xchg
cltd
lcall
in
mov
xchg
out
movss
out
lock
dec
cld
add
sbb
mov
jg
jecxz
mov
sub
out
cltd
fwait
mov
xchg
cwtl
mov
into
movsb
test
cmpsb
ret
mov
ret
push
pop
mov
sarb
mov
ror
cli
rol
ret
mov
inc
fbstp
sbb
inc
fdiv
jae
push
fnsave
dec
ljmp
xchg
pop
pop
js
and
jns
add
jbe
cmp
push
addr16
jns
inc
sub
push
arpl
add
push
adc
add
adc
scas
ss
adc
jle
and
cmp
addr16
sub
push
mov
sub
cmp
mov
cli
mov
push
add
leave
push
sub
cld
test
hlt
rcl
jo
call
aad
ret
or
loop
movl
fnstsw
cld
ja
in
icebp
std
xor
in
out
or
push
cli
out
or
cli
cld
sbb
ficompl
mov
ret
rolb
xchg
cltd
movsl
mov
cli
ja
xchg
mov
jnp
movsb
rorb
pop
mov
mov
iret
mov
push
push
mov
cmp
fisubrl
mov
xchg
dec
dec
jmp
push
inc
push
pop
ja
rcll
inc
jmp
shll
andb
mov
je
mov
jo
xchg
add
aad
add
lahf
neg
incl
pushf
movsl
inc
movups
stos
mov
movntps
lahf
sbb
or
sbb
sub
movsb
pusha
sub
inc
cmpsb
add
sub
xor
inc
das
and
mov
push
cmc
jecxz
les
or
aaa
rcl
pop
lds
popa
iret
shr
mov
mov
fstp
cli
xlat
cs
sti
inc
xor
in
or
call
stc
cli
push
xor
sti
pop
lcall
test
xchg
repnz
xchg
mov
xchg
xchg
xor
lret
mov
mov
mov
mov
pop
out
scas
lret
mov
mov
cmp
dec
sub
inc
dec
out
jns
dec
in
xchg
push
pop
gs
push
push
jb
bound
jno
arpl
cmc
pusha
gs
and
outsb
jae
mov
outsl
jo
je
jl
lea
std
lcall
sbb
orl
test
es
sbb
aaa
mov
pop
sbb
jge
sub
inc
inc
fistpll
push
lret
xor
inc
dec
fcmove
mov
mov
int3
rcrl
mov
into
push
and
iret
jmp
into
fcmovnu
clc
pop
fcmovnu
stc
insb
xor
ljmp
dec
pusha
out
add
jle
stc
add
adc
add
inc
scas
addl
mov
push
lds
nop
lods
pop
ficomps
pushf
sahf
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
fldt
jne
pusha
pusha
gs
adc
insl
pop
out
js
outsl
jo
dec
dec
push
aas
es
std
insl
mov
sbb
int3
jl
fsts
mov
das
out
and
pop
sbb
sbb
and
ljmp
xor
int
pop
sbb
cmp
xor
cmp
int3
inc
mov
out
repz
mov
lret
add
lret
inc
dec
cmpsb
fcmovnbe
rolb
repz
aad
push
and
adc
mov
loope
push
add
sub
imul
cld
icebp
jbe
imul
mov
ret
mov
mov
or
jne
add
lcall
mov
arpl
sahf
into
rcl
mov
mov
mov
inc
stos
icebp
push
mov
mov
aam
add
add
cmc
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
and
jbe
xor
add
xor
sub
dec
or
push
push
jo
aaa
xchg
dec
sbb
sbb
xchg
push
and
ljmp
mov
or
cmp
sub
mov
jge
ret
xlat
rol
lret
rcrl
call
outsl
rcl
out
jo
frstor
push
fcmovb
fsts
ljmp
and
stc
out
lock
adc
scas
add
jg
mov
shlb
mov
or
cltd
nop
mov
push
ficompl
xor
mov
movsl
fbld
dec
dec
dec
imul
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
test
jo
pop
scas
pusha
gs
or
sbb
test
jne
js
stc
insl
or
and
mov
clc
or
adc
adc
cltd
and
mov
dec
call
movb
xor
jmp
ss
xor
push
mov
popa
shl
lds
aam
std
cmp
faddl
in
or
push
fwait
cmp
cmpsl
mov
jmp
rclb
jmp
testb
incb
mov
andb
cmpsl
addl
xchg
mov
ret
mov
sahf
mov
out
leave
stos
lods
sarb
daa
imul
icebp
add
mov
jg
mov
mov
mov
inc
inc
dec
aas
push
xor
add
inc
in
rorl
or
pop
dec
push
call
lcall
pop
add
jecxz
xchg
je
sbb
jp
xor
outsb
js
addl
xchg
insb
ss
xchg
sbb
sbb
mov
pop
sbb
cmp
fwait
and
push
xchg
mov
fldl
fnstsw
cmp
inc
cmp
cmp
jle
dec
enter
cmp
sti
fs
sti
enter
out
sub
and
inc
push
sbb
hlt
push
sti
sbb
fstp
pop
fwait
imul
cmc
icebp
xchg
cli
sti
cld
repz
or
out
cli
jl
jg
repz
mov
lea
nop
add
ljmp
sahf
bndldx
cli
mov
sub
mov
sub
or
stos
cmp
lret
mov
int
inc
mov
sbb
mov
dec
mov
push
ret
lea
imul
ficoml
mov
jnp
outsb
fucomip
loopne
outsl
jo
lods
lret
cli
jns
ja
jp
stc
cli
xchg
jge
or
add
xorl
push
xor
adc
xchg
sbb
adc
inc
dec
inc
cmp
pop
and
lahf
call
jmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
js
xlat
adc
aaa
inc
dec
in
jp
pop
int
sub
pop
sbb
push
lea
pop
pop
pusha
loopne
pop
pushf
fsubrl
ja
jbe
repnz
outsl
xor
inc
cli
xor
ret
add
lret
mov
aaa
mov
mov
or
test
dec
mov
and
mov
push
mov
xor
fsubrs
xchg
pop
sub
cmp
cmp
mov
mov
lret
int3
jmp
ror
int3
roll
out
add
cld
inc
pop
aam
insb
or
repz
imulb
cmp
rolb
fs
idiv
outsb
mov
idiv
cld
cmp
out
mov
jmp
push
lea
mov
mov
nop
push
pop
mov
aam
fs
sahf
mov
cmp
ds
ss
mov
mov
fs
xor
mov
jp
outsb
outsb
inc
dec
dec
inc
int
dec
xor
dec
orb
andb
pop
pop
pop
in
outsl
movsl
test
nop
imul
int
popa
fwait
jb
movsl
push
jo
lods
jle
and
sbb
add
ljmp
xchg
js
popf
stc
xor
adc
lahf
add
inc
sbb
adc
xchg
pop
sbb
sub
sub
movsb
jge
sub
cmp
ja
sarb
in
pop
push
dec
mov
cmp
mov
int3
rcl
sbb
call
ret
sbb
push
jmp
iret
push
add
aad
push
or
icebp
repz
leave
iret
js
jle
imul
sbbb
cmpl
lcall
movsl
enter
xchg
and
aas
notl
lods
mov
shl
mov
mov
mov
mov
lds
inc
dec
inc
fmul
mov
out
popa
cmp
push
cmp
xchg
push
pop
pop
jecxz
mov
mov
fwait
cld
mov
addr16
add
cmpsb
addr16
jne
testl
mov
sub
add
adc
sub
dec
setne
test
mov
lret
push
shrb
sub
inc
cmp
test
inc
fsubp
mov
lret
pop
xchg
lret
int3
shrl
dec
into
cli
std
rcrl
int
push
pop
cltd
fucom
in
push
pop
and
push
add
out
mov
inc
cli
in
sub
repnz
jns
ds
mov
divl
xchg
mov
adc
cs
xchg
or
addr16
popf
sahf
cmp
in
and
and
mov
stos
inc
aas
xor
mov
mov
add
push
sub
mov
push
pop
adc
leave
xchg
cmp
push
ficoms
imul
pop
dec
aam
sbb
addr16
test
ja
imul
jp
or
pop
pop
cmp
js
pop
outsl
cmp
sbb
sub
mov
rol
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
jp
dec
mov
js
or
sbb
mov
or
xorb
jae
sbb
add
xchg
icebp
mov
or
sbb
and
adc
push
adc
and
repz
and
sbb
pop
dec
nop
sub
repz
aaa
cmp
sbb
mov
std
lret
or
mov
dec
pop
aam
push
adc
fisubrs
lock
loopne
adc
sbb
inc
jmp
mov
mov
cli
cmp
mov
mov
mov
add
inc
stos
popf
sahf
xor
mov
mov
lock
in
pop
lds
xor
xorb
sub
aas
inc
je
loopne
inc
inc
inc
into
dec
mov
dec
add
dec
std
push
push
xchg
xchg
push
push
repnz
int
les
fisubrs
sbb
sub
ja
push
cmc
sbb
aas
xor
aam
or
xchg
add
test
daa
push
sbb
xchg
dec
sub
sbb
sbb
cmp
and
sahf
sub
xor
mov
inc
xor
inc
aaa
cmp
xor
push
mov
push
lret
int3
ret
dec
xchg
pop
int
lds
fcmove
rolb
out
stc
sarb
pop
loopne
gs
repnz
or
in
gs
xchg
out
push
mov
cs
jne
idivl
mov
jg
stos
mov
add
inc
mov
or
mov
cwtl
popf
ret
cltd
nop
psubusb
jno
sbb
bound
mov
ljmp
icebp
les
ds
xor
mov
outsb
jo
add
dec
ss
mov
cwtl
push
mov
aam
bound
test
fwait
push
js
fwait
push
loop
arpl
je
jl
lea
mov
jns
and
repz
incl
clc
mov
adc
push
add
push
or
xchg
mov
and
pop
mov
push
cmpsb
nop
pop
pop
push
mov
xor
in
call
outsl
lods
mov
add
ljmp
int
lcall
mov
fsubl
out
push
in
fsubp
pop
pushf
rorl
lock
in
adc
loope
in
out
pop
push
in
out
repz
cmpb
ds
not
in
sbbl
xchg
inc
dec
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
push
mov
mov
jecxz
xchg
dec
sarl
sti
fs
add
enter
inc
or
cmc
mov
out
fcoml
jecxz
add
jecxz
sbb
test
dec
pop
sub
push
imul
mov
mov
scas
push
imul
sub
xchg
xchg
add
cwtl
cmpsl
jle
mov
fsts
sbb
sahf
mov
stos
mov
mov
pop
pop
scas
push
add
out
scas
jno
mov
les
into
roll
pushw
mov
dec
dec
subl
lret
jns
pop
push
jnp
jae
adcl
and
stos
or
in
arpl
push
or
pop
lods
outsl
outsl
clc
push
jns
jle
daa
nop
and
add
mov
or
movsl
enter
xor
sbb
adc
daa
and
xor
sub
jecxz
test
js
sub
inc
mov
stos
in
mov
cmp
leave
lret
add
push
rcl
add
dec
push
add
push
adc
int3
sbbb
imul
je
cmp
in
cli
repnz
test
jg
push
cmc
mov
lds
mov
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
xorl
jmp
sub
jne
aaa
bound
subb
inc
mov
outsl
cmp
jnp
lcall
mov
sub
adcb
cs
and
cwtl
fcompl
jae
imul
daa
sub
movsl
data16
mov
aas
stc
mov
cmp
in
std
adc
into
rolb
in
fimull
dec
pop
gs
loope
sub
lock
test
xchg
cmp
lods
sbb
out
clc
mov
mov
insb
mov
push
ret
sub
lret
cltd
xorb
lcall
shll
mov
stos
lods
popf
out
imul
jmp
xor
jne
mov
dec
outsl
mov
dec
sbb
xchg
push
inc
rclb
arpl
fldenv
pop
pusha
ljmp
mov
sbb
jp
inc
jns,pn
jno
out
mov
add
jle
add
adc
xchg
inc
cmpsl
adcb
push
sbb
sub
mov
pushf
mov
sbb
inc
ljmp
icebp
pop
shl
mov
cld
mov
iret
roll
inc
dec
sbb
or
add
jbe
push
pop
or
fnstsw
jl
push
and
adc
repnz
idiv
cld
xchg
cmpsb
adc
ja
inc
mov
jle
mov
mov
mov
lcall
adc
insb
cltd
lcall
mov
sub
out
divb
sbb
inc
ret
les
adc
movsb
outsb
lock
inc
mov
push
loopne
mov
jg
shlb
push
pop
divb
popa
arpl
sbb
push
pusha
insb
jno
ljmp
jp
jo
mov
addb
sub
ss
jge
adc
xor
stos
jl
or
dec
xor
push
push
sbb
push
xor
cltd
mov
pop
dec
mov
sub
cmp
and
inc
inc
rclb
out
ret
lahf
add
add
into
rclb
fcmovnu
push
xchg
rcrl
loop
adc
popa
sbb
loop
sbb
xor
je
testb
incl
add
mov
hlt
add
addb
fmuls
rclb
or
fcomps
adc
sahf
and
cmpsb
cs
aad
sbb
pop
pop
push
scas
push
add
out
scas
gs
xchg
mov
test
sub
mov
dec
aad
js
rcrb
pop
push
push
cmpb
cmp
sahf
adc
fidivrs
pusha
gs
jmp
or
outsl
and
jno
test
add
out
add
adc
movsl
js
pop
sbb
sbb
pop
push
push
cmp
push
push
and
xor
in
mov
sbb
aaa
jmp
into
in
mov
aad
ret
leave
cmp
daa
enter
or
std
data16
psubusb
push
xchg
and
or
in
jne
shl
jmp
jle
and
addr16
jmp
idiv
mov
std
test
mov
mov
ja
mov
or
mov
or
mov
incb
ficompl
popf
lahf
pop
sub
mov
mov
sub
loopne
mov
ror
jns
aaa
push
lods
ds
inc
mov
mov
sub
test
in
mov
iret
adc
arpl
filds
add
gs
adc
mov
hlt
jl
jmp
cld
jae
js
int
idiv
cli
in
stc
xor
jle
roll
or
cltd
jmp
pop
cmp
sub
sbb
sbb
ljmp
fstp
jecxz
jmp
imul
push
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
fisubrs
dec
xor
ret
jmp
fbstp
testl
int
push
cltd
rolb
int
pushf
pop
stc
loopne
adc
roll
mov
repnz
fs
jmp
cmc
nop
jno
add
test
les
xchg
test
mov
sub
bound
fcompl
push
push
mov
sub
sahf
idivb
mov
mov
dec
cld
cmpl
dec
je
enter
dec
js
jge
xor
test
sub
mov
pusha
dec
add
mov
lock
sbb
out
dec
ja
jne
sub
jno
xor
cmpsb
std
incb
sbb
js
add
pop
out
and
inc
pop
lea
mov
inc
push
inc
and
insl
lcall
sub
sub
gs
stc
inc
cmc
xor
int3
mov
leave
lret
mov
into
fsubrs
fsubrl
dec
xchg
xchg
aad
fistl
imul
imul
sti
lods
in
jmp
lea
inc
or
push
sti
cld
jae
mov
aaa
mov
mov
mov
outsb
fdivr
movb
mov
rorb
mov
xchg
es
lahf
sarb
and
les
lods
scas
mov
into
xchg
jbe
ret
mov
dec
dec
xchg
or
rorl
icebp
inc
hlt
push
push
pop
arpl
sarl
data16
loop
gs
mov
repz
pusha
lods
outsl
outsl
cmc
dec
bound
sbb
mov
rol
mov
leave
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
adc
push
jo
js
adc
mov
mov
mov
cltd
mov
dec
push
aam
add
fistps
adc
movsl
and
sub
and
sub
mov
mov
and
pop
cmp
aas
inc
inc
inc
into
in
cmp
lret
sbb
push
movsl
adc
pusha
jmp
hlt
popa
popa
pop
push
in
jno
ljmp
jp
xchg
cli
loope
addl
cmp
jl
adc
mov
dec
or
mov
mov
sub
sub
push
imul
xor
ljmp
fldl2e
sub
mov
mov
add
testl
repnz
aam
or
xchg
ljmp
fstp
mov
repz
cwtl
sahf
out
jbe
mulb
in
cmp
xchg
cmp
xchg
dec
addl
xor
inc
xchg
or
loopne
and
lods
mov
fisubrl
xor
fildll
push
mov
mov
mov
mov
bound
out
cmp
pop
and
jl
jo
adc
cmp
lds
pop
push
pop
jmp
insb
pop
dec
add
mov
pop
jecxz
imul
addr16
in
stos
jbe
jb
ja
xor
add
mov
cmp
ret
or
jg
dec
sbb
sub
adc
lea
push
cmp
test
push
stos
imul
inc
scas
imul
jg
mov
inc
mov
rcl
jno
push
ror
push
xchg
inc
aad
fisttpl
negb
jmp
jmp
in
pop
sub
jmp
test
lock
imulb
js
fwait
inc
sarb
test
xchg
adc
mov
xchg
xchg
lret
mov
fistl
out
test
mov
sbb
xlat
mov
scas
mov
cmpl
dec
xor
pop
xlat
inc
inc
mov
sti
dec
dec
push
ja
scas
repz
push
ret
push
push
push
sub
sahf
fdivs
ljmp
jne
fiaddl
mov
jne
mov
jne
fnstsw
pop
cltd
add
cmc
jp
pop
add
cmp
mov
sbb
adc
pop
pop
pusha
lea
xchg
dec
cmp
stos
inc
mov
and
jp
pusha
xor
hlt
pusha
imul
push
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
jo
imul
sbb
stos
inc
and
mov
mov
repz
out
outsb
cmp
adc
sub
pop
or
xchg
or
int
sahf
or
or
cltd
bound
fwait
jmp
daa
mov
xor
xor
mov
aas
xor
shrl
inc
mov
xlat
mov
add
cs
lods
xor
jb
cmp
nop
adc
fidivrl
sbb
xchg
push
hlt
fstl
loopne
gs
push
jbe
and
frstor
cld
test
idiv
lods
imul
addl
or
mov
pop
mov
xor
test
stos
out
pop
sub
lods
scas
mov
sbb
cwtl
idivb
mov
mov
xchg
cmp
inc
outsb
jp
inc
cmp
out
xchg
ljmp
mov
arpl
test
fbstp
lcall
in
push
ljmp
jp
ljmp
dec
xchg
pushl
jno
mov
rcrb
sub
adc
lea
adc
sbb
and
and
mov
mov
cmp
lods
test
loopne
inc
mov
rol
sarl
ret
lret
int
dec
add
sbb
imul
in
cs
or
sub
cmpsb
shr
jmp
xor
mulb
stos
mov
xor
notb
js
inc
outsl
repz
jp
addl
mov
les
mov
lahf
mov
out
push
jecxz
loop
das
adc
mov
mov
mov
int
addl
aaa
in
xchg
je
adc
repnz
xchg
dec
xchg
mov
imul
test
fisubrs
jno
addr16
jmp
jbe
adc
imul
js
jmp
push
or
add
push
or
cmp
hlt
pusha
fld
adc
xchg
lcall
ficomps
and
bound
mov
cmp
movsb
cmp
call
aaa
inc
mov
lret
neg
xchg
adc
dec
cmp
test
sbb
jbe
add
ja
loopne
fldpi
shlb
sub
pop
cmpsb
xchg
xchg
xchg
movsb
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
pop
mov
pop
sbb
inc
dec
inc
mov
jmp
sbb
popf
dec
test
daa
cmpsl
add
leave
sbb
xchg
addr16
lcall
shrl
imul
fcmove
rclb
fisubl
jp
fcomp
fsubp
lret
jno
sbb
stos
fistps
addr16
xorb
mov
stc
mov
xor
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
ret
sbb
int
or
sbb
popa
sti
aam
dec
lcall
xor
stos
pusha
mov
aad
rcl
addb
add
mov
pop
loopne
dec
push
test
xchg
or
push
xchg
xchg
pop
into
fwait
adc
aad
subb
add
sbb
jbe
idiv
js
xchg
add
or
int3
fsts
hlt
dec
or
push
jmp
adc
fisttpl
mov
mov
and
pop
pop
cs
cmpsl
movsb
jno
test
push
xchg
xor
xor
pop
in
sub
add
ffreep
sti
out
inc
dec
js
iret
sar
or
ret
sbb
push
adc
jno
pop
push
mul
out
adc
loop
imul
cs
add
or
cmc
idivb
ljmp
adc
xchg
scas
and
cmpsb
and
mov
iret
popf
fistl
mov
xchg
popf
sahf
cmp
fwait
popf
sahf
sarb
cmpsb
stos
out
aad
cmpsl
push
xchg
mov
jp
mov
test
xor
pop
mov
insl
lods
mov
inc
dec
dec
aad
jbe
nop
in
push
push
lret
adc
push
push
pop
iret
push
push
jmp
push
fs
gs
xchg
jl
mov
std
dec
mov
outsl
divb
loope
insb
mov
jne
mov
jle
add
pop
push
sub
sbb
sti
jno
push
adc
push
pop
pop
lea
fs
addr16
imul
cmp
xor
shll
inc
sbb
idivl
rclb
jg
rcl
dec
aad
push
ret
inc
adc
push
xchg
ficoml
jmp
js
or
mov
cwtl
popf
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
repnz
out
rcr
leave
push
in
lds
fs
xor
cwtl
jmp
mov
cmp
jne
add
cmp
adc
add
leave
lret
int3
rcl
mov
outsb
and
push
mov
movsl
push
sbb
cmp
cmpsl
iret
lcall
mov
repz
cmp
scas
lds
mov
jmp
call
adc
push
xchg
out
pop
jae
loope
pop
leave
xchg
push
sub
in
or
in
out
data16
in
dec
mov
dec
mov
clc
test
repnz
out
add
mov
les
sbb
xchg
sbb
or
lahf
xor
stos
xor
mov
es
lods
scas
ss
jp
sub
pop
stc
mov
aad
addl
jno
and
and
dec
aad
dec
push
leave
loop
xchg
push
push
jmp
outsl
inc
js
xchg
push
test
jb
pop
pop
cmpsb
xor
lods
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
fbld
cmp
dec
push
jne
cmp
call
cs
mov
jo
int
inc
iret
int
mov
iret
push
pop
shl
and
loopne
aad
push
or
out
sbb
imul
mov
incb
std
inc
outsb
dec
cmp
or
xchg
xchg
pushf
xchg
mov
xchg
xchg
xor
mov
mov
leave
nop
out
stos
lods
inc
pop
adc
inc
mov
mov
inc
inc
pop
xchg
cmp
inc
sarb
mov
ficompl
dec
lock
pop
ja
out
lock
inc
mov
pop
movsb
jcxz
xor
inc
mov
xor
sbb
xchg
add
and
js
pop
sbb
cmpsl
sbb
and
mov
sub
push
xor
xor
xor
jmp
xor
inc
mov
leave
push
int3
shl
ljmp
fcmovnbe
aad
jb
pop
aam
pop
mov
loop
fisubs
das
xchg
pop
push
mov
mov
idiv
xchg
jmp
cmp
cmp
std
shll
jle
pop
hlt
shrl
mov
into
xchg
add
dec
inc
nop
lods
cltd
jp
nop
lds
adc
pop
pop
mov
mov
dec
add
mov
dec
aas
cmpsl
jae
shlb
inc
mov
pop
test
sbb
rorl
sub
repz
inc
bound
jne
sahf
addr16
push
adcb
jb
fs
das
dec
jb
cld
mov
insl
cmp
loopne
or
das
xor
adc
or
into
jg
sbb
cmp
fstpl
jg
and
and
push
stos
stc
and
aad
out
mov
add
lret
mov
movb
inc
psubusw
std
in
rcl
jne
dec
sbb
or
ljmp
cltd
test
fdiv
imul
les
mov
mov
out
jg
cmp
bnd
mov
lods
rep
dec
shl
pop
test
shll
xchg
sub
inc
jne
push
das
jne
fidivrs
sbb
clc
mov
inc
pop
scas
clc
out
push
add
je
push
dec
dec
aas
fsub
push
sub
nop
mov
ret
ljmp
dec
fcompl
arpl
sub
fucomip
mov
inc
mov
push
outsl
loop
cmp
aaa
nop
cmpb
insb
cmp
call
mov
add
or
inc
lods
mov
adc
sbb
ljmp
xor
mov
inc
sub
loopne
in
inc
push
icebp
mov
add
mov
mov
movl
aad
cli
or
in
daa
aad
jb
jbe
dec
sbb
adc
es
ljmp
out
mov
lock
jg
cmc
mov
stc
add
cld
ja
and
or
sub
xchg
cwtl
int3
mov
or
arpl
jge
and
test
mov
mov
icebp
daa
xor
mov
and
inc
stc
popa
push
cmpsl
addb
in
xchg
inc
inc
int
dec
aam
push
dec
enter
sbb
xchg
data16
cmc
in
pusha
gs
xorb
fs
fisubrl
imul
mov
imul
je
stc
insl
out
ja
push
adc
std
or
cmp
sub
or
sbb
sub
push
adc
pop
and
mov
add
scas
insb
xor
test
sti
loopne
pop
mov
mov
cmp
inc
test
or
int
dec
adc
iret
loopne
jno
pop
adc
add
in
insb
mov
aad
repz
sbb
jo
adc
xchg
add
cltd
incl
scas
cwtl
dec
jbe
mov
cmp
adc
mov
push
adcl
fwait
xor
push
in
test
mov
icebp
iret
and
fcmove
lahf
aad
out
inc
mov
dec
rorl
xor
mov
addr16
pushf
pop
pop
xchg
pop
pop
in
gs
ljmp
test
test
sbb
and
jno
incl
adc
fwait
ljmp
aas
sub
mov
jmp
sbb
data16
std
adc
pushf
mov
adc
int
loope
fstp
insb
sti
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
bound
adc
mov
mov
cmp
push
pusha
cmc
dec
xchg
cwtl
popf
sbb
testb
aas
test
fsubrs
mov
cmp
cmp
pushaw
bound
sti
cld
add
idiv
std
incb
add
or
add
jl
lret
in
inc
fstpt
arpl
mov
insb
jb
jg
sahf
outsl
jo
sub
mov
jl
outsl
lahf
adc
sub
or
or
or
mov
sbb
and
inc
inc
jecxz
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
push
ss
cmp
out
aaa
inc
mov
ucomiss
sti
adc
sbb
int3
into
sbb
cld
add
insb
sbb
mov
pop
fucomi
adc
sub
cwtl
push
sti
xchg
sarl
sti
lods
sbb
jnp
in
testb
decb
push
push
fcoml
pop
ja
pop
stos
xchg
das
push
cmp
jmp
scas
xlat
mov
scas
dec
push
pop
sub
inc
lods
xchg
clc
mov
cmp
dec
dec
imul
push
js
call
dec
iret
fcoms
pop
pop
arpl
dec
lea
push
data16
push
js
sbb
fsubr
addr16
outsl
and
cmp
mov
mov
mov
mov
leave
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
aad
inc
mov
ss
pop
cmp
mov
mov
jae
lret
inc
or
fidivrs
inc
pop
ficoms
cld
inc
xor
loopne
stos
xlat
stc
push
popa
push
jmp
lock
push
jb
add
sahf
mov
mov
jnp
mov
orl
fwait
pushf
prefetcht1
scas
dec
dec
lahf
mov
gs
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
jno
fadd
loop
dec
push
push
ror
push
push
push
jp
push
push
jnp
iret
loop
bound
sbb
sarb
dec
cmpsl
pop
loopne
fs
test
and
jae
div
clc
pop
sahf
add
or
int3
int3
rorb
and
add
je
push
into
push
and
or
push
pop
and
out
pusha
xor
mov
outsb
xor
sub
cmp
push
sub
lret
lea
pop
lret
int
in
push
sub
and
lret
lea
pop
in
mov
jecxz
imul
xor
repnz
stc
cli
or
in
jecxz
add
cmpsl
nop
sub
lock
jno
fcmovbe
mov
jecxz
xchg
push
adc
fiadds
int3
stc
test
mov
stos
scas
dec
test
rcr
loope
mov
lock
scas
jnp
jp
pop
or
pop
mov
test
mov
mov
inc
adc
mov
imul
fnstenv
jns
rorb
ja
add
sub
xchg
mov
out
cli
xor
xor
adc
add
adc
arpl
adc
cltd
and
sbb
push
cmp
int
and
sbb
xor
sub
fbld
lahf
xchg
jle
cmp
test
fstpt
lods
ud0
jmp
hlt
imul
fcmovu
loope
fwait
aam
mov
rcl
sub
pop
fs
call
roll
lock
mov
mov
push
inc
ret
out
push
jle
push
dec
ja
test
iret
int3
lea
jns
sbb
fwait
pushf
mov
loop
mov
es
daa
or
out
in
lods
push
pop
mov
push
div
mov
scas
mov
std
lahf
test
or
les
dec
dec
push
or
cmp
ds
pushf
pop
int
pusha
cltd
notl
stos
imul
cmpsl
push
push
outsl
sub
in
les
rolb
jnp
sub
adc
pop
dec
sbb
xchg
outsl
adc
sbb
push
pop
and
xor
adc
leave
sahf
adc
sub
cmp
add
ss
mov
dec
jge
ret
idivl
into
xchg
loopne
push
iret
push
pop
pop
in
mov
xchg
in
cwtl
das
test
xor
out
xor
inc
mov
fisttpll
shll
stos
pop
rclb
or
orl
xchg
adc
test
in
fildll
scas
sub
in
lods
scas
mov
mov
mov
lret
inc
jo
mov
dec
imul
dec
test
int
pop
pop
arpl
pop
lea
adc
loopne
lds
mov
jb
scas
jns
and
sbb
mov
lock
or
or
dec
or
enter
or
cs
adc
push
insl
pop
sbb
sub
test
pusha
sub
aas
xor
in
stos
sbb
xor
inc
inc
call
leave
aas
cmpl
mull
jg
aad
clc
clc
mov
mov
nop
xchg
xchg
fwait
pushf
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
pop
cmp
mov
cltd
jge
lods
add
hlt
add
into
rclb
frstor
iret
sbb
in
sbb
fucom
dec
push
pop
es
xor
fisubrs
icebp
test
mov
add
lock
inc
outsl
mov
inc
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
enter
lods
xchg
int
dec
lahf
mov
mov
sub
push
aas
mov
mov
inc
xor
adc
mov
orl
mov
mov
pop
pop
loop
insl
xchg
mov
inc
movsb
in
jmp
adcb
jne
cli
jo
mov
mov
or
nop
rolb
add
inc
or
xchg
push
ret
lahf
loop
adc
xlat
mov
xchg
inc
and
ret
pusha
es
and
ficomps
fdivl
xchg
ljmp
jb
push
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
add
push
hlt
cmp
adc
in
cmp
xchg
fwait
sub
pop
loop
xor
repz
incl
mov
sbb
repnz
andb
add
sub
xchg
sub
shll
and
popf
sub
mov
mov
ljmp
and
stc
mov
jae
lods
shlb
mov
dec
ja
jge
leave
push
call
and
pop
pop
pop
arpl
fldenv
insb
push
xor
xor
adc
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
dec
xchg
cmp
adc
sbb
sub
fcomp
jmp
fidivrs
mov
cmp
add
stos
mov
add
fildl
jbe
pop
pop
lret
int
jl
fxch
iret
rorb
push
cld
cmpb
add
test
test
xchg
add
cli
xchg
jmp
adc
repz
cltd
jmp
mov
scas
add
cltd
add
xchg
sub
mov
aaa
or
jnp
sub
pop
dec
jne
fidivrs
mov
adc
repnz
xor
subl
insl
ficompl
dec
dec
mov
jl
scas
add
fs
in
iret
cwtl
push
mov
jecxz
jmp
mov
repz
jae
shr
mov
push
outsl
add
or
jb
stos
insl
or
or
add
outsb
ja
adc
lea
setbe
xor
outsb
push
adc
and
sub
lcall
xor
test
movsl
lret
movsb
push
xor
mov
lret
int3
rol
mov
enter
and
fimull
sub
cli
lret
xchg
fcmovu
fs
int
push
js
out
in
pop
imul
movsb
adc
inc
repz
jnp
push
jp
orb
cmc
mov
setge
xchg
xchg
mov
test
arpl
dec
inc
imul
mov
push
push
scas
push
test
pop
mov
cmp
sub
dec
inc
pop
arpl
scas
or
and
js
inc
repz
sbb
nop
scas
pop
add
adc
and
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
cli
lock
loopne
sbb
sbbl
repnz
jmp
mov
addl
das
pop
lods
mov
iret
xchg
jbe
mov
pop
lods
cld
jmp
in
lahf
sahf
mov
js
cmpsb
sub
cmpsb
pop
in
lods
scas
and
or
mov
rcrb
or
inc
dec
ja
dec
fildll
add
push
jg
bound
rorl
xor
xchg
insb
push
dec
loop
insb
mov
outsl
jo
stc
dec
mov
and
cmpb
insl
jbe
pop
or
orb
mov
push
mov
inc
xor
fisubl
sahf
loop
cltd
xor
sub
mov
sub
mov
das
out
popf
pop
mov
inc
inc
iret
jge
shrb
xor
aam
cmc
xor
sub
pop
nop
rcll
lock
movsb
es
loope
out
out
out
jns
addr16
icebp
cmc
imulb
clc
std
test
dec
jl
test
scas
inc
lea
add
mov
popf
enter
popf
sahf
enter
sbb
movsl
push
and
loop
mov
popa
push
jl
pop
cmp
addb
roll
inc
jnp
push
pop
inc
dec
int
push
push
pop
dec
jnp
pop
arpl
int
and
insb
nop
loopne
fildll
jae
sbbb
je
mov
sbb
jnp
xorl
jns
in
or
in
adc
xchg
mov
sbb
sbb
pop
pushf
pop
inc
lds
sub
dec
cli
xor
sub
rolb
mov
xor
shlb
addr16
filds
fs
fmull
jmp
fstl
ds
popa
xchg
mov
movsl
jp
pop
sub
call
inc
sub
pushf
clc
and
nop
jbe
imul
ret
xorb
xchg
mov
leave
xor
lahf
or
repz
lcall
daa
jno
test
loope
cmp
imul
mov
insb
negl
dec
xor
add
dec
dec
xor
or
pop
pop
in
outsl
add
pop
pusha
repz
push
dec
imul
sub
lahf
mov
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
sub
mov
push
int
rol
xor
push
scas
lret
outsb
lods
mov
mov
push
nop
icebp
mov
mov
xor
mov
cmp
jnp
inc
inc
mov
adc
or
add
das
xchg
push
adc
ret
and
popa
orb
mov
xor
getsec
pop
int3
mov
sbb
jecxz
divl
clc
adc
xor
pop
or
test
lcall
sbb
dec
cmp
int3
dec
jo
das
lret
mov
jbe
sub
das
mov
jmp
aaa
cmp
ds
jnp
sbb
jle
aas
dec
lcall
or
push
clc
and
loope
sbb
ljmp
push
es
push
jae
adc
imul
idiv
movsl
in
stc
lret
push
jp
orb
or
fistl
jmp
pop
lods
mov
lahf
mov
pushf
mov
mov
sub
iret
inc
insl
add
in
jp
mov
data16
jl
lods
mov
inc
dec
dec
jne
jbe
mov
jle
ss
test
nop
repnz
movsl
push
push
pop
cmpsb
and
out
inc
mov
or
ret
outsl
cltd
cmpl
sub
jns
xchg
lcall
cld
pop
cmp
xor
orl
adc
fwait
iret
or
add
push
imul
and
jb
loope
stos
or
push
lock
cmp
inc
insl
mov
insl
lret
sarb
lret
mov
xbegin
or
sub
fstp
jp
mov
inc
inc
fsubp
data16
dec
aaa
mov
jp
sahf
frstor
idiv
cld
icebp
mov
stos
jmp
ss
mov
xchg
jne
or
mov
push
xchg
xchg
adc
inc
push
xchg
sti
pusha
xchg
sahf
mov
add
cmpsb
test
cmp
mov
shrl
or
test
inc
inc
push
repz
or
js
push
aas
mov
lea
add
mov
bound
loopne
pusha
data16
pop
gs
mov
and
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
or
push
cmp
bound
pushf
and
les
dec
sub
xor
mov
mov
nop
repz
xlat
aam
stos
dec
ret
insl
push
les
pop
inc
mov
cld
stos
xchg
in
xor
push
call
scas
push
pop
cmc
aas
arpl
in
dec
stos
imul
pop
add
jb
ljmp
xor
pop
and
rol
mov
leave
lret
int3
rcl
enter
aam
fcmove
rcl
push
cwtl
cmp
inc
sub
xor
fst
xor
ja
cmp
lods
inc
lret
pop
test
aas
xorl
dec
or
push
sbb
add
pushl
mov
xlat
push
pusha
fsubp
in
sbb
in
sbb
dec
out
xchg
fisubrs
clc
cld
icebp
bnd
lods
decb
sbb
dec
bound
inc
pop
xchg
xchg
out
into
sbb
mov
push
push
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
stos
into
mov
mov
fidivl
sub
adc
pop
dec
push
adc
xchg
nop
popa
loop
pop
icebp
push
std
in
pusha
gs
pushf
mov
shrl
daa
loopne
fwait
mov
inc
xor
test
cmc
cs
cmp
das
icebp
lret
cmp
fisttpl
cmp
dec
or
pop
sub
shl
sbb
cmp
sbb
enter
call
pusha
imul
push
jns
outsl
jo
jbe
jl
xorb
aas
arpl
dec
rcl
int3
add
imul
in
add
in
push
and
in
scas
out
lock
xor
cmp
stos
repnz
scas
mov
pop
xor
lods
jbe
inc
rclb
push
mov
sahf
sub
movsb
cmpsb
xor
repz
cli
push
and
and
or
mov
mov
xor
dec
int3
mov
cwtl
mov
xchg
inc
scas
add
repnz
in
rcll
mov
sub
sbb
xor
jecxz
je
in
daa
orl
cli
add
or
xchg
out
or
lea
adc
sbb
lahf
pop
push
xchg
loop
aas
into
fstp
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
mov
add
aas
rcl
rcl
fstps
stos
pop
sbb
push
out
sub
cmp
add
adc
outsl
inc
push
cwtl
hlt
jl
push
lock
bound
mov
lods
adc
addb
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
push
jb
shlb
mov
mov
pop
sub
inc
and
push
mov
xchg
jne
inc
out
popa
stc
push
cmp
idiv
std
incb
add
or
add
jb
push
popa
rcrb
pushf
add
jg
outsb
jae
imul
cmpsb
push
mov
subb
divl
mov
stc
std
incl
sbb
cmp
or
setbe
xor
push
adc
and
xor
lahf
jecxz
movsl
in
sub
xchg
sbb
cmp
dec
inc
xchg
aas
inc
cmp
xor
mov
enter
int3
push
adc
adc
pop
pop
push
sbb
gs
push
cmpsl
jne
loopne
jmp
bnd
push
popa
push
ljmp
mov
mull
bound
mov
mov
xchg
mov
pushf
adc
cltd
adc
mov
in
xor
test
jmp
pop
enter
mov
push
into
push
sub
jmp
js
push
pop
jg
sub
pop
pop
pop
jp
sbb
in
dec
test
push
imul
cmp
and
pop
std
aaa
and
mov
mov
mov
leave
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
incl
add
incl
pushf
lock
and
lahf
dec
ficompl
fimuls
in
movhps
jmp
icebp
cwtl
popf
sahf
ljmp
sub
cmp
inc
test
fs
jnp
scas
pop
jle
lods
mov
adc
push
nop
xchg
sbb
xchg
ret
movsb
lcall
aaa
mov
push
mov
out
sub
inc
icebp
mov
mov
pop
in
clc
hlt
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
pop
in
pop
jo
sbb
gs
imul
aam
push
mov
mov
das
sar
outsl
sub
add
mov
cmpl
or
mov
insb
shl
xor
xchg
and
jo
addr16
scas
inc
into
iret
mov
jmp
jno
addr16
jns
hlt
ljmp
cmpsl
iret
rorl
adc
les
repz
sub
or
adc
negb
loop
jae
daa
cwtl
sahf
add
out
fwait
js
mov
jnp
ret
xchg
jge
sbb
mov
jecxz
mov
lods
dec
push
popf
sahf
enter
sub
cmpsl
test
test
and
dec
pop
imul
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
lret
pop
xlat
gs
xchg
push
mov
pop
mov
push
pop
daa
test
mov
in
stos
sub
test
fnstcw
cmp
mov
xor
push
mov
lret
dec
ret
pop
shll
int3
dec
fbld
fistpl
sbb
jecxz
push
push
imul
mov
stc
pop
loope
cmc
fs
jg
arpl
xchg
insl
adc
adc
iret
mov
icebp
aas
xchg
adc
sti
xor
sub
movsl
scas
xor
cmp
lods
or
or
aas
rcll
cmp
popf
lret
inc
lds
in
dec
int
fists
mov
int3
and
mov
outsl
movsl
cmpsb
test
sub
insb
pop
test
mov
and
mov
jnp
in
das
inc
dec
into
adc
cltd
sbb
rcl
push
push
gs
pop
sahf
lods
daa
jmp
cmpsb
mulps
leave
mov
scas
repnz
jo
jne
and
push
fbstp
je
stc
mov
cli
incl
enter
out
fistl
dec
mov
lcall
push
mov
and
sub
cmp
in
daa
sub
pushf
sbb
sub
xor
xor
cmp
inc
xor
add
mov
addl
into
rcl
flds
cltd
aam
fisttpll
pushf
fcmovnu
loopne
inc
into
jb
cmp
aaa
insb
ficomps
popa
imul
std
lock
xor
cli
mov
cli
das
mov
popf
pop
cli
dec
xchg
fwait
pushf
or
mov
xchg
ljmp
lcall
test
mov
movsl
sub
mov
or
jb
bound
pop
xor
imul
or
clc
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
inc
push
dec
pop
ret
int
push
int3
cli
add
scas
fcmovnu
dec
repnz
cmpsl
xor
loopne
jae
lock
out
cltd
lcall
mov
cmc
sarl
popa
test
ret
sub
xchg
mov
mov
mov
mov
sbb
loopne
jmp
ds
sahf
sub
movsl
scas
int3
mov
xchg
test
or
inc
inc
int3
add
jns,pn
int3
push
push
push
push
fiadds
xchg
rcr
mov
xor
jae
jae
in
xor
pop
jmp
je
jno
mov
inc
jle
test
inc
xchg
dec
dec
push
or
sub
pop
out
pusha
add
pop
or
mul
or
adc
pop
and
mov
xchg
addr16
mov
mov
xor
pushf
cmp
xor
xor
mov
cmp
int3
rcr
int
roll
aam
gs
mov
inc
push
iret
sbb
pop
iret
fisubrs
push
pusha
out
in
in
sbb
lods
out
xchg
cwtl
popa
sub
sahf
fisubrs
hlt
cld
icebp
bnd
lods
decb
test
add
inc
iret
lret
xchg
or
xchg
lret
movsl
mov
fidivrl
add
xchg
mov
jno
cmpsb
icebp
xor
inc
push
xor
dec
sub
cmp
dec
inc
inc
jnp
cltd
test
adc
inc
mov
xlat
sbb
cli
pop
aas
lahf
pop
fcompl
imul
stos
push
js
lock
sar
out
jnp
stc
cli
dec
or
push
or
mov
mov
cwtl
test
mull
pop
aaa
int3
xchg
sub
rcrb
xor
jge
cmp
dec
mov
int3
roll
into
shl
pusha
scas
cltd
rcl
dec
mov
ror
cmpsb
fcoml
loope
sbb
cs
stos
cld
js
lock
adc
mov
or
pop
icebp
push
add
xchg
lcall
mov
pushf
fstp
dec
ret
mov
scas
aam
and
mov
loopne
mov
pusha
stos
aaa
mov
mov
dec
outsl
inc
cwtl
sbb
dec
ljmp
imul
pop
arpl
sbb
test
mov
gs
jmp
gs
test
je
sbb
or
es
xchg
add
dec
or
ficoml
call
inc
dec
xchg
leave
or
dec
mov
xor
inc
ficomps
fwait
jnp
mov
xor
dec
inc
mov
out
aas
dec
push
int
add
lahf
and
rcl
jno
xchg
rcl
pop
pop
dec
pop
out
fcmovu
adc
xlat
mov
loope
gs
out
cwtl
jecxz
in
out
repz
mov
clc
std
cmpsl
mov
mov
xchg
std
leave
xchg
adc
or
mov
popf
xchg
xchg
movb
mov
movsb
cltd
xor
fidivl
push
sbb
mov
stos
scas
mov
aaa
std
mov
mov
enter
and
mov
ja
scas
pop
push
push
lret
imul
pop
shl
push
repz
mov
lock
loop
insl
mov
adc
jge
jb
xlat
rcrb
xor
cltd
add
add
adc
imul
sbb
add
into
cmpsb
test
mov
sub
mov
cs
mov
or
mov
inc
dec
lret
sti
cmpsl
fwait
aam
out
ds
add
call
imul
pop
in
ljmp
std
or
icebp
stos
push
lods
add
idiv
ljmp
add
pop
ret
mov
mov
popf
lcall
in
mov
movsl
cltd
lcall
scas
mov
cmpsl
loope
mulb
es
aaa
lods
stc
mov
or
add
jae
mov
dec
subl
inc
rcll
pop
push
push
mov
aad
cltd
pop
fcom
jae
imul
loop
arpl
pop
imul
jge
cmpsb
daa
ja
incb
flds
fisttpll
or
pop
sbb
pop
dec
xor
call
cmpsb
cmp
adc
imul
mov
fidivl
mov
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
cli
dec
aaa
dec
scas
pop
jo
outsb
std
imul
mov
lret
sbbb
push
inc
inc
inc
dec
dec
push
push
cwtl
and
lcall
nop
popf
lahf
dec
dec
sti
bound
mov
sub
in
jmp
icebp
repnz
test
mov
jo
pop
pop
pop
lret
movb
fidivrl
pop
pop
enter
cmovs
jmp
pop
gs
push
nop
js
lret
push
sti
jb
bound
fildll
bnd
mov
roll
sarb
push
cmc
add
and
xor
mov
jb
sub
push
nop
rcrl
lods
pop
lcall
ss
lods
in
fcomp
imul
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
rcr
leave
pop
push
and
fs
jmp
inc
and
es
xor
mov
xor
sub
mov
loope
addb
jecxz
xchg
dec
push
push
in
xchg
dec
bound
xlat
xchg
pop
add
cwtl
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fistps
xor
sbb
jns
mov
fidivrl
aam
jge
movl
ds
nop
data16
mov
xlat
cwtl
jbe
gs
push
insb
adc
popf
arpl
push
cld
insl
adc
cmc
mov
jg
adc
mov
test
scas
mov
mov
mov
mov
mov
stos
jnp
sbb
inc
cmp
popf
pop
mov
xor
xchg
das
lret
mov
int
gs
mov
cmp
cmpsl
das
or
mov
add
sti
dec
aas
mov
rcl
inc
pmullw
fadd
pop
inc
fcmovnu
loope
mov
jle
paddsb
out
add
add
in
mov
cld
icebp
pushf
mov
shll
jle
test
test
inc
jae
xchg
or
sub
sahf
sub
movsb
lret
fidivl
push
pop
loop
daa
xor
mov
mov
pop
enter
mov
cmp
dec
push
dec
fnstsw
ja
lods
and
xorb
ror
repz
pop
arpl
addr16
mov
push
jbe
and
jg
sbb
add
mov
or
orl
lods
or
sbb
pop
adc
ret
and
aad
out
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
js
jle
test
stos
cmc
decb
es
xchg
fwait
sub
pop
mov
jbe
dec
sbb
mov
test
sbb
daa
mov
scas
sahf
jmp
push
fistl
jno
shrb
cmp
clc
cmp
call
jnp
in
mov
imul
fs
pop
cli
push
pop
pop
pop
xchg
jl
push
pop
pusha
out
iret
jns
loope
call
fs
outsl
jno
ja
imul
sub
push
or
xor
orl
adc
push
add
and
xchg
pushf
sub
and
daa
scas
sbb
xor
dec
add
sub
out
adc
lds
jle
loope
repz
mov
test
xchg
cltd
lcall
mov
sahf
mov
and
xor
sub
sti
pop
dec
daa
scas
jns
jno
adc
xchg
pop
jge
push
adcb
cwtl
popf
adc
mov
enter
xchg
sbb
ljmp
fstps
mov
cmpsl
mov
pop
mov
mov
jbe
add
mov
push
cmpsb
xchg
in
ss
dec
je
adc
cmp
push
call
arpl
push
jne
xor
fbld
push
or
shll
scas
adc
jno
clc
outsl
insl
push
pop
mov
xchg
fucom
cmc
mull
sbb
and
ret
mov
lret
int3
rcl
enter
aam
fcmove
rcl
push
popf
inc
test
daa
fst
xlat
xor
adc
xor
dec
jns
mov
cmp
push
movl
repz
push
sbb
add
sti
cld
xlat
fstp
jp
push
push
mov
add
outsl
mov
in
jge
mov
clc
cmc
xlat
addl
push
nop
outsb
movb
cltd
lcall
pop
xchg
rcrl
cmpsb
stos
aad
dec
cmpsl
push
mov
mov
pop
scas
cmp
insb
push
adc
rcll
jbe
cmp
mov
sbb
inc
ljmp
shrb
data16
addr16
fldenv
jae
sub
jp
adc
idiv
std
xorl
push
inc
or
leave
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
inc
push
repnz
push
les
aam
push
mov
xlat
pop
rorb
fstl
add
inc
in
insb
mov
out
cmp
jne
inc
mov
xchg
xchg
xor
jne
add
cmp
xor
inc
aaa
cmp
push
xorl
les
int
ret
fsubrl
inc
dec
bound
test
and
inc
daa
mov
pop
cmpsl
jo
jb
cmp
ss
cs
int3
in
inc
fcomip
bound
push
outsb
dec
pop
inc
mov
jno
adc
cmpsb
addr16
push
out
pop
xchg
mov
add
sbb
js
lock
or
xor
incb
add
icebp
out
dec
push
or
pop
cmpsb
pusha
jecxz
sbb
mov
xchg
lods
pop
dec
inc
pop
push
in
pop
pop
insl
ficoml
lahf
call
lretw
mov
xor
xorb
push
leave
lret
movsl
lret
icebp
cmp
xlat
imul
popa
lret
ror
es
adc
pop
pushf
leave
popa
push
jecxz
jmp
out
fdivs
adcb
lret
cld
xchg
pop
xchg
in
mov
inc
xor
mov
xchg
mov
pop
lahf
fstpl
movsb
inc
cltd
lcall
sarb
sbb
aam
stos
push
arpl
outsb
mov
addl
inc
dec
cmp
inc
push
scas
dec
mov
push
jnp
jae
das
arpl
dec
imul
jecxz
insl
hlt
pop
je
cmp
das
sbb
lods
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
call
push
adc
jns
lods
shr
icebp
pop
mull
push
cli
cmc
notb
add
repnz
add
scas
cwtl
test
das
add
cltd
pushf
xchg
or
push
cltd
sahf
mov
frstor
cmpsb
fcmovnb
and
lret
sub
lods
scas
fwait
jl
mov
shrl
outsb
pop
inc
sti
loop
inc
inc
shrl
mov
fiadds
pop
pop
iret
cwtl
cmc
push
xchg
in
pop
lock
pop
arpl
bnd
int
arpl
push
or
movd
es
add
sub
aaa
add
ret
inc
mov
mov
dec
adc
test
nop
dec
shll
adc
fildll
test
daa
sub
sub
xor
xor
inc
inc
xor
leave
xor
enter
loope
dec
xchg
jnp
fcomi
dec
mov
out
sub
loop
in
push
mov
cwtl
ljmp
clc
repnz
jne,pn
ja
jp
xchg
dec
pop
xchg
cmpsb
movsl
add
lods
cwtl
nop
mov
xchg
xchg
xor
cltd
lcall
mov
sbb
pop
mov
scas
arpl
push
jg
mov
jnp
mov
cmp
cmp
les
call
jge
or
pop
pop
adcb
pop
inc
pop
xchg
pop
jecxz
gs
ficoms
daa
mov
outsl
stc
fisubl
jg
ja
jle
out
ss
add
jae
or
pop
xchg
push
jnp
adc
mov
sbb
push
stos
push
xchg
xchg
xchg
ret
daa
sbb
and
outsb
pop
daa
stos
and
xchg
int3
gs
insb
push
ds
mov
lret
int3
fucompp
div
int
cmp
add
inc
xchg
push
sti
inc
inc
js
xlat
fsubs
cwtl
pop
lea
dec
push
add
jmp
sub
mov
xor
dec
movsb
cmp
xchg
lock
push
add
sti
mov
enter
clc
xchg
fisttpl
movsl
fwait
or
mov
mov
lahf
xlat
sahf
mov
pop
sub
lods
scas
loop
das
popa
scas
mov
imul
jns
insl
push
jns
dec
dec
imul
jmp
inc
dec
dec
aad
ds
sbb
push
repnz
testb
push
mov
in
je
push
pop
dec
stos
jp
mov
jp
sub
and
in
sub
in
and
jmp
nop
inc
adc
push
push
dec
xor
adc
sbb
dec
lods
sbb
and
xor
xor
lods
fidivrs
xor
xlat
pop
repz
out
lods
ret
inc
jg
fdivs
jmp
bswap
push
lret
fcmove
dec
pop
or
fstp
jp
mov
ficoms
cld
push
fcomp
loopne
pop
stos
xchg
je
popf
orb
iret
sub
push
shl
sti
jmp
cmpsb
add
jp
fistpll
sbb
mov
jb
or
pushf
xchg
sub
shrb
iret
sbb
inc
aaa
mov
mov
aaa
mov
mov
mov
jp
outsb
fcmovnu
xor
aas
imul
jb
and
dec
push
insb
pop
mov
push
test
dec
pusha
bound
sbb
hlt
push
clc
xchg
lods
insb
mov
out
jbe
jl
test
lcall
leave
and
leave
insb
imul
push
sbb
ja
test
dec
mov
cmp
adc
xchg
sahf
dec
das
xor
sub
inc
sub
inc
inc
mov
inc
repnz
loop
sbb
sti
fs
rol
hlt
inc
xchg
lcall
xlat
xchg
bound
cmpsl
sub
loopne
ljmp
sub
repz
cwtl
roll
mov
cli
xchg
mov
incb
adc
clc
cmc
cmpsl
test
enter
jo
mov
mov
pop
xchg
xchg
fwait
or
mov
sbb
adc
ljmp
test
scas
push
mov
xchg
test
jo
inc
inc
mov
dec
push
push
dec
jge
jns
pop
pop
enter
stos
pop
pop
arpl
fs
addr16
mov
fisubs
je
sbb
jp
xor
outsb
hlt
jle
test
adc
inc
add
adc
clc
mov
inc
inc
sub
xchg
fildl
push
sub
push
inc
xlat
cmpsl
jo
jecxz
insb
add
mov
clc
mov
mov
aam
fdivrs
pop
mov
rcl
fisttpl
or
fcomp
jns
scas
sbb
push
sti
sbb
fstp
mov
xchg
frstor
call
xchg
es
cmc
lahf
clc
and
mov
test
aad
subl
nop
xchg
or
fwait
pushf
mov
outsb
js
test
sbb
push
daa
lock
mov
mov
inc
xchg
jae
addr16
cmp
mov
push
push
dec
dec
fldcw
jle
lds
pop
push
pop
pop
daa
and
pop
xchg
rcr
movsb
pop
pusha
xchg
xor
imul
jae
jae
in
xor
pop
jmp
cmpl
add
sbbl
fldenv
inc
add
ss
or
dec
insl
dec
sbb
sub
cltd
xlat
inc
mov
dec
mov
shrb
push
mov
cs
cmpsb
lods
cmp
jbe
icebp
xchg
mov
int
rcl
leave
lret
cld
idiv
clc
mov
mov
nop
xchg
xchg
fwait
pushf
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
bound
loop
arpl
pushf
or
push
insb
and
or
jp
repz
add
add
jg
or
dec
pop
or
inc
movups
and
movsb
and
mov
push
xor
cmpsl
jb
xor
xor
test
insl
cmp
mov
inc
enter
add
push
mov
mov
mov
nop
xchg
xchg
fwait
pushf
mov
sahf
mov
and
repz
jg
jbe
js
movsb
out
sti
test
mov
jne
mov
lcall
cmp
js
popf
into
mov
sbb
pop
ss
mov
mull
mov
mov
bound
mov
leave
enter
jp
int3
xor
roll
push
push
jecxz
test
xchg
bound
push
popf
fs
insb
push
in
imul
add
adc
xchg
sub
jne
js
mov
cmp
cli
in
sti
xor
or
gs
inc
or
add
mov
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
call
lcall
leave
aaa
add
pop
rol
enter
xchg
mov
fldlg2
mov
daa
adcb
in
jmp
adc
push
lock
push
imul
add
fmull
jg
test
les
test
iret
sub
scas
xor
xor
movsb
adc
nop
sbb
lahf
lahf
mov
scas
mov
sbb
mov
mov
outsl
mov
bound
es
jle
lds
cmp
jb
inc
dec
gs
push
push
sbbl
pop
shrb
dec
loope
fs
jmp
imul
out
ja
loop
into
icebp
addl
jbe
mov
xchg
mov
arpl
aas
test
push
adc
dec
dec
push
xchg
lcall
popa
daa
lahf
lock
xor
xchg
xor
outsb
das
mov
aaa
test
pop
mov
mov
lds
inc
mov
enter
mov
dec
cltd
lret
push
scas
xlat
fistpl
fs
jno
adc
iret
loopne
out
pop
and
xchg
jmp
lock
clc
insl
cmc
cli
jns
jge
cmp
and
mov
test
adc
xlat
dec
and
pop
mov
sbb
lods
mov
scas
mov
in
and
imul
daa
mov
xor
aaa
mov
fiaddl
inc
ss
dec
mov
dec
js
pop
mov
push
pop
pop
test
flds
pop
pop
std
fs
addb
fs
and
loope
fcoms
and
es
lret
push
jp
sub
add
add
orl
mov
and
mov
xor
xchg
popa
outsl
fistpll
cmp
cs
jg
mov
daa
jne
rol
mov
aas
test
xchg
add
xchg
aad
in
rcl
sub
jns
fcomp
dec
push
cwtl
in
in
push
adc
repnz
pop
lock
jo
addr16
outsb
incl
idivl
push
or
cmp
addl
mov
mov
loop
stos
xchg
cwtl
lea
xchg
cwtl
popf
pop
sti
jle
stos
sbb
xchg
mov
mov
pop
sub
push
inc
insl
movsl
scas
sub
ret
les
sub
inc
dec
mov
xchg
adc
pushf
mov
jle
lret
dec
repz
push
jnp
jae
inc
push
push
addl
or
sbbl
addr16
in
jae
jnp
mov
mov
xchg
loop
jbe
sahf
or
in
dec
or
stos
jb
or
cmp
cmp
and
sbb
sbb
lods
fisubrl
xor
test
mov
jbe
sbb
mov
scas
inc
pop
lret
int3
pop
nop
lret
int3
adc
jne
adc
dec
test
dec
pop
xlat
daa
xor
sbb
xlat
and
push
sub
sub
fisubs
idiv
cld
in
movsl
cli
cmp
jno
loop
jnp
cmp
jle
mov
roll
sbb
nop
xchg
mov
add
movsb
pop
pop
xor
sbb
stos
mov
movsl
movsl
cmpsl
and
mov
mov
mov
mov
dec
push
mov
pop
inc
push
rorl
dec
fiaddl
nop
popa
arpl
xor
pop
pusha
rcr
push
push
bound
xor
jae
sbb
in
jo
jnp
lea
mov
add
add
dec
lcall
data16
adc
sub
push
and
and
and
cmp
lds
jbe
ljmp
jne
jle
adc
lock
dec
mov
int
rcrl
add
push
mov
rcl
or
movsb
loope
popa
out
pusha
movsb
fsts
fdiv
repz
cwtl
add
xchg
movsb
icebp
push
add
aam
jg
sbb
jmp
subl
mov
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
dec
and
jns
sbb
mov
mov
pusha
xchg
ret
mov
scas
add
popf
add
popf
inc
inc
dec
dec
dec
push
push
rcll
lret
aam
popa
pop
pop
mov
push
frstor
sbb
in
jg
jnp
mov
jp
ret
ret
dec
sub
add
sbb
lahf
or
xchg
push
adc
xchg
xor
adc
dec
xor
adc
push
mov
push
and
lds
lret
outsl
cs
fistpll
mov
sub
jmp
sti
lret
jmp
scas
js
cld
movl
fcmovnu
rcl
push
inc
adc
push
pop
std
push
dec
sbb
pop
daa
add
and
push
sti
lahf
out
js
adc
lcall
xchg
pop
sbb
pop
rorb
pushf
xchg
xchg
movb
insl
lods
movsb
cltd
xor
fidivl
and
and
mov
mov
pop
push
adc
mov
mov
je
xchg
xchg
dec
inc
inc
dec
xor
mov
or
loop
ror
sub
arpl
gs
bound
pop
jp
loop
dec
jns
jne
and
cmpl
jns
cmp
xor
lret
aam
adc
or
mul
test
adc
push
sbb
sbb
dec
dec
adc
and
fstp
jecxz
jmp
imul
push
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
mov
xchg
xor
and
iret
sbb
mov
mov
push
xor
and
imul
cmp
cmp
dec
push
sbb
mov
les
dec
dec
jle
and
pop
dec
aad
push
shll
fs
scas
fs
cltd
xorb
data16
clc
cld
and
jp
testl
dec
cmp
and
dec
adc
adc
mov
and
push
mov
pop
and
gs
test
sub
xor
ss
xchg
sub
jle
iret
rcr
in
push
mov
aas
stos
popa
rcl
leave
dec
inc
xlat
rcl
fistl
adc
pusha
in
repz
pop
pop
addr16
in
in
and
add
out
lock
jl
xchg
sti
lods
sbb
js
in
notb
test
int
shrl
jnp
mov
orl
cwtl
int3
sahf
mov
popf
xlat
sahf
cmp
dec
cmp
mov
sub
ret
sbb
ret
push
cmp
push
dec
mov
dec
mov
push
iret
adc
pop
push
push
ljmp
fcom
outsl
pusha
imul
inc
test
pushf
mov
pop
jmp
jbe
jno
es
jge
stc
sub
or
xchg
add
icebp
jb
sete
add
pop
sbb
sbb
push
cmp
sub
and
xor
aam
testb
cmp
fsubrp
cmp
push
inc
ret
leave
repz
fcmovb
out
icebp
cmp
leave
lret
aam
pop
call
enter
loope
out
fcmovnu
addr16
popa
sti
in
loop
sbb
mov
jmp
idiv
out
fwait
in
mov
clc
incb
sahf
mov
jp
jg
cld
std
cmp
or
and
sbb
mov
mov
ror
mov
in
mov
arpl
xlat
mov
fistpll
adc
inc
mov
jp
adcb
push
jge
nop
pusha
pop
pop
jns
out
decb
bound
xchg
push
fistps
jb
insl
or
mov
dec
mov
inc
popl
add
lea
inc
or
mov
jg
sbb
add
mov
mov
push
cmp
mov
xor
push
jns
xor
mov
mov
jns
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
jmp
testl
lahf
paddb
incb
jae
push
or
add
cmp
adc
sbb
jmp
and
or
and
ficoms
imul
scas
adc
xor
inc
aaa
cmp
mov
mov
lret
mov
adc
ret
dec
ja
rcl
out
pop
fsub
loop
push
or
loopne
cmpsl
ljmp
and
bound
in
lock
lahf
stos
pop
adc
idiv
icebp
xor
jge
test
xchg
push
cwtl
nop
les
cs
shlb
loopne
adc
stos
mov
jnp
cmpsl
test
jb
mov
mov
imul
mov
scas
mov
jne
into
cmp
pop
les
push
dec
push
jl
dec
movsb
stos
in
mov
add
imul
jb
out
xor
sub
jno
ljmp
sub
xchg
mov
push
or
inc
orl
adc
scas
xchg
mov
mov
lret
push
inc
jns
xor
lods
icebp
sub
cmp
xor
inc
xor
add
cli
push
mov
lret
inc
test
inc
dec
xchg
int
aad
or
push
fildl
adc
mov
out
fndisi(8087
fdivrs
and
sub
lock
adc
add
popf
lea
scas
xchg
push
push
mov
orl
nop
enter
int3
or
xor
fidivl
and
and
dec
mov
pop
xor
cmpsb
mov
rol
arpl
test
or
mov
sbb
dec
jle
jmp
push
pop
dec
jnp
pop
arpl
in
gs
add
movsb
gs
hlt
insl
jae
sbb
outsl
subb
outsl
jo
ja
jle
cmp
sub
add
mov
xabort
enter
lret
adc
push
jp
and
sbb
sbb
sub
popa
imulb
popa
dec
mov
sub
aad
mov
cmp
cmp
cmp
inc
mov
cld
mov
int3
shr
dec
mov
mov
iret
dec
sbb
dec
push
dec
jecxz
fimull
loopne
std
fistps
loopne
sbb
pop
cwtl
ljmp
in
cmp
ret
mov
sahf
dec
jp
lea
rol
xchg
push
dec
adc
or
xchg
iret
rcll
nop
insl
fdivrl
jmp
cmc
mov
shr
mov
and
mov
xor
mov
dec
sbbl
cmp
xchg
mov
push
test
aas
sub
pusha
add
pusha
gs
cmp
jb
in
xor
pop
stos
inc
sub
add
orl
adc
xchg
xchg
add
add
sub
sbb
adc
xchg
lcall
inc
outsl
sub
mov
xor
jmp
ss
sub
incl
mov
int3
mov
inc
dec
cmp
sub
lret
inc
dec
mov
pop
sarb
sbb
pop
adc
jmp
fnstsw
data16
dec
pop
fs
mov
lock
cmpsb
out
leave
add
lods
jg
jo
jno
cld
leave
xchg
add
mov
cltd
lcall
jne
movsb
cltd
int
cwtl
cmp
jnp
mov
jle
cmpsl
daa
xor
mov
arpl
xchg
sarl
rolb
fdivs
push
dec
dec
js
ret
dec
push
push
mov
dec
push
cmp
rcrb
add
pop
pusha
gs
arpl
pop
jno
je
icebp
push
jl
ja
adc
push
cmp
js
adc
push
or
push
add
or
cmp
movl
lea
mov
in
gs
mov
rcrl
sub
aad
xor
loope
int3
xor
or
int3
rcrl
int
in
out
clc
dec
add
xor
rcl
or
shrb
stos
and
or
out
loop
sbb
cli
out
outsb
mov
rcpps
out
lock
pop
insl
cmc
emms
js
xchg
sbb
enter
pop
xchg
mov
mov
mov
adc
mov
mov
dec
push
and
mov
pop
scas
and
mov
mov
mov
mov
inc
dec
dec
inc
pop
cmp
pushf
test
jge
pop
pop
pop
rclb
pop
arpl
jbe
insl
imul
imul
imul
data16
jo
dec
js
andl
cmpsb
xchg
add
xchg
in
sub
adc
sahf
add
loopw
sbb
pop
lods
mov
pop
and
and
inc
outsl
sub
mov
xor
jmp
ss
sub
incl
mov
int3
mov
inc
dec
cmp
aam
iret
xchg
insb
ret
or
popf
jo
or
dec
xlat
fcomp
jbe
mov
ljmp
out
mov
fisubrs
shrl
std
mov
adc
mov
rorb
cmp
jbe
or
pushf
xchg
mov
fsubl
or
lods
shlb
dec
and
lods
stc
dec
and
daa
inc
loopne
mov
mov
cmp
dec
dec
jo
int
dec
xor
dec
orb
inc
int3
xchg
pop
push
push
push
ficoms
add
pop
stos
add
mov
test
push
sahf
mov
outsl
sbb
sub
jl
sub
xchg
add
test
and
xor
push
or
add
mov
sub
bound
ds
movsb
pop
sbb
xchg
xor
push
lea
mov
popa
dec
fidivrl
sub
xchg
cmp
cmp
inc
inc
mov
adc
mov
int3
roll
mov
fildl
add
pop
loope
loope
pop
push
pusha
cmpsb
fsubp
out
in
ja
out
test
out
mov
xchg
mov
sub
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
inc
mov
lcall
inc
je
dec
push
push
mov
leave
xor
sub
cmp
xor
test
cmp
cmp
int3
mov
dec
lret
int3
sar
clc
leave
rolb
dec
sbb
pop
push
fisttpll
loopne
jmp
push
adc
repnz
pusha
jg
call
push
mov
sbb
mov
fwait
nop
xchg
mov
and
test
fisubrl
sbb
scas
ss
stc
mov
add
ret
xor
add
jl
push
mov
inc
cs
inc
jl
imul
or
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
ja
in
fistl
xor
or
add
adc
push
imul
pop
insl
xor
jmp
out
ljmp
jno
addr16
pop
push
mov
leave
out
cmp
ror
int
add
lret
int3
into
rcl
mov
jo
jbe
insb
rolb
sbb
push
pop
xor
and
pushf
cwtl
add
outsl
mov
mov
scas
or
add
imul
sbbl
nop
mov
fsubs
movsb
pop
sbb
movsb
sbb
fiadds
imul
jne
adc
mov
mov
mov
ror
inc
inc
dec
push
and
int
fs
mov
jle
leave
pop
pop
dec
aad
inc
shll
fs
orb
or
jae
sbb
outsl
or
scas
outsl
es
mov
subl
pop
xchg
add
jg
cld
cmpb
push
adc
cmp
xchg
xor
add
mov
sbb
lcall
mov
xor
push
call
mov
call
sub
int3
rcr
sti
int
mov
inc
inc
fistl
leave
testl
cltd
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
rcrl
mov
mov
pop
pop
push
dec
and
shlb
popa
insb
mov
int
inc
mov
jge
dec
push
pop
dec
inc
ss
push
out
pop
icebp
xlat
xchg
js
out
jne
inc
int3
aad
pop
fisttpll
out
imul
stos
jno
push
xor
js
jl
push
push
inc
outsb
cmp
dec
ja
adc
and
sbb
test
pop
lea
popf
and
sub
and
daa
sub
jno
loopne
aaa
sahf
or
mov
inc
mov
lret
mov
lret
aad
cs
adc
push
inc
push
cltd
loope
fnstenv
mov
jmp
out
pop
fs
bnd
in
cld
jne
push
repz
add
mov
xchg
add
push
dec
xchg
fwait
pushf
mov
aam
sahf
mov
pop
lret
cmpb
pop
inc
scas
pop
lret
popf
movsb
mov
imul
cmp
dec
je
fnsave
or
enter
push
pop
test
popa
jge
xlat
loopne
pop
gs
into
add
cmpsb
addr16
jne
loopne
sarl
stos
sub
notl
rclb
pop
pop
fiaddl
out
pop
jp
pop
cmp
sbb
dec
cmp
xchg
fsubl
sub
cmp
cmpsl
jmp
fisubrs
xchg
add
outsb
das
xor
inc
cmp
mov
ss
shr
enter
add
ljmp
mov
mov
nop
xchg
xchg
fwait
pushf
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
mov
add
jle
mov
pop
and
dec
push
push
pop
mov
popa
fsts
in
out
test
cwtl
mov
test
pushf
mov
ja
insl
sbb
xor
add
insl
enter
xorl
int
stc
xor
stos
xchg
add
sahf
push
inc
dec
scas
inc
and
mov
mov
dec
and
and
xor
sub
pusha
leave
xor
movsl
in
in
push
scas
jmp
vpaddb
into
js
cmc
out
sti
repnz
aam
fistpl
cltd
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
or
mov
mov
nop
xchg
xchg
lret
popf
and
movsb
fstl
xor
and
aas
call
rol
int3
mov
popa
scas
jl
dec
xor
push
xchg
xor
sub
popa
dec
jne
adc
or
adc
or
sbb
adc
andb
jb
lods
shll
popa
xor
jbe
jge
xor
and
out
cld
xor
xchg
sbb
jnp
out
and
mov
and
cmp
mov
push
push
popf
js
push
xor
and
popf
fdivs
in
ss
lret
scas
in
mov
leave
lret
mov
lret
stc
clc
icebp
lret
aam
leave
add
sarb
adc
add
mov
adc
mov
or
mov
jno
in
clc
cli
out
mov
mulb
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
lret
and
pop
sub
mov
lods
scas
arpl
cmc
sub
dec
adc
dec
push
pusha
xchg
mov
jmp
jns
adc
loope
sub
dec
pushf
popa
arpl
push
pop
inc
stos
pop
xchg
push
arpl
push
and
sub
lods
mov
cmpsl
test
scas
mov
xor
xchg
das
test
or
adc
sbb
adc
sbb
popa
sbb
mov
mov
ret
mov
inc
mov
mov
fdivrl
mov
dec
add
int
fadd
loop
out
xlat
add
jnp
jp
fcmovnu
fimuls
in
mov
lea
mov
and
xor
sub
cmp
xor
lods
add
adc
xchg
cltd
fwait
pushf
xchg
sub
shlb
pushf
aam
daa
cmp
sbb
mov
stos
inc
xor
mov
mov
arpl
jae
int
jg
inc
int
dec
xor
dec
orb
jl
or
push
adc
pop
or
sbb
adc
and
adc
jle
test
jae
fs
and
jnp
jle
test
stc
push
add
or
das
cwtl
dec
cwtl
or
testl
sub
cmp
and
sbb
data16
jecxz
ljmp
jno
addr16
jns
out
push
cmp
lret
inc
dec
mov
repnz
sub
xchg
inc
lods
push
loope
out
fs
fsubp
in
lods
ljmp
addb
ljmp
mov
pop
int
test
xchg
jge
or
nop
xchg
xchg
cwtl
popf
and
int3
xor
jae
movsb
fld
lret
cmpsb
sub
adc
scas
mov
mov
mov
addr16
mov
je
push
aaa
inc
cmp
adcb
xor
jno
inc
jb
dec
push
push
pop
inc
jmp
and
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
jp
adc
xor
mov
push
sbb
sub
test
lret
outsl
fdivs
ja
loopne
jne
sti
mov
test
mov
add
sarl
test
das
mov
cmpb
sbb
pop
les
push
or
stos
and
pushf
int
push
xchg
sarl
movsl
shlb
mov
xor
subb
xchg
movsl
inc
dec
cltd
ret
lock
ficompl
fistps
jecxz
mov
in
push
mov
sub
mov
jp
jo
xchg
adc
adc
xchg
xor
les
cmp
test
inc
dec
aad
pop
out
mov
xlat
shr
in
outsb
neg
rcr
insb
mov
loope
jne
incb
clc
inc
mov
mov
inc
adc
or
dec
adc
pop
sbb
dec
sub
lea
xchg
mov
pop
pop
push
xor
aas
inc
inc
mov
fisttpll
add
vshufps
les
rcl
icebp
or
cmpb
sbb
pop
les
push
or
test
repnz
int
push
hlt
mulb
xchg
sti
movsl
ror
lock
insl
inc
roll
xchg
xchg
movsl
mov
cltd
ret
lock
ficompl
fistps
jecxz
mov
in
push
mov
call
and
jo
xchg
push
mov
ds
or
sub
mov
cwtl
xor
lds
cmp
int3
cltd
push
fistpll
test
outsl
aad
pop
out
mov
push
fsubrl
roll
in
outsb
imull
das
add
stos
in
fwait
push
std
sbb
lods
and
lret
xor
mov
sbb
test
jecxz
sbb
negl
xchg
popa
push
and
rcll
lock
dec
and
adc
lds
test
sbb
int3
push
mov
lea
insb
rcl
aas
aad
cmp
dec
push
xlat
xchg
loopne
dec
sbb
fstp
loopne
jle
test
data16
data16
jmp
mov
and
lods
inc
mov
test
rcrl
xchg
mov
xchg
cwtl
inc
cmp
pusha
ficompl
ficomps
imul
sub
mov
loopne
sub
clc
mov
jl
aas
jmp
test
dec
mov
xchg
sub
jecxz
pushf
xor
jmp
movsb
mov
repz
lods
movsl
jb
insb
mov
imulb
jno
insb
mov
orb
inc
inc
add
iret
dec
or
or
aam
adc
jnp
mov
and
fs
xchg
pop
sub
movsb
mov
insl
xchg
pop
cmpsb
jb
mov
scas
outsl
scas
push
sub
mov
add
ljmp
enter
inc
or
push
movsl
push
loope
mov
in
andb
out
shr
sub
ljmp
cltd
mov
mov
add
test
xchg
lret
hlt
jo
into
xchg
cmp
andl
int3
jge
sbb
movsb
cmpsb
push
out
mov
sahf
and
lods
inc
idiv
adc
test
mov
pop
pop
sbb
mov
cmp
bound
xchg
sub
rorb
enter
inc
cmpsl
cmp
rcrb
icebp
pop
sbb
xlat
mov
insl
push
imul
jp
jno
ret
cmp
cmc
outsl
cmp
adc
pushf
icebp
push
icebp
outsl
add
jge
pop
rcll
jg
sbb
pop
out
and
xchg
es
and
sahf
call
cmp
fs
shrl
push
lret
push
add
push
cmp
lock
inc
insl
rolb
pop
jmp
or
enter
mov
int
xor
inc
push
iret
sarl
cmp
cmp
nop
ja
lods
sub
xchg
ret
sub
out
sbb
divb
mov
mov
mov
iret
mov
nop
xchg
cmp
jnp
push
fistpl
test
push
pop
loopne
ss
sbb
call
and
cmpsl
jo
inc
push
add
jbe
js
dec
push
mov
fcmovb
adcb
xchg
cmp
mov
ss
inc
not
nop
popa
out
movsl
push
in
jno
imul
mov
stos
push
lods
jp
jo
jbe
lret
test
xor
adc
or
std
test
or
sbb
scas
push
out
and
fwait
push
and
shlb
aad
out
mov
int3
mov
sbb
cmc
inc
inc
outsb
aad
or
leave
repz
ja
iret
nop
bswap
clc
sub
jl
hlt
test
mov
xchg
js
scas
sub
gs
lock
lahf
fsub
in
mov
jns
xchg
aaa
int3
mov
add
push
push
rclb
aam
xchg
inc
xor
push
cwtl
ret
adc
stos
lods
push
cmp
pop
mov
repnz
fists
js
mov
xchg
sub
pop
test
jl
imul
push
xchg
push
jle
or
push
pop
add
pop
lcall
pop
popa
mov
out
mov
ljmp
cmp
jae
std
ljmp
add
imul
inc
adc
outsb
push
mov
xor
fcoms
inc
sbb
pop
push
dec
stc
pop
xchg
arpl
and
stc
fs
rorl
cs
push
in
jge
out
divl
mov
xchg
vcvttsd2si
cmp
out
pushf
or
add
fstl
mov
movsl
and
or
in
adc
sarl
loopne
cli
cld
es
inc
add
addl
xchg
mov
int3
mov
mov
push
sbb
test
cmpsb
cwtl
and
or
sub
mov
and
mov
xor
mov
inc
int3
call
cmp
int
push
dec
rolb
bound
movsb
mov
pop
in
imul
in
outsb
loopne
xor
jo
aad
push
dec
incb
add
jmp
clc
andb
or
orb
xchg
js
sbb
add
xchg
popa
push
adc
insb
test
lods
test
xor
cltd
mov
xor
inc
mov
test
rorl
movsl
jecxz
add
lods
dec
inc
or
mov
dec
adc
cmp
jae
sub
pop
pop
and
dec
repz
cli
subl
add
lock
gs
stc
lds
dec
add
lcall
aad
sub
in
jg
pop
sbb
mov
sbb
jae
sbb
movsl
mov
mov
cmp
jle
inc
inc
inc
dec
or
mov
cmc
int3
pop
xchg
push
dec
aam
push
pop
pop
stc
cmp
pop
xchg
add
xor
cmovl
fisubl
add
lea
jl
test
and
inc
add
add
fisttpl
xor
orl
loopne
and
xor
bound
and
rolb
add
lret
mov
push
mov
inc
inc
insl
rolb
add
cmp
jmp
divl
inc
push
iret
sarl
mov
dec
push
xlat
push
fsubrs
sbb
outsl
sub
push
jmp
out
ja
inc
pop
paddsw
idivb
dec
popa
jmp
sarl
push
imul
insb
lret
je
insl
imul
lcall
aad
sub
stos
xor
test
mov
mov
or
addr16
clc
addl
movsl
std
ret
jg
aam
loopne
dec
xor
mov
rcrb
rcrb
aad
sbb
stos
imul
in
jl
ja
mov
subl
dec
inc
or
pusha
fs
or
dec
push
cmp
xchg
adc
sbb
push
pop
sub
xchg
pusha
xor
cwtl
inc
mov
lock
lods
xor
mov
std
lret
fcoms
dec
fistl
ror
push
ja
sbb
add
mov
and
mov
push
pop
and
cmp
add
cmp
std
daa
lcall
popf
test
jl
les
enter
sub
ja
adc
sahf
mov
loop
dec
mov
sbb
cmpsl
test
jmp
fs
shll
call
lcall
fs
mov
rorl
push
sahf
popa
mov
call
shld
enter
inc
leave
fisubrs
rorl
sub
fistl
cmp
jecxz
ja
add
dec
push
jmp
jle
or
xchg
test
mov
mov
push
xor
mov
mov
imul
cltd
jp
leave
es
leave
test
push
mov
movsl
xor
inc
or
test
ret
int
rcl
fptan
aas
cmpsl
pop
fadds
jno
jnp
lods
sbb
mov
or
sbb
and
xchg
into
cs
sub
sti
and
mov
xlat
addr16
sarl
ret
imul
xchg
mov
jp
enter
js
ficompl
xor
gs
cmpsb
push
sbb
dec
add
lods
push
mov
push
push
xor
pop
pushf
mov
jecxz
push
test
jle
movsl
mov
jg
aad
nop
or
push
inc
mov
mov
xchg
push
adc
into
cwtl
imul
xor
jbe
jno
sbb
js
mov
sets
add
add
dec
or
jae
orb
lods
out
fistps
dec
clc
cwtl
cltd
bound
and
mov
lahf
imul
xchg
jp
add
jae
leave
mov
sti
mov
int3
mov
mov
sti
shrb
movsb
dec
adc
int3
mov
adc
fsub
jp
lods
pop
fsubp
mov
sub
jns
andl
xchg
ljmp
cltd
repnz
mov
add
mov
leave
xchg
jg
inc
sbb
mov
nop
imul
push
shlb
loop
cmpsl
test
jp
lods
scas
fldenv
mov
mov
xor
pop
mov
jp
movsb
push
jmp
sbb
adcl
lods
lret
push
add
cmp
cwtl
pop
test
rcrb
mov
fldenv
jp
mov
and
jno
jnp
cmpsl
mov
add
ja
add
fsts
jno
dec
or
xchg
test
pop
sbb
xchg
arpl
mov
fwait
inc
and
jecxz
adc
cmp
mov
cld
mov
loop
adc
cmp
adc
popa
cmpsb
jmp
lcall
lods
mov
outsb
pop
sbb
jmp
sub
fs
pop
fs
ja
xor
clc
arpl
ja
js
ret
mov
rolb
mov
mov
push
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
test
aas
ds
imul
mov
into
inc
frstor
pop
int3
fsts
pop
pop
sti
test
pushf
pop
nop
jge
xchg
insb
jno
loop
insl
insb
jo
push
sub
jno
out
xchg
xchg
or
lret
jbe
add
loop
push
movsl
jle
or
sbb
dec
cmp
mov
lret
sub
mov
xor
dec
xor
cmp
mov
cmp
les
mov
aam
add
clc
and
add
aad
fcomp
push
adc
fnstenv
sti
arpl
in
gs
pop
sub
orl
lock
sti
cli
incb
and
rolb
test
mov
xchg
cmpsl
lret
sbb
sbb
movsl
sbb
movsb
sub
and
lods
sbb
cmpsl
mov
scas
dec
je
in
scas
pusha
int
in
shrl
cmp
jp
inc
pop
jecxz,pt
fsts
int
cs
mov
mov
fcom
arpl
imul
and
xchg
push
jns
jl
sbb
sub
add
fwait
add
add
ljmp
xchg
ficoms
or
adc
xchg
nopl
pop
mov
fists
xor
push
lcall
fsubrs
shlb
add
xchg
addb
lcall
inc
cmp
fucomip
mov
roll
sub
aad
inc
push
loope
in
add
adc
insb
loop
imul
popa
movsl
push
cs
push
frstor
hlt
jge
cld
inc
popa
in
cld
in
stc
ja
jp
fwait
mov
sbb
mov
nop
xchg
mov
mov
sbb
or
jecxz
cmp
test
add
and
inc
or
mov
cmp
dec
dec
inc
push
jl
aam
fistpll
rorb
leave
or
lds
scas
mov
loope
outsb
bound
pop
das
movsb
sbb
je
and
jne
js
xor
stc
adc
fwait
mov
leave
out
push
loope
dec
or
mov
nop
lea
sbb
and
push
inc
enter
int3
xchg
mov
rcr
in
mov
aaa
cmp
jne
jle
test
int3
xchg
adc
lret
test
sbb
or
fstp
loopne
push
sbb
loope
fiadds
jae
repz
insl
mov
cmp
cmp
xor
mov
inc
mov
mov
addb
mov
mov
or
int3
popf
and
scas
lahf
mov
daa
movsl
movsb
test
dec
and
lods
pop
lret
in
mov
bound
sub
sarb
inc
inc
jae
jne
int
in
fcoms
adc
ret
int3
pop
pop
push
push
xchg
in
fs
mov
sbb
sbb
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
lret
mov
add
xor
hlt
inc
dec
adc
push
push
xchg
dec
aad
js
in
ficoml
idivl
add
xchg
push
xorl
outsl
or
insb
adc
mov
sub
adc
mov
xchg
jp
jno
out
mov
mov
fwait
lods
scas
or
xor
sti
xor
setbe
mov
les
adc
cmp
xor
add
and
cmp
inc
inc
push
xor
daa
cmc
fisttpll
mov
fsubp
loop
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
add
popf
sbbb
aas
clc
repnz
sub
cld
mov
xchg
mov
cmova
sbb
mov
daa
nop
sbb
test
cmpsl
xor
std
scas
repz
out
aaa
add
insb
mov
add
inc
inc
inc
movb
fldenv
mov
pop
gs
push
pop
call
fbld
cmpsl
mov
call
insl
maskmovq
fs
mov
lods
testb
pushf
pop
lods
incl
xchg
idivl
xor
ret
into
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jecxz
cmp
popf
scas
xchg
lret
adc
xlat
and
iret
inc
aad
mov
wrmsr
rorl
or
jmp
es
and
push
push
divl
xchg
fwait
popf
mov
xor
sub
cmp
xor
lret
shrl
and
push
mov
pop
pop
nop
lea
sbb
pop
push
pop
pop
popa
bound
push
pop
ret
jo
push
mov
roll
loop
mov
popa
gs
in
inc
inc
push
cmp
notl
lds
pop
pop
pop
cmpb
dec
fsubr
imul
pusha
ficompl
push
sahf
fisubs
out
in
loopne
imul
xchg
outsl
cmp
ljmp
cwtl
add
sub
or
and
dec
sub
es
popf
filds
sub
mov
mov
sub
inc
mov
shll
jbe,pt
mov
mov
inc
add
imul
sti
cld
push
push
in
xchg
push
or
pop
sub
jecxz
cmpsb
xchg
xchg
xchg
movsb
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
lret
adc
stos
lods
push
mov
cwtl
scas
call
scas
scas
cmp
aaa
cmp
ds
inc
imul
push
xor
dec
dec
xor
lret
push
pop
pop
lret
pop
xlat
arpl
push
repnz
cmpl
jb
out
outsb
jo
jbe
cs
jo
cld
mov
or
lahf
jns
add
pop
or
inc
ror
xchg
adc
push
push
mov
adc
pop
dec
xor
lahf
jecxz
sahf
fmul
out
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
out
sarb
pop
xchg
pop
ss
iret
aad
pop
in
cli
idivb
nop
xchg
out
pop
fucomip
daa
out
cltd
loope
sti
hlt
stc
mov
std
fs
mov
cmpsl
aas
push
inc
mov
ds
inc
dec
dec
aas
inc
inc
inc
dec
dec
enter
cmpsl
arpl
pop
fistps
add
cmpsb
and
ljmp
mov
mov
popa
push
mov
js
push
mov
jbe
daa
dec
cmp
cmp
fidivs
inc
into
decb
test
pop
fs
insl
aam
jecxz
insl
adc
ja
movsl
jae
jne
js
add
jmp
lock
xor
sub
in
mov
cmp
and
xor
fidivrl
inc
fcmovnb
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
fisubrs
dec
xor
ret
jmp
inc
cmp
std
clc
in
rcl
flds
addr16
sbb
add
leave
mov
push
movsb
insl
outsl
lods
pusha
in
jmp
xchg
jl
sahf
xor
mov
in
psubd
add
mov
xor
sub
xchg
mov
mov
std
pushf
leave
or
mov
mov
and
aam
mov
cmp
dec
mov
mov
mov
cmp
mov
loop
mov
test
ja
dec
xor
test
ja
jns
pop
adc
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
aaa
jle
mov
xor
or
xor
pop
mov
lea
dec
pop
aaa
test
sub
or
xor
xor
push
mov
mov
xlat
jno
dec
jmp
out
enter
call
push
xchg
lret
push
and
adc
mov
push
mov
push
imul
lock
das
jno
add
mov
inc
inc
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
aas
test
cmpsl
rcl
mov
pusha
push
inc
mov
sub
sub
addb
daa
decl
or
clc
std
incb
add
or
gs
je
push
pop
andb
movsb
fs
pop
stos
mov
stc
insb
push
test
add
adc
js
je
jg
cli
sbb
ljmp
adc
xchg
outsl
pop
adc
mov
loope
pop
dec
xor
lahf
jecxz
mov
xor
faddp
xor
fcmovbe
cmp
xor
cmp
ss
mov
mov
mov
inc
xor
aam
std
cmp
fsubrl
xchg
sbb
mov
fisubs
pop
and
mov
push
arpl
cli
hlt
jmp
stc
cli
xchg
mov
incb
cmpsl
mov
mov
mov
js
mov
xchg
pushf
ja
shrb
mov
nop
xchg
xor
or
jp
rol
mov
and
mov
stos
lods
scas
sahf
sub
popaw
cmc
je
lret
sbb
cmp
ret
push
cmp
push
test
scas
push
push
shll
pop
inc
or
xchg
pop
in
addr16
pop
fsubr
dec
jbe
outsl
or
jns
outsl
and
fcomi
sub
add
adc
or
mov
or
sub
dec
cmovo
xchg
fisttpl
cwtl
xchg
jmp
sub
popf
pop
xor
xor
sub
sub
in
out
adc
call
ret
sarl
int
clc
idiv
lret
leave
add
cld
decb
xchg
xchg
cltd
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
stos
jbe
cmp
addr16
inc
pop
xorb
jecxz
insl
push
push
and
adc
stos
lock
pop
jecxz
dec
fsubrl
repnz
or
enter
add
mov
jne
xchg
je
xor
shr
sarl
mov
xor
sub
lret
dec
push
lods
mov
push
dec
fisubs
lcallw
mov
lret
ds
xor
test
sub
imul
push
jns
outsl
jo
jbe
jl
xorb
jle
test
inc
jmp
icebp
ret
and
sbb
iret
jecxz
or
rcr
popa
sub
pop
stc
das
lock
out
push
in
movsb
out
in
sbb
add
jge
xchg
mov
dec
mov
and
cwtl
pop
xchg
or
aam
sbb
mov
xor
and
sub
cmpsl
xor
daa
lock
cmp
gs
dec
mov
ror
cmp
inc
dec
sub
ret
jg
fimull
dec
inc
push
mov
movntq
ds
push
mov
add
xlat
mov
enter
push
out
adc
xor
stos
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
pop
andl
pop
insl
in
mov
cltd
mov
xor
scas
out
cmp
jo
pop
enter
aam
add
inc
pop
negb
push
push
in
rcl
jae
xchg
adc
repz
in
push
and
add
mov
cli
out
lock
add
fwait
adc
mov
mov
sub
xchg
cltd
lcall
mov
xor
sub
aaa
outsl
out
scas
lret
mov
std
mov
add
pop
add
inc
in
imul
dec
push
sahf
sbb
jmp
mov
sarb
pusha
fisubl
jmp
mov
rcrb
push
mov
mov
fs
and
lds
movsb
out
dec
or
int3
push
adc
stc
mov
rcll
pop
mov
out
sub
adc
xor
and
stc
icebp
jne
inc
xor
sbb
js
aam
xor
mov
leave
in
pop
mov
jecxz
nop
add
loopne
ds
aam
sub
enter
sbb
mov
mov
and
repnz
shrl
aad
xor
add
sarl
mov
fld
xchg
addl
mov
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
and
jbe
jns
add
xor
adc
cmp
cld
push
mov
xchg
push
and
mov
sub
mov
and
xor
scas
repnz
and
das
js
jmp
hlt
pop
out
inc
rol
xlat
ret
out
fcoml
leave
pusha
loop
mov
pop
xchg
pop
iret
fmulp
inc
fstl
ficomps
jmp
mov
hlt
xor
cli
out
lock
lock
rorl
adc
jne
and
mov
fcomps
push
fistps
fs
ret
or
jmp
or
scas
int
dec
pop
cmc
jae
shlb
xlat
inc
pop
frndint
lea
out
in
or
pop
jne
xchg
cmc
sbbl
fcom
out
imul
sbb
and
or
in
jnp
jb
in
xor
sti
pushf
movsl
and
xchg
jecxz
or
push
cwtl
sbb
subb
sbb
pop
xor
and
sbb
cmpsb
sub
adc
in
into
outsl
push
lret
fistpl
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
and
jp
lcall
adc
es
into
xor
mov
pop
dec
shl
sub
dec
adc
into
sub
rol
mov
push
jae
jo
xlat
inc
dec
push
insl
ja
push
aam
adc
xchg
push
push
stos
into
inc
and
popl
in
and
jg
imul
xchg
sub
jb
cld
mov
jns
btr
or
enter
push
or
out
dec
or
sbb
scas
rcrb
sbb
pop
xor
out
xchg
fs
jbe
nop
in
jo
int3
add
dec
bnd
inc
cmp
jns
out
cmpb
js
jle
test
xchg
mov
lcall
mov
sahf
mov
and
cld
inc
adcb
jl
mov
mov
lods
add
stc
xchg
mov
mov
hlt
ret
inc
mov
stos
sahf
sbb
pushf
mov
sahf
jmp
push
loopne
mov
addr16
scas
test
imul
mov
inc
gs
dec
sub
jle
push
std
mov
ja
jns
pop
adc
sbb
adc
and
sbb
sub
daa
outsb
xchg
cld
mov
sub
or
or
add
pop
or
repnz
sbb
sbb
and
movsl
sub
pop
sub
jmp
les
lods
push
ds
xchg
xor
stc
pop
push
test
mov
or
dec
jecxz
rolb
or
imul
dec
push
xlat
jns
mov
fwait
pushf
mov
sahf
mov
and
xor
sub
inc
shll
subl
lea
ret
cwtl
inc
or
sarl
and
push
push
cmp
pop
inc
mov
mov
loopne
lods
jbe
fs
repnz
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
js
fdivl
inc
jmp
push
pop
pop
push
jmp
jp
pop
pop
pop
mov
int
out
jb
sub
movsl
cmpsb
stos
lods
sub
decl
xor
sub
adc
sbb
and
fwait
std
sbb
xchg
movsb
xor
and
sbb
xor
inc
jmp
and
cli
inc
xlat
mov
mov
int
out
or
dec
jnp
ja
sbb
lock
loope
sub
jmp
pop
sti
jmp
repz
movsl
xor
movsb
adc
lock
pushf
out
adc
add
jp
jae
xchg
and
push
jb
and
lea
or
mov
sub
ljmp
out
scas
ss
xor
cmpsb
mov
rol
cmp
dec
cmp
add
add
outsb
pop
leave
shlb
push
pop
pop
in
xchg
pop
pusha
jmp
subb
addr16
and
mov
rolb
pop
jae
std
orl
push
push
push
stos
das
xor
rol
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
add
mov
mov
in
fucomip
repz
loop
addr16
sub
adcb
pusha
mov
dec
test
push
jo
mov
nop
or
test
mov
movsb
ret
les
xor
push
lret
stos
scas
xor
and
pop
add
inc
and
aam
jle
inc
sbb
pop
inc
add
push
jp
sub
dec
push
xchg
push
arpl
fisubl
sub
addr16
jp
movsb
lods
mov
mov
call
std
les
or
xorps
lods
repnz
dec
das
mov
fstl
cwtl
out
aam
loop
jecxz
jmp
imul
push
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
pop
out
pop
cmc
ds
xchg
out
in
je
jmp
clc
out
lock
jl
call
std
incb
mov
mov
sbb
xchg
les
or
test
sub
shlb
fcmovbe
sbb
mov
cmpsl
stos
lods
scas
push
mov
out
scas
push
in
jnp
call
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
dec
xlat
sub
mov
push
push
pop
loopne
push
shrb
pop
gs
or
js
cmpsb
addr16
sub
lods
mov
je
add
test
add
mov
or
das
sbb
adc
mov
mov
dec
dec
and
and
sub
enter
and
mov
cmpsl
das
sbb
mov
lret
ficoms
add
mull
test
aam
popa
mov
pusha
lret
shrl
pusha
ljmp
push
jno
out
repz
das
stc
jae
push
testb
std
lcall
xchg
jg
lahf
mov
add
mov
mov
xchg
adc
cwtl
adc
cltd
sub
test
gs
mov
mov
dec
mov
mov
bound
push
inc
mov
dec
lds
es
pop
inc
ror
pop
dec
push
insb
and
push
test
adc
icebp
pop
fcom
pop
arpl
xchg
nop
or
je
mov
hlt
sub
scas
loopne
mov
fidivrl
or
xor
popa
inc
add
inc
pop
movsl
or
jae
dec
sbb
pop
fnstsw
pop
and
lahf
sub
fldenv
push
inc
aam
xor
ret
cmpsb
xor
cmp
in
in
push
adc
cmc
mov
sarb
rcl
loopne
mov
xchg
aad
jne
dec
pop
jecxz
fcmovu
or
maskmovq
imull
out
pop
and
push
push
in
sti
push
notl
test
xorb
mov
lea
shll
sbb
sahf
xor
pop
and
fistps
cmpsb
fcmovnb
cmpsl
test
mov
sub
pushaw
popa
fsts
push
cmp
mov
pop
inc
push
cs
dec
push
push
dec
sub
sub
push
pop
mulb
fisubl
pusha
mov
push
push
in
xor
jo
lds
jl
ja
adc
lods
cmp
sub
or
add
adc
ret
cmp
sbb
pop
and
cwtl
xchg
pop
and
sub
pop
dec
fsubr
sub
cmp
xor
jmp
loop
sbb
mov
aas
andl
into
ror
lret
or
call
imul
pop
jmp
sbb
out
pop
sub
outsb
mov
cmc
mov
ja
cmc
clc
std
cltd
cs
cmp
decb
mov
mov
xchg
adc
movsb
sub
or
lods
cmp
in
lods
loope
fisubrl
scas
dec
mov
xor
insb
addr16
sbb
inc
mov
inc
rolb
push
push
dec
dec
imul
xor
xlat
loopne
pop
gs
jno
outsb
jae
scas
jns
daa
aam
or
jge
sbb
aas
xor
or
jnp
push
adc
or
cmp
mov
cmp
adc
ja
lods
pop
mov
mov
bound
fsubr
cs
cmp
mov
inc
aaa
cmp
icebp
jmp
push
sbb
add
inc
mov
dec
aam
iret
shr
in
test
rolb
loop
fistpl
out
adc
jae
repz
gs
je
pop
sti
jg
lock
idiv
incb
mov
rolb
test
xchg
mov
xor
mov
xchg
sbb
add
push
sbb
out
mov
mov
dec
mov
mov
mov
push
xor
cmp
sub
inc
int3
add
rclb
dec
push
fcoml
inc
sub
cltd
dec
xchg
movups
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
gs
cli
je
out
jne
and
xchg
ja
in
js
jmp
adc
xchg
sbb
lcall
cmp
xchg
fiaddl
mov
xchg
pusha
ss
xchg
pop
push
dec
lahf
push
mov
aas
xor
xor
inc
lret
test
into
xchg
lock
pop
fxch
rcl
out
clc
dec
inc
imul
mov
fisttpl
cmp
pop
add
in
loope
insl
fistpl
jns
jmp
xchg
sti
cld
jne
pop
adc
ljmp
stc
mov
push
jo
popf
rclb
add
cmpsl
lahf
xchg
xchg
xor
dec
aam
enter
movsb
test
mov
cmp
pop
scas
and
push
mov
mov
sarl
outsl
cmp
fstps
ror
pop
dec
push
insb
inc
pop
xchg
push
test
sbb
loopne
pop
gs
xchg
addr16
pop
outsb
stc
pop
cmpb
jne
fldt
add
add
push
outsl
cmp
iret
or
nop
adc
or
sbb
push
or
xchg
popa
push
and
xor
sub
sub
inc
loop
cmp
in
mov
inc
lret
mov
mov
sub
xchg
fdiv
clc
int3
inc
xchg
add
xchg
cltd
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
stos
jbe
cmp
cmp
xor
inc
lret
mov
popa
xlat
in
jmp
out
frstor
out
fidivl
hlt
jmp
mov
xlat
call
sub
outsl
or
movsb
mov
clc
std
push
pop
mov
or
and
rorb
leave
adc
xor
into
push
push
xor
and
pop
mov
int3
gs
icebp
pop
and
xor
add
push
mov
mov
mov
lret
shl
mov
pop
bound
imul
rcl
outsb
fwait
mov
loop
data16
mov
jmp
xchg
sub
scas
in
repz
inc
je
add
imul
js
mov
ds
mov
lret
inc
int3
lods
fsubrs
pop
dec
shll
dec
out
mov
lcall
stos
lods
xor
inc
adc
rcll
inc
and
ss
pmuludq
fsubrl
popa
ds
addb
fs
mov
dec
imul
dec
insl
pop
out
das
or
mov
pop
pusha
or
fcmovnu
movsl
jb
sub
movsl
cmpsb
stos
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
cmp
stos
mov
int3
into
pop
mov
aad
or
repz
fistl
into
push
pop
aad
jmp
out
jmp
jg
out
push
dec
in
movsb
out
out
js
stc
std
test
testl
mov
mov
add
sub
xchg
rcll
sbb
adc
mov
mov
cmp
test
mov
je
lods
jne
dec
xor
addb
or
inc
inc
jno
fldcw
rol
push
dec
push
xchg
leave
addr16
push
push
mov
mov
rcr
sahf
pop
nop
std
xchg
sbb
cmp
jmp
adc
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
into
cltd
cmp
lods
sub
jecxz
mov
cmp
inc
movsb
cld
mov
loopne
rol
ds
push
loop
lods
cmp
movl
loope
imul
dec
sbb
adc
clc
push
xchg
jmp
bound
sub
pushf
xchg
cld
ljmp
stc
cmp
pop
mov
mov
lea
jno
fwait
pushf
and
sbb
mov
sub
mov
cmp
inc
mov
mov
aam
add
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
cli
mov
in
outsb
hlt
jl
add
jno
jge
pop
jae
std
jne
or
jg
add
orl
adc
rol
lret
int3
rcl
mov
nop
pop
sbb
scas
and
aam
xlat
fcomp
fldenv
xor
cmp
out
sarb
fldcw
aas
lea
push
ss
int
out
into
mov
dec
mov
mov
push
cmp
fcmovnu
push
in
sub
popa
push
jecxz
jmp
dec
insb
pop
jg
pop
cwtl
push
sti
xchg
sbb
js
add
jo
ret
xchg
call
rcll
push
xchg
cltd
fwait
and
mov
and
loop
xor
loope
mov
mov
jae
std
into
jge
push
out
je
mov
inc
inc
inc
inc
jp
or
inc
dec
ja
ror
dec
dec
push
iret
aam
jg
mov
mov
daa
pop
arpl
pushf
pushw
add
adc
and
ret
insl
mov
outsl
adc
jge
jb
cmp
aaa
test
xchg
mov
ret
leave
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
out
push
aas
pop
mov
loopne
hlt
dec
or
clc
dec
add
out
test
fistl
into
push
pop
jmp
sbb
ja
out
test
es
mov
add
mov
fnstenv
mov
into
rclb
jne
rorl
popf
jmp
xchg
mov
xchg
or
or
push
pop
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
sub
or
mov
cmp
cmc
popa
in
fnstcw
imul
and
pop
xchg
xchg
nop
loope
jno
pop
aam
mov
fisubrl
repnz
push
das
push
pusha
and
push
mov
sub
cs
jnp
test
mov
mov
mov
leave
xor
push
or
cmp
cwtl
and
cmpsb
and
flds
insl
sbb
jge
ds
jno
enter
dec
mov
mov
sarb
lds
pop
cmp
insl
leave
lret
xchg
loopne
rorb
jmp
mov
pushf
mov
sahf
mov
and
repz
icebp
or
scas
popf
pop
xchg
test
mov
int3
lea
push
psubusb
movsb
das
xchg
les
mov
clc
cmp
mov
mov
ret
mov
lds
insb
dec
rorl
cmp
leave
xchg
push
shrl
pop
push
cmp
rcrb
sti
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
sub
jl
daa
sti
or
xor
sub
inc
push
stos
sub
pop
orb
adc
sbb
sbb
xor
lock
out
sub
or
xor
mov
jge
movsb
cmp
ret
mov
movsbl
lds
cmpsb
adc
push
mov
fldenv
or
sbb
stc
sub
or
or
in
xlat
sub
cli
push
cld
data16
xor
mul
repz
add
xor
xor
test
jae
rorl
leave
nop
sbb
adc
xchg
xchg
cwtl
sbb
iret
dec
mov
mov
push
mov
mov
xor
cmp
xor
cli
jge
push
incb
movsb
shll
push
push
mov
cmpsb
pop
xchg
pop
aad
call
imul
test
lahf
jns
outsl
jno
sahf
jns
jle
imull
addb
mov
or
sbb
cmp
cmc
arpl
inc
sbb
sbb
and
sub
leave
aas
add
pop
and
sbb
sub
scas
and
add
inc
mov
xchg
ss
inc
inc
cmpsl
int3
dec
or
adcl
rcl
aad
mov
adc
in
pop
and
out
adc
repz
outsl
lods
andb
es
icebp
repnz
les
add
or
std
xlat
xchg
mov
xchg
les
test
nop
xchg
sbb
or
jae
lcall
shlb
stos
mov
sub
push
mov
mov
mov
jns
loop
inc
inc
jb
adc
popf
enter
push
pop
jg
call
iret
fwait
pop
loopne
push
fistl
push
push
sbb
jns
pop
and
and
ret
es
or
xor
mov
sbb
adc
imul
and
and
and
inc
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
scas
sarb
enter
cmp
push
and
or
push
dec
and
pop
pop
mov
aad
pop
pop
popa
push
push
pop
pop
int
cld
imul
cs
jno
jge
mov
jnp
cld
fisubl
jge
orl
sub
or
add
and
aas
movups
and
and
inc
pop
cmpsb
sub
repnz
mov
repnz
stos
stc
shll
cmp
mov
ret
xor
lret
mulb
xchg
rol
adc
cli
lcall
dec
pop
outsb
fstp
jecxz
in
or
jmp
adc
lods
sub
repz
jnp
out
lock
sbb
stos
jp
orb
xchg
in
mov
xchg
mov
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
ja
popa
dec
push
xlat
sub
dec
call
pop
dec
lahf
pop
xchg
pop
fdivl
repz
jmp
insl
aam
imul
and
jno
icebp
sub
les
rol
mov
xor
sbb
inc
cmp
pushf
push
and
sub
lea
dec
jmp
imul
mov
mov
repz
roll
pop
xchg
fcmovnu
mov
fdivp
shrl
fcmovnu
loope
dec
aas
fstp
jecxz
push
xor
adc
adc
add
out
repz
or
syscall
lods
idiv
and
jle
sbb
mov
mov
dec
mov
mov
xchg
xchg
int3
rcrl
shll
movsl
in
scas
mov
cmp
jns
imul
aas
inc
inc
inc
inc
xor
add
mov
rolb
sbb
pop
push
pop
pop
dec
fldcw
and
loope
imul
leave
outsb
insl
outsb
xor
jp
outsl
clc
bnd
jle
daa
stc
lock
or
lock
or
inc
aaa
adc
sbb
dec
adc
sbb
jo
push
sbb
sbb
fwait
and
and
xchg
mov
dec
mov
cmp
mov
stos
xor
sub
int3
lock
dec
rcl
sar
or
movsb
aad
inc
push
int
in
or
jmp
adc
clc
sahf
in
icebp
stos
push
jo
pusha
imul
out
lock
stos
add
jg
orl
mov
pop
mov
nop
das
addb
cmpsb
popf
int
pop
inc
sbb
fidivrl
sub
mov
cld
mov
xor
mov
mov
popa
cli
push
test
jecxz
adc
int
ds
push
test
add
mov
gs
out
aam
push
outsb
bound
in
jno
sbb
shrl
jp
imul
xchg
pushl
je
out
lar
fmull
int
fs
adc
xchg
pop
js
adc
mov
imul
sub
sub
loope
xor
test
mov
cmp
enter
push
inc
dec
mov
rorb
leave
aaa
fcoml
fidivrs
push
and
adc
icebp
repnz
sti
popf
cmpsb
cmpsb
cmpsb
adc
add
inc
data16
lret
jno
mov
mov
test
xchg
xchg
xor
cltd
lcall
mov
mov
cmpsl
test
mov
mov
outsl
jno
mov
je
rcll
inc
arpl
xchg
in
and
adc
testl
push
imul
pushf
push
leave
sbb
out
add
jbe
pop
outsl
clc
ljmp
roll
add
lret
sbb
adc
nop
push
dec
adc
xchg
sbb
push
enter
pop
leave
and
and
daa
popa
sub
cmp
mov
clc
inc
inc
enter
or
push
loopne
repnz
mov
stc
aad
pop
rorb
aad
mov
add
jb
jl
jecxz
loopne
dec
jae
sbb
pop
pop
sub
cmc
mov
cld
addr16
cli
mov
dec
popa
pop
jnp
jle
imul
cld
leave
xchg
jnp
or
mov
pushf
xchg
mov
mov
in
fld
lret
cmpsb
fcompl
and
mov
stos
arpl
xlat
addr16
mov
insl
inc
inc
popa
lret
inc
jnp
cld
stos
xchg
stos
push
push
ret
push
push
fcoml
mov
out
add
arpl
imull
cmpsb
imul
jmp
scas
jae
lahf
imul
adc
sbb
clc
sub
or
jg
xor
or
movsl
xchg
dec
adc
mov
xchg
arpl
push
sbb
dec
mov
adc
sub
shlb
pop
ret
sub
lock
ficoml
lock
leave
mov
dec
cli
cmp
enter
fisttps
test
rolb
std
jecxz
jmp
addr16
out
in
cmpsb
out
loopne
xor
movsb
adc
lock
stos
out
popf
add
xchg
xorl
stc
cltd
add
xchg
mov
jg
nop
lret
cwtl
inc
cmp
in
pop
and
inc
js
cmpsb
or
scas
arpl
mov
repz
jb
addr16
popl
mov
jb
dec
dec
sbb
mov
ret
int3
jbe
push
push
cmovg
lea
xor
call
cld
data16
out
xor
outsb
jle
xor
jb
cmc
mov
add
testl
and
bound
mov
test
and
sub
cmpsl
shll
sub
sub
cmp
mov
mov
xor
inc
inc
mov
lret
fld
pop
push
add
mov
push
pop
inc
dec
neg
rcl
outsb
xor
loop
lock
jecxz
or
mov
out
xchg
and
dec
daa
out
lock
stos
sbb
subl
pop
lea
mov
enter
xchg
mov
pushf
mov
lahf
mov
in
ret
aam
mov
sub
push
mov
subl
pop
rolb
inc
push
lret
shl
pop
pop
dec
adcb
pop
xchg
jns
xchg
cwtl
sub
popa
xor
std
movsl
divb
gs
mov
mov
jne
je
rolb
jne
mov
clc
adc
xor
add
adc
pop
pop
add
xchg
test
push
push
es
popf
imul
mov
inc
test
inc
inc
in
xor
push
sub
mov
inc
nop
enter
lock
iret
fs
xlat
push
in
stos
rcr
fstp
insb
ficoml
loope
out
insb
imul
jae
outsb
insl
div
data16
loop
cmc
testb
xchg
xchg
mov
xchg
cltd
and
sub
cwtl
fcompl
sahf
mov
cmp
ds
loop
pop
rolb
mov
outsb
adc
mov
jbe
jns
cmp
jnp
inc
dec
data16
push
dec
mov
pusha
pop
xchg
dec
push
rorb
popf
pop
clc
mov
pusha
or
jae
jb
les
outsb
jae
mov
pop
jb
jbe
xchg
fiadds
jle
xlat
mov
add
adc
sbb
adc
pop
push
cmp
inc
rcr
push
and
aad
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
jp
imul
push
sbb
add
jnp
push
stos
negb
jg
xor
std
sbb
sbb
adc
rorl
sub
dec
sub
adc
popf
iret
sbb
sbb
cltd
mov
pop
dec
xchg
insb
sub
movsl
repz
dec
cmp
int3
mov
stc
sbb
in
cmp
jnp
and
aad
and
aam
fisttpl
icebp
sbb
ficompl
push
sbb
jbe
cmp
jmp
jnp
ljmp
adc
shl
jl
pop
mov
jl
test
test
sbb
les
sahf
dec
loope
xchg
xchg
and
iret
pushf
or
cmpsl
enter
fs
lahf
and
push
mov
js
repnz
or
mov
mov
js,pt
filds
mov
ja
cmc
xchg
push
icebp
pop
xchg
push
push
push
ficoms
fldpi
pop
pop
xchg
rcr
out
insb
popa
bound
je
push
add
jnp
and
jg
jle
daa
cs
fidivrs
add
jle
xor
or
and
sbb
movsb
sbb
xor
and
das
xor
mov
aaa
cmp
lret
mov
jns
mov
addl
jg
test
xchg
cltd
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
iret
push
mov
lahf
mov
push
pop
pop
std
dec
cmpsb
das
push
ret
cmc
ret
push
ds
inc
adcb
xor
test
cmp
push
mov
out
push
push
ficoms
popf
pop
pop
jecxz
push
data16
push
fildll
fs
adcb
jo
ljmp
jge
addl
or
cwtl
mov
or
sti
xchg
aas
aas
sub
icebp
sbb
push
xchg
lahf
mov
sub
cwtl
xor
xor
add
cmp
int3
mov
out
jmp
mov
push
rcl
cld
or
stc
lock
rclb
add
out
xchg
and
jp
ljmp
mov
and
add
lods
in
notb
mov
lea
or
cwtl
adc
push
sub
mov
mov
test
push
and
mov
pop
popf
es
mov
mov
mov
sub
push
aaa
inc
mov
cmp
sub
fisttpll
push
push
pop
popa
arpl
pop
cwtl
arpl
fildll
stc
mov
shr
imul
es
jno
sub
jo
mov
mov
pop
or
adc
stos
pushw
sbb
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
loop
cld
add
xchg
sarl
mov
inc
mov
sub
nop
mov
xchg
xchg
cwtl
xchg
mov
scas
sbb
sbb
mov
dec
scas
push
xchg
cmc
scas
mov
shll
and
mov
sarl
aas
inc
sub
loop
pushf
inc
inc
int3
add
lea
cmp
cs
pop
pop
test
fdivrs
pop
pop
xchg
fs
add
addr16
sbb
imul
adc
js
clc
sub
or
cltd
jne
and
jge
sub
sbb
sub
loopne
repnz
push
mov
lret
push
inc
pushf
clc
xor
lods
icebp
subb
xor
lret
cmp
jmp
lret
jmp
arpl
cwtl
rol
inc
ret
int
dec
cld
rcl
fadds
fs
push
scas
jns
loopne
and
fsubl
jmp
cmp
ja
ljmp
lock
idiv
cld
add
cli
adc
jg
test
test
ret
outsl
mov
xchg
ficomps
repnz
repnz
hlt
out
cmpsb
sub
pushf
outsb
xor
es
shrb
mov
mov
and
push
mov
inc
jge
loopne
mov
rolb
xchg
stos
outsb
pop
push
dec
loope
lret
mov
pop
loopne
int
pusha
aam
pop
in
push
repz
out
jecxz
jns
imul
jp
outsl
sub
in
jno
cli
incl
xor
lock
add
adc
mov
push
adc
mov
fcoms
dec
scas
les
add
and
popf
jmp
mov
xor
mov
jo
loope
xor
inc
inc
lret
clc
add
aaa
add
mov
into
rcl
pop
mov
fwait
push
adc
in
fdecstp
cmp
out
pusha
movsb
aad
mov
mov
lahf
xchg
mov
dec
add
add
stos
jne
cmpsl
mov
push
pop
movl
mov
mov
adc
movsb
shll
insb
pop
cmp
jge
hlt
mov
xorl
pushf
mov
aaa
arpl
add
je
push
mov
dec
fldcw
loopne
test
push
bound
pushf
pop
jns
cmp
and
icebp
mov
bound
je
jns
mov
jbe
xlat
mov
mov
out
adc
sbb
incl
sbb
mov
rorl
mov
mov
push
adc
cltd
inc
sbb
pop
push
and
sub
mov
movsb
mov
das
xor
sub
jl
icebp
mov
mov
cmp
rcl
leave
pusha
jns
fwait
imul
inc
push
adc
out
adc
fsubp
subps
jmp
icebp
pop
jp
mov
cli
out
cmp
out
icebp
add
ja
cli
in
notb
mov
cli
out
xchg
add
mov
push
sub
out
sub
insb
xor
scas
mov
pop
lds
xor
cmp
les
cmp
sub
inc
arpl
movl
adc
aaa
pop
pop
arpl
gs
imul
jg
lods
outsl
jo
in
jp
jb
xchg
add
shl
lea
cmp
icebp
mov
or
or
adc
js
sbb
loop
or
sub
sub
imul
call
ret
sti
mov
inc
add
pop
call
dec
mov
mov
iret
dec
pop
push
fstp
dec
push
sbb
ljmp
fs
jmp
ds
lock
in
mov
lcall
pop
scas
sbb
dec
mov
lds
push
and
adc
rcrl
stos
lahf
mov
jns
test
jb
jne
mov
mov
mov
or
inc
sar
pop
xchg
data16
sub
mov
pop
subb
pop
popa
jge
sbb
repnz
mov
xor
push
js
sbb
push
mov
imul
filds
jmp
add
cmp
or
sahf
or
sbb
and
xor
cltd
mov
nop
bound
adc
cs
jb
sub
mov
sbb
xchg
aaa
pop
ss
int3
ret
dec
lret
pop
aaa
xchg
in
rcr
fs
jbe
pop
sbb
adc
in
xchg
popa
push
imul
lock
test
jge
adc
inc
add
incb
pop
xchg
mov
ret
je
mov
and
mov
xchg
mov
andb
cmp
and
adc
mov
mov
inc
mov
int3
xchg
ret
sar
dec
push
mov
dec
ret
aam
dec
push
in
pop
pop
call
jns
cmp
mov
and
pop
loop
imul
je
push
mul
xchg
inc
push
jo
and
sub
out
jne
mov
add
int
or
adcl
fsts
adc
sbb
pusha
sub
mov
xor
in
call
cs
cmp
inc
call
lret
adc
ret
in
dec
or
gs
xor
mov
inc
loopne
fstps
aas
jecxz
jmp
pop
push
xor
hlt
adc
mov
jmp
and
test
leave
mov
dec
mov
and
nop
js
popf
leave
push
shrb
add
lods
scas
dec
scas
das
out
scas
lret
mov
cmp
sub
cmp
jg
xor
into
jle
push
push
sbb
dec
dec
push
jp
add
sbb
push
fldt
pop
arpl
cli
insb
popa
bound
subl
addr16
cs
in
xchg
outsl
jo
jae
add
addl
adc
jnp
sbb
or
xor
mov
lea
and
and
pushf
outsb
movsl
das
imul
sub
stos
mov
stos
mov
inc
aaa
cmp
fscale
mov
lret
test
mov
enter
dec
or
out
aaa
fildl
push
mov
pop
in
and
call
js
out
lock
jno
lock
popf
cli
cmp
jg
mov
js
push
movb
lret
mov
xchg
mov
push
push
ret
lods
xorl
and
mov
outsb
sub
jns
cmpb
mov
sub
dec
dec
push
push
sbb
pop
push
push
jg
or
bound
loopne
mov
pop
and
insb
mov
outsl
loopne
jb
jl
or
orl
incl
pushf
cs
incl
sub
lret
aaa
xchg
or
sbb
sbb
adc
and
mov
mov
sub
sub
jnp
aam
ret
test
sub
out
es
ret
stc
cmp
iret
enter
aam
lret
in
mov
pop
int3
out
shr
xchg
xlat
pop
lods
adc
loope
add
pop
mov
hlt
jmp
test
cld
icebp
add
cmp
jns
xchg
pop
sti
mov
xchg
jns
setno
xchg
xchg
cwtl
sbb
imull
test
fsubrl
test
lods
stc
sbb
movsb
pop
popa
dec
push
cmp
mov
mov
test
push
jb
les
sbb
pop
pop
push
sahf
sbb
movsl
pusha
fs
int
gs
push
ffreep
outsl
jae
sbb
push
jmp
jp
mov
cltd
js
clc
cli
add
incl
sub
int3
aaa
incb
mov
adc
sbb
sbb
sbb
and
mov
inc
pop
jb
int3
push
cmp
xor
pop
bound
mov
inc
test
jg
mov
inc
add
dec
push
cmc
xlat
fcomp
jns
pop
sbb
ljmp
out
and
jg
push
or
stc
cli
jo
imul
mov
shl
das
ljmp
xchg
sbb
xchg
sub
data16
movsb
shl
pusha
dec
cmp
fistpl
and
mov
stos
pop
mov
mov
repnz
mov
cmp
sub
push
or
pop
mov
dec
pop
inc
ja
nop
ljmp
rorb
xchg
loopne
pusha
gs
pop
mov
jae
sub
outsl
push
in
or
je
adc
test
cli
insl
aaa
lret
push
ret
inc
lock
push
or
sbb
std
jge
xor
sbb
mov
mov
fwait
leave
sub
push
daa
scas
and
xor
sub
cli
ret
fwait
cs
test
cmpsl
out
inc
faddp
int3
xlat
mov
rorl
leave
iret
inc
dec
jmp
sbb
pop
scas
dec
popa
lret
xchg
pusha
es
out
fnstsw
in
loopne
in
out
in
sbbb
inc
cld
icebp
repnz
adc
add
nop
data16
add
xchg
mov
add
mov
pushf
mov
mov
mov
mov
mov
pop
pop
test
mov
mov
aas
inc
je
dec
ret
outsl
jecxz
cwtl
push
push
int
mov
xor
push
xorb
pop
sbb
cltd
imul
call
in
test
jne
js
stc
lcall
icebp
jg
pop
pop
or
jnp
xor
or
stos
or
sbb
cwtl
sbb
pop
push
push
cmp
sti
pop
and
shlb
sub
das
mov
aaa
cmpb
faddp
out
push
sti
fs
enter
inc
dec
cli
rolb
repz
or
push
popa
jg
loop
sbb
data16
pop
pop
mov
idiv
xchg
mov
incb
add
mov
mov
lcall
adc
movsb
cltd
lcall
mov
jno
push
daa
xor
mov
mov
pop
lahf
rol
jg
outsb
scas
mov
jne
into
inc
jmp
ja
fistl
shlb
push
push
fcoml
mov
push
pop
pop
pop
and
push
fucomip
or
outsb
sbb
push
mov
pop
jp
outsl
clc
sbb
ja
and
hlt
fs
or
movsl
or
es
dec
sbb
sub
sbb
ja
mov
cltd
ljmp
lcall
add
dec
mov
mov
out
pop
inc
aaa
adc
rcl
leave
dec
push
push
pusha
fcmovnu
sbb
jmp
jecxz
fcoml
xor
call
sub
stc
cli
xchg
ja
mov
ja
mov
mov
lock
jns
lods
rclb
fistpl
cwtl
les
add
movsl
cmpsb
push
inc
movsl
lcall
mov
daa
scas
cs
aaa
popa
push
out
jns
loop
lods
inc
inc
jb
adc
int3
orb
xchg
push
jae
mov
push
mov
stos
lods
pusha
lsl
ss
jae
and
das
sbb
cli
xlat
mov
int
inc
add
pusha
imul
xor
cmp
mov
dec
push
adc
adc
and
lahf
fisttpll
cwtl
sub
mov
aas
mov
cs
lods
cli
mov
inc
jmp
mov
fisubs
mov
idivl
into
clc
in
leave
push
adc
in
or
fsub
std
pop
cwtl
add
push
stos
and
ficomps
icebp
or
aam
out
lcall
inc
sti
cld
cmpsb
lcall
in
jg
or
jge
popf
rorb
or
add
ret
xor
lods
mov
mov
into
daa
jmp
mov
pusha
push
icebp
mov
cmp
fsubrs
insb
int
dec
adc
dec
insl
dec
jno
rcll
xchg
bound
cmpsl
pop
arpl
gs
dec
jno
push
out
sub
ds
ja
push
repnz
push
jge
lcall
sub
dec
push
stos
jl
sbb
cmp
and
outsl
lods
pop
and
test
cmpsb
push
xor
jecxz
mov
into
pop
mov
in
sub
mov
adc
enter
mov
jmp
notb
aad
pop
es
or
or
and
loopne
xchg
pop
lods
cwtl
jns
jmp
idiv
mov
ss
mov
lcall
ret
mov
popf
inc
xchg
sub
lea
and
push
sub
mov
add
fisubrl
stos
in
cmpsl
test
inc
pop
sub
mov
mov
dec
and
dec
dec
inc
pop
aaa
arpl
inc
pusha
push
rcll
push
jg
push
push
enter
loope
or
into
push
imul
mov
or
lea
sbb
jg
add
sub
sti
adc
adc
mov
mov
mov
cltd
pop
sub
cmc
insb
es
leave
add
push
cmp
mov
loope
xor
jge
mov
cli
lret
das
lret
testl
aam
add
push
sbb
hlt
push
cmp
fadds
sbb
in
nop
test
addr16
add
xchg
jb
pushf
addr16
inc
dec
add
xchg
testb
and
test
sbb
and
fwait
pushf
sub
sbb
shlb
mov
mov
loop
mov
pop
sub
push
inc
sbb
ret
les
push
sub
mov
lret
mov
mov
ja
mov
dec
push
mov
pop
xor
pusha
sub
arpl
ret
jns
xchg
mov
fnstenv
clc
xchg
pop
push
or
jg
pop
adc
xor
mov
jnp
push
inc
xchg
loope
adc
test
ret
es
lods
sbb
daa
shll
jo
xor
divl
lock
jg
mov
lcall
push
adc
jno
ss
add
or
pop
loop
fsubp
or
in
sub
icebp
repnz
cltd
pusha
push
lcall
push
in
subl
rorb
rcll
nop
mov
push
sub
popf
sahf
enter
loopne
mov
dec
sub
pop
daa
adc
dec
fidivrl
mov
or
les
dec
dec
jbe
out
mov
cld
rcrl
fcoms
orb
lods
pop
pop
xchg
sbb
pop
js
dec
imul
adc
repnz
mov
test
push
pop
clc
std
sub
xor
ds
xchg
fmuls
or
push
adc
push
push
dec
mov
cmp
mov
pop
push
mov
xor
cmp
xor
mov
mov
inc
mov
pop
cmpsl
mov
dec
add
pop
hlt
xor
lcall
loope
outsl
fs
and
cld
push
push
fnstsw
mov
xchg
fisubs
aas
in
out
cwtl
mov
dec
jecxz
add
notl
mov
popf
push
or
lock
mov
fstpl
sbb
sahf
mov
dec
sub
popf
and
push
dec
inc
sub
scas
enter
mov
sub
inc
or
je
imul
mov
adc
dec
roll
cmpsb
push
pop
test
sbb
pop
jbe
int
push
out
adc
sub
pop
imulb
jbe
daa
je
push
jmp
or
pop
xor
jnp
or
cmp
mov
xchg
pop
sbb
lds
mov
daa
rol
outsb
mov
cmp
sbb
fnsave
out
loop
inc
push
arpl
ss
repz
mov
lds
and
aad
jae
push
pop
xlat
lock
inc
jecxz
adc
mov
push
ds
repnz
orb
hlt
adc
lock
mov
sti
xchg
dec
jle
lods
mov
push
push
xchg
xchg
scas
cmovge
nop
mov
mov
mov
xchg
sub
lods
mov
aas
adc
repz
mov
lods
jnp
cs
or
mov
mov
push
insl
lret
aas
fsubrs
push
fstl
pop
pop
mov
sub
imul
ljmp
outsl
sbb
ss
jne
xbegin
mov
lcall
cmp
out
sbb
inc
test
cltd
pop
sbb
nop
lea
sbb
sbb
aad
dec
cmpsb
insl
sub
cmp
mov
loope
xor
xchg
mov
loop
pop
inc
cli
lret
sub
lret
testl
sbb
outsl
iret
jae
pusha
pop
xlat
jo
popa
and
add
loopne
popl
add
aam
hlt
mov
addl
mov
jp
jg
aad
rolb
xchg
xchg
pop
mov
shl
fwait
adc
push
jl
test
stc
sbb
mov
and
cmpsb
fistl
sub
mov
scas
dec
pushf
cmp
scas
pusha
int
lahf
mov
shrb
inc
inc
dec
push
dec
jne
push
rorb
push
dec
loopne
jmp
fwait
pop
pop
aad
cmp
pop
pop
jecxz
pop
in
div
in
imul
mov
or
mov
idiv
and
ret
das
idivb
fiadds
test
movsl
js
adc
xor
xchg
outsl
and
inc
mov
mov
xchg
and
int
lods
outsb
jl
xor
rcr
mov
ss
int3
and
mov
inc
jle
mov
cwtl
popf
rol
jecxz
push
pop
pusha
divb
sti
ret
sub
loop
jo
popa
and
add
push
loopne
xchg
pop
lods
cwtl
jecxz
or
repz
xchg
dec
outsb
xor
add
sahf
cmp
pop
jg
stos
sahf
push
cmpps
mov
sbb
out
mov
jecxz
mov
dec
sbb
popa
add
shll
int
lahf
mov
fs
mov
adc
imul
repnz
sbb
aam
mov
pop
xchg
pop
fistpl
push
or
adc
pushf
shrl
or
outsl
mov
jnp
sub
and
addb
or
imul
or
or
mov
pop
insb
fldenv
fdivrl
sub
lods
jae
dec
mov
sub
pop
sahf
mov
dec
add
pop
call
dec
mov
mov
iret
stc
insl
jp
adc
cli
adc
or
test
fs
cmp
in
xchg
mov
push
out
fwait
js
mov
js
cmpsl
fwait
sub
mov
mov
adc
push
lcall
mov
leave
push
rcrb
stos
push
dec
bound
in
lods
mov
aaa
jne
sub
bound
mov
mov
dec
ja
adc
sar
es
pop
and
aad
pop
je
push
pop
test
and
data16
cmp
adc
outsl
popf
aad
mull
adc
mov
xor
jmp
adc
xor
nop
push
push
xor
fimuls
popf
adc
ret
add
and
xor
mov
inc
in
shrb
ds
popa
loopne
rol
ds
ret
dec
inc
scas
into
sar
icebp
ds
adc
loope
pop
popf
or
pop
xchg
fnstsw
mov
insb
and
pushl
out
repz
insb
mov
pop
cld
add
sbbl
jg
lods
std
dec
mov
push
mov
mov
nop
lods
mov
mov
pop
mov
stos
lahf
dec
cmp
lret
lods
scas
pop
sub
sub
jne
mov
mov
stos
dec
aas
imul
jb
lds
imul
dec
push
mov
pop
orl
imul
insb
mov
pop
push
and
repz
jbe
and
std
xchg
pop
jbe
or
xchg
xor
andb
or
mov
test
loop
or
push
mov
pop
imul
scas
adc
sub
movsl
repz
ss
int
clc
mov
leave
in
sub
aas
mov
icebp
in
push
or
jb
inc
aad
add
std
aam
mov
jecxz
push
cmpb
out
sub
repnz
jo
lcall
lahf
xchg
movsb
xorl
aas
stos
jb
mov
mov
xor
push
pop
enter
std
sahf
mov
in
mov
dec
das
insl
pop
and
push
sbb
cmp
ret
lods
ds
outsl
mov
jge
dec
push
jnp
xchg
int
push
in
mov
sbb
pop
pop
mov
popf
std
mov
insb
jno
ljmp
jp
sbb
lcall
leave
and
or
sub
dec
push
stos
jl
sbb
cmp
mov
mov
cmp
test
jmp
enter
cmp
shlb
mov
lock
lret
cmc
jmp
data16
inc
notb
add
push
and
xlat
fadds
jbe
fs
mull
out
xchg
fs
pop
jno
dec
hlt
stc
mov
sti
adc
in
js
cmc
inc
scas
jbe
cmp
adc
orl
mov
jl
lcall
and
mov
sti
mov
cs
ds
loop
mov
mov
mov
adc
ret
scas
inc
inc
push
ret
inc
dec
inc
sbb
daa
dec
push
leave
or
lea
orb
mov
mov
imul
push
inc
mov
out
jmp
xor
lock
add
or
pop
nop
sbb
cmpsl
popa
push
pop
or
xchg
sti
sub
fwait
push
adc
cmp
xchg
cmp
sub
push
mov
xor
jbe
fidivl
mov
cmp
test
stc
leave
cmp
rol
enter
inc
enter
outsl
popf
mov
push
pop
adc
out
adc
fsubp
subps
in
in
icebp
sub
repz
xor
sti
subb
stc
mov
mov
mov
js
test
sbb
mov
cltd
and
mov
insb
mov
mov
inc
sub
hlt
mov
shrb
dec
add
dec
inc
pop
inc
fdivrl
ficoml
xlat
push
push
pop
pop
out
outsb
inc
test
arpl
sbb
aad
call
cmpsb
data16
in
mov
nop
dec
outsb
jo
ja
in
xchg
jne
or
xchg
xor
and
stos
aas
adc
xchg
pop
sbb
xchg
pop
sbb
dec
lods
and
sbb
xor
imul
ss
add
lret
lds
rcr
jecxz
push
pop
pusha
idivb
rcl
add
sti
push
insb
lock
cmp
in
test
dec
in
jmp
je
jg
imul
or
jmp
lock
in
mov
add
mov
jns
mov
test
cld
fs
nop
or
cmpsb
test
xchg
fwait
popf
gs
enter
shlb
xor
xor
mov
mov
inc
xor
mov
aas
inc
inc
pop
stos
lret
fdivrp
dec
dec
push
push
faddl
loopne
fwait
pop
je
rclb
test
and
stc
stos
mov
mov
loopne
sti
jne
inc
add
ja
jge
out
sub
pop
add
pop
dec
xchg
or
or
xchg
adc
adc
das
dec
jne
and
push
iret
lds
cmp
sub
cmp
sti
mov
mov
inc
mov
mov
fcoms
or
pop
cli
fcomip
dec
adc
loope
insl
pop
mov
push
fstp
or
test
rep
cmp
jns
jmp
idiv
subb
adc
dec
add
incb
mov
push
fcmovb
test
push
and
rcpps
xlat
xchg
mov
jmp
fisubrl
test
loope
fisubl
pop
mov
cmp
sub
shll
sub
dec
jo
or
push
fisttps
and
pop
pop
test
inc
aam
pop
jns
rcrb
mov
and
pop
jecxz
int
imul
xchg
arpl
push
divl
ljmp
push
or
incb
cmp
cwtl
push
adc
cmp
xchg
adc
pop
leave
mov
dec
mov
sub
aad
mov
sahf
cmp
fiaddl
mov
mov
mov
int
jmp
push
bswap
call
or
add
bound
js
xchg
or
call
mov
idiv
movsl
cltd
ficompl
xrelease
js
je
xchg
lret
test
xchg
fwait
adc
mov
movsb
test
jmp
les
and
das
es
pusha
push
xchg
add
aad
scas
inc
dec
gs
aaa
mov
jno
cli
into
mov
add
push
push
adc
jge
faddl
arpl
adc
cmpsb
subw
sbb
in
pop
loop
jne
adc
jp
add
cmpl
and
lea
orb
dec
adc
dec
rcr
gs
xor
scas
in
fldenv
xor
into
idivl
cmp
out
dec
add
nop
pop
adc
insb
incb
sar
dec
fwait
pop
into
push
sub
fstp
or
and
std
sub
icebp
lea
xchg
pop
addr16
pop
cli
out
cltd
shlb
add
push
hlt
jge
stos
sti
dec
movsl
jl
daa
jnp
mov
mov
jl
lcall
adc
cmp
and
push
sbb
pusha
sbb
xor
mov
cmp
cmp
push
aaa
inc
dec
jne
mov
lea
cli
rcrl
xlat
adc
inc
push
pop
xor
jecxz
push
and
imul
xor
fyl2x
push
loop
jns
pop
push
dec
outsl
idiv
and
ret
das
idivb
repz
xchg
dec
or
xor
out
and
inc
mov
movsl
pop
sub
popf
and
int
lods
adc
ret
mov
sub
jecxz
jle
mov
mov
fmull
pusha
testb
add
sti
ret
lret
or
jne
and
add
pop
loopne
xchg
pop
lods
cwtl
jecxz
and
repz
xchg
mov
cmc
push
dec
jmp
cmp
js
cmp
into
adc
xchg
xchg
aad
or
mov
xchg
shlb
sbb
test
xchg
pop
or
inc
cmpsb
fwait
idivb
mov
mov
pop
xor
aaa
sub
add
inc
jecxz
mov
push
jp
int
dec
push
push
jg
test
xchg
push
jo
fsubs
nop
loope
or
dec
pop
jno
sbb
test
inc
imul
repz
idiv
add
add
adc
int
add
cmp
das
xchg
xchg
push
and
ljmp
xor
mov
dec
mov
sub
in
mov
mov
add
pop
call
dec
mov
mov
iret
stc
insl
cs
adc
cli
adc
fimuls
pop
test
fsubrp
in
xchg
mov
cs
or
cli
out
fwait
js
mov
js
cmpsl
fwait
insb
add
jg
data16
mov
adc
adc
and
adc
mov
mov
loop
mov
pop
sub
push
and
test
mov
dec
addl
mov
inc
insb
mov
rorb
dec
js
cmpl
pop
popa
jge
sbb
pop
popa
clc
into
jecxz
outsb
je
sbb
jp
pop
aad
leave
insl
addl
and
into
insl
pop
or
xchg
add
adc
in
mov
pop
mov
clc
gs
push
stos
gs
dec
loop
sub
jecxz
lods
add
xor
out
sub
inc
mov
orl
lret
rcl
mov
inc
push
mov
ffree
ds
sbb
js
jle
je
pop
in
out
aam
es
orb
mov
dec
repnz
incb
out
mov
test
add
addb
mov
fwait
pushf
prefetcht2
popf
sahf
rclb
pop
inc
mov
movsl
fstps
and
cmpsl
test
sbb
inc
mov
sub
shll
int3
les
push
xchg
mov
or
inc
dec
roll
push
push
jecxz
jg
push
cmp
and
pop
pop
arpl
bound
pushf
pop
jae
mov
in
adc
xchg
sahf
jnp
clc
and
outsb
jnp
xchg
or
xor
jle
or
jge
sub
sbb
inc
cmp
add
pop
sbb
push
hlt
xchg
pop
pop
and
scas
movsb
pusha
xor
xor
shrl
cs
cmp
inc
call
leave
aas
cmpl
fists
adc
insb
push
iret
sar
dec
fwait
pop
into
push
mov
jl
data16
std
sub
icebp
lea
xchg
pop
addr16
clc
cli
out
in
mov
sti
mov
jg
lods
mov
push
push
xchg
xchg
scas
cmovge
nop
das
lcall
les
aad
aad
in
lods
sbb
adc
out
scas
mov
jp
pop
pop
lret
outsb
lods
mov
inc
dec
dec
inc
pop
push
jnp
adc
push
dec
dec
dec
inc
icebp
inc
xor
fisttpl
inc
int3
flds
pop
pop
xchg
jl
mov
les
fidivrl
outsb
test
and
mov
jo
and
adc
imul
sarb
or
and
adc
stos
ljmp
sbb
and
push
xchg
mov
dec
dec
lahf
test
das
sub
outsb
jecxz,pn
out
das
xor
sub
iret
test
add
hlt
popa
and
rol
roll
mov
aad
push
jbe,pn
fildl
arpl
jecxz
cmp
gs
jl
data16
mov
dec
lret
pushf
add
repz
push
dec
out
js
std
mov
ljmp
addb
mov
xchg
add
xchg
jne
pushf
xchg
lret
lret
xor
pop
fcomps
test
and
lods
scas
cmp
das
insl
push
aaa
lods
push
fidivrs
cmc
mov
cs
mov
add
cmp
gs
shrl
dec
push
push
push
loope
adcb
pop
pop
arpl
jbe
imul
pop
aad
enter
sbb
imul
push
cmc
xor
jns
testb
push
adc
adc
adc
cmpsb
push
sbb
sub
test
sub
sub
cmp
inc
aaa
inc
ds
inc
mov
fwait
lret
int3
inc
mov
loop
data16
fcmovnu
addr16
jecxz
lea
fcomp
xchg
or
adc
fnstsw
mov
pop
imul
jb
out
mov
add
addb
dec
jge
mov
shll
adc
jo
mov
mov
adc
and
shrb
mov
mov
daa
stos
cmp
mov
mov
ds
clc
xor
mov
fadds
inc
jnp
int3
repnz
push
push
lock
xchg
int
pusha
imul
test
out
mov
jne
fidivl
jne
outsb
mov
test
add
jp
xchg
push
or
xchg
or
adc
clc
outsb
jp
sbb
fdivrs
pop
sbb
pop
aaa
movsb
test
sub
movsb
repnz
mov
stos
repz
xchg
mov
cli
test
jbe
cmp
leave
int3
rcr
pop
cmp
cs
dec
ds
inc
jp
fstp
imul
in
mov
loopne
arpl
jno
lock
ja
jns
push
test
out
xor
add
xchg
outsb
mov
sub
jg
lahf
push
mov
into
cli
xchg
inc
ja
cltd
cmp
mov
mov
mov
cmpsl
cs
stc
xchg
in
stos
scas
ss
ds
into
inc
jge
fldcw
dec
dec
pop
xor
jge
insl
add
push
test
flds
call
iret
fwait
pop
xlat
aad
push
imul
jb
outsl
push
jae
fdiv
lret
jno
ja
inc
int
test
cli
in
jo
or
jg
mov
or
test
adc
xor
sbb
gs
dec
sub
sub
insb
jno
das
cmpsl
mov
cmp
ss
jp
fidivs
call
jg
scas
jnp
push
cmp
leave
lret
add
inc
push
rcl
aam
sub
sbb
sub
or
lock
push
in
shrl
cld
icebp
out
lods
addr16
les
mulb
xchg
add
mov
fwait
xchg
pushf
mov
stos
mov
jno
cmpsb
stos
sbb
stos
cld
mov
cmp
mov
mov
cmp
push
ret
jle
mov
fildl
xchg
xor
dec
mov
adc
pop
xchg
popa
cli
imul
fistps
or
sub
hlt
sub
push
or
pop
fistpll
ja
nop
sti
aaa
testl
cmp
or
adc
or
or
adc
and
fnsave
sbb
and
inc
sub
and
xchg
and
mov
sub
cmp
in
sub
shll
lret
inc
test
rcl
inc
adc
add
mov
rcl
or
je
les
fmuls
adc
lret
loopne
push
sti
call
inc
lock
xor
scas
cld
test
out
jge
test
dec
lea
jns
mov
xchg
cmp
xor
sbb
cwtl
mov
lods
movsl
cmpsb
pop
xor
dec
mov
ds
pusha
add
sub
cmp
mov
jno
les
js
push
repnz
rclb
pop
jecxz
push
pop
jo
loope
fs
mov
mov
push
bound
ljmp
fdivrs
and
cmp
add
xchg
pusha
jmp
sbb
add
loop
or
push
aaa
and
and
push
mov
xor
call
ljmp
mov
ret
rol
repz
sub
dec
mov
fadds
stc
pop
fcomp
jns
sub
ljmp
and
sub
jle
data16
out
cltd
fwait
push
leave
cmc
add
mov
push
addb
leave
xchg
mov
rcll
xchg
xchg
mov
and
jmp
mov
test
xor
xor
mov
xlat
mov
aaa
cmp
pop
les
popa
or
xchg
mov
lods
lea
aam
cmp
test
imul
mov
imul
loopne
test
add
jbe
xchg
pushf
add
add
add
dec
pop
mov
test
pop
or
insb
cli
sbb
cmp
xchg
sbb
sbb
rorb
lods
sub
cmp
mov
inc
out
loope
lds
rol
mov
ret
rol
repz
sub
dec
rcl
add
pop
fcomp
jns
sub
ljmp
and
sub
jle
data16
out
cltd
fwait
push
leave
repnz
mov
push
addb
leave
xchg
cwtl
adc
xchg
das
xchg
cwtl
pushf
xchg
xchg
sbb
adc
popf
lahf
es
and
mov
mov
test
popf
mov
mov
inc
mov
shrl
mov
dec
inc
mov
push
ret
pop
push
push
shlb
aas
pop
push
push
mov
push
pop
fisubs
inc
shl
data16
push
je
inc
push
jl
jbe
repnz
jle
js
inc
data16
incl
add
or
clc
push
inc
adc
stc
or
xchg
push
adc
and
dec
cwtl
xchg
jg
sub
xchg
xor
adc
cmp
js
jmp
xor
inc
mov
fnstsw
enter
add
inc
cmp
mov
fcomp
fcompl
xchg
dec
pop
xorl
call
push
in
out
lea
popa
ja
scas
notb
imul
pushf
imul
mov
testl
or
xchg
xchg
popf
sahf
mov
lahf
mov
sub
shlb
sub
mov
mov
inc
inc
dec
dec
xchg
pop
inc
dec
dec
enter
dec
dec
imul
pop
dec
subb
pop
popa
iret
lcall
data16
out
gs
je
outsl
pop
jmp
ja
jno
xor
daa
stc
push
incb
out
pop
or
inc
orl
adc
mov
and
dec
xchg
mov
mov
push
cmp
cmpsl
jmp
movsb
movsl
daa
xor
cmp
ja
out
xor
inc
mov
stos
or
sub
cld
movl
xchg
fistpl
xchg
dec
push
jl
and
push
lock
frstor
call
pop
xor
cmc
adc
mov
scas
fwait
fs
mov
mov
std
push
sbb
fwait
pushf
mov
mov
push
sbb
movsl
lods
mov
leave
inc
sub
xor
rorl
ret
sarb
pop
roll
dec
ret
xchg
push
loop
outsb
dec
jg
push
rclb
push
shl
insl
gs
fistl
jne
outsb
mov
out
xchg
stc
jbe
daa
js
jnp
cli
lcall
add
clc
rolb
xchg
add
pop
sbb
sbb
mov
pushf
in
das
xor
inc
mov
xor
jno
mov
mov
mov
inc
mov
cmp
dec
xchg
cmp
lret
pop
shl
pop
push
or
ss
xlat
fadds
dec
push
inc
in
in
jp
push
add
repz
insl
mov
push
xor
or
jg
mov
pop
outsl
rolb
mov
lea
sbb
fwait
pushf
sub
pushf
mov
inc
jnp
test
mov
out
adc
and
mov
mov
test
js
je
mov
xor
push
push
popa
leave
enter
push
pop
pop
out
xchg
loopne
push
pop
lock
pop
cli
mov
jae
imul
jbe
jno
mov
incl
or
add
dec
fwait
sbb
cltd
sbb
adc
xchg
push
sbb
imul
comiss
daa
sub
xor
cmpsl
mov
cmp
cmp
lods
inc
aaa
cmp
sub
mov
enter
lock
adc
shl
inc
dec
mov
ret
call
push
xchg
aaa
push
pusha
rcr
in
pop
and
adc
repz
popf
popf
xchg
repnz
xlat
jno
add
divl
addb
xchg
inc
or
pop
jp
stc
ja
xchg
xchg
mov
arpl
mov
mov
and
idivl
mov
mov
dec
and
je
movl
dec
push
push
push
loope
call
stc
bound
pop
mov
in
pop
in
pop
test
or
lods
insl
xchg
jbe
push
and
xlat
jnp
orl
incb
xor
sub
mov
lahf
stc
inc
jle
cmc
sbb
adc
stos
sbb
pop
and
and
lods
loopne
mov
xor
cmp
dec
jg
cmp
packuswb
cmp
ror
int
clc
clc
clc
fcomps
fldenv
test
in
fiadds
jge
dec
ret
out
jb
pop
movsl
lret
jmp
insb
out
repz
add
jne
dec
movsb
push
jl
cmp
mov
mov
or
enter
xchg
sahf
mov
mov
xor
arpl
arpl
pop
imul
sar
ds
repnz
test
sarl
push
push
jge
sbb
xchg
push
lock
push
push
push
fidivrs
push
pop
popf
pop
jbe
loope
push
out
popa
adc
sub
arpl
add
outsb
jae
in
loop
jno
es
addb
or
or
add
sbb
or
pushf
adc
and
xor
lahf
jecxz
push
xchg
sahf
xchg
sub
movsl
mov
add
clc
sarl
lret
int3
roll
or
iret
rcl
iret
dec
inc
push
in
fisubs
jb
adc
cld
imul
stos
xlat
addr16
jmp
aam
stc
icebp
repnz
jns
adc
add
push
xchg
mov
push
cltd
xchg
xchg
xchg
shrb
sbb
adc
insl
das
lods
scas
mov
das
mov
mov
xor
mov
pop
inc
aaa
cmp
ss
mov
mov
loopne
lret
push
pop
push
ror
aaa
pop
pop
arpl
fsub
mov
out
gs
jecxz
jno
imul
fidivrs
cmp
ja
or
xchg
cmp
xchg
or
or
inc
sub
clc
dec
push
inc
cmp
add
dec
push
xchg
mov
fldenv
sub
push
add
xor
ds
jp
mov
mov
push
dec
shrb
xor
aam
sbb
aam
jb
pop
aad
pop
nop
int
enter
fsubp
out
sti
jbe
out
add
insl
out
xchg
cltd
cmp
lock
push
sti
incb
add
or
mov
mov
push
loopne
add
sub
mov
in
shll
insb
pop
mov
mov
push
mov
mov
cmp
fldt
jbe
ret
sub
adc
pop
daa
in
pop
pop
pop
sub
pop
pop
pop
sti
sub
pop
nop
jge
rep
jno
ljmp
insl
outsl
jo
ja
hlt
cltd
loopne
clc
std
incl
in
mov
mov
decb
xchg
sti
lods
std
fwait
movups
ds
sbb
mov
stos
imul
addr16
xor
cmpsb
gs
jns
sti
xor
cmp
roll
mov
leave
dec
inc
xchg
in
les
rcl
and
jecxz
pop
out
fsub
dec
bound
add
callw
pop
loopne
pop
adc
daa
out
data16
cmp
cli
out
jne
data16
mov
rclb
add
mov
mov
pushf
sub
fcompl
sahf
push
sbb
cmpsl
stos
lods
mov
mov
movsl
dec
xor
movsl
scas
sbb
dec
jns
jp
or
inc
dec
mov
dec
jle
mov
pop
pop
push
call
bound
and
and
fmuls
int
pushw
mov
stos
lds
js
or
cmp
xchg
rclb
loopne
jge
or
adc
and
push
adc
movsb
adc
shld
sbb
ljmp
cs
xor
ds
lahf
mov
cmp
out
fdivrs
pop
scas
pusha
jne
rcl
lock
mov
scas
sbb
idivb
enter
movsb
loope
adc
repnz
mov
imul
jb
add
clc
std
test
movsb
add
mov
mov
je
out
adc
mov
add
movsb
xor
and
movsb
fld
lret
cmpsb
and
sbb
xor
scas
mov
insl
sub
jo
movsb
mov
rol
rclb
inc
inc
test
ds
inc
jno
mov
enter
push
pop
jg
dec
mov
xchg
out
pop
cli
and
pop
pop
pusha
or
cmp
dec
cmpsb
adcb
jne
cs
or
and
sub
xchg
repnz
adc
adc
in
setbe
mov
xchg
adc
daa
lods
adc
test
sub
mov
bound
fdivl
cmpsb
sub
mov
jmp
mov
dec
rcl
adc
int3
into
sar
dec
call
push
mov
jbe
dec
sbb
adc
movsl
jb
in
mov
lcall
push
push
incb
clc
cmp
movsb
test
jne
rolb
int
pushf
jp
pusha
jg
lcall
mov
sbb
xchg
sub
xor
push
cmp
mov
daa
test
popa
aad
mov
inc
inc
inc
jb
mov
je
dec
mov
xchg
pop
popa
in
pop
lods
pop
pop
arpl
test
jae
in
xor
sbb
jne
sbb
cmpb
lock
add
out
or
or
push
and
add
dec
mov
movsl
fs
mov
cmp
sbb
sub
imul
cmp
roll
mov
leave
repnz
xchg
in
les
rcl
popa
scas
push
fisubrs
lock
in
jno
clc
movsl
jae
in
mov
je
imul
dec
cmpb
test
mov
jl
nop
lods
icebp
and
nop
lods
inc
mov
mov
mov
sub
aas
adc
mov
sbb
ret
sarl
inc
and
jle
inc
jne
mov
pop
into
adc
pop
dec
shr
cmp
flds
pop
pop
sti
push
jecxz
pop
nop
jge
out
insb
jno
loop
fldcw
jne
sub
ja
call
cli
xorl
sbb
lahf
aaa
push
cmp
add
adc
pop
sbb
xor
scas
pop
and
pop
das
sub
jge
jecxz
mov
mov
test
leave
out
lock
mov
push
mov
rorb
mov
jae
fs
xlat
lock
loopne
add
jmp
loop
xchg
fisubs
sbb
out
lock
sti
addb
inc
cmp
cmp
jae
test
mov
lret
daa
xchg
mov
lods
mov
mov
movsl
cmpsb
push
and
movsb
sub
pop
mov
mov
mov
stc
ret
mov
inc
push
rcr
mov
dec
dec
mov
jns
jno
leave
sarb
push
pop
pop
and
fs
pop
pop
es
imul
push
scas
outsb
and
insl
xlat
jnp
orl
cld
incb
xor
adc
cwtl
testb
xchg
inc
sbb
std
scas
outsl
mov
mov
fimuls
and
inc
popf
xchg
xor
cmpsl
mov
cs
jbe
jmp
test
mov
stos
lret
inc
cmp
aam
fxch
push
rcl
mov
in
xchg
enter
fwait
aam
fbld
loope
loop
jae
repz
insl
mov
fisubrs
stc
cld
icebp
bnd
xchg
and
jle
test
xchg
gs
xchg
push
lds
js
mov
sahf
mov
mov
sbb
scas
sub
sub
mov
inc
sbb
push
negl
push
pop
dec
dec
mov
push
aam
dec
xchg
adc
imul
cwtl
push
mov
cmc
pop
push
movsb
imul
lods
jno
popf
sbb
jns
movsl
mov
jnp
sbb
js
std
incl
in
mov
adcl
dec
ucomiss
sbb
add
sbb
leave
cltd
and
ficomps
cmpsl
in
jbe
xor
xor
or
cmp
push
pop
mov
repz
testl
rorl
mov
dec
loopew
push
pusha
lret
out
jb
jge
outsl
and
and
pop
jg
repz
push
lock
ret
sbbl
and
add
push
jl
and
pushf
or
nop
sbb
jbe
mov
mov
pop
shrl
out
sub
inc
jns
aad
inc
inc
inc
jno
xchg
mov
clc
inc
push
pop
xchg
jp
inc
inc
popa
bound
pop
out
xor
mov
sbb
sbb
outsb
jae
xchg
cld
in
jno
insl
cmp
add
psubusb
inc
add
sbb
popf
pop
or
xchg
or
adc
sbb
mov
and
and
lods
loopne
outsl
cmp
es
fsubr
push
pop
leave
mov
subb
iret
enter
aam
lret
mov
dec
sbb
pop
nop
int
pop
shl
fnstsw
push
sbb
in
ja
popa
pop
pop
jmp
hlt
gs
push
cld
icebp
lock
push
sti
incb
adc
ret
xorl
testb
xchg
xchg
mov
xchg
adc
mov
mov
sbb
cwtl
lods
cmpsl
test
loope
sbb
scas
fs
mov
fwait
mov
mov
stos
lods
mov
pop
inc
dec
dec
mov
test
ds
lods
mov
xlat
testl
dec
in
popf
fs
insb
push
aad
movsl
insb
mov
outsb
mov
jp
and
jle
test
stc
incl
in
mov
mov
and
icebp
add
adc
or
push
push
xchg
in
jge
mov
xchg
sahf
mov
xor
mov
je
sarl
xor
xor
inc
mov
subl
or
imul
add
iret
rcl
pop
ret
hlt
lea
fmuls
jmp
mov
mov
je
xor
jp
out
or
mov
repnz
addb
xchg
jge
mov
jp
std
cwtl
xchg
fwait
rorb
adcb
int
data16
mov
mov
jno
lret
mov
ds
dec
ret
insl
cmp
fsubr
aaa
dec
inc
or
rcrl
fbstp
fists
pop
pop
cli
pop
ljmp
insb
into
adc
sbb
lods
insl
repz
lock
add
adc
xor
adc
sub
decl
sbb
loope
orb
ljmp
scas
and
popf
loope
cmp
dec
sub
or
push
imul
sub
sbb
out
cmp
dec
jne
xor
inc
stos
iret
ret
fs
jecxz
enter
repz
push
cmc
ret
fildl
dec
pop
ret
out
fnstsw
imul
in
mov
out
in
out
jns
add
lock
push
arpl
aaa
fs
cld
mov
xchg
lock
addb
outsl
mov
xor
nop
xchg
xor
xorb
lods
xchg
and
fildll
inc
lods
dec
stc
cmp
mov
repnz
jle
fiaddl
call
lds
pop
dec
mov
adc
out
in
pop
ja
inc
push
pop
pop
in
jl
icebp
pop
pusha
call
push
fldcw
outsl
neg
xchg
mov
jg
addl
xor
or
movsl
pop
or
push
roll
inc
test
mov
movsb
fs
inc
lret
lods
loopne
cmp
lods
mov
jecxz
inc
leave
cmp
add
mov
or
popa
aam
mov
rcl
repz
test
inc
xor
adc
or
xchg
jno
jecxz
test
xchg
call
call
notb
xorl
lods
adc
xchg
addl
mov
loope
lea
xchg
sub
xchg
cwtl
xor
out
test
dec
and
mov
in
call
inc
mov
push
jnp
xor
aaa
popa
mov
push
pushf
jge
xlat
arpl
dec
adc
dec
jns
int3
rorl
push
pop
arpl
idivb
lcall
pop
in
push
dec
xchg
loope
jnp
xor
inc
add
cltd
add
inc
push
mov
test
mov
or
sbb
sub
pushf
pop
ja
fs
js
inc
mov
xor
dec
dec
roll
push
xor
inc
sub
shl
push
or
data16
push
ret
ficoms
out
cmp
fsubp
pop
popf
es
in
insl
inc
xchg
pop
imul
cmc
stos
cld
mov
clc
std
decb
addb
jb
lea
nop
or
out
leave
push
xchg
jnp
and
scas
enter
out
inc
scas
pushf
and
xchg
stos
lods
scas
cmp
test
ss
add
push
ds
push
inc
mov
inc
inc
into
cmp
adc
dec
dec
roll
inc
jg
aaa
jecxz
push
jb
push
bound
lock
sti
and
lahf
pop
popa
clc
bound
in
xor
sti
loope
addl
jbe
mov
push
lds
add
in
push
lret
addb
lahf
or
nop
aam
pop
sahf
add
shlb
adc
sub
lea
xor
sub
das
cmp
movsb
fstps
std
mov
lret
xor
lret
inc
in
lret
xchg
mov
push
cmp
jecxz
rcrb
fsubrl
jno
sub
repz
arpl
stos
hlt
icebp
repnz
jbe
jge
or
cmpl
mov
xlat
mov
adc
xchg
xchg
mov
sbb
mov
xchg
cwtl
into
or
lods
mov
je
mov
stos
scas
ss
pop
es
cmp
sbb
pop
cmp
cmp
dec
dec
inc
mov
or
pop
pop
push
push
adc
push
or
jae
pop
arpl
pop
pop
sbb
jne
insb
popa
lds
insb
call
jmp
aam
pop
push
mov
or
sub
or
xchg
xor
ret
cmc
pushf
mov
cli
mov
mov
lea
mov
cbtw
fwait
add
mov
jp
dec
ss
mov
inc
shrl
stc
cmp
ret
cld
dec
pop
scas
leave
pusha
lret
xchg
inc
adc
dec
dec
push
loop
jecxz
out
test
mov
out
out
in
push
imul
inc
sti
cld
icebp
repnz
iret
call
add
or
xchg
mov
push
xchg
nop
scas
jmp
adc
or
inc
movsl
lcall
mov
stos
sub
sub
cld
imul
ret
les
outsb
fistpl
dec
aas
dec
mov
jb
adc
bnd
push
sub
pop
pop
pop
iret
ljmp
imul
insl
jmp
jno
fsubrp
imul
jge
ja
mov
repnz
add
add
jne
clc
adc
or
ficoml
icebp
pop
push
inc
xor
scas
pop
sbb
scas
adc
mov
xor
in
enter
outsl
test
mov
rol
sub
pusha
dec
pop
pop
rclb
fsubl
dec
push
xchg
fcmovu
loopne
cmc
out
loope
lods
add
out
repz
mov
test
ljmp
sahf
cmpl
add
mov
cmpb
adc
push
lods
popf
mov
rcll
sbb
test
mov
adc
test
arpl
mov
movsl
lret
mov
adc
inc
cmp
ret
imul
push
push
fdivl
jmp
push
mov
jbe
inc
rcrl
push
fucomip
shlb
outsb
or
repnz
outsb
and
cmp
sbb
or
cs
jbe
add
or
xor
adc
mov
sbb
std
and
dec
ss
sbb
sub
movsl
push
xchg
outsl
nop
lcall
clc
clc
aaa
cmp
mov
cmp
test
dec
mov
int3
push
dec
inc
sbb
push
fwait
pop
les
mov
dec
pop
in
in
loope
push
add
mov
out
mov
or
mov
out
lock
in
clc
push
add
lods
mov
imul
mov
adc
adc
rclb
test
movsb
ror
addr16
test
jmp
inc
cs
cmp
scas
mov
sub
mov
sub
aas
mov
inc
sarb
loopne
fstl
ret
aad
ds
rcrl
xchg
imul
into
imul
jae
sbb
in
jge
jnp
outsl
clc
loop
jge
orl
incl
sbb
push
add
adc
xchg
movsb
adc
mov
fstpt
xchg
pop
cs
mov
lret
stc
test
das
in
aaa
sahf
sbb
ret
aad
xchg
mov
inc
in
and
adc
fmul
push
scas
repz
js
in
jb
sbb
add
and
sahf
mov
das
out
or
jae
cld
ljmp
roll
cltd
mov
mov
nop
mov
xchg
fcomps
cmpsb
stos
lods
sbb
xor
lock
pop
mov
jo
lret
mov
mov
les
push
xor
inc
imul
push
inc
jae
jmp
ret
int3
inc
pop
push
push
out
dec
pop
popa
bound
sahf
imul
pop
out
outsl
jne
sub
jno
out
jg
mov
add
add
fwait
push
or
cmp
fwait
std
mov
dec
cmp
mov
add
and
daa
out
mov
xor
dec
inc
cmp
sub
inc
inc
ds
iret
cmp
lods
xlat
rol
aam
push
rorl
lret
inc
aam
rcll
arpl
fsubp
dec
cmpsl
push
call
mov
out
out
xchg
or
jmp
insb
push
cli
icebp
repnz
adc
addl
mov
nop
or
push
pop
sbb
cmpsl
enter
stos
cmpsb
stos
rcl
cmp
push
pop
test
mov
mov
push
clc
push
cmp
cmp
pop
xchg
test
cmp
dec
dec
aad
outsb
fwait
pop
inc
fcoms
pop
imul
arpl
aad
enter
sbb
out
xor
mov
lahf
movsb
stc
cli
xor
in
or
sub
or
xchg
adc
xor
mov
push
pop
sub
sub
cmp
mov
repz
xor
inc
or
mov
mov
inc
enter
pop
fcmovb
into
shll
sbb
rcrb
fwait
pop
rcr
pop
cwtl
jno
jnp
jbe
push
jle
jge
repnz
outsb
subb
pop
insl
or
sti
clc
std
hlt
ret
xchg
cmpsb
nop
mov
nop
xchg
mov
lcall
stc
xor
cwtl
mov
ljmp
sub
call
mov
mov
adc
mov
jae
dec
inc
loop
inc
inc
inc
jnp
adc
push
dec
dec
dec
inc
icebp
inc
push
push
push
out
pop
ljmp
pusha
fstps
imul
mov
xor
clc
je
lods
add
jl
aad
dec
adc
add
aaa
or
or
xor
or
or
pop
xchg
mov
pop
aaa
int3
enter
fdivrs
xor
xor
mov
iret
mov
lret
push
aad
lret
int
sbb
lret
pop
aad
mov
frstor
out
loopne
paddusb
loopne
xchg
call
and
inc
and
lock
or
rolb
jp
adc
mov
push
jmp
add
fidivrl
adc
cltd
fwait
movsl
mov
pop
sub
xchg
and
les
mov
test
adc
pop
dec
jno
jb
cld
popa
ds
imul
push
pop
loope
push
push
push
loope
push
int3
flds
pop
pop
xchg
jl
pop
insb
popa
jl
mov
cld
aad
mov
cmp
dec
rcll
out
jns
mov
or
pop
inc
adc
or
or
xchg
add
fwait
iret
add
xlat
sbb
pop
out
sub
test
xor
cs
sub
shrl
xor
in
cmpsl
sub
mov
int3
sarl
movl
dec
push
fmull
lret
sbb
in
dec
mov
in
outsb
dec
push
jge
jns
icebp
or
in
out
lcall
in
sar
incb
jbe
jge
out
sti
mov
xchg
ret
scas
mov
lahf
xchg
xchg
xor
cmpsb
fwait
lahf
and
lea
test
in
push
daa
xor
mov
dec
icebp
sub
mov
test
mov
bound
xchg
inc
inc
dec
xchg
adc
xlat
insl
mov
push
jmp
pop
fs
dec
aad
andb
mov
int
popa
fwait
jb
subb
imul
add
jecxz
cli
pushl
pushf
xchg
incl
xchg
mull
push
sub
sbb
and
and
mov
and
in
sub
shrb
fwait
or
jae
xor
dec
adc
mov
vshufps
inc
scas
ror
lret
rcl
popa
lret
add
sub
fstp
std
decb
fisubl
in
ja
jno
out
repz
mov
repz
in
pop
cld
add
nop
or
fs
repz
mov
pushf
xchg
xchg
sbb
movsb
cltd
xor
mov
scas
mov
mov
mov
jne
mov
mov
sub
cld
sub
dec
xchg
mov
push
fsubl
pop
pop
push
sahf
imul
xchg
insb
jne
out
imul
inc
stos
insl
pop
out
jne
jl
cmc
jbe
jl
lcall
stc
or
add
or
adc
or
xchg
adc
sbb
sub
sbb
pop
adc
and
sub
sahf
pop
daa
cmpsl
movsb
and
sub
stos
data16
mov
aas
xor
xor
ror
stc
leave
cli
push
or
lret
icebp
cmp
mov
lret
mov
jb
xlat
pop
nop
lds
aam
fnstsw
push
sbb
maxps
out
out
xchg
xchg
cmpb
cld
loopew
mov
ljmp
aas
dec
jl
or
add
movsl
ljmp
sbbl
xor
lcall
mov
hlt
mov
sbb
mov
aas
inc
dec
xor
inc
arpl
pop
xchg
scas
dec
push
push
lock
push
push
push
loopne
arpl
ret
data16
pusha
gs
test
add
push
cmp
ja
jae
jg
stc
jbe
jg
push
or
add
add
mov
movsb
ljmp
dec
xor
rorb
cmpsl
movsb
or
sub
dec
sub
xor
inc
rolb
add
stc
bound
jecxz
cld
cmp
leave
lret
add
sbb
pop
pop
pop
pop
mov
sbb
sbb
inc
repz
clc
pop
cs
lcall
jmp
jp
cmp
mov
inc
add
mov
jg
out
pop
xchg
fwait
pushf
daa
js
in
popf
test
cwtl
rcrb
sbb
je
out
daa
xor
scas
mov
push
in
push
mov
mov
cs
sub
push
cld
inc
inc
arpl
xchg
lods
push
push
bound
cmpsl
cmc
imul
pop
mov
pusha
loopne
imul
sbbb
je
imul
jge
jle
stc
push
adc
add
popf
scas
push
or
xchg
call
push
xchg
movsl
pop
sbb
fs
sub
cmp
jp
xor
into
jne
fnstenv
int3
jbe
cmp
lods
pop
repnz
mov
push
mov
int3
into
pop
ret
pusha
push
int
aad
cmc
imul
fidivrs
je
fsubp
imul
inc
out
jecxz
addl
add
in
icebp
cmc
push
imul
adc
jns
les
test
int
xor
xchg
jmp
mov
pop
movsb
cltd
lcall
mov
leave
test
int3
mov
mov
mov
fstpl
inc
popa
repnz
test
cmp
adc
dec
insl
xor
call
jmp
gs
out
xor
popa
bound
repz
mov
jb
outsl
hlt
sub
test
jb
je
les
test
cli
lret
mov
in
xor
adc
fwait
add
cmpsb
stc
sub
sbb
sub
push
and
and
cs
sub
mov
fisubrs
cmp
mov
inc
inc
cmp
test
and
push
rol
ret
push
aam
lret
jo
cmp
rcl
push
adc
jecxz
insb
fcmovu
loopne
insb
push
addr16
sub
subb
hlt
jo
lret
std
repnz
rep
incl
lods
stc
jl
mov
add
mov
pushf
xchg
xchg
shlb
rcll
sbb
aaa
loopne
aad
rorb
mov
daa
xor
scas
mov
inc
push
pusha
int
ret
mov
and
mov
inc
inc
dec
mov
ret
dec
dec
push
dec
jle
imul
push
ds
fdivrs
insb
gs
push
mov
imul
mov
clc
fbstp
js
je
inc
stc
cli
sbb
add
add
orb
or
dec
loope
sbb
mov
cmp
out
mov
fstpt
dec
mov
xor
adc
inc
inc
aas
jge
mov
ret
int3
rcl
aam
popa
iret
rcl
inc
push
mov
rcl
jae
loope
xlat
or
in
in
push
and
data16
xlat
aaa
int3
lret
ljmp
in
cmp
repnz
add
divb
mov
ret
push
loop
leave
cltd
lret
fistpl
cltd
lcall
mov
push
and
adc
scas
mov
and
fnstsw
push
scas
mov
mov
iret
jo
mov
js
roll
jg
push
dec
ret
popa
iret
sarb
pop
pusha
jmp
scas
popa
pusha
gs
out
push
aas
lods
insl
add
mov
jb
outsb
fwait
cmpsl
addl
xor
popf
lahf
pop
out
jl
cmp
cmp
and
mov
adc
mov
mov
iret
and
mov
xor
jbe
mov
fists
aad
test
mov
lea
icebp
lahf
cmp
sbb
push
mov
adc
add
mov
fsubp
outsl
insb
push
and
adc
dec
mov
in
lahf
fsubrs
rorl
lock
xchg
and
lods
cltd
ficoml
icebp
add
push
push
orb
mov
xchg
xchg
rclb
mov
push
and
fwait
and
cmpsl
test
in
data16
mov
xor
mov
mov
push
inc
mov
pop
inc
inc
dec
outsl
fmuls
jb
dec
call
dec
push
in
pop
pop
call
jns
sbbb
and
out
or
insl
adc
sub
jae
cmp
ja
cmp
popa
and
leave
cmp
jno
or
dec
push
inc
lods
pop
adc
or
sbb
add
pop
pop
and
xor
adc
into
mov
xor
shr
aaa
add
aas
fwait
pop
pop
iret
rcl
adc
inc
addr16
jecxz
and
loopne
out
bound
out
test
mov
cmc
idiv
pop
xor
idiv
jmp
mov
mov
and
addb
mov
data16
xchg
xchg
and
popf
ja,pn
shlb
mov
pusha
cmp
push
and
mov
test
cmc
mov
addr16
jb
les
cli
int3
inc
dec
rolb
mov
js
ss
mov
loop
insl
sub
pop
xlat
sbb
sti
jl
lahf
pop
fucomip
shlb
outsb
mov
jae
sub
ja
mov
into
stos
cli
ds
jl
aad
or
popf
mov
mov
xor
aas
mov
xchg
mov
and
and
mov
xor
shl
je
shrl
xor
aaa
inc
mov
xlat
test
or
int
mov
rorb
movb
dec
jb
loope
dec
push
push
mov
imul
pop
out
jbe
xchg
push
icebp
xor
add
sahf
cmp
std
inc
add
mov
cmp
lods
pop
xchg
xchg
dec
xor
or
stos
cltd
lcall
inc
movsl
cmpsb
sub
popf
in
push
mov
sbb
mov
dec
dec
sti
mov
cmp
aas
inc
xor
daa
inc
dec
inc
lret
pushl
mov
dec
subl
push
insl
addr16
pop
pop
jge
jae
daa
pusha
gs
xbegin
outsb
stc
arpl
ljmp
jl
or
adc
sbb
adc
cwtl
xchg
or
mov
xor
xchg
push
push
sbb
sbb
movsb
fcomps
xchg
push
sub
inc
inc
divb
jmp
imul
push
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
lret
and
sbb
push
cmp
and
jge
mov
mov
sub
dec
aas
insl
sarb
ja
dec
push
leave
or
pop
pop
pop
jmp
iret
cwtl
imul
add
movsb
je
incl
loope
insb
mov
jg
jmp
or
les
and
push
add
pop
and
adc
aas
xchg
out
dec
sbb
or
popa
push
mov
mov
push
push
daa
mov
data16
scas
in
lahf
cmpsb
popa
cmp
das
lret
cmp
inc
jle
cmp
std
ret
cld
cmp
jae
dec
mov
inc
push
iret
dec
fstpl
frstor
aam
and
loopne
popf
push
stos
test
out
addr16
xchg
jmp
int
xor
movsl
in
sar
add
dec
test
movl
test
les
cltd
das
sahf
xchg
adc
push
cmp
lcall
arpl
sbb
dec
test
mov
out
leave
pop
sahf
sub
mov
push
xor
aaa
outsb
arpl
mov
cmp
pop
xchg
inc
inc
dec
xchg
add
xlat
insl
mov
push
jmp
push
pop
pop
pusha
stos
imul
mov
ficompl
test
and
xchg
mov
mov
and
xor
push
cmpb
xor
cli
fmuls
into
daa
jb
adc
inc
inc
and
cld
push
pop
and
mov
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
add
push
lds
mov
pop
rorb
lret
xstore-rng
cmpsl
ret
sbb
mov
push
inc
pop
inc
mov
push
push
mov
lods
cmpsb
test
mov
lahf
mov
ds
dec
inc
ror
ds
arpl
dec
insl
inc
les
ljmp
hlt
sbb
clc
sub
stos
push
fs
xor
ja
jge
sub
std
orl
bnd
rorb
adc
or
outsl
orb
push
scas
sbb
dec
sbb
push
das
xor
mov
and
daa
das
sub
es
repnz
mov
leave
aas
mov
rcl
les
test
jo
xlat
pop
call
and
adc
cmpsb
jmp
loop
mov
add
repz
lahf
jmp
clc
xchg
jno
sbb
and
addb
fisttpl
inc
or
insl
ficompl
fcompl
cwtl
push
sbb
fildll
and
fs
dec
mov
cld
shrl
xor
jp
pop
add
add
shll
lea
test
test
sahf
imul
insb
adc
ljmp
xchg
and
in
jno
inc
cltd
incl
sub
add
fstpt
adc
mov
cmp
fldt
pop
dec
sbb
mov
push
and
xor
out
sbb
xchg
mov
lret
mov
outsl
das
dec
and
fnsave
decl
orl
repnz
rcl
mov
aad
rcr
movsl
push
paddusb
imul
in
adc
xlat
leave
jmp
in
mov
pop
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
jecxz
xor
aad
push
jns
mov
sbb
adc
ja
cmpsb
add
sbb
pop
or
adc
and
adc
and
inc
cwtl
xchg
lret
xor
sub
push
xor
pop
inc
cmp
xor
loop
cld
mov
mov
out
add
jne
rcl
or
movsl
cld
lods
sbb
ffree
jp
sbb
arpl
in
movsl
in
mov
mov
mov
xor
lock
adc
push
repz
fdivrl
andl
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
nop
outsb
fucom
lods
push
sub
cmp
mov
out
pushf
add
jg
mov
jnp
mull
aam
push
ficoms
push
cld
jns
or
sbb
adc
jecxz
lahf
outsb
stc
pop
addb
mov
jo
ja
andl
add
in
jg
cmp
mov
mov
sbb
and
fstp
fcmove
rcl
fcmovnu
loope
xlat
fcomp
movsl
dec
mov
xor
cmp
enter
cmp
leave
mov
add
lock
jg
fstps
leave
rclb
rclb
fcmovu
jecxz
outsl
fnstenv
pop
sbb
psubb
jmp
bound
jbe
in
out
repnz
test
add
mov
inc
jl
std
mov
mov
lcall
sahf
mov
mov
mov
leave
ja
mov
add
push
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
fldenv
push
bound
addl
mov
xor
xchg
test
sbb
jne
and
mov
ret
jb
repz
mov
sub
adc
or
inc
adc
mov
adc
adc
jg
sbb
ja
addr16
pop
pop
sub
xchg
xlat
sub
cmp
mov
mov
lret
mov
cld
cmp
xchg
pop
push
rclb
loopne
jecxz
shlb
and
sbb
jno
pop
insl
out
pop
imul
movsb
adc
cmp
cmc
jnp
push
lods
jg
xor
adc
aam
cmp
adc
sub
or
mov
movsl
in
cmpsb
push
mov
insb
test
mov
aam
pop
mov
jge
jae
or
jbe
fstpl
out
dec
push
fiaddl
out
push
push
iret
adc
pop
pop
inc
xor
fisttps
fsubs
outsb
popf
mov
ja
jl
in
mov
cltd
jg
js
in
daa
add
pop
cmp
sbb
aaa
adc
sbb
push
adc
sahf
adc
jle
sbb
adc
pusha
sub
fstp
jecxz
jmp
imul
push
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
sti
sysret
adc
mov
cs
mov
cltd
add
popf
xchg
xchg
mov
xchg
cwtl
ret
xchg
fisubrl
pop
loopne
sub
xor
mov
inc
scas
scas
clc
fisubl
bound
jb
fs
jl
add
jmp
add
pop
jle
jae
push
dec
sbb
mov
fwait
jge
fildll
outsb
pop
imul
jae
enter
adc
and
sbb
mov
add
scas
cmp
cmp
inc
seta
stos
cmp
inc
dec
cmp
pop
mov
into
fcmovnu
fadds
jge
cmp
jb
mov
mov
call
idivb
jnp
or
dec
cmp
stc
cli
incl
faddl
push
pop
push
fcmovnu
loopne
sbb
jmp
xchg
mov
push
cmpsl
jmp
mov
xor
or
orb
rorb
mov
nop
push
int
jno
dec
into
cwtl
push
aad
jns
push
mov
test
mov
mov
dec
xor
mov
je
fildl
dec
aas
imul
imul
adc
push
pop
enter
div
pop
cmpsb
pop
pop
pop
jecxz
push
loopne
pop
cmp
adc
in
jns
and
cmpl
in
clc
jbe
inc
adc
popl
loop
push
adc
and
xchg
mov
pop
aaa
pop
dec
and
mov
lret
out
ljmp
push
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
leave
int
xchg
outsl
movsl
fbld
cmpsl
test
sub
mov
cmpsl
das
mov
dec
and
inc
or
inc
arpl
pushf
test
cmp
leave
xchg
pop
dec
movsl
pop
fisttpl
dec
test
pop
pop
sahf
pop
loope
orl
outsb
sbb
push
sbb
sbb
js
icebp
xor
lret
xchg
std
inc
add
xor
leave
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
rcl
cs
imull
xor
xor
ret
jbe
fwait
loopne
test
xchg
sbb
rcr
lock
aam
mov
adc
fistpl
cli
andb
fidivrs
push
test
jmp
popl
sbbb
or
push
cmp
mov
ds
lods
inc
inc
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
int
mov
mov
mov
dec
shlb
pop
sbb
mov
ret
mov
inc
or
cmp
leave
xor
pop
xchg
dec
dec
push
push
rclb
jns
inc
ds
mov
mov
es
and
sub
lods
mov
cmpsl
test
scas
mov
jbe
xor
jp
or
sub
rolb
push
or
inc
cmovo
cmp
ret
aad
sub
and
and
xor
pusha
imul
cmp
jns
leave
mov
cmp
dec
push
fucomip
repnz
ficoml
dec
loopne
pop
in
push
roll
imul
in
lock
movsb
loope
cs
lock
out
inc
push
test
stc
cli
mov
mov
mov
gs
xor
xchg
aad
xchg
xchg
leave
cltd
push
cmp
push
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
mov
ret
loope
dec
dec
push
js
iret
insl
dec
push
push
jle
sbb
xor
fs
pop
shlb
imul
fnstenv
cltd
and
mov
jo
sti
adc
test
and
cmp
and
add
mov
adc
or
movlps
push
push
pushf
movsl
in
shrb
daa
mov
cmc
lods
imul
repnz
mov
dec
jnp
rcrb
mov
rcl
leave
rclb
dec
xchg
repnz
rcl
pop
aad
pop
xchg
sbb
movsb
sub
loop
outsb
in
jp
sub
mov
cld
icebp
repnz
mov
mov
mov
xchg
xchg
scas
pop
shlb
xchg
sub
mov
pushf
xlat
sahf
push
fldt
cmpsb
fistl
xor
mov
dec
in
cmc
mov
pop
fstps
leave
mov
dec
dec
mov
fbld
dec
push
outsb
inc
mov
pop
pop
mov
pop
testl
pusha
out
iret
mov
scas
outsb
out
sahf
bound
sbb
lods
cmp
mov
mov
mov
mov
leave
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
idivl
bound
xor
cmp
fdivr
add
loop
pop
jns
loopne
dec
ljmp
sbb
hlt
pop
mov
adc
mov
subl
mov
outsl
pop
push
adc
nop
xchg
sbb
pop
or
fistpl
cltd
lcall
in
ret
inc
and
test
ja
in
cmc
mov
addr16
inc
les
cmp
addb
cld
test
xchg
or
push
dec
dec
inc
mov
push
push
pop
jecxz
and
or
sub
popa
bound
repz
cltd
scas
outsb
mov
ljmp
cmp
cmc
rcll
jge
xor
ret
dec
or
cli
cmp
sbb
rclb
pop
push
sbb
and
and
int
xor
xlat
lret
fsubl
das
lret
push
cltd
mov
cmp
mov
add
xchg
cmc
orl
mov
mov
nop
xchg
xchg
fwait
pushf
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
mov
cmpl
movsb
inc
add
inc
cmp
mov
or
sarl
inc
dec
inc
pop
aam
mov
ja
scas
stc
mov
mov
in
subb
pop
popa
xlat
sbb
pusha
dec
mov
xor
pushl
ja
lods
jp
outsl
mov
lret
idiv
and
outsb
cmp
push
or
sbbb
ss
out
sub
adc
pop
pop
sbb
pop
sub
sbb
xor
sub
out
imul
push
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
add
sub
test
pop
es
imul
pop
push
andl
push
sub
adc
jge
inc
shll
cmovge
aam
xchg
cli
adc
mov
lahf
es
adc
insb
mov
loop
dec
sub
push
sub
in
les
add
add
idiv
std
incb
add
or
add
adc
or
test
jo
jbe
pusha
gs
imul
in
test
jno
ja
jg
pop
and
add
adc
jg
xchg
and
pop
or
xor
push
and
into
and
add
xchg
bound
sahf
pop
push
daa
fadd
sub
sub
dec
xor
inc
lret
fnstcw
cmc
push
fidivrs
xchg
aas
add
pop
push
fcom
push
stos
clc
mov
fbld
out
pop
loope
lret
icebp
and
int
xor
lcall
js
cmc
scas
test
scas
mov
mov
fwait
les
adc
into
lcall
cmc
gs
bound
mov
imul
in
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
test
jo
jbe
arpl
pushf
sbb
jns
imul
adcl
mov
add
push
adc
mov
sbb
je
pop
sbb
sbb
mov
push
cmp
mov
xor
ss
out
pop
fadds
mov
pop
mov
int3
roll
mov
add
call
rcl
add
aam
sbb
pop
or
int3
loopne
in
mov
in
insl
idivl
test
sbb
std
test
add
std
cmpl
test
xchg
cmp
rclb
xchg
int3
mov
and
cmpsb
xor
loopne
repnz
and
cmpsb
mov
sbb
insl
xor
insl
lods
jbe
jns
loop
inc
inc
int3
add
dec
incl
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
xchg
pop
jl
sbb
lea
inc
inc
stos
js
xchg
sub
sub
mov
test
cmp
cmp
xor
cmp
cmp
mov
dec
cli
int3
pop
ffree
enter
pop
je
int3
shl
int3
jb
adc
pop
nop
shl
push
cmc
push
xchg
loop
test
loop
mov
movsb
test
sub
xor
sub
cmp
xor
or
jo
xchg
xchg
aam
or
xchg
xchg
xchg
stos
popa
cmpsb
test
pop
stos
scas
mov
aas
pop
scas
repz
mov
cmpsl
lods
stc
mov
jl
addr16
fwait
loope
test
orb
push
jl
inc
fwait
dec
dec
jns
ret
mov
push
jg
add
xchg
push
pop
lock
dec
movsl
mov
or
cltd
lods
insl
mov
gs
mov
jo
xchg
andl
jle
add
and
out
adc
pop
movsl
jge
and
sbb
cmp
cmp
dec
jo
adc
movsb
xor
sub
mov
jmp
mov
inc
mov
cmp
lret
mulb
adc
iret
add
sbb
rcl
jae
rclb
xlat
push
fcmovb
pop
push
sbb
pop
push
and
jl
cwtl
xchg
cwtl
mov
sbb
lock
xor
jge
subb
ret
orb
jne
lea
xchg
or
mov
lock
aaa
mov
push
mov
out
lds
inc
xor
ljmp
jno
mov
aam
aas
inc
je
or
inc
inc
jno
xchg
int3
fidivl
addr16
mov
push
push
fisttpll
pop
jmp
jnp
push
push
jecxz
jno
imul
gs
jl
repz
cld
incb
sub
mov
dec
sbb
jge
and
push
sbb
test
stos
and
and
and
sub
les
popf
push
shll
hlt
cmp
inc
mov
push
iret
jne
lret
out
ret
mov
mov
int3
repnz
adcb
inc
push
in
loope
fnstenv
in
jmp
out
popa
movsl
loop
ja
jne
mov
jmp
clc
std
test
jns
jp
mov
xchg
jne
or
nop
les
cmp
xchg
sbb
enter
dec
jecxz
adc
and
mov
dec
scas
and
mov
stc
gs
or
cmp
dec
and
push
in
add
jge
push
in
repz
sbb
cmpsl
fsts
out
push
testb
lcall
mov
js
jo
jns
outsl
jo
mov
into
addl
jmp
cwtl
or
adc
mov
push
sbb
or
and
xor
sub
cmp
int
out
test
shll
aaa
mov
xor
mov
mov
mov
rcl
inc
push
push
aad
repnz
adcb
or
ss
or
lret
cld
lock
test
mov
bound
cli
xchg
fwait
cmp
pop
subl
lcall
jge
test
or
pop
mov
dec
jle
pop
mov
cwtl
popf
sarl
lret
rorb
imul
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
fwait
loop
outsb
or
clc
sti
cld
mov
push
out
mov
js
mov
mov
nop
xchg
xchg
int3
xor
xchg
fcomps
adc
sub
fucomi
lods
inc
sub
mov
repnz
rol
push
push
cmp
mov
push
dec
inc
lcall
dec
out
xchg
xchg
bound
cmc
scas
pop
cltd
imul
push
push
cld
jbe
out
jae
jl
out
jg
std
add
add
adc
xor
cs
pushf
hlt
test
sbb
and
or
sub
sub
cmpsl
jmp
test
push
xor
cmp
dec
jg
cmp
in
add
mov
lock
lret
or
not
mov
dec
cltd
popa
adc
fidivs
adc
jne
xchg
sbb
jmp
in
pop
test
in
push
arpl
xchg
or
cltd
shrb
mov
test
pop
mov
lcall
scas
xorb
inc
xlat
xchg
mov
ss
push
fisubrl
test
loope
fiaddl
lods
scas
pop
pop
add
inc
pop
push
mov
cmp
aas
inc
xor
dec
push
cmp
int
in
push
dec
into
adc
ret
int3
cli
pop
push
push
xchg
or
mov
imul
addr16
scas
outsb
xor
outsl
jno
jp
ret
cmp
sti
incl
lds
dec
or
dec
jg
push
dec
inc
xor
and
fimuls
imul
scas
xchg
mov
sub
lahf
loopne
mov
dec
sbb
sarb
scas
cmp
add
test
iret
push
mov
cmc
dec
faddp
xchg
arpl
sbb
daa
icebp
mov
out
in
imul
push
out
cmp
addr16
rolb
add
push
shll
mov
jb
sbb
test
std
mov
push
in
pushf
adc
pop
loopne
leave
cmp
dec
loopne
aas
mov
cmpsl
test
jb
mov
sub
cmpsl
jo
mov
cmp
jmp
jbe
dec
jmp
roll
inc
int3
sbb
xchg
jno
ficoms
lcall
lds
mov
imul
sbb
out
xor
div
fistpll
adc
js
mov
pop
cmc
or
movsl
mov
roll
lea
xor
and
shlb
mov
test
push
xor
cmp
dec
addr16
in
pop
clc
xchg
mov
lock
mov
cmp
filds
jge
roll
sub
rcl
add
daa
cld
push
push
dec
push
add
jmp
loope
sbb
je
hlt
jg
push
subl
cld
add
adc
movsl
cltd
subl
inc
inc
dec
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
fs
push
jo
hlt
mov
shl
sub
pushf
and
loop
out
rsm
pop
and
repz
icebp
or
sti
jl
and
addl
xchg
add
mov
shll
sbb
lods
and
sbb
mov
loope
push
popf
out
imul
mov
insl
aas
call
xor
dec
xor
inc
orl
pop
arpl
push
pop
rorl
jnp
rcrl
lea
andl
xor
ljmp
aaa
xor
mov
inc
or
cmp
push
mov
orps
xlat
xor
push
and
pusha
btl
pop
inc
lcall
push
and
push
loope
int3
mov
dec
xchg
adc
decb
or
leave
sarb
push
mov
fcomi
insl
fwait
in
add
cld
xor
pop
out
in
ja
hlt
adc
and
pop
cmpsb
testl
imul
mov
mov
xchg
xchg
pop
mov
fists
dec
movsb
cs
lahf
dec
movsl
das
mov
test
scas
cmp
and
mov
aam
or
cmp
insb
pushw
push
add
clc
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
xor
cmp
dec
dec
push
jo
mov
popf
mov
inc
fildl
fstpt
test
jbe
mov
ss
jecxz
repz
popa
out
sti
cmp
ds
std
dec
push
enter
in
rcl
fcmovnu
pop
popa
out
and
loop
jmp
and
push
sbbb
out
test
and
mov
sahf
mov
test
ret
adc
js
cmp
xor
dec
fcomps
cmpsb
inc
mov
lods
xor
mov
mov
mov
jno
mov
aas
inc
int3
inc
repz
inc
into
lea
sti
lea
mov
push
pop
rcr
popa
push
and
arpl
fs
pop
in
jno
repz
in
jae
xchg
fildll
sub
mov
cmp
repnz
or
es
mov
adc
ret
das
xor
ror
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
inc
jmp
icebp
decb
push
insb
sbb
in
push
sbb
adc
add
inc
out
xchg
sub
pop
sti
cld
ljmp
cmp
ret
mov
add
imul
adc
insl
or
jae
sub
push
aaa
and
push
and
fldt
cmp
push
stos
dec
loopne
jae
xor
pop
fadds
outsl
jne
out
jnp
xor
dec
orb
pusha
mov
xchg
sub
push
lea
imul
sti
enter
popa
and
push
xor
js
jl
or
jl
bound
add
mov
cmp
mov
or
aas
test
mov
sbb
cwtl
out
aam
loop
jecxz
jmp
imul
push
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
jmp
xchg
cwtl
pusha
push
jns
sub
push
add
addb
mov
aad
aaa
or
mov
push
fstpt
cmpsb
fmul
xchg
and
or
out
in
mov
aaa
xchg
es
xor
pop
mov
mov
out
test
sub
ja
mov
or
inc
dec
cmc
pop
inc
jbe
ret
adcl
inc
push
inc
out
cltd
push
into
sbb
dec
rcrb
aam
cmpsl
popa
bound
and
jb
sbb
mov
pop
jne
jbe
mov
ljmp
inc
add
adc
xor
sub
iret
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
cmp
dec
push
imul
cld
repnz
inc
pop
and
push
stc
fisttps
ljmp
or
shrl
pop
sub
pop
lods
fisubs
call
or
adc
jmp
jo
cmp
add
xchg
fimull
lods
xchg
sbb
loop
and
xor
in
cwtl
sub
ljmp
jo
mov
imul
jbe
xor
mov
push
dec
subl
inc
rclb
adc
test
pop
sbb
test
stos
ja
into
sbb
jl
xor
xchg
or
and
insl
mov
cmp
add
out
and
inc
pop
int
aas
mov
lar
xchg
pop
cmp
xchg
pushf
jle
and
int3
pop
sub
mov
insl
xor
cli
ret
mov
inc
inc
sub
mov
add
addr16
add
iret
dec
add
repnz
jecxz
jns
or
pushf
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
push
mov
or
or
mov
es
fldenv
sbb
mov
inc
jno
add
incb
add
or
add
adcl
pop
in
outsl
push
sbb
push
push
or
popf
addr16
and
and
sbb
xchg
int
jl
or
jne
xchg
stos
fisttpl
or
jle
add
pushf
orl
dec
sbb
ret
xchg
push
add
cs
mov
rcrl
ficoms
xor
push
inc
les
lret
mov
ficomps
dec
out
ljmp
mov
out
mov
fistl
jo
dec
fadds
mull
out
loope
jl
addb
hlt
in
pop
mov
add
cmp
jle
sbbl
xchg
lods
fmull
fistpl
cwtl
popf
sbb
mov
inc
push
bound
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
mov
pop
andl
jo
sbb
out
xor
ss
test
scas
sub
xor
xor
stc
das
cmp
push
lds
aas
inc
mov
sbb
push
push
dec
dec
inc
pushf
loope
daa
push
das
xor
daa
fadds
nop
xor
scas
rep
cs
loopne
out
dec
into
jp
shr
cli
cmc
pop
imul
pop
leave
iret
push
int3
jno
cld
push
in
mov
xchg
cmp
lea
popf
sahf
mov
and
xor
sub
cmp
xor
mov
inc
adc
push
mov
js
push
ss
adc
cwtl
pop
pop
pop
dec
push
push
push
pop
xlat
push
ret
sub
mov
sbb
sub
inc
sub
aaa
inc
inc
sub
inc
inc
inc
jl
jne
inc
inc
dec
dec
cwtl
fnstcw
fidivrs
lret
xchg
sbb
inc
pushf
dec
ljmp
mov
push
fsubrs
icebp
fs
pop
imul
je
loope
mov
ja
mov
xor
cld
cli
incl
add
add
rcrb
cld
ds
xchg
rolb
aas
xchg
fwait
adc
pop
outsb
imul
sbb
and
sub
fidivl
bound
push
push
jg
xor
shll
jb
rcl
pop
lds
jmp
bswap
dec
shlb
loope
adc
fstp
fs
aad
sar
inc
adcb
sbb
call
jo
lods
es
pop
mov
pop
pusha
test
outsl
pop
dec
mov
orb
or
orl
jecxz
dec
sbb
mov
lods
sbb
mov
push
dec
push
push
loopne
out
in
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
mov
sbbb
repz
sub
call
or
add
xlat
xchg
cs
pop
cmp
sbb
xchg
pop
xor
dec
cmp
pop
movsl
jmp
sub
sub
sub
mov
lret
mov
xor
dec
cmp
pop
lret
mov
inc
or
cmp
aas
or
fiaddl
dec
popf
add
hlt
or
push
and
push
in
call
pop
cmp
xor
in
mov
js
jg
inc
xchg
pop
addl
std
push
loopne
fwait
pushf
sub
mov
and
cltd
in
push
cmp
push
sbb
mov
stos
scas
ss
test
mov
cmp
aas
push
dec
dec
lds
cmp
dec
jge
mov
push
pop
jbe
cwtl
bound
sbbl
insb
imull
jecxz
pop
ss
fwait
jne
lcall
xor
aam
incl
sbb
mov
add
adc
xchg
movsb
incb
mov
pop
shlb
cwtl
pop
jmp
stos
fildl
jno
push
imul
sub
out
iret
stc
scas
inc
ljmp
lret
cmp
mov
andl
rcl
adc
paddusb
push
outsl
test
push
jns
jmp
jp
out
je
sbb
add
ljmp
sti
incb
in
ret
xorl
aas
js
int
mov
push
rcll
adc
mov
dec
fisubrl
stos
lods
and
repz
fidivs
adc
test
mov
mov
push
inc
inc
inc
jp
xchg
and
dec
jmp
roll
cmp
shrl
je
and
pop
in
jl
es
popa
or
adc
inc
push
adc
mov
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
adc
jae
add
mov
xchg
push
clc
adc
xchg
popf
lock
cmp
lea
daa
lea
mov
cmp
fs
jl
stos
push
push
repnz
and
mov
push
lds
insl
jae
mov
jbe
jl
insb
dec
mov
push
push
inc
dec
int3
cltd
push
into
sbb
dec
fs
pop
inc
xor
popf
push
negl
sbb
outsl
jae
sbb
and
outsl
clc
movb
xor
orl
or
mul
test
adc
and
dec
pop
push
clc
sbb
lock
sub
dec
xor
xor
stc
jle
xor
cmp
mov
sarl
pop
xchg
divb
inc
sbb
aam
std
data16
mov
push
xchg
add
dec
sbb
loope
jmp
js
push
sub
or
repz
cmp
mov
out
or
lea
insb
xchg
or
cwtl
xchg
xchg
lret
xor
cltd
nop
psubusb
jbe
loopne
mov
mov
mov
pusha
mov
lcall
adc
je
shrb
inc
pop
push
dec
into
adc
push
xchg
imul
pop
in
pop
xor
andb
popf
ja
aam
jecxz
insl
jmp
jmp
jb
inc
imul
mov
or
adc
orb
dec
xchg
and
sbb
sbb
dec
cmp
test
and
xorb
sub
int
jmp
into
daa
lock
inc
lea
leave
lret
sarb
into
in
clc
leave
shlb
push
call
fmulp
xchg
push
and
fs
out
mov
fadd
fs
and
adc
mov
icebp
imulb
add
cli
inc
push
jg
test
mov
nop
mov
lcall
icebp
lahf
movsb
cltd
into
cmp
xchg
cmp
clc
mov
jge
out
mov
daa
enter
mov
mov
dec
inc
inc
inc
mov
xchg
dec
push
push
jge
scas
movsb
push
pop
pop
push
fsubrs
outsl
hlt
inc
pop
arpl
sbb
jae
insl
adc
pop
sbb
jo
adc
jo
mov
test
and
sub
add
bound
or
outsb
push
adc
sbb
sbb
cli
fwait
fs
sahf
out
ss
in
pushf
push
xor
xor
outsb
jae
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
fnstcw
subl
sbb
jmp
sbb
js
xor
add
adc
or
pop
leave
jle
sbb
sbb
mov
push
pop
sahf
ficoms
cltd
xor
sub
sub
xor
lods
ss
cmp
call
rol
cli
push
les
mov
rcl
incb
add
cli
xlat
mov
push
pusha
ljmp
fcom
fs
imul
icebp
fwait
cmpsb
lods
std
fs
repz
lea
xchg
and
rcll
fsts
sbb
xor
loopne
sub
xor
mov
mov
stos
aaa
rol
mov
xor
jle
lds
iret
aaa
jbe
ret
pop
push
push
mov
inc
in
rorb
dec
loopne
pusha
or
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
pop
rcl
std
xor
jp
testb
cmp
pushl
jmp
mov
mov
pop
fcoml
inc
test
mov
fistl
and
jge
cmpsb
sub
pop
cmpsl
sti
cld
cmp
xor
lahf
in
mov
or
cltd
jbe
mov
and
aas
je
dec
mov
mov
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
and
sub
xchg
mov
mov
mov
into
repnz
inc
inc
dec
mov
inc
inc
dec
xor
orl
sbb
push
push
push
dec
jecxz
popf
sub
pop
pop
pusha
jmp
fildll
in
bound
outsl
hlt
add
repz
jl
or
inc
adc
add
pop
mov
adc
or
xchg
pusha
and
nop
fbld
test
and
lock
mov
mov
xor
cmp
out
je
jg
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
fwait
mov
das
pop
repz
xchg
pop
cmc
cmc
div
push
ljmp
test
pop
inc
lahf
xchg
mov
and
gs
xchg
add
inc
and
cmp
aad
clc
add
add
mov
cmp
xor
pop
jl
jmp
ret
sbbl
push
mov
push
push
rorb
fisubl
lods
in
pusha
clc
mov
or
std
arpl
jo
std
jo
sarb
cli
jecxz
repz
in
add
ljmp
add
popf
adc
pop
mov
sbb
add
inc
inc
inc
iret
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
inc
imul
add
fsubp
in
or
dec
and
lcall
call
xchg
out
test
mov
addl
popa
add
mov
rcrl
adc
cltd
lcall
mov
pop
out
lds
mov
lock
mov
jge
add
dec
inc
inc
jo
addl
push
enter
popa
mov
sbb
in
sahf
test
push
and
jno
sbb
cmp
add
stos
sub
notl
push
or
mov
inc
pop
pushf
add
inc
adc
push
adc
and
scas
push
pop
sub
jp
sahf
fs
test
fwait
xor
cmp
inc
into
jnp
repnz
out
cmpsb
ret
les
cmpsl
iret
ret
add
or
jecxz
jnp
or
imul
fsub
in
cs
dec
mov
test
mov
in
cmpsl
es
stc
in
out
lock
or
xchg
push
js
fs
xchg
mov
or
xchg
adc
movsb
sub
aam
xchg
dec
sbb
xor
movsl
dec
or
out
scas
scas
cmp
mov
mov
ds
outsl
mov
daa
dec
inc
inc
jb
inc
inc
inc
dec
jge
ss
test
fdivs
pop
pop
in
popf
mov
push
or
pop
imul
cwtl
outsb
test
arpl
dec
jge
jb
xor
sub
std
xor
push
icebp
mov
in
jl
mov
stc
sbb
nop
aam
test
push
and
mov
dec
cltd
bound
push
push
xchg
mov
fldl
cmpl
sub
out
xor
push
ficoml
lret
fchs
ds
repnz
es
stc
dec
mov
pop
dec
mov
hlt
mov
jecxz
insb
mov
shr
lock
test
idiv
lods
in
stc
fildl
jp
mov
mov
pop
test
je
nop
les
ja
xchg
xchg
lret
or
mov
in
stos
lods
mov
scas
mov
lock
scas
mov
cmp
pop
scas
cmp
mov
icebp
add
ds
xlat
lcall
rorb
mov
sub
mov
pusha
xchg
cltd
add
cmpsb
add
imul
jp
insl
mov
and
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
lret
movsl
mov
cmp
push
inc
inc
inc
push
aas
jo
enter
or
push
ret
lea
out
lock
lret
aam
fs
pop
test
popa
pop
jle
mov
ficomps
clc
jbe
jl
inc
mov
jp
std
sub
popl
add
jmp
pusha
stos
inc
pop
movsl
adc
jae
dec
sbb
fidivrl
pop
sbb
inc
lret
rcrb
sub
ftst
push
call
loop
les
into
pop
lret
out
inc
cmp
testl
je
shrb
fstp
loope
push
cmc
in
in
push
and
data16
inc
mov
stos
pop
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
leave
adc
stos
rcl
dec
and
outsl
rcl
in
lods
popf
cs
add
mov
aad
add
dec
inc
inc
jnp
dec
push
test
push
push
jecxz
xchg
imul
push
pop
push
iret
cwtl
imul
loop
cmp
jae
jbe
divl
jbe
jecxz
outsl
cmp
sub
or
imul
xchg
enter
lock
sbb
popf
and
and
pop
fwait
movsb
push
xor
sti
lods
ss
dec
cmp
aaa
jnp
cmp
out
pop
lahf
sbb
int
cltd
aaa
lret
ljmp
fadd
mov
adc
push
push
push
loop
jmp
sarb
out
icebp
repnz
arpl
jmp
sub
add
cmp
xchg
cmp
fsubr
mov
or
xchg
stos
adc
pop
psubusb
mov
lret
push
pop
lahf
xchg
adc
cmpsl
cs
dec
sub
test
scas
push
cmp
fs
mov
stos
mov
xor
add
mov
dec
shll
cmp
push
adc
lock
arpl
out
lahf
data16
jecxz
outsb
je
sbb
jnp
or
mov
jp
std
xor
jl
pop
add
pop
into
call
mov
aas
adc
lcall
sbb
mov
push
ds
das
xor
sbb
scas
or
xor
stos
sbb
clc
ret
or
mov
pop
cmp
leave
enter
out
fcmove
dec
mov
mov
or
inc
in
loope
sbb
movsl
and
ljmp
jb
lock
das
out
js
add
jge
sbbl
jg
push
dec
ja
les
mov
or
rol
xchg
jle
or
adc
fwait
stos
lahf
cmpb
pop
das
sub
jp
jg
sarb
cmp
pusha
cwtl
lcall
ja
nop
add
push
push
push
repz
push
mov
sahf
pop
popa
clc
mov
mov
jmp
mov
and
lret
cli
incl
das
xor
sub
push
or
adc
mov
or
xchg
push
and
out
and
sahf
and
daa
sub
test
push
adc
xor
inc
mov
xor
pop
fisubl
roll
dec
jg
rcl
inc
push
lock
lret
adc
in
ja
push
add
repnz
mov
data16
jno
lock
imulb
mov
test
or
or
or
shll
rorb
pop
pop
test
movsl
pop
and
stos
mov
or
bt
test
dec
ret
imul
mov
jne
dec
xor
mov
lret
push
push
pop
jg
cwtl
cs
xchg
lcall
insb
imul
loop
xlat
mov
into
jo
jbe
shlb
jle
test
incl
add
add
or
ret
out
sbb
xchg
dec
ss
repnz
sub
cmp
mov
jecxz
ret
lahf
mov
cmp
ds
cmp
xor
dec
mov
int
adc
add
loop
pop
xor
add
mov
push
std
mov
mov
sti
cld
icebp
stc
addr16
aad
add
clc
pop
addb
xchg
testl
xchg
pushf
and
push
push
mov
sub
mov
es
mov
mov
sub
add
jmp
sbb
ja
loopne
jmp
xor
push
call
pop
fs
cmp
xchg
orl
pop
enter
scas
mov
add
jo
out
and
jno
js
incl
xor
adc
inc
adc
lahf
out
xchg
dec
repz
mov
cmp
and
sub
xor
shll
out
pop
imul
xor
cmp
loope
xor
leave
leave
int3
shr
scas
sbb
push
leave
pusha
imul
fcmove
dec
push
loopne
flds
rol
ljmp
out
repz
add
icebp
cmc
mov
sti
mov
cltd
sbb
jge
data16
jg
sbb
mov
mov
push
xchg
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
ja
push
and
mov
lods
pop
pop
arpl
gs
lcall
jbe
jp
jno
jbe
jge
out
jae
pop
cmp
cmp
jns
out
rorl
mov
xchg
in
aas
hlt
push
and
xchg
popa
addb
call
fs
or
lods
add
or
cmp
fisubrs
outsl
fdivs
outsb
jae
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
dec
icebp
pop
out
loope
xlat
push
and
or
cmc
push
cmpsb
test
repz
std
shr
jbe
scas
jp
lock
idiv
cld
add
repnz
xchg
adc
mov
nop
xchg
sbb
cmpsl
jb
xchg
cwtl
adc
xor
shrl
push
pop
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
fs
sarl
dec
jo
pop
inc
inc
into
cmp
ljmp
push
loope
push
rclb
dec
lods
pop
sbb
cmp
cli
cmpsl
loope
jmp
xor
jp
jo
lds
and
cli
lcall
insb
mov
pushl
popf
nop
testb
push
xchg
sbb
or
test
and
fstpt
sub
imul
mov
insb
sti
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
add
cmp
mov
and
insl
imul
icebp
bnd
test
aaa
idiv
cli
movsb
movsl
repnz
repnz
mov
jno
test
xchg
add
addr16
adc
int3
jns
xchg
adc
jnp
test
sub
fmul
fnstcw
stos
pop
sub
stc
mov
lcall
pop
pushf
jge
dec
mov
fwait
mov
insl
cmpsb
xchg
pop
cmpsb
push
cmp
into
inc
cli
fistl
add
and
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
ss
mov
or
inc
push
sbb
inc
cmp
out
sbb
pusha
mov
xor
ss
inc
imul
in
insl
outsb
jae
jns
outsl
jo
jbe
jl
inc
push
push
clc
sbb
dec
dec
rclb
sahf
or
jecxz
and
data16
pop
jmp
fsubrs
outsl
loopne
adc
sahf
push
xchg
iret
idiv
jb
pushf
mov
std
mov
idivb
push
addb
sbb
lret
lods
mov
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
mulb
fmull
sti
push
or
jns
mov
ffree
jnp
cld
add
idiv
std
cwtl
or
add
push
into
test
jmp
fsubl
cmpsl
imul
xchg
jno
jle
cs
adc
cmpsb
stos
lods
mov
cmpsl
test
scas
sub
orl
loopne
std
adc
icebp
cmpsb
stc
push
sbb
ss
adc
and
dec
cmpsl
mov
test
sub
sub
jo
in
repnz
mov
lods
cmp
enter
scas
loopne
jnp
aam
jb
int
pop
nop
rcll
int3
frstor
jle
pop
loopne
out
in
je
xchg
jmp
icebp
adc
xor
cli
js
jg
mov
sbb
mov
ds
inc
dec
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
jo
outsl
add
mov
mov
push
jl
mov
aas
mov
push
mov
push
iret
shll
xchg
push
rcl
jl
xchg
push
rcl
mov
cwtl
imul
imul
push
and
sub
lods
mov
cmpsl
and
jbe
sub
add
inc
divl
jp
cs
jb
adc
adc
fwait
sbb
and
cltd
repz
sub
pop
leave
mov
xor
fsubs
hlt
ja
mov
inc
pop
mov
mov
xchg
int
ret
fs
leave
enter
sbb
fcmovnu
add
loope
outsl
fcomp
fsubp
push
pop
mov
sbb
jmp
fisubrs
rcrl
jae
add
cmp
in
mov
add
inc
sti
cwtl
inc
mov
mov
inc
push
daa
xor
loopne
cwtl
popf
leave
rcll
sbb
stos
mov
adc
jmp
xor
sub
mov
out
and
dec
hlt
mov
dec
dec
push
std
jbe
jl
push
inc
int
dec
lcall
fdivrl
pop
in
rcr
movsl
pop
pusha
gs
adc
jno
sub
xchg
cli
fdivrl
nop
jo
ret
jge
addl
or
test
add
test
cmpsb
jle
insl
adc
das
dec
cmp
adc
sbb
dec
lcall
daa
xlat
cmpsl
mov
xor
std
xor
cmp
jne
test
or
inc
pop
or
pop
idiv
cmp
rcl
aad
inc
push
cmp
in
or
jmp
adc
push
adc
in
cmp
cmpsb
stos
lods
mov
test
sti
dec
mov
sbb
inc
cmp
xchg
mov
lahf
xchg
cwtl
xor
fcomps
test
push
push
mov
out
scas
int3
stos
push
repnz
mov
scas
nop
mov
add
inc
dec
mov
fldcw
jge
lds
daa
movsl
push
pop
pop
xchg
rcr
xor
pusha
xchg
xor
bound
jae
jo
in
xor
pop
jmp
je
jno
mov
push
jg
push
cs
in
jo
or
adc
out
cmp
pop
or
out
adc
adc
inc
inc
push
or
sbb
ret
fsub
loop
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
lret
cmp
dec
mov
mov
mov
inc
popa
mov
mov
cmp
jge
dec
and
pushf
rcrl
fimuls
pop
sbb
mov
shlb
gs
push
js
loopne
push
mov
sbb
aaa
push
jle
jae
hlt
sub
out
xor
inc
divl
popf
arpl
jg
add
inc
dec
nop
mov
pop
jbe
sets
sbb
jle
mov
stos
xor
mov
mov
xor
movsb
scas
jle
mov
push
mov
jp
jnp
addl
jg
test
xchg
cltd
lcall
mov
xchg
xchg
mov
test
in
outsl
pop
jbe
test
mov
mov
test
add
add
mov
xchg
xlat
mov
sub
sbb
fstpl
out
in
pop
aaa
or
dec
cmp
cmc
cmp
scas
and
cs
shll
dec
xchg
jae
inc
movb
out
lock
jge
push
fdivr
imul
stos
test
or
hlt
push
in
jg
addb
outsb
sub
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
pop
mov
mov
mov
repz
xor
cmp
mov
xchg
popa
xchg
mov
lods
aas
rorl
push
rorl
push
les
sbb
push
push
aad
fcoms
push
xlat
cld
add
loopne
sub
insl
fucomip
out
cli
gs
jmp
and
xorb
adc
jb
jge
insb
or
and
shr
popf
xchg
mov
fisubs
adc
das
lcall
in
lods
cli
cmpsb
sub
into
mov
or
dec
sub
or
xor
jb
adc
in
leave
outsb
push
lcall
push
test
push
stos
dec
in
arpl
jno
imul
je
or
das
sub
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
jle
and
daa
sub
cmp
cmp
mov
aaa
ja
inc
push
lret
push
leave
add
rcrl
inc
add
js
sub
and
ja
test
xor
lcall
xchg
divl
mov
add
xchg
imull
cld
insb
rol
and
rcrb
mov
mov
arpl
std
sahf
mov
add
scas
es
inc
and
inc
xor
dec
sbb
xor
add
xchg
adc
cmpsb
andb
jp
fidivs
dec
pop
pop
jecxz
lahf
stos
lods
jno
arpl
cmpsb
nop
ja
enter
xor
hlt
jl
add
insl
mov
push
out
ja
out
test
cmc
and
push
jne
dec
or
mov
inc
sub
cltd
xlat
inc
mov
cmp
pushf
xor
mov
cmp
xorl
mov
subl
jbe
jl
xorb
jle
inc
add
rcll
push
and
pop
pop
out
pop
in
jb
out
adc
out
loopne
and
movsl
cmp
cs
cmc
xor
cmp
mov
test
mov
nop
pop
mov
rcrb
cmpsb
or
sti
nop
cmp
fdivr
sahf
pusha
pop
popa
bound
pop
pop
arpl
lret
mov
es
cmp
stc
addl
int
push
push
inc
push
add
push
pop
loope
adc
push
xlat
pop
push
out
mov
rorb
test
push
insl
cld
jmp
xchg
jnp
mov
jp
or
add
inc
push
jnp
in
jecxz
dec
push
adc
dec
cvttps2pi
pop
jge
cwtl
sbb
pop
sub
das
cmpsb
push
mov
cmp
and
inc
inc
add
mov
ret
xlat
cwtl
in
dec
or
pop
xchg
rcll
ficompl
out
ret
int
jle
repnz
dec
sbb
jmp
or
scas
jl
jns
repz
icebp
mov
std
adc
xchg
rcll
sub
fstps
les
loope
enter
fdivl
jmp
lret
and
lahf
mov
stc
cmpsl
shrl
subl
fstpt
xchg
mov
push
lret
cltd
arpl
xchg
shlb
mov
fstps
gs
jl
jp
int3
pusha
push
add
dec
pop
mov
testl
jge
sub
add
cmp
xchg
pop
lcall
sub
loop
pushf
pop
daa
mov
outsl
sub
icebp
ds
mov
in
jg
aas
fstps
rcl
adc
aam
popa
mov
in
fcomps
push
outsl
int
jmp
pop
outsl
das
icebp
pop
hlt
icebp
adc
inc
jecxz
jg
lock
jmp
jge
add
jge
jnp
and
data16
push
rcll
and
xchg
or
and
xchg
xor
loope
adc
fstpl
pop
sub
test
insb
leave
mov
sub
int3
xchg
mov
push
addb
mov
leave
mov
adcl
dec
rclb
outsb
push
fsubs
lock
arpl
imul
mov
loop
jae
cmpsl
icebp
mov
push
js
xor
mov
std
sbbb
or
adc
and
outsl
xorl
sbb
pop
pop
cmp
imul
xor
jno
sub
jns
mov
roll
ret
xor
cmp
cmp
aas
mov
dec
sbb
dec
adc
dec
rcll
pop
fistpl
push
xlat
pop
and
fucomip
loope
call
outsl
jmp
icebp
ja
jge
test
adc
xchg
call
sbb
fstps
adc
pusha
pop
nop
stos
and
mov
dec
push
movsb
gs
stos
imul
cmp
inc
insl
popa
cld
or
orl
push
lret
rcll
sti
lcall
sbb
and
sbb
outsb
jecxz
jns
sub
in
or
lcall
int
hlt
or
addb
push
sti
or
xchg
mov
mov
xchg
adc
dec
xchg
cmp
xchg
lods
and
fs
xor
sahf
xor
call
iret
mov
pop
adc
pop
lods
inc
adc
add
incl
in
scas
sub
loope
fwait
aam
sahf
xlat
sbb
jb
loop
out
cli
inc
out
outsb
mov
add
mov
repnz
add
std
cmpb
and
jno
lret
or
sub
shrl
psubusb
xchg
cwtl
popf
into
push
fcmovne
stos
xor
mov
pop
lds
stc
mov
das
jae
mov
iret
test
sbb
and
xlat
cmp
push
ljmp
ret
or
adc
or
ret
sub
pusha
gs
iret
out
movsl
jmp
add
outsl
jo
mov
jl
xor
cld
dec
add
pop
mov
mov
xchg
or
xchg
or
push
adc
cwtl
sahf
daa
lea
fsubl
cmp
sub
pop
mov
add
sub
xor
ja
daa
jmp
cmp
inc
xor
mov
add
inc
mull
dec
adc
inc
add
fwait
decb
push
repz
fisttpl
pusha
and
pop
sub
fs
stos
sub
out
repz
jo
adc
cmp
jmp
and
insl
scas
sbb
dec
orb
test
xor
jp
lods
nop
add
xchg
mov
repnz
inc
popa
insb
pop
pop
pop
arpl
gs
daa
mov
rorl
aas
or
pop
xor
push
sbb
inc
in
loope
adc
dec
xchg
mov
inc
push
sbb
inc
mov
fldcw
pop
loopne
imul
mov
cmp
js
mov
idiv
std
adc
jle
cmp
add
mov
cmpsl
adc
adc
adc
sahf
out
mov
pushf
ficoms
pop
push
scas
iret
sbb
test
fs
inc
mov
test
das
dec
pop
and
xor
jb
xchg
mov
rol
mov
mov
push
into
xchg
fmul
mov
push
aad
pushf
frstor
fcmovnu
rolb
out
js
call
call
stc
cli
xchg
jne
idivl
shll
lea
xchg
xor
mov
mov
fwait
aas
rcrb
mov
loop
pop
adc
sbb
lahf
pop
in
das
cmpsb
inc
pop
pop
call
cmp
or
mov
shll
or
adc
mov
jo
lds
inc
dec
dec
lret
into
inc
xchg
pop
dec
aam
push
pop
pop
test
testl
mov
imul
insl
and
adc
cmc
sarl
dec
idiv
std
ds
inc
inc
ret
adc
jg
add
push
xchg
or
inc
inc
scas
pop
dec
mov
and
pop
and
test
sub
xor
test
push
aas
addr16
inc
xchg
mov
push
fdivrl
repnz
push
mov
inc
ret
sbb
int
in
sbb
loope
push
loope
call
jg
xchg
dec
test
cmpsb
nop
cli
std
inc
xchg
and
dec
xchg
pop
sbb
sub
push
xorb
lcall
enter
and
repnz
loope
lods
adc
test
lods
sti
imul
pop
push
jl
in
out
repz
and
insl
mov
inc
dec
dec
mov
push
or
pop
dec
test
inc
aad
xchg
pop
in
movsb
sbb
push
divl
outsb
jo
imulb
hlt
test
xor
stos
jp
jl
cmc
jbe
xchg
jnp
add
adc
mov
pop
or
sbb
adc
xchg
xor
ss
movsb
xor
xor
movsb
mov
xchg
cmp
cs
movsl
sub
push
cmp
xor
aaa
test
mov
enter
loope
jne
jmp
pop
sub
push
neg
jno
pop
lret
aam
imul
xchg
loope
dec
addr16
mov
pusha
jmp
fwait
lahf
inc
ljmp
inc
test
xchg
push
push
test
push
adc
cwtl
pushf
mov
push
xor
sub
test
scas
mov
sbb
jno
mov
mov
mov
and
popa
imul
mov
xchg
cmp
ja
jno
jnp
jbe
aas
aam
mov
addb
push
sbb
and
sbb
mov
popa
hlt
jb
xor
mov
mov
mov
add
pop
cmp
popl
push
shlb
xor
rcl
enter
xchg
pop
orb
pushf
aad
stos
lret
pop
movsb
push
lcall
xor
cmp
mov
add
iret
lret
ds
add
inc
xchg
pop
mov
in
dec
sbbl
rcll
and
lods
jne
and
imul
imul
ja
outsl
idivb
sarb
test
xchg
inc
dec
cmpsb
xchg
sub
adc
cmp
fdivr
mov
sub
movsl
fnstsw
jns
scas
mov
aaa
cmpsl
mov
in
lret
mov
mov
cmp
mov
pop
loope
pop
push
pop
pop
pop
push
jmp
bound
lock
dec
jb
fiadds
call
nop
jo
jns
data16
jmp
mov
rol
aas
or
decl
mov
push
hlt
add
dec
nop
xor
cmp
addr16
popa
sub
bound
push
push
adc
xor
xor
push
sub
cmpsl
call
int3
mov
pop
rclb
int3
inc
xchg
loopne
out
dec
sbb
add
fs
dec
pop
cmc
pop
push
add
and
loope
bound
add
and
out
mov
add
cmp
pop
icebp
sbb
or
addb
cs
scas
cltd
xor
loope
xchg
ret
pop
lds
rol
lret
sub
sub
or
out
stos
sub
and
inc
daa
pusha
int
cld
mov
sub
mov
xchg
inc
nop
out
rorb
xlat
dec
mov
inc
sbb
shlb
push
in
mov
arpl
scas
mov
enter
ja
out
je
mov
xor
sti
cld
push
aas
jp
push
mov
jge
jno
ss
rolb
pusha
push
sub
cwtl
daa
js
in
sbb
inc
rol
aam
cs
sub
lret
ss
jecxz
fucom
in
mov
mov
dec
mov
xchg
mull
adc
aam
cmc
call
dec
int3
sbb
pop
or
movsl
jp
and
xor
je
inc
in
push
mov
decl
jl
les
dec
daa
push
pop
push
lds
lds
xchg
xchg
rol
mov
cltd
ficomps
mov
pop
sbb
xlat
inc
lods
cltd
sub
inc
and
stos
dec
sbb
popa
stos
iret
test
inc
mov
push
daa
inc
std
cmp
mov
adc
dec
insb
add
add
mov
jecxz
or
cs
clc
int
and
mov
pop
aaa
or
cmpl
sbb
xor
mov
lods
inc
dec
movups
pushf
or
push
pop
sbb
test
inc
push
lcall
in
push
inc
xor
mov
xor
aam
out
xor
cli
icebp
idiv
inc
push
leave
mov
cli
enter
fstpl
jecxz
sbb
data16
stos
idivb
je
icebp
and
pop
idivl
call
pusha
or
mov
mov
cmp
jle
xchg
jle
mov
push
dec
and
jecxz
or
mov
mov
cmpsl
add
test
in
xor
and
ret
cli
jno
dec
or
mov
push
cmp
std
push
aam
rorb
adc
push
rclb
push
fistps
imul
mov
jg
push
test
je
out
ja
sbb
shll
cmp
cld
addb
nop
decb
std
test
inc
add
cmp
lret
fwait
dec
or
das
sbb
fisubrs
jge
push
xor
cmpsb
dec
loop
mov
das
in
fistpll
push
stc
push
rol
push
aas
ret
inc
push
mov
iret
push
int3
jno
in
rolb
bnd
loop
mov
pop
repnz
push
aaa
hlt
insl
jmp
pusha
insl
sbb
out
lock
adc
imul
and
in
test
fwait
ret
lea
mov
mov
mov
adc
mov
or
dec
sub
mov
lock
xor
fcmovnu
lret
dec
dec
jne
adc
dec
push
push
fiaddl
testb
sbb
pop
jmp
fs
push
jmp
jl
cld
addr16
jnp
cld
jns
jnp
mov
or
jnp
cld
jb
or
dec
mov
aaa
cmp
cmpsb
jp
push
sbb
or
and
popf
loope
xchg
inc
lods
jge
ss
cmpsl
in
cltd
scas
inc
inc
fidivl
shll
inc
in
mov
mov
mov
leave
aaa
movl
jno
int
push
mov
aad
dec
pushf
or
pop
rcr
fnstsw
decl
lahf
add
cmc
lock
imul
lock
sbb
jne
cmp
and
sbb
rclb
or
cltd
lcall
aam
cltd
xor
lahf
sbb
and
movsb
sub
scas
mov
repnz
fs
shl
inc
addr16
dec
ss
push
push
fimuls
push
push
enter
adc
dec
fimull
test
je
mov
mov
data16
mov
mov
sub
and
add
sbb
daa
test
stc
incl
add
mov
popl
adc
push
and
movsb
and
xchg
xor
icebp
and
push
sub
shlb
lods
fists
push
inc
inc
in
mov
push
mov
lret
inc
test
push
int3
arpl
fsubl
sbb
leave
pop
fcoml
ficomps
jmp
addr16
in
in
bound
and
and
rep
or
icebp
repnz
adc
cmp
mov
add
cltd
sbb
dec
mov
mov
int
xor
out
fsubl
loope
xor
sbb
stc
imul
mov
inc
sub
iret
das
sub
inc
mov
push
push
push
loopne
test
int3
sbb
push
push
xchg
mov
fs
rorl
mov
imul
bound
add
jnp
aam
mov
mov
or
lcall
bound
push
dec
sbb
mov
pusha
lret
push
pop
shll
jb
pop
sub
in
and
xor
das
jne
addr16
rep
xor
ja
cmc
inc
aam
cld
mov
add
stos
jg
int3
and
or
xchg
dec
add
adc
push
int3
xchg
jle
frstor
fwait
pushf
mov
sahf
mov
dec
popa
scas
xchg
cmpsl
push
gs
mov
or
leave
push
xchg
and
cmp
mov
orl
notb
push
mov
popf
pop
sub
mov
push
adc
mov
sub
xor
dec
inc
dec
inc
lea
sbbb
or
or
adc
or
mov
repnz
pop
fisubl
js
bound
je
ret
sub
jl
js
jmp
or
scas
enter
test
and
mov
sub
adcl
aam
sbb
xchg
mov
shlb
lods
xchg
out
nop
mov
jmp
mov
negl
ror
aad
inc
jno
notb
mov
mov
in
push
inc
aam
cmpsb
push
es
fwait
dec
pop
negl
std
adc
lock
cmp
clc
cmpsb
pop
push
jb
or
scas
pusha
jns
das
xchg
aaa
adc
xchg
adc
jae
or
out
test
mov
fiadds
xchg
negb
mov
adc
mov
repz
fidivs
and
mov
icebp
cli
out
cli
inc
cmc
loopne
pop
addr16
je
inc
aam
lret
inc
bound
jmp
test
leave
pop
lock
daa
mov
cmc
xchg
and
sub
lock
mov
decl
dec
cli
cmovb
sub
into
lahf
inc
and
xor
daa
mov
cmpsb
shl
ljmp
mov
xor
mov
jg
cmovs
dec
jb
addr16
stc
xchg
dec
lcall
insl
aaa
lock
in
pop
pushf
hlt
xor
add
mov
nop
orb
mov
test
lods
add
xchg
mov
add
test
mov
sub
loope
mov
les
leave
test
scas
mov
call
push
jl
rol
sbb
aas
inc
sbb
dec
push
and
fidivrs
dec
push
push
enter
jbe
gs
imul
fs
mov
aam
pop
jb
stos
shll
push
aas
das
or
and
sbbb
xchg
out
jl
add
inc
add
int3
int3
xchg
test
cwtl
or
std
push
cs
fwait
sbb
and
adc
push
or
xor
movsb
mov
and
lock
inc
cmp
scas
aaa
cmp
lret
int
mov
enter
xchg
add
push
fisubs
pop
xlat
xchg
sbb
rcr
fsubp
icebp
sub
insl
jp
sub
pop
jmp
stc
cli
or
movsl
imul
mov
or
imul
int3
or
sbb
stos
xchg
leave
lret
fwait
adc
cmpsb
sub
movsb
and
mov
lock
stos
loopne
movsl
movsb
jle
sub
dec
lods
pusha
popa
pushl
xor
mov
dec
mov
push
push
shr
movsb
bound
pop
pusha
loopne
addl
arpl
outsb
cmpsl
addr16
out
add
cs
das
add
out
mov
lcall
sarl
dec
xor
lcall
mov
pop
xchg
fldenv
push
popa
shll
pop
cmp
and
popf
xor
mov
aaa
out
cmp
stos
dec
fdivrl
scas
int3
call
inc
out
mov
mov
inc
adc
dec
or
xlat
cmc
sbb
mov
loope
insl
inc
repnz
jp
outsb
adc
js
insl
jp
cmc
idiv
jl
insl
cli
xor
nop
fs
enter
test
xchg
xchg
cltd
push
xchg
adc
nop
psrld
pop
push
test
fdivrl
sub
mov
mov
clc
sub
rol
mov
dec
fiadds
cmpl
fwait
cltd
sbb
jge
sbb
pop
pop
out
dec
pop
repnz
data16
ret
push
jge
insw
outsb
out
fsubrs
adc
stos
jo
jbe
xor
add
xor
in
ja
cmp
sub
push
or
mov
adc
pop
das
mov
pusha
sub
inc
outsl
sub
imul
ja
int3
test
shlb
in
enter
rcrl
sub
or
loop
dec
push
sub
fcomp
adc
lret
sbb
pop
icebp
jmp
dec
data16
in
jae
mov
sbb
ja
push
sbb
mov
ljmp
sbb
add
mov
jmp
out
aaa
cmp
xchg
mov
movsb
int
push
imul
jmp
out
imul
rcrl
je
aaa
mov
ss
clc
and
rorl
incb
jno
fisubl
dec
in
mov
push
pop
pop
popa
iret
fs
ret
outsb
sbb
out
pop
in
sub
outsl
outsl
jo
std
mov
cmp
xchg
jl
mov
lcall
push
mov
xchg
shrb
cld
out
sbb
cmc
pop
and
loope
mov
dec
sahf
and
cmp
xor
ss
mov
mov
mov
jge
rol
dec
mov
mov
dec
jg
out
mov
fcmovnu
lock
popf
frstor
out
loop
push
loope
outsl
scas
hlt
int3
idiv
incl
xchg
inc
clc
jle
mov
dec
mov
lods
dec
adc
cmp
sbb
pop
fildll
and
sub
or
mov
adc
arpl
outsl
mov
shrb
outsl
jne
pop
inc
jo
dec
xchg
pop
jae
int
pop
and
push
jno
cmp
pop
dec
sub
aad
ret
adc
sbbl
mov
lods
in
lahf
cmc
xchg
jb
mov
xchg
popf
cs
ja
sbb
jge
xor
mov
push
mov
pop
mov
lcall
xchg
enter
ljmp
fistpll
push
clc
dec
xor
icebp
jge
xor
leave
mov
cmpsb
leave
cld
cmp
jp
mov
jg
fidivl
mov
inc
fisttpl
pop
jb
fsubl
jnp
addr16
in
cli
repz
push
gs
jl
inc
xchg
dec
xchg
jge
jl
aam
push
orl
adc
mov
sbb
push
dec
pushf
and
cmp
and
lock
addr16
scas
xor
push
mov
mov
fiadds
rorb
push
dec
dec
dec
mov
jno
rcll
jp
sbbl
mov
lret
fiadds
xchg
mov
push
add
insl
mov
repz
std
incb
jns
and
jno
push
or
shl
mov
cmpb
rcll
adc
jbe
insb
mov
fs
dec
dec
jg
cs
inc
movsb
push
test
jnp
ss
cwtl
jle
jle
mov
lods
ret
int
rolb
mov
lret
lds
fstps
into
bound
fnstsw
pop
sbb
push
fmull
fsubrp
gs
jmp
scas
mov
notl
shlb
xchg
sub
xchg
sbb
mov
xchg
mov
xchg
jo
lods
fs
mov
push
fs
loopne
out
in
icebp
repnz
in
out
repz
aas
insb
stc
mov
and
inc
dec
mov
or
jg
clc
adc
push
leave
test
arpl
push
ficompl
mov
cmc
xchg
jmp
add
js
push
outsl
jo
test
movsb
outsl
mov
icebp
mov
stc
roll
or
pop
lret
adc
or
sub
sahf
loopne
cmpsl
dec
sub
and
es
shll
cmp
push
cmp
inc
aaa
iret
sbb
cmpb
sbb
popa
fistps
jo
mov
je
out
lcall
bound
je
push
jo
fstl
xchg
scas
ljmp
icebp
mov
cmp
mov
dec
cmpsb
nop
xchg
sbb
jg
xchg
fwait
mov
push
stc
sarl
shlb
mov
loop
mov
les
cmp
dec
inc
cmp
lcall
pop
inc
dec
shlb
dec
push
leave
or
lock
pop
in
push
jo
pop
arpl
pop
and
sti
jb
jae
sub
adc
sbbl
xor
add
push
dec
dec
lods
or
adc
jno
push
sbb
and
push
movsl
jle
and
movl
xchg
jle
jmp
mov
out
mov
xor
icebp
cmp
into
adc
pop
ret
dec
lret
arpl
rolb
sub
sbb
imul
sub
test
sub
add
xchg
xchg
mov
cmp
mov
mov
mov
adcl
xchg
mov
mov
xor
pushf
loop
add
jb
stos
stos
fidivs
lods
lret
pop
mov
jo
pop
les
jo
jne
cmp
dec
dec
dec
dec
je
xor
rorb
out
rcr
dec
aam
jmp
mull
mov
jmp
pop
icebp
or
scas
mov
outsb
bound
jl
loope
js
stc
incb
into
add
or
dec
lcall
mov
push
sbb
cmpsb
sbb
or
mov
mov
test
inc
xor
call
add
cmp
mov
add
inc
push
mov
popa
scas
lods
rcll
fsubs
dec
aam
add
imul
in
and
gs
repnz
das
in
mov
fs
xorb
js
std
jg
xchg
ret
add
xchg
imul
mov
scas
in
sahf
mov
mov
pop
ljmp
ds
inc
xor
enter
inc
outsb
loop
xchg
int3
add
jmp
rcl
rclb
aas
mov
lcall
mov
data16
and
lret
mov
jmp
fsubr
cmp
jne
jnp
pop
pop
scas
mov
test
pushl
jp
xchg
or
into
lods
pop
push
dec
or
jo
mov
movsl
sbb
pushf
adc
and
sub
cmp
cmpsb
sub
mov
outsl
dec
mov
call
push
lds
sbb
imul
mov
push
out
jmp
jecxz
cmpsl
outsl
lods
sub
adc
lock
mov
dec
cmp
jg
pop
jge
cmp
mov
and
xor
nop
xchg
adc
cltd
xor
in
push
movsl
cmpsb
test
test
out
jmp
sbb
div
outsl
mov
push
xor
sbb
idivl
mov
notb
rcrl
in
push
test
ljmp
fwait
out
sbb
push
movsl
xor
outsb
or
hlt
outsl
cmp
adc
mov
popl
adcb
pushf
adc
repz
push
stos
pop
inc
ss
pop
sub
push
mov
shlb
fdivrs
adc
xor
outsl
cmpsb
or
sub
sbb
int
pop
mov
lds
addl
fiaddl
imul
jecxz
popf
xor
aam
push
lods
or
in
push
stos
cmc
pop
sti
cld
add
das
jns
pushf
inc
stos
repnz
cltd
sbbl
mov
nop
lds
xchg
cwtl
push
mov
push
inc
mov
fsubl
das
sbb
fldcw
mov
aas
loopne
aaa
cmp
jne
add
ds
push
enter
test
in
dec
scas
dec
cli
mov
bound
pop
mov
sub
push
cli
sarl
insb
jno
push
jecxz
jp
mov
jp
jno
push
adcl
add
inc
mov
or
push
or
sbb
sahf
push
pop
sbb
add
or
mov
sub
popf
push
xor
aaa
mov
push
mov
lods
fucomip
mov
lret
mov
movb
cld
imul
imul
xlat
push
adc
dec
iret
push
aam
push
dec
sbb
jmp
cwtl
cmpsl
pusha
popl
cwtl
clc
icebp
bnd
mov
lods
ja
nop
jne
mov
mov
cltd
push
and
ret
movsl
xchg
xchg
cltd
fwait
xorb
push
sbb
aad
fisubl
stos
lods
scas
or
push
inc
mov
mov
mov
cmp
ds
jo
orl
dec
adc
adc
popa
fsts
in
dec
pop
out
pop
imul
and
cvtps2pi
shr
pcmpeqd
rolb
cmp
sbb
cli
test
mov
mov
xchg
push
add
push
adc
das
in
jne
pop
and
mov
xor
jmp
aaa
cmp
inc
inc
mov
mov
mov
leave
inc
jg
scas
dec
xchg
aam
pusha
rcll
fsubrs
jbe
or
fcmovu
fsubp
push
pop
mov
loope
jle
fdiv
repnz
sbbb
hlt
mulb
hlt
scas
imul
mov
jge
push
and
stc
xor
addb
mov
orl
loope
sbb
fsub
mov
mov
and
test
pop
loop
lods
push
lock
scas
mov
daa
mov
dec
das
mov
repnz
inc
inc
xlat
jbe
enter
dec
push
dec
dec
dec
cmpl
scas
push
push
mov
pop
fmul
mull
imul
fildll
paddsw
repnz
mov
je
test
cli
outsb
jnp
cltd
or
xor
adc
xor
xchg
push
mov
push
sbb
mov
arpl
adc
lahf
xchg
inc
xor
mov
jmp
push
mov
subb
inc
into
int3
push
mov
ret
ds
or
cmp
xlat
fcomps
fldl
sahf
movsb
fiaddl
test
cmp
dec
loopne
out
arpl
stc
imul
movsl
negl
jne
ja
cmp
mov
lea
xchg
iret
cltd
and
pushf
mov
leave
mov
aaa
or
mov
push
add
fwait
xor
or
pop
inc
insb
cli
popf
ja
jl
jno
pop
inc
jl
arpl
stos
mov
leave
lods
loop
xchg
pop
fsubl
pusha
fisubs
loop
imul
pop
jo
out
jge
subl
or
add
pop
or
pop
dec
sbb
ret
or
outsb
sub
stos
shll
and
jp
arpl
inc
xchg
mov
cmp
std
mov
mov
jecxz
push
rol
loop
sarb
dec
sbb
in
stc
in
and
sarl
mov
out
je
ljmp
cld
xor
inc
or
nop
lret
mov
jmp
jmp
mov
xchg
xchg
sub
rcrl
sahf
nop
sbb
xchg
scas
out
mov
xor
stos
inc
and
jl
push
movl
dec
dec
mov
fldcw
dec
dec
loopne
int3
fistl
gs
lds
addr16
pop
jecxz
popa
pusha
push
repnz
bound
icebp
movsb
adc
lods
jns
outsl
divl
leave
lret
mov
mov
add
push
or
jmp
into
cli
xchg
test
or
fwait
adc
sbb
xchg
jb
xor
in
push
arpl
les
fmuls
mov
js
std
rol
ror
int3
xchg
or
mov
inc
xchg
sub
jecxz
aad
ficoml
pop
xor
fbld
inc
out
daa
icebp
repnz
stc
in
inc
or
or
mov
ret
jle
jmp
mov
pop
fstl
or
negb
scas
test
lahf
sub
adc
jae
mov
scas
xor
scas
dec
xor
xorl
push
push
and
cmp
jecxz
or
pop
dec
iret
rcrl
pop
popa
into
xchg
insl
fistl
outsl
sbb
pop
jecxz
fs
aad
data16
mov
js
sub
xor
sub
sbb
adc
adc
push
xor
dec
sbb
adc
dec
cwtl
and
and
sahf
loopne
cmp
xchg
rolb
outsb
cmp
jmp
xchg
sahf
push
pushf
sub
mov
cmp
lret
sarl
das
pushf
fcmove
rcl
rcrl
dec
adc
cmp
pop
adc
push
mov
jmp
sbb
pop
cwtl
loopne
fwait
out
movsb
out
stc
repz
push
cmpsl
cmp
xor
dec
xchg
test
scas
mov
mov
sbb
stos
mov
adc
test
inc
mov
stos
cmpsb
inc
jmp
push
neg
inc
mov
fnstenv
insb
lret
mov
aas
pop
inc
jns,pt
jmp
dec
mov
outsb
lret
jle
ret
popf
in
ficomps
sbb
fs
jo
shl
das
lods
imul
das
in
fxch
mov
jno
cwtl
mov
scas
popf
or
adc
or
dec
adc
pushf
adc
adc
push
pushf
pop
sbb
push
pop
cltd
shlb
arpl
shrl
xor
dec
mov
mov
ds
inc
sti
popa
aas
repz
cmp
rorl
into
push
outsl
aad
adc
push
pop
fisubrs
push
sbb
insl
testl
call
push
addb
mov
cmp
cli
sarl
pop
xchg
xchg
cltd
sbb
dec
inc
mov
shrb
mov
xchg
stos
xor
mov
cmpsl
sub
lret
sub
mov
push
mov
jo
xchg
ret
out
fsubrs
inc
inc
inc
cmp
les
pop
push
dec
inc
into
gs
bound
mov
lcall
imul
jl
outsb
in
mov
xor
call
clc
jge
add
dec
incl
cmp
mov
add
sbb
push
jb
sbb
push
sbb
add
pusha
sub
sub
jb
lods
adc
das
adc
andb
dec
cmc
mov
push
add
pop
ret
dec
out
sarb
mov
or
pop
arpl
fisubrs
or
aad
xchg
ret
cmp
adcb
out
ss
movsl
out
icebp
push
aad
or
jle
imul
addb
or
test
inc
in
xchg
iret
cltd
out
psrlw
mov
int
stos
fisubrs
sub
scas
mov
cld
stos
adc
cmp
cmp
xchg
or
jns
cltd
sub
jbe
mov
cs
orl
pop
nop
pop
jl
jle
sbb
lret
je
inc
scas
push
mov
mov
insb
in
pop
pop
mov
addr16
insb
cmc
ja
cmp
js
lea
xchg
enter
xchg
jmp
incl
xchg
inc
and
xchg
loopne
cwtl
rcrb
jae
leave
inc
xchg
mov
pushf
pop
xor
xchg
ss
sub
fldenv
mov
jg
testl
mov
jmp
cmp
sbb
aad
push
dec
jg
adcl
push
push
and
sbb
inc
in
popf
je
push
xor
adcl
js
jbe
cmp
stos
js
adc
insl
add
mov
and
and
sbb
mov
popf
mov
sbb
sub
and
stos
cmp
mov
stos
outsl
daa
mov
mov
dec
push
cmp
or
ds
inc
dec
les
enter
dec
rcrl
into
rcl
fisubl
pusha
gs
loope
enter
jno
cmpsb
add
insl
cmp
subl
andb
push
jbe
inc
mov
std
cmpb
adc
ja
and
jg
sbb
aam
mov
out
sub
xor
lock
inc
mov
clc
push
cmp
cmp
mov
cmp
enter
test
mov
popl
or
jecxz
filds
cld
pop
cmc
pop
daa
cmc
mov
call
jae
xchg
cmp
add
test
rolb
sbb
xchg
cltd
lcall
int3
sahf
adc
dec
mov
daa
dec
sub
mov
xor
test
rcrl
xor
adc
inc
inc
leave
out
fdivrs
cltd
inc
ret
adc
pop
arpl
xor
dec
xlat
jl
ljmp
jbe
popf
imul
std
push
insb
add
imul
jns
cld
idivb
add
jg
sbb
jge
daa
nop
xchg
adc
adc
push
sbb
sbb
sub
lods
sub
xchg
hlt
mov
test
rol
test
lret
je,pt
pop
enter
int
push
inc
xchg
dec
adc
rcrb
push
lock
mov
push
sbb
ljmp
in
out
repz
or
stc
repz
clc
in
mov
xor
sub
test
faddl
sbb
rorb
xlat
movsl
sbb
mov
dec
sbb
movsb
and
and
sub
stos
cmp
and
sarl
dec
sub
daa
push
mov
inc
into
and
dec
int
pop
stc
sti
mov
sbb
jae
gs
fs
addr16
adc
jo
cmp
mov
aas
mov
into
xchg
or
or
dec
lcall
inc
push
pop
int
sub
push
sbb
mull
push
push
add
push
pop
popf
and
addr16
jmp
sub
cs
xor
xor
mov
cmp
mov
loopne
scas
rcl
icebp
fcmove
rcl
fadd
lods
adc
es
pop
sbb
jno
loope
nop
in
xor
sti
and
out
push
je
movsb
out
inc
mov
pusha
icebp
scas
jp
repz
sbbl
addl
mov
dec
rorl
les
xchg
ret
adc
mov
xor
mov
jae
cmc
push
jp
mov
mov
stos
mov
jnp
cmp
mov
cmp
sbb
dec
or
inc
hlt
popa
push
push
pop
cmc
pop
jecxz
imul
cli
pusha
out
es
pop
jp
jo
pop
jnp
addl
aaa
or
mov
or
sbb
push
and
or
lea
xchg
xchg
sub
and
fisubl
aaa
cltd
sub
cmp
das
in
inc
test
jnp
decl
lock
push
mov
in
dec
or
inc
or
ds
lds
enter
push
jne
sbb
push
stos
rcrl
sub
out
movsl
imul
das
xor
jle
movb
ja
idivb
xor
push
sub
mov
add
scas
ds
rorb
or
adc
mov
enter
lcall
aam
and
mov
enter
inc
out
mov
mov
cmp
mov
dec
jl
fcmovb
jl
shlb
shlb
inc
leave
jge
bound
push
popa
push
fistl
xchg
mov
pop
jecxz
imul
and
jbe
sub
cmpb
sbb
cmpb
jge
or
cltd
aas
lea
movsb
cmc
rcrb
movups
sub
leave
mov
and
scas
jns
popa
pop
mov
clc
xor
das
repnz
cmp
ret
outsl
sahf
sub
mov
int3
rcl
mov
int3
mov
into
push
std
aad
fcoml
xlat
push
data16
imul
push
fdivrl
mov
outsb
lock
imul
cmc
idiv
jmp
jns
cmpb
mov
int
xchg
cwtl
add
cwtl
or
xchg
xchg
or
xchg
pop
shlb
push
mov
push
mov
pop
mov
pop
stos
jno
das
mov
and
mov
and
xor
inc
adc
ret
insl
into
test
dec
rcrl
fs
jmp
shlb
fsubr
pop
xchg
xor
outsl
lock
xchg
je
stc
in
push
cld
js
jae
or
jg
cmpsb
aad
adc
xchg
cmp
mov
test
sbb
and
xor
xchg
push
sbb
pop
sub
jg
dec
insl
cmp
das
test
push
jl
inc
inc
mov
xchg
ret
les
jmp
ss
sarb
and
inc
popa
mov
fcmovbe
adc
jmp
fistpll
sub
call
in
out
repz
imulb
cli
mov
mov
mov
mov
jne
lea
inc
lods
adc
xchg
nop
cmpsb
inc
test
loop
xchg
sub
sbb
popf
or
mov
jbe
mov
cmp
enter
das
vunpckhps
inc
inc
xor
inc
das
js
shlb
orb
lret
in
aam
push
iret
in
push
aam
pop
shr
pop
pusha
divl
out
pop
xor
cmpsb
out
insb
mov
push
mov
imul
xchg
jp
std
jne
clc
jl
jns
push
jle
add
inc
pop
cmpsl
inc
nop
inc
adc
dec
adc
call
mov
daa
mov
cmp
xor
mov
testl
je,pt
mov
pusha
mov
iret
rcl
push
mov
dec
adc
shll
pop
pop
sahf
fnstsw
in
sbb
repnz
insl
and
pusha
in
sti
repnz
xchg
jnp
lahf
mov
pop
sbb
mov
push
orl
lea
mov
fsubl
mov
pop
mov
mov
lock
mov
mov
inc
popf
pop
aam
inc
les
sub
mov
lods
rclb
push
push
push
pop
mov
sahf
push
bound
mov
out
scas
outsb
imulb
sbb
push
into
jg
xorl
jns
xchg
cmp
and
and
inc
movups
xchg
orps
cmc
jae
push
push
pushf
or
push
and
and
loopne
xchg
outsl
cmp
inc
out
sub
stos
jmp
push
ljmp
mov
aad
dec
mov
xlat
psubusw
nop
pop
dec
repnz
call
mov
unpckhps
adc
xchg
jmp
stc
sti
sar
sti
repz
inc
jnp
jg
jo
pop
xchg
xlat
xchg
rcr
push
iret
cltd
add
cmp
popf
mov
xor
mov
mov
jge
in
mov
jp
aaa
mov
mov
mov
repnz
test
movl
dec
lret
cwtl
jb
fstpt
loop
aam
pop
jno
scas
insb
cli
movsl
loope
mov
icebp
mov
clc
jp
xor
mov
mov
scas
jp
orl
or
pop
add
push
adc
fstl
dec
adc
fimull
sbb
sbb
pop
sub
lea
movsl
out
and
sub
popf
xor
xor
mov
mov
mov
jle
rorl
or
enter
lds
into
rcl
xlat
push
fsubr
mov
xlat
sbb
repnz
out
sub
out
lock
jno
repnz
jae
jl,pn
orl
jnp
pop
inc
mov
jns
mov
nop
fsubl
ljmp
outsb
mov
in
mov
xchg
popf
and
cmpsb
test
xor
sub
xor
cmp
dec
mov
aaa
mov
int
push
push
ret
int3
push
pop
push
push
rorl
fldl
outsb
arpl
out
fcoms
scas
sbb
adc
outsb
jae
adc
push
add
outsl
xor
std
incl
test
or
xchg
cmp
sbb
mov
stos
cltd
mov
adc
xchg
xor
adc
jo
shrl
lahf
stos
dec
cmp
ret
push
jg
test
leave
aaa
mov
int3
lret
fcoms
push
int
psubd
add
int3
push
rcr
fcmovnu
dec
adc
pop
fnstsw
loop
sti
pop
mov
xchg
pop
xor
idiv
icebp
jl
ja
push
sti
scas
or
test
jb
mov
lds
int3
ds
push
pop
cmp
xchg
sbb
lcall
cmp
test
sub
mov
daa
scas
xchg
ret
and
mov
dec
dec
aas
inc
mov
orl
xlat
push
mov
pop
inc
push
push
push
push
aam
adc
xchg
jg
lahf
ljmp
fisubrl
out
jns
outsl
repz
xorb
add
pushf
add
mov
int
mov
and
sbb
mov
pushf
pop
inc
addr16
and
iret
lods
loope
xor
cmpsb
gs
scas
aam
js
xchg
dec
repnz
cs
inc
mov
call
leave
pop
pop
gs
call
xlat
in
das
jo
jmp
aas
js
icebp
inc
je
std
dec
sub
push
jl
add
addr16
or
ja
pop
adc
adc
hlt
nop
lret
mov
imul
jns
sub
mov
gs
lret
loop
mov
pusha
push
pop
cmp
mov
sbb
pop
cmp
adc
jnp
inc
cs
lds
pop
inc
int
dec
push
push
shll
repnz
mulb
imul
push
jno
lcall
mov
out
cmp
repz
das
xor
mov
arpl
or
sbb
test
pushf
pop
mov
pop
sbb
dec
pusha
and
xor
mov
push
dec
cmpsl
sub
sbb
pop
divl
mov
imul
inc
mov
push
roll
inc
iret
rcl
push
adc
dec
sbb
fsts
fdivs
cmc
mov
icebp
repnz
pop
jae
fnstenvs
mov
jb
mov
add
or
pop
and
pop
ds
xchg
rcpps
fistps
lods
test
fbld
lods
mov
jae
and
clc
rclb
push
ds
inc
dec
push
aas
imul
push
fucomp
xchg
push
fisttpll
ljmp
push
pop
push
ficoms
imul
sti
int3
gs
jae
jns
or
cld
jmp
in
sti
xor
leave
je
aas
call
std
addl
adcb
or
dec
shld
push
adc
cltd
sbb
pushf
pop
pop
sub
sub
in
fdivp
mov
mov
fildl
lock
or
cld
dec
dec
mov
iret
rcl
pop
outsb
fsub
push
movsl
enter
mov
fs
sti
in
icebp
bnd
data16
hlt
cmp
out
cmc
stos
xchg
cld
jno
ja
jp
fstpt
mov
inc
cltd
addr16
mov
xchg
add
xchg
push
sub
push
es
lahf
mov
mov
mov
sub
xor
xor
shll
dec
sbb
dec
sub
push
and
sub
xchg
leave
sbb
pop
push
pop
pop
pop
fnsave
bound
arpl
mov
addr16
cld
cwtl
mov
clc
jecxz
cli
call
jle
test
sbb
mov
add
push
cmpsb
inc
adc
add
push
add
cmpsl
push
xchg
pop
pop
int3
stos
popa
ss
adc
out
sub
movsl
dec
sub
mov
cmpsl
aaa
scas
das
lret
pushf
lods
cmp
dec
pop
mov
mov
aad
ds
rclb
dec
adc
inc
and
sahf
jmp
push
pop
movsb
pop
pop
and
mov
push
cmc
jns
or
add
mov
mov
ss
sarl
xchg
jns
xchg
test
mov
xlat
fmul
aad
clc
push
cmpsb
loope
pop
and
xor
mov
mov
cmp
mov
and
pop
add
push
inc
add
pushf
pop
rclb
dec
leave
jl
mov
add
xchg
xchg
xorl
jb
in
xor
xor
add
xorl
ja
out
add
add
lock
dec
adc
xor
mov
xchg
dec
or
mov
insb
sub
pop
sub
loop
mov
xor
movl
cmp
or
xor
int3
rcl
dec
add
push
loope
sub
dec
sub
das
dec
frstor
insl
shl
and
xor
repnz
ja
push
dec
hlt
idiv
les
push
add
jns
xchg
xchg
pop
ja
adc
add
xchg
orb
lcall
lea
cmp
divl
mov
aaa
and
repnz
mov
cmp
mov
inc
mov
ret
jle
pop
inc
push
call
pop
pop
jg
int3
lea
inc
cs
xchg
pop
stos
sbb
xor
add
hlt
jp
adcb
jo
bound
jnp
cmp
outsb
scas
push
add
jg
push
jg
cltd
push
or
xorl
fisubrs
sbb
adc
sbb
sbb
sbb
and
cs
xor
sub
popf
xchg
cmp
jp
mov
mov
enter
mov
stos
xchg
test
inc
pop
mov
push
int
clc
aam
xlat
cs
loope
pminub
pop
gs
out
addr16
cmp
inc
sti
lock
insb
mov
imul
jp
lods
fs
hlt
test
sbb
roll
jge
sbb
repz
inc
push
fsubs
mov
sbb
lahf
and
mov
add
cmp
sarb
mov
mov
fwait
adc
dec
dec
ds
test
push
shl
pop
pop
fsubs
movsb
pop
jl
imul
call
bound
push
in
mov
xor
cmpsb
add
daa
add
xchg
push
dec
dec
cmpsb
pop
pop
es
xchg
mov
xor
movsl
movq
mov
lcall
movsl
aas
xor
xor
leave
pop
cmp
mov
aas
leave
lods
adc
leave
push
pop
inc
ret
push
xchg
pop
sbb
repz
pop
sbb
push
push
push
cld
in
push
inc
iret
sub
cmp
pop
push
fs
hlt
cmc
in
je
inc
out
push
dec
movl
fdivrs
movsb
mov
xchg
cmpsb
mov
or
in
xchg
xor
repnz
push
or
lahf
mov
lods
popf
repnz
xor
xor
xor
fadds
add
cmp
jmp
jae
add
jnp
jne
jns
jns
xchg
push
test
loope
fldl
push
rcrl
mov
push
and
push
test
and
stc
out
mov
int
outsb
jge
out
mov
add
sub
daa
jle
out
jnp
add
lea
shlb
pop
xlat
cmpsl
adc
imul
insl
cmpsb
fs
lahf
sub
xchg
mov
inc
mov
xchg
test
mov
xchg
or
push
adc
int
fimull
into
call
fmull
push
fidivrs
push
enter
daa
icebp
jmp
sub
mov
or
adc
xchg
push
ja
mov
mov
mov
xchg
enter
nop
lret
sub
mov
xchg
cwtl
popf
and
mov
movsl
and
sbb
sbb
out
leave
popf
cmp
sub
mov
rol
add
xor
inc
jge
out
push
inc
dec
mov
dec
push
sahf
imul
pop
pusha
gs
cmpsl
jge
push
jo
mov
icebp
jge
mov
cltd
jle
add
cmc
or
xchg
pop
or
inc
test
pop
inc
or
push
sbb
adc
sbb
test
sub
imul
cmp
mov
inc
ss
inc
mov
mov
mov
dec
out
cwtl
pop
mov
adc
test
jne
loop
loope
xlat
fs
pop
push
hlt
and
jb
data16
jne
hlt
das
add
cli
jo
insl
sti
and
cmc
adcb
addb
add
lea
push
cs
cltd
add
mov
lahf
mov
mov
mov
mov
dec
mov
int
push
ret
dec
mov
fmul
repnz
out
rcll
je
jbe
adc
ret
xchg
fldl
xchg
dec
rolb
pusha
gs
pop
in
addr16
fucomip
adc
in
jne
idiv
std
jnp
cld
fisttpll
jbe
jl
idivl
decb
sub
sbb
pop
sbb
and
and
sub
es
xor
mov
ret
lock
push
sarl
push
lds
and
dec
pop
rorl
or
or
xlat
fsts
unpckhps
jg
in
icebp
stos
in
and
clc
icebp
mov
ljmp
gs
pusha
adc
dec
and
cltd
mov
xchg
xchg
sub
int
or
arpl
stos
pop
mov
movsb
icebp
daa
push
pop
data16
aam
std
aaa
cmp
ss
inc
addr16
inc
ret
sub
aas
int3
mov
pop
push
push
push
je
dec
inc
into
sahf
pop
jecxz
gs
pop
or
jge
imul
stc
jmp
jnp
fdivs
xchg
jns
nop
orb
or
jg
sbb
lods
or
dec
pop
lea
dec
xor
cltd
lret
sub
stos
sub
rep
mov
shll
mov
test
mov
ja
jnp
jns
fdivr
mov
aam
cmp
cmp
mov
mov
pop
loope
adc
ficompl
nop
pusha
adc
pop
sbb
bound
fs
pfmul
mov
inc
push
test
cltd
addr16
les
jg
mov
shlb
xchg
cwtl
push
int
cwtl
shl
mov
mov
cmc
scas
lods
scas
xor
cmp
pop
sub
cmp
sbb
inc
leave
inc
sbb
mov
cmp
ljmp
add
lock
lds
popa
fcoms
loopne
jg
imul
sub
pop
push
movsl
xchg
xchg
ja
xchg
mov
add
adc
cmpb
or
push
pop
add
xchg
push
sub
cmp
sbb
sub
fstps
inc
dec
add
das
xor
ret
rcrl
mov
into
dec
mov
enter
int3
jo
rcl
aad
push
fcom
in
push
fisubs
dec
mulb
out
insb
cmp
insl
outsl
repnz
test
clc
xorl
add
mov
xchg
std
mov
lcall
push
shrl
popa
pop
fld
sub
movsl
cmpsb
and
loope
sub
pop
mov
sub
jb
pop
inc
ds
mov
dec
inc
dec
cmp
bound
shlb
pop
dec
aad
in
dec
lret
bound
fisubs
push
ja
pusha
gs
fcomip
arpl
in
test
outsl
jo
decl
cmp
adc
xchg
out
cmc
jl
add
add
loop
lahf
adc
mov
mov
sbb
aaa
or
es
imul
in
mov
aaa
mov
inc
cmp
mov
scas
and
mov
add
enter
inc
jg
push
add
jg
loope
jge
and
fstp
loopne
es
cmpsb
sub
je
pop
jo
add
out
leave
add
inc
cmp
add
jnp
xor
and
inc
cltd
lcall
cltd
sub
cmp
adc
lock
mov
imul
cmp
adc
add
dec
dec
in
das
lret
in
in
bound
push
gs
cmp
jnp
mov
jns
jl
jno
inc
mov
add
xchg
xchg
cltd
pop
push
or
add
mov
mov
movsb
xchg
push
adc
push
sbb
adc
and
cmp
push
cmp
das
xor
cmp
aaa
fisubl
out
dec
mov
mov
int3
xor
rorb
or
dec
rcl
pop
enter
outsl
rclb
fnstsw
pop
sbb
push
testb
stos
leave
out
mov
hlt
mov
jne
aas
scas
decl
dec
xchg
push
mov
rcll
push
xchg
mov
sub
cmpsb
cs
arpl
mov
cmp
ret
inc
xor
inc
jbe
xor
into
push
sbb
pop
pop
scas
call
push
shlb
and
pusha
gs
or
push
insl
outsb
or
jae
xchg
add
jnp
jb
cli
jmp
or
test
xchg
lea
sbb
dec
dec
or
sahf
ss
pushf
aad
and
xor
sub
mov
push
cmp
js
scas
xor
leave
xor
inc
jb
dec
jns
lds
aam
iret
paddsw
xor
fcoms
ljmp
icebp
repnz
das
stc
outsb
test
std
push
lock
mov
mov
shll
test
and
xchg
lds
mov
and
cmpsl
lahf
mov
iret
mov
mov
mov
push
inc
stos
dec
mov
cs
stos
jno
mov
divl
dec
dec
aas
inc
fsubrl
dec
dec
push
movl
push
pop
lea
in
rcrb
pop
push
or
jno
insl
sar
lret
jae
outsl
mov
mov
and
repnz
mov
xor
ljmp
int3
pop
push
or
fcmovnb
movsl
pop
adc
adc
push
add
adc
adc
sbb
cmp
sbb
and
jnp
xor
mov
sahf
mov
mov
lret
stos
inc
imul
dec
outsb
dec
stc
lret
shlb
bound
roll
push
jmp
loope
into
xchg
and
loop
jmp
jge
cmc
pop
test
mov
or
icebp
scas
add
mov
testb
inc
jle
bswap
cli
leave
fwait
repz
rorl
enter
push
mov
sbb
sbb
mov
leave
jo
test
mov
mov
jp
cmp
mov
mov
and
pop
push
mov
test
rclb
xchg
cmpsl
out
popa
aad
jmp
imul
daa
gs
mov
hlt
repz
jbe
jl
and
fimull
mov
sti
push
into
adc
insl
adc
rcll
cmpsb
adc
pusha
cmp
and
jg
dec
xchg
ret
in
inc
in
ds
scas
out
xlat
sahf
pop
lods
enter
mov
inc
packuswb
push
int3
popa
jae
in
sub
fsub
push
fwait
enter
push
js
push
and
and
jg
xchg
lea
out
lock
jnp
insb
repnz
add
mov
add
mov
xlat
dec
fdivl
adc
sbb
rcr
xor
pop
lret
fdivrl
es
outsb
mov
es
outsl
inc
pop
ds
rcll
ficoml
sbb
pop
iret
adc
lea
in
rcrb
popa
nop
stc
sarb
insb
jno
sub
out
fucomip
mov
popf
insb
cmc
out
je
jle
cli
jnp
nop
sub
mov
adc
pusha
dec
or
xor
push
adc
div
pop
sbb
mov
arpl
popa
and
xor
ja
cs
js
mov
push
cmp
enter
iret
leave
inc
add
roll
fcomp
cld
xchg
or
aam
mov
dec
pop
jne
dec
sahf
ljmp
fs
idivl
je
mov
inc
mov
inc
or
scas
mov
mov
add
mov
mov
mov
daa
clc
cltd
fwait
insl
cmpsb
dec
fsubrl
rolb
mov
outsb
sub
stos
divl
std
mov
add
push
inc
rorb
dec
or
mov
push
push
push
leave
pop
iret
xchg
pusha
xchg
pop
sbb
sahf
ret
fs
pop
fnstenv
loopne
jns
in
and
outsb
shlb
cmpb
mov
inc
add
filds
or
dec
or
pushf
cli
xchg
sbb
mov
ret
push
push
push
and
sub
popf
sub
sub
or
imul
xor
cmp
js
dec
gs
lret
int3
push
mov
or
mov
std
push
call
fstp
arpl
ljmp
or
out
push
bound
ja
add
xchg
jbe
add
push
sub
lds
pop
push
and
fwait
pushf
enter
push
lea
jbe
and
cmc
outsb
inc
stc
mov
mov
scas
clc
ret
fstps
xor
cmp
inc
cmp
aaa
adc
mov
dec
xlat
adc
cwtl
push
sahf
lea
test
push
jge
out
ret
pop
jmp
repz
jbe
adc
incb
daa
lahf
push
fmull
test
xchg
sub
dec
and
lea
or
shll
lahf
push
and
sub
scas
and
out
enter
pop
cmpsb
xor
das
mov
mov
jg
les
imul
xchg
pop
mov
or
dec
aam
inc
movups
jne
loope
imul
jne
push
imul
add
or
mov
pop
add
enter
pop
inc
or
aaa
pushf
or
mov
sti
pop
test
cmp
sub
cmp
aaa
aaa
lods
mov
mov
sarl
outsb
leave
inc
jns
rcl
dec
cmp
dec
into
into
pop
call
int
and
push
push
fistps
sahf
nop
icebp
or
in
in
jl
cld
fisubrs
shrl
idivb
sub
lds
or
mov
cmpsl
fldcw
stos
or
sbb
test
sub
pop
dec
stc
pop
sub
shll
mov
cmc
dec
mov
rcll
aad
dec
je
into
rorl
imul
repz
fmul
push
rcr
fstp
fs
out
jmp
out
xchg
insb
cmc
repnz
callw
cmc
idivb
cmpb
jnp
xchg
mov
mov
or
nop
xchg
vpshld
xor
sbb
mov
test
xchg
sbb
insl
out
les
scas
lods
pusha
shlb
cmp
ret
inc
inc
dec
mov
dec
jmp
leave
push
cmpsl
loop
into
aad
pop
mov
lahf
imul
loop
jge
push
repz
jp
jmp
cmc
jg
addb
mov
jmp
inc
adc
xchg
or
pop
cmp
inc
inc
sub
cmc
nopl
popf
sbb
aas
and
out
lcall
hlt
mov
cs
repnz
inc
loope
into
mov
jmp
in
pop
mov
mov
int3
adc
pop
out
inc
adc
rolb
add
and
or
adc
fnstsw
pop
push
lret
inc
lock
jecxz
push
add
stc
scas
cld
add
sbb
jle
jg
lods
and
pop
xchg
mov
push
sub
shll
pop
daa
lea
fsubrl
stos
mov
push
cmpsb
pop
rcl
test
shrl
pop
inc
int3
dec
test
enter
rorl
loopne
sbb
xchg
pop
xchg
pusha
mov
in
sbb
jo
in
jg
insb
bnd
mov
cld
jns
or
jne
xchg
add
lea
adc
aaa
stos
jb
sbb
lea
xchg
bound
bound
daa
cmpsl
push
mov
and
xor
roll
adc
outsl
das
sub
fidivrs
scas
cmp
dec
stc
push
inc
test
ret
int
data16
mov
imul
push
cld
fisttpll
or
pop
lock
in
data16
icebp
jecxz
daa
lock
repz
sub
outsl
push
cmc
in
cmp
add
push
mov
xchg
outsb
aam
movb
mov
push
xchg
sahf
fldcw
movsb
test
cmpsb
sub
push
mov
mov
mov
repnz
inc
sub
mov
xlat
inc
xor
jecxz
push
push
jg
cmp
mov
push
pop
arpl
arpl
mov
test
pop
jecxz
imul
hlt
jl
loope
cmp
jl
outsl
cmp
repz
push
incl
test
int
cmpsl
adc
adc
cld
sbb
mov
cmp
sub
das
cmpb
cmpsb
mov
push
ss
mov
ror
int3
pop
fidivrs
repz
in
fisttps
sub
push
sbb
fcmovnu
fisubrs
fldenv
ljmp
or
pop
xchg
add
aas
jae
mov
jle
mov
jne
js
xchg
jnp
xchg
test
jbe
xchg
cltd
ret
sub
mov
jmp
mov
lahf
es
cmpsb
loope
mov
pop
pop
iret
and
dec
cmp
jmp
aas
mov
jns
cmp
xor
dec
lret
inc
pusha
sub
jge
ficompl
push
fcmovnbe
adc
jmp
out
sub
movsb
es
lret
jns
fcompl
and
std
sbb
mov
jle
and
sbb
xchg
lahf
or
leave
mov
or
xor
pop
xchg
fcomps
and
inc
and
mov
pushf
imul
dec
xchg
add
cmp
ret
test
jle
inc
or
cmp
mov
rol
pop
fcmovbe
loope
pop
addr16
fldenv
fistpl
fisubs
repz
xchg
out
jbe
jo
pop
or
popf
clc
xchg
rcll
rcrb
dec
jle
xrelease
ret
cmpsl
jp
xchg
fwait
adc
mov
cmp
sahf
jo
rcr
sub
js
mov
jae
es
add
mov
ret
lret
dec
push
jb
aad
rolb
xchg
push
rcll
popa
nop
mov
pop
xchg
pusha
mov
adc
movsb
sbb
cmpsl
je
mov
and
cmp
clc
std
adc
cmp
addl
addb
mov
adc
sbb
sub
and
push
dec
cmp
sub
sub
int
mov
sub
das
mov
dec
cmp
mov
dec
and
dec
rcl
inc
push
addr16
dec
or
notb
fcomi
add
xlat
fcomps
jecxz
adc
fnstsw
fwait
sbb
add
cmp
push
repz
insl
jl
dec
mov
mov
or
sbbb
and
adc
cmpsl
jp
xchg
fwait
or
mov
fwait
and
sub
cmpsl
sbb
shll
cmp
cmp
and
xor
aas
inc
jbe
xchg
push
outsb
jae
cmp
dec
lret
scas
fsubl
push
fistps
push
cld
imul
test
je
pop
data16
jno
cwtl
cltd
add
clc
std
jnp
das
subb
popf
mov
adc
or
mov
adc
psadbw
sbb
sahf
sbb
popf
jmp
int3
cmpsl
xor
xor
pop
xor
pop
int3
mov
leave
push
mov
int
outsb
aam
jne
stos
leave
inc
pop
jge
js
sbb
push
push
mov
sbb
into
pop
adc
or
jbe
jmp
testb
inc
jae
ja
and
adc
mov
mov
ficoml
adc
push
inc
cwtl
popf
sahf
sbb
push
pop
fcmove
stos
into
sub
mov
ljmp
lds
mov
cmp
rol
xor
ds
inc
mov
lret
dec
pop
aad
enter
xchg
dec
ljmp
push
addl
pusha
fildll
loope
ljmpw
jb
add
cmc
jle
testb
fwait
clc
xchg
cmp
lds
inc
jmp
inc
adc
xchg
cli
es
adc
sbb
and
sbb
cmp
and
xchg
and
mov
out
jb
repnz
sub
ss
call
cmc
push
cmp
aas
push
cmpsl
jnp
roll
fsubl
rcrb
fistl
fsubr
fcmovu
loope
jg
push
jge
incl
insl
jecxz
sbb
cwtl
add
xchg
outsl
jg
idivb
push
and
push
mov
ja
pushf
push
jg
adc
mov
inc
xchg
cltd
and
xchg
fcoms
sbb
sub
aam
push
cwtl
push
aad
daa
jmp
sub
jecxz
mov
pop
scas
add
jne
inc
jl
mov
dec
test
loopne
dec
push
push
ret
inc
sbb
adc
xorb
jmp
xlat
pop
pop
bound
jge
lods
jno
clc
loope
mov
sbb
push
jmp
shll
sbb
or
xchg
add
dec
pop
pushf
test
fwait
xor
test
xor
shlb
jecxz
cmp
dec
dec
lods
cmp
cmp
mov
pop
test
add
enter
add
add
call
push
xchg
pop
push
push
and
sub
jg
jae
cmc
add
call
cltd
cmp
clc
inc
pop
xorl
test
mov
orl
lcall
sbb
mov
and
shrl
mov
cmpsl
arpl
mov
xor
mov
sub
jb
stc
dec
dec
push
insl
or
fnstenv
inc
push
fisttpll
in
dec
pop
loopne
pop
outsl
in
pop
arpl
stc
lret
outsb
test
push
mov
jbe
jl
jge
xchg
push
lret
xor
cmpb
and
lret
jns,pn
xor
dec
pop
cwtl
adc
mov
sbb
adc
sbb
cltd
je
xor
sub
add
jns
cmp
mov
aaa
pop
shl
int
enter
int
push
shlb
testl
loop
fmuls
dec
sbb
sbb
std
xchg
in
icebp
stos
push
jo
jbe
mov
insb
mov
insl
sub
jnp
mov
outsl
jge
add
add
cmp
lahf
cmp
dec
pand
xchg
cmpsl
aaa
clc
lea
mov
push
outsl
push
mov
pop
pusha
lods
inc
sbb
stc
cld
pop
jae
das
les
cli
ret
push
mulps
out
sub
xchg
insb
pop
leave
push
push
out
mov
in
je
or
jb
insb
out
jl
or
adc
clc
std
sbb
jno
mov
xor
sub
xchg
sbb
inc
adc
fwait
adc
lcall
pop
pop
and
inc
faddl
jge
xor
das
mov
xchg
mov
push
cmovns
lret
out
mov
inc
stos
shlb
aam
shl
jnp
rcr
loope
pop
nop
fidivrl
addl
jecxz
daa
fidivrs
in
jge
cld
xchg
fcmovnb
incb
popf
sti
xchg
jp
orl
roll
or
insl
xchg
adc
adc
fs
lahf
mov
xor
dec
je
out
sub
inc
and
adc
outsl
addr16
incl
jb
rcr
dec
movsb
icebp
jle
xchg
dec
into
push
fdivr
push
loop
pop
lock
stc
aas
popa
pop
repz
pushf
arpl
scas
mov
leave
sbb
lea
mov
bnd
sti
pop
test
stc
loopne
jge
add
pop
xchg
inc
add
xchg
push
adc
mov
rclb
sub
xor
daa
shr
jecxz
fnstsw
sbbb
addb
in
and
push
mov
inc
add
aam
dec
pop
sub
mov
adc
ss
loopne
icebp
jmp
je
sub
bound
pop
in
jne
cli
mov
push
insb
std
incb
clc
add
xchg
pop
xchg
xchg
push
pop
or
add
xchg
push
dec
mov
adc
fists
pop
lods
mov
jg
sbb
xchg
mov
ds
inc
xor
dec
ret
fnstcw
jle
stos
daa
push
pop
jne
push
into
mov
push
arpl
inc
pop
in
gs
pop
ja
gs
pop
fisubrs
add
pcmpeqb
in
mov
xor
xor
jns
lds
mov
out
and
pop
into
das
sbb
aad
push
and
pop
and
movsl
dec
lods
lods
cmp
scas
fbld
cmp
xor
ror
push
mov
dec
lds
into
roll
adc
fld
mov
push
sahf
out
inc
test
cmpsb
daa
fisubrs
icebp
out
je
negb
jl
insl
cmpsl
lods
cmc
nop
jbe
rorl
test
inc
nop
xchg
xchg
pop
mov
push
js
andb
or
and
stos
sbb
xchg
mov
mov
mov
sub
mov
add
push
xor
lea
dec
fldl
popl
push
leave
push
rcll
imul
data16
in
imul
lret
jge
clc
xor
jne
or
bnd
inc
or
add
push
lret
mov
mov
adc
sbb
adc
ret
push
push
cmp
sub
movsl
sub
bnd
cs
push
cmc
aas
xor
loope
xchg
inc
inc
mov
mov
icebp
aas
add
lret
and
inc
fcmove
push
xchg
pop
push
int3
push
cld
out
out
jecxz
sbb
pop
das
pop
rep
xor
jnp
cld
add
lock
arpl
fiadds
push
addb
nop
lret
mov
shl
int3
xchg
sub
sub
cltd
aaa
fwait
sub
pushf
mov
sbb
enter
mov
jg
lods
jbe
push
cmp
sbb
cmp
dec
xchg
adc
inc
pop
inc
lds
pop
aam
ljmp
popf
fsubs
stos
mov
loop
outsl
scas
outsb
std
jecxz
jmp
jns
call
adc
adcb
or
cmpsb
imulb
cmpsl
or
and
and
sbb
outsb
addr16
lahf
mov
cmp
lds
add
mov
mov
iret
inc
adc
insb
mov
or
fistl
fstp
jecxz
jmp
test
pushf
mov
mov
jmp
hlt
popf
or
movsb
xchg
jns
test
sbb
pop
orb
lea
pushf
mov
and
mov
data16
movsb
cmpsb
stos
and
inc
stos
push
sub
mov
hlt
jo
cmp
mov
sub
jmp
inc
dec
cmp
int
addr16
sub
mov
repnz
in
arpl
or
dec
insb
jno
sub
jns
jae
jns
cmpsb
rorb
repz
std
incb
mov
add
lahf
imul
mov
dec
sub
movsb
cmpsl
cwtl
cmp
mov
and
xor
test
xor
bnd
outsb
push
into
ds
inc
cmp
add
popf
inc
pop
ret
dec
mov
or
pop
dec
adc
jecxz
pop
in
xor
in
push
out
mov
jmp
divb
xor
jge
xor
xchg
sbb
jecxz
das
sbbb
mov
mov
mov
nop
aam
movsb
leave
hlt
add
insl
sub
in
inc
mov
mov
xor
ss
loop
aas
mov
inc
mov
lret
lds
pop
adc
dec
pop
insl
cltd
arpl
mov
mov
negb
jmp
cmp
and
call
mov
test
repz
cmpb
lahf
push
test
lods
call
aam
sbb
sbb
in
inc
push
pop
fwait
sub
or
dec
pop
daa
movsl
jns
jl
mov
cmp
cmpsl
mov
xlat
mov
fidivrs
scas
inc
mov
in
out
icebp
mov
iret
rcl
jae
loope
xlat
lock
cmp
in
test
clc
pop
adc
mov
xor
adc
cmp
daa
rorb
mov
es
sub
outsb
in
lods
int3
xor
xchg
mov
pop
pop
inc
lret
inc
out
test
lods
cmpsl
loope
xor
sbb
push
repnz
mov
cmp
incb
push
dec
dec
lock
loope
dec
dec
push
jge
loope
dec
inc
pop
push
jg
dec
sbb
shrb
xor
cltd
fldenv
jmp
add
mov
cmpl
in
aas
clc
jo
cmc
incl
test
mov
pop
icebp
adc
adcl
push
dec
nop
or
push
xchg
fildll
jg
fwait
cltd
mov
jno
lods
sub
gs
lods
jg
mov
clc
inc
jns
dec
xor
incl
movsl
inc
leave
inc
jle
enter
pop
rorb
sbb
sbb
icebp
push
nop
adc
in
sarb
and
xor
insb
pop
data16
scas
call
cld
sbb
jle
and
mov
rcll
mov
or
xchg
sub
lahf
enter
movsb
test
push
and
mov
mov
jo
clc
es
add
das
outsl
jo
jp
mov
mov
std
pop
pop
addb
xor
mov
sarb
lea
sub
enter
push
jmp
lea
push
xchg
lds
cld
cmp
fbld
sub
mov
test
xlat
popf
pop
insl
adc
dec
pop
or
and
sub
faddl
test
cmp
mov
stc
mov
shll
inc
push
iret
testb
inc
dec
ret
lods
int
rorb
clc
push
fldenv
mov
jne
in
fldcw
sbb
fcom
mov
lahf
in
cmpsb
mov
cld
jne
push
cmpsl
test
das
mov
cmpb
into
pop
adc
pushl
popf
xor
out
aam
movsb
xor
inc
or
test
mov
scas
pop
shr
cs
jo
das
mov
ss
test
aas
imul
outsl
outsl
jb
int
iret
nop
pop
dec
test
mov
mov
shl
mov
mov
lods
mov
out
aas
repnz
mov
add
out
cmp
daa
cwtl
gs
sbb
sub
pop
loopne
jbe
lods
push
and
call
dec
mov
xor
xchg
xor
mov
sti
leave
cltd
cmp
inc
add
inc
xchg
push
mov
inc
int
sar
mov
sub
sbb
fcmovu
out
add
jns
mov
jno
icebp
repnz
dec
in
xor
lahf
jno
call
repz
orl
mov
and
xchg
xor
sbb
cmpsl
lret
xchg
xchg
fwait
shrl
int3
mov
ja
movsl
sbb
inc
push
pop
dec
dec
dec
addr16
and
mov
aad
fistpl
ds
cltd
push
in
inc
mov
jno
ret
dec
into
std
pop
lahf
push
aad
movsl
mov
cwtl
pop
fdivl
xorb
mov
in
lods
insl
and
xor
mov
clc
subb
cmp
xchg
mov
or
cltd
cli
xchg
int3
stos
adc
fdivs
dec
sub
and
inc
outsl
xor
daa
lods
icebp
sub
shll
pop
mov
ja
out
call
mov
ja
rcl
pop
mov
shrb
int3
fisubs
enter
in
push
insb
mov
in
bound
inc
pusha
scas
icebp
jnp
lods
idiv
std
test
jns
bound
rorl
ss
push
mov
cmpsb
adc
test
xchg
xor
and
cltd
inc
xor
xor
mov
movsl
sbb
je
push
jl
inc
sub
dec
xor
inc
xor
aaa
fsub
inc
dec
dec
fidivl
cmp
dec
push
call
arpl
dec
sbb
lret
sbb
cld
shrl
mov
es
xchg
fs
add
cli
sub
loopne
xchg
test
xor
pop
xor
test
movsb
sub
sbb
mov
add
xor
push
dec
adc
cmp
loope
cmp
ret
dec
xchg
inc
adc
push
out
add
sar
add
leave
inc
sbb
pop
or
movsl
insl
fistps
incl
sub
out
mov
outsb
push
mov
incb
cmp
addl
mov
stos
nop
lcall
or
mov
ds
inc
mov
cmpsl
test
cmc
push
fdivp
mov
mov
clc
push
cltd
int3
dec
push
inc
xor
jge
fnstcw
sbb
adcl
dec
dec
sbb
fidivrs
mov
or
jle
pusha
insb
jno
jo
push
je
jp
jge
jbe
jl
jae
clc
std
sub
fld
incl
std
adc
or
sbb
mov
sbb
sub
sub
sub
mov
sub
filds
std
sub
sahf
xor
add
sarl
or
mov
leave
les
pop
pop
rcl
addr16
jg
push
push
int
arpl
jb
sbb
jbe
insl
js
lock
outsl
cmp
sti
cld
test
mov
pop
mov
mov
add
lea
cltd
pop
dec
lods
xchg
sbb
mov
mov
inc
loop
ds
lock
mov
dec
cmpsb
pop
mov
mov
insl
arpl
pop
loope
dec
mov
jno
jb
ja
push
sbb
push
mov
xchg
pop
out
cli
arpl
int3
ljmp
push
pop
pop
inc
fwait
xor
es
add
add
sti
and
push
or
add
mov
or
push
lcall
and
and
push
pop
daa
lods
xor
rcrl
movsl
inc
lret
lds
mov
lret
push
push
fcmovnbe
push
adc
and
imul
in
and
mov
jns
xor
sbb
mov
stos
std
test
outsl
xchg
cmpl
sub
sub
out
xchg
add
js
push
fwait
out
cwtl
mov
sbb
mov
shrl
test
mov
je
dec
rolb
mov
xor
les
in
gs
int
dec
aam
push
fistpll
cmp
pop
xchg
pop
aam
jmp
addb
mull
out
outsb
fincstp
insl
cmpsl
outsb
in
test
add
xorb
or
leave
jle
idivb
add
xchg
cmc
or
aas
sbb
rcll
or
test
and
sub
sub
ja
cmpsl
shl
lods
jecxz
into
es
xor
loopne
jae
ja
ror
mov
inc
xchg
stos
aam
cmp
aad
inc
bnd
adcl
jle
adc
in
xor
push
jnp
aaa
sbb
leave
pushf
lods
std
test
add
sub
jo
xchg
ja
js
mov
xchg
or
stc
jo
ret
and
sub
leave
inc
or
or
sbb
bnd
sub
inc
mov
mov
cmp
inc
mov
push
aaa
mov
repz
orb
aam
pop
jecxz
xchg
shrl
aam
ljmp
popa
mov
fldenv
daa
sbb
mov
jg
sbb
and
or
xchg
je
xor
lea
int3
lret
sub
add
test
or
or
popa
ret
ljmp
lods
lods
mov
insb
and
mov
sbb
cmp
sarl
cmc
cmp
dec
mov
inc
mov
call
sar
dec
pop
data16
cli
fimuls
aad
mov
pop
rcr
adc
rcrb
ljmp
fisubs
call
push
in
je
addr16
lret
ja
ret
roll
jb
cld
mov
mov
test
das
in
pop
enter
aam
mov
adc
rcrl
push
mov
ret
and
cmp
scas
lods
out
dec
pop
mov
xor
xor
mov
shlb
mov
xchg
pop
push
mov
pushf
lcall
scas
imul
in
and
bnd
add
popa
lods
jb
ja
mov
jl
xor
sub
or
jnp
ss
dec
or
sbb
cmp
mov
and
xor
mov
pop
adc
mov
xor
jo
cmpsl
jo
aaa
cmp
les
push
cmp
leave
in
les
lret
test
pop
add
rcl
aam
out
dec
shl
pop
loope
xchg
cltd
std
icebp
sbb
mov
mov
pop
or
loope
stc
cli
pop
ret
sti
inc
rorl
std
xor
xor
jg
fs
xor
lea
jg
cwtl
adc
mov
lahf
idivb
lcall
pushf
test
in
mov
mov
mov
ret
dec
sub
add
shl
dec
push
push
inc
dec
push
lret
xchg
dec
test
fistpll
sarb
in
inc
jecxz
push
in
push
xchg
hlt
mov
cmp
push
insl
jp
xor
xorl
aas
sub
enter
pop
sbb
mov
cmp
pop
and
xor
pop
and
sbb
add
lods
dec
xchg
sub
cmp
ja
fsubr
cmp
mov
hlt
mov
inc
mov
enter
aam
fcmove
dec
pop
int
fcmovu
jecxz
and
sbb
movsl
addr16
call
jl
mov
insb
outsl
sarl
addr16
ss
inc
jl
lea
jno
addr16
lcall
mov
fistps
dec
dec
aas
cmpsb
push
and
cmc
cmpsl
mov
push
leave
jb
jno
mov
push
push
fadds
dec
dec
pop
push
ret
dec
push
push
push
mov
orl
imul
ds
je
pop
outsb
pop
jmp
jbe
jno
mov
sub
add
or
or
adc
and
lods
mov
adc
xchg
xchg
xor
pop
and
and
xchg
lods
test
sahf
lods
sbb
cmp
xor
sub
in
mov
test
mov
add
mov
cmp
imul
dec
xor
call
push
sbb
xchg
jne
repnz
ljmp
pop
je
xchg
andl
stc
or
add
xor
inc
arpl
add
push
jge
xchg
sbb
xchg
cmpsb
rcrl
mov
mov
mov
movsl
cmpsb
jmp
addr16
push
fs
ror
scas
mov
xor
jae
add
andl
inc
inc
int
dec
ljmp
dec
jb
mov
pop
pop
popa
pop
mov
jns
sahf
jo
xchg
pop
pusha
or
out
call
outsl
mul
jbe
jmp
fcoms
jle
mov
sub
xor
cmp
jl
inc
cli
aam
sbb
sbb
pop
mov
sbb
push
icebp
mov
inc
and
test
mov
insl
dec
stos
ret
mov
enter
add
mov
push
mov
xchg
inc
jge
jmp
jmp
dec
mov
fucomp
mov
mov
jmp
sahf
fs
stc
jno
fwait
mov
cli
icebp
ja
js
adcb
decb
adc
mov
in
xor
mov
int3
xchg
jmp
stos
lahf
aad
adc
fisubrs
mov
jmp
mov
mov
inc
sub
addl
lret
addr16
int
sarl
fsub
dec
rcrl
fstpl
outsl
sbb
adc
cs
xor
sub
sti
aam
jbe
add
outsl
or
stc
test
repz
push
ss
xchg
or
sbb
cmc
adc
inc
fcoms
imul
inc
or
rep
push
cmp
dec
testl
jnp
pop
jge
movl
cmpsl
fadds
xchg
push
inc
int3
out
sub
fbld
pop
lock
jecxz
pop
repnz
mov
mov
call
add
xchg
cld
incb
data16
mov
std
sub
mov
mov
push
pop
xchg
sarl
lret
pop
movsb
and
lahf
stos
sbb
imull
adc
cmc
xor
fidivs
cmp
dec
mov
je
je
jecxz
jmp
fimull
add
in
popf
test
jcxz
aad
ljmp
adc
repz
loopne
das
data16
add
es
sbb
or
xlat
inc
add
clc
or
jg
test
push
mov
xchg
ss
insl
nop
into
xchg
cmp
cs
inc
sbbl
pop
daa
mov
xchg
sub
data16
sahf
sarl
mov
dec
push
xchg
mov
add
mov
mov
icebp
lcall
fisubs
push
and
sti
mov
jmp
imull
jecxz
pop
jb
hlt
stc
cli
call
cmpl
add
addl
mov
nop
nop
adc
jne
jbe
jo
rcrl
popf
mov
cmp
cmpsl
inc
stos
lods
xor
mov
sub
clc
test
cmp
orl
inc
into
inc
dec
mov
mov
popa
pop
lea
movsb
out
push
pop
jecxz
arpl
insb
jne
popa
data16
gs
and
stos
pusha
repnz
and
or
xorl
add
xchg
dec
cld
incl
xchg
pop
adc
add
push
sbb
sbb
dec
fcmovu
dec
xchg
cmp
lods
and
daa
sub
lcall
xor
mov
mov
ret
les
mov
rcr
lock
fcom
ret
fsub
loop
xlat
inc
mov
in
sbb
pop
and
fcmovnu
or
call
add
insb
ja
idiv
cld
ljmp
imul
addb
jp
loope
insb
inc
add
enter
adc
mov
lods
adc
fildll
xor
mov
mov
mov
pop
lods
ds
add
ss
or
dec
rclb
dec
out
mov
pop
pop
movntq
dec
adc
push
fcompl
arpl
test
out
pop
imul
je
jp
mov
inc
or
mov
ret
or
add
adc
enter
or
or
adc
add
jecxz
adc
and
daa
push
cmpsb
xor
daa
sub
les
xorl
mov
cmp
mov
hlt
jl
cmp
mov
aam
xchg
fsubr
int3
xlat
pop
enter
fstl
fimuls
lcall
lods
jecxz
out
pusha
cs
sub
mov
sti
andb
clc
push
mov
mov
aam
adc
incb
adc
popf
shlb
jmp
pop
gs
mov
mov
aas
mov
pop
mov
mov
mov
add
inc
push
mov
daa
pop
rclb
cmp
push
sub
xor
fcoms
and
cwtl
jo
fstpl
pop
mov
icebp
bound
js
push
cmp
je
add
shrl
add
stos
xlat
adc
jl
adc
xchg
adc
stos
or
cmpsl
daa
pop
push
aaa
hlt
adc
sub
pushf
mov
sub
push
sub
cs
xor
inc
inc
xor
inc
xchg
stos
push
dec
fstpt
sar
inc
sbb
jp
and
cmc
push
testl
pop
lock
xor
jae
js
or
jp
stos
lods
xchg
roll
mov
sbb
mov
xlat
mov
lahf
lret
ljmp
dec
imul
mov
pop
mov
jo
push
pop
int
aas
jbe
int
in
dec
push
dec
or
push
push
push
push
addl
insl
xchg
pop
fstpt
fbstp
aad
jne
subl
js
daa
sub
xchg
sub
inc
or
pop
jnp
mov
mov
subb
aam
arpl
sbb
and
push
xchg
pop
sub
push
test
test
cltd
xor
cmp
cmp
loop
sub
imul
cmc
test
or
pop
push
fcoms
rorl
in
jmp
icebp
pop
sub
jo
ja
jo
jo
stc
icebp
jbe
orl
xchg
or
ds
xchg
adc
xchg
sub
sub
fucomip
lods
mov
sbb
loope
mov
adc
je
sarl
ds
dec
pop
movb
mov
ds
inc
pop
hlt
gs
imul
pop
aad
call
ret
pushf
stos
in
imul
arpl
mov
out
mov
lods
add
cmp
clc
mov
or
xchg
pop
stc
xchg
scas
adc
test
nop
pop
negb
scas
push
pop
cmp
test
fisubrs
sub
test
js
out
cs
ds
pushl
repnz
rclb
pusha
rorl
mov
and
sub
mov
out
pop
pavgw
fs
cli
out
ja
imul
sbb
cmpsl
pop
fistpll
pop
sub
sti
xor
cld
sub
jle
std
xchg
adc
xchg
rcrl
sbbb
pop
adc
jg
xor
in
and
xor
mov
fistpll
cmp
xor
sub
dec
inc
mov
filds
add
pop
pop
xchg
ljmp
popf
jns
gs
stc
push
ret
je
test
jo
jbe
jl
jbe
sarb
jmp
sbb
add
mov
mov
adc
cmp
sbb
gs
pop
fsubrs
cmp
mov
fistps
or
pop
daa
sub
cmp
sub
inc
test
leave
add
outsb
add
into
rcl
arpl
into
rcl
dec
loop
rcrl
fsub
pop
call
push
stc
daa
lock
jmp
icebp
mov
push
data16
ja
cmp
xchg
cmp
add
cwtl
ds
nop
adc
leave
out
mov
mov
mov
mov
xchg
inc
or
lds
in
push
and
add
arpl
mov
adc
imul
testl
loop
stos
inc
inc
jb
insl
es
lds
inc
jp
inc
ja
push
aam
push
fsubs
in
mov
pop
lcall
jbe
scas
mov
out
mov
in
jg
shl
mov
mov
sahf
lea
adc
fwait
or
cmp
mov
sbb
adc
es
sub
in
iret
rcl
rcl
cmc
mov
out
loope
call
ret
les
xor
ret
testl
mov
fcmovnu
sti
dec
sbb
pushf
fisttps
icebp
sbb
dec
ljmp
icebp
repnz
jle
jae
in
cli
jo
repnz
jae
aad
or
jg
test
imul
jbe
les
fisubs
sahf
mov
daa
gs
pop
ja
mov
and
cmpl
inc
cmp
int
inc
sarb
and
jge
pusha
dec
push
push
push
icebp
and
push
push
int
xchg
stos
fcomps
jno
fs
aad
pushw
jno
es
aad
adc
out
out
stos
mov
imulb
js
cmc
add
popf
test
pop
xor
inc
push
shll
adc
sbb
and
sbb
mov
es
mov
jp
testb
int3
fwait
cmp
jbe
mov
lds
fadds
ds
dec
int
push
fcompl
fistl
and
fsubs
call
lret
sbb
lock
and
mov
cmc
mov
add
adc
inc
mov
add
mov
ret
lcall
xchg
movsb
loope
frstor
cmpsl
stos
lods
mov
cmc
sub
cmp
lock
daa
cmp
xor
mov
cmp
mov
dec
inc
into
mov
mov
pop
inc
mov
pop
jge
addl
fwait
gs
jecxz
mulb
test
pop
jne
out
aad
sbb
mov
add
jg
daa
mov
cmp
cmp
or
push
sub
mov
movups
and
inc
mov
leave
loopne
popa
mov
xor
sub
cmp
les
das
jmp
lods
cmp
or
lret
xchg
icebp
cmc
cmp
stos
mov
xchg
jns
sar
xlat
push
fsub
loop
jl
xor
pop
and
inc
fs
jmp
in
lock
aaa
adcl
jmp
mov
je
stc
scas
pop
xor
faddl
mov
pusha
mov
mov
cmp
mov
sub
popf
push
push
push
outsb
add
mov
mov
inc
xor
inc
xor
inc
xchg
jp
aam
cmovnp
push
or
sbb
push
lcall
or
cltd
push
fistpl
fldl
fs
xor
es
lret
and
rol
das
jbe
test
cmp
test
std
jg
add
dec
pop
or
sbb
add
lea
xchg
push
adc
sub
mov
movsl
mov
mov
ss
mov
int3
add
out
sarb
out
cmp
ret
lds
inc
pop
enter
fcmovu
jecxz
pushf
loope
jl
maskmovq
testl
movsl
ljmp
sub
idiv
std
ljmp
test
cmp
jge
ja
cli
add
in
push
xchg
xchg
cltd
lcall
mov
cmp
mov
stos
push
jo
scas
mov
push
pop
pop
pop
scas
int
icebp
fs
jae
xor
outsl
mov
fcoms
dec
into
adc
or
mov
add
in
pop
aad
jmp
fildll
outsl
hlt
insl
outsb
jae
loope
outsl
jo
pop
movsb
aaa
sbbl
incl
add
adc
int
mov
xchg
and
xchg
ds
int
cmp
bound
popa
sbb
push
shll
sub
in
push
xor
cmc
inc
mov
test
add
lds
iret
mov
into
inc
xchg
pop
leave
push
pop
stc
jne
fsub
rcrl
fstp
jecxz
jecxz
fnstsw
in
pop
push
repnz
jo
icebp
cmc
notb
stos
xchg
add
push
jle
cmp
xchg
jo
or
and
fdivp
pushf
xchg
mov
mov
push
arpl
lods
mov
scas
repnz
sub
movsb
xor
mov
imul
test
scas
mov
ficoms
in
xchg
push
jle
xchg
mov
push
rcr
clc
pop
pop
pusha
cld
adc
jle
inc
outsb
jae
out
or
sub
imul
cli
push
mov
cwtl
mov
or
push
push
jle
cmp
sbb
inc
cs
push
and
xchg
pushf
lret
and
xlat
inc
cmp
mov
dec
mov
repz
add
fmulp
cli
int3
xchg
pop
cmp
int
in
test
mov
push
fadd
push
xlat
adc
jnp
movsb
push
adc
scas
or
and
jmp
mov
sub
xor
sti
js
out
cmp
sbb
jl
sbbb
lret
mov
push
dec
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
iret
push
mov
fwait
sbb
test
mov
icebp
mov
daa
std
mov
ret
repnz
inc
inc
dec
push
xor
fmull
out
inc
dec
inc
fildll
fs
push
cs
cltd
pop
leave
push
sbb
pop
pop
pop
in
pop
in
pop
in
imul
ljmp
imul
aad
jecxz
cmp
jae
test
ljmp
inc
pop
in
mov
test
lea
xchg
push
adc
xor
xchg
pop
es
aaa
sub
sbb
icebp
cmp
mov
stc
mov
cmp
leave
dec
add
mov
dec
fxch
data16
fbstp
sarl
loop
cmp
fisubs
sahf
sti
out
insb
imul
je
std
shr
inc
cs
jge
mov
xchg
pop
roll
daa
leave
mov
das
rcll
fdivl
fstps
adc
movzwl
fstpl
mov
jmp
and
and
lahf
mov
stos
stc
cmpsl
lret
test
subl
push
mov
xchg
mov
dec
push
push
push
pop
insb
push
push
mov
imul
imul
inc
mov
xor
lods
outsl
insl
mov
mov
jb
jbe
jno
add
xchg
mov
inc
adc
or
aaa
rcl
mov
xchg
adc
xchg
pop
and
popa
cs
es
lock
pop
das
leave
mov
sub
ret
ret
leave
shll
outsb
ret
rcrb
fldcw
fdivl
dec
in
test
aaa
push
cltd
lcall
loopne
and
pop
cmpsb
lods
call
in
jl
jne
sti
push
xor
push
cli
push
push
roll
les
xchg
sub
jl
sbb
cwtl
pop
mov
xchg
xor
mov
lahf
or
gs
stos
imul
mov
inc
add
cmp
test
aam
rcr
enter
mov
push
cmp
rclb
mov
jecxz
arpl
lods
imul
in
scas
insl
lock
mov
jb
out
jmp
push
or
jae
cmpsb
inc
or
dec
bsf
push
pop
xor
popa
and
cmp
sub
imul
xchg
push
jno
and
fwait
sub
xchg
sub
xor
xor
cmp
cmp
aas
ret
inc
or
inc
dec
adc
dec
fistl
pop
jecxz
sub
pop
in
out
in
out
hlt
add
add
push
call
out
add
and
orl
mov
and
xchg
or
fwait
adc
xchg
pminub
adc
lahf
sbb
stos
and
mov
out
mov
in
jnp
mov
aaa
scas
jno
mov
inc
mov
push
mov
or
jl
imul
dec
dec
pop
popa
iret
xchg
push
mov
pop
xchg
or
divl
addr16
jmp
aaa
xorl
jae
xchg
cs
mov
je
rorb
pop
or
test
push
or
or
sub
sbb
xor
and
add
and
sub
cmp
das
mov
movsl
daa
xor
shll
xor
mov
dec
mov
dec
dec
push
mov
aam
dec
push
in
fmuls
fidivs
pop
fldcw
push
aam
xor
push
call
out
call
lock
repz
out
das
div
sbb
mov
inc
add
xchg
fwait
pushf
in
popf
add
pop
and
iret
sbb
scas
sbb
lods
out
es
out
test
leave
mov
inc
xor
jl
mov
dec
mov
inc
lret
ret
push
pushf
aad
loopne
in
pop
andb
je
mov
addr16
jne
stos
je
cli
outsl
jo
ja
insb
repnz
jae
negb
xor
mov
push
cltd
add
pop
psadbw
aad
adc
push
mov
xor
sub
xchg
sub
test
pop
inc
sbb
mov
push
cmc
push
xor
push
jnp
mov
cld
ret
mov
add
adc
fadds
fistl
ljmp
sbb
clc
aam
cmp
out
lock
das
stc
gs
lock
jnp
std
sahf
mov
jbe
and
mov
mov
adc
fsts
xchg
xchg
push
loop
test
cltd
sub
popf
cmpsb
and
and
repnz
outsb
in
pop
mov
mov
test
inc
ds
and
xchg
ds
dec
mov
shl
xor
bound
dec
sarb
popf
sbb
sub
jno
sahf
push
cmp
add
cmp
std
lds
pop
call
inc
stos
jno
or
mov
adc
lods
sbb
and
sub
mov
add
push
arpl
xor
lcall
mov
into
clc
leave
aaa
mov
jno
lret
inc
lds
xchg
enter
adc
cmc
and
ficomps
in
sahf
call
pop
out
dec
std
sub
loope
or
repnz
rorl
inc
imul
dec
and
sbb
in
rcrl
bound
pop
mov
insb
xor
push
insl
cs
push
fdivp
mov
mov
sub
ds
rcpps
or
jl
enter
subb
mov
mov
cltd
push
repnz
mov
les
pop
popa
mov
jae
push
outsb
test
jmp
jne
add
jnp
in
mov
add
or
incl
xor
mov
add
pop
and
adc
in
sbb
scas
and
popf
jge
int3
ljmp
ret
mov
jnp
mov
fildl
out
cli
pusha
imul
aad
fcmove
cmpsb
xchg
fmull
pop
loopne
imul
loop,pt
jmp
inc
xor
loope
inc
cmp
data16
mov
cmpsl
mov
push
mov
xchg
xchg
mov
push
in
mov
mov
repz
jg
cwtl
fidivrs
lahf
mov
fisubl
pop
test
and
cmpsb
and
sub
sub
jp
inc
xor
jg
mov
dec
dec
dec
in
push
lret
push
cltd
push
pop
ficoml
pop
pop
pop
pop
pusha
call
mov
pop
sbb
loopne
shll
jecxz
jnp
jo
jae
mov
std
ret
test
std
inc
add
stc
adc
fwait
in
add
sbb
cmp
xchg
dec
jo
adc
sbb
sahf
sbb
jmp
imul
mov
xchg
lods
dec
arpl
jecxz
cmp
cwtl
mov
or
inc
lds
push
adc
push
leave
jbe
jecxz
cmp
divb
mov
pop
loop
ljmp
adc
mov
mov
pushf
or
pop
test
or
mov
xchg
push
test
pushf
fdiv
and
push
stos
loopne
movsl
xor
cmp
mov
addr16
inc
mov
inc
mov
dec
or
cwtl
cs
mov
fisttpll
inc
pop
loopne
pop
outsl
mov
pop
pusha
nop
pop
fsubs
jae
push
cltd
ljmp
xor
add
or
in
sahf
pop
mov
adc
xor
mov
or
pop
sbb
adc
and
lahf
push
and
sub
scas
xchg
mov
xor
arpl
cmp
add
int3
add
adc
xchg
dec
adc
into
adc
fstps
jns
fcomp
fbld
loope
mov
xchg
mov
imul
das
out
xchg
out
cli
cmp
jne
js
add
addl
movsl
insb
mov
imul
mov
push
push
nop
or
sbb
add
daa
add
sbb
loope
test
sbb
mov
inc
dec
enter
dec
dec
dec
dec
sub
xchg
notl
jne
insl
inc
mov
rclb
mov
imul
stc
pop
in
stc
shlb
std
insl
xor
je
cmp
mov
add
add
stos
bsr
and
outsb
or
pop
sbb
xchg
and
push
sbb
scas
and
scas
mov
ret
ret
sub
addr16
inc
aam
dec
lds
mov
mov
and
jb
sub
push
or
pop
loop
adc
inc
loope
sub
in
sarl
inc
int
jle
repnz
ja
sbb
test
mov
orl
xchg
pushf
rorl
mov
cltd
in
xchg
cs
loopne
pushf
sub
scas
push
push
insl
stos
sbb
stos
xor
test
xor
xor
mov
das
mov
and
inc
in
je
jecxz
dec
dec
outsl
mov
mov
cltd
pop
lock
pop
mov
fistpll
ja
adc
sbb
adc
outsl
lds
jno
pushf
sub
and
daa
inc
push
xor
or
xchg
sub
push
dec
scas
in
ret
pop
and
sub
insb
es
sub
sub
loop
or
icebp
cmp
dec
mov
pushf
ss
lahf
add
ret
jo
int3
into
pop
mov
pop
enter
sbb
or
repz
repnz
push
sub
rolb
pop
lods
mov
nop
jp
mov
inc
or
test
ret
jne
jbe
mov
or
ss
and
or
and
or
test
mov
imul
mov
cmp
push
ds
xchg
out
cwtl
pop
into
jge
push
xchg
pop
jecxz
push
sbbb
pop
lock
std
addr16
popa
pop
cli
insb
cmpsb
jno
sub
fsubrs
and
ja
repnz
xchg
call
ret
jae
mov
aas
xchg
sub
or
sub
iret
lret
cmp
addr16
and
sbb
xchg
pushf
xor
les
leave
lods
mov
cmp
mov
lds
jae
lret
cld
dec
xchg
or
fdivl
lcall
ljmp
fs
jl
jae
nop
or
mov
adc
addb
outsl
or
xchg
aam
test
adcl
xchg
xchg
inc
scas
scas
pop
mov
sbb
inc
pop
pusha
dec
dec
imul
cmpsb
pop
cmc
mov
ret
arpl
scas
out
mov
cmpb
xorb
inc
mov
dec
lcall
pop
or
mov
dec
cwtl
stc
pop
mov
jl
data16
jl
jo
js
clc
jbe
jp
fxch
mov
jecxz
lods
or
inc
ud2
adc
and
fwait
dec
js
push
push
sub
mov
movsl
in
stos
inc
testl
ja
mov
push
les
mov
lret
push
inc
bswap
popa
and
jns
rcl
pop
mov
insb
int
fsubl
jno
adc
add
and
out
sahf
cli
mulb
cmc
scas
div
jne
outsb
inc
jns
ds
cli
popa
xchg
mov
xchg
cs
lea
inc
xchg
mov
pop
or
negb
fildll
sub
or
test
mov
mov
cmp
sbb
out
inc
inc
add
in
jle
inc
dec
push
push
lret
adc
mov
push
mov
pop
ljmp
cmc
addr16
in
je
loopne
jo
scas
out
add
sub
cmp
jnp
adc
add
jbe
inc
adc
test
mov
sbb
cmp
sbb
cltd
xor
mov
movsl
jecxz
inc
inc
xor
cmpsb
ds
ss
cmpsb
mov
mov
jb
inc
outsl
add
cmpsl
rol
mov
gs
rcl
cmc
dec
xchg
cld
push
xchg
fbld
pop
xlat
pop
dec
cli
push
loopne
or
lea
pushf
xchg
stos
out
push
stc
inc
outsb
cwtl
adc
cmp
cmp
push
cwtl
les
mov
mov
lahf
mov
xchg
lcall
lods
adc
test
lods
lret
mov
jns
outsl
inc
daa
fwait
ret
out
ret
shr
jp
inc
dec
aas
inc
decb
dec
sub
push
fsubrs
inc
jae
popa
bound
and
mov
jbe
jl
jecxz
pop
adc
repz
jne
jnp
sbb
or
je
mov
incb
dec
movsb
or
adc
sbb
mov
mov
push
stc
inc
push
and
mov
sub
out
xchg
les
stos
jno
push
push
leave
mov
rol
cmpsb
aam
std
arpl
adc
rcl
fwait
jmp
fstp
jecxz
repnz
daa
stc
out
in
jno
sub
mulb
dec
outsl
notl
pop
jl
push
xchg
add
xchg
nopl
mov
mov
mov
test
mov
pop
mov
sahf
mov
mov
mov
cmpsl
cmc
gs
idivb
pop
imul
inc
lsl
inc
sbb
mov
dec
test
dec
cmp
dec
pop
xchg
dec
push
outsb
lahf
adc
pop
jnp
fucomip
jb
mov
jno
sti
shr
jns
push
jp
jmp
mov
ljmp
ss
or
add
add
inc
add
lcall
add
and
sub
stos
mov
mov
mov
mov
cmp
jl
rol
mov
and
int3
rcl
mov
pop
iret
dec
rcl
lret
hlt
movsb
fsts
fs
out
or
imul
sbb
negl
xor
push
lock
notb
mov
lods
jns
push
out
mov
adc
sbb
orb
into
cltd
pop
lahf
fstpl
mov
popf
xlat
sahf
push
fs
aad
cwtl
lods
out
mov
cwtl
scas
call
jno
mov
mov
fsubr
aaa
cmp
inc
mov
inc
ret
fists
jle
push
addb
mov
lcall
push
pop
and
or
stos
gs
and
je
add
lock
sar
or
push
sbbb
adc
add
es
adc
mov
pop
pushf
rorb
push
xor
dec
popa
sub
push
lahf
das
das
js
aad
icebp
out
mov
sarb
mov
sbb
dec
dec
mov
pop
mov
jno
mov
in
std
imul
fidivrs
or
xchg
add
out
mov
sub
or
sub
icebp
pushf
jnp
std
or
xchg
xchg
sarl
addl
std
in
pop
push
mov
ret
push
push
les
mov
push
mov
stos
mov
pop
pop
push
shll
fcom
mov
mov
mov
stc
add
mov
outsb
jbe
icebp
dec
dec
fsts
jno
push
push
ret
xchg
push
pop
or
mov
nop
ja
imul
test
fbld
sbb
hlt
aam
test
fldl
xchg
enter
aaa
cmp
cmp
dec
sbb
sbb
xchg
push
pop
sub
and
xchg
daa
loope
xchg
xor
out
xlat
nop
mov
add
int
fnstenv
push
xchg
lret
pop
lret
shl
xchg
pop
fmulp
aam
popf
cmp
lock
in
icebp
ljmp
sub
mov
pop
and
xchg
popa
add
mov
or
xchg
mov
cmp
mov
push
mov
add
ljmp
mov
mov
mov
mov
icebp
sub
dec
aas
inc
inc
or
es
popf
or
ficoms
push
jle
adc
pop
push
popa
fs
in
pop
pop
pop
imul
lock
jle
jno
jbe
fiaddl
add
mov
jmp
mov
adc
pop
sbb
mov
pop
pop
int3
stos
pop
popf
fimull
xor
stos
fistpl
sub
stos
dec
xor
cmp
cmp
inc
leave
mov
mov
call
mov
dec
mov
shll
xlat
jno
add
fsubr
test
jmp
lods
pop
ja
gs
add
push
xchg
jne
test
lret
mov
addr16
lcall
jp
pop
cmpsb
popf
mov
icebp
push
pop
pop
mov
and
ja
sbb
xor
stos
cmp
scas
mov
dec
xor
mov
pop
dec
jae
add
xchg
push
jg
jns
ss
mov
mov
je
sahf
ret
push
dec
outsl
jb
lods
aaa
sbb
lret
ja
test
lds
xorl
push
pop
jle
xchg
stc
cmp
or
pop
lods
stos
or
adc
xor
lahf
and
loopne
sahf
inc
pop
pop
lcall
mov
mov
aaa
cmp
jecxz
rcrb
push
fisubl
sub
lret
repnz
inc
paddusw
push
pop
sbb
xor
mov
sarb
sub
out
jns
add
lock
mov
mov
mov
jg
scas
add
mov
cmp
lods
mov
insl
jg
fcomps
xchg
adc
adc
and
gs
push
push
push
imul
sbb
bound
adc
addr16
rolb
or
outsl
pop
jl
fnstenv
dec
cltd
sbb
sub
mov
test
fisubs
loopne
imul
add
xor
xor
and
notb
sub
and
jecxz
test
sub
mov
push
adc
adc
dec
or
sbb
xchg
ror
inc
jge
das
push
cltd
es
fisttps
and
scas
in
cmpsl
aaa
mov
cli
inc
ss
jge
outsl
pop
roll
inc
add
loop
repnz
in
int
lcall
pop
push
fcoml
cmp
in
add
and
dec
in
out
lods
jbe
outsl
xchg
mov
cmpsb
icebp
adc
mov
test
mov
sbb
adc
cltd
bswap
sahf
adc
cmpsl
adc
pushf
pushf
imul
scas
xor
mov
scas
mov
gs
jg
xor
inc
rolb
push
xchg
pop
ja
inc
dec
push
push
int3
sbb
fmuls
pop
pop
popa
rcrl
bound
push
cli
addr16
subb
jb
out
andb
lods
xchg
pop
mov
je
jge
or
ja
xchg
xor
lret
rcll
pop
adc
rcll
xor
lds
insb
outsb
dec
test
jp
mov
in
jno
loopne
mov
cli
dec
jecxz
pop
adc
lret
int3
rorl
add
add
fmul
rolb
lldt
fisttps
inc
in
fisubl
inc
sub
imulb
call
xor
mov
icebp
bnd
jl
or
test
mov
inc
jle
shll
fwait
pushf
xchg
sbb
cmp
fstps
test
pop
dec
clc
push
data16
and
cmp
jecxz
stc
ret
dec
aas
sarb
inc
rcll
push
mov
cmp
sbbb
dec
xlat
push
outsl
push
fstpl
out
rcrb
or
sub
js
mov
jne
into
jmp
or
out
jae
test
jle
out
mov
add
adc
adc
sbb
mov
push
sbb
lahf
ret
mov
movsl
cmp
push
xor
cmp
sub
cmp
inc
xor
leave
jge
mov
std
sarl
add
testl
inc
or
in
nop
xlat
fstp
std
pop
cwtl
add
fldt
sbb
in
pop
sbb
lea
out
jo
out
mov
cld
hlt
idiv
cld
ljmp
js
mov
addl
dec
xchg
stos
lods
dec
dec
mov
xchg
in
pop
rcl
enter
adc
xchg
iret
pop
call
sahf
cmpsl
test
xor
pop
enter
mov
gs
adc
pop
inc
push
fisttps
xchg
leave
xchg
test
dec
popa
bound
int
push
bound
and
sbb
hlt
and
das
and
out
jb
stc
outsb
cmp
push
or
and
stos
and
sbb
inc
xor
les
push
popf
mov
test
xor
mov
inc
jne
mov
arpl
out
in
aas
mov
pop
in
pop
lds
fcoml
lret
es
aam
pop
sub
add
jmp
jae
dec
xor
outsb
cmpsb
sbb
mov
mov
je
xchg
mov
lods
push
mov
xchg
mov
pop
loopne
sarl
adc
outsl
aad
scas
dec
mov
sbb
mov
xchg
pop
lcall
ljmp
adc
testb
push
jb
sbb
decl
lahf
imul
imul
popf
xor
je
movsl
xor
outsb
xchg
sub
out
sub
and
inc
dec
or
add
adc
or
lret
xchg
xchg
pop
adc
fsubl
and
stos
andb
pop
sub
shll
sti
xor
lcall
test
push
or
lds
dec
cld
int
mov
dec
shr
or
fldt
fsubp
pop
test
pop
lcall
loopne
and
movsb
imulb
jo
jb
ss
pop
cld
je
xor
push
jp
xchg
mov
xchg
xchg
fwait
or
inc
adc
aas
adc
push
bound
test
mov
outsl
xor
xchg
loop
mov
xor
inc
inc
inc
inc
lahf
in
jl
or
jb
jge
sahf
pop
aam
push
jb
jmp
push
lods
pop
fdivs
fcmovb
and
pusha
fadd
xor
jb
mov
mov
cmpl
add
add
hlt
or
or
sbb
sbb
loop
mov
pusha
sub
and
sahf
lahf
inc
pop
push
mov
cmp
mov
pop
xchg
mov
xchg
xor
sti
das
cmp
enter
and
paddusb
and
repnz
push
aas
dec
fcompl
in
push
out
fisubrs
dec
push
inc
mov
mov
xchg
mov
mov
mov
lea
nop
xchg
cmp
pop
and
mov
xchg
mov
in
es
in
mov
lahf
mov
sbb
insb
fs
add
adc
push
js
orl
test
cli
int3
sbb
pop
pop
pop
test
mov
imul
in
adc
jae
stc
mov
jp
adcl
mov
popf
push
mov
xor
xchg
sbb
movups
mov
and
and
out
movsl
sub
gs
inc
iret
mov
xor
icebp
sub
push
pop
jmp
cmpsl
das
push
inc
inc
mov
in
push
cmp
lret
fld
jmp
push
sbb
push
pusha
xchg
aad
cmpsb
aad
aad
xchg
rcll
lret
pop
jge
jecxz
daa
cmp
jg
and
ljmp
mov
imul
jae
cmp
pop
xchg
jge
dec
or
les
ret
int3
shll
adc
lods
sub
sub
sub
add
xor
enter
inc
sbb
xlat
test
dec
ja
inc
daa
dec
xchg
dec
push
or
dec
das
push
cltd
push
aad
fwait
pop
jecxz
test
ja
lods
jo
arpl
frstor
arpl
mov
xor
and
lret
pop
add
popf
clc
xchg
push
push
xchg
enter
adc
icebp
sbb
popf
jle
enter
rcl
jb
outsb
ja
and
xor
xor
cmp
das
lret
pushf
lods
fadd
loope
add
add
pop
ret
adc
fxch
push
rcl
sbb
adcb
iret
push
nop
jmp
aad
or
repnz
mov
insb
mov
add
pop
mov
xor
xchg
mov
ja
push
jle
xor
xchg
into
cwtl
int3
mov
adc
mov
arpl
xor
pushw
dec
dec
aas
xor
cmp
enter
lcall
inc
and
decb
pop
cmpsl
xchg
arpl
cmc
lret
in
jno
pushf
sub
and
dec
cli
ret
add
push
add
mov
or
cwtl
sti
cmp
sbb
nop
aam
xor
out
popa
les
dec
push
repz
popa
sub
popa
xor
fstp
jecxz
xor
fucomip
mov
call
leave
repz
jmp
fcmovne
loope
lret
stc
jb
rcl
pop
nop
or
movsb
shll
jecxz
xchg
loopne
loopne
adc
sub
pop
fbstp
sub
add
inc
or
inc
cmpsl
test
adc
fisttpl
fwait
xlat
inc
push
jecxz
lea
sbb
pushf
xor
movsl
fldt
lods
inc
insl
mov
mov
or
stc
xor
cmp
pop
mov
fadds
push
add
cmp
enter
inc
pop
or
dec
orl
imul
or
or
outsb
jmp
sti
loop
xchg
jb
insb
stos
repnz
xchg
add
inc
add
add
adc
dec
sbb
aam
sbb
sbb
jl
sub
ret
sub
jbe
mov
out
test
popf
xor
mov
mov
cwtl
add
cmpsl
rorl
sbb
lret
int
mov
cmc
rcrl
push
fildll
or
add
and
subb
out
sub
mov
adc
jge
ret
addb
xchg
or
push
fsts
adc
imul
stos
fdivrp
dec
jb
lods
lods
scas
mov
or
aam
stos
jns
mov
cli
cmp
push
decl
mov
and
xchg
stos
jmp
outsb
pop
pop
popa
push
lcall
in
addr16
arpl
outsb
mov
xor
js
cmp
cmp
stc
cmp
jne
mov
in
lret
or
movsb
push
stos
adc
cmp
sbb
fistpll
mov
push
aas
jmp
in
cmpsb
lock
cmp
or
mov
leave
popa
mov
insb
xor
iret
rclb
xchg
imul
fstp
fsubp
in
ds
pop
out
in
bound
mov
cli
out
icebp
mov
adc
add
incb
cmp
xchg
and
dec
mov
cwtl
xor
xchg
mov
mov
pushf
inc
lahf
inc
mov
cmp
out
mov
mov
push
xor
ret
and
fistl
dec
dec
aas
lds
inc
or
mov
orl
push
pop
loope
ljmp
push
jo
pop
arpl
pop
out
cli
pop
push
jo
sub
lods
into
jae
xor
out
jns
mov
std
add
testl
add
push
hlt
dec
in
adc
adc
mov
movsb
adc
in
push
data16
sub
fstpt
jbe
cmp
sub
inc
int3
sarb
xchg
mov
int3
not
jge
lea
daa
jo
fisubl
insl
jb
push
loope
in
jne
jp
jmp
and
in
pop
mov
int3
adc
mov
xor
pop
jmp
xchg
jno
aad
mov
or
xorl
pop
push
jge
pop
lock
movsb
popl
dec
dec
mulb
mov
pop
ret
pop
es
sub
inc
cmp
les
push
cmp
int3
loop
xchg
push
int
out
fdivrs
arpl
in
rcrb
insl
xchg
pop
jmp
push
jae
in
sbb
jne
es
idivb
add
mov
add
popf
or
movsb
andl
mov
mov
sbb
es
sbb
add
cwtl
sub
jno
push
fs
xor
cmp
add
lret
mov
rcl
jmp
into
inc
mov
inc
xchg
repnz
popl
jmp
fidivs
loopne
xor
fcomip
sbb
imul
in
imul
insb
mov
addr16
test
adc
adc
jbe
jno
push
das
iret
cltd
fwait
jecxz
lods
sbb
inc
aam
lret
jp
out
in
stos
mov
es
push
push
test
jge
sub
aas
je
fs
jne
dec
xchg
es
into
xor
adc
push
sbb
shlb
aad
aad
je
push
movsb
sbb
insl
addr16
sbb
cld
mov
ja
stc
je
sti
cmc
jge
incl
add
stos
out
or
xchg
enter
adc
lcall
test
jl
pushf
sub
sub
mov
xor
jmp
aaa
sarl
inc
mov
push
sarb
mov
std
mov
rol
enter
inc
xchg
decl
jmp
ficoms
or
insl
add
in
sahf
out
in
cli
push
imul
push
negl
lods
imulb
imul
or
mov
jg
xor
pop
outsb
xchg
iret
pop
shll
fwait
popf
and
enter
mov
mov
mov
mov
mov
lret
push
mov
lds
push
and
jbe
inc
inc
dec
dec
dec
cmp
pop
add
ficoms
xchg
pop
pop
in
push
xlat
and
arpl
sahf
push
ljmp
imul
lret
xlat
push
lds
add
sub
cmp
repz
xchg
adc
jl
inc
pushf
mov
push
jno
fidivl
xor
scas
repnz
stos
stc
mov
jmp
inc
inc
xchg
mov
mov
int
lret
sar
rcrb
fistpl
call
push
xchg
rcrl
jb
in
loop
fstl
call
add
lock
push
imul
jbe
mov
jge
cmp
sti
aad
inc
and
mov
cmp
pop
stos
addl
pop
inc
pop
loope
dec
gs
ljmp
movsl
sub
test
mov
sbb
fsubrs
cmc
mov
inc
mov
repz
in
jae
js
leave
dec
jb
or
leave
xchg
dec
mov
mov
push
mov
jb
lods
jno
in
addr16
sbb
and
jno
in
push
jb
lea
sub
add
pop
cmp
sbb
adc
mov
inc
cmp
dec
xor
and
xchg
push
sbb
enter
out
xor
inc
jmp
aaa
cmp
jne
inc
pushl
adc
les
add
jno
inc
adc
icebp
xchg
cmc
enter
sar
popf
call
fs
out
jle
push
add
mov
repz
scas
push
pop
addb
mov
or
nop
mov
push
aad
ret
push
push
les
mov
mov
pop
sub
mov
ljmp
loop
addr16
outsb
mov
sub
jnp
mov
hlt
mov
out
push
leave
xchg
fnstcw
lret
bound
repnz
in
push
repz
push
repz
adc
mov
js
out
add
loope
mov
or
or
add
adc
pop
add
sbb
test
pop
sub
sbb
out
inc
jns
nop
pop
pusha
rcrl
aaa
cmp
inc
mov
xlat
sarb
lret
and
out
sti
loope
pop
fsubs
dec
std
jmp
aam
loopne
pop
lods
sub
loopne
push
in
icebp
repnz
inc
addb
dec
orl
andb
cli
xchg
add
or
cmpsl
test
push
nop
xchg
xchg
sbb
popf
pushf
mov
mov
cwtl
mov
xor
mov
mov
mov
sbb
ret
inc
dec
mov
adc
inc
lds
jmp
movb
xchg
push
out
dec
sub
lcall
sbb
data16
jnp
jo
cmp
jbe
xor
pop
loop
mov
jmp
testb
stos
arpl
sbb
push
sub
cmpl
and
in
sub
mov
xor
and
push
ret
lods
ret
shlb
lods
stc
pop
pop
adc
dec
rol
mov
call
or
jno
pop
sti
rcll
loop
and
pop
out
dec
mov
outsl
jp
pop
mov
mov
add
or
sbb
xchg
adc
sti
jae
and
xchg
mov
in
xchg
sbb
dec
test
mov
in
push
pop
fldcw
and
int
cmpb
push
aaa
inc
xchg
adc
mov
adc
into
sub
push
aam
push
rorb
loopne
dec
in
push
cmpsb
fs
std
daa
sub
sbb
xchg
bnd
cld
incb
push
add
mov
loope
or
cltd
pop
pop
add
mov
cmp
sub
sbb
mov
jae
sub
das
loope
inc
clc
inc
aaa
cmp
addl
test
cmpsb
dec
inc
pop
mov
lahf
fsub
loop
pop
cmc
fistpll
adc
push
out
loop
test
cltd
std
imul
out
out
cmpsb
mov
out
jecxz
add
mov
test
or
std
xchg
mov
pminub
ficompl
outsb
pop
cmp
mov
sahf
pop
mov
and
hlt
cmp
xor
cld
mov
nop
mov
dec
xorl
int
mov
push
test
pop
fsubr
jnp
test
bound
push
sub
push
mov
jo
and
js
xor
inc
jns
incb
in
inc
lahf
mov
cmpsb
adc
mov
adc
mov
xor
mov
sub
icebp
mov
cmp
hlt
dec
push
mov
inc
mov
int3
rorl
inc
adc
push
lret
aad
fcoml
in
dec
adc
pop
push
and
loopne
in
idivl
out
pop
and
cmp
movsb
adc
cli
push
cld
mov
cmp
test
cwtl
mov
shll
in
roll
xchg
xchg
fwait
or
xchg
adc
and
push
not
jo
das
mov
ja
scas
mov
or
cmc
je
cmp
cmp
lcall
test
inc
dec
dec
dec
in
or
rorb
pop
pop
pop
fildl
sbb
mov
xchg
rolb
movsb
enter
aam
mov
push
or
or
pop
iret
sbb
aad
cs
sbb
pop
bound
mov
sub
movsb
jno
and
sub
in
jb
mov
push
leave
stc
lds
lds
push
shll
int
enter
aam
aad
rcrb
loope
fcompl
xlat
and
or
cs
cltd
pusha
add
or
mov
in
add
mov
nop
outsb
orb
xchg
cwtl
or
xchg
les
or
dec
lock
push
cmpsb
adc
pop
dec
and
and
mov
in
je
cmp
cmp
add
cld
outsl
add
lock
mov
push
adc
xchg
jns
sbb
fwait
jae
and
mov
mov
sub
xorb
clc
std
jnp
or
rolb
mov
out
cwtl
or
mov
popf
add
btr
and
out
sub
sub
xor
sarb
enter
inc
inc
aaa
fidivs
ret
push
rol
inc
inc
ret
int3
push
ret
faddl
pop
shll
insb
sbb
jmp
jno
in
ljmp
jmp
mov
stc
pop
insb
cmp
jl
ja
push
mov
lds
xchg
xchg
mov
rcll
xchg
mov
lahf
mov
loopne
adc
sahf
iret
mov
pop
push
int3
xlat
xorl
mov
jg
sub
sub
fdivs
data16
pop
fisttpl
ret
fs
out
int3
aad
lret
and
jp
fwait
popa
sbb
jge
sub
pop
cmpsb
test
xchg
and
cld
mov
sbb
xchg
inc
push
stc
jns
movsb
cmp
jbe
mov
push
adc
inc
and
adc
xchg
popa
movsl
add
loopne
sbb
mov
aas
das
xor
pushf
mov
test
les
push
mov
aas
loop
lds
test
rol
enter
add
lods
xlat
rcl
xlat
push
mov
jecxz
enter
add
push
popa
sub
popf
push
inc
cld
idiv
lods
fwait
mov
out
add
mov
mov
sarb
and
adc
test
lahf
cwtl
popf
or
cmpsl
enter
movsl
cmpsb
sbb
cwtl
aad
fidivrs
scas
sahf
jmp
push
jno
mov
mov
mov
push
inc
dec
mov
dec
subl
sbb
xchg
cmp
lea
xchg
loope
stos
xlat
xchg
fbstp
scas
mov
sub
movsl
mov
mov
ja
jp
int3
mov
stc
test
subb
decl
dec
adc
sub
lret
int
or
pop
imul
loope
iret
mov
imul
jecxz
xorl
push
popa
xor
ret
jmp
outsl
add
cmc
push
jmp
sbb
lods
je
shrb
repz
popf
adc
inc
or
in
icebp
jo
pop
xchg
dec
pop
gs
aaa
lahf
pop
xchg
idiv
cmpsl
ljmp
push
mov
xchg
inc
mov
push
iret
and
xchg
mov
push
fs
ret
pop
sbb
lret
mov
jns
pop
pop
jbe
outsl
adc
sarl
dec
fs
addps
inc
enter
pop
leave
adcl
rolb
pop
icebp
pushf
frstor
daa
push
pusha
gs
scas
cld
shrl
imul
cld
lock
not
in
xorb
std
add
xchg
test
movb
push
les
leave
into
adc
mov
and
xor
rclb
push
and
shr
fbld
fildll
fbstp
fdivs
cmc
mov
sub
add
or
add
or
or
inc
aad
rcll
jmp
popa
clc
in
ljmp
push
in
lahf
in
je
clc
cli
out
xchg
je
clc
jge
not
jnp
jle
pop
orl
mov
iret
sbb
sub
movsb
sbb
xchg
cwtl
cmp
stos
aas
cmpsb
stc
test
mov
mov
jl
out
dec
sbb
jbe
mov
xchg
mov
xor
lret
lds
jmp
mov
aad
insb
sbb
addr16
jle
xor
stc
jmp
repz
das
out
jae
xchg
jne
xchg
jl
mov
inc
and
fcoms
jecxz
add
fsts
dec
dec
and
int3
xor
and
mov
lret
mov
cmp
mov
notl
jnp
cld
mov
or
sti
mov
dec
das
push
or
rcll
pop
fcmovbe
inc
in
std
imul
add
stc
hlt
jmp
idiv
out
fwait
mov
je
sbbl
std
jnp
push
jge
mov
mov
loope
pop
rorb
cltd
scas
loopne
mov
mov
leave
mov
pop
cmp
das
cmp
mov
das
cmp
fidivs
pop
mov
push
cmp
mov
push
dec
dec
inc
inc
xchg
dec
into
push
push
fsubl
fisubrs
test
leave
loopne
xchg
out
in
mov
imul
adc
mov
mov
sbb
cmp
cwtl
add
inc
or
icebp
das
xchg
push
iret
mov
jg
and
pop
sbb
into
xor
xor
mov
cmp
ret
mov
mov
call
incl
push
loopne
lcall
and
or
iret
pop
sub
mov
jmp
imul
cmp
mov
dec
mov
mov
js
inc
mov
or
xchg
fcoms
out
push
nop
loope
push
in
sahf
and
in
pop
xor
mov
pop
mov
mov
mov
or
dec
ljmp
add
mov
dec
dec
lcall
outsl
cwtl
bound
pop
out
data16
dec
popa
clc
pop
add
jl
outsb
mov
jns
outsl
cmc
cmp
outsb
cmp
sti
aas
stc
cli
incl
push
xor
cmp
xor
sbbb
dec
adc
pop
sbb
or
mov
push
pop
and
push
push
mov
xor
pop
movsl
inc
jnp
mov
shlb
cmp
cld
mov
repz
enter
leave
jle
xchg
pop
mov
fsubl
repz
shl
xlat
push
adc
fs
mov
mov
xchg
xchg
xchg
cltd
mov
mov
or
test
pop
xchg
lcall
daa
mov
mov
mov
loopne
mov
call
shl
cmp
jns
dec
ljmp
mov
mov
mov
xchg
orb
push
pslld
addl
int
dec
aad
pop
pop
pop
pop
push
sub
imul
mov
jmp
sbb
ljmp
sub
jae
repnz
mov
add
repnz
or
push
sti
jae
ret
xchg
sub
scas
push
pop
cmpsb
andb
xchg
lods
sbb
and
in
dec
or
cmp
jnp
aas
sub
ret
les
sub
jbe
sarb
shrd
in
rclb
inc
fsub
loop
outsl
leave
fstpt
adc
push
insb
dec
jne
cmpsw
or
cli
ja
jmp
cmpsl
jns
pop
subb
mov
add
test
loopne
sbb
daa
js
rorl
ret
mov
xor
and
pushf
sbb
std
outsb
aas
mov
lock
push
rorb
rcrb
sbb
sahf
mov
pop
loop
into
mov
add
dec
int3
dec
mov
adc
call
mov
iret
decl
jnp
and
or
test
out
cli
xor
jnp
stos
push
sar
les
or
bswap
xchg
aad
outsl
sbb
shlb
cmp
ficoms
sub
aas
popf
ret
hlt
and
push
sbbb
push
xor
ds
xor
out
ljmp
rcl
pop
jno
push
jo
cli
xlat
pop
mov
pop
fsubp
mov
imul
call
push
xchg
lock
sti
and
sbb
pop
mov
jge
add
push
and
movsl
xchg
mov
sbb
push
lds
fwait
lds
cmp
out
enter
test
pop
cmp
idivb
mov
and
xor
es
cmp
add
push
dec
aad
push
faddl
out
push
ds
mov
pop
mov
sar
fcomps
jno
addr16
sub
aam
jae
shl
jns
js,pn
add
hlt
mov
sbb
dec
jns
cmp
xchg
pop
sbb
mov
adc
push
fwait
das
push
pop
dec
push
leave
jbe
jb
sub
mov
push
mov
xor
dec
fidivs
rolb
add
shll
jbe
rcrb
jne
in
rol
cmp
adcb
fs
pop
lock
loope
in
mov
xor
je
ja,pn
sbbb
dec
sbb
jmp
add
add
xchg
cli
inc
mov
lret
jns
mov
fsts
js
inc
fldenv
jmp
or
out
cmp
inc
mov
fstl
mov
js
dec
cld
mov
sbb
inc
mov
sub
orl
loopne
jmp
pop
pop
dec
int
or
fstpl
xchg
mov
mov
jg
or
mov
xor
aaa
insl
cld
jge
add
pop
or
or
cmp
cs
xchg
push
sbb
xchg
inc
lods
movsb
mov
dec
pushf
es
and
push
inc
enter
xor
fnsave
xor
mov
rcll
loopne
mov
mov
pop
lret
shrb
fsubs
cli
bound
fbld
and
add
loop
fs
cwtl
imul
jnp
mov
clc
jmp
jne
test
lds
cmp
ret
mov
lret
mov
mov
pop
mov
push
in
pop
call
and
cmp
push
sub
xor
inc
inc
mov
int
mov
cltd
xlat
xor
sbb
cmp
mov
pop
push
ficompl
lock
fcompl
mov
lret
mov
in
sub
jno
lcall
xchg
jbe
xlat
cld
lret
add
or
int3
cs
mov
jge
or
fistl
xchg
les
sbb
pop
inc
ror
xor
cmpsb
fisubrl
lods
shlb
mov
inc
jg
mov
dec
add
into
dec
lret
notb
notl
xlat
push
mov
lahf
adc
imul
add
lock
sti
subb
mov
popf
sahf
cmpsl
ds
scas
jl
jnp
sbbl
pop
cmp
lcall
loopne
dec
sub
vpmacswd
lds
mov
and
xor
dec
clc
or
push
imul
cmpl
adc
das
push
jg
jl
loopne
pop
fisubrl
mov
insb
popa
movsl
xchg
orl
je
lock
loop
pop
mov
sbb
and
rol
mov
lock
dec
sbb
bnd
push
sbb
sbb
push
pop
and
xor
xor
xor
in
mov
mov
lret
mov
int
push
lret
iret
cmpsb
fs
add
sarl
jecxz
mov
cmp
loop
in
ds
in
out
push
xor
stc
sti
push
js
mov
std
push
jle
mov
jg
add
mov
subl
push
mov
xchg
xchg
insb
push
nop
lret
out
or
int3
xchg
cltd
add
movsb
fisubrs
loopne
lods
add
test
lods
scas
push
xchg
stos
fs
mov
lcall
js,pt
inc
sbb
inc
jp
inc
push
pushf
inc
jl
dec
xor
push
mov
xor
push
nop
pop
pop
mov
pop
xchg
pop
pop
mov
pop
xchg
pop
popa
enter
jno
lret
test
jne
cmpsb
jo
jne
into
lods
repnz
stc
loopne
add
or
loop
push
inc
or
or
inc
movups
mov
jp
push
pop
and
and
pop
daa
sub
cmp
cmp
mov
hlt
mov
push
rcl
stos
rcl
rcl
lods
rorl
aad
cs
aad
xlat
flds
xlat
push
jmp
and
in
inc
pop
jmp
in
out
inc
push
in
movsb
out
icebp
pop
push
outsl
mov
add
cmpl
pop
pop
test
into
cltd
fwait
jb
cltd
rcrb
rcrb
aam
mov
mov
or
mov
mov
or
mov
mov
push
push
and
jle
dec
and
dec
dec
and
dec
orb
jo
test
cmp
xchg
popa
arpl
gs
addr16
imul
jnp
add
xor
aam
sti
xor
call
cmp
incl
call
adc
mov
dec
adc
adc
dec
pop
sbb
sub
sub
sub
in
xor
inc
lcall
and
cli
sbb
cld
leave
mov
push
mov
fsts
fcmovnu
xor
fcoms
fstp
ss
adc
loope
jle
es
repz
mov
sub
cmc
dec
lcall
jb
ja
pusha
cmpsb
test
xchg
mov
lea
xchg
js
pushf
mov
fsubs
fisubl
fsubl
out
mov
jo
mov
cmp
je
inc
sub
dec
xchg
sub
mov
sub
push
mov
pop
or
jp
mov
in
mov
jns
mov
testb
jb
xor
fnstsw
rol
adc
loop
dec
jmp
mov
xlat
or
pop
push
push
sti
int
cmp
loop
push
nop
jmp
cs
call
cmp
das
test
cmp
mov
cmp
aam
idiv
fs
leave
inc
jbe
mov
jb
outsb
rcl
pop
nop
aad
cwtl
insb
xchg
mov
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
add
or
add
adc
or
sbb
adc
and
sbb
sub
lods
mov
cmpsl
test
scas
mov
mov
mov
mov
mov
lret
int3
rcl
enter
aam
fcmove
rcl
fcmovnu
loope
xlat
fcomp
fsubp
in
ljmp
jno
addr16
jns
outsl
jo
jbe
jl
xorb
jle
test
xchg
mov
lcall
mov
sahf
mov
and
xor
sub
cmp
xor
inc
aaa
cmp
dec
aas
inc
inc
inc
dec
dec
push
push
inc
dec
dec
dec
push
push
pop
pop
dec
push
push
push
pop
pop
popa
bound
pop
pop
arpl
fnstsw
in
jmp
icebp
repnz
in
out
repz
stc
cli
out
lock
idiv
cld
add
idiv
std
incb
.byte
sub
add
add
add
push
outsb
inc
insb
xor
cs
insb
add
pusha
or
dec
pusha
or
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
in
push
push
push
pusha
call
pop
sub
mov
sub
mov
add
lea
mov
xor
jmp
nop
jmp
ret
shrb
rorb
test
enter
jmp
xchg
add
add
add
dec
nop
jmp
call
add
jmp
jmp
loop
outsl
mov
and
cwtl
mov
cli
in
jl
pop
lods
inc
or
outsb
jge
jae
faddp
dec
xor
test
shlb
nop
lds
icebp
push
push
and
add
mov
push
sbb
cmp
ss
lret
push
daa
aaa
xchg
or
scas
cwtl
mov
jb
imul
dec
popf
lods
out
cmp
pop
adc
push
dec
nop
lahf
push
cmp
fs
mov
lock
roll
rcl
push
movsb
je
xchg
pop
sar
xor
sub
pop
mov
dec
fmul
loope
fldt
enter
mov
dec
icebp
jg
sub
inc
pop
mov
in
pushf
and
mov
les
jg
in
xor
jp
popa
mov
stc
addr16
ret
lods
arpl
mov
jbe
inc
xor
mov
ja
fdivr
adc
cltd
mov
jae
push
iret
adc
sbb
sahf
lods
shrb
jge
xor
das
fs
paddd
lock
sub
shlb
push
and
inc
xchg
or
out
fcoml
ljmp
sti
pop
sub
popf
lret
js
mov
dec
orl
fwait
mov
lock
mov
sub
ds
rcll
push
shll
xor
mulb
rorl
shll
mov
imul
pop
iret
mov
test
xchg
jmp
lods
xchg
mov
cmp
leave
in
pushf
cmp
cmp
loopne
sbb
sbb
jg
jno
push
push
outsb
mov
das
add
jne
jecxz
inc
xchg
pop
lock
push
xchg
rcll
out
or
test
xor
add
ss
lds
pop
push
std
mov
fldl
call
cltd
push
popf
lahf
lcall
inc
pop
lods
inc
cld
bound
sub
jg
sti
mov
mov
cmpsl
es
scas
inc
adc
stos
mov
pop
leave
mov
pop
sbb
jbe
jg
out
dec
mov
or
jo
mov
pop
ret
mov
mov
xlat
xor
cmp
or
adc
push
dec
in
mov
das
pop
repnz
and
jno
push
out
inc
repnz
test
shlb
sub
out
stos
xchg
test
xor
mov
out
pop
fdivrs
enter
into
repz
xchg
add
mov
pop
mov
lcall
push
push
mov
das
add
jne
jecxz
dec
dec
cmp
and
mov
xor
jae
pop
inc
sbb
or
lret
pop
sbb
and
aaa
adc
mov
lret
sbb
ficomps
dec
fwait
stos
shll
mov
mov
sbb
jno
out
xchg
push
icebp
jecxz
add
ds
hlt
pop
rol
mov
mov
adc
push
aaa
popa
adc
movl
adc
ss
sbb
in
fs
inc
scas
sbb
xchg
data16
jo
xor
out
sub
mov
xor
loopne
iret
lcall
mov
lods
popf
and
jnp
scas
mov
ret
shll
shlb
popa
push
out
sub
lea
shr
enter
mov
in
adcl
mov
or
sub
sarl
pop
sti
lret
jecxz
fwait
push
fwait
dec
add
jb
popf
cmp
push
dec
pslld
push
cmp
jecxz
nop
les
sti
lock
popa
jno
mov
insl
ret
int3
pop
and
fs
adc
jns
pop
cmpsb
mov
inc
cmpsl
mov
sahf
xlat
cmp
mov
sbb
jb
or
mov
iret
aaa
pushf
xchg
jecxz
imul
call
jmp
ret
push
cmc
lcall
daa
inc
insb
ror
dec
push
sub
push
std
push
jle
sub
pop
hlt
pop
or
loopne
cmp
and
test
jns
insb
cmp
mov
cmp
mov
div
bound
dec
cld
sub
jmp
popa
xchg
repz
add
jg
dec
mov
les
mov
jl
out
inc
cltd
or
in
pop
xchg
lds
xchg
out
push
sub
xor
clc
in
and
fsubrs
int
fcomi
jg
ljmp
or
fmull
lods
pop
push
je
inc
fbld
jecxz
inc
push
mov
clc
mov
sbb
dec
iret
cwtl
or
in
pop
xchg
les
call
sbb
jmp
push
and
inc
cmp
mov
sub
mov
lahf
sub
xor
cltd
pushf
out
inc
lret
push
push
lret
push
sbb
adc
cmpl
add
stc
jne
xchg
cmp
mov
push
pushw
pop
cmp
int3
icebp
sub
mov
mov
push
pop
imul
imul
xchg
rep
sbb
cmp
pop
scas
jmp
add
std
xchg
bound
jbe
out
inc
jl
fildll
push
sbb
ds
mov
dec
imul
xchg
push
call
dec
filds
shl
ffree
xchg
mov
into
fidivs
sar
add
inc
adc
xor
cwtl
mov
mov
dec
xor
fiaddl
cmpsl
fildll
mov
add
xlat
cmp
sbb
adc
cmp
fsubr
pushf
push
mov
fisttpl
dec
mov
jo
ja
add
mov
fldcw
xor
insb
and
mov
mov
mov
pop
inc
push
movsl
push
and
mov
jo
jmp
dec
push
mov
pop
mov
fwait
add
stos
jecxz
mov
add
jb
cmpsb
and
pop
scas
mov
adc
jge
mov
mov
orl
jnp
xchg
imull
fs
pushl
fistpll
cwtl
mulb
addr16
call
mov
xchg
loop
cmp
bound
mov
and
in
cld
or
mov
mov
das
jg
jne
jecxz
mov
push
pop
daa
mov
xchg
aaa
aaa
xlat
sahf
hlt
mov
jno
xchg
adc
negl
pop
inc
jns
lods
repnz
xlat
inc
enter
sub
or
iret
mov
sbb
je
out
orl
mov
and
movzwl
out
xor
sarb
jmp
out
and
mov
xchg
addl
xor
les
insb
movsb
xchg
and
mov
pop
enter
je
shrb
psubb
xchg
push
cltd
leave
das
daa
out
loopne
or
cmp
mov
int
and
in
xor
xchg
cmc
lock
pusha
les
enter
xor
sahf
inc
ret
xlat
fildl
dec
xor
and
daa
popf
jnp
ficoml
sti
jo
rcl
cwtl
mov
sbb
insb
out
xchg
movsb
bound
ljmp
jae
fcoms
adc
cmp
pop
xchg
dec
in
cs
dec
fidivrl
incl
sub
popa
pop
add
arpl
enter
mov
add
sbb
push
mov
stos
cmc
leave
sub
int3
in
mov
pop
test
pop
inc
mov
das
fucomi
sub
enter
xchg
and
add
movl
xor
push
repz
ret
jge
scas
enter
arpl
cs
jp
inc
cmp
ljmp
imul
data16
mov
loopne
or
pop
sub
mov
push
fisubs
cmp
mov
dec
fldcw
jecxz
add
mov
scas
pop
fidivrl
push
in
fldenv
cli
shrl
repnz
or
sub
xchg
out
sti
mov
sbb
icebp
cmp
jle
not
sbb
mov
mov
ss
outsl
or
mov
and
lret
stc
and
mov
pop
lahf
or
cmp
dec
cmpsb
mov
inc
aaa
fldt
cmp
pop
test
fbld
cld
shlb
mov
aaa
xchg
pop
jbe
sbb
emms
sti
mov
lcall
or
sub
cmp
adc
xlat
and
test
mov
data16
mov
popa
xchg
test
or
imul
scas
ljmp
adc
shrl
out
aas
push
scas
jo
adc
jns
aam
pop
adcb
mov
adc
ret
xor
push
movsb
mov
adc
es
cmpsl
mov
enter
mov
stos
mov
iret
fildll
mov
mov
into
ficomps
dec
jg
jecxz
inc
push
mov
jno
shll
xor
push
mov
je
aam
xor
inc
push
cmpsb
mov
pop
addr16
fldt
cmp
pop
test
jp
fisubrl
cmp
pop
lods
mov
int
cs
lahf
mov
adc
rcl
xor
push
mov
jae
xlat
and
test
mov
push
data16
daa
aaa
xchg
test
or
imul
lcall
or
insb
jl
fsubrl
std
dec
pop
scas
mov
ret
shll
xor
push
mov
jb
shlb
xor
push
movsb
mov
adc
es
cmpsl
mov
enter
mov
stos
mov
iret
fildll
mov
mov
into
ficomps
dec
jg
jecxz
inc
push
mov
pop
push
sub
es
movsl
mov
add
fs
mov
jl
aam
aaa
or
fldt
cmp
and
or
arpl
rcrb
cmp
sub
ret
pop
cld
mov
sbb
repz
mov
adc
fstps
jbe
shl
mov
adc
cmpsl
xor
inc
fsubs
movsl
mov
push
pushw
fsubrs
lock
pop
test
or
orb
dec
setl
cli
dec
pop
stos
pop
lcall
add
pop
scas
push
adc
clc
dec
out
xor
inc
push
mov
pop
mov
cld
ret
mov
add
add
add
ret
