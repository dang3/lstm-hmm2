js
sbb
aad
push
cs
jnp
int
sub
sbb
pusha
cmp
ljmp
dec
fnsave
fdivp
ljmp
lahf
xchg
inc
push
call
insb
add
push
pop
push
cmp
outsb
cmp
pop
push
pop
cli
add
test
stos
int
shlb
xchg
clc
vmovsd
inc
hlt
sar
ret
fisttpl
sbb
jnp
popa
je
imul
sbb
test
sbb
inc
mov
fdivrl
sub
js
mov
mov
adc
mov
sbb
push
insl
xor
ljmp
stos
call
cmp
ja
sub
inc
fsubs
xchg
cmp
xor
push
daa
or
ljmp
scas
shrl
inc
scas
push
and
mov
jg
subb
sbb
jl
mov
mov
sub
push
fs
pushf
cmpsb
push
das
dec
fisubrl
in
add
dec
xchg
fmull
shll
xor
xchg
sub
data16
lock
out
stos
dec
out
sahf
imull
cltd
sub
inc
push
daa
xchg
pop
xor
pusha
aad
xchg
inc
aas
xor
push
xor
jecxz
aaa
pusha
add
sbb
push
call
dec
dec
inc
inc
inc
shl
scas
iret
scas
pop
lahf
fidivl
or
ja
addr16
stos
js
les
cltd
rolb
call
lock
pop
stos
loop
out
xchg
mov
push
arpl
fstpt
push
pop
mov
outsl
int3
sahf
mov
cs
or
fisttpl
cmp
push
data16
addr16
cltd
inc
adc
sbb
jbe
pop
or
xchg
inc
xchg
repz
add
imul
es
mov
sahf
mov
push
jl
bound
mov
inc
mov
mov
insl
xor
or
scas
mov
jno
lea
xchg
imul
rclb
cltd
loop
test
jae
push
push
xchg
push
das
loopne
inc
cld
lret
mov
dec
js
add
mov
stos
iret
je
push
jp
fdivs
mov
cmpsl
out
jmp
mov
sub
mov
jmp
adc
out
mov
hlt
mov
repnz
cli
add
lods
adc
push
jnp
mov
mov
mov
mov
mov
xor
cmpsb
in
mov
lahf
aam
imul
cmpsl
loope
pop
pusha
das
push
lods
xchg
cmpsl
jbe
inc
xchg
outsb
call
pop
mov
cmp
aad
out
ret
push
dec
push
mov
lret
inc
aam
cmp
xchg
push
andb
mov
sahf
push
cmp
cli
jp
cmp
movsb
scas
push
push
das
pop
outsl
int
pop
lock
mov
adc
sbb
adc
jnp
std
push
xor
sub
fs
jnp
bound
push
inc
ret
pop
add
sub
inc
divb
adc
inc
sub
sub
test
jbe
iret
or
sbb
dec
cwtl
mov
mov
gs
repz
je,pt
mov
repz
xchg
lea
movsb
pop
sbb
cmpsl
adc
pushf
icebp
pop
adc
les
inc
lret
push
push
push
inc
sub
js
hlt
or
das
popf
mov
mov
add
dec
pushf
or
in
movsb
mov
adc
sbb
not
sub
outsb
cwtl
rcl
ret
outsl
sbb
and
lods
and
mov
cmp
ss
sahf
mov
and
mov
les
sti
scas
mov
cwtl
push
mov
inc
adc
aas
out
mov
pop
dec
cli
dec
iret
jle
rorb
movsl
movsb
insl
xchg
sub
stos
mov
sbb
push
in
orb
addr16
dec
das
jl
mov
repnz
push
jns
sbb
fsubr
push
jo
into
mov
inc
pop
ficoms
add
ret
and
jae
or
repnz
in
sub
call
jnp
dec
fiaddl
int
add
loopne
es
or
mov
ret
loop
lods
outsb
or
lods
lods
xchg
or
inc
pop
jns
pop
icebp
xor
movsb
mov
mov
fsub
xchg
mov
dec
adc
das
imul
sbb
stos
fidivrl
mov
ret
cmp
or
xorb
mov
movsl
out
push
adc
scas
dec
iret
test
cmp
lods
adc
ret
ficoml
mov
and
or
cs
mov
lret
pop
pop
pop
pop
mov
icebp
daa
in
shlb
repz
dec
jb
mov
insb
mov
push
jp
aad
loopne
cmp
out
add
data16
add
jae
imul
fistpl
aam
movsl
lahf
aam
jns
cmp
mov
bound
ja
jp
mov
clc
sub
lods
incl
loopne
divl
leave
add
leave
add
add
adc
lds
jbe
jg
push
cmp
ret
adcb
pop
add
mov
sbb
lds
es
imul
pmaxub
inc
xchg
push
mov
pop
cmpsl
xlat
sahf
out
push
in
jp
faddl
movsl
inc
sbb
in
rcll
xlat
mov
int
add
add
fidivl
frstor
divb
mov
push
jmp
loope
adc
xchg
jg
push
add
push
xor
jo
hlt
rolb
pop
inc
sbb
loopne
mov
mov
jp
sub
fists
out
and
dec
xchg
sbb
fs
sti
int
stos
push
xchg
rcll
cmpsl
pop
jge
sub
pop
test
push
inc
cmpsl
sbb
or
mov
das
cwtl
push
push
cmp
push
push
mov
mov
cltd
jp
hlt
jns
aad
mov
loop
insb
imul
mov
andb
xor
subb
add
cmp
lret
icebp
daa
imul
pop
inc
nopl
mov
cwtl
mov
jp
mov
sahf
popf
mov
dec
push
rorl
push
push
pop
or
pusha
pop
pop
dec
xchg
sub
lock
pop
inc
jmp
repnz
imul
fisttpl
inc
mov
lcall
stc
repz
jbe
mov
jp
mov
mov
add
adc
jns
adc
or
dec
clc
or
xor
imul
jae
sbb
xchg
jmp
sub
fwait
sub
clc
push
mov
in
jg
into
mov
pop
ljmp
cmp
jns
push
mov
iret
jae
cmc
xchg
fistpl
aaa
push
je
js
fiadds
scas
mov
sub
cs
insb
pop
les
pushf
jp
xor
aas
jne
enter
xorb
pop
fcomp
dec
sahf
mov
stc
jno
mov
das
int3
je
jo
mov
test
shrl
ja
scas
adc
fsubrs
lock
jae
shlb
jno
daa
repz
stc
in
and
out
and
and
inc
movsb
sbb
rcll
jbe
push
jnp
out
test
es
sub
test
push
data16
cli
sub
adcb
push
pop
cmc
mov
push
sbb
sbb
push
xchg
sbb
mov
mov
xchg
cmp
out
mov
sbb
add
call
mov
adc
cltd
mov
fdivl
add
pop
aaa
jo
rcll
push
lahf
jg
adc
fcmovnu
fcompp
fstl
sub
adc
xchg
les
addr16
enter
lods
arpl
lahf
xchg
test
mov
js
xchg
ljmp
inc
insb
mov
popa
push
int3
shll
add
mov
and
movsb
aad
sub
adcb
lea
xor
sbb
mov
dec
xchg
lods
dec
aaa
or
push
test
and
push
int3
inc
add
cwtl
gs
or
pop
pop
in
stos
sub
push
push
es
sbb
adc
mov
inc
and
lods
mov
jl
rcrb
test
dec
shl
insb
int
fs
sahf
lcall
mov
in
or
out
enter
and
jne
add
cs
pop
dec
aaa
fadd
loopne
lds
push
addl
push
inc
lock
test
mov
jmp
xor
push
adc
call
push
into
ss
test
mov
sub
std
or
pop
or
std
iret
dec
dec
mov
movsl
lds
push
xor
lds
adc
icebp
loope
mov
notb
ss
xchg
fwait
adc
sub
pushf
pop
or
cmp
inc
mov
xor
push
sub
test
push
push
andl
xor
xor
inc
orb
inc
aam
mov
pop
icebp
xor
cmp
cmp
rorb
xor
adc
es
sub
mov
pop
ljmp
rorb
jo
movsl
jns
mov
sub
inc
jnp
ss
in
fidivrl
mov
outsb
push
push
cmp
cmpsb
push
jmp
mov
sbb
mov
imul
stos
mov
cmp
es
lahf
xchg
popf
lods
std
out
orb
cmp
jae
push
mov
add
dec
lods
data16
push
and
and
jg
mov
pop
in
popa
sbb
add
jge
xor
jo
xchg
sti
push
xchg
inc
cmc
aam
jle
nop
icebp
aam
call
sar
push
ss
clc
or
insb
stos
mov
push
aam
cmp
push
lcall
int3
and
mov
inc
je
cmp
jle
xchg
adc
lret
ss
adc
in
push
subb
push
pop
dec
aad
cld
cmp
mov
sub
pusha
movsl
test
fcom
lahf
xor
dec
adc
fiaddl
jge
pop
dec
mov
in
lret
mov
cwtl
mov
jbe
shrb
icebp
cmp
mov
or
faddl
dec
jne
repnz
scas
inc
insb
pop
sub
jmp
cld
push
adc
dec
lds
pop
dec
push
inc
adc
fs
inc
lds
push
ret
out
add
stos
mov
cmovp
pusha
int
iret
outsl
ror
jae
dec
xchg
and
jne
das
xor
jl
or
inc
orb
inc
scas
add
scas
xor
rorb
mov
adc
shrl
and
xchg
jmp
adc
dec
push
pop
rcrl
lods
insb
pop
imul
ficomps
jl
imul
rcll
movsl
divl
cmp
sub
ret
inc
jmp
fcoml
xor
or
adc
sub
push
sub
movsb
popl
leave
jno
cli
sub
cmpsb
push
fsincos
and
dec
dec
cmpsb
jo
and
and
lock
ret
sub
or
loope
mov
jbe
testl
pop
lret
jecxz
xchg
cmp
mov
and
popa
mov
push
cmpsl
mov
jae
cltd
jae
outsl
xchg
xchg
fnsave
outsl
mov
loopne
clc
imul
push
in
popf
inc
clc
jnp
mov
loop
pop
add
and
repnz
pop
add
cmpsb
fsub
sbb
and
pop
ret
jge
push
sub
jecxz
in
fmuls
xlat
sahf
sub
mov
fwait
pop
lret
xor
ret
dec
mov
xchg
ret
aam
dec
xor
cld
fdivs
mov
cmp
outsb
xchg
push
xchg
int
push
add
mov
pop
fmuls
push
cltd
ret
xor
pop
mov
mov
mov
mov
sbb
inc
jne
xchg
rcrl
call
mov
cmp
imul
addr16
mov
sub
jbe
je
fmulp
jle
or
cmpsl
std
out
xchg
inc
push
mov
ljmp
rcl
xor
imul
es
add
mov
push
jns
out
out
or
loop
call
dec
mov
int
jmp
mov
outsl
jmp
jnp
jb
addr16
xchg
loopne
cmp
or
inc
insb
add
dec
dec
imul
cmp
imul
mov
jne
dec
sub
test
popa
cmc
mov
jl
xor
mov
call
iret
into
cmpsl
dec
and
into
mov
mov
es
push
cmp
push
scas
inc
mov
sbbb
add
fdivl
xchg
mov
mov
iret
ss
cmp
sub
shr
cmpb
inc
mov
or
mov
aam
cmp
lea
cmp
inc
iret
shlb
test
jbe
sbb
cli
sub
and
out
adc
bound
push
mov
mov
cltd
test
ret
jae
xchg
pop
xchg
mov
or
pop
int3
xchg
push
and
pop
or
test
out
out
sahf
xor
sub
inc
mov
scas
sub
mov
lret
mov
mov
push
data16
mov
add
lret
xchg
ljmp
movsb
fadds
jne
mov
push
scas
lods
out
minps
dec
das
cmpsl
mov
fistpll
push
inc
frstpm(287
cmp
mov
fists
push
push
movsb
xchg
sub
pop
add
push
repz
aad
lods
dec
lahf
cmp
sbb
imul
cmpsb
sbb
in
push
or
out
jne
in
aaa
std
inc
fninit
mov
outsl
imul
jb
mov
jl
andl
out
dec
divb
dec
out
mov
cmp
xchg
cld
fistpl
or
mov
mov
ja
xor
sbb
pop
or
outsb
xor
xor
cmp
das
jns
ficompl
clc
mov
ret
clc
and
jb
mov
sbb
sbb
fwait
push
sbb
in
sub
or
rclb
cld
mov
sbb
xor
mov
ja
or
sub
daa
cltd
movsl
jno
pop
xchg
add
xchg
nop
fsts
addr16
lea
int3
cmp
sub
jnp
nop
push
mov
test
sbb
jno
inc
push
sahf
insb
push
dec
inc
adc
xchg
mov
mov
xor
arpl
ss
sub
test
mov
pop
sbb
pop
and
aad
mov
in
mov
notb
test
stc
add
sbb
cmc
insb
sbb
test
hlt
xor
xchg
arpl
mov
pop
and
repnz
repz
fwait
pause
sarb
sub
xor
in
xor
adc
movsb
push
mov
jmp
fisubs
or
rcrl
sti
mov
add
fcoms
xchg
sti
enter
testl
mov
daa
or
popf
pushf
pop
aaa
insb
adc
push
pop
negl
loope
xchg
fisubl
push
aad
rep
and
sbb
push
mov
sbb
das
loop
divl
xchg
sub
push
push
pop
jns
cwtl
or
and
xchg
arpl
cmp
fnstsw
rol
mov
pop
mov
aad
int
jbe
in
pop
ja
mov
sahf
inc
cltd
arpl
xor
ficomps
mov
int3
cmpsb
push
std
push
and
int3
cli
cwtl
test
aas
rolb
outsl
mov
mov
fbstp
xchg
insb
mov
adc
adc
add
adc
add
xlat
stos
adc
cli
sbb
push
addl
andb
int3
fisubs
or
push
fmuls
push
nop
adc
mov
dec
mov
jp
push
xor
rcl
push
pop
test
mov
cmpsl
das
adc
push
xchg
in
xor
push
xor
mov
xlat
aas
dec
shll
sbb
aas
or
mov
inc
in
or
lret
pop
pop
dec
cltd
push
or
mov
inc
cmp
repnz
jb
outsl
insb
push
sbb
or
push
inc
inc
imul
into
lcall
jne
pop
jmp
mov
mov
sbb
arpl
or
cli
mov
test
push
into
sbb
ds
outsl
mov
frstor
mov
pop
shlb
jno
popf
adc
sti
jbe
push
cmp
cmpsb
jb
cmp
sub
or
inc
int3
adc
mov
push
pusha
xor
xchg
mov
pop
insl
xor
mov
push
push
movsb
push
ljmp
pop
jnp
mov
push
mov
sbb
xchg
je
inc
shll
ds
mov
inc
mov
jo
fistpl
out
jp
push
into
mov
jne
sub
add
cmp
cld
pop
imull
pop
pop
rcll
inc
cmpsb
cltd
icebp
es
addr16
jge
cmp
jge
fsts
fbld
bnd
mov
test
xor
ljmp
call
inc
outsb
jle
push
mov
into
jle
inc
xchg
insl
add
sub
aas
out
stos
nop
sbb
dec
mov
xor
push
nop
xor
fdivrs
in
rcrb
sbb
mov
cmp
fsubs
clc
mov
movsw
fsubr
loop
movsl
bound
addr16
cmp
stos
push
flds
or
leave
shr
cs
movsb
sbb
sbb
xchg
dec
popf
dec
dec
add
fdivrs
mov
fdivr
ja
rcrl
or
das
jae
jl
pop
int3
gs
and
movsb
mov
data16
dec
shl
dec
pop
outsl
mov
mov
cmp
and
mov
rorb
xchg
add
call
aaa
stos
or
bound
adc
shrl
mov
mov
adc
jb
nop
bound
cmp
xlat
decl
jmp
push
cltd
scas
xchg
das
out
cltd
lcall
pop
bound
dec
aas
neg
mov
aam
xchg
arpl
mov
lahf
leave
mov
jmp
and
fisubrs
int3
fsubl
cmp
mov
add
add
add
sarb
aam
cli
push
sbb
das
mov
leave
xchg
push
int3
add
xchg
xchg
sub
pop
ror
aaa
sub
push
inc
add
in
fsubrl
repz
push
and
mov
dec
push
daa
pop
mov
cwtl
jle
int3
and
jmp
or
or
adc
lret
cmc
and
xor
adc
xchg
fisttpl
jne
fildl
jmp
lea
add
fs
adc
dec
push
pop
sub
sub
jae
das
mov
mov
sbb
das
mov
cmp
or
ret
rclb
sbb
mov
cmp
mov
les
loope
out
add
loope
pop
or
cmp
sarl
xchg
mov
adc
clc
pop
outsl
lret
hlt
jg
push
dec
sub
sbb
xor
out
cmp
xchg
shll
or
mov
loope
ret
fsub
sbb
push
add
add
pop
push
orl
push
push
cmp
jmp
test
jecxz
and
adc
pop
push
push
sbb
sbb
fs
lcall
mov
jle
addr16
pop
add
divl
scas
cmp
inc
scas
xor
mov
clc
sbb
out
cmp
pop
std
sahf
add
sub
or
fisttpll
js
pop
out
icebp
or
pop
ja
xor
inc
jns
ds
popf
inc
ljmp
movsb
mov
lahf
stos
sbb
mov
or
push
push
shlb
inc
xor
mov
xchg
loopne
adc
cmp
movsb
xor
es
pop
es
push
clc
ret
xchg
lods
cmp
movsl
pop
add
xlat
add
xor
push
xchg
jp
call
imul
repnz
ret
push
pop
in
fimuls
pop
sub
jl
push
push
popf
ja
into
pop
popa
out
sub
in
pop
data16
dec
bound
loope
add
inc
xchg
adc
daa
fwait
inc
clc
std
loopne
sbb
inc
add
daa
sahf
daa
jecxz
movsl
push
mov
xlat
fdivs
mov
data16
mov
sbb
sarb
aam
xor
or
shlb
or
mov
pop
adc
stos
jno
inc
test
data16
ret
pop
mov
cld
cltd
xchg
push
sub
mov
or
je
xchg
or
repz
pop
ret
iret
icebp
out
add
cmp
inc
test
aad
out
fcmovnu
lods
outsl
cmp
push
pop
pop
out
test
stos
loope
inc
push
mov
inc
push
or
jbe
pop
sub
stos
jno
sbb
xchg
loope
out
push
dec
clc
shl
test
or
mov
adc
cmpsl
sarl
add
mov
adc
fs
pop
sbb
xor
mov
or
jne
cmp
push
add
data16
jmp
into
mov
or
and
inc
mov
push
sbb
add
mull
cli
adc
pop
jge
cmp
in
inc
push
data16
and
mov
sbb
shll
xchg
jp
dec
pusha
fiadds
adc
ljmp
lret
pop
pop
mov
mov
pop
cmp
cmp
hlt
idivb
mov
ss
cmp
mov
mov
aaa
jg
sbbb
mov
jmp
or
pop
mov
sbb
ja
inc
lcall
mov
pop
inc
cmp
lret
aaa
std
cmpsl
movsb
int
mov
mov
je
mov
fdiv
out
popa
cmp
dec
shrb
imul
cmp
jns
mov
mov
in
mov
lods
rolb
push
adc
cmp
addr16
jp
push
inc
mov
pusha
gs
call
push
stc
stc
mov
mov
fstps
or
insl
lock
loop
add
sbb
inc
ljmp
fimuls
loopne
jbe
movsl
jnp
out
shll
icebp
cmp
shlb
xchg
pop
pop
mov
divb
movsl
and
sub
int
push
jecxz
into
xor
adc
push
fcoms
outsl
dec
jge
fwait
and
nop
lcall
push
mov
testb
out
jmp
pop
or
mov
sbb
and
adc
rclb
and
shll
dec
stos
fistpl
test
or
decl
push
scas
imul
fcmovne
ds
stc
mov
shrl
imul
mov
pushf
js
bound
sbb
sbb
pop
or
shl
sbb
sub
fisttpl
mov
mov
lret
cmpsb
psubusb
xchg
call
mov
mov
and
in
mov
andl
mov
in
dec
std
inc
arpl
mov
cmp
std
repz
cmp
push
iret
mov
xchg
sub
add
adc
sbb
push
imulb
iret
movsl
dec
outsl
inc
xor
add
dec
leave
mov
sbbl
cli
and
repz
fsubrl
xor
repz
popf
mov
popa
lock
cwtl
and
insb
in
into
inc
inc
mov
js
mov
add
sbbb
add
adc
mov
clc
lea
mov
mov
cmpb
daa
sub
pop
pop
in
dec
frstor
fsubrl
mov
aad
xchg
aam
imul
cmp
jne
ds
push
cwtl
jb
nop
cmp
std
mov
mov
xor
xor
out
cld
mov
sub
mov
scas
xor
sbb
and
fwait
stos
or
xchg
or
sahf
out
xchg
pop
pop
xchg
aad
mov
or
jnp
stc
lods
shr
mov
push
xor
les
mov
xchg
aas
jle
icebp
or
cmp
sbb
aam
movsb
aam
cs
out
or
movsb
and
add
xor
xor
dec
push
pop
les
or
push
mov
js
or
inc
xchg
lea
popa
out
lock
add
push
cmc
xchg
lods
jne
mov
mov
not
pop
xchg
cmp
dec
jno
mov
jbe
lods
inc
lcall
outsl
push
cmp
xchg
jge
adc
int3
popf
fcompl
divl
push
pop
into
pushf
and
dec
arpl
mov
and
pusha
iret
push
adc
lds
fbstp
inc
xor
sbbl
cld
push
pop
mov
rorl
mov
sbb
adc
inc
mov
movsb
fstps
mov
lret
mov
scas
les
in
shlb
mov
jnp
xchg
popl
fnstenv
ffreep
mov
sti
pop
dec
xor
inc
sub
pop
icebp
in
outsl
clc
dec
lahf
dec
cli
pop
pop
add
jl
mov
add
repz
jae
std
xor
sub
lret
or
nop
cli
aas
pop
push
scas
cmc
add
xor
push
add
add
xor
mov
jnp
fcmove
and
int3
inc
mov
in
addl
dec
outsl
dec
fs
adc
pop
sarb
xchg
cwtl
dec
into
icebp
aad
and
pop
sahf
xrelease
pusha
mov
lods
cmp
xchg
and
xchg
ds
mov
dec
inc
shrl
stos
repz
cs
sbb
pop
push
push
stc
mov
ret
clc
movsl
cmp
push
mov
into
xchg
shll
into
xlat
dec
mov
adc
js
xor
data16
jb
std
add
lea
or
mov
imul
xorl
cld
xor
sbb
aaa
icebp
ljmp
sbb
imul
jmp
xchg
sbb
pop
xchg
sahf
pop
xlat
push
sbb
movsl
push
cwtl
sub
xchg
jle
xchg
out
or
sub
xor
jns
std
emms
xchg
lods
push
hlt
sbb
jnp
adc
or
lods
fdivrl
push
ja
testb
xchg
jl
mov
cmp
repz
push
xchg
jle
shr
inc
cmp
mov
je
and
outsb
aas
sbb
xor
nop
mov
mov
mov
adc
mov
sbb
int
dec
jae
add
fdivs
repnz
insl
jne
sbb
fiadds
xchg
lods
adc
sbb
add
dec
lods
out
mov
mov
addr16
lahf
jo
lock
mov
leave
ljmp
loopne
mov
fistps
bound
mov
rcr
xchg
into
push
pop
mov
aad
nop
xchg
inc
sub
dec
dec
mov
ss
pop
jno
jecxz
scas
mov
jp
cmp
pushf
xor
es
or
movsb
pop
cmp
and
dec
xor
enter
fadd
lods
or
and
or
ds
aaa
push
movsl
scas
pop
cltd
or
push
inc
clc
movsl
test
outsl
stc
mov
inc
dec
pop
rcrl
out
mov
mov
inc
loope,pt
insl
shl
mov
add
cmovae
jne
cs
push
pop
xchg
leave
pop
xchg
stc
in
jo
xor
and
add
mov
adc
mov
outsb
mov
rcll
stc
test
sub
iret
lcall
shlb
cmp
cmc
mov
leave
add
xor
out
cmp
loope
fldl
or
cltd
dec
dec
imulb
cltd
iret
pusha
out
popf
xchg
adc
cmp
rclb
jp
cmp
xor
leave
push
cli
jb
jg
nop
cmp
dec
fnsave
fildl
cmp
xchg
outsl
stos
aad
sub
into
xor
jmp
xchg
leave
das
pop
popf
into
in
mov
outsb
add
shr
mov
pop
pop
mov
or
dec
or
cmp
movl
fadds
sbbl
xor
dec
lods
in
cltd
leave
cmp
data16
subb
subb
cmp
jb
inc
fimuls
xor
stc
sub
pop
loop
xor
push
mov
out
dec
inc
ja
dec
arpl
in
aaa
icebp
cli
adc
lcall
add
add
aaa
jg
outsb
imul
add
int3
inc
test
jne
testb
and
sbb
scas
in
mov
mov
fbld
negb
lahf
cmp
js
push
xchg
sarl
loopne
dec
add
repnz
jns
adc
lds
fidivrs
add
or
loope
xor
and
push
xchg
shl
test
mov
cmpsb
lahf
arpl
jecxz
pop
test
repnz
das
sbb
jno
cmp
fstpl
movsl
pop
pop
pushf
stc
jbe
mov
sbb
dec
out
xchg
mov
andb
insb
dec
cmp
mulb
inc
pop
hlt
fildl
sbb
je
xchg
xlat
push
ljmp
xchg
in
cmp
lock
jae
jae
andb
adc
mov
jne
push
lcall
or
fdivs
lock
pusha
add
mov
mov
hlt
outsb
fsubs
inc
push
lahf
addr16
aaa
jb
das
dec
leave
test
mov
shrl
sub
cld
fcmove
sub
mov
jmp
addr16
cld
fisttpl
sbb
cmc
sub
fxch
je
cmp
sbbl
lea
sar
test
and
pop
sub
cltd
inc
jns
roll
mov
sbb
add
mov
sahf
add
es
ljmp
nop
pop
mov
pop
mov
das
sbb
sbbb
xor
cld
stos
cmpsb
jge
push
xor
pop
cmpsb
cld
and
jge
pop
dec
push
inc
scas
add
mov
loop
inc
xchg
jp
and
aam
aaa
xchg
out
adc
jno
pop
jnp
mov
ret
adc
scas
ficompl
and
mov
jmp
enter
sub
sbb
cwtl
subb
ret
or
mov
xor
mov
pop
sbb
aas
mov
cmp
dec
fisttpl
mov
mov
jb
xchg
loope
dec
sahf
test
int3
mov
dec
dec
and
add
cmp
mov
or
lcall
inc
js
push
sub
cmp
pop
test
popf
mov
out
jg
dec
ds
mov
stc
sub
add
clc
fistpl
pushf
push
aas
jg
scas
loope
mov
cs
in
stc
subl
mov
push
jne
mov
pusha
loop
in
jmp
push
sub
mov
inc
nop
mov
gs
sbb
sub
jnp
ljmp
jl
push
and
cmp
dec
dec
out
xchg
movsb
repnz
cmp
pop
fwait
dec
aam
jecxz
shll
cmc
out
mov
out
push
aaa
inc
das
rorb
shrb
pop
imul
fmull
aas
pop
pusha
pop
std
iret
jnp
mov
ds
int3
or
arpl
and
add
fwait
inc
adc
mov
jmp
test
loope
insb
outsl
sbb
or
addl
dec
dec
imul
dec
pop
popa
incb
jne
inc
lcall
call
jge
andb
push
in
jp
sbb
jl
sahf
jg
fcmovne
ret
pop
jbe
mov
mov
dec
shr
inc
mov
aad
sub
out
lods
inc
mov
subb
shlb
fs
hlt
ljmp
inc
lods
push
insl
mov
out
sub
mov
pop
jle
inc
mov
jecxz
aad
ja
in
dec
jne
push
xchg
call
push
or
mov
xchg
mov
aad
jle
nop
dec
sahf
mov
jl
inc
cs
lcall
jae
aad
inc
push
dec
or
push
into
jo
gs
jl
sub
dec
lret
mov
test
lret
dec
push
js
call
mov
xchg
jnp
jne
mov
push
pushf
pop
mov
popa
mov
cmpl
sbb
pop
scas
pop
scas
sbb
cmpsb
loopne
mov
push
test
mov
lret
jnp
adc
xor
insb
add
inc
cmp
adcb
jg
pushf
stos
jmp
jae
xchg
fiadds
repnz
adc
shlb
push
mov
dec
nop
mov
loopne
out
push
adc
in
out
out
mov
mov
fisubrs
mov
push
dec
in
dec
inc
push
xor
cltd
dec
cmpsl
fisubrs
mov
repnz
xchg
xchg
sti
cltd
inc
mov
fiadds
or
leave
jnp
jb
pop
mov
or
imul
imul
push
iret
dec
push
out
stos
push
int
dec
ds
xchg
push
add
mov
mov
enter
insl
lea
lods
mov
div
out
sub
inc
inc
pop
fbld
clc
sbb
sub
fisubl
cli
fcmovnu
push
loop
mov
xchg
ds
jb
fsubrl
push
mov
mov
xor
popa
xchg
dec
pop
pop
fnsave
xor
mov
popa
jae
or
fnstenv
lret
lods
mov
call
sbb
pop
push
or
xchg
jl
dec
mov
mov
and
xor
test
daa
inc
movsb
cmp
cmp
push
jnp
pushf
test
mov
pop
loop
bound
cmp
cmp
iret
lds
popa
cs
aam
in
inc
repz
add
push
stos
pop
inc
pop
out
repz
ret
add
add
and
add
pop
arpl
mov
scas
or
rcrl
xor
lcall
xlat
cmp
pop
loopne
add
lods
test
pop
negb
pop
ds
jnp
jge
mov
mov
push
orb
movsb
mov
jnp
cltd
pop
loopne
cmp
dec
inc
cs
pushf
outsl
mov
addr16
sub
filds
jmp
sub
xchg
lret
lret
in
lahf
mov
mov
inc
push
push
or
sub
push
jbe
out
fdivl
push
and
repz
mov
xor
test
dec
fsubs
mov
arpl
lock
sbb
enter
bound
adc
cld
push
ds
xchg
add
xchg
sti
gs
or
loop
idivl
fldl
sbb
pop
dec
or
loop
pushl
dec
xor
jo
fcomps
loopne
je
mov
and
xor
inc
push
push
mov
pop
clc
pop
lret
push
movsl
mov
and
outsb
inc
movsl
je
rcrb
pop
mov
pop
mov
jmp
mov
outsb
in
dec
dec
outsl
mov
clc
xor
and
jns
rorl
push
xchg
mov
sbb
ja
mov
dec
push
inc
jge
push
cmp
xchg
cmp
jb
jb
lods
push
mov
mov
or
das
data16
xchg
push
sbb
gs
add
add
in
adc
fidivl
movsl
cmp
mov
push
jecxz
mov
jg
xchg
add
jl
cmc
cs
je
std
jae
pop
addb
mov
and
jno
pop
mov
add
mov
orb
xchg
ja
jne
loopne
fildll
dec
mov
mov
sbb
xchg
push
sti
cmp
dec
pop
cmp
imul
cltd
lahf
js,pt
xchg
scas
test
jae
xor
and
lahf
out
mov
pop
ljmp
stc
std
lds
roll
out
push
mov
jb
or
mov
in
pusha
mov
lret
data16
ret
push
xor
add
mov
shlb
sub
lds
popf
pop
sub
popf
push
stos
shr
mov
sahf
loop
xor
inc
lods
aam
aaa
mov
shr
ficoml
stos
jmp
repnz
mov
sub
push
hlt
and
push
mov
in
inc
out
and
dec
inc
addr16
lods
mov
or
jnp
enter
pop
test
scas
cmp
in
jecxz
add
out
pop
pop
inc
push
dec
mov
in
cmp
and
hlt
aas
add
push
movsl
pop
frndint
mov
sbb
cmpsl
shrb
xchg
inc
mov
hlt
cmp
jb
cltd
xchg
mov
sbbb
mov
call
insb
inc
loope
jmp
out
sbb
cld
out
in
cmp
in
sub
sub
in
pop
pop
lods
sub
shlb
add
shlb
pop
je
add
lock
xchg
sbb
ljmp
gs
cld
std
ror
mov
mov
jge
nop
in
gs
jo
sub
cmp
sbbb
cmp
mov
adc
cwtl
inc
stos
mov
enter
test
cld
or
rorl
sahf
das
xor
jae
test
or
jno
adc
mov
jmp
scas
sbb
jl
loopne
cmp
add
or
clc
and
stc
jne
cmp
push
in
sbb
dec
pop
enter
fsts
in
jb
stc
pop
lret
ljmp
mov
shrb
ja
stos
adc
mov
add
iret
es
pop
pushf
add
adc
jae
test
lcall
outsb
sbb
mov
fidivs
mov
dec
movsb
push
ss
lret
cs
enter
inc
xorl
sahf
mov
cmp
dec
divl
inc
dec
adcb
gs
sub
dec
mov
je
pop
shr
cli
mov
jns
mov
aam
and
mov
or
movsl
lahf
imul
xlat
dec
fadd
pop
out
imul
shlb
out
lds
testl
pop
lods
stos
test
dec
xchg
pop
stos
dec
dec
add
mov
jns
call
pop
scas
dec
in
les
popa
ss
push
in
or
jl
mov
sti
xchg
inc
in
mov
fstpt
je
mov
loope
dec
loop
push
pop
into
sub
cli
xlat
push
mov
or
data16
cltd
adc
fmul
stc
sub
cmp
test
je
mov
mov
sbb
adc
neg
inc
daa
ret
pushf
inc
fstpl
pop
push
jne
push
jae
xlat
pop
push
xchg
aam
fidivl
jmp
dec
cltd
and
cmc
jmp
cmp
jge
clc
cs
into
mov
mov
out
sbb
add
faddl
pop
sahf
sahf
push
pop
lock
test
xor
out
imul
ss
xor
lds
lahf
xor
mov
jo
xor
inc
and
adc
test
and
ja
jecxz
cmpb
imul
rcl
add
and
idiv
in
mov
mov
and
cltd
push
pop
repnz
pop
mov
fnstcw
pushf
xchg
or
filds
fisubs
psraw
ljmp
or
and
enter
rcrb
mov
imul
pop
and
jae
xor
repz
push
cmp
sub
push
push
sbb
inc
push
rcrb
in
xor
push
dec
jl
aad
inc
mov
or
jo
cld
mov
mov
adc
jns
negb
and
leave
push
out
push
movsb
stos
fwait
mov
jecxz
sbb
movsl
fneni(8087
mov
sbb
lock
cmp
iret
mov
jnp
lods
pop
xor
fiaddl
das
sub
out
mov
mov
pop
cmp
aam
loopne
and
push
pop
or
popf
stos
xchg
cmpb
stos
adc
jmp
inc
mull
sub
sbb
push
outsl
popa
mov
push
movsl
shrl
pushf
sbb
dec
cmp
negl
push
jns
adc
cmc
dec
inc
repz
test
cmp
in
cltd
jb
pop
push
insb
sub
movsl
xchg
pushf
insb
sub
pop
cmp
mov
cmp
stc
sbb
mov
fstpl
mov
das
mov
xor
inc
cli
and
aad
push
lds
or
or
cli
movsl
fimull
aas
xchg
add
lret
inc
sub
std
jmp
xor
dec
jnp
pop
cmc
lods
out
nop
push
lods
sub
cmp
aas
outsl
mov
jno
stc
add
orl
pop
fnstenv
jmp
or
add
and
inc
loop
stos
mov
in
cmp
pop
aad
rcr
jg
push
call
inc
mov
loope
jle
das
ds
pop
js
fcomps
repnz
je
xor
out
out
movsl
mov
rorb
mov
aam
add
dec
stos
dec
adc
cli
movsl
call
fistps
fcmovne
ret
xchg
ds
lds
mov
cmp
and
xchg
xor
jbe
lahf
xor
add
mov
jge
addr16
dec
pop
fistpl
jecxz
stc
loopne
decb
mov
test
pop
cwtl
xchg
js
mov
clc
sbbb
xchg
shll
and
shr
add
pushf
mov
or
je
repnz
stos
out
and
jge
push
xchg
shlb
std
mov
arpl
out
test
daa
dec
jns
xchg
and
cwtl
jecxz
jbe
jbe
repnz
in
adc
jge
xor
cmp
cmpsb
mov
movsl
test
stos
in
imul
movsb
daa
sub
arpl
into
push
mov
sub
es
and
jmp
jecxz
cwtl
outsb
sub
aas
fstpt
rolb
sar
dec
jb
out
push
std
lea
push
cmp
out
jg
sti
push
mov
mov
daa
fcomi
test
cmp
call
xchg
or
sarl
inc
popf
jnp
sbb
sub
ficoml
pop
mov
out
push
ja
xchg
inc
dec
int3
sbb
hlt
std
loop
pushf
and
xchg
orb
aad
sub
or
ljmp
or
and
xchg
pop
cmp
pop
into
rcrb
lods
orb
cmp
mov
ljmp
cmc
leave
pushf
pop
test
mov
jbe
inc
pop
into
inc
loop
push
push
xchg
test
jo
push
push
rcll
cli
jae
out
bound
xor
dec
fwait
les
fwait
mov
mov
pop
push
push
push
fnstcw
cld
cwtl
push
fucomi
push
xor
xor
outsl
ss
mov
xchg
adc
mov
mov
fdivs
lods
std
lret
pop
fnsave
aam
jp
movhps
xchg
xor
push
test
jbe
sub
xchg
xchg
push
adc
ret
aad
cmp
mov
cwtl
ret
lahf
ss
ret
adc
inc
test
lds
hlt
fstl
je
repnz
inc
out
mov
add
sbb
jle
and
out
ret
mov
xchg
lahf
imul
mov
call
push
sbb
pusha
pushf
sti
inc
adc
pop
shlb
adc
imul
sbb
cmp
in
into
mov
add
cmp
lods
pop
lret
cmpsl
and
and
push
cmc
iret
mov
push
loop
dec
xchg
cmc
lods
mov
jae
inc
pop
stc
les
xchg
bnd
pop
es
repnz
dec
int
xor
mov
push
adc
aad
in
lock
in
loopne
pop
mov
mov
out
out
imul
cmpsb
lods
shll
lock
sub
div
push
sub
or
fistpl
cmpsl
jp
xchg
das
cmp
push
or
inc
add
mov
jno
push
xchg
jecxz
push
out
cmpsb
dec
xor
xchg
push
sbb
ljmp
mov
push
jbe
jl,pn
lods
inc
stc
ficomps
cwtl
imul
cli
daa
outsl
cltd
inc
dec
idivb
shl
inc
and
sahf
out
iret
out
xor
push
repz
cmpsl
sbb
les
iret
or
icebp
fldenv
lock
loope
cwtl
mov
pop
cmp
push
mov
pop
push
lcall
sbb
adc
pop
push
insb
jg
xchg
xchg
mov
int
roll
data16
lods
cltd
fistpll
inc
pop
test
iret
jbe
cmp
jmp
cmpsb
sti
lods
pusha
push
inc
xor
jmp
lods
jl
add
push
jb
or
add
adc
addr16
jne
sbb
addr16
loop
lret
pop
call
push
pushf
sarl
dec
cmpsb
outsl
sub
outsb
bound
push
jae
push
std
mov
jmp
out
dec
imul
in
fldt
cmp
iret
or
stos
inc
pop
insb
sbb
push
xchg
out
test
pop
arpl
lret
mov
mov
shr
jb
cmp
sbbl
in
fcom
daa
fwait
sahf
cmp
fildl
dec
ret
inc
mov
fmull
movsb
movsb
hlt
mov
cmp
out
cs
sbb
jne
shll
aaa
xchg
inc
adc
pusha
jno
aas
jae
mov
iret
inc
pop
jge
pop
add
in
jge
push
out
push
adcb
test
xchg
ret
std
cs
lods
ss
lods
andl
jae
pop
in
out
rcll
adc
xchg
subb
movsb
mov
pop
scas
les
xor
adc
jge
test
jnp
fstl
js
int
fcom
fsubs
mov
fdivrl
xchg
jg
pop
sub
xor
inc
notb
shll
jnp
jge
sbb
repz
sub
push
in
inc
sbb
and
jge
mov
cmp
je
lods
into
gs
inc
or
pop
cs
pusha
or
add
pop
cmpsb
mov
mov
roll
pop
xor
mov
inc
icebp
movsl
fcmovnu
xor
lods
decl
rolb
rcrl
mov
mull
push
ficoms
mov
push
icebp
or
outsl
divl
dec
out
stc
dec
shr
and
inc
cld
and
xchg
push
pop
mov
mov
arpl
mov
cmpsl
mov
lahf
mov
push
cmc
cld
sub
imul
sub
adc
cli
xchg
jp
orl
data16
inc
cmp
xor
les
adc
bound
out
gs
pop
ficoml
jbe
adc
xchg
cmp
andb
loope
pop
loop
and
lret
mov
les
mov
jb
call
cli
mov
push
jp
inc
fidivrl
fsts
test
fidivrl
jne
popf
add
mov
add
jno
rcrb
jae
hlt
dec
icebp
stos
dec
xchg
or
lahf
xchg
andb
roll
xor
cs
addr16
inc
cmpsb
cmpsb
dec
add
mov
lahf
jne
xor
outsl
mov
jmp
movb
adc
cmp
ret
adc
lock
ja
mov
xchg
ljmp
insl
and
lahf
cltd
ficomps
or
sub
dec
jecxz
fdivs
ss
lds
cli
lahf
push
jno
sbb
sub
enter
mov
in
sbb
and
push
xchg
adc
inc
add
jmp
xchg
and
mov
or
clc
loope
inc
cmp
sub
mov
push
or
adc
xchg
js
lods
pcmpeqb
cld
mov
fwait
mov
fisubs
mov
lds
pop
cs
jp
hlt
pop
jo
sbb
add
clc
inc
pop
dec
cmp
xlat
cs
cmp
outsb
sahf
call
mov
addr16
or
daa
mov
mov
in
inc
jmp
lahf
inc
fdivr
bound
add
data16
inc
iret
and
push
jle
fcomps
out
mov
cld
xchg
xor
adc
xchg
and
call
pop
push
stos
in
and
push
cli
lret
add
insb
dec
adcl
jae
test
adc
push
sahf
dec
adc
xor
dec
outsl
sbb
xor
out
fistl
mov
addb
lret
pop
ret
push
xor
jae
push
xchg
out
std
mov
imul
test
dec
mov
xor
inc
out
xchg
jae
cmp
push
jmp
add
mov
cld
or
push
jmp
lret
and
lret
lock
push
insb
add
mov
mov
pop
lret
in
cmp
cmpsb
jl
in
xor
xor
arpl
das
add
inc
lahf
shll
lock
push
xchg
mov
lret
aad
mov
iret
add
jp
jg
inc
lret
loop
mov
ds
inc
mov
lds
mov
negl
aad
scas
xchg
and
insb
mov
test
xorb
sub
jnp
int
test
cltd
jae
mov
xor
xchg
movsl
push
popa
test
pop
js
loope
ds
adc
sbb
fildl
jecxz
jp
cltd
rcl
push
and
scas
pop
cmp
and
xor
cmp
data16
lods
xchg
and
mov
pop
cld
enter
repz
inc
clc
push
mov
mov
jecxz
inc
lahf
lock
jmp
mov
aaa
mov
test
out
dec
imul
xchg
and
loop
jne
scas
jo
dec
arpl
mov
sub
dec
mov
mov
ss
rol
dec
sahf
jbe
adcb
test
xchg
sub
hlt
lahf
ss
mov
cli
iret
push
inc
pop
mov
movsb
cmp
inc
jp
rcrb
mov
jp
pop
fistpl
push
inc
mov
shl
add
out
xor
mov
in
sbb
adc
loop
movsb
jae
stos
jecxz
popa
jle
sub
aaa
ljmp
or
pop
insb
mov
lret
pop
fistpl
mov
or
sbb
and
std
add
pop
hlt
xchg
xchg
jmp
movsb
sar
or
out
push
xchg
push
inc
repz
je
aaa
and
inc
pop
repnz
mov
outsl
and
test
xor
movsb
loop
push
pop
rclb
dec
es
xor
and
cmp
lahf
lds
push
lcall
jp
or
shrl
in
dec
sub
mov
fbstp
mov
stos
xchg
je
push
xor
xchg
es
das
xchg
shrb
iret
test
and
xor
xor
mov
fs
mov
lahf
mov
push
icebp
dec
lret
mov
mov
push
fsubrl
shrl
scas
fmul
repz
push
jb
adc
dec
mov
adc
add
xchg
xor
pop
mov
jno
sub
xor
call
loop
push
fnstenv
shl
and
js
frstor
jle
rcrl
jo
stos
add
fsubs
jl
xor
inc
negb
inc
push
push
jmp
out
inc
mov
mov
push
sarb
cmp
xchg
adc
sub
test
jecxz
dec
movsb
inc
repz
lahf
xchg
fs
push
xor
and
clc
pop
or
mov
in
jmp
stos
ret
push
sub
xor
adc
ljmp
movsl
ja
testl
arpl
xchg
sbb
or
in
cmp
sarl
inc
jbe
fiaddl
scas
movsl
jle
mov
bound
in
sbb
repnz
scas
adc
lea
xor
push
push
sub
dec
enter
ljmp
and
sti
into
dec
dec
or
xor
lcall
mov
dec
push
mov
call
pushf
or
push
mov
adc
cmp
mov
mov
jp
rorl
add
out
rorb
cmp
lcall
pop
test
jecxz
fldcw
call
pusha
push
adc
dec
negl
fdivl
push
mov
test
jnp
rorl
lcall
aaa
movl
out
sti
dec
jae
adc
out
mov
jmp
and
repnz
divl
in
cmc
or
into
clc
subl
mov
fwait
mov
cli
mov
fiadds
loopne
ss
xor
inc
fisubrl
lcall
ret
insl
movl
insb
mov
push
sbb
imul
lcall
pop
dec
aaa
mov
jmp
lock
xchg
popf
sub
inc
xchg
stos
repz
clc
clc
sti
aam
push
jo
push
lea
xor
mov
lods
arpl
adc
push
xor
xchg
xchg
mov
and
movsl
xlat
movsb
jp
setbe
aam
bound
aaa
out
add
xchg
mov
mov
outsb
in
lds
movsl
sub
lret
jno
adc
stos
sub
push
pop
and
inc
nop
repnz
cmp
inc
jnp
into
inc
add
xor
push
fsubrs
rol
xor
das
cmc
scas
mov
xor
sub
cwtl
adc
sbb
mov
loop
cli
jmp
cmp
outsb
nop
movsb
xchg
pop
mov
inc
incl
adc
insl
ja
sbb
and
push
and
pop
cmpsl
fucomp
div
sar
or
pop
cmp
xor
push
xchg
stos
jnp
rolb
cwtl
mov
cmp
xchg
sub
out
shll
aaa
cmpsl
ss
ret
rcrb
mov
std
insb
and
outsb
cli
inc
sbbb
cli
mov
mov
cmp
xchg
fwait
inc
out
mov
xchg
xchg
aas
push
iret
insl
andl
cmpsl
jg
sub
pop
xor
add
pushf
outsl
lcall
cmpsl
push
adc
jb
imul
movsb
fs
fildll
movsl
sbb
notb
push
push
out
ljmp
subb
xorl
nop
pop
push
js
jl,pn
les
cwtl
cmpsl
clc
add
out
pop
push
xchg
movl
inc
xor
ljmp
mov
mov
sbb
push
iret
fisubl
pop
aam
jle
insb
push
inc
idiv
call
in
bound
aad
inc
jno
jecxz
scas
mov
js
clc
dec
stos
test
ret
cli
push
adc
mov
sub
arpl
xor
inc
out
mov
adc
or
sbb
outsl
jmp
sub
xor
dec
addr16
mov
xchg
adc
repnz
push
in
xlat
std
enter
pop
in
psrad
addr16
in
repz
sbb
jmp
testb
mov
push
stos
and
out
and
sub
mov
cmp
xor
out
mov
lahf
popa
add
sbb
cmp
shlb
xchg
fidivrl
cmp
pop
dec
add
pushf
add
jp
cmp
sub
or
insl
adc
jg
mov
mov
cs
push
fildll
xchg
ret
lahf
outsl
sbb
aad
push
fs
inc
push
xor
int
arpl
fsub
das
nop
test
outsl
sbb
cmp
lods
cmp
cmpsb
add
sbb
xchg
push
ds
xchg
mov
jno
dec
sub
sahf
ss
xchg
shl
xor
dec
push
shlb
cmp
int3
and
jmp
fnstenv
cwtl
adc
push
aas
dec
sbb
ficoms
and
mov
lods
push
in
or
mov
xor
pushf
adcl
pop
add
inc
imul
scas
mov
call
sub
lcall
mov
insl
movsl
pop
into
dec
mov
gs
aaa
rorl
mov
lods
jo
xchg
mov
xor
mov
scas
outsb
cmpsb
inc
sti
add
stos
inc
mov
dec
dec
cmpb
loop
jns
fs
repz
shlb
or
js
hlt
inc
xor
adc
aam
jl
mov
dec
push
mov
and
mov
mov
std
out
cmp
xor
arpl
mov
cld
out
push
addb
push
pop
ss
mov
pop
sub
dec
mov
fsubs
ja
sub
push
pop
or
and
dec
lock
xchg
sub
xchg
pushf
lcall
mov
lret
ficomps
in
or
add
pop
mov
xchg
sbb
mov
inc
push
sub
stos
jbe
cmp
gs
rolb
lcall
iret
pop
xchg
pop
aaa
mov
out
push
push
pop
dec
vrsqrtss
and
cmp
xchg
push
ljmp
or
xchg
movsl
pop
inc
xchg
mov
or
fcmove
dec
jnp
sbb
flds
push
insb
ja
lret
or
pop
cmpsl
xchg
xor
jae
cwtl
loopne
scas
aad
lret
pop
daa
dec
mov
and
pop
test
mov
adc
xchg
push
dec
das
cs
fstpl
xor
fucomi
stos
call
in
cmp
repnz
dec
or
aaa
std
dec
sub
sbb
notl
mov
in
insb
mov
mov
dec
push
ja
and
test
cmpsb
in
addr16
mov
loop
push
mov
fwait
push
mov
imulb
inc
ficoml
daa
mov
lret
std
outsl
decl
or
rcl
repz
fs
mov
mov
call
xor
inc
fwait
les
dec
aad
imul
clc
lahf
sub
inc
push
stc
dec
cmp
or
pop
dec
loopne
and
insb
mov
test
xchg
mulb
sbb
pop
into
aaa
pop
jge
into
outsb
push
lahf
sahf
test
pop
insb
fldcw
sbb
mov
jmp
lea
inc
sub
sub
imull
inc
xlat
push
ds
inc
jns
ret
out
outsl
mov
cmp
std
pop
das
sahf
push
dec
fsts
adc
outsb
or
pop
int3
lret
out
sbb
sahf
adc
adc
cld
push
ret
mov
mov
leave
fisubl
std
pop
push
cli
int
push
push
xor
inc
xchg
outsb
and
pop
mov
ljmp
mov
iret
jg
imul
lahf
int3
pop
cmp
test
pop
lcall
jae
dec
popa
nop
sub
xor
jo
push
fstl
sbb
sbb
out
aam
or
ljmp
movsl
mov
push
test
or
cmpsb
pop
in
dec
jmp
jl
test
movsl
imul
dec
xchg
push
fnstcw
sub
cmp
inc
sbb
mov
add
mov
scas
das
ss
pop
add
jg
xor
mov
dec
cmpl
add
hlt
fmul
push
sbb
dec
or
lea
mov
adc
cmp
addr16
cmp
clc
invlpg
inc
inc
repnz
or
xor
dec
call
mov
xchg
push
repz
xor
enter
dec
sti
sahf
sbb
inc
dec
xchg
pop
push
orb
imull
xchg
mov
lods
fdivp
movsl
xchg
adc
call
bnd
mov
popf
fwait
lock
sub
adc
in
xor
test
push
mov
mov
dec
pushl
ljmp
shll
pop
mov
adc
rorl
mov
pop
jno
cli
ja
jns
aaa
adcl
pop
out
mov
pushf
jns
sbb
int3
lcall
in
push
xor
fsubs
leave
icebp
push
ljmp
cmp
arpl
jle
adc
pusha
imul
xchg
cs
adc
xor
adc
xor
sbb
enter
in
rcrb
cmc
and
sub
fwait
into
add
rorl
popa
dec
mov
fisubs
arpl
xchg
mov
xchg
sbb
sbb
stos
jl
lods
scas
cmp
jns
mov
loopne
inc
loope
fldl
pop
jg
out
sbbl
aam
fdiv
out
lret
pop
shrl
dec
inc
ss
jg
movsl
jmp
fdivl
loop
aas
inc
paddw
pushf
xchg
lods
inc
mov
int3
adc
cmp
repz
jo
xchg
sub
inc
inc
cmpsb
imul
mov
jl
push
and
jle
and
imul
mov
leave
outsb
add
lahf
inc
test
push
xor
mov
addl
vpsadbw
aam
sub
xchg
clc
fcomps
sub
lahf
and
xor
pusha
lret
imul
insl
sub
mov
fs
inc
repz
mov
pop
inc
inc
fdivp
repz
lahf
sbb
aaa
xor
mov
adc
nop
cmp
popl
gs
sub
rorl
data16
jbe
test
dec
add
add
adc
movsl
push
rorb
stc
test
push
sbb
in
or
jbe
loopne
mov
fcoml
data16
jge
mov
adc
mov
pushf
bound
and
nop
and
lret
das
mov
cld
cmpsb
sti
push
mov
adc
stc
mov
jne
dec
mov
sub
and
mull
sbb
stos
icebp
pop
lds
loop
dec
inc
in
loopne
es
inc
scas
mov
pop
mov
lds
jecxz
notl
js
jecxz
pop
mov
mov
jbe
sub
cmpsl
cli
inc
jns
out
orb
sub
movsl
push
sarb
enter
and
dec
scas
outsl
adc
nop
cli
xchg
pop
and
in
repz
lcall
push
push
popf
repz
int3
stos
les
mov
add
xchg
push
and
pop
jo
cld
imul
and
in
jg
sub
fs
popf
mov
jno
mov
adc
xchg
sub
xchg
gs
inc
leave
xchg
mov
xor
pop
inc
shrb
xchg
hlt
adc
outsb
loop
outsl
imul
rcr
dec
push
test
pop
cmp
sub
xchg
inc
sbb
inc
shll
jp
cmp
scas
and
std
mov
xor
in
pop
add
xchg
rorl
into
sti
dec
imul
mov
xor
ret
sbb
dec
test
lcall
fldl
cmp
dec
movsl
out
rorl
sbb
lret
adc
xchg
adc
mov
scas
jo
pop
aad
in
dec
jle
jecxz
cmp
outsl
adc
push
imul
in
or
sbb
mov
mov
mov
outsl
popa
mov
push
inc
and
jae
hlt
mov
cwtl
pop
xor
and
cmp
push
out
shll
imul
adcl
in
inc
jb
or
outsb
test
dec
dec
orl
push
xchg
jmp
pop
cmp
pop
aad
mov
mov
mov
pop
xchg
dec
negb
pop
mov
mov
mov
mov
xchg
sub
cmp
jo
addr16
jge
push
xor
and
je
int
mov
gs
loope
lcall
roll
push
loop
and
cmpsl
pop
pushf
gs
xchg
stc
push
cld
pop
jne
leave
addb
int
mov
dec
adc
das
rcll
jns
cli
stos
leave
cmc
push
sbb
pop
and
adc
in
test
push
sahf
and
lahf
addr16
xchg
pop
hlt
testb
stc
push
fucomp
ljmp
imul
in
add
cmp
fadds
stos
sti
mov
or
push
pop
lds
inc
push
sbb
rclb
lret
imul
inc
adc
pop
pop
and
sarl
notb
std
sub
jns
sarb
imul
lock
cmp
lret
insb
in
inc
add
push
jne
and
push
cmp
cltd
inc
add
ret
fwait
lods
mov
jl
and
jge
cmp
lock
and
sbb
xchg
out
cwtl
cld
add
stos
js
mov
xor
mov
add
xor
and
lock
pshufw
or
daa
idiv
jle
sub
ja
add
and
mov
mov
push
repnz
pop
inc
cwtl
pop
sbb
cmpsb
stc
jne
xchg
pop
fs
mov
lret
ljmp
inc
call
cltd
fisubrl
stos
jbe
and
or
les
push
and
jecxz
lret
les
mov
repnz
aas
cmp
pushf
call
daa
push
inc
out
outsl
popf
push
aaa
push
test
arpl
adc
enter
mov
hlt
jmp
pop
int3
das
pusha
sbb
fimull
inc
mov
cli
movsl
fldcw
add
ret
or
js
mov
movsb
mov
cmc
mov
cmp
clc
das
popa
pusha
mov
inc
sub
push
in
mov
mov
mov
pushw
in
addr16
cmp
ret
rcrl
out
mov
in
sbb
and
push
mov
enter
cli
sub
repz
add
push
mov
outsl
xchg
clc
divl
loop
xor
mov
jb
movsb
ja
lret
je
dec
test
sbb
arpl
sarl
fcoms
push
jnp
mov
pushf
out
inc
adc
int3
int
ret
sbb
test
cmc
outsl
push
cmp
dec
push
mov
mov
pop
and
sbb
jb
loop
sub
daa
mov
pop
push
inc
inc
cmp
dec
loop
loop
lods
xchg
lahf
sahf
xor
lea
xchg
sbb
into
jp
and
in
fs
pop
call
push
ss
push
cld
out
mov
sbbl
sub
and
sahf
imul
ret
inc
jbe
jbe
push
loope
loope
movb
shlb
push
sbb
fcmove
sub
mov
adc
fs
cmpsl
push
insb
dec
cmp
jl
cmp
clc
into
imul
pop
ss
mov
lock
imul
or
jae
nop
ja
inc
push
loop
pop
insl
fistpl
das
je
repz
adc
in
pop
fstl
mov
mov
sti
addr16
movl
cmp
dec
pop
int3
sbb
pop
dec
sub
fstps
ret
imul
cmpsl
jge
out
ss
stos
add
and
imul
cmp
das
push
test
dec
xor
lret
xchg
push
in
adc
cltd
push
add
inc
sahf
je
popf
imul
mov
clc
andb
mov
push
loope
repz
test
mov
pusha
cmp
cmp
mov
je
in
scas
inc
clc
mov
ret
dec
mov
stos
mov
rclb
push
pop
popf
or
mov
subb
leave
cmp
mov
mov
or
stc
xchg
and
push
xlat
stc
cmp
or
pop
popf
xor
inc
mov
jbe
das
sub
fnstsw
outsl
cmpsl
mov
and
ret
add
icebp
xlat
in
inc
push
mov
lods
loope
jns
lea
vfrczps
adc
test
rcrb
jl
mov
repz
sub
nop
mov
lcall
outsb
adc
cwtl
cmp
push
fimuls
xchg
inc
pop
push
adc
mov
pushf
test
in
mov
jne
push
jae
outsl
addr16
loopne
jb
movsl
out
aad
mov
stc
inc
in
mov
pop
mov
jno
into
inc
loop
shll
cwtl
adc
jmp
pop
lock
movsl
js
push
loop
pop
lods
cmp
rorb
in
sub
inc
enter
mov
push
mov
sub
mov
push
jns
sbb
sbb
inc
frstor
ljmp
push
pop
mov
lcall
or
cmp
or
or
mov
sbb
xchg
pushf
mov
sahf
jge
fmuls
fwait
lods
mov
sbb
int3
mov
jns
clc
std
enter
insl
mov
stos
js
pop
push
push
jb
or
sub
inc
mov
or
ss
jecxz
fbld
xchg
aaa
pop
fucomi
sub
xor
cmpsl
leave
fstpt
insb
mov
imul
sbb
scas
jp
adc
xor
outsb
jl
sub
cwtl
jg
lock
lods
repz
mov
pop
sub
fadds
push
jge
pop
hlt
add
test
and
xlat
pop
cmc
dec
mov
popa
inc
cmp
stos
decl
shl
test
mov
cwtl
int
pushf
mov
dec
daa
pop
fs
loop
gs
cltd
imul
xchg
aaa
repnz
xchg
loop
push
ret
test
jmp
xor
add
out
inc
ljmp
or
dec
aad
rcll
cmp
fiaddl
pusha
test
dec
pushf
pop
stos
js
adc
mov
cltd
jge
adc
int3
lahf
jne
lods
xchg
outsl
scas
cmp
jbe
int
mov
pop
mov
rcl
pop
je
or
add
dec
sub
jle
push
int3
ss
mov
int
nop
xchg
outsl
mov
cmp
pop
call
push
mov
sarb
leave
xchg
mov
int
dec
add
xchg
adc
test
xlat
daa
andb
out
cld
inc
enter
mov
fisttpl
fstps
sub
jo
jae
mov
adc
sub
fldt
fstpt
in
push
xchg
xchg
stos
mov
jbe
enter
jmp
pop
xchg
jno
ss
jno
sub
mov
lds
in
and
xor
add
fiadds
ret
nop
jno
and
enter
push
mov
sub
sbb
mov
mov
out
test
ret
push
cmp
inc
test
cs
gs
adc
lods
iret
mov
pop
xor
bound
rcrb
loop
pop
mov
pop
mov
xchg
mov
inc
push
out
cmp
mov
sbb
mov
out
jecxz
fisubrl
subl
dec
int3
jno
int3
lret
jo
cmp
cwtl
inc
push
or
fistps
sbbl
cltd
mov
jmp
mov
xor
or
adcl
das
es
mov
insb
adc
mov
mov
push
inc
xor
lods
fs
mov
xchg
aam
test
push
add
xchg
jne
mov
mov
out
add
mov
stc
sub
out
or
movsl
stos
mov
cwtl
lock
test
pop
mov
fsubp
out
repz
and
in
cpuid
pop
popl
mov
dec
cmp
clc
jae
cmp
pop
pop
cmp
daa
jae
in
rorb
or
xchg
inc
mov
mov
pusha
cwtl
loop
int
clc
ret
cmp
repz
inc
pop
out
subl
or
mov
iret
call
push
insl
sarl
dec
add
inc
cmpb
and
ret
mov
or
aad
mov
aam
aad
clc
mov
cmp
movsl
daa
dec
sahf
mov
hlt
mov
jmp
mov
nop
and
stos
pop
jmp
or
push
inc
dec
testb
es
jecxz
cmp
pop
mov
hlt
mov
inc
pop
adc
shll
push
stos
and
cmp
xchg
lods
xchg
shrl
repz
shlb
jbe
or
pop
push
loopne
adc
jp
fstps
push
loop
popa
adc
test
mov
jbe
sbb
push
addb
test
fistps
sub
mov
fst
or
imul
and
in
sbb
mov
pushf
xor
stos
mov
mov
shr
xchg
sbb
xchg
inc
xchg
ficompl
cmp
mov
clc
mul
inc
ja
out
addb
pusha
lea
scas
push
ds
clc
addl
mov
xor
fisubrl
data16
jmp
call
fwait
jnp
mov
xlat
ret
into
popa
scas
inc
cs
jmp
lods
mov
fiaddl
cmp
inc
fisttpl
mov
jecxz
je
jge
les
mov
ret
sub
cltd
push
movsl
fstps
out
fstpt
inc
fisttpl
rorb
addr16
xchg
push
daa
mov
sbb
dec
push
loope
pop
scas
or
enter
scas
inc
enter
add
lret
inc
jmp
pop
xchg
lret
mov
fimuls
fwait
mov
into
jb
cmpsl
scas
adc
jmp
aas
xor
insb
lcall
in
dec
ljmp
dec
jp
int3
inc
add
insb
push
sbb
cmpsl
dec
call
xchg
dec
addr16
sahf
fwait
add
mov
aas
lahf
xor
mov
loope
lcall
sbb
mov
jae
dec
insb
jle
int3
cmp
les
jns
call
call
dec
inc
adc
leave
mov
or
test
pusha
add
fsubrs
into
push
enter
mov
scas
in
sbb
adc
lcall
lea
rcrl
cmp
je
jno
sbb
push
pop
pop
js
adcb
sti
dec
pop
mov
sarb
pop
ret
lds
repnz
sahf
inc
jecxz
das
hlt
mulb
iret
imul
sbb
or
mov
mov
imul
int3
data16
lea
adc
out
cld
add
fcmove
popf
mov
jge
fsubr
sbb
or
cmp
int3
cmp
test
dec
add
jae
sub
push
call
add
inc
sub
leave
or
loopne
push
mov
mov
shlb
mov
rorl
jle
push
add
pop
test
lods
cmp
nop
jbe
leave
inc
add
push
push
or
pop
cwtl
fidivl
pop
jnp
mov
repnz
stos
dec
bound
pusha
jbe
fldcw
pop
mov
sbb
movsb
pop
inc
xchg
aas
xor
test
scas
testl
out
enter
mov
sub
xchg
lea
xor
mov
push
fdivs
mov
les
push
insl
pop
out
push
dec
loope
sbb
gs
xchg
add
ss
adc
or
dec
cli
repz
push
or
push
add
pop
into
in
in
jp
daa
out
sub
ret
pop
stc
bound
or
int3
mov
xchg
dec
inc
xchg
aam
filds
cmp
inc
pop
xor
aad
stos
pop
lods
adc
ja,pt
les
jb
shll
test
and
push
mov
pop
call
fisubs
enter
mov
push
push
xchg
push
xchg
stos
in
fnstcw
es
mov
fstp
dec
test
add
ror
fcompl
mov
lds
pop
xor
cmp
test
and
lahf
pop
xorb
scas
mov
xlat
push
jne
xlat
pop
dec
lods
test
xor
dec
sbb
jns
xchg
mov
pop
or
sbb
sbb
mov
hlt
xor
es
push
scas
lcall
dec
aas
test
outsb
mov
pop
mov
jo
mov
rcl
sbb
push
js
or
mov
dec
stc
push
jmp
bound
ja
js
pop
cltd
adc
aaa
scas
nop
pop
out
ljmp
js
jbe
fiadds
fstps
nop
js
xorb
or
mov
iret
into
pinsrw
push
jns
shrb
lahf
mov
jns
popa
sarb
enter
ficoms
add
add
repnz
loopne
push
rclb
inc
testb
push
adc
jb
mov
or
out
jae
fbstp
sbb
sahf
pusha
fwait
mov
sub
mov
out
inc
sub
push
int3
adc
lahf
mov
movsb
pop
aam
lods
movsb
shlb
xchg
xorl
mov
cmpsl
lea
mov
pop
aas
or
fwait
lret
mov
pop
inc
mov
xchg
das
dec
inc
sub
sbb
cmpsl
cmp
mov
out
xchg
jb
in
mov
leave
int
mov
xor
jae
aam
repz
out
xchg
and
mov
out
or
int
cmp
cmp
fldl
xor
aaa
fcmove
leave
in
sbb
dec
cwtl
call
int3
push
xchg
es
mov
shll
ja
shlb
push
sbb
cld
mov
push
xchg
insb
sub
lret
sub
jbe
cmp
divl
icebp
inc
enter
andb
or
jne,pt
jle
xchg
and
data16
adc
loope
rorl
pop
jmp
mov
imul
sub
cmpsb
repz
inc
push
push
mov
mov
hlt
cmp
mov
pop
dec
adcl
sub
cmp
mov
xchg
notb
popf
push
and
in
ret
jmp
push
pop
cmp
or
bound
adc
std
fs
push
dec
test
pop
cmp
scas
dec
adc
adcl
jns
mov
aaa
jp
int
inc
push
pop
shl
into
lret
xchg
pop
sub
add
cs
aad
arpl
or
inc
hlt
sahf
push
xlat
arpl
pop
adc
cmc
scas
js
test
cwtl
hlt
xor
iret
ficoms
cld
add
mov
ficompl
icebp
or
add
sub
or
jne
nop
jg
iret
push
orl
xchg
lds
pop
movl
in
mov
inc
inc
xchg
mov
xchg
xchg
pop
mov
pop
test
lahf
data16
jle
daa
push
jo
sbb
dec
pop
sbb
dec
sti
or
jnp
imul
and
mov
xor
data16
loop
or
adc
sarb
scas
mov
out
xchg
jno
jecxz
aad
xchg
clc
mov
adc
sti
stos
dec
scas
ror
shl
cltd
cmp
and
jb
rcrl
test
sahf
jg
push
arpl
mov
out
cmp
cld
jne
std
gs
mov
mov
mov
inc
fdiv
aaa
das
sbb
popf
dec
push
out
xchg
int3
std
mov
imul
adc
xchg
add
push
outsb
mov
int
xchg
cld
mov
arpl
mov
call
insb
dec
inc
jecxz
mov
sub
mov
pop
cmp
mov
repnz
rorl
loop
in
push
loope
pop
cmc
rclb
fs
stos
dec
mov
mov
mov
js
or
add
adc
mov
adc
xchg
fadds
mov
mov
imul
jmp
xor
mov
rolb
shlb
pushf
fstl
movsl
mov
hlt
movsb
stos
ljmp
mov
aad
imul
mov
cmpsb
xchg
add
cmp
les
daa
sub
inc
mov
add
pop
fistpl
and
mov
ljmp
xor
sbb
cltd
add
rol
xchg
and
xchg
sahf
add
leave
dec
addr16
fimull
fimuls
ss
xlat
jl
inc
inc
adc
repz
in
push
inc
dec
xor
outsb
ret
cmp
dec
rcr
xor
jecxz
adc
xchg
mov
repz
mov
cmpsb
sbb
out
sub
add
sub
lret
mov
inc
arpl
mov
icebp
outsb
add
inc
ds
mov
lock
mov
fnstsw
and
inc
xchg
mov
dec
lahf
cs
cmp
pop
pop
mov
mov
jp
push
mov
test
mov
jge
dec
xchg
popf
lcall
not
ret
fidivrs
js
setl
pop
or
inc
push
mov
sub
psubd
xchg
pop
mov
addl
aas
adc
scas
jge
sbb
jno
fidivl
ror
sbbl
mov
inc
enter
dec
pop
adc
cmp
mov
mov
cmp
lcall
stc
mov
testb
pusha
add
lods
ret
inc
nop
pop
push
ljmp
mov
mov
in
lock
push
sbb
mov
add
mov
dec
fiadds
mov
leave
imul
or
aaa
pop
int3
sub
xchg
sbb
mov
cmp
test
daa
clc
dec
mov
jp
bound
popf
imul
imul
jp
mov
lods
mov
xchg
cmpsb
js
dec
push
cmp
dec
in
fisubrl
bound
mov
jne
mov
cwtl
aam
cwtl
test
cli
jns
jg
into
mov
insb
lcall
pop
cmp
adc
int3
cmc
xor
push
sti
xchg
push
sub
jp
inc
dec
scas
xor
push
stos
xchg
jno
cs
push
push
test
and
pminub
jbe
mov
shrb
xor
or
fsubs
fldl
jmp
mov
mov
fistpll
mov
call
test
rcll
lea
pop
xor
mov
rcll
sbb
jl
aam
jns
add
jo
add
cmovl
call
js
mov
dec
sub
jl
pop
sahf
sbb
test
in
idivl
test
out
xor
adcb
ljmp
lods
sbb
jno
jnp
pop
pop
mov
sub
dec
mov
aam
rolb
into
cmp
xor
ljmp
push
mov
nop
outsl
xor
hlt
mov
leave
ja
int3
les
enter
ror
cmc
jmp
mov
cmp
sti
incl
push
and
sbb
or
mov
mov
mov
inc
adc
data16
stc
jae
xchg
xor
xorl
insl
sti
xchg
addr16
mov
cmp
xor
loop
mov
mov
fnstcw
mov
sbb
lret
or
pop
xorb
mov
js
jp
pop
mov
push
and
test
push
jecxz
addr16
fdivl
mov
imul
jl
and
dec
mov
add
je
inc
in
mov
push
les
rcll
cmc
push
xor
add
push
inc
in
repnz
lret
popa
add
mov
gs
sub
inc
decb
iret
or
mov
add
std
cltd
adc
outsb
daa
add
leave
add
sbb
into
jne
leave
mov
add
adc
mov
add
jb
pop
cli
mov
pop
pop
cmp
cmp
test
adc
push
call
jne
push
mov
addb
adc
pop
jg
and
push
mov
ds
mov
inc
pop
lcall
pop
cli
add
xchg
and
pop
push
sti
cmp
pop
xchg
enter
mov
divb
jbe
rcl
jae
mov
ret
mov
test
imul
scas
and
adc
pushl
jb
or
out
call
lcall
inc
mov
negb
ljmpw
clc
lret
cmp
adc
pop
loope
pop
xchg
cmpsb
stos
and
cmp
sbb
push
lock
fcoml
bound
xor
jo
jae
fiaddl
out
cmp
sub
dec
pop
repz
aam
add
sub
jecxz
aas
mov
push
xchg
push
repnz
push
call
nop
xlat
pop
lock
js
hlt
mov
inc
repz
jo
sti
cmp
mov
sbb
mov
es
cmp
pop
jle
and
ret
roll
ss
ss
sbb
shlb
pop
in
xchg
jno
jns
push
xchg
mov
test
mov
aas
clc
icebp
jge
test
out
andl
sbb
mov
daa
ss
ret
adc
push
sub
mov
push
out
mov
fsubs
lock
fistpl
add
js
std
mov
loop
jle
push
sbb
enter
lret
pushf
pop
repnz
push
or
push
xchg
mov
sbb
pop
add
pop
mov
pop
jno
xor
push
mov
mov
inc
cmp
xor
dec
sahf
xor
fs
dec
cli
mov
jg
pop
mov
add
cmp
mov
mov
inc
sbb
push
push
push
adc
das
mov
dec
clc
rorl
fldcw
hlt
insl
fistpll
jge
mul
fists
push
fildl
inc
push
sbb
ss
or
sub
mov
je
in
push
pop
mov
or
jge
add
or
sbb
les
stc
push
fistpll
xchg
dec
xor
cmp
mov
lea
dec
in
out
push
mov
ss
inc
iret
mov
mov
ret
movsl
mov
in
scas
mov
dec
loopne
lahf
fwait
sub
xchg
popf
and
mov
stc
shl
faddl
notb
aam
hlt
dec
sub
push
xor
xor
inc
mov
jcxz
ds
add
mov
dec
mov
mov
addr16
and
jbe
inc
and
dec
fcmovne
xor
jmp
push
nop
mov
push
sahf
cmc
dec
jmp
es
push
aaa
xor
clc
ficompl
dec
sub
psrlq
arpl
std
lcall
adc
dec
ljmp
lret
cmp
pushf
cmp
adc
push
data16
mov
fcmovbe
sbb
movsl
push
sbb
cmp
mov
mov
into
jg
sbb
fimuls
or
pop
sbb
jns
lcall
pop
decb
in
lcall
cs
scas
mov
sbb
es
dec
testb
cmp
imul
or
mov
adc
push
aas
inc
fnsave
mov
ficomps
mov
adc
push
xchg
xchg
bound
repnz
xlat
sub
icebp
or
mov
cmpsb
mov
push
pop
mov
push
mov
push
jae
cmp
call
dec
dec
or
dec
xor
neg
daa
fdiv
fldenv
xchg
add
xchg
adc
loop
sbb
mov
lcall
jbe
les
mov
jno
push
push
sub
ds
les
roll
add
and
mov
and
dec
mov
mov
jo
and
pop
dec
push
sub
jmp
mov
in
mov
jge
cli
out
push
cmp
movsl
or
jp
inc
sbb
sbb
mov
popa
mov
jle
mov
add
mov
add
ror
arpl
ret
mov
lock
and
and
adc
into
xchg
lock
arpl
sti
mov
mov
cwtl
outsb
mov
ret
lcall
inc
call
ret
cltd
js
into
lcall
adc
aam
ss
mov
pop
adc
rcrl
sub
icebp
and
adc
nop
shrl
pop
incl
xchg
enter
mov
in
insb
out
dec
ds
popa
fs
jbe
sub
xchg
ss
dec
aaa
and
je
arpl
xchg
inc
xchg
xchg
outsb
sub
and
mov
xchg
jge,pt
divb
dec
lds
jp
mov
mov
int3
iret
aaa
in
or
jg
push
cs
mov
jno
cmc
xor
mov
jl
repnz
push
mov
mov
out
and
enter
lds
fwait
mov
jmp
sbb
and
mov
outsl
loopne
mov
xor
jns
sahf
mov
clc
cmp
repnz
aas
in
dec
jbe
dec
xor
mov
stc
aad
and
push
push
sbb
inc
jns
xor
cmpsb
pop
jmp
pop
rcll
outsl
add
lcall
xor
pop
shlb
loope
aam
data16
jge
jns
cmp
sbb
jecxz
loope
repnz
lea
jge
lods
aaa
jnp
rolb
cld
pop
adc
cmp
test
fimull
dec
add
int
outsb
sub
out
jae
sub
scas
lahf
xlat
lret
ds
cmp
jmp
scas
insl
sub
out
data16
inc
jmp
ss
je
cli
pop
fildl
pop
stos
sbb
gs
in
jle
fldl2e
int
cmpb
cmpsl
cmpsb
ror
or
hlt
aas
cld
adc
sub
inc
cmp
sub
aas
and
clc
imul
in
sbb
jbe
sub
dec
mov
mov
xchg
xor
lcall
leave
add
push
fdivl
adc
jg
test
cs
fimuls
addr16
into
jae
sub
mov
out
sbb
loop
cli
push
cs
mov
jg
sbb
sub
cmp
jb
jle
cmpsb
xchg
scas
pop
xchg
fmull
loop
out
call
sbb
inc
and
dec
lahf
lods
int3
pushf
int3
faddl
xlat
test
pop
incl
adc
lea
stos
test
fiaddl
fwait
adc
shrl
fdivrs
sub
dec
jne
dec
rcr
inc
pusha
orl
data16
and
ljmp
inc
xor
sti
hlt
fnstcw
push
cld
jecxz
pop
xchg
or
arpl
mov
inc
mov
and
lods
add
cltd
or
mov
pop
pusha
xor
std
arpl
sbb
mov
mov
clc
dec
sbb
sbb
mov
fs
mov
jg
int3
aad
aad
cmp
sub
dec
inc
cmp
addr16
xchg
arpl
and
into
push
or
test
inc
xor
or
int3
ror
fistpll
das
xchg
inc
mull
sti
insb
mov
mov
mov
pop
fs
sbb
out
push
pop
adcl
fcomps
cli
inc
add
test
stc
pop
lea
lahf
mov
dec
sahf
sbb
mov
jo
sub
in
jle
rcrb
loop
into
subb
mov
sbb
rclb
sub
inc
mov
and
or
sub
sub
inc
adc
dec
sbb
sbb
jnp
xchg
fstpl
enter
mov
jl
popa
mov
xor
pop
and
fwait
stc
ret
push
arpl
cmp
sahf
xor
and
and
cwtl
sarl
je
mov
ljmp
jns
scas
xor
sub
aam
mov
mov
xlat
push
je
stos
push
fwait
jg
fsub
dec
fs
cmc
movsl
insl
jmp
and
sbb
mov
dec
std
mov
push
and
jecxz
push
mov
lret
pop
rcll
std
fisttpl
aam
std
es
mov
mov
and
mov
add
movsb
lods
lock
xorl
jl
xchg
fsubl
and
mov
std
leave
sub
out
iret
test
test
jle
sub
mov
stos
jmp
xor
adc
jl
loop
xor
imul
mov
popf
insb
jae,pn
dec
outsl
out
aam
push
roll
in
out
mov
ljmp
pop
or
fistpl
adc
xchg
js
pop
and
fs
sub
repnz
rclb
not
and
pop
test
mov
adc
or
mov
bound
or
out
xchg
push
jae
aad
and
comiss
dec
sbb
mov
push
outsl
fidivrs
faddl
lret
mov
lods
out
mov
dec
loop
iret
sub
pxor
fcoms
fcomps
gs
daa
iret
or
cwtl
pop
ds
mov
and
xor
shll
popf
cmp
movsl
adc
push
pop
fdiv
inc
popa
mov
hlt
xchg
out
push
orl
mov
adc
mov
inc
lret
xchg
fidivl
dec
sub
insb
std
inc
pop
sbb
test
mov
divl
out
loopne
pushf
xchg
loop
testl
push
and
jle
mov
and
pop
mov
data16
ljmp
cmp
lahf
dec
push
data16
pop
ja
mov
insl
iret
nop
sbb
jo
rcr
popf
push
jo
or
push
pop
xchg
shll
lea
fidivs
push
mov
sub
addl
and
out
idivb
xor
std
xor
mov
pushf
lretw
cld
push
outsl
std
jmp
cmpsl
sahf
pop
mov
jno
mov
repnz
fisttpl
call
sbb
rcr
call
pop
push
xor
push
test
ljmp
mov
or
mov
inc
call
add
xchg
and
addb
jmp
scas
push
and
dec
pusha
xchg
sarb
repnz
jmp
lret
cs
lret
imull
insl
outsb
out
mov
mov
cmp
inc
ljmp
lahf
ret
mov
sub
xor
jno
leave
mov
mov
jne
add
jno
aam
loope
sub
or
dec
cmp
loopne
mov
out
arpl
lods
and
sarl
rcl
cmc
sbb
outsb
pushf
insb
addb
mov
xchg
push
pop
loope
inc
push
sub
fisubrs
flds
adc
cmp
xchg
mov
mov
lds
pusha
jl
orb
in
mov
in
cmp
lds
imul
dec
pop
fsubrs
ret
or
pop
cmp
mov
xor
mov
cmp
dec
mov
and
mov
push
repnz
jnp
int3
push
and
fsubp
push
in
and
lahf
mov
pop
pop
loope
pop
add
jb
fadds
pop
addb
mov
xor
xchg
push
pop
pop
xchg
push
xor
loop
es
jnp
repnz
bound
iret
shl
sbb
push
or
insb
cltd
xor
stos
test
mov
lock
sub
pop
inc
cmp
std
xor
leave
push
fsubs
fistpll
push
sbb
push
dec
clc
sub
pop
scas
in
in
in
inc
mov
xchg
or
les
sbbb
jae
mov
not
decl
fsub
mov
jmp
pop
cwtl
in
inc
cwtl
xlat
dec
test
cmp
int
clc
sbb
push
insb
or
scas
sbb
inc
mov
lods
xor
cwtl
cltd
adc
add
aam
out
nop
push
sub
mov
jle
enter
daa
ret
pop
lahf
sbb
xchg
push
aam
inc
mull
and
inc
enter
sub
nop
mov
jmp
xlat
rcr
cmp
lahf
cltd
mov
mov
mov
add
shlb
or
push
jno
push
cmp
daa
mov
out
mov
mov
adc
add
repnz
jae
mov
mov
push
and
mov
push
sub
mov
cmp
aaa
cli
jbe
xor
and
mov
loopne
movsl
mov
in
add
sbb
pop
je
push
mov
dec
aaa
pop
mov
mov
push
scas
dec
jno
fdivr
pop
cmp
xchg
xor
dec
dec
stos
jecxz
and
xor
xor
mov
into
je
jmp
and
cmpsb
push
lret
pop
lods
pop
in
ss
adc
push
movsl
xchg
mov
outsb
imul
xlat
adcb
mov
shl
fwait
mov
rorb
jmp
mov
or
xchg
mov
push
addr16
xorb
sub
hlt
inc
stos
fnop
stos
or
filds
std
scas
cli
mov
in
push
jle
insl
dec
pop
jge
cltd
aad
in
iret
lahf
sbb
add
cmp
mov
and
jo
inc
xor
pop
cld
cld
test
fdiv
call
adc
xor
aas
shl
repnz
ss
call
xchg
mov
scas
sbb
mov
mov
push
add
mov
inc
add
fidivl
fwait
bound
lahf
inc
add
inc
jns
imul
stos
mov
sahf
mov
mov
and
jle
add
mov
movsb
push
test
js
mov
xor
sbb
mov
cli
push
mov
fwait
inc
nop
push
sbb
in
push
inc
push
inc
pop
aam
mov
stc
nop
das
sti
in
popa
fstpl
jp
mov
inc
mov
adc
dec
int
xor
hlt
ss
outsb
ja
jecxz
xor
std
jo
mov
test
dec
xchg
mov
int3
jnp
or
push
cli
mov
adc
into
push
pop
ficoml
jne
push
push
and
in
push
andl
add
repnz
jmp
add
mov
mov
out
or
sbb
loope
push
xor
push
mov
xor
jo
divb
icebp
ds
in
sar
mov
add
dec
push
sub
out
lcall
hlt
sbb
mov
mov
jecxz
in
addr16
pop
pop
inc
dec
lcall
mov
cli
cld
cwtl
lock
popf
mov
test
aam
hlt
mov
mov
and
outsb
jp
pop
xchg
pop
cmc
lds
js
jb
push
or
push
sbb
faddp
pop
cmp
mov
xchg
subl
sub
and
add
pushf
imul
stc
sbbl
das
mov
fmull
adc
cmp
loope
pop
push
dec
xor
pop
mov
movsl
ret
jecxz
adc
mov
shll
mul
shl
xlat
bound
shrb
cltd
adc
popa
mov
pop
popa
cli
dec
xchg
inc
cmp
scas
jle
push
fistl
lret
and
mov
mov
push
jp
pop
lahf
cmp
shrl
jne
cmc
out
iret
fsubr
or
sar
mov
push
xchg
xchg
sub
add
dec
loop
stos
scas
sahf
dec
push
push
push
xchg
ret
in
add
or
es
inc
inc
repnz
inc
sbbl
mov
cmp
bound
pop
fistpl
pop
push
mov
imul
dec
sbbl
repnz
push
loopne
mov
scas
stos
mov
push
repz
xor
les
mov
push
lock
stos
pop
loopne,pn
push
shrb
test
jmp
fisubrl
add
push
and
xchg
nop
cmp
pusha
mov
mov
or
mov
arpl
lahf
jle
das
xchg
ljmp
xchg
ficoms
sbb
outsl
into
and
loopne
ss
pop
mov
out
imul
jb
test
mov
pushf
lds
js
into
ret
jno
and
or
scas
cmpsl
stc
lcall
push
daa
cmpsb
xlat
jb
mov
fsts
jecxz
scas
stos
lcall
aas
jo
and
ljmp
sbb
fisubrl
inc
loope
or
data16
and
sub
cli
stos
xchg
je
scas
xchg
lcall
mov
jno
xchg
icebp
push
cmp
adc
imul
cmp
repz
cmp
js
or
leave
jno
rorl
std
add
outsl
dec
xor
inc
jp
jno
dec
sub
gs
in
xor
scas
pop
adc
cmp
sub
cmpsb
adc
mov
aaa
jecxz
xor
jb
xchg
dec
pushf
adcl
inc
cld
lea
xchg
dec
mov
pop
stos
imul
sbbl
jg
test
xor
xchg
es
sub
push
insl
mov
nop
jnp
ljmp
out
repnz
mov
xchg
in
inc
fsts
mov
push
xchg
and
data16
inc
ror
jg
into
pop
push
add
fwait
and
push
xor
mov
or
mov
out
lock
clc
stos
or
cltd
cmp
loopne
int3
mov
inc
popa
push
movsb
push
ret
nop
pop
out
jno
and
sbb
sbb
pop
xor
fistl
inc
pop
inc
in
out
mull
clc
inc
sub
enter
sbb
call
jnp
xor
xchg
jmp
push
pop
lret
cmp
inc
mov
xchg
aam
stc
es
je
cmc
mov
dec
adc
mov
rcll
fildll
setbe
std
jge
mov
sarl
sub
aad
cmp
or
and
jge
sub
lods
xchg
mov
xchg
and
shrb
pop
adc
cmp
sub
pop
adc
cmp
mov
jae
cs
in
add
into
sbb
es
inc
dec
cli
push
inc
jmp
aam
push
stc
push
add
lock
adc
or
stos
mov
stc
jle
jmp
jo
inc
pop
ret
push
repz
cltd
pop
insb
xor
loopne
and
mov
xor
mov
add
sbb
pop
and
or
ds
mov
inc
bound
or
outsl
jo
int
cmp
mov
push
mov
scas
dec
out
into
sbb
pop
push
imul
notb
daa
andl
jo
sbb
movsb
aas
pop
mov
lcall
adc
in
mov
push
lret
out
mov
jno
dec
mov
push
or
gs
sbb
and
xor
push
clc
adc
mov
scas
stos
jmp
stc
inc
and
xor
push
xchg
mov
mov
sbb
aaa
sub
gs
jae
imull
call
je
test
mov
sbb
in
xor
jecxz
fisubrs
fsts
sub
mov
mov
jg
fs
sbb
out
mov
cmp
mov
int
cwtl
insb
fstps
dec
inc
cmp
mov
lcall
aam
cld
rolb
std
outsl
xor
push
push
xchg
sub
mov
cmpsb
out
stos
outsb
cmpsl
out
sar
in
icebp
push
cmp
jnp
cmp
je
and
out
push
enter
fdivr
jge
mov
mov
out
xlat
sahf
test
mov
add
dec
lods
xchg
lret
and
push
repnz
add
insb
fldpi
clc
dec
inc
cmp
fdivrl
fdivrl
lock
pop
xchg
and
fdivs
outsb
popf
mov
cmp
sub
jnp
mov
bound
mov
nop
cwtl
movsb
iret
or
xor
outsb
lds
fs
or
js
pop
pop
das
cmp
inc
sbb
push
push
out
jns
pop
cli
xor
addr16
xor
shr
and
iret
int
sahf
dec
xor
int
repz
in
inc
fs
cld
addb
ja
or
out
lahf
in
ja
lods
mov
ret
inc
inc
mov
inc
nop
inc
sub
jmp
adc
dec
out
ret
jmp
nop
sub
shll
enter
fsubr
push
sarb
sarl
or
movsb
push
je
call
xchg
mov
ficoml
iret
xorl
sub
pop
xor
mov
mov
jbe
inc
enter
sub
jmp
xchg
jo
sbb
cmp
cmp
adc
in
addl
in
add
into
nop
sbb
ja
adc
fildll
aam
dec
rorb
sahf
xor
cmp
jp
dec
orb
jp
mov
dec
jbe
dec
out
cwtl
cwtl
mov
nop
and
ror
jno
or
sbb
lcall
aaa
repz
pop
inc
and
aaa
and
notb
push
mov
je
dec
add
and
sahf
pop
cmp
dec
andb
dec
shl
fcom
je
pop
jg
push
mov
stos
inc
in
ret
sub
and
std
xor
cmpsb
fildl
cwtl
icebp
test
dec
mov
xchg
and
lret
dec
and
pop
cltd
shlb
inc
pop
mov
xor
pop
insb
push
movsl
nop
sub
cmp
jne
adc
imulb
pop
xchg
fnstsw
icebp
push
stos
inc
xor
jae
mov
jne
xchg
lods
jp,pt
out
and
mov
pop
jne
pop
push
or
jl
xor
jne
loopne
cmpsb
xor
push
les
ds
cmp
scas
mov
push
mov
cmpsb
je
fwait
mov
lock
loop
mov
repz
pop
insl
rcr
xchg
jbe
cmp
sahf
inc
jbe
push
decb
jo
cmp
mov
lods
test
inc
push
inc
flds
pop
xchg
xchg
xor
push
movsb
push
sti
push
mov
or
dec
stc
sub
push
pusha
in
cld
push
pop
push
fcomps
int
cltd
sub
cld
aam
stc
shll
enter
hlt
dec
xchg
xchg
nop
xchg
aas
xchg
mov
nop
test
add
loopne
int
popl
pushf
lea
out
or
jno
dec
add
and
xor
cltd
das
sub
stos
jbe
bound
cmp
sub
adc
jmp
adc
loope
push
sahf
pushl
incl
pop
sahf
fs
jae
dec
fldenv
push
jae
mov
gs
inc
in
sub
lahf
hlt
aas
and
lock
adc
out
rclb
xchg
loopne
addl
inc
jo
imull
shrl
aaa
je
ja
gs
mov
fdivrs
out
pop
jns
pusha
in
loopne
mov
lea
outsl
adc
and
mov
jno
dec
stos
in
and
xor
cltd
das
xor
stos
js
mov
sar
add
out
cmc
xor
xchg
mov
and
mov
sub
sbb
js
fisubs
sbb
aas
ss
cmc
rcll
sbb
lahf
sub
lret
mov
mov
sarl
xchg
cmp
in
subb
sbb
ret
cmpsl
icebp
adc
daa
adc
xchg
mov
in
and
cli
xchg
ja
sbb
out
cmc
dec
mov
rcr
das
or
pushf
and
xchg
or
cmp
xor
cmpsb
cs
pop
sahf
xchg
and
mov
jnp
jl
jnp
mov
scas
xor
pop
sub
test
cli
ficoms
pop
stos
pop
scas
out
fs
xchg
cmp
push
sbb
push
inc
sbb
pop
push
cmpsb
sub
mov
loop
xchg
push
push
xchg
je
into
or
push
int3
mov
xor
jae
test
into
fs
in
pop
je
inc
or
dec
ljmp
out
xchg
fdivs
add
test
loope
cmp
popf
std
xor
int
add
in
xor
dec
cs
jmp
push
loopne
shl
and
pop
jg
push
ffreep
iret
imul
fs
orb
cmp
xchg
adc
aad
adc
jb
mov
jmp
lret
add
mov
lea
cltd
add
sub
pop
pop
in
jp
jle
cmp
mov
xchg
imulb
outsb
fs
dec
int3
xlat
push
mov
inc
cwtl
ret
and
sub
adc
cmp
out
mov
inc
or
scas
cmp
cmp
jg
jmp
sub
cltd
aam
test
push
xchg
inc
andl
popf
out
mov
fists
jmp
testb
je
shlb
push
inc
and
xlat
mov
jnp
sahf
fsubrl
and
fwait
sarb
aam
int3
adc
sbbl
into
cmp
out
or
jle
mov
movsl
arpl
sub
adc
out
scas
cmp
mov
pop
mov
pop
dec
xchg
lret
sub
adc
xor
out
inc
adc
popa
enter
mov
jecxz
adc
imul
mov
pop
jne
add
aam
cmp
data16
insl
lods
adc
pop
xchg
xchg
out
in
daa
into
iret
lods
shlb
sahf
sahf
cwtl
imul
or
inc
loop
movsl
fistl
scas
sbb
or
jae
int
sbb
dec
jnp
or
arpl
aad
and
cs
cwtl
leave
xchg
repnz
xchg
in
jmp
or
cs
out
clc
pop
mov
aas
mov
cmp
loop
adc
andb
pop
add
stc
jns
sbb
xor
mov
inc
cmp
js
sahf
push
pop
cmp
cmp
and
pop
push
repz
xchg
adc
jns
rolb
into
xor
push
sarb
add
stos
arpl
or
aas
scas
add
stos
out
es
inc
fstenv
cwtl
or
adc
test
jle
es
addr16
jbe
xchg
mov
pusha
inc
add
adc
lret
ret
push
xor
fadds
xor
popl
add
push
xchg
dec
fisttps
sbb
mov
out
in
mov
push
cli
jmp
dec
ret
adc
sub
xchg
or
int
cmpl
adc
pop
sub
jbe
dec
cmpsb
and
xor
sbb
xor
ljmp
cmp
push
pop
xchg
movsb
aaa
and
test
cmp
add
fdivl
aam
aam
lea
mov
xor
cmp
cmp
adc
pop
lcall
cld
push
push
mov
loop
ja
mov
and
in
call
aaa
jg
imul
inc
xchg
push
pop
push
push
sti
push
mov
cmpsb
in
ljmp
sbb
jg
andl
pop
aad
shrl
or
sub
testb
out
fnstenv
jmp
mov
insl
ror
test
addr16
adc
inc
jg
mov
dec
mov
jle
xchg
cltd
loop
or
push
lds
add
inc
jl
cmpb
sbb
pusha
fisttpll
andw
fwait
call
jo
xchg
pop
in
lods
and
sub
sub
pushf
div
shr
dec
data16
outsl
adc
and
roll
add
mov
movsb
or
xor
adc
mov
test
cli
sub
pop
mov
or
xchg
push
fisttpll
stos
insb
adc
daa
ljmp
xor
xor
xchg
cmp
ret
int
pop
add
dec
mulb
mov
mov
cmp
lret
das
cmp
inc
ja
fistl
jo
std
lcall
lcall
lods
cmp
das
loop
movsb
lahf
scas
in
outsl
inc
xchg
mov
subps
push
mov
inc
mov
mov
pusha
jo
dec
push
shlb
pop
mov
lahf
push
test
movsb
cli
test
dec
cld
sbbb
imul
lcall
push
xchg
xchg
cmp
outsb
mov
fiaddl
es
add
insl
aaa
push
mov
jne
in
inc
inc
xor
mov
outsl
mov
fidivrl
mov
pop
xchg
repnz
ja
sti
xor
or
xchg
mov
inc
mov
sbb
aas
ret
ja
inc
xor
cmp
inc
popa
ret
out
add
cmc
iret
mov
inc
pop
icebp
add
imul
mov
iret
mov
sbb
js
push
fcomi
sahf
push
int
data16
cmovs
rcrl
sar
xchg
ljmp
fwait
or
ljmp
in
pop
add
addr16
cld
push
into
fnstenv
dec
cmp
mov
mov
cs
pop
das
fisubs
shll
xor
xor
gs
fnstcw
mov
dec
xchg
clc
jg
push
or
cwtl
xchg
or
cmp
pop
cli
jge
cmp
jns
test
aad
lea
inc
pop
orl
or
mov
sub
out
cmpsb
outsb
shl
sbbl
sbb
or
inc
fstps
test
add
orb
fnclex
clc
cmp
or
inc
fldenv
orl
scas
nop
sbb
cmc
mov
cmpsb
mov
pushf
dec
and
or
in
dec
aaa
add
mov
xchg
add
xchg
pop
imulb
pop
pop
je
and
push
in
xlat
mov
inc
roll
xchg
or
aad
lahf
sub
mov
hlt
pop
sti
int3
sbb
sbb
pusha
cltd
dec
jl
xor
sub
je
mov
jae
cmp
dec
dec
int3
cmpsb
ljmp
mov
dec
lods
shl
xchg
ds
pop
stos
inc
xlat
fimull
and
fs
inc
insl
and
fs
pop
add
xchg
test
add
sahf
fisubl
dec
pop
jne
mov
stos
aad
outsl
scas
arpl
loop
movsb
mov
mov
sbb
int3
push
push
cmp
pop
loop
mov
jno
and
pop
or
jo
mov
sbb
cmp
lcall
cmp
cmc
mov
xor
cmpsb
lods
push
push
movsb
xchg
ljmp
bound
in
mov
mov
cmc
inc
mov
jmp
mov
fmull
out
stc
sti
rorl
sub
aam
ret
mov
mov
jnp
cmpsb
mov
pop
mov
inc
movsb
movb
sub
cmp
sub
push
cmp
jno
testl
jmp
fildll
cmpsl
add
aas
mov
push
mov
adc
movsl
out
outsb
mov
xchg
sbb
cmp
fstpt
sbb
fnsave
int3
clc
pop
dec
dec
leave
insb
and
adc
fnsave
loope
xchg
inc
and
jnp,pn
popf
mov
mov
inc
hlt
insl
mov
outsb
dec
iret
call
jge
icebp
sbb
lea
adcb
int3
push
in
lahf
fiadds
repnz
loop
or
jno
out
cmp
inc
fstpl
adcb
pop
nop
pusha
and
push
fisubrl
add
jno
hlt
rcrl
std
sub
stos
push
jb
sbb
or
and
cwtl
adc
xchg
mov
mov
inc
out
push
mov
std
lret
out
mov
dec
ret
sub
mov
test
push
xchg
mov
cmp
shr
movsb
and
push
loope
push
push
dec
insb
and
test
lcall
test
hlt
add
xchg
mov
lods
fildl
jae
mov
add
xor
sbb
sub
inc
movsb
jl
negl
dec
test
popf
mov
into
inc
dec
pop
jo
outsl
mov
mov
stos
cmp
in
dec
xor
inc
add
bound
shl
add
mov
insl
mov
jg
add
outsb
popa
dec
dec
adc
dec
or
sbb
pop
int
xchg
lods
xchg
paddsb
mov
jns
add
jp
out
xor
jmp
pop
xchg
and
fwait
mov
inc
or
cmp
push
xchg
mov
popl
mov
rcr
test
aas
jp
jle
xchg
mov
push
rorb
popf
mov
and
fnstenv
clc
dec
or
cmc
sbb
pop
adc
mov
cs
pop
jmp
mov
fcoms
sti
mov
cmp
mov
iret
rcrb
and
test
dec
xlat
xchg
call
sub
mov
mov
je
rorl
mov
push
dec
sub
push
enter
pop
mov
add
jp
sti
pop
out
and
push
cmc
insb
xchg
mov
push
push
jb
jne
mov
lods
sub
rclb
push
pop
lahf
and
sahf
lods
rorb
and
mov
and
lret
add
aas
loopne
xor
sub
xor
jnp
call
dec
fwait
pop
adc
inc
dec
cmpb
stos
jp
mov
sahf
push
xchg
into
mov
in
aaa
dec
mov
xchg
sbb
fcompl
fisubrl
or
sbb
aaa
out
aad
push
addl
xchg
and
jo
dec
mov
rcrb
sub
mov
call
pop
lret
inc
lret
sbb
out
or
mov
lods
gs
mov
and
in
out
and
or
cmp
rcr
inc
jb
div
jo
aad
in
mov
out
and
data16
cs
inc
pop
pop
lods
ljmp
iret
inc
or
or
movsb
hlt
test
adc
mov
ja
cmp
es
sub
sbb
mov
fcmovu
daa
inc
or
cmc
rolb
jns
ss
pop
pop
lahf
jmp
jg
cld
roll
adc
dec
test
mov
mov
not
jp
out
test
jns
jnp
aas
test
arpl
sub
or
jp
popf
sub
shl
int
xor
pop
jb
adcb
ds
and
and
fstl
dec
or
mov
push
fsubr
sub
jno
adc
and
xchg
push
sbb
inc
imul
pusha
dec
cwtl
mov
and
pop
push
or
inc
lods
das
ja
xor
out
stc
jge
mov
mov
adc
push
stc
inc
jno
lret
add
test
xlat
xlat
mov
lods
insb
push
out
dec
daa
and
repnz
fimuls
enter
push
rol
mov
push
lahf
add
ret
add
and
aam
je
sbb
fimull
fs
mov
out
jnp
or
sub
add
adc
dec
cmp
orb
lfs
sahf
arpl
mov
mov
xchg
cmpsb
xor
push
mov
lahf
sub
and
xor
clc
aas
push
data16
ds
in
clc
loopne
and
pop
in
cmpsb
stos
push
mov
ret
push
pop
xlat
push
out
sbbb
cmp
add
add
push
data16
sub
mov
mov
inc
out
cmp
mov
mov
jo
cmpsl
mov
jno
pop
mov
repz
and
pusha
or
jnp
sbb
dec
jae
dec
fwait
cmpsb
int
xchg
sub
sahf
in
dec
fisttpl
cltd
repnz
xchg
mov
mov
adc
addl
push
jb
je
imulb
xor
inc
loop
es
sbb
sub
jbe
sub
pop
jae
mov
mov
jae
rcll
pushf
mov
fsubl
xchg
pop
jae
inc
mov
fldl2t
mov
push
inc
rolb
dec
pop
cwtl
into
inc
jmp
xchg
lret
ret
ret
out
lret
xorb
mov
or
fisubs
dec
es
aam
sub
pop
fidivl
scas
data16
stos
push
ljmp
leave
cmp
cmc
pop
mov
jns
cmp
pop
mov
rolb
cltd
pop
fsubrp
jae
inc
cmpsl
pop
hlt
jo
hlt
lea
xorb
push
jl
testl
cwtl
inc
dec
data16
xor
incl
sub
jle
mov
iret
sahf
push
out
fsts
and
pop
mov
add
lods
push
xor
in
cmp
pop
arpl
sbb
fdiv
mov
insl
sbb
mov
adc
or
push
scas
popa
dec
inc
icebp
mov
push
loop
pop
int3
ret
dec
pop
aad
clc
fisubrl
push
outsl
mov
jmp
icebp
pop
scas
pop
stos
sub
push
and
fcmovu
and
mov
mov
pusha
test
mov
movsl
stos
out
adc
repz
xchg
sbb
xchg
mov
inc
push
je
aam
cld
stc
or
add
push
inc
pop
das
push
fcmovb
xlat
mov
repnz
xor
or
and
outsb
outsb
insb
outsb
push
sub
bound
add
sub
xor
jmp
dec
adcb
lcall
inc
out
lock
ds
mov
and
or
inc
push
fcmovnu
adc
dec
ret
xorb
orl
inc
inc
or
push
xchg
cltd
out
scas
cmp
dec
mov
mov
jo
stc
loopne
rcrb
mov
mov
ret
jb
mov
push
inc
xor
andl
add
cs
cmp
leave
les
dec
xor
sub
jns
cwtl
cs
inc
dec
inc
jne
das
adc
ljmp
std
sub
fidivrl
popa
add
das
aam
ficompl
imul
not
fstps
sub
leave
adc
incl
cmp
fdivl
add
outsl
or
lcall
xchg
lods
jmp
idivb
mov
scas
cmpsl
arpl
cwtl
dec
ljmp
int3
mov
imul
lcall
mov
icebp
mov
mul
lretw
ljmp
out
test
xchg
pop
testb
and
mov
aas
cmp
sbb
mov
mov
mov
dec
sub
mov
or
out
scas
push
out
ss
out
dec
into
or
aam
jmp
orb
mov
or
jo
xchg
ss
shr
mov
int
out
adc
adc
add
mov
push
out
loopne
adc
mov
and
insl
fsub
in
cmpsb
jecxz
and
pop
or
push
mov
dec
mov
dec
sbb
hlt
push
pop
pushf
movsb
shll
iret
pop
lods
out
aaa
sbb
ds
add
mov
aas
into
sbbb
ljmp
mov
int3
xchg
orl
sahf
and
dec
mov
mov
mov
push
mov
pop
cld
movzwl
inc
mov
scas
daa
adc
pop
inc
idivl
daa
jl
fstpt
pop
repz
xchg
call
out
sbb
sbb
adc
stos
jmp
xchg
xor
lock
leave
test
push
fcoml
or
jnp
or
cs
clc
jne
mov
fisttpll
int
inc
ficoml
lock
push
inc
push
cmpsb
lahf
adc
mov
mov
inc
aaa
inc
stos
stc
push
aam
lods
ds
or
jno
popa
cwtl
test
jbe
push
jle
mov
icebp
shr
adc
out
pop
cltd
push
xchg
psrld
es
or
je
xchg
sbb
cmp
xor
fcoms
js
add
iret
aad
adc
stos
push
cltd
or
sub
mov
and
add
inc
ffreep
pop
fs
mov
std
cmc
mov
mov
mov
call
clc
or
cs
pop
pushf
xchg
ljmp
pop
sub
cwtl
pop
xchg
iret
xchg
or
negb
jmp
stc
xlat
or
lcall
pop
xor
fsubr
das
sub
cmc
cmp
add
shlb
pusha
testl
sbb
ret
xor
daa
adc
sbb
mov
out
fisubl
scas
lret
imul
pop
inc
adc
negb
fldenv
addb
mov
push
sbb
cmpsl
fidivrl
cs
mov
aam
or
imul
das
push
xchg
iret
insl
mov
lods
push
and
scas
pop
ja
cmp
inc
mov
adc
das
mov
stc
sbb
mov
jnp
sahf
push
insb
int
cwtl
pop
loop
add
push
scas
cmp
sub
ret
inc
and
jno
lret
dec
mov
jg
arpl
das
push
fpatan
cltd
mov
repnz
push
into
sub
stc
pop
outsb
pop
inc
aas
imul
xchg
movsb
cmp
push
lods
andl
scas
xor
adc
add
mov
xchg
add
sahf
int
imul
add
sti
inc
push
pop
mov
adc
push
sub
push
hlt
subb
dec
xor
test
xlat
outsb
xchg
mov
push
jb
pop
cmp
cli
std
lods
push
dec
outsb
pop
in
movq
jbe
inc
mov
sub
jle
push
mov
in
cli
or
and
mov
mov
dec
sub
test
push
lods
test
push
arpl
push
sub
pop
sub
pop
mov
out
dec
xor
mov
cmp
xchg
mov
jl
mov
xlat
inc
mov
pushf
pop
cld
mulb
fs
fsubrl
and
fldenv
nop
outsl
daa
add
fisubrs
or
add
punpcklbw
adc
stos
in
cli
xor
jno
jle
jb
xchg
outsb
in
sub
xchg
mov
out
jp
add
xor
fiadds
pop
mov
jge
fcompl
shll
push
std
cmp
lahf
test
cmpsl
and
mov
jne
xchg
mov
jae
pop
leave
xorl
and
pop
add
sbbl
jp
cmp
hlt
xchg
jl
mov
ja
jbe
and
fcmovnbe
xor
inc
data16
push
push
and
fistpl
cmovne
cmpsb
push
aaa
rcrb
lret
call
pusha
jmp
pop
std
mov
sahf
in
stc
je
inc
and
or
sub
xor
sbb
pop
ret
outsl
or
mul
jle
mov
jnp
or
das
in
pop
outsl
push
ds
pop
mov
mov
push
stc
int3
out
mov
sub
sub
icebp
dec
mov
add
push
and
or
adc
sbb
mov
dec
jle
pop
insl
and
jl
cmp
mov
pusha
in
and
inc
insb
lahf
or
dec
aas
mov
add
inc
mov
push
pop
add
sbb
sub
xchg
mov
adc
pop
mov
dec
add
lcall
sub
mov
fcom
aam
sub
xor
enter
sbb
call
or
cmpb
in
or
dec
roll
int
cmp
hlt
cmc
clc
cld
push
inc
lea
and
jp
aad
movsl
or
out
mov
je
sbb
pop
adc
clc
out
inc
pop
mov
addr16
ja
repz
and
xchg
cwtl
scas
cmp
stos
rol
test
push
das
mov
outsb
push
adc
enter
fldt
jmp
nop
dec
sbb
aam
incb
push
add
sub
in
hlt
add
xchg
mov
and
push
das
test
shl
or
pop
addr16
pop
andl
dec
mov
fistpll
inc
fldt
std
adc
pusha
sub
das
xor
cld
sbbl
pop
arpl
jle
lods
pop
cwtl
rorb
nop
cmc
xchg
andl
xlat
pop
dec
pop
jo
mov
xor
inc
and
mov
adc
shr
jg
add
jne
mov
out
fimuls
mov
outsl
add
test
data16
jge
pop
pop
ja
int3
loop
xor
xchg
popa
dec
das
ret
push
les
aad
mov
sub
and
mov
push
arpl
in
shr
rolb
jnp
imul
outsb
mov
xchg
mov
scas
jne
outsl
jl
icebp
jo
dec
jl
aas
pop
fimull
addr16
divb
add
out
mov
and
ss
cmc
xchg
fisubl
pop
and
pusha
dec
ss
dec
mov
imul
les
sub
or
pop
jb
inc
push
mov
jl
inc
cmpsb
cmpsb
or
pop
mov
adc
outsb
sbb
nop
pop
stc
mov
cmpsl
add
mov
and
lea
fnsave
out
cmpsl
test
dec
mov
push
fsubrl
out
dec
or
rcl
push
xor
mov
pop
inc
leave
mov
sbb
cmc
xchg
popa
push
movsl
jne
jb
in
adc
mov
pop
xchg
repz
inc
pop
xchg
push
out
scas
clc
sbb
sub
mov
add
arpl
sbb
push
cmp
popf
mov
cld
lret
jmp
adc
xor
out
loope
ljmp
lret
sbb
mov
roll
jae
xchg
cld
mov
arpl
sbb
mov
jmp
movsl
and
mov
cmp
jbe
ret
sub
mov
adc
out
mov
loop
dec
cmpsl
xchg
push
aaa
jle
adc
daa
out
stc
push
push
jae
fisubrs
loope
scas
xor
jmp
cmc
jne
into
or
and
std
inc
xchg
mov
sub
pop
cmpsb
mov
xchg
out
or
mov
xor
repz
lret
sub
addr16
push
aad
and
cmp
sub
leave
mov
mov
xlat
push
scas
sub
shl
rcll
xchg
adc
add
movsl
std
lds
jns
ret
pop
push
cltd
gs
xchg
cmp
cld
lret
sub
inc
lods
aaa
sbb
sub
sbb
in
rcrl
lcall
mulb
sbb
mov
insb
repz
push
pop
stc
pop
aad
movsl
jl
leave
jnp
add
mov
xchg
push
imul
pop
cli
ljmp
dec
lea
aad
dec
pop
inc
popf
loop
movsb
lahf
pop
cwtl
cltd
mov
jmp
aas
jb
dec
in
push
mov
cmp
or
incl
push
push
pop
sub
repnz
testl
cmpl
loope
sbbb
shrl
jg
fdivs
jne
pop
mov
cmp
pusha
xchg
in
adc
add
lods
call
mov
adc
adc
and
jmp
xchg
inc
pop
lcall
lret
dec
icebp
popl
scas
push
jb
add
pop
xlat
sti
lcall
jmp
add
jo
repnz
cmp
or
jl
mov
lahf
jmp
cmp
mov
add
or
add
pop
pop
sbb
mov
jmp
repnz
ja
nop
shr
movb
das
add
js
ret
adc
lock
ja
sub
push
in
ret
popa
and
lret
cmpsl
sub
pop
popa
jl
or
mov
jle
iret
inc
push
xor
mov
movsl
lcall
repnz
jp
and
hlt
lahf
xchg
clc
loopne
jl
ret
push
daa
add
cmpsb
and
out
push
fldcw
pop
addr16
negb
mov
pop
js
out
fcoml
mov
sbb
fs
adc
negb
mov
adc
push
fidivl
shl
sahf
and
scas
test
hlt
ss
push
testb
mov
outsl
xchg
mov
fbld
cmpsl
and
cld
stos
jnp
in
cmp
xor
inc
pop
adc
scas
scas
test
nop
add
pop
xor
movsb
mov
xor
js
fldenv
fldl
flds
dec
in
addr16
add
dec
aad
and
aam
and
imul
adc
stos
dec
dec
shr
cld
in
lret
pop
jae
jge
mov
xchg
xor
mov
cmpsl
jne
out
movsl
in
sbb
jnp
and
aad
mov
ret
dec
jmp
pushf
orb
xor
dec
xor
mov
mulb
scas
js
sub
xchg
xchg
inc
arpl
mov
sub
dec
arpl
push
xchg
inc
sbbl
dec
clc
or
ja
mov
aas
xchg
and
inc
mov
mov
test
jbe
xchg
jae
dec
lret
xchg
cmp
mov
and
mov
mulb
gs
dec
inc
jmp
cmp
sbb
inc
out
jmp
push
push
dec
inc
xor
cmp
lcall
stc
scas
popa
ficoms
aam
push
pushf
push
xor
sbb
test
add
jecxz
in
ss
sbb
xchg
loopne
jmp
popf
push
inc
fs
mov
pusha
adc
mull
popa
lods
push
push
cmp
pushf
add
sbb
mov
xchg
call
insl
sbb
popa
xchg
test
daa
filds
adc
pop
int3
movsb
dec
repz
jge
push
out
dec
nop
and
xor
mov
jb
cmp
mov
cmp
pop
mov
cmc
sub
test
mov
jo
das
push
mov
mov
xchg
hlt
mov
dec
dec
push
loope
mov
iret
xor
cmp
outsb
mov
pushf
adc
xlat
sbb
cmpsl
jmp
adc
aad
test
aam
mov
rcll
pop
mov
cli
cmp
mov
pusha
mov
rorl
jae
and
adc
sti
or
clc
jecxz
dec
cwtl
xchg
inc
pop
push
movsl
sub
xchg
pop
lahf
ss
fincstp
push
cmp
ja
cld
outsl
sbb
out
jnp
pop
mov
push
lret
ja
inc
push
lea
test
sub
hlt
xchg
addr16
add
loopne
stos
adc
fcomps
mov
aaa
mov
scas
cmp
jg
imul
cmpsl
dec
out
inc
dec
ret
insl
jnp
dec
jb
scas
and
out
xchg
mov
dec
lret
xchg
rcr
cld
stos
mov
adc
adc
dec
adc
pop
pusha
int3
test
fldln2
xor
std
scas
xchg
outsb
lret
scas
xchg
into
loop
mov
adcl
cwtl
nop
or
or
outsl
dec
fistl
sbb
xorl
movsl
or
mov
test
sahf
fists
sbb
pop
push
orl
test
inc
rcl
out
mov
add
add
inc
fneni(8087
inc
repz
pushf
mov
stos
cmp
pop
inc
ds
hlt
xor
or
and
inc
ret
roll
mov
pop
int
push
jecxz
sbb
cmp
int3
sub
es
testw
xchg
mov
or
shr
rcll
fnstcw
push
dec
ja
fld
popa
hlt
mov
ja
sar
out
ja
adc
adc
add
cmp
pushf
cmpsl
aaa
mov
inc
movl
lds
popa
adc
push
lcall
pop
jge
xor
push
popa
pop
inc
adc
pushf
out
xor
test
lret
or
fildll
sarl
test
cwtl
testl
dec
dec
push
sub
mov
mov
adc
dec
scas
dec
jno
jns
test
push
stos
or
inc
add
pop
int
mov
pop
xor
lds
push
mov
stos
outsb
xor
out
stos
repnz
rcrb
filds
add
jp
pop
out
jp
sbb
hlt
fcmove
xor
mov
adc
test
adcb
push
sub
popf
and
jecxz
inc
inc
imul
push
fiaddl
cmp
mov
lret
lret
sub
ds
xchg
xor
cmp
out
sarl
sahf
jae
jns
sarb
sar
je
mov
mov
adc
shlb
pop
mov
imul
repz
ficoml
xchg
mov
les
fwait
lock
fbstp
cld
sbb
xchg
add
push
stos
pusha
xor
out
sbbb
enter
dec
jae
push
xor
gs
mov
jle
repz
dec
jnp
andb
sbb
or
fisttps
push
lods
movsl
into
mov
fistl
in
jp
and
out
stc
or
and
fsubp
fsubrl
ror
dec
adc
inc
mov
nop
jl
and
subl
adc
dec
xchg
outsb
sbb
loopne
lock
dec
pop
xor
sub
scas
fadds
jns
inc
loopne
xlat
mov
jle
jns
pop
or
into
fimull
sahf
and
cmp
ds
shlb
or
pop
lock
push
insl
dec
jae
pushf
idivb
je
shlb
lahf
mov
mov
or
mov
jg
pop
xchg
dec
cmp
lods
adc
or
fisttpll
rcrb
clc
pop
dec
and
sahf
movsb
jecxz
xor
roll
lea
sbb
mov
dec
mov
mov
cmp
jge
add
cli
pushf
cmp
jle
aam
xor
sbb
into
cli
xor
sub
cs
mov
fildll
rcrl
aas
cmp
and
stos
adc
scas
dec
sbb
mov
push
mov
jl
pop
mov
xchg
imull
in
xchg
xor
add
pop
dec
mov
adc
cmpsb
mov
lcall
mov
dec
outsb
pop
pusha
rorl
mulb
bound
dec
test
aad
ret
xor
add
mov
jg
scas
test
or
dec
mov
scas
sbbl
testl
sbb
sub
test
test
adcb
imul
inc
xor
cmp
inc
gs
dec
jmp
stc
mov
pop
add
pop
dec
ds
sub
aam
jge
loope
mov
gs
rol
iret
ss
push
lea
add
scas
or
shr
add
cld
dec
sahf
mov
ror
dec
loope
loop
pop
dec
fldenv
mov
call
into
popf
cmpsl
sahf
fdivs
rcr
xor
data16
mov
mov
das
inc
int
cs
loope
mov
dec
xchg
pop
daa
aad
add
or
xchg
test
pop
mov
and
jge
es
xchg
pop
inc
or
scas
inc
pusha
inc
lahf
mov
ljmp
mov
repnz
rclb
imul
aas
in
daa
in
jb
icebp
out
cmpsb
stos
jno
pop
inc
cmp
add
xchg
cmp
cld
xlat
push
repnz
mov
das
sbb
adc
pop
inc
orl
stos
sbb
data16
das
fcmovnbe
jle
inc
jp
add
es
pushf
hlt
dec
rcll
inc
or
or
je
xchg
push
sbb
xor
mov
mov
aaa
and
repnz
cmp
mov
dec
dec
push
xchg
aas
pop
sub
xor
lock
mov
and
pop
cltd
xor
or
cli
xor
jns
ret
or
sti
and
cmp
lods
das
fstpl
mov
lock
insb
das
and
push
daa
lods
jne
testl
lret
jae
pop
lcall
push
dec
jp
rcrb
call
pop
in
push
inc
xlat
dec
iret
sbb
mov
sub
mov
dec
loope
xor
jg
not
inc
mov
dec
inc
jns
sub
push
fnsave
mov
xchg
xchg
dec
fdivs
mov
mov
fwait
stc
fisubl
adc
inc
jno
iret
xchg
xor
dec
xchg
enter
lods
pop
or
xlat
push
adc
xor
dec
iret
sbb
xchg
jns
push
das
imul
fistpl
xor
adc
jge
hlt
dec
sub
test
arpl
in
ljmp
dec
jp
adc
push
and
cmpsb
or
ret
hlt
mov
int
cs
jp
int3
fidivrs
andb
xchg
jmp
movsl
ret
dec
jbe
add
jae
push
dec
pop
mov
loopne
add
xchg
sbb
ds
xlat
orb
in
sub
mov
fwait
mov
outsl
repnz
lods
das
xor
or
imul
cmp
mov
mov
jb
shll
mov
outsb
mov
adc
dec
push
or
cpuid
sbb
aad
test
mov
aad
sub
xchg
push
cmpsb
adc
jp
or
cmp
bound
jp
fadd
int
adc
sbb
outsb
in
hlt
addl
and
pop
mov
inc
cs
not
es
clc
adc
push
fimuls
adc
lds
and
pop
cmp
cmp
or
push
ljmp
cmc
sub
cmp
hlt
fldenv
inc
movsl
jecxz
testl
repnz
inc
inc
or
dec
xor
stos
pop
xchg
cmp
push
jl
nop
sbb
mov
popa
mov
int3
cld
insl
outsl
mov
mov
lcall
sbb
ret
mov
xor
mov
fildll
lret
ret
repz
js
in
mov
ljmp
loop
sti
out
sti
and
aas
fbstp
inc
lahf
dec
lds
cmp
dec
shr
call
jbe
mull
sub
stc
les
mov
mov
pop
negb
ffreep
loop
popa
xchg
jle
sub
inc
repz
movsl
inc
mov
movl
cli
dec
adc
pop
shlb
movsl
jbe
push
jns
test
inc
pusha
pop
dec
loopne
xchg
inc
sbb
or
inc
out
dec
jmp
clc
dec
ljmp
xor
inc
out
rcr
into
mov
in
mov
sub
stos
xchg
xchg
or
ficoml
cli
jge
sub
adc
jnp
mov
sbb
insb
popa
shl
sbb
jnp
int3
mov
ficoml
or
sahf
mov
loopne
jl
add
in
mov
pop
repnz
div
leave
inc
jl
pop
jbe
popa
cs
xor
pop
xor
xchg
lcall
xor
cltd
int3
outsb
and
repz
sbb
jno
int
jmp
icebp
fsubrp
popa
mov
xor
jae
xchg
ljmp
add
sahf
test
in
push
xchg
fcmovbe
sub
mov
loop
into
dec
mov
pop
or
je
clc
mov
scas
xchg
jmp
xor
int3
mov
and
f2xm1
leave
mov
mov
test
push
popf
inc
out
popa
push
pop
iret
pop
arpl
popw
ds
leave
sub
push
popf
xchg
into
add
jbe
or
sahf
or
sti
and
call
outsb
scas
int
sbb
shlb
lods
pop
cmpsb
sub
sub
mov
xchg
pushf
sbb
xorb
in
mov
jo
cmpsl
call
dec
arpl
adc
inc
xchg
ss
inc
in
sbb
and
jno
gs
xchg
dec
rclb
mov
jge
test
fwait
loop
insl
pop
lods
xchg
movsb
or
fisubrs
out
jb
pop
shlb
cmp
lcall
dec
sub
xchg
sbb
cmp
add
xchg
imul
imul
jb
and
shl
cwtl
push
and
call
dec
rolb
jne
sbb
in
je
mov
xor
and
inc
popa
sbb
add
mov
clc
dec
adc
fisubs
and
iret
adc
in
imul
dec
shl
inc
sub
in
xor
pop
jno
repz
out
xlat
push
mov
xchg
xchg
shr
xchg
bound
inc
add
insl
imul
loopne
xchg
outsb
jg
popa
cmpsb
in
or
pop
scas
dec
std
int
pop
mov
push
decl
orl
push
in
inc
mov
test
xor
outsb
je
out
jl
jle
jbe
and
jecxz
mov
push
adc
xchg
mov
fwait
testl
and
stos
cmp
pop
jb
sbbb
or
gs
pop
cltd
addb
push
sbb
sbb
push
scas
ret
pop
scas
and
mov
rolb
ss
dec
jmp
pop
push
pop
arpl
or
mov
pop
dec
xlat
lahf
negl
lcall
fbld
sbb
inc
dec
or
sti
stc
push
stos
xchg
pop
add
push
cmc
pop
sub
fcmove
jmp
movsl
xor
inc
pusha
mov
mov
xor
shrb
ret
xchg
push
sub
pop
fstl
pusha
jo
or
push
inc
insb
out
pop
fwait
pop
xor
and
jmp
mov
out
lahf
loop
je
push
pop
stc
push
cmp
fisttpl
lds
fdivrl
mov
mov
xchg
outsl
push
push
fistl
movsb
testb
or
jbe
xchg
mov
sub
mov
call
mov
nop
enter
fistl
fimull
sub
lret
adc
nop
mov
dec
jecxz
add
mov
jmp
stc
dec
and
xor
out
arpl
cli
cltd
call
bound
in
jecxz
inc
pusha
dec
or
fwait
je
ret
dec
lret
add
xor
sub
shrl
mov
loop
jp
mov
inc
xor
fildl
jle
je
sub
testl
jae
push
sbb
fdivs
pop
loop
in
loop
fisttpll
push
pop
enter
ljmpw
ret
pop
add
and
xchg
mov
inc
test
icebp
js
ret
push
sbbl
into
outsl
out
and
dec
popa
mov
aam
mov
xchg
call
xchg
jle
fucomi
or
cmp
out
push
sub
cmp
mov
adc
std
in
lea
xor
out
inc
dec
xchg
add
xchg
popf
ror
adc
or
addr16
jle
mov
mov
or
les
push
xchg
jne
ds
subb
cmp
pop
fnsetpm(287
test
jmp
stos
in
out
shlb
clc
jae
imul
pop
add
movsl
cwtl
lret
xchg
fwait
push
or
fldt
nop
jmp
cmp
outsl
sub
mov
push
xchg
sbb
push
pop
cs
aaa
jne
dec
pop
push
adc
hlt
add
fsubl
push
add
dec
dec
out
or
cld
out
jecxz
cmc
shll
mov
jg
dec
test
jecxz
mov
add
notl
icebp
repnz
pop
sub
cmc
sbb
sbb
inc
dec
test
mov
into
add
add
in
test
adc
push
imul
pop
sbb
adc
sub
je
pop
dec
js
sub
or
fldl
inc
cmp
data16
mov
xchg
add
inc
in
fildl
fistps
js
jmp
ret
imul
add
pop
pop
cmp
cli
das
aaa
mov
or
out
inc
adc
adc
jns
fisubl
cmp
dec
ja
test
push
shl
scas
das
aas
packsswb
jge
int3
xchg
shll
jo
mov
jmp
or
out
insb
rcrl
add
push
popf
add
es
ljmp
popa
fistl
ja
popf
cmp
cmp
fiadds
shrl
divl
pop
pop
ret
addr16
dec
push
pop
int
in
jae
jbe
sub
ffreep
pop
mov
fcom
dec
or
push
dec
sahf
lods
xchg
aaa
outsb
or
push
jns
mov
das
cld
xchg
mov
xchg
inc
jns
insl
xor
in
mov
push
pop
mov
sahf
jecxz
loop
js
lods
arpl
mov
mov
add
out
xchg
jbe
or
sarl
bound
cmc
push
inc
adc
mov
inc
scas
add
mov
inc
pop
sub
xchg
clc
mov
xchg
and
aaa
pop
out
into
fwait
cmp
dec
push
cs
sub
std
sbb
test
push
imul
insl
sarl
adc
mov
arpl
insl
dec
clc
xchg
out
pop
jnp
dec
add
arpl
popa
lret
jecxz
ss
enter
adc
add
mov
mov
loope
jns
sbb
out
outsb
aad
ss
mov
mov
popf
fadds
incl
sub
ljmp
or
bound
fwait
xchg
clc
mov
daa
push
xor
add
js
ret
fwait
cmp
jne
cmp
mov
lea
and
leave
fcoms
sub
sbbl
loope
xchg
ret
popa
sahf
cltd
jecxz
popa
pushf
cmp
fs
dec
add
fwait
pushf
dec
aas
ret
jecxz
push
dec
xchg
xchg
dec
xor
push
and
aas
pop
inc
fisttpl
fadds
enter
inc
add
inc
xchg
orl
hlt
call
ret
std
lods
or
xchg
pop
dec
cmp
rcr
xchg
lcall
mov
aaa
sbb
iret
adc
stos
xchg
and
dec
jno
insl
fxch
aad
imul
movaps
push
and
shrb
mov
in
lock
movsl
jmp
test
repnz
sbb
and
pop
or
xlat
in
mov
iret
add
dec
xchg
cltd
inc
mov
pop
gs
adc
popf
sbb
lds
loope
adc
inc
leave
jbe
lea
fcomps
cmp
in
pop
or
fistpl
sbb
int
ljmp
mov
je
pop
jl
or
loop
in
xchg
fs
faddl
cmpsl
fstpt
test
icebp
jle
idivl
push
lret
jne
adc
mov
bnd
dec
mov
pop
je
cmp
cmpsl
fnstcw
call
enter
sub
add
inc
aam
ja
jg,pt
cmp
movsb
insl
cmp
lods
mov
lret
test
adc
loope
loopne
arpl
adc
out
aad
mov
sub
pop
mov
jmp
idiv
in
scas
stc
mov
xchg
sti
xchg
sahf
insb
xchg
push
adc
in
jge
push
or
aam
mov
xchg
push
cmp
scas
or
enter
ds
in
jno
sti
inc
adcl
in
jb
inc
bound
sbb
ss
ret
mov
movsb
or
fisttpl
jmp
das
pop
sub
mov
push
push
pop
push
dec
dec
mov
mov
jl
pop
lock
push
das
jns
adc
and
xor
mov
or
rol
push
pop
subl
jge
iret
or
out
mov
mov
mov
inc
pop
idivl
imul
cmp
or
and
mov
add
test
mov
jle
push
aas
int
fs
adc
shl
adc
aad
jp
ja
and
jle
dec
push
mov
cmp
pop
stos
and
addr16
inc
clc
pop
or
add
mov
mov
loop
add
les
push
sub
inc
sub
mov
cmp
mov
mov
sub
shrb
outsb
fcmovbe
mov
or
fcomps
jp
fmuls
stos
jp
js
xchg
mov
jge
xor
mov
add
jmp
stos
xchg
aaa
test
test
mov
push
test
daa
inc
aad
xchg
inc
mov
xor
push
inc
xlat
xchg
push
sahf
dec
stos
popa
out
jo
adc
call
jns
mov
cmp
or
and
fs
testb
add
and
cmp
fisubrl
mov
lea
adc
jno
pop
pop
std
pop
adc
dec
add
and
leave
mov
adc
pop
xchg
in
aad
ja
ljmp
iret
imul
ret
call
mov
push
xor
pop
push
fnstsw
jle
jb
mov
jns
jp
xchg
icebp
pop
rorb
ret
fdivrl
orb
rcl
sub
mov
or
clc
xchg
push
mov
sbb
inc
cwtl
push
jg
sahf
into
jno
adc
jle
inc
jecxz
imul
inc
pop
pop
arpl
and
shll
sbb
ret
pop
jge
fadds
or
shrb
sti
cs
outsl
insb
xchg
lret
aaa
dec
sbb
jbe
jmp
mov
fsub
aam
xchg
dec
and
adcl
mov
mov
data16
roll
adcb
subb
inc
dec
sub
jge
call
sbb
loopne
shl
adc
sbb
jge
movsl
push
or
lock
dec
scas
cmp
mov
xor
inc
mov
push
cwtl
dec
out
lock
scas
mov
shrb
inc
scas
add
inc
decb
orl
sti
xor
sbb
jmp
aaa
add
cmp
xchg
lcall
mov
xlat
movsl
dec
daa
out
jge
xor
scas
push
data16
xchg
je
das
inc
loop
push
jb
push
scas
cmp
dec
dec
mov
add
and
mov
outsb
mov
pop
jnp
call
inc
xchg
xchg
fdivl
in
lods
jge
inc
add
lcall
sti
push
mov
stc
jmp
xchg
ret
rcr
jecxz
std
sti
push
mov
cmp
xchg
xor
int
xchg
aas
push
xchg
mov
jae
cmp
fcmovnb
leave
lret
clc
adc
mov
outsb
mov
cmp
or
nop
in
sbb
and
xor
repnz
or
ud0
in
dec
lret
in
push
sbb
add
dec
fcmovbe
fisubrs
inc
popa
jp
aaa
inc
pusha
adc
mov
ljmp
cmp
push
inc
dec
loop
jbe
adc
cli
add
push
xchg
pop
outsb
clc
insb
fdivs
pop
pop
dec
and
inc
inc
call
lds
sahf
repnz
adc
jo
test
es
push
leave
into
and
pop
cmc
jp
push
mov
push
loopne
dec
push
mov
jmp
cmp
repnz
sbb
jle
ja
ss
lret
lods
mov
xchg
es
inc
mov
out
inc
test
add
push
std
pop
insb
jge
sub
fnstenv
xchg
xchg
inc
stc
repnz
lret
or
pusha
and
or
arpl
outsl
push
push
hlt
loope
mov
cmp
jb
mov
add
cmc
clts
aad
add
push
stos
sub
aam
xchg
movsb
pop
mov
adc
test
cmp
in
pop
add
dec
fs
js
push
push
inc
xchg
aas
ljmp
arpl
leave
sbb
iret
cli
popa
mov
cmpsb
pop
xor
inc
nop
test
mov
adc
fistps
add
outsl
inc
rcrb
mov
add
jb
xchg
mov
jno
cmp
sub
mov
jge
aaa
loope
mov
or
shl
add
test
mov
cmpsb
lock
adc
in
dec
jmp
dec
out
clc
jbe
dec
je
outsl
jmp
loopne
pop
push
fneni(8087
add
ret
jg
xorl
lods
push
fnstcw
mov
sbb
and
adc
repnz
cmpsl
mov
cmpsb
xchg
loopne
pop
push
sahf
jne
stc
push
sahf
cwtl
fwait
inc
movsb
pop
mov
add
shrl
or
stc
adc
inc
pop
mov
xor
rol
dec
in
push
dec
mov
out
imul
test
movsb
mov
mov
inc
xchg
test
out
popf
mov
add
in
repnz
repz
mov
pop
sub
pop
outsb
sti
sbb
mov
dec
push
jns
pop
sub
mov
loope
mov
lods
popa
mov
cli
outsb
and
je
out
mov
mov
sub
loop
lret
insl
cltd
and
mov
or
sbb
jecxz
aas
jb
pop
inc
int3
jecxz
cli
push
scas
jp
clc
adc
mov
pushf
dec
mov
jle
push
pop
inc
sarb
xor
push
ljmp
jmp
sub
setb
cmp
repz
fcoms
adc
mov
add
out
adc
dec
pop
imul
cli
sub
adc
shrl
lds
shrb
gs
lods
mov
cli
jp
pop
push
jp
jmp
stos
pusha
insb
out
xchg
imul
push
in
fs
fwait
cwtl
jmp
ffreep
pmulhuw
test
sbb
adc
adc
popf
popa
addr16
inc
add
divb
cs
jns
shll
mov
rcr
push
pop
out
ds
cmc
ja
in
testb
ljmp
xor
add
or
imul
xlat
dec
iret
cmpsb
shrb
dec
xor
pop
sub
xor
mov
out
popa
push
cmc
aam
mov
cmp
jne
mov
mov
out
sub
xchg
jae
dec
pop
dec
aad
push
movsl
push
push
pop
loopne
in
test
mov
push
arpl
sbb
pop
dec
add
rclb
add
test
mov
mov
adc
std
or
stos
shlb
jb
pushf
pop
lds
inc
imul
push
inc
xchg
ret
sub
and
jp
sbb
mov
hlt
scas
inc
cmp
test
inc
mov
pop
xchg
pop
cwtl
push
pop
popa
vminpd
inc
stos
sub
fdivrl
rcl
cmc
jns
add
push
enter
pop
lret
scas
outsl
xchg
out
push
in
stos
and
jecxz
mov
inc
stos
sbb
mov
ljmp
mov
or
push
out
push
cmc
rcrb
sbb
test
out
mov
add
sub
or
ret
aas
in
xchg
push
loope
aam
lahf
mov
ret
jl
lds
jmp
cmc
sbb
xchg
cmp
adc
aad
push
mov
pop
dec
loopne
or
push
int3
movsl
dec
adc
jge
int
shl
inc
inc
inc
sub
outsb
cmpsb
and
sbb
or
movsb
lret
lods
movsb
subb
or
adc
int
push
sarl
jmp
data16
rolb
add
dec
inc
sbb
into
jg
xorl
adc
mov
repnz
jge
sti
cmp
out
sarb
and
dec
test
jns
adc
and
test
in
pop
dec
mov
mov
pop
nop
sbb
xchg
cmp
inc
ds
loope
jp
std
inc
fcoml
lret
insl
cmp
fmull
jns
inc
in
xor
aam
movsl
mov
adc
stos
cwtl
stos
and
hlt
xchg
jae
je
ror
xchg
in
hlt
lock
jecxz
into
mov
das
das
mov
pop
mov
mov
dec
mov
mov
adc
lahf
imul
movsl
sbb
xlat
mov
test
fidivrs
pop
jl
cs
xor
sub
shll
or
mov
cltd
mov
arpl
pop
push
scas
fucom
or
adc
icebp
push
or
jb
dec
push
js
repnz
pop
je
xchg
mov
adc
adc
jns
dec
xor
aas
imul
data16
cmpsb
inc
fnstenv
out
cwtl
pop
push
and
cmp
push
jb
cmc
enter
repnz
sbb
mov
cld
push
data16
adc
cmp
sub
jno
cmp
and
pop
das
out
lods
push
cltd
pop
adc
cld
sub
insb
cmpb
add
out
aas
xchg
insb
dec
cmc
repnz
jb
rclb
adc
js
mov
negb
loope
imul
add
enter
sahf
cld
add
sub
in
outsl
mov
mov
pop
mov
test
cmp
cmp
xchg
ljmp
imul
cltd
push
xchg
out
adc
bound
es
pop
lock
xchg
lock
loop
inc
inc
shrb
imul
loope
sbb
sbb
sbb
xchg
jnp
je
push
jmp
pusha
cmpsl
orl
xor
stos
cltd
adc
jg
test
stos
aaa
je
jae
mov
or
dec
inc
cwtl
push
cmp
cwtl
rorb
divl
or
pop
aaa
add
insb
dec
std
sub
and
std
sub
inc
pop
pop
xchg
mov
nop
sarb
pop
or
outsl
sub
sbb
jmp
jmp
or
adc
dec
test
scas
lods
clc
and
cmpsb
xchg
leave
mov
inc
add
test
ret
mov
cmpsl
or
insl
mov
data16
mov
xchg
dec
enter
sub
ljmp
data16
fsubrp
dec
xlat
sarb
xor
cltd
sti
lret
and
pop
mov
push
rcll
mov
xlat
in
imul
adc
cmp
outsb
xor
xchg
lahf
push
lea
lcall
cld
inc
or
cmpsl
sbb
pop
sbb
jg
incl
aam
pushf
cmp
test
arpl
sub
jnp
adc
xor
cld
mov
mov
inc
in
cmp
dec
push
jae
fisubl
push
outsb
mov
fwait
dec
scas
and
pop
jge
xorb
or
ficoms
mov
rorb
in
mov
sbb
fcmovnb
dec
ror
xor
xchg
cli
rcll
mov
inc
sub
in
cld
push
inc
stos
mov
mov
into
js
add
mov
outsb
and
mov
xchg
in
lahf
fimull
mov
scas
shrl
adc
loop
jmp
mov
scas
inc
pop
pusha
outsl
ficompl
stos
mov
fdivrs
push
push
sar
mov
mov
insl
cmp
push
add
jnp
shlb
ret
jge
rep
mov
lds
jns
jp
inc
pop
subb
cmp
mov
stos
xchg
outsl
sbb
mov
ret
xor
cmpb
lods
and
data16
xor
pop
mov
push
push
mov
lods
loopne
sbbb
adc
jle
and
pop
adc
fistpl
enter
cvtpi2ps
push
mov
dec
data16
fstpt
sahf
push
lds
cmp
sub
jb
cs
pop
xchg
das
pop
into
pop
test
push
sub
xchg
mov
mov
pop
insl
ret
stos
fdivr
xor
inc
sub
lret
sub
pop
lcall
push
ljmp
add
les
imul
shl
imul
and
loop
pushf
imul
jo
pop
ds
mov
pop
jle
fnstsw
mov
popf
jo
test
std
mov
ss
aaa
jp
pop
xor
mov
pushf
arpl
xchg
aaa
cld
inc
and
popf
hlt
mov
pop
negb
push
aad
jne
add
insb
dec
ret
add
fstpt
popf
dec
xchg
mov
or
inc
loope
mov
ret
das
mov
out
push
and
scas
dec
cmc
stos
test
mov
cmpsl
fldcw
xor
dec
sub
dec
sub
or
mov
test
push
dec
push
pop
sar
insl
and
mov
test
es
push
pop
das
pop
mov
jecxz
dec
aaa
fsubs
pop
loop
mov
das
sub
dec
pop
inc
sbb
mov
dec
ja
inc
enter
in
mov
mov
mov
push
inc
pop
push
cmp
popa
add
mov
test
dec
sbb
add
pcmpeqb
arpl
sbb
iret
pop
mov
pop
pop
sub
pop
lea
or
fsubs
adcl
lock
ljmp
addb
xchg
xchg
lret
xchg
pop
negb
int
jecxz
or
cltd
mov
mov
mov
stc
dec
dec
adc
xchg
iret
and
mov
subb
sbb
out
sbb
lahf
xor
pop
fcompl
leave
out
insb
sub
push
dec
add
sahf
or
push
pop
ret
push
iret
lea
adc
pop
arpl
xchg
hlt
pop
cs
and
push
mov
ss
loopne
test
sbb
push
sarb
mov
into
cltd
stos
dec
mov
xchg
ds
mov
js
ljmp
sbb
test
jge
or
sahf
fwait
inc
xchg
push
js
cmp
sarl
pop
mov
ss
inc
push
push
and
jl
jns
or
and
outsb
loope
sub
popa
mov
pop
adc
add
push
mov
popl
adcb
cltd
xchg
mov
insl
xchg
adc
mov
sarl
lcall
cmp
push
or
sbb
pop
mov
xchg
jbe
cltd
call
daa
or
cmp
stos
stos
ss
adc
pop
adc
mov
sti
ror
insl
sbb
mov
mov
call
test
vpmaxub
jl
xchg
push
fxch
rcrl
inc
fisttpl
aaa
idivl
lods
mov
mov
push
jb
or
xor
and
dec
xchg
pop
push
pop
ss
or
sbb
in
mov
nop
adc
stc
push
inc
notl
add
and
xor
and
adc
push
xchg
scas
cmp
int3
jge
sbb
and
sahf
and
adc
cmc
shl
mov
pop
push
fadd
mov
into
pop
add
mov
jnp
scas
shlb
jp
fnstsw
pushf
cli
cmc
sahf
in
mov
xor
shl
jge
imul
fistpll
cmpsb
jns
xchg
out
add
jg
xlat
inc
jecxz
push
push
lret
outsb
mov
adc
movsb
cmp
inc
push
xchg
sub
inc
sub
add
stos
test
xlat
in
dec
cmpsb
cli
gs
adc
cwtl
cwtl
stc
jmp
call
fcoms
xchg
adc
dec
aaa
sub
sub
sub
cmp
mov
das
push
cmpsb
lret
rolb
sub
mov
cmpsb
sbbl
adc
cltd
mov
adc
inc
jnp
outsl
push
push
dec
js
cmp
sbbb
or
aaa
sarl
andb
out
insb
cmp
cmp
outsl
mov
or
mov
push
mov
mov
xlat
xchg
andb
and
mov
push
int
cmp
fdivrs
jne
dec
xchg
pop
xor
pop
aad
lods
push
add
out
aam
shrl
cld
stos
and
fwait
xorb
stc
xchg
and
jae
mov
rcr
dec
hlt
jge
cmpsb
push
fwait
ss
dec
jle
adc
fimuls
dec
in
xchg
rorl
pop
xor
lds
xlat
or
xor
pop
pop
in
out
adc
jge
xchg
pop
and
scas
cmc
dec
xchg
mov
sub
enter
jg
fstps
inc
cmpsl
xor
std
pop
inc
adc
fdivl
into
jns
push
pop
sub
mov
shrl
fisubs
lods
xor
adc
je
out
subb
push
rorl
and
insb
mov
xchg
mov
mov
dec
ljmp
push
ljmp
xor
and
aam
or
scas
or
outsb
mov
jo
shrb
orl
dec
mov
in
outsl
movsb
inc
jne
cmp
lahf
fwait
test
js
cmp
insb
mov
pop
lcall
sarb
in
test
lods
fwait
cmp
sarl
subl
fcmovbe
pop
mov
jecxz
mov
imull
cld
push
adc
ret
daa
and
iret
xlat
shll
pop
mov
aad
shrl
add
push
scas
fucomip
movsl
out
mov
rcll
or
cwtl
das
repnz
lahf
popf
imul
pushl
cmpl
bound
nop
push
lods
cmpsb
std
cmp
jmp
addr16
les
gs
inc
cmp
lret
cwtl
jne
sahf
dec
pop
lock
pop
push
mov
jne
inc
push
xchg
sub
stos
and
test
dec
cltd
je
lods
sub
sub
mov
push
mov
cmp
icebp
push
aam
mov
loopne
jbe
movsb
pop
and
ljmp
ss
pop
cmp
adc
test
add
jecxz
outsb
scas
lds
push
add
cmp
pop
je
mov
and
ss
mov
sahf
bound
inc
icebp
out
mov
rcll
aad
and
or
xchg
daa
rcrb
pop
ja
add
je
adc
sub
adcw
cmpsb
xchg
or
int3
pop
mov
fs
sub
jnp
fnstenv
jl
push
mov
pushf
subb
les
adc
push
sub
pop
sub
pop
ds
pusha
lret
lahf
data16
mov
sbb
inc
arpl
xor
cmp
fsubs
push
out
lock
insl
ljmp
mov
ss
push
adcb
lods
js
movsl
push
xorb
test
pop
add
pop
int
cltd
xchg
push
repz
vmaskmovdqu
leave
imull
mov
or
xchg
inc
jge
aam
dec
adc
test
pop
data16
outsl
cmpsl
lcall
call
dec
aaa
dec
jge
add
outsb
aam
cld
xchg
sar
inc
adc
ss
xchg
inc
mov
add
mov
jne
aaa
and
inc
loopne
add
mov
sbb
fldenv
and
inc
imull
adc
jg
dec
nop
mov
les
ss
rcl
sub
ret
pop
mov
fsts
daa
int
fdivrl
mov
cmp
adc
testl
mov
jnp
in
push
xorl
mov
fsub
insl
ds
pushf
mov
xlat
dec
dec
pop
xlat
push
test
mov
mov
loop
jg
jb
jmp
jb
stos
xor
and
lods
mov
pusha
ss
sbbb
ljmp
out
call
popf
cltd
shl
aaa
loop
repnz
aaa
xor
push
ret
mov
mov
xchg
or
iret
popa
mov
out
dec
sbb
or
cli
and
fidivs
cmp
cmp
insb
adc
and
dec
pusha
stc
pushf
mov
jmp
mov
pop
inc
mov
adc
das
xchg
cmp
shll
ljmp
sbb
icebp
mov
xchg
xchg
mov
xor
jle
call
cmp
mov
mull
hlt
inc
rorb
cltd
mov
cmp
and
jmp
popa
xchg
out
aam
dec
mov
mov
dec
or
xchg
jp
mov
cmp
jb
push
mov
mov
xor
fs
push
icebp
sbb
mov
pop
add
or
nopl
nop
inc
out
sub
xor
xchg
lock
jg
negb
pop
cmp
or
sub
aaa
test
int3
pop
les
jnp
int
add
and
xchg
in
xor
out
pop
xchg
mov
xor
sbb
add
sub
add
add
fsubs
lods
push
shlb
dec
sub
or
xlat
inc
adc
add
aas
testl
and
mov
mov
outsl
bound
js
aas
jno
shlb
jbe
shlb
cmp
aaa
popf
pop
mov
jge
mov
sar
dec
xlat
pop
or
adc
lods
adc
push
jle
push
repz
push
add
cmc
repnz
pop
mov
and
cmp
or
test
mov
push
std
fildl
lods
sub
sahf
push
push
pushf
pop
mov
cld
push
mov
lahf
push
iret
out
lret
and
push
inc
in
jo
aas
mov
or
adc
popf
jb
cli
pop
rcrl
stos
call
mov
dec
sbb
in
dec
add
aaa
movl
repz
mov
enter
xchg
lea
inc
cmp
imul
ljmp
in
js
jg
sbb
xchg
scas
add
pushf
jne
fcompl
shlb
fadd
ret
sub
or
bound
hlt
jbe
icebp
pop
sub
jmp
jmp
inc
lods
mov
jb
cmp
test
inc
aam
push
adc
sti
ja
cmp
adc
inc
jnp
dec
int
out
aas
lcall
mov
ret
xor
xchg
push
call
add
xor
call
xchg
add
orb
jmp
sbb
dec
loop
pop
pop
adc
pop
inc
inc
fwait
lods
movsb
scas
popl
sbb
test
adc
xor
lret
inc
les
push
adc
fcmovbe
mov
add
dec
loope
iret
lret
inc
pop
mov
cmp
cmp
xor
sbb
jp
pusha
pusha
jb
mov
mov
push
hlt
es
and
lret
push
paddd
cmp
int3
adc
jne
xor
mov
stos
orl
dec
lods
sbb
jns
mov
sub
or
mov
inc
push
add
in
lods
movsl
adc
hlt
mov
ret
jno
xchg
xchg
daa
sbb
jae
out
jmp
jb
jle
xchg
mov
ja
mov
or
dec
sub
scas
rcr
and
and
inc
sbb
fiaddl
xchg
je
mov
outsb
cwtl
fs
cmp
out
leave
test
clc
mov
push
push
add
fnstsw
test
xor
dec
outsl
jmp
jle
lock
cwtl
xchg
add
mov
add
cmpl
sub
and
loope
ss
adc
sub
push
adc
and
cmp
jo
stc
ljmp
in
mov
stos
jo
xorl
sbb
pop
cld
fidivrl
rorl
std
and
hlt
test
add
xchg
loopne
xchg
xchg
push
lea
dec
ja
xlat
inc
inc
ret
mov
fistps
cli
inc
out
sarb
mov
xchg
stc
adc
xchg
mov
adcl
aad
lods
stc
pushf
and
in
xor
cltd
repz
jp
push
sarl
test
and
and
mov
notl
push
sub
cmpsb
xchg
das
jmp
in
jge
mov
pop
rol
sub
dec
insl
or
pushf
push
outsb
repz
dec
lods
mov
push
xchg
xchg
lds
aaa
and
xor
push
dec
adc
pop
fists
pop
repnz
in
fidivrl
sti
repz
sahf
cmp
adc
inc
fstpl
inc
inc
xchg
inc
add
inc
aad
mov
add
mov
cld
arpl
sbb
test
sbb
mov
aam
add
aas
in
push
jae
lcall
cmc
popa
or
add
fnstsw
fsts
loope
mov
rcr
mov
popf
and
jg
ljmp
mov
jns
ret
out
add
mov
aam
adc
and
bound
push
rorb
fadds
mov
add
add
and
sub
adc
cmp
cld
pusha
fsubrs
stos
fidivs
or
aaa
ficoml
clc
cmc
push
sub
cmp
xor
jns
repz
mov
add
das
add
pop
pop
xor
jns
mov
cmp
stos
mov
pusha
call
test
mov
fnstsw
in
adc
rorb
cltd
test
inc
or
jge
mov
sub
or
sub
test
adc
shll
xchg
in
pop
retw
mov
push
ret
fnstcw
ds
adc
or
sub
cmp
cmp
pop
sub
out
push
adc
mov
popa
test
ss
insl
ljmp
jmp
jg
arpl
ds
aad
xchg
repnz
dec
dec
call
xchg
bound
cmc
push
repz
shl
jp
scas
mov
test
jne
mov
imul
xor
xor
adc
jge
and
mov
xor
lods
call
movsb
es
inc
scas
movsb
bound
jle
imul
stos
out
stos
lock
mov
ds
xchg
movsb
push
inc
dec
pop
jg
dec
pop
mov
lods
sub
clc
arpl
sbb
repnz
mov
cwtl
nop
lods
loopne
xchg
iret
mov
cmc
les
cld
adc
ret
js
push
clc
mov
cmp
adc
ss
orb
mov
lds
xor
loop
sub
das
mov
cld
lea
sbb
push
test
and
add
cli
testl
jge
mov
cli
cmpsb
pop
shll
sbb
fiadds
inc
and
add
xchg
add
cmpl
and
jmp
add
mov
in
cmp
ror
inc
mov
xor
sbb
pop
out
stc
sub
jo
lds
mov
loop
adc
test
inc
shrb
jno
incb
aad
push
das
sbb
aad
mov
jae
xchg
popa
stos
cmp
test
xor
iret
mov
xchg
pusha
xchg
xchg
imul
push
mov
sarb
mov
sub
stos
pop
inc
mov
nop
adc
aaa
fucomip
cmp
jp
lahf
xorl
loop
xor
push
sbb
arpl
dec
mov
push
fidivl
mov
push
into
enter
xchg
jae
mov
mov
int
adc
into
xchg
stos
push
cmp
cmp
into
loope
in
ja
aam
mov
fidivs
leave
xchg
pop
jb
or
jle
sbb
lods
jecxz
pusha
clc
add
ficoml
pop
or
mov
les
mov
loopne
inc
sahf
outsl
out
or
inc
pop
ds
into
test
out
lea
and
jae
dec
xor
test
mov
or
sbb
jno
pop
int
orl
scas
mov
in
lret
inc
loop
je
adc
aas
fnstenv
in
fldenv
ja
outsb
fnstsw
mov
inc
out
and
mov
sub
fiadds
shr
inc
cmc
jno
arpl
cmp
or
das
pushl
mov
add
repz
xadd
adc
mov
mov
in
dec
repz
fsubl
rolb
clc
xchg
loope
scas
xchg
inc
ljmp
dec
push
imull
sarl
das
in
push
xchg
pop
or
fcoml
pop
xor
dec
xor
sub
and
add
inc
test
inc
fsubrl
mov
lret
loope
inc
mov
ja
cmpsb
ret
push
jg
aaa
pop
adc
lahf
mov
xor
rorb
sbb
fs
jge
or
std
es
mov
in
mov
cmc
xchg
jmp
mov
and
nop
or
push
notl
pop
xor
or
jo
fs
in
or
pop
push
jnp
lret
loop
xchg
fwait
or
and
mov
lea
std
adc
cmpsb
or
repz
sub
pop
sbb
xchg
add
fldcw
ss
jecxz
cltd
imul
stos
jnp
icebp
jns
inc
imul
adc
jmp
jmp
scas
dec
jp
dec
pop
fdivrl
je,pt
movsb
pop
push
in
dec
mov
ret
scas
pop
push
enter
daa
aam
jne
mov
pop
jecxz
add
lock
fbstp
sbb
dec
dec
mov
insb
cmp
jl
sarb
jl
pushf
idivl
repnz
sarl
notl
ss
dec
inc
mov
and
loopne
sbb
push
push
divb
add
sub
cmpsb
jg
pop
and
mov
mov
inc
mov
xchg
jge
in
leave
das
loopne
ljmp
push
fnstenv
sahf
jle
lcall
jae
xor
scas
orl
jns
outsb
push
mov
insl
aaa
mov
mov
loope
aaa
jecxz
dec
stc
jp
movsl
cmp
or
inc
cmpsb
pop
sub
lods
dec
xorb
out
inc
mov
pop
fisubs
xchg
jge
xorb
or
shll
xchg
mov
xchg
subl
ror
xor
sti
jne
mov
cmp
push
jmp
pop
fisttps
inc
fmull
leave
shrl
cmp
lcall
sbb
int
add
int3
out
and
pushf
xchg
ljmp
sbb
mov
int3
pop
mov
cmp
loopne
pop
mov
push
in
pop
sub
pushf
jo
cmp
xchg
mov
sub
sub
push
cld
dec
sbb
pop
inc
cmp
int
add
xor
dec
mov
call
sbbb
stos
jnp
ret
fdivr
push
lods
mov
push
mov
push
shr
bound
test
inc
dec
mov
cmp
mov
cld
cmpb
mov
stos
ret
cmpsl
faddl
inc
mov
and
lds
pop
and
push
pop
push
dec
bound
pop
lods
pop
outsb
xor
push
push
in
shlb
je
repz
out
lahf
dec
bound
fdivs
mov
add
push
iret
xchg
arpl
add
aaa
popa
mov
out
and
or
mov
repnz
out
nop
das
sti
shl
clc
add
in
and
imul
cs
sbb
pushf
mov
push
ret
jns
mov
mov
int3
jno
mov
loope
jne
int
inc
sti
cltd
jp
mov
and
add
ret
jo
divl
adc
das
sbb
cmp
mov
fisubrl
movsl
add
dec
aad
test
addr16
xlat
mov
inc
pop
scas
mov
or
les
cmp
jecxz
pop
loope
mov
sub
cmp
clc
scas
xor
clc
inc
je
mov
out
and
bound
mov
mov
mov
ds
arpl
xor
and
test
lock
rcrb
pop
clc
xchg
cmpsl
lcall
and
push
lds
pushf
cmp
mov
inc
jmp
dec
outsl
fildll
out
cmp
cmp
or
out
or
mov
ss
mov
sub
fstpl
xor
inc
inc
mov
pop
push
xor
enter
push
sbb
or
lock
or
arpl
sub
mov
dec
sub
xor
pop
lea
or
sbbl
rclb
pop
into
adc
test
data16
inc
stos
xor
fcmovnb
popf
mov
jo
and
sub
jne
lret
shlb
inc
mov
inc
and
push
cli
das
out
cmp
xchg
in
push
nop
cmp
add
sub
adc
dec
cmp
or
pop
sbb
ret
pop
roll
push
cwtl
lret
jb
pop
lea
fs
pop
lcall
mov
mov
inc
add
xor
faddl
lcall
mov
adc
scas
int
outsb
xor
xor
and
or
subb
sbb
std
mov
dec
mov
call
roll
adc
push
js
push
jo
lods
push
aam
xchg
xchg
rorl
or
fwait
mov
xor
adc
jnp
mov
clc
add
std
test
fbstp
mov
pop
cld
arpl
xchg
mov
scas
mov
inc
inc
outsb
fsts
adc
hlt
loop
in
or
add
xlat
shl
xor
sub
adc
inc
out
or
mov
nop
xor
ljmp
ret
mov
cmp
sbb
sbb
sbb
test
and
call
outsb
push
push
mov
mov
stos
popa
xchg
std
fdiv
rcll
mov
nop
jno
mov
in
and
xchg
mov
sysexit
jge
aas
sbb
andb
or
mov
sti
daa
push
data16
cmp
rep
sbb
lret
pop
mov
add
adc
arpl
pop
scas
mov
adc
pop
sub
xor
aad
xchg
cmpsl
popf
jo
dec
test
fildll
call
cli
dec
fisubrl
insl
insb
dec
jno
pop
stos
inc
arpl
fdiv
inc
es
fcompl
lahf
mov
repz
mov
xchg
and
or
push
js
aam
aam
insl
xchg
xchg
cwtl
ds
sub
mulb
push
and
sub
pusha
pop
adc
call
inc
mov
xchg
and
cmp
push
push
es
out
xchg
cmc
mov
aam
loopne
aad
aad
jo
fisubl
cld
pop
lret
es
pop
sbb
push
jp
testl
or
xchg
pop
inc
jp
cmp
sbb
jnp
in
mov
hlt
sub
pop
mov
mov
mov
ret
cwtl
mov
testl
xor
push
pop
shrb
pop
xchg
add
mov
outsb
sub
xor
adc
nop
movl
clc
or
roll
cs
arpl
leave
div
pop
fcomp
outsb
pop
inc
xchg
or
lahf
leave
push
sbb
cmp
mov
mov
in
mov
push
stos
xor
enter
mov
scas
add
cmp
pop
inc
cmp
xor
add
hlt
jge
or
jbe
sub
sub
inc
add
jmp
lcall
call
sbb
stos
sub
mov
cli
push
lret
ret
push
shrb
test
sub
add
dec
sub
mov
in
imul
sub
xor
into
cmc
fisubrs
repnz
scas
ja
adc
sub
es
push
xor
pusha
adcb
das
dec
cli
adc
adc
stos
fwait
movsb
stos
mov
outsb
push
fimuls
testb
ret
stos
test
pusha
mov
outsb
mov
aas
xor
icebp
add
mov
sub
daa
push
push
test
inc
fnstsw
ret
and
arpl
lcall
jle
loope
sub
stos
fbstp
mov
add
xor
ss
jno
out
sahf
mov
into
push
cmp
aam
xor
in
cmpsb
enter
ret
push
xchg
ja
test
in
loope
insb
push
push
das
adc
jbe
lahf
jbe
adc
sub
dec
mov
fbstp
mov
std
adc
fdivrl
mov
call
push
add
outsb
das
adc
int3
repz
jp
bound
pop
jae
stc
ds
push
mov
pop
imul
xor
sbb
add
lret
jb
outsb
push
insl
mov
or
loope
fsubrs
repz
dec
sahf
imul
xor
setnp
xor
push
sbb
in
iret
mov
inc
inc
outsl
hlt
mov
arpl
xor
popa
hlt
hlt
or
rolb
repnz
or
sub
test
cmpsl
test
jge
cltd
and
sub
push
outsl
xchg
pop
std
scas
xlat
pop
pop
shlb
jge
or
xor
sahf
sarb
adc
mov
je
or
mov
fcomps
mov
xor
fisubs
sub
jnp
xchg
iret
dec
out
mov
stc
out
adc
in
mov
push
ja
sbb
clc
sbb
insb
int3
pop
push
data16
push
cli
lods
adc
shrb
mov
inc
mov
je
and
in
sti
or
stos
sbb
arpl
cld
rcrb
and
mov
sub
cmp
mov
popf
adc
sbb
out
js
lret
jnp
popf
cli
stc
push
xor
cmp
test
sub
sbb
push
sbb
mov
call
push
sub
sbb
add
adc
loope
or
mov
xor
shlb
mov
sub
jae
stos
push
lret
out
push
std
in
icebp
mov
mov
sbb
das
mulb
scas
mov
fdiv
es
push
mov
out
pmulhuw
mov
shr
inc
sbb
or
mov
cmp
sbb
add
xchg
pop
sbb
add
lret
inc
and
stos
xchg
mov
popa
in
push
rcl
lret
xchg
push
mov
shll
in
push
test
lods
add
mov
inc
test
mov
dec
jo
sbb
sbb
jbe
stos
clc
pop
pop
mov
add
mov
repz
cltd
and
roll
adc
or
cmp
adc
lds
or
out
xchg
das
xlat
jmp
sub
add
inc
leave
sti
jle
ja
dec
pushf
jge
sbb
scas
mov
divb
int
ret
xchg
cs
sub
dec
aam
stos
or
arpl
xlat
fiaddl
insl
inc
push
push
push
pusha
in
call
clc
enter
xor
fstl
fidivl
and
ret
cwtl
pop
popf
jmp
or
lock
popa
sbb
cmp
js
jnp
add
test
jne
mov
mov
mov
jecxz
adcb
clc
xchg
out
lods
cmc
jno
sub
xor
mov
lea
fmuls
cli
push
int3
ds
lahf
xchg
pop
xchg
outsl
shll
leave
pop
mov
fwait
out
test
mov
jne
sub
fistpll
mov
xchg
out
or
btr
adc
popa
sub
mov
mov
ret
inc
loopne
mulb
subb
or
push
fisttpl
jbe
loop
sbb
cmp
mov
jo
data16
imul
repnz
sbb
cli
mov
pushf
dec
mov
test
fisubrl
stc
push
cmpsb
je
fists
dec
imul
jl
or
outsl
pop
xchg
xchg
jo
ljmp
aas
out
xchg
xor
xchg
testb
pop
push
add
push
jg
ror
dec
xchg
movsb
stc
dec
scas
std
or
rcl
xchg
mov
inc
dec
pop
or
push
adcb
lahf
stc
aad
stos
cmp
sbb
push
adc
mov
imul
mov
dec
xor
pop
fsubrs
mov
sub
sti
adc
sti
cmp
repz
cmp
sub
arpl
dec
adc
fs
js
jge
jo
sbb
adc
iret
ljmp
bound
add
mov
mov
push
leave
fsubrp
out
and
js
pop
shlb
mov
push
mov
aad
jne
mov
lret
mov
std
jmp
jne
mov
shr
mov
in
cmpsl
mov
jmp
inc
push
xchg
decb
aaa
xchg
popf
subb
sub
add
shlb
or
mull
and
enter
add
mov
mov
call
stos
cmp
xchg
xchg
fildl
xchg
faddl
sahf
faddl
mov
cld
inc
les
lock
adc
xor
mov
add
push
sbb
js
xor
mov
push
pop
mov
pop
mov
inc
xlat
loop
xchg
scas
mov
imul
ret
cltd
lods
popa
repnz
jg
outsb
push
jno
pop
fimuls
unpckhps
aaa
and
aaa
decl
std
out
lds
idivb
call
dec
sub
bound
sti
pop
dec
cmpsb
xor
push
xor
test
mov
in
test
xor
pop
out
mov
dec
lahf
push
pop
mov
call
jnp
pop
jno
sbbl
sub
cli
sbb
ror
arpl
push
jmp
cmp
lods
and
sbb
loop
testl
cmp
push
pop
cmp
sub
repz
xor
ret
and
xchg
inc
ja
mov
push
scas
dec
lcall
xchg
push
int3
jle
push
fsubrl
fs
mov
ljmp
outsl
mov
fwait
in
div
mov
xchg
mov
jmp
dec
mov
andb
mov
lcall
shrb
or
ljmp
rcll
pop
iret
inc
flds
push
push
add
mov
std
insl
dec
push
or
sbb
and
sbb
jle
jns
clc
mov
popf
fs
jae
dec
and
fcmovb
and
and
push
lods
jge
clc
imul
ret
fnstcw
test
cld
outsl
imul
lret
xchg
lret
mov
dec
mov
shl
pop
arpl
fidivl
test
xor
push
adc
add
cmp
mov
push
pop
fucom
test
icebp
add
dec
dec
mov
jge
aam
pop
in
adc
repnz
repnz
cmp
fwait
divps
sbb
cmp
ret
icebp
and
test
push
or
fidivrs
sub
jecxz
ss
mov
add
xchg
data16
push
xchg
jl
adc
add
rolb
pop
movsb
test
push
dec
dec
xchg
pop
popa
lock
mov
mov
imul
mov
mov
push
dec
mov
lea
in
dec
push
in
mov
mov
mov
lods
xchg
loop
dec
sbb
cmp
cmp
push
and
shrb
adc
lret
sbb
pop
inc
loope
mov
jp
sbb
leave
unpckhps
add
pop
call
jecxz
je
cmp
mov
not
fimull
adc
enter
insl
sbb
jmp
lahf
adc
add
movsl
or
jl
sbb
xchg
inc
or
inc
js
dec
cli
push
out
das
orl
push
shll
ja
outsl
xor
push
insl
or
inc
stos
xchg
cltd
leave
push
scas
aaa
fs
mov
outsl
out
aam
in
mov
cmp
stos
mov
xor
lds
jecxz
xlat
sub
outsl
xor
jno
xchg
xorb
loop
pop
stos
arpl
js
xorb
fisubl
stc
and
fwait
shl
add
jg
pop
ljmp
mov
push
xor
push
add
pop
push
adc
jle
fistpl
repnz
sub
addr16
ret
stos
mov
inc
mov
cmp
dec
subb
pop
and
dec
inc
lahf
dec
pop
loopne
movsb
out
push
jb
jge
jno
jo
rcl
movsl
mov
jne
aad
jecxz
cmc
adc
dec
out
flds
push
mov
lahf
and
jle
mov
xchg
jnp
or
outsl
inc
sub
outsb
adc
cmpsb
int
arpl
cmp
andl
cs
pop
inc
or
mov
xchg
ret
call
adcb
pop
arpl
push
mov
or
inc
aaa
and
pop
out
adc
pop
dec
insb
subl
ljmp
xchg
insl
jecxz
adc
push
push
call
jp
insb
add
in
dec
push
sub
dec
ret
jb
sti
enter
sbb
xor
movl
xor
sbbl
les
cli
repz
js
xor
pop
es
dec
inc
push
cmp
dec
mov
aad
mov
mov
sbb
cmp
dec
jg
mov
push
aad
cld
stos
xor
cmpsl
xchg
insb
repz
xchg
inc
sub
push
sub
in
mov
dec
scas
xor
repz
mov
dec
pop
jmp
inc
lock
add
repnz
inc
mov
jl
je
push
gs
andb
hlt
out
xor
shll
stos
add
pop
lods
jns
fnstsw
arpl
shl
xor
add
andb
mov
add
cltd
ljmp
aas
adc
loope
jb
mull
es
mull
dec
inc
cld
call
lods
add
jle
popf
ret
das
into
pop
popa
out
push
dec
pop
inc
fdivrs
aad
mov
icebp
and
and
sbb
mov
sub
add
mov
shr
in
dec
adc
dec
popf
out
mov
das
shrl
inc
mov
fistps
or
in
adc
stos
xchg
cs
or
xchg
cwtl
push
xchg
repz
xchg
loop
mov
sahf
test
arpl
mov
aad
or
add
scas
and
push
out
dec
cmc
ja
rolb
mov
es
mov
icebp
lahf
xchg
xor
jbe
cmpsb
add
pushf
cli
psrld
cmp
je
jg
push
dec
aas
rcrb
jp
jmp
pop
shr
fwait
rcl
fnstenv
mov
lea
addr16
jp
push
ds
shlb
pop
dec
fs
xor
imul
mov
adc
xchg
das
add
andb
hlt
shl
imul
imul
add
jle
xor
aam
fsubl
mov
mov
stos
sub
insl
loopne
cld
lret
insb
fisubl
scas
cs
fcomi
scas
int
roll
cmpsl
loopne
fisttpl
fildll
inc
repz
int3
inc
loop
push
or
inc
insl
adc
cwtl
and
aas
repnz
call
xor
adc
jg
xor
mov
dec
pusha
jno
sarl
sti
pop
xchg
ss
roll
dec
xchg
test
in
mov
cmp
xor
stos
fcompp
outsb
sub
sub
js
xchg
fdivrs
repnz
or
shll
sub
int3
sub
js
pop
insb
and
pushf
mov
pop
or
insl
pop
dec
test
adc
inc
call
loop
sbb
loopne
dec
aas
leave
loope
inc
mov
sbb
shll
xchg
xchg
push
push
xchg
fisubrl
jb
shll
mov
push
frstor
call
xor
scas
aas
lds
ficoml
insl
xor
or
cmp
mov
push
xor
dec
mov
xchg
push
out
adc
fwait
push
mov
outsb
mov
cmp
mov
push
pop
xchg
jns
repnz
leave
mov
testl
lods
sbb
mov
std
lahf
push
mov
ss
jns
es
movsb
push
jmp
cmp
out
cmp
imul
pop
pop
pop
pop
add
sub
notl
mov
ret
ds
test
les
add
sub
fisubl
adc
xchg
das
das
or
mov
xchg
mov
fbld
mov
adc
cmp
fisubl
adc
sbb
movsb
out
push
outsb
dec
pop
popa
daa
into
or
jecxz
sar
pop
pop
mov
in
xchg
into
orl
aas
xchg
aam
adc
xor
sbb
cmp
and
dec
subb
pop
pusha
jle,pt
loope
cltd
cmp
inc
fdivr
pop
push
scas
out
mov
ljmp
or
dec
fdivrl
mov
sbb
out
fcom
mov
xchg
xchg
pop
cmpl
xchg
cmpsb
adc
pop
and
adc
cmp
xor
movsl
lods
xchg
fnstcw
jg
aam
mov
mov
sub
add
test
jbe
pop
inc
or
dec
cld
dec
add
jecxz
lahf
pop
sahf
sbb
test
daa
xor
divb
mov
testl
movups
add
xchg
push
xor
scas
xor
cmp
adc
inc
out
or
sbb
mov
jbe
lods
and
iret
sub
jbe
fisttpl
cwtl
cmpsb
lcall
mov
mov
or
pop
jecxz
ljmp
call
testl
imul
xchg
insb
pusha
bnd
push
mov
push
or
mov
cmp
sbb
sub
outsb
mov
and
jb
fisubrs
inc
loope
add
sahf
test
and
push
outsl
inc
into
mov
bound
and
inc
lea
add
test
push
mov
sahf
push
xchg
and
mov
jb
rcrb
arpl
xor
lret
test
inc
pusha
psrad
push
pop
xchg
cmp
repz
or
pop
shl
jl
mov
jge
pop
add
mov
les
dec
adcb
test
test
mov
shll
jecxz
add
mov
inc
push
xlat
mov
fcoms
inc
pop
les
mov
addr16
roll
mov
filds
cmp
or
roll
cwtl
jae
mov
cli
jne
ficompl
push
mov
pop
rcl
sub
sbb
test
add
scas
mov
test
clc
cmp
dec
fdivs
or
jecxz
mov
ficoms
push
add
and
inc
dec
jno
out
stos
aas
jne
adc
stos
xchg
mov
or
fwait
jmp
cwtl
rol
lods
call
mov
pop
inc
or
dec
aam
fsubrs
out
cmp
mov
frstpm(287
shrb
hlt
adc
xor
mov
pusha
cs
add
or
in
or
mov
add
cs
shll
dec
out
cld
pop
ss
or
xchg
and
test
jns,pn
cmpsl
test
sub
insl
inc
nop
fnstsw
or
inc
mov
in
jp
leave
call
bswap
fists
movsl
sub
in
jecxz
xor
or
sahf
push
mov
xlat
xlat
sbb
ss
pand
push
jno
arpl
and
jbe
lahf
push
inc
std
nop
adcl
inc
sbb
loope
mov
or
jo
dec
push
loopne
jmp
leave
sbb
mov
lock
fisubs
xor
rcrb
pop
repnz
or
repz
les
mov
cmpsb
mov
mov
rorl
xor
xor
mov
mov
cmp
cmp
dec
fmuls
rcll
enter
push
inc
cmp
push
in
cmpl
shl
ret
jno
and
mov
dec
popa
adc
inc
fimuls
adc
fsubrl
sbb
fdivs
mov
arpl
shlb
inc
aam
sub
dec
push
pop
pop
stos
add
mull
dec
push
xchg
popa
in
mov
stos
sarb
sbb
sbbl
mov
mov
jae
push
bound
lret
imul
rol
adc
sbb
adc
iret
push
cmp
mov
jae
xchg
cmpsl
sbb
jg
mov
xor
adc
ret
sbb
sub
aad
mov
push
fnstsw
jg
aaa
push
ret
dec
add
in
jl
and
jae
leave
cld
pop
pusha
arpl
lcall
sub
in
dec
outsb
pop
cmc
or
cmc
iret
mov
imul
inc
cmc
in
aaa
outsl
leave
pop
test
ror
mov
mov
out
and
cmp
cmp
loope
sbb
pop
or
pushl
aas
mov
out
sbb
neg
outsl
xor
outsl
mov
mov
push
cwtl
mov
xor
dec
or
cmp
ds
jecxz
aam
adc
int
lods
mov
lods
ja
mov
sub
mov
adc
adc
jo
mov
adc
sarl
fstpl
push
out
sub
xor
das
sbb
or
xor
inc
popa
xchg
jno
test
pop
testl
sub
mull
aas
fisttpll
test
mov
loope
cmpsb
mov
fmull
mov
pop
sahf
pop
jno
stos
mov
or
in
subb
xlat
icebp
fsubrp
push
pop
sahf
jp
sub
ret
ret
repnz
cmp
and
jb
ja
xchg
xor
sahf
jne
pop
xor
int
sbb
push
and
sti
xchg
push
cmpsl
lahf
bound
xchg
insb
stos
fsubrp
popa
ljmp
loop
and
push
pop
or
add
cld
cli
adc
mov
mov
pop
cmc
lcall
imul
fisubrs
sub
clc
add
std
test
or
push
jle
fdivrl
xchg
shrb
call
xchg
aaa
push
sahf
sub
sbb
test
sub
xchg
adc
sarl
jecxz
or
mov
mov
orb
lret
loope
lods
and
xchg
mov
lahf
shl
jecxz
enter
iret
xor
pop
xchg
decl
jo
sahf
rcr
xchg
ja
pop
inc
inc
in
or
jle
xor
rorb
jg
adc
mov
subl
sar
xor
sti
cld
fbstp
push
dec
es
push
jno
lea
fs
sub
int3
lods
push
hlt
jmp
enter
inc
and
push
movsl
cmpsb
ficompl
dec
jecxz
mov
pusha
mov
scas
mov
loop
adcl
popl
lea
push
jne
call
aaa
push
in
out
mov
inc
fwait
dec
jl
add
jbe
adc
cmp
dec
sarl
jo
jnp
mov
jmp
or
stos
dec
aas
inc
xor
jbe
inc
dec
add
movsl
xchg
push
lock
sahf
lahf
push
sbbl
mov
stos
movsb
cmpsl
add
mov
fildl
test
aad
mov
sbb
sti
imul
cmpsb
loope
push
shl
imul
aam
out
inc
xor
insl
inc
movsl
clc
sbb
jno
lahf
outsb
cs
mov
mov
cwtl
push
mov
dec
xchg
cmp
insb
movsl
into
cwtl
xor
subb
insl
leave
test
mov
xor
mov
adc
cmpsb
inc
mov
pop
mov
dec
lret
mov
clc
in
sub
jecxz
testl
inc
and
pop
shlb
push
in
sbb
xor
dec
xor
ret
mov
imul
testb
dec
xchg
xchg
mov
aaa
adc
mov
mov
sbb
ljmp
cmp
lahf
dec
cld
mov
popf
add
and
ret
stos
xor
loope
adc
decb
cs
or
loopne
adc
mov
xchg
push
cmpb
mov
and
dec
out
push
mov
mov
pop
push
or
rcll
inc
dec
sbb
cltd
push
pop
mov
pusha
adc
cli
inc
sub
cltd
mov
mov
repnz
test
int
xor
nop
jae
shlb
sbb
xchg
cltd
stos
jo
rcrl
fwait
dec
xor
jg
outsb
aaa
xchg
sub
xchg
shrb
das
xchg
xchg
jns
popa
xor
test
pop
ja
icebp
sbb
ljmp
inc
dec
pushl
mov
dec
rolb
push
add
mov
fcoml
je
pop
xor
xchg
dec
lods
push
dec
scas
or
fdiv
stos
mov
insb
and
sub
fwait
or
jno
fclex
push
jns
adc
loop
mov
adc
fucomi
sub
pop
int3
lea
push
jmp
jp
fnstsw
add
and
xchg
ret
gs
adc
rcl
pop
and
cli
xor
sar
cmp
out
into
push
push
fisttpll
lea
out
mov
les
mov
dec
push
scas
dec
dec
jmp
mov
adc
clc
clc
xorl
dec
data16
sarb
mov
shll
cmpsb
xor
movb
aaa
mov
xor
mov
cmp
pusha
mov
cmp
xchg
divb
and
push
mov
sbb
int3
pop
repnz
loope
push
les
daa
pop
sub
pop
dec
iret
loope
inc
loopne
inc
int
loop
fs
or
mov
out
sub
testl
xlat
and
stc
sub
in
pop
or
std
sbb
fcmovu
sub
aaa
dec
imul
faddl
int
stos
mov
loope
outsb
and
push
out
fadd
xchg
xor
lret
jno
xor
xor
filds
xor
jnp
dec
lahf
inc
mov
bound
iret
add
sub
jne
aas
dec
out
or
subb
inc
fisubs
mov
cli
imul
inc
aam
inc
imul
sub
aad
imul
sub
mov
jnp
sahf
mov
and
mov
popf
loop
outsb
out
jle
punpckhbw
jle
mov
fisttpll
icebp
xchg
inc
mov
inc
inc
sbb
or
outsb
xor
neg
jb
cli
cli
ss
push
add
mov
mov
xor
jmp
dec
fwait
mov
pushf
push
add
nop
ss
in
pop
ret
popl
stc
lea
xor
inc
push
inc
mov
cltd
aas
mov
pop
jge
jmp
pusha
ja
inc
inc
mov
jne
outsb
push
mov
stc
int
imul
xlat
pop
adc
insl
imul
xchg
inc
sub
out
je
iret
jmp
lock
dec
mov
les
fsubr
mov
push
nop
jne
sbb
daa
add
pop
jge
out
in
pop
xchg
dec
push
out
ror
xor
add
imul
jb
pop
and
sahf
adc
inc
mov
dec
add
in
inc
icebp
mov
pop
xchg
cmc
or
pusha
lods
data16
cmp
sub
cmp
movsl
cmpb
test
jmp
leave
mov
xchg
insb
ja
push
sbb
scas
jae
popf
jnp
and
xor
das
lahf
outsb
jne
pop
call
adc
sbb
stc
push
pop
push
mov
enter
or
popa
cmp
incl
push
fisttps
jmp
xor
std
inc
mov
adcb
ret
xchg
mov
adc
jbe
xchg
jge
imulb
dec
daa
loopw
jb
out
in
and
int
pop
or
mov
add
test
mov
mov
mov
rorb
and
orl
lods
fnclex
jg
and
pminsw
xlat
cmp
mov
adc
clc
cmp
daa
jge
cmpsb
adc
mov
repz
pop
mov
mov
mov
mov
out
loop
out
pop
arpl
add
xor
jg
loope
adc
xor
stos
mov
cmc
aam
dec
adc
pop
push
xor
mov
xor
call
mov
ret
sbbl
andb
sbbl
test
mov
es
mov
shl
jmp
adc
xor
mov
out
push
out
xor
outsb
and
sbb
pop
sti
xor
inc
lahf
roll
cmp
adc
js
ljmp
and
inc
add
cwtl
xchg
pop
stos
pop
push
mov
push
pop
cmpsb
adc
imul
pop
arpl
cld
imul
mov
xor
addl
ja
xlat
inc
adc
scas
arpl
adc
je
pop
jge
scas
add
bound
js
dec
dec
add
rclb
sarb
push
rcrb
testl
xchg
adc
lcall
fdivrl
jge
xlat
fistl
pop
insl
mov
call
sahf
pop
add
jb
mov
aad
dec
push
xchg
mov
cmpsl
pop
imul
push
cmp
or
push
cmp
imul
in
scas
mov
mov
mov
movsl
or
pop
xchg
stos
jmp
fwait
ret
lea
aam
lds
enter
sti
loope
dec
or
mov
fdivl
jecxz
sarl
fnsave
xchg
jnp
mov
loope
and
push
sub
sub
push
shlb
mov
lcall
pusha
rcll
add
aad
inc
mov
or
int3
xchg
jl
mov
pop
in
fstps
cmp
add
aas
andl
push
lahf
dec
sbb
sti
or
sbbb
cld
pusha
imul
imul
inc
xor
or
sbb
mov
or
data16
inc
les
inc
cmp
push
aad
jno
mov
inc
daa
adc
fldt
shrl
push
cmp
das
rcll
xor
jp
jnp
push
data16
sbb
repz
aam
call
adc
sub
or
xchg
call
sub
xchg
cmp
mov
shll
mov
mov
push
jecxz
inc
push
scas
dec
imul
cmp
mov
cmc
test
add
xchg
pop
dec
mov
sub
mov
add
das
arpl
cli
cmp
dec
sbb
das
mov
ljmp
sbb
sbb
getsec
icebp
lcall
les
call
or
push
outsl
push
mov
xchg
movsb
inc
arpl
fistpl
lahf
sub
xlat
add
out
lea
negl
ja
iret
add
jnp
sbb
cmp
lret
push
out
adc
ja
xchg
mov
dec
sub
mov
out
inc
in
pop
or
insb
push
js
adc
mov
jg
pushf
aam
pop
mov
cmp
mov
fcmovb
cmp
xlat
jmp
daa
fstl
cmpsb
imull
imull
cmp
sbb
lcall
fwait
and
pop
pop
xor
cmp
lret
testl
sbb
aad
xchg
notl
mov
out
jmp
xor
adc
or
int3
jne
es
scas
push
loop
hlt
pushf
push
int
dec
ret
sahf
xchg
divb
inc
fisubrs
inc
mov
cmp
mov
mov
or
testb
jge
or
push
xchg
sub
xchg
imul
lret
mov
mov
outsl
xor
pop
xor
lock
andl
insb
xor
push
xchg
add
pushf
int
aam
nop
addr16
in
nop
and
or
test
outsb
inc
or
lds
push
push
push
jbe
fld
fsts
pop
and
out
das
hlt
pop
hlt
sahf
out
mov
or
dec
adc
mov
push
gs
fisubl
in
pop
jne
popf
bound
mov
aas
pushf
pusha
mov
xchg
rclb
sbb
loop
not
xorl
stos
ja
divb
xchg
jge
loopne
aam
icebp
insb
scas
test
jne
test
lret
adc
and
sub
jmp
call
in
push
xchg
sub
aaa
mov
dec
mov
dec
out
call
shl
pop
cs
ss
or
mov
mov
or
data16
sbb
xor
add
loopne
pop
mov
cli
jle
inc
or
mov
push
xchg
fstpt
mov
cmp
pop
bnd
ret
dec
xchg
xchg
pop
push
in
lea
je
cmp
adc
push
sub
enter
add
repz
callw
and
dec
cmp
or
mov
test
xchg
mov
xlat
incl
gs
rclb
xchg
dec
mov
inc
inc
rclb
hlt
dec
stos
jmp
shr
orl
mov
movsb
xor
xlat
pop
mov
outsb
ja
sbb
ds
das
cmp
push
int
arpl
dec
roll
clc
push
push
js
jbe
daa
mov
test
adc
das
push
nop
orb
andb
mov
lea
data16
lret
cmp
orb
pop
adc
mov
js
test
test
pop
inc
or
hlt
fucomip
push
xchg
mov
jns
xchg
dec
push
lods
ja
mov
ljmp
stos
aad
fs
imul
dec
mov
arpl
iret
pusha
sbb
int
and
mov
cmp
je
test
add
adc
xchg
dec
jle
mov
cli
fisttpll
adcl
aad
cmc
or
outsb
add
gs
mov
in
sbb
xchg
mov
js
adcl
dec
test
roll
addl
adc
fcmovnbe
jle
push
scas
cwtl
movsl
sahf
dec
jmp
mov
adc
outsl
pushf
adc
rclb
jnp
lahf
lret
out
and
std
sub
in
outsl
xor
or
inc
out
mov
leave
iret
xchg
mov
dec
ljmp
mov
adc
shlb
add
xor
es
fldt
cwtl
sub
xlat
aaa
das
loope
aas
aas
push
ficompl
sub
and
aam
sbb
loopne
and
or
and
jmp
xchg
adc
push
into
addr16
sbb
addl
push
mov
cltd
jmp
lods
or
movsl
mov
jmp
dec
mov
icebp
out
xor
mov
pop
sub
xor
dec
mov
rcl
jmp
pop
adc
push
mov
enter
rcrl
stc
movb
out
jo
std
pop
shrb
pusha
sbb
call
mov
xchg
cs
repz
add
pusha
and
cmp
sbb
push
xchg
mov
dec
cltd
test
mov
inc
jl
xor
cmpsb
or
sbb
push
test
das
mov
inc
add
sub
inc
adc
push
lret
and
xor
int3
pop
aam
in
adc
pop
mov
sub
jno
in
std
vmaxsd
dec
inc
jge
jl
sbb
mov
and
jmp
cmp
xlat
testl
mov
cwtl
dec
in
dec
nopl
cltd
pop
shr
cld
in
jg
sbbl
dec
in
mov
ret
ja
ljmp
jns
lods
jmp
mov
mov
mov
cmc
fcomps
aaa
jne
or
or
push
in
or
dec
dec
movsb
mov
movsl
cmp
js
dec
sbb
adc
mov
jbe
push
push
or
and
lea
ret
xor
es
les
cltd
fsubr
leave
xor
sbb
repz
push
push
cmp
cmpsb
cs
and
jbe
lock
popf
daa
mov
jbe
dec
xchg
adc
subb
push
inc
add
add
or
xchg
pop
shrl
push
imul
je
cmp
pop
push
sbb
cltd
mov
jge
xor
addl
inc
push
push
push
push
xor
fisttps
mov
imul
dec
fisubl
adc
pop
scas
sbb
pop
imul
add
mov
lret
adc
bound
mov
loope
mov
dec
cwtl
inc
add
dec
inc
xchg
add
mov
lret
ss
leave
hlt
addr16
into
dec
adc
push
inc
inc
dec
push
outsl
daa
inc
add
cwtl
xor
mov
or
mov
out
add
rcll
cmp
inc
fimuls
inc
lods
testl
xchg
dec
clc
sarl
cmp
cmpsl
cltd
faddl
sub
pop
pop
fdivl
hlt
jl
addr16
and
test
sahf
arpl
or
and
gs
push
push
cld
push
xchg
not
mov
insl
cmp
push
out
fabs
pop
push
and
repnz
push
iret
popf
push
outsl
lea
pop
sbb
xlat
mov
into
xor
and
cmp
pop
jbe
dec
lahf
hlt
pop
cmp
lock
scas
stc
push
ja
xchg
push
idivb
fxch
ljmp
inc
inc
jmp
jp
popf
xor
adc
sbb
pusha
mov
bound
fisubl
xchg
xchg
jle
in
xchg
jecxz
add
or
push
jb
adc
outsl
insb
mov
loope
cmp
mov
mov
fldcw
lret
cld
inc
fwait
shll
and
faddl
mov
mov
les
mov
aam
jne
ja
push
roll
mov
imull
sub
cmpsb
or
lcall
repz
fdivr
or
rcrl
add
fsub
or
xor
push
jbe
mov
cmp
or
imul
cs
lret
pop
imul
adc
push
push
fstl
movsl
fcmovu
cmp
loop
mov
xchg
mov
pop
fisttpl
pop
or
mov
iret
lea
sti
inc
sbb
push
mov
imul
push
pop
lahf
insb
int3
adcb
frstor
repz
sbb
mov
sbb
repz
push
push
sub
imul
pop
iret
mov
dec
aad
cmc
icebp
xchg
or
mov
es
xor
mov
xchg
gs
xchg
sahf
xchg
into
lret
cmp
mov
hlt
jno
sbb
push
push
xchg
jnp
pop
testl
sbb
jb
je
nop
pop
lock
pusha
ljmp
cmpsl
les
inc
pushf
hlt
rclb
repnz
inc
mov
dec
or
scas
dec
in
pop
adc
cmp
in
cltd
or
subb
mov
mov
jecxz
hlt
pushf
mov
out
imul
das
lret
jne
jns
mov
sbb
and
test
cli
out
das
jbe
adcb
pop
das
mov
and
jmp
jle
pop
jp
mov
sub
lods
or
jmp
sub
in
stos
imul
int
not
int
pop
or
jns
pop
pushf
push
jg
mov
lock
dec
adc
fimull
mov
insb
mov
mov
sti
pop
scas
call
test
pushf
lret
xor
cmp
xor
jbe
cltd
mov
movsb
pusha
sub
xchg
push
xor
sahf
push
clc
data16
sub
or
adc
sbb
std
sbb
flds
xchg
aaa
notl
xor
mov
mov
aam
daa
movsl
in
fdivp
mov
sbb
cld
jae
dec
jno
push
dec
add
fs
out
addr16
mov
push
ret
fisttpll
testl
arpl
mov
inc
add
push
xchg
jns
je
lock
icebp
dec
jmp
xor
jno,pt
addr16
testl
or
mov
push
mov
jmp
das
push
xor
jle
cld
add
add
jo
dec
cmp
adc
aad
insl
test
mov
mov
and
int
or
dec
fldln2
lock
xor
cmpsb
int3
cmpsl
outsb
sbb
mov
pop
jl
or
mov
jecxz
or
mov
mov
insb
daa
and
cld
adc
sub
test
dec
fcmove
jae
jbe
out
adc
xlat
hlt
sbb
push
orl
loopne
shll
popa
test
ficomps
cmp
sbb
sbb
add
pop
dec
xor
fdiv
jle
push
jg
dec
xchg
add
lret
sub
xor
pop
lcall
adc
sub
pushf
jns
mov
dec
xlat
and
xchg
test
nop
jg
jb
push
sbb
hlt
adc
movsl
and
insb
nop
push
ja
push
out
jae
jne
out
jp
pop
mov
push
ss
ja
dec
mov
jecxz
sbb
mov
addr16
cs
bound
cld
in
stc
jp
cltd
aad
loopne
dec
xchg
cs
dec
push
lret
mov
das
ret
xor
into
enter
dec
xor
mov
out
inc
filds
xchg
dec
sub
inc
insl
mov
mov
loopne
push
add
addl
push
xchg
popf
mov
sub
mov
and
out
cmpsb
cmp
mov
xor
mov
jecxz
lcall
gs
inc
dec
dec
lcall
aas
ret
xor
xchg
pop
aad
sub
dec
mov
test
jl
sti
stc
add
arpl
mov
scas
ljmp
aad
jns
mov
sbb
popf
jmp
fdivs
sti
inc
xchg
es
rcrl
insb
jbe
xor
cmpsb
jns
sub
jb
test
orb
dec
inc
dec
insb
mov
dec
movsb
mov
addr16
adc
pop
mov
dec
xchg
iret
adc
mov
inc
shlb
pop
and
negb
ror
mov
fs
sahf
arpl
mov
popa
das
ss
sarb
scas
ja
scas
gs
dec
sub
dec
jle
cmpsb
call
sub
nop
stos
dec
jb
fwait
mov
mov
out
out
jb
or
adc
mov
arpl
out
sub
adc
fldl2t
sub
fs
aad
in
cmp
daa
mov
inc
add
push
pop
lods
hlt
dec
flds
and
push
repz
not
das
in
mov
dec
ret
adc
jle
dec
aad
sbb
mov
je
add
xlat
add
or
fwait
call
cmp
leave
sbb
rcl
divl
xor
pushf
mov
add
xchg
sbb
cmp
scas
inc
add
xchg
aaa
es
imul
fdivrp
xchg
cmp
mov
imul
cmc
add
inc
popf
orl
or
lret
je
aam
pop
fisttpl
adc
pop
jbe
lret
repz
xor
sub
push
outsb
ljmp
imul
test
fmull
into
shl
orb
pop
jne
imul
out
pop
push
jl
xchg
cli
push
rorb
xlat
sub
push
xor
jl
sbb
addr16
mov
sbb
xchg
daa
mov
out
fucomi
and
cmp
in
mov
daa
loop,pn
pop
cmp
out
rcrl
call
xadd
fs
sbb
popa
in
and
lea
test
imul
adc
sub
repz
stos
iret
in
stos
sub
imul
sbb
insb
add
inc
dec
dec
sbb
push
xchg
xor
es
add
cltd
dec
ss
sbb
fs
stos
mov
jg
lods
mov
push
push
inc
xor
cmp
iret
cmp
lods
in
inc
mov
outsl
in
movsl
sbbl
xchg
xor
in
inc
pop
jecxz
cld
mov
addl
jbe
sub
fsubl
dec
push
xchg
dec
mov
iret
dec
dec
mov
rolb
incl
push
iret
or
movsl
repnz
xchg
inc
mov
les
jge
ror
inc
cmp
cmpsb
sbb
mov
pop
ja
call
je
mov
scas
cmp
rcrb
mov
aad
dec
mov
aaa
aad
sub
fists
hlt
and
xor
push
lock
cld
push
mov
sbb
xlat
pusha
mov
inc
nop
bound
icebp
mov
cmp
lock
imul
adc
orl
adc
or
dec
lods
jne
leave
movsl
adc
testl
shrl
cltd
in
inc
mov
inc
stos
jmp
mov
dec
cmc
push
fmuls
pop
jecxz
mov
dec
shl
push
pop
lea
mov
mov
or
mov
push
inc
aam
add
stos
scas
jns
lods
not
sahf
mov
stos
and
pop
shl
test
inc
jno
dec
in
movsb
movsl
push
mov
js
es
cmpl
push
sbb
ss
and
or
cs
inc
loope
js
outsl
sub
dec
mov
dec
aaa
mov
push
adc
into
aaa
into
push
cld
cli
mov
jge
sub
lret
movsl
movsb
pop
cmp
xor
push
jecxz
push
sahf
lret
adc
call
call
icebp
jmp
es
cmp
loope
xchg
enter
stc
movsb
push
xchg
add
sti
aaa
dec
cld
cwtl
adc
jmp
das
mov
pop
mov
pop
insl
mov
add
mov
mov
push
push
test
std
lea
xchg
rcrl
inc
xor
test
mov
lds
addl
shr
mov
jb
sbb
xor
cs
rcrl
call
mov
push
sub
mov
push
xchg
incb
or
int3
sbb
scas
fisubrl
mov
mov
xchg
or
mov
fwait
in
shll
push
int
add
push
mov
add
push
int
inc
push
inc
ja
xchg
sub
stos
push
cld
lods
mov
mov
fucom
adc
pop
cs
jle
sbb
loop
add
cmp
mov
sub
and
insl
xchg
decl
jne
mov
loope
xlat
jg
pop
jmp
aas
lea
xor
or
imul
jbe
push
inc
sub
test
cmp
xchg
into
push
jge
aas
adc
adc
mov
cmp
push
into
shlb
pushf
sbb
enter
mov
sub
aaa
mov
push
repnz
cld
push
push
cmp
sbb
test
loope
mov
fbstp
in
xchg
adc
call
inc
dec
int3
or
and
adc
in
aad
and
lods
cmp
ret
pushf
and
bound
lea
pop
xchg
xor
jmp
push
dec
jnp
jecxz
and
and
imul
dec
pop
mov
add
sbb
push
in
orb
in
jns
subl
dec
cwtl
subl
bound
jnp
xchg
xchg
sub
scas
or
cmp
out
mov
sub
mov
push
push
cmp
mov
mov
add
pop
or
xchg
mov
bound
adc
add
std
jge
repnz
inc
sti
jmp
mov
push
sbb
subps
popf
inc
add
ss
call
cmpsl
lods
cwtl
aad
jb
add
and
out
mov
sbb
testb
clc
pop
sub
sub
xchg
dec
mov
in
stc
daa
mov
je
mov
hlt
lea
mulb
es
dec
jle
cmp
xchg
test
sbb
outsb
test
arpl
out
xchg
int
out
xchg
fadd
dec
dec
call
xor
mov
adc
fsubr
jns
push
divl
insb
icebp
icebp
loope
orb
test
cmp
xchg
mov
ret
mov
cmc
and
hlt
sti
push
psubsw
outsl
inc
jno
mov
leave
dec
aas
aas
data16
fisttpll
xlat
int
iret
icebp
mov
int
imul
mov
xchg
sar
icebp
mov
sbb
ret
mull
cwtl
push
imul
test
or
insl
fiaddl
adc
cmp
cli
jge
inc
sar
lahf
push
pop
and
mov
stc
addr16
fnstenv
push
das
jmp
jecxz
push
lock
mov
adc
movsb
repz
add
dec
out
aam
mov
jb
ds
fdivl
aad
imul
call
cltd
cmp
dec
divb
imul
add
push
cmp
cmp
cmp
inc
mov
mov
scas
cmp
jnp
ljmp
dec
xchg
ret
lods
sbb
cmp
xor
imul
or
fimull
pop
aad
int3
stos
ret
pop
sti
rcrb
adc
xor
xor
dec
jae
cmpsb
inc
clc
fidivrl
mov
adc
pop
dec
cmp
or
aaa
xchg
mov
mov
lret
pop
pop
daa
and
jg
pop
test
add
fadd
lahf
int
popf
pop
ret
outsb
fisttpl
sahf
inc
in
sbb
les
sbb
xchg
fisttpl
mov
cmp
stos
mov
push
xchg
jl
imul
sub
dec
cmp
mov
iret
stos
out
insb
clc
add
es
insb
imul
push
es
xor
mov
mov
ret
andb
xor
call
pop
push
shrb
nop
dec
adc
or
dec
ljmp
arpl
jo
movsb
sub
fadd
sahf
fcomi
and
cli
cmp
dec
es
add
cmpsb
sbb
rcr
cmpsl
cmp
imul
xlat
popa
mov
pop
test
dec
lret
xchg
and
pop
jl
cmp
aam
and
ror
xchg
negl
mov
xor
pop
pop
mov
mov
test
out
sub
lock
lret
xchg
js
out
xor
push
pop
aad
dec
add
stos
push
lcall
or
sub
insl
cld
dec
inc
and
xor
xchg
xchg
sbb
shll
dec
sub
jmp
pop
mov
mov
loopne
je
sbb
