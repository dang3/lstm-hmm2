in
test
or
mov
pop
mov
sbb
xchg
sbb
les
fistpl
mov
adc
mov
pusha
jle
lods
jg
sbb
popf
adc
cli
jnp
inc
mov
adc
pusha
shlb
sub
jle
pop
jmp
repz
push
test
mov
stos
repnz
xor
xor
pop
xchg
pop
mov
push
aad
faddl
mov
cmovno
or
lahf
inc
ja
sub
fnsave
jb
arpl
push
sbb
dec
pop
andb
dec
sbb
mov
aaa
gs
shlb
or
int
mov
adc
insl
mov
mov
push
lea
dec
add
mov
mov
scas
lret
fistps
jge
dec
pop
cmp
arpl
lock
xchg
mov
repz
push
cld
jmp
adc
push
xchg
fildll
pop
stos
outsl
mov
mov
movsl
nop
aaa
stc
add
push
sarl
pop
fcmovnb
push
ja
jmp
and
pop
jg
mov
shlb
inc
sbb
add
sub
push
xor
sahf
dec
xor
imul
leave
pop
mov
xor
int
lret
cmpsl
ret
flds
mov
cmpsl
pop
xchg
out
clc
cwtl
es
lods
mov
shl
inc
push
fwait
ret
dec
lahf
pop
es
inc
adc
xchg
lret
sbb
out
test
lods
sti
cmpsb
pop
xor
mov
lcall
lret
ret
lock
outsl
sbb
add
jp
imul
add
lret
movsl
dec
sbb
xlat
pop
sbb
test
jmp
push
mov
and
cmp
ror
inc
pop
cld
leave
sbb
jno
inc
fmuls
fmuls
jp
sbb
push
stos
jge
inc
lcall
jle
imul
negb
mov
sbb
jmp
cmp
int
cmp
js
mov
inc
sbb
aad
dec
shlb
dec
frstpm(287
or
adc
inc
adc
fsubr
dec
vpmullw
pop
rcll
fsubs
sar
jecxz
fnsave
inc
fwait
enter
mov
push
sbb
test
cmpb
push
rcll
pop
add
cwtl
dec
and
mov
mov
test
add
int
fs
mov
jns
mov
mov
pop
push
jle
pop
lock
into
sbb
add
pushw
cwtl
dec
or
nop
push
stos
mov
aaa
fadds
mov
movsl
mov
fcmovnu
ljmp
popf
lret
icebp
add
cmp
mov
xchg
fsts
sub
ficoml
cs
imul
aad
xor
xor
sbb
push
leave
jmp
or
xchg
into
xor
addl
mov
hlt
xor
jo
xchg
adc
stos
cmp
lret
xchg
pop
fnstenv
sub
xchg
push
sahf
push
jle
iret
xchg
pop
pop
je
cmp
xchg
push
jle
clc
enter
add
jle
xor
daa
hlt
xor
popf
outsl
dec
mov
loope
and
enter
xor
out
push
shlb
roll
mov
adc
setg
daa
push
inc
sti
lds
pop
and
mov
shll
pop
adc
add
fs
popf
pushf
cmpsb
xchg
and
insb
mov
and
in
mov
lret
lcall
sbb
mov
scas
xchg
bound
cwtl
nop
popf
mov
or
jp
xchg
or
shl
mov
adc
adc
cmp
mov
push
or
lahf
scas
pop
jno
in
rorl
sbb
andl
jmp
or
inc
pop
jmp
and
dec
mov
fptan
stos
cmc
mov
repz
inc
insl
out
jmp
or
cmp
clc
rolb
scas
inc
cltd
enter
push
adc
jp
sub
sub
out
jne
mov
mov
shlb
ret
cmp
and
mov
test
fwait
mov
inc
mov
cld
daa
fnstenv
mov
inc
sbb
inc
sbb
or
roll
lret
inc
sbb
daa
push
mov
pop
test
mov
pop
mov
jns
xchg
and
jae
push
clc
mov
mov
xchg
add
cmp
or
cmp
adc
lock
mov
mov
ljmp
jnp
sbb
jge
pop
xor
fwait
js
jp
mov
mov
cmc
cmp
add
xor
push
psllq
dec
sarb
clc
bound
pop
idivl
stc
repnz
or
add
mov
roll
mov
jnp
sbb
mov
in
int
xor
jb
add
and
sub
enter
aad
or
add
fdivrl
mov
loop
ljmp
xchg
div
cmp
xor
rcrl
add
mov
lahf
fcompp
inc
pop
cli
add
cltd
xchg
adc
clc
in
and
jmp
cwtl
cmc
xor
sbb
mov
scas
xchg
bound
cwtl
nop
popf
mov
or
jp
xchg
or
shl
mov
adc
adc
cmp
mov
push
or
lahf
scas
pop
jno
in
rorl
sbb
jl
clc
jle
je
jmp
or
inc
pop
jmp
and
dec
mov
fptan
stos
cmc
mov
repz
inc
insl
out
jmp
or
cmp
clc
rolb
es
cltd
enter
push
adc
jp
sub
sub
out
jne
mov
mov
shlb
ret
cmp
and
mov
test
cmc
lret
clc
cmp
inc
pop
pop
sub
mov
or
xlat
adc
sbb
test
xor
and
xor
stos
sub
push
mov
push
dec
sbb
pushf
cs
mov
sahf
das
xchg
stc
cli
in
test
or
ret
bound
and
xchg
ficoml
outsl
les
sbb
inc
cld
repnz
movsl
fstl
jnp
dec
je
into
xor
sbb
filds
adc
mov
andl
dec
adc
rorl
mov
in
dec
and
ret
inc
gs
inc
or
and
add
int3
sbb
push
inc
cltd
enter
jo
dec
push
int3
insb
enter
adc
or
cmc
enter
xchg
push
adc
out
mov
or
pop
jp
arpl
pop
and
cmp
mov
cmp
pop
rol
cmp
insl
cltd
popf
sti
jecxz
arpl
inc
sbb
inc
aas
rolb
cmp
sbbb
inc
sbb
dec
sbb
inc
lods
push
and
leave
xchg
inc
sbb
dec
pop
inc
mov
bound
call
xor
push
sub
add
push
add
xchg
stos
sti
push
fimuls
mov
sarl
dec
xor
cmp
push
fcompl
jmp
mov
js
dec
xlat
push
mov
sbb
mov
in
aam
fdivs
aaa
rcr
xor
sbb
daa
adc
test
gs
inc
rcrl
xchg
pop
into
fmuls
mov
jne
jecxz
adc
add
inc
dec
lahf
cmc
iret
pop
push
out
aam
pop
pop
enter
mov
add
insl
sub
in
into
hlt
ja
in
xor
shl
lcall
dec
xchg
mov
sbb
in
dec
push
divb
push
imulb
and
mov
sbb
add
inc
cmp
movsb
push
test
lret
jae
and
int3
xchg
sbb
pop
pop
repz
mov
cmpsl
xchg
test
inc
addr16
mov
xchg
add
pop
mov
adc
sub
mov
xor
lds
push
fsub
jmp
pushf
sahf
xchg
cmp
push
pushl
cmp
je
loope
into
inc
fnstsw
or
pop
inc
sbb
adc
iret
mov
test
adc
es
xor
xchg
sub
fdivrl
and
push
push
mov
mov
sbb
mov
test
inc
sub
sub
push
and
lahf
pop
pop
add
fucomi
pop
xchg
sbb
dec
xor
into
sbb
out
mov
sub
imulb
jo
pop
nop
push
popa
sbb
inc
pop
mov
les
in
popf
sti
xchg
lahf
cmp
lds
sti
lods
inc
sub
xlat
std
int3
jmp
repz
jo
shlb
push
cmp
add
add
inc
cmp
jmp
pop
scas
inc
jmp
dec
xchg
cs
pop
jg
pusha
mov
loope
cmp
mov
stc
sub
test
out
jo
dec
sbb
add
dec
mov
icebp
or
or
dec
into
inc
push
fidivrs
jge
imul
popf
cmp
imull
xlat
dec
js
cmp
fstl
sbb
push
loop
adc
sub
loop
decb
sbb
mov
sbb
out
and
sub
call
push
cmpl
lds
ds
imul
flds
push
dec
adc
mov
stos
mov
mov
mov
jb
dec
inc
std
movsl
rcll
loop
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
shlb
jo
add
aam
adcb
add
pop
push
xchg
ret
cltd
fcoml
pushf
scas
adc
jmp
push
jg
push
cwtl
mov
mov
xor
cmp
add
jecxz
sub
mov
dec
aam
pop
mov
and
adc
xchg
fists
push
loope
lods
insl
jbe
jp
enter
jg
movswl
jmp
std
mov
sti
and
test
push
sub
enter
lea
cmp
aas
ljmp
lahf
test
pop
test
jge
jmp
cmp
pop
mov
movsl
add
jno
cmp
sbb
imul
mov
mov
negl
sbb
test
push
in
xor
rcll
mov
jae
add
sub
mov
rorl
add
xchg
lcall
sub
add
jmp
pop
pusha
fwait
mov
lds
std
in
mov
leave
loop
in
nop
xchg
sbb
or
mov
rorl
mov
jo
push
xchg
lahf
mov
stos
icebp
lea
stos
cmp
jb
pop
mov
mov
shlb
inc
lods
jg
mov
test
sub
cmp
ret
popl
icebp
fsts
out
cld
int
pop
into
adc
stos
loopne
jmp
aas
jmp
out
cltd
mov
sub
enter
test
divb
cwtl
lret
inc
sub
aam
hlt
insb
cmp
xchg
nop
leave
sbb
int
dec
mov
stos
inc
and
arpl
lds
lcall
stos
cmp
xchg
fisttpl
outsb
stos
pop
adc
stc
add
pop
mov
xor
xor
fwait
cmp
lahf
adc
pusha
ljmp
mov
addl
or
and
pushf
adc
xor
adc
or
dec
mov
in
inc
and
movsl
pop
repz
mov
xchg
mov
out
cmp
pop
and
test
in
xlat
adc
int
ja
ret
lcall
mov
movsl
sti
and
imul
lahf
lret
in
rol
dec
nop
push
hlt
mov
pop
jb
or
sub
nop
jg
repnz
jmp
lds
out
stc
cli
dec
mov
in
stos
dec
fs
frstor
fisubl
cltd
jg
xchg
fmuls
jp
or
imul
pushf
mov
stos
jge
imul
pusha
sbb
lds
mov
pop
popa
inc
out
dec
js
xchg
rolb
inc
inc
sbb
mov
mov
adc
mov
and
inc
or
movsl
addr16
lock
lahf
outsl
aas
add
outsl
push
ret
sbb
push
out
leave
sbbb
sbb
es
push
xchg
iret
lods
xor
cmpb
or
cmp
pop
jg
insb
loopne
lea
pop
and
mov
pop
push
dec
push
dec
cltd
iret
sti
mov
imul
bndldx
lods
or
add
ret
aas
adc
mov
nop
push
lcall
xlat
leave
mov
lods
cli
jnp
lret
fistpll
stos
inc
sub
arpl
lds
movsb
ret
add
addb
stos
pop
lock
push
sahf
rcr
xchg
fimull
pushf
lods
fwait
lods
jge
shrl
and
jmp
popf
in
gs
lods
fbstp
add
xchg
sbb
dec
cwtl
andl
inc
aam
mov
scas
enter
loope
fwait
cmp
jl
sub
movsl
fidivl
test
sub
int
and
sub
inc
cltd
jmp
and
mov
rorb
pop
push
or
cmpb
pop
xchg
xchg
fidivl
insl
or
ret
sahf
or
les
mov
ret
arpl
inc
notl
adc
mov
cltd
xor
std
mov
lret
xor
sbb
fs
mov
out
lds
lds
pusha
std
fbstp
imul
adc
test
xchg
mov
sbb
sbb
mov
cmpsb
xor
jb
loopne
or
lds
mov
ret
pushf
sahf
xchg
fwait
inc
cmp
leave
addr16
jo
mov
pop
jb
add
insb
out
adc
mov
dec
aam
inc
fcomip
dec
adc
mov
out
jae
loopne
and
cmpsl
ret
mov
jmp
lret
sub
out
jmp
jecxz
and
push
xchg
dec
dec
mov
inc
fs
dec
mov
loop
jle
addl
call
rorl
dec
dec
pop
int3
sti
mov
imul
sbb
ret
mov
adc
lret
inc
sbb
lods
lea
call
add
aam
pop
dec
iret
or
pushf
shrl
leave
test
nop
cli
mov
mov
arpl
lds
xchg
sub
les
xchg
fisttpl
sahf
in
fistl
fiaddl
jae
cs
lods
jge
shrl
cmpsl
dec
push
fucomi
cmc
mov
cld
repnz
jg
fs
push
aas
rcll
push
xchg
pop
pop
cmp
fwait
xor
fs
sub
cmpsb
fidivl
test
es
or
pop
cltd
lods
mov
jnp
clc
jno
jecxz
adc
in
lock
mov
pop
and
and
mov
xchg
cmp
or
pop
jg
inc
push
push
lea
pop
and
imul
inc
out
repz
cmp
movsl
ret
ret
out
aaa
daa
daa
xor
imul
aad
fsubl
pmuludq
sbb
lahf
inc
pusha
push
test
cwtl
xor
mov
scas
sahf
popf
mov
mov
mov
jno
inc
repz
add
dec
insl
xchg
or
dec
imul
cmp
jns
inc
leave
or
mov
fmull
jnp
dec
push
pop
jge
jg
scas
loope
pusha
loop
or
inc
rorb
rorb
mov
mov
cmp
les
inc
stos
sbb
fisubl
gs
fidivl
test
sub
lods
mov
jnp
clc
jno
jecxz
cmp
aaa
and
mov
dec
dec
mov
in
lea
popf
out
mov
mov
lcall
adc
sar
mov
jns
into
jge
aas
int3
xor
ret
aaa
lods
dec
int
adc
mov
and
mov
test
nop
and
popf
fmull
repnz
dec
stos
mov
jnp
inc
in
xlat
dec
sbb
testl
arpl
scas
adc
ljmp
or
rclb
xchg
sub
dec
arpl
sbb
scas
xchg
push
lcall
inc
or
lods
inc
pop
jae
pusha
mov
cld
loop
mov
dec
push
jmp
mov
andl
pop
adc
and
mov
out
loope
fwait
xor
pusha
push
sub
and
insl
fwait
out
cltd
ds
jno
cmp
fdivl
jecxz
movsb
dec
iret
sub
sbb
pop
stos
out
sub
adc
push
stc
mov
pop
push
mov
xor
popa
lds
stos
pop
jmp
lahf
mov
mov
mov
cmp
jbe
mov
dec
in
mov
add
adc
insl
movsl
ret
insb
sarb
jb
imulb
test
stos
les
lret
jb
mov
push
insl
in
stc
mov
xchg
test
lret
mov
addb
fwait
or
xchg
lcall
mov
pop
mov
mov
icebp
jle
mov
push
lods
inc
pop
lcall
fwait
out
adc
outsl
iret
fcmovu
icebp
jmp
sbb
mov
fwait
push
dec
mov
and
in
fcoml
fwait
xor
push
sub
movsl
fidivl
test
and
mov
mov
and
loop
push
addb
loope
add
xchg
push
hlt
dec
addr16
jbe
cltd
fimuls
jb
outsl
mov
shrb
inc
shll
pop
mov
sti
daa
jge
mov
inc
sbb
mov
inc
cmp
add
std
dec
dec
jp
int
repz
dec
push
push
sbb
jecxz
sbb
incl
push
test
cwtl
mov
aaa
stos
xchg
mov
out
lahf
popf
stos
mov
jae
cli
jo
mov
andb
in
addb
test
or
bound
fstps
lods
lds
lcall
xchg
fwait
push
xchg
xchg
sbb
cmp
repnz
inc
add
adc
cwtl
mov
xchg
adc
adc
lds
mov
rolb
inc
add
xchg
cltd
popf
cmc
hlt
std
mov
sti
and
inc
lret
es
dec
pop
repnz
out
push
and
xchg
jle
push
dec
mov
push
jbe
sbb
add
lcall
fstl
dec
cmp
int
out
xchg
fdivp
lcall
mov
and
dec
add
sbb
insl
movsl
ret
insb
imul
ss
data16
clc
imul
inc
clc
cmpsl
and
sbb
mov
jge
jns
jge
pushf
vpcmpeqd
data16
inc
mov
pop
xor
inc
scas
ja
inc
xchg
jl
xor
imul
movb
loope
fwait
loope
dec
mov
jle
int3
scas
rcrb
ss
xlat
fdiv
sti
sub
or
adc
test
sbb
and
mov
testb
mov
push
sbb
orl
movsb
jp
mov
sbb
inc
inc
mov
in
int
jo
xor
cmpb
es
dec
pop
xor
shr
and
jle
push
dec
mov
push
shlb
mov
sub
mov
into
fwait
lahf
aas
loopne
mov
sbb
lcall
cwtl
cmpsb
ret
mov
mov
dec
push
lea
iret
inc
testl
les
push
in
xor
rcll
out
dec
sbb
in
or
inc
push
les
inc
scas
ja
les
ja
lds
ljmp
sbb
loope
dec
test
mov
mov
repnz
fstps
lock
popa
or
mov
addl
or
mov
and
shl
cmp
xor
push
sub
and
xor
mov
cmpsb
jnp
clc
jno
jecxz
stc
push
add
xchg
scas
push
or
cmpb
or
cmp
or
les
outsb
mov
arpl
inc
rcll
adc
mov
cltd
xor
std
mov
mov
fs
icebp
mov
dec
dec
daa
sbb
push
ja
xchg
pop
iret
xchg
pop
dec
scas
mov
sti
fisubl
fbstp
imul
or
popf
xchg
dec
bound
push
mov
popf
jb
pop
stos
jne
vsubss
pusha
mov
mov
lds
jp
sub
cli
leave
loop
in
nop
xchg
sbb
sar
sub
rol
adc
fmuls
fidivrs
out
jb
xor
aad
pop
rcll
fsubs
lahf
outsl
push
ret
xor
nop
mov
add
adcl
cmp
xchg
sub
cmp
int
sbb
loop
mov
aad
sbb
repz
dec
call
lahf
mov
mov
mov
inc
sbb
pop
mov
fs
sbb
dec
push
xlat
xchg
or
mov
fwait
xor
lret
inc
sub
push
dec
pop
dec
iret
or
push
pop
lods
leave
test
sub
jmp
lcall
cld
lret
lds
mov
add
movsl
addb
stos
pop
lock
push
sahf
push
out
sbb
add
and
pop
cmpsl
pop
js
enter
cmpsl
dec
push
fucomi
cmc
mov
cld
repnz
jg
mov
mov
mov
rcll
sbb
and
pop
and
data16
mov
test
in
xchg
jmp
ret
xchg
xor
cmpsb
sahf
xor
cmp
fnsave
dec
mov
jecxz
add
xor
in
ljmp
mov
popa
mov
sub
popf
repz
popa
push
mov
aam
sti
sub
jnp
mov
imul
cmp
mov
sub
pushf
jns
jb
mov
dec
std
dec
and
mov
test
adc
mov
in
fnstenv
popf
lret
mov
cmp
jge
add
push
sbb
sub
dec
adc
xchg
fsts
lods
lds
inc
mov
jecxz
pushf
sahf
xchg
fwait
inc
pop
repz
loop
inc
mov
pop
jb
add
loope
fwait
test
test
out
cwtl
inc
stos
sbb
movsb
fs
add
imul
sub
lahf
xlat
pop
into
clc
xor
lea
hlt
js
orb
mov
icebp
inc
gs
mov
sub
and
ljmp
repz
and
push
sahf
rorl
mov
push
adc
mov
jns
mov
notb
mov
xlat
outsl
or
mov
fwait
jb
cwtl
lret
inc
sub
rcrb
cli
fnsave
jne
aaa
mov
inc
add
mov
add
sahf
popf
in
xchg
push
test
ljmp
cmp
or
cmp
adc
lcall
adc
loopne
fistl
cltd
xchg
or
lods
fidivs
test
ficoms
scas
popf
scas
jg
stc
icebp
xor
adc
cwtl
add
or
inc
test
cltd
jae
xor
sbb
loope
pop
pop
mov
fwait
insl
cmovae
loope
push
out
push
ret
lret
xor
cmc
enter
inc
dec
ja
mov
test
sub
sbb
ret
out
sahf
dec
movsb
adc
fsts
jmp
pop
lock
loopne
pop
daa
setae
jecxz
stc
pop
pop
iret
adc
mov
cltd
xor
std
sbb
adc
lret
xor
sbb
jecxz
sbb
mov
test
cwtl
mov
aaa
stos
push
in
fcmovne
mov
in
xor
sti
mov
shll
sbb
shrb
sub
inc
pop
lret
stos
xchg
fimull
sbb
pop
jb
lods
mov
add
xor
lcall
adc
out
js
mov
add
mov
push
dec
mov
fisttps
or
xchg
adc
xor
push
sub
movsl
fidivl
test
jne
out
stc
lahf
cwtl
jne
mov
jmp
lret
cmp
loop
leave
sbb
ret
enter
dec
push
push
xchg
stos
pop
push
adc
enter
mov
add
insl
sub
xor
mov
or
into
dec
adc
movsl
sti
stos
mov
jnp
mov
adc
inc
cmp
pusha
bound
and
insl
movsl
incb
cmpb
lret
mov
pushf
inc
stos
cwtl
adc
mov
in
push
and
mov
mov
test
lahf
fisttpll
test
or
adc
loope
gs
mov
push
test
mov
mov
mov
push
pop
xor
jo
jno
pusha
mov
scas
mov
lahf
fists
fcmovne
pop
mov
repnz
or
dec
rcrl
pop
and
pop
and
mov
mov
inc
pop
test
in
xchg
jmp
ret
push
jne
sbb
mov
call
and
loopne
cltd
add
sbb
sahf
mov
mov
fsubp
stos
mov
xor
jo
dec
add
repnz
mov
in
ljmp
mov
jae
mov
add
inc
cmp
lock
leave
sarb
imul
test
sbb
push
sub
and
jne
std
inc
loop
jae
sbb
mov
sbb
int3
xor
xchg
add
mov
adc
xchg
fsts
lods
lds
and
sahf
xchg
fwait
js
and
mov
int3
out
push
adc
insl
ret
pushf
nop
andl
addr16
sarl
and
and
push
mov
xchg
pop
leave
xchg
cmp
cmpsl
sti
fsubs
lahf
pop
es
repz
mov
inc
inc
mov
or
or
sub
mov
fsubr
push
and
mov
jo
adc
into
repz
dec
call
mov
in
jmp
jecxz
movsl
cmpsl
sbbb
sbb
mov
ret
test
ljmp
rcrb
mov
movsb
fisubl
stos
inc
push
pushf
push
push
xchg
fbld
pop
aaa
xchg
in
and
test
xchg
mov
sbb
jne
mov
iret
xchg
jl
xor
jp
mov
inc
mov
loope
inc
xor
xor
jnp
jg
scas
pushl
mov
or
sbb
mov
fwait
push
dec
mov
and
and
stos
sbb
movsb
adc
push
mov
loope
inc
and
es
repz
in
clc
mov
dec
mov
xchg
or
loopne
dec
pop
repnz
shr
and
xchg
jle
push
dec
mov
push
stos
pop
or
ja
fbld
mov
ret
loopne
mov
push
cmc
lret
daa
repnz
jge
sbb
mov
cmp
mov
add
cmp
out
cmp
sbb
imul
mov
mov
mull
mov
sbb
test
dec
sub
push
lahf
push
lret
mov
in
stc
mov
xchg
xchg
sbb
icebp
add
test
cmp
add
xchg
lcall
ja
lds
ljmp
cmp
loope
dec
popf
aad
mov
jmp
lahf
adc
pusha
adc
dec
in
adc
inc
mov
fdivs
sub
test
clc
out
and
xor
inc
jo
push
stos
icebp
mov
stos
cmp
jb
pop
mov
mov
shlb
inc
int3
jno
mov
test
sub
adc
dec
mov
mov
push
mov
les
ss
arpl
inc
sbb
jp
xor
stos
mov
inc
cmp
add
std
sub
adc
lret
mov
dec
cmc
push
sbb
jecxz
cli
fidivs
xor
aaa
mov
inc
inc
mov
arpl
jge
sahf
popf
in
xchg
les
aaa
ljmp
cmp
or
cmp
adc
lcall
adc
loopne
cmp
or
mov
fmull
jnp
dec
push
xchg
inc
fwait
imul
data16
or
lcall
lea
mov
add
jge
inc
jecxz
and
pop
cmpsb
fsubs
sub
call
push
ret
lret
xor
push
push
dec
jb
mov
test
sub
sub
inc
popl
icebp
fsts
imul
std
bnd
xlat
in
ljmp
jecxz
movsl
cmpsl
sbbb
sub
pushf
mov
inc
out
push
hlt
mov
fcomi
gs
xlat
dec
sub
and
test
push
fwait
and
cld
mov
push
inc
jge
jno
cld
arpl
jo
inc
mov
shl
les
xchg
adc
sub
cmp
les
pop
pop
mov
aad
mov
add
dec
aad
fs
scas
loop
mov
js
jge
xchg
fdiv
sbb
shll
cwtl
add
or
inc
mov
sbb
mov
adc
mov
cmpsl
cli
mov
out
and
ret
mov
xlat
pop
fstps
cwtl
push
add
and
sub
xchg
xchg
xchg
mov
fsubp
cmpl
or
repz
dec
call
cmpl
dec
lahf
lds
add
mov
cmp
cltd
sub
xchg
push
or
lret
lds
dec
sbbb
xor
sti
cmp
insb
mov
lcall
lock
sbb
mov
mov
stc
mov
xchg
mov
lret
mov
jns
dec
retw
pop
lock
xor
sub
stos
jecxz
or
mov
aad
mov
mov
arpl
scas
ret
mov
mov
fdiv
sbb
or
inc
add
sbb
cwtl
outsb
xlat
ret
stc
jmp
negb
mov
jmp
movsb
jp
mov
gs
call
popa
cltd
enter
rcll
dec
add
adcl
cmp
xchg
sub
popf
out
mov
mov
lcall
adc
sar
iret
cmpl
mov
inc
mov
sbb
or
lahf
push
lock
pop
jb
or
sub
nop
jg
repnz
aas
shl
imulb
js
jecxz
lret
dec
and
stc
cmc
dec
stos
xchg
mov
cli
mov
lcall
dec
rcr
jae
lods
or
jo
xor
push
sbb
cli
xchg
fbld
sub
lret
cmp
fsub
sbb
ret
scas
cs
icebp
leave
in
mov
sti
icebp
xor
xor
mov
dec
mov
mov
jo
dec
adc
xchg
cmc
mov
xchg
imul
sub
mov
fisubs
ret
adc
adcl
cmp
xchg
sub
ljmp
cmpl
repz
dec
call
cmpl
dec
lahf
lds
add
mov
xor
sbb
popa
mov
add
testb
movsl
ljmp
mov
movsb
fidivrl
mov
inc
push
push
add
xchg
aaa
jbe
mov
ret
pop
bound
mov
add
xchg
adc
and
cmp
les
cmp
pop
inc
leave
or
ja
cltd
fmull
fwait
scas
dec
push
xchg
loop
iret
or
jl
shlb
add
mov
add
inc
test
add
outsb
mov
mov
mov
mov
sub
fisubs
xor
mov
mov
enter
rcll
dec
or
in
imul
and
call
call
int
pop
lea
cmp
cs
mov
mov
hlt
aas
in
mov
add
add
popa
mov
lcall
mov
sbbl
dec
sbb
xlat
or
shrl
leave
test
adc
sahf
popf
mov
mov
mov
or
bound
sbb
stos
cwtl
mov
or
inc
mov
mov
push
mov
xchg
sbb
rolb
mov
sub
mov
int3
scas
adc
std
push
movsb
inc
shlb
add
mov
add
inc
mov
out
dec
shlb
adc
mov
and
sub
call
push
ret
lret
jge
out
dec
scas
sub
sbb
xchg
stos
in
push
adc
enter
mov
add
insl
sub
xor
mov
sub
call
ret
mov
pop
push
dec
push
dec
pop
out
mov
imul
add
fidivl
add
mov
divb
adc
mov
nop
push
lcall
out
lds
shrb
pusha
std
fisttps
lret
xchg
add
mov
sbb
popa
xor
push
ficoml
mov
loopne
cmp
or
mov
fmull
jnp
dec
push
mov
mov
jae
loop
in
nop
xchg
sbb
or
lcall
lea
adc
fmuls
movsl
cli
jg
inc
insl
xchg
adc
adc
test
fld1
jne
popf
out
push
ret
lret
xor
sbb
and
push
adc
enter
mov
add
insl
sub
ret
mov
xchg
jg
pop
test
cmp
mov
in
pop
xlat
mov
aaa
out
and
sbb
outsl
ret
mov
adc
lret
cmp
cltd
nop
loop
nop
test
dec
and
ror
sbb
popf
ja
dec
inc
push
lahf
push
lret
push
dec
push
dec
mov
pop
fucomp
jmp
in
jl
sbb
xor
inc
sbb
or
stos
jge
dec
or
cld
jp
add
or
mov
repz
jecxz
pushf
sahf
xchg
fwait
inc
and
sbb
mov
mov
pop
xchg
aam
push
inc
mov
pop
and
dec
jo
and
sbb
jle
nop
imul
lahf
xlat
mov
fsubs
clc
insb
rcll
dec
or
loopne
dec
pop
jb
shr
and
sbb
int
call
int
pop
lea
std
icebp
push
inc
mov
xor
jp
aas
in
mov
jnp
mov
adc
ss
push
fwait
jb
cwtl
lret
inc
sub
rcrb
cli
push
xor
inc
push
out
mov
add
cli
adc
push
cld
mov
pop
mov
jae
lds
cmp
and
sub
test
nop
stos
stos
rorl
xchg
fistl
fimull
in
cmp
mov
sub
jge
pop
xor
fwait
cmp
lahf
adc
pusha
out
and
adc
inc
mov
fdivs
sub
or
and
sub
test
push
xchg
adc
add
inc
mov
in
inc
and
movsl
pop
repz
mov
xchg
mov
out
fldl2e
mov
icebp
inc
gs
mov
sub
rol
int3
lcall
mov
movsl
sti
and
shll
mov
jecxz
push
xchg
mov
jbe
add
mov
orl
movsl
call
push
hlt
mov
fcomi
adc
lret
adc
adc
ja
loope
and
lret
sar
xor
sti
jmp
je
mov
sub
adc
or
cmp
pop
sbb
push
sahf
adc
xchg
fimull
in
mov
mov
sub
adc
clc
jmp
popf
in
gs
fbstp
into
out
xchg
movl
out
mov
mov
add
sbb
mov
inc
xchg
jmp
ds
jmp
gs
fwait
mov
mov
fldenv
mov
in
xchg
enter
aam
sub
mov
xchg
cmp
xor
add
decl
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
mov
add
push
popl
lahf
push
hlt
mov
fcomi
pop
nop
xlat
dec
sub
and
test
fimuls
cmp
rclb
sbb
punpckhwd
cmpsl
xchg
xchg
sub
adc
push
mov
xchg
stos
std
cld
dec
mov
lds
lea
xor
mov
js
mov
iret
js
mov
repnz
sub
rcrb
add
shlb
push
or
lret
pop
add
outsb
test
push
fisubs
mov
push
ret
xchg
sub
cltd
test
cmpsb
jnp
mov
jecxz
mov
rorb
in
push
or
lea
sbb
add
jnp
mov
lods
mull
pushf
call
xlat
test
cmp
fists
iret
int3
and
sti
repnz
sbb
outsl
ret
mov
adc
lret
cmp
cltd
nop
loop
test
pushf
dec
and
ror
sbb
in
xlat
mov
inc
and
jmp
push
mov
jno
inc
mov
or
cmp
adc
lcall
adc
loopne
cmp
or
jno
cltd
fmull
jnp
dec
push
mov
in
mov
leave
loop
in
nop
xchg
sbb
or
lcall
lea
mov
aad
jmp
xchg
cmpsb
or
xchg
mov
ljmp
push
ret
xor
leave
cli
mov
adc
inc
leave
es
pop
pop
lock
out
push
and
ljmp
fcomp
adcl
into
dec
mov
mov
clc
sti
pop
es
rcr
repz
mov
mov
sub
pushf
decb
jbe
mov
inc
pop
dec
and
mov
test
push
xor
ja
loope
push
test
push
xor
sti
fwait
into
into
je
mov
sub
adc
or
stos
adc
dec
cmp
test
mov
mov
mov
jecxz
shr
rcrl
push
jg
loopew
mov
out
js
mov
adc
rorb
add
cwtl
sub
mov
push
xchg
adc
sbb
add
mov
cltd
in
cmovae
push
jb
inc
mov
lock
or
cmp
xchg
sub
push
nop
xchg
mov
fsubp
test
dec
aad
pop
lock
dec
call
lahf
mov
mov
mov
inc
sbb
inc
bound
pop
xlat
xchg
hlt
mov
fwait
xor
cwtl
lret
inc
sub
xor
mov
sbb
int
dec
mov
cmpsl
mov
dec
mov
jae
add
cmp
and
or
test
push
stos
stos
rorl
xchg
out
sbb
add
xor
pop
pusha
ja
lods
xor
push
pop
icebp
leave
es
lahf
jecxz
cld
repnz
xor
pop
es
sbb
mov
or
push
or
lret
dec
testb
mov
sub
popf
push
stos
cmp
test
fisubs
cmp
mov
or
rcll
int3
dec
pop
push
leave
fidivl
lret
sub
loopne
mov
xchg
repz
adc
push
insb
xorb
lcall
adc
out
sti
mov
imul
add
add
mov
push
dec
sbb
mov
inc
test
sub
sbb
cmc
xor
sbb
call
popf
ljmp
adcb
push
addb
sub
dec
dec
sahf
aad
adc
add
mov
cltd
shrl
sub
fisubrl
std
pop
inc
mov
es
sbb
xchg
fisttpl
clc
jle
add
sbb
clc
mov
cmpsb
call
les
xchg
sub
pop
das
mov
xchg
xchg
sbb
push
inc
sbb
ret
mov
mov
mov
push
flds
mov
out
gs
mov
gs
mov
sub
popf
repz
popa
push
mov
shll
jp
aas
in
mov
jnp
mov
adc
ss
cli
cmpsb
ret
das
loop
inc
movsl
mov
mov
xor
push
add
jns
inc
in
inc
mov
test
pop
fisttpll
test
or
push
into
aaa
sti
fisubrl
arpl
add
mov
pop
jno
push
insl
xchg
adc
xor
fabs
cmp
xchg
push
pop
cld
movsb
nop
adc
push
cwtl
add
cmp
xchg
cwtl
mov
xchg
adc
nop
adc
mov
rolb
inc
add
ljmp
sbb
mov
mov
cwtl
push
andb
fs
add
xchg
mov
int
jle
addl
call
imul
fucomip
hlt
cmp
fists
iret
int3
ret
aaa
loopne
repnz
sbb
sub
lds
test
or
sbb
std
xlat
cmp
inc
and
stc
mov
add
xchg
in
jmp
in
dec
test
mov
xchg
lcall
ja
lds
ljmp
cmp
loope
inc
pushf
shlb
lret
xor
je
int3
scas
loope
pusha
loopne
or
or
mov
or
mov
mov
cmp
and
inc
stos
sbb
fisubl
xor
inc
and
es
repz
mov
popa
xchg
adc
int3
pop
and
mov
dec
inc
mov
inc
popa
daa
mov
sub
rol
cmp
ret
mov
pop
test
cmp
mov
lock
xchg
xor
rcrl
movhlps
mov
hlt
mov
pop
lock
or
cmpsl
sbb
jns
lds
nop
clc
sub
mov
test
and
inc
xchg
xor
pushf
lds
arpl
jo
inc
mov
pop
in
inc
pop
xchg
adc
sub
cmp
les
fistl
in
push
xor
loop
xchg
loop
iret
sub
inc
fwait
imul
mov
subl
ljmp
mov
pop
repnz
out
mov
or
pushf
push
mov
insl
xchg
adc
in
and
lea
cmp
movsb
mov
cltd
push
bound
push
mov
test
sub
cmp
ret
popl
icebp
fsts
ljmp
adc
stos
loopne
lcall
iret
xchg
add
popf
sbb
movb
mov
add
testb
cmpsl
cmp
jg
shll
fidivrl
or
lods
std
inc
bound
aaa
shll
ret
sbb
jno
les
xchg
sub
stos
arpl
scas
xchg
push
lcall
inc
or
lds
xchg
mov
jecxz
popf
sahf
xchg
fwait
inc
call
sbb
bound
push
cwtl
add
xor
dec
push
push
xchg
adc
push
aaa
or
cmp
or
repz
jne
mov
xchg
cltd
cmp
sbb
xchg
pop
fldenv
pop
jecxz
adc
cltd
mov
add
or
sub
mov
test
adc
int
ja
xor
mov
call
push
sahf
rorl
push
dec
mov
add
in
imul
pcmpgtd
xchg
or
add
ret
and
leave
push
jmp
lds
out
lds
xlat
scas
mov
sti
lret
fbstp
je
mov
leave
mov
pop
sub
les
xchg
jne
dec
mov
xchg
jl
xor
imul
movb
loope
fstl
pop
cld
inc
xor
mov
in
mov
leave
loop
in
nop
xchg
sbb
mov
inc
std
cld
negb
adc
sbb
cwtl
adc
dec
and
inc
or
inc
insl
xchg
popf
mov
mov
cltd
inc
fs
sbb
ret
adc
and
mov
cmpb
sbb
into
cmc
insb
dec
inc
xchg
xchg
jmp
cmpsb
dec
pop
imul
fsubp
inc
pop
push
mov
shr
xor
pop
repnz
sbb
mov
lock
inc
sbb
loope
aad
loop
sbb
lret
inc
sbb
leave
pop
mov
movsl
ret
insb
test
rcl
sub
push
lret
sbb
std
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
mov
mov
mov
or
mov
push
stos
fnsave
sti
repz
fwait
loope
dec
jmp
scas
ret
in
js
jge
inc
xlat
fdiv
sti
and
aad
inc
shlb
mov
sub
sbb
and
mov
testb
movsb
push
jno
sub
popf
push
dec
sbb
out
test
mov
mov
enter
rcll
dec
or
in
imul
and
popa
das
mov
cmp
js
into
inc
mov
icebp
push
inc
mov
pop
iret
jp
aas
in
mov
add
shll
xor
jg
add
sbb
lcall
mov
sbbl
test
push
test
cwtl
mov
aaa
stos
xchg
mov
lods
sahf
popf
mov
mov
mov
or
bound
stos
xchg
mov
or
inc
mov
fistl
mov
lods
jge
shrl
test
scas
mov
lahf
jecxz
enter
adcl
mov
adcb
dec
sti
xchg
aad
out
push
pop
cmp
fwait
cmp
nop
push
sub
cmpsb
fidivl
test
gs
ret
out
popa
jge
pop
jp
repz
mov
inc
inc
mov
sbb
push
mov
mov
popf
out
loop
cmp
or
pop
jg
lcall
decl
mov
mov
adc
mov
jns
mov
add
xor
add
lods
movsb
sbbb
and
test
stos
push
ljmp
insl
mov
mov
inc
push
rcrb
sbb
punpckhwd
cmpsl
xchg
xchg
shl
adc
sbb
adc
and
fisubl
push
outsl
les
mov
pop
pushf
ret
add
jae
push
pop
fucomi
cmc
mov
enter
inc
shlb
or
sbb
and
dec
nop
lock
push
mov
cltd
xor
movsb
inc
jge
sbb
inc
mov
cltd
inc
pop
mov
lods
int
cld
bound
cmpb
repz
cwtl
pop
dec
push
pushf
call
pop
mov
jmp
loop
pop
pop
mov
shr
xor
pop
out
cmp
and
cld
mov
lock
cmp
jl
add
in
add
testb
push
lock
sub
ret
mov
aaa
stos
jecxz
adc
mov
sar
xor
sti
jnp
sahf
mov
shrb
mov
sbb
lret
or
pop
sub
jp
add
or
push
insb
jbe
lods
inc
pop
repnz
jg
xchg
cld
loop
xor
scas
push
jmp
mov
andl
pop
adc
and
mov
out
loope
jp
imul
push
cltd
scas
enter
ljmp
adc
inc
cltd
jmp
and
mov
mov
mov
lret
sbbl
neg
ret
addb
pop
in
call
pop
call
fucomip
hlt
cmp
fists
iret
int3
lahf
aaa
repz
mov
sbb
or
push
pop
adc
into
cmp
xchg
jo
out
dec
sbbb
jne
clc
fisttpl
mov
test
and
inc
mov
fnstenv
pop
repz
ljmp
inc
cmp
adc
rcl
pop
movsb
lcall
ja
lds
ljmp
cmp
loope
inc
xor
or
jnp
jg
scas
loope
pusha
out
sbb
mov
or
mov
dec
aam
fsts
aam
dec
out
ror
notb
push
fisubs
xchg
imul
arpl
clc
xor
enter
rcll
dec
add
orl
pop
xor
sub
mov
adc
xchg
cmp
or
pop
jg
out
rorl
mov
and
push
adc
mov
jns
mov
divb
out
inc
shlb
out
mov
mov
inc
stos
adcb
mov
in
add
jne
sahf
mov
test
call
cmp
xor
dec
inc
or
xchg
lcall
std
lock
movb
loope
fwait
loope
dec
xchg
aad
mov
jmp
lahf
adc
out
js
pop
mov
shlb
push
dec
mov
loopne
jne
xchg
adc
adc
or
rorl
sbb
xchg
mov
push
jns
enter
ljmp
sbb
mov
mov
cwtl
push
orb
pushf
test
lret
lret
cmpl
xchg
push
ret
adc
or
pop
jmp
in
mov
loopne
pop
daa
setae
jecxz
test
sahf
jmp
out
cltd
cwtl
push
lret
ret
sbb
inc
aas
adc
aaa
sbb
mov
fwait
decl
iret
outsb
xor
sarl
test
or
lods
test
pop
movsb
leave
test
enter
int3
stc
mov
cld
mov
cmp
in
test
nop
sbb
lods
mov
mov
scas
sub
jne
inc
push
lret
stos
xchg
fimull
cli
outsl
sub
sbb
or
lds
push
mov
jecxz
fwait
sahf
xchg
fwait
inc
ficoml
mov
push
jp
adc
cmp
cwtl
add
mov
xor
in
inc
mov
sbb
mov
adc
mov
add
test
je
cmp
hlt
gs
fnstcw
mov
mov
cwtl
push
adcb
mov
lret
cmpl
pop
mov
addl
into
pop
movsl
pop
in
call
pop
call
fucomip
hlt
cmp
fists
iret
int3
out
aaa
jecxz
divb
mov
inc
sub
insl
movsl
adc
adc
jns
pop
notl
sbb
inc
test
dec
sub
push
lahf
push
sub
xchg
rclb
push
pop
clc
mov
mov
xchg
mov
dec
bound
push
pop
push
stos
rcrb
jne
vsubss
jle
mov
add
lods
inc
pop
lcall
mov
bound
scas
inc
fdiv
bnd
arpl
rcll
clc
jb
mov
rol
sub
lret
insb
testb
movsb
out
xor
xchg
imul
cmp
push
and
lret
jge
out
dec
push
sub
sbb
fwait
dec
inc
mov
inc
in
mov
sub
xchg
repz
lds
cmp
and
mov
test
addb
mov
clc
add
mov
in
sbb
mov
add
testb
iret
jl
jo
jge
clc
lds
mov
dec
pop
repnz
mov
xchg
jmp
shlb
jbe
imul
rcrl
test
roll
in
dec
add
stos
loopne
mov
pop
stos
jne
inc
pop
mov
mov
int
jno
jb
add
fucompp
sbb
fsub
sub
xor
imul
mov
subl
ljmp
mov
pop
repnz
and
mov
xchg
adc
fs
pop
mov
in
inc
and
movsl
pop
repz
in
clc
ficoms
scas
mov
dec
mov
pop
or
movsl
movsl
dec
pop
or
cltd
sahf
ret
dec
mov
ret
addr16
mov
push
jne
pop
jecxz
mov
adc
mov
loopne
jmp
fsubrp
aaa
in
clc
out
cltd
xchg
dec
pop
sub
enter
xchg
hlt
mov
fwait
mov
cwtl
lret
inc
sub
jge
test
arpl
mov
cld
mov
movsl
and
jge
mov
mov
mov
je
mov
loope
roll
xchg
adc
loop
mov
leave
xchg
fwait
adc
loopne
cmp
mov
inc
sbb
sbb
in
xor
mov
adcb
inc
cmp
adc
or
stos
aam
mov
jnp
inc
push
mov
xchg
sbb
or
pop
and
sbb
push
inc
push
dec
pop
aas
fwait
psubw
call
lods
add
lcall
or
sub
mov
mov
push
adc
sbb
jns
idivl
pop
loopne
cmp
into
inc
mov
jg
jp
aas
in
mov
lcall
cltd
mov
mov
mov
pushf
sub
pushf
enter
mov
xor
dec
test
mov
sbb
int
dec
cmpl
leave
mov
push
cmp
sbb
xor
sbb
or
stos
arpl
ja
lds
ljmp
fisttpl
fstl
pop
rclb
cmp
leave
loope
mov
out
js
mov
adc
rorb
dec
mov
mov
fwait
jmp
loope
jp
adc
jp
mov
rolb
inc
add
ljmp
cltd
mov
mov
mov
cwtl
push
add
xchg
sub
sbb
ret
sbb
icebp
fsts
lods
imull
ret
arpl
inc
in
xchg
jnp
fdiv
cmc
jmp
sbb
mov
inc
cmp
add
rcrl
push
and
iret
repnz
jns
lds
nop
les
dec
push
test
pop
and
jae
lret
push
in
mov
sbb
in
push
jl
sbb
and
or
stos
arpl
xchg
mov
push
jbe
sub
jno
lds
and
jmp
mov
in
mov
leave
loop
in
nop
xchg
sbb
jecxz
xor
mov
rol
adc
les
inc
jecxz
and
and
movsl
in
and
xor
cld
jb
pop
mov
mov
and
mov
enter
int3
push
push
xchg
stos
push
sub
sub
inc
xchg
or
fsts
in
ss
mov
loopne
pop
daa
setae
jecxz
pop
mov
loop
mov
add
cmc
lods
inc
cmp
add
lods
movsb
sbbb
cmpsl
clc
arpl
nop
push
lcall
out
stc
sti
inc
lahf
push
lock
sub
lret
fucom
cli
test
cld
mov
int
jae
add
xchg
dec
bound
push
mov
xchg
or
sub
inc
lcall
pusha
dec
add
jecxz
fwait
cmpsb
enter
pusha
jle
cs
icebp
leave
imul
andl
xchg
rclb
jp
jp
xchg
cwtl
inc
mov
jnp
inc
push
mov
xchg
sbb
jg
xchg
push
pop
and
insl
push
inc
push
dec
pop
cmp
psubw
call
cltd
push
bound
bound
nop
test
sub
cmp
ret
popl
icebp
fsts
movsl
imul
mov
arpl
inc
notl
xor
arpl
add
std
sub
adc
lret
mov
dec
cld
push
sbb
jecxz
cli
aam
je
aaa
mov
inc
inc
imul
popf
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
mov
xor
data16
scas
ja
les
pop
std
lock
movb
loope
fwait
loope
dec
lea
jle
lret
pushf
mov
js
jge
inc
xlat
fdiv
sbb
or
mov
or
mov
mov
pop
and
or
inc
cwtl
inc
stos
sbb
fisubl
mov
mov
fwait
in
cmovae
fsubl
xor
push
and
addl
mov
pop
xor
sub
mov
sbb
js
test
or
pop
jg
cmpsl
mov
and
mov
pop
push
dec
push
dec
cltd
sti
sti
mov
imul
lret
jp
jmp
ret
sbb
dec
add
xchg
cli
addr16
sub
lods
lret
jno
or
aad
xor
test
mov
sbb
int
dec
cmpl
leave
mov
sbb
pushf
and
xchg
add
repnz
sub
scas
test
dec
movsl
xchg
mov
add
insl
jbe
lods
arpl
pusha
mov
cld
loop
mov
out
pushl
add
andl
push
loope
adc
out
mov
add
pushf
xchg
mov
insl
xchg
adc
mov
push
stos
cmp
in
jb
pop
mov
mov
shlb
inc
int3
loop
mov
test
sub
cltd
push
inc
mov
ret
in
mov
push
jne
pop
jmp
mov
adc
mov
loopne
lcall
iret
jne
jp
add
add
mov
dec
or
add
lods
movsb
sbbb
aas
adc
imulb
js
jmp
lret
jae
jno
stc
dec
dec
stos
push
cmc
fstpt
stos
inc
aad
jae
mov
arpl
jl
or
mov
push
sbb
lds
shll
aad
pushf
xchg
sbb
sbb
mov
js
xchg
cmpsl
test
leave
in
and
or
pop
jb
add
jge
jb
pop
add
xor
clc
add
movsl
ret
dec
mov
inc
popf
push
jo
adc
sti
xor
cmpsl
sti
repz
data16
andl
sub
sub
mov
int
js
push
dec
mov
mov
xor
mov
call
push
sahf
shrl
mov
xor
jmp
insl
mov
adc
sub
pop
jne
inc
sbb
jbe
mov
sbb
push
clc
xor
in
dec
pop
dec
sbb
mov
popf
lret
mov
mov
xor
push
fisttpl
lcall
std
mov
movsb
adc
mov
add
mov
std
add
repz
fcompl
stc
and
push
mov
cmp
xchg
js
cwtl
adc
mov
cmp
mov
mov
push
fsubs
or
mov
fcomps
movsl
faddp
clc
xor
cmpsl
sti
mov
jne
dec
inc
and
cmp
or
cmp
xchg
sub
fsubr
mov
cltd
incb
push
cmp
lcall
mov
sbb
out
mov
mov
xchg
lret
data16
add
rcrl
aad
mov
pushf
inc
cltd
fs
divb
fs
mov
testl
sbb
mov
std
test
adc
push
roll
fsts
or
mov
stos
xchg
fistl
sbb
xchg
jne
mov
mov
or
int
scas
inc
fwait
data16
and
push
cwtl
in
sarb
and
mov
adc
mov
push
out
imul
xchg
and
jecxz
jnp,pt
sub
xor
sti
sti
and
xchg
xchg
add
sbb
sahf
gs
adc
mov
add
cwtl
dec
and
mov
mov
test
fwait
lahf
in
stc
push
dec
daa
cmp
jp
add
adc
jecxz
adc
popa
cmpsl
mov
arpl
xchg
icebp
ss
jb
test
gs
sbb
jge
xchg
lret
fucomp
movsb
mov
popf
lret
add
or
cmp
adc
lcall
enter
nop
aaa
jns
inc
push
shlb
cltd
push
fcmovnb
scas
lds
aad
fnstcw
std
cli
jnp
inc
mov
adc
addl
fsubs
ja
or
in
mov
jnp
inc
push
mov
xchg
sbb
dec
cmpsb
jmp
jecxz
mov
jmp
std
mov
sti
and
xchg
enter
rol
insb
sbb
and
mov
xchg
cmp
or
pop
movsl
adc
mov
mov
add
mov
cmp
jp
add
ror
cmp
mov
add
lods
xchg
sub
adc
xchg
test
add
cs
mov
sahf
das
xchg
stc
cli
in
test
jl
or
cld
jo
andl
push
mov
xor
mov
cltd
lods
in
in
jb
mov
dec
pop
shlb
fucomi
and
push
fwait
leave
loop
and
daa
mov
in
cmp
mov
xor
mov
and
inc
push
das
push
and
scas
inc
loope
inc
std
jo
aam
cli
pop
cmp
sti
and
xchg
shl
inc
rol
test
outsl
loopne
add
xchg
cmp
or
pop
movsl
adc
or
sarl
fsubrs
popf
mov
cmp
jp
add
adc
les
add
dec
lock
add
lods
xchg
sub
adc
xchg
call
add
cs
mov
sahf
das
xchg
stc
cli
in
test
enter
dec
and
mov
add
sbb
mov
push
or
mov
xchg
pushf
xchg
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
pusha
xor
rorl
dec
daa
sarl
out
ud0
dec
testl
out
cmp
sbb
pop
repnz
sub
mov
xchg
and
decl
mov
xlat
pop
pop
and
out
test
test
popa
mov
mov
jl
push
or
jns
dec
cmpsb
mov
xor
dec
movsl
sub
js
jle
lahf
dec
xchg
add
mov
xor
ret
jl
jg
fildll
pop
mov
add
adc
ret
ret
sbb
inc
ds
cli
imul
sbbl
mov
jb
pop
push
bound
push
test
mov
bound
dec
or
bound
ds
data16
sub
mov
pop
stos
xchg
stos
ja
lahf
push
scas
push
jns
push
sub
add
ret
lea
jmp
mov
mov
sbb
inc
stos
adc
cli
loopne
out
aas
adc
out
movsl
data16
push
sbb
push
lret
xor
imul
pop
jns
mov
adc
cmp
es
ud1
adc
cmp
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
adc
add
inc
inc
or
stos
adc
dec
inc
arpl
decb
pop
cwtl
jl
imul
inc
xchg
lods
hlt
xchg
sub
vandnps
push
aaa
pop
push
lods
loope
push
lret
inc
fidivs
jge
mov
lcall
adcl
cmp
cli
xchg
add
jg
sub
movsb
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
mov
sbb
js
inc
mov
pop
jb
add
inc
pop
or
jmp
imul
ds
je
out
pop
int
inc
movsl
aam
xor
ret
xor
pop
lea
dec
sub
fsubr
inc
sbb
incb
jl
outsb
xorl
int
nop
cs
arpl
mov
push
mov
loopne
in
rcrl
lret
xchg
incl
inc
sbbl
inc
pop
adc
cltd
mov
fs
xor
cmp
cmpl
ss
lea
pop
lret
mov
dec
hlt
out
cli
mov
adc
lret
jle
fs
movsl
dec
out
pop
rcrl
mov
add
shlb
sbb
mov
cmpsb
xor
jb
fisttpll
cmp
lds
pop
out
pusha
jle
das
pop
icebp
or
cmp
andl
mov
ret
addl
pop
iret
jp
xchg
fmuls
sbb
test
pusha
adc
lds
mov
cs
cmpsl
mov
jg
repz
jns
outsb
out
sti
cwtl
inc
data16
test
mov
mov
inc
lock
dec
push
jne
sbb
or
lds
cmp
jle
mov
push
sahf
sub
mov
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
cli
or
mov
aad
inc
sub
inc
fs
push
cmp
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
jp
jge
scas
xchg
iret
jmp
aam
jne
insl
jbe
lahf
mull
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
cmp
insb
aas
xchg
and
mov
fsubrs
data16
xor
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
jle
call
inc
mov
xchg
dec
xorl
lret
add
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
dec
mov
insb
push
imul
in
insl
ficomps
adc
and
inc
mov
cmp
mov
rcl
mov
fists
dec
arpl
push
in
mov
fadds
push
dec
add
addb
add
jge
sub
fwait
lret
push
fadds
push
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
xor
int3
adcl
push
dec
mov
and
adc
and
pop
jae
inc
insl
out
pop
rorl
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
hlt
pop
sub
or
pop
cmpsb
dec
xor
negb
push
popf
divl
dec
mov
adc
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
mov
mov
sbb
and
nop
push
lcall
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
inc
dec
push
add
shl
je
insl
lods
xchg
shl
dec
jmp
lahf
and
sub
jmp
ficompl
ficoms
sti
lret
lea
insb
out
pop
mov
push
roll
inc
sbb
cmp
imul
cs
mov
pop
out
js
mov
sub
push
mov
shrl
jmp
or
cmp
call
xchg
jle
cwtl
out
cwtl
je
fcoms
inc
push
jp
adc
scas
fs
mov
jmp
inc
cmp
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
xchg
std
pop
int3
push
mov
ja
mov
pop
add
out
pop
fstl
wbinvd
imul
push
adc
call
daa
sub
ljmp
movsb
pop
loopne
mov
movsb
shll
lock
jbe
lods
push
xchg
mov
repnz
sub
lret
jnp
jbe
mov
insl
outsb
pop
cltd
enter
fldt
jae
in
scas
aas
test
sub
cmpxchg
dec
lret
and
cld
mov
dec
mov
lret
sbb
xor
add
xchg
pop
mov
fists
les
repnz
repnz
scas
cmp
jae
fidivrs
pop
sub
adc
jl
pop
adc
shll
pusha
scas
fdiv
ss
imul
leave
int
sub
xchg
inc
gs
imul
add
mov
js
sti
repz
seta
dec
dec
in
mov
mov
in
mov
imul
lock
mov
pop
mov
cwtl
in
outsb
xor
mov
in
imul
dec
and
fildll
lds
shl
mov
popf
lret
test
dec
es
stos
xchg
test
insb
or
shlb
sub
loope
add
dec
xor
xor
dec
mov
sarl
sbb
shlb
inc
addr16
inc
fxch
jb
add
sarl
cli
repz
test
shrl
push
dec
mov
xor
push
les
xor
enter
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
scas
gs
xchg
or
addr16
adc
add
xchg
sub
push
dec
mov
mov
dec
mov
mull
fldenv
inc
rcl
fwait
ret
loopne
ja
xchg
dec
adc
push
mov
or
pusha
orl
sbb
xchg
mov
mov
insb
adc
dec
mov
lret
imul
vminps
imul
xor
lret
inc
jp
jge
mov
fistps
adcl
or
cli
xchg
adc
pop
add
pop
push
sub
push
test
or
stos
xor
xor
mov
mov
fsubl
and
lret
add
inc
pop
or
jmp
imul
ds
je
out
pop
int
inc
cmpsl
pop
jns
mov
xor
movl
call
imul
vcomisd
dec
nop
mov
sbb
mov
loope
insl
or
ljmp
push
mov
aam
push
dec
add
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
jg
ljmp
int3
and
xchg
stos
call
fucomp
mov
mov
push
into
inc
dec
pop
movsl
fmuls
ljmp
cmp
pop
sub
outsb
add
dec
adc
push
fsubl
adc
flds
sub
std
and
add
xor
aas
js
fsub
inc
orl
lret
cmp
or
les
rcll
inc
mov
push
fidivrs
jp
pop
repnz
sbb
and
insl
sbb
fucomi
hlt
std
mov
sti
and
test
pop
popa
sbb
xchg
push
hlt
mov
popa
dec
mov
or
sbb
push
call
add
mov
push
xor
fwait
insb
out
and
daa
adc
rorb
dec
sbb
push
fmul
adc
sbb
pop
test
push
stos
lea
aam
mov
push
sub
mov
fildll
push
sahf
jns
out
dec
in
mov
or
push
dec
add
addb
add
jge
sub
fwait
lret
push
cli
inc
dec
push
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
lods
imul
push
rcrl
repnz
fwait
push
dec
mov
mov
dec
dec
jge
xchg
cmc
mov
mov
ja
out
fbstp
sub
ljmp
out
int3
lahf
testb
int3
push
sub
mov
mov
fs
shlb
lcall
loop
subb
mov
arpl
sbb
lds
inc
pusha
arpl
loopne
cmp
or
push
pop
stos
gs
add
lcall
hlt
mov
rorl
or
sub
aas
outsb
xor
test
ljmp
mov
mov
fisttps
mov
sahf
das
xchg
stc
cli
in
test
or
fs
data16
scas
pop
rcl
ja
mov
sub
pop
popf
mul
sub
imul
fstl
pop
hlt
sub
cmc
cwtl
mov
dec
loop
and
xorb
adc
cwtl
add
xchg
xchg
aas
enterw
cmp
mov
or
add
int3
mov
jae
inc
in
pop
insb
jbe
jg
sti
std
mov
sti
and
test
cltd
popa
sbb
xchg
push
hlt
mov
movsl
pop
das
idivl
mov
stc
lods
nop
push
jo
push
sbb
repnz
mov
add
and
stos
or
jo
lcall
es
xchg
mov
pop
cwtl
in
add
adc
ret
scas
popa
lods
fldt
ljmp
push
pop
call
imul
fsub
jbe
in
mov
in
push
addl
or
andb
mov
loop
pop
gs
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
push
inc
andl
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
add
xchg
dec
xor
or
andb
lret
test
push
push
adc
test
mov
mov
mov
cmp
stc
jo
lock
xor
out
ret
aad
shlb
add
mov
cmp
sbb
fs
inc
mov
lds
test
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
mov
test
xchg
data16
inc
dec
leave
addr16
sbb
sbb
daa
xlat
insb
mov
sbb
pop
sub
adc
jl
pop
lods
out
std
adc
es
movl
or
inc
fs
inc
dec
adc
mov
repz
mov
pop
sbb
insb
add
fadd
fldl
push
rorb
aad
movb
sbb
sbb
ja
push
mov
adc
add
lock
mov
mov
stos
out
jbe
push
push
movsb
jmp
scas
jmp
outsb
mov
pop
sub
jae
int3
push
stos
ja,pn
lds
mov
xchg
lcall
fistl
xchg
jb
xor
lods
aad
sarl
xchg
mov
movsb
mov
xchg
addb
cmp
mov
pushf
xchg
sub
pop
pop
xchg
imul
xor
inc
and
aas
int
fs
mul
jle
inc
fxch
bound
add
hlt
dec
pushf
inc
addr16
fs
inc
dec
adc
mov
adc
and
push
inc
push
call
es
repnz
enter
jle
insl
and
rol
pop
inc
add
mov
aas
add
fsubrl
ret
dec
lret
cltd
adc
sub
or
sbb
lahf
jne
fcoml
cli
int
push
aam
ja
stc
cli
in
test
or
test
mov
cmpsb
sub
mov
mov
dec
mov
xor
push
ss
test
jns
jmp
xchg
insb
push
dec
movsl
ss
js
pop
das
rcrw
inc
and
add
or
push
or
test
mov
jb
fmul
push
lods
scas
jecxz
jnp
out
cmpsl
mov
incl
cmpl
test
pusha
leave
adc
inc
roll
xor
mov
popf
das
jnp
sbb
in
out
mov
mov
mov
ljmp
stos
mov
pushf
scas
cmp
or
out
out
cmp
adc
lods
sbb
in
lods
cli
lock
xor
out
ret
aad
shlb
add
mov
cmp
sbb
fs
orl
fcomip
xor
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
mov
pop
aam
jne
insl
push
pop
lahf
enter
jb
ret
pop
xchg
ret
arpl
jo
sub
btr
outsl
jno
insb
out
mov
scas
pop
out
lret
cld
jae
cld
out
daa
dec
lock
jge
inc
iret
shl
ja
std
outsl
addr16
call
xchg
out
cmpsl
mov
jg
repz
jns
outsb
out
sti
cwtl
inc
data16
test
shrb
ret
jne
push
pop
add
mov
rcrb
pop
jno
repnz
leave
mov
adc
and
jl
in
test
pop
rcrl
mov
sub
and
xchg
sub
lods
xchg
sub
adc
fldenv
sarl
lahf
sbb
stc
inc
jecxz
cmp
fidivs
loope
and
popf
push
aad
pop
fdivs
push
sub
lods
loope
ljmp
pop
lcall
das
mov
or
in
sbb
int3
xor
repz
push
cmp
mov
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
lock
mov
or
lahf
cltd
pop
adc
mov
cmp
test
jle
jl
out
mov
icebp
push
mov
add
mov
pop
and
push
dec
push
adc
jo
push
sbb
push
and
add
mov
mov
mov
lock
push
icebp
cmpb
mov
xchg
xchg
mov
cmpsb
shlb
lea
mov
mov
cmp
mov
stos
mov
fbld
xor
jbe
inc
stos
adc
push
or
dec
shl
bswap
fisubrl
fcomps
push
pop
loop
dec
xorl
push
push
xchg
push
adc
xor
sbb
cmp
add
mov
hlt
inc
fidivrs
inc
mov
addr16
rcll
test
xor
pop
xchg
imul
jb
cmp
jne
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
arpl
adcl
push
add
bound
dec
xor
out
inc
cmp
inc
mov
mov
out
repnz
ret
pop
mov
push
stos
add
imul
mov
cltd
rol
fimuls
xchg
cmc
in
cmp
add
sub
into
pop
imul
push
push
mov
sub
dec
xchg
mov
mov
sbbl
sahf
ret
jb
jbe
scas
jecxz
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
int
mov
les
pushf
jne
jnp
inc
mov
mov
jne
jge
inc
imul
call
and
lahf
xor
sub
in
cli
jnp
out
mov
js
fbld
popf
push
dec
jo
in
inc
in
leave
ret
popf
xchg
mov
test
imul
lret
sub
dec
adc
mov
mov
inc
pop
jp
arpl
int3
rclb
lods
pop
sbb
ljmp
pop
mov
pop
stos
add
sbb
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
std
orl
inc
sbb
scas
mov
bound
sahf
pop
xchg
iret
loope
pop
ret
adc
add
adc
repnz
aam
dec
cltd
aam
jne
insl
dec
pop
xchg
jbe
in
push
leave
inc
fisubrl
cltd
int3
ljmp
test
ljmp
fcoml
and
pop
rcrb
pop
pop
mov
and
hlt
jl
cmp
insl
movsl
pop
jno
jg
cmc
dec
and
ja
cltd
and
mov
icebp
fcomi
movsb
lods
xlat
xor
mov
mov
push
test
ret
addr16
sub
sub
xchg
xchg
sub
xchg
shrl
pop
sbb
in
int
or
pop
ret
ret
aaa
xchg
xor
jecxz
lods
iret
ret
adc
or
push
dec
push
push
std
lahf
cs
test
push
call
xor
subl
int3
repnz
scas
scas
arpl
xchg
pop
cmp
iret
pusha
fnstsw
cmpsb
movsl
test
xor
push
jbe
dec
mov
adc
lret
dec
sbb
adc
push
stos
fnsave
add
pop
adc
mov
scas
adcb
mov
xor
cmc
xor
fwait
inc
mov
inc
mov
cmc
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
loop
and
daa
pop
repz
out
rorl
enter
pop
cmp
pop
sub
cli
jecxz
mov
aaa
push
addr16
rorb
aaa
mov
dec
sahf
inc
adc
inc
cmp
jle
inc
ret
int
dec
adc
cld
mov
mov
xchg
cmc
fldenv
pop
dec
adc
mov
sti
add
imul
sub
and
ret
add
ret
daa
xor
jns
sub
cmp
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
cmpsb
lds
out
cltd
insl
jle
popf
enter
lods
sahf
das
movsl
mov
mov
test
in
mov
das
jno
insb
out
pop
mov
scas
loope
ds
bound
insl
mov
out
lcall
ja
bound
push
inc
mov
mov
push
lret
jae
and
mov
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
imul
lret
cmp
inc
and
xor
pop
loopne
inc
push
iret
ret
mov
mov
push
sarl
mov
mov
cmpb
cwtl
pop
push
inc
dec
negl
fldcw
lcall
adc
repnz
sahf
scas
imul
negb
add
fldt
jge
data16
notb
nop
mov
or
fisubrl
pop
aam
jne
insl
jb
sahf
enter
inc
mov
movsb
popf
call
and
test
jge
inc
addr16
hlt
lea
in
or
jns
mov
mov
leave
or
push
jge
mov
stos
jg
jns
dec
xor
imul
adc
iret
subl
pop
fdivrs
jnp
int3
jno
cltd
push
adc
mov
je
sbb
mov
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
jmp
sbb
mov
adc
lret
or
inc
jg
in
mov
mov
mov
stos
mov
outsl
lods
pop
imul
adc
lret
cmp
ret
jnp
popa
jbe
pop
xchg
stos
inc
addl
fcmovne
aad
sti
stos
xchg
add
xlat
sbb
xchg
and
sarb
test
shll
jecxz
scas
add
jns
les
sub
and
es
fidivrs
dec
test
repnz
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
inc
pushfw
jae
inc
mov
cmpb
sub
js
sbb
mov
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
or
or
cld
loop
lds
shlb
out
inc
rcr
xchg
sub
mov
xchg
push
push
aad
or
push
pop
or
lea
mov
push
jno
fbld
mov
loope
pop
lods
push
xchg
mov
push
and
push
xor
dec
adc
adc
sub
lods
pop
sbb
jo
fists
xchg
and
lods
inc
addr16
inc
mov
cmp
inc
xchg
cmpsl
or
mov
ficomps
arpl
or
push
cmp
test
xchg
sub
mov
in
push
inc
or
jb
sbb
mov
sbb
sub
es
je
seto
pop
xchg
cltd
test
out
jne
pop
adc
add
cwtl
dec
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
movsl
or
pop
into
push
inc
test
addr16
movsl
jne
pushf
jnp
and
movsl
adc
push
enter
or
ljmp
jmp
das
sub
sahf
jns
jmp
add
push
repnz
pop
xchg
je
sub
sub
and
int
jae
cmp
in
scas
aas
test
pop
jmp
jns
out
jno
insb
out
pop
mov
scas
pxor
js
inc
int3
cmpsl
dec
sbb
lock
xchg
jmp
pop
int3
inc
dec
int
cmp
or
push
xor
popa
fsubs
ja
xchg
pop
ds
int3
fwait
nop
xchg
xor
gs
rcll
add
ds
sbb
aaa
in
or
xor
sub
js
test
or
aas
out
mov
loopne
lret
jnp
mov
jns
ds
mov
sbb
aas
ja
int
xor
mov
add
xchg
fldenv
jbe
cmpsb
repnz
fcomip
mov
mov
push
or
and
das
push
jno
cmp
aad
adc
incl
add
push
inc
addl
test
and
outsl
or
cmp
jb
and
mov
popa
sbb
jo
sub
cmpxchg
scas
inc
insb
out
pop
mov
scas
paddw
add
pop
pop
pusha
sub
ror
jecxz
add
in
dec
das
out
dec
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
inc
pushfw
sub
jle
das
xchg
es
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
and
je
sbbl
inc
icebp
xchg
jle
inc
scas
leave
sub
push
mov
insl
cmc
imul
notl
and
jle
sbb
inc
mov
rcrl
jl
jmp
lahf
jp
cltd
inc
cmpsl
mov
andb
add
push
shlb
pushf
test
inc
cmp
cmp
push
inc
mov
sahf
xchg
sbb
js
xchg
xor
dec
in
ss
mov
cs
test
or
into
sahf
ds
rcrl
mov
loop
mov
or
pop
dec
dec
pushf
mov
outsl
fldl
mov
outsb
ret
lahf
repnz
sub
ja
dec
push
push
push
imul
mov
sub
in
into
cld
pop
mov
push
fidivrs
imul
xor
mov
pop
movnti
mov
sbb
test
lcall
daa
and
iret
mov
sbb
and
push
ja
inc
in
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
pop
dec
push
add
shl
je
sub
out
fldcw
out
dec
push
mov
mov
in
scas
aas
test
pop
adc
pop
mov
pop
mov
push
rcrl
cld
repz
out
das
add
or
lcall
incl
mov
out
jae
pushf
sub
divl
pop
jmp
js
enter
aaa
jo
repnz
pop
shrl
loop
je
lret
addr16
jge
int
adcl
aad
add
sahf
pop
fcom
test
shll
out
and
pop
jae
jns
out
lcall
add
rcr
xor
mov
cmp
jp
add
add
mov
sbb
cltd
orb
xor
mov
arpl
mov
clc
mov
push
lea
pop
lret
lret
sub
jb
pop
adc
loop
sahf
jg
push
jno
sub
pop
movsl
fmuls
out
push
inc
push
mov
test
cmp
enter
clc
es
jno
lds
xchg
adc
mov
sbb
lret
clc
aaa
jge
push
dec
mov
mov
addl
xchg
sahf
xchg
sarb
out
ret
xor
lahf
cmpsl
mov
jae
mov
loope
jno
jecxz
fmuls
adc
adc
add
aam
and
imul
pop
push
push
push
adc
test
pop
cmp
repz
sti
jge
pop
dec
divl
daa
cmc
dec
inc
test
cld
push
pop
lock
test
maxps
dec
cmp
sbb
in
jmp
test
aaa
jns
pop
push
test
pop
fucom
cli
mov
sti
stc
cli
in
test
or
test
cmp
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
in
push
mov
inc
and
mov
cmp
push
insb
into
add
and
rorb
add
inc
mov
out
mov
push
sbb
and
sbb
inc
rcrl
mov
jb
test
and
fildl
in
xor
negl
cmpsb
or
dec
xchg
mov
add
cli
jecxz
cmc
add
and
rcll
in
outsl
in
push
dec
ret
scas
arpl
push
int
inc
dec
dec
fcompl
pop
inc
jle
movsb
inc
sbb
mov
out
leave
inc
lods
push
mov
xchg
ljmp
xlat
je
mov
cmp
adc
push
fsubl
adc
flds
sub
cmc
in
push
adcb
mov
xchg
iret
mov
insl
je
xor
imul
fnstenv
adc
repnz
xor
mov
cmpsl
test
aas
xchg
xor
jne
cltd
cmpsl
inc
popf
jp
or
and
cmp
mov
adc
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
jmp
decb
push
insb
xor
lret
mov
in
addr16
or
push
ss
int
inc
jno
pop
cmp
into
ret
addb
sub
xchg
outsb
shll
mov
mov
ss
addb
add
orl
xchg
into
imul
push
inc
xor
mov
cmp
imul
orl
pop
pop
divl
ret
jnp
inc
push
stc
or
or
loope
jnp
in
lret
jg
scas
mov
jbe
jg
dec
push
cmc
daa
testl
lods
clc
adc
shlb
data16
bound
jbe
shrl
inc
jae
lds
inc
iret
mov
dec
inc
lds
or
mov
mov
jo
test
lds
ret
repnz
mov
icebp
push
pushf
mov
in
dec
sub
push
add
adc
mov
or
push
xorl
les
fsubr
jmp
dec
mov
mov
mov
jne
pop
pop
cmp
ret
jmp
inc
stos
xchg
or
fmuls
das
or
imul
inc
adc
mov
leave
jnp
mov
shl
cmpsb
fsubr
adc
xor
and
and
popf
fimuls
mov
jae
or
sbb
mov
fwait
push
dec
mov
and
adc
and
pop
jae
inc
insl
out
sbb
inc
add
pop
stos
ret
sub
jb
mov
aam
and
scas
xchg
sub
inc
mov
pusha
lock
imul
ror
xor
jg
xor
cs
loop
jmp
pop
mov
push
lcall
div
xor
rol
adc
sbb
call
inc
mov
lret
adc
dec
pop
push
cmp
popa
ds
mulb
and
dec
pop
fwait
mov
movsl
iret
aaa
sbb
fidivrl
aad
fisttps
or
in
dec
and
or
cltd
arpl
inc
outsb
cmpsb
sub
decb
fwait
int
xor
jb
fisttpll
cmp
lds
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
dec
xor
or
test
mov
scas
xchg
out
cmpsl
mov
jge
adc
mov
pop
hlt
repz
sbb
pop
inc
dec
and
or
sbbl
inc
and
cltd
sbb
daa
adc
mov
addr16
inc
and
push
dec
push
adc
inc
mov
mov
inc
negl
xor
xor
mov
add
outsl
hlt
jmp
add
ds
hlt
movsb
dec
ljmp
stos
imul
pop
ret
inc
pusha
jnp
sbb
pusha
mov
out
inc
imul
ret
mov
in
inc
dec
fsubl
stos
inc
repnz
jns
mov
aam
out
jns
dec
call
into
sub
das
cmpsb
repz
insl
add
cmp
call
push
jg
leave
xor
les
out
xchg
sbb
sbb
dec
test
dec
fidivrl
cmp
jmp
std
stos
mov
mov
ja
lahf
outsl
aas
addl
mov
sti
sti
and
sbb
lret
dec
sbb
addl
mov
inc
fstpt
mov
inc
pop
sbb
xchg
pop
adc
out
xchg
fcmovnbe
out
jno
pop
in
xchg
pop
push
rol
aam
rcll
cmpsl
adc
addb
and
xor
dec
jbe
mov
std
dec
inc
test
sub
jne
mov
fbld
or
fbstp
sub
pop
test
rcr
xchg
mov
les
cld
xor
and
fisubl
pop
outsb
in
add
jp
add
cmp
lds
fwait
out
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
adc
sbb
push
cmpsl
sahf
loope
dec
iret
shl
idivl
outsl
outsl
call
cmpl
out
scas
mov
sub
adc
mov
outsb
out
arpl
data16
hlt
pop
sub
pushf
ret
rcrb
or
or
sbbb
iret
pop
mov
adc
sbb
xchg
scas
arpl
mov
and
iret
into
ret
adc
lods
aad
ret
ficoms
dec
mov
adc
push
imul
ljmp
les
sbb
mov
mov
aaa
pop
push
lods
jecxz
push
lret
inc
fimuls
push
sar
lcall
pop
cmp
cli
xchg
add
pop
add
pop
push
sub
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
mov
bound
dec
cld
loop
in
nop
xchg
lahf
push
cwtl
lock
mov
add
xchg
out
arpl
mov
dec
mov
push
lods
shrb
aas
fisttps
stc
in
pop
xorl
xor
pushf
ror
dec
cs
jp
mov
int
inc
xor
push
xchg
adc
xchg
stos
notb
js
in
daa
adc
lcall
or
cmpb
push
adc
int
mov
sbb
cltd
orb
xor
pop
mov
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
loope
lret
movb
xor
xchg
adc
push
stos
fs
cmp
sub
in
adc
jae
fsubl
adc
flds
xchg
push
scas
fistl
addr16
mov
jecxz
or
clc
das
push
roll
inc
push
stc
or
or
loope
jnp
in
lcall
shrb
xchg
incb
movsb
jno
cltd
mov
lahf
sti
fwait
pop
mov
jne
loope
sub
lds
mov
lret
dec
sbb
lret
inc
lea
xor
lea
cmp
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
jecxz
inc
dec
mov
cli
ret
mov
xchg
ja
ja
icebp
ret
leave
pop
movsb
mov
pushf
inc
nop
sarl
lods
clc
inc
mov
out
lahf
movsb
leave
pop
subb
mov
push
sahf
jle
and
inc
and
mov
in
xor
dec
mov
inc
xor
or
cmp
fsubs
mov
xor
pop
ret
jge
or
ret
adc
sbb
rolb
inc
clc
or
fwait
push
dec
mov
sahf
dec
dec
aam
inc
addr16
mov
mov
mov
fcom
push
fdivrs
fwait
pusha
jo
ret
shl
lea
int3
arpl
testl
iret
pushf
ret
setl
mov
int
mov
add
mov
mov
bound
or
push
pop
movsl
pop
mov
and
or
inc
ret
int3
hlt
sbb
popf
xchg
push
mov
rclb
sub
dec
aam
dec
cmpl
pop
mov
lret
fsts
pop
dec
mov
mov
dec
sub
mov
pop
imul
jae
orb
xchg
shll
cmpsl
jbe
mov
cmpsb
dec
sub
stos
les
aam
add
fs
mov
adc
sti
xchg
inc
xlat
pop
mov
dec
out
and
mov
or
sbb
cs
xchg
mov
dec
xchg
jo
sub
in
jp
cmp
in
loopne
lea
vpshuflw
or
dec
test
pusha
enter
rclb
add
enter
mov
mov
push
hlt
mov
adc
jg
stos
push
mov
sub
test
ds
in
test
jns
push
xchg
xor
insl
push
sub
pushf
ret
pop
mov
mov
sbb
xor
in
scas
jge
mov
mov
ds
add
fstps
cmp
std
bound
sub
int3
xor
call
xchg
xchg
imul
mov
mov
pop
pop
push
repnz
push
es
test
shr
pop
sub
cmpxchg
out
jno
lahf
outsb
les
push
roll
fsubr
das
dec
lock
jl
das
dec
or
pop
pop
loopne
xlat
sti
in
push
xchg
jno
mov
hlt
test
mov
into
test
repz
loopne
hlt
mov
xchg
mov
add
orl
sub
adc
dec
sbbb
xor
push
repnz
and
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
imul
leave
fsubrl
stos
lret
movsl
mov
add
addr16
repnz
mov
stc
push
mov
sbb
insb
scas
stc
ret
xchg
rcr
mov
and
mov
sahf
ret
adc
enter
dec
movsl
or
sbb
fistl
and
shll
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
cwtl
add
and
mov
mov
negb
mov
je
pop
lods
addr16
fidivrs
pop
xchg
fxch
jb
sbb
lods
mov
inc
lods
andl
pushf
test
inc
enter
jle
nop
inc
stos
jae
nop
and
push
xchg
mov
xchg
and
daa
mov
sub
adc
inc
mov
fstps
jge
imul
js
sbb
mov
adc
inc
ret
sbb
xor
mov
pop
leave
jae
pop
jbe
mov
add
test
mov
sarl
lahf
sbb
stc
inc
jae
xor
mov
pop
outsl
loope
mov
dec
xor
dec
xchg
das
cmpsb
int3
push
aas
scas
shlb
ss
mov
aas
scas
shrb
sub
in
mov
and
xlat
insb
loop
mov
out
out
ret
jg
out
and
lret
and
mov
pop
out
inc
mov
enter
pop
jae
inc
and
cmpb
xchg
fisttpll
add
out
int3
add
lea
popa
sbb
xchg
jne
push
xor
lea
cmp
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
or
cmp
or
mov
into
push
fcmovu
test
xor
ret
mov
inc
lods
mov
push
pop
adc
inc
aas
lea
jns
loope
pop
lods
push
outsl
and
or
je
sub
out
fldcw
dec
xorl
mov
test
adc
test
push
repz
loop
in
jns
rcrl
scas
cs
and
jp
jo
imul
insb
push
jno
mov
sub
aam
sbb
dec
mov
repz
test
cmovae
cld
loop
inc
mov
rclb
push
push
pop
mov
cmp
add
movsb
popf
xchg
mov
cmp
mov
sub
mov
iret
add
test
jns
push
xchg
xor
leave
add
mov
movsl
or
pop
into
push
inc
test
addr16
movsl
jne
pushf
jnp
and
movsl
adc
push
enter
or
ljmp
jmp
das
sub
sahf
jns
jmp
add
push
repnz
pop
xchg
je
sub
sub
and
int
jae
cmp
in
scas
aas
test
pop
jmp
jns
out
jno
insb
out
pop
mov
scas
pxor
js
inc
int3
cmpsl
dec
sbb
lock
inc
es
mov
sbb
adc
inc
push
and
mov
lahf
popa
jmp
jmp
mov
gs
xchg
push
jle
xchg
enter
fldenv
lds
inc
dec
mov
push
loope
sbb
das
or
pop
negl
popf
mov
and
out
divb
xor
xor
adc
dec
push
fwait
cltd
daa
add
les
jmp
inc
inc
xchg
cmpsl
adc
fcoml
insl
movsl
cwtl
icebp
sub
jg
jne
mov
mov
dec
and
in
mov
cmc
mov
orl
cld
imul
ficoml
outsl
shlb
cmp
cmpsl
pop
insb
push
jnp
xchg
add
movsb
fisttps
fwait
movsb
pop
das
jle
scas
jb
ss
inc
pop
sub
push
sbb
inc
imul
iret
aad
inc
scas
mulb
sbb
pop
dec
icebp
iret
test
pop
nop
pop
aam
sbb
push
outsl
cmp
ret
xchg
shl
cmp
bound
movsb
negb
pop
insb
push
inc
inc
mov
imul
in
cmc
nop
outsl
mov
orb
inc
mov
mov
add
cmp
mov
pop
movsl
jns
push
xchg
xor
leave
add
mov
dec
mov
leave
fsubrl
and
mov
adc
sahf
out
call
sbb
ljmp
daa
movsl
leave
mov
push
pop
inc
ljmp
int3
sub
lea
add
pop
lret
repnz
push
aam
jne
insl
bound
dec
out
jb
lods
subb
int3
sub
pop
or
lret
imul
jnp
fdivl
push
out
cmp
push
adc
jmp
sbb
aam
repnz
push
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
test
fldenv
shrb
cmp
mov
popa
dec
mov
into
scas
stos
shll
inc
xchg
in
mov
sub
test
mov
inc
mov
aaa
scas
stc
aaa
add
dec
call
mov
divb
dec
add
nop
xlat
adc
ret
scas
bound
jno
pop
mov
xchg
dec
mov
scas
dec
rcr
mov
and
mov
ret
adc
enter
dec
movsl
or
sbb
fistl
lret
out
mov
xor
shll
or
scas
aaa
mov
cli
jnp
inc
mov
mov
mov
cmp
ret
xchg
sub
and
push
cmp
in
scas
out
jp
dec
sbb
cmpsl
ret
mov
add
arpl
jecxz
sarb
add
ss
push
sarl
jg
and
xchg
dec
in
xor
mov
ds
in
and
jae
test
ret
cmpsl
jp
mov
cmp
mov
xlat
mov
hlt
std
repz
lret
repnz
cli
add
mov
xchg
inc
cltd
or
xchg
shll
mov
dec
fwait
pop
ror
adc
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
pop
arpl
inc
outsb
cmpsb
sub
mov
mov
push
iret
sbb
push
shr
inc
xchg
jae
in
mov
push
iret
mov
lgs
outsb
out
arpl
das
push
sub
push
clc
mov
fsubrl
cmc
jl
fmul
adc
outsl
cmp
fld1
stc
jp
scas
scas
loope
sti
mov
cltd
mov
pop
cs
icebp
in
jns
outsb
out
lahf
stc
sbb
pop
inc
loope
lea
pushf
shrl
loope
inc
push
push
adc
dec
dec
movsl
shl
add
and
dec
push
nop
push
mov
sahf
inc
movsb
jle
ljmp
mov
lret
roll
mov
je
test
mov
xor
mov
cmp
rcrb
adc
test
push
sti
push
push
int3
leave
mov
fdivl
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
or
test
mov
cmpsb
sub
mov
mov
dec
mov
xor
xchg
fdivl
adcb
les
test
xor
not
jle
pop
xchg
adc
cld
jb
ds
add
cmp
leave
fs
ror
aas
inc
scas
into
mov
out
repnz
sub
mov
push
repz
cmp
call
in
enter
loopne
hlt
mov
xchg
mov
add
orl
sub
adc
dec
sbbb
xor
push
repnz
and
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
loopne
jg
cmpsl
xlat
in
sub
push
jo
insl
mov
jne
pop
push
xchg
popf
cmp
imul
push
adc
mov
xchg
mov
frstor
cmp
movsl
imul
stos
sub
int3
add
lea
add
pop
fcoms
shl
pop
dec
mov
enter
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
fisubl
inc
andl
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
loop
and
daa
pop
repz
out
icebp
mov
xchg
int3
cmpsb
sub
sbb
pop
popf
sar
stos
test
imul
je
pop
gs
mov
push
aaa
ljmp
fucomip
repz
sahf
popf
jecxz
push
sbb
daa
or
xchg
push
jmp
ja
popa
stos
mov
dec
mov
out
testb
shll
in
dec
sbb
jne
addr16
flds
sub
sahf
mov
mov
test
jl
sbb
mov
push
inc
inc
jl
rcl
lcall
mov
jbe
popf
adc
gs
loop
loope
jg
pop
rcll
fcompl
adc
das
mov
clc
das
mov
mov
int
dec
mov
out
dec
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivrl
inc
pushfw
and
jle
pop
xchg
add
sbb
mov
dec
sbb
xchg
mov
pop
adc
adc
inc
push
add
and
push
sahf
inc
call
sbb
enter
cmp
mov
mov
mov
mov
dec
inc
lret
pop
ficomps
sbb
stos
subl
pop
mov
xor
dec
mov
xchg
cmp
jns
lcall
add
jo
test
xchg
fcmovne
aad
adc
sub
pushf
shr
rcrl
pop
xor
mov
mov
sbb
and
lret
add
xchg
js
std
decl
mov
pop
push
pushf
jmp
jno
sbb
ss
in
cli
loopne
xchg
mov
sbb
sahf
sub
adc
into
jae
ljmp
hlt
test
adc
add
sbb
lds
lea
adc
and
mov
incl
int3
push
xor
std
cmp
push
inc
sahf
rcll
cmpsl
adc
cmpb
mov
paddusb
xchg
mov
push
pop
test
test
ljmp
ffreep
shl
inc
addr16
loopne
inc
icebp
add
add
loopne
inc
inc
out
lcall
mov
lcall
sub
dec
fdivrl
movsb
mov
out
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
cwtl
add
and
mov
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
dec
dec
rcrb
jmp
lds
jmp
or
lret
rcrl
cli
orb
test
sub
adc
mov
scas
rorl
pop
mov
sbb
dec
push
xchg
fwait
aaa
fisubl
shlb
xchg
movsl
aam
cmp
roll
shll
push
int
add
decl
loop
lret
movsl
inc
fcomps
lds
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
mov
cmp
das
push
roll
scas
repz
push
xchg
lods
out
cmp
out
repz
sub
xchg
mov
lret
xchg
repz
jns
outsb
out
sti
cwtl
inc
test
ss
push
shll
inc
stos
jae
repnz
or
xor
ja
repnz
pop
movsl
jnp
enter
not
xor
and
iret
inc
fistps
sbbb
push
sar
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
cltd
add
cld
rcr
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
cmpsb
lds
imul
inc
movsb
xchg
insb
int3
push
test
cmp
iret
jns
dec
sbb
cltd
xor
jo
mov
inc
dec
out
xchg
js
popa
sbb
add
ljmp
repnz
sti
scas
into
mov
out
repnz
ja
ja
xor
je
fidivl
pop
push
sub
inc
fadd
inc
cmp
std
fwait
mov
mov
xor
add
test
add
fsubrs
test
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
in
mov
push
mov
cltd
jo
lock
jge
cmc
cld
or
lret
fcompl
rep
xchg
imul
aad
or
stos
popf
pop
dec
or
out
sub
mov
sub
in
inc
aas
adc
pop
daa
sub
out
dec
and
ret
mov
inc
push
insl
imul
push
mov
pop
outsl
sub
test
add
sub
fstpt
loopne
adc
dec
mov
lds
adc
pop
dec
decb
std
mov
mov
jnp
inc
push
mov
or
in
mov
xor
inc
add
inc
js
mov
fsubs
out
rcll
mov
icebp
popf
pop
jnp
sbb
lret
les
outsl
data16
xchg
xchg
rolb
repz
pop
pop
sbb
push
adc
stos
and
sarl
cmpl
adc
pop
mov
repnz
or
leave
push
enter
jnp
sbb
int
shrl
in
movsl
cmp
sarb
xor
test
mov
push
push
int
mov
pop
jle
jge
jnp
sahf
das
xchg
stc
cli
in
test
or
test
sbb
inc
outsb
cmpsb
sub
mov
mov
dec
loopne
subl
push
inc
lcall
repz
mov
out
mov
andl
hlt
inc
jg
sbb
cs
call
mov
add
js
fnstenv
adc
mov
mov
mov
xchg
fadd
pop
aas
xchg
xor
jne
cltd
cmpsl
inc
popf
pop
inc
or
and
cmp
mov
adc
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
or
cmp
or
mov
into
push
fcmovu
test
xor
ret
mov
inc
lods
mov
push
pop
adc
inc
aas
lea
jns
loope
pop
lods
push
outsl
and
or
je
sub
out
fldcw
dec
xorl
mov
test
adc
test
inc
icebp
sbb
js
push
shlb
inc
sarb
js
fildl
je
or
les
xchg
and
fldl
inc
mov
movd
mov
or
pop
fsubl
stos
inc
mov
cmpb
xor
loopne
dec
fistpl
add
je
mov
or
outsb
stos
sbb
cs
add
stos
test
dec
push
nop
push
mov
push
jl
mov
stos
sbb
cmpsl
mov
nop
mov
mov
mov
and
adc
arpl
movsl
mov
fdivs
sbb
mov
xchg
adc
xor
lods
xchg
adc
dec
jno
pop
mov
adc
imul
and
call
ret
sbbl
divb
loope
mov
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
sub
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
and
rorb
add
inc
mov
or
inc
and
or
loopne
cmp
adc
and
push
dec
push
adc
inc
mov
mov
pusha
fimull
push
iret
inc
rcr
cmp
add
leave
cmpsl
inc
icebp
xchg
add
and
inc
xor
cmp
je
imul
call
sub
imull
jge
sbb
mov
test
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
xor
inc
xchg
or
push
cli
cmp
stos
xor
xor
mov
mov
sti
cmpsl
js
inc
mov
pop
jb
add
mov
out
push
scas
shll
xor
sub
add
lea
addr16
mov
fstl
mov
out
lods
mov
mov
and
loope
dec
pop
jle
nop
add
dec
adc
add
xchg
adc
leave
pushf
into
ljmp
dec
adcl
hlt
test
sahf
sbb
jecxz
popf
mov
pop
adc
lods
cmpsb
fdivs
pop
mov
lods
xchg
sub
adc
fldenv
leave
mov
xchg
repnz
jmp
mov
out
jecxz
mov
mov
fs
add
shlb
je
sub
and
pop
lcall
push
xor
xor
jae
ss
or
repnz
xchg
jo
rcl
mov
aam
clc
xor
mov
adc
dec
cld
or
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
loop
and
daa
pop
repz
out
roll
enter
pop
test
mov
xorb
aaa
push
addr16
rorb
aaa
mov
dec
sahf
inc
adc
inc
cmp
jle
mov
popf
movsl
dec
sbb
jmp
popa
mov
mov
and
push
dec
xchg
mov
dec
mull
stc
cmpl
ss
cli
mov
adc
push
imul
enter
mov
outsb
movb
insl
int3
imul
mov
repz
inc
cmp
int
pop
subb
inc
in
fwait
xchg
jge
pop
movsb
mov
mov
pop
aad
xor
push
mov
cmp
inc
fisubl
outsb
mov
cmc
mov
jno
jnp
inc
mov
add
adc
cbtw
add
and
mov
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
adc
rcrb
test
ret
shrb
or
dec
adc
xor
adc
and
test
mov
sub
repnz
add
lock
mov
xorb
mov
xchg
ss
ja
fs
dec
sub
pop
mov
notb
dec
xchg
addr16
jmp
in
scas
pop
mov
sbb
adc
stos
adc
fwait
mov
lret
je
mov
ja
call
or
mov
repnz
insl
aam
cmp
dec
les
add
shll
pop
shr
adc
iret
pop
test
xor
popf
xchg
ljmp
add
mov
fwait
push
dec
mov
sahf
dec
dec
aam
je
cmp
pop
cmp
cmp
and
mov
xchg
xor
sub
ljmp
mov
jae
adc
pop
mov
enter
cs
mov
cmp
push
dec
rcrb
jno
and
stos
xchg
push
mov
cmp
cmpl
xlat
cmc
cmp
movsl
mov
inc
mov
out
addr16
popa
push
sub
lods
xchg
sub
adc
fldenv
leave
mov
xchg
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
add
sub
shrb
dec
push
adcb
and
adc
jb
lods
scas
das
test
adc
and
jb
or
pop
fwait
leave
loop
loop
ljmp
mov
dec
cmpsl
imul
pop
subl
icebp
push
fdivrs
cli
mov
push
pop
pop
imul
add
mov
xchg
ds
cmovae
in
add
sbb
add
andb
js
sbb
sahf
es
cs
js
push
pop
roll
cli
int3
mov
mov
popa
push
negl
push
xor
jl
xor
add
mov
inc
sbb
cmpsb
gs
jae
fistpll
ret
lods
lret
mov
or
xor
push
xor
or
pop
mov
jne
les
cmp
out
bound
sub
sub
dec
inc
bound
xchg
lock
cmp
fcoms
mov
mov
jno
aad
iret
cltd
and
inc
mov
sahf
adc
pop
test
cld
loop
in
dec
and
bound
fwait
push
dec
mov
mov
dec
dec
jge
xchg
cmc
mov
cmp
movsb
ret
xor
cmpsl
mov
jae
mov
int
jno
jecxz
fcoms
mov
addr16
jmp
sbb
rclb
andb
das
ljmp
jmp
inc
jecxz
iret
xchg
mov
xchg
xchg
sub
fdivr
lock
xor
out
ret
aad
shlb
add
mov
cmp
sbb
fs
int3
mov
lds
test
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
cmpsb
lds
imul
and
popa
xchg
into
and
das
scas
int3
push
mov
pop
and
movsl
sub
add
addr16
cmp
xor
das
es
sbb
jp
inc
out
add
cwtl
inc
jge
pushf
jecxz
out
repnz
sub
divb
std
pusha
pmulhw
xlat
repz
mov
mov
fwait
jmp
insb
mov
xor
out
es
mov
push
loop
xchg
ds
push
dec
mov
popf
negl
mov
mov
mov
test
add
inc
sbb
dec
jecxz
movsl
mov
cltd
jo
or
cmpsl
push
sahf
mov
mov
iret
sbb
fwait
aam
sub
lods
sub
mov
and
adc
inc
mov
popa
pushf
dec
ret
sub
push
pop
push
leave
ret
leave
or
subb
xor
cmpsl
loop
dec
add
mov
rcrb
jnp
mov
mov
ficoms
cmc
cmp
inc
xchg
ljmp
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
pop
sarl
jle
ljmp
dec
inc
bound
in
push
test
lock
inc
iret
mov
dec
inc
out
shlb
gs
hlt
movsl
adc
xor
int
sarl
ret
xchg
add
in
loopne
inc
jge
mov
cmp
mov
and
mov
push
adc
mov
adc
maxps
stos
dec
mov
loopne
jno
lds
push
cld
sub
mov
mov
adc
mov
mov
rorl
cmp
or
cmp
adc
mov
push
or
mov
xchg
pushf
xchg
lcall
sbb
cmovns
and
inc
pop
leave
bnd
inc
mov
out
or
repz
cmp
jl
fadd
int
ljmp
out
sbb
dec
je
fisubl
lahf
sti
fwait
pop
mov
jne
loope
sub
lds
mov
lret
dec
sbb
lea
sub
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
sar
jecxz
sbb
sbb
ja
push
dec
cmpsb
loop
and
pop
adc
dec
sbb
jno
subb
lret
fucomp
mov
pop
cmpsb
in
xor
dec
ret
sub
pop
cmp
mov
cli
and
mov
push
mov
inc
pop
mov
shlb
dec
arpl
pop
dec
rcrb
jno
orl
add
inc
fcoml
jg
xchg
adc
sbb
mov
push
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
test
fisubs
shrb
cmp
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsl
aam
dec
sbb
sub
push
mov
insl
aad
mov
outsb
xor
scas
popa
xchg
rcl
movsl
push
test
push
sub
jb
fcoml
movsb
rcrl
mov
xchg
mov
mov
cs
cmp
mov
sub
in
pop
dec
adc
sub
lods
xchg
mov
mov
and
lods
adc
fisubl
negb
dec
cwtl
jae
adc
leave
icebp
xchg
adc
sbb
mov
push
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
test
sbb
shrb
cmp
mov
mov
out
mov
mov
mov
das
orb
aam
clc
mov
std
cmp
pop
mov
es
leave
cmpsl
inc
icebp
xchg
jle
sbb
subb
clc
pop
enter
int3
inc
push
cltd
icebp
testb
mov
mov
cmp
xor
ljmp
mov
sub
sub
dec
fcomp
xor
mov
xchg
aam
jne
insl
pop
fwait
enter
pop
push
lret
insl
dec
lret
outsl
fistl
xlat
jg
test
loop
ljmp
cmpsl
xlat
adc
adc
lret
gs
mov
fidivs
ja
pop
dec
pop
mov
imul
addr16
fstps
scas
sub
ljmp
outsb
out
repz
rorb
dec
xchg
icebp
addr16
loop
popa
lock
pop
xor
mov
lods
xor
push
add
lret
sti
xor
inc
xchg
in
mov
arpl
xchg
std
pop
int3
push
pop
dec
gs
jns
rolb
or
mov
mov
sbb
jle
ljmp
stos
sub
mov
push
movsb
jmp
push
ja
fs
movsl
mov
stc
mov
mov
sub
jl
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
cmp
fnstcw
es
cmp
pop
pop
or
imul
fadd
cmp
outsb
cmp
scas
mov
out
jb
fsubrl
jbe
sbb
jnp
dec
ljmp
test
dec
les
and
or
mov
dec
dec
mov
sbb
jb
mov
xor
call
rcrl
mov
into
fwait
cmp
pop
dec
sbb
stos
add
sbb
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
and
nop
push
lcall
scas
cmp
inc
cmpl
popa
les
push
mov
push
outsb
mov
sbb
arpl
in
es
outsb
scas
subl
imul
sub
test
mov
jb
pop
adc
xchg
aam
jno
in
mov
xchg
or
add
jb
sbb
js
push
shrb
inc
sarb
js
fildl
je
or
les
xchg
and
fldl
inc
mov
movd
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
arpl
sub
xchg
inc
mov
shlb
into
test
rolb
repnz
movsb
xchg
mov
adc
mov
mov
mov
cmc
mov
shlb
fsts
inc
pop
and
insl
movsl
mov
jg
adc
mov
adc
sbb
mov
sub
sbb
jae
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
jnp
cmp
sti
push
aas
lods
xchg
pop
test
lret
cmp
clc
add
rorl
scas
jbe
cltd
imul
test
scas
testb
call
aas
xor
push
jae
fidivrs
sahf
sub
adc
jg
pushf
mov
adc
aas
orb
adc
add
pop
movsl
addr16
sub
sub
add
addr16
adc
lea
adc
and
mov
ret
pop
inc
pusha
lods
in
xor
add
shlb
inc
test
dec
jecxz
sbbl
hlt
mov
mov
aad
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
int3
or
jae
mov
mov
cmp
cmpsl
test
jge
sbb
cmpsb
sub
mov
mov
dec
mov
xor
xchg
fdivl
adcb
les
test
xor
not
jle
pop
xchg
adc
cld
jb
ds
add
cmp
leave
fs
ror
aas
inc
scas
into
mov
out
repnz
sub
mov
mov
in
push
xchg
fnsave
sbb
mov
sbb
sub
es
je
seto
pop
xchg
cltd
push
cmpsb
out
jne
pop
adc
add
cwtl
dec
and
mov
mov
test
add
inc
sbb
dec
jecxz
movsl
mov
cltd
jo
pusha
aas
js
push
shl
xor
in
pop
jbe
fwait
ds
push
inc
in
es
push
or
jmp
mov
outsb
mov
rorl
imul
jb
cmpsb
ja
mov
sbb
or
dec
lea
add
push
out
mov
or
movsb
js
jbe
xor
fnsave
cli
sbb
cmp
std
cli
jnp
inc
mov
add
adc
mov
pop
repnz
adc
mov
shr
jmp
jnp
out
mov
out
loopne
js
xlat
cmp
lahf
lea
stc
testb
pop
test
mov
or
repz
lods
xchg
add
xchg
xor
jbe
mov
mov
imul
and
clc
push
aam
and
push
aas
mov
adc
outsl
mov
or
or
mov
ja
adc
mov
xor
and
ss
int
inc
mov
scas
lods
bound
movl
and
sbb
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
cmp
imul
or
pop
mov
gs
pop
xor
mov
cs
adc
imul
rol
dec
jae
xor
jns
dec
mov
adc
lret
jae
loope
pop
fdivrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
pop
adc
mov
mov
xchg
cmp
or
aas
test
fildl
inc
lret
mov
mov
push
jle
xor
mov
fwait
xorl
ret
mov
mov
daa
icebp
stc
mov
xor
insl
movsl
imul
test
push
inc
stos
xchg
scas
xchg
adc
push
mov
inc
int3
jno
mov
pop
imul
pop
out
push
fsubl
ja
in
add
shlb
je
sub
daa
jne
sahf
inc
mov
ss
rsqrtps
ret
mov
sbb
add
and
sub
icebp
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
gs
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
arpl
es
inc
mov
adc
pushf
pop
mov
call
push
add
mov
les
xor
push
cmp
roll
xorb
out
push
push
inc
int
and
pop
test
sbb
les
cmp
leave
test
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
xchg
aaa
add
mov
push
add
mov
cmpsb
xor
jb
fisttpll
cmp
lds
fsub
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
dec
xor
or
test
mov
scas
xchg
out
cmpsl
mov
jge
adc
mov
pop
hlt
repz
sbb
pop
inc
dec
and
xchg
and
add
out
call
jmp
loop
sbb
lods
adc
and
push
dec
push
adc
inc
mov
mov
pusha
fimull
push
lods
inc
rcr
cmp
add
outsl
hlt
sbb
push
inc
out
mov
xchg
scas
sub
int3
dec
pop
fwait
mov
and
loope
jne
mov
and
in
lret
cmp
subb
pop
imul
mov
shrl
cs
or
xchg
push
mov
inc
mull
inc
lods
xchg
inc
sbb
loopne
fbstp
fists
pop
enter
pop
movsl
arpl
mov
xchg
mov
filds
orb
sub
xchg
cwtl
cwtl
popf
jmp
dec
mov
mov
inc
add
test
in
xor
and
inc
jp
jmp
scas
sub
pop
mov
mov
push
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
fwait
rorl
mov
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
sub
adc
aas
add
lods
cmpsb
sbbb
or
cmpsb
ljmp
ret
mov
in
imul
dec
and
mov
scas
das
cmpsb
in
enter
sub
sub
pop
mov
mov
je
mov
repz
xchg
aaa
jp
add
sub
pop
es
jno
lds
xchg
adc
mov
sbb
rcrl
repnz
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
ljmp
ja
mov
push
mov
adc
jb
push
add
push
aad
or
and
lock
jbe,pt
fs
sub
xlat
jmp
call
pop
addb
fcomps
das
fildl
jl
mov
add
dec
lds
push
cmpb
xor
mov
push
aad
les
lcall
sbb
std
fistpll
stc
mov
mov
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
cmp
imul
or
pop
mov
gs
pop
xor
mov
cs
pop
cld
xor
cs
fadds
mov
dec
xchg
jge
xchg
or
test
pop
stos
fsubs
aam
cmp
lods
push
jne
outsl
rcll
mov
mov
out
and
andb
js
sbb
sahf
es
cs
js
mov
shl
jae
fcomi
pop
rolb
call
int3
pusha
adc
fmull
xor
push
rol
sbb
stos
arpl
cvttps2pi
add
iret
pop
push
cmp
insb
mov
sbb
jno
rcrl
cmp
mov
jae
sbb
iret
pop
test
lahf
lcall
sub
icebp
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
lds
cmp
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
dec
xor
or
test
mov
scas
xchg
out
cmpsl
mov
jge
adc
mov
pop
hlt
repz
sbb
pop
inc
dec
and
or
mov
dec
dec
mov
sbb
jb
mov
hlt
dec
add
xor
and
mov
rcrl
mov
into
fwait
cmp
pop
dec
sbb
stos
add
sbb
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
lcall
scas
cmp
inc
cmpl
jae
jecxz
cmp
ret
mov
in
dec
dec
jecxz
enter
jg
xchg
push
and
test
sub
outsl
xchg
pop
lcall
cmp
stos
or
test
ss
scas
sub
sti
daa
mov
clc
xor
dec
and
cmpsl
imul
cmc
add
or
psraw
test
and
cmp
mov
loope
pop
pop
pop
mov
mov
in
add
sbb
add
andb
js
sbb
mov
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
dec
mov
insb
push
sub
push
mov
insl
push
imul
test
imul
cmpl
imul
sub
xor
xorl
push
outsl
and
repnz
xchg
stos
mov
aam
add
xchg
ss
jmp
aad
adc
jbe
call
mov
fwait
stc
loop
cmp
mul
dec
clc
aas
fisubs
dec
mov
repnz
test
pop
aam
lret
fwait
adc
dec
inc
scas
fisubl
pop
sarb
ret
jp
gs
in
call
popf
fwait
mov
imulb
and
and
and
mov
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
bound
push
push
push
push
mov
inc
ret
pop
ficomps
pop
push
inc
sub
ss
int
inc
loop
imul
mov
sub
or
add
add
loopne
inc
inc
out
lcall
mov
lcall
sub
dec
fdivrl
movsb
mov
out
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
bound
pop
repnz
xchg
clc
cmpsb
fucomp
xchg
mov
sarl
jne
sbb
aas
add
jns
push
lret
mov
cmc
in
loop
adc
arpl
out
andb
rolb
ss
push
andl
push
push
es
pop
mov
mov
add
push
inc
sub
pop
push
test
or
push
imul
repz
sti
popf
cmpl
rorl
and
cld
pop
inc
xchg
mov
jle
das
mov
paddusb
xchg
mov
push
pop
test
test
ljmp
ffreep
shl
inc
addr16
loopne
inc
icebp
add
add
loopne
inc
inc
out
lcall
mov
lcall
sub
dec
fsubl
out
jno
lds
out
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
cbtw
add
and
mov
mov
negb
bound
fisttpll
ja
jecxz
xor
les
dec
in
cmp
mov
cmpsl
inc
inc
les
xchg
or
shlb
ja
popf
cltd
mov
sbb
dec
pop
push
mov
jge
sub
push
xchg
cltd
popa
pop
call
push
aam
repz
into
inc
xchg
sub
idivb
rol
leave
and
fdivr
push
aam
dec
and
adc
out
mov
sub
push
add
loopne
mov
xchg
cmpsl
pop
sub
adc
clc
pop
cld
sub
cmc
fcoms
dec
mov
cltd
push
repz
xchg
aad
nop
cmp
shlb
cmp
cmpsl
pop
insb
push
jnp
xchg
add
movsb
fisttps
mov
mov
popf
mov
and
lret
add
mov
outsb
rcll
cwtl
jge
jge
outsl
jg
std
xchg
xor
lret
scas
in
lock
test
das
push
testl
jg
lahf
dec
mov
sarb
rolb
ss
push
andl
fcmove
mov
andl
add
and
push
inc
push
adc
test
pop
jl
mov
xlat
bound
sbb
hlt
xor
stos
jns
sub
jecxz
add
xorb
into
pop
mov
insl
and
inc
sbb
test
rcl
les
push
idivl
fs
xor
dec
add
cmp
add
imul
lods
test
push
daa
sub
lcall
cltd
and
push
jbe
sub
stos
aad
xor
xor
mov
mov
frstor
and
lret
add
mov
out
push
out
xchg
add
fbld
addr16
enter
stos
sub
cmp
mov
mov
mov
test
repz
jge
hlt
and
mov
pushf
lahf
loop
shlb
push
imul
das
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
lret
sbb
iret
ret
clc
sti
mov
stc
clc
jp
add
add
mov
sbb
orb
xor
mov
fmull
jnp
inc
movsl
lret
and
shrl
rclb
jg
repz
lret
pop
lods
mov
popf
shl
or
testb
mov
or
fisubrl
pop
jmp
ljmp
mov
lret
cltd
gs
push
rcrb
pop
dec
mov
and
or
repnz
cmp
mov
stc
and
add
aas
js
or
push
icebp
or
pop
xchg
sbb
mov
push
aas
fwait
lret
in
mov
mov
or
mov
add
dec
std
bound
cltd
add
mov
mov
mov
mov
push
and
add
xchg
pop
xchg
dec
and
push
scas
push
test
call
iret
push
and
adc
sbb
xchg
arpl
out
pop
sub
mov
add
sbbl
mov
push
mov
out
ret
sbb
xlat
stos
movsl
and
push
into
push
mov
insl
movsl
imul
mov
jmp
push
mov
dec
jno
jecxz
nop
std
pop
mov
sahf
ret
jb
jbe
scas
jecxz
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
iret
iret
mov
ficomps
jnp
inc
mov
cwtl
add
cmp
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
xor
mov
jno
shrb
shll
or
inc
sysexit
xchg
call
jmp
jecxz
dec
ja
push
pop
jnp
rclb
inc
cmpsl
jmp
sahf
sub
stos
lock
daa
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
cli
or
mov
aad
inc
sub
rcr
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
cmp
imul
or
pop
mov
hlt
and
outsl
ljmp
cmp
enter
mov
inc
scas
outsb
or
mov
mov
xchg
sub
mov
xor
cmp
pop
inc
push
sbb
or
ret
jo
xor
popf
and
inc
cmp
jo
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
add
inc
pop
mov
xor
jbe
roll
add
into
stc
push
xchg
movsb
mov
pushf
dec
ficomps
adc
and
lods
sbb
and
jecxz
js
lahf
mov
mov
xor
dec
add
repz
xchg
ficoml
sbb
lret
sbb
daa
sub
lcall
jns
cmp
stos
sub
stos
aad
xor
xor
mov
mov
pushf
mov
and
lret
add
mov
out
push
scas
shrl
xor
inc
sub
fs
lcall
jb
lods
daa
jae
fidivrs
js
xlat
jmp
jle
mov
adc
enter
pusha
dec
xchg
mov
cmpsl
inc
sbb
and
mov
dec
imul
or
arpl
call
sub
pop
call
iret
lahf
frstor
jns
pop
loopne
outsl
sub
jo
flds
hlt
dec
inc
sbb
rolb
popa
lcall
xchg
or
pop
repz
rcrb
jbe
mov
movl
sub
test
in
andb
out
add
dec
mov
rorl
inc
mov
push
inc
cmp
imul
or
pop
mov
hlt
and
outsl
ljmp
cmp
enter
mov
inc
scas
outsb
or
mov
imul
inc
dec
jge
and
xchg
push
pop
out
xchg
mov
mov
fidivrl
sti
in
popa
insl
in
push
mov
aaa
dec
pop
stos
loopne
hlt
js
and
cmpb
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
sbb
jnp
add
cld
push
cmp
xor
mov
push
add
dec
mov
insb
push
imul
in
insl
ficomps
adc
and
lods
fldt
add
ret
pop
cmp
mov
call
imul
cmpsl
mov
xor
fsub
push
pop
bound
insl
xchg
sub
xor
push
mov
mov
int
or
mov
xchg
sbb
add
sbb
sbb
enter
int
and
fcmovbe
cmp
sbb
mov
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
loop
and
daa
pop
repz
out
xchg
inc
fxch
bound
loope
lea
sbb
nop
fcoms
adc
aam
xor
xchg
dec
and
adc
jmp
inc
push
pop
add
cmc
test
popa
push
push
rol
aam
movzwl
shll
fimull
xlat
aad
add
pop
dec
les
dec
xor
stos
jg
xor
xor
add
sub
jb
fsts
cmovae
sahf
jge
ljmp
inc
cs
dec
push
adc
sub
jne
mov
out
fistpl
mov
scas
push
mov
das
mov
in
scas
aas
test
xchg
in
cmpxchg
out
jno
insb
out
pop
mov
scas
paddw
add
pop
pop
pusha
sub
ror
jecxz
nop
cltd
cmp
or
and
scas
cmc
out
sti
mov
lret
fs
inc
popf
mov
ret
ret
fldenv
scas
dec
int
sarl
push
scas
std
int3
inc
aas
mov
dec
jle
nop
inc
lret
ret
aam
and
push
xor
sbb
dec
ljmp
cltd
popa
ds
add
xchg
sbb
adc
cld
sub
sbb
insl
jecxz
and
les
mov
stc
shr
adc
ret
cltd
std
mov
mov
aaa
stos
lock
pop
cli
sub
pop
inc
aam
dec
sbb
xor
pop
jp
pushf
movsl
xchg
xor
lcall
cmp
adc
mov
adcl
jbe
sub
sub
pop
mov
mov
jmp
scas
cmp
push
leave
hlt
inc
and
leave
push
aad
add
popl
push
mov
js
lock
dec
xchg
inc
push
fidivrl
sub
xor
clc
scas
jp
rorl
into
inc
lret
loop
movsl
fists
aaa
imul
lock
or
movsb
jo
mov
mov
shlb
jnp
sahf
popa
jp
add
pop
mov
add
mov
stc
aas
roll
popf
in
imul
sub
loope
sbb
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
into
cmp
ret
int
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
or
and
iret
xchg
shr
jo
sbb
xchg
xchg
xor
addr16
clc
push
sub
leave
cld
icebp
jg
out
ud0
lock
xchg
mov
imul
rolb
push
adc
mov
jno
fdivrs
cli
jno
mov
lahf
inc
push
orb
jb
imul
mov
icebp
enter
push
leave
daa
in
hlt
xor
and
lods
call
fsubrl
int3
adc
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
cmp
pop
push
mov
cmp
ja
xchg
movsb
enter
cmc
pop
push
fistl
addb
negb
and
mov
add
sub
pop
daa
sub
int3
sub
pop
push
leave
ret
cwtl
imul
jge
pop
inc
adc
dec
jl
addl
cmp
fcmovnu
adc
xchg
jnp
xor
sbb
xor
je
popa
sbb
in
cmp
mov
and
adc
mov
pop
jae
inc
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
and
sbbl
mov
bound
or
push
pop
push
test
mov
pusha
push
sub
push
xor
loop
iret
orl
shrl
jmp
decb
aad
push
arpl
push
lds
and
and
jo
cltd
dec
mov
in
mov
mov
xor
dec
adc
std
fnstenv
mov
add
scas
fsubr
adc
sub
cmp
fimull
mov
imul
lcall
jge
pop
xor
mov
mov
cld
mov
and
lret
add
mov
outsb
rcll
cmc
or
xlat
lock
sub
popa
in
dec
push
cmpb
cs
lahf
jmp
loope
lahf
stc
cwtl
shll
pop
xor
jnp
sbb
xchg
andnps
sbb
push
inc
push
pop
lock
or
xchg
xchg
adc
adc
xor
divl
rol
les
shlb
adc
mov
in
and
mov
movsb
mov
outsb
xor
and
xor
dec
sbb
fnstsw
xchg
lret
sbb
sahf
jnp
popa
jbe
lods
push
outsl
sbb
mov
xchg
sub
and
ja
lock
or
pop
nop
sbb
mov
pop
add
cmpxchg
out
jno
mov
lea
jnp
das
es
or
jb
mov
jl
enter
and
jecxz
mov
out
imul
repz
icebp
pop
pop
dec
mov
lds
js
fdivrl
sti
icebp
cltd
xchg
jge
jg
dec
lea
xchg
sbb
rcll
addl
push
aad
lret
gs
loopne
cmc
mov
add
jge
out
sbb
pop
in
pop
pop
add
cmp
scas
ds
mov
lock
imul
icebp
push
gs
push
or
push
decb
lock
dec
adc
out
clc
xchg
test
push
pop
sbb
leave
cmp
inc
dec
ficoms
push
and
call
mov
cltd
jge
dec
inc
add
jl
ret
xor
jbe
scas
jecxz
pop
lock
jl
rcll
pushf
adc
push
or
ret
sahf
inc
and
cmp
std
cli
jnp
inc
mov
cwtl
add
cmp
xchg
xchg
pop
inc
mov
ds
or
ror
movsl
ret
and
xchg
mov
aas
cltd
pop
ficoms
mov
jns
es
lahf
cwtl
add
test
add
sbb
bound
test
and
mov
dec
sub
lret
and
sub
shl
stc
popf
jecxz
push
arpl
cwtl
sbb
in
aas
sub
dec
and
add
jbe
lea
fnsave
jg
mov
pop
in
nop
and
les
sbb
sub
mov
pusha
in
movsl
dec
push
test
xor
test
lods
or
cmp
adc
mov
push
leave
dec
jl
rcl
lcall
sbb
test
mov
mov
push
int
push
xchg
int3
add
inc
fcoml
jg
mov
addb
mov
shrb
add
cmpsl
cmc
jmp
inc
cmpsb
shll
out
mov
fists
lea
aas
cmpl
loope
movsl
or
daa
mov
mov
in
mov
inc
xchg
jmp
xchg
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
jp
add
add
mov
sbb
xor
mov
pushf
dec
and
inc
xor
cwtl
shrl
rclb
jg
inc
out
sti
jp
into
or
adc
and
inc
pop
shl
movsl
push
adcb
lock
add
jge
sub
fwait
xchg
fcoms
pushf
sub
or
cmpsl
push
pop
jno
in
lds
js
inc
mov
jne
mov
cmp
mov
and
adc
and
pop
jae
inc
insl
out
pop
aad
jns
mov
call
repnz
pop
icebp
scas
popa
xchg
push
jl
push
mov
xor
xchg
ss
inc
pop
jmp
test
cmpsb
and
lods
pop
dec
inc
outsl
mov
cmpsb
mov
jmp
cltd
test
cmpl
loopne
sbbl
ret
inc
mov
sbb
insl
rolb
gs
rcrb
repnz
mov
int
inc
sbb
lcall
and
dec
xchg
sbb
std
fistpll
stc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
cmp
insb
aas
xchg
and
mov
fsubrs
stos
push
adc
mov
out
cmp
out
mov
out
loopne
ret
out
mov
outsl
mov
aaa
fnstenv
pushf
adc
and
jg
dec
es
test
insl
inc
xor
dec
or
adc
cwtl
mov
aad
adc
lahf
inc
xchg
push
mov
cmp
cmpb
cmp
sahf
xlat
xor
mov
cltd
mov
nop
xor
inc
popf
mov
add
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
push
std
and
rorb
stos
fs
cmp
xchg
sub
dec
lds
mov
pop
push
shr
inc
fnstcw
xchg
mov
fwait
ss
sti
fcmovnu
xchg
stc
stos
push
inc
repz
mov
andl
loope
add
les
data16
xchg
stc
dec
cmp
adc
or
cmp
mov
ret
arpl
or
and
aas
lahf
es
dec
loope
push
pop
dec
mov
cmp
in
js
mov
shl
jae
fcomi
sbb
add
call
les
and
into
cli
adc
or
sbb
sbb
daa
adc
orb
and
fs
insb
push
sub
jno
sbb
pushf
test
push
stos
lea
sbb
pop
mov
and
mov
adc
inc
aas
lea
pop
daa
sub
sub
add
fsub
ja
push
sub
scas
inc
push
mov
xchg
dec
and
jmp
jae
stos
int3
in
gs
lods
inc
inc
pushf
xor
bound
clc
ret
sti
popf
scas
inc
inc
add
jo
jle
xor
divl
rolb
add
xchg
pop
out
dec
daa
sub
mov
aam
roll
pop
mov
ss
mov
test
xchg
fistpl
les
push
shll
or
add
ret
pop
mov
and
dec
push
push
adc
add
fadd
fisttpll
xor
rcl
loop
mov
aaa
clc
inc
mov
daa
cmpsb
cmc
fxch
mov
jmp
scas
dec
sahf
insb
test
insl
aaa
stos
xor
dec
xchg
or
sbb
xchg
out
in
leave
dec
jge
rolb
je
sbb
add
mov
cmpsb
xor
jb
fisttpll
cmp
lds
cld
jecxz
pusha
jle
das
pop
icebp
or
cmp
fwait
leave
loop
add
sub
addl
mull
lret
cmc
les
push
and
and
dec
and
fldl
cmpsl
in
decl
cmp
in
push
test
fnsave
sbb
mov
sbb
sub
es
je
seto
pop
xchg
cltd
inc
cmpsb
out
jne
pop
adc
add
cwtl
dec
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
push
xchg
movsb
data16
imul
movsl
and
push
into
sub
dec
pusha
in
dec
mov
jno
imul
adcl
mov
frstor
add
mov
fcmovb
xchg
and
fldenv
xchg
add
int3
jp
test
and
inc
cld
ja
adc
fadd
push
stc
and
rorl
jb
mov
stc
xor
or
cmp
jmp
or
jnp
testb
fucomi
hlt
std
mov
sti
and
test
mov
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsb
push
fs
dec
mov
mov
sbb
and
pop
push
fistl
addb
dec
ljmp
xlat
lods
adc
inc
aas
in
dec
popf
lret
sub
sub
add
xchg
xor
fcmove
adc
mov
pop
dec
test
adc
enter
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
cli
daa
inc
andl
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
sarl
out
push
test
xchg
add
or
mov
sub
sbb
push
inc
roll
sbb
in
int
mov
pop
loop
lods
ds
add
ljmp
arpl
and
daa
adc
nop
xchg
add
sub
push
mov
dec
push
in
int3
inc
push
cltd
mov
icebp
sub
cmc
sub
sbb
add
mov
test
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
xor
inc
xchg
or
push
cli
cmp
stos
xor
xor
mov
bound
inc
cld
loop
in
nop
xchg
lahf
push
cwtl
lock
sub
scas
outsb
repz
and
sub
xchg
rcrb
mov
fists
xlat
cltd
aad
imul
test
or
fbstp
jl
sbb
int
daa
mov
cwtl
add
pop
adcb
jmp
pop
mov
cmp
test
repz
ret
mov
ljmp
repz
or
mov
push
add
push
sbb
sar
sbb
jbe
add
jo,pn
fnstenv
pushf
sbb
mov
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
loope
lret
movb
sbb
or
stos
fs
sub
mov
jecxz
mov
das
mov
in
cmpsb
aas
stos
shrb
sub
repz
mov
shll
jecxz
pop
std
and
push
lret
inc
mov
aas
fisubs
mov
pop
andb
les
jg
xchg
push
mov
xchg
test
mov
inc
ljmp
mov
enter
enter
gs
or
cmp
xchg
sub
rol
dec
sbb
jle
push
xchg
mov
pop
adc
mov
stos
mov
bound
adc
xchg
pop
xchg
into
popa
mov
repz
fcoml
xchg
leave
addr16
outsl
push
jmp
incb
xlat
adc
rclb
mov
jae
loop
pop
stos
push
stos
mov
mov
dec
fistps
test
add
ror
add
or
jmp
js
scas
mov
xchg
sub
add
dec
fidivrs
lods
mov
adc
jp
fisttps
mov
mov
sbb
mov
pop
jb
add
mov
outsb
rcll
cwtl
jge
jge
outsl
jg
std
xchg
xor
lret
scas
in
lock
inc
sbb
xor
loopne,pt
inc
fildll
mov
shll
mov
inc
adc
jle
nop
lds
dec
dec
adc
jo
mov
bound
mov
and
sub
pop
inc
pusha
lods
in
xor
pusha
jnp
cmc
dec
inc
test
xchg
roll
lock
test
maxps
dec
cmp
sbb
in
jmp
test
aaa
jns
pop
push
mov
pop
fucom
cli
mov
cmp
in
test
or
pop
sbb
outsb
or
into
cmp
ret
int
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
pop
iret
xchg
shr
jo
sbb
xchg
int3
pop
mov
repz
inc
das
or
arpl
cwtl
scas
push
repz
xchg
and
mov
xchg
pop
repz
popf
push
out
fs
xor
sub
inc
fdiv
inc
cmp
std
fwait
mov
mov
xor
add
test
add
fsubrs
test
cmc
mov
and
xor
les
js
pop
loopne
mov
push
cmc
or
mov
lahf
lret
jecxz
mov
lock
ret
push
push
jle
sbb
ljmp
adc
int3
inc
mov
and
shrl
repz
aaa
stc
push
pop
fldt
sahf
jbe
and
inc
cmpsb
mov
shrb
icebp
push
mov
mov
repnz
daa
jne
insl
bound
sub
setge
mov
int3
scas
hlt
mov
push
xor
icebp
cmp
or
add
jmp
out
xchg
adc
cmpsl
js
or
leave
stc
mov
movsl
inc
push
mov
or
in
jg
fsubs
mov
stc
into
clc
rcrb
dec
aaa
popf
xor
jnp
stc
fdiv
cltd
ss
inc
pop
jmp
stos
int
imul
mov
sub
pop
add
push
push
push
lds
orb
cmpsl
adc
outsb
scas
icebp
dec
xor
fs
ret
out
cmp
les
pop
test
fidivl
sub
hlt
mov
adc
mov
sbb
mov
cmp
out
pop
clc
sub
mov
ret
dec
sub
daa
sbb
ret
cld
xor
lods
fisttpl
mov
push
or
mov
xchg
pushf
xchg
sbb
cmp
mov
cmpl
mov
outsl
aad
stos
enter
in
lcall
cmp
sahf
xchg
scas
out
movsl
jg
outsl
jae
fsubrp
cmp
scas
xchg
dec
loopne
xor
shr
mov
js
scas
repnz
jns
outsb
jecxz
cli
cmpsl
add
movl
push
sbb
or
movsl
cmc
cltd
sahf
or
pop
push
test
sbb
stos
cmp
ss
and
shlb
pop
adc
mov
fcomi
adc
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
and
push
ja
inc
in
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
pop
stc
cld
mov
fs
jg,pn
shl
je
sub
out
fldcw
out
dec
push
mov
mov
cltd
jb
sahf
pop
mov
cmpxchg
out
test
pop
jecxz
xchg
out
rol
popa
scas
push
repz
and
fmul
or
arpl
ds
je
dec
xchg
aam
xchg
ja
xor
cltd
iret
inc
inc
popf
mov
lahf
mov
cld
xor
out
inc
out
mov
enter
sti
pop
jg
dec
es
test
insl
inc
xor
dec
or
adc
cwtl
mov
fbld
jnp
push
mov
cmp
cmpb
cmp
sahf
xlat
xor
mov
cltd
sbb
mov
nop
xor
inc
popf
mov
add
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
sahf
std
and
dec
cmpsl
xchg
int
sar
lret
sarl
mov
sub
sub
addr16
inc
rolb
jb
lods
mov
mov
popf
mov
xchg
xlat
pop
xchg
sub
cltd
jno
insb
out
jecxz
cmpl
js
sahf
sar
pop
ljmp
dec
iret
shl
divl
adc
stc
jp
scas
scas
loope
sti
jnp
out
scas
mov
dec
scas
insb
lock
mov
mov
mov
pop
pop
cwtl
push
jecxz
mov
shll
popf
loopne
inc
xor
and
mov
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
movsb
or
stos
add
mov
lcall
fmull
xchg
jle
add
mov
dec
lods
jg
leave
gs
xchg
movsb
leave
pop
testb
xor
ljmp
cltd
imul
push
xchg
test
rorl
subl
data16
pop
mov
dec
jg
enter
arpl
pop
xor
mov
cmp
iret
jns
negb
orl
ret
sbb
sbb
ret
xchg
test
jmp
jbe
jle
mov
push
mov
adc
mov
fcoml
and
jae
and
adcl
ret
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
pop
pop
dec
mov
cmp
inc
and
xor
les
sbb
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
add
pop
test
push
stos
lea
stos
int
push
fistl
sub
mov
fildll
pop
xor
dec
inc
mov
in
push
outsl
and
pop
inc
add
in
pop
sub
sub
push
mov
mov
xchg
push
es
cmp
pop
mov
sub
ud1
in
ljmp
inc
mov
dec
stc
arpl
ret
add
or
xchg
sub
dec
lret
fidivrs
cli
shrd
imul
fsubl
mov
fcmovu
sti
sti
and
test
push
gs
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
pop
and
or
inc
ret
pop
mov
sbb
xlat
push
cmp
shl
adc
push
mov
sub
mov
mov
mov
test
movsl
push
int
rcr
mov
hlt
xor
shrl
shrl
aas
adc
mov
jae
orb
xchg
mov
jg,pn
shl
push
fsubs
cmpsl
mov
or
cli
mov
ja
shrb
jnp
leave
mov
lahf
mov
test
jg
outsb
jno
insb
negb
mov
scas
pop
pop
or
imul
fadd
cmp
outsb
cmp
scas
mov
out
jb
fsubrl
mov
adc
incl
dec
mov
popa
and
cmpsb
stc
adc
enter
pop
dec
sbb
or
andb
nop
and
or
inc
orl
and
test
clc
xor
out
and
mov
icebp
add
cmp
inc
or
or
rol
dec
gs
jns
rolb
or
mov
mov
sbb
jle
ljmp
stos
sub
mov
push
movsb
jmp
push
ja
fs
movsl
mov
stc
mov
mov
sub
jl
sbb
lcall
gs
push
imul
repz
test
dec
sahf
jo
fistps
xchg
add
xchg
xchg
repz
add
jl
push
rorb
cmpsl
or
repnz
mov
mov
pop
xchg
mov
push
out
mov
rolb
mov
pop
ds
fadd
mov
add
dec
std
bound
add
cmpb
xchg
sub
rol
dec
sbb
dec
jle
push
xchg
mov
pop
adc
mov
in
mov
bound
adc
xchg
pop
xchg
into
popa
mov
repz
fcoml
xchg
leave
arpl
cltd
pop
jmp
incb
xlat
ret
aad
xchg
mov
sub
mov
aaa
sub
shrl
pop
iret
mov
cmpl
dec
inc
add
iret
push
add
jecxz
add
or
jmp
js
scas
mov
xchg
sub
add
dec
fisubs
lods
mov
adc
jp
fisttps
mov
mov
sbb
mov
pop
jb
add
mov
out
push
scas
shll
xor
sub
add
lea
shll
inc
out
mov
out
or
adc
mov
mov
lahf
fcomip
ss
add
lods
xchg
mov
mov
int
inc
mov
push
jecxz
leave
imul
or
test
cs
sti
xor
inc
xchg
in
mov
jbe
inc
movsl
cltd
adc
jns
sahf
rcrb
ret
mov
jbe
mov
icebp
aaa
mov
sbb
jge
les
jmp
sbb
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
cmp
sbb
cmpsb
sub
mov
dec
lcall
pop
test
lods
cmp
dec
mov
jge
adc
push
les
inc
mov
sub
or
test
pop
mov
ficoms
ja
daa
sub
mov
or
push
xor
popa
fsubs
ja
xchg
pop
ds
int3
fwait
nop
xchg
xor
gs
rcll
add
ds
sbb
xor
je
test
sub
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
xchg
std
pop
int3
push
mov
ja
mov
pop
add
out
pop
fstl
wbinvd
imul
push
adc
call
daa
sub
ljmp
movsb
pop
loopne
mov
movsb
shll
lock
jbe
lods
push
xchg
mov
repnz
sub
lret
jnp
jbe
mov
insl
outsb
pop
cltd
enter
fldt
jae
in
scas
aas
test
sub
cmpxchg
dec
lret
and
cld
mov
dec
mov
lret
sbb
xor
add
xchg
pop
mov
fists
les
repnz
repnz
scas
cmp
jae
fidivrs
pop
sub
adc
jl
pop
adc
shll
pusha
scas
fdiv
ss
cmp
leave
int
fcmovb
mov
mov
adc
and
test
lods
lock
sub
js
jae
inc
xlat
ficompl
pop
cmpsb
cli
and
rolb
jo
cmovg
cmp
pop
dec
lret
popf
ds
push
sub
enter
repz
ss
int
and
xchg
cmp
je
sti
adc
inc
ret
pop
test
dec
es
stos
xchg
test
insb
or
shlb
sub
loope
add
dec
xor
xor
dec
mov
sarl
sbb
shlb
inc
addr16
inc
fxch
jb
add
sarl
cli
repz
test
shrl
push
dec
mov
xor
push
les
xor
enter
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
test
or
addr16
adc
add
xchg
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
sbb
inc
sarl
cmp
and
insb
jne
inc
into
push
mov
mov
pushf
in
iret
cmp
xor
inc
mov
push
mov
scas
iret
bts
add
jbe
and
inc
and
mov
in
xchg
push
and
test
sub
outsl
xchg
testb
mov
xor
xchg
out
adc
fsubrl
pusha
mov
xchg
jne
add
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
subb
xor
push
aas
fwait
lret
in
mov
mov
or
mov
add
dec
std
bound
cltd
add
aaa
jl
pop
push
mov
dec
test
imul
aad
sbb
or
and
and
pop
jae
in
mov
out
and
dec
pop
mov
jno
lea
and
rcrl
inc
mov
jecxz
sbb
or
sub
negb
loope
pushf
inc
stos
xchg
adc
push
idivb
cltd
lret
lcall
sbb
std
fistpll
stc
mov
mov
test
add
pop
dec
orl
xchg
into
imul
push
das
cmpsl
int3
push
mov
shrb
jmp
dec
fisttpl
inc
fcoml
jg
sbb
sbb
lret
lock
jg
xchg
movsl
out
movsl
fnstsw
outsl
addr16
sbb
pop
jmp
mov
inc
and
lret
sbb
sti
pop
mov
jecxz
mov
mov
jbe
ja
out
ret
xchg
cwtl
mov
xchg
mov
ffree
push
pop
push
xchg
sti
mov
fildl
inc
lret
mov
aam
lock
je
popf
mov
cmp
jp
add
cltd
sub
adc
cmpsb
sbbb
lret
mov
pushf
dec
push
ret
mov
rcll
pushf
pop
pop
pop
and
cs
out
icebp
stc
jnp
lahf
pop
push
sahf
jno
jecxz
fdivrs
sub
mov
loope
pop
add
outsb
cmpsb
adc
dec
hlt
lcall
aam
push
iret
push
lret
ret
mov
mov
popf
enter
js
outsl
sti
nop
adc
es
clc
mov
add
push
test
dec
je
das
call
xchg
imul
in
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
jecxz
pminub
mov
sbb
jl
cmp
xor
mov
add
sub
inc
out
push
cmp
roll
mov
sub
insb
push
sub
push
mov
mov
rorl
pop
test
push
stos
lea
ljmp
movsl
leave
mov
imul
inc
xor
add
cmpb
xchg
aas
cmpsb
enter
lods
mov
jae
data16
pop
test
mov
or
out
sahf
xchg
jl
call
je
call
popf
pop
xor
adc
rolb
sub
xchg
xchg
aas
inc
mov
xchg
xchg
cmc
mov
jp
fst
in
mov
mov
or
lahf
cltd
pop
adc
mov
cmp
test
loope
and
arpl
es
inc
mov
adc
and
aas
shl
repz
push
ret
lods
movl
in
cmp
add
dec
jne
sub
ja
fs
jmp
inc
mov
xor
xchg
sbb
les
filds
test
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
out
add
mov
push
add
mov
cmpsb
xor
jb
fisttpll
cmp
push
or
mov
sahf
xchg
sbb
js
xchg
xor
dec
in
ss
mov
cs
test
or
into
sahf
ds
rcrl
mov
loop
mov
or
pop
dec
dec
pushf
mov
outsl
fldl
mov
outsb
ret
lahf
repnz
sub
mov
pushf
jl
sbb
jbe
mov
mov
adc
das
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
mov
clc
sti
jae
ljmp
add
add
mov
sbb
cltd
orb
xor
mov
pushf
dec
and
inc
mov
test
rclb
jg
inc
in
jmp
popf
shl
or
testb
mov
or
imul
inc
adc
mov
leave
jnp
mov
shl
cmpsb
fsubr
adc
xor
and
jecxz
sbb
movsb
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
pop
jae
inc
insl
out
pop
aad
jns
mov
call
sub
jge
sbb
jg
into
add
les
xor
pushf
ret
popf
pop
jnp
sbb
xchg
sbb
dec
inc
roll
pop
sbb
jo
out
add
mov
sbb
repnz
add
mov
shrl
stos
or
mov
iret
cmpsl
mov
data16
sbb
addr16
push
inc
push
gs
push
mov
sbb
mov
mov
push
sub
or
stos
fs
lds
sbb
jne
enter
lods
xchg
mov
in
cmpsb
ret
mov
lret
push
pop
mov
test
arpl
jl
ret
inc
add
iret
and
decl
sarl
hlt
idivl
outsl
outsl
xchg
push
xor
push
je
pop
jb
mov
iret
pop
xor
out
les
pop
jecxz
sbb
mov
and
mov
sti
mov
sbb
fldcw
fsubrl
lea
pop
jno
repnz
leave
or
mov
sbb
loopne
iret
jl
in
test
pop
rcrl
mov
sub
and
xchg
sub
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
roll
arpl
jge
les
in
mov
xor
ret
std
les
fisttpl
sbb
dec
mov
push
and
mov
sbb
into
xor
enter
push
jae
ja
or
inc
or
push
xchg
add
cmp
repnz
xchg
out
movsl
icebp
xchg
cwtl
inc
stos
adc
imul
in
mov
mov
or
lahf
cltd
pop
adc
cmpsb
clc
xor
cmpb
je
test
loope
and
arpl
es
inc
mov
adc
pushf
pop
mov
call
push
add
cmp
ret
les
xor
push
cmp
roll
xorb
out
push
push
inc
int
and
pop
test
sbb
les
fiadds
test
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
divl
add
mov
push
add
mov
cmpsb
xor
jb
fisttpll
cmp
lds
sti
out
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
adc
sub
add
cmc
test
xchg
loopne
stos
inc
movsl
pushf
out
jbe
jg
dec
push
cmc
daa
testl
lods
clc
adc
fwait
mov
lods
jmp
mov
push
or
es
mov
push
loop
xchg
ds
push
dec
mov
popf
negl
mov
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
movsl
or
cmc
pop
into
push
dec
or
lret
movsl
gs
or
pop
push
stos
xchg
scas
lods
pop
imul
scas
mov
xchg
mov
lret
cmp
mov
rorl
pop
enter
clc
in
es
shlb
jns
inc
dec
xchg
jmp
jmp
dec
test
ss
stos
call
xchg
rcrl
ret
or
js
jle
and
icebp
leave
test
sbb
add
popa
fsts
mov
dec
cwtl
in
aam
inc
addr16
mov
mov
mov
inc
int
jns
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
push
inc
push
cmpl
or
push
sub
push
sub
push
out
push
cmp
roll
aam
push
sti
cmpl
mov
das
inc
scas
dec
imul
test
movsl
sub
loopne
lret
inc
dec
push
adc
dec
xor
xor
div
call
nop
mulb
push
ret
insb
mov
push
sbb
lret
sub
test
xchg
stos
pop
xchg
outsl
cmp
lds
push
fdivrl
jmp
mov
xor
inc
out
sub
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
ljmp
xor
dec
xchg
arpl
sbb
lret
data16
repz
in
addb
xchg
ret
xor
fs
pop
or
jno
push
pop
roll
cli
mov
pop
jns
loopne
call
add
test
std
popa
mov
push
add
decl
cld
pop
add
in
push
push
xchg
xchg
inc
add
faddl
hlt
sub
hlt
jnp
fst
addr16
mov
sbb
mov
cmp
out
pop
clc
sub
mov
ret
dec
sub
daa
sbb
adc
add
sbb
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
dec
xchg
jno
insb
jecxz
test
enter
lds
scas
push
imul
cs
push
push
lock
or
call
psrld
ss
dec
pop
mov
js
cs
icebp
in
mov
sbb
mov
cwtl
shll
or
add
jle
adc
pop
inc
popa
sub
adc
and
in
inc
inc
xchg
adc
lret
loopne
add
jmp
add
test
pop
stos
jns
sub
out
insl
mov
sti
add
jbe
lea
icebp
popa
mov
xchg
push
das
jno
xchg
add
mov
mov
mov
xchg
enter
popa
push
icebp
add
inc
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
lcall
lcall
adc
dec
movsb
aad
xor
xor
mov
mov
jnp
js
inc
mov
pop
jb
add
mov
out
push
scas
rcl
xor
jbe
xor
cmc
adc
xchg
stos
fst
sarl
dec
daa
ja
out
xor
out
std
js
pop
inc
mov
mov
jae
int3
hlt
fstpl
adc
or
ret
outsl
dec
adc
pop
sbb
ret
leave
mov
rcrl
ds
ret
icebp
add
inc
ret
lock
inc
adc
inc
cmp
sbb
rorb
cwtl
ret
push
jnp
fistl
lret
lds
push
jns
sahf
cli
mov
cmp
iret
pop
mov
sahf
das
xchg
stc
cli
in
test
or
test
sbb
sbb
cmpsb
sub
mov
addb
rcrb
xchg
outsb
push
inc
sbb
mov
pop
out
jno
lahf
jle
mov
sbb
scas
pop
push
in
pop
popf
mov
or
xchg
imul
leave
xchg
jo
enter
dec
loopne
call
push
rcl
test
mov
mov
in
cmp
push
xor
into
add
and
sub
pushf
ret
addr16
sub
or
sub
adc
rcrl
dec
mov
jbe
into
gs
xchg
jp
xor
mov
imul
mov
mov
xchg
mov
dec
addr16
inc
orl
mov
ja
repz
in
push
mov
imul
imul
movsl
mov
ja
lds
adc
inc
ret
inc
dec
push
mov
in
mov
rcl
pop
iret
xchg
jge
sub
sbb
gs
mov
aaa
subl
mov
adc
cltd
dec
bound
mov
outsl
mov
jne
sahf
fidivrs
rorl
jae
decb
cmp
jecxz
xorb
mov
and
lock
js
dec
xor
jb
mov
mov
mov
mov
pop
inc
fisttpl
jo
gs
pop
cmp
mov
xor
dec
mov
sbb
arpl
shl
mov
pop
dec
inc
dec
push
cmpsl
xor
add
lea
mov
in
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
or
sbb
aas
movsb
lds
nop
lds
push
push
inc
leave
mov
xchg
repnz
movsb
jmp
xchg
aam
push
dec
popf
push
aad
push
fdivs
push
mov
sub
mov
in
loop
rol
mov
insl
inc
test
clc
aam
pop
popa
shrb
mov
das
jno
insb
loop
mov
pmovmskb
ret
jg
out
add
ret
call
pop
dec
aam
stc
lock
pop
xchg
inc
add
mov
or
and
out
cmp
cmp
mov
ret
xchg
ljmp
enter
cmp
xchg
sub
rol
dec
sbb
dec
jle
push
xchg
mov
pop
adc
mov
stos
mov
bound
adc
ficoms
repz
fcoml
das
out
dec
mov
or
lcall
gs
dec
jbe
adc
imul
xchg
jne
mov
mov
mov
fildll
lret
fsts
inc
mov
xor
dec
rcrb
pushf
inc
adc
movsw
mov
dec
in
cli
fsts
and
lcall
fistl
xchg
jb
xor
lods
aad
sarl
xchg
mov
movsb
mov
xchg
addb
lret
in
cmp
mov
and
adc
mov
pop
jae
inc
insl
out
pop
sarl
jle
ljmp
add
movsl
xor
aas
inc
iret
fs
insb
inc
sbb
mov
cmp
xor
push
in
repnz
xchg
pop
jp
pop
fwait
pop
movsb
pop
shlb
pop
xchg
pop
cmpsl
fistps
xchg
fwait
std
sbb
in
mov
lock
xor
out
ret
aad
shlb
add
mov
cmp
sbb
fs
or
mov
fcomip
xor
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
and
fwait
lods
ss
pusha
fisubrl
pop
es
sub
and
test
lret
xor
jl
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jge
inc
xor
add
pop
jl
imul
jle
mov
lods
repz
adc
sbb
in
push
or
lahf
jmp
mov
add
dec
into
xor
nop
inc
stos
jae
repnz
or
xor
ja
repnz
pop
movsl
jnp
enter
das
int
xchg
movsl
dec
sbb
adc
fucomip
mov
push
daa
pop
cli
sbb
sbb
xor
jmp
cmp
mov
icebp
fldt
push
mov
inc
ret
inc
xchg
outsb
xor
pop
inc
fisubl
cmp
inc
push
pop
arpl
adc
cmp
insl
xchg
aam
loop
pushf
inc
adc
xchg
mov
push
and
adc
push
pop
push
inc
ficoml
test
and
pop
push
mov
sub
iret
fsubr
loope
sarl
dec
cld
loop
add
roll
mov
sarb
mov
cmc
or
or
fsubs
mov
jg
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
arpl
in
add
and
push
cmp
data16
test
xlat
jmp
mov
call
xlat
or
incb
mov
inc
xchg
sub
xor
or
repnz
je
test
mov
xor
mov
cmp
rcrb
adc
test
push
sti
push
push
or
inc
and
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
cmp
ret
int
lcall
cmp
stos
in
mov
jb
aaa
insb
into
or
xor
pop
rcll
push
pop
xor
sub
repz
inc
mov
sbb
outsb
jo
xchg
sahf
sar
stos
ljmp
inc
xor
or
call
mov
sub
xchg
add
xor
sub
adc
xor
lods
iret
xor
into
xchg
and
rclb
xchg
loopne
or
push
mov
loop
enter
xchg
push
sbb
jle
jecxz
cmpsb
repnz
adc
xchg
cltd
mov
ljmp
test
sbbb
mov
jp
add
insl
push
sub
pushf
ret
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
xchg
pop
or
mov
orl
sub
addr16
insl
pop
fwait
enter
mov
xchg
push
mov
outsl
fildl
push
cli
mov
lods
lds
pop
movsl
arpl
incl
or
mov
dec
repz
pop
mov
xor
rol
sbb
xchg
xchg
mov
jbe
or
mov
int3
jnp
popf
cmc
hlt
std
mov
sti
and
test
pop
popa
sbb
xchg
push
hlt
mov
popa
dec
mov
aas
test
mov
inc
jo
lds
repnz
popf
ret
jg
xor
or
out
inc
sbbl
cmpsl
push
fiadds
aas
jle
lahf
dec
and
push
in
mov
jge
mov
rcrb
lret
sbb
inc
mov
rcrl
jl
jmp
lahf
jp
cltd
inc
cmpsl
mov
andb
add
push
shlb
pushf
test
inc
cmp
cmp
push
mov
mov
sahf
xchg
sbb
js
adc
cmpsb
inc
fwait
leave
xchg
jl
andl
imul
push
fwait
adc
add
sahf
xchg
mov
push
xchg
insl
mov
sub
stos
dec
sub
pushf
xchg
push
bound
cs
stc
pop
std
out
or
push
out
fldenv
inc
and
mov
pushf
cmp
hlt
mov
mov
adc
das
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
mov
push
iret
ret
clc
sti
jae
ljmp
add
add
mov
sbb
cltd
orb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
mov
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
lock
mov
data16
mov
in
in
xchg
setge
mov
int3
scas
hlt
mov
push
xor
icebp
cmp
or
add
jmp
out
xchg
adc
cmpsl
js
pop
or
xor
mov
movsl
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
sarl
out
push
pop
cmp
dec
adc
cmp
sub
mov
dec
adc
imul
outsl
jo
out
add
mov
or
pusha
push
fucomi
jmp
pop
add
repz
mov
adc
out
inc
mov
sub
insb
push
sub
dec
dec
xchg
dec
push
in
ficoms
fldenv
and
mov
sti
testl
mov
stos
xor
dec
les
sub
mov
jo,pn
insb
repnz
sub
lods
xchg
aas
cmpsb
enter
lods
mov
scas
rclb
mov
jbe
cmpsl
jne
gs
adc
iret
jns
negb
orl
pop
xchg
fwait
test
rcrb
cld
inc
ret
jb
fs
push
out
and
gs
fwait
cmp
mov
aam
fdivrs
inc
out
imul
test
xor
sti
sti
and
test
fsubs
shrb
cmp
mov
sahf
dec
mov
dec
int
rcrb
push
notb
dec
push
pushf
add
jmp
jle
xor
mov
fwait
mov
pusha
enter
push
mov
icebp
insb
movsl
sub
jnp
cmpsl
mov
imul
test
push
inc
and
insb
lcall
xor
mov
call
imul
pop
sub
sub
pop
push
pop
push
leave
ret
leave
or
subb
xor
and
lock
add
mov
rcrb
jnp
mov
mov
ficoms
xchg
pop
inc
xchg
ljmp
sbb
mov
fwait
push
dec
mov
and
adc
mov
pop
jae
inc
insl
out
pop
sarl
jle
stos
ret
cltd
call
jns
popf
jg
mov
repz
mov
shr
sub
sub
or
fsts
pop
sbb
or
push
pop
push
in
push
ds
iret
xchg
jp
call
into
inc
xchg
sub
idivb
rol
leave
and
sbb
and
shl
mov
mov
aad
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
dec
or
jae
mov
mov
cmp
cmpsl
test
pop
arpl
inc
outsb
cmpsb
sub
mov
nop
cli
cmpsl
pop
scas
mov
leave
cli
roll
fidivl
int3
jmp
scas
aas
test
dec
xchg
mov
outsb
jno
insb
negb
mov
push
rorl
cmp
mov
push
jle
insb
js
jns
dec
sar
xchg
jbe
cli
pop
lods
mov
fidivl
pop
push
sub
inc
fcompl
inc
cmp
std
fwait
mov
mov
xor
add
test
add
fsubrs
test
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
mov
xor
repz
sbb
push
cmp
je
test
lods
lods
pop
mov
and
push
jne
movsb
pop
repnz
cmpsl
sub
sub
pop
mov
cs
stos
dec
repnz
mov
sub
and
inc
pop
mov
shlb
dec
arpl
or
pop
mov
xchg
cld
sbb
cmp
add
mov
hlt
inc
fidivrs
inc
mov
addr16
rcll
test
xor
cmp
jne
mov
mov
or
lahf
cltd
pop
adc
mov
cmp
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
adc
sbb
xchg
adc
mov
mov
lea
jbe
mov
or
pop
into
push
sub
js
sbb
adc
sub
stos
lea
test
test
mov
push
bound
push
pop
inc
loopne
mov
cltd
clc
mov
ljmp
ret
bound
jo
jne
insl
jbe
lahf
enter
lods
mov
scas
int3
push
mov
shrb
jmp
js
pop
xchg
ret
cmpsb
xchg
pop
movsl
mov
jo
test
data16
push
fcmove
xchg
out
bound
daa
daa
pop
cmp
xchg
into
xorl
repz
out
cli
pop
int
gs
sarb
call
jmp
push
xor
into
add
and
mov
les
mov
or
idivl
inc
arpl
inc
cmp
mov
cmp
mov
jg
fadds
push
sbb
inc
ja,pt
lret
arpl
sahf
rcrb
ret
mov
jbe
mov
icebp
aaa
mov
sbb
jge
les
xchg
nopl
cltd
dec
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
jp
sbb
cmpsb
sub
mov
inc
fimull
jmp
in
int3
mov
adc
mov
sbb
xchg
int3
pusha
xor
rorl
mulb
cwtl
nop
out
ud0
lock
outsl
xor
ljmp
lea
mov
aas
pop
adc
popa
sahf
scas
and
movsl
add
jno
lea
sbb
enter
stos
outsb
add
lock
ja
adc
cld
shlb
iret
cli
mov
add
arpl
daa
mov
cmp
shr
lods
ret
add
hlt
test
popa
shrl
push
cmp
lea
or
loope
aam
sub
insb
push
sub
push
mov
dec
push
in
int3
inc
push
cltd
push
pop
lods
push
fcoms
adc
and
ror
mov
in
shl
fwait
aad
lahf
in
loope
ret
insl
dec
mov
jne
xor
mov
jnp
push
xchg
jle
jmp
cmp
jb
lods
xchg
mov
es
inc
rol
mov
lret
js
popf
scas
test
lret
aas
ja
xor
js
sahf
add
and
es
fidivrs
jo
rorl
push
fsubrs
test
movsb
fidivl
pop
push
sub
inc
faddl
pop
aad
fwait
mov
mov
xor
add
test
add
fsubrs
test
clc
ret
adc
cwtl
dec
and
mov
mov
test
add
inc
sbb
dec
jecxz
movsl
mov
cltd
jo
iret
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
mov
ficoms
shr
ja
imul
mov
xlat
sub
mov
fstl
movsb
xchg
xor
dec
inc
sub
sub
add
adc
add
add
test
imul
push
es
mov
sahf
sti
add
inc
mov
leave
pop
cmp
push
xchg
jl
sbb
fistl
popl
push
jo
mov
mov
xor
xchg
xchg
inc
push
mov
or
in
jg
fsubs
mov
stc
into
clc
rcrb
dec
aaa
popf
xor
jnp
stc
fdiv
xchg
ss
inc
insb
aaa
or
dec
cmpsb
dec
idivl
xor
gs
in
mov
adc
jb
add
push
push
push
lds
or
or
pusha
jae
inc
int
add
ret
lods
adc
jmp
inc
cld
push
dec
xchg
dec
vcvttss2si
outsb
mov
push
xchg
xlat
cmp
dec
adc
xor
test
jnp
and
out
lods
jmp
into
and
movb
mov
jmp
ljmp
lds
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
mov
and
aad
bound
mulb
scas
repz
push
lock
cmp
insb
movsl
pop
jno
mov
xor
ret
scas
loop
xor
lods
dec
mov
outsl
cs
repnz
test
jp
mov
pusha
aaa
jge
xchg
test
addr16
add
and
xchg
jmp
sbb
dec
jle
add
fsts
inc
pop
cmp
leave
sti
int
clc
test
cmp
and
sbb
jno
in
fwait
lahf
lds
push
or
inc
movsl
xchg
sub
pushf
ret
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
xchg
pop
or
mov
orl
sub
addr16
insl
pop
fwait
enter
mov
xchg
push
mov
outsl
fildl
push
cli
mov
lods
lds
pop
movsl
arpl
stos
loope
popl
fidivl
add
add
xchg
adc
mov
and
or
insb
int3
aaa
jmp
mov
popf
pop
popf
xor
jmp
std
mov
sti
and
sbb
lret
dec
sbb
lret
inc
lea
cmp
ret
mov
test
jl
or
int
rcrl
pop
xor
add
or
mov
scas
loope
leave
ss
roll
js
mov
jmp
lret
mov
inc
dec
mov
sbb
leave
test
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
out
aaa
add
mov
pop
rcl
mov
cmpsb
xor
jb
fisttpll
cmp
lds
pop
jecxz
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
dec
xor
or
test
mov
scas
xchg
out
cmpsl
mov
jge
adc
mov
pop
hlt
repz
sbb
pop
inc
dec
and
or
mov
lcall
inc
xchg
jmp
sbb
dec
jle
add
fsts
inc
pop
cmp
leave
sti
int
clc
test
cmp
and
sbb
jno
in
fwait
lahf
lds
push
or
inc
movsl
xchg
sub
pushf
ret
pop
pushf
daa
popf
adc
push
lds
cmp
lret
pop
aam
push
adc
mov
scas
mov
fucom
mov
movsb
faddp
sahf
std
push
lock
pop
sahf
xchg
mov
jno
inc
inc
push
sbb
sub
lret
jnp
inc
pop
mov
lcall
sbb
mov
add
sbb
lahf
xchg
leave
xchg
cld
or
add
out
mov
sbbl
adc
cwtl
add
and
inc
stc
inc
push
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
loop
and
daa
pop
repz
out
icebp
mov
xchg
int
sub
mov
mov
inc
sbb
fs
hlt
aam
stos
dec
cmp
mov
popf
movb
rolb
jae
rcrl
jne
cmp
test
cmp
ret
das
and
rol
pop
or
cmp
inc
dec
hlt
xor
int
stos
and
dec
pop
push
mov
and
dec
pop
mov
sbb
pop
mov
and
imul
cmc
sti
xchg
std
cmpsl
out
pop
xor
xchg
xor
inc
pop
jnp
lret
nop
cmp
push
dec
dec
jl
rcl
lcall
aad
xor
xor
mov
bound
dec
cld
loop
in
nop
xchg
lahf
push
cwtl
lock
mov
or
rorl
mov
insl
mov
dec
cmc
add
dec
mov
push
push
push
rcl
jae
pushf
jp
mov
loope
js
jno
and
inc
cltd
enter
and
xchg
jmp
out
rol
add
or
fsubr
xchg
addr16
imul
and
or
mov
xchg
test
or
push
cld
inc
or
adc
cmpsb
mov
sbb
pop
int
mov
mov
cmp
pop
iret
sahf
in
adc
test
out
cli
mov
jne
mov
mov
sbb
lods
cmp
rcrl
xchg
mov
outsb
or
add
xchg
ficompl
int
xor
jb
fisttpll
cmp
lds
pop
jecxz
pusha
jle
das
pop
icebp
or
cmp
fcmovne
loop
addl
das
adc
sbb
pushf
lcall
sub
mov
dec
int
insb
decl
imul
shlb
fisttps
stc
in
jns
test
js
pop
or
and
adc
add
in
push
inc
test
mov
std
mov
xlat
mov
lods
xor
push
add
pop
das
or
addr16
stc
loope
mov
test
add
mov
faddl
stos
out
inc
mov
icebp
cwtl
add
insb
adc
mov
repnz
shlb
imul
lea
ljmp
and
call
imul
push
push
dec
in
clc
popa
mov
push
repnz
repnz
mov
fcmovb
xchg
mov
lods
mov
mov
in
scas
aas
test
fs
in
mov
jmp
jecxz
xchg
sbb
mov
filds
inc
shll
jecxz
cwtl
cwtl
popf
jmp
sub
mov
mov
out
inc
and
aas
int
and
loope
cs
sbb
les
aas
outsb
add
push
shll
inc
stos
jae
imul
mov
bound
pop
adc
push
xchg
cltd
popa
jle
mov
jmp
cmpsl
mov
inc
insl
test
push
pop
stos
gs
std
rolb
push
movsl
add
popf
jnp
sub
hlt
lcall
aaa
pop
push
aad
test
mov
sahf
cmp
stc
inc
repz
adc
dec
jmp
lds
adc
mov
adc
lcall
jo
mov
push
mov
lods
inc
pop
test
adc
loop,pt
pop
and
repnz
out
jno
insb
cmc
sub
rorl
scas
jbe
cltd
imul
test
loope
jg
std
xchg
xor
ja
pop
push
jne
jb
popf
cmpsl
ret
mov
jne
lcall
shl
dec
mov
enter
aam
call
mov
xchg
jmp
cmpsb
aad
mov
xor
sahf
sub
stc
lea
inc
sbb
jnp
mov
sub
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
xor
in
scas
jge
inc
sbb
inc
aaa
lret
fucomp
add
fldt
arpl
sbb
xor
jo
push
mov
pop
stc
sub
fisubrl
orl
inc
adc
fistpl
ret
pop
pushf
jbe
and
jno
movsb
insl
xchg
push
push
outsb
loope
lds
or
mov
mov
inc
out
dec
lcall
and
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
loop
and
daa
pop
repz
out
rorl
enter
pop
cmp
pop
sub
out
jecxz
mov
adc
inc
lock
xor
pop
xchg
push
pop
shlb
movsb
sub
das
jns
dec
pop
mov
cmp
pop
inc
in
seta
dec
dec
in
imul
sub
jmp
sbb
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
cmp
sbb
cmpsb
sub
mov
mov
dec
loopne
subl
mov
adc
cltd
dec
bound
clc
dec
sbb
jne
add
cs
mov
loopne
xor
hlt
ja
jge
dec
add
xchg
stos
js
scas
xchg
push
adc
js
lret
push
repz
lahf
scas
les
dec
in
cmp
mov
mov
inc
iret
fs
insb
or
mov
out
mov
imul
push
xchg
push
ds
dec
call
jne
pusha
add
in
and
xor
repz
adc
and
jns
pushf
rcrb
sbb
sbb
fisttpl
ficomps
cmc
mov
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
sbb
cltd
enter
lods
mov
mov
lods
into
fsubrl
sub
cmpxchg
out
jno
sbb
jno
arpl
out
rol
shrb
cmc
jl
das
dec
xor
mov
fwait
scas
fsubl
adc
push
rcl
ss
cmp
ja
mov
stc
in
loop
vaddsubps
mov
enter
cmp
repnz
je
in
int
adc
push
in
mov
add
test
bound
jns
ss
xor
mov
in
push
dec
daa
cmp
jp
add
add
mov
sbb
cltd
orb
xor
mov
test
sub
push
enter
lods
push
shrl
sbb
sub
cmpsl
adc
cmp
std
bound
sub
out
out
jb
push
adc
in
jg,pn
out
in
imul
push
xchg
stos
aam
xor
inc
lahf
jb
lods
mov
test
push
jb
adc
iret
jns
negb
orl
fldt
mov
fsubrs
rorl
repz
out
das
dec
lock
jl
das
dec
iret
shll
inc
int
fsubr
sti
mov
dec
and
mov
rorl
jnp
test
pop
push
dec
std
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
xchg
jmp
aam
pop
add
inc
cwtl
dec
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
imul
pop
push
jns
loope
sub
add
push
push
cmpsb
xor
add
aam
adc
test
insl
outsb
pop
cltd
imul
insb
sub
mov
pop
and
push
pop
mov
mov
cmc
mov
jle
jno
sub
sti
loope
add
les
stc
dec
cmp
adc
or
cmp
mov
ret
arpl
or
and
test
js
sbb
xchg
push
hlt
mov
xchg
test
push
lds
pop
repz
fwait
pusha
or
scas
adc
adc
sbb
cld
loop
inc
sbb
ljmp
outsl
aam
lods
pcmpeqd
push
mov
inc
rorl
ficomps
fldenv
push
aaa
push
lea
cmp
mov
xchg
stos
jb
pop
adc
dec
inc
sub
sub
add
pop
and
sub
pop
xchg
push
xlat
adc
dec
adc
mov
test
dec
xchg
jp
sub
jmp
pop
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
subb
xor
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
mov
cmp
test
push
or
int
imul
jmp
mov
daa
push
imul
pop
stos
rorb
repz
mov
mov
inc
negl
sbb
std
fnstsw
arpl
mov
cli
add
mov
xchg
inc
cltd
or
xchg
shll
mov
dec
fwait
ds
adc
stc
arpl
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
pop
arpl
inc
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
mov
aad
pop
dec
jno
dec
fstpl
mov
fisttpl
or
sub
icebp
jmp
cmp
xchg
fnstsw
outsl
addr16
sbb
pop
jmp
mov
pusha
pop
in
movsl
decl
fld1
jb
cmp
bound
jbe
ror
jecxz
outsb
pop
and
popf
or
dec
int
fcmovb
movsl
mov
lods
xchg
add
xchg
xor
jbe
cmp
jle
mov
inc
test
imul
and
clc
push
aam
cmpsb
add
stc
loop
mov
aas
pop
dec
inc
inc
adc
jne
lds
sbb
gs
sub
das
mov
stos
xchg
push
inc
push
push
insl
inc
push
pop
inc
jb
dec
inc
add
out
cmp
ret
mov
in
add
xchg
test
test
add
xchg
mov
enter
pushf
jbe
stos
loope
mov
push
outsb
loope
lds
or
mov
mov
inc
out
rcrb
clc
add
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
xchg
inc
test
dec
les
shrl
fsubl
dec
in
nop
inc
xor
push
dec
pop
xchg
inc
gs
je
shl
mov
int
loop
mov
cld
xchg
adc
popa
repz
push
outsb
je
add
repz
inc
or
lahf
cld
pop
leave
cmp
xchg
divb
dec
xchg
addr16
ret
inc
in
test
mov
clc
pop
pushf
cmp
mov
or
sbbl
loop
stos
std
cld
jns
rcrl
rorb
jb
fisttpll
cmp
lds
std
jecxz
pusha
jle
das
pop
icebp
or
cmp
andl
mov
push
test
pop
jle
inc
sbb
pop
shrb
or
idivb
pushf
ljmp
out
jno
sbb
scas
lahf
push
int
xchg
mov
xor
inc
pop
outsb
stos
insb
icebp
in
jns
popf
outsl
inc
into
add
les
outsb
add
jnp
sbb
inc
mov
les
andl
mov
inc
push
pop
push
test
sbb
xchg
xchg
xor
negl
xor
daa
and
aam
sub
dec
sub
je
in
outsb
mov
push
xchg
out
cmp
dec
adc
xor
test
jnp
and
out
lods
jmp
into
and
movb
cmpsl
je
or
or
or
cmp
adc
mov
adcl
jbe
sub
sub
pop
mov
mov
jmp
scas
cmp
push
leave
clc
inc
or
sbb
inc
and
movb
in
pop
lret
fwait
adc
dec
insb
scas
fisubl
pop
sarb
ret
jp
gs
in
call
popf
fwait
mov
test
test
push
and
and
and
mov
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
push
es
leave
inc
add
add
sbb
roll
lret
inc
fdivl
dec
stos
scas
xchg
adc
jno
pop
mov
rorl
out
mov
mov
push
into
inc
dec
pop
movsl
fmuls
ljmp
jge
test
xchg
stos
jbe
dec
push
sbb
xor
adc
inc
fdivrl
jecxz
fistps
test
cld
loop
in
lret
pop
xchg
in
cmp
mov
and
adc
and
pop
jae
inc
insl
out
pop
rorl
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
clc
inc
and
orl
dec
push
or
inc
fs
dec
rcrb
pop
jno
repnz
leave
mov
adc
and
jl
in
test
pop
rcrl
mov
sub
and
xchg
sub
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
loope
lret
movb
mov
shll
adc
adc
xchg
jnp
imul
data16
rol
lret
jb
pop
push
imul
inc
pop
cmpsl
test
xor
ret
cmp
testl
xor
scas
add
ret
lret
in
imul
xchg
lods
push
cmp
or
pushw
push
out
push
mov
test
lcall
push
cmp
movsl
cmp
push
leave
jno
popf
push
sbb
lea
xchg
sti
gs
negl
dec
mov
sbb
pop
shrl
loopne
jne
dec
mov
mov
add
push
stc
push
mov
fwait
jne
or
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
pusha
cltd
orb
xor
mov
arpl
mov
jg
lret
push
repz
cmp
inc
xchg
pop
mov
mov
jne
call
mov
xor
ret
jbe
pop
xchg
xchg
adc
in
cmp
mov
push
sub
daa
out
imul
movsl
pop
jno
lds
pop
add
sbb
lahf
xchg
fsts
mov
dec
mov
sbbl
xchg
pop
adc
bound
je
decl
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
loop
and
daa
pop
repz
out
inc
test
dec
les
add
inc
dec
push
xchg
xor
imul
lcall
test
xchg
or
pshufw
add
sub
inc
orl
and
daa
adc
rcrb
icebp
nop
lock
mov
fldt
imul
test
movsl
push
pop
test
test
ljmp
push
sub
repz
aas
push
mov
ret
sub
int3
push
and
adc
ss
jb
jbe
scas
pop
or
or
pop
testl
push
xchg
mov
int3
xor
xor
lahf
xor
out
jl
jg
xchg
test
jnp
inc
mov
add
adc
mov
pop
repnz
inc
fmuls
sti
adc
test
pop
xchg
mov
jbe
iret
sti
enter
mov
jae
jo
incb
jl
outsb
addl
sub
cmp
mov
aad
lret
sub
dec
adc
mov
mov
sbbl
int3
loop
lods
imul
mov
into
add
push
sub
sbb
test
lcall
inc
mov
xchg
and
mov
test
cli
add
movsl
imul
pop
push
pop
inc
jle
movsb
inc
fwait
push
testb
jae
cmpsl
push
mov
fmull
cmpsb
and
je
cmp
pop
rcr
je
faddp
dec
jp
sub
mov
jne
cmpsb
fisttpll
push
loope
movsb
fstl
fsubl
jg
xor
sbb
add
popa
or
inc
add
subl
dec
std
adc
les
xchg
jns
fimull
push
mov
or
in
jg
fsubs
mov
stc
into
clc
rcrb
dec
aaa
popf
xor
jnp
stc
fcoml
pop
ss
mov
int3
or
fimuls
fsubrs
dec
pop
ja
repnz
insl
and
push
inc
push
push
push
lds
sbb
adcl
ret
out
push
pop
push
scas
jecxz
into
inc
xchg
jl
xorb
mov
ficoms
ret
pmuludq
hlt
sub
fst
addr16
mov
sbb
mov
cmp
out
pop
clc
sub
mov
ret
dec
sub
daa
sbb
ret
cld
xor
lods
fisttpl
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
in
loop
xchg
subl
inc
sbb
lret
lock
jge
jmp
out
cmp
dec
or
fucomi
jns
jle
xchg
out
cmpsl
mov
jg
repnz
pop
hlt
repz
sbb
pop
inc
add
and
pushf
jg
sbb
jbe
mov
cmp
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
int
push
iret
ret
clc
sti
mov
stc
clc
jp
add
add
mov
sbb
orb
xor
mov
cld
mov
shl
jmp
addr16
mov
outsl
push
xchg
lahf
cmp
lods
rclb
and
sub
int3
add
imul
inc
add
test
sbb
dec
jl
arpl
xchg
adc
adc
adc
mov
imul
loope
lds
mov
ss
mov
xorl
mov
fwait
push
dec
mov
and
adc
and
pop
jae
inc
insl
out
pop
aad
jns
mov
call
sub
cwtl
xor
into
add
xchg
and
xor
arpl
aaa
fs
sub
stos
iret
jp
sbb
es
js
and
push
inc
add
mov
push
sbb
xchg
rcr
push
xor
push
cmp
sub
mov
decb
aad
push
arpl
push
lds
and
and
jo
cltd
mov
sub
clc
pop
frstor
imul
xchg
in
stc
dec
data16
aaa
stc
or
icebp
push
push
pop
jnp
or
cmp
add
push
test
or
stos
xor
xor
mov
lahf
movsb
mov
xchg
adcb
lret
cmp
add
or
pop
cwtl
rolb
call
xchg
scas
out
stos
dec
sub
pushf
xchg
push
bound
sub
lods
insb
icebp
pusha
stc
lods
cmp
sub
out
mov
sub
leave
fs
cltd
nop
push
push
and
insl
je
out
mov
mov
push
add
cmp
mov
and
sarl
cwtl
cmp
push
popf
arpl
sahf
loop
mov
adc
data16
jg
adc
ja
out
sbb
sarb
jno
rcrl
filds
test
roll
push
fbstp
je
pop
iret
sbb
rcr
loopne
cmp
sub
cld
xor
lods
fisttpl
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
cmp
pop
mov
rorl
dec
push
add
leave
lock
jl
das
dec
or
jl
loopne
call
push
shrl
xchg
mov
test
inc
add
outsb
out
lahf
stc
cwtl
shrl
pop
clc
mov
sub
andb
nop
and
add
xor
ja
mov
lret
int3
ret
fsubrs
je
dec
dec
pop
mov
movsl
subl
xor
jmp
fistpl
xor
sbb
daa
and
mov
push
dec
sbb
add
xchg
loop
sub
ficomps
pop
push
stos
test
hlt
jge
lods
jae
popf
jnp
inc
loop
cmp
and
fmuls
pop
sbb
sbb
les
sub
out
arpl
imul
mov
inc
dec
leave
les
sarl
push
push
data16
xchg
arpl
mov
rorl
incl
repz
cmp
lock
pop
xchg
inc
add
mov
or
and
out
cmp
cmp
mov
ret
test
sbb
dec
push
add
add
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
mov
subb
push
decb
push
insb
jne
inc
into
push
mov
insl
cmc
cwtl
in
outsb
xor
hlt
cmpsl
mov
dec
ja
test
pop
movsl
cld
sbb
fldt
push
dec
pop
xchg
test
jmp
cs
jl
or
mov
cmpsl
popf
cmpsb
dec
sub
stos
les
pop
test
ss
stos
call
xchg
rcrl
ret
or
arpl
jle
mov
dec
ss
cmc
or
pop
sahf
add
and
es
fidivrs
outsb
xchg
jge
outsl
addr16
lret
push
ret
adc
aaa
and
ljmp
mov
dec
mov
mov
es
cmpsl
out
leave
mov
dec
xor
jge
je
adc
ret
stos
popa
rcll
mov
jle
mov
jae
mov
stc
mov
lock
push
or
je
cs
mov
inc
ljmp
lcall
xlat
dec
sub
cmc
xor
sbb
std
fistpll
stc
mov
mov
test
in
andb
out
add
pop
aam
mov
scas
push
jnp
lods
xchg
cmpl
push
inc
pop
xor
xchg
cmp
ja
in
aad
xchg
sub
std
rolb
ds
jo
testb
add
jnp
or
lods
leave
aam
mov
fdivrl
cli
xor
fists
out
cmp
outsl
sbb
and
test
stc
popa
sbb
xchg
push
hlt
mov
popa
dec
mov
test
push
push
push
lds
mov
adc
inc
scas
jae
xor
jecxz
hlt
mov
push
or
addl
jmp
mov
xchg
cmpsb
ljmp
and
mov
insb
movsl
imul
mov
adc
lcall
jae
iret
jae
aam
xchg
push
frstor
mov
cmc
add
or
mov
pushf
adc
mov
lds
xchg
or
inc
fdivrs
mov
push
rcrb
in
cmp
mov
and
adc
mov
pop
jae
inc
insl
out
sbb
inc
add
pop
stos
ret
jb
in
jns
popf
ja
mov
xor
dec
mov
mov
or
dec
fwait
lds
xchg
pop
popl
xor
call
shrl
enter
sbb
mov
dec
jecxz
inc
mov
sbb
insl
rolb
gs
rcrb
repnz
mov
int
inc
sbb
lcall
and
dec
xchg
sbb
std
fistpll
stc
mov
mov
test
in
andb
cmpsb
mov
aam
movsb
xor
jmp
sarb
stos
pop
xchg
repz
ret
cmpsl
inc
and
in
jge
pop
adc
in
add
iret
jne
cld
jae
xor
xchg
push
fcmove
xchg
hlt
ja
std
pushf
out
xor
out
lcall
mov
xlat
imull
rcrl
test
iret
divl
sub
sub
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
fcmovnb
dec
call
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
pusha
cltd
orb
xor
mov
arpl
mov
incl
sbb
mov
dec
ljmp
and
adc
lcall
bound
sub
stos
aam
pop
mov
push
repnz
pop
push
je
sub
sub
push
enter
lods
mov
mov
push
xchg
jo
in
jo
sub
repz
aad
jecxz
xchg
xor
push
repz
outsl
cmp
out
arpl
les
call
push
rorl
imul
mov
gs
add
add
mov
rclb
push
push
pop
mov
cmp
add
movsb
popf
xchg
mov
cmp
mov
sub
mov
iret
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
lret
lds
imull
sahf
jnp
popa
mov
enter
cmp
dec
dec
lret
movsw
cwtl
push
push
adc
jae
xor
mov
or
mov
std
push
or
sbb
js
adc
jno
js,pt
xchg
sbb
mov
gs
adc
pop
stos
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
xor
rcrb
dec
arpl
call
dec
scas
jno
adc
jp
xor
divl
cmp
push
inc
dec
and
stos
stc
sbb
mov
or
sub
aad
imul
inc
daa
leave
sbb
inc
pop
mov
pop
cli
test
mov
negl
roll
mov
lahf
popf
ljmp
sbb
test
mov
sbb
mov
push
dec
dec
jl
rcl
lcall
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
pusha
xor
rorl
dec
and
mov
inc
lock
fnsave
cmp
xchg
ja
mov
mov
std
push
lret
mov
add
pop
dec
add
popf
loopne
out
push
or
cld
repnz
inc
mov
sbb
ret
or
mov
out
stos
lcall
xlat
adc
or
lods
addr16
pop
add
cmp
mov
mov
xchg
xor
leave
add
mov
or
mov
lods
xchg
lods
data16
dec
cmpsb
loop
mov
and
xor
dec
movsl
arpl
pop
cmp
mov
fucomp
insl
jno
outsb
push
js
push
outsl
and
jmp
inc
or
pushf
push
xor
sub
out
jns
dec
adc
fistpl
mov
leave
jnp
test
mov
loopne
fldt
ficoms
inc
ds
push
sub
pop
std
arpl
lcall
stc
js
xchg
jns
fimull
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
shlb
cltd
dec
in
pop
aam
pop
adc
lods
imull
cmp
loopne
jg
fisttpl
jmp
ret
or
ljmp
repnz
cltd
andb
sbbb
mov
and
push
leave
pop
add
sub
cmp
ja
inc
fisttpll
push
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
xchg
lcall
push
and
and
popa
xchg
jecxz
xchg
das
cmpsb
int3
sub
in
mov
scas
shrb
sub
movzbl
mov
jne
sahf
fidivrs
rorl
sub
or
pfacc
jle
fwait
inc
jo
rorl
test
push
enter
test
and
xchg
sqrtps
outsl
or
mov
out
xchg
out
enter
es
mov
mov
add
and
and
mov
xchg
cmp
or
aas
test
fildl
ror
ret
arpl
lds
rclb
fisubs
inc
pop
adc
jmp
mov
dec
xor
mov
lahf
cmc
gs
sbb
fwait
aam
sub
imul
cmpsb
sub
sbb
mov
cmp
cmp
inc
leave
jecxz
add
rorb
cmp
and
jo
and
xor
add
sbb
call
add
jmp
enter
fisubrl
jnp
inc
mov
add
adc
bound
pop
repnz
xchg
jne
pop
ret
inc
lods
xlat
xchg
mov
jle
pop
sbb
fcoms
jmp
add
arpl
data16
out
jno
jae
pop
xor
jmp
int
mov
xorl
shlb
bound
mov
sub
push
test
jl
fbstp
hlt
sbb
push
ret
popa
shrl
push
cmp
sub
mov
decb
aad
push
sub
push
xor
push
lds
or
movsl
dec
and
and
mov
movsb
pop
scas
mov
testl
lret
sbb
sbb
movsl
sub
aas
and
sbb
sub
push
pop
lcall
ss
xchg
clc
xor
sub
filds
xchg
xlat
test
xor
bound
das
push
sub
adc
jae
loopne
in
rorl
mov
mov
push
mov
shlb
xchg
sarb
mov
ss
mov
test
xchg
fistpl
les
push
rorl
test
insl
lea
cmp
or
inc
roll
cmp
bound
movsb
cmpsb
call
imul
mov
cltd
lret
inc
mov
aaa
scas
stc
aaa
push
sub
mov
out
mov
aaa
pop
dec
dec
fimuls
loopne
mov
je
xchg
ja
jmp
out
xor
jnp
stos
lods
mov
mov
ret
sbb
xchg
pop
push
cmp
ret
adc
sbb
mov
push
xchg
mov
test
repz
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
jbe
adc
pop
pop
push
test
cmpl
popf
xor
lret
mov
cmc
mov
nop
inc
popf
outsl
data16
add
and
sub
cwtl
test
test
lds
int3
xchg
es
addl
pop
sbb
mov
jmp
clc
inc
or
and
push
sbb
xchg
xchg
adc
ud1
push
and
daa
adc
xorb
mov
stos
pop
mov
lcall
push
rorb
adc
stos
push
test
clc
stos
dec
and
pop
cmp
xlat
add
mov
test
push
jbe
lods
push
outsl
xchg
bound
in
ss
cmp
push
and
sub
out
cmp
push
mov
sub
es
inc
jb
loopne
sbb
filds
push
inc
imul
jecxz
fnstcw
inc
std
rorb
mov
in
sub
push
xchg
xor
sbb
and
adc
xchg
lods
inc
mov
inc
cs
ss
in
cltd
xor
mov
repz
popf
ljmp
add
mov
pop
rorl
rcrb
rcrb
test
int
jle
pop
mov
add
add
jmp
ret
xor
in
pop
xor
pop
sub
cwtl
jmp
cltd
adcb
outsb
mov
nop
jns
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
test
pop
arpl
inc
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
icebp
or
outsb
ds
je
xor
mov
call
xor
and
cmpsl
lret
scas
in
mul
jns,pt
outsb
repz
cwtl
add
loopne
dec
movsl
or
push
mov
add
andl
cmp
divb
fstp
and
shlb
pop
shrl
or
xlat
int
add
in
and
lahf
repnz
mov
add
insl
push
sub
pushf
ret
pop
mov
mov
sbb
nop
push
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
inc
and
sub
adc
mov
push
cmpsb
nop
mov
test
push
cwtl
push
dec
xorl
jmp
lahf
fistps
inc
leave
enter
xor
xchg
cmp
ja
in
lret
aas
je
xor
subb
sub
fadd
add
outsl
and
and
inc
add
xor
stos
stos
sub
cmpsb
call
pop
jae
gs
cltd
pop
adc
xor
cmpb
add
cmpb
xchg
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
add
inc
pop
mov
xor
jbe
roll
lahf
cs
test
push
call
xor
dec
imul
fimuls
les
sbb
adc
and
call
fucomp
and
cmpsl
push
mov
adc
insl
add
mov
fcmovb
xchg
and
xchg
mov
insl
push
test
clc
aam
shll
or
repnz
cmp
mov
stc
and
add
aas
js
or
push
icebp
or
pop
xchg
sbb
mov
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
mov
cmp
test
loope
and
arpl
or
push
or
mov
push
inc
lods
repnz
cmpsb
sbb
daa
mov
mov
ret
in
js
inc
scas
jae
leave
fs
push
mov
lea
shrb
add
shll
sbb
addr16
cmp
mov
aad
xchg
lods
jo
lahf
xchg
inc
add
out
cmp
ret
mov
in
add
daa
mov
cli
and
mov
xchg
xlat
and
inc
movsb
xchg
sub
enter
cmp
xor
sbb
leave
or
ds
push
sub
pop
std
arpl
lcall
stc
js
xchg
jns
fimull
push
mov
or
in
insl
xchg
popf
pop
adc
fsubs
pop
mov
gs
pop
sarl
out
push
pop
pushf
xchg
dec
adc
cmp
sub
mov
dec
adc
lcall
adc
bound
lods
sub
adc
pop
popf
xchg
mov
or
mov
push
push
decb
aad
push
sub
push
mov
insl
aad
insl
int3
inc
push
cltd
dec
xlat
and
fxtract
push
and
aam
filds
pop
dec
dec
jmp
and
push
roll
push
push
xor
mov
or
sbb
lods
jge
fs
into
aam
jge
pop
xor
mov
mov
mov
mov
pop
jb
add
mov
out
push
test
out
cmp
cmpsl
dec
push
xor
leave
dec
loope
jo
lret
sbb
xor
sub
adc
jle
fildll
dec
ret
cmp
mov
sbb
jo
or
leave
or
cmp
divb
ljmp
adc
shrl
movsl
lea
add
pop
shrl
or
xlat
int
add
in
and
lahf
stos
push
mov
add
insl
push
sub
pushf
ret
pop
mov
mov
sbb
nop
push
lcall
scas
jge
lahf
jge
inc
test
scas
lret
call
mov
arpl
mov
adc
bound
jo
add
or
stc
sub
fisubrl
orl
inc
adc
fistpl
ret
pop
pushf
jbe
cmp
jno
movsb
insl
sti
add
push
outsb
loope
lds
or
mov
mov
inc
out
jnp
sub
and
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
loop
and
daa
pop
repz
out
sarl
out
push
test
xchg
add
or
mov
sub
sbb
push
inc
roll
sbb
mov
cmp
push
addr16
or
and
cmp
sbb
sbb
xor
mov
daa
inc
lods
dec
jmp
decb
aad
aad
xchg
mov
leave
pushf
dec
and
adc
and
cmp
xor
into
ffreep
pop
xor
fst
mov
je
test
add
add
cmp
ret
adc
sbb
mov
push
xchg
mov
test
repz
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
cmp
xchg
xchg
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fisttps
into
pop
push
sbbl
shll
or
add
in
data16
imul
out
in
pop
inc
cmpsb
jg
stos
addr16
push
test
sahf
std
bound
data16
mov
mov
push
sbb
out
and
sbb
test
sbb
inc
add
add
rcrl
cld
xchg
test
sbb
sarb
cmp
lret
jns
lds
nop
lds
clc
mov
loop
mov
jns
movl
inc
enter
imul
dec
jle
test
sbb
test
ret
addr16
leave
and
or
movsb
dec
sub
or
mov
cwtl
dec
and
repz
fwait
leave
in
adc
jecxz
push
leave
hlt
inc
and
lret
inc
movsb
fwait
jle
lret
cmc
ret
pop
push
jnp
es
fs
mov
fsubl
jne
stc
lcall
mov
pop
add
dec
xchg
mov
stc
and
sbb
mov
mov
lea
mov
cmp
and
mov
test
add
mov
xchg
mov
inc
outsl
js
sbb
cmpsl
jb
cwtl
jle
sbb
es
test
sub
mov
outsb
xor
and
xor
jno
pop
cmp
push
and
adc
inc
cmp
xor
dec
inc
sub
sub
or
je
sbb
mov
dec
xchg
jmp
lret
sbb
insl
and
inc
pop
inc
jle
mov
std
pop
dec
cwtl
push
xor
dec
cld
loop
mul
or
inc
fucom
or
push
xchg
add
cmp
jb
xchg
out
mov
stos
adc
pop
aam
mov
lret
in
mov
mov
or
xchg
lea
add
je
and
jecxz
inc
sbb
aaa
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xchg
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
jl
xorl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
sbb
idivl
push
call
cmp
pop
inc
xlat
jmp
clc
sbb
and
lahf
lret
jecxz
gs
or
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
cmp
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
jne
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmp
mov
mov
jbe
jae
ret
mov
add
cwtl
push
cwtl
sub
das
in
pushf
dec
and
xchg
ror
stos
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
inc
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
or
ljmp
popf
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
test
lcall
sub
push
cmp
mov
mov
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
add
cmp
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
add
mov
mov
cmp
xchg
mov
mov
cmpsl
jnp
lret
adc
push
xchg
test
cld
and
cmp
add
sbb
mov
or
ficoms
sbb
gs
pop
pop
pop
or
jns
xor
dec
out
mov
jmp
in
cmp
xor
jae
mov
cltd
je
cltd
nop
lock
aad
pushf
ret
pop
fidivs
inc
sti
movsl
mov
mov
stos
mov
ja
push
shrl
inc
mov
enter
cmp
sub
arpl
scas
push
les
sbb
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
scas
mov
imull
mov
mov
bound
dec
aam
xchg
dec
inc
shlb
or
imul
nop
aas
fwait
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
insl
lods
mov
mov
xchg
test
dec
mov
jmp
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
mov
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adcb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
int3
jmp
xor
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
sbb
jo
jb
dec
adc
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
lret
inc
movsl
fcompl
xchg
addl
add
push
aas
lret
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
andl
mov
mov
and
xchg
jp
dec
repnz
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
fwait
xchg
mov
sub
add
lahf
jle
dec
mov
jb
js
cmp
cltd
enter
nop
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repz
mov
xor
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
dec
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
xchg
push
or
int
imul
push
sub
ja
mov
out
repz
pusha
or
xchg
mov
mov
sbb
mov
cltd
pop
push
lock
shrl
or
mov
dec
and
mov
push
xor
mov
lods
ficoml
test
shrb
jne
lahf
pop
les
idiv
jg
add
push
jl
or
inc
imul
sub
xchg
hlt
icebp
scas
cld
lock
mov
jge
adc
jae
rcrl
pop
jo
jge
mov
pop
mov
lods
scas
inc
fsubrl
fsubs
add
xchg
sbb
cmpsl
sub
xchg
xchg
aas
inc
mov
stc
mov
movsl
inc
push
mov
or
mov
lock
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
enter
pop
dec
mov
popf
xchg
sub
adc
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
orb
and
mov
mov
test
enter
sbb
add
inc
xor
in
xchg
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
add
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
orl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
mov
sbb
sbb
loopne
dec
pop
inc
jae
repz
sbb
and
lahf
lret
jecxz
gs
mov
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
push
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
inc
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
dec
mov
pop
push
mov
repz
mov
add
fisubrl
cwtl
sub
das
out
pushf
dec
and
xchg
jo
pop
stos
fsubr
test
xchg
leave
pusha
fldt
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
movsb
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
fcmovne
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
rep
mov
mov
stos
mov
ja
or
cmp
inc
mov
lock
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
call
imull
mov
mov
bound
dec
cltd
sub
fcomps
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
test
mov
mov
xchg
test
dec
mov
mov
dec
xchg
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
xor
xor
sbb
inc
fucomi
jge
rorl
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
andb
inc
movsb
pop
sbb
jno
mov
adc
ret
outsb
pop
dec
sub
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
dec
loop
xchg
dec
pop
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
pop
popf
scas
inc
movsl
fcompl
xchg
push
or
int3
add
jbe
dec
push
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
ror
andl
mov
mov
and
xchg
jp
dec
mov
fdivrs
inc
sbb
cmpsl
ret
fld1
std
jge
jl
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jmp
jae
dec
sub
outsl
inc
and
call
cmp
cltd
enter
mov
lea
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repnz
mov
xor
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
addr16
cmpsl
mov
fwait
lea
mov
inc
adc
sub
jl
or
int
imul
push
sub
hlt
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
dec
lea
mov
je
jb
jecxz
inc
sbb
das
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jne
mov
fucomip
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
jg
mov
or
sbb
mov
pop
inc
jecxz
repz
sbb
and
lahf
lret
jecxz
gs
cmp
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
sar
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
sub
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
fdivrl
pop
inc
mov
xchg
cmp
iret
push
sbb
push
cwtl
sub
das
in
pushf
dec
and
xchg
sub
pop
stos
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
mov
pop
lcall
sub
test
test
inc
mov
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
push
fildll
mov
fldt
arpl
outsl
sub
push
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
xor
ficompl
xchg
test
dec
mov
push
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
pop
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
orb
sbb
jno
cmpsl
push
cmp
ret
outsb
pop
dec
xor
bnd
int3
xor
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
nop
loop
xchg
dec
das
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
dec
popf
scas
inc
movsl
fcompl
xchg
and
addl
add
push
aas
outsb
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcrb
sbb
mov
sbb
std
and
xchg
jp
dec
pop
test
sub
cmp
sbb
xor
fld1
std
jge
jno
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
sub
push
ds
and
call
cmp
cltd
enter
ror
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jg
mov
xor
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
or
or
int
imul
push
sub
hlt
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
jae
cmpsb
inc
cmpsl
fstp
pusha
out
mov
enter
sbb
mov
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xorb
cwtl
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
fucomip
jl
sbbl
dec
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
stc
call
cmp
ret
loopne
dec
pop
inc
fldpi
repz
sbb
and
gs
pusha
enter
int
adc
inc
inc
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
int3
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
jae
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmpsb
mov
pop
xor
jbe
jns
ret
mov
add
cltd
push
cwtl
sub
das
js
dec
and
xchg
pop
lret
fsubr
test
xchg
leave
pusha
fisubrl
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
das
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
xchg
cwtl
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
scas
movsl
mov
mov
stos
mov
ja
push
test
test
inc
mov
sub
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
sbb
mov
imull
mov
mov
bound
dec
loope
xchg
dec
inc
shlb
or
imul
nop
xor
mov
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
inc
lods
mov
mov
xchg
test
dec
mov
pop
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
sbb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
andb
es
lods
mov
mov
push
adc
pop
dec
into
jmp
xor
loop
and
sub
inc
sbb
mov
or
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
arpl
jo
jb
dec
inc
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
add
scas
inc
movsl
fcompl
xchg
sub
addl
add
push
aas
pop
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rol
andl
mov
mov
and
xchg
jp
dec
mov
push
sub
cmp
mov
ret
fld1
std
jge
test
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
leave
xchg
mov
sub
aad
and
call
cmp
cltd
enter
pop
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
negb
mov
aaa
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
repnz
cmpsl
mov
fwait
lea
mov
inc
adc
sub
insl
push
or
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
xor
fucomi
out
mov
enter
sbb
add
inc
push
mov
or
daa
sbb
xchg
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
dec
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
add
fucomip
jl
subl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
pop
sbb
mov
dec
call
cmp
pop
inc
test
repz
sbb
and
lahf
lret
jecxz
gs
in
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
jp
mov
xchg
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
mov
mov
push
mov
mov
add
cwtl
push
cwtl
sub
das
outsb
pushf
dec
and
xchg
jecxz
pop
stos
fsubr
test
xchg
leave
pusha
fisubrs
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
sub
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
inc
addr16
test
ljmp
popf
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
lods
movsl
mov
mov
stos
mov
ja
xor
cmp
inc
mov
cld
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
scas
mov
imull
mov
mov
bound
dec
shrl
xchg
dec
inc
shlb
or
imul
nop
cmp
mov
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
mov
mov
xchg
test
dec
mov
inc
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
fldt
xor
sbb
mov
fucomi
jge
rorl
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
jnp
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
and
int3
xor
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
jo
jb
dec
and
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jo
scas
inc
movsl
fcompl
xchg
sbb
addl
add
push
aas
cmpsb
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
xchg
test
sub
cmp
inc
out
mov
ret
fld1
std
jge
push
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
movsb
xchg
mov
sub
mov
lahf
jle
dec
jb
jb
js
cmp
inc
fmulp
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
hlt
pop
mov
xor
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
cmp
imul
fwait
lea
mov
inc
adc
sub
sahf
push
or
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
cli
lea
mov
mov
mov
test
enter
sbb
mov
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
in
inc
inc
cmp
push
lock
shrl
or
mov
sub
pushf
dec
and
leave
pop
inc
add
repnz
jns
sbb
lahf
shlb
mov
ljmp
fnsetpm(287
leave
je
ret
cmp
sbb
jb
scas
jne
dec
inc
pop
cltd
cmp
jp
adc
jge
scas
stc
mov
cltd
jmp
cmp
jnp
jg
xor
icebp
mov
sub
sbb
adc
xor
mov
cmp
fadd
mov
adc
fidivrl
jp
pop
push
enter
xchg
pop
mov
xlat
or
pop
lea
out
mov
enter
sbb
es
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
ret
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbb
fucomip
jl
adc
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
mov
repz
ret
loopne
dec
pop
inc
pop
jmp
clc
sbb
and
jecxz
gs
mov
int
add
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
lret
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
jge
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmp
ficomps
mov
cli
mov
mov
add
test
hlt
das
cli
pushf
dec
and
xchg
outsl
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
lea
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
adc
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
loopne
mov
mov
stos
mov
ja
ret
test
test
inc
mov
cs
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
stc
fildll
into
mov
mov
bound
dec
pop
sub
jb
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
pushf
lods
mov
mov
xchg
test
dec
mov
in
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
lea
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
xchg
bnd
int3
xor
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
in
jo
jb
dec
push
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
scas
popf
scas
inc
movsl
fcompl
xchg
lahf
or
cmp
or
push
aas
mov
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
inc
es
mov
sbb
cmp
adc
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
jae
ljmp
xchg
mov
dec
inc
and
call
cmp
enter
gs
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
pop
mov
xor
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
les
imul
lea
mov
inc
adc
sub
push
push
or
int
imul
push
sub
std
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lea
shl
mov
enter
sbb
cs
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
cmp
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
add
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
mov
repz
ret
loopne
dec
pop
inc
daa
jmp
clc
sbb
and
lret
jecxz
gs
icebp
enter
int
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
iret
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fnsave
push
test
lret
mov
repnz
stos
inc
inc
pop
dec
ds
sbb
jmp
rclb
arpl
jo
test
sbb
xorb
cmp
arpl
cmpsl
add
pop
xor
xlat
fistpl
push
pop
cmpsl
push
jg
mov
enter
adc
rcrl
push
jb
adc
adc
fwait
arpl
inc
les
jo
fsubs
sub
fdivrs
cli
jae
loopne
xor
lahf
cltd
xlat
pop
mov
push
adc
add
or
add
and
hlt
cwtl
mov
imul
cmpb
xor
pop
xor
mov
jp
mov
data16
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
inc
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
idivb
pop
iret
mov
cmp
cmp
sbb
push
cwtl
sub
das
cs
dec
and
xchg
sub
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
cmp
and
add
outsl
icebp
pop
scas
xchg
stos
mov
outsb
les
fcoml
mov
pop
icebp
mov
cmp
mov
aad
fstpt
xlat
pop
cmpps
push
fcom
pushf
jae
sub
push
or
cmpl
mov
adc
popf
lods
xchg
cwtl
outsb
mov
movl
mov
push
xchg
hlt
pop
fsts
sarl
aas
out
and
adc
and
or
mov
mov
int3
sub
mov
push
xchg
mov
pop
adc
sbbl
jns
in
mov
pop
leave
mov
es
mov
add
mov
xor
pushf
dec
and
xchg
mov
pop
stos
fsubr
test
xchg
leave
pusha
aad
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
sbb
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
call
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
movsl
mov
mov
stos
mov
ja
ret
test
test
inc
mov
pop
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
scas
mov
imull
mov
mov
bound
dec
sub
inc
sbb
addb
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
pop
lods
mov
mov
xchg
test
dec
mov
imul
lds
pop
dec
les
test
cmpsl
mov
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
popa
sub
inc
sarb
push
pushf
pop
repnz
rcrb
cmovle
mov
shll
sbb
jb
pusha
repz
push
enter
mov
cltd
les
jae
out
push
adc
pop
cwtl
mov
hlt
js
xchg
icebp
scas
int3
sbb
scas
jns
pop
adc
xorb
jp
aas
in
and
cmc
mov
insl
xchg
sti
aaa
negb
adc
mov
sbb
ss
filds
leave
cmpb
pop
xchg
mov
or
adc
sub
pop
push
dec
push
dec
or
sbb
pusha
leave
lods
mov
mov
xchg
test
dec
mov
cld
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
mov
mov
adc
outsb
jno
popl
mov
fcoms
and
xchg
jbe
pop
repz
sti
inc
push
into
mov
push
gs
outsl
mov
cmp
popf
repz
fadds
jno
xchg
mov
je
aad
and
cmp
ljmp
lods
fnstsw
in
cmpsl
in
sbb
adc
jnp
mov
jns
outsl
inc
sbb
add
mov
mov
and
or
mov
adc
test
push
adc
cmc
sbb
pusha
push
shll
stos
pop
dec
mov
addb
jne
mov
dec
les
push
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
ljmp
mov
push
dec
mov
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
inc
movsb
pop
sbb
sub
mov
push
adc
ret
outsb
pop
dec
sbb
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
repnz
xchg
dec
jge
adc
pusha
sarb
sub
push
mov
rcrb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
repnz
scas
inc
movsl
fcompl
xchg
in
addl
add
push
aas
xor
mov
ret
jg
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rol
andl
mov
mov
and
xchg
jp
dec
cmp
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
pusha
xchg
mov
sub
or
lahf
jle
dec
out
call
cmp
cltd
enter
mov
lea
adc
add
mov
fucomip
mov
cmc
mov
add
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
stos
jecxz
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
std
jge
test
mov
ja
adc
lahf
popf
in
stc
jl
ret
push
sbb
inc
cld
cmc
lods
std
jo
xchg
inc
gs
clc
adc
xchg
adc
leave
xchg
fwait
adc
cmp
jns
mov
push
js
jb
lods
inc
inc
pushf
dec
outsl
loopne
stos
jle
jmp
std
xchg
fwait
ss
repz
nop
xchg
mov
mov
test
mov
mov
inc
cmpsb
pop
fwait
mov
sub
xchg
mov
sub
lahf
jle
dec
jnp
jb
js
cmp
inc
mov
lea
adc
add
mov
fucomip
mov
cmc
mov
and
jle
mov
xor
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
scas
push
or
int
imul
push
sub
lock
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
das
lea
stos
out
mov
enter
sbb
addr16
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
fidivs
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
fucomip
jl
orl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
idivl
sbb
repz
ret
loopne
dec
pop
inc
or
repz
sbb
and
lahf
lret
jecxz
gs
pusha
enter
int
aaa
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
mov
mov
dec
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
fs
pop
ljmp
test
sbb
add
iret
push
cwtl
sub
das
lcall
xor
pop
stos
fsubr
test
xchg
leave
pusha
aad
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
bound
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
pop
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
andl
sbb
stos
mov
ja
imull
cmp
inc
mov
insl
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
stos
fildll
ss
mov
bound
dec
nop
sub
pop
sbb
addb
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
lods
mov
mov
xchg
test
dec
mov
and
dec
push
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
hlt
test
xor
sbb
inc
fucomi
jge
rcrl
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
xchg
jmp
xor
leave
loop
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
sbb
jo
jb
dec
lret
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
xor
fcompl
xchg
jle
addl
add
push
aas
mov
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
mov
icebp
popl
std
sbb
push
and
xchg
jp
dec
nop
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jo
mov
sub
test
lahf
jle
dec
mov
jb
js
cmp
cltd
enter
and
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lcall
mov
aaa
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
or
dec
mov
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
xor
fildl
je
imul
cmp
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
cmpsl
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
fucomip
jl
addl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
repz
cmp
loopne
dec
pop
inc
jg
repz
sbb
and
lahf
lret
jecxz
gs
xchg
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
sbb
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
leavew
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
or
pop
add
mov
fimuls
cmp
add
jg
xor
pushf
dec
and
xchg
adc
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
add
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
pop
movsl
mov
mov
stos
mov
ja
sbb
cmp
pop
inc
jp
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
in
fildll
mov
pop
mov
bound
dec
sub
xchg
dec
inc
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
and
stos
jg
mov
and
dec
into
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
cwtl
test
xor
sbb
scas
fucomi
jge
shll
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmpb
addr16
lods
mov
mov
push
adc
ret
outsb
pop
dec
adc
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
or
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
push
popf
scas
inc
movsl
fcompl
xchg
stos
or
add
jbe
dec
mov
aam
rcrl
out
pop
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcl
andl
mov
mov
and
xchg
jp
dec
inc
test
sub
cmp
sbb
sti
ret
fld1
std
jge
frstor
lock
mov
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
dec
xchg
mov
sub
lock
and
call
cmp
enter
arpl
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jae
mov
xor
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
rcrb
imul
lea
mov
inc
adc
sub
jb
or
int
imul
push
sub
idivb
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
cwtl
lea
out
mov
enter
sbb
pop
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
outsl
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbb
fucomip
jl
cmpl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
or
repz
ret
loopne
dec
pop
inc
jmp
clc
sbb
and
lret
jecxz
gs
xor
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
addr16
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
fs
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
dec
mov
pop
inc
mov
je
ret
mov
add
ret
push
cwtl
sub
das
cmp
push
in
test
xchg
leave
pusha
aad
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
dec
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
test
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
stos
movsl
mov
mov
stos
mov
ja
jnp
shrl
inc
mov
pminsw
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
inc
fildll
lds
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
test
mov
mov
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
loop
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adcb
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
cs
xor
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
ja
jo
jb
dec
imull
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
and
pop
outsb
xchg
mov
addl
add
push
aas
adc
mov
ret
mov
inc
sbb
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
andl
mov
mov
and
xchg
jp
dec
push
test
sub
cmp
inc
out
mov
ret
fld1
std
jge
ret
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
xor
sub
sub
xchg
inc
and
call
cmp
cltd
enter
clc
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jge
mov
xor
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
lahf
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
repz
or
int
imul
push
sub
je
mov
out
repz
inc
or
mov
aas
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
daa
lea
add
mov
mov
test
enter
sbb
addl
fmuls
in
inc
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
shll
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sub
fucomip
jl
xor
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
mov
mov
shr
repz
ret
loopne
dec
pop
inc
jmp
clc
sbb
and
lahf
lret
jecxz
gs
ljmp
push
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
adc
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
movsb
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
push
mov
pop
push
mov
pop
mov
mov
add
cmp
xor
pushf
dec
and
xchg
outsb
lret
fsubr
test
xchg
leave
pusha
fildll
cmpb
ljmp
pushf
invd
mov
xor
xlat
imul
sbb
lcall
dec
pop
cld
jae
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
pop
movsb
add
dec
or
pop
sbb
mov
push
xchg
lahf
aam
jg
das
mov
inc
cwtl
imul
out
cmp
fdivrl
repz
mov
hlt
sbb
cmp
decb
push
adc
cmpb
sbb
inc
sub
xor
and
pop
aam
jae
add
cmp
and
mov
pop
add
mov
fisttpll
cmp
sbb
push
cwtl
sub
das
rcrb
cmp
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
cmp
and
add
outsl
icebp
pop
scas
xchg
stos
mov
outsb
les
fcoml
mov
pop
icebp
mov
cmp
mov
aad
fstpt
xlat
pop
cmpps
push
fcom
pushf
jae
sub
push
or
cmpl
mov
adc
popf
lods
xchg
cwtl
outsb
mov
movl
mov
push
xchg
hlt
pop
fsts
sarl
aas
out
and
adc
and
or
mov
mov
int3
sub
mov
push
xchg
mov
pop
adc
sbbl
jns
mov
ficomps
mov
orb
xor
or
sbb
push
cwtl
sub
das
mov
jne
ds
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
cltd
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
test
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
lds
lcall
sub
test
inc
mov
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
popf
fildll
cmp
mov
bound
dec
push
sub
sbb
addb
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
mov
mov
xchg
test
dec
mov
or
dec
pop
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
movsl
test
xor
sbb
sbb
fucomi
jge
rcll
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
pop
dec
mov
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
popl
ret
pop
mov
and
lcall
cmp
aam
inc
and
stos
gs
jmp
ret
sbb
adc
jle
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
aam
fimull
lcall
inc
inc
fcmovnu
cwtl
out
mov
mov
mov
sbb
push
outsb
sbb
inc
sbb
sbb
loopne
hlt
mov
pop
fs
icebp
testb
sbb
pushl
xlat
mov
ds
dec
push
lret
cmpl
ljmp
ficoml
xchg
add
sbb
fdivs
addb
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
pop
dec
int3
jmp
xor
mov
popf
dec
stc
xchg
mov
rorb
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
sub
jo
jb
dec
popa
sub
or
cmp
sub
push
mov
rclb
movsl
ret
mov
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
int
scas
inc
movsl
fcompl
xchg
cmp
addl
add
push
aas
out
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sar
andl
mov
mov
and
xchg
jp
dec
dec
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
sbb
jae
loopne
xchg
mov
fiaddl
lahf
jle
dec
lret
call
cmp
cltd
enter
popl
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lock
mov
xor
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
nop
push
or
int
imul
push
sub
je
mov
out
repz
inc
or
mov
aas
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
pop
lea
push
out
mov
enter
sbb
xor
inc
and
in
into
sahf
dec
mov
into
pop
stos
pop
lods
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
lods
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
fucomip
jl
andl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
shr
mov
ret
loopne
dec
pop
inc
sub
repz
sbb
and
gs
or
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
cmpb
push
jb
mov
lds
cmp
xor
adc
stc
push
push
stos
arpl
lock
enter
add
push
popl
fcmovbe
sbb
fistpl
xchg
std
lahf
int
inc
cmpb
jg
lret
jno
mov
mov
add
fwait
pop
fsub
movsb
stc
jb
adc
adc
jmp
mov
imul
in
mov
lret
das
shrb
sub
mov
mov
mov
cwtl
mov
mov
xchg
sub
add
mov
jnp
mov
shr
mov
ret
loopne
dec
pop
inc
mov
in
and
lahf
lret
jecxz
gs
lahf
enter
int
test
inc
lret
leave
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
xchg
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
jecxz
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
insl
mov
pop
pop
mov
sbb
sbb
jle
or
sbb
push
cwtl
sub
das
ret
pushf
dec
and
xchg
lret
fsubr
test
xchg
leave
pusha
fsubrl
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
fisubs
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
jmp
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
jmp
pop
lcall
sub
shrl
inc
mov
mov
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
cwtl
fildll
ret
mov
mov
bound
dec
sub
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
outsl
lods
mov
mov
xchg
test
dec
mov
sbb
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
stos
mov
stos
xchg
push
adc
push
dec
arpl
xor
sbb
lock
fucomi
jge
sarl
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xor
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
sub
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
imul
dec
push
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
popf
scas
inc
movsl
fcompl
xchg
mov
addl
add
push
aas
ss
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcl
andl
mov
mov
and
xchg
jp
dec
aam
push
sub
cmp
inc
out
mov
ret
fld1
std
jge
leave
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
cmpsl
xchg
mov
sub
cli
inc
and
call
cmp
inc
mov
lea
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lock
mov
xor
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
jl
cmpsl
mov
fwait
lea
mov
inc
adc
sub
icebp
push
or
int
imul
push
sub
std
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
test
cmpsb
inc
cmpsl
fstp
push
out
mov
enter
sbb
addr16
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jge
mov
and
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
fucomip
jl
xorl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
daa
call
cmp
pop
inc
push
jmp
clc
sbb
and
lret
jecxz
gs
pop
enter
int
push
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
lock
mov
daa
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
es
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
xor
pop
fadd
mov
lds
cmp
or
sbb
push
cwtl
sub
das
xchg
pushf
dec
and
xchg
in
lret
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
aaa
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
call
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
jmp
pop
lcall
sub
cmp
pop
inc
shr
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
stos
fildll
push
mov
mov
bound
dec
scas
sub
mov
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
fldt
fcmovbe
cmpsl
xchg
test
dec
mov
adc
dec
aaa
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
mov
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
out
loop
xchg
dec
add
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
rcrb
pop
xchg
jb
jne
addl
add
push
aas
mov
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
shlb
xchg
cwtl
or
and
shrl
shr
test
sub
sahf
dec
mov
inc
add
jb
pop
mov
pop
inc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jo
jl
ftst
mov
repz
inc
sbb
pop
sbb
div
mov
idivb
aad
mov
cs
dec
sbb
rclb
cli
mov
testl
xchg
mov
xor
add
xchg
test
mov
jae
xor
pop
aad
xor
xchg
add
movsb
fisttps
fdecstp
js
mov
fcompl
xchg
invd
addl
add
push
aas
rcrb
inc
ret
jl
inc
sbb
cmpsl
ret
out
cmpl
lea
shlb
xchg
cwtl
or
and
shrl
shr
test
sub
sahf
dec
mov
inc
add
jb
pop
mov
pop
inc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jo
jl
ftst
mov
repz
inc
sbb
pop
sbb
div
mov
idivb
aad
mov
cs
dec
sbb
rclb
cli
mov
testl
xchg
mov
xor
add
xchg
test
mov
jae
xor
pop
aad
xor
xchg
add
movsb
fisttps
fdecstp
js
push
scas
inc
movsl
fcompl
xchg
xchg
addl
add
push
aas
jg
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
sbb
mov
sbb
mov
adc
test
sub
cmp
sbb
scas
ret
fld1
std
jge
icebp
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
repz
mov
sub
sbb
and
call
cmp
cltd
enter
aaa
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
pop
mov
xor
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
inc
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
push
push
or
int
imul
push
sub
repz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
jle
cmpsb
inc
cmpsl
fstp
in
mov
mov
test
enter
sbb
push
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
insb
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmpl
xorl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
mov
repz
ret
loopne
dec
pop
inc
push
jmp
clc
sbb
and
gs
das
enter
int
cld
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
sub
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
pop
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sub
pop
adc
mov
sub
cmp
or
sbb
push
cwtl
sub
das
push
jne
scas
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jns
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
add
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
pop
movsl
mov
mov
stos
mov
ja
add
cmp
inc
mov
inc
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
scas
mov
imull
mov
mov
bound
dec
add
xchg
dec
inc
shlb
or
imul
nop
ss
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
imul
aam
xchg
test
dec
mov
mov
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
push
test
xor
sbb
jl
fucomi
jge
shll
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
fdivs
sub
adc
ret
outsb
pop
dec
mov
int3
xor
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jge
jo
jb
dec
sub
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
rcrb
pop
xchg
xchg
or
jp
add
push
aas
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shr
andl
mov
mov
and
xchg
jp
dec
inc
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
cmpsl
xchg
mov
sub
and
cmovge
jb
js
cmp
cltd
enter
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lock
mov
xor
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
negb
imul
fwait
lea
mov
inc
adc
sub
pushf
push
or
int
imul
push
sub
repz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
fimuls
fcmovnbe
out
mov
enter
sbb
incb
inc
leave
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
andb
mov
lds
lock
ret
mov
sarl
push
flds
sahf
inc
mov
mov
test
lods
fbstp
xlat
rclb
in
cmp
lcall
ret
add
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
lock
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
xorl
inc
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
fldt
inc
in
mov
insb
jae
fildll
loop
jno
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
inc
pop
mov
mov
sub
pop
push
inc
inc
cld
loop
test
lods
imul
mov
fdivs
pop
adc
xchg
jle
int
in
gs
sbb
aam
and
rolb
mov
repnz
mov
gs
insl
mov
repz
and
sub
add
mov
dec
mov
mov
ret
call
cmp
loopne
dec
pop
inc
sahf
jmp
clc
sbb
and
lahf
lret
jecxz
gs
inc
enter
int
dec
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
shrl
pusha
std
mov
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
roll
stos
cmp
or
jno
lds
xchg
popl
arpl
clc
mov
cmp
fiaddl
mov
add
xchg
inc
les
scas
push
dec
mov
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
add
out
mov
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
cmp
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
test
mov
or
add
cmpl
in
jb
adc
or
pop
inc
test
or
nop
inc
inc
jge
fwait
xchg
out
test
clc
push
mov
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
into
sbbb
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
xchg
mov
pop
ffree
mov
sbb
cmp
add
les
cwtl
sub
das
negl
fcmovne
pop
stos
fsubr
test
xchg
leave
pusha
aad
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
mov
mov
or
xchg
push
mov
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
repnz
xor
imul
inc
lds
stos
push
call
out
cltd
clc
bound
push
and
pushf
and
stos
iret
add
push
loope
mov
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
out
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
lock
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
repnz
mov
mov
leave
adc
sbb
sti
and
dec
popa
adc
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
xchg
or
add
in
test
jae
push
insl
stc
insl
lsl
call
inc
inc
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
int3
sbbl
out
mov
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
insl
movsl
mov
mov
stos
mov
ja
into
test
test
inc
mov
pusha
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
sbbl
jge
subl
adc
sub
push
inc
add
outsb
mov
push
fidivrs
and
lahf
mov
scas
xchg
push
ret
test
stos
repz
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
cmp
imull
mov
mov
bound
dec
xor
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
mov
add
arpl
or
out
xor
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
fwait
mov
xlat
lods
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
lret
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
cli
lods
mov
mov
xchg
test
dec
mov
addl
cmp
mov
dec
les
lods
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
mov
mov
adc
outsb
jno
popl
mov
fcoms
and
xchg
jbe
pop
repz
sti
inc
push
into
mov
push
gs
outsl
mov
cmp
popf
repz
fadds
jno
xchg
mov
je
aad
and
cmp
ljmp
lods
fnstsw
in
cmpsl
in
sbb
adc
jnp
mov
jns
outsl
inc
sbb
add
mov
mov
and
or
mov
adc
test
push
adc
cmc
sbb
pusha
mov
adc
xchg
test
dec
mov
filds
dec
jl
mov
dec
les
jle
dec
mov
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
adc
xchg
mov
adc
mov
pusha
stos
cmp
mov
and
out
enter
and
test
sub
fwait
inc
fildll
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
ret
imul
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
stos
loopne
dec
faddl
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
shrl
xor
sbb
mov
fucomi
jge
shl
inc
fwait
push
shlb
jae
sub
jns
jle
xchg
sub
cs
or
mov
clc
push
fdivrs
aam
inc
and
lret
gs
repz
or
xor
fcoml
mov
rcll
adc
xchg
cltd
pop
inc
stos
dec
loope
dec
pop
jnp
mov
call
mov
cmp
pop
sub
out
ds
jp
movsb
fnstcw
hlt
or
aad
or
and
nop
addr16
sbb
xchg
mov
rcrb
mov
inc
mov
sbb
scas
xchg
sbb
in
bound
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
jl
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
jb
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
shl
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
popa
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
enter
and
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
fucomip
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
push
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
rol
mov
xor
or
xor
and
in
scas
xchg
stos
pop
inc
mov
lret
std
fdivs
mov
fiadds
dec
inc
push
orb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
scas
loop
lret
data16
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
jo
jb
dec
sbb
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
mov
out
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
mov
cmpb
or
int
inc
sbb
pop
inc
test
dec
inc
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
movb
mov
jo
jge
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
inc
popf
scas
inc
movsl
fcompl
xchg
nop
or
fiadds
add
push
aas
test
mov
ret
mov
xchg
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
jecxz
mov
popf
adcl
push
lods
xchg
shl
mov
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
mov
mov
push
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sar
andl
mov
mov
and
xchg
jp
dec
mov
fdivrs
xor
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
repz
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
nop
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
dec
inc
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
les
cli
mov
jno
cmp
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
adcl
aaa
sub
xchg
inc
and
call
cmp
cltd
enter
fcmovne
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
cmc
pop
mov
xor
ljmp
repz
loopne
xchg
pop
push
add
shl
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
or
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
insb
mov
dec
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
icebp
leave
sbb
pop
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
push
or
int
imul
push
sub
repnz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
xor
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
pushf
scas
popf
push
jnp
xchg
lea
les
jl
jnp
hlt
movsb
ret
jo
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
ret
adc
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
dec
mov
xchg
cltd
add
mov
cwtl
fsubrs
shlb
sub
mov
add
dec
mov
inc
mov
mov
aam
xchg
addb
ljmp
repz
mov
aad
add
repnz
mov
loope
iret
inc
add
int3
adc
scas
scas
dec
test
lahf
mov
add
shrl
jp
fbstp
xchg
pop
sbb
testb
arpl
movsl
pusha
inc
mov
cmp
das
xchg
stos
sbb
push
and
and
fwait
loopne
aaa
lahf
xor
out
ret
scas
scas
pop
negl
xchg
mov
jo
rcrb
inc
xor
fdivs
and
hlt
stos
leave
out
out
or
mov
fwait
push
mov
inc
mov
adc
in
dec
mov
mov
imul
jmp
xchg
enter
insl
push
or
xor
mov
dec
dec
fsubs
adc
mov
ret
loopne
fisubl
in
mov
cmovge
sbb
fwait
std
cld
jg
inc
add
int3
sbb
stos
xor
paddusb
jno
dec
sub
test
pop
xor
dec
dec
cwtl
test
fucomp
push
cld
mov
imul
push
push
mov
sti
cli
jg
mov
aaa
ljmp
cld
jbe
xor
mov
and
clc
inc
mov
push
push
jb
arpl
inc
or
pop
mov
popl
xor
dec
mov
fnstenv
adc
push
lods
sub
jg
fildll
inc
push
mov
ror
sbb
jle
xchg
cwtl
xchg
aaa
mov
push
add
fwait
int
inc
test
pop
das
or
pop
call
loopne
or
dec
ret
clc
jmp
stc
std
mov
or
pop
mov
adc
repnz
cmp
pusha
mov
dec
fcompl
inc
sub
rcrb
sub
mov
mov
repnz
mov
fistl
push
lret
mov
fsubl
pushf
cmp
insl
mov
repnz
mov
aaa
je
scas
cwtl
and
add
ja
sub
cltd
sub
mov
iret
stc
movsb
lds
jg
mov
das
push
add
stos
hlt
jl
js
sbb
rcrb
dec
xor
xchg
je
or
popf
push
inc
xchg
leave
movsb
inc
jne
sbb
jo
jnp
mov
inc
xchg
enter
imulb
or
dec
push
or
sub
cmpsl
add
xchg
pop
xor
mov
pop
xor
movsl
test
lea
dec
mov
addb
call
and
add
or
pop
dec
lock
cli
jg
xor
xchg
sbb
xchg
dec
pushf
or
pop
jge
mov
jnp
xchg
loop
inc
popa
out
mov
push
dec
pop
mov
lods
movb
in
push
cld
mov
imul
pop
cmp
movb
pop
adc
test
push
sbb
mov
and
in
lds
leave
mov
cli
or
sbb
mov
fwait
push
dec
mov
xor
pop
mov
test
test
xchg
call
dec
inc
pusha
jo
mov
call
pop
mov
mov
pusha
xchg
jne
dec
inc
mov
aaa
stos
add
imul
dec
loopne
dec
xchg
leave
xor
mov
aaa
cld
dec
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
and
ret
mov
add
push
pushf
xor
fstpt
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
adc
les
lret
mov
lret
mov
mov
jae
fidivl
shll
or
xchg
dec
into
mov
mov
ret
ficoml
popf
lret
stos
xchg
fwait
adc
mov
lds
and
pusha
push
jg
pop
loope
ret
jg
or
xchg
xchg
jg
cwtl
clc
inc
adc
clc
jb
adc
inc
xchg
add
mov
xchg
jle
ret
fdivrl
cli
adc
push
imul
jge
stos
mov
sub
cltd
or
adcl
dec
sub
in
jne
or
das
jge
xchg
sbb
pop
pop
repz
adc
loopne
sahf
scas
iret
fucomip
in
lea
iret
rcr
adc
cwtl
rcrb
icebp
mov
jbe
add
lret
cmpsl
sbb
pop
ljmp
in
shrl
dec
test
mov
push
in
mov
jmp
scas
add
ljmp
sbb
or
adc
das
sub
lock
and
leave
dec
mov
int
test
pop
test
dec
cmp
sub
pusha
mov
in
in
int
xchg
inc
adc
enter
mov
in
sub
cmp
ds
insl
add
xchg
inc
cwtl
dec
and
mov
fcomps
enter
scas
lcall
cmpsl
ret
xchg
fnstsw
dec
sbb
adc
or
xor
test
imul
cmp
out
int3
sbb
or
sbb
and
daa
pop
xchg
lods
mov
adc
mov
pop
dec
jo
cltd
add
mov
out
sbb
sti
inc
mov
icebp
neg
xor
scas
leave
lahf
dec
add
inc
in
mov
fbld
lahf
cli
clc
sub
xchg
ljmp
inc
cs
pop
aam
push
jo
xchg
or
fisubrl
pop
pop
ja
nop
mov
add
fwait
enter
leave
bound
fcomi
js
mov
sub
jo
mov
add
rclb
sub
adc
mov
imul
mov
fwait
sbb
xlat
pop
stc
mov
fwait
push
xchg
mov
add
shrl
push
or
cmpb
mov
sahf
dec
mov
mov
adc
popa
push
test
cltd
mov
dec
sbb
cwtl
hlt
sti
mov
in
aaa
gs
mov
pop
sub
sbb
out
adc
imul
nop
mov
sub
cmp
sub
cmc
sbb
inc
repz
mov
popf
imul
adcl
pop
mov
add
jnp
or
push
adc
lcall
and
sub
inc
aaa
mov
push
fists
cmp
js
in
add
add
xorl
inc
clc
or
fwait
push
dec
mov
add
xchg
inc
cwtl
dec
and
mov
fcomps
enter
scas
lcall
cmpsl
ret
sahf
jno
cmp
enter
scas
adc
adc
jb
arpl
popf
inc
sbb
mov
fcomp
mov
popf
popf
push
aas
rcrb
pop
or
stc
and
ljmp
pop
mov
mov
ficoms
add
lock
fldenv
adc
sbb
stc
mov
cmpsl
push
mov
mov
dec
pushf
mov
lods
out
clc
mov
aaa
imul
les
mov
and
xchg
sbb
sbb
or
popa
inc
dec
xchg
test
test
xchg
les
pop
outsb
shlb
adc
dec
push
scas
cmp
mov
in
inc
sbb
cs
fcomi
js
mov
cld
jnp
inc
andb
testl
outsl
rorb
mov
xor
mov
jle
shl
and
pop
jmp
movsb
int3
fs
fistps
and
adc
lea
jle
daa
inc
popf
mov
xorl
sub
mov
mov
mov
add
scas
mov
pop
stos
rcll
jns
mov
pop
lods
dec
and
in
daa
fisubl
mov
sbb
std
jns
mov
xor
pop
imul
add
add
sub
sarl
stos
shl
mov
inc
xor
hlt
dec
lahf
movsb
imul
sahf
dec
jne
fcmovnb
cmp
out
lret
sub
mov
inc
sbb
mov
subb
insl
mov
in
mov
pop
test
add
pusha
mov
loope
sti
fstps
jb
andl
and
mov
push
jo
and
pop
jmp
or
xchg
lahf
aam
pop
loope
insb
xor
movsb
jp
test
rcrl
cmp
xor
enter
mov
inc
pop
scas
xchg
enter
dec
mov
adcl
in
jnp
int3
mov
mov
mov
jmp
mov
mov
shl
in
es
gs
repz
rcl
mov
in
lret
xor
pop
dec
cmp
or
inc
stc
incb
pushf
jp
jns
iret
cmpsl
mov
cwtl
or
clc
mov
and
jne
test
mov
push
adc
xor
pop
lahf
sti
imul
jo
xor
push
sbb
cmp
push
adc
or
mov
sbb
xchg
push
lea
xor
call
push
fs
lcall
xlat
in
into
and
sarl
xchg
out
jp
xchg
push
jmp
xchg
xchg
mov
bound
lcall
mov
xchg
cmp
sbb
mov
enter
adc
add
add
xchg
cmp
xor
add
xor
jne
enter
into
fwait
lahf
inc
mov
je
mov
loopne
inc
sbb
into
sub
popa
mov
add
mov
sbb
gs
sub
adc
fsts
sbb
pusha
out
mov
ja
add
dec
in
in
cmpsl
xchg
fcoms
or
test
fildl
dec
and
hlt
xchg
add
call
push
xchg
cmp
push
pop
cmp
sub
pop
fdiv
push
jg
xor
idivb
pop
adc
lret
or
adc
std
decl
outsl
testl
fwait
sbb
mov
gs
fstpl
aas
inc
fsubs
push
stos
or
jb
adc
jno
lahf
test
insb
ffree
lods
adc
or
pop
adc
shl
dec
daa
jmp
pop
mov
popf
sbb
shl
sub
test
cmpsl
inc
mov
cmpsl
adc
sbb
mov
cmovge
imul
mov
data16
cltd
sbb
cwtl
lret
inc
push
pushf
mov
lds
nop
lds
or
and
pushf
ret
inc
mov
stc
inc
loope
pop
dec
mov
xchg
test
loopne
xchg
push
adc
or
lret
fisubrl
pop
sahf
xchg
push
adc
mov
push
jae
xor
mov
mov
or
fdiv
icebp
sbb
loop
xchg
pop
sub
or
aas
fdivs
sbb
adc
mov
out
inc
addr16
pusha
xor
push
inc
xchg
mov
fists
mov
lds
cmpsb
sub
pop
add
mov
aad
sub
int
jle
push
dec
addl
into
popa
mov
mov
loopne
mov
mov
test
repnz
enter
loop
pop
adc
aas
add
insl
mov
sbb
cwtl
lret
mov
notl
aaa
stos
inc
in
lea
inc
sub
das
lret
fucomp
jae
jge
xchg
mov
leave
sbb
and
dec
bound
mov
pop
stos
xchg
mov
rolb
or
push
sbb
push
movl
ss
mov
dec
shll
xchg
push
cmp
ud1
sbb
xor
xor
mov
outsl
jbe
cli
jne
mov
pusha
out
lcall
mov
sbb
sbb
es
leave
adc
adc
mov
dec
mov
sbb
cmp
aaa
ret
inc
xor
pop
popa
push
xchg
sbb
fstl
pop
add
push
je
jecxz
enter
test
repnz
push
cmp
jge
pop
mov
repnz
movb
jae
fadd
mov
movsb
fisubl
mov
xor
dec
mov
icebp
cld
xchg
insb
orl
xchg
dec
bound
addb
mov
and
les
and
fwait
mov
in
movsl
sarl
adc
push
push
dec
je
sbb
loopne
es
or
mov
or
mov
sub
jne
pop
push
fistpll
push
inc
jne
mov
cmpsb
sbb
pop
out
stc
cmp
fwait
insl
ds
mov
jl
es
int3
sbb
rorb
inc
shl
nop
fwait
mov
cmp
sub
cmp
pop
inc
pop
or
sahf
rorl
loopne
jnp
pop
mov
or
roll
mov
jecxz
add
scas
adc
jmp
dec
sbb
cltd
cmp
sbb
or
cmp
push
cli
lods
nop
push
sub
mov
mov
insl
out
into
cmp
dec
popf
in
dec
or
cmp
test
dec
pop
mov
pushf
pop
orb
push
inc
lcall
cmp
lods
jle
mov
push
lahf
fists
addl
sbb
xlat
in
pop
mull
inc
pusha
sbb
mov
xchg
call
stos
mov
je
inc
ficompl
movsb
inc
jne
mov
movsl
test
fwait
push
repz
or
mov
add
sbb
mov
int3
mov
adc
mov
mov
neg
movsb
or
sub
mov
mov
or
roll
in
ret
ret
jo
adc
jbe
sbb
push
leave
jmp
add
loop
les
std
mov
dec
movsb
leave
push
notl
push
pop
fbstp
sbb
pushf
movsl
orl
mov
hlt
mov
in
es
mov
adc
pop
scas
mov
dec
mov
leave
stc
lock
fs
xchg
leave
pop
lds
jle
scas
push
fcomps
jo
popa
or
lret
sarb
mov
dec
dec
xchg
int
shlb
xor
xchg
clc
imul
fucom
ja
mov
icebp
pop
cmp
push
mov
mov
aaa
popf
mov
imul
jae
jecxz
je
and
gs
mov
cmc
xor
push
das
or
mov
cmc
xchg
roll
jp
inc
mov
sahf
jmp
add
mov
mov
jmp
jecxz
mov
mov
sbb
rcrl
cmpsl
mov
imulb
xchg
addr16
stos
cld
popf
pushf
xchg
lret
fidivl
add
mov
int
lea
jae
jno
xchg
xor
or
fstps
ret
add
push
orl
sbb
push
mov
add
mov
movsb
push
jbe
adc
pusha
lret
mov
jmp
pop
xchg
leave
jecxz
xchg
scas
dec
pusha
jecxz
testl
mov
pushf
ds
sub
or
aam
fwait
jmp
mov
out
pop
imul
jnp
jnp
sbb
sbb
clc
xor
dec
xchg
jns
insb
aaa
lret
dec
sbb
popf
orl
test
and
add
dec
inc
pop
push
lret
testl
inc
mov
je
rol
in
mov
nop
mov
dec
fcoms
shl
movl
fnstcw
cmp
or
cmp
dec
iret
xor
js
lods
cmc
lret
nop
stos
shrl
mov
lret
inc
jmp
mov
loope
movsl
push
jl
sbb
stos
inc
inc
cmp
adc
stos
loopne
cmp
fistl
cmp
mov
mov
loopne
sub
pop
inc
pop
pusha
jp
mov
mov
daa
push
mov
ret
inc
shll
fcmovnbe
xchg
mov
stc
fsts
xor
fstl
and
rcrl
in
mov
mov
xchg
cltd
test
cmpsb
int
int3
bound
dec
inc
and
cmp
or
cmp
xchg
sub
xchg
out
loope
dec
movsb
inc
mov
repnz
and
mov
test
fwait
mov
jmp
jecxz
movsl
mov
mov
sub
pushf
jg
negb
adc
cwtl
sti
push
daa
nop
push
lcall
mov
sub
cmc
sbb
xor
pushf
addr16
mov
or
cmp
adc
lcall
cmp
fcoml
sbb
add
cltd
lds
arpl
repnz
fstps
mov
ds
dec
push
mov
sub
iret
inc
add
rol
and
fmuls
adc
aas
call
mov
mov
pop
mov
gs
mov
inc
cltd
enter
push
movsl
fdivr
sbb
pop
add
cltd
cmp
test
js
test
or
aas
lea
ss
pop
sbb
ljmp
sti
pop
es
fimuls
jnp
mov
mov
sub
add
int
nop
pop
stos
push
lods
xchg
sub
adc
leave
push
push
clc
stos
ss
dec
push
dec
push
dec
shl
lods
movb
loope
in
sub
pop
movsl
outsb
xchg
mov
lods
push
movsb
lret
pushf
test
pop
push
fistl
movsb
pushf
inc
jnp
js
lcall
xor
add
out
out
jo
enter
jmp
rclb
andb
dec
mov
and
jns
push
hlt
fiadds
mov
mov
pop
mov
gs
outsl
aad
xor
pop
sbb
add
andb
js
sbb
sahf
dec
sub
fbstp
loope
idivb
pop
adc
call
shr
lret
mov
repz
or
sbb
mov
cltd
jo
fcomps
je
cmp
pop
pushf
dec
test
pop
pushf
jmp
lds
push
clc
stos
bnd
push
test
scas
mov
fldl
xor
imul
clc
xchg
cmpsb
xchg
callw
jl
sbb
mov
movsl
sbb
mov
and
cmp
mov
and
sbbb
jle
stos
fstp
sti
push
lahf
mov
sub
xchg
mov
inc
sbb
fs
cmpsl
and
addr16
or
les
and
sub
popf
mov
dec
push
cmp
jne
lea
into
adc
sub
xchg
push
adc
cmp
push
adc
movb
sub
mov
fwait
or
in
nop
call
cmp
add
ja
mov
lahf
lahf
lret
jecxz
imul
dec
cmp
inc
movsl
xchg
sub
pushf
ss
outsl
pop
aam
mov
and
push
nop
cmp
pop
mov
mov
add
scas
mov
xchg
fbld
jg
xchg
testb
out
cmc
fcoms
shlb
test
mov
lods
out
and
lock
loopne
cmp
jns
dec
inc
scas
fiaddl
inc
pushf
jae
mov
jmp
xchg
inc
xlat
cld
fwait
mov
mov
adc
or
xorl
rolb
movsb
dec
cmc
and
loope
and
push
fdivs
scas
push
test
insl
in
enter
xchg
enter
loope
fadds
fdivp
dec
xor
add
add
xor
xor
inc
adc
sub
and
fsubr
mov
cmc
mov
and
xor
roll
into
sub
dec
add
add
mov
cmp
jp
add
daa
dec
sbb
add
setl
js
divb
pusha
dec
sbb
test
test
inc
mov
or
stos
movsb
bound
push
cmp
xchg
mov
ficompl
mov
jns
mov
fildll
push
mov
lea
popf
sbb
mov
lods
dec
arpl
xchg
stc
fucomi
bnd
jno
fstl
js
nop
cwtl
pop
shr
testl
in
add
push
mov
cmpsb
pop
mov
inc
pop
push
sbb
daa
popf
jecxz
rcr
cmpsl
pop
xchg
call
mov
fldcw
mov
int3
pusha
xor
xchg
or
dec
sub
xor
mov
dec
mov
call
pop
cmp
push
adc
movsl
xchg
orl
pop
mov
xchg
and
stos
test
push
sbb
jl
cmpb
dec
popf
pop
pop
or
lret
pop
jp
mov
lret
or
arpl
mov
mov
enter
inc
cld
std
mov
add
ja
cmpsl
ss
inc
shlb
cmpsl
add
pushf
sbb
pop
pop
push
push
adc
fwait
sbb
fstps
lcall
std
pop
mov
or
mov
clc
jl
mov
addl
jmp
push
mov
xchg
cmc
mov
push
in
aas
lods
out
push
mov
xor
out
std
mov
scas
test
imul
xor
xchg
ret
add
xchg
push
repnz
adc
or
imul
adc
pop
adc
popf
movsl
fdivs
addb
mov
xor
add
hlt
shl
jecxz
push
xchg
xor
sbb
ja
inc
add
xchg
insb
and
fs
mov
xor
mov
dec
xor
cli
xchg
mov
fstps
pop
add
inc
jae
pop
into
pop
dec
bound
test
dec
xchg
xchg
in
jbe
jp
push
push
mov
or
mov
inc
jnp
shrb
sbb
shr
mov
inc
sti
jmp
lods
pusha
ret
out
test
loop
das
cmpsl
xlat
lds
inc
sarb
pushl
adc
inc
xchg
pop
mov
push
sahf
cli
xlat
insb
jbe
cmp
addb
mov
mov
fcmovb
fs
int
frstor
add
xor
sub
cmp
mov
jne
mov
mov
popf
ja
inc
mov
rclb
jae
ret
cmp
lods
mov
cpuid
scas
mov
popa
sahf
mov
adc
or
cs
cmp
dec
xor
mov
pop
or
jle
mov
push
mov
subb
cmp
outsb
push
mov
and
xor
adc
dec
mov
xor
dec
xor
sub
dec
mov
jne
pop
xor
and
dec
mov
mov
outsl
cmp
mov
pop
dec
mov
cmc
cld
jg
inc
inc
xor
adc
pop
add
inc
mov
xor
invd
inc
inc
xor
inc
inc
mov
je
pop
adc
xor
xchg
dec
daa
adc
inc
mov
mov
das
sbb
mov
dec
cmpsl
ror
in
cmp
es
fs
mov
push
push
lods
xlat
insb
jbe
mov
jo
pop
ds
xchg
int
je
pop
mov
js
pop
aas
cmpsl
xlat
in
idivl
mov
inc
pusha
push
cmp
or
mov
dec
fs
cmp
push
mov
push
push
dec
fs
sub
cmc
sbb
push
out
lods
sti
pop
sar
pop
bound
test
mov
mov
sbb
cltd
out
adc
mov
add
das
fcompl
push
xor
ret
mov
fdivl
mov
fwait
leave
outsl
xor
mov
xchg
rcll
xchg
aas
fs
adc
push
mov
xchg
mov
stc
mov
jmp
std
mov
sti
and
movsl
test
test
dec
push
or
xlat
fnstcw
fdivs
mov
mov
imul
mov
das
push
xchg
addl
and
pop
rcrl
leave
lcall
adc
rcrl
aad
push
repz
sbbb
mov
pushf
dec
xchg
sbb
cltd
lret
lcall
sbb
hlt
loopne
test
ficomps
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
stos
stos
inc
lcall
cmp
lods
push
push
pop
call
jg
mov
mov
fwait
leave
cmc
and
add
sti
insb
inc
ret
sbb
mov
jge
fisttpl
in
mov
jnp
inc
push
mov
or
mov
mov
fsubs
insl
jecxz
or
dec
sbb
jne
jecxz
mov
adc
jp
dec
mov
sbb
sub
out
jle
cwtl
push
fisubrs
out
aad
mov
pop
dec
hlt
or
dec
inc
mov
xchg
ja
mov
or
mov
inc
lcall
pop
mov
dec
sbb
xlat
orb
sub
sbbb
cmp
dec
in
mov
xor
push
pop
stos
push
and
in
cmpsl
stos
sbb
mov
lahf
cli
pusha
cmc
xchg
push
xchg
repz
ljmp
push
cmp
lret
lahf
xchg
stos
arpl
sbb
push
sub
sti
gs
outsb
les
adc
pop
in
loop
sbb
dec
lret
jp
xor
xchg
pushl
stos
mov
sub
mov
mov
dec
mov
dec
mov
push
sub
bound
imul
mov
inc
mov
xchg
pop
pop
fsubrs
mov
jae
and
stos
je
pop
push
cmpb
xchg
sub
xor
int
dec
dec
rolb
out
int3
sbb
movsl
and
sti
and
aam
std
fstl
add
push
jmp
shl
fadd
pusha
hlt
add
das
pusha
test
fnstsw
inc
sbb
addr16
xchg
jo
cmc
repnz
sbbb
jne
les
movsb
shrb
mov
out
mov
test
jns
dec
dec
pop
mulb
cmpsl
and
cmp
or
nop
pop
xchg
add
pop
mov
fistl
outsl
or
cmpsl
push
insb
ja
xor
jno
les
lahf
lods
in
adc
cli
jnp
inc
mov
mov
add
or
xor
call
adc
sbb
stc
xor
xor
or
test
aad
pop
xchg
and
fdivrl
imul
insl
outsw
push
adcl
ret
mov
enter
hlt
xor
and
mov
js
push
dec
lret
pop
pop
inc
shll
out
mov
add
mov
lret
imul
fistpl
div
clc
sti
and
sbb
lret
jecxz
insl
cltd
rcrb
lods
jo
push
repnz
inc
sbb
arpl
adc
iret
fld
jg
adc
stos
test
jp
stc
movsb
push
clc
sub
mov
mov
mov
sahf
das
xchg
stc
cli
in
test
or
shlb
sub
lds
jne
add
dec
jns
mov
shl
inc
into
aam
jge
pop
xor
cmp
push
mov
jmp
in
rorb
add
add
pushl
or
jns
fimull
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
std
mov
push
or
inc
bound
out
mov
fnstenv
xor
mov
dec
and
jp
adc
jne
mov
mov
xor
cmp
and
mov
test
add
in
and
fstpl
adc
push
pop
mov
hlt
sub
push
pop
push
sbb
inc
pop
and
mov
pop
xor
jge
lds
xor
mov
jecxz
mov
test
jmp
shll
dec
mov
cmp
or
in
mov
xchg
push
ficoml
outsl
les
sti
shlb
mov
jmp
pop
xor
lds
inc
pushf
rorb
pushf
sahf
xchg
mov
leave
lods
cmc
xor
icebp
and
inc
cmp
icebp
xchg
iret
sub
in
jge
sbb
xchg
adc
out
xchg
loope
js
or
in
insl
scas
addb
jle
enter
push
adc
adc
mov
fcmovnu
dec
addr16
sub
daa
jne
jnp
popf
xchg
cmc
hlt
fsubs
add
jmp
xchg
sbb
imul
xchg
xor
mov
cmp
jp
add
mov
lock
mov
cmc
cld
add
mov
pushf
inc
mov
mull
mov
add
les
cmp
lods
fcmovnu
ljmp
andl
nop
pushf
lds
inc
sbb
mov
push
add
rcrb
test
push
adc
fistl
popf
xor
jns
inc
leave
xchg
cmp
and
in
cs
fnstsw
xchg
sti
add
out
nop
inc
mov
add
mov
or
mov
dec
loope
or
loope
fwait
xor
lods
ret
punpckhwd
ret
and
cmp
imul
xchg
lea
shlb
sub
test
push
and
imul
ret
push
inc
or
ss
fninit
xchg
ret
repz
inc
cmpsl
divb
incb
decl
xor
mov
cmp
jp
add
and
dec
sbb
add
addr16
cs
inc
xor
dec
add
xchg
cmp
pop
stos
push
test
lock
shlb
push
in
dec
scas
cmp
xchg
dec
mov
xor
addr16
push
sbb
roll
mov
xchg
stos
jge
jnp
or
xchg
xchg
mov
adc
test
xor
shll
add
and
jg,pt
xlat
pushf
xor
add
ret
cmp
out
rolb
in
icebp
dec
shlb
icebp
push
cmc
int3
data16
pop
xchg
out
push
lret
push
pop
push
imul
push
fidivrs
arpl
decb
inc
cltd
enter
dec
inc
xor
sub
xchg
mov
fisubrs
xor
push
adc
xor
jns
sub
cwtl
add
jge
lds
addr16
mov
js
mov
aad
add
add
mov
jbe
mov
mov
jne
fs
movsl
mov
iret
dec
xor
mov
or
scas
shrl
leave
dec
sub
xchg
pop
stos
daa
mov
fisubl
dec
inc
and
inc
sbb
or
ss
shlb
push
scas
dec
add
push
mov
push
adc
ret
mov
sub
jmp
mov
leave
insl
xor
pop
lret
cmpsl
sbb
pushl
rcll
mov
aam
jns
sub
bound
imul
cmp
push
mov
fadd
call
sti
xor
mov
xor
xchg
or
leave
sbb
push
insl
jb
mov
fcomp
cmc
lret
cltd
js
or
sbb
cmp
mov
aam
mov
testl
out
scas
divl
inc
sbb
lret
and
pop
and
test
ret
and
mov
adc
add
sahf
jge
jmp
pop
jp
pusha
mov
lods
mov
push
mov
jmp
ljmp
lds
sbb
cltd
test
mov
add
mov
pop
test
lods
jne
enter
xchg
fucomi
repnz
fwait
leave
cmc
xor
sahf
mov
or
idiv
decl
and
push
lret
je
mov
into
xor
inc
xchg
imul
cmpsb
fsubs
fxch
jns
fs
in
popa
bound
xchg
aam
inc
gs
sub
sub
xor
and
inc
and
inc
push
lea
nop
call
pop
loope
in
movsb
inc
popa
or
ds
mov
jns
mov
add
insl
push
sub
pushf
ret
pop
mov
hlt
dec
shll
stos
les
stc
or
push
sub
lds
les
mov
sti
cli
pusha
std
mov
sbb
pmulhuw
mov
sbb
jae
or
lods
xchg
xor
mov
cmpsb
xor
jb
fisttpll
jns
dec
mov
pop
sub
add
pop
mov
cmc
xor
adc
sti
subl
lds
dec
cmp
repnz
push
dec
cmp
inc
repz
or
test
push
inc
or
stos
int3
push
insl
sti
insl
lea
cmp
push
int3
inc
fidivs
dec
push
or
ds
push
inc
mov
dec
ret
xorb
movsb
inc
out
sub
je
movsl
push
push
mov
dec
mov
hlt
xor
lock
fdivp
jnp
mov
add
imul
stos
icebp
pop
or
ljmp
sub
jge
enter
ret
test
push
sbb
jae
mov
inc
sar
cmp
out
xchg
int3
xor
or
cld
sbb
add
cmp
out
push
dec
test
add
sbb
xor
mov
add
sub
push
cwtl
mov
ret
rcll
aam
jns
lcall
faddl
push
repz
in
mov
mov
or
pop
fsubl
fmuls
mov
int3
es
add
lods
lahf
hlt
mov
test
cmpb
iret
mov
cltd
mov
xchg
int
jg
jns
ss
ror
pop
xchg
xchg
ja
dec
push
jae
xchg
mov
sbb
mov
add
lds
fdivrs
pop
push
mov
ja
sbb
andb
sahf
sbb
hlt
push
movsb
jmp
push
ja
fs
dec
mov
cmp
pop
sbb
add
nop
daa
sub
xchg
mov
pusha
stos
xchg
fimull
sbb
pushl
cld
lret
pushf
fstl
pop
xchg
js
add
jg
dec
in
mov
in
cmc
xor
adc
push
andl
test
lret
ret
rclb
ljmp
inc
push
mov
or
mov
aam
fdivrs
jp
call
push
or
lods
jp
xor
fwait
mov
mov
cwtl
cltd
add
cmpsl
imul
cmp
sub
popf
xchg
push
mov
sarb
cmp
pop
add
test
sbb
movsl
pop
adc
lods
cmp
loop
ret
xadd
xor
ficompl
in
sub
test
lcall
cs
lret
mov
and
pop
nop
cmpsb
lret
adc
cli
mov
xor
pop
in
mov
lret
fucomp
jae
jns
mov
popf
lret
xchg
xchg
sbb
pushf
mov
or
cmp
adc
sub
adc
gs
add
gs
lods
xor
bound
cli
cli
icebp
sbb
cmc
and
jge
mov
adc
mov
or
mov
out
in
xor
xchg
imul
out
fidivrl
pop
cmp
jge
jmp
lret
jge
mov
out
adc
cmp
mov
pop
cmp
sbb
js
test
or
mov
call
mov
xor
mov
in
lret
cmpsl
js
aas
jb
out
sbbl
dec
cltd
xor
hlt
xor
xor
imull
and
test
dec
lods
scas
mov
cmp
and
movsb
cmp
sub
add
je
cmp
test
arpl
sub
mov
pop
xchg
jbe
jbe,pn
mov
scas
jg
sbb
sbb
ss
in
and
add
adc
push
repnz
stos
and
lret
insb
xor
adcb
aad
pushf
cmpsb
sarb
pop
and
jne
outsl
or
orl
sbb
es
pop
inc
pop
xchg
xchg
sub
lods
enter
mov
inc
sub
xchg
ljmp
push
xchg
push
loope,pt
into
dec
in
mov
fisubrs
ret
inc
sub
rcrl
testb
inc
mov
fmull
lds
nop
clc
xor
shll
inc
lock
sub
stos
mov
dec
add
ret
cmp
pop
sub
cmp
mov
push
xchg
cmp
testb
sbb
pop
pop
mov
aad
mov
push
mov
mov
ficoms
sbb
adc
or
xor
idivl
mov
add
aas
push
ss
lods
ret
clc
jmp
fdivrl
sbb
inc
stos
cmp
lea
xchg
out
call
int3
pop
sub
dec
add
stos
add
hlt
cwtl
mov
jmp
sbb
jne
fnsave
mov
movsl
mov
ret
loopne
push
dec
cmp
clc
jp
add
sub
ret
mov
add
push
pushf
mov
fstpt
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
inc
pop
inc
test
jmp
push
pop
mov
fists
repz
adc
mov
pop
into
test
pop
sub
pushf
jo
push
add
lcall
lahf
sbb
movsb
push
sub
mov
pop
movsl
shl
jmp
mov
ret
shl
in
rclb
mov
mov
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
std
mov
push
or
inc
bound
out
mov
flds
mov
test
je
and
dec
inc
mov
jle
cmp
aaa
std
into
add
mov
imul
push
popf
mov
cmp
jp
add
sub
ret
mov
add
addr16
scas
xorl
les
nop
xlat
stos
test
fiaddl
mov
mov
cmc
stc
inc
and
dec
mov
incl
les
sbb
lret
push
shll
test
arpl
ljmp
les
xor
lds
jge
pop
xor
cwtl
leave
enter
lcall
jmp
mov
sub
loop
xchg
add
inc
mov
dec
fbld
or
sub
mov
insl
lahf
jle
or
pop
pop
fdivrl
mov
pop
dec
test
js
sbb
push
dec
sub
cs
jle
inc
rcl
jo
test
ljmp
sbb
shll
incl
xchg
fimuls
adc
pop
adc
ret
ret
lock
inc
sbb
outsb
add
mov
test
ss
cmp
loop
add
es
xor
sbb
decl
dec
xlat
test
push
cli
dec
sbb
lahf
sub
mov
fadd
mov
xchg
stc
cli
in
test
cmp
or
add
mov
outsb
lods
scas
jnp
pop
xor
fwait
adc
or
pop
test
lods
inc
sbb
scas
fildl
cmc
sbb
cmc
popa
scas
popa
or
mov
addl
cld
popl
fwait
fwait
outsl
lds
sbb
cmp
mov
in
jmp
movsl
jecxz
mov
sti
sti
and
test
dec
push
or
xlat
fnstcw
fdivs
mov
mov
imul
mov
popa
push
addb
ret
loopne
pop
adc
fistpll
mov
div
js
cmp
pop
dec
jo
cmp
std
dec
inc
pop
sbb
or
cs
loopne
int3
addr16
hlt
das
shll
cli
movsl
lret
push
and
test
and
xor
out
jae
fisttpl
add
in
jns
cmpsl
xchg
test
mov
mov
sbb
mov
cmpsb
xor
jb
xchg
pop
mov
xor
inc
xor
cwtl
dec
enter
lcall
jmp
mov
sub
loop
xchg
add
inc
mov
test
dec
lods
push
jmp
mov
aam
jbe
mov
in
out
test
fwait
pop
pop
into
cmpsb
inc
cltd
enter
in
add
sbb
add
andb
js
sbb
popf
or
dec
sahf
dec
mov
xchg
ficoml
cmp
ret
loopne
mov
jns
sbb
insb
mov
mov
cltd
je
pop
dec
mov
aas
loop
test
sbbb
cmp
cmp
rcrb
ret
push
ljmp
stos
bnd
mov
pop
scas
mov
fisttpll
ss
sti
stc
cli
in
test
cmp
int
add
mov
outsl
lods
mov
fisubrl
mov
mov
sub
js
shrb
cltd
push
adc
jge
xchg
cld
sub
sbb
out
js
inc
mov
pop
notl
mov
dec
ds
shrb
sbb
inc
or
and
push
pop
repz
xchg
jg
js
pusha
jo
xchg
ds
jb
fwait
outsl
push
dec
aad
jnp
inc
mov
popa
lret
test
adc
cltd
jae
fsubr
sbb
add
jmp
into
or
les
loopne
andb
lret
call
fildll
sbb
pop
rcrb
hlt
es
stc
add
iret
cmp
loop
cmp
push
xor
ja
push
ret
xchg
xchg
ja
xchg
cmp
push
dec
dec
mov
mov
mov
ret
pop
sub
lods
jo
or
adc
jbe
nop
lret
add
pop
pop
push
jno
mov
xchg
dec
push
ret
cld
sub
and
push
nop
or
scas
inc
xchg
ljmp
lret
and
sbb
add
pop
test
incl
popa
cwtl
jle
das
push
test
movsb
in
cmpsb
fsubrs
jmp
sbb
idiv
les
fisttpll
mov
xrelease
es
or
add
mov
jne
enter
push
sbb
gs
add
cwtl
dec
and
mov
mov
test
add
in
and
cmc
sbb
add
mov
imul
adc
mov
sbb
cwtl
pop
repnz
aas
xchg
icebp
negb
repnz
push
dec
stc
lret
movsb
xchg
test
mov
das
mov
sti
cli
movsb
testb
lahf
dec
loopne
dec
jecxz
xchg
bound
nop
ret
add
idivb
iret
ja
aad
pop
movsl
adc
mov
mov
in
sub
out
jmp
shl
test
shl
jmp
fsub
pop
sub
sub
sub
int
xchg
mov
cmp
imul
jo
mov
cmc
fwait
movsb
mov
test
cmpsl
lock
lahf
cmpsb
xor
jmp
mov
cmc
test
addl
dec
mov
lea
cmp
sbb
out
movsb
repz
ret
mov
test
clc
int3
mov
mov
sub
mov
add
add
mov
sub
fsubrl
pop
imul
lahf
or
decl
into
popf
lods
fsts
sub
adc
jg
icebp
lahf
mov
in
pop
or
or
stc
mov
cmpsb
xor
jb
loopne
sbb
out
and
sbbb
pop
divl
mov
mov
adcl
stos
arpl
dec
pop
notl
jbe
push
fsubrs
sbb
mov
pop
xchg
imul
mov
jns
call
jnp
test
jb
jl
mov
popf
iret
and
cmpsl
je
clc
pop
inc
gs
dec
push
outsb
xchg
and
mov
xchg
cmp
xor
sbb
out
movsb
repz
ret
mov
test
sbb
in
imul
movsb
adc
orl
mov
idivb
jnp
in
icebp
fucompp
jns
xlat
stos
dec
sahf
mov
lret
lahf
sub
mov
std
int3
stc
or
lods
pop
sar
pop
or
les
dec
les
add
xchg
pop
lret
fistl
addr16
jb
fcoml
incb
mov
nop
mov
cld
arpl
xchg
pop
pop
xchg
loopne
mov
adc
add
lea
int
dec
sub
cmpsb
xchg
insb
jbe
mov
orb
mov
fwait
pop
and
cmpsb
inc
leave
jne
adcl
pop
out
and
pop
adc
mov
ljmp
cmp
repnz
pop
das
or
jbe
mov
sub
fisttpl
or
je
imul
mov
aas
fidivs
gs
dec
aaa
sbb
dec
popa
or
or
loop
add
push
dec
or
mov
add
lret
mov
mov
test
lcall
cld
sahf
fnstenv
cld
test
lcall
pop
pop
or
mov
xchg
adc
xchg
jg
cmpsl
push
push
test
jl
rcll
pushf
push
pop
push
sub
mov
cmp
in
sbb
stc
insl
cmc
cltd
jl
aas
mov
add
mov
adc
mov
out
jp
adc
rcr
pop
jp
cwtl
push
ret
push
addb
stos
cmp
inc
lea
mov
out
call
push
je
test
dec
or
cwtl
mov
loopne
aad
fnstenv
add
lods
pop
inc
sahf
rcl
xchg
sar
iret
fucomip
sbb
aas
in
mov
incl
add
test
hlt
movsb
and
stc
add
iret
cmp
loop
mov
mov
add
jnp
js
shrl
fsts
push
lret
fucomp
jae
push
sub
imul
lcall
xor
push
out
cltd
or
lcall
fcompl
push
xor
ret
mov
fsubrl
adc
fists
jno
jb
addps
adc
inc
sarb
jae
or
test
rcll
je
cmp
xor
mov
cmp
jb
fcmovnbe
sbb
and
or
loopne
je
or
sub
es
enter
mov
sbb
or
xor
and
mov
rcrl
js
lock
and
adc
jno
xchg
aas
mov
mov
xchg
inc
movsl
xchg
sub
pushf
ss
dec
or
dec
pushf
dec
and
push
nop
xor
pop
mov
mov
add
scas
mov
xchg
fbld
inc
fcmovu
xchg
mov
bound
or
xchg
dec
data16
mov
mov
adc
addr16
jbe
lea
or
sub
or
rcrl
mov
jg
xor
mov
sbb
adc
mov
lock
cwtl
hlt
mov
push
or
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
cmpsb
cli
call
fwait
mov
stos
xchg
out
mov
cmovno
xchg
test
mov
xchg
push
dec
mov
imul
test
movsl
mov
pop
push
mov
into
sbb
loopne
sti
mov
sub
cmp
mov
sub
pushf
ss
imul
rclb
sub
dec
xchg
cli
mov
xor
pop
in
mov
lret
fucomp
jae
fcmovne
pop
mov
pop
sub
mov
outsb
fsubrs
test
mov
mov
stos
popf
lock
repz
fldt
jmp
xchg
xchg
jp
mov
mov
mov
loop
or
push
cmp
adc
lea
mov
enter
mov
aam
sti
fwait
xor
orl
inc
pop
out
sub
xchg
inc
jmp
popf
stos
mov
xor
pop
cwtl
xchg
xor
or
mov
lret
dec
mov
cltd
cmp
mov
idivb
shll
mov
loopne
mov
lcall
and
cmpsb
jg
add
sub
lds
cmc
adc
mov
outsb
xor
test
insb
test
xor
jne
test
sub
pop
jp
pusha
mov
lods
mov
push
in
in
inc
mov
or
cmp
adc
jp
sub
or
iret
sub
ret
xchg
jbe
fstl
cmpsl
dec
push
mov
and
inc
fwait
leave
loop
sub
es
clc
xor
adc
xor
fcomps
dec
aam
lcall
out
clc
mov
mov
aad
pop
shrb
lret
xchg
push
divb
pop
fisubs
gs
dec
pop
mov
cwtl
xchg
enter
sbb
dec
popf
mov
sub
js
test
xor
sbb
in
movsb
repz
ret
mov
test
jmp
sbb
mov
mov
mov
adc
jge
mov
scas
and
mov
test
add
ficoml
sbb
dec
sahf
mov
dec
sbb
dec
push
add
fcmovne
push
inc
push
pushf
pop
mov
insl
dec
mov
lret
jg
push
cmc
add
in
dec
cmpsl
push
push
std
xor
adc
jnp
shrb
lret
push
mov
test
pushf
jne
jnp
inc
mov
push
inc
sbbl
push
dec
mov
jno
leave
mov
loopne
call
push
sub
jae
fistps
xor
es
std
cmp
pop
into
sbb
push
or
daa
dec
push
or
xor
je
nop
and
mov
shlb
fdivs
xor
mov
shrl
inc
xor
scas
in
mov
inc
mov
mov
lock
xchg
gs
nop
jl
data16
adcl
mov
outsl
adc
stos
and
in
dec
mov
fsubrl
xchg
pop
adc
and
lock
mov
cltd
outsb
push
mov
scas
add
and
hlt
cmp
int
pushf
push
pop
test
add
xchg
ds
scas
jg
pushf
ja
mov
cli
jnp
inc
mov
push
inc
sbbl
push
dec
mov
jno
leave
mov
push
in
xchg
rol
pop
test
mov
out
inc
stos
pop
mov
es
ljmp
enter
push
or
mov
sbb
in
imul
mov
dec
xchg
cmpsl
inc
mov
jbe
mov
in
push
frstor
pop
add
fwait
jecxz
jns
into
mov
add
cmp
dec
aad
dec
popa
sahf
lock
cld
jg
inc
mov
nop
pop
xchg
addr16
add
cmpsl
mov
outsl
adc
mov
test
test
mov
xor
icebp
stc
inc
pop
dec
push
or
pushf
xor
test
mov
repnz
mov
mov
cmp
imulb
fs
stos
jno
or
sub
lcall
lahf
push
adc
fsts
jl
stc
and
mov
or
sub
in
sbb
aam
add
dec
notb
push
fdivs
xlat
push
fisubl
fbld
in
dec
mov
mov
popf
iret
sbb
jle
insb
aaa
es
or
add
mov
jne
push
ss
xchg
cmp
xor
sbb
xchg
movsb
repz
ret
mov
test
clc
int3
mov
mov
sub
mov
sbb
subb
insl
cwtl
mov
fsubrl
fisttpll
jg
sbb
mov
and
test
push
dec
adc
dec
xor
mov
cld
in
popf
in
mov
sbb
and
mov
push
or
jl
rorl
dec
mov
cwtl
mov
fisubrl
stos
xor
xor
cwtl
in
xor
test
and
mov
or
lock
cwtl
xor
lret
xchg
xchg
sub
mov
rcrb
push
out
xor
inc
stos
cmp
pop
fldenv
pop
jle
popf
iret
sbb
add
add
adc
cmp
mov
pop
cmp
sbb
js
test
or
aas
lea
ss
shlb
ret
push
ret
call
js
addr16
add
das
jbe
add
je
shll
shlb
adc
mov
nop
pop
stos
push
lods
xchg
sub
adc
adc
shll
inc
lock
xchg
mov
jmp
xchg
mov
stos
adc
sbb
ret
add
sbb
xor
fisubrl
sahf
or
mov
fidivrl
or
mov
adc
jbe
lahf
inc
jge
or
pop
movl
mov
icebp
add
mov
dec
aam
xchg
mov
mov
cmpsl
adc
mov
lret
in
mov
mov
cmp
cli
xor
xchg
inc
cltd
enter
mov
pop
cmp
enter
xchg
xor
dec
arpl
mov
int
pop
repnz
dec
mov
dec
sahf
dec
mov
cmpsl
scas
mov
imul
pop
loopne
dec
sbb
in
mov
pusha
shrb
cmp
sub
shll
loope
cld
jg
imulb
push
mulb
cmp
push
dec
cmpsb
ja
push
ret
xchg
bnd
inc
popa
fstl
cld
std
movsl
push
dec
mov
in
adc
sub
mov
sbb
sbbb
out
add
mov
cmpsb
xor
jb
loopne
sbb
and
sbbb
jle
mov
js
in
movsb
lahf
mov
sub
xchg
sbb
jb
shrl
pop
mov
sbb
push
and
movsl
jp
mov
push
lret
xchg
and
mov
popa
xchg
dec
lods
xor
xor
loopne
hlt
push
sbb
inc
inc
xchg
movsl
inc
lock
jl
dec
mov
daa
adc
lret
sbb
fstps
pop
stos
shll
aas
mov
cmp
mov
arpl
jecxz
xor
sbb
test
lcall
cltd
and
mov
mov
pusha
jg
sbb
vandnps
and
inc
lret
push
inc
mov
negl
fs
jne
ss
sti
stc
cli
in
test
pop
xor
test
inc
sahf
cmp
mov
cmpsb
xor
jb
xchg
pop
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
push
inc
sbbl
push
dec
mov
test
adc
test
mov
ljmp
popf
jnp
xor
push
gs
scas
inc
push
call
mov
out
mov
dec
xchg
mov
cltd
and
and
fsubr
mov
cmc
mov
es
mov
cmp
and
mov
test
xor
mov
lret
jecxz
push
cwtl
mov
mov
mov
and
cmpsl
mov
nop
pop
sbb
cltd
mov
pushf
dec
xor
popf
dec
mov
mov
loop
leave
pop
fildll
xchg
cmp
in
mov
push
sbb
cmp
jl
inc
scas
movsb
xor
mov
cmpsb
xor
jb
loopne
sbb
and
sbbb
jle
mov
js
in
movsb
lahf
mov
sub
xchg
cmp
and
adc
adcb
adc
sbb
mov
xchg
mov
stos
test
pop
sahf
cmpsb
enter
cmp
fwait
lea
xor
andb
cmp
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
aam
mov
mov
xor
mov
cmp
test
fnsave
cs
add
lods
dec
sbb
add
cwtl
dec
and
xchg
punpcklbw
sbb
vandnps
and
mov
mov
idivl
cmc
mov
lret
or
adc
test
mov
sbb
pop
dec
sub
fsubrs
sbb
leave
or
xchg
xor
dec
nop
jp
lods
pop
mov
in
or
repz
rclb
sarb
clc
mov
cmpsb
call
les
xchg
jns
fimull
push
mov
cmp
xchg
nop
nop
inc
sbb
cmp
fld1
jb
mov
xchg
dec
mov
cmpsl
or
jecxz
mov
dec
lds
xor
xlat
adc
or
pop
stos
shr
repz
or
daa
pop
mov
in
roll
mov
ret
mov
adc
jae
add
insl
mov
and
hlt
cs
testb
mov
add
jno
vminss
xchg
pushf
pop
scas
mov
sti
fisubl
push
dec
mov
ret
jae
pop
test
les
cmp
rorl
fsts
aas
das
or
ljmp
fnstcw
sbb
pop
test
sbb
jmp
mov
mov
dec
cld
inc
cmp
push
dec
out
loop
or
int
or
lahf
xor
sbb
push
mov
push
pop
adc
out
jns
pusha
jo
ret
mov
mov
aas
mov
popf
iret
sbb
mov
xchg
or
loopne
mov
hlt
jl
pop
mov
daa
adc
mov
fidivl
lods
xchg
pop
or
imul
divl
lahf
pusha
xor
jnp
mov
aaa
mov
pop
dec
rorb
shlb
lock
addr16
add
mov
sbb
mov
leave
insb
push
int3
mov
cmc
mov
lret
jnp
push
popl
bound
push
cmp
outsb
push
int3
pop
cmp
lcall
inc
popa
lock
ficomps
xchg
mov
xor
cmp
stos
xor
xor
pop
js
xchg
cmpsl
xchg
ss
in
test
rclb
mov
adcl
pop
repnz
and
mov
pop
fistpl
add
leave
xchg
xchg
fisubs
xchg
cmp
lahf
insl
mov
mov
lea
cmp
in
in
sub
add
xchg
cmp
orb
aaa
fidivrl
gs
inc
xor
or
call
fidivs
lar
xor
mov
push
lock
stos
mov
pop
ret
xchg
fnsave
xor
fxch
push
test
adc
push
mov
xor
popf
lret
insl
cltd
push
cmp
or
jge
push
jne
test
ja
gs
rcl
lcall
dec
push
inc
inc
mov
mov
jmp
das
fdiv
and
ds
jge
pop
inc
sarb
inc
inc
cmp
cmpsb
ds
xchg
jecxz
mov
cmpsl
sbb
mov
lret
in
mov
mov
or
pop
fdivrl
aas
cltd
enter
push
push
or
cli
aas
dec
pop
mov
or
mov
in
push
repnz
jae
adc
inc
lods
xchg
sbb
addr16
mov
and
div
sti
hlt
mov
add
add
lds
or
ljmp
xchg
mov
mov
mov
lahf
mov
stos
les
pop
stos
lds
cli
movsb
leave
test
aas
aaa
jae
sbb
sbb
cli
in
test
cmp
mov
add
mov
outsl
lods
mov
fisubrl
mov
mov
sub
daa
shrb
cltd
popf
sahf
mov
into
lods
pop
testl
pop
les
stc
and
mov
inc
je
mov
mov
dec
dec
and
imul
mov
sub
cmp
mov
cmp
mov
in
sti
mov
ret
mov
je
sti
insb
aaa
sbb
nop
dec
push
or
xchg
sub
dec
mov
popa
mov
rol
sti
or
sbb
or
int
jns
pop
adc
fstpl
iret
fucomip
repz
icebp
push
rclb
xchg
sub
pushf
addl
push
cwtl
shufps
arpl
sbb
and
lds
popf
lods
jmp
push
idivl
fs
subl
fcomps
add
fdivl
pop
push
dec
push
sub
and
testl
scas
dec
fs
jno
jb
adc
jbe
jmp
cmpsl
ficoms
jg
xor
mov
icebp
xor
adc
stos
subl
xchg
adc
dec
mov
push
in
or
adcl
mov
cmp
inc
sbb
or
cmp
mov
call
mov
shl
mov
cwtl
cwtl
cmpsl
sbb
sub
mov
lea
pop
jp
push
xchg
int3
sbb
in
daa
mov
les
loope
fildl
add
mov
aad
cld
es
jmp
cmc
popf
mov
jp
insl
mov
lcall
push
sbb
scas
dec
xor
rorl
lret
movsb
dec
mov
push
dec
into
sbb
pushf
repz
cli
pushf
dec
pop
test
test
jl
sbb
cli
insl
mov
outsl
mulb
aad
fs
cmp
mov
push
adc
fsub
jmp
lcall
es
sub
mov
imul
inc
adc
repnz
je
mov
jns
or
out
mov
rcrl
xchg
flds
cmp
mov
adc
xchg
in
or
add
mov
and
std
xchg
mov
mov
shlb
mov
jge
or
lahf
jg
pop
sahf
mov
dec
sti
test
push
sahf
cmp
test
push
in
jp
mov
movsl
mov
aad
add
movsb
xlat
pushf
mov
inc
sbb
xor
dec
bound
fsubrl
lret
mov
push
jns
mov
sbb
andl
pop
jno
test
aas
cmp
inc
aas
xor
cli
dec
test
std
sub
dec
jnp
inc
jecxz
push
mov
jnp
movsl
cmp
and
mov
test
adc
cmpsl
xlat
in
addl
mov
sbb
mov
push
out
adc
fstl
cmp
mov
hlt
fdivr
lret
push
insl
loope
lcall
cmpsl
jae
clc
mov
xor
xor
je
clc
dec
add
mov
push
sub
cs
cmc
fcompl
pop
roll
add
in
push
fstpl
add
xchg
sbb
mov
hlt
jge
pop
dec
aaa
add
add
mov
mov
movsl
sbb
and
pinsrw
sti
push
dec
xor
jns
test
jnp
dec
call
test
pop
es
int3
cmp
sbb
pop
push
add
pop
jne
enter
dec
stos
xchg
fimull
sbb
jne
mov
fcoml
xor
sub
mov
in
xchg
pusha
push
cmp
or
push
pop
ss
pop
je
in
idivl
clc
je
std
pushl
fwait
adcl
fucomp
push
adc
inc
lods
mov
test
pop
cmp
inc
insb
mov
fwait
pop
mov
and
mov
mov
dec
inc
mov
sub
sbb
inc
cwtl
cwtl
adc
inc
jge
imul
sbb
xchg
divb
jg
mov
jns
rcrl
add
mov
cmp
cmp
dec
jo
push
repnz
inc
add
int3
adc
movsb
adcl
push
lods
push
adc
xor
mov
mov
dec
and
mov
adc
insb
push
jl
cmp
mov
subl
push
shrl
push
mov
dec
fs
jle
leave
test
push
fsubrl
cmp
lods
fbstp
mov
jmp
inc
loopne
mov
mov
add
test
and
lret
nop
add
adc
push
mov
outsb
and
fld1
gs
jb
mov
fdivp
enter
insb
aaa
and
aam
fstpt
dec
pop
jne
or
push
orb
inc
int3
xchg
popf
push
sub
xor
mov
roll
xor
mov
mov
fs
jnp
mov
aaa
mov
les
add
orb
insl
cmpsl
xlat
popf
pop
insb
mov
xor
xlat
imul
sub
cmpsb
lahf
inc
jmp
or
pushf
mov
xchg
leave
xchg
cmp
or
jg
push
call
cld
sub
mov
mov
fcompl
jbe
sub
ja
cmp
jg
mov
pop
xlat
lahf
mov
cwtl
lcall
inc
mov
mov
sub
pop
mov
push
popf
pop
cmp
push
call
push
lods
mov
pop
cmp
lods
inc
adc
xchg
push
jge
imul
je
orb
ds
dec
inc
mov
jne
fisttpl
jne
or
cmp
pop
int
icebp
cld
repnz
jne
mov
jns
data16
cmp
mov
inc
add
aad
or
mov
xchg
and
fdivs
pop
dec
jno
jp
sbb
ret
jbe
sbb
inc
lods
pop
and
movsb
push
repz
mov
push
dec
push
into
bound
cwtl
sbb
insl
mov
push
fstps
outsb
daa
sub
jmp
sbb
gs
fistl
add
mov
lahf
inc
pop
add
icebp
adc
push
aad
jle
idivl
adc
cmpsb
gs
pop
inc
test
and
and
inc
cmpsb
push
lods
stos
scas
cmpsb
gs
cmpsb
dec
js
jo
jnp
clc
popa
mov
jb
mov
lret
dec
inc
xor
fwait
inc
sub
mov
sbb
push
or
popa
mov
pop
pop
mov
sub
push
jp
push
fnsave
ds
aas
push
repz
add
bswap
pusha
xor
jnp
movsl
aam
sbb
mov
mov
cmc
add
inc
mov
adc
ret
sbb
add
add
dec
stos
adc
push
in
popf
sti
sahf
cltd
mov
mov
mov
xchg
test
mov
jno
lds
adcl
lock
jb
cmpsb
cmp
sbb
in
cmp
cmp
add
add
js
jmp
idivl
mov
ds
jo
rcr
clc
dec
sub
je
pop
stc
xor
fucomp
push
mov
pop
mov
pusha
jo
repz
popa
mov
jb
mov
dec
push
enter
test
dec
inc
mov
ds
xchg
sub
mov
and
mov
or
cmp
filds
mov
outsb
repz
sti
into
xchg
sbb
sub
sbb
cmp
jo
dec
in
ja
inc
mov
push
cmp
jg
pop
ret
xchg
int3
or
mov
femms
xor
sti
push
dec
xor
adc
and
dec
xor
in
mov
bound
push
cmp
or
nop
fisubrl
cltd
sub
push
dec
cmpsl
push
push
add
sbbb
jge
push
cmp
push
into
aaa
push
cmp
or
fnstenv
push
ja
jmp
rcrb
stos
arpl
inc
out
std
push
sti
push
and
dec
loopne
mov
fwait
jmp
add
jbe
cmp
pop
jge
pop
pusha
fs
jnp
fdivs
in
inc
xor
cmp
enter
shrl
aam
xor
xchg
movsb
mov
xlat
or
mov
cmp
or
imul
cmp
cmp
mov
and
test
sahf
sti
jns
mov
sbb
sub
and
dec
mov
push
dec
jb
lret
aad
lds
cmp
xor
xor
je
xchg
insb
push
cmp
mov
pop
mov
adc
lds
push
xchg
cmp
cmpsb
cmp
loop
inc
lahf
jb
inc
pusha
fiadds
iret
jmp
stc
jecxz
leave
sub
pop
clc
dec
cmp
popf
std
ds
mov
jo
ret
xchg
jg
sub
jp
leave
fsubs
dec
push
fst
cmp
mov
mov
cmp
test
je
xchg
xchg
inc
cltd
enter
push
and
les
imul
mov
neg
imul
hlt
stc
sub
cmpl
and
jne
xchg
lods
lea
add
xchg
div
jns
jl
mov
adc
inc
pop
adc
scas
out
popf
pushf
inc
test
push
or
mov
push
test
add
cmp
into
xor
jmp
mov
arpl
cmpsl
test
sbb
mov
mov
dec
cmpsl
push
push
xchg
cmp
fwait
lods
xchg
aam
xor
pop
push
mov
jp
fisttps
lcall
push
fcmovnu
cmp
sbbl
add
pop
test
ret
outsb
test
mov
in
inc
gs
mov
dec
out
pop
xchg
imul
std
test
outsl
movnti
out
in
and
cmp
add
sub
inc
mov
dec
sub
inc
shrb
and
cwtl
mov
addb
int3
sbb
in
cmpsl
lock
movsl
dec
cmp
aas
push
cmc
mov
mov
jge
or
and
inc
sbb
mov
lcall
dec
test
pop
aaa
loop
aad
dec
mov
and
lds
lods
jmp
lahf
sbb
repnz
negl
gs
mov
insl
inc
jae
shlb
sub
dec
xchg
roll
test
push
rcl
lcall
test
outsw
loopne
push
ret
adc
lahf
test
out
loopne
inc
mov
js
pop
xchg
add
mov
mov
fwait
push
dec
mov
test
dec
aam
stc
ficompl
push
pop
xchg
push
outsb
jp
fildl
lahf
inc
or
mov
insl
lea
sbb
ret
sbb
clc
in
xchg
cmp
incb
and
ss
sub
inc
shrb
and
cwtl
mov
addb
int3
fwait
mov
call
pop
cmp
iret
aas
push
mov
in
xchg
jge
or
and
inc
or
inc
movsl
xchg
sub
pushf
pop
jno
dec
inc
xchg
lret
movsl
mov
cli
cmpl
pop
add
pop
jbe
mov
orl
jae
fxch
cs
test
xor
cmp
or
cmp
adc
sub
add
cld
jp
add
or
lods
loopne
jbe
hlt
xchg
scas
popa
rorl
imul
jnp
inc
mov
push
inc
sbbl
push
dec
mov
repz
sub
jle
in
arpl
insl
loope
movsb
inc
sbb
fidivrl
xlat
int
cmp
dec
cmpsl
cltd
icebp
xor
lock
sub
sbb
popf
icebp
mov
lahf
enter
fildll
mov
insb
xor
lods
mov
mov
sub
je
push
dec
xor
frstor
mov
mov
xchg
roll
negb
adc
mov
sbb
out
mov
mov
insl
sahf
mov
test
movsb
push
cld
xor
loop
arpl
cli
fisttps
mov
jno
add
jl
ret
addl
lret
add
inc
sbb
das
jbe
sub
into
sub
pop
push
mov
mov
aad
stos
jge
pop
ret
loopne
dec
fistpll
xchg
pushf
cli
sti
cmpsl
test
in
in
pop
negl
pusha
sbb
mov
mov
repz
or
test
cltd
xor
dec
movsl
out
leave
movsb
inc
inc
fstl
adc
hlt
insb
mov
iret
cmc
shrb
sub
mov
shll
iret
cltd
repz
push
movsb
cmc
dec
call
int3
fwait
aas
addr16
in
push
fldl
insb
rclb
nop
outsb
icebp
clc
sti
xchg
lret
hlt
movsl
shrl
lds
test
sbb
loop
mov
dec
fmul
push
aad
imul
popf
cmp
dec
sbb
scas
pop
mov
sbb
mov
jno
jl
mov
adc
push
push
ss
lret
mov
dec
aad
mov
xlat
dec
test
in
add
inc
lret
cmp
adc
cmpsl
pop
push
mov
cmc
cmp
shll
push
aas
xchg
pop
jg
clc
lock
mov
or
test
rcrb
jbe
xchg
imul
sahf
xchg
mov
inc
dec
shrl
inc
xchg
rcll
ret
adc
enter
pop
push
or
inc
and
clc
lahf
cmp
inc
pop
mov
les
xchg
aad
jp
mov
push
movsl
mov
jnp
mov
mov
rcrl
adc
or
scas
es
bound
adc
aam
std
xchg
push
negb
inc
aad
push
push
les
lret
sbb
ss
iret
sub
inc
adc
jno
dec
xor
xchg
dec
retw
adc
in
sub
imul
test
mov
iret
fcoml
cmp
add
cmp
xor
fistl
add
jge
mov
add
mov
je
jle
xor
adc
outsb
add
stc
inc
or
pop
mov
lods
test
stc
insl
hlt
pop
cmp
xchg
imul
lahf
jle
or
call
cmp
int3
jno
xchg
push
adc
jp
daa
repnz
lahf
rclb
rolb
pushf
cmpsl
mov
subb
mov
pusha
stos
ret
pop
or
repz
mov
cmp
jp
add
push
adc
popf
add
lcall
in
fnclex
insl
movsl
aam
pop
mov
mov
aaa
stos
push
dec
push
mov
mov
inc
int
jae
jns
pushf
sbb
mov
sub
nop
dec
mov
mov
add
outsb
mov
adc
movsl
insl
fisttpl
push
jl
jecxz
mov
mov
subb
scas
mov
in
adc
push
push
mov
test
ret
sub
test
sbb
and
sahf
cltd
sbb
xchg
cmpsl
fdivs
test
and
add
fistpll
xor
mov
popf
xor
sub
pop
sub
xchg
xor
and
mov
fsubrs
test
aad
cwtl
movsb
lods
lea
add
repnz
or
mov
jno
or
cmp
or
pop
xchg
mov
ret
cmp
and
adc
cs
xor
mov
lahf
ljmp
mov
imul
or
shll
scas
sub
popf
ljmp
clc
add
or
leave
cmp
jae
fwait
in
fisubrl
fsubrs
cmp
mov
or
pop
xor
ret
lahf
movsl
pop
mov
push
cmc
adc
inc
sti
add
or
shlb
dec
dec
add
or
dec
mov
jmp
test
inc
adcl
pop
mov
int3
fwait
call
cmpsb
lds
push
test
mov
dec
mov
subl
imul
push
sbb
fs
orb
idivb
les
inc
mov
xor
ffreep
pop
sbb
clc
and
in
lret
insb
mov
mov
jle
cmp
test
push
and
js
aad
push
mov
sub
lods
pushf
pop
xchg
push
dec
sbb
and
dec
sbb
dec
fldenv
daa
shll
aas
mov
jae
js
les
jno
push
enter
lcall
inc
scas
xchg
push
xchg
pop
or
push
stos
add
fwait
xor
push
push
lret
mov
adc
cmpsl
pop
nop
jnp
mov
jae
dec
ss
fcoml
stc
and
or
int
xor
add
add
ss
loope
out
sbb
mov
mov
xor
mov
add
fsubl
jge
jb
mov
dec
dec
adc
cmp
fdiv
imul
loop
push
jbe
jno
jmp
mov
movsb
repnz
sbb
jmp
hlt
cmp
xchg
cli
pop
pop
add
ret
divl
push
sub
sbb
test
lcall
xorl
mov
and
push
nop
mov
test
fadds
in
mov
lret
fucomp
jae
out
jp
dec
rcr
mov
xchg
in
mov
inc
cmp
leave
or
cmp
push
sbb
pop
test
fstl
sbb
into
mov
enterw
mov
push
fsubrs
cmp
lret
lock
rorb
pop
mov
popl
rcrl
mov
test
push
mov
inc
gs
imul
sbb
lret
mov
mov
mov
add
mov
or
mov
mov
in
xlat
adc
int
mov
outsl
pop
stos
jae
pop
xchg
test
sbb
loopne
mov
xchg
fnstcw
jae
nop
sbb
aam
or
pop
dec
aaa
xor
mov
rorl
inc
pop
bound
pop
loop
neg
xor
jnp
fsubrl
enter
mov
push
sub
sbb
inc
mov
mov
fucomp
shll
xchg
rclb
cmpsl
jno
adc
test
mov
sbb
fwait
insl
mov
jnp
cmp
adc
mov
push
jno
xlat
jno
lret
icebp
leave
cmc
mov
jecxz
js
inc
std
adcl
fadds
js
and
inc
jnp
out
decl
stos
adc
fsubs
push
vmwrite
xchg
mov
mov
inc
ficompl
std
lea
int3
bound
and
mov
push
xchg
inc
aaa
mov
cs
mov
mov
das
xor
mov
lods
negl
add
je
popa
pop
mov
and
xchg
std
mov
jne
sbb
aaa
add
cmp
adcl
or
scas
and
xchg
dec
pushf
dec
sub
mov
lods
push
adc
mov
adc
adc
mov
push
mov
in
dec
add
js
mov
das
or
enter
jne
cwtl
pop
push
mov
inc
fnstcw
mov
mov
aaa
cmp
lahf
inc
std
pop
dec
test
jne
mov
add
pop
sub
bound
idiv
push
sti
sbb
rcr
mov
test
loopne
je
sbb
adc
jbe
les
rolb
fs
loope
jns
cwtl
dec
inc
hlt
xchg
jmp
ret
fs
or
hlt
jl
xchg
lcall
mov
cmp
or
stos
mov
or
mov
fstl
mov
hlt
vpunpckhdq
fistps
test
sub
push
sti
xchg
mulb
add
dec
fs
pop
inc
sub
pop
dec
pop
sub
add
adcb
test
pop
sbb
lods
and
adc
xchg
dec
sbb
dec
das
sarb
aaa
cmp
jae
les
or
adc
stos
out
xchg
dec
mov
push
pop
mov
sbb
jmp
popf
fucomip
sti
iret
pop
jo
cld
mov
fs
js
dec
pop
je
out
idivl
clc
jb
add
cmp
pop
and
mov
ljmp
arpl
push
mov
and
movsl
cli
jae
and
jmp
fwait
rcr
mov
sti
sti
and
sbb
jecxz
adc
inc
sub
dec
ret
push
inc
mov
sbb
mov
iret
add
inc
mov
lods
pop
sbb
add
jl
loopne
lahf
lret
in
shll
mov
mov
inc
sbb
leave
cmpb
lret
in
dec
push
jmp
lds
push
cli
stos
shlb
push
cmc
mov
stos
fs
mov
into
arpl
lds
cmp
icebp
pop
xorb
stos
jge
mov
rorl
sbb
mov
inc
mov
ffree
xchg
cmpsl
push
pop
pop
push
mov
loope
dec
inc
fucom
or
add
fdivs
add
imul
dec
sarb
xor
xor
push
mov
push
stos
icebp
mov
roll
mov
pop
fisubl
push
cltd
jmp
and
mov
test
push
pop
or
out
push
adc
inc
cmp
ret
push
adc
call
int
filds
arpl
fcompl
fsubrs
mov
lock
mov
movsl
add
jne
jns
int
inc
movb
lods
lds
jo
es
push
arpl
and
push
mov
je
lds
repnz
stos
push
test
cld
fisubs
push
lods
shl
test
enter
mov
sarb
jae
mov
jnp
aam
xchg
xchg
xlat
xchg
pop
out
jmp
fisttps
insl
inc
push
mov
mov
test
jo
and
jne
cld
and
out
sti
sub
push
mov
jo
sbb
je
jge
jns
pop
xchg
lock
sub
pop
mov
clc
push
fdivrl
and
cmp
cmp
popa
bound
je
xor
mov
ret
jl
xchg
movsl
out
mov
cmp
cmc
mov
rcrl
mov
lds
orb
mov
ret
decb
insl
xchg
rcr
mov
lock
sbb
adc
mov
insl
add
insl
lahf
ret
sbb
dec
cmpsb
push
test
mov
lock
push
inc
pop
daa
jae
jmp
shll
repnz
loope,pt
les
push
es
inc
sbb
push
repnz
arpl
jmp
out
mov
add
add
mov
push
popa
outsl
jg
dec
in
cmpsl
incl
enter
xchg
pop
int
popf
shrb
xchg
lods
push
mov
test
push
or
sub
mov
movsl
jl
dec
test
dec
push
mov
sbb
and
mov
lahf
sbb
jne
insl
popa
test
mov
dec
sahf
or
jne
fcoms
daa
popa
test
sub
in
into
daa
mov
mov
sbb
or
fld
je
pop
hlt
ret
ds
lahf
fadds
decl
xchg
push
sti
js
inc
lret
out
fwait
mov
or
scas
icebp
pop
sbb
out
clc
inc
sbb
subb
jmp
js
fwait
mov
dec
dec
sbb
jno
lods
lret
dec
push
les
xchg
xchg
xchg
imul
in
pop
sub
or
lds
shll
jns
mov
aad
inc
lahf
pop
add
sbb
ret
lret
mov
or
inc
xlat
fmull
repz
sbb
lods
adc
xor
std
fsubrs
pop
jmp
adcb
mov
mov
or
push
jns
dec
pop
push
jne
dec
jp
movsl
rcrl
fcomi
dec
jne
mov
call
loopne
aam
enter
jns
ret
jae
mov
cli
repz
adc
repnz
fcoml
jge
nop
je
loopne
std
xor
xor
addb
and
cmpsl
mov
and
pusha
or
sub
jo
adc
sbb
mov
dec
es
mov
mov
fucomp
rorl
outsb
scas
into
push
lret
push
pop
repz
sub
test
lcall
jnp
gs
xchg
outsb
ljmp
lock
add
add
clc
add
fmuls
clc
dec
dec
fs
in
mov
jmp
dec
test
out
rcrb
pop
loope
inc
xchg
cmpsl
or
mov
ficomps
jge
xchg
iret
cmpsb
mov
sarb
dec
pushf
mov
iret
rorb
jmp
jl
stos
ret
xor
cmp
incl
lahf
lds
xchg
test
rorl
lods
xor
xchg
out
push
push
fstpl
jp
sbb
inc
mov
out
daa
lret
sub
fdivs
lock
or
sbb
mov
popf
mov
fs
out
add
hlt
dec
sbb
add
mov
lret
lret
icebp
add
push
cmp
jae
lods
dec
jl
or
jge
stc
mov
cs
mov
and
lret
jb
jg
pop
icebp
cltd
mov
fldcw
fadd
rclb
addl
cmpsl
pcmpeqd
dec
shrb
sbb
or
mov
lret
es
jne
mov
inc
sbb
jno
insb
xlat
dec
pop
jl
enter
xor
jb
cwtl
fwait
imul
stos
push
out
inc
imul
push
fwait
xor
sarb
mov
aam
test
setae
mov
pop
fucomip
dec
inc
add
es
pop
flds
hlt
cmpsb
insl
inc
pop
push
shlb
loop
into
mov
cmp
es
sbb
nop
aad
mov
les
test
adc
push
in
scas
aad
xor
adc
push
add
ret
inc
adc
sbb
roll
push
loope
xlat
stos
std
cld
jns
sbb
call
jns
adc
dec
movsb
aad
xor
xor
pop
js
jg
xor
icebp
cmp
cmp
add
add
sub
or
xchg
pop
icebp
inc
rolb
dec
and
adc
mov
cmp
cmp
jae
popa
insl
in
outsl
push
lea
mov
push
adc
dec
mov
pusha
pop
sub
cmpsb
std
hlt
dec
mov
addb
fbstp
lret
pop
test
rcrb
push
sahf
jb
pop
or
iret
int
add
push
adc
xchg
inc
jecxz
mov
add
mov
inc
sbb
sahf
cld
iret
cmpsl
jg
negb
sub
xchg
lahf
jno
or
cs
imull
std
mov
push
push
sub
xchg
fstl
mov
and
gs
xor
and
add
ljmp
cmp
sub
xor
mov
dec
push
cs
cmp
sbb
scas
ja
enter
lds
imul
sbb
rclb
gs
xchg
cmp
repz
adc
pop
xchg
mov
xlat
insb
jbe
or
ja
nop
pop
insl
sbb
fucomi
hlt
std
mov
sti
and
sbb
jecxz
mov
rclb
fstl
push
adc
push
test
sbb
jp
lret
pop
mov
imul
jmp
out
lock
in
mov
loope
divb
int
inc
mov
or
dec
and
xor
insl
movsl
ret
sbb
add
test
mov
lret
mov
sbb
lock
sti
fucomp
jae
push
mov
lahf
popf
mov
xchg
mov
popa
inc
pop
addb
xor
dec
push
mov
xchg
stos
std
lock
movsl
imul
mov
aad
leave
jge
xchg
fucomi
repnz
orl
shl
jl
rcrb
pop
repz
push
adc
dec
adc
nop
jnp
test
dec
aam
jns
add
inc
stos
xchg
push
sub
fldl
lcall
cmpsb
jmp
mov
xor
imul
push
outsb
lds
addr16
adc
pop
mov
das
out
cmc
xor
pop
pop
push
xchg
movsl
repz
add
loopne
mov
lahf
pop
xchg
outsl
clc
jp
mov
mov
pop
mov
ret
mov
rorb
cli
sub
outsb
ret
sbb
adc
lods
pop
cld
stos
repnz
cmp
int
add
and
pop
test
lods
xchg
jge
insl
clc
and
xchg
add
sbb
fwait
inc
cmp
les
lds
mov
mov
popf
adc
mov
fucomi
loope
iret
jg
dec
fmull
jae
popf
nop
xchg
aas
push
mov
inc
aam
jo
mov
push
icebp
or
test
sbb
data16
push
fidivrl
repnz
fadds
out
js
sbb
pop
aas
out
cmp
cmp
jne
jge
dec
test
push
push
in
adc
sub
inc
push
adc
or
call
sbbb
push
popf
js
adc
inc
mov
xchg
ja
or
mov
jge
inc
ret
int3
xor
xor
test
test
lcall
fnstenv
lret
mov
and
pop
nop
stos
mov
xchg
cli
mov
xor
test
fs
fldt
mov
jo
push
fidivrs
call
xor
subl
cmp
fwait
adc
sub
lea
sbb
gs
mov
fucomip
ror
pop
xchg
xchg
adc
fwait
push
jo
adc
js
or
add
add
pop
xor
mov
cmp
call
jge
sub
fdivrp
fisubs
in
cmp
clc
xor
je,pt
fs
jae
or
int
pop
pop
mov
pop
mov
mov
or
jp
jmp
jne
lock
daa
fnop
out
mov
mov
push
pop
adc
jecxz
rorb
cli
pop
sub
push
jecxz
cli
xlat
push
pop
inc
ficomps
imul
push
dec
lret
movsl
clc
sub
sbb
stc
mov
jle
les
cltd
push
and
addb
xor
and
mov
xchg
lcall
mov
das
xchg
dec
cltd
and
jg
sahf
inc
pusha
mov
std
dec
popf
scas
inc
xchg
fwait
push
cmp
mov
out
xchg
sbb
in
aam
sbb
mov
xchg
cmc
mov
pop
push
lods
xlat
xchg
mov
sti
xor
vpshuflw
into
sbb
cwtl
dec
inc
push
push
sub
sub
orl
aad
js
das
or
add
cmp
out
dec
sbb
orb
inc
popf
add
lahf
sbb
inc
xchg
sbb
out
mov
je
test
sub
fldcw
scas
jmp
bnd
push
push
ljmp
lret
xchg
cld
cli
inc
and
pop
xchg
js
pushf
dec
wbinvd
test
test
outsb
push
popa
in
adc
or
dec
cmpsl
subl
sbb
aaa
fwait
lods
adc
fisubrs
add
jle
das
aaa
outsb
fcoml
and
sahf
out
adc
in
push
mov
enter
addr16
mov
test
popf
push
movsb
cmp
inc
fisubl
lahf
out
mov
cmp
enter
shrb
add
ret
add
fwait
push
sub
imul
dec
mov
xchg
lcall
mov
xor
add
inc
add
mov
pop
and
pxor
or
xchg
test
ret
test
dec
insb
lock
pop
imul
mov
in
push
inc
bnd
mov
fbld
dec
push
fbstp
pop
mov
mov
in
sub
mov
das
xchg
fisttpl
stos
xchg
stos
inc
negb
test
cmpsl
dec
push
shrb
test
fidivs
test
push
inc
sbb
or
mov
pop
popa
adc
inc
loop
jmp
not
or
xchg
xchg
dec
mov
cmp
lahf
vmovaps
aam
jp
sub
icebp
mov
fcmovb
fs
inc
outsb
enter
orl
cmc
outsl
mov
dec
inc
mov
xor
out
aad
inc
adc
xchg
pop
addl
call
mov
dec
jmp
mull
fisubrs
popf
dec
aaa
pop
sub
mov
cmp
jns
pop
scas
dec
push
xchg
int3
pop
imul
mov
push
fsubr
lods
push
dec
mov
mov
dec
inc
loopne
jae
push
int3
sub
bound
test
mov
test
ret
int
lcall
imulb
push
cmp
sub
cld
xor
in
in
jns
mov
and
cmp
popf
jbe
jl
stc
std
fscale
pop
aas
pop
xor
or
jmp
sti
xor
mov
add
push
call
lock
call
insl
inc
pop
jmp
outsb
lahf
adc
jb
fwait
out
adc
pop
aaa
popf
bound
sarb
inc
mov
jb
dec
add
shll
xorl
fsubrs
pop
adc
pop
xor
aas
inc
mov
inc
inc
and
fwait
mov
push
add
sbb
clc
jge
popf
dec
aaa
sbb
add
sub
jg
aad
outsl
loop
add
in
movsl
jb
pushf
dec
faddl
fisttps
add
jne
mov
dec
stos
adc
jg
test
arpl
inc
pop
mov
pop
outsb
push
lret
jge
int3
xor
mov
sbb
xlat
mov
xchg
adc
push
leave
in
out
mov
mov
push
or
inc
les
mov
idivl
adc
add
dec
daa
xchg
xor
mov
cmp
push
mov
xlat
insb
cmp
bound
dec
arpl
js
cmp
test
into
jecxz
leave
adc
call
sti
int
in
pop
mov
pop
mov
mov
or
jp
or
mov
imul
sbb
daa
jmp
pop
pusha
lahf
ret
mov
mov
jecxz
cmpsl
push
sarb
or
notl
pop
push
jns
jmp
mov
sbb
mov
aad
pop
xor
mov
bound
jno
xchg
insl
mov
mov
pop
jo
jge
xchg
mov
lds
push
sahf
aas
scas
pop
scas
mov
jmp
pop
das
dec
push
in
pusha
lahf
xor
iret
stc
pusha
inc
bound
jbe
adc
cmpsl
jle
icebp
jl
adc
popl
shlb
add
jp
or
mov
cmp
add
jo
xchg
shrb
lods
cmp
sub
push
test
enter
mov
pop
fistpll
mov
divl
jb
xor
sarl
jo
dec
push
nop
jnp
adc
clc
sarl
es
cmp
mov
repz
or
jnp
mov
adc
sbb
aas
imul
gs
sbb
fwait
aam
sub
push
mov
xchg
or
lcall
aaa
dec
in
gs
sahf
adc
xor
mov
mov
pop
xchg
stos
aad
cmp
rolb
jne
pop
ret
loope
fadd
cmp
xchg
cmp
roll
jbe
mov
add
loope
stc
fstpl
push
jge
dec
rcrl
sub
jo
inc
int
cmpsb
push
gs
jbe
dec
xchg
mov
xchg
pop
imul
fidivrs
and
jge
ss
repnz
mov
faddp
pop
pop
jne
shrl
xchg
scas
mov
imul
push
xchg
jmp
shl
sti
mov
add
push
pop
adc
shll
jns
pop
ds
imul
idivl
and
stos
mov
inc
mov
mov
push
faddl
fists
jae
fwait
xchg
into
dec
jmp
sub
daa
push
dec
cltd
shlb
test
cs
cmp
push
inc
fnsave
xor
push
iret
fldcw
shll
push
cmp
cmp
adc
dec
addr16
fs
loop
mov
push
sbb
cld
jle
sbb
mov
sbb
lret
ljmp
or
or
mov
ret
aam
into
jbe
cltd
pop
adc
mov
xor
shlb
test
or
inc
inc
pop
bound
cmc
mov
test
or
std
dec
call
filds
pop
loopne
cli
xor
mov
mov
push
cs
lock
mov
sub
imul
stc
mov
mov
mov
push
xor
imulb
cli
xlat
push
pop
cmpsl
xchg
push
cmc
xor
sbb
in
sahf
das
xchg
stc
cli
in
test
or
test
or
or
imul
xor
add
push
push
mov
movsl
cmp
adc
xchg
jo
dec
pop
xchg
fistpll
xchg
jl
jle
dec
xchg
cmp
xchg
adc
hlt
jp
push
fistpll
cmp
insb
jbe
in
and
adc
dec
xor
mov
int3
bound
jno
insb
inc
inc
mov
dec
pop
inc
outsb
shr
and
push
ss
inc
jb
das
jge
sub
pop
in
ss
movsl
sub
ffreep
cmp
stc
clc
jp
add
adc
sbb
dec
add
or
cwtl
fsubrs
lret
int
lods
out
dec
subl
jle
pop
fs
sub
cmc
sbb
mov
popf
push
call
les
cltd
xlat
add
cltd
cmp
ret
xor
pop
js
xchg
popa
mov
push
fisubrl
mov
push
adc
lahf
inc
adc
inc
jmp
jno
fs
push
shl
or
imul
adc
mov
mov
mov
call
jae
push
push
in
mov
mov
pusha
inc
mov
cmp
mov
cltd
enter
mov
int3
add
loop
jecxz
mov
inc
push
mov
cmp
mov
xor
mov
imul
cmp
mov
jp
cmp
cmpsb
mov
stos
aad
fdivs
add
mov
sub
adc
push
jmp
lds
shrl
mov
insl
fstl
mov
fwait
gs
mov
stos
jb
mov
fistl
fiaddl
add
cld
jp
add
sbb
and
sbbb
pop
divl
mov
mov
adcl
stos
arpl
dec
pop
xor
add
push
mov
sbb
mov
mov
sbb
fsubs
lahf
jg
loopne,pt
jge
jb
mov
and
daa
mov
pop
xchg
enter
hlt
xor
out
test
add
xchg
cmp
xor
sbb
fwait
movsb
repz
ret
mov
xlat
mov
cmp
mov
mov
cltd
je
mov
cli
orl
jp
cwtl
lret
lahf
mov
mov
aad
stos
les
fisubrl
pop
cmp
sub
adc
push
mov
insb
fcoms
std
mov
test
shlb
dec
sbb
mov
cmpsb
xor
jb
fisttpll
sbb
xor
pusha
jp
mov
out
bnd
popf
jecxz
cld
adc
add
jecxz
jno
fmuls
mov
and
xchg
jg
sbb
xchg
mov
ret
inc
gs
mov
call
jb
xor
mov
mov
inc
je
fadds
js
sbb
ds
sub
jle
cmp
mov
mov
xor
xchg
jae
mov
clc
mov
mov
sbb
mov
mov
mov
lcall
dec
test
dec
lock
rcll
sub
push
test
mov
jecxz
jns
popf
jae
pop
mov
repz
out
cmpsl
mov
or
cmp
adc
mov
movsl
adc
lcall
or
stos
xor
xor
mov
in
lds
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
out
mov
jmp
mov
mov
lret
in
mov
mov
cmp
or
je
xchg
xchg
inc
cltd
enter
or
cmp
mov
sbb
sub
lahf
sbb
dec
sahf
push
sub
mov
sub
or
inc
divb
cmpsb
mov
fucomip
repz
push
pop
add
add
pop
dec
sbb
add
addr16
scas
xorl
les
nop
xlat
stos
test
fiaddl
dec
sbb
scas
mov
jecxz
mov
push
dec
repz
je
fisttpll
xchg
dec
adc
add
sbb
mov
movsl
adc
lcall
or
stos
xor
xor
mov
in
lds
cld
out
mov
or
or
fwait
push
dec
mov
test
dec
aam
inc
les
clc
sbb
movsl
ret
inc
js
jmp
or
cmp
call
sti
xor
mov
xor
xor
mov
ret
add
xchg
popf
loope
negl
jle
xorl
scas
shr
ss
and
sahf
shll
sbb
adc
mov
xor
mov
add
insl
adc
aad
pushf
ret
pop
pop
dec
test
dec
sarb
sbb
inc
clc
ror
sbb
sub
xchg
pop
stos
repz
sub
cmp
mov
ret
or
addb
test
sbb
jl
fsts
mov
js
jbe
scas
fidivs
ljmp
cmp
mov
xchg
cmp
andl
sub
rcrl
pop
jns
sub
inc
mov
adc
mov
cli
xor
and
hlt
std
mov
sti
and
test
stc
test
ret
mov
mov
bound
mov
cmc
mov
mov
pop
or
and
mov
mov
test
mov
js
sbb
mov
xchg
pushf
jmp
sbb
pop
lock
or
sbb
std
mov
movsl
sub
adc
dec
in
xlat
mov
mov
lahf
cmp
mov
xchg
stc
cli
in
test
pop
xor
test
std
stos
cmp
xchg
ficoml
lret
mov
jp
add
xor
sub
add
movsb
test
sbb
xor
fwait
leave
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
and
inc
les
gs
push
aas
fwait
lret
in
mov
mov
pop
mov
gs
das
cmpsb
sti
mov
in
and
or
es
hlt
pop
pop
cmc
jmp
sbb
movsl
mov
loopne,pn
push
mov
sub
jge
fwait
cmp
pop
pop
test
in
jmp
shlb
or
test
rcrl
sbb
fiadds
jo
sbb
outsb
dec
or
aas
ret
mov
xor
stos
xchg
mov
pop
stos
push
in
xlat
mov
loope
dec
cli
mov
ja
xlat
xor
stos
inc
popf
lret
add
push
test
cmp
xchg
add
mov
add
xchg
pop
ljmp
mov
mov
aad
ret
jge
adc
fptan
mov
scas
aaa
mov
cli
jnp
inc
mov
mov
loopne
pop
inc
inc
sbb
xchg
inc
js
cwtl
out
addr16
fbstp
and
xchg
dec
or
sub
cmpsb
mov
mov
hlt
std
mov
sti
and
or
cmpsb
cmc
test
xchg
sub
lods
outsl
inc
adc
add
lcall
mov
mov
movsl
sbbl
cmp
clc
jp
add
mov
das
jo
push
repnz
inc
sbb
subb
adc
iret
fld
pop
ficoml
mov
test
push
rcrb
jbe
mov
popf
push
mov
fs
movsl
dec
or
bound
or
sbb
xchg
add
xchg
dec
lcall
stos
jae
xor
lods
jle
mov
jl
or
ret
popf
ficomps
jnp
inc
mov
mov
arpl
ret
jmp
pop
stos
aam
mov
jnp
inc
push
mov
or
mov
rcl
fdivrs
inc
mov
cmpsl
ret
pop
call
inc
cltd
out
insl
push
andb
cmp
or
cmp
xchg
sub
popf
in
mov
mov
mov
les
or
iret
add
in
and
inc
hlt
add
scas
push
neg
add
lds
cltd
or
ret
sub
adc
or
or
sbb
les
lcall
sbb
cmc
movsl
dec
mov
fidivl
adc
test
mov
sbb
mov
movsl
sbb
mov
add
xor
sub
cld
sub
pusha
mov
cmp
std
cli
jnp
inc
mov
add
scas
mov
addr16
jnp
and
rol
push
sbb
lods
push
mov
pop
cmpsb
and
popf
daa
jnp
mov
sti
sti
and
test
push
or
xchg
xor
sub
js
test
adcb
push
xchg
int
pop
push
imul
pop
fistpll
stc
adc
sahf
sbb
mov
cltd
je
mov
cld
or
ret
arpl
mov
mov
xor
aad
sbb
lahf
stos
and
mov
data16
stos
pop
ljmp
outsl
mov
shlb
push
cmp
sbb
add
or
xor
jb
loopne
sbb
cwtl
and
sbbb
jle
scas
fstp
sti
push
lahf
mov
sub
xchg
lret
andl
cltd
sti
jo
pop
xchg
aas
push
mov
pop
outsb
fucomip
rolb
fidivrl
int3
out
inc
and
cmp
pop
lea
ds
jno
out
mov
xchg
xorb
xchg
sub
fsubrs
mov
pop
push
mov
ja
push
mov
popa
or
mov
ljmp
add
pop
dec
sbb
add
addr16
scas
xorl
les
nop
xlat
stos
test
ficompl
inc
pop
pop
andb
ljmp
xchg
test
add
movsl
insl
mov
shlb
sub
movsl
mov
cld
jp
add
loope
shrb
enter
jbe
jmp
lcall
sbb
inc
cwtl
pop
andl
jno
fmuls
mov
and
xchg
jg
mov
cmp
xchg
mov
cmp
jb
imul
sti
and
test
js
sbb
jle
movsb
xchg
jecxz
lret
sbb
add
pop
stos
shrl
mov
pop
mov
test
fwait
jg
in
repz
hlt
mov
mov
dec
pop
sub
or
jg
aad
pushf
ret
sub
mov
rcrb
inc
cmpsb
aas
les
mov
lret
mov
fldl2e
je
sahf
das
xchg
stc
cli
in
test
nop
cli
push
fsts
jp
xchg
add
fisubrl
fcmovne
xchg
add
jp
add
sti
call
fstl
jnp
aad
mov
in
repnz
fstps
gs
xor
add
rclb
and
and
mov
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
es
cli
call
fwait
mov
stos
xchg
out
mov
cwtl
mov
dec
push
or
cltd
mov
mov
dec
cmpb
sbb
out
les
pop
mov
movsl
mov
mov
dec
repz
sti
mov
dec
add
cs
mov
mov
ljmp
push
adc
repnz
jns
lds
nop
les
mov
sub
cmc
sbb
std
fistpll
cwtl
dec
pop
insb
in
or
test
in
xchg
dec
aas
add
push
shlb
lock
lods
jle
pop
lds
jge
pop
xor
fwait
iret
push
leave
loope
loop
sbb
and
jo
imul
xchg
xchg
mov
aam
repnz
les
push
fsubs
jge
inc
push
ret
add
fsubl
cmp
sub
je
sbb
mov
pop
jb
shr
xor
inc
cmp
push
adc
fnstenv
shl
js
inc
jae
cmp
ss
and
mov
mov
jne
scas
hlt
divl
test
mov
mov
cld
jg
xchg
mov
jbe
xchg
adc
scas
dec
dec
mov
sbb
les
lcall
sbb
inc
push
cld
test
std
mov
xchg
cld
or
add
inc
pop
movsl
adc
ret
sbb
fstps
test
mov
pop
fsts
push
push
inc
fwait
out
js
subb
cmpsl
adc
xchg
sbb
aam
aam
pop
ret
lock
mov
popf
xchg
lahf
scas
dec
pusha
movsb
push
sub
cmpsb
cli
jae
push
jno
inc
or
mov
mov
sti
repz
je
enter
add
xchg
sub
popf
xchg
push
mov
ret
adc
cwtl
dec
and
mov
mov
test
add
out
and
lret
jecxz
pop
repnz
je
out
and
rcrl
xchg
cwtl
push
hlt
mov
je
cltd
fs
xor
xor
adc
sub
push
test
cmp
mov
dec
jb
and
sbb
lret
push
cld
sub
imul
adc
jl
or
cld
xor
xchg
or
cmp
or
ljmp
inc
pop
ret
sbb
inc
inc
mov
push
cmp
test
pop
out
sub
sbb
mov
fwait
push
dec
mov
test
dec
aam
jns
sub
bound
imul
inc
popf
mov
xchg
push
xabort
pop
hlt
or
and
or
es
ret
add
out
cmc
xor
inc
adc
xchg
dec
mov
lcall
and
xor
dec
add
mov
cmp
jp
add
pop
dec
sbb
add
addr16
or
popf
cmp
pop
sbbl
stos
push
test
lock
shlb
push
in
dec
scas
mov
jge
stos
inc
bound
movl
aad
inc
sbb
jae
stc
lret
pop
test
enter
sub
ret
je
pushf
sbb
inc
fmull
jmp
cltd
xchg
pop
sub
sub
and
test
popl
rcll
sub
push
mov
clc
push
mov
fwait
sarb
inc
push
popf
fwait
lret
xor
or
test
bound
jle
jne
xchg
push
loope
int3
add
mov
sub
aas
test
outsl
movsb
xchg
cltd
mov
mov
shrl
push
xchg
icebp
in
mov
stc
sti
mov
loope
mov
adc
lock
mov
cmc
cld
add
mov
fldl
jecxz
sbb
fcomi
fisubrs
mov
shrb
and
xchg
jae
pop
dec
pop
add
pop
jno
mov
sbb
roll
or
mov
adc
or
mov
fistl
cmpsb
and
test
inc
mov
ficomps
imul
jnp
inc
mov
or
mov
add
decl
jnp
inc
push
mov
or
mov
shlb
cmp
and
clc
les
cmp
mov
mov
int3
add
jp
adc
rolb
mov
daa
scas
in
in
mov
pop
push
mov
ja
push
mov
popa
or
mov
jae
ljmp
add
jmp
xor
sub
or
into
fwait
rorb
mov
test
mov
aaa
jns
jl
push
dec
int3
fnclex
fbld
lcall
lret
adc
pop
mov
les
lcall
cmp
adc
jp
movsl
adc
cli
add
inc
pop
test
pop
jp
mov
ficoms
mov
fists
sti
xor
adcl
mov
test
adc
jge
push
dec
mov
repz
dec
mov
shl
aam
sbb
cmpl
movsb
jp
enter
mov
jmp
std
mov
sti
and
sbb
lret
mov
in
aad
and
dec
fsubr
mov
xor
int3
sbb
lea
xor
and
adcl
into
repz
sti
pop
adc
or
mov
test
jecxz
repz
lods
icebp
mov
lret
pop
ret
sbb
lahf
jne
fsub
cld
mov
mov
roll
mov
lahf
popf
in
dec
ljmp
lds
sbb
lcall
inc
pop
mov
adc
in
clc
jb
sarb
fwait
lods
or
inc
pushf
sbb
mov
rol
push
cwtl
add
cmp
cs
push
les
fistps
push
aas
fwait
lret
in
mov
mov
or
fwait
lea
mov
mov
cwtl
flds
es
je
nop
lea
bound
mov
shl
mov
shrl
mov
and
fstl
inc
cmpl
dec
lahf
in
or
xchg
xor
leave
add
mov
or
nop
aas
ret
fwait
jle
pushf
dec
and
jno
mov
push
push
cld
stos
sub
addb
test
fnclex
pusha
std
cmpsl
dec
pop
les
jno
dec
inc
and
adc
nop
or
adc
mov
xor
lods
jle
dec
aad
mov
add
inc
mov
scas
movl
out
mov
mov
inc
icebp
loopne
jb
adc
loope
push
mov
xlat
xor
test
and
cmp
mov
loope
or
jne
dec
push
sbbl
icebp
inc
call
ds
gs
negl
dec
cs
sbbb
or
xor
test
dec
stos
shll
xchg
inc
shrd
cmp
mov
clc
sti
mov
or
add
scas
movsb
dec
sub
push
pop
repnz
sbb
outsb
xor
pop
inc
cmpsb
xchg
adc
stos
jb
dec
fsubrl
inc
mov
xchg
sbb
flds
pop
testb
jmp
pop
jo
test
sbb
xchg
adc
xchg
cmp
rorl
stos
cmp
movsl
fstp
dec
int3
mov
and
into
mov
fucom
loope
jg
enter
lcall
push
subl
xchg
lea
jo
rclb
dec
mov
xlat
xchg
sub
call
inc
mov
cmpsl
ret
test
xchg
push
pop
out
enter
int3
pop
add
clc
aam
call
and
popf
popf
mov
mov
ret
les
add
repnz
mov
lret
jecxz
push
cwtl
cmp
pop
cmp
nop
ss
and
cmpsl
mov
jecxz
sbb
jmp
pop
adc
test
aaa
fiaddl
jb
mov
mov
pusha
mov
jnp
dec
rcrl
and
xchg
jmp
cwtl
stos
clc
pop
das
xchg
fisttpl
stos
xchg
mov
xchg
rcl
lcall
ja
xor
sbb
ret
lahf
ficoms
insb
xor
pop
push
cwtl
in
sarb
mov
xor
dec
mov
fnstenv
jmp
subb
movsb
cli
jae
loopne
mov
sti
push
sti
dec
push
mov
scas
push
sub
sbb
icebp
das
adc
add
loop
push
je
movsb
popf
andl
push
xchg
mov
ficomps
mov
shrb
mov
in
popf
pop
out
or
mov
xchg
std
inc
push
adc
iret
aas
add
pop
dec
push
mov
cwtl
push
hlt
das
shll
clc
mov
aaa
mov
std
test
and
mov
push
pushf
dec
push
mov
xchg
cmp
les
xor
xchg
sbb
sbb
adc
mov
xor
push
pop
fstl
jnp
xor
pop
pushf
cmp
out
pop
popf
sbb
sti
and
mov
gs
mov
add
clc
push
mov
sub
xchg
mov
xchg
ds
call
inc
fstl
ret
sti
xor
mov
jne
test
test
inc
add
shll
fstp
bound
xchg
dec
mov
jmp
mov
repz
vpandn
jmp
mov
fdivrl
sbb
mov
jecxz
mov
xor
push
adc
es
xor
ss
jl
sbb
sub
push
imul
dec
pop
add
mov
pop
dec
sar
loope
add
in
daa
sbb
mov
pop
pop
mov
popa
push
sub
mov
out
xorl
movl
pop
lret
jo
jge
lea
inc
or
jo
mov
in
shlb
add
ss
shl
sbb
dec
enter
sub
sub
cltd
in
sbb
xchg
xchg
pushf
dec
adc
fmull
mov
or
inc
sbb
jbe
shrb
int
sub
adc
ljmp
mov
icebp
outsb
pop
test
cmp
ljmp
cmpsl
fdivrl
xor
mov
add
xchg
mov
adc
lahf
xor
sbb
jp
xchg
loope
jl
insl
stos
push
test
jbe
push
jp
leave
cmp
mov
pop
ffree
jmp
in
lret
mov
ss
and
add
stos
xorl
xchg
cmp
xor
pop
xchg
add
adc
out
cmpsl
pop
pusha
jno
add
cwtl
lahf
out
fucomi
and
fcomip
fwait
ss
cwtl
cmc
adc
push
mov
mov
or
xchg
js
mov
inc
fldt
pop
xchg
mov
cs
test
in
xchg
mov
sbb
ja
gs
or
fnstcw
xchg
xchg
sbb
dec
mov
hlt
imul
dec
add
xchg
sub
inc
xor
or
lret
pop
and
stos
les
imul
imul
hlt
movsl
xorl
adc
mov
sbb
ljmp
xor
cmp
pushf
cmp
cmp
in
lods
push
dec
mov
movsb
jmp
jae
enter
inc
xchg
dec
sbb
fcoms
std
mov
test
shlb
dec
sbb
mov
cmpsb
xor
jb
fisttpll
sbb
lods
jle
or
imul
dec
in
loope
mov
jmp
or
shlb
ljmp
mov
jnp
and
push
aam
sar
out
or
mov
dec
push
jne
sbb
xchg
mov
int
jnp
clc
jne
loope
adc
push
add
xchg
sub
and
in
cmc
fisubrs
sub
out
and
sbb
and
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
pop
dec
sbb
add
addr16
cs
cmp
pop
sbbl
stos
push
test
lock
ss
jns
mov
cli
out
jae
xchg
xchg
mov
ret
cmp
xchg
orl
xchg
dec
bound
or
jl
cmpsl
push
push
into
or
xor
mov
mov
test
lods
inc
sbb
push
cmp
fs
pop
popf
int3
mov
jo
jb
xcrypt-cbc
cmpsl
xlat
in
divl
rcll
cmpsl
or
push
or
test
jl
mov
dec
mov
cmpsl
lret
in
mov
mov
cmp
leave
je,pt
xchg
xchg
inc
cltd
enter
mov
fcompl
shrb
mov
dec
cwtl
test
imul
scas
dec
mov
into
pop
stos
pop
lods
movsl
mov
dec
in
cmp
mov
mov
fists
andl
or
fnsave
test
ret
test
dec
mov
jns
pop
xor
mov
stos
pop
jp
fs
in
mov
insl
push
mov
in
sbb
cmp
dec
mov
idivb
push
hlt
add
popf
repz
stos
ja
pmullw
push
mov
xor
xor
lea
mov
rcrl
pop
jp
xor
mov
shlb
into
and
adc
out
jge
sbb
out
scas
addr16
clc
or
pop
out
xor
mov
ds
jge
int
xchg
sbb
mov
cwtl
cmp
xchg
enter
subl
add
out
xor
xchg
dec
push
dec
sahf
cmpsl
dec
sahf
dec
mov
sbb
cmp
in
mov
or
mov
mov
cmp
jp
add
pop
dec
sbb
add
push
pushf
mov
fstpt
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
adc
dec
dec
jg
fldenv
fucomp
jae
jge
pop
pop
in
leave
pop
ljmp
inc
cmp
test
jle
cmp
insl
mov
stos
jne
push
cmp
add
push
lods
shr
rcrl
dec
mov
pop
push
xchg
jge
bnd
insb
push
mov
popl
mov
rcl
shll
or
and
jnp
inc
push
mov
pop
xor
loopne
imul
sets
pop
mov
pop
mov
jne
outsl
sbb
and
or
es
hlt
sahf
and
mov
and
in
mov
mov
pop
push
test
jecxz
sahf
sub
mov
popf
inc
xchg
jnp
pop
add
adc
pop
push
mov
clc
repz
mov
mov
xchg
shlb
inc
nop
pop
stos
push
lods
xchg
sub
adc
inc
in
aad
stc
mov
mov
sub
jmp
mov
in
in
xchg
test
test
mov
sbb
sti
dec
sub
lcall
ss
mov
add
inc
test
jecxz
lahf
and
xchg
xlat
cld
pop
fwait
add
or
inc
aam
fdivs
xchg
fsubrl
sbb
mov
pop
lahf
inc
or
mov
inc
jge
jmp
or
mov
mov
mov
cmpsb
out
les
adc
add
adc
xchg
test
movq
sbb
push
and
xor
mov
mov
adcl
mov
pop
lock
mov
lock
out
and
xor
shll
roll
js
fsts
nop
in
push
hlt
scas
icebp
sbb
mov
xor
xor
sub
jns
shl
add
xchg
mov
sbb
loop
movsl
imul
inc
out
mov
xchg
daa
or
cmpsl
mov
dec
movsl
adc
jl
fistpl
js
inc
and
dec
pushf
jp
add
mov
scas
aaa
mov
cli
jnp
inc
mov
mov
pusha
sarb
inc
sbb
add
lods
dec
xor
mov
mov
imul
add
test
ret
repz
sbb
cmovle
call
mov
dec
fwait
mov
and
sub
aam
fcoms
xor
xlat
adc
ret
pop
shll
add
add
adc
pop
adc
add
pop
pop
rcll
roll
shlb
sbb
lret
cmpsb
xlat
popf
cmp
adc
jb,pn
jp
mov
mov
push
loop
int
jae
cltd
fs
mov
je
leave
jno
xchg
and
data16
fbstp
lret
dec
inc
cmp
addr16
dec
scas
pushf
xchg
fdivl
push
mov
push
push
enter
ja
sub
xor
adc
es
or
mov
ret
or
test
fwait
inc
xchg
adc
push
xchg
mov
mov
or
dec
lahf
mov
int3
and
mov
fldenv
loopne
xor
add
mov
leave
mov
push
adc
ret
jae
mov
pop
loopne
rclb
lahf
mov
cmp
add
scas
mov
or
lock
neg
add
push
sub
or
dec
int
push
cwtl
lret
inc
sbb
rcrb
xor
test
fldl
data16
sbb
std
movsl
dec
or
bound
hlt
mov
add
cmp
adc
mov
movsl
mov
cld
jp
add
mov
lret
addr16
into
scas
fsubr
sbb
xor
out
stos
jno
arpl
addb
add
cmp
sets
in
aam
stc
fimull
test
pop
inc
pusha
mov
xchg
mov
push
bound
or
in
out
inc
icebp
addr16
adc
add
roll
push
adc
inc
pushf
cmp
mov
adc
xchg
cmp
xor
sbb
lahf
movsb
repz
ret
mov
test
clc
int3
mov
mov
sub
mov
ret
fwait
dec
dec
jle
cltd
orb
scas
icebp
sarb
stos
test
mov
mov
and
sbb
test
push
lahf
mov
mov
lods
lahf
sbb
popa
pop
cli
mov
les
or
repnz
push
cld
mov
xchg
adc
lock
mov
stos
xchg
fistl
frstor
mov
mov
dec
mov
lods
cmp
jp
lahf
inc
pusha
ficoms
mov
cmova
cli
or
sbb
mov
fwait
push
dec
mov
and
rol
fistpl
mov
fdivrs
ficompl
outsl
lahf
inc
test
xlat
pop
jle
jecxz
and
es
push
mov
loopne
inc
push
jp
mov
xor
loopne,pn
aad
fwait
mov
mov
popa
scas
shr
repz
inc
les
mov
xor
call
lock
add
jo,pn
push
mov
mov
cli
or
scas
dec
push
cwtl
push
adc
sbb
adc
les
lcall
sbb
hlt
loopne
test
ficomps
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
stos
stos
inc
lcall
cmp
xchg
mov
std
push
fucomi
repnz
add
and
sbb
pop
inc
sbbl
push
dec
mov
test
adc
test
mov
ljmp
popf
jecxz
xor
int
loope
pop
cmp
call
mov
mov
adc
aas
pushw
or
sbbb
das
idivb
pop
add
cwtl
dec
and
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
rcrb
mov
ss
and
cmpsl
mov
nop
pop
lret
addr16
dec
sbb
xlat
lods
lea
rolb
jmp
mov
int3
fstps
int3
cmp
icebp
add
jg
mov
outsb
fldenv
das
or
push
and
and
ja
inc
mov
mov
pop
in
xchg
jecxz
mov
inc
mov
ficomps
jle
test
fldt
loopne
xchg
popf
dec
fildll
test
dec
shlb
jns
sbb
inc
cmpsb
pop
fistl
xchg
mov
sub
popa
or
and
push
repnz
or
mov
ss
mov
mov
sbb
or
jne
lcall
pop
gs
xor
aad
repz
adc
jnp
test
int
call
fwait
pop
and
lock
mov
and
fsubrs
nop
or
movsb
xchg
dec
mov
mov
pushf
dec
hlt
popf
adc
mov
cld
push
xchg
xor
mov
fs
xchg
pop
decb
lods
lret
test
ss
mov
push
sbb
lret
or
rcrl
xchg
fwait
adc
addr16
jb
lods
pop
icebp
fwait
lds
movsb
ljmp
popf
ss
arpl
xchg
jne
jmp
imul
adc
inc
mov
or
js
rcr
push
adc
addr16
adc
dec
lods
xlat
insb
stos
push
cmp
popf
mov
sbb
lea
jge
stos
mov
sub
cltd
or
adcl
cwtl
movsb
popf
xchg
inc
mov
pop
push
test
call
xor
inc
mov
test
mov
cmp
jnp
pushf
fwait
inc
mov
nop
xor
mov
add
dec
mov
xchg
jo
inc
xchg
dec
sbbb
jne
les
lcall
sbb
hlt
loopne
sti
mov
xor
hlt
lea
xchg
adc
cmp
lock
sub
pop
mov
xchg
dec
push
mov
aas
mov
pop
mov
leave
in
test
jnp
or
addl
ret
jmp
pop
stos
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
std
mov
push
or
inc
bound
out
mov
flds
sub
or
fidivs
adc
inc
mov
jle
pop
ja
leave
sbb
jns
fiaddl
les
push
pop
inc
adc
mov
cltd
js
repnz
push
add
repz
mov
lret
xchg
sub
adc
leave
pop
push
cli
sub
stos
xchg
mov
scas
mov
test
push
repz
fs
mov
sub
fsts
mov
out
add
cli
imul
mov
jp
add
sbb
pushf
and
sbbb
jle
cs
sti
push
lahf
mov
sub
xchg
ret
andl
rorb
mov
dec
aam
jns
mov
dec
cmpsb
pop
and
shll
ret
subl
cmpsb
enter
xor
jge
lea
int3
sbb
add
dec
packsswb
sub
lea
imul
insl
mov
pop
add
sub
mov
popl
jge
repz
aas
fisubrs
jge
sbb
aaa
sbb
adc
inc
jmp
cld
or
orb
sbb
mov
dec
xor
xlat
stos
clc
enter
push
sub
test
sub
subl
enter
enter
xor
pop
and
lock
mov
cltd
lock
jge
dec
mov
push
xchg
fnstenv
jb
movsb
xchg
fmul
push
jle
sub
adc
sub
or
push
xor
cwtl
std
shr
testl
add
ss
xchg
nop
xchg
dec
test
js
xchg
mov
cwtl
pop
cli
test
jae
fbstp
call
pop
sti
cmc
or
mov
xchg
enter
pusha
pop
or
xchg
sub
xchg
jmp
mov
dec
mov
ficomps
nop
or
lret
test
repz
cwtl
popa
mov
in
clc
push
fwait
push
jo
js
ja
ret
cwtl
enter
jle
pop
ret
xchg
int3
addr16
aaa
mov
fidivrs
xchg
and
ds
aad
out
or
fists
mov
repz
sahf
dec
pop
jno
lea
xchg
int3
push
jp
inc
inc
xchg
mov
aad
mov
pop
xchg
adc
test
dec
jp
mov
rcr
xchg
mov
incb
dec
sbb
js
repz
hlt
xorb
popl
pop
mov
loope
or
out
jge
sbb
jle
fdivrl
mov
mov
jbe
mov
pop
in
push
enter
fs
inc
cltd
enter
or
xor
cmp
leave
call
cs
sti
mov
xor
mov
xchg
std
mov
das
xorl
xor
mov
rorb
aaa
setg
jmp
in
scas
mov
jecxz
or
arpl
lds
cmc
mov
mov
imul
xchg
popf
pushf
push
test
mov
xchg
mov
inc
addr16
dec
xor
adc
pop
xchg
xor
stc
cmp
jns
inc
jbe
sarb
xchg
xchg
dec
lahf
or
mov
cmp
lahf
leave
sub
push
enter
lahf
fmul
xor
jp
inc
bound
xor
popa
adc
test
pop
mov
outsb
mov
out
jp
inc
lret
dec
cmp
push
xor
insb
imul
lahf
cmpsl
push
test
cli
lahf
lea
sti
sti
and
ret
test
test
dec
push
or
xlat
fnstcw
fdivs
mov
mov
imul
mov
arpl
inc
dec
stc
add
and
fucomip
repz
pop
addb
xor
mov
mov
sahf
lock
sbb
mov
mov
dec
outsb
and
movsl
inc
mov
sub
add
push
cli
das
les
inc
mov
xchg
fidivs
fldt
in
bound
xchg
dec
addr16
lds
push
stos
std
imulb
scas
dec
push
push
pop
test
lods
mov
mov
out
fcmovnb
stc
jo
bound
cltd
cltd
out
jo
adc
sbb
in
mull
mov
mov
pop
ds
ja
add
test
out
push
test
sub
cmpsb
pop
sub
pop
dec
popa
pop
scas
mov
mov
mov
cwtl
mov
lods
pushf
ret
add
enter
mov
rcr
xchg
das
or
add
std
fistl
or
shr
popf
lret
pop
add
iret
fucomip
in
incl
mov
std
jmp
cmp
jge
fcom
and
lcall
lds
lret
mov
and
push
nop
mov
pop
mov
mov
add
scas
mov
xchg
xor
dec
dec
jnp
stc
mov
ret
pop
sub
mov
shll
es
mov
or
das
adc
or
xchg
xchg
lahf
inc
outsb
pop
or
or
leave
cmp
mov
add
sarb
inc
pop
in
xor
cmp
mov
lock
and
xchg
fst
pushf
mov
pop
sub
mov
mov
cmp
mov
je
xchg
xchg
inc
cltd
enter
mov
enter
xchg
xor
dec
arpl
mov
int
pop
mov
cmc
hlt
pop
jb
cmpsl
inc
inc
mov
pop
shr
repz
sarl
mov
pop
add
iret
sbb
rcll
pop
sub
roll
fcomps
fs
lcall
dec
popa
aam
mov
and
push
nop
rcrb
leave
test
fdivrs
add
scas
mov
xchg
fbstp
xor
testl
pop
jo
test
and
jnp
scas
xchg
stos
jge
or
mov
xchg
stos
inc
xchg
fsts
push
sub
mov
lahf
inc
cmp
push
xchg
sbb
pushw
rclb
mov
mov
pop
out
xchg
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
movsl
cli
call
fwait
mov
stos
xchg
out
mov
cmovno
xchg
test
pop
bound
mov
sbb
gs
repnz
pop
dec
add
inc
xor
mov
stc
aas
in
mov
mov
pop
sub
mov
or
or
add
or
aam
mov
and
pop
nop
sub
pop
stos
adc
cli
mov
xor
pop
in
mov
lret
fucomp
jae
fcmovne
pop
jl
cmpsl
bound
or
xchg
dec
jae
inc
mov
outsb
fdivrs
xchg
test
mov
mov
stos
popf
lock
repz
lods
stos
jno
shr
sub
mov
jnp
fdivrl
mov
mov
loop
or
push
cmp
sti
add
movsb
insb
xor
aam
sti
fwait
xor
orl
inc
pop
out
sub
xchg
inc
jmp
popf
stos
mov
xor
pop
cwtl
xchg
adc
les
mov
lret
dec
mov
cltd
cmp
mov
mov
shll
mov
loopne
mov
lcall
and
mov
lock
sub
lds
cmc
adc
mov
outsb
xor
test
insb
test
xor
jne
test
sub
pop
jp
pusha
mov
lods
mov
push
in
in
inc
mov
or
cmp
adc
cltd
loopne
stos
mov
add
movsl
pop
test
lods
jne
enter
xchg
fucomi
repnz
add
out
js
lea
loopne
and
inc
add
or
aas
push
or
jp
adc
out
movsb
inc
sbb
pop
jge
idivl
in
pop
inc
cltd
enter
sahf
xor
loopne
mov
hlt
jl
inc
mov
cltd
pop
dec
mov
ljmp
mov
clc
mov
arpl
out
les
cmp
mov
movsb
mov
lret
jecxz
pop
cwtl
cmp
pop
sub
xor
mov
les
xchg
in
cwtl
lret
movsl
adcl
lret
mov
dec
sbb
pop
and
sahf
pop
int3
sarl
lret
gs
cmp
ret
xor
addb
ficompl
dec
aad
dec
jb
js
lods
push
aaa
js
xchg
dec
mov
dec
and
pop
adc
dec
xchg
leave
in
test
pop
xor
out
idivl
add
jo
rolb
dec
sub
hlt
jp
stc
sbb
test
xor
cmp
insb
jbe
sbb
in
cmp
pop
popa
mov
xor
lds
mov
shlb
inc
xchg
or
pop
andb
dec
lret
mov
mov
xlat
test
sbb
inc
inc
adc
add
xchg
scas
jecxz
cmp
popa
cld
movsb
repnz
sbb
ja
pop
lods
inc
shl
add
mov
popf
inc
sub
mov
dec
fs
and
mov
lret
sahf
dec
gs
leave
lods
and
aam
sbb
xchg
aad
dec
pop
insb
push
cmp
aas
mov
nop
mov
xchg
stos
lds
inc
sub
jle
mov
push
pop
lcall
jge
pop
xor
cwtl
dec
cmpsb
xor
test
and
jmp
mov
sub
loop
xchg
add
inc
mov
or
dec
lods
push
jmp
mov
aam
jbe
mov
pop
xchg
push
pop
fld
call
inc
cltd
enter
lret
cmp
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
xchg
ficoml
cmp
ret
loopne
mov
jns
sbb
insb
mov
mov
cltd
je
pop
dec
mov
aas
loop
dec
mov
cltd
nop
or
test
repz
stos
push
insb
rorl
inc
inc
mov
mov
fucomp
shll
cli
out
or
test
or
invd
mov
shlb
daa
jne
dec
xchg
or
imul
inc
sub
fcoml
mov
push
jno
aad
mov
add
sub
inc
pop
push
fwait
imul
cld
sbb
mov
fwait
push
dec
mov
and
rcrl
dec
pop
xchg
fistpll
stos
icebp
mov
sbb
orl
mov
jmp
std
mov
sti
and
inc
shll
mov
test
push
adc
pop
stos
lods
gs
adc
xor
mov
add
cwtl
shrl
mov
in
lcall
lcall
fwait
push
flds
sahf
outsb
int
repz
xchg
mov
xor
test
inc
sub
cmp
sub
cmc
sbb
mov
cld
mov
fwait
into
jo
mov
sbb
cmp
jae
mov
add
xor
jecxz
mov
pop
mov
sbb
loop
sub
or
movsb
test
sbb
cmp
and
xor
add
rcrb
or
dec
inc
mov
mov
or
pop
jmp
jmp
int
cmp
jne
mov
pop
mov
gs
inc
push
ret
push
fisttpll
gs
pop
push
sub
xchg
and
adc
out
out
dec
movsb
adc
pop
adc
sub
mov
pop
mov
test
mov
mov
jecxz
add
add
lds
enter
xchg
addr16
mov
leave
push
mov
les
mov
sbb
arpl
mov
sahf
das
xchg
stc
cli
in
test
pop
xor
test
rcrl
xor
imul
pop
sahf
jns
inc
flds
out
in
adc
pop
pop
xchg
mov
std
cli
jnp
inc
mov
inc
inc
sbbl
push
dec
mov
test
adc
test
mov
ljmp
popf
mov
sbb
fsubs
jl
cmp
fld1
jb
cmp
aaa
popf
testl
test
cmp
addl
mov
popf
xchg
dec
inc
mov
or
cmp
aaa
xor
pop
mov
lods
mov
mov
jnp
mov
jns
cmc
rcll
pop
sub
roll
fcomps
fs
lcall
sub
lret
mov
and
jg
sub
clc
jl
inc
cmp
push
lahf
jp
xor
fldt
jo
mov
push
cmp
dec
mov
mov
sbb
std
lret
stos
xchg
push
adc
mov
jle
cmp
sbb
cltd
lods
into
xor
dec
and
fcmovnb
push
mov
pushf
mov
out
inc
xor
sub
test
mov
clc
je
std
pushl
cmpl
inc
jmp
fbstp
adc
mov
out
dec
add
jo
scas
repz
pop
test
lea
hlt
js
orb
cmp
push
and
and
push
or
rorb
inc
xchg
std
push
sub
repz
aam
jmp
jecxz
jne
inc
inc
mov
ljmp
mov
mov
stos
or
mov
dec
mov
andl
xchg
sbb
test
jnp
lds
jl
mov
dec
xchg
fcoml
pop
mov
jno
ret
movsl
insl
rorl
into
dec
push
jmp
push
push
mov
dec
jg
scas
dec
fcoml
dec
push
xor
shl
pusha
push
cmp
test
fs
mov
cmpsl
xlat
add
xchg
idiv
mov
test
xchg
dec
nop
pop
mov
xchg
imul
insb
jmp
cli
xor
in
popl
fs
push
fld
mov
adc
aam
aaa
daa
mov
adc
sub
dec
daa
adc
mov
repnz
rolb
filds
aas
mov
sub
loopne
mov
or
ds
iret
pop
xor
cmovbe
xor
or
ja
iret
xor
or
dec
cmc
jno
nop
sahf
xchg
int3
addr16
xor
fsubrl
dec
add
mov
test
xchg
jg
mov
xor
adc
sbb
fdivr
dec
pop
insb
setns
outsb
push
cli
jp
cltd
or
push
dec
cmpsl
push
jp
scas
dec
paddusb
sbb
xchg
movl
dec
pushf
aas
lahf
scas
push
loopne
xor
int
jo
popa
or
adc
idivl
cwtl
jns
std
decl
rcrb
or
fucomp
push
push
lods
sub
ja
fistps
cmpsb
pop
jne
outsl
push
pop
data16
popf
cmp
or
inc
hlt
jb
jl
adc
dec
fidivrs
inc
mov
inc
ss
fidivrs
xor
fdivs
icebp
inc
inc
xor
inc
mov
in
int3
cmp
jmp
xor
aad
push
sbb
hlt
push
cwtl
sub
sub
sbb
pop
stos
push
and
lds
fildll
iret
jecxz
aam
addr16
test
cmp
leave
les
mov
outsb
lods
sub
fnstsw
pop
xor
mov
repz
lods
pop
pushf
add
sbb
push
cmp
push
inc
fwait
out
test
sub
push
inc
clc
or
fwait
push
dec
mov
test
dec
aam
stc
fsubs
fwait
xor
loope
mov
xor
pop
loope
sub
test
fwait
mov
outsl
out
repz
and
ret
inc
inc
add
or
fiadds
test
xchg
cmp
xor
sbb
test
mov
mov
fbld
rep
shrb
inc
mov
mov
pushf
sti
mov
mov
aaa
leave
adc
cmpb
pop
ret
leave
rorb
sbb
test
mov
test
inc
fnsave
push
jp
popf
push
add
lock
pop
add
cld
jbe
jg
push
jne
aad
dec
sbb
cmp
mov
test
cmp
mov
cmp
jbe
jmp
fwait
sub
mov
mov
leave
cld
sub
ds
or
repz
decl
rcl
clc
inc
cmp
pop
stc
cli
or
cltd
xor
sub
and
sbb
sbb
adc
fwait
mov
and
inc
loopne
insb
aaa
daa
shlb
fisttps
inc
xor
dec
inc
sbb
mov
or
xor
mov
test
cmp
and
add
setnp
pop
dec
pushf
mov
inc
add
jmp
cld
or
inc
mov
data16
ret
or
xchg
dec
sbb
sbb
sbb
inc
push
push
sub
subl
pushf
cmp
cmp
je
or
lret
and
les
mov
out
out
fnstcw
cmp
lahf
jp
ficomps
cmp
fbstp
pop
sbb
rcrb
enter
cwtl
cmp
std
decl
mov
out
adc
fstl
sbb
xlat
push
ljmp
mov
mov
out
mov
dec
inc
jb
add
inc
aam
push
aas
adc
dec
daa
adc
lret
xchg
mov
add
xor
sbb
rcrb
pop
add
dec
fucomip
repz
xor
movsl
mov
sti
leave
and
or
push
xchg
dec
aad
sub
mov
dec
fbstp
sbb
stos
mov
jno
scas
push
sub
mov
mov
mov
mov
push
mov
xor
ss
mov
jae
les
cmp
cmp
sub
mov
pop
scas
dec
jns
andl
adc
pusha
push
decl
and
stc
cmc
cmc
stos
jl
aas
adc
mov
push
inc
ds
jo
mov
cmp
out
mov
lods
push
jmp
dec
mov
aaa
mov
xor
fbld
lcall
xlat
mov
dec
inc
je
add
mov
adc
mov
lods
dec
or
push
mov
dec
aam
sti
rcrb
mov
int
inc
fisttpll
push
add
int
nop
test
les
xchg
aas
jge
sbb
jbe
pop
rcrl
sub
xor
jno
pop
int3
addr16
stos
imul
push
les
push
push
lods
push
adc
mov
mov
push
xor
rol
xor
mov
jnp
mov
movsl
setns
fsubrl
loop
daa
cltd
adc
push
bound
std
mov
xlat
jns
mov
enter
lods
shl
lock
dec
enter
fisubrl
jnp
inc
mov
adc
inc
loop
scas
out
lea
xchg
int3
hlt
jp
stc
fsubs
adc
ljmp
fwait
mov
fcomps
addr16
testb
mov
mov
and
and
mov
and
hlt
jb
jle
adc
fstpl
in
cmc
push
cmp
sub
pop
dec
sti
int
clc
test
cmp
and
mov
div
cwtl
push
mov
jbe
pop
rcrb
ret
and
sbb
jg
fwait
jno
test
mov
int3
scas
movsl
loop
inc
fcmove
scas
sbb
cmp
mov
in
push
jp
pop
mov
dec
jg
push
or
dec
cmpsl
push
add
popf
pop
mov
scas
ret
add
cmp
push
xor
inc
xor
pop
iret
push
dec
xchg
add
fdivs
aad
insb
cmp
fwait
xor
data16
push
sbb
aam
fdivrl
mov
adcb
jne
jnp
or
pop
fidivrs
loopne
loop
je
call
and
sub
xor
in
cmc
fmul
movsb
jmp
cmc
or
stos
jmp
mov
out
out
and
fucomip
repz
test
sbb
or
jl
hlt
cs
mov
leave
loop
lret
movsl
mov
mov
lods
aad
push
dec
xor
dec
sbb
push
pop
add
xchg
fstpt
popa
jg
lcall
shlb
shlb
jo
xchg
or
xchg
or
cld
jp
add
cmp
xor
jno
shrl
lret
lret
loop
adc
ljmp
fistl
push
inc
sbb
cmpl
adc
stc
mov
mov
push
sahf
cmpsb
shrl
cli
dec
push
sbb
or
stc
call
aas
sti
sti
and
or
es
hlt
pop
mov
je
movsb
lcall
je
adc
and
pop
stos
shrl
test
mov
jecxz
and
jns
ds
lock
pop
mov
ss
add
push
repnz
lock
pop
cld
push
or
lods
jno
test
sub
adc
inc
in
lods
dec
mov
dec
pop
dec
pop
add
lret
adc
push
dec
sbb
rol
cmp
jl
ret
sbbb
lret
pop
lahf
xchg
or
cld
jp
add
sbb
test
sbbb
pop
pushl
test
jmp
lcall
xchg
adc
andl
ds
repz
sti
and
xchg
mov
lcall
and
sbb
js
lods
imul
aaa
in
jne
mov
int3
pop
adcb
shl
jl
dec
lea
cmp
fsubr
pop
adc
ficompl
cmp
lods
ljmp
push
addl
mov
divl
mov
pusha
in
jnp
mov
in
ja
mov
lret
xchg
or
scas
inc
sub
dec
sbb
sub
pop
les
es
gs
loopne
mov
jae
pop
je
pop
iret
push
test
sahf
je
lds
cmp
insb
lcall
bnd
imul
pushf
aam
push
std
adc
xchg
enter
dec
mov
sub
sbb
ficoms
jg
mov
icebp
lret
test
or
add
arpl
push
mov
pop
hlt
imul
je
cmp
mov
pop
cmp
repz
mov
jmp
mov
les
lea
jns
inc
inc
cwtl
mov
push
or
jmp
push
or
inc
mov
adc
mov
das
ss
into
cld
inc
insl
fwait
push
inc
mov
stos
shrl
xchg
into
lcall
and
pusha
xor
jne
sbb
aaa
inc
lret
inc
mov
rcll
aad
push
mov
into
addr16
xor
xor
fisubrs
leave
pop
add
dec
add
ljmp
and
adc
dec
repz
or
xchg
dec
inc
shlb
in
jge
or
dec
rorl
mov
mov
mov
lods
xchg
aam
xor
pop
jp
mov
loop
cwtl
push
xor
test
and
cmp
pop
sub
rcl
jae
dec
sbb
sahf
xlat
rcr
xor
out
iret
ficoml
xchg
jp
or
inc
stos
dec
cmpsb
sbb
ss
call
cmpsb
fwait
repz
mov
fpatan
mov
dec
jge
push
test
or
sub
test
sbb
sbb
mov
sub
stc
fs
sub
pop
mov
pop
mov
fidivrs
jnp
cwtl
fwait
jo
or
int3
add
shlb
leave
add
mov
cmp
in
movsl
cmp
rcrb
sbb
enter
lcall
test
movsb
push
xchg
dec
pushf
xor
lods
pop
lahf
cmp
sbb
xchg
movsb
xchg
movsb
or
cmpsl
addb
ficoml
outsb
les
jg
xor
push
jb
xor
sub
and
in
aad
iret
or
sti
fstps
mov
cmpsl
xlat
in
test
or
mov
stc
and
push
jmpw
mov
lret
in
mov
mov
cmp
les
je
xchg
xchg
inc
cltd
enter
mov
sub
dec
cwtl
test
imul
sub
sub
ss
cltd
sub
sbb
pop
test
cmp
repz
sti
pop
adc
movl
mov
ret
add
lret
add
xchg
int3
cwtl
lret
movsl
mov
lock
outsl
sub
sbb
arpl
dec
repnz
push
in
int
inc
std
ljmp
sar
arpl
jne
adc
mov
adc
cltd
jo
adc
mov
add
mov
mov
lret
xor
cld
pop
mov
addr16
popf
lahf
lahf
pushl
sbb
das
cmpsl
xlat
popf
or
ds
jo
rclb
aam
inc
cwtl
dec
and
cmpsb
mov
adc
fisubl
pop
in
sub
pop
mov
das
mov
pusha
fcomps
cltd
int3
adc
mov
sub
cmpsl
and
xchg
mov
mov
sbb
mov
fsubs
insl
mov
inc
xor
inc
imul
ja
movsb
repnz
ja
pop
lods
inc
pop
cmc
cld
inc
insl
cwtl
dec
and
dec
mov
jg
hlt
adc
mov
pop
stos
loope
jne
rclb
fisttps
push
lret
cli
jae
mov
stc
cli
in
test
cmp
push
lret
mov
outsl
lods
daa
aad
imul
jbe
outsl
sub
js
shrb
cltd
popf
sahf
jle
cmp
cmp
or
ret
sbb
stc
sub
jl
js
pop
in
idivl
inc
sbb
add
int
add
pop
mov
add
mov
out
push
push
lods
mov
out
pop
test
jo
mov
fwait
xlat
sbb
nop
aam
aam
or
rcll
andb
jp
adc
adc
push
dec
inc
xchg
mov
pop
das
or
or
xor
mov
cmp
inc
inc
imul
mov
aaa
gs
xchg
enter
lds
test
adcb
shlb
push
dec
xor
add
xchg
mov
and
stos
dec
out
pushf
jbe
lods
mov
adcb
and
jge
scas
or
arpl
push
popf
fcomps
dec
paddusb
cmp
cwtl
push
cltd
popf
push
pushl
lahf
jp
cmp
and
loope
mov
push
mov
inc
shlb
xor
mov
andl
out
std
push
dec
aam
dec
out
int
call
dec
notb
push
call
orl
pop
jp
sbb
sbb
into
xchg
incb
fs
shl
std
ret
mov
mov
dec
inc
imul
or
mov
mov
jne
or
add
mov
pop
or
es
xor
dec
push
inc
lahf
lret
jecxz
add
mov
add
lods
inc
and
cld
or
inc
cmp
pop
dec
shll
pop
sbb
test
cli
xor
xchg
lret
mov
dec
xor
pushl
call
bound
jbe
movsl
pusha
mov
jp
cltd
adc
mov
scas
xchg
mov
in
leave
cmp
rorb
xchg
idivb
inc
bound
idiv
and
stos
xlat
in
andl
adc
addr16
fdivrs
xorb
data16
enter
mov
das
les
gs
outsl
out
jne
repz
mov
push
adc
inc
add
xchg
outsl
fs
jb
lret
dec
mov
or
jmp
movsl
negl
mov
aam
neg
xchg
popl
mov
jns
cmc
rcll
pop
sub
roll
repnz
jnp
test
ret
popa
arpl
cli
jns
lds
nop
clc
xor
shll
inc
lock
xchg
mov
jmp
xchg
mov
stos
adc
sbb
popl
lods
test
sbb
xchg
add
mov
scas
mov
xchg
adc
test
xchg
push
push
mov
ficoms
jl
loope
mov
out
sub
sbb
mov
fwait
push
dec
mov
push
inc
cwtl
dec
and
mov
fcomps
enter
scas
lcall
cmpsl
ret
xchg
inc
cltd
enter
cmpsl
enter
mov
inc
mov
push
dec
mov
xchg
xchg
push
sbbl
inc
pop
push
mov
shl
mov
or
mov
mov
cmp
jp
add
mov
mov
mov
shlb
out
outsl
faddl
jecxz
sbb
xor
outsl
sub
inc
jno
mov
outsl
inc
lahf
push
lock
das
and
outsb
pop
mov
jno
inc
push
insb
mov
ret
fimull
dec
push
mov
push
jns
or
mov
movsl
nop
mov
add
imul
loopne
sbb
loop
js
scas
aaa
mov
cli
jnp
inc
mov
dec
inc
sbbl
push
dec
mov
jno
leave
mov
loopne
call
push
sub
ja
fistpll
ret
fld1
jb
cmp
mov
xchg
dec
inc
push
jb
insb
aaa
sbb
or
loope
jl
sub
cmp
mov
dec
ret
pop
mov
enter
inc
pop
inc
fisubrs
lret
jmp
cmp
fstl
inc
loope
adc
ss
mov
mov
dec
and
mov
jbe
fnstsw
xchg
cmp
push
mov
jne
dec
pop
int3
pop
xchg
cld
sub
push
xchg
cld
xor
xor
sub
ret
add
and
add
mov
fnsave
sbb
cmp
sbb
cltd
dec
sub
cmp
inc
xchg
cmc
mov
jg
cmc
and
sti
adc
jne
orl
pushl
mov
xor
rcr
mov
cmp
fadds
and
clc
push
mov
adc
cmp
outsb
iret
xlat
push
mov
dec
inc
je
fwait
pop
inc
and
xchg
nop
enter
jne
pop
mov
aad
pop
mov
std
fprem1
dec
add
xor
ja
ret
loopne
jmp
push
dec
ret
pop
pop
xor
mov
mov
sub
pushf
ss
dec
imul
pushf
dec
and
pop
nop
sub
pop
stos
adc
cli
mov
xor
test
fs
fldt
pushf
dec
inc
ret
pop
sub
cld
jo
push
or
push
dec
cmpsl
push
ja
push
gs
fnstenv
push
cmp
lods
inc
inc
fmull
xchg
jle
jmp
push
pushf
mov
inc
shlb
pop
inc
aam
gs
push
jb
jo
test
sbb
mov
push
jmp
sahf
enter
jmp
out
aas
insl
imull
adc
imul
aaa
popf
adc
adc
leave
xchg
jg
jl
sub
and
dec
lcall
pop
mov
inc
lahf
jbe
call
xor
stos
push
sbb
mov
jo
inc
inc
sbb
and
inc
inc
sbb
push
push
adc
stos
imul
in
movsl
sbb
cmpb
sahf
sbb
inc
sub
sub
pop
pop
lods
push
dec
lret
lahf
pop
in
xchg
popa
out
rcl
ljmp
xchg
sbb
push
jge,pn
leave
dec
cmpsl
push
imull
adc
xor
shll
jnp
pop
push
adc
sbb
js
jne
popf
scas
inc
push
out
sbbb
mov
xorl
ret
fwait
push
dec
mov
push
inc
cwtl
dec
and
mov
ret
adc
rcr
movsb
jno
scas
enter
jl
fwait
lea
iret
add
and
pop
sub
hlt
je
push
or
dec
inc
push
repnz
dec
daa
adc
or
xor
pop
adc
mov
mov
mov
imul
xor
mov
xor
and
add
pop
mov
and
mov
sbbb
adc
sub
xor
pop
pop
sbb
scas
mov
sbb
fwait
imul
add
sbb
pushf
test
icebp
xorb
fcmovu
xchg
or
sbb
xchg
cmp
jmp
dec
pusha
test
lcall
xchg
loopne
andl
add
addl
pop
sbb
xchg
insl
cmp
fsubs
sbb
cmp
mov
in
jmp
mov
fld
mov
sti
sti
and
leave
test
test
dec
push
or
int
imul
test
insl
sub
adc
call
sbb
out
daa
iret
fucomip
repz
lea
mov
dec
push
jo
in
ja
inc
add
or
mov
dec
rcrb
sbb
scas
test
jnp
push
leave
loop
mov
into
mov
inc
jmp
icebp
ffreep
loopne
lock
mov
push
sbb
loopne
jl
or
jge
push
lcall
mov
dec
sbb
sub
inc
pusha
push
adc
lods
jmp
xchg
fwait
leave
cld
out
loop
xchg
push
cwtl
and
rcr
adc
test
dec
add
test
push
cmc
sub
test
aam
sbb
aad
pop
scas
inc
lret
fwait
insl
or
mov
outsl
lds
adc
adc
fwait
inc
dec
mov
pop
pop
and
and
fsubr
mov
cmc
hlt
mov
sbb
pop
test
mov
mov
cmpb
mov
test
xor
mov
lret
jecxz
pop
cwtl
test
push
xor
jo
les
xchg
in
cwtl
lret
movsl
adcl
cli
lods
lret
push
and
ja
xchg
int3
xor
push
icebp
or
bound
push
cmp
xchg
test
inc
pop
lret
xchg
lcall
push
push
sbb
add
scas
ret
aaa
pushf
lret
int3
mov
inc
lahf
mov
dec
loope
bnd
lods
lods
inc
idiv
jnp
inc
mov
or
sbb
pop
xchg
aas
xchg
int
je
or
push
sahf
enter
daa
inc
sbb
adc
insl
mov
mov
xor
xor
mov
mov
push
adc
das
mov
ljmp
fidivs
call
sar
call
aam
sti
pop
adc
mov
ret
sahf
lret
jns
mov
mov
adc
or
hlt
lods
cli
mov
cmpsl
out
movsl
ret
pop
jbe
jae
mov
sub
cmp
sub
cmc
sbb
hlt
loopne
test
les
shrl
xor
or
stc
out
pop
stos
xchg
fwait
popf
jnp
pop
scas
push
lret
pop
test
cmpsb
jno
adc
push
pop
testl
pop
les
stc
inc
mov
cmpsl
aaa
cwtl
hlt
addl
mov
inc
sub
jp
push
les
cmpsb
xor
fdivrl
fbld
lods
dec
loope
jb
pop
mov
sti
popa
and
mov
leave
jecxz
and
test
cmp
xchg
xor
or
adc
in
and
dec
pop
mov
sub
mov
cmpsl
pop
ret
mov
inc
inc
sbb
aas
mov
stos
mov
add
dec
inc
sbb
cs
lret
lret
rorb
hlt
sahf
adc
xor
mov
lods
rclb
lcall
xchg
scas
fs
ror
sahf
or
lahf
dec
cmp
xchg
fcoms
xchg
repz
sbbb
les
and
jo
repnz
shrl
dec
movsb
aad
xor
xor
cwtl
or
inc
fwait
leave
loop
inc
mov
push
call
ss
cmpsl
in
mov
out
sbb
mov
out
je
mov
pop
test
movsl
xor
xchg
int3
icebp
jo
pop
cmc
cmp
add
aaa
popf
mov
mov
mov
dec
jb
rclb
and
xchg
xor
pop
pop
push
xchg
mov
xor
pop
or
mov
arpl
sub
pop
nop
mov
push
push
loope
push
xchg
mov
mov
pushf
int
pop
dec
mov
cmp
and
or
test
mov
repnz
nop
xlat
push
mov
repnz
test
mov
stc
or
sbb
sbb
cmp
adc
enter
push
xchg
orl
pop
mov
adc
repnz
cwtl
fstl
jp
scas
jg
cmp
icebp
cmp
lods
cmc
cmp
mov
clc
or
fwait
push
dec
mov
outsb
push
mov
inc
push
mov
ret
adc
rcr
movsb
jno
scas
enter
jl
fwait
lea
iret
add
lods
int3
pop
sub
hlt
je
push
or
dec
inc
push
repnz
push
or
xor
pop
adc
mov
xorb
adc
jne
mov
inc
jge
mov
ja
cmc
lods
dec
dec
or
add
test
adc
push
andl
push
lcall
lods
push
dec
mov
mov
stc
xor
fsubr
mov
push
mov
push
jg
jbe
jp
data16
push
scas
pop
mov
call
xchg
cwtl
scas
rorl
mov
andl
sbb
lret
pop
dec
jnp
rolb
mov
adc
sti
and
xor
mov
mov
xchg
or
sub
sbb
mov
lock
mov
cmp
mov
je
xchg
xchg
inc
cltd
enter
mov
int3
pop
sub
sub
sub
adc
jmp
mov
adc
test
gs
sahf
mov
jne
adc
inc
push
repz
or
add
jns
add
cltd
je
mov
inc
rorb
mov
adc
ss
sbb
xor
push
sub
test
and
sub
xor
cltd
punpcklwd
mov
sbb
mov
fisttpl
sub
testb
mov
pop
jnp
ja
cmp
enter
xchg
jp
stos
pop
mov
js
jge
cmp
xchg
sbb
repz
mov
int3
or
cwtl
sub
fiadds
cmp
sbb
les
fwait
xor
jb
mov
scas
shrb
pop
fisubs
mov
lea
jge
jg
inc
mov
enter
or
xchg
sub
xchg
jmp
mov
dec
mov
into
pop
stos
nop
or
lods
dec
adc
fcoml
cmp
repz
sti
mov
sbb
and
test
add
jbe
rorb
pop
dec
push
lock
addr16
add
arpl
dec
xor
shrl
sub
push
std
dec
jae
sbb
jnp
popa
mov
push
aas
ljmp
or
test
lock
cmp
mov
ret
or
shrb
cltd
sbb
mov
or
xchg
ds
xor
sbb
ret
mov
roll
mov
xchg
js
ds
and
adc
fistpll
stos
icebp
mov
fistps
mov
lods
lea
mov
and
or
mov
sub
mov
pop
subb
fdivs
leave
popf
jbe
or
loop
call
mov
lds
iret
sbb
jmp
idivl
call
jb
add
mov
push
test
add
rcrl
ret
dec
adc
imul
mov
ja
inc
in
mov
lcall
push
les
xchg
out
mov
mov
out
cmpsl
mov
or
cmp
adc
cltd
mov
adc
mov
add
repz
xor
add
cmp
ret
lahf
sahf
adc
mov
test
xor
pop
aaa
cwtl
hlt
jl
pop
mov
setle
fadds
adc
addb
data16
mov
test
in
xchg
imul
int3
cmpsl
ret
fld1
shlb
sti
sti
and
int
jecxz
mov
adcl
imul
test
insl
sub
adc
call
dec
adc
movl
mov
adc
add
cltd
je
mov
jb
add
fs
lock
dec
dec
aaa
outsb
scas
adc
pop
add
lds
mov
dec
cltd
cld
jge
and
out
movsl
xor
adc
ret
or
or
add
popf
mov
pop
stos
push
jl
mov
dec
push
inc
cmp
js
xor
aaa
mov
push
pusha
lods
bnd
into
lods
out
adc
repz
jl
aas
and
sbb
jle
js
movsb
call
lods
rol
and
push
aam
repz
xor
push
ret
mov
or
popa
push
shrb
pop
std
or
fstl
add
cmpsb
inc
lds
test
insl
aam
aaa
fs
or
loope
jl
adc
adc
push
ljmp
shll
ljmp
sti
mov
rolb
cmp
iret
xchg
faddp
jns
mov
or
and
mov
mov
mov
xor
mov
pop
dec
dec
pushf
dec
and
dec
pop
dec
loop
gs
adc
shlb
dec
pop
add
adc
dec
mov
in
mov
insb
push
pop
xor
or
sub
add
adc
pop
dec
stos
xchg
dec
cs
xchg
adc
jnp
and
in
push
pop
cmp
sbb
dec
lods
leave
leave
stc
mov
sbb
pusha
xchg
mov
in
mov
dec
ficomps
push
dec
push
js
lcall
cmp
cmp
xor
sbb
push
ret
push
cmp
stos
push
lock
fldcw
sahf
aaa
out
sub
mov
enter
dec
sahf
gs
mov
pushf
inc
repz
or
imul
je
pop
xorl
iret
mov
or
add
mov
arpl
adc
pop
adc
movsb
nop
sbb
xor
dec
jno
sub
mov
hlt
es
push
aad
lods
sbb
and
mov
mull
jge
stos
dec
in
arpl
jae
or
add
test
pushf
mov
xchg
fistl
jle
jae
dec
lods
into
lret
into
jmp
fwait
popf
push
fdivl
lahf
dec
sbb
or
inc
call
mov
nop
adc
push
cmp
jle
fdivs
mov
fdivr
or
mov
mov
mov
pop
xor
out
mov
gs
insl
sahf
mov
std
push
fninit
push
adc
sbb
adc
fwait
sub
int
push
ficomps
adc
mov
push
daa
mov
int
lahf
mov
mov
lahf
lds
popl
jg
lahf
in
loopne
notl
ja
inc
sbb
dec
cmp
jg
pop
mov
lret
scas
mov
jecxz
sbb
sbb
sbb
xor
mov
movsl
xor
pop
sbb
sbb
rcr
mov
mov
adc
les
leave
rorb
mov
les
lods
pop
in
jb
mov
xor
ds
pop
pop
push
sbb
into
jg
lret
shll
mov
jecxz
adc
inc
mov
cwtl
rorb
cmp
dec
aam
repnz
into
adc
pop
cmpsb
test
fwait
adc
push
lods
out
pop
cmp
int3
imul
aaa
popf
mov
mov
shlb
dec
cltd
or
das
mov
imul
imul
movsl
xchg
ja
ret
lods
lahf
adc
mov
mov
adc
rcrl
int3
pop
xor
addb
fwait
outsl
mov
and
push
mov
sub
push
sub
lret
sub
leave
mov
xor
test
inc
pusha
fidivs
push
cld
mov
fucomip
jb
cmp
and
mov
mov
sbb
jnp
mov
jnp
cwtl
xor
pop
jae
jne
push
jle
stos
aad
xor
add
lahf
inc
jg
lret
fstpt
xchg
cwtl
jg
dec
inc
pushf
push
push
add
sub
lock
sbb
jl
daa
and
mov
out
cmp
repz
jae
xor
fdivrl
jne
ja
das
mov
bound
push
add
movsb
mov
sub
scas
push
bnd
or
mov
pop
push
sahf
pop
movsl
cmc
and
test
mov
popf
lahf
mov
repz
ds
sub
push
in
js
lock
and
adc
sbb
test
push
jbe
mov
iret
xchg
mov
movsb
test
bnd
push
sub
or
in
mov
xor
dec
das
sbb
mov
je
or
shlb
stos
enter
dec
aam
fildl
or
push
mov
sbb
xchg
aas
incb
lret
xlat
fists
js
rclb
adc
sbb
mov
inc
out
inc
je
add
enter
inc
sbb
out
mov
or
test
es
lea
rcr
sbb
sbb
mov
mov
inc
mov
lahf
and
fwait
push
je
fs
insb
sbb
ja
dec
dec
xor
cmp
xor
or
dec
inc
sahf
cli
imul
daa
clc
into
std
setnp
pop
dec
pushf
mov
cmp
and
or
or
imulb
sarb
nop
xlat
stos
sahf
jb
sub
pop
sbb
pushf
cs
mov
sahf
das
xchg
stc
cli
in
test
cmp
jmp
add
mov
outsl
lods
mov
mov
mov
sub
cld
cmp
xor
bound
cli
cli
icebp
sbb
cmc
cmp
cmpsl
xlat
popf
dec
std
andl
add
mov
fwait
xor
push
daa
enter
mov
cmpsl
jnp
test
mov
call
pushf
jl
sub
pop
pop
push
aas
adc
es
dec
daa
adc
movsl
pushl
or
imul
pop
lock
dec
filds
pop
mov
call
sbb
mov
add
rcrl
and
dec
mov
inc
sarb
cmp
sub
mov
test
mov
mov
popf
aad
push
cmpsl
xchg
test
dec
mov
pop
mov
leave
xchg
pop
bound
negb
fnstcw
jb
movsb
xchg
add
push
mov
test
lret
mov
add
xlat
lahf
sub
xor
xchg
addl
sbb
pop
xor
popw
push
cwtl
dec
cmc
sbb
fcmovbe
rolb
lret
movsb
inc
inc
popf
push
pop
fsubl
cmp
mov
mov
repz
cmpsl
sarb
mov
shrb
mov
repnz
pop
shrb
out
ret
out
mov
dec
pop
insl
inc
inc
inc
mov
jno
or
or
ret
sahf
jle
xor
cmpsl
push
mov
jns
rcrl
ret
inc
mov
pop
mov
adc
cs
es
in
fcmovb
mov
mov
rcrl
pushf
in
pop
mov
ret
mov
cmp
les
inc
push
dec
dec
mov
outsb
les
fldl
push
cmp
push
stc
cmovl
mov
pushf
adc
pushl
push
or
icebp
mov
das
adcl
inc
mov
adc
push
pushf
pop
out
jp
stos
xor
fucomp
push
add
stos
repnz
xchg
jle
pusha
stos
xor
into
fcom
pop
fdivrl
jne
leave
loop
mov
mov
hlt
je
xchg
shrl
in
jne
dec
dec
or
es
das
or
or
mov
and
pop
inc
inc
imul
lcall
gs
xchg
mov
dec
adc
inc
aas
and
movsl
mov
cmpb
lret
mov
in
and
fwait
shrb
mov
push
and
shrb
ffree
fldcw
mov
mov
or
ret
nop
sub
push
cmp
cmp
loopne
mov
imul
add
shl
sbb
leave
mov
pop
dec
sbb
popf
fists
ret
out
aas
cmpsl
xlat
or
inc
xlat
pop
mov
jp
fwait
push
add
xchg
add
mov
adc
mov
jge
imul
lret
mov
xor
xor
or
kandnb
jb
mov
inc
ret
adc
hlt
jl
push
xchg
dec
xlat
mov
dec
sahf
mov
dec
cmpl
push
mov
enter
into
sbb
sbb
sti
mov
addr16
add
aaa
mov
je
mov
ss
cmp
icebp
shrb
mov
idiv
and
push
leave
sbb
add
xchg
sub
movsb
leave
cmp
mov
sub
pushf
cmp
mov
mov
imul
lahf
sub
jg
cmpsb
push
push
adc
fistps
in
adcl
int3
mov
lock
lahf
fists
jle
push
jae
int3
mov
js
sbbb
stos
add
inc
pop
mov
xchg
sbb
sbb
jp
stc
mov
fucomip
push
lods
inc
mov
pop
mov
cmpsl
jnp
mov
lahf
mulb
es
das
int
pop
test
jmp
aam
xchg
cmp
lret
adc
jbe
scas
ds
mov
and
xor
movsl
mov
enter
into
fwait
pop
xlat
sahf
mov
faddl
loopne
sbb
pop
add
cwtl
xchg
xchg
shlb
cld
jg
fs
int3
addr16
or
loop
popa
lret
xchg
and
test
in
mov
repz
pusha
std
xchg
xlat
outsl
xchg
bound
pop
in
xor
dec
test
xlat
stos
std
xor
add
pop
add
aaa
mov
jae
in
fnstenv
shlb
mov
in
xor
hlt
mov
inc
mov
pop
jb
lds
rcrb
add
stos
adc
dec
sub
pop
call
jle
rclb
sub
cmpsb
push
inc
lods
mov
pop
mov
fcompl
aam
icebp
fwait
lea
aas
movsb
pop
mov
pop
fs
clc
je
imulb
sbb
fmulp
clc
fsubr
mov
cltd
pop
inc
jo
xor
scas
mov
in
stos
sub
sub
outsb
jg
iret
sbb
pop
repz
stos
xlat
mov
push
nop
adc
test
add
inc
pop
sub
sahf
xchg
int3
addr16
mulb
push
insl
jnp
sbb
push
clc
cmpsl
stc
aaa
dec
scas
movsl
stos
jge
fcmovnu
in
or
xor
repz
cmp
repz
in
idivb
or
inc
cltd
sbb
push
jne
sub
imul
jno
pop
fistps
ljmp
mov
xlat
fmul
cltd
adc
outsb
cmp
in
push
je
cmp
adc
test
dec
imull
test
aam
ds
sbb
cmp
mov
jmp
call
inc
cltd
hlt
pavgb
xchg
mov
outsb
xchg
out
insl
fcomps
push
adc
test
iret
or
inc
mov
mov
push
fadds
xor
pop
pop
inc
ret
mov
xsave
les
inc
add
and
or
loop
cwtl
bound
sarb
sbb
test
jge
push
sub
mov
xor
cmpsl
testl
dec
mov
xchg
jecxz
xor
dec
cmpsl
xchg
test
scas
or
and
fists
sbb
pop
in
or
adc
mov
jmp
fwait
rclb
bound
outsb
fistpll
js
inc
sub
xchg
inc
rcll
dec
sarb
jg
enterw
mov
adc
scas
push
mov
ds
and
cmp
repz
sbbl
cmovb
repz
push
adc
xchg
adc
push
aaa
out
or
fcoms
insb
mov
mov
or
pop
lret
mov
mov
sbb
pop
lock
ffreep
pop
call
mov
sbb
cmp
sbb
push
outsb
sbb
lds
sbb
leave
cmpb
nop
mov
adc
lahf
xor
jno
test
inc
stos
push
and
in
push
test
jmp
push
dec
cmp
fsub
inc
and
push
mov
and
xor
daa
push
cld
xor
testb
movsl
adc
lcall
push
pop
mov
dec
lods
ja
cmp
xchg
test
sti
pop
xchg
fists
cld
jmp
sti
and
mov
inc
aam
js
or
push
std
inc
ds
xchg
sub
sub
dec
loopne
aas
adc
in
inc
gs
mov
and
mov
jb
jb
out
cmp
sbb
mov
je
imul
mov
xchg
out
cwtl
std
fisubrs
popf
jecxz
mov
fidivrl
das
or
repz
sub
or
jecxz
mov
jl
dec
lahf
std
pusha
lcall
dec
fdivs
lock
add
imul
ss
pop
pop
dec
rorb
dec
pushf
mov
sbb
sbb
lret
sbb
inc
mov
mov
jmp
add
cmp
stos
dec
popf
lret
add
inc
dec
mov
dec
mov
fisubrl
rorl
xchg
dec
fsubrs
cltd
or
or
push
cltd
fstl
fwait
mov
dec
cmp
in
jge
push
mov
cmp
xor
and
cmp
inc
stc
gs
lahf
mov
sbb
or
aas
mov
gs
mov
bound
mov
xchg
sub
xchg
fs
test
pop
lahf
iret
sbb
push
cmc
ja
lea
ds
inc
maskmovq
testl
dec
sahf
gs
ficomps
iret
sbb
fld1
repz
inc
mov
lahf
aas
push
clc
xor
mov
sbb
testl
cwtl
mov
nop
dec
sbb
cltd
nop
mov
xchg
inc
jo
into
addr16
adc
mov
outsl
push
add
je
lods
mov
pop
inc
mov
mov
xorb
inc
push
data16
and
lret
inc
rcrl
xchg
sub
sub
push
fistl
lahf
mov
jnp
shlb
test
lds
test
scas
inc
pushf
ret
adc
andl
add
nop
dec
sbb
insl
pop
cmc
pop
enter
cmpsb
push
and
adc
hlt
inc
sbb
jno
cltd
repz
lahf
outsl
cmovb
jo
xor
push
adc
or
inc
sub
mov
aaa
incb
or
xchg
sub
sub
fwait
nop
mov
push
dec
cmpl
adc
into
xor
mov
clc
ds
mov
gs
sbb
aaa
and
sbb
mov
aas
aam
das
inc
stos
lret
ljmp
dec
and
jne
les
pop
movsb
shrb
in
mov
ss
mov
push
lock
mov
xor
call
leave
or
xchg
dec
cmpsl
push
rsm
jecxz
jg
in
ret
add
clc
jbe
xor
push
mov
test
xchg
inc
dec
pop
cmpsl
jb
xchg
leave
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
test
dec
aam
jns
pop
and
or
add
jl
mov
cmp
pop
gs
out
mov
movsb
xchg
inc
jb
jnp
es
xor
add
mov
cltd
pop
jo
shrb
pop
cmc
hlt
mov
xchg
repz
dec
and
mov
mov
test
add
imul
pop
fninit
test
movl
aam
mov
pop
cli
inc
insl
cltd
dec
and
stos
cli
ss
arpl
lea
setp
fildll
xchg
xor
cmpsl
iret
aad
leave
inc
les
test
push
cmp
ret
fstps
lock
sbb
cltd
lret
stos
mov
add
ds
pop
test
lods
jne
scas
dec
mov
addr16
popf
push
adc
leave
loop
xchg
js
sbb
mov
add
mov
sub
xchg
insb
test
add
mov
xchg
stc
xchg
das
sub
mov
bound
pop
inc
jmp
xor
push
sbb
bound
rclb
rcrl
sbb
sbb
mov
dec
dec
andl
dec
mov
xchg
popl
xor
mov
aam
fwait
pop
xchg
xchg
fisubs
pop
mov
sbb
gs
dec
aaa
mov
mov
add
fsubrl
cwtl
ds
sbb
inc
cmpsb
xchg
adc
sub
in
fldt
ss
dec
push
add
in
jno
jge
push
cmp
cmp
pushf
pop
clc
mov
nop
pushl
sub
xchg
adc
sub
mov
jns
enter
jmp
stos
sahf
lahf
mov
fistps
xchg
cmp
jl
js
cltd
in
idivl
or
repnz
test
lcall
stc
sbb
iret
lahf
push
and
push
aam
ret
lret
jge
jmp
out
mov
mov
jb
fidivl
popf
iret
data16
cmp
outsl
xchg
popf
mov
mov
push
jle
push
dec
lcall
jo
lahf
jbe
sti
int
divl
or
imul
sub
clc
cmp
into
cwtl
fnstenv
add
push
xor
icebp
xor
fwait
cld
jg
js
leave
faddl
push
lock
lahf
push
push
stos
lds
push
clc
shlb
or
mov
pusha
xor
rcrl
jl
cltd
sub
outsb
push
int3
or
sbb
imul
mov
and
in
rol
or
jno
pop
popf
pop
ljmp
sbbb
and
subl
rclb
sub
clc
add
dec
dec
fidivrl
inc
repz
lods
ret
xchg
js
xchg
ja
pop
lahf
cmpsl
jnp
sti
add
jmp
fisubs
es
movsb
int
pop
test
loope
jl
imul
adcb
lret
adc
jbe
and
pop
or
mov
and
cmp
and
bound
hlt
mov
mov
sbb
mov
and
nop
hlt
into
pop
adc
popf
int3
addr16
lock
shll
test
aad
push
dec
xor
push
lret
pop
lock
pop
inc
sbb
mov
popf
lret
add
push
dec
mov
cmp
adc
fisttpl
mov
das
push
lods
jle
cmp
in
int
push
mov
sahf
popf
pop
lret
jo
in
mov
ss
cmp
pop
std
add
cmp
ljmp
js
insb
packuswb
roll
xchg
pop
test
sub
or
lahf
notb
cli
mov
and
jae
jecxz
sbb
jecxz
sub
lods
imul
popa
xchg
hlt
cltd
sahf
push
test
into
pop
stos
roll
and
mov
outsl
clc
push
inc
sbb
or
jecxz
gs
mov
pop
sub
addl
push
adc
mov
sbb
jl
or
test
dec
push
mov
test
clc
mov
pop
jg
inc
xor
mov
jnp
in
fists
jae
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
or
shlb
push
sbb
lret
sub
sub
jp
fists
mov
leave
lret
xchg
add
stos
pushl
sbb
and
inc
adc
inc
mov
clc
jb
add
mov
jge
xor
cmp
gs
dec
push
push
cmovb
xchg
mov
insb
push
mov
test
mov
loop
cmp
push
push
dec
pop
mov
lods
inc
pop
cmp
mov
or
push
mov
ss
pusha
shl
mov
pop
adc
push
mov
jnp
mov
imul
mov
mov
inc
pop
lret
xchg
sub
inc
test
rcll
push
aad
xor
push
sbb
inc
loopne
dec
push
add
movsb
leave
push
int
sub
sahf
xchg
in
push
shlb
shll
or
mov
or
adc
ss
lock
mov
mov
dec
cmp
mov
jmp
enter
mov
int
ror
inc
adc
dec
in
jecxz
dec
inc
cmp
cmp
fwait
jmp
test
out
and
push
mov
push
gs
or
lods
popf
ljmp
mov
aas
scas
ret
inc
push
push
or
and
cwtl
dec
add
mov
xchg
lret
dec
cmp
sub
out
sub
aaa
sub
divb
fldpi
loop
ja
js
cmp
fists
mov
mov
or
pushf
sbb
lahf
or
ret
inc
test
sar
sub
jge
les
xchg
sti
xchg
ret
dec
sub
lahf
clc
jmp
sbb
je
divl
mov
dec
mov
push
or
mov
aaa
pop
outsl
sarb
scas
out
fistl
pop
cld
push
enter
mov
jmp
mov
mov
testl
cmp
or
push
subb
adc
mov
add
mov
xor
mov
or
push
frstor
xchg
mov
fsubs
xor
mov
and
hlt
test
idiv
push
das
fsubrs
loopne
aad
imul
xchg
mov
pop
push
cmp
mov
lods
lea
add
sahf
cld
enter
mov
andl
div
mov
testb
dec
pushf
inc
pop
xor
cmp
test
ljmp
jne
std
xor
mov
push
test
fists
loopne
stos
ret
xor
inc
dec
retw
inc
pop
pop
adc
sub
adc
mov
push
jae
mov
mov
rcrb
add
sbb
mov
pop
int3
adc
enter
mov
pop
shll
lcall
clc
enterw
mov
inc
imul
xchg
mov
push
pop
xchg
imul
mov
cmovge
mov
sti
and
js
sbb
or
stc
dec
cwtl
lea
and
xchg
dec
inc
jne
jnp
jo
sub
cmpsb
repz
movsl
imull
in
test
iret
sbb
xor
mov
jb
mov
adc
popa
push
sub
lods
xchg
sub
adc
xor
shll
inc
lock
xchg
mov
pop
cltd
mov
mov
jmp
mov
xchg
dec
mov
cmp
int
mov
mov
or
jb
in
lods
push
xor
mov
jp
ljmp
repnz
mov
jo
mov
inc
andl
add
inc
jne
sbb
pop
leave
lods
mov
inc
popf
ljmp
xchg
cmp
jecxz
inc
and
and
mov
js
fwait
lea
iret
sbb
inc
enter
dec
or
subl
fistl
jmp
inc
sbb
mov
shlb
sbb
insl
xchg
movsb
mov
lods
pushl
inc
sub
mov
daa
sahf
mov
cmp
mov
jo
out
ja
loope
dec
sbb
mov
mov
aam
test
mov
push
test
xor
adc
jp
pop
sbb
mov
imul
mov
lds
test
dec
and
or
loopne
add
push
sbb
fisubrl
lahf
imul
sbb
cwtl
or
lods
cmp
stos
aas
lahf
inc
lahf
scas
fcomi
stc
hlt
les
inc
fwait
leave
loop
or
push
cmp
xor
pushl
mov
sbb
daa
sub
push
mov
xchg
dec
push
push
sub
cmp
dec
cs
lcall
jns
enterw
inc
or
test
mov
mov
or
mov
xchg
sbb
rcrb
stos
popa
xor
fsubrs
inc
inc
push
mov
or
add
jp
je
repz
inc
adc
cmp
int
jo
mov
or
inc
sub
xor
pop
fsubrs
dec
pop
xorb
imul
push
dec
into
lcall
or
xchg
mov
sbb
int
mov
ss
jg
push
xchg
stos
vshufps
inc
daa
push
jae
and
movsb
push
rcl
lea
push
mov
add
cmp
or
inc
or
loop
in
sbb
inc
orl
loop
add
xchg
jle
out
jp
push
addr16
bound
mov
xchg
std
aad
sub
cld
pop
fisubrs
pop
xor
mov
xor
jno
fxch
inc
xor
js
mov
hlt
jl
sub
test
xchg
dec
inc
cmc
xor
pop
das
or
or
lahf
push
sub
xchg
dec
sbb
and
outsl
clc
shll
mov
fs
jle
xlat
in
cli
lock
ret
xchg
int3
arpl
sbb
aaa
mov
out
and
rcll
inc
test
sbb
xlat
shlb
fcoml
pop
insb
mov
mov
adc
xchg
stos
lds
sbb
stos
xchg
fimull
sbb
fwait
seto
leave
in
es
mov
inc
add
dec
ss
add
push
movsb
dec
and
imul
inc
pusha
rcrb
lock
jl
add
mov
inc
lret
mov
pop
insl
inc
fwait
sub
sbb
xor
gs
loope
or
xlat
xchg
sub
push
hlt
test
mov
jmp
mov
mov
pop
adc
and
mov
jns
add
inc
mov
lret
aaa
icebp
add
sub
into
in
ja
shlb
mov
sbbb
push
cwtl
addr16
sbb
jge
sarl
mov
jb
aam
mov
sub
cmc
sbb
cmp
lods
rclb
rcr
mov
nop
pop
das
push
inc
mov
pop
jmp
ficoml
inc
sub
cmpsb
pop
cmc
xchg
pop
cmpsl
sub
xor
imul
in
mov
in
bnd
jmp
inc
fwait
iret
sbb
add
cmp
or
sub
add
push
jecxz
cwtl
dec
cmp
ret
push
sub
cmpsb
call
inc
dec
fnsave
cmp
popf
and
adc
jp
gs
push
test
dec
xchg
xchg
xchg
and
stos
sub
das
in
xor
int
jp
dec
call
pop
or
mov
mov
push
pop
jno
mov
lahf
in
imul
mov
mov
add
iret
cmp
xchg
adc
pop
lods
pushf
sysenter
test
add
rorl
inc
lahf
jne
movsb
out
mov
or
shll
mov
imull
sarl
scas
jecxz
bnd
add
cwtl
daa
sbb
pop
mov
add
inc
sbb
flds
push
push
mov
fucomi
in
into
xor
inc
add
mov
je
ja
mov
mov
jnp
jno
and
mov
pusha
xor
into
sub
jl
jg
cmpsl
test
push
push
pushfw
jb
inc
mov
pushf
jnp
bswap
jecxz
mov
pop
out
mov
cmc
xor
inc
adc
add
int3
fwait
mov
in
and
js
loope
mov
or
cmc
lret
std
dec
mov
ss
pop
dec
testb
enter
addr16
stos
mov
and
mov
movsl
add
jns
mov
sti
cmpsl
in
fbstp
addr16
fisttpll
add
ret
sub
retw
in
mov
leave
test
fistl
sbb
mov
mov
fcoml
jne
lods
jno
movsb
lods
lret
fs
fcmovnb
cmp
std
cli
jnp
inc
mov
adc
lcall
aam
cmp
inc
lods
test
pop
sbb
mov
pop
cmpsb
push
push
in
cltd
jmp
dec
add
dec
ror
jb
fwait
insl
add
arpl
bound
inc
popf
mov
repnz
mov
fwait
ja
int
insb
hlt
push
sahf
ljmp
add
adc
jne
aam
stos
inc
sahf
push
and
cmp
aaa
lock
or
mov
dec
sbb
cltd
orb
loop
jno
iret
dec
lock
ljmp
stos
dec
in
std
dec
sbb
lods
cli
mov
lret
pusha
add
je
or
sub
cmp
or
cmp
adc
mov
les
stos
jbe
sbbb
pop
dec
data16
test
scas
std
stc
loope
aad
add
or
push
mov
jo
or
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
adcb
inc
inc
mov
cmpsl
ret
mov
nop
sar
push
dec
jmp
idivl
ret
mov
cwtl
cmp
loope
dec
sbb
cmp
jle
sti
push
xchg
xchg
test
ficompl
les
call
iret
fucomip
daa
clc
ds
aas
dec
ret
mov
xor
dec
aaa
and
orb
or
or
ret
outsb
sbb
xlat
xchg
push
hlt
cmpsl
icebp
ficomps
fisttpll
or
lret
push
add
adc
sti
test
flds
lahf
clc
xor
jno
inc
rolb
cmp
dec
sub
cld
xor
and
jp
ds
les
lcall
pop
sar
lds
pop
inc
aam
sbb
pop
fmuls
fists
faddp
arpl
mov
xor
add
adc
xchg
adc
or
decl
jnp
inc
push
mov
or
mov
aam
fdivrs
jp
call
push
or
lods
jp
xor
fwait
mov
mov
cwtl
cltd
add
cmpsl
imul
cmp
sub
popf
xchg
push
mov
sarb
cmp
pop
add
test
sbb
movsl
push
hlt
cmp
and
inc
test
cltd
fs
xchg
jo
pop
xchg
mov
xchg
sub
pushf
ss
sub
aam
mov
and
push
nop
mov
test
fadds
in
mov
lret
fucomp
jae
jns
mov
popf
lret
popa
ret
sbb
jno
les
jnp
scas
xchg
stos
sbb
push
xchg
stos
sbb
adc
sub
enter
pusha
jnp
mov
xor
mov
dec
cld
scas
loopne
dec
fimull
rorb
mov
mov
mov
adc
add
addr16
test
insl
fldcw
push
push
popf
imul
mov
sbb
jb
das
mov
pusha
mov
xchg
sub
xchg
je
push
pushf
ja
inc
jne
dec
fs
push
dec
popf
pop
fnstsw
rcrb
adc
sbb
push
pop
add
addr16
cmp
call
pop
pusha
xor
mov
pop
xor
xchg
lods
dec
xchg
cmc
cld
or
aas
push
mov
xor
sbb
xchg
lret
jmp
xchg
sbb
mov
popf
push
call
test
xchg
lds
xlat
mov
push
sarb
shlb
xchg
in
dec
fucom
in
cmp
lahf
stc
lock
push
arpl
fstpl
xchg
cmp
or
data16
sti
and
mov
inc
and
or
dec
shlb
sbb
lock
dec
pusha
push
lods
stos
icebp
mov
fistps
xor
pop
jb
push
outsl
pop
or
popf
push
add
mov
test
inc
add
mov
xchg
cmp
or
mov
xorb
push
mov
adc
ret
pop
pop
xor
sbb
test
lcall
inc
mov
pop
out
dec
adc
cmpsb
push
push
lret
imul
out
sub
scas
ljmp
bound
les
adc
inc
pop
jnp
add
jl
cltd
fistl
ds
and
sub
jno
lds
pushf
rcl
mov
lods
and
inc
bound
mov
inc
or
lret
sbb
sarb
add
mov
xchg
lock
mov
pop
jno
mov
push
cmp
cmp
cmp
loope
or
xchg
pop
mov
lds
outsb
mov
mov
pushf
cmp
and
popf
xchg
push
adc
pop
xchg
lcall
mov
loope
pop
daa
xchg
and
or
fsubr
out
popa
cmpsl
fwait
jo
jp
add
ror
test
ret
test
lret
jns
lds
nop
lds
push
adc
mov
mov
mov
outsb
xor
mov
cmp
xchg
ret
cli
jae
movsl
dec
xor
inc
push
pop
pop
pop
sbb
mov
ss
mov
xchg
test
movsb
mov
xchg
call
adc
loop
daa
ror
add
or
sbb
rorl
les
out
jecxz
mov
jo
inc
inc
sub
push
cld
cltd
outsl
inc
rcrl
xchg
mov
icebp
push
movsl
sub
mov
in
add
repnz
movsb
es
rcrb
popa
sub
adc
ror
ds
mov
sub
cmp
inc
cmpsb
lds
mov
shll
nop
rorb
xchg
stos
inc
push
push
mov
shll
test
stc
mov
sbb
mov
fistpl
or
add
leave
sbb
movsb
ret
mov
scas
ljmp
mov
inc
jno
in
dec
rorb
fmuls
cmp
or
lcall
adc
stos
add
cltd
xor
fidivl
lahf
xor
sub
dec
add
push
sub
pop
ret
addl
mull
mov
sbb
pop
lret
fwait
xor
xchg
push
pop
adc
stos
fldt
rcrl
mov
fwait
and
inc
cltd
enter
xchg
xorl
push
add
movsl
jne
test
enter
dec
and
mov
pop
pop
add
cmp
cmp
lahf
xchg
notl
sbb
cld
mov
pop
sbb
mov
inc
les
pop
mov
repnz
cmp
in
out
or
ficoml
mov
sbb
and
or
lcall
arpl
mov
fldt
aam
int3
call
xchg
add
cmpsb
mov
sbbb
loope
xchg
and
add
js
push
add
xchg
les
mov
scas
push
pop
add
mov
imul
or
inc
dec
push
xlat
mov
jmp
mov
fwait
jmp
data16
inc
mov
es
sub
sub
fsts
inc
inc
ret
push
xchg
adc
les
push
mov
bound
scas
cmpsl
jb
inc
cmp
xor
add
mov
pop
sbbb
or
mov
push
mov
test
ja
pop
scas
decl
xlat
and
pop
ds
jg
and
mov
add
rcrl
sbbl
and
ret
cltd
mov
stos
test
pop
stos
push
inc
push
dec
or
sbb
lods
xchg
jp
stc
dec
pop
jl
push
sub
lret
or
test
arpl
mov
stos
jge
pop
mov
mov
fs
pop
pushf
cmp
sbb
pusha
jle
das
fstpl
outsb
js
int3
mov
icebp
or
mov
cmp
orl
in
movsb
sbb
test
dec
les
cmp
les
mov
xchg
push
push
xchg
sarb
inc
in
insl
sbb
fucomi
hlt
std
mov
sti
and
repz
test
dec
push
or
or
imul
pop
pop
mov
subl
fstpl
mov
test
std
jb
add
rep
pusha
lahf
repnz
aaa
hlt
cmp
add
cld
sarl
fs
adc
fwait
ja
lods
jmp
lret
rclb
push
mov
in
fnstsw
neg
fucomp
cltd
mov
popf
lret
sub
xchg
dec
in
idivb
fstpt
cmp
mov
or
lods
arpl
loope
out
test
lods
aaa
mov
lahf
inc
mov
mov
mov
enter
mov
or
es
add
movsb
rorl
out
scas
addr16
or
mov
or
pop
int3
in
mov
pop
cmc
stos
pop
fs
pop
iret
outsb
aaa
popf
mov
fcmovbe
insb
aaa
shrb
sub
or
sub
jmp
jge
adc
inc
inc
inc
arpl
sub
aaa
fsubrs
pop
mov
andl
mov
push
xchg
negl
daa
mov
daa
mov
sbb
out
subl
and
mov
pop
cli
jnp
dec
sbb
imul
xchg
xor
push
adc
mov
sbb
sbb
push
jl
mov
pop
repz
cmc
idivb
or
imul
push
mov
add
js
push
enter
lahf
mov
ret
xchg
leave
out
loopne
inc
mov
mov
jl
jno
sbb
lods
adc
hlt
jp
cltd
bnd
pop
aas
mov
xlat
insb
ljmp
jmp
dec
ret
sti
cmp
fidivrs
push
cmc
incb
int
dec
movsb
inc
movsl
aam
push
inc
mov
ljmp
mov
fisubrs
addr16
mov
dec
sahf
dec
mov
sbb
shr
mov
mov
loopne
dec
mov
clc
cmp
xor
lcall
adc
fcmovnb
add
jmp
cld
inc
insl
cwtl
repz
lahf
mov
mov
nop
jecxz
push
lret
push
and
mov
loop
mov
lret
jmp
mov
xor
test
inc
clc
movsl
sbb
lds
lcall
cmpsb
push
push
mov
mov
mov
mov
push
push
in
arpl
sbb
or
or
cld
loop
pop
jns
mov
addl
ret
rcll
push
fsubs
pop
cmc
add
sub
test
out
xor
pop
insl
stc
mov
lret
es
gs
push
and
mov
xchg
int3
addr16
cwtl
pop
sbb
cmpsl
and
or
jmp
js
test
or
pop
ljmp
cmp
add
mov
cmp
jp
add
adc
popa
mov
jecxz
iret
imul
lret
gs
dec
pushf
jbe
push
jns
sub
cmp
sub
cmc
sbb
push
sbb
std
cmpsl
pop
adc
xchg
xor
sbb
stos
dec
popa
pushf
mov
sub
mov
pushf
jne
cwtl
mov
lods
mov
mulb
rep
inc
sbb
scas
and
mov
sbb
lock
and
sub
add
aas
js
or
dec
icebp
or
add
jp
test
shl
mov
xchg
ds
cmp
mov
lea
in
daa
gs
jne
scas
push
test
cmc
push
mov
pop
or
sbbb
push
out
cmc
push
add
cmpsl
adc
add
mov
insl
pop
adcl
dec
ret
fimuls
mov
sub
ljmp
imul
ds
ret
fs
ret
jle
in
fildll
xchg
leave
hlt
test
inc
mov
fisttpll
mov
std
mov
ficoml
xchg
int
mov
adc
ficoml
lcall
inc
leave
dec
jb
dec
lods
jle
pop
sub
cltd
jbe
sub
int3
scas
inc
cwtl
jg
js
into
scas
push
fs
inc
add
sbbl
scas
addb
shll
mov
xor
dec
fisubl
and
push
cmp
sbb
mov
or
push
popf
xchg
stos
cmp
fcom
mov
mov
or
loopne
je
sbb
aaa
imul
mov
fldpi
mov
roll
or
into
pop
lods
sub
jp
mov
loope
mov
imul
cmc
lret
test
fistpll
add
sbb
lcall
scas
test
pop
mov
stos
mov
ja
push
test
test
cli
and
jmp
insl
out
lret
rclb
sub
jge
push
inc
imul
jge
sbb
inc
sbb
mov
shrb
enter
mov
sub
ja
mov
inc
fwait
ljmp
scas
cltd
mov
test
jp
mov
cmpsb
out
and
mov
and
lret
and
pop
test
mov
adc
mov
cmp
xchg
fcomi
wbinvd
jle
imul
xor
int
or
mov
xor
push
ret
shl
in
je
add
jecxz
addl
xor
inc
rorb
mov
lods
inc
adc
in
or
and
nop
xor
jp
inc
fistpl
ret
data16
inc
dec
xchg
out
shrl
loop
inc
mov
ret
repz
pop
cld
xor
popa
mov
addb
dec
jge
pop
insl
cmpsl
push
jne
push
jg
mov
cmp
fsubrl
arpl
sbb
std
jbe
popl
mov
or
arpl
mov
std
mov
dec
cmp
bound
out
sbb
dec
push
sub
fcoml
xchg
fwait
pop
pop
lods
gs
popf
sbb
pop
mov
add
push
and
mov
adc
xchg
cmp
xor
or
pop
stc
ss
push
xchg
pop
mov
daa
clc
iret
cmpsl
or
outsl
pop
adc
adc
xor
add
pushf
push
push
lods
xchg
sub
adc
inc
in
lods
dec
sbb
repnz
sub
scas
cmpsl
scas
push
clc
mov
bound
mov
ret
push
lock
cmp
adc
cmp
pop
jnp
cmp
adc
jl
cmpl
lret
jmp
rclb
pushf
and
add
or
push
in
or
fildll
mov
sub
push
mov
fwait
xor
mov
fcoml
cmp
mov
test
cmp
push
jns
cwtl
dec
inc
push
xor
adc
inc
sbb
push
imul
ret
fildll
stos
shll
andb
test
pusha
xor
xlat
mov
cmp
hlt
jge
sbb
aaa
inc
sub
outsl
mov
and
insb
push
pop
xchg
push
jbe
in
or
mov
cli
xlat
xor
in
lret
sbb
add
mov
ds
mov
push
in
inc
or
xchg
mov
movsl
dec
and
icebp
fcoms
test
xchg
add
dec
out
xchg
pop
gs
arpl
clc
and
pusha
dec
fdivrl
mov
nop
mov
inc
out
decl
setb
mov
popf
push
lea
data16
push
icebp
jns
xchg
sbb
mov
pop
scas
dec
sub
push
mov
fwait
dec
adc
aam
fs
jb
stos
ja
outsb
sbb
mov
jle
aaa
int3
add
dec
sbb
inc
inc
pop
lock
stos
inc
cli
or
jecxz
in
cmp
pop
jae,pt
cmpsl
add
scas
loope
mov
fwait
inc
test
adc
loop
iret
fadds
js
divl
test
test
lcall
push
lret
mov
jmp
xlat
stos
mov
fbld
push
sbb
test
rep
push
dec
popf
lret
adc
sub
inc
sbb
or
add
lret
stos
xchg
fimull
fidivl
xorb
insl
mov
xor
sbb
cld
or
ret
xor
pop
es
or
or
dec
cltd
std
adc
out
jge
sbb
cmp
sti
inc
jp
or
lret
leave
aad
sahf
sbb
lahf
cmpsl
ret
adc
or
and
xchg
and
out
dec
adc
add
or
pop
mov
inc
mov
lods
mov
je
mov
int
rcrb
push
inc
dec
out
mov
sub
xorl
xchg
ficomps
je
push
xchg
xchg
pop
push
shlb
aad
lcall
inc
pop
stos
dec
pusha
fmuls
ficoms
mov
shlb
jp
mov
push
out
fsts
shl
dec
out
dec
cmpsl
push
sub
xor
adc
in
clc
mov
movsb
mov
pop
shll
rclb
enter
das
iret
pop
movsl
jb
test
add
adc
xchg
int
je
mov
rclb
stos
mov
sahf
cmp
outsl
mov
sbb
sti
sbb
dec
cltd
cmp
mov
shlb
enter
sbb
movsb
test
dec
or
mulb
das
jge
xchg
pop
cld
push
mov
insl
mov
mov
iret
pop
mov
ret
pop
sub
lods
sbb
nop
cmc
shlb
sub
rolb
xchg
jae
nop
in
loopne
lea
mov
dec
nop
loop
mov
fcmove
fwait
scas
and
xor
xor
les
or
sub
jae
adc
dec
sbb
push
cs
and
dec
pop
and
popf
mov
mov
push
lock
mov
aam
and
pop
and
fcmovu
fsts
mov
xlat
mov
mov
je
mov
shrb
rcrl
pop
and
enter
fsubl
mov
mov
shlb
outsb
aaa
sbb
lahf
pop
sbb
out
mov
mov
lahf
test
repz
mov
inc
inc
jbe
fwait
mov
out
adc
push
add
movsb
mov
xor
mov
inc
adc
pop
adc
mov
out
sub
mov
dec
cmp
adc
cwtl
lret
icebp
push
aad
or
sbb
jo
mov
push
loop
and
pushf
add
es
int3
pop
push
repnz
add
mov
and
popf
sbbl
push
jae
mov
dec
out
xor
imul
jle
xchg
loopne
push
pop
sbb
in
xchg
push
cmp
sbb
scas
mov
pop
loopne
xchg
lds
fsub
sbb
jge
dec
dec
push
shr
shlb
push
jge
int
fs
inc
cmc
or
iret
jno
cmp
dec
fadds
sbb
imul
and
xchg
int
call
mov
dec
hlt
dec
test
jo
mov
out
inc
xchg
enter
out
adc
inc
inc
pop
adc
test
jmp
les
sbb
sbb
cmp
xchg
lea
aaa
mov
lret
bound
mov
cwtl
xchg
rorb
pop
adc
out
lret
mov
insl
inc
out
test
sbb
cltd
fcoml
push
jbe
imul
lcall
cmp
lods
pop
dec
mov
push
cmp
leave
pop
pop
es
mov
cmp
cmpsl
jo
jge
repnz
mov
rcrb
cltd
add
adc
pop
mov
ljmp
leave
push
ficompl
dec
cwtl
ja
enter
clc
sbb
pop
inc
loope
test
jecxz
jno
adc
sub
dec
test
dec
cmpsb
mov
xor
dec
adc
xchg
in
lock
movsl
and
lock
and
and
adc
lock
aas
movl
mov
pop
inc
pop
adc
pop
ret
dec
cmp
mov
dec
icebp
lock
out
repnz
sub
cltd
sbb
pop
sbb
mov
mov
xchg
imul
movsl
adc
popa
inc
ss
les
stos
lds
and
pop
cld
jo
cmp
outsl
stc
dec
lods
cmpsl
cmp
imul
dec
push
subb
pop
bound
jl
jnp
dec
mov
xchg
stos
cltd
fidivrs
outsb
push
push
out
stos
sub
adc
dec
pop
loopne
pop
xor
popf
cmp
xor
or
xchg
inc
stc
sarb
hlt
sub
inc
test
xchg
dec
inc
mov
push
mov
daa
movsl
repz
or
call
decl
add
iret
jecxz
jo
push
inc
inc
add
aad
add
je
ror
les
rorl
cmp
mov
dec
jno
dec
cmpl
mov
inc
mov
push
filds
cmp
push
shl
pop
shlb
ret
xor
daa
int
cmp
push
jae
ret
ss
imul
sub
lds
sub
push
ss
fs
ja
aas
lahf
inc
jg
xlat
add
repnz
cmc
in
cmp
aas
and
pop
push
push
shlb
pushl
jne
sub
test
dec
mov
ret
dec
jge
and
test
lods
scas
ss
mov
dec
fsubl
inc
cmp
xor
push
xchg
pop
xchg
enter
hlt
dec
inc
pop
inc
pushf
je
xchg
sbb
movsb
cld
dec
ret
mov
mov
les
push
inc
mov
mov
mov
add
jp
ret
jl
jg
fbstp
test
pop
mov
mov
out
ja
mov
add
and
jnp
in
add
not
pop
jp
mov
mov
and
push
int3
push
pushf
xchg
and
test
lret
scas
mov
in
xchg
ficompl
sub
push
push
xchg
jnp
dec
dec
xchg
mov
inc
inc
jns
dec
or
hlt
cmp
mov
lahf
pop
xor
rcrb
or
adc
xchg
mov
cwtl
sbb
mov
mov
out
push
test
fildll
std
jg
xchg
xchg
sahf
insl
out
cmp
lock
into
sbb
out
xchg
enter
mov
push
imul
sahf
in
jno
and
arpl
sahf
bound
insl
mov
in
jae
adcb
add
and
mov
push
dec
mov
fistpl
or
xchg
adc
pop
dec
outsb
popf
cmp
push
dec
rclb
push
test
ljmp
add
adc
push
ja
lcall
jb
inc
push
scas
out
add
mov
pop
scas
xor
in
pop
test
sarl
es
add
test
lods
loopne
or
fwait
add
in
sbb
lahf
cmpsl
or
repnz
insb
hlt
jp
fs
mov
movsb
xlat
push
jo
xlat
insb
imul
pusha
jo
mov
in
cmp
push
out
inc
cwtl
dec
inc
aam
sub
or
hlt
jl
push
mov
pusha
pop
out
push
mov
lods
push
adc
or
mov
lret
pop
sahf
mov
rcrl
out
inc
fnstenv
jmp
cmc
cmpsl
inc
pop
aam
in
adc
fnstsw
cwtl
add
xchg
cld
mov
sub
inc
jne
mov
xor
push
incb
jecxz
sbb
mov
push
dec
mov
movsb
imul
mov
dec
mov
mov
insl
leave
pop
ret
sbb
test
and
outsb
ja
sub
aaa
push
call
ret
fs
fnstenv
xlat
pop
inc
decl
adc
jns
and
lods
fadds
jns
pop
pop
push
loope
les
filds
jg
decl
stos
loopne
adc
mov
lods
out
inc
and
lcall
adc
inc
xor
bound
xchg
or
test
sub
dec
push
lret
outsb
dec
sbb
test
shrb
xchg
sti
das
xor
ret
loopne
jl
pop
shrb
clc
cmp
pop
pop
aam
jecxz
inc
push
adc
stos
bound
in
add
add
ficoml
dec
movsl
mov
lock
lahf
mov
cld
push
push
sub
lds
sbb
pop
dec
out
sub
scas
ljmp
inc
xor
jb
sub
cltd
andl
and
push
shlb
xor
push
xor
std
fdivr
push
lret
cltd
jbe
xor
or
inc
dec
push
aam
fildl
rorb
aas
aad
mov
jnp
add
sub
cli
fbld
inc
pop
push
xorl
sbb
and
mov
rcrl
mov
xor
mov
out
das
test
out
ret
test
inc
sub
push
aas
adc
ret
jp
or
int
orl
les
and
dec
inc
fcoml
dec
pop
fwait
mov
lret
jbe
mov
mov
loopne
mov
push
push
cmp
divl
fsts
cmp
cmp
fildl
pusha
jae
mov
mov
xchg
and
jecxz
mov
pushf
dec
and
sarl
jecxz
rorl
mov
push
jle
movsb
test
dec
mov
mov
and
addr16
stc
inc
mov
adc
cmp
gs
pop
and
cmpsl
pop
pop
mov
aad
leave
in
dec
push
jle
lea
xor
es
clc
ds
fs
mov
adc
mov
pop
mov
dec
mov
xor
push
mov
sbb
mov
xor
sahf
xlat
pop
adc
mov
push
ret
test
jnp
fs
dec
xchg
scas
adc
mov
mov
add
fs
adc
mov
movsb
aad
in
jae
repnz
jno
push
aam
jae
mov
arpl
notl
jno
fadds
stos
pop
cld
jmp
int3
sbb
jecxz
icebp
cmp
dec
xlat
cs
cmp
outsb
pop
call
and
arpl
xchg
lret
dec
sub
push
dec
stc
jne
xchg
fildll
aad
jae
fisttpl
add
pushf
jno
xchg
fcomps
arpl
dec
inc
sbb
jo
mov
dec
enter
test
add
jg
stos
dec
fs
fsubs
shr
psubusb
outsl
in
add
mov
in
jns
loope
fwait
add
or
add
sbb
jl
add
sbb
add
xchg
rorl
imul
cwtl
test
adcl
shrl
fyl2xp1
mov
fs
outsl
inc
push
jne
sbb
pop
sti
xor
jle
sarb
out
add
inc
pop
pop
xor
or
subb
rolb
inc
std
pop
jle
xchg
cmc
movsl
jge
ja
daa
out
inc
ret
inc
sahf
fisttps
loope
addl
dec
or
subb
mov
mov
jnp
add
lds
repz
cwtl
add
scas
mov
shlb
xor
pop
pushf
shll
test
jae
pop
imul
jmp
insb
xchg
mov
and
sub
subb
dec
fs
pop
test
sbb
jecxz
mov
hlt
inc
bound
fwait
leave
loop
pop
mov
or
andl
mov
xor
mov
sub
fs
lcall
imul
pusha
jo
lcall
and
mov
iret
sbb
inc
test
push
xchg
dec
push
aaa
test
stos
rclb
xchg
lods
outsb
sub
mov
pop
and
push
sub
and
mov
jl
inc
inc
add
fdivp
jae
mov
hlt
mov
aaa
into
add
cld
cmp
dec
pop
mov
iret
les
shll
leave
mov
inc
stos
test
stos
mov
pop
add
sbb
xchg
mov
mov
mov
push
fsubl
stc
mov
push
test
enter
mov
push
lcall
xchg
dec
dec
stos
xchg
stos
std
bnd
or
mov
xchg
sbb
push
jg
dec
push
xor
dec
cld
loop
or
push
cmp
jle
pop
cltd
loope
add
lods
data16
push
sbb
aam
adc
push
inc
enter
mov
jae
and
scas
adc
ret
xchg
fimuls
fs
adc
and
xor
mov
xor
cmc
das
adc
ret
aaa
adc
prefetch
jmp
xchg
cmc
cltd
sahf
xchg
push
jae
cmp
or
sbb
sarl
lock
daa
jmp
jl
fsts
mov
jecxz
in
add
lcall
hlt
mov
je
aad
imul
sbb
sub
shlb
rcrb
lahf
arpl
mov
mov
adc
dec
rcr
add
insb
fcoms
rorb
cmp
mov
dec
loope
add
inc
pop
loop
or
xchg
pop
scas
jb
test
xor
add
sbb
lahf
sahf
sahf
sbb
or
xchg
fwait
add
mov
inc
and
andl
in
adc
mov
mov
pop
xchg
jmp
lods
mov
sbb
mov
cmp
pop
es
popf
xchg
repz
and
mov
divb
pop
iret
dec
inc
mov
jg
stos
push
mov
dec
call
jne
movsl
in
fbld
push
iret
xchg
add
iret
push
sti
and
pop
out
outsl
sub
sti
aas
sbb
pop
pop
cli
imul
std
popf
pushf
xchg
shr
mov
jne
cmpsl
in
gs
into
mov
dec
xor
les
out
mov
cmc
lret
xchg
std
cmpsl
pop
or
and
das
cltd
sbb
jge
leave
inc
adc
dec
jl
arpl
stc
xor
push
pop
jg
pop
pusha
fidivrs
mov
fbld
xchg
rclb
sbb
mov
sbb
es
or
sbb
rcll
adc
mov
xor
or
xlat
pusha
jo
test
xchg
mov
fwait
in
mov
xor
out
push
loope
xor
mov
mov
and
adc
popf
xchg
jbe
stc
jo
les
call
insl
int3
sub
mov
push
jl
and
fwait
mov
arpl
adc
loop
sbb
cwtl
xor
leave
movsb
jl
pushf
lret
movsl
ret
cltd
jnp
mov
lret
lods
shrl
fbld
lcall
or
fcompl
pop
pop
insb
fcomps
xchg
insl
mov
shrb
inc
xchg
push
xchg
popf
mov
sbb
and
fwait
lods
push
testl
ret
pushf
test
mov
ss
lock
mov
fsubr
inc
andl
out
jae
sub
repz
dec
xor
sbb
or
adc
popa
dec
push
imul
shrb
fs
push
pop
pop
into
cmp
enter
push
movsb
lret
loopne
jecxz
mov
sarl
imull
fiadds
rcr
mov
das
or
into
loopne
sub
repz
enter
inc
neg
out
loopne
sti
inc
inc
mov
cmp
mov
insl
add
mov
pop
dec
lock
in
jg
inc
repz
cld
pop
add
in
movsl
ret
xchg
cld
xchg
fsubrl
push
sub
in
xor
mov
js
mov
lret
and
or
insl
lret
ret
sbb
outsb
clc
xor
and
and
inc
lcall
xchg
add
push
sbb
imul
mov
mov
mov
cmpsl
cmpsb
push
adc
repz
push
cmp
clc
jle
clc
cmp
popa
test
hlt
sbb
inc
mov
daa
das
xor
aas
mov
and
push
in
xchg
jmp
leave
data16
stos
pop
mov
cmp
imul
shlb
ds
leave
or
imul
sbb
int
imul
xorb
xor
jle
pop
movsl
pop
in
aaa
fsubrs
mov
je
addl
lcall
ljmp
jmp
in
add
les
push
sarb
or
cmp
dec
jb
push
ss
pop
or
mov
cmp
mov
lods
add
xchg
repz
movsl
xchg
test
fadds
xchg
hlt
pop
dec
push
lock
stos
std
cld
jns
outsb
push
mov
dec
fcompl
ds
sub
rcll
ret
stos
dec
dec
sbb
in
addr16
push
icebp
xor
rolb
loope
jnp
cs
inc
sbb
jmp
lcall
adc
out
xlat
out
sti
jns
es
movsb
test
iret
rcll
mov
push
loope
sti
jb
mov
lea
mov
mov
aam
and
hlt
xchg
inc
in
dec
inc
xor
push
inc
mov
gs
jbe
dec
ds
or
ds
fisttps
pop
loopne
pop
and
fucomip
in
std
inc
inc
mov
jmp
mov
pop
adc
sbb
xchg
or
inc
sbb
rcrb
push
test
dec
test
sub
jb
lcall
cmpl
cmpsl
jno
dec
in
insl
ret
imul
ficompl
push
sub
mov
dec
scas
dec
jns
or
push
sub
inc
imul
ljmp
stc
out
dec
sbbb
es
or
and
out
adc
roll
bound
xchg
fucomp
push
or
lcall
jae
sbb
ss
cmp
aaa
jne
and
add
inc
aam
add
ret
push
sub
in
sbb
or
adc
or
sbb
or
sub
inc
test
jnp
test
std
arpl
ljmp
adc
inc
ss
sub
xor
jae
xchg
cmp
pop
push
mov
repz
mov
xchg
xor
inc
mov
jae
mov
shl
pushf
cmp
push
cmp
shrl
jae
lret
jb
aam
adc
jne
ret
pop
insb
push
aam
clc
push
inc
xchg
jne
mov
rcll
popa
push
mov
pop
jl
adc
pop
sahf
scas
cltd
js
stos
aas
xchg
insl
cmp
jno
icebp
xchg
in
cbtw
mov
pop
dec
push
pop
clc
ljmp
mov
lahf
scas
fistpll
push
stos
xorb
cld
mov
mov
dec
insb
adc
mov
ficomps
jae
jle
mov
sarl
sbb
mov
xor
leave
popf
rcrl
and
xchg
or
loopne
test
icebp
nop
fs
add
push
int3
clc
add
jmp
xchg
ss
ja
inc
add
xchg
int3
adc
clc
in
and
jno
mov
lea
push
lret
fnstenv
mov
mov
mov
xchg
rcll
mov
mov
xchg
lods
push
push
std
ss
std
push
mov
pop
call
shlb
sub
xchg
xor
retw
inc
xchg
xchg
mov
test
mov
bound
jg
iret
in
jle
cld
addb
sti
movsl
mov
and
pop
pop
daa
sahf
fwait
pusha
jo
ret
fld1
cmpsb
scas
mov
sbb
sbb
sarl
or
hlt
jl
sub
cmpsl
push
popa
out
mov
inc
xchg
inc
xor
std
inc
sbb
inc
div
xor
cs
add
xchg
sbb
clc
add
into
add
pop
dec
mov
mov
mov
sbb
sub
pop
dec
jno
cmp
stc
in
movsl
adcl
xchg
fsubrl
enter
push
and
mov
jecxz
and
test
mov
stc
mov
ja
movsl
setns
push
cld
mov
outsl
mov
popf
adc
pop
outsb
imulb
or
mov
shll
cmp
jnp
xchg
sahf
lahf
cld
xor
lahf
sti
sbb
scas
cmpsl
xlat
lds
or
or
push
jle
mov
out
sbb
imul
orb
cmp
clc
pop
shlb
cmpsb
sti
cmc
pop
iret
sbb
inc
xchg
ds
pop
adc
add
mov
sub
out
xchg
sbb
or
data16
loopne
arpl
sbb
das
dec
xchg
sub
or
ret
cmp
adc
ret
mov
fldl
jne
stc
sbb
xchg
add
xlat
sbb
or
add
inc
pop
push
fistl
addb
mov
movsb
pop
and
cmpl
mov
insb
push
jl
push
mov
icebp
xchg
cmp
or
xchg
xor
pop
shrl
pop
lea
push
dec
jmp
inc
pop
inc
pushf
dec
data16
sbb
lahf
sub
iret
stc
addb
push
cmp
js
rcrb
stos
arpl
iret
xchg
std
push
dec
in
mov
xchg
and
xchg
cwtl
mov
xchg
cmc
mov
push
call
inc
rcrb
aaa
or
call
or
pushf
mov
xchg
mov
and
imulb
jmp
mov
jle
gs
jbe
popf
and
cmp
pop
or
fucomip
repz
xor
jnp
ret
xlat
add
push
ja
popa
add
mov
xchg
sub
push
xor
mov
stc
gs
push
stos
test
scas
iret
mov
arpl
mov
inc
aaa
push
inc
pop
cmp
adc
std
pop
pop
xchg
stc
mov
cltd
rcl
ja
fsubs
insb
in
inc
imulb
test
sbb
push
rolb
shll
xorl
and
inc
outsb
aad
iret
and
xchg
fnop
mov
scas
push
pop
jg
sbb
sar
pop
fdivs
pop
int3
mov
mov
ret
int3
ret
pop
cli
test
cmp
lcall
jne
test
jnp
inc
arpl
jecxz
inc
inc
lret
push
add
adc
pop
je
mov
lods
adc
shll
inc
mov
mov
cmp
mov
jae
mov
inc
mov
bound
dec
sar
sbb
inc
push
xchg
cli
xor
loopne
jnp
cmp
flds
std
add
or
push
sbb
push
lods
clc
push
lret
loop
loope
push
fwait
mov
js
sub
loop
stos
or
mov
in
cmpb
mov
test
pop
xchg
mov
pop
scas
dec
sbb
sbb
xchg
clc
xor
sub
lahf
adc
fbstp
popa
adc
inc
cmpsl
pop
mov
js
pop
inc
fsubrs
insb
xchg
adc
in
xchg
mov
mov
jbe
adc
mov
push
sahf
jne
mov
fs
or
xchg
sbb
insb
aaa
and
clc
sbb
dec
insb
adc
mov
ficomps
jae
jle
mov
sarl
sbb
mov
xor
leave
popf
rcrl
and
xchg
or
loopne
test
icebp
nop
fs
add
push
int3
clc
add
jmp
xchg
ss
ja
iret
mov
pop
dec
dec
mov
sbb
add
dec
cli
push
enter
jne
call
adc
scas
dec
adc
xchg
mov
adc
jae
int3
in
idivb
mov
add
sub
add
dec
mov
add
mov
xchg
mov
test
adc
and
lcall
ret
aad
mov
adc
out
mov
jo
push
adc
outsl
mov
adc
mov
mov
out
inc
sbb
iret
popf
jmp
repnz
test
das
frstor
xor
aas
mov
inc
repz
aad
shll
mov
fisttpl
push
jne
or
lods
movnti
cltd
xor
in
aaa
add
and
mov
fcmovnu
sbb
adc
mov
dec
rorb
dec
pushf
mov
inc
incb
push
push
int3
movsl
movsl
loop
pop
pop
sub
inc
push
into
sub
fs
mov
cli
sub
cltd
sbb
mov
mov
and
imul
rorl
add
clc
repz
push
adc
lods
pop
cs
or
addr16
fadd
mov
lahf
ds
movsl
jecxz
sti
fstpl
jg
sbb
jge
jg
mov
test
pop
pop
loopne
int
mov
lods
xlat
push
mov
mov
jnp
lret
outsl
out
sbbl
js
pop
loopne
je
bound
lods
adc
xchg
adc
mov
sub
sahf
clc
mov
shl
cmpsb
sbb
repz
inc
pop
jns
pop
loopne
cmp
sbb
sub
sti
mov
add
cmp
mov
jecxz
adc
cmpb
xor
clc
cmp
and
jno
scas
push
sub
mov
sbb
scas
xchg
cltd
adc
mov
or
sbb
shrb
mov
inc
addb
jge
cwtl
outsl
sub
and
lods
pop
xor
adc
dec
push
jno
jmp
nop
add
fcmovnb
push
jo
xchg
pop
icebp
leave
stc
cmc
iret
cmp
aas
fimull
rorb
sbb
mov
sbb
inc
repnz
fldl
mov
push
sub
das
je
lahf
pop
fwait
std
adc
inc
lds
call
subl
inc
xor
lock
push
mov
inc
xor
mov
mov
jne
add
lahf
loop
jno
inc
xchg
cmp
icebp
sbb
xor
mov
jo
rcl
cmp
inc
adc
cli
mov
aad
fwait
mov
addr16
fs
mov
cmp
lret
stos
stos
es
mov
sbb
ljmp
mov
test
jae
aam
aas
inc
mov
sbb
sub
lret
push
lret
lock
fsubrl
push
cmc
jae
es
enter
cmp
and
scas
je
sub
cmp
xlat
in
addl
or
xchg
mov
dec
jo
mov
rcr
cli
orl
mov
xlat
std
or
movsl
dec
xchg
enter
mov
int
lds
xorl
or
mov
inc
fcoms
jbe
ret
inc
idivb
cs
or
sti
cs
cmp
mov
push
test
mov
popa
sbb
adc
pop
mov
clc
mov
cmc
addr16
jmp
cmpsb
test
lret
pop
adc
ret
jbe
pop
xor
xor
xchg
jnp
inc
dec
cltd
cmp
xchg
shl
sti
into
scas
pushf
xor
and
ror
lods
jmp
stos
ja
pop
mov
push
sbb
push
inc
imul
adc
xchg
fidivrl
mov
mov
push
rolb
ret
lahf
push
lahf
adc
cmpsl
pushf
xchg
xchg
leave
in
andl
subl
xchg
sbb
call
xor
leave
xor
and
call
lods
js
ljmp
adc
jbe
fs
enter
iret
inc
xor
lcall
sub
adc
fistpll
xlat
test
lret
dec
cmp
lahf
add
popf
jmp
cmp
or
cmp
shlb
mov
mov
add
mov
mov
mov
cld
jg
inc
add
loopne
sahf
testb
call
ficomps
dec
mov
lods
pop
sub
dec
pop
jl
mov
bound
mov
inc
cmp
cli
xor
out
mov
jae
push
push
lret
loope
pop
scas
jbe
lods
pop
ja
or
or
outsl
fistpl
ljmp
push
mov
js
lock
add
mov
dec
mov
ds
inc
sub
jl
pop
jns
inc
xor
push
cmpsl
sbbl
push
cmpsl
or
inc
and
mov
out
mov
adc
jnp
push
lock
repnz
ficompl
or
jo
add
xor
dec
xchg
jo
fwait
or
jnp
jecxz
cs
mov
jmp
call
mov
in
and
pop
dec
int
push
imul
mov
sub
div
mov
movsb
dec
fmull
pop
test
imul
jmp
xor
jo
mov
clc
adcl
inc
adc
fwait
pop
gs
fs
xchg
into
jp
push
pop
mov
jmp
mov
push
popa
cmp
clc
and
addr16
jne
jb
movsb
xchg
sbb
nop
mov
jo
and
bnd
jg
ss
das
cmpsl
xlat
add
sbb
decl
and
daa
cmp
push
fildl
adc
push
lods
mov
jne
mov
orl
clc
mov
mov
xor
imulb
inc
mov
dec
inc
inc
push
jbe
dec
dec
xchg
fstl
cltd
inc
neg
jmp
push
cwtl
cmpb
xor
jge
or
ret
jl
inc
pop
shll
rorb
roll
pusha
arpl
mov
aaa
pop
push
push
into
addr16
and
inc
hlt
inc
mov
push
cmp
jne
cmpsl
mov
mov
test
clc
fstpt
inc
ret
ja
cmc
imul
cmp
imul
lret
pop
jne
inc
xchg
cmp
addr16
xor
jb
fistpl
ret
orb
shrb
scas
stc
sbb
in
push
sahf
mov
jo
lds
mov
pusha
mov
bound
pop
xchg
in
repnz
and
test
in
inc
dec
out
dec
loopne
std
inc
sub
enter
scas
push
rcr
call
fistl
ficomps
xchg
fistpl
out
push
loope
xor
mov
mov
and
adc
popf
xchg
jbe
stc
jo
les
call
insl
int3
sub
mov
push
jl
and
fwait
mov
arpl
adc
loop
sbb
mov
sbbb
in
movsl
sbbl
xchg
vandnps
jb
lcall
add
jnp
cld
lods
sbb
cmpsb
pop
add
inc
dec
push
in
mov
and
push
mov
push
ja
mov
insb
cmovge
mov
pop
shll
jne
mov
aad
lcall
sub
sbb
fwait
push
mov
out
popf
orl
scas
rcrb
imul
in
dec
and
push
fdivrs
xchg
dec
adc
inc
push
mov
movsl
or
shlb
imull
out
cltd
or
mov
and
or
addr16
imull
dec
call
pop
mov
loope
pop
daa
minps
negl
dec
xor
scas
mov
cmp
pop
mov
add
add
push
subl
ja
sbb
call
mov
fnsave
hlt
mov
cmp
movsl
leave
pushf
imul
lret
mov
fcoms
inc
out
bound
push
xchg
popf
mov
mov
inc
pop
mov
pop
xchg
mov
inc
aaa
scas
sub
xchg
test
jmp
scas
inc
cwtl
add
add
sub
adc
cmp
jb
fstps
adc
mov
xor
ja
js
mov
lcall
scas
popf
call
jge
add
fnsave
out
add
and
jecxz
sbb
inc
aaa
lock
or
cmp
xor
xor
pop
push
xor
mov
adc
sbb
aam
sti
iret
jecxz
mov
sbb
mov
inc
xchg
mov
arpl
mov
dec
cmc
cmpsl
into
enter
fwait
icebp
or
in
ja
in
lds
hlt
adc
lret
mov
scas
xor
div
inc
dec
bound
mov
xchg
dec
inc
shlb
sub
push
fcomps
adc
sbb
scas
pop
nop
popa
sub
mov
pop
mov
les
js
and
fsubl
std
das
nop
pop
in
jl
scas
push
fcompl
sub
shlb
pop
jle
addr16
sti
adc
dec
dec
insl
jmp
mov
lahf
insl
push
int3
push
pop
add
fisubs
and
fdiv
xor
xchg
push
jmp
stos
jp
cmpsl
and
mov
push
add
cmp
dec
pop
loop
roll
mov
ret
pushf
push
in
inc
fdivp
or
and
xchg
dec
aad
or
pop
add
pop
ljmp
inc
mov
mov
and
pop
aas
dec
fwait
mov
lods
sbb
inc
lahf
sbb
ficoml
insb
in
das
orb
xchg
inc
iret
dec
movzbl
mov
inc
pop
push
lret
mov
or
add
inc
mov
sbb
mov
cmpsb
mov
fldt
movsl
jo
mov
scas
and
pop
je
mov
push
loope
mov
ficoms
jl
std
outsb
dec
daa
inc
lret
bound
cwtl
jl
pop
jmp
jb
ret
xor
dec
mov
iret
jae
rorb
mov
adc
fwait
sahf
ret
in
sbb
lea
jno
adc
mov
xor
inc
cmc
inc
fwait
xchg
cmc
and
test
dec
icebp
and
pushf
xchg
cmp
or
mov
jae
mov
lret
jge
pop
dec
aaa
into
lods
add
in
mov
into
iret
inc
mov
dec
movsl
ret
pop
sub
mov
shll
shr
mov
jle
push
lods
dec
bound
int
test
pop
ds
les
lcall
aad
mov
neg
mov
mov
lea
push
mov
sarl
or
sahf
out
and
or
add
or
subb
test
sahf
mov
mov
fidivrs
adc
inc
sub
or
fsts
ljmp
lods
dec
fsts
pop
pop
mov
arpl
or
jb
adc
out
mov
leave
loope
lea
iret
insl
mov
adc
xor
sbb
dec
pop
fcomps
mov
jne
inc
dec
inc
add
mov
jp
fwait
mov
adc
or
jno
and
and
jge
bound
fdivr
mov
cmc
mov
sarl
dec
add
jp
push
push
mov
inc
pop
push
cmc
loope
andb
sbb
cmp
popf
mov
rolb
sti
andb
ss
cmc
cmc
sub
sti
imul
imul
mov
xchg
mov
repnz
test
fcmovnu
push
jnp
dec
push
imul
ss
lock
jecxz
out
pusha
sub
mov
shr
dec
jmp
paddq
sub
mov
xor
mov
add
mov
jecxz
inc
test
popf
cmp
outsl
and
fsubs
clc
xor
or
push
xchg
imul
aas
xchg
mov
shrb
fucomip
mov
fidivl
sub
rcrb
push
pop
bound
cmp
aas
jmp
jmp
imulb
movsb
mov
pop
cmc
loopne
cmpsb
push
dec
jo
ss
fildll
mov
cltd
mov
out
mov
das
stos
inc
lods
xchg
mov
inc
and
loop
bound
mov
imul
mov
add
mov
les
push
mov
inc
out
mov
int3
fldenv
xor
int
fsubrl
fs
in
mov
popf
repnz
xlat
in
idivl
xchg
cmpsl
or
mov
ficomps
or
out
test
jmp
push
aas
fwait
lret
in
mov
mov
or
jnp
daa
jae
jnp
jle
rcll
ret
add
mov
cwtl
stc
and
mov
fsubr
xlat
adc
popf
xchg
movsl
testb
test
lock
mov
adc
ja
add
roll
push
pop
sti
push
mov
stc
imul
mov
xor
jno
inc
xor
dec
clc
lock
movsb
mov
cmp
dec
aaa
push
sbb
fstpt
shrl
test
imul
outsb
outsl
outsb
mov
in
and
xchg
pop
roll
add
and
mov
sti
pop
fsts
subl
js
shlb
movsb
ret
sub
dec
jo
repz
call
pop
and
mov
inc
repz
cmc
inc
pop
adc
test
fwait
jnp
sub
sbb
lret
ret
test
cli
xchg
gs
icebp
inc
rcll
movsl
pop
lds
je
shll
fadd
mov
insl
and
and
jl
faddl
dec
mov
insb
xchg
push
subb
stos
sarl
popf
push
bound
in
or
dec
cmp
stos
or
imul
rcrb
cmc
mov
pop
push
push
loopne
shrb
mov
push
pop
mov
imul
data16
xchg
dec
scas
adc
xlat
rcr
mov
dec
popf
lret
filds
or
aad
mov
scas
divb
xchg
push
loope
cmp
js
add
stos
mov
movsb
into
jo
push
aam
ret
inc
mov
and
inc
std
xchg
fwait
add
push
pop
xchg
clc
xor
mov
mov
hlt
imul
jg
adc
or
pop
fwait
testl
push
sub
daa
push
inc
or
xchg
outsb
into
mov
iret
insl
mov
pop
std
call
cmpsb
inc
xchg
mov
pop
imul
sahf
push
mov
das
mov
imul
inc
pop
fimull
loopne
adc
xor
negl
dec
xor
scas
mov
cmp
pop
mov
add
add
push
subl
ja
sbb
call
mov
fnsave
hlt
mov
cmp
movsl
leave
pushf
imul
lret
and
leave
jp
mov
push
out
dec
das
mov
mov
fisubrl
imul
ljmp
popf
loop
fcoms
insl
rcll
and
test
inc
add
mov
push
xchg
sbb
cmp
mov
out
xchg
sbb
ret
or
inc
sbb
push
mov
lock
xchg
shlb
cmp
add
and
mov
push
popf
outsl
or
push
shlb
push
popa
or
xchg
inc
imul
out
in
jecxz
cmpsb
mov
sbb
scas
lock
insl
adc
lds
dec
addl
jecxz
rorb
movsb
lret
test
les
roll
and
cmp
adc
mov
leave
xor
imul
rclb
xchg
repnz
pop
adc
iret
jns
and
roll
sbb
pushf
mov
push
mov
sti
add
mov
sbb
sbbb
scas
ficoms
cmp
call
repz
out
orl
lret
cmp
in
adc
mov
sub
fs
lcall
push
cmpsl
cli
mov
push
and
fidivrs
jnp
sbb
pop
fdivrs
jnp
fdivs
cltd
dec
movsl
lret
data16
repz
in
xchg
test
push
sbb
loope
lret
gs
xor
cmp
sub
in
pop
shlb
xchg
adc
pop
rolb
lea
mov
cmp
lcall
pop
hlt
testb
movsb
ja
mov
aaa
test
aas
pop
hlt
mov
popa
shl
adc
js
xchg
ss
fcmovnbe
push
lods
sub
jg
mov
mov
pop
sub
xor
lods
das
xchg
stos
lds
adc
add
jle
jne
fiadds
inc
sbb
arpl
adc
subps
lock
add
pop
pop
notl
jnp
decb
mov
fsubl
sub
outsl
xchg
jno
xchg
jae
daa
pop
cwtl
and
sub
sbb
out
call
pop
mov
mov
xchg
loope
jo
add
mov
adc
pop
adc
jae
lcall
adc
dec
jnp
fiadds
clc
mov
pop
jns
xchg
fidivrs
mov
in
shll
dec
push
lahf
push
mov
xlat
cltd
ffree
mov
mov
inc
xchg
xor
push
imul
and
mov
dec
and
jno
les
push
push
mov
scas
insb
pusha
fiaddl
std
stos
mov
testl
lret
xor
orl
icebp
ret
mov
mov
mov
jae
add
jmp
push
gs
test
movsl
ret
stc
andl
aaa
in
dec
out
or
js
rcll
test
rolb
pop
mov
pop
clc
sarl
and
mov
dec
push
loope
iret
mov
push
iret
repz
pop
pop
push
mov
fnstenv
test
adc
mov
pushf
mov
pop
fstpl
jns
or
test
or
mov
movsl
inc
out
movsb
cld
mov
xor
aaa
popw
cwtl
dec
jg
pusha
addr16
push
scas
ds
inc
pop
repnz
iret
out
leave
nop
jg
jae
inc
sbb
sarb
jns
imul
shlb
int3
into
mov
clc
pop
frstor
jns
out
mov
mov
xchg
std
cmpsl
pop
or
sbb
roll
fsts
push
xchg
ficoml
or
mov
ljmp
fstl
pop
cmpsl
fadds
out
bnd
mov
inc
fwait
or
or
jns
dec
sti
mov
pop
aas
lea
pop
mov
repnz
fsub
pushl
out
shrb
nop
test
xchg
ja
and
int
int3
xchg
lds
movsl
rclb
ret
xor
cmp
pop
sub
movl
dec
repnz
pop
out
ss
adc
jne
roll
xchg
add
cld
cmpsl
add
push
jne
or
and
pop
or
xchg
or
push
push
enter
inc
mov
push
cmp
std
sub
inc
iret
adc
xchg
ret
insl
notb
dec
xor
mov
addl
mov
xchg
mov
arpl
enter
lds
repnz
inc
pop
test
mov
pop
lds
add
sub
pusha
xchg
sbb
mov
add
xor
sub
lock
mov
mov
xchg
es
or
cmpsl
and
cld
out
or
push
ret
jle
lahf
call
jge
repnz
jecxz
dec
pop
dec
mov
xlat
ja
push
into
test
test
jp
mov
xchg
scas
jb
mov
sbb
leave
sbb
cltd
and
and
jne
insl
mov
sbbl
test
ss
cmp
movsl
xchg
pop
mov
lods
cltd
sub
jae
mov
cltd
dec
push
repnz
pop
in
pop
or
gs
iret
int
pop
out
dec
lods
xchg
lahf
stos
mov
pop
test
mov
outsl
mov
dec
stos
mov
lods
mov
pop
sub
dec
inc
fwait
adc
xchg
pop
rcrb
adc
test
je
loop
lret
les
andb
test
loopne
sbb
adc
fxam
sub
mov
loop
test
mov
push
divl
xchg
push
popf
ficoml
cs
cmpsl
js
aam
leave
inc
lret
lods
dec
fsub
push
fs
xchg
jae
leave
inc
mov
cmpsl
jnp
and
push
cmp
add
icebp
jo
shlb
push
rclb
xchg
xchg
jmp
cmp
lods
imul
push
mov
icebp
and
fwait
repnz
jo
fdiv
aaa
sub
sbb
ror
lahf
vpmuludq
cs
cmp
sbb
jle
ljmp
outsb
test
jp
lock
push
xchg
mov
outsl
sub
sbb
add
mov
sbb
mov
lret
xor
incl
adc
sub
mov
lret
sub
cltd
out
orb
cmp
popf
xchg
jle
test
lock
ficomps
or
and
cli
add
popf
jle
jecxz
shll
lea
por
xor
call
cwtl
dec
sbbb
jbe
out
and
shrb
pop
aam
ret
lock
into
sbb
shll
xchg
sar
les
mov
mov
jb
xor
in
jmp
adc
pop
sub
pop
and
insb
loope
jp
mov
mov
sub
jae
xorl
mov
mov
jecxz
icebp
addr16
cltd
fwait
mov
stos
neg
lret
inc
push
insl
sub
fwait
add
fstp
aaa
xor
dec
out
cwtl
aam
mov
test
mov
pop
test
push
pop
pop
adc
jl
sbb
fiaddl
push
subl
xchg
mov
add
push
in
loopne
cmp
or
popf
filds
iret
out
je
cli
or
sbb
mov
fwait
push
dec
mov
mov
inc
xchg
enter
jmp
mov
and
mov
jno
scas
cmpl
mov
pop
ds
les
adcl
es
call
mov
rcl
cmp
push
xor
cltd
cmp
sub
or
fwait
cwtl
inc
stc
enter
cltd
push
movsl
dec
sbb
cld
cmpsb
cmp
pop
push
iret
inc
ret
or
inc
push
sbb
jo
sti
popl
xchg
dec
test
or
insl
cltd
into
mov
cmpsb
add
xor
stos
push
adc
push
push
rcrb
jbe
mov
cli
xor
notb
hlt
loopne
test
ficomps
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
xorl
xchg
fsubl
cmp
jmp
xchg
jecxz
fildl
scas
adc
enter
mov
sub
adc
and
adc
rcl
xor
aam
sti
and
and
sub
movsb
cmp
fs
dec
push
dec
loopne
fwait
ud1
call
negb
push
bswap
es
and
jecxz
cwtl
mov
es
shl
pop
and
popa
push
or
cmp
adc
jp
mov
fmul
cs
adc
mov
sbb
add
inc
insb
xor
or
ret
pop
scas
cwtl
or
jmp
lds
jmp
cltd
dec
sub
dec
lahf
cmp
jae
fisttpl
xchg
nop
cmpl
ret
add
or
mov
jl
pop
stos
xchg
stos
std
mov
mov
push
or
mov
mov
jl
mov
stc
out
cmp
popa
jno
shlb
stc
cwtl
xchg
nop
sbb
add
and
adc
pop
stos
aam
mov
jnp
inc
push
mov
or
add
xor
mov
pop
repz
in
sub
mov
pop
add
cmpsl
hlt
je
and
hlt
ss
int
js
push
popa
mov
jbe
xor
mov
enter
cld
xor
stos
into
sbb
push
cs
mov
hlt
or
loopne
test
ret
test
sub
adc
push
test
xchg
and
sbb
popf
jge
lds
push
jb
mov
sbb
add
movsl
jge
cmp
test
out
xchg
ficoml
xchg
mov
inc
pop
dec
rorl
cmpsb
lods
orl
fldcw
cmp
push
ficompl
push
rorb
pop
mov
xor
mov
das
cmpsb
lods
jae
flds
sahf
jge
jl
push
inc
fisubl
sub
ljmp
loopne
clc
lcall
outsl
mov
iret
sbb
mov
sbb
inc
pop
loope
xchg
mov
mov
mov
lahf
test
repz
inc
fcoms
hlt
pop
in
add
jne
pop
and
arpl
mov
xor
sti
sbb
cmp
mov
addb
leave
pop
sub
jl
mov
shl
cmpsl
add
ja
outsl
mov
fwait
xlat
fst
addr16
fwait
push
movsl
sti
sahf
sbb
outsb
outsl
fwait
xor
mov
ss
push
pop
mov
lcall
lret
jo
push
shrb
mov
arpl
dec
lahf
test
dec
scas
dec
dec
cltd
fs
andl
cwtl
mov
jge
in
and
test
and
fstl
testl
cmpsl
shr
cmp
jl
fs
xlat
fstl
mov
xchg
sbbl
xor
gs
inc
add
adc
sub
fldz
mov
lcall
out
push
and
mov
xchg
imul
sbbl
mov
dec
push
fxch
xchg
mov
inc
xor
loope
dec
loopne
arpl
fwait
add
clc
mov
cmc
lret
test
cmp
push
fs
mov
fs
test
hlt
add
imul
mov
xchg
fwait
ds
hlt
or
and
sbb
inc
insl
add
fisttps
mov
pop
mov
int
popf
addl
push
stc
mov
decl
add
pop
jb
adc
dec
push
sbb
jecxz
fldt
cld
add
addr16
leave
cmp
xor
rcrb
iret
and
mov
les
inc
jne
fsubrl
pop
push
xor
iret
fwait
ja
jno
xchg
ret
test
test
inc
push
cmp
das
or
sub
mov
sbb
xchg
adc
and
cs
dec
fnstenv
and
std
in
movsl
adc
aad
and
iret
insl
fucomp
in
test
shll
maskmovq
imull
lahf
dec
test
arpl
push
leave
iret
cmp
mov
in
out
lods
shlb
movsl
popf
fnstcw
mov
pop
cmp
dec
and
pop
jo
pop
and
pop
pop
testb
inc
gs
loope
loope
divb
lock
out
aas
cmpb
mov
pop
mov
jbe
cwtl
movsb
mov
clc
test
dec
frstor
scas
xor
and
ret
fistpl
hlt
pushf
mov
aaa
outsb
lret
inc
cmpsl
dec
sbb
mov
fs
fists
bound
mov
cld
cltd
pop
popf
push
loop
in
inc
xchg
std
ja
pop
jmp
jae
loope
scas
test
xchg
pop
aam
pop
sub
pop
mov
jmp
pop
mov
inc
rclb
jmp
or
mov
rcrl
inc
xchg
cmp
icebp
sbb
xor
mov
jo
rcl
cmp
inc
adc
cli
mov
aad
loop
jae
xor
xchg
dec
pushf
dec
andl
lods
dec
stos
push
es
dec
insl
and
mov
pop
or
movsb
cmc
mov
mov
popf
push
and
fiaddl
push
popf
nop
sarb
pop
loopne
repnz
leave
and
out
loopne
sbb
lods
loopne
mov
push
rorb
addl
repz
loope
inc
mov
jo
xchg
out
in
mov
xchg
mov
loop
lods
xchg
push
in
and
pop
test
es
pop
mov
sbb
mov
mov
dec
sahf
or
imul
cmp
dec
sbb
mov
je
daa
jno
in
mov
insl
cmp
sbb
inc
pop
sbb
rdmsr
loope
popf
fimull
js
pop
dec
lock
clc
jg
imul
maxps
stos
dec
test
popf
pushf
xchg
or
clc
mov
jne
cmpsl
in
gs
into
mov
fwait
das
jno
push
xchg
lcall
insb
push
pop
dec
cmp
jmp
add
jnp
mov
cwtl
movsb
sbb
stos
cmp
fcoml
loopne
lods
sahf
ja
aas
lahf
inc
lret
mov
pop
in
repnz
fstps
sbb
stos
xor
in
sbb
xchg
xor
mull
pop
int3
sbb
loope
lods
sahf
lahf
subl
dec
or
jb
add
jge
or
fdivrl
mov
sar
loop
pop
mov
cmp
pop
shlb
in
and
lea
push
mov
int
adc
pop
into
adc
test
loopne
incl
inc
mov
push
cmp
dec
adc
sub
cmp
adc
xor
fsubrl
jp
orl
lret
fisubrl
jne
and
rorb
push
popf
inc
pushl
pop
notb
jmp
push
flds
and
jp
shrl
jne
gs
cld
cmp
dec
push
or
scas
fs
in
call
fisttpll
clc
jle
add
inc
push
sti
std
jo
xlat
ror
xor
andl
adcb
aad
fidivrs
fistps
and
icebp
dec
ljmp
mov
loop
imul
pop
pop
ret
fs
and
adc
lret
adc
adcb
je
mov
pop
stc
add
push
mov
sbbb
dec
push
lds
repz
xchg
cwtl
xchg
test
cld
xor
out
addr16
gs
cmp
mov
push
iret
jns
add
sbb
mov
xchg
ret
dec
adc
xchg
jns
popf
adc
xchg
dec
aaa
mov
sahf
dec
pop
xchg
test
ret
imul
test
pop
lcall
aad
and
cmp
mov
movsb
mov
push
movl
enter
js
push
ret
xor
je
lahf
pop
or
ds
jo
rclb
dec
test
dec
leave
inc
shrb
rcrl
pop
and
enter
fsubl
mov
mov
shlb
outsb
aaa
sbb
mov
dec
sub
gs
das
aam
mov
icebp
add
xor
mov
fistpl
add
dec
int3
shl
aas
stc
cltd
inc
mov
xor
jge
sbb
aaa
add
ljmp
add
sub
lods
pushf
push
sub
sub
add
dec
push
sub
addb
inc
fisttpll
fucomp
movsb
das
jae
xor
mov
cmp
xchg
ret
cli
jae
movsl
dec
xor
inc
push
pop
pop
pop
sbb
mov
ss
mov
xchg
test
movsb
mov
xchg
call
adc
loop
daa
ror
add
adc
sbbl
adc
in
imul
enter
sub
push
mov
fwait
jp
cltd
mov
arpl
cld
cli
inc
cmp
enter
out
stc
jb
test
or
testl
xchg
cltd
fcoms
xor
rcll
xchg
fcmovnu
add
jae
fwait
jp
lret
test
in
scas
inc
leave
lret
pop
mov
in
inc
mov
les
mov
mov
pop
out
push
sub
inc
mov
leave
testl
dec
pusha
sub
les
jae
mov
sti
mov
fldt
mov
popf
or
imul
mov
mov
nop
sbb
test
xchg
les
inc
clc
stos
std
mov
add
pop
pop
mov
cmpsl
pop
lods
pop
pusha
or
icebp
sbb
js
push
stos
xor
je
fwait
pop
or
addl
or
xchg
daa
pop
xchg
mov
xchg
cmc
mov
mov
mov
and
sub
cmp
and
dec
inc
xor
cmp
fsubrs
sub
inc
pushf
pop
stos
sub
cs
jge
jmp
xchg
mov
mov
movsl
repz
push
add
stos
imul
push
test
mov
popa
sbb
adc
pop
mov
clc
mov
cmc
addr16
jmp
cmpsb
test
lret
pop
adc
ret
jbe
pop
xor
xor
xchg
jnp
inc
dec
cltd
cmp
xchg
shl
sti
into
scas
pushf
xor
and
ror
cmc
fildl
ljmp
or
sub
mov
stc
mov
add
ljmp
sbb
lods
xchg
cltd
data16
xor
outsl
mov
fisttpl
rclb
xchg
sbb
xchg
js
pop
pop
xor
cwtl
data16
fsubs
sub
js
insl
lahf
insl
scas
adcl
add
fisubs
fcoms
inc
xor
orl
lea
aaa
xchg
inc
imul
out
in
jecxz
cmpsb
mov
sbb
scas
lock
insl
adc
lds
dec
addl
jecxz
rorb
movsb
lret
test
les
roll
sbb
push
loopne
sahf
testb
pushl
xchg
jl
fldenv
push
fbstp
cmp
adc
sbb
sub
mov
pop
test
sbb
ret
xchg
fistpll
sbb
pop
xor
mov
adc
arpl
mov
add
mov
sub
pop
fdivl
push
jmp
adc
mov
fisttpll
inc
es
pop
lret
and
iret
mov
repnz
aas
fwait
lret
in
mov
mov
or
dec
mov
xchg
cltd
add
mov
jge
or
rcl
adc
dec
aas
dec
dec
mov
sbb
gs
enter
mov
je
fnsave
or
adc
mov
jnp
or
stos
cmp
dec
lahf
lds
outsl
pusha
mov
lahf
cli
popf
push
jg
jo
scas
int3
push
outsl
and
and
and
enter
push
inc
push
xchg
mov
lds
adc
xor
lret
repz
push
pop
pop
ficoml
pop
ret
push
jb
lret
enter
out
nop
or
xchg
add
rcll
and
test
inc
add
mov
push
neg
mov
js
or
adc
jp
xor
popf
fcomip
push
mov
sti
sbb
test
jb
push
cmc
les
push
sub
jbe
into
outsl
mov
adc
out
addb
data16
test
cmpb
adc
mov
push
ja
popf
icebp
fiaddl
repz
orl
shrl
pop
sbbb
push
cmpb
dec
inc
fnstcw
test
fmull
adc
sbb
dec
pop
cmp
add
test
jne
xchg
scas
add
push
jl
or
push
rolb
add
aaa
inc
andl
adc
fs
sub
subb
rorb
fistl
sbb
mov
mov
lods
shll
mov
gs
adc
adc
dec
cmc
adc
lcall
imul
jo
xchg
inc
xor
xchg
jno
icebp
pop
jns
ret
fwait
not
pop
add
lret
sbb
push
xchg
ret
fnsave
addr16
adc
les
leave
pop
and
bound
adc
ret
pop
inc
popa
sub
fldcw
out
jle
call
int3
nop
mov
dec
and
mov
mov
test
clc
sub
push
pushf
sbb
add
mov
es
add
test
test
adc
ret
int
paddusb
push
cmp
inc
fists
scas
mov
cmc
mov
popa
lock
sbb
insb
test
push
sbb
cmp
negb
jne
pop
add
lods
jle
mov
mov
adc
jge
leave
xor
or
vpslld
ds
push
repnz
fwait
push
dec
mov
push
push
mov
inc
push
mov
repnz
test
enter
jno
scas
enter
jl
fwait
lea
sbb
mov
or
inc
adc
sub
daa
adc
xchg
adc
jb
inc
mov
pop
stos
pop
xor
test
adc
inc
inc
mov
cmp
add
pop
add
test
dec
repz
cli
sbb
data16
push
ljmp
cmc
rcrb
pop
and
jno
fisubrs
stos
sbb
xor
mov
gs
loop
mov
jbe
mov
mov
shll
or
mov
test
ret
int
jae
cmp
sub
fnsave
scas
dec
pop
jnp
ja
cmp
clc
rcrb
sbb
stc
ja
insb
outsl
xor
cmp
sbb
cld
jle
adc
idiv
pushl
adc
sub
pop
mov
push
test
movsl
pop
nop
sbb
mov
clc
popa
mov
int3
sbb
insb
aaa
and
sbb
cmp
xchg
adc
adc
mov
mov
xchg
mov
or
jg
sub
xchg
cmp
std
rolb
jb
pop
add
push
andb
mov
xor
jbe
pop
mov
cmp
ljmp
dec
aas
mov
pushf
jl
adc
push
dec
fbstp
cld
pop
push
sub
inc
loope
inc
mov
sbb
cmpsl
adc
ret
ss
lcall
bnd
or
imul
scas
pushf
or
das
adc
js
sub
mov
into
loopne
cmp
ljmp
fs
and
cmp
idivl
in
out
testl
int3
hlt
jp
adc
push
push
lods
rorb
pop
mov
pusha
jo
ja
aam
xor
adc
loopne
dec
leave
cmpb
lret
inc
pop
sub
jp
sub
cmp
and
and
mov
das
push
xchg
loopne
fsubrs
add
cwtl
jo
pop
add
push
outsl
jo
sbb
popa
sahf
cmp
mov
test
push
cmp
pop
lods
xchg
sub
adc
cmp
ror
sbb
lahf
sub
push
fildll
stc
sub
lods
mov
mov
xchg
test
dec
mov
das
sbb
dec
mov
xor
push
mov
inc
mov
sub
mov
fstps
add
sbb
or
inc
sarb
clc
mov
adc
lods
sub
adc
nop
jnp
test
dec
aam
jns
or
fs
call
clc
mov
ss
lds
mov
or
sbb
loopne
jmp
dec
push
fsubp
mov
xchg
xor
je
nop
test
ret
dec
mov
sub
ret
xchg
jbe
mov
jns
repnz
out
push
popf
mov
cmp
jp
add
jecxz
mov
cltd
orb
sub
aaa
cltd
xor
jmp
mov
aad
mov
leave
test
clc
stos
jb
imul
pop
ljmp
popf
lret
sub
nop/reserved
in
jge
or
mov
test
jp
add
sbb
and
sbbb
pop
divl
mov
mov
sbbl
sub
or
es
or
mov
xor
mov
fidivrs
jge
imul
mov
cmpsl
ret
fld1
shlb
sti
sti
and
test
push
sub
xchg
bound
adc
rclb
cwtl
dec
and
mov
mov
test
mov
xchg
imul
inc
movsl
xchg
sub
pushf
ss
leave
push
aam
mov
and
jg
test
insl
sti
lret
ds
mov
pop
jmp
dec
popf
aad
dec
cmpsl
xchg
test
sbb
mov
loope
addb
xor
and
test
mov
mov
lods
xchg
xchg
xor
jge
pop
xor
fwait
iret
push
leave
add
dec
in
in
divl
cmp
jl
test
xchg
jns
fimull
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
std
mov
push
or
inc
bound
out
mov
fnstenv
xor
mov
dec
and
jp
adc
jne
test
insb
jl
inc
cmc
hlt
cwtl
imul
mov
or
jns
pop
mov
test
xor
mov
lret
jecxz
outsl
lret
lods
xorb
jne
jmp
sbb
aas
test
or
sbbb
inc
sbb
jno
nop
xlat
pop
sbb
test
clc
sub
jge
pop
jp
pusha
mov
lods
mov
push
in
in
xchg
test
test
mov
sbb
cltd
mov
adc
mov
add
repz
xor
add
cmp
ret
lahf
sahf
adc
jo
jg
dec
fdiv
loop
xchg
addps
adc
pusha
sarb
mov
sub
stc
and
push
jmpw
mov
in
mov
mov
pop
mov
gs
mov
inc
cltd
enter
inc
and
cmp
or
cmp
xchg
sub
xchg
out
cwtl
mov
push
test
arpl
out
in
pop
mov
xchg
push
mov
in
test
dec
ret
ficomps
jnp
hlt
jmp
inc
movsl
xchg
sub
pushf
cltd
push
mov
and
mov
mov
sarb
adc
sub
push
test
clc
sub
xor
movsb
fistps
je
sahf
das
xchg
stc
cli
in
test
pop
xor
test
movsl
push
cmpb
jns
dec
cmpsb
xor
jb
loopne
sbb
and
sbbb
jle
sub
js
in
movsb
lahf
mov
sub
xchg
fildl
cmp
xchg
xchg
lahf
inc
mov
iret
arpl
pop
jae
mov
lahf
xchg
test
enter
mov
inc
and
popf
mov
pusha
ds
enter
hlt
mov
nop
xchg
xchg
inc
adc
and
and
mov
shr
pop
pop
add
cmp
mov
subl
and
xchg
mov
lahf
push
pop
mov
cltd
mov
cltd
mov
addl
orb
jne
les
mov
test
rcl
lret
dec
sbb
cmp
imul
scas
cmp
pop
mov
push
xchg
lret
rcll
xor
popf
mov
pop
stos
outsl
mov
lock
addr16
int
sub
dec
push
inc
fwait
pop
sti
and
and
or
mov
mov
fwait
push
dec
mov
push
push
mov
inc
push
mov
fcomps
enter
xchg
push
jle
pop
gs
rol
fld1
jb
cmp
jns
cmpsl
enter
cltd
lret
jecxz
inc
sbb
jae
imul
mov
and
call
les
cltd
sub
mov
stc
aas
in
daa
and
xchg
lods
inc
cmp
mov
adc
push
inc
test
sbb
and
cltd
lret
lcall
sbb
mov
icebp
pushl
shlb
bound
add
or
adc
cltd
aam
stos
mov
add
lods
fcompl
push
xor
ret
mov
fsubrl
mov
fwait
leave
cmc
xor
cmp
pop
cmc
adc
cwtl
add
push
or
imul
xor
xchg
fsubl
mov
pop
testb
call
aas
sti
sti
and
test
push
or
mov
xchg
cmp
or
pop
lea
pop
pop
and
pop
cmp
mov
pop
into
mov
adc
jp
outsb
aaa
add
xor
push
repnz
pop
adc
or
lods
inc
mov
push
hlt
lods
icebp
mov
cmpsb
pushf
xlat
cwtl
sub
cmp
sub
cmc
sbb
std
movsl
popa
jae
lcall
push
mov
xor
push
fisttpl
pop
dec
sub
xor
mov
lret
jns
push
orb
xchg
sub
xchg
sbb
outsb
test
xchg
lahf
push
cwtl
sbb
adc
mov
inc
add
or
sub
test
test
fwait
xor
pop
dec
mov
mov
fidivrl
in
xorb
repz
ret
rcll
add
je
insb
push
push
jp
dec
mov
jne
cwtl
pop
xor
mov
fildll
les
pop
ret
subl
push
inc
xor
hlt
mov
mov
imul
les
jno
mov
in
rcrb
fidivl
sub
loopne
mov
sbb
xchg
lahf
popf
sbb
push
clc
aaa
mov
cmp
pop
adc
jl
sbb
pop
sub
adc
add
mov
lods
jge
push
mov
pop
xor
xchg
loop
fistpl
js
inc
repz
xor
add
push
push
pop
and
addl
stc
xor
cmpsl
xchg
inc
mov
and
xchg
xor
mov
clc
pop
pushf
cmpsb
mov
jle
adc
cmp
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
aam
mov
mov
xor
mov
stos
aas
pop
xchg
mov
mov
mov
mov
orb
mov
imulb
test
arpl
lds
push
cli
stos
pop
inc
mov
mov
movsl
xor
cmp
filds
rcrl
jno
les
and
mov
arpl
mov
mov
xchg
push
pop
int3
push
enter
mov
jmp
mov
pop
ror
push
fbstp
dec
xor
xchg
fildll
inc
rcll
js
xchg
cmp
cwtl
test
mov
mov
adc
cmpsb
ret
sub
mov
jae
push
insl
iret
insl
or
mov
mov
sti
repz
inc
je
jmp
adc
push
jp
out
mov
jne
test
cmp
mov
push
xchg
mov
das
push
xchg
cmpsl
pop
mov
popf
mov
push
rcrb
adc
or
ficomps
in
push
push
lods
xchg
sub
adc
inc
in
lods
dec
sbb
pop
xchg
lcall
pushf
or
je
mov
mov
xor
push
fisttpl
sti
dec
sub
or
adc
cltd
pop
mov
pusha
mov
loope
js
jo
jg
and
inc
mov
adc
aad
xchg
stos
cmp
popl
sbb
inc
and
adc
cli
mov
and
sub
lahf
popf
xor
jmp
std
mov
sti
and
pop
inc
inc
mov
ljmp
mov
test
js
test
or
pop
lea
ss
xchg
test
jno
dec
jmp
cmc
xchg
mov
jecxz
gs
sbb
and
mov
sbbl
cwtl
cltd
jno
mov
dec
rcrb
mov
in
mov
repz
sahf
repnz
push
loop
mov
pop
mov
jp
je
fldt
test
or
adcb
lcall
negb
jb
xor
gs
sahf
mov
xchg
push
cmp
cli
loop
stos
add
adc
mov
cmp
mov
jle
adc
cmpsl
mov
xor
xchg
mov
inc
push
mov
xchg
cmp
sahf
mov
mov
out
sbb
push
jp
aas
sti
sti
and
orb
clc
test
out
aad
add
cmc
mov
push
inc
pop
shl
cmp
jne
pop
arpl
jo
pop
and
imul
xchg
xor
mov
cmp
jp
add
mov
sbb
add
mov
inc
movsl
push
cwtl
ds
xor
push
jecxz
in
xchg
xchg
jno
aaa
lret
mov
sahf
das
xchg
stc
cli
in
test
xor
cmp
lret
fistps
gs
xlat
sbb
jmp
cmp
push
sub
pop
sbbl
loopne
jp
mov
fisttps
fwait
iret
push
leave
imul
divl
cmp
jl
jmp
mov
rcll
mov
ret
fcom
push
lock
mov
pop
mov
gs
cltd
xlat
xchg
jle
stc
add
dec
enter
xor
and
ds
sub
mov
int
jle
push
sbb
loop
sahf
js
test
adcb
lea
aam
push
dec
add
mov
cmp
jp
add
mov
cs
and
test
hlt
lods
push
jbe
and
int
add
xlat
stos
les
jmp
and
test
push
lret
dec
sub
xchg
aaa
loope
mov
sti
stc
cli
in
test
pop
xor
xchg
xor
pop
xlat
xor
jge
dec
adc
or
mov
pop
in
test
push
jecxz
lcall
mov
mov
xchg
adc
js
repz
cwtl
hlt
inc
clc
or
fwait
push
dec
mov
and
xchg
fmuls
xchg
ret
inc
insl
in
imul
push
inc
jne
mov
pop
mov
gs
jo
inc
fmuls
mov
or
mov
cmpb
xchg
sub
popf
xchg
push
mov
popf
mov
into
hlt
mov
mov
ljmp
imul
std
lret
mov
fidivrs
testl
or
xor
pop
mov
lods
xchg
sub
adc
inc
in
xlat
mov
pop
mov
cmp
mov
xchg
stc
cli
in
test
pop
xor
test
sbb
test
pushf
mov
xchg
cli
ljmp
sbb
adc
jbe
jmp
pushf
jnp
cli
sub
int3
scas
and
adc
mov
vunpcklpd
es
or
and
fwait
and
inc
jnp
inc
push
mov
pop
xor
gs
mov
loopne
ja
gs
sbb
fucomi
hlt
std
mov
sti
and
push
inc
mov
iret
jmp
mov
pop
fidivrs
lcall
mov
mov
testb
iret
add
sbb
vpsrldq
femms
frstor
push
xchg
inc
sbb
add
sbb
imul
scas
dec
movsl
xchg
int3
mov
lahf
or
nop
adc
sub
mov
xor
sub
scas
lahf
cmp
ss
sti
stc
cli
in
test
or
daa
push
loop
daa
sbb
and
fstpl
stos
dec
adc
mov
dec
mov
addr16
pop
int3
push
mov
add
pushf
cli
repz
jmp
xor
ret
pushf
jle
mov
or
jns
pop
xor
stc
bnd
stc
pop
fucomip
xor
xor
mov
and
fdivs
aaa
xchg
mov
xchg
mov
popf
push
pop
and
stos
dec
dec
mov
inc
into
sub
cs
ret
in
pop
das
xor
and
mov
sub
bound
adcl
pop
push
dec
cwtl
jae
pop
add
dec
iret
subl
inc
and
add
int
and
repnz
mov
testb
test
jns
lds
nop
lahf
repnz
push
faddp
dec
sbb
add
inc
lock
mov
loop
mov
inc
mov
push
jbe
mov
or
imul
mov
add
sub
push
scas
dec
pop
pop
movb
sbb
bound
scas
fildl
ficoms
mov
rclb
mov
icebp
jl
inc
cmp
icebp
cmp
insb
xor
mov
cmp
xchg
mov
xchg
mov
mov
mov
pop
mov
cmpsb
cmp
daa
inc
cmc
std
jb
and
es
sub
pusha
pop
or
xchg
sub
sub
ljmp
pop
adc
xchg
adc
push
dec
ret
loopne
pop
adc
ret
fidivrl
jecxz
add
scas
jo
jp
ffree
ret
sbb
insl
cwtl
push
mov
push
cwtl
push
divb
lds
pop
inc
in
xchg
cwtl
cwtl
loop
push
in
fxch
xor
push
aad
push
fisttps
aam
sbb
arpl
repz
into
pop
lcall
ja
mov
or
test
pop
test
add
pop
jl
pusha
test
ficoms
mov
xorb
cld
jl
clc
jle
sbb
cmp
xchg
lahf
stos
stc
sub
js
adc
ja
lcall
je
pushf
mov
dec
sub
mov
mov
xchg
mov
adc
push
or
call
int3
pop
sub
js
sbb
cmpb
mov
cmp
rcrl
sti
mov
shr
and
pop
mov
fildl
sbb
fs
outsl
test
inc
movsl
xchg
sub
pushf
ss
push
pop
aam
mov
and
pop
nop
mov
pop
stos
adc
cli
mov
xor
pop
in
mov
lret
fucomp
jae
sbb
aad
dec
cmpsl
xchg
test
mov
outsb
fmuls
das
or
pop
jbe
pop
stos
xchg
stos
std
xor
mov
ret
and
cmp
pop
in
es
mov
jp
xor
and
jge
mov
fcompl
jno
andl
jl
cwtl
inc
push
cmp
jnp
fdivs
in
xor
mov
je
cli
pop
test
or
out
mov
scas
repz
sbb
ret
or
dec
je
loopne
xchg
pop
cli
mov
sbb
push
or
sub
dec
rcrl
repz
or
stc
or
push
cmp
pop
cmp
and
and
jge
inc
inc
mov
ficomps
testb
xor
mov
lcall
iret
cmpsl
imul
in
popf
cmp
js
test
dec
sahf
mov
dec
add
ljmp
push
mov
jae
adc
shll
test
mov
sbb
cltd
pop
ficoml
mov
add
scas
pop
test
lods
jne
enter
xchg
fucomi
repnz
jge
jno
fs
push
rolb
idivb
dec
cmp
mov
mov
rclb
mov
xor
push
sbb
out
pop
mov
pop
out
cmp
pop
std
cmp
fstpl
je
cwtl
outsb
aaa
sbb
orb
sbb
test
fidivs
and
add
addb
inc
negb
shrb
pop
es
cmpb
cmc
sbb
xchg
cli
pop
adc
or
lock
pop
sti
cmp
sbb
cmp
jo
inc
add
sub
mov
ret
pop
xor
sarl
add
sti
or
cmp
test
cmp
pop
sbb
sub
adc
dec
mov
fistps
cmp
stos
ja
in
clc
aaa
scas
xchg
jae
cmp
aad
xchg
cmp
cwtl
cwtl
enter
mov
jnp
mov
jbe
jmp
mov
bnd
lret
fistps
jno
ljmp
sbb
mov
fwait
push
dec
mov
pop
push
mov
inc
push
mov
ret
adc
rcr
movsb
jno
leave
pop
gs
rol
fld1
jb
pop
mov
data16
call
int3
add
enter
or
je
fsubr
mov
cmc
xor
mov
icebp
inc
inc
xor
sbbl
inc
mov
mov
loopne
fidivrs
clc
sti
mov
sbb
mov
in
ja
inc
mov
aas
rorb
gs
imul
jno
fs
xchg
dec
repnz
stos
inc
in
mov
mov
jge
aaa
cmpsl
negl
jns
jno
push
and
fisubl
pop
retw
adc
and
imul
xlat
and
pop
inc
push
mov
lods
push
icebp
push
jecxz
popf
push
mov
mov
push
or
inc
fs
pop
xor
adc
adc
push
repnz
add
mov
or
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
fcomp
fisubs
jne
stos
int
pop
sub
mov
adc
cmp
mov
int
jge
daa
adc
lret
insl
sub
mov
call
mov
shlb
inc
inc
xor
inc
inc
mov
lret
jecxz
add
mov
mov
mov
cli
or
sub
addr16
mov
jg
sbb
insl
ljmp
sbb
add
push
dec
repz
pusha
std
test
into
arpl
lods
sub
or
xor
fisubs
dec
outsb
stos
jge
pop
add
jno
push
cmp
shll
and
lahf
scas
pop
jno
push
repz
push
mov
xchg
in
idivl
inc
out
std
mov
mov
xor
mov
rcrl
jb
sub
icebp
mov
lret
in
mov
mov
cmp
out
sbb
xchg
inc
cltd
enter
mov
sub
dec
cwtl
test
imul
popa
push
sub
mov
or
xor
test
aas
pop
sbbb
mov
dec
aaa
and
subl
jecxz
imul
cwtl
push
divb
outsl
adc
and
ret
add
ljmp
jae
lret
cmp
dec
repz
add
insb
cmp
dec
out
mov
mov
jge
push
push
jge
xor
and
jl
mov
pop
mov
lods
inc
pop
jg
sahf
inc
pusha
scas
nop
xchg
idivb
mov
popf
stc
std
jl,pt
aas
rolb
or
cld
jle
into
data16
add
aas
stc
xor
xor
mov
sbb
add
lods
fstp
movsb
addr16
mov
in
fwait
pop
cltd
dec
mov
xchg
popf
icebp
xor
loopne
mov
dec
lea
aas
push
xchg
dec
pop
mov
jb
jbe
mov
xchg
mov
pop
add
and
sti
mov
clc
stos
cmp
add
jbe
pop
lods
inc
mov
popf
ret
push
fwait
push
sbb
movsl
mov
rcrb
ret
lods
iret
sbb
dec
test
dec
sub
push
pushf
cli
pop
and
adc
adc
bound
fcomps
bound
lods
fdivl
jne
andl
mov
pop
in
incb
movsb
push
fnstcw
mov
ficomps
fsts
or
add
repz
in
jecxz
arpl
inc
out
std
push
dec
in
ds
xchg
jecxz
lods
test
jp
adc
or
ss
in
and
cmp
lea
sbb
mov
mov
push
adc
pop
xor
adc
mov
inc
xchg
bound
jns
mov
cltd
or
out
ficompl
mov
je
sub
mov
fdivr
sti
mov
push
cwtl
xchg
or
enter
pusha
inc
adc
sub
cli
orl
and
mov
jb
bound
inc
enter
or
stos
push
test
xchg
mov
stc
dec
pop
jp
push
outsb
pop
jp
jbe
fbstp
insl
inc
clc
hlt
call
xchg
xchg
xchg
ficoml
mov
xchg
fistl
mov
lods
xchg
xchg
xor
jge
pop
xor
cwtl
es
xor
test
and
scas
ficompl
mov
sbb
stos
cwtl
xor
lret
xchg
xchg
sub
dec
and
xor
test
insl
sarl
mov
xlat
fistpll
jmp
vpsrldq
add
add
push
inc
mov
ljmp
adc
jo
es
adc
or
add
xor
ja
ret
loopne
jmp
sti
clc
popf
mov
cmp
jp
add
jg
ret
mov
add
push
pushf
mov
fstpt
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
adc
dec
dec
jnp
fldenv
fucomp
jae
jns
mov
popf
arpl
add
mov
outsb
push
adc
idivb
push
jne
or
ja
or
fwait
lods
push
pop
ds
mov
pop
xor
cwtl
movsb
sahf
xor
test
and
mov
or
lock
cwtl
xor
lret
xchg
xchg
sub
mov
rcrb
push
out
xor
inc
stos
cmp
pop
stc
in
pop
pop
jle
popf
iret
sbb
add
add
adc
add
add
add
mov
add
call
shr
repz
inc
in
mov
add
mov
cmp
jp
add
jg
ret
mov
add
push
pushf
mov
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
adc
mov
imul
sbb
fldt
popa
jl
shrb
movsl
repz
dec
or
push
mov
cmpsl
jnp
cmp
jb
lods
push
cltd
jo
adc
jb
cmpsb
sbb
sbb
adc
loope
rcrb
push
inc
clc
or
fwait
push
dec
mov
test
push
dec
and
add
stc
test
xor
pop
loope
cmpsl
ret
fstl
insb
mov
mov
bound
mulb
lret
xor
test
js
sbb
mov
in
jne
pop
mov
sbbl
mov
push
sahf
cmp
cmpb
sti
daa
mov
lock
mov
jbe
adc
mov
push
sub
mov
jp
repz
lahf
or
lret
sbb
push
jmp
les
push
cli
stos
repnz
inc
frstor
les
nop
pushf
cmp
mov
movsl
jge
cmp
cmpsb
xchg
stos
sub
movsl
sbb
test
add
sbb
and
sbbb
pop
divl
mov
mov
adcl
stos
arpl
dec
pop
movsl
std
add
push
mov
pop
xchg
imul
mov
jns
enter
cmpsl
ret
test
jb
cltd
xlat
call
xor
jb,pt
inc
mov
jbe
add
loope
xchg
xor
mov
cmp
xor
sbb
mov
dec
pop
mov
mov
xlat
mov
cmp
mov
mov
cltd
sub
sbb
movsl
incb
fsubrl
cwtl
push
imulb
xlat
dec
pop
lds
mov
test
jge
leave
pop
and
xor
call
shl
lret
cmpsl
mov
lcall
cmp
adc
mov
movsl
adc
mov
adc
clc
cltd
lds
movsl
mov
jecxz
sahf
ficoms
ficompl
and
sbb
jl
sbbl
push
dec
mov
jno
leave
mov
push
in
xchg
rol
pop
test
mov
out
enter
cmpsl
ret
out
stos
js
push
cmpsb
das
mov
bound
sub
mov
inc
lahf
or
mov
cwtl
adc
xchg
int3
inc
ret
xor
stos
pop
call
arpl
pop
cmp
mov
mov
push
xchg
sti
pop
push
inc
push
mov
jo
or
in
int3
pop
dec
lock
add
dec
lds
shr
lret
lock
shll
fsubrl
push
lods
push
adc
lcall
jmp
lods
in
mov
cmpl
xchg
adc
sbb
pop
cltd
int
push
test
lret
jecxz
mov
mov
rcrb
add
lret
sbb
fdivrs
ljmp
xor
sbb
rcll
aam
lods
repnz
xor
mov
es
lods
repz
movsl
cli
jae
xchg
cld
loope
pop
jnp
enter
lea
iret
sbb
inc
enter
repnz
cwtl
fwait
adc
fadds
dec
cmpsl
inc
cmc
dec
mov
sbb
stos
int
add
adc
cwtl
lock
sti
pop
es
rcr
pop
push
cmp
mov
ret
jecxz
mov
mov
ret
xchg
int3
or
mov
outsl
sub
mov
mov
scas
test
push
xor
adc
orb
arpl
xchg
xchg
fcomps
insl
mov
jae
add
idivb
dec
xchg
mov
xor
sbb
mov
add
and
pushf
shll
xor
or
lret
and
fwait
pusha
loop
and
in
test
lcall
ds
data16
and
rcr
sbb
push
adcl
test
push
gs
pop
adc
pop
lea
shr
mov
fnsave
sbb
sbb
leave
sbb
xor
int
pop
mov
mov
pop
pop
shll
out
sub
add
movl
fcoml
lds
sbb
sti
mov
aaa
lock
sbb
mov
sbb
or
int
test
jmp
nop
shl
arpl
les
cmp
cltd
push
sub
lds
fildll
mov
xchg
stc
cli
in
test
cmp
test
add
mov
outsl
lods
mov
mov
mov
mov
pop
test
jae
in
dec
mov
cld
adc
into
xor
addr16
loop
sarb
rcrb
addl
mov
lahf
jp
jo
outsb
icebp
push
jb
or
cmp
fldt
dec
add
or
pop
pop
sarb
call
mov
and
stos
hlt
pop
cmp
mov
cmp
mov
fnstenv
adc
inc
mov
push
inc
pop
pop
pop
pop
movsl
jne
fsubrs
leave
mov
clc
sbb
inc
into
fmuls
sti
mov
sbb
nop
mov
mov
int
jo
add
or
and
and
mov
mov
and
movsl
stos
cmp
out
scas
mov
insl
movsb
leave
inc
sbb
mov
push
aaa
repz
pop
fs
icebp
sbb
popa
mov
or
xchg
dec
rorb
mov
scas
xor
pop
mov
push
sub
jno
adc
push
jg
lcall
jbe
pop
js
cmp
addl
imul
les
mov
cltd
xor
test
lods
in
mov
pop
fidivrl
cmp
fiadds
into
sbb
fcmovnbe
insb
aaa
daa
shlb
test
nop
dec
daa
sub
mov
das
or
mov
fwait
or
loopne
cmp
movsb
fcoml
and
xor
mov
push
mov
cmp
ja
mov
nop
mov
xlat
xor
mov
addr16
xchg
push
mov
outsl
jg
add
mov
clc
mov
sub
cli
ret
imul
ud1
outsb
push
cld
ss
movsb
inc
pop
mov
push
mov
jae
cmp
movsb
push
add
mov
mov
push
or
mov
sarb
aas
cmpsl
xlat
in
subb
mov
mov
sub
mov
xchg
int
jmp
mov
cld
jmp
pop
jp
pop
test
push
ljmp
bound
ret
mov
out
or
cmpsl
fstpl
fs
orb
inc
mov
rcrl
xchg
nop
mov
cmpsl
inc
pop
mov
pop
push
xchg
int3
sbb
cmp
in
mov
or
mov
mov
cmp
jp
add
jge
ret
mov
add
setl
js
divb
aad
mov
lret
push
and
xchg
leave
dec
pushl
lret
jmp
xchg
mov
arpl
mov
ret
pop
sub
mov
xchg
outsl
jno
mov
addr16
enter
dec
mov
add
pop
push
ficoms
pop
push
jl
clc
mov
jl
shlb
fistpll
pop
mov
jo
xchg
adc
je
pop
mov
cmp
xchg
pop
call
jle
stc
xlat
pusha
jo
xchg
fimuls
cmp
xor
mov
mov
lds
test
and
aad
fsubs
add
sbb
mov
dec
add
lods
aas
push
mov
push
pop
add
aas
divl
roll
stos
aad
add
mov
jecxz
mov
sub
and
mov
outsl
push
push
pop
mov
mov
cmp
jae
cltd
mov
jae
cmp
push
fs
dec
mov
aas
mov
push
push
lret
cmpsb
push
push
inc
fsts
test
lods
inc
inc
mov
mov
pushf
lock
js
jge
xlat
filds
cwtl
fst
in
testl
popl
rcrb
cmp
cmc
stos
fxtract
sbb
out
push
push
lods
mov
out
mov
cmp
pop
jns
mov
inc
clc
xor
sub
aaa
sbb
leave
xchg
mov
cmp
aaa
dec
daa
push
xor
xchg
sbb
pop
das
pop
pop
or
mov
dec
inc
mov
sahf
cmp
lret
fbstp
push
popa
mov
popf
lcall
or
mov
pop
dec
lock
cld
jg
inc
mov
adc
adcl
enter
jne
pusha
pop
add
adc
imul
insl
ret
mov
mov
and
mov
jl
fs
jle
pop
add
test
and
scas
mov
incl
movsl
fcompl
js
pop
push
jp
pop
mov
lock
cltd
xchg
mov
mov
fwait
xor
cmp
xchg
mov
jle
ds
jmp
std
mov
sti
and
test
loope
xchg
and
mov
xchg
cmp
adcb
lea
aam
push
dec
add
mov
cmp
jp
add
jge
ret
mov
add
setl
js
divb
aad
mov
lret
push
and
xchg
leave
je
scas
mov
sbb
stos
inc
popf
lret
cld
mov
test
cmp
inc
push
cmp
lret
add
jbe
movsb
sub
pop
push
mov
lods
jle
cli
aad
xor
add
inc
pushf
rorb
push
jmp
leave
adc
aas
cmpsl
xlat
add
mov
sub
push
mov
inc
push
fsubs
lock
jb
popf
mov
sti
in
popa
insl
icebp
cmp
mov
rclb
inc
sbb
clc
ss
adc
inc
ds
sub
mov
push
sbb
loop
sahf
js
test
or
lea
ss
js
cmpsl
xchg
fnstcw
jae
mov
push
xchg
xor
popf
sub
andl
or
imul
fsubrl
cwtl
mov
sub
mov
movsb
lds
nop
test
stos
push
test
lret
loop
inc
sbb
fnstsw
popa
jg
xchg
mov
popf
lret
popa
ret
jo
mov
fdecstp
jge
fldt
cmp
xor
mov
pop
jl
scas
jno
push
mov
mov
jbe
sub
sbb
stc
or
pop
dec
loopne
adc
inc
loopne
mov
mov
pop
fdivrs
pop
mov
xchg
jno
mov
insb
leave
movsb
inc
sbb
pop
jnp
popf
cmc
hlt
std
mov
sti
and
jecxz
jecxz
mov
adcl
imul
test
or
into
pop
stos
shrl
push
mov
stc
pop
mov
xchg
fiadds
push
mov
pop
incb
repnz
cmp
add
inc
cmp
nop
cmp
addr16
decl
dec
notl
fwait
jmp
and
xchg
and
fists
iret
pop
fbstp
jns
push
sbb
out
arpl
mov
or
pop
cmp
lret
add
inc
cmp
outsl
les
sub
imul
adc
mov
cmpsl
sbb
jmp
add
js
mov
add
sarb
test
sahf
mov
je
mov
out
mov
push
jle
enter
and
gs
insl
push
add
or
xlat
push
stc
out
xor
shlb
les
loop
je
sbb
xor
loopne
jne
dec
pop
pop
push
xchg
mov
xor
scas
inc
mov
ret
lret
sahf
imul
xor
insb
jne
pop
dec
aaa
pop
sub
mov
mov
mov
cmp
and
add
mov
loop
xchg
movsl
pop
stos
inc
std
mov
fistps
and
mov
mov
push
dec
dec
popf
lret
mov
cmp
shll
mov
push
push
arpl
xchg
stos
std
lock
dec
pop
cld
shl
adc
adc
and
or
mov
xchg
insl
adc
dec
fsubrl
push
mov
testl
cwtl
fmull
sbbl
mov
xchg
lahf
jmp
es
mov
xchg
sbb
add
jns
testb
fucomi
hlt
std
mov
sti
and
jecxz
jecxz
mov
adcl
imul
test
or
into
pop
stos
shrl
push
mov
stc
pop
mov
xchg
fiadds
push
mov
pop
incb
repnz
cmp
add
inc
cmp
nop
cmp
addr16
decl
dec
xor
mov
push
lods
push
jnp
mov
sbb
cld
mov
imull
fs
mov
lahf
adc
cmp
or
mov
xchg
adc
xchg
jl
ds
repnz
lcall
mov
lahf
dec
mov
cmp
sbb
scas
mov
sahf
push
pop
jns
sbb
rolb
add
push
xchg
jmp
test
sahf
mov
je
mov
in
mov
pop
xlat
das
push
gs
or
stos
mov
call
inc
or
jne
loope
icebp
mov
cmp
lds
mov
adc
loopne,pn
jne
dec
pop
pop
push
xchg
mov
xor
scas
inc
mov
ret
lret
sahf
ljmp
imul
xor
insb
jne
pop
dec
aaa
pop
sub
mov
and
sbb
cmpsb
mov
adcb
imulb
sub
adc
test
cld
sub
aaa
dec
pop
lods
dec
push
add
pop
mov
adc
xor
test
sbb
xchg
loop
aad
push
adc
mov
sahf
movsb
mov
lret
lret
aam
sar
int3
inc
mov
push
xchg
pop
iret
pop
in
popf
jecxz
cld
repnz
jp
jle
or
push
pop
inc
shlb
push
dec
aam
dec
loope
xor
dec
aam
jns
dec
xor
cmp
enter
inc
sbb
cmp
fwait
lea
and
jecxz
jecxz
mov
adcl
imul
ret
adc
mov
mov
pop
loopne
stos
cmp
inc
mov
mov
aas
pop
cmpb
ret
inc
stc
dec
fiadds
js
shll
sbb
sarb
cltd
xor
insl
cmpsl
ret
pop
cld
add
push
stos
push
inc
inc
push
dec
mov
lahf
mov
mov
sti
jae
fisttpl
inc
or
push
cmp
sbb
roll
fsts
scas
xchg
stos
dec
loope
dec
cmpsl
outsb
shlb
sti
xchg
xchg
rolb
inc
mov
ficoms
jle
lods
mov
and
add
cmp
lahf
mov
dec
xchg
mov
dec
repz
les
cltd
mov
aam
fiadds
mov
jne
insl
cmovae
test
push
push
out
cmp
mov
test
inc
sub
dec
lret
cwtl
pop
inc
cmp
fcoms
dec
lods
insl
aaa
loopne
out
mov
arpl
xor
aam
xchg
dec
or
jno
mov
sbb
in
clc
add
add
mov
sub
popf
cmp
sbb
jg
hlt
adc
mov
pop
stos
loope
and
in
or
xchg
cli
xor
scas
add
loopne
test
ficomps
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
data16
adc
mov
dec
sbb
lea
push
mov
scas
fucomi
jg
push
pushf
xchg
cli
and
push
mov
add
push
sti
add
mov
stc
mov
xor
scas
jae
push
inc
xchg
adc
enter
jae
jne
mov
or
mul
mov
cwtl
mov
lock
cwtl
cmp
stos
jne
dec
ds
add
subb
adc
pop
ss
or
mov
in
push
dec
daa
cmp
jp
add
popa
dec
sbb
add
addr16
scas
xorl
les
nop
xlat
stos
test
fiaddl
pop
inc
mov
stos
inc
ret
jg
xchg
mov
popf
lret
mov
pop
or
sbb
push
cld
pop
push
mov
or
add
xchg
rolb
sub
into
mov
bnd
jg
dec
xchg
push
sub
aas
add
repz
push
andl
sarb
out
jmp
adcb
rorb
pop
mov
aas
mov
xchg
pop
xabort
pop
lahf
movsb
fcmovne
mov
lahf
push
adc
mov
sbb
movsl
mov
lea
push
pop
sarb
loopne
stos
mov
mov
pop
pop
dec
or
jno
mov
sbb
in
clc
add
add
mov
sub
ljmp
nop
clc
inc
mov
mov
ja
lahf
and
and
push
cmc
cmpsl
dec
pop
dec
or
push
sbb
jmp
pop
or
test
inc
sub
leave
mov
dec
cmpsl
push
ja
dec
jl
xor
fsubrs
jecxz
into
hlt
push
sbb
lahf
or
jmp
ds
fwait
add
pop
cwtl
pop
xlat
in
test
push
ret
js
jo,pt
rclb
gs
adc
push
lods
xlat
es
mov
jge
and
mov
mov
lahf
fiadds
xor
push
add
add
andb
js
sbb
hlt
cwtl
add
jmp
cmpsl
inc
popa
mov
in
fstpt
mov
sub
add
cmp
mov
movsb
mov
lret
jecxz
pop
cwtl
daa
fcomps
push
xor
jo
les
xchg
in
cwtl
lret
movsl
xchg
cmpsl
jmp
aas
add
adc
cmp
mov
sbb
fldt
arpl
movsl
mov
cli
fsubrl
adc
or
out
ficompl
mov
push
pusha
ds
mov
xor
es
add
sbb
ret
cld
push
dec
sub
or
mov
js
pop
repz
es
inc
pusha
pop
orl
mov
pop
jnp
and
adc
jae
ret
fsubs
push
fwait
and
mov
mov
cmp
jne
jecxz
icebp
into
fcompl
in
loope
or
push
adc
mov
mov
gs
xor
sub
or
push
into
inc
cmp
cmp
lds
ds
sbb
cmp
dec
add
cmp
add
and
mov
aaa
mov
lock
addr16
sbb
rorb
sbb
pushf
dec
test
dec
les
mov
xor
adc
xchg
xor
push
cmp
cmp
ret
cmpsl
repz
xchg
push
cmp
or
inc
test
fs
stos
jno
in
mov
cmp
cmp
jmp
mov
js
rcrb
inc
sarb
push
push
cmp
add
stos
push
aad
je
inc
cwtl
jmpw
mov
lret
in
mov
mov
cmp
xor
je
xchg
xchg
inc
cltd
enter
mov
enter
xchg
xor
dec
arpl
mov
int
pop
ja
jmp
cmpsb
pop
xor
and
mov
popa
jne
lock
pop
xchg
dec
sbb
mov
mov
ret
orb
adc
pop
push
adcl
cmp
jo
mov
mov
fs
lods
pushf
push
test
insb
push
pushf
leave
jo
add
pop
and
xor
jmp
jg
popf
testb
ds
adc
xor
add
idivb
or
lret
push
push
adc
jns
dec
inc
sbb
les
jge
lds
pop
fs
jg
sbb
js
das
popa
or
lret
test
arpl
rclb
mov
xchg
and
sbbb
or
mov
jae
loopne
xor
mov
mov
mov
adc
add
mov
pop
lret
pushf
and
sbb
dec
pop
mov
dec
mov
aad
dec
mov
nop
mov
dec
and
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
mov
mov
mov
and
cmpsl
mov
sarl
not
lret
inc
scas
pop
aaa
adc
inc
lea
push
mov
leave
pop
fildll
cmp
fcmovne
pop
cmp
pop
and
or
nop
and
pop
xor
fldt
ret
cmp
and
lods
mov
lods
pusha
push
lahf
dec
mov
add
pushf
inc
pusha
push
cmp
cmc
inc
xchg
add
leave
mov
cs
subl
ljmp
test
out
xchg
out
movsl
cwtl
out
sti
pushf
imul
orb
add
mov
mov
fcomi
enter
in
xchg
mov
mov
test
sbb
popf
or
mov
dec
mov
into
pop
stos
nop
or
lret
test
repz
pop
mov
mov
mov
cltd
aas
pop
lock
loopne
rclb
int
inc
sbb
imul
sbb
xlat
test
sbb
lret
pop
repz
aad
jae
sbb
stos
dec
ss
in
xor
pop
sub
adc
or
and
push
mov
mov
pushf
add
adc
mov
jmp
mov
jg
fsts
xor
arpl
insl
sbb
rcll
in
cmp
out
jge
sbb
cmp
dec
xor
cmp
int3
out
roll
enter
cmpsl
ret
mov
fwait
shlb
aas
mov
popf
iret
sbb
mov
mov
cwtl
pop
sub
inc
cmc
xor
dec
daa
adc
push
sbb
negl
inc
adc
sub
or
int
cld
je
pop
xlat
fcoml
inc
cwtl
mov
push
add
push
push
pusha
xor
jnp
cmpsb
dec
aaa
mov
pop
dec
and
stc
add
jmp
xor
dec
dec
sarb
dec
daa
mov
imul
jp
mov
xchg
sti
icebp
stc
inc
pop
aaa
mov
xchg
cld
stc
js
xor
movsl
xor
mov
repnz
pop
jno
inc
scas
jne
inc
xchg
outsl
stos
inc
lcall
or
stos
xor
xor
cwtl
faddl
fwait
leave
loop
inc
mov
push
call
ss
sbb
sahf
xlat
rcr
xor
dec
pop
mov
xchg
jecxz
in
test
enter
cli
jno
xchg
outsl
sahf
rcll
lea
jle
bound
out
mov
test
hlt
push
test
mov
adc
or
jns
idivl
arpl
clc
pop
loopne
decl
sbb
inc
sbb
test
push
in
mov
xchg
xchg
push
and
nop
lea
xchg
leave
fdivl
pusha
mov
dec
or
dec
xor
sub
dec
loop
mov
pop
cli
and
imul
fisubrl
pop
repz
imul
cmp
hlt
ljmp
lcall
shll
and
or
mov
pop
js
mov
subl
lds
inc
xchg
jl
daa
dec
inc
hlt
jp
inc
and
jecxz
movsl
icebp
pop
out
xchg
sub
mov
sbb
mov
int3
in
pop
push
lds
mov
sub
cwtl
or
mov
sub
inc
sub
mov
mov
push
push
test
jbe
or
or
in
push
fstl
fwait
cmp
call
lea
flds
fcomps
cmc
mov
push
mov
sbb
jle
pop
mov
fsubrl
xchg
push
hlt
das
sti
mov
subb
aas
and
stc
push
dec
mov
push
dec
dec
stc
xchg
mov
inc
int
pop
pop
stos
shl
mov
leave
lods
insl
sbb
cmp
mov
and
sub
pop
ret
scas
dec
fs
mov
sub
ficomps
or
test
ss
cmc
fstpt
aas
outsb
cmp
mov
out
add
adc
das
xchg
int
dec
out
scas
addr16
pushf
xchg
je
pop
jne
scas
xlat
insb
jae
ds
cmpsl
ret
fld
pop
je
jb
add
add
sbb
xorb
push
dec
mov
jne
lret
dec
daa
adc
sbbl
repz
or
mov
stc
or
inc
addb
cmp
call
std
lahf
lret
hlt
mov
flds
enter
cmp
mov
cmpsl
or
and
loop
ss
dec
jno
push
adc
add
xchg
aas
jno
pop
cmp
sub
ljmp
bound
push
cmp
repz
idivb
insl
xchg
dec
mov
sub
cltd
xchg
pop
das
xchg
dec
mov
aad
stos
pusha
push
cmp
ret
jno
push
mov
and
add
xlat
in
loopne
addr16
es
mov
pop
shl
daa
mov
lods
push
call
movsl
mov
mov
pusha
ds
add
pop
lea
pop
fsubl
mov
pop
dec
test
js
sbb
popf
add
xchg
jmp
mov
dec
mov
pop
stos
nop
or
lods
dec
add
fcoml
cmp
repz
sti
mov
jecxz
mov
pop
cmp
in
rcl
sub
in
xor
mov
cltd
xor
mov
scas
push
mov
push
insb
push
cli
mov
das
fstp
pop
lods
movsb
push
dec
outsb
out
mov
jae
add
test
push
mov
mov
sbb
cmp
pop
scas
dec
fs
cmc
pop
cmpsl
test
orb
inc
arpl
inc
outsl
in
pop
pop
mov
popf
pop
push
ds
pop
cmpsl
xlat
or
cmp
jecxz
add
insb
cmp
fsubrs
xchg
sub
mov
pop
int3
mov
cmp
xchg
mov
insl
cltd
mov
std
es
jge
dec
pop
sbb
xor
int3
xor
inc
sub
jns
jmp
fidivl
dec
mov
mov
outsl
mov
les
mov
divb
or
pop
add
or
sub
clc
cld
mov
sti
call
dec
jmp
cld
or
pop
cmp
jg
js
pop
dec
xor
in
dec
mov
lret
dec
sub
les
and
fcomps
les
mov
mov
gs
cmp
push
int
xor
dec
jns
into
mov
sub
mov
inc
pusha
push
pop
ja
or
je
sbb
pop
cmpsl
xlat
mov
dec
out
mov
mov
pop
ds
inc
sub
pop
push
les
or
push
lcall
mov
mov
out
call
pop
sbb
aas
popf
iret
out
or
lret
add
xchg
shr
adc
into
ret
imul
add
xor
or
push
sbb
pop
or
push
xor
xor
clc
sti
mov
xor
jge
dec
nop
mov
mov
adc
mov
lea
adc
cmpb
jne
decl
shlb
add
stos
int
mov
adc
stos
inc
mov
adcb
movsl
pop
or
xor
mov
push
push
arpl
pop
push
fnsave
jns
add
xchg
sbb
xor
cmp
sbb
push
repz
jo
popa
or
push
cwtl
sbb
arpl
inc
xchg
sub
pop
in
jle
in
jp
mov
xchg
jmp
lods
out
xor
pop
insl
in
mov
inc
fld1
gs
xchg
data16
leave
sub
sub
mov
cmp
test
pop
sub
adc
cmpsl
inc
xchg
pop
push
test
movsl
cmc
addl
xchg
fsubp
aas
repz
clc
sti
fimuls
dec
push
lock
inc
in
ja
lock
sbb
sbb
jge
pop
mov
fsubrl
adc
sarb
sub
pop
push
lods
push
mov
dec
xor
push
or
pushf
cmp
push
cmp
outsb
push
push
inc
pop
repnz
mov
dec
cmpsl
push
scas
subb
mov
aad
in
cmp
mov
fstpl
jnp
scas
sbb
jmp
mov
clc
jl
dec
arpl
out
testl
std
decl
and
dec
leave
out
adc
ja
fstpl
cmpsb
xchg
insl
jbe
fidivl
mov
dec
jne
mov
fs
push
add
popf
mov
mov
dec
inc
aam
mov
or
xor
mov
popa
test
or
jae
sub
or
or
push
and
fadds
stos
sbb
cmp
enter
add
cmpsb
movzwl
and
movsb
xor
push
mov
enter
push
icebp
xor
fsubrs
dec
in
ficoml
cld
adc
push
lds
sbb
mov
adc
adc
mov
bound
push
cmp
xchg
aad
inc
pop
mov
push
push
dec
cmpsl
outsb
hlt
sub
push
cmp
inc
xchg
dec
data16
sahf
ja
cmp
mov
cmp
push
push
push
or
cld
jle
into
loope
decl
cmpsb
in
pop
mov
je
mov
xor
cwtl
sbbl
pop
mov
mov
movsl
mov
sbb
fwait
lea
iret
or
xor
mov
and
shr
stc
jne
cmp
adc
or
mov
pop
xor
test
lea
dec
movsb
lahf
adc
mov
push
pop
add
or
js
sbb
gs
adc
pop
out
ja
cmc
rcrl
mov
cmp
pop
dec
dec
rcrb
adc
jecxz
in
fistpll
push
cmc
xlat
cmp
xchg
sbb
mov
dec
pop
lret
fidivl
mov
xchg
cmp
or
lock
rcl
jae
cmp
push
mov
dec
sub
push
out
aas
lahf
fmul
xor
inc
bound
mov
mov
or
pop
jae
add
xchg
int
sub
dec
and
xchg
fst
push
pop
fs
ror
movsb
inc
inc
pop
clc
jecxz
mov
jmp
std
mov
sti
and
jmp
jecxz
mov
adcl
imul
test
or
into
pop
stos
shll
mov
dec
sbb
mov
or
fidivs
mov
xor
xor
jecxz
enter
jbe
adc
xchg
sbb
xor
rcl
clc
xor
imul
xor
sub
dec
jb
fwait
xchg
jl
adc
mov
mov
dec
popf
scas
je
or
or
or
cmp
adc
cltd
xchg
lret
mov
add
ds
pop
test
cmp
sbb
xor
xor
mov
ss
fidivrl
mov
adcb
sbb
mov
adc
cmpsb
pop
fistl
xchg
mov
sub
lods
mov
dec
xor
repz
sbb
jns
ret
dec
inc
xor
mov
add
push
mov
cmp
fcomp
cmc
or
addl
and
jne
jbe
sub
scas
mov
sahf
xor
iret
xor
fidivrs
adc
cwtl
mov
dec
mov
and
mov
int3
ret
popf
faddl
mov
mov
push
push
test
push
and
xchg
push
and
outsb
pop
jp
je
mov
sub
mov
dec
xor
fisubrl
shrl
push
mov
jae
and
sub
loop
leave
add
pusha
push
sbb
repnz
jge
push
mov
fisttps
shlb
idivl
clc
jb
shrl
pop
mov
mov
fucomp
push
mov
lods
xlat
insb
imul
mov
cmpsl
ret
fld1
shlb
sbb
and
jmp
jecxz
mov
adcl
jns
fdivs
mov
mov
imul
mov
call
mov
and
lahf
dec
fstps
inc
inc
sbb
jecxz
movl
add
rcrl
cltd
je
lds
leave
fsubrl
rorl
sbb
jns
lds
nop
clc
xor
shll
inc
lock
xchg
xor
fucomp
xor
mov
mov
js
fisttpll
xchg
popa
xchg
in
addb
and
mov
repnz
pushw
mov
xchg
pop
popf
cmp
xchg
cltd
push
adc
ret
test
xor
insb
outsl
xor
sbb
inc
and
int
stos
jns
popl
sarb
test
jg
notb
mov
or
mov
jbe
push
decb
test
aaa
push
mov
icebp
inc
clc
dec
sbb
dec
adc
mov
and
inc
call
push
lods
inc
mov
pop
pop
shl
mov
sub
or
movsl
pop
push
popf
jae
add
fwait
lahf
dec
ret
mov
jecxz
add
cmp
pop
dec
jo
sbb
add
cmpb
xor
adcl
mov
outsl
xor
sub
pop
stos
push
and
cltd
imul
push
dec
xor
jb
inc
and
push
subb
cmp
jbe
movsl
jns
sub
cli
mov
add
mov
push
scas
mov
gs
aad
fs
cmp
shl
jno
push
mov
ds
push
inc
and
or
mov
mov
in
shlb
stos
idivl
inc
aam
std
mov
stc
and
push
jmpw
mov
lret
in
mov
mov
or
pop
fdivrl
jge
jo
cltd
mov
push
adc
inc
sub
orl
icebp
push
xor
lea
cmp
pop
lea
ss
cmp
adc
mov
mov
cmp
jp
add
mov
push
lock
cmc
dec
push
sbb
fsubrl
cwtl
ds
popf
sbb
adc
mov
dec
mov
sbb
mov
cltd
ljmp
aaa
mov
jno
add
or
adc
sub
push
push
ficoml
outsl
cmp
add
jno
and
dec
fcompl
xchg
js
jle
scas
push
enter
jecxz
mov
mov
adc
std
push
addl
aam
pop
rorb
dec
dec
shlb
push
lret
jp
dec
pop
test
sub
mov
mov
insl
lea
push
outsl
push
dec
or
mov
pushf
sbb
and
jecxz
adc
pop
jb
dec
cltd
mov
inc
push
adc
adc
aad
dec
js
adc
dec
pop
movsl
or
mov
mov
cmp
jp
add
mov
repnz
loope
add
mov
xchg
sub
adc
leave
cmp
clc
cmpsb
jb
lcall
fucomp
jae
cs
leave
and
test
dec
cmp
mov
sarb
jo
test
lods
xchg
add
pop
stos
xchg
stos
sti
adc
shlb
jle
cltd
test
mov
xchg
fidivs
aad
stc
push
add
cmp
xlat
cld
fwait
sti
sub
in
andb
icebp
xchg
ja
cwtl
out
lret
dec
jb
and
int
jge
inc
mov
loope
in
mov
movsb
jp
mov
cmpsl
in
test
mov
xchg
call
stos
je
or
ret
push
or
int
xor
inc
push
shlb
add
jb
pop
mov
loopne
pop
adc
jae
xchg
sbb
jns
outsl
inc
sbb
into
add
jo
ret
xchg
and
adc
inc
clc
lds
jns
lds
nop
test
scas
push
test
lret
loop
push
and
mov
jnp
jge
push
and
jne
bound
mov
or
xor
dec
push
ss
outsb
imulb
jae
sub
movsb
push
push
push
enter
xor
pusha
mov
fdivrl
sub
sub
xchg
out
idivl
add
es
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
lods
push
sub
test
movsl
stos
xor
test
popa
jne
and
loop
cmp
cwtl
mov
rcrl
scas
push
or
xchg
dec
sub
aad
test
xchg
mov
add
mov
mov
sub
ljmp
mov
lret
jecxz
gs
mov
xor
mov
mov
sbb
shrb
imul
pop
push
aaa
pop
inc
std
xlat
cmp
inc
and
sub
inc
push
mov
les
jno
inc
lods
insl
lret
outsb
mov
adc
out
pop
sbb
cmp
out
inc
lcall
cmp
xchg
mov
ja
xor
xor
mov
rol
jns
push
pushl
cmp
xchg
xchg
add
inc
sbb
in
fadds
mov
int
dec
mov
ds
cmp
lods
je
cmp
cmp
mov
xchg
or
pop
fsubl
fsubs
cmpsl
cmp
sbb
xchg
dec
inc
mov
adc
and
dec
inc
cmp
lea
ret
jmp
adcb
popa
mov
pushf
dec
pop
mov
sbb
sub
and
clc
sti
mov
push
jmp
sbb
xorb
nop
dec
sbb
mov
pop
adc
pop
xor
dec
sbb
push
jl
push
pop
stos
push
insb
aad
sbb
push
lahf
loop
jns
xchg
jnp
fldcw
clc
scas
repz
jo
shll
push
insl
sbbl
or
sbb
outsl
shlb
mov
aam
aad
outsl
add
xchg
cs
jnp
leave
clc
shlb
fucomi
repnz
mov
ss
xor
jle
idivb
in
rolb
cmove
hlt
imul
adc
and
repz
movsl
xor
inc
and
es
adc
scas
loopew
popa
lret
mov
lea
hlt
jl
dec
mov
daa
shlb
inc
stos
add
xor
mov
lea
cli
jo
pop
lret
lret
int
repz
sti
cmpsl
mov
in
xor
mov
fiadds
xor
pop
dec
pop
inc
pop
jb
xor
inc
loop
xor
arpl
dec
xor
stos
lret
add
ljmp
adc
mov
enter
xor
push
cmp
aas
sti
mov
outsb
cltd
sbb
bnd
lcall
xor
dec
jae
les
leave
int3
push
push
inc
fists
dec
out
bnd
cld
mov
in
cmp
aas
add
push
idivb
dec
adc
sbb
push
cmp
push
mov
or
lods
push
sub
and
fbld
adc
cs
lea
insb
mov
mov
mov
and
xor
lea
sbb
adc
loop
pop
push
andb
ss
cmp
mov
clc
into
cmp
xor
or
fnsave
aas
mov
leave
pop
inc
test
dec
pushf
fs
lret
push
and
fs
inc
mov
mov
rcl
pop
into
pop
xchg
xor
cmpsl
xchg
adc
mov
push
mov
scas
sbb
xchg
out
mov
pop
sahf
xchg
out
idivb
bound
lods
or
loope
dec
jmp
pushf
cmpsl
fucomi
jmp
pop
cli
xor
int3
pop
lock
andl
je
pushl
test
out
jp
sbb
fidivrl
xlat
insb
jmp
lea
mov
stos
mov
pop
jl
jns
fwait
lea
push
mov
sahf
mov
dec
dec
or
fidivl
jmp
or
fisttpl
ja
xor
sub
stos
shr
fistpl
into
pop
xor
loopne
pop
pop
dec
orb
cmp
mov
lock
mov
pop
or
mov
sbb
movsl
mov
mov
xor
jns
cmpsl
add
dec
inc
cmp
int3
cmp
jae
mov
stc
cli
in
test
or
and
aas
mov
notb
dec
cmp
mov
dec
or
movsb
push
sub
loop
xchg
jle
pop
jno
jmp
lret
insl
xor
pop
push
mov
inc
sarb
cld
jo
pop
ds
lret
xchg
and
fstl
mov
fidivrl
mov
ds
les
mov
iret
es
cltd
push
xor
mov
inc
push
xor
aad
addb
lret
sbb
insl
cmpsl
push
dec
mov
rorb
inc
mov
aam
ret
inc
inc
xor
jmp
sbb
repnz
adc
icebp
dec
sbb
adc
lahf
mov
cwtl
lret
inc
add
mov
js
push
lret
mov
dec
push
pushf
sub
adc
mov
jmp
pushf
dec
arpl
js
or
sbb
in
idivb
and
test
aam
inc
adc
int3
dec
fs
pusha
cmp
push
enter
pusha
pop
std
sbb
cmp
scas
inc
ljmp
dec
push
mov
add
daa
inc
sub
adc
lods
jmp
xchg
in
jbe
cli
ss
and
insl
pop
and
shll
pop
cmpsb
cmpsl
mov
and
add
andb
js
sbb
popf
leave
leave
xchg
jmp
mov
dec
mov
into
pop
stos
nop
or
lret
test
repz
mov
mov
push
hlt
mov
cmp
sbbl
repz
cmpl
jmp
xchg
cwtl
leave
pop
stos
push
insb
rorl
enter
sub
ss
lahf
pop
jae
std
popf
xor
lahf
std
scas
cmp
in
xchg
dec
bound
pushf
testl
test
and
stos
popf
lock
cld
and
pop
ja
sub
add
jbe
jmp
and
js
mov
fbld
js
stos
sbb
sbb
in
in
pop
sub
sti
add
sub
push
pop
adc
xchg
cmp
adc
xchg
push
testl
jmp
lret
jge
mov
dec
testl
movsb
sub
mov
push
sbb
loop
sahf
js
test
xor
sbb
test
dec
pop
mov
mov
test
int3
mov
mov
sub
mov
stos
add
dec
dec
mov
imulb
fsubrl
pop
imul
xchg
push
push
xchg
hlt
dec
sbb
out
cli
lret
mov
fs
mov
mov
pop
bound
or
ret
cmp
addb
xor
pop
stos
xchg
cmp
jb
loopne
sbb
cwtl
inc
sbb
lods
fstp
sti
push
lahf
mov
sub
xchg
stos
andl
pop
inc
mov
cmp
fsubrs
fildll
mov
xor
push
insb
popf
push
out
xor
iret
gs
ljmp
insl
sahf
sbb
jg
sbb
add
loop
ret
add
loop
cmc
leave
outsl
pop
aam
in
dec
in
shl
pop
and
arpl
xor
ja
ret
loopne
jmp
sti
clc
popf
mov
cmp
jp
add
outsl
dec
sbb
add
push
pushf
mov
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
adc
mov
insb
mov
sbb
fldt
popa
les
mov
pop
outsb
fsts
ds
sbb
imul
add
sbb
scas
and
sbbb
jle
lods
fstp
sti
push
lahf
mov
sub
xchg
stos
iret
and
lea
js
ds
inc
mov
cmp
dec
lods
push
jmp
mov
aam
jbe
mov
pop
mov
clc
les
lea
xor
mov
faddl
push
sub
mov
dec
jb
jl
dec
mov
xchg
movsb
xchg
test
mov
repz
loope
cld
fwait
les
sub
into
fwait
cmp
imul
lret
jecxz
add
sbb
jl
mov
sub
pushf
ss
in
aam
mov
and
push
nop
mov
pop
mov
mov
add
scas
mov
xchg
jg
xchg
mov
popf
lret
fldcw
movsl
pop
sbb
or
cmp
jl
xchg
aaa
test
adc
pop
xchg
xor
cmp
lahf
loop
xchg
dec
sti
pop
sahf
mov
pushl
sbb
aas
cmpsl
xlat
add
mov
or
adc
push
push
xchg
xchg
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
test
cmp
cld
lods
fwait
mov
stos
xchg
out
mov
inc
inc
mov
hlt
je
push
in
or
mov
cwtl
mov
jmp
lret
cltd
mov
call
shr
repz
mov
mov
pop
add
iret
sbb
rcll
pop
sub
roll
fcomps
fs
lcall
dec
test
dec
sarb
adc
mov
add
mov
pop
xor
fisttps
mov
xchg
push
cmp
jmp
adc
shlb
xor
movsb
xor
mov
cmpsb
xor
jb
xchg
cltd
shrl
mov
in
lahf
scas
jg
sbb
jecxz
ja
inc
cmp
ja
mov
clc
jb
adc
dec
xlat
and
dec
in
dec
shlb
adc
test
test
fsubs
sub
cmp
pop
std
js
jb
mov
adc
leave
push
mov
dec
inc
mov
add
mov
fsubrl
in
repz
xchg
push
pop
sti
ljmp
mov
shrl
mov
sarl
into
rcll
jl
gs
add
addb
orl
ficomps
cmc
mov
xor
cmc
arpl
incb
mov
xor
push
sub
mov
jnp
sbb
mov
bound
fxch
push
iret
nop
dec
mov
in
cmp
sub
adc
mov
pop
test
lods
sahf
jno
pusha
mov
insl
scas
movl
mov
aas
cmpsl
mov
add
idiv
lea
pop
ds
lret
pop
sbb
jno
popf
pop
xchg
pop
cmp
jbe
movsb
cld
jno
dec
fsub
jo
movsl
test
bound
xlat
sbb
addl
and
sub
xchg
jmp
mov
dec
mov
into
pop
stos
nop
or
lret
test
repz
test
mov
push
push
popa
mov
sbb
mov
cmc
cld
jg
mov
sbb
mov
stos
mov
xor
lods
push
sub
lds
stos
and
and
stc
inc
pop
dec
add
bound
pop
adc
sbb
aas
sbb
and
push
cmp
push
or
es
lds
bnd
jg
xchg
test
jnp
inc
mov
adc
inc
loop
scas
out
sbb
sub
mov
sbb
nop
movsb
mov
or
push
or
xor
pop
insl
repz
ret
fld1
mov
fwait
rep
rcr
add
jg
mov
jecxz
xchg
add
cmp
xchg
cmp
mov
das
or
mov
xor
sbb
fdivrs
or
rolb
xor
add
cs
mov
mov
enter
mov
mov
xchg
sub
adc
sub
dec
sbb
xchg
and
fucomp
xor
mov
mov
js
fisttpll
xchg
shll
mov
or
aam
fwait
sbb
jb
cmpsl
cmp
push
mov
mov
pop
or
lahf
cmp
sbb
aas
cmpsl
xor
add
mov
mov
out
jle
enter
sub
insb
jbe
ds
or
or
pop
pop
in
sub
data16
jne
popf
stos
mov
sub
cltd
add
sbb
popf
and
xchg
jmp
mov
dec
mov
aam
mov
mov
xor
mov
dec
aas
pop
cmpb
mov
add
push
and
mov
mov
mov
fdivl
fs
dec
mov
jg
push
push
cwtl
popa
push
pop
mov
push
push
test
mov
fildl
scas
stos
inc
mov
lods
push
cmp
stos
push
adc
jns
movsl
sbb
lahf
dec
mov
xchg
mov
sti
or
cmp
add
sti
jmp
aaa
mov
cli
jnp
inc
mov
xchg
inc
sbbl
push
dec
mov
test
adc
test
mov
ljmp
popf
jmp
xor
int
loope
pop
cmp
xabort
js
sub
repz
repz
xor
dec
inc
mov
cmp
outsl
test
fidivs
push
mov
rol
mov
push
adc
cmp
pop
addb
adc
mov
xchg
lret
hlt
mov
pop
sub
mov
or
add
lcall
outsb
xor
arpl
vandnps
shrl
rcr
dec
add
ficomps
sub
js
lret
test
inc
xor
and
test
out
add
jb
movsb
xor
pusha
cmp
inc
in
cmp
cmp
cwtl
js
popf
mov
std
dec
pushf
pop
aas
cmpsl
popa
ret
outsb
pusha
andl
cmpsl
test
jle
xchg
pop
jb
sub
icebp
mov
lret
in
mov
mov
cmp
shl
je
xchg
xchg
inc
cltd
enter
mov
sub
dec
cwtl
test
imul
popa
ljmp
cltd
or
push
popf
je
pop
cmp
mov
and
jge
inc
inc
mov
ficomps
lock
mov
in
ja
cmc
rcll
xor
and
fs
inc
add
mov
push
mov
push
pop
mov
push
push
xor
stos
or
and
les
and
dec
aaa
popf
fidivl
std
cmpsl
bound
or
lock
aad
lcall
ja
nop
test
add
sbb
push
and
sbbb
jle
lods
fstp
sti
push
lahf
mov
sub
xchg
stos
iret
and
lea
js
ds
inc
mov
cmp
dec
lods
push
jmp
mov
aam
jbe
mov
pop
mov
clc
les
lea
xor
mov
faddl
push
sub
mov
dec
xor
jl
dec
mov
xchg
movsb
xchg
test
mov
repz
loope
cld
fwait
les
jmp
ret
arpl
lds
leave
fistps
dec
lahf
lret
jecxz
add
sbb
jl
mov
sub
pushf
ss
and
xchg
dec
and
push
nop
mov
pop
mov
mov
add
scas
mov
xchg
jg
xchg
mov
popf
lret
fldcw
movsl
pop
sbb
or
cmp
jl
xchg
aaa
test
adc
pop
xchg
xor
cmp
lahf
loop
xchg
dec
sti
pop
sahf
mov
mov
mov
add
or
or
adc
push
push
xchg
xchg
inc
push
mov
or
icebp
cld
stos
sub
xchg
sti
xor
or
cltd
hlt
jge
out
mov
fsub
jb
push
push
or
sbb
orl
push
mov
jns
aaa
in
mov
popf
cli
pop
pop
punpcklbw
jle
cmc
sti
lock
adc
or
mov
dec
and
nop
xor
sbbb
mov
mov
mov
mov
push
xlat
pop
mov
jb
fiaddl
push
dec
pop
mov
fs
xlat
dec
mov
lods
jo
shl
add
add
repz
or
dec
sub
mov
xor
mov
mov
loopne
sbb
into
push
pusha
rol
pusha
jp
fisubrs
cld
ljmp
mov
sub
andl
and
imull
popf
stos
in
push
js
cwtl
inc
test
push
fisubs
jp
mov
das
sbb
cmpsb
pop
mov
mov
sbb
out
mov
ret
add
test
dec
sti
daa
nop
fwait
xor
push
lret
xchg
push
adc
inc
ret
mov
mov
call
mov
ret
jecxz
mov
dec
jae
ljmp
add
adc
loop
add
fidivrl
scas
inc
xchg
dec
and
and
test
inc
sub
scas
xchg
push
clc
aaa
repz
in
mov
ret
xor
mov
sbb
lods
xchg
mov
jg
scas
dec
fs
pop
lcall
push
cmp
push
jg
dec
or
push
mov
mov
adc
shl
std
mov
pop
ds
dec
cmp
hlt
jp
jns
sbb
out
push
sahf
sti
insb
jbe
add
sub
lahf
outsl
cmp
inc
jo
fs
mov
stos
bound
adc
fwait
and
adc
and
add
mov
jmp
stos
dec
push
cmc
mov
sub
or
popa
stos
fistl
or
push
lock
and
xchg
or
clc
add
orb
loope
dec
sbb
add
cmpsb
cmpsl
ret
dec
and
jecxz
iret
sub
jmp
xor
mov
lods
push
sub
scas
lahf
popf
dec
ljmp
lret
add
arpl
cmp
mov
mov
push
negl
inc
gs
fstpt
jb
movsb
stc
insb
dec
push
aaa
mov
enter
repz
push
mov
clc
jl
js
push
mov
dec
in
das
xchg
int
inc
mov
or
call
cmp
mov
ja
stos
pop
mov
cmp
inc
imul
xor
jne
add
and
adc
ret
jmp
mov
das
mov
push
jae
cs
or
push
sub
cmp
push
mov
or
aas
cmp
sbb
add
xor
or
lods
and
or
xor
xor
aaa
mov
sub
nop
test
mov
scas
cmpsl
nop
cld
inc
addr16
mov
fucomp
cld
std
mov
aad
je
xchg
test
ret
or
inc
scas
push
add
inc
cmp
rorl
mov
sub
sub
fdivs
cmp
xor
xor
out
bnd
int3
mov
xor
into
and
mov
push
cs
mov
xor
push
or
imul
add
shrl
inc
inc
popf
sub
fdivl
cmp
add
int3
adc
ret
stos
test
fimull
xchg
xchg
mov
lret
sub
pop
mov
aad
or
add
xor
mov
lods
xchg
fisttpll
or
adc
jne
cltd
hlt
shr
jecxz
push
xchg
xor
fucomi
ja
inc
add
insl
mov
mov
mov
mov
xchg
dec
xchg
pop
stos
push
insb
ror
add
loop
mov
xor
int3
stc
add
and
arpl
ljmp
xchg
push
mov
mov
inc
test
lret
in
pop
scas
jb
cmp
jmp
popf
pop
into
jb
lahf
pop
std
sbb
push
or
test
ss
sti
inc
lods
jle
cmpsl
mov
lock
rcll
aaa
cs
push
jge
addr16
pop
cmp
in
jbe
inc
inc
mov
mov
mov
stos
mov
pop
out
mov
sub
xlat
mov
sbb
out
mov
cltd
mov
icebp
mov
mov
sub
mov
inc
mov
fidivrs
xchg
sbb
pop
ds
stos
mov
scas
aaa
fwait
jo
jmp
rcll
inc
add
xchg
int3
lret
in
mov
inc
stos
test
lret
mov
push
dec
mov
pushf
mov
lahf
fwait
les
movsb
push
dec
shl
stc
js
sub
cmp
jg
mov
outsb
fsts
pop
daa
sbb
xchg
mov
std
mov
mov
xchg
in
cmp
jb
dec
data16
inc
sbb
push
cmp
fnstcw
cld
repnz
or
add
jle
fwait
push
dec
mov
mov
mov
inc
aas
jmp
or
push
jnp
pop
nop
dec
cmp
fwait
push
xchg
jle
xor
dec
inc
xor
sbbl
hlt
push
sbb
mov
cmp
insb
xchg
or
dec
sub
mov
clc
fmull
inc
testb
inc
xor
inc
xchg
pop
xor
divps
mov
or
jbe
adc
cmpb
xor
adcl
mov
outsl
adc
xor
add
mov
dec
cmp
imul
mov
jmp
cmp
imul
lods
mov
fisubrl
pop
sahf
xchg
mov
outsl
dec
mov
cmp
lods
jp
pushf
cmp
mov
cmp
cmp
lods
pop
sub
adc
in
cmp
mov
test
dec
aam
jns
pop
and
jp
pop
test
sub
aad
fbld
cmpsb
jno
clc
popa
jge
insl
or
cltd
sbb
mov
xchg
es
hlt
xchg
sbb
sbb
mov
sub
mov
xchg
fwait
pop
mov
xchg
push
ret
inc
sahf
adc
fidivrs
jb
sti
pop
pop
ret
or
cltd
sbbb
mov
jne
mov
adc
imul
sti
imulb
pop
adc
stos
and
mov
mov
dec
sbb
pusha
scas
sbb
push
xor
test
sbb
js
scas
mov
jo
movsl
sbb
gs
fstpt
mov
mov
aad
sar
pop
or
mov
push
pop
jb
add
xchg
stos
js
popl
mov
fsts
outsb
mov
jp
fst
cmp
mov
xchg
or
pop
out
sub
dec
inc
xor
fwait
enter
hlt
jb
jl
adc
dec
fisubrs
fsubrs
shlb
mov
mov
xchg
icebp
mov
sub
repz
insl
sbb
or
dec
pop
add
adc
pop
cmp
and
out
mov
roll
mov
push
add
jecxz
cld
or
lret
int3
addr16
sbb
pop
push
repnz
push
stos
mov
lods
add
jns
inc
arpl
mov
mov
mov
iret
sahf
or
pushf
mov
pushf
cmp
insl
mov
subl
dec
sub
cmp
xchg
fistpl
jae
sub
push
xchg
xor
jge
pop
xor
fcmove
push
jg
add
popa
or
add
add
pop
es
add
aam
jns
dec
icebp
or
pop
rcrl
cmpsb
xchg
enter
cli
dec
mov
push
lea
mov
fmuls
xor
loope
adc
add
jne
call
mov
xor
cmp
pop
stos
shll
out
les
cmp
mov
movsb
mov
lret
jecxz
outsl
ret
sub
pop
sub
fucomi
je
inc
cmp
add
jnp
je
lret
movsl
mov
mov
xor
add
xor
pop
scas
mov
push
mov
cmc
fsts
mov
cld
or
xchg
lds
pop
sbb
pop
mov
scas
cs
mov
in
test
shr
adc
cmp
bound
popl
and
add
add
in
mov
lret
mov
xchg
sub
fucomp
push
mov
xlat
insb
jmp
ret
push
lods
test
cmp
mov
cmp
imul
mov
cwtl
mov
lahf
dec
scas
dec
or
dec
mov
xchg
movsb
xchg
xchg
lods
mov
pop
insb
jbe
add
sub
mov
pop
mov
test
add
imul
pop
fninit
test
sbb
ss
pushf
fisubl
pop
or
mov
into
jp
pusha
pmuludq
jno
sbb
in
pop
sbb
test
jg
sahf
mov
cmp
fldt
mov
sbb
in
xlat
dec
leave
cld
mov
xchg
add
imul
std
lock
dec
pop
cld
and
or
cmpsl
dec
insb
and
xor
mov
gs
outsl
std
nop
adc
push
mov
clc
xor
push
gs
push
inc
cwtl
adc
addr16
fcomip
adc
mov
xor
mov
lahf
outsl
or
cmp
xor
call
sbb
in
sub
test
jl
mov
cltd
sbb
xor
out
aad
mov
adc
push
push
or
lods
xchg
test
lods
xchg
pop
push
inc
ret
repz
rcrl
xor
call
aad
pushf
addl
push
cwtl
shufps
arpl
dec
xor
shrl
mov
dec
fucomp
jae
push
enter
xor
test
inc
mov
cmpsb
jo
adc
xchg
dec
daa
push
xor
adc
movsb
push
sub
shl
cmp
jg
dec
or
movl
andl
sub
decl
mov
out
out
add
push
cli
out
push
push
lods
xlat
push
fwait
and
dec
test
mov
jo
cmp
loope
mov
pop
add
out
pop
sbb
fcompl
repnz
es
or
xchg
sub
cmp
in
jne
pop
mov
rolb
ret
popa
pop
or
sbb
mov
lods
sbbl
jp
sbb
sbb
add
push
dec
cmp
int
mov
stc
and
mov
pop
repnz
lahf
inc
dec
call
xor
mov
int3
loop
scas
mov
ffree
stc
pop
cmp
arpl
add
xchg
dec
mov
cmp
adc
cltd
push
sahf
inc
lcall
mov
test
add
cmp
ret
lahf
sahf
adc
jo
jg
dec
fsubl
addps
adc
inc
sarb
dec
gs
test
xchg
scas
xchg
in
pop
mov
out
xchg
test
fsubl
pop
cmp
std
xchg
mov
mov
fcomi
enter
in
xchg
mov
fwait
enter
cmpb
xchg
sub
daa
sub
pop
scas
ss
push
jne
shlb
fidivs
xchg
ja
pop
clts
decb
lea
push
add
bound
jnp
adc
cmp
hlt
int
stos
ja
jne
push
mov
stos
movsl
jb
mov
repnz
mov
xchg
mov
imul
mov
xchg
test
int
mov
adc
addb
push
xchg
popf
xchg
dec
cmpsl
push
add
jb
lods
jne
or
jns
enter
cmp
imul
xchg
cmp
fwait
leave
loop
add
or
filds
mov
mov
test
mov
in
mov
jnp
inc
push
mov
or
test
sub
ja
stos
pop
test
divl
fwait
lea
xor
mov
sbb
add
inc
sbb
or
addb
or
mov
das
xor
daa
jge
enter
fdivrs
loopne
mov
mov
dec
lahf
lret
std
inc
or
cmp
std
pusha
inc
sbb
inc
sub
int
inc
ljmp
xchg
ret
sbb
jne
push
adcl
jns
sbb
inc
mov
movsl
jmp
dec
popf
call
aam
insb
cmp
dec
and
add
cs
push
stos
jge
dec
cmp
outsb
aas
lcall
or
add
xor
mov
mov
add
jmp
adc
cmpsl
xlat
in
addl
or
sub
lea
pop
mov
push
test
lods
mov
pop
mov
jl
scas
cmp
pop
bnd
lea
mov
mov
int3
add
mov
rorl
dec
loope
jl
mov
xchg
jg
dec
daa
cs
mov
mov
push
jmp
inc
xor
popf
mov
xchg
je
pop
cmp
aaa
xor
adc
jae
lods
inc
mov
mov
jge
pop
dec
aaa
add
sarb
insl
pop
xor
and
mov
push
xlat
stos
aad
pushf
push
lods
push
pop
int3
xor
scas
int
test
push
pop
lcall
pusha
jp
cltd
fs
outsb
push
mov
stos
xchg
xor
mov
cmpsb
xor
jb
loopne
sbb
mov
cwtl
inc
sbb
and
fdivr
push
lahf
mov
sub
xchg
ljmp
idiv
decl
and
lret
and
cmpsb
pop
fistl
xchg
mov
pop
test
movsb
in
cmpsb
fmul
jmp
sub
pop
mov
lret
jne
cmpsl
enter
cmp
jns
cwtl
mov
mov
adc
inc
dec
sahf
dec
mov
xor
call
cmp
cmp
lock
ds
and
sar
jecxz
mov
xchg
mov
xchg
sub
pushf
ss
sub
dec
pushf
dec
and
jg
sub
dec
stos
push
sti
clc
jl
inc
cmp
push
lahf
jp
xor
fldt
jo
mov
cmp
ret
add
push
push
pop
push
dec
hlt
sub
mov
rolb
mov
fstpl
jp
jne,pn
stc
loope
mov
fucomip
mov
nop
xchg
pop
es
fimuls
mov
fwait
xor
mov
call
test
jo
movsb
lods
out
inc
and
adc
inc
xor
in
mov
int3
inc
xor
xchg
enter
adc
lock
sub
mov
mov
jg
or
or
pop
push
sub
data16
xchg
loopne
mov
mull
inc
loop
repz
jle
lahf
in
clc
mov
cmp
std
lds
repz
cld
or
mov
sbb
sbb
mov
fisubrs
dec
cld
dec
add
pop
and
movsb
push
sti
ja
add
scas
outsb
push
test
arpl
mov
cmp
xchg
data16
inc
sbb
leave
insl
stos
adc
and
test
mov
mov
add
aad
out
mov
lret
inc
cs
inc
popf
scas
inc
fwait
data16
sti
and
cmp
pop
mov
jno
pop
pop
mov
and
mov
sub
pop
lods
xlat
xchg
mov
fwait
xor
test
fs
inc
fldenv
and
and
mov
into
inc
mov
push
mov
push
sbbb
adc
lret
dec
dec
fcoml
mov
call
inc
fst
push
add
xchg
lahf
adc
ds
mov
jge
fmull
add
cmp
rcrb
cli
cmpsl
ret
sub
jl
sbb
mov
dec
sbb
adc
mov
sbb
adc
and
dec
mov
in
push
arpl
and
movsl
test
in
jge
insl
lea
dec
mov
jbe
imul
repnz
sbb
icebp
xchg
push
mov
jns
push
cmp
push
iret
aaa
and
js
adc
cmpsl
xlat
in
addl
sbb
lock
aam
ds
jp
stc
mov
sbbb
adc
push
mov
push
jne
in
adc
or
scas
push
xor
and
inc
xor
dec
inc
in
xchg
jl
adc
dec
push
sub
test
or
xor
mov
cmp
add
repz
mov
jns
add
sub
ja
inc
clc
enter
jg
pop
ret
dec
sub
mov
outsl
sub
pop
dec
mov
stos
test
cld
jne
pop
inc
frstor
inc
sahf
enter
xor
push
cmp
aas
loop
pop
outsb
cltd
sbb
idivb
push
sub
and
push
mov
dec
fs
xchg
jbe
sub
popf
pusha
push
cmp
bound
js
rcrb
stos
arpl
out
std
push
sti
or
mov
adc
outsb
or
je
jp
sub
xchg
mov
pusha
jo
sbb
fdivrs
xor
push
and
mov
or
dec
inc
xor
loope
xchg
jmp
inc
sbb
pop
das
or
dec
test
sub
iret
mov
enter
inc
iret
fucomip
repz
pop
bswap
push
mov
xchg
adcb
shlb
cltd
clc
jg
inc
sbb
les
xor
sbbl
push
dec
repnz
add
ljmp
adc
mov
enter
xor
sbb
gs
push
mov
push
push
dec
cmpsl
push
negl
test
pop
fidivl
push
cmp
push
ja
aas
lahf
inc
jge
inc
sub
or
arpl
jl
js
or
idivl
add
pushl
rcrb
mov
dec
and
int3
inc
popf
andl
scas
sub
fidivrs
mov
xor
aad
jb
sub
add
cmp
or
aam
and
xchg
movsb
mov
jg
lea
sbb
popf
popf
into
pop
test
loopne
inc
inc
negb
shrb
add
cmpl
push
mov
ret
mov
push
dec
mov
aas
sbb
or
adc
fs
mov
pusha
sub
jno
lods
push
sub
add
sub
scas
dec
xor
les
movsb
push
dec
shll
sub
mov
insl
shlb
mov
shrb
pop
mov
dec
cmpsl
push
ja
lds
pop
add
xor
movsb
push
jb
jne
push
mov
ret
and
dec
dec
js
mov
push
shlb
scas
out
adc
add
rcrl
push
fbld
insb
jbe
dec
adc
pop
inc
cs
lea
sbb
jns
cwtl
dec
inc
je
leave
outsb
aaa
sbb
or
dec
mov
cltd
pop
dec
mov
in
push
pop
das
or
sub
repz
sbb
and
and
inc
sbb
testl
pop
dec
aaa
add
cmp
shrl
nop
or
mov
and
add
imul
sahf
fisttpll
bnd
push
sub
cmpl
dec
or
inc
xor
push
cmp
outsb
mov
insl
mov
mov
enter
imull
xchg
dec
test
lahf
inc
cmp
and
inc
fwait
out
js
jl
js
or
dec
in
arpl
shr
std
mov
test
out
in
scas
addr16
fwait
push
popf
jp
cmpsb
in
inc
jge
sbb
enter
test
fld1
jne
xchg
outsl
pop
ret
outsb
aaa
popf
mov
mov
jnp
dec
pushf
and
orb
sbb
push
adc
cmp
test
aaa
fdivrs
insl
stc
add
xchg
push
add
iret
push
pop
xor
add
xor
mov
shlb
jecxz
add
dec
lds
mov
xchg
int3
adc
cmpsb
cmp
test
lods
push
dec
loop
xor
pop
jp
pusha
mov
lods
mov
push
mov
jmp
ljmp
lds
sbb
jnp
sub
or
cltd
repz
pop
ret
cmp
pop
pushf
insl
jmp
stos
sahf
adc
jg
xchg
out
test
mov
adc
rolb
sbb
fcomps
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
fcomp
fisubs
jne
stos
int
pop
sub
dec
jb
loop
jb
fs
jle
fsubr
mov
xchg
mov
add
mov
cs
xchg
pop
mov
and
pop
cs
sbb
mov
ja
pop
dec
out
sbb
add
xchg
ds
dec
and
mov
lret
lcall
sbb
hlt
loopne
test
ficomps
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
mov
cmp
lret
pop
test
push
mov
shrl
or
fdiv
mov
fwait
leave
outsl
xor
or
sbbb
jo
or
daa
xchg
int
dec
cmp
cmp
fdivrs
test
mov
jne
mov
cmp
add
je
xchg
xchg
inc
cltd
enter
mov
enter
xchg
xor
dec
arpl
mov
int
pop
or
addb
jmp
and
pop
stos
shrl
push
xchg
loopne
aam
xchg
dec
lahf
add
fdivp
aas
pop
cmp
lahf
lret
outsb
mov
jecxz
enter
lds
lock
jle
push
sbb
and
sub
cmp
mov
dec
scas
mov
dec
pop
in
inc
mov
cmp
cmp
cmc
lret
cmpsl
mov
lcall
cmp
adc
cltd
call
sahf
inc
lcall
pop
dec
test
cwtl
dec
aas
mov
push
xchg
jl
mov
mov
or
std
sti
cld
pop
aas
add
cmp
subl
adc
les
pop
sbb
mov
movsl
ret
inc
lods
out
negb
inc
mov
mov
xor
iret
and
daa
adc
push
pop
dec
push
fimuls
int
jle
daa
adc
push
jne
sub
inc
adc
shr
popf
and
fucomip
in
xchg
inc
mov
and
lock
dec
nop
cmp
in
ja
mov
adc
mov
dec
sbbb
pop
ret
dec
fsub
adcl
enter
jne
and
add
push
lret
ficoms
mov
movsb
xchg
test
mov
jno
add
fcompl
cmp
outsl
jmp
scas
dec
jns
dec
mov
sub
ret
xor
jns
adc
and
fsts
xor
shr
inc
sub
iret
and
add
jno
jge
xchg
dec
mov
xlat
push
mov
cmp
xchg
imul
in
lock
cmp
scas
add
out
push
daa
aas
mov
cltd
iret
sbb
popl
mov
dec
sub
inc
test
adc
call
inc
xor
fucomi
dec
mov
cmp
mov
in
xchg
inc
mov
std
adc
sbb
mov
sub
adcl
or
sub
and
sbb
pop
mov
sbb
inc
dec
pop
test
stos
dec
adc
jge
pop
fildll
fs
rcr
dec
pop
insb
fsubs
test
dec
dec
out
cltd
pushf
fdivr
jge
push
mov
and
testl
adc
xor
fwait
popf
adc
pop
cmpb
mov
mov
ds
pop
je
in
idivl
dec
push
ds
jo
rclb
jp
stc
mov
fucomp
push
push
lods
sbb
or
test
sub
fwait
pop
pop
pop
fdivl
iret
sbb
adc
or
inc
sub
mov
and
inc
push
repnz
jno
pop
xorl
push
ja
push
fwait
mov
jne
popa
or
mov
jno
test
sbb
pop
dec
sti
pop
or
out
cmp
dec
loopne
lahf
cld
jg
test
scas
and
dec
mov
push
dec
jb
lret
lods
push
sub
add
loop
mov
jae
stos
xlat
xor
mov
mov
mov
cld
jl
test
jbe
push
leave
or
sahf
dec
cmpsl
outsb
shrl
dec
jns
mov
mov
fstpl
jnp
test
and
in
mov
ss
mov
xlat
in
addb
mov
jo
pop
jns
mov
out
out
inc
addr16
fwait
push
test
cmpsb
mov
insb
jbe
ljmp
push
mull
pop
lea
data16
dec
je
dec
inc
je
enter
movsl
leave
xchg
cmp
jl
inc
push
or
and
mov
mov
cmp
mov
add
pop
adc
pop
add
lcall
inc
out
jae
add
mov
cltd
lcall
xchg
xor
ret
xor
dec
mov
mov
push
dec
inc
shr
test
pop
sbb
loop
mov
adc
adc
sbb
pop
insb
test
push
data16
in
xchg
int
call
mov
ljmp
fcoml
dec
push
fidivs
leave
aad
ret
loopne
cmp
or
js
add
push
pop
ds
pop
je
in
idivl
iret
div
std
mov
xchg
out
in
mov
fwait
je
cmp
insb
jbe
lcall
jecxz
es
arpl
int
dec
enter
insb
aaa
movsl
cmp
xchg
sbb
cmp
sarb
pop
xchg
lret
ret
pop
xor
clc
in
inc
inc
imul
loopne
pop
daa
popl
test
push
xchg
in
or
pop
dec
push
ficomps
add
lret
inc
sbb
sbb
and
push
shrb
cmpsl
leave
std
mov
mov
add
sub
rcrb
jno
push
jae
into
arpl
movsl
test
cmpsl
repz
idivb
gs
movsl
sbb
negb
and
jb
mov
movsb
push
jb
adc
aad
pusha
jle
lods
mov
mov
xor
sti
cld
pop
aas
add
add
and
pop
and
addr16
cltd
pop
lahf
int
dec
xchg
mov
in
push
test
ret
mov
ja
stos
mov
ficomps
pop
call
jne
mov
inc
xor
cmp
leave
cwtl
sahf
and
repnz
repnz
or
imul
xor
fsubl
mov
inc
inc
xor
or
mov
sbb
cmp
fucomp
ja
xor
xchg
jmp
add
xchg
int3
adc
cmpsl
ret
popf
sbb
loopne
sbb
test
mov
cltd
jno
pop
sbb
ss
mov
mov
dec
add
push
pushf
cmp
jbe
movsl
pop
cltd
outsb
push
fdivl
imul
insl
dec
jge
or
push
jne
gs
jg
scas
dec
fcompl
cs
mov
outsl
jp
mov
repz
dec
cltd
xchg
ret
mov
cmc
jl
shll
mov
dec
in
push
daa
xchg
and
lds
fstpl
cmpsb
mov
in
jbe
cli
jae
push
lods
mov
pop
cmp
mov
push
mov
ret
jno
int
inc
xor
or
inc
and
inc
mov
pop
cwtl
adc
xchg
stos
nop
dec
daa
cs
mov
mov
inc
xor
popf
jnp
or
lea
mov
adc
insl
push
add
ret
fnstsw
cmp
mov
ret
jecxz
mov
and
and
sbb
push
cmp
test
dec
fistps
jno
test
dec
sub
inc
fdivl
out
popf
stc
fs
pop
dec
adc
in
pop
xchg
loope
cmp
sbb
sub
sbb
or
test
pop
mov
sbb
adc
sub
cltd
in
shl
mov
push
xchg
pop
mov
inc
rcrb
js
in
testl
pushl
adc
inc
xchg
addr16
cmp
push
mov
cmpsb
xor
in
xchg
ret
push
insl
in
xchg
adc
call
insl
test
fdiv
out
mov
add
sbb
add
andb
js
sbb
jg
sub
in
aad
or
sbb
pop
ret
sbb
pop
sahf
insb
imul
sbb
lds
rcrb
sbb
cltd
pushf
imul
mov
adc
ss
sub
cli
jns
lds
nop
clc
xor
shll
inc
lock
xchg
scas
lret
fucomp
xor
mov
mov
js
fisttpll
xchg
and
cmp
test
int
cmp
jl
pop
stos
xchg
stos
popf
mov
add
adc
sub
cmp
mov
ja
cmp
and
push
scas
lahf
icebp
cli
inc
cwtl
xor
shlb
idivl
out
mov
mov
xchg
sub
dec
and
xchg
fst
pushf
mov
lret
in
mov
mov
cmp
jmp
je
xchg
xchg
inc
cltd
enter
mov
enter
xchg
xor
dec
arpl
mov
int
pop
mov
cmc
hlt
pop
jb
daa
inc
inc
mov
pop
shr
repz
rcll
icebp
clc
sti
mov
out
adc
mov
jbe
in
ja
pop
rcrl
cltd
je
lds
leave
fsubrl
rorl
sbb
dec
mov
xor
shll
inc
lock
xchg
mov
mov
mov
stos
adc
sbb
ret
add
push
in
ljmp
mov
stos
xchg
fistl
fs
pop
shrb
cltd
fstl
aas
xchg
fs
scas
mov
inc
fists
mov
loope
rcrb
push
inc
clc
or
fwait
push
dec
mov
mov
mov
inc
push
mov
fcomps
enter
scas
lcall
cmpsl
ret
xchg
fnstsw
cmp
mov
mov
inc
mov
fcoms
cwtl
cmp
cmpb
dec
daa
adc
lret
sbb
fstps
pop
stos
shll
aas
mov
cmp
sbb
in
mov
aaa
gs
mov
pop
sub
inc
aas
ret
imul
fnstsw
jg
in
pop
sbb
push
xor
sub
jne
xchg
push
scas
rcrl
or
lds
mov
fmull
addb
dec
mov
stos
xchg
dec
lock
push
cmpsl
pop
imul
xchg
jnp
mov
icebp
pop
in
leave
incl
or
pushf
dec
sti
xchg
dec
repz
inc
jmp
pop
jbe
int3
shrb
sbb
pop
adc
xchg
dec
jae
fistpll
or
sbb
pop
xchg
mov
das
push
pop
pop
fdiv
addl
and
sub
popf
xchg
push
mov
dec
es
les
inc
sahf
cmp
jno
dec
cmpsl
in
test
ja
pushf
rcr
and
sti
inc
fwait
jb
or
les
adc
sub
fs
out
stos
lret
lcall
sbb
std
movsl
dec
mov
fidivs
jl
fiaddl
les
push
lret
add
dec
mov
mov
or
fistl
xchg
jbe
lret
ret
enter
scas
movl
cli
xor
ds
or
add
xchg
push
sbb
push
dec
mov
and
lds
dec
push
xchg
cs
dec
sub
outsb
pop
and
into
clc
rcrb
and
inc
mov
xor
nop
or
aad
cmp
ja
mov
movsb
popf
out
sub
leave
mov
mov
cmpb
or
movsb
mov
sbb
cmpl
sub
fidivs
lcall
lods
cmp
aas
repnz
mov
sbb
addb
push
dec
xchg
push
xor
mov
mov
inc
orl
or
idiv
fwait
sbb
movsl
lret
popa
or
fcomps
xor
cmp
sar
mov
inc
sbb
jg
in
xlat
shr
and
ja
or
imul
aad
xor
xor
mov
incl
enter
repz
nop
adc
es
clc
mov
sbb
into
mov
fcoms
jmp
stos
mov
jmp
clc
push
xor
inc
sbb
decb
xlat
dec
cmovle
outsb
scas
adc
mov
mov
jmp
mov
mov
jge
lods
outsl
inc
adc
xchg
dec
mov
lcall
push
mov
es
filds
clc
and
mov
and
jbe
mov
xchg
ret
inc
or
add
fucom
xor
xor
aaa
mov
mov
xchg
sub
fs
sub
cmc
sbb
hlt
loopne
test
ficomps
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
stos
stos
inc
lcall
outsb
xor
and
mov
das
ret
sub
xlat
fsubrl
xchg
jge
xor
and
adc
mov
dec
sub
mov
cwtl
rclb
fwait
lret
in
mov
mov
cmp
or
je
xchg
xchg
inc
cltd
enter
mov
enter
xchg
xor
dec
arpl
mov
int
sahf
mov
sbb
dec
mov
push
jne
shrb
movsl
pop
call
jns
cmp
mov
mov
pop
sub
sbb
mov
sbb
loop
lret
pop
dec
iret
fadds
nop
adc
sub
sbb
sbb
inc
mov
mov
fucomp
shll
cli
into
xchg
stc
cli
in
test
pop
xor
jecxz
test
add
or
hlt
mov
loop
iret
pop
std
add
mov
insb
sub
shl
sbbb
jo
cs
cmp
clc
dec
cmp
pop
std
arpl
addb
adc
inc
nop
sbb
sarb
sbb
mov
inc
gs
fst
pop
faddp
mov
ret
pop
pop
pop
dec
mov
mov
mov
sbb
xchg
enter
mov
hlt
xchg
dec
leave
dec
inc
xor
jbe
inc
mov
dec
ret
xor
cmp
addr16
sub
je
movsl
push
push
mov
sub
mov
hlt
adc
inc
mov
ss
mov
stos
add
sub
enter
jno
dec
int3
addr16
repnz
mov
leave
mov
enter
push
inc
stc
shll
xchg
push
dec
xor
ljmp
mov
xchg
test
or
outsb
push
sbb
fdivl
ret
dec
push
dec
cmpsl
push
dec
lcall
jle
cltd
shr
push
mov
inc
pusha
add
inc
fs
adc
std
or
inc
mov
out
add
jge
mov
je
mov
test
jecxz
ss
mov
xor
pusha
jo
sti
pop
call
out
lret
fdivs
jecxz
push
cld
pop
sub
inc
sub
lea
xchg
popa
mov
xchg
xchg
inc
inc
xor
movsl
sbb
in
es
mov
inc
inc
pop
lahf
lret
jecxz
ret
dec
mov
mov
jae
xor
in
das
and
int
mov
imulb
pop
add
xor
push
dec
ss
pop
mov
lahf
sbb
stc
or
lahf
js
stc
add
nop
push
pushf
sti
insl
mov
xchg
test
inc
and
cmp
imul
aad
pop
sbb
jecxz
mov
in
shr
sbb
pop
fcompl
mov
mov
test
rcrb
dec
rorl
lret
adc
or
mov
mov
bound
pop
lcall
movsb
inc
popa
push
imul
dec
cmp
aad
push
mov
mov
mov
dec
and
stos
shr
stos
jne
or
popf
mov
cmp
popf
mov
sbb
or
mov
daa
cmp
jmp
clc
sti
jle
push
xor
syscall
pop
aas
sub
in
or
cmc
std
add
cmpsl
ret
dec
aaa
adc
movsb
ret
sbb
xlat
stos
dec
sahf
sbb
sbb
sbb
into
ds
adc
dec
mov
cld
xor
insb
fcom
cmpl
jae
in
jge
mov
xor
gs
adc
mov
push
fidivs
jge
test
or
dec
xor
cmc
in
jl
aas
add
sbb
and
inc
pushl
mov
adc
cmpsb
mov
xchg
mov
sub
add
pusha
jo
jnp
out
pop
fsubs
xor
loop
push
je
xchg
enter
hlt
pop
sub
inc
jne
jnp
dec
aad
inc
mov
pop
inc
das
or
mov
inc
inc
mov
je
lahf
cmp
mov
and
mov
mov
dec
aaa
test
ja
pop
push
mov
sbb
jg
pop
xchg
leave
fsubrl
xchg
sub
xor
xlat
stos
push
mov
sub
out
or
cmp
mov
fucomp
cld
clc
fldcw
jmp
les
or
cltd
sbb
push
sub
fmuls
push
sbb
mov
push
mov
lods
mov
dec
cltd
lods
inc
pop
cmpsl
inc
pusha
push
je
push
in
pushl
js
js
adc
test
shl
std
add
ja
add
inc
cwtl
dec
and
int3
ljmp
test
xchg
inc
fbld
pop
mov
fs
xlat
pop
fldenv
mov
adc
leave
call
adc
jne
pop
dec
daa
adc
cli
pushl
pop
hlt
mov
inc
lea
popf
je
pop
cmp
xor
lods
lcall
dec
pusha
xor
jns
inc
add
out
rcrl
enter
mov
mov
xchg
sub
adc
push
test
cli
movsb
bnd
xchg
sbb
push
dec
cmp
js
popa
imul
mov
xchg
dec
scas
sbb
add
je
inc
sbb
pop
mov
and
mov
mov
ret
jns
into
pop
lahf
sub
clc
jbe
lahf
jp
enter
repz
push
mov
sbb
mov
jo
jle
push
sbb
add
mov
inc
daa
xchg
int
mov
shr
push
fcoml
insb
imul
jecxz
iret
add
jmp
xor
loope
shll
aam
and
inc
mov
testb
arpl
int
cmpsl
shl
pop
adc
movsl
fwait
pop
mov
push
fisubrs
pop
mov
and
mov
fs
and
stos
lahf
cld
add
pop
pop
repnz
jl
or
xor
push
jae
push
add
arpl
mov
call
push
add
mov
dec
mov
mov
cld
std
mov
in
jl
mov
mov
sbb
fcompl
add
jl
rorl
push
sub
gs
mov
xor
icebp
sbb
mov
sbb
rcrb
iret
inc
popf
pop
mov
popl
pop
xchg
int
dec
imull
les
or
xlat
insb
jbe
cli
jae
and
add
mov
jge
insb
mov
in
mov
iret
es
cltd
addr16
mov
pop
mov
enter
jne
dec
pusha
out
imul
shl
mov
shr
mov
adc
pop
add
xchg
mov
cmp
jnp
mov
mov
pop
hlt
and
and
pop
dec
ss
jp
xor
pop
icebp
mov
xor
add
pop
filds
aad
dec
pop
dec
and
rcrl
mov
movsl
sub
cmp
cwtl
jge
push
xlat
stos
vandnps
int
push
mov
jb
mov
insb
jbe
lods
ficomps
bound
scas
pop
psubsw
js
into
das
call
out
dec
in
shlb
andl
fadd
sbb
inc
stos
push
jle
insb
add
shll
pop
jns
lods
xlat
sub
or
inc
sbb
cltd
insl
test
mov
cmpsb
inc
cltd
out
movsb
jle
ficomps
fs
adc
fisubrl
int
imul
sahf
dec
mov
sub
sahf
lret
arpl
push
xchg
fcmovbe
sbb
mov
jns
xlat
mov
lock
addl
add
sbb
movl
or
ret
popa
and
cli
jns
lds
nop
lds
clc
sub
mov
jge
dec
add
mov
pop
push
les
pushf
dec
mov
dec
lds
mov
rcll
jge
addb
dec
mov
stos
xchg
dec
cs
test
push
cmpsl
pop
imul
aad
es
adc
mov
popf
sbb
mov
mov
lds
pusha
sarb
mov
stos
aam
mov
jnp
inc
push
mov
or
shll
stos
fcomp
pop
fisubl
pop
jae
gs
out
push
int
popf
mov
mov
cmp
es
aam
cmp
inc
and
rcr
pop
jbe
push
inc
lods
sbb
test
aaa
in
cmpsl
divb
pop
push
addb
iret
sbb
dec
adc
imulb
test
sbb
and
pop
addr16
sbb
dec
inc
mov
adc
sbb
imul
sbb
xor
out
jp
stc
dec
sub
test
dec
cmp
enter
nop
xor
les
sbb
ret
cmp
pop
pushf
pop
ljmp
pop
mov
enter
mov
xor
add
or
pop
ret
sar
or
and
gs
fwait
xor
clc
hlt
mov
or
stos
cmp
jb
pop
mov
jne
dec
inc
and
cmp
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
xchg
ficoml
cmp
ret
loopne
mov
jns
sti
mov
sbb
cmp
ss
mov
jbe
lret
or
mov
fmull
and
gs
sub
adc
aad
shll
inc
lock
stos
xorl
push
add
inc
arpl
fldl
sbb
jae
dec
pop
cmpsl
cmpsl
inc
scas
add
fisubrl
pop
outsb
mov
xchg
enter
push
or
mov
jno
or
cmp
in
adc
cli
jnp
inc
mov
lcall
or
push
daa
out
mov
frstor
and
xchg
mov
xchg
mov
pusha
jo
jnp
sub
sti
mov
shlb
cmp
xor
cld
imul
dec
mov
sbb
mov
dec
push
gs
add
cwtl
dec
and
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
rcrb
mov
jnp
sbb
mov
leave
fsubrl
adc
push
test
lret
inc
and
dec
push
cli
mov
push
les
lahf
cld
repz
sub
pop
sub
add
sbb
hlt
add
popf
xor
mov
pushf
sahf
jns
inc
movsb
push
sub
inc
sub
into
xor
jge
filds
cld
jnp
and
jmp
loopne
aas
jo
sbb
cmp
fsubrs
fildll
mov
xor
adc
push
sub
imul
daa
cmpsl
jnp
popf
idivl
mov
sti
and
sbb
or
int
imul
test
insl
sub
fcoms
call
mov
out
and
fucomip
repz
mov
imul
pop
repnz
add
cmc
pop
dec
ss
icebp
and
mov
leave
rcll
clc
mov
xor
dec
mov
lahf
mov
out
sbb
stos
inc
mov
lods
leave
test
ficompl
pushf
xor
and
or
sahf
or
movsb
xchg
adc
pop
fsubrl
cltd
push
adc
jbe
lahf
inc
jge
mov
iret
call
rol
cld
cmp
mov
add
inc
jle
fwait
push
dec
mov
mov
inc
cwtl
dec
and
mov
ret
adc
rcr
movsb
jno
scas
enter
jl
fwait
lea
iret
add
es
pop
sub
sbb
mov
int
pop
push
push
dec
xchg
sbb
add
sbb
call
xor
mov
adc
popa
mov
ficomps
repnz
sub
add
ja
pop
lods
dec
cmp
add
cwtl
shll
imul
test
scas
push
lods
outsb
jno
je
aaa
jns
data16
xchg
mov
sbb
fldt
pushf
dec
pop
jno
mov
mov
xchg
test
inc
cmp
jae
lods
push
fisubrl
mov
cld
jp
add
sbb
lods
fidivs
jp
sub
pop
dec
jns
mov
ret
loope
cmp
sbb
mov
fwait
push
dec
mov
test
dec
aam
fnstenv
push
popf
or
sbb
orl
mov
jmp
std
mov
sti
and
sbb
or
mov
jns
xchg
adc
pop
add
xchg
hlt
pop
stos
shr
aaa
loopne
jne
dec
movsl
mov
jns
aas
in
and
cmc
sti
mov
mov
mov
ss
add
mov
sbb
mov
jne
fs
movsl
mov
ret
outsb
xor
rorl
ljmp
rcrl
jne
jnp
int
cmpsl
mov
popa
aas
pushf
dec
push
movsb
aam
or
inc
dec
retw
arpl
mov
popf
or
mov
pop
scas
jmp
loopne
pop
cmpsb
pop
sub
in
pop
xchg
std
push
fucomi
repnz
mov
cmp
sbb
mov
fwait
push
dec
mov
and
mov
sbb
fsubs
xor
mov
addr16
mov
pop
cmp
outsl
gs
outsl
lar
call
mov
add
addl
rolb
mov
add
cmpsl
xor
dec
jmp
jno
cmp
xor
cmp
cmc
dec
les
dec
mov
into
lcall
cmpsb
xlat
mov
hlt
mov
add
add
inc
pop
pop
fmull
imul
cltd
push
scas
icebp
mov
xor
cmpsl
or
sbb
test
mov
stos
push
negl
pop
xchg
call
xor
movsb
test
xchg
mov
dec
cwtl
daa
sbb
lret
stos
xchg
fimull
sbb
mov
push
cli
cmp
stos
xor
xor
sbb
call
inc
and
lret
add
dec
dec
cmp
rclb
aam
inc
les
inc
push
fidivrs
js
adc
lret
xor
or
mov
mov
sti
and
sbb
or
test
adc
mov
mov
pop
adc
mov
cmp
add
ja
cmp
jno
mov
hlt
adc
cmp
mov
sub
pushf
ss
or
dec
pushf
dec
and
jg
test
insl
sti
lret
ds
mov
pop
cmc
stc
inc
fldt
lcall
cli
pop
shll
xchg
movsl
add
or
xor
jb
loopne
sbb
cwtl
inc
sbb
mov
mov
xchg
mov
mov
adcl
addl
pushl
pop
jns
mov
mov
cmc
cmp
push
aas
fwait
lret
in
mov
mov
or
pop
fdivrl
jge
outsb
aad
hlt
dec
test
mov
push
xchg
mov
push
adc
sbb
cmp
cmpl
and
lret
xor
sub
dec
ds
mov
jns
aas
sub
in
lret
mov
mov
sbb
movsl
adc
imul
sub
sbb
jns
cmp
sbb
jnp
sbb
hlt
loopne
test
ficomps
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
cmpsl
fistl
aas
lret
mov
mov
fstl
pop
xchg
jnp
mov
icebp
sbb
js
popf
pop
xchg
sbb
cmc
cmp
pop
sub
inc
sbb
mov
jo
pop
xchg
mov
mov
dec
jae
jne
mov
cli
or
xchg
xchg
pop
inc
bound
aad
shl
inc
mov
int3
pop
sub
inc
xor
mov
cmp
fsubr
adc
or
cmp
subl
adc
mov
cmp
add
ja
cmp
jno
mov
hlt
adc
cmp
mov
sub
pushf
ss
dec
mov
dec
pushf
dec
and
jg
test
insl
sti
lret
ds
mov
pop
cmc
stc
inc
fldt
lcall
cli
pop
shll
xchg
movsl
add
or
xor
jb
loopne
sbb
and
sbbb
pop
divl
mov
mov
adcl
addl
pushl
pop
jns
mov
mov
cmc
cmp
push
aas
fwait
lret
in
mov
mov
cmp
inc
je
xchg
xchg
inc
cltd
enter
mov
enter
xchg
xor
dec
arpl
mov
int
pop
jb
dec
mov
adc
fs
pop
push
into
inc
adc
mov
rol
sti
jno
xchg
dec
ret
sahf
cmp
cltd
sub
pop
lret
xchg
int
and
mov
jno
jmp
mov
mov
push
dec
jb
sub
mov
lcall
or
lret
cli
jae
mov
stc
cli
in
test
or
invd
shlb
mov
inc
sub
mov
adc
mov
push
fistl
pop
pushf
sub
inc
adc
dec
out
cli
sub
scas
fcompl
and
mov
shlb
cmp
andl
sarl
cmp
push
mov
or
mov
mov
fdivs
and
test
xor
ljmp
jb
pop
repz
push
adc
push
out
adc
inc
add
inc
ret
mov
loopne
push
xor
scas
jbe
loop
int3
icebp
mov
aam
push
iret
mov
mov
cmp
jp
add
xchg
add
loope
jecxz
cltd
bound
in
sbb
sarb
jno
test
lcall
push
mov
cld
ss
mov
fs
test
xorb
mov
push
cmp
ret
add
das
sbb
imul
inc
into
imul
movsb
aad
xor
xor
fisubl
call
ret
dec
repnz
add
push
inc
cmp
adc
adc
mov
daa
bound
jp
cwtl
inc
insl
in
or
lret
xchg
insl
or
mov
mov
pop
push
jecxz
and
cmpsl
hlt
mov
xchg
mov
inc
pop
mov
push
les
push
sbb
ret
js
test
or
pop
lea
ss
mov
js
xchg
push
clc
sub
jle
sbb
jecxz
push
adc
ljmp
add
lds
insl
cmp
push
lock
rcrb
adc
test
int3
push
test
push
inc
jno
aaa
lret
mov
sahf
das
xchg
stc
cli
in
test
or
invd
movsb
data16
sub
mov
adc
addr16
push
fistl
pop
pushf
sub
inc
adc
or
out
cli
sub
scas
fcompl
and
cmp
shlb
sbb
andl
sarl
cmp
push
mov
or
mov
cld
push
fdivrs
jno
xchg
and
test
xor
ljmp
jb
pop
repz
push
adc
push
out
adc
inc
add
add
mov
push
xor
daa
jbe
loop
dec
lock
aam
push
iret
mov
mov
cmp
jp
add
mov
lock
jnp
add
orb
cmp
cmp
retw
sbb
aaa
jmp
push
adc
push
inc
inc
adcb
dec
push
mov
jnp
push
clc
mov
rcr
loopne
shlb
and
xchg
movsl
add
sub
mov
cmpsb
xor
jb
fisttpll
fimull
mov
push
xchg
aaa
outsb
scas
stc
stos
sbbl
repz
pop
pop
adc
jmp
xchg
dec
inc
add
inc
icebp
gs
les
dec
dec
shlb
inc
push
fdivrs
mov
aas
enter
aas
daa
ret
mov
mov
sti
and
adc
push
jmp
addr16
cmp
sbb
jge
aaa
shrb
lods
sbb
mov
ret
loopne
jae
inc
jne
out
xchg
ret
jnp
rcrl
add
cmp
mov
jno
sbb
mov
push
cwtl
push
xlat
mov
xor
stos
mov
adc
test
add
scas
mov
cmp
lret
int3
sar
cmp
mov
push
rorl
aad
inc
sbb
leave
or
pop
add
or
sbb
fstps
mov
rol
inc
mov
rol
xchg
fsubrl
and
sbb
ffree
inc
pop
jnp
and
jge
xchg
sub
dec
cltd
xor
xor
inc
popf
sbb
test
xor
or
bound
int
xchg
and
and
cmp
inc
inc
mov
push
daa
mov
int
sub
lds
mov
fldl
mov
mov
das
mov
lods
jle
mov
movl
mov
jp
lcall
cmpsb
mov
imul
mov
push
neg
inc
in
popf
push
xor
jnp
xlat
mov
add
stc
sbb
lods
mov
rol
arpl
lock
repz
test
sbb
int
sahf
jl
rorb
or
sbb
sbb
lds
bnd
jg
mov
pushf
mov
rolb
movl
movb
mov
mov
jecxz
xor
fucomp
test
test
shll
vpsubq
add
inc
dec
cltd
push
or
lahf
into
sbbb
dec
popf
iret
ret
pop
pop
xchg
ror
mov
ror
mov
ret
mov
ret
iret
ret
fidivrs
enter
add
test
xchg
add
jg
xor
aas
arpl
fucomp
cmp
cmc
jmp
mov
mov
jle
jae
loope
mov
jecxz,pt
cmp
stc
add
push
mov
add
mov
xchg
pop
stos
mov
jp
add
sbb
mov
pusha
cmp
stc
stos
sbbl
repz
pop
pop
adc
jmp
xchg
leave
inc
add
inc
icebp
or
outsl
cmp
shlb
inc
push
fdivs
fcoml
enter
aas
daa
ret
mov
mov
sti
and
adc
dec
jmp
ds
cmp
mov
lret
pop
push
inc
int3
fisttps
mov
movsl
mov
add
xchg
cwtl
clc
lret
psubsb
imulb
push
repnz
sarb
fs
icebp
mov
movsb
lds
nop
lds
data16
jno
in
repnz
pop
sbb
ss
ja
fs
push
inc
leave
lcall
fimull
cmp
lret
imul
jge
fisubl
loope
pop
jae
mov
jo,pn
sbb
popa
adcb
icebp
cld
mov
out
cwtl
inc
cli
or
sbb
mov
fwait
push
dec
mov
mov
sub
repz
outsl
push
cli
push
fisubs
repz
loope
and
cmp
and
std
mov
push
ret
stc
sti
mov
jne
and
cmp
xchg
and
jge
les
xchg
adc
xchg
push
out
xlat
adc
ret
dec
push
mov
pop
sbb
pop
adc
push
add
cld
xchg
leave
imul
xor
inc
mov
ss
add
jecxz
sbb
mov
mov
int3
lcall
jnp
push
ss
add
ss
lea
ss
inc
arpl
push
ss
lea
cmp
rcl
jmp
add
sahf
xchg
add
mov
nop
pop
stos
or
pusha
mov
dec
call
or
test
repnz
loopne
xchg
adc
mov
and
mov
mov
aam
mov
jnp
inc
push
mov
or
shll
out
stos
fcom
pop
fisubl
pop
jae
gs
jb
sbb
divb
jle
test
addl
out
push
and
adc
cltd
xor
jle
imul
inc
cmc
dec
pop
jmp
inc
mov
mov
xor
adc
movsl
mov
jp
add
lods
inc
sub
add
pop
mov
sub
or
pop
mov
sub
or
push
mov
sub
push
mov
sub
push
mov
repnz
hlt
cmp
mov
es
pop
sbb
test
pushf
sbb
test
mov
add
mov
adc
stos
test
pusha
mov
call
or
lods
sub
or
repnz
add
scas
test
cmp
mov
in
cmp
mov
mov
sub
repz
outsl
push
into
push
fisubs
repz
inc
insl
pushl
sbb
and
std
mov
push
ret
fdivr
mov
jne
and
daa
je
clc
test
es
hlt
sahf
sub
fwait
push
jecxz
mov
jb
stos
sbb
push
sub
pop
stos
mov
mov
andb
cld
ret
or
mov
adc
lret
lahf
lret
jecxz
gs
mov
add
mov
or
mov
adc
mov
sbb
movsb
push
mov
jecxz
jns
movsl
pop
repz
cmpsb
lahf
xor
xor
cmpsl
lahf
jae
jecxz
or
xchg
ret
mov
lret
mov
rolb
lods
mov
ficoml
push
loop
adc
es
adc
inc
loop
sbb
loop
and
daa
xor
adc
cmpsl
mov
mov
fdivs
popa
and
stos
sbb
enter
int3
fisubl
cmpsl
dec
sbb
jb
daa
pop
cmpsb
ret
push
loope
and
mov
call
aad
xor
and
mov
lea
cmp
ds
pusha
push
push
in
lcall
ds
jne
in
xchg
inc
cmp
fisubl
ja
pop
shll
push
ret
fucomi
dec
sbb
gs
mov
in
popa
testb
dec
rorb
lds
mov
test
mov
lahf
jp
fs
rcll
out
cmc
lret
pop
pop
sub
stos
sub
aaa
inc
pop
jne
sbb
sahf
dec
mov
dec
jno
add
into
jno
adc
dec
jno
and
iret
mov
xor
dec
xor
push
aam
enter
push
lret
dec
repnz
push
into
push
leave
repnz
push
rcr
cmp
ret
test
fcomp
lret
xchg
adc
fdivr
dec
mov
movsl
adc
fcomps
adc
inc
inc
shlb
pusha
push
shrb
add
in
lds
out
jo
push
sub
mov
call
or
repz
das
mov
sar
mov
popl
adc
xor
shl
xor
xor
divb
mov
dec
arpl
loope
cmp
sub
cmp
loop
mov
push
ret
jae
mov
stc
cli
in
test
or
in
rolb
stc
nop
in
sub
pushf
push
sub
cmp
sbb
cs
pop
mov
jecxz
inc
sbb
lock
icebp
xchg
xchg
pop
popf
scas
inc
add
repz
sbb
int
sub
jecxz
sub
fstpt
sbb
and
xor
sub
ss
cs
inc
leave
pop
cmpsl
ret
lea
fwait
dec
cltd
enter
enter
test
inc
mov
dec
inc
dec
stos
cwtl
add
arpl
bts
inc
in
pop
push
shrl
subl
pop
inc
scas
fwait
add
pop
add
fwait
inc
arpl
fisubl
add
mov
or
mov
adc
mov
sbb
movsb
sahf
addl
sahf
ret
and
cmpsb
sahf
add
xor
cmpsl
pop
inc
arpl
add
es
push
add
jge
add
mov
push
pop
stos
int
pusha
mov
dec
addb
int3
shlb
dec
add
repnz
inc
loopne
mov
addl
call
ret
and
lock
xor
in
mov
jnp
inc
push
mov
or
shll
out
stos
fadds
jae
gs
jb
sbb
divb
jle
test
addl
hlt
xor
xchg
enter
jne
cmp
xor
mov
dec
sbbb
push
xchg
adcb
rcr
xchg
fwait
adc
and
mov
clc
iret
scas
fwait
adc
imul
add
mov
inc
sbb
cmpsl
mov
cmpb
imul
enter
xchg
and
leave
int3
inc
lahf
cli
sub
lret
ffreep
xor
lret
into
rcrl
roll
xor
add
sbb
or
and
add
sub
adc
pushf
push
loope
mov
les
mov
lds
mov
mov
mov
and
jae
sub
pop
mov
jge
xchg
jns
ficompl
popa
and
mov
sbb
mov
shll
pop
cmpsb
sbb
loope
int
and
lds
mov
fstl
mov
cmc
push
daa
mov
in
dec
sub
movsl
dec
sub
cmp
mov
movsb
mov
lret
jecxz
push
cwtl
aaa
rcrb
mov
ss
and
cmpsl
mov
nop
pop
mov
enterw
jno
les
jno
dec
push
cli
mov
fistps
add
ljmp
sar
pop
cmp
dec
mov
cli
jge
push
push
mov
lret
xchg
fwait
adc
cmp
sbb
sbb
jnp
mov
shr
mov
pop
loope
cmp
adc
jle
orb
cmp
mov
adc
jns
sub
stc
repnz
ljmp
int
int
cmp
jne
mov
or
add
clc
into
dec
adc
adc
add
xor
push
adc
xchg
and
mov
test
js
test
or
aas
lea
push
lods
sbb
mov
adc
add
pop
pop
iret
adc
sub
fcom
mov
cmp
ss
mov
dec
pushf
dec
and
jg
sub
repz
or
popf
jecxz
jge
cmp
fucomp
jae
pop
hlt
test
imull
cmc
repz
pop
xor
sbb
inc
sbb
or
cmp
or
xor
loope
pop
scas
push
lret
pop
test
push
mov
rcrl
fcmovnb
js
jle
ficomps
out
js
inc
cmp
dec
std
adc
pop
or
sub
pop
jecxz
adc
jge
xchg
pop
sbb
lahf
call
jns
fidivrl
fistps
mov
aas
js
xor
enter
lcall
bound
hlt
je
xchg
shrl
pop
cmp
mov
ret
pop
jg
pop
test
mov
mov
mov
test
pop
fucomip
jl
test
mov
sub
mov
in
ja
pop
rcrl
es
enter
mulb
or
fwait
and
mov
sbb
dec
or
lret
stos
jae
mov
stc
cli
in
test
cmp
push
sbb
mov
or
add
sbb
fstl
test
mov
jno
aad
jmp
scas
pop
mov
jge
lds
push
shlb
into
loope
ljmp
loope
push
pop
mov
jmp
xchg
adcb
pop
cmp
cmp
dec
jge
mov
xchg
fmulp
mov
shlb
inc
and
mov
out
mov
mov
ret
loop
pop
das
xor
mov
out
adc
sub
mov
imul
fwait
mov
inc
mov
loope
adc
push
test
int
ret
sbb
aas
push
or
sbb
lret
movsl
mov
pushf
jecxz
cli
xlat
xchg
int3
dec
pop
stos
fsubr
lods
push
dec
mov
push
iret
mov
sbb
fsub
shll
test
ret
mov
xchg
add
mov
jp
sub
sub
push
sbb
adc
shlb
mov
ficoms
jnp
inc
mov
add
mov
fwait
push
dec
mov
xor
pop
mov
test
adc
cmpsb
mov
fwait
dec
fsubs
pop
fisubs
cmp
in
mov
xor
mov
and
and
out
push
and
jmp
or
imul
cltd
push
mov
adc
add
inc
loopne
repz
cmp
lea
jl
jbe
pop
sbbl
and
loop
jb
mov
mov
dec
sbb
jne
rcrl
add
ljmp
ljmp
sbb
test
xchg
ficoml
cmp
xchg
stos
jge
jns
push
jb
xor
sbb
ss
push
pushf
cmp
shll
or
iret
add
js
loopne
das
cmpsl
xlat
mov
mov
imul
cmp
pop
fldt
insl
mov
xor
push
aas
fwait
lret
in
mov
mov
sub
call
cmpsb
jecxz
enter
mov
int3
fsubl
push
push
sbb
sbb
ja
movsb
lock
dec
sahf
dec
mov
lcall
cmp
loopne
mov
repz
sti
pop
adc
or
xchg
xor
pop
int
inc
pop
fimull
lret
inc
xchg
push
jbe
and
int
ret
popf
sti
pslld
mov
and
lds
jge
inc
mov
mov
pusha
stc
fstps
push
pushf
dec
shlb
mov
fs
movsl
add
or
xor
jb
fcoml
mov
into
jno
pusha
jmp
popf
in
icebp
fxam
xor
jmp
mov
in
cmp
mov
cmpsb
sbb
and
jp
sbb
xchg
mov
ret
iret
cmpsl
ret
or
push
add
add
mov
hlt
js
cwtl
adc
aaa
lds
or
das
int
imul
lret
dec
mov
repnz
xlat
fwait
add
iret
add
pop
scas
bound
jecxz
gs
mov
pop
sub
sbb
mov
cmpsl
mov
loop
lret
movsl
mov
mov
repz
mov
test
inc
mov
std
dec
jae
fldt
arpl
cmpsl
insb
mov
mov
xchg
dec
out
jnp
xchg
dec
fwait
sarl
popa
ficoml
xchg
push
xchg
mov
xorb
pop
aaa
test
and
cmpsl
lods
jmp
popf
fisubs
sti
addb
leave
loop
mov
fistl
or
pop
lea
mov
mov
xchg
test
shrb
inc
outsl
cltd
js
add
lcall
icebp
call
cmpsb
inc
cltd
shlb
cltd
das
xchg
enter
cmp
push
scas
int
imul
pop
dec
mov
into
test
scas
icebp
fistl
xchg
repz
mov
in
std
sti
mov
jmp
gs
mov
inc
add
jo
f2xm1
clc
adc
jl
pop
shl
test
in
ret
pop
jbe
sbb
xchg
jae
push
mov
stc
rclb
sub
into
dec
mov
enter
mov
repz
mov
jno
add
lahf
xchg
mov
push
sub
cmp
test
sbb
mov
sbb
aam
sub
and
test
inc
out
fnstenv
push
sahf
or
adc
clc
sbb
clc
pminub
mov
mov
outsb
xchg
mov
cmc
add
in
shl
lods
push
insb
adc
int3
pop
or
and
mov
movl
mov
das
push
rolb
xor
add
dec
cltd
push
es
subb
inc
mov
mov
sti
in
test
test
call
fdivrs
add
mov
or
xchg
enter
add
adc
pop
sub
std
mov
leave
add
fcompl
dec
movsl
mov
mov
ss
push
movsb
sahf
mov
clc
imul
cltd
pop
fimuls
mov
lcall
fbstp
pop
popf
leave
lret
push
cmp
jo
push
dec
sbb
or
inc
clc
xchg
dec
push
imul
scas
push
pop
sbb
negb
jmp
adc
adc
jp
adc
jp
divl
or
pop
or
add
add
daa
sbb
inc
aaa
adc
inc
sub
adcl
stc
add
dec
lds
icebp
xchg
xor
mov
mov
outsb
ss
ja
push
push
push
mov
ficompl
inc
movsl
std
cmp
lret
pop
push
inc
in
scas
sbb
fcomps
pop
movsl
inc
mov
push
adc
mov
adc
add
add
cld
pop
lahf
pop
push
aad
cld
outsb
inc
rclb
in
stos
ret
sub
xor
xchg
imul
mov
xchg
pushf
into
jmp
stc
jnp
out
xchg
and
mov
shll
adc
mov
mov
addl
and
push
inc
loopne
mov
popa
lock
roll
rorb
gs
ret
mov
je
jecxz
inc
inc
shr
cmp
sbb
out
xor
mov
xor
aaa
cmp
inc
pop
lea
add
cmp
fs
mov
mov
ds
xor
push
and
xor
stos
loope
fstl
xlat
sbb
test
push
mov
sub
mov
jb
inc
rol
rorb
push
hlt
mov
rcrl
xor
mov
enter
push
push
push
rclb
sub
sub
ja
push
les
jmp
xchg
int3
hlt
outsl
pop
dec
subl
dec
mov
xlat
mov
sbb
fldcw
inc
dec
and
mov
inc
addb
int
xchg
dec
scas
lret
add
mov
sbb
push
xchg
hlt
popa
clc
shrl
stc
jae
adc
dec
lcall
stc
bnd
xlat
push
mov
push
imul
push
and
out
add
dec
neg
jb
inc
subl
cltd
jb
data16
fs
mov
mov
or
ss
push
ret
fldlg2
cld
push
pop
pop
sub
inc
fst
cmp
cmp
add
jl
rol
nop
aad
push
or
jne
repz
mov
in
pop
fcomi
mov
dec
mov
pop
dec
mov
aas
push
or
test
pop
or
pusha
stos
aad
jne
add
cwtl
xchg
lret
hlt
xchg
dec
fwait
jg
fcomip
subb
cmp
icebp
dec
push
repz
stos
mov
rep
andl
hlt
mov
ret
js
js
push
xor
and
arpl
mov
mov
sbb
lret
aad
mov
ds
cmpsl
insb
or
jmp
ret
popf
dec
mov
out
sbb
push
sub
mov
repz
shll
ror
and
faddl
out
cmpsl
jg
jb
inc
aad
adc
push
ret
pop
pop
push
daa
inc
pop
or
xor
sbb
in
jb
pop
sbb
lock
inc
adc
jg
jnp
add
pop
test
mov
sub
mov
jmp
sub
sahf
in
mov
dec
jl
inc
outsl
movsb
add
cmp
or
add
icebp
aam
inc
push
and
cmpsb
cld
jno
roll
dec
in
jnp
adc
mov
and
mov
sarb
inc
scas
mov
testl
les
xchg
mov
mov
jl
add
jb
imul
push
push
or
jl
jecxz
jnp
enter
lahf
jnp
mov
ja
xchg
mov
push
cmc
ds
les
push
aas
test
andl
sarl
xchg
andl
mov
sub
xchg
add
lahf
popl
pop
mov
xchg
iret
popf
iret
out
or
sub
sub
je
roll
lods
outsb
stos
mov
mov
cmpl
pop
ljmp
pop
scas
ret
loopne
inc
mov
clc
sti
jno
lret
push
shll
lods
pop
push
cmp
xor
sti
sub
add
scas
mov
shrb
imul
out
jge
add
mov
in
lds
pop
add
jmp
movsl
mov
pop
test
lret
cmp
mov
dec
add
cld
test
dec
leave
lods
or
ds
outsb
push
mov
fistl
lds
test
popf
pop
adc
add
lock
cwtl
xchg
mov
xchg
and
repnz
andl
paddq
mov
ljmp
data16
jl
sbb
cmpsb
ret
or
inc
inc
rorb
ss
imul
shll
stos
fs
cltd
out
nop
in
mov
inc
jle
insb
dec
mov
mov
dec
lods
push
sub
fisubrs
daa
jmp
push
cs
mov
cmpsb
pop
repz
je
test
add
xor
add
mov
shrb
test
scas
mov
stc
int3
outsb
leave
sbb
sub
adc
lds
sub
lds
add
mov
and
sbb
in
gs
mov
xor
dec
inc
imul
sbb
jp
mov
jns
int3
lret
and
in
add
test
frstor
js
dec
cmp
push
mov
sbb
or
inc
fwait
sbb
repz
por
and
js
sbb
out
in
rcl
jno
and
push
and
xchg
pop
js
inc
outsb
test
mov
sahf
jnp
outsl
outsb
add
filds
cmp
jecxz
fbstp
sbb
out
mov
inc
mov
lret
test
xor
repz
test
je
xor
ret
fsubrl
jg
enter
xchg
hlt
cmpsb
out
orb
xor
lock
or
sub
std
cmp
sbb
scas
fsub
leave
aaa
fiadds
mov
and
mov
inc
sub
mov
scas
pop
xchg
pusha
jmp
sbb
pop
jns
pop
sub
addb
imul
adc
mov
shr
mov
inc
lcall
idiv
loope
jecxz
mov
lds
in
insb
jp
mov
jecxz
pop
sti
in
adc
xlat
or
push
xor
dec
and
xchg
and
mov
rcll
sub
add
pop
or
push
inc
test
sbb
cmpl
sub
adc
jo
js
sub
test
and
mov
fsubr
xor
sahf
shll
sub
nop
in
jo
addr16
push
xchg
lods
adc
out
sti
mov
jecxz
andl
mov
bound
rolb
shlb
xchg
int3
cwtl
lret
and
pop
pop
and
push
dec
push
test
push
mov
and
sbb
lret
add
push
pop
outsb
pusha
inc
pop
movsl
stc
mov
mov
dec
adc
xchg
cs
xchg
fldcw
push
addb
mov
pop
stos
ja
ret
and
inc
push
xchg
rolb
mov
mov
test
pushf
test
mov
popf
jg
ret
lock
sti
test
fcmovne
add
bound
fcoms
inc
inc
movsl
gs
xchg
jno
jle
test
push
movsb
jmp
mov
mov
aad
sbb
xchg
ficoms
and
shl
push
and
cmpxchg
inc
sub
push
dec
int3
lods
mov
popf
je
mov
out
sub
mov
pop
jne
pop
mov
aad
leave
stos
push
scas
mov
dec
lahf
in
pushf
add
cmp
and
cwtl
mov
outsb
mov
lods
adc
lahf
push
cmp
lret
movsl
mov
scas
sti
xor
lret
or
or
test
outsl
mov
pop
pop
sbb
lods
mov
jmp
mov
aad
xor
pop
mov
aas
mov
in
stos
mov
call
push
lods
lock
es
push
aad
and
shl
inc
ljmp
or
mov
andl
cli
pop
ds
jno
out
cwtl
shll
push
sub
pop
push
lret
sbb
mov
ja
dec
pusha
sbb
mov
fwait
lea
or
test
dec
inc
les
xchg
jle
xor
into
jmp
lret
dec
lods
insl
fwait
xchg
mov
cmpsl
fwait
repz
mov
sti
mov
mov
and
sahf
outsl
xchg
jmp
sahf
add
jg
pop
push
ds
and
jnp
cmpsb
add
scas
xor
push
xor
sti
adc
add
test
lret
ffreep
pop
cmp
repnz
aad
xor
les
imull
sub
insl
and
idivb
iret
ja
xchg
jns
int3
lret
mulb
inc
xchg
out
sub
jp
mov
sub
xchg
inc
mov
pop
fiadds
loope
mov
test
xlat
mov
mov
popl
sbbb
adc
in
add
imul
fstps
enter
jmp
xor
clc
scas
rorb
lods
pop
fsts
jp
jns
xchg
ljmp
sbb
mov
or
icebp
push
imul
or
mov
inc
cmp
jo
arpl
add
mov
repnz
xor
jecxz
clc
test
sbb
xchg
dec
or
mov
cmpsl
mov
aam
fbstp
mov
stos
clc
add
shrl
fstpl
dec
bound
mov
mov
icebp
mov
test
push
loop
aaa
sub
lcall
aam
mov
lahf
arpl
lcall
push
lock
and
das
mov
add
fmuls
rorb
pop
lea
scas
xchg
adc
jne
xorb
leave
pop
sub
cmp
jae
insl
dec
add
adc
cmp
or
icebp
sub
xchg
xor
pop
mov
or
sub
mov
mov
jmp
add
pusha
push
xchg
mov
stos
sahf
inc
dec
call
pop
add
jnp
mov
in
fstps
add
leave
inc
jg
fadd
mov
call
pop
push
leave
push
add
imul
mov
lcall
test
mov
jl
sbb
inc
test
mov
xchg
fisttpl
outsb
add
or
cmpsl
push
cmc
adc
xchg
push
mov
ret
cmp
arpl
sub
fsts
xchg
inc
add
cmp
adc
push
inc
add
mov
cmp
in
jno
sub
xchg
mov
pushf
mov
xor
pop
movsb
sti
imul
push
mov
sbb
xor
les
out
push
hlt
cmp
hlt
clc
mov
fsts
in
xchg
push
fildll
sti
push
test
mov
inc
cmp
ds
pop
cltd
push
mov
enter
cwtl
ret
mov
sbb
leave
sbbb
nop
loope
popf
pop
fs
xor
stos
dec
dec
lret
arpl
xor
test
push
push
pushf
out
inc
mov
cli
sub
fs
push
adc
mov
in
jl
rcll
lret
add
mov
cmc
test
mov
sub
jbe
fucomi
in
stos
jge
inc
fbld
test
ret
cmpsl
repz
add
inc
xor
sbb
add
aam
fwait
iret
cwtl
inc
movsl
fnstcw
ret
xor
ret
fwait
lcall
inc
sbbl
pop
sbb
jne
divl
frstpm(287
push
shl
pop
xchg
or
push
inc
or
xor
dec
inc
mov
cmpb
lret
mov
jbe
dec
jo
jo
mov
test
adcl
mov
imul
add
and
push
push
nop
push
outsb
dec
add
fildl
mov
gs
or
lods
push
mov
hlt
mov
sahf
sub
mov
sub
add
mov
fucomp
fs
movsl
outsb
pusha
dec
call
cld
or
in
xchg
sbb
jo
mov
scas
mull
cmp
adc
push
jnp
mov
pusha
cmp
outsb
out
daa
push
inc
fwait
out
push
inc
mov
pusha
add
xchg
loope
popa
pushf
push
push
sub
imull
and
pop
loop
mov
mov
pop
push
push
mov
inc
sbb
es
jmp
adc
add
and
dec
mov
xor
jb
jo
or
cmpsb
ficoms
inc
adcb
inc
adc
lcall
andl
fists
sti
aas
psubusb
hlt
xor
cltd
mov
jbe
add
and
adc
mov
leave
mov
mov
pushf
ret
mov
mov
test
mov
das
ljmp
mov
movsb
les
jo
sub
das
sbb
sbb
jbe
pop
push
mov
jns
inc
pop
mov
in
roll
lahf
mov
leave
in
stos
jg
pop
fsubr
icebp
xor
sub
jl
mov
sbb
neg
inc
pop
dec
mov
je
mov
adc
movsb
cli
jg
inc
outsb
lahf
inc
repz
and
jl
daa
ret
fld1
mov
add
popa
gs
out
outsl
pop
hlt
mov
xchg
mov
and
mov
pop
add
adc
push
test
xor
bound
pop
mov
inc
imul
mov
sahf
add
dec
sbb
call
mov
cld
test
sbb
fsubrl
int
inc
sub
cmp
push
vandnps
sbb
and
stos
mov
in
jae
das
sbb
xor
or
mov
pushf
das
sub
addr16
lods
stos
mov
std
call
xchg
fstpt
and
inc
mov
jmp
cltd
lret
mov
xchg
and
popa
or
jl
aas
jo
dec
sar
adc
out
test
mov
gs
je
or
jo
movsb
inc
add
mov
xchg
jle
clc
rcrb
cmp
stos
leave
gs
mov
xchg
or
xchg
enter
je
or
int
repnz
sahf
jecxz
mov
sub
js
je
stos
rcr
pop
pop
adc
addr16
lret
loope
fstl
addb
push
ret
hlt
mov
imulb
cltd
push
xor
sti
xchg
mov
mov
hlt
test
fsubrp
les
fs
clc
stos
in
jnp
mov
or
and
sub
mov
shrl
jae
add
sbb
popa
add
pop
add
fsubrs
sbb
push
fwait
pop
and
cmpsl
push
sub
mov
push
inc
push
lods
pop
cmp
sti
add
cli
jo
dec
cwtl
js
fisttpl
add
adc
pop
repnz
add
sbb
outsb
mov
lods
iret
aam
pop
inc
lock
lret
aad
lahf
stos
dec
xor
scas
fistpll
bound
pop
add
push
sbb
mov
aaa
pop
mov
stc
hlt
outsl
fcomps
dec
aas
shrb
mov
popf
icebp
adc
push
sahf
sub
jp
je
mov
imul
jg
repnz
fwait
mov
jecxz
les
cld
into
lret
mov
cld
nop
jbe
ret
push
sbb
sbb
addr16
rcrb
mov
int3
jnp
dec
dec
lret
mov
lret
xchg
lret
sbb
in
out
test
movsl
daa
add
and
fisubrl
addb
lcall
popf
sbb
sbb
rclb
rorb
cmpsb
test
sub
xchg
leave
lret
pop
test
nop
inc
push
scas
inc
cld
repnz
movsb
test
mov
push
nop
cmp
inc
inc
sbb
std
and
or
sub
lock
mov
pop
int3
mov
sahf
xchg
sti
jecxz
pop
ret
mov
rcll
or
vmovaps
sbb
push
fsubs
dec
mov
xorl
xor
or
jb
rolb
jecxz
ja
mov
adc
repz
jae
pop
mov
cmp
stos
push
test
cltd
jg
lahf
in
clc
add
mov
push
ljmp
sbb
add
jno
adc
clc
daa
cwtl
lret
inc
sbb
xorb
ss
sub
mov
sub
int
les
dec
dec
jnp
push
fs
xchg
dec
mov
add
mov
or
shll
clc
frstor
push
sub
pop
push
mov
jmp
fsts
jmp
jg
mull
push
cmpsl
add
or
fisubs
dec
dec
ljmp
or
add
pop
mov
jle
shrl
push
test
ret
nop
js
xchg
sbb
dec
pop
xor
in
rcr
iret
cmpsb
inc
shll
jle
and
cmpsb
jnp
add
sub
imul
sahf
mov
sub
dec
mov
lahf
inc
adc
add
push
xor
cmpl
xor
pop
sbb
mov
nop
cld
lds
leave
inc
cltd
cmpb
xchg
leave
fsubl
sbbl
mov
pop
test
call
mov
scas
mov
testl
shll
fldl
mov
and
pop
or
xor
stos
cmp
dec
sub
rclb
jns
mov
mov
mov
jl
dec
test
cs
jmp
popf
scas
jg
icebp
add
inc
fdivrl
add
xor
add
mov
fwait
push
pop
fistl
add
imul
js
jp
mov
xor
inc
and
cmp
sbb
outsl
mov
das
and
aad
mov
ss
das
in
aam
mov
ret
loopne
sub
pop
or
lahf
lret
in
mov
or
mov
lock
mov
mov
dec
hlt
imul
out
pushf
les
push
xchg
cmp
jne
loop
sbb
xchg
push
xlat
and
xor
ds
in
fbstp
hlt
push
xor
addb
push
fwait
push
pop
test
jmp
fiaddl
test
mov
and
in
mov
stos
push
sbb
pop
jmp
sbb
outsb
and
xlat
pop
shlb
or
dec
add
in
rcr
mov
adc
xor
fdivs
xor
mov
stos
pop
mov
outsl
dec
out
cltd
cwtl
enter
jo
sub
daa
push
hlt
sbb
sub
or
push
inc
int
jb
jecxz
stos
mov
bound
push
adc
pop
movsb
xchg
pop
insb
jno
mov
ret
call
rcll
popl
cmpsl
rorl
imul
sbb
fcoml
out
dec
movsl
mov
idivb
sbb
add
sub
pop
push
pop
mov
adc
mov
sahf
das
fiadds
fcoms
mov
push
and
cmp
mov
xchg
add
loop
sub
pop
xchg
fisttpl
cltd
lods
jno
aaa
pusha
push
dec
xchg
push
lcall
insl
js
xchg
loope
xchg
loope
and
fbld
mov
mov
adc
push
cmp
or
scas
jle
fidivrl
sub
les
sbb
imul
ret
fnstenv
inc
test
sub
sbb
push
inc
pop
pop
lcall
clc
popf
jbe
dec
adc
push
adc
push
inc
sbb
sub
xor
fnstsw
bound
xchg
dec
shr
movsl
inc
arpl
in
and
push
jo
cwtl
pop
lret
std
je
and
xchg
and
push
mov
cltd
xor
iret
cli
cmp
dec
adc
iret
je
dec
inc
imul
pop
jb
cmpsb
rorb
sbb
and
scas
mov
add
rorl
xchg
xchg
imul
pop
cmc
insb
or
pop
xor
shll
push
es
outsl
sub
js
or
and
mov
mov
sub
or
scas
inc
dec
or
mov
or
fmuls
cmp
andb
je
cmpsb
mov
popf
push
rcr
movsb
inc
inc
mov
inc
pop
fidivrl
mov
lret
mov
and
xor
mov
jb
pushf
jmp
push
adc
push
fdivs
out
shrl
shlb
sub
jbe
lea
xor
mov
fsubrl
cmp
sti
cmp
dec
lahf
in
nop
add
pop
pusha
lret
dec
add
xor
jg
and
iret
push
mov
nop
and
adc
mov
imulb
shl
iret
sbb
loop
pop
fucom
stc
push
pop
into
mov
sbb
test
inc
cmp
leave
stos
jne
dec
xchg
dec
mov
jae
cmp
lds
scas
jnp
test
in
aad
mov
enter
cmpsb
ffreep
enter
mov
test
ja
and
es
push
dec
push
sub
dec
popa
xchg
cli
scas
dec
fdivr
mov
aam
ret
subl
aad
mov
and
mov
mov
cwtl
aas
fld
ror
inc
mov
rcrb
les
mov
test
adc
push
add
mov
int
aaa
mov
and
dec
cmpl
push
sbbb
jbe
scas
xor
out
pop
cli
add
mov
pushf
and
es
stos
adc
adcl
push
hlt
stos
lret
subl
mov
mov
fwait
push
and
rorb
lods
iret
enter
fwait
shll
les
adc
arpl
pop
dec
ja
add
jmp
inc
and
imul
push
xor
imul
adc
arpl
aad
xor
fcoml
push
mov
or
rcr
loope
or
xor
xchg
dec
movsl
ret
sub
inc
mov
jle
inc
pop
and
cmp
movb
mov
mov
addr16
enter
enter
stc
jb
aad
ret
fsubrs
jge
dec
mov
mov
fbld
dec
loopne
and
and
pop
and
or
neg
test
mov
pop
les
sbb
add
call
cmpsb
xchg
fisubl
sbb
sub
and
dec
sub
imul
sbb
in
imul
jae
lret
insb
add
ret
sub
fwait
shll
inc
pop
test
dec
aam
mov
mov
xor
pushf
pop
test
add
mov
xor
mov
push
hlt
arpl
loope
dec
push
mov
inc
adc
out
add
inc
cmpsl
gs
mov
dec
rclb
loopne
movsl
ret
stos
daa
enter
fisubs
push
dec
mov
jb
mov
lret
fs
movl
add
jns
jno
aaa
in
lea
sub
shrl
adc
jge
jbe
out
ljmp
fwait
iret
orb
pusha
sub
ja
lds
pusha
rcrb
sbb
mov
sbb
dec
mov
ret
inc
scas
mov
hlt
mov
push
test
cmp
fwait
mov
or
cltd
clc
testb
jmp
cmp
lret
dec
test
xor
cwtl
mov
pop
mov
pop
sub
arpl
fsts
and
pushf
xchg
lret
in
cwtl
daa
or
and
pushw
or
pop
adc
xorl
sbb
add
cld
xor
mov
dec
rcrl
mov
ret
sbb
loopne
sbb
fidivl
push
outsb
xchg
push
mov
je
pop
rcr
adc
ret
call
add
xor
hlt
clc
in
cs
hlt
sub
add
fistl
imul
imul
pop
idiv
cmp
sub
add
cld
scas
jo
or
or
lds
sbb
mov
mov
dec
sbb
or
dec
sahf
jp
inc
fsubrl
mov
fisttpll
mov
jge
jno
test
cmp
xor
stos
jge
lcall
jbe
mov
push
negb
data16
icebp
dec
es
icebp
push
cmp
xchg
rcr
cmc
out
or
sti
test
adc
push
adc
mov
mov
cli
xchg
mov
outsb
lahf
imul
ja
push
aam
fdivrl
adc
add
sub
jno
jg
and
jg
and
pop
mov
push
inc
push
xchg
movsb
jae
cmc
dec
pop
popa
dec
call
push
and
add
pop
fucomip
repz
mov
pop
loopne
mov
cmc
mov
sbb
or
ret
push
pop
cwtl
xor
lods
icebp
loop
loop
xor
aad
mov
mov
lock
shrb
cmp
stos
mov
mov
xchg
test
mov
push
js
idivb
out
push
cmp
xchg
fistl
std
outsl
es
jb
xor
xchg
ja
sub
jmp
add
or
mov
xchg
adc
cmpl
xor
pushl
rclb
dec
xchg
and
repnz
xor
imul
add
sbb
sub
movsl
xchg
mov
loopne
jg
imul
loopne
hlt
cmc
sub
sbb
xchg
fdivrs
mov
cmp
inc
inc
xor
pop
ret
arpl
fnstcw
aas
movsl
jns
push
mov
cmpsl
icebp
std
jne
xorl
lock
sub
xlat
inc
pop
mov
mov
add
dec
lahf
sbb
dec
hlt
xchg
mov
mov
mov
js
repnz
flds
dec
jo
jbe
add
fldt
lock
xchg
stos
adcl
test
mov
cli
jg
sub
jne
test
lods
lods
xchg
arpl
push
mov
add
int3
repnz
scas
leave
pop
loopne
icebp
int
mov
jg
adc
xchg
les
xor
inc
pop
mov
mov
popf
adcl
aad
inc
push
sbb
jb
push
pop
cmpsb
pop
jne
fsubrl
and
sbb
mov
nop
aas
and
mov
cmp
mov
xchg
sub
jbe
sub
cmp
repnz
jge
mov
call
int3
std
cmp
cld
mov
das
pop
cmc
mov
or
mov
loopnew
ret
dec
xchg
leave
dec
fwait
jle
push
push
jecxz
xor
lds
jnp
mov
fldt
out
popf
push
dec
scas
mov
and
loope
les
les
sub
fwait
loopne
fcmovne
dec
dec
out
scas
lods
shrb
int3
lods
pop
dec
popf
shll
fs
push
mov
jge
inc
sti
out
dec
xor
je
dec
xorl
sbb
mov
outsl
neg
inc
inc
cmp
adc
mov
shlb
mov
mov
jae
cmpsb
jo
cmpsb
dec
movsl
fwait
mov
iret
or
enter
movl
dec
xchg
test
in
out
addr16
push
add
dec
out
sbb
pop
pop
aas
xchg
pop
dec
dec
call
cli
mov
xchg
orb
fwait
lahf
pop
lret
jne
xchg
sbb
lds
jg
adc
or
mov
mov
sub
nop
fdivrl
rcl
push
add
mov
ja
and
pop
frstor
jg
and
push
lret
push
leave
pop
xchg
jl
jg
lock
sub
or
aam
gs
xor
mov
lret
mov
xor
adc
jge
lahf
fwait
or
cmp
jne
mov
adc
push
xchg
cmp
or
xchg
inc
ficomps
sub
dec
testl
xlat
xchg
xchg
cmpsl
or
sub
fsubl
mov
test
and
mov
sbb
mov
dec
xchg
aaa
sub
addl
xor
aam
hlt
dec
mov
pop
pop
pop
dec
call
filds
jge
xchg
push
iret
lods
xchg
cld
xor
jns
inc
ret
mov
cmp
subb
sbb
inc
jb
in
inc
test
lret
or
adc
push
cmpsl
mov
cmp
fisttps
xlat
orb
lahf
popf
inc
loopne
lods
repnz
xor
xchg
mov
or
or
adc
fisttps
mov
mov
mov
lods
lea
test
add
loope
sub
jg
jns
std
rol
into
je
sbb
test
ret
xchg
jge
pop
aad
pop
adc
shrb
adc
dec
mov
lcall
test
adc
aam
cli
xor
mov
cmp
mov
arpl
or
lea
nop
das
xchg
enter
popa
push
or
push
cmpsb
jns
fldpi
mov
repnz
ja
push
ja
mov
call
pop
mov
imul
test
sub
inc
iret
lcall
cmpsl
cltd
pop
sub
inc
mov
add
fld
xchg
xor
imul
push
pop
push
add
or
add
dec
pop
add
and
xorl
add
repnz
ret
stos
sub
and
mov
mov
inc
push
aam
xor
xchg
cmp
test
ret
adc
mov
test
add
mov
inc
rcll
add
rcrb
sbb
xor
pop
test
lret
pop
inc
cwtl
xchg
iret
fwait
je
fwait
cmp
or
push
stos
loop
pop
push
es
lea
cltd
enter
mov
in
sub
ret
out
shrl
pop
cmpsb
push
outsl
mov
push
pop
es
movsl
jbe,pn
pop
movsl
aad
aad
jb
pop
and
jle
pop
movsb
push
push
push
jp
pop
and
shl
push
inc
pop
push
mov
inc
sbb
add
mov
dec
sbb
push
bound
mov
push
adc
inc
pop
pop
adc
push
fidivs
pop
adc
pop
repnz
es
dec
scas
rclb
fdivr
lcall
xor
push
outsl
iret
mov
dec
xor
iret
lret
int
ja
cmp
sbb
adc
and
idiv
stos
cmc
jno
inc
mov
sarl
jge
sub
iret
std
add
mov
xchg
push
xchg
rcrl
call
iret
xchg
pop
rcrl
aad
cmpsl
ret
or
jo
fwait
inc
js
aad
gs
in
pop
mov
push
mov
repz
icebp
cs
cmp
mov
lret
sub
dec
pop
mov
test
pop
aaa
xchg
sub
pop
mov
push
stos
cmp
out
sti
mov
jecxz
hlt
push
mov
mov
ss
mov
sbbb
sbb
xlat
stos
aad
test
mov
xchg
mov
int
ljmp
popf
lret
test
ja
jae
or
stos
inc
adcl
add
xchg
stos
out
push
adc
inc
push
xchg
inc
inc
fdivrl
outsl
fs
es
and
lcall
lds
or
mov
mov
adc
and
lods
test
testl
xchg
or
cmp
jnp
fdiv
push
mov
inc
mov
movsb
jns
imul
or
ret
pop
xlat
mov
shrb
mov
mov
jp
mov
hlt
jl
mov
enter
in
push
and
mov
rclb
rorl
sub
cwtl
es
push
stos
mov
sbb
jp
movsb
fsts
jecxz
daa
shrl
xor
push
xor
scas
addr16
push
lds
mov
adc
nop
or
lret
lea
mov
rcrb
xchg
xchg
int3
pop
cmpsl
sbb
mov
add
xchg
popf
icebp
add
lea
push
scas
adc
ret
cmpl
rcrb
call
rorl
push
sbb
je
pop
adc
lds
xchg
or
mov
mov
cmp
jnp
mov
test
or
pop
sub
jmp
add
in
pop
mov
daa
in
mov
xrelease
lahf
les
into
cld
je
pop
mov
cmp
pop
mov
lea
adc
clc
sti
and
pop
push
sbb
push
cld
cs
lds
stc
jmp
or
sub
das
dec
les
adc
push
sub
flds
repnz
cmp
fsubrl
pop
inc
cwtl
imul
sub
or
rorb
sub
push
movsb
fisubrl
rcll
adc
dec
mov
mov
lock
sub
or
xchg
pushf
mov
test
adc
push
adc
js
js
imul
insb
test
test
and
dec
out
daa
mov
xchg
mov
gs
aad
movsb
inc
sbb
cmp
in
push
roll
jge
mov
sub
dec
mov
mov
xchg
add
test
inc
pop
push
movsb
repz
dec
pop
call
cli
mov
iret
jo
push
loope
add
cmpsb
out
lahf
lret
xor
hlt
pop
loope
or
adc
ss
mov
fadd
xor
push
mov
das
lret
clc
mov
adc
sub
outsl
pop
dec
push
jns
divl
stos
cmp
xor
xchg
loopne
pushf
rcrl
inc
ja
in
push
xchg
lcall
inc
inc
pop
pop
pop
icebp
subb
xchg
sti
add
jmp
mov
pop
sbbb
icebp
cmp
mov
flds
add
or
in
rcr
sub
aad
insl
loope
dec
xor
ret
in
jl
frstor
xlat
nop
out
fld
fucomip
ljmp
mov
mov
je
jnp
push
mov
jnp
aas
iret
mov
dec
jle
adc
scas
xchg
lea
dec
mov
jg
scas
add
sarl
xor
lds
enter
das
lret
jecxz
jge
int3
imul
mov
das
inc
les
mov
and
xchg
and
sbb
mov
mov
jne
pop
scas
mov
dec
jp
pop
lods
mov
aaa
jns
xor
xchg
test
fcomps
sti
push
scas
xchg
out
add
or
mov
fwait
subl
lods
jle
out
jecxz
fwait
pusha
lahf
imul
mov
mov
xchg
bound
and
or
nop
pop
add
inc
pop
js
mov
test
rcr
mov
push
and
popf
mov
mov
mov
sbb
imul
mov
fwait
lea
xchg
jae
in
mov
stos
push
dec
loop
jecxz
fdivs
in
mov
outsl
mov
sti
dec
sahf
gs
cld
mov
test
outsb
dec
lea
and
sub
jmp
push
adc
fists
dec
fwait
es
add
cmp
jb
sbb
cmp
sahf
dec
add
and
sbb
push
push
test
mov
aam
ss
pop
pop
fsubr
mov
xor
inc
pop
xchg
arpl
ljmp
inc
sub
sub
movsl
and
lods
mov
mov
push
xchg
jnp
jnp
cmpsl
push
push
imul
xrelease
loop
ret
test
jo
arpl
push
popl
add
sbb
cmpb
cmpsb
aad
addr16
inc
sbb
popl
mov
jne
lcall
into
loop
test
out
sub
mov
or
loope
imul
jne
pop
xchg
stos
ret
shll
dec
inc
negb
psubsw
lds
in
mov
lret
repnz
pop
pop
mov
add
and
xchg
mov
pop
cwtl
lret
pop
mov
pop
in
push
in
xchg
js
cwtl
push
sbb
mov
xor
push
les
sarl
ret
sbb
adc
push
aam
dec
aas
xor
stos
add
mov
mov
mov
icebp
shrb
xchg
out
fildll
pusha
mov
call
ffreep
fninit
ror
mov
add
inc
out
sub
inc
shll
inc
cwtl
dec
test
movsb
leave
mov
jmp
dec
cltd
or
mov
inc
mov
and
push
jg
xchg
push
xor
aas
cmp
and
test
or
enter
js
xor
push
cmpsl
fwait
js
sahf
imul
jo
cmp
dec
inc
push
push
cmp
cmp
pop
arpl
sbb
sbb
sbb
cmpl
add
insb
repz
test
add
mov
aad
imul
pop
int
add
jae
cld
dec
imul
sarl
ret
lahf
xchg
stc
int
push
addb
mov
fdivrs
movsl
and
sub
inc
mov
mov
aam
cltd
lods
mov
stos
insl
arpl
lods
out
int3
sub
loop
lret
lods
arpl
pop
xchg
fcomi
sbb
add
inc
pop
pushf
lcall
xor
test
or
dec
fnstenv
sbb
and
testb
movsb
cmp
mov
aaa
sbb
jae
push
add
dec
cltd
jecxz
inc
cmp
mov
sub
fstpt
addl
mov
cs
inc
mov
shlb
lods
cmp
out
sti
mov
jecxz
add
in
enter
or
jo
iret
cmpsl
ret
dec
or
pushf
dec
fisttpll
lret
shr
pop
loopne
imul
sub
add
lods
mov
inc
in
mov
movsl
xor
iret
stos
or
dec
aas
xor
and
dec
movsl
test
lock
dec
jecxz
insl
lock
pop
cmp
push
mov
js
mov
cmc
and
sub
andl
add
dec
xchg
mov
mov
add
fwait
cmp
sti
in
cld
sbb
lahf
imul
pop
cmp
clc
mul
xchg
sub
enter
aam
stc
scas
shr
stos
push
outsb
imul
xacquire
pushf
dec
loope
sbb
and
loopne
cltd
test
fucomip
in
lcall
lret
jnp
cmpsb
loopne
xchg
jb
mov
mov
sar
adc
xchg
and
adc
test
popa
out
inc
mov
call
js
cwtl
push
adc
pop
call
lret
inc
xchg
cwtl
dec
mov
outsb
sbb
bound
popf
inc
scas
xchg
fimull
xor
mov
pop
pop
test
fwait
bound
ja
clc
mov
lods
inc
inc
shlb
jp
sub
outsb
mov
xchg
loop
inc
xchg
mov
dec
mov
add
push
popl
or
dec
mov
fstl
imul
loop
jge
jp
inc
push
mov
or
adcb
jne
scas
sub
int3
pop
mov
sub
rep
scas
or
inc
cmp
mov
dec
jnp
mov
or
dec
or
mov
cmp
cmp
imul
mov
scas
call
add
or
sub
push
test
iret
dec
test
imul
sub
push
lea
push
xchg
and
mov
test
sbb
mov
cli
sti
and
addr16
lret
xor
inc
sub
mov
jmp
lods
movb
cli
loop
mov
inc
sbb
sub
loopne
sbb
clc
mov
ror
mov
xchg
and
repnz
lcall
and
sbb
dec
pop
adc
adc
in
pop
xor
mov
lret
lahf
pop
aas
xchg
lds
fwait
dec
jo
sbb
adc
fs
sub
sbb
push
mov
movsb
push
mov
mov
mov
in
loop,pt
cld
in
icebp
mov
push
imul
jae
pop
or
clc
sti
pop
mov
lret
test
mov
pushf
push
mov
lock
sub
sbb
and
adc
mov
test
scas
lock
in
and
add
sub
les
sahf
fstl
and
xchg
sub
pop
mov
stos
nop
sarl
lret
add
dec
lret
dec
stos
xchg
fistl
lods
sahf
int
js
mov
pop
pusha
jp
cmp
push
push
cmc
hlt
lds
jp
in
ja
js
or
add
scas
bound
mov
mov
add
add
imul
dec
xchg
lock
sub
mov
and
test
repnz
jnp
repz
loop
jne
fcmovne
mov
jno
xchg
xchg
jo
xor
push
mov
mov
shlb
mov
fisttpl
adc
das
pop
lds
push
push
and
iret
push
ret
sti
xor
jl
ret
std
inc
insl
adc
mov
mov
mov
outsl
add
testl
cmpsb
shrl
out
sbb
xchg
mov
lcall
push
dec
loope
mov
daa
mov
cmp
cmp
dec
mov
cmp
in
leave
push
cltd
lods
mov
adc
mov
repz
inc
fwait
out
mov
xor
adc
mov
stos
dec
out
pop
jb
fisubrl
sub
add
push
mulb
pop
test
jge
push
xchg
sbb
jb
pop
cltd
and
pop
sub
out
cmp
mov
mov
inc
rcll
shrb
cmp
mov
test
cs
mov
iret
push
sbbb
add
adc
adc
adc
inc
sub
sub
adc
push
ret
mov
adc
les
enter
inc
jo
pop
and
pop
stos
xchg
imul
inc
ljmp
mov
repz
adc
pop
mov
and
dec
cmp
mov
inc
mov
faddl
xchg
negl
pusha
mov
test
jae
icebp
jmp
insl
pop
or
movb
popl
and
andb
leave
push
movsl
ret
inc
sub
scas
push
xchg
xchg
cmpsl
jbe
out
clc
pop
das
xor
cltd
enter
mov
pop
pop
and
cltd
mov
mov
sub
jmp
mov
movsl
jae
int
jg
and
int
fcmovbe
add
imul
sub
cmp
iret
mov
mov
nop
mov
add
movsb
lret
cmpsl
pop
cmpsl
push
leave
mov
pushf
inc
rcrb
fisttps
add
mov
dec
adc
mov
pop
lcall
test
mov
inc
push
ljmp
xor
mov
movsl
rcll
cmp
movsl
lock
lods
pop
cmpsl
xchg
aam
cltd
lods
inc
roll
jg
movl
mov
mov
add
addl
mov
xchg
mov
dec
xchg
and
sbb
sub
je
addl
es
pop
jns
xchg
sub
cltd
cmpsl
sti
pop
sarl
push
inc
fisubs
mov
adc
cmp
sbb
cwtl
ficoms
or
push
jnp
movsb
jns
test
or
or
lods
pushl
push
cmc
sbb
pop
push
push
ret
cmpsl
repz
xor
xchg
push
mov
repnz
pop
push
mov
repz
insl
xchg
lcall
cld
mov
or
cmp
pushf
sub
mov
cwtl
push
mov
sbb
jae
pop
sub
fsubrs
nop
mov
dec
in
inc
iret
xchg
pop
lock
lret
or
arpl
xchg
stos
flds
das
xor
jbe,pt
lods
sub
lods
hlt
popa
das
jle
lahf
xchg
jl
in
lea
cmp
or
inc
sbb
orb
cmp
jns
sbb
adc
scas
sbbl
lods
push
sahf
lds
scas
enter
movsb
inc
jns
jb
outsb
or
jnp
data16
jge
add
out
cmpsl
insb
cmc
sub
push
adc
arpl
sbb
mov
fistpll
les
mov
loop
dec
aas
pop
xlat
jmp
jl
stos
cmp
lahf
lret
sbb
xchg
es
jo
sti
addl
or
add
les
sbb
rcrb
hlt
stos
repnz
push
test
arpl
repnz
negl
sti
jg
push
cltd
inc
cli
test
mov
sbb
xchg
stos
jge
call
fwait
jge
sbb
cli
pop
xchg
arpl
jbe
lahf
jp
sub
sbb
popf
scas
rol
out
xchg
add
cmpl
mov
xchg
and
fmuls
xchg
movsl
inc
mov
cltd
xor
jp
mov
cmp
mov
into
pop
mov
test
cmp
bound
pop
sub
sbb
lock
daa
or
cwtl
pop
nop
xor
ja
or
dec
mov
ljmp
hlt
outsb
push
movsl
add
mov
je
pop
andb
sbb
mov
mov
cmc
adc
lds
sbb
les
sbb
stos
inc
in
xlat
dec
into
les
mov
adc
gs
test
pushf
dec
or
inc
test
sbb
cltd
ret
in
stos
lds
mov
push
jno
mov
xorb
mov
dec
hlt
push
or
loope
test
mov
cmp
mov
mov
push
loope
sbb
call
icebp
xor
and
jns
or
fwait
ret
push
movsl
ret
clc
mov
inc
stos
cmp
lahf
xlat
pop
mov
fsubrs
outsl
or
lds
mov
fsubp
mov
dec
mov
mov
inc
ds
dec
cwtl
loope
mov
lret
idivl
jmp
ss
sub
pop
mov
cmc
sarl
push
cmp
iret
lock
cmp
mov
ja
sbb
sub
ds
rcrb
xor
fdivrs
sbb
add
dec
ret
mov
std
ds
movb
dec
sbb
push
pushf
mov
test
jae
or
cld
add
jb
scas
lret
inc
lret
push
push
jge
mov
or
lods
inc
cltd
sub
push
xchg
and
pop
imul
xchg
or
sub
mov
add
pop
dec
add
ret
jb
inc
ret
outsl
or
cltd
ljmp
jno
jne
stos
sub
ja
xor
jo
add
stos
fs
nopl
xor
mov
ja
sub
pop
push
or
pop
fisubrs
push
cs
enter
jmp
movb
jmp
jnp
test
fucomip
out
cmpsl
cmp
js
mov
test
or
lret
test
flds
movsl
dec
jge
mov
mov
inc
mov
jbe
sbb
sub
std
rorl
or
dec
scas
mov
pop
daa
adc
jae
and
mov
push
sub
lcall
mov
push
sub
inc
sbb
cmc
lahf
scas
pop
jne
jmp
push
mov
ret
rolb
push
addl
mov
inc
mov
add
mov
sub
fcoms
ds
idivl
in
fisubrs
and
push
leave
pop
out
sub
dec
dec
sub
cwtl
push
mov
into
jmp
jbe
add
mov
sub
dec
mov
idiv
mov
in
lock
jns
repz
sbb
add
pusha
mov
outsl
adc
mov
fs
mov
jb
cld
aas
push
cltd
jns
aad
xor
shrl
lock
sbb
lret
fisttpll
mov
pop
xlat
arpl
cmp
shrb
cmpsl
inc
fiaddl
sub
testl
sbb
mov
dec
int3
mov
stc
adc
and
loope
sarl
pop
sti
mov
push
mov
inc
sarb
dec
jecxz
push
xchg
pop
lret
xchg
lods
mov
pop
push
aas
xchg
push
jle
into
js
jmp
dec
inc
mov
repz
insl
outsb
inc
mov
fdiv
add
out
jle
loope
adcl
inc
int3
lea
pop
push
popf
jbe
inc
out
mov
mov
xchg
gs
es
add
rcrl
int
aas
mov
movsl
xchg
jno
addl
mov
pop
lds
sbb
mov
popf
mov
pop
loop
cwtl
adc
aam
aas
repnz
insb
inc
sbb
insl
adc
out
sbb
xchg
xlat
stos
shl
dec
in
and
mov
popf
mov
lea
jns
mov
iret
pop
inc
rcrl
scas
adc
dec
mov
ret
jo
pushf
test
xchg
pop
mov
pop
loope
in
inc
ficoms
lods
fimull
aad
xor
push
or
xor
jge
pop
add
add
cmp
xchg
jno
mov
add
xchg
fsts
aas
insb
cwtl
in
pop
and
bnd
jmp
jae
inc
imul
jg
cmpsb
fsubrs
fidivrl
mull
int
mov
loopne
xor
test
inc
jae
add
je
loopne
imul
out
cmp
shlb
add
les
push
mov
xchg
xlat
sahf
xor
out
sti
lock
jmp
xor
and
mov
imul
popf
cld
inc
test
mov
jne
xchg
pop
cli
outsb
fldcw
out
push
push
pop
ljmp
jae
add
in
or
fsts
mov
or
pop
add
cmp
mov
push
ret
jmp
lcall
rcl
cld
add
and
add
push
jb
adc
xor
dec
xor
mov
or
les
push
ror
dec
cmp
sub
fdecstp
shlb
pop
aas
in
call
icebp
repz
clc
insb
lea
inc
or
loop
pop
add
hlt
call
jp
xor
pop
adc
cmpsl
add
mov
jae
ja
adc
imul
lds
inc
push
int
inc
sbb
inc
adc
xor
lods
shll
jnp
dec
sbb
add
mov
mov
mov
pop
bound
popf
cmp
loope
das
inc
mov
lsl
adc
and
push
jge
dec
gs
iretw
jmp
pop
cmp
loop
dec
test
mov
shlb
lahf
mov
pushf
jp
xor
andl
ljmp
pop
mov
adc
cmp
popa
test
enter
sahf
addr16
cmp
fwait
cmpsb
inc
int3
popf
push
ret
sbb
inc
fsubs
push
jns
fdivrs
lcall
addr16
mov
out
sub
outsb
mov
dec
inc
ds
add
ja
push
shr
mov
dec
mov
rcll
loopne
test
pop
xchg
push
jae
shrl
push
fists
mov
repz
jns
mov
mov
and
nop
dec
sbb
xchg
nop
or
xor
xor
call
inc
mov
cmp
test
ja
and
jae
sbb
jns
sahf
xchg
je
popf
inc
in
push
cmp
jnp
sbb
push
pop
xchg
push
xor
add
sub
sbb
jno
push
xchg
mov
lret
xchg
cwtl
inc
sbb
inc
xchg
fsub
icebp
sbb
lcall
push
cwtl
cld
cmp
adc
dec
pop
xchg
cltd
inc
fisubrs
subl
push
aam
jp
enter
or
imul
jb
outsl
test
inc
cltd
add
ja
inc
mov
ds
mov
mov
test
push
aam
xchg
out
imul
pop
jo
aaa
sbb
cmpsl
push
pop
add
or
jl
adc
rcll
test
jae
icebp
scas
adc
shl
inc
cmp
dec
test
scas
nop
jnp
test
lea
dec
mov
mov
mov
mov
pop
ficomps
mov
xchg
cmp
movsl
sub
out
inc
cmp
imul
adcl
mov
shrl
adc
push
dec
popf
dec
push
in
sbb
lahf
cwtl
out
jmp
pop
inc
ret
or
xor
inc
icebp
inc
fidivrs
add
jge
xchg
sub
test
push
mov
mov
jle
push
push
pop
fisubl
fiaddl
jnp
xchg
fcmove
jno
cltd
shl
xor
ds
inc
dec
sub
mov
jg
fcom
mov
inc
pushf
in
pop
shl
mov
dec
in
mov
stc
lcall
aas
aas
bound
pop
inc
je
outsb
mov
mov
les
cmp
insb
mov
repnz
stc
xchg
inc
sbb
ss
sbb
out
jns
aaa
ret
loopne
sbb
sbb
arpl
jae
inc
jmp
repz
jo
lods
icebp
add
sbb
fwait
push
push
add
add
out
jae
jne
add
sbb
fldl
js
loop
and
push
mov
cmp
std
rolb
movsb
test
roll
addl
into
decl
inc
push
push
jmp
mov
rolb
lret
pop
aad
movsl
ret
fsubrs
movsb
cli
jae
pop
xchg
popf
fists
xor
cmp
popf
iret
and
and
add
or
loop
mov
adc
int3
fidivrs
lret
cltd
jge
pop
xor
jbe
xchg
sub
push
addl
mov
mov
ret
ficoms
lcall
out
fwait
arpl
mov
or
lds
and
mov
mov
dec
xor
adc
rclb
stos
sbb
xchg
mov
movsl
in
mov
cmp
cmpsl
cwtl
nop
cmp
adc
lret
mov
pop
outsb
iretw
leave
xchg
scas
cmpsb
ss
in
out
mov
push
mov
mov
fists
mov
mov
repz
mov
adc
xchg
jg
sbb
pop
push
cmp
jle
aam
cltd
mov
or
in
push
popf
insl
cmc
cmpsl
cwtl
ret
sub
cmc
loope
adc
jae
je
test
sbb
in
rcr
arpl
aad
xchg
pop
push
lods
push
sub
pushf
gs
jge
dec
add
rorl
imul
mov
cwtl
push
adc
pop
cmp
push
lahf
or
aad
sbb
fcomi
shrb
dec
sbb
sti
lret
pop
jb
pop
and
push
pop
sbb
xor
cmpsl
test
or
cmpl
stos
inc
fwait
ljmp
out
pop
scas
jbe
xor
aaa
mov
mov
lahf
mov
js
xchg
insb
push
dec
cmp
jo
cwtl
mov
mov
stos
cltd
das
popl
jp
dec
ss
dec
testb
dec
xchg
ss
sbb
pop
push
stos
xchg
adc
push
sti
pop
pushf
and
stc
movsb
dec
push
shrb
lods
mov
dec
mov
icebp
je
push
fidivs
jmp
idivl
roll
xchg
inc
inc
mov
pop
rolb
mov
or
outsb
jge
dec
rol
mov
hlt
pop
fimuls
in
mov
mov
imul
lahf
inc
fstps
xor
test
xor
add
pop
lret
fldl
xor
lret
sbb
test
movsl
imul
sub
int
mov
xchg
shrl
mov
nop
lea
lds
mov
movsl
repz
jmp
test
xchg
adc
aam
mov
mov
xor
mov
lret
imul
inc
pop
inc
mov
testb
outsl
inc
mov
rolb
and
sbb
mov
jo
decl
lcall
cmpsl
and
dec
mov
push
pop
stos
shrl
out
xor
mov
mov
fidivrl
icebp
popl
bound
cli
js
inc
add
lods
roll
sbb
xor
repz
out
hlt
inc
mov
ds
or
nop
mov
iret
loope
out
mov
dec
xchg
cmp
lret
subl
arpl
mov
add
fsubrl
dec
xchg
add
mov
test
add
sahf
mov
in
sub
mov
mov
int3
push
iret
iret
addr16
fwait
out
stc
cmp
stos
mov
test
or
sti
mov
out
mov
jmp
loopne
je
mov
out
insl
inc
sbb
sarb
pop
lahf
jl
popl
ja
mov
pop
add
das
or
mov
int3
fisttpl
adc
imul
pop
es
movsl
dec
scas
or
fmuls
jmp
repz
ret
roll
ret
subl
mov
jecxz
add
orb
nop
cmovl
xchg
xor
jno
lds
stos
mov
push
jnp
bnd
push
dec
adc
lret
dec
sbb
dec
push
lret
lcall
shll
test
mov
rol
adc
test
aas
pushf
push
inc
outsb
les
mov
push
mov
xchg
stos
inc
push
jae
adc
push
push
sbb
cmovl
fwait
push
add
cltd
mov
adc
pop
nop
imul
and
sbb
xor
dec
mov
aam
pop
push
cld
fsubs
sar
pop
mov
xchg
outsl
push
ret
test
lea
mov
mov
int3
sbb
lcall
mov
inc
nop
mov
sub
push
dec
les
mov
push
mov
dec
call
lods
jno
test
mov
repz
cmp
mov
scas
and
rolb
adc
or
faddp
sbb
push
std
in
movsl
mov
nop
jnp
insl
das
dec
mov
lods
lret
xor
mov
jae
cmp
stos
mov
lret
lahf
xchg
mov
pop
sub
mov
push
mov
loop
mov
outsl
adc
ljmp
jns
and
lds
sub
cmp
and
out
jo
aad
aas
rorl
mov
adc
jg
xchg
ficomps
jp
add
mov
sbb
aad
cmp
outsl
outsb
cmp
cmpsb
mov
call
pop
mov
and
lret
xor
cld
jo
dec
xor
xor
ljmp
in
or
ja
call
pop
stos
fcoms
pop
pop
inc
sbb
push
sub
js
jmp
cmp
sbb
xchg
mov
mov
inc
sub
or
les
scas
scas
push
push
icebp
out
lds
outsb
aad
mov
and
test
or
out
fisttps
mov
call
pop
lahf
jp
test
pop
insb
nop
clc
call
jno
add
shrb
dec
mov
add
dec
pop
js
push
mov
inc
pop
jmp
frstors
cmp
fisubrs
pushf
lock
xchg
ljmp
jae
js
es
sbb
shr
adc
aad
rcr
mov
dec
aam
iret
pop
xor
aam
adc
mov
xchg
mov
rolb
repz
insl
cltd
shl
sti
xor
mov
rcrb
enter
hlt
hlt
sub
int
adc
lds
or
add
push
ret
testl
inc
xchg
rcll
std
test
push
lea
adc
clc
mov
std
enter
lds
sahf
add
iret
cmpsl
into
or
fwait
mov
stos
loop
lret
dec
pop
sar
mov
test
ljmp
push
mov
mov
test
mov
sub
xor
push
xchg
pop
pop
sub
pop
mov
mov
test
lods
jle
sbb
mov
test
outsb
mov
fcompl
fwait
add
adc
in
xorb
rcrl
leave
outsb
adc
xchg
stos
test
push
mov
dec
outsb
ret
push
inc
xchg
leave
movsb
inc
push
xchg
dec
enter
ret
cmc
jmp
popa
pop
sbb
add
imul
dec
sub
ret
add
xchg
mov
pop
mov
jmp
fldcw
shl
pop
jno
pop
lea
or
mov
sbb
mov
clc
push
inc
cmp
jnp
mov
dec
aad
mov
adc
mov
jnp
rcrb
push
and
test
repnz
into
dec
das
cmp
add
scas
mov
inc
leave
mov
push
mov
popf
lret
gs
jns
mov
fsubrl
lds
sub
mov
cli
jae
orl
pop
push
jns
sbb
popf
jl
aam
dec
fwait
leave
xor
pop
mov
xchg
jne
adc
fistps
mov
or
mov
add
fidivrl
and
fiadds
js
or
push
cmp
cmpsb
inc
lret
inc
lahf
rclb
add
loopne
dec
pop
or
orb
mov
adc
int3
repnz
aam
jae
jl
stos
sahf
cmp
jp
imul
dec
sbb
inc
mov
xor
sub
jbe
adc
leave
shrb
data16
aaa
dec
sub
idivl
test
in
push
sub
dec
xchg
cmp
jle
std
and
lret
or
fistps
pop
adc
test
fisttpll
stos
cli
push
insb
fisttps
loope
add
pushf
jmp
add
addl
xchg
scas
xchg
outsl
add
push
rolb
pop
dec
add
mov
or
rcrb
pop
adc
xchg
sbb
bnd
sub
mov
es
shlb
push
std
inc
bound
dec
cmpsl
dec
or
xchg
lahf
xchg
adc
dec
push
add
xor
daa
push
mov
rol
testl
jne
shlb
mov
movsl
subl
and
stos
and
sbb
mov
sbb
adc
js
jg
mov
cmpb
stos
mov
xor
fstl
sbb
bound
test
rorb
in
les
leave
or
iret
adc
ret
inc
stos
negb
xchg
fistl
cmp
and
push
pop
test
push
sub
jbe
loopne
pusha
or
jle
das
pop
popf
sbb
stc
lahf
popa
or
add
dec
test
mov
xor
push
push
xchg
std
push
push
xchg
push
mov
xchg
dec
jb
inc
inc
xchg
and
dec
jno
pop
dec
cwtl
or
push
sbb
sbb
push
fcmovnb
mov
inc
movsb
mov
je
xor
dec
lods
jecxz
jo
lahf
mov
das
mov
popa
jl
pop
movsl
loopne
cmp
inc
mov
repnz
cmovbe
or
sbb
xchg
imul
iret
cmpsl
dec
leave
int
xor
lcall
lret
shrb
insl
push
mov
sub
dec
inc
daa
xchg
clc
movl
icebp
sbb
cmpsl
stos
leave
inc
sbb
xor
jp
xchg
dec
rcr
adc
mov
pop
imul
mov
mov
mov
add
sub
andl
inc
sarl
or
dec
push
xchg
sub
test
mov
pushf
pop
mov
pop
call
cmpsb
jmp
std
cmp
popf
orl
mov
repz
lret
dec
inc
mov
inc
mov
push
cwtl
fdivs
mov
cltd
sahf
insl
mov
into
inc
add
arpl
fdivs
sbb
divl
mov
jecxz
roll
enter
cli
lods
push
dec
sbb
xchg
mov
sbb
ret
mov
pop
jg
push
sub
push
fnstenv
int3
mov
sbb
push
mov
out
jo
mov
mov
insb
or
rcrl
ret
fcomi
jbe
outsb
dec
push
mov
nop
imul
or
jns
xchg
sbb
push
insb
jae
mov
scas
adc
sti
cwtl
ss
xor
leave
or
clc
pop
dec
xchg
pop
mov
lods
int
cmp
push
fsubrs
push
out
or
push
sahf
sarl
cwtl
test
cmp
pop
mov
cwtl
xor
sbb
inc
cltd
fsubp
imul
aas
sbb
fistl
lret
sbb
imul
mov
lcall
repz
sub
sti
jbe
iret
pushf
mov
mov
ficoms
add
add
enter
mov
xchg
faddl
scas
xor
cli
cmp
lcall
popf
in
lods
cmpsb
test
test
cmp
popf
cmp
lret
jle
mov
shrl
mov
cltd
xchg
int
pop
adc
xchg
aad
mov
nop
dec
lods
stos
jne
xor
int
pop
adc
xor
xchg
mov
lret
jge
and
cmc
cmc
mov
xor
cmc
xor
orl
bound
fwait
push
dec
mov
sub
fsubs
fwait
jg
jge
scas
jno
adc
dec
hlt
or
mov
arpl
dec
mov
cltd
enter
es
mov
and
jae
mov
aas
lahf
inc
int
cmp
imul
mov
cmp
pop
loope
inc
dec
ret
lcall
dec
xor
mov
cmc
clc
sti
mov
sti
jae
arpl
inc
mov
xor
push
ljmp
dec
out
movsl
mov
test
cmp
mov
or
mov
xchg
arpl
loop
push
fimull
xor
pop
sbb
or
cmp
push
inc
imul
mov
push
xchg
out
cmpsb
fcoms
jb
lods
popa
cs
mov
mov
rcrl
aas
outsb
iret
mov
stc
loope
data16
icebp
xchg
dec
xchg
in
jae
shll
lret
push
popa
and
movl
inc
mov
inc
shll
cs
mov
adc
rcll
aam
xor
movsl
push
cld
push
push
push
leave
push
and
mov
sbb
arpl
sbb
cmp
fdivrl
or
inc
or
movl
push
sub
mov
andb
jl
xor
pop
das
push
mov
sbb
jle
adc
push
loop
mov
pop
dec
pop
dec
das
xchg
loopne
sbb
call
mov
dec
out
call
pop
dec
addr16
aad
push
mov
sub
adc
aad
xor
mov
push
test
pop
xor
ss
std
imul
shlb
inc
sbb
add
stc
fbld
je
adc
ds
and
test
test
pop
stc
sbb
cmc
sbb
xor
fistps
out
int3
loope
out
inc
faddl
cmpl
hlt
lret
push
ffreep
repnz
dec
mov
enter
ficoml
pop
aam
test
mov
xor
cld
jbe
add
sti
and
pop
jmp
lret
ret
arpl
aad
aaa
adc
cmp
and
inc
out
xor
dec
inc
dec
jns
lods
xor
mov
push
xor
push
fst
mov
jae
jae
xor
mov
xor
arpl
add
add
stos
jge
push
mov
mov
std
mov
js
jle
xchg
cli
loope
jp
cmp
lods
jg
shr
icebp
cltd
jle
mov
pusha
mov
andl
xchg
into
rorb
in
frstors
sbb
mov
mov
inc
stos
cmp
out
mov
dec
mov
and
xor
push
xchg
inc
shlb
push
and
ret
sti
jne
dec
ja
lods
inc
mov
jbe
jne
sbb
lods
cmp
movsl
dec
call
nop
scas
or
add
daa
cmp
jp
add
or
movsl
rcrl
imul
and
xchg
dec
and
sub
insl
sub
and
sbb
cmp
mov
in
mov
adc
ss
pop
sub
and
add
mov
mov
xchg
fwait
mov
push
cmp
jecxz
pop
iret
dec
and
stc
xor
clflush
mov
push
sbb
xorl
dec
outsb
inc
xor
arpl
leave
mov
pop
test
mov
dec
bound
dec
xlat
pop
cltd
and
lret
dec
jb
sbb
xchg
divb
and
mov
inc
pusha
adc
adc
mov
sub
mov
das
in
cmp
sbb
jl
daa
test
pop
loope
hlt
add
and
fstl
enter
mov
mov
xor
xor
sub
pusha
mov
adcl
or
sarb
mov
sub
or
push
call
mov
sarl
xor
ret
xorl
imul
xor
pop
clc
push
inc
rorl
ja
fnsave
test
push
add
pop
insl
sub
shl
push
ret
loop
insb
adc
push
addr16
call
sub
adc
inc
jmp
pop
imul
ljmp
mov
rol
cmp
pop
out
mov
fisubrs
inc
stos
adc
out
push
daa
xor
pop
add
ljmp
push
test
or
test
repz
inc
xor
je
insl
mov
into
repz
adc
dec
lahf
lret
in
lds
xor
pop
es
inc
cmp
add
ffree
test
jl
aaa
mov
pop
arpl
mov
outsl
cmpsb
adc
jb
mov
dec
fimuls
fcmovnb
or
enter
sub
ss
ret
int3
pop
pop
adc
lret
xchg
pop
lret
pop
push
ljmp
pop
mov
xchg
mov
mov
ljmp
hlt
repnz
sbb
outsb
jno
stc
loope
bound
jo
out
adc
into
adc
lahf
aad
cmc
jp
sbb
sub
mov
sbb
repz
jb
negl
cmpsb
or
testl
push
cmp
cmp
mov
int
mov
push
leave
push
cmp
mov
pop
mov
popa
rcrl
idivb
pop
mov
jno
pop
ds
mov
mov
in
lods
or
cld
pusha
mov
inc
xor
aaa
mov
push
arpl
sbb
jle
adc
movsl
ds
js
divl
insl
cmpsl
aas
test
out
mov
inc
jmp
pop
inc
popa
mov
pop
cs
mov
mov
mov
pop
cwtl
dec
xchg
cli
sbbb
data16
scas
xchg
xchg
das
jle
lods
jmp
mov
addb
repnz
sub
ret
ret
lcall
vcvtps2pd
xchg
mov
push
cmp
mov
and
cmp
sub
test
ret
pop
lods
or
les
fisubrs
outsb
shl
pop
es
dec
cmc
and
jo
ja
fidivl
jmp
movsl
and
test
jmp
mull
scas
out
ds
incb
cmc
adc
or
jp
cwtl
dec
or
inc
push
cmp
lds
push
dec
int3
xchg
jmp
mov
clc
push
sahf
mov
sub
xorl
cmp
movsl
gs
pop
rcrb
insl
or
movb
negb
int3
fimuls
popf
xchg
xchg
test
leave
jp
xor
out
and
cmc
cld
inc
adc
sub
pop
fcomps
push
sub
add
push
jle
pop
inc
jne
test
xor
lcall
stos
xor
lock
or
rolb
jns
sbb
ficomps
push
dec
stc
jmp
sub
arpl
jb
mov
test
jbe
fcomp
out
movsb
jge
xchg
call
scas
fbstp
js
xchg
fucomip
in
dec
ret
lcall
push
out
mov
std
out
jne
icebp
or
stc
jecxz
in
mov
add
push
xchg
nop
mov
aaa
mov
cmpl
lds
push
sbb
out
mov
in
sarl
ret
inc
cltd
mov
clc
gs
push
insl
jmp
insl
jg
push
imul
sub
test
mov
sarl
and
lahf
insb
aad
mov
movl
xchg
loopne
sub
mov
cmp
repz
lds
sub
push
sub
lds
adc
daa
enter
lods
in
pop
or
add
aaa
push
jge
xchg
jne
and
and
mov
jp
xor
cs
push
ret
daa
pop
pop
push
inc
std
std
call
sub
and
xlat
sahf
mov
pop
addr16
dec
outsl
lret
push
sub
add
lds
jbe
xchg
jmp
repz
and
jne
in
out
shll
jno
aaa
xor
aas
sti
loop
movsb
and
int
jae
xorb
fwait
pop
mov
testl
xchg
mov
sub
in
mov
sub
movsb
je
xchg
adc
addr16
ret
sahf
xor
aam
stc
in
jmp
gs
hlt
insb
lcall
ja
sub
add
and
mov
aad
movsb
in
add
push
or
mov
adc
xchg
rcrb
dec
sahf
stos
int3
inc
sub
fcoml
movsl
lret
cmc
xor
out
sub
mov
jo
dec
push
sub
mov
push
stos
sbb
add
xlat
and
or
xor
scas
shr
je
mov
addr16
jno
push
xor
inc
test
push
jl
xchg
jge
sbb
ds
icebp
sti
jmp
incb
sbb
jecxz
push
sti
mov
das
push
pop
call
pop
out
in
addr16
xchg
ljmp
mov
inc
dec
push
pop
into
xchg
fcmovnu
ljmp
push
scas
xor
jns
repnz
inc
repnz
in
vandps
dec
fisubrl
push
lock
mov
sub
jnp
xchg
cmc
test
sbb
xchg
jge
dec
lahf
in
bnd
xor
imul
das
rol
inc
sbb
add
fcomps
jbe
jecxz
outsl
jle
pop
dec
sub
ret
xlat
es
xchg
aas
pop
popf
dec
jb
stc
and
push
pop
inc
fcompl
pop
lcall
pop
in
pop
cmpsl
fstpl
jle
neg
jae
dec
in
sub
pop
or
adc
les
lods
cmpsl
jle
ljmp
jge
popf
cs
xor
or
adc
or
add
jnp
adc
out
inc
push
lcall
push
add
fs
or
inc
lds
stos
mov
insb
push
lea
xchg
mov
ljmp
push
dec
jp
xchg
and
push
jae
and
add
loop
arpl
jmp
test
rcrl
or
push
jge
std
lds
and
sbb
jno
out
cmp
fstps
cwtl
push
pop
out
call
jns
dec
mov
js
lcall
fcomps
iret
sub
lcall
inc
xor
xor
jnp
jb
iret
adc
mov
inc
stos
xor
cmp
lods
mov
or
push
add
cmp
repnz
aaa
sbb
mov
dec
push
mov
je
loop
mov
xor
xor
pop
add
push
std
jecxz
arpl
mov
pop
add
nop
xlat
sahf
test
aaa
pop
inc
jne
pusha
inc
in
jnp
ja
sbb
pop
jg
pop
push
mov
arpl
xlat
data16
push
inc
inc
adc
pushf
sti
mov
stos
mov
lods
and
cmp
movsb
mov
stc
lret
stc
or
inc
or
ja
cmpsb
and
imul
mov
sub
in
dec
cmpsl
outsb
xorl
sub
out
in
or
test
jne
lahf
das
outsl
jo
push
orb
mov
dec
pop
data16
push
and
mov
push
cmp
or
or
sbb
int
repnz
mov
xor
out
push
xchg
aas
jns
inc
cli
add
in
push
out
mov
push
pop
xor
sub
ficomps
cmpsl
fstl
arpl
or
enter
adc
in
mov
or
arpl
test
pop
cwtl
pop
cmp
movsb
add
push
sub
bound
sarb
mov
bound
dec
jmp
cld
xchg
mov
shlb
or
sbb
add
int
inc
pop
adc
pop
pop
add
dec
dec
adc
sbb
push
sbb
popa
insl
ret
jbe
ss
mov
inc
push
fisttps
push
pop
hlt
add
test
aad
pop
pop
ljmp
shll
push
leave
xchg
cmp
xchg
sbb
in
rcll
cmp
cld
das
mov
inc
cli
mov
rcrl
out
in
loopne
inc
xlat
popf
lock
adc
mov
pop
int3
xchg
sbb
in
in
mov
jno
sahf
scas
das
push
aas
push
xchg
gs
inc
sbb
popf
iret
pusha
push
mov
es
xor
jbe
ss
push
and
aam
mov
or
leave
loopne
mov
or
jl
jecxz
mov
ret
outsl
push
adc
push
inc
ret
mov
outsl
lcall
fs
in
inc
imul
push
adc
pop
pop
push
enter
jne
push
out
push
mov
loope
shlb
adc
lock
movsl
pop
ja
fcoms
dec
std
idivb
hlt
mov
xor
rorb
dec
pop
js
sbb
lret
push
lds
gs
lahf
cmp
mov
subl
and
sub
add
cli
pusha
in
cmp
loopne
scas
push
out
cmovge
xchg
in
sarl
loop
es
or
or
lods
mov
pop
fwait
dec
cmp
sbb
sahf
scas
pop
dec
cmp
or
mov
mov
push
jno
cmpsb
pop
nop
lods
outsb
inc
or
bound
push
pop
aaa
dec
popf
jnp
or
out
aas
movsl
inc
or
imul
add
xchg
pop
pop
jo
cmpsl
pusha
inc
aam
sbb
ja
ror
push
jne
aad
push
int
xchg
lret
movsl
ret
dec
andl
mov
and
or
movsb
insb
inc
out
mov
push
and
fcompl
scas
fnstcw
int
mov
sub
int3
pop
sbb
ja
sbb
dec
fs
ss
push
adc
mov
push
jno
daa
loop
sub
fildll
adc
cmc
pop
jge
aas
and
repnz
add
mov
inc
ret
ljmp
push
mov
mov
out
and
ljmp
insb
imul
and
mov
xor
adc
subl
push
loope
cld
arpl
shlb
xor
insl
lret
fimuls
xchg
push
mov
loop
cli
notl
ss
pop
sbb
inc
pop
movsb
pop
dec
in
dec
push
lahf
test
add
sbb
lcall
or
stos
out
nop
icebp
out
sti
or
imul
mov
lds
andb
in
mov
mov
mov
and
divl
insb
inc
arpl
mov
ja
pop
outsl
dec
pusha
daa
sbb
imul
pop
scas
xor
mov
test
and
leave
xchg
cmp
pop
jns
or
mov
xor
js
ja
aaa
adc
pop
jne
incb
mov
cmpsl
test
inc
push
in
mov
push
out
cmp
loopne,pn
sbb
push
adc
xor
insl
mov
xor
iret
sub
std
mov
mov
jo
dec
mov
insb
inc
lret
dec
fistps
fidivrl
mov
pop
cmpsb
push
aam
sub
lock
nop
mov
out
mov
jp
dec
enter
movsb
mov
adc
andb
decl
adc
int3
aad
jp
sbb
adc
cld
jg
or
imul
sub
dec
in
adc
loop
and
mov
pop
and
dec
push
jmp
adc
push
pop
call
sub
adc
mov
notb
or
cmpb
mov
rol
add
negb
lods
mov
mov
xchg
stc
mov
xchg
fsubs
mov
sti
inc
cli
mov
rcrl
out
in
loopne
inc
xlat
popf
lock
adc
mov
pop
int3
xchg
sbb
in
in
mov
jno
sahf
scas
das
push
aas
push
xchg
gs
inc
sbb
popf
iret
pusha
push
mov
es
xor
jbe
ss
xchg
ss
and
dec
cli
jle
pop
dec
fbstp
test
outsb
in
inc
or
mov
mov
jl
enter
mov
in
sub
fdivl
add
sbb
rclb
negl
gs
loopne
fs
cmp
jmp
test
dec
shlb
scas
test
adcb
fmull
or
sub
sbb
ljmp
mov
sub
add
test
push
stc
loope
jecxz
arpl
jne
lahf
das
outsl
jge
mov
and
push
andl
roll
jo
popl
add
cli
sbb
pusha
jbe
lea
jle
pop
dec
sub
dec
pusha
jmp
add
pop
sbb
sbb
lcall
sbb
xchg
int3
data16
jl
pop
cmpsl
aam
lds
fxtract
fisubs
rcrb
in
and
pop
nop
jbe
dec
pop
mov
fildll
cs
mov
out
xor
push
mov
in
push
cmp
std
jne
popf
dec
aaa
and
xorl
or
dec
ss
dec
cmp
inc
mov
aaa
shrl
mov
addr16
fs
insb
popa
fmulp
inc
xchg
int3
push
popa
in
adc
negb
xchg
cmp
loop
mov
in
pushf
notb
out
stos
xchg
ror
push
clc
daa
out
xchg
in
enter
movsb
jbe
outsl
in
xor
outsb
lods
cmp
orb
fisttps
jg
xor
test
xlat
add
sbb
std
decl
sub
std
push
cmp
add
sub
adc
sti
loopne
mov
scas
sahf
scas
das
pop
sub
rcr
push
fnstcw
jb
cmpps
mov
jp
or
data16
dec
lds
inc
jne
jge
xlat
sub
into
mov
pusha
pop
ss
jns
out
test
cld
and
stos
std
xor
fcoml
inc
lcall
inc
jp
in
gs
sbb
call
mov
add
mov
lahf
mov
addb
pushf
scas
scas
adc
push
mov
fs
cs
jge
pop
cs
cmp
push
es
ret
divb
mov
je
inc
mov
jmp
pop
and
mov
cmp
test
and
insl
and
push
sub
mov
std
lods
pop
pop
js
incl
inc
sub
outsl
jo
inc
jne
mov
dec
clc
sbb
je
rclb
out
add
call
pop
xchg
cmpsl
hlt
inc
test
pop
and
mov
adc
shlb
in
mov
jge
adc
aaa
mov
rol
mov
mov
loope
pushl
mov
mov
loope
push
inc
inc
mov
pushf
testl
shrb
add
aam
pop
ret
mov
sbb
in
ret
pusha
push
push
lahf
lds
mov
and
cmc
sub
dec
cld
sahf
mov
sub
push
rcrb
rcl
test
sub
sbb
xor
jmp
pop
xor
sbb
loop
sbb
int3
inc
jo
mov
dec
sub
push
icebp
xorb
std
rcrb
negl
adc
jl
inc
sub
jnp
out
jnp
push
lret
inc
mov
push
xchg
pop
mov
lods
dec
stos
das
fstpt
jno
cmp
repnz
js
gs
jns
out
dec
enter
lea
int3
inc
mov
shll
push
mov
or
out
es
fnstsw
inc
jbe
add
fisttpl
mov
pop
add
mov
les
pop
sub
mov
hlt
out
or
jo
daa
jg
sbb
cmpsb
movsb
jl
insl
xor
push
and
xchg
cmp
in
xor
mov
mov
jmp
mov
sub
mov
int
mov
mov
add
ljmp
push
mov
xor
mov
jns
sub
inc
in
xchg
sbb
dec
inc
testb
jo
mov
or
subl
outsl
pusha
shlb
nop
inc
and
out
or
cli
cltd
cmp
fstpl
jne
mov
inc
mov
jno
inc
stc
test
xlat
mov
cmc
cltd
inc
iret
and
or
sbb
pop
daa
popf
clc
popf
jbe
mov
loop
aas
aad
sub
pop
mov
jge
ret
jecxz
call
inc
inc
mov
movsb
jmp
jge
cmp
lret
xchg
fsubl
arpl
clc
movsb
into
pop
shl
and
add
adc
cld
jg
inc
mov
dec
test
arpl
push
mov
push
mov
loop
and
xor
stos
and
in
mov
cmpsl
jmp
test
push
pop
sbbb
pushf
testb
dec
scas
pop
out
in
xchg
ror
push
clc
daa
out
xchg
in
enter
test
outsl
in
repz
outsb
lods
aaa
push
ret
je
fisttps
jg
xor
test
xlat
add
sbb
std
decl
sub
sti
push
cmp
add
sub
adc
sti
loopne
mov
xor
dec
jno
aam
imul
add
mov
jo
loopne
jp
aaa
es
mov
push
xchg
movsb
mov
jnp
adc
js
ss
jns
out
test
cld
and
stos
std
xor
fcoml
inc
lcall
push
mov
stc
in
gs
sbb
call
mov
add
mov
lahf
mov
pushf
subl
scas
scas
adc
push
mov
fs
sbb
push
adc
pushf
dec
and
cmpsl
dec
and
xor
addl
sub
sbb
shrb
jbe
pop
dec
pop
jne
repz
xchg
add
mov
xchg
cmp
test
and
insl
and
push
sub
mov
std
lods
pop
pop
js
incl
inc
sub
outsl
jo
inc
jne
pop
xlat
insb
add
sbb
je
rclb
out
add
call
pop
xchg
cmpsl
jne
test
inc
and
mov
adc
shlb
in
mov
jb
dec
mov
jl
mov
es
xchg
test
jle
pop
dec
fistpll
or
iret
push
les
push
cmp
and
push
frstor
add
subl
cwtl
out
push
lcall
cmp
loopne
sbb
pop
ret
mov
sbb
in
ret
jle
push
lahf
and
popa
mov
and
cmc
sub
dec
cld
sahf
mov
sub
push
rclb
shll
pop
repnz
xor
jmp
scas
sub
xchg
pop
gs
out
cmpsl
dec
lods
shrl
lcall
fdivr
fdivrp
and
xchg
mov
cmc
jmp
js
out
fs
jnp
outsl
mov
dec
loope
aam
popf
jae
mov
jl
fs
cmp
aam
jne
dec
lods
pop
cmc
pop
mov
sbb
in
andb
sub
loope
out
int
inc
je
cmp
xchg
push
je
fadds
push
lods
popa
jns
adc
xor
fcomps
je
xchg
push
loopne
fstl
sbbb
cmp
bound
sarb
mov
insl
outsb
adc
pop
dec
jno
mov
sbb
es
shl
xor
mov
mov
jmp
mov
sub
mov
int
mov
mov
add
ljmp
push
mov
xor
xchg
sub
inc
in
xchg
sbb
dec
lcall
ja
sub
popl
sti
inc
ja
lahf
test
jl
dec
cli
sbb
xchg
loope
test
adc
loopne
sbb
push
inc
lock
mov
jno
inc
stc
test
xlat
mov
cmc
cltd
inc
iret
and
or
sbb
pop
daa
popf
loopne
jbe
or
loop
aas
aad
sub
pop
mov
jge
ret
jecxz
call
inc
inc
mov
movsb
jmp
jge
cmp
lret
xchg
fsubl
arpl
clc
movsb
into
pop
shl
icebp
or
mov
shl
jl
or
mov
add
in
cmpsb
sbb
lret
fwait
test
push
xor
popa
int3
xor
push
jmp
mov
pop
repz
in
adc
ljmp
imul
push
std
lock
inc
rolb
outsl
jo
push
orb
mov
hlt
leave
loop
add
mov
and
mov
adc
pusha
sti
sbb
int
ljmp
adc
xchg
aas
jle
inc
cld
add
decl
mov
push
pop
cmp
xor
cmpsl
push
daa
lea
jno
push
sbb
repnz
xor
popa
and
xor
ret
arpl
pop
and
push
xor
inc
mov
out
cmp
ret
pop
push
jle
inc
bound
adc
xchg
inc
imul
ficoml
pop
or
inc
sub
jns
mov
hlt
sub
mov
lods
push
mov
dec
sbb
push
sbb
popa
insl
ret
ret
adc
xor
jge
ror
push
cmpsl
push
push
adc
cmp
lods
ss
lea
aaa
dec
push
jne
hlt
jle
pop
jge
cli
aam
repnz
aam
loop
jno
mov
jno,pt
mov
arpl
mov
mov
fbld
mov
adcl
pop
mov
cmpsl
dec
daa
shll
pop
cmpsb
or
and
xor
and
sub
mov
daa
mov
inc
subb
mov
add
mov
out
sub
push
stos
ds
aas
ja
sti
lock
mov
adc
sbb
add
ss
and
mov
fiadds
mov
mov
xchg
mov
mov
push
bnd
loope
hlt
jp
jae
ljmp
mov
add
inc
pop
int3
mov
mov
push
adc
pop
movsl
sbb
jl
fsts
lcall
mov
pop
mov
or
xor
dec
and
scas
inc
xor
cmp
icebp
or
dec
std
dec
mov
jne
js
andb
adc
xor
imul
mov
sarb
iret
cli
xor
lds
jg
or
cmp
xor
push
cmpsl
jo
imul
sbb
in
aam
fcompl
cmp
push
hlt
imul
dec
jne
and
adc
inc
sub
fmuls
jbe
movsl
or
pop
fsts
into
push
pop
loopne
cmp
jae
mov
arpl
lahf
mov
mov
iret
xchg
and
and
pop
subb
pop
adc
jne
les
push
clc
aaa
shlb
cmp
int
mov
sbbl
pop
xor
pop
jmp
push
sbb
int
mov
mov
dec
les
fistl
xchg
ja
mov
fcmovnbe
ret
mov
loope
sar
push
mov
out
js
pop
xchg
decb
mov
mov
js
sti
add
rclb
fsubrs
sbb
rcll
int3
movsl
ret
test
push
fdivrs
and
iret
cmc
insl
pop
mov
jbe
out
cmp
mov
inc
push
adc
hlt
xor
xchg
sub
cmpsl
stos
jge
movsb
popf
in
inc
mov
xchg
dec
mov
jo
add
xorb
mov
dec
repz
enter
hlt
add
aas
jmp
add
xor
fildll
std
fwait
xchg
mov
add
filds
or
mov
jno
dec
push
fdivl
push
mov
xor
jge
mov
mov
ljmp
sbb
inc
in
in
popl
stc
jo
imul
add
jno
mov
mov
mov
or
jbe
gs
cwtl
movsb
fcmovnb
push
icebp
popf
cltd
in
inc
shlb
or
xor
pushl
inc
mov
dec
fsubs
insl
repnz
ret
shl
push
popf
inc
fldenv
xlat
das
ret
xor
push
sub
mov
enter
jl
mov
stos
xchg
mov
aam
push
aaa
into
pop
lea
imulb
repnz
or
jmp
ret
inc
jmp
mov
add
sbb
add
addb
std
mov
push
in
fldenv
and
ljmp
test
stos
fidivrs
jae
fwait
mov
cmp
adc
inc
mov
ds
xchg
rorl
addr16
rcrl
jmp
mov
movsb
mov
icebp
sub
cmp
fmul
xor
neg
add
andl
xchg
pop
lcall
out
sub
call
movsb
cli
pop
cmpsb
enter
cmpsl
ret
fld1
gs
jg
aas
sti
sti
popa
and
movsl
or
test
rolb
rclb
cmpsl
push
or
sub
sahf
insl
stos
hlt
push
lock
call
jns
pop
mov
mov
call
dec
lahf
in
jnp
stos
xor
ret
mov
add
dec
xchg
fwait
lret
movsl
mov
jecxz
fcompl
push
add
push
js
xchg
dec
jns
test
movsb
or
mov
inc
ds
push
popf
adc
xchg
cmp
sti
test
sbb
push
pop
in
push
and
sub
pop
mov
pop
cwtl
lcall
mov
jge
fcmovnu
fcmovnbe
sti
push
or
mov
or
shl
lds
cmp
std
lock
rol
sub
stc
adc
adc
mov
lods
cli
xchg
and
scas
pop
or
decb
push
iret
cli
lea
fildl
pop
je
mov
mov
mov
int
fs
pusha
push
xor
fidivs
and
jl
xor
arpl
mov
idivb
aas
jae
xlat
out
jno
fisubl
inc
xor
hlt
mov
mov
mov
sub
pop
fdiv
mov
jnp
lret
movsl
mov
mov
or
jo
xchg
mov
mov
outsl
mov
fnstsw
pop
xor
dec
out
pop
dec
in
jg
loope
shl
and
inc
push
lret
dec
out
les
add
scas
jp
stos
insl
mov
xchg
jb
lret
jp
push
xchg
jb
push
jle
jbe
scas
es
sti
out
xor
fstpl
jno
jecxz
std
jno
adc
add
mov
add
fidivrl
and
add
ljmp
mov
mov
cmp
sub
jle
add
add
or
and
adc
aam
or
data16
into
enter
fs
xchg
and
cmpb
xor
mov
xor
inc
popa
push
inc
loope
leave
iret
xor
sarl
add
mov
mov
add
mov
sbb
cld
inc
cmp
push
pop
cmp
sahf
dec
cmp
push
imulb
xchg
in
scas
mov
les
sti
xor
xlat
adc
inc
sbb
pop
cmp
or
lret
cmpsl
push
into
fsubr
mov
inc
ret
ja
inc
cmp
xchg
xchg
sub
push
adc
and
fs
hlt
js
popf
add
xchg
xor
or
and
sbb
add
das
xchg
xor
dec
mov
mov
rclb
andl
inc
dec
les
pop
jb
adc
cmpsb
inc
cltd
aaa
mov
adc
or
mov
jnp
jo
push
jle
leave
mov
test
adc
out
adc
jmp
jbe
cmp
ret
adc
cmpb
imul
ds
mov
mov
sub
mov
adc
cmp
cmp
jl
cwtl
lret
pop
push
loope
inc
scas
xchg
xchg
push
mov
movsb
subb
lods
pop
scas
mov
jbe
fs
cmp
negb
les
inc
xor
push
or
outsb
insl
mov
mov
xchg
sub
sub
fcoms
mov
clc
mov
in
js
shl
push
into
xor
sahf
mov
inc
aaa
adc
ret
inc
popf
test
xchg
xor
fisttps
ss
out
call
movsb
rep
jmp
ret
rolb
popf
in
rcl
out
lcall
adc
int3
mov
add
add
jb
dec
shl
dec
daa
jmp
mov
jae
xor
mov
add
push
lea
add
fistpll
cmp
jl
xor
push
shl
push
sbb
cmp
dec
lock
cli
cmp
push
cmpsl
mov
in
popa
cmp
loopne
dec
cmp
divb
mov
dec
cmp
sbb
icebp
dec
mov
and
cs
mov
pop
lds
push
jns
aam
inc
out
aam
add
mov
test
dec
lods
inc
inc
dec
ret
pusha
mov
jmp
scas
lret
loop
xchg
and
mov
mov
mov
xchg
xchg
movsl
mov
xlat
adc
cltd
push
pop
xchg
xchg
pusha
inc
pop
xor
cmpsl
imul
fwait
lea
dec
push
lods
jno
in
sti
xor
jb
and
dec
add
fwait
sub
push
push
fidivs
imul
mov
cmp
movsb
loope
inc
dec
fisttpl
loopne
std
iret
leave
lahf
jmp
mov
or
pop
aam
ss
xor
imul
vpmacsdql
cld
aaa
fldt
push
jmp
les
testl
sub
scas
cmp
daa
jnp
repz
or
lret
mov
cmp
add
daa
nopl
daa
sub
mov
pop
lock
dec
pop
dec
sub
push
cmp
mov
jge,pn
sub
sbb
add
data16
and
add
add
shl
mov
push
push
icebp
xor
pop
sub
mov
jae
xchg
andl
mov
sub
pop
jb
fnsave
inc
dec
dec
insb
aaa
dec
push
pusha
test
sub
inc
lods
sbb
sub
lahf
push
sub
repz
xor
or
xchg
imulb
repnz
in
ljmp
pop
mov
push
dec
cmpsl
fistpl
enter
jnp
ret
sbb
inc
pop
sbb
cmp
fistl
push
test
fidivl
mov
stos
mov
sbb
push
fbstp
mov
into
stos
push
add
xchg
adc
fstps
mov
and
subb
fcmovnbe
or
xchg
pop
dec
mov
xchg
xchg
xchg
xchg
movsl
pushf
rcr
jmp
mov
cltd
ret
sub
std
cmp
jle
aas
mov
sarb
push
cwtl
mov
mov
cltd
pop
dec
mov
cmc
sbbl
fcoms
push
adcb
pop
add
mov
push
sub
mov
sbb
mov
aaa
and
imul
cltd
mov
daa
adc
and
lods
cmc
adc
les
mov
call
mov
sbb
js
mov
ss
sti
mov
out
pop
enter
dec
pop
cmpsl
mov
insb
adc
test
jo
cmp
jmp
lds
inc
out
dec
mov
jae
inc
loopne
jae
out
and
sbbb
push
xchg
fcmovbe
js
xlat
cmp
or
inc
and
movsw
sbb
xchg
fmulp
mov
clc
cmp
mov
addl
mov
fcomip
jo
adcl
inc
in
inc
sbb
adc
in
inc
xchg
popf
fidivrl
loopne
inc
cwtl
dec
out
pushf
push
scas
movsl
ret
dec
jne
adc
inc
stos
push
ss
xlat
lea
xor
mov
xchg
cmp
xchg
enter
dec
push
or
fimuls
dec
jmp
mov
xorb
sub
pop
stos
enter
mov
pop
add
pop
xchg
push
jne
mov
add
aam
jo
mov
or
popa
xchg
dec
sbb
iret
cltd
cmp
ret
ds
or
test
test
sbb
dec
adcb
sahf
fidivs
mov
jmp
pop
xor
xor
test
icebp
adc
test
loopne
cmp
jle
pop
stos
xchg
xchg
jns
addr16
sub
or
and
pop
les
pushf
xchg
push
js
lret
add
push
mov
mov
jmp
pop
mov
sti
jnp
rcr
mov
leave
repnz
lret
enter
test
pusha
stos
aam
int3
and
inc
and
pop
pop
shrb
sbb
sub
out
insl
dec
pop
sub
nop
jno
inc
enter
mov
xchg
pushf
imul
push
ja
push
idivl
outsb
gs
mov
xor
ffreep
adc
add
shr
pop
lret
repz
insl
scas
decl
mov
dec
cld
hlt
frstor
xor
and
scas
orb
fists
mov
xchg
cmp
mov
jae
cmp
roll
movsl
lds
xlat
arpl
sub
insl
cmp
xchg
mov
and
or
ja
test
test
stos
xchg
cmpl
mov
pop
xchg
push
pop
rorl
xchg
shr
mov
nop
js
jg
and
sbb
arpl
add
jo
adc
add
adc
dec
push
negb
popf
in
es
or
xchg
mov
mov
jb
mov
aad
stos
testl
inc
shl
mov
jne
mov
icebp
cltd
xchg
or
inc
inc
mov
push
pop
lahf
out
mov
pop
cmpsb
popa
loopne
inc
xor
sti
mov
jns
mov
pop
enter
mov
mov
sbb
cltd
sbb
repz
clc
mov
push
jns
jmp
mov
sbb
pop
in
aaa
xor
in
int3
leave
lods
stos
push
bound
sub
cmp
stos
mov
scas
xchg
cmp
dec
arpl
add
mov
inc
pop
fsubl
dec
lods
fsubrl
cmp
inc
mov
mov
or
lahf
enter
jmp
and
or
sub
in
and
sbb
and
inc
stos
cmp
adc
cs
jae
or
pop
icebp
jle
sbb
inc
test
data16
out
sub
or
push
shlb
leave
jp
jae
inc
sbb
les
jle
mov
mov
xchg
dec
mov
add
movb
cwtl
jmp
hlt
test
pop
lahf
fdivrl
and
lds
scas
dec
add
xor
or
hlt
ret
out
push
insb
loop
mov
lcall
mov
test
inc
mov
fisttpll
iret
jge
stos
sub
pushf
xor
clc
jo
and
pop
das
jg
push
cmp
loop
imul
or
pop
fsubl
dec
lods
fsubrl
cmp
adc
or
call
bnd
or
neg
lret
jmp
xchg
sbb
das
pushf
and
sbb
add
cld
push
xor
jmp
out
inc
fldt
push
push
pop
test
and
push
mov
in
and
pop
sarb
lock
in
and
cmp
jno
out
test
mov
in
jno
xlat
fwait
mov
dec
sbb
xor
pop
push
insl
cmpsb
sub
lods
repz
rclb
jl
hlt
push
stc
fists
inc
inc
push
sub
jmp
sbb
out
hlt
cmp
push
shll
in
cmp
fst
test
lcall
mov
filds
mov
fisubs
insb
push
dec
mov
into
stos
inc
mov
xchg
pop
movsl
lea
mov
loopne
xchg
stos
shlb
mov
fsubp
push
cmp
push
jmp
popf
lods
add
rorb
adc
and
popf
scas
jnp
leave
ss
sahf
and
idivl
addb
add
js
cmpl
rorb
mov
outsl
scas
xlat
insb
imul
pop
adc
pop
mov
and
enter
or
jecxz
jb
cwtl
push
add
lea
xor
call
ja
pop
out
call
pop
mov
xchg
in
mov
mov
xchg
lahf
lret
in
aad
mov
dec
mov
js
sbb
fwait
movsb
int
mov
fmulp
movsl
ret
int
out
mov
jbe
mov
push
movsl
outsb
mov
lret
mov
dec
xlat
out
cmp
ljmp
sti
stc
cli
jecxz
pop
push
jl
mov
sub
inc
pop
lret
mov
mov
mov
fistl
pop
hlt
jecxz
nop
cs
push
ja
rcrl
loope
test
movsl
cmc
cmp
xchg
test
je
js
roll
cmp
icebp
dec
aaa
lea
stc
cli
fmuls
fwait
mov
cmp
data16
lahf
pop
dec
iret
repz
cmp
test
and
imull
jp
fcomps
imulb
mov
mov
cmp
or
mov
popw
lahf
pop
out
in
inc
lock
xor
mov
cmp
jp
cmp
push
sti
shlb
orb
rcl
xchg
jp
imul
enter
xchg
jge
sbb
fistpll
incb
cld
mov
fisubl
xor
add
push
push
test
add
jl
aad
xchg
mov
fstl
cmp
adc
pusha
mov
jmp
pop
or
or
ja
sarb
test
mov
test
rorl
shrl
sub
mov
mov
cmpsl
or
movsb
mov
lahf
mov
out
call
xlat
dec
ficomps
out
out
cmp
sahf
mov
enter
dec
push
add
jo
and
cmpsl
xchg
mov
push
xchg
in
xor
mov
lea
aad
lret
rcrl
in
mov
sub
mov
out
int3
ret
mov
xchg
in
or
dec
lahf
dec
scas
pushf
push
es
fisubrl
nop
in
das
les
pop
mov
test
mov
enter
xchg
pop
mov
popf
sbb
test
or
andl
scas
xchg
lcall
test
sbb
cmp
popf
cmpsb
inc
mov
jmp
sub
cli
js
jg
jg
mov
iret
pop
popf
in
idivl
dec
add
pop
add
pop
mov
mov
and
movsl
cli
jg
test
push
test
push
insl
fwait
dec
jno
fwait
out
cmp
sarb
inc
cmp
jne
fwait
push
xchg
lret
mov
adc
jge
mov
push
or
sub
ret
mov
es
dec
lock
mov
pop
inc
mov
out
jno
push
pop
and
mov
ficoms
inc
fcomps
sbb
inc
enter
mov
mov
cmp
loop
clc
movsl
mov
mov
mov
xlat
push
or
andb
mulb
dec
lcall
lahf
movsb
and
js
data16
cmp
dec
scas
cli
insb
mov
stos
gs
gs
ljmp
int3
pusha
stos
sbb
jle
leave
cmp
enter
xchg
dec
xchg
mov
daa
rcrb
clc
stos
sbb
mov
mov
pop
in
dec
movsl
mov
pop
xchg
dec
jae
sbb
cmp
xchg
push
insl
jecxz
mov
ss
cmc
mov
cltd
enter
mov
loop
inc
mov
daa
ds
test
in
inc
test
mov
inc
mov
adc
pop
pop
and
cmp
sub
cmc
ficoml
pop
add
rol
stos
clc
sti
mov
imul
testl
mov
cmp
aam
or
and
iret
fs
inc
loop
xchg
hlt
sub
mov
in
dec
cwtl
dec
repnz
les
inc
mov
cltd
stos
push
mov
adc
add
xchg
test
popa
in
in
lret
jne
cmp
xchg
cmpsl
int3
enter
pop
dec
lods
movb
ret
test
jle
clc
lret
cs
stc
and
push
popf
scas
rolb
mov
mov
dec
mov
add
fmuls
jge
addr16
sbb
cmp
or
ret
xchg
and
sbb
ret
pop
adc
or
xor
mulb
cwtl
or
movsl
dec
pop
or
dec
pop
pop
mov
lahf
inc
mov
mov
movsb
jns
test
int
cmp
sti
fcoml
inc
cwtl
sbb
pop
add
push
dec
ret
ds
ret
sub
dec
or
mov
cld
adc
andb
cld
inc
jne
mov
movsl
mov
jge
fsubrl
lcall
push
clc
scas
jb
dec
mov
push
sub
jae
inc
cli
xor
std
les
cld
mov
fidivl
ret
adc
mov
shlb
std
xchg
stos
inc
xchg
imul
mov
int3
ficoms
data16
cltd
sub
lahf
ficoms
dec
mov
cmc
jecxz
mov
dec
inc
mov
mov
xor
mov
insl
push
mov
mov
out
clc
xor
mov
adcl
xor
mov
lahf
or
jmp
fptan
aas
leave
mov
mov
int
notl
mov
cltd
ds
xchg
push
dec
inc
mov
aam
movsb
cmp
fstpl
cmpsl
mov
adc
test
xor
insb
cmp
mov
sub
mov
leave
fsubrl
aad
sbb
rcrb
cli
sbb
push
mov
jb
xor
pop
mov
push
push
adc
jne
jae
mov
xchg
jp
mov
push
jle
loope
xchg
mov
ret
fsubrl
mov
pop
adcb
aaa
bound
xchg
mov
adc
pusha
pop
jecxz
mov
in
sbb
cmp
mov
or
cwtl
cmp
repz
sbb
mov
jae
push
fcoms
aam
push
test
mov
pop
jae
inc
insl
jmp
mov
fbld
mov
sbb
lea
and
rcll
ret
adc
inc
inc
vphsubbw
jb
dec
dec
xchg
xchg
dec
jo
sbb
popa
mov
shl
mov
rcrl
mov
bound
sti
pusha
pushf
pop
cltd
push
lahf
leave
jge
lcall
xor
pop
xor
or
sbb
jne
mov
int3
inc
mov
test
scas
hlt
or
sbb
xor
cmc
mov
in
mov
jb
or
fiaddl
push
push
mov
mov
pop
subb
cmp
mov
mov
rcrb
jnp
dec
pop
or
popf
jp
mov
jno
dec
and
add
cld
add
lods
and
imul
and
adc
popf
mov
sbb
mov
aam
xchg
add
xchg
insl
inc
sbb
inc
fbld
pop
cwtl
xor
dec
stos
dec
sub
aaa
and
repnz
gs
fmuls
hlt
sub
hlt
dec
lahf
test
lcall
dec
and
mov
std
fwait
pop
pop
dec
stos
sub
push
xchg
loopne
pop
xor
mov
adc
add
xchg
loop
fcompl
ret
ror
push
adc
and
jne
inc
in
int3
pop
sbb
push
dec
inc
mov
mov
or
xchg
daa
xchg
sbb
addr16
js
cmp
lret
lea
pop
or
lds
es
movsl
cwtl
push
ljmp
std
out
add
pop
and
pushf
in
sbb
sub
or
enter
arpl
jo
es
sarl
cmp
add
fwait
jmp
sub
int3
pusha
and
test
subl
xor
dec
push
insl
insl
out
xchg
in
faddl
push
loope
push
lods
xchg
leave
arpl
ss
inc
and
or
sbbl
cmp
cmp
inc
movsl
popf
push
pop
pop
dec
or
and
das
add
add
push
jae
in
mov
cmp
ss
mov
fsubrl
mov
test
pushf
dec
xorb
or
sahf
pop
pushf
rcl
pop
int
push
push
cli
loopne
mov
stc
cli
xor
xchg
ret
jl
mov
mov
fldl
or
inc
cmpsb
enter
lcall
pop
lahf
and
mov
frstor
mov
push
or
and
lds
orl
movsl
das
sbb
into
cmovge
rcr
in
dec
cli
jge
cli
fadds
mov
cmp
mov
mov
jle
sahf
or
test
jg
pop
call
xchg
mov
test
xchg
mov
add
int
cmp
movsb
ds
test
pop
and
mov
mov
add
xchg
jns
jbe
aam
hlt
out
jb
pusha
xor
mov
inc
adc
jp
jecxz
adc
frstor
xor
rcll
mov
stos
enter
sbb
jbe
test
add
dec
mov
test
lret
test
cltd
mov
test
or
pop
mov
leave
xchg
fildl
mov
mov
lcall
mov
lret
xchg
mov
pop
sbb
add
pop
jo
sahf
add
je
add
lret
cmpsl
aad
jp
movsl
clc
data16
push
js
add
jbe
negb
in
leave
stos
xchg
cmpsl
ret
lds
lods
mov
movsl
loopne
mov
sbb
inc
ret
add
repnz
xor
pop
sub
js
pop
aad
mov
jecxz
pop
xor
imul
aas
mov
loopne
clc
push
inc
xor
in
aam
pop
cmp
add
test
aaa
adc
movsb
fldt
pop
stos
push
lods
xchg
sub
cld
jg
xor
push
cltd
sbb
daa
movsb
jmp
xlat
push
lods
mov
in
mov
rcrl
sub
pop
add
push
fcmovbe
xor
xchg
js
inc
outsl
subb
ret
dec
jb
sub
mov
push
pop
inc
ljmp
xchg
filds
xchg
xchg
test
mov
imul
out
xchg
imul
mov
fnstsw
ror
les
or
nop
and
orl
shrl
pop
or
mov
mov
fsub
in
addb
mov
mov
das
ljmp
idivl
jge
pop
insb
lea
es
add
mov
mov
sbb
mov
in
ja
lock
cmp
cmc
push
ret
imul
sub
sbb
pop
lret
mov
jns
addr16
inc
or
mov
dec
sar
sub
push
repz
mov
bound
and
hlt
test
fs
push
fcmovnu
call
xchg
stos
faddl
mov
push
nop
push
push
or
mov
jno
aad
jp
pushf
xor
xchg
gs
sti
and
and
lret
loopne
cmp
aad
inc
xchg
outsl
mov
cmp
fs
inc
push
jns
mov
addr16
sub
fisubs
adc
in
sub
mov
xchg
ds
mov
xor
test
xchg
jne
insl
jo
jmp
stos
aad
imul
pop
test
push
jle
add
xchg
xor
popf
xchg
cmc
pop
pop
dec
negl
clc
sti
fisttpl
pop
cmp
jmp
push
es
imul
xlat
les
sbb
fwait
jno
mov
cmp
jne
sub
aaa
stos
dec
int3
pop
scas
mov
adc
mov
or
insl
ja
lods
mov
pop
sub
jno
fsubrl
mov
dec
cmpsl
sahf
push
and
jb
loopne
push
jecxz
or
xchg
dec
data16
leave
xchg
fsubrl
jecxz
mov
push
add
cld
loop
movsb
test
pop
push
int3
xchg
or
ret
adc
cmp
push
insb
xor
push
mov
adc
and
jae
hlt
xlat
stos
mov
pop
xor
sti
shlb
imul
stc
jbe
sahf
out
mov
aas
sub
mov
daa
adc
mov
popa
mov
mov
aam
in
cmp
cmp
add
ja
test
mov
xchg
jne
shll
test
push
jp
inc
jae
je
mov
out
cmc
into
xor
ss
and
mov
xchg
xchg
mov
es
xor
lds
repnz
inc
adc
test
int
into
push
out
xchg
dec
xchg
adc
xor
fwait
mov
mov
dec
fcmovne
nop
fldt
aad
cmpsb
push
mov
loopne
sbb
push
or
pushf
fisttps
scas
jg
pop
inc
cmc
jnp
pop
addb
inc
inc
sbb
fisubs
lahf
pop
mov
push
pop
push
dec
loopne
push
sub
aad
ja
cmpl
stc
mov
das
outsl
pusha
xor
mov
sbb
mov
cmc
or
sbb
inc
mov
adc
fcoms
xchg
repz
fnstenv
cwtl
jbe
pop
add
es
repz
mov
pop
cmp
sar
loop
cmp
jmp
jns
adc
ret
int
cmpsb
mov
cmp
test
movsb
leave
pop
adc
adc
pop
shll
cli
in
stc
inc
shll
sbb
icebp
adc
cmpb
dec
lea
mov
subb
nop
sbb
rclb
shl
adc
and
pop
mov
lds
hlt
movsl
lods
push
jg
lret
pop
aaa
sahf
sub
andl
dec
push
fwait
int
push
je
aam
pop
xor
xchg
mov
jle
sub
sahf
ret
jns
test
pop
jle
clc
les
std
xchg
sti
out
inc
mov
lods
xchg
add
adc
dec
nop
xchg
xchg
inc
jae
imul
push
adc
test
bound
fistl
mov
sub
inc
in
or
dec
das
je
in
flds
test
bnd
and
std
cmc
jmp
jbe
xchg
and
push
xor
icebp
lret
xchg
mov
out
cmc
and
test
fwait
cmp
jg
fidivs
dec
into
pop
sbbl
insl
cmp
int
jge
ret
jne
inc
xchg
cvtpi2ps
add
jae
mov
in
sub
and
fsub
fistps
pop
mov
and
cmp
ret
in
negl
je
int3
sti
movsb
cld
add
je
jo
jno
sbb
inc
fsubs
fstl
mov
xchg
cmpsl
cltd
lods
into
xor
mov
lds
je
sbb
add
dec
insb
outsl
outsb
ret
jb
sub
pop
jns
les
mov
adc
xchg
jecxz
loope
rcr
mov
jmp
jae
orb
sarb
pop
clc
jbe
mov
or
mov
push
inc
cmp
stos
clc
in
cltd
aad
mov
xchg
fwait
aaa
lcall
add
lods
xchg
sub
cld
dec
cmp
fstp
dec
cmp
test
arpl
mov
movsb
aaa
xor
in
pop
pop
jno
jl
mov
stos
cld
cmp
rcr
lea
add
enter
addr16
cmpsl
test
pop
dec
mov
inc
ficomps
xchg
lods
mov
and
inc
cltd
xchg
das
and
xor
dec
push
cmp
xchg
daa
addb
es
les
sbb
aas
pop
fldl
cmc
aad
add
jo
mov
gs
mov
rcr
inc
andl
test
pop
mov
inc
sub
mov
mov
sti
xchg
fildl
sub
cmp
mov
jge
cmp
sahf
divl
or
out
cmc
jne
lea
inc
in
pop
lds
push
mov
add
pop
mov
xchg
imul
rorb
leave
fdivrl
in
mov
das
movsb
lds
nop
jg
pop
jmp
clc
sti
mov
jmp
arpl
ret
pop
dec
out
pop
in
imul
add
adc
xchg
inc
stos
cmpsl
and
push
jp
jb,pn
addr16
aad
pop
inc
cmpsl
test
xchg
lods
push
mov
adc
js
cli
nop
stos
adc
jo
mov
mov
xchg
sbb
addb
adc
pop
mov
mov
cwtl
dec
and
mov
nop
lahf
mov
pop
mov
outsb
dec
pushf
inc
lahf
rcr
imul
jo
rolb
sub
sti
addl
pop
jmp
push
pop
fisubrs
mov
sbb
pop
adc
popa
mov
inc
mov
mov
loopne
and
adc
pusha
lahf
and
jo
stc
test
and
cld
fnstcw
add
dec
into
xor
mov
cli
xlat
lret
sub
in
das
pop
ja
nop
int3
pop
scas
mov
out
stos
pusha
std
stos
dec
jle
rcr
fidivrl
test
outsb
inc
arpl
mov
or
xchg
or
mov
adc
scas
rcll
mov
mov
jmp
push
xchg
jge
outsb
js
stos
inc
mov
xor
mov
inc
and
int
xor
call
xchg
jge
sub
enter
and
cmp
mov
rorb
mov
lahf
pop
iret
jb
cmpsb
sub
cmpsl
jns
lods
mov
stc
mov
push
mov
inc
inc
mov
xchg
stos
bound
add
popa
mov
cltd
sahf
lds
sarb
rorl
mov
aas
loopne
fisubs
adc
push
add
mov
movl
mov
dec
ss
jl
in
dec
mov
xchg
fcmove
pop
mov
push
xor
xchg
mov
pop
inc
jae
fldt
jnp
pop
icebp
add
sbb
mov
mov
and
scas
fcmovnb
insl
mov
fisttpll
shrb
iret
aam
xor
aad
aad
pop
mov
sbb
js
sbb
leave
repz
mov
aas
cmpsl
aaa
cwtl
hlt
cld
jle
mov
push
dec
mov
lock
mov
test
mov
sub
mov
xchg
xor
mov
mov
int
adc
xor
ljmp
jns
sub
in
lea
jle
imul
pop
mov
shl
in
mov
mov
mov
scas
ret
loopne
pop
pop
sbbl
adcl
add
lods
mov
iret
jae
sbb
scas
test
es
sahf
mov
adc
dec
test
xchg
xchg
fildll
jae
cmpsb
push
dec
mov
scas
and
in
test
inc
sub
add
push
push
inc
cmpsl
mov
mov
fldl
push
lock
movsb
xchg
pop
lret
xchg
jle
mov
imul
scas
mov
cld
fisubs
jo
testb
and
scas
mov
subb
inc
iret
popa
or
adc
mov
mov
jmp
clc
jecxz
mov
or
or
jp
out
ffreep
mov
xor
or
mov
pop
adc
cmc
fxch
bound
fistl
adc
and
pop
xorb
fucomip
repz
sbb
jecxz
mov
fldt
stos
adc
pop
lahf
and
paddb
test
pushf
fstps
mov
sbb
xchg
cmp
ljmp
outsl
cmpsl
je
or
shl
lock
cmp
xchg
fldcw
or
cltd
pusha
mov
add
call
lods
movb
add
inc
xchg
mov
mov
mov
push
add
leave
pop
jle
js
rcrb
leave
movl
mov
and
xchg
stc
out
push
test
rcr
movsb
inc
shr
mov
ret
sahf
xchg
test
mov
enter
dec
test
mov
dec
sbb
test
adc
fsubr
mov
mov
andl
mov
mov
ret
loopne
dec
mov
fcompl
ds
dec
lahf
lret
mov
out
cltd
sti
push
mov
mov
fdivrs
inc
sub
mov
lcall
lret
sub
xlat
mov
pop
sbb
test
hlt
push
dec
pop
lret
fists
inc
fcompl
inc
ja
sti
sub
xor
jmp
dec
mov
data16
cmp
jae
divl
xchg
jns
lret
popf
xchg
imul
cwtl
xchg
adc
lret
test
enter
lahf
adc
movb
xor
sub
cmc
bnd
jl
test
icebp
dec
adc
jb
sbb
inc
sub
imul
repz
les
xlat
push
cmpsb
lds
lcall
lret
bound
out
mov
pop
xor
test
xchg
lea
fidivrs
mov
pop
ss
cld
add
icebp
fsubs
ds
mov
jle
mov
jecxz
mov
mov
push
test
sub
jbe
js
pushf
inc
dec
and
mov
arpl
mov
jno
mov
repnz
mov
lds
and
lret
popf
push
mov
mov
fadds
mov
adc
cmpsb
jl
and
jns
sahf
pop
js
cmp
icebp
cld
mov
push
dec
das
lahf
fnstsw
hlt
sub
jnp
cld
or
pop
sub
mov
out
mov
and
xor
lock
lret
cmp
repz
jno,pt
mov
sbb
cmp
cmp
int3
data16
pop
add
fsubp
inc
jle
enter
jnp
dec
sarl
aas
sub
xor
adc
inc
jne
dec
adc
arpl
mov
mov
inc
call
mov
mov
mov
adc
and
add
rclb
fcomip
dec
and
out
mov
movsl
testb
mov
out
push
stos
jnp
lret
fucom
cmpsl
mov
push
jo
popf
scas
fs
xchg
sbb
out
test
push
idivb
imul
mov
push
push
gs
dec
push
jge
push
add
lahf
fiadds
iret
call
fldl2t
icebp
jge
pop
push
or
sub
rcr
and
les
adc
mov
mov
sub
test
sub
fwait
rol
cmp
mov
into
add
xchg
and
mov
repz
mov
inc
xor
sbb
mov
call
icebp
arpl
mov
ret
xchg
jl
mov
mov
int3
sti
xor
pop
mov
ljmp
cmc
mov
int3
imul
int3
ljmp
call
loope
jno
imul
scas
mov
mov
sub
pop
sub
das
mov
insb
push
push
sbb
popa
fsts
pop
mov
stos
lds
data16
dec
inc
inc
std
jns
mov
push
shlb
and
leave
sbb
lahf
fsubrl
cmp
lahf
test
ret
mov
cli
cmc
out
add
ret
pop
divl
mov
sub
pop
and
add
enter
fcomps
mov
fs
cmp
push
push
cltd
sub
jnp
and
and
out
jl
lcall
ss
dec
aaa
and
xchg
mov
mov
inc
sub
xor
out
mov
loopne
les
jmp
adc
cmpsl
mov
cmc
lret
dec
jns
mov
in
mov
fnsetpm(287
dec
sbb
add
leave
cmpsl
add
pop
inc
or
dec
in
push
nop
xlat
stos
movsl
jne
xchg
pop
and
scas
and
pop
lods
lret
pop
imul
pop
xchg
xor
daa
sbb
sbb
or
pusha
outsb
enter
loopne
mov
inc
cwtl
test
dec
nop
add
cwtl
add
pusha
xchg
movsl
cmp
mov
jecxz
arpl
scas
xchg
stos
lds
ja
idivl
add
pop
bswap
into
pop
ds
jp
pop
leave
ret
addr16
sbb
push
test
enter
mov
xor
inc
fwait
imul
pop
mov
fdiv
dec
push
and
in
add
push
mov
ficoms
int
js
jmp
aam
or
push
add
pop
test
mov
repz
hlt
stos
mov
clc
fdivp
xchg
cli
inc
adc
insl
sbb
aaa
inc
cmp
add
sbb
xor
bound
aad
aas
repnz
jp
in
xchg
shll
fsin
int3
jb
lret
xor
sahf
xor
movsb
mov
or
sbbb
inc
loope
mov
sub
xchg
xchg
jae
fimull
aad
xchg
fwait
cmpb
lret
inc
stc
cmp
dec
aam
js
mov
arpl
mov
cmpsb
inc
bound
mov
xorb
xor
ret
shlb
add
xor
push
loopne
mov
push
jbe
xlat
insb
imul
push
mov
and
call
sub
test
and
dec
xor
jmp
xor
jle
add
in
aam
into
cmpb
sub
ljmp
or
add
pop
sub
pop
add
dec
rcrl
mov
dec
jl
test
mull
add
jmp
or
hlt
call
mov
and
dec
cs
jmp
sahf
jb
sti
and
mov
pushf
ret
push
jns
lcall
bsf
inc
push
ss
subps
mov
add
gs
addb
outsb
sbb
push
fwait
mov
jo
pushf
mov
fwait
js
push
xchg
mov
shll
push
and
ja
aas
cmpsl
dec
add
inc
push
mov
pop
dec
sbb
pop
stos
cmp
jge
jle
xor
jmp
mov
push
mov
test
inc
sbbb
add
scas
pop
xlat
xchg
cmp
call
push
mov
orb
or
adc
mov
mov
repnz
aad
mov
shlb
cltd
pop
loope
mov
in
jl
std
mov
lock
cmpb
sub
mov
cld
cmp
push
add
in
mov
int3
in
repz
sbb
nop
xlat
dec
sub
push
scas
shr
dec
leave
cwtl
dec
xor
stc
pop
andl
cmp
gs
loope
test
or
loop
or
imul
push
mov
lret
pop
fmuls
adc
mov
adc
test
mov
stc
ds
inc
fwait
nop
sbb
add
sbb
das
xlat
cs
popf
pop
add
cmp
jp
dec
push
sub
movsl
ret
lret
js
popf
mov
mov
mov
lea
sbb
jge
rcrl
lahf
sbb
mov
aas
xchg
lds
imul
in
mov
nop
push
mov
sub
mov
imul
idiv
stos
clc
cmp
stc
fsubs
sub
cltd
cli
jne
aad
dec
leave
pop
lock
out
jmp
test
mov
inc
stos
pushf
dec
imulb
push
imul
xchg
lock
pop
mov
test
mov
push
cs
popa
push
cmp
jp
rorl
cmpsl
xlat
add
sbb
xor
push
jle
or
adc
out
sub
fstpt
push
repnz
xchg
subl
and
or
jne
gs
out
xchg
adc
mov
xchg
aad
pop
test
insl
in
into
pop
daa
lret
inc
and
pop
jne
xchg
in
mov
fldcw
xor
or
hlt
mov
out
enter
fsubr
aam
fcoms
mov
jne
jae
dec
int3
inc
mov
mov
mov
fisubs
out
cld
mov
push
jns
lcall
bound
or
pop
dec
adc
push
sub
sub
aad
insb
sub
push
dec
jb
mov
lods
push
dec
xchg
cmp
int
inc
sub
imul
cmp
pushf
pop
bnd
imul
sub
sub
xchg
rcl
lcall
mov
xor
aaa
mov
outsl
es
movsl
ret
push
nop
leave
jmp
mov
inc
mov
or
cld
jle
js
sbb
inc
stos
inc
push
cltd
xchg
int
dec
hlt
pop
stos
out
push
lret
scas
xlat
insb
mov
dec
out
inc
in
outsl
or
aam
int3
fwait
lea
iret
sbb
inc
test
and
hlt
and
xchg
call
or
xchg
dec
push
or
or
xor
sub
aaa
mov
cmp
cmp
test
and
test
fbstp
push
cmp
sbb
push
sbb
mov
xor
xchg
and
sbb
mov
lret
mov
stos
dec
jb
mov
sti
test
aas
cmp
cltd
push
mov
bound
mov
jmp
cs
mov
lcall
xor
rsm
lret
or
push
jbe
test
pop
roll
pushf
or
cmp
lahf
inc
pusha
pop
or
ret
xchg
fwait
leave
sbb
shlb
idivb
into
pop
sar
decl
and
dec
push
and
mov
imul
xchg
jmp
enter
mov
xchg
jns
in
pop
fldt
imul
adc
outsb
imul
mov
insl
cltd
or
rolb
cmp
add
add
xchg
divb
ds
add
lahf
ja
call
jbe
sarb
sbb
cmp
push
lds
repnz
jne
mov
push
xchg
adc
fstpt
movsb
rcrl
mov
test
fst
lret
cmc
push
cmp
mov
inc
jmp
int
dec
xor
addr16
ja
lahf
jle
push
cld
push
cmp
test
sbb
or
fcmovnu
icebp
cwtl
inc
sub
add
adc
fldl
scas
dec
jnp
adcl
jmp
pusha
mov
jmp
mov
es
jne
cld
add
mov
add
mov
xor
lds
fwait
mov
lods
pop
mov
push
mov
lahf
in
or
mov
lea
into
out
mov
and
ret
or
imul
hlt
dec
or
into
add
fdivs
pop
out
pop
push
jno
ret
loopne
dec
mov
sti
mov
std
je
mov
rorb
js
cltd
cmpb
ret
sub
rcrl
lods
popf
xor
sbb
mov
in
dec
lahf
mov
adc
jne
lret
push
mov
mov
inc
ljmp
jno
mov
ss
lret
sub
push
jno
add
mov
lods
inc
pop
out
cmp
mov
ljmp
sub
cmpsb
js
rorl
fdivrl
cwtl
jb
popl
mov
out
mov
push
xorb
xor
inc
outsl
roll
mov
sub
push
repz
lcall
add
fistl
sar
sbb
rclb
sbbb
cmc
clc
or
sbb
cmpsl
or
fs
pop
push
jne
jae
bound
dec
xor
aad
mov
and
cltd
scas
or
push
repnz
pusha
bound
dec
add
or
test
stc
fstps
mov
xor
push
les
out
fwait
xor
jne
and
mov
mov
test
mov
gs
adc
push
lret
addb
imul
add
lret
jge
pop
scas
jbe
das
cmc
pop
push
mov
cltd
mov
or
add
inc
jge
inc
sbb
pop
mov
sub
loopne
ret
mov
clc
dec
fdivrs
jb
push
cmp
mov
mov
xchg
mov
sub
cmpsb
int
outsl
jae
cmp
popf
mov
enter
sbb
inc
mov
mov
pop
push
sbb
out
iret
lods
sahf
mov
aam
repnz
mov
mov
shll
dec
xchg
leave
ror
sub
jmp
xchg
std
xchg
in
lahf
lret
push
aaa
gs
icebp
enter
cmc
inc
enter
cld
jg
popf
int
and
repnz
or
clc
mov
testb
xchg
fwait
movsl
sahf
sbb
push
cli
dec
ror
cmc
fisttpl
mov
imul
xchg
mov
aas
insl
lret
rcll
ret
sbb
imul
mov
insl
loopne
sbb
subb
aam
mov
push
insb
lret
cmp
xchg
mov
ss
aas
cmpsl
dec
mov
mov
popl
jecxz
cwtl
test
xchg
movsb
xchg
pop
incb
sti
ret
add
dec
insl
lahf
xchg
in
lds
sub
out
scas
popf
test
inc
inc
loope
sbb
add
adc
or
adc
sub
mov
jne
imul
mov
into
jae
cmp
scas
popf
dec
lcall
mov
jge
loopne
les
aad
lock
test
outsl
cmp
dec
lock
adc
or
int3
rorl
scas
inc
arpl
int
add
push
inc
test
and
incb
xor
xchg
scas
cmp
icebp
add
push
pop
pop
rorl
push
xor
stos
mulb
push
sub
lahf
pop
pop
mov
mov
cmpsb
sahf
xor
xor
outsb
push
jnp
jns
dec
pop
jle
loop
mov
mov
bound
or
loopne
xor
push
xchg
adc
xchg
mov
shl
mov
int3
out
inc
inc
sbb
inc
dec
pop
iret
cmpsl
ret
xchg
std
ret
rcl
dec
cmpsb
inc
test
sub
dec
xchg
mov
hlt
js
inc
mov
pop
push
mov
std
into
pop
dec
imul
pop
mov
movsl
xchg
fnstsw
mov
lret
loope
mov
mov
clc
mov
cltd
orb
xor
in
pop
xchg
xlat
stos
push
mov
or
lret
sbb
out
ds
test
mov
notl
mov
pop
cmp
and
nop
jp
pop
or
xchg
pop
xor
fs
push
sar
mov
add
dec
push
sub
push
sbb
pop
mov
cld
scas
inc
xchg
mov
fwait
push
sub
andl
std
jbe
push
pushf
cltd
imul
inc
cwtl
or
movsl
rcrb
lods
pop
cltd
pop
mov
mov
mov
xlat
pop
pop
test
int3
pop
sub
cmp
push
shr
mov
xor
pop
jmp
xchg
js
fwait
push
stos
shrl
lea
lea
inc
mov
push
clc
sti
mov
jns
add
enter
xlat
jl
sti
mov
scas
vaesenc
adc
mov
int
mov
adc
adc
xchg
jmp
test
dec
cmp
add
add
lret
cmpsl
imul
mov
add
mov
or
adc
cmp
test
sbb
scas
rcrb
fcom
inc
mov
xlat
loop
xchg
inc
idivl
int
cmc
sbb
push
sub
in
fistpll
stc
lods
dec
and
xchg
imul
mov
mov
scas
jnp
sti
jb
fwait
jns
cltd
enter
inc
inc
xor
xor
enter
inc
push
or
aad
xchg
dec
push
test
mov
addb
mov
rcrb
mov
clc
jnp
mov
lock
mov
push
inc
ret
mov
adc
lods
cmpsl
mov
cmpb
mov
test
lret
inc
in
mov
mov
gs
stos
flds
adc
lret
popf
bound
lret
gs
cmp
addr16
mov
lods
popa
push
cmp
and
add
movsl
xchg
mov
push
push
push
ret
addr16
pusha
or
icebp
xor
jge
fwait
leave
loop
les
flds
jo
mov
or
call
in
sub
sbb
push
das
mov
pop
test
sbb
imul
xor
loope
out
jg
inc
cltd
out
mov
sbb
or
fnstenv
sbb
sub
enter
dec
lret
dec
mov
mov
push
test
movsl
jne
sub
cmp
mov
test
and
clts
xchg
xor
testb
mov
test
aas
add
inc
xor
push
loop
iret
out
dec
lea
das
divb
out
js
aas
add
mov
and
push
inc
ds
add
lea
inc
push
ljmp
cltd
push
mov
stos
xchg
stos
jo
pop
jb
enter
jmp
lods
inc
ret
xchg
jle
push
jg
mov
push
push
jo
stc
and
adc
mov
add
inc
or
add
ja
mov
insb
xor
dec
mov
and
xchg
lds
rclb
fs
sbb
add
sti
ret
or
inc
in
jo
shlb
cwtl
dec
push
or
aas
push
mov
lds
insb
xchg
imul
pop
xchg
ret
jecxz
je
imul
mov
iret
fbstp
aad
push
mov
xor
movsb
dec
enter
mov
in
movb
cwtl
mov
mov
lcall
push
mov
and
test
mov
and
sub
mov
xchg
mov
dec
pushf
mov
xchg
dec
data16
adc
add
cmpsl
adc
aam
jae
mov
jg
shrb
add
jnp
lret
roll
mov
popf
leave
xchg
jnp
std
xlat
xchg
in
jge
push
pop
pop
mov
fisubl
sbb
pop
div
push
aas
scas
mov
stos
adc
and
dec
mov
or
pop
mov
xor
add
xchg
push
out
sti
dec
pop
ret
push
aas
adc
pop
jge
cmp
add
dec
mov
popl
std
call
inc
adc
lods
cmp
test
mov
jecxz
jno
nop
fwait
lahf
frstor
in
sbb
addr16
mov
int
jecxz
cmp
mov
xchg
addr16
dec
sbb
cli
stos
scas
sbb
cwtl
push
sub
dec
sbb
and
lahf
sbb
mov
ja
jo
add
icebp
or
fdivl
sub
sbb
ljmp
mov
ja
lods
pushf
push
pusha
loope
mov
adc
lahf
scas
je
imul
inc
add
xchg
fsubrs
jge
mov
add
pop
repnz
aas
push
repnz
test
daa
cmpsb
jge
xlat
sub
push
gs
inc
lock
dec
sbb
nop
test
mov
dec
mov
fwait
enter
ret
add
mov
jb
sbb
fisttps
push
mov
cli
scas
mov
rcll
out
xor
and
iret
ret
lahf
lds
adc
jno
cld
inc
sbb
mov
cmp
sub
xor
xor
ja
int3
in
int
sbb
arpl
push
push
adc
stos
popf
jge
mov
mov
mov
gs
xor
xchg
stos
cmp
icebp
pop
lret
inc
cmp
jbe
ljmp
adc
xchg
pop
mov
inc
dec
scas
cmp
cltd
sub
mov
roll
js
or
sub
sti
and
sbb
pushf
inc
inc
pop
pop
scas
pushl
shrb
movsb
push
rcll
mull
pop
cmp
in
cmp
pop
push
lods
cmp
and
mov
out
mov
mov
loope
mov
pop
cmp
lcall
mov
and
sub
pop
mov
sub
out
xor
loop
sti
mov
in
mov
idivl
ret
pop
dec
lock
add
inc
mov
in
fldenv
fcompl
stos
lret
divb
and
scas
imul
pop
push
mov
pop
fstp
jle
pop
lods
mov
mov
mov
cmpsl
push
leave
cld
sbb
xchg
mov
jae
adc
pop
andb
inc
mov
pop
push
mov
add
cwtl
ljmp
xchg
jmp
lcall
mov
xchg
pop
xchg
addb
push
andl
sbbl
pop
testl
inc
movsb
jne
xor
xchg
frstor
pop
test
andl
sahf
mov
push
sti
js
dec
or
push
rcr
bound
es
popf
mov
adc
jb
insl
addr16
adc
movsl
mov
mov
xor
sub
jge
mov
or
je
cmc
inc
xor
sti
mov
sti
jne
adc
jle
cmp
push
out
adc
pop
xor
testb
cwtl
aas
scas
test
jns
dec
push
xchg
lret
mov
lret
push
pusha
sub
stos
mov
dec
test
cs
mov
mov
das
xor
mov
das
bound
data16
test
inc
xor
lds
ja
stos
inc
lcall
ret
or
lods
inc
inc
mov
rclb
xchg
arpl
popf
dec
sub
test
nop
pop
loop
xchg
push
adc
addl
jmp
fcompl
rcll
imul
sub
mov
and
popf
stc
and
imul
inc
mov
xor
xchg
cwtl
xchg
xor
push
sbb
stc
gs
dec
fisubrl
lds
xchg
mov
cmp
dec
mov
loopne
int
sbb
lock
sti
in
iret
sbb
add
imul
xchg
les
inc
pop
leave
sub
pop
ret
pop
mov
xor
imul
xchg
stos
pop
add
push
inc
jmp
mov
sbb
and
add
inc
lods
jb
mov
js
std
loop
mov
cmp
mov
daa
aas
jnp
les
rclb
xor
leave
xlat
xchg
xchg
xchg
mov
nop
dec
cmp
push
cmc
loopne
cmc
pop
mov
jo
jecxz
and
insl
sbb
mov
adc
bnd
popf
scas
int3
jl
mov
inc
xor
lcall
or
int3
pop
sub
push
or
cltd
cltd
sub
dec
and
pop
hlt
pop
lods
ret
ret
out
movsb
mov
clc
cmp
jge
icebp
sar
imul
pop
jae
fsubl
cmp
push
in
scas
inc
enter
test
imul
cli
imul
or
fldcw
aaa
or
cwtl
fmul
mov
jb
mov
fstps
xchg
mov
add
sub
mov
jo
xchg
dec
push
ret
call
dec
and
fwait
sbb
sti
and
fildll
cmc
push
pop
add
daa
add
mov
jge
addr16
stos
sbb
jp
lds
popf
push
rol
pop
mov
pushf
xchg
cmp
fs
pop
mov
movsb
clc
mov
add
or
xchg
sub
mov
xchg
sbb
mov
jbe
cmp
arpl
mov
les
sti
jmp
inc
addr16
repz
cmp
test
xor
outsl
test
sti
sbb
mov
dec
xchg
or
ficomps
mov
cmp
test
lds
cmp
push
mov
cmpsl
out
int3
xlat
loop
jl
dec
mov
pop
daa
rcr
mov
fisubrl
test
imul
mov
jae
shrb
lods
jne
xchg
jo
add
popa
mov
out
js
pop
and
pop
sub
ja
inc
ja
pop
cmpsl
add
test
or
dec
and
xchg
imul
pop
inc
mov
lods
out
dec
sbb
sub
fwait
outsl
jle
sahf
les
jecxz
mov
sub
loopne
pop
push
or
mov
push
rcr
jne
dec
sahf
push
mov
repz
xor
jg
cmp
repz
adc
add
and
adc
pop
push
dec
iret
sbb
lds
or
inc
push
leave
add
add
sbbl
insl
cwtl
insb
and
mov
aaa
sbb
xchg
mov
mov
dec
sbb
dec
sbb
fisttpl
inc
popf
lret
cwtl
nop
mov
ret
dec
jmp
test
in
add
repz
fdivl
mov
movsl
inc
sbbb
pop
mov
pushf
fsts
popf
in
test
aad
add
sarb
popa
repz
ret
rcrb
dec
inc
mov
adc
std
mov
mov
test
and
push
fsubs
sqrtps
xchg
push
pop
push
stos
aas
mov
iret
jp
gs
in
mov
int3
out
inc
fistpl
dec
inc
sbb
lock
adc
xor
mov
and
xor
mov
call
inc
outsl
imul
mov
cld
sti
mov
hlt
mov
add
jnp
add
insb
push
pushf
xor
jno
mov
rcr
or
pop
movsb
sub
dec
out
in
sbb
mov
fistps
mov
inc
cld
xorl
push
dec
shlb
jge
mov
je
pop
or
pop
scas
jbe
sub
pop
jl
and
sub
lds
mov
push
js
jle
mov
mov
and
aas
push
daa
or
xchg
mov
js
ficoms
xor
cwtl
dec
lret
mov
ret
cwtl
aam
mov
add
mov
loope
lcall
leave
cmpsb
inc
pop
out
mov
enter
add
hlt
sbb
lods
imul
mov
cmc
push
gs
fdivl
out
push
mov
aam
xchg
mov
dec
cmp
and
push
xchg
inc
mov
scas
lock
cltd
loope
pop
sub
xchg
stos
push
subb
lret
movsl
sbbl
stos
test
sbb
xchg
dec
sbb
lea
lret
fucomp
je
movsl
lods
rolb
in
jmp
cmp
pop
insl
cmp
mov
push
mov
mov
mov
sub
enter
pusha
jle
cs
jmp
fists
movl
fnsave
xor
rcll
sti
dec
push
add
hlt
rcrb
mov
ret
pop
jne
stos
mov
enter
lea
cmp
hlt
jne
xchg
dec
push
mov
test
je
enter
dec
fstps
mov
sbbb
call
sbb
imul
cwtl
lahf
lds
aas
insb
and
cltd
pop
dec
pop
sbb
xor
push
sub
or
scas
ficomps
adc
add
dec
and
sub
jp
jp
out
loopne
fwait
inc
mov
jb
sbb
mov
fistl
mov
push
movsl
push
cld
dec
inc
xchg
xchg
push
mov
push
push
sbb
or
pop
sub
loopne
sub
cwtl
lahf
mov
jae
repnz
sar
add
fadd
sti
mov
cmp
push
pop
xor
dec
ja
inc
shlb
xchg
dec
and
pop
test
sub
and
lods
movsl
ret
es
jae
adc
cmp
ret
cmp
jne
jecxz
push
dec
sbb
xchg
adc
aaa
mov
out
mov
clc
insb
enter
mov
fdivs
mov
jecxz
lock
adc
mov
test
add
adc
mov
lahf
lret
jecxz
jns
rcrb
ds
pop
xchg
or
cwtl
xchg
ficoml
xor
movsl
mov
cs
sahf
pop
jno
dec
sub
test
imul
lods
dec
int3
sbb
push
dec
jae
cli
fs
lods
xchg
dec
pushf
dec
sub
dec
mov
inc
or
xor
sub
lcall
rol
lock
cltd
lods
rcl
lahf
inc
adc
pusha
inc
xchg
mul
das
jle
scas
mov
stc
jl
push
xchg
imul
jmp
mov
addb
sub
add
repz
rcrl
dec
ret
pop
xchg
iret
jp
lahf
aas
cltd
pop
cmpsb
loope
jecxz
and
and
mov
sbb
lock
adc
addl
lret
sbb
in
gs
fcmovnb
sbb
sti
call
pop
or
incl
in
repz
mov
test
sbb
add
add
movl
mov
sub
cmpb
mov
mov
push
mov
mov
into
mov
xchg
mov
and
inc
push
lea
mov
scas
ret
dec
pushf
xchg
ret
dec
test
insl
mov
xchg
sbb
pop
dec
jge
mov
xchg
add
subl
add
and
dec
fs
xchg
mov
mov
inc
push
fisttps
and
jp
or
cmpsl
std
and
jle
rcrb
pushl
cmp
les
mov
adc
mov
xlat
insb
inc
pop
adc
mov
mov
es
gs
xchg
cmpsb
push
cltd
enter
mov
pop
rcrb
hlt
inc
cmp
aas
push
mov
inc
add
inc
cmp
cmp
mov
adcb
aas
xor
iret
fucomip
in
jl
mov
out
std
mov
adc
fistpll
add
fsubrl
rorb
mov
movsb
fwait
jne
enter
pop
jnp
push
imul
xor
int
cmp
xor
xchg
sbb
and
test
xchg
fsts
scas
lret
adc
mov
outsb
enter
stos
add
adc
jl
aas
pusha
pop
mov
sbb
add
hlt
and
insb
dec
cmp
dec
in
xor
cwtl
dec
cmp
mov
jo
popa
popl
ret
out
fwait
or
cmpsb
jge
mov
sbb
inc
fbld
pop
cwtl
sub
int
xor
hlt
js
insb
lea
adc
sti
dec
mov
mov
push
movups
loopne
addl
xlat
jbe
lret
les
pop
mov
pushf
out
inc
iret
and
in
inc
pop
mov
repz
pop
sbbb
sbb
adc
add
cmpsl
jmp
adc
inc
and
subb
cmp
add
adc
stos
shl
jle
or
lds
daa
mov
aad
pushf
fisubrl
sub
mov
xchg
mov
mov
mov
inc
lcall
sbb
lret
jnp
into
sbb
mov
mov
mov
loopne
inc
shlb
or
mov
mov
sar
mov
jle
mov
ret
data16
add
jnp
and
xchg
inc
xchg
or
and
call
addr16
cltd
imul
out
leave
inc
cli
sub
aam
or
int
mov
xlat
dec
mov
mov
repz
cmp
lahf
jmp
and
mov
mov
ret
pop
dec
add
fistps
push
push
mov
gs
hlt
jno
es
iret
dec
fsub
rcll
loope
adc
mov
mov
jecxz
push
dec
int
sti
pushl
fs
cmp
ret
pop
jge
push
stos
shll
fimuls
push
jbe
scas
mulb
mov
frstor
mov
rorb
jae
adc
jmp
js
dec
adc
sub
or
add
aas
les
mov
clc
iret
out
cmp
out
imul
push
ret
fld
clc
rolb
inc
mov
jp
cmp
mov
loopne
hlt
and
mov
sub
cmpsb
sub
movsl
cmp
xor
push
xchg
pop
enter
popf
je
adc
out
mov
pop
cmp
punpcklwd
cltd
fs
dec
pushf
pop
add
je
inc
sbb
fcoml
sbb
sarb
outsl
insl
mov
lods
frstor
pop
imul
jge
jbe
mov
repz
inc
ss
mov
adc
mov
fistps
mov
or
ja
shrb
jnp
adc
jbe
jg
xlat
paddd
aad
in
popf
scas
jmp
jmp
rcrb
loopne
jl
mov
dec
daa
mov
adc
dec
and
in
movsl
ret
inc
sub
mov
and
popa
mov
lea
iret
pop
mov
cld
mov
sbb
mov
adc
inc
lcall
add
popa
inc
sub
or
ds
stos
je
pop
ss
mov
xchg
in
lahf
adc
clc
in
inc
inc
mov
pop
sbb
xlat
pop
pop
inc
aad
pushf
cmp
mov
mov
scas
push
sarb
std
out
dec
subb
lea
popf
movsb
shrl
mulb
mov
dec
subl
mov
and
sbb
mov
xchg
fisttpl
popa
mov
stos
ja
jl
out
push
inc
add
scas
push
sub
push
xchg
sub
fcmovne
mov
test
scas
dec
cmp
std
lret
add
dec
xchg
roll
or
add
xlat
and
mov
and
push
aam
ret
xchg
mov
pop
pop
enter
cmp
sti
push
shrl
sbb
arpl
mov
mov
fnstsw
mov
stc
pushf
lcall
aas
ficoms
divl
out
jbe,pt
mov
cmp
pop
and
inc
mov
cwtl
aas
stos
or
icebp
inc
adc
push
sti
mov
pop
test
pop
cld
cmc
jmp
mov
mov
cwtl
push
movsl
fsubrl
lcall
jle
int3
pop
jno
or
and
sarl
lds
jne
repnz
dec
shll
adc
dec
lcall
add
xchg
or
pop
and
add
mov
shrb
and
or
mov
mov
std
lcall
jmp
xchg
adc
inc
das
fdivs
push
xor
mov
dec
and
fsubrl
dec
aad
test
mov
fld1
gs
int
cmpsb
inc
cmc
fidivrs
xor
mov
xchg
mov
loopne
pop
push
jae
int
inc
xor
mov
mov
push
mov
mov
and
fstl
ret
inc
xchg
sti
dec
push
inc
aaa
lret
jecxz
add
and
jns
popf
test
pop
mov
fidivs
mov
mov
mov
insl
xor
stos
pop
xor
cs
cmpsl
aad
jb
mov
jge
pushf
dec
data16
rorl
xchg
pop
push
insb
pop
sahf
push
add
jo
outsl
ret
jne
cmp
cli
jecxz
jecxz
inc
sbb
lods
dec
sub
fnstcw
and
xor
jl
dec
xchg
pop
out
push
icebp
and
test
dec
mov
dec
ss
scas
push
js
mov
pop
xchg
mov
je
cli
inc
out
and
xor
cli
pop
ret
add
mov
sub
hlt
mov
icebp
xchg
xchg
sub
jne
cwtl
lds
outsb
in
pop
jnp
in
mov
push
fwait
pop
cmp
insb
daa
adc
push
sub
call
lret
cli
add
mov
or
xchg
cmc
sarb
out
dec
movsl
or
iret
pop
sbb
adc
scas
mov
mov
int
inc
add
sbb
insl
xchg
lds
aas
aad
lods
movsl
push
repnz
and
popf
lret
out
or
bound
fs
adc
sub
jmp
or
mov
or
or
mov
jne
mov
adc
xchg
mov
cld
mov
or
xchg
push
jecxz
decb
js
xor
cli
sbb
adc
jae
and
jns
mov
inc
in
inc
cld
test
add
jns
mov
mov
fwait
insl
cmovae
nop
push
jae
mov
and
cmpsb
lcall
imul
dec
and
inc
xor
je
push
push
mov
inc
ret
pop
push
xchg
add
int
lahf
xchg
xchg
sub
iret
push
dec
sysret
add
into
add
in
clc
add
jo,pn
pop
xchg
or
and
cmpsl
mov
js
cwtl
push
xchg
lret
stc
and
ror
sbb
imul
push
jne
faddl
lods
mov
in
outsl
and
lds
dec
push
mov
dec
mov
leave
dec
dec
adc
xor
sub
inc
inc
test
add
test
addr16
cmpsb
and
add
in
pop
or
inc
push
add
imul
mov
or
lea
mov
mov
jae
xor
jp
cmpsb
mov
cmp
mov
push
jge
insl
or
test
inc
mov
outsl
push
ret
add
xor
es
pop
decl
xchg
push
es
fsubp
inc
loopne
daa
push
inc
adc
add
repz
xor
ret
push
push
xor
jge
push
lods
arpl
insb
inc
inc
xor
clc
jmp
pop
mov
jo
jl
sbb
add
mov
imul
pop
roll
je
cli
lods
icebp
imul
les
cli
mov
movl
jb
lret
lods
dec
sbb
sbbl
enter
jae
add
cmp
lcall
and
ja
mov
mov
add
pushf
repnz
jmp
aad
jle
iret
clc
inc
js
jle
xor
xor
cmc
or
inc
jge
in
mov
inc
dec
cmp
pop
mov
loopne
mov
add
jno
cltd
sbb
adc
sbb
lahf
push
ss
fimull
cmp
icebp
bound
hlt
mov
inc
popa
mov
lcall
pop
jmp
test
pop
adc
pop
and
int
aas
add
push
fwait
lahf
gs
xchg
fdivrl
sbb
and
mov
mov
test
xor
and
mov
mov
in
movsl
xchg
or
jl
push
stos
push
test
xchg
and
sbb
push
dec
sar
clc
jmp
test
pushf
movsl
lret
iret
add
inc
imul
or
inc
add
push
adc
lock
pop
inc
ffreep
add
inc
pop
repz
rorb
dec
loopne
mov
or
scas
jl
or
sbb
rorl
push
cmp
xchg
aas
jno
ret
mov
cmp
pop
cmp
aas
push
and
das
daa
ja
jo
pop
fnsave
mov
sub
ss
pop
jno
xor
repz
jns
lret
sbb
fwait
cmp
fidivrs
addl
scas
xchg
ss
mov
add
pop
adc
pop
movsl
dec
sbb
aam
shll
dec
ret
pop
or
jo
sti
test
sbb
bnd
bound
aad
pop
push
in
dec
movsl
inc
push
stos
push
inc
shlb
mov
mov
lret
subl
stos
out
bound
ljmp
outsb
or
cltd
cmp
ljmp
mull
pop
fisubl
je
or
pusha
pop
or
xchg
dec
xchg
jbe
lods
jl
scas
jg
cmp
xor
popf
sbb
rolb
or
cwtl
add
pop
int3
hlt
imul
dec
movsl
cmp
mov
push
js
stos
fisubl
push
mov
sub
pop
jns
mov
std
bound
divb
lret
xor
cwtl
or
xor
aas
sub
cmpsb
aas
dec
cmpb
les
sbb
mov
rclb
jg
outsl
push
mov
pop
loopne
orl
je
or
iret
addr16
fsubs
rol
aad
inc
add
mov
mov
loope
iret
inc
imul
mov
arpl
mov
jmp
loop
inc
lods
mov
insb
ljmp
sbb
pop
test
inc
lds
inc
in
pop
dec
scas
xchg
out
cltd
mov
push
stos
scas
push
and
out
lods
cmp
call
add
inc
pop
shlb
mov
xchg
xchg
jmp
mov
or
cmpb
ds
jl
fwait
mov
jb
std
jne
add
out
into
nop
dec
and
mov
ret
fwait
xlat
jp
je
adc
jg
lahf
call
jbe
xchg
enter
test
pop
mov
xchg
subl
imul
pop
mov
xchg
rcr
cltd
pop
sub
lea
jl
das
mov
mov
add
pusha
push
lods
shrb
dec
mulb
add
xor
je
rcl
lret
pop
adc
mov
xchg
add
push
xchg
add
mov
xchg
mov
scas
mov
aad
inc
push
and
movl
arpl
repz
addb
test
sub
xchg
adc
lret
mov
mov
xchg
push
clc
int3
mov
lods
jle
cltd
cmp
mov
inc
lret
enter
enter
mov
lret
test
sarb
dec
cmp
dec
sarb
aam
push
sahf
shll
xchg
push
rcrb
inc
inc
pop
push
movsl
in
aaa
insl
fld1
jb
mov
aam
fsubrs
add
ss
test
jge
dec
nop
jne
mov
mov
pop
mov
jne
jae
cmp
fildl
jno
fsubrl
push
adc
rolb
push
in
mov
fimuls
fwait
lock
pop
mov
mov
in
loop
adc
jle
pop
shrl
stos
test
ss
mull
ljmp
popa
outsb
xchg
push
inc
dec
fcmovu
insl
mov
pusha
add
fildl
stos
mov
xchg
stos
inc
push
push
sub
push
or
dec
test
xor
lahf
inc
leave
enter
push
mov
mov
std
sbb
imull
mov
icebp
cmp
lret
push
sbb
mov
stc
sbbb
sub
imul
dec
mov
cmpsl
push
mov
mov
imul
push
xchg
aaa
imul
lcall
test
sub
leave
movsb
iret
call
dec
call
jns
pop
loopne
push
xor
jmp
cs
lea
fwait
lahf
xchg
movsb
cwtl
jb
mov
ljmp
jb
cmpsl
lahf
xorb
ret
sbb
scas
cwtl
lret
inc
adc
pop
jg
xor
jno
lret
push
xchg
out
jge
sbb
mov
das
fucomp
fwait
mov
nop
sbb
jb
sub
dec
lcall
push
scas
jno
jno
dec
fdivs
push
stos
jg
in
push
dec
fidivs
nop
dec
jno
jno,pt
fsub
fstps
and
pushf
popf
movsb
mov
lds
rcrb
mov
cmp
fdivrl
daa
xchg
pop
jo
push
mov
adc
lahf
fidivrl
sbb
jmp
fdivrs
pop
sbb
push
cmpsb
jns
gs
xor
and
aad
push
test
or
jge
arpl
aaa
fidivl
testl
mov
lods
jmp
repz
into
std
mov
jnp
ret
xchg
sti
jnp
cmp
test
mov
jge
leave
fwait
daa
les
repz
inc
mov
lret
mov
stos
jg
or
lods
push
jg
dec
sbb
dec
fldenv
xchg
repnz
lds
and
bound
inc
addb
pop
ret
scas
lods
in
sbb
hlt
mov
sub
lods
mov
mov
arpl
sub
add
and
pusha
push
dec
inc
cmp
inc
fwait
xor
jl
js
fstps
enter
dec
push
pushl
mov
sbb
sub
inc
cwtl
mov
and
movsl
dec
jg
lods
xlat
aas
call
mov
lahf
jo
jge
and
js
outsl
or
cmpsl
fstpl
push
mov
insb
aaa
xlat
xor
clc
push
test
cmp
dec
nop
idivl
das
fmuls
xchg
cmp
or
jg
jno
push
mov
dec
sbb
out
mov
jae
mov
jno
mov
lods
push
sbb
jbe
test
leave
aam
xor
dec
lret
repnz
pushf
dec
cmpl
iret
in
mov
mov
jg
dec
repz
pop
shlb
mov
mov
mov
or
stos
shll
mov
jno
inc
and
stos
sti
push
cmp
jp
ror
outsl
mov
cmp
xchg
imul
dec
xchg
push
popa
jecxz
cmp
orb
or
jo
test
fdivl
in
adc
add
dec
loop
mov
mov
push
xor
pop
lds
pop
adc
cmp
movsl
cli
imul
add
shll
cmpsl
push
outsl
inc
aad
stos
mov
scas
fwait
pop
push
dec
inc
mov
call
xor
pop
and
inc
mov
inc
outsl
aam
dec
adc
pop
xchg
mov
loope
mov
js
cld
xchg
lahf
lret
push
xor
sbb
test
lcall
cli
and
gs
pushf
lahf
pop
sbb
and
rcr
shlb
pop
mov
push
inc
in
popl
add
mov
mov
shll
into
stos
cld
push
cmp
adc
mov
fcmovne
aad
cmp
scas
outsb
dec
cmpsl
push
imul
xorb
loope
js
cmpb
mov
adcl
mov
push
in
call
and
cwtl
dec
movsl
jp
xchg
test
mov
mov
push
jo
mov
rolb
iret
add
jnp
pop
sub
ret
jl
xchg
cmc
cwtl
xchg
mov
cli
xor
jmp
cmp
call
test
out
mov
test
sarl
js
ds
add
sub
insb
and
das
cmpsl
jecxz
cld
push
adc
jno
mov
jnp
push
pop
mov
lahf
push
and
mov
arpl
aaa
lret
test
ret
or
inc
pop
add
xchg
outsb
push
inc
sbb
or
sahf
test
aad
pushf
test
popf
add
pop
addr16
pop
insl
pop
xchg
sub
cmpsb
fidivs
sub
or
cld
or
mov
stc
xor
pop
sub
lret
inc
sarb
add
adc
adc
outsl
mov
jae
xlat
push
mov
iret
pop
mov
xlat
cmp
and
jnp
int3
bound
dec
sub
inc
add
cwtl
fldenv
loope
out
mov
std
cltd
add
jmp
mov
in
out
adc
push
xchg
jae
mov
loopne
jl
cmp
jmp
nop
mov
fwait
in
ja
ret
adc
mov
movzwl
add
mov
xor
xchg
arpl
xor
adc
mov
dec
mov
movsl
add
and
mov
fwait
pop
das
fcoms
xchg
dec
mov
idivb
int
sbb
jns
aam
addl
cld
dec
fisttpll
pusha
push
inc
pop
push
cmp
or
ja
pusha
in
fstpl
push
inc
orl
lcall
lea
mov
add
and
adc
cmp
or
sub
lahf
pop
or
cmp
daa
sbb
es
sbb
aaa
sbb
and
stos
in
clc
je
int3
mov
mov
add
pop
and
repnz
cmp
adc
out
mov
clc
push
xchg
xor
pop
xlat
outsb
sti
aad
test
repnz
pop
out
hlt
pop
inc
or
jg
out
or
jl
insl
mov
jb
pushf
add
fistps
ljmp
hlt
jnp
ja
mov
adc
and
or
lret
addb
adcb
stos
push
xor
jb
mov
lods
dec
cli
push
sub
inc
sbb
xchg
sahf
inc
pusha
test
mov
dec
shlb
jmp
cmpsb
nop
adc
sub
push
inc
sbbb
push
cmp
mov
fsubrs
sub
mov
adc
mov
cwtl
fisubrs
orb
xorl
rorb
les
pop
jb
pop
daa
loop
cmp
mov
aad
lret
sub
outsl
pop
aad
dec
sarb
xchg
enter
jns
xchg
movsl
pop
loopne
push
stos
out
mov
cmp
fwait
mov
fists
xor
xorl
icebp
jge
mov
addb
cmpsb
loopne
or
data16
lret
pushf
sbb
pop
xor
sbb
sub
and
imul
mov
dec
pop
rorb
inc
adc
shl
push
mov
pop
inc
sbb
or
js
jge
fwait
push
or
push
push
rol
pushf
mov
lods
out
pop
xor
fnstsw
inc
xor
js
clc
je
and
in
arpl
mov
mov
js
mov
cmp
jnp
out
stos
mov
popl
inc
push
xor
and
into
inc
ret
loopne
repz
aaa
pop
push
sub
pusha
fnstcw
lcall
out
fcom
adc
das
add
cmp
mov
adc
cmp
dec
inc
xor
push
adc
pop
das
or
outsb
sbb
sub
or
les
inc
cmp
movsl
sti
sub
mov
test
jns
xor
inc
sbb
pop
dec
aaa
jo
mov
cli
mov
jne
je
rcl
lret
xor
jne
pop
push
and
cmp
test
pop
lds
mov
cmpsb
sbb
test
dec
insb
adc
mov
idiv
adc
inc
ret
push
xchg
mov
push
fisubl
push
mov
dec
and
data16
jmp
je
out
jno
cmp
cmp
jge
jp
stos
rcl
roll
cwtl
sub
or
sbb
mov
fwait
mov
mov
dec
xchg
sub
sti
xchg
inc
fstpt
ret
mov
mov
icebp
sti
std
mov
sti
mov
sbb
xchg
add
or
push
ss
repnz
push
leave
mov
sub
pop
hlt
std
pop
mov
xchg
ss
mov
xchg
stc
pop
out
ret
call
bound
pop
stos
es
sub
sbb
test
lcall
call
mov
dec
jmp
xlat
stos
mov
fbld
push
sbb
test
rep
push
dec
popf
lret
adc
sub
inc
sbb
push
jl
push
mov
adc
std
mov
inc
pop
test
push
mov
jge
and
mov
dec
xchg
mov
mov
add
nop
sbb
add
and
je
decl
stc
fsubs
and
les
mov
inc
sbb
js
es
adc
pop
fidivrs
xor
mov
cmp
adc
jns
and
and
pop
nop
jbe
sub
lods
mov
add
mov
fld
cmp
inc
test
loop
in
push
jb
xor
dec
movb
cmp
subb
stos
xchg
fidivrl
add
sarb
push
lods
push
subb
sbb
fbld
iret
xchg
inc
jae
fisttpl
pop
in
fidivs
pop
invd
mov
ret
push
ja
inc
mov
xchg
fistl
jb
daa
jle
test
lret
cmp
sbb
mov
js
jo
jg
inc
cld
loop
or
adc
inc
icebp
and
xchg
mov
mov
xor
jmp
insl
pop
xor
movsl
imul
fisttpl
int
lods
out
cmpsl
ret
flds
add
xor
in
jbe
xchg
mov
cmc
sub
or
fst
mov
in
mov
inc
xor
sbb
aad
mov
dec
cmpsb
int
mov
lds
xlat
insb
mov
add
in
mulb
jmp
cmp
iret
pushf
push
and
push
insb
scas
lock
cltd
dec
jg
rol
imul
xor
add
ss
scas
ljmp
cmp
jno
xchg
mov
ret
rorl
xor
jne
jae
pop
mov
mov
movsl
das
and
xchg
push
inc
cwtl
lcall
insl
bound
leave
lret
lds
cwtl
push
cld
or
ret
mov
mov
decl
aas
pop
xor
and
icebp
arpl
add
xchg
add
pop
addb
pop
and
push
lods
inc
lahf
xchg
sti
dec
fmul
fs
int3
aad
shll
sbb
inc
test
pop
lret
aas
mov
sub
les
push
mov
pop
das
or
imulb
out
push
das
int
add
fstl
inc
arpl
xor
lock
mov
mov
jmp
mov
jg
xchg
xor
nop
adc
in
movsl
xchg
jae
jnp
add
int
stos
adc
jo
sar
scas
orl
xchg
xchg
dec
popf
lret
mov
push
cmp
cmp
adc
mov
pushf
lds
jl
sub
repz
scas
sub
xor
dec
push
roll
jg
inc
js
cmc
cmpl
push
jg
imul
pop
xor
dec
mov
ffreep
mov
adc
int3
out
cli
xchg
mov
enter
scas
jp
test
gs
imul
adc
in
add
std
fistpl
mov
mov
out
adc
sbb
push
out
je
and
dec
inc
mov
pop
mov
dec
hlt
xlat
sub
shrl
sbb
adc
cmp
mov
test
lret
xor
mov
addr16
fnsave
fistl
add
gs
in
inc
inc
sbb
push
jecxz
sub
repnz
rolb
xlat
lods
pop
and
cld
cli
xor
jecxz
mov
aaa
cld
mov
lea
xchg
jmp
sbbl
add
inc
xor
jge
mov
pop
lock
subl
push
adc
insl
sub
fbstp
sbb
sub
adc
rol
push
jo
lods
mov
xor
je
add
or
push
shlb
jle
jle
mov
stos
popf
iret
and
jnp
dec
dec
push
add
cmp
jne
dec
lods
xchg
mov
mov
xorb
js
je
fistpl
jmp
loopne
inc
cmc
cltd
lcall
fs
mov
inc
sbb
jae
dec
bound
xor
stc
xlat
lret
mov
cld
mov
push
sub
mov
fldl
js
inc
sbb
mov
test
and
imul
enter
or
cs
add
ret
dec
add
rol
cmpsl
pop
jo
test
xlat
jg
xor
ret
test
sarb
out
divl
add
dec
daa
dec
cmp
push
nop
mov
lret
push
sub
xchg
ret
sbb
rcll
and
xchg
jns
add
push
ret
inc
jmp
cli
lahf
jmp
fimull
jle
mov
xchg
mov
out
and
mov
arpl
and
sbb
dec
movsb
mov
movsb
sbb
mov
gs
xor
in
in
cmp
and
dec
xor
imul
ret
outsl
dec
jl
cmpsl
mov
aad
inc
lods
cli
and
fmul
out
or
inc
sub
lahf
jo
dec
fbld
jbe
mov
fists
shll
ret
pop
pop
xchg
roll
into
fdiv
push
addb
cmp
xchg
rcrl
scas
lcall
lods
pusha
sbb
call
xor
ret
mov
in
lret
cmpsl
out
sbb
and
add
or
jno
inc
sbb
mov
push
and
or
jnp
addr16
and
xchg
mov
stos
divl
nop
adc
push
dec
loopne
js
loop
cltd
enter
jg
inc
push
cli
mov
or
sbb
sub
mov
gs
fdivl
addl
mov
lea
jg
jg
cmp
and
sti
mov
add
sub
jecxz
scas
pop
je
jmp
leave
fdivrl
jno
js
call
xor
cmp
mov
fisttpl
adc
ds
pop
out
adc
and
xchg
mov
dec
or
xchg
cmp
popf
fwait
and
inc
xor
cmp
in
pop
out
jmp
jg
ss
repz
in
icebp
pop
sbb
push
adc
pushf
and
mov
adc
pop
leave
hlt
push
lret
cmpb
insl
test
xchg
jmp
sub
xor
shlb
cmp
push
xchg
cltd
test
and
cltd
enter
rcll
add
push
jno
pop
add
lret
decl
mov
clc
insb
insb
and
push
mov
and
rep
cmp
cmp
scas
out
and
in
dec
fwait
inc
aas
mov
mov
outsb
aaa
mov
pop
push
js
adc
mov
popa
ret
popf
sbb
test
inc
loopne
lods
push
adc
dec
or
fbstp
cs
in
fnstsw
je
popf
sahf
fnstenv
sbb
js
data16
adc
ljmp
xchg
fbstp
movsl
outsb
dec
iret
dec
loopne
sub
adc
movsl
cmpb
push
cmc
add
sahf
scas
mov
mov
mov
loopne
sbbb
in
testl
inc
loopne
aam
repnz
or
adc
mov
jp
inc
jle
and
loopne
cmp
xor
dec
rcll
xchg
incb
pop
orl
push
jne
fidivs
add
jg
fmuls
das
pop
mov
mov
mov
and
jp
mov
xlat
hlt
mov
inc
mov
ja
push
mov
sbb
mov
mov
int
jl
cwtl
lret
movsl
mov
nop
push
xchg
dec
pop
jb
fnstsw
mov
stc
cmp
aas
rclb
aaa
mov
bound
ret
rcrb
xchg
je
mov
or
inc
ret
add
sub
adc
mov
movsl
test
push
mov
or
inc
or
bound
dec
fdiv
xor
arpl
idivl
mov
pop
push
or
pushl
pop
pop
popf
fwait
pop
imul
lock
stos
and
nop
fisttps
cwtl
xchg
cmp
data16
adc
pusha
xchg
cli
xor
ret
sub
ficomps
dec
push
orl
cmp
dec
mov
cmpl
dec
sbbb
cmpsl
adc
mov
lret
in
inc
outsl
outsl
jbe
out
mov
adc
push
aad
jp
mov
in
xlat
xchg
xlat
stos
dec
mov
xchg
jecxz
dec
sbb
sub
repnz
int
iret
sbb
rcrl
sbb
push
test
lret
xlat
cltd
cmpsl
push
stos
test
ja
inc
jns
and
xchg
adc
lret
xorb
xor
lods
xor
ret
pop
lods
inc
pop
mov
dec
push
aaa
fwait
leave
loope
repz
ss
add
or
mov
cmp
and
jae
xor
pop
mov
dec
movsl
jmp
movsb
inc
add
fdivrs
cmp
mov
mov
or
js
push
sub
jnp
fisubrs
repnz
repnz
insl
pop
add
and
lea
or
cs
mov
lods
popl
xchg
out
jmp
jae
test
inc
iret
negl
lds
aas
shlb
and
hlt
in
xchg
dec
jg
xor
mov
cmp
lret
subb
xchg
inc
mov
pop
out
cmc
scas
lods
mov
popf
in
push
inc
imul
stos
jmp
and
or
xchg
ljmp
adc
dec
push
push
lods
repnz
scas
dec
xorb
mov
stos
push
scas
cmp
mov
xor
mov
subl
inc
xor
aas
inc
xor
and
popf
jno
push
adc
dec
xor
xor
aaa
popf
icebp
call
ss
mov
bound
mov
movsl
mov
sti
test
repnz
mov
xchg
fadds
aas
inc
test
cmc
hlt
or
jno
push
jmp
cwtl
movsb
cmc
imul
iret
sbb
jne
mov
sbb
rclb
mov
push
add
fsubrl
pusha
bound
repz
dec
and
cli
dec
test
ljmp
mov
into
jle
fucomp
jb
lret
pop
push
ret
xchg
lret
jecxz
push
cld
xor
sbb
scas
xchg
lcall
notb
lcall
pop
push
shrb
pusha
cmp
sub
adc
and
and
xor
fiadds
xor
rcll
xchg
ds
xchg
int3
fwait
push
jmp
sbb
aas
jp
pop
inc
push
std
dec
xor
add
cmpsb
fsqrt
call
sti
mov
in
jne
repz
lret
jecxz
enter
mov
out
mov
dec
pushf
mov
sub
popa
mov
cwtl
sarl
pop
inc
stos
shrl
mov
jecxz
cmp
and
mov
lret
jecxz
gs
mov
pusha
mov
mov
add
and
imulb
iret
cltd
enter
jne
dec
sahf
fwait
scas
push
test
lret
push
lahf
cli
dec
imull
lret
xor
outsb
shll
mov
sub
fsubrl
pop
shlb
imul
adcb
lcall
mov
negb
rcrl
mov
pop
icebp
lcall
push
outsb
sbb
dec
fistl
mov
flds
add
pop
out
mov
aas
mov
je
cli
sahf
or
imul
fld1
lahf
jge
lods
pop
pop
pop
call
nop
aam
mov
dec
inc
xlat
test
in
aad
sbbb
mov
shl
push
adc
mov
call
adc
cmp
es
out
hlt
jns
jnp
mov
lock
push
mov
shl
or
outsb
xor
mov
jno
lret
dec
sub
lahf
andb
push
stc
pop
in
xchg
lcall
les
icebp
jo
adc
adcb
clc
jb
and
insb
sbb
jae
ss
lock
lds
sbb
ret
push
jno
jecxz
jge
jg
mov
xor
fcmovbe
clc
addb
mov
in
pop
xchg
sbb
mov
adc
bound
cmp
push
mov
fisttps
add
rolb
mov
ret
and
inc
imul
call
lds
push
lock
jp
add
sbb
or
inc
xchg
mov
out
jno
hlt
adc
fisubs
clc
jnp
mov
mov
mov
mov
push
pop
inc
scas
movsb
js
gs
mov
outsb
sub
inc
xchg
pop
icebp
push
test
or
lahf
lcall
dec
popf
imulb
fsubrs
jo
lcall
sbb
xchg
imul
and
cli
sti
sub
xchg
inc
mov
std
add
sbb
insb
mov
mov
dec
std
pushf
rcr
add
fdivrs
scas
imul
add
push
or
inc
jecxz
jmp
inc
and
gs
mov
arpl
cmpsl
gs
xchg
mov
pop
pusha
ds
leave
jecxz
mov
sub
mov
popf
fwait
sub
aad
enter
dec
adc
push
mov
pushf
dec
pop
movsl
dec
add
in
mov
jae
jg
or
aaa
mov
popf
ret
mov
lock
sbb
dec
sbb
fdivs
jnp
enter
stos
push
xorl
inc
mov
jbe
fwait
hlt
sbb
bound
xor
add
sbb
lods
sub
xor
enter
cmp
test
pop
lret
mov
fidivs
cli
aad
shll
push
fisttps
repnz
leave
stos
xor
mov
jmp
fnsave
add
filds
or
xchg
icebp
popa
sbb
cwtl
bound
sahf
mov
fsub
push
jae
enter
out
mov
jo
fwait
xlat
xchg
lahf
fs
jb
and
imul
jb
sbb
popa
xchg
dec
pop
mov
pop
add
ljmp
or
and
cli
popa
fwait
cwtl
sti
sbb
push
imul
sbb
pop
dec
aaa
inc
cmp
or
mov
ss
sbb
imul
jne
jno
push
test
mov
jecxz
stos
rcr
fucom
cli
test
popf
sbb
stos
insb
pop
int
cmp
lds
mov
dec
mov
push
add
lock
mov
fstps
jb
in
lds
insb
cld
and
inc
jb
dec
stc
xor
cmpsl
xlat
adc
mov
fstps
pushl
xchg
int
cmp
push
lcall
mov
cli
repnz
imul
cmp
dec
cmp
fs
inc
sub
bound
jle
mov
fsubrl
and
dec
inc
mov
rol
aad
lret
gs
adc
jge
shl
mov
gs
in
mov
pushf
xor
mov
gs
mov
dec
mov
jne
in
mov
enter
mov
jnp
subb
xor
jno
pop
lret
xchg
xchg
adc
cmp
cltd
int3
sarl
cmc
mov
ljmp
subl
mov
xchg
shl
lock
cmc
and
test
inc
lret
push
hlt
pusha
add
and
in
sbb
pop
mov
mov
bound
ret
push
mov
sub
sub
xor
je
mov
or
rcrb
or
sub
inc
test
pop
xor
sbb
aaa
add
mov
xchg
pop
test
enter
jno
scas
dec
mov
arpl
clc
mov
pushfw
mov
inc
mov
shlb
sub
xchg
sub
lret
jnp
push
popa
sub
mov
fwait
cmpsl
shr
jecxz
fsts
fwait
jl
incl
enter
int
dec
repz
stc
push
pop
arpl
mov
dec
jo
cmp
lds
out
xor
xor
aad
pop
adc
push
test
mov
xchg
aas
sti
scas
mov
add
push
ret
arpl
popl
pushf
sahf
and
push
and
push
adc
push
std
cld
js
cmpsl
nop
xchg
sbb
sbb
inc
push
ja
aam
mov
mov
lahf
test
xchg
sub
lea
stc
push
mov
cmp
cwtl
mov
mov
mov
mov
test
bound
pop
test
movsb
nop
into
test
daa
push
out
push
add
fld1
jb
push
jl
pop
std
jns
imul
xchg
push
sbb
inc
jg
scas
or
loop
adc
jmp
fiaddl
and
push
or
push
push
pop
lcall
or
adc
add
jne
out
push
fwait
pusha
mov
movsb
pop
sub
lock
or
push
leave
cmpsl
jmp
pop
adcb
pop
clc
or
stos
iret
out
xchg
push
xor
jne
cmc
das
push
dec
jae
insb
mov
jge
push
aas
push
sbb
sbb
jl
popa
sub
les
push
fldenv
push
xchg
jne
push
jns
jge
fadd
fs
push
inc
cmp
push
mov
mov
idivl
js
stc
mov
sub
cmp
and
out
pusha
inc
shlb
pop
push
aad
sub
mov
mov
leave
aad
inc
daa
popf
mov
dec
icebp
call
xlat
adc
popa
js
inc
leave
inc
xor
and
xchg
sub
movsl
inc
sbb
or
jbe
inc
sahf
mul
jle
ja
xor
pop
je
hlt
in
mov
mov
xchg
or
sbb
inc
outsb
pop
mull
fstpt
add
mov
in
or
sub
pusha
adc
mov
shr
mov
sbb
nop
cmp
jmp
or
stos
cmpsl
lock
jno
cld
cmp
ret
xor
or
inc
pop
push
add
mov
cs
pop
ret
jnp
enter
lahf
es
xchg
shr
repnz
add
jmp
addl
sub
or
js
enter
xchg
lock
mov
adc
test
daa
rcrl
test
mov
out
jo
inc
dec
fnsave
sti
dec
ss
xchg
enter
mov
mov
sbb
shr
mov
imul
fpatan
ja
or
ljmp
stc
aas
lods
and
iret
fucomip
repnz
jecxz
add
dec
pusha
sub
addb
outsb
xor
xchg
lock
pushf
dec
cmp
fnstcw
mov
push
push
cli
sub
mov
sbb
mov
and
jge
xchg
gs
cmp
mov
mov
inc
xchg
add
cmpsb
pop
mov
mov
mov
push
mov
push
nop
mov
aad
int
pop
leave
repnz
add
pop
push
cltd
inc
jb
ja
aaa
xchg
add
andl
pop
ret
pop
and
mov
jge
dec
movsb
imul
adc
in
jno
cmp
ss
lods
das
jae
fsub
or
cs
sub
jecxz
or
loope
jl
dec
xor
out
mov
fnstenv
cmpl
cmc
fcmovnbe
into
inc
xchg
xchg
sti
jae
pop
add
movsb
push
cs
call
mov
stos
aad
or
ja
mov
jno
sbb
sub
xor
popf
jae
nop
mov
movsb
leave
dec
sub
jmp
sbb
sub
mov
mov
jp
repz
jo
in
mov
or
lds
ret
fcmovne
mov
mov
xchg
mov
push
inc
and
push
scas
repnz
loop
push
mov
mul
mov
or
rcl
incl
jle
insl
add
jno
xor
push
push
xlat
insb
fists
sbb
es
jle
or
bound
pushf
repnz
mov
sub
dec
push
mov
inc
xor
rorb
negl
dec
inc
mov
aam
add
cmpsl
push
cmc
js
add
mov
loopne
shll
std
jmp
mov
pop
lods
jnp
sub
fs
out
leave
fcompl
xor
fsubrs
fst
mov
inc
in
mov
mov
sbb
ljmp
popf
lret
mov
pop
fidivrs
pop
dec
add
push
adc
popf
xor
dec
xchg
jmp
and
and
pusha
push
dec
lret
jmp
jecxz
faddl
fnstcw
es
cmp
cwtl
add
add
out
mov
lods
adc
push
dec
jecxz
aad
push
sub
ret
xor
jnp
fwait
lea
lret
cbtw
dec
inc
pop
pusha
aas
imul
dec
push
or
add
loop
add
fadds
xchg
hlt
call
inc
jbe
mov
stos
jae
mov
out
cmp
mov
clc
sti
jle
minps
imul
rcrl
cld
or
mov
cwtl
or
ss
xor
inc
ja
inc
cmc
das
sbb
inc
frstor
inc
pop
fisubl
dec
lahf
xchg
push
ret
jp
sbb
dec
cltd
add
popf
mov
pop
stos
jne
inc
mov
dec
inc
stos
lret
arpl
mov
je
jb
or
cld
ljmp
out
addb
pop
orb
pop
inc
mov
mov
push
cmp
insl
idivl
sub
cmp
jle
gs
mov
pop
fidivrs
fs
mov
data16
es
lcall
je
clc
xchg
sbb
fnsave
mov
and
mov
dec
fcmovnb
xchg
mov
pop
pop
sbb
ret
lock
mov
pop
mov
fsubl
lock
xlat
les
jmp
movl
sbb
cwtl
lret
lahf
jno
pushf
dec
sub
notb
xor
rcll
mov
mov
movsb
jb
popf
mov
mov
or
push
mov
cmp
mov
pop
dec
ja
pop
mov
or
in
xchg
cltd
lods
jl
fwait
pop
pusha
es
sahf
pop
mov
fsubl
jmp
subl
movsb
adcl
xchg
and
inc
clc
dec
xlat
adc
cmpsb
sarl
stc
ljmp
mov
or
pop
frstor
and
pop
ds
pop
hlt
pusha
scas
adc
out
mov
adc
jmp
mov
mov
popf
push
xor
cmp
cmp
lcall
mov
xor
sbb
idiv
nop
jb
xor
out
roll
jge
xchg
out
movsb
and
add
hlt
or
mov
fs
xchg
cmc
jge
notl
imul
fwait
xor
cmpb
dec
lock
add
fistpl
lcall
ja
sub
mov
aad
mov
movsb
loop
sbb
and
cmp
inc
cmpsl
inc
subl
or
pop
cmc
inc
adc
fsubrs
xor
mov
aad
mov
test
adc
adc
cli
out
test
fcomps
lahf
insb
stc
roll
fidivrs
and
out
or
sbb
mov
test
lcall
mov
iret
cs
shlb
stos
bound
inc
mov
mov
insl
pop
xchg
and
mov
cmpsl
mov
repz
jo
or
roll
inc
iret
adc
imul
xchg
push
stc
xor
push
dec
sbb
add
sbb
mov
daa
ret
fucomp
jae
jge
pop
mov
in
mov
add
cmp
int3
xchg
lret
mov
jb
lea
pop
xchg
jbe
test
sbb
mov
fsubrp
fidivl
fucomi
push
xchg
jle
scas
xlat
push
daa
loop
xchg
or
add
or
repz
push
out
pop
xchg
leave
mov
xchg
mov
ret
mov
push
mov
mov
and
flds
int3
and
cmpsl
xor
pop
cwtl
cmp
mov
push
pushf
lret
sub
imul
in
dec
mov
in
adc
sbb
push
call
pop
stos
fistpl
lahf
mov
cs
mov
in
lret
mov
arpl
or
sbb
lock
inc
sub
mov
mov
mov
stos
mov
fildll
test
mov
add
out
mov
lahf
stos
jb
jp
sbb
orl
and
bound
int3
add
dec
or
test
test
pop
push
mov
sbb
or
and
aas
mov
rcll
xor
jae
mov
or
pop
stos
mov
adc
add
pop
mov
adc
mov
adc
clc
adc
sbb
pop
fisubs
cmp
lods
or
enter
rol
cld
cmp
enter
or
xor
ret
mov
jecxz
mov
cwtl
mov
mov
cwtl
aam
inc
pop
pop
inc
pop
loopne
dec
adc
cmp
xor
in
lret
ret
jnp
mov
sub
movsb
orl
frstor
mov
xor
dec
cli
outsl
xor
decb
test
outsl
pop
cmp
enter
lret
sahf
ljmp
push
or
mov
bound
mov
xchg
inc
mov
scas
push
mov
data16
lds
fcompp
mov
dec
push
pop
jbe
cmpsb
adc
xlat
xchg
xchg
sub
scas
call
fbld
or
mov
sbb
std
icebp
mov
mov
xchg
leave
mov
push
cwtl
dec
imulb
push
fidivrl
mov
pop
mov
jl
call
pop
mov
sub
mov
mov
sbb
xchg
inc
mov
adc
imul
sahf
cmpsl
push
pop
pop
test
add
cmp
arpl
addl
sti
inc
cmovbe
jecxz
add
in
ja
mov
inc
or
or
cmpsb
dec
rcrl
mov
mov
add
add
stos
and
adc
adc
lods
xchg
int3
icebp
mov
aas
aaa
rcr
ljmp
js
hlt
mov
repz
lods
cmp
addb
ret
insl
pushf
xchg
xor
lret
ja
vpshufhw
test
aad
dec
push
addr16
xchg
popf
fdivrp
and
fisttps
and
mov
clc
repz
stc
out
xor
repnz
sti
xlat
pop
adc
lods
push
sub
cmp
arpl
out
rcr
sbb
les
xchg
xchg
sbb
fmul
pusha
adc
fcompl
jle
arpl
sbb
or
cmp
jmp
adc
lds
xor
jbe
jne
aam
std
jno
dec
je
hlt
add
push
mov
ljmp
mov
decb
jle
cli
ja
mov
jno
ds
hlt
sbb
add
push
mov
cmpsb
push
sbb
bnd
mov
xor
lret
shll
xor
insb
inc
addr16
test
mov
les
in
cld
stos
inc
lcall
fisubl
sbb
arpl
cmp
fs
incl
stc
sub
mov
clc
rcrb
adc
mov
and
sub
mov
sti
aad
pop
mov
das
xchg
push
daa
dec
repnz
cwtl
insl
pop
js
call
xlat
xchg
fldlg2
push
mov
and
sbb
mov
int
and
push
dec
mov
fdivrs
mov
adc
mov
shl
cmp
ja,pt
sbb
mov
sar
loope
xor
popf
cmp
lahf
mov
xor
sarb
ret
shl
mov
inc
imul
mov
xlat
dec
push
or
jae
hlt
jmp
sti
xchg
mov
adc
sbb
push
shll
jo
leave
bound
rorl
push
or
fldcw
pop
fs
mov
fistl
lcall
int3
xchg
fildl
mov
adc
jge
cli
test
sbb
pusha
aam
jns
push
sbb
js
or
jbe
adc
push
and
jmp
insb
enter
movsb
rclb
imul
push
dec
test
cltd
in
cmp
shll
inc
cltd
rcll
int
rcrb
sub
mov
and
mov
shlb
int3
jp
lea
imul
lods
jg
fsubrp
push
sbb
dec
out
hlt
jle
mov
xchg
adc
sbb
add
inc
sbb
mov
faddl
lret
push
stos
sbb
xor
mov
xorl
mov
lods
mov
out
dec
push
mov
xchg
mov
ret
add
mov
cmpsl
mov
fwait
add
jge
sbb
adc
or
test
pop
or
aas
mov
jecxz
pop
pop
iret
push
jb
adc
push
push
jo
adc
fcomi
popa
or
out
sbb
daa
movsb
out
into
les
mov
aam
push
in
inc
jnp
imul
mov
add
sbb
arpl
out
add
out
or
call
sbb
bswap
push
cmc
leave
jns
and
fbld
xchg
shrb
inc
cmp
push
insl
sbb
into
sbb
in
addr16
and
fstl
push
mov
or
adc
jae
loopne
int3
pop
inc
movl
je
out
or
std
movb
in
mov
fs
adc
divb
hlt
dec
sbb
push
dec
pop
add
fimuls
sub
jle
xchg
ret
add
jge
add
pop
xchg
pushf
stos
xchg
stos
std
jns
sub
movsl
leave
sub
xchg
cmp
shlb
inc
lret
dec
pusha
mov
movl
jle
sarb
js
cmp
or
xchg
adc
push
xchg
js
sbb
dec
and
push
fdivrs
jp
ljmp
mov
cmpsl
ret
rcr
push
mov
jae
out
in
mov
in
xchg
test
bound
lea
movsl
stos
xchg
fisttpll
push
scas
shr
sub
ds
mov
js
xor
mov
fs
mov
jl
mov
insl
lcall
mov
and
mov
data16
mov
add
push
sbb
mov
inc
inc
pop
iret
sbb
in
mov
add
mov
push
cld
jae
push
stos
jge
jns
and
mov
dec
mov
test
xor
mov
add
icebp
adc
js
adc
jae
or
push
xchg
pusha
add
outsl
addr16
pushf
pop
ds
dec
mov
rorb
dec
mov
sti
fs
ret
cli
outsl
jbe
and
fisttpll
std
ror
cwtl
cmp
out
sbb
test
enter
jno
das
jne
sub
and
cmp
fsubr
mov
test
negl
les
inc
lods
xlat
imul
lds
loopne,pt
jg
std
jg
add
orb
jno
push
cmp
orl
push
xchg
call
sarb
push
mov
pop
sub
mov
in
mov
cli
int
jbe
into
xchg
stc
cli
out
subb
data16
and
xchg
movsl
sbb
xchg
push
pop
mov
movl
subb
add
adc
add
test
filds
mov
jne
outsb
dec
add
cmp
fs
adc
test
or
ret
jo
inc
test
and
orl
sub
adc
pop
jp
mov
hlt
mov
test
es
leave
roll
xchg
push
rolb
int
inc
push
popf
mov
mov
jnp
popf
popl
les
popf
sub
add
inc
hlt
inc
jmp
jl
jle
fcoms
cli
test
shlb
add
jae
adc
ret
sarl
and
or
jne
sub
ds
push
jbe
add
movsl
cmp
cmp
fists
pop
inc
jl
movsb
bound
lcall
xchg
dec
rorl
xchg
sti
lds
xchg
jle
pop
shrb
jnp
out
mov
adc
incb
into
sbb
aad
mov
sti
sbb
icebp
and
leave
xor
push
sub
dec
and
push
leave
iret
push
inc
pusha
jae
leave
lods
ljmp
cmpsb
xchg
outsb
ljmp
mov
scas
push
push
inc
dec
dec
inc
sarl
ss
out
lea
xor
jb
ret
clc
add
mov
mov
xor
ffreep
imul
jns
add
cltd
sub
add
sbb
adc
leave
inc
sbb
dec
xor
int
lret
mov
mov
push
cmp
fistl
inc
xlat
pop
pop
xor
les
dec
jbe
pushf
lock
leave
mov
pop
outsb
fmuls
lcall
xchg
push
rolb
lods
dec
mov
sub
adc
lds
cmp
cmc
sbb
sbb
js
jg
scas
std
inc
loopne
ljmp
movsb
adc
xchg
mov
fxch
jp
jns
sbb
insl
jmp
mov
sbb
daa
das
add
lahf
popl
add
mov
jg
hlt
pop
psraw
mov
fidivrl
data16
lret
sbb
xchg
jmp
pop
addr16
imul
pop
pop
adc
xchg
adc
pop
loop,pt
ja
jg
add
imul
add
xor
push
dec
add
rclb
imul
in
sbb
mov
mov
outsl
test
int
dec
iret
mov
fidivs
inc
mov
add
mov
int
imulb
push
add
jo
ljmp
sti
dec
push
add
xchg
into
and
fisttps
xchg
or
jg
pop
fldcw
xchg
xor
push
jecxz
mov
jne
decl
retw
adc
xor
aam
pop
mov
ficoms
test
stos
xor
shll
cmp
lods
push
fidivs
aam
sbb
or
fisubrs
fnstenv
sbb
add
mov
sbb
daa
jne
sti
loopne
mov
mov
adc
call
aam
stc
and
imul
xor
hlt
cmp
adc
vpsubsw
and
xchg
lret
bound
dec
sub
push
clc
mov
add
and
aas
jns
mov
in
fs
fmuls
push
test
jnp
pop
mov
push
aam
imul
mov
sbbl
jno
clc
pop
std
stos
lret
pop
andb
push
pop
push
jbe
int3
adc
std
test
mov
add
ret
jge
arpl
out
and
fs
pop
les
xchg
sub
jg
clc
neg
pop
cmp
in
movsb
mov
xchg
jo
ret
push
and
popf
mov
mov
lock
add
jb
loope
mov
cltd
mov
jns
xor
mov
rorl
adc
jle
imul
mov
inc
and
inc
inc
jmp
insb
jbe
push
fisttpll
rolb
stc
push
idiv
xor
repz
and
xlat
in
lret
out
jmp
lods
cli
aam
arpl
scas
pop
pop
lcall
cmc
fwait
in
mov
std
pop
sbb
mov
jge
scas
xchg
shl
movsl
add
dec
lcall
dec
pop
test
fmul
in
lret
gs
fstl
es
shrb
roll
mov
adc
pop
rorb
clc
call
mov
test
xchg
mov
icebp
hlt
loop
test
adc
cmp
out
subl
mov
sub
dec
outsb
jmp
shl
lods
test
insb
jb
fcompl
inc
adc
outsb
xor
lods
movsb
sti
int
gs
shr
sub
insb
mov
leave
sbb
subl
mov
in
sarl
lret
adc
outsb
cmp
xchg
mov
clc
mov
ret
jae
inc
inc
push
ret
dec
loopne
xlat
xchg
pop
stc
pop
movsb
aam
dec
sbb
into
cmpsb
dec
pop
mov
push
push
dec
scas
out
lds
sbb
enter
mov
in
jo
or
xor
inc
inc
pop
fcoml
mov
cltd
lods
push
mov
inc
xchg
bound
xlat
cld
adc
orl
insb
adc
and
sbb
mov
sub
add
dec
push
push
mov
xor
popa
mov
movsl
icebp
sub
inc
mov
mov
inc
enter
dec
xor
xchg
js
xor
popf
insb
mov
dec
xchg
loope
lret
dec
mov
fsts
mov
pop
imul
mov
ljmp
test
add
mov
adc
pop
mov
jg
movsl
mov
sbb
xor
sub
adc
sahf
cmp
mov
arpl
lea
fists
movsb
lahf
xor
data16
cld
mov
dec
xor
ret
int
lret
xchg
jp
cmp
stos
adc
popf
lods
xchg
sti
test
stos
sub
dec
shll
pop
fidivs
popf
popf
scas
je
pop
sbb
std
add
lcall
sbb
call
xor
xchg
stos
xchg
xchg
add
jno
xchg
add
sub
push
daa
jo
and
xor
lods
int
in
xor
mov
jl
dec
leave
push
inc
inc
imul
and
sub
sahf
loop
sbb
xchg
jp
stos
fcmovnu
mov
lea
cwtl
xchg
aam
cmp
mov
xbegin
pop
subl
or
mov
or
mov
push
mov
cmp
adc
subb
mov
mov
lods
push
scas
xchg
xlat
mov
inc
pop
jnp
and
les
and
push
ret
mov
mov
das
xchg
pushf
lds
cmp
mov
push
notb
lret
push
push
and
outsl
ret
cmpsl
ret
fld1
add
cmp
lahf
and
mov
movsl
jo
adc
sbb
inc
ret
fisubs
jne
fcmovb
repnz
xor
scas
inc
lods
xchg
xchg
push
test
adc
xchg
dec
or
ret
clc
adc
cmp
mov
fcom
int
xor
repz
xor
inc
add
fwait
rcl
lret
push
inc
daa
adc
adc
dec
fcmovbe
idivl
ret
outsl
cmp
xor
cmp
add
scas
sbb
sbb
addr16
add
xor
mov
cmp
pop
out
popf
push
sarb
dec
icebp
cli
pop
xor
mov
cmp
rcrb
out
or
pop
xlat
out
repz
pop
push
bnd
lcall
es
xor
pop
fldl
sub
push
lds
pop
and
popf
mov
pop
stos
pop
sarl
sbb
stos
or
push
sub
jae
dec
adc
std
mov
fists
sbb
mov
enter
faddl
fwait
jae
inc
fmuls
jge
adc
fildll
cld
add
xchg
loop
dec
pop
cmpsl
ret
add
es
popa
addr16
iret
pop
mov
cwtl
clc
data16
aaa
pop
mov
mov
lcall
sbbb
les
clc
flds
das
or
lds
jmp
mov
and
cmc
lret
push
scas
loopne,pt
cmp
xchg
pop
cmpsl
add
sub
fnstcw
jl
iret
cmpsl
aad
sarb
xor
rol
popa
outsl
jle
mov
inc
lret
ja
mov
cltd
imul
aad
lret
fucomp
fs
shll
sub
in
fs
lret
xchg
xor
sbb
jno
imul
mov
mov
add
sbb
pop
push
ret
fs
sbb
inc
xchg
pop
xor
int3
mov
jg
in
stc
pushf
add
jb
call
loopne
adc
test
ficompl
test
or
frstor
imul
jbe
jp
enter
shlb
rep
cmpsb
cmp
rcrl
int
mov
and
inc
jp,pt
sarb
cltd
inc
sbb
sbb
clc
mov
std
pop
mov
adc
divl
adc
stc
add
mov
repz
adc
aam
dec
aaa
inc
cmp
aad
inc
scas
pop
mov
mov
int3
in
lds
enter
outsl
insl
test
popf
sbb
push
leave
dec
loop
add
test
pushf
sbb
lock
mov
ljmp
loop
js
pop
int3
sub
cmpsl
push
mov
mov
push
into
fmull
or
add
in
ljmp
push
sbb
or
fs
imul
inc
pop
sub
mov
mov
push
sti
cmc
stos
rcr
mov
xchg
sub
mov
mov
inc
cmpsb
push
push
in
cltd
push
fcoml
inc
cmp
xchg
clc
pop
movb
in
mov
adc
pop
clc
xor
in
adc
mov
clc
mov
addb
inc
pop
fwait
or
sbb
xlat
leave
vmulpd
dec
loopne
arpl
jl
and
pusha
lahf
or
ds
mov
cld
jg
xchg
sub
outsb
aaa
and
fldenv
xor
lds
icebp
shl
fisttpll
jne
mov
jmp
bsf
stos
cmp
pop
sbb
mov
insb
ss
ret
dec
cmpsb
xchg
pop
fildl
mov
xchg
in
add
addl
incl
stc
repnz
fwait
leave
cmc
xor
sub
addl
loopne
xchg
sbb
test
dec
mov
cmp
xor
xor
lahf
cmpsl
test
cli
sbb
outsl
scas
ret
add
mov
dec
dec
inc
cltd
add
inc
dec
sahf
hlt
arpl
fwait
cmp
gs
inc
push
xor
fisubs
hlt
fscale
inc
inc
stos
shr
adc
int
ds
aam
add
cmp
push
mov
out
xchg
pusha
xor
xor
hlt
jmp
fildll
in
jnp
mov
cmpsb
imul
xchg
nop
ret
xor
jne
loope
popa
adc
clc
ficompl
push
xor
jns
inc
rclb
ljmp
in
popf
arpl
and
and
mov
jl
adc
dec
sub
sub
nop
mov
insl
mov
rcl
cwtl
push
ljmp
lods
jp
mov
cs
mov
scas
addr16
leave
xor
mov
xor
rcll
out
dec
sarl
fimuls
imul
notb
jmp
push
rol
pop
mov
dec
xchg
daa
fnstcw
insl
jg
adcl
scas
loopne
jb
lods
sarl
add
cmp
adc
xchg
xchg
jmp
out
imul
scas
sbb
les
xor
clc
loopne
aam
pop
sbbl
mov
mov
adc
std
mov
sbb
and
ret
mov
mov
lret
push
imul
sbb
mov
fsts
mov
scas
ljmp
adcl
int
sbb
jae
or
cmpsl
or
lods
lds
cltd
push
aam
pop
sbb
fcoms
push
fisubrs
cltd
shr
mov
xchg
xchg
pusha
or
es
jg
add
cmp
ror
fsubrs
push
cmp
mov
fisttpl
roll
aad
test
mov
popf
lret
add
jmp
jne
push
inc
pop
lcall
rclb
cltd
dec
xorl
aas
inc
inc
lret
rcr
dec
int
jmp
cmp
cmc
pop
orb
cmp
cmp
into
push
dec
shll
inc
xchg
jae
enter
out
fbstp
sub
jecxz
adc
or
jno
addr16
mov
pushf
dec
and
scas
mov
xor
or
mov
push
out
sti
cltd
test
aad
mov
js
lcall
insb
add
and
push
jbe
outsl
sbb
mov
shll
cld
add
cmp
add
push
inc
icebp
adc
leave
loop
and
imul
aad
pop
ljmp
lret
mov
or
mov
test
adc
add
jae
sub
out
sub
fdivrl
xor
in
lock
pop
xor
ret
jl
xchg
inc
fxam
dec
daa
das
in
aad
pop
inc
sahf
negl
xor
pop
fidivrl
mov
pop
loopne
xchg
sbb
dec
mov
negl
in
or
pop
aas
setge
lock
test
pop
mov
inc
arpl
addr16
pop
mov
xlat
stos
orl
mov
dec
pop
push
mov
inc
in
mov
mov
pushf
jmp
sub
in
and
or
cs
fistl
xor
push
fsubrs
cwtl
push
fs
jge
movsb
stos
xor
sub
sbb
lds
and
xchg
sub
or
loop
push
orl
fdiv
idiv
pop
dec
shlb
mov
mov
pop
xchg
inc
pop
xor
push
sub
mov
xchg
inc
pop
shll
sti
adcb
test
jo
std
adc
inc
inc
sti
ret
mov
adc
shll
mov
mov
cld
out
shlb
mov
mov
inc
pushl
mov
and
ja
cmp
aas
shlb
je
lea
cli
sub
imul
lret
pop
dec
adc
lahf
sbb
mov
mov
in
dec
mov
sbb
jns
mov
lahf
xchg
in
sbb
jb
mov
imulb
push
xor
pop
push
outsb
les
or
popa
lods
jle
sub
sub
fcmovb
pusha
mov
dec
add
popf
lahf
cmp
cwtl
jbe
mov
jne
mov
adc
insb
cmp
daa
xchg
int
mov
cmp
movsl
ret
push
jle
cltd
aad
push
ja
enter
ret
mov
add
divl
mov
add
inc
out
mov
mov
sahf
rorb
mov
pop
lea
mov
cmp
mov
cli
cmp
jg
or
fdivs
divl
dec
xchg
or
das
push
lret
cs
sar
in
cmpsl
mov
xchg
cltd
imul
or
pop
mov
lret
das
rcll
pop
aad
mov
mov
mov
pop
add
insb
add
mov
pop
orb
mov
mov
jmp
jae
les
ret
push
cmp
cli
ficoml
fildll
sbb
pop
sub
cmp
cmp
cmpsb
sbb
add
mov
addr16
jns
js
jne
mov
adc
cmp
inc
inc
dec
push
out
out
cwtl
ret
fld1
cmp
fwait
lea
clc
cltd
mov
mov
sub
xchg
pop
adc
jmp
int
xchg
dec
mov
mov
test
cmpl
inc
sbb
jge
mov
mov
in
imul
pop
sub
add
adc
add
cmp
cmp
jne
xchg
fcompl
jge
les
mov
test
inc
int
mov
xchg
dec
popf
out
mov
lock
jae
insl
mov
inc
push
sti
inc
sbb
sub
push
into
jmp
add
scas
test
inc
pop
cli
insl
xor
mov
sbb
xchg
es
dec
push
clc
mov
or
bound
pop
sub
mov
shll
mov
rclb
inc
mov
sbb
stos
cmpsl
sti
xor
aam
and
cmp
push
cmpsl
lret
adc
loop
pushl
in
pop
aad
shlb
outsb
rorb
or
int
mov
pop
subb
inc
push
mov
mov
jle
sti
adc
int
int3
mov
pop
mov
rcr
jecxz
inc
lock
mov
adc
leave
ret
push
popl
xchg
sbb
add
mov
jl
insb
dec
adc
lahf
push
and
sahf
sbb
scas
pop
pop
cmp
mov
mov
cld
jl
test
add
addb
fsts
fimull
xchg
lcall
dec
pushf
rolb
sub
push
cmp
mov
inc
fs
jecxz
adcl
sub
lret
faddl
pop
adc
xchg
aas
movsb
fisttps
fdivrs
adc
mov
mov
ja
mov
ds
loopne
cltd
enter
fbstp
mov
sbb
test
cmp
jmp
sbb
adc
xchg
mov
fisttpll
push
leave
push
sub
aas
filds
mov
mov
sbb
loope
out
in
mov
test
sub
lods
pushf
or
mov
jno
out
mov
pop
pop
pop
adc
in
push
dec
mov
adcb
push
mov
in
call
shlb
stos
inc
loop
test
vprotq
int3
fbstp
mov
mov
fs
shrb
stc
jmp
lea
lahf
push
idivl
test
movsl
sbb
jo
xchg
fcomps
es
jmp
push
iret
out
in
sub
adc
pop
pop
mov
cmpsb
imul
jbe
popa
imul
inc
fcomp
insb
aaa
and
movsb
out
fildll
adc
pusha
cmp
out
cmpsl
cmp
ja
cltd
iret
movsl
inc
mov
pop
sbb
ret
adc
cld
sbb
repz
das
cld
xor
pop
test
add
fldl
lea
iret
mov
dec
movsl
mov
adc
adc
cmpsl
sbb
lods
xor
lret
movsl
cwtl
lock
push
and
incb
insl
jnp
fisttps
test
or
dec
cmpsl
pop
testl
nop
fwait
add
xor
xchg
dec
data16
nop
mov
cmpsl
sbb
push
and
popf
scas
leave
fcmovne
sbb
dec
add
in
imull
jno
sbbb
dec
mov
out
call
fidivrl
jmp
or
push
ds
enter
pop
cmp
int3
jb
fwait
outsl
push
or
sbb
lods
sbb
push
aaa
sbb
shl
fwait
mov
jne
fsubl
dec
inc
sub
jbe
pop
stos
add
cmp
pop
not
sub
ja
mov
mov
jnp
stos
xor
jns
lods
inc
fdiv
cld
in
jns
loop
pop
cwtl
lret
movsl
scas
lcall
clc
stos
lahf
rcl
and
sahf
sbb
cmp
jae
jp
out
inc
adc
daa
ss
push
mov
inc
xchg
push
sbb
push
dec
cwtl
push
dec
xchg
sar
repnz
cmc
pop
rclb
stc
jge
inc
add
lahf
xlat
dec
pop
cmpsl
push
push
icebp
leave
gs
lods
mov
add
inc
jbe
je
jge
dec
stc
xorb
sub
cltd
push
mov
xchg
push
scas
adc
pop
pop
idivl
ljmp
stos
mov
xor
mov
adc
mov
pop
adc
clc
inc
es
dec
sahf
call
int
decl
adc
js
sbb
test
nop
add
and
mov
sti
lret
cmp
aam
loop
in
ja
jne
jge
adc
mov
or
jbe
lret
xchg
adc
stos
repnz
imul
inc
fists
loope
mov
fldl
scas
stos
dec
bound
das
mov
clc
xchg
sbb
pop
mov
mov
xor
lahf
mov
aad
mov
cltd
mov
test
lret
repnz
inc
adc
cld
adc
aaa
lahf
push
xor
inc
mov
push
xchg
pop
mov
adc
inc
mov
inc
mov
test
sub
ja
mov
es
mov
push
ret
or
adc
insb
mov
pop
test
adc
or
cs
sbbl
dec
fdivl
call
sub
je
adc
inc
mov
mov
cld
pop
hlt
mov
lea
pop
loop
jae
paddq
mov
mov
and
lret
jns
rcll
xor
mov
imul
and
rol
orl
je
dec
inc
cmp
outsb
push
cld
cmp
lods
repz
fdivl
mov
pushf
ljmp
out
sbb
mov
xchg
sub
pop
paddd
cmp
inc
mov
fnsave
mov
jl
repz
and
or
imull
aam
aam
repnz
dec
adc
xchg
jnp
mov
add
xchg
xor
sbb
and
mov
test
mov
dec
aaa
mov
ret
or
adc
pop
enter
mov
inc
push
lcall
pop
jbe
scas
mov
sub
mov
jge
pushf
sub
cli
inc
test
dec
sub
or
lods
divl
mov
jecxz
in
ret
inc
stos
ss
add
cwtl
lret
stos
adc
js
repnz
xor
push
or
pop
xchg
lret
pop
inc
or
xchg
shl
push
scas
jo
fisttpll
stc
push
test
mov
mov
add
fistl
arpl
cmp
jbe
sbb
push
movsb
stos
pop
iret
popf
ss
movsl
sbb
cmc
mov
repz
push
mov
mov
test
cmp
add
cmp
clc
loop
mov
xor
adc
test
inc
adc
mov
and
cmp
pop
dec
inc
push
mov
pop
xchg
push
mov
dec
cltd
jecxz
sbb
aad
ja
mov
and
out
cmp
push
scas
shr
rep
popf
div
stos
les
xchg
decb
js
xor
xchg
mov
dec
cmc
cmp
sub
mov
push
or
movsl
loop
cwtl
bound
test
nop
movsb
shl
or
pop
stos
pop
push
and
mov
jae
fisubl
and
aaa
ret
xchg
shrl
sub
jp
into
aaa
inc
mov
cmpl
dec
pop
imul
pop
push
jbe
xor
pop
push
shlb
jecxz
inc
sbb
das
add
cmp
ds
popa
addr16
test
sahf
jo
mov
adc
rolb
subl
xor
push
ffree
inc
scas
push
xlat
add
test
add
adc
mov
mov
and
mov
jg
incl
xchg
mov
sub
jge
lods
jmp
mov
push
adc
adcl
out
mov
xor
add
loopne
mov
mov
shrl
aas
call
int
cmpsb
ret
mov
jmp
mov
ret
xchg
mov
mov
fs
sahf
cmp
xchg
or
sbb
mov
scas
and
mov
rclb
repz
dec
xor
test
adc
push
and
hlt
mov
inc
cwtl
movsb
shll
cmpsb
js
lds
xchg
cmpb
or
fs
mov
or
rcrl
mov
jno
leave
push
mov
adc
sbb
mov
push
pop
mov
xchg
push
test
cmp
jmp
loop
hlt
js
jmp
jnp
and
inc
cli
int3
inc
inc
sbb
xor
and
adcl
ja
fstpt
pop
inc
pop
out
scas
rcr
adc
fdivr
sbb
cmp
inc
inc
cmp
rclb
pop
lods
sbb
imul
xor
lods
inc
insl
movsb
sarl
in
das
stos
cmc
std
clc
jl
cltd
fimuls
mov
add
cmpsl
mov
and
orb
dec
jbe
mov
cmpsb
mov
fisubl
and
xlat
fistpl
xchg
inc
push
mov
or
push
aaa
fwait
ret
push
rcll
ret
push
rclb
mov
andl
loopne
popa
jo
xchg
jo
xor
mov
insl
repnz
inc
ds
shrb
sbb
ja
cltd
or
jp
dec
add
or
mov
ljmp
xor
dec
in
mov
fwait
lret
xchg
inc
arpl
push
ds
fsts
mov
jle
les
sub
lods
lcall
jno
pop
js
stc
jae
sbb
lock
fcmovnb
hlt
xchg
ljmp
ja
mov
xbegin
xor
jge
sub
push
inc
push
dec
push
lahf
sbb
xchg
push
lret
xchg
sti
mov
clc
jl
sbb
jae
add
mov
cld
and
ds
mov
clc
mov
stos
lret
test
pushf
adc
push
inc
nop
mov
jo
and
es
mov
rorl
data16
or
lds
imulb
inc
mov
push
xchg
mov
inc
cmpsb
mov
sub
das
mov
and
lahf
add
jmp
mov
jle
roll
repz
push
iret
lods
enter
inc
cmp
jbe
pop
add
xor
fcmovnbe
aaa
call
ret
loopne
xorl
push
fadds
jmp
loopne
dec
aaa
xchg
dec
sbb
repnz
iret
lds
lret
lods
add
push
and
jge
push
mov
dec
test
mov
icebp
repz
ficomps
sub
xlat
cltd
call
ds
sub
in
clc
inc
push
add
add
mov
mov
mov
push
and
xchg
jbe
in
outsb
jecxz
and
rorb
dec
mov
or
ds
jl
arpl
dec
inc
adc
xor
in
jbe
dec
xor
pop
imul
inc
lods
mov
out
aaa
fistl
dec
loope
icebp
xor
mov
test
aam
sub
adc
ds
jns
rcll
jo
movsb
gs
dec
add
pop
mov
adc
ret
push
ja
sar
inc
lea
pusha
lret
hlt
xor
pop
stos
jns
and
jge
pop
adc
mov
dec
ss
cmp
push
mov
mov
fst
lret
cld
mov
lea
mov
add
aad
jle
filds
cmp
repz
pop
push
inc
mov
xor
insl
cmpsl
and
mov
mov
add
dec
fs
repnz
inc
aam
cmc
inc
push
mov
push
or
cmp
adc
adc
or
idivb
js
not
cmc
push
js
std
jb
jmp
std
adcl
cli
jb
push
jnp
insw
sub
data16
inc
cmpsl
cmp
cmp
jp
xchg
inc
stos
mov
mov
lret
sbb
lret
dec
sbb
xchg
orl
fstpl
push
out
jle
mov
je
call
stc
aam
ljmp
xlat
inc
sbb
jae
sbb
sbb
add
cmp
push
and
mov
xor
arpl
ja
push
adc
das
lahf
mov
pop
dec
pop
js
divb
je
clc
mov
cmpsl
mov
jb
lret
pop
inc
mov
cld
pop
sub
aaa
sub
pop
inc
daa
pop
mov
xor
cltd
push
lods
and
push
movsl
add
jo
ljmp
aaa
mov
cmp
mov
mov
ss
or
xchg
pusha
test
fbld
loopne
out
pop
mov
xchg
lret
xchg
sub
pop
out
push
dec
dec
outsb
cltd
popf
jmp
lods
cmp
out
fs
mov
pop
cld
dec
pop
add
jb,pt
lret
mov
loope
das
stos
je
adc
popf
xchg
popa
mov
jl
pop
das
jb
or
pop
ljmp
xor
outsb
or
and
jp
jle
movntps
adc
mov
mov
pop
mov
es
mov
hlt
lods
jl
jmp
aam
xor
dec
sbb
jbe
stos
fwait
xor
jle
pop
arpl
dec
sbb
xor
push
sbb
dec
shl
arpl
adc
add
add
cs
pop
cmp
sbb
out
xchg
lahf
test
jl
sysenter
cmp
jne
out
adc
dec
push
and
mov
insl
cmc
out
dec
add
repz
je
cli
jg
inc
rclb
lods
inc
dec
xchg
mov
int3
inc
test
pop
repz
out
je
sub
cmc
fmuls
ret
jl
push
or
adc
and
addb
and
stos
mov
push
je
sbb
out
mov
inc
add
into
add
mov
outsb
push
aad
je
lock
jge
test
rolb
jae
enter
push
jnp
test
fwait
mov
lret
lahf
and
pop
gs
push
lahf
pop
cmpsl
rcll
orb
sub
mov
imul
lods
ret
cmpsb
cmc
mov
orb
mov
adc
out
xchg
dec
pop
mov
sub
bound
sbb
or
cmpsl
jns
fs
mov
lods
lds
enter
loop
dec
orb
push
js
jno
pop
mov
mov
out
pop
scas
dec
std
inc
lods
xlat
push
mov
into
push
mov
loopne
jb
imul
es
iret
bound
inc
repz
daa
xchg
xor
and
xor
inc
inc
push
enter
jg
dec
sub
ljmp
or
ffree
jae
cmp
cmp
jns
push
test
sbb
movsl
mov
inc
xor
adc
in
cmc
jmp
cld
pop
leave
ja
xor
rol
lock
sub
movsb
push
mov
jg
sub
and
inc
mov
bound
lahf
xor
add
fmuls
leave
lret
jbe
fwait
inc
scas
xchg
mov
movsb
insl
les
dec
fisttpll
lock
push
and
xor
icebp
sub
jb
mov
les
dec
jl
aas
cwtl
xor
movsb
push
sti
outsb
hlt
ds
inc
ret
xchg
enter
cwtl
or
cmp
cmp
jae
hlt
js
push
mov
fsubrl
cmpsb
adc
fwait
mov
les
outsb
out
xor
or
xor
test
xchg
popa
mov
jl
pop
das
jb
or
jp
shr
mov
movsl
xchg
inc
std
add
jle
fcmove
jecxz
out
mov
in
std
mov
dec
shrb
sbb
lret
movsl
mov
fildll
nop
xlat
dec
push
inc
pushf
fstps
test
mov
jnp
cld
out
or
dec
popf
lret
inc
push
fadds
and
cwtl
push
sbb
jge
lods
lods
jmp
and
scas
cmc
ret
gs
es
repz
movsb
push
sub
shl
cmp
inc
and
or
shll
repz
aas
cmpsl
xlat
sub
jae
mov
sti
ja
ds
xchg
fidivs
ljmp
mov
jecxz
test
cmpsb
push
mov
mov
jmp
stos
cmp
pop
sahf
and
imul
xchg
push
mov
mov
push
mov
loope
or
fcmove
dec
daa
adc
xor
pop
ljmp
fmull
sub
or
xor
pop
add
mov
fmull
pop
add
xor
pop
push
mov
ja
cmp
pop
stos
cld
jg
cmp
addr16
ds
pop
jmp
outsl
sub
mov
push
sub
cmp
pop
sub
fmull
inc
and
cmp
pop
imul
mov
pop
or
lret
jge
outsb
cmpsb
mov
pop
stos
scas
cmc
xor
pop
out
fwait
lods
sbb
sbb
dec
data16
sbb
push
cmp
jmp
mov
ss
rcrb
outsl
jl
pop
sub
dec
ds
xchg
pop
orb
fucomp
push
test
test
jbe
mov
lahf
mov
mov
pop
lea
ficoms
outsl
inc
pop
sub
mov
sbb
sahf
push
arpl
test
inc
dec
cld
loope
push
dec
sahf
movsl
arpl
mov
add
mov
add
inc
into
shl
inc
mov
ror
aaa
mov
out
aaa
mov
xor
imul
cld
mov
jno
add
lret
shlb
push
test
dec
push
stc
add
movsl
test
pop
add
mov
and
loop
mov
ret
pop
jp
cmpsl
lock
mov
mov
xchg
sbb
fidivrl
mov
mov
mov
or
sbb
lea
cmp
scas
je
cltd
stc
xor
fcoml
push
repnz
lret
mov
xchg
clc
repnz
add
mov
dec
fdivrs
push
and
xchg
mov
fsubs
leave
or
ret
mov
cmpsb
cmp
call
xchg
or
or
jp
mov
movsl
jae
int
imul
das
cmp
call
push
xchg
loopne
rorl
int
inc
xor
repz
mov
xor
outsl
push
cmc
shrl
and
dec
mov
lahf
sarb
xor
xchg
iret
inc
outsb
daa
das
xchg
dec
sbb
lods
push
mov
adc
rcr
js
pop
fisubl
loopne
outsb
jg
movsl
nop/reserved
xor
out
pop
lret
push
push
adc
add
in
mov
push
inc
pusha
fisttps
sbbl
js
pop
adc
decb
mov
fmull
lahf
inc
fsubrl
nop
mov
push
rorl
aam
cli
sahf
mov
mov
test
jae
fwait
sar
std
mov
js
and
or
adc
or
or
pop
mov
push
mov
sub
xchg
push
pop
test
xor
aam
movsl
mov
in
cmpsl
loope
dec
cmp
inc
shrd
pop
sub
or
jecxz
or
mov
xor
arpl
mov
fdivrl
lods
push
jg
lds
cli
lods
inc
adc
scas
mov
testl
mov
rcr
cmp
test
pop
mov
js
daa
push
stos
divb
sub
push
ss
sbb
lahf
mov
pusha
jecxz
popf
lret
push
cmp
movsl
dec
fdivrl
xchg
jg
push
inc
fnsave
mov
mov
clc
sub
add
jnp
xchg
lock
pop
mov
or
mov
das
mov
ja
stos
mov
call
int
pop
popf
iret
dec
push
ja
xchg
jecxz
inc
mov
cmp
test
movsb
adc
sub
movsb
xor
mov
fcomps
pop
lods
lret
rclb
jle
xchg
jne
jo
je
loopne
test
adc
inc
fwait
call
call
mul
lods
jl
cmc
cld
or
mov
push
mov
cli
aad
sub
mov
lret
sbb
mov
in
int
dec
xor
inc
mov
jecxz
lret
adc
sbb
pop
push
rcll
jnp
daa
inc
mov
stc
xchg
dec
cmpsl
adc
pop
or
pushf
inc
and
push
jne
sub
in
sbb
dec
ja
inc
test
imul
jmp
or
notl
dec
push
and
mov
sahf
xchg
sub
pop
movsb
push
movsl
bound
dec
outsb
lcall
ja
es
jne
mov
mov
pop
jmp
or
xchg
push
mov
daa
jb
dec
mov
test
xchg
das
lcall
jns
push
inc
cmp
pop
sub
sbb
outsb
sub
and
add
mov
jmp
mov
out
ja
inc
sub
jmp
pop
outsb
ret
xor
jl
fsubrl
xchg
add
or
xchg
clc
lret
dec
mov
dec
fildl
push
push
das
cld
jmp
dec
std
out
mov
scas
sbb
dec
push
push
test
add
mov
mov
jns
mov
lret
clc
lds
add
enter
enter
pusha
push
ja
fbstp
pop
in
neg
add
xchg
in
add
loop
mov
mov
mov
mov
mov
or
jl
lods
xlat
cmp
mov
in
pop
lea
mov
gs
gs
out
leave
xchg
and
dec
cli
in
or
shll
stos
push
pop
xchg
test
int
dec
rcl
dec
rol
pop
dec
movsl
popf
or
xchg
in
out
mov
adc
lea
scas
sahf
in
lock
and
add
rcrl
push
jp
iret
cmpsl
ret
dec
and
mov
stos
into
sbb
jns
jns
mov
push
aad
jns
jge
xchg
rclb
mov
xchg
into
mov
sub
lock
xchg
stos
jbe
mov
mov
nop
or
test
cmpb
lahf
scas
dec
fsubrl
pop
lret
fists
jl
out
enter
js
lret
add
push
jb
add
adc
mov
jnp
mov
mov
orl
imul
push
push
incb
ss
fsubp
fs
xchg
mov
loopne
test
imul
cmpsb
pusha
data16
mov
stos
shlb
lds
pop
mov
adc
adc
fwait
mov
sbb
inc
inc
jmp
add
int3
add
lods
outsb
push
sbb
jnp
scas
or
aad
adc
mov
push
int
div
stc
pop
xlat
out
repz
shll
xchg
push
fstp
popa
enter
cmp
and
sti
sub
add
push
inc
ret
icebp
sbb
jno
add
xor
sub
into
ja
inc
inc
push
dec
push
repz
fildl
cli
xchg
jbe
add
lahf
psubsb
xchg
insb
or
lret
jmp
xor
adc
and
outsl
in
mov
inc
add
and
xchg
adc
jo
xchg
pop
mov
or
pop
cmp
pusha
shlb
popf
jne
jle
sar
subb
xchg
in
jo
movsb
sbb
adc
mov
cmc
mov
add
xor
clc
or
mov
gs
jmp
imul
push
fs
les
sbbb
loope
popf
jl
jle
loopne
mov
inc
mov
nop
xor
pop
mov
test
cli
rcll
adc
fcomp
adc
int
mov
test
push
cmp
and
cltd
push
movsl
add
cmp
push
fstpt
jg
and
enter
jg
movsb
lahf
add
js
add
in
movsb
cmpsb
sarb
ret
inc
sub
jae
adc
lret
decl
test
mov
pushf
ljmp
std
inc
imul
lods
mov
daa
inc
push
jmp
mov
jb
test
fnstenv
mov
adc
jg
lock
inc
xor
jnp
mov
fmull
push
add
in
mov
add
push
jnp
lods
call
insb
dec
pop
xor
jbe
test
loop
cltd
sbbl
ret
and
add
fimuls
push
roll
lods
rorb
pop
cli
fs
sbb
fwait
xlat
jo
xor
lods
icebp
and
xlat
stos
mov
or
push
push
xchg
stc
int
lahf
dec
lock
xor
popf
pop
xchg
dec
mov
ret
cmpsl
xchg
repnz
mov
sub
in
sbb
nop
xchg
mov
aad
pop
aad
int
xchg
repz
add
push
push
sbb
or
xchg
fbld
fcmovne
xor
mov
into
push
push
mov
sub
sbb
jo
sti
sbb
mov
mov
xchg
mov
fdivs
inc
popf
push
add
mov
push
inc
lds
popf
and
jb
jns
jp
lds
orb
xor
jle
lods
in
adc
pop
in
outsb
int3
mov
or
int
pop
xor
add
fadds
cmp
fwait
lods
iret
fwait
js
js
mov
divl
mov
lcall
imul
ret
sahf
fsubr
out
xor
push
lds
cmc
push
outsb
popf
test
mov
lea
jae
cmpsl
aaa
mov
cmp
fmuls
outsb
push
adc
dec
addb
push
clc
imulb
push
push
stos
inc
add
mov
aaa
mov
sub
mov
scas
test
call
js
popf
jecxz
neg
jmp
inc
adc
sub
xor
add
jle
insb
push
out
or
mov
clc
data16
cmp
sub
inc
and
mov
or
xchg
lcall
or
shll
out
sub
mov
cmp
inc
xor
icebp
lea
aam
popa
jecxz
fldt
pusha
frstor
std
loope
fs
or
addb
xor
outsb
sub
dec
cmpsl
mov
lcall
dec
pushf
jecxz
sbb
outsl
ljmp
lcall
lret
pop
mov
imul
push
add
pushf
dec
popa
ret
movsl
icebp
inc
je
outsb
push
roll
lret
test
mov
stos
xchg
lea
lea
or
push
test
shll
shl
ficoml
pusha
imul
or
shlb
jno
jno
test
xor
or
or
popf
jmp
mov
push
mov
sbb
aas
fildll
mov
mov
and
cmpsl
push
sub
movsl
sti
stos
call
mov
test
push
push
testl
lea
mov
cmpl
push
push
mov
sub
pop
aad
pop
add
ja
in
jle
sti
mov
sbb
add
sbb
push
xor
movsl
into
fwait
dec
ss
outsb
adc
xor
rcr
lret
insl
fbld
aaa
cwtl
jecxz
les
js
ja
sbb
push
roll
mov
daa
outsb
pop
mov
cmp
lea
fidivs
mov
adc
or
xchg
add
push
push
sbb
jg
inc
sti
iret
push
pusha
jg
sub
cwtl
xchg
clc
pop
sub
inc
std
push
pushf
ljmp
in
clc
push
sub
push
mov
mov
push
sbb
fistps
mov
test
cmpsb
inc
test
inc
xor
mov
loop
lds
push
push
rcll
lret
dec
mov
sub
mov
mov
call
pop
inc
repz
xor
sub
ret
loop
mov
hlt
sahf
mov
pop
mov
inc
cmc
mov
shrb
dec
jmp
cli
daa
mov
jo
pop
dec
mov
dec
repz
lcall
stos
xchg
push
movsb
gs
lods
popf
ljmp
fistpll
test
ljmp
sbb
hlt
stos
adc
jns
pop
stos
out
pushf
inc
lcall
push
test
roll
and
fucompp
sub
add
push
mov
inc
add
cld
adc
add
mov
cmp
ret
mov
pop
mov
push
mov
les
clc
cmp
out
xor
mov
adc
fnsave
cmp
pushf
dec
inc
repnz
test
aas
adc
mov
sarl
mov
cmp
inc
xor
aad
lahf
out
filds
popl
lahf
iret
xchg
repnz
jno
nop
fwait
lahf
adc
push
scas
or
fwait
and
mov
adc
add
mov
mov
fisubrl
cmp
lret
push
insl
xchg
test
jne
dec
fadd
and
jns
inc
and
lods
adc
push
cmpsl
xchg
test
dec
mov
or
vandnps
mov
inc
add
pop
mov
lods
inc
sbb
rcrb
sub
js
lods
dec
sysret
leave
loop
inc
xchg
and
sbb
adc
adc
cmpsl
xchg
dec
ss
xchg
and
jnp
sbb
push
dec
jp
push
ret
jae
test
stos
mov
pop
flds
outsl
out
push
push
mov
and
sub
cwtl
lret
movsl
mov
lcall
jae
ret
fcomip
mov
enter
ret
pop
test
push
jecxz
incl
push
and
out
int3
mov
aaa
xchg
ret
pop
dec
jo
dec
gs
out
pop
repz
ficoml
pop
push
sbb
sti
jno
lret
inc
in
lods
shll
inc
pop
shl
les
into
push
les
push
mov
mov
ds
test
xor
cmc
or
mov
push
ret
mov
data16
gs
inc
popf
addl
loope
cld
pop
popf
scas
inc
inc
cld
hlt
andl
inc
mov
mov
xchg
cwtl
inc
cmp
stos
test
adc
fsubs
or
pop
pop
adc
pusha
shlb
sbb
pushl
fwait
lea
and
enter
adc
bound
adc
mov
mov
dec
sahf
xchg
test
push
inc
xor
mov
inc
dec
jns
ret
loopne
sti
mov
xchg
pop
dec
xchg
or
aam
sub
pop
or
add
fidivs
jge
cli
cmpsl
flds
cli
int3
or
push
mov
subb
xor
push
push
mov
inc
mov
mov
mov
rcr
xchg
jecxz
jl
cmp
imul
lods
in
cmp
fidivl
or
mov
xor
movsl
xchg
mov
mov
adc
test
sbb
cmp
mov
pop
jl
mov
add
rorl
in
or
addr16
or
sub
push
mov
mov
lahf
inc
fnstcw
cmp
imul
jne
and
and
lods
inc
test
mov
inc
adc
gs
adc
mov
ret
pop
inc
inc
xor
cmp
movsl
mov
dec
loopne
sti
pop
inc
mov
sbb
add
aas
rorl
clts
xchg
xor
mov
adc
inc
inc
sbb
add
sbb
das
xor
mov
fdiv
jbe
sub
push
adc
push
test
dec
lret
or
nop
pop
xor
push
fs
fisttpll
lret
leave
mov
jae
test
jp
mov
and
mov
or
sub
mov
iret
jb
push
xorl
sub
cmp
or
or
shll
mov
pop
xor
mov
repz
or
stos
push
mov
or
lcall
inc
add
mov
mov
enter
mov
shlb
bnd
fdivrl
shlb
xchg
jle
push
jns
and
jle
jb
faddl
push
xor
pop
sub
js
test
xorb
ljmp
popf
movsl
imul
iret
ret
jb
jg
out
out
jmp
xor
rcrb
and
orl
sub
xor
sub
insl
movsb
lds
nop
lds
test
mov
test
jnp
fldt
jmp
adc
xchg
int
int3
or
push
dec
imul
repnz
stos
ret
fistl
mov
push
cmp
jns
add
mov
sbb
cmp
xlat
fcoml
and
imul
inc
sbb
les
dec
fidivrl
xchg
cmp
movsl
ret
sbbl
adc
fcomip
out
mov
jne
nop
insl
jnp
imul
rclb
inc
jns
sbb
or
test
cmpb
sbb
dec
mov
xor
enter
inc
inc
negb
and
xlat
sub
or
inc
pusha
aam
mov
mov
ret
pop
dec
lock
mov
rcll
add
pop
jo
mov
cmp
in
xor
jnp
xchg
shll
sub
mov
dec
clc
mov
xchg
adc
pop
sub
or
xchg
cmp
jns
test
mov
daa
fs
jge
jle
or
sub
fwait
push
push
std
fildl
xchg
scas
mov
std
sub
jle
push
mov
ret
mov
cmp
mov
xchg
xchg
lahf
out
sub
mov
enter
dec
aaa
mov
mov
cmp
fmuls
cmp
cmp
pop
mov
sub
out
sbb
fcmovbe
xchg
inc
and
adc
cmp
lock
adc
sbb
jnp
or
lea
inc
mov
test
inc
sbb
pop
lcall
jbe
std
inc
aas
cli
mov
popf
jp
and
mov
js
mov
add
dec
sub
inc
sbb
add
imul
mov
dec
pop
bound
pop
or
pop
and
xor
xchg
stos
mov
jl
fisttpl
add
jbe
imul
fs
scas
js
jle
mov
nop
out
and
push
scas
ja
in
mov
arpl
adc
or
jp
sahf
add
out
sbbl
mov
sbb
addr16
cmp
loope
or
out
ja
fucomip
pop
cmpsl
ret
fld
enter
sub
sbb
nop
into
mov
jg
sbb
cli
xor
lods
imul
adc
sub
cmovge
dec
call
cmp
cmp
push
fisubs
pop
add
push
dec
inc
aam
je
pop
dec
aaa
bound
or
jecxz
cld
mov
inc
sbb
pusha
add
cmpsb
pushf
in
dec
sbb
scas
xor
push
arpl
in
test
xchg
jg
popf
imul
sbb
and
test
inc
mov
shrb
rcll
xchg
sbb
xor
mov
xchg
push
mov
xchg
stc
fwait
pop
pusha
ds
pop
shr
repnz
inc
incl
or
and
loopne
es
mov
es
adcb
pop
pop
adc
mov
outsb
ja
sub
sahf
pusha
jo
mov
out
or
fsubrs
or
ss
push
jp
jb
cmc
in
xorb
adc
es
jecxz
pop
das
pop
subl
subl
loop
cmp
mov
inc
adc
push
adc
jge
shll
xor
divl
ss
rcl
lret
sbb
inc
push
lret
mov
jnp
dec
test
mov
dec
jb
dec
xor
adc
xorl
insl
mov
push
cld
inc
inc
adc
insl
ds
push
fisubrl
sbb
dec
loopne
movsb
jge
sbb
pop
pusha
jp
shl
xchg
repz
sbb
js
fnstcw
mov
push
inc
sbb
jo
sbbl
sahf
lock
push
pop
mov
push
aas
jp
cmpsb
or
pop
insb
jbe
xchg
push
pop
lcall
fnsave
out
je
mov
adc
es
movsl
dec
test
jl
push
xor
fsubr
mov
pop
mov
dec
rcl
xlat
push
lret
sub
lcall
xchg
and
pop
sarl
stos
lahf
sbb
aaa
mov
data16
dec
jp
and
loop
repnz
dec
xor
xlat
lods
inc
pop
int3
lods
push
xor
nop
fsubl
push
dec
xchg
and
pop
push
or
dec
mov
or
fmuls
cltd
and
daa
or
or
arpl
stc
sub
jbe
cs
cmpsb
mov
or
cmp
repnz
ljmp
ss
int3
pop
sub
xchg
ja
ret
dec
jecxz
jp
aam
sub
cmp
call
push
lock
movsl
jno
mov
cmp
jp
int
mov
cmp
das
xchg
dec
inc
and
sub
pop
dec
mov
adc
pop
pop
pop
push
mov
jg
dec
mov
insl
mov
push
pop
cmc
cwtl
push
jne
xorl
pop
and
test
mov
sbb
iret
daa
mov
nop
lahf
cli
adc
iret
dec
lock
ljmp
push
imul
pop
dec
test
jbe
add
fldt
popa
lds
xor
inc
inc
sbb
imul
ds
outsb
les
stc
xchg
push
lret
sub
inc
inc
pusha
xchg
sti
inc
ljmp
xor
test
pop
adc
push
mov
push
inc
inc
ja
cld
or
xor
jp
pop
pop
sub
cld
inc
and
xchg
lock
adc
mov
test
out
adc
test
loopne
ret
jl
push
loop
add
fadds
sbb
sub
ljmp
imul
test
fwait
jle
xlat
mov
lock
mov
sbb
adc
repnz
mov
adcb
mov
sbb
mov
fs
movsl
mov
aas
jb
into
sub
pop
jnp
fwait
mov
leave
push
mov
imul
adc
mov
fwait
bound
inc
dec
xchg
xchg
movsl
lds
xchg
mov
leave
imul
fistl
mov
mov
adc
jge
test
bound
ss
js
mov
into
mov
mov
adc
jns
adc
es
aam
push
adc
icebp
cld
mov
fwait
and
ret
cli
pop
sbb
fwait
lea
xor
mov
jl
fwait
lods
xor
or
sti
push
mov
subb
out
cmpb
jge
cmp
sub
movsb
imul
fcomi
test
mov
loope
mov
ret
mov
adc
cmpsl
mov
xorl
hlt
dec
and
cmpsl
shl
imul
bnd
inc
mov
fdivl
in
popa
test
mov
jb
nop
dec
mov
out
aam
xchg
jne
sub
shl
stos
std
clc
fnstcw
bnd
add
sbb
cmpsb
ret
sar
jo
ficomps
pop
repz
xor
nop
dec
cwtl
push
inc
pusha
adc
push
sbb
xchg
adc
dec
mov
or
ja
cwtl
dec
repnz
sbb
gs
imul
pop
cmpsl
jnp
cmp
jae
enter
jge
cmp
cmpsb
xchg
enter
jb,pn
jl
in
mov
sbb
dec
popa
adc
cmp
inc
xor
fwait
test
mov
scas
incl
lret
ljmp
lret
clc
mov
mov
and
in
or
je
movsl
shll
scas
pop
xchg
int3
sbb
inc
leave
mov
pop
imull
loop
xor
in
scas
ljmp
popf
xchg
pushf
data16
movsl
and
xchg
or
pushw
scas
jne
dec
add
and
movsb
call
mov
sub
inc
inc
dec
adc
inc
mov
movl
flds
sub
and
setae
imul
lock
push
xor
nop
imul
repz
xchg
add
jae
mov
out
pop
jne
xchg
insl
or
jo
inc
mov
int3
pop
sub
loop
dec
push
sbb
ljmp
pushf
dec
fldenv
das
or
pop
cld
xor
outsb
dec
lea
clc
pop
stc
inc
lret
and
push
incb
mov
mov
lret
es
aas
dec
mov
ret
sbb
call
xchg
int3
mov
arpl
dec
popf
sbb
popf
leave
push
mov
jb
iret
jae
jp
out
inc
adc
cmpsl
jle
fs
cmpsb
or
cld
xchg
and
movsl
mov
mov
pop
ljmp
mov
scas
dec
push
addr16
pop
push
pop
es
lahf
inc
jg
xchg
lret
pop
pop
out
leave
clc
fcomps
js
insl
mov
repz
adc
out
sub
dec
dec
enter
dec
mov
push
cmc
cld
sbb
into
aaa
out
dec
loopne
lea
cmp
pop
adc
clc
xor
lea
nop
xor
popa
aad
jb
ret
lods
bound
int3
popa
sahf
mov
dec
mov
jle
sub
mov
xchg
std
jno
cwtl
xchg
wbinvd
in
loop
sbb
in
clc
add
cltd
xchg
push
and
in
hlt
mov
ja
int3
dec
push
xchg
add
aaa
push
inc
push
and
mov
pop
push
fcmovnb
mov
inc
inc
pop
pop
xor
mov
sub
insb
fmuls
inc
adc
mov
or
rcrb
mov
cmp
push
pop
in
lods
movb
jecxz
arpl
jne
lahf
das
adc
dec
cmp
or
pop
popf
sbb
inc
repz
pop
fdiv
call
rclb
je
and
dec
xor
push
mov
mov
xor
cld
jle
insl
push
or
fbld
filds
mov
test
hlt
jl
loope
adc
and
inc
sbb
mov
subl
sub
cltd
adc
pop
or
cmp
and
dec
and
xlat
xchg
adc
ljmp
and
shlb
mov
data16
int3
stos
mov
aad
aaa
cli
pop
jl
dec
divl
mov
insl
outsl
mov
mov
je
out
imul
lea
test
cmp
mov
scas
xchg
stos
jbe
push
mov
mulb
add
mov
movsb
push
push
pushf
cli
ss
pusha
add
and
ljmp
out
js
cmp
inc
adc
sbbl
out
les
dec
enter
test
pop
and
sub
mov
mov
mov
dec
in
stc
cmpsl
sti
out
movsl
and
aaa
adc
dec
scas
cwtl
mov
pop
sub
jecxz
mov
ret
fsubl
jge
dec
lods
xchg
pusha
inc
sbb
mov
fmull
dec
or
popf
ljmp
sbb
shrb
cld
inc
adc
fistl
xor
sbb
out
sbb
add
mov
mov
and
imul
sbb
addr16
dec
push
cld
mov
hlt
outsl
clc
mov
jbe
in
idivb
sbb
xchg
push
push
dec
push
ret
mov
mov
ss
movsl
insl
cmp
in
mov
adc
xchg
pop
push
subl
xchg
mov
js
jecxz
cmpsl
fcoml
jle
mov
push
js
nop
jg
xlat
fcoml
sti
and
cmp
mov
cmp
rcrb
je
rcrl
imul
push
fidivrl
push
out
mov
pusha
lret
mov
add
pop
fdivrl
dec
fnstsw
mov
cwtl
xchg
mov
push
cvtpi2ps
lret
mov
or
jecxz
sarb
ror
or
fidivrs
mov
jg
mov
fdivrl
sbb
mov
or
push
fcomi
jmp
and
mov
push
and
imul
test
loopew
rcrb
loop
stos
jo
xor
lcall
xchg
test
mov
lods
imul
xchg
mov
mov
dec
push
push
jno
sbb
rclb
mov
push
mov
cmp
push
stc
cmc
cltd
cmp
push
or
inc
lea
add
inc
sbb
push
and
mov
fwait
jmp
cmpsw
sti
cmp
push
jno
cmp
add
adc
cmp
pop
adc
aaa
mov
xchg
pop
xor
loopne
aam
mov
xor
mov
jmp
mov
das
xor
aam
addl
clc
jo
pop
add
in
xchg
pop
adc
fcom
cld
dec
lahf
sbb
das
scas
ret
mov
pop
movsb
mov
fstps
popf
lret
movsl
xchg
jg
mov
jne
push
and
mov
and
fucomp
pusha
std
xchg
iret
sbb
pop
push
lds
mov
stc
cmp
push
ss
push
mov
out
dec
cmpsl
addb
and
push
mov
dec
cld
pop
sub
jle
jbe
sub
imul
stos
xchg
sbb
shrb
mov
inc
xorl
mov
fldt
clc
ss
sti
mov
mov
adc
rolb
sub
lcall
jns
sarl
pop
mov
xchg
xor
aas
sahf
enter
scas
or
xor
gs
pop
sarb
sahf
nop
and
out
pop
push
repz
push
lock
arpl
push
clc
cmp
loope
movl
or
pop
sbb
shl
mov
jno
fistl
push
mov
xchg
mov
cmp
mov
sub
push
xchg
mov
daa
aad
jae
mov
arpl
pop
mov
jl
lret
add
popf
or
fisubrl
sub
pushf
mov
pop
cmpsl
sbb
mov
int3
mov
xlat
and
div
lock
aas
outsb
je
cmp
jg
repz
sub
add
mov
or
and
loopne
rcrb
mov
xchg
mov
xchg
cmc
mov
dec
cmpsb
xchg
pop
xchg
mov
or
fwait
cwtl
cld
jb
pop
mov
mov
scas
fs
sub
adc
cltd
aas
cwtl
xchg
and
or
mov
insl
mov
jmp
inc
sbb
and
call
jae
lcall
adc
pop
aas
loopne
mov
lret
movl
movl
mov
out
add
jecxz
push
mov
inc
faddl
jno
dec
sub
imul
movsl
fdivs
mov
fxch
jge
push
sub
push
jbe
lcall
jb
push
sub
movsb
scas
cmp
mov
in
inc
sbb
ds
lret
jmp
push
adc
sahf
and
dec
std
and
pop
add
insl
sub
icebp
or
mov
mov
mov
popf
cmp
cli
mov
pop
adc
lahf
imul
shlb
test
inc
cltd
aaa
call
int3
std
pop
inc
mov
jnp
jae
out
mov
jle
flds
xlat
sub
sub
ljmp
repz
xorl
stc
iret
jmp
jae
jge
and
ljmp
pop
sbb
lahf
inc
or
cmc
cltd
fs
fsubrl
mov
pushf
insb
test
ljmp
sbb
sbb
and
dec
jns
repz
or
pop
ret
cmpsb
outsb
add
sub
cwtl
add
aas
dec
pop
push
add
push
mov
fmul
aaa
mov
lods
sahf
xor
bound
jns
cmp
xchg
or
or
loop
out
xor
adc
sbb
testb
push
aam
repnz
sub
xchg
pop
aad
int3
lods
push
sub
shll
sahf
jns
lahf
popl
cmp
mov
lods
jecxz
xor
push
adc
lock
cmp
aad
cmpb
pop
dec
cltd
cli
mov
les
outsb
hlt
lahf
aam
mov
mov
ja
xor
aas
jno
lods
mov
lods
int
cmovbe
repnz
dec
or
lds
mov
xor
arpl
xor
jno
add
test
mov
push
push
add
out
jae
push
cld
mov
xor
and
jl
pop
outsb
xchg
hlt
adc
cmpb
or
fimull
cld
sub
andnps
jnp
int
add
sbb
pusha
nop
push
push
inc
repz
add
jecxz
jno
stos
shrl
out
cmp
insb
cmp
cmp
add
or
jle
add
inc
pop
mov
jle
xchg
shll
mov
fwait
iret
cmpsl
ret
push
fisubrs
sbb
xor
jge
aas
mov
loope
add
pop
nop
pop
mov
cmp
mov
bound
mov
jnp
ret
jmp
xor
mov
xor
pop
mov
fsubl
fs
sbb
test
push
in
popf
mov
pop
mov
idiv
fldl
dec
and
jne
push
loop
push
lods
push
movsl
stc
dec
jno
push
and
mov
fucomp
mov
xchg
push
mov
xor
repnz
cmp
sbb
enter
sbb
stos
sub
inc
pop
pop
mov
or
and
ret
sbb
xor
mov
jmp
fs
inc
fwait
leave
xor
dec
mov
in
imull
jnp
clc
and
mov
lea
or
add
or
add
push
xor
mov
pop
adc
es
je
cmp
dec
xor
lods
mov
adc
pop
add
inc
test
push
xchg
jmp
push
aad
mov
xchg
repz
mov
out
inc
inc
inc
jbe
mov
or
inc
inc
mov
iret
repz
sti
pop
cmpsl
mov
mov
dec
jnp
fildl
mov
mov
inc
push
nop
mov
pop
cli
pop
dec
xor
xlat
jle
mov
iret
push
dec
jb
ficoml
cmc
fmull
lret
jno
dec
rorl
push
sub
inc
push
add
sub
push
xchg
add
adc
pop
ret
xchg
lock
add
pop
out
lahf
inc
jg
pop
xchg
cld
cmp
fs
jo
andl
jl
cmpsl
js
fwait
std
sub
xchg
jecxz
mov
repz
shll
cmpsb
jge
shrb
mov
ret
lcall
in
aaa
imul
jle
adc
fptan
enter
or
jecxz
mov
pop
dec
mov
xchg
xchg
sbb
dec
dec
stos
shr
ss
ret
imul
hlt
add
sbb
and
nop
enter
dec
and
daa
lds
sti
mov
mov
scas
push
test
adc
lret
push
test
bound
loop
lret
lahf
jl
or
scas
enter
cmp
sub
sbb
xchg
test
pop
arpl
enter
int3
pop
scas
pushf
push
addr16
sarb
cltd
lods
enter
lahf
jle
sub
mov
test
hlt
and
xorl
sbb
rorl
xchg
test
xor
stc
xor
lret
or
jp
call
push
inc
popf
push
sbb
out
sbb
shll
push
ret
inc
mov
es
aam
aam
aaa
pop
sub
ret
jl
fidivl
jo
inc
es
lcall
int3
mov
ficoml
pop
add
rclb
fcomi
cmp
hlt
mov
cmp
aaa
pop
repz
cmp
xlat
data16
sbb
mov
push
xlat
and
enter
lahf
cli
movsb
inc
aam
dec
push
inc
shrl
je
fst
andl
les
mov
callw
adc
inc
lcall
jne
add
cmp
and
jns
dec
inc
sub
xchg
inc
les
in
into
jmp
popf
enter
jge
cmp
sbb
pop
aas
cmpsl
push
cwtl
lock
cltd
scas
lahf
push
cwtl
std
pushl
or
push
and
adc
cmp
js
stos
fisubl
xor
pop
fisubs
mov
test
test
push
cmpsl
jmp
sbb
fdiv
cmpsb
jns
daa
adc
out
gs
or
in
or
add
gs
add
iret
and
mov
push
pusha
sbb
mov
add
ja
inc
sub
add
insb
push
pushf
mov
fstpt
cwtl
push
aam
sbb
insl
test
inc
aad
lret
pop
popf
xor
push
pop
es
jmp
jns
ds
loopne
ret
sbb
repz
xchg
mov
mov
pushf
hlt
ror
fildl
xlat
lcall
or
or
popf
mov
jns
out
jp
lcall
and
ffreep
or
mov
call
loope
push
inc
inc
lcall
and
into
add
inc
sbb
fbld
fists
in
or
enter
loop
stc
in
add
push
dec
inc
fwait
dec
dec
andb
dec
xorb
pop
outsb
or
cltd
ljmp
mov
test
fwait
pop
mov
adc
fdivs
lahf
add
in
popf
pop
fisttpl
iret
pop
popf
out
out
push
jno
inc
leave
mov
cld
test
gs
dec
adc
xchg
dec
movsb
sub
jbe
sahf
std
lods
sub
mov
and
add
cmp
jae,pt
inc
mov
push
xchg
dec
xchg
dec
rcr
jl
add
movsb
fwait
sbb
xchg
pusha
push
popa
imul
jb
push
inc
js
rorl
andl
rolb
and
mov
shrl
inc
inc
shlb
nop
sbbl
pop
in
in
push
sub
fimull
sub
push
push
ja
cli
inc
aaa
lods
roll
push
jno
dec
aam
xchg
or
sarl
inc
sub
jbe
stos
int3
jge
mov
jo
mov
fcom
cltd
mov
loopne
xor
cld
push
clc
push
xchg
xchg
xor
ja
pusha
cmp
and
ss
adc
jbe
rcl
jg
inc
out
not
inc
shl
mov
sbb
scas
mov
mov
cmp
or
clc
xchg
test
mov
xchg
sbb
push
fdivrl
es
push
sbbb
stos
sti
rolb
sbb
aad
mov
iret
inc
jl
fwait
roll
xchg
jge
inc
xor
or
mov
adc
imul
adc
or
add
imul
sbb
pop
aad
fwait
lea
cs
push
jecxz
test
test
dec
es
pop
sub
add
fcom
jns
xchg
adc
pop
mov
mov
pop
test
fcomp
adc
movsl
mov
pop
rcrb
pop
add
xchg
fimuls
repnz
or
xor
leave
faddl
pcmpeqw
sbb
inc
sahf
sti
mov
lods
adc
pop
jae
stos
adc
pushf
sbb
ret
loopne
xchg
mov
mov
cmp
push
xchg
pusha
jge
movsl
sub
fists
outsb
and
cmp
push
lds
pushf
int
lock
mov
mov
fistpll
mov
add
fisubs
xor
pop
dec
sbb
insb
les
xor
cmp
adc
not
mov
mov
push
mov
sbbl
fidivrs
pop
push
mov
jge
mov
hlt
fsubs
xor
jecxz
push
push
or
add
je
arpl
movsl
push
imul
mov
mov
jae
or
inc
insl
cmp
push
mov
leave
les
pushf
push
push
std
sub
fisubs
out
lret
inc
jnp
ffreep
movb
aad
push
in
mov
in
mov
sbb
add
pop
into
sarb
mov
mov
icebp
int
adc
mov
or
or
sarl
pop
pushf
lret
push
mov
iret
mov
nop
das
jle
scas
je
and
imul
adc
das
xlat
xchg
xor
mov
jo
popa
xor
xor
iret
jge
fucomp
push
mov
test
scas
leave
mov
dec
out
je
cmp
fistl
fidivrs
sub
out
xchg
lcall
sub
mov
dec
xor
xor
mov
ret
pop
pop
das
pop
fsts
add
insl
popa
dec
sbb
loopne
push
mov
jo
pop
jmp
ja
xchg
xchg
call
jmp
or
stc
bound
andb
ss
int3
fnstsw
ljmp
jge
push
push
sbb
mov
fstl
xchg
mov
scas
and
mov
pusha
add
fcmovnbe
stos
cmp
inc
jbe
ret
xor
cmp
and
cmpsl
dec
insb
jp
mov
clc
inc
sbb
bnd
int
movsb
sbb
ss
mov
lods
push
movsb
mov
orb
pop
mov
or
xor
xlat
inc
jp
jg
cwtd
jne
sti
stos
fdivs
mov
stos
call
mov
and
or
sub
inc
inc
imul
fsts
das
or
movsl
pop
cld
mov
les
mov
mov
add
add
mov
test
pop
push
xchg
mov
mov
cmpsl
scas
or
xchg
int3
stos
xor
sbb
cli
push
xchg
or
and
shlb
inc
mov
push
push
pushf
sbb
mov
xchg
mov
ret
mov
fsubrs
adc
add
xor
loop
xor
lods
jle
imul
mov
xchg
jle
xor
ret
or
enter
and
fldl
jge
cmp
pusha
mov
js
adc
out
inc
adcl
mov
lods
or
adc
mov
mov
sbb
jb
push
in
jne
or
xor
mov
fwait
pop
sete
hlt
sbb
push
dec
inc
jno
dec
jb
mov
inc
pop
inc
add
add
mov
test
mov
into
inc
mov
repz
inc
fcomps
sbb
icebp
gs
jns
lods
inc
fdivp
cld
in
jns
loop
pop
cwtl
lret
movsl
scas
lcall
movsl
sbb
push
clc
stos
jb
dec
mov
cmp
jmp
pushf
std
es
lds
test
ds
mov
cmp
push
addb
imul
xchg
mov
mov
cwtl
lods
fistl
pop
mov
fcomps
ret
into
mov
pop
mov
into
and
loop
add
push
gs
cmc
adc
jecxz
inc
cmp
enter
dec
and
test
push
ss
dec
movsb
jne
dec
lahf
repz
mov
call
rcr
enter
insb
enter
cmp
pop
mov
sbb
mov
pop
mov
shr
and
in
jg
nop
jbe
inc
cmp
cmpsb
inc
loop,pt
int
nop
jae
inc
hlt
js
xchg
jl
push
inc
ret
outsb
adc
adcl
mov
or
cmc
inc
popf
mov
xor
pushf
adc
nop
xlat
xchg
jae
mov
xchg
loop
xchg
sti
sbb
fwait
popa
pop
inc
push
sub
and
push
popa
pop
hlt
xchg
lret
ret
cltd
dec
aas
pop
xor
add
dec
jle
xchg
loop
adc
in
adcb
and
stos
sub
data16
movsb
mov
cmp
mov
shr
testl
or
pop
jecxz
pop
test
xchg
or
mov
sbb
adc
sbb
fwait
outsb
movsl
fmull
ret
add
mov
jle
sub
pop
mov
or
enter
cs
pop
testb
xchg
jbe
add
mov
loopne
dec
mov
fistpl
add
jle
jp
push
roll
push
inc
jne
aad
es
pop
push
and
or
jge
sub
cmp
lahf
sub
dec
mov
xchg
inc
lds
in
mov
in
jmp
mov
mov
cmp
test
sub
fstpl
scas
dec
jns
or
sbb
popa
jns
scas
ret
sub
cmp
loop
in
adc
repz
dec
std
mov
or
sub
lahf
sub
sub
shll
cmpsb
mov
insb
aam
lcall
pop
xor
mov
mov
push
cmp
lret
out
jp
mov
xchg
mov
inc
sub
pop
mov
outsb
cmc
popf
jecxz
cli
jle
pop
and
pop
sub
leave
js
lcall
imul
mov
jmp
cmp
fsubl
sub
mov
movsb
js
cwtl
lret
movsl
dec
push
cmp
mov
xor
imul
mov
jecxz
pop
mov
les
scas
adc
scas
fadds
repz
push
imul
out
dec
fs
xor
mov
xor
dec
lds
mov
ss
lea
add
inc
mull
jmp
gs
adc
sbb
jp
inc
and
and
pop
cmpsb
fidivrs
add
pop
xlat
test
jge
dec
jo
cmc
std
andl
push
sub
push
cmpsb
mov
xchg
jecxz
inc
xor
dec
daa
sub
movsb
repz
mov
xor
and
rcrl
in
jae
sub
and
sbbl
incl
std
dec
fwait
mov
in
jns
fdivl
xor
arpl
dec
xor
dec
hlt
xor
mov
push
dec
cmp
movsl
iret
in
and
pushf
lds
cld
andb
sbb
jge
imul
stos
mov
push
popf
fcomps
shrb
lret
pop
xchg
shrl
mov
bound
fwait
iret
xor
fcompl
adc
add
cwtl
in
mov
sub
lret
sub
lahf
popf
cmp
mov
add
inc
mov
out
shlb
inc
ret
mov
xor
rclb
ret
cmp
fmul
pop
pop
pop
sbb
enter
subb
jb
popa
nop
test
pop
pop
fndisi(8087
aas
pop
stos
shlb
test
stos
ds
clc
sbb
jp
inc
push
addr16
cs
sbbb
sbb
dec
sbb
mov
dec
hlt
lret
mov
sbb
mov
fistl
pop
movsb
mov
lods
inc
xchg
jo
push
stc
rcl
inc
pop
int
mov
and
xor
test
inc
push
xchg
fdivp
and
shl
add
shlb
icebp
mov
hlt
pop
sbb
pusha
jns
pop
leave
xchg
lock
jmp
xor
add
test
dec
ret
rclb
sub
inc
mov
jle
xorl
jno
inc
jns
nop
pop
int
lret
adc
bound
xchg
fxch
mov
inc
fldt
add
lods
add
push
hlt
ffree
mov
jb
ds
xchg
fwait
js
ds
stos
rol
push
test
insl
inc
xchg
push
ret
pusha
int
lcall
jno
fs
pop
mov
jmp
je
inc
pop
dec
fsubl
push
pop
enter
fidivl
negl
jg
mov
cld
subb
dec
outsb
stc
mov
pop
int3
movsl
sar
mov
push
cld
jae
shrb
les
cld
xchg
inc
imul
add
xor
jl
or
sub
lret
mov
test
dec
inc
popf
lds
dec
cli
std
rol
push
pushl
imul
xchg
adc
push
xchg
xchg
inc
cmp
push
psllq
and
cwtl
dec
aam
mov
and
xor
sbb
insb
jne
dec
rcrb
fwait
inc
aam
mov
iret
aaa
pop
or
and
xchg
subb
fisttpl
inc
les
mov
idivl
lret
mov
call
insl
test
fcompl
dec
fbld
push
rcrl
call
or
out
cli
shrl
and
mov
nop
mov
rcrb
test
test
mov
xlat
clc
and
pusha
mov
pop
mov
inc
mov
xchg
ret
add
dec
lcall
jae
pop
mov
addr16
rolb
scas
loope
ret
push
into
inc
cwtl
cmp
jmp
fsubrp
pushf
shl
std
adc
sbb
adc
jge
pop
mov
lahf
xchg
out
pusha
addr16
hlt
cmp
lock
inc
aam
inc
xchg
inc
gs
std
jg
cmpsb
fcomp
sbb
cmp
cwtl
enter
pop
fld
cwtl
cmp
pop
cmpl
andb
cmp
bound
lcall
cltd
in
push
into
or
or
movsl
cmp
fucomip
test
stos
cwtl
pop
dec
ret
mov
add
sub
mov
add
pmuludq
adc
ret
ret
inc
cmpsb
sbb
fldt
test
mov
inc
decb
test
in
mov
dec
dec
mov
loope
push
inc
ret
pop
sub
cmp
xchg
int
lock
inc
inc
das
jnp
testl
mov
lock
pop
jbe
mov
sub
dec
push
xchg
cmp
add
jg
loope
into
das
jb
sarb
mov
fldcw
loopne
roll
dec
jmp
sbb
mov
or
add
mov
pusha
imul
fldcw
lods
cmp
aaa
popf
iret
pop
jae
je
dec
xchg
sub
hlt
nop
or
lds
addps
fisubrs
push
jecxz
mov
and
pop
adc
movsl
dec
pop
ss
and
sahf
cmp
mov
sbb
ds
mov
jnp
imul
jmp
rcrl
add
sbbb
aaa
arpl
adc
aad
mov
stos
js
xchg
stc
push
adc
jns
cld
jns
push
rol
fisttps
sarl
pushf
mov
popf
pop
sub
lret
push
nop
sbb
xchg
in
orb
int3
or
jl
cmpsl
pop
pop
xchg
ficoms
push
jae
jmp
mov
push
jb
cmp
pushf
sub
sub
adc
clc
jb
adc
and
std
jb
jmp
std
mov
adc
xchg
pop
aam
push
das
push
test
mov
es
fdivrl
fwait
in
fidivrl
dec
pop
int3
pop
sub
fsubs
dec
cwtl
inc
loope
sub
cltd
cltd
mov
mov
movsl
jno
int
inc
pop
cmp
xchg
ret
or
pop
mov
jne
inc
notl
or
lahf
lret
in
ret
mov
or
test
fiadds
adc
inc
out
mov
push
dec
rorb
push
test
lret
pop
inc
push
lahf
stos
fstps
addr16
push
mov
ret
lret
arpl
and
pushf
sbb
or
stos
fldt
es
ret
sbb
mov
mov
lock
iret
pop
and
xor
cmpsb
jae
dec
push
ret
mov
lods
mov
jo
fldl
and
adc
dec
inc
fdivrs
inc
inc
xor
jae
sbb
inc
cld
fnstenv
push
movsb
in
dec
clc
and
adc
mov
push
pop
cmc
imul
adc
cmp
repnz
and
popf
cmovno
adc
mov
faddl
xlat
adc
ret
push
xchg
inc
mov
mov
repz
shl
ds
jecxz
sarb
xchg
aad
sbb
adcb
sbb
sub
mov
jle
nop
xlat
gs
cmp
xchg
push
test
arpl
mov
mov
insl
out
adc
loopne
and
sub
jl
mov
ret
sbb
dec
mov
dec
push
jmp
leave
xchg
lods
pop
or
fstl
iret
jge
jg
gs
icebp
sbb
jb
cmp
adc
add
mov
mov
xchg
jg
xchg
xchg
repz
loop
scas
inc
cmp
sbb
stos
and
xchg
add
pop
xchg
adc
rcrl
out
lock
loopne
sub
adc
out
push
add
loopne
fsubr
xchg
mov
cmp
mov
ret
xchg
jne
push
add
mov
pop
std
aad
mov
lds
sbb
jo
sbb
loopne
xor
ret
inc
les
push
iret
ss
mov
imul
lcall
inc
sahf
fbld
mov
lret
mov
outsl
outsl
add
cld
gs
fcom
fnstcw
test
xchg
mov
fisubrl
popa
outsb
stos
sti
bound
and
clc
and
pop
xchg
in
fxch
mov
jle
lock
and
fistpll
and
shrl
add
bndldx
repz
out
icebp
adc
popf
sti
dec
mov
fwait
adc
inc
jmp
add
pop
fcmovne
xchg
jb
fcmovnbe
push
out
jecxz
jb
ljmp
and
hlt
dec
inc
dec
pop
dec
mov
lea
imul
add
mov
imul
cwtl
js
xchg
jae
add
jae
mov
jmp
push
popf
std
push
imul
xchg
sarl
sbb
jnp
dec
cmp
daa
test
notb
xchg
mov
pmaxsw
inc
ljmp
lds
leave
dec
mov
cld
inc
jmp
jge
adc
imul
push
jns
ficompl
lods
dec
rcrb
out
lock
sti
or
cmc
mov
mov
lret
or
mov
sub
filds
xchg
in
dec
pop
fptan
mov
push
mov
inc
aad
sahf
fistpll
in
dec
loope
fdivr
push
popa
data16
xchg
xor
sbb
inc
lds
jle
aaa
int3
inc
iret
nop
mov
pop
popf
ret
cmp
daa
lret
pop
push
lods
add
stos
xchg
pushf
adc
rcrl
jmp
pop
popf
cwtl
pop
dec
xchg
pop
and
cmp
lcall
js
and
inc
mov
and
push
sbb
sti
jno
leave
cmpsl
adc
mov
jbe
push
sub
int3
in
cmpsl
mov
fisttpll
inc
and
lahf
fucom
fwait
cmp
sub
or
inc
cmp
dec
adc
movsl
and
add
pop
adc
inc
lods
fisttpll
addl
or
inc
roll
or
idivl
clc
jnp
rorl
cmpsb
popa
popf
add
clc
out
mov
and
fs
push
xor
jae
scas
xchg
sub
cmpsb
pop
call
xor
sarl
jne
xchg
rcll
ret
mov
int3
sub
push
js
sbb
push
daa
mov
ja
push
jne
les
lods
inc
imul
xchg
xor
cmp
rcr
ret
fwait
sbbb
mulb
shl
test
fstpl
pop
or
mov
js
stc
dec
xor
jp
mov
sbb
push
pop
mov
lret
scas
icebp
add
push
and
push
mov
xchg
sub
jno
ss
jns
in
mov
test
dec
test
dec
js
mov
test
in
iret
adc
sbb
mov
jecxz
mov
cmpb
adc
andl
adc
or
rcr
mov
decl
nop
fisubrl
sbb
jne
push
sub
and
jl
ss
fucomp
jb
lret
mov
aad
inc
pop
mov
dec
pop
mov
sbb
rorb
mov
lret
mov
fisttpll
dec
aam
mov
cmp
in
repnz
test
pop
loope
pop
daa
ds
repz
in
jno
jle
std
jle
jecxz
enter
pop
xlat
loope
dec
dec
adc
add
cmp
int3
mov
adc
or
xor
rorl
push
js
mov
aad
jp
and
dec
call
pop
insb
push
jl
fwait
inc
pop
and
push
pop
mov
inc
fs
pushf
fildl
pop
push
adc
loope
fdivs
shl
movsb
mov
jmp
lock
sub
xchg
sbb
js
jg
in
cmc
jmp
js
pop
add
stc
add
idiv
decl
xor
xchg
xor
pop
iret
sub
out
cmpsl
mov
shl
filds
jae
std
sbb
jp
inc
aaa
data16
add
mov
inc
jae
inc
aas
fcoml
lret
sub
xor
ret
movsb
or
repnz
push
nop
in
inc
pop
or
push
dec
scas
adc
inc
inc
aas
sub
hlt
adc
mov
jae
arpl
test
in
ja
mov
cld
add
dec
outsl
in
loopne
mov
dec
out
movsb
in
std
outsb
sub
pop
add
repz
insl
sbb
popl
xor
sub
sarl
daa
push
mov
or
cmp
xchg
rorl
mov
jle
jmp
js
mov
push
js
roll
mov
repz
insb
fmull
pop
jb
adc
sub
add
jp
out
popa
adc
loope
inc
adc
enter
rorb
inc
inc
scas
push
das
shlb
shll
ja
cmp
cltd
jno
mov
dec
push
ds
cmp
adc
cli
imul
inc
xor
call
ret
xchg
test
pop
sbbl
dec
cmp
xor
sbb
lds
sbb
testl
movsl
pop
mov
fstps
neg
leave
xchg
inc
cli
ss
cli
push
test
dec
or
mov
adc
push
dec
cmp
add
pop
xchg
pop
xchg
pop
jo
mov
stc
adc
cwtl
lock
fimull
hlt
push
cmpsb
lock
test
add
xchg
pushf
mov
jge
inc
sbb
cmp
repnz
sti
lret
pop
push
dec
xlat
sbb
jg
rcrb
add
xor
int
push
je
iret
in
enter
jmp
fidivl
pop
lret
mov
lods
inc
cmp
inc
mov
jge
out
push
into
aad
fstpt
pop
sub
or
fdivl
aaa
or
push
and
dec
mov
inc
push
shl
mov
sub
dec
pop
adc
pop
add
mov
out
repz
enter
pushw
stc
ret
cmpsl
rcrl
adc
lcall
sbb
cmc
inc
jbe
popf
mov
clc
adc
imul
xchg
inc
into
inc
cli
insl
aam
mov
inc
fnstsw
push
aas
xor
and
mov
xor
rolb
cltd
nop
jl
sbb
cs
mov
cmp
mov
adc
pop
xchg
jbe
mov
jmp
mov
call
fcomip
pop
icebp
sub
add
pop
pop
pop
add
enter
push
insl
test
lret
xchg
test
pop
push
leave
cs
pop
xchg
sbb
imul
fsubl
out
pushf
lcall
lods
es
sub
movsl
lds
xor
jl
mov
xchg
scas
pop
or
test
enter
mov
in
divb
adc
nop
jge
call
in
sub
sbb
adc
xchg
and
dec
sbb
or
cli
test
mov
int
clc
les
testb
stos
mov
jno
test
xlat
gs
mov
xchg
cmp
jns
lahf
jnp
fldcw
mov
xor
test
aam
sbb
inc
daa
push
outsl
ret
lock
sub
mov
and
lock
loopne
fcmovnu
adc
xor
push
leave
jecxz
xchg
xbegin
xchg
popa
or
sbb
clc
fidivl
sar
add
jle
fidivrl
addr16
xor
fidivrl
pop
mov
mov
test
gs
cmp
mov
mov
xor
test
push
adc
es
aam
adc
mov
jg
push
push
in
lods
xchg
adc
xchg
pop
adc
aas
shr
repz
sbb
sbb
dec
mov
test
cmp
lar
sub
loope
lcall
or
dec
popf
js
xor
sub
loop
pop
stos
push
fwait
aaa
pop
sbb
or
insb
dec
lahf
jns
jae
js
push
movb
cmp
cs
fsubl
and
in
xor
rorl
jle
mov
adc
cltd
fcompl
sbb
push
cmpsb
push
popf
lahf
stos
ror
scas
and
aad
es
fildll
xchg
subb
cltd
test
jb
movsb
mov
cmp
into
jno
test
xchg
push
into
cli
xchg
xchg
jnp
out
cmpl
icebp
bound
pop
cmp
mov
lret
test
call
adc
mov
mov
movsl
jle
lock
inc
fdivrl
push
cmp
loope
push
iret
xor
hlt
clc
inc
fadds
lahf
xor
pop
dec
mov
push
adc
jecxz
adc
cs
mov
jmp
mov
xchg
movsb
adc
loop
inc
test
fwait
adc
shll
jle
adc
andb
repnz
add
inc
mov
clc
in
movsb
mov
or
push
mov
xchg
outsb
scas
push
fucomi
repnz
lret
pop
push
mov
jecxz
push
add
scas
lret
mov
lods
lret
add
pop
popf
pop
test
mov
negb
push
jnp
inc
js
or
sbb
lahf
pop
jle
xchg
bound
pop
out
sarb
dec
rcll
add
stos
lods
mov
jmp
xchg
dec
addl
sbb
sub
or
mov
fsts
xor
xor
add
inc
mov
ljmp
sub
int3
fbld
loope
iret
inc
sbb
xor
aam
sarb
insb
mov
mov
inc
inc
push
jne
dec
rorl
mov
out
lret
daa
nop
mov
add
jge
pop
push
jg
cmp
fisubl
pusha
jbe
lods
enter
lods
subl
lret
mov
adc
lahf
scas
fstp
mov
jp
push
adc
jns
movsl
xor
repz
mov
adc
mov
insl
cmp
dec
cmp
and
sub
imul
adc
aad
cmpsl
cmpsb
imul
cmp
call
popf
out
or
lret
dec
sbb
orl
test
fisubs
daa
rcrl
xchg
xor
pop
xorb
and
aad
stc
rorb
mov
xchg
out
mov
xor
push
loop
xorl
mov
fiaddl
mov
mov
int3
push
add
cltd
sub
mov
imul
inc
in
xlat
addr16
or
inc
lahf
jl
xchg
in
int
into
pop
inc
ficompl
dec
pop
jno
lret
xchg
dec
mov
inc
pushf
push
jge
jmp
stos
and
pop
push
roll
test
mov
arpl
xor
pop
lcall
addb
mov
cmc
clc
roll
adc
iret
or
mov
shlb
out
xchg
pusha
xchg
je
adc
push
lods
repz
inc
mov
fld1
jb
mov
adc
push
test
mov
and
mov
xchg
push
dec
daa
adc
lcall
mov
sub
or
sbb
push
adc
pop
bound
enter
pop
dec
add
repnz
xor
fsub
lret
or
cmpsb
popf
sbb
or
dec
mov
in
cli
xlat
push
cmp
fistl
or
push
movl
das
xchg
pushf
lds
lahf
movsb
mov
jae
inc
inc
fcompl
or
shlb
enter
mov
scas
sbb
inc
mov
mov
jle
cltd
lods
enter
lahf
jle
sub
or
jg
or
mov
lods
push
sub
xor
std
sub
mov
rcll
js
int3
fisttpl
aas
je
xor
insl
jmp
dec
or
xchg
mov
mov
jno
mov
rcl
adc
mov
test
add
jecxz
pop
daa
add
out
into
push
cmpsl
dec
repnz
push
repz
cmp
sbb
inc
fstps
pop
mov
cmp
mov
mov
std
je
jecxz
enter
xchg
nop
dec
sbb
xor
xchg
lret
mov
dec
pushf
in
sbb
lea
pop
sbb
pop
mov
sub
dec
lahf
jge
jae
fistl
jae
mov
xchg
sub
pushf
je
mov
xchg
fmull
jge
dec
mov
stos
jne
mov
mov
ja
es
pop
mov
stos
jle
test
mov
iret
out
cltd
aaa
mov
test
popa
popf
inc
add
xchg
cmp
or
les
adc
aam
mov
push
cmp
sub
cmpsb
enter
cmpsb
xchg
fsub
mov
fwait
nop
sti
jb
gs
cltd
mov
or
pop
push
xor
cmp
cmp
jo
jae
leave
mov
mov
dec
xor
rorb
imul
sub
or
push
xor
mov
jecxz
enter
mov
and
pushf
sti
cmc
aam
mov
mov
int3
mov
subl
test
xchg
pop
jnp
and
adc
lret
or
nop
cmpsl
sbb
ljmp
sahf
or
inc
push
cmp
int
mov
fcompl
mov
lock
int3
dec
inc
xor
cltd
push
into
fmull
ret
insl
stos
andl
jbe
jo
ret
jo
sbb
test
loopne
repz
push
aas
cmpsl
es
sbb
jno
clc
jg
xor
sub
mov
movsb
sbb
loopne
pop
fisubs
cmpsl
ret
ror
fisubl
inc
stos
fdivp
mov
fcomps
push
lea
andb
cmp
test
test
js
ds
add
cs
sbb
gs
fs
fs
movsl
adc
fwait
mov
fists
push
cmp
outsb
mov
call
pop
test
shr
mov
adc
mov
jbe
imul
das
xchg
cmpsb
out
stos
mov
pop
stos
mov
movsl
shll
lds
pop
icebp
cmc
mov
rcl
insl
mov
or
int
xchg
test
fisttps
addb
mov
in
mov
adc
xchg
mov
lods
ret
add
lods
clc
xchg
adc
test
fucomi
repnz
xor
mov
jge
loopne
pop
jns
sbb
xchg
cmc
clc
rcrl
jmp
scas
mov
push
ss
jle
sbb
int3
pushf
enter
mov
js
mov
jns
in
jnp
sbb
and
hlt
jno
insb
xor
xor
pop
mov
push
jnp
std
pop
or
out
repz
jo
sbb
and
ds
rcrl
mov
xchg
sbb
js
or
lcall
dec
dec
mov
mov
add
and
stc
inc
pop
hlt
push
sub
xchg
sbb
jp
fisubrl
jecxz
add
push
roll
lods
inc
scas
xchg
fistl
push
dec
pop
inc
inc
test
out
test
add
pusha
std
push
push
dec
movsl
in
jge
ss
push
jl
lods
adc
sub
dec
es
push
mov
cmp
mov
jae
fistps
fimuls
mov
and
clc
pop
aaa
inc
mov
bound
aam
data16
rclb
jecxz
mov
outsl
mov
stos
aaa
xchg
int
jecxz
mov
xchg
test
adc
call
shrb
std
filds
inc
and
xchg
cltd
sbb
fwait
pop
pop
outsl
or
bound
adc
jne
jne
ret
imul
iret
pop
dec
mov
lahf
or
jmp
bound
shlb
aad
fcmovnu
ljmp
sarl
sbb
mov
test
add
mov
lret
sbb
dec
fcomi
add
sbb
rcl
cltd
pushf
xchg
xchg
jbe
cmp
mov
inc
or
mov
xchg
xchg
xor
dec
lret
shll
gs
xchg
mov
insb
or
adc
xor
cmpsb
popf
xor
fcoml
pop
pop
mov
fwait
out
or
xchg
outsl
repz
cmpsl
dec
push
or
ret
pop
push
push
mov
iret
jbe
fsubl
and
test
arpl
leave
pop
add
loopne
sbb
das
jne
jl
cwtl
mov
shrb
mov
aas
dec
fwait
stos
sbb
inc
xchg
fwait
and
lahf
lcall
push
jbe
rolb
dec
jnp
adc
push
lret
dec
add
mov
fisttps
push
pushf
ja
lret
mov
rcll
or
push
test
mov
inc
lds
jl
js
ret
xor
insl
fdivs
ret
insb
cmp
jecxz
subb
repz
jp
movl
mov
fdivr
and
fldl
xchg
into
fadd
push
std
xchg
push
scas
push
jno
xchg
dec
cmp
and
and
adc
rcr
imul
jle
push
sbb
js
push
sub
xchg
pop
adc
xchg
roll
adc
clc
sti
jle
lret
lret
jecxz
jge
dec
pushf
stc
push
jl
push
adc
in
inc
inc
jae
fbstp
mov
rcrb
sbb
test
push
inc
dec
mov
fbstp
shl
movsl
in
mov
bound
mov
pop
mov
mov
pop
inc
les
push
test
jmp
inc
push
adc
mov
scas
or
iret
push
jno
cmp
enter
adc
and
fucomi
ds
ret
shrb
fcoml
js
dec
xchg
or
cwtl
fdivrl
rolb
cmp
mov
mov
mov
iret
mov
imul
rep
mov
mov
insl
outsl
or
lds
pop
mov
and
dec
and
jp
loope
fsubl
dec
jnp
add
inc
sbb
mov
add
leave
jns
mov
test
pop
adc
cmp
test
fs
and
sub
adc
aad
out
xchg
out
pop
sbb
pushf
dec
and
insl
and
lahf
fiaddl
push
ss
rorb
int3
jnp
flds
push
push
jnp
out
xor
les
in
addr16
fdivl
pop
mov
mov
cmp
and
pop
adc
push
dec
and
imul
add
adc
lahf
sbb
dec
mov
xor
sub
or
fdivl
push
mov
pop
dec
and
dec
dec
sarb
leave
pop
aam
push
mov
and
fidivl
int
pop
sahf
mov
fisttpl
call
cmpb
popf
inc
repz
push
mov
pop
aaa
je
cmc
loopne
aas
sub
gs
stos
cmp
jae
das
push
add
add
adc
sub
cmp
inc
and
mov
mov
inc
in
loopne
mov
adc
cmp
sbbl
repz
mov
pop
out
jne
aam
adc
jmp
jns
fldl
cmp
fnsave
std
shl
add
add
xchg
or
jns
lods
out
aad
add
pop
mov
and
fucom
pop
xor
adc
or
jo
cli
pop
decl
xorb
iret
in
divl
pop
incb
dec
aam
jns
lret
mov
sbbl
pop
out
mov
adc
lds
jecxz
or
mov
dec
and
lea
out
push
int
outsl
pop
xor
ficomps
inc
mov
loope
sarb
adc
mov
aam
lret
sbb
gs
xor
call
push
or
fsubs
pop
rcrb
add
adc
rcrb
xor
testb
lds
push
adc
ret
sbb
adc
sub
int
dec
sbb
andb
push
or
out
jno
movl
jae
push
pop
cli
inc
inc
stos
dec
pushf
jp
xchg
adc
orb
fistl
popf
jnp
aam
mov
leave
xor
cmc
sub
ffreep
testl
mov
xchg
int3
cmc
xor
xorl
repz
lds
inc
push
aam
fisttpll
aaa
adc
popa
outsb
enter
xor
or
rcrl
push
out
mov
jae
lret
fidivs
jnp
sbb
pop
mov
add
lea
dec
inc
mov
and
sub
leave
xchg
fstp
xor
imul
rcrl
int
sbb
mov
movl
movsb
shr
rep
mov
mov
add
repnz
mov
mov
dec
mov
push
test
nop
jecxz
mov
sub
dec
mov
iret
sub
mov
bound
mov
in
sub
test
push
jge
cmpsl
jne
pop
mov
stos
add
imul
enter
add
popl
inc
insl
scas
inc
fcmovne
or
mov
js
ret
addl
add
xor
mov
lret
cmp
repz
and
and
push
ret
stc
call
lcall
roll
mov
push
daa
push
aaa
push
mov
ficoms
pop
mov
adc
shr
repz
outsl
mov
mov
div
sbb
out
cmp
stc
lock
sti
lea
mov
sbb
xchg
pop
push
outsl
stos
movsl
mov
pushf
mov
xchg
xlat
stos
cmp
add
test
push
popa
dec
mov
in
pop
arpl
add
xchg
aam
xor
adc
imul
sbb
stos
vunpcklps
mov
stos
inc
lcall
imul
lret
pop
mov
fsubs
lahf
scas
sti
lret
cmp
in
push
or
xchg
test
test
pop
fs
ja
xchg
rcll
lock
push
addb
in
jnp
test
sub
jns
add
in
mov
cmp
jge
add
into
divl
out
mov
or
cmp
or
out
ja
int
imul
sahf
pop
mov
into
pop
stos
rcrl
cmpsl
push
jno
in
data16
jnp
mov
lret
mov
sub
mov
pop
jo
dec
or
or
dec
cmc
fsubrl
fistpl
mov
mov
inc
outsb
sub
push
popa
inc
pop
xchg
mov
mov
fsubrs
out
orl
dec
mov
xchg
sahf
test
imul
rclb
inc
jbe
lcall
mov
mov
and
js
cmc
mov
and
inc
cmp
in
pop
ds
sti
xor
ret
mov
mov
pop
xchg
pushf
xor
test
jno
xor
xchg
xchg
movsb
jno
jge
and
gs
dec
mov
lahf
jne
fisttpl
inc
pop
add
into
xchg
xor
mov
fwait
cs
mov
shr
mov
enter
loope
dec
stos
shlb
or
cwtl
jne
pop
mov
data16
mov
lock
popa
mov
add
sbb
popa
std
dec
out
xchg
push
or
shl
stos
dec
pushl
lret
movsb
cmp
xorb
add
into
stos
loopne
mov
mov
ss
cmp
mov
in
or
inc
push
jp
arpl
test
sbb
push
outsl
jmp
pop
push
ss
and
jb
push
mov
shlb
push
xchg
shrb
cltd
shll
pop
mov
popa
mov
jmp
mov
cmp
mov
dec
cmp
lods
sbb
add
jp
xchg
sub
jle
xchg
lods
cwtl
dec
and
push
jle
add
add
daa
pop
ds
repnz
mov
icebp
mov
jl
sub
mov
cmp
inc
sbb
call
adc
pop
mov
pop
int
int
pop
xor
jbe
fwait
cmovns
mov
negl
xchg
jbe
cwtl
mov
sahf
cld
rol
dec
sbb
add
stos
outsl
or
rclb
cmp
leave
in
dec
add
insl
dec
jne
ficomps
ds
test
or
adc
call
pop
adc
imul
adc
jmp
jb
faddl
jp
lds
movsb
cmp
mov
jmp
gs
inc
imul
imul
or
jle
cld
out
in
jne
mov
pushf
dec
and
cmp
xchg
mov
xchg
cmpsb
push
push
in
cltd
dec
fdivr
or
sub
xchg
inc
cmpsb
sahf
push
fld
fs
into
fsubrp
jbe
out
movsb
push
sub
insb
cwtl
xchg
je
dec
push
add
adc
ret
xor
jb
inc
push
dec
fcmovu
xor
popa
int3
mov
inc
mov
mov
mov
sbb
popa
lcall
pop
pop
xlat
aaa
fs
cmpb
int3
sub
pushf
dec
jl
pop
inc
cld
mov
ss
jne
lods
movsb
ds
jle
pusha
fisttpll
add
pop
arpl
cmc
pop
insl
mov
repz
mov
push
cmp
mov
mov
rcrb
pop
jge
in
inc
or
jmp
push
pushl
faddp
dec
loop
in
mull
addl
std
test
push
sub
arpl
jo
xlat
insb
js
rcrb
mov
ss
int
sahf
data16
fs
ds
mov
pop
int
adc
sbb
leave
inc
add
lret
mov
jmp
push
add
movsl
addb
lea
ss
or
fwait
rcll
sub
add
mov
aaa
jnp
mov
add
cmp
sti
repnz
ss
aam
or
das
pop
ss
fildl
arpl
adc
lods
outsl
shr
mov
sbb
pop
pop
add
adc
mov
popf
in
push
roll
cmp
stos
repz
divb
addl
mov
outsl
push
mov
enter
das
xchg
sbb
sub
pop
fildll
lret
cmp
mov
pusha
out
dec
jns
aas
or
mov
and
in
je
test
xor
pop
xchg
ljmp
stos
fisubl
pusha
sbb
mov
insl
jp
ret
icebp
fwait
repnz
add
cwtl
call
sub
jecxz
out
stos
cmp
adc
lret
in
jecxz
insb
jbe
or
add
fldt
mov
pop
cmp
mov
jecxz
rcrb
pusha
lds
aaa
mov
mov
rorb
iret
cmpsl
mov
and
adc
jae
loop
xchg
sub
mov
add
inc
test
addr16
out
scas
push
mov
ljmp
into
cwtl
lds
or
jae
mov
push
mov
je
dec
pop
push
sub
mov
das
and
sahf
popl
iret
imul
cmc
jns
dec
loop
in
mull
addl
js
xchg
aas
xchg
int
je
addl
xor
mull
mov
jns
fcmovbe
or
fwait
insl
cmp
stos
sub
cmp
imul
sub
cwtl
jns
lret
leave
adc
sbb
inc
fnsave
sbb
insb
movsl
and
dec
jns
inc
push
mov
and
call
repz
addr16
mov
sbb
cmp
popf
test
dec
jo
cmp
inc
dec
dec
sbb
mov
pushf
dec
and
push
push
xor
lret
dec
mov
lret
push
dec
push
stos
xlat
xor
and
arpl
pop
adc
sub
test
pop
fistpl
mov
fcmovnb
jnp
mov
lret
das
test
lods
hlt
add
xchg
add
xor
mov
xchg
loope
andl
add
xchg
xchg
dec
and
cmp
xchg
mov
shlb
xchg
lea
outsl
stos
les
or
lret
cltd
enter
mov
adc
shrl
outsb
fbld
stc
dec
inc
clc
inc
es
dec
sahf
dec
jb
ja
inc
idivb
add
ss
sub
add
cmp
pop
inc
mov
jecxz
movsl
cmpsl
int3
stos
mov
cld
xor
fists
call
and
mov
nop
push
lcall
jge
cmp
inc
lahf
mov
out
mov
jae
inc
insl
cmp
sbb
add
adc
in
in
lret
mov
les
aad
mov
push
into
fmull
shr
je
sub
bnd
cs
cmc
test
cltd
or
lods
push
imul
jle
repz
mov
out
rcrl
inc
sub
sub
jmp
push
mov
mov
jbe
mov
les
enter
in
sbb
iret
jns
fnstenv
mov
adc
push
jne
mov
jmp
sahf
loopne
xchg
insb
jbe
adc
mov
js
test
inc
pop
subb
jae
pop
and
dec
ljmp
fsts
cmpsb
decl
push
or
ss
xor
addr16
stc
mov
gs
enter
lret
inc
adc
mov
jne
xchg
cmpsl
imul
mov
and
cmpl
test
gs
jnp
in
lcall
inc
movsb
jl
xchg
or
outsl
mov
fildll
or
push
push
adc
sub
aas
xchg
add
cwtl
add
roll
mov
adc
and
dec
test
inc
mov
mov
xlat
psubusb
xlat
mov
xchg
pop
repz
gs
and
cmp
cmc
imul
inc
enter
ljmp
adc
fnsave
enter
sub
dec
jge
dec
xorl
jno
mov
hlt
repz
mov
xor
dec
pop
dec
jnp
dec
sti
andl
or
lret
lds
inc
andl
mov
sbb
outsb
sub
mov
pushf
imul
cmp
sbb
mov
bound
pop
dec
dec
repnz
jle
xchg
dec
mov
push
jle
xor
enter
jmp
lcall
dec
iret
push
sub
mov
cmpsl
ret
outsb
iret
or
lahf
shl
sbb
push
xchg
stc
add
xor
inc
sbb
orl
mov
loope
pop
inc
mov
test
xor
test
aad
mov
dec
pop
cmp
or
adc
or
sbb
insl
sub
inc
sbb
je
and
sub
js
sti
mov
arpl
std
pop
adc
jno
inc
fisubl
adc
out
aaa
add
cli
roll
addr16
mov
or
add
sbb
sti
inc
cli
subb
mov
aaa
imul
in
push
sbb
and
inc
inc
popa
test
sbb
xor
mov
mov
fmuls
pop
sahf
and
cld
jp
add
roll
xchg
inc
pop
shr
add
pop
jge
scas
out
stos
loope
cli
add
inc
pusha
pop
stc
push
mov
rcl
adc
int
mov
fbstp
push
xchg
es
add
subl
enter
inc
jo
cmp
and
ja
sahf
imulb
icebp
repz
push
and
cmp
sub
sub
mov
loope
mov
xor
mov
adc
popa
lret
mov
ret
loopne
mov
adc
orl
xor
add
int3
sbb
xchg
inc
aad
int3
pop
and
inc
mov
push
and
mov
stc
and
mov
rolb
imul
testl
mov
sbb
movsb
iret
mov
pop
fidivl
mov
in
popl
stos
mov
in
xor
ss
sbb
int
or
scas
aaa
inc
int
test
add
mov
sub
mov
enter
push
je
xor
sahf
clc
jecxz
add
or
dec
and
clc
mov
ja
inc
sbb
popf
movsl
cli
xchg
in
jae
fs
xchg
les
sbb
adc
outsl
in
daa
in
imul
data16
inc
adc
imul
rorb
popf
std
leave
inc
dec
lcall
movsl
xor
fsubp
push
popf
sti
sbb
pop
fbstp
pcmpgtw
or
mov
rcl
cmpsb
or
out
cmpxchg
push
daa
scas
lea
lods
test
pop
dec
mov
mov
mov
lock
enter
test
ret
lahf
nop
cwtl
adc
jge
scas
jne
cmc
insl
outsb
popa
inc
outsl
cltd
sbb
arpl
fistl
add
imul
push
inc
scas
and
scas
sbbb
xor
lret
out
mov
adc
sbb
mov
jl
or
addr16
sbb
jno
out
sbb
adc
sbb
fsubs
pop
mov
cmpsb
test
dec
cmp
sub
mov
jecxz
cmpsl
mov
sub
and
nop
mov
iret
sbb
mov
xor
test
in
cwtl
jne
mov
scas
xor
decl
dec
rcr
sbb
nop
divb
fs
mov
add
xor
xor
gs
addb
inc
inc
sub
jne
mov
ss
cmp
mov
mov
negl
mov
push
lret
lret
sbbl
inc
sbb
popa
cld
mov
xchg
mov
push
xchg
adc
dec
push
dec
fs
mov
dec
push
mov
push
xchg
shll
mov
out
repz
xor
dec
jmp
xchg
pop
jb
mov
inc
int3
mov
fistl
shlb
ja
fs
loope
js
mov
ret
push
sub
mov
in
call
fistl
pushfw
xchg
inc
inc
mov
inc
popf
incb
test
add
mov
push
adc
ror
int
mov
xchg
jbe
je
and
cmp
clc
cmp
or
cmp
mov
idivl
std
lret
pop
push
mov
fists
jg
fldl
fsubrl
pusha
lret
cli
sbbb
pop
cli
jg
and
mov
cltd
jno
sbb
mulb
iret
push
dec
bound
jae
dec
mov
rclb
cltd
xchg
fmul
in
test
or
test
pop
add
jo
pushf
mov
lock
stc
push
jl
adc
mov
bnd
or
push
xchg
ror
lock
into
mov
adc
and
mov
cmp
xchg
jno
push
shll
mov
clc
cmpsl
ret
mov
mov
jae
mov
aaa
push
les
aaa
pop
popl
mov
dec
adc
sbb
dec
sahf
dec
add
inc
add
cltd
push
mov
sub
add
rolb
in
jl
mov
aaa
adc
mov
mov
insl
add
incb
test
cmpsl
pop
clc
fwait
jb
addr16
sub
sbbb
lret
jno
cmpsl
sbb
mov
data16
stc
in
dec
lret
xor
mov
pop
les
ljmp
in
xchg
mov
xor
pop
sbb
cmp
dec
cs
jl
sbb
push
je
add
movsl
cmp
and
jmp
push
jg
mov
mov
dec
mov
jne
loopne
jl
mov
pop
dec
mov
sbb
xchg
fbld
addr16
sbb
sub
lods
lods
pop
xorl
xchg
mov
int
mov
jb
int3
faddp
jl
sbb
adcl
hlt
je
in
fwait
push
add
and
cs
sbbl
dec
fdivs
call
cs
or
cmp
out
inc
adc
and
ret
pop
inc
mov
or
mov
push
aaa
mov
das
dec
mov
inc
lahf
into
xor
int
sahf
ret
int3
loop
jno
rcll
jno
fisubrs
cmpsl
inc
mov
das
ffree
xor
iret
sbb
lds
mov
mov
push
jge
mov
push
push
dec
aam
call
fwait
rclb
adc
pop
cmpsl
cmp
loope
js
roll
inc
push
popa
fsts
adc
mov
jo
mov
pop
andl
inc
pop
fidivrs
fidivrl
jp
lea
xchg
xchg
movsl
inc
shlb
sti
lahf
pop
and
sbb
inc
mov
mov
sbb
out
and
loopne
mov
dec
push
mov
pop
xor
mov
xchg
scas
shr
push
mov
pop
pop
outsb
flds
mov
sbb
jecxz
cld
pop
xchg
psrlq
fcmovne
jns
aas
dec
test
or
aad
and
lret
cmp
aaa
cwtl
lret
imul
xlat
in
lret
scas
mov
add
aad
push
adc
cmp
jbe
lahf
cltd
data16
mov
leave
stos
xchg
xor
insl
fsubrs
call
mov
in
dec
bound
xchg
mov
subl
call
pop
roll
jb
mov
scas
inc
lahf
cmp
jo
sarb
add
into
inc
cmp
mov
pop
enter
addr16
mov
faddl
xchg
inc
sbb
mov
pop
ljmp
outsl
mov
in
xchg
inc
and
mov
dec
push
repnz
popa
movsb
mov
ljmp
jmp
data16
subl
mov
mov
adc
inc
mov
enter
push
mov
mov
adc
mov
movsl
or
jge
mov
aaa
jmp
insl
mov
pop
fsub
cmpsl
push
sbb
mov
push
sbb
pop
mov
lret
fucomp
cmpsl
mov
pop
xor
push
xchg
mov
lock
shl
sub
pop
icebp
inc
cmpsb
mov
stos
or
and
outsl
dec
out
sub
mov
fldcw
xchg
mov
mov
jecxz
sbb
push
data16
dec
pop
es
dec
pop
cltd
daa
mov
or
addr16
jmp
pop
je
add
dec
into
aaa
out
jmp
and
pop
cwtl
xor
push
repz
data16
pop
ds
xchg
sbb
movsb
ret
jl
sub
mov
fsubr
jns
jle
scas
pop
fmuls
int3
scas
add
fwait
cltd
lcall
imul
mov
xchg
dec
pop
inc
mov
sbb
mov
push
sbb
cmp
jp
sar
cmpsl
dec
mov
adc
xor
sub
lahf
sbb
orl
iret
mov
and
stc
mov
das
xor
mov
lret
rcll
test
sub
into
movsl
push
push
nop
jl
pop
mov
scas
cmp
cmp
mov
pop
ficompl
lcall
dec
cmp
inc
cwtl
in
cld
jle
loop
cmc
cld
jle
aad
adc
gs
push
sub
jp
outsl
mov
sarl
call
or
fisubs
or
and
mov
out
mov
mov
loope
test
xchg
adc
fidivrs
lret
mov
and
cmp
jne
dec
mov
lret
sbb
daa
inc
ret
adc
fmul
jne
or
add
scas
lock
jmp
mov
sbb
jno
lret
cli
jbe
loop
int3
bound
jl
push
and
cld
jns
push
adc
stos
cmpsl
sbb
test
fisubrs
mov
and
dec
mov
cmpsl
fldl
add
push
negb
mov
push
outsb
pop
adc
add
inc
sub
push
ret
shrw
movsb
cmpsl
pop
jl
dec
fstl
pushf
cmpsl
push
jo
insl
add
xchg
bound
xchg
cwtl
mov
aas
inc
cmp
jecxz
jle
shlb
jo
and
daa
mov
mov
in
call
sub
sub
inc
jmp
or
les
mov
jb
and
daa
or
and
mov
sub
and
rclb
movsl
jb
cmp
outsb
mov
cld
cmp
add
add
loop
ja
sar
in
xor
push
adc
jo
cmp
std
scas
inc
push
into
iret
xor
pop
push
adc
sbb
xlat
mov
ljmp
lods
adc
movsb
iret
pop
in
popa
cmp
lods
mov
inc
push
push
mov
dec
mov
push
cld
popf
pop
outsl
sbb
cmc
add
push
fbstp
stos
gs
push
jb
rcl
sbb
cltd
popf
es
xchg
lret
sahf
fdivp
adc
jae
dec
aad
pushl
jae
js
es
sbb
shlb
ret
and
or
jae
jecxz
add
add
addr16
sbbl
fadds
pusha
jne
cmpsb
test
add
pop
sarb
add
popa
sbb
ja
int3
pop
adc
dec
rcll
add
cmp
push
pop
or
dec
out
and
jne
push
sub
dec
adc
int
pop
pop
cmp
add
mov
inc
movsl
cltd
lcall
pop
sub
sti
sub
fisttpll
xor
jmp
mov
jne
mov
movsl
mov
fidivl
int
mov
dec
sub
dec
lcall
ret
xor
push
in
push
mov
lods
inc
and
mov
mov
div
addl
xor
test
pop
fwait
outsl
xchg
fistl
cmp
addr16
xchg
cmp
mov
xchg
cld
jbe
pushf
lret
inc
jo
and
add
lret
and
mov
ds
mov
jmp
jle
xchg
fildll
sbb
cmp
call
sbbl
mov
xchg
mov
push
test
mov
and
pop
adc
push
xor
and
sbb
icebp
popf
xchg
je
jecxz
imul
pusha
jge
shrb
pop
push
push
sub
insl
inc
inc
mov
mov
enter
lret
or
andl
cmp
or
pop
dec
mov
pop
cli
or
nop
adc
sbb
cltd
in
in
or
dec
inc
xor
pop
dec
inc
pushf
and
mov
popf
test
sbb
addl
std
cld
pop
mov
jo
add
mov
inc
mov
fnstsw
inc
xchg
les
fs
mov
jmp
sbb
shlb
inc
sarb
pushl
mov
dec
ljmp
scas
addr16
fs
outsl
ss
cli
xor
bswap
xchg
jge
fs
mov
xchg
xchg
into
sbb
dec
xchg
or
mov
loope
and
cwtl
inc
fadd
add
sarl
pusha
test
les
shrb
cmovg
xorl
adc
push
sbb
movsl
mov
mov
sahf
mov
jg
xchg
xor
lds
stos
stos
jb
pushf
inc
inc
mov
mov
push
mov
les
push
mov
clc
add
hlt
int
xchg
sub
xor
ret
mov
mov
testb
jns
movsl
sbb
jne
and
cld
dec
outsb
pusha
or
push
adc
adc
lret
and
adc
ja
jmp
ljmp
addr16
ss
cltd
mov
inc
and
mov
fcoms
scas
jg
mov
inc
xchg
xchg
add
push
aas
and
popf
and
cmpsl
test
sbb
push
mov
cwtl
ss
cmp
out
enter
adc
adc
xchg
popf
lods
pop
hlt
xor
test
sub
and
fidivs
pop
movsb
in
mov
imul
pop
push
fnsave
adc
clc
mov
stos
lahf
sbb
cmpsb
mov
or
mov
adc
cmp
lcall
cli
and
ret
mov
sbb
mov
shll
fisttpl
movsb
notb
jae
cli
fs
leave
test
inc
cmp
lret
nop
dec
mov
add
mov
cmpsb
xor
xchg
xchg
sub
js
cltd
lret
add
test
scas
fnclex
loop
and
jnp
mov
sbb
mov
fwait
mov
pop
stos
aam
mov
jnp
test
mov
fwait
lret
in
mov
fisttpl
xchg
jbe
mov
lea
mov
mov
sbb
sbb
loope
int3
dec
push
or
int
jg
stos
int3
mov
pop
pop
sub
adc
shrl
shll
ret
daa
jge
icebp
sub
pop
sti
mov
xchg
xor
lea
shll
add
mov
xchg
sub
sub
fwait
or
test
andb
roll
fnstenv
or
xchg
test
cmp
sbb
mov
mov
mov
xchg
xor
lret
fisubl
mov
and
mov
jmp
and
repz
loop
xchg
rorl
mov
mov
fwait
mov
inc
xor
mov
addr16
dec
and
aad
movsl
ret
mov
mov
mov
jno
sbb
inc
add
fmuls
inc
xor
or
push
or
loope
imul
dec
inc
cmc
fsubs
hlt
cmc
dec
mov
popa
xlat
mov
cltd
pop
add
inc
cmp
cld
sbb
lock
sbb
ja
inc
test
inc
iret
cs
fmull
stos
cmpsl
mov
arpl
les
inc
test
dec
fldt
mov
mov
aad
lods
cmpsl
xchg
test
inc
mov
notb
test
imul
push
ret
xor
inc
jecxz
nop
sub
sbb
ret
std
cmpsb
xchg
leave
repnz
push
push
mov
xchg
sbbb
sub
or
and
rorl
inc
mov
xor
mov
inc
pop
or
into
inc
cltd
or
es
fld1
popa
jo
cmp
lahf
iret
sbb
je
mov
mov
les
nop
dec
daa
cs
or
mov
fldt
idivl
cmp
fwait
pop
aaa
push
repz
mov
data16
mov
adc
sbb
or
iret
cmpsl
mov
adc
sbb
je
and
lcall
dec
gs
loopne
mov
adc
xor
and
mov
sbb
dec
scas
lods
xchg
sbb
test
add
mov
pushf
inc
jnp
ret
jmp
ret
dec
push
cmp
and
xchg
jg
lods
loope
pop
mov
cmc
jl
ror
inc
sbb
insb
xchg
push
mov
push
cmp
xchg
mov
decb
ret
fs
mov
xor
mov
cmpsl
pop
push
cmp
mov
and
and
mov
mov
mov
roll
push
inc
mov
test
movsb
in
mov
repz
aas
scas
ds
lret
xor
cmp
sbb
lods
rcll
sub
cmpsb
jmp
fmul
cmp
pop
ret
vcvtdq2ps
xor
add
rcrl
mov
pop
xor
jae
jp
jg
inc
jb
popf
in
repz
xchg
test
mov
mov
or
lds
xchg
mov
jge
pop
fcmovnbe
jns
test
rcr
mov
cltd
inc
push
and
in
jle
sub
movsl
leave
mov
adcl
mull
xchg
mov
mov
stos
add
mov
cmp
orl
daa
out
cltd
call
pop
sti
ljmp
sub
int3
push
test
cmp
dec
lret
jp
fmull
mov
das
sahf
dec
mov
cmc
or
or
movsl
idivb
lea
arpl
lcall
lar
pushf
mov
sub
inc
lret
cmpsl
scas
dec
cmp
cmp
mov
stos
mov
pop
mov
mov
loop
push
push
jecxz
push
sahf
fldt
jae
shll
add
sbbl
mov
mov
imul
push
adc
lcall
ja
sub
pop
mov
int3
inc
pusha
push
jg
jp
mov
leave
loop
mov
mov
repz
ror
inc
sbb
insb
xchg
push
mov
aad
push
cmp
xchg
clc
pusha
inc
sbb
cmpsl
dec
loop
pop
mov
in
xor
cmp
or
mov
dec
shl
dec
mov
je
adc
mov
aad
pop
es
sbbl
push
and
mov
loopne
clc
xor
jb
in
xor
ret
mov
push
orb
fldenv
nop
adc
sbbb
repnz
movsb
lret
test
pop
mov
in
ljmp
popf
in
xchg
movsl
icebp
test
xor
jbe
mov
sub
xlat
mov
xchg
sarl
rorb
xor
lods
lods
imul
adc
mov
addl
adc
test
add
mov
sbb
add
add
pop
iret
xchg
xchg
int
xor
pusha
xor
rclb
leave
test
mov
outsl
negl
fldcw
lcall
repz
fcoml
xchg
leave
arpl
cwtl
pop
push
jno
out
icebp
in
mov
loope
ja
popf
ficoms
shr
jae
pushf
pop
pop
pop
loope
out
add
test
xchg
pop
xchg
dec
and
push
adc
adc
add
aad
jno
fucomi
xchg
pop
xchg
into
popa
mov
jmp
ficoml
push
test
adc
push
mov
shrb
pop
sub
mov
dec
cwtl
push
daa
rorl
dec
and
mov
addb
xlat
shr
lock
fisttpll
jb
mov
cmpl
test
clc
loop
push
inc
xor
add
jo
add
add
pop
xor
adc
sub
cwtl
movsl
js
cltd
push
iret
lcall
int
pushf
cmpsl
test
jb
adc
bound
into
sbb
hlt
mov
adcl
movsb
mov
jcxz
mov
enter
fmulp
lcall
xchg
mov
mov
movsl
repnz
mov
ret
mov
sub
adc
dec
mov
cmpsl
mov
add
int3
adc
xchg
and
test
sub
lods
shrb
fsubr
je
pop
scas
push
stos
fldlg2
je
sub
imul
test
ljmp
mov
sbb
push
lea
mov
xchg
stos
inc
sbb
push
addr16
pop
gs
cmp
sub
pop
ret
lahf
leave
jp
in
bnd
mov
loop
test
or
in
adc
add
xchg
movsl
mov
pop
xchg
dec
movsl
ret
push
lret
cmpsb
outsb
lahf
mov
jns
pop
mov
int
imul
jl
mov
hlt
mov
arpl
push
push
mov
jmp
jno
fisttpll
inc
sahf
negl
inc
lods
mov
inc
imulb
movsl
pop
mull
repz
push
sub
ja
mov
nop
sub
sbb
test
lcall
jne
mov
pushf
jmp
lds
mov
lcall
mov
cmp
mov
test
pop
push
mov
daa
jge
stos
ja
aad
dec
pop
scas
ds
sbb
movsb
push
xor
mov
xor
fwait
lods
mov
pop
or
mov
jmp
scas
inc
sbb
cmp
xor
in
andl
aam
repnz
sub
pop
cltd
mov
jnp
dec
and
push
cwtl
and
add
jg
ja
cltd
or
mov
cmpsl
sbb
shrb
les
out
lcall
aam
mov
mov
stos
imul
fsubrs
bound
lret
sbb
shlb
dec
lods
cmp
pop
inc
lea
dec
pop
mov
imul
mov
fsub
jle
dec
lahf
in
pop
aam
cmpl
mov
or
or
inc
stos
adc
insb
lock
mov
or
add
fstpt
inc
mov
fsubrl
jmp
dec
inc
lds
push
test
jae
or
lret
jg
push
das
mov
cli
insb
mov
test
into
mov
cli
mov
imul
jp
mov
mov
cmp
mov
xorb
sub
mov
decl
pop
les
mov
stos
xor
inc
fstl
jb
and
movsb
int
pop
adc
jnp
pop
or
and
mov
mov
iret
fimull
shll
test
stc
mov
pop
mov
jle
pop
scas
jp
dec
pop
lods
jge
xlat
pop
inc
inc
and
addb
pop
mov
loopne
or
stos
mov
mov
sbb
or
and
push
aaa
lahf
lret
adc
adcb
push
test
pushf
cs
mov
sahf
das
xchg
stc
cli
ja
stos
jge
pop
mov
mov
push
push
mov
fstl
stos
inc
lcall
movb
outsb
stos
aad
xor
fcomp
sahf
mov
mov
scas
aaa
mov
cli
jnp
inc
mov
iret
mov
or
roll
jnp
test
mov
push
sbb
sub
movsb
daa
inc
pop
or
pop
xor
push
sahf
sbb
fwait
inc
mov
xor
mov
iret
sbb
xchg
enter
inc
in
add
xchg
fwait
mov
push
jmp
jnp
sbb
mov
fwait
mov
pop
pop
repz
mov
ret
sbb
xchg
xlat
lods
pop
or
fwait
popf
xor
test
stc
test
lock
lcall
xor
mov
pop
dec
jno
or
push
in
call
cmc
inc
leave
adc
add
jl
ret
or
and
into
rcrb
stc
mov
mov
or
cmp
lret
or
mov
pop
fildl
mov
jns
dec
ret
xchg
insb
es
int
rcrl
dec
pop
push
sub
js
xchg
cmpsl
aas
int3
insb
ss
mov
xchg
and
andl
jge
jo
cmp
stc
loopne
pop
cltd
repnz
cmp
hlt
pop
sbb
fwait
orl
mov
addr16
jecxz
iret
bound
pop
push
outsl
mov
test
sbb
or
dec
clc
mov
cmp
jns
mov
mov
inc
int
mov
or
imul
pusha
in
and
sarl
ja
mov
enter
or
nop
aad
fwait
inc
dec
data16
cmp
out
dec
lock
mov
cltd
lret
lcall
jns
mov
sbb
pushf
insl
cltd
sub
insb
fcoms
pop
daa
adc
push
sub
mov
daa
sbb
and
sub
cmp
jbe
sub
xchg
jne
fcmovnu
arpl
lahf
jns
fcomps
imul
jge
fs
pop
popl
and
andl
jg
jo
mov
stos
push
pop
jnp
popf
xor
lods
movsl
xor
jnp
lods
pop
nop
pop
cmp
dec
cwtl
mov
lcall
add
sub
and
sub
jmp
repz
adc
fadd
flds
or
add
mov
xchg
lods
push
inc
pop
loopne
pop
add
xor
mov
cmp
jp
popa
fwait
rcl
stc
out
mov
lods
mov
add
mov
add
test
les
aad
std
les
dec
inc
mov
bound
stc
cli
cmp
movsl
xchg
dec
scas
fisubrl
mov
xchg
or
pop
mov
mov
stos
test
test
fs
cmp
stos
xor
jmp
test
or
lahf
mov
cmc
cmp
dec
mov
neg
mov
aam
js
or
in
mov
jnp
fwait
xor
lods
mov
or
mov
mov
outsl
pop
in
dec
and
cmp
or
cmp
dec
lds
movsb
push
rorl
mov
push
inc
inc
cli
iret
dec
call
loopne
pop
insl
pop
mov
jae
mov
inc
xchg
imul
cld
mov
out
add
lea
stc
cld
inc
or
sub
mov
mov
test
addr16
sarl
ljmp
inc
adc
mov
jns
movb
push
cmpsl
xchg
test
ret
add
cli
jge
push
das
inc
mov
stos
shr
mov
test
mov
sahf
mov
insl
or
jbe
jmp
movsb
rcl
sti
je
popf
scas
jg
jp
sti
and
in
lret
inc
xchg
and
je
sbb
lahf
inc
dec
out
stos
xor
ljmp
push
aas
fwait
lret
in
mov
fldt
aas
adc
fwait
mov
jne
xchg
jg
inc
mov
sti
test
lods
adc
pop
sub
js
pop
push
xchg
arpl
mov
xchg
or
jae
inc
mov
lods
mov
sbb
test
lcall
xchg
int3
adc
lods
mov
mov
fisubrl
pop
scas
push
mov
scas
sbb
push
cs
mov
sahf
das
xchg
stc
cli
cmp
scas
xchg
adc
shrb
mov
xchg
or
pop
mov
mov
mov
mov
enter
cmp
stos
xor
jmp
stos
rcl
sti
je
popf
scas
jg
lcall
pushf
fucomi
lret
inc
xchg
and
je
sbb
lahf
inc
inc
out
addr16
add
rorl
pop
dec
pop
into
sub
lods
out
fldt
mov
rcl
push
cmp
jb
and
mov
xchg
faddp
pop
inc
hlt
adc
pusha
jns
or
clc
js
pop
push
xchg
arpl
mov
xchg
or
jae
inc
mov
mov
stos
lahf
insb
pop
and
sbb
test
lcall
xchg
int3
adc
lods
mov
mov
fisubrl
inc
scas
push
mov
xlat
jb
push
cs
mov
sahf
das
xchg
stc
cli
cmp
out
insl
ret
add
dec
scas
xchg
stos
std
icebp
mov
xchg
dec
es
mov
xchg
jne
mov
lahf
jns
mov
xchg
sub
test
pop
aas
cmpsl
in
loopne
das
jg
inc
and
xor
mov
inc
push
jle
fucomip
icebp
mov
lret
in
mov
fldt
movlps
fwait
mov
jne
xchg
jg
inc
mov
test
test
lods
adc
pop
sub
js
pop
push
xchg
arpl
mov
xchg
or
jae
inc
mov
scas
sbb
and
sbb
test
lcall
cltd
int3
adc
and
mov
dec
lcall
test
dec
jae
or
movsb
bound
fwait
lods
adcb
test
mov
sbb
or
dec
roll
jns
sbb
push
mov
mov
mov
mov
shlb
mov
scas
aaa
mov
cli
jnp
and
in
subl
adc
dec
mov
mov
movsl
cwtl
out
xchg
shr
cmp
aas
fwait
lret
in
mov
fldt
rcl
jnp
fwait
lea
mov
ljmp
int3
jb
fwait
dec
lret
inc
cltd
inc
shlb
fwait
mov
dec
lahf
add
add
cwtl
dec
and
mov
insl
pop
test
jne
mov
jnp
stos
mov
dec
sbb
fistps
mov
sub
rcll
sbb
adc
cmpsb
arpl
sbb
mov
push
jg
lds
cmp
pop
loop
dec
out
sub
jb
push
adc
test
test
mov
mov
sbb
imul
sbb
inc
or
dec
mov
in
inc
mov
leave
dec
pushf
inc
addl
ljmp
fstl
or
pop
scas
out
fwait
mov
pop
ds
iret
sub
mov
sti
and
xlat
push
ljmp
cmc
mov
cltd
jb
mov
push
xor
sbb
enter
cmp
dec
or
pop
int3
sbb
dec
lret
or
pop
in
push
mov
xorl
je
add
sub
push
sti
aam
pop
popf
mov
cmp
jp
popa
orb
add
jl
cmp
std
dec
sub
int
sti
addl
iret
test
jp
movsl
loop
fisubrl
jns
mov
sbb
mov
jge
push
std
insl
mov
cmpl
loope
subl
push
repz
adc
push
stos
gs
fistl
lods
nop
sbb
push
sub
pop
jnp
mov
cmp
jmp
or
ljmp
sahf
push
mov
ja
jns
out
fwait
mov
scas
sahf
enter
xchg
sub
out
cmp
cmpsb
rorl
sub
cmpsb
fadds
bound
mov
xchg
test
inc
je
mov
leave
call
cmpsl
pop
xor
cwtl
lea
imul
arpl
int3
push
jg
mov
mov
lret
call
xchg
call
dec
inc
sahf
stos
imul
aam
cmp
mov
sbb
mov
pop
lods
imul
xor
jno
pop
sub
mov
inc
lcall
dec
out
lret
shrb
cmp
or
cmp
lret
or
push
mov
jge
mov
adc
sub
ja
lcall
xchg
inc
jmp
cmp
or
sbb
mov
fwait
mov
push
cmp
test
fwait
xor
lods
jmp
pushf
and
jne
pop
stos
mov
inc
pop
mov
mov
add
add
sbb
add
andb
js
sbb
mov
push
sarl
xorl
pop
scas
mov
sub
mov
mov
cmp
jp
in
stos
mov
dec
sbb
jmp
dec
mov
sub
rcll
scas
cwtl
aas
jb
cmpsb
arpl
sbb
rcrl
stc
mov
push
sub
push
dec
xor
leave
mov
repz
sub
sub
xchg
xchg
xchg
je
jge
test
movsl
adc
pop
mov
mov
mov
mulb
jge
pop
rcrl
pand
out
xchg
inc
mov
adc
andl
out
es
or
icebp
push
daa
addr16
gs
data16
push
mov
lods
nop
lahf
add
push
cmpsl
fcmovnu
pusha
in
push
setbe
push
les
add
out
and
das
lcall
mov
call
cmpsl
fisubl
jp
xchg
jmp
imul
adc
adc
fimull
or
and
mov
pop
add
orl
sbb
add
sbb
jmp
into
push
and
mov
dec
xlat
jecxz
fisubrl
enter
push
orb
repnz
lods
arpl
or
xor
pushf
cmp
inc
stc
mov
mov
push
imul
pop
sub
jp
fistl
cmpsl
nop
dec
xlat
pop
sub
pop
sbb
pop
repnz
pop
out
cmp
cld
mov
push
and
add
jecxz
out
jp
out
divl
sahf
adc
pop
incl
out
mov
jnp
fwait
xor
cwtl
movsb
in
jbe
xchg
sahf
mov
test
fimull
pop
xchg
fsubs
out
nop
add
aam
pushf
icebp
mov
push
jbe
cmpsb
adc
sti
jge
dec
shll
and
cmp
and
imul
dec
jae
or
shll
mov
mov
mov
lods
sbb
xlat
dec
mov
sub
lods
xchg
sub
jno
mov
pop
lods
and
mov
push
ljmp
mov
mov
scas
popf
insl
pop
jnp
insb
xor
cmp
or
cmp
lret
or
add
push
add
jns
mov
mov
xchg
push
push
int
add
sub
imul
jnp
and
in
subl
adc
dec
mov
mov
movsl
cwtl
out
xchg
je
push
aas
fwait
lret
in
mov
fldt
mov
rcl
push
cmp
cmpsb
cmp
inc
faddp
pop
inc
in
adc
pusha
jns
or
clc
js
pop
fnsave
les
mov
cmpsl
cmp
fisttps
test
cmp
jp
popa
cwtl
mov
in
add
test
nop
push
cmp
xchg
inc
mov
mov
lods
pushf
in
xchg
pop
test
sub
cmp
sub
sub
cmpsb
mov
iret
fisubl
popa
scas
lds
or
sbb
xor
or
aad
mov
pop
fstl
mov
dec
dec
pop
sub
aad
jb
in
sbb
or
aad
xor
inc
dec
fucomip
subl
adc
ds
dec
jecxz
sarb
pop
lret
mov
sub
cmc
mov
fldt
stc
dec
and
push
mov
push
lock
or
mov
lahf
pop
rcrb
andb
pop
sub
js
pop
push
or
dec
mov
or
stos
fsubs
inc
enter
add
sbb
lock
daa
mov
xchg
sub
xchg
mov
popf
int3
adc
lods
mov
mov
fisubl
pusha
scas
push
xchg
adc
mov
fldl2e
je
sahf
das
xchg
stc
cli
cmp
movsl
xchg
dec
push
fisubrs
mov
xchg
or
pop
mov
mov
lahf
outsb
mov
enter
cmp
stos
xor
jmp
mov
or
dec
xchg
cmc
jmp
xchg
out
test
std
ret
dec
aam
pop
out
leave
out
nop
es
cmp
push
inc
xor
insb
cmpsl
sub
imul
movswl
jmp
std
mov
sti
mov
push
fsubrl
mov
xchg
mov
lods
dec
daa
mov
jle
sahf
in
xchg
sbb
cwtl
dec
and
mov
imul
inc
xchg
sbb
jae
mov
xchg
sti
hlt
mov
mov
mov
lods
xlat
dec
mov
sub
lods
xchg
sub
jno
mov
pop
lods
and
mov
push
ljmp
mov
xchg
jb
popf
insl
pop
js
insb
xor
cmp
or
cmp
int
mov
dec
aad
cmpsb
xchg
sbb
pop
fstl
lods
nop
dec
aaa
pop
sub
inc
data16
in
jns
push
cmp
cltd
cmc
lds
xchg
fildll
mov
cld
pop
test
jle
xchg
pop
scas
mov
sbb
and
mov
cmp
pop
pop
adc
pushf
and
jne
pop
stos
fisubrl
jecxz
iret
mov
sub
out
outsl
mov
aam
add
andb
js
sbb
addb
dec
addb
push
mov
sarb
or
lea
or
stos
fsubs
inc
enter
add
cmp
lock
daa
mov
xchg
sub
nop
mov
int3
adc
sbb
mov
sbb
or
lds
cmp
pop
loop
dec
incb
adcl
rcrb
push
sub
mov
sbb
or
dec
roll
jns
sbb
push
mov
mov
xchg
test
cmpsl
shlb
mov
scas
aaa
mov
cli
jnp
and
in
subl
adc
dec
mov
lahf
cmpsl
movsl
cwtl
out
xchg
call
fwait
lret
in
mov
fldt
rcl
jnp
fwait
lea
mov
imul
or
movsb
cmp
jb
fwait
dec
lret
inc
cltd
inc
in
es
sub
in
dec
jo
xchg
add
add
cwtl
dec
and
mov
insl
pop
test
jne
mov
jnp
stos
mov
dec
sbb
iret
pop
dec
mov
sub
rcrl
sbb
lret
aas
jb
cmpsb
arpl
sbb
mov
push
jg
lds
cmp
pop
loop
dec
out
sub
jb
push
adc
test
mov
mov
sbb
imul
fistpl
inc
sbb
sbb
push
fsub
xor
lahf
jp
sub
loopne
repz
mov
mov
imull
jle
add
jmp
out
jp
out
divl
sbb
pop
jg
out
mov
jnp
fwait
xor
lods
mov
or
mov
mov
outsl
pop
cmc
cwtl
dec
and
cmp
or
cmp
dec
dec
mov
push
sarl
mov
inc
mov
fwait
cltd
stos
pop
sub
and
mov
mov
cmp
jp
popa
cwtl
mov
fucomp
add
lea
stc
cld
or
scas
mov
into
pop
and
mov
stos
mov
test
insl
lods
push
sub
sub
adc
xchg
mov
cmp
xchg
inc
ja
insl
lds
jge
test
movsl
shlb
push
push
loopne
push
dec
jnp
dec
push
in
pop
jmp
movsl
xchg
inc
adc
or
lahf
mov
cmc
cmp
dec
mov
neg
cltd
in
sbb
cmp
in
mov
jnp
popf
xor
lods
mov
or
pop
cmp
lret
mov
enter
xor
pop
and
mov
andb
js
sbb
mov
push
dec
mov
pop
push
addb
fnstenv
aam
mov
enter
add
fbld
lock
daa
mov
xchg
sub
popf
mov
sub
fcompl
std
mov
inc
and
push
dec
mov
test
dec
inc
incb
mov
stc
cli
cmp
mov
flds
cmp
cltd
add
xchg
dec
imul
push
insl
mov
shlb
lods
pop
sti
mov
xor
jmp
mov
sbb
lds
lahf
cmp
sbb
xstore-rng
cmpsl
push
mov
addb
jo
lds
inc
imul
addr16
add
rol
xor
dec
jg
into
sub
fsubrl
cmp
lea
aad
popf
mov
adc
insb
inc
and
lods
cmp
dec
or
pop
or
or
repz
push
add
fcmovb
pop
inc
lcall
enter
add
fsubs
lock
daa
mov
xchg
sub
fwait
ret
aam
cmp
mov
sbb
mov
pop
lods
imul
xor
jno
pop
sub
xchg
roll
inc
sub
xorl
out
lret
inc
sub
or
or
cmp
lret
or
push
mov
jge
mov
adc
sub
ja
lcall
xchg
test
leave
xor
sbb
mov
fwait
lea
test
int
mov
js
lcall
adcl
jnp
call
or
mov
xor
inc
dec
fsubrs
mov
xchg
dec
testl
push
or
int3
mov
enter
push
aam
adcl
lret
jae
mov
xchg
sti
hlt
jp
pop
dec
aaa
lds
ret
push
dec
lock
stc
gs
mov
mov
mov
movsl
pushf
mov
mov
pop
lods
and
mov
push
sub
push
dec
xor
leave
mov
repz
cmp
sub
xchg
xchg
xchg
or
jge
or
dec
roll
jns
fisubrl
mov
xchg
out
push
decb
movsb
test
fs
sub
jp
pushf
popf
xchg
cwtl
xchg
xor
inc
dec
fucomi
subl
adc
ds
dec
jecxz
fidivrs
pop
stc
lret
fsub
fs
mov
cltd
sahf
pop
jae
lods
cmp
lea
mov
jne
fisttpl
or
mov
inc
hlt
dec
clc
in
fwait
push
out
and
mov
xchg
nop
mov
pop
push
pushf
addb
sub
fnstenv
aam
movl
xchg
scas
add
int
test
mov
in
mov
mov
cld
or
rcrl
mov
mov
sbb
push
dec
xor
xchg
dec
repnz
jns
push
and
lcall
xor
push
fisubrl
mov
xchg
lret
push
cmp
arpl
sub
enter
ret
fs
sub
xchg
xchg
adc
mov
or
lahf
mov
cmc
cmp
dec
mov
neg
xchg
movsb
sbb
cmp
in
mov
jnp
popf
xor
lods
movsl
xor
jnp
stos
mov
cmpsb
sbb
fsubs
jmp
pop
mov
xor
je
cwtl
cmc
add
jmp
xchg
lea
cmp
xchg
orb
sub
push
sahf
orl
mov
pop
int
in
filds
inc
mov
call
dec
jo
mov
test
call
xchg
int3
push
lods
xchg
sub
jno
mov
pop
lods
and
mov
push
sub
push
dec
xor
leave
mov
repz
sub
sub
xchg
xchg
xchg
sbb
jge
or
dec
aad
mov
pop
fnsave
jb
movsb
push
cltd
call
cmp
decb
fbld
cmc
cmp
dec
mov
neg
xchg
sbb
cmp
in
mov
jnp
popf
xor
lods
movsl
xor
jg
lods
cmp
lea
xchg
hlt
imul
mov
inc
inc
mov
dec
sub
jl
sub
stos
push
into
xchg
fadd
flds
or
add
mov
xchg
cmpsl
push
inc
lds
pop
loopne
pop
dec
and
fucomp
call
out
sbb
add
sub
push
ljmp
cmc
sarb
dec
jno
cli
and
cltd
mov
test
sbb
and
xchg
rol
pop
inc
adc
andl
repz
ret
pop
les
test
xchg
sbb
daa
push
mov
lahf
xchg
dec
loopne
cltd
arpl
and
sbb
lods
push
sub
mov
inc
pusha
xchg
dec
negl
or
dec
pusha
cmp
aas
cmpsl
pop
std
jle
cwtl
cmp
std
jnp
sbb
daa
pop
sub
jecxz
fucomi
push
call
orl
push
lods
mov
sbb
sbb
filds
inc
fdivl
sbb
mov
insb
or
mov
inc
add
xchg
cmp
xchg
rclb
in
mov
imul
inc
xor
or
ds
iret
repz
loop
xlat
inc
sbb
jbe
es
outsb
or
jmp
mov
xchg
sub
jno
mov
lods
and
mov
push
ljmp
mov
xchg
mov
popf
insl
pop
push
fsubrs
cmp
or
cmp
lret
or
dec
roll
jns
sbb
push
mov
mov
popf
mov
shlb
mov
scas
aaa
mov
cli
jnp
and
in
subl
adc
dec
mov
xchg
test
call
fwait
lret
in
mov
fldt
in
lea
mov
jne
fwait
jg
inc
mov
lods
sahf
test
lods
jge
dec
and
mov
xchg
cmp
xorl
mov
cwtl
shll
cmp
jmp
fiadds
scas
push
cmp
sar
push
dec
test
lcall
cltd
int3
adc
ret
jbe
pushf
xlat
stos
mov
jbe
scas
and
mov
mov
dec
mov
imul
cwtl
rol
fiaddl
dec
pop
jno
dec
ret
or
lock
iret
fmul
push
inc
pop
pop
sbb
and
cmpsb
xor
adc
xchg
lods
jle
dec
aas
jmp
popf
xchg
inc
cmp
mov
test
dec
pop
inc
pop
idivb
arpl
shr
sarl
pop
or
in
mov
jnp
fwait
xor
xchg
pop
and
mov
cmp
sti
pop
fdivl
mov
mov
int3
inc
mov
cs
fs
push
push
adc
ret
xlat
test
inc
imul
xor
dec
int
ds
fsubs
inc
enter
add
fldl
jg
xor
daa
mov
xchg
sub
pushf
insb
and
aas
cmp
cmp
dec
push
mov
sub
pop
sbb
sub
adc
xchg
xor
mov
cs
mov
inc
aaa
xor
mov
sbb
sbb
pop
jno
sub
bndldx
xchg
dec
push
mov
mov
test
and
dec
test
bound
mov
cli
jnp
inc
mov
xchg
or
cmp
sbb
lock
pop
outsb
lret
out
cmp
fs
fucomi
push
call
push
jmp
ja
insl
sti
cmc
nop
fwait
ds
gs
xor
test
loop
push
adc
xor
push
cmp
add
daa
mov
pop
lret
enter
jne
fmuls
adc
mov
das
stos
mov
sub
notb
inc
and
imul
inc
xor
in
cld
nopl
mov
cmp
data16
ja
repnz
gs
jg
les
pop
fcmovnu
xchg
mov
frstor
push
inc
and
add
sub
mov
aaa
repz
lcall
mov
cwtl
into
mov
shrb
or
xor
jno
push
cmp
and
jo
pusha
push
pop
gs
xchg
mov
data16
popl
mov
leave
xchg
sti
xchg
notl
mov
xchg
and
mov
push
jmp
cmp
push
sbb
fbld
mov
mov
outsl
pop
mov
sbb
add
andb
js
sbb
mov
push
dec
xchg
lret
ja
fdiv
mov
arpl
orl
in
cmpsb
push
jmpw
cmp
leave
sbb
add
or
xchg
xchg
push
sbb
jns
imul
sbb
lods
and
les
sub
mov
lret
fisttpll
addl
xchg
jbe
push
dec
cwtl
stc
push
dec
push
pop
ljmp
or
dec
rorl
out
cmp
leave
faddl
mov
in
subb
dec
mov
bound
sti
and
andl
cmp
js
test
dec
sub
addr16
add
rol
xor
dec
pop
js
sub
xchg
lods
out
fldt
iret
adc
pop
stc
outsl
mov
mov
mov
xchg
push
push
mov
mov
lea
push
xchg
arpl
orl
mov
pop
int
in
xchg
sarl
sub
divl
mov
cmp
sbb
xchg
int3
adc
lods
mov
mov
fisubrl
and
scas
sbb
push
cs
mov
sahf
das
xchg
stc
cli
cmp
sbb
mov
dec
adc
stos
std
icebp
imul
xchg
xchg
inc
pop
mov
mov
lret
jne
cmp
out
cmp
mov
ljmp
add
jle
popf
jmp
inc
cmp
lret
out
negl
inc
lahf
lahf
int
sub
mov
movsb
sbb
inc
mov
subb
dec
clc
xor
cmp
mov
data16
sti
mov
popa
fsubrl
addl
adc
mov
inc
mov
push
inc
inc
popf
jae
call
loopne
pop
imul
dec
lret
sbb
pop
mov
inc
xchg
imul
cld
mov
out
add
lea
stc
cld
inc
or
test
addr16
mov
out
fisubrl
mov
dec
and
inc
rorb
push
neg
xlat
jno
push
cli
cmp
fisubrs
add
mov
stos
std
icebp
sbb
or
mov
sub
mov
push
mov
mov
cmp
stos
sahf
ss
ss
and
in
andl
rorb
xor
or
xchg
xchg
sub
mov
and
mov
pop
mov
cmpsl
js
sbb
sbb
fwait
divl
outsb
aaa
sti
mov
jl
sbb
cltd
or
mov
daa
cs
push
nop
pop
mov
dec
mov
mov
push
sbb
mov
inc
dec
shlb
mov
cmp
mov
sub
xchg
mov
cltd
int3
adc
ret
in
cltd
fsubrs
or
lds
mov
in
cwtl
das
or
stc
cmp
cltd
or
loope
cld
jnp
push
das
inc
mov
stos
rorl
inc
jecxz
dec
mov
mov
test
push
mov
pop
jmp
mov
lds
xchg
sbb
popa
aam
andl
inc
sarb
add
xchg
and
gs
data16
push
mov
lods
nop
jecxz
insl
inc
push
cmpsl
das
fisubs
ds
jmp
std
mov
sti
xchg
lds
jo
inc
test
imul
jno
add
inc
push
fs
popa
mov
cld
dec
test
xor
xchg
mov
mov
or
bound
sbb
loop
xlat
inc
sbb
jbe
xor
outsb
or
jmp
mov
xchg
sub
icebp
xor
sub
dec
add
add
fistpl
jecxz
add
push
lods
jecxz
mov
sarl
leave
movsb
xor
mov
cmpsb
xor
popf
add
sub
lret
cltd
add
add
xor
or
pop
pop
mov
loopne
inc
jecxz
jp
scas
xlat
arpl
fdivrp
jmp
pop
stos
aam
mov
jnp
popf
xor
lods
mov
loop
mov
int
aam
xor
lea
mov
test
insb
or
out
aas
sub
mov
daa
mov
mov
xor
push
arpl
inc
outsl
xchg
sub
xor
mov
cmp
jp
jmp
test
jns
add
dec
cmp
faddl
and
aas
sbb
mov
add
sub
dec
jb
mov
pop
scas
mov
sarl
push
imul
sbb
mov
inc
pop
jmp
push
push
dec
cmpsl
push
shll
aad
aad
xor
push
sahf
ja
cmp
jo
push
jmp
mov
js
adc
cmpsl
xlat
in
loope
push
aas
mov
dec
pop
and
jns
out
dec
mov
out
lret
mov
es
maskmovq
negl
mov
outsb
ret
lds
fwait
test
jns
cwtl
dec
inc
push
gs
and
pushf
js
sub
and
and
daa
sub
mov
sub
les
xor
pop
or
xchg
jmp
roll
inc
xor
fimuls
inc
push
cs
xor
ja
pop
lea
stc
cld
or
and
fsubr
mov
ret
or
push
rcl
dec
in
mov
xchg
jb
ljmp
inc
mov
mov
scas
popf
insl
pop
add
insb
xor
cmp
or
cmp
lret
imul
and
gs
ficoms
shrb
jecxz
add
jbe
in
lea
cmp
out
cli
jns
popf
xchg
dec
cmp
sbb
sbb
add
mov
sarl
dec
clc
subb
addr16
mov
adc
sub
inc
pop
mov
pop
pop
bound
cmpsl
jnp
fnstenv
je
or
dec
push
repz
adc
insb
mov
dec
cmp
stos
inc
xor
cwtl
pop
dec
pop
mov
inc
fldl
xor
lds
syscall
movsb
andb
movsb
aad
add
cmp
push
sarb
cmpsl
sbb
pop
movsb
dec
or
dec
insl
mov
jns
sbb
vandnps
mov
ss
mov
inc
push
sbb
icebp
ret
jnp
cmpb
mov
mov
push
imul
sub
jp
icebp
lea
movb
lret
mov
gs
add
xor
and
jg
int
hlt
add
mov
clc
jb
sar
addr16
mov
je
lahf
dec
pop
mov
pop
cmp
in
jbe
pop
cmp
test
pop
lea
pushl
adc
sti
loope
aaa
test
sbb
fwait
xchg
cwtl
dec
push
dec
xchg
pop
push
mov
arpl
mov
xchg
or
inc
inc
xor
and
pop
daa
jg
xor
daa
mov
xchg
sub
nop
mov
popf
int3
adc
sbb
fcompl
jno
or
lds
cmp
pop
loop
dec
incb
push
adc
lcall
sub
mov
sbb
or
dec
rorl
mov
fistl
lods
fstp
cmp
pop
pop
int
fldl
cmp
out
inc
lret
mulb
push
int3
jnp
jle
jae
xchg
das
cmpsl
sbb
mov
fwait
mov
cmpsb
sahf
inc
sbb
mov
pop
roll
dec
mov
fwait
and
loopne
ds
jmp
std
mov
sti
mov
add
insb
inc
inc
xchg
dec
dec
addb
dec
or
in
cmp
jle
enter
cmc
add
add
mov
bound
jnp
xchg
mov
fucomp
add
lea
std
cld
or
mov
or
ret
in
cmp
test
mov
aad
std
add
test
dec
inc
pop
sbb
mov
stc
cli
cmp
mov
dec
out
insl
ret
add
jge
test
movsl
adc
pop
mov
mov
lcall
int3
xor
mov
xchg
dec
push
mov
outsb
sbb
jns
rcrb
cli
xlat
in
divl
std
lahf
out
stos
and
in
add
int
inc
adc
push
test
stc
lret
ss
mov
fldt
push
lea
outsw
sbb
cld
aam
aaa
pop
xor
sub
jmp
repz
adc
fadd
flds
or
add
push
inc
cmpb
imul
inc
nop
sbb
jae
mov
jnp
xchg
mov
shr
add
rclb
divb
dec
sub
int
sti
pop
add
adc
inc
fstl
test
jp
movsl
loop
fisubrl
jns
mov
sbb
mov
cmp
xchg
adc
shrb
add
scas
cmp
sti
dec
test
or
push
push
jnp
push
dec
stc
push
dec
push
in
pop
in
sbb
or
mov
jns
rcrb
cli
xlat
in
divl
popf
lahf
out
stos
and
in
add
int
inc
adc
push
test
stc
inc
ss
mov
fldt
xchg
pop
lea
sub
popf
mov
fwait
shrb
xchg
push
jle
cmp
decl
lcall
jb
mov
push
dec
call
loopne
pop
imul
inc
cwtl
sbb
jae
mov
jnp
xchg
mov
shr
add
rclb
cmc
mov
ret
dec
sub
int
sti
pop
add
adc
inc
pop
push
iret
test
jp
movsl
loop
fisubrl
cmc
cmpsb
mov
iret
fisubl
push
dec
mov
jmp
push
dec
lahf
aad
dec
push
pop
pop
stos
in
sbb
test
movsl
shlb
push
push
sti
and
dec
fldt
pop
test
sbb
or
dec
sub
mov
inc
decl
into
mov
xchg
stos
and
hlt
jp
jnp
fwait
xor
sbb
rolb
mov
pop
lcall
mov
inc
dec
into
sbb
inc
jns
push
inc
cmpb
dec
lds
movsb
push
fwait
lret
pop
push
inc
inc
stc
stos
dec
call
loopne
pop
insl
pop
xchg
orb
jne
mov
jnp
stos
mov
dec
sbb
fstpl
mov
sub
roll
dec
inc
fisubrs
cwtl
aas
jb
cmpsb
arpl
sbb
mov
pop
lods
and
mov
mov
cwtl
xlat
mov
push
push
mov
jno
mov
or
push
or
inc
pop
pop
jle
and
cmpsb
xor
adc
jecxz
scas
xchg
sbb
test
fstpt
filds
mov
popa
call
ror
ds
lret
aas
or
push
cs
pop
stos
aam
mov
jnp
fwait
mov
cwtl
inc
mov
subb
dec
fwait
loope
cmp
adc
lahf
test
fsubrs
addb
lds
movsb
push
cmc
dec
inc
mov
push
inc
inc
jp
dec
call
loopne
pop
imul
dec
jp
or
pop
pushf
addl
sbb
in
stos
mov
dec
sbb
test
mov
xchg
sti
sub
mov
sub
jno
mov
pop
lods
and
mov
jge
sub
cmpsb
mov
iret
fisubl
popa
scas
lds
shll
mov
in
outsb
xor
or
dec
roll
jns
sbb
push
mov
mov
xchg
les
shlb
mov
scas
aaa
mov
cli
jnp
and
xor
cmp
sbb
gs
cmp
mov
jle
sub
cmc
mov
fldt
je
lea
mov
jne
mov
inc
mov
cltd
shrb
nop
dec
and
mov
xchg
cmp
xchg
arpl
mov
xchg
or
jae
inc
mov
adc
lahf
insb
pop
pop
mov
sbb
test
lcall
xchg
int3
adc
lods
mov
mov
fisubrl
cld
scas
push
mov
xlat
or
push
cs
mov
sahf
das
xchg
stc
cli
cmp
scas
xchg
adc
shrb
mov
xchg
or
pop
mov
mov
xchg
mov
enter
cmp
stos
xor
in
sbb
or
inc
mov
mov
dec
rcr
in
test
repz
lea
gs
dec
cmp
lahf
inc
sub
cwtl
dec
mov
mov
dec
clc
jae
stos
mov
cmpsb
sbb
fsubs
fildl
int
lcall
sbb
scas
dec
cmp
subl
pop
xor
xchg
cmp
xchg
gs
test
insl
pop
mov
jne
mov
jge
inc
mov
shr
add
mov
cld
or
cmp
cltd
dec
jge
fcompl
std
mov
inc
and
push
dec
mov
test
dec
jae
or
movsb
bound
lret
xchg
xchg
xchg
pop
shrb
lds
sbb
or
dec
aad
test
pop
fstl
test
dec
fcomps
in
lods
xchg
inc
cli
jb
in
sbb
inc
cmp
or
inc
xor
sbb
dec
adc
popf
dec
shl
mov
pop
and
mov
pop
xor
jp
dec
xor
out
lods
out
xor
lcall
mov
sti
mov
dec
sbb
mov
adcl
fmulp
divb
dec
and
push
xchg
arpl
mov
xchg
or
jae
inc
mov
adcb
lahf
insb
pop
pop
mov
sbb
test
lcall
xchg
int3
adc
lods
mov
mov
fisubrl
in
push
mov
xlat
or
fldl2e
je
sahf
das
xchg
stc
cli
cmp
scas
xchg
inc
adc
ret
mov
xchg
or
pop
mov
mov
andb
out
xchg
cli
enter
cmp
stos
xor
in
sbb
or
dec
mov
mov
in
test
repz
lea
mov
int
sub
mov
fwait
mov
cwtl
inc
sti
inc
mov
ffreep
xchg
outsl
daa
xchg
in
aas
sti
sti
mov
shrb
mov
xchg
mov
and
mov
jb
sahf
in
xchg
jns
inc
and
cmp
and
imul
inc
push
adc
shll
mov
mov
mov
xlat
sub
pop
stos
push
lods
xchg
sub
jno
or
lds
cmp
pop
loop
dec
incb
xchg
adc
cld
xlat
pushl
movsl
sbb
test
mov
sbb
or
inc
or
xchg
inc
add
nop
inc
mov
jecxz
nop
lods
sahf
or
mov
mov
xchg
fwait
outsb
pop
fdivr
jl
or
sbb
mov
fwait
lea
jo
dec
adc
lahf
inc
add
cwtl
dec
nop
push
lods
mov
jae
loopne
push
out
cmp
cwtl
and
cmc
sarl
filds
inc
mov
sbb
scas
cmp
imul
xchg
cmp
dec
addb
sub
push
dec
addl
dec
addb
or
pop
test
cmp
dec
push
mov
enter
or
aad
fwait
inc
adc
mov
leave
adcl
cmp
sub
sbb
ja
lret
xchg
repz
dec
cmp
out
bound
negl
cmpsb
outsb
mov
test
mov
cmpsb
xor
adc
sub
sahf
or
mov
mov
mov
mov
clc
jl
or
sbb
mov
fwait
mov
xchg
repz
out
sub
fdivrs
sbb
sbb
mov
pop
mov
leave
sti
data16
mov
ret
shll
cmp
and
je
cltd
cmc
add
jmp
xchg
dec
addl
fnsave
les
mov
cmpsl
xchg
sub
dec
negb
inc
setnp
insb
test
lea
or
lds
xchg
sbb
dec
scas
cwtl
aas
jb
cmpsb
arpl
and
cmpsl
add
xlat
lret
inc
mov
jb
sub
mov
jl
sahf
dec
shlb
retw
adc
push
pushf
cltd
test
jge
stc
mov
loope
test
mov
sahf
pop
inc
es
insl
cmp
jbe
sub
sub
or
iret
insb
ss
mov
xchg
and
andl
sbb
gs
push
pop
stc
cmp
xor
ds
ror
jnp
fmull
outsb
lahf
cmc
jg
cs
jmp
std
mov
sti
xchg
test
jo
inc
test
imul
sub
jmp
sti
jne
cwtl
aad
lahf
push
dec
mov
sarb
sub
xchg
mov
inc
cltd
and
ret
push
ja
and
icebp
jo
fnstenv
mov
inc
cmpsl
jecxz
repz
cmpsl
mov
lods
xchg
sub
mov
sub
dec
add
test
xchg
jb
push
adc
add
mov
mov
sbb
or
push
mov
jge
or
adc
sub
fsub
and
lahf
jp
sub
loopne
repz
lods
enter
decl
add
jmp
out
jp
out
divl
cmpsl
adc
pop
dec
out
mov
jnp
inc
push
mov
inc
inc
push
lods
mov
xchg
jne
mov
inc
pop
lea
jae
sti
and
insb
imul
jno
hlt
add
xchg
sub
jnp
loope
dec
je
cmp
xchg
dec
jno
repz
cltd
mov
add
mov
cmp
jp
add
mov
ret
fwait
xchg
cmc
mov
add
lods
xchg
sub
adc
icebp
out
xchg
xchg
jne
arpl
fldl2e
je
sahf
das
xchg
stc
cli
in
test
les
stos
xchg
idivb
or
xor
mov
cmpsb
xor
jb
mov
dec
push
sub
inc
icebp
xchg
jp
mov
int
or
inc
jno
jnp
inc
mov
in
stos
cmpsl
aad
inc
repnz
fwait
push
dec
mov
int
lods
shrl
jb
mov
cmp
stos
xchg
sbb
mov
lods
out
cmp
jno
cltd
add
push
fneni(8087
mov
test
rcrl
mov
push
int
aas
jae
dec
mov
sbb
stos
cmp
xor
mov
sub
sub
pushl
or
repz
leave
jmp
insl
mov
outsl
adc
lahf
pop
adc
sbb
sbb
addr16
mov
into
testb
in
mov
lret
mov
hlt
test
inc
xchg
pop
mov
pop
frstor
jns
out
mov
push
pushl
pop
in
sub
clc
jb
scas
cmc
or
fcmovnb
inc
inc
add
lret
xchg
pop
dec
dec
push
imul
add
pop
cld
loop
mov
sub
inc
fstpt
lods
adc
and
mov
adc
into
test
cmp
push
fmull
mov
cmc
jb
sbb
push
negb
outsb
bswap
aas
mov
cltd
mov
mov
inc
xchg
jmp
sbb
mov
adc
fldt
loopne
cli
lods
fisubrl
insb
mov
mov
lahf
pop
adc
mov
jns
rorl
iret
imul
pop
pop
xor
pushf
insb
cmp
jg
mov
pop
mov
mov
mov
mov
lret
xchg
mov
mov
andl
cwtl
loopne
ret
pop
dec
push
inc
jae
cs
movsl
test
xchg
stos
jbe
sti
push
sbb
rcll
inc
inc
sbb
sbb
lahf
leave
xchg
pop
or
jg
mov
shlb
jo
loop
orl
fstpt
push
adc
dec
add
jge
and
movsl
stos
push
pop
mov
cmp
movsb
jmp
push
lret
mov
adc
lds
or
mov
ret
xchg
sti
popa
test
cwtl
push
mov
sbb
das
fdivs
test
mov
std
aaa
or
movsl
repz
pop
xchg
out
iret
inc
mov
fcomps
fsubrl
jns
add
test
cwtl
push
jo
jnp
fwait
repz
imul
pop
pop
xor
test
enter
addr16
sahf
lahf
push
fwait
push
mov
sahf
sbb
cmp
pusha
pop
sub
mov
test
add
push
jge
sbb
xorb
movsb
adc
movsl
mov
jg
or
push
imul
or
lret
jae
xor
push
shl
ret
inc
add
xchg
pop
leave
mov
inc
les
add
push
mov
push
mov
or
and
xchg
push
outsl
xchg
inc
add
adc
lods
test
fxch
push
call
jle
xor
frstor
pop
dec
xchg
enter
mov
mov
imul
hlt
sbb
dec
call
pop
inc
flds
mov
pop
adcl
jle
lock
cltd
orb
lods
fsubrl
je
jp
fcmovnbe
fst
addr16
or
dec
dec
out
arpl
lea
fbstp
pop
test
dec
verw
dec
cmp
and
jo
in
std
mov
lds
xchg
mov
arpl
gs
sbb
pop
pusha
arpl
call
je
jnp
cmp
lret
mov
cld
push
js
xchg
nop
pop
mov
fs
icebp
jno
mov
or
mov
outsb
ret
adc
adc
inc
pop
add
popa
popf
mov
pop
or
mov
shlb
dec
mov
aad
mov
adc
pop
mov
adc
mov
pop
inc
leave
add
mov
clc
daa
movsl
outsb
cmp
lock
xor
jecxz
ret
ret
adc
iret
cmp
inc
jecxz,pt
insl
movsl
aam
ljmp
mov
das
stos
and
xor
arpl
or
leave
cmp
push
lret
daa
mull
sbb
jnp
lea
push
fsubs
cmpsl
ret
les
test
pop
std
mov
xchg
cltd
mov
push
cmp
and
scas
jge
cmpb
fwait
insb
mov
in
pusha
mov
stc
repnz
in
orb
mov
add
push
pop
dec
enter
mov
lock
cmpsl
lock
dec
xorb
push
or
bound
xchg
sub
jecxz
sbb
fnstsw
xor
xchg
mov
fimuls
cwtl
ret
out
mov
dec
xor
cmpsl
adc
mov
mov
repz
jns
mov
lahf
pop
jmp
repnz
arpl
cmp
sbb
repz
mov
mov
ret
aad
adc
xchg
sbb
lret
adc
test
fldenv
scas
ljmp
mov
xchg
std
cmpsl
pop
or
mov
adc
scas
pop
or
pop
mov
sub
outsl
mov
insl
pop
test
fsubl
jne
addl
sub
loop
add
in
mov
sbb
add
movsl
fsubs
jb
cli
rcrb
jmp
push
xchg
jecxz
insb
inc
sbb
pop
cmp
call
data16
adc
jbe
arpl
fnstsw
andl
jb
adc
lahf
jmp
sbb
pop
jle
jecxz
xchg
mov
pop
leave
cwtl
fisubrl
mov
loopne
cli
mov
mov
xchg
in
movsl
mov
or
push
aaa
adc
sbb
or
repz
mov
pop
and
cmp
jmp
mov
xor
lret
adc
sbb
jg
inc
mov
rcrb
fisubrs
stc
mov
mov
mov
xor
or
sbb
jmp
dec
adc
mov
or
cwtl
pushf
rcrb
test
call
pop
ret
jl
and
and
icebp
leave
test
popf
or
adc
or
xorl
adc
mov
mov
adc
ljmp
fisubl
lahf
in
push
mov
jb
sti
xchg
dec
inc
add
popf
pop
lret
daa
hlt
stos
imul
neg
inc
xchg
jmp
sbb
mov
test
scas
repz
mov
mov
mov
jmp
in
pop
insl
lock
out
dec
sub
test
dec
shr
cmpsl
movsb
movl
mov
sub
jmp
mov
sbb
iret
test
lods
pop
ds
cld
mov
mov
xor
iret
pop
orl
mov
ret
jge
xor
call
mov
or
inc
stos
jbe
clc
push
sbb
cwtl
pushf
ror
jmp
mov
mov
fdiv
dec
cmp
out
clc
enter
imul
or
les
adc
xchg
cmp
dec
lods
test
and
fs
subb
fisubs
inc
fwait
inc
mov
and
push
cmpsl
fisubs
jge
rcrl
or
xchg
jb
pop
jo
xchg
mov
pop
mov
fsubrs
lock
mov
ja
and
fdivrl
jbe
adc
mov
mov
ret
inc
lea
pop
ljmp
adcb
dec
mov
push
lea
push
mov
lock
mov
fwait
push
mov
sahf
sbb
cld
mov
sbb
popf
aas
popf
push
jns
fwait
shrb
mov
xor
lds
push
and
test
push
jae
mov
sub
lods
jne
dec
xor
sbb
repnz
or
push
dec
or
xchg
fwait
sbb
scas
xchg
sbb
sbb
cmpsb
adc
push
pushf
mov
repnz
inc
add
adc
mov
adc
and
inc
cmpsl
fisubs
xor
popa
test
out
mov
jbe
jae
out
aad
orb
fwait
mov
pop
pop
inc
test
mov
dec
call
insl
mov
cld
imull
add
pop
jecxz
mov
call
adc
aas
add
fmull
bound
mov
pushf
stos
lods
nop
dec
out
mov
mov
push
fimuls
clc
scas
mov
mov
mov
and
fs
dec
jg
mov
sbb
cwtl
xor
cmp
stos
testl
ljmp
xor
adc
push
lods
repnz
or
je
or
cmp
fwait
sbb
imul
dec
add
sbb
sub
outsb
cmp
sbb
sub
int3
stos
lds
and
int
push
ret
xchg
mov
mov
sbb
bound
gs
mov
pop
out
pusha
mov
shlb
xor
test
out
jle
stc
push
popf
neg
sbb
lds
push
dec
xchg
and
pop
or
aas
clc
mov
nop
shlb
sti
je
jecxz
ret
insl
adc
fistpll
add
fnstenv
leave
adc
fmulp
imul
mov
pop
mov
jp
mov
sbb
ljmp
test
or
adcb
jnp
mov
and
and
pop
ja
and
enter
cmp
and
xorl
sbb
sbb
sub
inc
test
cwtl
imul
repnz
dec
add
sbb
mov
push
mov
test
xchg
stos
xchg
sbb
cmpsl
push
add
sub
repz
lods
adc
adc
fwait
les
xor
stos
mov
fisubs
mov
shrb
mov
mov
iret
ljmp
fstpl
mov
repz
fwait
jne
dec
push
lahf
or
pop
lret
mov
outsb
or
mov
mov
adc
pop
jg
xor
jg
lret
mov
or
pop
lea
fdivs
mov
sbb
in
mov
daa
inc
xor
hlt
pop
in
add
dec
adc
je
imul
movsl
xchg
lcall
cld
sbb
dec
push
sbb
adc
int3
scas
hlt
mov
add
add
loop
incl
rol
cli
jo
add
add
lods
hlt
stos
push
mov
pop
xchg
inc
add
mov
dec
data16
inc
push
test
fnsave
sbb
out
js
dec
and
enter
lret
je
in
mov
aas
dec
mov
mov
inc
int3
push
mov
sbb
flds
ljmp
and
jmp
jl
jns
mov
adc
xor
addr16
dec
test
clc
imul
mov
lock
in
gs
fidivrs
jle
adc
pop
or
jmp
and
mov
or
test
lcall
inc
mov
aam
cmc
mov
inc
sbb
mov
pop
xor
enter
scas
std
pop
movsb
outsb
js
andl
or
mov
add
iret
pop
dec
roll
pusha
sub
test
mov
sub
movsb
jno
imul
fwait
leave
pop
outsl
inc
push
lret
out
sbb
push
xchg
sti
lods
mov
push
sub
mov
fdivs
mov
hlt
dec
movsl
adc
adc
mov
scas
xchg
ret
sarl
mov
fbld
stc
test
out
mov
lock
or
push
mov
je
repz
lds
addb
and
push
shr
jno
rcrl
pop
in
mov
xor
or
add
arpl
stc
inc
pusha
les
pop
or
fnstcw
jae
mov
adc
dec
test
add
stos
out
sbb
sub
fisubs
jge
xchg
xor
hlt
repnz
cmp
call
cli
push
mov
pop
lods
test
les
js
aam
repnz
ret
out
lea
jno
stos
lahf
jo
ret
mov
adc
imul
imulb
sbb
jo
sub
add
mov
dec
rorl
lea
sbb
popf
mov
sahf
insl
mov
fiadds
call
jne
movsl
cmc
lods
mov
dec
stos
fdivrl
jecxz
inc
mov
sbb
push
mov
sbb
adcb
mov
div
mov
hlt
clc
rcr
xlat
leave
adc
xchg
push
adc
fidivs
lcall
stos
jle
lret
test
divl
bound
fnstcw
jecxz
inc
lds
sub
stos
pop
or
pop
jl
arpl
mov
adc
enter
lods
in
sbb
inc
mov
xchg
insl
in
pop
inc
xlat
popf
or
mov
xor
scas
xchg
sbb
or
aam
sti
pop
and
mov
insb
stos
fsubs
gs
jmp
lea
mov
inc
mov
rclb
sub
xor
idivb
js
pusha
mov
out
jnp
or
mov
fcoml
pushf
sahf
rcr
jne
mov
pop
lods
fld1
aad
mov
clc
clc
xor
cmc
lret
test
std
mov
or
in
cmpsl
inc
dec
adc
mov
mov
cmp
div
mov
sbb
mov
mov
out
cli
mov
jne
mov
push
mov
jae
mov
pop
dec
add
fwait
enter
xchg
pop
enter
aam
add
repz
inc
adc
pop
jl
repz
jmp
das
mov
or
push
cmp
call
in
sbb
cs
xor
je
lds
dec
push
test
mov
mov
lcall
stos
fsubs
sub
push
sbb
mov
mov
pop
cmpl
lea
jg
mov
mov
sbb
sub
mov
mov
mov
push
popf
divl
pop
pushf
sahf
rorl
lods
jne
rorb
cmpsl
pushl
or
repz
jge
mov
lahf
in
stc
enter
arpl
mov
aas
iret
jbe
gs
popf
mov
dec
int3
in
movsl
movsl
dec
pop
push
and
pop
pop
add
cli
mov
pop
fcmovnu
mov
frstor
imul
cmc
js
std
cmpsl
icebp
or
rcrl
inc
sbbl
or
sub
shlb
sbb
lods
cmc
jae
and
fdivrs
push
sub
ds
cld
loop
add
or
adc
add
ret
mov
push
or
aam
mov
mov
jae
push
sbb
test
dec
inc
mov
mov
shlb
add
mov
loopne
pushl
mov
sbb
out
mov
mov
dec
mov
sbb
stos
cmp
xor
mov
sub
push
xor
sbb
repz
leave
test
dec
push
mov
rcrb
mov
call
pop
cltd
mov
into
testb
in
mov
lret
mov
hlt
test
inc
xchg
pop
mov
shl
mov
push
fwait
pushl
pop
in
enter
ja
clc
jb
scas
cmc
or
adc
inc
add
lret
xchg
jg
dec
push
imul
add
pop
cld
loop
mov
test
dec
orl
fstpt
lods
adc
mov
pop
scas
adc
into
mov
xor
or
je
mov
jbe
jb
sbb
push
negb
jp
enter
cmp
cltd
inc
shl
mov
xchg
jmp
sbb
test
rclb
fldt
loopne
cli
lods
mov
insb
mov
mov
lahf
pop
adc
mov
iret
imul
pop
pop
xor
pushf
insb
cmp
std
cmp
test
in
movsb
int
mov
lret
xchg
mov
mov
andl
cwtl
loopne
ret
pop
pop
push
inc
jae
loope
fisubl
stos
jbe
sti
push
sbb
stc
nop
rcl
mov
fs
sbb
sbb
lahf
leave
xchg
pop
or
jg
mov
adc
push
mov
inc
orl
fstpt
push
adc
dec
add
jge
and
movsl
stos
push
pop
mov
mov
je
and
lret
mov
adc
lds
or
scas
leave
mov
xchg
sti
popa
nop
mov
push
mov
sbb
das
fdivs
xchg
sub
sahf
xchg
std
aaa
cmp
movsl
repz
pop
mov
push
iret
inc
mov
fcomps
fsubrl
jns
add
test
mov
xor
repz
imul
pop
pop
xor
test
dec
mov
xlat
addr16
sahf
lahf
push
fwait
push
mov
sahf
sbb
cmp
pusha
pop
ja
mov
test
add
push
jge
sbb
xchg
mov
jae
mov
adc
movsl
mov
jg
sbb
push
imul
in
jae
xor
jns
bnd
inc
add
xchg
pop
leave
mov
inc
les
mov
lock
push
mov
leave
pop
jge
mov
sahf
insb
ret
push
outsl
xchg
inc
add
adc
lods
test
fxch
push
call
jle
sub
sub
frstor
pop
dec
xchg
enter
test
jmp
xchg
mov
sahf
xchg
hlt
sbb
dec
call
pop
inc
fldenv
mov
mov
fistps
cmpl
jle
lock
cltd
orb
lods
mov
xor
jp
pop
rcr
xlat
addr16
or
or
out
arpl
sbbl
jae
pop
test
dec
lea
test
dec
cmp
cmp
jo
in
std
mov
lds
xchg
mov
arpl
gs
sbb
pop
pusha
arpl
call
je
jnp
cmp
repnz
mov
icebp
push
js
xchg
nop
pop
mov
adc
dec
push
add
mov
or
mov
outsb
ret
adc
in
jle
inc
pop
or
bound
popa
popf
mov
pop
or
mov
shlb
dec
mov
aad
mov
adc
pop
mov
out
mov
mov
pop
inc
leave
add
mov
clc
daa
mov
stc
js
lock
xor
jecxz
ret
ret
adc
out
pop
jnp
inc
ds
insl
movsl
aam
fildll
mov
das
stos
and
repz
jns
test
in
fbld
or
leave
clc
jg
push
dec
fincstp
cmpsl
pop
or
xchg
jnp
lea
push
fcomps
pop
xor
mov
inc
lea
mov
pop
xchg
ret
mov
clc
add
pushf
jle
pop
mov
or
jo
repnz
in
xorb
mov
add
push
pop
dec
enter
mov
lock
lock
lret
fwait
inc
push
or
bound
xchg
call
sbb
fnstsw
xor
xchg
mov
fimuls
cwtl
inc
es
shrb
lods
dec
xor
cmpsl
adc
mov
mov
push
popf
mov
cmp
jp
add
in
sub
hlt
jns
testb
dec
mov
lock
jbe
mov
inc
add
or
cld
jge
testl
mov
icebp
clc
jg
ja
cli
in
test
ret
xchg
mov
lock
sbb
xchg
arpl
inc
cmp
push
push
sub
inc
icebp
xchg
jp
mov
xchg
or
inc
jno
jnp
inc
mov
in
stos
aad
imul
mov
sbb
inc
jno
clc
and
cmp
xchg
mov
sti
out
ja
in
insl
sbb
fucomi
hlt
std
mov
sti
and
insb
imul
jno
hlt
add
xchg
sub
jnp
bound
je
cmp
add
jecxz
jne
cmc
test
cmp
pop
jmp
les
add
in
sub
jbe
dec
testb
dec
adcl
mov
inc
or
or
jle
dec
testl
mov
cmc
jp
dec
ja
cli
in
test
inc
insl
jmp
inc
popa
inc
lock
sbb
xchg
dec
sti
jmp
arpl
inc
cmp
push
push
sub
inc
icebp
xchg
jp
mov
mov
or
inc
jno
jnp
inc
mov
mov
addl
push
dec
mov
int
aad
imul
mov
inc
or
lods
mov
pop
insl
inc
repz
jne
mov
inc
mov
lea
jae
sti
and
insb
imul
sbb
xchg
xchg
dec
jnp
sub
cmp
or
jmp
test
cmp
pop
out
and
jp
add
in
sub
cmp
testb
add
pop
xor
pop
stos
lods
pushf
jmp
push
idivb
cltd
lret
lcall
sbb
sbb
jne
dec
ja
cli
in
test
dec
pop
insl
jmp
dec
popa
inc
lock
sbb
xchg
xchg
dec
sti
rorl
add
push
push
sub
inc
icebp
xchg
jp
loop
push
mov
ss
ss
xor
mov
testl
fwait
push
dec
mov
jae
sub
jno
clc
and
cmp
xchg
mov
fucomi
ja
in
insl
sbb
fucomi
hlt
std
mov
sti
and
repnz
inc
mov
lret
or
popa
and
popf
push
and
adc
pop
add
inc
cwtl
dec
and
mov
mov
test
add
mov
jecxz
inc
jne
aaa
pop
test
sub
jmp
add
int
nop
pop
stos
push
lods
xchg
sub
adc
fucom
shll
inc
lock
pop
frstor
clc
call
or
mov
bound
or
xchg
dec
inc
shlb
inc
scas
xchg
push
xchg
clc
in
pop
stos
xchg
stos
inc
movsb
pop
pop
scas
dec
fs
inc
pop
or
mov
dec
fs
xor
mov
mov
mov
jecxz
adc
dec
rcr
or
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
sub
fdivrp
call
fwait
mov
stos
xchg
out
mov
test
rclb
rcrl
cmp
inc
adc
fisubrs
fcomp
cmc
mov
lea
pop
push
lea
pop
xor
pop
loopne
out
and
and
xchg
sti
daa
sahf
xchg
cmc
test
cmp
pushf
dec
jo
stc
fildl
inc
mov
adc
popa
push
sub
lods
xchg
sub
adc
lods
or
lock
testl
mov
jecxz
jg
ja
cli
in
test
dec
addr16
insl
jmp
enter
push
sbb
out
dec
sti
lahf
int3
arpl
inc
cmp
push
sub
inc
icebp
xchg
jp
mov
out
or
inc
jno
jnp
inc
mov
in
stos
mov
pop
fwait
push
dec
mov
int
mov
imul
repnz
mov
imulb
inc
sub
js
lcall
cmp
shl
cmp
pop
stos
pushf
dec
mov
pop
cmp
xor
arpl
dec
adc
pop
dec
and
cmp
and
or
push
inc
xor
or
mov
dec
daa
cmp
jp
dec
dec
dec
aaa
inc
fdiv
mov
sub
dec
dec
ss
lret
push
sub
adc
dec
xor
rcrl
xchg
fcmove
mov
lret
lcall
xchg
stc
cli
fcom
mov
les
rorb
add
push
cmp
mov
stos
xor
push
push
cmp
ss
xor
mov
push
cmp
sub
ss
cli
jnp
adc
pop
aas
inc
sti
testb
cmp
mov
xor
jmp
hlt
ljmp
jp
fst
in
mov
mov
shlb
jb
and
cmp
mov
add
movsl
dec
push
clc
jl
sbb
pop
sub
js
test
or
incl
roll
insl
mov
cmp
addb
sahf
je
popf
mov
cmp
jp
add
adc
inc
iret
mov
cmp
cwtl
dec
jno
pop
mov
lods
xchg
sub
adc
push
ret
cmpsl
insb
outsl
mov
jae
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
cmp
inc
add
mov
pop
pushl
popf
xor
or
fwait
push
xchg
mov
push
mov
cmp
pusha
jl
sahf
xchg
pop
out
mov
or
or
aaa
cwtl
hlt
jl
pop
mov
dec
les
xchg
jns
fcmovu
mov
or
jb
mov
cltd
mov
iret
push
outsb
ret
xchg
js
fs
and
rorl
mov
leave
pop
xchg
xchg
push
in
repnz
enter
pop
nop
dec
adc
xchg
cmp
imulb
push
leave
jae
sub
test
xchg
je
in
ds
inc
jge
mov
or
lock
mov
ss
adc
cli
jns
adc
mov
pop
jmp
test
pop
cmpsl
insb
dec
jbe
fs
push
cmp
ret
xchg
fldcw
ljmp
sub
and
and
cmp
adc
mov
jp
xchg
xor
imul
mov
pop
cmpsl
cmp
sub
ss
cli
jnp
sbb
testb
mov
movsb
sbb
ja
cmp
js
fsubrs
mov
adc
xchg
push
mov
adc
inc
and
call
cmpsb
inc
cltd
enter
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
sar
mov
fisubl
cmc
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
inc
movsb
pop
jl
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
