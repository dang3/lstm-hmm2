mov
xchg
shrl
sub
fldl2t
pop
mov
sbb
dec
aam
ret
jmp
out
mov
cwtl
int3
jle
mov
gs
stc
xor
lock
pop
mov
xchg
lds
lret
push
pusha
and
dec
pop
shlb
adc
lret
jecxz
pop
pop
arpl
daa
hlt
int
roll
push
stos
push
dec
test
jmp
sahf
mov
test
imul
pop
mov
or
push
xor
cs
int3
dec
jp
push
sbb
lret
sub
inc
lcall
push
fstps
ss
iret
inc
shlb
jbe
fstps
or
imul
je
sti
into
fs
repz
inc
ret
loopne
push
push
cmp
cs
jae
outsl
push
cmp
fldenv
pop
pop
xor
rcll
push
les
scas
mov
jb
addr16
es
jnp
pop
nop
and
scas
cmp
sub
or
push
add
mov
cli
stos
cmp
xor
pop
movsl
jmp
in
bound
outsl
add
testb
enter
mov
sti
pusha
lahf
mov
xor
movsb
jmp
jbe
xor
cmc
out
mov
ret
imul
pop
andl
cmp
daa
push
adc
std
inc
add
orl
in
subl
sub
mov
insb
cwtl
dec
stc
int3
push
push
mov
cmp
mov
addr16
xor
or
xor
out
cmp
in
rol
jbe
in
faddl
cmpsb
or
xchg
cmp
or
popf
in
sahf
and
push
jno
push
add
pop
pop
inc
push
mov
out
sbb
lcall
stc
and
sbb
sub
rorl
mov
pop
inc
shl
push
rorb
test
int
out
shl
and
mov
and
cmp
fmull
fistps
loop
daa
call
cmc
sub
cmc
dec
lea
gs
mov
pop
push
inc
clc
into
enter
add
imulb
jge
cmpsl
cmc
and
aam
neg
pop
cmp
scas
ret
mov
pusha
aad
out
cltd
jmp
sarb
adc
pushf
push
xchg
daa
adc
cltd
divb
add
repz
pusha
and
jge
jecxz
pop
mov
jne
cli
add
push
and
ret
data16
adc
inc
testb
sbb
scas
mov
mull
sbb
test
nop
adc
es
add
jmp
lahf
imulb
scas
add
dec
xor
loope
int
cmp
pop
xchg
gs
mov
pop
sub
orb
movsl
loop
pop
pushf
lock
aad
inc
jg
fmulp
mov
fs
test
cmp
xchg
cmp
das
lock
hlt
testb
cmpsl
movsb
mov
fnsave
adc
bound
scas
nop
xor
ret
jmp
cli
xlat
push
adcb
stos
adc
adc
xchg
icebp
mov
add
pop
mov
aas
pshufw
xchg
es
aas
xor
sub
popa
and
mov
inc
jl
cmp
call
daa
roll
jb
ret
mov
out
cwtl
setns
cld
sbb
stos
pop
test
iret
cmp
mov
pop
ljmp
sub
test
fcoms
jmp
ret
jle
lock
outsl
adc
sub
sbb
and
xor
mov
outsl
loop
dec
in
loope
pop
insl
push
sub
das
scas
dec
jnp
add
inc
mov
xor
xor
clc
lock
imul
mov
sub
jns
sbbb
xor
inc
ror
repnz
and
out
sbb
out
xchg
dec
add
xor
outsb
call
popa
mov
mov
icebp
fld
cmp
das
jle
ds
and
mov
roll
mov
push
les
idivl
or
and
lahf
cmp
incl
out
jns
or
xchg
out
push
bound
or
fs
sbb
xor
cmc
repz
lods
jmp
xor
imul
in
iret
iret
in
outsb
adc
xchg
push
ss
fnstenv
sbb
iret
dec
popf
pop
cli
push
jae
das
movsb
fmull
inc
xchg
inc
mov
test
repz
insb
add
add
push
ljmp
dec
roll
lds
jle
nop
es
sbb
mov
mov
mov
ljmp
and
scas
insb
int
adc
pop
fimuls
data16
les
mov
outsb
xor
das
dec
call
cwtl
and
dec
pop
push
mov
clc
sub
jb
arpl
repz
idivb
push
outsb
mov
inc
clc
sub
jp
mov
inc
int
xor
push
or
pop
js
stc
stc
jmp
jo
lods
xchg
cmp
adc
notl
hlt
dec
scas
negb
adc
div
jecxz
inc
cmp
fistpl
cmp
bswap
pop
cwtl
lret
data16
and
out
dec
adc
push
aaa
add
and
sub
shlb
jo
das
inc
cmc
test
push
fldt
xor
sarb
add
sbb
ret
sti
and
cmp
sbb
pop
pop
sub
cld
popa
repnz
fcomps
jo
stos
cmp
inc
fs
cmp
mov
xchg
stos
cmp
adc
jg
repnz
mov
sahf
xchg
idivb
add
repz
nop
test
out
or
xor
ud2
add
sbb
jecxz
or
cmpsl
shlb
xchg
cli
sbb
adc
inc
arpl
addr16
and
add
inc
mov
imul
enter
mov
out
outsl
stos
or
lods
or
cld
xchg
and
fcoml
lcall
jecxz
push
xlat
test
fldcw
xor
pop
stos
pop
push
addr16
and
sbb
cld
popf
cs
and
inc
movsb
es
lock
test
sub
sub
addl
dec
repnz
sbb
mov
mov
aas
adc
mov
ds
fnsave
inc
cmpsb
loope
xlat
inc
pusha
push
jae
dec
jno
aaa
clc
loop
jae
add
pushf
and
jl
gs
push
jae
sbb
add
leave
cmp
stc
jg
inc
cld
out
sti
push
testl
add
xlat
es
or
mov
out
xchg
add
push
jns
arpl
shll
xlat
sbb
jecxz
xor
sub
pushf
outsl
mov
xor
pop
mov
cmp
pop
xlat
push
xchg
cwtl
and
adc
adc
pushf
add
xchg
ret
insb
stos
popf
mov
je
ret
iret
pushf
pop
aad
xor
adc
sbb
fnclex
div
jno
enter
adc
imulb
sbb
xor
mov
sbb
and
repz
pop
jp
mov
pusha
push
jb
icebp
pop
sub
sbb
dec
mov
imul
inc
je
call
or
pop
sub
push
or
jmp
cld
or
shll
xor
test
add
push
sub
test
notl
jmp
popa
and
ret
push
insb
icebp
sbb
inc
xchg
jno
ljmp
jmp
adc
add
addr16
hlt
neg
or
ret
lcall
jo
andb
mov
and
xchg
and
jmp
xchg
enter
nop
pop
inc
daa
xchg
mov
xchg
push
sbb
movsb
push
cmp
pop
jmp
ffree
in
xchg
dec
in
int3
in
out
xor
mov
adc
inc
jg
jmp
pushf
xchg
loop
pop
stos
rcll
stc
scas
imul
xorl
lods
inc
mov
orb
mov
pop
cmp
xchg
pop
js
out
data16
inc
pop
ret
inc
pop
arpl
rorl
add
mov
xor
mov
add
xor
xchg
push
sub
mov
std
mov
push
jg
jo
in
cld
loope
repnz
xchg
mov
mov
mov
in
int
adc
sbb
sbb
outsb
lock
jg
mov
xchg
loope
cld
pop
add
pop
dec
popa
jmp
sub
push
lods
ss
lahf
sarb
ja
adc
sti
jae
clc
lock
cmp
in
sbb
sbbl
jb
or
stc
cwtl
mov
jge
xchg
negb
fistps
mov
sahf
andl
les
imul
out
dec
add
lods
adcl
adc
push
mov
aam
lods
push
sahf
sbb
out
sub
lret
sub
adc
mov
jp
or
cltd
adc
jmp
pop
std
mul
in
rclb
fisttpl
xor
icebp
adc
cmp
out
xorl
push
pop
dec
es
push
repnz
sbb
jae
mov
in
mov
ret
jbe
cwtl
mov
xchg
push
div
push
es
addl
leave
cs
outsb
mov
pop
jns
or
and
fsubr
ret
sub
add
cltd
jp
lret
les
imul
je
and
sub
decb
lods
sbb
xchg
jg
xor
or
or
std
add
adcb
and
xchg
insb
xlat
xlat
jmp
fildl
subl
inc
xor
pop
sub
mov
fs
xor
repnz
fistpll
sbbb
aam
leave
jne
or
push
in
push
add
lret
lcall
testl
ret
test
mov
in
fistl
call
repnz
lret
dec
mov
mov
push
fisubs
arpl
sub
dec
push
pop
stc
rcr
xchg
stos
stos
sub
ret
cmp
cmp
hlt
out
outsb
outsb
fcomp
outsb
leave
es
enter
pop
jno
mov
test
lcall
aad
ja
lods
pushf
pop
xor
xchg
inc
cmp
xor
add
movsb
xor
sti
addl
mov
lret
shll
notb
sbbb
xchg
sarb
xchg
repnz
mov
inc
dec
out
and
mov
shlb
sub
xchg
addr16
std
lcall
dec
in
jge
ljmp
call
jle
mov
test
loop
repz
roll
cmp
negl
call
cmp
pusha
iret
popa
push
popf
or
enter
or
xchg
fstpt
out
in
ljmp
js
filds
xor
mov
lds
dec
push
mov
mov
mov
cmpsl
repnz
adc
stos
pcmpeqd
pop
loopne
inc
add
jge
aad
push
lret
xor
pop
cmpb
dec
jno
out
dec
cmp
jae
mov
cli
out
pop
pop
xor
dec
add
sbb
dec
pop
cmpsl
out
in
ljmp
pop
notb
outsb
les
sbb
ss
pop
test
push
add
pop
adc
sar
scas
push
xor
adc
out
xchg
sti
es
lcall
hlt
fwait
aaa
fidivl
lret
jle
pushf
inc
lret
cs
or
push
push
xchg
bnd
hlt
fisttpll
sti
cld
or
push
out
test
inc
mov
jns
cs
out
test
mov
aad
in
pop
or
repnz
sbb
out
xlat
add
mov
ret
mov
push
mov
dec
gs
xchg
and
mov
mov
faddl
cmp
lock
scas
xchg
mov
es
shr
int3
jg
pop
push
mov
add
and
push
out
mov
xchg
test
pusha
int3
cmpsl
dec
cld
mov
cli
jnp
jmp
or
add
imul
dec
mov
loop
std
push
xlat
jae
call
aad
ret
repz
dec
dec
push
xchg
test
in
cmp
cmpl
jle
pop
in
adc
sub
add
jmp
jmp
xchg
insb
ret
pop
push
push
adc
push
jecxz
jbe
pop
and
call
sub
xor
leave
pop
lea
pop
push
insl
ss
in
es
inc
adc
add
push
inc
inc
out
dec
repz
pop
pusha
arpl
or
mov
push
shl
xchg
divl
mov
arpl
push
dec
push
jecxz
sub
dec
adc
scas
add
adc
call
and
inc
pop
orl
cmp
mov
xchg
mov
sub
cmpsl
outsl
mov
lock
inc
scas
js
pop
pop
xchg
notl
mov
bound
mov
jmp
in
mov
shll
stos
popa
repnz
call
es
jg
shl
push
int
scas
in
incl
mov
stc
fists
cmp
mov
jmp
aad
xchg
imul
lahf
and
shrb
cmp
aas
and
in
mov
jle
fbld
imul
loopne
test
ret
imul
mov
push
cmc
add
or
negb
imul
push
or
cmp
ljmp
fcoml
xchg
popf
arpl
out
fildll
das
fsub
insl
sbb
or
dec
int
xor
loop
adc
or
push
imul
mov
sbb
pop
mov
pop
sbb
xlat
jb
negb
inc
loop
out
xchg
out
adc
test
mov
mov
decb
or
popf
nop
jnp
dec
int3
jge
cmpsb
loop
outsl
mov
cwtl
pop
ficompl
dec
mov
das
adc
divl
hlt
push
jg
decl
inc
aam
push
ret
imul
cmp
xor
sti
adc
in
and
ds
inc
repnz
sahf
sbb
outsb
add
repnz
test
cmp
cld
les
outsl
lcall
sub
mov
outsb
insb
jbe
adc
push
push
imul
adc
sub
stc
out
pop
lods
sti
push
arpl
or
jmp
xor
out
test
pop
jmp
xor
lock
pop
push
std
movsb
cmp
pop
sub
mov
sbbb
in
rorb
sbb
sarb
ljmp
lcall
sub
ret
xor
or
pop
daa
stc
movsl
add
mov
shrb
ds
loope
sbb
adc
mov
dec
fiadds
pushf
out
lret
add
sbb
adc
xor
scas
mulb
pop
stc
cmp
gs
add
and
dec
cld
subps
inc
pop
jecxz
lds
add
xchg
push
repnz
mov
pop
mov
in
lcall
jno
test
mov
jns
fists
inc
sub
and
cmp
into
in
arpl
or
adc
jl
stc
movsb
clc
sbb
faddl
pop
mov
mov
sbb
andl
xor
jmp
sbb
inc
push
xor
out
ds
loop
cmp
clc
mov
aaa
jecxz
enter
sahf
adc
out
pop
loop
leave
cmp
fwait
decb
mov
sub
or
into
repz
or
in
pop
arpl
sub
clc
loope
lods
out
dec
mov
cltd
ret
or
sbb
adc
data16
mov
cmpsl
cmpsb
loop
mov
fmull
cld
push
aaa
adc
jecxz
lret
mov
ficomps
adc
add
jmp
jae
testb
in
loope
sbb
int3
outsb
pop
arpl
sarb
mov
xor
inc
cmp
sub
test
rorb
rorb
inc
lahf
xor
arpl
in
jg
icebp
out
cld
ja
cwtl
lea
out
test
fmull
out
mov
add
sub
push
mov
hlt
shll
pushf
sbb
jge
or
inc
lahf
outsl
aam
ret
out
sub
push
pop
mov
loopne
xor
jmp
jae
ljmp
cwtl
mov
out
cld
sbb
rorl
stos
cwtl
lods
out
lock
add
ficomps
lea
fidivrs
movsb
mov
cld
dec
das
adc
jecxz
lret
ret
popf
es
out
aaa
mov
inc
jbe
in
pop
ret
push
cmp
lcall
rolb
sahf
arpl
add
sti
pop
daa
mov
adcl
dec
ljmp
mov
enter
loope
push
jge
jne
lods
test
dec
in
pop
or
and
lcall
adc
cmp
pop
loop
mov
xor
push
sti
xor
insl
xchg
cmp
mov
cmp
mov
cmpsb
push
fs
scas
or
or
gs
clc
dec
sub
pop
les
inc
sub
cmp
out
jle
mov
in
mov
add
xchg
in
add
leave
cmp
dec
repnz
dec
xor
mov
sub
push
sahf
imul
push
xchg
push
pop
inc
clc
nop
sbb
addr16
negb
add
jmp
cwtl
je
and
imul
sbb
outsl
or
clc
and
pop
mov
stos
cmp
push
cmp
mov
and
es
lock
dec
imul
add
push
pop
ja
sub
jp
cmpsl
enter
lahf
pop
add
mov
arpl
pop
fwait
dec
mov
jge
cmp
sub
loop
or
xchg
pop
repnz
sub
xchg
outsl
add
fwait
fwait
outsl
out
pop
stos
jg
push
movsl
test
jp
mov
sbb
cmp
mov
mov
jle
xchg
sbb
pop
frstor
fildl
jl
movsl
decl
jns
test
in
or
mov
inc
mov
xor
or
mov
icebp
pop
out
addr16
add
sti
inc
jle
movsb
pop
out
push
das
jmp
or
mov
add
push
aam
cmpsl
mov
sub
sub
sti
movl
popa
adc
shll
cltd
or
ds
or
mov
mov
adc
add
push
jae
addr16
mov
xchg
and
push
loop
jmp
mov
lods
stc
outsl
rcrl
sub
andl
ljmp
fbld
dec
xor
cmc
mov
dec
sbb
xor
out
scas
push
add
push
cmp
scas
cvtpi2ps
xchg
bound
mov
inc
sbb
cmp
or
sub
clc
cs
into
loop
pop
xlat
lock
fwait
adc
clc
addr16
out
addr16
lea
inc
out
add
and
add
xchg
in
aam
in
jb
loopne
push
scas
ljmp
mov
pop
pop
stc
push
leave
and
cmp
push
and
out
pusha
xlat
sbb
shll
adc
jmp
mov
dec
or
dec
jmp
dec
imul
push
out
stc
adcl
movsl
call
mov
sbb
repnz
inc
imul
xor
xchg
sti
cmp
pop
add
in
pop
in
hlt
notb
mov
push
cld
lret
push
add
adc
adc
sub
and
stos
fwait
and
or
jb
jl
addl
out
mov
inc
mov
or
loopne
hlt
icebp
fst
cmp
dec
insl
je
inc
sub
mov
pop
push
pop
sbb
stos
call
lods
xor
in
sahf
push
in
mov
imul
scas
pusha
popf
mov
jle
cmpb
dec
xor
lock
call
out
mov
mov
mov
xchg
adcb
push
fwait
add
dec
insb
sbb
dec
and
insl
adc
sbb
mov
arpl
jecxz
sub
add
mov
dec
sti
xchg
push
addr16
push
fwait
das
mov
mov
femms
fnstenv
pop
movsb
jns
out
ret
cmp
lods
fwait
arpl
push
call
mov
mov
dec
stc
out
out
mov
add
cmp
add
mov
insl
dec
lret
movups
out
add
mov
push
adc
lret
fsub
outsl
imul
mov
in
movsb
and
sub
or
mov
shll
test
test
xor
push
in
inc
das
cmp
rclb
jecxz
jp
sti
cmpsb
or
jbe
aad
repz
data16
push
and
int3
jp
or
mov
int
fiaddl
ficomps
jg
or
pop
jbe
sti
sbb
adc
and
pop
neg
push
sbb
repz
xchg
out
pop
inc
cmp
xchg
cmc
cwtl
push
mov
pop
xchg
jno
sbb
fisubrl
inc
jmp
cmpsl
mov
xor
mov
leave
mov
mov
mov
jmp
rcrl
out
into
hlt
aam
and
fucom
push
stc
out
out
lods
inc
in
lods
push
aaa
push
lahf
out
dec
ret
mov
aaa
push
js
loop
pop
leave
sbb
xor
push
push
arpl
syscall
shrl
int3
or
xor
inc
sub
stos
xor
mov
ret
xor
rorl
mov
and
aam
fstpl
push
jae
cmp
lods
hlt
ljmp
push
outsl
dec
out
sarl
dec
push
add
outsb
out
aad
inc
int
mov
jbe
add
xor
call
inc
pop
jecxz
orl
cmp
enter
pop
addr16
add
jmp
mov
push
inc
dec
dec
inc
gs
bnd
inc
pop
cltd
mov
adc
stos
shlb
pop
divl
and
sub
fisttpl
stos
fs
push
popf
dec
ret
out
aas
or
ret
test
jmp
inc
cmp
inc
out
cli
add
fwait
and
jnp
adc
mov
add
shll
cld
repz
movsl
shlb
pushf
cmp
fs
cmp
ja
mov
cmp
mov
repz
jno
out
stc
jle
rep
add
fistpll
cmp
jle
lret
push
mov
dec
adc
arpl
ja
imul
dec
sbb
mov
mov
iret
fdivrs
jp
popa
sbb
and
add
jecxz
cmpsl
xor
and
popf
mov
pop
or
pop
jecxz
repz
push
cmc
add
fwait
inc
sbb
fcmove
cmp
pop
loop
lret
daa
push
sbb
aaa
testb
pop
popf
lret
iret
hlt
jmp
jg
shl
inc
imul
fstpt
loop
stc
cli
mov
adc
ret
or
cmp
sbb
or
jl
add
add
push
lcall
adc
push
or
pop
push
pushf
add
into
mov
je
repnz
stc
xor
add
cmpsl
insl
cmc
cmp
xchg
lcall
pusha
pop
mov
out
push
int3
jg
test
mov
aas
push
mov
inc
lock
pop
pop
mov
aam
imul
dec
aam
cmpsb
sbb
push
ret
shl
loopne
adc
imul
sti
dec
push
xchg
sbb
loopne
sub
jmp
and
out
adc
mov
gs
jg
lahf
movsl
sahf
xor
mov
adc
rcr
xchg
xchg
fnstenv
ljmp
xor
faddl
cs
cld
rcrl
sbb
leave
gs
call
imul
call
inc
xchg
mov
sub
jo
jecxz
dec
add
and
mov
imul
cmpsb
add
sbb
cmp
jae
int3
sub
pop
ss
lret
loope
mov
into
out
or
pop
outsb
aad
cltd
xchg
decb
leave
int3
ds
push
or
hlt
push
mov
cmp
mov
sub
mov
dec
sub
std
add
add
add
int
jb
fiadds
add
cmpl
imul
jae
inc
dec
cmp
test
fsubrs
in
sti
aad
loop
out
icebp
mov
ret
sahf
sarb
xchg
adc
cmp
sub
or
shl
out
cmpsb
fists
shrl
call
adcb
mov
pop
or
js
pop
test
mov
sub
xchg
mov
rcl
inc
repnz
ds
incl
js
outsl
push
push
pop
xlat
cmp
xlat
adc
shl
rolb
push
and
cmp
cmp
ret
dec
fst
loopne
mov
xchg
imul
std
and
ss
push
mov
add
icebp
out
xchg
fdivrl
fbld
arpl
pusha
jmp
ss
imul
xchg
jecxz
sbb
mull
adc
cld
popa
and
lret
lods
xor
dec
imul
add
cmp
dec
mov
notl
mov
jnp
stc
mov
mov
inc
xor
imul
jmp
or
cltd
flds
in
add
or
lods
cmpsb
mov
push
movsb
dec
mov
jo
pop
lods
sbb
divb
clc
aaa
adc
push
or
jle
fldcw
cmc
mov
push
daa
sub
sti
xorb
adc
in
out
ds
inc
pop
xor
cmp
cs
and
dec
test
aam
add
js
fdivr
imulb
sbb
jg
sbb
push
incb
sbb
inc
nop
xchg
dec
sarl
not
mov
clc
scas
xchg
add
std
sarb
scas
pop
dec
lret
sbb
jno
cli
add
insl
inc
out
push
adc
sahf
aad
push
lahf
push
xor
dec
pop
inc
jecxz
ss
shll
rclb
adc
sbb
jl
idivl
mov
fidivrl
in
ret
repnz
jge
data16
cmp
pop
cmp
fstpl
xlat
aam
dec
add
loopne
fmull
in
jge
jns
in
je
xlat
inc
mov
arpl
out
ret
sbb
ret
pop
pushf
mov
dec
add
imulb
int
repz
adc
xchg
test
or
mov
xchg
aad
or
add
add
sbb
mov
cld
cmp
js
cmpb
pop
xchg
sub
push
push
xchg
popf
mov
cmp
pop
xchg
cli
mov
mov
inc
in
adc
sbb
inc
cmc
xchg
mov
dec
jo
div
sbb
out
xor
mov
mov
sarl
test
jmp
adc
test
mov
out
sub
div
inc
jl
xor
pop
jecxz
test
stos
arpl
or
fisubs
sti
inc
dec
iret
xchg
or
imul
addr16
leave
cmp
daa
scas
mov
add
cmpsb
idivl
push
in
js
std
fbld
and
or
or
xor
push
addr16
jns
popf
or
cmpsb
loop
sub
mov
inc
es
or
mov
in
inc
adc
loop
into
mov
cs
push
sbb
xchg
mov
mov
je
and
lret
aas
call
mov
aaa
add
imul
out
lcall
sub
test
out
mov
stc
pusha
frstor
mov
push
sbb
fsts
clc
lock
cmpsb
add
aam
movsb
push
into
xor
pop
incl
push
repnz
xor
repz
and
adc
imul
mull
popf
sbb
xor
hlt
dec
loop
mov
inc
out
out
lods
cli
xor
test
add
sbb
and
add
imul
mov
loope
int3
stos
xor
mov
out
push
sbb
push
addr16
pop
inc
test
push
outsl
mov
sbb
ljmp
jmp
adc
das
gs
sbb
push
mov
push
out
gs
in
daa
sub
jmp
fadd
cld
or
cs
int3
iret
repnz
js
jl
pushf
pop
and
add
sbb
fiaddl
and
pop
mov
push
stc
in
mov
enter
or
lods
adc
cmpsb
mov
imul
jecxz
lods
inc
fimuls
pop
mov
add
and
mov
bound
aad
std
sbb
in
mov
pop
add
mov
cmc
sbbb
arpl
insb
fildll
out
stos
sti
mov
shll
sub
lods
inc
jecxz
pop
cmp
cmp
lret
outsl
push
jae
out
pushl
or
or
les
int3
or
add
arpl
loop
sub
sbb
push
jnp,pn
bound
stos
and
rorb
push
and
push
jecxz
mov
ficoml
xchg
fwait
push
xchg
cltd
insb
adc
push
pop
addr16
cmp
lret
jp
repz
xor
pop
cs
mov
add
pop
sbb
es
jp
ret
in
sub
mov
pop
push
sbb
daa
popf
lock
ljmp
sbb
mov
adc
bound
mov
int3
sti
stos
xlat
adc
xchg
adc
mov
std
sti
icebp
stc
jmp
loop
inc
xor
mov
aad
cs
pop
sbb
enter
jmp
xor
or
mov
pop
cmpsl
push
mov
pop
push
add
add
mov
dec
decl
enter
or
cmp
bnd
cmc
stos
and
and
mov
lret
test
lds
adc
into
aad
movsb
repz
pop
pusha
call
idivb
jp
jmp
or
flds
shrl
out
or
jp
push
push
pop
sbb
sbb
mov
ljmp
xor
out
lret
lods
and
jl
sahf
fbstp
lret
sub
adc
addr16
cmpsb
and
lds
repnz
lods
loopne
and
pop
pop
dec
pop
jae
in
aam
stos
ficomps
cmc
out
jmp
sahf
dec
daa
xor
jae
lock
sbb
cwtl
test
xor
sbb
cmp
adc
push
pop
in
ds
pop
pop
stos
ss
fcomi
aas
dec
mov
psllq
outsb
pop
outsl
or
push
lea
inc
out
cmpsb
xchg
dec
mov
fisubrl
add
in
sbb
cmp
mov
movsl
sahf
imul
sbbl
call
mov
aaa
and
xchg
das
lret
add
dec
pop
out
hlt
lods
and
add
sbb
push
negl
add
mov
sbb
shlb
mov
fsub
sub
jb
cld
popf
int3
inc
pop
push
jmp
adc
or
and
in
adc
enter
add
push
cld
pop
sarb
add
icebp
repz
idivl
add
scas
in
out
cmpsb
xchg
jmp
cli
xor
addr16
mov
adc
adc
or
mov
nop
mov
jne
adcl
lahf
xchg
cmp
cmp
nop
shl
cld
lret
fdiv
inc
mov
sbb
pop
mov
xor
push
imul
mov
sub
mov
inc
lahf
insb
xchg
jb
sub
das
adc
scas
cmp
int3
sahf
add
lds
loop
test
pop
in
jnp
adc
cmp
bnd
fwait
mov
inc
adc
inc
or
pusha
insb
test
push
mov
push
lret
and
mov
rorb
xchg
repz
sbb
fs
stos
lea
lcall
mov
adc
popf
push
dec
cld
mov
or
xor
mov
adc
or
es
pop
push
inc
pop
data16
xchg
into
pop
gs
pop
arpl
jmp
sti
jmp
leave
jl
cmpsb
loop
mov
adcl
pusha
data16
je
sbb
das
adc
rcrb
cmp
or
push
sub
pop
cltd
mov
add
mov
inc
jle
adc
pop
and
add
cwtl
out
jl
std
cmp
adc
add
scas
adc
cmpsb
xchg
xor
add
fs
test
sub
scas
dec
test
cmp
mov
push
inc
jl
rolb
popa
push
add
mov
into
mov
push
pop
push
ss
subl
out
iret
xorb
jno
std
push
ss
lret
xor
and
shll
mov
roll
adc
ljmp
int3
sti
or
mov
cmpsl
cmp
nop
daa
jecxz
into
jl
xchg
pop
push
jae
lods
in
mov
xor
mov
mov
mov
lret
jmp
shrb
stc
sbb
test
ret
push
mov
sub
cmp
or
mov
lods
lret
push
movsb
mov
cmp
or
das
dec
jecxz
jne
in
push
out
xor
jne
xchg
add
out
in
sbb
bound
rclb
in
js
call
xor
hlt
loop
mov
sub
cli
sbbb
mov
adc
andb
pop
mov
dec
adc
add
push
adc
mov
lret
mov
scas
or
cmp
std
rcr
or
mov
sub
cmp
push
icebp
fidivrs
repz
clc
iret
sub
jo
outsl
sub
bound
es
adc
mov
in
fldl
cmp
gs
sbb
fbstp
out
mov
mov
sti
or
aas
shll
aas
push
adc
mov
dec
mov
call
in
outsb
mov
inc
and
sbb
cmp
in
or
sbb
fistl
js
mov
lahf
jle
or
push
int3
loopne
xchg
jle
dec
and
shlb
cld
stos
xchg
stc
and
add
adc
fmull
ss
jg
adc
lods
add
mov
fdivrs
call
mov
xor
out
das
sbb
xchg
das
jecxz
or
popa
or
sbb
mov
out
test
mov
cltd
cmp
pop
into
cmpsb
loop
lahf
pop
add
add
inc
jecxz
lret
xor
ds
xor
aam
sbb
int
jmp
das
adc
std
mov
sub
push
jno
jecxz
into
mov
push
adc
call
mov
aaa
dec
or
dec
das
mov
add
incl
arpl
leave
adc
repz
icebp
hlt
dec
imul
insl
add
cmpsl
add
icebp
repz
dec
jl
in
movsl
add
dec
xor
sbb
inc
or
stc
add
xor
decb
sbb
int3
push
in
jno
add
adc
std
xchg
xchg
enter
adc
or
loop
xchg
cmpsl
xchg
out
adc
call
stc
mov
test
loop
mov
cmp
sub
mov
xchg
pop
or
add
or
cmp
add
mov
or
push
sub
je
jecxz
sub
aaa
shll
cmpsb
gs
repz
movsb
stos
inc
pop
shll
adc
bound
cs
scas
leave
cmp
dec
jl
jnp
inc
lret
in
or
out
pop
lret
clc
jmp
test
hlt
mov
cmp
sbb
leave
mov
xor
and
cmp
and
pop
jno
cmp
cmp
loope
out
mov
cmpsl
cmpsl
repz
adc
inc
sbb
adc
scas
cltd
cmp
mov
xchg
cmp
movsb
cmpsb
pop
xchg
pop
mov
hlt
out
scas
jne
fisubl
ror
sub
dec
push
lods
out
or
adc
add
enter
mov
mov
imul
jbe
movhps
inc
in
lahf
lcall
jg
xchg
mov
in
test
jle
mov
mov
cmp
add
cmpsb
loop
sub
add
out
loop
sub
ds
in
lods
xchg
sub
stos
pop
mov
pop
adc
xchg
adc
add
or
ds
popf
adc
inc
jecxz
enter
loop
cmpsl
mov
mov
jo
call
lea
lahf
insb
jp
call
sub
in
and
push
sub
gs
ljmp
xchg
sbb
push
daa
out
jp
xchg
push
or
sub
repz
lret
call
loope
push
jbe
imul
xchg
nop
add
mov
sbb
cmc
lods
mov
fbstp
sbb
cmpsb
scas
out
pop
xchg
cmp
std
sti
cld
adc
scas
jbe
cmp
mov
iret
pushf
in
add
fnstenv
inc
cmp
xor
push
mov
jle
xchg
subb
fwait
jb
inc
test
push
sbb
lret
push
in
loop
inc
repz
xorb
push
add
cwtl
xor
leave
and
mov
gs
cmp
pop
pushf
mov
xchg
cmp
jp
push
cwtl
xchg
out
negl
hlt
mov
psllq
add
dec
in
fcmove
lods
bound
sub
cmp
clc
dec
adc
arpl
cmc
push
bound
sub
les
repnz
iret
fildll
ret
pop
hlt
in
or
sbb
mov
out
mov
std
sub
subl
inc
xchg
mov
mov
out
cmpsb
call
dec
push
lods
sbb
rcll
iret
or
add
out
cmp
in
push
push
jo
data16
out
mov
bndldx
cmp
call
fdivrs
add
cltd
cmp
sahf
lret
xchg
ss
pop
clc
push
pop
add
outsl
dec
fmull
or
xchg
lods
adc
out
aaa
sub
test
adc
cmpsb
jp
adc
mov
mov
fmull
sub
imul
hlt
iret
test
cltd
cwtl
sbb
addr16
add
or
cli
ret
or
push
sub
xchg
push
into
adc
scas
pushf
sub
or
fcmovnbe
arpl
subl
sbb
pop
cmp
pop
lret
pop
rep
stc
lock
cld
add
insb
jg
std
out
out
das
sbb
cmp
dec
or
rcll
dec
mov
cmpsb
add
repz
and
stc
pop
mov
sbb
stos
dec
xor
ljmp
sub
mov
jmp
cmp
int3
and
xor
mov
push
jo
cmp
into
sub
ret
push
add
cmp
movsl
or
stc
mov
stc
jmp
std
pusha
sub
jecxz
std
jns
mov
scas
pop
fucomip
xor
cmpsl
pop
jbe
adc
test
in
stos
repnz
inc
leave
cmp
adc
int
xor
jb
push
push
sub
mov
and
subl
and
add
cmp
test
or
fmul
sarl
jecxz
dec
xlat
mov
addr16
shlb
pusha
fldcw
stos
and
imul
in
push
add
imul
in
clc
cmp
or
aas
pop
addr16
fisubs
fnsave
push
stos
icebp
pop
xchg
push
add
mov
sub
cmp
or
mov
out
pop
icebp
cltd
out
hlt
aaa
fistpl
inc
imul
incb
pop
sbb
aaa
or
mov
mov
sbb
sbb
push
movl
sbb
pushf
mov
pop
push
xor
outsl
loope
inc
or
xchg
jbe
idivb
ret
loop
fldl
lods
push
xlat
adc
lret
outsl
lock
xor
aaa
into
movsl
lcall
insl
and
in
mov
xor
cmpsl
mov
insl
cmp
inc
lds
lahf
xor
sub
ror
or
add
lcall
lret
fstl
ret
dec
mov
imul
repnz
adc
popf
je
mov
incb
cld
or
pop
es
lods
out
nop
loope
xchg
arpl
movsl
pop
aaa
fnstsw
jo
js
or
push
push
cmp
cmp
jl
into
enter
inc
adc
xor
push
and
sahf
js
pop
loopne
dec
cs
xchg
add
lods
and
mov
std
pop
outsb
and
push
pop
sub
xorl
shll
pop
data16
aaa
xor
fwait
shll
jo
or
fwait
fistpll
mov
fstps
cmp
je
fdivl
dec
aaa
lods
sub
push
repz
shlb
rolb
loope
ret
loopne
cmp
inc
subb
or
comiss
into
mov
mov
lea
adc
and
fists
or
cmc
in
sbb
push
xor
ss
arpl
jbe
imul
push
and
add
pop
cmp
jo
mov
jno
scas
out
cmp
lcall
loopne
inc
jo
xlat
in
and
inc
shrb
push
adc
mov
adc
inc
add
push
scas
pop
push
add
mov
cld
push
push
pop
ds
fwait
push
in
jo
aaa
out
dec
add
and
ss
add
xor
ss
or
sbb
adc
das
dec
dec
bound
and
sbb
jecxz
adc
sbbb
adc
add
and
pop
sub
push
outsl
mov
sbb
es
dec
pop
dec
mov
out
or
out
xchg
repnz
push
mov
sbb
stos
repz
xor
lahf
into
xchg
imul
or
sbb
jle
jno
mov
outsl
push
add
je
sub
and
movsb
roll
call
out
lods
sub
hlt
sti
xor
sub
cmpsb
in
push
daa
stos
sub
divl
addr16
or
jbe
add
sbb
cmpsb
mov
test
xchg
pop
cli
jns
imul
add
fwait
pop
sbb
xchg
xchg
lds
add
ds
es
xor
dec
mov
lea
push
add
pop
in
or
and
xchg
lods
into
inc
cmpsl
adcb
mov
push
loopne
imul
mov
inc
jno
repnz
ja
or
push
cmp
cmp
pusha
hlt
mov
mov
lcall
adc
xor
lods
push
out
insl
push
scas
mov
adc
sub
test
mov
arpl
pop
inc
pop
sub
or
or
push
cwtl
or
push
cmpsb
xrelease
fisubrs
stos
jle
and
add
lods
pop
inc
mov
mov
pusha
repz
sub
jle
add
xor
adc
fdivl
push
movsb
sub
fldcw
add
push
sub
inc
shrb
iret
push
pop
xor
out
test
test
and
xchg
pop
insl
into
dec
xchg
sbb
imul
push
loopne
jle
test
repnz
cmp
mov
out
jo
sti
push
mov
stos
sbb
pop
not
mov
sarb
fisttps
mov
mov
call
cmpsl
aad
push
inc
push
or
mov
jbe
adc
dec
push
xor
and
inc
pop
stc
cmp
dec
or
sahf
ss
mov
inc
negl
jmp
shrl
in
out
jbe
xchg
adc
pop
leave
and
lret
dec
pop
inc
and
rcr
sti
xor
dec
repz
inc
orl
ss
sbb
sub
dec
xor
loope
mov
mov
sahf
xor
jp
inc
ss
push
arpl
inc
das
cmp
inc
arpl
test
cs
ljmp
ja
loop
mov
cs
scas
pop
test
ss
repnz
inc
insb
sub
cli
mov
inc
dec
out
out
add
popf
mov
es
or
aad
in
filds
aas
pop
je
inc
pop
filds
and
mov
outsl
pop
in
push
xor
sbb
inc
cmp
rolb
cltd
stc
xor
jle
push
pop
iret
and
test
sub
sub
sti
cmp
sbb
mov
sbb
ret
xchg
out
jno
std
inc
push
test
repz
xchg
inc
pop
lea
out
jp
lea
out
jge
into
sbb
adc
inc
mov
adc
test
mov
jb
pop
sub
out
jnp
jb
jp
lods
push
mov
jle
jle
iret
and
or
jae
add
jg
div
lahf
push
nop
add
je
into
xor
jecxz
sbb
sbb
xor
stos
cmpsb
adc
inc
std
pop
faddl
push
add
ret
ss
lea
or
stos
push
jmp
jb
cmp
push
les
pusha
aaa
add
pop
sbb
or
call
std
aas
jmp
jo
pop
sbb
test
outsb
repz
sbb
cmp
sub
pop
call
add
inc
dec
mov
mov
mov
in
insl
and
inc
imul
cmp
xchg
les
cmp
pushf
pop
or
pop
push
test
fisttps
mov
pop
jmp
mov
sbb
into
jbe
xor
sqrtps
and
xchg
je
mov
arpl
rol
dec
fldz
push
fcomi
sbb
pop
xchg
fildll
ret
xor
repnz
mov
repz
and
cmp
sub
jb
out
dec
mov
out
cld
movsb
dec
mov
lret
and
shlb
cs
movsb
popf
xor
ljmp
aam
jp
pushf
xchg
cmp
repnz
fld1
xchg
inc
cmpsb
xlat
and
addr16
sti
out
arpl
push
pop
repz
push
or
in
lea
jp
mov
or
or
test
push
stos
sub
loope
pop
mov
sbb
sahf
arpl
mov
fdiv
out
lds
ja
mov
call
adc
add
mov
popf
fs
adc
int3
daa
ret
or
in
jecxz
mov
fists
inc
cmpsw
jne
lock
xor
push
adc
mov
xor
push
mov
pop
divb
ret
inc
sub
pop
orb
adc
jecxz
inc
pop
cmp
xor
gs
cmp
cs
lahf
cmpsb
inc
jns
dec
sbb
fwait
jbe
fs
ja
in
mov
in
add
popf
negl
adc
sbb
mov
jne
hlt
jns
test
pop
fsubrl
sbb
push
ljmp
mov
loopne
pop
aas
andb
or
push
adc
cltd
xchg
push
cltd
pop
aaa
in
je
out
xchg
dec
out
fucom
sahf
dec
mov
fsubrs
adc
scas
mov
adc
fistl
adc
adc
enter
push
mov
clc
cmpsb
mov
pop
lds
mov
cmp
ret
cmc
sti
imul
mov
mov
loop
push
or
cmp
movsb
cmpsb
sahf
mov
and
bound
int3
or
cwtl
aaa
sbb
popa
out
scas
or
adc
xchg
pusha
pop
roll
inc
fisttps
inc
stos
hlt
xor
push
adc
jg
mov
imul
dec
fcomps
adc
inc
stc
jbe
or
mov
mov
jmp
popf
jo
daa
imul
repz
push
sarb
imul
cmp
jge
mov
adc
insb
sub
into
jnp
cmp
adc
ret
inc
repz
icebp
adc
in
mov
xlat
lcall
fsubl
lret
push
mov
inc
inc
dec
mov
insl
call
loope
adc
out
inc
mov
and
jmp
push
fwait
jnp
lods
mov
aaa
sbb
dec
fdivp
scas
jle
push
testl
xor
add
ret
decl
add
ds
arpl
cmp
or
es
mov
jl
jg
data16
push
xchg
cs
outsb
xchg
js
push
movsl
jae
mov
sbb
dec
std
int
fcomp
out
jmp
pop
imul
imul
sar
mov
ficoml
push
or
push
xor
popa
cmp
mov
mov
data16
jecxz
adc
or
pusha
pushf
jge
sub
loope
repz
xor
loope
xchg
mov
mov
jecxz
sub
in
mov
or
out
out
mov
flds
aam
jge
mov
out
xchg
sbb
out
popf
adc
cmc
out
inc
push
jns
test
jo
add
add
pop
mov
adc
mov
or
push
lods
push
stc
mov
aad
movsb
jae
inc
fs
push
clc
mov
mov
xchg
inc
in
loop
jg
dec
das
mov
test
in
jb
pop
jnp
in
sub
xor
adc
imul
sbb
dec
lea
rcrb
add
sbb
mov
loope
xor
add
add
out
jmp
and
out
xchg
jl
sub
jp
dec
mov
mov
adc
push
rcrl
mov
push
jg
stc
je
add
test
pop
nop
xor
fistpl
add
repz
cld
xor
roll
jl
aaa
xchg
cmc
jmp
fisttps
popa
repnz
outsb
in
sub
and
push
mov
sbb
das
pop
pop
in
pop
scas
sub
mov
cli
into
dec
push
repnz
mov
mov
in
stos
clc
dec
or
imul
adc
xchg
lock
mov
dec
or
in
aam
jmp
push
pusha
stos
mov
sti
push
xor
push
mov
stc
in
sbb
mov
rcr
push
xchg
add
inc
add
mov
and
lret
jnp
adc
dec
hlt
je
cs
pop
xor
gs
shrb
loop
cmp
mov
mov
add
pop
or
mov
mov
xor
xchg
xchg
popf
add
mul
fisubrl
aaa
in
pop
mov
jne
clc
adc
or
jmp
sti
fisubrl
js
iret
scas
mov
sbb
sbbl
and
pop
repnz
pop
cmp
loope
and
stos
out
adc
mov
ljmp
in
jmp
xchg
stos
push
pop
repz
cld
xchg
aaa
loop
add
daa
cmp
pmulhw
add
adc
test
push
das
out
loope
adc
xor
jnp
dec
scas
sbb
repz
lahf
stos
or
in
xchg
inc
lcall
idivl
sbb
imul
mov
xor
clc
and
lcall
sbb
mov
cmp
adc
mov
adc
test
cld
es
add
test
and
int3
out
cmpsl
add
dec
lods
sub
xor
dec
sbb
push
adc
mov
add
xor
pop
repnz
or
cltd
enter
inc
shlb
inc
test
or
mov
sub
add
or
add
xlat
push
inc
push
clc
xchg
in
or
mov
xchg
mov
fwait
push
sbb
sub
jae
out
cmpsb
lock
and
repnz
out
inc
fsubrl
jb
xchg
sub
into
movsb
xchg
cmp
outsb
cmp
push
inc
int
cmp
dec
fldenv
mov
repz
adc
cld
or
je
push
jno
hlt
ret
loopne
rcrb
lret
jecxz
or
dec
out
pop
cmp
fisttpl
into
push
lahf
adc
das
pop
aad
mov
mov
insb
push
adc
pop
cli
xor
scas
sbb
rcrl
ds
jbe
and
outsl
xor
js
sti
int3
or
shl
nop
or
fsubrl
mov
hlt
and
jl
cmp
divb
lods
adc
aam
jo
mov
popa
push
mov
sbb
out
fs
xorb
jb
cmc
adc
cmpb
dec
ret
sbb
rolb
mov
xor
hlt
sti
scas
pop
mov
aaa
bound
lods
rcr
lcall
mov
stos
sbb
mov
fwait
out
stos
std
inc
in
pusha
pop
xchg
shr
psrad
cltd
shlb
movq
jmp
push
outsb
les
mov
es
mov
mov
add
call
cmc
sub
dec
sti
inc
scas
sub
out
aad
and
cmp
mul
lods
into
scas
in
push
cmp
mov
and
js
stos
rcrb
push
lahf
out
sub
mov
xor
notb
and
jae
lret
mov
dec
jecxz
sbb
int
outsl
cmp
add
sahf
pop
pushl
xchg
pop
inc
and
mov
imul
push
mov
iret
out
xchg
cmpsb
ljmp
xchg
push
xchg
sbb
scas
adc
or
xor
pusha
inc
loop
fwait
mov
imul
pop
jb
jno
xor
adcl
sbb
sub
push
mov
pop
mov
and
mov
daa
arpl
mov
cld
and
xor
mov
adc
push
xorl
cltd
jmp
cli
ja
imul
mov
dec
ja
pop
sbb
mov
adc
adc
and
or
dec
push
inc
fwait
shrl
cld
into
inc
popa
dec
pop
mov
sub
lods
mov
mov
jmp
mov
imul
sub
xor
jl
ss
test
rorb
sub
ficompl
or
out
mov
push
xchg
cli
pop
call
divb
sub
ss
mov
or
pusha
cmp
int
mov
cmpsl
xor
lret
cmp
fisttps
push
icebp
pop
push
sbb
pop
cwtl
add
mov
fs
add
pop
push
adc
pusha
fnsave
mov
dec
mov
mov
imul
dec
les
cmp
mov
outsb
sub
les
dec
js
subl
lods
test
arpl
inc
or
push
cmc
lahf
push
jecxz
mulb
insb
dec
sub
shll
add
je
movsb
jmp
loope
daa
scas
push
in
cmp
fdivrp
nop
push
adc
xlat
sbbb
and
jecxz
or
insl
or
stos
adc
stos
add
sbb
cwtl
mov
pushf
mov
mov
and
inc
add
fisubl
mov
cmp
xchg
jecxz
int3
test
in
enter
mov
xor
mov
and
xor
pop
rol
call
xor
cmp
clc
mov
jae
jne
and
fidivs
push
out
stos
and
aaa
pop
out
inc
daa
pop
cmp
xor
insb
jbe
mov
insb
out
mov
push
out
fnstsw
jecxz
mov
add
push
out
pop
test
sar
ficompl
addr16
fdivr
ficompl
cmpsb
jmp
fstpl
jmp
test
pop
cmp
and
pop
adc
mov
add
sti
jmp
pushf
push
out
fldcw
fbld
sub
pusha
xor
sti
sti
adc
xor
stos
dec
xchg
adc
aam
lahf
iret
jp
clc
jo
add
adc
stc
sub
adc
pop
mov
pop
xchg
and
or
fldenv
add
push
inc
repz
out
xor
adc
shll
pop
repz
sub
orl
add
cmp
mov
fildll
scas
mov
aas
das
mov
lea
sbb
jg
cmp
xor
imul
cwtl
hlt
dec
adc
mov
mov
sti
and
out
dec
push
pushf
push
mov
dec
out
mov
push
imul
cmp
xor
jle
inc
rep
out
jbe
std
mov
stc
cs
xor
pop
in
std
pop
imul
xor
push
fisubrl
pop
xlat
call
fst
fimull
out
lahf
test
sarb
cwtd
mov
mov
jae
test
jge
fbstp
sub
rolb
scas
or
imul
pop
inc
push
ljmp
or
pop
lea
pop
and
mov
push
cmpsl
xor
clc
lret
push
jge
test
adc
jbe
sub
pushf
xchg
pop
flds
fnsave
add
adc
mov
jle
push
aad
push
imul
clc
lahf
dec
xor
repz
sub
mov
in
jmp
repz
scas
pop
sti
mov
inc
mov
cli
cmp
cmpsl
cmp
inc
dec
push
lcall
lcall
push
in
pop
js
mov
cmc
jecxz
mov
mov
xchg
add
jg
test
inc
or
repz
gs
add
inc
or
loope
sbb
addr16
or
leave
cmpsb
pop
rorb
adc
rorb
ljmp
js
xor
push
jmp
pop
inc
or
aas
repnz
dec
in
cld
add
or
stos
mov
sbb
ja
pop
cld
push
and
xor
outsb
mov
push
sub
sahf
xor
mov
dec
pop
pop
adcb
testb
cmp
out
cld
dec
mov
rorb
cltd
sub
jg
push
mov
mov
mov
out
sti
jbe
sbb
mov
jmp
lods
mov
in
jmp
cmp
inc
in
add
mov
in
sub
mov
push
outsb
jle
cmp
inc
cwtl
cmp
xchg
es
xor
push
dec
dec
mov
aam
mov
cli
ds
scas
cmp
int3
clc
repz
add
push
push
mov
stos
xor
jno
mov
mov
xchg
outsl
fdivrl
rol
lock
xlat
mov
aaa
scas
in
outsb
imul
add
cmp
clc
xchg
ljmp
push
in
xchg
dec
stc
out
data16
and
cmp
add
iret
loope
jl
or
sub
mulb
popf
imul
add
mov
imul
in
fcomp
idivl
ds
fmuls
mov
xchg
pusha
sti
mov
out
jae
pop
jmp
push
cli
hlt
lahf
and
mov
ljmp
push
lahf
rorl
nop
dec
std
push
dec
fisubs
sti
shll
loop
repnz
jmp
adc
pop
aaa
cmpsb
push
ret
cmp
add
add
out
in
into
pop
or
xor
cmp
data16
add
sbb
xchg
sub
jge
xchg
pop
int3
or
mov
ds
adc
ljmp
call
cmpsb
jecxz
mov
sbb
lods
or
lahf
sub
cmp
in
ljmp
mov
jmp
or
xlat
cwtl
idivl
pop
bound
mov
lods
mov
xlat
hlt
cmp
sbb
jg
movsb
imul
enter
aad
mov
dec
out
mulb
cld
mov
out
jnp
scas
nop
sarl
dec
repz
mov
dec
call
icebp
outsl
out
add
push
or
and
sbb
cmp
in
sahf
mov
sarl
clc
cmpl
jle
andb
hlt
fstl
insl
ds
sub
icebp
icebp
adc
adc
cmp
int3
jge
mov
sti
sub
or
sbb
decb
mov
sub
pop
xchg
ret
mov
inc
lret
mov
lret
inc
loop
imul
jae
enter
cmp
and
mov
scas
push
sbb
push
bound
lret
mov
mov
int3
cmp
xor
imul
cmpsl
jmp
nop
repz
mov
sub
mov
dec
decb
add
pop
ljmp
rcrb
repz
sti
add
or
cmp
dec
or
fldl
xlat
test
call
xchg
push
fimull
inc
jge
xor
out
adc
xchg
sbbl
iret
iret
push
sbb
push
idivb
adc
mov
sub
stos
andl
jmp
cmp
add
stos
ret
cmpsb
and
pop
dec
mov
sbb
clc
fnsave
and
mov
pusha
inc
sarl
rsqrtps
mov
xchg
push
jbe
sbb
add
inc
imull
push
jae
rorl
pushf
lods
add
aas
cmp
inc
dec
sub
iret
mov
pushf
mov
push
inc
add
outsb
into
mov
cwtl
jmp
shl
xchg
inc
pop
xchg
sahf
cmp
or
es
or
sbb
xor
dec
pop
mov
imul
loope
push
jae
xchg
xor
mov
int
inc
jae
movsb
mov
inc
popf
std
out
clc
dec
mov
in
in
test
push
cmp
push
cmp
adc
inc
in
xchg
lods
sub
push
insb
sbb
xchg
sbb
xchg
xor
test
inc
pop
pop
sub
jmp
inc
fwait
jbe
or
and
cwtl
sbb
ret
or
inc
ljmp
into
pop
pop
pop
sbb
and
fidivrs
dec
and
xor
ljmp
es
fisubrl
push
dec
push
inc
out
pop
pop
push
stos
mov
movsl
sbb
dec
mov
mov
xchg
jmp
cmp
fimuls
mov
stc
in
push
push
flds
cmpsl
inc
imul
hlt
imul
andl
dec
mov
or
fbld
jnp
movsl
mov
jae
add
into
imul
shll
or
inc
clc
repz
sbb
mov
ljmp
lods
fcos
into
pop
xor
or
pushl
mov
xor
and
cmp
push
add
jnp
pop
aad
jbe
test
add
aaa
addr16
sbb
mov
xor
mov
pusha
cmp
or
in
cwtl
data16
or
pop
pushf
sti
sbb
inc
push
mov
pushf
pop
adc
dec
adc
test
ss
out
fldt
mov
cmp
rcrl
jae
pop
repz
aam
cltd
mov
inc
mull
or
lret
pop
add
mov
push
jb
push
pop
cmpb
add
sbb
popa
mov
xor
mov
sub
sub
pop
or
push
cmp
fcoml
pop
xchg
xor
lcall
mov
inc
ljmp
add
sub
or
in
jp
pop
les
mov
jmp
push
scas
pop
xchg
jnp
xchg
rcll
fsubr
pop
shll
js
jmp
es
lret
inc
loope
adc
daa
push
inc
data16
xlat
pop
shrl
jecxz
ficomps
clc
xor
fldln2
rcrb
andb
sti
push
ror
cwtl
adc
ret
cmpsl
push
cmp
sbb
sub
xor
sub
fimuls
jb
movb
in
lea
push
push
imul
jb
pop
sbb
sbb
rcl
loopne
mov
mov
add
xor
addr16
mov
mov
cvtpi2ps
or
mov
repnz
out
scas
sub
cli
mov
pop
ret
ret
push
in
cmp
sbb
adc
stc
insl
cs
sti
in
sbb
fsubrl
mov
or
cmp
xor
jae
lahf
xchg
xchg
add
xchg
lea
cmpsl
push
push
cmpsb
add
stos
jae
pop
and
mov
repnz
dec
xchg
xor
jo
arpl
popf
lahf
xchg
add
push
fwait
adc
fists
addr16
idivb
out
xchg
jle
fisubs
xchg
push
mov
pop
movsb
and
subb
jae
ror
or
orl
clc
add
push
int
sub
jne
lock
add
or
cmpsl
lock
push
pop
scas
adc
sbb
fildl
sub
pop
adc
loope
xor
popf
icebp
scas
sahf
leave
sbb
and
cmpsb
jno
or
mov
sub
jae
jmp
add
add
aaa
cmp
push
add
in
push
adc
faddl
fucomip
arpl
insl
sub
aas
jmp
push
jo
sbb
loopne
pop
push
mov
xchg
out
jge
mov
inc
sub
mov
out
push
in
xchg
insb
cltd
sbb
hlt
or
fdivl
rcrb
imul
lods
pusha
lods
int
insb
pop
je
sub
or
jno
fistl
sbb
dec
bound
cli
jmp
cwtl
ljmp
add
push
adc
pushf
rorl
repz
mov
imul
test
xorb
arpl
or
sti
repnz
sbb
adc
ret
cli
test
push
fimuls
mov
out
cmpsl
lret
fneni(8087
add
call
xchg
fnstenv
inc
repz
or
daa
mulb
xlat
es
cmp
pop
sub
movsb
shrb
mulb
sahf
xor
push
sub
test
daa
jl
aam
sar
sbb
xor
lock
push
pop
rcrb
data16
push
jns
add
bound
das
mov
pop
adc
movsb
popf
jno
je
lods
push
mov
lahf
pop
and
js
mov
push
mov
pop
js
cmp
gs
loop
test
loopne
test
push
loopne
dec
aas
adc
or
stos
std
lds
mov
mov
cmpsb
sbb
mov
jo
imull
inc
std
shll
sub
mov
pop
faddp
jmp
add
scas
or
stc
and
add
mov
hlt
push
pop
andl
dec
dec
mov
push
testb
enter
arpl
in
sub
imul
out
xchg
cli
sbb
dec
dec
aad
and
sbb
jo
push
stc
jb
jl
push
push
mov
in
leave
or
stos
xor
fs
push
or
test
add
scas
or
ja
outsl
bnd
lret
dec
fucomip
or
out
sub
mov
or
mov
popf
fs
add
inc
lods
mov
inc
jp
add
add
rolb
in
inc
xor
frstor
scas
add
adc
dec
in
iret
testl
push
mov
pop
pop
pop
cmp
pop
lret
std
pop
mov
add
adc
mov
add
notl
inc
pop
dec
fildll
cmpsb
mov
mov
adc
jle
push
movb
jmp
pop
pop
in
arpl
adc
inc
gs
jb
and
inc
les
in
mov
out
gs
sbb
fldl
push
enter
pop
sbb
sti
loopne
mov
ret
and
in
idivl
sub
fistps
bound
jle
shr
mov
pusha
xor
mov
loope
in
xor
icebp
enter
sub
or
inc
or
loop
cmp
and
inc
fwait
leave
loopne
sahf
xchg
mov
fisttpll
inc
fsub
aaa
sub
loopne
jecxz
cmp
add
or
jecxz
mov
mov
sub
sbb
xchg
inc
cmp
scas
mov
das
fxtract
pop
jge
mov
cmp
cli
dec
in
sti
push
adc
or
mov
adc
xor
in
cmp
pop
add
dec
dec
jmp
mov
cli
mov
out
pop
das
mov
lods
cld
mov
mov
jecxz
imul
mov
mov
pop
scas
lret
pop
push
fsqrt
dec
pop
xor
in
out
ljmp
dec
sti
outsl
jmp
fildll
adc
ret
jae
ss
adc
sti
inc
jp
jb
test
sub
adc
shlb
out
adc
mov
pop
adc
in
scas
mov
sbb
pop
jg
cmpsl
fdivl
out
int3
insl
push
sbb
cld
sahf
pusha
fsubl
test
sbb
scas
call
mov
or
pop
mov
hlt
fistpl
push
push
mov
movsl
dec
notl
imul
cmc
ds
neg
loop
fistpll
lock
cmp
add
sti
sbb
out
out
bnd
push
xor
repz
mov
lahf
pause
fucom
leave
mov
jle
jp
jne
push
or
and
mov
xchg
cmp
mov
in
xor
sub
call
in
mov
stos
scas
adc
cmc
cmp
jg
in
jno
outsl
adcl
push
rcrb
and
jecxz
notl
fwait
in
in
in
pop
repnz
mov
xlat
test
and
mov
cld
rcl
sarl
jmp
stos
or
mov
lock
pop
ret
pop
sub
fwait
addr16
es
mov
pop
dec
aad
sbb
aad
xlat
jl
dec
ljmp
cmp
fs
cmc
leave
jmp
jae
jbe
and
stc
data16
or
jmp
iret
inc
shll
dec
sbb
ret
cmpsl
ss
faddl
out
jmp
jp
loopne
fldenv
sbb
sub
sub
cmp
pushf
cld
xor
mov
out
scas
sub
or
push
jp
mov
pop
mov
xor
incb
dec
push
or
dec
fisttps
cmp
std
inc
mov
popa
cmp
mov
fisubs
pop
push
ret
jp
or
int
push
jmp
popa
hlt
pop
xor
adc
out
sbb
shll
stc
test
ljmp
sbb
or
out
in
push
mov
fisttpll
std
mov
in
fcmovb
jl
mov
mov
in
pop
push
sbb
dec
sub
arpl
daa
mov
mov
inc
cmpb
ljmp
aad
sub
cwtl
mov
and
mov
sub
jmp
test
mov
jp
pop
dec
repnz
jmpw
lock
sub
inc
inc
adc
pop
imul
iret
aad
adc
mov
aas
sub
jno
push
sub
out
leave
or
fdivrl
dec
pop
cmpb
xchg
and
hlt
mov
mov
icebp
out
test
shlb
mov
in
in
lcall
repnz
push
cmp
sbb
gs
dec
dec
xor
cwtl
jp
out
xor
fwait
pop
xor
add
adc
jmp
jo
repz
mov
cmp
arpl
sub
loop
cld
push
dec
push
stc
pop
lahf
adc
fistps
test
pop
push
clc
adc
jmp
repnz
add
notl
arpl
cmp
sbb
outsb
push
aad
sbb
cmp
and
call
jbe
daa
clc
loop
loope
neg
dec
and
lea
out
or
into
lahf
repnz
pop
sbb
jge
repz
mov
sbb
push
push
aam
in
in
dec
mov
xchg
jmp
pop
mov
mov
loopne
dec
mov
ss
es
out
fldenv
mov
jge
fs
or
shl
mov
mov
cli
push
mov
prefetch
or
cld
repz
add
pop
adc
cmpsl
pop
mov
mov
push
repz
push
test
cmc
jae
xor
jae
dec
add
push
or
inc
popf
add
mov
stos
scas
or
repz
loope
or
push
ss
mov
add
mov
xchg
or
xchg
ret
xor
jge
ret
mov
data16
orl
sti
test
xchg
and
aam
in
pusha
je
push
pop
loop
sbb
ja
data16
pop
jl
push
jmp
sbb
repz
pop
or
or
sbbb
in
psrad
stos
and
lret
pop
lods
push
repz
stos
stos
mov
in
push
fldcw
dec
cltd
out
pop
cmp
fcmovu
xchg
sbb
and
xchg
pop
in
xor
add
adc
inc
into
pop
push
jns
loop
xor
enter
ljmp
pop
cmp
or
es
fcomps
dec
test
pop
stc
lods
lret
popf
movsb
sbb
ds
cs
sub
aam
std
dec
fnstsw
sbb
xor
xor
out
lods
or
mov
mov
add
fisubrs
mov
pop
push
xchg
inc
loope
cli
pushaw
push
std
scas
dec
orb
cltd
ds
repnz
add
hlt
sbb
lret
addr16
sub
ds
faddl
mov
in
inc
negl
sbb
stos
or
aam
adc
pop
or
hlt
pop
pop
cmp
outsb
je
xor
cli
dec
sub
push
and
fstpl
call
xchg
out
imul
mov
cli
aad
hlt
sahf
sti
sar
pop
jg
push
repz
push
pop
sbb
dec
add
cmpsl
cmc
xchg
loope
mov
sti
sarb
inc
xchg
mov
mov
outsl
arpl
sti
or
or
pop
mov
sub
stos
xlat
jno
jns
outsl
pop
push
xchg
out
mov
push
fisubrs
iret
fwait
push
dec
sub
pop
push
sub
push
and
int3
int3
into
adc
cs
mov
push
stc
ret
inc
inc
pop
sbb
add
mov
lcall
lret
hlt
push
cmp
add
xor
fs
stc
pushf
sti
bound
hlt
out
push
fcomp
lods
xor
add
out
sbb
repnz
adc
inc
push
and
mov
pop
cmp
mov
and
scas
jg
fistpl
fwait
out
pop
test
aas
cmpsl
stc
movsb
inc
mov
std
or
jge
pop
aad
jg
jne
fcompl
inc
imul
fwait
ljmp
jbe
push
fisubrs
adc
pop
icebp
in
adc
add
jl
mov
push
sbb
das
jae
daa
inc
mov
shll
cmpsl
ds
jae
lods
cmc
shlb
cmp
es
iret
imul
in
mov
test
mov
xchg
or
jo
cltd
jno
adc
lahf
ret
or
std
daa
std
sbb
push
fstps
sti
jmp
sbb
push
movsl
rcrb
pop
jo
mov
mov
cmp
cmpsb
pop
sahf
es
mov
and
add
pop
push
mov
jae
sub
ss
jns
pop
lahf
andb
in
inc
bound
adc
add
mov
adc
in
mov
inc
dec
ds
out
ror
add
dec
lods
add
inc
out
jno
jnp
push
cltd
loope
add
cwtl
jmp
cli
sub
fwait
xchg
adc
dec
and
cmp
std
dec
dec
add
pop
stos
pop
mov
mov
mov
mov
xchg
call
mov
leave
or
cli
fists
xchg
cmp
stos
sub
pop
dec
dec
pop
fcoml
aaa
xchg
in
pop
pop
sbb
mov
or
or
lea
lret
push
stos
push
stc
mov
push
sbb
inc
pop
sub
call
xor
pop
call
xor
mov
pop
subl
push
and
push
mov
adc
orb
jo
pop
stos
addr16
cmp
data16
mov
adc
std
mov
data16
jno
mov
negl
addb
add
fucomp
jl
es
sub
jbe
insl
aaa
mov
repz
pop
cltd
jge
lea
mov
pop
mov
sbbl
pop
repnz
push
push
out
into
insb
clc
es
dec
push
jns
xor
nop
out
cmp
sbb
push
mov
sbb
rcr
pop
jp
imul
fmull
xor
add
sub
in
insb
mov
sarb
cld
sub
std
ret
rolb
mov
imul
pop
mov
or
cmp
fcoms
dec
testl
jno
dec
aaa
mov
leave
data16
push
cmp
and
test
jmp
call
xchg
data16
in
fisttpll
mov
data16
adc
lods
in
out
push
mov
dec
filds
out
into
pop
cmp
cmp
out
pop
in
mov
aam
nop
xor
jnp
push
xchg
mov
xchg
cmc
push
xchg
cs
fcom
call
loope
cmp
les
dec
sti
jne
nop
jb
popf
xlat
inc
mov
loop
push
sub
mov
jns
or
push
out
mov
mov
pushf
xor
and
ljmp
adc
mov
out
push
add
cmc
je
or
mov
or
pop
mov
push
sub
in
lcall
loop
pop
nop
sub
loop
test
mov
fcomip
push
sub
jo
push
call
push
mov
lahf
out
mov
jae
loop
pop
add
add
lcall
dec
and
lds
ficoml
lods
push
rorb
ds
mov
int
adc
pop
fmul
lcall
and
sbb
sti
lret
mov
sub
clc
pushf
jmp
das
sub
out
xor
pop
mov
xor
push
loopne
adc
xchg
jmp
aas
adc
dec
xor
push
jne
add
jb
fmulp
pushf
add
pop
push
in
lods
call
xlat
lahf
shlb
cld
insl
test
out
add
ljmp
add
xor
cmp
daa
fs
add
pop
stos
test
mov
mov
pop
pop
pop
xchg
dec
mov
mov
cmp
ss
pop
push
sbb
scas
mov
lods
pop
pop
mov
push
daa
iret
movb
es
ss
inc
pusha
imul
push
leave
movsl
xchg
push
arpl
ret
aaa
cltd
fwait
hlt
fs
fistpll
loopne
mov
test
sbb
out
stos
mov
sub
sbbl
pusha
lret
pop
repz
sarl
sub
pusha
imul
push
pop
gs
adc
xor
add
dec
pop
inc
lods
fstps
divl
btr
push
and
dec
adc
push
sub
pop
lret
lcall
jecxz
cwtl
xor
int3
adc
into
inc
add
mov
in
xor
fistpll
dec
in
aas
mov
repnz
idiv
leave
pop
mov
push
and
xchg
mov
inc
pop
jno
aad
lret
sahf
in
arpl
lods
movsl
cmp
sub
sub
andl
lahf
jg
add
test
jne
inc
pop
rcrl
std
inc
addr16
es
popf
jmp
xor
arpl
pop
icebp
std
iret
cmc
out
addr16
mov
stos
sbb
scas
xchg
mov
cwtl
aam
aaa
std
xchg
call
bound
pop
and
in
mov
enter
sbb
jbe
iret
and
cwtl
push
xor
mov
jno
cmpsl
test
mov
pop
test
in
std
push
mov
pop
rorl
lods
mov
lds
mov
out
pop
jl
iret
add
pop
loop
adc
mov
xchg
dec
jno
popf
inc
adc
ret
cmp
mov
mov
bound
xchg
xchg
or
shll
mov
cld
ret
push
shrl
int3
sub
pop
int3
outsl
mov
stc
add
and
ljmp
fcomps
adc
mov
mov
int
shl
icebp
ss
ljmp
es
mov
sub
push
mov
aad
call
pop
and
fadds
and
popa
repz
sub
mov
pop
push
loop
jnp
cmpsl
sub
test
ja
lock
ja
imul
jl
xchg
test
push
push
out
test
cld
xchg
cmp
jns
sbb
sbb
sbb
loop
inc
and
sbb
cmp
rorl
xor
push
int3
in
push
idivb
and
and
sbb
clc
scas
rep
lock
lcall
sub
outsl
pop
pushf
dec
ljmp
adc
lds
daa
mov
fisubrl
subl
pop
dec
sbbl
dec
clc
into
sub
lcall
push
rcrl
outsb
fdivs
push
adc
pmaddwd
je
push
xor
mov
or
aad
rolb
jo
mov
push
adc
mov
aam
dec
dec
dec
ja
lret
sub
pop
cmpsl
icebp
cmp
cmp
loope
add
adc
rorb
xlat
push
inc
dec
sti
dec
lods
push
cmp
aad
adc
or
xchg
mov
scas
loop
inc
xchg
repnz
and
jl
lods
inc
pop
not
sbb
mov
int
push
in
xchg
int3
into
int3
xlat
flds
enter
inc
inc
ficoml
xor
jp
mov
rclb
sub
inc
or
fucomp
clc
xchg
sub
call
add
shrl
popa
or
mov
out
inc
sbb
adc
clc
incl
daa
pop
ljmp
push
push
mov
xchg
aam
movq
jge
or
or
inc
aaa
es
pop
jecxz
pop
adc
jp
cmpsl
test
jmp
pop
sub
insb
repnz
nop
sub
and
test
dec
clc
ret
fidivrl
push
push
fldl
and
xor
xor
lcall
mov
mov
fstpt
mov
adc
iret
mov
ljmp
jl
pop
push
ljmp
inc
lock
out
repz
pop
test
mov
cmp
mov
jle
push
push
imul
jl
call
aas
ffree
arpl
add
clc
jmp
inc
add
xor
fcomps
inc
adc
arpl
shrl
jb
jmp
inc
sub
and
pusha
xchg
and
pusha
cld
fbstp
dec
sbb
dec
mov
cmpsl
mov
gs
repz
jge
js
js
push
adc
pop
jbe
popf
and
daa
jns
ja
lcall
and
mov
daa
push
xor
pop
stos
adc
pop
ret
cmp
pop
xchg
adc
xor
push
ljmp
sbb
aas
psllw
incb
loopne,pn
gs
fcoml
inc
outsl
pushf
fldt
sbb
and
push
outsl
inc
and
ds
ret
dec
ret
frstor
cmp
push
cmpsb
in
loope
and
inc
fs
jg
xorb
sbb
xor
push
addr16
push
lds
mov
fldlg2
mov
mul
hlt
jg
lods
clc
add
enter
pop
mov
jmp
cmp
scas
js
aad
xchg
or
pop
into
mov
add
dec
pop
sahf
loopne
xchg
pop
jne
rcrl
adcb
jp
pop
dec
sub
cmp
sub
and
mov
daa
mov
push
pop
adc
add
aam
sbbb
fmull
jge
and
mov
sub
jmp
pop
cmp
jae,pn
mov
mov
inc
mov
cmpsl
mov
lahf
ds
mov
xchg
rorl
imul
add
stc
sti
les
bound
xchg
mov
or
xor
lahf
cmpsb
push
inc
repz
int3
push
negb
push
xchg
lods
push
sub
and
mov
cmovle
subl
mov
jge
mov
loop
dec
push
lret
add
inc
lret
dec
rcrb
loopne
dec
push
movsb
inc
add
xchg
cmpsl
and
jno
or
and
lret
nop
stos
stc
hlt
inc
push
les
into
stos
das
lcall
push
push
pop
in
xor
jne
xchg
ljmp
hlt
mov
stos
insb
inc
and
popf
dec
out
pop
xor
push
add
xchg
subb
sub
push
or
cltd
dec
adc
repz
in
push
sbb
ja
dec
push
stc
in
scas
sub
and
adc
aad
subb
add
les
xchg
lcall
int3
test
mov
sbb
clc
sub
call
adc
sbb
ljmp
shrb
or
fbld
sbb
cmp
push
dec
jle
jp
fwait
inc
fildl
sbb
push
xchg
repz
addr16
adc
sbb
jne
pop
insl
arpl
jg
dec
ret
jns
xor
movsb
and
jb
dec
mov
xchg
inc
mov
dec
pinsrw
jl
add
lcall
popf
inc
sti
dec
inc
cmpsb
in
testb
stc
fcomps
dec
test
add
pop
shll
sbb
shlb
clc
dec
fwait
es
and
movsl
scas
mov
add
or
pusha
cli
or
cltd
jo
daa
aad
stos
daa
stos
jmp
inc
xor
repz
sahf
pop
sub
call
mov
andb
pop
push
and
repnz
movsl
test
add
rcrb
xchg
mov
or
or
mov
repz
mov
fwait
out
mov
cltd
out
lds
jne
mov
and
testb
cmp
rorb
call
addr16
mov
mov
pushf
negb
into
pop
stc
fwait
daa
pop
jg
fldenv
pushf
movsb
add
movsl
and
jg
sbb
in
out
cmp
mov
push
int3
inc
sbb
ljmp
mov
inc
inc
xor
sahf
dec
inc
cmp
shl
std
pop
add
sbb
sub
repz
sbb
xchg
xor
cmp
repnz
lods
and
cwtl
add
mov
test
fwait
xchg
pop
adc
mov
shll
xchg
lds
ljmp
mov
cld
call
xor
gs
stos
ljmp
and
dec
dec
xor
fimuls
aad
ret
pop
or
pop
xchg
pop
mov
lahf
clc
inc
xchg
adc
push
xchg
into
mov
stos
sbb
or
hlt
jno
psubq
in
jge
mov
or
cmp
cmpsl
ss
jmp
popf
push
insl
int3
and
ljmp
cltd
dec
jo
test
insl
sbb
in
inc
sub
fisubrs
hlt
mov
loop
aaa
inc
ret
ljmp
fldenv
gs
es
sbb
inc
hlt
sbb
inc
jbe
push
ret
mov
daa
add
cltd
push
sub
lcall
out
sub
xchg
jmp
push
dec
movsl
icebp
push
hlt
pop
jg
jle
inc
and
cltd
cmc
cmp
jp
loop
rolb
sbbl
ret
xchg
push
jmp
mov
jmp
fwait
dec
jmp
adc
adc
mov
xor
ljmp
jl
sahf
daa
and
rcrl
outsl
jns
cli
pop
pop
push
ja
mov
jb
cmp
push
lahf
mov
jb
cmp
mov
push
in
cmp
in
cmp
dec
jae
pop
add
add
pop
rcll
cmp
gs
mov
xor
cmp
push
nop
enter
dec
add
xchg
pop
pop
push
push
pop
mov
int3
push
scas
or
adc
stc
mov
lret
sbb
sub
out
in
nop
mov
lds
mov
jmp
popf
mov
pop
dec
push
inc
dec
xchg
sbb
repnz
adc
fs
mov
add
call
cmp
cwtl
inc
sub
sbb
push
push
cmpsl
pop
test
stc
les
out
jb
lcall
in
mov
jge
in
out
sbb
cmp
insl
cmp
push
push
icebp
fs
scas
fwait
rcl
or
pop
ret
lret
dec
fnsave
adc
sbb
jmp
sahf
xchg
cli
sub
mov
pop
mov
call
xor
push
xor
loopne
negl
adc
lods
push
sub
adc
push
jle
gs
repz
pop
sbb
popa
mov
shlb
daa
cmp
repz
xor
movsb
and
std
xor
cmovb
sbb
sahf
add
xorb
inc
lahf
xor
pop
stos
mov
aaa
adc
inc
es
xor
in
sub
loop
push
sub
outsb
pop
ja
mov
dec
mov
cwtl
neg
add
mov
push
cmp
or
mov
pop
xor
jcxz
lahf
je
dec
or
lahf
scas
sub
pop
pop
xor
and
fistpl
andb
dec
inc
pop
aad
mov
cmp
movsb
stos
jmp
and
faddl
cmpxchg8b
add
das
mov
popa
test
enter
push
dec
jae
pushf
jecxz
stos
cmpsb
fnsave
or
inc
xchg
ljmp
lret
repz
loope
dec
cmp
movsl
cmp
fisttpll
jnp
into
jo
outsb
leave
jno
adcl
and
test
add
push
adc
test
sarb
popf
loope
fistps
mov
push
xchg
pop
push
scas
jae
shll
jge
push
ret
sub
pop
mov
push
clc
cmp
jns
ds
fildl
adc
out
sarb
imul
pusha
stc
xor
mov
imul
ds
jns
ret
push
call
add
aas
shl
movsl
clc
jle
add
inc
into
dec
or
les
mov
inc
std
or
js
mov
out
and
mov
das
and
mov
push
fcoml
stos
pushf
mov
aaa
adc
xor
rorl
sub
std
push
xor
cwtl
stos
cmp
adc
or
inc
fildll
jmp
push
pop
jl
xor
cmpsb
mov
cmp
xor
cmpsb
in
aam
and
mov
lods
daa
pushf
add
loop
cli
and
sahf
fisttpl
xchg
or
in
fstpl
lcall
stos
jp
push
sahf
in
dec
iret
jp
pop
mov
test
sar
pop
xchg
push
pop
loopne
pop
fwait
call
push
xchg
out
mov
pop
lcall
xorl
jnp
pop
outsl
outsl
jb
outsl
addr16
outsl
jecxz
dec
outsl
fbstp
outsl
outsl
xlat
jb
outsl
shll
outsl
lret
jb
outsl
ret
jb
outsl
mov
jb
outsl
cmpsl
jb
insb
sbb
insb
vmread
add
pop
lahf
sub
sahf
sub
ss
sub
and
sti
in
es
in
push
or
out
push
je
sti
mov
repz
cmp
pop
mov
repz
std
scas
or
mov
and
or
arpl
arpl
in
pop
pop
std
cmpsl
out
std
stos
out
std
scas
out
fs
mov
movsb
imul
rcll
cmp
repz
cmp
mov
fdivrs
mov
sahf
fcomps
mov
cmpsb
fmuls
mov
scas
fdivr
mov
mov
cli
mov
gs
xchg
adc
out
out
xrelease
sub
jg
jns
out
fwait
jecxz
adc
jns
xor
fwait
and
xchg
and
mov
test
dec
lock
scas
jg
outsl
nop
stos
mov
push
dec
insb
xor
jno
cmp
jge
pop
push
mov
dec
nop
imul
push
mov
sbb
movsl
cmp
push
int
xchg
in
mov
add
or
in
adc
add
in
add
std
cmc
and
clc
es
hlt
es
lock
in
es
call
and
dec
out
push
std
jbe
in
pop
cmp
fcmovb
gs
sar
fwait
mov
enter
sti
jnp
rolb
fmull
mov
lret
orl
mov
mov
filds
sbb
fistpll
xchg
xor
mov
loopne
jae
ret
add
or
xchg
add
xchg
or
mov
mov
mov
fwait
push
jae
lahf
adc
out
pop
jmp
in
inc
popa
pop
pusha
mov
mov
scas
shl
and
fwait
sub
addr16
repnz
and
pop
and
fnsave
movsl
scas
adc
scas
or
cmp
lret
mov
xlat
popa
insb
xchg
xor
dec
aas
int3
adc
mov
sbb
ja
loopne
mov
lea
pop
in
or
rcl
cmp
cmpsl
ljmp
add
cmpb
out
jb
je
pop
add
mov
sub
out
hlt
lahf
aaa
dec
fisubrs
ret
pop
iret
jge
repnz
push
pop
aad
aaa
repz
or
daa
mov
sahf
push
inc
mov
jmp
into
sub
pop
dec
mov
add
not
daa
ja
mov
lods
cmp
pop
lahf
push
and
ret
adc
testl
adc
push
movsb
popf
sub
hlt
in
jp
sub
repnz
pop
xchg
mov
inc
mov
or
bound
and
push
shlb
shr
jl
stc
clc
pop
cli
mov
fstps
data16
inc
mov
xor
dec
nop
xchg
cld
ja
sbb
rcl
jl
mov
jae
push
mull
icebp
mov
pop
xorl
sub
mov
mov
mov
jb
aas
jecxz
adc
pop
push
and
ret
jae
push
stos
aad
jecxz
pushf
push
or
sbb
sti
adc
add
mov
mov
sbb
fwait
adc
daa
add
push
lock
stos
add
xchg
or
xor
aaa
inc
cltd
sbb
lcall
pop
or
dec
inc
mov
lahf
cmpl
xchg
ljmp
mov
jno
aaa
xchg
pushl
dec
sbb
pop
sub
xchg
mov
mov
repz
dec
xchg
fdivs
xchg
mov
pop
out
mov
cmp
add
lret
and
and
aaa
add
jge
xchg
xor
inc
jo
cltd
add
stc
iret
cmc
dec
push
xchg
movsb
sbb
mov
mov
in
in
jp
sub
inc
pop
add
adc
out
rolb
adc
xchg
in
pushf
mov
adc
push
in
push
lods
outsl
or
xchg
jbe
repnz
push
push
jp
jmp
xorl
mov
sbb
dec
repz
or
call
outsb
add
or
xor
cld
pusha
leave
roll
repnz
xchg
das
dec
rorl
clc
mov
mov
je
ds
test
lret
cmp
jne
cld
jno
add
push
arpl
fbld
adc
fwait
repnz
gs
inc
insl
push
adc
imul
push
add
sti
mov
cli
stc
mov
adc
xor
mov
fnstenv
hlt
hlt
out
out
pushl
sub
xlat
sub
icebp
mov
xchg
jae
dec
mov
mov
dec
push
dec
roll
inc
ret
iret
cmp
stc
sub
or
push
dec
mov
inc
jmp
loopne
sbb
lock
jmp
sarl
sub
sub
pusha
daa
push
xor
xchg
imul
dec
ljmp
mov
jmp
inc
fwait
push
popf
cmp
inc
add
xor
inc
pop
into
pop
andl
cmp
and
stos
int
pop
aad
or
loope
ja
push
daa
pop
inc
jp
je
push
ss
cmp
in
fimull
loope
aad
push
rorl
pop
rcll
and
adc
sbb
sbb
insb
into
iret
adc
fisttpl
aaa
push
lahf
out
fistpll
mov
fs
dec
cmp
sti
inc
push
leave
jns
popf
and
dec
adc
loop
adc
dec
mov
pop
jnp
out
into
jne
xor
xchg
jge
or
push
and
int
arpl
inc
inc
sti
lock
cmp
dec
stos
push
hlt
inc
pop
jnp
adc
pop
cmp
mov
lret
fsubr
out
fdivr
mov
sbb
push
andl
xchg
or
jle
lods
out
scas
adc
cmp
add
inc
mov
mov
or
mov
push
cmp
xor
sbb
ss
lret
xchg
jl
insl
out
mov
rorl
pop
jnp
cmpsb
mov
iret
clc
cmp
popa
insl
inc
inc
clc
mov
cmp
jo
inc
repnz
xor
inc
sbb
pop
fstpl
xchg
cmp
and
push
outsl
pushf
or
loopne
mov
mov
rolb
adc
ret
cmpsl
fistpl
gs
enter
inc
xchg
out
push
in
mov
pushf
adc
mov
lcall
xchg
fisubs
mov
popf
scas
add
dec
rcrl
dec
dec
test
jp
or
inc
std
fbstp
clc
aaa
xor
movsl
adc
dec
cmp
inc
xchg
cmp
mov
pushf
inc
cwtl
or
add
mov
negl
xchg
icebp
cmp
stc
adc
and
lock
mov
mov
adcl
out
mov
cmp
inc
xchg
leave
pop
cmp
lds
pop
jo
push
mov
scas
out
add
mov
sti
dec
dec
outsl
dec
pushf
stos
mov
iret
shrb
add
sahf
cmp
or
push
cmc
or
or
test
sbb
out
cmpsl
add
mov
cld
divl
scas
dec
sub
inc
rcl
inc
pop
jns
popa
sahf
dec
and
fwait
sub
lahf
rol
adc
mov
pushf
loop
out
shlb
push
ret
iret
add
sahf
mov
in
daa
in
sbb
fcomp
stc
stos
lods
hlt
in
or
lcall
aad
sub
cmpsb
std
xor
setnp
fimull
xchg
and
mov
and
lcall
mov
lret
or
add
pusha
aad
testl
sub
push
ficompl
mov
pop
sahf
es
loop
mov
clc
xchg
dec
movsl
sbbl
mov
lods
das
icebp
push
in
cmp
hlt
hlt
mov
in
push
dec
adc
outsb
pop
call
pop
aaa
and
xchg
fidivs
repnz
fucomip
add
aam
or
stos
cmp
xchg
sub
push
add
and
or
cmp
out
adc
stos
inc
loope
gs
aam
mov
dec
or
or
in
or
ljmp
stos
test
stos
mov
ss
mov
not
loop
push
int3
sbb
imul
scas
inc
inc
roll
cmp
out
int
rol
adc
cmpsl
xor
nop
add
xor
xorl
sbb
sub
mov
push
push
bound
mov
cmp
popl
dec
fwait
repnz
rorl
mov
rcrl
sti
aam
mov
pusha
sarl
loope
jo
imul
aas
clc
add
pop
adc
mov
loopne
pop
outsb
xchg
jecxz
imul
push
push
xor
jp
jb
add
jmp
fistpl
xor
inc
inc
pushl
negl
sbb
push
pop
and
pop
adc
xchg
mov
lret
or
add
outsb
clc
mov
sahf
idivl
mov
dec
mov
popf
sti
shl
movsl
outsl
iret
mov
pop
mov
ret
cmp
pushf
push
lahf
or
popf
mov
cltd
adc
xor
icebp
test
inc
lret
cmp
loop
and
in
xor
movl
lcall
jne
push
add
mov
or
sub
stos
jg
jnp
insb
loopne
or
jae
or
pop
sub
push
call
movsl
adc
mov
lret
xor
pop
jo
jnp
mov
mov
sbb
sbb
les
ss
sbb
inc
cltd
loope
cmpsb
xor
adc
mov
mov
ret
test
es
xchg
into
adc
mov
xor
pop
notb
iret
lea
aad
or
inc
movsb
popa
sub
popf
dec
mov
fs
push
jmp
js
jnp
sbb
cmp
bound
pushf
subb
out
lods
out
lcall
sbb
js
fcoms
push
out
mulb
xchg
das
jl
sub
cld
pushf
and
pop
std
aam
xor
arpl
aam
dec
adc
pusha
sbb
mov
add
cs
out
in
outsb
stos
fsubrl
mov
mov
adc
pop
or
enter
and
cmpsb
rol
jmp
lcall
dec
xor
pop
in
cmpsl
sub
xor
adc
lahf
nop
fstps
adc
sub
js
lds
mov
add
fdivs
rol
sbb
push
push
pop
frstor
loopne
sahf
sub
ljmp
je
imul
loop,pt
add
xor
cmp
and
lds
repnz
cmp
push
adc
ret
es
inc
into
test
repz
or
cli
pop
inc
ret
sbb
data16
mov
les
outsb
adc
cmp
xlat
add
cmp
mov
arpl
mov
stc
and
mov
out
jb
sub
mov
cmc
sbb
loop
jle
pop
cli
cwtl
mov
mov
pop
rcll
arpl
add
and
xchg
cmp
jmp
jmp
cmp
xor
pushl
cmc
test
mov
mov
test
enter
cmp
xchg
sbbl
mov
jp
add
adc
add
dec
adc
repz
xor
push
or
adc
iret
popf
cwtl
sbb
sbb
cmp
pop
add
in
or
inc
mov
fwait
test
mov
fbstp
and
xchg
mov
or
ret
or
push
sub
dec
xlat
jmp
push
cmpsl
push
cmp
xor
in
and
dec
cmp
or
stc
rolb
fnsave
sti
and
mov
adc
cmp
mov
cs
jl
add
sbb
push
push
jg
stc
rcrb
pushw
dec
decl
add
jmp
xlat
insl
sahf
xor
push
pop
xor
push
mov
and
pop
fsubrp
shll
mov
mov
insl
push
scas
imul
in
mov
cmc
cmp
xor
cwtl
push
inc
inc
roll
jg
cmp
xchg
stc
or
lret
aam
test
xchg
insb
or
and
scas
lret
push
ds
and
testl
adc
mov
jno
adc
lahf
mov
ja
addb
add
dec
fnstsw
shl
rcr
das
adc
cli
sbb
add
sub
popf
sbb
lock
nop
imul
jb
rcll
pop
xlat
pop
ds
cli
xchg
insl
loope
andb
push
mov
xchg
jo
push
xchg
dec
repz
scas
sbb
js
push
jmp
int
or
andl
xchg
adc
mov
mov
clc
cmp
xor
fmull
enter
pop
stos
out
outsb
cmp
repz
xor
push
and
cmp
jle
dec
push
fsub
jg
lock
hlt
xchg
jg
outsl
dec
dec
sahf
inc
jg
addr16
jmp
popa
fdivl
jle
adc
int
add
fstpt
out
xchg
pop
rcll
inc
or
add
mov
pop
push
aaa
and
loopne
sbb
jnp
into
jno
pmaxub
loope
sbbb
cmp
mov
cld
dec
fisubs
sub
in
jno
push
fdivrl
in
cld
test
popf
stos
cmpl
xor
data16
ljmp
add
pop
mov
fs
xor
lcall
and
sar
pop
mov
jae
inc
xchg
dec
mov
inc
stos
mov
das
sbb
jnp
xchg
cmc
jmp
aaa
addr16
fists
mov
popf
fwait
jae
je
out
cld
clc
jnp
sub
retw
xchg
mov
imul
xor
imul
adc
xor
sbb
lret
pop
sbb
or
lret
mov
stos
fldcw
and
pop
xchg
fists
inc
pop
push
repnz
cs
push
ljmp
sbb
sbb
sbb
in
int
dec
std
push
mov
jo
sarb
fisubrs
xchg
popf
in
mov
pop
pop
and
fnstcw
xlat
out
ret
in
insl
sbb
rolb
cli
or
and
and
addr16
push
mov
mov
mov
add
push
mov
push
cltd
pusha
jmp
sbb
add
xor
jp
daa
in
push
in
inc
insl
mov
inc
sbb
mov
movl
cmp
lock
div
mov
xor
clc
jecxz
popa
push
stc
sbb
lcall
test
mov
jecxz
inc
in
xor
fistps
mov
out
xchg
cmp
xchg
insl
dec
dec
and
jns
jp
fstp
jecxz
imul
and
daa
push
and
leave
cmp
lock
pop
lahf
popf
cli
lcall
loopne
xor
rolb
fldenv
test
out
lret
scas
cld
add
popf
xor
movsb
outsb
add
push
int3
mov
dec
add
or
cmp
cmpsl
pop
mov
add
mov
das
sbb
data16
sub
mov
shl
out
or
jmp
fnstenv
fidivl
sub
lahf
xor
iret
repnz
scas
cli
push
add
mov
movsb
pop
or
shlb
arpl
sahf
push
mov
add
sbbb
add
push
movsb
mov
mov
in
fisubs
or
notl
repnz
mov
adc
mov
or
push
add
mov
lds
adc
arpl
fcompp
loopne
shrb
inc
cs
popf
sbb
sbb
push
sub
pop
in
xchg
jns
or
add
add
popa
xor
mov
inc
and
fstpl
pop
aam
push
and
xor
clc
push
movsb
inc
sbb
push
mov
or
add
out
ds
lds
jle
fs
cmp
add
xchg
xchg
sub
decl
and
out
dec
mov
aas
mov
pusha
adc
inc
mov
icebp
push
mov
mov
cli
rep
lods
fsts
push
push
and
loope
jo
add
push
add
jbe
ss
mov
mov
cwtl
inc
push
jb
and
jecxz
lods
xchg
jo
shll
xchg
addr16
inc
pop
xor
aad
stc
mov
xchg
mul
jmp
add
xor
arpl
inc
bound
or
lea
or
imul
cmp
sub
cwtl
adc
inc
push
mov
adc
cmp
pop
std
inc
rorb
and
shll
js
inc
push
imul
ss
out
fwait
pop
addr16
adc
or
jecxz
inc
and
mov
gs
xchg
mov
inc
jne
mov
out
mov
inc
test
inc
mov
pop
fucomip
add
dec
or
and
sub
imul
sub
in
push
jne
fstl
adc
hlt
pop
push
dec
sbb
daa
xor
out
orl
or
and
rclb
cmpsl
mov
insb
insb
xor
add
mov
pop
dec
andb
push
aam
sub
or
push
sub
and
fdivs
add
test
dec
inc
cwtl
xchg
mov
addr16
fstpt
repz
mov
shrb
pop
cwtl
out
cmp
movsb
rcr
aam
jp
xchg
loop
in
mov
push
jp
pop
incb
pusha
cmp
push
adc
mov
push
test
push
add
sti
pop
fsubrs
mov
lods
xchg
mov
fs
push
mov
xchg
mov
clc
mov
nop
cmpsl
lods
jae
popa
shlb
add
dec
pop
xchg
ljmp
pusha
jne
aam
inc
lahf
out
mov
fwait
cltd
rcrl
daa
xchg
sub
insl
push
mov
std
rol
cmpsb
mov
lea
out
inc
mov
into
xor
add
cmp
outsl
insl
jecxz
movsb
jge
int3
or
push
dec
lahf
shrb
ret
loopne
es
adc
shlb
jbe
aas
imul
cmp
dec
pop
shlb
movsl
rcrb
imul
xchg
mov
sbb
in
rcrl
xchg
insb
in
clc
xchg
out
or
ret
stos
xlat
push
das
dec
data16
scas
lahf
daa
push
insl
adc
gs
mov
roll
cli
inc
fiadds
cmp
clc
cmp
jle
cmpsb
into
mov
leave
repnz
mov
inc
sbb
jp
pop
adc
or
cld
jle
mov
push
loopne
mov
cmp
dec
or
jbe
call
adc
std
fistpll
xor
inc
decl
stos
xchg
fiaddl
push
dec
mov
fdivs
dec
je
stos
jg
mov
shlb
push
fistps
xchg
cs
pop
movl
outsl
xchg
pushf
add
fbld
cmp
popa
fprem
dec
int3
xor
ret
popf
or
mov
cmpsl
rcr
pop
adc
ret
sub
ret
outsl
push
fcmovu
xchg
inc
adc
repz
add
out
ja
pop
mov
inc
jnp
inc
sbb
jb
stc
or
and
xchg
ret
mov
lret
popa
and
inc
popa
loope
cli
in
je
add
test
xor
jo
add
xor
push
movl
add
pop
xchg
mov
mov
inc
in
and
outsb
xchg
cld
insb
popa
or
shll
pop
xor
dec
push
sub
mov
push
adc
test
out
mov
add
lods
rorb
outsb
cmp
xor
push
push
lret
xlat
jp
jns
shlw
adc
and
stos
sub
ret
dec
mov
mov
sbb
or
movsb
scas
pop
ds
pop
repz
pushf
test
or
pop
ja
inc
aam
mov
xor
mov
data16
sarb
rcr
xchg
sahf
lds
mov
mov
push
mov
lcall
mov
mov
std
pop
mov
div
jae
pop
fbstp
and
pop
aad
mov
data16
dec
shrl
mov
hlt
lods
mov
in
std
int3
mov
ss
lods
mov
inc
pop
fdivl
pop
imul
mov
sub
cld
movsl
and
nop
cmp
fistpll
pop
out
test
out
daa
mov
add
cmpb
fadds
and
mov
xchg
aas
jnp
jb
call
scas
pop
scas
mov
dec
addr16
push
mov
scas
sbb
aas
lea
jb
push
stos
pop
mov
out
pop
repnz
fdivrp
adc
ja
jne
or
dec
mov
add
pop
lcall
leave
lods
add
inc
jno
mov
imul
mov
inc
adc
mov
mov
pop
xchg
stos
mov
bound
sti
fstp
and
test
sarb
pop
out
in
movb
addr16
test
add
test
xor
push
and
and
xchg
mov
pop
inc
cwtl
xor
pushl
sub
orl
sbb
sub
testb
repnz
xchg
add
or
rcrb
and
add
loopne
xchg
fadd
cmpl
cmp
addr16
xchg
adc
pop
xchg
jbe
lea
cltd
fnstcw
mov
mov
adc
pop
lds
sti
push
mov
mov
fs
test
add
add
mov
mov
lea
push
jo
testb
adc
and
es
mov
dec
push
mov
aaa
jle
fcomip
push
test
add
fstpl
mov
fiadds
icebp
lea
mov
jl
mov
dec
repz
xchg
jle
pop
cmp
jnp
sbb
inc
je
or
mov
stos
inc
lahf
data16
cld
push
out
push
xchg
fwait
mov
movsb
and
push
nop
sbb
mov
lods
ss
xor
shlb
and
jmp
add
mov
decl
sbb
scas
mov
xor
inc
xor
lds
add
lds
cmp
shr
mov
mov
xchg
repz
or
push
les
push
mov
pushf
jno
jne
pop
out
repz
adc
sbb
mov
dec
insl
data16
jno
dec
fsub
and
ss
push
fwait
repz
sbb
loopne
sbb
in
ds
scas
js
dec
in
mov
mov
add
lods
sbb
int3
mov
xchg
stos
lods
std
pop
cmp
push
addr16
lea
test
add
or
adc
aam
xchg
and
dec
movsl
lods
cld
loope
mov
fadd
mov
push
jl
outsl
inc
inc
pop
mov
mov
sbb
pop
mov
test
xor
sbb
sub
fldl2t
cmpsl
mov
jp
in
jo
fimuls
fwait
add
add
les
add
adc
or
bnd
sbb
jnp
mov
shl
addr16
icebp
scas
repnz
aas
inc
mov
pop
adc
rorb
inc
arpl
lcall
loope
mov
add
pop
mov
pop
xchg
icebp
scas
mov
fdivrl
pop
call
aaa
inc
xlat
and
jns,pt
lcall
push
fsubs
push
cmp
jg
mov
push
mov
lret
in
xchg
stos
cmp
sbb
lds
dec
mov
fidivrl
mov
mov
fnstsw
jg
sub
xor
jno
loopne
inc
aaa
cltd
jmp
push
cmp
imul
icebp
sub
hlt
mov
mov
je,pn
add
jbe
inc
repz
rorb
inc
pop
lods
jne
and
xchg
in
jne
cmc
mov
and
jmp
push
dec
jle
insl
mov
dec
and
fldl
test
fistpll
cmpsl
imul
mov
and
mov
inc
sub
pop
inc
push
or
mov
scas
push
push
jecxz
fisubl
jae
repz
imul
sbb
shrl
cmc
add
cmpb
mov
cmc
mov
pop
lock
ret
inc
fcmovnb
xorb
cmpsl
mov
cs
mov
or
jbe
mov
sbb
aas
lock
and
mulb
fsubrs
insb
fsub
mov
fistps
jmp
sub
and
sahf
xor
push
pop
lret
inc
push
inc
pop
mov
adc
cli
lcall
add
fmuls
das
in
jg
aad
test
jmp
xchg
repz
or
xor
lds
stc
pop
or
pop
and
movsb
popa
ss
stos
jmp
shr
lods
icebp
out
xchg
xorb
pop
pop
out
pop
push
add
add
sbb
mov
fisubl
adc
repnz
add
push
mov
stc
cmp
push
cs
sub
mov
mov
and
xchg
fdivs
sbb
push
mov
fwait
out
xor
pop
sbb
or
enter
test
les
sub
and
mov
scas
fsubrp
fcompl
xor
pop
arpl
add
dec
adc
mov
dec
in
mov
mov
loopne
and
outsb
jle
push
mov
cld
nop
add
addr16
fyl2xp1
xor
aaa
push
mov
fdivrs
shll
jnp
push
out
sub
and
xor
sbb
dec
les
mov
fsubl
sti
data16
add
data16
cmpsl
leave
je
mov
addr16
arpl
xchg
shll
mov
aas
adc
xor
or
lods
mov
std
inc
mov
xchg
out
fcmovbe
bound
or
call
call
xlat
push
aaa
nop
sub
jecxz
bound
push
sbb
adc
lret
mov
mov
outsb
xchg
push
movsb
pop
rcrl
shll
push
aam
sub
sbb
hlt
lods
mov
test
bound
push
repnz
in
in
imul
and
mov
popa
cmc
add
or
cmpsb
loopne
divb
test
enter
push
iret
cmp
popf
movsb
movsb
std
jo
adc
jns
inc
cmp
jbe
dec
test
mov
nop
icebp
or
call
and
adc
dec
test
cmp
daa
mov
dec
fnsave
and
xchg
test
push
ljmp
ljmp
rclb
sbb
jg
push
fs
rclb
or
clc
xor
jl
jmp
shl
sub
or
arpl
xor
bound
imul
iret
aaa
je
pushf
pop
adc
xor
out
std
cwtl
je
arpl
or
bound
jecxz
add
jp
xor
jb
sub
and
xor
in
mov
push
mov
fidivrs
xor
push
mov
dec
out
repnz
jnp
jge
push
sbb
inc
and
cmp
xchg
sti
mov
mov
xor
ljmp
dec
mov
aam
shrl
js
push
cmpl
in
das
cli
cmc
sbb
mov
sbb
pop
shl
das
or
pushf
negl
xchg
sbb
mov
mov
push
inc
icebp
xor
dec
out
jmp
clc
pop
and
adc
pushw
mov
loop
pop
lcall
mov
cmpsb
mov
push
test
push
out
dec
repz
jb
in
jno
es
inc
jl
add
aad
ret
in
test
inc
pop
cmpsb
js
mov
push
xor
jae
mov
push
sbb
insl
in
mov
pop
mov
out
mov
dec
sub
xchg
or
outsb
inc
xor
sti
adc
jne
dec
ret
mov
inc
jae
or
push
inc
aam
lfs
mov
loop
pop
lret
icebp
add
or
inc
pop
adc
fs
aam
fwait
xchg
pushf
fisubl
xchg
mov
mov
lock
mull
jb
cwtl
and
pop
lds
test
sbb
lds
inc
dec
insb
dec
inc
jp
mov
sbb
loop
mov
add
xchg
xor
push
fwait
push
std
mov
xor
aas
pop
mov
fidivl
inc
inc
daa
pop
sti
push
out
scas
push
neg
inc
jge
cmpsb
lret
out
pusha
jmp
mov
sbb
clc
xor
hlt
mov
push
jmp
push
insl
fisubrs
jp
mov
inc
or
add
insl
leave
mov
out
xchg
pop
adc
cmp
push
fcoms
mov
pop
lock
pop
pusha
adcl
cmp
clc
cmp
dec
cmpb
mov
add
cmp
pop
pop
les
mov
lret
call
cmp
sbb
into
test
in
pop
pop
leave
repz
into
sub
push
std
jne
adc
movsl
lcall
int3
xor
addr16
and
sbb
lods
or
or
out
movsl
jmp
sbb
mov
mov
xchg
pop
fsubs
jecxz
adc
pop
add
loope
xchg
jecxz
insb
mov
jecxz
fisttpll
adcb
mov
xchg
jmp
testb
lock
jge
cmp
mov
xchg
mov
ficompl
dec
mov
xor
lcall
mov
loop
pop
repz
aas
imul
sub
mov
and
pop
mov
xchg
out
and
cmpsl
subb
dec
in
push
dec
arpl
test
insb
pop
sub
push
fs
push
mov
push
out
lods
cmp
mov
aas
adc
sbb
cwtl
cmpsb
and
jl
push
sti
js
test
cli
jge
cmc
cmp
mov
or
sub
inc
sahf
scas
push
addr16
mov
arpl
js
movsb
fiaddl
mov
rolb
lock
outsb
cmp
in
mov
push
je
movsb
xchg
mov
adc
sbb
jg
xchg
test
add
push
add
lret
pushf
inc
outsb
add
push
rolb
and
scas
mov
mov
mov
cmp
rcll
sbbb
mov
call
out
fimull
adc
jno
loopne
cmp
mov
sbb
ljmp
sbb
fsts
pop
push
mov
arpl
arpl
push
sbb
mov
mov
fwait
sub
mov
testb
cli
xor
popf
stos
ss
dec
cmp
cmpsl
ja
or
mov
push
into
ss
xor
fmull
pushf
or
cltd
sbb
dec
clc
cmp
adc
lahf
nop
mov
inc
shr
mov
push
cmp
insl
fcmovb
test
arpl
sub
iret
xor
pop
push
ja
cld
and
in
and
push
ss
xchg
loop
fiaddl
popf
mov
lods
shlb
sahf
data16
mov
cli
js
lret
call
jmp
rcrl
and
pusha
add
sub
xchg
ja
ja
repz
loop
inc
mov
movsb
xor
lcall
pop
int3
js
pop
and
in
cmp
adc
cmpsl
bound
inc
add
fstp
dec
call
lds
shl
outsl
mov
cmp
loop
clc
cmp
sub
sub
push
data16
adc
iret
stos
pop
out
or
sbb
cmc
icebp
loopne
js
push
outsb
xchg
adc
test
test
loop
iret
cltd
adc
jbe
pop
sub
sti
pushf
adc
pop
rcll
jb
arpl
xchg
nop
aad
addb
sbb
add
leave
and
mov
jmp
sti
stos
xchg
jns
or
mov
out
or
out
loope
lea
push
adc
push
adc
jnp
push
lock
inc
xchg
pop
out
sub
out
out
jb
dec
jecxz
imul
mov
pop
mov
insl
cwtl
sbb
call
test
pusha
add
mov
inc
stc
lods
adc
push
mov
aad
xchg
mov
xchg
mov
scas
or
into
dec
cmp
or
sahf
and
test
fs
dec
ds
fsubr
imul
test
push
add
daa
scas
pusha
cmc
fwait
aad
repz
fnstsw
popa
ret
xor
adc
adc
rcrl
lcall
cmp
in
rolb
lock
int3
std
imul
mov
enter
xor
xchg
push
cld
adc
test
fcomp
xor
add
sbb
mov
ret
js
mov
in
cld
mov
push
iret
stos
ljmp
sub
mov
daa
dec
sub
out
test
inc
mov
mov
fcomip
sbb
bound
or
pop
sbb
cli
gs
out
fs
mov
shl
in
add
lahf
xor
mov
add
daa
mov
jbe
scas
das
adc
lret
dec
cmp
in
push
imull
insb
das
cmp
stos
jo
fs
adc
dec
pop
subl
outsl
xchg
mov
pcmpgtd
jno
adc
movsb
mov
insb
adc
addr16
mov
fcmovbe
xor
out
cs
lods
loop
add
icebp
shlb
cmp
or
xlat
mov
out
adc
xchg
fs
mov
rcll
bswap
add
inc
stos
adc
aas
mov
adc
scas
dec
loopne
mov
xor
subb
fwait
xchg
stc
insb
mov
mov
jo
sbb
outsb
icebp
pushf
xor
js
pop
xchg
fisttpll
leave
adc
push
cwtl
xor
adc
inc
cmpl
rep
cmp
sub
aaa
lock
sbb
dec
iret
mov
push
mov
inc
sbbb
mov
sbbb
dec
pop
fs
rcrl
cld
test
sbb
xchg
sbb
mov
insl
adc
mov
dec
sbb
xor
aas
in
sub
ss
or
jmp
dec
ret
call
stos
mov
pop
lods
inc
jle
outsb
in
xchg
add
mov
hlt
inc
fsubr
cmp
jbe
mov
adc
enter
cld
jecxz
test
and
dec
and
gs
imul
lahf
nop
ja
jp
add
pop
mov
stos
movsb
inc
mov
mov
xor
cmp
add
inc
in
pop
inc
lret
cs
jno
mov
pushf
xchg
aas
or
or
xchg
pop
shlb
inc
and
jecxz
out
sbb
mov
call
sti
ret
sbb
dec
sar
xor
push
cld
mov
inc
ret
je
cmc
sub
and
dec
xor
icebp
out
clc
cmp
das
xchg
jae
pop
pop
add
es
out
and
jns
roll
or
aad
adc
hlt
sar
dec
mov
add
sub
adc
and
add
wbinvd
or
adc
or
sti
and
jbe
loop
sbb
out
test
data16
mov
pop
push
shrb
int3
sti
and
or
jg
jp
bound
test
cmp
cmpsl
and
dec
pop
call
shlb
loop
xor
jecxz
fdivrs
shrl
adc
out
gs
aam
adc
arpl
and
fistps
pushf
push
push
inc
in
aam
or
cld
in
push
nop
dec
pop
jne
mov
inc
cmpsl
icebp
dec
cmc
and
sub
pop
push
xchg
jbe
mov
inc
jmp
fcmovbe
and
mov
inc
lods
or
dec
pop
pop
dec
rclb
adc
cmp
scas
adc
rcrb
mov
pop
out
dec
leave
repnz
repz
lahf
scas
xchg
insb
aam
cwtl
pop
jmp
insb
mov
dec
sahf
inc
and
cmp
loope
ficompl
out
not
xor
and
pop
loop
push
push
inc
lock
mov
fwait
xor
sbb
sub
push
lcall
jl
jno
xorb
cli
je
int3
cld
inc
js
sti
sbb
push
jmp
lcall
into
ret
test
or
and
add
call
int3
xor
jno
lods
pop
std
jle
mov
add
xor
clc
pop
stos
call
mov
ret
push
fbld
call
mov
hlt
stos
out
xor
mov
jmpw
add
sbb
or
testl
and
sub
push
adc
fdiv
addr16
or
adc
push
shlb
sub
jge
xchg
shrl
xchg
fs
pop
shr
out
cltd
std
sti
sar
in
loop
add
ror
cli
out
mov
pop
les
and
repnz
add
insl
cmp
sti
xchg
mov
arpl
jg
adc
notb
pop
xor
jmp
pop
aaa
mov
les
jecxz
test
cmc
add
adc
jp
popf
sub
nop
inc
adc
mov
or
sahf
mov
in
jae
push
sub
push
push
mov
pop
xor
xchg
test
xlat
and
int3
dec
dec
loopne
mov
jecxz
mov
push
adc
mov
and
xor
pop
mov
mov
das
adc
cmp
adc
imul
push
dec
ret
fiaddl
pop
loope
jnp
pushf
mov
xor
or
xor
repz
inc
popa
js
ss
or
xchg
cmp
lahf
push
cld
add
ret
mov
in
cmp
call
mov
out
addr16
subl
and
daa
sbb
pushl
es
adc
adc
xorb
xchg
or
fistpll
jmp
fwait
xor
add
pop
sbb
cmc
jl
mov
mov
mov
imul
jg
lock
adc
xlat
lcall
fs
sbb
mov
bound
xchg
xchg
pusha
sbb
cmp
pop
movsl
les
loop
adc
ljmp
sarl
inc
dec
sub
sahf
push
jbe
ja
push
les
sub
stos
pusha
inc
sub
push
sbb
rcll
insl
test
mov
mov
jbe
aad
test
sub
xchg
imul
popa
sbb
add
lds
pushf
add
sar
negb
fidivl
in
shll
outsl
popf
inc
test
mov
cmpsb
xor
cli
out
add
sbb
test
and
jno
xlat
imul
and
add
fdivrl
out
addr16
or
loop
lahf
mov
in
adc
mov
out
shrb
mov
inc
or
xchg
negl
or
cwtl
or
into
mov
iret
repz
repz
mov
cltd
data16
stos
pop
jmp
cmp
sub
or
jmp
push
les
cmpsb
sarb
pushf
jne
and
push
sub
rorl
ja
in
mov
ret
mov
fnstsw
insb
xlat
cmp
xor
cmpsb
mov
out
in
cmp
inc
repz
mov
xchg
add
scas
lods
das
and
in
and
int3
push
cmp
cld
in
inc
rcl
mov
daa
pop
stos
sub
aaa
stos
mov
mov
push
cmpsb
cmp
arpl
out
mov
mov
stos
out
pushl
mov
ret
jb
dec
mov
push
sub
mov
pop
xor
pop
push
stc
fnstcw
sub
mov
mov
js
out
push
push
add
test
add
aad
pop
das
xlat
push
lret
lahf
sub
sar
mov
xor
cmp
mov
sub
call
adc
cmp
sub
dec
dec
sub
xchg
sub
push
or
out
mov
in
cli
shlb
fistl
sahf
inc
pop
in
jg
repnz
pushf
cli
in
mov
into
mov
mov
fwait
sbb
in
roll
outsb
sub
sub
push
test
shr
jg
ljmp
je
int
imul
add
push
pop
sbb
jp
imul
sbb
sahf
pop
cmp
push
xor
pop
sub
sti
scas
cli
pop
test
mov
shlb
rcrl
and
mov
or
loop
push
cmp
or
dec
pop
and
jecxz
xor
testl
add
std
pop
movsb
stc
mov
insl
inc
jo
lods
data16
mov
sub
xchg
pop
fisttps
out
je
sub
out
nop
or
addr16
xor
xchg
arpl
je
dec
pop
ficomps
fs
jle
sub
shll
inc
lahf
and
in
lahf
stc
fnstcw
pop
scas
arpl
lods
popa
add
cmc
push
pop
pusha
dec
stos
dec
push
dec
jl
mov
aad
dec
in
push
arpl
in
sbb
ljmp
jmp
out
fsubs
fs
add
adc
mov
push
mov
lahf
loopne
mov
ss
xchg
and
fwait
sahf
dec
test
jns
aas
pop
jno
lock
call
les
adc
sbb
mov
sahf
xor
pop
fcmovnb
cmp
mov
mov
cwtl
lods
aad
sbb
nop
pop
movsb
imul
mov
mov
std
daa
push
int
cmp
int
lds
lret
fstps
sub
outsb
pushf
or
jle
outsb
cmp
insb
dec
push
or
or
xor
cmp
xchg
rcpps
fdivrp
in
shlb
push
fiaddl
xchg
cmc
cmp
ficomps
mov
cmp
cld
js
jecxz
loop
shl
fwait
adc
sub
inc
xlat
add
xchg
jbe
jnp
pop
mov
out
xlat
push
call
xor
arpl
sbb
loop
dec
adc
push
int
push
adc
cltd
scas
lock
mov
int3
pop
hlt
inc
inc
movsl
inc
test
push
pop
lds
adc
sbb
clc
pop
dec
clc
int
dec
les
pusha
lods
out
test
mov
add
lret
sub
and
push
in
jns
jae
jo
dec
imul
lret
mov
jecxz
shlb
rcrl
enter
fs
sub
sub
inc
aam
mov
pop
inc
idiv
out
imul
and
xor
or
imul
testb
and
push
rorl
outsl
inc
pop
xlat
ja
adc
jb
fimuls
push
mov
mov
jg
idivl
js
cwtl
test
lretw
int3
cmp
lea
cmpsl
ret
sbb
ud2
test
xchg
into
lret
mov
push
jbe
pushf
repz
fisttpl
fisttps
call
rsm
fisttpl
add
jb
mov
rorb
jno
jae
imul
lea
adc
cmp
push
add
add
pop
dec
add
push
ja
ja
mov
data16
push
fs
out
cmpsl
push
lds
push
popa
sub
mov
mov
xchg
das
inc
push
mov
mov
mov
adc
scas
ret
or
lods
cmp
mov
push
roll
ret
cmp
loop
pop
pop
sub
ret
push
mov
jle
scas
lret
in
push
popf
xor
out
push
lret
and
adc
push
mov
ljmp
lods
sub
xlat
pop
xchg
sbb
add
aaa
pop
sbbb
loopne
mov
icebp
mov
subb
pusha
push
push
dec
outsb
ret
cmp
inc
mov
leave
adc
test
pushf
jge
inc
mov
lods
mov
shlb
or
and
out
aam
lret
test
rcll
mov
lea
dec
jb
sub
cmp
mov
test
mov
mov
jns
in
pop
pop
cld
popa
ljmp
adc
loope
xor
das
lods
clc
ja
push
cmp
add
sub
push
outsl
out
mov
repz
jle
data16
jl
testl
insl
jmp
out
or
in
mov
insb
loope
stos
icebp
push
scas
mov
out
pop
les
adc
shl
sahf
rorb
add
fnsave
ret
insl
pusha
stos
push
add
lods
push
mov
mov
js
mov
jne
jle
mov
pop
fndisi(8087
das
mov
xor
out
test
daa
pop
dec
add
sub
loope
add
movsl
and
jg
xchg
mov
ficomps
cmpl
leave
or
fimull
jl
aad
scas
ret
adc
mov
pop
dec
mov
jbe
das
loope
aaa
fnsave
mov
test
mov
cmp
sarb
push
fistpll
ffreep
pop
and
xchg
jecxz
andb
cli
out
sbb
mov
int3
pop
xor
repnz
or
call
data16
sub
das
int3
pop
adc
cltd
jo
imul
cld
sbb
jecxz
cwtl
lock
call
add
sbb
dec
insl
dec
sbb
out
xchg
push
sub
mov
pop
add
xor
pop
aaa
add
loope
notl
stos
fildll
sub
or
inc
push
in
push
mov
push
sbb
push
adc
cmp
mov
mov
insb
clc
cmp
or
push
cs
mov
popf
call
cmc
lods
and
push
insl
pop
pop
mulb
leave
imull
mov
mov
mov
aaa
sbb
and
adc
jb,pt
push
and
mov
dec
sbb
push
paddb
sub
or
dec
jns
xchg
pushf
inc
sub
sbb
iret
dec
bound
mov
mov
mov
pushf
or
fld
sbb
lret
adc
call
cmpl
inc
push
pop
inc
int3
inc
add
mov
jge
pop
mov
jnp
xor
pop
push
enter
push
std
js
adc
dec
ficomps
mov
cld
sub
pop
push
xor
pop
and
iret
jecxz
mov
and
jmp
jle
in
jecxz
aad
and
mov
mov
sti
scas
adc
push
or
cs
mov
sbb
sub
das
in
add
out
mov
dec
and
mov
pop
sub
in
addr16
inc
xor
jle
stos
xchg
rcll
pop
std
cs
nop
cmp
arpl
xor
and
cld
xchg
ja
stos
pop
adc
jb
push
std
sub
sahf
ss
fidivs
xchg
stos
inc
aaa
clc
std
stos
pop
mov
sbbb
mov
fprem
jecxz
mov
cmc
lret
cmp
in
icebp
adc
int3
out
pop
cltd
push
sub
or
cmp
pop
sub
lods
in
arpl
jmp
cmp
fucom
mov
cmc
xchg
xor
and
lcall
shlb
sbb
cld
push
mov
lods
mov
icebp
push
call
rcrl
pop
inc
mov
xchg
sub
call
ja
or
ljmp
in
outsl
jne
outsl
dec
cmpsl
lret
jge
in
mov
and
outsb
decl
xor
mov
lds
ljmp
fnstsw
call
sbbb
cmp
adc
in
pop
push
scas
repz
stos
xor
std
dec
in
test
or
std
cld
in
addl
xor
ss
lea
jg
xor
pop
mov
enter
incb
push
or
xor
es
jg
mov
test
jnp
push
aas
cmp
jno,pn
add
sub
push
xor
push
pushf
outsb
pop
inc
call
insb
jmp
packssdw
mov
movsl
outsl
repz
insb
push
out
shll
xchg
or
scas
cli
cmp
imul
js
cmp
repz
rorl
adc
lcall
test
addr16
dec
lods
mov
jg
dec
jmp
mov
call
in
pop
hlt
mov
add
bound
imul
sub
testl
jbe
or
xchg
cmc
push
dec
ret
sub
stc
addl
std
sbb
ss
cld
and
shll
cmp
pop
insl
sarl
push
sbb
xor
mov
mov
fisttps
cld
pop
aad
pop
das
or
pop
sub
or
imul
mov
popf
cs
popf
inc
rorb
ffree
dec
inc
sub
push
push
sbb
jmp
xlat
xor
push
decb
cli
ljmp
mov
leave
xchg
push
aam
jl
outsb
mov
inc
movsl
sahf
jge
aaa
cld
or
ss
lahf
in
pop
lods
hlt
incb
ljmp
ret
cltd
adc
iret
sbb
jl
stc
pushf
mov
cltd
xchg
inc
loop
fiaddl
dec
inc
mov
dec
pop
mov
xor
adc
imul
dec
mov
cmp
adc
jb
add
out
sub
out
lret
xchg
sarl
jo
dec
xchg
sub
add
xor
test
push
or
int
add
call
lcall
push
push
jbe
notb
hlt
insl
xlat
ficoml
pop
dec
or
pop
mov
push
push
imul
jns
imul
orb
ss
rorb
enter
mov
and
popf
mov
jo
sub
shlb
sub
out
ret
xor
mov
cmpsb
test
arpl
imul
loop
push
imul
push
in
es
cmpsb
pop
loope
jb
jb
adc
pop
xchg
mov
push
sub
insl
or
dec
push
adc
add
sub
cmp
push
loop
push
lods
push
js
jle
lods
std
add
xchg
in
mov
mov
pop
push
lret
leave
push
sahf
fincstp
ret
pop
daa
lret
add
sbb
jmp
mov
outsl
jecxz
push
popf
fnstcw
imul
insb
xorb
cmp
mov
add
das
and
push
out
xor
jne
fnstsw
mov
and
add
push
jecxz
mov
call
lock
mov
jb
shlb
js
jb
push
xlat
adc
pop
dec
out
sbb
xor
jb
cmp
xor
mov
lods
mov
fs
cltd
add
inc
cmp
ret
jecxz
sbb
sub
mov
push
or
das
dec
test
jl
ror
decb
ret
lea
or
js
imul
or
cmp
aam
pop
xor
and
mov
xor
mov
sar
add
ret
fcompl
sbb
lret
cmp
xchg
sbb
test
jae
xchg
je
fs
or
adc
and
adc
data16
push
xchg
cltd
repz
fwait
out
mov
imul
pop
lods
pop
je
cmp
loope
push
xchg
popa
lods
push
dec
and
aaa
in
call
ljmp
pop
sbb
xchg
repz
insb
bnd
cld
lods
out
cmp
fimuls
cmp
les
scas
pop
ds
xchg
fcomi
mov
cmp
and
aas
push
push
sbb
mov
sbb
out
popf
adc
es
lret
sahf
nop
mov
outsl
and
stos
lret
test
push
mov
adc
xor
or
mov
ret
sbb
adc
shrb
add
test
out
or
sahf
idivl
add
inc
iret
and
jns
add
mov
adc
mov
jmp
loopne
aas
into
or
jb
orb
into
test
in
xchg
pop
ljmp
std
or
test
das
shlb
mov
jb
xor
add
mov
jle
enter
stos
decb
test
xchg
cmp
xchg
call
xchg
xlat
stc
insl
cmp
pusha
and
ja
push
jle
mov
repz
out
cmp
jge
lock
aaa
jo
jle
and
mov
mov
xor
mov
add
cltd
cli
shlb
sub
mov
ljmp
or
shlb
orb
pop
lods
in
lods
cmp
xorb
jge
mov
jne
loopne
sub
mov
pop
add
xor
sbb
sti
andb
lods
out
test
movsl
incl
adc
lahf
mov
sbb
in
jo
pop
mov
pop
stc
mov
or
pop
jns
add
pop
mov
jmp
pop
loopne
aam
xchg
jmp
mov
mov
pushw
dec
sub
sbb
imul
in
jnp
fiadds
daa
and
repnz
mov
sub
adc
insl
push
sbbb
in
jno
pop
outsb
cmp
ret
mov
outsl
loope
inc
adc
cmc
insl
mov
push
inc
lcall
sub
pop
inc
xor
in
adc
pop
stos
out
outsl
and
shrl
jl
jns
jmp
lret
hlt
cwtl
psubq
xchg
fbld
cmp
mov
and
mov
inc
arpl
das
add
xchg
sbb
mov
mov
sbb
mov
adc
cmp
adc
fiaddl
add
sub
and
jecxz
fxch
dec
rol
mov
push
sbb
push
jle
mov
popf
xchg
nop
mov
cs
in
leave
and
ss
loopne
andl
sbb
jmp
cmp
rcr
pop
ret
andb
ss
sub
pushf
adc
arpl
into
mov
repz
mov
or
pop
in
bound
mov
jb
loope
out
lret
lods
test
hlt
decl
pop
enter
adc
push
jg
mov
inc
pop
stc
cld
add
test
rol
push
and
addr16
lahf
fistl
sub
mov
inc
repnz
sbb
out
shl
lds
add
xchg
adc
or
ret
sbb
xor
ds
or
mov
into
xchg
int
sti
pusha
cs
rol
rcrw
or
jmp
dec
lret
pop
xchg
sub
adc
nop
lret
push
or
mov
insb
mov
inc
mov
xchg
and
mov
xor
push
dec
mov
inc
push
leave
sbb
ja
or
pop
and
pusha
ret
pop
call
sub
mov
xchg
cmp
lret
or
fadd
sbb
push
mov
xor
xchg
scas
dec
sti
mov
and
mov
jge
popf
jbe
lret
cmp
and
add
mov
iret
fdivrl
std
cwtl
ficomps
rcrl
mov
movl
pop
jae
dec
dec
mov
mov
lret
lods
cmp
push
ret
mov
cmp
push
pop
push
rcr
enter
mov
repnz
int3
sbb
and
adc
repz
inc
cmp
cli
mov
sbb
es
std
xor
mov
push
std
cmpsl
jecxz
or
cwtl
insb
pop
xor
sbb
mov
sahf
mov
out
xchg
lahf
sbb
scas
pop
in
xor
cmp
lods
data16
imul
fsts
fildl
addr16
jb
insl
icebp
mov
sbb
push
push
pop
arpl
inc
imul
lock
sbb
das
jae
flds
mov
adc
faddl
out
ss
imul
jmp
xor
in
pop
jecxz
xor
lds
pop
test
jle
lds
mov
cs
sub
inc
fisubl
sub
sbb
xchg
push
xor
int3
sub
movsl
test
outsb
stos
and
xchg
es
adc
dec
xchg
loopne
fwait
popa
icebp
mov
popf
adc
lods
into
jns
pop
gs
add
test
std
or
fisubs
lret
mov
mov
es
sbb
mov
lock
in
push
cmp
pop
lahf
repz
pusha
or
out
call
cld
ret
stc
mov
xchg
mov
xor
arpl
sub
jnp
les
jmp
jo
adcb
imul
mov
sbb
sbb
push
mov
push
lds
xor
iret
aaa
clc
push
or
aam
lock
movsb
lock
or
mov
mov
and
jne
jbe
push
iret
and
lret
cmp
dec
lret
mov
cli
mov
jle
test
push
cmpsb
xor
loop
mov
inc
mov
add
adc
out
or
outsl
ds
sahf
jne
bnd
pop
test
aad
std
into
or
loopne
lock
mov
mov
pop
mov
xchg
or
and
fs
ds
je
cs
movsl
sbb
int
push
sbb
mov
fidivs
repz
jecxz
pop
hlt
sub
dec
lock
sti
int3
cltd
stos
inc
or
inc
and
jl
out
cmpsl
cmc
addr16
lock
xor
enter
push
ret
es
mov
pop
jmp
jmp
xor
clc
and
shrl
sbb
push
in
add
sarl
jmp
and
pop
inc
flds
cmp
je
xor
enter
fisubs
aam
fucom
and
pop
and
sti
and
stos
cmp
movsb
dec
xor
mov
aaa
lods
sbb
or
mov
push
xchg
push
adc
sbb
and
sbb
mov
mov
loopne
mov
pushf
xor
sbb
loopne
or
ja
test
in
nop
rcll
pop
xor
test
scas
mov
and
and
and
add
scas
xor
dec
test
adc
fisubrs
jae
dec
mov
mov
push
push
mov
xchg
mov
adc
int
xchg
test
mov
cmp
clc
push
mov
xchg
sbb
scas
imull
stc
rorb
cmc
sbb
sub
or
add
cmp
rep
lea
imul
je
cmc
das
pavgb
packuswb
es
cmp
aad
inc
xor
add
fsubrl
dec
lret
adc
add
int
lcall
or
or
imul
shll
mov
popa
sub
cli
sub
lcall
rorb
mov
mov
jnp,pn
leave
sbb
fimull
rorb
jb
cvtps2pd
jns
inc
fstps
mull
faddl
movsl
aad
lret
out
push
mov
in
in
jmp
cmpsb
dec
cld
outsl
cmp
rclb
jmp
fdivrl
push
je
mov
fadd
outsl
and
pop
es
in
rorb
pop
pop
insb
out
adc
iret
xor
inc
shll
and
pop
add
xchg
es
out
pop
or
pop
adc
inc
fbstp
or
test
inc
cmpsl
push
int3
mov
jmp
mov
cmp
ret
sbbb
mov
sub
in
scas
pop
xchg
inc
lods
aam
pop
xor
mov
ret
dec
repz
adc
jnp
inc
lock
or
cs
jl
and
subb
cmp
aam
xor
fisubrl
and
or
mov
sub
cmpb
std
ljmp
aam
rorl
cmp
add
add
cmp
pop
dec
jbe
repz
sub
mov
add
mov
pop
pop
dec
ja
scas
lock
xchg
fldl
jae
ret
std
sub
jge
out
lahf
clc
adc
add
lods
mov
add
lea
divl
dec
inc
cltd
leave
or
xor
sarb
leave
jne
push
add
cmc
adc
shlb
add
ror
pushl
push
inc
cmp
mov
sub
mov
mov
iret
arpl
jbe
js
xor
test
loopne
repnz
sub
lret
adc
test
js
gs
xchg
add
sahf
mov
push
stos
sbb
lds
test
pop
xor
push
ss
and
push
xchg
iret
add
test
push
pop
sbb
adc
jbe
and
repnz
mov
repnz
cmp
add
sbb
adc
call
pop
fucom
xor
pop
jg
xor
loop
push
scas
pop
mov
notl
std
psllq
xor
popa
add
in
popa
adc
std
mov
pop
ljmp
xor
xor
div
mov
js
je
sub
jge
imul
and
scas
xor
sti
inc
data16
add
inc
mov
xor
vmwrite
test
sbb
es
mov
lea
ret
rcll
xchg
pop
stos
loop
jle
stc
pop
add
imul
mov
cmp
adc
dec
jo
mov
lahf
sbb
lds
stc
es
cs
or
dec
jns
pop
and
sbb
mov
lods
ftst
loop
and
out
pop
idivl
dec
xchg
xor
mov
fld
rorl
filds
in
cld
push
add
cmc
int
cmp
add
dec
sti
adc
adc
and
cmpsb
dec
cmc
int
sbb
fstpt
cmpsl
sarb
mov
stos
push
cli
add
into
fucomp
lret
and
scas
jmp
xor
sti
or
dec
lods
mov
dec
pop
mov
cmp
add
cmp
or
cmp
push
dec
out
pop
cld
in
rcll
sahf
sbb
push
sub
and
mov
adc
jmp
call
adc
iret
sbb
sahf
mov
call
out
xlat
cmp
and
jb
push
pop
or
sub
push
fstpl
call
inc
inc
popa
add
ja
sbb
jb
xchg
sub
jge
sub
inc
sub
outsb
pop
xchg
sub
mov
and
jg
add
test
into
inc
jl
and
std
mov
sub
dec
fnstsw
or
sub
inc
pop
sbb
out
movl
dec
gs
aaa
std
sub
call
dec
mov
lcall
in
mov
stos
cwtl
jo
and
lds
or
test
imul
arpl
ss
aam
push
dec
outsl
stc
xchg
and
add
mov
mov
sti
pop
mov
add
cmp
cmp
popa
add
or
adc
sbb
in
dec
shlb
ret
push
or
outsb
imul
sti
pop
sbb
cmpsl
mov
stos
xor
xor
dec
sub
mov
adc
lods
outsb
fsubrs
mov
dec
inc
push
lahf
xchg
sub
in
add
testl
dec
popf
test
sbb
rolb
repz
and
sti
jb
adc
iret
cmp
sub
xchg
sti
arpl
test
push
test
add
adc
ret
dec
fldl
sub
add
xor
xor
add
jmp
add
xchg
sub
cmp
pop
mov
add
sbb
push
add
sbb
nop
jb
lods
mov
mov
fbld
xchg
mov
add
push
push
mov
jge
xchg
negl
push
xor
xorl
imul
adc
add
shrl
mov
hlt
js
movsl
pop
fdivr
pop
xor
jmp
lods
call
inc
imul
pushl
add
leave
add
arpl
fisubrl
lock
mov
pushf
sbb
inc
daa
pop
mov
pop
add
inc
jnp
pop
pusha
aam
sar
lret
jmp
das
and
sbb
mov
adc
ss
mov
add
jg
jecxz
push
fs
idivb
jbe
addr16
outsl
sbb
add
push
imul
rorb
es
lock
adc
arpl
ret
neg
imul
mov
sbb
movsb
cmp
fdivrl
rolb
ds
test
xor
es
mov
or
push
repnz
cld
inc
and
xchg
xchg
and
jmp
stos
push
js
hlt
mov
insb
mov
jmp
and
dec
pop
mov
popl
pop
rol
addr16
pop
jmpw
jne
repz
subb
cld
sub
in
fnsave
shrb
inc
fstpl
repz
and
add
cmpl
mov
xchg
and
mov
out
pop
jns
fisubrl
xchg
out
cmp
mov
orb
lea
leave
shl
mov
cmc
stc
dec
and
push
jle
das
clc
fistl
fwait
sub
neg
pop
int
les
mov
frstor
jae
outsb
in
test
fbstp
mov
out
jae
sub
sub
cmp
scas
jns
lock
das
jp
mov
clc
inc
lahf
movsl
sti
insl
add
pushf
cmp
outsb
in
data16
int3
push
repnz
pop
jb
data16
xor
mov
lds
std
test
push
out
in
hlt
ds
adc
inc
cmpsl
or
fdivl
testl
aas
scas
outsl
fs
and
mov
pop
mov
cmpsl
push
mov
xor
arpl
out
repnz
stos
or
or
int3
cmp
xchg
aam
add
orl
mov
shrb
xchg
je
or
adc
cmpsl
dec
jo
xchg
icebp
in
mov
mov
xchg
icebp
dec
lods
jb
lcall
out
and
sub
cmp
and
mov
dec
sub
mov
sub
in
dec
test
test
jns
fadds
shrl
sbb
test
shll
jecxz
or
or
sbb
cmc
and
adc
popa
dec
lret
daa
scas
aas
rcr
orl
cmpsb
scas
xor
inc
loopne
dec
add
pushf
add
out
addr16
adc
jl
fmul
jecxz,pt
cmp
mov
jmp
xor
push
fisttps
or
push
lahf
sub
xchg
addl
test
xchg
mov
ljmp
fstl
cmp
lcall
xor
mov
jb
xchg
inc
ja
imul
ljmp
das
mov
xchg
add
xlat
sub
scas
stos
repz
out
xor
repnz
sti
inc
pop
mov
mov
jne
lret
sbb
push
das
xchg
cmp
sahf
or
dec
popa
je
in
mov
push
pop
lock
dec
or
es
sti
dec
into
mov
xor
fcompp
fcomps
sbbl
aam
push
out
dec
sub
bnd
jl
add
push
aad
insb
fdivs
out
xor
or
or
jo
sub
sbb
mov
lret
sti
cmp
and
inc
mov
push
push
mov
add
daa
das
mov
lods
adc
or
test
ja
dec
cli
das
lock
roll
sbb
das
shlb
cmp
hlt
or
hlt
xor
pop
dec
cli
rcll
loopne
pop
xchg
cld
inc
mov
inc
push
inc
xchg
repz
inc
dec
mov
mov
cwtl
cmc
cmp
clc
mov
movsl
call
adc
aaa
adc
and
cmp
xchg
fucom
gs
push
mov
dec
popf
cmp
sub
mov
out
daa
add
sbb
jnp
cmpsb
add
or
mov
push
xchg
dec
xchg
jb
std
les
out
or
sahf
out
roll
sbb
pop
fwait
hlt
aad
ljmp
add
and
fwait
mov
outsb
inc
mov
mov
sbb
movsb
lods
adc
lret
or
and
outsl
pop
xlat
sbb
inc
dec
out
jmp
mov
push
std
jnp
sahf
loope
push
out
dec
je
mulb
mov
or
gs
outsl
outsb
pop
add
inc
pushf
add
cli
out
pop
or
jmp
imul
cmp
ljmp
imul
and
in
add
sbb
or
mov
cmpsb
aad
jle
out
push
or
sbb
xor
cmp
aaa
imul
fidivrs
and
push
in
xchg
andl
sub
stc
xchg
and
fs
sar
subl
pop
push
mov
in
fcoml
add
cli
and
test
sahf
pop
les
xlat
or
cltd
fwait
mov
filds
sub
inc
insb
sbb
or
sub
lcall
lahf
out
xlat
test
push
or
mov
je
jne
dec
ret
xchg
push
or
popa
aas
pop
or
test
jbe
or
add
pop
sbbb
daa
adc
das
mov
fimuls
mov
mov
cld
jbe
pusha
jl
call
xchg
arpl
push
out
jne
or
mull
out
pushw
inc
lock
aaa
or
aas
and
cmp
in
lahf
fs
or
pop
scas
add
pop
pusha
sub
push
mov
aaa
faddl
and
pop
adc
std
gs
jae
mov
outsb
add
hlt
mov
add
adc
les
push
pop
std
cli
sub
xlat
xor
jo
scas
inc
pop
xchg
out
pop
mov
sbb
dec
dec
mov
mov
les
aaa
jp
cld
icebp
jnp
outsb
popf
or
addr16
ja
or
add
and
xorl
lock
in
push
xchg
sub
mov
mov
xor
cmpb
or
push
cs
add
aaa
push
lock
lret
cmp
sti
in
inc
xor
into
gs
das
push
push
aad
cmp
mov
lahf
sbb
in
cli
cmpsb
adc
imull
add
push
jo
ret
les
sti
addr16
stc
add
fists
add
dec
sbb
in
repnz
movsl
pop
lods
jmp
lods
gs
arpl
adc
push
mov
clc
cmc
je
js
in
jo
pop
cmc
lock
and
std
dec
cld
add
cmp
push
pusha
repnz
cmp
add
call
sub
mov
mov
aam
mov
outsl
xorl
fidivrl
pop
jg
hlt
clc
pop
xor
fisubrl
or
clc
mov
inc
sbb
daa
or
fidivrs
sbb
jmp
popa
jg
adc
pop
sbb
test
push
jmp
mov
lret
repnz
leave
pop
add
sbb
adc
cs
inc
ret
fwait
and
mov
mov
lret
iret
dec
dec
not
dec
or
pop
fwait
das
sbb
sub
jecxz
mov
shrb
xorb
inc
adc
pusha
nop
pop
pop
cmp
inc
add
mov
jb
in
sub
cmp
pop
gs
loopne
lock
adc
mov
out
pop
or
sbb
fldenv
xor
lret
pop
xlat
mov
pop
xchg
and
sub
mov
cs
stc
push
subb
cmpsb
cmpsb
sbb
adc
mov
dec
sti
sti
movsb
inc
aam
fcmovnu
idivl
push
ljmp
mov
jo
pop
dec
cmp
pop
push
cmp
jb
dec
lods
stc
inc
sbb
add
xchg
into
cmpsl
call
shl
adc
nop
sbb
mov
movsb
or
out
imul
clc
sub
push
add
sbb
or
adc
jb
std
in
sub
or
sbb
inc
aaa
mov
inc
pop
cmpsb
fsubs
jecxz
ljmp
scas
in
sbb
push
jne
inc
push
adc
movsb
cld
rorl
fnsave
pcmpgtw
mov
and
daa
cltd
add
in
out
xor
push
std
loop
or
xor
mov
inc
or
cmp
ljmp
sbb
in
arpl
in
cmp
add
pop
repnz
fidivs
xchg
mov
jb
dec
out
jecxz
sti
xchg
in
shlb
push
xor
movsb
lret
xlat
or
jno
dec
in
in
pop
jl
cmp
ljmp
pushf
add
lods
aad
popa
mov
pop
jmp
sbb
adc
call
ja
sbbb
test
out
adc
in
fldl
jmp
outsl
cmc
hlt
fistl
dec
push
arpl
and
loop
inc
shlb
bswap
lock
loope
dec
scas
fwait
popl
cwtl
xor
add
fs
mov
push
mov
cmpsl
rcrl
jmp
stos
mov
inc
cmpsb
xlat
xchg
cmp
adc
xor
pusha
pop
stos
arpl
push
dec
cmpsl
jecxz
sbb
push
and
jmp
sti
add
add
lock
lock
sti
aam
arpl
mov
hlt
sbb
xor
lcall
mov
rolb
mov
sbb
fwait
in
sub
sbb
ljmp
std
in
cltd
pop
pop
dec
pop
push
inc
imulb
dec
out
or
iret
dec
and
xlat
dec
fisttpl
roll
add
mov
hlt
popl
in
xor
out
add
adc
mov
fidivs
push
repnz
pusha
out
test
and
bound
repnz
fldl
ss
mov
repnz
pop
sub
andl
fwait
or
or
pop
add
mov
ret
out
leave
loop
and
out
xor
imul
jmp
pop
mov
loopne
data16
add
and
les
sbb
pop
dec
andb
lods
aam
push
sub
add
les
pop
sbb
dec
out
cmp
fiadds
ljmp
xor
mov
add
mov
pop
xor
push
es
dec
inc
or
jmp
and
lcall
loop
int
inc
popa
sti
mov
push
jb
and
adc
fs
aam
jo
xor
xor
shll
sub
pop
cmp
mov
lods
pushf
push
jno,pn
ss
test
andb
repz
cmp
gs
out
inc
cmp
pop
fucom
shl
add
cmc
xchg
repz
jns
iret
dec
pop
sub
repz
jo
xchg
fldenv
ficompl
jge
jl
clc
and
hlt
jmp
scas
mov
rolb
ret
xchg
jl
push
shrl
leave
pop
in
xchg
jle
loop
or
pusha
pop
cmpsl
push
je
or
xlat
cmp
add
or
and
mov
add
dec
popa
into
fldenv
xchg
adc
mov
in
push
stos
bswap
testl
sbb
xor
aaa
popa
sbb
dec
cmp
or
lcall
add
xor
mov
cmp
icebp
fisttpll
ss
mov
pop
rol
and
hlt
or
ss
or
shrl
mov
add
push
and
cmp
mov
lret
and
scas
rol
loop
imul
ret
sbb
mov
clc
jp
pop
sub
dec
lea
dec
pop
in
repz
sub
mov
dec
push
sbb
ja
push
pop
insb
in
add
xchg
push
push
mov
mov
jge
movl
popl
repz
pop
add
outsl
pop
negl
mov
sub
aaa
xor
daa
insl
cltd
loopne
or
fadds
out
jecxz
sti
rcrb
mov
sub
push
push
incl
pop
mov
arpl
pop
add
inc
dec
aam
push
fs
mov
dec
out
and
cli
arpl
push
imul
add
push
dec
punpckhdq
xchg
add
mov
data16
adc
ds
lahf
or
icebp
clc
pop
sbb
push
sbb
pushf
dec
gs
jno
xor
test
inc
inc
sbb
sti
mov
and
sbbb
and
push
jmp
and
pop
fisttps
xor
std
inc
dec
sti
xor
int3
flds
sbb
adc
sbb
xor
lahf
cmp
in
andb
and
push
mov
cli
pop
mov
negb
inc
pop
pop
std
repz
cmp
jbe
rorb
mov
xor
cld
sub
loop
gs
cltd
mov
jg
mov
mov
mov
push
jmp
mov
js
and
dec
fcompl
sbb
out
shr
in
sarb
add
imul
test
outsl
jecxz
ss
jnp
adc
mov
dec
xchg
sbb
addr16
outsl
mov
psllq
fistpl
sbb
adcb
or
xchg
add
cld
decb
fs
push
stos
loop
sbb
mov
loop
shlb
adc
xor
ss
and
addr16
iret
jb
outsb
mov
movsl
fnstsw
or
sub
pop
sbb
sbb
pop
sub
mov
scas
sbb
mov
daa
ss
dec
imul
inc
adc
cmp
fcmovnu
rcll
and
lods
icebp
mov
mov
arpl
sbb
xchg
imulb
test
pop
jmp
add
push
sti
pop
mov
sub
dec
out
jl
sbb
in
cmp
adc
popa
imul
test
mov
rcll
sbb
add
xchg
out
fsubs
jp
mov
sbb
bound
jle
or
popf
out
call
or
fcmovnbe
cmp
push
sub
test
fidivl
xchg
lret
add
and
inc
mov
push
or
idivl
fsubl
mov
jno
dec
fld1
inc
pop
pop
lret
push
addr16
pop
sahf
shlb
push
jecxz
pop
sbbb
dec
in
cmp
inc
sbbl
or
lods
mov
sbb
cmp
fstpt
add
lea
jne
xor
inc
mov
rcrl
mov
or
sbb
lret
xor
sbb
and
add
pop
ds
fsubrl
scas
clc
add
mov
fstp
mov
dec
rorl
jle
and
in
push
jle
or
mov
pop
flds
mov
jne
sbb
shl
lock
adc
adc
arpl
pop
stos
pop
and
test
add
cmpsb
int3
lret
jle
mov
xor
inc
dec
scas
mov
mov
pop
jnp
mov
xchg
or
cmp
imul
mov
and
xor
push
loope
jle
in
mov
add
fwait
adc
xchg
inc
sub
adc
lea
push
inc
mov
in
or
jecxz
cld
cwtl
xor
daa
jp
int3
mov
outsb
xor
inc
ds
ret
aas
sbb
sbbl
pop
and
sbb
xor
inc
pop
rcr
pop
fwait
adc
sbb
movsl
push
push
loope
push
mov
adc
int3
out
mov
aad
ret
or
mov
pop
call
les
pusha
xchg
dec
popa
scas
scas
out
out
xor
sbb
imul
cmp
sub
sub
les
out
adc
cmp
hlt
repz
popa
jle
mov
ja
scas
jp
push
lock
or
cmp
enter
inc
sbb
in
pop
loope
hlt
stos
cvtps2pd
iret
or
hlt
push
fisttps
xchg
mov
fdiv
jge
std
ja
cmp
or
or
mov
sub
jne
push
mov
ljmp
in
aam
cmp
ds
test
hlt
pop
and
adc
imul
add
jno
sti
and
pop
orl
mov
or
andl
or
mov
lea
add
and
inc
outsb
into
pusha
sub
cmp
pop
cmp
insb
sub
cmp
or
lahf
loop
sub
mov
std
rcll
mov
clc
xchg
inc
fxch
enter
push
sub
das
movsb
or
rorb
pusha
mov
loope
and
clc
or
pop
add
repz
imul
or
fistl
pop
mov
repz
xor
fstps
jae
out
push
repz
incb
mov
sbb
add
cmpsb
add
xchg
or
or
add
out
adc
out
call
shl
push
or
cmp
sub
pop
xor
stos
arpl
sub
cmp
inc
mov
enter
out
test
cmp
cltd
mov
or
mov
xchg
sub
push
lahf
loope
testl
push
mov
lret
lahf
sub
lock
lahf
add
scas
ficompl
or
mov
frstor
mov
dec
cli
std
incb
fstpl
int
or
testl
loope
jecxz
jmp
in
mov
xor
cs
and
sub
adc
lods
pop
loopne
aas
ret
cmc
cli
add
add
mov
cmp
pusha
call
fdivs
sbb
ret
sbb
std
pop
inc
pop
pop
mov
sub
lods
sub
int
pop
inc
lock
adc
add
cmpsl
stos
mov
popf
and
pop
or
dec
fisttpll
in
mov
mov
jle
sbb
out
mov
cld
gs
gs
in
cmp
ret
out
push
mov
sbb
clc
add
sarl
sbb
xor
mov
xchg
mov
add
and
cli
data16
pushl
loop
jle
and
testl
pusha
ficomps
sub
scas
or
cmpsl
sbb
sub
fcoms
pushf
mov
lcall
mov
fbld
sub
mov
and
push
xor
cmp
lock
lret
push
mov
jnp
jl
sbb
mov
popa
sub
or
jbe
fwait
insb
movsb
pop
lock
cmpsb
in
scas
hlt
mov
mov
xchg
gs
pushf
pop
outsl
repnz
mov
push
imul
dec
cmp
lods
add
daa
cld
fsubrs
outsb
push
bnd
push
or
das
xor
push
and
xor
outsl
bound
clc
movsb
out
neg
hlt
push
add
or
and
lret
xor
cmc
inc
cli
sbb
lock
add
mov
add
mov
es
std
ja
xchg
test
add
jmp
jns
fdivrl
push
jp
sbb
dec
cmc
leave
jns
sub
or
and
cmp
mov
push
sub
ror
xchg
and
out
out
popf
orb
out
or
testl
dec
sub
test
pop
das
lcall
push
ficoms
mov
mov
fistpll
push
and
mov
xor
cmp
push
aad
inc
jo
lahf
xchg
or
xor
out
jnp
popa
lods
xlat
pop
push
repnz
test
movsb
fmuls
mov
sti
sbb
push
cwtl
and
orl
pop
jae
push
sbb
dec
xor
inc
xchg
cmp
sbb
fwait
inc
sub
iret
stos
outsb
mov
adc
add
bound
hlt
mov
aam
sub
push
push
aam
lods
lock
and
insb
push
or
scas
pop
push
addr16
inc
fiaddl
rcrl
arpl
movsb
aad
sbb
or
pop
inc
les
dec
int
sbb
sbb
add
xor
push
or
or
cmp
std
negb
ja
sbb
sub
mov
sbb
test
lsl
xchg
mov
out
fwait
icebp
or
cltd
sbb
cli
xchg
icebp
rcl
lods
mov
push
or
push
jbe
ss
and
aaa
add
push
es
addl
pop
sbb
incb
mov
sbb
mov
pushf
xchg
ror
fwait
adc
scas
push
jae
xor
pop
sbb
push
test
cmc
push
inc
mov
jmp
roll
xor
int3
negb
inc
test
ss
repnz
outsb
add
test
and
mov
lahf
mov
int
mov
sbb
adc
push
add
xor
sahf
sub
adc
ja
scas
mov
inc
stc
lods
or
sub
stos
daa
rcr
lret
xchg
inc
pop
sub
xchg
push
icebp
jne
adc
push
jmp
lret
aam
mov
mov
scas
bound
jl
adc
lock
repnz
rcr
cmp
cmp
stc
mov
inc
push
adc
dec
pop
pop
xor
dec
mov
or
adc
or
add
adc
jnp
jne
or
hlt
roll
fwait
push
mov
mov
cwtl
inc
jne
lret
mov
out
ret
xchg
sub
adc
insl
push
adc
std
sub
push
pusha
jge
or
add
or
dec
cmp
jg
push
push
adc
int3
ljmp
mov
cmpsl
jo
aam
xor
roll
xor
cwtl
cmp
lods
cmp
loopne
cmpsl
int
mov
rclb
add
or
fnstenv
lods
dec
hlt
outsb
int
addr16
inc
shlb
jg
jns
pop
and
mov
test
stc
out
fnstcw
mov
mov
or
pop
ficompl
add
sbb
xorb
es
addr16
out
into
das
out
push
lahf
xor
and
pop
sbb
ljmp
repnz
sarb
and
adc
out
add
pop
jb
shll
es
stos
add
out
or
cli
int3
sub
dec
pop
inc
cmpsl
or
sarb
fs
fisttpll
mov
push
cmpsl
jae
jae
inc
or
push
mov
movsl
mov
lods
bound
mov
fs
mov
rclb
dec
std
push
addl
or
shll
sarb
arpl
sbb
cmp
or
dec
xor
icebp
clc
push
dec
cmc
dec
in
in
lret
bound
pop
pop
mov
sysexit
xchg
insl
and
or
mov
and
mov
sub
mov
scas
add
jecxz
loopne
movsl
pop
movsb
sbb
lahf
ficoms
pop
movsl
push
mov
xchg
push
rorl
push
add
adc
repz
inc
push
fcmovnu
out
sub
cmpsl
jne
out
xchg
lcall
mov
pop
movsb
push
add
adc
mov
arpl
dec
mov
mov
addl
out
push
inc
push
jecxz
cmc
cmp
adc
mov
pop
pop
dec
pop
stc
test
sti
push
nop
repz
arpl
sbb
scas
cmp
lret
ss
loop
js
stc
fstpt
mov
jns
sti
jb
dec
mov
and
mov
into
xchg
sub
das
orb
mov
and
scas
lahf
outsb
add
repz
cmc
ret
adcb
jge
gs
xchg
sub
mov
cmp
mov
jg
dec
sbb
cmp
xchg
push
jp
xor
xor
fstpl
cmp
sub
jle
data16
xor
xlat
cmp
sti
movsb
ljmp
sub
sbb
mov
cwtl
cs
in
or
mov
es
js
jno
cld
sbb
sub
sbb
adc
and
add
int3
mov
sub
sub
sub
sbb
rorb
add
imul
imul
stos
out
sbb
shrl
in
fmulp
es
mov
loope
ljmp
fucomip
lds
mov
out
in
or
es
and
data16
lock
adc
or
cmp
insb
push
add
int
add
loop
ljmp
dec
sub
mov
out
cmp
aas
dec
lods
push
and
add
mov
add
pop
clc
sti
push
jmp
mov
jecxz
push
mov
adc
out
or
rorl
dec
rol
jb
xchg
pop
lret
inc
std
mov
inc
scas
or
insl
int
pushf
je
inc
outsb
and
push
repz
jl
pushf
orl
pop
out
subb
or
xchg
push
and
and
push
in
inc
push
mov
mov
cltd
sbb
loop
test
lret
and
aaa
inc
mov
xchg
test
cmp
insl
mov
sahf
pop
sahf
daa
ss
pusha
mov
or
movsb
lea
mov
mov
pop
xlat
imul
xor
addr16
push
mov
cmc
in
stos
lret
jo
clc
out
cmp
jne
test
inc
nop
decb
out
xchg
cmc
repz
cmp
rorl
popf
ja
cltd
lret
push
add
adc
ss
ljmp
jb
psllq
int3
jo
push
xor
dec
push
xor
imul
and
push
outsl
cwtl
cmp
aam
add
ljmp
aas
xchg
outsl
add
jbe
imul
mov
jae
cmc
xchg
inc
stos
mov
aas
add
testl
int3
cli
sarl
sbb
push
mov
mov
push
ret
rclb
mov
cmpsl
pop
pop
and
scas
scas
cld
cmp
xor
shll
daa
lds
fcmovb
add
mov
pop
or
pop
ja
xor
push
cmp
push
pop
in
lcall
xor
pop
inc
pop
push
pop
std
xor
sub
fnstenv
pop
out
loope
std
dec
inc
fdiv
dec
daa
mov
jae
test
jo
and
or
jbe
subb
arpl
mov
arpl
push
repz
fnclex
cmp
dec
and
aaa
inc
mov
aad
dec
sub
mov
adc
xchg
pop
insl
in
sbb
test
mov
daa
mov
jb
cs
inc
sub
sub
sbbl
xor
sub
cmp
jge
lds
std
push
daa
fs
lahf
jbe
sub
jb
or
bound
and
dec
addr16
aas
lods
repz
mov
ja
push
test
out
fldl
jmp
add
xorl
xchg
push
jge
cld
mov
fwait
xor
push
hlt
fwait
xchg
ror
xor
repz
int3
push
push
loop
push
cmpsb
mov
loop
mull
sub
stos
psubd
out
loop
fiaddl
pop
es
xchg
fsubrl
push
lock
dec
pusha
push
mov
xchg
and
xor
adc
or
int
outsl
je
adc
fistpl
call
jne
ror
daa
push
dec
shll
pop
cmp
mov
js
call
xchg
enter
ljmp
jb
sub
or
add
pop
sub
sub
es
adc
sbb
cmpsb
mov
xor
rcrl
ret
inc
mov
sbb
leave
mov
pop
punpckhbw
jo
rcrl
scas
popa
cmpsb
stc
dec
push
test
enter
addr16
jmp
paddusw
out
mov
mov
in
dec
lret
push
fisubl
lds
push
jg
js
mov
dec
mov
mov
or
hlt
push
in
and
add
mov
inc
fidivl
pop
mov
iret
cmpsb
xor
jns
insb
sbb
outsb
xor
xlat
pop
push
push
daa
push
sub
cld
addr16
inc
lods
push
out
ret
sub
push
adc
pop
sarl
in
add
in
mov
sub
or
pop
or
mov
movsb
andl
mov
xor
mov
sbb
pcmpeqd
sub
daa
fldt
pop
aaa
aam
dec
bound
xor
push
push
std
aam
adc
and
loop
sbb
ljmp
mov
push
daa
mulb
cld
gs
test
or
adc
or
stos
ret
xor
lock
ret
adc
scas
xor
test
add
inc
fisubl
jecxz
fwait
lods
in
and
movsb
sub
xor
mov
push
mov
bound
dec
and
lret
mov
cmp
in
rcrb
adcl
mov
jl
mov
or
sub
sti
mov
pop
sbb
fyl2x
push
cltd
or
add
outsl
mov
mov
jmp
frstor
out
ljmp
dec
jle
push
sub
jmp
mov
fnstcw
mov
cltd
sub
lea
mov
lock
lods
ljmp
popf
addr16
mov
sub
imul
aas
dec
jge
and
cmp
fwait
or
pop
dec
js
adc
into
dec
adc
mov
movsb
mov
pushf
into
push
stc
sbb
or
aam
repnz
ret
xor
aam
pop
inc
rcll
xchg
pop
jnp
ljmp
and
fadds
mov
jge
in
pop
fsubr
add
inc
adc
shrb
push
fs
push
pop
fcmovnbe
cli
js
inc
sbb
insb
dec
or
sti
adc
test
fisubl
xchg
clc
out
je
pop
lcall
sub
mov
cltd
dec
jl
adc
imul
shlb
inc
hlt
gs
pop
popa
push
scas
sahf
data16
arpl
stos
inc
push
fiaddl
push
pop
shr
mov
lock
in
test
pop
cmpsb
hlt
sub
popf
mov
or
gs
push
bound
in
popf
jecxz
inc
add
mov
data16
sub
jl
pop
insb
shll
imul
repnz
in
mov
mov
icebp
sbb
cwtl
fsubr
ret
xor
stc
dec
lods
int3
pop
addr16
popl
xchg
clc
out
pusha
mov
push
pusha
loope
mov
js
cmp
dec
add
in
mulb
xor
out
or
enter
jns
shlb
cmpsl
popa
dec
or
mov
outsb
push
add
pop
pop
jns
cmpsb
inc
xor
adc
outsb
scas
negl
jbe
cmp
outsl
jge
push
repz
out
xchg
fsts
pop
jns
dec
in
jbe
sbb
mov
cmc
adc
ds
addl
std
adc
push
adc
sbb
into
iret
mov
ret
fdivrl
xchg
pop
jge
lods
cmp
and
cmp
test
mov
es
loopne
pusha
cmp
imul
pop
and
lret
clc
lods
xchg
xor
jmp
rcl
out
repz
js
mov
ljmp
mov
push
mov
xchg
mov
out
stc
inc
sbb
xor
or
jle
jecxz
xor
cmp
pop
xchg
and
fsubl
cli
sub
or
or
pop
aaa
in
fwait
outsl
loop
ljmp
fcoml
daa
push
push
insl
in
pushf
das
insl
sbb
xchg
mov
cmp
pop
out
or
push
pop
mov
aaa
adc
sub
cmc
fwait
mov
and
loop
mov
popf
scas
mov
fcomip
sub
mov
xchg
cmpsb
in
cmp
data16
test
add
xor
cli
xchg
sahf
pusha
lret
in
movb
sub
xchg
xchg
push
xchg
dec
lea
pop
sbb
icebp
sub
lds
mov
mov
pop
adc
out
lods
and
sbb
pop
pusha
jae
adc
and
lods
jmp
and
pushf
push
clc
nop
cli
dec
cmp
hlt
sbb
sbb
adc
aaa
jle
adc
push
movsb
pop
subl
icebp
ficoml
aad
or
adc
push
rcrl
cmp
add
cmpsb
in
scas
fcoml
or
insb
mov
xchg
xor
pop
arpl
cmpsl
jmp
loope
pop
pusha
inc
lods
push
dec
aad
stos
cmp
dec
or
shl
clc
inc
fs
in
and
or
jg
in
lret
jmp
mov
int
mov
loopne
lds
and
jl
loop
scas
pop
sahf
sbb
pop
lods
popf
xor
jne
jmp
xor
hlt
test
pusha
sbb
inc
push
fcoml
std
dec
and
je
jo
mov
mov
ret
pmaxsw
aaa
add
inc
aad
adc
cmc
dec
stos
cmpsb
orl
add
mov
iret
lock
sbb
test
ret
push
in
pushf
cmp
mov
mov
or
loopne
push
repnz
mov
ret
cmp
cmpl
jbe
mov
mov
hlt
inc
fisttps
aad
inc
push
push
xor
push
pop
adc
push
add
jg
inc
xchg
mov
jl
add
xor
out
jnp
pop
push
loope
enter
fmull
out
gs
xchg
les
aad
in
pop
lret
jge
lahf
in
ss
js
push
adc
or
mov
add
loop
cs
jecxz
mov
add
jg
sti
push
sub
pop
mov
es
lcall
add
jns
in
cmpsl
adc
or
and
mov
mov
mov
mov
fstpl
out
adc
cld
sub
loopne
shr
or
push
mov
stc
jp
sbb
or
mov
add
dec
sbb
shrb
jmp
cld
xchg
pop
xor
movl
push
aam
rol
sub
push
andl
xchg
cmpl
mov
dec
lds
imul
out
mov
std
add
cmp
out
daa
clc
push
out
sbb
adc
nop
roll
inc
push
cmc
popa
pop
inc
stos
cmp
sbb
sbb
call
fs
pop
ja
xchg
dec
outsb
pop
mov
popf
mov
inc
add
xor
arpl
js
outsb
and
testb
push
jmp
lods
iret
repz
ret
mov
fdiv
aad
dec
inc
ljmp
fisubl
shlb
jno
and
mull
sub
pop
popa
pop
jne
cmp
and
stos
shrl
gs
scas
popf
sbb
imull
sbb
out
xchg
vminsd
dec
or
mov
sub
dec
mov
ds
xor
sbb
xor
push
popa
out
mov
jae
dec
out
cmp
es
fwait
hlt
cmp
shlb
loopne
mov
shrl
mov
sbb
dec
or
data16
push
ficoms
in
mov
cltd
cmpsl
pop
hlt
cs
stc
and
fidivs
test
shrl
imul
scas
pushf
or
scas
sbb
xchg
gs
sbb
fs
scas
aaa
push
popf
dec
push
mov
jge
cli
fistl
and
aaa
in
daa
sbb
pushf
inc
loopne
or
cmp
jb
add
pushf
in
in
cmp
xor
xor
in
or
sbb
gs
sub
add
jecxz
in
adc
imul
repz
and
or
popf
aas
pop
test
pop
pop
pop
aad
mov
stos
je
mov
sbb
lods
jns
xor
sub
lods
ret
hlt
jle
in
imul
push
push
ss
adc
in
or
dec
mov
cmp
fldl2e
or
add
push
loop
dec
pop
mov
test
jmpw
pop
mov
out
repz
add
cld
and
and
fmull
pminsw
xor
cld
pop
scas
stc
jb
mov
push
pop
pop
adc
mov
psllw
inc
mov
out
sbb
js
push
jmp
movsl
std
mov
push
lods
xor
dec
sti
aaa
jo
mov
jb
mov
or
jns
cmc
cmp
or
int
sub
dec
mov
ret
mov
mov
jle
mov
pop
popa
shlb
pop
adcb
mov
mov
inc
or
addr16
clc
mov
adc
pop
mov
and
sar
xlat
sub
or
scas
push
cmp
call
xor
pop
push
fimull
in
dec
lret
sbb
sahf
pop
add
add
shlb
sbb
or
rcr
pushf
cmp
lahf
mov
enter
and
and
jne
pop
lock
sti
out
sub
cmc
inc
int3
cmp
mov
call
and
cltd
movsl
fisttpl
and
sbb
fadds
push
test
pop
and
daa
xor
dec
pop
insl
add
rcr
lods
or
sbb
iret
leave
lcall
lods
jecxz
popa
jnp
daa
pusha
jmp
cmc
sbb
sbb
adc
das
nop
inc
mov
cwtl
and
adc
out
loopne
jp
lods
shrb
sahf
cld
and
mov
out
inc
loope
inc
xchg
pop
or
negl
lods
xlat
jmp
test
test
fisubs
fadds
call
jo
add
test
repz
pushf
shl
inc
les
mov
or
divps
std
loop
add
daa
js
out
push
mov
mov
or
movsb
les
cmpsb
and
xlat
xor
mov
repz
push
cmp
es
jl
stos
mov
mov
out
cs
mov
adc
add
test
lock
ljmp
dec
push
lret
xlat
push
jnp
or
push
ss
mov
cmpsb
xor
cmpsl
pop
arpl
fiadds
arpl
and
testl
jo
in
mov
sbb
jno
inc
adc
add
shrl
jmp
lds
or
push
cwtl
icebp
sbb
call
sbb
pop
std
insl
aad
mov
stos
mov
mov
repz
fildll
xor
sbb
jae
xor
sub
test
es
mov
add
cmpsb
pop
inc
cmp
jmp
sbb
lahf
jnp
fcmovu
push
rolb
sbb
les
dec
adc
or
push
hlt
dec
push
ret
fimull
mov
xchg
xor
or
out
mov
imul
imul
leave
jp
xor
in
lret
out
sub
sub
jecxz
jg
push
repnz
insl
sbb
jecxz
and
xor
stos
scas
add
and
sbb
movsb
pusha
xor
and
push
hlt
mov
or
adc
out
add
movsb
sub
stos
popf
xchg
add
inc
and
sarl
mov
jne
sbb
add
push
push
shll
cmp
push
xor
dec
mov
js
add
xor
mov
decb
out
ja
mov
in
inc
mov
out
cmp
ret
adc
cmc
or
test
push
mov
or
outsb
movsb
lock
and
dec
nop
jecxz
out
sti
lcall
xor
pop
pop
scas
and
or
jp
fsubs
dec
pop
pop
and
mov
sub
call
mov
movsb
adc
stos
fstpt
mov
ljmp
je
insl
mov
sub
or
dec
or
add
lock
stc
loopne
xor
loopne
daa
sbb
aas
filds
pop
dec
jecxz
fimull
push
pop
adc
stc
repz
into
mov
adc
test
add
stos
in
enter
repz
xor
cmp
xor
jo
sub
mov
pop
xchg
dec
jmp
adc
pop
out
mov
lock
sbb
fbstp
sub
aaa
sbb
dec
das
dec
fisttps
push
into
in
bound
add
daa
xor
pop
popl
scas
jns
mov
insl
xchg
outsb
or
and
out
dec
xchg
push
fcmovnb
pop
gs
in
mov
sbb
ret
in
sahf
push
shr
cmp
ret
sbb
lea
jl
xor
push
testl
xchg
ftst
into
pop
in
mov
xor
ret
in
add
add
or
out
lods
sbb
inc
sbbl
std
jno
incl
insl
inc
mov
inc
push
dec
sbb
enter
out
dec
ret
pushf
mov
movsl
out
jne
fwait
jno
stos
jae
mov
rclb
xchg
fimull
cmp
shll
add
push
push
push
pop
pop
roll
outsb
lahf
push
mov
dec
fisubrs
insl
xor
jmp
push
dec
cmp
faddp
inc
lods
ja
pushf
dec
sub
cmpsl
sbb
push
lods
sbb
out
push
scas
mov
pop
add
xchg
dec
into
and
ja
xor
dec
scas
sbb
stos
pop
jecxz
and
dec
or
xlat
add
fwait
sub
inc
adc
fists
cli
jno
inc
jp
cmp
icebp
aaa
cmp
adc
imul
clc
dec
dec
mov
stc
xlat
jno
nop
mov
mov
push
adc
add
jae
and
mov
int3
sarl
arpl
sbb
test
push
ret
xor
add
scas
jmp
sbb
pop
aam
or
pusha
sub
outsb
xlat
out
fisubrl
sbb
pop
cltd
cmp
out
add
or
faddl
pop
push
jg
mov
cmp
filds
lods
xlat
dec
inc
cmc
cmc
push
adc
mov
insb
or
adc
cmc
jb
mov
cmp
jge
xor
and
pop
shrl
ror
dec
mov
push
mov
aaa
bound
or
push
sbb
xor
xchg
pusha
xor
xchg
cmp
cmpsl
or
cwtl
out
sub
pushl
aad
lret
cmp
stos
in
push
rcr
and
mov
fwait
mov
outsb
ret
mov
jno
xchg
pop
jg
xor
outsl
mov
fnstcw
scas
push
adc
std
xor
fwait
mov
scas
in
push
jno
mov
outsb
jbe
cmp
and
or
outsb
push
mov
push
add
imul
outsl
pop
mov
sub
gs
fmul
jmp
sbb
outsb
sbb
xlat
test
sub
cltd
repz
ja
test
xchg
adc
mov
or
sahf
jmp
add
add
popf
xor
data16
push
xor
imul
adc
outsb
scas
and
mov
addl
ret
in
inc
lock
lcall
xchg
incl
std
pusha
push
scas
cli
push
outsl
adc
test
jno
in
call
jge
or
push
lds
mov
jmp
divb
add
daa
outsb
lods
arpl
add
imul
fwait
out
repnz
jmp
mov
movsl
sti
push
sbb
jnp
lcall
cmpsb
cltd
sti
or
pop
jbe
into
push
cmp
shlb
scas
shr
cmp
out
das
lea
pop
dec
stos
sbb
aad
lcall
es
in
cmc
es
cmpl
mulb
pop
cmc
in
test
ds
sti
add
ljmp
mov
test
shrl
inc
ds
pop
mov
xor
pop
std
pop
pop
call
push
push
hlt
sbb
adc
fs
mov
inc
mov
jp
xchg
das
mov
aas
ds
jecxz
loopne
xor
rcrb
inc
mov
fwait
aaa
add
mov
out
bound
or
mov
jno
mov
sbb
js
cmpsl
loope
inc
adc
jg
push
into
dec
shlb
lret
sbb
push
sbb
rorl
aas
cmp
and
xchg
mov
ja
xor
sub
add
push
sti
into
sub
cmp
xor
loop
subl
pushf
and
ja
lret
ret
push
imul
pop
fwait
inc
repz
jge
mov
sbb
pop
dec
push
popf
xor
mov
lcall
cmp
repz
and
sub
jecxz
lds
clc
jl
out
push
outsl
sbb
daa
int3
stos
jnp
sbb
adc
mov
scas
add
jle
aam
adc
mov
mov
push
xchg
xor
cmp
ss
loopne
xchg
mov
mov
iret
repnz
add
and
rorl
repz
imul
sbb
jmp
push
insl
fiadds
enter
push
in
mov
push
xchg
sbb
notl
repz
push
jbe
add
mov
into
ss
cs
out
xorl
outsb
sub
push
mov
fs
or
xor
cmp
loope
inc
in
test
xchg
mov
shl
data16
iret
imulb
sarb
hlt
sub
std
pop
dec
incb
shll
les
jmp
sarb
fcompl
push
dec
xor
cmp
dec
cli
aam
ss
icebp
sbb
popa
in
adc
pop
aad
ljmp
jmp
icebp
jge
fdivl
and
scas
add
rolb
fxch
add
or
xchg
test
test
xlat
in
aas
pop
mov
js
stos
cmp
push
outsl
adc
cmpsl
clc
hlt
mov
xor
daa
push
icebp
mov
xor
icebp
or
out
repz
and
and
stos
jmp
pop
rcrb
lds
pop
lahf
dec
mov
xor
lods
mov
sbb
sbb
pop
ja
mov
mov
insb
cltd
cmp
adc
int
xchg
stos
sbbb
adc
call
push
into
div
out
incl
or
mov
test
inc
dec
pop
push
in
pop
push
xchg
inc
daa
sub
movsl
and
sub
in
ret
sub
and
cmp
dec
adc
push
out
outsl
add
xor
pop
adc
aam
sar
scas
adc
imul
mov
inc
out
pop
aad
popa
fs
enter
popf
in
mov
sbb
shll
inc
jg
out
jle
cmp
outsl
data16
js
lahf
adc
xor
and
aas
xor
leave
sub
jmp
stos
lret
outsb
adc
push
stos
add
das
std
es
cld
or
sbb
adc
popw
adc
pushl
fptan
outsb
pavgw
mov
loop
in
dec
sbb
movl
je
sbb
mov
sub
mov
or
lock
xor
adc
outsl
outsb
adc
in
xchg
cld
mov
lods
psrlw
pop
cmp
xor
stos
pop
or
hlt
dec
ret
loopne
shl
and
stc
das
js
xor
or
pop
jecxz
sbb
pop
mul
rol
push
jmp
lahf
lahf
repnz
loope
out
adc
cmc
mov
pop
push
ljmp
mov
mov
ds
add
inc
add
pop
xor
xor
test
pushf
dec
movsl
jae
out
shlb
mov
jecxz
mov
outsl
loopne
orb
shll
leave
jbe
in
inc
push
sbb
mov
mov
repz
cmp
movsb
mov
sbb
inc
adc
jbe
cmp
sbb
repz
sub
add
lock
or
addr16
push
fnstcw
dec
add
popa
sub
mov
jg
outsl
fldl
ja
sahf
push
jl
das
adc
jbe
insb
and
push
push
push
push
push
jecxz
pop
cmp
sub
call
jno
sbb
cs
cmpsb
mov
aaa
lods
shlb
mov
fstpl
bound
pop
add
push
push
std
dec
pop
sbb
notb
dec
stc
add
pop
pop
dec
push
in
cmc
pop
pop
pop
dec
add
stc
es
imul
or
fwait
decb
mov
and
add
ds
push
fsubrs
shlb
bound
adc
mov
inc
dec
fidivrs
xor
cltd
cmpsl
dec
push
jecxz
test
pop
and
xor
pop
or
inc
cmp
out
sub
sbb
fcmovnbe
sbb
push
add
shr
push
mov
pop
xor
xchg
xchg
pop
call
icebp
ret
les
fbld
push
scas
add
in
mov
xor
call
xor
inc
popf
jmp
int
out
jecxz
push
mov
popa
jl
adc
ror
fdivs
cmp
pop
sub
in
cmpsb
repnz
insb
mov
jb
dec
sbb
mov
adc
cmp
dec
ficoms
movsb
add
mov
and
pop
insl
ds
ljmp
xchg
imul
test
jge
call
aaa
cmp
out
popf
mov
pushf
dec
push
jns
je
inc
in
movsb
fsub
iret
in
into
cmp
mov
pop
js
push
ret
xlat
xchg
add
loopne
in
jle
stos
xchg
xchg
pop
aam
adc
cli
repz
push
cmpsb
or
js
xchg
mov
mov
or
mov
fnstenv
and
ljmp
ret
mov
mulb
lret
or
xchg
sbb
mov
or
insl
inc
xor
in
adc
xor
jno
and
sbbb
out
sbb
mov
jne
ficoml
jb
nop
insl
pop
mov
dec
sbb
insl
scas
mov
int3
pop
pop
rcl
je
push
mov
sub
xchg
aaa
sbb
insb
maskmovq
testl
adc
insb
mov
adc
jb
rcll
clc
push
or
mov
test
pop
stos
daa
mov
inc
call
jl
xor
test
pop
push
aas
cmp
incb
negl
mov
sti
lea
out
es
xor
sub
pop
xchg
push
imul
divl
out
shll
lcall
fmull
shll
inc
mov
pop
fdivl
repnz
pop
fildl
add
loope
pop
lock
xor
fdivl
fisttps
sbb
jnp
lret
sub
call
dec
pop
popa
sub
sbb
inc
mov
lods
add
xchg
out
push
push
jns
in
mov
loop
fstpl
or
das
cmc
push
fidivs
adcb
es
inc
pop
popf
add
xor
pop
mov
adc
mov
mov
mov
mov
shlb
xchg
and
mov
adc
add
fcom
adc
push
notb
jle
sub
lock
mov
mov
sbb
aaa
rolb
scas
push
data16
mov
cmc
flds
cmp
inc
adc
xor
insb
jmp
pop
xchg
bound
clc
push
sub
into
mov
cmpsl
in
loop
movsl
rclb
idivl
push
inc
mov
and
mov
out
and
aam
daa
mov
mov
ficoml
or
ljmp
in
les
jle
push
lahf
sti
push
mov
mov
jb
fistps
dec
ret
out
pop
repz
cmpsb
repnz
aam
inc
cli
jb
in
mov
aaa
add
pop
sti
mov
leave
lcall
adc
mov
pop
cmc
mov
in
sub
pop
xor
enter
movsl
add
cmp
push
cld
xchg
insl
daa
aam
jg
leave
jns
mov
sub
subb
jno
cld
pop
lock
inc
sbb
aaa
cmpsb
pop
repnz
jnp
movsb
xchg
les
in
testl
sbb
fwait
out
jge
and
mov
movsb
pop
insb
push
pop
in
ss
cmpsb
fwait
btc
xlat
pop
jb
mov
in
not
adc
into
jbe
sub
dec
popf
repz
sbb
xchg
hlt
outsl
pop
sbb
pop
in
inc
dec
push
mov
out
aam
fptan
jbe
data16
fistpll
js
fimull
mov
dec
fistl
fisubrs
aad
mov
daa
dec
outsl
lods
inc
pop
sub
in
fdivrs
push
fs
es
dec
mov
or
sahf
mov
fimull
push
dec
fwait
ja
call
js
push
cmc
clc
cmp
addr16
stos
imul
fcoms
jne
xor
and
in
das
jge
add
in
sub
cwtl
xlat
jecxz
addr16
dec
push
mov
fcomi
jbe,pt
sbb
imul
ljmp
dec
movsl
cmp
inc
cmp
sub
neg
push
xchg
mov
test
std
pop
cmpsb
jge
jg
loopne
mov
fcoml
jmp
aaa
cmp
and
pop
bound
add
loope
push
push
pop
ss
jp
pop
popa
pop
jns
je
push
in
sbbl
add
fistpll
cmp
pop
mov
ljmp
push
repnz
pop
adc
inc
and
dec
je
pop
jle
orb
in
sub
lds
out
adc
rorb
sub
pop
jge
or
lds
push
in
or
sub
cmpsl
sahf
cmpsb
adc
pop
or
call
lcallw
es
mov
fsubl
aad
mov
shl
out
fiadds
flds
sbb
lret
sti
xor
xorl
loopne
je
das
xchg
fisttps
xor
jge
iret
call
mov
insb
mov
data16
mov
mov
shl
ljmp
testb
stos
pop
jne
mov
jecxz
add
pop
or
mov
imul
jp
add
sahf
repz
pop
stos
jl
sub
arpl
jmp
or
jle
xor
xchg
push
add
std
cltd
jle
jb
mov
ljmp
push
sub
mov
sub
test
dec
sbb
push
rcll
or
adc
adc
xchg
sbb
shlb
icebp
int
sbb
fstl
cmc
mov
dec
ds
popl
mov
movsb
mov
je
xchg
out
add
cmp
insb
test
mov
subb
push
lods
cmpsb
mov
or
enter
call
pop
aas
sbb
ret
out
or
negl
pop
out
stos
add
sbb
stc
sub
and
rcr
adc
not
xchg
jmp
cmp
shr
in
fisttpl
push
jbe
icebp
adc
lret
repz
cmpsl
daa
sbb
sahf
mov
cmc
jecxz
cmp
sar
ljmp
pop
cmp
xchg
pop
repnz
push
pop
dec
xchg
cmc
cmpsb
adc
cltd
inc
in
shll
push
int
test
ret
sub
cmpsb
dec
rcrb
out
arpl
sbb
in
movl
push
mov
call
popa
pop
rcr
ffreep
bound
movsb
sbbb
addr16
in
sbb
neg
aaa
sbb
fnstenv
add
stc
jmp
lahf
shlb
cmp
dec
dec
fdivrl
jo
jecxz
lock
push
add
ret
inc
andl
push
add
loopne
adc
and
jb
add
or
fwait
cmpsb
pusha
outsb
push
pop
push
pop
scas
ljmp
xor
sti
mov
mov
cmp
test
in
jbe
ljmp
mov
movsb
popa
ret
int
sbb
xor
loop
lahf
out
xchg
mov
ret
sub
mov
xchg
gs
scas
testb
and
lea
addb
jo
enter
inc
and
xor
pop
popf
out
xor
loope
cmpsl
imul
jbe
xchg
mov
ljmp
dec
movsl
mov
adc
loop
jecxz
jecxz
arpl
notl
jmp
sti
cltd
pop
push
cs
dec
jae
pop
lahf
out
dec
cmp
mov
or
in
shl
sti
jno
shrl
add
loopne
and
xlat
movsl
add
jne
outsl
mov
out
aas
lcall
xchg
enter
clc
dec
in
shr
sbb
jbe
stc
and
out
xor
push
insb
mov
pusha
sahf
and
jmp
test
push
shll
mov
sbb
psrld
add
rolb
int
jge
and
ja
jo
sub
push
push
sub
xchg
out
in
adc
aaa
mov
mov
fiaddl
adcl
sbb
es
jmp
cmp
in
mov
fwait
xor
jb
push
cli
lods
scas
cli
or
xchg
mov
sub
cwtl
pop
dec
loope
rorb
fwait
pop
lea
out
push
xor
cld
jle
sub
push
fs
loop
mov
xor
ss
cltd
dec
adc
loopne
adc
cltd
push
mov
push
cmpsl
daa
sbb
or
or
jo
dec
add
cli
xchg
je
cs
push
into
xchg
mov
jne
jmp
adc
or
jnp
inc
stos
pushl
les
push
mov
arpl
add
fisubrl
add
fld
fs
aam
jecxz
adc
sahf
nop
or
rorb
jns
aas
lods
push
jb
int3
aaa
in
repz
pop
xchg
mov
pop
jmp
mov
cmpsb
fs
xchg
cmp
jns
sub
dec
sub
js
idivl
mov
fnsave
out
scas
jmp
push
pop
sbb
arpl
subl
dec
ljmp
fiadds
xor
out
ljmp
inc
or
loop
daa
and
adc
outsb
les
sbb
mov
mov
pop
mov
subb
cmp
int3
and
jno
push
ljmp
stc
add
cmpsb
mov
mov
je,pn
inc
jbe
ljmp
xorps
and
aaa
cwtl
push
adc
mov
xor
dec
icebp
sti
add
mov
push
dec
jae
push
mov
cmpsb
in
xchg
pop
dec
mov
dec
pop
sahf
pushf
push
fdivl
push
jo
je
sbbl
leave
sub
jge
sbb
sahf
fnstenv
push
add
ret
inc
in
mov
add
inc
aaa
mov
sbbb
mov
cmp
mov
adc
push
ret
xor
sub
push
mov
cmpsb
call
add
sbb
sbb
xchg
pop
lahf
cmp
fildll
cld
lds
pop
sub
call
out
out
setl
cmpl
sub
scas
nop
push
mov
pushf
push
pop
repnz
cmp
int
clc
daa
or
hlt
xchg
xchg
imul
divl
pop
lahf
stc
and
adc
inc
mov
inc
repnz
pop
and
lret
popf
popf
push
pop
ljmp
loop,pt
movsb
call
dec
and
fs
inc
pop
ret
and
loopne
loope
ret
cmpsb
push
orb
std
xlat
mov
imul
mov
push
call
push
and
add
sbb
in
fld1
xchg
sbb
xlat
sar
das
ss
movsl
ret
aas
cli
hlt
js
mov
loope
int
int3
test
mov
jl
push
dec
pop
mov
lcall
mov
jle
adc
mov
out
ss
fdivrp
out
enter
pusha
pop
popa
and
cmpsl
subl
pushf
sbb
pop
cmc
jecxz
xor
mov
addb
add
fdivs
jbe
or
sahf
imul
leave
arpl
arpl
push
adc
test
fistpl
repz
mov
lock
sbb
cmc
sbb
mov
pop
in
je
add
sbb
add
sbb
lcall
add
pop
or
enter
mov
cli
or
xor
adc
clc
mov
rcrw
dec
je
and
hlt
lret
je
in
mov
out
cmp
sbb
in
jp
cmc
jle
mov
es
scas
sbb
push
xchg
mov
add
jb
jmp
sub
adc
push
sub
dec
add
xor
adc
addr16
das
cmp
adc
mov
or
imul
sti
push
sbbl
and
shr
adc
arpl
fstpl
clc
test
jo
add
out
sub
push
fnstenv
fnsave
sub
cmp
movsl
sbb
push
pop
stos
fsubr
movsb
stos
mov
call
jl
aam
push
cs
mov
fidivrs
push
adc
in
mov
sub
pop
lret
out
aas
mov
pop
and
pop
repz
cmpsb
pusha
fdivs
sbb
add
imul
or
test
lods
cmp
mov
lret
add
sub
push
repnz
mov
loop
loopne
inc
fisttpll
lds
cmp
pop
pop
out
das
sbb
test
lock
dec
and
xchg
popa
and
loope
imul
pop
in
push
add
adc
xlat
enter
sub
lock
dec
mov
testl
xlat
das
cmpsb
lods
into
jns
xorb
push
jmp
divb
jnp
mov
fisubrs
ficoms
daa
shlb
lock
in
dec
inc
or
jmp
cli
inc
sbb
repz
fimuls
cs
or
add
push
mov
adc
std
sub
stc
mov
push
or
sub
ds
ret
add
cmp
xor
repnz
mov
push
fprem
mov
add
pop
sbb
and
mov
std
cmpsb
cli
inc
repz
inc
cmp
cmc
push
lcall
adc
cltd
loop
fwait
les
sahf
les
mov
fsub
setbe
mov
add
xchg
decb
fisubrl
frstor
lods
call
icebp
into
fnsave
out
or
push
push
aam
mov
jae
arpl
insb
daa
lods
leave
sub
scas
xlat
imul
bound
fisubrs
mov
lock
nop
repz
dec
mov
jmp
mov
mov
lods
sub
xor
or
dec
out
lcall
adc
iret
xchg
push
add
or
jge
lock
data16
scas
jns
hlt
dec
into
ljmp
dec
xor
or
leave
test
xchg
lcall
repnz
add
sbb
sub
notl
pushf
jmp
popf
push
out
sbb
mov
punpckhdq
mov
repz
fwait
dec
mov
adc
pop
adc
loopne
cmp
stos
or
inc
nop
or
and
push
mov
sub
inc
daa
pop
and
scas
add
mov
fsin
fidivs
mov
adc
xor
fisubrs
cwtl
dec
ds
pop
mov
push
sub
iret
imul
jg
incl
pause
int3
or
out
mov
sub
sahf
xchg
cld
inc
xor
out
pop
cltd
orl
xchg
leave
push
int
imul
ja
or
fistpl
shlb
push
sbb
lods
xchg
loop
jmp
mov
inc
jbe
pop
jae
push
push
xor
enter
add
es
and
shrb
lds
dec
hlt
add
pop
pop
push
add
sbb
test
pop
add
jecxz
mov
cmp
adc
arpl
push
push
xchg
lret
sbb
or
push
daa
imul
push
adc
cmp
sti
int
dec
fimull
jmp
out
rcrb
stos
fimuls
jle
fbstp
dec
sti
cmpl
xor
out
jmp
push
xor
add
cmp
out
lret
xchg
mov
cmp
or
push
aaa
push
divl
inc
es
in
cwtl
adc
idivb
mov
in
pushw
imul
cmc
push
sub
loop
enter
or
push
neg
and
mov
inc
push
std
mov
les
cwtl
adc
inc
dec
mov
cmp
xor
cmp
mov
jp
and
in
out
pop
jno
fildll
sahf
or
es
idivl
sub
xor
movsl
sbb
jecxz
cmpsb
subb
sub
int
xlat
push
stos
movsb
sbb
cmp
div
or
into
or
mov
aam
push
jnp
jle
gs
sub
call
ret
pop
repnz
dec
and
mov
out
push
or
mov
pop
mov
dec
rcrl
repz
leave
xchg
ret
jmp
shr
add
inc
or
enter
pop
not
sub
xor
in
aam
and
pop
cmp
adc
sub
xor
xor
leave
dec
fucomp
sub
dec
adc
insb
mov
vmwrite
mov
sub
xchg
dec
xchg
stc
cmp
rolb
mov
fistpll
mov
loopne
js
fs
pop
and
push
jmp
sub
in
int
incb
es
arpl
loopne
rorl
mov
loope
out
sub
inc
adc
mov
out
xchg
add
rcr
mov
scas
cmc
mov
mov
mov
shlb
mov
ljmp
insl
add
lret
mov
pop
jo
cmp
in
cmp
fwait
imul
outsb
sti
mov
pop
sbb
mov
daa
sub
in
enter
jmp
and
shl
lcall
fucomip
ss
sbb
and
outsl
jg
and
call
xchg
test
aaa
or
xchg
stos
dec
sub
sbb
cli
frstor
icebp
dec
mov
jmp
add
aaa
arpl
test
loopne
or
sub
or
jne
test
push
fistpl
roll
arpl
adc
in
decb
ret
nop
lahf
push
iret
cmp
bound
jle
addr16
or
shr
popa
repz
mov
pop
xor
cmp
jno
sbb
push
jnp,pn
mov
movsb
cmpsb
lock
adc
pop
sub
aas
ror
sti
pop
xor
push
negl
test
out
xor
mov
dec
in
mov
and
xchg
loopne
jp
xor
pop
inc
push
orl
daa
gs
ljmp
and
fstl
pusha
adc
shrl
push
add
data16
mov
das
add
lods
out
dec
xchg
sbb
push
incl
andb
movsb
inc
jbe
push
add
jmp
addr16
out
add
stc
jmp
les
into
push
insb
mov
repz
sub
out
push
dec
pushf
into
sarl
cld
pop
call
outsl
cwtl
jnp
jno
fisubl
push
sub
ljmp
call
ror
or
ret
lock
sbb
jmp
out
lock
sbb
ret
adc
push
jl
loop
cmp
push
cs
xchg
jbe
mov
xchg
outsl
repnz
jg
or
and
int
adc
lret
jns
xor
sarb
int
int3
jno
and
stc
pop
push
in
mov
cs
je,pt
mov
xor
rcll
shlb
icebp
lret
movsl
jmp
pop
xor
jp
clc
lea
outsl
sti
inc
loopne
in
push
roll
bndldx
fnsave
decb
mov
fistpl
mov
mov
pop
pushl
jmp
imul
lret
es
xchg
pusha
jae
movsl
jecxz
xor
sub
jmp
es
dec
pop
pop
ds
and
icebp
xchg
sbb
fldl
push
dec
mov
cmc
xlat
or
push
cs
insb
popa
pusha
cmpsb
ret
pop
out
repz
xlat
push
sbb
ss
call
repnz
or
sbb
xor
add
popw
push
and
push
repz
sbb
ljmp
ja
divl
inc
xchg
push
mov
cmc
iret
es
fwait
jmp
sbb
dec
mov
sub
jae
cwtl
enter
adc
mov
push
adc
lcall
xlat
adc
sahf
push
push
xchg
push
lea
mov
mov
mov
and
int
hlt
clc
fdivrl
cld
xlat
imul
push
aam
aas
in
outsl
or
imul
fs
call
jbe
dec
sbb
out
cmp
add
and
pop
fxch
inc
or
lods
gs
sbb
xor
and
pop
adc
fwait
cmpsl
pop
decl
jnp
imul
pop
inc
mov
mov
int3
xlat
jo
cmpsl
and
push
or
stos
fwait
es
lods
iret
loopne
pop
add
lds
pushf
jmp
fisttps
jmp
inc
in
xorl
insb
in
fbld
mov
adc
repnz
cld
ret
mov
or
hlt
jmp
mov
jbe
rclb
cmp
inc
jg
xchg
mov
nop
add
and
lahf
dec
in
fisubl
cmp
lcall
cli
ret
repz
jle
lcall
inc
bnd
mov
sbb
iret
mov
mov
jae
pop
cmp
mov
push
fwait
rorb
and
fs
xor
mov
mov
push
sti
insl
cmp
pop
push
pop
fmull
mov
shlb
push
les
fs
xor
popf
in
add
jmp
gs
dec
adc
test
adc
ret
mov
mov
sbb
and
push
out
mov
xchg
es
lods
mov
pop
sub
adc
pop
pop
and
shlb
stos
xlat
and
and
mov
scas
mov
pushf
dec
pop
xor
push
sbb
mov
icebp
cmpsl
repz
mov
adc
repnz
leave
in
cmp
cmp
repnz
mov
out
adc
mov
cwtl
fst
les
popa
aas
inc
push
xor
pop
mov
add
fidivs
arpl
flds
fsubp
int
lret
je
and
test
out
pop
lods
sbb
mov
mov
into
jg
jae
es
pop
popa
daa
cmpsl
out
mov
mov
jnp
lea
clc
push
push
enter
mov
xchg
and
mov
pop
jle
std
repz
sub
sbb
mov
push
jecxz
adc
call
adc
mov
pushf
xor
sub
xchg
adc
mov
and
movsl
add
sahf
out
push
and
dec
lock
shlb
sub
cmpl
sub
in
aaa
inc
cmp
jb
sbb
movsl
cli
mov
repnz
push
stos
out
cmpsl
inc
xchg
sub
pop
fildll
std
ret
dec
fcoms
xor
and
cmp
shlb
pop
hlt
jns
sahf
hlt
push
outsl
popa
inc
add
sbb
pop
aaa
push
mov
and
in
gs
adc
xor
std
and
jge
mov
loop
push
aam
data16
pop
es
cs
and
stos
push
popa
scas
sbb
outsb
pop
adc
push
pop
adc
or
out
jp
sti
push
out
push
inc
add
xchg
or
push
shl
xlat
pop
sub
jnp
jmp
sub
push
stc
add
add
inc
je
inc
scas
mov
mov
in
xchg
lods
sbb
test
jnp
aam
xchg
mov
mov
or
stos
and
je
in
xchg
lahf
ljmp
mov
dec
and
ror
shll
pushf
scas
daa
add
pop
cmp
pop
negb
jecxz
dec
xorb
fisttps
jmp
sbb
sbb
negl
les
sti
cmp
addr16
mov
and
mov
inc
out
push
mov
mov
iretw
add
push
test
pop
push
rolb
xlat
sbb
xor
or
xor
jg
sub
in
pop
xor
pop
cmc
inc
out
data16
push
adc
inc
mov
adcl
sbb
enter
fucom
cmovs
adc
pop
ljmp
loope
lcall
cmp
mov
xor
jecxz
push
mov
sbb
push
hlt
arpl
das
loopne
pop
repz
mulb
rcl
out
dec
xor
data16
push
inc
ffreep
arpl
test
xor
sti
data16
adc
push
mov
cmp
rclb
push
and
imul
imul
inc
movsl
jge
dec
push
pop
les
cmc
sub
jle
add
les
ret
pop
push
cmp
cmp
lahf
sub
lcall
xchg
adc
xor
and
stc
pop
clc
mov
or
frstor
sub
notl
xlat
rcr
lods
repnz
sub
loop
and
test
sahf
mov
in
add
int3
cld
xor
mov
mov
mov
outsl
in
sub
orl
pop
daa
sahf
leave
sti
mov
shll
cmpsl
das
adc
pop
adc
xchg
add
mov
sbb
inc
xor
shrl
xlat
ret
insb
jecxz
iret
arpl
adc
mov
add
lds
adc
fucom
and
mov
arpl
sbb
addl
jne
mov
arpl
out
xor
mov
test
popa
idivl
cmp
push
push
sbb
add
sbb
pop
sti
repz
sbb
xchg
sti
adc
jns
xor
popf
xor
xchg
sbb
sub
sub
pop
hlt
sahf
xor
add
adc
mov
add
dec
push
inc
insb
aad
or
mov
cmp
add
in
jecxz
and
pop
jae
das
rep
sarb
cmp
mov
int3
mov
mov
into
or
sub
xor
js
cmp
shrb
lahf
or
mov
or
loope
rcll
popa
pusha
or
mov
mov
jg
adc
out
pop
pop
test
sbb
pusha
fstp
in
push
xchg
cld
mov
xchg
outsl
mov
loop
pop
pop
mov
mov
or
scas
sti
das
xchg
adc
xor
std
jl
and
insl
incb
pop
enter
out
adc
mov
pusha
cmp
or
divb
or
out
rcrb
jge
xor
lret
sbb
jmp
ja
sbb
mov
fsubrl
push
and
hlt
pusha
in
xchg
cmpsl
xor
aam
lcall
lds
sub
xorl
cs
test
aas
rorl
push
jge
lods
lcall
adc
push
xchg
adc
add
sub
mov
xchg
or
and
and
sub
push
hlt
lods
xor
add
pop
and
xor
cmp
ljmp
push
push
pop
jns
cli
xchg
das
hlt
icebp
pop
mov
xchg
push
outsl
sub
mov
xor
sub
lock
and
fbstp
xchg
jp
loopne
add
pop
int
mov
or
daa
ret
test
in
inc
add
add
popa
clc
fimuls
in
daa
pop
jbe
loope
cli
mov
pop
les
imul
sbb
push
nop
add
enter
je
sub
pop
push
and
fistpll
out
dec
repnz
mov
imul
iret
fdivrl
mov
dec
dec
sbb
mov
add
cmp
pop
mov
lods
inc
sub
call
sub
adc
loope
std
rcr
push
adc
fistps
scas
dec
mov
sbb
out
and
loopne
pushf
outsl
mov
or
aas
jb
insl
fst
outsl
mull
push
rcl
cld
cmp
xchg
filds
sbb
rcll
mov
or
cli
xchg
aad
je
push
out
ljmp
arpl
in
push
and
lahf
or
dec
addb
or
int
daa
mov
mov
xchg
or
mov
cmpsb
in
popf
or
andb
mov
loopne
and
pop
dec
jmp
arpl
loope
shll
dec
call
stc
aaa
dec
std
push
loop
das
adc
test
xor
pop
cli
cli
loopne
iret
xor
mov
jns
adc
fcmove
mov
xchg
and
cli
pop
arpl
pop
orl
push
fsts
jl
adc
hlt
lods
or
movq
repnz
dec
adc
in
mov
daa
xor
inc
push
mov
mov
sbb
out
out
outsb
lret
and
rcrl
xchg
push
or
vprotb
idivw
out
mov
cmp
stc
das
loopne
outsl
sahf
fnsaves
aam
xor
fisubl
dec
loop
pop
pushl
xchg
push
mov
fidivs
ljmp
xchg
pop
adcl
arpl
mov
pop
daa
loop
iret
out
push
jbe
hlt
mov
ffree
cmpb
mov
mov
lods
inc
mov
bound
ret
and
fstps
dec
pop
mov
and
in
clc
add
scas
sbb
or
xlat
mov
adc
mov
push
jo
mov
push
ds
in
push
aas
pop
cmp
fisubrl
cwtl
shl
insb
out
fmul
cmp
lods
imul
stos
xorb
mov
sahf
dec
cmc
lods
clc
push
or
xor
or
insl
movsl
call
out
les
stos
adc
xor
sbb
push
jnp
cmp
xlat
jno
pusha
push
push
stc
lods
xchg
sub
clc
insb
cmp
push
loopne
pop
dec
cld
cmp
in
or
or
sub
jecxz
add
cltd
sbb
dec
push
cmp
cmp
out
sub
mov
iret
push
test
push
jecxz
lods
pop
lock
cmc
icebp
xchg
lahf
je
out
adc
or
sub
pop
or
pop
test
outsl
cmp
mov
add
fldenv
sbb
pop
push
sbb
popf
lods
and
jne
jmp
fdivl
sub
mov
and
lahf
mov
pop
sbb
aad
fldenv
pop
out
jmp
fbld
daa
pop
cmpsb
xchg
mov
push
cmp
sbb
mov
lret
jo
pop
jae
sti
stc
fsubrs
sub
int
sbb
or
ljmp
adc
int
adc
movsl
cli
data16
bound
dec
stos
or
cmc
sbb
fwait
cmp
add
mov
mov
push
adc
push
jno
jne
shrb
ficomps
xor
xor
in
mov
and
mov
js
and
push
clc
lcall
jnp
daa
aas
push
mov
sub
lock
pop
cmp
stc
push
mov
cmpsl
and
push
mov
fs
sbb
testl
jnp
movsb
dec
adc
movsb
xchg
scas
jmp
jbe
sub
test
loopne
int3
inc
stos
push
fisubs
cmpsb
push
in
in
popf
test
out
sbb
daa
cmp
mov
mov
pop
mov
into
sub
rorl
sbb
popa
dec
sub
pushl
jo
out
popa
push
bswap
test
das
fsubrp
std
ja
insl
dec
stos
out
lret
orb
mov
add
and
int3
or
pushl
and
imul
mov
fdivl
push
gs
pop
sbb
imul
and
dec
clc
mov
pop
pop
push
mov
and
leave
lock
push
rolb
gs
scas
adc
or
clc
stos
out
in
gs
hlt
or
jp
mov
push
jmp
mov
jnp
movsb
cmp
pop
pop
xor
fsub
jle
xor
push
inc
pop
xor
mov
pop
mov
out
stos
andb
repz
aad
mov
aas
jecxz
int
jne
fisubs
adc
xchg
shrb
sub
in
imul
leave
clc
out
rcrb
fsubs
fmull
aam
fs
js
add
mov
loop
push
pop
sbb
xor
loop
and
dec
cmp
fdivrl
movl
or
aam
out
les
lods
add
sub
mov
mov
das
mov
aas
sub
rorb
mov
and
push
in
aas
cmp
in
xor
and
das
rorl
or
mov
mov
clc
add
mov
sbb
pusha
jno
imul
lods
sub
sub
or
mov
data16
and
sub
or
shl
inc
pushf
add
xchg
dec
jmp
adc
ja
pop
cmpsb
imul
rcrb
fisttpll
pop
lret
icebp
pop
pop
pop
pop
pop
mov
outsb
add
stos
test
outsl
sahf
xchg
or
mov
bound
push
dec
pop
adc
sti
xchg
adc
cmpl
out
mov
aaa
sbbl
xchg
and
aas
xchg
jg
fisubrl
or
in
pop
sti
adc
das
repnz
imul
daa
lods
fstps
sbb
adc
sbb
mov
push
adc
or
xchg
adc
andl
pop
aam
jne
popa
cld
mov
or
test
push
ss
addr16
in
ljmp
pop
mov
enter
shr
test
pop
or
scas
in
jbe
mov
xchg
subl
xor
pop
push
adc
cmp
scas
and
imul
add
and
sbb
mov
cli
insl
push
pushf
jle
stos
loop
in
sarb
or
in
adc
sub
fisttpll
inc
cwtl
push
sub
lods
ja
push
pop
aam
decb
sahf
add
cmc
push
jae
and
jns
sti
and
cmp
ljmp
pushf
loope
sub
aas
sti
sbb
adc
loopne
ljmp
dec
pushf
sub
push
iret
or
adc
and
pop
adc
sti
jle
sbb
cmpsl
dec
jo
mov
insl
add
dec
jg
rcrl
xchg
jmp
test
jbe
fincstp
dec
or
add
pusha
mov
mov
out
cmpsl
repnz
je
imulb
jne
call
in
fwait
cli
repnz
out
pop
inc
pop
je
jbe
sti
mov
push
daa
and
cmpsl
xor
or
lret
sar
div
inc
dec
es
outsb
cmp
sub
jo
or
sub
rorb
aaa
sahf
incl
jl
mov
sbb
popa
lcall
jmp
das
mov
int
inc
inc
sbb
or
push
adcb
sbb
cmpsb
mov
daa
inc
faddl
inc
jg
sahf
jmp
mov
repz
cmp
fdivrl
push
xor
and
xor
int
and
js
enter
push
test
sti
ja
mov
adc
aas
dec
jnp
sbb
add
or
push
outsb
iret
ret
sysenter
inc
ss
cmp
test
jno
lret
cmp
fdivrl
sbb
into
int3
jg
loop
cmp
data16
andb
push
lods
cmpsl
shll
adc
sub
or
clc
xor
fdivrl
xchg
mov
imul
in
fcompl
push
cmp
jb,pt
icebp
xchg
lret
mov
inc
dec
add
push
pusha
or
std
jb
iret
shl
in
stc
ljmp
fcoms
in
iret
and
fisubs
cs
sub
fwait
pop
mov
lods
sub
dec
call
roll
sbb
jae
push
mov
sub
mov
out
inc
in
mov
cmpsb
dec
xor
daa
jp
out
jne
mov
jnp
fs
push
dec
cmp
xor
inc
fiadds
jecxz
hlt
shll
cltd
ret
pop
loop
inc
jle
add
cmpsb
push
out
pop
inc
adc
push
out
pop
sbb
jmp
loope
cwtl
inc
and
dec
adc
mov
mov
xor
lcall
adc
je
stos
lcall
gs
or
in
pop
testl
adc
cmpl
and
inc
rcl
clc
cmpsb
inc
jmp
inc
xor
push
movsl
inc
test
test
dec
lods
pop
ss
pop
sbb
out
push
inc
hlt
out
data16
xor
fistps
mov
xchg
data16
xchg
test
sub
test
lea
adc
xor
andb
fs
loop
ljmp
pop
mov
fisubs
mov
fstpt
inc
xor
cmp
scas
aam
push
mov
outsb
xchg
cld
ret
mov
sarb
adc
sahf
scas
imul
sbb
arpl
dec
incb
test
or
ds
dec
jmp
jns
stos
clc
outsb
jp
flds
rorl
lds
mov
xorb
insb
hlt
jae
and
dec
mov
popa
loope
push
shl
mov
pop
out
push
insl
repnz
ljmp
lahf
pushw
leave
ljmp
imul
adc
aad
out
mov
enter
cli
and
add
sub
bts
lods
add
fdivrl
xor
push
fbstp
adc
iret
cli
pop
loopne
cli
rorl
psubw
cmp
ss
mul
cld
sub
les
push
jmp
psubw
mov
sti
pop
pop
fs
cmp
das
adc
andl
jle
pop
lahf
add
and
push
cmp
add
sbb
enter
imul
std
jecxz
in
pop
xor
gs
cld
xor
or
fwait
adc
add
popf
aad
mov
test
jnp
in
jp
adc
int3
js
and
push
lret
gs
add
dec
repz
inc
mov
scas
das
sbb
mov
out
loope
fdivp
outsl
dec
dec
cmp
add
cld
mov
push
cmp
sarb
repz
mov
add
daa
cld
cli
mov
cmp
add
cs
cmpsl
out
inc
pop
cmp
jl
sti
rcrb
pop
lods
push
imul
ljmp
es
pop
cmp
cli
pop
cmp
imul
push
jl
mov
lods
add
ds
sub
sbb
rolb
mov
daa
repz
and
xorb
lods
pop
cltd
movsb
insl
and
icebp
mov
push
push
daa
int3
push
add
add
es
xchg
sbb
repz
lret
mov
add
in
xor
jae
mov
xchg
hlt
cmp
push
inc
lahf
iret
push
xor
psubusw
ficoml
sahf
std
cmp
or
and
jno
dec
std
add
popa
inc
add
ucomiss
imul
add
pop
test
and
aam
push
out
ss
cmp
sbb
sahf
aas
cmp
cwtl
sbb
lahf
popf
data16
xor
fiaddl
add
or
and
or
fldcw
stos
filds
pop
mov
and
lods
cld
xchg
and
sbb
dec
je
out
popf
stc
fidivl
movsl
loop
sub
and
and
push
pop
orb
lds
pop
pop
jo
test
shrl
sub
jmp
xor
xchg
aad
mov
daa
je
sbb
test
or
imul
mov
add
inc
mov
sub
imull
scas
leave
xor
xchg
jge
dec
insl
cmp
cmp
sbb
mov
cmc
lcall
ds
sti
addb
into
fidivrs
push
stc
pushf
jne
jle
stc
lock
mov
or
jne
pop
scas
xchg
aaa
lods
loop
ret
std
pop
jle
xchg
scas
pop
sti
pop
inc
mov
out
sbb
pop
push
test
jo
cli
cmp
sbb
aaa
jnp
mov
and
repz
inc
pop
jecxz
jno
pop
fdivrp
lods
lds
fsubrs
add
mov
hlt
add
mov
imul
lock
loop
sbb
mov
xchg
sbb
fwait
jbe
lahf
sub
adc
stc
jae
adc
mov
add
adc
mov
mov
test
pusha
in
and
sbb
mov
cmp
push
or
loope
aas
je
mov
repnz
hlt
js
push
jne
in
mov
scas
jecxz
in
out
cmp
std
cmp
sbb
cli
ja
bound
pop
pop
gs
dec
loope
stc
mov
or
push
gs
divl
lds
xor
cmp
jb
hlt
arpl
out
outsb
std
cmpsl
fcmovb
xchg
mov
in
sbb
lock
or
arpl
mov
je
sbb
rcrb
pop
pop
pop
inc
jmp
push
or
cs
fisttpl
push
push
cmp
fcomi
xor
roll
xchg
jmp
mov
clc
aas
lods
xlat
sub
test
loope
ja
lret
dec
adc
jno
mov
es
jmp
out
pushf
pop
add
fistpl
test
clc
arpl
stc
cmc
movsl
js
cmpsl
loope
loop
jecxz
mov
ret
rcll
cmpsl
scas
xor
jge
or
scas
pop
stos
hlt
adc
push
jns
sub
mov
insl
loopne
gs
add
addl
mov
cmp
push
mov
mov
mov
adc
cmp
mov
adc
or
insb
enter
and
ss
push
xor
aas
mov
add
fidivs
jb
ret
xor
sub
add
iret
mov
je
dec
cmp
icebp
inc
loope
repnz
mov
mov
push
mov
sub
popa
inc
dec
leave
lret
add
nopl
sti
out
cmp
flds
insl
xor
loop
fwait
jecxz
fsubr
cmp
dec
cmpsb
push
movsb
rclb
repz
sidtl
xor
pop
out
lods
movsb
dec
push
shr
dec
adc
loopne
mov
repnz
and
in
loope
out
cwtl
stc
push
xchg
pushf
dec
imul
pop
inc
add
jns
or
test
add
icebp
cli
cmp
movl
lret
jbe
addr16
jl
jmp
stos
xor
int
in
mov
scas
ss
pop
or
xchg
enter
iret
inc
push
bound
or
fprem
loop
inc
mov
icebp
and
sarl
cmpsl
out
rclb
or
lods
inc
sbb
mov
or
ljmp
je
sarl
icebp
fidivrl
sub
mov
push
stos
fstpl
jge
js
or
pop
or
daa
dec
jnp
imul
push
mov
pop
rol
adc
inc
out
lea
aad
pusha
jmp
ret
sbb
adc
lds
sub
adc
mov
mov
add
xor
and
or
jle
fists
stos
insl
lock
fistpl
and
or
das
ror
add
cs
pop
and
imul
pop
xor
jo
sub
adc
cmpsb
ret
cmp
or
push
es
cmp
and
add
sbb
jmp
lret
pop
insb
daa
jp
and
lahf
and
fwait
cmp
mov
sbb
int
and
inc
inc
or
mov
jb
lock
pop
nop
cmpl
mov
mov
bound
sub
xor
das
mov
ss
push
lods
fsubrp
sub
adc
ja
cwtl
add
pop
repz
mov
or
or
andb
jo
aam
imul
sbb
enter
mov
pop
and
insb
nop
push
jle
mov
dec
mov
push
jle
and
inc
repnz
insb
inc
adc
sbb
cmc
out
rcr
lods
inc
and
adc
inc
xchg
or
pop
dec
out
fimuls
out
frstor
dec
cmc
cmpsb
or
and
mov
jle
push
cmp
sub
inc
loop
mov
and
bound
loope
inc
lods
ret
dec
iret
inc
pop
popa
xchg
fcomp
dec
inc
sub
push
aam
inc
jmp
cmp
mov
dec
add
out
pop
sti
mov
dec
cmp
jmp
shll
stc
inc
imul
and
xchg
cli
cmp
cld
aad
pop
push
or
dec
je
push
stos
sbb
dec
add
clc
ret
outsb
lds
ja
add
insb
or
sbb
xchg
in
xor
xor
and
out
sbb
test
shl
dec
sbb
mov
stc
jmp
es
cmpsl
mov
mov
cmp
mov
loopne
int3
mov
mov
clc
jp
push
pop
push
mov
test
ja
adc
fstps
out
dec
pop
shll
sub
ljmp
dec
lret
pop
inc
iret
push
int
inc
loopne
jp
repz
inc
in
lods
stos
movsb
out
push
repz
sahf
cmp
jbe
pop
fistpll
mov
aad
scas
lock
sbb
shll
aad
in
and
add
sbb
sub
pop
or
adc
lods
inc
xor
shl
jge
xor
cmpsl
ljmp
mov
push
orb
aad
outsl
imul
scas
cmp
mov
mov
clc
jecxz
fidivl
xor
and
xor
outsl
adc
jb
push
mov
lock
dec
xchg
das
cmp
scas
loopne
and
xchg
push
pop
sbb
adc
lahf
fstpl
jmp
push
rdtsc
jmp
or
jg
lret
ret
push
pop
cmpsl
movsl
addl
popf
add
pop
mov
cmp
add
int3
adc
cmp
mov
jbe
xor
push
fnstcw
ficompl
mov
jo
or
push
das
popf
xor
andl
lock
jg
lcall
in
in
out
popa
fstenv
lods
js
and
push
data16
decb
add
pusha
leave
ja
xchg
add
ret
lcall
gs
shl
add
subl
sub
xor
aad
aad
sub
push
jl
repnz
imul
in
in
add
stos
test
dec
shl
or
or
jg
mov
or
mov
in
into
cli
arpl
out
inc
fwait
lock
adc
test
cltd
dec
inc
jmp
add
sar
and
jl
adc
mov
cmc
int3
es
sbb
fbld
iret
test
rcrb
out
mov
mov
pop
int
jmp
mov
add
fwait
imul
notb
and
dec
sbb
add
mov
push
dec
mov
or
testl
outsl
inc
aad
icebp
xor
dec
fs
test
nop
in
aas
or
faddl
sbb
test
jle
push
inc
push
clc
cli
mov
leave
fiaddl
push
lret
test
jl
add
call
comiss
cwtl
inc
mov
adc
sbbl
xchg
adc
xor
cmp
mov
outsl
xor
add
and
int
shr
push
mov
lock
mov
jb
es
mov
ret
xchg
rolb
or
add
sbb
ret
lahf
or
sbb
add
out
cli
enter
out
lret
inc
sahf
out
jge
loope
daa
dec
or
cmp
sbb
push
xor
push
or
in
mov
aad
jecxz
pop
adc
mov
sahf
mov
dec
mov
dec
sbb
xlat
sbb
pop
inc
inc
notl
stos
jg
aas
sbb
lods
push
repnz
sub
pop
fldcw
sbb
jno
xor
lcall
ss
add
or
sub
scas
enter
mov
sbb
sub
cmc
mov
dec
sub
in
out
xchg
cld
fcom
add
pop
add
add
cmp
jns
arpl
insl
mov
scas
mov
cmp
add
je
adc
fwait
lahf
out
and
cmc
rcl
ljmp
xor
or
sub
mov
lods
add
out
sbb
out
out
hlt
scas
sub
mov
ljmp
int3
mov
adc
xchg
rcr
fwait
dec
lahf
lods
xlat
mov
xchg
sbb
pop
xchg
movsl
adc
es
xchg
ret
jp
mov
dec
push
push
lret
mov
in
xchg
lods
sub
add
sar
mov
fstps
xchg
pop
mov
fistpll
mov
cmc
pushf
out
xchg
xlat
push
xor
mov
cmp
cld
jp
xor
jecxz
loopne
sti
pop
orl
cli
cmp
sbb
std
outsl
nop
rorl
add
jp
popf
mov
add
fstl
dec
loop
push
add
adc
rorb
imul
imul
in
mov
imul
stos
dec
cmc
adc
imul
xchg
mov
lock
les
lcall
or
addr16
mov
xor
mov
add
mov
push
dec
sub
sbbl
push
xchg
xchg
fnstenv
aaa
popf
pop
sbb
push
loope
adc
sub
mov
in
sbb
fs
fs
out
fisubrs
adc
stc
shll
push
pop
sti
in
loope
xchg
and
inc
insl
pop
fwait
mov
aad
insb
sarl
xor
sbb
and
mov
std
dec
jb
into
loope
and
sub
sub
or
dec
adc
dec
mov
repz
outsl
pop
shlb
cmp
xchg
fdivs
in
out
jne
cmpsb
xchg
pushf
jge
loopne
sub
in
fisttpl
mov
mov
aam
adc
daa
enter
hlt
add
mov
sub
mov
not
popf
mov
rorb
hlt
sbb
inc
cmp
sub
xor
dec
fstps
adc
cld
fwait
push
inc
out
cld
cmp
mov
stos
lods
push
dec
jge
scas
pop
fadds
imul
outsl
sbb
push
cmp
cmp
in
cmp
fstpt
or
fsubs
fcmovnu
mov
mov
or
insl
cmp
out
add
int3
fistpll
pop
int
inc
pop
sbb
fsubl
pop
cmpsl
fwait
loopne
add
xchg
pop
call
jb
gs
add
xor
fcoms
xchg
les
ret
out
mov
cmp
fucom
mov
call
push
sbb
dec
mov
xchg
xor
jmp
pop
paddsb
arpl
mov
mov
sbb
push
ret
iret
dec
push
cli
out
popf
add
add
mov
pop
mov
das
adc
loop
mov
callw
push
out
cmc
mov
pop
dec
inc
clc
adc
fwait
in
and
xor
pop
and
add
jne
push
pop
lahf
push
jb
and
and
sarl
shlb
aas
fistpl
adc
lahf
cmp
rcl
adc
cli
in
test
and
aam
aaa
and
scas
xor
pop
mov
push
push
mov
repnz
jge
ja
sti
ret
sub
int
dec
xchg
fimull
or
sbb
inc
sbb
inc
loope
or
dec
inc
ret
aam
insl
xchg
cmpsb
mov
divl
aam
jnp
addr16
outsl
mov
or
movsl
sbb
mov
push
jg
pop
shr
sub
sbb
cmp
adc
dec
cmp
les
xchg
cli
es
sar
jmp
sarl
out
aad
sbb
sub
mov
add
out
mov
rolb
jle
push
mov
add
es
inc
and
loopne
push
xor
mov
lcall
and
sub
fidivrl
pusha
inc
xor
mov
add
in
or
push
pop
outsb
pop
inc
jmp
or
cmp
cli
jae
in
movsb
or
push
iret
enter
jbe
je
in
or
xor
mov
push
xor
fidivs
or
push
loope
mov
loopne
in
add
adc
std
lret
and
lods
mov
mov
ljmp
out
ds
add
xchg
nop
in
xchg
or
nop
and
mov
aas
fwait
mov
jg
sbb
sbb
mov
lret
pop
mov
insb
push
and
out
pop
clc
xchg
and
and
cmc
imul
mov
push
xor
and
andb
imul
cmp
pop
sub
outsb
test
cmp
out
icebp
sub
push
jae
mov
pushfw
lea
sarb
out
enter
adc
mov
clc
in
ficompl
xor
xchg
xor
and
and
adc
mov
pushf
xchg
mov
loopne
ss
sbb
enter
cmp
sti
hlt
out
in
lahf
pop
adc
xchg
add
mov
add
insl
cmp
and
dec
sbb
mov
rol
pop
push
sub
dec
jmp
lods
xor
lds
jb
ss
dec
rclb
adc
push
jl
mov
sub
cmc
testb
sahf
ficompl
pop
sub
out
rcrb
mov
shrl
jle
lods
push
call
sub
popf
xor
lds
bound
lock
cmp
mov
cmp
push
push
inc
sti
fmulp
lahf
loopne
sub
cmp
out
pop
or
push
push
xchg
mov
int
loope
mov
jbe
jb
dec
mov
test
popa
in
pop
in
fidivs
fstpl
into
imul
bound
insb
dec
lcall
inc
sarb
out
adc
pop
fwait
push
sbb
push
dec
jbe
push
or
adc
fsts
push
movsb
mov
cmp
mov
aad
int3
call
inc
movsl
out
mov
sbb
mov
pop
fisubrl
push
mov
adc
mov
test
xchg
aaa
scas
cltd
dec
jl
pop
popa
jl
mov
mov
lea
jle
xchg
mov
mov
loope
inc
iret
jge
inc
mov
mul
lock
icebp
adc
jecxz
sbb
sti
inc
xchg
jge
push
adc
jge
icebp
cltd
stos
out
sahf
shll
mov
mov
addl
fwait
jne
mov
ss
sbb
or
andb
nop
cmp
jecxz
adcl
fsubl
and
lods
and
sahf
push
xlat
push
push
xchg
dec
mov
popf
dec
and
jmp
push
add
xor
ss
adc
sbb
stc
pop
jbe
loope
xor
push
or
testb
dec
xor
scas
mov
lea
xor
sub
lock
push
pusha
pop
cmp
hlt
sub
out
jne
or
push
mov
sahf
sub
and
jo
cmc
fistpll
aad
mov
std
push
cmp
mov
fistpl
loop
pop
cmp
add
jnp
dec
sbb
and
add
out
frstor
pushf
daa
fs
lods
add
in
mov
jb
in
cmp
mov
repz
pop
sbb
sti
mov
in
in
sub
mov
dec
rolb
push
incl
daa
sahf
and
mov
outsl
leave
pop
adc
inc
les
or
cmc
fnsave
cmc
jle
shlb
mov
clc
xor
out
or
adc
fnstenv
call
jecxz
pushf
les
sub
push
jg
pop
das
popf
test
lods
lock
ljmp
xor
adc
jle
outsl
cmc
ljmp
mov
in
fnsave
out
and
repnz
or
add
jmp
mov
hlt
popa
stos
lock
insl
cmpsl
repz
xor
xor
xor
enter
fisubl
push
rcrb
push
push
shld
nop
jnp
pop
xchg
pop
xor
fadds
and
sahf
jg
mov
xchg
mov
dec
loopne
adcb
and
adc
xor
in
add
clc
mov
sbb
inc
adc
pop
cmc
stos
int3
jl
arpl
test
in
push
je
inc
lods
add
cmp
subl
cltd
dec
mull
mov
leave
gs
repz
sbb
jmp
stos
pop
push
sbb
or
xchg
mov
stos
xchg
nop
adc
popf
pop
bound
mov
aas
out
and
pop
mov
inc
inc
cld
arpl
jmp
movsb
mov
gs
pop
fld1
xor
or
sbb
mov
int
int
in
adc
stos
movsb
mov
push
cmp
lahf
fdiv
and
popf
stos
jle
es
xchg
sbb
push
mov
mov
insl
shl
lahf
ret
sbb
pop
push
ret
add
fdivrs
mov
bound
in
adc
mov
jle
jmp
mov
js
adc
pop
lret
and
test
icebp
gs
orb
cmp
sbb
jl
clc
mov
mov
sub
push
xchg
and
mov
out
xchg
or
fdivs
inc
daa
fcmovnbe
mov
cmp
mov
sub
cmp
cmp
rol
loop
mov
adc
cmp
jno
sti
ljmp
sbb
xchg
mov
std
incl
repz
sub
popa
clc
sbb
dec
adcl
add
mov
js
shl
loope,pn
aaa
lcall
add
jge
or
ljmp
jmp
xchg
and
jns
add
call
repz
repz
test
mov
mov
icebp
movsl
lcall
pop
ret
bound
dec
in
das
imul
inc
daa
out
jno
jecxz
imull
add
mov
inc
mov
testb
push
popf
hlt
xor
into
in
or
addr16
and
fs
xchg
mov
dec
addr16
arpl
push
mov
ss
push
add
stc
clc
xor
push
add
mul
mov
jns
mov
fstl
mov
in
stos
xchg
das
fwait
mov
mov
jb
cwtl
movsb
cmp
pop
sub
jmp
into
fucomi
lahf
int3
scas
add
shll
or
jo
and
arpl
xchg
and
fimull
and
mov
int
scas
and
into
cmp
pop
idivl
jo
call
orps
push
dec
sub
push
ror
cmp
push
test
lock
xor
lcall
cmp
dec
lock
arpl
or
das
mov
pop
pusha
jns
sahf
push
and
int
inc
lds
je
jbe
shr
shlb
push
cmpsl
fistpl
daa
jl
jbe
inc
add
dec
or
pop
arpl
lcall
mov
sbb
das
lcall
out
sahf
and
and
cmp
sbb
jbe
xor
adc
xor
or
mov
cmpsb
dec
cmc
popf
andl
mov
arpl
sbb
dec
fwait
xchg
stos
daa
dec
xchg
pop
rcrb
xor
out
mov
push
xor
push
mov
out
sbb
inc
mov
push
pop
iret
or
call
mov
push
popf
arpl
ret
call
inc
out
cmpsb
out
shlb
gs
dec
sbb
mov
xchg
hlt
mov
mov
addr16
in
mov
mov
mov
add
cltd
hlt
in
mov
push
fildll
into
aam
aad
pop
mov
xor
lods
xchg
add
add
inc
subl
cltd
xchg
mov
in
lock
shll
bound
stos
jmp
cmp
bound
imul
stos
inc
push
jns
jecxz
cmp
fldenv
mov
add
pop
js
sub
ljmp
add
ss
cwtl
sbb
int3
jae
mov
arpl
fxch
shl
push
mov
gs
test
call
dec
sub
jbe
andl
pop
dec
in
lahf
scas
dec
gs
std
adc
inc
add
test
pop
lock
int
pushf
add
out
pop
push
mov
fiaddl
sub
out
add
loope
sbb
cmp
or
sti
xchg
or
or
fwait
je
dec
xchg
imul
inc
inc
and
xchg
dec
sbb
pop
jne
cmpsl
mov
dec
mov
scas
dec
add
and
push
lods
test
and
in
sub
dec
jecxz
jmp
adc
fcoml
cld
and
sub
jle
push
les
repz
out
sbb
xchg
push
out
jae
stc
popf
xor
das
fadds
xchg
outsb
sarb
push
lcall
push
inc
pusha
js
or
sar
movntq
out
ret
gs
and
insl
cmp
stc
in
lock
cmpsb
aad
dec
or
push
dec
loopne
insl
inc
mov
neg
or
xor
pop
dec
push
cmp
dec
lock
adc
xchg
mov
nop
mov
mov
xchg
xor
test
xor
push
add
pop
lret
lods
data16
push
and
mov
pop
rol
test
xchg
fst
fcoms
xor
jmp
add
int3
mov
inc
and
imul
jg
stc
add
rorb
mov
cmp
popf
inc
add
movsl
mov
mov
push
je
mov
std
cmc
rcl
aam
xchg
mov
mov
xchg
les
and
sbb
fsubrl
or
add
mov
or
bnd
cmc
cld
rorb
cmpl
pop
stos
push
loop
popf
mov
cli
cmpsb
add
inc
jmp
cmpb
leave
mov
xchg
xor
dec
cmp
sub
or
push
icebp
xlat
ja
cmp
fdivrl
negb
push
icebp
in
add
xor
or
dec
sbb
jb
shrb
fimuls
dec
data16
test
xlat
scas
mov
and
inc
xchg
fidivrs
push
fcomps
popf
arpl
mov
jp
dec
lret
in
cmp
dec
xchg
sub
ret
clc
mov
and
mov
cld
sbb
loop
scas
lret
outsb
push
mov
icebp
jae
mov
pop
pushf
out
mov
outsl
push
push
incl
and
xlat
cmp
insl
push
pop
loop
dec
ja
mov
shl
in
mov
xchg
sbb
adc
int
aam
mov
repz
jecxz
pop
mov
and
out
jle
fs
ds
ja
aad
inc
mov
jo
sarb
testb
pusha
lahf
icebp
sbb
push
incl
in
into
inc
rorw
mov
pop
pop
mov
lea
fistps
xchg
and
jmp
loop
cmp
xor
stos
sub
cmp
pop
sti
sub
out
subb
push
sahf
addb
dec
imul
xor
in
add
lods
mov
dec
xor
dec
ret
push
or
daa
cmp
icebp
clc
jmp
in
fstl
divl
out
sub
or
pop
xor
inc
sbb
lea
mov
mov
stos
pop
pop
xor
or
push
ds
mov
adc
xchg
jecxz
out
push
or
sbb
das
daa
mov
add
dec
push
out
push
cmp
sbb
and
cs
fxch
test
pop
decl
sti
cmpb
cmp
xor
lahf
sti
mov
jmp
cmp
das
aad
sbb
xchg
outsl
and
cs
dec
or
imul
js
pop
mov
pop
sti
std
cmp
scas
dec
call
mov
push
faddl
jl
inc
ljmp
shr
jno
ds
lret
fsubs
test
jge
fwait
bound
xorb
sti
cmp
fisttpl
scas
sub
cmp
addr16
data16
and
out
ret
cmp
bound
push
insb
loope
js
dec
repz
scas
fstps
bnd
mov
das
loopne
xchg
insl
test
in
or
or
ficoms
mov
cmp
pop
hlt
cvtdq2ps
sub
ficoms
lahf
out
lcall
fidivrl
mov
push
fwait
imul
inc
push
in
inc
dec
sahf
lret
and
daa
stos
push
cmc
call
cld
imul
je
push
icebp
sub
out
hlt
test
mov
adc
cmpsb
xor
dec
das
pusha
movb
sub
push
lcall
mov
adc
mov
rorb
mov
or
cli
jecxz
cltd
or
nop
mov
push
mov
out
pusha
imul
push
arpl
xlat
xor
dec
sahf
adc
push
cld
imul
sbb
arpl
xor
movsb
jp
mov
push
test
or
push
in
ficoml
shrb
pop
mov
cli
add
jecxz
add
testb
leave
pop
adc
adc
ljmp
jnp
sub
pop
jbe
xchg
dec
ds
cmpsb
dec
pop
or
mov
js
fdivl
aas
std
adc
sti
inc
push
sub
test
sbb
mov
int3
fwait
inc
or
lret
xlat
addb
lds
lock
or
push
cmp
les
or
std
in
repnz
ss
les
mov
or
sub
adc
inc
in
ss
testb
pop
fnstsw
lret
scas
fdivl
push
in
fdivs
rcl
push
xor
test
ret
sahf
cmp
loopne
dec
imul
std
or
fsubl
mov
imulb
out
add
inc
mov
jne
pop
pop
or
xchg
or
xor
int
out
mov
xor
in
mov
xlat
mov
and
je
cmc
jb
fcompl
jb
mov
daa
ljmp
lret
ret
jg
daa
cs
inc
cmc
shlb
rcrb
jmp
mov
clc
jne
and
xor
int3
mov
sbb
pop
ljmp
jl
pop
sti
fistpl
popf
decl
mov
or
repz
mov
and
jno
add
jl
sub
push
cmp
jns
mov
pop
das
imul
pop
xchg
add
mov
js
push
hlt
inc
lahf
scas
mov
icebp
cmp
pop
jnp
pop
popf
adc
outsl
push
jb
pop
enter
decb
lds
cmc
arpl
cmp
scas
pop
das
xlat
mov
jp
push
mov
sbb
addr16
in
repz
ljmp
cmp
test
xor
xchg
les
cmp
lret
fcmovbe
pop
mov
fstl
xchg
sti
adc
out
in
xchg
pop
push
mov
dec
cmpsb
arpl
cmpb
or
bound
loope
jnp
mov
adc
sarl
movsb
cwtl
xor
ret
xchg
inc
xlat
xchg
inc
shlb
enter
pusha
and
addr16
fwait
pushf
fstpl
lods
sub
test
scas
push
inc
fisttpl
mov
sarb
push
fisubs
lods
stc
inc
add
push
xchg
dec
call
movsb
inc
inc
add
mov
jno
cmpl
push
shrb
cs
fildl
jg
mov
addb
addr16
in
jo
cmp
in
movsb
pop
inc
arpl
cld
das
dec
jo
adc
movsb
cmpsb
inc
cltd
lock
inc
sub
das
push
jne
repz
pop
or
mov
jg
out
push
add
push
daa
dec
cmp
or
push
adcb
lods
loopne
cmp
sbb
data16
and
icebp
adc
mov
testl
and
jmp
jp
imul
pop
mov
adc
or
lds
aad
jne
ret
in
nop
sub
add
and
fildl
fstps
fwait
inc
clc
insb
fsts
das
bound
pop
cs
jge
sbb
and
ret
cmpsb
inc
lock
fisttpl
push
rorl
ljmp
in
das
imul
xlat
inc
pushl
das
push
or
in
sub
jnp
mov
out
scas
xor
adc
jmp
jge
outsb
test
aad
pop
mov
pop
sub
out
repz
push
jl
cmp
cmpsl
dec
cmp
adc
ljmp
jge
jle
fldcw
fwait
popa
sbb
lock
das
mov
loope
nop
cmp
cmp
into
inc
pop
lods
leave
push
cmp
in
jle
dec
aam
stc
stos
repnz
sbb
int
imul
lret
in
int3
data16
push
jnp
mov
jl
in
mov
xor
jb
or
lea
cmp
stos
jns
iret
iret
sbbl
sbb
dec
mov
out
add
fs
notl
cmp
out
subl
jecxz
jg
pop
push
pusha
stos
inc
pop
stos
movsb
cmp
dec
loope
call
out
nop
sbb
jne
pop
stos
cmp
rorl
std
or
movsb
out
loop
ljmp
scas
xor
push
gs
lret
jno
adc
xor
push
xor
arpl
mov
repz
test
inc
xor
dec
call
mov
and
stc
fs
cmp
gs
sbb
call
testl
outsb
or
testl
out
pop
loope,pt
adc
and
ljmp
or
cwtl
lcall
scas
enter
cmp
sbb
int
adc
or
subl
loop
sti
int
out
int3
or
js
shlb
dec
sub
lods
testl
stos
or
out
lock
jmp
clc
cmpsb
repnz
lock
lea
dec
scas
cmp
or
std
out
ret
add
add
sub
roll
negb
cmp
add
sbb
fnstsw
mov
fdivr
fdivrs
jl
adc
scas
fcmovbe
push
call
pop
dec
ret
mov
out
je
pop
dec
mov
jle
push
lahf
cs
pop
and
in
cli
ja
ret
pop
sti
pop
jmp
sub
inc
push
sbb
mov
jbe
push
sbb
push
xor
cmp
into
aam
sbb
pop
cmp
cmp
or
bound
sbbb
ss
jmp
jo
lock
rcrl
std
fstp
mov
sub
pusha
inc
cmp
adc
lret
ljmp
add
cli
push
jb
add
pushf
pusha
pop
lds
xor
push
or
call
jb
cli
movsb
cmp
jae
fcmovnu
push
popa
sti
cmpsl
cmp
testb
sahf
mov
cli
faddl
icebp
pushf
aas
cvtpi2ps
push
xor
shlb
repz
daa
test
push
dec
iret
sub
xlat
push
pop
popa
es
and
push
dec
jmp
mov
pop
shr
adc
lods
push
sbb
and
mov
xor
adc
jmp
mov
jle
lods
adc
xor
jmp
out
xchg
mov
and
sub
out
push
les
dec
daa
lds
movsb
push
xchg
test
and
rolb
arpl
mov
aam
add
dec
out
pop
andl
cmp
dec
dec
lds
jge
push
rclb
add
and
stos
xlat
repnz
jle
aam
scas
cmp
fwait
xor
jne
pop
add
adc
xor
lahf
cmp
adc
andb
test
jg
es
lds
mov
sub
pop
lahf
mov
push
ss
dec
das
ret
mov
shrl
cltd
or
outsl
sbb
pop
dec
data16
or
das
pop
lahf
dec
pop
test
or
shlb
push
and
and
or
xlat
add
loopne
movsb
jo
mov
cmpsl
cld
shl
pop
mov
xchg
stc
push
push
mov
cwtl
incl
xor
cmp
xchg
or
pop
sti
gs
out
subb
xor
xchg
ret
lock
dec
outsb
sbb
dec
cmpsb
outsl
test
iret
xor
and
dec
stc
mov
push
dec
sarl
leave
lret
sub
arpl
fildll
popa
mov
sti
movsl
stos
adc
mov
lods
sbb
xor
adc
rcrb
cmp
dec
cld
arpl
jmp
mov
mov
adc
cmp
loop
cmp
push
fldenv
pop
cmp
jo
pop
jmp
xor
out
addr16
push
pop
decb
inc
notl
xchg
or
lcall
cmp
arpl
mov
int3
sahf
add
pop
jecxz
data16
xchg
int3
add
jo
data16
push
sbb
ss
ss
mov
jecxz
pop
mov
ss
aam
cltd
hlt
leave
out
cmp
pop
lock
mov
dec
fcomps
loop
inc
or
popa
dec
mov
loop
pop
popa
cmp
dec
jb
inc
xlat
imulb
fstps
push
inc
dec
scas
push
repz
in
hlt
call
pop
cmp
sub
loopne
mov
lods
xchg
inc
mov
sbb
data16
stc
enter
loopne
out
or
pop
sub
pop
add
leave
fdivrs
lods
sub
cmpsb
pop
sbb
mov
mov
les
sbb
shr
dec
pop
pop
ds
xlat
sahf
xchg
add
fldcw
mov
adc
loopne
arpl
cmp
lcall
cmp
mov
pop
pop
daa
ss
jbe
adc
mov
mov
sub
mov
fstpl
push
mov
jl
mov
cmp
or
xchg
es
out
cmp
aas
ljmp
subl
jl
call
push
cmp
es
fs
sub
xor
loop
dec
jle
adc
push
lahf
adc
push
cpuid
out
cs
push
in
mov
xchg
push
call
imul
fisubrl
and
les
push
ret
xor
lcall
xor
sub
and
mov
in
xchg
hlt
in
xchg
fisubs
cmp
fs
mov
sub
ljmp
ret
dec
bound
call
lods
addr16
mov
or
hlt
jp
lea
pushf
inc
add
push
cmp
bnd
add
sub
int
aad
mov
data16
or
in
pop
fstp
fisttpl
push
out
mov
jl
mov
adc
shr
pushf
mov
out
popf
popa
add
pop
ljmp
fxch
jge
add
xchg
xchg
callw
add
in
adc
fsub
push
dec
scas
dec
rorb
push
mov
fdivl
fnsetpm(287
subb
or
aad
rol
mov
mov
and
in
in
scas
xor
mov
mov
inc
aaa
hlt
shll
movsl
icebp
in
mov
sub
shrb
sub
mov
nop
cli
cltd
xchg
inc
and
aas
push
sti
fwait
test
into
cmpsl
icebp
lcall
or
add
lods
dec
mov
and
push
mov
test
pop
addr16
aaa
mov
jl
adc
jl
add
scas
mov
push
push
push
pop
cli
arpl
fsubr
pop
mov
push
mov
dec
adc
xlat
ja
test
popa
test
aam
divl
cmp
arpl
cmpsl
nop
jg
xchg
add
pop
aaa
add
ljmp
movb
xor
pop
imul
imul
aad
icebp
pop
pop
test
cli
punpcklbw
sub
mov
repz
cmp
inc
out
lods
add
imul
aas
push
push
daa
js
std
ficomps
cmp
jb
pop
ret
shrl
mov
rcrb
ret
push
jns
dec
in
scas
cmp
cmp
pop
sahf
cmp
int
jmp
cs
loop
iret
outsl
dec
stos
mov
in
mov
imul
or
mov
ds
mov
call
jne
sbb
out
jge
adc
xor
iret
xor
jno
ljmp
adc
je
push
dec
cmpsb
inc
xor
shr
fcmovnu
xchg
enter
dec
add
daa
jb
enter
lds
push
cmp
or
aaa
addr16
pop
adc
in
sub
inc
lock
and
dec
sbb
out
adc
add
xchg
or
imul
sbb
push
rol
sbb
bound
adc
bound
cwtl
jmp
inc
psraw
xchg
cmp
sub
neg
fdivrl
std
popf
adc
inc
sbb
shlb
push
insb
dec
mov
adc
mov
pop
cwtl
jmp
cmp
ja
xchg
mov
sbb
in
jnp
std
inc
add
add
jmp
leave
xor
jl
cld
repnz
iret
pop
xor
mov
and
dec
pop
fadds
or
or
cmc
movsb
jns
movsb
pop
leave
mov
dec
pop
push
or
jno
push
ds
add
adc
push
push
pusha
mov
cmp
dec
test
cld
loopne
adc
loope
mov
mov
pop
lret
sbb
mov
dec
push
mov
fs
hlt
and
fimuls
sbb
leave
out
sbb
sub
cld
pop
test
stos
insl
sub
dec
fnstenv
sti
cmp
lret
cmc
and
cs
adc
or
and
and
dec
pop
aaa
lods
gs
scas
dec
movsl
cwtl
aaa
fisubrl
xor
sahf
bound
rcrl
cwtl
xor
movsl
nop/reserved
in
sbb
fucomip
fcomip
xor
pop
lock
jno
adc
loop
fwait
xor
icebp
or
push
adc
cli
push
aad
mov
jmp
xor
mov
out
ja
iret
jle
dec
cmpsb
xor
lret
mov
pop
ljmp
add
adc
cmpsl
sub
xchg
loopne
jbe
js
bound
sarb
ret
faddl
in
lret
cs
dec
lret
push
decl
pop
lahf
repnz
cli
loopne
cmpsl
rcrb
jbe
mov
dec
push
mov
das
add
sub
cmp
or
ljmp
sub
sbb
lret
idivl
pop
testb
sti
fisttpll
sbb
pop
or
adc
mov
or
dec
ljmp
sti
sbb
xchg
and
fs
add
test
and
js
icebp
or
inc
mov
lock
les
mov
jb
sbb
out
addr16
testb
push
sti
nop
fistpl
lret
sbb
jmp
xor
jmp
pop
sbb
mov
adc
push
add
ljmp
aam
outsb
fisttps
jecxz
push
cmpsb
cmp
cmc
xor
loope
mov
popa
in
xor
add
fstp
fsubrp
pop
sarb
test
mov
hlt
rorl
jle
in
mov
mov
movlps
and
push
rol
cs
cmp
mov
out
sti
test
mov
mov
rclb
imul
xor
rcrb
shll
mov
dec
add
pop
ljmp
xor
aam
iret
shll
cld
enter
mov
out
dec
jns
push
inc
cli
sub
sub
push
pop
arpl
lods
cmp
enter
addr16
fildl
adc
jb
pop
and
push
aad
imul
jnp
sbb
adc
adc
pop
shll
popa
push
out
in
sub
inc
fsubl
mov
call
sarb
jno
and
push
les
mov
inc
mov
loopne
cltd
adc
add
inc
fnstsw
cmpsb
xchg
out
adc
cmpsb
icebp
rorl
or
xchg
cs
dec
jno
sahf
add
cs
sbb
dec
ljmp
out
pop
mov
pop
dec
sbb
shlb
push
push
cmp
jnp
cs
in
jle
insl
call
dec
into
pusha
add
pop
inc
stos
pop
mov
insb
fbstp
cmp
rclb
xchg
mov
inc
sbb
cs
fsubl
xor
pop
pusha
and
fisubrl
push
bound
inc
lock
add
xchg
pop
cmpsl
aam
xchg
mov
dec
loope
hlt
gs
out
or
inc
leave
aaa
test
inc
imul
xor
lods
adc
movsb
cwtl
cmp
or
scas
dec
sbb
repz
jae
arpl
cmp
and
sub
ss
push
fmulp
pop
imulb
xor
mov
movsb
popf
sbb
or
inc
fxch
sbb
inc
sbbl
loopne
mov
fisubl
imul
add
pop
popa
mov
sbb
ret
loop
mov
daa
push
mov
sub
cmc
or
xchg
cmp
push
pusha
dec
mov
adc
mov
and
mov
movsl
mov
mov
sub
and
enter
pop
loop
test
xchg
les
push
pop
cwtl
jb
pop
mov
inc
dec
divl
jmp
test
and
mov
cmpsb
pop
sbb
mov
jno
push
loope
mov
inc
and
loop
adc
xor
cmpsl
xor
ljmp
and
aas
cmp
pop
mov
lret
or
addr16
std
inc
lea
mov
mov
sbb
xor
in
mov
test
mov
ds
fldenv
in
push
mov
adc
and
mov
mov
inc
or
test
lret
add
cmp
inc
xchg
cmpsl
sarl
inc
mov
sbb
inc
iret
push
push
xor
cmpsl
lods
mov
xor
fistps
fsubr
jbe
pushf
mov
clc
sub
lods
sbbb
mov
add
movsl
loop
aas
or
or
or
mov
dec
xor
sbb
movsl
fdivs
test
mov
mov
pusha
repz
ficomps
lahf
mov
sbb
loope
clc
ret
adc
orl
jge
jecxz
stos
jb
xchg
adc
inc
adc
or
ss
mov
cmovo
aaa
in
test
cmpsb
inc
push
jo
inc
cmc
shrb
xor
test
in
hlt
inc
outsb
and
xlat
es
mov
mov
mov
in
add
lea
faddl
mulb
pop
add
out
popa
inc
fdivrs
dec
adc
ja
daa
imull
and
xor
mov
pop
loop
cmp
pop
push
lahf
movsb
push
mov
js
add
fwait
jl
fs
jnp
adc
outsl
addr16
xchg
jecxz
xchg
sti
daa
mov
scas
mov
pushf
div
out
push
adc
add
shlb
out
dec
shrb
cmp
pushf
pop
comiss
and
sbb
pop
xchg
and
jl
jbe
push
popf
jae
lahf
flds
or
loopne
fsubs
adc
and
pop
outsl
cmp
stos
icebp
outsb
pop
repnz
nop
cmp
call
ss
sub
fs
sbb
cld
cmp
sahf
in
adc
sahf
or
jae
shrl
xchg
lods
adc
jl
xor
sbb
ljmp
mov
push
mov
mov
jg
mov
call
outsb
insb
adc
std
pusha
mov
lea
aad
call
xor
dec
jle
into
push
daa
lods
xchg
or
outsb
test
call
xchg
jns
aam
adc
test
mov
jmp
push
cmc
lock
xor
push
adc
sbb
out
adc
setne
or
test
repz
adc
push
das
rcr
jecxz
sub
pop
push
sti
mov
fstps
mov
sub
cmp
rorl
loopne
test
in
fwait
jmp
push
dec
cmp
or
and
jbe
lret
in
mov
ja
mov
cmp
les
ljmp
outsl
repz
sbb
dec
ljmp
aas
popf
in
daa
sbb
adc
rolb
push
mov
push
cmc
pop
cs
mov
fisubs
sti
fdiv
packsswb
add
sahf
rorl
es
xor
inc
repnz
loope
sub
adc
inc
pushf
call
test
add
add
inc
sbb
mov
mov
push
and
in
insl
xor
xchg
xlat
repnz
sub
fadd
pop
push
inc
inc
lret
mov
out
aad
and
out
repz
or
mov
push
and
les
repz
bound
or
leave
into
leave
sti
push
iret
lods
cs
gs
mov
lods
scas
and
cmp
insl
xlat
aad
sbb
stos
mov
mov
sbbl
mov
shll
mov
jmp
sbb
das
adc
or
imul
pop
test
mov
jle
mov
pop
sbb
js
jge
lret
sub
test
into
or
mov
fs
mov
int
push
or
ja
adc
ret
xchg
dec
cwtl
nop
in
dec
push
push
cmpsb
out
loop
les
ret
and
in
lock
and
int
and
push
mov
and
inc
daa
int
xor
lods
or
mov
adc
in
lock
inc
ss
sub
inc
cmp
aam
imul
and
xor
add
mov
xchg
sbb
mov
fcmovnb
push
lret
nop
sbbl
pop
rclb
push
adc
jg
bound
stos
adc
aaa
mov
ss
add
and
sbb
aad
inc
inc
mov
call
das
scas
out
addr16
sbb
add
dec
sub
and
out
jne
lret
and
adc
int
mov
cmp
in
jne
xor
rolb
sbb
ljmp
or
sub
pop
mov
dec
sbb
or
mov
jmp
mov
sbb
xchg
data16
out
ret
stos
jb
cmp
add
es
shll
adc
ror
daa
icebp
ret
adc
mov
lds
jmp
push
out
xor
mov
jbe
in
mov
and
mov
add
es
aaa
mov
xchg
divb
call
psrad
out
sbb
cld
outsb
stc
icebp
jno
xor
pop
ds
dec
mov
les
and
jmp
pop
fsub
stc
ss
sub
hlt
cmp
push
pop
fbld
xlat
sbb
mov
mov
pop
push
std
lret
aaa
cs
or
mov
ret
test
xorb
or
cs
mov
aaa
pop
mov
mov
lods
es
lahf
cmpsb
and
add
mov
jbe
test
mov
icebp
es
dec
aas
and
pushf
lcall
dec
fmuls
in
inc
jae
es
cs
sbb
pop
mov
cld
pop
pop
cs
loopne
xor
ja
nop
cmpsb
sub
pop
jmp
aaa
rcl
loop
popa
cld
mov
or
aaa
push
xchg
mov
rcll
mov
fs
ds
sar
loop
sub
xchg
jle
mov
and
xor
cli
xlat
add
push
sub
mov
mov
out
pop
enter
cs
imul
scas
dec
mov
and
pushl
xor
mov
pop
jae
std
repz
insl
out
pop
dec
pop
cmp
or
mov
into
subl
lret
call
test
pushf
push
and
repz
ret
inc
test
in
lods
pop
lea
insl
imul
push
js
bound
out
pop
mov
jmp
inc
in
adc
mov
stc
push
and
sub
add
cmpsb
sub
dec
mov
sbb
push
std
jb
pop
push
jp
popf
push
notb
sahf
push
jle
xchg
inc
fimuls
clc
push
sbb
add
jno
lcall
adc
xchg
adc
hlt
and
dec
mov
hlt
cmpl
add
or
jg
divl
loop
push
inc
addr16
enter
cmp
mov
and
in
jle
dec
insb
cld
das
cwtl
mov
test
je
aaa
outsl
aad
out
mov
cmp
xchg
dec
pushf
push
mov
in
xor
pop
cmpsb
ds
xchg
xchg
and
in
std
sti
arpl
mov
xor
push
imul
pop
xor
adc
jmp
pop
idivb
out
insl
cmp
xor
mov
dec
fldenv
outsl
xchg
xor
imul
repz
adc
daa
add
mov
push
scas
mov
mov
popf
stc
or
dec
filds
in
adc
or
sub
bound
cmp
or
std
cmp
push
lds
iret
dec
jo
stos
arpl
out
adc
or
dec
or
sub
cmp
push
and
lahf
shrl
dec
sub
ret
cmpb
ret
push
outsb
xor
mov
xor
pop
cltd
sbb
or
imul
mov
pop
add
xchg
push
sub
cltd
cmpsb
cmpsl
mov
aas
inc
mov
xchg
jb
cmpsb
loop
dec
push
xorb
movsb
sub
dec
pop
ffreep
mov
inc
pop
aaa
dec
push
adc
mov
fldl2e
xor
and
inc
jecxz
xor
mov
jge
push
fbld
fnstcw
pop
cs
push
xchg
xor
aad
push
out
faddp
xorb
jne
ret
sub
or
jmp
lret
pop
pop
jp
xchg
or
adc
inc
rorl
dec
cmpsl
icebp
int
sahf
xchg
push
and
incb
pop
lcall
adc
pop
adc
out
sub
mov
cs
push
adc
or
mov
pop
cmp
sub
xadd
and
into
aas
and
add
test
and
jl
dec
fists
mov
mov
xorl
mov
or
mov
je
mov
outsb
sub
in
sub
mov
cmp
decl
ret
mov
jb
mov
pushf
dec
xor
pop
mov
adc
mov
cli
cmp
pop
mov
addr16
push
inc
add
daa
ret
and
inc
pminub
xchg
dec
pop
out
dec
loop
int
xor
mov
and
das
in
sbb
js
sub
xchg
inc
inc
aad
loop
shr
fisubs
mov
sub
mov
fdiv
ljmp
ret
xchg
pop
arpl
inc
adc
into
sub
sti
push
sub
addr16
or
xor
cmp
mov
rorb
sbb
fwait
addl
hlt
loope
xor
xor
sbb
mov
mov
sbb
les
shrl
jp
mov
mov
and
loopne
inc
pop
in
das
mov
dec
outsl
loopne
dec
cli
xor
mov
inc
xchg
decw
mov
test
dec
cmp
iret
sub
pop
and
stc
and
mov
cmp
pop
push
inc
ret
sbb
jmp
fcmovne
mov
clc
jbe
mov
mov
dec
out
daa
sub
inc
xchg
push
xor
xchg
add
mov
cmp
jo
subl
pop
inc
cs
shll
or
mov
sub
cwtl
sbb
out
mov
inc
and
ljmp
push
and
es
dec
inc
inc
cmp
shrl
or
pusha
mov
cmp
add
dec
xchg
mov
lods
int3
or
mov
aam
push
ljmp
and
or
and
cltd
cmp
xchg
mov
mov
sbb
fidivs
arpl
jp
jb
inc
sbb
inc
mov
addl
jle
inc
shlb
jp
sub
jmp
jmp
xor
pop
pop
cmc
popa
js
movsb
push
mov
loop
cltd
out
and
mov
imul
cmp
adc
imul
sub
mov
xchg
pop
inc
push
mov
push
es
aaa
or
mov
cmpsl
dec
lds
and
mov
and
aas
cmpb
push
ja
push
mov
cmp
lods
ljmp
pushf
nop
daa
and
or
fisubrs
icebp
flds
inc
test
inc
cs
inc
xor
call
inc
loope
mov
test
sub
and
and
lcall
jp
idivl
adcb
popa
js
add
clc
inc
cmp
stos
dec
nop
fidivrl
lahf
sub
add
rorl
das
insl
jl
cs
jecxz
sub
xor
or
int3
decb
flds
cli
push
or
sbb
in
fldt
or
ss
inc
shrb
dec
push
mov
add
mov
cmc
inc
add
and
add
into
xor
jae
cli
and
xor
hlt
lds
sti
call
sbb
adc
mov
push
sbb
xchg
adc
stos
ljmp
cmp
jnp
cmpsl
xor
pop
add
andl
and
lods
xor
daa
xor
dec
cmp
fdiv
push
repnz
cmp
xor
fsubp
push
sub
mov
int3
daa
adc
pop
in
pop
sti
adc
arpl
decb
in
adc
leave
in
sub
push
hlt
ret
addl
adc
daa
adc
test
pop
jmp
test
sub
adc
adc
push
bound
out
test
sub
sahf
mov
ret
or
or
jb
dec
ret
rclb
mov
cmp
lret
cmp
lods
sti
mov
jmp
inc
stos
add
out
repnz
mov
popf
data16
iret
int
xchg
out
or
int
lcall
out
jge
fbld
jge
push
lea
shl
out
sbb
out
shl
inc
or
pushf
add
push
sub
pop
sti
add
xchg
adc
and
fcompl
fnsave
and
movsb
shrb
push
jl
pop
fildll
mov
lock
psllw
repz
call
jecxz
adc
sbb
ret
xor
lds
cmp
cmpsb
out
rclb
repz
or
jmp
cmp
add
movsl
hlt
loop
mov
sbb
ds
mov
in
jns
adc
sti
movsb
bnd
mov
out
out
pop
ss
rclb
inc
mov
stos
out
int3
sbb
clc
push
icebp
and
sub
icebp
in
push
sub
cmpb
adc
repz
push
clc
imul
push
stc
mov
jmp
adc
mov
outsb
add
ljmp
xor
inc
ret
lods
dec
loope
fadds
stos
in
aad
xor
stos
lahf
pop
push
imul
sbb
jae
jo
mov
lds
adc
lods
mov
and
fldl
lret
repz
insl
dec
aaa
jge
cwtl
jecxz
movsl
pop
call
jno
jne
hlt
cmc
xchg
enter
add
lret
nop
mov
or
or
mov
movsl
add
adc
loopne
lret
push
testl
roll
fdivrp
jecxz
push
into
imul
cs
or
sbb
pop
fcoms
adc
scas
push
fstps
mov
dec
cld
push
les
in
add
aaa
fcomi
nop
adc
insb
ljmp
cmp
or
sub
or
lret
clc
in
rorl
and
adc
or
shll
or
push
sti
pop
dec
addb
icebp
in
xor
inc
xorl
das
je
mov
out
das
xor
int
ret
and
shll
cmp
out
dec
hlt
mov
mov
push
jmp
mov
mov
fildl
fmul
push
out
int3
xor
xor
mov
out
xchg
cmp
in
jg
shll
push
das
out
cmp
xor
bnd
mov
mov
out
test
call
adc
sub
repz
loopne
imul
loopne
xor
mov
loop
jg
mov
dec
cld
fisttpl
mov
and
inc
pop
push
lret
icebp
lret
gs
or
cltd
addr16
push
sbb
fwait
cmpsb
pop
insb
call
sarb
adc
roll
dec
and
fcmovu
adc
push
lods
xchg
into
jbe
shlb
into
insl
cmp
adc
repnz
sbb
out
ret
repz
sbb
repnz
pop
inc
flds
jp
int3
cmp
sub
sub
cli
ljmp
fldz
add
add
imul
sti
loop
dec
mov
aas
scas
cmpsl
ljmp
sub
fwait
xchg
lock
sti
imul
outsb
inc
or
test
jo
cmp
xchg
pop
mov
insl
xor
adc
loop
pop
lret
mov
cmovl
ja
sbb
ja
shrb
addr16
xchg
xchg
push
shrl
push
adc
data16
out
adc
sti
sbb
sub
imul
testl
ljmp
cld
cs
imul
sub
xchg
adc
dec
sub
lret
loop
mov
outsb
add
in
cwtl
inc
enter
xor
repz
bound
fstl
lods
shr
cmp
std
add
neg
sub
inc
insb
outsl
fdivl
adc
xor
jno
int
add
lret
in
add
in
adc
sbb
add
nop
or
ljmp
scas
cmp
pushf
mov
adc
imul
shr
add
push
add
and
xchg
out
daa
fistpl
xlat
stos
add
sti
add
lahf
pop
out
add
add
jmp
add
xor
and
adc
and
testl
sbb
lock
adc
fbld
sbb
pop
add
out
das
push
fcompl
push
out
pop
adc
fidivrl
push
add
cmp
sahf
lea
or
pop
divb
adc
cmc
aaa
adc
add
adc
lcall
repz
sbb
push
add
ljmp
mov
int
inc
or
rcrl
out
repz
jge
ds
ljmp
push
add
cmpsl
out
or
or
add
mov
stos
int
push
popf
mov
xor
sub
mov
mov
sub
stos
sbb
aas
and
inc
call
mov
fstpt
idiv
pop
jg
repz
fwait
add
add
testb
fmuls
popa
das
sbb
push
xlat
lds
cmpsl
lea
aaa
add
xor
outsb
repnz
jg
push
and
mov
cmp
sarb
jg
sub
cli
mov
repnz
jns
or
sbb
dec
cld
jecxz
movsb
pop
dec
mov
test
out
clc
in
or
popf
repz
or
idivb
jecxz
xor
add
nop
clc
ss
pop
mov
movsl
push
ret
outsl
in
cmp
cwtl
jmp
addr16
out
sbb
fldl
arpl
or
dec
mov
pop
or
xchg
push
adcb
sub
subl
stos
jp
ja
xchg
or
sub
in
pop
xchg
lahf
xor
fcompl
imul
pop
xor
repnz
aas
aas
test
adc
fadds
call
cmc
bound
mov
lods
cmp
jns
iret
sbb
insb
or
cli
jp
fstps
in
cld
dec
arpl
sbb
stos
mov
pop
add
inc
es
xor
ss
pushf
mov
sub
lock
lds
rorl
or
pop
add
push
adc
adc
push
mov
push
or
jmp
sbb
repz
scas
cmp
sbb
popf
cmp
out
imul
mov
dec
loopne
iret
js
sti
decb
push
xchg
cmpsl
jp
das
imul
inc
call
ret
aad
inc
and
test
add
test
lret
out
push
jg
lahf
xchg
loop
add
mov
ss
cs
loop
jbe
and
daa
enter
ss
out
sbb
dec
mov
mov
insl
mov
shr
mov
repz
xchg
movsl
divb
sub
add
test
mov
sbb
iret
push
pop
aaa
mov
xor
cs
addl
cmc
add
add
aad
sbb
mov
inc
mov
imull
rep
inc
adc
rcll
jmp
push
faddl
xlat
mov
scas
lea
inc
iret
jae
push
jg
in
xchg
mov
cld
adc
in
adc
pop
popf
xor
pop
mov
lods
fbstp
mov
xchg
cmpsb
inc
sub
test
adc
or
jmp
push
sub
ljmp
sbb
and
mov
loope
pop
pop
and
movsl
xor
cmc
mov
sub
ss
out
adc
add
lods
or
xor
addb
sbb
jae
std
add
jmp
push
add
adc
lret
dec
push
fsubrl
jno
in
adc
int
mov
cmp
repnz
cli
loop
pop
mov
iret
ret
ror
subl
xor
call
push
and
xlat
testb
add
aam
cmpsb
cmp
int3
cmp
cmc
xlat
add
iret
stc
je
in
in
out
inc
mov
rolb
push
shrb
push
pusha
push
test
ds
rcll
mov
leave
loop
dec
cmp
xor
xchg
push
test
xlat
mov
stos
cmp
leave
les
rorb
push
fdiv
mov
dec
inc
or
and
in
jecxz
cmpsl
jmp
int3
mov
fiadds
push
xor
push
pop
mov
into
insb
je
xor
jmp
cld
sti
out
repz
adc
mov
or
inc
insb
das
or
sub
es
sahf
es
add
and
jnp
scas
adc
cmpsb
fcomps
sahf
add
fstpt
or
or
fwait
sti
in
cs
into
andb
push
jecxz
out
mov
cmp
pop
adc
add
sbb
jnp
lea
jecxz
movsb
std
iret
out
ds
adc
push
fcomps
outsb
loop
nopl
add
or
insb
arpl
jno
dec
push
xor
std
das
out
cmpsl
out
adc
mov
jns
jg
test
outsl
out
imul
int
out
lods
jecxz
repnz
aad
sbb
fwait
paddsw
std
or
or
push
ljmp
jbe
inc
in
cmp
or
cld
push
sbb
std
mov
lret
mov
mov
mov
fsubs
outsb
ljmp
cmp
or
repnz
fstp
ds
mov
loop
dec
mov
adc
fisubl
pop
inc
insl
ret
rolb
sub
dec
loope
push
ljmp
insb
mov
mov
lods
stc
inc
lret
push
push
jb
dec
sti
int
push
or
mov
inc
test
data16
gs
in
in
or
into
inc
lahf
aas
int3
adc
adc
mov
sbb
out
xor
pop
pop
jne
inc
or
cmp
add
cmp
lods
aaa
adc
sbb
out
dec
sbb
jmp
adc
mov
cmp
les
adc
shrb
in
dec
ret
cmp
sbb
les
add
addr16
aaa
add
mov
loop
mov
cmpsb
mov
xchg
sbb
out
ljmp
xchg
movsb
jle
ret
rclb
pop
sbb
mov
outsb
jl
inc
sbb
cmp
into
popf
daa
rcr
sbb
pop
sti
lret
push
mov
mov
cmp
inc
int3
rorb
cmpsl
lret
neg
pop
repnz
lret
adc
jnp
cmp
bound
dec
aam
stos
mov
call
push
addr16
sbb
push
pop
xor
mov
cs
into
xor
or
or
repnz
xchg
add
sbb
mov
sub
adc
aas
cmp
ja
xorl
es
nop
push
aam
sbb
push
ljmp
mov
outsb
call
mov
imul
mov
sbbb
adc
jae
js
cmp
int3
push
and
pop
stos
xchg
aas
sbb
mov
adc
push
push
push
sbb
push
sbb
clc
xor
andb
hlt
mov
bound
or
jae
mov
and
out
in
push
icebp
mov
pop
sbb
add
dec
dec
pop
sti
orb
jg
add
mov
inc
push
pop
repnz
ret
rcl
pop
adc
sub
mov
aam
out
push
jnp
push
cmp
testl
out
scas
decl
in
iret
cs
add
add
or
mov
pop
ljmp
sti
fsubr
adc
fwait
mov
xchg
rcll
psubusb
mov
test
adc
push
sbb
movsb
adc
jmp
adcb
push
mov
mov
icebp
insl
mov
sti
lods
addb
xchg
jns
in
sti
call
imul
xor
mov
jp
aad
adc
loopne
mov
cli
aas
cmp
dec
out
pop
pop
sbb
stos
mov
sti
sbb
mov
sbb
fistpl
jbe
ljmp
cmpsb
push
mov
mov
gs
mov
stos
jae
xlat
xchg
mov
lods
jae
loop
and
in
mov
xchg
sbb
mov
sub
out
push
out
or
daa
jnp
add
rclb
test
outsl
mov
repz
xor
sub
add
adc
fsubs
shrb
and
in
in
loop
repnz
stc
int3
dec
out
adc
cld
int
sub
mov
ret
cmc
int3
push
jnp
cmp
or
divb
out
cltd
rclb
mov
mov
sub
cld
push
and
dec
dec
or
nop
xchg
add
lret
sbb
shrl
jle
add
adc
lret
int3
outsb
std
test
add
mov
add
es
lock
cmc
mov
adc
jmp
loop
scas
pop
shll
mov
insb
cs
xchg
pop
dec
outsl
mov
sarl
mov
cmp
xor
mov
stos
shll
push
out
jle
cli
rol
jno
rcll
adc
adc
xor
jae
imul
int3
fidivrs
jp
pop
or
push
cmp
fnstsw
adc
cmp
sbb
movsb
stos
mov
xor
mov
inc
leave
xlat
mov
fwait
sub
cmpsb
mov
jns
cmc
mov
or
subb
pop
addb
loope
and
enter
mov
mov
es
mov
lds
fidivl
push
mov
jle
xlat
clc
add
mov
stos
xor
insb
sbb
arpl
jl
xor
in
pushl
dec
leave
sbb
dec
enter
pop
or
sti
loop
dec
pop
or
sbb
cmc
mov
and
cmpb
jmp
mov
push
cltd
ret
lods
mov
and
lock
int3
cmpsl
jp
or
fimull
out
sbb
xchg
mov
add
imul
sti
jbe
dec
add
cmp
mov
call
movb
ja
sbb
jmp
xchg
push
and
clc
inc
cmpsl
repz
adc
mov
sti
int3
push
jbe
std
aam
rolb
lret
push
jnp
aad
mov
lods
out
mov
and
loop
test
lods
mov
pushl
or
jle
lods
jns
xlat
mov
pop
inc
xor
xchg
pop
into
xor
push
jg
jp
dec
js
out
mov
pop
dec
jno
mov
add
jns
les
inc
out
inc
out
mov
insb
cwtl
icebp
in
xchg
or
xor
cltd
loop
or
stos
imul
add
gs
aaa
dec
imull
xor
mov
mov
loop
mov
cmp
je
mov
or
repnz
test
iret
mov
push
js
adc
jecxz
sbb
repz
sub
push
daa
idivl
jmp
jno
sahf
push
ret
lahf
dec
cli
or
nop
mov
mov
sbbb
aaa
jne
sbb
cmp
fdivp
jp
jge
jbe
or
pop
and
rcll
sbb
pop
clc
sbb
shr
xor
loop
sub
mov
adcb
xlat
stos
test
xlat
btr
jnp
mov
xchg
pop
add
adc
add
out
or
sub
sub
xchg
add
dec
and
fists
call
enter
inc
lcall
adc
daa
cmc
mov
notl
hlt
ret
shl
mov
aad
jno
mov
icebp
je
leave
daa
lret
cs
add
add
shlb
mov
xchg
cmp
jb
xor
lret
adc
sbb
lret
push
arpl
fisubrs
and
cmp
gs
mov
cltd
mov
adc
stos
mov
dec
mov
movsb
int3
mov
dec
or
rclb
adc
ret
mov
leave
cmp
jb
push
scas
rcr
fucomi
cmp
imul
je
add
dec
je
aam
int3
mov
mov
sub
adc
sub
ja
xchg
and
dec
jb
in
sarb
or
imul
and
xchg
xor
daa
cmovne
xor
inc
lods
outsl
call
sbb
lcall
clc
sub
adc
inc
out
push
decb
cld
hlt
add
enter
jae
add
popl
fisttpll
loop
fmul
mov
inc
cmc
adc
push
mov
push
jns
fidivl
jmp
and
in
adc
push
cltd
inc
dec
adc
lcall
cmpsb
call
push
ret
mov
aad
dec
mov
jp
push
inc
jp
inc
iret
adc
stos
ret
mov
call
movsb
add
mov
adc
push
cmp
not
gs
mov
mov
in
popa
and
mov
maskmovq
mov
iret
add
ret
cmp
scas
test
and
aad
adc
in
pushf
imul
mov
lret
mov
ds
xor
or
outsl
inc
or
repnz
adc
subb
loope
jle
lcall
sub
push
lods
std
adc
pop
scas
sbb
ss
in
mov
lret
cld
les
sub
rol
sahf
rorl
lret
in
jno
arpl
mov
mov
push
mov
dec
and
fwait
out
add
sub
roll
mov
cmpl
mov
or
jmp
movsl
int3
jge
pop
push
fisubs
repz
aad
loopne
jb
adc
or
js
lds
add
mov
int3
lcall
outsl
in
mov
xor
mov
or
ds
xadd
dec
adc
jmp
cmp
stos
or
aaa
push
int3
cmp
xor
cld
and
mov
ficompl
push
lods
enter
xor
push
mov
lock
out
or
shll
or
std
mov
jno
jp
sub
adc
sub
movsl
cmp
mov
push
fs
repnz
mov
decb
adc
mov
into
lea
sub
mov
add
cmovno
roll
movsb
mov
call
jp
push
cmpsl
adc
xchg
imul
jp
push
fnstsw
jb
in
in
push
xchg
je
adc
add
fisubrl
and
testl
mov
adc
into
out
adcl
push
or
mov
inc
xor
mov
fsts
rcrl
imul
jl
int3
arpl
sbb
pop
ret
dec
xchg
into
stos
popf
jb
add
dec
or
push
es
mov
imul
test
int3
inc
enter
sbb
enter
loopne
jmp
dec
xchg
jmp
addr16
or
push
adc
and
rolb
hlt
inc
test
xchg
neg
dec
mov
stos
lods
neg
ja
scas
or
clc
rorl
jg
sbb
negb
xor
jno
lcall
divl
dec
cmp
int
cld
in
mov
sub
sarb
out
test
gs
clc
cmp
pop
test
ds
repz
mov
dec
testb
mov
fcomps
test
ja
rolb
mov
scas
movsl
push
out
aas
notb
xchg
fs
cs
out
push
and
int
sahf
out
add
lods
mov
ja
xor
jnp
scas
pop
lea
out
mov
into
cmpsb
push
in
pusha
pop
ror
daa
cmp
cwtl
das
or
lods
push
fidivl
bswap
xchg
jg
out
daa
adc
mov
mov
add
lods
bnd
or
jnp
aam
scas
mov
add
mov
std
sbb
xor
inc
fadds
add
add
loop
aad
idivb
jge,pn
test
stc
in
pop
iret
hlt
sub
mov
aad
scas
sub
das
out
jb
pop
cmp
push
cld
bound
rcrb
pop
aam
daa
or
ja
xor
or
lret
out
jp
mov
pop
test
dec
sbb
test
lahf
xor
inc
sub
dec
adc
adc
pop
out
or
cmp
stos
add
movsb
jbe
inc
fisttps
incl
cmp
dec
mov
aam
mov
movsl
arpl
gs
add
mov
mov
imul
jg
mov
sub
popw
adc
xchg
orl
push
in
in
mov
jge
int
jecxz
sti
jl
sbb
scas
popf
hlt
fisttps
pop
dec
scas
icebp
jb
int
pop
xorb
mov
jg
add
lds
lcall
push
insb
or
cmp
jno
cltd
sbb
xor
adc
pop
jmp
add
add
ficompl
iret
jb
shrb
adc
pop
pusha
jno
pop
aad
dec
pop
icebp
fisubrs
mov
xor
mov
mov
sbb
fs
sbb
mov
jp
mov
testb
push
shr
and
jnp
jns
outsb
jb
outsl
fiadds
xchg
cld
out
dec
xchg
cmp
cld
notl
ss
add
mov
dec
or
ficoms
imul
ficompl
pop
push
push
pop
add
enter
sub
mov
dec
pop
aam
jp
adc
jecxz
xchg
stos
out
cmp
out
roll
pop
mov
push
xor
mov
enter
dec
std
cmp
mov
das
xchg
fs
mov
mov
pop
stc
cs
cmp
mov
ja
pop
rep
fstpl
shlb
cs
inc
mov
lds
lea
data16
orb
jne
lcall
fs
aam
lods
out
dec
xchg
sub
mov
fdivrl
stos
neg
xchg
push
mov
out
ss
cmp
fsubrs
rcrl
mul
push
rcr
movl
jge
adc
cmp
and
and
sub
hlt
mov
pusha
xor
and
sbb
je,pn
xor
pushl
aam
cld
popa
mov
ficoml
sbb
ret
out
insb
cld
lods
xor
repnz
xchg
jg
pop
loope
sahf
fmuls
rclb
pop
lret
inc
inc
loopne
xor
xchg
push
stos
jge
nop
add
mov
loope
jg
cld
jns
mov
sbbb
mov
add
iret
fadd
aam
test
push
je
mov
stos
sbb
and
lock
out
xor
jl
fcomi
push
das
adc
add
jmp
stc
hlt
rcr
aas
jmp
in
hlt
mov
cmp
inc
dec
mov
fsubl
rcl
stos
es
jae
sarl
lcall
cmp
mov
daa
in
into
and
addr16
push
scas
jmp
adc
mov
jbe
push
fmuls
iret
push
sbb
sbb
xchg
cmp
cmp
in
shlb
les
pop
mov
shll
add
add
loopne
cs
jp
push
lret
movsl
nop
imul
jnp
rcrb
pop
pop
lods
jle
loope
pop
stos
movl
roll
pop
xor
jp
push
repnz
jno
loop
clc
ret
mov
adc
and
sub
scas
inc
cmp
xor
mov
jg
cmc
ret
int
es
cmp
loopne
loopne
adc
loopne
outsl
imul
dec
in
cmpsb
inc
xor
in
ret
mov
testb
inc
je
or
cmp
add
dec
or
mov
sbb
sti
in
clc
mov
sbb
out
xlat
rcr
cli
jae
clc
std
loop
and
addb
mov
xchg
int
pop
xlat
xlat
jle
ja
push
adc
sbb
pushf
lods
out
cmp
lock
aaa
push
mov
imul
push
out
int3
divb
cmp
pop
in
lcall
out
fisubrl
mov
je
pop
push
inc
sub
cltd
pop
xor
cltd
decl
sarb
jle
xchg
leave
rcrl
sbb
leave
enter
mov
cmp
jge
pop
sub
in
fsubrl
dec
js
or
adc
pop
xor
hlt
in
and
lock
mov
aaa
sbb
mov
xchg
scas
or
cmpsl
mov
bound
xchg
or
mov
arpl
call
test
lods
ds
inc
fcompl
loop
stos
ss
inc
imul
sub
dec
jbe
mov
sub
jo
lcall
or
loop
cmp
fucomip
jno
mov
add
inc
popf
adc
and
icebp
nop
lods
sti
rcl
ds
hlt
notl
xor
lcall
or
xor
sbb
arpl
xchg
jmp
xlat
sbb
inc
out
mov
leave
mov
ss
rclb
adc
mov
cwtl
and
mov
daa
xor
dec
mov
cmpsb
shlb
stos
mov
cli
jae
movsl
loop
mov
xorb
sbb
int
addl
jns
scas
or
jnp
test
dec
push
les
xor
repnz
lds
and
cmp
dec
mov
sarb
in
aaa
adc
or
push
or
mov
repnz
hlt
lods
mov
jbe
test
int
push
inc
jbe
mov
push
mov
arpl
mov
push
and
cld
xchg
dec
fsub
cs
sbb
add
fsubrs
jmp
out
or
cmp
xchg
mov
cld
mov
fcmovnbe
addr16
and
stos
lcall
inc
int
dec
mov
lods
dec
lock
repnz
sub
dec
inc
or
daa
xchg
xchg
out
cmp
pop
into
cmp
movsl
mov
sub
das
stc
stc
mov
or
out
mov
sub
fs
mov
ret
inc
mov
pop
jbe
scas
shlb
and
sti
add
iret
rclb
scas
stc
push
adcl
daa
add
out
push
fstl
xor
sub
fcoms
out
cmc
pop
jne
lret
lret
inc
pop
clc
js
dec
jo
aaa
aaa
cli
mov
cmpsl
adc
pushl
leave
dec
in
jle
mov
rcr
sbb
lret
xchg
push
addr16
cmc
cmp
shrb
cmpsl
mov
sbb
mov
imul
arpl
repnz
sub
fistpl
rol
adc
hlt
lret
mov
shlb
lds
push
or
aad
incl
lret
mov
xchg
adc
or
mov
push
les
fmuls
xchg
je
cmp
out
ret
mov
aad
out
xor
xor
scas
or
test
ja
or
cmp
push
mov
mov
dec
mov
mov
out
mov
cwtl
cld
out
or
sbb
or
sbb
sbb
icebp
mov
and
or
stos
es
or
xorl
push
addb
jp
cwtl
jno
iret
out
enter
xor
mov
in
imul
cli
pushf
pusha
mov
adc
mov
adc
push
sti
div
ret
push
data16
pop
jno
das
out
add
ret
divb
push
lea
and
cs
lret
hlt
add
or
divl
int
and
mov
imull
aam
mov
or
loop
add
decb
mov
sub
out
jns
pop
or
cmp
jne
lretw
sub
std
das
cmp
cmpsl
and
daa
or
or
sbb
movsl
pop
aad
loop
push
in
scas
xor
mov
cld
jns
aad
xor
push
lea
aas
sti
es
in
xchg
repz
jne
fwait
mov
lods
cmp
mov
cmp
ss
cld
shl
shll
arpl
jmp
pop
inc
dec
mov
scas
cmp
arpl
sub
sarb
shll
push
cmp
dec
adc
cld
clc
arpl
stc
lret
aad
mov
divl
or
jb
pop
add
sbb
sub
push
mov
cli
jg
sbb
push
pop
leave
sbb
inc
pop
mov
lret
repnz
insb
ret
sub
mov
jb
fdiv
mov
lea
jg
and
loop
sub
repnz
add
into
push
sbb
sbb
push
adc
mov
scas
xor
cwtl
mov
insl
in
push
add
add
mov
rorb
xlat
mov
mov
or
arpl
inc
scas
pop
xor
aaa
inc
cltd
adc
sub
call
cltd
test
sbb
test
ficoml
pop
push
popa
mov
loopne
sbb
push
fildl
movsb
out
stos
sti
cmp
ljmp
or
and
mov
or
stos
mov
inc
pop
dec
pop
cmp
dec
jge
in
jmp
call
in
mov
into
aam
cmpsl
out
loop
push
psubw
fs
mov
aam
pop
out
ljmp
push
sbb
push
adc
loop
pushf
adc
cmp
into
xchg
fists
pop
and
fisubrs
call
mov
cmp
call
xor
in
out
adc
xchg
mov
lcall
xlat
data16
pop
hlt
add
or
cmp
xchg
sub
repz
pushf
daa
pop
xchg
mov
scas
inc
aad
in
cmp
inc
mull
scas
int
sbb
lret
sub
mov
jbe
jae
fs
sbb
or
mov
push
sbb
aad
push
mov
xchg
and
sbb
mov
dec
out
pop
jno
mov
adc
enter
sti
fsubrl
sub
xor
mov
dec
repz
jnp
mov
fadd
dec
ljmp
out
xchg
addr16
repz
adcb
clc
and
jmp
cli
push
fcomps
or
push
push
inc
xchg
and
icebp
mov
fcoms
and
or
testl
sar
subl
sbb
add
cltd
adc
icebp
adc
and
loope
cli
in
or
lods
and
imul
jne
repz
fxch
dec
outsb
dec
lahf
mov
or
out
xchg
sbb
inc
mov
cmpsl
idivl
lret
std
add
jmp
insl
xor
pop
jb
jnp
mov
sarb
out
inc
push
pop
sbb
pop
fiaddl
mov
mov
add
mov
test
das
push
inc
pop
int3
xor
daa
pop
mov
arpl
lods
fsubr
shlb
mov
mull
mov
test
push
out
cmpsb
int
and
les
adc
call
fbstp
fsubl
es
mov
pop
fchs
push
push
mov
stos
repz
fisubrs
test
cmp
aam
scas
jmp
jg
ret
in
mov
push
test
fistpl
adc
fwait
mov
shl
fadds
xor
cmp
clc
call
in
test
ja
xchg
mov
ds
in
stos
sbbb
xchg
aam
fwait
sub
push
mov
push
addr16
sub
orl
test
ljmp
mov
xor
sub
iret
mul
sbb
dec
stos
adc
adc
lock
popa
mov
popa
or
mov
fmuls
pop
mov
push
clc
in
or
imul
repz
scas
cmp
xor
cmpsb
lock
jmp
enter
or
sbb
xor
and
mov
mov
mov
mov
add
int3
lahf
rcll
or
lods
mov
mov
cwtl
sbb
adc
dec
insb
and
mov
f2xm1
or
bound
test
lods
pop
jg
fyl2x
dec
and
fisttpl
repz
jne
stos
and
jo
sub
xor
das
out
cmpsb
push
push
aas
add
fistps
pop
sub
jmp
add
leave
cmp
jge
xor
outsl
cli
jbe
xor
sub
jns
xchg
lds
cld
hlt
ror
add
lods
push
and
clc
cli
push
mov
fldl2e
jge
pop
mov
iret
jp
jno
xor
or
jecxz
mov
in
mov
mov
fsubs
mov
ror
repz
mov
insb
in
pop
push
pop
mov
inc
shll
dec
xor
mov
push
push
cld
cwtl
jg
mov
push
sbb
and
sbb
dec
fiaddl
cmc
inc
ror
scas
mov
adc
xor
lret
xor
inc
repz
adc
shrl
cmp
test
test
addr16
adc
inc
xor
sub
stos
sahf
push
inc
shll
mov
or
inc
mov
pop
jno
and
addr16
mov
adcb
pop
fstl
dec
xor
add
pusha
add
add
mov
ret
jg
mov
test
xor
js
ss
push
xchg
cmpsl
leave
adc
jmp
sbb
aaa
cmp
inc
cmp
mov
pop
stos
cs
and
dec
cld
cmpsb
or
push
ljmp
fdivrl
pop
arpl
cmp
or
pushf
insb
xlat
or
sub
fwait
aaa
in
cli
cld
sub
fists
or
mov
in
pop
or
and
dec
xchg
std
dec
loopne
daa
mov
in
xchg
push
jno
cmpl
imul
adc
into
fdivrs
outsb
ret
and
or
repz
imul
or
fistpl
daa
cmp
cmp
pusha
fwait
out
adc
mov
data16
sahf
add
iret
mov
or
or
fwait
sti
in
es
adc
mov
pop
fwait
out
adc
outsb
mov
les
cmp
or
repz
prefetch
or
pushf
repz
es
push
daa
sub
std
das
out
stos
out
adc
outsb
addb
pop
stos
test
cmp
or
or
pushf
pop
in
or
cli
and
xchg
jmp
and
cld
dec
out
mov
jmp
mov
pop
xchg
fstpt
or
repnz
sub
and
out
mov
in
pop
or
outsb
inc
mov
outsl
pop
fs
cmp
or
mov
popf
sub
rcrb
cs
xchg
and
push
fldl
sti
mov
in
jmp
sbb
iret
outsb
inc
inc
pop
ja
fs
cmp
or
or
sub
sahf
fwait
pop
in
sar
inc
and
xchg
sub
loop
sbb
mov
in
out
push
adc
sbb
xor
dec
in
sub
pop
daa
fwait
mov
js
out
add
out
adc
fcmovu
inc
outsb
lret
pop
out
fsubl
cmp
add
or
jecxz
scas
sub
inc
push
inc
daa
xor
pusha
xchg
out
adc
outsb
scas
add
mov
int
cmpsl
repnz
or
pushf
out
xor
in
or
sub
jb
lahf
in
cld
mov
xchg
push
mov
in
ret
push
shll
mov
loopne
out
adc
decl
fsqrt
outsb
cs
adc
out
ret
out
mov
pushl
sahf
outsb
bound
pop
xchg
or
repnz
ret
or
sub
ljmp
std
add
out
arpl
hlt
mov
sub
xchg
arpl
sbb
pop
xchg
xlat
repnz
ret
or
sub
loop
push
and
xchg
add
ss
pop
mov
or
pop
push
decl
mov
outsb
add
ja
xchg
or
repnz
insb
iret
or
sub
out
and
pop
xchg
pop
std
fsubr
arpl
shrl
inc
pop
jnp
fs
cmp
or
or
sub
fwait
arpl
cld
push
and
xchg
aaa
std
out
fsubrl
adc
add
out
mov
add
pop
inc
dec
fs
cmp
or
or
sub
scas
cld
pop
and
fdivrl
cmpsl
mov
in
pop
pop
icebp
add
sbb
sbb
sub
or
repnz
insb
lahf
or
sub
mov
jb
stos
xchg
push
std
into
fdivrl
mov
shr
and
loope
movsbl
cld
jmp
or
out
or
jecxz
clc
jmp
or
sub
jbe
mov
data16
mov
std
xchg
subb
in
filds
mov
cld
mov
ljmp
pop
aaa
sbb
out
adc
xchg
lret
std
loopne,pt
mov
push
jno
cmpl
imul
adc
into
fmuls
mov
loopne
stc
or
repnz
sbb
fiaddl
inc
in
xor
push
daa
fwait
mov
jl
out
adc
sahf
fcomps
into
add
lret
enter
sbb
call
sub
add
jmp
sti
cld
dec
out
mov
jp
stos
jmp
mov
add
mov
lods
or
repnz
sub
fistps
and
xchg
out
std
xor
adc
and
loopne
mov
push
jno
cmpl
imul
adc
rcr
outsb
ret
pop
repz
cmc
or
repnz
sbb
xor
dec
insb
sub
sub
xchg
jbe
mov
fcompl
mov
in
mov
aad
pop
mov
clc
out
adc
pushl
vmovups
cli
ret
out
ret
out
adc
outsb
mov
jg
mov
fstpt
or
repnz
sub
fistps
or
call
loop
jle
mov
std
jb
mov
ja
lea
addr16
mov
out
adc
out
fsubrs
outsb
loop
nopl
or
sbb
stos
push
cmp
or
or
sub
fwait
addr16
stos
cld
pop
and
xchg
dec
std
mov
in
sysret
cmc
cmp
out
adc
add
sub
inc
std
das
out
stos
out
adc
outsb
mov
lods
arpl
cmp
or
or
pushf
or
cld
cli
and
imul
out
push
ret
pushl
mov
data16
jg
orl
fisttps
sub
fwait
inc
in
idiv
xor
repz
pop
std
loop
push
add
sbb
or
std
pop
pop
cmp
cmp
or
repnz
insb
xchg
or
sub
cmpsb
cld
bound
xlat
xchg
inc
std
mov
call
es
add
inc
cmp
or
repnz
insb
mov
xchg
fwait
jg
cmp
and
fmull
mov
in
scas
push
fldenv
pop
mov
cld
add
ss
jmp
cld
push
cmp
out
mov
jp
cmpsl
ljmp
xchg
outsb
lcall
imul
xlat
repnz
imul
leave
sub
loop
push
and
xchg
std
add
repnz
mov
ficoms
sar
inc
fdivrl
pop
xchg
je
jg
test
outsl
repnz
insb
fisttpl
sub
rcrb
xor
out
and
push
fstl
add
or
add
sbb
std
inc
loopne
das
mov
in
lahf
push
gs
xchg
mov
cmpsb
adc
fmuls
mov
loopne
adc
or
cwtl
xlat
imull
dec
daa
daa
mov
jo
out
adc
mov
add
xlat
mov
or
or
pushf
imul
cmp
out
pop
add
std
aaa
out
mov
data16
outsb
xchg
ja
scas
mov
or
repnz
shrl
and
fwait
pop
in
push
std
or
call
jecxz
out
shl
inc
push
ret
jp
cmpsb
outsb
push
fwait
pop
jl
ja
lea
fcomip
test
lret
or
sub
fdivrp
sbb
adc
popf
pop
xor
mov
jnp
stos
std
fcoml
outsl
push
xchg
daa
fistpll
mov
das
jmp
fcoms
outsb
sbb
pop
pop
pop
or
sbb
push
inc
adc
std
dec
loopne
xor
popa
daa
xchg
mov
mov
stos
adc
fcmovu
inc
outsb
lret
pop
sti
fsubl
cmp
add
hlt
xor
std
aas
out
mov
jmp
mov
add
fstpt
or
repnz
sub
sbb
push
and
xchg
out
std
xor
cmp
and
jecxz
mov
in
xchg
push
insl
daa
cmpl
push
out
adc
ret
outsb
ljmp
repz
or
and
arpl
sar
inc
loopne
das
mov
in
fwait
push
imul
ja
mov
cmpsb
adc
fcoms
lret
pop
repz
adc
add
adc
arpl
iret
out
cmp
cmp
pop
lahf
out
adc
outsb
addb
pop
scas
mov
or
repnz
shrl
and
fwait
pop
in
sbb
or
pop
sbb
arpl
orl
and
dec
mov
into
mov
and
int3
jge
mov
in
js
and
sbb
in
cmp
or
cld
mov
mov
out
ss
mov
rcl
aam
insl
jnp
mov
mov
rolb
cmp
int3
mov
dec
popa
add
jmp
xchg
cmp
adc
mov
adc
cmp
or
push
daa
cmp
xor
scas
cli
push
adc
push
xor
push
ljmp
insl
jmp
mov
sbb
scas
sbb
dec
hlt
adc
daa
mov
ret
mov
in
xchg
decb
fcmovne
repz
sbb
lahf
repz
inc
popf
cmc
jbe
sti
lret
int
lds
sbb
cmp
cmp
pop
mov
sbb
pop
mov
push
arpl
push
ss
mov
sahf
repz
inc
into
mov
push
stos
xchg
jmp
jecxz
popf
adc
cwtl
mov
sarl
push
sbb
inc
clc
in
out
adc
mov
out
lods
push
inc
scas
cmp
push
arpl
inc
faddl
pop
inc
out
ret
fdivrl
filds
dec
insl
push
fwait
scas
xchg
out
push
cltd
jecxz
inc
pop
repz
add
das
or
sarb
sar
sub
mov
dec
inc
ret
cltd
add
out
cltd
fs
jg
lret
mov
xor
sbb
test
sub
int
jmp
mov
xor
and
popa
pop
idiv
cld
push
ror
mov
rol
jmp
inc
or
mov
in
or
push
jae
xchg
sbb
movsb
fistpl
lret
add
mov
nopl
cmpsb
or
mov
push
ret
mov
jno
mov
int3
fcomp
repnz
xlat
pop
insb
repnz
mov
mov
mov
insb
imul
std
out
leave
iret
data16
insl
add
xor
fcmovbe
sarb
mov
lcall
xchg
xchg
mov
cmp
add
cmpsb
scas
pop
sarb
xor
sbb
jo
mov
out
mov
insl
testl
mov
inc
xchg
push
adc
cmpb
and
cmc
lds
loop
cld
out
inc
dec
mov
out
insl
push
mov
sahf
aas
ss
leave
or
shrl
mov
cld
inc
jmp
push
dec
cmp
mov
leave
xor
addr16
pushf
fadds
mov
loop,pt
stos
or
and
or
fwait
addr16
out
test
int3
loop
inc
inc
outsb
hlt
jae
into
jle
adc
lods
shrb
adc
xor
out
rcrl
mov
idivb
stc
clc
scas
stos
mov
pop
or
into
enter
inc
je
arpl
dec
in
scas
addb
mov
loopne
mov
fldcw
or
push
repz
cmc
sbb
mov
or
lret
icebp
sbb
push
or
sar
outsl
rclb
js
mov
jnp
and
or
dec
arpl
inc
push
out
icebp
ret
nop
adc
rcll
ret
mov
xchg
mov
out
rcrb
movsb
iret
or
icebp
pop
mov
dec
in
or
mov
mov
push
stos
fidivrs
mov
sti
dec
add
mov
aad
std
or
and
push
jno
mov
jg
in
jmp
outsb
pop
cmp
add
nop
dec
je
cmc
out
fdivl
sub
sahf
xchg
adc
mov
pop
out
fwait
lret
test
dec
pushf
out
mov
sarb
adc
cltd
xchg
fnsetpm(287
clc
jmp
add
push
jmp
ret
sbb
jge
xor
xor
sbb
cmp
xor
outsl
repnz
or
lcall
cmp
clc
not
xchg
fadds
loop
dec
in
push
pop
mov
pop
arpl
push
shll
cmp
push
ljmp
repz
mov
mov
sti
xor
xor
adc
stc
shrl
fstpt
and
push
stos
cs
loope
push
or
test
loopne
cmp
pop
lea
leave
cmp
cmpsb
cmp
mov
imul
insb
decb
in
push
ret
mov
imul
sahf
inc
push
loop
mov
ss
sbb
mov
stos
mov
push
add
repnz
cmpsb
mov
dec
add
int
icebp
xor
xchg
sti
mov
imul
jns
push
scas
and
je
aam
adc
into
cmp
mov
repnz
or
pop
cmpsl
movsb
sar
mov
cmp
imul
xchg
in
dec
sub
repz
pop
stc
cmp
setns
out
cmpsb
aad
int
xor
arpl
mov
lret
int3
jo
loopne
sub
pop
fs
or
into
push
shr
xor
arpl
push
sbb
pop
mov
pop
inc
inc
dec
sub
inc
aaa
inc
xor
add
aaa
sbb
dec
ret
repz
or
movsl
nop
push
jmp
dec
in
fnstsw
icebp
mov
jmp
pop
divl
inc
rcrb
xor
push
mov
cmpb
push
xchg
push
repnz
stos
sahf
inc
sbb
cmp
das
add
adc
js
push
popa
into
cmpsl
fnstenv
mov
mov
xchg
call
cmc
push
or
mov
add
cmp
arpl
leave
call
xchg
aaa
sub
xor
enter
dec
pop
jge
dec
cmp
xchg
xchg
cmp
adc
cli
cmp
outsl
add
fs
inc
inc
in
inc
mov
xor
jbe
imull
cmp
out
mov
in
scas
add
stos
jo
add
pop
jp
mov
arpl
inc
dec
mov
lahf
test
iret
adc
rcll
jge
out
add
xor
out
shrd
xor
pop
lcall
insb
in
arpl
mov
push
jl
in
adc
jmp
ss
dec
lods
sbb
or
inc
fbstp
inc
or
punpckhbw
sarl
sbb
out
mov
cmpsb
or
movsb
dec
dec
addb
cmpsl
out
sti
lods
out
std
push
out
jnp
jmp
or
ror
xchg
jge
out
jmp
jmp
stos
test
hlt
jecxz
jmp
sbb
iret
cmc
push
mov
iret
jo
lods
imul
cld
movsl
push
jmp
cmc
jno
faddl
out
sbb
arpl
rorb
mov
sahf
and
in
dec
and
dec
mulb
pop
arpl
mov
dec
repz
mov
test
dec
mov
cli
push
fisttps
mov
gs
lret
cmp
ljmp
ret
add
in
pop
push
mov
add
fldcw
roll
mov
fwait
rcll
fsts
insb
hlt
dec
mov
mov
pop
xor
pop
push
or
out
xor
sbb
sbb
push
outsl
cld
xchg
in
sbb
aas
xlat
stos
fdivs
cmp
or
mov
mov
sub
nop
cmp
pop
xor
cmp
js
mov
dec
dec
xor
inc
or
imul
idivl
stos
push
dec
enter
mov
aam
push
lock
data16
dec
lahf
sbb
pop
jo
cmp
xchg
inc
out
fmull
ror
mov
add
sbb
add
mov
sbb
mov
add
inc
out
icebp
inc
ss
sbb
cs
push
roll
jecxz
mov
out
mov
dec
stc
cs
sarb
jo
mov
and
mov
sbb
daa
mov
out
test
clc
fnsave
xchg
pop
in
mov
aas
sub
call
sbbl
enter
call
pop
mov
mov
outsb
mov
sub
mov
push
loop
sbb
call
xrelease
inc
add
dec
movb
loope
roll
les
shlb
fbstp
bound
iret
dec
testl
sbb
or
cli
mov
or
cmpsw
ss
leave
jbe
pop
mov
imul
aam
xor
sub
popf
sbb
jg
rclb
scas
movsl
sbb
std
sbb
xchg
adc
cwtl
jmp
sbb
shlb
fs
jmp
fwait
and
sbb
fwait
or
xor
sub
push
add
aas
or
add
or
add
sbb
or
xorb
mov
mov
dec
ja
mov
out
jg
lahf
and
adc
pop
es
jno
insb
dec
jo
xor
mov
jae
mov
and
xchg
mov
ss
out
adc
gs
lods
add
pop
xor
jle
xchg
mov
and
repz
lods
es
vpcomq
mov
jne
nop
mov
cli
ret
mov
adc
stos
mov
xchg
fmuls
xor
sub
stos
xchg
adc
test
jo
xor
or
push
cltd
out
mov
stos
push
lods
aaa
std
inc
jbe
stos
jbe
mov
push
das
imul
push
mov
sarl
pop
fisttps
lds
jae
cmpsl
in
mov
rorl
adc
rclb
call
aaa
mov
push
cmp
dec
push
cmp
test
dec
out
push
lods
push
jno
fwait
jae
fldt
mov
mov
hlt
repnz
stc
inc
hlt
cmp
mov
xchg
mov
pop
pop
jo
scas
out
xlat
test
out
xchg
lock
ljmp
pop
pop
scas
sbb
dec
iret
jne
cmpsb
into
mov
dec
outsb
cs
add
les
adc
cmc
add
fpatan
pop
sti
cmp
or
mov
or
jl
mov
cs
ret
push
mov
push
out
sarl
jl
xor
cs
cmp
daa
leave
mov
mov
ja
sub
idiv
addl
pushf
fwait
in
adc
push
icebp
adc
aaa
cmp
jbe
or
push
mov
mov
scas
outsl
notl
jno
outsl
jmp
scas
inc
popa
repz
shrl
xchg
call
mov
jmp
filds
push
cmp
aas
mov
push
xor
jnp
cmp
addr16
std
cmp
add
cmp
sbb
jno
or
xor
into
fwait
xor
or
mov
cmp
imul
fildll
sbb
mov
bound
lock
pusha
xor
jle
insl
pop
cmp
adcl
jp
outsb
mov
and
lock
push
xlat
jmp
mov
jbe
data16
mov
shrb
ljmp
xlat
add
cmp
adc
mov
imull
loop
arpl
inc
mov
inc
fnstenv
scas
imul
push
into
jge
mov
push
ds
std
fisubs
cli
inc
or
adc
push
adc
fwait
arpl
adc
adc
pop
repz
jmp
sbb
xchg
adc
push
stc
in
out
adc
adc
cltd
dec
inc
sbb
xor
mov
xchg
repz
bound
in
cld
fiaddl
inc
aaa
loopne
sub
in
jge
adc
cli
mov
notl
rcr
pop
ret
clc
add
out
fbstp
inc
test
inc
mov
add
push
lret
lods
mov
mov
push
sti
sti
mov
xchg
icebp
clc
arpl
push
xor
adc
arpl
add
les
out
jne
out
test
jmp
sbb
in
cmpsb
mov
jp
inc
or
adc
popf
jne
scas
push
shrl
das
sbb
test
popf
rcrl
loop
mov
push
pushf
mov
into
or
cmpsb
shll
xchg
add
pop
and
inc
ljmp
or
and
add
addb
xor
sarb
xor
add
push
xchg
xor
out
mov
ret
dec
mov
int
lods
dec
jmp
xchg
aaa
xchg
cmp
xchg
pop
fsts
cld
dec
sbb
addl
stos
push
sbb
pop
adc
ja
sub
jecxz
scas
cli
sbb
adc
jg
and
pop
dec
lcall
or
sbb
mov
xor
adc
jmp
pushf
jp
loop
fcompl
push
fistpll
pop
jne
roll
add
add
call
inc
cmpsl
push
inc
negl
pop
mov
hlt
xor
mov
jp
mov
imulb
push
or
cmp
in
xor
lea
lods
inc
jne
sbb
enter
out
xchg
rorl
push
popa
aaa
mov
cmp
pop
repz
xor
outsb
les
adc
inc
daa
cld
pop
mov
shll
dec
jb
add
pop
fistps
mov
das
inc
out
pop
in
aam
cmpsb
inc
adc
gs
scas
add
pop
pop
cmp
jp
repz
jae
cmp
out
fidivl
repnz
movsl
dec
sbb
mov
sbb
xor
imul
addl
mov
je
int
scas
adc
adc
jecxz
dec
xor
addr16
lea
hlt
mov
gs
adc
arpl
push
pop
add
cld
lods
add
sbb
mov
popa
shll
js
or
pop
pop
sub
out
push
xorl
lods
adcb
sarl
rolb
mov
add
inc
push
js
in
jecxz
scas
outsl
xlat
cmp
sbb
xchg
adc
xor
lret
or
imull
stc
push
sub
scas
inc
rorb
fsubrp
ret
iret
adc
movsb
push
clc
sbb
orb
push
pop
or
lahf
jne
mov
cli
xor
adc
sbb
and
out
cmc
mov
sub
js
xchg
cld
or
mov
out
stos
sarb
sbb
enter
jp
movsl
mov
mov
cltd
jnp
xor
inc
cmp
sbb
shl
adc
test
adc
loop
jmp
mov
je
daa
cmc
pop
pushf
rcll
bnd
leave
cmp
leave
push
hlt
sub
mov
repnz
pop
mov
mov
movsl
fistl
jg
cmpsb
int3
jne
ss
ljmp
cs
pop
jnp
mov
adc
fstpt
sbb
adc
aaa
add
and
test
pop
sbb
xor
adc
xor
div
jle
mov
xchg
add
cmpsb
dec
inc
xchg
mov
cmp
loop
repnz
add
mov
pop
mov
icebp
adc
rorl
cld
arpl
mov
dec
cmpb
les
cmp
or
sbb
push
jmp
push
mov
cmc
mov
jne
pop
pushl
je
out
sti
in
mov
push
or
inc
mov
push
shr
rorl
push
out
cmp
jecxz
fstl
add
xlat
inc
xor
mov
add
jmp
mov
mov
lods
dec
jo
jae
rcl
fsub
iret
call
pushf
dec
rcr
or
mov
xor
dec
mov
xor
dec
fcoms
js
xchg
insb
out
xchg
inc
mov
pop
add
outsl
sbb
jbe
mov
adc
or
insl
stos
fisubrs
outsl
adc
iret
je
xor
cwtl
xchg
bound
leave
stc
iret
js
out
pushf
sub
cmp
scas
lret
ret
shr
lahf
shr
pop
aas
adc
cmp
stos
jp
loop
add
cli
stos
into
fsts
out
jae
out
imul
sub
xchg
test
repz
daa
fimuls
cmp
mov
dec
fidivs
jmp
repz
mov
xchg
mov
cmp
xor
iret
scas
out
shll
out
mov
sbbb
sub
ja
mov
aas
xchg
inc
push
adc
add
popa
cld
stos
pop
and
test
shll
push
sub
lahf
xor
shll
imul
jmp
sub
jne
imul
enter
xchg
jne
jg
inc
out
add
mov
and
inc
mov
dec
out
rclb
xchg
movb
mov
sbb
cmc
xchg
daa
test
adc
cmp
sbb
std
cli
sarb
out
imul
js
lret
out
out
and
data16
pop
pop
in
push
jne
repnz
icebp
jae
shr
adc
sbb
loope
jne
das
out
sahf
mov
repz
lahf
aam
pop
lock
int
dec
mov
movl
push
xor
xor
xor
fisubrl
xor
mov
comiss
out
mov
insl
pop
repz
sub
out
xor
xor
pop
das
adc
mov
sbb
in
mov
push
int3
lahf
imul
add
and
lcall
ds
loop
cmp
aad
sub
sbb
push
xchg
and
insl
xor
sbb
ss
hlt
lret
leave
cld
mov
out
pushf
cmpsb
leave
js
loopne
arpl
xor
in
arpl
mov
inc
movsl
addr16
lods
andl
lret
fldcw
cmp
repz
rclb
call
rorb
fdivs
dec
jo
addb
mov
push
incl
dec
ret
push
cmpl
stos
mov
xchg
adc
cmpsb
or
mov
cmpsl
cmp
repz
mov
in
mov
fists
shl
roll
out
mov
xlat
lret
or
ljmp
in
loopne
adc
jp
mov
pushf
out
in
pop
and
mov
stc
xchg
insb
mov
jmp
add
jle
pop
decl
cmp
lea
scas
mov
add
or
idivl
jmp
jg
loop
mull
scas
out
dec
mov
mov
gs
cmp
xchg
pop
cs
mov
mov
jns
push
out
mov
iret
push
out
mov
dec
jae
das
push
cmp
decw
movsb
sarb
repz
xchg
xchg
dec
push
cs
xchg
xor
jg
clc
sbb
xor
or
cmp
pop
adc
loope,pn
jmp
push
aas
dec
mov
rolb
adc
xchg
mov
scas
mov
dec
jmp
add
les
adc
xor
cmp
test
out
fcompl
call
sub
mov
out
jnp
leave
fwait
sbb
and
stos
je
nop
adc
test
adc
sub
faddp
out
adc
inc
je
or
mov
aaa
fdivrl
push
in
lods
nopl
dec
loop
xor
jns
ljmp
pusha
loope
mov
mov
lods
mov
mov
ret
cmp
jb
insb
mov
ror
adc
gs
cmp
addb
mov
shl
fcom
enter
xchg
mov
sub
adc
dec
push
inc
mov
inc
add
out
sub
arpl
xor
out
add
out
stos
and
int3
sub
stos
sahf
mov
shrb
pop
xor
mov
dec
gs
cs
test
cmp
or
sub
into
repnz
lcall
ja
or
push
and
stos
imul
mov
fwait
cmp
adc
xchg
jl
mov
out
mov
in
and
push
loop
sub
xchg
jl
mov
sbb
mov
mov
mov
dec
adc
scas
lods
mov
cmp
repz
sti
push
pop
cli
dec
sti
arpl
adc
imul
and
push
lds
cmp
test
jb
and
clc
adc
sti
push
movsl
into
ret
push
out
mov
push
repz
or
xor
rorb
lods
jmp
push
clc
jmp
out
cmp
adc
fmul
shll
mov
lock
repz
add
and
mull
mov
pop
mov
test
ret
push
lods
rcl
mov
cli
mov
push
mov
stc
aam
js
enter
mov
sti
repz
fucom
add
shll
mov
negl
sbb
ret
out
cmp
xor
cmp
push
div
int3
jmp
sub
adc
icebp
xor
pop
in
fwait
ljmp
nop
sub
adc
lahf
daa
stc
test
in
in
jmp
cli
out
sbb
or
sbb
or
cmp
cs
rcrl
and
push
sub
push
jbe
xchg
mov
push
fnstsw
adc
sahf
mov
mov
mov
mov
pop
out
xor
mov
scas
pusha
in
movsl
jl
test
push
or
jg
add
inc
icebp
call
out
fisubs
adc
outsl
in
clc
pusha
icebp
lods
mov
or
push
cmpsl
jl
jae
cs
iret
aas
mov
testl
in
sahf
push
mov
or
jmp
mov
add
lds
cmp
adc
in
mov
xor
out
cmp
aaa
mov
dec
sarb
mov
jno
jmp
mov
xchg
sbb
sub
mov
push
cmpsb
sub
and
loop
pop
dec
sbb
mov
cmp
das
xchg
in
inc
bound
shlb
mov
sub
out
lock
dec
out
sub
sbb
inc
cmp
jb
sbb
fstpl
data16
jl
fidivrs
sbb
cmp
pop
addr16
mov
lods
pop
in
inc
clc
jmp
ret
add
pop
lret
scas
cltd
mov
sbb
xor
push
clc
subl
dec
jb
test
jmp
mov
pop
into
into
sbb
dec
adc
mov
jnp
dec
and
sub
dec
jns
les
jmp
hlt
and
lods
imul
stos
in
in
dec
es
xor
stc
ds
push
xor
pcmpeqb
je
jo
addb
inc
gs
cmp
in
push
mov
mov
enter
fwait
aam
iret
outsb
jbe
cmc
popa
roll
movsb
cmp
pop
cmp
mov
test
cmpsb
fidivrs
test
dec
cmp
push
jo
cmc
lret
movsl
jbe
imulb
ret
sub
or
jnp
mov
addr16
lods
push
cmp
ljmp
xchg
add
mov
inc
sbb
add
mov
ljmp
ljmp
and
fwait
cmp
mov
in
inc
ret
and
out
inc
fwait
movsb
sub
pop
ffree
inc
ret
and
ficompl
stos
adc
rcr
sbb
xorb
xchg
lahf
or
ffree
pop
les
inc
fists
pop
rclb
dec
loopne
aas
dec
dec
outsb
out
aaa
sbb
roll
mov
ds
iret
push
jg
lret
sub
xor
and
or
mov
and
pop
pop
pushf
or
pop
xor
inc
pop
dec
lds
and
ret
sub
cmc
pop
pop
xchg
dec
mov
mov
in
adc
xchg
aas
cli
aad
push
gs
gs
sub
pop
mov
enter
cmp
pusha
dec
adc
jl
adc
adc
cmp
sbb
xor
jne
or
adc
jnp
sbb
adc
fisttpl
rcll
dec
push
ja
fsubrs
add
mov
test
sbb
lods
push
add
dec
adc
jne
adc
hlt
add
cmpsl
xchg
adc
xchg
idivb
cmp
adc
jecxz
dec
cltd
mov
adc
sub
mov
xorl
nop
stc
scas
push
adc
sti
push
and
mov
scas
push
dec
or
pop
xchg
lahf
mov
jge
push
push
jne
pop
rcrb
add
imul
stos
xchg
push
ss
dec
test
ss
dec
scas
fwait
enter
js
jmp
mov
push
mov
cmp
js
xor
fmuls
popa
sar
scas
dec
cmp
push
pop
or
pop
fcompl
leave
jge
dec
xchg
mov
sti
into
subb
dec
ljmp
dec
cli
cltd
mov
shll
mov
lcall
mov
mov
dec
or
jnp
or
lods
insb
testb
jge
mov
rorw
imul
sbb
sub
push
notl
aam
into
jo
xchg
mov
jmp
int3
divl
or
aaa
je
filds
addl
call
jne
dec
call
adc
stos
mov
stos
faddl
mov
mov
ja
leave
adc
mov
sti
push
xlat
mov
and
das
add
xchg
or
adc
es
divl
in
xor
sahf
mov
test
pop
inc
movsb
mov
shr
call
mov
mov
push
in
scas
push
pop
loopne
cmp
mov
sub
daa
and
sub
sbb
nop
imul
pusha
xchg
je
cld
jbe
and
add
adc
cs
add
sub
mov
or
adc
add
pop
stos
lahf
repz
dec
sti
or
mov
cmp
mov
or
daa
scas
ret
shrl
pop
xor
stos
push
adc
jl
xor
lret
xor
fcompl
je
popl
fwait
stc
pop
testl
and
lret
sbb
clc
add
add
xchg
or
sub
cmc
mov
add
loopne
test
int3
daa
mov
fldcw
in
jg
sti
pop
push
add
jge
mov
loope
cmp
shlb
xor
sarb
scas
stc
into
fidivs
mov
inc
ret
aad
push
mov
cmpsb
outsl
pop
scas
push
shll
mov
or
es
mov
xchg
dec
cmp
jecxz
ljmp
push
fsubp
out
mov
shll
mov
aad
xchg
psllq
jmp
aad
test
pop
shlb
cmp
loope
sub
into
jno
push
jae
xchg
ljmp
fwait
cli
and
loopne
and
out
mov
mov
mov
cmp
push
movsb
push
fucomip
out
loop
or
adc
pop
mov
imul
and
sbb
or
test
adc
ss
out
out
dec
mov
int3
cmp
rcrb
imul
pop
movsb
mov
jmp
sbb
sbb
push
sub
push
sti
lret
sub
cltd
loopne
push
out
loopne
call
leave
adc
nop
ret
movsb
xor
jne
into
cld
pusha
add
fbld
jbe
pop
jae
push
notb
test
in
dec
cmp
mov
fs
nop
sub
in
jmp
lock
fistpl
lahf
cld
stos
rorb
daa
jnp
mov
add
repz
fnstcw
mov
aaa
pop
cmp
or
inc
nop
pop
fwait
arpl
sar
mov
test
or
pop
insl
int3
out
jmp
mov
pop
push
enter
jae
mov
mov
stos
sarl
push
call
sub
cmp
mov
pop
movsb
dec
jo
dec
push
andb
in
lret
push
xor
and
lds
sub
or
test
pusha
test
jmp
imul
sub
rcrl
or
in
ficomps
mov
or
add
stc
sub
out
mov
test
adc
out
addb
or
xchg
sbb
in
lds
shr
out
das
push
out
out
repnz
in
mov
stc
pop
adc
repnz
sbbl
mov
jne
in
jl
and
or
fnstcw
pop
lcall
inc
ljmp
add
pop
dec
mov
pop
sub
fisttpl
pop
sub
pop
neg
loopne
stos
sahf
xor
jno
pusha
add
adc
mov
enter
adc
loop
rdmsr
xor
mov
adcl
mov
jmp
cld
jl
push
sub
jnp
clts
push
stc
mul
sub
sbb
ljmp
sbb
add
mov
movsl
lods
mov
mov
jp
jg
xchg
nop
dec
xchg
out
iret
out
dec
mov
xchg
cmp
jl
js
mov
xor
lods
cwtl
cwtl
dec
sub
aaa
lret
fdivrs
lahf
repnz
jmp
mov
jge
jmp
hlt
repnz
jl
stos
fimull
jae
and
sub
ret
mov
int
mov
pushf
repz
popf
out
lret
and
fucomip
and
push
test
daa
mov
jae
pop
xchg
das
int3
movsb
cmc
addr16
inc
into
add
lock
rorb
push
ljmp
xchg
cs
xor
inc
aaa
js
stos
mov
cmc
mulb
xchg
fwait
icebp
popf
out
pushf
push
adc
pop
mov
incl
sbb
mov
inc
sbb
add
mov
int3
cmp
ja
das
cltd
push
add
adc
aad
jbe
fwait
sbb
add
push
mov
mov
push
fs
lock
aas
inc
cmc
mov
ja
in
inc
and
mov
cmpsb
mov
cmp
push
cltd
lods
xchg
cmp
movzwl
test
jns
jnp
inc
and
cmpsb
add
push
lods
rcrl
inc
neg
mov
xor
mov
outsb
in
inc
jmp
neg
sub
and
enter
jg
sub
pusha
rorl
sub
js
jge
addl
int
out
incb
mov
or
push
fbstp
or
jbe
or
je
xor
sub
mov
adc
cmp
popa
mov
cltd
or
sti
mov
addr16
repnz
test
enter
in
mov
int
and
call
pop
shlb
data16
ja
imul
and
add
cmp
jb
cmpsb
icebp
mov
adcb
fistpl
cld
fiadds
cltd
add
andl
push
cmp
mov
rcr
aam
xchg
into
aaa
and
sbb
sbb
push
mov
and
jb
scas
xchg
push
jp
fisttpl
test
test
enter
out
sbb
rorl
and
leave
xor
pop
lcall
dec
int3
mov
aas
hlt
hlt
xchg
fstpt
js
dec
repz
adc
dec
push
js
fcomps
out
shl
imul
pop
push
push
cmp
inc
and
mov
dec
jno
pop
test
adc
addr16
xchg
daa
imul
das
push
das
jmp
stc
std
call
jecxz
xchg
mov
sbb
pop
imul
cmp
or
jecxz
lret
lods
jne
ret
jbe
inc
outsb
repz
pop
and
adc
xchg
pop
or
imul
and
imul
lahf
fistps
jno
cmpsb
mov
mov
mov
ret
adc
stos
daa
mov
shl
sub
sbb
adc
and
lret
dec
out
add
daa
xchg
iret
mov
jnp
inc
adc
mov
mov
sbb
cmpsl
cli
jb
loopne
cmc
add
adc
xlat
cmp
sbb
or
adc
mov
iret
push
adc
mov
cmp
mov
and
mov
ds
into
mov
js
cmp
inc
adc
jge
push
idivl
arpl
sub
push
add
leave
out
cld
mov
les
test
rolb
pusha
clc
mov
adc
sub
mov
ljmp
mov
jmp
jle
mov
jmp
add
rcll
arpl
mov
jmp
rorl
xchg
cwtl
cld
mov
fdivl
mov
adc
inc
fiaddl
and
pop
pusha
fwait
dec
outsl
out
arpl
les
jnp
out
iret
loope
lock
add
notl
mov
push
jno
pop
jae
rcrb
fnsave
mov
push
adc
call
test
mov
fistl
scas
movsb
push
data16
xor
jmp
icebp
mov
outsl
jg
movsb
jbe
stos
leave
mov
push
mov
sub
sti
mov
subl
in
mov
pop
add
pop
gs
ja
pop
push
xchg
int3
mov
mov
fld
shll
repz
xor
decl
leave
mov
test
mov
test
mov
and
popa
jnp
mov
sahf
stos
add
push
filds
outsb
xor
lcall
push
int3
stc
pop
test
and
and
mov
fadd
aad
mov
imul
punpckhwd
cli
call
or
out
jae,pt
mov
pushf
fsubl
mov
jmp
popa
mov
jne
in
cmp
lahf
dec
add
fistpll
sub
jb
lret
push
loope
mov
mulb
notb
mov
rorl
arpl
or
xor
repz
les
push
mov
outsb
lds
push
and
xchg
pop
cmp
sarb
pop
cmp
out
fucomip
scas
and
jno
push
aam
or
scas
dec
or
in
or
pop
frstor
push
mov
mov
push
sub
or
xchg
push
rcpps
ficoml
and
push
jecxz
mov
pop
test
sub
push
mov
add
jp
xlat
pop
call
jbe
cmpb
sbb
cmpsl
insl
mov
and
rorb
into
sbb
icebp
or
fs
add
xchg
shll
scas
sub
pop
dec
xor
div
jne
stos
xor
aas
js
dec
repz
std
insl
mov
push
xor
pop
lahf
in
mov
ja
jo
fstpt
scas
or
jno
ds
and
pop
and
das
dec
fsubl
sti
jecxz
mov
push
inc
repnz
xor
add
pop
scas
jnp
out
adc
lcall
les
out
enter
xchg
daa
add
mov
add
outsl
leave
aad
push
sar
push
and
push
push
dec
lret
jbe
pop
icebp
jne
mov
dec
pop
mov
punpckhwd
sti
or
enter
in
dec
sarb
sbb
and
sti
sbb
jmp
push
icebp
aas
mov
adc
mov
adc
add
mov
dec
mov
or
sbb
add
adc
shlb
ljmp
or
stos
mov
jmp
adc
mov
cli
rol
clc
in
push
push
test
and
ret
mov
sti
add
pop
mov
es
popa
inc
insl
and
mov
icebp
push
pop
adc
or
imul
fnsave
fsub
xor
movaps
es
test
pop
sar
mulps
cmp
dec
iret
cli
sub
or
xchg
adc
adc
xor
dec
cld
jmp
out
xchg
fdivs
fistl
inc
xor
stos
adc
lds
mov
in
ret
mov
nop
test
or
and
mov
les
es
cmp
sbbb
movsb
dec
sub
sub
loop
cmp
xchg
jmp
int3
xchg
add
jno
xor
sbb
mov
lods
mov
cld
push
dec
adc
test
out
aas
call
aad
out
int
push
and
repz
mov
cli
add
mov
call
and
sbb
lods
out
sub
sub
xor
jae
sti
fistl
lock
ret
push
ss
pop
and
mov
mov
ss
xor
pop
test
lret
jg
push
mov
mov
xor
lret
ret
sbb
mov
std
int3
cltd
push
pop
adc
repz
mov
loopne
in
outsb
pop
jo
daa
push
out
sub
sub
inc
jne
or
add
rorb
or
adc
adc
mov
cmc
xchg
loope
cmpsl
add
push
sti
sahf
mov
rorb
sub
sbb
or
adc
sbb
das
outsb
xor
mov
xchg
in
cli
ret
mov
pushf
xchg
pop
sub
or
leave
add
aaa
fwait
jae
add
adc
xchg
or
xchg
add
cmp
cmp
stc
insl
and
add
mov
rol
ret
push
mov
jb
mull
sbb
movsl
jno
sbb
stc
pop
cmp
adc
mov
and
std
mov
add
mov
in
sahf
mov
dec
mov
jl
stc
es
xor
daa
inc
outsl
lea
loope
cs
sub
xchg
popa
jp
dec
in
sbb
outsb
jge
mov
into
ja
cmp
dec
stos
daa
dec
inc
cmp
movsb
icebp
sub
sbb
lahf
mov
addr16
mov
mov
inc
mov
sub
mov
test
shrb
add
lods
cli
ret
pop
shlb
push
or
in
and
push
jbe
ljmp
pop
mov
dec
add
mov
adc
dec
inc
pushf
add
mov
pop
loopne
bound
in
jl
sbb
mov
sub
aaa
and
cmc
cltd
shr
js
jbe
sub
mov
pusha
mov
mov
push
mov
sar
jnp
mov
mov
es
ja
mov
sub
mov
or
adc
adcl
in
mov
loope
fadd
iret
mov
roll
and
inc
lret
push
into
pop
movsb
xlat
dec
mov
out
mov
pop
call
cld
xchg
lret
xchg
jp
dec
mov
sbb
stos
mov
fcomip
push
aad
mov
in
push
fdivl
shl
mov
shrb
and
mov
into
es
test
sbb
jg
cli
cmpsl
add
int
ficomps
xchg
push
jl
sub
inc
and
xlat
andb
push
lds
cmp
test
daa
mov
cwtl
inc
jmp
mov
ss
ret
popa
mov
adc
pop
push
dec
xchg
icebp
scas
cmp
mov
push
jmp
pop
xchg
mov
sub
das
jne
mov
ret
jg
jmp
jge
ret
sub
pop
pop
xchg
mov
xor
push
inc
sbb
jo
or
xlat
rol
xchg
lea
xchg
mov
jecxz
cmc
pop
fists
mov
adc
stc
pusha
je
push
mov
mov
cmp
iret
mov
pop
cmp
lock
pop
daa
lods
scas
sub
lods
movsl
sbb
push
out
pop
sti
out
mov
popa
mov
enter
fistpl
inc
dec
mov
xor
mov
lret
fcom
or
mov
mov
jbe
mov
cld
stc
pusha
sahf
xor
push
mov
xchg
jne
movsb
push
dec
inc
sbb
roll
dec
mov
xor
popf
mov
jns
out
or
loop
out
fsubr
cmpsb
adc
mov
fistpll
or
in
sub
imul
xor
xor
or
xor
dec
adc
pop
and
jge
je
xlat
int
adc
in
sub
out
sbb
push
out
sub
cmp
jecxz
add
mov
push
ljmp
push
mov
in
iret
push
xor
fst
xchg
xchg
rdmsr
xor
cmc
or
adc
popa
push
sbb
adc
cmpsl
cmp
pusha
repz
sbbl
repz
in
ljmp
out
ljmp
sbb
enter
ljmp
mov
pop
adc
push
dec
add
enter
inc
hlt
sbb
mov
imul
or
popf
in
jnp
ficoms
in
rorb
rcrl
pop
cli
xchg
ljmp
icebp
pop
loopne,pn
scas
jnp
adc
adc
sub
out
cmp
test
jge
fdivl
xchg
jp
lods
pop
or
incb
mov
inc
and
sti
sbb
xor
stos
jecxz
sub
out
ret
push
stc
pop
xchg
fstpt
cmp
jecxz
lretw
jmp
int
das
add
or
sbb
or
das
pushf
fsubl
sbb
xchg
sbb
and
roll
mov
mov
xor
mov
test
fbstp
data16
mov
outsb
sub
xchg
repnz
adc
std
loop
lret
pop
jmp
push
xor
ljmp
xor
or
out
out
push
subb
fadd
icebp
sbb
xor
fcoml
cmp
cli
jecxz
xchg
adc
loopne
popf
in
sbb
adc
fadd
mov
mov
imul
int3
sub
sarl
es
xor
pop
mov
xor
stc
cmpsb
pop
popa
xchg
das
lods
cmpsb
push
dec
fs
push
xor
ret
pop
dec
mov
ss
sub
pop
daa
xor
insl
repz
jge
xor
sub
fsubl
out
mov
mov
test
insl
jmp
out
out
push
jl
jmp
sbb
fs
ljmp
sbb
adc
lods
ret
addb
das
inc
lods
pusha
xor
call
movsb
adcb
inc
pop
addr16
jmp
cmp
lds
dec
xchg
aas
or
test
adc
jp
mov
in
jecxz
lods
mov
popf
mov
pop
xchg
adc
inc
rcrb
inc
in
bound
xlat
fs
leave
test
dec
mov
ds
cld
cwtl
ret
jns
mov
in
add
add
divl
or
int3
sbb
adc
repz
add
in
inc
and
pushf
mov
out
cmp
jne
sbb
in
adc
adc
pop
insb
adc
decb
xchg
pop
push
push
lcall
or
cmpsl
add
lar
pop
enter
loope
sbb
stc
in
mov
pop
add
insl
adc
cmpsl
mov
or
in
jb
pusha
and
xor
cld
mov
cmp
sbb
clc
rorl
cmp
push
int3
sbb
push
push
adc
popa
push
or
stos
or
sub
out
and
or
pop
or
out
int3
mov
adc
lret
or
add
push
sbb
cmpsl
mov
fstpl
dec
jmp
outsl
add
les
mov
repnz
jl
mov
xchg
cwtl
repz
or
add
xchg
lcall
adc
and
or
pop
adc
loopne
cld
push
push
adc
jb
or
pop
or
out
mov
test
stos
jl
fnstenv
jo
xor
xchg
sbb
jg
sbb
shlb
lods
mov
push
addl
add
cld
shll
repz
sarb
and
mov
shl
scas
sub
movsl
daa
icebp
jae
sub
and
mov
push
pmaxub
fisubrs
ret
lock
iret
mov
jl
pop
leave
push
mov
adc
sbb
jg
pop
dec
cld
add
inc
inc
shlb
and
adc
js
jno
rcr
out
cmc
push
cld
sti
mul
test
push
and
mov
mov
adc
inc
jp
and
xorb
cld
xchg
jb
jns
adc
sub
xor
push
out
adc
out
sbb
mov
negl
ret
xchg
ljmp
mov
pop
push
rep
and
xchg
xchg
mov
test
push
add
or
gs
movsb
inc
xchg
dec
mov
jns
imul
pop
jo
jg
pop
and
sub
and
mov
cmpsl
sub
sahf
pushf
pop
sbb
or
or
mov
imul
mov
std
jno
mov
js
icebp
sbb
fimuls
and
xor
xchg
add
inc
aas
sbbl
test
cmp
jg
push
subl
push
aam
cmpsl
mov
scas
stc
fwait
jns
sub
sbb
adc
mov
cli
jae
xchg
xchg
mov
test
popf
push
push
mov
mov
leave
cwtl
test
scas
ds
imul
add
jge
xchg
scas
out
out
dec
mov
sbb
mov
cld
push
pop
mov
arpl
fstl
pop
mov
cli
enter
add
pop
and
cld
xchg
scas
pop
lret
movswl
pop
jge
outsb
xchg
les
loope
adc
mov
adcl
pop
mov
nop
pop
inc
test
leave
add
cltd
es
jmp
rcl
imul
pop
ret
jle
xchg
xor
neg
inc
aad
in
add
fdivrl
mov
subb
cmp
xchg
fildl
jl
paddusb
nop
sbbb
js
cltd
and
divl
aaa
repz
test
bound
push
adcb
jmp
mov
sbb
shrl
test
jmp
mov
out
rolb
push
mov
rol
daa
popa
inc
lock
es
and
pop
ffreep
xchg
rcrl
adc
in
mov
iret
les
iret
ret
insl
or
adc
addl
or
out
lds
sub
xchg
std
adc
pop
clc
inc
adc
inc
dec
mov
outsb
ja
push
lea
ret
std
iret
jnp
testb
outsb
stc
lret
popa
and
pop
cmp
xlat
pushf
mov
jne
fcomps
in
sub
cmp
adc
cmc
jl
ret
push
lods
jecxz
in
mov
jle
movsb
xor
leave
xor
int3
bound
lds
out
jecxz
mov
inc
movl
test
xchg
xor
push
cld
inc
cmp
ds
or
push
push
jbe
push
sub
in
pop
aad
cmp
shl
testl
fsubrl
out
inc
cwtl
adc
mov
mov
jmp
mov
sub
mov
adc
mov
movsb
loop
dec
dec
mov
iret
test
or
mov
adc
lds
mov
lea
push
lea
popf
dec
jle
push
pop
outsl
jle
gs
or
jns
sti
adc
pop
dec
int3
sahf
sti
pop
add
dec
rdpmc
jecxz
mov
sti
das
dec
pop
inc
jbe
cltd
scas
dec
inc
loope
sub
dec
mov
fidivrl
ds
xor
enter
test
or
jnp
inc
aam
mov
or
mov
adc
leave
push
ljmp
ret
dec
pop
push
aaa
clc
cmp
prefetch
or
inc
iret
andl
popf
arpl
inc
sbb
jle
mov
xchg
mov
scas
dec
lret
mov
mov
popa
push
in
push
test
movsb
fisubrs
push
aam
jp
std
shrb
and
xchg
mov
shlb
jle
test
mov
xchg
or
lods
dec
mov
xor
xchg
in
and
push
sti
cmc
aam
fistpl
mov
dec
loopne
insb
loop
xor
out
xchg
mov
add
add
jmp
rorl
cwtl
outsl
dec
push
sub
call
add
mov
dec
inc
stc
sbb
cwtl
sarb
mov
ret
sti
fdivrs
test
sub
cmp
int3
push
xchg
and
add
imul
and
xor
and
inc
in
in
or
sbb
aaa
outsl
pcmpgtd
dec
rcll
loope
xchg
js
mov
pop
push
lret
add
movsl
mov
xor
mull
aaa
mov
cs
out
cmc
inc
adc
or
fld
push
lret
cmp
shl
xchg
dec
add
cli
adc
push
jg
ret
dec
ret
aam
packsswb
and
sbb
pop
daa
rclb
es
add
add
cmp
jl
lods
push
iret
xchg
imulb
sbb
fsubrs
roll
adc
imul
sahf
push
in
mov
xchg
add
notl
xchg
add
pop
mov
std
sbb
pop
pop
iret
cmc
aam
add
stos
add
pop
inc
or
lods
ja
loop
ja,pn
xchg
push
movsl
es
sub
mov
pusha
or
mov
sbb
out
movsl
cs
or
push
mov
xlat
test
mov
xor
xor
mov
out
or
push
add
or
jnp
mov
cmpsl
arpl
mov
mov
in
jl
fcmovnb
inc
sbb
notb
in
jbe
mov
push
std
fmull
mov
jmp
rcrb
out
mov
adc
add
or
fwait
pop
in
push
std
push
and
xchg
pop
std
push
jmp
sbb
push
cwtl
and
decl
lret
mov
xchg
cmp
or
or
sub
fwait
pop
in
cld
push
and
xchg
inc
std
neg
es
mov
in
pop
pop
std
idivl
and
cmp
or
or
sub
fwait
jnp
scas
cld
push
mov
fdivl
stos
mov
in
sbb
jmp
cld
mul
or
jecxz
jo
dec
cmp
or
repnz
insb
sub
sub
xchg
xchg
jg
mov
data16
mov
in
movl
aam
pop
out
push
out
adc
cmp
out
out
sbb
pop
fwait
mov
and
fwait
std
mov
mov
mov
jecxz
mov
cld
mov
out
and
push
fsts
outsb
adc
add
aaa
adc
lcall
xchg
mov
jp
cmpsb
fwait
mov
in
mov
jns
jnp
test
imul
push
out
adc
lret
outsb
repnz
pop
sbb
arpl
cmp
cld
lcall
sbb
mov
fisubs
push
iret
call
mov
pop
jae
fs
cmp
or
test
xchg
xor
sub
adc
out
loop
cmp
mov
jp
hlt
inc
cmpsb
mov
dec
imul
enter
mov
insb
data16
add
xlat
mov
cmp
or
setne
pop
add
out
pushf
data16
neg
aad
and
cmc
cmp
sbb
push
inc
nop
adc
sbb
push
push
adc
or
or
push
lcall
and
xchg
mov
lahf
mov
notb
js
jnp
mov
mov
xchg
sbb
in
fsts
movsl
mov
pop
inc
add
rol
incl
cmp
sbb
imul
icebp
push
rcl
ret
push
cmpsb
mov
popf
jb
dec
enterw
pop
icebp
and
cld
lret
add
pushf
xchg
shrb
or
pop
leave
push
pop
out
int
push
mov
aaa
ret
mov
cmp
lods
mov
lods
dec
jg
out
shrl
popa
out
mov
mov
pop
les
jecxz
or
mov
shrb
jl
aam
push
xor
mov
mov
test
imul
leave
sbb
and
movsb
out
sti
adc
ret
fld
add
mov
push
xor
pop
pop
cmc
cmp
push
sub
int
cmp
loope
int
pop
iret
mov
gs
mov
popf
mov
and
sti
into
sahf
sub
scas
cmp
mov
sbb
jbe
movsl
sarb
movsl
sub
repz
lahf
insl
rol
push
cmp
sbb
sbb
and
stos
hlt
call
sbb
dec
mov
mov
pop
xchg
inc
mov
aas
icebp
inc
aaa
shll
adc
pop
push
in
movsb
outsl
ret
mov
push
push
xor
inc
iret
testb
in
lret
mov
pop
hlt
jbe
jg
and
adcb
imul
push
pop
dec
insl
xchg
xor
mov
frstor
pop
rcll
lods
or
test
or
cmp
sub
or
push
sahf
and
cli
lret
push
lcall
insl
loopne
adc
enter
fistl
das
inc
lock
pushf
rcl
cmp
adc
arpl
into
push
inc
adc
sarb
and
push
ror
dec
push
mov
jb
out
push
and
add
test
in
sbb
jne
fsubs
or
push
or
popf
fnsave
popf
adc
loopne
into
inc
adc
lock
in
adc
iret
sbb
sti
mov
cli
mov
in
cmc
aaa
hlt
lret
ss
nopl
sub
mov
call
push
movsb
xchg
pop
andl
out
jmp
dec
lret
int3
es
stc
lret
aaa
adc
cmpsl
and
xchg
into
test
mov
fisubrs
push
push
lret
data16
sbb
out
iret
fwait
andl
test
fcoml
sbb
cmpsl
adc
scas
dec
mov
lea
in
sub
sbb
adc
bound
xchg
cmp
xor
inc
out
adc
jg
lock
push
cmc
mov
push
mov
push
pop
dec
xchg
and
xlat
push
jmp
fimull
push
push
pop
neg
sbb
xlat
arpl
scas
push
shll
es
add
adc
flds
arpl
adc
insb
mov
or
ja
fildll
mov
iret
mov
jae
daa
jp
xor
idivb
fmuls
jae
mov
enter
add
jecxz
sbb
dec
jge
mov
sbb
imul
mov
sbb
loop
push
cwtl
pop
jb
je
test
ret
aaa
test
clc
fucomp
sub
mov
cmp
sub
fimull
add
dec
icebp
rclb
sub
adc
hlt
test
mov
insl
stos
je
sub
loopne
add
les
jp
das
out
push
pushf
adc
cmc
add
xchg
iret
xchg
mov
mov
inc
or
inc
adc
push
xchg
lods
jmp
lds
push
lods
mov
dec
add
and
dec
and
cmp
xchg
rorl
mov
or
pushf
in
xchg
mov
push
fdiv
rcrl
jae
mov
mov
pop
outsl
imul
call
jno
mov
add
adc
xor
fisubrs
dec
mov
orb
cmp
cmc
lods
data16
xor
add
pop
call
aad
test
fisubrl
or
fwait
cmp
cli
cld
sub
ret
negb
cmp
and
ss
adc
outsb
rolb
inc
pop
leave
mov
cmp
cmp
rcll
testl
jg
popf
and
sub
scas
in
divps
lds
pop
sbb
pop
xchg
data16
jmp
pop
mov
movsb
out
pusha
sub
dec
sti
adc
cmp
mov
jns
cmp
and
out
loop
mov
fistl
sub
add
fs
nop
stos
dec
insb
xor
inc
inc
aad
cmp
out
fldt
sti
mov
mov
inc
jle
out
add
jo
leave
mov
xor
loope
sbb
jnp
out
loopne
sahf
jo
cld
ljmp
in
pushf
mov
cld
scas
cli
adc
andl
add
notb
jb
int3
or
and
xchg
jg
loope
dec
js
and
ret
int3
jne
clc
inc
push
scas
pop
les
xlat
je
aad
leave
adc
mov
ficoms
xor
cmpsb
fwait
arpl
fwait
push
test
std
cmp
out
xchg
ljmp
mov
cs
stos
lahf
js
push
sbb
xor
aad
pushf
adc
cmpsl
std
xor
sti
mov
je
xchg
out
dec
sub
xor
mov
mov
or
sti
sub
js
idiv
testl
pop
mov
jno
add
shlb
sub
sbb
inc
mov
mov
idivb
sti
add
inc
pop
push
hlt
xchg
mov
inc
adc
cmp
add
sub
push
cs
stc
outsb
adc
mov
arpl
dec
adc
push
adc
xor
xchg
dec
xor
fwait
inc
adc
aad
int3
shll
xor
cld
cmp
and
push
test
js
sbb
push
je
scas
and
das
inc
add
add
inc
lods
lcall
in
xchg
dec
add
mov
stos
sbb
fnstsw
decl
mov
pop
rep
push
cmp
sbb
fldl
daa
push
das
xor
repnz
mov
bound
mov
insl
std
cli
ret
mov
add
adc
jg
lods
out
xchg
scas
aas
insl
jb
pop
inc
add
sub
mov
aam
cmp
test
xchg
sub
or
mov
jmp
push
inc
add
mov
ret
aas
mov
or
in
iret
inc
mov
pop
push
fwait
aaa
sbb
insb
popf
push
jge
dec
mov
jns
outsb
xor
pop
inc
pop
xor
jnp
dec
or
jp
out
fstpt
or
fcoml
lahf
pop
cld
mov
dec
imulb
fcmovbe
fsts
jo
mov
push
inc
data16
cmp
pop
lds
cmpsl
and
push
cmp
inc
pusha
xlat
dec
stc
mov
cmp
scas
adc
lods
adc
notl
adc
xchg
arpl
or
xchg
push
push
sbb
loop
adc
sbb
and
push
je
jne
push
lcall
std
push
xchg
mov
sbb
sub
dec
shrb
or
scas
lds
loope
cld
or
lea
dec
push
ljmp
or
push
das
mov
push
pushf
xchg
clc
sub
mov
xchg
movsl
add
call
or
jbe
jecxz
push
push
stos
loope
ret
xor
ljmp
adc
testl
push
sub
cmpsl
mov
add
sub
pop
imul
xchg
mov
mov
int
out
xchg
mov
out
imul
hlt
adc
hlt
or
mov
fs
nop
cmc
lock
push
sbb
xorl
in
decb
test
adc
pop
popa
mov
push
sti
add
cmc
add
rcrl
sbb
push
dec
xchg
scas
aam
and
mov
aam
push
xchg
addr16
nop
out
mov
push
cld
jmp
jge
adc
or
stos
jle
sbbb
insb
div
and
xchg
sub
dec
outsb
jne
ret
js
push
test
and
lods
test
jmp
js
adc
cmp
test
fwait
adc
repz
xchg
cmp
xor
mov
out
hlt
lcall
in
or
rcll
out
jmp
aad
inc
cmp
sub
and
mov
insb
rcrl
mov
movsb
dec
mov
icebp
sub
testl
dec
pushf
shrb
cltd
dec
jle
movl
pushf
aas
sub
cmp
or
or
and
test
cmp
pusha
push
imul
add
es
jl
xor
mov
aad
ret
xlat
xor
push
mov
cwtl
je
aad
int3
xchg
sub
leave
int
repnz
lds
cltd
fadds
sub
fdivl
push
xchg
dec
ss
adc
dec
fucomi
jb
mov
add
and
test
and
jnp
lea
add
mov
fisubrs
mov
loop
cmpsb
adc
decb
aaa
test
in
sbb
stc
pop
int3
mov
push
stc
out
int3
ds
push
add
loope
xor
mov
xchg
or
repnz
in
sub
lcall
xlat
movsb
es
std
lahf
out
xchg
out
adc
stos
flds
cmp
adc
ds
dec
adc
aaa
insl
scas
or
int
adc
lock
mov
xor
repz
cmpsb
adc
mov
fcomps
bswap
cmp
cld
adc
fadds
out
xchg
sbb
fcomps
stos
adc
sbb
jae
cs
lods
dec
push
fld
or
fidivs
cmp
or
dec
les
clc
pop
dec
xlat
mov
cs
push
sbb
cmp
cs
cmpsl
outsl
lahf
push
mov
test
mov
int
add
lock
jmp
adc
cmc
inc
ljmp
es
sbb
push
test
pop
je
jno
leave
scas
mov
inc
andl
xchg
push
test
lods
mov
nop
push
pop
add
mov
fiadds
push
sbb
adc
ljmp
mov
xor
jo
popa
mov
and
adc
xor
cmpxchg
or
mov
or
mov
mov
int
mov
sub
sete
subb
pop
push
or
fwait
or
sub
add
cmp
xlat
and
sbb
and
adc
or
push
xor
outsl
jo
faddl
push
subl
mov
loope
push
in
sbb
pop
jl
cmp
push
cmpsl
lods
push
in
mov
sub
pop
jecxz
mov
jns
xlat
outsb
cmp
stos
xorl
pop
outsb
jno
clc
fwait
insb
adc
push
lcall
sbb
int3
cld
cmp
push
push
push
lret
je
xor
ret
incl
mov
dec
lret
ja
push
out
cmpsl
xchg
mov
rclb
push
movsb
nop
pop
cwtl
in
in
sbb
int3
xor
mov
repnz
or
dec
push
cmp
dec
into
sub
cld
je
cwtl
cltd
jp
aad
lret
pop
and
scas
add
stc
mov
jbe
cmpsb
jo
cli
scas
push
jbe
lods
mov
cmpsb
cmp
jno
jns
mov
cmpsl
jle
adc
mov
insb
out
sub
and
mov
xchg
mov
mov
fdivr
aaa
mov
ja
sbb
xor
mov
rclb
mul
lock
dec
cs
jg
xchg
push
mov
in
add
subl
repz
imul
jmp
sbb
mov
and
xchg
imul
shrb
cmp
pop
and
jns
shlb
xor
and
pop
nop
add
outsb
in
xor
lods
pop
add
fbld
xor
and
mov
sbb
inc
lods
or
sbb
sub
pusha
fcomp
std
bound
shl
xchg
out
mov
push
mov
dec
mov
out
dec
lods
cmp
imul
ret
cltd
scas
push
adc
mov
out
push
lahf
sbb
or
enter
ficoml
loopne
sbb
push
push
xchg
rorb
out
pop
jmp
mov
sub
fdivs
dec
fistpl
pusha
pop
mov
and
xor
out
dec
adc
jge
inc
hlt
mov
inc
shlb
push
pop
enter
ja
roll
stos
insb
jg
call
stc
jge
aam
sbb
mov
daa
push
mov
xchg
leave
xlat
jb
invd
call
pop
jno
lcall
shll
lret
jbe
mov
xchg
jns
sub
push
push
mov
js
jnp
mov
and
sbb
cmp
xor
jl
es
add
add
add
jne
dec
and
mov
pop
mov
sbb
ja,pn
insb
xor
fldt
xchg
mov
add
les
sbb
shll
mov
and
lock
imulb
pop
insb
push
arpl
cmp
not
xor
fnstenv
push
cmp
ja
adc
or
pop
fndisi(8087
cmc
lahf
xor
fwait
sub
lods
mov
daa
loop
popf
flds
aad
and
cltd
lret
jecxz
fwait
cmp
repnz
dec
sub
sbb
dec
in
lret
subb
add
sub
jecxz
jb
add
dec
adc
loopne
pop
fcompl
nop
imul
mov
mov
pop
push
or
sti
test
aad
int3
xchg
stos
xchg
pop
pop
push
jmp
xor
adc
movsl
sti
sti
pop
mov
mov
or
and
fldcw
arpl
out
lods
es
xor
xchg
or
pop
sbb
cwtl
loopne
insl
popf
mov
and
pop
in
rorb
sbb
inc
add
push
sbb
pusha
iret
adc
ljmp
pushf
call
and
xchg
out
cs
add
in
jb
push
icebp
icebp
in
arpl
mov
jmp
or
out
fsubr
pop
add
adc
adc
repz
stos
push
lea
ret
ds
movsb
push
cmpsl
add
dec
std
xor
sti
call
movsl
lods
sbb
sbb
push
cmpsl
aam
outsb
mov
in
jns
adc
jl
lret
repz
xchg
mov
repz
repnz
or
ljmp
in
cwtl
push
testb
aas
in
add
jnp
es
xor
mov
fdivr
sbb
lods
hlt
or
mov
add
sbb
notl
or
ss
outsb
cmp
jmp
das
push
or
adc
clc
std
push
loopne
inc
mov
in
aas
push
adc
aaa
mov
push
mov
add
stos
decl
sahf
outsb
pop
add
inc
fcom
pop
arpl
sub
imul
test
jmp
mov
pop
aaa
add
out
ja
sbb
pop
inc
aam
mov
sbb
inc
push
je
add
push
sbb
cmp
aas
mov
xchg
int
add
jmp
addr16
inc
inc
cmc
push
arpl
or
cli
rolb
movups
mov
sub
mov
ret
repnz
xor
mov
cmp
fwait
or
mov
in
rcl
fwait
push
in
sar
push
and
xchg
jecxz
shlb
xchg
cmp
mov
out
sub
lea
jno
add
js
or
jb
and
xor
fneni(8087
jecxz
daa
je
faddp
fdiv
jno
pop
jmp
lods
fwait
pop
lret
lcall
mov
popa
imul
dec
fisubs
outsb
or
pop
xor
fildll
inc
jmp
pop
das
pop
or
icebp
lret
mov
mov
cmpl
fs
pop
jmp
lahf
scas
test
or
out
xor
jmp
rorl
mov
jmp
mov
xor
stos
adc
push
sub
jns
cmp
repz
daa
bound
add
mov
jae
mov
jns
and
xchg
ja
jp
xor
inc
add
testb
pop
fimull
call
jns
sub
jnp
aaa
pop
push
cmp
out
pop
jp
scas
pop
cmc
add
movsb
mov
les
pop
es
mov
sbb
sub
outsl
push
fiaddl
mov
imul
popa
test
fnstsw
fsubs
lret
sti
or
pop
adc
testb
out
push
daa
xchg
push
sub
jnp
inc
daa
jae
icebp
pop
mov
testb
ljmp
imul
xchg
lea
sbb
lea
pop
fs
pop
mov
mov
and
jle
popa
cmp
jge
jae
or
mov
sarl
push
push
stc
std
pushf
mov
cmp
and
mov
sub
lahf
dec
lock
daa
es
pop
jmp
out
xor
and
fcmovnb
mov
jo
rclb
push
dec
pop
mov
cmp
pop
sub
fs
push
add
xchg
mov
sub
into
jno
lcall
pop
xchg
in
stos
enter
sahf
xor
popf
pop
cmp
fistpll
cmp
or
lds
outsl
mov
pusha
cmp
fiaddl
sub
ss
jne
stos
inc
inc
xchg
mov
in
xchg
push
mov
mov
mov
mov
test
fstps
data16
push
push
push
mov
pop
mov
jmp
add
mov
xchg
pop
mov
mov
sub
and
lahf
push
mov
negl
pop
sbb
stos
dec
add
repz
xchg
and
out
call
mov
aaa
mov
out
popf
sbb
inc
test
ljmp
sbb
or
sbb
into
push
or
sbb
and
sub
adc
inc
call
cwtl
or
sub
jl
lret
xchg
jmp
and
es
negl
paddb
add
lds
fwait
inc
and
ficompl
cmp
stc
cmpb
jecxz
leave
imul
shrb
or
ret
mov
cmpsl
in
mov
and
sub
cmp
xchg
jae
adc
push
xchg
mov
loopne
push
add
jge
mov
pop
shl
lods
dec
sbb
pusha
ds
int
cld
in
ja
and
in
pop
inc
rcrl
ret
shl
movsb
mov
sub
fcoml
and
cld
sub
and
push
sub
pop
shlb
pop
pop
add
mov
ds
inc
or
push
inc
sub
sub
sbb
pop
fwait
mov
