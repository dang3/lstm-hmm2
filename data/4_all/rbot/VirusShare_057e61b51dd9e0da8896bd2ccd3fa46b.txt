mov
jg
push
lds
pusha
vminpd
roll
xor
or
inc
les
mov
add
das
sub
loop
movsb
scas
or
aaa
stos
mov
mov
push
cli
mov
dec
pop
sar
adc
scas
mov
dec
insl
sub
outsb
stos
push
push
pop
popa
lret
std
pushf
jae
out
fnstsw
pop
movsl
in
sti
xchg
int
cmp
jecxz
cltd
xor
pushf
cmp
mov
ss
inc
lock
scas
lret
stos
out
adc
jae
cmpsb
stos
test
shl
mov
add
cmp
fbstp
jns
push
jl
imul
sahf
test
xor
movsl
adc
mov
cmp
hlt
inc
jp
lcall
and
or
jl
mov
add
jmp
xchg
scas
cmp
xchg
in
or
hlt
into
xchg
push
sub
add
sub
push
arpl
fnsave
or
xchg
sahf
flds
das
pop
fisubrs
sbb
jno
cs
sbb
fsubs
mov
push
add
shll
pop
adc
xchg
aam
out
mov
adc
ja
lds
data16
mov
lret
repnz
shl
aam
mull
addl
fs
mov
add
dec
fldt
iret
push
aam
xchg
lret
adc
icebp
sub
into
add
stc
fstl
imul
pop
aam
sar
xchg
fisttpl
mov
inc
sub
sbb
jl
hlt
cmpsb
flds
dec
xchg
outsl
adcl
les
push
dec
pop
push
bound
or
push
mov
push
lret
and
push
xchg
stos
dec
cmp
inc
ss
adc
mov
or
dec
fisubl
mov
ds
in
xor
add
inc
and
adc
andb
jne
sbbb
add
mov
add
inc
filds
mov
stos
push
or
fiaddl
xchg
push
pop
and
xchg
sub
mov
mov
clc
adc
adc
mov
into
insl
das
insb
jp
sbb
cmpsb
dec
sub
cmp
inc
sbb
sub
inc
push
gs
add
mov
rcl
scas
dec
mulb
inc
jecxz
adc
jnp
inc
lret
lods
repz
data16
popa
shlb
sbbl
mov
push
or
and
je
sbb
push
sub
into
fs
and
fcompl
dec
test
xor
jmp
loope
adc
cld
sarb
mov
sbb
dec
clc
xorb
lahf
push
lds
inc
mov
xchg
popa
aas
repnz
stos
mov
stos
xor
dec
mov
fisttpll
test
mov
in
rorb
mov
ret
adc
mov
inc
adc
sbb
sub
xor
mov
push
cmp
and
clc
jnp
loopne
sbb
loope
lods
sbb
out
push
call
add
pop
insb
test
sbb
adc
add
fisubl
push
mov
push
sbb
xchg
xlat
xor
shrl
inc
add
dec
adc
cmp
mov
daa
stc
jl
ficoms
lock
out
mov
jo
adc
arpl
pusha
daa
fs
call
scas
out
movsl
dec
or
xchg
lcall
iret
jnp
iret
fmuls
jg
pop
pop
aas
stc
dec
insb
out
add
fst
pop
add
xorl
pop
add
movsb
sub
inc
xor
push
push
xor
mov
stc
call
imulb
jbe
outsl
pushf
jne
cmp
int3
lcall
addb
addl
orb
and
scas
dec
dec
push
mov
stos
jecxz
cli
fidivrs
mov
pop
xchg
dec
sub
sti
test
inc
jg
insl
xchg
mov
out
add
cli
xor
push
lahf
push
test
mov
mov
fildll
inc
mov
or
call
mov
bound
inc
jp
cmp
icebp
jp
mov
adc
lldt
pop
popf
pop
sbb
and
inc
dec
inc
fsubp
xchg
andl
icebp
jo
xor
mov
mov
cli
subl
push
mov
and
testl
xor
xchg
sbb
xchg
sahf
movsl
mov
pop
aas
pop
or
stc
daa
mov
mov
leave
addr16
dec
mov
push
push
jmp
adc
popl
mov
sbb
jle
pop
fcomps
inc
mov
mov
add
mov
fcmovnb
cltd
ljmp
enter
push
jge
xchg
pushf
mov
gs
sbb
loope
pop
bound
mov
mov
xchg
adc
dec
ss
dec
pop
shll
inc
inc
sub
cmp
inc
shlb
outsb
movsl
and
mov
pop
out
xor
mov
sbb
addr16
sub
add
mov
cmc
push
push
cs
mov
inc
jb
xor
add
add
or
jle
out
add
mov
out
pop
dec
cmp
adcb
ficoms
enter
dec
mov
and
cwtl
cltd
aam
and
lret
jmp
dec
jb
addl
adc
dec
bound
add
ljmp
aaa
pushf
xor
xchg
loopne
cld
mov
and
std
add
les
jb
js
shrl
mov
pop
iret
cmp
daa
cmp
leave
xlat
push
push
and
scas
sti
mov
and
ds
xor
sbb
cwtl
xchg
push
lcall
and
stos
adc
push
daa
add
and
add
fst
and
int3
call
in
xchg
loopne
je
cld
popa
mov
and
push
sahf
push
inc
enter
inc
dec
cwtl
cwtl
ret
outsb
pop
dec
in
pop
jg
add
cltd
out
adc
dec
popa
loop
sub
lds
xor
xor
dec
call
fadds
add
dec
mov
jg
call
aam
inc
cli
imul
add
js
push
jns
push
pushf
jno
fisttpll
pop
mov
int
cmp
and
inc
jl,pt
sub
mov
test
dec
fiaddl
popl
cmp
push
and
mull
cmpsb
jae
cli
iret
bnd
inc
hlt
stc
popa
movb
test
or
icebp
inc
in
testl
imul
addr16
out
int
aaa
pop
fidivs
daa
cmpsb
mov
rcrl
sub
jns
xchg
mov
or
inc
jp
rcll
pop
fdiv
push
orb
mov
xchg
push
jne
or
xor
dec
inc
lods
stc
std
stos
jns
push
jg
jmp
mov
in
stc
jp
jmp
lahf
inc
cld
xor
out
les
aas
imul
fs
icebp
or
lock
in
xchg
lahf
sbb
arpl
add
mov
or
push
scas
int
loop
jns
mov
jg
add
stos
push
mov
mov
lods
cs
test
xchg
imul
mov
xor
insl
xor
in
addl
ja
dec
out
add
inc
in
daa
mov
es
out
inc
cld
pop
sbb
add
sub
mov
das
rorl
xchg
pop
push
sbb
shl
addr16
dec
pop
lret
jecxz
push
clc
xor
push
inc
inc
adc
sbb
or
xor
jmp
pop
cmp
xchg
iret
xlat
shlb
jae
test
mov
mov
nop
add
mov
or
iret
dec
push
mov
sub
push
mov
pop
test
mov
sbb
or
je
adc
adc
sbb
and
lock
pop
xchg
pop
addr16
loope
sbb
into
fildl
add
into
ds
add
adc
add
sub
icebp
xlat
lods
iret
leave
or
aas
sbbl
addr16
andl
sbb
add
orl
jnp
imul
sbb
ffreep
subb
cmp
mov
shlb
xchg
adc
in
pop
adc
jae
mov
fdivl
cltd
jns
loop
mov
sub
or
aam
xchg
add
test
xor
push
push
divl
cmp
push
iret
sbb
lods
jae
add
stc
popf
lods
lock
pop
cli
xor
pop
rclb
add
mov
jbe
hlt
sahf
in
dec
test
loope
pop
clc
pop
pop
mov
outsb
popa
addl
xchg
nop
ficoml
cmp
in
cmpsl
add
movsb
add
je
pusha
xchg
notl
lds
push
rolb
mov
les
subb
inc
sub
jl
mov
int
rclb
call
test
xchg
or
sbb
daa
cmpb
loop
xchg
inc
and
cwtl
xor
popa
mov
mov
outsb
lock
sbb
add
pop
ds
cmp
adc
repnz
cmp
fsubl
sub
adc
fildll
clc
push
fists
popa
dec
test
daa
jl
mov
inc
outsb
lds
or
cmp
inc
fsubrl
das
inc
jns
hlt
stos
bound
sbb
lds
pop
insb
mov
sbb
cli
call
or
push
sbb
test
mov
cmp
cmpb
or
imull
sarl
pop
sbb
pusha
dec
and
mov
mov
std
add
aad
movsb
xchg
cmc
or
std
inc
sbb
push
jne
or
bound
sti
daa
sub
adc
in
clc
outsb
faddp
rcrl
or
add
outsl
xchg
push
enter
mov
mov
sbb
test
aaa
test
shlb
out
les
test
daa
pop
pop
les
sti
push
movsl
pop
push
jp
jle
cmp
repnz
or
mov
or
out
sbb
movsb
adc
pop
ja
dec
and
xor
nop
lds
mov
inc
inc
rcll
cmp
pop
in
or
inc
push
insl
add
add
stos
aaa
jno
pushl
adc
cmp
clc
dec
lds
mov
push
mov
or
pop
and
je
push
mov
les
ror
mov
enter
shlb
xor
add
fistps
fisubrl
sbb
cmovnp
fisubrl
int
pop
rclb
adc
fsub
or
mov
inc
adc
adc
sbb
xor
mov
loope
dec
mov
movsb
loop
cmp
fwait
sub
rclb
xchg
movsl
lret
and
or
mov
pop
in
outsl
cmc
mov
jae
or
jae
jne
mov
outsl
into
inc
push
inc
pop
loop
xchg
js
and
mov
or
dec
dec
fistl
push
in
dec
scas
xor
push
push
mov
add
pop
xor
js
sub
insb
loopne
pop
xchg
aam
inc
jmp
hlt
sbb
push
je
cwtl
xchg
mov
lret
mov
xchg
sbb
fincstp
aam
out
pop
jbe
sbb
add
int
sbb
push
ds
xchg
cmp
pop
fldenv
push
push
jne
lret
scas
shl
fcomp
cwtl
pop
or
sub
ja
fadds
scas
leave
in
pop
movsl
shlb
stc
jbe
adc
icebp
xor
pushf
dec
cli
les
or
xor
inc
fsub
sbb
icebp
mov
shl
push
mov
lea
sub
shlb
add
mov
pop
mov
ror
and
scas
xchg
jl
mov
jge
sub
int
ds
inc
xchg
pop
cltd
add
imul
jns
push
mov
inc
out
mov
inc
pushf
sbb
js
jne
xchg
inc
mov
mov
bound
pop
mov
and
mov
xlat
lock
jo
es
rolb
xchg
roll
xchg
push
in
cmp
sbb
imull
roll
addb
shlb
xchg
jl
pop
pushf
lock
jmp
icebp
mov
lcall
ss
test
pop
imul
mov
test
icebp
cmp
daa
cs
add
mov
add
stos
mov
dec
push
dec
mov
cmp
cwtl
loop
push
ds
lds
cmc
das
ret
lahf
push
test
mov
insl
fwait
mov
jb
into
imulb
lock
les
cltd
scas
cld
insb
hlt
push
pushf
mov
cmp
sub
pop
rorl
fdivl
rclb
test
push
jb
sub
or
loop
cmp
jb
xor
std
cmp
push
xor
push
aad
pop
stc
adc
sahf
push
ljmp
idivb
xchg
rcrl
cmp
ficoml
mov
xchg
gs
push
fwait
mov
imul
lahf
fdiv
xor
ret
mov
mov
pop
sbb
das
push
out
int
mov
push
loopne
add
enter
fists
and
push
sbb
xchg
xorl
cli
pop
push
push
iret
mov
mov
dec
inc
mov
div
cmp
sahf
subb
out
in
movsl
adc
pop
xlat
push
stos
mov
mov
fyl2xp1
push
sbb
inc
arpl
pop
pop
push
sbb
jge
jmp
pop
pop
add
pusha
mov
in
jne
xor
pop
push
test
add
repz
pop
sti
xchg
mov
mov
in
imul
inc
flds
ret
les
push
repnz
lcall
rol
aas
repnz
add
test
dec
fsubs
fcompl
push
aad
sbb
push
in
jmp
fdivrl
pop
ret
repnz
push
call
out
lcall
and
ret
inc
stc
mov
fnstsw
sub
adc
daa
rcrb
or
and
enter
inc
jp
pop
pop
push
lret
shrb
dec
inc
jns
ds
pusha
outsb
adc
into
sbb
test
orl
insl
xlat
mov
and
pop
pop
sub
pop
test
ja
inc
jnp
shrb
inc
or
mov
je
inc
inc
mov
sub
and
jnp
push
and
adc
xor
outsl
imul
cltd
fmull
subl
dec
xor
mov
add
loopne
je
test
xor
movl
or
and
mov
push
mov
push
fsubrs
lods
mov
push
fsubrs
xor
subb
and
ss
adcb
mov
xor
pop
add
adc
cs
enter
sub
ror
cmpsl
int3
xchg
rol
dec
cmp
sub
daa
gs
jmp
xchg
rol
push
or
xchg
mov
imul
pop
lret
movsb
sub
sti
and
mov
fdivrl
subl
sbb
in
mov
cmpsl
pop
xor
in
jb
cmp
leave
jb
cmpsb
lods
mov
sub
mov
ficoms
push
xchg
or
xor
sahf
insb
add
cmp
pop
cmpsl
push
add
mov
xor
enter
in
dec
jns
sahf
mov
pushf
xchg
dec
mov
cmpsl
fdiv
mov
xor
push
fsubs
xor
sbb
pop
fwait
xorb
dec
cmp
adc
add
mov
repnz
shl
addb
outsl
push
sbb
in
adc
add
add
add
add
in
cmpb
fsts
flds
movsl
jbe
mov
sub
or
or
loopne
push
adc
enter
jmp
add
cmpb
add
in
addb
mov
iret
jno
or
lcall
add
add
pop
fwait
cmpb
notl
subb
cmpsb
insb
xor
arpl
lret
fldenv
insb
dec
stc
in
movsb
jb
sbb
in
add
xchg
dec
push
mov
xchg
push
push
xchg
push
stc
popf
adc
sarl
xor
mov
nop
push
xchg
and
lock
aad
das
push
xor
cs
mov
sbb
arpl
mov
rcrb
or
xorb
test
out
outsb
add
sahf
and
hlt
cs
popf
mov
neg
add
sbb
sbb
dec
rclb
inc
stc
add
lods
push
mov
inc
mov
and
or
pop
enter
jbe
xchg
jno
mov
sub
cmc
iret
cmp
sbb
cmp
xlat
cmp
jne
push
push
cltd
sub
daa
mov
insb
addb
mov
ljmp
sbb
add
inc
xor
pusha
jp
push
lea
mov
push
pop
imul
in
and
fwait
add
sbb
popa
pop
je
adcb
test
jo
or
leave
push
cmp
int3
xor
push
in
cmpb
imul
cmp
cmpsl
mov
sbb
leave
push
fsubrs
fsubrl
cmp
pop
cli
mov
fidivl
dec
bound
fidivl
pop
rcrb
add
into
push
pop
outsb
pop
cld
fs
cmp
mov
push
fadds
xchg
fwait
add
sbb
jg
or
cltd
and
jb
rolb
aam
mov
mov
je
fcomip
and
xor
loope
aad
out
movsb
dec
cmp
mov
imul
dec
in
cli
movsb
js
cmp
into
dec
xchg
fwait
test
stos
push
pop
dec
mov
adc
je
push
inc
mov
jl
jbe
out
into
ffreep
clc
out
cwtl
dec
movsl
fstl
rolb
mov
xchg
loope
mov
out
sti
stos
lods
stc
and
jmp
testb
dec
inc
jmp
xchg
in
mov
dec
pop
push
pop
fdiv
dec
mov
out
sahf
test
out
xlat
push
loop
lock
inc
sahf
inc
andb
enter
mov
sbbl
push
xor
lea
cmp
pop
sti
repnz
in
xchg
aaa
std
mov
outsb
lret
sti
in
arpl
pop
sub
xor
roll
test
and
xchg
nop
mov
fbld
push
push
fsubrs
dec
fs
pop
mov
in
addr16
xor
push
push
jnp
ret
mov
pop
mov
pop
mov
xchg
std
inc
lods
push
gs
loopne
push
mov
xchg
imul
xchg
sbbb
hlt
mov
add
push
pusha
iret
insb
and
push
out
loopne
and
and
inc
es
out
add
gs
orl
stos
lock
xchg
imul
cli
push
mov
in
xor
sbbb
pop
dec
adc
notb
repz
dec
cmp
insb
incl
adc
clc
cmpb
dec
sbb
daa
add
sbb
add
imul
mov
sbb
lret
xor
mov
fadds
xor
cld
fwait
sub
orb
add
adc
leave
cmpsl
mov
or
pop
jl
jl
sub
sbb
je
imull
lea
xchg
lock
gs
mov
adc
out
mov
mov
js
jl
dec
xor
sti
fisubrs
bound
les
xchg
test
pop
push
sbb
movsl
shl
xlat
pop
inc
jne
or
jb
xchg
imul
test
shll
pop
pushf
pop
pusha
cs
mov
mov
test
cs
mov
fisubl
xor
or
out
xchg
lea
mov
pusha
inc
cmp
into
pop
repnz
test
add
cmp
lock
jno
xor
dec
cmpsl
scas
hlt
fucomip
sub
hlt
pop
shrl
fs
lods
mov
xor
pushf
lcall
rclb
pop
push
cmc
xchg
xor
push
inc
mov
std
fnstenv
das
lcall
cmpb
or
xchg
insb
cmpb
pop
mov
sbb
add
mov
fdivrp
addb
xchg
or
xor
sbb
adcb
orb
imulb
cmp
ds
pushf
or
fs
flds
mov
lock
out
sub
sbb
xor
mov
pusha
push
flds
xchg
jbe
fstpt
fstl
aam
adc
andb
pusha
out
addr16
test
cwtl
or
sti
sbb
xchg
jle
xor
movsl
fadds
mov
popa
sbb
mov
xchg
xorb
lcall
loopne
cmp
jo
push
call
lcall
rorb
int3
shll
add
cmp
jbe
xchg
cs
add
sbbb
int
xchg
or
int
cmp
dec
int
add
add
add
lcall
adc
sub
dec
and
pop
or
jl
mov
outsb
gs
test
mov
cmp
lods
jg
or
jmp
lret
xor
cmp
movsl
std
dec
cwtl
shr
imul
inc
mov
inc
out
rclb
push
test
nop
mov
lock
test
movsl
mov
dec
in
iret
adc
adc
insb
push
fwait
push
mov
ret
mov
cwtl
movsl
inc
inc
lods
xchg
lret
cli
jno
mov
fcomps
lods
adc
lcall
popf
xchg
pop
sbb
insb
push
test
cmp
jno
subl
pop
dec
test
mov
mov
sti
pop
add
popf
flds
mov
cwtl
add
out
mov
jl
test
mov
add
pop
dec
lods
fwait
sbb
fdivl
icebp
push
aam
aas
and
orl
xor
arpl
and
or
das
es
lds
inc
mov
cltd
test
adc
or
push
mov
scas
fistl
jecxz
push
add
fidivs
push
push
cmpsb
xchg
inc
cltd
loope
cmc
jb
ss
sbb
pop
call
mov
dec
sbb
or
sub
pop
push
jp
pop
dec
and
into
mov
jb
or
add
mov
pop
pop
enter
lock
pop
pop
mov
cmp
int3
shrl
outsl
push
add
leave
mov
std
cltd
dec
adcl
inc
jmp
and
and
or
icebp
and
mov
mov
dec
xchg
inc
pop
xor
in
adc
cmp
cmc
fcmovnb
lods
fwait
jae
dec
mov
gs
hlt
fwait
aam
cmp
fidivrs
cltd
hlt
stos
push
sbb
sar
push
arpl
cmpsb
push
mov
je
add
gs
cmpb
jb
shll
ljmp
jge
cli
inc
orl
roll
add
mov
add
mov
mov
xor
jecxz
push
outsl
pop
sub
jnp
cmp
xor
stos
xchg
sub
mov
lods
or
xor
ja
jge
jmp
cmp
cltd
ret
dec
mov
daa
shll
xor
mull
jge
sti
pushf
fdivr
out
sbb
jmp
xor
addr16
das
xchg
sub
inc
dec
ss
push
scas
inc
mov
add
or
je
sbb
cmp
repz
lods
xlat
imulb
pop
outsb
cld
aas
cmpsl
adc
jl
adc
pop
mov
andb
or
test
in
adc
div
addr16
fcmovbe
cltd
test
test
stc
adc
fdivl
stc
sarl
lods
dec
xchg
and
lods
or
loopw
pop
aaa
pop
push
sub
push
push
mov
sbb
nop
jb
fs
enter
call
negb
stos
or
pop
xor
das
jle
dec
loope
cmp
inc
pop
sub
fdivs
inc
inc
loop
mov
inc
sub
or
clc
sbb
and
add
and
loope
and
lea
mov
test
stos
push
jns
push
adc
inc
mov
jge
cmpsb
sub
mov
fsubrl
pop
pop
insb
xchg
mov
sub
adc
shrl
adc
pop
imul
outsl
and
mov
jecxz
add
fnstsw
pop
adc
mov
cmpl
add
mov
sub
xchg
cmp
and
daa
cmp
xor
jne
inc
pop
inc
inc
cmp
bndstx
adc
fnstenv
xchg
scas
add
pop
add
loopne
mov
or
sbb
sub
pop
pop
sbb
jmp
sub
aad
ds
lods
cltd
sub
jae
jne
call
decb
sbb
or
mov
mov
je,pt
mov
adc
mov
loopne
pop
sbb
inc
insl
xchg
add
call
ds
scas
outsl
xchg
movsl
push
ds
sahf
jne
cltd
dec
loope
dec
sti
ss
pop
inc
push
test
cmpl
fxch
std
sbb
popf
mov
bswap
pop
mov
repz
adc
cltd
arpl
imul
xor
hlt
in
stos
call
jmp
sti
fldt
xchg
pop
gs
flds
popa
out
adcl
in
sahf
stc
fsubr
jns
lods
pushf
imul
sbb
rcr
cmp
popa
repz
push
pop
xchg
push
and
mov
mov
fldenv
les
jbe
xchg
cli
out
jns
and
enter
cmp
call
in
fptan
mov
lods
cmp
clc
sub
adc
push
cwtl
mov
out
pop
adc
and
dec
xchg
pop
arpl
mov
aas
inc
or
hlt
or
xor
ret
testl
xchg
insb
pop
add
mulps
cwtl
and
cmp
cld
rcll
aam
shll
jns
leave
sub
xor
sti
push
mov
lret
bound
mov
sbb
mov
shlb
aaa
mov
sbb
jmp
mov
jmp
mov
push
lea
pop
lret
or
mov
cli
sub
pop
sbb
xor
sub
test
or
push
lahf
mov
call
xchg
mov
loopne
nop
pop
xchg
jne
fidivrl
fisubrl
repnz
fld
loope
pop
aam
imul
mov
insl
jp
stos
dec
fisttps
add
test
jns
outsl
xchg
lret
dec
lret
loopne
negl
mov
push
mov
mov
mov
sub
cmp
pop
in
ror
pop
mov
jecxz
leave
jmp
popa
shlb
out
ja
mov
adc
arpl
mov
xchg
jne
mov
cmp
fwait
jnp
dec
dec
stos
cmp
xor
sbb
inc
mov
push
rcrl
aaa
mov
pop
xchg
cli
stos
or
jmp
pop
clc
xor
pop
push
adcb
rol
repnz
daa
jecxz
mov
es
xlat
sub
inc
imul
jno
bound
stos
int
mov
pop
enter
pop
ss
xchg
cltd
stos
dec
jmp
push
sub
sub
xor
aas
xchg
and
cld
loopne
mov
inc
ficompl
aaa
xchg
push
addr16
out
insb
jno
xchg
dec
sub
jl
inc
push
sahf
xor
mulb
xor
push
repz
mov
xor
add
lea
lods
push
mov
lds
mov
ss
rcr
jnp
xor
lods
mov
dec
xchg
sahf
pop
mov
outsb
or
pop
les
in
dec
xchg
jo
in
cld
xlat
ficomps
dec
out
sub
dec
add
pop
pop
out
stos
int
inc
mov
cmp
cmc
push
xchg
lret
dec
jp
inc
adc
and
add
mov
mov
stos
sub
in
sti
aas
fs
stc
scas
inc
dec
sub
dec
jns
shrd
iret
std
arpl
sahf
sahf
ja
mov
jmp
pushf
inc
or
push
push
mov
js
cs
jg
lea
mov
aad
in
movsb
cmp
or
and
dec
aam
cmp
dec
mov
xchg
les
jl
push
imul
mov
dec
xchg
sub
and
icebp
dec
les
lea
in
out
fldlg2
gs
inc
sub
outsl
xchg
xor
sti
aas
addr16
inc
jno
xchg
movsb
fstl
outsb
adc
sti
rol
imul
ss
leave
cmpsl
out
xor
dec
in
data16
jg
out
inc
scas
insl
out
loope
mov
mov
gs
es
xchg
testl
sti
clc
mov
int3
ss
lods
sbb
repnz
lods
xchg
push
dec
xor
jno
aaa
lret
fdivrp
rolb
jns
push
inc
imul
cmp
adc
das
mov
sbb
pop
sub
imul
cli
dec
and
test
mov
xor
push
dec
inc
dec
in
fdivp
outsl
add
xor
and
in
jmp
sub
mov
fldcw
jg
sbb
jo
mov
shl
mov
mov
push
lea
jns
and
push
fwait
into
inc
in
and
lods
jne
sbb
aaa
icebp
in
cwtl
push
lret
pop
fidivrs
cs
pop
jne
repz
sbb
jg
movsb
sarb
pop
into
mov
cld
cmp
lock
fwait
lods
in
xchg
jns
jecxz
pop
pop
dec
xor
clc
test
jecxz
pop
cmp
scas
jo
cwtl
or
jbe
mov
mov
fistl
mov
xchg
push
push
mov
sub
add
je
xlat
and
xchg
sarb
stos
mov
scas
adc
jl
mov
ds
xor
jge
pushf
mov
pushf
icebp
cmp
stc
les
and
clc
mov
mov
ficomps
clc
sbb
enter
bound
pop
stos
sbb
or
xor
jge
ret
popa
or
ds
movsl
repz
imul
adc
out
sbb
cwtl
mov
and
pop
dec
mov
ss
imul
jno
orb
je
stc
pop
mov
out
fmuls
cmp
fidivrs
xlat
mov
mov
mov
sub
test
out
or
lret
jg
insl
sbb
inc
in
or
lcall
cmp
loop
mov
mov
test
sub
xor
test
movsb
xchg
pop
fsts
jb
out
or
push
sub
add
loope
lock
xlat
movsl
ja
adc
fadds
pop
enter
test
gs
lods
cmp
cmpsl
cwtl
add
fsub
adc
and
inc
out
movsl
pop
lahf
negl
lcall
rorl
test
xchg
gs
mov
leave
fmull
mull
xor
imul
sub
or
inc
mov
or
dec
aad
ja
test
scas
and
add
dec
jo
add
nop
clc
push
xchg
add
out
imul
push
fs
and
arpl
xchg
ss
adc
outsl
jnp
scas
icebp
in
xlat
push
insb
add
sub
adc
ljmp
lcall
bswap
pop
mov
es
xor
inc
sub
mov
adc
pop
cmp
sbb
or
mov
popa
xor
ret
add
shlb
inc
shlb
adc
mov
mov
mov
decb
pop
cmpb
pop
jle
jmp
inc
aas
inc
cli
mov
sbb
addr16
jle
ret
mov
shll
and
push
sub
fnstsw
mov
popa
adc
xchg
or
outsl
jnp
cli
sub
jle
xchg
repnz
nop
roll
mov
cwtl
sbb
ljmp
aaa
out
pop
adc
sbb
mov
xchg
pop
pop
xor
xchg
fadds
dec
inc
int
addr16
xchg
stc
and
sbb
and
test
cmp
mov
cmp
fmuls
fisttps
xor
cmp
and
and
push
lret
xchg
or
enter
movsb
popf
dec
push
xchg
je
inc
hlt
jmp
adc
divl
jae
arpl
sub
jno
lock
mov
fwait
call
outsl
mov
xchg
jge
insl
mov
popf
add
popa
add
popf
frstor
mov
out
inc
rclb
mov
mov
pusha
push
pop
and
repz
or
xchg
imul
aam
xor
add
jno
xchg
leave
push
bound
dec
xlat
fmull
nop
mov
imul
pop
stc
fwait
xor
xchg
cwtl
jle
cmp
xchg
bound
sbb
insl
pop
xchg
mov
in
gs
idiv
jae
movsl
mov
data16
sar
jmp
add
jne
mov
clc
sbb
mov
mov
mov
mov
dec
xor
sub
aad
das
jae
inc
jecxz
sbb
xor
mov
push
or
lahf
sahf
leave
push
lcall
mov
test
cmp
rcl
pop
and
xor
pop
push
pop
xchg
sub
pop
push
sbb
xchg
jae
imul
jmp
lods
mov
leave
aas
adcb
pop
loop
into
popa
pop
ss
jge
test
lcall
movsl
pop
ds
sub
aad
mov
outsb
inc
fs
dec
es
jbe
sti
bound
cltd
fwait
xor
stc
push
cmp
sti
stos
inc
fisttpll
outsb
test
and
sbb
or
loop
mov
subb
push
pop
push
sti
gs
xor
add
xor
mov
mov
jae
or
mov
inc
mov
and
inc
lods
ds
pop
cmp
xor
je
and
sbb
enter
mul
iret
xchg
loop
bound
js
or
mov
imul
xlat
mov
sbb
popf
stc
cmpsb
push
sub
repz
arpl
outsb
mov
mov
fcmovbe
jle
jne
shrb
add
mov
out
push
jecxz
shrl
add
clc
jnp
mov
ja
sbb
add
xorl
dec
jge
outsl
jo
pop
pop
push
inc
lods
dec
pop
test
shl
inc
ret
pop
xchg
push
adc
dec
inc
inc
mov
or
lods
mov
fstpl
ja
lret
fldenv
pop
adc
dec
out
adc
mov
ret
fsubs
sub
ljmp
jne
in
or
adcl
pop
inc
fistl
scas
dec
cmp
and
ret
push
or
jp
aam
sub
stc
clc
pop
xchg
jb
dec
xchg
xor
mov
out
mov
xlat
inc
iret
loop
mov
aas
ds
sub
mov
decl
lret
nop
outsb
push
adc
or
sub
in
dec
dec
stos
out
ja
xor
fsubl
iret
jg
arpl
mov
add
xor
shrl
fisubs
add
pop
cld
mov
mov
hlt
setle
rcll
lock
js
jns
sarl
icebp
ror
dec
add
inc
sti
movsl
adc
mov
iret
addl
mov
movsl
or
leave
cwtl
sub
xor
mov
jecxz
xchg
das
pop
in
sbb
xchg
out
sbb
aam
jns
jp
iret
xchg
xor
pop
sbb
sahf
dec
push
inc
outsl
or
mov
pushf
fldl
jno
popf
fs
out
ja
leave
jbe
stos
cld
or
jge
insb
jecxz
mov
mov
xor
inc
ss
xor
adc
rcrl
ror
inc
add
rcrb
mov
sbb
ss
mov
or
dec
fwait
and
mov
cmc
push
xchg
mov
aad
and
or
ss
das
xorl
lahf
cmp
adc
mov
and
or
push
fs
aad
cmp
jb
mov
xlat
push
insb
sbb
dec
mov
mov
xchg
lds
stc
xchg
int
js
cmp
adc
xchg
repz
stos
dec
sbb
fs
jp
int
lret
inc
cmp
nop
or
add
sbb
xchg
js
movsb
lds
add
cs
in
sub
jecxz
jbe
inc
pop
cmp
add
enter
dec
cmp
sbb
xor
loopne
rcrl
mov
repnz
gs
lods
pop
insb
popa
in
je
cmp
mov
fldz
gs
sub
sbb
test
ds
xchg
mov
pop
data16
dec
xor
lret
jp
inc
pop
sub
xor
dec
std
mov
movb
imul
pop
pop
icebp
cwtl
pusha
xor
fildl
in
stos
pop
or
popf
sbb
shrb
pop
push
je
xor
int
movsb
dec
into
cmp
inc
mov
sub
pop
out
sbbb
outsl
cwtl
jbe
shll
shlb
push
data16
jl
inc
push
xchg
add
push
rcll
cmpb
mov
mov
push
lcall
das
ret
pop
and
lret
push
fldl
int3
and
xchg
xor
lods
add
jl
cmp
and
aas
orl
mov
lret
sbb
pop
push
push
mov
ljmp
or
sub
cmpsb
xchg
setge
dec
call
inc
imull
and
repnz
repnz
push
sub
pop
xor
jl
into
inc
dec
xor
repz
cltd
add
fimuls
mov
dec
ljmp
and
sub
cld
jecxz
js
lds
out
sbb
shr
es
dec
mov
loope
lods
and
cs
mov
repnz
sub
fwait
jne
shl
pop
cli
cli
out
mov
repz
mov
sub
lds
pop
push
sar
incb
sub
xchg
jl
mov
push
into
js
sbb
and
bound
pop
and
jno
test
mov
mov
outsb
rorb
aaa
mov
js
lock
jmp
hlt
fwait
jmp
push
or
add
sti
and
cmpsb
mov
sbb
jge
mov
adc
jmp
js
inc
dec
mov
push
jle
push
add
icebp
jp
sub
add
sti
sbb
xchg
aaa
xor
mov
xor
xchg
lret
jne
scas
or
pop
mov
repnz
imul
add
cmp
sbb
xor
pop
rcrb
sbb
cwtl
daa
xchg
jecxz
ljmp
cli
push
ss
mov
orl
jmp
repz
lods
cmp
inc
lods
add
push
adc
fwait
mov
iret
pop
xor
popf
pop
call
and
mov
lcall
mov
js
cmp
sbb
pop
test
ljmp
aad
cltd
int
scas
xlat
mov
imul
les
mov
shl
mov
fistpll
aad
aaa
imulb
mov
xlat
out
xchg
xor
repnz
negl
jmp
and
cld
imul
cmc
shrl
xchg
mov
adc
adc
clc
testb
inc
mov
push
aas
bnd
mov
jle
std
sbbl
mov
cmpsb
pop
daa
in
clc
es
stos
cmpsl
fcomps
push
mov
mov
mov
jae
dec
jb
or
movsb
jo
cmp
jns
dec
cmp
roll
xchg
jno
jb
mov
test
sbb
insb
filds
or
scas
push
ds
dec
and
ljmp
imul
mov
mov
jnp
pusha
add
inc
sub
mov
xchg
add
mov
loopne
ret
dec
jle
xchg
push
lods
push
aas
sub
dec
fisttpl
fcompl
fs
mov
or
test
adc
push
sbb
adc
dec
cli
or
push
test
in
popa
aaa
push
dec
ficoml
aaa
jns
lds
push
jge
frstor
adc
movsb
xor
out
loope
and
into
test
fwait
mov
shl
sbbb
cmp
jne
adc
mov
incb
fadds
imul
inc
jle
inc
cmc
lock
iret
jecxz
outsl
inc
outsb
in
lea
mov
fbstp
sbb
fstl
or
stc
repz
mov
movsl
cmpsl
sub
in
push
sbb
clc
call
or
and
loop
shlb
ljmp
fnstenv
xchg
cmp
mov
inc
sub
pop
aaa
or
push
test
jns
add
and
fadds
pop
xchg
push
mov
lods
call
pop
mov
push
push
sbb
sub
pop
icebp
lock
pop
icebp
push
pop
cmc
mov
push
fildll
push
mov
jne
loop
scas
pop
icebp
xchg
stos
jnp
mov
sti
fs
clc
push
scas
clc
sti
and
jp
aas
dec
jmp
pop
mov
lds
clc
jp
xlat
fnstsw
lds
jmp
jp
aas
cmp
decl
adc
testl
fistpll
fdivrl
addr16
xlat
hlt
mov
mov
fists
fildll
mov
out
jns
cmc
mov
scas
in
adc
pushl
mov
cmp
jnp
js
popa
scas
cwtl
sub
adc
lock
in
mov
bound
cmp
cmp
cmp
or
jg
inc
and
sub
ficoms
stmxcsr
lods
push
xchg
js
fmull
cmp
jnp
fdiv
int
cwtl
adc
cld
cmp
lds
outsb
test
jns
outsb
jnp
or
int
jle
mov
cld
mov
inc
out
decb
pushf
mov
clc
xchg
repnz
lret
sti
in
std
jae
push
out
jp
ss
ss
rclb
jne
pop
aad
push
inc
cmc
imul
adc
pop
popf
mov
stc
cs
pop
pop
mov
dec
push
icebp
test
push
bound
pop
adc
jns
jae
jg
leave
or
push
aaa
mov
pop
rclb
daa
repz
cmpsb
inc
pop
xor
push
cmp
test
sbb
xor
jecxz
fldenv
pop
sub
fcoml
add
fisttpll
sbb
xchg
pop
pop
inc
shlb
xchg
mov
mov
cmpl
cmp
stos
pop
test
sbb
loop
inc
lods
xor
dec
repz
sbb
mov
push
js
mov
int
xor
jecxz
cmc
cmp
pusha
sbb
imul
or
pop
out
psubb
dec
sub
in
rcr
push
lock
dec
stos
lahf
sbb
arpl
pusha
mov
jp
mov
mov
sbb
jno
enter
sbb
mov
or
mov
dec
cwtl
lds
rcll
pop
xchg
aad
dec
mov
cmpsb
sbb
jp
xor
test
mov
dec
out
sbb
sbb
sbbb
arpl
mov
fcmovbe
cmp
iret
fbstp
mov
and
jl
jge
pop
push
adc
imul
mov
repnz
pop
xchg
dec
andb
xchg
popa
in
pop
ret
jno
gs
cmp
mov
stos
xchg
xchg
in
out
cmp
das
dec
shll
xchg
sbb
mov
cmp
das
add
loope
insb
jae
dec
mov
xchg
inc
pop
pop
ret
in
into
ficompl
scas
jg
xor
mov
mov
push
in
rcrb
xchg
xor
dec
daa
xor
push
mov
mov
repz
jno
add
pop
cmp
inc
cltd
mov
mov
mov
mov
pop
sbb
lea
incl
mov
mov
clc
xor
cltd
enter
mov
aam
mov
aam
fidivrl
insl
mov
scas
and
sub
iret
push
out
dec
inc
stc
clc
mov
mov
xchg
ljmp
cmp
add
mov
pushf
or
sub
fdivl
lods
adc
inc
push
mov
push
xlat
scas
ror
les
or
inc
adc
xchg
mov
rcl
sti
sarb
cmp
stos
int
mov
lcall
incl
fsub
inc
dec
push
jne
jmp
jno
aam
xor
sbb
out
or
jno
mov
sbb
daa
add
jnp
mov
push
negl
aaa
lahf
aad
scas
push
lods
mov
push
loop
xchg
mov
lret
jg
mov
add
mov
mov
xor
loop
mov
testb
fucomip
hlt
mov
fs
jbe
nop
pop
std
xchg
addr16
xor
mov
les
xchg
xor
xchg
cmp
testb
idivl
jge
mov
jecxz
pop
js
lret
mov
hlt
bound
lret
push
and
ds
mov
add
ds
sbb
mov
adc
sbb
sti
adc
pushf
arpl
cmp
sbb
js
xchg
aaa
in
ja
shrl
fcom
jne
movsb
scas
xchg
shrb
sbb
xor
loopne
dec
insl
shlb
aam
cmp
enter
aaa
jge
js
lcall
stos
xchg
js
xor
xor
shll
lods
sahf
inc
push
aas
rcrl
es
and
push
nop
mov
mov
push
push
rcrb
and
cmp
sarl
call
data16
in
popf
pop
mov
ljmp
je
jle
lahf
mov
or
push
icebp
test
push
and
sub
sub
es
lea
lods
jns
add
xor
xor
hlt
adc
scas
fcompl
lcall
jecxz
jns
mov
adc
and
inc
enter
movsb
pop
push
mov
das
mov
jp
cs
xchg
sbb
sbb
out
call
pop
fcmovb
push
adcb
mov
jnp
mov
lods
push
push
xchg
popl
mov
dec
jae
jo
std
mov
mov
sbb
sub
out
inc
sub
inc
in
aas
pop
pop
mov
inc
pop
mov
jo
imul
push
xchg
dec
popa
aas
jp
jo
test
pushf
outsb
push
fs
dec
xchg
push
gs
out
sbb
adc
and
mov
jbe
gs
mov
mov
jnp
push
inc
call
lods
cmpsl
mov
aad
cmp
arpl
fists
mov
loop
loope
stc
gs
inc
stos
jb
das
sub
aaa
dec
xchg
mov
jno
inc
lahf
js
pop
and
add
scas
popf
sbb
gs
push
xchg
mov
mov
scas
sbb
dec
mov
pop
pop
mov
ljmp
jnp
jo
movsb
ss
mov
or
sub
mov
sahf
ffreep
jb
lret
jne
xchg
in
lds
cmc
sbb
ds
mov
sbb
hlt
test
or
and
sarl
idivb
imul
rorb
xor
dec
jecxz
testb
dec
fscale
jge
jg
lret
mov
imul
mov
fadd
mov
inc
outsl
ja
lret
mov
psubw
dec
aam
jno,pt
adc
sbb
xchg
cmc
call
mov
xor
je
jge
ret
notb
cmp
mov
mov
cmc
loope
cmc
hlt
inc
sub
lods
inc
dec
rolb
jmp
and
das
cmpb
outsb
das
loop
sub
jg
inc
sbb
rolb
xchg
jo
mov
jno
mov
mov
imul
std
jno
out
je
lahf
aas
fwait
fs
pop
rolb
lahf
and
mov
pop
je
lahf
jns
add
mov
sbb
outsb
jp
sbb
inc
lret
jno
imul
push
cmc
mov
gs
mov
mov
or
jbe
push
sub
ss
add
xchg
pop
mov
iret
sbb
xchg
cmp
out
jp
dec
fistl
jp
testb
mov
testb
pop
pushf
ss
inc
mov
jp
sub
in
or
adc
xor
push
mov
movsl
and
test
into
sub
jmp
inc
in
xor
push
and
xchg
fiaddl
in
je
iret
push
adcl
jl
rcr
jbe
jno
sbb
xchg
aaa
add
mov
add
cmp
imul
dec
insb
mov
cmp
mov
bound
stos
pop
outsb
fsts
or
in
leave
movl
fldenv
rcll
lcall
lods
addr16
cld
addb
jge
and
aad
push
sub
rcr
in
ret
pusha
jb
mov
cltd
enter
and
or
adcb
xor
iret
and
pop
jo
rcr
scas
inc
push
mov
ds
addr16
jmp
cmp
jp
mov
lock
xchg
in
shrb
mov
repnz
enter
cmpb
sub
add
pop
sbb
push
jecxz
cld
int
je
xchg
sub
inc
xchg
test
shl
and
push
xlat
jns
jne
jp
outsb
xchg
push
stc
das
sbb
push
sbb
addl
sar
inc
inc
ret
rcll
test
inc
dec
ss
sbb
int
push
pop
adc
int
cmp
negl
mov
sub
loop
push
dec
xor
movsl
mov
popf
jb
repz
seto
jmp
add
sbb
leave
test
mov
push
icebp
ret
cmpsl
das
insb
jl
adc
jb
cmc
lea
pop
scas
inc
test
ror
dec
xchg
std
scas
mov
cmp
dec
cld
mov
mov
xchg
xchg
xchg
jns
dec
ret
lods
xorb
mov
ret
js
cmc
ds
add
jg
cmp
push
jle
fstps
mov
and
jg
jl
sbb
inc
bound
push
or
in
shrb
mov
xchg
pop
mov
dec
mov
xor
mov
je
jne
popa
inc
xor
les
aad
test
cmc
scas
pop
jb
dec
test
pop
xchg
sbb
aas
jns
mov
cmp
push
sbb
cmp
cwtl
aad
mov
int
mov
mov
lock
or
xor
jnp
jl
or
cmpsb
jo
jnp
sbb
cmp
scas
push
mov
and
cmp
or
pop
fimuls
sbb
push
fdivrl
inc
jg
lret
cmp
repz
sar
std
push
mov
mov
test
aaa
pop
pop
jnp
int3
cmp
movhps
mov
pop
ds
in
inc
cmp
dec
je
dec
add
inc
mov
push
sub
fcoms
cmp
adcl
arpl
repz
mov
lret
into
pop
ljmp
jmp
nop
sbb
pop
pop
cmp
ret
lods
adc
outsl
shl
push
add
xchg
out
xchg
add
push
mov
pop
and
jne
fsubl
sbb
adcl
stos
fsub
mov
jnp
cld
movsl
arpl
lret
sbb
lds
and
jno
sahf
test
fst
ja
cmp
push
mov
or
pop
sbb
or
in
adcb
movsl
pop
imul
jecxz
jecxz
faddl
sub
outsl
pusha
insl
dec
cmpsl
push
lds
cld
adc
nop
rorl
test
xchg
xor
ret
push
push
xchg
dec
loopne,pt
pop
sbb
inc
sbb
sub
repz
cmpb
mov
push
cli
in
xlat
cmp
sbb
cld
or
sbb
pop
jmp
dec
movsl
cmpsl
shll
leave
inc
popa
data16
sub
pop
xchg
imul
jno
and
fidivrl
adc
sbb
aas
cmp
push
lea
loopne
mov
xchg
sbb
dec
sbb
sbb
push
fnstsw
rcl
or
out
mov
ret
leave
xor
push
cmpb
mov
clc
stos
cmp
mov
andb
movsb
data16
loope
push
pop
orl
inc
out
daa
mov
fadds
mov
xchg
xor
das
inc
out
mov
lock
outsl
movsb
gs
inc
pop
not
jecxz
enter
sub
push
cli
xchg
int
pop
repz
jp
lret
sbb
fmul
sbb
mov
inc
pop
shrb
mov
mov
cli
pop
cmp
cmpl
out
ds
pop
mov
dec
sbb
icebp
imul
mov
test
mov
stc
pop
testl
add
ljmp
sbb
sahf
mov
inc
jp
inc
mov
pop
push
jmp
sbb
arpl
movsl
xchg
mov
adc
push
sub
sbb
and
inc
cmp
bnd
out
shrb
loopne
jl
rorb
or
out
aad
je
lock
xor
sub
pop
mov
inc
and
loopne
dec
je
lods
orl
pusha
add
out
add
jl
jp
dec
flds
test
lret
sarl
push
dec
int
lds
cmpb
push
xlat
ljmp
fsubl
sbb
insb
pop
ds
inc
mov
sbb
outsl
xor
cmp
out
hlt
add
jne
clc
bound
xchg
push
cld
jne
push
repnz
mov
cmp
jge
mov
xlat
push
sub
int3
xor
dec
jge
scas
lds
mov
rep
pop
ficompl
mov
xchg
std
daa
xor
loop
popf
cmp
dec
adc
cmpsl
fildll
jmp
std
hlt
jnp
mov
enter
repz
stos
xchg
insl
loope
push
push
sbb
insb
sbb
mov
or
or
and
dec
jnp
push
fisubrs
xchg
adc
sbbl
inc
scas
jmp
push
sbb
mov
push
cld
cmp
jns
xor
xlat
mov
and
lahf
iret
mov
mov
ljmp
pop
push
sbb
into
scas
fcmovbe
mov
xor
rcll
into
mov
cli
fsts
inc
sub
aaa
pop
jge
mov
adc
xchg
and
rolb
fimull
sub
push
mov
in
outsl
push
icebp
adc
dec
js
stos
insl
mov
mov
lods
in
mov
inc
daa
mov
cltd
test
repz
jo
call
sub
lcall
addb
lret
mov
mov
sub
add
dec
cld
aaa
sbb
mov
scas
hlt
ret
je
dec
push
pop
xor
cmp
int3
icebp
imul
test
stos
or
lret
je
adc
jns,pt
sub
dec
jg
test
jge
cld
or
aas
pop
outsl
call
xchg
lods
lds
ficompl
sbb
in
inc
leave
scas
aad
cmp
jge
stos
cli
jo
jge
pop
pop
sahf
rcrb
push
cltd
je
jae
std
lret
mov
shrl
dec
int
mov
xorl
pop
hlt
cli
xor
sbb
xchg
and
lahf
cmp
and
push
das
mov
mov
aaa
and
dec
sti
loopne
imul
or
push
mov
hlt
sbb
xchg
orl
je
adc
hlt
or
add
outsl
shr
clc
outsb
lock
xor
hlt
cli
xor
pop
insb
fiadds
jno
adc
lcall
pop
or
scas
popa
pop
rcrl
inc
cmp
mov
mov
xchg
out
inc
cmp
adc
sbb
lea
jle
enter
insl
fsts
and
xchg
inc
sub
pop
dec
mov
fisubl
xchg
mov
shll
pop
sub
jae
xchg
lds
fidivs
and
imul
in
repz
sub
sarb
cmp
dec
push
inc
inc
sub
mov
push
sbb
stc
mov
sahf
and
and
xchg
mov
xor
mov
roll
je
pusha
fsubrl
movsl
jae
lahf
stos
sbb
push
xor
cmp
jae
jecxz
push
and
test
je
aad
dec
sbb
inc
sub
sub
js
stos
pop
aas
fwait
mov
dec
mov
pusha
pop
in
mov
loope
in
xchg
loope
jb
mov
mov
sbb
dec
enter
push
jle
pusha
xchg
pop
mov
cwtl
sbb
add
or
and
jle
push
pop
fadds
lds
adc
shlb
mov
mov
mov
mov
add
cmp
push
jno
test
pop
movsb
mov
sbb
sub
rolb
or
icebp
or
gs
push
dec
jnp
and
jge
mov
sub
sub
sbb
orb
lcall
mov
jb
lahf
push
shl
into
sbb
adc
daa
into
sbb
das
roll
cmp
cltd
and
jbe
ja
stc
jb
mov
cmp
lds
mov
pop
xorl
inc
insb
shlb
sbb
mov
xchg
push
push
repz
outsl
and
mov
cmp
inc
jo
into
push
aaa
fcompl
je
ds
fldz
call
inc
cmp
mov
les
pop
ret
mov
popa
fiaddl
sub
push
imul
fldl2e
repz
jle
adc
cmp
mov
mov
aaa
sub
mov
enter
daa
and
pop
add
mov
psrlq
icebp
sbb
xchg
xchg
loop
fisttpl
jecxz
jge
adc
insb
adc
xor
lret
push
mov
dec
lea
loope
add
lahf
fsubs
or
inc
push
daa
cltd
mov
sahf
sarl
mov
enter
cli
add
shrl
icebp
push
aas
ret
and
push
pop
pushf
icebp
cwtl
xchg
xor
fisubl
dec
mov
jmp
mov
popa
ja
inc
sbb
pop
ret
pop
mov
mov
faddl
lds
add
push
cld
dec
lret
andl
xchg
pop
lock
repz
ret
cmc
push
mov
pusha
sub
push
pusha
sub
lahf
out
das
mov
out
mov
push
dec
insb
inc
xor
cli
add
addl
jo
aad
and
das
mov
and
mov
adc
pop
jmp
insb
and
sahf
adc
clc
xor
mov
xchg
and
into
lock
das
dec
push
pusha
inc
lods
mov
insl
cmpsl
xor
jbe
je
mov
mov
sbb
fdivrs
xchg
ss
xchg
addl
push
pop
cmp
jno
test
sbb
fildl
xchg
xor
popa
mov
or
or
push
pop
loop
loopne
and
push
cli
arpl
shrl
outsl
cmp
test
mov
shlb
inc
mov
sub
in
mov
jnp
mov
je
inc
mov
mov
movsb
push
mov
or
inc
in
dec
test
mov
movsl
fsubr
mov
pop
push
out
js
das
outsl
mov
scas
dec
je
jae
jbe
int3
push
mov
bound
mov
lret
in
inc
pop
sub
sti
xchg
mov
lds
hlt
test
popf
es
lods
xor
mov
loopne
int
or
mov
sub
ja
pop
sbb
xchg
out
bound
and
sbb
and
push
push
daa
das
lret
push
lcall
repnz
les
cmc
lods
enter
or
ljmp
imul
lock
lds
mov
clc
fcompl
pop
mov
pop
sahf
cmpsb
inc
pop
jl
mov
push
gs
push
push
dec
mov
mov
sbb
mov
sbb
add
mov
cmp
cmpsl
rcll
xlat
sbb
push
adc
mov
sub
rorb
stos
sti
fstl
cmp
jmp
xchg
jno
dec
inc
sub
das
jmp
mov
dec
jnp
les
cmp
jg
rolb
add
mov
jnp
loop
pop
ret
call
stos
xchg
stos
jmp
icebp
add
les
inc
bound
mov
test
mov
xor
or
pop
sbb
jle
push
div
jmp
sti
fisubrl
je
jno
mov
cmp
push
scas
adc
insl
xchg
roll
mov
movq
int3
xor
icebp
push
testb
mov
cs
cmc
fidivrs
mov
sbb
pop
int3
xor
push
fidivs
mov
jge
mov
jp
iret
jge
lcall
xchg
pusha
add
mov
lock
inc
in
adcl
ljmp
sbb
stc
jl
repz
icebp
and
push
cmp
add
dec
clc
pop
or
mov
dec
out
push
ficoml
xchg
movsl
xor
outsl
repnz
sub
pop
cltd
cwtl
adc
cmp
aad
mov
mov
arpl
adc
lds
push
movsb
fnstenv
pop
movsl
push
leave
scas
lods
iret
or
outsl
scas
lods
insl
lods
adc
or
into
les
and
cld
stc
dec
mov
adc
icebp
cmp
mov
adc
dec
divl
adc
mov
cwtl
push
push
jns
mov
outsl
insb
inc
xchg
cmp
jbe
xchg
add
int
inc
inc
lods
pop
mov
test
into
sti
mov
lock
pop
movsl
mov
pop
add
inc
test
inc
sub
sub
mov
sarb
cld
jns
adc
test
push
in
int3
divb
adc
jb
dec
dec
and
inc
mov
xchg
inc
clc
repz
outsb
jnp
jge
push
cs
cmc
mov
cmp
sarb
rcl
lods
mov
lds
scas
sub
push
test
pop
in
xor
lock
add
mov
sbb
popf
cmp
arpl
push
sbb
ret
sub
or
sarl
test
pop
bound
js
cli
cmp
scas
pop
xor
or
fwait
or
push
lahf
outsb
jle
cmpsb
outsb
adc
xchg
push
pop
out
jg,pn
and
sahf
pop
pop
ret
test
cwtl
jmp
mov
iret
and
repz
inc
scas
lods
sub
mov
aas
sbb
popa
out
cmpsl
inc
cmpsl
stos
or
sub
xor
stos
sti
fsubrl
jge
pop
cmc
lods
xchg
sub
je
push
dec
ss
adc
or
xlat
das
scas
add
aaa
rcll
loop
adc
xor
xor
pop
push
fwait
das
ss
jge
sub
pop
mov
out
fadds
call
sub
popa
xlat
cli
jae
rorb
insl
xchg
mov
fstps
mov
or
jbe
into
mov
ljmpw
sbb
fs
nop
push
notb
test
add
add
dec
push
sahf
gs
bound
popf
je
pop
sub
lea
ret
xchg
out
ret
fs
insb
mov
out
insl
pop
fldt
or
xchg
jae
int3
into
adc
add
int3
rol
fcoml
mov
and
cli
mov
mov
cli
ds
test
pop
ss
dec
sarl
or
jo
sti
pop
xor
addr16
push
cwtl
cwtl
and
outsl
sbb
in
push
xchg
lret
xor
add
dec
xor
arpl
inc
add
pop
enter
pop
or
sub
imul
fnsave
lods
cmpsl
or
mov
pop
pushf
repz
lods
cmp
inc
int3
jmp
xchg
mov
les
rorb
in
or
fimull
sarb
mov
xor
jno
xchg
xlat
xor
lret
or
pop
js
fildl
mov
inc
mov
je
jecxz
xor
inc
pushf
out
adc
jno
icebp
std
clc
push
jnp
sbb
xor
or
jmp
outsb
sub
imul
pop
push
out
aam
pusha
orl
pop
jae
push
pop
sbb
or
fistps
lret
aad
push
call
adc
pop
sti
nop
push
shll
ret
inc
mov
dec
mov
aas
or
mov
mov
arpl
or
movsb
fidivs
or
lds
sti
xchg
jns
mov
sbb
mov
pop
cmp
test
cli
jge
ds
dec
fistps
mov
lahf
aad
clflush
icebp
pop
xchg
movsl
jecxz
inc
icebp
push
cmp
fsts
mov
or
add
jne
xchg
call
pop
rorb
lea
mov
sbb
fs
int
popf
clc
shlb
notb
pop
dec
repz
or
jecxz
inc
dec
loop
xchg
pop
fdivp
pop
pop
pusha
fwait
mov
sbb
daa
mov
scas
jne
pop
imul
mov
and
fcompl
push
test
nop
fs
es
ds
lds
shl
or
mov
sbb
xor
rorb
shll
int3
dec
xchg
cs
xchg
mov
mov
push
sbb
pop
outsl
cld
xor
daa
loop
pop
fstl
out
mov
lea
leave
mov
pusha
cwtl
mov
push
je
push
data16
pop
inc
lahf
and
jnp
aas
imul
mov
cmpsl
mov
and
sti
das
dec
dec
or
sbbb
mov
or
das
mov
mov
sbb
xchg
dec
and
imulb
and
mov
out
ljmp
sbbb
jge
mov
cmpl
inc
shll
mov
inc
not
popf
arpl
push
js
pop
movsl
idiv
push
in
das
mov
outsl
sbb
cmp
mov
or
mov
pop
sub
push
aas
lcall
xchg
mov
mov
mov
iret
loope
xor
shlb
call
les
push
mov
push
mov
mov
sbb
sub
fisubrs
add
imul
cltd
shll
std
add
lods
cmp
imul
imul
adc
cmpsb
add
pop
mov
mov
mov
adc
cmp
sahf
cmp
loop
adc
and
xchg
dec
pop
jae
xchg
pop
pop
insb
mov
repnz
hlt
dec
jae
js
or
xchg
and
inc
push
jge
fyl2x
incb
pop
jb
movd
sahf
lcall
fistpl
imul
and
repz
sub
xchg
pop
add
cmp
lea
jne
ljmp
es
daa
adc
xchg
faddl
sub
fmuls
sub
cmpsb
adc
mov
enter
or
out
cmp
repnz
hlt
mov
js
push
aad
sbb
cltd
jne
jl
ljmp
repz
mov
loop
or
std
mov
sub
xlat
mov
fidivrs
fstpl
shrl
scas
shll
out
jmp
aas
xchg
fidivrl
dec
repz
xchg
das
pop
in
mov
imul
mov
loopne
jle
pop
push
inc
adc
mov
imul
sub
and
sbbl
stos
sbb
dec
out
bound
mov
icebp
mov
les
mov
jle
mov
mov
or
cwtl
inc
sti
loop
popf
popf
test
xchg
cmp
ficoml
xor
addl
addl
cmp
xchg
mov
inc
xor
jnp
xchg
lahf
xchg
decl
repnz
sbb
mov
push
loop
pushf
add
nop
mov
out
fsub
lcall
mov
sbb
loope
jp
mov
bound
add
adc
fs
outsl
dec
cmp
negb
mov
arpl
popf
js
ret
sub
jmp
loopne
in
fistl
ljmp
cmpl
fldl
sbb
mov
and
into
and
mov
out
and
dec
xchg
loopne
cld
sbbl
test
jl
jae
out
iret
inc
pop
jle
loopne
out
ja
jmp
call
outsb
jns
out
adc
jecxz
sub
mov
ret
adc
xchg
jnp
and
jno
imul
cld
dec
fs
hlt
enter
cwtl
mov
push
inc
xor
ss
mov
pop
incb
fildll
cmp
xor
sub
lret
inc
loopne
jns
out
mov
insl
int
jns
jbe
mov
lods
gs
inc
bound
inc
mov
or
pop
stc
rcll
repz
mov
ret
mov
out
out
dec
cmp
int
test
cltd
adc
mov
xchg
stos
cmp
std
xchg
push
mov
lahf
data16
xchg
aas
std
xor
aam
or
call
rorl
mov
inc
cs
add
push
fs
in
inc
enter
ljmp
jl
inc
push
aas
jecxz
adc
pop
rorl
sahf
out
inc
mov
movsl
pop
inc
out
xchg
add
mov
mov
xchg
push
cmp
loope
pushf
jb
push
mov
or
mov
lahf
xchg
push
add
ds
jno
adc
pop
insl
pushf
test
adc
push
shll
lret
sti
jge
ljmp
inc
daa
sub
lods
outsb
inc
aad
scas
xor
dec
je
jb
sub
jbe
and
sbb
cmp
test
cltd
loop
mov
xchg
addb
mov
lods
mov
mov
xorb
jae
vpor
push
jns
or
daa
nop
add
fbstp
fwait
inc
push
mov
pop
fsubs
stc
dec
out
lock
cwtl
pop
pop
frstor
mov
cld
push
dec
mov
insl
popf
scas
mov
sub
loop
aam
fwait
push
shr
fwait
ret
mov
hlt
cld
and
pop
push
imul
sbb
lock
scas
jb
mov
jg
mov
sub
into
cmp
inc
mov
in
and
int
lret
scas
mov
pop
gs
sub
adc
pop
sub
sub
add
mov
pop
dec
pop
movsb
mov
push
repz
fcmovb
sbb
mov
shlb
mov
cmc
cmpb
fldcw
js
imull
push
and
xchg
or
fwait
mov
sbb
sti
scas
push
inc
push
ss
xchg
mov
popf
fmull
test
xor
xor
out
lret
push
push
xor
xor
pop
or
push
push
jnp
pop
mov
pop
aad
mov
sti
mov
ss
aaa
repz
xlat
fisttps
mov
push
mov
incb
lea
jo
sub
sti
movsl
dec
fisttpll
mov
mov
dec
adc
pop
dec
cmc
insl
fisttps
das
ficoml
out
cwtl
sub
mov
rcrl
mov
insb
out
sbb
cmc
lea
or
and
leave
push
ss
fwait
aad
push
insb
dec
cmpsl
inc
push
cmp
rcll
lods
sbb
aaa
sahf
inc
pop
outsb
push
fmull
jns
jns
dec
dec
mov
ljmp
mov
testb
pop
mov
cwtl
mov
loop
jnp
imul
mov
aas
pop
jae
loopne
xlat
daa
iret
addr16
inc
das
enter
pop
push
jg
ljmp
test
leave
inc
mov
xchg
push
outsb
sub
sub
xchg
sub
inc
sahf
movsl
and
dec
push
xchg
jbe
or
enter
repnz
push
mov
mov
pop
popf
pop
and
add
mov
sub
mov
cwtl
es
out
mov
sub
inc
insl
sbb
and
lds
out
inc
sbb
aad
jns
jno
scas
int
mov
insl
fmul
cmp
jae
lock
out
loop
in
add
lahf
cmpsb
cld
jle
ss
or
in
out
iret
loop
lcall
xchg
pop
iret
sbb
fldt
or
call
dec
sub
mulb
fldenv
cmp
js
fs
fst
lock
cmp
adcb
imul
add
inc
je
push
jno
mov
stos
cltd
in
mov
pop
push
xchg
cmp
fdivr
std
pop
jl
push
gs
adc
mov
xlat
lock
pop
shlb
ret
frstpm(287
sub
jg
cmp
xor
cmpsb
xor
push
test
mov
js
stos
mov
cmp
pop
out
xchg
out
xor
xor
outsl
add
cmp
outsl
jbe
inc
dec
sub
mov
sub
jg
jg
clc
xor
jge
cs
or
xchg
icebp
jle
sbb
pop
enter
cmp
mov
pusha
icebp
cli
pop
daa
repz
mul
int3
push
inc
pop
shrl
cli
adc
addr16
jne
add
std
imul
imul
loope
inc
rcrb
pop
outsl
add
pop
das
push
test
hlt
fadds
and
xchg
shll
or
push
decb
shll
xchg
pop
les
xchg
bound
mov
mov
fs
dec
pusha
sub
cmp
pop
cmpsl
xor
add
outsl
insb
insl
or
push
shlb
repnz
mov
jl
in
mov
mov
jmp
mov
push
call
and
xor
lret
xor
js
popa
test
sub
sub
movups
push
and
fstl
pop
ds
lods
mov
adc
pop
add
leave
out
push
xchg
push
loope
xlat
inc
adc
sti
xchg
pop
pushf
sahf
jmp
popf
xchg
mov
in
lea
mov
xchg
fiaddl
daa
loop
hlt
out
mov
adc
add
call
push
std
icebp
sub
mov
push
sub
fnsave
inc
je
aas
cld
cmpl
mov
jbe
cmp
lock
repz
loope
in
cmp
cmpsl
mov
in
sti
jp
jne
cmp
add
inc
repnz
or
adc
pusha
add
sti
adc
sbb
inc
mov
repnz
shlb
push
or
subl
mulb
and
adc
dec
lds
shrl
mov
test
push
xchg
sbb
lds
les
mov
mul
pop
cmpl
xchg
sbb
push
or
clc
hlt
and
jle
loop
mov
popf
cmpsb
repz
adc
and
inc
pusha
sbbl
xchg
push
mov
ror
and
sbb
and
ret
fimull
in
lds
mov
mov
shl
or
pop
int3
insb
mov
shrb
out
mov
push
push
push
pop
aas
or
push
dec
jns
mov
pop
inc
clc
sub
and
pusha
clc
bound
stc
repnz
push
xor
and
outsl
xor
jp
test
data16
cld
xor
push
mov
pushf
pusha
sbb
push
pusha
push
dec
push
dec
sbbl
popa
push
adc
rol
adc
sub
test
add
xchg
jns
push
jp
jmp
pop
pop
shrb
enter
cmp
sti
and
xor
rol
add
jne
and
sbb
fs
mov
mov
aaa
add
imul
orl
jnp
int3
jnp
mov
es
sbb
mov
inc
xor
ret
dec
add
aas
das
int3
add
bound
cmpsl
inc
xchg
packsswb
mov
push
lret
sub
sbb
mov
or
in
loope
ret
mov
pand
icebp
sbb
sub
sub
sbb
out
out
popa
sbb
pusha
sub
sahf
and
cmpsb
cmp
fistps
mov
pop
inc
cmp
mov
cmc
lods
ds
add
roll
rcrl
mov
push
hlt
sub
adc
cli
and
stos
fcomps
mov
push
xor
push
ret
push
push
dec
lds
loopne
imul
out
push
bound
sbb
repz
out
cmp
cmc
sub
data16
or
fdivl
jo
int3
push
fiadds
or
push
or
int3
add
sub
xorl
mov
or
in
bound
dec
sub
push
movl
fs
addb
dec
int3
rolb
lahf
adc
mov
inc
sub
mov
testb
not
in
fucomp
push
xor
jae
adc
pop
cmp
test
inc
mov
sub
inc
pop
or
cmpsb
inc
aas
dec
mov
add
sub
cltd
add
lods
lea
fwait
pop
pusha
sub
bnd
sbb
fld
lds
test
pop
pop
mov
add
insb
stc
push
xor
mov
out
pop
lret
test
rolb
sti
loop
leave
and
rol
xchg
push
sbb
add
cld
cmp
adc
add
sub
jo
ss
ret
pop
pop
scas
mov
das
fmuls
mov
sub
adc
adcb
mov
daa
push
cwtl
or
in
mov
fsubp
int3
cltd
lock
ficomps
lock
pushf
mov
fcos
ljmp
xchg
and
cs
sti
es
cwtl
addr16
std
xchg
jge
imull
ss
scas
test
mov
movsl
pop
push
dec
les
xchg
push
and
inc
mov
pop
or
xor
sub
daa
bound
dec
ffreep
inc
cmp
and
mov
jo
arpl
ret
lea
bound
cmpsb
repnz
mov
aaa
jno
repz
mov
or
into
scas
nop
arpl
sti
xor
pop
pop
leave
stc
push
jle
push
mov
call
xchg
arpl
sti
mov
sbb
cltd
arpl
cmp
xchg
ss
ror
repnz
ror
sbb
leave
xchg
int
sbb
mov
push
xchg
mov
stos
mov
stos
pop
push
insb
add
mov
daa
bound
add
push
aaa
or
adc
jl
cmp
xchg
push
int3
adc
push
or
adc
mov
add
mov
xchg
add
ljmp
push
pushf
mov
lcall
xor
lcall
sub
jne
mov
popa
cmpsb
xlat
js
cmc
std
fidivrs
mov
addr16
sbb
push
mov
imul
arpl
outsl
jl
lods
pusha
mov
fadd
or
cmp
cmp
push
jb
fs
in
arpl
mov
icebp
adc
ret
dec
add
pop
repnz
dec
mov
clc
inc
cmp
and
in
mov
outsb
or
xor
jl
sub
insb
aaa
mov
jl
ret
out
sahf
mov
or
leave
mov
dec
cmpsl
ja
xchg
cmp
movsl
cmp
jl
scas
mov
push
xchg
xchg
push
push
cmp
pop
lds
movsl
sub
int3
in
int
and
push
icebp
cmp
negb
dec
out
out
xlat
stos
mov
int3
movsl
cmp
mov
pop
xor
movsl
mov
mov
pop
pushf
rclb
dec
dec
imul
dec
leave
inc
sub
xchg
sbb
cmp
inc
push
xchg
mov
in
loop
ret
and
ret
xlat
push
in
popf
jne
jmp
mov
in
sti
popf
mov
dec
push
inc
cmp
jnp
lds
int
xchg
or
lret
pushf
dec
dec
stos
mov
lock
addr16
push
pop
shl
jno
push
dec
mov
dec
push
aad
call
dec
mov
push
cmp
sub
loop,pn
aad
cmpsl
jecxz
mov
dec
aaa
rcll
shll
cmp
mov
mov
pop
mov
push
cli
jns
add
cmp
mov
in
cmp
adc
inc
add
sub
pop
sbb
arpl
sbb
xchg
adc
pop
cmp
jbe
mov
push
jb
pushf
fdivrl
mov
pop
cltd
sbb
sarl
cld
js
xchg
data16
jecxz
mov
inc
andnps
jecxz
pop
out
add
rcl
adc
out
and
sub
out
push
hlt
test
push
out
pop
xchg
push
lret
sub
adc
shll
mov
movsb
sub
mov
push
inc
lock
jno
lret
and
sahf
lods
test
jnp
inc
aam
fidivrs
popf
shll
sbb
aam
jbe
arpl
jne
lcall
xchg
out
imul
mov
jno
xchg
scas
nop
adc
or
xchg
or
imul
lret
lcall
aam
dec
mov
outsl
mov
push
cmp
mov
nop
frstpm(287
cmp
lcall
sbb
cmp
out
aam
cs
sbb
jl
and
data16
push
repnz
cmc
push
inc
or
fcomip
scas
mov
fldt
jbe
insb
pop
repz
in
js
sub
jmp
shlb
loop
sti
cmc
data16
rcrb
cmp
movb
dec
push
test
xchg
cmp
out
enter
and
sub
fwait
pop
in
mov
jp
outsb
add
xor
fstpl
out
adc
mov
adc
or
mov
xlat
and
push
enter
incb
xor
dec
lret
push
push
dec
faddl
mov
js
js
add
dec
pop
xchg
bndstx
mov
fstpt
mov
xchg
push
repz
cwtl
cmp
sbb
out
insb
mov
mov
fcoml
adc
ss
inc
jnp
pop
loopne
stc
scas
xlat
jo
or
iret
lahf
jle
outsl
sub
pusha
push
fidivrl
xlat
adc
mov
dec
cmc
or
jmp
or
and
mov
mov
sarl
sbb
outsb
xchg
mov
and
push
pusha
neg
or
fisttpll
mov
stos
push
test
clc
mov
inc
outsl
mov
stos
adc
nop
orb
jno
movsb
es
fsts
test
icebp
scas
jp
jecxz
test
negl
js
test
loope
dec
fdivrl
mov
push
neg
out
lcall
fstps
sbb
pop
or
lahf
test
mov
iret
cltd
adc
mov
mov
xor
lods
dec
mov
mov
sub
mov
adc
sub
mov
ds
loop
add
mov
or
push
pop
gs
repnz
mov
pop
aaa
ds
lea
mov
inc
in
out
jo
insl
pop
clc
push
add
mov
idivb
xchg
outsb
pop
icebp
rclb
sub
xlat
lahf
sbbb
clc
dec
pop
call
arpl
stos
out
repz
mov
jmp
mov
dec
cmp
jnp
mov
fwait
int
fs
xor
cmp
cmp
into
cmpsb
fidivrs
mov
mov
jne
inc
xor
repz
xchg
imul
xchg
shll
imul
lods
lds
mov
insl
sub
add
add
sub
sbb
movsl
mov
rolb
mov
movsl
xor
gs
arpl
inc
dec
jnp
adc
dec
sbb
xor
icebp
lods
addr16
iret
sahf
jp
cmp
mov
testb
sub
insl
jge
sbb
sbb
push
popf
divb
and
ret
rcr
jl
adc
push
mov
aaa
inc
push
into
sbb
mov
dec
fcomip
lds
dec
cmpsl
mov
adc
and
xchg
pop
int3
or
mov
mov
inc
xor
shrb
pop
popa
adc
out
ja
fcomps
push
idivb
push
jmp
or
imul
stos
lock
loop
decl
inc
outsb
icebp
and
cmp
arpl
ds
sbb
jecxz
repz
inc
jecxz
lea
pop
subb
pop
add
jge
loop
rcrl
fadd
ds
sub
popa
inc
popf
pop
mov
arpl
mov
jo
rcrl
mov
push
mov
inc
not
stos
sbb
aas
stos
push
das
in
push
stos
xchg
stos
insb
mov
xor
orl
mov
ds
jb
mov
es
out
xor
xor
dec
fisttps
int
add
jb
xor
in
or
xchg
dec
movsl
push
outsb
sub
sti
dec
sahf
sbb
cmp
fimuls
stc
testl
stos
mov
pop
js
xor
jmp
or
shll
lods
or
jg
fdivs
gs
pop
outsb
push
icebp
push
scas
fstl
mov
bound
stc
or
jge
cli
mov
mov
outsl
fwait
push
jae
mov
pop
xchg
cmp
xor
fbld
fistps
lcall
jbe
mov
xchg
xor
pop
xorl
mov
das
jmp
cmp
dec
cmp
mov
xor
and
xchg
icebp
or
jbe
cmp
call
lahf
in
orb
insb
jmp
mov
add
in
pusha
test
mov
mov
sub
push
push
clc
push
rolb
mov
aas
jp
int
fsub
sysret
mov
aaa
adc
bound
xor
push
push
orb
bound
mov
test
aas
and
jle
cmp
and
jmp
push
sbb
sbb
sti
xchg
sub
adc
popf
mov
inc
test
xlat
cmpsl
mov
dec
imul
out
adcb
inc
shll
xor
inc
loopne
cmc
test
lret
rcrb
ss
or
xchg
dec
xchg
jae
jecxz
jl
loop
pop
arpl
lods
leave
fnstsw
gs
sub
or
insb
pop
xchg
xchg
fnstsw
xor
sbb
shrl
nop
pop
data16
cmp
dec
mov
add
lsl
xor
std
sahf
mov
pop
aam
cwtl
lret
cld
push
aam
movb
into
dec
pop
pushl
or
jbe
push
mov
sub
inc
cmp
scas
push
mov
out
or
inc
jnp
mov
ljmp
cmpsl
dec
and
adcb
and
jmp
xor
pop
bound
mov
dec
js
cmpsl
mov
xor
and
js
dec
cmp
aam
cmp
test
in
bound
xor
mov
popf
inc
push
cmp
mov
daa
fstpt
cmp
pop
adc
ss
pop
and
and
movsl
loop
dec
arpl
xor
shr
cli
xchg
cmp
inc
movsb
xchg
sahf
popa
pop
xchg
in
lods
inc
rolb
pop
adc
loope
mov
fdivp
cltd
and
adc
mov
jb
les
mov
stos
out
push
add
xor
loop
and
xchg
jle
js
mov
inc
pop
lods
sbb
pusha
push
cmpsl
repz
cmp
cmp
gs
mov
pop
cwtl
sbb
add
sub
and
inc
xchg
iret
fidivl
add
into
cld
sbb
mov
push
or
pop
sub
ss
or
scas
out
aaa
mov
inc
das
adcb
sbb
cmp
adc
cs
mov
mov
in
popa
push
adc
mov
pop
out
test
les
pop
jecxz
mov
test
xor
adc
push
pop
sbb
and
or
mov
popa
sub
mov
push
in
sub
leave
insl
mov
push
xchg
inc
xchg
or
fsubs
cmp
jae
hlt
gs
call
ds
add
adc
pop
or
fucomi
jl
jl
bound
sbbl
mov
decl
jg
push
ret
push
adc
fucomip
gs
dec
xorl
stos
iret
int3
xor
cmp
enter
and
push
sub
imul
sar
jb
xchg
sub
jle
scas
cmpsb
inc
insb
in
push
pop
nop
lock
pop
jb
loope
jl
std
and
sar
push
mov
shl
add
cltd
lds
fwait
movsb
jmp
icebp
dec
test
js
scas
adc
int
imul
dec
movsb
jp
adc
hlt
insb
sbb
or
add
rorl
pop
fsubs
rorl
test
rclb
lret
and
cmp
jge
add
push
mov
movsb
inc
aad
jae
out
sub
inc
arpl
cld
aad
ljmp
mov
jg
fstpt
stc
add
mov
dec
imulb
sbb
mov
and
scas
stc
notl
nop
enter
ret
out
jge
cmpl
imulb
lock
inc
aas
lds
daa
mov
sub
mov
cmp
int3
cmpsb
mov
nop
into
ljmp
int3
xchg
flds
inc
popa
push
mov
pop
sbb
lea
arpl
pop
or
jno
sbb
push
sti
push
les
mov
inc
dec
es
lahf
mov
push
push
popf
test
and
mov
push
sub
push
jns
aam
add
push
dec
insb
push
test
pop
sub
inc
stc
jns
cmpsl
scas
les
lahf
mov
cmp
cwtl
pop
xor
adc
add
rolb
leave
or
add
sti
dec
int
daa
shr
dec
insb
daa
popf
sbb
movl
jno
mov
jnp
ds
and
pop
loope
jl
mov
loope
inc
fs
enter
xor
inc
add
loope
or
xchg
in
inc
add
inc
lds
sub
sti
add
inc
fs
inc
cmp
das
cmp
pop
mov
sub
icebp
inc
xchg
movsl
jmp
fsubr
cmpsb
jno,pt
or
add
xor
in
and
xor
enter
adc
push
repnz
push
dec
pop
mov
push
dec
xchg
xchg
mov
int3
inc
int
lahf
pushf
cld
add
in
loope
mov
mov
loope
jne
mov
fcomi
movsl
fwait
cld
mov
out
jge
insb
loopne
fdivl
ljmp
fcmovu
popa
std
in
pop
std
insl
xchg
xchg
movsl
mov
fwait
aas
xor
es
xchg
int
pop
push
rolb
aaa
hlt
test
sub
pop
xor
pop
decl
jg
push
loop
dec
test
jmp
and
add
jg
fdivrl
jle
fsubs
bound
push
popf
and
bound
ds
daa
sahf
test
fsubl
cs
js
fiaddl
pop
jmp
push
cmp
or
cld
mov
xchg
add
ds
mov
xchg
or
jno
mov
outsl
adc
push
ror
outsb
dec
dec
dec
dec
mov
cmpsl
cmpsl
movsb
cmpsb
cmpsl
cmpsl
movsl
cmpsl
pop
mov
sub
and
stos
sub
outsb
movsb
add
sbb
mov
shr
hlt
imul
into
add
xor
sub
push
mul
pop
cli
add
insl
add
loope
mov
sub
cli
pusha
pop
or
mov
xchg
dec
lret
rcrb
je
cltd
xchg
push
push
adc
enter
mov
lcall
rol
aaa
test
sbb
cmc
es
cmp
scas
push
out
push
xlat
lock
iret
inc
or
aam
push
in
ss
mov
mov
testb
ret
mov
test
lock
les
push
dec
nop
push
mov
pop
jg
mov
lock
cltd
cld
nop
xlat
addr16
lcall
test
cmp
das
pop
les
iret
mov
inc
lret
jmp
in
jl
ds
insl
outsl
lds
push
in
sub
lcall
add
dec
aaa
jb
shlb
adc
ficomps
sbb
mov
enter
movsl
aaa
pop
outsb
push
call
push
jb
pop
cli
sahf
inc
add
pop
clc
iret
stos
out
out
push
adc
sbb
sub
test
mov
ret
add
dec
int3
subb
xor
icebp
ret
mov
stos
pop
sub
pop
ret
aas
in
scas
push
sub
loop
mov
sti
sarb
inc
repz
dec
jb
jg
xor
call
loop
sub
aam
insb
xor
cmpsb
xchg
jmp
cli
jmp
insl
ret
mov
movsl
or
xchg
sbb
pop
icebp
sbb
dec
pop
mov
xchg
add
and
loope
lds
aas
mov
fiaddl
jl
mov
in
sub
out
dec
mov
sahf
popa
sub
ja
test
pusha
jno
pop
xchg
imul
subl
repnz
mov
and
push
popf
mov
xchg
pop
sbb
xor
ret
xorb
cwtl
mov
imul
cld
mov
jecxz
xchg
dec
dec
cmc
mov
xchg
push
push
lods
fldl
pop
jmp
sub
add
out
das
pop
push
xchg
xlat
test
popf
fmulp
inc
in
xchg
jbe
push
les
xchg
mov
mov
mov
addr16
sbb
std
xor
scas
sub
icebp
xchg
or
mov
and
outsb
insb
cmp
pop
xchg
cmpsb
mov
inc
mov
ds
cmc
pusha
insb
pop
mov
mov
ja
xor
inc
aaa
pop
inc
jo
jnp
add
test
pop
mov
addr16
inc
test
je
test
sbb
imul
lret
mov
push
ss
das
xor
jo
in
mov
mov
sbb
mov
push
jb
lock
sbb
shrl
push
sub
mov
filds
fs
mov
fstpl
xchg
push
popf
mov
xor
fcmovb
and
mov
sub
mov
aad
push
scas
out
dec
sub
push
jg
divl
push
sbb
lods
out
inc
repnz
loop
movsl
popa
jns
lea
jo
push
xor
loopne
pop
mov
ficoms
int3
loope
mov
sahf
fs
punpckhdq
mov
movsb
fwait
fidivrs
pop
jmp
xchg
int3
jecxz
negl
jl
pop
pop
cmp
mov
fsub
push
dec
jb
bt
dec
push
repz
stos
daa
cmp
sbb
sti
lods
gs
and
loope
sbb
pop
fstps
mov
dec
add
cwtl
or
xchg
imul
push
testl
sbb
mov
orl
pusha
cmpsl
pop
ret
push
dec
xor
test
in
pop
push
adc
ret
je
test
xchg
lods
push
sub
cwtl
test
test
jnp
add
cld
in
push
push
mov
sub
adc
adc
lret
insb
xchg
and
mov
adc
sub
mov
subb
nop
push
push
mov
fstpt
mov
outsb
mov
push
and
pop
pop
sbb
jmp
and
addr16
outsb
mov
add
lods
rcrb
cmc
inc
cmpsl
dec
jecxz
push
scas
cmp
cli
cmp
mov
cli
fstpt
std
insl
cmpsl
imulb
ret
cltd
fidivrs
inc
sbb
or
stc
jno
aam
int
fbstp
sub
arpl
stos
pop
jns
dec
mov
sbb
pop
lret
lret
xor
pop
cltd
jl
pop
andl
mov
and
fmuls
not
xor
adc
js
mov
data16
ret
movsl
pop
out
cmp
in
out
scas
cmp
in
add
stos
js
push
jl
in
pop
sub
xchg
pop
pop
push
imul
pop
dec
and
mov
dec
push
int
mov
sahf
test
fs
mov
insb
xor
pop
add
imul
mov
rcrl
sbb
adc
das
jo
sub
daa
inc
mov
mov
dec
xor
stos
pop
adc
test
test
pop
in
outsl
mov
ret
push
aaa
add
jb
ror
push
insl
xbegin
fimuls
jge
xor
in
push
cmp
cli
sbb
movl
ljmp
inc
nop
push
fisttpll
push
push
aas
xor
mov
sahf
into
mov
add
call
xor
insl
or
inc
int3
fwait
int3
and
add
mov
shll
or
jnp
loop
pushf
icebp
mov
mov
lret
mov
pop
cmpsb
jno
xchg
test
notl
lahf
xor
xor
ror
ljmp
or
pmulhuw
xchg
pop
inc
sub
cs
int3
ds
rcrb
out
out
xchg
fstps
mov
rclb
push
fldenv
adc
inc
lret
cmp
push
andl
loope
adcl
mov
fmuls
inc
adcl
lock
movsb
fs
adc
or
add
push
shlb
int3
ljmp
inc
dec
sahf
call
out
and
icebp
inc
mov
inc
icebp
add
aam
fdivrs
mov
jle
add
or
jo
dec
shlb
push
ret
push
push
mul
cs
pop
aam
sub
or
lock
adc
sub
xchg
int3
sub
jbe
xor
cs
mov
scas
pop
jo
adc
push
pop
mov
daa
pop
adc
out
andb
push
cs
out
popa
adc
xchg
sbb
dec
cmp
scas
repz
inc
cli
pop
add
rcll
insl
mov
test
stos
jo
and
out
clc
test
jb
mov
lds
ret
fistpl
ret
jae
lock
jne
cmp
push
sub
lods
pop
mov
push
fdiv
js
ret
sub
and
inc
mov
aad
scas
lods
push
test
mov
xchg
jo
loop
outsb
test
cmpsl
popa
gs
je
add
repnz
dec
ret
pusha
ficoml
test
aas
jmp
adc
in
test
leave
cmpsb
das
fst
mov
lcall
popa
popa
notl
movsb
enter
fstpl
cmp
pop
jl
pop
sub
lods
push
cmpsl
enter
call
ret
lea
push
lods
rclb
scas
inc
es
add
fimull
daa
js
jmp
sbb
adc
in
mov
inc
imul
loope
mov
xchg
imul
div
stc
xor
pop
or
jnp
add
aad
cmpsb
cwtl
lock
sbb
daa
add
ja
int3
jg
jo
pop
je
dec
cmp
inc
cwtl
data16
scas
frstor
sub
dec
mov
cmp
rolb
out
gs
or
sub
nop
lahf
and
fwait
jo
iret
sbb
pop
cmp
dec
outsl
popa
jne
insl
xor
jo
sbb
sbb
inc
mov
ja
add
fucom
add
sbb
insb
in
add
lea
loopne
or
jl
jo
es
je
push
pop
xor
gs
in
xchg
out
jne
push
std
or
sti
cmp
sbb
sub
cmc
xlat
icebp
movsb
arpl
adc
inc
inc
jmp
mov
into
push
jae
cld
bound
jae
mov
jmp
dec
push
dec
pop
aam
mov
mov
dec
clc
xor
jge
sub
cmp
fstl
dec
inc
pop
insb
scas
push
popa
sbb
jo
cmp
mov
pop
pop
push
ficompl
xchg
pop
xor
call
xor
push
les
sar
orl
lods
jg
mov
push
in
cwtl
test
mov
lock
or
sub
scas
jg
lds
es
loope
outsl
pop
jne
dec
inc
stos
dec
push
dec
pop
std
outsb
ret
xchg
shlb
inc
repz
pop
sub
cmpsl
data16
push
pop
mov
in
push
pop
andb
lret
out
call
cmp
imul
xchg
adc
loopne
mov
pop
out
dec
xchg
shrl
out
dec
pop
cld
sbb
push
dec
mov
or
std
nop
jecxz
mov
scas
pop
js
daa
lcall
add
xor
outsl
dec
psubw
ds
lods
jmp
out
pop
fwait
jmp
std
pusha
sub
das
xor
mov
les
push
aaa
push
xchg
cmpsl
cwtl
test
pop
pop
sub
cs
push
das
push
pop
cs
movsl
push
pop
mov
sbb
je
lcall
loope
push
jecxz
cmp
pop
and
ss
shl
pop
jne
mov
les
and
mov
hlt
ds
xchg
jo
aad
ja
fidivrs
lock
mov
jo
inc
dec
xor
cli
iret
lcall
jnp
test
cli
mov
mov
jnp
dec
xchg
xchg
xchg
leave
or
push
lock
xor
out
push
pop
pop
adc
sub
fwait
ret
int
pop
xchg
pop
pop
aam
fxam
mov
cmpsl
pop
bound
je
pop
aad
clc
in
mov
les
inc
mov
cmp
les
cli
sbb
insb
adc
pop
and
mov
jns
mov
jb
push
call
out
lret
inc
push
inc
ret
jno
test
jl
loopne
mov
adc
sub
pop
rep
lock
cmp
insb
arpl
pop
js
insb
subl
mov
push
cmp
lret
popl
icebp
ret
into
cs
jno
dec
int3
mov
out
cmp
and
mov
and
xor
or
stc
test
clc
ljmp
or
jmp
inc
mov
imul
lock
dec
and
cmp
test
arpl
out
vshufps
push
sbb
aaa
inc
fmul
cmp
push
ficomps
adc
imul
out
or
sub
push
pop
outsl
and
jp
and
add
xchg
sub
sti
mov
pushf
subb
push
jp
push
jl
cld
push
mov
daa
mov
adc
inc
mov
xchg
cmc
les
pop
nop
xor
mov
add
pop
repz
push
pop
loop
adc
jnp,pn
mov
add
adc
js
xchg
lea
bound
imul
jno
test
ss
les
test
jae
insl
imul
and
jmp
es
insl
push
in
out
sbb
push
and
pop
push
pop
sbb
arpl
mov
js
push
mov
push
mov
pop
nop
lea
and
popf
mov
inc
lret
push
pop
movsl
std
popa
mov
idivb
aad
aad
shll
dec
dec
roll
icebp
shll
add
shl
xchg
add
insl
dec
mov
cmpsb
cmc
out
xchg
mov
mov
cld
subl
inc
leave
sbb
rcrl
pop
xor
in
jmp
add
jae
cmpsl
loope
hlt
repz
adc
or
push
testb
jbe
lods
shrl
adc
push
sbb
jge
gs
push
dec
mov
jne
aam
fists
outsb
pop
aas
int
sub
push
and
and
adc
roll
in
sbb
out
mov
fdivs
push
mov
repnz
push
je
xor
lret
insl
lods
lods
stos
imul
sub
cmpsl
add
jl
cld
sub
loop
add
ret
arpl
pusha
jns
jge
ljmp
std
adc
mov
mov
cmpl
loope
jb
movb
shl
mov
xchg
push
mov
ret
aad
dec
in
xorb
adc
or
rol
jge
popf
cmpsl
sub
push
pop
cltd
mov
mov
scas
and
pop
fimull
out
jg
inc
jnp
fnstenv
adc
pop
mov
lahf
fldcw
int
mov
fmuls
imul
loopne
test
xor
jns
in
jmp
fwait
push
or
hlt
push
es
and
int
aad
xchg
inc
jge
fisttps
in
xor
jb
jecxz
mov
push
lret
lcall
movsb
lcall
sbb
outsl
bound
adc
ret
lret
push
cmp
xor
addl
cmp
sub
sub
push
shl
inc
dec
lret
cmp
xchg
loopne
sub
fs
sub
or
adc
push
mov
mov
fmuls
xor
fimuls
aas
pop
xor
mov
shll
inc
addl
ffree
mov
or
daa
mov
test
ljmp
or
mov
sub
jae
xor
shrl
ss
jo
mov
lret
pop
dec
cmpsb
cmc
insb
out
mov
pop
or
mov
rcrl
sarb
mov
bound
fidivs
xor
stc
xor
or
xchg
dec
ds
sub
paddd
repnz
cmpsl
aaa
pushf
cwtl
ret
dec
adc
pop
jns
sub
jnp
mov
xchg
mov
xor
je
push
add
outsl
xlat
and
xor
loope
andl
push
and
jne
es
jb
or
cwtl
pop
imull
jmp
lcall
push
sub
mov
movsb
cmc
push
mov
cmpsb
popf
loopne
pop
scas
mov
aaa
ljmp
mov
mov
cmp
scas
data16
and
cwtl
stos
mov
jns
in
inc
cmc
stos
adc
push
inc
out
or
xchg
sar
ret
mov
push
mov
xor
pop
fisttpll
sbb
ja
jnp
test
push
sbb
and
wbinvd
push
xchg
cmp
inc
mov
lcall
jnp
dec
dec
rorl
aad
jbe
ret
sub
out
sub
push
into
in
addr16
lock
jne
decb
or
lods
cltd
jg
sbb
fucom
mov
test
cmp
popf
mov
enter
lret
add
inc
in
hlt
dec
cli
cmpsb
mov
mov
aaa
mov
mov
push
int
sbb
or
movsl
aad
cmpsl
icebp
nop
loop
divl
lahf
add
xchg
out
xor
addr16
stos
jb
mov
loop
lods
fidivrs
pop
mov
test
pop
jl
das
add
cmp
enter
stc
sbb
pop
mov
jp
fisubrs
pop
or
sub
push
mov
push
or
and
mov
dec
ds
fstpt
mov
data16
ja
mov
cmpsb
leave
push
ss
mov
shll
mov
pop
push
nop
inc
mov
mov
inc
mov
inc
leave
jg
repnz
call
fmuls
xchg
mov
cmp
test
mov
pop
scas
cmp
jbe
inc
push
sti
inc
fidivrl
clc
icebp
dec
addl
cld
xchg
sti
std
loope
outsl
jp
adc
mov
sarl
add
push
sub
ja
lods
sub
pop
mov
movsb
add
fwait
cmp
inc
cmp
cmp
pop
clc
out
rorl
push
inc
fbld
lods
into
movb
mulb
cmp
ficoml
jl
xor
or
push
loope
pop
add
enter
adc
in
xor
ret
and
xlat
adc
enter
sub
sahf
inc
and
rolb
sub
sub
mov
mov
mov
rorb
jnp
xchg
add
mov
das
or
add
adcl
cmp
pop
cld
ljmp
xchg
int3
cmp
sub
sbb
mov
push
cmpl
scas
pop
or
xchg
repnz
dec
es
push
add
mov
fsubs
xor
rol
outsl
inc
or
in
mov
js
ret
orb
xchg
movsb
xor
pushf
xchg
add
pop
cmp
pop
popf
bsf
pop
outsl
sbb
popa
push
push
pop
jp
push
cli
jns
data16
or
ja
js,pt
arpl
and
pop
push
dec
add
lea
mov
in
sub
push
dec
jl
sub
int3
fldlg2
adc
mulb
mov
push
mov
ss
push
shll
outsl
paddsb
fmull
ja
jg
inc
fwait
mov
lods
mov
sub
xor
or
jne
js
ret
mov
std
or
jmp
push
xchg
dec
push
and
shlb
jns
xchg
pop
hlt
push
lahf
push
jecxz
fs
xchg
add
or
gs
fisubrs
rcll
cwtl
or
orb
fidivl
push
adc
push
xchg
adc
mov
mov
add
scas
or
add
adc
cwtl
scas
in
fwait
test
xorl
jbe
dec
scas
dec
pop
jno
cmp
mov
dec
adc
cmp
icebp
rcll
xlat
arpl
dec
out
mov
ret
sbb
cmp
adc
flds
lcall
or
mov
mov
icebp
or
pushf
push
mov
loopne
jge
mov
jns
jecxz
sub
mov
imul
lea
mov
lods
gs
mov
dec
clc
fcoms
fisttps
or
inc
xlat
jae
inc
loop
out
repz
fmull
pop
aaa
clc
andb
xchg
adc
push
nop
fldenv
call
ja
aam
aam
iret
popa
push
xlat
test
xor
aas
mov
push
adc
mov
push
xchg
imul
xchg
xchg
mov
nop
dec
fs
mov
repnz
sbb
fstps
inc
xchg
loope
ret
jecxz
push
aad
mov
int3
or
int
add
loopne
dec
inc
sbb
jmp
bound
and
add
inc
repz
je
pusha
pop
shlb
and
mov
ja,pn
scas
and
jb
fldenv
inc
or
mov
jmp
add
int3
adc
loop
inc
call
jns
cmp
xlat
and
mov
in
xchg
mov
out
mov
pop
or
jbe
shll
mov
jb
lret
inc
inc
sub
ss
mov
xchg
inc
clc
jle
adc
mov
jle
das
inc
pusha
sub
cmp
or
sbb
pop
cs
mov
in
mov
sub
movsl
data16
mov
or
subl
cld
xchg
add
out
cmp
mov
pushf
add
or
pop
mov
add
ljmp
test
jcxz
mov
cmp
lret
and
lds
jae
jge
outsl
insb
les
repnz
in
xor
mov
xchg
mov
mov
cmp
mov
push
aas
mov
movsl
outsl
and
fs
es
xchg
lahf
in
inc
jae
mov
ret
fwait
aaa
pop
xor
jg
jbe
xchg
cmpsb
popf
sbb
je
call
xchg
dec
sbb
or
mov
cmp
sarb
dec
jecxz
xor
mov
in
movsb
pop
adcl
xchg
iret
int3
test
push
aaa
loop
cmpl
cmpsb
mov
call
and
jmp
shll
adc
cmp
aaa
add
cwtl
fsubr
mov
mov
mov
loopne
ds
test
out
jmp
insl
mov
xor
sahf
sbb
sbb
sub
rcl
mov
or
jle
and
daa
movsl
jb
je
aaa
jnp
cltd
mov
mov
lea
sti
cmp
and
ficoml
stos
sarl
jbe
sub
xchg
scas
into
xchg
lods
cltd
movsl
push
cli
popf
stos
pop
xchg
or
mov
push
ret
cmp
mov
cltd
js
test
into
xor
aas
or
jo
mov
lods
pop
pop
ror
xchg
arpl
mov
gs
push
outsb
insl
sbb
push
mov
pop
cmp
cltd
scas
aad
mov
push
in
shr
pop
or
repnz
call
addr16
jns
xor
les
cmpsl
mov
sbb
std
adc
or
adc
sbb
mov
lds
pusha
xchg
and
mov
dec
fidivrs
in
mov
mov
dec
out
sbb
aam
insb
or
or
out
xchg
into
mov
repz
mov
pop
dec
js
in
mov
mov
loope
sub
repnz
xor
rcl
cmp
shll
loope
fwait
int3
add
sub
jnp
push
lahf
orb
sub
repz
inc
sets
mov
arpl
add
mov
test
adc
mov
lods
lret
and
lret
xchg
ds
iret
out
in
cs
clc
repz
lea
sahf
xor
push
aas
push
sbb
mov
inc
repz
mov
js
push
ror
ret
int3
adc
jae
cltd
lock
inc
dec
fbstp
rorb
inc
xor
adc
clc
je
dec
shlb
pop
fldcw
inc
mov
sub
adc
test
push
jge
out
xchg
push
mov
sbbl
aad
movsb
inc
popf
mov
pop
loop
mov
cmpsl
nop
adc
hlt
addr16
outsl
lods
mov
jecxz
inc
pusha
arpl
shll
jbe
mov
push
mov
sub
jno
adc
fildll
les
dec
out
add
int3
pop
das
shll
mov
popf
jle
cld
ret
lahf
faddp
mov
sub
std
dec
sub
adc
jp
lahf
xor
test
fisttpll
and
pop
and
push
test
xchg
xor
fiaddl
pop
mov
test
in
xchg
pop
xchg
leave
push
cmp
js
jae
in
inc
or
xorb
ret
rcrb
cmpsb
pop
test
data16
scas
das
adc
popf
and
clc
fwait
imul
lock
js
aam
subb
push
test
push
inc
enter
enter
pop
push
mov
push
xorb
xor
push
xchg
jl
push
faddp
mov
fbld
insl
adc
sarl
xchg
mov
inc
je
push
jp
fisttpl
add
pop
or
jbe
dec
sub
push
jno
ljmp
sub
aas
std
mov
int3
mov
inc
mov
cli
scas
into
clc
bound
or
mov
mov
cmpsl
jno
cmp
into
sbb
or
push
mov
xchg
imul
or
mov
jl
push
pop
inc
inc
jmp
push
mov
ljmp
test
xchg
add
xchg
les
xor
push
push
int3
add
inc
jl
add
rcrl
cmpsl
cmpsl
rolb
sub
push
clc
in
cmp
repz
je
inc
add
or
jg
jne
aam
xchg
mov
cld
sub
ja
lock
mov
or
cmpsb
push
push
test
lret
pop
mov
stos
movsb
xor
sbb
test
sbb
lret
int
fistpl
and
push
call
push
push
mov
dec
jge
adc
cltd
fsubrp
cmc
lea
mov
adc
mov
int3
push
cmpl
clc
push
outsl
subl
loope
pop
inc
sbb
das
adc
cli
sub
inc
xchg
push
adcl
into
decb
stos
mov
ds
push
jno
fidivs
into
cmpsb
enter
daa
in
loop
inc
xchg
push
jmp
out
clc
sub
adc
adc
sub
mov
dec
lods
ss
les
cmpsb
xchg
add
cmp
shll
cmc
jmp
mov
adc
fwait
ss
aaa
mov
jo
push
adc
push
lods
and
and
push
loopne
pop
rcrl
sti
mov
les
and
mov
fisubl
mov
int
sbb
mov
xchg
leave
scas
out
jae
loop
lcall
lods
mov
dec
pop
lcall
inc
je
xchg
xchg
jge
adc
js
mov
sub
repnz
in
push
cmpsl
into
loopne
and
gs
jle
in
gs
pop
stos
jbe
push
mov
fisttpl
inc
cld
leave
pop
mov
repz
mov
insl
sti
cld
xchg
pushf
ja
jo
jl
jno
cli
outsb
cwtl
or
cmc
pop
ret
xchg
jbe
jnp
xchg
mov
imull
mov
fisttpl
sbb
repnz
pusha
pop
lahf
xchg
imul
dec
jno
or
in
jge
lret
daa
repnz
sbb
lods
imul
cwtl
ret
jno
jg
sbb
jg
cs
mov
push
mov
leave
lret
sbb
push
cmp
mov
adc
xor
push
dec
mov
loopne
jne
xchg
dec
mov
cmp
sarl
jnp
add
das
in
loopne
inc
xchg
bound
incb
out
inc
jnp
in
dec
cmp
sub
cs
mov
into
lret
in
jb
lds
pop
adc
sub
in
int3
and
xchg
pop
nop
mov
mov
popa
out
mov
aam
lods
pop
push
push
cs
pushl
icebp
xchg
cmc
sbb
icebp
jne
lock
aad
jo
in
xchg
aam
mov
push
lret
std
adc
adc
sub
xor
and
dec
xchg
mov
in
push
insb
xchg
pushf
push
decb
lret
leave
adc
movsl
movsl
xchg
sbb
getsec
xor
push
iret
fmull
std
loopne
push
sbb
cli
pop
lret
mov
mull
mov
mov
xchg
mov
imul
mov
lret
mov
mov
or
icebp
mov
ret
or
ror
es
sub
cmp
and
test
pop
rorb
stos
sub
mov
into
out
inc
xor
mov
mov
sbb
mov
mov
inc
int
adc
or
xor
mov
xchg
jge
sub
nop
adc
je
clc
fdivrp
fwait
bound
test
mov
mov
pusha
or
adc
push
mov
or
add
popf
dec
repnz
pop
lock
xchg
add
pop
mov
sub
dec
ret
sarl
adc
cmp
mov
mov
sbb
int3
adc
loop
mov
ss
pop
mov
outsl
popf
xchg
leave
sub
cli
ss
roll
aam
xchg
out
add
pop
mov
pop
push
mov
dec
push
decb
cmp
cmp
cmpsb
stos
add
lcall
rcrl
xor
dec
inc
outsb
aam
call
xor
dec
inc
sub
les
cwtl
dec
jae
dec
aam
mov
mov
nop
push
imul
loopne
shl
dec
jecxz
pop
push
jnp
pop
mov
dec
sbb
sub
lods
gs
push
jns
adc
test
sub
mov
jo
mov
mov
mov
xchg
out
mov
push
fldl
fbstp
dec
jns
sbb
pop
pop
cmp
cmp
xchg
sbb
sbb
pop
stc
test
dec
dec
sbb
ds
add
mov
shll
test
rcrb
aaa
insb
test
and
sbb
jo
and
cmp
xchg
and
popa
mov
ret
pusha
out
mov
cmp
or
xchg
adc
sub
ss
mov
loop
test
mov
movb
jb
sub
jmp
push
sbb
xor
mov
repnz
jg
les
sub
test
push
fstpt
sbb
mov
xlat
sbb
mov
pusha
dec
mov
sub
inc
sbb
or
mov
mov
out
mov
out
inc
dec
mov
inc
and
into
or
add
mov
in
jge
dec
sbb
insl
jg
inc
neg
push
push
aad
dec
mov
lock
cmpl
lcall
cmp
pop
rol
lea
mov
jae
jge
xorl
jb
arpl
dec
pop
loop
enter
mov
test
ret
mov
adc
outsb
add
into
mov
fldl
neg
out
data16
xchg
fsubrs
dec
lds
xor
imul
add
cs
sub
shll
mov
dec
imul
repnz
add
arpl
adc
xor
mov
or
and
or
inc
jo
jbe
inc
lock
mov
cs
stos
lret
jne
leave
sub
sbb
test
cs
cmpsb
test
push
jno
fists
out
push
adc
out
xchg
push
loopne
add
test
xor
dec
cmpsb
and
inc
pop
cmc
and
lret
xchg
iret
lahf
ss
fists
mov
mov
dec
mov
mov
loop
lock
mov
sbb
and
loope
mov
pop
mov
cwtl
jp
lock
icebp
jb
cmp
dec
mov
pop
pop
ds
and
fs
dec
mov
adc
push
sub
push
ret
push
fs
sahf
xor
lret
xchg
int
outsb
xor
push
in
sub
lods
dec
popf
adc
ljmp
inc
or
out
rolb
test
in
cmc
sbb
jb
push
std
dec
push
adc
sbb
sub
popa
adc
clc
enter
or
flds
mov
sbb
xchg
xchg
and
dec
lahf
hlt
and
push
pop
fidivs
dec
sbb
push
arpl
lods
icebp
in
jno
xor
mov
sbb
jno
out
cmp
cli
aad
xor
sbbl
test
pop
jle
daa
cli
fsub
and
cmc
movsl
ret
mov
cmpl
bound
push
mov
push
out
and
dec
das
rcll
ja
mov
fbld
imulb
push
in
jns
pop
sti
jmp
lods
cmp
sti
addr16
inc
or
xlat
test
scas
popa
inc
pusha
daa
sbbl
sti
cwtl
push
jns
clc
mov
sub
add
mov
cltd
jmp
pop
imul
lods
and
dec
mov
push
mov
stc
cli
and
jp
es
mov
es
sahf
in
xchg
add
pop
lcall
shl
pop
xchg
int3
fwait
sub
fnstcw
push
mov
inc
repnz
mov
jl
repnz
lret
mov
aad
inc
dec
and
mov
mov
sbb
iret
sbb
sbb
das
sub
dec
cmp
mov
cmpb
das
scas
pop
push
popf
pop
sbb
pop
xchg
push
cltd
cmp
lret
or
popl
jmp
xor
addl
in
imul
cmp
inc
test
inc
fdecstp
fidivrl
outsb
repz
mov
lock
pop
outsl
jl
aaa
sahf
testl
ret
cmp
xor
je
les
xor
clc
dec
lahf
lret
or
pop
pop
sub
cmove
mov
jmp
push
cs
xchg
inc
or
xor
ret
jg
inc
nop
or
call
cmp
jb
pushf
movsb
aad
notb
fwait
dec
in
pop
add
aam
lahf
loopne
sub
in
fimuls
jne
andl
push
loop
vmovupd
push
mov
adc
les
lahf
add
out
mov
push
lcall
mov
lret
mov
rcr
ljmp
push
xor
outsb
addb
xchg
or
test
adc
call
out
xchg
popa
pop
inc
mov
xor
cltd
xchg
test
mov
repnz
gs
es
leave
sahf
jo
push
loop
enter
sub
lods
jl
jne
xchg
imul
mov
ret
or
jl,pn
loopne
push
pop
shl
popa
inc
stos
aam
cmp
sbb
sub
pop
lea
cmpl
mov
loopne
sbb
or
jecxz
outsb
mov
fiaddl
jle
or
in
movsb
lods
push
popf
cltd
sub
out
jb
ss
fiadds
and
test
inc
stos
jo
pop
js
and
mov
cli
flds
and
call
push
out
adc
hlt
stos
mov
add
stos
mov
xchg
push
fcomps
inc
sub
push
inc
push
pop
or
fcoms
lahf
sub
xor
add
pop
add
ret
xor
lock
inc
mov
scas
and
push
outsb
or
sti
xorb
pop
mov
psrlw
int
and
adc
jecxz
jmp
push
jns
ja
shlb
pop
or
sub
xchg
or
and
add
pop
pop
cmp
mov
and
sub
jecxz
fcmovnu
mov
and
xchg
mov
xchg
enter
popf
inc
popf
addl
fwait
cmpsb
mov
sbb
outsb
mov
popf
int
loop
dec
hlt
push
pop
push
jg
dec
mov
cmp
add
shrl
faddl
push
cmpl
push
out
cmpsb
jle
pcmpgtw
xchg
dec
cmp
mov
pop
loop
mov
cmp
sbbb
xor
pusha
mov
mov
pop
test
sub
sbb
ret
arpl
mov
icebp
sbb
shll
pop
xor
and
push
fidivl
xor
fs
dec
stc
inc
out
fwait
adc
imul
into
shr
cld
bound
test
mov
pushf
xchg
push
out
popa
dec
iretw
sbb
daa
inc
in
mov
imull
mov
stos
les
in
sub
lock
sbb
adc
lds
cli
movups
or
add
push
adc
lods
ret
cmp
fadd
mov
mov
jnp
jne
sbb
out
mov
adc
sbb
rorb
xor
inc
subb
push
test
loopne
sbb
inc
push
mov
imul
dec
test
add
sub
sti
movsb
sub
bound
mov
shlb
adc
jnp
ss
pop
mov
push
repz
inc
in
fstpl
iret
and
outsl
jae
rorl
les
and
inc
pcmpeqd
into
ss
orb
xor
cmp
stos
add
xchg
sbb
jmp
data16
adc
loopne
dec
xor
mov
leave
push
and
add
xchg
cli
insb
xchg
mov
mov
inc
pop
push
leave
out
or
daa
xor
mov
leave
int
in
lret
lcall
into
cmp
lret
roll
inc
mov
in
lret
lock
int3
xor
xchg
shll
push
fnsave
test
ljmp
addb
sahf
das
xor
cmp
lcall
call
loope
sub
imul
lcall
jecxz
adc
fisttpll
dec
rcrl
cltd
cltd
lock
aaa
icebp
jp
adc
mov
xor
fnstenv
fcomps
xor
xor
jne
cmpsb
lret
arpl
mov
sbb
pop
push
outsl
sub
push
xchg
nop
mov
dec
call
jnp
cld
push
dec
inc
loopne
and
pop
inc
add
add
pop
xchg
xchg
ret
enter
sub
test
ss
js
pop
loop
daa
lret
bound
pop
adc
icebp
pop
cli
lahf
lret
rcrb
mov
lret
ret
mov
push
cmp
into
pushf
or
ret
je
xchg
mov
jmp
cmp
fld
push
mov
xchg
mov
int3
fiadds
cmp
sub
cltd
sub
adc
dec
xchg
fcoms
xor
imul
push
jnp
lods
pop
fdivrl
jns
adc
gs
xchg
data16
jnp
movsl
js
cmpsl
fnstsw
into
nop
movswl
jp
out
out
ds
shlb
dec
push
xor
sbb
add
js
roll
sbb
popa
mov
inc
push
mov
adc
cmp
je
inc
cmp
test
frstpm(287
push
xchg
int3
leave
adc
add
and
lock
hlt
les
aam
lock
jnp
xchg
sti
push
xor
inc
jo
cltd
mov
fisubrl
nop
test
sub
loop
sub
pop
pop
pushf
sarb
or
out
out
scas
mov
add
scas
shr
mov
push
xchg
shll
loop
hlt
out
incl
jp
leave
mov
or
add
add
dec
xchg
inc
nop
mov
cmpsl
call
shlb
jg
gs
ret
imul
and
mov
xchg
sub
jmp
or
pop
push
adc
push
iret
outsb
ror
in
cmp
add
imul
out
les
sbb
ds
inc
mov
into
lahf
inc
mov
test
cmp
aaa
mov
mov
cmp
or
jno
subl
sub
inc
int
ds
push
sbb
orl
mov
in
ljmp
jge
hlt
ret
movsl
test
mov
lock
movsb
xor
fwait
cmp
jae
cld
pop
faddl
into
sub
add
sub
cmpsl
bound
and
adc
push
fwait
dec
aaa
mov
push
ja
jge
cld
cld
add
rclb
in
ret
sbb
in
or
rcrb
clc
orl
mov
mov
jge
iret
loopne
leave
fstpl
add
ds
scas
adc
repz
xchg
cmp
fsts
push
mov
mov
popa
xor
pop
cld
or
cmp
les
add
cmp
mov
xchg
xchg
mov
mov
xor
cmp
sub
cltd
pushf
faddl
mov
jns
jnp
and
sub
xchg
sub
sub
subl
xlat
leave
int3
jl
icebp
xlat
enter
push
dec
lds
mov
iret
mov
rep
jp
jmp
mov
lods
cmp
xor
xor
shlb
enter
pusha
mov
xor
mov
push
ds
cmc
add
mov
incb
lret
pop
add
filds
mov
sbb
or
test
popa
push
adc
lret
in
mov
fnsave
pop
push
shr
cmp
xor
sarb
xor
push
xor
pop
dec
push
lret
arpl
push
gs
xlat
call
pop
test
enter
aaa
xchg
cld
or
sarb
es
inc
jge
pop
bsf
or
hlt
ljmp
sbb
mov
xchg
lret
pop
xchg
dec
jl
mov
xchg
inc
shrl
adc
test
and
push
test
outsl
xchg
and
add
adc
mov
out
push
shrl
cmpsl
jae
bound
popa
and
roll
mov
pop
sub
les
mov
jg
cs
ds
or
std
dec
sysret
sbb
and
fcomip
data16
push
les
out
push
ficoml
xchg
test
aas
xor
lcall
mov
stos
mov
cmp
popf
or
xor
insl
jp
dec
das
ja
data16
mov
enter
stos
cmp
adc
rclb
int
sub
dec
ljmp
popa
out
jg
pop
scas
das
pop
fcoml
jp
cmp
sub
pop
lret
mov
push
jb
gs
enter
test
adc
dec
and
mov
imul
jo
add
int
or
jmp
movsl
mov
dec
cmpsl
sub
and
and
les
lds
dec
adc
mov
adc
mov
dec
and
fmul
fldt
cmp
mov
stos
pop
out
mov
xchg
mov
cld
aad
in
cld
xchg
shll
stos
xor
movsl
pop
push
fiadds
and
mov
pop
sub
in
push
ja
xchg
xor
mov
movsl
sbb
mov
insb
addl
jo
xor
adc
icebp
and
or
inc
std
and
add
movups
or
test
xchg
stos
push
lahf
jns
in
mov
shll
jle
pop
cmp
das
cmc
mov
jbe
adc
inc
push
push
sbb
add
ret
jbe
stos
cmp
jnp
mov
nop
out
mov
subl
mov
cld
and
out
imul
sub
push
add
mov
addr16
jecxz
and
mov
aas
mov
dec
lds
in
mov
push
sbb
ss
xchg
cs
pop
dec
push
adcl
fs
push
xchg
adc
inc
enter
dec
ret
arpl
and
icebp
cmp
jbe
xchg
rcrl
stos
xlat
in
xor
popf
fnstsw
pushf
out
xor
xchg
cmpsb
push
rcll
jb
rcr
call
mov
inc
mov
and
rolb
push
push
cli
xchg
jns
ret
stos
int
ret
aad
cli
cltd
and
add
out
ror
mov
popf
ret
pop
xchg
mov
xor
fprem
rcll
sbb
xchg
or
fdivrl
cmp
jne
xor
cs
cmp
cmp
xchg
dec
cs
test
and
add
movsl
mov
int
and
mov
fdiv
les
ret
push
and
inc
xchg
imul
lods
movsb
jmp
ds
hlt
or
dec
mov
pusha
test
jae
test
call
push
and
jb
inc
frstor
leave
lods
daa
fdivl
pop
aas
testl
fcoml
js
jb
pop
cmp
lock
add
xchg
int3
gs
out
fiaddl
or
inc
orl
xchg
shll
or
cs
sarl
fcomps
push
inc
cwtl
mov
xchg
push
in
mov
mov
adc
mov
cmp
cltd
mov
dec
xchg
jl
push
je
in
dec
dec
je
dec
inc
ljmp
enter
sub
sti
rclb
loopne
loop
jbe
std
push
xor
pop
jns
jmp
mov
insl
roll
jge
sbb
dec
movsl
sub
mov
roll
jmp
clc
dec
mov
adc
js
mov
jns
mov
push
sub
mov
cmp
jns
jno
sarb
out
cmp
pop
test
mov
dec
inc
imull
adc
jge
mov
call
ftst
cmp
movsl
jge
test
leave
sub
out
jge
cmp
outsb
int
sbb
jb
adc
aam
lret
sbbb
ret
shrl
fistpll
adc
mov
loopne
enter
sbb
mov
decl
je
insb
inc
lahf
inc
int3
out
mov
ds
cmp
jns
sbb
popa
int
inc
push
mov
jo
into
into
xor
in
lret
fildll
fcomps
int
mov
pop
and
adc
mov
movl
repz
dec
mov
cmp
xchg
dec
cmc
scas
xor
std
jl
inc
mov
adc
jno
aam
lea
out
and
pusha
adc
sbb
mov
jo
cltd
push
leave
mov
xchg
sarl
add
push
rcrl
clc
or
adc
pop
bound
mov
cld
aad
fnstsw
mov
push
insb
xor
jo
sahf
nop
in
test
and
push
xchg
arpl
nop
adc
cli
loop
xchg
or
xchg
lock
pop
rcl
scas
hlt
push
xchg
addr16
dec
sarl
push
lret
jns
sbb
aad
push
addr16
jnp
mov
add
insb
mov
push
dec
lock
into
les
popa
nop
inc
sbb
add
jmp
sbb
push
jg
fisttpl
mov
xchg
out
gs
lock
mov
cmpsb
pop
pop
bound
xor
lods
test
mov
xchg
mov
imul
add
orl
repnz
sub
adc
cmp
jl
push
iret
jl
imul
out
cmp
xchg
enter
into
enter
inc
adc
in
roll
adc
outsb
out
xchg
dec
pop
or
xchg
stos
dec
mov
inc
sub
daa
xchg
shl
sbb
and
adc
add
in
les
xlat
pop
or
push
pop
insb
repnz
imul
inc
js
xchg
int
cld
mov
int
notb
mov
lock
dec
push
add
mov
cmp
jno
and
packssdw
mov
inc
inc
out
cld
call
cmpl
sahf
and
lods
mov
pop
xchg
pop
jb
sti
adc
lods
jge
mov
arpl
addb
lret
add
xlat
divb
jo
jns
ret
jbe
outsb
inc
mov
mov
scas
inc
adcl
pop
shll
cld
sbb
scas
mull
mov
ficoms
mov
xlat
and
ror
inc
mov
jbe
push
sbb
or
loopne
test
movsl
jmp
mov
jecxz
cld
imul
clc
xchg
repnz
add
fistl
or
add
fbld
jl
adc
mov
xchg
cs
fstl
cltd
leave
mov
push
push
fiadds
out
mov
xlat
sarb
sbb
stc
lret
fsubs
xchg
add
or
or
popa
mov
mov
jae
icebp
rorb
push
push
mov
dec
js
into
add
sub
and
outsl
mov
pop
stos
or
xor
xchg
icebp
mov
sub
xor
and
pop
aas
mov
dec
in
fidivrs
divb
popl
or
rol
mov
inc
call
ret
data16
mov
aam
dec
int
jo
mov
aas
push
cmp
mov
lcall
subl
sbbl
jae
sti
pop
cmp
or
sbb
pop
lods
mov
dec
loope
std
add
push
fidivrl
inc
insl
arpl
lret
ljmp
int
movsb
loop
lock
sarb
push
xchg
pop
sti
xchg
into
mov
scas
or
push
sbb
hlt
lret
aas
and
addr16
mov
cmp
sbb
inc
les
sub
inc
jne
ss
ret
or
push
icebp
sub
sub
shll
das
testb
or
xchg
aaa
pop
aad
pop
loopne
pop
lods
sbb
or
mov
push
cmp
fisttpl
mov
in
xchg
mov
pop
jge
sbb
lret
aam
fistps
fadds
imul
fwait
cmp
pop
push
cmc
add
in
push
and
or
xchg
push
lods
pop
call
jb
fdivrs
pushf
xlat
cmp
sbb
dec
loope
dec
mov
out
push
jns
mov
adc
stos
cmp
sub
ljmp
sti
fsts
dec
aad
insl
pusha
stos
rolb
cmp
dec
push
cmc
subb
das
scas
les
cs
pop
dec
fsubl
mov
fwait
xor
pop
lcall
add
rorb
xchg
push
push
mov
cli
pop
jno
cmp
shr
sub
xor
cmp
jno
flds
lods
pop
pop
add
xchg
in
icebp
cltd
pop
jne
xchg
xchg
lahf
push
stc
xor
xchg
mov
xor
adc
movsb
add
lret
push
inc
xor
cmpsl
or
cmp
ss
jnp
pop
leave
push
mov
inc
lret
sbb
cli
xor
push
outsb
pop
pushf
daa
iret
xor
sub
out
and
push
lcall
fwait
out
cmp
mov
sub
mov
aaa
xlat
test
lods
orb
mov
push
jae
xor
jge
fwait
jmp
hlt
sbb
lock
lcall
jp
cwtl
push
mov
push
sub
das
dec
xor
inc
out
jecxz
xor
cmp
popa
shr
pop
pop
xor
rorl
mov
js
cmpsb
enter
sub
jg
repz
push
outsl
and
fiaddl
fwait
mov
jg
pop
push
pop
sub
pop
jl
cmp
dec
orl
sub
cltd
pop
lcall
ds
xor
outsb
lcall
rclb
xchg
jmp
mov
mov
call
inc
or
push
or
lock
cmpl
push
movsl
jge
lret
adc
cs
inc
adc
jmp
int
mov
pop
test
sahf
jl
jge
jmp
ret
daa
jno
cwtl
mov
aad
stos
loopne
imul
sbb
jl
dec
mov
loop
flds
mov
fcmovb
inc
lods
mov
cwtl
lcall
jns
push
sub
ret
mov
sbb
jmp
xor
aaa
xchg
es
and
test
movsb
push
and
hlt
pop
fwait
dec
dec
sub
fwait
out
jg
shrl
das
mov
lock
cmpsl
inc
cmpsl
mov
movsb
fnsave
mov
or
xrelease
fs
fwait
pop
out
outsb
pop
inc
mov
adcb
sub
lods
dec
mov
aaa
add
or
or
divl
or
xor
fstl
cmpb
pop
sbb
int3
mov
out
int
insb
jecxz
pop
or
sti
rcl
out
or
push
out
sub
push
pusha
mov
ret
call
out
jg
in
insb
sub
rcrl
jae
add
inc
jle
mov
mov
fwait
adc
or
insl
enter
mov
scas
jmp
adc
ds
inc
test
adc
or
lds
mov
xchg
sbb
xor
in
xchg
mov
in
das
ror
jnp
adc
iret
repz
insb
cwtl
or
inc
sti
adc
lret
pop
lahf
fidivrs
push
inc
into
jns
jae
lds
mov
lock
loope
pop
mov
pop
lods
imul
ss
jg
ffreep
lock
sbb
jp
ficoms
leave
mov
and
outsb
imul
daa
leave
lods
jbe
out
data16
push
into
mov
add
lcall
xor
shr
std
call
enter
mov
ja
scas
push
cs
push
mov
fisubrl
jmp
imul
popf
int3
std
imull
cli
lods
fs
mov
daa
incb
test
subl
mov
xor
cmp
jne
out
jae
int3
cmpsb
add
xor
or
stos
std
imul
fwait
insl
es
dec
mov
mov
pusha
pop
lret
je
and
xor
and
roll
pop
mov
dec
sti
cmp
mov
pop
call
jb
les
adc
lret
out
lock
call
call
mov
or
sbb
inc
push
and
fistpl
mov
xor
loope
in
out
adc
cld
or
iret
push
pop
fwait
test
push
out
rol
sub
ljmp
dec
xchg
cmp
dec
aaa
sub
or
fwait
xchg
adc
pusha
pushw
mov
outsb
aaa
or
dec
jbe
add
sub
test
int3
jge
push
fstpl
inc
jp
test
pop
xchg
bnd
movsl
sub
mov
loope
pop
or
mov
das
jbe
fwait
inc
mov
push
repz
sbb
mov
xchg
mov
gs
and
mov
add
clc
pushf
imul
out
lds
nop
mov
lahf
add
ror
fidivrs
imul
lret
push
mov
fstp
pushf
dec
aam
cmp
ror
jl
xor
insb
jnp
and
inc
or
add
or
push
lock
arpl
lea
rorl
sbb
imul
jnp
or
out
insl
scas
pop
sbbl
push
xor
or
inc
pushl
pop
pop
add
push
cli
fldt
xchg
aaa
xchg
and
test
imul
pop
imul
push
cmp
outsl
jne,pn
or
fcomp
mov
mov
xchg
stc
mov
mov
outsb
mov
call
mull
in
fwait
or
sub
enter
inc
or
jge
movsb
dec
jl
pop
or
jge
loope
or
add
cmp
jbe
mov
inc
ss
outsb
aam
testl
scas
icebp
jo
ror
test
stc
sub
dec
sbb
stc
scas
inc
loopne
dec
sub
push
sbb
and
aas
sub
push
xchg
sub
fisubs
dec
lods
cmp
fs
cmp
mov
cmpsb
dec
adc
lods
and
inc
jbe
xlat
adc
sbb
sbb
ret
inc
jl
scas
lods
sub
add
arpl
leave
cmp
jmp
xor
mov
or
cmp
cwtl
and
add
xor
sub
pusha
pop
js
dec
lret
aad
loop
ret
mov
jno
xchg
out
xchg
pushf
push
or
lods
cmp
pushf
pop
cli
mov
lahf
cmp
xchg
xchg
test
je
xchg
sub
mov
cmp
dec
xchg
fldcw
out
lds
clc
aaa
test
jmp
pop
sub
mov
mov
adc
pop
je
jne
mov
test
ja
xor
out
insl
bnd
es
iret
push
fcmovbe
push
lds
in
inc
xchg
mov
dec
push
lds
cli
out
arpl
inc
xchg
test
enter
lods
ficoms
scas
lock
in
sbb
aam
and
outsb
cmp
cwtl
loop
lcall
jecxz
stc
adc
xor
lea
push
shlb
lds
dec
sub
aad
dec
push
addr16
pushf
xor
scas
sbb
push
pop
rolb
cld
adc
jns
pop
sahf
xor
nop
std
sar
lret
dec
mov
loop
fsubrl
mov
subb
mov
jp
cmpsl
and
es
aad
pop
scas
pushf
es
sbb
cmc
cld
mov
mov
loop
cmc
dec
test
addr16
bound
dec
mov
ja
movsb
cs
clc
notb
and
inc
add
stc
xor
adc
mov
scas
sarl
sub
aaa
and
xchg
jmp
ljmp
mov
nop
scas
loope
std
fucomip
icebp
subb
pop
fisttps
jecxz
fstpl
mov
xor
xor
push
jl
mov
sbb
push
call
es
inc
lret
data16
jp
lcall
std
mov
outsb
orl
xchg
dec
mov
fidivrl
mov
ret
int
shll
pop
lret
sti
addb
dec
test
or
mov
scas
xchg
mov
loopne
jnp
enter
or
loop
xchg
lea
rcrb
daa
push
inc
fdivrl
jbe
jecxz
mov
das
adc
imul
sbb
xchg
cmp
pop
dec
pop
fistps
dec
pop
mov
push
pop
sahf
mov
xchg
dec
mov
lret
leave
jl
xchg
and
je
mov
xlat
fidivrs
and
sarb
loop
pop
mov
push
sbb
js
pop
in
inc
mov
dec
in
pop
push
or
sar
insb
push
in
nop
fs
mov
fsub
cmc
push
div
and
stc
fsubrp
or
leave
xor
push
fldcw
insl
push
inc
xchg
cmc
int3
cltd
mov
sub
mov
add
or
ljmp
mov
pushl
out
mov
push
movq
hlt
imull
lret
scas
dec
repz
sub
xor
mov
mov
es
outsl
aas
adc
jecxz
cmp
cmc
jg
sbb
idivb
jbe
xor
in
jae
loope
pop
and
cmc
xlat
xchg
rol
lods
mov
xor
sbb
scas
lahf
hlt
frstor
pop
sbb
inc
loopne
test
das
lahf
test
sbb
jmp
xchg
mov
mov
pop
dec
lock
int
test
repnz
xlat
cli
fstpt
filds
shrb
pop
test
mov
push
aam
pop
sbb
fisubs
ds
pop
push
sahf
insb
inc
cmpsl
pop
sbb
or
push
loopne
out
insb
mov
cmc
and
das
push
dec
jmp
push
inc
call
mov
jle
fucomip
push
adc
inc
loop
int
in
movsb
jle
fcmovnu
inc
daa
pop
test
insb
pop
mov
sbb
mov
adc
pop
cmp
outsl
push
les
lcall
pop
lahf
pop
push
xchg
push
in
stc
or
insl
jp
psubd
ret
add
cmc
fcomi
leave
addr16
mov
xchg
scas
shrl
mov
cli
loopne
jge
cmp
out
mov
inc
fsubrp
mov
mov
pop
js
or
jp
cmp
stc
shrb
addr16
xor
pusha
cmp
andb
movsl
pop
cmp
pop
adc
aas
stc
mov
jmp
into
push
mov
lcall
mov
repnz
xchg
leave
scas
outsl
pop
fistps
jg
jb
xchg
int
cmp
into
int
loope
push
clc
xor
cmc
test
out
push
jae
dec
push
jae
xchg
dec
repz
cld
insl
leave
jbe
cld
mov
js
jle
insb
jae
into
movsb
stc
data16
xchg
mov
dec
lgs
jge
mov
mov
xchg
or
iret
push
aas
or
bound
gs
cmp
andl
js
cmpl
cmp
loopne
test
sahf
xor
inc
xchg
adc
insb
and
xchg
push
mov
lret
loope
or
call
cmp
mov
jae
sub
imul
imul
cli
ret
fsub
ficoms
xchg
mov
in
mov
or
push
jmp
mov
xor
fcomps
loope
negl
sbb
jb
rorl
ljmp
lcall
insb
mov
mov
pop
sub
inc
lahf
and
insb
xor
cmpsl
mov
cli
or
adc
xlat
in
pusha
adc
cmpsb
std
or
mov
outsl
pop
cld
jbe
outsl
paddb
shrl
mov
ret
xor
sahf
pop
lock
andb
sbb
push
dec
sbb
add
bound
mov
xor
inc
xchg
dec
xchg
cli
sbb
dec
call
outsb
mov
jns
sti
dec
roll
xchg
pop
fisubs
test
sbb
adc
push
pushf
rolb
jge
hlt
or
pop
xchg
inc
clc
cmp
jae
jnp
das
sub
shll
lret
push
xor
mov
insb
mov
jg
divl
mov
stos
enter
jb
lods
and
stos
mov
lds
mov
por
hlt
mov
jg
stc
das
int3
mov
cmp
sub
aad
test
out
imul
mov
and
repnz
loope
jmp
mov
sti
xor
int3
mov
adc
inc
sbb
xor
aad
pop
jmp
mov
cmpsb
fcmovnbe
and
inc
cli
cmpsb
je
lods
add
mov
faddl
ds
lods
and
xchg
mov
xchg
or
in
int3
scas
ljmp
ljmp
call
test
sub
mov
and
xchg
test
jmp
in
mov
xchg
es
cltd
xchg
and
setle
data16
sub
mov
mov
insb
xchg
dec
push
add
mov
sbb
movsb
push
or
dec
fldl
push
add
dec
repnz
les
fiaddl
jae
fs
ret
fiaddl
and
sbb
jg
mov
test
sbb
dec
push
jp
cli
mov
jae
bnd
add
pushf
xor
fisubs
mov
in
cld
xchg
jae
test
mov
insl
inc
std
not
enter
ja
cli
xchg
ds
push
cld
ret
push
or
insb
mov
pusha
hlt
repz
push
aaa
sub
dec
call
adc
jg
jbe
inc
dec
sbb
pop
xchg
cmc
or
sbb
neg
mov
in
test
lods
mov
mov
add
adc
dec
sub
call
popl
jecxz
stos
movsl
dec
xchg
inc
mov
inc
mov
jmp
dec
cmpb
lahf
or
dec
inc
mov
pop
aas
cmp
bound
push
mov
mov
xchg
pop
jnp
scas
add
inc
mov
mov
jp
gs
mov
scas
pop
xor
repnz
addl
jnp
lahf
call
xchg
imul
adc
jae
imull
and
inc
shrl
scas
fisubrs
jmp
lret
pop
lcall
lcall
ds
int3
iret
jle
push
lea
test
fcoml
sti
cmc
mov
ss
mov
push
jmp
es
cmp
mov
mov
push
add
out
fwait
mov
mov
jne
imul
xchg
ljmp
dec
sbb
loopne
xor
stos
mov
cld
mov
pop
xchg
rorb
add
repnz
ljmp
push
ret
pop
adc
inc
add
mov
or
inc
in
dec
clc
fistpll
sti
sbb
je
sub
clc
jnp
sub
cld
shll
push
cmp
sarb
dec
clc
mov
xor
inc
xor
data16
out
icebp
cltd
aam
lret
and
xor
xor
and
jbe
dec
inc
cmp
xchg
out
jne
rol
mov
repnz
inc
cltd
and
stc
sub
ret
cwtl
mov
adc
std
and
mov
push
jbe
xchg
mov
cmp
sub
mov
out
pop
xor
shl
mov
mov
lock
hlt
fidivs
inc
leave
ficomps
sbb
sbb
ss
js
aaa
popa
xchg
pop
sub
scas
ljmp
sub
add
mov
cmp
push
ds
sub
sbb
inc
clc
inc
sub
and
movsl
and
or
fcmovb
aam
push
data16
sub
dec
mov
lcall
fsub
lret
negl
ljmp
jmp
repz
aaa
xchg
movsl
je
mov
adc
call
fs
dec
sbb
jge
cmpps
outsl
sub
ds
sub
jle
hlt
out
ficoml
in
xchg
outsb
in
cli
and
mov
aaa
mov
sub
push
xor
push
pop
xchg
dec
cmp
sub
fwait
pop
xchg
and
jns
cmp
xchg
xchg
rorb
sub
insb
int
sub
mov
pop
sbb
push
rorl
in
and
inc
ja
xchg
xchg
out
sbb
rcrl
test
les
ret
repnz
lock
pop
test
inc
mov
mov
in
outsl
rclb
push
ds
mov
jecxz
test
and
jp
cltd
adc
call
jge
jo
cli
rorb
rolb
or
cmp
fldenv
xor
add
sbb
mov
aam
pop
xor
insb
dec
test
mov
je
pop
dec
data16
and
pushf
lods
int
jno
mov
mov
movsl
mov
jnp
neg
and
outsb
push
xchg
add
or
sbbb
loop
inc
or
aaa
sbb
mov
fidivs
repz
insl
data16
out
cmp
jns
or
cs
and
sbb
jle
pop
jecxz
mov
jmp
sbb
adc
sub
xchg
xchg
sbb
pushf
data16
adc
sub
sbb
in
xor
push
outsl
jp
xchg
push
add
gs
pusha
add
insl
out
aaa
pusha
cltd
mov
pushf
js
jp
sbb
pop
lahf
enter
rcrl
adc
in
mov
in
shrl
xlat
jne
cmc
les
dec
sub
js
inc
aaa
mov
pop
add
cmp
bound
rclb
jae
add
call
insl
icebp
mov
mov
mov
push
xchg
adc
out
add
xor
add
popf
jmp
xchg
mov
into
add
jl
fistpll
mov
and
jns
popa
in
and
int
shll
test
rorb
push
loop
add
insb
arpl
popa
or
icebp
mov
clc
mov
add
in
js
pushl
ljmp
dec
xchg
pushf
pop
dec
stos
leave
cmp
add
loop
or
hlt
ja
in
subl
lock
xchg
and
cmp
movsb
jbe
sub
xchg
inc
mov
pop
enter
inc
sbb
int
popf
xchg
and
loop
sbb
push
xlat
mov
pusha
gs
sbb
sub
dec
popf
call
mov
out
mov
decl
cmpsb
push
jg
mov
mov
out
dec
pop
leave
out
or
add
outsl
mov
add
dec
addr16
adc
mov
mov
inc
sbb
adc
xchg
jg
mov
das
lret
cmp
and
iret
out
out
xor
lret
xor
mov
roll
mov
popa
push
into
dec
nop
fisttpll
or
loop
jmp
adc
or
mov
cli
lea
gs
mov
jge
and
mov
pop
jnp
test
push
fstps
test
dec
push
mov
add
dec
add
mov
stos
adc
cmc
cmp
pop
dec
jns
scas
sbb
jmp
andl
add
xchg
gs
daa
mov
sahf
scas
addr16
or
push
sahf
sub
loop
nop
push
leave
shr
dec
mov
nop
popa
fcomps
aad
ret
out
scas
test
pusha
jp
filds
jae
insl
mov
adc
adc
jmp
dec
cmp
adc
jae
xchg
push
mov
sbb
mov
push
int
pop
int
pop
cmp
out
jae
xchg
or
sub
dec
mov
pop
mov
ljmp
push
xor
test
jmp
pusha
repz
push
or
mov
xchg
xor
cmp
out
es
imul
testb
and
fiadds
cmp
loop
jge
and
pop
mov
xchg
sub
popf
cs
cld
mov
ja
daa
sub
sbb
mov
ret
jmp
jge
out
pop
out
ret
cmp
sbb
outsb
popf
sahf
sbb
lret
ja
pushf
cmp
stos
sbb
jmp
mov
movsl
lds
add
dec
nop
add
outsl
and
and
fmulp
sti
sub
gs
sbb
sub
ret
cmp
fwait
sub
adc
addb
jbe
je
rolb
add
or
or
test
xchg
inc
cli
lret
mov
cmpsb
or
fstpl
imul
pop
inc
sbb
jecxz
test
mov
aad
and
out
mov
adc
jb
mov
pop
mov
jbe
enter
loopne
pop
bound
inc
cmc
ficoml
ret
push
or
in
jbe
lahf
sbb
xchg
push
mov
cmpsl
repz
mov
inc
mov
fdivl
xorl
jmp
daa
leave
mov
or
ret
clc
and
jg
add
fucomi
mov
xchg
add
pop
cltd
pop
sub
pushf
sbb
mov
lcall
sub
jo
daa
insl
fstpl
loopne
sahf
xchg
sbb
pop
rorl
stos
out
dec
scas
sbbb
cmp
inc
lock
or
pop
or
sub
imul
push
push
push
test
rolb
push
jb
cmpl
mov
or
mov
loope
mov
add
aas
xchg
jnp
notb
rcrb
mov
ret
dec
mov
pop
lock
clc
mov
dec
mov
sub
repnz
sbb
cwtl
mov
mov
sbb
mov
int3
or
mov
ret
loop
xorl
adc
cmc
adc
push
jecxz
pop
push
mov
add
sbb
xor
imul
push
aad
rolb
push
or
in
cmp
jno
leave
hlt
and
shlb
xor
ss
xchg
in
or
leave
mov
fdivl
outsb
dec
mov
lods
movl
inc
jecxz
rorl
jno
pop
clc
fildll
cmpsb
mov
int3
add
push
xlat
add
gs
add
pop
loop
cltd
mov
fcmovne
in
dec
push
sahf
out
ja
dec
dec
out
sbb
push
mov
xchg
mov
push
sbb
cmp
mov
inc
cwtl
lods
aaa
xor
adc
jno
xor
arpl
xor
loop
cmp
jmp
in
push
jnp
out
lds
cmpb
push
push
inc
push
push
sbb
xchg
cmp
sub
outsl
aam
lods
scas
and
pop
movsl
cmc
xchg
sub
fxch
clc
sbb
clc
orl
std
jo
leave
fistpl
insl
pop
push
js
clc
mov
mov
push
push
jp
sub
xor
in
or
fisttps
xlat
and
ret
loopne
faddl
aad
cmovp
mov
pop
adc
push
push
cmp
mov
popf
push
insl
loop
push
push
cmp
jbe
clc
jg
inc
subb
jae
pop
sbb
loope
inc
cli
aas
movsb
jl
rcrl
pop
mov
xor
lahf
jmp
cmp
imul
xor
inc
out
dec
xchg
ret
aas
subl
sbb
aaa
cltd
outsb
mov
fs
mov
lret
cltd
push
out
or
jle
pop
imul
xchg
pop
jge
dec
aas
inc
scas
and
icebp
mov
sbb
and
add
shll
push
cld
pop
test
jae
cmp
inc
xchg
adc
mov
shl
inc
or
inc
jae
pop
cmp
lods
xlat
or
dec
xchg
test
addb
in
jnp
adc
inc
sbb
scas
loopw
push
mov
jg
cmp
lds
cli
adc
in
jg
cmpsl
test
lret
xchg
packsswb
mov
movsb
cmc
pop
rcr
xchg
or
sub
jmp
and
cltd
mov
inc
inc
cmp
dec
movsb
insb
and
out
dec
xchg
aam
loopne
ljmp
push
inc
pop
insb
fstps
stos
mov
sub
std
movsl
cld
mov
dec
dec
out
shlb
add
aas
out
cmp
ret
leave
scas
xor
jno
insl
xlat
sbb
scas
cli
sbb
pop
insb
mov
mov
pushf
pop
fisttps
jecxz
jno
lea
sbb
fstpt
mov
addr16
pop
inc
cmpb
pop
adc
aad
jp
dec
dec
stos
mov
dec
js
lock
ficomps
movsb
pusha
jmp
xlat
xchg
lods
lock
in
out
sub
adc
pushf
mov
sbb
mov
pop
push
adc
jnp
stc
and
mov
test
push
jge
pop
fnstenv
call
fisttpl
inc
insl
jmp
and
and
fcoms
notl
xor
adc
add
jecxz
inc
stc
leave
mov
adc
fistps
jp
jbe
xor
mov
mov
sbb
pop
cld
xor
sub
push
cmp
xor
test
pusha
push
outsl
sub
jl
jp
mov
aaa
jge
ja
adc
in
popa
inc
xchg
pop
outsl
add
pop
mov
arpl
rcrb
mov
sbb
cs
add
jge
cs
sub
push
test
xor
outsl
cmp
ja
outsb
adc
jo
cmpsb
aad
mov
inc
insb
push
aad
mov
xchg
jp
push
nop
xchg
movsl
pop
cmp
xchg
sbb
cmp
push
fdivl
xchg
shl
cmp
lahf
sbb
jmp
icebp
cmp
xlat
cli
mov
push
mov
ret
fcoml
or
movsb
and
ret
outsb
push
addl
mov
xlat
pop
xor
mov
mov
jns
mov
xor
add
cmpsb
je
addr16
aad
test
push
xchg
or
std
pop
mov
inc
aas
xsave
inc
xor
jmp
cmp
jecxz
mov
adc
jge
jno
jno
pop
mov
dec
loope
cmp
add
enter
cmp
adc
outsb
xchg
dec
into
mov
test
rcl
jno
das
cmp
iret
addb
lcall
dec
adc
cs
xchg
enter
je
fdivrs
call
cmpsl
mov
insl
clc
neg
iret
ror
stc
push
sbb
add
fcoml
dec
out
je
push
lea
sahf
je
jl
test
jmp
or
xchg
sub
movsb
jecxz
loope
stos
in
cld
test
pop
clc
pop
popf
mulb
frndint
mov
lock
mov
lea
push
cmp
cs
xor
ja
mov
cmp
sbb
xchg
pop
addr16
fwait
dec
mov
sti
xor
ds
sub
call
aaa
sub
test
jb
inc
loopne
insb
fisubs
int3
mov
scas
outsl
sbb
test
js,pn
jmp
call
cld
sbb
aad
jge
pushf
and
mov
fs
add
jne
fldt
jbe
es
lods
rorb
in
xor
into
int3
and
mov
stos
imul
into
out
sbb
icebp
add
cmp
popf
pop
pop
cmpsl
data16
pop
insb
aaa
dec
into
mov
lds
sub
jne,pt
bound
int3
mov
mov
je
or
movsl
lods
adc
lods
in
cmpsl
test
mov
xor
roll
enter
inc
cmp
cmp
jg
ret
mov
mov
repnz
inc
jle
out
pusha
fs
jge
lret
sti
fidivrl
lret
adc
jno
push
cmp
in
dec
iret
xchg
sbb
andb
mov
stos
cli
in
mov
push
dec
scas
cmp
call
outsl
sarb
mov
fists
or
adc
hlt
es
sub
cmp
pop
das
insb
loop
mov
fwait
or
inc
inc
outsb
adc
loopne
sbb
negl
xor
lds
jecxz
inc
loope
add
cmp
test
mov
dec
cmpb
nop
dec
mov
arpl
push
jno
xor
mov
inc
sbb
ret
or
ds
stos
mov
daa
pop
mov
pusha
out
cltd
lret
xchg
add
stos
mov
xchg
adc
jae
sbb
mov
mov
js
sarb
or
mov
push
dec
or
pop
aaa
mov
adcb
mov
hlt
int
jl
test
add
fimuls
pop
movsb
jo
xor
negl
or
lods
adcb
insb
add
test
sahf
mov
and
sub
clc
and
fadds
push
dec
inc
xor
fcompl
in
jbe
cmpsb
jb
inc
repnz
sbb
xor
test
mov
aad
mov
aaa
xchg
or
mov
scas
mov
mov
pop
mov
mov
mov
push
int3
movsb
in
xor
outsl
test
sbb
and
add
jge
xchg
fstpt
fstpt
cmp
iret
in
scas
loopne
inc
push
js
ljmp
aam
shlb
mov
dec
add
push
add
dec
sub
add
cmp
out
sbb
jle
outsl
clc
mov
outsl
es
and
lea
lock
mov
mov
enter
aaa
mov
icebp
or
xor
mov
fs
stos
fcoms
mov
fimull
fcmove
jns
in
and
adc
adc
cmpsl
and
mov
daa
push
bound
mov
or
fcoms
aad
jne
imul
ret
hlt
std
push
pop
add
xor
test
addr16
inc
lcall
neg
xchg
xor
lods
aad
and
imul
mov
inc
int
mov
movsb
inc
sarb
adc
dec
addl
push
sub
repz
cmp
cs
xlat
push
sub
andl
or
mov
mov
cmpl
enter
cmpsl
int3
lds
xor
in
jno
mov
outsl
pop
rorl
jle
dec
xor
jmp
sbb
aaa
bound
xor
shr
push
mov
ret
sbb
pop
fbstp
pop
mov
movl
sub
and
pop
shrl
jge
shrb
dec
idivl
inc
movsb
sub
xor
pop
movsb
cmpsl
xchg
add
xchg
mov
orb
stos
fimull
test
adc
push
xor
and
inc
arpl
or
mov
push
enter
sbb
sub
xchg
imul
sub
mov
add
sbb
bound
lock
stos
dec
pop
sub
mov
aaa
inc
mov
mov
hlt
xlat
jl
xor
loope
pop
mov
das
pop
cmp
das
push
inc
inc
data16
jl
jb
jb
push
mov
cmp
pop
shr
mov
jp
and
shll
adc
movsb
sub
nop
pop
dec
sbb
mov
jne
gs
sub
jmp
sub
sbb
test
xor
cmp
je
pop
inc
mov
imul
cmp
in
jns
mov
push
stos
inc
aas
jo
cmpsb
les
mov
add
fwait
psraw
lock
or
es
loop
push
sub
clc
cmp
and
das
into
andl
imul
fwait
and
xor
rolb
mov
movl
jb
inc
mov
and
push
icebp
sti
xchg
stos
lret
and
fadds
mov
fs
nop
les
xchg
adc
loopne
fsubrs
mov
push
mov
push
out
es
or
sbb
insl
bswap
jne
lock
pop
sahf
mov
jae
mov
xchg
outsb
inc
dec
into
rcr
nop
cmpb
or
or
xchg
mov
sub
cmpsb
fcoml
jp
cmp
movsb
push
mov
neg
add
xchg
leave
mov
loopne
adc
sbb
lods
xchg
jmp
in
shrl
gs
scas
cmp
out
test
aad
adc
neg
stc
or
js
aaa
adc
mov
loop
ljmp
inc
mov
mov
xchg
pusha
dec
dec
xchg
inc
push
mov
cmp
stos
push
outsl
sub
lcall
push
xchg
je
daa
add
aaa
inc
sbb
and
dec
inc
add
insl
add
ljmp
mov
ljmp
lock
xchg
addb
push
jge
rol
inc
ja
adc
lret
lahf
pop
pop
sub
out
cmpsb
mov
mov
push
cmp
push
cmp
push
invd
aaa
dec
mov
hlt
inc
add
out
loop
push
roll
out
test
out
xor
insl
xchg
jge
loopne
cmc
idiv
push
cld
push
imul
jle
das
imul
and
mov
inc
imul
and
ret
and
repz
test
dec
ljmp
push
add
lcall
xlat
loop
and
inc
outsb
adc
cmp
scas
lret
ret
jg
and
in
xor
sub
fcmovbe
jp
xchg
mov
fnstsw
or
push
dec
lahf
add
jo
ret
pop
es
icebp
ss
inc
out
fcmovnu
fdivs
pop
fcompp
mov
lret
sti
sub
sbb
xchg
and
pop
inc
xor
decl
add
pop
jmp
inc
stos
xor
loopne
clc
xor
repnz
dec
leave
add
push
xor
and
jmp
mov
retw
pop
in
push
mov
movsl
jno
xor
push
sarb
mov
cmp
sub
pop
mov
adc
addr16
jecxz
es
test
mov
enter
adc
cmc
push
pop
push
inc
insl
sub
push
jp
aad
push
lds
sub
stc
subb
push
sbb
das
clc
ret
mov
lock
mov
cmp
repz
mov
icebp
sub
loopne
or
pop
pop
iret
sti
push
pushf
outsb
cmp
inc
mov
lea
push
jbe
push
cmpsl
dec
cwtl
or
lock
mov
xor
fadds
lock
out
dec
lea
xor
cmp
out
cmc
std
mov
rcrl
sahf
cmpb
sub
mov
outsl
dec
rolb
out
mov
popl
push
fmuls
cmp
and
sarl
out
mov
in
inc
jg
popa
jg
jno
mov
jns
sub
div
fiadds
pop
pop
cs
aam
cli
subl
out
hlt
imull
cmp
sbb
cmp
inc
cmp
shll
xchg
fdivrs
lret
pop
mov
or
outsb
sti
in
cld
sahf
push
call
mov
dec
inc
stos
mov
popf
dec
sub
insb
mov
inc
xchg
mov
mov
int3
les
loop
pop
sti
cmp
inc
mov
lods
movsb
mov
sti
ljmp
insb
in
lods
into
js
jp
xlat
sub
sbb
fsubrp
insl
stc
sbb
jns
mov
xchg
jbe
push
push
insb
adc
or
sti
and
insl
daa
xchg
xchg
stos
inc
cwtl
sbb
jecxz
je
push
mov
cli
adc
dec
fcompl
cld
xor
adc
dec
mov
aas
jno
rcll
adc
dec
mov
iret
shll
nop
mov
imul
cs
sbb
mov
lahf
jae
sbb
jmp
cvtdq2ps
mov
in
add
je
jae
xor
jp
lods
in
loop
imul
cmp
or
dec
push
adc
sub
dec
dec
test
xor
jns
lcall
outsl
dec
pushl
pop
hlt
popf
cmpsb
sub
dec
loop
or
cmp
mov
cmp
lahf
stc
dec
add
pop
xchg
dec
mov
inc
and
adc
add
xor
mov
and
test
sub
pop
insl
les
jle
jmp
out
decb
xchg
xchg
inc
lret
jne
pop
pop
lret
adc
dec
pushf
inc
inc
aad
andl
inc
pushf
daa
gs
push
and
stos
cltd
mov
push
cs
lea
aad
data16
pop
outsl
jle
jb
fisubrs
lahf
push
arpl
idiv
pushf
loopne
fs
fstpt
push
cmp
inc
daa
ljmp
xchg
add
jnp
testl
fwait
add
xor
cmpsl
sbb
mov
ret
mov
in
test
fiadds
mov
sahf
jge
and
xchg
mov
cmp
test
dec
sbb
and
dec
out
xchg
movsb
nop
scas
cli
adc
enter
in
test
movsl
test
aam
lcall
ret
bswap
shl
aas
std
fcoms
sub
push
xchg
adc
cmc
xor
cmp
jmp
insl
out
ficompl
dec
aam
dec
fwait
sub
iret
loopne
adc
fidivrs
sarl
mov
mull
clc
les
loop
sarl
icebp
push
es
fwait
mov
cltd
je
les
xor
lds
sub
mov
popf
push
sub
push
adc
cs
aas
shll
mov
test
loop
cmpsb
xchg
sbb
xor
aad
fxch
test
dec
push
dec
fstpl
test
out
jne
xchg
push
int3
lock
xchg
addr16
pop
outsl
loopne
fdivp
daa
sbb
pop
pusha
les
loope
jno
ljmp
notl
stc
pop
xchg
and
adc
mov
dec
mov
aas
sub
shl
jo
jg
add
pop
call
pop
divl
pushl
sbb
and
insb
add
pop
sub
outsb
or
stos
mov
mov
jl
sub
aaa
ret
not
dec
xlat
out
ret
lods
push
inc
push
punpckhdq
repz
sub
add
fsts
jecxz
in
mov
push
pop
push
iret
push
dec
xchg
loopw
xor
fldenv
mov
ret
out
adc
mov
mov
ja
jb
rcrb
lods
mov
push
xor
stos
aas
lahf
sbb
mov
mov
das
jecxz
xor
pop
jle
test
xor
push
cmp
jbe
test
push
inc
jnp
mov
out
push
cli
lahf
in
aas
lcall
push
push
sbb
lcall
push
ficoml
aaa
ficoms
out
repz
or
fiaddl
mov
imul
fbstp
mov
jl
insl
movl
adc
add
push
pop
movsl
mov
unpckhps
test
cs
out
cmpsb
mov
cmp
xorl
aaa
and
or
cmp
shrl
cmp
adc
xor
cmp
sub
orl
xlat
pop
cld
dec
cwtl
mov
mov
mov
jmp
push
cs
inc
fsubrp
xchg
cmpsl
xor
pusha
das
sub
add
push
push
les
pop
sub
xchg
enter
int3
in
call
mov
inc
jg
sub
mov
lahf
mov
fs
push
pop
mov
mov
out
xor
xorl
repz
das
xor
mov
push
mov
scas
dec
sbb
mov
pop
shlb
idiv
cltd
xchg
inc
jbe
push
cmpsb
xchg
scas
and
mov
add
scas
xchg
mov
shll
cmpsb
cmpsb
jns
xlat
or
jmp
jg
inc
cmp
add
ret
and
pusha
push
jmp
aas
leave
and
imul
dec
mov
shrb
sbb
or
mov
xor
std
adc
in
xlat
jbe
xor
jnp
aam
divb
jbe
out
inc
mov
cmpsl
xchg
dec
scas
mov
push
cmpsb
fs
icebp
or
outsb
je
subb
xor
out
push
push
adc
sub
xor
cltd
loop
fwait
mov
outsl
into
in
pusha
dec
or
lock
in
sub
in
mov
sub
ljmp
cmp
or
adc
pushl
push
xlat
pop
pop
dec
pop
loop
fsts
xor
mov
sahf
ret
fisttps
mov
rcrl
movsb
push
mov
dec
loope
or
movsl
test
enter
js
clc
shl
pop
lea
add
add
inc
jns
inc
xchg
adc
lahf
or
pop
sub
cmp
dec
int3
push
pop
test
call
xchg
sub
dec
sbb
cmp
push
add
jno
out
shr
jge
scas
or
xor
cmp
aad
scas
mov
or
jecxz
imul
out
into
sbb
in
mov
fwait
push
es
ja
fldt
mov
push
ret
xchg
jle
cmp
scas
sub
leave
jmp
push
sub
repnz
xor
aas
in
lahf
scas
cmp
inc
cwtl
xor
adc
arpl
frstor
or
mov
jb
pop
insb
or
push
xchg
outsb
xor
push
mov
push
pushf
mov
je
sub
cld
xchg
inc
push
gs
cmp
xchg
lea
fsts
mov
xchg
jge
pusha
sub
leave
mov
xchg
adc
push
sbb
pop
leave
xchg
mov
mov
test
adcl
pop
xchg
test
repnz
mov
or
pop
or
jp
jnp
xchg
enter
xchg
hlt
inc
push
cwtl
shl
push
test
int3
pusha
repnz
testb
mov
and
in
nopl
add
fcmove
mov
pusha
int
push
sub
xor
cld
mov
mov
mov
enter
mov
daa
scas
loope
shlb
xchg
cmp
xor
testb
or
inc
lea
adc
sub
sbb
xlat
mov
fs
mov
loope
jnp
sbbb
push
jbe
jnp
pop
outsl
or
xor
lock
in
mov
gs
sbb
inc
aad
lock
xor
pop
imul
push
adc
ret
dec
out
out
popf
cmp
jo
pop
mov
mov
sbb
ret
shrl
into
push
scas
rcr
shl
imul
fisubrl
xor
dec
cmc
xlat
or
and
cmp
movsb
in
pushf
es
adc
data16
push
or
sub
dec
cmpsb
shll
iret
jp
jge
movsb
xchg
ret
jp
stc
jne
inc
cmp
jbe
outsb
rcl
lods
and
jmp
je,pn
mov
in
mov
sbb
sub
xchg
sub
sub
addr16
pusha
mov
fsts
cmpsb
je
cmp
lds
sarl
ja
sbb
out
mov
cmp
daa
insl
out
lret
jne
rcl
xor
insl
mov
cmp
std
dec
xor
gs
bound
mov
and
setb
daa
adc
xor
subb
add
and
mov
test
dec
movsb
lret
mov
shlb
pop
inc
sahf
ret
and
mov
enter
dec
test
adc
outsl
xor
xchg
movsl
push
bound
dec
enter
jle
ljmp
sbb
cmpsl
sub
inc
sbb
adc
std
sub
enter
xorl
push
or
cli
aas
test
scas
hlt
push
jb
stos
jge
loopne
add
jl
mov
icebp
bound
push
enter
push
out
cltd
in
adc
xor
sub
lret
xchg
jno
jbe
andl
sub
je
cli
imul
mov
adc
xchg
mov
xchg
jl
add
pop
ret
sub
pushf
or
inc
jns
adc
popf
out
cmpsl
stos
mov
imul
add
ret
adc
stos
inc
jns
xlat
mov
cmp
sub
and
shrl
cld
and
movsl
xchg
pop
jb
addl
adcl
stc
jnp
and
scas
in
jne
and
iret
mov
popa
cmpsb
mov
sbb
sbb
cmpsl
adc
push
fcmovnu
sub
daa
mov
mov
rorb
pop
loope
test
dec
imul
icebp
push
sub
push
loop
mov
scas
sahf
adc
xor
arpl
aas
and
ja
jns
xchg
xchg
mov
fsubs
pusha
pop
cmpsl
inc
pop
cmp
xchg
clc
jle
and
cmpsl
sub
jmp
push
out
ss
or
enter
aad
gs
ffree
mov
lea
sbb
sete
jae
mov
add
cld
ss
mov
lret
in
loope
pand
lds
into
cmp
xor
jno
add
imul
dec
mov
jb
les
jmp
push
push
dec
jle
and
add
test
enter
add
ja
in
add
addr16
cmp
add
adc
sbb
mov
ds
scas
jo
mov
mov
shr
fisttps
xchg
insl
mov
movsb
mov
cmp
jp
and
outsb
jnp
add
add
fsubs
mov
mov
dec
push
xorl
aaa
sub
lret
sub
out
add
int
add
jge
sub
enter
sti
fcomps
ljmp
jmp
sbb
mov
ja
popl
push
sub
frstor
in
enter
xor
xlat
loope
das
popf
sbb
jle
adc
loope
dec
shll
push
mov
mov
aas
mov
or
or
add
sti
sbb
mov
es
loop
out
inc
mov
adc
pusha
sbb
cmpsl
mov
clc
jecxz
lahf
scas
out
clc
jns
jle,pn
loop
mov
and
pop
pop
mov
daa
sbb
repnz
xor
adc
lock
push
pusha
inc
pop
bound
lods
mov
mov
movsb
shrl
push
jb
in
or
cwtl
mov
xor
cmp
pop
dec
fsub
pop
popf
ret
shl
pushf
xchg
or
xor
insl
insb
das
jge
mov
xchg
jmp
dec
add
xchg
or
mov
lcall
adcb
repnz
cmpsl
popa
xchg
pop
sub
xor
call
call
mov
sub
ret
sbb
adc
xchg
pop
andb
lods
ret
jbe
inc
sbb
call
mov
and
add
mov
mov
lods
jne
jbe
and
cmp
int
lods
xchg
cld
xchg
push
mov
dec
jl
out
jno
jg
push
mov
movsb
push
push
mov
aad
add
pop
pushf
hlt
mov
push
push
cltd
bound
test
xchg
pop
xor
loope
ljmp
and
andl
xor
ret
push
mov
mov
xchg
es
mov
jp
inc
inc
inc
xor
and
mov
pop
test
repnz
lock
pushf
shl
jmp
sbb
adc
sub
push
jmp
std
sbb
jl
out
sbb
scas
xchg
push
jecxz
insb
mov
lock
in
ret
pop
dec
fimuls
das
rclb
das
add
in
pop
mov
push
sahf
sub
push
mov
rolb
mov
xchg
ds
mov
ja
inc
mov
jp
imul
call
and
mov
sbb
push
push
jmp
push
xchg
jae
dec
divl
add
fidivrl
shlb
push
pop
mov
lds
inc
in
mov
sahf
add
mov
and
or
push
add
inc
add
pop
cmp
pop
clc
es
nop
int3
xchg
movsb
push
sub
dec
mov
jge
or
lds
aam
add
mov
xor
mov
repnz
xor
xor
mov
inc
mov
mov
push
add
imul
jecxz
xor
fisubrs
pop
int
fs
push
adc
xchg
repz
push
outsl
pop
and
adc
push
int3
les
cmp
push
xchg
jnp
xchg
cmp
gs
sub
lahf
ljmp
xlat
nop
movsb
xchg
adc
test
aam
test
loop
daa
icebp
in
out
insb
mov
sbb
xchg
pop
mov
insb
and
push
and
mov
mov
adcl
in
rclb
into
jmp
rcl
shlb
xor
cmp
adcl
jecxz
pusha
sub
imul
xchg
mov
adc
aaa
repz
xor
out
insb
inc
pop
and
movsb
fcmovne
loop
adc
es
mov
mov
push
xchg
push
mov
mov
fwait
push
inc
lcall
fmulp
sub
ja
xchg
adc
sarl
sbb
xor
cmp
mov
xor
mov
xor
shrl
orl
enter
movsl
out
js
je
mov
push
push
cmp
and
movsl
xor
adc
test
sub
insl
mov
inc
sbb
mov
add
push
les
je
mov
call
or
fcmovb
hlt
pop
in
pop
ret
int3
fwait
and
xor
rorl
fisubl
test
flds
mov
outsl
scas
orl
adc
rolb
js
insb
fsubl
insb
lcall
sbb
or
insb
jmp
cli
sahf
out
jb
inc
pop
out
repz
icebp
add
adc
adc
xchg
adc
mov
xor
and
lds
mov
test
lds
icebp
sub
stc
xor
xchg
mov
add
ljmp
inc
jns
sbb
lock
fmulp
int
into
sub
sbb
mov
cld
movsb
inc
cwtl
pop
in
push
inc
sub
mov
dec
int
push
xor
mov
mov
xchg
lcall
sahf
xor
jle
or
movsb
sbb
mov
or
mov
xchg
ret
mov
push
push
movsl
jnp
adcl
or
push
std
dec
ja
mov
inc
mov
in
push
jg
sti
sub
push
out
mov
inc
mov
pop
sbb
arpl
inc
adc
adc
insb
pop
out
sub
call
lahf
cmp
in
cmp
xor
xchg
fcomi
lcall
stos
mov
fstps
rcll
test
in
nop
arpl
sub
mov
push
sbb
push
and
scas
fmuls
cmp
mov
or
mov
xor
sahf
add
fidivl
lahf
pop
push
dec
out
or
pop
aam
sub
push
jmp
leave
les
jne
movsl
xchg
jae
cmp
pop
sti
fdivr
loopne
sbb
adc
cs
call
mov
mov
imul
cmp
sbb
push
in
pusha
cmc
sahf
cmpsb
dec
adc
mov
scas
sub
aad
xchg
rcl
and
cmp
pop
mov
loop
add
subb
push
in
fsubp
xorl
xchg
bound
add
arpl
insb
imulb
jae
xchg
xchg
out
sub
push
adc
fs
lods
enter
mov
pop
pushf
pop
mov
push
movsb
mov
lock
push
push
sahf
xor
arpl
push
xchg
pop
xor
aam
repnz
pusha
cmovae
jnp
outsl
xor
shl
jp
nop
mov
stc
hlt
sbb
rcll
imul
aad
data16
add
nop
pop
movsl
sub
roll
mov
dec
dec
dec
enter
adc
outsb
dec
mov
mov
mov
cwtl
xchg
sbbl
sub
cmpsb
or
adc
aad
mov
push
and
push
inc
in
sbb
xchg
in
jbe
lret
push
dec
fsubrs
xlat
push
call
push
cmp
and
inc
out
jo
js
ret
xor
fcoml
xchg
mov
imul
lds
push
enter
push
sub
lods
inc
add
ficomps
inc
scas
push
xor
loopne
or
mov
mov
ja
inc
das
adc
jns
lods
inc
push
popa
mov
mov
and
or
sbb
and
test
les
pusha
xchg
nop
cmp
and
insl
xor
out
push
fmuls
mov
loope
outsl
das
in
rolb
dec
mov
lock
jae
add
xchg
xchg
mov
flds
xor
jl
adc
jae
repz
lods
loop
shlb
push
mov
push
icebp
repnz
push
sarl
das
imull
cmp
sbb
push
leave
xchg
fucom
mov
stos
movsl
and
xor
and
test
mov
lret
adc
xchg
outsb
adc
xchg
fcoms
mov
je
cmp
cwtl
jmp
pushf
arpl
xchg
loop
test
mov
jl
ss
xchg
mov
adc
pop
push
sbb
push
out
movsl
push
cmp
aas
xchg
in
out
repnz
addr16
das
or
in
fwait
add
jbe
jg
sti
add
std
mov
ja
jb
jl
push
mov
mov
aaa
sbb
jmp
sbb
jb
inc
std
mov
pop
in
ljmp
int3
test
cs
pop
enter
test
ss
mov
pop
and
sub
pop
icebp
mov
jmp
shl
std
fwait
popf
inc
pop
aad
lds
sbb
mov
rol
andb
and
inc
andl
nop
bound
repz
out
shl
xchg
repnz
xor
addps
rolb
xor
push
popa
fcmove
fwait
int
or
pushf
pop
xchg
and
ljmp
cmp
push
mov
xchg
cltd
je
mov
fdivp
aaa
popa
jp
les
imul
lahf
push
xchg
xchg
stc
xchg
lcall
dec
mov
js
in
adc
sti
pop
enter
iret
test
jg
xchg
mov
leave
mov
inc
push
mov
addr16
mov
stc
inc
loopne,pn
mov
nop
jg
mov
dec
loope
push
mov
loopne
jb
clc
in
jg
push
daa
lds
lret
fimuls
push
pop
cmc
dec
mov
hlt
es
inc
outsl
jb
fisubl
imul
xchg
mov
stos
leave
ficoml
call
push
jle
fsubrl
jl
leave
lea
mov
xchg
ffreep
inc
cmp
loopne
jo
fsts
ja
fwait
ret
into
and
fbld
popf
test
push
push
imul
imul
xor
mov
imul
xlat
call
pop
negb
cli
clc
mov
loopnew
xchg
hlt
ds
mov
rorb
pop
mov
fsubs
jbe
stc
testb
jp
cmpsb
mov
cmp
mov
jmp
lret
mov
push
inc
mov
push
sti
or
das
rolb
nop
ficoms
cli
jg
lahf
sub
xorb
leave
popa
dec
push
jmp
push
xor
ficoms
or
js
aam
push
js
mov
inc
mov
cld
push
or
and
lret
cmp
outsb
xor
xor
xchg
xor
lea
xchg
stc
add
test
inc
xchg
clc
xchg
add
push
xor
test
sub
push
and
pop
mov
and
dec
mov
pusha
mov
stos
jns
inc
outsl
xor
fwait
cs
sub
cmp
shll
and
push
adc
jecxz
mov
push
xorb
outsb
dec
push
push
call
sub
mov
jecxz
pop
sti
push
mov
aas
mov
ja
jge
imul
cmpsb
push
xchg
in
or
mov
outsl
nop
test
ss
stos
arpl
stos
dec
and
and
clc
out
out
and
repnz
lds
shlb
aaa
out
fisttpl
push
sub
test
adcl
mov
lret
in
fld
test
jp
jle
stos
lea
add
inc
mov
push
cld
and
or
jp
fildl
ret
jmp
ret
dec
mov
das
mov
stos
repnz
add
fimuls
outsl
mov
into
addr16
xor
mov
fwait
jmp
adc
jp
mov
lahf
fwait
cli
icebp
jmp
jle
outsl
mov
pusha
mov
sub
enter
fistps
aaa
bound
testl
mov
or
inc
push
pop
in
and
or
cmpsb
test
insl
mov
xor
test
sbb
push
ljmp
jbe
sti
cmp
repnz
dec
cmpsl
mov
pop
push
je
loopne
adc
std
sbb
test
js
sarb
test
icebp
or
test
push
or
bound
imul
xor
ja
cmpsl
addr16
fwait
mov
std
sbb
call
mov
mov
cmpsb
mov
add
iret
subb
andl
and
cmp
gs
cmp
inc
mov
arpl
sbb
addl
sub
fneni(8087
cmp
mov
or
popf
out
loope
pop
mov
lods
jnp
lock
dec
pop
fdivrs
mov
push
xchg
xchg
xor
imul
or
xorl
push
jecxz
jne
lahf
pop
cmpsb
cmp
push
lret
cs
sub
sub
inc
mov
popf
jmp
loope
rcrl
cvtps2pi
rorb
cmp
lcall
or
movb
push
or
stos
push
xor
popf
ljmp
imul
pop
aas
xor
add
xchg
inc
mov
mov
or
ret
add
cmpl
addr16
push
push
insb
enter
adc
mov
mov
push
mov
cs
xor
push
std
dec
test
nop
xchg
xchg
xor
ja
shl
dec
xchg
ret
jo
rol
push
xor
pop
inc
insl
push
dec
inc
in
jb
leave
sbb
test
das
pop
fxam
mov
dec
lret
icebp
ljmp
sarb
negl
cmp
cmpsl
and
xchg
adc
and
pop
cmpb
ljmp
adc
inc
mov
test
cmpsb
xor
inc
enter
aas
sbb
enter
fcmovnu
or
sbb
test
xchg
cltd
xor
shlb
out
push
push
add
push
mov
fs
push
push
push
popa
imul
in
pop
add
imul
mov
outsb
ljmp
outsb
jnp
mov
mov
fwait
loope
cmpl
lret
loopne
xor
inc
mov
js
add
or
xor
pop
inc
ss
roll
and
aaa
mov
hlt
sbb
dec
fbstp
ffreep
or
insb
mov
loope
pop
dec
ret
jns
mov
dec
test
sti
idivl
add
cs
mov
mov
fildl
and
inc
insl
dec
sbb
adc
sub
pop
outsb
clc
sbb
cmp
push
cs
scas
divb
ja
ss
mov
mov
cmp
iret
inc
sbb
cli
ljmp
sarb
mov
test
push
aam
aad
mov
sbb
mov
cmp
inc
int3
aam
or
icebp
cmp
hlt
mov
in
jne
pop
ds
scas
test
push
in
xor
in
enter
rorl
cmp
rclb
lods
in
jge
push
js
lret
pop
sub
incb
int
sti
ja
cmp
ret
test
xchg
push
sbb
into
push
mov
push
sbb
test
popa
repnz
stos
stos
cmc
sub
and
in
adc
sub
mov
clc
divb
mov
jecxz
mov
add
les
push
ss
adc
sarb
cmpsl
jle
sbb
ds
loope
cmp
and
mov
push
jecxz
out
arpl
dec
shrl
inc
jmp
inc
and
push
mov
and
cmpsl
mov
aad
mov
pop
push
add
sahf
sahf
test
mov
mov
jl
fmul
dec
or
arpl
pop
push
add
jle
ds
popf
cmp
pushf
gs
mov
fsubs
lea
adc
fimull
sti
or
stos
adc
adc
lahf
sub
push
lret
dec
js
nop
pop
and
xchg
movsl
jb
mov
lret
in
mov
insl
lea
imul
dec
sbb
push
xor
xchg
inc
lret
ret
int3
rcr
jno
push
inc
pop
sub
xor
adc
inc
inc
rorb
mov
sahf
sub
mov
mov
mov
nop
scas
pop
sbb
inc
dec
inc
in
push
lret
xchg
xchg
pop
incl
out
faddl
jnp
out
xchg
jmp
or
dec
inc
push
es
int3
out
lods
pop
lret
dec
jb
daa
push
jecxz
add
nop
das
inc
jb
sub
pop
cmc
mov
lds
testl
cltd
je
mov
mov
nop
and
xchg
add
lret
outsb
arpl
shr
cmp
adc
jecxz
xchg
mov
lods
xchg
imul
sbb
sbb
fwait
rorl
jae
push
dec
roll
cmp
cmp
insb
mov
push
aad
xchg
insl
xchg
mov
mov
in
inc
jo
mov
pop
aam
aaa
test
jb
enter
sti
mov
sub
jne
in
dec
cmpsl
push
scas
mov
repz
loopne
xchg
hlt
loope
xchg
cmc
jae
pop
movsb
in
sbb
jp
inc
fwait
scas
imull
dec
adc
mov
push
daa
sbb
sbb
insl
orb
mov
sub
sbb
mov
neg
setg
inc
arpl
pop
mov
cli
stos
mov
fs
orl
cmp
add
fcomp
in
push
jno
and
movsl
and
add
in
push
xchg
in
mov
imul
inc
xchg
mov
xor
pop
jp
bound
mov
sbb
cmpsb
lds
lret
int
les
orl
movsb
adc
cwtl
mov
mov
xchg
push
ret
mov
inc
dec
mov
jno
jmp
or
adc
jbe
xor
in
sti
sbb
xor
gs
scas
xor
scas
mov
cmpsl
lret
mov
mov
or
aas
push
add
and
pop
cmp
push
aaa
das
jle
inc
push
sbb
aad
dec
test
adc
push
push
cs
flds
pop
cltd
adc
adc
in
jle
inc
rol
sbb
dec
pslld
inc
cmp
mov
hlt
mov
pop
in
jmp
mov
fisttpl
sub
pop
pusha
dec
add
sbbl
shll
out
mov
inc
pop
icebp
pop
or
xchg
inc
cld
dec
xor
xchg
inc
nop
add
popa
dec
dec
aam
ds
movsb
sti
pop
mov
icebp
cmc
loop
jg
push
pop
jl
mov
cmp
or
cli
fidivrl
pop
std
sarb
pop
dec
sub
fstpl
mov
or
negl
dec
jmp
mov
cmp
xor
and
sub
jecxz
lea
cltd
push
ret
rcr
fcmovnb
push
adc
mov
gs
xchg
jo
out
test
arpl
test
mov
cmp
jge
cwtl
lea
insl
mov
bound
lahf
pop
into
adc
imul
insl
lods
out
ss
cmp
mull
mov
mov
fmull
jo
lea
or
les
dec
vmovntps
nop
test
sbb
mov
xchg
mov
add
mov
mov
ljmp
push
push
xlat
jl
call
mov
stos
shrb
inc
pop
add
hlt
push
jbe
or
ja
mov
pop
mov
jnp
jp
sahf
cs
jle
popa
pop
fldcw
mov
pop
push
outsb
cmpsl
out
jg
out
ljmp
xchg
arpl
in
mov
xchg
out
mov
push
push
movsl
in
test
and
cwtl
push
push
andl
mov
in
xor
inc
pop
inc
mov
inc
jle
jl
in
push
xchg
xchg
aam
inc
fwait
jne
jmp
outsl
loope
xchg
mov
stos
inc
pop
movsl
fwait
and
inc
pushf
mov
outsl
scas
push
pop
mov
xchg
dec
aad
mov
sub
xchg
stos
mov
push
jb
xchg
out
cwtl
nop
pop
mov
scas
xor
xchg
mov
outsl
dec
push
xchg
movsl
push
adc
ret
js
test
es
shll
dec
inc
mov
fdivrp
call
popa
sbb
mov
push
cli
push
lcall
xlat
lods
fcmovnu
mov
cvtpi2ps
sub
jecxz
mov
out
stos
std
popf
cmp
test
rorb
mov
mov
cmp
push
or
jle
mov
js
xor
jmp
or
and
outsb
outsl
sub
push
xchg
movsl
cld
cs
leave
mov
mov
lods
xchg
lret
repnz
jmp
loope
jnp
fidivrs
ds
ret
lret
mov
aas
pusha
iret
into
movsb
dec
xchg
dec
sarb
sbb
hlt
data16
pop
dec
lods
inc
push
mov
add
mov
ret
pop
dec
mov
mov
clc
das
xchg
fildll
loope
jp
rcrl
push
adc
jmp
fimuls
lods
mov
stc
xor
sub
nop
imul
jo
jmp
fs
cs
xchg
hlt
mov
lea
pavgw
mov
jb
fimull
xchg
mov
cld
inc
adcl
add
or
fisttpll
gs
loop
testl
insb
xchg
leave
mov
and
fidivl
cmp
insb
mov
dec
jp
jb
rolb
gs
and
dec
and
mov
mov
stos
cmc
pushf
lcall
push
dec
imul
and
shr
xor
orb
jmp
cmp
outsl
jle
ds
dec
xchg
cmp
cmp
fnstcw
outsl
insb
icebp
dec
dec
cltd
jg
je
dec
jne
mov
mov
rorl
xorb
or
inc
dec
lcall
cmp
fimull
sbb
ficoml
dec
jo
sbb
movsl
rorb
lods
mov
cmp
lods
mov
addr16
fwait
test
cmc
imul
ss
push
pop
sbbl
push
ret
xchg
mov
ljmp
inc
sti
jg
rcrb
jge
xchg
dec
push
insl
lods
orl
adc
shlb
xor
add
sbb
test
xor
test
xchg
stc
pop
mov
add
push
cwtl
movsl
out
pop
cmpl
xchg
inc
outsl
cwtl
gs
jo
aam
mov
inc
idivl
and
into
sbb
in
inc
push
or
jbe
popf
cltd
fsubrl
pop
mov
pop
mov
in
push
jb
pop
push
shl
das
inc
add
jg
pop
jnp
daa
imul
ja
in
add
xchg
sbb
inc
mov
mov
enter
sti
push
cmc
mov
mov
dec
arpl
or
push
int3
pop
movsl
out
pop
and
push
sub
mov
jmp
arpl
ljmp
pop
or
xchg
popa
jmp
cmp
pop
mov
xchg
roll
inc
lret
fwait
inc
fadd
in
xor
stc
jno
xor
mov
jne
cmp
sub
lahf
inc
out
xchg
sbb
sub
jbe
add
ja
inc
stc
pop
inc
enter
xchg
mov
aam
add
into
outsb
mov
mov
or
push
xlat
mov
push
xlat
cmp
shlb
or
stos
push
mov
mov
cltd
jle
mov
jg
adc
and
arpl
push
mov
mov
test
mov
rcll
add
jl
mov
rclb
lahf
push
ud0
cmp
mov
fisttpl
stos
pop
lret
aam
sub
push
mov
mov
setb
dec
or
pop
insl
xor
ja
push
or
pop
jge
aas
xor
lock
push
out
sub
xchg
fdivl
mov
and
xor
scas
rolb
jno
xor
inc
dec
pop
call
dec
aas
pusha
inc
fwait
std
xchg
int
xchg
sbb
inc
adc
pop
popa
out
dec
call
ds
movsl
and
and
or
push
ret
or
xchg
cmpsl
mov
push
pop
pop
jp
add
jbe
pop
push
movsl
cmp
mov
mov
mov
call
int
lods
enter
xor
dec
fwait
sbbb
xchg
xchg
push
movsl
jae
jno
jle
cmc
mov
dec
xor
pop
aaa
xchg
or
push
test
inc
jne
roll
cmc
or
sbbl
xor
add
test
push
pop
add
dec
inc
pop
xor
inc
in
fmull
jp
xchg
ret
sar
dec
jmp
mov
nop
fimull
dec
mov
call
xlat
add
mov
fwait
insb
divl
add
vhaddps
cmp
sti
in
xchg
iret
hlt
call
mov
and
add
jl
popa
jnp
je
jo
push
xor
je
icebp
mov
js
int3
cmp
add
or
pop
stos
pop
sub
ffree
cmp
testb
out
dec
adc
pop
cmp
cwtl
mov
out
push
test
mov
fildl
pop
adc
or
rclb
insb
fisubs
call
iret
int
out
int
pop
mov
outsb
test
jno
cmp
jno
in
ljmp
daa
cmc
lea
mov
mov
aas
xor
cmp
sbb
xor
pop
repnz
pop
jb
push
lret
stos
adc
pop
jp
pop
out
mov
cmpsb
sub
lret
push
cmp
orl
mov
clts
into
mov
mov
fstl
and
jmp
mov
ss
cs
popa
adc
jns
fsub
repz
mov
js
nop
and
hlt
fadds
pop
mov
mov
outsl
dec
divb
mov
sarl
ja
jge
cmp
mov
push
adc
ret
sahf
mov
popa
mov
in
repz
cmp
clc
por
ficoms
xchg
std
xchg
popa
or
push
fistps
sbb
test
ret
outsl
xor
cmp
fnstcw
sar
lahf
cld
jg
pop
inc
xor
fistps
inc
jg
ljmp
lock
pushl
pop
jbe
xchg
testb
aas
pop
or
xor
stc
movntps
sbb
sarl
ret
out
repnz
inc
repz
or
popa
dec
insb
sahf
in
in
lret
inc
loop
lahf
xor
ret
out
sub
into
ret
outsl
adc
clc
mov
cmp
jg
mov
mov
pop
repnz
push
jmp
je
mov
enter
nop
inc
sbb
lret
lcall
adc
or
inc
and
push
dec
inc
jbe
aam
dec
test
std
inc
jg
cmp
lods
or
rorb
mov
lcall
outsl
test
in
pop
sub
pop
jno
mov
stc
aad
nop
shlb
mov
sub
sub
lahf
pop
and
loop
dec
iret
mov
push
lea
sub
push
in
add
out
scas
cmp
test
outsb
stos
lcall
xchg
inc
das
aad
loope
xchg
cld
mov
mov
bnd
lret
or
popa
leave
cs
xor
sarb
mov
xchg
repz
add
or
scas
dec
ds
rcl
aad
mov
xchg
testl
out
jle
push
ss
je
cmp
xchg
xchg
xlat
cmp
push
pop
dec
mov
mov
lods
sbb
iret
cld
jne
mov
imull
or
mov
dec
inc
stc
outsb
pop
cmp
mov
cmp
in
int
xor
cld
nop
jo
test
mov
xchg
sub
movsb
mov
mov
inc
popa
add
icebp
cld
inc
sub
mov
adc
inc
insl
fiaddl
and
fcmovb
push
fs
popf
fsubrp
sbb
or
mov
ror
adc
push
imul
cmp
fstpt
sub
in
jo
in
dec
popa
data16
repnz
xor
xor
cmp
add
xor
pusha
test
or
std
out
js
push
ds
out
aam
dec
mov
lea
fwait
xchg
cmp
shrb
jbe
loop
pop
adc
jb
and
cmp
enter
sub
test
notl
or
push
test
sbb
loop
in
pop
mov
sahf
scas
mov
aam
sbb
data16
loop
cwtl
ljmp
pop
fdivl
popf
jl
fnstsw
add
outsb
and
aam
loopne
dec
cmp
push
lods
xchg
pop
es
mov
in
cmp
adc
xlat
cmp
mov
fmull
les
test
jns
nop
rorl
lds
bound
adc
shrl
push
sbb
sbbb
mull
and
insl
cltd
jbe
out
std
add
cmp
push
fs
out
lcall
scas
pop
lea
xor
sbb
dec
dec
daa
sub
aad
insb
scas
jle
xor
shr
push
outsl
mov
push
push
cld
rorl
js
add
cmp
cmp
jae
cmpb
sti
sub
sti
mov
lea
iret
aad
and
inc
test
adc
inc
push
and
push
or
movsl
adc
and
xchg
add
int3
insb
and
std
push
loope
mov
es
cmpl
xor
je
popl
into
pop
scas
rcll
aaa
dec
xlat
or
mov
leave
mov
bound
mov
xchg
mov
int3
jns
pop
dec
mov
dec
xor
mov
and
mov
pop
inc
mov
push
push
int
dec
loop
dec
addb
jae
inc
pop
sbb
and
lahf
into
add
inc
xor
jbe
xchg
jb
aaa
cmp
jns
inc
xor
sbb
mov
jmp
addr16
push
add
inc
adc
mul
mov
push
pop
xchg
addr16
in
jo
push
out
xchg
push
imul
lret
jp
int3
sub
adc
jns
shlb
xchg
dec
add
add
adc
or
les
jno
in
push
push
cld
inc
mov
push
sub
fsubp
shr
or
data16
les
mov
rcl
lods
das
shl
push
cld
scas
push
enter
jns
imul
or
call
mov
jge
ret
enter
jbe
or
je
cmp
add
das
inc
sahf
stc
xor
add
mov
sub
pop
mov
ss
push
mov
pop
jle
push
cld
nop
xor
shlb
adc
jmp
add
jae
sub
xchg
loop
cmc
hlt
sub
mov
jne
and
or
pop
push
pop
mov
xor
add
adc
xchg
in
mov
xchg
pop
test
lea
xchg
call
out
inc
or
lea
xor
adc
or
sub
mov
sti
xor
or
sub
movsb
mov
or
xchg
push
ret
popl
mov
sub
push
jl
push
arpl
cmc
out
bnd
scas
push
cwtl
or
lds
pop
scas
sbbl
pop
inc
adc
and
outsl
sti
adc
mov
ficoml
lea
sti
sub
and
ffree
rorb
lods
cli
inc
fcoml
xchg
dec
push
adc
push
jno
out
lea
fidivrs
adc
stc
insl
sbb
test
dec
cmp
hlt
in
in
outsl
mov
mov
jbe
sar
adc
mov
ret
rcr
fsubrl
ret
les
mov
imul
push
repz
push
int3
pop
out
ja
mov
test
cmp
jg
and
dec
inc
cmp
ret
ret
pop
add
xor
lcall
dec
bsr
inc
pushf
pop
push
outsl
cli
lds
shr
bound
stos
out
push
inc
in
mov
adc
dec
shlb
adc
cmpsb
frstor
int
pusha
leave
scas
mov
pop
adc
rolb
jle
mov
rcpps
push
hlt
popf
cmpsl
mov
and
adc
or
jae
ror
je
pop
clc
dec
xchg
out
pop
jb
addr16
fs
mov
aad
sub
pushf
pushf
fcomps
bound
aad
aad
mov
cmp
lcall
push
out
xchg
fildl
mov
push
movl
ss
lea
subl
das
imul
pop
inc
sarb
cmp
jo
les
lock
pusha
pcmpgtb
sti
dec
out
add
scas
sub
fcmovne
out
aaa
and
scas
fsubs
movsb
jo
cmpb
outsl
jnp
scas
mov
subl
inc
jp
loop
push
ljmp
mov
cmpsb
jp
mov
lock
mov
shrl
pushf
repnz
mov
jecxz
push
addr16
push
jge
in
mov
sub
frstor
xlat
jo
sub
and
sbb
adc
std
cmc
xor
push
add
movb
lds
pushf
dec
sub
and
mov
lds
call
filds
sbbl
sub
xlat
add
dec
mov
insl
fwait
call
or
repz
xlat
loopne
vphaddbq
dec
pop
out
xchg
les
scas
and
sbb
nop
xor
pusha
test
ja
cwtl
xchg
jo
je
cwtl
ret
and
push
push
fisttps
or
cmp
mov
sbb
mov
aaa
and
and
mov
outsb
pusha
xchg
dec
mov
mov
jns
or
push
mov
xchg
jne
nop
sub
push
jle
dec
cmp
fstpt
mov
lods
inc
enter
sbb
shlb
int
sarb
sbb
outsb
push
lea
fmull
mov
test
loope
or
inc
in
xor
sar
or
loop
xor
sub
sub
inc
adc
ja
hlt
add
xchg
or
ss
aad
sbb
mov
inc
popf
mov
mov
sarl
bound
lods
xchg
jbe
repz
leave
fs
mov
pusha
js
movsb
jo
adc
cs
add
gs
mov
mov
cmp
push
jmp
icebp
add
call
rol
in
pusha
mov
adc
out
pop
stos
ficompl
mov
push
movsl
cs
jb
scas
xchg
icebp
cmpsl
mov
mov
dec
pop
iret
inc
cmpsl
bound
mov
and
es
push
les
mov
stos
mov
fisttpl
insl
popa
insl
inc
lcall
cmp
and
or
add
or
mov
pushf
ret
pusha
insl
sbb
adc
jecxz
jno
into
pop
dec
or
jbe
sbb
inc
in
gs
shlb
ret
pop
es
cltd
or
dec
cli
mov
mov
in
sbb
sahf
fwait
aad
jg
aaa
jle
rorl
outsl
outsb
xchg
pop
pushf
int3
pop
nop
sbb
jne
jmp
pop
cmpsl
sbb
xorb
xchg
lods
pop
leave
insl
pop
push
lea
jge
sub
stc
je
daa
mov
decl
xor
lea
inc
shr
add
ds
and
out
mov
ss
push
jb
lea
and
or
clc
adc
add
rcll
arpl
mov
mov
xchg
fadd
lret
clc
ds
jno
inc
das
add
push
aad
and
mov
sbb
adc
out
addb
andb
pop
xor
jmp
pushf
xchg
sbb
in
cmp
cmp
lret
in
cmp
mov
cld
mov
mov
repz
cmpsl
or
out
jo
push
popa
jmp
mov
dec
shll
mov
js
xor
mov
movsb
push
call
test
shr
lock
js
std
das
loop
and
das
mov
inc
enter
ljmp
jae
cmpsl
dec
mov
and
cmpsb
inc
std
add
push
stos
inc
std
or
xor
and
aas
jmp
icebp
in
fildl
sbb
jo
ja
push
loope
je
jns
ja
xchg
jg
ret
out
out
push
push
loop
adc
sbb
imul
test
inc
jmp
and
enter
add
das
adcb
test
mov
xor
fists
jb
and
cmp
cwtl
sub
pop
sub
test
movsb
xchg
fcom
dec
push
push
cmp
push
or
pusha
inc
mov
bound
sub
lds
sub
daa
pop
xor
adc
sub
stos
rol
adc
adc
xor
pop
das
xor
adc
adc
sarb
jmp
inc
add
inc
xchg
pop
lods
lods
sbb
hlt
mov
jns
push
call
mov
sti
adcb
push
jge
sbb
push
and
dec
clc
inc
hlt
mov
sarb
inc
dec
inc
fsubl
or
movsb
lods
movsl
cwtl
rolb
or
inc
into
lret
or
int
and
lock
push
jg
lahf
pop
inc
sarl
sbb
lcall
add
ja
mov
aam
mov
repnz
ret
mov
pop
or
mov
inc
leave
shll
mov
ss
fistpll
addr16
jae
jmp
enter
sub
outsl
pop
add
daa
mov
cmp
fcomi
mov
inc
inc
jmp
and
jae
fcmovb
js
sub
mov
or
adc
add
in
or
sbb
movsl
in
xor
pop
int3
inc
into
mov
xor
mov
cmp
inc
mov
cmp
sbb
sbb
lods
add
shlb
xchg
movsl
aam
ret
arpl
dec
addr16
jne
into
roll
cltd
cli
lcall
popf
outsb
mov
lea
push
adc
in
and
push
jmp
imul
sub
adc
adc
cmpsb
repnz
mov
pop
leave
jb
push
sbbl
out
test
fidivl
ret
outsb
clc
imul
rorb
mov
pop
data16
adc
out
sbb
lock
mov
pusha
out
inc
cmp
dec
jp
push
out
mov
jae
sbb
mov
jb
adc
loopne
adc
ret
pop
fimuls
iret
loope
ret
cld
ds
cmpsl
dec
adc
scas
shlb
repz
inc
insb
xlat
add
jne
push
or
dec
outsl
nop
out
xor
xchg
mov
std
push
fsubs
insb
outsl
mov
jmp
outsl
inc
mov
cmp
repnz
fnstsw
cmpsb
xor
fdivl
test
insl
js
test
mov
cwtl
test
cmp
cltd
inc
add
lcall
mov
sar
xlat
inc
inc
in
pop
and
mov
cli
aad
dec
mov
push
mov
add
adc
mov
repnz
orl
mov
repnz
jnp
inc
sub
mov
mull
fidivrl
in
mov
or
lret
cmc
mov
xchg
xchg
fldcw
dec
and
mov
push
scas
pushl
cmpsl
pop
xchg
movsb
dec
outsl
xor
pop
adc
mov
sbb
add
xor
cs
pop
icebp
mov
call
adc
sbb
or
gs
xchg
sbb
cltd
movsl
mov
dec
or
hlt
rorl
hlt
hlt
fdivrs
jg
hlt
ljmp
les
xchg
and
sbb
jb
adc
js
mov
insl
cs
mov
fiadds
imul
mov
sbb
fcoml
push
push
testl
outsl
notb
push
mov
mov
add
push
push
cmp
jmp
sub
addl
pop
xchg
jp
loop
rorb
pop
xor
add
in
push
xor
shl
sbb
loop
out
inc
das
fdivrp
jne
xor
pop
cmc
mov
insl
xor
movsl
out
in
jns
jbe
subl
sbb
sbb
jle
out
xor
mov
xchg
fimull
and
pop
or
jecxz
testl
mov
in
pop
xor
pop
int
inc
stos
clc
faddl
pop
add
lods
cwtl
pop
xchg
sub
hlt
out
add
mov
xchg
inc
rcrl
mov
mov
scas
push
cs
idivl
cmpl
cmp
rcrb
jmp
arpl
and
fnstcw
sub
ret
mov
mov
inc
push
mov
pusha
insb
popf
dec
mov
or
test
ja
push
and
sbb
fsub
mov
mov
out
js
int
and
adc
popf
sbb
in
mov
iret
out
rolb
icebp
fistpl
lret
sub
mov
leave
enter
or
pop
repnz
mov
aaa
out
sar
mov
cmp
test
insl
loope
push
adc
shll
addl
fwait
dec
mov
sbb
mov
jle
out
std
inc
mov
pop
pop
rol
into
fs
xchg
mov
mov
add
pop
push
fwait
ss
outsb
out
push
imul
jnp
push
cli
test
jnp
add
sub
add
test
out
es
push
in
sub
xor
stos
lahf
lds
ret
arpl
mov
adc
mov
inc
cmc
scas
out
stos
aaa
mov
push
sub
dec
daa
mov
test
test
cmpsb
mov
or
pushf
lret
out
xchg
push
inc
sbb
sub
push
pushf
or
cmp
sub
outsb
repz
mov
iret
cs
addr16
xchg
xchg
test
push
push
or
subb
lret
stc
add
and
test
xor
enter
mov
outsl
daa
and
jae
fstpl
dec
shr
in
fsub
loop
ljmp
adc
ret
dec
and
pop
mov
loopne
xor
ljmp
imul
push
int3
xlat
imul
mov
jb
fnstcw
or
gs
or
cmp
divl
adc
sarl
std
pusha
les
std
loopne
pop
push
out
sbb
dec
ret
dec
push
movsl
push
push
xor
ret
jp
ret
jp
cmpl
xor
out
xchg
aad
es
fimull
mov
inc
push
and
push
dec
out
sbbb
insb
adc
aam
int
lea
adc
mov
jmp
fdivrs
fists
and
push
jnp
adc
or
or
sbb
subb
sbb
movb
aam
outsb
inc
cmp
inc
push
cmp
push
pop
push
ficomps
fwait
jae
add
insl
xchg
add
out
mov
jge
inc
ret
mov
cmp
test
or
xchg
mov
fldenv
lret
mov
pop
jecxz
bnd
mov
test
and
or
lods
adc
test
roll
dec
jecxz
sbb
loop
addb
test
jl
popa
inc
jne
mov
icebp
cmpsl
clc
nopl
data16
dec
jne
inc
adc
daa
xor
sbb
cmp
mov
push
cmp
addr16
pop
fucomp
inc
cmp
pop
inc
movsb
jb
jae
out
and
add
shlb
and
dec
call
inc
sub
icebp
add
rcr
push
pop
mov
and
or
rcll
cmc
fstps
inc
mov
nop
loop
es
out
repnz
decl
or
adc
fcmove
sub
cmpsb
dec
push
fidivrl
jmp
insb
mov
pop
in
add
enter
xchg
add
cwtl
xchg
jl
cs
cltd
lock
jp
inc
and
mov
lahf
leave
dec
popf
mov
leave
dec
lods
test
mov
sub
inc
and
and
int
jae
pop
out
jle
mov
adc
pop
fistpl
push
push
scas
daa
cld
push
pop
push
movsb
rcll
imul
stos
or
dec
mov
lea
sbb
and
lea
xlat
xchg
rorb
xchg
aad
pop
pop
cmp
cs
sub
fucomip
xchg
jg
push
xlat
adc
xchg
fucomip
sub
or
mov
adc
inc
insb
addb
mov
and
push
and
test
sbb
or
push
pop
addr16
push
imul
adc
adc
mov
inc
pop
pop
ljmp
scas
mov
mov
fstpl
sti
jae
cmp
out
mov
mov
cmp
dec
jp
test
add
lods
add
add
adc
dec
test
rcrb
add
xor
mov
push
loopne
and
or
xor
xor
sub
js
adc
aam
movl
push
inc
and
pop
pop
add
adcl
pop
add
push
push
daa
inc
roll
nop
push
sub
lods
shrb
insl
pusha
pop
jo
cmp
hlt
add
andb
or
add
cmp
add
fwait
cmpl
add
push
js
js
cwtl
pop
call
aam
pop
sbbb
mov
or
ds
push
nop
or
add
out
cmc
lret
mov
shrb
fwait
jb
std
cli
icebp
ss
rcrb
movsl
test
aaa
ljmp
std
lret
push
aas
jmp
push
scas
bound
inc
sbb
shlb
jp
clc
fidivs
into
sarb
xchg
aaa
scas
pop
jns
mov
or
lahf
jno
outsl
xor
test
jnp
jle
mov
mov
jnp
lret
sub
jmp
outsb
mov
push
cmp
lret
xchg
sbb
cmp
pushf
pushf
fisubrs
jns
ljmp
fcmovu
xor
mov
mov
xchg
out
cmp
dec
int
cmpsb
fcoms
jbe
fildl
pop
cs
jne
ret
aas
jne
daa
mov
into
jmp
popa
pusha
notl
jp
push
jnp
mov
lea
inc
xor
pop
rol
jp
jbe
mov
xchg
imul
mov
sbb
lods
xchg
pop
pop
sub
mov
fdiv
dec
clc
fstps
push
out
sub
fbstp
mov
fidivrs
inc
in
notl
int
push
mov
leave
nop
rclb
int
enter
inc
outsl
mov
pop
pop
or
jnp
mov
test
pushl
fistps
fidivl
jbe
ljmp
in
pop
mov
jecxz
xchg
fs
mov
xor
cmpsl
push
popf
fildll
and
xor
into
imul
jno
cmp
fstpt
popa
xchg
movsl
in
hlt
sti
fisttps
pushf
cmp
dec
sub
pop
arpl
shrl
dec
xchg
aam
adc
adc
add
pop
sbb
mov
cs
imul
loopne
adc
dec
aad
xor
xlat
leave
popl
pop
pop
mov
inc
xlat
les
jnp
stc
jecxz
sahf
push
pop
lock
enter
pop
push
fdivr
daa
jae
or
push
inc
outsl
pop
imul
adc
xchg
jle
repz
push
je
xor
cli
xchg
les
jno
imulb
out
rcll
cmc
outsl
mov
pop
pop
mov
cli
cmp
mov
ja
or
mov
push
fldpi
cmpsb
jle
lahf
jl
sub
std
push
and
clc
shlb
data16
cwtl
into
out
scas
lds
clc
inc
repz
sbb
out
jge
out
push
xor
std
icebp
fstps
sahf
cmp
mov
pop
cwtl
sahf
fcmovnu
popf
std
dec
jecxz
roll
orl
mov
bound
aad
sarb
xor
inc
and
jb
mov
sti
lods
sbb
mov
jns
stc
xlat
daa
sbb
add
jbe
adc
jnp
mov
adc
and
mov
xor
lods
jnp
jo
lods
movsb
mov
loope
pop
out
jecxz
dec
xor
cmp
pop
cmc
mov
mov
imul
pop
jmp
inc
sti
push
sbb
mov
lret
ss
mov
ss
sub
in
or
dec
dec
fwait
and
addr16
mov
dec
jbe
or
in
cmp
mov
sahf
into
jg
push
jg
les
cs
pop
inc
repz
out
sti
ljmp
fmulp
sbb
xor
leave
cltd
push
ret
ret
inc
pop
pop
test
call
mov
cmp
das
cmp
out
and
lods
cmc
loop
fs
negl
adc
lret
xor
push
xor
int3
sub
pop
xchg
and
pop
cmpsb
imul
std
push
pop
insl
scas
dec
out
jne
les
pop
imul
mov
mov
mov
dec
cmp
mov
jp
outsl
adc
mov
push
fistpll
insb
adc
sub
int3
mov
mov
xor
xchg
push
addr16
inc
scas
add
jle
test
mov
dec
inc
loope
movsl
push
jmp
dec
aad
cwtl
jmp
xor
cs
stos
push
xorb
ret
bound
test
dec
mov
nop
dec
push
aaa
sbb
loope
mov
mov
xor
dec
je
sbb
fmul
data16
sub
cmpsl
enter
xchg
jb
xchg
inc
test
test
push
in
or
mov
xchg
sti
test
jb
lret
xor
aad
ss
movsl
push
and
out
xor
pop
test
xchg
mov
adc
in
loop
xchg
rorl
add
push
jge
inc
lret
add
into
lock
and
mov
add
jecxz
test
cmp
push
cli
nop
and
into
xchg
addr16
cmpsb
dec
wbinvd
pushf
inc
fcomps
mov
dec
adc
rorb
inc
adc
mov
pop
popa
jns
bound
roll
movsb
mov
or
scas
cltd
lods
mov
lcall
popf
xlat
incl
sub
mov
cmp
xor
fisttpll
fisubrl
bound
stos
xchg
out
and
and
inc
lahf
std
clc
sbb
out
pop
sub
int3
xor
push
lret
xor
mov
sarb
pop
fimull
sbb
mov
js
push
ss
jmp
jle
sbb
dec
sahf
add
nop
inc
mov
popa
cmp
cmp
lret
mov
mov
data16
push
lds
icebp
push
ljmp
into
push
jg
cmpsb
pusha
pop
sbbl
imul
iret
movsb
jne
imul
xchg
dec
fcomi
push
sub
mov
push
je
inc
jb
pop
das
adc
pushf
and
ja
sbb
test
dec
sub
ret
sahf
cmp
and
mov
push
xor
loopne
mov
pop
shrb
pop
inc
fidivrl
test
bound
pop
in
push
test
mov
data16
insb
add
sbb
loop
into
leave
xchg
and
movsl
and
cmp
in
sti
xchg
mov
push
loopne
iret
loope
movsl
lock
cltd
subb
sahf
addr16
sahf
adcb
inc
call
movsl
xor
add
aaa
lret
mov
or
lcall
push
lahf
leave
ljmp
pop
adc
out
push
sub
cmp
mov
cmp
nop
les
cmp
dec
std
add
fmul
mov
out
ds
xchg
cmp
jp
xchg
mov
xchg
cltd
loop
rclb
sahf
ud2
xchg
cmp
add
aas
xchg
fs
iretw
call
xchg
mov
fyl2xp1
data16
or
cltd
or
lcall
xchg
push
lcall
sbb
gs
dec
fisubs
hlt
cmpsb
pusha
ret
sub
mov
shll
dec
inc
icebp
clc
push
rorl
lds
and
adc
fnstenv
movsl
or
dec
popa
and
ss
jecxz
shrl
adc
sahf
mov
repnz
jno
out
add
sub
addl
dec
jb
ds
sbb
faddl
xchg
outsb
dec
jae
int3
rcl
iret
jb
pushf
or
mov
cli
in
push
xchg
push
out
pop
inc
outsl
adc
cmp
loop
xchg
xchg
dec
lock
pusha
ss
mov
jnp
data16
push
lret
in
pop
aas
insb
sub
pop
lock
pop
out
popa
adc
dec
in
cmp
pop
xor
and
scas
lods
hlt
mov
mov
inc
xor
pop
and
rcrb
push
popa
shll
xchg
pop
and
push
into
repnz
js
jge
dec
pop
imul
je
pop
repz
add
repz
fs
xorl
repnz
pop
mov
sbb
push
arpl
xchg
outsb
dec
jbe
orl
pop
outsl
sbb
cmpsb
test
mov
lcall
fsubs
sahf
push
jb
out
inc
shll
adc
fs
push
js
mov
sbb
adc
pusha
dec
sbb
and
lcall
push
jbe
sub
pop
pop
lahf
cltd
loopne
dec
scas
sub
and
adc
cmp
adc
iret
and
adc
andb
push
idivb
sub
andb
out
ror
sbb
cmp
push
stc
loop
adc
sbb
pop
test
dec
or
cmp
ljmp
inc
daa
jecxz
dec
adcb
pop
jle
push
test
imul
cli
dec
movsl
and
mov
inc
leave
jecxz
xor
aas
test
das
xchg
mov
les
pop
iret
out
xor
aam
push
pushf
enter
sub
dec
ds
pop
pop
mov
mov
jns
int
push
mov
test
ret
xor
xchg
stos
mov
cmp
sbb
icebp
ficompl
sub
mov
mov
adc
roll
and
sub
mov
outsb
retw
dec
int
push
sbb
scas
movsb
add
scas
jnp
iret
inc
fisttpl
add
adc
rolb
push
lock
xchg
push
sub
sarl
rcrb
cmpsb
mov
lock
call
or
cmp
repz
push
cmp
push
jmp
cmp
fs
lret
ja
xor
ficoml
and
cmpsl
into
in
xlat
mov
mov
into
sti
scas
test
fisubs
cmp
fdiv
cmp
mov
mov
sub
mov
sub
test
xchg
sbb
ret
inc
pop
test
cmp
push
test
test
adc
loope
arpl
xchg
pop
stos
pop
cmpl
nop
les
enter
or
pop
loop,pt
mov
and
mov
mov
push
mov
scas
jmp
fwait
jns
dec
fsubrs
mov
and
out
mov
aad
sub
push
fmull
mov
int3
cltd
cmp
clc
mov
mov
stos
fst
mov
shl
sub
xor
sbb
leave
ret
loope
lock
loop
loop
imul
loop
push
mov
sub
and
insb
mov
cwtl
test
mov
jno
jg
mov
mov
add
sahf
sbb
cmp
dec
push
cmc
jmp
mov
lock
enter
mov
lahf
lods
jbe
sub
stos
sub
into
jl
adc
mov
out
jmp
lds
mov
add
aaa
mov
shrb
jne
lea
or
or
inc
dec
pop
add
mov
loope
iret
shrb
ljmp
sbb
fidivrs
ja
pop
cwtl
out
sti
scas
les
and
orb
inc
sub
sbb
cmc
sahf
cli
test
and
push
mull
xor
lcall
cmp
jo
xchg
mov
cmp
loope
mov
and
shl
clc
into
push
mov
mov
inc
lahf
xor
cmp
popf
and
stc
es
lcall
cmpsb
cmp
cld
cli
jp
out
stc
addl
movsl
es
and
mov
xchg
mov
mov
sub
lahf
shlb
imul
push
jmp
or
adc
adc
cmpsb
mov
imul
adc
or
mov
inc
cwtl
in
int3
es
jbe
xchg
cltd
fstps
or
push
icebp
stos
mov
push
sti
ficoml
inc
mov
pop
sub
mov
jp
stos
clc
repnz
dec
xor
mov
sti
jle
sti
jge
in
out
dec
jge
incl
pop
nop
insb
jns
push
dec
out
addr16
sbb
es
out
addr16
and
or
lret
in
in
sbb
cmp
dec
mov
xor
push
xor
sbb
adc
dec
inc
jp
push
insl
loope
scas
out
sarl
sub
aas
or
in
jge
aam
jmp
xchg
cltd
leave
das
pop
scas
mov
and
test
loopne
mov
or
sbb
out
es
mov
push
push
mov
movsb
xchg
jl
pushf
sbb
in
push
in
xor
stos
frstor
repnz
pop
inc
std
in
in
jp
cwtl
mov
mov
fwait
xor
xchg
or
mov
outsl
lock
jle
popa
jbe
outsb
push
out
dec
test
pusha
stos
mov
pop
filds
or
neg
pop
popa
lret
in
mov
pop
adc
cmp
sub
dec
pop
xchg
or
clc
cmp
lods
sahf
mov
inc
push
mov
pop
pop
or
movd
push
lcall
adcl
push
ret
mov
cmp
ret
int3
in
popf
pop
jecxz
aaa
xchg
sub
idivl
xchg
movsb
fisubrl
sbb
testl
mov
sti
arpl
fwait
cmp
cwtl
sbb
test
cltd
sbb
int3
je
int3
dec
push
fnsetpm(287
cmc
mov
cs
push
sti
iret
jl
cmpsl
cs
mov
dec
jmp
ljmp
mov
das
mov
lahf
cmp
sub
pop
cli
cld
aaa
iret
stos
enter
stc
sar
outsb
mov
std
add
imul
cmc
ret
stc
ja
mov
scas
cwtl
push
adc
mov
pop
cmp
mov
mov
mov
jmp
scas
pop
mov
adc
in
rol
adc
mov
dec
repz
test
pop
inc
mov
push
jne
cli
cmc
inc
sub
les
aas
mov
add
loopne
clc
push
sub
xlat
lods
mov
test
subb
mov
fwait
loope
cmp
jb
cmc
pop
pop
insb
pushf
jp
aaa
into
in
sahf
cli
fisubrl
ljmp
pop
add
jl
add
fldenv
enter
mov
pop
shr
sbb
lods
int
sub
jmp
outsl
cli
in
or
pop
ds
or
out
mov
ja
jge
repz
ds
stc
out
idivl
mov
pop
test
repnz
fcmovnu
mov
movsl
ds
cld
movsl
ja
mov
xchg
fnstsw
mov
jg
lods
mov
cli
sub
mov
divb
jecxz
xlat
std
fnsave
cli
dec
ds
insb
out
fwait
outsl
scas
xchg
xchg
pop
jne
dec
push
dec
test
xor
xor
pusha
push
push
movsl
push
xor
inc
sub
mov
cmpsl
movsb
xchg
outsb
dec
jb
sar
aad
cmp
sbb
xchg
ljmp
lods
lods
sub
mov
stos
dec
xchg
cs
xchg
insb
pop
adc
push
or
mov
xchg
in
aas
dec
frstor
mov
movsb
cmpsl
js
xchg
nop
push
sub
and
pop
xchg
mov
iret
shll
sub
dec
adc
inc
xor
movsb
push
or
loopne
test
orb
stos
test
dec
stos
shr
xor
das
rorl
in
add
dec
lods
xchg
ror
pop
enter
mov
sbb
and
pusha
dec
push
mov
jp
xor
inc
lods
stos
subb
fsubr
sbb
lea
or
xchg
leave
test
repz
add
mov
cmp
add
cwtl
pushf
addb
pop
mov
mov
pop
aas
movsb
test
cwtl
shlb
xor
sub
xchg
and
push
mov
jg
xor
imul
push
popa
mov
mov
lea
xorb
xchg
lock
inc
dec
mov
xor
xchg
mov
out
push
push
mov
das
xor
hlt
and
adc
dec
dec
fisubs
pop
lret
pusha
shrl
sub
stc
xlat
mov
into
sub
out
sub
cmp
mov
cs
push
loope
pop
ret
ret
cmc
rcll
scas
movsl
adc
orb
push
or
jge
in
jge
ror
sti
push
mov
add
jmp
push
in
cmpsl
jb
test
into
mov
or
lock
sarb
jne
lock
push
xchg
lahf
cltd
cs
sbb
sti
xchg
leave
mov
loope
das
gs
iret
xorl
into
subl
test
and
fmul
orl
pop
pop
xor
stc
mov
cmp
dec
cmp
pushf
jb
xor
pop
pop
ret
jae
cmp
icebp
cld
das
lret
jecxz
je
jl
xchg
sbb
fidivl
in
or
lock
pop
stos
leave
and
das
outsb
gs
out
rcr
xor
jae
insb
clc
xor
jl
xchg
in
loopne
leave
cmp
insl
adc
jg
sbb
xchg
clc
int3
sbb
pop
aas
fnstcw
ss
fcomps
add
gs
jl
ret
pop
out
addr16
loope
lock
dec
ss
adc
test
mov
lahf
or
cmp
sbb
fcmovne
out
inc
inc
mov
cs
mov
pop
mov
loopne
xchg
rcrl
pop
test
xchg
iret
mov
push
mov
scas
pop
dec
pop
dec
scas
gs
shr
je
push
dec
pop
adc
stos
mov
push
scas
int3
das
pop
mov
xchg
push
test
mov
cmp
test
push
xchg
xor
adc
cmp
imul
je
test
test
mov
cmpsb
dec
push
and
mov
push
loop
mov
dec
aad
bnd
out
inc
mov
cmpsb
cmp
pop
push
leave
inc
cmp
inc
xorl
mov
mov
push
stos
push
pop
das
adc
popf
push
movsl
cmp
sub
adc
rorb
loop
inc
xor
dec
popf
mov
adc
and
push
push
mov
push
outsl
jge
xchg
rcrl
adcl
ljmp
stos
add
int
outsb
aad
jp
jb
jmp
fwait
pop
cmp
in
mov
sbb
jne
adc
subb
dec
dec
rol
xchg
lock
jl
push
fdivl
insb
mov
xor
out
mov
pop
aaa
push
pminsw
orl
mov
mov
stos
or
adc
xor
xor
sub
push
or
and
ja
inc
orb
xor
xor
orb
xchg
jb
dec
dec
mov
in
inc
or
movsl
lds
inc
sub
pop
cmpsl
push
les
sub
vpsubb
sbb
inc
pop
maskmovq
inc
fndisi(8087
lret
push
sub
cltd
sbb
sub
xor
addl
cmp
rcrl
daa
xchg
stos
fs
adc
data16
dec
shrb
sbb
inc
mov
es
bound
addl
scas
dec
test
and
ss
sarb
cmp
sbb
xchg
cmc
jle
imul
push
push
cwtl
mov
hlt
adc
orl
in
add
jp
pop
ds
mov
arpl
mov
mov
push
ret
jno
femms
add
cld
or
ja
daa
ljmp
jg
pop
jnp
sub
call
lods
sbb
inc
adc
jl
jae
add
mov
es
popa
imul
mov
cmpsl
std
xchg
sbb
jg
cld
dec
rcll
cwtl
xor
cmp
in
clc
inc
test
in
pop
cmc
fcmovnu
stos
pop
ljmp
stos
xchg
sub
sbb
xchg
xchg
xchg
mov
clc
dec
out
xchg
shrl
sbb
sbb
sbb
push
jnp
jge
call
ficoms
cli
cmpsb
pop
shll
inc
sub
cmp
push
fcomps
dec
sub
mov
addr16
jle
repnz
push
cwtl
shl
and
outsb
xor
icebp
test
adc
fstpl
cmp
aad
test
lret
scas
mul
cs
aam
mov
orl
inc
sbb
mov
ret
js
in
push
dec
dec
call
or
jbe
mov
adc
jno
pop
jo
je
outsl
aam
xchg
fwait
pop
push
dec
sub
xchg
push
dec
divl
fcoml
xor
jns
dec
jle
mov
xor
sti
pop
push
push
dec
rcll
test
sarb
xor
insl
xchg
inc
mov
mov
mov
aam
inc
jnp
and
push
je
xor
xchg
push
mov
out
sbb
imul
in
movb
imul
cwtl
ss
jno
in
clc
aas
dec
outsl
xlat
cmc
mov
imul
add
pop
aam
lds
lret
cmp
sbbb
ret
je
test
jae
outsb
pop
out
adc
test
push
push
jnp
int
shrl
push
sbb
enter
fstps
or
insl
adc
popf
xor
addr16
inc
inc
popa
int3
shll
mov
je
int
jp
push
push
jno
dec
rorl
int
in
out
stos
xor
imull
es
shl
add
mov
adc
jo
and
bound
mov
mov
dec
lret
data16
mov
sub
or
addl
dec
loope
pop
mov
fwait
in
sbb
cli
push
or
mov
or
or
fsts
ffreep
xchg
dec
in
aaa
cwtl
sbb
bound
jno
aas
add
adc
push
mov
sub
mov
push
std
jb
push
js
int
in
mov
mov
fsts
in
scas
dec
cmpsl
aad
push
and
sbb
pop
out
sub
xor
sbb
movsb
repz
cmp
pop
ja
mov
movsb
mov
sbb
jp
sahf
lods
test
and
push
clc
pop
cmp
sub
or
rcll
cli
cmpsb
jo
jge
dec
pop
pushf
add
xchg
loop
add
mov
dec
xchg
mov
jmp
mov
jmp
movsl
dec
ret
add
ret
sbb
fcoml
add
dec
mov
mov
mov
ret
xchg
fcmovbe
xchg
xchg
push
jae
add
aam
stc
sti
inc
imul
sbb
lds
sbb
in
xlat
int3
je
imul
rol
xchg
mov
mov
cmp
lods
dec
movsl
pop
mov
jp
push
xchg
shrl
or
mov
hlt
inc
jae
or
add
or
loop
cli
add
popf
into
sbb
dec
pop
dec
test
loope
arpl
sub
fmull
rep
pop
stos
imulb
inc
int3
or
cmp
mov
clc
je
test
pop
add
mov
inc
dec
ja
mov
jecxz
test
mov
popa
fsts
inc
pop
mov
fcoml
in
xchg
adcb
icebp
adc
in
iret
xchg
jg
push
testb
lret
mov
push
inc
cmp
hlt
and
cltd
pusha
sbb
call
lahf
push
cmp
mov
adc
push
in
aas
pop
into
mov
and
dec
jnp
idiv
jae
arpl
add
lods
scas
icebp
call
orl
or
dec
shll
sub
mov
in
imul
pop
pop
and
pop
clc
push
les
cmpsl
inc
outsl
mov
in
jb
sub
xlat
sbb
sub
aaa
sub
movsl
fs
push
dec
dec
cmpsl
push
cli
push
enter
fwait
adc
ret
rcr
push
xchg
pop
cmp
out
test
and
xchg
pop
ss
pop
xchg
je
pop
mov
or
mov
in
js
inc
pop
push
rcl
xor
repz
pusha
sbb
sub
xchg
pop
add
shlb
dec
mov
shlb
int3
dec
subl
push
je
pop
dec
jl
jne
adc
test
xor
jg
ds
rcrl
sti
xchg
std
mov
in
mov
add
popa
xchg
dec
loopne
aas
or
int3
xor
xchg
sbb
imul
adc
fldl
in
hlt
jo
mov
jge
jge
mov
pop
rclb
jmp
push
mov
roll
mov
mov
roll
mov
fiadds
or
orl
or
cmc
fsub
mov
lahf
gs
loop
mov
xchg
mov
sub
ror
lea
fwait
xchg
or
ljmp
mov
out
xlat
adc
xchg
insl
roll
repnz
dec
adc
inc
jecxz
or
add
out
mov
sub
cmpsb
fsubrl
xchg
shl
xchg
loopne
repz
xchg
mov
xchg
in
sub
sbb
or
sbb
jae
adc
aam
je
test
adc
or
cmpsb
aad
push
or
cmpsb
sbb
lock
jae
in
rol
cli
lea
xchg
push
inc
push
and
outsl
adcl
out
mov
push
dec
imull
call
rcrb
pusha
xchg
push
js
xor
clc
fdivrl
idivb
mov
mov
and
or
loope
cmp
js
or
icebp
loopne
mov
cli
lods
je
xchg
xchg
xchg
pusha
movsb
xor
adc
pop
int
sbb
minps
call
shll
adc
fdivs
popa
sbb
out
jl
ja
or
jmp
fnsave
inc
jge
popf
sub
dec
mov
push
rep
mov
pop
lcall
test
insl
sub
jge
xchg
xchg
sbb
outsb
push
push
mov
int3
mov
sub
jecxz
icebp
lods
xchg
cwtl
repz
jno
dec
cmpsb
mov
nop
mov
xchg
sbb
int3
cltd
mov
mov
mov
rorb
jmp
loop
push
out
movsb
cltd
add
xor
sub
sbb
add
idivb
dec
sub
rcrb
loop
enter
dec
inc
gs
pop
sub
jge
mov
xor
push
flds
cmp
jns
mull
out
mov
cli
subl
and
mov
cmp
clc
bound
rorb
pop
mov
jl
popf
xchg
in
inc
jns
inc
xchg
xor
pusha
imul
xor
in
push
jp
add
add
in
dec
or
fadds
ret
mov
in
jns
and
scas
aam
mov
push
int3
ret
or
push
cmp
jl
mov
test
les
sub
cmp
dec
adc
pop
and
push
imul
and
mov
aaa
push
ret
inc
das
aam
iret
or
les
push
test
or
mov
sub
add
push
mov
ficoml
and
mov
add
mov
ds
mov
std
xchg
das
movsl
ret
test
in
inc
cmp
add
mov
xchg
pop
lds
imul
add
mov
dec
xchg
out
fmull
jno
adc
push
sub
or
push
sbb
popf
sahf
sarl
cmp
insb
icebp
or
data16
jle
push
xlat
pop
fcoml
aaa
sub
xchg
or
es
fwait
sbb
dec
pop
je
add
cmp
xchg
cli
fisttpll
pop
xchg
mov
push
lds
lahf
inc
imul
push
mov
mov
orb
pop
fmull
jg
jo
pop
lcall
mov
sti
xchg
sbb
imul
enter
cmpsb
sbb
imul
add
mov
and
movsl
adc
lea
sbb
into
mov
pop
mov
dec
call
lock
cmp
or
sub
imul
xor
mov
into
and
das
dec
cmp
and
or
adc
in
lods
int3
mov
out
xor
ret
dec
dec
mov
add
jecxz
les
pop
sub
sub
in
popa
mov
mov
push
adc
dec
mov
xchg
inc
cmpsl
adc
bound
sub
imul
mov
jecxz
push
pop
dec
loope
aam
jg
ss
enter
insb
jg
imul
sub
sbb
jnp
lcall
push
jmp
xchg
les
inc
jae
xchg
mov
xchg
sbb
inc
xor
rolb
push
mov
lods
inc
or
data16
cmpb
sbb
sbb
lret
jnp
xor
iret
stos
shll
in
pop
fistps
out
pop
mov
and
mov
push
mov
sbb
stc
cmc
mov
mov
mov
pushf
cld
xor
data16
aaa
push
push
jmp
movsl
test
adc
movsb
xchg
mov
mov
adc
fsts
cmp
addr16
jge
sub
shl
xchg
adc
sub
pop
shl
jno
shll
repnz
jmp
scas
or
mov
or
cmp
xor
and
shll
dec
gs
add
mov
mov
sbb
cmp
jns
mov
popf
and
mov
lods
mov
jne
push
lret
mov
mov
jmp
pop
mov
out
xorl
pop
test
mov
xor
mov
test
idivb
rcrl
mov
daa
or
pusha
pop
jb
pop
fisubl
jecxz
repz
les
dec
jge
cmpsb
mov
sahf
popa
jmp
insl
mov
daa
pop
jno
repz
les
mov
icebp
mov
push
hlt
ds
push
pop
pop
lret
or
xchg
lea
dec
mov
sbb
mov
daa
in
mov
movsl
call
xor
in
pop
loop
sbb
and
xchg
out
mov
les
or
sti
cmpb
and
sub
aam
xchg
rorb
adc
lcall
ret
lcall
mov
mov
sbb
pop
outsl
push
test
pushf
mov
into
sub
movsb
lcall
mov
jmp
xchg
adc
scas
inc
xchg
subl
inc
rclb
into
sbb
adc
cmpl
or
dec
mov
push
push
and
or
in
jne
stos
test
mov
lods
fwait
mov
jge
mov
inc
ljmp
inc
in
imul
popf
xchg
xchg
jne
int
sbb
mov
adc
mov
xchg
sub
lea
adcb
and
pop
jle
push
xchg
dec
pop
inc
cmpsl
xchg
mov
pop
inc
mov
bound
pop
divl
aad
jae
ss
std
add
pop
rorb
adc
xorl
std
mov
adc
adc
fmull
call
xchg
xlat
adc
bound
das
xor
mov
adc
sbb
push
or
cmp
sarl
shr
sbb
jno
xor
clc
xchg
test
pop
cmpb
fstpl
in
xchg
jnp
xchg
movb
aas
popa
out
fmul
jecxz
shlb
jmp
insl
mov
add
ds
dec
rcr
push
aam
ljmp
dec
sbb
xor
shll
adc
sub
adc
mov
shlb
out
outsl
xchg
xor
cmpsb
ja
cwtl
iret
mov
push
out
lahf
decl
jno
lcall
xor
mov
neg
mov
push
sti
sbb
js
loop
sbbb
xchg
lea
insb
int3
or
das
mov
stos
ja
out
cmp
pop
test
lcall
adc
jae
mov
dec
lret
movsb
addr16
fbld
dec
and
mov
or
test
inc
popf
dec
add
mov
adc
dec
push
add
addb
adc
int
cmc
and
sub
das
jecxz
inc
scas
cmp
clc
stc
leave
jle
insl
mov
inc
lock
popl
jns
pop
mov
dec
dec
leave
pop
cmpsl
adc
test
mov
sarb
mov
scas
xchg
mov
shll
sahf
loopne
rcrb
subl
xchg
inc
mov
dec
popa
mov
in
mov
cmp
loope
test
test
mov
jns
aaa
outsl
mov
xchg
ret
mov
loopne
popf
loope
and
pop
pop
or
dec
add
cmp
int
xchg
adc
mov
sub
fstpl
push
int3
jmp
test
sbb
arpl
dec
dec
jge
out
dec
dec
test
arpl
jnp
stc
lahf
hlt
mov
aaa
and
or
sbbb
in
xchg
pop
cld
dec
dec
testl
adc
cs
or
and
int3
stc
sub
jecxz
mov
dec
das
push
push
mov
aam
lds
ljmp
fwait
pop
sub
filds
clc
les
popf
in
pop
js
pop
dec
jno
or
test
add
push
jnp
push
iret
js
jge
mov
and
clc
mov
data16
ror
adcl
ret
in
enter
xchg
movsl
adc
and
pop
push
and
movb
xchg
push
fs
ljmp
dec
mov
cmc
js
faddl
les
inc
or
mov
adc
push
push
scas
jg
xchg
pop
mov
mov
or
mov
adc
mov
sahf
add
mov
inc
jne
rcll
xchg
mov
cs
loope
add
inc
imul
jns
cltd
icebp
add
push
xchg
cmp
loope
in
pop
std
cmp
or
insb
das
mov
sti
das
xor
iret
fidivrs
push
or
add
or
daa
jbe
sti
int
xor
and
pusha
sbb
pop
cmp
and
sahf
mov
jmp
mov
clc
mov
enter
cltd
shlb
test
dec
mov
sub
pop
adc
jl
xor
out
push
push
mov
repz
xchg
cli
sti
shrb
ret
fildll
aas
arpl
mov
je
xor
mov
jbe
or
fstpl
xor
rorl
xor
fnstsw
test
popf
pop
push
inc
xchg
inc
jp
sbb
add
pushf
cld
iret
push
aas
mov
into
loope
push
daa
xchg
out
fildl
or
out
ss
das
jns
gs
dec
jg
sub
sahf
imul
bswap
dec
repz
sbb
in
cmp
cmp
mov
fsubr
leave
mov
enter
lret
inc
and
adc
xchg
mov
lods
stc
pop
out
sti
loopne
push
into
out
cmp
jno
lock
gs
push
jle
mov
cmp
mov
xrstor
std
popa
aas
cltd
negl
iret
mov
nop
push
cmp
xor
inc
test
cmpsl
cli
jb
inc
mov
push
mov
mov
jg
cld
lcall
out
pop
fsubs
pop
sbb
sub
cmc
fwait
bound
dec
mov
dec
lds
pop
dec
dec
ljmp
and
xor
xlat
jnp
and
aas
xchg
dec
out
test
mov
sbb
test
jb
inc
dec
and
subb
into
lret
dec
xor
inc
mov
ficompl
jmp
mov
dec
xor
popa
aas
jnp
out
out
ret
dec
clc
enter
jns
jl
in
cmc
pop
dec
pop
push
jmp
icebp
dec
insb
scas
jb
pop
addr16
shrb
lcall
mov
jg
dec
aaa
push
lods
popf
lea
xor
scas
sbb
bound
push
jns
jmp
cli
xor
lea
pop
pop
lahf
call
sbb
sub
stos
aam
xchg
ja
lcall
aas
clc
jl
mov
xchg
mov
mov
aas
mov
jl
iret
in
sbb
fildl
cld
mov
cmp
push
inc
jb
sbb
add
icebp
sbb
cmp
sub
addr16
xchg
cs
pop
mov
mov
fs
arpl
sar
ret
mov
push
jno
mov
movb
icebp
test
mov
pop
rorl
shr
jne
jae
mov
subl
lock
aam
lea
mov
push
rcl
shll
out
out
jl
and
pop
xchg
pop
stc
fcmovnu
mov
and
inc
mov
rclb
xchg
nop
bound
scas
xchg
pusha
and
mov
aas
pusha
popa
mov
inc
sbb
loop
fldt
push
outsl
xchg
pushf
cwtl
dec
push
mov
sbb
sub
xor
lcall
adc
add
pop
and
lret
jl
lods
aaa
imulb
int
jno
sub
jp
inc
stos
in
insb
pop
ljmp
lret
ret
cmpsb
xchg
lcall
stos
adc
repnz
dec
lret
test
mov
fsubs
aad
outsb
or
mov
inc
loop
shll
lds
mov
stc
or
lahf
decb
les
lret
or
lock
lcall
shr
movsb
data16
cmpsl
adc
movsb
cltd
xor
and
fwait
add
or
cli
push
push
pop
jmp
push
inc
bound
sbb
outsb
popa
aad
or
call
rcrl
stos
into
loopne
cmp
mov
lods
fmulp
xor
inc
dec
xchg
inc
orl
add
shll
mov
and
inc
insb
pop
xchg
sub
test
add
xchg
jns
jge
adc
insl
addr16
cmp
test
mov
xor
divl
outsl
out
cmp
das
out
cmpl
jl
arpl
loop
popa
movb
sbb
or
push
shl
inc
scas
jle
leave
ret
out
jl
fdivrl
jbe
iret
fstpt
scas
mov
or
dec
sarl
mov
popf
jecxz
fistl
mov
cmp
inc
dec
or
xchg
pop
inc
xor
mov
test
arpl
sbb
fs
mov
call
lock
dec
sub
push
shl
rolb
ds
dec
int
cmpsl
dec
bound
mov
push
jb
pop
mov
dec
or
lea
dec
dec
shll
push
ret
inc
test
mov
inc
popf
cltd
xchg
pop
mov
push
jne
leave
xchg
dec
imul
or
aam
xchg
cmpsb
jae
add
push
cmp
sub
push
add
bound
lret
int3
call
arpl
xchg
dec
or
ljmp
inc
dec
xor
out
pop
push
and
or
cs
call
mov
push
es
xchg
in
fstl
mov
insb
insb
xchg
xchg
mov
xorb
popa
shll
push
cmp
dec
sbb
fs
push
test
scas
cmp
pop
in
jmp
mov
jo
adc
lahf
push
push
jl
add
pushf
or
cmpsl
dec
lcall
rcll
in
dec
popf
pop
pop
cmp
jno
sbb
pusha
jne
or
xchg
push
inc
pop
imul
pushf
sub
or
push
dec
movsl
inc
roll
sub
popf
cmp
sub
das
xor
lods
adc
or
pop
pusha
addr16
movsb
push
sbb
movzwl
int
push
test
mov
push
or
mov
dec
or
aam
andb
mov
in
popa
lds
push
jno
dec
test
insl
js
mov
cmp
cmp
das
pop
mov
outsb
aaa
sub
mov
movsl
jb
fildll
lret
scas
mov
mov
fxch
xchg
stos
cmp
xchg
ljmp
xchg
pop
roll
je
divb
jg
adc
push
inc
cmp
das
push
punpcklbw
dec
pop
inc
popa
out
add
in
and
inc
push
adc
inc
cmpsb
cwtl
ret
jo
xor
and
enter
idiv
loope
fs
mov
rol
push
ret
jno
cmp
loopne
mov
stc
shrl
pop
lahf
push
aam
dec
stos
add
push
pop
test
mov
fwait
push
xor
in
fdivrl
mov
jo
mov
and
cmpsl
fistpll
sub
cmp
mov
pushf
push
jmp
xchg
fnstenv
flds
push
or
leave
jo
dec
daa
inc
addr16
xchg
mov
push
pop
sbb
loope
cmp
push
in
lock
mov
cmp
cmc
mov
xor
jge
mov
outsl
adc
rcl
hlt
sbb
hlt
and
pop
js
sbb
or
jge
or
fidivs
dec
cmp
stos
fldl
out
jp
movsl
mov
shrl
jecxz
dec
jmp
out
out
mov
cmpsb
jo
or
in
xchg
mov
mov
cmp
mov
aam
in
mov
push
inc
insl
jns
mov
fimull
mov
mulb
sbb
lea
lret
rorl
sbb
out
imul
out
cmp
and
mov
pop
mov
enter
in
mov
inc
into
fs
cs
arpl
lret
pop
jne
in
xor
pop
pop
mov
js
clc
aad
std
lret
out
pop
add
add
and
jo
adc
ja
sub
scas
or
insb
scas
clc
cmpl
add
loope
xor
arpl
mov
hlt
jnp
repz
xor
or
fstps
and
xchg
ret
fildl
test
pop
xchg
pop
fmull
push
ficoms
mov
aas
out
mov
rorl
enter
mov
add
sbb
gs
xor
je
xor
sbb
sti
xor
xor
mov
inc
jns
jne
dec
jns
and
mov
movsb
pop
sahf
sti
jp
and
dec
jecxz
enter
xchg
into
hlt
imul
xchg
fmull
mov
sub
cltd
jno
subb
mov
and
outsl
sbb
std
push
icebp
mov
hlt
stos
jbe
push
fwait
sbb
pop
out
es
mov
pop
jno
std
push
and
adc
adc
jg
cmpb
repz
adc
aad
fbld
aas
mov
xor
ficomps
int3
xor
aas
or
int
cmp
jo
in
and
sbb
xchg
stos
mov
lea
lcall
or
pop
mov
adc
dec
and
imul
push
test
insl
in
adc
fwait
sub
pop
aam
arpl
and
lea
hlt
mov
lods
mov
imul
mov
cltd
sub
sub
int3
das
inc
add
out
sub
cld
mov
cltd
fwait
dec
add
jbe
pop
pop
jl
mov
fisubl
into
sbb
cs
mov
push
or
lock
xor
into
adc
and
in
insb
add
pushf
cmp
andb
cmp
jle
sub
movsb
lcall
outsl
or
fwait
cmc
cmp
mov
hlt
ljmp
nop
gs
in
xor
addr16
out
mov
cmpsl
pop
test
arpl
push
int
mov
in
in
cs
les
pop
fsubs
xchg
sti
loope
pushf
jbe
or
add
pusha
inc
cs
jne
and
adc
add
pop
xor
push
in
push
aad
dec
cmc
pop
sub
or
sbb
add
adc
jne
xor
mov
sub
shlb
movsl
mov
cmp
movsb
pop
and
adc
mov
push
push
dec
js
roll
sub
xchg
imul
add
push
or
fs
dec
mull
rcrb
sub
inc
sbb
rcl
lret
cmpb
arpl
imul
cmpsl
insl
add
pop
sbb
or
popa
push
stos
or
push
lds
ficompl
jno
rcrl
mov
sbb
and
mov
jb
sbb
xor
je
push
rolb
jle
bound
loopne,pt
test
imul
cvttps2pi
ss
or
mov
test
sbb
test
scas
push
push
pop
sbb
adc
push
fs
in
frstor
pop
push
sub
xor
mov
data16
sbb
int3
in
xchg
ljmp
mov
mov
push
xor
pop
push
lods
add
jg
cli
inc
sbb
in
mov
and
dec
mov
rcr
or
add
pop
insl
hlt
in
lds
dec
xchg
xchg
push
sbb
aas
inc
pop
fstpt
cmp
into
or
mov
test
cmp
and
xor
shll
cmp
movsb
outsb
xor
add
mov
jle
imul
scas
movsl
mov
sbb
jmp
mov
int
adc
jl
shrl
int3
dec
lock
lea
test
iret
push
push
xor
jp
lret
rcll
xchg
sub
aas
fcomps
jo,pt
cltd
icebp
push
pavgw
mov
fisttps
jmp
push
imul
mov
icebp
cmp
mov
scas
push
jmp
add
sub
jmp
xor
sbb
sbb
popa
inc
jmp
xor
sub
leave
sbb
shrl
and
ret
jno
xor
cmp
or
cmp
fwait
sub
mov
xchg
cmp
lcall
pop
xchg
stos
inc
jbe
pop
adc
fs
sbb
sbb
mov
mov
or
fistl
ror
cmp
jecxz
inc
xorl
or
rcrb
arpl
pop
test
ja
dec
xlat
sbb
lret
sbb
aaa
inc
into
lret
imul
mov
int
inc
dec
xlat
test
fnsave
test
mov
jnp
push
dec
rorl
mov
ljmp
push
jp
lods
or
mov
leave
jp
jl
int
push
loop
inc
mov
sbb
ror
int3
inc
sbbb
pusha
nop
sti
xchg
ja
sbb
add
xor
outsb
inc
decb
fxtract
pop
cmp
xchg
test
popa
add
push
jne
or
and
test
dec
xchg
or
js
mov
nop
roll
lcall
insl
enter
popf
lret
or
xchg
mov
mov
rcll
lds
add
shl
jecxz
xchg
sub
lahf
out
or
push
cli
mov
push
mov
shlb
addr16
mov
inc
and
push
clc
xchg
adc
add
xor
inc
shr
aad
xor
cmpxchg8b
sub
ljmp
push
movsl
jmp
imul
js
mov
in
mov
jne
roll
mov
scas
xchg
rep
enter
jns
xor
ljmp
and
mov
mull
cs
addr16
xchg
sbb
jp
mov
fsubrp
fs
mov
and
fsubrp
lods
test
repnz
outsb
iret
out
dec
or
inc
subb
cmp
stos
out
jae
push
cmp
dec
out
jns
cmp
jle
mov
addr16
fisubs
add
add
test
inc
or
add
jo
mov
aam
lock
das
ds
lea
movsb
xor
inc
add
roll
cld
cltd
or
fstl
push
mov
xor
mov
cltd
iret
incl
mov
aas
pop
inc
and
jle
add
cltd
lret
jo
cli
cmc
out
mov
xchg
in
inc
xchg
xchg
xor
data16
cli
out
inc
jmp
inc
push
lods
jg
mov
pop
cmc
xlat
mov
push
out
jge
shll
jp
sahf
aas
mov
out
sti
leave
push
cltd
out
mov
ficomps
cmpsb
mov
aad
das
js
out
inc
outsl
fwait
cli
hlt
mov
test
xchg
lock
int
ss
cli
loopne
dec
fwait
loop
cmc
xchg
dec
icebp
pop
outsb
sbbb
pop
add
stos
dec
das
in
jb
repz
in
xchg
out
jle
fcmovb
xchg
in
fcoml
ret
jecxz
clc
push
repz
mov
call
pushl
lahf
jl
mov
jmp
jns
xchg
outsl
enter
in
aaa
sbb
mov
fnstsw
jne
jnp
sti
shlb
ljmp
cmpsl
addr16
pop
mov
sub
cmp
in
cli
jecxz
jb
fdivrp
push
inc
mov
jnp
xchg
outsl
addr16
int
inc
mov
lret
mov
sub
xlat
xor
dec
push
push
out
or
pop
cmpsb
mov
mov
lret
xchg
jb
mov
lret
lret
fbstp
hlt
pop
dec
push
movsl
in
outsb
mov
lret
pop
data16
ljmp
push
sarb
add
jae
sti
sti
inc
outsl
in
jge
mov
testl
adc
dec
fldenv
lret
test
and
cmp
das
mov
movsl
rolb
sbb
adc
ss
mov
and
xor
in
push
sbb
xor
mov
sub
dec
xor
push
dec
mov
ss
nop
inc
jl
and
push
leave
in
in
xor
mov
pop
call
inc
and
or
popf
dec
scas
out
les
faddl
arpl
mov
iret
mov
dec
mov
notb
repz
cld
outsb
ja
mov
into
out
dec
jbe
jae
loope
xchg
jge
pop
in
jbe
ds
mov
ja
xchg
mov
jnp
mov
mov
jnp
or
imul
fcomip
xchg
nop
or
dec
daa
cltd
or
cwtl
inc
sbb
aad
inc
push
cmp
mov
cmp
add
popf
mov
enter
mov
sbb
push
pop
ss
js
mov
gs
popa
cwtl
lahf
add
dec
xchg
and
test
cli
cmpsb
xlat
xorb
lods
adc
jno
into
adc
mov
lret
stos
loope
stos
mov
jge
stos
sbb
out
mov
fisttpll
ljmp
lock
sarl
adc
stc
ret
xchg
repz
in
stc
mov
std
xchg
cmp
xor
out
cld
leave
in
xor
pop
cli
push
xchg
jp
popf
scas
mov
movsl
mov
push
xchg
jno
fwait
scas
popf
shll
das
lds
cmp
or
das
je
and
ret
dec
icebp
loopne
cmpsb
push
lcall
fisttpl
jne
cmova
rolb
stc
mov
adc
bound
mov
mov
xchg
js
ret
cmp
add
les
push
adc
in
popf
jl
jnp
xor
jle
fsub
lcall
or
ret
scas
sbb
in
inc
subb
in
xchg
xchg
xor
mov
xchg
pop
les
jns
insb
pop
fisttps
enter
neg
cld
scas
gs
fldenv
daa
or
ljmp
repz
out
mov
ds
jge
out
subl
sub
mov
push
lds
popa
jl
sbb
sub
jmp
xor
push
mov
inc
std
sub
test
sub
mov
dec
aad
xor
mov
pop
mov
and
sub
popf
ss
push
addr16
ror
cs
call
fwait
cmp
mov
fnstenv
addr16
xchg
xor
add
sbb
sbb
jp
repnz
xor
mov
mov
pop
aad
out
sbb
pop
cmpsl
inc
imul
sub
push
sub
je
dec
cmp
push
repnz
xor
xor
movsb
jl
push
out
js
outsl
scas
orb
call
jo
daa
jae
add
idiv
xchg
aaa
mov
mov
mov
mov
add
or
mov
dec
pop
dec
xchg
outsl
popf
ret
incl
push
popf
mov
sub
int3
stos
nop
aaa
adc
outsl
loopne
jae
pushf
add
imul
xchg
cmp
cltd
pop
into
pop
sbb
into
rcrl
in
shll
xchg
loopne
enter
cmp
inc
mov
daa
and
das
aas
imul
pop
or
out
cmp
sub
or
fisubrs
sub
jnp
lahf
shr
sub
inc
jp
and
sub
cmp
inc
fnstcw
push
stos
xchg
shl
inc
enter
add
repz
rorl
inc
pop
addr16
dec
cmp
leave
outsl
or
or
mov
push
test
daa
aas
lret
jp
xchg
sti
pop
cmp
adc
lds
popf
mov
push
in
sbb
add
cld
sub
ret
adc
rclb
xchg
and
dec
push
scas
int3
in
lds
ss
into
and
mov
addr16
xchg
jb
mov
jno
into
fdivrs
or
in
adc
mov
bound
sbb
sbb
inc
xor
push
ja
nop
sub
out
cmpsb
xor
sub
jmp
xor
out
decl
gs
push
inc
mov
cmpsw
repz
xlat
xchg
xchg
loopne
std
rcrb
adc
pop
add
shll
sti
xchg
inc
jecxz
add
cli
popa
std
lods
pop
dec
leave
nop
nop
mov
lret
mov
mov
xchg
movl
ljmp
faddl
popa
inc
and
daa
xchg
mov
movsl
pop
jae
xor
xchg
adc
cmp
mov
daa
jno
or
inc
test
pop
fwait
push
fildl
mov
in
aad
add
addr16
inc
aaa
xchg
mov
mov
mov
mov
mov
cmpsl
hlt
ja
push
jle
adc
movsb
adc
scas
stos
scas
lods
pop
fwait
enter
pop
adcb
jp
mov
mov
andl
inc
movsl
imul
pop
xchg
ja
xor
pop
jne
jecxz
ret
adcl
inc
sbb
jno
xchg
or
loop
adc
sub
push
test
jne
or
mov
icebp
cmpsb
aam
cmpsl
jp
add
popa
add
dec
orl
lds
mov
lahf
ret
adc
movsl
inc
insl
jnp
push
hlt
inc
jns
lcall
push
rorb
pop
sbb
je
fsubl
mov
jmp
das
andl
div
adc
frstor
mov
cmp
je
ret
lret
fnstcw
adc
pcmpgtd
push
ljmp
cmpl
add
mov
fldt
sbb
jle
xlat
hlt
add
lock
sub
popa
mov
and
fsts
je
dec
push
loop
mov
test
xor
pushf
mov
inc
scas
cmp
enter
movl
test
lcall
mov
loope
les
mov
out
outsl
iret
mov
shrl
lods
insb
add
jbe
sub
and
fwait
pop
stos
fldpi
es
gs
mov
lret
jo
idivb
mov
or
pop
je
mov
aam
mov
dec
int3
loopne
roll
jae
jne
and
sti
lcall
or
add
fimuls
rorl
dec
mov
push
dec
pop
mov
push
test
push
inc
out
mov
mov
jmp
adc
xor
pushf
inc
lret
sbb
xor
adc
push
sbb
lahf
arpl
test
cwtl
pop
or
lods
mov
loope
pushf
fcoms
rcll
ret
test
or
push
imul
xlat
cwtl
leave
loop
outsl
pop
or
ljmp
mov
je
loop
clc
cltd
mov
lahf
xchg
xchg
xchg
push
pop
xor
jo
int
call
lret
jl
sub
loop
fmul
jecxz
daa
push
jns
xor
mov
push
fisttpl
into
jo
cs
imul
or
aad
dec
hlt
push
es
leave
and
inc
or
lret
sub
push
es
xchg
ficompl
cmp
cltd
sbb
pop
outsb
cltd
xchg
dec
out
jbe
mov
outsb
and
sub
sub
ljmp
es
xchg
test
fcmovb
test
cmp
xchg
xchg
mov
movsb
hlt
outsb
out
es
inc
sub
out
sti
outsb
test
sbb
sbb
jle
repz
sub
pop
inc
icebp
pushf
test
es
push
test
jo
cmp
sarb
dec
das
sub
inc
sbb
mov
inc
dec
add
or
xor
cmpsb
addr16
jae
sub
cmp
push
adc
lods
xchg
leave
mov
mov
jo
ljmp
xchg
push
loop
xchg
inc
dec
xchg
in
enter
xchg
inc
jne
divb
push
push
xchg
push
ffreep
xchg
stos
dec
jo
dec
sub
pop
mov
fldt
int3
jo
xor
into
loop
out
in
xchg
adc
pop
jle
or
test
xor
or
push
in
push
sub
sbb
and
imulb
xchg
add
stc
rcr
cltd
cmp
gs
xor
jle
sbb
sub
push
pop
mov
in
pop
add
mov
or
push
push
scas
lock
ret
rcll
cld
add
ds
and
btc
or
ret
sub
and
mov
sar
cs
int
inc
inc
mov
sub
push
seta
into
gs
cmp
dec
xor
call
insl
cmp
or
out
sub
jns
cmp
xor
ds
add
sahf
xchg
pop
das
mov
mov
inc
scas
pop
pop
dec
pop
jl
lcall
mov
fsubr
into
mov
aad
into
hlt
sbbl
adcl
sbbl
addl
outsl
cmpsl
repnz
js
bsf
pop
jle
and
or
xlat
sbb
add
pop
pop
in
lods
mov
cmc
adcl
pop
clc
rolb
cltd
sub
pop
lret
shl
xchg
clc
rorb
pop
mov
scas
je
ret
stos
jl
cli
rorb
loopne
je
repnz
out
loope
dec
xchg
fwait
lahf
sbb
mov
arpl
pop
jmp
mov
jg
icebp
jb
paddb
lock
lds
lock
pop
clc
cmp
clc
jl
clc
icebp
ds
lock
loopne
shll
mov
add
pop
pop
in
das
lock
sbbl
pop
pop
in
aas
roll
pop
in
add
hlt
or
sbbl
add
fildl
cs
rolb
loop
lahf
lods
jb
paddb
pop
js
bsf
pop
pop
call
jle
paddb
js
paddb
mov
mov
pop
filds
jle
mov
mov
push
inc
das
ret
fcmovne
pop
pop
loopne
das
hlt
sbbl
adc
jecxz
das
lock
loopne
cli
rolb
ds
icebp
adcl
loopne
xchg
jl
adc
pop
pop
call
adc
xor
pop
fwait
in
jg
filds
cmp
mov
mov
or
or
and
scas
fnstsw
pop
push
add
out
js
mov
cli
xchg
js
pop
push
cmpsb
jo
cs
ds
jo
and
jo
pop
jmp
pop
xchg
lods
pop
cmp
jecxz
in
jecxz
mov
add
inc
ret
jp
xchg
xchg
rolb
loopne
jbe
xchg
in
add
loopne
inc
imul
add
jb
lock
cmp
cmpsl
jge
clc
mov
add
jbe
loopne
pop
mov
sbbl
cs
clc
outsl
sbb
dec
vmread
mov
outsl
icebp
addl
loopne
lcall
or
das
mov
shlb
sub
and
jl
mov
cli
testl
add
add
mov
sti
xor
xor
mov
or
push
aaa
mov
fs
jno
daa
and
repz
xor
mov
xor
inc
mov
sahf
push
cmpsl
movsl
and
jecxz
xchg
adc
or
out
sbb
xor
out
movsl
mov
test
test
loope
xor
fdivp
in
dec
fbld
jecxz
jp
jmp
or
fisubrl
ss
or
ja
test
out
mov
fists
push
mov
rolb
leave
add
cmp
clc
shlb
negl
jle
sbb
mov
in
and
cmp
mov
mov
icebp
xchg
imul
test
jecxz
daa
lret
and
loop
pop
xor
mov
ds
scas
sub
xor
adcb
push
push
add
jg
sbb
jmp
or
aad
cmp
adc
cmp
inc
lahf
fsubs
cmp
scas
and
mov
sbb
lock
std
inc
ret
ret
adc
mov
xchg
test
enter
push
daa
pop
xor
xchg
addr16
xchg
dec
mov
mov
cmp
into
xchg
xchg
inc
gs
or
cltd
clc
pop
cmp
mov
pop
out
jno
out
fsubrs
jnp
mov
pusha
clc
lods
loopne
adc
popa
sbb
iret
divb
repz
cld
mov
aam
dec
test
popf
mov
adc
negb
cmp
insl
inc
pop
and
ror
hlt
push
rorl
test
fsubrl
ss
popa
clc
xchg
mov
in
in
xchg
sub
int3
cltd
lea
inc
aas
mov
jnp
adc
pop
jb
and
pop
pop
inc
jle
movsl
mov
add
ss
or
mov
cmp
sub
dec
xchg
sbb
sub
adc
fmull
mov
out
adcb
pop
adc
in
es
and
jns
les
push
mov
dec
xor
jbe
inc
in
std
inc
xor
mov
push
push
pop
clc
adc
fldcw
pop
daa
inc
xor
or
mov
mov
sub
dec
adc
inc
in
sbb
orb
pop
stos
xchg
sbb
sbb
dec
add
fisttpl
stos
add
fldcw
add
push
je
hlt
and
add
iret
stos
leave
xchg
ljmp
sub
std
ds
mov
mov
cs
mov
aam
hlt
add
lods
test
cwtl
push
shrb
add
addl
xchg
inc
sbb
lock
imulb
ret
add
sti
leave
cmpsl
shlb
out
xchg
ja
jg
aam
mov
aam
push
iret
sbb
sbb
or
ds
ja
mov
into
pop
mov
push
sbb
in
push
subl
pop
stos
ljmp
add
lock
pop
cmp
jae
jge
add
fimuls
aas
test
mov
aam
push
iret
sbb
ja
ret
daa
call
aam
mov
lret
add
adc
bound
mov
stos
add
push
test
push
roll
mov
test
mov
mov
arpl
pop
test
inc
in
add
pop
aas
data16
add
sub
mov
add
xor
push
test
mov
adc
push
push
aad
lods
iret
int3
push
mov
ret
inc
dec
push
cmc
leave
inc
nop
testb
in
add
call
adc
arpl
decb
test
inc
fisttpll
cmpl
push
mov
aam
push
push
test
test
pop
fnsave
in
loope
addr16
out
cmp
xchg
ret
loop
test
sub
out
add
rcll
loop
mov
hlt
js
shr
repz
or
icebp
fisubs
mov
push
xor
cmp
scas
movsb
xor
cltd
int3
pusha
fs
jmp
enter
ljmp
adc
mov
sub
mov
sarb
xchg
adc
out
jbe
imulb
pop
xor
jle
test
int3
and
sub
in
repz
call
bound
xor
shrb
mov
nop
cmp
jnp
mov
cmpsb
nop
jl
pushf
cmp
adc
mov
xchg
lret
push
xchg
or
jmp
rcrb
inc
mov
shrb
das
punpckhbw
and
xchg
je
sbb
xor
xlat
push
lret
enter
shrb
pop
loop
call
sbb
jno
xchg
or
sub
lods
ja
xchg
add
pop
xor
nop
xchg
repnz
mov
and
mov
cmpsb
lock
jecxz
dec
cmp
rcl
movsb
fnsave
cmpsb
xchg
push
daa
mov
imul
gs
popa
mov
out
shll
add
mov
daa
loopne
mov
nop
out
repnz
and
xchg
pop
in
push
pop
cld
or
dec
mov
pop
push
pusha
ret
dec
stc
inc
xor
leave
push
push
xor
push
shl
scas
xchg
jno
xchg
jmp
outsb
mov
cmp
adc
fsub
in
jmp
into
loope
popf
and
pop
jb
shll
mov
loop
adc
imul
loope
gs
mov
push
xchg
xchg
inc
mov
sbb
xor
repz
call
popa
xchg
testb
inc
push
and
adc
mov
jnp
dec
xor
in
inc
repz
mov
mov
cmp
fsubrl
lds
push
and
iret
lahf
add
push
pop
stc
push
js
jp
dec
ljmp
leave
repz
stc
movsl
xor
mov
sub
dec
fsubp
pushf
mov
dec
jg
cmc
iret
or
fdivrl
daa
mov
divl
in
pop
push
out
in
jle
lret
shrb
and
ret
enter
stos
sub
fistpll
mov
div
iret
sahf
fdivl
mov
cmp
fcomip
fbstp
out
clc
jbe
clc
lds
fnstenv
mov
cs
jp
fwait
cmc
rorb
in
dec
out
jg
out
outsl
mov
insb
cmp
sub
sub
sahf
pop
shll
add
mov
lret
and
icebp
adc
cmp
xchg
imull
ds
add
call
add
mov
cld
divb
mov
pop
mov
cltd
mov
aas
mov
js
rorb
insl
pop
lahf
sti
scas
jbe
cmp
ja
mov
fcomip
lock
ja
call
rorl
xchg
jmp
jg
mov
cmp
es
stc
aad
out
mov
in
fbstp
mov
cli
inc
mov
sbb
sti
mov
out
ds
push
add
pop
imul
cwtl
or
mov
repz
lahf
xchg
movd
inc
pop
sub
dec
jmp
pusha
jno
fmuls
movsb
mov
dec
sbb
xor
addr16
fidivs
scas
push
push
and
fdivrp
ljmp
pop
lcall
sbb
out
dec
inc
bound
fpatan
cmp
rcrb
mov
aam
mov
pop
inc
jno
dec
test
filds
sub
out
xchg
les
mov
outsb
mov
scas
lcall
lock
pusha
into
shl
test
jecxz
mov
sbb
cmp
dec
icebp
cwtl
ds
fs
pushf
xor
lret
dec
jmp
sahf
icebp
dec
bound
push
dec
mov
dec
push
decl
mov
and
inc
pushl
inc
pop
xorb
and
xchg
or
rcl
clc
hlt
cli
icebp
sbb
pop
inc
dec
shll
xchg
sub
jne,pt
nop
popf
ja
xchg
mov
jl
dec
mov
orb
pop
inc
sbb
sbb
pop
mov
mov
pop
enter
dec
adc
sbb
sbb
ret
or
push
xchg
sbb
outsb
or
cld
fcomps
aaa
dec
out
fistpl
push
call
jbe
jnp
add
cmp
mov
shl
idivb
jle
xor
sbb
add
rcrl
lds
adc
jbe
sub
nop
adc
lret
sahf
dec
jl
cltd
dec
sbb
pop
ss
rcll
sub
lahf
out
test
push
fdivr
test
jns
inc
lret
jne
fsubrs
imul
lods
adc
jns
cltd
and
cmpsl
push
xchg
xchg
lea
movsb
xchg
iret
xchg
fs
imul
pop
xor
xchg
dec
ds
cmp
dec
sub
push
icebp
out
test
push
loopne
out
clc
pop
insl
sub
dec
lds
mov
adc
pop
sbb
sub
push
ja
and
mov
mov
scas
mov
jge
cwtl
pop
fsts
jp
shrl
std
add
outsl
push
push
xchg
or
mov
jmp
push
out
das
pop
push
push
jno
aad
mov
cmp
cmp
mov
je
div
dec
mov
fists
push
jnp
andb
pop
cmp
xor
int3
mov
js
jb
push
into
fnstsw
loope
daa
daa
pushf
notl
pop
das
jg
cld
addr16
mov
xor
mov
adc
loopne
mul
scas
cmp
mov
pop
or
je
fistl
je
pushf
mov
inc
jnp
test
fcoml
mov
jmp
cmp
hlt
mov
mov
jmp
sbb
mov
pop
loope
lods
iret
filds
scas
cwtl
push
push
icebp
dec
in
jg
add
fcoml
jnp
jae
sti
dec
jo
rorl
js
out
stc
xchg
mov
mov
aad
enter
inc
lock
jae
mov
dec
ret
repz
mov
dec
adc
jp
xchg
dec
dec
lret
jge
push
push
scas
neg
out
mul
pop
mov
mov
dec
loope
add
jnp
fnstenv
je
popa
push
sub
aam
or
inc
lds
leave
lret
adc
xchg
stc
pop
enter
and
sub
cmp
inc
adc
lea
lods
xlat
cwtl
pop
cmp
pop
mov
dec
adc
push
and
adc
dec
jnp
mov
mov
lods
xchg
addr16
popf
pop
jp
imul
pop
or
jp
rclb
cwtl
pop
test
and
push
ss
subl
xor
add
xchg
push
clc
out
or
std
lods
mov
stos
adc
or
push
pop
xor
fstl
lret
push
in
fsub
and
adc
xor
test
push
clc
xorl
push
jmp
mov
repnz
add
cmp
cmp
push
xchg
mov
sub
or
sbb
sbb
test
pusha
xor
push
cmp
out
lea
dec
jmp
ljmp
mov
shl
int3
sub
xchg
or
mov
jl
mov
call
imull
repnz
xchg
xchg
out
push
mov
or
or
ds
ja
xchg
lret
push
push
cli
jo
test
jge
cld
fcmovnbe
cs
xor
cmp
mov
pop
es
cmp
fidivrl
pop
jb
in
loope
pop
pop
pop
ficoml
jo
js
pop
or
mov
cmp
into
test
orb
lock
pop
mov
cmpl
and
sbb
mov
or
in
shll
pop
mov
sbb
xchg
xchg
sbb
or
mov
cs
ds
push
ret
cwtl
mov
mov
mov
sti
dec
into
addr16
jmp
dec
sub
xchg
xchg
jp
dec
lret
nop
lret
subb
pop
cmp
mov
jno
or
inc
mov
adc
and
and
pop
out
int3
sbb
cli
or
fisubl
push
xchg
cmp
loopne
test
in
mov
jns
pop
lods
adc
xor
mov
cmp
ds
int
fistpll
lods
jns
in
lret
in
add
ss
jne
mov
cmp
pop
cmp
sub
push
std
cmp
in
mov
mov
das
pop
mov
fistpl
mov
stc
mull
insb
out
mov
mov
insl
div
dec
pushf
aas
lret
mov
in
leave
add
cmpsb
inc
cwtl
push
xchg
jg,pn
sti
test
pop
iret
mov
xchg
fstpt
mov
sbb
mov
pop
mov
in
aas
inc
sti
comiss
jo
sub
mov
out
je
not
test
cmp
insl
pop
dec
in
push
mov
lahf
fnstcw
mov
and
in
mov
into
fwait
daa
cmp
cmc
mov
scas
mov
test
in
dec
jg
out
test
lock
pop
stos
xchg
pop
pop
fdivp
cld
adc
pushf
aaa
cli
dec
lret
lret
in
jnp
cli
clc
rorb
movsbl
xchg
sti
std
pushf
mov
aas
mov
mov
fstpt
std
mov
lods
add
test
and
lods
out
les
shl
insb
push
div
cmp
cmpl
mov
out
aas
js
mov
fists
cmp
xlat
push
mov
jecxz
inc
pop
or
cmp
in
jae
test
outsb
ds
pop
pop
mov
fcomip
cli
mov
repz
lret
adc
xchg
jns,pt
mov
dec
inc
out
add
jbe
out
mov
adc
shl
cli
push
pop
cld
in
pop
popf
pop
sti
andl
aad
lods
sbb
fnstsw
jno
xchg
sub
cmp
jg
rclb
out
lods
stos
sub
inc
push
and
jge
or
or
fldl
pop
dec
dec
out
dec
and
sub
add
jbe
in
pop
lea
cmp
sbb
push
pop
or
jb
outsl
push
cs
xor
inc
dec
push
mov
in
std
mov
jmp
cmp
pop
xor
xchg
es
sub
sub
jae
cmpsb
fstpt
sub
ljmp
push
jg
ds
mov
out
lcall
fistpll
adc
sti
add
mov
mov
xchg
cltd
ljmp
mov
scas
xor
xchg
fistpl
jnp
pop
mov
dec
lock
jmp
insl
call
outsl
into
nop
xchg
jmp
pop
movsl
jmp
xlat
jg
pop
mov
and
jne
lods
sbb
or
in
insb
xchg
enter
mov
or
cmp
sarl
nop
dec
repz
push
imul
in
mov
lea
aaa
testb
testb
testb
testb
testb
testb
testb
sbb
rsm
notb
xorl
jmp
adc
jb
xchg
das
or
daa
inc
inc
subb
adc
push
test
inc
scas
jg
jmp
mov
scas
repz
pop
lret
lret
or
jo
dec
fcompl
in
adc
push
jb
popf
mov
jo
xor
shll
mov
imul
ja
jecxz
add
push
in
mov
cld
fadd
sar
xor
or
cltd
mov
pop
push
jae
sbb
out
xchg
mov
and
fsubr
adc
testb
outsl
cmp
fwait
mov
cmc
xchg
repz
xchg
mov
xchg
mov
fbstp
jg
xor
mov
or
push
mov
jmp
jae
call
scas
cmpsb
loope
add
jecxz
pop
push
cmp
sbb
ljmp
push
and
jno
fidivl
xor
std
sub
pop
inc
jmp
mov
shlb
cmp
je
negb
jg
pop
xor
inc
inc
movsb
mov
outsb
lods
es
daa
mov
out
fnsave
stos
xor
jecxz
mov
add
out
mov
pop
nop
fwait
push
dec
pop
cmp
iret
es
stos
jmp
xchg
daa
int
pop
out
repz
push
jns
dec
data16
lock
out
pop
pop
and
lret
aaa
lahf
clc
inc
push
xchg
hlt
out
lea
dec
lahf
js
cmp
insl
in
cli
mov
fidivrl
jae
push
lock
inc
pop
cmp
xchg
sbb
ficomps
jmp
pop
fwait
jg
ds
cmc
clc
fcoml
std
ja
lahf
clc
inc
xchg
dec
into
mov
pop
mov
shrl
repz
fimull
jmp
jns
rcrb
frstor
cmp
jmp
mov
pop
jnp
js
aam
insb
clc
in
push
jmp
jmp
icebp
mov
jl
sti
das
cmpsl
lods
mov
mov
cmp
repz
push
mov
es
pop
cmpsb
jg
pop
jecxz
ljmp
pushf
hlt
loopne
fimuls
pop
repz
out
cmp
mov
pop
xlat
sbb
insb
mov
fistpll
rcl
mov
jmp
cmc
leave
pop
aas
jle
cmpsb
scas
push
xlat
movsb
sbb
pop
ja
je
mov
test
jnp
cmp
std
arpl
lret
pop
push
sbb
cltd
mov
out
scas
dec
in
sti
idiv
dec
popa
cmpsb
jp
jmp
mov
aaa
jg
mov
int
ja
std
jecxz
out
or
sahf
cld
outsl
mov
movsb
jp
pop
pop
mov
out
daa
ds
jl
mov
out
jp
jle
inc
pop
sbb
mov
negl
aas
jg
arpl
fidivrs
jg
iret
scas
scas
pushf
push
jae
mov
jg
lret
ds
and
push
leave
scas
iret
mov
loope
repz
jle
clc
xchg
sbbl
jns
sti
inc
js
sar
fistps
jae
or
iret
mov
push
push
xlat
outsb
jge
in
aam
cltd
pop
aas
ja
jmp
mov
out
mov
sub
xchg
outsb
mov
cld
outsb
divb
pop
std
and
cld
in
pop
cmp
les
mov
mov
cmpsl
cmp
scas
cmpsb
cli
dec
mov
iret
or
fdivrs
xchg
mov
cmp
out
mov
in
fldt
out
sbb
cmc
ficomps
dec
loope
mov
decb
rcrl
insb
leave
test
ss
js
lods
jg
jp
out
dec
fldt
mov
test
jg
out
negl
jl
pop
xchg
sub
aad
mov
cli
pop
mov
out
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jae
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
push
add
add
adc
sbb
and
xor
inc
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
add
pop
or
or
or
mov
mov
add
lea
add
push
mov
add
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
push
pushl
mov
pushfw
pusha
push
mov
add
push
push
call
mov
lea
mov
push
push
mov
mov
add
lea
mov
push
mov
push
push
push
push
push
push
push
push
push
push
call
sub
pop
rep
pop
add
add
rep
call
pop
lea
push
addb
push
addb
push
addb
push
addb
push
addb
mov
btr
jae
mov
std
mov
mov
add
add
rep
add
cld
jmp
add
mov
test
je
mov
mov
add
push
push
push
add
push
call
test
je
pop
pop
pop
pop
jmp
push
push
mov
mov
mov
sar
rep
mov
and
rep
pop
pop
ret
push
mov
mov
sub
lea
orl
mov
lea
mov
mov
lea
push
mov
mov
push
xor
xor
lea
push
mov
mov
mov
mov
mov
xor
mov
movl
test
jne
push
pop
cmp
jae
push
pop
sub
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
mov
mov
and
mov
shr
and
sub
mov
je
dec
jne
shr
mov
sub
mov
jmp
sub
push
mov
pop
and
shr
shr
sub
mov
mov
jmp
mov
cmp
jne
cmp
jae
push
pop
sub
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
not
and
shr
xor
jne
xor
xor
test
mov
mov
je
push
pop
jmp
mov
neg
sbb
and
mov
cmp
jne
cmpl
jne
mov
mov
cmp
jne
mov
lea
cmp
je
lea
lea
cmp
mov
jae
lea
sub
dec
mov
jmp
lea
sub
mov
cmpl
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
mov
mov
add
cmp
mov
jae
mov
sub
dec
jmp
mov
sub
cmp
mov
jne
lea
cmp
je
lea
mov
lea
cmp
lea
jae
sub
dec
mov
jmp
sub
mov
mov
test
je
mov
andl
cmp
jbe
mov
push
pushl
pushl
call
add
add
add
sub
add
sub
jne
mov
neg
sbb
and
mov
jmp
mov
push
pop
cmp
jne
cmp
jae
push
pop
sub
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
push
and
sub
shr
xor
pop
mov
mov
mov
mov
jmp
mov
xor
cmp
jne
shr
add
cmp
jae
cmp
jae
push
pop
sub
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
mov
and
sub
add
movzbl
shr
mov
mov
incl
shr
add
cmp
jb
mov
push
pop
cmp
jae
mov
add
movzbl
mov
incl
jmp
lea
movl
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
mov
call
add
test
jne
cmp
je
push
mov
pop
mov
cmp
jne
mov
mov
shr
and
and
lea
cmp
mov
jae
mov
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
push
mov
pop
shl
mov
dec
and
lea
mov
lea
cmp
movzbl
jae
mov
sub
mov
shrl
mov
incl
jmp
cmp
jne
push
pop
jmp
lea
xor
cmp
setne
dec
and
add
mov
lea
cmp
jae
sub
add
shr
add
mov
movzbl
mov
add
shl
lea
or
incl
cmp
jb
mov
push
shrl
pop
mov
shl
add
mov
sub
dec
and
shrl
add
mov
mov
lea
cmp
ja
cmp
jne
cmp
jb
cmp
jne
mov
jmp
xor
lea
mov
inc
add
dec
jne
mov
jmp
lea
mov
push
lea
push
lea
push
lea
push
mov
lea
and
andl
andl
push
pushl
pushl
lea
push
push
lea
movl
push
movl
call
add
test
jne
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
shr
push
and
pushl
pushl
inc
push
lea
push
push
call
add
test
jne
mov
test
jne
test
jne
mov
andl
mov
push
mov
pop
mov
mov
cmp
jne
mov
mov
mov
andl
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jae
sub
dec
jmp
mov
sub
cmpl
jne
cmp
jb
mov
mov
mov
mov
andl
cmp
mov
mov
mov
mov
jae
sub
dec
jmp
mov
sub
push
mov
mov
pop
shl
mov
push
dec
mov
pop
shl
dec
mov
cmp
jae
push
pop
sub
shr
add
movzbl
mov
add
shl
or
inc
cmp
jb
mov
mov
mov
and
lea
lea
movzbl
mov
test
movzbl
jne
shr
movzbl
sub
mov
mov
inc
decl
jmp
shr
movzbl
sub
testb
jne
jmp
mov
testb
jne
mov
push
pop
shl
dec
and
add
lea
lea
movzbl
mov
test
movzbl
je
shr
sub
testb
je
andl
push
mov
pop
shl
sub
dec
and
add
shr
cmp
mov
jae
push
pop
sub
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
mov
mov
and
lea
lea
movzbl
mov
movzbl
shr
sub
testb
jne
testb
jne
mov
push
pop
shl
dec
and
add
lea
jmp
andl
cmp
jae
mov
sub
add
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
mov
push
pop
sub
shl
dec
and
add
lea
shr
mov
sub
mov
sub
cmp
jb
mov
sub
mov
mov
mov
inc
inc
mov
inc
inc
subl
jmp
mov
lea
sub
sub
cmp
jbe
sub
mov
mov
inc
inc
dec
jne
lea
mov
mov
inc
inc
decl
jne
jmp
shr
sub
mov
mov
inc
decl
mov
cmpl
jae
mov
shr
cmp
jb
mov
mov
sub
shl
sub
andl
mov
mov
mov
jmp
testb
je
mov
shr
cmp
jb
mov
mov
mov
shl
sub
sub
mov
mov
movl
mov
andl
cmp
mov
mov
mov
jae
sub
dec
jmp
mov
sub
cmpl
je
cmpl
jne
mov
movl
jmp
movzbl
mov
mov
mov
movl
mov
cmpl
jne
mov
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
push
mov
pop
shl
mov
dec
and
lea
lea
movzbl
shrl
sub
movzbl
test
mov
jne
mov
movl
mov
jmp
test
je
and
mov
mov
mov
movl
jmp
test
je
test
je
movl
jmp
cmpl
jne
mov
cmp
jae
mov
sub
add
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
push
mov
pop
movl
shl
dec
and
shrl
add
mov
sub
mov
movzbl
mov
mov
jmp
mov
cmpl
jne
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
push
pop
shl
dec
and
lea
movzbl
shrl
lea
sub
mov
movzbl
test
je
and
mov
mov
mov
movl
jmp
test
jne
mov
mov
lea
lea
mov
jmp
cmpl
jne
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
push
mov
pop
movl
shl
dec
and
shrl
add
sub
mov
cmpl
jne
mov
lea
sub
cmp
jae
mov
lea
lea
sub
sub
jmp
mov
sub
cmpl
je
mov
mov
jmp
mov
test
jne
cmp
jne
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
mov
mov
add
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
je
andl
mov
mov
mov
inc
inc
dec
cmp
jne
lea
decl
jne
andl
mov
cmpl
jne
test
jne
mov
cmp
jne
mov
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
mov
mov
add
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
je
mov
andl
mov
inc
dec
andl
cmpl
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
add
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
movl
cmpl
je
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
lea
mov
push
lea
push
lea
push
lea
push
call
add
cmpl
jne
jmp
mov
push
mov
pop
lea
mov
push
lea
push
lea
push
lea
push
mov
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
cmp
mov
mov
mov
mov
jae
sub
dec
jmp
mov
sub
cmp
mov
jne
mov
xor
mov
jmp
push
pop
cmp
jbe
orl
add
dec
mov
mov
mov
cmp
jne
mov
mov
lea
push
lea
push
lea
push
lea
push
call
mov
add
cmp
mov
jae
mov
sub
dec
jmp
mov
sub
cmp
mov
jne
push
pop
mov
cmp
je
jmp
mov
mov
jmp
movl
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
call
add
cmpl
jge
xor
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
incl
lea
dec
jne
cmp
jne
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
mov
push
pop
lea
mov
mov
cmp
jne
inc
add
cmp
jbe
cmp
mov
jae
mov
mov
push
lea
pop
cmp
jne
dec
sub
cmp
jne
cmp
mov
jbe
mov
mov
push
mov
pop
shl
cmp
jae
lea
sub
js
inc
add
shl
cmp
jb
mov
shl
mov
lea
sub
mov
js
add
mov
xor
dec
mov
je
xor
add
add
dec
mov
jne
mov
xor
mov
add
test
mov
je
mov
mov
lea
mov
mov
inc
mov
mov
inc
cmp
jb
mov
andl
andl
orl
mov
mov
mov
mov
mov
neg
cmp
jg
lea
mov
mov
mov
mov
dec
test
mov
je
jmp
mov
lea
cmp
jle
inc
mov
incl
add
mov
mov
add
sub
cmp
jbe
mov
mov
push
sub
pop
shl
cmp
jbe
or
sub
add
mov
cmp
jae
inc
cmp
jae
jmp
mov
add
mov
mov
shl
cmp
jbe
sub
inc
cmp
jb
mov
push
pop
mov
shl
mov
add
cmp
ja
mov
lea
lea
mov
shl
cmpl
mov
lea
mov
mov
mov
mov
je
mov
mov
mov
mov
sub
mov
shr
mov
mov
sub
mov
push
cltd
pop
idiv
mov
sub
mov
lea
lea
lea
movsl
movsw
jmp
mov
mov
mov
mov
mov
cmp
jg
mov
mov
sub
mov
mov
lea
cmp
jb
movb
jmp
mov
mov
cmp
jae
cmp
sbb
and
add
mov
jmp
sub
mov
mov
add
mov
mov
movzwl
addl
mov
mov
mov
push
sub
pop
mov
shl
mov
shr
cmp
jae
mov
lea
lea
lea
shl
mov
mov
add
lea
add
cmp
movsl
movsw
jb
mov
mov
mov
push
lea
pop
shl
test
je
xor
shr
jmp
xor
mov
mov
lea
push
mov
pop
shl
dec
and
cmp
je
decl
sub
sub
jmp
mov
decl
mov
test
jne
incl
addl
mov
cmp
jle
test
je
cmpl
je
or
jmp
or
jmp
push
mov
push
mov
push
push
mov
mov
push
mov
mov
cmp
mov
mov
jbe
mov
mov
sub
mov
cmp
jbe
mov
test
je
mov
cmpl
jne
andl
sub
push
push
push
call
add
mov
add
add
cmp
jne
cmp
lea
mov
jne
mov
mov
mov
sub
cmp
jbe
mov
test
je
mov
cmpl
jne
andl
sub
push
push
pushl
call
add
add
add
mov
mov
pop
mov
mov
mov
pop
pop
leave
ret
nop
in
pop
add
cld
dec
adc
dec
in
adc
mov
adc
add
hlt
adc
inc
pop
add
add
add
jbe
add
push
add
lods
std
add
add
add
add
add
or
add
adc
enter
push
addr16
mov
add
add
addr16
ds
add
add
loopne
adc
out
data16
data16
adc
add
addr16
add
add
add
inc
js
je
jb
arpl
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
jb
je
arpl
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
inc
push
dec
inc
dec
xor
cs
insb
add
gs
xor
fs
insb
