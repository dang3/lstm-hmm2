repz
outsl
mov
jnp
jge
xlat
jnp
pop
xchg
cld
mov
cwtl
jae
dec
lds
test
adc
mov
cmp
push
cmp
inc
scas
dec
into
xor
in
ficomps
push
xor
ljmp
shlb
gs
clc
stc
jle
jb
es
mov
sbb
stos
cmp
xlat
mov
and
es
xor
xor
dec
gs
rol
sbb
xor
mov
fs
out
xor
and
das
mov
push
add
or
popf
dec
cmp
popf
out
xor
out
xchg
adc
or
and
and
sub
fdivl
lcall
cmp
xchg
xor
enter
xor
lods
arpl
push
jge
sub
cli
jns
xchg
cmp
shl
stos
mov
cli
inc
rorb
add
jno
or
hlt
cli
jns
loope
int3
lret
mov
test
outsb
xchg
add
cmpb
sub
cmc
jg
sub
xchg
mov
pop
fs
loope
push
fwait
dec
push
insl
mov
lretw
pop
clc
sbb
pop
std
cld
mov
aad
test
das
pop
inc
idiv
mov
lcall
or
shr
mov
dec
push
pop
arpl
jns
gs
cmp
into
dec
mov
cmp
mov
jmp
testl
mov
push
int3
lds
add
jl
jnp
addr16
lret
int3
mov
ret
adc
aas
jl
and
mov
ja
pusha
int3
inc
cwtl
pop
lods
add
push
inc
xor
add
clc
shll
ret
scas
std
insb
daa
aas
fsts
insl
sub
xchg
je
lahf
movsl
add
outsb
orl
sub
into
dec
cli
cld
movsl
fnstcw
adc
sub
adc
mov
nop
clc
xchg
inc
femms
int
aad
pop
lock
test
test
pop
push
fsubp
out
repz
not
adc
lcall
xchg
push
adc
div
insb
jmp
jno
inc
mov
fcmovbe
cmp
movsl
pushf
sbb
or
gs
int3
and
fiadds
cmpl
pop
adc
mov
popa
aaa
inc
push
xor
sbb
jne
je
add
sahf
shlb
pop
call
or
jno
mov
pop
push
add
dec
ds
adc
adc
sbb
cmpsl
or
inc
mov
or
daa
lods
ja
jle
pusha
sub
mov
stos
loop
push
sub
mov
js
add
push
add
and
stos
and
mov
imul
sbb
js
and
cmc
leave
enter
loop
sbb
repnz
or
mov
xlat
push
pmuludq
mov
inc
and
adc
out
mov
in
dec
fldl
push
pop
sub
mov
push
not
and
iret
adc
add
xor
cmpsb
imul
es
scas
scas
jmp
arpl
pushf
int3
test
sub
dec
inc
roll
mov
loopne
xor
pop
jle
rcrb
out
and
mov
inc
push
push
int3
push
xorl
inc
dec
dec
enter
mov
sub
std
insl
cmpl
and
mov
fcmovu
fcoml
cmpsl
or
jle
sbb
adc
ss
outsb
insl
adc
pop
lahf
aaa
cmp
fists
les
push
sub
cmpsl
xchg
jns
xchg
jbe
ret
and
loop
inc
fs
push
sti
cli
inc
jo
mov
incb
cli
mov
mov
repz
mov
not
xchg
pop
mov
mov
push
add
movsb
dec
outsb
int
sahf
outsl
mov
sub
push
jle
sub
xor
ficomps
jns
out
pop
push
jge
pop
mov
test
inc
mov
jne
inc
adc
lret
outsb
pop
lods
popf
xchg
mov
jecxz
mov
dec
dec
sub
fistps
cld
test
mov
cmp
punpckldq
pop
cmp
mov
add
jecxz
roll
pop
sbb
cs
aaa
movl
into
ret
adc
sub
movsl
insl
in
dec
mov
dec
push
nop
xchg
pop
es
push
cmc
cwtl
add
mov
jmp
mov
ret
aas
sub
in
test
pop
jmp
out
test
mov
xchg
stos
les
hlt
subb
jge
jle
cmp
mov
jge
js
xor
stos
pop
jne
dec
push
pop
out
outsb
test
rcl
or
cmp
push
fldl
pushf
lret
xchg
in
js
xorl
test
dec
xchg
aad
mov
mov
inc
fwait
jl
pop
movsb
lods
stos
push
ss
add
mov
xor
movsl
lods
sbb
jmp
call
outsb
leave
in
fucomip
ficoms
orb
sbb
repnz
cli
mov
mov
adc
pop
adc
push
fistl
xchg
jp
sti
mov
push
dec
leave
mov
imull
sahf
std
jo
mov
aas
fwait
and
and
cwtl
nop
push
cli
sub
xor
call
mov
fdivrl
sub
lret
rcrl
push
pop
movsl
std
in
sub
movsl
test
hlt
filds
cld
aam
mov
imul
insl
mov
mov
test
scas
incl
push
nop
test
xor
mov
or
dec
xchg
imul
movsb
add
stos
mov
pushf
fsub
out
mov
mov
adc
xchg
leave
adc
or
xchg
pop
pop
cmpsl
jge
inc
sub
pop
ret
in
fiadds
stc
aad
pop
fs
mov
mov
enter
ret
sti
popa
cmp
das
aaa
fidivl
pop
cmp
and
outsl
mov
lds
rorl
mov
sahf
test
mov
addr16
loop
dec
jge
adcl
pusha
aas
xlat
xchg
std
jp
dec
lods
xchg
sbb
in
mov
rorl
dec
in
shl
ret
shrl
shll
mov
popf
mov
lcall
test
insl
sub
fsubr
pop
data16
fbstp
lock
ret
cli
jne
fadds
stc
aas
hlt
mov
aad
aam
or
fwait
icebp
pusha
fsubl
cld
out
pop
fstpl
lcall
dec
jg
xor
push
and
xlat
bound
pop
imul
push
sahf
in
dec
les
mov
xor
jecxz
scas
mov
stc
push
push
xor
stos
pop
dec
mov
or
lea
rcll
inc
dec
les
scas
das
xor
jno
inc
adc
out
dec
enter
sbb
cmp
adc
movb
push
and
std
gs
sub
jns
push
lcall
push
add
aam
sbb
xor
lods
sub
adc
stos
sub
push
xor
iret
out
jle
mov
adc
andb
data16
std
jl
mov
or
pop
add
clc
lahf
outsb
xchg
adc
cmc
cmp
or
fadds
movsl
push
jl
lret
and
test
dec
shlb
pusha
xchg
or
push
pop
mov
and
jmp
hlt
out
aad
mov
sahf
daa
loop
fisttpll
negb
mov
sbb
add
pop
jbe
dec
cmp
lds
push
dec
test
arpl
mov
aaa
mov
push
fsubrs
fs
aas
push
lds
xor
les
mov
popf
sbb
mov
xchg
ret
outsl
or
adc
imul
mov
pushf
dec
xor
sub
inc
xor
and
test
or
pushf
scas
and
mov
cmp
lret
sbb
ja
push
jl
outsl
mov
sbb
imul
lret
or
sti
sub
sub
pop
xlat
adc
cld
cmc
addb
fnstcw
jle
andl
push
jge
in
js
outsl
ficompl
lods
push
push
aad
cwtl
dec
pop
into
repnz
xchg
stc
les
push
out
scas
dec
fdivrs
imul
mov
pop
pop
imul
repnz
aad
mov
lods
mov
scas
inc
sbb
lods
shll
out
decl
or
push
pop
lret
dec
mov
and
cltd
dec
mov
and
adc
sub
cmp
inc
int3
xor
dec
scas
sub
jge
and
adc
dec
insl
sub
push
pusha
adc
lcall
lret
jno
jo
jae
pop
cld
in
leave
pop
sbb
xchg
and
pop
jle
das
aas
fwait
leave
dec
sahf
popf
sbb
imul
cmp
sbb
ljmp
push
mov
jb
arpl
push
std
sub
or
sub
and
je
outsl
push
jp
adc
nop
mov
ljmp
mov
mov
adcb
into
int
push
iret
call
sbb
pop
mov
and
popl
int3
insb
call
fimull
mov
pop
outsb
gs
mov
sahf
daa
loop
in
jg
pop
fistpl
loope
or
adc
mov
jmp
aaa
inc
cmc
aad
mov
pop
inc
sarb
cmpsl
sbb
scas
pop
inc
inc
adc
mov
xor
inc
mov
popf
int
enter
sbb
and
xor
loope
add
push
cs
pop
movsl
popf
int3
dec
inc
sbb
pop
cld
adc
mov
pop
mov
push
add
jle
pushf
sub
xchg
test
xchg
push
fwait
pushf
fcompl
es
cmp
mov
mov
sub
sahf
aas
adc
pop
fadds
ret
and
mov
std
mov
mov
dec
je
jno
xor
aaa
mov
mov
repz
jne
je
inc
pusha
or
pop
inc
pusha
fsubl
insb
fcoms
cmp
jbe
mov
testb
test
into
repnz
and
pop
fdivs
sbb
cwtl
ljmp
jbe
aad
sub
dec
lock
popa
pop
xor
xchg
out
push
imul
add
mov
stc
sbb
mov
sub
insl
data16
cmp
mov
gs
mov
pop
jl
fwait
out
mov
sbb
sar
stos
sbb
adc
andnps
sub
sub
add
repnz
jns
sub
mov
jne
push
mov
ljmp
sbb
int
inc
aam
addl
loopne
push
push
cmc
je
mov
add
sti
subl
push
clc
mov
xchg
or
or
out
add
jle
fimuls
jnp
inc
loope
or
push
fnclex
aas
mov
insl
jo
sub
add
jno
sub
xlat
imul
add
js
xor
add
fs
sbb
icebp
or
insl
test
cltd
outsb
and
imul
jmp
dec
mov
push
inc
ss
ret
dec
mov
ljmp
jbe
cltd
std
loop
fisttps
or
pop
mov
sub
cmp
mov
cmc
xchg
adc
mov
xchg
loopne
stos
adc
dec
rcrl
xchg
push
lcall
and
xor
jmp
popa
add
into
sub
cltd
cmp
xchg
inc
mov
push
lock
or
xor
or
mov
jl
addl
dec
dec
cwtl
add
popf
fwait
dec
xor
inc
inc
stc
insb
fcoms
arpl
cmp
mov
movsl
add
push
ficompl
shr
imul
or
push
lds
out
into
icebp
sub
test
aas
pop
inc
or
cmpsb
fstps
fadds
inc
xchg
cwtl
xor
jnp
adc
gs
clc
mov
int3
xchg
jnp
mov
mov
adc
jnp
arpl
push
sahf
mov
mov
pop
shrb
jo
in
xlat
jle
popf
sbb
stc
ja
lcall
leave
adc
mov
pop
pushf
xchg
js
push
mov
mov
icebp
sbb
lods
lock
mov
out
int3
out
stos
gs
loopne
stos
mov
popf
sub
pop
cmpsl
es
addb
not
gs
les
fdivl
mov
mov
sub
ja
push
das
push
push
and
addl
ss
lret
mov
or
rolb
js
sub
push
cli
loope
out
repnz
adc
insl
test
jle
popa
jmp
pop
out
dec
lahf
add
int
pop
ret
push
not
scas
scas
incl
loopne
add
add
and
push
inc
push
cwtl
xor
int3
mov
xor
into
int3
lret
jne
cmp
out
inc
aas
in
or
mov
push
ficoms
gs
call
or
cmp
dec
int
add
leave
dec
les
js
push
lods
movsl
adc
and
fwait
sub
sub
sub
das
cwtl
lcall
and
out
push
gs
js
arpl
xor
dec
stos
addb
nop
mov
lret
add
andl
push
stos
add
out
or
arpl
mov
stos
inc
push
mov
mov
scas
mov
repnz
out
pop
sub
orb
pop
test
sub
popa
ss
test
pop
fstl
nop
ret
pop
dec
ficoml
xchg
repnz
push
or
into
jb
mov
push
nop
dec
mov
push
pop
cmpsl
ljmp
inc
dec
mov
mov
inc
call
nop
mov
test
inc
pop
popa
dec
aad
xor
jp
add
hlt
int3
outsb
sbbb
sbb
push
jmp
jle
pop
mov
aad
sub
jge,pt
jbe
test
scas
loope
enter
stos
cltd
sbb
push
mov
jb
scas
std
jo
and
cmc
std
jl
jbe
stc
add
xor
not
push
les
or
cmc
hlt
lods
push
stos
data16
sub
aam
cmc
test
mov
loope
xchg
pop
fisttpll
sub
or
pop
outsl
xor
or
popa
loope
xor
cmp
fldl
stos
fstps
dec
push
add
push
xchg
roll
mov
out
jb
or
and
in
cmp
cmp
push
daa
rolb
scas
mov
iret
in
shlb
js
jg
das
adc
mov
repz
or
in
or
jns
or
rcll
orb
enter
inc
jp
dec
sbb
ljmp
fldcw
sub
mov
xchg
sahf
and
sub
xchg
rorb
mov
xlat
adc
in
movsl
mov
fsubrl
fbld
scas
fwait
mov
out
jne
jp
in
or
lahf
push
add
sub
jnp
test
shl
cmp
lock
js
dec
cmp
pop
outsl
out
outsb
ret
inc
or
jge
ljmp
and
mov
dec
jp
push
shlb
cmp
and
mov
enter
push
add
xor
jg
xorl
sub
add
mov
in
sub
sbbl
sbb
call
dec
dec
faddp
inc
into
lods
les
imul
xor
aad
test
pop
pop
push
push
int3
jl
jg
dec
into
sbb
pop
shll
leave
scas
lahf
sahf
test
adc
shll
push
adc
xchg
adc
stos
sub
ljmp
inc
pushl
sub
inc
pop
push
pop
sbb
dec
movsb
mov
movsl
and
lock
dec
push
cmp
out
aam
imul
push
and
jns
js
jg
sahf
sti
dec
pushf
xlat
rclb
and
cli
or
outsl
into
mov
mov
repnz
cmpsb
popa
loop
jnp
mov
sbb
jmp
int
fldenv
icebp
cli
loop
movsb
dec
js
leave
es
icebp
cmp
mov
icebp
aam
or
arpl
dec
push
test
out
xor
inc
cltd
mov
xchg
xor
test
stos
and
jbe,pn
or
ret
inc
movb
sarb
ds
dec
lret
pop
push
push
popf
sbb
dec
cmp
leave
jge
inc
mov
adc
mov
mov
xchg
js
testb
push
lcall
push
adc
lahf
out
mov
mov
out
jge
test
stos
loop
out
jnp
and
mov
popf
in
xorl
jb
jge
in
jbe
outsb
mov
stos
dec
mov
inc
scas
adc
jle
pop
ret
lret
xor
xchg
pop
fisubrs
add
add
inc
rcr
jmp
popa
loope
rcrb
xchg
data16
pop
jmp
push
fldcw
cs
cmp
mov
dec
jb
scas
pop
pop
mov
lods
arpl
out
sbb
leave
test
int3
mov
cmpsb
xor
mov
inc
cltd
mov
dec
dec
mov
adc
mov
cwtl
divl
pop
pusha
mov
mov
dec
enter
out
idivb
fwait
or
add
dec
stc
mov
mov
sub
shlb
ljmp
shrl
xchg
push
test
push
mov
xchg
sub
aad
inc
cmp
jle
jo
stos
inc
bound
mov
ljmp
popa
lock
loop
testl
decb
ja
lahf
loop
js
loopne
cltd
pusha
movsl
cmp
fistpll
add
andl
inc
aas
dec
lea
ret
add
xlat
and
outsl
ljmp
add
or
xchg
call
iret
mov
icebp
fisubrs
jbe
outsb
pop
fisubs
push
das
xchg
lea
sub
add
mov
adc
mov
inc
shll
pop
scas
cli
add
xor
ss
cmp
int
push
pop
xchg
lds
insb
xchg
lret
orb
push
iret
mov
inc
lret
ja
fwait
cltd
leave
adc
cs
mov
sub
jl
daa
dec
push
rcrb
cltd
int
pop
test
outsb
push
movsl
and
call
imul
sbb
push
test
pop
fbld
dec
sbbl
cmp
lea
fidivl
cld
mov
add
in
adc
out
dec
and
cmc
je
enter
adc
inc
aas
lahf
mov
mov
xchg
cld
cmc
icebp
add
add
insl
jo
movsb
jg
push
sub
pusha
fcompl
push
sbb
insb
call
adc
fcom
cmp
sbb
and
gs
jno
insb
sbb
push
mov
outsb
mov
cmp
cmp
xor
pusha
sbb
test
dec
lret
dec
ret
xchg
mov
repnz
ss
js
fneni(8087
loope
xor
leave
dec
mov
aas
ja
sbb
cmp
cmpb
jp
sub
inc
lods
pop
push
imul
stos
xorl
pop
cmp
cmpsl
es
pushf
sbb
mov
ret
push
xor
mov
popa
sbb
clc
fistps
js
sub
dec
test
je
outsl
jp
loop
xchg
scas
out
sti
jp
ljmp
or
addl
mov
xchg
pusha
mov
pop
out
and
inc
mov
jns
fiadds
aad
arpl
loopne
xor
sbb
adc
out
pop
out
sahf
push
popf
push
cwtl
push
mov
xor
adc
mov
mov
aaa
sbb
pop
lods
call
or
xor
inc
bound
inc
int3
xor
popa
outsb
pusha
mov
ss
dec
movsl
data16
mov
adc
jcxz
mov
sarb
adc
sbb
mov
push
dec
mov
jno
jp
inc
pop
adc
inc
shll
xchg
test
xor
adc
inc
push
test
cmpsl
shrb
adc
adc
loope
cmp
fnsave
popa
inc
fisubl
lea
rolb
std
cld
lea
jne
or
lahf
push
xchg
out
inc
mov
jnp
xchg
push
shrb
sbb
xchg
jbe
pushf
pop
aas
movsb
ds
andb
aad
or
aad
popa
loope
dec
dec
pop
ficomps
rcl
ja
xchg
in
repnz
push
out
push
sbbb
mov
aam
mov
insl
jge
rorl
ljmp
das
mov
sub
into
jb
inc
push
mov
movsw
or
imul
jmp
ss
pop
movsb
xor
add
dec
push
dec
insl
cmp
ret
pop
cmp
xor
out
shrb
dec
enter
or
sahf
sbb
xchg
mov
in
lret
cltd
gs
jle
lods
sub
inc
pop
lods
clc
sbb
fcmovnu
movsb
and
adc
setg
lods
push
stos
push
cs
ja
das
cli
add
repz
leave
and
lahf
out
adc
popf
add
jge
icebp
cmp
xchg
pushf
stc
mov
movsb
push
test
push
and
pop
dec
dec
xchg
pusha
fcompl
xor
xor
push
fimull
add
mov
fcmovu
ljmp
pusha
in
imul
pusha
and
xchg
push
ficompl
sub
jnp
bound
iret
pop
aas
mov
test
repz
inc
lods
test
push
loop
ja
lret
mov
fiadds
inc
mov
dec
int
ljmp
mov
xor
xor
mov
or
dec
mov
or
insb
or
pushl
or
arpl
inc
adc
mov
mov
scas
or
int3
fcoml
out
jb
mov
or
mov
push
inc
mov
dec
scas
xor
jno
dec
cmpsl
lods
stos
dec
test
ret
push
xchg
jnp
mov
aad
sti
jp
jge
pop
and
shlb
jns
js
dec
pop
xchg
push
test
jle
xchg
sbb
or
mov
daa
xlat
push
pmuludq
aam
pushf
mov
add
jecxz
sbbb
xlat
fstpl
repz
nop
das
js
in
in
mov
cmc
lods
jmp
adc
insl
adc
aad
mov
cmp
push
push
cmpsl
loop
cmp
cmp
pop
rclb
mov
xor
inc
lods
cmpsl
in
mov
push
fldl
ficoms
push
lret
testb
sbb
arpl
je
and
les
cwtl
dec
ret
xchg
pushf
sub
mov
xchg
or
xlat
push
mov
or
in
lret
ljmp
mov
fcomi
lods
insb
daa
cmp
inc
icebp
leave
sub
movsl
and
hlt
pop
mov
cmp
outsl
xchg
jno
test
popa
mov
in
or
and
dec
inc
lahf
adc
inc
cmp
shl
cmp
and
and
jo
pop
je
aam
repnz
int
cli
and
push
push
fdivl
xchg
xor
arpl
mov
stos
cmp
and
jno
lock
or
mov
xchg
mov
arpl
push
popf
mov
lcall
xor
stos
add
jl
inc
lods
and
divl
add
das
scas
push
rcl
sbb
dec
cmc
dec
sahf
test
sbb
pop
xchg
jle
insb
leave
iret
les
sbb
jae
fs
pop
sub
sub
sub
add
sbb
aas
xor
leave
call
push
clc
mov
in
push
test
pop
sar
xlat
push
sti
shr
and
lret
outsl
out
outsb
cmpsb
jbe
icebp
mov
mov
in
push
sub
outsb
call
bswap
std
add
dec
mov
loope
or
mov
pop
or
popa
in
add
add
pop
int
push
push
cld
push
stos
pusha
popa
loope
xor
data16
nop
lret
inc
mov
push
pop
rsm
inc
push
imul
add
mov
add
pop
adc
ds
loop
in
dec
pusha
fistps
bound
mov
inc
int
cmp
mov
or
addl
adc
cmpb
ds
sbb
int
adc
sbb
jae
jl
leave
or
adc
out
inc
shlb
cmp
mov
xchg
out
aas
jns
adc
es
sub
and
rorl
push
mov
gs
mov
xor
jbe
jl
xor
push
xchg
inc
mov
dec
push
stos
lahf
jnp
dec
add
outsb
mov
sahf
xor
ret
movl
pop
inc
addl
fstpl
cmp
lret
ficoml
gs
xchg
fchs
jbe
pop
imul
daa
lock
jno
addr16
jmp
iret
pusha
xchg
fsubs
ljmp
sub
xor
pop
movsl
jp
push
xor
fucomp
test
nop
outsl
push
mov
or
mov
dec
lret
ret
inc
out
inc
cmp
push
pop
ss
push
jbe
hlt
mov
das
jne
push
dec
lret
insb
dec
lret
sbb
or
or
xor
xchg
lcall
setbe
mov
aas
pusha
fwait
push
adc
pop
pop
lock
adcb
jno
sbb
mov
cld
xor
andnps
sub
fidivl
imul
adc
jnp
pusha
pop
lahf
outsb
jne
xchg
out
add
test
mov
xor
loop
dec
test
leave
mov
loop
rcpps
adcl
mov
inc
dec
pop
mov
loop
xor
add
add
and
pop
jmp
fistl
push
movsb
sbb
mov
inc
push
adc
insl
enter
inc
add
jo
call
test
jmp
fistpll
and
push
das
push
pop
push
gs
loop
mov
xchg
sar
xor
ret
xor
xor
sub
pop
std
cmp
jecxz
push
popf
in
xor
xchg
add
adc
test
aas
sbb
jbe
mov
adcl
inc
in
rcrb
jge
stc
xchg
sub
stos
xchg
or
add
or
add
out
push
xchg
mov
arpl
mov
or
jecxz
cmpsb
popa
in
inc
pop
insb
mov
adc
test
inc
aaa
negl
jnp
jp
bnd
mov
push
sub
cli
sub
popf
hlt
mov
cmpsb
cmp
inc
or
or
add
cmp
sub
jmp
lods
xabort
lahf
mov
dec
inc
pop
loope
ficoml
or
sub
jp
dec
or
jmp
and
mov
addr16
push
adc
mov
adc
cmp
pusha
fildll
ss
filds
jl
adc
movsl
ss
dec
movsl
push
loop
mov
popa
sbb
jp
jne
push
test
mov
arpl
das
mov
xchg
popf
test
push
addr16
push
inc
sbb
xchg
es
fldcw
adc
ljmp
mov
push
lcall
neg
adc
push
mov
and
cmc
add
icebp
test
std
mov
sub
dec
sbb
stos
add
fbld
test
scas
loop
push
add
mov
push
push
fldt
fwait
lret
pop
pop
ret
sarl
add
test
mov
fsubrl
lcall
stos
add
push
lret
jmp
push
aad
sbbb
mov
jno
divl
ljmp
icebp
out
jmp
xchg
adc
push
add
divl
sbbb
add
xlat
xchg
or
mov
lods
stc
leave
es
arpl
xor
loope
add
das
mov
int3
dec
fwait
orb
arpl
push
cltd
sbb
xchg
adc
aas
negl
xor
xchg
shrb
adc
lods
or
mov
push
cmp
sbb
cmpsb
in
push
and
cli
divl
arpl
outsb
xor
jg
repz
subl
inc
or
push
std
rcl
ret
or
and
fstl
aad
cmp
nop
or
ret
cmp
cld
int3
xchg
mov
subl
test
aam
andl
jmp
ljmp
out
test
jge
adc
lock
mov
addl
aad
cmp
mov
lea
cld
pop
popa
inc
mov
xor
fdivrl
dec
leave
dec
in
setl
inc
mov
popa
aas
push
out
mov
dec
cmc
cmp
push
xchg
jle
sbb
outsl
aaa
mov
lahf
mov
xchg
adc
and
mov
loop
sbb
or
xor
cwtl
and
out
mov
lahf
push
mov
push
jp
jge
or
divl
outsb
leave
dec
movsb
fmul
addr16
xchg
shll
addb
sub
outsl
sub
std
jl
fdivs
sti
xchg
insl
cmp
jno
mov
out
outsb
xchg
lods
jno
rcl
inc
leave
es
or
pop
ja
mov
addl
fiaddl
xlat
sub
pusha
fdivr
iret
daa
out
pop
fstpl
mov
leave
xchg
insb
push
pop
cs
loopne
mov
test
mov
sbb
lret
test
inc
mov
scas
push
rcrl
aaa
add
dec
adc
ss
cli
dec
les
fdiv
xor
mov
or
xchg
sbb
dec
inc
andl
sub
inc
jp
in
jle
jne
in
scas
sub
cmpsl
push
pop
sub
out
ret
and
stc
lahf
push
add
imul
jge
insb
clc
std
call
negb
inc
outsl
out
outsb
add
js
or
lds
ret
mov
sbb
daa
mov
testb
push
push
adc
pop
dec
fisubs
push
or
cs
pop
out
push
ds
mov
cmp
loop
push
sub
mov
int3
test
pop
jle
fldcw
jecxz
aas
out
sub
stos
pandn
popa
mov
movsb
divl
in
xchg
icebp
icebp
ljmp
xor
test
in
cmp
scas
push
roll
dec
into
dec
mov
sub
imul
or
lea
adc
mov
push
jmp
dec
xchg
push
lcall
adc
adc
sub
arpl
sahf
rcrb
stos
icebp
pop
sub
scas
insl
ja
pop
lahf
dec
or
jae
jnp
sub
in
jl
repnz
out
stos
add
mov
jne
je
or
nop
ja
or
cld
popf
sarl
xchg
mov
add
push
test
test
adc
jle
pushf
dec
test
dec
fstpl
and
sub
sarl
test
test
test
add
lods
fwait
pop
fisubrs
pushf
call
pop
icebp
sub
adc
or
pop
jb
test
cmp
mov
mov
add
add
mov
test
jecxz
arpl
inc
pop
faddp
sbb
cmp
adc
rcll
fstl
ret
out
push
ficoms
push
ljmp
pop
xchg
popa
insl
dec
enter
mov
cltd
dec
cs
sub
sahf
lods
sub
mov
mov
inc
push
sub
aas
xor
xchg
and
bts
out
cmc
mov
jp
gs
das
dec
sub
adc
and
and
cmp
jnp
not
cmpsb
mov
movsb
jae
scas
into
push
aad
add
lcall
cmp
or
fnstcw
repz
and
bnd
out
int3
scas
pop
xlat
mov
test
leave
mov
inc
fdivrs
or
mov
pop
pop
pop
mov
jecxz
in
test
aaa
mov
lds
mov
mov
in
scas
mov
addr16
mov
or
push
jnp
gs
pushf
mov
xor
aas
mov
fistpl
adcb
cmp
inc
out
mov
sbb
xchg
clc
pop
sub
xor
and
dec
inc
daa
ss
mov
jmp
add
mov
pop
inc
sub
daa
sbb
sbb
loopne
jne
test
into
and
push
or
jge
icebp
inc
mov
xchg
movsb
mov
divl
cwtl
stos
lret
pusha
fsubl
ss
xchg
xor
push
or
lods
inc
push
push
faddl
cmp
shl
push
push
cmpsb
sbb
dec
sbb
aad
les
push
mov
adc
sub
inc
shll
sahf
cmp
sbb
test
clc
movb
cmp
xchg
mov
push
dec
int
fs
pop
cmp
pusha
sub
push
or
xlat
fsubl
adc
fs
dec
lock
popf
test
add
repz
cltd
dec
xchg
fwait
mov
sbb
das
mov
out
pop
xchg
xchg
fldt
mov
lcall
inc
cli
xchg
mov
jg
push
cs
bound
fisubrl
inc
bound
loop
es
out
pop
arpl
sti
xchg
mov
fs
push
pop
jbe
cmp
jg
mov
std
add
cmp
dec
mov
and
inc
scas
mov
rorl
int3
and
mov
sbb
loope
xchg
mov
imul
cmp
ss
pop
mov
xchg
pop
add
out
sub
inc
sub
pop
pop
cmp
ljmp
pop
cmpsb
push
test
lahf
mov
sbb
mov
xor
divb
insb
dec
mov
cs
fs
int3
dec
mov
imul
sbb
or
cmp
mov
jg
sahf
mov
gs
clc
insb
movsb
std
mov
adc
xchg
fxch
fisubrl
daa
push
shlb
push
sbb
outsl
push
inc
cwtl
xor
iret
mov
and
dec
ljmp
lret
nop
orb
jb
and
out
outsb
add
ja
fmull
test
or
stc
sub
push
jne
inc
fstl
jnp
dec
jb
inc
stc
adc
or
push
aas
daa
cwtl
push
cmp
iret
fcmovnb
adc
aad
or
pop
lock
leave
loop
rcrl
imul
mov
dec
mov
pop
popa
and
sub
pop
and
mov
and
mov
pop
test
mov
jbe
scas
cmp
push
stos
aaa
mov
mov
dec
sub
aam
inc
sub
sub
mov
inc
test
cmp
lahf
push
aaa
or
sbb
mov
adc
fwait
rcll
adc
in
lea
sub
sub
inc
dec
and
jmp
mov
jmp
in
out
ss
or
stos
movsb
es
mov
pop
cmpsl
es
sub
std
adc
push
je
pop
push
dec
inc
add
xor
jnp
jp
imul
insb
or
test
das
int3
loope
test
outsl
cs
sub
jo
pop
sysret
cmp
pop
fdivrs
xor
pop
mov
pop
xor
iret
dec
mov
sub
sub
mov
scas
into
fwait
pop
ror
xor
xchg
inc
or
hlt
in
mov
ds
aaa
mov
fldcw
lahf
push
and
int
xor
rcrb
mov
sbb
lret
cmp
xor
inc
lret
and
inc
ret
jg
pop
popf
mov
imul
movl
or
je
adc
cltd
out
pop
jle
cld
sub
sub
pop
push
lcall
and
mov
add
push
jge
inc
loope
pop
jbe
mov
push
rorl
xlat
dec
push
cmc
je
clc
or
adc
mov
mov
xlat
xchg
jns
shll
add
enter
loop
mov
imul
push
imul
nop
cmp
push
rcl
test
jmp
bnd
push
jmp
jmp
scas
mov
rol
mov
data16
roll
jecxz
cmpsb
icebp
or
jb
nop
movsl
cli
dec
mov
dec
mov
jae
sbb
xor
dec
aas
dec
lds
mov
lret
fwait
lret
dec
out
sub
sbb
arpl
sub
les
pop
xchg
lds
fimull
mov
xlat
stos
sbb
pop
fbld
cld
sbb
sbb
mov
sub
xchg
add
cmpsl
es
mov
test
and
and
inc
arpl
lret
lods
sub
out
std
jl
mov
test
add
test
je
clc
lret
adc
insb
in
pop
pop
push
shlb
push
pop
xchg
adc
mov
or
push
dec
jle
stos
leave
fsubr
pop
push
ds
insb
fcoms
jecxz
imul
push
cmp
pop
dec
into
or
jmp
daa
dec
mov
mov
mov
gs
mov
inc
or
mov
dec
mov
mov
xor
das
roll
xor
adc
shl
cmp
imulb
test
and
pop
or
inc
mov
mov
xor
pop
lcall
loop
decb
popf
out
mov
arpl
jle
xcrypt-cfb
cmpsl
mov
jmp
inc
xchg
push
jo
and
movsb
adc
out
jg
movsl
and
pop
push
mov
mov
pusha
insb
mov
dec
fisubrs
ret
pop
test
add
push
mov
je
or
mov
adcl
or
and
sub
stc
aas
xchg
sahf
cmp
jne
dec
icebp
jle
pushf
pop
adc
mov
jl
xchg
jae
mov
pop
pop
xor
push
mov
scas
mov
out
ficomps
mov
inc
push
lea
inc
out
aad
test
ficomps
je
int
jmp
sarb
insl
pop
insl
jb
lret
jmp
xor
rcr
xchg
popl
adc
cmp
ss
jmp
inc
shlb
imul
push
pop
jae
in
mov
push
mov
in
mov
int
push
fisttpll
pushf
jb
xchg
adc
scas
ds
outsb
pop
lods
cmpsb
fbstp
sbb
cmpsl
es
shrb
push
pop
xchg
mov
jmp
mov
cld
jnp
cltd
arpl
popf
sub
aam
lods
insb
mov
sub
xchg
inc
adc
aad
push
sti
cli
rorb
add
insl
or
cmp
pop
pushf
test
fistl
or
sbb
adc
pushf
sbb
xchg
fucomp
xor
xchg
xchg
lock
das
and
in
jmp
jle
rorb
pop
out
lcall
inc
out
in
dec
dec
into
inc
pop
mov
cmpsb
xchg
xchg
mov
ret
mov
iret
das
xor
into
push
inc
cltd
ror
add
cmp
dec
inc
lret
mov
outsl
mov
mov
data16
xor
jo
push
push
push
pop
loope
rolb
inc
lret
sub
xor
jmp
inc
and
sbb
daa
mov
sub
inc
dec
leave
adc
mov
jne
add
inc
in
out
ja
jecxz
push
bound
and
or
cmc
je
hlt
pop
jp
pop
nop
or
xor
add
or
cmp
mov
fdivl
sub
xor
jle
fcmove
sbb
push
push
pop
fdivrs
daa
lds
les
mov
mov
dec
adc
mov
xor
jecxz
out
adc
jmp
scas
std
push
fs
cmpsl
mov
roll
and
sub
mov
sahf
xor
adc
xor
int3
imul
mov
inc
int3
xor
call
mov
xor
pop
cmp
popf
inc
inc
int3
fs
dec
dec
mov
and
xchg
sahf
scas
setne
xchg
jno
out
sbb
sbb
xchg
mov
and
mov
inc
adc
jnp
xor
mov
mov
shrl
pop
sub
mov
adc
push
push
pop
out
cli
or
xchg
nop
or
rcrb
pusha
push
cli
jns
js
dec
push
jb
jne
dec
cltd
loope
jle
lret
xchg
pop
ret
add
dec
mov
mov
mov
mov
ljmp
gs
jmp
jecxz
mov
lretw
ret
or
aam
jg
filds
dec
pop
test
movsb
mov
in
and
push
aaa
jle
loop
adc
ficoms
inc
dec
pusha
cmp
cmp
ss
gs
mov
nop
mov
lds
or
aas
and
adc
xchg
inc
lret
fwait
les
js
xor
inc
adc
mov
mov
inc
push
aas
sbb
adc
sub
ret
adc
push
fwait
mov
mov
add
lock
fldt
insb
daa
pop
add
stc
js
jg
and
inc
lahf
in
cli
test
jg
testb
push
and
pop
and
cmc
sub
in
or
sbb
and
xchg
ds
jns
add
pushf
imul
xor
loop
aad
cwtl
jmp
jecxz
imul
fnstcw
sub
push
das
cs
fsubp
pop
js
movsl
jb
push
push
pop
scas
ljmp
addr16
sub
fs
lret
push
jmp
mov
jg
push
inc
out
lds
mov
jmp
leave
adc
and
push
xchg
das
pop
fidivrl
popf
fwait
sbb
inc
movsb
jg
dec
jle
mov
ret
inc
jns
imul
movsb
insb
outsb
lock
adc
push
inc
push
pop
inc
xchg
iret
adcb
cld
jle
lods
jnp
mov
sub
pop
jbe
cs
fldl2e
sub
cli
adc
dec
ret
jp
test
mov
subl
xchg
mov
mov
out
cmp
stc
js
or
addl
xlat
xchg
stos
sub
cmpsl
cmp
cmp
xchg
push
jns
fs
mov
push
mov
mov
mov
lock
push
or
add
dec
dec
pop
push
aam
add
mov
xchg
pop
dec
mov
sub
mov
insl
popa
pushf
fidivl
push
sub
arpl
cmp
popa
mov
mov
push
cmp
jmp
fmull
mov
push
pop
insl
mov
dec
jecxz
mov
xchg
jnp
dec
leave
jge
in
adcb
inc
std
lahf
xor
jle
pop
sub
xchg
fstp
cmpsl
es
mov
pop
push
and
and
inc
addr16
lea
jmp
loopne
xchg
jns
ftst
sti
ret
popa
pusha
sahf
pop
js
fisubrs
push
jns
fmull
fldcw
int
cs
mov
lret
into
loop
es
jle
fistpl
push
push
xlat
sbb
loop
loopne
pop
pop
in
inc
push
aad
or
jle
fisubrl
in
imul
fisubrs
or
xor
push
rcrl
js
and
sub
je
inc
shlb
stos
sbb
pop
lods
out
sarb
mov
call
dec
dec
adc
jb
repnz
inc
in
xor
mov
sub
xchg
in
cmp
xor
pop
in
push
or
rorb
test
adc
adc
imul
fisubrs
lods
enter
bndldx
dec
movsl
pop
imul
add
add
sti
out
in
push
cwtl
mov
inc
sti
jne
movntq
fbld
jl
icebp
imul
adc
out
and
add
jl
or
cmpsl
xchg
dec
xor
ss
xchg
dec
jnp
pop
rclb
inc
pop
xor
inc
imul
cmp
ret
push
mov
lahf
pop
add
adc
xchg
les
pop
aam
sbbl
gs
xor
imul
mov
mov
addr16
ljmp
push
nop
movsb
aam
sbb
add
lret
xor
stos
and
shrb
add
mov
sub
push
cltd
xor
test
add
push
test
fwait
orb
dec
pushw
dec
loope
idivb
popf
push
jns
decl
xchg
adc
xor
repz
or
rcrl
adc
jmp
push
jne
fs
daa
out
push
scas
gs
sahf
mov
popa
lods
std
xchg
imul
test
jp
not
inc
les
push
setb
jo
aaa
cmp
in
test
sub
jbe
pusha
mov
scas
leave
divb
xchg
repnz
loope
lret
jbe
movl
adc
outsl
pop
pop
fs
repnz
push
push
sbb
ss
cmp
arpl
test
cmpsl
aaa
ffree
inc
icebp
fiadds
cmp
outsb
pop
fiadds
pop
mov
mov
mov
mov
mov
push
inc
int3
aaa
lcall
add
mov
cmpsb
ja
clc
inc
ret
inc
pop
pusha
sub
sarb
ds
cmp
lock
imul
orl
adc
scas
xlat
push
stc
mov
dec
imul
xchg
adc
and
push
jbe
adc
cmpsl
dec
insb
rorl
add
lahf
fs
stc
jge
sub
cli
jns
js
call
xchg
pop
push
dec
ret
jp
inc
jnp
xlat
mov
mov
sarb
jmp
add
rolb
adc
aam
mov
xor
mov
hlt
in
pop
outsb
test
jg
test
pop
pop
and
imul
or
lods
or
xor
fwait
cld
pop
pop
pop
aad
shrl
loopne
fildll
mov
inc
sarb
pop
mov
movsl
fadds
es
cmpsb
jns
mov
xor
dec
ret
mov
or
into
inc
out
mov
in
fdivs
std
sbb
and
fnsave
mov
int3
lds
add
mov
mov
leave
sbb
xchg
sub
je
das
mov
pusha
pushf
xchg
push
rcrl
insb
mov
movsl
lock
lahf
push
cmp
inc
xor
jno
clc
ja
xchg
lds
js
jae
dec
push
jne
je
leave
ds
add
js
jp,pn
sub
scas
pop
jl
in
shlb
jns
pop
nop
mov
in
jecxz
outsb
xchg
repz
add
nop
call
ret
pushf
cmp
insb
out
outsl
jle
popa
loope
mov
pop
mov
mov
aaa
ljmpw
jecxz
sbb
cmp
jno
xchg
jmp
ficoml
or
stos
out
inc
sub
xor
fwait
mov
xor
inc
lds
xchg
inc
xor
dec
mov
ss
imul
hlt
xor
or
mov
fstpt
lret
addr16
push
das
lds
cli
notb
lcall
jae
push
or
cwtl
push
outsb
mov
stc
fwait
iret
or
adc
push
test
and
cmp
xor
data16
jl
clc
sub
inc
in
test
out
and
out
outsb
add
sub
jno
push
xchg
jle
aam
arpl
addb
pop
movsb
push
outsl
decl
inc
loope
faddl
cli
push
lea
rorb
fiaddl
inc
addr16
roll
rcr
into
out
pop
push
mov
lahf
cmp
arpl
sub
xor
gs
jne
sub
mov
xor
insb
outsb
pop
sub
ret
mov
data16
mov
test
mov
stos
inc
repz
ja
dec
les
mov
and
mov
cmp
sbb
jge
mov
dec
and
leave
sub
sbb
out
mov
dec
fwait
push
sarl
inc
push
cmp
cmp
adc
inc
cmp
addr16
addl
sbb
and
jbe
test
clc
hlt
jae
cli
daa
or
push
pop
cld
sti
inc
xchg
xchg
nop
add
cs
sbb
jbe
pushf
stc
mov
addb
mov
or
pusha
pusha
fcompl
nop
pop
pop
fstpl
inc
int
ficompl
pop
arpl
cmc
adc
jg
addr16
mov
push
or
sbb
jmp
sbb
push
sub
aaa
pop
ja
sarb
jmp
sbb
nop
insl
adc
lahf
test
cmp
mov
mov
inc
aas
scas
push
int3
lret
inc
mov
mov
cli
mov
xor
inc
xor
mov
sbb
cmpl
adc
adc
repz
movsb
sbb
hlt
adc
lods
icebp
loopne
pop
imulb
andl
push
jl
jmp
loope
add
xor
jge
lahf
inc
subl
jns
loopne
pop
jnp
push
jne
pop
stc
dec
outsb
xchg
mov
or
or
pop
mov
lahf
dec
mov
mov
jle
push
mov
mov
dec
inc
in
fstpl
pop
push
mov
fsubr
jp
mov
jo
ss
push
gs
out
in
cmp
mov
data16
fistpl
mov
push
push
dec
cmpsl
cmp
insb
jmp
cmpsl
cmpsb
sbb
sub
cmp
push
mov
mov
leave
incb
sbb
lret
pop
sbb
scas
mov
mov
or
inc
inc
vpsrad
ficoms
inc
outsl
inc
cmp
dec
sahf
test
xchg
jl
imul
adc
ss
mov
pop
fwait
sbb
fdiv
nop
sbb
dec
dec
insb
sbb
and
cmp
jmp
add
andb
pop
jge
sub
daa
cmpsl
int
addb
nop
dec
hlt
adc
fmul
ret
and
and
push
lea
xchg
out
and
dec
jae
add
jle
roll
sar
fistpl
pop
push
push
mov
mov
push
pop
inc
fcmovu
daa
out
dec
into
out
pop
and
jmp
iret
sbb
sbb
adc
outsb
lea
jge
sub
scas
inc
sar
in
out
lret
in
sub
aaa
mov
jmp
arpl
xor
push
mov
sub
mov
adc
imul
or
mov
fs
or
shll
xchg
popf
sbb
mov
cmc
xchg
dec
clc
jnp
mov
scas
adc
add
lods
sub
sub
or
pop
dec
cltd
lret
mov
adc
call
arpl
jns
std
lret
push
xchg
jbe
test
clc
hlt
jae
dec
out
andb
out
outsb
jae
or
mov
fimuls
xlat
xchg
movsb
test
jae
or
into
int
push
jg
pop
loop
xchg
lock
inc
xchg
sub
mov
mov
fisttpll
rcll
lock
add
jg
das
mov
rcll
sbb
push
sbb
ljmp
out
in
je
fistps
loope
lock
test
cmp
mov
push
pop
arpl
mov
push
mov
in
mov
push
push
int3
xor
sbb
xchg
movl
xor
mov
das
dec
jne
and
adc
lret
and
push
mov
addl
mov
xchg
xchg
push
xchg
sbb
jnp
sub
xchg
jb
sbb
mov
push
push
pop
xchg
mov
inc
xchg
adc
enter
mov
and
std
jl
ja
xchg
xchg
dec
test
jb
mov
stc
add
out
outsb
pop
add
out
sarb
testl
stos
inc
add
cmc
mov
fsts
out
outsb
mov
adc
or
or
xor
xchg
or
mov
in
add
sbb
and
xor
popf
sbb
insb
push
frstor
lret
fldcw
out
jmp
decl
out
jp
insb
jmp
es
sbb
jmp
xchg
js
mov
xor
insl
icebp
shll
mov
cs
int
adc
daa
inc
lret
mov
fildll
sbb
mov
inc
int3
lds
cmp
stc
and
push
test
dec
and
pop
loop
xor
sub
lret
lcall
cmp
outsl
inc
adc
mov
mov
scas
imul
daa
aas
subb
lret
aaa
xchg
and
lahf
push
and
div
ret
pop
or
test
iret
out
pushf
stc
lahf
hlt
je
jb
dec
pop
push
add
jle
push
inc
pusha
fcompl
mov
rorb
mov
roll
add
cmp
pusha
and
imul
fidivrs
sbb
or
out
push
pop
cmpsb
mov
cmp
je
cmpsb
xor
inc
scas
leave
cmp
pushw
xchg
and
cmp
popf
push
rol
outsl
ss
cwtl
subb
gs
xor
cmp
inc
push
mulb
inc
lds
dec
pop
push
and
mov
into
mov
adc
outsb
dec
cltd
movsb
or
xchg
adc
vpshaq
movsb
leave
adc
int
lock
rorl
mov
and
setg
mov
in
pop
jge
sub
call
stc
js
jae
data16
jne
je
inc
ds
add
repz
sahf
jge
mov
jbe
stos
sub
dec
popf
push
push
test
jle
push
adc
rorl
mov
mov
or
icebp
test
jg
sub
imul
xlat
lahf
insb
call
push
cmp
xchg
or
push
or
xor
mov
mov
scas
xchg
aaa
mov
adc
mov
ss
mov
sbb
add
mov
lods
enter
jl
std
cmp
mov
popa
xlat
pop
gs
jp
add
pop
hlt
int3
and
int
popa
cli
mov
dec
sub
lds
pushf
mov
mov
movsb
jno
sahf
push
stc
pop
daa
cmpsl
icebp
jl
xor
xchg
adc
pop
rcrb
lahf
pop
leave
xchg
int3
cmp
sub
out
mov
ja
fistps
mov
add
mov
jmp
scas
mov
addl
mov
sbbb
or
ja
cli
pushf
stc
mov
movsb
push
test
jecxz
jg
pop
dec
dec
pop
rcr
pop
xchg
stc
jecxz
std
mov
in
ja
fstps
pop
pop
in
inc
push
aad
jb
mov
mov
pushf
mov
sahf
pop
xor
xor
pop
ficoml
add
xchg
or
lock
jmp
fwait
sub
insl
jae
test
es
data16
movsb
cwtl
mov
xor
sbb
cmp
bound
cmc
les
popf
push
lcall
out
add
inc
dec
test
out
into
dec
add
fbstp
xchg
cmp
push
pusha
lcall
sarb
and
cli
xchg
sub
divb
cmpsb
jg
imul
sub
xor
aad
jge
mov
push
arpl
mov
adc
cmc
xor
mov
loope
movsb
jg
clc
ja
push
push
movsb
push
dec
jne
lock
jle
pop
lcall
pop
fisttpll
ficompl
negl
pop
fcmovu
xor
into
out
pop
stos
sbb
jmp
or
jge
jl
lods
lods
ret
out
in
adc
into
stos
std
mov
ljmp
movsl
xor
pop
push
lods
jmp
mov
inc
pop
fimuls
lock
push
mov
mov
nop
jecxz
les
outsl
or
scas
inc
shrb
mov
mov
dec
push
shl
pop
enter
xor
in
les
test
cltd
cwtl
incb
xor
sbb
or
mov
jo
jmp
xor
pop
mov
cmp
inc
xor
in
cs
jp
negb
movsl
ja
das
adc
arpl
movsb
fmul
addr16
and
lock
push
mov
mov
or
or
clc
mov
pop
out
jb
test
adc
or
pop
fstpl
sarb
fisubl
popa
or
push
rcll
ret
orl
fildll
push
cmpsb
dec
mov
loopnew
xor
inc
sbb
scas
aad
fs
mov
out
cmp
mov
jmp
and
out
mov
xor
pop
scas
das
jl
inc
repnz
adc
dec
xchg
mov
xor
dec
mov
inc
lds
pop
fdivl
test
fwait
sbb
pop
xchg
dec
xor
push
cmp
jl
pop
jg
inc
inc
adc
sbb
adc
ret
jb
cwtl
sub
movsl
and
ret
mov
inc
arpl
pusha
sbb
test
jae
jb
gs
stc
arpl
out
outsb
pop
pop
jns
decl
lods
jne
xchg
movsl
jmp
loopne
scas
into
cmc
hlt
test
inc
ret
scas
mov
fcompl
inc
mov
jns
ficompl
jecxz
xchg
push
push
and
push
push
iret
mov
das
popa
loope
fsubl
jg
cmp
sahf
mov
push
shrl
push
sbb
into
sub
scas
stc
cmp
je
lret
pop
pop
in
add
movsl
lret
mov
loop
mov
int
sti
jno
xchg
mov
gs
mov
jne
pop
mov
push
or
xlat
fcoml
xchg
jns
pop
pop
lret
xchg
outsb
pop
xor
js
jecxz
and
and
jb
sbb
cmpsl
repz
cmp
scas
inc
adc
jnp
lret
ljmp
ds
cmpsb
jbe
int3
cmpsb
shld
aaa
and
and
lock
cld
dec
jb
add
cwtl
sub
xor
jne
or
into
cmc
hlt
test
jg
popf
out
popa
loope
les
pop
ficoms
and
mov
push
jecxz
mov
imul
je
cmp
pop
in
imul
adc
push
ljmp
mov
push
lods
aam
pop
fildll
cmp
je
lret
xlat
pop
in
add
mov
xor
iret
cmpsb
ds
xor
ficoms
mov
dec
int
add
ja
lret
addr16
arpl
out
and
or
pop
roll
dec
sahf
sbb
xchg
push
loop
js
xchg
adc
adc
cwtl
icebp
aas
mov
jbe
dec
cmp
xor
xchg
sub
dec
outsb
add
and
test
dec
push
or
lret
lods
ret
and
jbe
sahf
sub
mov
mov
xchg
nop
xor
insl
jnp
shl
push
pop
xchg
jge
lods
dec
cmpsb
hlt
addb
pop
icebp
mov
dec
fucomp
popa
loope
add
inc
mov
mov
jecxz
add
pop
movl
std
iret
dec
sbb
bound
aad
js
push
gs
fcoms
mov
push
jmp
adc
pop
out
jp
jno
test
hlt
mov
addr16
ret
xor
inc
mov
and
das
scas
cli
stc
or
cmp
aaa
test
int
adc
mov
or
sbb
das
mov
dec
lret
dec
addr16
inc
cwtl
pop
test
dec
leave
dec
jge
xor
gs
jg
sbb
ds
aam
sbb
adc
es
inc
ret
adc
outsl
inc
adc
into
lret
push
mov
jnp
and
loopne
daa
cli
jns
nop
dec
adc
sbb
addb
outsb
sbb
mov
xor
xor
in
or
jo
cmc
push
mov
insl
loop
es
aas
push
scas
mov
jecxz
test
pop
jae
jae
aas
mov
aad
xor
fcmovnu
and
imul
push
sbb
push
adc
push
aad
sub
push
pop
inc
push
add
mov
lods
sti
jmp
push
loop
push
jge
dec
fistps
ds
roll
outsb
fidivrl
cmpsl
movl
pushw
inc
inc
or
push
mov
or
lret
pop
add
into
push
neg
fildl
mov
lods
mov
out
mov
clc
insb
lds
sbb
inc
sbb
xchg
push
jb
adcl
cmp
jno
addb
jge
in
pusha
pop
imul
cmp
xchg
shrb
pop
sub
sti
idivb
subl
scas
cs
and
xchg
pushf
test
addb
int
loopne
call
or
or
mov
add
or
xchg
loope
push
test
aam
scas
repz
test
into
repnz
insb
sbb
jmp
push
lret
in
cmp
ljmpw
push
xor
pop
cli
pushl
pop
fildll
std
jmp
lods
jmp
jno
pop
in
fiaddl
leave
push
add
dec
dec
lods
aam
push
scas
mov
outsb
cmp
outsb
cmp
mov
xchg
arpl
dec
les
fnsave
inc
xor
outsl
mov
mov
dec
sahf
test
xchg
jl
ss
dec
jge
add
fcomip
mov
sbb
mov
enter
jno
pop
sub
es
jnp
push
add
stos
bound
fwait
and
divl
mov
mov
stc
int3
pop
out
outsb
pop
adc
mov
mov
cmp
bound
mov
mov
movsb
push
testb
jg
lcall
sti
mov
push
xlat
cmc
push
xor
mov
pop
scas
inc
push
aad
mov
lock
pop
push
popf
loope
rcr
out
insl
push
xor
sti
pop
sub
gs
roll
into
inc
sub
cmp
sbb
das
xlat
mov
add
ss
push
movsb
xor
shll
inc
cli
into
dec
out
stos
out
jo
adc
ret
sub
jns
mov
and
popf
sbb
jg
pop
mov
xchg
call
mov
sbb
jecxz
lods
lds
xchg
or
test
out
jb
fldcw
retw
xor
cld
loope
lret
and
jbe
test
jae
cli
jbe
xchg
ret
enter
and
and
push
stos
lods
sub
pushl
pusha
popa
push
test
outsb
xchg
adc
ds
sti
iret
mov
push
xlat
arpl
inc
mov
ljmp
pop
stos
sbb
jmp
push
fs
lds
fstps
push
scas
test
add
js
ljmp
aaa
and
sub
ss
adc
popa
add
push
cmp
scas
and
dec
leave
cmp
sahf
repnz
sbb
cs
mov
adc
popf
sbb
jg
push
and
sbb
adc
imul
xor
outsb
lret
dec
cwtl
pop
inc
push
cmp
sbb
jne
xchg
and
push
and
pop
fs
sub
jnp
cmp
jae
clc
ja
es
divb
rorb
ret
push
push
lea
js
jnp
mov
clc
ja
shll
or
test
xlat
xchg
xor
pusha
lret
sbb
ficomps
aaa
dec
push
xlat
push
popa
xor
mov
cmp
frstor
in
or
ret
imul
push
movsl
add
daa
or
adc
insb
jmp
daa
mov
cmp
adc
mov
rorb
mov
add
out
data16
ljmp
movl
xor
ficoms
mov
mov
or
adc
mov
dec
inc
sbb
xchg
push
sti
or
mov
sbb
pop
stos
test
shl
aas
pushf
fwait
bound
mov
mov
sbb
adc
lcall
scas
push
dec
insb
shl
add
call
in
pop
jge
fwait
outsl
divl
add
or
mov
lds
scas
pop
sti
addl
outsl
mov
mov
jns
mov
and
cs
jno
lret
fldt
adc
pop
mov
sarb
fnstsw
dec
imul
test
je
jle
cs
push
push
fwait
dec
push
bound
inc
add
out
adc
test
push
mov
cmp
jge
adcl
lock
jmp
mov
data16
pop
or
imul
jecxz
sbb
imul
push
fs
push
movsl
idivl
xchg
sub
jl
mov
in
ret
call
mov
or
aas
mov
dec
pushf
sbb
addr16
sbb
inc
fbld
les
ret
adc
pushf
xchg
arpl
sub
loop
fwait
push
rcll
dec
lcall
sub
les
add
iret
xchg
in
stos
sub
dec
sbb
inc
neg
outsb
leave
insl
sub
jecxz
gs
cld
jo
or
es
jp
imulb
push
or
test
stc
jb
and
add
outsb
loop
pop
nop
or
fildl
std
push
mov
mov
pop
mov
inc
movsb
and
fnstenv
out
xor
mov
data16
push
divps
aad
shrl
loopne
add
in
jecxz
jmp
pop
mov
push
test
fs
or
gs
pusha
add
mov
insb
mov
outsb
aam
mov
mov
xor
inc
xlat
xchg
shrb
scas
push
adc
in
test
dec
sahf
sbb
ret
dec
xor
xor
ret
jg
push
jp
add
mov
jecxz
and
lods
sub
leave
cwtl
es
jb
ret
mov
mov
mov
lock
lods
loop
fwait
and
jbe
addb
nop
dec
mov
fmul
ret
and
or
push
sti
ja
mov
sub
sub
sub
sbb
adc
popa
loope
jle
jl
push
es
test
pop
mov
push
mov
iret
lcall
jecxz
jo
adc
dec
aad
in
mov
or
ljmpw
rcll
mov
mov
outsl
xchg
push
in
mov
stc
jbe
call
mov
sahf
stc
popa
lock
sbb
push
mov
cmp
enter
adc
in
or
mov
out
pop
mov
or
mov
mov
cli
add
sbb
cmp
and
sbb
scas
cmp
and
adc
rcrl
es
rol
inc
xchg
adc
and
push
out
jmp
sti
cmpsl
cmpsb
xor
pop
xlat
add
pop
or
mov
mov
add
push
cmc
dec
testb
ja
mov
out
mov
fdivp
jne
test
loop
push
or
inc
pop
fldl
add
pop
xchg
ret
jecxz
sarl
add
icebp
push
mov
dec
cmp
popl
lods
inc
cs
out
jge
push
iret
dec
or
sti
dec
sarb
outsl
test
mov
addl
mov
cltd
enter
ret
dec
pop
dec
lret
mov
mov
adc
push
push
popf
xor
pop
aas
mov
and
xchg
cmp
into
movb
cmpsb
hlt
ret
adc
inc
xchg
popf
test
jmp
lods
mov
inc
sbb
or
fsubs
dec
xchg
mov
jno
fdivp
lret
outsl
sub
daa
cmpsl
int
lods
test
jmp
cmc
je
outsl
jbe
xchg
out
dec
mov
jnp
data16
testl
subl
sub
mov
faddl
mov
pop
inc
inc
mov
pusha
enter
and
xlat
in
push
mov
lahf
pop
lods
or
ljmp
fsts
push
xor
xchg
iret
in
jne
cmpsb
push
inc
pop
cmp
jmp
push
cmpsb
dec
addr16
popf
ljmp
add
xchg
faddp
inc
push
cmp
add
cmpb
mov
cmp
inc
push
arpl
and
ljmp
sbb
cmpb
lcall
adc
lsl
sbb
sub
lret
stos
sub
sar
outsl
push
mov
push
inc
mov
dec
scas
xor
insb
ds
add
hlt
sub
fxch
and
dec
addl
mov
clc
ja
push
push
mov
push
dec
xor
add
aaa
xchg
adc
cld
inc
pop
fisttpll
ds
addl
cmp
mov
loop
ss
jmp
fistpl
jp
adc
xchg
jg
sub
push
out
stc
std
adc
icebp
addr16
roll
jne
sub
push
cmpsl
out
dec
mov
cmp
cmp
scas
push
adc
aaa
inc
lods
int
adc
inc
cmpsb
lret
loopne
shll
xor
test
jbe
push
mov
inc
push
add
dec
mov
adc
adc
fwait
in
mov
mov
sbb
and
mov
aas
out
pop
aas
bswap
jle
dec
push
push
sub
pop
lods
mov
cld
bound
jg
dec
outsb
xchg
or
mov
jnp
jmp
jbe
add
pop
jg
es
mov
add
push
xchg
add
jnp
fildll
xchg
movl
push
inc
jbe
pop
stos
dec
into
repnz
add
cmp
in
insb
call
and
sub
jnp
jne
push
iret
fbld
popa
mov
movsb
divl
mov
pop
mov
fs
xor
in
jno
ljmp
xor
popa
add
stos
into
dec
xchg
cwtl
add
es
movsl
jp
sbb
subb
pushf
sbb
mov
sbb
iret
fs
ret
adc
adc
sub
sub
shrb
daa
cmpsl
or
mov
fld
jp
dec
inc
xor
mov
jnp
jp
sub
pop
xlat
adc
cld
in
jb
jne
cmc
and
xchg
jmp
jl
push
sub
fstl
out
or
jo
mov
dec
inc
outsl
jnp
lods
sbb
mov
in
or
aas
dec
pop
pusha
inc
aam
scas
repnz
test
sbb
das
into
repnz
add
mov
testb
xlat
out
jmp
push
pop
outsb
lods
jl
pop
fbstp
shll
mov
in
xor
cmpsl
jns
mov
out
pusha
jns
cmp
cmp
dec
into
cmp
movl
jp
xor
lea
cs
ret
or
pop
dec
jecxz
push
std
popf
sbb
xchg
jmp
xchg
insb
add
lds
inc
xor
rcll
test
xor
ljmp
andb
shrd
and
pop
in
loop
cli
gs
ja
inc
in
jne
jl
repz
bnd
push
outsl
out
xchg
jo
sub
jecxz
lock
data16
jecxz
push
jne
dec
ficomps
jle
lret
cmp
fistl
fidivrs
adc
xchg
jecxz
mov
mov
mov
out
pop
sub
push
or
call
pop
test
bound
pop
out
mov
sub
lcall
push
mov
fs
cmp
pusha
push
aas
nop
jb
idivb
mov
or
mov
and
js
mov
sarb
adc
inc
sbb
cmp
fdivs
mov
mov
sbb
sti
push
loop
xchg
cmpsl
mov
mov
sbb
mov
inc
cli
xchg
test
repnz
imul
fs
jl
daa
jae
inc
pop
stc
js
scas
push
inc
mov
jno
nop
aad
jp
jbe
in
mov
mov
jmp
dec
flds
in
add
test
mov
mov
aas
xor
add
mov
pop
sub
fsubs
into
bnd
popl
mov
ljmpw
jl
scas
mov
add
loope
test
es
pushf
cmp
push
add
loop
adc
imul
ret
sub
jp
ds
std
lret
cmp
jecxz
xor
test
jne
or
xchg
sahf
sbb
mov
add
push
lret
and
sbb
lods
sub
mov
mov
inc
iret
out
shlb
cmp
xor
popa
xchg
lods
lcall
in
push
or
lock
cmp
dec
icebp
nop
or
jo
sbb
mov
es
cli
dec
movsl
mov
lods
lret
pusha
out
add
dec
fadd
loope
inc
inc
fdivrs
mov
ret
xor
rcll
push
cmpsl
test
mov
jmp
push
and
call
je
mov
mov
and
inc
push
mov
scas
ljmp
inc
rolb
es
cmp
pop
fdivp
jp
out
int3
xor
cmp
and
das
xor
mov
loop
dec
test
inc
int3
int3
jmp
dec
sbb
cmovnp
cmp
dec
fdivrl
adc
test
and
dec
dec
xchg
outsb
sub
dec
syscall
push
icebp
xchg
lds
int3
out
cmpsl
sub
cmp
stos
cli
sbb
pop
push
jecxz
fadd
pusha
std
loopne
mov
pop
push
mov
negl
insb
or
jns
int3
ja
addb
int
loopne
out
lcall
mov
xor
sub
xor
shrl
fldcw
scas
loope
pusha
xchg
aam
lret
mov
pop
out
fisubrl
push
les
sbb
sbb
sbb
dec
adc
insb
out
sub
fcmovne
cmp
outsb
push
or
jae
ss
inc
mov
das
dec
xchg
inc
ss
ret
rolb
mov
data16
jno
xchg
push
mov
mov
pop
shlb
and
jns
xchg
dec
xchg
sahf
jmp
xchg
adc
sahf
repz
xchg
lahf
ljmp
cmpsl
es
sub
inc
jne
inc
xchg
cmpsl
xlat
adc
in
aas
push
xor
jo
sti
jp
jge
cs
dec
cmpsl
ret
subb
hlt
push
mov
xlat
insl
lahf
mov
or
test
jge
mov
dec
mov
jns
clc
inc
and
cs
mov
dec
cwtl
pop
loop
xchg
xchg
or
or
fcoms
push
popa
push
cmp
push
mov
cmp
mov
mov
imul
push
popa
sub
ljmp
shrl
loopne
fildll
ja
inc
shlb
outsb
mov
cmp
arpl
inc
mov
push
ret
int3
mov
add
or
dec
insl
mov
movb
push
lahf
mov
test
fwait
sbb
nop
fcompl
fstps
rclb
mov
sbb
sub
dec
cwtl
jo
fistl
fisttpll
mov
call
dec
push
out
pop
clc
ja
fists
addr16
fdivr
push
xchg
dec
cwtl
pop
js
dec
outsb
xchg
cmp
jae
out
lea
dec
cli
mov
mov
divb
lahf
je
out
pop
sbb
sub
dec
mov
xlat
push
es
test
mov
push
out
in
es
cmp
push
call
dec
arpl
fcoml
fmuls
loopne
inc
dec
sbb
ror
outsb
cli
ds
lcall
sbb
mov
xor
mov
cmp
xor
inc
mov
lea
arpl
in
pop
cs
mov
pop
shlb
and
jns
xchg
dec
xchg
sahf
jmp
xchg
adc
sahf
push
mov
xchg
lahf
ljmp
cmpsl
es
sub
in
jns
and
ret
pusha
stos
cmp
mov
jg
enter
gs
fdivs
mov
pop
arpl
gs
push
cmpsb
adcl
sub
mov
outsb
and
pusha
pop
dec
dec
and
push
test
jle
or
xchg
sbb
fcomps
shl
xchg
rcll
push
pop
repz
bnd
arpl
fistl
popa
sub
adc
push
popf
push
out
xchg
test
inc
mulb
and
jae
enter
aaa
push
jne
imul
mov
inc
shr
jmp
mov
or
dec
mov
mov
jecxz
pop
ss
xor
test
or
or
jmp
es
lcall
inc
pop
ficompl
mov
xor
mov
mov
es
inc
mov
in
add
mov
aad
and
out
pop
mov
mov
pop
aas
adc
ja
push
jne
and
jbe
dec
mov
jl
sarl
or
out
add
outsb
stos
fmulp
sbb
adc
cmpsl
push
xlat
add
popa
repz
push
or
test
fdivs
bnd
out
shrb
dec
pop
xchg
pop
scas
mov
das
add
mov
and
jae
push
test
call
sub
aas
lret
mov
mov
push
inc
int3
aaa
add
into
dec
out
int3
aaa
mov
cmpsb
ja
lea
pusha
sub
sarb
int
inc
push
push
orb
cwtl
pusha
and
dec
and
xchg
adc
ret
ds
fsubp
adc
int3
sub
fildl
xorl
mov
pop
seto
std
push
cmp
pop
sub
lods
sbb
sub
push
mov
mov
cmc
test
fisttpl
mov
jno
pop
jl
out
mov
push
jge
mov
push
dec
sbb
test
popa
loope
lock
or
rorb
push
jae
rcrl
xchg
test
fdivs
or
dec
sbb
mov
clc
push
jecxz
aad
mov
adc
push
lods
scas
ljmp
stos
out
jmp
xor
stos
sbb
inc
xor
dec
mov
inc
lret
cmp
xor
mov
xor
mov
push
jbe
sbb
shll
ss
push
cltd
jbe
mov
inc
xor
lods
inc
ror
mov
out
inc
pushf
adc
int3
sub
lea
jb
sbb
and
inc
adc
jnp
dec
imul
popa
pusha
sub
std
sub
jb
jne
inc
push
outsl
out
or
push
dec
shlb
dec
mov
jl
jno
or
and
test
adc
adc
jne
clc
xchg
ja
mov
push
pop
inc
jecxz
bnd
push
push
in
push
in
cmp
or
sbb
jns,pn
loopne
js
push
inc
shl
cmpsb
jae
mov
das
push
rclb
data16
in
xor
cmp
movsl
mul
cmp
cvtps2pi
js
insl
sub
dec
mov
add
arpl
add
fildl
clc
mov
pop
lret
subl
rcr
pop
cli
adc
pop
fsubrl
enter
jmp
and
cs
xor
int
dec
dec
std
testb
scas
pop
aad
push
lret
lods
xchg
bound
adc
fxch
pusha
cld
testl
cmc
cmp
sub
sub
imulb
sub
sahf
adc
or
scas
pop
leave
fdivrs
xchg
aas
repz
mov
cmp
adcb
mov
xor
ror
mov
inc
hlt
jge
mov
lods
mov
sbb
jle
jmp
outsl
jg
sub
push
pop
les
cwtl
dec
fistpll
adc
test
scas
fwait
mov
inc
jne
inc
sbb
push
cs
pop
mov
and
fidivs
sbb
inc
xchg
in
sbb
add
mov
or
jecxz
incl
js
xchg
fwait
inc
adc
test
rcrb
cli
sbb
out
repz
in
lock
push
imul
shll
push
jp
dec
insl
push
add
inc
repnz
js
out
push
ss
mov
lods
imul
out
or
sub
push
adc
out
push
fisttpll
inc
bound
mov
int3
ja
jmp
and
hlt
adc
arpl
push
and
inc
js
and
or
cmp
fidivl
and
fcmovnbe
nop
popa
aad
pop
arpl
rolb
pop
call
add
mov
das
sub
sahf
sub
push
gs
aam
addr16
cmp
inc
and
mov
inc
shrb
repnz
outsl
data16
je
cltd
mov
adc
sbb
or
push
adc
aas
mov
push
lods
sbb
sbb
pusha
inc
push
or
and
and
idivl
adc
sti
sub
daa
cmpsl
push
adc
add
xchg
outsb
insl
cmp
pop
lahf
aaa
cmp
jge
lods
movsl
and
hlt
or
sub
loopne
jbe
jns
xchg
push
push
xchg
and
mov
dec
data16
jnp
mov
scas
dec
dec
stos
jp
scas
pop
xchg
ja
popf
cli
cld
stc
xor
fsts
test
dec
sbb
loop
sbb
imul
mov
xor
cwtl
subl
test
into
repnz
or
aaa
lret
pop
bound
push
fisubrl
inc
xor
jecxz
lods
clc
xor
push
adc
fiadds
fsubrp
repnz
jg
insb
push
call
data16
mov
push
out
outsl
jb
cltd
mov
jle
cmp
adc
lret
adc
xchg
ret
inc
loopne
ds
hlt
pop
pop
roll
mov
push
jp
loope
rorb
inc
lret
xor
mov
push
mov
std
insl
ror
pop
fwait
popf
test
adc
insl
adc
mov
mov
sub
cmp
xchg
xchg
test
data16
jmp
mov
cltd
std
jl
mov
sbb
and
stos
or
xchg
nop
cmc
ja
pop
push
int3
xlat
and
dec
cli
push
insl
and
cmpsb
je
cmpsb
jne
push
enter
loop
into
pusha
sarl
ds
or
mov
pop
pop
insl
inc
push
push
fs
push
xchg
loope
test
sbb
xlat
in
call
pop
jmp
sub
in
xchg
pop
cmpsb
xor
push
and
cmp
je
test
out
out
ret
and
xor
gs
pusha
sbb
inc
in
push
cmp
dec
int
enter
lods
mov
mov
mov
out
mov
insb
pushf
sbb
push
jle
cli
fcomip
mov
cmp
sbb
push
jecxz
cltd
and
cmp
stos
sub
or
push
cmp
cmp
movsb
or
ret
sub
push
mov
mov
sarl
sub
cmpsb
popa
in
clc
fbld
pop
test
pop
out
dec
movsl
pop
je
aaa
testl
sti
imull
push
lret
jbe
sarl
cmpsl
adc
int
pop
aad
inc
shlb
faddl
pop
rorl
inc
call
mov
loopne
testb
aad
fsubl
adc
push
push
sbb
xlat
nop
notb
lret
jmp
mov
push
dec
fbld
mov
and
lea
addr16
sub
sub
and
or
shll
mov
dec
enter
ss
std
sbb
xor
mov
test
test
xchg
dec
je
leave
rcrl
adc
mov
mov
pushf
sbb
jl
daa
xchg
popf
fimull
sbb
in
jle
cmpsb
and
rcl
mov
and
std
jl
push
cmpsl
jbe
cs
dec
movsb
jl
dec
jne
test
clc
mov
adc
jne
inc
jmp
push
sbbb
and
and
sbb
sbb
dec
xor
test
sbb
mov
inc
cwtl
rcll
or
popa
xor
pop
aam
mov
push
pop
out
das
into
bnd
addr16
pop
pop
xchg
push
pop
ret
popf
pop
lea
cmp
mov
push
cmp
jg
movsb
and
fs
pop
pop
cmp
pop
fidivrs
mov
or
lods
divl
mov
pop
push
xor
imul
roll
sbb
loopne
mov
jb
movsb
adc
jb
cwtl
xor
mov
mov
sbb
and
cmpsl
es
cmp
aam
lds
mov
out
idivb
sti
jp
cwtl
test
stos
loop
call
cmpsb
jne
adc
clc
dec
cs
adc
jne
inc
jmp
push
orb
and
mov
sub
cmp
rcl
add
dec
sbb
loope
xchg
pop
fisttpll
bound
aam
rcr
call
lret
loop
lods
ficoms
in
cmp
out
pop
pop
addr16
lods
stos
mov
add
mov
ljmp
push
ret
ret
mov
or
mov
outsl
into
pop
mov
mov
add
cltd
arpl
int3
lea
xchg
ficomps
inc
je
and
adc
scas
gs
mov
addb
ret
inc
xchg
popf
inc
stos
stos
mov
ds
push
and
lods
sbb
lcall
jb
and
iret
push
add
add
sti
cmp
sub
out
mov
ja
adc
stc
js
je
pop
cmpsb
and
ljmp
fimull
jge
xchg
xchg
jns
pop
xor
rolb
add
test
arpl
dec
lock
pop
mov
rol
out
fimull
push
mov
jg
pop
pop
in
shll
pusha
or
xor
sbb
mov
inc
arpl
sti
out
xchg
fs
rcr
es
test
ficoms
mov
loopne
sub
mov
adc
xor
dec
inc
mov
dec
into
dec
int
and
movl
xor
mov
inc
or
fcmovbe
and
inc
int3
dec
mov
int
add
add
adc
ljmp
ljmp
clc
daa
cmpsl
push
testb
dec
iret
ljmp
push
xchg
cmp
sti
loop
mov
cmp
xor
lret
jge
dec
inc
jb
mov
fcmovne
aas
and
or
add
jmp
pop
out
cmp
data16
cs
xor
fwait
into
loop
xchg
pusha
lret
push
jmp
ficomps
div
stos
pop
jecxz
loope
pop
arpl
mov
in
add
mov
push
mov
xchg
dec
fs
fadds
xchg
int
sti
dec
or
and
or
add
ja
insl
in
pop
out
out
out
mov
bound
adcb
por
ret
mov
inc
mov
faddp
push
loope
mov
fstps
std
xchg
mov
push
js
xchg
int
cwtl
fisttpll
lahf
insl
repnz
adc
ret
ds
and
lods
repnz
cmpsl
es
pop
inc
inc
mov
cli
xchg
mov
add
repz
cld
jnp
loopne
sbb
data16
out
stos
lods
cmpsb
stos
cmp
repz
cmc
je
cmc
mov
cmovo
add
roll
or
xchg
jb
hlt
add
lock
mov
mov
bsf
push
pop
pop
mov
stc
mov
add
test
shlb
in
loopne
pusha
in
shll
pop
cwtl
push
xlat
fstpl
mov
ret
xchg
dec
mov
jno
sub
in
cmp
mov
aas
stc
call
mov
mov
add
stos
into
dec
out
test
mov
out
push
xchg
jp
inc
ret
out
push
pop
and
pop
andb
mov
sbb
sti
mov
pop
scas
or
inc
daa
adc
mov
and
popf
repnz
xchg
jae
pop
or
movsb
sbb
rolb
leave
jl
into
xor
xor
addr16
sti
out
pop
std
jl
les
std
test
inc
cmc
add
iret
out
outsb
mov
adc
add
mov
roll
data16
add
mov
pop
adc
push
cmp
jle
jns
cli
jns
cwtl
jmp
test
daa
cmpsl
mov
lcall
or
out
aam
in
insb
out
aaa
loopne
fbld
adc
repz
pop
mov
out
rcrl
mov
xchg
fidivrs
cmp
mov
dec
les
test
xsave
adc
xor
mov
push
or
xlat
mov
push
sbb
mov
add
sbb
imul
push
mov
mov
dec
into
or
into
sbb
mov
cmp
pop
push
xchg
out
orl
lret
fs
lds
stos
mov
sbb
neg
push
push
int
test
sub
test
jnp
mov
pop
jns
in
cli
test
repz
mov
sahf
push
xor
xor
stos
pop
fidivl
mov
sub
pop
xor
lods
loop
push
dec
jmp
cltd
sbb
leave
pop
out
fidivl
test
arpl
inc
cld
cld
adc
ja
sahf
cld
jns
imul
xchg
fsubrl
and
adc
sbb
pop
movsl
gs
scas
mov
in
push
cs
dec
pop
cmp
dec
stos
call
push
sub
xor
icebp
into
or
sub
loope
push
rcll
sbb
mov
popa
jl
or
inc
jg
mov
aas
and
jnp
xchg
scas
xchg
int
fwait
sbb
aas
sbb
or
xor
push
and
fadds
in
pop
mov
add
je
jo
arpl
jmp
xlat
sub
daa
in
aam
xchg
sub
push
pop
jp
fisubl
hlt
adc
dec
pop
mov
test
dec
clc
shrb
mov
mov
adc
testb
mov
xchg
leave
sbb
aam
mov
lea
cmp
ret
mov
inc
imul
cmp
mov
mov
fwait
lea
lret
xchg
dec
add
mov
movsb
addl
cmp
fldt
jae
cld
inc
pop
out
pusha
ret
xor
in
lret
or
xchg
ficomps
ss
adc
push
lcall
xchg
jmp
pop
mov
out
or
imul
nop
cmc
in
jge
xchg
mov
cld
or
orl
jae
sub
adc
lcall
fmulp
stos
icebp
add
test
mov
inc
sub
rorl
dec
cmp
movsb
pop
sbb
loop
mov
or
js
jecxz
and
rcll
lea
or
push
outsl
cli
sbb
outsb
push
jmp
out
cli
jns
sub
leave
divb
outsb
xchg
popa
mov
pop
ret
les
xchg
daa
popa
jae
cmpb
inc
cmp
jg
xlat
outsb
data16
dec
dec
push
pushf
pop
mov
out
adc
push
out
add
adc
js
mov
fs
stos
daa
and
in
cmp
sbb
cmpsl
mov
xchg
adc
fbstp
cmp
dec
mov
imul
xchg
lods
ljmp
test
jmp
aaa
into
or
fcom
sbbw
jp
xor
inc
and
ret
inc
jg
xor
xchg
and
pop
into
sbb
lea
lret
in
shlb
adc
fnstenv
shrb
mov
pop
ficoml
roll
fisubrs
sub
sti
into
jb
dec
int3
outsl
add
int3
xchg
out
mov
or
ja
jbe
out
pop
or
pushf
jne
dec
ficomps
sbb
pusha
stos
or
inc
stc
inc
mov
sub
shrb
add
jle
adc
push
fdivrl
shll
push
bound
sub
rcll
out
cmp
imulb
aaa
outsb
in
insl
add
imul
dec
sbb
shrl
aaa
push
stos
mov
add
xchg
scas
loope
dec
movsl
mov
popa
sbb
call
push
xchg
add
lret
dec
into
ljmp
cmpl
inc
inc
xchg
adc
aas
jns
sub
and
test
lea
fcoml
adc
push
sar
dec
fs
mov
jo
outsl
sub
loop
sbb
daa
cmpsl
jbe
imul
stos
and
adc
add
js
or
add
mov
xchg
mov
xor
pop
or
mov
outsl
out
jle
sbb
lret
dec
mov
fcomps
mov
mov
mov
icebp
call
add
mov
or
rolb
dec
xchg
int
in
dec
jle
stos
add
pop
jno
xor
aad
pop
daa
mov
adc
fs
mov
mov
mov
cli
ss
xchg
mov
mov
mov
cmp
call
loop
mov
mov
pop
fisubl
dec
fwait
cmpb
mov
jbe
xor
ficomps
mov
xor
daa
stos
xchg
and
adc
test
push
es
ret
in
mov
adc
mov
add
cmp
push
sahf
pusha
adc
add
sub
dec
cmpsb
pop
jns
rcrb
pop
push
add
sti
mov
imulb
daa
push
jns
hlt
xor
and
sub
loopne
xchg
xchg
adc
mov
push
mov
xor
mov
mov
fucomi
shrb
lock
loop
push
or
push
insb
adc
pop
in
dec
inc
rsm
sti
jns
call
imul
and
cmp
push
pop
mov
adc
mov
dec
arpl
in
inc
call
cmp
pop
ss
xlat
mov
xchg
out
or
push
fsubp
sbbl
lods
sbb
pop
incb
lcall
loop,pn
push
stc
jae
pop
xor
xchg
gs
loopne
mov
pushf
test
pop
cltd
insl
fcoms
mov
cs
aam
add
cmp
iret
sub
dec
cmpsl
ret
pop
imul
clc
les
ret
push
xchg
stc
inc
scas
xor
cmp
testl
js
subl
test
scas
sbb
cld
xchg
xchg
push
fmulp
mov
inc
lea
mov
push
stos
test
sub
cmp
xchg
push
mov
dec
xchg
jge
add
loop
jb
es
pop
mov
insb
mov
mov
test
push
sbbl
push
mov
or
subb
aaa
std
rcr
xor
inc
in
into
sub
in
aaa
rolb
fdivl
hlt
xor
shrb
dec
orl
dec
int
cltd
mov
pop
or
mov
jecxz
sub
ds
popa
iret
xlat
pop
lret
sbb
or
mov
test
adc
ljmp
jl
mov
lods
les
scas
push
stos
ret
pop
xchg
fcompp
push
aaa
push
xchg
dec
movsl
fdiv
dec
add
push
jo
adc
imulb
or
lret
dec
in
jg
cmpsl
out
adc
push
and
ret
fmuls
and
fbstp
fsubrs
sbb
rorl
mov
push
fcoml
subl
adc
mov
je
pop
mov
cmc
sub
mov
jle
iret
add
dec
and
test
out
push
inc
cltd
mov
inc
add
jle
jg
dec
adc
mov
mov
mov
fsts
sbb
push
mov
out
dec
imul
mov
les
clc
mov
dec
lds
and
push
pusha
fwait
mov
int
adc
lcall
scas
push
lret
inc
arpl
and
icebp
push
in
inc
pop
test
fucomip
adc
push
data16
jnp
or
mov
push
in
test
jge
jbe
pusha
adc
hlt
lods
addr16
dec
lahf
outsb
add
lret
loope
cld
shl
daa
ljmp
xor
test
cmc
test
push
xchg
push
test
pop
jle
sbb
add
pop
mov
enter
fadds
jns
lds
repnz
outsb
test
pop
mov
or
std
flds
fisttpll
mov
mov
dec
dec
out
dec
dec
pop
sbb
add
dec
into
fnstsw
ss
push
push
subb
fcoml
inc
xchg
popf
sbb
dec
movsb
mov
leave
adc
add
aas
xlat
fwait
cmp
pop
sbb
sub
push
lcall
mov
adc
fs
sub
stos
lods
jp
or
out
add
jae
int3
inc
dec
movsl
pop
js
mov
xor
jnp
jp
jge
jl
jo
mov
mov
jns
dec
xor
lock
out
in
popa
loope
dec
or
dec
fdivrs
inc
push
mov
mov
aad
call
int
rcr
jmp
pop
sahf
ljmp
pop
sti
sbb
mov
lods
xchg
loopne
mov
mov
jmp
mov
cmp
shrb
in
cmp
xchg
jno
mov
cmp
cmp
dec
mov
sub
gs
xor
mov
xor
dec
fwait
sbb
pop
xchg
jl
imul
xor
aas
mov
cmp
mov
cltd
mov
test
and
out
push
mov
popa
add
adc
out
lahf
andb
mov
stc
push
and
outsb
mov
add
push
ja
jbe
fstpl
jne
fldl
testb
lret
lret
pusha
fcoml
frstor
mov
mul
cmc
xor
pop
xor
push
aad
add
mov
fisubrs
pop
sbb
in
aam
addr16
mov
lods
inc
aad
out
cmpsl
xchg
sbbl
nop
mov
mov
cwtl
out
mov
cmp
mov
data16
mov
popf
push
sarl
pop
add
movl
pop
or
mov
or
rolb
mov
out
mov
fcmove
mov
andl
adc
psrlq
daa
ds
test
xchg
outsb
inc
test
aas
jle
sub
or
sbb
mov
bound
cmp
bound
jne
stc
arpl
outsb
push
mov
and
jnp
jp
jge
xlat
cmp
xchg
xor
popa
xchg
je
add
xchg
add
pop
stos
xor
xorl
or
call
lock
lock
sbb
loope
outsl
mov
push
or
fstpl
loopne
sahf
pop
sti
pop
sahf
add
in
adc
out
je
inc
rclb
cmp
insl
cmp
int
ss
adc
cld
arpl
cmp
int
int3
dec
std
inc
enter
lret
mov
mov
sbb
mov
push
mov
fwait
dec
xor
cmp
rclb
sti
mov
in
les
fistpl
dec
inc
pushf
fwait
in
mov
mov
sub
mov
jo
pop
ret
mov
adc
push
imul
pusha
sbb
shrl
jbe
sub
push
dec
shl
jne
mov
xchg
pop
jns
outsl
mov
into
jbe
fisttpll
gs
dec
testb
scas
loop
enter
dec
mov
fcoms
jecxz
imul
pop
inc
gs
in
in
pop
lods
shlb
mov
fs
insl
in
adc
push
xlat
ljmpw
mov
bound
lods
xchg
xor
cmpb
sub
hlt
cs
inc
mov
mov
mov
inc
gs
repz
mov
int3
mov
stos
dec
dec
int
xchg
bound
or
fisubrl
fmuls
mov
jle
dec
outsl
dec
out
popf
test
mov
in
sub
jl
jno
adc
jl
in
mov
adc
sbb
push
es
in
jno
hlt
and
adc
pop
jns
mov
imul
test
push
imul
std
cld
shlb
mov
dec
jne,pt
enter
orb
and
in
sbb
dec
lahf
xchg
push
je
test
loope
les
xchg
pop
bound
add
inc
iret
dec
addr16
ljmp
pop
sbb
lds
fldcw
add
out
xor
pop
fistps
cmp
lock
jmp
and
push
push
cwtl
mov
dec
adc
dec
mov
adc
dec
xchg
imul
out
movl
inc
ret
push
push
bound
jb
sbb
add
cli
sbb
pop
xchg
jle
andb
stc
inc
jp
das
outsl
jle
lods
sub
out
sbb
cli
sub
jb
and
data16
lret
ljmp
ss
std
jl
push
stc
js
cld
mov
sub
mov
jnp
push
push
lea
xchg
sbb
xchg
sahf
ljmp
dec
dec
lcall
fcoml
dec
sub
xchg
inc
in
xchg
adc
fildl
shl
jo
sahf
push
mov
dec
int3
insb
call
dec
jmp
inc
out
mov
nop
scas
fistps
push
xchg
xchg
movsl
in
cmp
call
lahf
mov
repnz
xor
xchg
jb
aaa
add
mov
es
popf
lea
into
sbb
imul
movl
or
add
or
lahf
xchg
jle
icebp
sub
loop
scas
sub
cmpsl
es
pop
sbb
mov
adc
iret
push
add
out
fildll
mov
cmp
add
xchg
mov
js
xchg
push
cmp
mov
xor
mov
test
test
xor
mov
push
sub
insl
popa
loope
mov
sub
icebp
sbb
or
mov
push
push
jg
fdivr
xchg
sbbl
fldl2t
push
sbb
inc
mov
add
push
mov
push
out
pop
rcl
mov
loop
xchg
inc
dec
pop
adc
scas
mov
dec
mov
pop
loope
pop
testl
or
loop
jp
push
ret
inc
test
lock
jo
push
cmp
fildl
movsl
repz
js
loop
inc
loop
dec
mov
sbb
sub
lret
lret
lret
push
fcoms
repnz
mov
insb
fildll
jnp
jp
sbb
push
test
mov
es
mov
je
test
insl
mov
hlt
pop
repnz
add
int3
ja
sarl
cmpsb
je
cmpsb
jne
push
enter
mov
mov
push
push
dec
and
pop
push
push
mov
es
push
test
daa
xor
pop
pop
lods
pusha
jo
pusha
or
mov
fcompl
test
xor
mov
orb
loop
movsb
mull
jp
lods
sub
mov
xor
pusha
cmpb
inc
inc
inc
adcl
dec
enter
push
jmp
pop
mov
js
mov
or
pop
add
add
add
mov
sbb
xor
push
cmpsb
sbb
test
mov
fwait
stos
sub
pop
cmp
jge
out
out
out
add
mov
sub
ss
inc
dec
fstps
sub
test
shl
jb
cld
addr16
stos
lahf
jnp
test
or
sub
scas
std
jo
jge
mov
jns
dec
gs
test
outsb
mov
nop
or
push
int
lea
cmp
xlat
push
pmuludq
hlt
sbbl
jg
jle
nop
in
imul
push
pushf
sbb
xor
lods
stos
mov
sub
push
scas
inc
shll
imul
repnz
cwtl
das
jl
ret
ret
mov
pop
aad
sbb
push
push
shrl
outsb
cmp
ja
lret
cmp
inc
ret
fneni(8087
jbe
in
leave
inc
mov
repnz
dec
xchg
shlb
cld
jo
adc
sbb
mov
out
sbb
daa
mov
sbb
pop
xchg
pop
xchg
imul
cmp
pop
outsb
and
jbe
add
jg
into
add
sti
pop
popa
xchg
nop
add
fimuls
cmp
push
push
and
add
and
mov
sub
mov
mov
push
or
push
pop
push
push
mov
es
push
test
xlat
xor
pop
pop
lods
pusha
jo
pusha
or
mov
movsl
fstps
push
rcrl
push
js
cmpsl
add
fildll
mov
and
adc
cmp
mov
inc
push
test
mov
push
inc
in
in
jns
pop
jb
cmp
jmp
cmp
bound
stos
or
ret
mov
test
jbe
xchg
push
push
add
dec
dec
mov
sbb
repz
adc
sub
sbb
scas
sub
xchg
es
pop
sub
movsl
xor
add
sbb
cwtl
xor
test
aas
xlat
imul
mov
mov
and
dec
out
sar
lea
jnp
pop
xchg
xchg
sbb
mov
cltd
sbb
dec
fsubrp
loop
xchg
decl
inc
js
cmp
mov
add
xor
pop
add
fistl
cmp
pop
or
rclb
cmpl
ret
pop
das
outsb
pop
sbbb
jmp
xor
pusha
fildll
xor
gs
out
in
loopne
int
and
push
mov
mov
or
jne
inc
orb
add
popf
jp
in
inc
sub
std
xlat
dec
inc
mov
cwtl
gs
ds
lods
fld
sbb
lcall
pop
lcall
and
ret
mov
mov
enter
and
cmpsl
lods
push
test
xor
push
stos
mov
and
iret
jp
idivb
xchg
movsl
mov
or
dec
mov
inc
scas
and
lret
sub
shlb
dec
hlt
out
add
test
flds
in
iret
sub
pop
mov
filds
xlat
push
xor
pop
js
arpl
mov
movsb
std
outsl
xchg
jno
pop
mov
insl
stos
mov
sahf
cmpsb
aam
test
fs
push
mov
in
xor
push
cs
pop
cmp
in
ds
hlt
xor
mov
cmp
cmpsb
imul
or
fsubl
and
xchg
cld
sbb
adc
dec
mov
mov
lods
fmulp
pop
xchg
xchg
jb
repz
xchg
pop
adc
cmp
addl
sbb
movsb
pop
adc
stc
dec
movsb
jae
push
push
jne
je
dec
mov
in
cmc
test
or
or
test
fistl
or
loope
jle
sub
cvtdq2ps
pop
bound
or
fstps
outsl
mov
lods
orb
ljmp
xlat
mov
mov
fsubrs
arpl
add
cmp
mov
inc
cmp
lock
enter
aaa
mov
xchg
fsubrs
fs
mov
mov
adc
cmp
dec
mov
and
incb
sbb
daa
mov
mov
inc
popf
mov
das
scas
imul
fisubl
pushf
dec
jecxz
mov
and
dec
xchg
sbbb
pop
pop
mov
adc
sub
scas
icebp
adc
outsb
dec
shlb
and
mov
mov
jg
add
jmp
stc
divl
add
xchg
pop
andl
add
or
out
mov
mov
sarl
dec
rep
push
test
jle
and
jae
aaa
or
fadds
mov
hlt
in
pop
outsb
xlat
jge,pn
add
xchg
xchg
pop
pop
pusha
imul
insb
call
jl
pop
aam
stos
xchg
arpl
cmc
mov
or
cmp
ss
mov
add
test
imul
ss
mov
pop
rcll
hlt
xor
cmp
dec
adc
gs
inc
mov
arpl
les
scas
hlt
jbe
xor
mov
mov
fmul
sbb
mov
mov
add
ret
lcall
xor
adc
repz
jo
xor
sbb
daa
cmpsl
sbb
lds
in
xor
ljmp
xor
jb
and
jbe
test
daa
hlt
jae
cli
pusha
lods
fnstcw
jo
xchg
addl
push
lea
mov
aaa
mov
addl
test
fsubl
pop
sbb
cmp
inc
mov
les
iret
xor
loop
icebp
jo
adc
insb
fsubrl
fstl
in
xor
shll
imul
roll
jb
movsl
in
aad
aaa
jp
inc
push
inc
lods
pushf
mov
cwtl
mov
sub
mov
mov
out
inc
push
dec
mov
xor
fdivl
jl
cmp
addr16
push
dec
dec
leave
inc
insl
lret
mov
adc
xor
js
jecxz
and
and
dec
xchg
sub
sbb
repnz
adc
sub
insl
inc
mov
xor
in
mov
fucomi
int3
insb
daa
aas
add
data16
nop
outsb
je
xorl
or
hlt
stos
or
shl
clc
test
cs
cmpsl
add
int
sbb
push
adc
inc
pop
cmpsl
lea
fmuls
jecxz
rcr
pop
mov
dec
aad
cmp
push
bnd
movsl
aad
or
out
push
and
cwtl
mov
adc
mov
in
xlat
outsl
scas
add
loopne
sti
or
jo
daa
outsb
push
cmp
arpl
aad
aam
cmp
mov
mov
or
icebp
roll
cmp
add
push
popa
push
icebp
and
or
mov
repnz
push
xchg
push
lds
or
dec
roll
dec
add
aaa
les
cltd
dec
ss
push
fcoms
push
and
adc
bound
inc
orb
push
mov
nop
add
arpl
sub
cmp
add
adc
hlt
jae
xchg
js
xchg
and
mov
div
jle,pn
mov
test
imull
ljmp
negb
sbb
decb
pop
ficoms
ja
xlat
ja
add
jae
shll
sbb
push
pop
das
outsl
lcall
xchg
sbb
ds
push
leave
aaa
insb
call
imul
add
addr16
xor
dec
into
hlt
jno
subl
in
aad
push
fidivrl
push
in
sbb
inc
subb
dec
shll
dec
inc
lret
cmpsl
inc
inc
ret
push
push
xor
mov
and
popf
sbb
cmpb
jge
ret
mov
adc
nop
mov
mov
scas
notb
roll
jb
ret
sub
push
ds
dec
addr16
addl
cld
jge
xchg
shl
cwtl
cli
jns
mov
mulb
arpl
rorl
sti
push
adc
or
or
jmp
mov
in
addl
and
jnp
lock
fcompl
stc
mov
idivb
dec
stc
mov
ja
pop
lock
push
push
jg
fldt
jo
out
inc
sahf
gs
cmp
inc
fstpt
push
jecxz
cmp
in
loopne
std
rolb
and
jae
movsl
icebp
sub
push
out
mov
push
xchg
sbb
lret
dec
lret
xor
clc
adc
leave
dec
les
sbb
inc
fisubrl
push
cs
je
add
sahf
shlb
xlat
push
aaa
movl
jbe
xchg
arpl
jno
lods
sub
sbb
lcall
cmp
mov
jae
insl
ja
cld
jnp
loop
shrb
jbe
addb
and
outsb
jns
cmp
jge
in
jo
daa
aam
or
pusha
mov
push
pop
jb
jle
aas
shll
rorb
fstpl
hlt
jbe
sti
stos
mov
cmp
pushf
or
in
popa
inc
fistpl
and
jo
int
hlt
aam
shrl
loopne
lods
or
lret
cmp
cmp
imul
aas
mov
scas
enter
and
inc
in
insl
in
mov
cmp
leave
cmp
inc
push
arpl
fstpl
inc
ret
jmp
sbb
adc
fildl
mov
lods
mov
cmp
je
movsl
add
pushf
adc
in
sub
xchg
inc
lcall
aas
mulb
xchg
mov
mov
lods
mov
out
scas
sub
lret
es
xchg
std
xor
or
xchg
pop
sub
and
subl
call
sarl
iret
or
loopne
add
sbb
popa
loope
inc
inc
cmp
rol
out
fimull
rcll
pop
pop
imul
fisubl
outsl
in
imul
mov
push
test
imul
push
push
inc
xchg
xchg
test
inc
icebp
and
mov
inc
mov
out
ds
lret
mov
das
inc
cmp
mov
mov
sbb
enter
lds
cmp
cmp
imul
mov
inc
int3
fs
int
dec
addb
mov
jae
inc
fsubrl
lahf
sahf
stos
adc
test
xor
popf
jno
sbb
es
sbb
in
in
push
jb
and
xor
add
movsb
jmp
mov
jbe
int3
test
jb
jle
add
xchg
jg
flds
in
cmp
mov
push
push
test
ljmp
loope
push
sbb
mov
outsl
test
ret
xor
addl
mov
iret
jmp
mov
pop
fcom
dec
lods
in
insb
fisttpll
xchg
inc
adc
popa
aad
push
mov
inc
sub
jo
ljmp
jo
outsb
scas
pop
call
adc
mov
scas
mov
inc
add
orl
jmp
jmp
xor
or
push
jno
xchg
popf
sbb
sar
stos
sbb
adc
pop
jle
lods
sub
dec
lret
xchg
cli
sub
adc
pop
lahf
xchg
push
push
hlt
jg
sti
xor
in
push
sbb
mov
fdivrp
daa
xor
divl
rol
out
out
outsb
pop
add
rclb
lea
ljmp
lret
dec
je
add
jp
inc
je
fcompl
or
inc
out
fcmovbe
mov
aaa
xchg
rcll
mov
dec
out
pop
loopne
imul
ret
fdivrl
addr16
out
leave
sbb
arpl
push
lods
xchg
int3
sub
fiadds
xor
insb
jmp
xor
mov
mov
sbb
and
cmp
mov
lret
lret
dec
inc
push
lods
stos
mov
push
pop
dec
leave
dec
lea
inc
or
fsts
push
add
sahf
shlb
jns
aaa
movl
push
add
xor
shll
sub
push
inc
mov
mov
adc
lret
jg
sti
jp
mov
push
loopne
cmpsb
cli
jns
sub
and
inc
add
or
jp
idivb
ljmp
fmuls
in
enter
loop
xchg
nop
or
mov
or
push
lahf
loope
cltd
fstps
cmp
push
adcl
push
mov
and
push
pushf
cmp
pop
add
adc
aam
in
scas
scas
xchg
xor
sub
inc
shlb
mov
and
push
idivb
mov
arpl
sti
mov
das
inc
cmp
or
imul
xor
movsb
or
dec
xor
add
aas
mov
int
adcl
inc
lret
iret
into
ret
leave
enter
stos
mov
xchg
pop
jnp
sub
cmp
sub
movsl
and
jae
jmp
adc
xorb
std
sub
stos
fwait
sbb
adc
jb
and
add
xchg
adc
jp
mulb
sar
or
mov
lcall
lcall
iret
lret
fistpl
clc
jne
clc
xchg
xchg
pop
pop
inc
inc
push
aad
jb
outsb
loop
lods
popf
xchg
aam
stos
out
insl
xor
lds
pushf
clc
aam
nop
stos
push
outsb
std
mov
stos
cld
xor
cmp
xchg
ljmp
jo
add
out
jecxz
loop
adc
mov
idivb
fidivrl
mov
mov
fdivp
aad
xor
pop
sbb
rcll
std
xchg
add
jnp
ja
xor
andb
xor
pushf
inc
adc
frstor
xor
and
mov
jb
pop
sub
xchg
leave
jl
in
jmp
jno
xorb
push
rclb
inc
xlat
dec
push
and
fdivrs
add
sti
jp
repnz
imull
cmp
dec
ss
cmc
je
lcall
inc
inc
jl
ficomps
sti
pushl
xchg
ss
out
lock
repz
cs
jle
adc
sbb
push
pop
popa
inc
fldcw
fnstcw
repz
jl,pn
loopne
js
arpl
popa
lock
mov
sub
insl
in
add
enter
xor
out
xchg
fcmovbe
fwait
aaa
ret
insb
dec
mov
sub
fnstcw
push
movb
or
push
into
ja
add
shr
sbb
lds
lret
sbb
xchg
sub
frstor
xor
pushf
and
mov
repz
cmp
adc
cld
mov
mov
imul
sbb
xchg
sbb
mov
dec
js
sub
cli
out
push
loop
inc
lahf
outsb
jne
mov
xlat
jb
add
insl
and
push
mov
lret
sbb
and
xchg
adc
xchg
sub
pop
xchg
clc
popa
adc
xchg
pop
pop
outsb
mov
or
lcall
out
pop
ljmp
arpl
aad
insb
leave
sbb
dec
or
push
aad
test
out
pop
inc
idiv
int
fldt
lcall
insl
jmp
std
call
mov
add
push
lock
cmp
movl
xor
mov
aas
pop
ds
imul
out
or
addb
cltd
mov
mov
jns
fbstp
lods
xchg
loopne
popl
dec
imul
fidivrl
iret
out
jbe
mov
repz
cmp
out
dec
jge
sub
fucom
fildll
sub
repnz
mov
push
je
sbb
jae
aam
daa
imul
adc
enter
popa
loope
push
push
and
adc
jecxz
sub
pop
or
pop
xor
mov
pop
pop
add
pusha
or
mov
ror
pop
cmc
imul
adc
xor
xor
inc
icebp
cmp
jmp
lahf
mov
adc
fwait
xchg
inc
inc
shrb
mov
dec
arpl
mov
jl
cmp
inc
mov
mov
pop
pop
aad
xor
mov
ss
cmp
inc
dec
jb
pop
les
lock
or
xchg
test
jecxz
ficomps
ss
push
out
in
jl
mov
cmp
push
push
cmp
call
jl
ja
push
xchg
dec
test
ret
pop
movsb
loope
inc
lahf
jp
and
mov
push
xchg
bound
sbb
aam
xor
inc
push
sub
pop
cmpsb
clc
dec
add
int3
cmpsb
push
fcmovb
ss
sbb
and
push
popf
fldenv
fucom
sub
lock
cld
insb
call
jns
push
icebp
gs
loope
cmpsl
aad
roll
inc
mov
in
repnz
ret
adc
xor
pop
fcmovbe
pusha
sbb
inc
sbb
enter
xchg
in
mov
xchg
addr16
int3
cmpsl
popa
out
or
mov
push
push
push
in
loop
dec
test
and
test
into
pushf
xor
pushf
fwait
test
adc
mov
sub
pushf
popf
inc
cmp
sbb
adc
cmp
pop
lahf
aaa
cmp
out
lods
les
dec
jo
sub
rcr
stos
jp
ss
and
dec
cmpsl
aam
add
cmc
hlt
add
jb
cmpsl
jbe
out
aas
hlt
int3
lret
sbb
test
push
xchg
add
pop
ficoms
fldl
mov
pop
pop
mov
push
push
fadd
ljmp
mov
push
push
pusha
cld
insb
call
or
rcrb
push
das
jl,pn
loopne
js
sub
popa
lock
sub
jno
cmp
stos
cmp
cmpsb
mov
movsl
xor
pushf
jb
repnz
mov
mov
cld
enter
jp
or
xor
aas
mov
inc
int3
fs
dec
mov
xorl
xchg
sub
sbb
sub
mov
dec
fwait
ja
push
aas
sbb
adc
movl
jmp
mov
push
lret
std
in
pusha
pop
adc
jns
sub
sti
bound
fstps
mov
push
add
xchg
mov
subl
inc
sub
push
arpl
xor
mov
sbbb
sbb
add
xchg
jmp
ficoms
ja
ss
inc
mov
repz
push
jmp
pop
scas
loopne
dec
sub
out
cli
ficomps
shl
ja
data16
inc
xchg
jo
add
iret
mov
mov
test
out
outsb
xor
daa
mov
jge
fldcw
insl
mov
mov
jbe
mov
push
inc
xor
dec
mov
and
mov
xor
aas
pop
pop
iret
out
push
in
adc
cmp
or
fwait
jb
cmp
inc
xchg
lcall
sub
adc
cmp
scas
and
push
inc
xchg
push
xchg
cmp
in
in
mov
ret
rcrb
daa
ss
mov
sti
jp
jge
imul
sub
std
shlb
jb
jne
loop
pop
push
xlat
add
xor
jnp
testl
stos
push
mov
jns
loope
ds
into
sbb
add
jp
adcl
fdivrs
dec
push
mov
pop
pop
mov
push
aad
jb
pushf
outsb
loop
ss
sbb
das
xchg
sar
roll
out
cltd
sbb
push
std
bound
cli
out
pop
inc
idiv
int
fldt
lcall
cmpsb
cmp
mul
dec
mov
in
mov
push
inc
out
scas
call
cmp
aaa
adc
mov
inc
shlb
inc
aad
mov
mov
or
orb
xchg
dec
popa
xorb
dec
xchg
lcall
mov
loopne
pusha
pop
out
sbb
sub
sbb
inc
and
rclb
lahf
ljmp
mov
jge
popa
pusha
push
out
cli
cs
imul
and
clc
push
mov
imull
jp
clc
jo
jge
mov
jns
mov
xchg
leave
enter
loop
loope
dec
pop
rclb
or
dec
sbb
adc
push
mov
jno
iret
in
shrl
push
fsts
dec
adc
outsb
jns
add
in
mov
mov
sbbl
pop
fsubrp
cmp
insb
insl
push
sub
lret
mov
push
pop
sbb
pushl
test
adc
pusha
pop
les
popa
aaa
imul
leave
outsb
je
mov
and
jle
into
std
int
add
out
lcall
jg
inc
inc
inc
cltd
cwtl
cmpsb
pop
mov
mov
sbb
and
es
sub
movsb
or
mov
adc
push
scas
insb
sub
jmp
aad
stc
js
scas
mov
stos
mov
addl
mov
cmpsb
and
mov
divb
in
inc
divb
cmp
jg
out
loop
pop
sbb
mov
dec
or
inc
or
add
repz
out
das
out
pop
mov
pop
mov
pushf
sub
xchg
ds
dec
adc
andb
adc
shlb
lcall
ret
je
xor
cmp
outsl
scas
push
inc
push
cmp
dec
mov
imul
arpl
adc
les
inc
or
xchg
cs
mov
loopne
sbb
push
cmp
popf
sbb
jg
push
sti
lret
cmp
movb
andl
xor
inc
in
test
dec
pmullw
push
and
mov
arpl
aam
test
in
pop
sahf
shll
gs
pop
push
idiv
and
push
aaa
mov
rclb
repz
jno
or
shlb
lret
je
mov
stos
xchg
lea
shll
or
mov
mov
repz
mov
jae
incl
jl
shlb
stc
and
adc
mov
pop
aam
stos
cld
es
add
int3
jb
mov
hlt
jle
cmp
lods
cmp
xchg
pop
test
lods
jg
out
mov
scas
mov
dec
or
repz
add
adc
mov
inc
push
pushf
xchg
inc
mov
push
and
dec
in
dec
inc
push
fildl
lods
push
adc
test
shlb
sub
mov
test
cmpsl
push
fsubrs
jo
ds
xchg
inc
adc
add
sahf
sub
cmpsl
addl
adc
mov
js
test
adc
lret
or
jbe
jns
js
ds
into
sbb
test
adc
je
adcl
mov
sarb
aam
sub
xor
out
mov
mov
imul
and
pop
call
pop
cs
jnp
lods
sti
and
idiv
jbe
insb
gs
sub
or
addr16
ljmp
lret
mov
mov
insb
and
inc
xchg
mov
pop
cli
das
adc
mov
mov
jns
mov
xchg
movswl
std
mov
dec
les
mov
xchg
lcall
xor
inc
lds
insb
mov
sub
adc
push
add
and
xchg
push
lcall
sti
xor
xchg
test
add
in
outsb
or
sti
jp
das
std
fisubrl
lods
mov
cmp
add
in
cmc
je
xchg
stos
sbb
aam
cmc
stos
mov
rcl
aaa
mov
into
hlt
add
dec
shlb
pusha
jle
imul
inc
dec
ficompl
mul
jnp
push
fwait
push
pop
out
jb
imull
adc
pusha
in
shll
fidivs
fstps
adc
das
aam
in
jne
outsl
adc
dec
mov
fsubrl
popf
jmp
push
jmp
enter
fistpll
addb
push
shrl
outsb
cmp
das
mov
mov
or
mov
sarb
or
shlb
xchg
testl
pushf
mov
xchg
adc
jle
dec
jle
dec
sahf
iret
aas
sbb
or
out
in
sbb
and
hlt
bswap
lea
pop
ret
scas
gs
ja
das
adc
out
sbb
movsl
cld
mov
lahf
outsb
jne
div
inc
mov
jne
or
mov
add
and
sub
dec
push
push
loope
xchg
daa
jb
pop
jle
ret
idivb
sarb
cli
push
adc
stos
jb
test
orb
fcmovnu
push
mov
iret
and
cmp
in
jae
cwtl
push
in
mov
push
int
mov
dec
mov
stos
mov
mov
pusha
lahf
das
scas
ret
inc
leave
fistpll
dec
enter
fnstsw
mov
inc
imul
cmp
sbb
mov
push
mov
lret
push
add
ret
adc
jb
rorb
lds
or
dec
loop
int
xorb
lds
sbb
add
inc
jp
mov
divl
lcall
daa
outsb
pop
adc
scas
sbb
xchg
and
adc
rorl
jnp
sub
dec
lods
stos
add
cmpsl
jbe
and
cmpsl
or
mov
test
shl
popa
loope
pop
inc
or
enter
mov
push
inc
filds
aad
mov
mov
jmp
popa
or
push
fisubrl
pop
test
loop
jle
mov
xor
imul
in
mov
aad
jmp
arpl
pusha
das
dec
loop
jp
dec
outsl
cmpb
cld
aaa
mov
sub
xor
xor
rorl
inc
int3
pushf
dec
lret
dec
sbb
or
lock
cmp
jl
pop
dec
inc
lcall
les
sbb
mov
jb
cli
sub
sti
xchg
into
adc
imul
ljmp
cmc
lret
std
fisubrl
jns
sub
jae
jg
movsb
add
add
add
cld
sbb
jp
idivb
mov
lods
das
test
das
dec
popa
cmc
dec
push
cmp
jle
popf
inc
inc
ror
fistpl
mov
fcoms
push
xchg
test
mov
cmp
push
xchg
sub
sahf
push
jecxz
mov
sub
inc
shll
jmp
mov
cmp
cmp
or
sbb
pusha
lahf
das
scas
adc
pop
ja
fiadds
xor
in
aam
push
push
add
pusha
aad
mov
test
sub
mov
pop
xchg
dec
dec
mov
les
or
iret
jl
mov
adc
adc
sbb
cmovb
xlat
pop
sub
movsl
and
pop
push
xchg
addl
sub
push
pusha
insl
out
cli
adc
jae
mov
outsl
push
nopl
movsb
add
decb
div
xor
clc
adc
jb
dec
jne
enter
loop
cltd
cmp
fisttpl
inc
inc
cmp
jp
repz
xor
push
xchg
jmp
lret
pop
ret
addr16
imul
out
xchg
push
lcall
nop
mov
jecxz
sbb
scas
aas
pop
jmp
adc
sbb
fwait
aaa
or
lds
shrb
and
dec
adc
lcall
movsb
ret
ja
sbb
stc
sahf
jnp
mov
lcall
ret
push
xor
adc
mov
daa
mov
test
adc
xchg
test
xor
out
sti
loop
enter
daa
cld
mov
jg
repz
add
xor
mov
test
mov
sti
push
push
in
add
and
mov
nop
or
ret
mov
fdivrs
notb
mov
dec
add
adcb
pop
test
fdivs
scas
bnd
xchg
mov
lcall
xchg
pop
add
add
pop
xchg
xchg
push
lcall
icebp
fisubs
fisubrl
cltd
jmp
jmp
arpl
xor
lret
icebp
rcll
ss
lods
enter
das
xor
jmp
movsl
lds
push
frstor
dec
jecxz
sahf
adc
ja
lcall
adc
out
jle
lea
pop
pop
jg
xchg
jae
orl
movsb
sbb
cs
xchg
leave
jl
in
jmp
popa
add
jge
jl
pop
neg
in
leave
insl
sub
sti
xchg
jb
movl
adc
jp
mov
test
cli
xchg
inc
xor
push
pusha
mov
lock
dec
inc
xchg
or
sarb
fistpl
int
pop
fcoms
lret
mov
pop
and
aad
jb
in
outsb
loop
lods
pop
push
pop
fcom
fidivrs
aam
mov
pop
sub
gs
stos
push
fbld
adc
pop
sbb
sbb
test
addr16
mov
push
fistpll
es
adc
mov
test
lret
xor
push
mov
mov
out
mov
jmp
loope
push
lods
inc
xchg
sahf
sbb
or
inc
rcll
hlt
adc
push
and
push
or
push
pop
sub
ds
es
xchg
outsb
insl
aam
pop
lahf
aaa
cmp
cmp
lods
les
push
sub
divl
xchg
call
mov
in
lock
or
add
jp
jne
jl
enter
jns
mov
movsb
push
divb
sub
fisttpll
mov
jns
pop
mov
or
fstp
jne
push
out
mov
lock
in
les
popf
in
insb
fisttpll
or
scas
lods
adcl
loopne
gs
cmc
push
add
and
fldenv
push
adc
sti
ja
cmp
comiss
int3
dec
mov
mov
mov
scas
cmpsl
repnz
inc
xor
push
push
push
sbb
lahf
leave
add
dec
dec
hlt
test
ret
adc
mov
cmp
and
imul
sub
push
dec
push
cmc
mov
imul
adc
xor
int3
sub
jl
sub
dec
repz
and
add
and
pop
cld
sti
or
je
inc
add
xlat
xchg
xor
lret
pop
xor
scas
in
jecxz
outsl
outsb
xchg
repz
add
into
jnp
xlat
push
pusha
ret
pushf
faddl
flds
imul
pop
ficomps
aaa
sbb
out
ficoml
scas
sbb
arpl
push
push
sub
test
pop
dec
mov
jmp
mov
push
mov
cmp
mov
or
mov
mov
lcall
mov
dec
dec
enter
xchg
cmp
dec
les
ret
mov
lds
pop
pop
xchg
shr
or
sti
fwait
sbb
push
add
insl
dec
sbb
leave
mov
ret
adc
ljmp
sub
pop
dec
sub
daa
cmpsl
sub
dec
imul
movsl
test
add
fs
jp
xor
or
div
jbe
xlat
stos
cwtl
push
xchg
cmc
je
js
subl
addl
xchg
jg
outsl
subl
push
test
dec
aam
loope
and
inc
or
cmc
je
fstps
xor
push
test
into
fs
andl
pop
insb
insb
call
or
rclb
push
test
into
rol
inc
icebp
fisubrs
fisubrl
cltd
test
cmp
mov
dec
clc
cmp
into
push
rcrl
dec
orb
or
mov
mov
js
inc
mov
dec
mov
mov
rcrb
int
pop
arpl
mov
sbb
xchg
adc
sub
addr16
sub
sbb
sub
xchg
sub
es
inc
push
insl
mov
adc
out
sbb
sub
addr16
test
repz
jge
pop
js
mov
sahf
leave
cmc
cmp
or
cmp
pop
clc
mov
dec
mov
sbb
inc
inc
mov
pop
or
dec
inc
out
js
aam
fistpl
aas
fisubs
sub
adc
sti
fistpl
cwtl
push
xor
push
ljmpw
sub
and
push
cmp
xorb
scas
pusha
pop
cmpsb
das
fdivrl
pop
cmp
add
test
pusha
cwtl
mov
dec
rcll
mov
push
dec
mov
ss
inc
ret
out
sahf
mov
sarb
mov
shll
sahf
sbb
ss
lcall
adc
loop
sbb
mov
dec
fwait
push
cmpsb
lea
sub
cmpsl
push
xor
stc
sub
movsl
xor
mov
in
pushf
sub
sub
ja
outsl
adc
jecxz
jb
test
jns
and
cld
mov
jmp
lods
mov
test
lret
ja
test
daa
xchg
lret
in
pop
fistl
js
push
jl
jg
into
ficompl
mov
cmc
aad
cmp
loope
in
imul
mov
add
ficompl
sub
clc
push
jne
push
sbb
stos
repnz
lock
xchg
test
out
jmp
mov
inc
rcl
testl
scas
sub
push
sbb
inc
stos
lret
adc
mov
lds
mov
test
sti
imul
jge
mov
dec
loope
pop
mov
adc
lcall
xor
dec
sub
pop
cwtl
nop
sbb
test
mov
testb
nop
cld
jnp
cltd
sbb
popf
sub
aam
jbe
jns
fistpl
jl
int3
adc
pop
loopne
jge
jp
loope
or
sub
xor
movsl
divl
xchg
push
mov
notb
dec
dec
xchg
loope
pusha
xchg
pop
pop
decb
pop
cmpsb
or
add
push
out
push
sbb
jle
cs
jg
lret
jmp
mov
pop
mov
xchg
xor
daa
test
jg
pop
test
scas
sbb
jae
movsl
jmp
aam
outsb
fsubs
mov
shrl
cltd
mov
xor
out
lret
jbe
clc
inc
imul
mov
inc
mov
mov
mov
lcall
adc
mov
xor
pop
dec
ds
loop
rcrb
test
jmp
push
dec
add
adc
mulb
bswap
push
sub
out
std
jl
rolb
out
loopne
xchg
test
je
mov
xchg
push
je
fisttpl
fadds
push
daa
aam
add
add
inc
adc
iret
sub
or
js
pop
fcomps
fchs
push
ffreep
out
aad
mov
shl
xor
adc
sbb
stos
xchg
ss
jl
jnp
cmp
cmp
adc
paddsb
and
cmp
cwtl
or
int3
xlat
and
mov
push
xchg
cmp
ret
mov
pop
repnz
das
out
adc
int3
mov
dec
push
push
or
enter
lcall
ret
cmc
jns
jle
pop
and
xchg
ret
inc
mov
es
cmp
inc
xor
insb
dec
add
bswap
push
sub
jg
sub
sbb
shlb
sub
out
outsb
pop
or
xchg
lods
jnp
jmp
lea
movsl
sbb
jg
sub
dec
jecxz
add
stos
lret
pusha
fmull
fstpl
cmp
cmp
addr16
testb
out
mov
test
push
out
dec
add
mov
sub
jle
lds
pop
sub
cli
add
je
lods
roll
and
out
aam
sbb
call
ljmp
xor
popa
add
mov
fs
inc
lret
mov
fiaddl
add
iret
mov
or
dec
inc
jge
pop
and
cmc
jo
imul
fstl
push
sub
sub
pop
xchg
jae
test
sub
mov
push
add
stos
jp
sbb
clc
lcall
daa
jae
xlat
inc
mov
and
or
addb
into
loope
ja
out
cld
mov
dec
cmc
add
jle
push
lcall
xor
or
fstp
scas
add
push
out
mov
lock
sbb
sub
jmp
cmp
sub
dec
hlt
jne
pop
aam
shll
add
cmp
jno
movsb
sbb
jo
cld
out
out
out
lods
dec
sub
sbb
cmp
inc
xorb
outsl
inc
jns
push
adc
gs
int
xor
xor
xlat
outsb
xchg
shll
sbb
inc
xchg
mov
ss
jae
xchg
push
std
les
xchg
out
pop
es
mov
ljmp
xchg
push
lcall
adc
adc
jle
sahf
cmp
jp
cwtl
inc
loope
daa
aas
xlat
jmp
adc
jle
mov
lock
pop
jp
rcll
jns
or
call
int3
mov
xchg
cmp
jg
lahf
and
pusha
lret
sbb
pop
ficomps
adc
stos
pop
sub
xchg
imul
mov
push
iret
in
mov
jo
imul
insl
in
insb
leave
lahf
mov
fidivrl
mov
push
out
lods
and
testl
cmp
scas
lea
data16
xor
xchg
leave
dec
xchg
mov
push
mov
fwait
xchg
pop
out
movl
inc
ret
add
ror
and
mov
sbb
pop
cmp
ret
xchg
lcall
negl
scas
icebp
mov
lods
arpl
adc
daa
mov
xchg
push
xchg
adc
adc
bsr
cli
mov
sub
daa
shl
femms
fsts
fisubl
or
xor
mov
ss
repz
push
outsl
decl
xchg
loope
jle
sbb
jmp
and
outsb
add
push
mov
jle
lahf
test
lahf
adc
icebp
sub
iret
mov
jns
adc
jnp
inc
roll
mov
insb
cmp
lods
call
pop
ds
pusha
fists
dec
xchg
in
pusha
cmp
rol
xchg
cmp
aaa
push
ss
inc
ret
fneni(8087
pop
popf
in
push
sbb
subb
inc
lret
mov
adc
and
enter
hlt
push
dec
sub
sbb
cmp
sub
adc
dec
mov
mov
fs
scas
sub
lahf
xor
or
xchg
movsb
lock
out
hlt
inc
mov
cmp
cmp
movsl
xor
lods
loop
loope
pop
push
in
out
jle
sbb
mov
add
mov
fsts
jbe
mov
push
pop
scas
aad
outsl
insb
cmpl
add
fsub
and
pop
in
aam
addr16
addb
xchg
push
clc
jnp
test
cmpsb
rolb
stc
nop
jmp
pop
fnstenv
insl
jae
mov
adc
data16
fs
dec
lret
rcll
lret
xor
popa
cmp
inc
ss
mov
ret
mov
inc
mov
imul
lahf
arpl
sbb
xor
outsb
dec
decl
cmp
inc
adc
stos
inc
pushf
jp
mov
pushf
insb
xchg
lea
mov
dec
cmp
mov
inc
xor
call
fwait
shrl
es
lods
mov
not
nop
lea
add
lock
inc
jge
sub
mov
sub
mov
pop
arpl
nop
or
outsb
daa
inc
jns
dec
or
int3
clc
enter
les
fldenv
mov
scas
mov
pop
fisubs
push
pop
ficompl
test
add
mov
dec
mov
loopne
jmp
jno
icebp
add
cmp
sbb
and
push
or
popf
mov
ret
insb
mov
std
in
jge
cli
lods
inc
stos
jle
fdivl
xor
cwtl
iret
xchg
cs
push
xchg
iret
arpl
sbb
arpl
or
and
lds
mov
loopne
xchg
es
ret
sbb
pop
xchg
popf
sbb
jmp
and
into
sarb
shrb
pop
adc
es
in
sbb
movsb
push
adc
pop
and
je
add
fwait
mov
dec
clc
xchg
or
and
cwtl
jae
loopne
fwait
lahf
adc
pusha
mov
and
cld
int3
xchg
aaa
push
push
or
ret
sarl
insl
jb
test
in
fs
jmp
push
insl
lret
sti
xlat
adc
mov
jb
push
aad
inc
mov
std
ss
mov
add
push
adc
sub
and
add
pop
xchg
cmpb
cmp
ss
hlt
loop
mov
or
sub
sbb
xchg
rol
push
int3
dec
aad
push
int
add
xchg
jl
ss
dec
add
imul
inc
sub
aas
setbe
mov
popf
loope
and
outsl
lcall
inc
pop
adc
lgs
inc
xor
jecxz
jp
cltd
xchg
push
test
lock
outsb
sub
or
dec
mov
hlt
dec
push
inc
add
add
inc
sub
mov
iret
xchg
outsl
out
xchg
pop
je
outsl
out
outsb
sub
sbb
mov
mov
movsl
dec
or
addl
test
out
outsl
xchg
shrl
xor
lret
fisubrs
cli
js
xlat
fstpl
lods
pop
in
inc
movl
repz
subb
lcall
mov
into
dec
lcall
lret
rcrl
imul
inc
shlb
inc
scas
cmpsl
lret
loope
xor
jecxz
sbb
mov
push
mov
mov
mov
lock
js
xor
inc
sub
xchg
fs
pusha
fwait
sbb
mov
nop
and
fistl
lcall
sti
xchg
adc
rorb
xor
sub
jae
aas
pop
adc
inc
mov
mov
add
xor
jnp
bnd
push
movsl
sbb
xor
test
cmpsl
sub
test
pop
add
pop
adc
xchg
mov
aas
cmp
cmc
repnz
add
push
and
out
mov
xor
ficomps
mov
pop
fnstenv
hlt
push
ret
inc
icebp
cmp
add
iret
dec
jne
in
lock
sbb
lahf
pop
push
adc
rclb
jmp
arpl
dec
dec
arpl
cwtl
or
mov
cmp
lods
bound
mov
xor
idivb
mov
push
lahf
mov
dec
jmp
push
mov
fildl
mov
mov
jl
mov
aas
sub
jbe
xor
call
rcrl
push
pop
lcall
ljmp
bswap
jp
jne
ss
iret
ret
scas
jge
push
clc
fstl
pop
into
sub
daa
call
adc
mov
jne
add
jnp
inc
pop
icebp
call
mov
mov
mov
inc
xchg
push
xlat
xchg
adc
movsb
mov
or
xor
or
insl
add
lahf
call
add
fmull
fistpl
loopne
add
movb
mov
dec
mov
jno
or
fwait
cmp
xor
push
mov
arpl
fcoml
jno
mov
adc
fidivrl
or
xor
push
xor
fwait
jbe
push
and
mov
jno
push
ss
in
fadds
lcall
mov
and
ljmp
test
inc
inc
mov
pop
xchg
mov
mov
mov
fcompl
int3
mov
stc
adc
and
mov
adcl
aaa
cmpsb
idivl
dec
hlt
or
push
jecxz
sbb
xchg
xchg
dec
scas
lahf
mov
inc
jbe
mov
inc
cs
subl
cmp
aam
outsb
test
loop
and
roll
or
push
popf
ficoms
push
cmp
out
aaa
jb
mov
pop
mov
insl
xor
sbbb
in
imul
int3
gs
pusha
xchg
cmpl
mov
ljmp
xor
push
xor
push
iret
xchg
cs
push
popl
jno
push
xor
stc
out
out
ret
xor
inc
lds
mov
insl
sub
sbb
xchg
leave
jbe
dec
cwtl
sub
mov
sbb
adc
mov
cmc
mov
inc
ret
arpl
neg
adc
int
bound
inc
dec
cmpsb
or
push
pop
out
testb
sti
aad
std
sarl
dec
cli
mov
daa
add
push
and
jne
pusha
jae
out
xchg
aam
movsl
nop
faddl
pop
mov
inc
push
test
mov
cwtl
sbb
push
pop
jo
xor
cmpl
adc
fsub
bound
mov
in
aam
addr16
addb
xchg
push
clc
or
inc
pop
cld
stc
nop
jmp
xor
xor
xor
cmp
mov
data16
test
dec
int3
xchg
push
rcll
lret
xor
popa
cmp
add
jg
mov
ret
mov
mov
imul
fbld
sbb
xor
outsb
dec
incl
sub
xchg
scas
mov
lods
stos
inc
pushf
jp
lret
pop
dec
in
insb
xchg
lea
inc
inc
mov
dec
inc
inc
cmc
adc
add
lahf
jnp
mov
shrl
es
cmp
adc
rcll
sahf
sbb
push
iret
jp
cmc
lods
mov
test
cli
xor
and
sub
test
and
inc
sbb
xor
rorl
adc
pushf
xchg
ds
pop
mov
icebp
cmpsl
add
push
mov
loop
pop
paddsb
or
sbb
fstpl
lods
pop
in
andb
jle
push
mov
mov
repz
mov
aam
out
adc
sub
mov
scas
mov
iret
in
sbb
imul
inc
jnp
lea
daa
in
pop
xor
pop
rcrl
mov
push
adc
mov
push
mov
mov
push
pop
leave
sbb
ss
js
xor
inc
stos
addr16
popa
lock
enter
push
inc
leave
fstpl
ds
xlat
lret
xchg
and
cmp
push
xor
dec
lock
mov
repnz
sub
fists
dec
movsb
loop
xchg
lret
xchg
aam
outsb
jne
xchg
out
mov
sub
clc
add
aas
into
jns
push
cmpsl
subl
mov
push
outsb
stos
rorb
std
mov
and
or
aad
push
pop
bnd
lea
or
fcoms
inc
sbb
pop
or
cld
cmpb
dec
into
jb
and
ljmp
lcall
fs
inc
in
sbb
incb
dec
cmp
insb
cld
aaa
mov
mov
insb
daa
fcmovnbe
sbb
cs
shr
add
imul
into
push
xchg
inc
enter
jle
cmp
out
inc
lds
stos
scas
out
mov
sbb
pop
xchg
push
frstor
rorl
std
insb
leave
in
divl
pop
fstpl
inc
rcr
adc
lods
pop
push
xchg
xchg
leave
and
inc
mov
inc
cld
jnp
add
in
lods
mov
xor
cli
pop
cmp
jb
stc
lods
enter
outsb
xchg
flds
xchg
jp
push
lea
mov
or
sbb
jmp
sub
push
sub
movsl
pusha
fsubl
or
rcrb
into
jnp
dec
mov
push
push
adc
loopne
mov
push
icebp
pop
jnp
xor
sahf
xor
sub
push
push
sub
jecxz
sbb
shrb
clc
xor
sbb
dec
rorl
imul
rolb
fs
cmpsb
fs
xlat
mov
ss
xor
fstl
ficompl
jecxz
dec
mov
int
mov
dec
xchg
fwait
mov
divl
insb
scas
out
and
loopne
fwait
sub
inc
lods
or
mov
pop
xchg
mov
movsl
in
ret
mov
xor
lods
jno
test
pop
sbb
xlat
adc
enter
adc
or
hlt
push
push
xchg
stc
or
aam
cld
mov
dec
stc
mov
and
cmp
outsb
xlat
xchg
xchg
xchg
inc
mov
pop
mov
inc
xor
int
outsb
dec
mov
push
push
pop
outsb
push
aad
outsl
xchg
loopne
and
aaa
rcr
or
fcoms
setb
mov
cmp
mov
mov
mov
or
xor
das
push
adc
or
mov
sbb
nop
fldl
xchg
scas
sub
pop
jae
mov
lcall
das
scas
xchg
scas
add
into
dec
int
jl
ss
lret
dec
inc
dec
inc
dec
inc
inc
inc
sub
mov
dec
pusha
fwait
jne
int
sbb
mov
ficomps
cltd
lock
mov
inc
cli
xchg
adc
jne
in
ds
xor
dec
repz
stos
pop
push
dec
in
cmpsl
push
stos
sub
dec
cmpsb
and
lahf
outsb
jae
or
mov
stos
push
jne
jl
addl
call
scas
adc
xlat
xchg
xchg
xchg
inc
mov
pop
mov
inc
xor
int
outsb
jno
cmp
push
pop
in
push
aad
outsl
xchg
pop
and
aaa
shlb
sbb
xchg
int
js
push
sarl
push
mov
adcl
into
movsl
adc
sbb
pop
in
insl
in
sub
call
bound
dec
ret
lret
xor
cmp
sub
in
aaa
out
das
xor
inc
fwait
ss
pop
test
mov
push
mov
int3
or
shl
pop
leave
sbb
ret
xchg
js
xor
inc
in
addr16
xchg
lock
enter
push
fwait
leave
fstpl
movb
mov
xor
pop
lock
mov
loop
sub
fbld
jbe
xchg
xchg
dec
movsb
loop
ret
xchg
fs
outsb
jne
xchg
out
mov
jl
clc
add
jns
push
ja
push
das
push
out
push
outsb
adc
jne
or
ret
cmp
sub
dec
or
mov
xchg
adc
test
lock
cmp
mov
xor
insb
push
xlat
out
add
jge
xchg
cltd
repnz
js
aad
iret
fbld
int
sahf
jl
packssdw
add
imul
or
xchg
mov
jno
inc
mov
sub
mov
lods
cli
pop
clc
xor
hlt
xor
cs
add
add
lret
cmovp
adc
inc
cld
testl
in
mov
mov
getsec
xchg
mov
xchg
adc
hlt
rcl
enter
sub
sub
daa
cmpsl
es
lea
xchg
sub
jbe
or
sar
lea
in
and
sahf
jns
addr16
repz
lahf
cli
test
jle
popf
lcall
lea
xchg
xor
cmp
pop
and
push
cmpsb
popa
adc
pop
sbb
dec
mov
xchg
push
les
cmp
add
jp
push
icebp
inc
push
cmp
lods
andl
insb
push
dec
clc
jecxz
cmp
jecxz
sbb
popa
add
adc
sub
out
cld
xlat
js
outsl
mov
aam
mov
xchg
ret
ljmp
sub
std
cmc
jmp
ss
pop
cmc
adc
imul
jecxz
ds
push
loopne
lret
sbb
insb
xchg
mov
xchg
jnp
cmp
mov
addr16
sti
loopne
sbb
data16
out
stos
lods
test
cli
shll
adc
mov
sar
lea
in
and
sahf
jns
mov
xor
inc
fidivrs
popf
lcall
lea
xchg
xor
cmp
push
test
cmpsb
popa
loope
or
dec
pop
or
fstpl
push
dec
jns
pop
test
push
adc
inc
mov
adc
or
xor
sbb
xor
push
ds
call
push
std
xor
ret
mov
xor
push
push
sub
inc
or
mov
push
ljmp
sarb
mov
inc
or
arpl
inc
popf
in
lock
fisubs
shll
sub
push
leave
mov
sbb
adc
adc
add
sbbl
xlat
inc
fs
daa
cld
rcll
test
cmc
mov
pop
inc
sti
add
xchg
push
jl
out
push
sbb
xor
xchg
pop
jne
sbb
jle
fndisi(8087
sbb
das
mov
repnz
push
mov
aas
fs
mov
xor
imul
dec
or
add
call
mov
xchg
jb
mov
mov
add
push
scas
or
fs
and
add
pop
xchg
cmpb
push
sti
ss
sbb
or
sub
mov
push
int3
dec
mov
insb
inc
add
shl
loop
xor
mov
mulb
mov
push
xchg
inc
jno
lret
ficomps
ljmp
bswap
lock
das
ret
scas
jge
fwait
clc
fstl
pop
into
sub
pop
call
adc
mov
jne
mov
jnp
repnz
cli
insl
imul
mull
cli
jns
mov
subl
mov
push
outsb
outsb
inc
inc
xor
mov
mov
lea
inc
inc
mov
mov
mov
lods
and
jg
mov
and
loope
loop
pop
rcll
mov
imul
push
push
inc
adc
push
pop
cmpsb
repz
jno
cmp
je
mov
pop
cmpsb
clc
cmp
pop
sidtl
das
xor
popa
add
adc
inc
aas
in
and
mov
lahf
idiv
xor
pop
cs
mov
sbb
into
aaa
enter
xor
add
in
arpl
inc
insl
call
addr16
mov
sahf
jge
sub
lret
lret
add
xchg
and
ljmp
subl
shll
std
jl
aam
jecxz
iret
dec
jmp
idiv
or
les
mov
add
jnp
mov
andb
shll
divl
mov
add
clc
iret
into
jne
test
adc
inc
shll
or
fisubs
mov
es
mov
xor
push
mov
mov
in
jle
shr
in
pusha
mov
pop
mov
sbb
fisubrl
push
sub
gs
stos
adc
es
lcall
and
lods
sub
cmpsl
loop
mov
pusha
mov
push
inc
out
xchg
adc
mov
aaa
cs
inc
ret
fcmovnb
lea
or
mov
xchg
insl
xchg
dec
enter
stc
mov
mov
scas
scas
stos
cli
inc
lcall
lods
mov
int3
sbb
or
popf
sub
sbb
repz
xlat
cmpsb
in
adc
push
dec
outsb
vzeroupper
dec
repz
sub
xchg
outsb
sub
xchg
sub
add
cmp
add
enter
push
cmc
cli
jno
ja
xchg
jle
push
xor
or
test
sub
stos
lds
rorb
shl
dec
pop
or
fstp
add
push
out
stos
mov
jle
cs
xchg
imul
fnstsw
lcall
out
or
mov
mov
cmp
pop
lea
jg
ret
inc
mov
dec
push
pop
out
pusha
sbb
add
inc
push
cmp
dec
int
enter
lods
mov
ret
outsl
mov
iret
xchg
cs
sbb
into
rorb
faddl
mov
leave
mov
pop
mov
std
insl
or
xchg
xchg
pushf
jnp
sub
lds
test
iret
ljmp
repnz
mov
cs
lods
popa
pusha
daa
pop
jbe
adc
data16
and
testl
or
or
aas
lea
icebp
test
lods
addr16
pop
jne
fcoml
ret
xchg
xchg
add
insb
fcoms
cmc
repnz
stc
mov
pop
sbb
jno
jo
pushf
jmp
pop
mov
call
adc
negl
rcll
cmp
sub
cmp
subl
in
fidivrl
push
xchg
movsl
out
jecxz
cmp
mov
inc
push
cmp
mov
in
cld
mov
jge
jecxz
mov
inc
fcmovu
and
scas
enter
mov
xor
into
sbb
es
lcall
imull
sbb
and
sub
sub
push
xor
rorb
xor
ret
xchg
pop
xchg
pop
adc
cmp
pushf
sub
out
adc
fstpl
push
js
in
dec
cmpsb
mov
or
push
addl
inc
loopne
in
dec
mov
cltd
mov
adc
testb
arpl
loop
sbb
mov
or
mov
mov
ss
xrelease
jecxz
loope
push
pop
gs
sahf
pop
fstl
mov
ljmpw
arpl
les
cmp
imul
ljmp
addr16
out
jmp
stc
js
leave
iret
aad
in
cmp
push
rol
outsl
pop
cmpsb
imul
sub
dec
scas
cmp
jg
dec
adc
mov
push
pop
push
imul
push
int3
add
push
jmp
je
ss
xchg
mov
adc
mov
adc
xchg
xchg
and
scas
sub
cmpsl
or
mov
mov
rorl
xor
fidivs
cmp
sub
xor
mov
lock
lea
inc
je
test
and
enter
div
jle
or
test
dec
sbb
pop
loop
into
xor
mov
scas
hlt
lret
or
inc
add
loopne
jo
aad
in
push
lods
repnz
sub
or
lret
call
pop
test
lock
lods
cmovno
add
loope
rol
test
in
xchg
mov
push
rcll
add
cmp
cmp
lret
dec
mov
ret
push
cmp
push
pushf
lock
frstor
out
adc
mov
cld
pop
lock
adc
pop
insb
scas
xor
sub
mov
jno
shlb
cmp
sub
cmp
xchg
shrl
sub
stos
loop
gs
fcoms
nop
push
fcoml
mov
jne
add
push
lea
es
xor
mov
sub
leave
les
add
loop
fstpl
fmull
inc
pop
mov
jmp
mov
jae
insl
and
pop
arpl
addr16
insb
add
xor
add
stos
sub
gs
add
leave
jb
mov
repz
cmp
push
ret
aam
mov
imul
mov
into
rcll
xor
dec
mov
ss
push
fdivrl
fcmovb
and
pop
test
lret
dec
xor
add
insl
push
and
sub
jbe
shlb
imul
lods
dec
cmp
xchg
push
test
sbb
xchg
adc
jle
mov
sub
out
dec
std
jl
lcall
in
arpl
xchg
movsl
and
pop
or
jb
mov
test
stos
or
xor
test
outsb
xchg
loope
scas
fistpl
inc
into
cld
fcoms
cmc
cmp
stc
mov
ret
es
mov
push
mov
inc
sbb
fstps
push
jg
movb
test
sub
cmp
in
rcrl
add
mov
mov
push
loop
dec
xor
scas
cmp
dec
add
dec
les
and
adc
jae
pop
gs
les
jb
outsl
mov
lret
or
pop
and
popf
idivl
call
adc
adc
enter
fdivl
movsb
xchg
sub
ret
es
inc
jg
dec
jno
and
cmp
add
mov
jp
mov
push
daa
rcrl
add
xchg
adc
jae
xchg
js
xchg
and
dec
inc
add
es
testl
adc
xor
push
cmc
je
sbb
outsb
xchg
lret
sbb
adc
scas
jl
and
cmpsl
aam
jne
cwtl
jne
push
in
pop
test
jno
push
push
gs
push
bound
stos
push
pop
xlat
adc
lcall
jnp
or
imull
sub
jl
mov
pop
mov
pushf
fldcw
adc
in
dec
sbbl
je
add
int
out
cwtl
mov
fsubr
mov
pop
pusha
icebp
lret
pusha
das
out
adc
mov
sbb
movsb
mov
leave
adc
jae
inc
lds
fisubs
jp
xor
lods
mov
sbb
ret
sahf
cli
cltd
sbb
in
sbb
cmpsb
and
jle
pop
lock
cmpsl
data16
jl
push
cmpsl
int
lods
imul
and
les
or
mov
clc
ja
jbe
jge
js
int3
lret
clc
outsl
test
outsb
xchg
adc
ds
iret
mov
push
mov
mov
mov
ljmp
jg
jle
dec
sahf
andb
insl
incl
sti
pop
push
mov
scas
lods
ror
pop
fcomip
inc
sub
cmp
sbb
in
loopne
xchg
push
cmp
arpl
data16
andl
gs
les
icebp
adc
cmp
ljmp
push
icebp
and
cld
or
or
or
cmp
enter
in
dec
dec
outsb
mov
jmp
xor
call
sbb
repnz
push
out
in
add
inc
sti
rorb
xor
lods
popa
pusha
xor
leave
into
adc
and
pop
add
add
mov
mov
orl
imul
mov
dec
xchg
xchg
rep
out
outsb
mov
adc
mov
mov
mov
loop
mov
mov
cmp
fldcw
popa
arpl
push
mov
out
pop
fstps
dec
cwtl
jb
push
or
xchg
jle
out
insb
jmp
xor
mov
sub
addr16
ret
mov
cwtl
aad
sbb
dec
dec
rolb
mov
inc
inc
dec
into
inc
xor
cmp
movl
xor
and
pop
xor
das
fstps
push
add
sahf
shlb
icebp
loop
movl
enter
add
sub
sub
cwtl
daa
mov
cltd
int
and
mov
push
enter
mov
dec
stos
and
pop
lods
sub
push
cli
mov
in
adcl
add
pop
inc
mov
push
mov
ljmp
cmc
je
jmp
loope
fcmove
or
fcoms
sub
mov
clc
cmc
test
push
add
push
iret
lahf
jecxz
lret
sbb
jae
add
xor
push
rcll
inc
roll
xchg
dec
xchg
fistl
mov
inc
test
cmp
add
fucomip
inc
cmp
xor
xor
scas
add
jge
nop
ss
lods
lret
mov
xor
das
scas
cs
adc
sbb
or
inc
ffreep
lcall
xor
inc
inc
inc
sub
pop
mov
sub
sub
mov
lcall
pop
xchg
mov
cmp
out
mov
addr16
outsl
int
sub
cmpsl
neg
jp
xchg
movl
xchg
jp
nop
nop
or
or
lea
sub
xchg
push
movsb
jmp
cltd
add
je
sbb
xchg
popa
enter
shrb
push
lea
sbb
and
js
orl
add
jmp
in
rcrl
push
or
fcoms
jmp
out
lods
mov
cs
sarb
fidivs
xor
mov
cs
loop
cmp
pop
faddp
fs
jb
xor
xchg
jle
mov
inc
mov
inc
push
movsl
cmp
popa
sbb
lods
pop
sbb
dec
lret
or
pop
mov
dec
dec
sbb
pop
sbb
jp
rcrl
mov
call
sub
inc
mov
dec
test
jle
adc
in
out
dec
icebp
shrb
stos
jge
aad
daa
cmpsl
es
cmc
xchg
std
adc
mov
lock
lahf
push
add
je
mov
clc
mov
js,pn
jae
dec
test
adc
out
sub
pusha
pusha
fmull
dec
lea
inc
xacquire
mov
dec
xor
jno
test
jmp
sub
pusha
fcoml
dec
insl
in
pop
or
roll
adc
push
sahf
push
jecxz
std
push
aad
sub
ds
mov
outsb
xlat
cmp
mov
and
xchg
xor
xor
roll
pop
inc
mov
repz
mov
testb
jecxz
das
stc
and
stc
ret
inc
in
mov
decb
lock
cld
sbb
sbb
aas
out
jnp
pop
sub
adc
xchg
push
lcall
inc
xchg
cmpsl
sub
push
mov
jns
lods
sub
in
lcall
cmp
jecxz
movsl
dec
push
jae
shl
addl
xchg
daa
divl
mov
xor
imull
lret
push
pop
out
jle
adc
cmp
jnp
add
pop
les
cmp
stc
mov
outsl
or
push
and
pop
mov
nop
ljmp
xor
in
mov
shlb
insl
pop
sbbl
xchg
jl
mov
in
aas
or
das
scas
ret
insl
mov
ss
sbb
inc
shlb
imul
or
scas
enter
mov
sbb
push
xlat
lods
popf
sbb
incl
ss
in
inc
ret
lcall
imul
clc
cwtl
mov
jg
stos
notl
arpl
sbb
cmp
sub
repnz
and
addr16
addl
or
jge
loope
pop
divl
add
and
js
jle
xchg
adc
adcb
scas
push
jno
enter
or
jb
leave
mov
inc
jo
pop
int
loope
xchg
mov
cmpsb
inc
shr
fcoms
lds
ret
addr16
roll
push
iret
cmp
sub
jo
aam
cmp
insl
aad
xor
mov
mov
push
scas
add
stos
mov
sarb
out
pop
es
xor
filds
lds
arpl
ret
scas
das
fwait
aaa
ret
insb
jmp
mov
sbb
adc
xchg
dec
leave
in
or
xchg
inc
cltd
mov
lock
in
add
shll
inc
lret
cs
adc
mov
mov
cmc
adc
jp
scas
mov
rorb
push
mov
xchg
and
aad
test
repnz
mov
inc
bound
pop
test
out
addr16
jge
cmpsb
pusha
jne
je
add
cmp
adc
dec
out
jne
cs
mov
outsl
out
outsb
xchg
add
sbb
inc
mov
push
mov
sub
test
lret
mov
outsl
ljmp
mov
gs
or
jge
jbe
subl
outsl
outsb
lock
pop
les
push
imul
cmpsb
dec
out
dec
pop
js
cmp
int3
dec
cmp
jle
int
mov
dec
leave
dec
pmuludq
xor
pushf
lock
mov
mov
mov
sbb
push
lcall
add
sbb
cmpsl
ficompl
js
fstps
lods
sub
rorb
int
push
xchg
and
jle
fs
stos
jp
jle
sub
lcall
xchg
pop
push
addr16
fs
outsl
xchg
push
xchg
mov
sub
inc
pusha
ja
jbe
out
jns
int3
repz
cmc
adc
loop
es
lret
or
push
lds
bound
aam
pop
inc
add
mov
repnz
sahf
mov
push
fisubrl
lods
push
sbb
addr16
mov
fsubrs
xchg
sbb
scas
rcl
loopne
cmpsl
jge
roll
imul
jle
pop
imul
mov
popa
mov
cwtl
mov
xchg
adc
dec
inc
jno
ja
inc
lret
dec
les
cwtl
movb
add
decl
mov
out
addr16
aaa
movl
inc
fistpl
dec
aas
sub
push
and
sub
pop
xchg
es
stc
sub
xchg
adc
in
aas
push
xor
in
mov
jp
loop
inc
pop
addr16
jb
loop
jbe
xor
sti
out
icebp
and
lahf
divb
pop
jne
add
in
cmp
jbe
out
cmp
mov
xor
xor
jle
lea
out
and
lea
ret
mov
cmp
js
jb
loopne
pop
dec
into
fcmovnu
and
in
imul
push
ficomps
popf
sub
fstp
stc
fstps
adc
cmp
andb
iret
pop
aas
repz
nop
mov
out
mov
adc
fwait
fsubrs
fs
mov
mov
ret
add
adc
jnp
jp,pn
cmpsb
clc
popa
xlat
mov
or
add
pop
cmc
push
and
push
ljmp
out
xor
xchg
std
ja
jb
dec
inc
daa
out
je
mov
cs
popa
pushf
push
adc
and
outsb
cltd
mov
fcoms
fstps
add
jno
shrb
and
sub
lods
push
test
cmpsl
lods
clc
sub
sub
sti
and
and
jae
xchg
stc
adcl
sub
cld
and
dec
test
adc
out
xor
mov
fiadds
pop
mov
pop
pusha
dec
aam
add
test
faddl
add
sbb
lods
or
adc
inc
push
mov
push
shrl
loopne
stc
xor
jno
insb
jbe
xor
in
paddsb
sbb
rcl
adc
or
pusha
lret
ret
out
in
inc
cmp
scas
jbe
dec
leave
cmp
sub
jecxz
xor
mov
xor
add
dec
mov
pushf
cmc
and
xor
fstpl
fwait
sub
daa
mov
xchg
mov
xlat
popa
fimull
mov
mov
bound
int3
daa
pop
add
xchg
xor
cmc
dec
es
int
adc
xor
addr16
or
xchg
mov
dec
jle
popa
mov
sub
aas
and
or
loopne
sub
repnz
enter
sub
push
push
enter
pop
add
cmp
aam
mov
movsb
loopne
mov
jb
int
fdivrp
cmp
push
add
jp
cmp
xor
sub
add
add
xor
dec
mov
ss
fimull
ds
je
ja
jbe
jno
jo
jae
add
inc
mov
cltd
dec
xchg
fwait
inc
adc
sub
xchg
loop
lods
fistpll
data16
sub
push
test
sbb
fldcw
rorl
cmp
mov
mov
mov
outsl
sbb
lods
loope
fbld
xchg
cmp
jnp
aam
rorl
outsl
push
add
cmc
jle
push
sti
jp
cs
jo
xchg
mov
aas
hlt
cmpsb
push
mov
dec
dec
add
fcompl
xchg
push
dec
or
cmpsl
cs
add
push
jmp
push
mov
in
mov
add
inc
sbb
jns
aam
sarl
push
aad
sub
jle
inc
shll
jae
push
outsb
movsw
sub
mov
and
sbb
lcall
sahf
push
rol
or
insb
mov
mov
and
mov
or
xlat
mov
push
mov
cmp
leave
cltd
sbb
adc
xorb
adc
addr16
mov
sub
inc
cwtl
ret
lcall
cmp
testl
shll
in
cmp
mov
out
jl
and
movsl
in
mov
adc
sti
jbe
jl
or
divl
fdivl
xor
mov
lock
dec
dec
shlb
pusha
xchg
or
js
mov
mov
cmp
jbe
mov
faddl
push
out
mov
lock
cmp
cmpsl
cld
gs
ficomps
push
rclb
jmp
push
das
cs
stos
stos
cld
xor
cmp
cmc
pop
mov
insl
mov
cmp
rcrl
out
and
fistps
mov
inc
cmp
imul
mov
inc
fimull
ds
je
ja
push
dec
dec
into
dec
out
cmp
inc
icebp
inc
mov
adc
lods
inc
mov
push
mov
jg
sbb
xchg
ret
jb
sub
movsb
adc
andl
pusha
cmp
fs
scas
stos
gs
pop
ja
imul
fldl
and
out
outsb
add
ja
mov
jp
hlt
jl
or
mov
mov
lahf
push
outsb
jecxz
popf
inc
cwtl
shll
cmpsl
int
pop
fsubrs
lock
mov
repz
test
into
bnd
mov
fimull
push
or
test
mov
adc
pop
fcomip
inc
sub
xchg
or
sbb
pop
lods
out
loop
inc
push
nop
aad
mov
imul
mov
dec
xchg
xchg
mov
mov
pop
mov
mov
leave
leave
dec
mov
sub
push
mov
inc
mov
test
sahf
sbb
notb
lcall
inc
pushf
scas
jecxz
mov
sub
xchg
cmp
xor
sub
pop
imul
imulb
mov
out
pop
sti
sti
jp
inc
gs
imul
loopne
shl
cmc
je
dec
ja
int
xchg
nop
jnp
sti
jp
jbe
mov
into
jns
dec
popa
push
add
mov
xor
pop
pop
ficoms
mov
xchg
arpl
dec
pop
aam
loopne
mov
aad
in
std
sbb
popa
xchg
popa
aad
int3
stc
out
insl
fiadds
gs
cmp
fsubr
sub
int
mov
pop
xor
sbb
push
mov
and
gs
push
inc
push
cmp
lret
lret
dec
loopne
int
cmp
sti
ss
lock
push
push
and
test
mov
add
iret
je
sbb
adc
ds
mov
mov
and
fistps
scas
sbb
xchg
les
fildll
lret
mov
cmpsb
add
cmp
inc
mov
aaa
in
sub
out
cld
clc
ja
xchg
xchg
mov
call
or
cli
lret
lock
add
test
jl
in
xor
cmpsb
cwtl
mov
xor
dec
and
add
or
sahf
xor
and
sti
sub
jmp
or
rcll
lock
aad
iret
cwtl
fucomi
jb
mov
dec
push
push
fsubrl
out
ljmp
dec
incb
jnp
jle
test
imul
addr16
mov
xor
xchg
fistps
lea
push
int3
xchg
dec
xchg
data16
mov
in
or
mov
mov
pop
xchg
lahf
jb
cmc
push
rcl
sbb
into
ror
in
enter
hlt
jns
sbb
mov
pop
mov
std
insl
cmpsb
js
ljmp
inc
sbb
pop
hlt
repz
test
fdivrs
call
jge
in
pop
jge
fwait
pop
dec
divl
bound
pop
xchg
leave
fimull
pop
testb
shll
xor
jae
andb
mov
loop
loope
iret
fcmovnu
pop
fidivrs
into
cld
int3
xchg
loop
cltd
fstps
adc
cmp
cmc
test
adc
jo
loopne
fidivrs
int3
call
test
jae
jo
loopne
fildll
or
or
and
mov
cmp
cmp
push
push
or
sbb
and
das
scas
push
mov
das
repz
ds
inc
inc
lret
lea
arpl
inc
pop
pop
gs
das
mov
push
add
xchg
lahf
fnstsw
out
push
insb
mov
imul
lds
stos
mov
sub
dec
cwtl
pop
inc
sbb
out
in
fldenv
dec
push
rorb
in
sti
sti
jp
sub
neg
push
insl
sub
mov
divb
add
out
int
sarb
jbe
mov
cmp
dec
sbb
sahf
push
adc
lret
or
or
aam
insl
repnz
push
aad
rcrl
jle
loope
insl
push
insl
fistpl
loopne
or
push
xor
sbb
push
cli
jle
push
jp
sub
icebp
es
jae
negl
add
cmp
fwait
mov
pusha
aaa
scas
adc
jl
lock
int
dec
adc
jl
cmp
mov
lds
out
cs
je
add
sahf
shlb
clc
xorb
xor
loope
mov
xchg
mov
fwait
lcall
adc
daa
mov
cltd
lods
insb
cwtl
and
cmpsb
dec
insl
jne
pop
lahf
inc
push
addb
xor
lcall
orl
jb
jne
movb
outsb
jae
xor
dec
pop
cltd
xchg
jge
jl
out
pop
xchg
mov
addl
mov
in
aad
popa
loope
or
or
adc
push
mov
pop
mov
jb
push
loope,pt
push
iret
dec
jle
dec
rcrl
pop
fstpl
sbb
add
pop
fnstcw
sub
push
notl
dec
stos
stos
je
sarb
pop
xchg
sub
aam
fs
aas
dec
xor
mov
sarl
dec
into
push
test
lret
sub
ret
inc
dec
out
or
in
xchg
data16
outsl
dec
push
out
aaa
enter
out
loope
scas
ss
dec
xor
jl
push
jp
fstpl
popf
icebp
mov
les
jns
xchg
and
movsl
in
nop
ret
mov
dec
stc
insl
movsb
pop
push
gs
sub
mov
pop
movsl
fisttps
data16
or
dec
int3
lock
test
shl
cld
mov
mov
mov
testb
test
mov
scas
ja
xchg
xchg
pop
sbb
mov
fidivrs
mov
inc
cmp
insb
addb
imul
iret
pop
or
out
or
xor
fwait
add
dec
aam
cvttps2pi
mov
lock
in
cmp
out
push
sub
inc
mov
test
jecxz
jnp
sar
mov
in
lret
das
jl
lods
stc
leave
and
fisubrs
popa
scas
xchg
adc
lret
movl
jl
arpl
jae
and
xor
in
sbb
notl
out
jb
repnz
adc
test
sbb
lea
lock
and
jmp
arpl
mov
stos
jmp
ja
lods
adc
sti
adc
dec
push
sub
outsl
div
out
orb
decl
mov
and
movsb
add
pop
and
je
inc
outsb
jle
fwait
loope
sbb
iret
mov
inc
dec
pop
mov
ret
mov
lcall
sbb
pop
pushf
pop
fldt
xor
pop
fmuls
dec
xchg
fcomps
fstps
cmp
add
push
insl
lods
nop
add
mov
and
subl
js
addr16
shrl
xor
in
mov
cltd
inc
roll
jnp
iret
xchg
scas
jp
sbb
out
or
push
push
rorl
insb
dec
lret
inc
xchg
pushf
jae
cmp
dec
pop
sbb
adc
insl
scas
mov
pop
fwait
sbb
pop
iret
mov
fstps
xchg
and
arpl
aas
jle
insb
sub
insb
ret
es
rclb
movsb
and
sti
out
ret
loope
pop
aaa
testl
adc
scas
jge
push
insb
mov
add
cmpl
adc
outsb
xchg
xchg
push
loop
mov
sti
sarb
hlt
addl
sub
mov
daa
loop
dec
push
mov
adc
aam
pop
fsub
test
scas
pop
pop
adc
sti
stos
test
icebp
lret
jno
clc
inc
ljmp
mov
push
jnp
loop
enter
fisttps
xor
imul
outsl
xlat
adc
mov
jnp
or
sbb
das
dec
enter
push
int3
push
push
loop
dec
mov
mov
mov
xchg
mov
lds
and
xchg
popa
pushf
into
in
jecxz
sbb
push
lcall
push
push
cli
xchg
ret
jge
mov
cmp
cltd
scas
inc
sub
call
cmc
imul
add
push
addl
jl
mov
js
jns
lahf
jnp
jb
ss
lock
addb
or
mov
adc
pushf
xchg
dec
cmp
imull
repz
jmp
out
adc
and
mov
nop
hlt
scas
fstps
jle
insb
or
adc
dec
jge
mov
lock
or
jae
adc
out
sub
sub
or
divb
xchg
out
rol
stos
cmp
int3
jle
mov
mov
fnsave
sbb
cs
ret
nop
xor
xchg
gs
rorb
ss
cmp
mov
sub
stc
inc
sub
mov
int3
sbb
push
pop
pushf
pop
loop
insb
xchg
popf
fimull
int3
inc
xchg
cmpsl
roll
jge
shrl
add
push
push
in
call
iret
mov
fdivrs
cld
out
jle
jnp
cmp
imul
cli
push
jbe
inc
pop
sbb
popa
push
adc
sbb
dec
jge
push
cli
mov
cmp
push
add
jle
jne
insl
faddl
lret
sbb
jae
add
pop
in
fdivrs
pop
or
xor
movsl
jb
shrb
xchg
in
inc
pop
movsl
out
sbb
dec
leave
push
in
mov
push
inc
jecxz
out
lret
xor
stos
sub
adc
movsl
js
mov
pushl
das
movsb
mov
inc
push
push
in
push
or
loopne
dec
mov
cltd
dec
fcompl
cltd
stos
decl
mov
loopne
xchg
aad
sbb
daa
cmpsl
in
pop
into
std
test
push
and
pop
lahf
lret
out
je
cmp
jb
inc
mov
insb
clc
ja
out
psrad
mov
cmpsl
pop
orb
outsb
ret
aad
cmp
rclb
mov
mov
cld
sub
pop
test
outsb
xchg
adc
xchg
bswap
mov
mov
pop
or
sub
repz
jmp
and
dec
lret
fimuls
jnp
cmp
mov
cld
xchg
loopne
gs
shlb
cld
out
inc
adc
cmp
push
in
jbe
in
inc
test
shll
inc
out
fsub
mov
out
hlt
sub
xor
aas
pop
pop
push
jbe
push
inc
lds
pop
enter
jp
cltd
dec
shll
xor
push
add
stos
jmp
xchg
push
mov
int
pop
push
rclb
rcr
and
ds
addb
dec
lahf
push
lret
ljmp
insb
jge
fnstenv
divl
add
pop
hlt
jae
or
pop
and
clc
push
into
xchg
adc
scas
dec
mov
jp
ljmp
rcl
test
add
pushf
or
add
sbb
popa
test
push
pop
movsl
les
cmp
push
pop
jo
xor
jle
pop
mov
sbb
decl
les
push
push
lods
adc
sub
jb
xchg
in
fs
push
movsl
in
in
mov
lcall
daa
js
mov
ljmp
subb
mov
add
enter
lods
cli
fstpt
out
arpl
mov
mov
in
and
lret
dec
mov
popf
test
cmp
dec
cmp
fwait
xchg
add
xchg
cmc
mov
mulb
in
pop
and
pop
outsb
cltd
mov
inc
inc
adc
jnp
int
add
in
sahf
leave
aas
scas
sub
in
arpl
loopne
in
push
test
fisubl
push
test
sub
scas
jge
in
mov
xor
sub
fcompl
outsb
adc
loope
or
mov
decb
repz
into
mov
fwait
sbb
fldl
add
mov
xchg
xchg
sbb
addr16
fistpl
pop
aam
shll
xchg
outsb
cwtl
push
push
mov
xchg
movsl
fsubs
push
imul
and
int
inc
jno
icebp
je
mov
ret
fdivrl
fstpt
les
lds
add
dec
lret
jno
sbb
in
sbb
pushl
je
adc
mov
or
xchg
pop
lret
mov
xchg
push
dec
mov
sbb
mov
aad
cmp
popf
sub
shlb
loop
xlat
movsb
mov
movsl
and
je
outsb
pop
hlt
mov
or
add
sub
in
js
dec
call
fists
pop
popa
mov
pop
ret
cmp
inc
mov
mov
cmp
pop
push
ffree
cmp
ret
loop
loope
in
imul
or
inc
pop
jle
icebp
dec
push
or
shrb
cmp
hlt
jne
lahf
clc
loop
mov
mov
mov
test
jecxz
push
push
shl
ret
add
sbb
enter
jo
leave
dec
jmp
lea
test
lret
testb
mov
jne
push
dec
loope
inc
cld
test
jae
outsb
popa
ret
xor
popa
dec
popa
scas
sub
mov
adc
inc
test
push
mov
mov
addr16
pop
lock
arpl
fisubrs
xchg
adc
jle
movsb
add
adc
andl
repnz
mov
jns
mov
jecxz
push
test
and
out
or
pop
test
mov
or
or
sahf
fiaddl
pop
jno
into
repnz
loope
fcompl
dec
insb
call
leave
jmp
ret
mov
cmpsb
mov
divl
xor
push
das
sub
ret
mov
data16
scas
push
mov
mov
cs
int
lods
test
clc
fidivrs
out
or
xchg
mov
or
jl
fwait
sarl
sahf
xor
pusha
repz
in
cmp
icebp
jbe
xchg
and
adc
sub
or
xor
pop
mov
and
and
stc
divl
pop
sti
loop
cwtl
subb
in
fstpt
jne
test
add
int
es
repnz
imul
pop
jg
shll
mov
hlt
and
sub
fnstsw
nop
or
push
pop
out
pop
frstor
inc
mov
cmc
xchg
mov
in
mov
xchg
sbb
push
mov
fldt
dec
fstpl
lret
fcomi
dec
pop
lea
sarl
aaa
mov
mov
jno
cmp
scas
mov
es
insl
xor
sbbb
push
xchg
mov
daa
push
pop
ficomps
sti
jp
cmp
jge
mov
dec
adc
xor
pop
xor
inc
enter
mov
add
sahf
test
sbb
or
inc
xor
mov
mov
lcall
lock
fnsave
sbb
lret
inc
pop
add
push
sbb
or
mov
aas
out
je
bswap
jle
lock
cld
jecxz
cltd
daa
lods
sub
sub
fsubrp
bound
fisttps
data16
or
js
addl
jl
in
mov
mov
cmc
das
pop
cmp
lock
cld
inc
or
push
sar
mov
jns
mov
ds
jl
aas
outsb
loop
loope
push
dec
fldt
fiadds
push
sbb
nop
repnz
subb
add
callw
pop
movsl
repnz
jns
mov
push
gs
pop
push
out
jmp
fwait
cmp
loope
mov
sbb
sub
mov
cmpsb
mov
adc
movsl
bound
sbb
test
iret
out
andl
nop
sbb
into
aaa
aam
pop
xchg
shl
or
pop
add
push
adc
mov
sub
push
mov
push
cvtps2pd
stos
adcl
mov
sub
xor
ja
mov
hlt
jae
cli
out
mov
mov
or
outsl
cli
add
out
or
add
push
outsl
xchg
sub
or
ret
pop
into
lea
pop
mov
leave
mov
mov
test
fidivl
pop
pop
insb
shll
pusha
or
xor
cwtl
add
ljmp
out
in
xchg
pop
cmpsb
repz
loope
sarb
xor
test
xlat
sbb
imul
xchg
dec
pop
sbb
add
lock
xor
mov
sub
cs
dec
adc
outsb
mov
ds
push
rcr
xchg
pop
push
cmp
cwtl
dec
cmp
fidivrs
leave
jge
add
xor
xor
mov
mov
adc
dec
push
cmp
jo
pop
push
push
sbb
mov
lret
push
cmp
sbb
sbb
fildll
adcb
hlt
sub
cli
addr16
and
cli
cmp
fcmove
ds
jp
add
icebp
push
pop
xchg
xor
mov
shl
loopne
lcall
push
dec
test
pop
cs
lret
push
add
inc
or
mov
jg
roll
xor
push
and
ret
sbb
pop
rcrb
int
pop
fcmovnu
sub
scas
scas
add
loopne
add
push
loope
test
and
pop
mov
out
cmp
mov
out
adcb
sbb
test
ss
push
movl
daa
inc
lret
cmpsb
pop
jecxz
outsl
mov
xchg
or
faddl
orb
add
cmp
cmc
xchg
inc
adc
je
sbb
sub
xor
popf
jno
fadds
stos
icebp
push
insl
insb
inc
add
cmpsb
cmp
xor
cmp
cld
les
loop
jl
sub
test
jb
mov
fcmovne
ret
or
xorb
in
mov
jl
out
mov
push
popa
xor
inc
outsb
jle
movlps
mulb
or
js
pop
fmuls
cmp
fldl
into
repnz
fcomps
mov
insb
call
dec
pop
push
fmuls
aas
pop
inc
idiv
mov
lcall
ret
ret
mov
cmpsl
mov
loope
inc
fisubrl
adc
cmp
add
mov
dec
les
in
lret
imul
jnp
sahf
rcrb
dec
xor
inc
sbb
inc
adc
sub
jbe
adc
scas
and
pushf
inc
xchg
push
xchg
cmp
jmp
outsl
outsb
inc
add
out
subl
inc
pop
ljmp
sub
out
mov
aad
lock
cmp
xor
aad
mov
jp
jo
out
or
push
mov
lret
or
add
pop
aam
inc
nop
pusha
xchg
dec
adc
rol
aaa
push
fimull
add
mov
pop
je
xlat
fs
pop
insb
shll
pusha
jmp
lahf
insl
push
pop
or
ljmpw
dec
push
bound
testl
cmp
frstor
xchg
test
cmp
mov
ss
xor
inc
dec
sti
lods
push
int3
adc
adcb
cmp
ret
mov
mov
inc
fcmovu
and
imul
push
pop
push
cmp
cwtl
dec
xchg
jle
sbb
inc
and
cmpb
mov
jo
pop
push
dec
or
cmp
aam
inc
cmpsb
in
adc
inc
lcall
add
add
insl
jnp
das
sbb
push
in
jecxz
sub
daa
in
fisubl
outsb
xchg
xchg
xlat
push
pop
sub
out
jl
push
and
mov
add
test
jno
inc
jp
loop
pop
dec
and
rorb
arpl
cmp
mov
cli
jne
cmp
pop
push
push
push
dec
push
in
aam
addr16
pop
add
fs
adc
enter
and
jae
push
rcrb
pop
sub
aas
push
xchg
xor
test
mov
dec
xchg
sub
adc
mov
jle
dec
adc
lcall
mov
leave
call
jmp
dec
out
jl
cwtl
jg
mov
cltd
cltd
sbb
pop
sbb
mov
jne
push
fwait
ja
xchg
or
xlat
adc
adc
mov
add
out
andb
inc
gs
rcll
xchg
cs
std
push
repz
jle
roll
div
andl
lea
call
mov
addr16
int
je
pusha
pop
pushf
cmp
nop
or
ret
adc
mov
inc
loope
add
stos
rolb
test
into
repnz
and
xor
insl
loope
rorb
ljmpw
arpl
cmpsb
stos
inc
or
or
repz
inc
subb
xlat
sbb
fimull
imul
out
cmp
das
scas
sarl
imul
and
cmc
repnz
mov
test
mov
or
pop
mov
cmp
addr16
push
out
cmp
jg
and
xor
xchg
dec
xchg
lcall
ljmp
adc
ja
pop
aad
sbb
mov
mov
pop
ss
mov
and
inc
lahf
out
mov
and
xor
mov
fidivrl
sub
pop
xlat
adc
pop
out
testb
jns
in
mov
orl
cmp
mov
sub
loope
pop
popa
add
jle
shll
mov
lcall
push
xor
cs
push
and
and
imul
dec
out
sub
dec
imul
add
mov
xchg
lcall
cli
sbb
cmp
ds
fnstenv
mov
fwait
mov
xchg
dec
push
adc
icebp
inc
jns
xor
mov
lock
out
adc
cmp
xor
outsl
pop
rcl
push
sbb
into
test
lahf
mov
adc
jle
add
nop
out
mov
fistpl
das
out
int
cwtl
jo
mov
adc
and
mov
jo
jl
fistps
inc
cmpsl
bound
das
and
inc
pop
push
add
leave
aad
jnp
xor
mov
or
cld
sub
js
lret
xor
jbe
cmc
sbbl
mov
dec
ljmp
loop
gs
int
add
pop
bound
insl
movsb
lods
mov
xchg
aad
xlat
fcom
push
jmp
pusha
or
push
imul
pusha
mov
jno
and
push
outsl
outsb
in
cmp
int3
xlat
addr16
xchg
fs
cmp
xor
jns
jl
cmp
mov
aaa
mov
adc
cltd
gs
enter
mov
enter
inc
rcll
xchg
fwait
lret
dec
into
push
roll
pushf
pop
leave
scas
out
adc
inc
xor
fcomps
shll
jae
mov
dec
cmp
cltd
lret
push
xchg
adc
lgs
xor
dec
mov
lret
add
cmpsl
es
stos
mov
lret
add
lahf
mov
cld
jnp
inc
add
std
add
xchg
sub
or
cmc
je
lcall
rorb
or
jbe
mov
jmp
jb
xor
adc
pop
pusha
in
sub
sahf
pop
add
sub
shrl
je
push
iret
stc
mov
mov
scas
ljmp
loopne
and
imul
enterw
icebp
push
icebp
shll
mov
mov
mov
cmp
or
push
scas
das
scas
cs
ret
popa
int3
push
xchg
sbb
aaa
mov
les
push
pop
jp
stos
ljmp
push
pushf
push
aam
negb
push
outsl
lcall
mov
inc
xchg
cmpsb
and
and
ss
repz
cwtl
jns
cwtl
daa
and
mov
jne
and
mov
mov
mov
push
jge
inc
or
movsl
mov
or
aaa
and
push
adc
lds
enter
mov
xchg
or
testb
insb
test
loope
cmpsb
imul
fcoms
adc
lock
lods
cmovno
inc
push
pusha
iret
dec
jne
xchg
jno
cmp
jmp
cmpsb
in
sub
pushf
fldcw
adc
mov
dec
pop
fidivrs
cmp
jo
dec
les
enter
mov
mov
xor
aas
mov
rcrb
dec
loopne
mov
and
sbb
lds
xor
xor
int3
int3
test
mov
add
xchg
scas
outsb
rolb
jmp
cmp
shll
mov
imul
and
cmp
aad
jge
loopne
out
xchg
cli
mov
or
add
jne
sub
or
sub
and
xchg
fs
outsl
and
pop
rcll
adc
rorb
mov
mov
aad
cmpl
jno
in
push
jne
pusha
mov
and
fwait
aam
inc
mov
pop
or
adcb
adc
repnz
sbb
lods
out
inc
test
mov
mov
lret
imul
mov
enter
cmp
or
xor
aas
mov
test
sahf
lret
fistps
decl
pop
ret
ret
push
inc
xor
adc
stc
ja
mov
stos
arpl
jb
jno
sbb
stos
sbb
cmp
outsb
mov
fstps
add
scas
push
lods
push
stos
jp
jbe
push
test
pop
sub
cld
es
divb
je
pop
push
inc
add
or
dec
mov
ja
shll
iret
clc
mov
pop
sub
dec
jg
fisttpl
fcoms
lds
ret
ja
roll
push
iret
mov
bound
icebp
jo
insb
mov
ficomps
jecxz
das
stos
push
adc
pop
mov
arpl
ds
adc
loopne
cmpsb
repz
jbe
subl
in
fidivrl
push
xchg
es
jecxz
aas
nop
lds
push
xchg
inc
push
cs
pop
cmp
ss
insb
enter
cli
imul
icebp
mov
adc
sub
dec
mov
int
fistpll
sbb
sbb
subb
pop
dec
ret
xlat
mov
cmc
dec
je
sbb
test
mov
sbb
add
adc
and
in
jmp
adc
xorb
std
fisubrl
lret
es
add
hlt
jae
jle
xchg
cmc
je
inc
mov
nop
or
push
jbe
lods
or
xchg
sub
adc
cmc
cmp
adc
shrl
iret
mov
xchg
ret
bound
add
adc
xchg
adc
jo
aam
mov
insl
xor
xchg
sub
push
insl
sub
push
lods
xchg
add
bnd
test
pop
cmpsb
scas
fdivrl
sbb
mov
sti
inc
daa
push
xor
fidivrs
cmp
int3
dec
les
add
adc
repz
cli
call
faddl
xor
mov
dec
mov
int
xchg
int
sbb
inc
xchg
jae
sub
popa
icebp
mov
aam
mov
sub
cmpsl
es
jb
shl
mov
test
mulb
icebp
lods
movsb
arpl
add
mov
cli
sub
std
push
and
cmc
mov
int3
inc
xor
mov
imull
ja
xchg
cmp
dec
hlt
mov
scas
lret
dec
lock
jle
dec
xchg
add
pop
fildl
cmpsb
lds
jnp
xlat
push
mov
xabort
push
rcr
pop
mov
pushl
and
neg
pop
cs
jnp
bound
jo
sub
ljmp
xchg
out
jmp
xor
lds
mov
adc
xorb
cmp
shlb
leave
dec
jmp
xor
insb
push
fdivl
shl
mov
in
aas
ds
xor
dec
dec
xor
xchg
popf
ret
out
addr16
mov
ja
into
sub
rorb
pop
imul
cmpsl
jge
xor
addr16
cs
push
neg
jmp
pop
push
jns
movsl
je
mov
xchg
cmp
or
jp
jl
jae
and
jg
push
lahf
and
jb
jecxz
sbb
rclb
mov
and
and
cld
mov
iret
cmp
icebp
jo
pop
mov
dec
pop
mov
sbb
scas
fdivs
jecxz
push
sub
test
pop
dec
mov
jmp
and
push
insb
dec
pop
clc
jecxz
aas
test
xor
cltd
mov
in
mov
pop
movl
repz
xor
das
mov
push
test
orl
mov
inc
cwtl
out
inc
cltd
cwtl
jg
mov
mov
sbb
daa
mov
sbb
outsl
outsb
push
movsl
and
test
into
aam
xor
pop
loopne
mov
fisubs
loope
cltd
das
cli
xlat
push
enter
mov
mov
cld
sti
add
xchg
nop
add
std
push
movsb
lcall
mov
add
and
pop
dec
dec
nop
jo
pop
xchg
pop
vpaddsw
mov
mov
mov
pusha
add
dec
into
push
mov
push
insl
in
orl
jmp
dec
adc
stos
into
outsb
inc
shll
jecxz
push
mov
addr16
fs
mov
jns
push
xchg
mov
inc
into
test
mov
insb
enter
sub
xchg
and
inc
ret
ss
mov
mov
test
sahf
sbb
cmp
jmp
dec
inc
sub
out
sub
sub
dec
sub
xchg
es
mov
xchg
sub
jle
adc
in
out
dec
icebp
shrb
push
jge
sub
cli
jns
xchg
mov
rclb
mov
stc
mov
lods
push
sub
sarl
mov
mov
or
mov
test
jle
int
pusha
fcompl
rcrb
push
xlat
push
mov
cmp
adc
aad
sbb
push
bnd
pusha
fcompl
daa
push
in
insb
mov
xlat
ljmpw
arpl
sarl
aaa
jb
sub
pop
mov
push
aaa
mov
movsb
push
popf
mov
dec
std
cmp
iret
das
scas
sbb
int
int3
dec
xchg
mov
add
mov
movsb
and
inc
dec
push
or
imul
adc
sbb
cmp
cwtl
pop
or
ss
adc
aas
mov
inc
pop
cmp
inc
dec
push
add
xchg
out
aam
mov
xor
das
mov
jp
arpl
mull
bound
cwtl
mov
jae
popa
xlat
pop
jge
add
cmpb
mov
or
fdiv
test
lock
push
or
mov
fxch
outsl
jle
movsl
lds
dec
mov
inc
sti
xlat
push
push
loop
push
mov
iret
jecxz
push
mov
jmp
rcr
xchg
mov
ljmp
push
out
cs
cli
stos
std
test
and
mov
addr16
ret
mov
adc
dec
pop
mov
mov
flds
jbe
or
aad
test
pop
xchg
xor
push
mov
sub
cmp
dec
les
xor
jno
mov
mov
sbb
daa
mov
sbb
aaa
xchg
pop
xchg
pop
and
mov
jmp
dec
repz
mov
jmp
add
adc
js
xchg
and
dec
inc
movsl
add
cmp
sub
outsb
mov
mov
movsl
add
repnz
andb
inc
jbe
fcoms
cmc
loope
stc
mov
mov
push
cmc
aad
add
lahf
push
loop
aad
mov
push
mov
nop
repnz
in
or
push
aaa
adc
test
pop
mov
popa
mov
insb
push
pop
clc
jecxz
aas
rcll
mov
push
jmp
jb
xor
stos
into
dec
aas
sub
arpl
dec
les
in
inc
in
movb
xchg
scas
or
into
dec
int
mov
fildl
cmc
fistpl
sbb
add
iret
mov
pop
mov
scas
sub
pop
inc
sub
rcll
insl
incb
lahf
stos
push
and
sbb
mov
cli
jns
rclb
jae
jb
cmpsb
gs
out
mov
fmull
fisttpll
push
cltd
js
ds
cmp
cmp
cmp
sbb
cmp
mov
and
xor
sarl
loop
xor
rcrl
fldt
mov
call
std
fldcw
add
xor
mov
inc
sub
fwait
cmp
cmp
std
call
ss
push
pop
inc
iret
ficomps
mov
cli
push
dec
int
inc
imul
fneni(8087
ret
pop
in
push
xchg
push
mov
inc
dec
mov
adc
adc
mov
pop
sahf
sbb
cmpsl
es
sub
and
cmc
adc
mov
ljmp
or
fnstsw
cld
rcr
sub
and
xchg
mov
xchg
xlat
push
shl
stos
push
pop
xchg
mov
mov
dec
lahf
add
dec
popf
jno
pusha
mov
mov
js
ficompl
test
adc
jae
aad
push
bnd
dec
in
jg
add
roll
imul
loopne
fildll
cld
mov
xor
adc
paddsb
inc
push
cmp
xor
inc
scas
das
scas
mov
loopne
mov
dec
int
adc
pop
inc
lret
les
fsubl
xor
scas
push
add
hlt
inc
int3
dec
jecxz
or
cmp
cltd
fistpl
mov
jo,pn
sahf
jmp
xor
pop
sbb
pop
xchg
jae
ret
dec
sub
movsl
and
in
mov
pushf
arpl
mov
pop
pop
jbe
loop
xchg
aam
repz
data16
add
iret
out
outsb
xchg
out
or
jns
or
xchg
mov
jae
andb
mov
repnz
loope
push
jge
and
mov
jnp
xlat
je
in
js
cmp
or
dec
into
out
aaa
xor
pop
xchg
arpl
push
mov
loopnew
int
jmp
push
clc
push
xchg
push
push
sbb
stos
jnp
sarb
dec
std
xchg
test
out
jmp
mov
inc
xor
fidivrs
cs
xchg
mov
xor
lea
arpl
adc
inc
ret
or
xchg
jmp
in
push
rcrl
iret
mov
leave
sbb
add
js
gs
std
xor
sbb
cld
sub
pop
cwtl
daa
mov
stos
pop
pop
mov
push
jbe
repz
push
into
xor
mov
push
insl
ljmp
pop
sub
sub
jb
and
sub
xchg
out
lds
sub
cmc
stos
or
xchg
xchg
mov
hlt
jae
repz
je
inc
aam
loop
push
xor
mov
testl
ss
add
fistl
mov
pop
push
jb
into
push
in
icebp
dec
daa
mov
int3
call
cmp
add
sub
xor
jb
roll
cwtl
sbbb
inc
std
call
xchg
imul
iret
in
mov
cmp
movl
xor
and
or
loop
dec
mov
cmp
pop
cmp
roll
dec
leave
sbb
xchg
sub
lock
xor
sbb
xlat
icebp
outsl
lcall
cmp
dec
inc
adc
imul
bound
lock
sub
stos
sbbb
push
arpl
and
out
outsb
pop
or
ret
lods
jnp
jmp
mov
out
or
inc
stos
and
or
into
int
loopne
call
loop
sbb
shrl
sti
inc
cmp
je
test
aam
pushf
aas
xorl
jle
fldcw
int
cli
and
loopne
dec
int3
push
adc
inc
test
in
stos
sbb
xchg
jg
out
test
daa
pop
popf
cmp
out
ljmp
addr16
push
push
push
rcll
outsb
stos
lret
dec
aaa
xor
adc
bound
mov
and
loope
xor
jecxz
aam
jno
int3
add
mov
cmp
lret
cld
pop
outsl
inc
movb
push
lret
sbb
adc
push
sub
pop
pop
stos
icebp
sbb
popf
loope
and
shrb
ret
add
cmp
out
sub
daa
mov
sub
jle
and
pop
mov
scas
pop
sti
mov
cmp
stc
int
cmpsb
jecxz
push
sbb
mov
xchg
dec
adcl
jns
ficompl
idivl
repz
dec
and
pop
xor
out
and
out
filds
inc
pop
sbb
test
inc
idiv
sbb
imul
pop
sbb
sarl
data16
dec
shrl
mov
stc
adc
adc
mov
mov
repz
mov
inc
mov
cmp
dec
jmp
xchg
fwait
inc
pop
sbb
cmpsb
mov
imulb
cmpsl
out
out
sbb
in
mov
lret
dec
lods
mov
dec
push
adc
iret
mov
and
mov
and
mov
std
mov
rorl
ss
test
shll
leave
mov
int3
pop
xor
stos
leave
pop
mov
lods
add
jnp
or
jle
xor
add
pop
aaa
or
ret
and
jmp
mov
adc
rcrb
lret
sbb
jae
cltd
xchg
mov
arpl
shll
push
jo
mov
add
mov
and
jle
movsb
sbb
jg
xor
scas
jno
mov
mov
jl
ss
push
es
mov
xor
jne
add
dec
outsl
pop
ljmp
into
add
cwtl
pop
xchg
inc
add
inc
js
xor
inc
sbb
jle
les
arpl
or
mov
pop
test
sbb
inc
inc
push
addl
mov
sub
divl
mov
mov
jne
and
pop
xchg
dec
push
add
cwtl
sbb
pop
out
mov
ss
movsb
jae
bswap
hlt
add
cs
loope
adc
pop
js
loopne
or
mov
ret
pop
aam
add
test
call
jo
imul
stc
and
adc
xchg
scas
into
sbb
cmpsb
in
adc
cmp
push
sub
xor
shll
bound
push
sbb
andl
jecxz
aas
and
push
bound
inc
bnd
cmp
jns
aas
and
xchg
clc
leave
dec
les
in
in
mov
inc
push
xchg
push
push
fisttps
xchg
mov
mov
sti
cltd
inc
inc
test
adc
cmc
and
sub
push
rolb
push
int
xchg
xchg
iret
out
xchg
xchg
cld
je
insl
icebp
add
enter
std
jl
mov
stc
pop
jl
repz
pop
cli
inc
lock
out
push
sbb
push
je
or
shll
xchg
mov
movsb
xor
andb
aad
mov
lods
inc
lret
fcompl
adc
mov
xlat
loop
pop
fstps
divb
pop
cmp
sbbl
cmp
leave
fistps
pop
add
push
xor
pop
push
aam
add
mov
xchg
sub
imull
es
icebp
cmp
jmp
lahf
jo
sub
mov
ss
inc
int3
mov
cmp
mov
inc
in
scas
xor
ss
xor
jb
jmp
adc
jmp
push
orb
inc
test
mov
pop
jns
sbbb
sarb
and
insb
notb
push
bndldx
and
int
push
addr16
scas
out
leave
in
sub
popa
in
and
jp
sub
pop
data16
jmp
jnp
mov
mov
inc
xchg
or
push
push
neg
mov
js
sub
xor
ret
sbb
hlt
adc
inc
leave
pop
mov
and
enter
xchg
push
pop
inc
cmp
out
out
sbb
pop
sub
push
sbb
dec
xchg
and
or
in
rorb
push
xor
out
in
mov
cmp
addr16
sbbb
loope
sbb
aaa
add
xor
and
xor
adc
push
imulb
outsb
cmpsl
int3
cmpsb
popa
pop
mov
in
fmuls
mov
push
lods
sbb
mov
push
leave
dec
xchg
jns
mov
inc
sbb
sub
fiaddl
fbld
pop
xchg
mov
pop
test
adc
sbb
pusha
push
lret
sub
dec
sbb
inc
neg
outsb
leave
insl
sub
adc
stc
hlt
push
xchg
mov
lock
lods
sarl
out
sub
add
lock
rcrl
cs
out
push
fcmovu
shl
push
fiaddl
js
cmp
pop
cmp
into
repnz
fistl
cwtl
stos
jecxz
shrb
mov
sti
xor
push
in
cltd
into
sub
cmp
cmp
je
mov
in
inc
inc
adc
cmp
inc
mov
mov
test
xchg
les
lock
ljmp
adc
and
les
popa
xchg
add
xor
sbb
jne
je
add
sahf
rcrb
push
lcall
sub
sbb
lahf
mov
dec
fwait
push
rcll
pop
cli
sub
jb
and
jae
sub
add
inc
sub
divl
xchg
loopne
xchg
and
jle
repnz
sbb
lahf
push
test
cmp
jo
stos
and
mov
mov
cltd
mov
dec
fcmove
loop
xchg
call
inc
sti
mov
mov
popa
mov
push
shrl
std
mov
add
cwtl
test
pop
pop
stos
cmp
jmp
or
sti
or
adc
mov
sarb
in
jecxz
jg
in
loopne
mov
mov
repz
mov
push
ret
inc
mov
dec
push
nop
add
pusha
sbb
add
inc
jecxz
xor
dec
mov
inc
lret
mov
xor
sbb
mov
sarb
cmp
mov
cltd
sbb
xchg
jb
scas
jecxz
icebp
sub
fwait
rcrl
jmp
stos
cmc
mov
or
mov
adc
iret
mov
mov
dec
stos
push
mov
lods
popa
pusha
push
pop
jbe
adc
push
data16
and
cmp
dec
popa
xchg
nop
add
or
aas
cli
cld
jns
enter
fstl
test
adc
add
jmp
xlat
cmp
sub
mov
cmp
repnz
test
jle
in
adc
pop
add
mov
dec
js
pop
or
sbb
add
ds
inc
shll
mov
insl
jae
sar
out
inc
sbb
xor
int3
push
nop
in
in
jns
cmp
mov
or
jmp
dec
leave
dec
movsl
popf
rcrb
mov
mov
bound
pop
pop
int3
dec
mov
int
addr16
dec
cltd
jbe
mov
inc
push
xor
mov
fwait
lods
push
mov
mov
mov
scas
or
int3
fcoml
ljmp
insb
xchg
mov
hlt
bts
xchg
cmp
push
scas
sub
imul
ret
add
repz
lock
mov
xor
sbb
lock
jl
lock
jne
dec
loope
push
test
jle
popa
mov
daa
mov
aas
fsub
iret
data16
ss
adc
ljmp
andl
or
dec
cmpsl
push
fidivrl
jl
rcll
es
push
lcall
movsl
movsb
sahf
dec
mov
repz
out
inc
push
test
mov
loop
inc
int
xor
gs
hlt
xor
lcall
movl
xor
mov
xchg
lds
cmp
or
fwait
lods
sbb
cmp
pusha
repz
dec
sahf
popf
jae
xchg
adc
aas
fsubs
fwait
lcall
adc
daa
mov
cltd
mov
cmpsb
add
cmp
aam
out
sti
mov
jp
cwtl
inc
scas
cwtl
daa
aas
xlat
jmp
test
int
jne
test
sti
jle
adc
jp
cmp
dec
clc
jo
popa
fimull
and
pop
xchg
inc
lds
pusha
fcompl
push
test
nop
out
ficompl
lret
add
inc
je
add
jmp
addl
pusha
push
pop
add
mov
dec
fmuls
clflush
xor
mov
sti
outsb
and
movsl
xor
cmp
imul
mov
dec
push
mov
aam
sbb
inc
cli
cmp
int3
dec
in
into
sbb
enter
and
push
pop
push
inc
lds
dec
pop
push
in
pushf
ja
jbe
pop
push
xchg
lods
sbb
dec
cmp
sbb
leave
jge
add
inc
dec
sub
mov
sub
pop
cwtl
mov
out
in
add
and
cmp
stos
sub
or
clc
ja
fsubr
leave
insl
sub
and
aad
outsl
jp
loop
xchg
nop
insl
inc
sbb
add
jle
popf
js
ja
jb
dec
loopne
add
popf
inc
loopne
nop
movsb
fcoms
push
xor
push
fimull
rcll
xor
hlt
movsb
jg
cmpsl
les
loope
push
stos
cmp
bound
add
xlat
nop
rdmsr
test
lret
aas
ss
sarl
cmc
dec
mov
or
push
imul
and
xor
pop
mov
xchg
cmp
sbb
pushf
enter
jl
std
cmp
sub
bound
mov
ja
push
aad
loop
popf
test
daa
xchg
push
lcall
sahf
out
and
imul
jnp
sub
pop
cmpsl
or
leave
fstpl
in
or
iret
out
rclb
cmp
loop
pop
shrb
mov
mov
inc
sub
daa
es
addb
nop
or
lret
inc
pop
jge
cmp
sti
repnz
divl
push
push
fnsave
add
dec
dec
xor
ss
pusha
movsb
fcom
mov
mov
or
cli
cmp
test
and
out
in
add
out
ficomps
jne
nop
pusha
test
fstps
test
adc
ja
into
cld
mov
loopne
aad
pop
mov
mov
cmp
pushf
xchg
addr16
ds
les
scas
sbb
pop
push
push
fadds
ljmp
sub
imul
femms
xchg
lds
mov
push
inc
test
sbb
xchg
push
lret
icebp
movsb
adc
cltd
push
jle
aas
pusha
fwait
push
push
dec
std
sub
jo
inc
cli
sub
outsb
add
and
imull
ljmp
je
jge
sub
stos
addb
nop
mov
lret
ret
pop
jns
xorb
jp
cmc
lods
jno
gs
push
or
dec
out
add
push
jg
popf
ss
pusha
movsb
fcom
mov
mov
fistpl
cli
aam
xor
or
test
and
add
xor
or
insl
in
pop
mov
mov
sbb
push
aad
test
out
inc
or
add
movsw
mov
aaa
lea
mov
mov
dec
dec
out
push
dec
pop
sbb
add
dec
into
cmc
xor
ss
sub
or
mov
lea
pusha
pop
aas
scas
push
sbb
push
int3
dec
jecxz
jp
lods
sbb
or
cmc
loope
xchg
inc
fistpl
jns
imul
jne
push
adc
sub
or
ficoml
sub
inc
out
out
shrl
ja
nop
cld
jnp
push
fistl
lods
insb
daa
out
cli
add
js
lret
inc
dec
cmpsb
jle
lock
out
xchg
jae
push
pop
or
es
xor
lods
lret
mov
leave
and
lret
lret
jo
nop
dec
inc
cmp
pop
or
pop
fincstp
jmp
rcll
xor
pop
pop
lods
ja
repnz
imul
out
aad
mov
mov
fldcw
cmp
xlat
insl
sbb
dec
sub
fldt
mov
inc
and
ljmp
pop
inc
mov
aas
sbb
jnp
add
xor
inc
outsb
cmp
mov
stos
cmp
mov
in
push
in
cli
loopne
dec
hlt
icebp
mov
dec
inc
xchg
jno
pop
icebp
dec
in
dec
sahf
popf
mov
mov
ja
aas
imull
add
xchg
test
sbb
mull
lahf
sub
scas
push
dec
jmp
popl
dec
subl
push
jge
jl
lods
inc
out
stos
ret
pop
jnp
and
pop
jl
outsl
jbe
sti
cli
add
fmull
push
jl
lock
cmpsl
loop
mov
sub
into
loop
enter
fildl
xchg
in
pop
inc
inc
stc
repz
push
loopne
clc
insb
jo
xor
and
xchg
cmp
test
jmp
mov
adcl
into
out
popa
rcrb
and
mov
and
mov
les
mov
stc
xor
pop
add
inc
out
adc
mov
dec
insl
mov
scas
push
inc
push
dec
mov
or
push
stos
sbb
test
inc
jecxz
xchg
lret
jb
scas
jecxz
test
inc
xor
stos
sub
cmpsl
mov
dec
pop
xchg
sahf
sub
pop
push
cmc
and
dec
fmull
xchg
and
mov
mov
mov
jbe
orl
notb
sti
lret
xchg
nop
or
sti
bound
cli
jne
adcb
or
lods
int3
and
push
push
or
or
sbb
jo
and
xchg
push
insl
fisttpll
bnd
cmpb
mov
add
jmp
xchg
xchg
test
cmp
sub
jg
gs
jb
in
shrb
flds
movsl
adc
aaa
push
xchg
sbb
insl
inc
mov
sbbl
ror
inc
scas
sbb
leave
lret
lock
inc
inc
popf
int
fs
les
cmp
xchg
xor
popa
jnp
and
add
repz
daa
xchg
pushf
mov
cmpsb
adc
or
and
cmp
sub
ja
mov
lahf
jb
fdivl
cmp
pop
lahf
in
push
jne
cld
out
mov
jge
fisubrl
lret
es
popa
test
add
std
jecxz
or
ds
lods
jnp
stos
mov
cmpsl
mov
rcrl
xchg
fadds
xchg
fwait
repnz
xchg
xchg
dec
negb
xchg
call
xchg
stc
mov
insl
fs
jg
and
icebp
fsubrl
xchg
cmp
mov
add
in
jecxz
cmp
inc
sbb
inc
mov
ja
mov
aaa
mov
mov
xor
notb
cmc
push
scas
mov
lret
aad
pop
mov
adc
stos
clc
mov
cmpsl
popa
pop
js
inc
mov
mov
dec
push
cmp
popa
jl
add
leave
adc
dec
inc
xchg
jb
scas
jecxz
sbb
dec
sub
lock
push
into
adc
adc
imull
dec
data16
push
and
sub
inc
popa
lods
inc
sbb
arpl
test
and
mov
movsb
add
std
popf
sarl
xchg
or
lahf
and
or
or
or
fs
les
in
pop
fadds
cmc
pop
loopne
jecxz
adc
sahf
into
repnz
pushf
in
pop
fldt
mov
pop
sti
addr16
adc
dec
inc
pop
sbb
push
out
data16
push
iret
pop
mov
insb
mov
insl
sbbl
lea
aad
mov
pop
int
rcll
icebp
jne
cmp
dec
int
stos
addr16
rclb
bound
arpl
xchg
push
ret
test
sahf
int3
mov
js
sbb
and
scas
jecxz
sbb
fwait
sbb
daa
mov
sub
xchg
jmp
mov
mov
repnz
arpl
in
fdivrp
adc
repz
mov
out
or
nop
or
push
in
testb
push
clc
mov
int3
lret
repnz
test
ss
sbb
out
fildl
insl
fstpl
adc
push
or
jne
cmpsb
push
push
pop
les
filds
pusha
in
rcrl
push
pushf
jbe
fcoms
dec
or
cwtl
in
jp
sbb
hlt
adc
jno
and
imul
sbbb
push
xchg
in
jecxz
mov
cmovne
mov
cmpl
std
mov
xor
push
sarb
ds
lret
cmovp
cmp
lcall
adc
aas
pushf
fwait
scas
loope
xor
sbb
int
jno
stc
sub
movsl
xor
mov
imul
sbb
push
sub
pop
stc
add
xor
and
lock
or
cmc
hlt
lods
mov
data16
cmpsl
jbe
out
aas
movsb
or
dec
dec
sahf
mov
jg
jle
push
loope
mov
dec
ficomps
xor
fidivl
lock
addl
ffree
pop
pop
repnz
mov
lods
addr16
cmp
pop
aam
jecxz
in
in
cmp
into
ljmp
mov
push
or
push
shrb
in
push
mov
shrl
mov
fwait
arpl
jbe
aam
sbb
inc
push
jecxz
inc
lds
pusha
repnz
je
push
fisttps
pop
lea
roll
sbb
cmp
jmp
inc
rorb
sti
adc
adc
popa
scas
sub
mov
mov
cmp
xchg
adc
jle
lods
fs
fidivrs
sub
stos
fwait
sbb
cld
jecxz
cli
xchg
test
je
adc
sti
les
nop
add
push
lea
xchg
mov
mov
addl
bound
add
xor
inc
inc
adc
pop
addr16
push
or
push
mov
fdivl
popa
aad
lret
jmp
jecxz
mov
nop
adc
sub
scas
scas
cmp
loopne
add
ret
loope
outsb
and
sahf
aad
inc
stos
cwtl
xor
int3
mov
xor
add
push
push
out
popf
cmp
push
test
cmpsb
lret
addr16
ret
inc
dec
inc
or
loop
aas
ficoms
repz
pushf
adcl
incl
js
mov
inc
lds
aas
lds
sbb
sbb
or
push
repnz
cltd
add
xchg
and
movsl
add
sub
mov
push
sub
in
jl
xor
push
shrl
and
xor
andb
and
jl
mov
testb
jmp
adc
xor
jmp
sbb
mov
mov
cmpsb
cmp
je
testl
pop
stos
aad
push
outsl
jle
mov
xchg
push
cmp
in
insb
call
sub
jbe,pn
loopne
lret
idivb
jno
pop
jmp
ljmp
sub
push
stc
push
loop
adc
sub
cmp
inc
out
lret
xor
jo
lcall
ret
inc
pusha
lret
xchg
sarb
xlat
mov
dec
inc
xchg
popf
sbb
inc
icebp
pop
in
jmp
pop
inc
ficomps
negl
and
mov
lods
xchg
movsl
sub
sbb
int
cltd
insl
insb
fadds
and
aas
bswap
jle
dec
push
push
sub
pop
outsl
fidivrl
sub
cld
dec
jb
jne
je
or
outsb
xchg
or
lds
push
jmp
jbe
mov
and
imul
mov
popa
mov
cmpsl
ret
js
cmpsl
pop
xchg
mov
lods
ljmp
es
icebp
jo
imul
insl
in
insb
leave
or
pop
ficoml
pop
push
sti
test
xchg
push
icebp
es
jae
push
sbb
call
sub
inc
sub
imul
mov
push
rol
mov
push
lret
dec
into
inc
int
inc
inc
movl
insb
lahf
js
mov
movsb
sarb
pop
movb
into
jle
popf
sbb
xchg
out
lret
divl
repz
push
inc
inc
adc
inc
and
cwtl
xchg
loopne
lods
sub
ret
lcall
and
cmp
imul
lods
shrl
pop
insl
cli
xlat
sub
or
pop
and
clc
dec
into
xchg
adc
scas
dec
inc
stos
jp
ljmp
test
stc
mov
es
dec
test
popa
loope
faddl
pop
ficomps
loopne
push
xlat
inc
mov
dec
mov
push
jmp
jnp
push
iret
cwtl
into
pop
in
jo
imul
stc
and
insb
push
lret
lcall
dec
mov
clc
sub
mov
jno
mov
inc
inc
jmp
push
in
push
in
lea
mov
push
jne
sti
in
inc
dec
int
mov
adc
ret
sub
gs
xor
scas
mov
push
aas
nop
lret
rcll
je
enter
lret
popf
mov
xchg
adc
aas
imull
jp
pusha
pushf
xchg
push
rcrl
pusha
xchg
jle
and
pop
lahf
push
cmp
flds
out
out
pop
clc
ja
xchg
lds
or
cmpsb
and
ja
xchg
adc
mov
mov
fisttpl
rorb
hlt
jae
dec
ss
stos
push
mov
pop
fistpl
inc
dec
pop
fcoms
mov
popa
or
push
sarl
push
ror
cmp
in
aam
pop
ficomps
dec
sbb
sbbl
sbb
sahf
cmpsl
push
out
adc
into
out
test
ljmp
aaa
mov
movsb
push
popf
mov
dec
std
cmp
scas
das
scas
sbb
ret
push
int3
dec
adc
cs
aaa
scas
loop
and
pop
inc
lds
aam
pop
in
push
sbb
or
jns
cmp
roll
sbb
pop
les
adc
add
jle
lods
xchg
fwait
lret
stos
cwtl
les
repnz
sub
mov
adc
lahf
push
add
lds
jns
inc
sub
and
cmp
lea
and
dec
outsb
xchg
xchg
xlat
push
push
je
ja
sub
jns
push
cmpsl
int3
lret
pop
out
add
jle
popa
xchg
pusha
lret
xchg
fistpl
clc
nop
add
push
lahf
aaa
lret
bound
xor
shrl
in
and
rcrl
cmpb
out
ljmp
sub
div
or
adc
jns
imul
mov
push
xchg
rcll
jecxz
sub
push
mov
ficomps
dec
mov
dec
enter
loop
leave
dec
mov
or
stos
shrl
and
int
xchg
sar
lret
sbb
sub
into
pusha
xor
mov
iret
fs
movb
dec
push
jnp
cltd
lret
andb
pop
mov
cmpl
mov
lods
sub
push
test
cmpsl
jbe
sub
repz
test
push
add
andl
jo
jbe
or
sbb
and
lock
cs
popa
loope
dec
dec
cmp
lea
jae
dec
pop
mov
push
sbb
add
push
mov
add
jae
insl
mov
outsl
jne
and
call
push
add
shll
inc
gs
xor
cmpb
cmp
pop
in
insl
mov
cmp
cmp
dec
push
xchg
dec
es
in
mov
push
inc
out
lret
xor
popa
cmp
inc
lods
aas
fnstsw
cmp
inc
fimull
ds
je
ja
add
stc
mov
dec
ss
xchg
adc
outsl
mov
jo
mov
xchg
adc
stos
sub
adc
shrb
xor
out
fildll
jp
cwtl
inc
push
daa
and
inc
inc
mov
insb
gs
lahf
inc
xchg
ja
in
mov
jp
outsb
shl
stos
addr16
xchg
xchg
push
daa
in
add
and
les
xchg
add
jns
pop
frstor
cli
lock
mov
repnz
jb
into
repnz
jp
jecxz
lods
push
xor
fsubrs
xchg
stos
or
sub
das
fistps
jl
in
pop
jmp
sbb
movsl
jo
mov
out
cmp
sbb
mov
fwait
bound
lea
fidivrs
cmp
dec
les
jnp
loopne
nop
xchg
cli
inc
dec
leave
cmp
xor
inc
push
or
popf
adc
mov
jmp
dec
add
jl
ss
dec
fcompl
and
mov
and
scas
sbb
leave
lock
imulb
adc
and
lgs
push
mov
cld
loope
sbb
in
dec
jmp
out
add
sub
hlt
jae
xchg
or
cmc
je
stos
outsl
jnp
add
or
mov
js
jbe
shlb
mov
test
aam
push
xor
pop
pop
ficoms
ja
mov
lret
dec
rcl
push
sub
movb
movsl
pusha
fcompl
xlat
and
in
insb
mov
push
mov
arpl
push
out
clc
in
adc
js
bound
insl
jmp
and
adc
loopne
stos
inc
cmp
xor
ret
scas
das
mov
int3
inc
inc
pushl
adc
inc
lret
cmpsb
outsl
mov
mov
aam
sbb
fcompl
insb
inc
iret
mov
ret
leave
push
sbb
daa
fwait
lcall
and
inc
cwtl
adc
pop
leave
pushf
inc
sbb
pop
adc
jmp
out
add
iret
sub
or
or
ja
fsubrl
fldcw
lret
and
cmc
dec
cmpsb
sbbl
sahf
gs
xor
jl
cmpsl
mov
mov
mov
jg
xor
outsl
pop
fistpl
push
es
push
int3
gs
fstps
outsb
hlt
cmpsb
push
fwait
push
lds
out
popa
test
pushw
fisubrs
fldl
icebp
mov
cmp
push
mov
hlt
add
roll
sahf
mov
mov
push
test
aad
xchg
aaa
pop
ret
cmpl
call
jno
pop
mov
jp
inc
fcmovu
sub
das
scas
imul
fwait
sbb
and
pop
inc
int
dec
leave
dec
dec
inc
sub
mov
jne
ds
outsb
pop
cmpsl
arpl
out
sbb
daa
mov
sbb
fstl
fadds
jmp
mov
xor
out
cmpsb
gs
ja
addl
sub
aam
xor
nop
insl
shrb
xchg
lods
push
cmp
or
dec
cmc
test
loop
popf
aam
mov
daa
adc
xchg
jno
sub
sub
test
fsubs
daa
int3
mov
dec
sbb
push
pop
ljmpw
mov
insb
clc
jle
test
cmpsl
xor
roll
add
fisubrl
ficoms
push
sub
mov
loope
sbb
idivl
int
push
push
xor
dec
mov
mov
xor
xor
and
fnsave
or
mov
ljmp
sti
inc
andl
cs
stos
imul
sub
sbb
lcall
cmp
push
inc
adc
jnp
jmp
outsl
jo
jnp
cltd
sbb
jl
mov
pop
ds
std
push
repz
adc
adc
cmp
cmc
hlt
sarl
pop
divl
out
or
push
into
int
adc
pop
mov
inc
inc
dec
imul
xchg
adc
or
mov
lods
mov
ss
jo
cmpb
hlt
mov
iret
cltd
pop
mov
xchg
daa
jecxz
pop
xor
mov
out
or
pushf
clc
aam
or
jp
push
push
daa
test
ss
insb
lock
scas
subb
cs
mov
out
rcrl
cmpsb
cmp
push
lahf
das
scas
int3
push
add
hlt
popa
pop
push
lock
xchg
into
mov
mov
lcall
out
mov
or
dec
inc
mov
movsb
mov
leave
mov
xchg
movb
sbbl
adc
scas
and
sbb
xrelease
pop
xchg
pop
xchg
pop
xchg
and
je
shlb
jnp
mov
test
lahf
push
fisubrs
jb
mov
lahf
fisttpl
jnp
rorb
jmp
and
cmp
dec
mov
mov
stos
fimuls
rorb
ficoms
ja
sbb
add
js
pop
adc
pop
push
mov
popa
add
in
xor
loopne
movsb
mov
or
rclb
mov
pop
into
xchg
pop
subb
movsl
into
in
fcmovbe
jl
push
xchg
movsl
out
mov
dec
cltd
sbb
movzwl
lock
sub
movsb
popf
aaa
mov
push
xchg
in
sbb
loop
xor
mov
in
jnp,pt
sahf
roll
mov
and
and
pop
jle
out
jecxz
mov
and
sub
inc
pop
lcall
ljmp
push
mov
sub
adc
scas
mov
je
daa
sbb
lcall
jb
fiadds
in
outsl
out
jne,pt
inc
jecxz
outsl
add
inc
jmp
mov
stc
mov
push
test
mov
ret
xchg
lcall
pop
movsl
push
sub
mov
cmpb
jmp
testl
fmuls
xchg
inc
adc
push
or
inc
je
mov
jmp
xor
dec
insl
pop
test
outsl
cmp
lret
in
nop
cmp
pop
int
bound
xchg
mov
dec
enter
repnz
loope
les
mov
shll
jcxz
or
cwtl
shl
and
xchg
loope
int
or
xor
bnd
pop
pop
cld
jne
jle
xchg
in
jae
mov
dec
jge
dec
cltd
int
aam
es
dec
lds
mov
cmp
sbb
loope
cmpsl
divl
sub
jb
adc
hlt
mov
mov
adcb
fs
lcall
xchg
fs
sub
jae
in
das
dec
jne
test
dec
lret
loope
lahf
dec
sub
push
ror
cmp
pop
repnz
mov
add
pop
imul
imul
pop
xlat
pop
mov
dec
push
pop
or
sbb
push
divl
sub
rcrb
in
xchg
aaa
mov
inc
int3
push
ret
mov
js
add
cmp
sbb
cmp
fld
push
mov
femms
pop
adc
cmp
or
dec
sahf
adc
jp
sbb
and
jnp
ds
outsb
sahf
push
adc
sti
sub
mull
stos
rorb
xor
in
aaa
cmp
and
lods
les
push
push
dec
sbb
inc
neg
outsb
leave
insl
sub
or
cmc
arpl
add
test
mov
mov
call
sti
push
push
lahf
aam
add
push
rcll
inc
aad
push
nop
movsb
or
inc
cld
pop
push
push
mov
notb
push
insl
sarb
into
push
out
add
jle
mov
inc
mov
data16
aas
pusha
test
add
in
cmpsb
std
sub
aaa
sarb
je
mov
push
inc
mov
mov
xor
xor
adc
push
rorl
push
dec
int
jb
mov
repnz
or
adc
inc
adc
nop
aas
mov
adc
xchg
scas
sbb
jmp
jge
jno
adc
sub
mov
xchg
jge
sub
jae
jbe
sub
mov
jne
and
out
mov
and
push
jge
jle
les
push
adc
popa
push
adc
push
cmc
inc
sbbl
mov
out
or
dec
mov
push
mov
mov
pop
fildl
mov
mov
aad
mov
dec
inc
add
in
leave
ret
daa
inc
xor
insl
push
inc
dec
ljmpw
sub
sbb
cmpsl
ja
roll
bound
ljmp
sahf
sub
aad
jns
mov
xor
dec
ret
jle
cmp
aaa
sub
dec
mov
cmp
cmp
inc
push
inc
or
xchg
push
in
fwait
sbbb
cwtl
jge
pushw
dec
dec
lods
aad
ret
adc
stos
scas
dec
shlb
cmpsb
shll
xchg
lret
jo
pop
xchg
popf
lcall
out
clc
add
jae
xor
in
push
stos
mov
lods
sub
loopne
aad
jns
js
movsb
repz
leave
and
mov
cmp
jae
mov
lock
in
mov
cmpsl
sub
lea
pop
jle
dec
rcll
pop
or
aas
cmpsb
push
xlat
mov
push
inc
fildll
inc
aad
xor
jmp
bnd
push
pop
pop
fistpl
leave
int3
call
pop
jmp
inc
inc
gs
movsb
vmread
cmp
sub
ficompl
sahf
in
cmp
mov
daa
mov
popa
sbb
mov
push
rcll
mov
cli
dec
into
push
jns
xchg
and
ret
out
push
and
mov
pop
xchg
cli
sahf
sbb
cmp
dec
cltd
jbe
xor
and
hlt
adc
sbb
sub
sub
jo
enter
mov
dec
outsb
inc
shlb
lret
out
mov
jb
jmp
or
xchg
scas
les
cmc
je
ret
xchg
adc
fdivs
test
sub
jo
mov
push
test
je
outsl
cmpsl
dec
sbb
loope
or
leave
pop
pop
pop
fisttpll
loopne
fcom
push
add
pop
test
imul
push
push
in
insl
in
pop
or
push
ficoml
lds
push
scas
test
and
or
sub
and
or
add
call
comiss
insb
cmp
in
mov
xchg
xchg
cmp
ret
fneni(8087
sbb
in
push
mov
dec
jle
popf
dec
cmp
int3
ss
pop
sbb
jae
xchg
test
xor
aas
pushf
fwait
mov
adc
fnstsw
sub
xchg
push
test
ds
fwait
lret
xchg
outsb
insl
ja
pop
lahf
aaa
cmp
and
std
jl
movsb
pop
test
movsb
and
pop
inc
outsl
out
cmpb
jg
or
push
jbe
popf
or
std
fs
adc
and
dec
xchg
lea
add
ficomps
mov
pop
or
je
fildll
push
aad
pop
add
outsb
addr16
neg
pop
gs
mov
sbb
iret
cltd
sbb
pop
push
aam
add
mov
xchg
int3
sub
outsb
inc
sarl
insb
jmp
lahf
xchg
jmp
cmp
or
add
sub
xor
xchg
test
lods
fnstcw
insl
mov
push
movb
or
mov
push
in
jle
push
out
iret
jmp
xchg
add
mov
cwtl
mov
stc
jl
and
mov
jne
adc
sub
cmpsl
orb
fsubs
xor
mov
addl
inc
data16
dec
jl
inc
outsl
add
xchg
and
and
lock
fmull
adcl
push
jne
sbb
sti
mov
repz
mov
xchg
adc
jle
std
leave
dec
pop
fildl
aad
add
or
inc
push
fdivp
sub
cmp
loop
pop
sub
jmp
ficomps
mov
popa
out
ljmp
cmp
sbb
scas
stc
fistps
stos
test
repz
std
fsubrl
xchg
stos
or
push
cmp
lret
cmp
scas
int3
sbb
sub
out
or
adc
ds
leave
dec
mov
xor
pop
mov
pusha
lret
mov
cmp
scas
jle
scas
adc
xor
mov
and
jo
sub
fiadds
shll
cmpsl
push
xchg
into
or
int3
push
adc
movsl
in
rcrl
xor
or
lods
jnp
outsl
sbb
sub
push
add
je
outsl
mov
push
cld
stos
jp
scas
jne
ret
fldl
sarb
jmp
mulb
mov
lret
and
inc
nop
xchg
mov
cmc
and
fstps
xor
xor
fs
jns
pusha
in
shll
mov
in
insb
mov
fsubl
pop
jmp
lret
in
adc
or
insl
dec
fwait
hlt
dec
insl
fsubrl
lea
add
jecxz
mov
mov
xchg
inc
dec
addr16
mov
xor
ret
push
cmp
adc
inc
ret
inc
loopne
and
mov
dec
lret
or
and
pushf
xchg
sbb
roll
leave
std
sbb
adc
xchg
sub
xchg
shll
dec
and
cmpsl
repnz
test
lret
xchg
shl
rorb
hlt
sub
fisubrs
fucomi
mov
and
and
jbe
test
sar
mov
sub
test
sub
mov
dec
jae
add
lods
inc
stos
leave
xchg
scas
pop
fisttpl
fcoms
bound
pop
ss
pop
in
je
push
fs
pusha
xor
mov
pop
lods
test
pop
or
push
cs
loopne
jg
jb
xor
mov
addr16
inc
cmp
fnstcw
dec
aaa
ds
pusha
fists
push
mov
mov
out
adc
pop
leave
dec
in
push
movb
mov
cs
ljmp
mov
sbb
mov
mov
pminub
daa
rcll
daa
mov
sbb
outsl
outsb
mov
cmp
addl
jp
sub
out
jbe
jns
push
fbstp
leave
divb
je
mov
xchg
or
je
shl
jge
or
dec
js
xor
je
dec
pushf
loop
adc
xchg
pop
pop
fmuls
cmp
insb
aad
push
in
pop
imul
icebp
out
jae
pop
out
aad
mov
lods
lods
andb
cli
flds
cmovno
cmp
cmpsb
mov
mov
fxch
lret
pop
fnstcw
cmp
mov
scas
mov
push
cmp
cmp
nop
dec
icebp
and
sub
xor
aas
or
lcall
cmp
roll
sbb
and
push
stos
xchg
adc
pop
pop
stos
lea
mov
adc
stos
sub
cmpsl
cmpsl
es
pop
mov
pop
dec
insl
mov
pop
lahf
xor
ljmp
sub
std
jl
js
inc
stos
sub
jb
mov
stc
xchg
adc
or
jmp
push
and
push
dec
sbb
add
xor
adc
fcmovu
pop
movsl
push
or
dec
mov
mov
in
mov
movsb
push
out
mov
addr16
test
mov
fisubrl
repnz
dec
push
mov
insb
or
cmp
pop
cmp
sahf
addr16
push
and
pusha
jns
jge
rcll
xchg
mov
lret
mov
ss
inc
ret
xor
push
ret
in
das
mov
push
pop
sbb
dec
cmp
xlat
jmp
xchg
lahf
jo
xchg
adc
mov
mov
lret
movsb
cmp
ret
jo
cltd
xor
test
out
adc
movsl
and
test
mov
addl
jp
mov
cmpsl
es
daa
enter
adc
pop
mulb
icebp
imul
lea
inc
or
jp
testb
push
clc
sbb
das
lret
sbb
and
adcl
mov
xor
arpl
js
aam
jne
jbe
add
movsb
int
icebp
xor
out
pop
movsb
or
xor
imul
insb
popl
in
ss
pop
cld
mov
sti
flds
int
aam
adc
add
jle
fs
test
mov
mov
or
fcoms
cmp
aaa
cmp
int
push
jmp
or
data16
mov
scas
jne
or
dec
pop
sbb
sbb
or
orb
xorb
xchg
adc
lret
fdivrl
push
popa
scas
sub
jmp
inc
xlat
lods
sub
ret
and
cli
lahf
push
add
movd
xchg
jnp
add
movsl
inc
jne
and
rcr
sti
andb
std
sbb
push
xchg
dec
push
int
jae
jb
dec
jae
add
and
inc
mov
ja
jp
jns
rol
xchg
xchg
in
pop
aam
inc
filds
iret
mov
adc
push
mov
add
dec
adc
push
js
arpl
pushw
es
js
jg
sub
cmc
sarb
jno
lds
in
and
aad
cmp
arpl
sahf
adc
mov
push
inc
dec
mov
into
sbb
dec
enter
mov
mov
xor
or
mov
mov
add
sahf
sbb
cmp
fimuls
mov
xchg
adc
scas
test
mov
fisubrs
scas
sub
cmpsl
es
xchg
imul
data16
in
mov
loop
cwtl
cmp
mov
fstp
sub
mov
adc
jp
movsl
fcompl
xor
popf
jae
or
add
push
cmpsb
adc
cmp
or
inc
stc
aam
push
bound
pop
or
xorb
je
sbb
jo
es
out
loopne
lods
push
or
scas
mov
and
xor
outsb
in
cmp
mov
test
jns
push
fiaddl
push
in
jbe
dec
push
fs
cmp
inc
jle
adc
ss
imul
mov
lds
aam
pop
popa
int3
mov
ds
inc
mov
mov
movb
sub
and
int3
movsl
cmp
mov
stos
cmc
sbb
movsb
and
es
xchg
cmpsb
and
lret
jg
sti
sub
loop
sub
divl
add
js
jae
jle
jne
je
negl
movsl
mov
cmp
xchg
jnp
push
jbe
or
sarl
iret
fiaddl
inc
sub
xchg
fldenv
jge
stc
lds
xlat
loop
pop
fstps
cmp
imul
je
cmp
popf
js
lahf
push
insl
popf
pop
fcoms
jnp
xor
push
push
mov
mov
fistps
mov
cmp
mov
mov
mov
jmp
xor
jecxz
push
mov
test
and
xchg
cmp
inc
mov
and
dec
sahf
cmp
sbb
or
pushf
push
dec
shl
dec
popf
test
sbb
jno
into
mov
loopne
or
pop
addr16
mov
jmp
movsl
sub
insb
xchg
lds
dec
leave
sbb
imul
stos
lret
pop
lahf
push
dec
jge
idiv
jnp
sub
ret
ja
jbe
jne
frstor
mov
leave
je
outsl
out
dec
jp
xchg
nop
or
jbe
push
lea
jbe
shll
cmpsl
in
add
mov
adc
rcr
pop
fisttpll
xchg
ret
bound
fucomip
push
aad
cmp
es
bnd
aad
imul
aaa
mov
inc
mov
jmp
cli
or
cltd
push
decl
out
jge
movsb
jne
ljmp
aaa
mov
inc
stos
mov
into
sbb
jnp
iret
fdivp
jae
dec
int
sub
mov
mov
jns
xor
inc
sarb
mov
and
arpl
push
add
dec
xor
cmp
jl
pop
jg
jmp
push
in
xor
xchg
xchg
mov
les
add
insl
cmc
mov
ljmp
sahf
sbb
daa
idiv
jns
fxam
mov
cmc
stos
cwtl
js
pop
xchg
adc
fimull
stos
scas
xchg
divl
out
lods
int3
loop
addb
int
cmpl
push
mov
fcmovnu
pop
inc
inc
adc
arpl
mov
mov
cmp
into
repnz
lret
pop
add
xor
add
jmp
inc
push
or
mov
roll
jns
mov
and
icebp
push
cmp
loopw
in
in
xor
push
mov
lret
lret
dec
lock
add
mov
mov
js
movb
xchg
dec
scas
cs
adc
test
pop
xchg
inc
std
push
jmp
jns
xor
inc
test
xor
xchg
out
lds
mov
sbb
cmpsl
es
les
add
adc
mov
push
add
in
jnp
jp
fldenv
clc
ja
lods
stos
inc
cmp
repnz
xchg
iret
lahf
lahf
push
pop
dec
jne
or
push
sub
mov
sub
mov
dec
pop
test
jg
fcmove
aam
pusha
fcoml
ja
call
loop
push
pop
dec
repz
loope
push
iret
dec
jle
sub
xor
popa
push
pop
fcoms
iret
add
xor
or
push
nop
das
mov
cmp
ja
jecxz
ljmp
jo
outsb
imul
mov
scas
or
vsqrtpd
sarl
std
daa
movl
pop
add
js
or
push
mov
test
mov
fbstp
add
jae
adc
adc
clc
adc
ficompl
cwtl
xchg
and
pusha
dec
out
sbb
in
inc
mov
push
movsb
adc
mov
cmp
jge
sub
stos
loop
gs
mov
divb
stc
mov
out
outsb
pop
movsb
add
inc
lret
cmpb
jnp
popf
cli
pushf
stc
mov
movsb
push
imulb
incl
or
add
inc
or
push
cmc
dec
and
add
insl
mov
aad
jg
aam
pop
mov
sar
addb
ficoml
cmp
jp
xchg
test
repz
in
push
idivl
cmp
lret
enter
fistpll
dec
push
push
push
shrl
mov
cli
lea
les
frstor
push
or
pop
ds
dec
lret
addr16
push
addb
mov
movsb
adc
leave
mov
fistps
aas
mov
popa
lods
sub
sub
daa
lods
and
lret
out
iret
jmp
and
pop
int3
cld
imul
cmp
enter
std
jl
aad
xor
jns
cmp
dec
and
sub
lahf
pop
jp
xchg
nop
or
testl
imull
mov
into
and
dec
push
jle
popa
loope
les
or
push
dec
mov
cli
jns
out
push
pop
push
and
daa
bnd
xor
out
insl
frstor
xor
les
jmp
add
jo
imul
jno
stos
cmc
cmp
pop
out
pusha
outsb
add
divl
cmpsb
in
jne
icebp
shll
mov
or
ret
cmp
or
lret
mov
inc
in
mov
mov
inc
enter
and
sbb
pop
xchg
push
dec
push
add
mov
add
inc
push
sbb
out
mov
daa
jo
sub
sub
nop
lahf
stos
sub
lret
xchg
and
negb
add
jge
in
das
jp
jge
mov
dec
cmp
cli
add
xchg
fcmove
repz
shl
je
push
outsb
xchg
adc
mov
add
and
and
cmpsl
loop
repz
loop
leave
enter
loop
sbb
fildl
jge
sub
pop
xchg
loopne
sbb
push
add
pop
add
push
push
jg
push
cmp
pop
sub
fists
push
fdivr
insb
call
imul
cs
and
cmc
outsb
inc
roll
insb
mov
outsb
pop
fldt
loopne
ret
movsl
loopne
into
jb
mov
in
fistps
sbb
mov
dec
mov
pushw
inc
lret
mov
mov
inc
sarb
push
fyl2xp1
in
pushf
adcl
loopne
or
and
cltd
sbb
lds
add
inc
jne
mov
call
insl
lods
sub
repz
sub
xchg
dec
push
and
mov
xor
out
std
std
jl
lcall
xchg
or
movsl
fnstcw
outsb
xchg
addl
push
lea
mov
push
xchg
xor
sti
pop
addl
pop
into
mov
sub
push
popa
loope
movsb
push
ret
rcr
pop
fisttpll
and
in
add
inc
filds
iret
mov
pushf
or
mov
push
fwait
ljmpw
jecxz,pt
out
mov
add
icebp
jno
loope
ja
jecxz
inc
mov
cmp
push
cmp
orb
xor
int3
sbb
sub
xor
pop
mov
inc
ret
pop
pop
outsb
jmp
mov
mov
in
or
dec
lcall
jnp
mov
jae
fcomps
xchg
fistl
sub
adc
pop
xchg
push
idivb
sub
ja
mov
mov
sbb
stos
sub
lahf
gs
loopne
mov
stos
and
cli
sahf
movsl
and
incb
mov
sbb
jge
or
add
movsb
outsl
in
gs
nop
and
pop
fnstsw
rclb
push
fcmovb
popa
or
icebp
add
rcll
loop
lcall
or
push
fwait
neg
pop
pop
mov
test
iret
dec
push
mov
cld
mov
or
ljmp
or
out
add
xchg
inc
inc
rcrb
test
enter
or
test
xor
push
dec
mov
dec
lret
jg
scas
add
pushl
sbb
mov
push
lds
fs
lods
sub
sbb
sbb
in
cwtl
and
and
pop
jae
lods
jnp
cs
jge
mov
sarb
add
lods
js
jae
xchg
lea
movsl
and
dec
inc
jnp
adcb
jle
into
pop
clc
ja
mov
and
repz
dec
pop
test
jg
dec
xchg
popa
loope
movsb
push
ret
rcr
pop
fisttpll
sub
pop
sahf
outsl
outsb
addb
mov
mov
jmp
cmpsl
jo
fcoml
in
insb
test
btr
leave
jmp
ret
aad
les
cmpsl
aaa
inc
roll
out
cmp
jb
aaa
mov
inc
sub
xor
aad
push
in
jbe
js
dec
in
rcll
cmp
dec
into
cmp
gs
dec
mov
pop
inc
or
loop
in
mov
xor
xchg
sbb
lret
push
lcall
adc
fistps
mov
sub
pushw
lcall
mov
push
ss
mov
sti
jp
jge
test
cli
loop
gs
xor
jb
mov
out
addl
add
push
lea
xchg
mov
xor
in
test
adc
jle
xchg
push
and
or
cli
das
movsl
or
pop
test
push
aad
push
xlat
jg
push
push
loope
xchg
adc
xor
pushf
addr16
stos
xor
push
scas
mul
fs
mov
mov
mov
cmp
sti
daa
jb
cmp
lock
xor
loopne
xchg
jmp
rcrl
dec
into
dec
cmp
jl
movl
and
jns
inc
adc
mov
sbb
sbb
pop
in
hlt
sti
push
push
xchg
adc
nop
out
ret
xor
mov
popf
sub
cwtl
dec
out
sub
out
cmp
mov
call
jge
aad
ja
lods
cli
jns
movhlps
aaa
and
std
and
outsb
pop
dec
cmpsl
cld
cmpsb
sti
mov
or
das
js
sub
ja
cwtl
mov
inc
adc
cmp
lret
lahf
pop
or
add
ds
push
mov
loop
pop
fisttpll
loope
pop
fimuls
lahf
dec
mov
jg
mov
addl
jmp
mov
push
ja
mov
aad
jmp
ss
push
jl
pop
ficomps
adc
cmp
rorb
gs
pop
mov
ds
xor
inc
shrb
sbb
fwait
sbb
lods
icebp
pop
dec
mov
pop
les
inc
xchg
adc
scas
mov
xchg
sahf
sub
cmpsl
xchg
push
dec
repnz
test
cmpsb
and
push
mov
sti
sti
jp
jmp
and
cmpsl
les
clc
pop
fsubrl
hlt
lock
pop
stc
mov
je
jge
lea
jbe
stos
adc
addl
mov
dec
xchg
jle
popa
xchg
incl
cmp
rorb
in
push
pop
mov
push
aad
pop
dec
into
repnz
sahf
rcl
xchg
out
fbstp
jecxz
out
push
andl
mov
mov
sahf
imul
cwtl
xor
int3
push
ret
in
mov
xor
dec
mov
inc
lret
xorl
xlat
sahf
call
adc
and
int
cmp
sbb
adc
add
lods
pop
rcll
lock
mov
sub
iret
dec
adc
mov
mov
jp
cmpsb
jne
mov
divl
xchg
std
push
push
jge
lock
out
push
jne
and
sbbl
pop
xchg
loop
jp
addl
mov
jg
jle
fiaddl
fcompl
cmpsl
rcr
pop
fcoms
jecxz
pop
fstps
ss
inc
add
sbb
test
xor
insl
in
dec
shlb
ljmpw
push
add
in
jnp
out
test
mov
cmp
sub
push
xor
adcb
inc
xor
in
iret
idivl
adc
fs
in
mov
mov
sahf
xchg
xchg
out
int
inc
sbb
jns
lretw
fcmovb
inc
jp
in
jle
lods
sub
sbb
sbb
dec
in
sar
dec
outsb
cli
movsl
and
pop
jp
mov
add
scas
cwtl
cmp
mov
hlt
dec
jb
jne
inc
enter
std
roll
xorb
jae
shrl
cmp
popf
cli
mov
mov
cmc
je
dec
push
jle
popa
loope
les
mov
pushf
xchg
xchg
mov
cli
jns
out
sub
mov
dec
into
test
imul
xor
mov
xlat
push
jnp
mov
push
mov
mov
fistps
mov
cmp
aas
ss
push
mov
mov
push
jbe
pop
fdivp
jp
ret
fisttps
pop
sbb
cmp
les
or
out
or
dec
pop
mov
mov
mov
loopne
leave
in
cltd
in
xchg
sbbb
push
jmp
ljmp
sub
pop
xchg
push
xchg
into
in
sbb
and
icebp
mov
out
lret
das
scas
jo
cmpsl
addl
adc
fxch
pusha
fisubs
mov
jno
cmpsb
xchg
out
repz
bound
adc
iret
cmp
pop
fstl
ficompl
mov
rcll
pop
notb
dec
into
repnz
jmp
mov
xor
fisubrs
add
add
sub
insl
in
das
subb
pop
inc
in
jnp
test
insl
mov
cmp
jmp
or
arpl
xor
lea
adc
jns
xchg
mov
aaa
scas
cmp
cmp
adc
ret
ret
inc
mov
sarb
or
pushf
sbb
outsl
sbb
pusha
repz
adc
aad
scas
test
mov
adc
sub
mov
add
roll
cmp
in
jnp
jp
fldenv
clc
ja
lods
xlat
sarb
and
test
addb
jne
mov
cmp
sub
mov
int
je
adc
push
loopne
pop
dec
inc
adc
fstpl
bound
pop
les
mov
cmp
icebp
jo
mov
pushf
ds
push
mov
sahf
stc
jne
pop
out
shrb
pop
fistps
mov
ret
or
ficomps
shrl
mov
mov
lret
xchg
inc
dec
addr16
cmp
test
scas
jg
dec
leave
dec
mov
inc
xlat
arpl
dec
push
push
inc
lds
xchg
cmp
or
xchg
push
lcall
test
xor
pop
mov
sub
jb
sbb
cmpsl
es
sub
cmp
jge
adc
add
mov
and
out
jl
ja
rolb
push
arpl
pop
and
lahf
mov
sub
jns
lds
jae
clc
in
mov
repz
jg
dec
loope
faddl
pop
ficomps
adc
xchg
arpl
cwtl
pop
aam
jne
and
cmp
and
pop
sbb
push
and
insb
call
imul
das
mov
stos
cmp
inc
shll
dec
mov
imul
mov
sub
add
mov
cmp
mov
inc
lret
inc
xor
divl
lds
push
mov
in
mov
pushl
sbb
adc
xchg
sub
cltd
cwtl
dec
mov
mov
sbb
aas
sbb
or
into
insl
cmp
mov
xor
daa
es
mov
xor
in
mov
outsl
inc
cmpsl
bound
mov
or
outsl
out
push
jne
and
or
jg
mov
int
in
mov
sahf
mov
stos
jne
dec
push
jle
pushf
imulb
or
mov
negl
xlat
je
mov
jb
and
lods
add
daa
push
fs
insl
in
jecxz
push
stos
push
add
fcomps
insl
in
das
cmpb
pop
inc
sarl
movsl
jge
pop
aas
in
jmp
cmp
xor
gs
cmp
scas
push
rcrl
dec
into
cmp
sti
inc
lret
and
push
ret
inc
pusha
add
mov
jle
lea
dec
inc
xchg
cwtl
pop
xchg
adc
adc
mov
sub
adc
out
scas
notb
mov
push
test
movsb
push
adc
call
in
idiv
jp
out
cmp
ja
add
stc
js
iret
jnp
divb
and
out
sti
adc
add
lea
test
mov
jns
pop
bnd
cs
mov
dec
xchg
popa
push
mov
dec
pop
fldl
dec
or
pop
aam
or
xchg
push
iret
call
pusha
mov
and
push
sahf
enter
pushf
pop
mov
sub
push
call
fs
cmpsl
mov
roll
lods
mov
movsw
jmp
sahf
stos
add
pop
or
scas
idivl
popf
in
push
push
adc
mov
xchg
mov
pop
xor
add
aas
pop
pop
iret
cmp
push
in
nop
sbb
pop
decb
xor
lds
xchg
pop
lods
test
cltd
cwtl
sub
iret
setle
ret
cwtl
ret
jb
sub
movsb
sbb
rcll
daa
jmp
faddl
and
cmp
jge
push
test
pop
lock
stc
sub
test
stos
mov
and
dec
mov
mov
inc
cwtl
ja
xchg
xchg
gs
hlt
lods
lret
popa
inc
test
outsb
xchg
sub
nop
inc
or
dec
lcall
sub
jmp
or
into
push
es
xor
mov
aaa
jnp
pop
jbe
sbb
push
mov
mov
fistps
cmp
cmp
es
inc
out
pop
fidivrl
mov
scas
or
add
push
push
out
inc
jmp
cmp
or
lret
dec
xchg
and
movb
sarb
ds
dec
lret
addr16
dec
out
cmp
push
outsb
lret
popf
or
xchg
adc
shld
or
and
cli
sbb
packssdw
jb
test
out
js
movsl
and
lock
sbb
mov
sub
in
jl
jbe
cli
jns
pmuludq
jb
data16
adc
lahf
fcmovne
jg
xor
jge
icebp
mov
in
jp
addl
mov
test
outsb
xchg
add
cmpsl
rcr
pop
fcoms
jecxz
pop
fstps
adc
test
cmp
jle
fldenv
jo
sub
out
insl
mov
data16
add
rorl
cmc
jb
data16
xchg
sbb
insl
outsb
xor
call
data16
cmp
aaa
adc
int3
dec
push
aaa
add
dec
loop
inc
mov
stc
mov
jne
nopl
mov
sbb
ds
inc
jmp
dec
lretw
pop
movb
in
jle
lods
sub
sbb
sbb
dec
in
shr
dec
outsb
cli
movsl
and
pop
jp
je
add
push
ret
lock
es
add
js
shlb
divb
or
outsl
out
outsb
jne
mov
push
pop
sub
lcall
mov
loope
push
add
xchg
sbb
movsl
nop
jle
dec
mov
jle
hlt
aas
sbb
bound
pop
aam
scas
fildll
and
lret
out
inc
scas
pop
out
aad
insb
mov
data16
arpl
bound
iret
dec
mov
mov
in
andb
mov
mov
adc
xor
dec
cs
in
dec
push
faddp
jae
xor
mov
int
enter
cld
dec
leave
dec
incb
pop
sbb
jecxz
mov
sbb
sbb
pop
xchg
push
std
or
mov
repnz
inc
xor
bound
mov
sub
push
test
cmpsl
popf
xchg
push
adc
out
dec
push
add
jo
std
jl
js
push
jb
test
and
std
in
jg
outsb
outsb
xchg
adc
mov
mov
daa
sub
ja
xor
sbb
jns
cltd
lcall
jle
adc
pop
fistl
jp
cltd
xchg
sti
jp
lock
mov
push
iret
stos
gs
xor
jecxz
inc
stos
push
ljmp
out
mov
loopne
fistps
mov
imul
imul
mov
ds
push
cmp
adc
vcvtss2sd
cmp
das
mov
xchg
jle
dec
les
cwtl
inc
lds
fsts
or
test
push
lcall
adc
push
das
aad
aas
mov
push
and
jb
fsubl
cmpsl
es
add
mov
adc
nop
loope
mov
and
mov
repnz
jl
ja
add
sbb
cmpsb
adc
mov
lea
aad
mov
call
or
jb
sbb
lock
scas
loop
push
loopne
pop
fildl
pop
fstpl
dec
cmc
xor
or
mul
lahf
mov
jg
mov
in
imul
bound
ja
push
in
insb
scas
add
inc
roll
cmc
cmp
cld
out
into
add
imul
sahf
mov
scas
or
add
dec
in
inc
aas
aad
mov
cmp
nop
je
push
sbb
cvtps2pd
or
into
data16
dec
repnz
push
xor
pop
adc
sub
mov
sbb
cmp
ret
push
outsb
shlb
movsb
and
and
pop
flds
cli
mov
lods
mov
pop
inc
sub
adc
jns
js
push
repz
jne
popa
adc
push
add
int
sub
shl
mov
in
sbb
sbb
movsb
outsl
and
adc
inc
and
xlat
push
mov
lret
pop
aam
or
xor
mov
icebp
fcomps
push
and
mov
out
ljmp
push
mov
push
lcall
lock
mov
mov
insb
aam
clc
jecxz
sub
gs
cmp
ss
lcall
add
inc
loope
cmp
xor
ljmp
sbb
push
fwait
sbb
and
lret
inc
dec
xor
scas
popf
lds
jecxz
mov
mov
adc
stos
sub
pop
dec
jl
sbb
cli
add
insl
cmc
mov
ljmp
xchg
lods
fwait
cwtl
lcall
jg
repz
cmc
cmc
je
sti
mov
adc
push
fimuls
imul
lods
lret
fildl
test
jle
popa
adc
and
stc
push
or
jb
mov
push
rcll
xor
push
iret
dec
in
cli
mov
push
ljmp
test
fstl
lods
pop
in
sbb
in
stc
repz
xchg
and
dec
mov
adc
inc
lods
mov
mov
lret
xchg
inc
dec
cmp
imul
mov
movb
fsubs
xchg
add
dec
rclb
push
std
or
sub
adc
test
pop
xorl
sbb
adc
es
sub
and
popl
mov
mov
and
mov
faddl
in
clc
ja
jbe
add
mov
repnz
push
aaa
mov
mov
fdiv
ret
mov
arpl
or
stos
into
xor
xlat
jecxz
lret
pusha
fcompl
inc
rcrb
pop
fsub
dec
mov
pop
jae
aaa
addl
fwait
push
pop
gs
dec
cmp
data16
pop
mov
stos
call
fldcw
xchg
add
mov
stc
subl
mov
dec
imul
lahf
jecxz
lahf
mov
scas
or
rcll
inc
inc
inc
adc
aaa
lock
in
cmpsb
insl
mov
inc
movb
or
mov
push
loopne
cmp
mov
das
sbb
mov
or
lds
sub
sub
adc
scas
and
lcall
sbb
ljmp
subl
outsb
pop
add
ja
jecxz
out
std
adc
repz
adc
sbb
jbe
cmp
push
jnp
push
jbe
or
sar
mov
mov
pop
sbb
mulb
mov
lret
mov
ficomps
cmp
adc
push
fimull
dec
pusha
test
inc
in
cmp
xor
push
rolb
add
push
rorl
loopne
mov
and
jae
enter
aaa
mov
stos
shl
cltd
mov
pop
xchg
and
cmp
das
scas
int3
push
fstps
hlt
xchg
mov
xlat
xchg
arpl
mov
xchg
jle
dec
les
pop
inc
lds
xlat
addr16
pop
bound
push
cmp
cmp
mov
test
sbb
in
adc
mov
popf
jmp
stos
sbb
jb
sub
cwtl
andb
jb
ret
daa
and
adc
test
insb
sti
jg
sti
addr16
jl
sub
add
stc
js
sti
call
je
dec
les
or
dec
or
scas
and
adcb
dec
mov
push
test
jle
xchg
syscall
mov
lea
dec
clc
ret
aam
rcll
fsubp
push
push
iret
imul
lcall
or
push
pop
push
ficompl
xor
arpl
clc
std
aad
push
test
mov
fisubrs
test
ret
mov
mov
xor
scas
push
lcall
into
dec
adc
cld
inc
movl
inc
ret
xor
fs
jmp
push
mov
xchg
sbb
stc
inc
lret
cwtl
xor
scas
inc
ficomps
jle
cli
cwtl
loope
lods
sub
sub
rorb
mov
out
out
cmp
imul
push
jnp
loope
div
jbe
xchg
adc
out
jge
mov
out
jnp
pop
nop
nop
or
and
sbb
xchg
std
add
js
jae
jb
jecxz
sbb
mov
into
stos
push
lea
xchg
dec
xchg
aam
popf
outsb
lds
sub
push
popa
loope
int
xlat
mov
push
js
stc
ljmp
mov
mov
adc
ja
xor
jmp
daa
hlt
cmp
mov
push
mov
int
mov
inc
rorb
push
xor
cmp
movl
inc
ret
pop
sahf
into
jmp
cs
ret
inc
test
and
cwtl
pop
repnz
cs
fstpt
mov
add
fcomps
sub
jmp
clc
and
cmpsl
es
icebp
push
out
xor
dec
add
mov
xor
nop
cld
movsl
enter
push
xor
jns
js
dec
jnp
divb
or
mov
stos
cmp
xor
stos
inc
stos
push
jo
pop
xchg
mov
addl
sbb
rclb
loopne
xor
mov
out
jne
pop
or
test
bnd
lods
push
es
out
pop
movsb
fnsave
push
fwait
ljmpw
jecxz,pt
out
mov
inc
pop
fistpll
dec
jno
loope
jecxz
repz
aad
mov
mov
lret
js
fiadds
inc
mov
dec
int
ljmp
xor
movb
mov
scas
or
rol
and
int
hlt
or
mov
xchg
lcall
insb
adc
adc
jmp
nop
fcmovnbe
xchg
movsl
cmp
outsl
lcall
cmp
iret
adc
test
out
gs
pop
sub
jecxz
push
std
adc
jb
decb
movsl
add
ret
or
clc
mov
mov
repz
dec
pushf
xchg
test
or
add
push
cmpsb
vmovntps
std
testb
add
outsb
scas
push
add
pop
test
sar
cmpl
xlat
xchg
xor
sbb
call
mov
xchg
mov
push
push
mov
mov
lret
jecxz
xchg
fimuls
inc
mov
test
xchg
mov
movl
inc
ret
inc
fdivs
gs
test
push
roll
add
add
sahf
test
push
lcall
adc
push
das
and
and
and
jb
fsubl
cmpsl
es
add
mov
adc
nop
mov
mov
and
mov
repnz
jl
ja
add
sub
cmpsb
adc
mov
lea
es
test
or
xchg
dec
dec
and
add
lock
cmpsl
push
loope
push
pop
fistpl
inc
dec
sti
outsl
jl
push
ret
out
lds
fs
sbb
and
push
fcompl
xlat
mov
inc
iret
pusha
ljmp
push
add
jg
push
imul
add
ds
aaa
mov
outsb
icebp
jns
push
fcmovbe
in
jbe
dec
mov
in
push
cmp
lret
lret
dec
into
xor
inc
inc
lret
pop
repz
nop
fidivrl
mov
mov
out
or
jo
inc
xor
aad
xchg
pop
sbbb
aas
jl
out
mov
lods
adc
scas
sub
jmp
inc
xlat
ret
sbb
add
hlt
lahf
push
add
sti
jp
mov
mov
stos
sub
lcall
in
jnp
sub
xchg
std
adc
test
push
add
xchg
mov
mov
push
popa
xor
inc
aam
ret
push
mov
or
rorb
or
push
lods
mov
xor
cmpb
test
sub
icebp
jo
out
xchg
push
xlat
nop
rdmsr
test
or
cmp
gs
mov
shl
xchg
subb
out
in
frstor
sarb
inc
mov
fs
enter
in
jns
dec
sub
mov
loopne
int
cmpsb
mov
mov
lds
loope
cmpsl
and
jge
dec
int
daa
push
xchg
push
lcall
lahf
repnz
xchg
adc
mov
inc
mov
hlt
xchg
leave
sbb
test
cld
inc
cmpsb
and
addr16
mov
mov
jp
sub
divl
push
orl
hlt
les
outsb
xchg
dec
jns
or
or
add
sub
jbe
stos
sub
dec
adc
into
lcall
xchg
xchg
sbb
mov
fstp
pop
or
mov
push
orl
push
iret
call
pusha
mov
and
push
and
gs
das
adc
fs
or
xchg
lock
jmp
and
ficoml
in
andl
arpl
std
adc
mov
sbb
push
dec
push
push
testb
mov
mov
cmpsb
insl
nop
sbb
or
cli
idivb
push
cs
sahf
jnp
xor
mov
fisttpll
pushf
xor
add
mov
adc
scas
and
inc
ja
sarb
sbb
iret
out
jns
mov
xor
cmp
sub
sub
cmpsl
mov
ficompl
divb
je
clc
or
adc
test
sub
in
or
bound
add
add
inc
rcrl
cmp
mov
jo
fstps
testb
push
test
jle
pop
add
xlat
test
roll
out
data16
jg
arpl
bound
pop
fisttps
cli
cmp
mov
dec
mov
lea
add
jecxz
lahf
mov
scas
or
rcll
inc
jg
adc
aaa
lock
in
out
mov
inc
movb
or
mov
in
dec
cmp
mov
and
leave
dec
les
rcll
das
and
dec
fcmovne
jmp
sahf
lods
mov
es
shlb
movsb
and
and
pop
psadbw
dec
imul
jne
outsl
jl
ja
jno
sub
and
jne
stc
and
outsb
push
cs
mov
sti
or
xchg
dec
sub
aad
testl
dec
outsb
xchg
add
mov
adc
fcoms
cmc
repnz
mov
pusha
das
push
iret
dec
pop
pop
call
jmp
pusha
insl
in
insb
call
into
jmp
scas
scas
jl
fs
add
test
mov
insl
in
andl
cmp
dec
xor
xchg
movsl
mov
jb
xor
subb
jge
inc
movl
inc
fstp
outsl
push
arpl
mov
or
pop
xchg
push
sbb
jae
lea
jb
adc
jle
mov
push
aas
dec
sbb
sbb
in
fsubs
mov
mov
dec
inc
xor
lods
scas
lahf
push
loope
out
frstor
out
stc
js
jae
decl
jne
je
mov
xlat
add
pop
cld
jnp
mov
sub
out
aaa
xchg
mov
push
test
push
test
and
adc
ljmp
pop
fstps
das
pop
insb
push
aad
stos
mov
cmp
adc
mov
ljmp
clc
mov
dec
adc
loop
movsb
testl
xchg
cmp
mov
dec
sub
dec
mov
adc
lods
rcll
out
xchg
pushf
cmp
divl
dec
xchg
and
push
or
xlat
mov
sbb
fstpl
and
mov
adc
and
pop
jle
mov
and
lods
sub
rcrl
cltd
test
dec
dec
adc
lahf
push
mov
lcall
mov
cmpsl
addl
adc
mov
fdiv
pop
add
jmp
mov
xchg
push
addl
push
dec
xor
stos
fmulp
pop
pop
ficoms
ja
mov
xlat
add
add
push
iret
dec
sub
icebp
jo
out
mov
pop
pop
add
xor
cmp
gs
mov
rcll
outsb
jo
mov
out
push
sub
xor
xor
popf
inc
mov
in
ds
daa
push
mov
jae
std
dec
les
push
push
xlat
lds
adc
out
dec
lret
les
mov
inc
lret
or
fwait
test
outsl
adc
cmc
and
lods
xchg
pop
lret
stos
sub
add
int3
jno
xor
int3
jmp
push
add
dec
jge
roll
jbe
mov
sub
divb
mov
clc
test
xchg
add
idivb
or
ljmp
dec
cmc
loopne
jg
xor
xchg
pop
xchg
push
mov
xor
push
xchg
aam
insl
add
pop
out
into
into
repnz
lret
or
xor
out
imul
bound
mov
loopne
fistps
mov
shl
cmp
cmp
std
call
ss
jo
fistps
mov
dec
push
aaa
rorb
inc
cld
and
mov
xor
loope
mov
mov
aad
sbb
inc
cmp
out
leave
mov
mov
add
xchg
add
imul
stos
mov
test
and
stos
sub
stos
cmpsb
and
nopl
addb
jge
jl
mov
jbe
jns
gs
jle
jb
ficoms
mov
dec
xlat
add
sub
mov
jb
pop
outsl
bound
mov
or
cwtl
test
daa
xchg
pushf
sub
jns
mov
ficompl
xor
insl
rcll
call
jno
outsl
popa
loope
xchg
aam
shlb
jle
call
cmpsl
pop
jle
sub
jns
cmc
aad
sub
std
fiadds
jb
sbb
sbb
stos
fnstenv
xchg
jmp
arpl
xor
dec
inc
rcll
cmp
adc
mov
ret
push
inc
cvtps2pd
or
sahf
data16
mov
sbb
mov
dec
mov
out
negl
mov
sub
sub
daa
and
outsb
cltd
movl
insl
inc
jnp
int3
jmp
addl
xor
jge
mov
jo
es
and
movsb
mov
jge
mov
int3
addb
ret
jmp
cld
mov
jnp
fisttpll
cltd
notb
sbb
incl
or
jns
int3
arpl
addl
pop
in
push
push
push
fs
outsl
popa
loope
test
sbb
fsub
xlat
neg
pop
cs
jnp
bound
iret
pop
aas
xor
jno
outsb
mov
aaa
ret
ret
mov
dec
mov
mov
aaa
test
insb
push
push
push
xchg
mov
mov
les
cmp
fists
leave
push
sub
pop
sbb
mov
aad
sbb
inc
cmp
inc
dec
leave
mov
je
sbb
mov
lcall
xchg
jb
lret
into
cltd
xchg
push
dec
lret
jno
outsl
push
shr
jp
movsl
and
jnp
cmc
add
enter
std
jl
rcrl
cli
jns
xchg
inc
xchg
mov
push
mov
movsb
subl
sti
xchg
xor
in
mov
pop
push
add
dec
pop
loope
pusha
faddl
pop
ficomps
inc
dec
cli
push
sub
mov
mov
add
icebp
jo
aam
push
insl
pop
and
sub
test
jecxz
pop
or
mov
pop
fistps
cmp
cmp
cmpsb
add
mov
cmp
xchg
gs
mov
sbb
dec
mov
jl
inc
lret
lea
jbe
xor
leave
pop
fiaddl
pusha
lret
movl
or
and
out
lahf
call
xor
mov
ja
sub
pop
pop
test
dec
repz
in
cwtl
dec
lret
push
dec
imul
clc
inc
pop
out
cli
jns
fstl
lea
jne
dec
push
pop
ja
xchg
adc
mov
lea
xchg
addl
mov
xor
jg
dec
lods
sub
dec
inc
adc
pop
or
mov
xor
pop
sub
push
aad
sub
es
bnd
sub
mov
and
insl
in
mov
push
push
ljmpw
jecxz
adc
sub
pop
push
lock
pop
xchg
mov
addr16
ret
mov
ret
in
sbb
das
cmp
push
inc
inc
mov
sbb
aas
in
xchg
cmp
jb
or
mov
mov
sbb
sbb
loopne
push
loop
je
xchg
adc
adc
sbb
fmull
test
add
out
sbb
in
inc
mov
push
sbb
jae
mov
mov
jns
std
sub
stos
loop
gs
shll
divb
stc
mov
out
outsb
pop
movsb
add
in
fimull
gs
popf
cli
pushf
stc
mov
movsb
push
imulb
incl
or
add
inc
or
push
cmc
dec
and
add
insl
mov
aad
jg
aam
pop
in
pop
in
imul
incb
mov
ficoml
cmp
cmp
xchg
test
repz
in
push
shrl
mov
inc
or
scas
cmp
dec
push
push
push
rorl
into
dec
int
mov
jmp
insl
mov
push
cmp
push
in
inc
rorb
add
popf
scas
adc
jne
mov
jo
and
push
adc
loop
ja
loope
test
cmpsl
add
test
pop
dec
adc
push
daa
ljmp
scas
inc
gs
clc
ja
jecxz
add
hlt
jae
dec
fistpl
inc
lock
out
outsb
leave
cli
ret
nop
or
sub
scas
jo
outsb
imul
mov
hlt
or
popa
lods
test
xlat
loop
loope
pop
inc
push
pop
ficomps
mov
xchg
add
push
inc
fbstp
inc
aad
cwtl
fdivs
bnd
lods
sbb
mov
ficoms
push
mov
test
xor
popa
pop
sub
rol
xor
cmpsb
pop
dec
mov
cmp
dec
mov
mov
mov
cwtl
mov
push
rcll
or
xor
movl
xor
xchg
xlat
jno
das
scas
or
dec
dec
and
jno
repnz
icebp
inc
in
dec
sahf
popf
add
push
sbb
daa
sub
ljmp
xchg
enter
mov
sbb
lahf
incl
enter
in
pop
sti
jp
cwtl
cmp
test
and
rcr
movsb
push
hlt
jae
pop
jp
cmp
outsb
xchg
std
adcl
jge
jno
dec
xchg
jle
pop
mov
repz
bound
jle
dec
popf
outsl
fcompl
inc
dec
push
lds
bound
pop
aam
rcr
lods
pusha
aad
push
xlat
and
xor
icebp
jo
pusha
gs
inc
xor
push
rolb
add
inc
push
rorl
lcall
shlb
inc
outsb
in
add
xchg
inc
mov
mov
ss
out
cmp
add
movl
sub
outsb
or
dec
push
cwtl
aam
das
inc
inc
push
push
add
sub
out
inc
add
ret
push
jle
sub
adc
xchg
pop
dec
ret
jnp
in
cmpsl
or
inc
mov
pop
dec
adc
lahf
push
mov
lcall
in
test
lods
int
jns
shll
repz
or
je
test
cli
test
xchg
nop
or
inc
test
shl
mov
mov
and
push
mov
arpl
pop
ficomps
cmp
adc
push
fimull
int
xorl
test
es
mov
jmp
movsl
fildll
popa
ret
jecxz
flds
jmp
lods
add
sub
jb
xchg
sub
outsb
pop
movsl
fcoms
icebp
adc
jle
mov
ss
dec
cmp
jl
lock
dec
int
adc
leave
cmp
inc
lds
pop
adc
or
lret
dec
xchg
shlb
cld
jo
pop
push
jo
adc
add
shll
test
cwtl
daa
mov
cmp
dec
and
pop
lahf
lret
ljmp
pop
inc
gs
clc
ja
arpl
sub
jae
call
loope
je
rcrb
or
xchg
nop
or
iret
jp
fldenv
cmp
fwait
jne
push
sbb
testb
pop
lea
ja
fsubs
mov
mov
push
test
in
push
push
out
insl
in
pop
or
mov
xchg
lea
loop
gs
sub
jb
pop
mov
xor
lods
or
je
mov
out
inc
inc
adc
xor
int3
mov
mov
xor
lret
inc
ss
ret
push
sti
pop
mov
pop
inc
inc
vpsrad
or
push
push
or
sahf
sbb
xchg
push
iret
insb
leave
sbb
xchg
sub
lret
mov
xor
notb
int
pop
mov
jle
ljmp
add
xor
daa
outsb
fsubl
cmpsb
hlt
jae
cli
inc
test
je
add
and
pop
loopne
rorb
std
jge
push
dec
cli
push
push
mov
and
adc
pop
push
stos
leave
rcll
fsubrp
push
push
in
jo
fstps
push
pop
jmp
pop
shlb
jno
xor
fs
in
insb
fisttpll
or
test
hlt
cmp
or
sarl
jmp
jge
pop
aas
out
jmp
mov
adc
lods
rcll
out
xchg
idivl
mov
divl
dec
xchg
and
push
or
xlat
mov
sbb
and
and
mov
adc
and
pop
sub
mov
pusha
stos
sub
daa
cmpsl
es
xlat
xchg
sbb
das
data16
cmovnp
add
mov
std
jl
lods
movsb
mov
movsb
and
jle
int3
adc
clc
ret
outsb
xchg
adc
mov
add
mov
jns
stos
sub
into
in
je
jg
xchg
loop
loope
xchg
mov
mov
imul
fcoms
cmc
incb
dec
mov
xor
dec
into
cmp
cmpsl
lock
imul
xor
mov
arpl
jle
iret
or
push
jo
dec
stos
stos
js
sarb
imul
adcl
xor
pusha
fists
inc
dec
dec
lret
mov
ret
dec
dec
enter
adc
and
les
pop
ljmp
mov
dec
push
sbb
fs
lret
loopne
enter
sahf
cmpsl
xchg
adc
mov
mov
mov
frstor
test
xor
push
into
insl
int
add
jo
iret
sub
daa
add
nop
stc
stc
js
xchg
mov
loope
ja
insl
adc
pop
push
scas
pop
sub
lcall
mov
popa
int
add
outsb
lds
xor
push
xlat
push
fidivl
shr
lods
jle
test
loopne
loop
xchg
aad
and
mov
and
insb
call
imul
mov
orb
push
iret
call
push
test
mov
mov
insb
push
jecxz
cmp
rcr
mov
sbbl
dec
add
inc
inc
cmpsl
mov
mov
inc
dec
push
pop
push
cld
js
shll
adc
fwait
sbb
pop
xchg
int
inc
fisttpll
movsb
inc
push
cltd
lods
addr16
sti
sbb
xor
lods
sub
push
xchg
outsl
lcall
lods
outsb
inc
insb
inc
leave
call
add
fs
jp
inc
gs
clc
ja
jbe
add
hlt
jae
mov
jnp
adc
notb
xchg
aad
jl
test
jecxz
cmp
je
jb
cmp
add
mov
mov
or
fcoms
jecxz
pop
fstps
or
cmp
lock
insl
test
xor
insl
in
dec
shlb
ljmpw
push
add
in
jnp
or
mov
cmp
imul
or
sbb
push
rcll
int3
xchg
ret
mov
add
cwtl
int
out
or
dec
or
scas
jmp
push
mov
xchg
sbb
mov
lret
icebp
les
pop
push
xor
bnd
jecxz
mov
mov
adc
stos
sub
pop
dec
jl
sbb
ljmp
lahf
mov
in
jnp
jp
fldenv
clc
ja
jbe
push
sbb
mov
clc
nop
std
xchg
adc
mov
or
push
test
jnp
enter
aaa
mov
cmpsl
popa
int3
lcall
mov
data16
jp
mov
test
into
bnd
aad
imul
pusha
es
fmuls
or
cs
cmp
jbe
testl
out
pusha
filds
mov
lret
push
loop
sahf
mov
scas
or
add
dec
inc
mov
adc
ss
imul
in
xor
dec
mov
sbb
test
addr16
push
dec
scas
scas
pop
les
lods
adc
jmp
mov
jno
out
jb
adc
push
inc
jb
adc
aam
out
push
mov
insb
sti
jg
sti
addr16
jl
sub
add
stc
js
sti
call
je
dec
les
or
dec
lds
scas
sbb
push
cmp
add
dec
jae
add
ret
sub
xor
pop
sysret
or
pop
fsubs
jecxz
movsl
pop
flds
push
test
fldenv
dec
into
mov
imul
push
dec
testl
in
mov
fs
inc
into
jb
jb
xor
imul
es
xor
add
mov
ss
dec
leave
adc
mov
int3
inc
in
insl
stos
cmp
jbe
jae
aaa
pop
les
push
push
xlat
lds
scas
dec
out
xchg
push
mov
fbstp
andb
adc
bndstx
test
xor
lods
sub
subps
arpl
fsubrs
mov
inc
jns,pn
add
rcrb
es
bound
jb
incb
je
outsl
mov
mov
mov
jne
ret
sub
or
push
test
outsb
sbb
lea
cli
pop
vpsubb
fstps
push
scas
fildll
imul
in
int
ficomps
rcrl
mov
in
jecxz
stos
xchg
aad
in
addb
movsl
pop
jmp
ljmp
lahf
das
cmp
or
add
dec
add
mov
ret
ljmp
pop
mul
mov
and
fnsave
mov
pop
add
sahf
sbb
movl
inc
ret
adc
adc
frstor
xor
test
adc
es
inc
mov
sub
jb
mov
add
clc
mov
sub
inc
int3
daa
in
outsb
jns
js
dec
jnp
divb
xchg
mov
mov
inc
pushf
jnp
xlat
add
sub
mov
flds
test
outsb
xchg
adc
mov
and
ljmp
aad
push
sub
bnd
out
xchg
scas
pop
or
pop
fcoms
adc
xchg
or
out
shrb
pop
fistps
mulb
insb
pop
ret
pop
outsb
in
ficomps
sarl
mov
imul
ss
nop
mov
int3
hlt
aaa
push
aam
mov
movl
inc
ret
inc
loopne
add
leave
sbb
rcll
xchg
jno
jo
add
dec
xchg
push
lcall
jg
inc
cmpsb
stos
and
lcall
dec
cmp
jae
shrb
movsb
sbb
dec
push
cmpl
test
and
imul
or
popl
xchg
fcmovne
ret
inc
sahf
sahf
hlt
jge
icebp
mov
in
jp
addl
sbb
imul
addb
inc
cmpsl
rcr
pop
fcoms
jecxz
pop
fstps
outsb
and
push
lock
jg
sbb
pop
sub
insl
xor
shlb
out
ljmp
push
cs
cmp
mov
mov
cld
out
inc
push
cmp
mov
in
lea
sbb
sahf
ret
addr16
dec
int
mov
inc
inc
lret
adc
inc
ret
inc
lea
cmp
mov
add
sahf
shlb
mov
daa
xchg
shr
dec
addr16
insl
ret
inc
jg
jmp
push
and
xlat
repnz
xchg
rorb
lds
lret
sti
cmpsb
and
mov
jbe
shrb
sbb
add
movsb
and
and
clc
ret
outsb
xchg
adc
mov
add
xor
ja
jbe
out
test
jae
push
pop
inc
sub
jg
jle
xlat
fcompl
xchg
adc
mov
ficompl
imull
add
push
mov
icebp
jo
aam
push
insl
pop
inc
adc
mov
subb
pop
add
mov
test
xchg
jmp
es
cmp
cmp
xor
rolb
scas
push
sbb
lret
mov
inc
out
repnz
sti
jb
xor
aas
mov
and
int
mov
mov
sbbb
imul
mov
mov
paddq
sbb
sub
push
push
repz
icebp
and
dec
imul
and
jns
add
test
scas
sub
pop
out
cli
jns
js
cld
int
divb
adc
or
mov
jge
shll
outsb
cmp
jbe
jae
dec
pop
add
sbb
pusha
lret
xchg
fistpl
pop
leave
jp
push
fiaddl
inc
fstp
jno
push
out
pop
jle
into
xchg
test
loop
sub
call
xor
push
pop
mov
subl
into
out
test
daa
mov
cmp
lock
mul
push
shl
jns
cmp
sarb
pop
mov
xchg
dec
enter
decb
dec
les
or
movb
mov
lret
sbb
sbb
pop
push
fucomip
jmp
je
xchg
adc
addr16
sub
stos
ja
dec
ja
test
fmulp
push
bnd
and
and
pop
lahf
cli
push
add
inc
sub
divl
xchg
cmc
je
and
cmpsl
pusha
push
pop
js
out
outsb
xchg
adc
cmc
mov
mov
jmp
pushf
mov
aam
mov
cmc
faddl
pop
int3
popa
loope
adc
sub
mov
xlat
push
mov
aam
sarl
jmp
test
daa
bnd
jo
aam
push
insl
pop
and
subb
pop
add
mov
inc
shrb
jae
add
and
aad
cmp
arpl
sti
ja
mov
in
push
cmp
lret
lret
dec
aaa
ss
int3
enter
xchg
mov
or
loopne
cwtl
inc
shrb
mov
push
mov
cmp
ret
cld
sbb
adc
test
push
mov
popf
sbb
push
popl
inc
into
in
fsubs
mov
mov
fiaddl
push
lods
ja
scas
lahf
push
loope
js
xchg
stos
sub
pop
jle
cmc
je
outsl
lret
adc
or
lea
jl
out
cmp
sub
or
jno
int3
daa
sub
jle
popa
loope
fistpl
adc
pushf
xchg
jecxz
pop
or
or
test
mov
in
imul
bound
mov
addr16
sti
add
push
push
mov
lock
icebp
xchg
ljmp
inc
inc
push
cmp
mov
ss
mov
mov
push
adc
inc
int
dec
mov
dec
ljmp
xor
mov
test
fwait
sbb
jb
enter
lret
mov
jg
jmp
push
and
inc
repnz
xchg
rorb
lds
xchg
dec
insl
cmc
mov
ljmp
pop
sub
repz
jns
frstor
adc
leave
je
outsl
out
dec
jp
xchg
nop
or
insb
daa
push
jge
icebp
es
pop
xchg
movsb
jmp
stos
jecxz
mov
test
loop
pop
inc
push
pop
fistpl
dec
xor
push
pop
push
ds
mov
pop
add
xlat
test
roll
out
data16
jg
arpl
bound
pop
fisttps
cli
cmp
mov
dec
mov
lea
add
jecxz
lahf
mov
scas
or
rcll
inc
inc
cwtl
adc
aaa
lock
in
out
mov
inc
movb
or
mov
data16
cmp
mov
and
leave
dec
cld
sbb
adc
jmp
push
jecxz
mov
lahf
jno
stos
sub
and
cmp
fs
pop
xchg
mov
cmpsl
jecxz
sub
es
pusha
outsl
cmp
cld
je
add
sub
jbe
xor
lods
lret
xor
jae
je
dec
pop
loop
inc
inc
sbb
fistpl
pop
push
push
mov
push
sarl
mov
fcmovu
outsb
dec
dec
into
out
idivl
push
pushf
idivl
mov
jmp
das
js
in
cli
mov
xchg
xchg
insb
jmp
cmpsb
fnstenv
cmp
xor
xchg
movsl
jle
shll
dec
mov
insl
cmp
cld
pop
mov
inc
ret
fneni(8087
and
mov
fwait
xchg
imul
push
push
nop
popf
sbb
push
adc
jbe
adc
aas
imull
cli
adc
or
daa
cmpsl
es
pushf
rcrl
adc
out
adc
ret
mov
dec
stc
in
inc
arpl
jns
std
mov
cli
bound
cmp
iret
add
jne
stc
xchg
out
outsb
pop
jp
inc
outsb
mov
addl
outsl
mov
es
jb
cs
jno
outsl
mov
loopne
pop
xchg
stc
xor
xor
and
arpl
pop
pop
lock
push
aad
or
icebp
jo
out
shl
pop
lcall
out
pop
push
jge
lea
insl
mov
dec
into
ljmp
daa
sbb
mov
push
mov
loop
lea
scas
push
inc
mov
xor
popa
cmp
lcall
pop
xor
imul
mov
push
mov
out
mov
add
xor
shlb
xchg
pop
dec
xor
mov
xor
lods
sub
mov
inc
mov
adc
cld
out
testl
in
jp
jge
cwtl
inc
mov
test
mov
daa
and
sti
mov
adc
inc
push
lea
xchg
mov
xchg
fiaddl
sub
jg
jle
xlat
fcompl
xchg
cmp
mov
data16
jp
mov
test
into
bnd
aad
imul
pusha
or
push
ficompl
mov
mov
cmp
jbe
mov
in
xlat
xchg
fs
pusha
filds
mov
dec
push
loop
push
das
scas
push
rorl
aaa
ss
push
enter
adc
cmp
and
push
sbb
inc
shrb
aam
mov
jno
out
lea
mov
mov
adc
mov
pop
mov
mov
adc
nop
pop
aam
test
adc
in
stos
push
pop
cmp
pop
push
out
ja
add
stc
stc
js
cld
test
divb
stc
les
outsb
xchg
dec
jns
or
or
call
lock
cmpsl
loop
repz
loop
cmp
cmp
cwtl
pusha
pusha
fcoml
or
jecxz
xor
pop
fstp
jo
push
out
add
sub
push
fiadds
int3
lahf
xchg
out
icebp
cmp
dec
imul
and
outsl
cwtl
mov
xchg
push
aam
call
adc
scas
ret
arpl
ret
imul
sti
sbb
lea
jle
fdivl
mov
or
mov
dec
lret
addr16
push
addb
mov
mov
adc
lcall
add
sbb
aas
mov
xor
lods
sub
fiadds
xchg
adc
outsb
inc
jl
leave
call
add
fs
jo
cmp
sbb
sbb
emms
jle
movsl
and
fdivr
shl
xchg
orb
shl
mov
in
filds
add
add
addb
inc
xchg
pushf
ficomps
push
or
inc
pop
arpl
push
lock
push
push
iret
cwtl
fucomi
fxch
out
sub
in
call
aad
pop
or
sub
ja
test
cmpsl
jns
roll
add
ljmp
addr16
push
adc
iret
mov
das
inc
push
cmp
lret
xor
out
enter
sti
xchg
xchg
arpl
ret
fneni(8087
pop
sub
int3
ss
dec
push
sbb
jae
push
lcall
inc
xor
inc
rcrb
scas
imul
sub
daa
cmpsl
es
jle
xchg
sub
adc
add
push
xor
pop
jge
jns
inc
cmpsl
es
bound
jb
inc
je
outsl
out
cli
inc
jno
nop
cs
cs
mov
aad
inc
addl
pop
ficomps
lock
sbb
lret
push
sbb
in
xchg
xchg
aam
jne
jmp
add
mov
test
push
in
insl
in
pop
or
bound
mov
lea
shrl
aam
aad
scas
ds
pop
inc
stos
test
repz
out
mov
sub
xor
fwait
adc
pop
jno
push
les
xchg
cmp
aaa
inc
int
dec
mov
cmp
and
or
inc
vpsrad
adcl
dec
bound
lcall
test
xor
imul
push
rclb
push
bound
repz
sub
lret
xchg
shl
adc
in
sub
mov
cli
jns
js
cld
int
divb
mov
pop
lahf
mov
dec
mov
xlat
fiaddl
mov
ret
sbb
leave
enter
loop
sbb
mov
daa
mov
lods
mov
scas
fcom
push
loopne
insb
aad
push
in
pop
in
jno
jo
pushf
or
xor
sbb
add
rclb
mov
mov
inc
roll
cmp
cld
out
inc
push
cmp
mov
in
lea
mov
push
push
int3
dec
push
aaa
add
dec
inc
stos
movsb
mov
inc
ret
fneni(8087
ret
adc
push
adc
shl
dec
sahf
test
movsb
mov
leave
adc
test
sbb
xor
xor
xchg
and
lods
sub
lret
cli
sub
mov
xor
dec
push
cmpl
scas
bound
stos
sub
lcall
movsl
and
clc
ret
outsb
xchg
adc
mov
add
repnz
ja
mov
jns
stos
sub
into
ja
je
cmp
addl
pushf
xchg
jecxz
pop
or
or
push
test
jle
mov
int
out
insl
xor
out
data16
in
nop
sub
outsb
lods
sti
and
or
test
daa
lock
pushf
mov
xor
or
dec
mov
mov
cmp
sbb
xorb
and
sarb
add
mov
mov
out
or
lret
or
and
or
inc
push
pop
lret
mov
adc
adc
sbb
stc
xor
sbb
daa
mov
sbb
mov
jmp
xorl
sub
lods
add
nop
stc
stc
js
xchg
push
jo
and
ja
lods
adc
mov
sbbb
icebp
lock
mov
cmpsl
jb
jne
je
inc
fcomps
adc
lds
popf
fistpl
sub
lods
or
mov
xchg
push
xchg
jo
lahf
jle
in
sub
and
cmp
addr16
int
sti
sti
in
push
add
push
adc
adc
adc
sub
in
and
aaa
aaa
mov
push
dec
and
jecxz
adc
mov
das
scas
push
rorl
inc
xorl
mov
fisttps
lret
clc
xor
int
push
ret
inc
lds
ljmp
pop
xchg
inc
xchg
pop
cltd
movsb
dec
arpl
jne
sbb
test
dec
faddp
sbb
insl
and
outsb
cltd
insl
insb
ret
cmpsb
cmp
out
pop
push
daa
lret
lods
jecxz
push
scas
jge
xlat
jnp
testl
mov
je
testl
dec
shlb
mov
pop
or
hlt
cli
cmc
je
dec
push
jle
popa
loope
les
mov
xchg
jno
or
jns
out
push
pop
sub
push
daa
bnd
jo
aam
push
insl
pop
pop
shrl
xor
stos
out
and
cltd
out
cld
jo
lock
mov
sub
addr16
ret
mov
insl
in
jbe
orb
nop
mov
dec
enter
cmpl
mov
push
push
or
xlat
fadd
xchg
fs
cmovbe
movsb
mov
leave
into
ret
adc
stos
add
cmpsb
and
inc
sbb
sbb
nop
sbb
mov
xor
mov
int3
jmp
push
add
scas
sub
pop
es
add
inc
cmpsb
mov
jnp
or
mov
jge
shll
fnsave
sarb
fmulp
fadds
cld
cmpsb
adc
cmp
or
inc
stc
inc
jl
pop
sub
add
pushf
sbb
fiadds
pop
pusha
xor
push
fdivr
insb
call
pop
cs
jnp
push
out
push
iret
pop
aas
xor
ja
fcos
ljmp
jo
outsb
add
fnstcw
mov
ljmp
push
xor
dec
mov
inc
lret
cmc
out
dec
inc
outsb
mov
mov
orb
inc
jo
into
ljmp
mov
cmpsl
adc
jbe
iret
shlb
adc
ss
and
pop
lahf
mov
xchg
inc
xor
lods
xchg
scas
lahf
push
loope
out
popf
arpl
jae
dec
jne
je
xchg
insb
xlat
add
in
cld
jnp
mov
sub
icebp
push
daa
divl
xchg
and
bnd
or
and
repnz
jl
xchg
lret
pop
pop
fistl
js
clc
mov
add
mov
push
push
push
mov
icebp
adc
out
mov
sbb
shll
push
pop
mov
subl
into
out
test
daa
fwait
sub
out
pop
push
sbb
mov
cltd
mov
jp
or
lret
xchg
mov
int
enter
cmp
leave
dec
mov
test
push
sbb
inc
shr
mov
and
data16
sbb
scas
mov
int3
dec
sbb
xor
push
aad
stos
xchg
add
sbb
push
mov
sub
fidivl
xchg
jb
aam
movsb
xchg
dec
lret
xchg
dec
insl
jge
pop
lahf
stos
push
dec
cmp
sbb
std
mov
daa
cmpsl
add
sub
jae
xchg
cmp
movsl
and
dec
inc
add
cmc
hlt
mov
push
stos
data16
jbe
stos
sbb
cltd
push
dec
sbb
add
cmp
adc
aam
pop
ffree
shl
push
fimull
in
movsb
push
out
push
mov
jle
popa
add
shll
sbbb
popf
stc
out
or
pushf
clc
aam
jmp
inc
jp
push
mov
mov
cld
mov
imul
pop
sbb
out
cs
and
xchg
out
xor
sbbb
ljmp
push
cmp
inc
pop
pusha
xchg
das
mov
out
adc
xor
add
fwait
sbb
pop
xchg
push
dec
or
pop
les
push
sbb
push
push
inc
and
dec
jg
sbb
sahf
ss
push
cmc
fwait
aaa
and
lock
lahf
push
xor
xchg
lods
arpl
sbb
repnz
loop
gs
lea
pop
fisubl
outsb
xchg
xchg
mov
cmc
mov
cli
mov
addl
into
pushf
test
popa
loope
faddl
stc
lods
cmp
pop
mov
lock
pop
aam
jne
dec
gs
or
sbb
xor
insl
in
dec
shlb
ljmpw
push
add
in
jnp
stos
mov
lock
test
cmp
xor
mov
lcall
fs
push
cmpsb
in
sbb
scas
push
inc
into
test
jl
cmp
inc
mov
xchg
jle
dec
les
fadds
inc
mov
push
jmp
push
mov
xchg
popf
sbb
mov
xor
inc
ret
pop
fistpl
in
psubq
data16
lods
sub
xchg
loopne
lods
sub
add
outsl
lcall
lods
outsb
inc
insb
sbb
call
dec
jl
mov
jp
sub
lock
cli
jns
mov
push
std
jb
mov
test
jp
or
xchg
fdivrs
arpl
bound
add
add
inc
rcrl
cmp
stc
aam
xchg
clc
add
mov
fnsave
rcll
lock
pop
add
sbb
xor
push
push
in
insb
call
pop
push
mov
mov
fistps
cmp
cmp
jae
in
mov
cmp
mov
push
int
mov
push
icebp
jne
sar
xchg
cmp
xor
lret
addr16
mov
out
and
iret
subb
pushf
sbb
sbb
push
dec
mov
dec
xor
ret
pop
fistpl
sbb
pop
xor
in
sub
popf
out
sbb
in
inc
mov
push
jg
popl
rep
enter
enter
std
jl
rcrl
cli
jns
punpckhdq
mov
mov
stc
das
nop
jnp
popf
mov
mov
pop
xchg
stos
cli
lahf
sti
mov
sbb
jg
popf
fwait
pop
xchg
nop
movsb
fcoms
mov
inc
lret
push
ficompl
xor
rcll
call
jno
mov
adc
insl
mov
jge
test
in
in
insb
jnp
cmp
iret
sub
clc
inc
inc
shlb
mov
in
add
push
push
push
cmp
adc
xchg
inc
out
data16
dec
scas
out
cmp
inc
outsb
and
push
sbb
sbb
sahf
sbb
icebp
inc
andl
outsb
push
test
adc
lret
jnp
mov
hlt
push
and
nop
pop
and
aad
adc
mov
add
jge
inc
pusha
in
divl
jns
std
mov
jb
and
out
fcmovne
ret
inc
or
jp
testb
mov
loopne
mov
cmp
test
fidivrs
loop
int3
xchg
fcompl
pop
ror
mov
mov
popa
je
cmp
outsl
cmp
into
repnz
fistl
cwtl
stos
jecxz
test
call
sti
or
push
in
icebp
pop
jno
movsb
xor
mov
mov
aaa
mov
xchg
dec
jns
push
in
jbe
dec
push
cmp
icebp
roll
decl
dec
xchg
test
ret
lret
sbb
mov
mov
and
sbb
sbb
pop
xchg
push
std
or
dec
jge
pop
adc
stos
jle
xchg
stos
sub
or
sbb
lcall
cmp
fistl
enter
pop
mov
lods
inc
arpl
jge
rcl
out
jbe
jns
push
dec
jae
dec
jno
cmc
je
or
outsb
xchg
adc
aad
mov
call
or
add
add
outsb
sbb
ret
pusha
fsubl
adc
xchg
jecxz
pop
or
or
inc
ret
pop
sub
in
imul
insl
in
insb
push
cwtl
add
xor
ds
js
fs
outsl
jge
xor
rolb
repz
jge
mov
cmp
div
loop
push
xchg
mov
push
cmp
lret
ss
dec
int
enter
mov
dec
in
and
pop
pop
pop
jecxz
mov
push
mov
cmp
cmc
cs
les
lods
adc
fnstsw
mov
sbb
sub
daa
cmpsl
add
test
rorb
xor
ljmp
jge
rcl
xor
jns
push
imul
jno
cmc
je
or
outsb
xchg
adc
or
inc
sbb
lea
or
data16
lahf
cmpsb
mov
sbb
jg
popf
fwait
or
leave
lahf
adc
jecxz
pop
or
or
inc
xor
loope
push
ljmp
notb
nop
sete
push
das
cs
in
pop
js
ja
jno
loope
add
xchg
out
inc
adc
cmp
ss
mov
lret
push
sarl
dec
into
push
test
lret
sub
inc
dec
out
or
push
ljmp
xchg
xchg
sbb
pop
rorl
pop
leave
mov
inc
ret
inc
fistl
xor
aad
fwait
out
mov
lods
adc
scas
sub
jmp
inc
xlat
xchg
sbb
insl
outsb
loopne
hlt
cmpsl
inc
xor
in
jp
jge
fsubs
divl
xchg
mov
mov
fprem
ret
outsb
xchg
adc
je
or
shl
mov
in
sahf
add
push
jg
sub
enter
iret
pop
ficomps
cmp
xchg
xlat
push
fimull
push
cwtl
and
insb
aad
push
in
xchg
loop
mov
loope
adc
out
imul
push
jmp
adc
cli
jnp
xchg
test
repz
in
push
jg
call
ss
nop
mov
int3
sbb
mov
lret
aaa
mov
repnz
aaa
pop
les
icebp
daa
out
or
rorb
dec
jo
sbb
push
dec
insl
popf
sbb
dec
lcall
inc
xchg
adc
mov
lret
movsb
sub
daa
mov
pop
cltd
in
sar
outsl
outsb
jp
and
xor
jmp
pop
add
dec
jge
mov
lds
add
ljmp
pushf
movsl
and
dec
les
mov
ja
ret
or
jl
or
mov
fcoml
popa
loope
push
push
mov
negl
xlat
je
jg
add
pushf
jmp
cmp
mov
sub
es
out
mov
nop
mov
out
xchg
push
cs
mov
cmp
inc
aaa
or
insl
in
andl
mov
mov
in
mov
cmp
push
mov
int
enter
sarb
mov
inc
movb
or
mov
adc
xchg
pop
xchg
jb
jno
sbb
and
mov
mov
adc
stos
sub
pop
push
pop
push
repnz
movsb
and
and
ret
mov
and
jp
jge
fsubs
divl
xchg
and
add
pop
shll
pop
ja
xchg
adc
mov
lea
and
push
mov
and
sub
and
adc
and
ret
xchg
pop
pop
fisttpll
or
jp
xchg
out
icebp
nop
mov
dec
dec
into
out
dec
dec
fcompl
adc
inc
add
ljmp
out
lcall
out
jge
movsb
jno
ljmp
aaa
and
inc
jmp
xor
arpl
pusha
cwtl
mov
push
rcll
mov
dec
into
dec
mov
ss
inc
ret
outsl
and
scas
and
in
adc
orb
lcall
inc
sbb
jnp
lcall
out
popf
sbb
lock
pop
stos
sub
and
push
mov
imul
jne
je
clc
ja
jno
sub
dec
divb
je
clc
push
outsb
xchg
adc
mov
push
jne
or
loopne
add
and
push
xchg
test
xlat
loop
loope
pop
inc
adc
pop
xlat
inc
mov
popa
je
sbb
stos
push
aad
push
sub
bnd
out
mov
in
call
xor
pop
or
sbb
add
sub
clc
inc
inc
shlb
and
sub
ljmp
mov
ss
dec
cmp
sbb
add
cwtl
daa
dec
inc
xchg
xchg
pusha
dec
dec
les
ret
mov
inc
lds
adc
jle
mov
pop
push
push
sbb
cwtl
dec
cmp
and
cltd
mov
scas
test
jecxz
mov
mov
adc
stos
sub
pop
dec
jl
sbb
cli
les
cmc
mov
ljmp
vfmsub132sd
fwait
adcl
outsl
out
outsb
xchg
dec
jns
or
or
cmpsl
ja
mov
shlb
jb
scas
int
add
sub
dec
adc
pop
or
test
dec
ficompl
pop
mov
insl
push
push
aad
daa
scas
dec
into
insb
lahf
in
pusha
fcoml
cmpsb
insb
call
imul
cs
pop
in
loopne
stc
pop
inc
roll
mov
outsl
mov
and
mov
ss
dec
cmp
fistps
push
mov
mov
dec
enter
cmp
mov
jmp
ja
adc
aas
mov
and
popf
sbb
mov
pop
lret
mov
adc
inc
sarb
jnp
fs
adc
out
mov
hlt
repz
test
in
xchg
adc
cld
jnp
loop
jge
out
loope
adc
xchg
dec
mov
test
sti
mov
adc
mov
mov
mov
mov
pop
addb
pop
jecxz
and
xchg
xchg
mov
nop
inc
inc
sbb
ficomps
sti
mov
ss
pop
pop
repnz
push
push
dec
mov
and
lahf
aas
fistpl
mov
ret
jmp
xlat
cwtl
add
dec
into
mov
mov
cmp
cmp
cmpsb
out
cmp
movsb
jmp
arpl
push
mov
mov
push
rcll
or
jns
mov
cmp
int
faddp
mov
xor
das
out
adc
mov
test
dec
int
add
popf
adc
hlt
adc
mov
arpl
sub
call
pop
movsb
out
xlat
cmpsb
and
lahf
push
add
imul
in
or
add
stc
js
dec
jnp
divb
or
int
push
sti
cli
xchg
or
add
test
std
jl
in
xor
mov
repz
test
popa
loope
faddl
pop
ficomps
inc
dec
cli
lret
pop
shll
pop
pop
in
push
push
aad
jb
mov
adc
adc
sub
pop
xor
pushf
addr16
ljmp
jns
mov
std
into
jb
loop
js
popa
pop
cmpsb
xor
inc
insb
mov
adc
data16
mov
cmp
lods
enter
mov
in
or
movb
lahf
mov
mov
dec
lret
les
nop
cld
cwtl
pop
xlat
xor
xchg
adc
adc
mov
mov
loopne
mov
sub
lock
pop
stos
sub
and
jg
push
cmp
in
xor
ss
rolb
aaa
jns
sub
inc
sub
add
out
outsb
lds
jbe
or
mov
add
pop
cmp
rcrl
dec
push
popa
loope
ret
rcr
pop
fstl
je
mov
cmp
aas
fisubrl
and
jle
fisubl
es
pop
in
insb
call
pop
add
push
push
shrl
cmpl
roll
and
mov
push
jl
push
inc
pusha
imul
aaa
ds
in
fists
push
mov
cmp
movl
inc
ret
inc
loopne
cmp
leave
insb
mov
add
xchg
jae
lea
xchg
ret
inc
fistpl
jmp
loope
xor
sub
daa
cmpsl
es
cmc
pop
mov
xchg
cmpsb
and
addl
jp
sub
jmp
cli
jns
sub
mov
je
lock
cmp
addl
jp
jge
icebp
es
pop
xchg
mov
cmp
add
add
inc
rcrl
cmp
pop
push
ret
bound
pop
aam
scas
fildll
test
adc
dec
pop
mov
lahf
cli
lcall
in
jecxz
mov
pop
stc
cmp
imul
pop
movsl
fdivs
mov
mov
lret
mov
cmpsl
inc
mov
dec
mov
mov
jl
dec
les
mov
ds
scas
enter
mov
push
call
loopne
lcall
adc
je
mov
sub
xchg
fsubl
cmpsl
es
add
mov
adc
stos
mov
xor
loope
sbb
ret
ja
jbe
aad
iret
hlt
jae
pop
jle
cmc
je
outsl
lret
adc
sar
lea
cmp
xor
push
and
sub
mov
mov
mov
rcr
pop
fcoms
jecxz
pop
fstps
jb
cmp
lock
jg
sbb
test
xor
insl
in
dec
shlb
ljmpw
push
add
in
jnp
adc
sub
ljmp
aaa
mov
adc
xor
xor
imul
xor
mov
dec
xchg
cwtl
aas
mov
inc
mov
mov
inc
pop
and
adc
pushf
sbb
jnp
sbb
xchg
int
out
fisttpll
nop
shlb
push
stc
adc
loope
shll
cmc
adc
stos
sub
daa
cmpsl
es
ljmp
sub
xchg
adc
jbe
lret
ljmp
data16
std
jl
mov
push
sub
enter
mov
js
lahf
push
add
std
ret
in
mov
jp
inc
test
clc
ja
sarl
cltd
push
test
jle
pushf
and
add
inc
rclb
fcoms
leave
adc
pop
add
stos
aas
push
test
into
bnd
aad
imul
or
ret
pop
fcoms
iret
add
pushf
mov
out
lods
cmp
pop
fistpll
fdivs
loope
pop
aas
outsb
in
and
js
mov
arpl
xor
push
push
out
shrl
call
mov
lret
mov
testl
mov
test
sbb
adc
out
fadds
repz
xchg
jns
add
pop
mov
pushf
sbb
loop
lods
sub
add
mov
inc
push
jnp
adc
lahf
inc
fs
jp
jge
loope
ja
jbe
out
mov
cmpsb
and
xchg
sti
dec
addl
push
std
mov
hlt
divl
mov
cmp
add
add
dec
rol
loope
jle
mov
rorb
mov
and
loopne
adc
fs
xor
push
push
in
insl
in
pop
or
xor
xchg
lea
out
in
test
fistps
jl
sub
daa
pop
push
and
mov
mov
xor
pusha
jns
dec
rolb
mov
dec
dec
int
inc
cmp
xchg
jns
inc
ret
inc
popf
mov
push
cwtl
rcll
inc
xlat
push
ljmp
sti
inc
xor
sbb
test
adc
mov
lods
adc
sub
jmp
inc
loopne
js
int3
jg
iret
ljmp
lret
ljmp
data16
std
jl
mov
test
sub
enter
mov
mov
ja
xchg
adc
mov
lea
dec
mull
sub
pusha
je
outsl
sub
push
popa
loope
ret
xchg
ficomps
xchg
dec
gs
xchg
loop
fcom
push
in
icebp
imul
icebp
jo
imul
or
fimull
nop
das
mov
cmp
pop
jecxz
imul
mov
pop
nop
inc
inc
dec
cmp
int3
leave
or
add
mov
lret
dec
into
push
lock
data16
cmp
mov
or
ds
sbb
pop
xchg
push
andl
outsb
push
push
imul
jnp
ja
fidivs
pop
mov
into
in
fsubs
mov
mov
addr16
xor
lods
pop
sub
out
popf
arpl
jae
decl
jne
je
std
xlat
add
ss
jnp
mov
sub
icebp
and
jbe
sarb
fmulp
pop
add
xlat
loop
loope
pop
inc
adc
adc
sbb
arpl
pop
pop
aam
jne
cmp
add
daa
push
and
insl
in
mov
xor
cmp
gs
mov
sar
or
imul
in
push
sarb
sbb
mov
rorl
call
jno
loop
fnstcw
pop
or
mov
adcl
dec
bound
lcall
test
xor
pop
mov
arpl
push
bound
repz
sub
lret
xchg
shl
adc
in
sub
jl
ja
rolb
push
xchg
sbbb
stc
mov
out
outsb
pop
or
cmpsb
cld
jnp
jmp
push
jne
or
mov
cmp
cmc
push
enter
sub
pusha
fcompl
push
fstpl
ficoms
aam
sbb
fcmovu
outsb
dec
dec
into
out
addr16
mov
cmp
mov
inc
iret
sbb
or
cmpl
jns
cmc
and
out
ds
fwait
test
fs
mov
mov
cmp
scas
push
roll
cmp
mov
loop
out
clc
inc
ret
inc
and
push
flds
in
rcrb
into
mov
mov
and
adc
aas
xor
rcll
sahf
cmp
or
lcall
adc
int3
jmp
addl
mov
jge
jl
outsb
xlat
jbe
xchg
loopne
movsb
and
decb
lock
mov
je
or
addb
inc
bnd
or
dec
mov
outsb
xchg
popa
int3
push
mov
adc
pop
fcoms
dec
ficompl
pop
arpl
push
call
push
mov
inc
pop
loop
push
ficompl
sub
jnp
lods
roll
add
into
jb
mov
jl
mov
addr16
ret
mov
jmp
sbb
cmp
dec
push
push
push
shrl
push
dec
out
xchg
mov
movl
inc
ret
inc
loopne
lret
xor
leave
pop
fidivrl
sbb
adc
das
leave
dec
cmp
pushf
add
addr16
mov
cwtl
arpl
fwait
sub
mov
out
in
inc
mov
push
mov
repz
lods
jecxz
push
scas
jge
xlat
jnp
testl
mov
je
testl
dec
shlb
mov
pop
or
hlt
mov
je
dec
push
jle
popa
loope
les
dec
jb
xchg
push
mov
cli
jns
out
sub
mov
dec
into
test
imul
xor
mov
xlat
push
jnp
jne
push
in
mov
jo
subl
pop
mov
fldl2e
xchg
cli
arpl
sahf
rorl
or
mov
into
dec
int
cmpsl
xor
lret
adc
mov
jmp
mov
dec
lret
or
cli
and
popf
sbb
push
xchg
push
lcall
adc
stos
bound
stos
stos
sub
pop
out
pop
sbb
out
cmp
movsl
and
pop
data16
jae
xor
jno
clc
ja
rolb
xchg
and
cmpsb
and
add
nop
or
test
xor
cli
stos
sub
inc
repz
test
popf
mov
xchg
ja
nop
jle
arpl
jmp
cmp
sbb
movsl
jb
test
into
bnd
aad
imul
pusha
mov
aad
ficompl
mov
mov
cmp
jbe
pop
add
xlat
xchg
inc
out
pusha
filds
mov
sbb
mov
scas
or
inc
push
int3
dec
inc
jle
adc
ss
imul
mov
mov
push
push
xchg
inc
int3
dec
fwait
orb
dec
rclb
movl
adc
adc
pushf
fwait
loop
mov
mov
sbb
pop
pop
sub
adc
cmp
push
add
xor
lcall
jl
sub
inc
jae
test
jmp
scas
cmc
je
pop
lahf
push
pop
clc
ds
or
sti
push
jbe
or
sarl
fldt
test
loop
pop
inc
xlat
pop
fistpl
xchg
call
lret
mov
push
inc
xlat
mov
iret
mov
in
adc
and
sbb
ljmpw
arpl
cmp
fistps
sarl
xor
in
push
and
fwait
cmp
pusha
cwtl
mov
cltd
rcll
mov
or
into
dec
dec
xor
movl
inc
jo
ja
or
jne
and
pushf
sbb
sbb
dec
cmp
adc
jge
add
lahf
in
xchg
xchg
adc
cwtl
movsl
shlb
push
adc
jmp
lods
icebp
nop
pop
cmpsl
es
sub
cmp
fwait
lds
push
add
push
dec
push
imul
addb
nop
aas
or
ret
cmp
shrl
or
notl
and
add
sbb
cmp
cmp
jle
push
lcall
pop
fldl
movsb
dec
daa
xchg
and
mov
cmp
mov
push
sbb
and
cmpsl
pop
rcr
pop
movsb
dec
mov
popf
sub
imul
jp
cwtl
push
xchg
cs
jns
imul
mov
jge
mov
cmp
test
mov
sub
shll
inc
out
mov
mov
out
jb
clc
mov
mov
pop
inc
aas
mov
and
popf
sbb
jg
mov
ficompl
pop
push
lods
adc
adc
inc
sbb
pop
mov
jno
stos
sub
and
popl
enter
and
mov
pushf
inc
gs
clc
ja
jbe
add
movsl
pushf
fisubl
push
aaa
mov
mov
jge
cmp
cmp
or
divb
fnsave
in
push
jg
loope
or
or
xchg
push
pop
fdivs
xchg
in
shl
aad
push
push
mov
dec
into
test
imul
mov
xchg
cmp
sub
push
or
pop
jb
mov
pop
cmpsb
xor
inc
in
mov
es
ss
out
pop
fistps
idivl
mov
sbb
adc
adc
les
femms
repz
rcl
cs
shl
push
idivb
cmc
dec
lock
popf
test
cltd
xchg
push
in
dec
cltd
jbe
xor
push
xor
sub
mov
stos
das
sub
sbb
push
push
aad
sub
and
adc
call
mov
stc
leave
stos
sub
ljmp
int3
test
jb
jle
outsl
out
xchg
mov
repnz
test
cltd
or
push
mov
and
sub
rorl
jecxz
mov
inc
push
pop
fstpl
mov
out
scas
adcl
fucomi
sub
push
insl
enter
out
pop
pop
dec
sub
xchg
jo
push
out
test
inc
sub
scas
mov
mov
insb
test
aas
push
pop
xor
jl
inc
cltd
mov
aaa
std
cs
int
add
leave
dec
les
or
inc
lds
pop
mov
dec
inc
les
dec
xchg
sbbl
sbb
sbb
jle
xor
sbb
mov
rcrl
adc
out
mov
ret
mov
dec
stc
in
inc
pop
outsl
es
out
ja
add
stc
stc
js
cld
jecxz
divb
cmc
loopne
ja
outsl
adc
mov
xor
stos
cmp
xchg
cld
pusha
outsb
enter
xchg
jne
leave
enter
loop
sbb
mov
daa
mov
popf
in
jo
fstps
divb
sub
pop
jno
push
push
jmp
lcall
push
sbb
imul
push
cwtl
push
xchg
push
loopne
cmp
push
icebp
xchg
loopne
mov
push
outsb
popf
call
ss
push
pop
lcall
lcall
subb
lods
pop
fcmovnu
les
aaa
jecxz
xor
mov
push
push
push
pop
sub
dec
addb
mov
ffree
inc
sti
jae
push
sbb
daa
sub
leave
subb
sets
push
repz
test
cmp
and
inc
mov
xor
fwait
inc
pusha
in
divl
jns
std
push
jae
jb
fwait
aad
xchg
sahf
pushf
add
adc
lds
jl
lock
in
sahf
add
add
jle
dec
push
pusha
fcompl
inc
push
stos
xor
loop
pop
aam
shrl
pop
call
push
daa
bnd
jo
aam
push
insl
pop
dec
sub
fstp
stc
fstps
sub
loop
gs
sarl
or
scas
scas
jb
stos
clc
add
xlat
jo
mov
pusha
outsl
insb
imul
dec
xor
out
pop
ret
mov
xor
mov
inc
xchg
and
leave
or
fcmovb
nop
fidivrl
mov
mov
out
or
add
xor
pop
and
arpl
mov
xor
lods
sub
mov
inc
mov
adc
cld
cmpsb
dec
testl
in
jp
jge
stos
xchg
mov
test
mov
dec
adc
pop
fdivr
adc
add
lea
jbe
xchg
push
cmp
xlat
scas
test
outsl
in
xchg
adcl
cmp
rcl
push
fimull
mov
loopne
xor
mov
loop
mov
xlat
inc
popf
in
insb
imul
sub
test
jo
inc
shrl
in
insl
in
and
sbb
cmp
arpl
sahf
adc
cltd
mov
jp
add
std
cmc
xor
jns
inc
jae
std
dec
les
push
push
pop
lds
pop
pop
mov
test
dec
mov
int
jmp
xor
pop
or
faddp
pushf
adc
push
movsb
sub
test
dec
jmp
sbb
out
sti
iret
movsl
and
call
mov
lods
arpl
xor
test
lret
xchg
sub
outsb
xchg
mov
inc
pushf
jnp
mov
imul
push
aaa
xchg
jb
and
inc
out
outsb
push
aas
test
pop
push
inc
lods
xor
push
mov
out
sbb
sub
or
fs
push
ljmp
icebp
push
xlat
adc
lcall
scas
lods
jg
pop
fcomip
cld
movb
gs
lods
insl
and
adc
rcll
int
mov
inc
xor
dec
scas
push
rcll
jge
sub
and
inc
dec
leave
cmp
clc
stos
xchg
mov
in
push
cld
hlt
push
shll
adc
fwait
sbb
stc
add
inc
std
lret
dec
lretw
call
in
jle
lods
sub
sbb
sbb
dec
in
sar
dec
outsb
cli
movsl
and
pop
jp
mov
add
scas
cwtl
cmp
mov
pushf
adc
stc
les
outsb
xchg
dec
jns
or
or
add
pop
repz
sub
pop
test
xchg
loop
loope
xchg
or
and
ret
aam
rcll
fisubrs
push
iret
insb
outsb
icebp
jo
mov
ficomps
inc
sbb
jmp
out
aad
sbb
stos
ss
sarb
daa
jno
cmp
pop
cmp
arpl
sahf
adc
pop
mov
icebp
roll
mov
imul
enter
lret
fsubp
ret
inc
pop
pop
and
in
mov
push
mov
in
or
insl
sbb
and
xor
faddl
jmp
ficompl
cwtl
xchg
daa
lods
lods
sub
ret
jb
ret
sbb
pop
adc
push
arpl
aam
inc
call
mov
stos
ret
sub
mov
je
mov
add
mov
jg
jge
ljmp
stc
push
adc
xchg
andb
mov
and
rcrl
clc
xchg
sbb
push
pop
push
ds
mov
pop
add
xlat
test
roll
out
data16
jg
arpl
bound
pop
fisttps
cli
cmp
mov
dec
mov
mov
push
arpl
xor
push
push
inc
inc
jns
mov
aaa
lock
in
pushf
insl
mov
inc
movb
or
mov
inc
loopne
cmp
mov
mov
adc
adc
jbe
iret
sarb
sbb
iret
adc
inc
lcall
and
cli
lahf
push
add
mov
sbb
loop
test
push
imul
push
sarl
lock
out
jnp
add
nop
or
sub
shll
mov
sarb
fmulp
pop
add
mov
jle
dec
mov
es
loop
pop
fstps
fsubrl
push
out
lock
jle
cs
xchg
mov
and
insl
in
insb
push
loope
ljmp
bound
ud1
pop
aas
xor
test
cmpsb
outsl
push
mov
add
shll
and
daa
jle
dec
cmp
xchg
int3
dec
push
aaa
orl
inc
lret
and
pop
ret
inc
out
or
ds
mov
adc
int
add
xor
jge
ret
jg
addl
pusha
pushf
fwait
sub
loopne
sahf
sbb
test
and
call
mov
xchg
dec
sub
pop
into
sub
jge
xor
cmp
enter
aaa
ss
push
jne
aad
insb
pop
push
lea
sub
movsl
in
push
rcll
popf
jg
outsb
lds
mov
faddl
jnp
lea
popf
xlat
cmp
jbe
mov
out
ljmp
dec
dec
into
out
dec
mov
pop
mov
pop
ss
fmuls
jge
imul
loopne
fildll
hlt
roll
and
pop
or
cmp
ret
ret
mov
push
lds
jge
lahf
roll
decl
dec
int
mov
movl
xor
mov
inc
mov
shr
adc
iret
sbb
pop
shll
pusha
pop
leave
mov
fadd
inc
fistl
xor
and
jne
fildll
scas
sub
cmpsl
es
jb
inc
push
and
adc
enter
mov
in
jnp
jp
fldenv
clc
ja
addl
adc
fxch
pusha
sub
lds
jbe
or
and
mov
jns
cli
xor
cs
mov
decl
popa
loope
inc
inc
packssdw
pop
push
sti
stc
mov
inc
mov
push
pop
sub
push
mov
jmp
aaa
rcrb
adc
ret
sbb
xchg
mov
in
jecxz
mov
pop
mov
mov
inc
sarb
jno
mov
aaa
mov
mov
xor
pusha
mov
push
inc
out
xchg
jecxz
mov
aaa
loope
adc
les
popa
jp
mov
call
fisttpll
pop
sbb
movsb
mov
leave
scas
outsb
push
lret
inc
dec
aas
sete
lds
jne
cmpsl
jnp
sub
xchg
push
xor
add
out
ret
and
cmp
mov
dec
mov
scas
cmc
pop
roll
jbe
sub
fmuls
sbb
xchg
out
lds
test
push
jl
lock
cmpsl
loop
repz
loop
sub
out
inc
adc
pusha
lret
ficompl
faddp
push
xlat
mov
push
rcr
inc
lock
pop
jmp
imul
or
xchg
mov
pop
je
xchg
aam
nop
das
mov
cmp
ja
cltd
ljmp
loopne
push
adc
mov
mov
cmp
scas
das
scas
inc
jmp
mov
cmp
int3
adc
fnstcw
xor
aas
mov
and
popf
sbb
mov
add
scas
xchg
inc
movb
in
jle
lods
sub
sub
sbb
jge
sbb
in
cld
shlb
testl
in
jp
jge
hlt
mov
jns
js
cld
dec
jb
jne
sub
pop
lahf
mov
or
cmp
push
hlt
test
mov
and
lret
and
test
jle
sub
inc
xchg
pop
fistpl
aad
xor
xor
ret
bound
pop
aam
scas
fucomip
push
aad
jb
std
jle
cmp
ss
insl
sbb
mov
inc
adc
imul
out
lods
jg
pop
fisttps
stos
ss
sarb
daa
mov
cmp
mov
xor
push
aas
or
int3
faddp
jae
xor
jns
xchg
pop
out
movl
inc
ret
iret
push
sbb
inc
rolb
lret
xchg
mov
or
sar
out
cltd
iret
mov
adc
fisttpl
and
fwait
ja
fidivs
xchg
test
movsb
and
jmp
scas
insl
aas
int
lahf
dec
push
add
xor
jl
loopne
jbe
jns
aam
dec
repz
or
push
pop
cld
sti
mov
sub
stc
xchg
sbb
dec
dec
and
add
lock
cmpsl
or
xchg
sub
mov
mov
and
push
in
jmp
or
jle
dec
and
pop
cmp
lcall
ficompl
lock
fadd
push
cs
or
mov
jno
add
aaa
jae
in
insl
xor
addb
mov
in
add
fistps
mov
add
cmp
sarb
loopne
leave
dec
mov
xor
xchg
push
mov
ja
sbb
adc
add
cltd
movsb
adc
mov
out
lahf
mov
outsb
ficoms
scas
and
xor
sarb
sbb
iret
out
jns
mov
xor
cmp
mov
dec
loope
cmpsl
mov
lcall
je
clc
or
adc
test
sub
shlb
dec
pop
test
aad
popa
loope
xchg
addl
or
push
xlat
sub
aam
rcll
fisubs
push
iret
mov
mov
ficomps
inc
sbb
jmp
out
lcall
ljmp
and
movsw
fwait
in
aaa
mov
insb
cmp
in
cmp
int3
das
scas
int3
rolb
xchg
mov
dec
inc
push
xchg
jp
dec
in
cmpsl
repnz
mov
mov
pop
mov
lret
sahf
sbb
xor
lcall
adc
dec
repz
lcall
dec
xchg
popf
sbb
add
mov
insb
ret
cmpsb
cmp
and
bswap
jle
sub
in
mov
xor
clc
ja
int
addb
mov
cmp
adc
or
sti
push
idivl
adc
lcall
dec
imulb
incl
or
push
push
adc
mov
lahf
bound
fstps
in
add
mov
int
mov
fisubs
xchg
sub
mov
subb
pop
add
mov
test
xchg
jmp
es
cmp
cmp
xor
rolb
mov
xor
dec
mov
inc
out
pop
imul
sarb
ds
mov
pushf
sbb
shl
int
mov
mov
sbbb
imul
mov
mov
mov
pop
jb
cwtl
push
push
repz
sub
les
xchg
dec
outsb
cli
movsl
and
pop
jp
je
add
jb
and
jbe
add
hlt
jae
dec
jle
cmc
je
xchg
popf
lret
add
pop
mov
push
jne
or
loopne
add
and
push
mov
out
loop
es
dec
add
rorl
push
bound
pop
or
push
movsb
pop
jg
cmp
jmp
push
inc
aad
addr16
sbb
add
arpl
bound
pop
stos
jg
roll
sbb
lcall
sub
int
mov
inc
rclb
pop
faddp
sbb
mov
enter
fimuls
in
and
push
loop
inc
rorb
pop
cmp
dec
mov
int
mov
mov
inc
xchg
js
xor
inc
jns
mov
mov
rcrl
cmp
popf
mov
push
repz
xchg
test
xor
mov
mov
fiadds
leave
rorb
fsubrl
push
int
out
loop
not
leave
lea
push
xor
mov
push
stos
push
divl
out
sub
hlt
cmp
test
fidivrs
loop
leave
fwait
pop
pop
fistl
fsubrp
pop
fcoms
ds
hlt
or
in
mov
out
push
iret
dec
insb
addr16
or
in
cmp
push
adc
sahf
imul
cld
out
in
jns
add
cld
mov
in
pop
xor
aaa
mov
mov
xor
pusha
push
push
jnp
inc
bnd
inc
shlb
cmc
in
mov
inc
lret
and
push
ret
inc
pusha
add
lds
jno
int3
sbb
sarb
xor
cld
pop
xchg
xchg
adc
scas
mov
sub
sub
daa
dec
jnp
sbb
andb
jae
add
sti
jp
cwtl
cmp
test
and
hlt
jae
jb
incb
jo
addl
sbb
testb
xchg
mov
pop
push
test
jle
pushf
and
add
inc
xchg
add
push
push
fstps
push
stos
mov
pop
and
into
bnd
aad
imul
or
add
add
bound
aam
nop
das
mov
cmp
pop
jecxz
imul
mov
cmp
push
jmp
in
loop
inc
leave
pop
xor
push
push
int3
xchg
xchg
mov
movl
inc
ret
inc
loopne
std
xor
leave
dec
ficoml
ficoml
enter
xor
jle
or
xchg
adc
shrd
cmpsl
pop
mov
pop
inc
decl
jmp
and
adc
dec
testl
in
jp
jge
aaa
and
cmpsl
mov
movsb
and
mov
movsl
test
clc
ret
outsb
xchg
adc
mov
add
aaa
int3
ja
shll
or
mov
cmpsb
rorb
cmp
jle
fsubs
fadd
ret
xchg
pop
pop
fisttpll
ficompl
loopne
testb
push
mov
mov
fdivl
insb
push
loope
ljmp
subl
filds
mov
cmp
std
call
data16
cmp
mov
nop
jb
rcll
dec
test
add
inc
in
sarl
mov
dec
fdivp
aad
xor
cmp
xchg
pop
sbb
adc
movsb
push
ja
lcall
inc
jg
jmp
push
and
pop
sahf
sbb
pop
es
push
dec
insb
pop
mov
jmp
cmp
imul
out
jl
ja
rolb
xchg
and
jns
add
nop
or
jae
push
lea
xchg
mov
aam
arpl
andb
fidivl
mov
lret
pusha
fcompl
into
mov
xchg
mov
fwait
xchg
loop
fcom
push
in
icebp
imul
cmp
movsl
jge
in
pop
lock
scas
or
fwait
ljmpw
jecxz,pt
out
or
iret
call
pop
insb
jmp
pop
cmpsb
xor
inc
lods
mov
dec
loop
ja
dec
mov
pop
sarl
outsb
roll
mov
addr16
inc
aas
jae
std
dec
les
push
push
pop
lds
pop
pop
mov
test
inc
mov
les
sub
xor
in
pop
jne
fildll
scas
sub
cmpsl
es
les
xchg
adc
ret
adc
and
xor
loop
jge
jo
ja
arpl
jae
dec
jne
je
lea
push
add
sti
jp
sub
sarl
cltd
push
test
outsb
dec
dec
pop
loopne
pop
xchg
stc
push
gs
sub
push
push
rcrl
in
push
push
push
fs
fisubl
jo
shll
mov
cmp
pushf
xchg
into
cwtl
repz
jne
rorl
scas
cmp
fs
cmp
jne
inc
shrb
pop
outsl
pop
lds
cmp
enter
dec
rcrl
xor
mov
add
adc
sti
inc
lret
and
ffree
inc
pop
fildll
das
loope
or
push
ret
push
pop
push
sub
mov
cld
leave
dec
cmp
inc
adc
jle
sub
sbb
push
push
jae
xchg
test
ret
xchg
adc
sbbl
ss
dec
ret
scas
gs
jnp
imull
adc
icebp
sub
cmc
add
out
out
outsb
sti
cli
xchg
or
add
jne
or
mov
add
pop
cmp
test
xlat
loop
loope
pop
inc
push
pop
ficomps
mov
xchg
add
push
inc
fildll
sub
bnd
xchg
inc
fistpl
push
push
ficoml
xchg
mov
jmp
das
cmp
fs
push
into
jb
jmp
mov
cmp
rcll
xor
in
mov
push
jne
xchg
sub
inc
push
xchg
jp
dec
les
xor
push
cmp
sub
in
dec
lret
dec
mov
bound
loop
mov
xchg
adc
adc
cwtl
mov
loopne
stos
sub
daa
cmpsl
cltd
sbb
imul
adc
xor
push
es
fs
jl
pop
jb
mov
out
pop
jp
pop
nop
or
jae
jp
or
xchg
mov
xor
loop
enter
loop
mov
sub
pop
daa
inc
mov
push
push
jb
inc
je
mull
cmp
movsb
iret
dec
into
repnz
jmp
push
fdivr
insb
call
pop
mov
aam
add
in
jnp
add
test
add
xor
fimull
popa
xor
and
in
xor
pop
push
roll
mov
mov
and
lea
arpl
pop
scas
cs
ret
jmp
push
lock
popf
test
xchg
xchg
push
mov
adc
adc
lock
lods
test
mov
sub
ret
mov
adc
testl
in
jp
jge
hlt
dec
inc
pop
out
cli
jns
pop
int3
cld
lret
jne
jo
fcomps
rol
not
cmc
rorb
inc
or
push
rolb
and
pop
push
mov
es
rcrb
pop
fidivrs
push
xlat
cmc
cmp
sbb
push
out
cwtl
fsubs
push
jno
cmp
rcrb
ja
in
pop
adc
subl
mov
shlb
in
in
fadds
mov
inc
aas
roll
mov
mov
push
inc
int3
xor
jge
dec
inc
adc
stc
leave
dec
inc
gs
cmp
cs
ljmp
cmp
xorb
pop
xchg
insl
lret
sbb
and
xchg
adc
sub
shlb
insl
sahf
mov
mov
sbb
and
mov
aas
test
mov
addr16
add
cmp
cli
sbb
mov
pusha
push
xorl
lods
jge
push
jg
testb
mov
js
or
or
imul
cmpl
cmp
jle
push
sbb
and
or
push
lds
fs
xlat
adc
gs
aam
repz
pop
jb
push
push
rorb
out
fdivp
jo
aam
cmp
insl
aad
mov
enter
flds
xchg
out
shrl
decl
jb
roll
in
sub
repnz
push
mov
xor
pop
sbb
sbb
add
cmp
mov
test
mov
popa
inc
dec
leave
cmp
fldl
inc
lds
and
sbb
sbb
pop
es
daa
movb
sbbl
cmc
adc
sub
scas
push
adc
rorl
adc
and
pop
cmp
mov
mov
imul
xor
xchg
mov
push
std
push
push
jge
lock
out
push
lds
cmc
rorb
add
xchg
std
mov
dec
fildl
push
test
outsb
stos
fimuls
in
ret
rcr
pop
frstor
xor
into
push
ficompl
xor
push
aad
test
cmpsb
into
bnd
int3
fdivl
sub
pushf
addr16
ljmp
jns
push
aad
sub
aaa
filds
jb
sbb
sbb
stos
mov
jmp
arpl
dec
gs
jns
dec
add
nop
mov
cmp
xor
lret
addr16
repz
xlat
or
push
in
mov
sahf
sbb
pushl
repnz
ret
add
ret
decl
mov
sub
daa
cmpsl
es
adc
adc
and
imul
ss
cmp
sti
jp
jo
mov
jne
stc
sub
pop
cmp
cmpsb
ficoms
sub
sub
sti
cli
xchg
or
add
dec
inc
std
jl
in
xchg
push
mov
lret
mov
mov
dec
loope
xchg
xchg
push
rclb
xlat
cmp
jbe
mov
push
xchg
sbb
lcall
xlat
pop
insb
xchg
add
test
push
cmp
lret
pop
inc
icebp
test
xchg
xchg
cmp
repnz
in
sub
es
cmp
lods
rorl
mov
cs
rol
outsl
xorl
xchg
sub
xor
mov
mov
and
push
or
xlat
mov
sbb
dec
test
fbstp
and
mov
adc
and
pop
dec
cs
pop
mov
pushf
sbb
icebp
nop
pop
cmpsl
es
sub
cmp
add
mov
and
out
jl
ja
rolb
push
and
and
lahf
mov
mov
jae
push
lea
xchg
mov
bound
mov
test
sbb
dec
insl
orb
inc
dec
push
lds
bound
pop
pop
aam
pop
outsb
bound
mov
mov
icebp
jo
aam
push
insl
rcl
pop
xor
data16
inc
pop
push
lods
xor
mov
mov
insl
pop
loopne
adc
mov
xor
xor
roll
mov
lcall
inc
lret
lea
ret
inc
loopne
pop
xor
leave
inc
mov
test
sbb
xchg
push
lcall
adc
addr16
pushf
sbb
push
push
leave
jns
test
daa
push
jo
jne
movsb
adc
mov
pop
in
jmp
incb
xorb
inc
aad
inc
pop
imul
shl
jae
dec
add
je
sti
or
xchg
adc
cmc
inc
clc
or
push
xchg
std
cli
push
int
dec
dec
and
push
test
outsb
stos
fimuls
mov
mov
sub
or
xor
aad
insb
dec
bnd
xchg
push
push
in
insl
in
pop
jl
pop
aam
enter
aad
sub
in
xor
jmp
addr16
icebp
sbb
mov
and
push
push
adc
fiadds
cmp
dec
mov
inc
lods
mov
pop
testb
mov
fsts
or
add
sahf
shlb
jns
inc
movl
dec
inc
xchg
mov
fwait
lcall
adc
daa
mov
inc
xor
js
int3
jg
out
out
cmp
add
andb
fwait
mov
orb
inc
pop
out
cli
jns
js
cld
or
or
aam
or
xor
shl
mov
in
jp
addl
pop
dec
test
outsb
xchg
add
cmpsl
rcr
pop
fcoms
jecxz
pop
fstps
lods
popa
cmp
lock
out
aad
or
pop
mov
enter
xlat
imul
xchg
out
jnp,pn
loopne
mov
mov
and
sbb
mov
stos
mov
mov
xor
or
das
inc
dec
or
pop
call
add
and
inc
cmp
pop
fwait
mov
sbb
sbb
pop
cmp
fcompl
cltd
in
jle
lods
sub
sbb
rorb
pop
or
outsb
mov
push
cmp
sub
fucomp
mov
stc
js
mov
jb
jne
leave
int3
outsl
out
jnp
add
nop
or
or
xchg
or
dec
cli
push
push
mov
and
int3
je
sub
mov
mov
inc
inc
sbb
ficomps
sti
xlat
adc
xchg
ss
sbb
pop
pop
ljmp
aad
cmp
push
loopne
or
jmp
push
scas
cli
cmp
mov
jno
in
aaa
jae
in
andb
adc
mov
aad
or
into
adc
mov
sbb
mov
pop
loopne
int
cmp
pop
ss
js
les
mul
jp
push
pop
popf
mov
mov
push
mov
loopne
mov
les
mov
sbb
scas
mov
pop
sbb
adc
pop
mov
sbb
and
out
cmp
mov
cmp
bound
movsl
in
mov
rclb
add
xchg
inc
dec
add
or
jae
push
lea
xchg
mov
orb
push
cmp
sbb
es
rcrb
pop
fidivrs
lds
dec
push
popf
mov
or
in
rclb
andb
push
and
push
insl
enter
out
pop
add
pop
aam
stos
jns
gs
add
mov
xchg
ds
sti
out
xchg
lock
push
lea
mov
inc
inc
test
gs
loop
pop
mov
pop
pop
fdivrs
cmc
rcll
inc
test
push
js
dec
enter
lcall
adc
aas
mov
jns
sub
push
mov
sub
insb
pop
mov
jmp
xor
mov
lods
arpl
sbb
dec
es
loop
gs
addr16
jne
push
js
out
outsb
xchg
add
cmp
clc
imull
sbb
sahf
cli
jns
loope
lods
lret
fildl
test
jle
popa
sbb
and
or
inc
aam
fcoms
shlb
dec
pop
aam
je
repnz
sbb
mov
popf
xchg
aam
xchg
out
insl
in
cmp
out
pop
add
pop
aam
stos
andl
xor
mov
cmp
mov
aaa
mov
push
sub
or
mov
fnsave
ret
cmp
pop
xor
mov
ret
outsl
mov
sbb
aam
and
popf
sbb
orb
or
xchg
adc
psubq
data16
lods
sub
xchg
loopne
lods
sub
repz
sub
sbb
push
xchg
adc
call
mov
in
stos
sub
stos
push
test
in
addl
adc
fxch
pusha
aaa
sti
test
xchg
nop
cmc
hlt
mov
push
mov
xchg
mov
jns
into
or
idivb
cmc
cmp
jg
push
lahf
mov
movsl
inc
xchg
cmpsl
pop
fiadds
test
and
mov
cmp
pop
jmp
in
and
jle
cmp
push
fistpl
dec
mov
loopne
out
fidivl
stc
pop
jnp
enter
aad
xor
jp
insb
lock
repnz
subb
push
mov
cmp
rcrl
cmpsb
and
dec
mov
lret
dec
dec
lret
inc
call
jno
cmc
or
fadd
lds
je
push
roll
in
mov
dec
out
dec
cwtl
mov
sahf
popf
xor
and
adc
jnp
ja
pop
xchg
xchg
inc
cmpsl
cmpsl
es
les
pop
mov
data16
cmp
jbe
mov
std
jl
sub
mov
jle
repnz
xlat
aas
lahf
push
fs
jns
fmuls
jne
or
mov
dec
mov
mov
addb
inc
iret
pop
ficomps
cmp
xchg
xlat
push
inc
and
pushf
pop
pop
test
push
mov
icebp
jo
aam
push
insl
rcl
mov
data16
insb
cs
cmp
movsb
mov
in
outsl
out
pop
fcmove
in
mul
dec
mov
mov
push
rcll
or
dec
into
dec
out
pop
inc
jae
cli
mov
inc
fcmovu
test
scas
enter
shrl
fwait
rcrl
pop
xchg
jl
mov
mov
xchg
adc
fisubs
pop
sbb
pop
sub
ret
mov
pop
cltd
lods
insb
pop
iret
and
dec
lahf
push
push
xor
in
daa
sti
jp
xor
inc
test
cmpsl
ret
subb
and
push
dec
mov
in
cmc
arpl
mov
mulb
push
push
and
dec
mov
enter
popa
loope
inc
inc
std
jbe
pop
push
xchg
push
push
fwait
xchg
loop
add
push
in
icebp
imul
test
pop
pop
and
imul
out
cmp
dec
sbb
sub
push
out
xchg
push
cli
iret
jg
jb
test
repz
mov
cmp
lods
call
ss
in
cmp
push
rol
outsl
icebp
xor
xor
dec
xchg
jns
inc
ret
inc
cmpsl
jae
adc
outsb
and
cmp
dec
addb
sbb
adcb
adc
out
xor
rcrb
jle
mov
sbb
sub
pop
xchg
mov
pop
xchg
insb
imul
xor
mov
imul
test
push
imul
sub
sub
hlt
lock
cld
sti
mov
jbe
push
lea
push
test
sub
sbb
add
push
rclb
sahf
lea
push
ficompl
fucomp
push
rcll
scas
jnp
add
cli
loop
xchg
adc
shlb
mov
inc
mov
jmp
dec
or
cltd
stos
iret
dec
push
xchg
add
xor
mov
scas
mov
mov
xor
xor
push
push
int3
dec
push
aaa
orl
inc
lret
and
pop
ret
inc
pusha
add
xlat
imul
push
push
nop
popf
sbb
pop
incb
lcall
sahf
sub
lods
movsb
sbb
xor
push
aaa
adc
pop
test
out
jns
movsl
and
out
push
mov
sub
jl
ja
add
and
cmpsb
adc
mov
lea
cmc
mov
sti
jp
ds
mov
in
loopne
addl
pop
in
aad
test
sbb
push
es
rcrb
pop
fidivrs
push
xlat
or
fstp
jno
push
out
stos
lret
mov
fcmovnbe
faddl
data16
arpl
sti
out
mull
fbld
xor
dec
mov
movsl
push
mov
in
dec
enter
rorb
xor
pusha
fildll
xor
dec
gs
shrl
mov
loop
rcrl
inc
arpl
clc
mov
dec
jp
enter
mov
inc
imul
outsl
and
or
adc
jne
sbb
mov
dec
ficoms
lcall
jno
jae
mov
adc
test
insb
cmp
out
gs
sub
lock
push
stos
sub
std
push
sarl
lock
out
pop
jp
xchg
nop
or
testl
lock
in
pop
add
add
jle
dec
adc
pop
sub
pop
fstpl
mov
out
mov
xchg
adc
ret
loopne
iret
jno
pop
popa
loope
test
jmp
pushf
cmp
insb
or
fimull
jecxz
jnp
push
dec
add
sub
mov
inc
shlb
mov
sub
lea
shrl
mov
dec
dec
in
adc
xchg
inc
jecxz
int3
xor
push
cmp
je
decb
dec
les
or
movb
or
mov
sbb
pop
enter
lret
jno
push
sbb
push
push
adc
xor
sub
pop
cmpsl
es
pushf
fadd
call
adc
inc
repnz
sub
out
std
std
jl
loopne
idiv
jns
js
push
repz
jne
popa
adc
popa
jle
fcmove
ds
hlt
mov
push
stos
push
rcl
das
pushf
mov
addb
pop
mov
iret
decl
xchg
fcomp
pop
fisttpll
or
dec
bound
jae
rcll
mov
iret
es
pop
ret
out
xor
pop
cmp
xor
mov
imul
mov
pop
in
push
mov
fs
xor
faddp
sbb
inc
push
dec
int
mov
daa
movsl
push
push
cld
adc
sbb
test
or
inc
icebp
stos
in
cmp
call
ljmp
mov
jmp
notl
inc
dec
dec
fbstp
xchg
push
push
mov
cmp
pop
jmp
pop
lds
aam
add
in
jnp
sbb
repnz
push
test
jns
sub
sti
jecxz
push
nop
adc
mov
xorb
jno
or
jbe
and
repz
and
push
mov
les
inc
inc
hlt
xlat
push
mulps
aam
insb
and
cmp
bnd
sbb
pop
lds
mov
sub
mov
pop
js
test
mov
insl
in
repnz
aad
push
rcl
mov
dec
push
pop
sbb
pusha
sbb
test
inc
addr16
dec
int
ljmp
cmc
dec
sub
loopne
dec
scas
imul
dec
or
add
dec
in
dec
sahf
popf
mov
xchg
adc
aas
dec
ds
and
sbb
xchg
pop
mov
lcall
dec
push
daa
inc
ja
jle
pusha
sub
sbb
jns
test
xchg
pusha
push
je
inc
adc
add
sti
test
sub
dec
or
push
jecxz
xchg
push
outsl
incl
popa
mov
pop
shll
lods
xchg
add
daa
cmp
mov
mov
fcompl
inc
loope
fnstsw
insl
mov
jle
lods
xor
loop
out
stos
or
inc
rolb
jmp
out
jmp
xchg
loope
mov
cmp
das
scas
in
jecxz
out
lret
xor
pop
add
xor
xor
aaa
ss
inc
lea
cs
shl
push
test
mov
add
cmovo
inc
adc
mov
call
push
adc
jae
ret
test
movsb
sbb
adc
call
dec
insb
clc
pop
sti
jp
in
popa
pusha
cltd
divb
cs
sub
and
push
lock
ficoms
hlt
inc
imul
mov
push
and
addl
shlb
in
add
inc
mov
ret
push
cmp
mov
inc
mov
push
or
dec
into
out
pop
loopne
imul
iret
mov
lret
xchg
xchg
mov
push
xchg
mov
icebp
inc
sub
out
cmp
sbb
push
xchg
xor
xor
lret
test
in
lret
xchg
inc
ss
ret
push
sti
dec
xchg
mov
mov
or
xlat
fadd
xchg
push
int3
fs
cmovbe
test
fisubrs
push
loop
inc
jp
mov
jle
nop
sbb
mov
fidivl
lcall
and
mov
xor
int3
ss
xor
ss
sub
divl
int3
test
jb
mov
movsl
add
push
push
bnd
xchg
lods
push
cmp
or
dec
cmc
test
loop
popf
aam
mov
daa
adc
xchg
cmp
gs
add
cmpsb
mov
add
mov
shlb
mov
fstpl
popf
cmc
das
fiaddl
insb
adc
jnp
xor
jmp
ljmp
jo
inc
pushf
imul
enterw
fistpll
sbb
push
rcll
fs
ss
sub
adc
ljmp
jge
dec
popf
test
sbb
inc
xchg
adc
jecxz
ficoml
stos
xchg
mov
lock
add
push
mov
xchg
and
nopl
push
icebp
lods
jnp
stos
test
jno
out
stos
jns
rcl
jae
xchg
sub
stos
lahf
outsb
jae
or
adc
std
out
shrl
cmp
into
repz
out
dec
jo
mov
dec
int
pop
fcompl
inc
daa
inc
lea
shlb
ret
xlat
push
roll
out
inc
cmc
test
outsl
jle
mov
jmp
push
lret
call
add
fcoms
sbb
test
inc
idiv
nop
aaa
jmp
xchg
out
out
ret
addr16
dec
pop
mov
add
roll
inc
ret
mov
int
sub
shrb
jns
mov
mov
push
lock
push
out
mov
push
out
cli
pushf
sbb
ret
push
leave
sbb
adc
mov
sbb
cmp
pop
aam
adc
and
xchg
adc
lahf
in
push
jne
cld
out
jns
jge
movsl
lea
cmpsl
mov
imul
js
dec
add
sarl
jbe
out
and
jge
je
xlat
aam
rcrl
repnz
rclb
mov
and
out
lock
stos
lret
aad
jmp
cmpl
push
mov
adc
rcrb
mov
fcoms
jae
cltd
sti
pop
sub
sub
fbld
cmp
lock
mov
adc
movsl
fsubs
mov
repz
mov
lea
inc
mov
cmp
push
std
mov
fistps
xor
aas
add
pop
cmc
push
and
dec
fwait
orb
movsb
mov
leave
mov
cltd
movb
roll
mov
jo
pop
push
sbb
dec
cmp
fstl
out
out
xchg
je
pop
mov
xor
xor
out
std
jl
ja
stos
cli
xlat
enterw
mov
outsl
out
rorb
mov
mov
jg
std
jl
in
ja
push
cmp
mov
mov
dec
add
fcompl
xchg
push
lods
or
jecxz
mov
pop
mov
inc
mov
test
pop
push
mov
ficomps
rcrl
out
fildll
jge
fst
cli
outsb
cwtl
push
sub
xor
add
cmc
cmp
dec
insl
mov
push
leave
mov
daa
mov
and
scas
das
int
xor
inc
icebp
imul
data16
nop
das
idivb
and
fcmovb
mov
jg
dec
jo
add
xchg
add
sub
notl
dec
out
cmp
stos
sub
ds
or
pushf
sub
lret
pop
ja
rolb
push
sub
add
cmpsb
sarb
adc
pop
repnz
jge
lods
xchg
dec
cmpsl
lds
add
push
divb
arpl
pop
ja
repnz
push
shl
jmp
pop
xchg
cmp
stos
lods
lret
popa
out
add
out
inc
popa
loope
sub
iret
mov
mov
or
mov
push
add
and
pop
lods
shll
pop
xchg
rcrl
cwtl
insl
aad
xchg
xlat
neg
pop
pop
pop
je
rcrl
scas
lods
aam
pop
fcomip
cld
mov
lock
test
sbb
sub
shrl
xor
cmp
movsl
fildll
xor
dec
gs
mov
mov
jns
xor
cmp
sahf
inc
cltd
xor
es
ss
icebp
pop
mov
xchg
stos
sbb
inc
shll
leave
sbb
mov
or
mov
hlt
adc
sbb
or
stos
leave
call
ret
mov
cmp
mov
push
xchg
out
subl
cmp
fdivrl
push
scas
data16
or
das
sub
cltd
sub
pop
and
pop
out
hlt
or
jb
push
stos
or
jbe
shrb
jb
jne
dec
jae
jle
adc
push
pop
or
jne
pop
push
out
pop
out
repnz
dec
popa
cwtl
jg
push
or
test
jne
or
pop
sahf
push
xor
xorl
inc
icebp
and
mov
mov
push
push
inc
in
dec
mov
das
push
in
push
gs
movl
aaa
rolb
jns
les
mov
stc
mov
rolb
faddl
int3
jecxz
sahf
push
icebp
dec
in
dec
sahf
popf
insl
add
stos
sarb
outsl
arpl
in
pushf
adc
in
sub
and
lcall
jb
and
mov
aas
adc
sbbb
push
or
es
adc
jae
call
test
je
clc
int
xchg
adc
cmc
cs
or
or
or
push
test
jle
push
mov
mov
mov
mov
scas
mov
jmp
pop
pop
ret
jecxz
push
xor
insb
cmpl
pop
fnsave
fstpl
pop
xchg
ljmp
push
cs
mov
pop
or
add
test
int
and
adc
sub
mov
dec
and
lret
xchg
scas
mov
mov
and
pmuludq
and
stc
scas
cs
ret
nop
cmp
into
rclb
ss
dec
leave
mov
push
test
pop
hlt
aas
xor
xchg
and
xchg
out
lods
sub
adc
stos
sub
xchg
adc
outsb
jp
mov
mov
xor
in
push
jge
push
test
adc
jns
pinsrw
and
and
dec
cmpsb
adc
mov
lcall
out
insl
js
dec
pop
mov
test
outsb
stos
popf
fstl
mov
dec
cmc
stos
pop
mov
pop
sub
jb
sbb
cmp
lcall
aaa
cvtpd2pi
shrl
and
pop
dec
mov
icebp
pop
mull
cmpsb
out
popf
cmp
pop
ljmp
arpl
andnps
pusha
dec
pop
faddp
lcall
mov
jge
enter
jp
leave
xchg
mov
mov
or
jne
shrb
mov
xor
adc
clc
test
enter
xchg
jg
mov
sbb
cld
sub
sbb
cmpsl
int
pop
mov
fcoms
movsl
dec
stc
push
lds
popa
dec
in
dec
jmp
in
call
cld
adc
clc
pop
jnp
jle
adc
cmpb
or
jbe
mov
mov
addl
sahf
loope
inc
lock
fnsave
pusha
and
pop
xchg
add
cli
out
ficompl
pop
mov
push
aad
pop
mov
add
pop
fcom
or
xlat
lretw
rorb
aam
jg
adc
pop
fbld
xor
jbe
repnz
cltd
mov
das
push
out
mov
push
add
push
scas
mov
lret
mov
mov
jmp
adc
iret
pusha
ja
xor
test
adc
jbe
pop
push
int
sbb
dec
test
fisubrs
push
loop
inc
xchg
das
out
movsb
adc
sub
shll
je
filds
xchg
xchg
cmpsl
es
shlb
push
and
adc
pop
mov
lahf
pop
sbb
push
lods
pusha
pop
xchg
ljmp
divb
nop
aas
lahf
push
xchg
mov
add
sub
shll
sarl
or
dec
dec
jae
add
lret
lret
pusha
fcoml
fstpl
lret
mov
jae
or
hlt
movsb
jg
push
lock
dec
popa
mov
daa
lods
push
or
fistpll
scas
pop
push
gs
push
les
out
jno
popf
xor
lea
test
lahf
jmp
xor
mov
in
cmp
lahf
das
scas
lcall
xor
movl
cmp
inc
push
bound
roll
mov
xchg
movsb
mov
leave
mov
sbb
inc
push
dec
aas
dec
cs
or
pushf
hlt
adc
pop
sub
mov
lcall
and
enter
xchg
mov
addr16
out
insl
std
jl
loopne
push
cli
jns
jge
dec
jecxz
testb
outsb
pop
or
xor
jnp
jmp
imulb
popf
lret
cld
jnp
enter
hlt
mov
test
adc
sbb
mov
sub
xchg
leave
fstps
outsl
mov
scas
in
jle
dec
and
fcompl
inc
push
fimull
mov
sub
stos
test
repz
jge
pop
pushf
mov
and
mov
push
jnp
pop
fdivp
cmp
cmp
dec
mov
imul
cmp
mov
inc
dec
int3
adc
fs
push
ret
fwait
adcb
adc
lcall
adc
je
lods
incb
pusha
sub
lret
lcall
cld
ret
fsts
repz
pop
mov
popaw
insb
lods
ja
stos
cli
xlat
rcrl
xchg
dec
fmuls
bound
ret
cmp
jnp
jb
add
sti
adc
cmc
sub
ja
dec
add
sbb
bnd
add
ficompl
mov
js
and
cmp
dec
push
loop
fcomp
mov
ficomps
mov
add
push
lea
das
pop
or
test
add
lods
pop
in
push
jmp
sub
pop
adc
int
cmpsb
and
mov
jne
adc
out
and
mov
negl
mov
mov
iret
inc
orb
je
leave
dec
mov
ret
inc
inc
sahf
sub
scas
mov
fldt
cmp
pop
cmpsl
or
leave
fstpl
sub
adc
out
xchg
xchg
cld
mov
pushw
xor
int3
shrl
sahf
clc
fistps
sub
scas
xchg
jb
inc
push
sub
fwait
mov
or
inc
sbb
sahf
pop
in
mov
sahf
and
inc
iret
decl
xchg
sarl
or
ja
loope
xchg
add
daa
orb
pop
test
fsubrs
or
dec
sbb
push
mov
pop
in
inc
movl
sub
inc
rolb
mov
mov
push
lea
sub
mov
sbb
inc
adc
push
int
daa
ljmp
arpl
cmp
inc
into
frstor
aam
scas
jne
or
adc
sbb
or
pop
xchg
jl
mov
cwtl
lahf
outsl
xor
jle
pop
sub
pop
cwtl
adc
sub
leave
sbb
movsl
rcll
bswap
push
sub
imulb
jl
mov
popa
sub
ja
xor
and
leave
lock
nopl
andl
pop
push
lods
jl
hlt
outsl
mov
hlt
jae
iret
into
pop
adc
add
dec
push
push
loope
xchg
pop
adc
fstpl
cmpsb
dec
or
popa
sub
loop
inc
push
push
iret
push
rcrl
push
and
insl
in
push
rcrb
ljmpw
arpl
push
gs
nop
pop
fistps
cmp
xor
mov
push
jmp
fidivrs
test
xor
lds
inc
fiaddl
daa
mov
dec
les
in
push
adc
mov
jecxz
sbb
xchg
lcall
adc
aas
mov
xchg
mov
loopne
cwtl
pop
push
pop
mov
sbbl
xchg
outsl
outsb
cmp
mov
ljmp
jae
mov
add
stc
js
jae
lret
xchg
sub
mov
xor
inc
add
shr
push
mov
sub
divb
adc
xor
jnp
lea
cmp
sub
lods
mov
pop
dec
sbb
mov
pop
mov
lods
pop
sub
gs
mov
dec
into
or
test
imul
nop
insl
mov
lods
mov
mov
inc
mov
inc
xor
inc
mov
leave
fwait
lret
pop
stos
jnp
xor
push
movl
inc
dec
inc
or
aas
add
dec
push
push
and
rorl
push
jmp
push
sti
mov
mov
adc
xor
mov
inc
rcrb
mov
loop
rcrb
test
jmp
push
push
push
icebp
xchg
xchg
and
ds
and
in
ds
xor
sub
cmpsl
cmp
inc
sbb
shll
test
push
test
inc
mov
daa
jecxz
ja
xor
mov
xor
xor
das
dec
xor
stos
push
and
mov
ja
xacquire
and
sub
ja
rcr
xchg
mov
mov
or
fistpl
dec
lcall
push
lret
or
dec
js
sbb
mov
jb
loop
mov
cltd
pop
jge
adc
enter
pop
xchg
out
cmp
fistps
push
sbb
addl
adc
ds
or
adc
mov
clc
push
inc
xchg
push
pop
outsl
loopne
cmc
adc
and
inc
add
pop
cmp
push
stc
jae
pop
mov
and
cmc
adc
xchg
push
lcall
xchg
adc
icebp
xor
cld
enter
and
mov
andb
cmp
pop
sub
lret
repz
cli
mov
lret
and
jae
dec
jbe
mov
sub
pop
xchg
out
lds
sbb
lahf
mov
xchg
inc
mov
insl
hlt
cmpsb
push
push
clc
fidivrl
sbb
and
rcrl
iret
pop
jbe
fcoms
dec
push
int
inc
jbe
push
push
sub
ret
xor
lahf
sub
movsl
lods
and
xor
cmp
fistps
sbb
cmc
mov
xchg
lods
ja
push
scas
jns
adc
jmp
js
mov
mov
mov
test
into
dec
mov
pushl
jns
xor
jnp
adc
setbe
lods
mov
or
pop
cwtl
fisubl
rorl
push
shr
rorl
mov
les
inc
mov
sub
lahf
jl
int
pop
stos
sub
inc
mov
jns
in
ljmp
pop
aad
jnp
mov
push
xchg
mov
lods
fdivs
push
mov
push
mov
push
mov
mov
dec
or
ss
orb
aad
xor
enter
sub
xor
or
cwtl
insl
mov
or
jae
add
dec
xchg
aad
push
adc
jb
out
or
mov
imul
mov
mov
cmp
sbb
inc
jns
xor
cmpl
xor
jp
rcrl
mov
sbb
inc
lds
mov
scas
or
adc
and
jno
cwtl
jge
aaa
outsb
dec
lret
std
ret
inc
fstpt
stos
adc
stc
sbb
sub
jno
pop
cmpsl
es
dec
jo
nop
or
xor
xchg
leave
in
negl
std
mov
jmp
dec
ret
xchg
daa
cmpsl
bound
arpl
fiadds
lret
lock
out
mov
cmp
sbb
rcl
add
xchg
cmp
adc
push
test
scas
lods
or
nop
dec
xchg
mov
pop
mov
int3
fstps
sbbl
fiaddl
mov
cmp
out
imul
push
mov
and
data16
or
enter
or
repnz
mov
mov
mov
jecxz
sub
repz
cmpsb
mov
mov
fildll
ss
adc
in
into
xor
mov
repnz
push
mov
icebp
inc
out
or
xchg
cld
push
loop
into
add
movl
mov
adc
daa
inc
shlb
pusha
xor
popf
dec
ljmp
pop
aam
bndldx
dec
adcl
mov
adc
jp
es
shl
jno
out
int3
test
and
rorl
xchg
les
ja
lds
int
mov
jbe
pop
jns
push
out
lret
xor
and
fcoml
mov
xor
or
aam
hlt
repnz
test
stos
lock
outsl
and
imul
xchg
dec
pop
mov
inc
flds
out
sub
idiv
mov
add
aad
adc
mov
imul
jmp
pushw
xchg
mov
or
push
cmp
xor
cmp
stos
mov
daa
insb
and
out
mov
jae
insb
xchg
aad
orl
mov
add
or
or
in
stc
inc
movsl
push
fs
jae
pushf
push
aam
dec
jmp
and
push
aad
rorb
dec
mov
inc
arpl
mov
pop
stos
inc
gs
jae
neg
sub
push
jg
fidivrs
ffree
pop
js
jnp
pop
push
cmc
jge
mov
pop
xchg
xchg
insl
cmp
aam
dec
jbe
leave
xor
inc
scas
fxsave
mov
push
lea
and
xchg
mov
push
xchg
fdivrl
aad
sbb
bnd
mov
and
in
fcoms
push
ficompl
pop
aad
shrl
loopne
add
mov
xor
mov
xchg
cmp
adc
loop
jle
and
mov
stc
xor
loopne
fucomip
loop
sub
pop
std
cmp
inc
movb
push
aas
mov
clc
int3
dec
lret
jno
push
add
dec
lcall
js
mov
inc
fcomps
jbe
mov
pop
mov
sbb
add
or
and
pop
jbe
add
sti
andb
loopne
int
sub
mov
mov
sub
sub
movsl
and
dec
add
add
js
xchg
in
jbe
mov
or
jp
add
and
sub
outsb
ljmp
pop
sbbl
fcoms
push
mov
pop
out
jl
and
inc
add
cmp
sbb
hlt
aaa
aad
cmp
xor
mov
nop
sub
lods
std
xor
or
dec
jae
outsb
in
insl
fsubrl
lea
rcl
mov
shlb
xor
scas
push
cmp
lret
xor
pop
add
cmp
push
pushf
xor
ds
add
push
dec
popf
sbb
ret
push
leave
jne
test
inc
stos
mov
jbe
aas
imull
sbb
jmp
inc
sbb
cmpsl
es
pushf
xchg
jb
adc
adc
adc
push
mov
ljmp
sbb
cmp
push
xchg
stc
js
and
sub
test
cld
mov
mov
jmp
and
cmpsl
pop
or
divb
test
loop
pushf
xchg
or
or
xchg
divb
bound
aam
loopne
cs
aad
in
dec
cmp
popa
mov
mov
leave
xlat
push
pop
fidivl
shl
jecxz
scas
mov
out
cmp
inc
sarb
mov
push
push
stos
out
inc
adc
aas
lea
test
int3
inc
in
es
cmp
fldcw
xchg
ffree
inc
pusha
xor
mov
dec
bound
mov
js
lret
test
inc
movl
into
sub
out
adc
and
fstpt
pop
lcall
lcall
cli
add
insb
push
mov
mov
cmp
sti
out
jge
jl
sti
cmpsl
es
loop
and
popa
jne
adc
clc
mov
adc
nop
jnp
or
clc
ja
out
mov
cmpsl
es
cmpsl
jb
pop
mov
add
pop
ss
jb
mov
mov
cmpsb
cmp
cmp
daa
xchg
inc
cmp
adc
sub
add
push
icebp
jo
out
pop
jle
lcall
sahf
das
fcmovu
jns
aam
jecxz
xchg
jne
push
test
cmpsb
in
out
jg
jmp
cmpsb
insl
sbb
data16
lods
loop
ja
mov
push
inc
jecxz
out
inc
stos
or
mov
inc
lret
addr16
mov
bound
jecxz
mov
push
mov
cmp
leave
rcrl
sbb
inc
cmpsb
adc
test
mov
fisttpl
sub
pop
xchg
aad
pushf
xlat
call
jne
and
ret
mov
and
popa
lret
dec
sbb
fildll
hlt
sub
cli
out
jl
adc
sbb
fcmove
ds
hlt
sti
pop
push
stos
push
jnp
xchg
push
push
mov
sbb
xor
fldenv
mov
dec
pop
jecxz
loope
add
push
jne
test
mov
jo
pusha
add
pusha
sbb
data16
dec
push
add
aad
jl
movsb
jne
or
lock
mov
addr16
pop
sub
or
sbb
mov
inc
dec
push
ret
jne
dec
mov
sub
in
jle
testl
movswl
push
pop
scas
ror
dec
inc
les
pop
and
dec
test
mov
inc
lds
js
mov
sub
pop
xchg
xchg
popf
jl
daa
mov
lock
add
shrl
mov
imul
lahf
inc
pusha
aam
imul
jp
mov
and
je
pop
push
stc
dec
jno
nop
cld
aam
imul
lock
or
jecxz
push
sbb
bound
jle
xor
cmp
adc
sub
ja
add
pop
outsl
xor
jo
jno
pusha
cmpsl
pop
adc
int
insb
stos
push
xlat
push
jmp
inc
or
push
nop
das
add
in
call
ror
stc
fwait
cmp
sub
cmp
push
mov
cltd
mov
xchg
mov
dec
sbb
in
dec
leave
dec
mov
xor
pop
mov
nop
mov
sbb
add
inc
lret
aaa
je
xchg
adc
mov
mov
inc
and
cmp
sub
xchg
out
lock
sub
orl
packssdw
xchg
cmp
sbb
rcll
jecxz
cwtl
pop
hlt
jae
and
mov
xor
mov
test
out
clc
ja
out
xor
ss
dec
sbb
cmpsb
test
jno
dec
out
into
loop
xchg
pusha
int3
fildl
clc
nop
in
push
lahf
aaa
lret
bound
in
shrl
in
dec
fs
sbb
in
push
icebp
jo
addr16
pop
push
or
call
imul
out
mov
mov
icebp
stos
jb
jno
stos
sbb
sub
andl
insl
jge
adc
inc
mov
sbb
inc
mov
lods
int
enter
add
mov
pop
movb
or
push
push
imul
mov
push
xlat
pop
enter
fimuls
dec
fs
ret
pop
push
inc
movsl
adc
and
dec
out
mov
std
ja
xchg
ret
xchg
mov
aaa
adc
packssdw
xchg
cmp
sbb
rcll
imul
cs
cli
cmpsl
jle
and
outsl
out
xchg
cld
sub
shll
sar
pop
or
test
jle
int
rcr
popf
mov
fcmovbe
cmp
cmp
add
pop
and
aad
jb
fdivrs
adc
leave
mov
rcl
fdivs
cmp
aam
in
insb
push
lods
xchg
push
stos
adc
outsb
movsl
movsb
jmp
mov
sub
movsl
enter
sub
ds
scas
enter
and
imul
jp
xchg
sub
cmp
mov
sbb
fildll
add
insl
dec
repnz
shll
pop
leave
scas
fs
ret
sub
aas
pop
sub
jle
sbb
daa
cmpsl
jae
cltd
or
movsb
sbb
pop
adc
addr16
loop
add
sbb
sub
out
or
test
andb
stc
js
xchg
adc
xchg
dec
push
or
cld
pop
or
clc
ja
mov
inc
jnp
xlat
dec
repz
into
jne
test
adc
mov
adc
lret
fstpl
jbe
or
xchg
out
mov
sbb
add
in
in
loope
xchg
adc
push
jp
pop
out
jecxz
out
adc
add
mov
int
mov
dec
mov
adc
pusha
mov
gs
mov
cmp
mov
jnp
jg
adc
scas
insb
xchg
jb
inc
lds
jo
mov
add
jno
rclb
mov
cltd
sbb
sbb
stos
popf
jbe
adc
scas
and
insl
pop
xchg
rorb
out
xorb
out
out
xchg
je
pop
mov
xor
movsl
sti
out
pop
std
jl
fstl
mov
mov
jge
add
xchg
xor
iret
add
mov
ja
sar
pop
or
divb
push
test
push
outsb
lds
mov
faddl
mov
mov
ds
pop
pusha
add
ds
lcall
jno
fisubrl
ror
sti
sbb
push
jmp
ja
aam
or
push
xchg
and
stos
jl
sarb
daa
fcomps
fsts
pushf
push
arpl
data16
mov
scas
add
xchg
call
jnp
arpl
mov
xchg
inc
in
sbb
push
ljmp
or
inc
rcll
xchg
pop
leave
scas
lahf
sahf
lds
mov
fnstcw
lret
or
cmpsl
es
inc
addr16
lret
adc
jle
cld
jnp
cltd
and
jecxz
out
add
xchg
jb
es
stc
mov
adc
or
jnp
and
fisttpll
jns
mov
and
push
adc
jle
popa
mov
pop
mov
mov
jl
leave
or
icebp
mov
push
shrb
in
push
icebp
jo
aam
lret
jbe
adc
ljmp
mov
iret
dec
or
test
push
insl
pop
mov
push
xor
mov
gs
or
pop
faddp
shrb
dec
ret
rolb
adc
and
rcr
mov
call
mov
add
loope
repnz
cltd
sbb
mov
sub
inc
std
insl
rcrl
das
xchg
xor
mov
call
sbb
and
jg
push
mov
mov
cltd
sbb
jp
loope
addl
lea
mov
cli
add
mov
xor
cld
mov
push
push
in
add
sbb
add
lock
or
fistpl
clc
popa
lea
xchg
inc
add
test
notb
sbb
jno
jo
pushf
jmp
pop
mov
cmp
inc
fwait
mov
pop
xor
jecxz
add
mov
imul
ja
mov
insl
int3
cmp
imul
dec
fs
mov
and
push
inc
out
xchg
out
cmp
jge
fistpl
sysenter
nop
mov
lds
push
xchg
mov
daa
stos
sbb
jp
add
inc
cmpsl
push
lcall
pop
dec
xor
jl
inc
shll
xchg
test
add
into
rcrb
fildll
cwtl
and
pop
fs
aad
outsl
out
push
stos
jp
out
xchg
push
test
mov
stos
fcmovnu
push
pop
push
imul
pop
lahf
mov
jo
inc
jp
jge
repz
iret
in
movsl
jns
jmp
xchg
jne
test
pop
xchg
lds
ret
xor
push
mov
jl
mov
pop
pop
lock
mov
lock
mov
loopne
push
dec
mov
fsts
or
inc
popf
add
jl
xchg
rorb
push
add
loop
inc
arpl
add
das
mov
push
out
ret
imul
cmc
xor
pop
gs
outsl
rorl
imul
xchg
sub
repnz
daa
in
pop
clc
xor
inc
lds
xchg
fdivl
push
push
fmuls
dec
cmp
mov
add
xchg
dec
inc
sbbb
xchg
and
and
sub
cmp
sbb
sbb
xchg
cs
xor
aad
out
insb
sub
in
inc
int
cmp
aad
dec
movsl
dec
add
not
mov
pop
aad
insl
fwait
inc
loop
push
mov
or
gs
xchg
push
idivb
movsl
test
adc
push
or
or
lea
pop
mov
and
pop
xor
jg
push
mov
mov
call
fidivs
aam
rorl
stos
inc
in
rcrl
ja
xchg
jno
std
mov
insl
in
repnz
data16
push
push
insb
inc
mov
jl
cmp
mov
loopne
xor
dec
gs
adc
jnp
sub
in
ss
mov
sub
jns
imul
out
js
rorl
pop
cld
dec
mov
leave
std
clc
jbe
sub
fs
jecxz
sbb
mov
xchg
push
test
test
outsb
push
xchg
iret
push
andnps
mov
and
fadds
pop
daa
pop
sti
cmp
mov
and
add
sbb
sub
shll
div
outsb
and
js
jae
jb
dec
pop
adc
loop
pop
pusha
mov
push
ror
mov
fnstenv
enter
jmp
xor
mov
jno
jno
icebp
adc
pop
lcall
or
dec
ret
lea
adc
jo
jb
movsl
mov
mov
cmp
out
insb
out
clc
jecxz
cmpsl
mov
xor
faddp
inc
push
cmp
mov
into
xor
mov
bnd
sub
dec
out
inc
or
rolb
mov
add
mov
jp
into
dec
dec
and
outsb
mov
mov
or
cli
adc
sub
xchg
dec
jo
push
lcall
or
mov
add
das
jnp
xor
fidivrl
stos
stos
shll
and
movsb
pop
fdiv
int3
fimull
push
jb
or
jge
sbb
and
push
cmpsl
sbb
repz
ljmp
cmp
stos
dec
push
and
xor
mov
scas
mov
fcom
bound
stc
sub
lcall
inc
cmp
push
push
mov
jns
test
push
push
push
xchg
popf
cwtl
adc
mov
and
xchg
ss
mov
mov
gs
mov
iret
or
test
add
imul
mov
dec
in
inc
iret
sbb
add
lret
adc
imul
mov
rcrb
lret
pop
xchg
mov
xlat
adc
in
aas
push
xor
ja
enter
popa
cwtl
rcr
popf
xchg
in
leave
sub
adc
dec
adc
or
sti
mov
movsl
sbb
jg
and
out
test
fxsave
mov
push
lea
cmp
ljmp
stos
out
aad
push
jle
pop
pop
in
imul
aaa
popa
mov
ljmp
out
mov
sub
inc
shrb
dec
mov
stos
cmp
mov
dec
clc
cmp
xor
adc
jle
enter
jae
jge
les
ds
fadds
out
repnz
sbb
sahf
sbb
pop
add
mov
ja
and
pop
add
mov
aam
fistpll
sub
cmpsl
es
jb
js
and
jg
mov
cld
jecxz
adc
add
outsl
mov
jge
icebp
pop
sub
jbe
xchg
subl
dec
add
sti
popa
xchg
nop
push
or
push
cmp
xchg
push
push
jns
addl
das
dec
sbb
call
scas
push
or
gs
push
ficompl
ss
mov
iret
push
daa
out
add
mov
fimuls
adc
inc
jmp
rcl
aad
movsb
push
out
repz
sub
add
jmp
xor
sarb
push
inc
adc
dec
int
jns
lods
test
jle
lea
sarb
mov
mov
mov
sbb
sahf
sbb
xchg
push
lcall
adc
aas
mov
fisubrs
cmc
js
daa
cmpsl
es
and
shlb
cld
int3
stos
sub
ja
es
popa
add
jae
jb
jbe
stc
xchg
outsb
pop
add
idivl
mov
testl
ss
add
ja
dec
mov
jle
or
dec
fcompl
cmpsl
int3
fstpl
iret
cmp
pop
fstps
mov
aad
cwtl
fsubs
into
bnd
aad
imul
push
int
call
xor
in
xlat
outsl
scas
xchg
in
loopne
cmpsl
mov
roll
sbb
mov
mov
in
add
add
sub
inc
rcll
xchg
mov
mov
cmp
mov
inc
or
imul
lret
dec
out
or
pop
movl
xchg
adc
ja
adc
pop
loope
xor
sub
daa
cmpsl
es
mov
mov
jo
cmp
arpl
jge
cmc
jo
lods
jbe
jns
pop
jl
repz
mov
outsb
inc
nop
or
addr16
outsb
jnp
mov
add
cmp
lret
mov
test
jle
pop
cmp
aas
cmpsb
push
xlat
mov
push
inc
filds
aad
int3
sub
jge
aam
push
insl
loope
rcrb
and
push
nop
das
adc
test
pop
inc
sar
pushf
icebp
cmp
cmp
cmp
movsl
mov
mov
cmp
push
rol
jne
or
dec
inc
cmp
adc
inc
enter
lds
add
sbb
dec
cwtl
pop
xchg
imul
outsl
imulb
adc
pusha
jl
jecxz
mov
mov
sub
cmpsl
es
sbb
mov
and
pop
setbe
mov
imul
data16
ja
das
jecxz
es
jae
mov
jne
loop
inc
lahf
sti
push
sbb
idivl
mov
imul
out
or
or
add
shl
popa
loope
and
pop
fstl
enter
imull
and
inc
ds
inc
push
iret
dec
jle
and
mov
aaa
enter
dec
push
test
dec
fstps
insb
shl
sub
dec
into
out
movsl
mov
and
pop
and
sub
sub
lods
gs
adc
test
mov
dec
rep
cmc
sub
mov
jbe
inc
xchg
stos
in
xor
xchg
xchg
inc
cmp
test
mov
aas
std
ja
js
das
popa
jp
stc
adc
jl
lods
sbb
push
mov
dec
sbb
lcall
push
cs
adc
ret
scas
scas
mov
filds
inc
jecxz
and
and
mov
mov
rcrb
cmp
and
ret
push
jno
enter
and
lods
js
sub
mov
dec
pop
sub
enter
adc
jp
jns
decb
inc
pop
outsb
cwtl
aam
test
out
mov
cmp
pop
cs
mov
mov
pop
ficompl
inc
adc
add
imul
jmp
mov
jmp
out
push
es
cwtl
push
repz
jle
push
ljmp
xchg
mov
or
call
aaa
mov
cmpsb
cli
outsb
sub
insb
pop
aaa
dec
mov
inc
or
mov
int
cmpb
enter
cmpl
clc
jbe
fwait
xor
sub
jnp
and
into
movsb
leave
adc
popf
sbb
add
rorl
lods
xchg
iret
ljmp
add
out
andb
je
jge
sahf
sbb
sub
pop
rcr
aam
lock
ljmp
jno
shr
aaa
lret
xorb
int
test
outsl
out
notb
popf
iret
push
pop
ret
inc
or
pop
xlat
push
jg
mov
imul
test
sbb
push
in
shl
push
sbb
aam
mov
ljmp
rolb
jae
fs
mov
shlb
movsb
test
into
jmp
push
cmp
push
jbe
ret
xchg
mov
idivl
xchg
sub
adc
sub
cmp
outsl
mov
pop
mov
orb
data16
loopne
cld
arpl
or
test
loop
push
stc
jae
outsb
in
xchg
ficoms
es
pop
sub
xorb
xchg
add
shll
out
lret
ja
add
bound
sbb
in
imul
call
imul
test
mov
jp
push
jno
or
sbb
adc
je,pn
pop
and
jp
push
test
pop
fiaddl
inc
hlt
aas
sbb
mov
addl
pop
inc
aad
shl
into
bnd
adc
pop
mov
cltd
ret
call
mov
jmp
shl
gs
pop
loopne
cli
in
andb
stc
stos
loop
in
cmc
sbb
push
mov
jg
push
sbb
xchg
push
push
xor
dec
mov
mov
lods
lds
cmpsl
popa
push
loope
add
cmp
pop
ljmp
cmpl
dec
stc
xchg
mov
add
outsb
fwait
mov
sbb
jnp
sub
fisttps
les
cwtl
dec
subps
ljmp
inc
xlat
out
xlat
pop
dec
inc
sub
loopne
jmp
mov
adc
or
addr16
xchg
shlb
sahf
jne
sbb
iret
jp
repnz
insb
mov
jmp
stos
jne
add
scas
sahf
daa
xchg
popa
enter
out
mov
es
fmull
mov
cmp
push
mov
push
lods
cmp
push
mov
and
sub
lret
fisubrl
leave
xchg
daa
outsl
movntps
movsl
movsl
inc
or
scas
mov
sub
adc
mov
mov
loope
fistps
mov
jecxz
icebp
mov
ret
into
dec
int
xchg
adc
dec
les
lcall
cs
rol
push
int3
dec
cmc
dec
lock
addb
mov
cmp
inc
sti
jae
or
cmpsb
out
jle
push
sub
add
mov
repz
jne
rcrb
arpl
push
icebp
lods
movsb
arpl
jge
inc
pop
sbb
adc
test
jb
jne
or
add
push
and
div
add
mov
lea
or
sub
hlt
dec
lahf
xchg
test
je
cmp
pusha
fcompl
mov
hlt
pop
mov
pop
pop
mov
fisubrs
aad
jb
test
repnz
out
scas
pop
xlat
loopne
call
lods
fstps
inc
fmuls
data16
movsl
jl
and
jae
movsl
lods
cmp
in
mov
jge
xor
cmp
mov
push
shrl
push
dec
out
arpl
scas
loop
and
je
lds
pop
shll
xchg
sbb
or
jle
jge
add
sbb
xchg
rcrb
jle
jecxz
stos
sub
pop
mov
sbb
in
xchg
andb
jle
stos
aad
out
mov
clc
ja
xchg
xor
test
mov
push
mov
add
sub
jno
icebp
in
aaa
jg
jns
dec
js
add
add
mov
rcrl
das
mov
ret
movsb
dec
daa
xchg
and
mov
cmp
mov
cmpsl
lahf
jle
in
sub
and
aad
fmuls
jge
imul
xchg
adcl
adcb
subb
in
sbb
fimull
jmp
inc
aas
gs
xor
popa
and
repnz
or
lret
dec
into
sbb
dec
enter
jl
std
cmp
mov
xor
mov
mov
outsl
lret
dec
out
mov
cli
jle
insb
leave
sbb
mov
lahf
adc
sbb
out
xor
sub
ja
push
xchg
in
fwait
andl
lock
sub
cmp
mov
sub
fisubrl
lret
es
mov
and
cmp
lahf
call
es
fiaddl
fisttpll
cli
adc
push
add
add
push
fsts
xchg
nop
cld
mov
mov
inc
mov
fcoms
jecxz
sub
pop
sbb
and
push
mov
add
fldenv
icebp
jo
xor
fidivrl
insl
in
pop
mov
sbb
xchg
inc
or
cwtl
icebp
gs
call
roll
andb
int3
cmp
mov
mov
dec
movsl
add
test
rcll
add
into
xchg
inc
sub
mov
pop
hlt
pop
mull
or
roll
call
mov
lret
stos
sbb
or
lcall
inc
jg
andl
es
fs
sub
mull
stos
sbb
mov
inc
mov
and
jp
shrb
cmpsb
or
sub
and
fmuls
leave
and
mov
jmp
mov
es
ljmp
or
ficoms
repz
add
sub
adc
inc
push
jp
mov
mov
pop
pop
mov
pop
dec
into
xchg
insl
movsb
add
pop
jmp
movsl
loop
pop
call
pop
mov
dec
lcall
ljmp
sti
mov
sbb
mov
cmp
data16
in
xor
into
sub
fimull
push
cmp
mov
int3
ret
fmuls
insb
xor
cltd
hlt
push
push
iret
mov
lock
dec
fwait
aad
push
add
adc
dec
cltd
movsb
lret
adc
mov
inc
rcrb
mov
loop
rcrb
xchg
mov
sub
adc
sub
insb
imul
call
mov
sbb
stos
sub
lahf
gs
lock
es
sub
std
roll
jge
inc
outsl
out
xchg
repz
fimuls
push
mov
orb
test
lock
outsb
mov
inc
inc
shrb
fistpl
clc
mov
aaa
dec
sub
popl
aad
cmp
in
bnd
insb
mov
fs
out
fwait
jns
pop
lea
jb
gs
mov
dec
into
inc
clc
mov
and
lea
xchg
mov
arpl
xor
fsubp
inc
jecxz
xor
dec
mov
ss
xor
xor
call
mov
push
sbb
xchg
push
loop
inc
push
dec
xor
jecxz
out
fsts
scas
cs
mov
cmp
ret
mov
out
push
daa
mov
sti
jp
cli
gs
dec
ja
inc
sub
imul
jle
inc
je
test
push
enter
and
repnz
cmp
pop
xchg
mov
jbe
addl
mov
jg
ficoml
inc
xchg
pusha
mov
cmpsb
lds
testb
add
out
cs
add
daa
loop
pop
pop
ljmp
mov
cmp
pop
or
sbb
scas
scas
adc
fs
fbld
xor
sahf
mov
xor
jmp
out
out
pop
ljmp
jne
in
inc
aad
push
jae
dec
mov
cmp
movl
xor
xor
aas
pop
pop
mov
push
push
in
nop
jno
jo
add
or
push
lcall
adc
xor
in
aas
movaps
cmpsb
adc
mov
sahf
mov
es
inc
fdivrl
xchg
adc
adc
in
scas
jbe
add
mov
sti
jp
lret
test
shll
cli
xlat
push
enter
dec
vpcmpeqb
adc
jp
mov
push
xchg
jle
cltd
dec
jae
das
bound
dec
dec
xor
pusha
xchg
movsb
ret
nop
test
dec
daa
xchg
pop
hlt
xor
cmp
push
mov
movsb
and
popf
jno
pop
call
insl
mov
dec
xlat
data16
add
aam
shrl
lods
xchg
loopne
cmp
icebp
xchg
loopne
mov
push
outsb
popf
call
or
xor
scas
dec
lock
inc
mov
sub
in
aaa
push
mov
test
movsl
xor
jp
pop
or
sahf
adc
out
lea
pop
movl
jg
add
adc
inc
xor
lods
lock
xlat
mull
stos
push
jbe
insb
push
xor
cmpsb
dec
jge
adc
lahf
push
out
call
stos
inc
gs
dec
ja
cmp
sti
mov
add
je
adcl
cli
shlb
mov
icebp
clc
xchg
xchg
sarb
pop
add
testl
add
fwait
dec
sahf
dec
and
fimuls
mulb
ficompl
sbb
mov
dec
mov
mov
shlb
mov
xor
imul
sub
jne
dec
or
add
stos
dec
mov
inc
cmpsl
inc
mov
in
mov
xorb
sbb
ret
push
adc
dec
shll
pop
inc
lret
lea
and
jbe
xor
das
mov
push
mov
in
mov
insl
lret
sbb
xchg
sub
adc
xchg
xchg
pop
jnp
sub
or
jno
jg
fstl
cmp
addr16
sub
jecxz
jp
push
sbb
test
pop
cmpsb
inc
jns
fldl
mov
jl
jecxz
sub
xchg
std
andb
popf
or
sti
or
mov
mov
dec
xchg
mov
enter
popa
loope
faddl
pop
mov
inc
repz
pop
sub
out
add
add
push
iret
call
dec
dec
mov
jl
scas
mov
jns
push
xchg
sbb
fs
dec
out
pop
inc
stos
test
repz
push
das
push
call
pop
add
inc
mov
jl
cmp
or
scas
mov
ss
pushf
enter
mov
xchg
ret
inc
mov
or
nop
aas
mov
xor
add
dec
loop
mov
lahf
mov
xchg
adc
cwtl
jg
mov
clc
jne
lret
sub
cmpsl
es
in
lea
push
adc
jmp
ljmp
inc
mov
mov
ja
mov
add
repz
sti
cmpsb
cmp
outsb
xchg
pop
jns
fmull
cmp
and
rcrb
dec
mov
push
test
lret
lret
pusha
fcoml
cmp
int3
xchg
loopne
push
mov
cmp
sahf
mov
popf
cmp
dec
xchg
dec
mov
push
test
adc
push
cwtl
push
xchg
add
out
fbld
adc
xchg
sbb
test
pusha
xchg
roll
inc
das
xor
popa
add
dec
mov
mov
daa
in
mov
jns
push
or
push
aas
push
sbb
adc
xchg
push
scas
lods
or
cltd
mov
loope
lds
inc
and
sub
pop
out
pop
pop
sub
inc
mov
dec
xchg
mov
ret
sub
popa
pusha
fcmovbe
jbe
cs
add
pop
push
adc
stc
or
iret
mov
xchg
sar
jbe
jmp
xchg
jg
arpl
mov
mov
jmp
ret
leave
test
push
ficompl
sbb
fidivs
mov
fucomi
push
int3
call
or
pop
or
sub
stc
in
and
stos
cmp
sarb
ror
in
insl
pop
insl
mov
cmp
xor
xchg
mov
and
mov
das
lea
int
inc
xchg
adc
mov
popa
pop
jmp
fstps
jle
sbb
inc
mov
sbb
arpl
enter
stos
sub
cwtl
mov
nop
pusha
cmp
mov
cmp
out
in
xchg
dec
cwtl
adc
push
jp
lahf
inc
lods
clc
fists
add
sub
and
jns
rorb
xchg
xchg
insb
sub
add
inc
lret
jbe
shlb
add
pushf
mov
test
sbb
mov
into
jge
mov
mov
popl
mov
mov
mov
test
out
pop
fisubs
rol
xchg
out
fildll
addb
adc
pushl
roll
sbb
or
push
mov
push
push
data16
push
nop
scas
das
scas
mov
dec
mov
imul
dec
xchg
test
mov
xor
inc
push
bound
shr
sbb
push
add
dec
lcall
imul
xor
pushf
fwait
out
loope
xor
sbb
inc
xchg
stos
sub
je
xchg
mov
mov
aas
jle
mov
out
lods
sub
daa
add
test
sbb
dec
loope
jp
sbb
cmp
jp
sub
pop
xchg
movsb
push
hlt
jae
jecxz
push
leave
arpl
mov
push
mov
fildl
mov
mov
mov
mov
mov
jl
iret
pop
ljmp
fistpl
js
or
push
push
add
xor
add
data16
ds
xchg
icebp
repz
imul
in
aaa
push
xchg
mov
arpl
iret
adc
shlb
rcll
cmpsl
call
cltd
enter
jne
leave
dec
jmp
aad
mov
das
fldcw
jb
push
add
sahf
rcrb
clc
xor
mov
adc
pop
adc
jge
mov
mov
nop
in
bound
shll
cltd
sbb
fcoms
xor
jp
mov
lods
dec
stos
sub
out
pop
clc
ja
xchg
ret
sub
filds
push
movsl
and
pop
jbe
and
xchg
cld
mov
jp
mulb
or
cli
mov
hlt
and
sub
dec
pop
shl
xchg
daa
jo
pop
jle
shlb
or
jno
test
mov
loop
popf
movsb
xchg
xchg
in
sbbb
pop
lcall
lret
arpl
je
iret
stc
inc
icebp
jno
popf
jo
push
outsb
mov
addr16
sahf
stos
push
rol
mov
ja
xor
push
cmp
pop
pop
outsb
cli
into
dec
int
stos
inc
lods
add
jle
mov
clc
icebp
push
lock
adc
outsb
in
dec
in
sub
cs
or
gs
test
hlt
inc
test
inc
mov
aas
mov
lock
sub
xchg
ja
sbb
cvtps2pd
xchg
inc
xchg
adc
iret
push
add
out
imull
jp
gs
mov
imull
movsb
fmul
or
mov
jno
nop
add
push
in
push
shll
ljmp
jb
shll
rol
loope
xchg
pop
fisttpll
ficompl
pop
mov
sarl
mov
fcmovu
inc
scas
dec
into
out
test
push
enter
mov
pop
aam
enter
aad
fisubrl
jb
xchg
outsb
in
into
jo,pt
cs
mov
testb
cmp
xor
out
mov
sub
inc
aas
fcompl
mov
stos
std
call
sbb
popa
push
fiaddl
repz
testb
into
dec
int
fdivs
push
sti
int3
call
scas
jbe
xchg
jns
test
mov
xchg
loope
loop
lock
cmp
jno
add
mov
pop
push
push
add
dec
aad
decb
xor
cltd
insl
sub
cli
pop
jne
or
out
outsb
jae
and
mov
sub
push
movsb
lcall
mov
gs
mov
adc
inc
aam
fstpl
xlat
or
xor
add
fimuls
push
iret
cmp
bound
pop
dec
imul
push
enter
addr16
inc
add
dec
loop
push
sub
sbb
repz
and
inc
addr16
add
and
mov
push
add
test
push
int3
adc
add
dec
int
inc
xor
rorl
inc
aad
xor
das
scas
add
inc
adc
mov
xchg
popf
sbb
pusha
and
dec
cld
mov
lds
sbb
mov
sub
mov
inc
cmp
dec
xchg
fidivl
push
add
sti
cltd
mov
sub
loopne
push
cli
jns
decb
dec
push
lock
aaa
cld
mov
nop
sub
test
neg
mov
popa
push
pop
je
je
or
and
mov
pop
push
lea
pop
mov
in
mov
push
jo
call
lcall
fldt
les
test
jnp
out
test
mov
ja
cmp
loopne
sub
fwait
aad
sub
bound
cmp
scas
push
dec
mov
sub
lret
cmp
fsubrs
dec
cmpsb
and
js
mov
sarb
xchg
sbb
aaa
js
xchg
dec
mov
adc
clc
insb
fs
sbb
sub
sbb
lcall
out
stc
and
cmp
add
arpl
fidivrs
push
imul
iret
hlt
jae
mov
fmul
ret
and
div
imul
add
test
stos
or
xor
into
leave
ficoml
adc
mov
mov
sub
cli
jns
ret
mov
pop
pop
movsb
icebp
jo
pusha
or
xor
cwtl
add
xor
enter
sbb
sbb
test
fistps
testb
fwait
cmp
lods
out
pop
aam
inc
push
xor
out
xchg
aam
pusha
inc
dec
sahf
in
push
shll
pop
mov
xchg
scas
pusha
mov
inc
dec
inc
adc
aas
mov
adc
sbb
lea
adc
pusha
mov
inc
add
lock
xchg
push
divl
adc
mov
mov
inc
popf
icebp
nop
and
es
in
jno
add
mov
dec
push
inc
imul
into
push
divl
add
repz
leave
and
cmc
lds
movb
mov
pop
sbb
in
or
cmpsb
mov
les
incl
pushf
sub
xchg
pop
ret
mov
stc
mov
cli
pushf
cmp
icebp
stos
fs
sahf
loop
jo
xor
pop
fisttpll
push
cmovg
imul
sub
sbb
inc
rorl
insl
fs
cltd
push
movsl
sbb
mov
fldcw
fs
xchg
xchg
incl
scas
into
sti
push
cmp
mov
fnstenv
adc
jae
cmp
es
loopne
xor
das
scas
mov
inc
orb
out
shlb
cltd
push
fwait
xchg
pusha
test
scas
ds
fdivl
repz
pop
lcall
mov
push
pop
insb
popa
scas
mov
xor
fildl
sub
push
xor
mov
in
mov
cwtl
js
push
repz
popa
jne
movsb
mov
movsb
pop
cmp
add
jl
push
arpl
and
scas
dec
das
pusha
or
outsb
stos
inc
rcll
ficomps
mov
xchg
jecxz
pop
fstps
push
mov
fldlg2
shlb
xor
out
push
push
mov
ljmp
jp
gs
stos
loopne
daa
xor
jno
insb
test
jb
mov
jecxz
sub
imul
in
rorb
pop
adc
into
pop
mov
xor
ja
mov
insb
cltd
movb
or
or
mov
lret
add
xchg
xchg
adc
lcall
adc
cmp
jno
loop
es
or
dec
outsl
mov
in
inc
or
dec
inc
xor
data16
jge
jl
jecxz
sub
js
inc
jp
and
in
mov
fidivl
cld
mov
std
push
insb
mov
aaa
outsl
mov
sub
data16
or
and
sbb
adc
mov
mov
or
mov
push
call
mov
movsl
xchg
pusha
fcoml
ficoml
xchg
xlat
out
mov
or
sub
xlat
mul
push
int3
and
sub
shlb
insl
popa
pushf
pop
fbld
adc
jecxz
loop
cmp
aad
push
inc
xchg
push
cmp
mov
insb
mov
adc
pop
imul
into
dec
in
or
jne
inc
push
iret
movsb
sti
sbb
mov
scas
inc
mov
pop
fwait
ja
mov
push
repnz
adc
adc
ljmp
xchg
push
cmovbe
mov
and
xchg
xchg
test
loop
fdivrp
push
mov
scas
sbb
jnp
jo
std
shll
divl
lods
dec
mov
lret
les
movsb
lods
or
adc
and
dec
and
inc
inc
mov
mov
hlt
add
scas
dec
into
cmpsb
cltd
ret
aam
mov
insl
mov
xor
arpl
cmp
aad
sub
pop
inc
xor
pop
ds
inc
rcl
mov
fistpll
in
xor
ficomps
dec
pop
xor
mov
mov
repnz
sarb
xchg
push
pop
aas
sbb
orl
fisttpll
dec
ret
inc
jle
outsl
xor
stc
sbb
lret
stos
sub
pop
xchg
nop
fwait
pop
es
sbb
imul
data16
insl
aaa
mov
out
stos
gs
ja
ljmp
decl
jne
sarl
push
jp
mov
nop
lods
repz
sti
jbe
in
mov
sti
mov
cli
mov
sub
push
out
loop
lret
sbb
dec
dec
call
fst
lret
sbb
lds
push
shrl
sarl
cmp
outsb
outsb
into
repnz
in
push
or
roll
or
pop
jecxz
push
vpcmpgtb
je
xchg
test
repz
in
push
inc
sub
aas
in
xor
sahf
push
rol
lock
jge
cmp
jo
cli
mov
jg
int
fimuls
aas
jmp
pop
lret
cmovp
adc
xchg
lcall
adc
fs
test
jnp
push
mov
pop
xchg
mov
pop
cmp
movsb
pop
mov
outsb
insl
clc
xor
lahf
aaa
add
stc
mov
fldt
jl
sbb
cli
jns
push
and
jne
je
js
inc
xchg
adc
jp
scas
cs
into
jns
dec
mov
add
lock
mov
adc
add
test
cmp
stos
jmp
push
out
sub
mov
add
add
mov
mov
mov
les
jecxz
clc
jge
test
dec
adc
insb
jmp
and
in
xchg
out
inc
out
xor
int3
push
rclb
mov
int3
inc
lret
xor
fisubl
loop
loope
fdivrl
mov
pop
push
or
xlat
fsubl
xchg
nop
xchg
shlb
and
sbb
xchg
push
aad
scas
lds
stos
sub
xchg
aas
push
dec
nop
jb
adc
xlat
add
cmpsb
imul
in
testl
cli
cs
std
call
jne
popa
adc
jle
mov
jne
cmp
mov
xor
jg
pop
xchg
mov
addl
int
and
add
fstps
pop
faddp
lds
jecxz
dec
push
pop
inc
xor
xorl
and
pop
xor
ljmp
jmp
sbb
xor
push
cmp
adc
lock
jge
jb
push
push
cmp
push
jae
in
lds
std
sbb
push
mov
ss
sub
loopne
xor
push
sbb
adc
and
int
rolb
inc
mov
pushf
ljmp
insl
addr16
cwtl
popf
cmpsb
in
repnz
dec
cmp
dec
imul
and
cmp
xor
pop
shrb
clc
sub
inc
enter
sbb
or
pop
and
clc
xchg
adc
scas
dec
and
jp
scas
cmp
cmpb
cli
push
push
mov
and
xchg
je
or
nop
inc
inc
xchg
adc
sub
lret
add
push
xchg
gs
out
fcmovnu
push
loope
dec
mov
bound
push
fisubrl
aad
cltd
or
mov
xchg
mov
outsl
push
and
mov
and
mov
movsb
jecxz
sub
sahf
mov
mov
int3
mov
xor
movl
inc
das
ficompl
scas
cs
test
sub
pop
mov
push
xor
push
sbb
dec
mov
ret
sub
popa
and
sub
in
mov
pop
cwtl
rorb
int
movb
cmpsb
and
cmp
cmp
aas
sub
out
cmp
ja
xchg
xchg
pop
test
dec
movsl
cld
mov
lahf
outsb
jne
div
cs
or
fadds
call
stos
pop
push
add
dec
sbb
loope
xchg
daa
jg
pop
jle
addr16
push
icebp
jne
sbbl
add
call
adc
pop
add
pop
add
add
xor
jecxz
mov
dec
fbld
add
sahf
jb
xor
lock
pushf
jge
mov
cmp
negl
pushw
xchg
mov
mov
jecxz
int3
xor
mov
push
adc
gs
leave
dec
mov
inc
lds
lods
ds
sbb
daa
xchg
rcrb
xor
push
dec
aas
sete
lds
xchg
xchg
lret
sub
ss
lcall
aad
lret
push
cmp
sub
icebp
test
popf
int
jns
nop
std
cld
adc
jns
adc
outsb
xchg
xchg
mov
scas
adc
arpl
shlb
enter
mov
test
adc
cmc
mov
mov
sar
stos
or
popl
pop
hlt
push
push
aad
jb
lds
cmp
mov
insl
in
cld
fadds
or
aam
jmp
mov
sub
inc
shll
sub
xor
movsl
xchg
js
aaa
and
xchg
jns
xor
xor
enter
clc
cmp
out
push
rcll
dec
pop
cmp
inc
or
shll
mov
push
push
push
pop
lds
daa
inc
loop
push
mov
dec
sbb
lods
loop
cwtl
cmovo
xor
or
fwait
push
aas
mov
cld
test
std
popf
jno
fbld
mov
fsts
xchg
dec
jle
lahf
sahf
sbb
scas
sub
xchg
xchg
shr
test
mov
mov
out
pop
xor
jl
in
mov
test
sub
cltd
mov
ret
sub
mov
nop
movsl
les
ror
arpl
push
ficompl
loopne
mulb
push
test
jle
adc
and
inc
xchg
shll
xchg
mov
and
jecxz
out
and
sub
cmp
lcall
jb
mov
out
repnz
jns
out
outsl
scas
push
int3
loopne
mov
jle
cmp
addr16
inc
stos
es
fldl
cmp
jae
fdivrl
nop
lret
movl
push
dec
cmpsb
fimuls
popf
scas
and
mov
sub
cmpsl
ljmp
es
cmp
popf
xchg
adc
adc
call
mov
daa
push
stos
sub
lahf
sbb
aas
add
lock
mov
cmc
and
sbb
jne
xchg
mov
andb
push
ja
mov
shlb
inc
divb
cmp
or
mov
mov
pushf
lea
jne
adc
mov
pop
jecxz
push
aad
or
pop
push
bnd
aad
stos
jmp
sbb
imul
mov
and
jecxz
scas
in
and
aas
add
icebp
imul
mov
outsb
mov
addr16
add
clc
xor
lods
pop
mov
fildll
push
int3
cmp
xor
jbe
add
sub
push
scas
loop
popf
xor
mov
push
divl
test
lds
mov
adc
jl
dec
xor
xchg
dec
les
dec
sbbl
cmpsl
sbb
xor
ret
mov
pusha
add
and
cmpsl
pop
test
add
pusha
pop
mov
bound
fwait
popf
jge
es
out
gs
push
mov
cmc
test
hlt
lret
xchg
mov
icebp
in
sub
mov
pop
mov
hlt
dec
inc
lahf
adc
out
jno
add
xor
sarl
divl
cmpb
push
lock
popa
push
pop
add
pop
call
imul
push
push
aad
popa
test
dec
into
jb
lods
pop
sbb
cmp
push
cs
ss
cmp
das
scas
mov
inc
cmp
mov
inc
lret
inc
or
mov
mov
das
push
inc
hlt
shll
mov
addl
jae
xchg
mov
jp
imull
sbb
iret
insb
sub
jl
push
cmpsl
repnz
sub
adc
in
aas
push
xor
in
cmp
jp
cmpsb
gs
mov
imul
push
divb
rorb
ret
push
dec
rorb
rolb
xchg
stos
pop
jg
shl
enter
push
ficoml
pop
xchg
cmpsl
mov
loope
xchg
pop
mov
sarb
fimull
rcll
call
insb
mov
jo
mov
inc
push
xor
fidivl
xchg
aam
stos
cli
das
jmp
cld
rol
cmp
cmp
sbb
je
cmp
xchg
es
mov
push
mov
sarl
fdivr
mov
inc
stos
jnp
fdivl
mov
imul
mov
sub
add
sub
movb
sbb
ficompl
and
sub
cwtl
dec
repz
jl
cmpsb
and
jle
jp
jge
mov
cli
int3
test
jb
dec
inc
inc
mov
adc
mov
lea
andb
mov
xchg
and
lock
out
int
xchg
stos
pop
ficoms
ja
push
xchg
inc
mov
shll
pop
js
test
fdiv
pop
push
sub
aam
push
insl
fisubrs
inc
ljmpw
arpl
inc
xchg
scas
lods
inc
repz
fcomip
cld
stc
jle
cmp
cmp
mov
cmp
out
pop
or
xor
or
push
sbb
or
add
mov
lods
int
lock
xor
inc
push
bound
sbb
insl
popf
sbb
inc
xchg
mov
xchg
jns
mov
inc
xchg
push
fimuls
aas
sub
xchg
xchg
je
add
mov
cmc
adc
mov
gs
mov
sub
push
test
pop
lods
cli
jns
test
divb
cld
and
cmp
insb
jnp
add
jl
lock
data16
repz
pop
lea
ud0
int
xor
pop
or
adc
cmp
jbe
mov
fsubrl
jmp
dec
mov
fcmovnu
lods
sub
in
pusha
jnp
pop
mov
sbb
fisubrl
pop
sub
gs
test
fistps
testb
fwait
cmp
cmp
xchg
mov
int3
push
clc
xchg
cmc
scas
mov
outsl
and
repz
mov
fidivrl
inc
rolb
mov
or
pop
mov
dec
lret
dec
lahf
push
mov
inc
fbld
mov
cltd
sbb
adc
dec
push
inc
lds
mov
mov
test
sub
xchg
push
jo
dec
sub
movsl
and
shl
dec
push
and
mov
std
jl
loopne
xchg
cli
jns
std
rclb
or
out
outsb
fisttpl
xchg
mov
into
jbe
in
mov
out
xchg
mov
mov
lods
int3
sbb
addb
int
and
inc
subb
push
jg
fisttpl
xchg
not
push
inc
int3
mov
pop
imul
push
lods
insl
jno
fs
aam
mov
insl
mov
rolb
into
jecxz
add
pop
aam
shrl
loopne
add
mov
pop
cmp
lea
rorl
mov
dec
call
iret
add
mov
mov
int3
enter
mov
mov
inc
inc
ror
cs
shl
faddl
sbb
aad
and
mov
adc
lret
stos
and
fisubrl
pop
pop
es
sub
scas
push
movsl
lock
fbstp
addr16
jl
sub
inc
sub
test
dec
gs
je
mov
or
lea
shll
sub
js
dec
pop
mov
test
jle
dec
pop
rcr
pop
addl
fstpl
into
ficompl
mov
fcmovu
ljmp
into
fcompl
mov
pusha
insb
insb
call
jb
jmp
jecxz
scas
divl
push
and
jno
jno
cmpsb
xor
icebp
inc
mov
out
rorl
xchg
cmpsb
mov
cmp
outsb
aam
mov
adc
lea
ret
inc
pop
pusha
add
das
out
adc
push
push
sbb
push
push
lcall
sub
jp
adc
arpl
mov
mov
push
pop
std
sub
sbb
repz
jge
dec
adc
lahf
push
mov
lcall
data16
ja
das
adc
jns
hlt
mov
movsl
stos
mov
xchg
nop
or
cli
sbb
cmp
arpl
dec
push
add
test
sbb
js
jle
adc
in
fistpl
pop
push
or
push
jae
fucomip
aad
push
in
xchg
and
popa
mov
lcall
xor
inc
jmp
rorl
stos
xchg
or
sub
inc
inc
shlb
cs
mov
push
das
push
shrl
ds
xchg
xor
xchg
inc
xor
dec
mov
ss
mov
mov
inc
or
mov
push
add
rcrl
mov
xor
and
cltd
out
pop
jle
cld
sub
mov
test
sub
cli
adc
push
add
arpl
sahf
sub
out
cli
xchg
orl
mov
ja
insl
adc
mov
jge
icebp
icebp
pop
pop
xchg
mov
dec
test
je
inc
loop
lret
pusha
fmull
push
pop
pop
fdivs
mov
in
pop
int3
push
push
insl
pop
stos
push
iret
dec
jle
fisubrl
lock
imul
in
in
insb
sbb
pushl
pushf
jmp
loopne
out
popf
sub
pop
mov
stc
and
xchg
es
cmp
cmp
mov
xor
sub
add
push
int3
mov
mov
dec
inc
pop
mov
inc
ret
dec
pusha
push
inc
paddusw
mov
dec
jecxz
sbb
xchg
int
jmp
mov
adc
mov
inc
mov
push
fisubrl
daa
hlt
repz
xchg
dec
push
dec
inc
push
xor
jmp
add
xorb
std
jl
scas
inc
out
stos
loop
push
jle
aad
lock
sti
xorl
or
repnz
addr16
pop
xchg
movsb
jmp
hlt
jae
jecxz
cs
xor
inc
add
jg
inc
push
sub
pop
push
rol
xlat
push
fimull
rcll
hlt
sub
stos
and
fisubrl
xchg
dec
cmp
data16
push
mov
lcall
subl
mov
push
cltd
xchg
repz
xor
push
push
lods
add
cwtl
inc
fildl
gs
inc
mov
pop
movb
dec
mov
mov
sti
fwait
sbb
mov
jle
sbb
xchg
adc
inc
aad
mov
inc
pushf
cmpsb
dec
outsl
sahf
sbb
mov
push
xchg
mov
loopne
es
out
sub
inc
loop
xor
fsub
push
add
cmc
movsb
and
jg
and
fbstp
cld
mov
addb
out
jl
test
imull
dec
xor
outsb
xchg
inc
pop
icebp
rorb
mov
leave
jnp
lret
mov
inc
sbb
arpl
loop
push
mov
ficomps
bound
lret
push
ficoml
xchg
repnz
push
or
into
jb
movsl
mov
imull
popf
imul
popf
cwtl
mov
gs
dec
lret
mov
sar
pop
and
sub
jae
push
cmpsl
and
mov
cmp
xor
and
dec
sar
test
mov
les
xor
inc
lds
repnz
sub
sub
daa
dec
mov
adcb
inc
sarb
adc
pop
repnz
lret
test
in
ret
dec
movsb
and
or
push
push
xchg
stc
ds
ja
sub
shll
in
cmp
add
mov
mov
mov
ja
inc
dec
add
shrl
mov
mov
in
mov
mov
in
and
pop
movsb
popa
dec
fcoms
pop
adc
outsl
adcb
push
inc
sti
aad
iret
js
movsl
mov
sub
cmpsb
lods
sbb
jmp
in
shlb
cmp
scas
push
inc
push
cmp
mov
call
nop
mov
jno
in
and
mov
call
cmp
add
sbb
ss
cld
test
sarb
sub
adc
cmp
sbb
ret
pop
mov
jg
jmp
adc
iret
ds
mov
pusha
lods
and
sub
adc
test
mov
movsl
and
lea
push
jo
xor
jl
and
stc
lods
push
adc
lcall
movsb
mov
lods
or
mov
pop
cmp
sbbb
and
push
rcr
pop
xor
adc
add
push
mov
adc
jno
jp
out
and
sbbb
jmp
out
data16
push
add
dec
add
mov
mov
scas
mov
mov
fsub
push
add
mov
push
orb
adc
enter
dec
jle
dec
jge
andl
jp
push
aam
xchg
cmp
sbb
ja
pop
and
push
dec
repnz
movsl
xchg
adc
mov
ljmp
mov
popf
cmp
adc
sbb
xchg
adc
cmovp
jns
add
jae
fucomp
icebp
jg
push
hlt
xlat
push
jbe
mov
cmp
add
dec
sbb
scas
lahf
loop
nop
inc
mov
inc
dec
add
push
sub
lea
add
mov
pop
stos
mov
add
and
call
mov
pop
dec
xlat
stos
into
lcall
stos
xchg
lods
adc
daa
jge
push
inc
shl
ja
mov
pusha
fwait
and
inc
and
or
ss
cmp
xchg
jne
mov
cmp
hlt
xor
out
icebp
aaa
xor
mov
je
imul
lahf
into
dec
test
popa
jl
mov
cld
stos
lods
sub
push
mov
xchg
and
adc
notb
pushf
xor
nop
roll
xchg
xchg
iret
push
dec
arpl
stos
gs
arpl
sbb
lods
fs
inc
pop
data16
insb
dec
movsb
and
mov
pop
testb
jp
sahf
mov
adc
outsl
mov
nop
out
xchg
jb
cs
hlt
loopne
ljmp
leave
iret
nop
push
pop
fildl
clc
movsb
or
xchg
pop
aam
pop
add
push
aad
pop
gs
inc
jno
adc
push
sbb
dec
sbb
xchg
in
pop
jns
aad
push
sub
mov
xor
imul
sbb
lods
cmp
iret
stos
arpl
loop
ds
int
inc
roll
rclb
jnp
xor
bound
lea
inc
pop
inc
or
rolb
and
sbb
pop
push
or
cmp
lret
mov
jno
sbb
fisubrl
loop
mov
mov
adc
lcall
adc
cmp
mov
dec
ss
mov
sub
adc
stos
sub
xchg
test
and
mov
add
outsl
jp
push
jno
xor
mov
push
and
addr16
scas
leave
icebp
mov
push
mov
lock
or
mov
outsb
lock
cmp
loope
mov
sub
out
insl
fstpl
movsl
imul
and
gs
mov
pop
fistps
loope
lock
mov
aaa
jge
mov
lds
scas
aas
push
xor
mov
lods
rcll
test
mov
into
dec
test
lret
test
or
fstpt
mov
mov
push
popf
sbb
cwtl
push
iret
and
cltd
sbb
xchg
jnp
cwtl
fimuls
mov
jecxz
adc
sub
scas
movsl
negl
cmpsl
es
adc
lret
pop
lahf
push
mov
imul
jbe
jl
sub
dec
mov
push
lret
xor
lock
mov
clc
dec
push
or
sti
add
jle
jl
sub
stos
adc
inc
add
lock
xchg
sbb
jnp
faddl
or
push
ficompl
test
push
sarl
mov
popf
fldcw
pop
cmpsb
xor
imul
scas
insl
mov
test
fstps
daa
jg
hlt
cmc
aad
loopne
cld
push
inc
shll
cmp
mov
push
inc
js
mov
mov
xor
fstl
shll
inc
out
sbb
mov
cmpsb
cmp
cmp
jecxz
rol
and
mov
mov
pop
sahf
sbb
and
cltd
ret
inc
fstpt
arpl
inc
and
sub
xchg
push
rolb
push
lahf
nop
in
sti
xor
jmp
mov
fwait
outsl
sub
ja
sbbl
js
in
dec
cmpsb
mov
out
movsl
andb
push
andb
leave
ja
xor
sbb
dec
fistl
push
test
jle
popa
mov
daa
mov
pop
fsub
je
ficompl
mov
addl
loope
adc
iret
dec
aam
andl
sbb
iret
push
push
imul
push
addr16
sub
dec
dec
inc
shll
hlt
cli
mov
or
and
mov
push
jb
mov
mov
fistps
push
cmp
lret
xor
jecxz
xchg
popa
add
pusha
push
adc
and
int
cld
or
int
leave
fisttpll
pushf
jo
xchg
adc
mov
jne
in
sub
adc
stos
sub
and
pop
lahf
xchg
add
xor
std
jl
lcall
adc
jg
pushw
pop
js
lahf
push
add
insb
lahf
stos
push
incb
notl
bound
adc
jne
sub
lret
xchg
nop
or
icebp
xor
pop
push
arpl
sub
mov
fildl
faddl
jno
sub
insl
in
pop
or
ljmp
push
mov
cmp
js
jle
jb
xchg
orl
iretw
dec
jns
loop
adc
filds
ja
rcll
insb
mov
sub
sub
dec
insl
xchg
loope
inc
xor
mov
adc
fmuls
int
add
icebp
jge
and
push
sbb
sbb
fcoms
sub
sbb
xchg
push
lcall
and
bswap
jle
xor
lods
sub
xlat
call
insb
xchg
sub
movsl
and
stos
lahf
jnp
leave
xchg
nop
or
sub
shll
jbe
jns
aas
hlt
int3
lret
fldl
add
outsb
xchg
sub
mov
mov
inc
inc
cmp
jp
mov
xor
jle
pop
insb
dec
imul
ficomps
aad
les
ljmp
inc
inc
gs
push
iret
dec
dec
stos
mov
imul
cmpsb
movsl
xchg
sbb
ds
lret
rclb
inc
cmp
xor
scas
stos
cmp
mov
mov
nop
pop
lds
je
push
roll
out
in
dec
into
test
pop
xchg
inc
sub
repz
adc
pushf
fwait
popa
adc
out
sahf
sbb
adc
xchg
add
cmpsb
and
lahf
push
mov
mov
jp
jge
xchg
fdivs
addl
adc
fxch
pusha
push
jp
jno
nop
cld
jecxz
mov
in
mov
xchg
ljmp
addb
pop
adc
out
sub
test
pop
push
cmc
sbb
aaa
push
ficompl
repnz
rcrl
sub
push
push
fs
add
xor
add
sub
push
pop
ljmpw
inc
adc
cli
in
jg,pt
pop
sub
xor
cmp
je
popf
xor
pushf
push
aad
imul
push
inc
dec
jo
das
fidivs
nop
mov
dec
enter
fidivrl
mov
xor
das
iret
cs
or
adc
roll
pop
shrb
and
jae
adc
mov
mov
data16
sbb
xchg
sbb
lods
sub
jae
xchg
mov
ljmp
mov
and
jmp
daa
shll
dec
sub
add
push
repz
rorl
xchg
les
ja
jge
push
sti
ja
subl
jl
adc
jns
stos
sub
test
sahf
loop
xchg
call
cld
or
shlb
mov
pop
ljmp
mov
into
pop
sub
jo
push
push
push
rcll
mov
imul
out
push
cld
xor
aas
mov
test
repz
pushf
cmp
inc
sar
cmp
or
xor
scas
push
das
inc
jo
cmp
orl
inc
lret
cmp
sub
dec
sti
out
cs
ljmp
cmp
icebp
stos
in
cmp
call
ljmp
mov
xor
and
sbb
hlt
repz
je
sub
adc
mov
insb
add
xor
lods
sub
fstl
outsb
sub
jb
jle
popa
add
inc
add
push
add
loope
ja
mov
dec
in
push
test
je
outsl
out
popf
repnz
or
repz
test
pop
sub
mov
fidivrl
pop
in
imul
or
dec
push
pop
pop
decb
sub
bound
scas
fildll
je
in
insb
jmp
es
call
add
cld
cmp
loope
mov
rclb
scas
ret
push
mov
push
lock
xchg
and
dec
les
out
xor
mov
push
jecxz
in
sahf
fimuls
sbb
stc
push
lcall
outsl
divb
xor
fdivrl
or
xchg
test
and
pop
int3
out
push
fstpl
cs
jp
cwtl
ds
test
aas
xlat
jmp
pop
push
xor
xchg
and
jne
cmc
rcrl
int
divb
add
lods
jl
ja
shl
je
mov
clc
call
mov
das
push
daa
xchg
popa
int3
pop
cvtdq2ps
stc
ret
jmp
mov
xlat
loop
test
pop
jbe
dec
addb
popf
fldcw
fisubrl
pop
in
imul
fs
test
in
jmp
adc
adc
inc
shlb
daa
pop
call
cwtl
in
mov
arpl
shlb
pop
inc
bound
lret
inc
pop
ss
inc
pop
adc
leave
dec
mov
xor
add
jg
or
add
dec
loop
mov
xchg
adc
adc
or
mov
jo
leave
ficomps
lret
cwtl
sub
xchg
and
pusha
addr16
or
xor
xor
sbb
test
cmpsb
cmp
lea
outsl
out
sarl
add
jle
std
shll
jbe
dec
stc
mov
repnz
lods
loop
outsl
mov
adc
andb
data16
push
lea
sarb
fimull
insl
mov
lods
dec
repnz
aaa
lods
fcompl
mov
lret
call
imul
clc
mov
stos
mov
loop
imul
pop
paddusb
in
mov
data16
mov
xchg
into
jb
stc
or
cmp
ret
mov
ss
inc
loopne
xorb
insb
or
sub
and
pop
les
loopne
mov
and
enter
sbb
adc
sub
ja
push
sbb
shlb
push
and
lahf
mov
and
in
ja
push
movsl
jns
js
arpl
fsubs
leave
and
lahf
out
testb
or
sub
mov
cmpsl
ss
repz
test
mov
inc
push
adc
push
xor
xchg
in
xchg
push
rcr
inc
push
mov
jae
dec
pop
scas
loopne
in
mov
insb
mov
ljmpw
push
in
bound
outsl
mov
sub
cs
test
ljmp
or
mov
push
call
in
in
mov
push
inc
out
scas
nop
cmp
xchg
and
mov
jle
inc
or
or
lahf
lea
mov
rcrl
fbld
sbb
xchg
sub
pop
repz
addps
lods
and
movsl
push
lret
cmp
sbb
lods
ss
rorl
push
mov
in
pop
inc
pop
ljmp
sub
cmc
fstp
and
ds
and
push
cli
or
jp
cmc
mov
cli
jns
lods
push
dec
mov
xchg
mov
adc
lods
aad
adc
pop
fisttpl
jno
or
sub
sar
pop
add
sbb
fcmovnbe
push
popa
aad
pop
arpl
xor
pop
fcoms
adc
cltd
sbb
sub
xchg
imull
movsl
insl
jno
mov
pop
loopne
daa
mov
cwtl
and
sub
sbb
adc
insl
adc
dec
insb
mov
shll
je
jnp
shrl
jne
cld
inc
movb
xor
cs
or
enter
lret
cld
sbb
xchg
adcl
sbb
stos
sbb
adc
aad
cltd
sbb
xchg
dec
fs
sub
addr16
loopne
fildll
out
sub
and
sbb
cmpsl
fbld
push
xor
and
jp
push
jno
shll
mov
cli
adc
sub
xchg
je
out
dec
inc
mov
dec
push
cld
pop
ret
jne
lea
pop
bound
mov
mov
aas
test
rolb
cmp
push
in
rcrl
outsl
ljmp
mov
gs
fwait
push
pusha
fcomi
bound
add
sbbl
call
mov
jne
xchg
jnp
push
lcall
mov
push
aam
aam
mov
mov
mov
add
rcll
or
bound
loopne
sbb
cld
xor
xchg
mov
loopne
adc
xchg
mov
lahf
ja
mov
inc
rorb
sbb
out
and
out
push
mov
movsb
pop
push
gs
sbb
cmp
fucomip
bound
mov
cmp
js
dec
ss
jo
stos
jp
jge
in
js
idivl
outsb
jns
movsb
lods
addr16
jne
xor
fwait
out
lds
push
mov
mov
or
cmpl
push
add
repz
xor
aaa
rcrb
mov
pop
adc
sbb
or
jp
es
decl
add
push
insl
or
add
popf
sbb
and
sbb
cs
mov
xor
xchg
mov
loop
cli
icebp
je
jo
jbe
fbstp
das
insb
xchg
ljmp
add
bound
loopne
sbb
adc
fwait
xchg
adc
mov
fildll
daa
lcall
lods
imul
out
sbb
out
dec
mov
lds
cmpsl
sahf
inc
popa
test
stos
fisubl
xchg
clc
outsb
push
pop
rorl
add
orl
push
shrl
mov
jns
and
xor
scas
cmc
sbb
aam
add
mov
pop
or
ret
mov
cmp
les
cwtl
sbb
jmp
insb
loopne
iret
ficompl
pop
mov
sbb
add
xor
stos
aad
lods
push
iret
inc
sub
and
pop
outsb
mov
sahf
jl
push
jmp
loop
sarl
ret
xchg
mov
idivl
stos
movsl
and
bnd
jne
or
push
sub
das
insb
xchg
adc
mov
into
pop
xchg
sbb
cwtl
sbb
jno
cwtl
inc
push
ret
inc
popf
fs
nop
lret
nopl
mov
sub
dec
stos
outsb
push
sbb
pop
movl
sarl
jns
jge
jnp
sub
clc
dec
stos
stos
sub
push
jecxz
dec
call
popa
fisubs
insl
out
push
cmp
jb
xlat
xchg
cltd
fwait
cwtl
out
loopne
cmp
fstps
inc
push
add
pop
es
mov
into
sub
sub
inc
and
mov
or
addr16
push
cli
lods
or
or
mov
sbb
imul
push
cmp
sbb
scas
rcrb
dec
cld
clc
add
cmpl
add
pop
fdivrs
jae
into
mov
xchg
outsb
inc
rcll
pusha
lret
mov
push
dec
repnz
jnp
in
mov
ret
insb
pop
adc
fldenv
or
or
cmp
inc
jp
inc
or
xchg
sub
adc
fwait
adc
mov
lock
adc
mov
xor
in
jnp
fld
sbb
rcr
cs
call
mov
and
lahf
mov
cmp
in
imul
out
in
call
mov
lds
lods
or
jge
loop
ror
cltd
cmc
loop
fsts
lcall
jge
inc
xor
xor
sbb
test
push
cwtl
pop
push
push
mov
imul
dec
scas
bound
shl
rcrl
scas
shrb
jecxz
loop
mov
jg
ja
fwait
lea
lods
jecxz
mov
jecxz
dec
adc
in
clc
jp
in
mov
subb
sbb
aas
pop
xchg
jbe
dec
enter
lret
mov
loopne
sbb
sub
xor
adc
pusha
loope
mov
aad
lock
xlat
iret
fstl
fwait
dec
jbe
mov
fcmove
cmovns
sahf
and
outsb
imul
mov
popa
jae
lahf
push
add
js
xor
cmp
mov
or
or
pop
xchg
ret
repz
add
cmpsl
mov
push
and
add
popf
jns
fldenv
or
inc
xchg
fistpl
stos
inc
add
das
shll
iret
jno
cmp
pop
mov
pop
xor
push
xchg
jbe
jb
pusha
cmpsl
xor
push
or
ja
into
jb
int
insb
jmp
and
stc
mull
aad
jo
testl
call
xchg
inc
roll
sti
loope
push
mov
fs
jns
fisttps
mov
stc
pandn
jns
pop
aas
xchg
or
fcmovu
out
into
mul
lock
lret
int
lods
adc
mov
sbb
pop
shll
jbe
imul
imul
pop
adc
mov
adc
cmpsl
leave
into
mov
sbb
hlt
jecxz
dec
popa
cwtl
and
jno
jl
arpl
mov
push
or
movsl
pop
add
jecxz
cwtl
popf
or
jecxz
iret
mov
jne
add
xchg
push
push
mov
into
scas
push
iret
shlb
or
int3
lods
add
cmpsb
push
test
mov
jne
mov
or
mov
arpl
popf
int
or
pop
subl
pop
or
add
push
jmp
add
frstor
mov
in
shr
pop
push
xorb
into
ret
add
mov
mov
not
mov
or
pop
jp
push
sbb
dec
mov
jmp
mov
push
sub
lcall
movb
fdivrl
mov
les
es
sarl
mov
lea
push
mov
push
lea
insb
dec
inc
dec
inc
cmp
jecxz
stos
mov
aam
andl
and
nop
ret
out
mov
shlb
lret
js
mov
lahf
inc
daa
pushf
call
lret
mov
pop
push
or
xor
or
push
mov
adc
sbb
mov
push
cbtw
das
xlat
cmp
push
xor
push
pop
and
in
testl
mov
mov
mov
xchg
repnz
and
lret
push
lea
mov
sbbl
inc
loop
inc
add
pop
shlb
jns
pushf
sbb
sbb
movsl
int
outsb
dec
sahf
mov
out
sbb
jb
inc
mov
pop
mov
sahf
fstl
cmp
dec
xlat
pop
push
scas
jns
testb
xor
outsl
pop
outsl
cmpsb
jno
imul
sbb
out
leave
sbb
pop
ret
imul
mov
adc
jns
js
es
repnz
xor
jb
mov
stos
loop
je
or
outsb
scas
push
xchg
jo
or
stos
or
mov
inc
out
mov
adc
btc
inc
jb
cmp
adc
xchg
sub
cmpsl
and
or
xlat
fadd
icebp
lea
push
cmp
add
mov
push
fdiv
cmp
mov
add
and
add
pop
js
loopne
mov
mov
ss
mov
lods
xor
insb
or
sbb
orb
clc
inc
dec
enter
mov
jns
mov
inc
movb
repnz
and
xchg
pusha
and
lret
sbb
jo
sbb
push
add
add
add
dec
repnz
sti
cmpsl
mov
imul
shrb
aas
xor
cmpsb
and
lahf
push
add
lods
or
sub
or
xor
and
fisubl
scas
or
fcompl
mov
lcall
test
sarl
sbb
fcoml
pushf
mov
sbb
xchg
dec
mov
push
xchg
test
adc
cmp
xchg
movsb
jno
cmp
or
sub
mov
sub
cmp
call
adcl
inc
int3
dec
jae
pop
adc
jmp
in
data16
dec
outsl
sub
add
dec
xchg
mov
jmp
clc
xchg
scas
sahf
and
test
fwait
cmpl
outsb
in
insl
in
jo
outsl
xchg
and
pop
sbb
push
fwait
sbb
adc
jmp
std
inc
cmp
inc
enter
lods
call
push
fs
dec
in
cmc
mov
mov
pop
mov
lahf
stos
inc
pop
mov
sbb
pusha
data16
int3
mov
mov
mov
dec
cmpsb
cltd
int
mov
sbb
out
mov
push
dec
mov
popa
loope
popf
test
std
or
sbbl
jmp
sarl
cld
fmuls
adc
sbb
pusha
frstor
mov
cmp
arpl
mov
stc
xor
scas
cmp
sub
mov
and
sub
cmp
xor
and
sbb
popa
jl
dec
enter
popf
js
sub
das
jno
aas
mov
sbb
adc
or
sbb
pop
add
sub
rorb
mov
cld
out
sahf
or
push
sub
sub
sub
in
cld
rcr
nop
mov
add
lods
andl
daa
fsubrs
divl
nop
xor
push
aad
ret
movsl
nop
cld
jae
pop
jne
scas
or
mov
inc
push
fmuls
mov
decl
pop
aam
and
jecxz
out
xchg
mov
ret
movsb
lods
adc
fcmovnb
inc
add
or
push
sub
test
fsubr
imul
test
sbb
cmpb
adc
jg
gs
inc
lret
mov
and
jo
or
inc
pop
stos
cmp
adc
adc
sahf
sbb
jbe
add
frndint
popf
mov
jle
shll
ljmp
xchg
pop
mov
sbb
pop
test
ss
mov
inc
outsb
dec
inc
bound
sbb
scas
sub
loop
movsb
mov
je
pop
lahf
mov
and
adc
frstor
cmp
sbb
test
popf
movsb
fcmovbe
push
sbb
inc
dec
leave
outsb
adc
dec
mov
or
fcmovnb
sahf
fiaddl
cmp
sub
mov
scas
add
cmp
mov
int
add
stos
push
or
inc
jb
movsl
insl
test
push
jmp
push
xlat
imul
imul
mov
inc
or
or
pushf
dec
adc
cs
fs
mov
jo
imull
icebp
pop
push
aas
imul
sbb
fistl
pop
push
mov
mov
sarb
stos
pusha
add
adc
xchg
lods
fs
shr
es
mov
or
clc
adc
enter
lock
xor
loopne
out
cmc
cmp
nop
mov
dec
imul
add
ret
test
outsl
clc
ja
mov
sbb
out
push
jnp
add
outsb
hlt
loope,pn
pop
xorl
lret
or
pop
xchg
sti
jp
mov
std
and
mov
pusha
push
addr16
sarb
pop
fsubl
sbb
push
scas
add
sub
cmpl
or
sbb
subb
rcr
xlat
cmp
imul
ljmp
iret
outsl
and
xorl
aaa
sub
out
cmp
je
cmpsb
call
xchg
xlat
aam
jl
mov
loopne
or
les
cmp
xchg
sub
xor
pushf
je
fists
dec
xchg
or
adc
aad
sarb
insb
aas
jp
mov
pop
inc
xchg
lock
inc
mov
adc
in
inc
jecxz
daa
cmp
call
nop
xor
pop
and
scas
mov
ja
movsb
leave
shll
jb
pop
mov
adc
inc
imul
xor
sub
cmp
aas
mov
cmpsl
push
imul
mov
mov
and
test
fs
add
int3
clc
nop
jl
inc
jge
mov
fdivl
stos
pop
out
mov
lea
sub
mov
jp
rcll
xchg
idivl
stos
movsl
and
xchg
pop
dec
outsb
jo
sbb
mov
cltd
adc
pop
jne
adc
addr16
ss
loopne
mov
push
push
les
push
into
in
daa
popa
out
ljmp
sbb
leave
xor
xor
inc
dec
adc
sub
add
push
cmp
fwait
ja
daa
cmp
popa
xor
cmp
and
negb
fidivl
stos
sub
ja
jbe
shll
out
lods
push
mov
cmp
sbb
push
fstl
push
or
or
ja
mov
lock
sub
ret
repz
subb
xlat
add
mov
leave
cmp
nop
xor
push
push
inc
push
or
inc
mov
in
inc
add
xchg
fiadds
imull
mov
mov
mov
test
inc
dec
pop
xor
inc
add
in
pushf
mov
gs
cmpsl
cmp
icebp
jns
mov
fldl
je
ljmp
fists
lock
mov
out
xor
ret
pop
inc
and
out
pop
aad
dec
out
mov
arpl
in
test
sbb
xchg
dec
mov
leave
mov
pop
inc
arpl
sub
fildll
push
xchg
mov
imul
jnp
out
addr16
push
fisttpll
mov
pop
jns
stos
lods
repz
push
sahf
test
aam
push
inc
loop
dec
dec
mov
popa
mov
dec
out
pop
and
ret
lcall
inc
jno
test
adc
loop
cmpsl
and
push
sbb
insb
mov
in
fstps
inc
fcoms
cwtl
stc
in
mov
fbstp
mov
sti
jmp
lcall
or
push
shlb
aaa
popa
sbb
mov
cli
mov
mov
or
aaa
mov
lods
ja
enter
loop
mov
mov
enter
xchg
sub
dec
into
or
loope
enter
or
or
sahf
mov
div
sub
sub
mov
repz
daa
dec
mov
enter
ja
add
cmovns
dec
into
inc
data16
xlat
xchg
inc
leave
hlt
sbb
fiadds
or
imul
mov
push
pop
dec
ds
or
xlat
jns
les
cs
ja
daa
mov
fisubl
mov
jb
je,pn
test
adc
push
mov
inc
lret
or
pop
fstps
mov
aaa
sbb
jecxz
mov
mov
xor
scas
int3
fsubs
sbb
xlat
stos
xlat
lods
push
lds
inc
pop
mov
out
pop
fwait
sti
cmp
push
rorl
pushf
push
fprem1
xor
jge
inc
roll
xchg
lcall
mov
in
aaa
cmp
ret
das
scas
test
adc
pop
mov
add
popf
mov
add
push
add
push
xor
mov
sub
pop
ja
pop
popf
insb
movsb
mov
push
lea
and
xor
out
fs
out
sub
pop
mov
jo
pop
icebp
xchg
out
and
repz
cld
adcl
std
jne
ret
sub
cmp
dec
add
adc
add
aas
jle
inc
sbb
mov
out
sbb
mov
mov
iret
push
lods
pop
inc
loope
int
jl
fidivs
dec
adc
jno
aam
mov
xchg
push
iret
cmpsl
cli
out
test
mov
cmp
rcrb
movsl
xchg
adc
adc
adc
nop
jg
mov
sti
cmp
aaa
mov
lret
jnp
lods
inc
dec
push
xor
neg
sbb
pusha
fwait
pop
into
dec
int
imul
push
lcall
xor
sbb
push
rcrl
dec
hlt
iret
dec
in
loopne
fidivrs
sti
clc
lods
xchg
adc
into
outsl
jmp
add
and
fsubrs
sbbl
jb
ss
daa
xor
add
xchg
mov
int
clc
ja
test
lock
push
push
aad
sub
mov
and
movsb
add
sub
mov
ja
dec
and
adc
lret
sub
sub
test
iret
jmp
xor
pusha
fcompl
and
pop
adc
fwait
sbb
xchg
fucomip
jmp
popa
inc
jo
dec
push
push
add
stos
jbe
add
push
xchg
pop
sbb
and
mov
stc
mov
mov
adc
mov
or
aam
mov
js
lds
icebp
jno
xchg
push
imul
lahf
dec
orb
leave
inc
movl
inc
xor
inc
jmp
cwtl
stos
data16
cmc
insb
inc
mov
xchg
sbb
jp
or
sbb
inc
lcall
data16
out
push
xchg
lretw
lea
adcl
jecxz
dec
rcrl
shrb
lret
dec
lcall
outsb
sti
or
mulb
scas
loop
sub
push
out
inc
adc
repnz
inc
int3
dec
incb
jmp
push
add
jne
inc
test
sbb
mov
loopne
push
push
sbb
add
jmp
dec
xchg
or
push
shrl
nop
lods
cmc
loopne
fisttps
cmpsb
repnz
push
xchg
xchg
scas
imul
cmpsl
es
and
and
lock
daa
mov
lahf
fwait
dec
and
les
xchg
jo
das
ss
js
sbb
in
push
mov
je
cmp
call
cli
jbe
jne
js
ja
or
test
xor
gs
sar
in
fsubrl
out
lods
mov
pop
sbb
inc
dec
jns
nop
lahf
mov
dec
inc
pop
sub
scas
sub
cmpsl
loope
inc
mov
push
sbb
scas
fstpl
push
cmpsb
sbbl
jl
test
imul
fidivrs
fbld
xchg
push
sub
and
inc
xor
push
stos
inc
push
mov
in
add
cmp
pop
or
sbbb
inc
fwait
xlat
push
movlps
cmp
aaa
shr
mov
into
and
call
outsb
in
jmp
out
jmp
testb
mov
adc
punpckhdq
cld
repz
js
mov
out
cltd
pop
jno
into
jmp
in
vpsubusb
adc
mov
loopne
jecxz
loope
add
dec
sti
lods
mov
arpl
pop
fisubrl
in
ficompl
or
fldenv
dec
jns
push
xchg
mov
cltd
xchg
inc
push
das
scas
pop
push
aad
fcoms
mov
mov
faddl
ret
push
fadds
decb
xor
pop
mov
mov
aam
xchg
or
pop
sub
dec
pop
pop
inc
notl
movl
push
push
or
mov
and
stc
popa
pop
cmp
inc
pop
scas
pushf
push
fsubrl
sbb
mov
filds
mov
jmp
fwait
sbb
sbb
sti
mov
mov
rcrl
dec
lret
or
jmp
cmc
jge
jge
cmp
outsb
jns
stc
mov
mov
jmp
fbld
inc
adc
inc
mov
int
xor
jle
or
subb
clc
dec
adc
jl
jnp
fistps
pop
shll
jno
fstpl
pop
fsts
mov
scas
scas
lods
bound
lock
enter
imul
in
push
inc
stos
xchg
inc
arpl
sbb
mov
dec
dec
push
mov
test
std
insb
inc
jbe
inc
sub
mov
jb
mov
push
aas
int3
ret
jge
aas
mov
repnz
sub
cmpsb
insl
je
sub
out
add
popa
arpl
loope
aam
lcall
test
push
jne
push
pop
cmpsb
jae
idiv
lods
sub
pop
jmp
imull
sbb
ja
sti
jle
movsb
or
dec
xchg
push
ret
dec
mov
mov
and
cmp
and
inc
or
mov
jo
sbb
test
push
cmpl
mov
repnz
in
insl
in
jo
outsl
cli
in
pop
xchg
cmpsl
fadds
xor
rolb
pop
xchg
in
iret
pusha
data16
cs
jle
or
xchg
subl
jg
sub
scas
push
adc
cmp
push
pop
sahf
mov
test
loop
xor
mov
leave
adc
adc
shr
out
je
stos
addr16
adc
mov
sub
mov
pusha
test
xor
push
test
lock
mov
mov
mov
loopne
dec
pop
fistps
add
outsl
push
push
pop
dec
out
icebp
jno
insb
decl
movsb
and
pushf
loop,pt
stos
push
sbb
icebp
stc
cmp
imul
in
and
ret
cmp
out
mov
mov
inc
repz
lcall
repz
data16
add
push
jnp
daa
sub
cmc
ficomps
cwtl
fs
sub
incl
adcl
repnz
xchg
into
adc
mov
xor
jb
or
sub
xchg
mov
stos
dec
adc
mov
loop
or
insb
aas
add
scas
jns
stc
clc
divl
mov
or
testl
mov
repnz
push
dec
dec
xchg
rorl
outsb
clc
in
imul
leave
shl
pop
adc
pop
xchg
adc
jg
sbb
mov
pop
mov
sub
cwtl
add
mov
push
in
insb
adc
dec
sbb
and
xor
mov
push
mov
sbb
shrb
not
rclb
repnz
cmp
or
pop
lds
out
fneni(8087
push
clc
xor
leave
insb
pop
ljmp
scas
test
jge
inc
mov
xchg
add
mov
jns
xchg
sbb
iret
test
stc
adc
pop
pop
iret
scas
xor
sbb
cmp
adc
or
pop
mov
and
pop
int3
addr16
loop
or
scas
sub
outsb
or
fisubrs
mov
and
pop
or
rcrl
cmc
loope
lcall
js
jae
ljmp
ret
out
jne
jo
int
addr16
adc
pop
xchg
ljmp
aas
pop
ret
lahf
pop
and
push
jo
lods
call
es
mov
xchg
repnz
mov
xlat
std
push
lock
jge
lahf
scas
cmpsb
fnstenv
cmp
jnp
mov
and
mov
xchg
scas
add
stos
lret
dec
xchg
sub
out
and
or
loope
inc
mov
or
fistl
std
shrl
mov
jge
mov
jnp
loope
dec
pop
xlat
lcall
mov
clc
lock
mov
adc
aam
pop
mov
loop
out
pop
scas
xchg
xchg
in
rcrl
and
popa
mov
gs
addb
not
dec
cmp
xchg
dec
dec
aad
sbb
pusha
cmc
test
aas
dec
xor
arpl
loopne
mov
and
inc
cmpsl
lahf
loop
vhsubps
xchg
push
out
or
pusha
rorb
push
jge
inc
gs
push
push
out
jl
pop
pusha
lock
fisubrs
dec
es
jmp
int
flds
mov
stos
outsb
mov
sub
mov
imul
or
fs
push
mov
mov
int3
xchg
sbb
ds
cmp
ljmp
mov
mov
cmp
jb
jmp
sub
gs
add
bound
pusha
inc
cmp
inc
sti
ret
mov
jnp
pop
fistl
sbb
sbb
pop
xchg
mov
in
or
inc
aad
adc
loopne
enter
xor
fxch
cmp
dec
jmp
mov
arpl
pusha
ja
push
lret
xlat
add
cmp
cld
adc
sub
rcrl
in
sbb
adc
dec
jbe
inc
mov
les
xchg
xchg
inc
or
or
sbb
mov
cmp
sbb
inc
loop
mov
and
imul
sbb
addr16
stos
adc
ljmp
pop
mov
xchg
fidivl
mov
pop
movsl
popf
sub
mov
mov
movsb
lcall
mov
nop
fcoms
cmp
repnz
test
adc
sub
lcall
dec
bound
movl
inc
sbb
dec
aas
mov
insl
sub
mov
int
aad
mov
cmc
cltd
sbb
pop
add
scas
jle
sbb
jle
shlb
int
jns
movsl
lods
in
mov
jno
or
inc
or
sti
xlat
jns
les
pop
jns
js
jae
mov
in
sub
mov
dec
xor
dec
cmpsb
mov
pop
push
es
sub
imul
push
and
popf
fsubr
cmc
cs
aad
pop
lods
addb
aam
fs
subb
dec
push
jno
jge
mov
mov
iret
dec
or
mov
popa
push
or
in
xstore-rng
cmpsl
adcb
repz
pop
or
rol
loop
jb
repz
push
rcr
jne
ds
dec
into
rorb
inc
mov
leave
mov
inc
ret
inc
jb
jge
aas
dec
ds
dec
xchg
fwait
sbb
ret
lret
pop
push
rcll
xchg
adc
mov
andl
and
popa
push
std
hlt
outsb
test
fsubrl
inc
int
test
sub
push
push
pop
inc
inc
mov
add
mov
cmp
jb
and
pusha
pusha
in
ja
jb
pop
lret
pop
jns
sbb
jmp
fidivl
push
les
add
fs
add
jg
or
fcoms
adc
pop
add
pop
sbb
push
push
iret
call
sub
mov
out
and
pusha
shll
fwait
rsqrtps
fstpl
popa
adc
add
sbb
into
ljmp
testb
hlt
inc
test
push
stc
mov
pop
xchg
add
pop
hlt
int3
push
imul
mov
rcr
leave
mov
aad
add
insl
in
jo
outsl
xchg
jbe
xor
xlat
pushl
push
mov
shrb
insb
shl
mov
lock
data16
cwtl
fsts
cmpb
jae
sbb
fisubrs
ret
out
dec
mov
xchg
push
fadd
mov
cwtl
iret
xchg
adc
int3
mov
lods
test
ret
push
ud2
mov
ror
dec
jge
xlat
lock
mov
mov
in
sub
es
sbb
mov
mov
cltd
mov
mov
push
lret
gs
repz
sbb
lock
test
insb
cmp
test
jle
gs
pusha
fistps
dec
rcll
cwtl
xor
aas
mov
jecxz
pop
cmp
xor
scas
cs
shr
call
gs
inc
xorb
stc
adc
lret
int
pop
clc
das
pop
pop
xlat
popa
mov
in
add
cmp
mov
jp
mov
cwtl
int
sub
sbb
and
mov
cs
fwait
xchg
daa
cmpsl
es
ret
push
arpl
and
and
subb
out
jp
aam
xor
ja
dec
dec
jns
cmpsl
push
xchg
repz
mov
pop
dec
inc
push
adc
inc
push
stos
xor
pop
and
jae
out
add
inc
nop
or
sub
push
or
jl
mov
jl
js
in
mov
or
or
and
jecxz
xor
loopne
and
mov
push
mov
sbb
ja
ret
sub
mov
push
fidivrl
xor
gs
dec
outsl
ljmp
cmp
or
inc
xchg
mov
mov
pop
mov
adc
adc
scas
inc
mov
je
notb
jno
pop
sar
sbb
loopne
cld
loop
xchg
adc
into
mov
xchg
inc
xchg
outsb
sub
jmp
mov
add
ftst
inc
aad
mov
popf
jecxz
mov
rclb
or
and
jne
icebp
or
sbb
adc
popf
mov
lds
aas
push
lock
sub
ror
movb
loop
les
fcmovnu
jecxz
push
cmp
ljmp
sti
or
pop
aas
xor
lods
das
jg
cli
ds
sub
in
mov
aas
into
mov
popf
mov
lret
push
adc
lcall
xlat
loope
pcmpgtb
sub
xor
and
cmp
shr
push
ja
add
iret
mov
addr16
add
sahf
push
mov
and
jecxz
cld
scas
cmc
nop
pushf
adc
sahf
sbb
popf
mov
fcmovbe
shll
subl
inc
xchg
addl
jl
jmp
add
mov
add
aad
mov
xlat
cmc
cmpsb
push
inc
stos
jo
or
aad
jae
ret
ret
xchg
out
jecxz
lods
xor
push
negl
cmpsl
lcall
aad
andb
lds
adcl
out
jb
xchg
or
jl
scas
iret
test
dec
inc
insb
lods
test
daa
jg
movsl
inc
out
xor
mov
outsb
mov
insl
jle,pn
shll
lcall
inc
xchg
adc
xor
xchg
mov
mov
mov
push
inc
pop
mov
in
add
xor
push
fadds
scas
int
loopne
xchg
in
sub
sub
sbb
shll
andb
xchg
test
rcll
js
xchg
push
psubusw
test
lods
xchg
jne
adc
inc
add
call
lret
and
xchg
lds
xor
add
jns
add
cmpl
pcmpeqd
outsl
movsl
mov
inc
fs
iret
mov
add
lahf
or
jg
xchg
mov
std
push
outsb
setbe
stos
cmpsl
out
xchg
jl
pop
insl
scas
jle
imul
dec
ficomps
int
pop
stc
arpl
pop
scas
inc
aad
js
push
es
dec
loopne
and
ret
pushf
jo
pop
stos
add
cltd
call
pop
xchg
adc
shrb
movb
inc
lods
mov
in
cmpsb
xor
fwait
xchg
es
test
dec
sbb
leave
dec
cld
jo
popa
hlt
jbe
inc
xchg
mov
jnp
mov
xor
negb
xchg
push
lcall
adc
das
jle
je
stos
sub
lods
sub
in
loop
gs
cld
inc
mov
and
add
jne
or
cld
fdiv
test
call
icebp
int
je
mov
jp
ret
scas
xchg
xchg
andb
in
jl
xchg
mov
and
std
push
mov
jle
popa
ss
xor
outsb
movsl
inc
mov
cmp
mov
stc
jns
push
dec
mov
lock
jno
and
pop
mov
std
cmc
jge
arpl
mov
fdivl
and
inc
rcrl
mov
cld
mov
scas
sub
mov
mov
fcoml
push
int3
push
mov
int
scas
dec
lret
jno
pop
testl
mov
je
lret
dec
pop
jae
stos
add
xchg
adc
ret
cmp
mov
sti
stos
in
popf
sub
daa
add
adc
js
fsubs
shll
movsl
and
hlt
add
mov
roll
rcl
std
mov
fldcw
je
mov
mov
outsb
or
shrl
jnp,pt
mov
sub
or
mov
andb
insl
push
mov
cltd
rcrl
std
ficomps
aam
pop
daa
in
int
push
dec
xchg
rcll
push
test
mov
jmp
flds
push
and
sub
lahf
dec
aas
ds
xchg
xor
ret
insl
sub
mov
and
out
inc
loope
cmp
mov
adc
pop
pop
andb
rcrl
ds
mov
and
xchg
adc
outsl
ja
push
test
sub
xchg
jae
mov
sub
in
mov
and
jg
dec
lods
sub
rcrb
sti
shr
sub
movsl
and
add
aaa
pop
or
les
mov
add
jbe
xor
inc
add
jne
inc
pop
out
outsb
xchg
lods
aad
or
or
sti
inc
mov
fwait
pop
cmpl
jmp
pop
sbb
xor
cli
jo
push
fcmovbe
int
push
push
rcll
sub
cmpsb
mov
dec
mov
in
mov
adc
aaa
sahf
je
and
xchg
gs
xor
popf
inc
and
jp
cmp
mov
sub
sub
xor
popl
out
rol
cwtl
mov
xor
dec
or
loopne
cmc
loop
inc
jns
xor
inc
pusha
shl
sarb
pop
bound
fwait
sbb
pop
pop
jae
sbb
adc
push
test
mulb
fs
das
mov
ljmp
jp
adc
pop
xchg
rolb
and
jo
mov
sub
icebp
cmp
clc
repz
xchg
jbe
stos
cmp
es
jb
pop
test
push
inc
das
adc
leave
mov
jns
jns
stc
lahf
xchg
or
clc
fcoms
mov
out
mov
in
stos
aaa
pop
pop
mov
mov
mov
mov
aam
rcll
arpl
pop
add
sub
cmpsl
mov
add
cmp
mov
loope
adc
mov
sti
out
push
mov
das
test
inc
lret
in
loope
out
xor
xor
and
loopne
in
out
xor
test
sbb
sub
sbbb
mov
adc
pop
loope
jb
sbb
dec
sbb
test
adc
stos
jg
in
lods
sub
inc
loope
test
lods
push
mov
pop
adc
push
jno
xor
inc
jge
mov
pop
call
sub
lret
xchg
ret
jbe
call
cmc
test
pop
mov
push
inc
das
mov
or
sub
notl
add
push
mov
pop
push
mov
fcomps
dec
jecxz
orb
scas
inc
fstpt
xchg
aad
jmp
jb
movsb
ret
movsl
jb
pop
jae
int
outsb
in
add
cwtl
push
pop
sbb
sbb
fidivrs
or
les
ljmp
in
cmp
mov
pop
or
pop
push
mov
out
lret
sbb
xor
mov
js
sub
jg
xchg
cmp
sbb
or
pop
mov
sub
sbb
xchg
shrb
dec
jmp
imul
cmpsb
in
stc
loopne
xchg
cli
jns
sbb
sbb
movsb
pop
clc
xchg
jnp
andl
jg
jns
sub
jne
test
loop
push
cwtl
in
movsb
add
ret
lods
fdivs
shl
les
jns
fildl
push
xchg
sbb
pop
push
dec
mov
out
iret
cltd
insb
fcoms
inc
outsl
xchg
inc
sbb
or
lret
scas
add
add
sarl
scas
pop
sbb
and
sysenter
and
ds
fsubl
lcall
mov
push
je
clc
imull
cli
xor
ds
cmpsl
cmp
adc
and
popf
adc
loopne
fbld
xor
jge
jg
add
mov
hlt
fistps
jbe
cltd
jno
push
dec
adc
dec
xlat
push
into
xchg
push
leave
sbb
jno
loop
pop
mov
sub
loop
es
or
add
mov
pushf
cs
cmp
mov
sahf
lods
sti
jp
jne
mov
leave
mov
insb
and
add
xchg
pushf
clc
sub
dec
pop
and
fcmovnbe
cmc
les
je
mov
fdivrs
jno
or
mov
pop
fldenv
cmp
or
pop
aas
xor
jge
dec
mov
outsb
pop
pop
sti
addr16
movsb
cmp
sbb
aas
add
in
cmp
fmulp
xor
inc
les
fnstsw
xor
bound
cmp
inc
pop
mov
enter
add
mov
cmpb
cwtl
mov
sub
les
or
xchg
xchg
add
add
and
testl
sub
push
loop
int
push
imul
ss
pop
arpl
repnz
cmpsl
in
in
jecxz
aaa
adc
rorl
fnsave
imul
pop
rolb
mov
dec
cmp
add
fisubrl
mov
sti
xchg
dec
ret
test
sbb
inc
pop
adc
jns
fsubr
cmp
sbb
mov
ds
xlat
sbb
sub
shrl
cwtl
mov
iret
sub
xor
aam
mov
cld
sub
test
test
jo
mov
pusha
fwait
jmp
in
sub
adc
int
jo
mov
ljmp
adc
push
lds
inc
cs
insl
or
in
cmp
dec
mov
popa
xchg
mov
sub
pushf
push
std
lret
test
sahf
inc
inc
lds
push
setbe
xor
sbb
imul
mov
lds
shlb
jle
and
test
mov
testl
inc
jnp
push
add
dec
and
mov
and
adcb
jge
fnsave
fisttpll
repz
cmc
test
xchg
loop
nop
scas
sbbl
and
ss
sbb
add
mov
mov
pop
mov
dec
dec
cmp
xor
scas
ss
rorb
test
mov
sub
out
mov
adc
cwtl
mov
fiadds
mov
cmp
ja
out
cmp
lods
loopne
pop
xor
jb
lock
ret
pusha
dec
jp
loope
lock
mov
and
cmp
test
sub
mov
xchg
jmp
add
stos
xchg
pop
scas
inc
and
pop
xchg
roll
xor
add
push
lds
out
dec
data16
add
in
bnd
insb
jge
loopne
stos
sub
xchg
xchg
shl
jns
out
jne
rcl
stos
bound
mov
xchg
stos
sub
stos
jne
xor
sbb
lret
dec
lds
fst
aas
mov
out
aam
inc
cld
jo
push
test
mov
push
lahf
cmp
dec
fisubrs
rcr
xlat
adc
dec
rolb
std
aad
push
or
and
into
and
pushf
cmpsl
rclb
imul
jbe
std
mov
aaa
bswap
mov
or
jl
lods
notb
adc
inc
mov
loop
ucomiss
fcmovb
inc
add
lea
aaa
scas
or
mov
mov
movsb
ret
inc
fistl
rcrl
fidivs
lret
hlt
dec
fistl
mov
aad
lds
adc
xchg
jae,pt
ror
pop
call
xlat
mov
stos
out
lods
sahf
sbb
sub
ja
jp
and
outsl
jae
or
add
mov
or
addr16
cli
mov
jecxz
imulb
popa
mov
push
pop
outsb
xchg
add
fildl
or
jbe
xchg
xchg
popa
sbb
adc
lock
xchg
loope
xor
outsb
movsl
pop
js
xlat
adc
out
push
push
rcll
jp
cmp
dec
into
or
mov
sbb
mov
cmp
cli
std
popf
xchg
xor
in
mov
inc
aaa
in
ret
sbb
cmp
sub
mov
xor
in
pop
adc
dec
or
xchg
movsb
into
mov
inc
sti
rclb
arpl
sbb
xchg
mov
movhps
mov
inc
mov
inc
cmpsl
sub
xor
ljmp
jge,pn
insb
sbb
lcall
int3
pop
or
mov
or
lock
sub
jge
inc
js
push
pusha
adc
cltd
js
or
push
lret
and
xorb
movsl
lods
mov
ret
or
aas
dec
hlt
jns
add
pushf
mov
or
jg,pt
pop
xor
sbb
shrl
sub
pop
dec
test
pop
fisubrl
addl
test
andl
cmc
inc
sahf
mov
ss
arpl
rep
mov
mov
xor
jo
mov
jmp
sbb
push
jo
jl
icebp
idivb
jns
jae
cmpsb
shlb
stc
popf
mov
fstpl
bound
rcr
call
ss
push
sbbl
lods
les
addr16
dec
mov
mov
mov
in
aad
jp
sti
xchg
adc
int
push
xor
cmc
pushf
in
stos
sub
pop
inc
arpl
add
sti
gs
je
push
aaa
testb
push
cmp
push
jne
jl
pop
xor
mov
ljmp
jne
je
inc
das
call
or
mov
push
sarl
jns
mov
fdiv
mov
out
mov
dec
mov
push
cli
movsb
pop
loopne
es
int
xorl
add
mull
inc
pop
cld
iret
xor
jbe
sbb
jp
call
ss
movsb
xchg
fistpll
dec
inc
xor
in
stos
std
cmp
xorl
fwait
int
sbb
mov
xchg
and
popf
sbb
cld
xchg
les
pop
xor
cmpsb
dec
mov
sub
xor
test
mov
xor
adc
in
mulb
xchg
dec
lods
into
mov
scas
sub
xor
sub
aaa
adc
jl
fidivs
idivl
inc
in
push
lret
dec
repnz
out
cmp
mov
pusha
aad
call
add
scas
sbb
mov
cld
xchg
pop
pop
mov
stc
mov
add
cmp
pop
jno
iret
addr16
fists
pop
stos
xchg
and
push
jmp
adc
outsb
mov
mov
mov
es
mov
push
popf
push
sbb
ja
add
fistps
cli
ss
jne
lods
in
mov
cmp
out
mov
hlt
or
pusha
jae
mov
mov
pop
pop
icebp
push
push
inc
lds
pop
enter
add
or
cmpsb
cmp
clc
dec
and
idiv
adc
shr
inc
out
pop
xchg
aad
mov
push
cmpsb
in
ds
lods
loope
push
sub
cmp
pop
inc
adc
fcmovnbe
adc
mul
lret
inc
out
testb
fwait
jp
push
es
xor
xchg
dec
mov
mov
jae
dec
mov
mov
xchg
cltd
enter
xlat
cmp
js
aas
mov
repnz
out
push
push
cwtl
push
xor
in
jp
out
sub
scas
mov
inc
in
lea
mov
xchg
add
jg
xor
sbb
mov
outsb
pop
fisubrs
jmp
push
daa
mov
mov
adc
xor
ja
push
clc
push
mov
xor
jne
icebp
lods
loopne
pop
xor
ret
das
scas
cs
mov
les
pop
push
or
divl
les
lahf
mov
cmp
ret
out
mov
push
adc
cmovs
sti
andl
push
jl
mov
jno
mov
sub
pop
fcmovne
icebp
jbe
jns
add
cld
bound
xlat
adc
pop
cmp
sbb
hlt
mov
xor
out
test
divb
sbb
ret
andb
movsb
ret
cld
mov
and
mov
sbb
inc
inc
xchg
pop
xchg
jg
xlat
scas
sub
inc
xchg
loope
dec
sbb
fwait
adc
push
xchg
js
xchg
lret
subb
iret
mov
sar
pop
and
sub
mov
jns
mov
and
mov
enter
mov
shrb
cmp
cltd
pushf
or
push
lods
cli
adc
mov
mov
add
rcl
cmp
jo
jae
sbb
stos
daa
adc
rcll
jg
adc
nop
pop
mov
enter
pop
push
rclb
test
shr
xchg
adc
fs
or
dec
xor
in
clc
fistps
jg
es
loope
and
rcr
testb
push
aaa
cmp
sub
jp
loopne
hlt
mov
je
outsl
mov
sub
or
push
test
adc
loopne
cmp
test
leave
mov
jo
sbb
aaa
jle
call
xchg
incb
scas
jne
shrl
cmp
ret
inc
cmp
outsl
fadds
loopne
iret
mov
xor
shrb
inc
push
out
pop
outsb
cmp
das
cmp
ss
sbb
in
and
mov
pop
push
inc
push
push
daa
or
jp
loope
cltd
ret
pop
cmp
cld
imul
loope
shlb
and
jl
mov
or
inc
cmp
xchg
mov
aaa
push
int
sbb
sub
sahf
sub
dec
sbb
test
mov
nop
jnp
cmp
xchg
popf
jne
push
lock
fwait
mov
push
push
pop
or
push
je
sbb
divb
and
repz
add
mov
or
push
push
add
xchg
xchg
insl
outsl
inc
xor
test
in
arpl
pop
and
pop
mov
not
push
add
dec
into
xchg
cmc
add
loope
ja
push
in
add
sbb
aas
lret
mov
fisubl
pusha
mov
ffree
inc
rorl
mov
cmp
mov
xor
lds
xor
aas
movsb
mov
and
lret
dec
into
aad
call
into
add
iret
enter
ret
push
ror
sbb
inc
fsts
pop
xlat
sub
dec
pop
insb
xchg
push
outsb
sbb
sarl
fldt
pop
cld
data16
add
jo
arpl
rcll
adc
out
mov
cmpsl
ss
push
cmp
xchg
icebp
cmp
push
call
cmp
out
jp
imul
cmc
adc
xchg
pushf
jge
or
dec
idivb
jbe
lock
pop
cli
ret
dec
push
faddl
xchg
out
repnz
out
aad
imul
add
fs
fcmovu
in
rcll
lock
cmpl
dec
into
out
mov
pop
sbb
into
in
pop
out
out
dec
add
cmc
shll
mov
cwtl
subb
cmp
mov
mov
xor
fidivs
in
pop
shrb
call
xchg
mov
jge
inc
cs
enter
std
dec
inc
jne
fisttpl
adc
stc
mov
mov
cwtl
inc
xchg
push
lcall
iret
adc
insb
and
push
popa
cmp
lods
in
in
insl
jmp
push
cmp
movsb
dec
leave
fists
xchg
hlt
inc
inc
push
enter
push
push
mov
mov
mov
mov
repz
mov
stos
call
cwtl
addr16
clc
jae
pushf
xchg
sbb
xor
push
ret
dec
push
cmp
fcmovb
jg
das
jnp
loope
cmp
dec
xchg
dec
sbb
int
mov
sub
loopne
jl
push
icebp
or
mov
insl
adcb
push
rorl
ss
sbb
insl
cs
inc
push
jmp
adc
add
mov
and
fmull
sbb
rclb
int3
dec
bound
push
push
addl
ror
lret
dec
adc
xchg
scas
xor
pushf
adc
mov
sub
adc
lcall
cmp
out
add
mov
and
add
sub
pop
fdivs
jbe
jle
movsb
in
or
jle
add
call
popa
jnp
add
jge
mov
cmp
sar
div
xchg
leave
enter
loop
xchg
xchg
or
or
insl
xchg
stos
mov
cmp
fistps
and
iret
leave
mov
cmpsl
inc
jecxz
jp
mov
dec
inc
leave
jmp
xor
adc
mov
outsl
ss
stc
in
push
aad
lock
xor
movsl
movsb
ror
aam
sub
jns
lods
ljmp
mov
mov
ss
dec
ja
pop
rol
cmp
mov
loope
int3
aad
pop
pop
xchg
push
and
lret
fisubl
outsl
push
sub
inc
leave
iret
xor
cmpsl
sub
xchg
andb
pop
outsl
stos
shrl
mov
jo
inc
adc
cltd
sbb
fldl
mov
pop
adc
pushf
sub
pop
inc
pop
roll
sub
mov
lock
xor
mov
cmp
pop
rolb
call
and
into
sti
push
divl
int3
xchg
pop
rcrb
dec
jl
cli
jno,pn
pop
ja
outsb
test
xchg
cmpsl
push
bound
push
or
jg
lock
pop
sbb
fucomip
cmp
movsb
clc
sub
pop
mov
cmpl
in
jmp
decl
mov
pop
std
jl
add
jl
outsb
arpl
and
lret
pusha
loopne
ficoms
int
int3
xor
mov
mulb
cmpsb
addr16
xor
inc
rolb
jle
dec
outsl
dec
fnstsw
or
push
add
into
cmp
dec
dec
inc
xchg
jbe
fwait
xchg
jmp
and
sub
test
int
lock
hlt
jg
cltd
int
add
xchg
adc
insb
cwtl
mov
popa
cmc
gs
stos
das
scas
sub
push
add
sub
gs
nop
add
cli
popa
mov
ret
pop
ret
push
add
mov
std
jl
ja
or
inc
lahf
xor
scas
in
jecxz
sub
shrl
sub
cmpsb
sbb
add
inc
xor
adc
push
aas
push
cmp
popa
loope
xchg
push
sbb
or
xchg
jb
pop
lea
movsl
push
daa
inc
ljmp
jecxz
das
add
clc
pusha
pop
stos
and
clc
addr16
sbb
xchg
lcall
mov
mov
in
clc
cmp
and
std
cwtl
in
xchg
mov
out
pop
sub
or
add
aaa
pop
xchg
inc
aaa
jne
lock
ret
inc
cmpsb
mov
mov
aad
jbe
in
pushf
js
out
pop
aad
fdiv
pusha
insb
fcmovbe
add
fs
xchg
lods
adc
fisubrs
jnp
xchg
rolb
jle
pop
out
les
inc
pop
xlat
je
nop
cmpsb
and
fdivl
cmp
xor
jns
push
rol
mov
mov
xor
mov
les
shl
movsb
scas
repz
and
leave
pushf
stc
add
jmp
pop
inc
cmp
mov
or
pusha
in
lods
push
and
mov
xor
or
xlat
test
adc
or
sbbl
or
mov
test
js
xchg
push
xchg
call
mov
cmc
js
sbb
sbb
jbe
jns
lods
rep
jp
imul
xor
mov
mov
into
dec
std
mov
mov
sbbb
push
xorb
jbe
fcoml
ja
cmp
mov
fisubrs
push
dec
and
xor
je
repz
loopne
push
ljmp
call
adc
fbld
cmpsb
and
fidivrs
mov
lods
jge
xor
stc
jo
sub
jns
js
xor
and
and
adc
push
adc
mov
xchg
inc
mov
fwait
sub
add
fistpl
fs
inc
mov
pop
xlat
push
ficoml
rorl
sub
cwtl
push
jmp
ret
add
or
repz
in
jno
push
mov
arpl
iret
cmp
fmulp
sbb
insl
sarl
sub
xchg
and
and
and
fmuls
push
ljmp
push
subl
popa
int3
int3
dec
cmp
jl
xchg
aas
mull
icebp
fwait
sub
and
sub
adc
cld
jmp
adc
in
aas
push
xor
inc
pop
mov
push
test
addr16
adc
pop
nop
inc
adc
imul
int
jp
ds
sub
push
insb
clc
iret
out
mov
fmulp
std
repz
pushw
lret
idivl
mov
xchg
inc
sbb
mov
loope
sbbb
stc
enter
shlb
xchg
mov
dec
add
mov
pop
jle
sub
ljmp
or
pushw
fildl
rolb
mov
mov
mov
scas
divl
popf
pushf
mov
imul
pushf
jbe
jo
jbe
cmp
adc
outsl
pop
imul
inc
ljmp
dec
pop
lods
fld
jg
addl
pop
cli
test
leave
sarb
xchg
sti
dec
cmc
sub
pushf
repnz
insb
outsb
adc
outsl
add
push
xlat
push
pop
dec
cmp
jno
sbb
popa
scas
inc
in
mov
mov
pop
xor
mov
pop
pop
addl
and
sbb
js
movsl
lret
mov
jne
mov
and
adc
pop
cmpsb
mov
ds
sbb
add
lds
aaa
jecxz
fidivs
push
and
ret
push
ficompl
sarb
stos
push
and
mov
jnp
jno
insb
add
xor
pop
in
jg
daa
lcall
test
mov
mov
clc
pop
faddp
inc
push
xor
mov
sbb
shr
test
inc
inc
int
dec
scas
mov
lret
movl
cli
jle
lods
jo
inc
enter
mov
adc
mov
adc
icebp
ffree
xlat
sarl
call
sub
xor
push
xchg
enter
ret
xchg
aas
jp
jbe
popf
sub
inc
dec
jmp
into
sub
mov
xor
and
pop
pop
pop
lahf
fildl
icebp
mov
mov
xor
dec
cmp
mov
push
pop
dec
sbb
fnstsw
iret
add
in
dec
lea
ret
aas
leave
fidivs
outsb
xor
xchg
xchg
shr
into
push
scas
aaa
iret
pop
mov
lret
lcall
sbb
pushf
adc
cmpsl
into
into
ljmp
adc
data16
cmp
xchg
out
jmp
mov
cmpsb
mov
lahf
jnp
ret
cld
xchg
fistpll
repnz
pop
cmp
sti
jge
adc
outsl
push
xor
add
into
scas
push
test
enter
adcl
inc
xor
mov
stc
or
loope
call
cmp
fistpll
jo
in
js
mov
adc
inc
jb
loop
in
xor
scas
sub
rep
sub
pop
sti
movsl
jge
lret
xor
mov
aas
dec
fdivs
push
je
enter
stos
xchg
sbb
leave
xor
dec
push
add
cmc
dec
lods
lahf
inc
pop
out
or
push
mov
pop
xlat
mov
jg
mov
aad
fwait
je
scas
stc
adc
ficoml
rcr
lret
mov
or
stos
mov
jb
pop
or
jae
dec
push
aas
lret
sbb
push
sbb
stc
xchg
xor
aaa
mov
cmp
and
sbb
divl
add
push
inc
sahf
jnp
xor
loop
jo
into
add
sub
mov
push
sub
mov
std
pop
paddusb
jge
sub
mov
addb
cmpps
sti
cmpsl
xchg
cmpsb
xchg
jmp
movsl
fsubl
jb
repnz
pop
stc
fmul
mov
repnz
push
in
push
mov
shlb
js
cmp
cmpsb
popa
imul
das
xor
mov
adc
jp
lea
or
add
fcmovb
mov
xorl
pop
fistpl
pop
in
fdiv
out
add
jge
lods
ljmp
jae
iret
dec
into
sub
imull
mov
mov
cmp
cmp
rcll
aas
into
and
inc
orb
je
mov
std
mov
jnp
loope
inc
mov
bound
xor
scas
or
fsubl
aaa
test
orl
mov
lret
sbb
enter
lcall
aad
jne
mov
sbb
mov
add
jle
loope
hlt
das
jnp
iret
ljmp
and
stos
xor
push
mov
sub
jp
pop
aas
jecxz
pop
aam
shll
ja
pop
jne
push
in
push
idivb
mov
scas
mov
test
xchg
inc
add
xor
xchg
iret
jp
lea
jle
sub
jne
fisubrl
jb
jb
pop
fstpt
lcall
push
stos
jae
sub
int3
movl
nop
jmp
xor
mov
in
ljmp
pushf
out
cmp
jge
in
out
shl
pushf
mov
fistps
lret
xchg
xor
dec
jbe
add
push
or
xor
out
repz
rcrl
in
lret
mov
hlt
mov
leave
dec
les
xor
push
pop
sti
mov
jbe
fcoml
ja
mov
dec
into
sbb
or
push
into
in
aam
and
in
enter
std
jmp
ljmp
jbe
pop
mul
stc
lds
push
mov
outsl
cli
mov
clc
das
iret
mov
enter
sub
jo
fnstcw
xlat
loop
and
lahf
insl
sub
clc
jno
push
add
call
insb
cmp
cmp
lea
sub
pop
fcomps
push
adc
push
stos
push
das
lret
push
iret
dec
testb
xchg
daa
ss
push
shl
call
lock
bound
cmpb
ja
in
jge
or
mov
adc
imul
push
mov
movsl
pusha
das
scas
bound
in
int3
dec
mov
dec
popa
add
mov
jl
lahf
out
add
xchg
movsb
pop
xchg
loop
sbb
shl
pop
jbe
xor
stc
fadd
and
out
xchg
adc
stos
outsb
jb
dec
nop
add
ret
cmp
stos
pop
popa
mov
and
pusha
pop
sti
dec
popa
cmp
pop
inc
fstpl
xor
jp
es
int3
cld
and
jne
je
xor
lret
xlat
repnz
loopne
sbb
mov
clc
mov
jbe
inc
inc
pop
inc
mov
mov
jno
mov
fists
pop
cmpsl
dec
sbb
push
jo
xchg
pop
push
mov
fsubl
cmpsb
mov
xor
stos
cmpsl
das
or
add
pusha
subb
test
jl
sahf
push
and
fbstp
test
sbb
inc
mov
pushf
push
rolb
mov
pop
xor
aas
out
sub
add
pop
xchg
xchg
pop
enter
adcl
jnp
sbb
test
sub
pop
jne
sbb
rcrl
popa
mov
jb
inc
jecxz
xchg
adc
dec
arpl
sub
sub
sub
jg
ds
in
cwtl
ret
std
adc
jb
in
je
clc
or
sbb
outsb
fimuls
int
and
std
xrelease
test
stos
jge
nop
cmp
dec
inc
xchg
shrb
and
lcall
jb
sbb
xor
jle
loope
adc
and
into
cmp
stc
add
push
rcrl
xchg
incl
out
lods
bound
cmp
in
fucomp
aaa
sbb
call
adc
dec
fistps
shrl
int
cmp
add
cli
cmp
popa
pop
divb
bound
push
add
dec
jns
aas
xor
dec
leave
dec
cld
mov
cmp
pop
ja
test
out
and
test
sub
and
in
test
pop
lds
sub
inc
and
mov
xchg
insb
adc
imul
xchg
mov
insb
out
xlat
mov
mov
in
push
or
fs
aas
or
pop
jp
sbb
jae
add
pop
test
hlt
mov
iret
popf
pop
mov
ret
jo
mov
test
cmp
bound
jmp
mov
pop
or
lret
rclb
adc
shll
and
lods
sub
push
push
sub
add
das
movsb
jecxz
inc
pop
sahf
mov
dec
dec
loope
inc
mov
iret
adc
stc
or
sub
mov
mov
call
cwtl
push
rclb
dec
loopne
or
dec
sub
adc
addr16
ja
mov
fwait
xchg
out
std
mov
vmovaps
lods
imul
mov
dec
repz
scas
sbb
in
cld
mov
in
pop
imul
addl
imul
jge
jl
pop
mov
fnstenv
jne
and
push
aam
mov
dec
dec
jl
jge
dec
lea
out
mov
imul
push
int3
xorl
lods
popf
xchg
inc
fwait
xlat
mov
sahf
in
adc
push
cmp
fwait
stos
push
pop
rolb
jg
ss
loopne
cmp
add
push
xor
jo
shl
inc
lods
bound
lcall
add
lock
mov
lahf
cmp
pop
cmp
notl
or
add
dec
rorb
out
int
lods
pop
sbb
cmp
xchg
xor
mov
mov
imull
mov
push
fistpl
test
jle
xchg
push
test
dec
ljmp
adc
inc
push
sub
movsl
out
sar
repnz
je
in
shrb
out
mov
mov
and
bound
xor
cld
ss
scas
jge
roll
inc
lea
mov
cmc
je
mov
xchg
nop
or
notl
cmpsb
or
xchg
inc
je
mov
mov
outsl
popa
stos
movsl
arpl
test
pusha
fmull
mov
fcoms
dec
sbb
fstps
mov
pop
adc
call
pop
jb
jno
mov
in
add
inc
xchg
rol
andb
inc
addl
sbb
repnz
inc
mov
bound
pusha
or
xchg
sti
sarb
imul
cwtl
push
push
adc
jmp
into
test
stos
and
rcrb
cmp
fwait
lret
sbb
adc
sub
adc
adc
jle
mov
stos
leave
pop
jge
jl
add
out
jp
mov
adc
orb
test
cmp
jb
mov
je
sub
jbe
mov
sub
dec
ss
xor
rcll
into
test
enter
dec
sbb
xchg
aaa
sbb
stos
inc
loope
push
inc
scas
mov
sub
jo
dec
xchg
inc
pop
mov
push
loop
sub
mov
cmp
add
add
sbb
sub
sbb
pusha
test
sbb
scas
negl
mov
inc
add
mov
jle
lea
push
pushf
shr
xor
ds
xor
lds
mov
mov
test
add
xorb
push
mov
adc
cli
int
cwtl
lock
daa
mov
test
and
cmp
cltd
cmovnp
mov
sti
xor
mov
cld
shl
sbb
and
jge
fprem
and
loopne
sbb
pop
leave
addl
pusha
add
clc
lahf
xchg
imul
xchg
nop
or
iret
lea
xor
popl
fchs
add
push
mov
in
add
fucomi
flds
int
mov
fiadds
into
dec
push
dec
add
mov
push
in
sarl
pop
into
in
push
popa
lock
test
mov
or
push
out
out
sarl
mov
arpl
push
in
cwtl
out
fwait
mov
jno
aas
mov
cmp
clc
mov
mov
test
out
test
adc
pavgb
cmp
out
int3
inc
jl
pop
frstor
jns
cwtl
jg
inc
lds
movsb
lret
mov
mov
imul
xchg
adc
test
int3
out
xor
mov
bound
int
xchg
hlt
ja
jle
pop
and
popa
test
test
hlt
add
jbe
and
add
mov
and
jbe
and
mov
cmp
and
in
lods
adc
and
dec
adc
cltd
xor
rcl
cmp
pop
xor
adc
pop
push
fsubrs
aad
in
js
fdivr
or
push
xsha256
cmpsb
aad
or
imulb
rcll
ret
insb
fistps
mov
idivb
mov
std
pop
les
mov
adc
sub
cmp
mov
movsl
pop
enter
push
rcll
fcomps
movsl
xor
push
jle
cli
mov
dec
jge
inc
jl
imulb
mov
pushf
sbb
ja
mov
sub
xlat
jno
jge
xchg
and
popa
fdiv
mov
cmp
cmc
sbbl
and
fbld
je
xadd
adc
mov
and
xor
push
sbb
imul
add
jne
inc
xor
inc
adc
or
testl
pop
ds
cmp
cmp
mov
and
push
out
in
dec
mov
xlat
lret
fiadds
xor
inc
movsl
in
xchg
jle
xor
xor
mov
es
cmp
test
fs
xor
adc
les
subl
imul
fwait
mov
or
push
shll
in
orb
push
add
mov
dec
je
mov
sbb
cmp
es
xchg
shll
pushf
sbb
loop
lcall
push
stos
pop
fldl
adc
jmp
push
adc
iret
mov
add
scas
andb
sub
int3
daa
pop
adc
fcompp
addr16
and
push
outsl
je
add
push
cmc
jge
cmp
divl
mov
lods
shll
mov
inc
aam
adc
dec
imul
mov
adc
insl
xchg
or
int3
addb
aad
ret
shrb
ja
popa
xchg
mov
push
xchg
xchg
push
or
aad
push
jp
into
sti
inc
add
imul
add
adcb
inc
sbb
mov
inc
mov
lods
jecxz
shlb
xor
mov
sub
sbb
es
scas
fidivrs
push
dec
imul
stc
push
lock
mov
leave
popf
mov
clc
test
movsl
adc
scas
inc
mov
rcrl
cmpsl
es
sti
into
add
xchg
test
jbe
aas
push
in
pop
lahf
lret
in
clc
repz
sbb
sub
cld
jnp
or
test
jne
mov
jo
push
pop
out
int3
pop
push
sti
cmpsl
mov
lock
popa
xor
repz
push
sahf
shl
mov
lea
inc
cltd
outsl
leave
mov
mov
mov
mov
jg
xchg
in
cwtl
rcrl
jne
jle
fcmovnb
jbe
lds
cmp
add
mov
or
jno
outsl
outsb
xor
jno
and
insb
pand
xchg
icebp
dec
in
inc
mov
rcrl
into
stos
in
cmp
fucomip
cmp
sub
imul
lds
push
push
mov
orb
add
lret
test
loop
lcall
and
push
ja
lcall
test
mov
sub
xchg
push
cld
xchg
xor
mov
out
cmpsb
inc
mov
pop
cmc
sarl
xchg
and
lahf
push
aaa
mov
add
lock
mov
std
push
ds
je
and
mov
and
pop
mov
pop
pop
push
popf
sub
flds
xchg
jns
or
push
ds
mov
mov
dec
pop
push
xchg
inc
sbb
faddl
jge
sbb
ret
push
mov
or
leave
divl
outsb
repz
pop
packssdw
xlat
gs
push
push
stc
mov
ss
mov
sbb
or
mov
ds
cli
jae
stc
or
inc
hlt
inc
in
dec
call
ljmp
scas
dec
mov
adcl
push
imul
addb
mov
jns
stos
sti
imul
sbb
pop
subb
or
pushf
xchg
adc
jne
pop
add
stos
fisubs
out
out
inc
pop
pop
ret
cmp
sti
ja
inc
fsubrp
ja
dec
mov
push
mov
jg
jl
jle
aas
mov
jae
mov
lock
sub
rclb
jg
movsb
outsl
dec
sahf
dec
push
and
and
mov
pusha
mov
mov
add
ret
rcr
insb
dec
iret
pop
dec
push
aad
xor
xor
dec
add
pop
loopne
push
out
and
push
bound
push
out
dec
adc
mov
lods
and
jns
ds
leave
mov
rep
cmp
cli
xchg
mov
ret
mov
sub
in
das
call
jl
sbb
loope
xor
neg
or
push
aad
adc
xchg
pushf
sbb
mov
popf
icebp
sbb
dec
rorl
xor
in
dec
mov
jnp
inc
popa
in
inc
lret
jp
sub
inc
fstps
vphaddubw
daa
out
mov
lahf
adc
mov
xor
cmpl
js
sub
dec
arpl
pop
adc
dec
jg
outsl
push
pop
leave
pop
cli
sti
xchg
mov
xor
or
inc
mov
pop
sarb
popa
loope
mov
loopne
inc
scas
dec
adc
dec
xor
push
andl
shlb
je
mov
outsb
pop
fwait
cmp
int
and
mov
xchg
dec
jge
pusha
dec
das
xchg
add
add
in
ret
push
dec
int
scas
jmp
icebp
and
or
and
xor
pop
jb
mov
add
dec
xor
xchg
jle
sbb
lds
imul
xchg
and
sbb
xchg
pusha
sub
sahf
inc
out
daa
cmpsl
aad
sub
movsb
jmp
and
movsl
in
nop
ret
add
inc
add
jne
imul
shr
in
adc
mov
or
fdivrp
jnp
jmp
pop
sysexit
sarl
fmull
in
lock
popf
or
mov
negl
jg
jg
imul
mov
pop
mov
adc
xchg
fstps
hlt
imul
inc
mul
push
icebp
icebp
lock
jmp
in
out
out
jmp
in
mov
dec
scas
call
inc
add
mov
xor
mov
movsb
ja
cltd
lods
dec
mov
imul
mov
and
in
shlb
insb
inc
xchg
inc
mov
adc
sub
lods
addr16
pop
adc
pop
add
pop
and
sub
out
ret
xor
punpckldq
lods
dec
stos
sub
sub
fisubrs
andb
mov
mov
mov
sbb
push
cmc
cmp
mov
jne
dec
cmp
fisttps
nop
or
mov
inc
mov
xchg
or
mov
sahf
fiaddl
divb
push
and
mov
and
sub
mov
pop
pop
loopne
int
jmp
push
jg
cmpsb
ret
ret
mov
and
push
js
cmpsb
aam
mov
xor
mov
xor
push
pushf
push
insb
lds
dec
lock
sub
stc
leave
in
mov
out
and
and
add
jbe
sbb
dec
popf
jp
xor
inc
and
cld
adc
out
xchg
pushf
orl
js
xchg
inc
lock
testb
jmp
cmpsl
pusha
adc
pop
out
mov
andb
loop
mov
pop
imul
sub
adc
inc
cmpsb
xchg
jno
sbb
jne
or
jae
inc
xor
jbe
pop
dec
xchg
mov
addr16
jne
je
xor
sahf
and
sarb
pop
fiadds
mov
shl
cmp
aam
sub
pop
repnz
mov
mov
rorb
mov
and
inc
mov
int
jmp
xchg
out
push
fs
xchg
jb
jge
cmp
mov
aas
movsb
sub
inc
daa
mov
dec
jecxz
in
scas
mov
push
das
jg
pusha
cmp
jmp
jae
movl
inc
ret
mov
imul
dec
out
mov
inc
lret
rclb
inc
std
mov
bound
adc
imul
sbb
or
pop
outsb
cltd
dec
pushf
aam
xor
and
int
cmpsl
jl
shrb
enter
push
fistps
into
inc
fisubl
add
mov
add
out
jp
jmp
mov
dec
and
xor
dec
ss
xor
xor
or
or
test
adc
sbbl
lods
pop
push
addr16
fisttpll
dec
sbb
addr16
stos
adc
ljmp
add
call
jmp
cmp
pushf
in
in
out
out
ret
aad
cmp
mov
adc
xchg
clc
jp
cmp
mov
adc
aas
iret
ss
cmp
dec
lret
out
push
pop
sbb
xor
lret
mov
sbb
aad
fcomps
scas
jae
cli
adc
xchg
fcompl
or
insl
mov
or
add
loopne
ja
and
fiaddl
pop
pusha
outsb
inc
pop
sub
fdivr
sub
std
mov
inc
add
in
subl
lret
jl
mov
outsl
jp
movsl
loopne
inc
call
test
push
popa
and
test
sub
int3
push
or
fsubrl
mov
jns
jp
out
add
xor
mov
scas
orl
mov
xchg
pop
add
cmpsl
repz
jno
add
scas
cmpsb
out
adc
jmp
jmp
shrl
ss
push
cmc
js
ss
mov
repz
jbe
mov
sahf
jp
movsl
insl
inc
dec
cmp
into
mov
cmp
jmp
jno
iret
lahf
fidivs
xchg
lock
insb
out
push
pop
xchg
and
push
or
movsl
add
sub
std
sbb
sar
xchg
int3
sbb
int
hlt
jne
insl
xor
mov
lea
std
jl
adc
outsb
call
or
imul
pand
nop
test
notl
test
test
cmpsb
aaa
cmpsb
fnsave
and
nop
pusha
addl
out
or
pop
xchg
ficompl
dec
mov
es
aam
outsb
test
lea
insb
leave
sbb
cli
ficoml
cmp
cli
ljmp
out
xchg
push
cmpsb
mov
test
mov
adc
loop
push
dec
cld
movsl
fisttps
ret
leave
int3
aad
xchg
cli
das
adc
lahf
lret
outsb
adc
jne
sub
dec
es
bound
or
mov
sbb
pop
fbstp
fldl
cld
jg
orb
dec
aas
cs
mov
jb
jno
pop
roll
xor
pusha
sub
inc
dec
sbb
loop
out
add
mov
mov
in
cmp
xchg
shll
pop
shll
fcmovb
lea
sarl
negl
daa
add
lahf
cli
insl
add
loope
fdivr
jns
sub
divb
sub
out
inc
adc
or
clc
pop
iret
movsb
or
pop
xchg
pop
push
repz
andl
jle
popa
xor
lods
pop
xchg
rcrl
imul
call
inc
pop
push
jb
movsl
or
stc
mov
ljmp
aaa
mov
push
es
cwtl
mov
in
xor
std
cwtl
or
push
dec
mov
mov
stos
mov
sti
jle
inc
or
lds
and
push
insb
dec
lret
addr16
push
inc
jge
lahf
jl
lahf
or
in
imul
and
and
push
mov
jnp
fisubs
sub
cwtl
push
nop
fmul
or
dec
jmp
in
or
leave
scas
dec
jecxz
pop
inc
jnp
scas
sbb
popf
sub
loopne
mov
movsb
and
or
fbstp
cmc
nopl
fcmovbe
in
ja
push
test
pop
sub
lcall
movsb
test
divb
test
xchg
or
and
or
dec
ret
push
pop
lock
push
xor
mov
fsubrl
inc
xor
aad
rcrl
or
jle
cmpsl
push
push
xor
mov
es
or
mov
mov
sahf
stos
out
adc
in
dec
xor
pop
fmulp
cmp
lods
lods
lret
adc
cli
xor
pmuludq
daa
and
xor
das
scas
cs
jbe
data16
dec
push
orb
mov
sbb
mov
add
jno
mulb
leave
and
popf
sbb
subps
xchg
pushf
xchg
adc
push
fstp
jnp
sub
sub
fnstenv
sub
hlt
in
mov
mov
fiaddl
std
cld
xor
cmp
push
jno
mov
lahf
loopne
xor
dec
aaa
test
or
cs
sub
jg
nop
push
sahf
mov
mov
subb
mov
pusha
mov
and
mov
mov
lods
adc
push
mov
or
add
or
in
mov
mov
dec
pusha
stos
in
inc
test
mov
ljmp
xor
jmp
arpl
in
push
cmp
cmp
repnz
mov
add
sqrtps
into
lahf
out
sub
jo
pop
leave
or
adc
rorl
test
daa
cmpsl
rorl
addr16
pop
sar
mov
jecxz
mov
push
jp
data16
cwtl
push
subl
sub
cmc
je
adc
push
sub
in
bnd
sub
xchg
mov
loope
std
repz
leave
loop
incl
aad
jp,pt
and
popf
in
pop
or
outsl
test
iret
dec
sbb
les
xchg
imul
call
inc
mov
cmp
fildll
lahf
mov
rolb
jmp
out
jmp
mov
push
xchg
mov
mov
das
call
inc
jge
lahf
cmp
jne
xor
aad
repz
dec
fisubs
push
inc
xor
sub
int
out
leave
sahf
jns
dec
mov
jbe
mov
mov
hlt
xchg
ficoml
dec
mov
stos
ror
int
cltd
bound
xlat
xchg
inc
pop
jnp
add
call
fucomp
pusha
repz
or
jne
mov
fxch
inc
cmpl
adc
pop
jl
xchg
mov
xor
jne
cmp
and
test
adc
dec
int
mov
mov
lea
cmp
mov
pop
cmp
inc
insl
push
adc
addb
lret
imul
mov
bound
sbb
jne
pop
and
xor
push
push
leave
dec
es
fld
dec
mov
inc
data16
enter
inc
sbb
sbb
das
out
inc
sbb
add
in
dec
inc
mov
rcr
mov
xor
dec
push
insl
lret
adc
nop
pop
mov
xor
mov
lock
sbb
add
push
data16
xorl
je
mov
test
sbb
adc
xchg
mov
lods
cmp
std
hlt
aaa
sub
test
cli
bound
loopne
addr16
popf
je
nopl
adcl
adcl
insl
mov
imul
pusha
xchg
xchg
add
lret
cmpsl
sbb
popf
add
inc
mov
mov
push
push
add
fimull
cmp
cmp
push
das
xor
cmp
daa
out
imul
out
mov
xor
das
dec
inc
lds
mov
jne
pop
subb
in
xchg
push
insb
fs
and
ret
mov
adc
sbb
gs
pusha
rcl
pop
mov
adc
shrb
sbb
lcall
xchg
sbb
mov
fldenv
push
jno
fiaddl
sbb
jmp
out
in
leave
int
ret
lahf
lock
cmp
shlb
fildll
cmpsl
es
stc
sub
fnstenv
dec
xor
add
fs
jge
jl
nop
divl
xor
add
jne
inc
lret
mov
push
sub
mov
lea
out
mov
or
repnz
mov
mov
pop
das
scas
pusha
lods
xor
inc
scas
sub
sbb
orb
ficomps
rolb
push
incb
adc
stos
sub
mov
xchg
inc
dec
pop
sub
je
sti
cmp
add
cmp
xlat
mov
repnz
xor
xchg
data16
or
jb
int3
pop
xlat
push
or
jle
out
fs
daa
movsl
push
sahf
jno
movsl
cmc
dec
xchg
dec
mov
sub
imul
in
clc
push
in
or
rolb
pop
inc
push
add
fidivs
cli
in
dec
aas
adc
nop
fdivrl
sbb
pop
mull
mov
nopl
or
imul
sub
negb
mov
or
pop
div
in
pusha
pop
int3
clc
xchg
xchg
nop
or
jae
decb
lods
mov
cmp
mov
sbb
cmp
loop
pusha
mov
cltd
sub
pop
fstps
ret
pop
pop
mov
adc
lods
iret
dec
into
mov
scas
xor
insl
in
sub
imul
mov
into
jb
dec
mov
mov
sbbl
mov
inc
or
dec
sbb
or
push
dec
dec
popf
test
into
dec
popa
call
or
lds
xchg
jns
rclb
shll
ficoms
and
add
dec
mov
jo
xchg
leave
movsl
jmp
inc
lret
ja
shll
or
xchg
add
adc
fcompl
insb
aam
nop
xlat
jne,pt
shl
push
mov
hlt
mov
xor
das
push
movsl
icebp
pop
mov
shrl
mov
dec
jb
cmp
inc
ror
inc
sbb
call
pusha
jmp
mov
mov
int3
cltd
xchg
mov
jbe
xchg
jb
jge
sub
in
in
add
push
lret
and
loope
mov
ret
sbb
inc
movhps
sub
es
aaa
xchg
call
andl
mov
test
dec
out
dec
shlb
and
ss
mov
pop
mov
jp
and
cli
bound
stos
iret
pop
jle
popf
sbb
inc
xchg
push
lcall
dec
jnp
xchg
test
mov
dec
ret
enter
scas
push
or
imul
mov
mull
inc
mov
push
add
fcmove
mov
int3
mov
das
mov
or
outsl
or
push
test
inc
das
adc
jl
xchg
or
add
add
inc
test
mov
popa
loope
mov
and
cltd
xor
fstps
imul
rorl
push
fs
insb
mov
in
push
push
cmp
cmpsb
add
mov
sbb
inc
jp
mov
adc
out
push
test
cmpsl
daa
sbb
xor
call
mov
nop
out
into
sbb
or
and
inc
ret
pop
sbb
jp
rcrl
fwait
xchg
and
fstpt
pop
divb
lock
pop
int3
jb
mov
xchg
std
imul
out
enter
cltd
hlt
aas
scas
jmp
loop
cmp
pop
shlb
push
nop
or
push
mov
mov
mov
xor
out
push
test
xchg
sub
sub
enter
xchg
xchg
je
add
add
mov
fidivrl
insb
movl
push
mov
jo
stos
mov
cs
lods
adc
or
or
ja
outsb
jno
loop
ds
jae
push
adc
leave
jecxz
bound
adc
int3
aaa
in
ss
adc
mov
ss
mov
pushf
aam
ds
rcll
insb
dec
lret
dec
inc
mov
loope
aas
jbe
mov
arpl
rep
data16
lods
popf
rorb
cmp
mov
and
insl
sahf
pop
and
adc
lods
jg
xchg
mov
das
sbb
negl
sub
pop
pop
bound
enter
ja
lahf
movsl
and
aaa
ds
add
sti
jp
jbe
mov
mov
repz
mov
mov
pop
fistl
or
pop
jp
fstp
sub
fstps
pop
bnd
xchg
jmp
xchg
ss
mov
sbb
jmp
sub
sub
cmp
adcb
jg
jo
xchg
cmp
mov
lret
inc
ret
stos
lret
dec
aaa
ss
aas
in
les
or
fadd
inc
lds
push
jae
push
pop
nop
cmp
loope
addl
xchg
adc
inc
ret
xor
sbb
sub
mov
sbb
cwtl
pop
out
pop
pop
sub
in
or
outsl
sbb
pop
getsec
add
sti
movsb
mov
nop
push
imul
xchg
dec
test
adc
outsl
iret
add
add
cld
jl
jp
jmp
mov
mov
mov
mov
jae
out
mov
xchg
adc
add
inc
or
sti
or
addl
sbb
mov
outsb
mov
scas
lret
bound
fldl
test
adcl
xchg
inc
xchg
sub
mov
in
mov
pop
out
pop
call
int
lods
inc
push
lret
shlb
mov
scas
fwait
scas
sbb
xchg
push
lock
and
mov
mov
sbbl
rcr
pop
dec
dec
lret
in
xchg
scas
enter
std
lret
ss
jg
xchg
push
clc
pop
das
test
addr16
and
add
cmc
dec
sahf
jo
pop
push
lcall
arpl
int3
fcmove
fsubrl
add
gs
xchg
cmpsl
arpl
popa
test
dec
arpl
xchg
std
xor
cmp
and
mov
xor
or
in
movsb
or
repz
out
into
jno
out
das
stos
inc
movsl
rorb
shrl
jle
mov
loopne
dec
inc
pop
inc
dec
sbb
adc
imul
rcr
mov
pop
push
nop
jge
imul
sti
das
sub
sbb
icebp
jno
mov
mov
addr16
push
adc
sbb
pop
bound
popa
ret
adc
mov
sub
popf
adc
mov
sbb
jmp
push
ljmp
xor
dec
pusha
mov
popa
add
mov
ret
lcall
out
test
mov
push
lret
ror
pop
ss
add
shl
inc
cmp
iret
mov
xor
xchg
push
push
jecxz
jne
rolb
sti
inc
sbb
sti
and
ja
cmpsl
call
or
sti
imull
ja
push
sub
idivb
leave
sub
sbb
xchg
nop
movsb
cwtl
fcmovne
push
and
add
fsub
testb
dec
or
aad
addb
jle
dec
imul
addr16
daa
xchg
int
cwtl
test
sbbl
push
fs
pop
inc
shl
pop
pop
mov
lods
add
xchg
push
jg
jb
fcompl
mov
xchg
xor
push
adc
clc
call
pusha
fistl
repz
push
out
adc
dec
fs
sbb
adc
int3
add
or
cmp
les
sub
in
in
xchg
xchg
and
lods
or
dec
icebp
js
jnp
lret
aam
push
mov
push
mov
mov
scas
xor
pushl
and
nop
mov
add
test
ljmp
inc
xor
loope
push
push
in
push
jge
jl
sbb
in
or
sbb
or
adc
rorl
or
mov
dec
push
cmp
mov
push
sub
xchg
sbbl
fldcw
bound
inc
test
hlt
jnp
xchg
insb
aad
mov
push
mov
call
pushf
movsb
popf
es
sbb
mov
push
xor
repz
popf
aaa
cs
dec
adc
or
pusha
repnz
int3
cmpsl
push
int3
dec
jecxz
mov
inc
mov
lret
or
pop
sbb
cmc
jns
xchg
mov
adc
jno
cwtl
fwait
pop
stos
icebp
push
sub
scas
imul
sub
gs
stos
inc
sbb
inc
cli
jns
call
pop
bound
gs
cltd
cmp
adc
cmp
mov
mov
xor
inc
inc
pop
movsb
add
inc
xchg
popa
enter
fildl
pop
mov
lcall
in
dec
fldl
add
mov
push
lret
aaa
push
mov
adc
xlat
push
ficompl
mov
inc
ret
cmp
and
and
push
push
jmp
xchg
inc
sub
cltd
in
push
push
fisttpll
fcoml
or
jae
mov
ret
jne
pop
sub
mov
sub
rcll
in
or
data16
fdivs
in
les
or
sub
in
data16
and
fldl
cmp
mov
cmp
cs
lods
push
mov
dec
inc
sti
ds
sub
xlat
mov
adc
mov
or
movsl
pusha
sub
sub
add
xor
mov
je
addl
in
xor
and
xor
sub
sub
lods
xor
pop
pop
lret
add
jge
add
stos
jbe
fsubl
fisubs
push
cli
ficompl
not
mov
cwtl
push
or
lds
data16
fiaddl
stos
mov
subb
push
jle
fsts
add
call
sarl
adc
inc
jp
std
sub
mov
mov
add
ljmp
and
mov
inc
ljmp
inc
out
sbb
or
fstpt
lret
sub
lahf
add
cmp
shlb
bound
cmp
ret
dec
push
xchg
xchg
in
cmpsl
mov
adc
add
dec
bound
out
sbb
int3
aaa
loopne
inc
mov
xchg
sbb
repnz
leave
xor
inc
push
mov
xor
sbb
loope
pusha
push
cli
cwtl
xor
adcl
mov
mov
out
adc
in
dec
and
data16
imul
loope
add
fiaddl
add
push
pop
and
in
testl
rolb
out
adc
mov
aas
insl
jle
jecxz
jnp
outsb
test
push
xchg
push
loopne
pop
pop
rcr
xchg
dec
pop
nop
mov
repnz
lea
repz
cs
jp
pop
loop
shll
push
pushf
addr16
cmp
lods
pop
xor
nop
aad
ret
shl
scas
and
leave
ret
stos
mov
xchg
pop
sub
cmc
fwait
mov
sbb
leave
xchg
push
inc
ss
aad
fcoms
shrb
mov
es
icebp
sub
imul
test
inc
dec
stos
std
ds
movsb
pop
outsl
in
leave
sbb
ret
imul
mov
adc
xchg
mov
jg
push
pop
imul
or
mov
popa
enter
or
xchg
add
inc
pop
push
repnz
add
in
fsubp
xchg
add
lahf
hlt
cli
ficoml
out
adc
pop
and
inc
lahf
or
mov
arpl
push
jns
cmp
jae
or
cmp
add
dec
push
xchg
mov
mov
repz
mov
in
mov
out
loop
dec
fsts
xchg
inc
mov
lret
orb
cmc
jns
sarb
mov
sbb
stos
jb
lock
push
fists
push
sub
pop
sbb
imul
int
popf
xor
mov
mov
or
insb
and
push
xor
jnp
sub
leave
push
cmp
xorl
scas
cmpsl
mov
popf
push
in
shll
lahf
leave
mov
push
cmp
fisubrs
jl
mov
outsb
sarl
push
jecxz
ret
pop
jns
test
in
adc
or
xor
mov
add
or
xor
jmp
out
repnz
add
out
adc
ja
push
shl
ret
jne
inc
push
inc
nop
clc
cli
adc
cmp
xor
xor
mov
xchg
xchg
mov
jg
add
and
out
ret
repz
adc
or
lods
jmp
jns
fisttpll
out
lcall
xor
xchg
inc
insb
and
ret
xor
shlb
rcl
in
stos
scas
xchg
test
sub
adcl
jl
call
sub
jae
mov
sub
push
shll
inc
cltd
inc
jno
mov
jbe
mov
fidivs
dec
add
stos
mov
sbb
mov
loope
mov
and
enter
fimull
jmp
push
mov
imulb
add
pop
pop
or
sbb
stc
cmp
mov
jecxz
mov
inc
sarl
push
jb
dec
mov
imul
xor
inc
stos
jle
fdivl
popa
sbb
outsb
pop
inc
aaa
shrl
dec
ds
int
loopne
xchg
xchg
add
ja
sbbb
ja
incb
mov
fwait
sbb
popl
dec
rclb
adc
cmpsb
adc
jle
lods
sub
popa
push
mov
pop
sub
movsb
dec
arpl
xor
push
jb
inc
lods
add
ljmp
push
js
jae
push
adc
outsb
xchg
out
lds
mov
push
dec
mov
xchg
les
mov
insl
cmp
add
jle
movsl
inc
mov
aaa
pop
pop
movsb
jns
xlat
fisttpl
jb
pop
pop
dec
iret
sub
xchg
xor
cmpsb
cld
popa
lock
jmp
jg
lahf
pop
js
cmp
shr
test
fisubs
gs
int3
push
xor
bound
insb
mov
std
push
push
mov
sub
push
push
lret
add
or
sub
mov
xor
inc
lds
cs
push
mov
adc
adc
and
adc
mov
stos
jno
ret
pop
nop
es
aaa
pop
add
adc
push
add
cmp
cmp
mov
fsubl
push
dec
or
jbe
hlt
or
xor
sbb
jns
mov
js
dec
pop
fsubs
sbb
xor
add
scas
out
inc
loope
fcompl
cltd
inc
sbb
call
inc
fisubrl
push
jecxz
xchg
lods
shl
and
xchg
cmpb
rcpps
addr16
push
inc
ja
xor
lret
in
adc
arpl
int3
test
xchg
cmp
cmp
aaa
movzbl
cltd
loopne
inc
mov
out
xor
or
pop
mov
repz
sahf
mov
test
push
xchg
pusha
mov
jg
adc
sbb
scas
jmp
scas
and
fisttpl
icebp
inc
ret
mov
mov
fwait
pop
scas
push
add
cmp
pop
outsb
inc
lods
clc
mov
rcrl
and
movsl
and
je
adc
hlt
into
xor
shlb
push
cltd
pop
xchg
dec
pop
sbb
adc
sbb
or
test
mov
aam
xor
sub
push
push
sarl
mov
mov
cmp
jo
adc
or
xlat
dec
mov
int
push
cmp
pcmpgtd
notl
cmc
sub
jno
xchg
stos
pop
sbbb
test
push
loop
in
rcrl
xor
cs
nop
jo
mov
xchg
xor
insb
push
ljmp
sub
aam
ja
inc
ss
insb
insb
pop
adc
and
or
cmp
cmp
inc
jns
xchg
and
in
inc
sbb
loope
pop
cltd
jnp
pop
pop
mov
adc
xor
je
mov
scas
jae
xchg
dec
push
ja
loopne
scas
scas
lods
jns
fs
arpl
jne
movsb
and
xlat
insl
jnp
add
sti
aas
jge
cmp
jns
cmc
dec
add
xor
inc
dec
and
jne
lahf
and
leave
cmp
mov
cmp
fs
add
loope
fdivrl
mov
and
pop
fildl
pop
test
adc
jne
adc
or
mov
cs
iret
mov
dec
movsb
xlat
scas
push
sub
mov
loop
add
ljmp
cmpsl
mov
stos
jo
mov
mov
inc
lcall
pushf
adc
rcr
sbb
pop
push
sti
push
out
inc
push
pop
lret
loopne
inc
ret
xor
popf
and
repz
xorl
pushf
sbb
sbb
in
and
sbb
rcr
pop
sbb
ficomps
xor
inc
int3
divl
add
movsl
enter
shlb
stc
mov
adc
push
add
inc
or
test
stos
ds
pop
enter
stos
sti
lret
pop
std
xor
fidivl
xor
int
test
jns
cld
mov
push
stc
fmulp
ret
std
or
out
mov
jo
jno
popl
dec
sbb
xchg
xor
add
dec
decl
inc
iret
dec
mov
sub
dec
es
mov
popf
cwtl
movsb
pushf
sub
mov
clc
sbb
in
pop
jp
jb
loopew
jae
outsb
jno
ret
adc
or
mov
add
fpatan
out
xchg
int3
mov
les
push
sbb
fcoms
sbb
add
scas
sub
push
rorl
dec
movsb
push
pusha
pop
in
cmpsb
nop
int3
out
xor
enter
sbb
dec
cmp
xor
sbb
fiaddl
mov
bound
xlat
jl
inc
test
mov
pop
mov
xor
imulb
push
int3
pop
xchg
lea
repz
ret
mov
mov
in
ret
cmp
sub
xor
xor
scas
addr16
daa
push
aad
add
mov
pop
add
das
in
xorb
jp
mov
push
xor
mov
rcll
adc
push
cmp
jmp
lods
cmc
shld
icebp
js
out
mov
cmp
pusha
dec
adc
addr16
loope
ficoms
add
dec
loope
mov
adc
sbb
std
addr16
js
fsubl
sub
mov
mov
mov
mov
mov
mov
mov
loop
lds
ret
js
es
cmpsb
inc
data16
and
pop
lahf
mov
std
xor
stos
lea
out
mov
xlat
push
test
dec
movups
adc
in
pop
fadds
mov
and
mov
loopne
shrl
jb
jno
inc
jno
jo
rcrl
addr16
pop
mov
mov
push
mov
iret
add
test
je
in
cmp
cli
xlat
loope
sti
mov
rol
mov
movsl
mov
cli
and
push
into
cmp
movsb
mov
jno
pop
or
adc
xchg
sub
pusha
sub
push
lcall
fwait
add
das
push
mov
loop
adc
and
adc
daa
cmpsl
shrl
fs
mov
and
pop
lahf
push
repz
mov
mov
jp
out
insb
sub
or
lcall
fcoms
pop
in
jno
or
sbb
dec
xchg
lret
lods
xor
out
inc
mov
dec
outsb
or
sub
pop
or
mov
jns
imul
shr
pop
stos
test
sub
rorb
mov
jmp
lret
jecxz
sub
xchg
in
cltd
xchg
add
mov
lahf
add
xor
repnz
in
insl
mov
stos
inc
push
es
push
mov
in
scas
mov
cmp
add
or
dec
into
push
test
repz
fistps
fcmovb
mov
add
push
mov
popf
test
sti
xchg
mov
sbb
add
mov
add
inc
fldcw
cli
pushf
in
push
dec
sbb
xlat
and
js
std
pop
mov
das
dec
mov
sub
pop
sub
inc
pop
jl
push
and
xchg
cmc
dec
insl
addb
jl
mov
iret
in
push
mov
xchg
out
sbb
loop
xchg
loop
pop
cltd
ficomps
xor
cmp
mov
lret
pop
pop
add
mov
pop
fistl
aad
mov
scas
inc
fidivrl
test
das
pop
add
icebp
jno
jbe
push
ljmp
or
iret
jmp
arpl
aaa
loope
enter
sbb
add
adc
sbb
out
and
xchg
cmp
test
sbb
out
jg
dec
movl
pop
testl
popa
nop
cmp
and
sub
xorps
in
xchg
add
cs
adc
lahf
xchg
insl
mov
out
mov
fildll
ret
cmp
insl
mov
stc
mov
cmp
push
daa
ss
cltd
es
enter
cli
inc
imul
mov
icebp
dec
add
stos
push
sbb
dec
pop
sbb
inc
enter
and
push
push
test
mov
and
pop
je
scas
stc
adc
lock
pop
mov
mov
jno
pushf
icebp
mov
outsb
sub
popf
rol
jp
and
mov
sbb
sub
jp
outsl
or
mov
jge
push
jmp
cmp
jmp
adc
push
imul
mov
dec
bound
movl
cld
js
incb
jecxz
push
xchg
or
lret
hlt
and
pop
cwtl
rorb
push
dec
mov
jno
in
dec
xor
divl
hlt
adc
jno
mov
cmp
mov
movsl
pop
or
pop
pop
push
inc
add
into
inc
std
mov
cld
aas
cli
push
mov
mov
lds
jecxz
adc
cmp
push
lea
xchg
mov
push
push
fdivp
sub
adc
and
fldcw
xchg
sub
pop
out
icebp
pop
sbb
jne
stos
push
flds
ficoml
cmp
fbld
jg
mov
add
xchg
mov
push
push
mov
shlb
js
xchg
sarl
stc
insb
popl
cmp
cmp
pop
xchg
in
xor
xchg
xchg
mov
mov
inc
popf
sbb
xorb
les
jbe
outsb
xchg
in
mov
sub
bound
in
jne
pop
cld
sbb
cmpsl
jg
adc
es
cmp
daa
sbb
shll
fxch
inc
pop
mov
or
mov
fisubrs
call
mov
sub
push
cmc
je
pusha
xchg
and
mov
shrd
sbb
or
daa
pop
lret
lret
sbb
dec
mov
movsl
xchg
mov
pop
stos
and
or
dec
pop
cmpsl
pop
fisubl
mov
xchg
add
pop
ja
xchg
sub
rcll
ss
mov
imull
push
aad
adc
outsb
lds
pop
scas
add
fsts
stos
add
mov
inc
xchg
pop
lcall
arpl
and
fcoml
popf
sbb
xor
add
add
mov
adcb
jo,pn
lret
or
pop
cltd
lock
mov
adc
divl
aam
ret
inc
nop
icebp
mov
sub
push
insl
sub
dec
ret
adc
fsubrs
xchg
dec
dec
cmp
adc
clc
sub
stos
out
cli
popa
test
mov
jbe
add
fidivl
add
outsb
mov
aas
cmp
sub
xlat
add
popa
test
call
movsb
inc
fistl
jmp
cmp
or
into
idivb
push
push
dec
pop
jl
loopne
jmp
inc
sahf
stc
add
test
pushf
sub
xchg
push
cwtl
sub
push
pop
mov
xchg
and
lods
test
and
mov
pop
jmp
mov
push
inc
das
and
imul
push
sbb
xor
sbb
loopne
xor
leave
dec
les
orl
or
or
ja
sbb
fdivl
sub
or
xlat
push
mov
dec
mov
addl
inc
jbe
out
cli
push
pop
mov
push
fprem1
rcl
movb
push
jecxz
shll
or
pop
add
inc
mov
add
aas
cli
outsl
and
dec
loopne
pop
inc
sbb
dec
out
push
add
cmp
shrb
cmp
mov
lahf
stos
inc
sahf
mov
mov
add
fstps
and
inc
andb
into
inc
cmpsl
insl
add
or
popf
sub
mov
cltd
pushf
adc
cmpsb
push
push
sbb
stc
inc
mov
jbe
cmp
xor
rol
push
out
loopne,pt
adc
cmp
data16
mov
dec
xchg
ret
mov
adc
inc
in
mov
adc
fwait
push
xchg
push
stos
xor
lods
lods
icebp
mov
icebp
jne
aas
and
bound
shr
je
mov
jl
push
mov
inc
pop
sub
pop
lods
popa
andb
fs
pop
fsubp
fucomi
jg
sarb
out
push
fwait
mov
pop
xor
dec
and
push
outsl
jecxz,pn
push
leave
ror
push
or
inc
mov
cltd
inc
ds
sbb
push
mov
sbb
mov
fdivl
and
test
int
xchg
add
cmpsb
or
mov
xchg
das
jg
insb
test
sub
xchg
outsl
cli
imul
jbe
in
xor
sbb
adc
cmp
ljmp
mov
cltd
daa
push
sbb
imul
jp
xchg
dec
inc
cli
cmp
inc
lods
fstpt
dec
test
xchg
insl
add
xor
in
sub
arpl
pop
inc
fstp
fcomp
ret
mov
jp
outsl
aam
xchg
cld
icebp
and
shrl
rclb
sbb
loopne
mov
mov
lahf
call
xchg
jp
jmp
and
dec
leave
pusha
out
sub
jne
push
mov
sti
leave
sbb
rclb
push
aad
xchg
dec
sbb
xchg
push
out
mov
subl
jg
push
mov
cltd
popa
daa
ret
pop
push
or
xorl
mov
aaa
mov
jp
xor
push
das
lods
insb
mov
arpl
sub
ficomps
cmpsl
lcall
add
sbb
je
dec
stos
xchg
sbb
test
loop
outsb
inc
inc
call
push
fisubl
jb
add
std
loope
and
loopne
ret
inc
cltd
sbb
fcompl
dec
rorb
push
xchg
out
ret
pushf
nop
daa
mov
lea
cli
inc
xchg
aas
and
js
out
cmpsl
inc
push
scas
call
rol
ja
jecxz
push
mov
xor
cltd
sub
push
adc
mov
test
in
shll
inc
pusha
jbe
cmp
lcall
es
loope
pop
test
loop
insb
leave
iret
pop
movsb
push
xor
aam
out
icebp
jge
aad
push
arpl
and
pop
mov
fcomps
cmp
leave
or
jle
push
aad
add
mov
addl
sbbb
and
and
mov
adc
cmpl
ljmp
in
lret
aaa
mov
fsubr
lcall
outsb
mov
lret
push
push
sahf
adc
lock
cs
cmp
cmp
lcall
pop
out
pextrw
inc
sarb
xchg
lods
xorl
xchg
adc
sbb
cmpsb
mov
dec
mov
inc
clc
jo
bound
sub
daa
cmpsl
cmp
sub
jmp
fsts
or
xchg
aad
mov
jge
jnp
pop
pop
jnp
jb
call
out
xchg
insb
loopne
xchg
ds
or
mov
leave
popf
cli
cltd
sti
or
test
faddl
jno
jg
icebp
xor
sbb
leave
pop
frstor
pop
xchg
mov
fists
scas
fbld
mov
aad
lahf
outsb
in
insl
mov
push
adc
leave
jecxz
loop
cmp
loopne
push
sbb
stc
das
mov
mov
mov
inc
mov
push
xchg
jo
jmp
nop
mov
nop
in
bound
mov
pop
in
cmp
or
add
jns
in
aaa
cli
imul
add
test
cmpsl
push
xchg
jno
jg
lock
cmp
inc
mov
addl
ss
std
or
scas
jns
in
sub
fxch
pusha
ja
loope
je
incl
lea
or
repz
in
jl
scas
pop
xlat
mov
push
dec
and
mov
fsubl
or
and
negb
loope
lds
ds
mov
fistl
ficomps
out
pusha
arpl
and
mov
icebp
in
out
rorl
pusha
jo
add
and
out
xor
ret
adc
xlat
xor
sarl
or
rorl
dec
mov
fisttpll
mov
mov
fwait
sbb
pop
xchg
and
xor
pop
ss
adc
psubq
mov
repz
sbb
mov
push
enter
mov
cmpsb
and
arpl
sbb
sub
jmp
inc
lds
fbstp
add
mov
sub
lods
mov
ja
dec
mov
jg
sbb
jne
sub
inc
xchg
sub
icebp
pusha
faddl
or
in
inc
ds
push
sbb
daa
cmp
rcl
mov
lods
and
ret
push
loopne
push
and
or
dec
xchg
sub
insb
lods
sub
add
daa
cmp
movsl
cli
in
pushf
addr16
sbb
add
sbb
in
mov
push
arpl
leave
jo
subl
dec
cli
cmp
fwait
add
insb
xor
scas
sub
mov
mov
hlt
int3
rcrl
push
push
push
fdivrl
pop
pop
insl
fisubl
les
clc
jae
stc
inc
sbb
dec
xchg
faddl
shll
sub
pop
test
fs
pushf
sbb
push
inc
movsl
in
test
xchg
adc
andnps
gs
xor
shll
int
stos
call
mov
or
xor
movsl
out
leave
cmp
sti
pop
imul
leave
mov
sbb
pop
mov
mov
xor
imulb
aam
sub
fdivrs
movsl
add
out
adc
jno
lods
std
data16
sub
pop
mov
fucom
out
inc
mov
mov
repz
aas
es
and
add
cmp
aad
shll
sub
frstpm(287
into
dec
out
outsb
loop
loopne
sbb
movsb
xlat
mov
jno
cmp
test
inc
iret
out
mov
dec
cltd
jns
lods
dec
add
adc
xor
cmp
psubsw
xchg
xor
sub
shlb
sbb
insb
cmpl
cmpl
call
jp
loope
sub
mov
stos
push
frstor
insl
dec
fwait
iret
jp
or
pop
push
and
xor
mov
ret
scas
lcall
ret
mov
inc
and
cltd
sbb
lods
and
push
insl
adc
into
bnd
fidivrl
jmp
iret
mov
enter
in
fnstsw
in
in
in
cltd
xchg
or
add
outsb
mov
pop
jns
inc
push
mov
jb
loop
sahf
mov
aad
pop
mov
xor
das
or
ret
ja
mov
lahf
mov
filds
push
shl
int
xchg
mov
js
sbb
add
xor
out
push
inc
lds
shlb
mov
fidivrs
and
gs
out
cs
mov
andb
jae
scas
lret
lods
repz
ljmp
inc
pop
cmpsb
push
gs
ja
shll
or
push
mov
mov
mov
out
or
xchg
pop
fmulp
je
outsl
adc
popa
loope
inc
mov
add
or
outsl
ret
cmc
int3
rcl
lret
and
and
push
sbb
xor
inc
jbe
pop
out
adc
push
push
call
ret
fimuls
es
pop
in
in
test
jb
cmp
scas
das
sti
cmpsl
in
jns
adc
inc
insb
mov
fistpll
push
loope
dec
ljmp
push
jmp
jnp
inc
jmp
adc
jbe
popf
mov
add
clc
add
sbb
push
inc
sahf
and
fiaddl
or
cli
push
push
lods
mov
shr
sarl
fisttps
icebp
dec
push
fs
sub
pop
stos
stc
pop
in
push
mov
or
cld
test
scas
and
in
push
adc
mov
es
xchg
add
inc
leave
hlt
xchg
mov
push
add
inc
sahf
pushf
ror
mov
xchg
push
or
mov
test
push
add
fidivs
lret
pop
movsb
pop
scas
cltd
add
pop
fldenv
sar
movsl
mov
dec
into
jb
shll
pop
jmp
out
movsb
in
mov
rol
push
addr16
pop
ficomps
xor
xchg
ss
xor
mov
adc
cmc
xchg
lea
xchg
jo
jge
pop
bound
decb
dec
into
dec
mov
mov
rcr
das
mov
jae
mov
popf
insl
adc
push
jge
dec
aaa
xorl
movl
mov
mov
push
cmp
sub
push
sub
push
lret
mov
sub
and
test
push
and
movsl
cmpb
mov
xor
mov
jmp
xor
sub
xchg
mov
nop
xchg
mov
sbb
pop
aam
xor
xor
shll
rcrb
sub
dec
push
jg
dec
iret
sub
push
fwait
inc
in
lds
int
inc
loopne
popa
es
push
inc
dec
mov
lock
mov
mov
sub
shlb
mov
mov
cmp
lret
xchg
fnstsw
push
jp
push
adc
mov
cmp
ds
pop
scas
cs
fnstenv
test
dec
test
mov
inc
lcall
jle
test
stos
sbb
jo
fwait
lcall
adc
leave
xchg
imul
data16
push
dec
scas
inc
jmp
cli
jns
icebp
cmp
and
push
push
add
stos
mov
andb
roll
leave
aad
mov
xchg
sub
and
or
inc
mov
xchg
push
outsl
and
jp
sub
into
sbb
and
and
sbb
sub
mov
iret
fistpll
ficoml
int3
stos
in
push
jmpw
sub
daa
xchg
push
push
mov
nop
cmp
adc
daa
and
aad
push
daa
or
jl
cmp
aam
js
xchg
cmp
xlat
cmpsl
cmp
int
cmp
xchg
lret
adc
insb
ret
sub
inc
sub
mov
sub
inc
jl
lret
lret
sbb
cwtl
lds
pop
adc
mov
sub
test
sbb
pop
decl
inc
push
adc
cmpsb
sbb
in
jecxz
or
jmp
jno
sub
pop
imul
add
cld
pop
and
jnp
mov
scas
lods
sti
or
icebp
in
cmpsb
jg
add
and
jg
inc
and
sbb
xorps
in
hlt
fcmovne
mov
push
in
insw
aad
mov
mov
ljmp
pop
pop
mulb
out
or
jns
loopne
das
into
adc
sti
mov
jmp
test
lahf
testb
mov
inc
pushf
add
mov
push
mov
cmp
cmpsb
xor
lock
in
adcl
cld
mov
imulb
aad
jp
mov
and
movsb
aad
sbb
neg
call
xlat
adc
dec
shl
mov
dec
adc
mov
in
add
mov
or
es
jns
push
add
sbbl
outsb
mov
cmp
xor
sarl
jl
aaa
adc
push
call
aam
shll
rcrl
cmc
or
mov
jns
cli
pop
and
mov
xor
sbb
and
movsb
sbb
pop
popf
adc
inc
test
fisubs
pop
into
pop
xlat
push
fimull
ret
cli
jo
adc
push
cmc
jno
cmpsl
fdivl
jbe
cli
push
jo
dec
cwtl
jmp
lahf
arpl
and
loope
lods
ret
jae
mov
nop
jecxz
sbb
stos
in
daa
insb
and
out
xchg
xor
ljmp
add
inc
jge
sar
loop
test
pushl
push
xchg
cmp
aas
repnz
push
sahf
fwait
and
das
hlt
pop
lret
xchg
movsl
int3
ds
xchg
adc
pop
orl
xor
cli
add
inc
dec
and
fwait
arpl
js
sub
adc
pushl
jge
stc
dec
mov
lds
aam
pop
nop
push
fwait
cmc
es
enter
mov
push
ljmp
cltd
loopne
sbb
pop
sahf
dec
lds
pusha
and
outsb
loop
cltd
rorl
rcrb
push
ficompl
dec
xchg
cs
aad
in
pop
stos
xchg
and
add
scas
out
lods
popa
pushf
pop
and
in
sbb
xor
push
xor
jl
cmp
rorl
pop
sub
jl
and
inc
mov
or
and
orl
orb
and
fwait
inc
in
inc
rorb
push
and
or
adc
dec
incl
xchg
mov
fwait
dec
addr16
mov
fistl
stos
sbbb
cmpsl
es
add
mov
jae
fisttpl
pusha
icebp
out
sub
dec
push
repnz
jno
imul
mov
lret
int
je
xor
mov
adc
and
cli
mov
fidivl
xlat
and
push
lret
loope
aam
jmp
dec
ss
cmpsb
fadds
into
fs
xlat
pop
shrb
push
push
shll
js
std
mov
ljmp
sub
mov
mull
and
sbb
mov
pop
fwait
enter
outsl
cmp
dec
xor
scas
cs
dec
sub
addr16
inc
xor
and
std
ja
jb
sti
add
pop
cli
cld
mov
jno
push
jb
pop
rol
or
sbb
ret
pop
iret
push
aaa
sub
out
dec
data16
movsl
sub
in
jno
mov
rcr
jecxz
jmp
and
pop
adc
pop
rorl
andb
cld
cmp
push
and
jno
aaa
push
rcl
mov
fmuls
mov
push
dec
jne
cmp
jle
add
lret
sahf
movsb
inc
rol
inc
loope
add
ret
push
repnz
rcll
dec
loop
pop
pop
in
shll
push
pop
in
aam
addb
aam
imul
or
es
sarb
sub
movsb
faddl
and
mov
arpl
sbb
pop
push
cmpsl
sbb
aam
ror
fisttps
loope
lret
mov
or
fadd
aas
arpl
int
sahf
movsb
and
jae
pop
sub
sbb
ljmp
mov
fisubs
je
pop
shl
sbb
adc
ljmp
rorb
cmpsb
push
test
leave
sbb
xor
fcmovbe
lods
mov
xchg
outsl
and
in
inc
or
gs
aaa
cmc
mov
mov
nop
mov
stc
in
pushf
sub
test
popf
mov
dec
sahf
fsts
add
push
enter
stc
pop
stos
or
sarl
inc
jb
test
hlt
sub
add
pusha
js
sahf
daa
ret
pop
jge
fcoms
dec
fwait
lods
test
aad
jecxz
xlat
xor
push
iret
call
sub
out
cmp
insb
aam
pop
call
mov
sub
fucom
mov
dec
mov
sahf
dec
mov
jnp,pn
adc
jp
dec
scas
pusha
das
scas
loop
and
push
mov
dec
add
enterw
std
inc
pop
push
ljmp
lods
mov
ficoms
pushf
inc
cmp
mov
dec
mov
sub
mov
inc
xchg
adc
in
out
ss
mov
pusha
aaa
lret
shrl
pop
lcall
rol
sub
jae
dec
sbb
aaa
les
insb
cld
inc
sub
mov
cwtl
jno
xorl
cmpsb
lds
aas
xchg
or
or
mov
in
adc
out
inc
fs
call
xlat
mov
negb
jecxz
out
push
loopne
je
loop
test
cmp
cmp
adc
in
lcall
call
not
popf
push
lock
int
cltd
push
push
hlt
ss
xchg
stos
jbe
cmpsb
adc
call
loopne
outsl
leave
mov
data16
pushl
adc
and
fwait
jne
xchg
popf
ret
xchg
movsl
sti
adc
stos
inc
pushf
sub
lret
outsb
in
daa
mov
stos
icebp
push
pop
inc
and
cmpsb
lahf
lret
out
inc
mov
out
cltd
mov
dec
jns
mov
jge,pt
fprem1
pop
out
pop
mov
push
jne
int
rorb
shll
cld
imul
xor
faddl
jnp
lds
in
jo
mov
pop
mov
fiaddl
pop
add
jg
xchg
add
mov
or
pop
fldcw
or
xchg
rorl
sahf
push
movsl
adc
insl
xor
jmp
add
testl
xchg
add
lahf
pop
sbb
popf
xor
pop
dec
nop
enter
std
sub
lods
les
mov
imul
dec
mov
iret
mov
xor
lret
int3
push
xor
outsl
pop
or
test
fwait
push
hlt
and
cwtl
jmp
push
icebp
aad
leave
inc
xchg
inc
pop
repnz
sbb
mov
les
movsb
jp
gs
and
jl
outsl
rcrl
popa
jnp
jl
add
jo
das
pusha
jbe
inc
sbb
push
test
pop
clc
xchg
fstps
adc
xchg
test
jg
dec
jmp
loopne
div
addb
cmp
fcomps
sub
mov
xlat
sbb
xor
push
test
shl
in
mov
ljmp
pop
mov
mov
cmpsb
aam
push
mov
sti
lea
ret
cli
sbb
arpl
mov
leave
xchg
cli
adc
pop
lods
loopne
pop
inc
ror
fiaddl
cltd
aam
sbb
or
dec
ljmp
pop
or
lds
push
mov
lods
pop
lahf
and
gs
lock
shlb
dec
add
and
sbb
dec
sub
pop
int3
lahf
daa
inc
lods
and
xor
mov
xchg
cmp
repz
test
push
xchg
adc
aam
sahf
lods
pop
push
lea
outsl
and
cs
pop
pop
gs
pop
mov
gs
rorb
fstpl
mov
mov
mov
cmp
jmp
mov
mov
mov
lods
into
arpl
mulb
jmp
adc
movsl
sti
insl
push
jmp
out
cld
ret
xor
jle
es
shlb
mov
clc
cwtl
dec
lahf
cmp
mov
mov
cmp
jmp
in
addr16
adc
or
cli
pusha
loope
mov
pushf
push
pop
int
add
les
push
std
or
andb
cltd
push
adc
jb
lock
hlt
jg
cltd
lock
and
cmpsb
in
adc
push
daa
mov
sub
pusha
adc
sti
cmc
xchg
or
int3
ret
rdmsr
lret
outsb
or
lret
js
inc
stos
outsb
mov
or
mov
mov
lods
jle
popf
ret
lcall
dec
fimull
cmc
mov
pop
repnz
jae
mov
cmpsb
and
shrb
inc
or
pusha
fisttpll
or
pop
cli
push
js
fildll
push
or
fwait
sbb
sbb
addl
into
call
jp
roll
jg
add
jge
aaa
sbb
test
cmp
dec
jnp
out
shlb
dec
and
outsb
pop
add
or
mov
paddb
xor
gs
flds
push
sti
jle
jge
mov
xchg
adc
mov
mov
xor
je
adc
sbb
aam
or
adc
sahf
bound
push
pop
stc
fmul
mov
jne
outsw
or
movsb
xchg
mov
out
stc
xchg
jae
daa
js
or
jns
mov
push
sub
lock
mov
pop
int3
sub
and
add
jno
fsubl
cmp
bound
mov
mov
int3
fadds
push
aam
jecxz
push
in
push
push
add
dec
into
jb
mov
pop
mov
add
popf
pop
outsb
xor
int
imul
ret
inc
mov
jbe
cmp
aaa
mov
and
int3
or
mov
sbb
cs
cmp
push
notl
lock
lret
stos
xchg
jns
jecxz
inc
sbb
adc
push
and
test
mov
xor
stos
pop
add
mov
sub
jecxz
cli
adc
int3
sub
adc
ja
in
cli
add
and
mov
cmc
popa
cmp
pop
add
or
cmp
shl
mov
mov
dec
jbe
bound
or
adcl
mov
sti
mov
add
pop
add
lds
mov
popa
jnp
fisubrs
pop
call
pop
icebp
dec
xchg
test
cmpsb
push
or
add
sub
les
ds
xchg
sbbl
dec
and
cmp
ret
js
lea
xor
cmp
and
nop
cmpsb
inc
or
lea
mov
xchg
insb
out
into
xchg
inc
lret
sbb
xor
sbb
adc
pop
inc
pushf
hlt
sbb
pop
jno
test
sbb
adc
dec
inc
and
add
es
xlat
rcr
mull
int3
cltd
stos
pusha
pop
jge
xor
je
outsb
fstpt
push
push
inc
add
es
imul
xchg
mov
adc
ret
shlb
loopne
add
cmpsb
inc
push
or
aam
mov
mov
aad
mov
adc
les
in
aam
addr16
fsubrl
sti
or
sub
mov
into
add
cmp
jle
cmpsb
lahf
push
sbbl
lods
sbb
fistps
imul
mov
ljmp
adc
push
aaa
imul
loopne
adc
dec
mov
or
cli
shrb
imul
pop
sbb
movsb
xor
xchg
and
or
add
int3
mov
ficoms
mov
inc
mov
mov
xor
out
in
rclb
movsb
fldenv
xchg
mov
mov
and
orl
pop
sti
add
adc
cli
fisttps
lods
arpl
sub
mov
push
aam
mov
imul
mov
stos
js
dec
insl
mov
or
outsl
xchg
insb
cmpsl
sbb
jmp
lret
rorb
pop
rcr
jecxz
pop
mov
add
push
test
inc
cmp
or
test
ss
in
add
push
mov
cmp
mov
scas
mov
iret
in
pop
inc
jmp
cmp
lods
addr16
mov
mov
mov
leave
add
sub
int
add
push
dec
insl
dec
enter
lcall
xor
popf
cs
adc
mov
es
pop
pop
lret
mov
or
dec
subb
test
lahf
push
dec
out
vpackssdw
imul
inc
popa
xchg
cmp
adcb
negb
push
aaa
ja
adc
mov
adc
push
cmc
data16
pop
out
cmp
negl
hlt
jae
dec
ja
bound
sahf
bound
or
or
ret
mov
xchg
dec
imul
aad
cwtl
fidivl
sub
shrl
arpl
xor
or
out
adc
dec
cwtl
in
aad
stos
push
test
and
imul
daa
mov
mov
dec
mov
inc
mov
pop
xor
nop
push
cmp
int3
xor
jmp
cmp
outsl
sahf
sbb
and
mov
or
and
pop
insl
fstps
add
mov
fidivl
mov
ss
pop
ja
lds
or
.byte
.byte
sub
push
add
push
outsb
inc
insb
xor
cs
insb
add
mov
push
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
in
push
push
push
pusha
call
pop
sub
mov
sub
mov
add
lea
mov
xor
jmp
nop
jmp
ret
jl
shlb
ret
call
nop
nop
add
stc
rol
jmp
call
sar
jmp
call
sub
nop
nop
clc
stos
loop
jp
cmp
cltd
flds
dec
mov
test
pop
lcall
aaa
and
or
sbb
push
test
lds
dec
inc
mov
cli
ljmp
testb
jl
jae
das
and
into
cli
in
mov
movsl
push
scas
enter
adc
sub
fnsave
push
imul
or
mov
movsb
mov
jne
xor
negl
cmp
arpl
mov
inc
loop
dec
inc
xor
lret
stos
jg
inc
jle
push
je
cmp
sbb
mov
jp
pusha
push
jbe
cmp
adc
in
call
negl
pop
jno
inc
sub
cmp
fidivs
imull
adc
cs
push
dec
sub
loope
mov
lcall
push
xor
xor
and
fadds
sbb
fs
dec
outsb
mov
daa
pop
sar
in
push
fdiv
adc
jnp
addr16
cmp
and
add
movsb
int3
ret
fnstenv
into
das
push
dec
jo
leave
push
add
adc
aam
gs
xchg
lods
xchg
sub
loope
leave
jmp
stos
mov
sbbl
xor
adc
std
lock
jae
mov
pushf
mov
and
aas
push
das
inc
bound
in
mov
sbb
push
dec
lahf
sti
pop
adc
add
xor
cmpsl
lcall
inc
andl
in
aad
or
insb
xchg
pop
call
cmp
repz
test
filds
inc
imul
out
or
jnp
movsl
jg
mov
dec
add
and
cmp
xor
sbb
in
or
pop
sahf
push
imul
jmp
lods
mov
cmp
dec
inc
xor
xor
out
sbb
add
mov
xorb
dec
mov
iret
mov
movl
sub
aaa
ljmp
popf
mov
jb
test
dec
xor
dec
fidivl
ss
les
jge
push
pusha
mov
es
xor
icebp
in
xchg
out
or
jae
pushf
jne
xor
test
scas
fbld
clc
pop
inc
sub
or
shlb
add
lods
leave
jae
std
adc
sub
xchg
out
int
pop
mov
xchg
jge,pn
pusha
push
dec
mov
adc
loopne
fst
rolb
adcb
fiadds
sub
lods
sti
dec
or
jnp
jg
push
push
and
xor
test
push
xchg
loope
popa
mov
movsb
shll
push
xor
jmp
sti
dec
xchg
mov
jbe
ds
push
pop
inc
dec
push
sub
dec
je
mov
push
jg
mov
mov
push
adc
ror
adc
xchg
test
sahf
inc
cmp
lar
repnz
mov
xchg
mov
ds
in
lea
xchg
pushl
outsl
lds
inc
cmp
push
cmp
xlat
fldl
fstps
clc
and
cmp
loop
pop
hlt
mov
push
sub
inc
add
cld
pop
stos
cmp
pop
xor
cmp
add
shrl
pushf
xor
or
add
enter
mov
mov
mov
and
cmpsl
mov
addr16
cmp
and
xlat
inc
jmp
rcll
sarb
dec
dec
ss
fst
lds
cs
inc
sub
lret
fcmovb
mov
sbb
fxch
mov
lea
add
pushf
mov
xchg
xchg
jl
adc
fcomps
jae
sub
shlb
movsb
repnz
pop
outsb
push
push
mov
lahf
or
xor
stos
shll
lea
adc
fmuls
and
cwtl
jae
mov
cwtl
mov
or
gs
pop
sbb
imul
cli
out
xor
pop
inc
test
jb
outsl
push
add
stc
or
int3
fwait
mov
jne
and
cmc
repz
lret
in
sbbb
dec
mov
fcomi
subl
inc
aaa
sub
sbb
jecxz
jmp
xorl
jge
cmp
jg
or
sbb
push
int
cli
aam
xchg
lea
bound
inc
add
mov
or
sarb
xchg
mov
inc
inc
je
adc
clc
pusha
aam
mov
idivl
inc
and
or
cs
std
fucomp
iret
xchg
xor
loop
popa
jbe
xor
es
sti
add
fisubs
cmpsb
xor
stc
test
add
or
rorl
mov
test
ljmp
mov
mov
push
xor
sub
jmp
enter
negb
pop
pop
stos
pusha
xor
out
or
int3
lds
fwait
mov
addr16
dec
cmc
mov
mov
test
ja
sbbl
lock
roll
lret
xchg
mov
mov
scas
push
dec
xor
adc
add
jecxz
lret
sti
shr
xchg
mov
inc
jae
and
cmp
scas
aam
mov
popf
inc
jno
jnp
inc
jb
addl
vpsubusw
mov
inc
dec
sbb
pop
and
int3
mov
icebp
mov
test
sbb
sub
and
ds
xorl
subl
cmp
icebp
dec
lahf
mov
push
mov
ret
icebp
xor
sub
movaps
std
insl
lcall
jb
xor
int
std
lock
or
cwtl
test
leave
jns
jmp
insb
pop
cmp
test
int
lea
jg,pt
sbb
add
psubsb
test
fimull
imul
and
inc
sub
fmull
mov
stos
jne
dec
mov
xor
loop
push
loopne
fmul
mov
aaa
movsb
jne
pop
dec
inc
xor
push
inc
or
jnp
mov
arpl
iret
sub
bnd
iret
scas
xchg
pushf
mov
scas
dec
xor
daa
adc
cltd
or
sarl
ss
pusha
and
and
or
sti
push
sub
cld
insb
cltd
mov
outsl
pop
push
inc
or
lods
fmul
in
pushf
mov
xorb
push
xor
mov
in
mov
sahf
insb
adc
pop
push
in
lret
mov
and
mov
xchg
mov
dec
movsl
cmc
and
fs
mov
stos
jp
stos
dec
inc
sysexit
fcoml
mov
xchg
mov
inc
add
int
call
shlb
lcall
push
inc
jae
bound
dec
test
leave
xor
or
and
mov
and
cwtl
sub
inc
jmp
jp
imul
mov
inc
arpl
fwait
mov
leave
shrl
lret
and
sbb
clc
shr
or
add
out
jmp
out
adc
push
cmp
mov
nop
xor
jmp
or
std
mov
shrb
xchg
sbb
xchg
out
out
hlt
shrl
sbb
test
adc
sbb
dec
lret
test
mov
faddl
popa
in
sbb
mov
leave
shrl
xor
jne
or
mov
dec
inc
xor
xchg
ja
and
add
sbb
mov
sbb
shrb
mov
mov
lret
or
inc
jle
inc
or
mov
mov
stos
or
mov
lods
or
call
sbb
rcll
ret
sub
mov
add
jns
xor
mov
pop
push
out
dec
and
adc
clc
in
mov
xchg
xchg
inc
mov
xor
test
repnz
lahf
xchg
jg
ss
nop
dec
sbb
and
mov
enter
jge
je
dec
inc
pop
sub
add
adc
sub
jae
jge
mov
ret
das
dec
jb
push
cmp
mov
xchg
int
pop
outsb
bound
pusha
adc
sbb
add
add
scas
mov
gs
dec
inc
mov
sub
add
sarl
xorl
and
cld
pusha
pop
loopne
mov
mov
repz
movq
mov
jg
pop
dec
inc
sub
adc
cli
out
loop
lret
cmpsb
lcall
inc
cmp
icebp
in
int
mov
popf
xchg
test
pusha
push
dec
cmp
and
or
hlt
call
lods
mov
addr16
dec
inc
aaa
sub
adc
sti
out
jecxz
lret
mov
xorl
push
inc
cmp
and
or
repnz
into
ret
sahf
xchg
xchg
popa
push
dec
cmp
add
jmp
lods
mov
fs
dec
inc
xor
sbb
add
in
loopne
enter
cwtl
mov
inc
cmp
and
or
repz
iret
ret
mov
lahf
xchg
xchg
bound
xor
sbb
add
ljmp
xchg
mov
gs
dec
inc
xor
stc
in
loope
leave
mov
xorl
and
cld
lock
int3
shlb
arpl
aas
xor
sbb
add
jmp
rol
mov
jg
pop
dec
inc
sub
adc
cli
out
loop
lret
cmpsb
lcall
inc
cmp
icebp
in
int
mov
popf
xchg
test
pusha
push
dec
cmp
and
or
hlt
call
lods
mov
addr16
dec
inc
aaa
sub
adc
sti
out
jecxz
lret
mov
xorl
push
inc
cmp
dec
test
mov
xchg
cmpsl
xchg
jp
pop
dec
xchg
xchg
popa
jb
pcmpgtd
stos
jecxz
mov
bound
xchg
mov
fs
or
mov
mov
push
mov
xchg
std
sub
shrl
adc
dec
lods
lahf
xchg
xchg
jae
fadd
add
out
mov
pop
notl
pop
push
repz
adc
xchg
push
mov
push
or
push
inc
cmp
lcall
shlb
add
or
jmp
fdivl
xor
or
add
dec
inc
sub
aaa
rorb
subb
pop
inc
jae
push
pop
inc
call
and
add
add
adc
add
add
add
