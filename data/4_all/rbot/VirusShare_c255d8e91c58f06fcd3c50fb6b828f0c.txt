dec
lea
ja
mov
and
aad
xor
xchg
cmp
stos
mov
out
js
pop
add
enter
xchg
rcl
dec
enter
xchg
sub
out
mov
ficomps
cmp
cs
mov
test
or
inc
mov
and
inc
mov
adc
cwtl
sub
mov
jo
sub
and
jbe
cwtl
mov
movsl
sahf
sub
stc
rol
dec
lods
bound
rorl
mov
out
dec
xor
mov
jae
xor
rcrl
loopne
fcmovb
mov
pop
or
pop
fiadds
dec
bound
mov
ficoml
shll
and
bound
js
push
mov
fs
pop
mov
or
sbb
shrl
xchg
cli
leave
xlat
lcall
pop
xlat
outsb
mov
fdivp
xchg
xlat
jl
imul
jnp
mov
mov
outsb
loope
sahf
ret
sub
stc
pop
mov
std
xor
mov
sub
cmc
addr16
repnz
sub
out
lea
adc
sub
adc
outsb
jl
outsb
decl
mov
cmpsl
cld
lods
mov
sbb
iret
cmp
and
mov
jns
ss
ja
pop
xchg
or
outsb
cvtpi2ps
into
and
add
sbb
xchg
jp
and
pop
xchg
scas
add
in
xor
daa
adc
es
and
enter
cmp
cmc
add
cmp
push
test
rorl
fisttpl
xchg
dec
jmp
ja
icebp
test
mov
mov
sub
sti
push
std
nop
sbb
add
adc
xchg
in
hlt
clc
in
inc
push
jge
cmpb
sahf
repz
xchg
movsl
sahf
inc
or
pop
les
pop
shrb
push
in
add
add
inc
rolb
test
jne
dec
cmc
push
pop
rol
daa
pushf
lods
cmp
cld
aaa
les
jbe
xor
and
sbb
jle
es
and
mov
xchg
dec
push
aas
subb
outsl
push
and
pop
pop
cs
lahf
adc
pushf
jns
mov
into
mov
ja
or
or
mov
mov
dec
and
dec
and
data16
and
nop
into
lods
cltd
bound
lret
scas
mov
scas
ror
call
mov
sbb
and
mov
mov
mov
add
movsl
add
daa
in
jmp
xchg
sti
lahf
xchg
xchg
dec
ficoml
movsl
pop
pop
cmpsb
repz
scas
jnp
jp
es
adc
ret
jns
add
scas
jnp
lock
add
mov
push
jmp
add
mov
sub
mov
enter
push
mov
mov
lock
sbb
push
fsubrl
lea
ljmp
adc
daa
inc
hlt
xor
cmc
rclb
and
jnp
sbb
dec
xchg
gs
or
mov
imull
in
das
inc
sub
stc
out
dec
or
sarl
outsb
pop
sbb
mov
das
cmp
loope
cld
pop
mov
fidivrs
movsl
in
adc
mov
pop
in
movsb
push
or
push
lret
cs
mov
and
xchg
xorb
ret
in
fidivrl
xor
inc
test
mov
hlt
fcoml
xlat
mov
sub
iret
sbb
out
pop
cmpsb
aas
xor
jge
mov
mov
sbbl
jno
cmc
sub
arpl
hlt
mov
jne
in
shl
adc
xor
cwtl
sub
imul
xor
lahf
and
dec
in
jb
or
cmp
jl
add
push
imul
and
mov
or
fs
add
cmp
mov
jbe
push
jae
jcxz
ret
xchg
and
xor
xor
dec
in
testb
mov
jno
dec
je
leave
inc
fadd
mov
pop
mov
test
xor
lds
les
daa
mov
mov
cmp
cli
push
sbb
call
popf
xchg
daa
xor
test
insl
push
cs
push
pop
add
cmp
ja
mov
mov
xchg
xlat
jb
adc
mov
adc
into
mov
into
mov
addr16
ljmp
in
imul
fsubrl
shrb
nop
sahf
clc
push
dec
lea
int
nop
jne
mov
xchg
adc
mov
mov
cmp
int3
lcall
jne
mov
loop
loopne
push
test
pop
xlat
xchg
test
xor
cmc
adc
push
xor
push
mov
or
xor
addr16
andb
inc
outsb
jecxz
jp
pop
mov
sub
ss
add
add
mov
xchg
mov
mov
lds
cmp
add
sbbb
fcoml
paddsw
faddl
pop
out
leave
mov
sahf
test
leave
je
jnp
and
int
or
shrl
ret
add
jnp
test
push
push
push
push
lea
push
push
push
push
push
add
pop
and
push
add
push
pop
jne
je
cmp
push
dec
pop
jg
rol
mov
and
push
jp
jo
test
pop
xor
cmc
push
jns
nop
pop
cmc
call
cmp
or
push
or
pop
cmc
rol
stc
pop
jp
jne
je
or
and
push
or
pop
cmp
xor
push
add
mov
pop
jns
or
push
pop
jb
xor
cld
shl
clc
clc
push
add
push
pop
pop
push
xor
pop
test
and
rol
std
cld
push
jle
xchg
xchg
pop
rol
test
clc
lea
mov
sub
push
dec
pop
cmc
testl
jne
jmp
js
push
sub
pop
or
push
je
sar
pop
cld
test
test
rol
stc
nop
test
test
add
or
push
sub
pop
cmp
push
push
mov
pop
pop
xor
xor
stc
ror
test
push
xchg
pop
push
pop
xchg
pop
loop
jecxz
repnz
sarl
mov
inc
fcoms
and
das
pop
ret
jno
cmp
out
push
das
xchg
jecxz
dec
pusha
in
ret
adc
xchg
jg
dec
mov
stos
xchg
jle
dec
fldt
jne
mov
xchg
and
dec
call
incl
push
push
test
pop
pop
jns
push
jne
jnp
xchg
pop
push
add
push
pop
dec
jne
clc
push
call
push
in
mov
pop
mov
pushf
clc
ljmp
ficomps
mov
mov
adc
push
sub
fnsave
ret
cmp
push
mov
outsl
cmp
push
sub
or
xor
mov
ss
adc
out
test
jecxz
mov
add
pop
cmp
test
push
pop
push
mov
pop
push
movzbl
test
nop
loop
pop
loop
jecxz
jb
gs
pop
aaa
push
insl
xchg
cmpsb
into
sbb
pushl
jg
test
and
cmp
xchg
dec
jne
nop
push
dec
pop
add
push
jp
sub
pop
push
push
mov
pop
pop
push
mov
pop
pop
popf
mov
sbb
lods
sti
mov
cmp
test
inc
icebp
jbe
iret
bnd
stos
ds
insb
adcb
sbb
in
daa
push
mov
ret
cmpxchg
test
bound
outsl
aaa
and
jecxz
pop
jbe
ljmp
lret
fistpll
inc
imul
popf
outsl
dec
out
movsl
or
fwait
loop
sbb
ret
sbb
imul
lods
fs
cmpsb
aaa
lcall
lods
push
sbb
filds
push
add
or
popl
xor
not
pop
adc
test
pushf
jg
sub
jae
lret
loope
ja
or
iret
mov
push
ds
fsub
roll
es
push
arpl
pop
cmp
and
jbe
xchg
dec
jge
cmpsl
out
int
sub
mov
fidivl
mov
and
daa
aad
enter
jmp
or
pop
adc
push
testl
mov
lds
andb
mov
sub
movsl
jmp
mov
inc
stc
sbb
dec
gs
fiaddl
push
mov
test
scas
loopne
flds
rcl
cltd
push
shlb
sahf
or
jecxz
daa
mov
nop
xchg
fsts
das
iret
mov
dec
decl
movsl
pushf
push
fwait
andl
loop
in
or
mov
fwait
dec
xchg
in
xchg
mov
inc
xchg
cltd
mov
jo
pop
or
pushf
push
into
hlt
iret
fsubr
in
jecxz
loopne
sbb
aam
fistpl
sub
jns
jmp
mov
scas
stos
fucomi
cmpsl
push
fiaddl
xchg
and
fdivs
loop
xchg
jp
fs
out
xchg
or
cmp
xchg
dec
mov
shll
and
inc
in
mov
pusha
test
into
faddl
lock
xlat
in
sbb
fs
sub
and
add
js
cmpsl
ret
push
fcmovnbe
mov
cmp
fsubrl
xor
adc
pop
jp
pop
loop
jle
and
ljmp
sub
lea
in
lcall
cmp
and
cltd
popf
jbe
in
xchg
lret
or
lock
sbb
sbb
push
and
sbb
ret
movsb
and
mov
push
sbb
sub
sub
and
xchg
pop
out
pop
pusha
or
cmp
push
push
arpl
dec
mov
mov
bound
sbb
xchg
jb
lds
lcall
jo
and
pop
sbb
jne
movsl
xlat
push
and
iret
and
sbb
aas
shrl
cmp
lods
and
subl
xchg
sub
leave
xchg
and
push
out
mov
xor
test
cmc
push
cmp
sahf
leave
addps
mov
ret
pusha
add
jmp
rclb
pop
icebp
adc
gs
add
aaa
addb
lock
jns
not
mov
xlat
mov
fmull
inc
push
loop
cmp
movsb
push
scas
jg
add
lods
and
xchg
sbb
or
outsb
or
cld
fnstenv
cltd
mov
mov
adc
sub
and
notl
bound
pop
pop
sbbb
add
jae
test
pop
and
out
pop
mul
adc
and
mov
scas
push
loop
cmpsb
sub
push
fcmovu
or
scas
loop
jle
test
in
jecxz
imul
xor
mov
imul
xchg
test
push
fadds
mov
mov
test
and
inc
insb
in
js
fbstp
xchg
sbb
pop
pushf
and
pop
dec
cltd
cmp
push
gs
mov
in
cmpsb
out
sbb
add
out
pop
imul
shll
jge
xor
scas
and
mov
aas
add
repz
out
bound
call
and
sbb
ret
dec
xchg
sub
dec
mov
or
lcall
mov
out
dec
jno
in
aam
mov
ficompl
jle
es
sti
addr16
jbe
mov
shrl
push
out
mov
sarl
pop
shrb
fstpt
stos
bound
scas
sub
inc
test
subb
add
fsub
out
sbbl
es
aam
mov
mov
mov
ret
outsb
adc
stos
xor
aaa
xor
pop
xchg
test
or
pop
std
das
stos
shll
les
fstl
lret
mov
scas
add
enter
and
rolb
pop
addb
push
mov
xchg
xchg
mov
or
xchg
popf
dec
add
fdivrl
cli
test
sbb
addr16
bnd
lds
int
inc
pop
xchg
xor
or
or
fmul
adc
jno
repnz
call
movsb
cmpsl
arpl
aaa
sub
pop
and
and
cmp
add
mov
mov
jecxz
js
loopne
nop
dec
and
mov
cltd
fs
sbb
popf
jae
sahf
scas
add
insl
mov
aas
fstpt
call
add
xchg
mov
sahf
ds
jbe
xchg
imul
daa
dec
xchg
repz
pop
sub
leave
fidivs
jl
push
cmc
mov
add
mov
out
push
mov
leave
mov
sub
dec
mov
std
fdivr
jo
or
imul
sub
jnp
popa
add
ret
gs
mov
mov
or
pop
repnz
push
xchg
sbb
cmpsb
mov
mov
mov
xchg
push
bts
int
fildl
pop
dec
mov
push
sub
jmp
dec
mov
adc
divb
pop
outsb
pop
mov
les
and
pop
ret
push
iret
into
inc
in
cltd
jne
int
or
popf
mov
loope
mov
dec
mov
xlat
ja
xchg
into
cmp
push
cmp
bound
inc
shlb
dec
adc
ficoms
sub
insl
test
mov
out
xor
add
loopne
out
sub
mov
loop
lods
arpl
aad
mov
fstps
int3
adc
mov
test
lods
mov
jl
and
or
leave
in
push
sahf
push
or
and
icebp
dec
cmp
pop
loope
je
jle
push
test
add
sbb
repz
and
pop
lea
jp
jne
movsl
stos
clc
dec
mov
sub
popf
fdivrs
dec
lods
xchg
jg
vmulss
ret
movsb
xchg
cwtl
pop
cmc
fisubrs
loop
cs
dec
mov
xor
incl
xor
scas
insb
mov
les
shlb
push
ss
xor
mov
mov
jno
add
mov
daa
inc
inc
outsl
scas
mov
lahf
cli
shll
pop
arpl
lahf
aad
pop
ret
icebp
outsb
repz
xchg
scas
icebp
movsl
fwait
mov
pop
int
neg
cld
mov
push
sub
or
xchg
test
sub
mov
xor
lret
push
adc
add
mull
daa
iret
jg
cmp
ret
sbb
push
pop
cmp
repz
push
pop
out
movsl
pop
cmp
loopne
js
ret
mov
rorl
cltd
in
jmp
loope
into
and
mov
shlb
or
les
mov
jns
lea
test
fbld
push
jne
fucomi
aas
cmpsl
cs
enter
rcll
adc
std
push
push
lret
outsl
sarl
mov
iret
in
rcrl
push
inc
imul
jb
mov
mov
jnp
int3
addr16
adc
out
mov
and
cli
inc
push
pop
scas
loopne
lret
cmp
out
sbb
rorb
inc
out
cwtl
imul
xchg
and
push
mov
loope
dec
les
daa
jo
push
jp
ljmp
xchg
add
cmp
dec
inc
cld
sti
fists
mov
jb
ficompl
rcrl
orb
mov
push
jg
pop
jbe
sub
sub
jns
mov
clc
xchg
push
arpl
divb
lods
add
js
imul
sbb
out
out
mov
jp
rorb
leave
cli
pop
add
jmp
xchg
pushf
icebp
add
fidivrl
jno
cmp
cli
fmulp
adc
add
mov
cmpsl
adc
ds
sbb
xchg
out
mov
daa
cmp
add
jnp
insb
mov
push
adc
arpl
push
fdivl
and
outsl
in
xor
pmulhuw
js
add
mov
std
mov
mov
pop
aad
pop
cmpsl
ljmp
mov
jae
sbb
fcomps
xor
mov
push
inc
adc
pop
or
xlat
ficompl
jb
and
jl
xchg
sbb
pop
ss
xchg
xor
ret
repz
add
mov
xchg
out
pop
jns
push
cmp
roll
adc
or
dec
aas
sub
int3
aam
sub
push
dec
cwtl
mov
movsl
les
ret
sarb
pusha
sub
dec
in
dec
xchg
sbb
in
fildll
pop
out
int
dec
lcall
shll
dec
bound
jge
imul
lahf
sbb
imul
inc
xor
mov
mov
mov
pushf
ret
mov
pop
and
add
arpl
mov
mov
loopne
idiv
mov
mov
and
divb
fistps
daa
mov
adc
mov
mov
xchg
in
cltd
jns
jge
inc
push
aas
inc
xchg
data16
xor
fs
inc
scas
aaa
inc
cwtl
mov
mov
or
aad
mov
cmc
dec
add
fucomp
test
repz
cs
leave
pushf
jmp
mov
notl
cmp
fistl
insl
adc
ficomps
sti
or
iret
inc
sbb
arpl
add
lock
test
xchg
out
fdivs
cmpsl
sahf
cmp
mov
clc
mov
leave
arpl
jle
out
add
loope
xchg
and
mov
jl
and
and
dec
out
lret
rorl
adc
jb
add
jbe
xor
out
pop
into
loop
mov
jbe
cmp
push
out
xchg
std
push
cmpsl
mov
inc
xor
orb
mov
in
movsl
mov
in
jo
clc
add
adc
scas
xchg
jle
loop
movsb
cmp
out
ficoms
mov
pop
jl
push
xorb
xor
mov
jo
jb
jecxz
mov
in
adc
jle
aad
rol
dec
mov
mov
aad
fsubrl
aaa
pop
incl
mov
ja
xor
hlt
ja
xchg
push
stc
clc
pop
loop
add
or
xchg
inc
je
ret
push
imul
pop
roll
cmp
ss
pop
or
xor
scas
cwtl
inc
mov
or
push
xchg
js
std
xor
stos
lea
dec
and
inc
pop
out
fucomi
enter
loop
push
imul
lods
xchg
cld
test
int3
subb
mov
ficompl
adc
add
pop
pop
iret
test
dec
mov
mov
xchg
out
sbb
sarb
push
ret
js
jmp
in
sub
jne
jb
shll
lret
sbb
push
mov
mov
mov
dec
adc
cmpsb
scas
xchg
xchg
xlat
addr16
rorl
lcall
xor
adc
xorb
lods
out
cltd
rcrl
cmp
push
jnp
lea
out
pusha
sbb
inc
pop
adcb
jae
loopne
out
movl
jns
dec
das
dec
lds
jp
or
jecxz
push
dec
or
pushf
xlat
in
add
jle
sub
xorb
xchg
xor
pop
xchg
loope
xor
movsb
mov
adcl
pop
loope
cmp
lods
sbb
mov
inc
cltd
mov
sub
jecxz
jge
fwait
lahf
nop
ds
leave
or
jbe
jo
gs
pop
dec
fcomp
mov
cld
mov
and
pop
inc
push
adc
sbb
je
sbb
movsb
sub
in
mulb
mov
xorb
lock
loopne
leave
xchg
adc
ljmp
in
and
mov
sub
push
sbb
imul
mov
lds
fld
mov
mov
sub
mov
pusha
cmp
cmp
mov
movsl
in
xchg
lds
lret
and
dec
dec
js
jb
pop
mov
out
fsin
das
insb
cmp
push
cmc
adc
sbb
push
mov
xchg
stc
nop
aad
mov
fidivrs
cmp
inc
push
dec
ja
mov
fs
shrb
pop
jle
das
stc
ljmp
outsl
repnz
shlb
fcoms
int
fwait
jo
arpl
xor
inc
adc
sub
mov
sub
xchg
daa
repz
mov
data16
and
xchg
loop
xor
and
xor
pop
jl
and
shlb
and
cmp
xor
movsb
lret
in
outsl
dec
add
jnp
adc
scas
jecxz
sbb
cltd
dec
mulb
sbb
in
jns
insl
jp
mov
adc
xor
xchg
ljmp
and
mov
popa
pop
stos
dec
stc
pop
mov
adc
jne
sub
inc
clc
add
xorl
incl
dec
push
push
mov
xor
addr16
and
push
cltd
lret
fdivr
scas
nop
and
fildl
jbe
ljmp
ret
pop
xor
arpl
cwtl
out
std
add
stc
or
push
lret
clc
jne
mov
lds
imul
pop
jmp
push
dec
sbbb
mov
push
mov
cmpsl
sub
shl
psubusb
cli
or
push
loope
dec
mov
nop
add
sbb
dec
lods
inc
adc
pop
mov
shll
popa
xlat
jg
mov
mov
pop
vpmulhuw
push
mov
and
xchg
xorl
push
lds
sbb
mov
push
mov
sub
and
stos
repz
out
push
ja
arpl
into
or
movsb
xor
cli
inc
push
cld
iret
ret
cmp
jns
lahf
idivb
pop
xor
aaa
inc
xchg
pop
enter
stc
fninit
or
adc
nop
xchg
pop
lods
addr16
stos
test
rcrb
xchg
ljmp
in
outsb
jg
int3
dec
call
fimuls
dec
xchg
arpl
sub
cs
push
cmpsl
and
mov
fdivrp
pop
adc
pop
pop
out
adc
outsb
xchg
das
pop
icebp
mov
in
pop
lock
push
enter
or
lret
push
call
push
xchg
mov
add
fiadds
xor
push
or
pop
bound
sub
int3
imul
inc
jne,pt
daa
bound
sbb
and
test
sbbb
fmull
scas
mov
cmp
pop
push
mov
add
inc
fs
bound
lcall
dec
sub
dec
rcll
push
pop
out
inc
pop
dec
test
jo
lcall
int3
mov
nop
iret
addl
into
add
cltd
sarl
adc
cmp
inc
adc
lock
mov
icebp
sbb
xchg
rolb
xchg
and
inc
jecxz
out
dec
mov
in
xor
jge
sti
pop
decl
xor
rcr
daa
mov
sti
sub
int
dec
mov
jne
cmp
lock
ljmp
mov
fiaddl
mov
test
enter
enter
or
push
and
sbb
loopne
cmp
mov
out
push
insl
inc
mov
lds
add
and
ret
pop
nop
arpl
pushf
leave
mov
push
cmp
push
pop
lods
int
into
aas
es
popa
repz
iret
aaa
outsb
stos
or
inc
xchg
adcl
les
fnstcw
je
inc
push
test
mov
adcl
mov
sbb
jne
popa
lcall
dec
popl
fsubs
fcoms
loopne
std
push
rcrb
adc
shlb
adc
xchg
ficoml
or
cmpsl
fmuls
out
jae
sarl
jle
pushf
lcall
mov
jg
dec
fdivrp
dec
pop
je
cmpsl
ret
sbb
fwait
dec
and
mov
push
lcall
lods
mov
pop
jl
ja
xchg
add
mov
mov
lock
sbb
rolb
stos
sub
jae,pn
mov
sbb
ljmp
in
mov
mov
outsl
xchg
cmp
push
xor
sarl
int
pop
imul
xor
pop
stc
lea
in
xchg
push
cmpsl
dec
sbb
jnp
cmp
in
jbe
sub
xor
or
sbb
into
pop
mov
xchg
dec
mov
repnz
iret
into
xchg
addb
js
xor
ja
cmp
xchg
hlt
push
cmpsl
jo
sbb
pop
cmpsb
push
imul
sbb
lods
pop
cmp
insb
jo
dec
lods
out
sbb
out
cltd
mov
xor
inc
and
mov
in
sbb
jge
inc
neg
fcom
inc
inc
popf
aaa
fnstsw
cmp
cld
push
jne
repnz
inc
jle
adc
icebp
jge
out
or
sub
inc
pop
push
pop
insl
jae
nop
mov
inc
cmp
insl
pop
negl
mov
sub
cs
jno
ljmp
leave
mov
pop
pusha
jl
fisubrl
xor
push
push
fadds
adc
xlat
out
add
add
sbb
cmp
add
xor
jae
cmpsl
lcall
xchg
dec
popa
std
cmp
sbb
ljmp
jp
dec
adc
aas
adc
lods
in
fisttpl
clc
add
jae
push
repnz
ret
pop
jl
pop
sti
cwtl
jg,pt
daa
fistl
adc
mov
roll
lods
jle
mov
push
bound
add
ret
xchg
jecxz
xor
sbb
xchg
or
idiv
inc
popa
xchg
sbb
cmp
push
jp
pop
sbb
cmpsl
push
push
push
inc
mov
jecxz
push
arpl
jg
loopne
sbb
push
mov
test
les
mov
movsb
lods
pop
jle,pn
mov
push
push
adc
in
gs
loop
stos
xchg
sbb
add
je
push
gs
les
cld
cwtl
int3
xor
jno
sub
adc
shlb
sub
push
js
inc
mov
stc
or
out
jbe
loop
jne
jmp
lock
cli
or
pop
sub
loopne
mov
mov
sarl
xchg
sub
xchg
sbb
sub
lgs
jo
lds
xchg
xchg
testb
mov
arpl
xchg
or
sbb
cmp
jns
push
sldt
mov
sub
mov
fs
rolb
pop
cmp
fmuls
int3
into
vpshufhw
adc
subl
or
mov
sub
jne
jmp
call
push
xchg
stos
cwtl
jns
mov
inc
inc
sub
mov
sahf
xor
jp
push
fs
jbe
stc
test
xchg
or
bnd
xchg
and
daa
ss
dec
adc
inc
cmp
and
std
adc
pop
fimull
cltd
xchg
xor
push
sahf
mov
xor
mov
push
test
aam
nop
sbb
ja
rclb
cltd
pop
lods
loop
daa
std
cmp
mov
cmp
xor
fidivl
mov
and
out
mov
cmp
je
adc
gs
shlb
sub
mov
sub
push
cmc
cmpl
mov
jno
imul
hlt
or
cltd
push
xchg
ficoml
addb
stc
stc
and
sub
sub
cltd
ror
imul
imul
adc
dec
mov
mov
loopne
lret
pop
cmpsb
movsl
hlt
jb
jg
popf
mov
inc
and
dec
pop
pop
ret
xor
sub
add
adc
scas
into
sub
xor
outsb
cli
or
push
pop
into
ja
shlb
mov
pop
mov
cmp
les
jecxz
xor
cmpsb
sub
lods
cltd
xchg
sarb
fidivs
sub
test
xor
fs
cltd
inc
jno
cld
mov
add
dec
out
inc
stos
je
icebp
fwait
mov
daa
loop
mov
add
push
add
in
lea
jmp
je
adc
sti
lahf
pop
xchg
sub
and
movsb
or
testb
fs
push
sub
or
jae
mov
pusha
stos
pop
jnp
sbb
into
xchg
stos
push
arpl
xchg
mov
and
scas
cmc
pop
xor
repz
bound
inc
ljmp
jb
inc
out
lahf
push
sub
lret
mov
sbb
mov
push
ret
ret
cmc
mov
inc
popa
push
cld
js
hlt
popf
cmp
fisttpl
mov
test
out
cmp
and
xor
insl
mov
sub
sub
shll
jnp
in
or
fwait
adcl
sti
mov
insl
adc
mov
xchg
adc
lods
or
ds
fadds
movsb
popa
and
and
sub
hlt
js
mov
rcrl
sbb
adc
mov
inc
fcompl
xchg
dec
dec
pop
mov
fstpt
lahf
adc
outsb
jg
imull
inc
pop
dec
in
push
clc
xchg
rorb
int
aaa
jne
outsb
sbb
call
cwtl
iret
js
aaa
cmp
push
into
shll
sub
imul
enter
shrb
mov
arpl
add
cmc
add
adc
cmpl
out
fldl
lcall
sbb
xor
int3
clc
out
outsb
adc
test
xchg
and
jno
shrb
punpckldq
lahf
push
sbb
ljmp
lds
lcall
jno
inc
out
pop
test
xchg
sub
clc
cmp
jnp
mov
pop
lods
sub
jl
adc
jmpw
mov
fsts
dec
stc
test
test
push
adc
mov
push
fstl
mov
inc
xchg
add
cmpsb
les
dec
js
push
addr16
in
lds
jnp
cmp
cmp
clc
repnz
xor
aas
mov
popf
repnz
insb
lret
fsub
out
imulb
addr16
push
nop
mov
xchg
mov
jae
xchg
jmp
loope
jo
in
jle
sti
add
fdivr
cmp
stos
popf
lret
pop
int3
mov
mov
and
call
lock
xchg
mov
push
mov
shrb
mov
xor
mov
fmul
cmp
iret
in
arpl
sbb
fists
aam
lret
movsl
add
lock
in
or
enter
jb
mov
loope
cmp
xchg
pop
jp
pop
ss
cs
addr16
jo
mov
cwtl
daa
jp
dec
mov
or
push
cld
mov
sbb
into
ss
rcrb
mov
add
loopne
les
or
xadd
sub
insb
xchg
dec
mov
inc
mov
mov
scas
dec
cmp
movsl
popa
add
movsb
mov
mov
push
mov
gs
leave
scas
hlt
pop
rolb
popa
in
hlt
leave
jo
or
adc
lods
out
test
ja
sbb
sbb
xchg
fwait
pop
inc
in
pushf
add
out
add
jns
inc
push
dec
xor
sti
pop
mov
fnstsw
popa
mov
call
pop
xchg
push
cwtl
lods
cwtl
mov
fidivrl
sbbl
xchg
jo
sbb
cmpl
lods
push
jg
leave
frstor
or
movsl
pop
test
int
sub
push
cli
jne
fistpll
mov
jae
lods
sbb
jns
out
mov
mov
enter
imul
inc
sbb
cmp
jp
aad
or
in
pop
mov
stos
mov
cmp
xlat
dec
mov
jmp
fdivs
cmp
adc
addr16
mov
sbb
pop
pop
add
xchg
jnp
mov
std
xorb
mov
add
mov
popa
in
in
bound
push
movsb
push
fnstenv
xor
add
movsl
lahf
push
cmp
mov
iret
adc
test
jecxz
pop
inc
orl
inc
hlt
sub
mov
cmovl
cld
pop
in
loope
aad
push
inc
jmp
push
outsl
lcall
jmp
test
imul
pop
mov
push
mov
add
outsl
lret
ret
testl
xchg
mov
mov
aad
adc
lock
cmpsl
xor
pop
sbb
cs
cmp
sbb
fisttpl
add
sarl
add
sub
pop
sub
mov
inc
mov
arpl
inc
cmp
negb
xor
jg
dec
sub
lcall
add
das
ror
add
out
xor
mov
out
je
cmpl
adc
test
pop
adc
push
push
popf
mov
push
in
or
movsl
mov
inc
sahf
pop
push
aam
iret
add
pop
fcomps
and
mov
fisttpll
mov
jns
jl
mov
xlat
mov
out
rcrb
dec
dec
ds
in
dec
and
imul
xchg
mov
das
rep
dec
loop
cmp
sbb
gs
out
popa
in
stc
or
pushw
mov
ljmp
sarl
sub
jno
test
push
popf
dec
and
movsl
sub
mov
sbb
in
hlt
push
xor
iret
pop
les
vdivps
cld
test
mov
pop
mov
and
adc
sti
sub
mov
push
xchg
mov
push
xchg
sarb
dec
cs
and
cmp
add
ds
dec
push
xchg
dec
add
or
ret
icebp
adc
fsubrs
pop
push
in
imul
add
sub
mov
pop
xor
fsubrs
pop
pusha
fimuls
popa
jnp
movsb
js
test
sub
pop
mov
mov
jbe
pop
clc
cmp
ljmp
pusha
xchg
ljmp
shrl
mov
es
clc
and
push
in
pop
sub
les
repnz
and
scas
push
movsl
fnstsw
lahf
push
mov
or
or
jb
bound
lea
testb
or
rclb
pop
leave
loope
lods
xchg
push
popa
js
arpl
sbb
popf
pusha
aad
and
lods
adc
and
mov
out
popa
xor
andl
push
mov
or
or
outsl
or
ljmp
sub
mov
bound
int3
fisubrs
xchg
enter
fwait
fwait
add
sbb
shrb
or
sbb
and
push
mov
mov
cmp
test
cmpb
lret
fwait
or
dec
lcall
sbb
mov
enter
adc
es
aaa
mov
daa
outsl
cltd
leave
les
pop
fdivs
rorl
sbb
and
movsl
jmp
sti
jo
pop
and
addr16
xor
insl
jb
stc
repnz
inc
shll
inc
adc
movsl
aad
cmp
inc
cmp
mov
test
aam
cmp
pop
shrb
jae
pop
jg
adc
push
sub
jge
fdivs
outsl
cmp
mov
ret
mov
cmc
cmc
dec
push
push
je
xchg
rcrl
dec
dec
mov
or
ss
pop
push
subb
and
cli
inc
aad
xor
sbb
jo
or
and
sub
jp
jmp
add
hlt
repnz
sbb
outsl
dec
mov
int3
pushf
push
iret
add
loop
je
lret
mov
stos
lods
mov
mov
adc
outsl
cmp
testb
out
inc
xchg
movsb
xor
ja
and
scas
xchg
ret
aam
xchg
jb,pn
mov
ljmp
jp
jg
jbe
leave
test
ret
cwtl
cld
iret
mov
adc
adc
adc
sbb
fstl
into
cmpsl
dec
sbb
sbb
outsl
mov
loopne
lret
sub
es
stos
add
sub
mov
push
cwtl
mov
xor
inc
or
and
dec
in
lcall
scas
shlb
push
int3
mov
movsl
jmp
mov
adc
fs
loopne
xor
outsl
push
in
orl
jnp
das
out
cmp
stc
popf
sbb
sbb
bnd
icebp
in
rcr
xchg
cli
rcll
outsl
push
jecxz
jp
mov
pusha
shll
outsb
sti
iret
dec
xor
sub
nop
loop
mov
decl
js
gs
lahf
jge
in
mov
dec
stos
push
jae
dec
or
mov
inc
dec
out
sbb
call
pop
adc
xchg
mov
xor
xlat
jle
mov
mov
mulb
dec
pushf
test
daa
cmp
inc
fsubl
inc
sbb
add
add
lcall
and
push
movl
insl
adc
sub
xor
jb
cld
jae
xorb
mov
mov
fcompl
sub
cs
mov
xchg
inc
or
push
mov
out
jno
rol
pop
arpl
inc
scas
mov
adc
pop
xor
push
pop
mov
adc
outsl
jae
ret
sub
lds
cs
cmp
insb
es
sub
or
nop
aad
sub
jbe
nop
mov
mov
aas
mov
and
push
testb
es
jb
dec
test
repnz
pop
mov
jmp
scas
les
xor
and
push
xor
inc
test
mov
mov
inc
repnz
icebp
loop
xor
call
or
bound
stos
out
les
mov
aam
aaa
xor
out
shlb
jecxz
and
mov
test
insb
inc
xchg
push
mov
out
or
cltd
rolb
add
and
xchg
pop
jge
lods
push
and
insl
xchg
jle
xchg
pop
cld
daa
imul
sbbl
repz
in
cmp
out
xor
stos
popf
inc
mov
jnp
fmuls
sub
mov
pop
rol
ret
js
push
icebp
jns
cmp
add
lea
shll
xchg
fwait
pmuludq
mov
mov
sbb
insb
rorl
bound
sub
stos
mov
mov
ror
adc
adc
xor
ja
jle
inc
jge
push
jo
outsb
add
inc
test
mov
cld
ret
divl
inc
and
sub
push
fucomip
inc
push
add
cmp
pop
imul
in
pushf
and
mov
ret
out
lds
pop
insl
ret
inc
stc
and
mov
inc
cmp
daa
orl
push
inc
cmp
movsl
cmp
cmp
repz
mov
mov
inc
mov
sbb
outsb
add
cltd
push
sub
mov
out
std
sbb
and
dec
arpl
cld
jl
cmp
cs
es
sub
dec
in
jl
jae
xor
xlat
push
hlt
arpl
sub
mov
xchg
fldenv
push
xor
inc
adc
xchg
out
test
aas
mov
adc
inc
jns
js
cmp
jg
aaa
movsb
jmp
imul
imul
and
dec
xor
adc
in
push
and
adc
push
jo
push
fistl
cmp
jbe
xchg
cld
sub
lcall
sub
sbb
nop
lret
cmp
into
mov
into
dec
dec
sbb
ljmp
jns
inc
and
xchg
jmp
stc
aam
out
xchg
pop
fldt
or
add
jne
imul
xchg
sub
push
ret
inc
lahf
fidivl
or
mov
add
in
sbb
cwtl
cmp
jmp
or
repnz
out
cmp
dec
add
dec
insl
add
inc
loope
and
into
and
outsb
repz
cmpsb
or
push
mov
jle
jnp
ret
mov
das
dec
in
add
push
nop
jae
mov
sub
cmp
push
adc
out
std
cmp
imul
pop
aam
jb
mov
sbb
adc
test
outsb
mov
pop
xor
arpl
pop
das
mov
stos
and
into
dec
leave
xchg
cs
imul
or
pop
data16
out
xchg
das
fdivrs
sub
int
mov
cmp
dec
cmp
pop
cmp
pop
sbb
add
and
xchg
pop
test
das
call
add
insb
push
js
xor
cmp
push
xor
outsl
int3
adc
mov
scas
fisttpll
add
xor
arpl
jg
out
sub
push
mov
xchg
xchg
xor
ret
aad
mov
xchg
or
into
mov
fs
es
push
repnz
jg
and
fbld
nop
int
xchg
dec
and
outsb
mov
sbb
mov
stc
or
bnd
cmp
and
shll
sub
xchg
pop
adc
rolb
sbb
pusha
inc
fwait
pop
xor
pop
in
cmp
cmp
mov
sub
cmpsb
fidivs
test
in
ret
pop
lret
mov
xor
xor
lahf
push
faddl
adc
sub
mov
xchg
cwtl
adc
sbb
repz
xor
xchg
xchg
jl
adc
or
testl
jb
xchg
leave
xchg
scas
lock
imul
leave
repnz
roll
jo
adc
sbb
sbb
mov
sub
inc
popa
jp
movsl
xor
loop
add
xchg
cltd
fwait
nop
mov
inc
lahf
mov
cmp
xor
add
push
pop
outsl
inc
sub
hlt
xchg
dec
sub
jl
sub
sarl
pop
and
icebp
ljmp
dec
sub
jns
push
inc
jmp
movsl
aaa
sub
push
push
lods
shll
in
sbb
add
inc
subl
jecxz
jo
lcall
and
int3
adc
in
sbb
adc
mov
repnz
mov
aad
xchg
sbb
aad
fcmovbe
mov
sub
out
adc
or
sbb
stc
push
pusha
mov
repz
ret
cmp
pop
rorl
push
scas
push
and
inc
ret
push
aaa
xchg
rorl
xor
push
inc
pop
sub
insl
enter
dec
xchg
nop
test
mov
xchg
iret
fld1
jecxz
jl
pushf
sbb
or
in
stos
push
push
icebp
dec
push
push
leave
mov
mov
sbb
adc
test
inc
mov
jecxz
pop
adc
xor
xchg
dec
cs
aam
daa
jno
sarb
mov
xchg
loope
ljmp
xchg
push
xor
xchg
xor
mov
addr16
inc
jle
xor
inc
jno
int
in
mull
test
mov
adc
mov
dec
jno
or
lcall
mov
jp
dec
cmpsl
add
and
pop
or
pop
das
jb
scas
cmp
inc
ret
pop
or
xchg
sub
dec
arpl
das
sbb
jle
js
adc
xchg
xchg
cmp
fs
xor
popa
in
insb
into
add
add
shl
xchg
or
bnd
flds
cmpl
daa
jbe
adc
add
aam
cld
xchg
std
cld
pop
jecxz
push
mov
push
addr16
mov
xchg
sub
fwait
cmpsl
inc
aas
lahf
test
pop
pusha
je
push
push
adc
or
popf
loopne
out
notl
out
add
push
pop
in
std
ds
scas
cmp
shl
lret
lret
xchg
iret
cmp
push
mov
pushf
rclb
in
nop
popf
repnz
inc
xchg
pushf
xchg
push
xchg
push
inc
mov
pop
add
sub
ljmp
out
ja
mov
xchg
aam
push
push
rolb
push
or
clc
js
mov
je
mov
xor
push
fwait
cmp
jne
insb
fisttpl
enter
outsb
and
lret
js
push
add
inc
mov
and
lods
dec
lahf
xor
xor
mov
mov
out
cmpsb
cmpsl
fs
test
icebp
sbb
cwtl
in
xchg
addr16
sarl
jo
or
aad
cmpsb
cmc
js
mov
test
sahf
xor
inc
fwait
sbbl
push
jmp
lds
addl
inc
inc
aaa
les
sbb
in
hlt
mov
shrb
sub
cmpsb
add
add
lock
outsl
xor
es
mov
sub
pop
dec
or
pop
and
ret
cld
sti
mull
pop
cmp
mov
push
dec
jl
out
es
jae
scas
xchg
xchg
xchg
pop
mov
in
mov
scas
cltd
movsb
pop
ret
gs
in
das
loop,pt
pop
jg
rclb
cwtl
cli
cmp
pop
push
and
mov
call
or
pop
or
cmp
and
mov
nop
jnp
sbb
mov
push
xchg
cmc
in
sbb
adc
pop
dec
sub
inc
pusha
sub
mov
adcb
rolb
dec
ja
mov
pop
mov
nop
push
orl
icebp
gs
mov
scas
lock
mov
mov
sub
cmp
insl
sbb
testl
inc
or
fstl
stos
jbe
jno
mov
lahf
aam
sete
pop
mov
inc
cmpsl
movd
pop
push
js
sbb
dec
scas
jmp
mov
cmp
mov
sbb
sub
dec
or
push
adc
push
cmp
add
cmc
into
mov
xor
xchg
or
pop
imul
push
sbb
mov
test
jle
xorb
cmp
jae
aas
aad
xor
clc
mov
inc
int3
jnp
stc
mov
cmp
xchg
je
ja
rcl
dec
mov
mov
icebp
and
out
push
roll
jp
mov
aad
out
cmp
call
jno
enter
or
xchg
adc
jmp
idivb
test
adc
jmp
fwait
mov
sbb
movsl
sbb
add
shrb
jb
ret
mov
dec
fisttpll
push
mov
and
sub
mov
jns
dec
notl
jle
call
stos
jg
sub
lcall
out
dec
je
mov
lahf
push
aad
loop
xor
and
xlat
mov
push
or
dec
aaa
cld
mov
and
mov
push
mov
cmpsl
fs
lds
ljmp
push
adc
sub
xor
mov
pushf
xchg
dec
mov
lods
lcall
popa
stos
sbb
adc
jge
and
shrb
fadds
jmp
pop
dec
push
aam
pop
pushf
dec
aam
push
std
push
icebp
xchg
mov
out
push
cwtl
shll
pop
xchg
sub
iret
inc
ret
sahf
cmp
flds
scas
add
sbbb
imul
test
adc
testl
sub
addr16
and
and
loop
push
imul
cmp
adc
fldt
test
mov
jnp
rolb
std
addl
xor
and
cltd
stos
or
addr16
mov
add
cs
outsl
xchg
or
aad
mov
mov
dec
inc
outsb
pop
cmpl
lahf
fdiv
push
jp
and
ret
mov
adc
add
stc
andb
insl
xchg
xchg
push
xor
ret
push
aas
cmpl
fisubrl
adc
xor
cltd
add
mov
int
dec
loopne
scas
mov
mov
mov
data16
idivl
sbb
pop
fwait
jl
jge
lret
shl
xor
in
push
scas
xchg
lods
out
daa
add
les
rorb
fisubrl
outsb
aaa
xchg
dec
mov
xor
pop
mov
adc
jns
inc
fcoms
or
pop
popa
rclb
pop
cli
mov
enter
jp
push
cmp
and
jmp
mov
and
adc
mov
jl
sti
adc
fnstsw
pop
push
aas
cmpsl
pop
fsubrl
aas
movsl
push
in
dec
clc
mov
xor
xor
and
xor
sub
scas
mov
cli
ds
or
pop
in
xor
add
sbb
dec
in
rcrl
adc
aas
dec
enter
inc
js
test
mov
pop
shl
sub
and
mov
lods
adc
pop
or
imul
xor
scas
out
inc
sbb
xchg
mov
js
jo
sub
movsl
and
push
rorl
xor
mov
xor
push
adc
push
inc
pushf
sub
dec
scas
mov
dec
cmp
bound
lds
push
addr16
inc
xchg
adc
or
in
and
inc
aad
lret
xchg
stos
mov
test
movsb
or
pop
loop
push
mov
hlt
lahf
cmp
xchg
sub
cmp
add
or
pop
mov
xor
pop
dec
jg
push
and
push
les
cmp
xchg
or
arpl
jle
pusha
lds
lods
or
cmpsl
push
in
and
pop
std
mov
sub
push
fiadds
jo
test
cmp
pop
push
insl
call
sub
inc
insl
outsl
bound
pusha
mov
jne
lahf
enter
mov
out
mov
outsb
sbb
imul
or
xchg
movsl
fidivrl
xor
repz
jno
loope
xchg
aaa
pop
and
rorb
call
sarb
pop
mov
push
mov
or
cmp
mov
xor
shrl
mov
cmp
ret
sub
mov
gs
addl
dec
loop
jmp
cltd
out
cmp
in
adc
dec
dec
icebp
mov
mov
ficoml
test
scas
in
mov
add
pop
cmp
xor
aam
push
inc
dec
jl
out
pop
push
ror
es
sub
repnz
test
fcompl
dec
xchg
lods
lods
into
adc
adc
aam
sbb
les
lds
and
inc
dec
and
je
aas
and
scas
fwait
push
or
pop
push
mov
adc
jnp
sarl
mov
jns
adc
rolb
ret
orl
jp
jp
roll
fsubs
push
inc
lret
incb
xchg
mov
sub
jo
or
dec
or
jg
cwtl
sub
out
push
movsl
into
jbe
jmp
mov
insb
sbb
dec
push
sbb
ret
or
loop
sub
or
cwtl
movsb
out
out
lods
cli
jl
fs
ret
xor
or
and
int3
fistpll
mov
mov
xor
pop
orl
fld
pop
pop
orl
mov
mov
int3
or
cmpb
add
fs
mov
lea
xchg
dec
adc
cs
jmp
cs
enter
xor
jbe
mov
jne
push
enter
push
mov
sub
push
jns
mov
and
rol
ja
in
mov
into
dec
je
jp
mov
test
adc
bound
or
mov
aas
mov
fwait
cs
sub
scas
mov
icebp
push
xor
loope
and
sub
and
iret
xor
ljmp
outsl
cmp
push
mov
xchg
mov
inc
and
pushf
shlb
aas
xor
shlb
xchg
jns
cs
push
or
aad
cmp
rcll
inc
sub
cltd
out
ret
xor
test
shrl
jl
aad
inc
jo
push
cmp
cmpsb
fistpl
or
stos
inc
sbb
cmpl
insb
out
add
mov
push
add
jle
cmpsl
mov
mov
or
or
xor
call
xor
clc
in
xor
xchg
mov
fsubl
pop
mov
cmp
push
dec
das
movaps
sub
and
push
mov
ljmp
or
and
xchg
fcomps
ss
test
mov
xchg
pop
adc
int
dec
insl
add
test
and
mov
cs
jne
fidivl
scas
fiadds
dec
imul
inc
movsb
lock
jbe
jno
dec
popa
push
adc
xlat
test
pop
sbb
cmp
mov
push
dec
pop
ljmp
loopne
enter
dec
cmp
jb
jo
and
inc
icebp
fisubrl
jmp
xchg
mov
ds
dec
aad
jns
pop
aaa
loope
sub
inc
inc
outsb
lea
imul
mov
push
into
lcall
sbb
jns
mov
stos
mov
dec
sbb
xor
sti
or
adc
sarb
iret
jg
jae
and
data16
xor
xchg
sar
fstpl
push
xchg
pmullw
and
fmuls
xor
mov
inc
dec
cmp
pop
xor
pop
xchg
mov
mov
adcw
int
mov
and
mov
stos
cmp
jne
test
testl
pop
shrl
sbb
sbbl
sti
repz
int
pop
insl
insl
cmpsb
push
or
jbe
and
mov
stc
dec
cmpsl
cltd
pusha
icebp
out
or
subl
ljmp
mov
loop
jo
pop
push
aam
pop
repnz
pop
cmp
dec
test
or
cmp
mov
sub
mov
add
xor
pusha
mov
fistpll
adc
or
sub
lods
and
hlt
sahf
int
lock
mov
lret
out
or
outsb
sbb
jo
cmpsl
and
std
out
adc
xor
fnsave
fcmovnbe
inc
cmp
mov
movsb
loop
in
xor
mov
mov
cltd
popa
sarl
mov
aam
imull
filds
cmp
mov
insb
insb
xor
js
push
cmp
add
aam
sub
popf
pop
in
mov
ljmp
int3
outsl
jecxz
xchg
std
cld
cli
pop
ret
es
xchg
stos
xchg
test
xchg
les
cwtl
dec
push
dec
or
mov
lret
push
rcll
jo
cwtl
leave
shr
xchg
call
and
mov
and
ja
jnp
dec
out
rclb
int3
xlat
js
notb
lods
flds
pop
pusha
inc
add
mov
and
insb
jmp
movsb
jg
xchg
pop
push
inc
sbb
sbb
bound
imul
pop
push
jmp
sti
dec
jns
mov
idivl
pop
xchg
lea
pop
fwait
sbb
nop
push
jns
outsb
jne
movsl
mov
movsl
sbb
cmp
outsb
fwait
cmp
clc
fs
test
repz
cmp
push
pop
jl
mull
pop
xlat
push
xchg
jae
ror
mov
xchg
out
and
inc
fs
mov
pop
cmpsl
orl
das
addr16
cmp
fildl
mov
cmp
dec
daa
mov
jnp
cmove
or
pusha
fcomps
int3
sub
add
pushf
pusha
addl
jae
repz
fcoms
call
or
and
cld
mov
cmpsb
and
mov
xchg
mov
mov
cmpsb
cmpsl
jbe
add
sti
sbb
rcll
pusha
mov
pop
faddp
sub
or
jbe
movsl
inc
inc
pop
sti
subl
hlt
jge
lret
dec
fcoms
mov
add
sub
push
jmp
sub
xor
add
cwtl
call
lcall
movsl
out
and
imul
jns
mov
sub
or
pop
mov
loop
mov
fwait
mov
sbb
stos
push
mov
repz
add
pop
daa
in
xor
dec
dec
fucomip
shl
incb
insb
imul
and
push
incl
scas
movsb
outsl
into
adc
cltd
mov
test
xchg
mov
rcrl
xchg
push
js
add
rcrb
inc
inc
pop
xchg
into
sbb
test
dec
mov
jmp
aam
sahf
movsl
push
ficomps
bound
pushf
or
cld
sar
mov
icebp
jecxz
jmp
xor
cmp
dec
aam
test
fwait
lcall
xor
cmp
scas
je
insb
sbb
int3
inc
stos
das
mov
or
pop
sti
mov
sub
jb
ja
adc
sub
int3
lret
mov
lcall
jo
xor
xchg
popf
testl
pop
icebp
sbb
in
pop
lcall
mov
aam
push
out
lcall
jbe
in
es
mov
imul
dec
fdivl
or
sbb
pop
mov
imul
dec
mov
mov
std
scas
std
int3
mov
lea
xchg
test
pop
lods
or
cmp
pop
inc
dec
adc
pop
dec
adc
sbb
lret
call
and
cmc
or
jae
js
dec
imul
inc
jl
cmp
mov
push
cmpsb
jnp
and
in
lods
lods
fildll
inc
mov
cmp
add
and
adc
out
pop
fldenv
push
jge
add
ljmp
xchg
pop
xchg
lret
sub
mov
and
xchg
add
inc
and
sbb
mov
je
jl
nop
dec
add
mov
sbb
pop
cmp
gs
sbb
cli
clc
or
push
sbb
xchg
ja
test
dec
dec
sub
flds
adc
in
in
inc
pop
cld
sbb
cmp
push
loop
inc
aas
cmp
dec
out
add
call
les
call
pop
cmp
stc
mov
sahf
cltd
mov
loopne,pn
push
and
jb
loopne
enter
js
into
pop
mov
mov
scas
dec
xor
xlat
int3
mov
xchg
leave
xchg
jns
call
sub
pop
xor
inc
pop
cmp
stos
rcrl
daa
loopne
mov
pushf
lret
clc
add
jne
jmp
outsb
in
pop
in
lds
mov
gs
sub
jbe
jl
jae
mov
fstps
adc
adc
int3
dec
xchg
fsubs
je
lods
lcall
stos
mov
cmp
sub
jno
shrl
std
push
jno
lock
rcll
lds
mov
hlt
mov
bound
sub
sbb
jecxz
dec
imul
add
xor
inc
int
mov
sbb
ret
sbb
inc
lds
cmp
sbb
xor
test
push
in
movsl
ret
sti
or
dec
das
mov
xor
xor
adc
xchg
xor
pop
pop
lret
int3
xchg
ret
adc
and
es
int3
mov
movsb
pop
nop
cmpsl
ret
cmp
sub
mov
lahf
sti
or
pushf
push
mov
push
sbbl
mov
gs
and
mov
dec
mov
adc
mov
sub
mov
fucom
in
sahf
and
adc
and
mov
xor
lcall
sti
mov
fs
rorb
mov
or
cmp
push
cs
shll
data16
adcl
cs
loope
je
xchg
jge
xchg
cmpsl
popa
push
scas
push
repz
or
pop
in
jne
pop
or
lahf
and
test
dec
mov
mov
xchg
lea
dec
xorb
lret
jae
push
xor
and
xor
ds
pushl
or
hlt
xchg
push
mov
fldt
fisttpll
scas
adc
out
cmp
outsb
jns
inc
inc
jmp
mov
pop
sbb
mov
sti
sarl
aad
or
lods
ret
imul
add
or
sbb
ss
cmpsb
xor
mov
and
roll
jbe,pt
push
mov
dec
test
add
inc
in
mov
lret
mov
pop
sti
fs
je
repz
sbb
nop
addb
test
dec
or
mov
out
mov
pop
xlat
jo
xchg
xchg
dec
xchg
cmpsl
stos
push
xlat
and
sub
xor
cmc
xor
or
ret
xchg
pop
dec
cmpsl
ss
sub
fdivrl
je
mov
mov
jle
mov
lret
int
pop
and
xor
mov
ljmp
pop
push
xchg
idivl
xchg
push
push
lods
pop
jns
shll
cmp
adc
les
enter
sub
loopne
jle
inc
fstpl
add
mov
dec
xchg
adc
xor
mov
fcmovnu
fdivrs
dec
jg
jae
cmpsl
loope
out
rclb
aad
xor
add
sbb
negl
cmpsb
push
mov
stc
inc
out
and
mov
std
sahf
cmp
shl
outsb
pop
sbb
mov
adc
mov
and
test
dec
xor
mov
cmc
sub
push
cmp
stos
push
mov
mov
bound
jmp
mov
ret
adc
or
rcll
outsl
leave
lahf
mov
xchg
cmp
xor
sbb
loopne
iret
inc
sahf
cltd
out
mov
mov
pop
arpl
je
loopne
xchg
sti
xchg
adc
out
test
add
movsl
xchg
out
cmp
jle
loop
cmpsl
popf
cmpsb
add
jecxz
ja
xchg
jne
inc
jle
and
mov
adc
mov
jecxz
fisubrl
scas
andb
int3
lods
add
or
pop
sub
inc
mov
xor
or
ss
cld
xor
jbe
sub
and
xchg
movsl
mov
xor
jmp
jg
push
test
xchg
sub
dec
mov
xchg
xchg
mov
sub
cmp
ss
push
hlt
jns
out
push
sub
or
mov
scas
push
jne
jo
lock
ss
movsb
or
dec
dec
push
test
mov
scas
mov
jp
out
int3
pop
dec
scas
iret
mov
and
clc
xchg
mov
rcl
movsl
or
xchg
jmp
and
adc
nop
adc
pop
adc
fninit
push
pushf
push
jmp
and
scas
dec
arpl
mov
dec
jmp
jg
push
mov
jns
pop
inc
sbb
hlt
arpl
inc
pusha
cld
scas
dec
lret
rcrl
dec
pop
sti
je
dec
mov
test
or
outsb
mov
and
xor
inc
out
js
fwait
enter
dec
sub
mov
arpl
out
clc
mov
cld
in
out
xchg
inc
faddl
mov
dec
push
add
mov
inc
ficompl
scas
xor
icebp
lock
push
cmp
adc
or
ret
or
pop
push
jp
std
dec
mov
popa
pop
jo
test
xor
sti
jle
stos
lea
xchg
popa
mov
mov
js
repnz
aam
inc
push
jnp
pop
fsts
cmp
jge
arpl
inc
xor
inc
cmpb
mov
scas
sub
dec
xchg
fisttps
lock
pop
cs
pusha
push
cmp
mov
cmpsb
mov
pushf
addb
cli
xchg
add
loope
shrb
xchg
mov
icebp
in
dec
jle
mov
pop
mov
or
lret
test
mov
test
jmp
mov
iret
mov
push
nop
adc
in
ret
repz
pop
imul
hlt
dec
mov
in
pop
mov
adc
mov
test
push
ljmp
insl
pop
sbb
sub
pop
pushf
outsb
out
loopne
cmpsl
test
mov
js
xor
addr16
xor
mov
mov
and
fsubrs
ss
scas
loope
jmp
ljmp
mov
jp
test
cmp
adc
ljmp
pop
jge
aad
out
sbb
xchg
or
lea
lds
mov
jns
or
in
mov
inc
fisubrs
addr16
loope
adc
cs
cmp
sub
push
insb
add
pop
mov
push
and
or
je
jg
int3
rorb
add
lods
cmp
jp
inc
jg
test
lahf
mov
sbb
mov
xchg
dec
stos
xor
dec
push
xor
inc
cwtl
mov
loope
pushf
orl
push
imul
sbb
sbb
in
out
rcrl
sbbl
push
pop
fcomi
movsb
dec
lret
jmp
jmp
sub
mov
cmp
repnz
lcall
mov
and
dec
xor
xor
jl
sbb
inc
adc
pop
fmuls
push
ret
push
or
int
inc
adc
fwait
adc
jge
out
jno
pop
fidivs
pop
repnz
int3
sub
and
dec
mov
mov
push
pop
sbb
mov
inc
ss
push
push
xchg
jecxz
movsl
dec
or
dec
xchg
cmpsl
fnsave
inc
sub
lcall
lret
in
mov
repz
inc
out
dec
jbe
sub
fadd
xchg
hlt
data16
push
add
and
cmp
lock
dec
push
cs
insl
imul
xchg
movl
xchg
cwtl
fsubs
shrl
pop
fdivrl
mov
push
out
pop
xchg
mov
orl
sbb
xchg
imul
dec
pop
inc
jg
hlt
outsl
fcmovnbe
mov
insb
ret
loopne
xchg
ficoml
out
cltd
mov
or
andb
adcl
out
and
push
pop
sbb
bound
in
fdivrl
imul
jbe
inc
push
cmp
xlat
xchg
test
cmp
mov
loope
ret
add
mov
shlb
cmp
lahf
dec
sbb
sub
mov
ds
aaa
mov
mov
popf
and
jb
inc
cmpsl
xchg
jns
imul
es
jg
stos
jmp
mov
mov
sahf
cmp
je
and
pop
out
dec
call
rorb
stos
insb
fcompl
loope
jge
mov
arpl
and
loopne
das
dec
and
scas
adc
jg
add
mov
dec
xchg
sub
fisubrs
xchg
lock
fisubl
movb
push
adc
jmp
push
sub
in
sbb
aas
test
mov
or
pop
add
andb
push
fcomip
gs
adc
fs
insl
add
fcoms
push
adc
stos
jae
mov
rcrl
or
add
lea
cmp
std
jl
fidivl
sbbl
clc
insl
inc
cld
lods
in
inc
mov
js
scas
or
out
sub
daa
mov
cmpl
xor
pop
jmp
add
test
sbb
pusha
pop
inc
or
shlb
sbb
aam
gs
or
xchg
rcrb
outsb
fldt
sub
rclb
push
jae
adc
jae
js
out
push
insl
divb
jle
mov
popa
add
push
das
mov
insl
mov
dec
mov
push
lods
dec
or
push
test
subb
xor
pop
lods
sub
cmc
mov
fisubs
sub
fcmove
jmp
dec
lods
sbbl
cmp
aam
sbb
mov
xchg
xchg
fwait
sbb
mov
test
mov
lret
shlb
fldenv
jne
xor
in
inc
cmpsb
mov
cli
std
std
loope
in
cmp
imul
test
and
inc
aaa
fdivl
ds
testl
mov
sbb
es
xor
sbb
mov
jnp
arpl
jnp
mov
aaa
mov
jo
stos
test
sti
xchg
or
cs
push
xchg
dec
adc
call
mov
hlt
adc
push
pop
js
jns
or
icebp
push
mov
jnp
das
and
pop
scas
push
sub
mov
int
push
mov
xor
hlt
sahf
xor
mov
out
sub
mov
fsubr
jne
mov
mov
les
jp
ljmp
mov
ret
cmp
aas
leave
xchg
jge
lret
sub
sbb
fcoms
mov
cmp
aas
mov
jns
jne
adc
jnp
fs
xor
in
cmpsb
aaa
push
lods
jnp
fnstenv
out
das
adc
jecxz
int3
std
js
dec
ds
idivb
daa
loop
fs
mov
test
and
enter
mov
sbb
test
ss
xchg
sub
and
and
or
daa
xor
lahf
popa
adc
ss
add
and
mov
adc
mov
xor
test
nop
cmp
jne
in
adc
push
and
push
lcall
popa
xchg
pusha
adc
dec
not
les
pop
pop
and
xor
pop
mulb
xchg
dec
cli
movsl
cmp
or
mov
int
cmp
js
mov
scas
xchg
push
out
add
push
xchg
adc
insb
imul
movsl
mov
leave
push
int
fptan
sbb
push
outsl
mov
and
jmp
sbbl
xor
pop
sbb
mov
adc
fimuls
lds
xchg
repnz
add
sbb
xlat
int3
int3
pushf
in
adc
inc
aas
push
jp
scas
mov
push
mov
xor
enter
or
cs
imul
test
adc
icebp
dec
xor
ja
lret
pop
ss
sbb
int3
cmp
stc
sahf
mov
les
adc
ljmp
add
outsl
push
les
pop
sbb
mov
ja
insl
les
std
rcll
shll
add
jae
xchg
sub
imul
call
pop
xchg
call
fdivs
mov
push
sbb
lods
les
repz
mov
testl
sub
jl
xchg
aas
pop
cli
pop
imul
je
aad
push
adc
mov
imul
xchg
push
fcomps
lea
xchg
lahf
in
cmp
xor
mov
jp
cmp
call
jecxz
adc
push
out
mov
fldenv
mov
cltd
push
pop
js
fwait
cmp
test
insl
movsb
pop
fwait
adc
stos
inc
aam
xor
xor
test
dec
cmp
sbb
mov
icebp
dec
pop
mov
sub
aad
xchg
out
lret
mov
in
sub
mov
cbtw
xchg
aad
out
xchg
push
stos
iret
pop
movsl
pushf
dec
enter
jmp
mov
ret
lds
rorl
sbb
les
js
adc
ljmp
inc
fnstenv
or
mov
cmpsb
mov
sub
lock
lcall
push
mov
ds
jmp
lods
mov
lods
in
jae
dec
inc
test
or
leave
cmp
add
in
out
mov
sub
lcall
and
nop
jno
cmp
cld
inc
push
jg
pop
cmp
mov
mov
or
test
mov
xchg
pop
xchg
mov
push
jmp
fnstcw
jbe
dec
out
mov
inc
jbe
mov
mov
xchg
cmp
xlat
lahf
je
push
xchg
lods
mov
test
cmp
and
or
bound
mov
movsb
stos
sarl
in
inc
jle
int3
pop
push
adc
bound
iret
dec
ljmp
push
add
inc
pop
mov
lret
test
pop
bound
dec
ret
add
cld
mov
dec
push
sbb
mov
mov
in
adc
mov
ljmp
add
gs
mov
ljmp
jge
cld
mov
inc
mov
outsl
fsts
inc
jno
pop
loop
pop
aaa
mov
xor
into
shl
addr16
stc
sbb
imul
jns
stos
mov
push
adcb
jl
dec
loop
push
pop
mov
hlt
iret
dec
mov
add
mov
movsb
inc
cmp
push
push
pop
popa
fmuls
pop
xchg
dec
mov
mov
or
test
mov
movsw
xor
imul
push
dec
das
sub
sub
xchg
adcb
xor
adc
sbb
mov
inc
cld
cli
movsl
out
je
mov
outsb
imul
addb
inc
in
insl
add
ret
inc
adc
mov
jae
mov
xchg
pushf
stc
jmp
adc
stc
test
pop
arpl
cmp
cmp
mov
stos
lret
add
xor
jns
fistl
jecxz
cwtl
imul
mov
stc
add
ret
out
repnz
addr16
cmpsl
add
mov
and
es
dec
rcrb
dec
repz
jae
out
cmpsb
xor
lcall
das
xchg
adc
out
dec
and
pop
je
movsb
outsb
ljmp
lret
and
aam
sub
cmp
loope
xchg
repnz
jecxz
adc
mov
lret
cmp
dec
int3
rcll
repnz
fdivr
cltd
inc
jg
cmp
lcall
pop
pop
xlat
clc
ljmp
jnp
xor
xor
shrl
mov
push
sbb
sbb
fs
outsl
rclb
mov
push
mov
jmp
iret
shlb
test
fcompl
enter
and
stos
mov
pop
lcall
xchg
cmpsl
sub
push
mov
testb
mov
cld
movl
push
popa
repnz
test
dec
stc
dec
mov
fisubs
fs
fdivrl
orb
icebp
xorl
push
fwait
pop
das
enter
ss
pop
dec
cli
popl
cmp
or
out
jle
lock
aaa
repnz
add
lret
in
adc
or
add
push
loope
bound
add
ljmp
mov
mov
std
mov
pusha
and
imul
jnp
jno
adc
into
cld
lret
and
dec
fildll
aad
push
aas
or
inc
adc
loope
js
inc
sub
fsubrs
adc
inc
sahf
or
bound
push
addb
rcrb
ret
mov
popa
mov
dec
outsb
dec
std
xchg
lahf
sbb
fs
neg
sub
mov
ss
inc
cmc
push
punpckhbw
into
fistpl
stos
lods
xchg
xchg
sbb
faddl
push
clc
test
mov
sti
cmovl
xchg
das
insl
aam
imul
movsl
pushf
xchg
sahf
inc
lret
lock
sbb
cmp
inc
hlt
mov
mov
jb
daa
pop
dec
jmp
outsb
aaa
adc
cltd
insb
jae
jp
imulb
cmpsb
mov
movsl
data16
mov
cmp
cmp
cmpsb
rol
imul
addr16
mov
out
mov
push
sbb
in
sub
ror
mov
scas
mov
jo
shr
push
out
push
fnstcw
push
jecxz
or
shlb
roll
nop
jp
in
jo
jb
inc
and
mov
push
lret
push
and
dec
jmp
pop
add
movsb
jecxz
mov
pop
shrb
xor
add
mov
imul
insb
jp
push
out
and
push
jecxz
mov
sbb
sub
call
cwtl
test
sub
and
fldl
dec
pop
mov
and
ds
pop
cwtl
daa
dec
mov
stc
cmp
sub
fbstp
mov
loope
in
repnz
cmp
push
int3
in
fwait
push
mov
popf
addb
int
pop
jle
sub
xor
mov
xlat
pop
sbb
xchg
xor
imul
sbb
xor
mov
into
shlb
leave
fwait
ja
pusha
sbb
imull
popf
insb
inc
fisubl
ljmp
jns
mov
push
cs
push
enter
dec
sub
outsl
cltd
sub
pop
pop
adc
data16
mov
push
push
out
fwait
push
push
dec
push
lock
sbb
daa
stc
outsl
stos
push
mov
sub
mov
pop
add
sbb
dec
arpl
add
jmp
jmp
orb
push
fs
xor
out
xlat
data16
sbb
xchg
leave
sti
stc
xor
cmp
pop
jecxz
xchg
jnp
out
xchg
andb
enter
or
js
xor
imul
mov
sbb
sub
pop
jmp
in
push
sbb
out
xchg
lahf
sub
jnp
jnp
js
pushw
jne
jns
xchg
out
pop
int
lds
jg
addr16
idiv
push
aad
xchg
inc
inc
stc
xchg
test
pop
ret
push
jne
push
or
jno
jg
sbb
mov
inc
imul
loope
testb
dec
mov
ret
repnz
popf
push
cltd
xor
in
insl
into
push
push
adc
or
push
sbb
pop
and
inc
sub
push
and
pop
stos
adc
sbb
mov
cltd
mov
ret
cmp
ret
ljmp
emms
es
movsl
and
sbb
cmpsl
std
jg
sbb
movsl
or
cmp
mov
in
lret
xchg
lret
std
inc
loopne
and
pop
cmpsl
int
jno
movsb
outsl
neg
sub
leave
nop
lcall
lret
pop
shll
jae
andl
adc
mov
cmp
dec
mov
aad
push
mov
jp
movsl
les
add
mov
sub
xor
les
enter
roll
xor
mov
lret
pop
popf
in
adc
imul
adc
sub
push
les
inc
pushf
push
xor
adc
mov
push
pop
sub
sbb
cmpsb
ss
mov
mov
xchg
popa
dec
jmp
in
cmc
dec
push
popf
shrb
push
shl
lds
inc
das
sub
push
or
sbb
and
mov
movsl
add
push
push
mov
pop
pop
scas
and
xor
out
add
popl
addl
mov
icebp
in
push
loop
pusha
lods
jecxz
jge
scas
sbb
outsb
mov
fcomps
hlt
or
pop
cmpsl
mov
lahf
inc
adc
mov
push
test
adcl
dec
push
dec
mov
cmc
pop
mov
iret
int3
mov
mov
int
and
aad
push
jne
pop
lods
xchg
jo
adc
scas
xchg
popa
in
sub
dec
jp
incl
adc
repz
add
mulb
adc
cmpsl
xchg
cmc
push
rcrl
in
out
xchg
in
pop
mov
leave
sbbl
imul
xor
jge
pop
jmp
and
push
jo
sbb
push
fs
enter
int
cmp
movsb
mov
fbstp
mov
and
push
xor
xor
ret
mov
push
pop
call
icebp
aas
push
ss
in
rcrb
pop
daa
inc
mov
fstpl
and
rcl
cmp
or
jmp
sti
sbbl
jg
push
push
jne
insb
ret
jno
adc
push
inc
mov
sub
and
outsb
cltd
mov
or
xchg
das
popl
push
pop
pop
popa
push
sub
mov
scas
es
xchg
dec
push
cmp
dec
lret
je
mov
fcoms
and
orb
or
pop
in
insb
mov
icebp
adc
stos
repnz
into
pop
mov
cmc
stos
adc
mov
xor
shlb
movsl
leave
enter
cmpsl
into
cli
call
pop
pop
clc
lret
test
lcall
loop
cwtl
aas
xor
ss
ds
sti
dec
mov
call
into
mov
jecxz
je
push
mov
jne
sbb
xchg
jno
cmp
mov
xor
xchg
filds
pusha
outsl
adc
mov
inc
xchg
iret
fwait
sbb
jmp
lock
mov
je
xor
jge
shrb
test
outsb
sbb
dec
push
inc
mov
test
stc
decb
sub
add
frstor
push
data16
sub
lods
loop
fmull
and
sbb
mov
jmp
scas
mov
ds
sbb
inc
popa
lea
mov
lock
sti
fsubrp
lret
jno
pop
add
jnp
aad
push
gs
addb
adc
faddl
jns
into
add
jne
bound
mov
enter
mov
jp
mov
lds
jbe
push
insb
out
ret
js
pop
mov
stc
cmp
lret
divb
ret
pop
sbb
push
das
shlb
lcall
push
aas
xor
or
movsb
mov
mov
dec
inc
pushf
dec
imul
mov
mov
mov
loopne
mov
xor
movsb
jns
mov
fstps
fisubrl
sub
fidivl
repnz
adc
dec
mov
add
dec
not
fdiv
sub
sbb
push
call
push
jns
dec
mov
orb
cmp
adc
xor
add
rcll
repnz
dec
leave
sahf
mov
in
fldt
push
jb
dec
sbb
outsb
int
aas
jb
lcall
and
in
inc
push
das
or
cmpsl
scas
iret
int3
lcall
fisubl
rcrl
frstor
insl
dec
dec
jae
sbb
or
mov
and
cs
and
jno
mov
test
mov
inc
and
push
int
lahf
sub
test
mov
mov
outsb
stos
push
fnsave
sbb
cmpsb
pop
mov
es
push
mov
sbbb
and
mov
es
mov
fimull
in
pop
addr16
mov
ljmp
pop
pop
xchg
sbb
mov
jns
aas
dec
push
mov
mov
dec
js
sti
xor
outsb
aam
add
mov
nop
pop
inc
mov
test
adcl
mov
iret
test
adc
imul
ret
jl
mov
test
bound
and
add
sbb
cmp
mov
lret
in
movsb
popf
mov
sarl
xchg
lds
pusha
out
inc
outsb
icebp
bound
js
idivb
mov
int
adc
mov
gs
jl
mov
xchg
jmp
sbb
add
dec
lahf
iret
add
pop
or
test
bnd
cmp
dec
xrelease
frstor
pop
mov
fs
cld
mov
mov
pop
les
push
cmp
js,pn
mov
cmpsb
adc
ljmp
jg
pusha
test
jne
adc
popa
stos
sti
jbe
fidivl
sbb
aaa
jge
cmp
jne
sub
notl
mov
mov
adcl
inc
cmp
push
std
loope
negb
add
or
inc
movsl
pop
xchg
inc
sub
adc
add
sub
mov
jl
ss
or
add
pusha
dec
pop
push
inc
xor
xchg
mov
sub
int3
and
push
pop
ret
out
shrl
pop
cmp
mov
sbb
pop
into
pop
fcomps
inc
ret
popf
cmpsl
inc
lret
and
adc
leave
divl
jle
inc
arpl
and
out
imul
add
loope
sub
int3
fdivr
icebp
in
and
push
shlb
cli
sbbb
mov
popa
out
scas
add
notb
and
push
orb
jnp
xor
mov
mov
add
xchg
cmp
push
aam
fstps
sbb
orl
sub
lcall
mov
add
jg
out
shll
aaa
dec
mov
push
or
mov
imul
shlb
xor
scas
jg,pt
adc
jae
adc
test
adc
cltd
xchg
push
mov
jle
pop
cmp
xchg
mov
jae
or
push
jne
jecxz
pusha
cmpsb
or
divl
lock
repnz
inc
mov
adc
mov
inc
push
or
push
int3
mov
fidivs
cmp
in
fldl
test
mov
pusha
sbb
aam
sub
xor
mov
ja
sbb
scas
lock
lea
cli
jecxz
mov
jmp
ljmp
mov
stos
fisubrl
dec
pop
inc
mov
aam
jbe
rcrb
mov
aad
dec
fisttpll
dec
out
mov
mov
mov
int3
aam
nop
test
or
pop
mov
or
daa
mov
mov
daa
dec
push
sbb
or
dec
mov
push
pop
mov
mov
stos
mov
fidivl
sarb
cmp
and
lcall
push
test
std
cmp
push
popf
xlat
fisttpl
jnp
mov
cmp
outsb
xor
sub
and
add
ds
hlt
into
gs
push
add
icebp
cs
jns
adc
adc
repz
and
push
sub
movsl
xchg
imul
sbb
cmp
outsl
clc
ss
out
lret
xor
int3
inc
sub
mov
sub
pushf
divl
punpckhbw
jno
add
and
dec
add
in
push
jbe
fstpl
sahf
out
push
movsb
push
cld
aaa
into
sub
mov
or
and
pop
inc
add
cli
daa
outsb
and
insl
pushl
cli
jge
inc
rcrl
sbb
xchg
ds
mov
nop
jnp
rcrb
shlb
mov
jno
dec
pushf
jle
push
adc
sub
push
dec
shll
inc
xor
mov
movb
mov
fistl
cmp
insl
inc
xchg
or
bound
roll
fisttpll
jno
jecxz
add
mov
and
xlat
pop
insl
or
mov
mov
fstps
push
push
jo
adc
push
cmovs
push
mov
push
andl
outsb
roll
sub
mov
sub
insb
pop
sub
cmp
jae
mov
cmp
fucomip
cmc
nop
call
cli
jbe
out
scas
int3
xlat
mov
mov
test
xor
push
mov
pop
mov
loopne
or
sbb
ret
test
outsb
jno
xchg
cli
add
adc
jp
xor
into
shlb
push
out
mov
pop
cwtl
sbb
adc
pusha
aad
outsl
mov
sbb
les
mov
mov
mov
inc
add
inc
mov
adc
and
rcrl
outsl
and
mov
in
mov
mov
push
pop
jnp
aas
xchg
cli
fstpl
lods
mov
inc
frstor
stos
push
fwait
aad
push
stos
pop
add
sub
adc
jmp
shlb
xor
jo
je
mov
sub
lea
mov
mov
test
xchg
dec
xchg
mov
mov
mov
subl
mov
pop
rcrb
inc
cmp
data16
cmp
lcall
and
addb
cmpsl
jns
inc
sub
rorb
test
cmp
ljmp
js
jg
sub
sub
divb
push
shlb
inc
out
and
add
push
aad
adc
pop
add
jne
lret
ret
test
mov
or
in
inc
aad
xor
or
mov
imul
jb
xlat
in
lret
pop
popa
lock
enter
add
fstp
into
mov
sbb
adc
xchg
fsubrl
push
mov
test
adc
mov
mov
movsl
jae
cmc
cmpb
lods
dec
cs
pop
add
mov
push
hlt
xchg
push
out
xchg
mov
jge
aam
and
pop
jae
and
sbb
pushf
repnz
cmp
cli
jne
inc
dec
out
scas
lahf
fcoms
ss
sub
inc
cmp
pop
jno
sbb
clc
aas
dec
cmp
sub
xor
xor
cmp
stos
sarb
test
adc
mov
xchg
mov
xor
adc
shlb
and
lahf
or
stos
sub
ret
mov
sahf
xor
jecxz
insb
sbb
sbb
pop
das
repnz
cmpsl
lahf
xor
leave
lahf
xor
sbb
iret
push
cwtl
cmpb
mov
xor
test
push
pop
xchg
xor
mov
pop
jno
fnstcw
pop
cmpl
ss
enter
jne
mov
sbb
fwait
out
in
jne
xlat
aaa
push
adc
and
xchg
sti
or
lret
pushf
shl
insl
out
aas
incl
rep
sbb
xor
jbe
sub
xchg
fidivrs
adcl
push
mov
scas
shlb
mov
bound
mov
enter
mov
jl
insl
mov
cmp
in
movsl
stc
xchg
or
movsl
xor
sub
fwait
sbb
lahf
lods
dec
sub
adc
mov
xchg
roll
mov
xchg
mov
or
inc
xlat
imul
or
leave
or
test
sahf
jge
fsubrl
rcll
sub
aas
loop
xchg
rcr
cmp
mov
or
dec
or
push
adcl
outsb
stc
pop
xchg
jg
xor
pop
push
mov
lea
mov
mov
das
std
lock
mov
rcr
xchg
notl
gs
cwtl
leave
push
mov
mov
fistpl
lds
les
push
out
dec
pop
fiadds
cmp
rorl
pop
or
fs
insl
or
jle
ret
movsl
int3
pop
repnz
and
cmp
lea
jno
movb
shlb
xchg
xor
ret
sahf
pop
es
test
jge
outsl
es
int3
repnz
pop
les
and
aaa
adc
imul
scas
notb
bound
push
mov
and
mov
jne
in
es
data16
call
xchg
icebp
mulb
cs
and
or
mov
xchg
inc
fstps
jmp
push
sub
call
or
clc
jnp
lcall
jmp
imul
scas
jle
int3
pop
call
xor
andl
cs
push
insb
fwait
jno
mov
shrl
cmp
aam
imul
insl
jmp
xchg
cmp
dec
stos
mov
push
mov
movsb
pop
push
aaa
add
ljmp
mov
mov
sbb
sbb
out
lds
stos
jmp
mov
movsl
sub
repz
pushf
into
push
cli
mov
push
aas
gs
test
out
push
aaa
inc
es
cmp
rcrb
add
int
sub
pop
cmp
push
cmp
adc
imul
sbb
call
inc
sbb
sbb
test
cs
cmpsl
insb
cmp
repnz
movsb
sbbb
addr16
and
inc
mov
add
popf
xor
inc
add
add
test
or
popf
in
sub
mov
mov
bound
pop
mov
cwtl
dec
dec
shrl
pop
cmp
xchg
clc
sbb
inc
dec
adc
sbb
mov
clc
jo
jg
or
fdivrs
add
and
cmp
dec
xor
jmp
stc
jo
mov
sbb
pop
je
push
adc
xor
xor
gs
mov
dec
cmc
xlat
pop
or
call
pop
daa
sub
xchg
dec
dec
pop
lea
jb
push
dec
push
fcoms
nop
mov
dec
add
jmp
or
loop
imul
repnz
jbe
jno
push
cmp
jle
arpl
xchg
pop
jns
out
and
xchg
popf
pusha
mov
inc
dec
in
mov
mov
fcompl
mov
cmpsb
dec
push
mov
mov
bound
push
das
vpmuludq
sti
xor
pop
jmp
cs
add
mov
sbbb
xchg
aad
ljmp
shlb
jo
or
jmp
ds
testb
jle
pop
xchg
inc
lock
mov
leave
jg
imul
push
bound
inc
aad
faddp
jns
rol
ds
jb
test
mov
add
xorb
js
xor
popf
stos
add
andl
xor
or
sub
push
loope
cwtl
lods
mov
jecxz
pop
push
sbbb
mov
dec
arpl
cmpsb
push
dec
fisttpl
xchg
inc
es
pop
das
xchg
push
and
clc
mov
cmp
in
add
popa
pop
repnz
xor
add
cmp
je
into
es
jb
in
and
mov
mov
cmp
dec
fldl
dec
xor
mov
das
outsl
stos
pop
fdivs
dec
cmp
call
or
xchg
imul
jae
or
dec
call
lret
and
int3
nop
ret
jae
ljmp
mov
cmpb
mov
fisubs
ret
mov
fidivl
cwtl
lret
or
adc
sub
sub
inc
rorb
add
push
pop
and
cmpsb
push
subb
add
fld
in
push
push
ja
fsubl
xchg
add
in
push
and
popf
stc
sbb
loopne
dec
xor
cmc
push
adc
mov
xchg
dec
mov
icebp
add
jo
jmp
mov
pop
outsl
mov
add
scas
fstl
inc
ret
les
xchg
pop
mov
xchg
xor
movsl
push
add
outsb
adc
daa
cmp
push
xor
test
dec
mov
or
call
lods
pop
jmp
sub
xchg
dec
enter
push
mov
lret
and
xchg
push
mov
push
cmp
push
pop
mov
subl
dec
dec
jmp
addb
and
cmpsb
mov
sti
dec
mulps
pop
push
andl
cmp
bnd
mov
push
mov
xchg
cltd
jnp
outsb
int3
inc
stos
and
pop
push
scas
lcall
adc
mov
xchg
ret
add
mul
ds
jnp
push
xchg
int3
inc
xor
mov
dec
int
mov
or
fcompp
aam
shrb
pushf
and
inc
js
movsl
sbb
sbbl
pop
mov
hlt
add
adc
xchg
pop
or
movsl
inc
push
mov
sarl
xchg
addb
sbb
mov
jecxz
or
mov
inc
push
stos
xorl
aam
mov
loope
mov
popa
sub
repz
adc
lock
test
loope
int3
pop
xchg
scas
push
pop
addr16
mov
add
push
shl
dec
jb
push
add
dec
int3
cmp
jl
inc
pushf
add
xchg
iret
nop
add
jge
icebp
push
inc
iret
inc
and
stc
inc
leave
push
cwtl
pop
insl
adc
sbb
rolb
std
pop
sub
movsl
cmp
mov
fwait
ja
jns
fldt
ss
xor
xchg
jbe
mov
les
fiadds
push
fmull
stos
xor
dec
push
js
jo
mov
popa
pop
add
ret
int3
push
call
popl
dec
cltd
push
add
bound
int
sub
xchg
push
cmp
in
dec
inc
popf
pop
fldenv
mov
sub
mov
jae
mov
xchg
sub
mov
cs
inc
push
movsl
lds
pop
jae
lcall
test
repz
add
push
int
mov
mov
jg
fs
jmp
sbb
mov
jmp
pop
lods
dec
dec
jmp
fldenv
cmp
movsl
imul
in
imul
xchg
out
lahf
add
push
aam
stos
dec
mov
and
loope
push
pop
lock
add
loope
popf
cmp
int
addl
dec
push
mov
mov
ret
sub
push
push
cli
pop
xchg
cld
cmp
sbb
subb
pop
dec
mov
out
pusha
sbb
cmpsb
iret
in
xchg
xchg
shrl
inc
bound
inc
lcall
imul
lcall
xorb
sbb
xor
jns
cmc
push
call
push
aaa
xor
out
in
pop
or
lret
cli
je
mov
in
inc
xchg
mov
aam
pop
push
insl
jb
add
insl
jae
scas
cltd
je
fs
cli
and
and
dec
and
mov
lods
data16
cmp
mov
out
stc
lret
sar
or
das
push
and
push
mov
or
xchg
mov
pop
dec
inc
pop
fabs
xchg
cld
test
sbb
scas
mov
pop
pop
push
jae
lret
cwtl
xchg
int
in
add
xchg
in
adc
xchg
jnp
xchg
sbbb
xchg
loop
or
stos
mov
pop
cs
mov
pop
mov
push
xorl
xor
clc
fsubrp
add
inc
cmp
xchg
sub
mov
scas
or
add
fisubl
les
shll
leave
dec
inc
jmp
or
lahf
sub
push
mov
add
bound
stos
sbbl
jbe
into
sub
cmp
push
fs
rcll
insb
sarb
mov
xor
sbb
mov
les
outsb
test
jb
in
pop
xchg
inc
add
push
call
out
aam
mov
mov
cmp
sub
pop
fadds
andb
push
or
jl
pop
push
inc
or
sarb
xor
mov
call
cltd
enter
bound
cmp
ret
in
js
add
mov
test
adc
shll
mov
fldt
outsl
xchg
inc
or
xor
mov
ljmp
nop
shll
adcl
dec
cmc
jg
popf
sbb
dec
cmp
cmp
imul
shr
xor
popf
decl
sub
sbb
lods
adc
clc
pushf
loop
pop
mov
movl
fcmovne
movsb
into
daa
jb
xor
repz
cmpsl
bound
sub
push
xor
xor
mov
jmp
icebp
xlat
push
add
adc
xor
add
scas
add
test
gs
jae
shrb
std
dec
ja
rclb
hlt
mov
sbb
jmp
jg
test
out
add
repnz
in
or
mov
les
inc
dec
or
xchg
addb
dec
imul
or
xor
dec
mov
aad
cwtl
es
test
clc
lahf
int3
sahf
xchg
xchg
lret
cmp
testl
int3
loopne
cmp
cmpsb
push
jne
mov
mov
adc
es
xchg
insl
mov
popa
push
mov
and
std
cwtl
cmpsb
and
dec
add
adc
insl
gs
hlt
es
sarb
jl
push
mov
lea
cld
ja
ret
test
outsl
jmp
cmp
jnp
dec
test
mov
mov
push
mov
pop
add
fwait
movsb
or
fs
adc
mov
mov
cld
std
loop
add
inc
pusha
shll
add
shlb
add
push
push
mov
xchg
repnz
push
sbb
inc
lock
cltd
arpl
fs
xchg
stos
or
jno
mov
xor
xlat
test
pop
mov
out
ret
test
movsl
int3
lcall
jg
add
adc
pop
roll
stos
test
out
mov
dec
out
cmp
push
lcall
out
call
push
cmp
mov
test
ds
repz
je
aas
les
xchg
push
lock
mov
xor
fidivrs
or
pop
and
rclb
jno
mov
iret
jnp
push
jmp
add
cmc
pop
sub
cmp
lds
nop
pop
inc
jns
out
dec
int3
js
xor
and
mov
fdiv
inc
fldt
imul
dec
push
es
dec
sub
ds
xlat
insl
and
sbb
jo
dec
lcall
sbb
fdivs
lods
test
aad
jnp
lcall
lock
cmp
sahf
jb
andb
xlat
icebp
fnstenv
mov
mov
adc
out
pushf
pop
mov
mov
push
xor
adc
js
sti
add
cmpl
jno
pop
or
sahf
push
sti
hlt
sbb
dec
xchg
push
mov
int
push
movsb
imul
lahf
fists
pop
negb
pop
in
cmp
xchg
push
xchg
movsl
sbb
cli
mov
lds
xor
mov
and
pop
shll
cld
das
idivb
in
mov
fcomps
scas
loopne
mov
leave
cmpsl
rcll
lcall
mov
jmp
push
mov
push
sub
or
push
add
push
fwait
movsb
enter
test
out
mov
sbb
pop
xor
pop
orl
in
sbb
xchg
jo
ja
ljmp
jle
call
test
pop
imul
shrb
enter
cli
add
outsb
sub
dec
inc
jge
rcr
inc
pop
cmp
addr16
imul
insb
and
inc
mov
push
dec
insb
mov
mov
jne,pn
jg
fsts
push
cmp
test
add
stos
mov
test
or
rolb
cld
outsb
aas
pop
lea
xchg
mov
push
mov
mov
push
push
mov
cwtl
mov
adc
jae
je
inc
push
rorb
mov
scas
shr
dec
in
sub
fists
jo
repnz
stc
push
out
data16
cmp
jmp
call
mov
or
sbb
jl
filds
loopne
or
push
inc
push
stos
or
ret
outsb
or
sbb
push
xlat
push
mov
mov
adc
sub
cwtl
insl
jecxz
rol
dec
int3
ja
and
stos
repnz
test
inc
dec
shrl
add
push
aaa
test
jmp
lds
cmpsl
inc
and
clc
inc
loopne
idiv
jle
aad
inc
cmpsl
stc
test
aaa
insb
sti
fmuls
add
lock
sub
lret
icebp
outsb
push
xor
mov
cmp
iret
or
xor
add
or
xchg
pop
and
and
lock
repz
xor
jno
sub
jbe
jge
movsl
push
mov
jecxz
add
lods
subb
call
jmp
aaa
mov
insb
outsb
loope
adc
inc
nop
push
adc
xchg
lret
je
jne
sub
js
adc
popa
lret
iret
aad
mov
mov
faddl
pop
dec
push
cwtl
fdivrp
fcomp
loope
decb
pop
mov
imul
sub
lods
movsl
bound
lods
inc
test
jb
inc
popa
imul
movsl
movsl
push
into
or
adc
fidivl
pop
shll
xor
cmc
jmp
mov
push
shrl
and
mov
test
inc
mov
mov
loop
jp
mov
and
or
je
mov
mov
mov
adc
sub
and
test
inc
addl
ds
pop
mov
dec
jno
xor
jae
cmc
icebp
jecxz
cmp
fwait
imul
cltd
int3
xchg
or
dec
cmp
mul
sbb
std
xchg
dec
lahf
sbb
unpcklps
lret
lea
lea
imul
call
sbb
outsl
adc
fwait
insl
aam
sub
pop
arpl
mov
not
rclb
jns
repz
mov
js
outsb
mov
int3
cmp
adc
leave
inc
sbb
mov
test
cmpsl
sbb
test
mov
sbb
in
adc
ret
daa
int3
inc
lahf
in
dec
insl
in
loop
insl
add
xchg
movsb
sub
push
dec
push
nop
sbb
mov
pop
sub
cltd
mov
adcl
adcl
cmpsb
fwait
mov
hlt
dec
rorl
adc
pushf
popl
arpl
or
push
or
push
inc
mov
sahf
loop
test
int3
lret
dec
sbb
scas
xchg
adc
jbe
jns
and
mov
outsb
orb
mov
ret
sub
adc
push
cmp
cmp
inc
lock
cltd
sub
pop
sti
iret
fmull
sbb
ficoms
or
jl
test
les
adc
sbb
fadd
xor
xlat
js
adc
setns
fisubrs
jne
or
dec
dec
adc
sub
aam
aam
sub
mov
sbb
pushf
pop
dec
shrl
mov
sbb
cwtl
mov
leave
aas
in
sti
shrb
loop
or
mov
push
push
xor
push
je
adc
push
ljmp
sbb
push
imul
repnz
test
dec
dec
or
fsubrs
repz
pop
or
mov
fwait
jae
insl
insl
pop
sub
arpl
dec
xchg
mov
int3
jle
sub
adc
add
es
jge
cli
stc
sub
and
das
mov
dec
push
pushf
lea
lcall
lahf
lahf
imul
pop
xor
lcall
gs
push
and
xlat
push
xchg
sub
in
stc
mov
dec
movsl
xchg
mov
aaa
dec
lods
adc
aaa
insl
dec
mov
in
pcmpgtw
or
aaa
inc
stos
add
sub
and
inc
shl
idivb
jmp
aad
dec
data16
or
pusha
insl
mov
push
mov
sub
sub
mov
lea
icebp
ficompl
xor
inc
insl
pop
pop
add
xor
jge
cmp
lock
dec
out
inc
push
inc
sub
sub
sbb
pop
and
add
cmp
nop
add
lods
inc
sbb
lcall
or
rolb
jmp
stos
and
scas
arpl
test
loopne
test
sarb
dec
sti
pop
inc
sbb
pop
add
adc
test
cld
cmp
jns
les
xor
stos
mov
or
ja
dec
xor
cmp
fnstcw
mov
adc
movsl
fwait
or
mov
call
adc
xor
int3
push
cwtl
jge
aas
xor
imul
sub
fdivp
stos
pop
out
int3
xor
or
pop
cld
sbb
dec
rolb
dec
or
sbb
repz
popa
gs
mov
and
push
in
jge
sbb
cwtl
dec
movsb
es
adc
stc
mov
dec
adc
jb
and
es
xchg
out
xchg
movsb
stc
push
rcrl
pop
jmp
xchg
fwait
lods
xchg
call
loop
pop
repnz
mov
pushf
andb
jno
jno
pop
lahf
xchg
bound
jne
cmp
mov
fiaddl
movsb
lret
fnstsw
jbe
cmpsb
cmp
enter
pop
pop
inc
xchg
or
or
dec
xlat
ss
push
mov
xchg
cli
mov
adc
addl
mov
dec
push
and
add
dec
scas
mov
lock
jp
rcr
icebp
push
xchg
or
out
inc
fnstcw
hlt
mov
test
ficoml
or
lock
lods
leave
out
into
jbe
add
in
ljmp
xchg
mov
jg
cmp
mov
xchg
fisubrs
fcoms
bswap
movsb
mov
or
pusha
loop
out
sahf
cmpsl
jl
enter
xchg
adc
test
jnp
push
sub
add
sub
add
mov
and
out
pushf
push
aad
pop
sub
test
icebp
popf
mov
xor
pop
mov
push
aam
mov
cmp
gs
fildl
or
sbb
stos
mov
adcb
inc
lds
mov
cmp
cli
push
xor
nop
testl
aad
dec
pop
aad
out
xor
jmp
pop
pop
adc
sti
add
jg
pop
je
mov
push
dec
xor
push
sbb
push
aas
repz
leave
inc
adc
lods
jg
or
cmc
xor
jle
jb
pop
cmc
add
cmp
std
iret
cmpsb
fidivs
pop
out
sbb
and
outsb
outsb
xchg
mov
adc
enter
xchg
rorb
sbbl
pop
push
pop
inc
dec
push
cld
das
mov
dec
and
shlb
cmp
mov
adc
xor
cmpsb
add
mov
cmp
rorl
std
and
loope
mov
hlt
fimuls
sub
aad
dec
mov
adc
cmp
or
cmp
and
outsb
add
fldenv
fmul
and
pop
pop
loop
jg
jae
or
cmpsl
pop
in
mov
pop
jp
push
mov
popa
and
push
inc
subl
iret
add
xchg
mov
pop
into
inc
pop
mov
pop
popl
gs
aas
sub
jbe
pop
pop
cs
test
out
movsl
int3
xchg
jns
sbb
cld
pop
call
push
ret
icebp
dec
xchg
adcb
mov
pop
jns
xor
fildl
mov
int3
rdmsr
pop
icebp
dec
push
gs
repnz
test
inc
push
ds
pusha
jnp
scas
lret
out
outsl
nop
call
cmp
add
mov
lea
frstor
ja
add
outsb
dec
add
mov
and
stos
hlt
xor
ret
aaa
push
popf
out
clc
in
and
push
xchg
adc
xor
xor
mov
sub
leave
pop
in
and
aam
fbstp
jecxz
cwtl
clc
pop
xor
faddp
cli
push
sub
or
mov
lret
mov
jb
nop
sbb
mov
roll
arpl
ffreep
jmp
xchg
or
or
cmp
cmpsb
aas
xlat
insb
add
pop
sub
dec
push
xor
test
in
loopne
gs
or
jl
sub
rcr
jp
add
mov
nop
sub
mov
lret
out
jne
dec
mov
ds
push
subl
or
std
clc
cmpsb
data16
and
movsb
out
mov
test
mov
lret
push
in
pop
adcl
xchg
cmp
mov
ljmp
mov
ret
fst
push
and
mov
data16
in
xchg
push
rorl
xor
mov
xlat
mov
cld
fildl
mov
add
popa
jno
pop
mov
xchg
dec
jb
orl
push
xor
leave
or
sbb
ja
negl
xlat
push
clc
dec
sbb
mov
xchg
xchg
scas
adc
insb
mov
push
add
addb
lods
aam
js
pop
add
sbb
adc
cmp
mov
push
iret
xchg
pushf
jb
outsb
loopne
inc
jle
push
and
push
dec
gs
cmp
cmp
scas
or
mov
js
mov
js
cmp
jbe
mov
lcall
fs
cmp
or
mov
inc
dec
pop
das
into
push
movsb
cmp
and
push
and
imul
cmpsb
mov
xlat
pusha
insl
outsb
test
loopne
bound
jno
sbb
outsb
pushf
mov
pusha
xchg
lock
loope
pop
cs
ret
bound
push
xor
sbb
out
imul
out
cmp
dec
lret
rorl
or
dec
or
jnp
dec
sub
outsl
fidivs
rcll
xchg
ss
xchg
jbe
add
lret
fsubr
or
loopne
jge
roll
push
cmp
pushf
or
loopne
enter
aad
cld
xchg
add
add
dec
lods
jg
popa
lahf
xchg
fisttpl
fcmovne
cwtl
lcall
divb
cmp
or
int
loop
dec
stc
add
andl
add
outsb
jle
pop
fsubs
mov
jmp
jecxz
push
mov
sub
and
hlt
xor
sub
cltd
rol
pushf
jbe
popf
aam
mov
int3
xlat
lret
cld
xchg
je
sbb
mov
insl
sub
mov
fbld
and
rcrb
lret
cmp
adc
aad
add
sahf
sub
pop
mov
push
loop
dec
sbb
inc
cli
imul
mov
push
mov
fistl
dec
adc
in
gs
cld
jno
cmc
daa
add
mov
flds
mov
in
testb
add
inc
in
stos
jmp
subl
dec
out
xlat
inc
mov
mov
test
inc
and
dec
enter
push
test
fdivrl
mov
pop
adc
aad
rorl
cltd
ret
pop
pusha
lret
out
testb
mov
xor
cmp
push
push
pusha
cltd
xchg
xor
xor
sbb
inc
clc
add
lock
mov
and
hlt
cmpb
pop
add
cltd
pop
mov
push
mov
jno
or
or
test
sub
sub
in
mov
sbb
xorb
std
push
ja
jne
inc
iret
adc
inc
mov
sub
jg
stos
imul
imul
and
stc
adc
jns
fstl
ja
jmp
in
cmp
test
sbb
mov
in
push
es
dec
add
xchg
insb
fisttpl
cltd
push
repnz
mov
aad
fwait
ja
or
xor
mov
and
sub
in
clc
or
mul
add
and
pushf
jns
stos
fldcw
js
pop
lock
jno
mov
or
loope,pt
shlb
dec
and
and
jnp
shrb
aaa
shl
jbe
or
pop
mov
jne
insl
in
or
int
stos
jle
and
repz
cmpsb
mov
push
mov
enter
addr16
sbb
out
loopne
mov
movsb
lahf
mov
jecxz
mov
mov
lret
xor
mov
and
fsubl
sarb
cmpsl
shr
cltd
inc
and
icebp
xor
stc
enter
xor
nop
sti
test
or
mov
adc
cld
dec
and
push
outsl
inc
adc
xchg
inc
pop
mov
or
inc
xchg
lods
mov
repz
daa
dec
rcrb
ljmp
movsl
lret
mov
js
fwait
rclb
in
dec
add
xchg
cmpsb
shlb
lock
scas
hlt
enter
adc
dec
insl
in
clc
scas
push
cmpsl
cmpsl
cmpb
mov
pop
sbb
mov
sbb
xor
cs
les
add
xchg
or
xchg
adc
pop
fucomi
sti
cli
pop
rcll
or
pop
mov
into
shr
mov
xchg
jge
push
mov
testb
add
xor
icebp
ss
in
icebp
es
xor
ret
icebp
hlt
inc
iret
sbb
mov
push
mov
fwait
jae
and
in
mov
jb
push
aas
lret
mov
mov
push
jne
xchg
adc
mov
inc
and
xchg
dec
pop
stos
add
pop
flds
out
addr16
cli
pop
mov
cld
jecxz
xchg
scas
jp
in
roll
jno
xor
add
mov
aas
ret
lock
pop
push
mov
int3
roll
in
andl
rolb
scas
hlt
adc
mov
sbb
xor
xchg
iret
pop
cli
fdivrs
dec
push
inc
imul
pop
cmp
shlb
sbb
xor
outsb
push
xor
jne
cs
gs
pop
push
mov
xchg
negl
and
cmc
pusha
into
stos
mov
pusha
adc
or
push
mov
leave
lock
pop
cmp
loop
cld
outsb
loopne
pop
jg
psubd
adc
pop
pop
sti
mov
inc
fists
and
stc
mov
lahf
lods
adc
lods
pop
dec
inc
loopne
jg
dec
insb
sbb
call
lcall
outsl
lcall
pop
ljmp
cld
inc
xchg
xchg
cmp
xor
sbb
sub
xor
dec
jl
mov
outsl
bound
call
test
jne
subl
inc
cmp
cmp
xchg
insb
arpl
mov
xchg
mov
xchg
sahf
mov
dec
push
sub
xchg
jb
dec
sub
in
lss
testl
xor
and
rorl
pop
fs
jne
cmp
adc
movsl
mov
pushf
adc
or
mov
es
in
cli
and
pop
cli
mov
out
mov
cmpsb
mov
jns
jns
mov
jbe
or
inc
push
add
sbb
daa
pop
daa
loope
sbb
jns
scas
std
leave
lock
cli
mov
push
dec
jg
adc
push
dec
mov
xchg
xor
xchg
addr16
lahf
sbb
push
clc
mov
adc
and
or
imul
int3
mov
mov
sahf
mov
xor
sub
aam
aad
and
or
cld
cld
stos
xchg
pop
bsr
js
roll
xor
mov
lahf
in
push
mov
imul
sahf
sub
movsb
sbb
dec
xchg
xchg
or
cltd
inc
loopne
sbb
into
dec
xchg
pop
andl
je
test
jo
xor
pop
push
shll
add
push
xchg
mov
push
jge
mov
in
xchg
dec
xchg
orb
arpl
pop
sub
stc
push
mov
cli
mov
sub
ret
rcrb
cmp
pop
mov
jo
add
mov
mov
lods
mov
mov
adc
adc
aam
push
repz
and
scas
adc
je
push
push
xor
aas
sbb
imul
lods
addr16
mull
sub
dec
insl
ret
push
js
xchg
lock
sbb
xchg
mov
inc
inc
pop
push
mov
dec
dec
cmc
jge
outsb
push
out
and
fisubs
and
mov
adc
gs
jbe
movsb
sbb
sub
pusha
idiv
sarb
sti
pop
jnp
out
and
mov
out
mov
stos
dec
jmp
sbb
ficoml
data16
jp
cmp
xchg
shrb
aas
mov
cmp
cs
jg
sbb
icebp
dec
sub
ficompl
inc
sub
jl
or
jp
lock
int
sub
cltd
jge
mov
inc
xchg
sbb
ljmp
dec
inc
out
daa
jge
pop
movsl
scas
pop
jg
mov
pop
cmpsl
fldt
lret
dec
push
stc
jae
es
xchg
pop
dec
lcall
inc
sub
jle
xorb
pop
lcall
jne
push
xchg
dec
jmp
les
mov
xorl
pop
aas
loopne
and
dec
pushf
daa
mov
mov
clc
iret
xchg
and
push
add
fstpl
push
test
jnp
inc
add
in
ja
test
lds
cltd
add
out
inc
xor
adc
mov
and
leave
jns
sbb
adc
es
or
jnp
push
hlt
inc
push
xchg
scas
jl
xor
into
dec
mov
rcrb
aas
fistl
cli
jl
adc
sbb
adc
mov
shlb
xchg
aam
cmp
xor
fistpl
push
movsb
popf
cmpsl
pop
xchg
rcr
cmc
mov
es
dec
cmovno
ds
cmp
sbb
adc
ret
imul
jmp
repnz
xchg
jae
adc
jmp
push
sbb
jmp
jge
or
dec
sub
mov
dec
out
scas
in
mov
ja
jecxz
mov
xchg
jg
inc
pop
test
xchg
cmp
repnz
insl
and
push
push
jg
jae
push
push
pop
sub
repnz
jl
sti
sub
mov
test
push
jp
cmp
adc
mov
mov
jle
xor
in
test
pop
lds
push
mov
xchg
mov
jle
xor
xor
repnz
mov
popf
sub
sub
lret
dec
into
cmp
fmulp
dec
sbb
mov
clc
xchg
pusha
test
pop
rcll
push
movsb
sbb
lcall
inc
lret
push
dec
loop
adc
loopne
pop
xorb
cli
mov
ficoml
xchg
mov
addl
dec
fdiv
loop
fldl
mov
cmpsl
out
mov
mov
or
push
out
dec
in
lods
ja
dec
js
stos
and
call
test
cmpsl
inc
jns
and
into
les
sbb
push
mov
xlat
jno
mov
mov
sbb
es
bound
repnz
push
insb
jno
cmp
mov
xchg
jns
jbe
sub
repnz
aas
lods
mov
mov
pop
in
mov
cltd
bound
fbld
cli
inc
lock
cmpb
xchg
data16
and
loopne
lea
mov
lret
mov
dec
cmp
fildll
xlat
addr16
data16
andl
add
mov
or
out
jnp
scas
iret
popa
xchg
pop
adc
gs
add
mov
dec
movsl
xchg
shlb
cli
mov
lock
iret
adc
lcall
insl
inc
xor
add
xor
jmp
lret
mov
je
dec
or
dec
ret
mov
test
inc
lcall
inc
xor
in
popf
loop
cwtl
enter
mov
add
jae
push
or
loopne
shll
jnp
ds
lock
add
xchg
loope
inc
sub
lret
add
mov
cmp
in
call
adc
je
push
mov
inc
rcrb
add
xchg
hlt
inc
adc
push
out
negl
jb
popa
popa
lock
sbb
jnp
add
push
ror
or
fwait
and
cltd
repz
add
dec
sti
arpl
sub
push
xor
pushf
lea
movsl
roll
lea
or
dec
push
in
aaa
stos
or
out
ss
mov
push
ss
mov
sbb
mov
ret
outsl
fldenv
or
shlb
mov
jne
int
filds
xchg
push
fcompl
pop
mov
adc
stc
clc
cmpsl
repnz
pop
mov
out
imul
sarb
popf
mov
sti
jno
sbb
add
xchg
sub
leave
sub
push
push
daa
sbb
sbb
aaa
popf
pusha
iret
push
push
xchg
and
fldcw
addr16
dec
es
jbe
jl
mov
sbb
adc
in
mov
test
and
dec
xor
sbb
std
fbstp
repnz
aam
aas
pop
push
push
inc
push
pop
mov
pop
sbb
arpl
xchg
cmp
fisttpl
inc
shll
push
cmp
xor
lods
cmp
xchg
out
mov
loop
loope
mov
imul
shlb
and
lock
mov
adc
out
jecxz
adc
dec
fidivs
andb
xchg
test
mov
clc
sub
and
ds
mov
or
fisubl
pop
icebp
insl
xchg
fdivp
iret
inc
sbb
bound
push
cmp
aaa
and
imul
jle
sub
and
inc
shlb
mov
jno
imul
inc
pop
xor
mov
push
xchg
xorb
lret
gs
sbb
jecxz
mov
adc
in
xor
repnz
loope
inc
pop
scas
xchg
inc
sbb
mov
call
mov
repz
incl
mov
xor
push
ja
cmpsb
adc
adc
mov
jb
xchg
mov
sub
xchg
rclb
std
push
lea
jmp
add
ds
xor
add
push
lods
xor
fbld
lret
ret
test
shll
mov
es
imul
mov
fs
cmpsb
lea
add
js
mov
insl
fs
data16
aas
mov
in
add
xchg
mov
in
push
jne
mov
int
mov
mov
mov
loope
stos
and
add
ds
cmp
mov
mov
push
sub
cmp
add
outsb
inc
mov
xchg
inc
dec
sbb
call
jp
test
pop
mov
xchg
cmpsl
mov
jg
invlpg
mov
and
int
mov
aaa
fdivrl
movsl
out
rcr
sub
push
data16
sbb
shr
incb
xor
and
adc
cs
push
sub
and
es
cli
sarl
mov
sbb
movsb
jb
xchg
xchg
push
rol
leave
mov
nop
aam
loope
xlat
jno
mov
aaa
imul
jg
xchg
push
shrl
lcall
popf
aam
subl
cmpl
mov
push
pop
jge
lds
in
ss
faddl
inc
add
cs
rol
mov
rolb
mov
jo
sti
xchg
adc
test
ljmp
xor
add
testl
mov
out
push
sub
dec
inc
std
inc
xor
xchg
notb
mov
das
dec
cmpsl
jno
xor
and
xor
test
xchg
popf
filds
dec
and
loop
lods
xchg
add
pop
or
jae
stos
leave
inc
xchg
mov
adc
jl
gs
pop
in
jmp
add
sub
mulb
sub
leave
add
lds
pop
sub
mov
mov
stos
mov
aam
cmc
inc
call
add
inc
sub
jae
shl
scas
xchg
fists
cmpb
mov
jmp
mov
jecxz
sbb
test
mov
and
fildl
gs
mov
mov
or
test
rcl
jno
xchg
sti
insl
fcmovnb
fxch
pushf
lret
stos
in
pusha
jmp
aam
lcall
pop
adc
mov
sub
add
mov
mov
xchg
xorl
mov
xlat
mov
ret
or
push
and
xor
push
cltd
and
and
xchg
bound
ljmp
or
into
xor
sub
mov
movsb
jl
add
mov
xchg
sub
lods
daa
or
xsaves
int3
insl
cmp
cmp
rorl
mov
jbe
iret
ret
lret
sub
mov
clc
push
shll
popa
pop
aad
pop
leave
movsb
fimull
cmpsl
fucom
add
pand
xor
loope
mov
inc
insb
fmuls
cmp
inc
xor
mov
xchg
push
js
push
xchg
cld
pop
inc
mov
loop
shr
and
xor
xchg
lods
iret
xorl
pop
mov
dec
or
shlb
or
sbb
lock
or
stc
sbb
and
sahf
insl
ljmp
outsl
jb
push
int3
pop
aad
mov
jmp
push
aaa
ds
lods
aas
mov
loope
daa
inc
dec
sub
js
test
stos
lods
adcb
xor
lock
cmc
sar
xchg
dec
jo
ljmp
fs
rcrl
cmp
fnstcw
scas
sub
cmp
data16
pop
outsb
or
hlt
mov
and
arpl
aad
testb
fsub
js
inc
mov
stos
add
sbb
arpl
fimull
or
mov
mov
sbb
push
stc
dec
mov
cmp
setae
test
clc
sbb
xor
je
sbb
sbb
scas
sbb
stos
pop
xor
movsl
scas
pop
cmp
xchg
mov
inc
mov
std
mov
bound
jne
idivb
orl
fldl
lahf
push
jp
sub
fidivrl
leave
cmp
adc
xchg
daa
into
cwtl
push
adc
fdivr
dec
push
or
popf
and
iret
mov
push
xorb
lret
sti
xor
push
pop
stos
and
mov
or
cmp
les
xchg
or
sbb
jns
std
aad
fs
aam
pop
out
mov
mov
into
rclb
hlt
or
ret
pop
fdivrl
pop
pop
add
and
mov
ror
pop
sbb
cmpb
nop
sarb
enter
xchg
cwtl
test
pop
data16
or
pop
cmpsb
add
pop
insl
cmp
mov
adc
xchg
imul
push
aam
lahf
push
in
push
mov
lock
cwtl
mov
out
stos
add
aam
jecxz
ljmp
out
pop
push
bound
dec
scas
cli
xor
or
lds
leave
shrl
dec
xor
sub
add
sbb
jle
adc
pop
jmp
cmpb
incl
pop
ret
pop
jne
xchg
shr
xchg
adc
jae
gs
xchg
xchg
sub
dec
cmp
sbb
mov
in
jnp
or
mov
aas
shll
mov
call
leave
loopne
insb
jnp
sbb
hlt
mov
inc
mov
ficomps
mov
mov
xor
jb
sbb
mov
dec
daa
jl
ljmp
dec
imul
cmpsb
pop
add
mov
xchg
pop
push
aad
adc
loopne
push
test
xlat
arpl
xchg
adc
cmp
inc
sub
mov
xor
mov
repz
or
insb
or
jg
pop
call
inc
sbb
sub
xchg
test
insb
inc
and
mov
xor
sub
mov
push
push
out
out
mov
aas
ljmp
pop
mov
pop
mov
pushf
xchg
push
repnz
and
dec
pop
sbb
xor
lods
cld
mov
xchg
adc
hlt
and
cli
push
jnp
inc
mov
cmc
int3
aam
inc
xor
mov
sbb
jmp
pop
addr16
inc
pop
outsl
cmp
or
cmp
fwait
xor
loop
sub
icebp
lret
aam
push
add
cmpsb
ret
test
mov
cwtl
mov
mov
jecxz
push
enter
dec
aad
cmp
repz
es
test
jbe
aas
pop
sbb
cmc
jecxz
jp
lcall
sbb
jns
cwtl
stos
lcall
psubw
jo
rol
addb
loope
inc
rorl
cmp
cmpsb
xor
pop
add
jle
cmp
addr16
sub
push
mov
adc
data16
jmp
mov
test
xchg
xchg
enter
in
xchg
pushf
jne
jns
ret
pop
outsl
aad
adc
mov
mov
mov
mov
out
pop
adc
les
popf
ljmp
call
bound
les
pop
push
aas
pusha
das
sub
and
mov
push
adc
cmp
cmpl
push
rorb
lods
fisubs
lock
aaa
adc
and
dec
imul
jne
mov
lret
adc
ret
sub
dec
icebp
jge
loopne
subb
pusha
test
jns
jns
into
mov
imul
fldenv
xorl
mov
push
ret
loop
sbb
inc
mov
mov
leave
in
jle
fwait
and
out
ljmp
cmp
dec
push
popa
xor
inc
movsb
test
call
add
jecxz
mov
insl
sbb
mov
out
fcoml
pop
jg
shll
aaa
imul
mov
mov
adc
cmpsl
and
mov
xchg
stc
and
sub
je
pushf
dec
lds
adc
mov
mov
xor
cmpsb
dec
mov
repz
push
pmaddwd
lds
dec
push
jl
jecxz
add
pop
stc
push
dec
ret
lods
push
ss
fisubl
or
fcomip
push
int
divb
movsl
push
adc
cmp
adcb
shrb
adc
pop
push
cs
rolb
loope
enter
and
arpl
rcrl
jne
ds
mov
xor
das
andb
mov
bound
push
pop
ljmpw
andl
fimuls
fwait
out
xchg
aas
int3
xor
leave
mov
or
out
push
sub
or
scas
test
mov
iret
not
lds
push
gs
das
xchg
or
pop
mov
push
jo
cwtl
cli
jbe
decb
mov
iret
sub
testb
scas
test
and
dec
out
in
sub
out
add
andl
pop
les
or
jmp
adc
adc
aaa
add
cmpsb
add
ds
xor
jb
jmp
adc
cmpl
je
imul
insb
mov
inc
sarb
sbbb
int3
clc
stos
stc
sbb
pop
fistpll
testl
xchg
or
pusha
sub
pop
mov
jae
idivb
jns
mov
lds
jb
mov
xchg
divb
and
pop
xor
or
mov
mov
xor
push
mov
inc
idivl
xor
mov
nop
fcomps
xchg
lahf
jl
jno
dec
or
inc
sbb
roll
xchg
or
test
in
or
or
mov
insb
and
vunpcklps
dec
fisubrs
dec
imul
jecxz
addr16
mov
insl
sub
xchg
push
rcr
arpl
xchg
fmull
lea
pop
push
push
mov
leave
xchg
roll
scas
cs
mov
or
addr16
cmp
mov
push
jbe
mull
sbb
ficompl
sbb
cmp
fbld
fs
cmp
rorb
pop
push
mov
pop
inc
lock
inc
aas
and
ljmp
fisttpl
jecxz
clc
and
insl
sbb
sahf
mulb
test
mov
sub
adc
fistpl
es
jmp
xchg
inc
daa
mov
inc
dec
lret
lds
inc
js
push
add
mov
shlb
setle
pop
rcll
repnz
js
or
or
jns
cmc
inc
xor
add
cmpl
bnd
aam
scas
mov
or
and
xchg
xchg
icebp
roll
roll
lea
out
pop
nop
pop
enter
push
sub
inc
fdivrs
iret
dec
fstpt
test
mov
sti
mov
out
mov
sbb
imul
or
jmp
addl
mov
imul
cld
insl
out
jecxz
xchg
fcoml
cmc
push
loop
ljmp
dec
stc
test
outsb
ret
jo
nop
inc
stos
inc
std
dec
sbb
dec
aam
mov
lds
add
inc
test
gs
cli
fsts
in
inc
or
mov
imul
dec
out
mov
cmpsl
cmp
imul
test
leave
dec
arpl
scas
arpl
lcall
fisubrl
ret
pop
daa
jbe
aas
andnps
in
jnp
pop
sub
jb
ret
dec
data16
loope
lea
repz
inc
xor
nop
and
sbb
hlt
cmpsl
dec
mov
fsubrs
lahf
test
xorb
fsubs
jl
sahf
jne
mov
data16
test
mov
outsl
pusha
sar
data16
lds
in
pop
into
addb
xchg
mov
lods
mull
insb
adc
cmpsl
les
jl
notb
je
or
jae
mov
cmc
jne
imul
pusha
mov
push
in
xchg
imul
jb
inc
int
pushf
mov
mov
sub
out
xorl
cmp
lret
sti
out
ret
out
lcall
and
pop
out
loop
mov
aaa
lds
pop
enter
lods
shr
cmp
push
loopne
frstor
xor
arpl
adc
sub
shr
inc
setne
sbb
sub
aas
or
sbb
ret
sub
mov
dec
cs
jno
add
test
adc
in
xor
add
fcom
filds
cmpsl
sbb
out
pushaw
aam
mov
sahf
push
cmp
sbb
es
and
popf
and
xor
enter
cmp
ret
sarl
and
mov
cmp
xchg
sbb
lahf
test
loopne
sub
and
mov
pop
cltd
mov
inc
lahf
sub
leave
ja
scas
sbb
pop
sbb
mov
sti
lahf
aaa
mov
popf
xchg
pop
sbb
add
es
ret
jno
cmp
inc
mov
push
ss
jl
cmpsl
lods
dec
cltd
mov
jb
push
push
xor
cs
inc
dec
out
arpl
je
push
xorb
pop
pop
daa
mov
stos
add
dec
pop
adc
das
pop
rcr
mov
or
dec
adc
leave
ret
sbb
rorl
aas
or
in
jo
imul
push
fs
std
push
out
xchg
es
push
adc
test
scas
fiadds
xchg
fimull
mov
adc
fwait
pop
aad
adc
jl
mov
scas
cmpsb
mov
dec
xor
and
dec
pop
cwtl
pop
push
xchg
fcompl
push
mov
xchg
push
xor
dec
sbb
mov
or
jo
adc
inc
stos
mov
orl
cmp
fstl
popa
call
insb
outsb
in
ljmp
mov
pushf
fisubrl
in
frstor
mov
xchg
gs
popa
loopne
pop
out
mov
mov
mov
jp
sub
fisubrs
call
jae
jge
pop
data16
jecxz
cmp
pop
xchg
xchg
lret
cwtl
aam
push
addl
cmp
stos
mov
jne
negl
lret
rcll
shufps
inc
lds
mov
mov
sbb
push
pop
mov
inc
add
call
enter
call
inc
in
je
in
iret
test
mov
pushf
ret
in
mov
cwtl
cli
loopne
sar
cmp
cmp
cmc
sbb
cmp
xor
adc
sbb
push
daa
xor
addr16
mov
lret
mov
sti
popa
ds
mov
pop
dec
fnstcw
jno
subl
jae
out
xchg
sbb
xchg
add
cmp
pushf
mov
cmp
loopne
xchg
sbb
jg
sbb
data16
sub
mov
pop
mov
sbb
dec
loopne
xchg
shl
mov
and
cmp
loop
cmpsl
lcall
insb
push
pop
notl
mov
pop
push
fists
fs
jae
add
mov
int
push
clc
push
nop
aas
out
mov
fcmovnu
or
lds
sbb
jmp
jecxz
iret
int3
imul
push
repz
aam
cltd
enter
mov
in
push
test
enter
ret
je
push
add
pop
jl
repz
adc
lds
testb
inc
cmp
or
dec
stos
pop
dec
mov
inc
scas
or
xchg
push
inc
adc
xchg
add
sti
mov
mov
dec
fisubrs
repnz
dec
xor
xchg
call
mov
mov
insb
lods
mov
and
pop
dec
fcmove
xchg
cmpsb
mov
call
add
mov
add
sahf
cmp
xchg
xchg
jo
jnp
mov
inc
cmpsl
cmpsb
pop
mov
inc
or
xchg
mov
imul
in
cmpsb
dec
lea
in
shr
sbb
xchg
pop
scas
xchg
xchg
xchg
push
xchg
adc
inc
and
xor
fs
addr16
js
loopne
sti
pop
add
enter
movsl
and
mov
and
xchg
in
subb
push
ds
in
repnz
rorl
push
mov
stc
ret
or
and
xchg
mov
loope
in
mov
repz
sbb
movaps
ja
xor
out
mov
daa
xor
nop
lods
call
lret
bound
je
mov
jmp
sbb
or
imul
or
aam
orl
insb
or
inc
loopne
push
scas
sbb
push
jbe
xchg
cmc
xor
cmp
mov
sbb
add
gs
and
popa
fbstp
sub
ss
jecxz
loopne
pop
popa
sub
or
pop
lahf
mov
lea
lea
test
jnp
int3
mov
pop
setae
leave
jnp
loop
fnstsw
test
sbb
outsl
cwtl
ljmp
push
rcrl
arpl
movsb
pop
lret
sub
imul
outsb
mov
sub
mov
int
jae
or
mov
mov
sbb
fnstenv
xchg
adc
cli
daa
cmpb
or
std
repz
xor
inc
lretw
enter
xchg
cmp
jecxz
jbe
mov
add
jnp
outsb
sahf
cmp
int3
outsb
clc
pushl
out
fs
packssdw
add
int
sbb
out
xor
jge
in
pop
mov
dec
cmp
sbb
mov
mov
in
jle
outsb
dec
lea
test
cmpb
inc
mov
add
loop
push
int3
sti
scas
sub
lret
jecxz
jmp
aad
lahf
lahf
lock
push
jg
nop
loope
mov
stos
int
out
push
mov
movsl
sub
fistpll
lds
dec
imul
pop
fcomps
cmp
je
push
mov
ret
pop
jle
insb
mov
cmp
ds
mov
mov
push
cmpsl
adc
sub
adc
test
xchg
push
pop
call
das
lcall
mov
sahf
inc
cmp
lret
fidivrs
enter
ss
ss
jns
push
lds
adc
sbb
out
and
jg
orb
loop
pusha
stos
add
stos
in
shlb
cs
jge
pop
ss
mov
xor
enter
push
push
cmp
es
insl
xchg
or
in
orl
push
pop
xchg
fwait
addl
ja
adc
lock
xchg
sub
mov
inc
std
gs
xchg
outsl
and
jbe
sbb
iret
push
push
mov
push
inc
xor
cmpb
out
shrl
ret
dec
lds
and
hlt
xor
sbb
rcrl
stos
jg
loope
push
fs
and
es
xchg
add
sub
mov
push
std
push
pop
pop
ljmp
call
aas
push
mulb
push
mov
or
loope
dec
shll
call
mov
push
mov
cli
pop
xchg
popa
out
mov
clc
push
pop
xor
or
xor
push
pop
jmp
xchg
imul
mov
call
sub
mov
ret
mov
jno
or
lods
in
test
std
fxtract
lret
imul
cmpl
sub
daa
loope
adc
int
mov
fisubrl
mov
aas
or
mov
mov
jns
into
push
nop
cmp
mov
nop
jns
scas
iret
out
fbstp
adc
lods
cli
fldenv
icebp
mov
mov
cmp
ds
sbb
jmp
pop
shll
xor
loop
fidivs
pop
fstp
outsb
jae
lret
and
out
pusha
cmpsl
mov
stos
fs
mov
loope
out
dec
movb
pop
enter
sbb
out
and
lcall
es
outsl
jne
cmp
rol
sbbl
insb
mov
loop
lret
movsl
lods
inc
dec
sbb
pop
inc
push
insl
repnz
es
outsb
imul
xor
push
mov
push
inc
sbb
or
or
pop
push
mov
test
cmp
inc
add
into
sub
mov
lods
out
mov
loopne
daa
jae
inc
pop
or
mov
mov
mov
popf
das
cmp
adc
pop
inc
das
xchg
jp
push
push
cwtl
fstps
mov
nop
push
mov
ljmp
add
pop
je
jae
enter
mov
pop
dec
xlat
call
scas
fbld
jne
jmp
mov
fimull
add
and
or
cmp
jb
out
outsl
les
pop
subl
cmp
xlat
xor
sbb
repnz
jo
or
push
xor
lret
adc
js
cmpl
pop
sbb
mov
pop
or
xchg
mov
outsb
xchg
test
lret
pop
pop
sub
test
cltd
ret
adc
dec
or
lods
pop
mov
pop
cli
pop
lcall
pop
lret
mov
dec
out
push
das
mov
and
mov
cmpsl
call
dec
cwtl
arpl
xchg
int3
or
xor
or
fmulp
ret
sub
pop
fwait
xor
jo
xor
xchg
loop
fdiv
xor
jo
out
out
in
push
sbb
jnp
adc
push
adc
inc
or
outsb
outsb
jmp
shll
mov
add
hlt
push
mov
or
push
push
jge
test
fdivrl
or
and
mov
js
movsl
xor
pop
xchg
inc
das
sub
ficomps
adc
cli
inc
movsb
clc
dec
loope
cmp
das
daa
rcll
stos
jns
ljmp
jns
in
push
jmp
es
or
ret
xor
xchg
scas
jecxz
les
dec
sub
enter
jl
mov
jne
add
addr16
or
mov
cmovae
and
mov
mov
xor
rcrl
divb
dec
mov
fcomps
mov
sbb
inc
insl
sub
sbb
push
mov
nop
nop
movsl
outsb
popa
sub
jb
add
pushl
pop
pop
or
cmc
dec
pop
les
test
loopne,pn
in
cmpsb
fucomp
repz
dec
mov
sbb
shll
and
adc
in
les
push
test
out
and
cmp
xchg
test
in
dec
pop
and
ret
cltd
inc
and
jb
dec
cmp
inc
or
insl
jnp
cltd
add
ret
fadds
ffreep
inc
mov
mov
stos
xchg
pop
aas
sub
mov
xchg
lock
xchg
xor
movsb
mov
xchg
outsb
divl
int3
xchg
outsb
mov
pop
jmp
scas
cmp
notb
push
hlt
lds
repz
lret
fstpt
jmp
inc
test
clc
dec
jbe
stc
xor
test
outsl
jle
divb
adc
jle
ss
mov
add
mov
ficoml
sbb
push
cmpb
movsl
daa
pop
mov
pop
and
push
sbb
adc
pushf
cmc
xchg
and
ret
jecxz
pop
es
sbb
add
out
inc
imul
dec
mov
pop
cmp
lcall
xchg
ret
push
sub
sti
sub
in
sbb
xchg
fisubl
xchg
xchg
in
mov
jle
add
mov
adc
xor
xchg
xchg
sti
outsl
mov
stos
fimuls
dec
and
mov
test
imul
xchg
cmp
seto
cmp
aaa
das
in
pusha
and
sbb
dec
dec
mov
cmp
stos
pop
xchg
inc
lds
push
imul
repz
cmp
rclb
insb
xor
in
mov
movsb
sbb
inc
sbb
int
sbbb
imul
mov
cmpsl
jl
cmpsb
mov
in
aaa
imul
sti
out
fsubr
mov
out
popa
pop
sbb
sub
mov
testb
mov
lret
call
cmp
mov
es
lret
or
testl
adcb
mov
add
or
inc
push
test
mov
addr16
sub
cltd
out
add
dec
dec
lret
cmp
push
pushf
aas
sti
cmp
insl
adc
pop
push
pusha
sub
and
adc
inc
mov
stos
lcall
xor
pop
stos
dec
lcall
std
inc
cmp
in
test
cli
adc
sbb
xchg
daa
stc
out
mov
mov
mov
pop
push
ret
or
inc
aad
dec
mov
loopne
sbb
nop
adc
loop
xlat
andb
loopne
jno
xor
mov
mov
sub
cs
lds
pop
inc
movsl
jmp
inc
cmpsb
in
jns
push
mov
mov
loopne
mov
mov
xchg
clc
pusha
jne
sbb
mov
insl
outsb
sarl
out
mov
movsb
enter
pop
sahf
bound
sub
das
sub
xor
decb
xlat
dec
mov
in
ret
js
shll
mov
sub
sub
xchg
inc
imul
in
cmp
pop
out
xchg
add
add
dec
lea
stos
mov
sbb
mov
lret
mov
cmpsl
mov
ret
cmp
jbe
decb
pushf
pushf
jecxz
hlt
push
fldenv
mov
imul
imul
xlat
hlt
lret
cld
ljmp
jne
test
stc
fstps
ljmp
sub
xorb
or
icebp
xchg
mov
fs
je
das
hlt
inc
cs
mov
cmpsl
cmpl
rcrb
jbe
mov
mov
cld
inc
daa
jae
inc
xchg
dec
inc
push
shlb
pop
sti
loopne
cli
xchg
add
sub
mov
stc
repz
xchg
adc
xlat
dec
lcall
mov
or
bound
fiaddl
cmp
pop
adcl
aad
aad
pop
das
sbb
cmp
fs
jmp
fwait
insb
inc
out
inc
inc
pop
adc
or
inc
fwait
cwtl
aad
pusha
ficompl
lods
adc
outsb
cmp
push
inc
pusha
and
in
jbe
jb
cmp
out
mov
and
and
sar
out
mov
sbb
cmp
movsl
bound
push
adc
shll
insb
out
adc
dec
jecxz
adc
mov
jns
push
insl
rol
cmpsl
out
ret
in
pop
test
and
pop
pop
xlat
dec
and
sub
in
iret
fistpl
cmp
mov
stos
das
pop
jne
out
fs
lock
dec
jge
fwait
mull
subl
adc
out
push
mov
pop
hlt
mov
push
pusha
sub
out
mov
lcall
mov
ja
movzwl
aaa
cwtl
xor
cli
add
lock
cmc
push
jb
and
push
cmp
sub
adc
push
and
jp
bound
sbb
popa
lds
push
nop
out
loope
fbld
pop
adc
hlt
hlt
add
ss
or
in
jmp
outsl
xchg
push
sbb
sub
dec
dec
jmp
ret
xchg
jg
mov
cld
dec
jno
pop
sub
insb
in
and
jno
or
pop
addr16
popa
sbb
jnp
out
cld
lods
and
inc
out
xor
out
add
adc
jl
subps
clc
out
icebp
scas
sub
jp
mov
je
and
fldenv
fwait
movl
in
mov
out
enter
sti
in
cmpsl
and
into
iret
jg
jno
cmp
jno
add
sub
and
mov
inc
ds
insb
jle
lret
push
xchg
mov
jnp
xchg
dec
lods
push
xor
mov
enter
mov
shl
push
daa
fstl
adcb
xor
push
imul
gs
aad
sub
mov
les
sbbl
arpl
popa
or
pop
jmp
ss
mov
shl
mov
and
int
inc
and
addr16
cmp
pop
cmp
sbb
scas
andl
loopne
jp
into
push
or
sbb
jg
and
divb
sub
lret
fstps
adc
cmp
cmp
mov
in
add
jnp
call
fistpl
pop
fisubs
ret
cmp
mov
push
adc
clc
cli
push
aam
pop
sbb
and
mov
dec
mov
ljmp
add
cmpsb
xor
std
inc
icebp
and
scas
cmpsl
push
in
xchg
or
stos
add
std
mov
mov
jecxz
imul
cmpl
sbb
out
sbbb
pop
mov
cmp
add
pmullw
xchg
inc
jg
ds
pusha
into
clc
adc
imul
and
leave
in
loopne
loopne
shr
rorl
stos
jne
xchg
pop
ss
arpl
xchg
sub
cli
leave
fcomps
mov
imul
loop
ljmp
push
pop
mov
xorl
popa
stc
dec
xchg
popl
in
push
roll
test
in
mov
cmp
xor
ja
lret
or
mov
enter
jmp
sbb
in
gs
bound
pop
push
mov
icebp
lcall
add
out
cmp
je
add
mov
pop
push
add
or
mov
mov
sbb
mov
xchg
add
xchg
out
push
icebp
ret
cmp
mov
jns
jno
stc
dec
cld
movsb
ss
or
icebp
das
cmp
loope
in
rcrb
js
fbstp
ljmp
xchg
mov
add
push
jge
pop
out
pop
ss
or
cmp
jns
mov
imul
and
repz
js
stos
inc
lret
cwtl
je
jb
ret
dec
out
sbb
cli
jle
pop
xchg
repz
fisttpl
in
negb
scas
xor
lock
or
jecxz
jo
sbb
dec
add
sub
pop
push
mul
iret
mov
lods
mov
cmpsb
lods
mov
out
imul
xchg
cmp
sbb
and
push
imul
ds
jnp
insl
and
push
inc
dec
imul
ret
mov
mov
into
stc
push
cmpsl
lock
popf
movsb
movb
or
pop
or
xchg
imul
jecxz
es
lret
mov
jle
insl
in
dec
ds
adc
sub
sub
mov
int3
xchg
arpl
dec
adc
mov
jmp
es
or
bound
mulb
das
mov
xor
xchg
push
lret
add
pop
into
push
jmp
jl
push
call
or
mov
push
sbb
add
add
inc
pop
xchg
addr16
pop
in
mov
push
cli
dec
lds
adc
ficomps
fwait
lret
mov
lds
stos
icebp
push
loop
mov
ja
ds
test
cltd
mov
movsl
in
adc
pop
test
dec
and
nop
call
dec
jecxz
and
shlb
adc
popa
rcrl
push
jg
aam
scas
push
xchg
add
dec
cmp
adc
xchg
pop
push
fisttpll
and
daa
sub
sbb
les
popf
sub
sub
xchg
out
fisttpl
fnstcw
data16
out
adc
enter
jno
mov
pop
jg
sub
ret
repz
jp
mov
mov
mov
mov
sti
xlat
mov
mov
inc
pop
sub
ljmp
sub
arpl
add
daa
repz
xor
mov
mov
push
scas
ret
mov
push
pushf
loope
insl
std
add
jmp
pop
outsl
imul
and
out
cld
pop
cmp
and
pop
rcrl
fwait
enter
aaa
test
and
ds
jecxz
inc
mov
pop
ret
dec
in
pop
xchg
ret
push
insb
ja
lods
cmc
or
loopne
and
pop
stos
or
adc
sbb
adc
jns
into
aaa
insl
loopne
in
das
js
sbb
push
inc
mov
stos
pop
into
pop
fsubl
xchg
xor
or
push
addb
mov
rclb
and
add
sub
push
mov
repz
stos
sub
push
xchg
pop
adc
lahf
imul
push
xor
xchg
sub
cs
je
mov
icebp
mov
jmp
arpl
xchg
push
stos
insb
xchg
js
stos
int
pop
ss
jecxz
clc
inc
ret
mov
jle
jns
jge
fsubrl
ljmp
jo
push
shrb
pop
and
aas
popf
lahf
sbb
aad
les
xor
icebp
push
inc
push
jmp
fnstsw
xchg
dec
mov
inc
es
adc
sbb
push
mov
sbb
and
lock
loop
cmp
mov
int
or
cmp
jg
or
insb
out
sub
xor
mov
jno
inc
dec
jnp
arpl
testb
mov
dec
adc
shrb
stos
pop
cmp
lcall
mov
aad
dec
mov
subb
movsl
ret
dec
cmp
mov
dec
movsb
mov
jle
in
lahf
jne
mov
or
aad
adc
das
outsl
or
iret
sub
test
imul
fcomps
dec
iret
call
pop
pushf
add
movsl
jl
jge
data16
push
xorl
cld
cmp
repz
push
ret
fiadds
jge
cli
movsl
pop
inc
jb
inc
sbb
pop
int
mov
xchg
xchg
sahf
incl
cmp
fbstp
jns
xchg
add
popa
cmp
out
mov
push
rolb
rcll
mov
es
xchg
pop
push
push
jo
xor
stc
fs
cs
ret
xchg
mov
fstp
ja
sbb
mov
ja
ja
in
push
adc
in
push
mov
mov
imul
xor
mov
cmpsl
jg
and
fwait
popa
or
add
ja
add
test
cmp
out
jae
pop
int
jg
shlb
xchg
je
divl
ret
dec
hlt
xor
cmpsl
loopne
lahf
xor
dec
loop
adc
fmulp
ljmp
hlt
adc
fcomi
test
and
hlt
adc
xchg
decb
jmp
jle
js
lcall
subl
push
out
movsl
mov
scas
mov
fadd
ret
mov
cmp
lods
mov
stos
arpl
xlat
adc
mov
pop
add
adc
push
lcall
fcoms
sub
sub
filds
hlt
cli
rorb
jge
imul
enter
mov
sbb
xchg
rcl
outsb
insl
das
inc
jae
mov
cmp
and
mov
dec
hlt
mov
loop
daa
xor
sarl
and
cmp
jno
movsl
mov
jmp
divb
xor
insl
sub
mov
lods
stc
dec
xor
mov
sbb
add
xor
adc
enter
fcmovnbe
cmp
push
sbb
jp
fdiv
adc
leave
jmp
ss
dec
nop
sbb
outsb
xchg
ficompl
sub
cmpsb
xor
es
or
imul
shlb
icebp
popa
cmp
jl
jecxz
mov
imul
loopne
mov
cltd
fdivs
arpl
mov
movl
lea
inc
add
icebp
adc
xchg
js
insl
aas
popa
cmc
push
xchg
cmp
mov
sub
push
mov
xchg
jno
jno
mov
insb
push
xor
jecxz
xchg
in
repnz
call
mov
test
mov
sbb
rorb
lods
sub
mov
sbb
jle
filds
mov
mov
scas
ficomps
adc
add
nop
stc
inc
pop
push
xor
push
xor
adc
xchg
inc
jge
js
or
imul
mov
jb
or
and
xchg
inc
xchg
out
lret
xchg
popf
mov
or
ljmp
push
or
jno
out
gs
scas
dec
addr16
lods
arpl
xchg
inc
xchg
rcll
and
dec
mov
push
and
push
pop
aam
dec
scas
xor
inc
pushf
ss
mov
cmpsb
dec
idivb
pop
push
xor
mov
fdivs
sbb
mov
fstps
mov
nop
xchg
fistl
xor
inc
mov
jne
dec
fcomps
jecxz
mov
test
scas
int
dec
sbb
cmc
or
inc
lcall
repz
out
aas
aaa
movsl
pop
sub
mov
inc
push
push
xor
mov
lahf
in
dec
sbb
ficoml
and
pop
fisttpll
inc
push
call
xchg
xchg
xor
int3
test
rclb
fisubrs
fwait
js
adcl
mov
xchg
nop
test
enter
imul
cmpl
add
lea
push
jae
add
dec
lret
push
dec
sub
rolb
ljmp
jp
movl
lahf
mov
push
xchg
cmp
xor
xchg
bound
fwait
adc
pop
xchg
repnz
sbb
jle
cltd
dec
and
mov
and
out
jns
aam
addr16
sti
mov
inc
add
enter
out
addb
inc
mov
aas
or
xor
call
out
mov
adc
push
cmp
push
sbb
sub
sbb
cmpl
dec
and
and
and
int
fisubrl
mov
outsb
lcall
jbe
mov
dec
loope
andl
inc
pop
mov
add
out
jne
fbld
mov
jl
push
mov
mov
xchg
jbe
mov
jns
fs
add
test
mov
xor
pop
inc
dec
adc
fwait
insl
adc
dec
arpl
pop
mul
pop
jmp
push
icebp
add
mov
movsb
adc
pop
xor
mov
rcll
jg
popf
dec
sbb
push
test
js
xor
arpl
testb
daa
movzbl
adc
push
ja
lock
fldenv
sub
shrl
push
insb
fmull
fcoml
pop
mull
mov
xor
push
cwtl
enter
test
cmp
addr16
outsb
ret
push
sub
adc
test
mov
cltd
xor
mov
orl
sarb
xor
ret
fnstenv
out
je
je
insl
cmp
and
lds
rorl
xlat
xor
dec
ret
int3
movsb
test
loope
das
notl
mov
mov
clc
out
pop
std
push
inc
push
pushf
inc
stc
bnd
outsb
cmp
cmovne
out
mov
xor
xorb
sbb
mov
mov
negl
or
bnd
push
pop
jmp
adc
fstps
pop
call
jb
cld
xchg
movsl
jnp
push
pop
cmc
daa
daa
movsb
bound
sbb
dec
movsl
jne
and
lock
or
sbb
pusha
or
arpl
mov
xlat
fistpll
enter
or
cmp
xor
daa
mov
add
in
pop
mov
and
movsl
and
sbb
xchg
les
negb
and
pop
loopne
sbb
test
test
xchg
dec
cmp
push
gs
faddp
pop
movsb
outsb
add
push
jae
das
arpl
jmp
mov
mov
lods
pop
clc
sbb
push
xchg
aas
aaa
mov
inc
int
addb
add
xor
dec
xchg
and
mov
stos
int3
cmp
jmp
and
jns
mov
xlat
lock
insl
hlt
mov
cmpsb
adc
out
pop
jne
xchg
jecxz
jle
lods
fsubrs
pop
rorb
arpl
pop
out
pushf
jne
xor
mov
push
and
mov
add
mov
test
xchg
inc
mov
repnz
fcompl
pushf
xchg
adc
mov
sub
dec
andl
mov
cmp
cli
popf
cmp
adcl
in
pop
or
or
in
mov
scas
pop
mov
scas
cmp
adc
das
jl
sub
mov
mov
fwait
loope
sub
pop
cli
and
and
push
lcall
lds
inc
sub
pop
shl
pand
in
add
fidivl
popf
xchg
dec
lret
cmpl
add
xchg
dec
data16
mov
sub
gs
jge
or
pop
fwait
sbb
clc
adc
lahf
mov
hlt
movsb
mov
fidivrl
xchg
dec
jo
fmuls
xor
daa
jl
jmp
test
out
adc
test
push
movsl
adc
cs
push
dec
int3
pop
ds
cmpb
dec
add
inc
pop
mov
xor
or
fildll
xchg
mov
cmp
push
sub
jnp
push
add
sti
cmp
sahf
pop
loope
imul
pop
adc
inc
int3
sub
add
dec
sbb
sub
sub
fildll
xchg
call
pop
jmp
xchg
stos
xorl
lret
xchg
jns
imul
cli
lcall
sbb
scas
xchg
pop
movsb
xor
les
imul
test
jp
lret
mov
fdivs
test
cmp
in
insb
int
lods
mov
fcomps
rclb
pop
cmp
xchg
xchg
or
addb
fdivp
rorl
mov
jmp
lock
cwtl
cmp
jmp
loop
sub
add
fcoml
mov
pop
mov
out
inc
dec
test
pop
test
push
loopne
dec
pop
gs
cli
mov
sbbb
scas
cmp
pushf
in
or
push
clc
dec
pop
out
mov
pop
inc
jecxz
mov
fwait
cmp
test
fsubrp
mov
mov
mov
adc
or
dec
pop
xchg
rcll
jno
sub
mov
mov
mov
xchg
jo
mov
gs
aas
lods
sub
cmc
push
clc
outsl
pusha
push
xchg
cmpb
jo
rcll
push
movb
cld
pop
xor
pushf
pop
and
mov
jo
push
ret
je
pop
outsl
push
es
aam
jl
les
lds
jecxz
arpl
sti
sub
jnp
es
cwtl
imul
xlat
scas
ret
lahf
shrl
lock
sub
mov
cmp
outsb
stos
jb
pop
movsb
scas
push
add
push
ret
test
ja
mov
pop
push
fcomp
pop
add
hlt
jae
ret
push
lods
call
xlat
xor
test
jecxz
jmp
add
pusha
mov
xor
aad
outsb
fisttps
pop
sub
jle
or
pop
stos
cmc
ret
add
mov
sbb
pop
mov
lea
stc
mov
lock
dec
jo
pop
push
xchg
rorb
pusha
ret
and
and
adc
jecxz
shlb
cmc
imul
pop
ss
dec
popf
mov
jns
insl
pop
mov
and
addr16
pop
push
mov
xchg
fs
into
imul
fmuls
in
fiadds
jo
jbe
popf
jmp
or
inc
mov
adc
fwait
cli
add
out
int
add
imul
cmp
xchg
stc
and
jbe
add
fstps
sbb
sbb
or
icebp
xchg
add
test
or
inc
scas
pop
sar
loop
xlat
sbb
cmp
int
dec
leave
fcomp
stos
in
push
iret
icebp
gs
mov
jecxz
mov
dec
push
jbe
sub
aas
roll
scas
out
rorb
lcall
inc
aas
sub
mov
adc
scas
outsl
cmpsb
data16
mov
icebp
mov
fldlg2
jb
stc
jae
imul
andb
mov
push
cmc
pop
adc
in
out
add
loope
mov
aas
and
jns
push
rcrb
shlb
cmp
adc
mov
or
xor
xor
add
adc
and
mov
or
mov
jmp
outsl
in
jne
inc
push
fcomp
cs
out
fadds
pop
pop
nop
pusha
jne
dec
gs
in
inc
das
test
and
add
push
loopne
fldl
adc
and
adc
aaa
mov
lret
mov
in
adc
or
aaa
lods
stc
out
in
fwait
js
push
sbb
fdivs
xchg
jbe
mov
or
dec
cmp
mov
inc
mov
xor
outsb
insl
xor
mov
test
dec
jns
jl
mov
aam
pop
mov
inc
orps
add
les
popf
rcrl
adc
push
push
push
loop
jns
add
pop
repz
lods
lds
ja
mov
es
adc
pusha
dec
adc
mov
xor
jge
popf
jns
push
sbb
xchg
fldenv
lds
adcb
dec
xchg
fnsave
fiaddl
sti
test
xor
or
sub
cli
cli
and
sub
ljmp
xchg
mov
imul
imul
dec
lods
and
sub
inc
and
aas
push
pop
sbb
mov
sbb
fbld
sub
popa
jg
cmp
not
adc
sahf
movsl
mov
loopne
lock
pop
lods
jecxz
jnp
rol
mov
xlat
js
imul
sbb
orb
xor
and
mov
loopne
add
push
sti
or
jge
jp
aam
sbb
jl
in
decb
mov
inc
lcall
mov
cmpsb
cmc
xlat
aad
aaa
add
sbb
mov
inc
jmp
adc
fnstcw
xchg
scas
or
dec
cmp
das
cld
mov
repnz
mov
ja
or
cltd
fcmovbe
addr16
mov
xor
das
sbb
stos
pop
mov
jbe
adc
or
pop
dec
loop
dec
into
ljmp
dec
adc
add
fsubs
sub
mov
inc
negb
fsts
mov
pop
sbb
mov
pop
inc
dec
add
out
mov
sub
dec
xor
mov
test
test
rcrb
mov
push
jns
cltd
adcb
jmp
mov
in
lods
addl
pop
mov
roll
loope
mov
lods
divb
and
pop
popf
cmp
push
push
xor
adc
dec
out
test
cs
lds
jnp
pusha
jmp
xchg
gs
add
sub
mov
clc
sahf
dec
shlb
imul
xor
cmp
mov
ret
enter
or
sarb
popa
or
jg
jl
adc
test
adcl
and
ficoms
jmp
pushw
adc
sbb
push
dec
mov
dec
mov
mov
call
mov
cmp
shlb
jmp
xor
test
push
mov
xor
jmp
inc
sarb
mov
int3
push
pop
int
mov
gs
dec
xchg
xchg
mov
fbstp
add
pop
push
jp
daa
lods
sbb
sbb
ljmp
cmp
jp
mov
arpl
mov
xchg
cmp
jge
xor
or
jp
mov
add
and
add
xchg
add
lea
cmp
push
xchg
outsl
shlb
insb
adc
movsb
inc
fcoms
cli
xlat
cmp
lds
test
pusha
dec
mov
push
cmp
or
dec
push
nop
mov
jno
fidivl
xchg
cs
stc
xor
int3
and
cltd
gs
lcall
lret
cmc
xor
cltd
mov
jp
daa
clc
dec
xchg
leave
sub
mov
andl
lahf
leave
mov
shrl
in
insb
popa
out
aas
adc
sub
aam
test
sahf
nop
insl
in
test
sub
stos
lcall
add
popf
test
out
xchg
js
xchg
cli
loopne
aaa
and
loop
xor
mov
scas
sar
aad
xchg
or
push
jmp
pusha
imul
lock
mov
sub
push
mov
and
xor
dec
lret
add
mov
lahf
mul
fwait
mov
ret
push
gs
inc
movsb
sbb
mov
int
dec
and
call
lea
cmp
fnstsw
std
repz
xchg
dec
jb
scas
mov
out
into
mov
fnstenv
jge
jno
xchg
mov
adc
sub
in
cwtl
sbb
add
lods
xor
stc
sub
es
mov
clc
repnz
lret
inc
push
xchg
add
pop
pop
or
cmpsl
lret
cmp
popf
mov
addr16
lahf
adc
sbb
push
das
mov
lods
lret
aas
dec
mov
sti
imul
dec
push
jmp
fildl
aad
jae
loop
xchg
and
test
xor
rcrb
icebp
fmull
sbb
clc
out
inc
fs
or
mov
and
fisubrs
imul
cmp
jnp
or
push
fstps
cmpsb
push
fucomi
in
imul
stos
xchg
push
xchg
sub
out
ja
lahf
dec
fnstsw
test
mov
pop
inc
ret
mov
test
mov
push
mov
sahf
or
insb
add
mov
insb
inc
push
mov
jae
adc
mov
push
int3
pop
push
repz
cmp
cmc
mov
add
xlat
ljmp
adc
icebp
cli
lea
xchg
ror
outsb
xlat
aaa
cmpsl
fwait
sarl
sar
sub
out
sbb
jns
inc
dec
adc
outsl
xor
shll
mov
and
mov
fistl
sbb
cli
subb
inc
adc
mul
sar
popa
mov
mov
xchg
shrb
jecxz
testb
mov
jns
loop
adc
pop
stc
mov
mov
mov
dec
imul
push
in
in
inc
test
aam
mov
movsb
add
lods
dec
inc
mov
sbb
cwtl
shlb
rclb
jge
fnstcw
fisttpl
aas
bound
push
sarl
jg
pop
xor
fmulp
fcom
out
xor
jp
add
inc
das
dec
pusha
fistl
shlb
jno
movb
inc
dec
test
int3
loope
push
mov
lods
xlat
sbb
xor
int
movsb
cmp
jbe
inc
push
mov
xchg
rcrb
lods
mov
cld
movsl
xlat
or
andl
push
imul
fidivs
fldz
sahf
ss
gs
mov
add
jo
fdivrs
push
outsb
or
jne
mov
mov
push
xchg
add
loope
jno
inc
add
fwait
mov
enter
jno
out
out
stos
pop
pusha
stos
in
in
test
enter
loop
fisttps
jnp
or
stc
mov
enter
repz
mov
mov
stos
xlat
fwait
cs
jge
cmp
jnp
mov
push
push
lods
lods
dec
inc
hlt
pop
pop
mov
mov
jp
mov
shl
lock
mov
adc
mov
hlt
add
ljmp
pop
loope
out
cmpsl
adc
sbb
inc
lock
xchg
pop
cmc
je
bound
add
cltd
xor
and
cld
mov
arpl
sub
mov
sub
adc
call
jnp
xlat
cmp
iret
sahf
push
xor
stos
xchg
cmpsb
inc
movsl
pop
push
in
iret
loope
sub
or
sbb
xchg
sbb
add
scas
aam
call
xor
repz
push
dec
mov
mov
das
in
sbb
add
popf
popa
test
cmpsb
push
add
inc
xor
test
push
aas
xchg
or
jbe
out
mov
js
testb
and
loope
cmp
dec
jg
iret
or
in
dec
sbb
fstl
pop
ljmp
cmpsl
xchg
ss
rcll
jno
shl
or
pop
sbb
movsl
or
and
stos
dec
adc
sbb
les
in
or
or
movsl
aam
fnstenv
bound
mov
mov
pusha
adcb
inc
pop
jl
ds
fisttps
aad
dec
mov
movl
or
mov
push
in
jnp
adc
aad
fcoms
sub
jb
and
and
in
mov
or
repnz
push
out
int3
mov
dec
stos
in
mov
popa
jb
lods
cmpsl
stc
push
mov
or
cmp
mov
inc
arpl
repz
mov
jl
cltd
mov
mov
ret
cwtl
push
mov
fidivrs
popf
pop
jns
and
sbb
xchg
fisttps
sti
push
movsl
fucomp
mov
test
imul
ja
adc
push
push
or
jns
pushl
add
cwtl
dec
cmpsb
inc
cmp
movsl
call
loop
int3
or
or
and
pusha
and
lea
cmpsb
leave
fistps
mov
loope
cmp
mov
mov
pushf
out
es
sbb
cmp
aas
mov
adc
xchg
mov
inc
jne
dec
mov
loopne
lock
jecxz
mov
add
push
and
inc
shlb
pop
int3
mov
xor
sub
push
xchg
ja
add
push
loope
cwtl
rcrb
cmp
popf
mov
scas
lea
call
inc
movsl
andl
sbb
fcmove
arpl
imul
je
cmpb
jnp
push
aas
push
ja
mov
in
in
sub
push
and
nop
orb
mov
push
shrl
adc
test
pop
out
ret
mov
pop
pusha
sahf
jmp
dec
inc
aaa
adcb
orb
iret
out
loope
pop
lcall
ja
mov
adc
mov
daa
pop
sub
sbb
aas
push
pop
fwait
scas
ret
shl
iret
mov
and
std
mov
lcall
test
addr16
movsl
sti
rcll
cs
push
sbb
push
xchg
int
lret
imulb
jns
pop
adc
adc
je
out
inc
mov
rcl
es
shll
push
subl
test
jo
fidivrs
pop
sub
out
ljmp
nop
fisubs
dec
stc
dec
push
iret
jp
imul
push
jne
fisttpl
stos
mov
andb
lret
or
cmpsl
lds
xchg
jne,pt
imul
jecxz
pop
mov
push
movsb
sub
mov
movsl
jo
cmp
iret
xor
mov
adc
std
pusha
jmp
test
jae
and
dec
pop
jbe
and
loop
das
xchg
int
cmp
inc
inc
mov
shll
pop
jmp
sub
dec
repz
xchg
push
icebp
mov
cmpsl
push
lds
mov
imul
aam
repnz
nop
mov
xor
aas
fidivrl
in
insb
push
rcr
pushf
sub
or
dec
or
sub
lcall
cli
je
push
call
ret
and
lock
sti
jp
or
aas
adc
mov
pop
shrb
repnz
pop
sub
mov
stos
rcrb
jmp
fldenv
pop
test
inc
xorl
scas
fsubrp
imul
add
cmc
icebp
push
inc
and
dec
add
dec
jmp
pop
sub
xor
mov
mov
loop
lahf
inc
pop
add
imul
xor
into
xchg
jg
jbe
or
inc
or
inc
outsb
imul
pop
dec
into
rorl
dec
fldt
and
mov
jae
lahf
jae
mov
lret
pusha
gs
jo
mov
push
fs
lods
pop
in
and
sar
lods
sbb
in
rcrl
loopne
rclb
rolb
mov
popa
push
out
adc
adc
ret
aas
dec
pusha
testl
lcall
or
push
jnp
cmc
pop
repz
mov
xor
repnz
mov
ja
jnp
ret
or
enter
test
popf
bound
adc
mov
repnz
xor
mov
leave
sbb
sub
cmp
or
in
rcl
sub
ss
adc
push
sub
int
sbb
and
int
in
sub
xchg
rorb
push
fwait
leave
stc
insb
inc
mov
inc
sub
in
mov
sbb
popa
and
adc
mov
mov
roll
jbe
sbb
rolb
inc
test
repz
loop
fwait
sbb
insl
outsl
and
aad
stos
or
pop
cmovb
rcll
aam
adc
or
push
adc
sbb
or
pop
mov
cmc
push
mov
testb
bound
xor
aas
push
push
lret
mul
daa
push
cmp
cld
jge
ja
sbb
dec
add
dec
mov
cmpsl
pusha
push
inc
pusha
jg
xor
jno
pop
pop
jnp
inc
mov
hlt
dec
mov
adc
jne
out
insb
int3
idivb
jmp
mov
lock
or
add
dec
add
data16
xchg
inc
push
inc
or
push
js
pop
scas
fistpl
cmp
hlt
mov
fimull
xchg
stc
iret
mov
test
dec
repz
cmp
mov
mov
mov
cmpsl
aad
push
inc
clc
and
dec
fldt
xchg
sub
bound
repz
cltd
fistl
out
arpl
push
sub
lds
jns
stos
stc
out
fidivl
cmp
iret
mov
into
pop
aad
mov
cmc
loope
dec
mov
cmp
jo
inc
mov
aas
dec
dec
xchg
xor
pop
fdivr
arpl
cmpsb
inc
filds
sbb
mov
lret
ljmp
push
shll
out
xchg
in
mov
push
out
shrl
jp
arpl
rcrb
aad
testb
xor
into
cmpsb
mov
xchg
out
or
call
dec
jnp
jmp
outsb
jae
loop
cmp
dec
and
movsl
xchg
inc
cmpsb
inc
adc
jnp
sbbb
mov
push
sub
pop
mov
int
insl
icebp
aam
lods
shrl
mov
shll
xor
push
xor
testl
and
adc
nop
icebp
pop
inc
mov
inc
test
outsb
jge
mov
fiadds
push
lcall
fsubrs
jp
cld
adc
jnp
adc
adc
mov
jns
lret
cmp
repz
jp
jne
cwtl
pop
hlt
popa
lods
mov
pop
mov
add
mov
out
adc
pop
jle
xor
mov
pop
pop
in
push
xchg
leave
sbb
mov
fcomp
xorl
push
cli
push
inc
dec
xlat
out
jne
sbb
icebp
scas
lcall
shll
cmp
aad
scas
xchg
clc
cmp
add
daa
pop
jb
inc
jns
jmp
pusha
adc
cmc
fistl
add
adc
cmp
add
repz
push
outsb
iret
testb
add
jo
fwait
outsb
pusha
pop
xor
jge
movsl
sti
pop
add
xor
cli
movsb
sbb
call
push
cmp
leave
jmp
imul
mov
or
or
pusha
add
aas
in
adc
push
cmp
cld
and
mov
int
adc
loop
ja
insb
mov
cmpsl
adc
cld
lcall
out
call
cmp
push
call
jnp
scas
rorl
mov
pop
aaa
fidivrs
mov
cmc
ret
arpl
jns
push
dec
and
outsb
xor
aas
and
fcmovnb
push
rol
pop
lea
cmp
fisttpl
cmp
push
repz
pop
out
roll
pushf
mov
cwtl
and
loope
les
je
jns
sarb
gs
dec
jno
sbb
fisubs
dec
ss
jnp
orb
jmp
and
std
mov
fs
push
stos
xchg
xor
sub
jmp
push
cmp
jno
pop
lcall
fidivrs
mov
jb
or
andb
and
popa
push
cmp
repz
enter
sub
mov
clc
stos
ds
jbe
pusha
pop
lahf
adc
les
mov
pop
mov
jae
mov
insl
shr
fnsave
fsubrl
mov
je
mov
mov
nop
dec
mov
jae
out
cmpsb
inc
nop
adc
subl
data16
xchg
xor
test
into
in
movsb
pop
or
add
aaa
daa
repnz
mov
test
xlat
mov
and
xor
leave
inc
and
pop
into
in
cmc
or
pop
ds
pop
fcomi
mov
fcomp
or
subb
mov
fcmovne
mov
sub
sub
daa
mov
add
cmpb
test
lock
dec
xor
xor
enter
pop
ret
dec
addl
sub
mov
lods
dec
dec
mov
pop
daa
in
push
call
inc
add
repnz
push
int3
pop
push
dec
add
mov
dec
mov
jae
inc
fwait
jg
add
mov
mov
dec
sti
jp
inc
push
stc
pushf
jns
sbb
orl
jne
xchg
push
mov
dec
sbbl
je
inc
testl
mov
push
outsb
leave
cmpsl
int3
sbb
lods
pop
cmp
xor
push
xor
call
fsubp
mov
cmp
xchg
fsts
and
ja
sub
in
mov
pop
cmpsb
out
or
and
lret
mov
out
mov
jg
jbe
ja
ret
mov
jmp
pop
dec
xor
jle
cld
cmpsb
lds
jo
cmp
lret
jp
pusha
dec
ljmp
loopne
add
popf
fstpt
pop
iret
mov
call
je
insl
repz
int3
sbb
sbb
aam
cmp
fcompl
mov
hlt
lea
aad
jnp
cs
mov
mov
cmpsl
pop
add
fimull
repnz
sti
mov
mov
fdiv
xchg
imul
mov
mov
pop
rol
pop
push
cmp
and
mov
imul
jne
js
jge
dec
jne
jge
mov
adc
xor
rcrl
add
push
sbb
leave
mov
mov
adc
das
push
push
rcrb
addr16
popa
std
pop
push
inc
imul
shlb
sub
aam
add
inc
jle
sbb
ds
les
into
dec
jge
pop
sbb
inc
jae
sub
mov
sbb
mov
adc
add
lcall
pop
jle
push
cwtl
test
lds
js
test
push
rolb
outsb
adc
jmp
rorl
fs
shlb
lock
mov
adc
icebp
jnp
mov
mov
xchg
arpl
jnp
mov
fwait
in
xchg
lds
outsl
xor
imul
pop
cmp
out
popa
xchg
ljmp
fwait
adc
jo
jl
mov
pop
rorb
sbb
hlt
mov
in
fildl
cmpsl
add
shlb
ss
insl
mov
sbb
or
in
iret
scas
sub
lea
mov
dec
xchg
fadd
loop
or
xor
mov
roll
sbb
insl
push
cwtl
outsl
repnz
loopne
mov
pusha
xchg
scas
pop
or
popa
add
in
rcr
push
adc
push
in
into
lret
fs
dec
mov
push
lea
fsubrs
rcrl
das
add
jae
push
jmp
cli
jle
sub
push
mov
mov
scas
popf
sub
or
cld
pop
pop
test
adc
push
pop
nop
pminsw
push
pop
es
mov
xchg
jle
or
inc
pop
add
int3
nop/reserved
incl
sbb
sbb
cmp
call
sbb
fsts
mov
shl
out
nop
sbb
loop
sub
pop
cmovp
test
pop
mov
inc
ja
ret
mov
icebp
push
mov
jmp
and
call
lret
jg
sbb
jnp
or
adc
pop
rolb
push
add
test
xor
mov
push
lods
sbb
fidivrl
push
pop
sti
cmp
mov
push
pop
inc
add
and
sbb
add
lods
jp
xchg
stos
dec
mov
inc
sbb
fstl
std
fbstp
test
cmp
and
ret
call
lcall
into
mov
xlat
mov
lods
push
mov
arpl
dec
mov
mov
adc
aad
bound
iret
push
and
fisttpl
mov
pop
and
sti
push
mov
mov
notb
pushl
push
fiadds
repz
out
repz
mov
imul
fimuls
dec
push
sbb
or
dec
or
ljmp
mov
arpl
repz
pop
repnz
loop
push
ret
xor
loope
push
xchg
negb
stos
sti
jg
mov
fldcw
mov
xchg
push
inc
xchg
mov
mulb
cmpsl
mov
or
jle
mov
xchg
enter
scas
cli
adcb
push
stc
addl
aad
or
pop
sub
mov
int
xlat
pop
repz
ss
or
fildll
pop
shl
xchg
negl
aas
stc
mov
mov
pop
sub
in
sub
xor
dec
aas
stc
cmp
xor
cltd
adc
push
dec
outsb
loop
pusha
adc
jge
pop
ret
repnz
pop
cmp
and
aam
shlb
int
adc
and
mov
inc
pop
idiv
imul
xchg
aam
cmpl
push
dec
and
je
sarb
mov
dec
pop
and
cmpsl
xchg
fmull
aam
push
and
std
mov
lock
inc
sub
cmovg
dec
push
js
les
and
hlt
jae
mov
clc
ja
arpl
cs
xor
repnz
adc
js,pn
stos
mov
push
mov
inc
pusha
add
cld
cld
pop
sbb
pop
sbb
icebp
mov
psrld
cmp
outsl
xchg
or
sbb
roll
xchg
inc
fisubrs
pop
xchg
jbe
test
out
xchg
inc
mov
bswap
mov
xchg
dec
or
stos
in
ja
daa
cs
outsb
xchg
fnsave
mov
test
int
cltd
jb
dec
test
pmaxsw
nop
fistl
repz
enter
loop
rsqrtps
jmp
jge
adc
jg
jb
push
ljmp
mov
iret
movsb
pop
testb
mov
dec
lahf
fmulp
jbe
xchg
js
pop
mov
xchg
push
pushf
ja
inc
sbb
sub
movsl
fbstp
outsl
xor
jp
movsb
jne
daa
add
cmp
shrb
insl
lods
enter
jecxz
jb
jle
mov
inc
jmp
lods
dec
cmpsb
mov
inc
sub
aas
push
and
mov
stos
jp
je
fcmovnb
into
movsl
and
sti
aas
mov
xor
add
mov
push
popl
out
lea
insb
loopne
test
imull
jmp
mov
ficompl
outsb
mov
roll
int3
int3
imul
pmulhw
pop
call
arpl
insb
cwtl
jns
cwtl
imul
hlt
hlt
dec
pop
and
and
and
jno
bnd
mov
sarl
mov
fldcw
scas
sbb
ja
aad
hlt
pop
insb
imul
daa
mov
sub
or
clc
sti
lcall
fmulp
loop
scas
scas
lods
mov
sub
fwait
mov
aad
pop
xchg
inc
rcrl
fidivrl
frstor
sbb
ja
sub
ss
and
test
js
pop
cmp
dec
push
jle
outsb
aad
pop
pushl
xchg
ret
sub
lcall
mov
movsb
aaa
lret
sahf
adc
adc
scas
jge
xchg
sti
pop
in
add
jnp
cmp
xor
daa
lcall
push
xor
clc
test
repz
js
ds
and
mov
sbb
icebp
fwait
jle
leave
imul
in
mov
hlt
bound
lea
test
shlb
push
call
fsubrl
mov
mov
pop
xor
movb
pop
mov
xor
dec
aaa
xor
int
lahf
add
sub
fisttpl
push
mov
or
lcall
into
je
loope
fstps
andb
neg
lods
mov
mov
cmp
cmp
setbe
test
loop
push
adc
gs
sub
fimuls
testl
aad
aaa
cli
sub
in
jg
jle
cwtl
test
jmp
mov
mov
sbb
mov
mull
data16
repz
pop
push
pop
sub
test
popa
mov
outsb
inc
fldl
sbb
mov
add
roll
pop
jl
insl
push
int3
mov
dec
lods
sub
fcmovnu
lcall
test
shrl
stc
dec
ljmp
test
popf
mov
fisttpl
dec
push
or
xlat
jae
push
outsl
movb
js
repz
mov
lock
mov
adc
into
xchg
and
ljmp
and
lahf
adc
jmp
push
push
in
sti
pop
push
int
cld
loope
pusha
loopne
sub
dec
push
stos
mov
jb
test
mov
test
xor
fdivrs
es
imul
aad
xchg
dec
lret
mov
out
aam
pop
arpl
mov
or
inc
mov
pop
sub
jg
sbb
mov
mov
xor
xor
icebp
dec
pop
push
les
and
and
int
test
add
mov
dec
adc
sti
adc
xchg
xchg
pushf
xor
gs
jmp
clc
pop
test
je
mov
ret
adc
cli
add
out
cmp
bound
insl
push
push
add
dec
sub
mov
and
or
push
or
xchg
mov
fiadds
or
fnsave
add
lea
int3
sub
push
or
sub
sub
jo
xor
test
push
pop
andb
push
dec
pop
dec
mov
mov
push
outsl
and
xchg
lcall
repz
out
sbb
pop
dec
adc
cwtl
cwtl
cmp
pop
fsubrs
mov
es
repnz
jecxz
insb
addr16
push
add
xchg
es
insl
sub
fmul
mov
cmpsl
or
popf
xor
cld
inc
xchg
add
inc
sub
mov
outsl
nop
int3
pop
or
push
mull
cmpb
jp
fdivl
enter
shll
andl
cmpsb
test
mov
add
fxam
push
call
mov
cmp
mov
cwtl
add
mov
mov
rolb
out
lods
call
adc
sti
pop
adc
rcr
adc
jno
aas
ficomps
pop
clc
les
in
outsl
es
add
mov
sub
jae,pn
ret
push
clc
adc
push
enter
aad
dec
jo
dec
jnp
add
fmuls
jge
or
push
adcl
sub
inc
push
fwait
jae
xchg
cld
xchg
cmp
and
mov
and
sahf
jp
and
arpl
subl
xor
enter
push
cwtl
pop
sub
test
xchg
mov
cmp
or
push
or
sarl
loop
pop
in
nop
inc
dec
repz
loop
xchg
rclb
cli
push
and
sbb
push
lods
ret
xor
je
mov
sub
das
scas
fnstcw
arpl
cltd
bound
rcll
sub
jp
imul
mulb
sbb
cwtl
adc
mov
lods
ss
jp
lock
popa
xor
pop
adc
xchg
loopne
and
sub
gs
test
pop
fwait
popl
mov
inc
sbb
dec
cmpsb
mov
stc
cmp
in
mov
lock
sahf
add
jp
mov
pmulhuw
cmp
aad
dec
out
adc
cmp
lahf
cmc
cmpsb
dec
int
pop
push
xorl
cmp
adc
push
xorl
shr
xlat
out
mov
push
cmp
lds
testb
or
mov
xor
and
roll
fiaddl
arpl
adc
xor
subl
add
xchg
push
loop
ds
jne
mov
and
testl
mov
fnstcw
adc
adc
sbb
or
jmp
lahf
lods
mov
roll
inc
lods
mov
push
nop
push
mov
pop
adc
pop
cmp
inc
cmpsb
mov
pop
aam
push
adc
loopne
pop
out
xor
arpl
xchg
inc
dec
sbb
stc
std
or
test
cmpsl
sbb
shlb
test
fs
mov
int
jae
adcl
mov
cs
push
addr16
sub
fimull
lock
test
mov
or
dec
ds
sub
adc
das
addr16
mov
push
add
aaa
test
fldl
xchg
es
or
adc
inc
mov
adc
pop
es
pop
mov
enter
ljmp
icebp
mov
in
scas
cld
out
scas
inc
das
rcrl
movsb
in
jge
mov
push
jmp
bound
push
sub
rcl
adc
outsb
icebp
mov
imull
outsl
pop
test
xchg
shrl
lret
or
jae
pop
or
cmp
loope
sbb
dec
std
inc
xor
jne
push
push
dec
ret
mov
fldcw
mov
pusha
add
lods
mov
mov
sub
cmp
in
cmp
cmpsl
and
xchg
out
enter
insl
dec
cmp
add
fidivs
jg
mov
xchg
and
fidivrs
and
pop
ds
test
int
pop
sarb
jmp
outsl
jns
lcall
fmull
mov
in
test
dec
add
into
or
mov
sbb
fiaddl
xor
pushf
and
fisttpl
orl
out
mov
inc
push
xchg
rolb
xor
sbb
dec
xor
ret
mov
rolb
mov
adc
push
out
jae
in
jle
and
push
add
test
in
jmp
aas
push
test
and
mov
daa
or
jp
adc
mov
cmc
fs
lret
imul
fstpt
add
stos
or
mov
insb
jbe
pop
hlt
test
cmpsl
std
nop
add
aam
je
sbb
inc
cmpl
inc
adc
mov
jmp
call
mov
into
test
popa
cmp
mov
pop
add
mov
out
nop
mov
mov
movsl
vmread
mov
pop
jbe
jle
push
sbb
filds
mov
jne
jle
jbe
test
ror
add
outsb
ja
pop
pop
pop
push
ja
cmp
or
or
ja
aas
stos
sbb
push
gs
aaa
pop
push
add
gs
push
adc
pushf
xchg
sbb
rcl
sub
lea
or
jns
mov
stos
decl
cmp
mov
imul
out
dec
andl
xchg
cmp
popa
int
stos
sarb
or
in
and
adc
loopne
mov
mov
stos
aaa
xor
out
sub
lret
pushf
jp
jnp
fimull
jmp
loopne
rol
sahf
xor
xor
sbb
cmp
push
dec
cmp
hlt
inc
xor
mul
jecxz
aam
jae
insl
push
lods
mov
push
sub
hlt
scas
es
sbb
movsl
test
and
mov
mov
cmp
pop
ja
add
stc
leave
inc
iret
dec
push
sub
sub
xchg
pusha
jecxz
or
mov
test
cld
push
sbb
fnsave
sub
xchg
popf
outsb
aas
sub
pusha
sbb
or
inc
loope
les
adc
clc
incl
test
push
daa
dec
out
es
ljmp
cmp
cmp
and
inc
lds
outsl
clc
push
sar
jo
outsb
xor
and
sbb
test
je
mov
rclb
pop
fdivrl
sbb
xchg
fistl
notb
mov
and
data16
sub
dec
cmp
dec
les
fbld
enter
and
sbb
imul
cs
push
sub
jmp
mov
push
xchg
jno
into
mov
mov
ret
sub
lcall
icebp
sbb
aad
nop
ret
inc
and
int3
lahf
fs
jmp
lock
pusha
cmp
jle
mov
fstp
lea
jae
cmc
inc
xor
mov
aaa
xchg
ss
test
imul
mov
hlt
xchg
shrl
pop
cli
mov
nop
sbb
push
test
or
jbe
out
add
rorl
addl
pop
mov
aas
mov
bound
loope
pushl
int3
das
push
ds
repnz
jae
out
loope
into
data16
dec
xchg
icebp
add
int3
lods
or
sbb
hlt
cmp
mov
jle
hlt
mov
fs
daa
adc
push
jo
outsl
fistps
xlat
pop
lods
push
jecxz
shlb
movsl
mov
sub
mov
pop
sarl
pop
popa
jnp
addr16
push
incl
jle
mov
fs
cmpsb
cmp
push
sub
mov
in
pop
xor
and
shl
push
cli
mov
jle
sbb
ss
frstor
jl
or
mov
cli
inc
jno
sub
xor
push
test
jl
sub
inc
das
lds
cld
fs
push
mov
nop
xorb
arpl
cmp
arpl
mov
push
jle
jo
rcrb
vfnmsubpd
int3
sbb
inc
int
outsl
mov
pushf
rcrl
loop
push
ljmp
jge
or
jno
stos
xchg
lret
es
push
xlat
or
pop
scas
test
push
loop
mov
push
mov
jns
iret
lret
cmp
stc
shlb
imul
jns
or
mov
add
push
sahf
testb
add
dec
arpl
push
jle
daa
cmpsb
mov
fisttps
sar
adc
sub
ljmp
cmp
dec
and
dec
enter
test
ret
adc
sti
dec
xchg
or
push
and
movsb
scas
mov
in
incl
jg
loop
shlb
mov
push
stc
adc
inc
push
push
adc
add
mov
fsubrl
out
addr16
arpl
cwtl
iret
xchg
and
stos
out
cmp
gs
xlat
dec
outsl
or
sbb
push
pop
pop
and
mov
inc
mov
cmp
mov
sti
loope
icebp
filds
lods
out
shll
fisttps
or
nop
fimull
mov
sar
rcll
cld
push
add
mov
inc
jno
mov
cmpsl
adc
sbb
fwait
ja
int
std
sbb
imul
test
xchg
pop
jp
or
sub
insl
cs
push
movsl
jl
int
jle
popa
mov
sbb
cmp
inc
push
push
test
mov
jmp
and
fisubrl
dec
xchg
adc
push
lahf
es
push
xchg
test
xchg
dec
push
mov
es
out
icebp
push
and
in
into
inc
add
ds
outsb
mov
leave
movl
mov
loope
push
icebp
fisttpll
add
xchg
repnz
lods
add
or
add
fs
movb
jge
xchg
vmaxss
add
ljmp
sbb
xlat
jmp
pusha
or
jl
sbb
mov
and
arpl
jecxz
pushf
add
iret
in
and
cmpsl
xchg
aam
cwtl
cmp
das
idivl
jecxz
lods
cmp
dec
cmp
xor
ss
sub
mov
adc
mov
xor
push
sarl
ret
or
adc
ss
dec
pusha
rcrl
xchg
and
mov
arpl
mov
movsl
es
stc
scas
dec
fstpl
das
in
add
mov
roll
add
test
xor
mov
cmp
jno
jno
fnstcw
jecxz
mov
adcl
add
sbbb
lcall
fwait
add
inc
push
adc
hlt
mov
inc
je
sbbb
loop
fisttps
cwtl
cs
addr16
popf
lea
iret
push
and
dec
mov
mov
push
jne
xor
and
testl
pop
lret
cwtl
jno
dec
mov
out
mov
or
pop
fnsave
mov
popa
sar
fisubs
imul
movsl
sub
aam
or
sti
inc
cmp
into
mov
sbb
xor
cmp
in
xor
mov
sahf
ret
repz
cmpsb
cs
jb
sub
cmp
mov
out
add
adc
in
or
repz
cmp
dec
cwtl
sub
decb
ja
push
ror
push
push
dec
and
loopne
aas
add
or
sti
pop
lret
imul
inc
loopne
testl
cmp
mov
xor
call
fimuls
or
rclb
xor
cmp
xor
in
mov
or
js
imull
hlt
xchg
mov
xchg
cli
and
lock
imul
pushf
cmp
push
mov
scas
mov
inc
inc
testb
sbb
dec
inc
jg
jecxz
hlt
insl
lock
pop
xor
test
inc
xorl
aaa
stos
cltd
xchg
es
insl
movsb
push
jae
jl
into
movsb
push
stos
test
ss
aam
std
lea
rcl
iret
and
xchg
dec
out
xchg
ja
call
jae
notl
cmp
fisubrl
loopne
mov
loop
inc
add
pop
adcl
mov
js
push
imul
pop
xor
mov
out
jecxz
and
mov
loop
fs
cmp
and
js
add
clc
sub
daa
aas
lret
cmc
jns
fwait
je
sbb
test
pop
inc
push
add
lcall
jmp
pop
cltd
movsb
sub
add
jmp
data16
ss
and
test
sub
ret
enter
movsl
loop
push
inc
add
xor
jl
test
cmp
inc
adc
jge
aaa
jmp
rcl
mov
out
lcall
xor
xor
sub
imul
aad
mov
xor
push
jecxz
pop
stc
loop
jmp
mov
jb
fldcw
dec
xor
in
inc
and
sbb
fidivs
loopne
inc
repnz
xchg
ret
mov
jecxz
sbb
push
jne
xchg
es
scas
ljmp
popf
mov
out
jns
lods
leave
pop
xchg
lods
mov
lret
and
cli
xchg
sub
xchg
pusha
int
mov
outsl
pushf
lret
add
test
inc
out
xchg
cmpsb
pop
inc
dec
jmp
daa
int3
adc
aad
mov
out
loopne
lea
pop
mull
stos
lret
lds
ret
out
push
clc
dec
inc
jnp
sbb
push
pushf
lahf
mov
outsb
rcrb
les
dec
mov
mov
nop
jg
jo
dec
jmp
xor
and
cli
out
cwtl
jnp
xchg
xchg
ljmp
pop
sub
gs
leave
pop
movsb
pop
jecxz
adc
call
add
xchg
sbb
mov
out
pop
in
push
aaa
loope
and
aam
addr16
cld
adc
push
icebp
mov
repz
cmp
jns
sbb
ljmp
xchg
push
inc
pop
icebp
mov
mov
rclb
xchg
out
das
imul
ret
xchg
bound
addl
xchg
mov
and
dec
cli
pop
jns
lock
ds
fidivl
xchg
sub
les
shl
sub
andb
push
fwait
andb
mov
ljmp
rcrb
out
adc
sti
cmc
ljmp
inc
rep
push
dec
rol
xchg
mov
std
jmp
sub
and
out
cmp
lahf
outsl
xlat
cli
adc
sbb
push
mov
mov
or
xor
and
xchg
mov
jo
outsl
cmp
dec
aaa
sbb
sub
ret
addb
inc
insb
stc
cmp
arpl
or
jnp
movsb
or
cli
xor
fwait
sbb
ljmp
leave
lea
or
push
mov
mov
dec
adc
scas
mov
test
fdivrs
or
mov
mov
inc
and
daa
push
add
outsb
push
dec
aas
lods
jp
insl
cmp
iret
fildll
and
push
xchg
cmp
stos
add
dec
test
mov
inc
cmc
pushf
in
cmp
insl
in
hlt
ja
xor
pop
xchg
mov
gs
mov
lods
ret
pop
xchg
and
adc
mov
cmp
xor
xor
insl
loop
hlt
clc
jae
decb
mov
xor
inc
test
loop
mov
xchg
ljmp
mov
cmp
pushf
sbb
loopne
mov
fwait
inc
and
fnstcw
xchg
clc
jo
enter
push
cmp
adc
push
pop
dec
in
filds
pop
jns
mov
mov
mov
inc
call
test
imul
push
js
xor
push
mov
sbb
cmpsb
mov
jbe
inc
icebp
push
pop
and
cmp
sti
out
mov
mov
stc
adc
pop
in
dec
repz
xor
pop
mov
insl
mov
sub
inc
sub
jmp
cmpl
test
or
aam
jnp
je
mov
dec
fimull
jae
into
ret
in
ret
mov
lahf
hlt
clc
xchg
mov
decl
popa
insl
daa
scas
push
xchg
push
xchg
leave
aaa
xlat
mov
daa
inc
cmc
sahf
xchg
fs
mov
or
fidivl
sbb
popf
iret
call
adc
lea
mov
inc
adcl
imul
scas
and
mov
push
push
xchg
push
fsubs
les
orb
cmp
aaa
aad
and
dec
bound
mov
push
test
repz
push
sbb
mov
push
mov
enter
cmpsl
mov
popf
sub
xlat
call
jno
push
fmull
push
lods
lock
dec
mov
mov
mov
xchg
into
or
in
out
and
push
push
orps
sub
stos
sub
mov
adc
lcall
push
fwait
inc
sub
int3
in
lcall
pop
leave
shl
popf
in
adc
call
cmp
xchg
jnp
dec
cmp
inc
inc
jp
sbb
pop
fcoml
lds
and
das
or
mov
scas
xchg
ret
add
outsb
pop
insl
scas
leave
test
sbb
and
xchg
aam
mov
sub
xchg
out
jb
push
test
cli
scas
or
shlb
cmp
or
inc
dec
subb
stos
adc
out
or
sbb
addr16
ja
pop
mov
enter
popf
fbstp
push
mov
stos
push
push
lret
xchg
cmpsb
or
dec
adc
lret
fistpll
mov
and
adc
jb
mov
pop
dec
inc
inc
mov
iret
mov
popa
lods
jle
repnz
int
push
test
mov
clc
cli
fildl
mov
mov
sub
dec
lret
ss
popa
push
cmp
lret
lret
pop
pop
cmp
jle
push
mov
imul
sub
xchg
xor
mov
popa
fdivs
ret
fmull
call
rorl
movsl
insl
in
stos
rcrl
xlat
ret
pop
xchg
arpl
ret
in
out
xlat
addb
inc
das
je
enter
daa
icebp
sbb
or
pop
mov
adc
xchg
jns
push
in
mov
out
mov
xor
ja
popf
adc
jb
dec
or
inc
pusha
xor
daa
and
nop
daa
sub
xor
push
jecxz
bound
xchg
cli
rcll
jg
cmp
inc
scas
jle
lds
cwtl
aad
cmp
idivl
pusha
test
and
lods
push
inc
cmpsl
pop
mov
lret
cmp
icebp
jb
adc
xor
sub
insb
test
lcall
and
mov
adc
cmpsb
xchg
fnstsw
in
ficompl
lret
stos
testl
or
les
nop
adcb
out
imul
popa
sbb
push
das
test
pop
ficompl
cwtl
outsl
lea
mov
xor
ljmp
jns
ss
out
mov
push
dec
lods
loopne
int3
xchg
xor
mov
push
popf
jne
or
das
jmp
divb
test
push
out
out
inc
xor
into
or
and
imul
mov
je,pt
add
das
cmp
inc
outsb
lock
lea
inc
loope
imul
movsb
mov
out
int
fmul
inc
loop
mov
es
fdivp
sub
lea
lahf
pop
jle
fwait
sbb
popf
pop
aad
sbb
scas
pop
jb
or
inc
and
xor
cmp
int3
or
test
scas
std
push
sbb
xor
mov
mov
lods
and
xor
or
jb
mov
mov
jno
inc
and
out
xor
adc
dec
mov
call
cmp
outsl
jge
rclb
mov
sub
mov
push
mov
jl
sbb
cmp
adc
jecxz
xor
sarl
sbb
mov
pop
scas
stc
jle
fcmovbe
popf
lods
imul
push
rcll
loope
mov
pop
scas
cmpsb
inc
sub
movsl
ds
in
test
pop
push
add
push
call
mov
cmpsb
notb
shl
ja,pn
dec
mov
sbb
push
cmp
and
lcall
push
mov
orb
nop
mov
or
add
leave
scas
jb
cli
cltd
jge
movlps
cli
push
adc
add
sahf
insb
js
sub
or
and
xchg
jo
scas
jle
add
aaa
cltd
sbb
lahf
jb
enter
outsl
dec
mov
add
mov
pop
in
hlt
and
orw
xchg
inc
bnd
imul
in
or
bnd
jo
mov
pop
push
cmp
out
xchg
xor
ja
add
inc
inc
out
lods
sub
and
mul
and
adcb
lea
jp
pusha
cmp
pop
gs
pop
idivb
ds
mov
repnz
mov
push
and
movsl
fnstenv
gs
lret
ret
push
insb
fs
cmp
pop
and
ret
push
and
bound
roll
out
pop
data16
cld
test
call
push
jge
sbb
aas
or
icebp
cli
int3
jbe
cmp
mov
inc
adc
jb
push
ja
cmp
jle
js
add
inc
aam
and
mov
and
fldt
jne
push
mov
push
lret
cmp
int3
fimuls
mov
adc
fsincos
or
adc
xor
push
das
int3
fs
sub
add
push
pop
push
mov
fimull
pop
dec
add
stos
xchg
aas
popa
aaa
dec
aad
aam
cmp
jo
insl
pop
push
ss
daa
repz
mov
add
out
pusha
dec
repz
test
or
xor
adc
insl
inc
das
test
jle
sub
jle
insb
sbb
push
aaa
mov
push
jmp
adcl
jne
jb
push
jecxz
mov
and
mov
or
push
sahf
lahf
adc
cmc
jge
aaa
scas
mov
fcmovbe
mov
flds
mov
jg
mov
lock
insb
or
repnz
ja
repz
ficomps
mov
insb
fisubrs
mov
clc
mov
sbb
add
rcrb
inc
pop
xor
pop
sbb
cs
das
in
les
mov
nop
loope
jns
adc
cmp
and
jmp
jb
inc
test
inc
push
outsl
sbb
std
adc
mov
dec
add
addr16
add
test
sahf
pop
fbld
push
or
push
bound
mov
mov
call
jbe
push
outsl
pop
and
aam
xchg
pop
aas
rolb
cmp
in
jne
xor
add
sbb
mov
aaa
mov
mul
xchg
inc
inc
in
mov
adcb
pop
mov
negl
cmc
out
or
orb
stc
mov
outsb
addr16
dec
icebp
add
sarb
lods
lds
inc
pop
lret
adc
clc
or
sbb
or
sub
mov
lock
in
pop
clc
pop
ss
mov
es
out
pop
ljmp
repz
cwtl
mov
push
mov
sahf
movsb
lock
js
int3
dec
mov
daa
sub
or
sub
jo
leave
fwait
adc
dec
or
inc
xor
insl
inc
call
adc
jb
jno
loop
dec
ja
and
mov
push
cmovp
mov
ret
idivl
into
cmp
jne
xchg
enter
std
mov
pop
push
cmpsl
add
jmp
sub
movsb
cmp
xchg
aam
inc
pushl
cltd
inc
ret
jge
xchg
scas
std
in
or
xor
xchg
xchg
cmp
mov
out
xor
ret
outsl
mov
fnstenv
addl
bound
iret
out
lods
es
adc
push
pop
call
push
or
adc
add
sarl
test
dec
mov
lods
cwtl
into
imul
mov
cmp
or
and
add
repz
rcrb
leave
cmp
mov
push
and
cltd
arpl
repnz
push
in
test
fs
js
adc
push
mov
cmp
inc
shrl
mov
cmp
ljmp
xchg
push
mov
and
sbb
les
cld
sub
jns
gs
mov
mov
mov
sub
or
sbbl
jns
adc
scas
push
pop
adc
scas
and
mov
stc
sbb
xchg
cmp
sub
sarb
mov
fwait
or
testl
add
sbb
inc
into
mov
push
sub
sub
mov
das
dec
test
shlb
add
xchg
or
sub
or
inc
xor
push
imul
cmc
fistps
fiadds
ret
leave
xchg
aaa
repz
lea
les
push
push
ret
icebp
xor
dec
iret
push
addr16
fsub
out
xchg
mov
dec
out
cwtl
test
outsl
cld
or
outsl
mov
xchg
les
fstpl
cli
loope
pop
lods
mov
ljmp
stos
insb
sbb
repnz
loop
mov
lods
dec
repz
mov
cli
call
dec
mov
sbb
in
xchg
xor
rcrl
and
je
out
jg
mov
xchg
out
mov
xchg
loopne
jae
enter
int
stos
aad
or
std
testl
mov
aaa
xchg
xor
das
xor
out
imul
pop
jno
notb
mov
push
jl
dec
mov
mov
mov
cs
sub
loopne
dec
pop
enter
jg
jns
jmp
or
adc
ja
sti
stos
xchg
pop
mov
gs
mov
clc
pop
sti
mov
test
mov
fcoml
push
or
aaa
pusha
sub
jmp
stos
orl
rcll
jne
push
inc
or
movsl
mov
sub
sub
xor
cltd
icebp
repnz
pop
imul
jno
pop
xor
mov
loope
adc
adc
sub
push
xchg
xor
je
jb
jbe
jnp
push
cmpsb
imul
xor
bound
and
outsl
xor
or
test
pop
inc
les
add
fdivr
std
xor
inc
pop
iret
or
imul
call
ret
movsb
in
fldl2t
dec
popf
imul
out
pop
xchg
orl
sub
test
push
pop
pop
mov
pop
pop
lods
js
fiaddl
std
and
fiaddl
xchg
dec
push
jbe
fisttpll
ffree
dec
and
enter
xlat
xchg
pop
push
inc
cmpsb
ss
add
sahf
sub
repz
adc
movsb
or
xchg
int
cs
bound
xchg
shll
arpl
push
in
aad
cld
push
push
cmpsl
dec
push
movsb
nop
scas
scas
insb
pop
push
dec
pop
mov
nop
xchg
mov
data16
int3
scas
push
cld
scas
xchg
inc
push
mov
es
sub
inc
shll
mov
jl
fldt
clc
ja
adc
repnz
cld
nop
xchg
fdivrl
jo
push
jecxz
adc
stos
iret
cmpsb
sbb
sub
aas
lahf
ds
sbb
mov
lcall
mov
mov
fiaddl
stos
mov
xchg
imul
xchg
push
loopne
jo
jp
cmp
aad
push
sub
adc
sbb
push
hlt
xor
ja
xchg
push
xor
pop
mulb
sbb
mov
sbb
inc
adc
jle
xor
or
add
shrb
les
out
xchg
idivb
or
sar
iret
cld
dec
lret
out
add
xor
mov
imul
sbb
inc
cmp
ret
jmp
outsb
pop
notl
lret
scas
fisubs
movsl
ret
lret
popa
inc
test
jmp
test
mov
out
or
add
mov
adc
fwait
sahf
mov
test
or
cmp
jp
mov
nop
loope
repz
rcll
sub
nop
add
adc
outsb
lods
mov
and
mov
sahf
rcrb
mov
in
xchg
aad
fstps
pop
iret
mov
xor
ja,pn
adc
lods
cwtl
daa
adc
js
adc
mov
outsb
inc
aam
filds
or
das
sahf
adc
arpl
clc
jl
es
mov
push
shlb
cmc
arpl
pop
idivl
fisttps
ljmp
outsl
jae
cmpsl
add
pusha
xchg
push
sti
or
lds
and
push
mov
cmp
dec
addr16
dec
sbbl
adc
or
xor
ss
orb
arpl
fstp
xor
imull
mov
sbb
fs
mov
mov
push
loopne
mov
idivl
xorl
adc
rorl
test
cmp
push
notb
sub
hlt
pushf
in
faddl
int
fistps
cmp
dec
in
pop
pop
rol
mov
fisttpll
push
sub
pop
fwait
sub
mov
repnz
outsb
ret
push
icebp
xchg
xor
daa
mov
testb
jp
lret
mov
or
push
mov
lds
pop
xchg
mov
movsl
lahf
movsb
subb
cmp
push
adc
pop
rep
xchg
jge
adc
push
ds
jp
lahf
jg
pop
mov
cwtl
and
add
inc
xor
dec
mov
sbb
nop
dec
jmp
jg
test
jbe
data16
vminsd
sbb
add
std
mov
cmp
lods
and
add
popf
sbb
nop
lea
adc
in
push
push
shrl
mov
jl
out
mov
aad
push
xchg
insb
fcomps
or
lods
mov
sub
test
sti
aad
xor
dec
xlat
sub
mov
pop
call
inc
es
lahf
mov
pop
cmc
dec
push
arpl
mov
mov
sub
fsubrs
xor
cmpsb
std
lods
jnp
jne
jbe
lahf
icebp
cltd
hlt
mov
pop
mov
push
xor
incb
sbb
cmp
sub
dec
add
xchg
cs
mov
clc
std
cli
sar
dec
jl
sub
clc
pop
icebp
cli
dec
mov
lcall
lret
jbe
push
xchg
loopne
mov
push
repnz
or
nop
ret
dec
cltd
and
or
add
dec
out
mov
cmc
mov
rcr
neg
rorb
dec
fsubrl
cmpsb
jl
mov
jl
push
dec
adc
mov
and
cmp
jnp
and
sbb
and
shlb
iret
mov
mov
sub
xor
jmp
out
push
popa
pop
das
dec
jmp
mov
addl
mov
jns
mov
pop
adc
mov
and
divb
and
fimuls
dec
and
sub
xchg
adc
mov
sub
lods
mov
inc
decb
mov
movsl
push
jl
inc
iret
inc
inc
int3
mov
lahf
inc
pop
sti
sbb
pop
xchg
and
mov
xlat
fwait
sti
push
daa
cwtl
dec
pop
jge
dec
inc
inc
loope
pop
fbstp
or
mov
xchg
enter
push
mov
jmp
fidivs
test
daa
inc
cs
push
inc
movsb
loop
push
dec
in
gs
aad
pop
adcb
dec
sub
jb
sarl
jl
xor
test
jne
cld
xchg
test
dec
enter
fsts
xor
jg
fidivrs
outsb
lahf
or
jo
mov
call
inc
in
in
mov
insl
dec
dec
sub
cmp
push
daa
outsl
call
push
mov
or
cmpsl
aam
dec
rcpps
or
sub
push
lret
push
mov
rcll
mov
lcall
cmp
repz
das
into
push
pop
dec
sbb
sti
sbb
mov
mov
xor
pop
mov
adc
sti
incl
sub
add
adc
lea
pop
xor
xchg
test
adc
inc
addr16
scas
push
popa
stos
outsl
js
sarl
std
push
adc
xchg
jmp
mov
sbb
mov
and
stos
mov
leave
mov
sbb
xor
shlb
add
sub
sbb
inc
and
fcoml
cmpl
mov
imull
jmp
xchg
mov
sbb
mov
mov
jle
or
xchg
dec
or
fsubrp
lret
inc
adc
push
cld
pop
adc
cmpsb
mov
rcrl
mov
sub
xlat
pop
pop
xchg
insb
mov
sbb
fsts
je
push
adcb
cltd
and
shrb
ficompl
mov
std
and
pushf
loopne
cmp
jecxz
outsl
add
in
data16
xor
push
cmovo
lahf
aad
mov
cmc
popa
jmp
dec
sub
mov
shll
pop
xchg
inc
ret
mov
xor
ret
lahf
push
inc
mov
cwtl
mov
enter
imul
adc
jo
incl
and
les
cmp
hlt
je
jno
cmp
roll
mov
movd
aaa
shll
pop
pop
popa
pusha
cli
jmp
out
or
push
repz
clc
popf
test
enter
insb
mov
ss
sub
push
add
popa
and
inc
sbb
cmc
mov
repz
decb
fmull
mov
pmaxsw
xchg
sbb
sub
jb
out
pop
add
jg
pusha
xchg
xor
std
jl
sti
push
dec
fmull
call
fwait
dec
xchg
jl
rcll
addr16
cmpsl
stos
icebp
cmp
or
cs
inc
push
popa
orb
or
sti
pop
jnp
inc
out
cltd
cmp
ret
cmp
das
leave
ss
dec
arpl
xor
jmp
jmp
mov
cmpsl
ja
iret
push
into
in
out
bound
aad
insl
je
pusha
mov
mov
int
xor
fld
jnp
outsb
stos
cwtl
xchg
pop
dec
xchg
mov
xchg
frstor
mov
pop
stc
and
rcll
loop
pusha
data16
mov
lea
lods
mov
cli
and
push
mov
sahf
add
mov
push
fcomps
adc
push
hlt
cltd
mov
aad
repz
pop
dec
inc
mov
lret
sbb
enter
dec
int
hlt
aas
std
and
xchg
jns
lret
ljmp
lea
aas
movsb
test
mov
dec
in
test
jbe
inc
jp
shll
daa
and
ficomps
inc
add
cmp
xor
mov
sub
aas
pop
cmp
or
lret
je
adc
loop
push
jns
insb
jne
ds
jge
xchg
push
adc
stc
sub
pop
in
jg
ret
enter
mov
clc
and
in
push
ds
push
sub
shl
out
lock
loop
push
outsl
lods
icebp
lock
outsl
jnp
dec
push
xor
sbb
das
add
add
mov
mov
jne
adc
test
scas
fstps
cmp
dec
fstps
mov
adc
sti
in
lahf
lret
insb
pop
jmp
mov
dec
xchg
lret
adcl
ss
mov
test
scas
mov
pusha
decl
fidivs
jne,pn
mov
loop
lock
mov
pop
pop
push
pop
adc
and
xchg
test
mov
ja
idivl
xchg
into
les
xchg
nop
jnp
scas
imull
pop
out
jo
imul
test
cltd
push
std
jecxz
notl
dec
push
sbb
pusha
inc
stos
insb
clc
sbb
into
mov
aas
je
mov
jl
mov
and
and
aad
test
mov
push
dec
inc
sti
ficoms
push
lds
mov
jb
dec
rcl
xor
rcrl
stos
mov
ucomiss
push
stc
mov
lret
aas
adc
pop
outsb
xor
push
and
sub
popa
enter
and
add
jl
das
dec
dec
lcall
xchg
shlb
outsl
dec
test
test
adcb
sub
sbb
cld
loope
mov
es
sub
adc
gs
mov
adc
in
sarb
enter
sub
pop
adc
push
pop
lods
outsl
outsb
add
iret
aaa
ret
lcall
and
add
aas
jnp
pusha
cli
dec
sar
mov
add
test
add
push
daa
adc
enter
jnp
cs
ss
in
addr16
lea
jns
jno
fdivs
xchg
shlb
in
fisubl
in
stc
loope
popf
sbb
ljmp
mov
jle
pop
mov
sbb
xchg
pop
xchg
adc
push
divb
and
dec
sub
loope
inc
movsb
mov
int3
orb
mov
sti
jmp
xor
sar
in
aaa
cld
div
adc
test
xchg
cltd
jle
ljmp
out
sbb
xchg
ret
xchg
or
cmp
stos
in
xorl
nop
add
movsb
pop
lock
imul
sub
in
inc
pop
jecxz
lret
inc
xchg
ret
xor
add
mov
mov
jecxz
lock
or
cmpsb
cmp
push
stc
jecxz
out
push
cld
xlat
or
sbb
fistpl
popf
enter
inc
ja
jle
cmpsb
imul
iret
jecxz
insb
sub
and
dec
repz
and
sbb
cli
xlat
add
add
mov
push
xor
std
aaa
fsts
sti
jae
cmc
scas
stc
je
add
fcoml
test
and
test
fnstcw
inc
sbb
ret
xchg
movsl
ficoml
hlt
mov
jno
add
movsl
push
add
mov
mov
push
sbb
jge
scas
pop
xor
iret
push
pop
jge
std
adc
in
add
mov
das
jb
pop
aad
adc
idivb
lock
imul
jecxz
push
popf
rclb
add
lahf
cmc
pop
xchg
cs
jo
add
lock
in
or
fisttpl
cwtl
mov
or
or
jo
push
mov
ljmp
sub
roll
jle
push
dec
pop
xor
lahf
and
xor
imul
shrl
cli
lock
lea
xchg
xor
leave
outsl
addr16
lock
aas
sub
push
mov
sbb
fidivl
push
pop
adc
or
aas
test
lods
mov
pop
mov
cltd
ret
mov
test
mov
into
mov
cmp
test
pop
jg
cmpsl
add
addr16
xchg
adc
aaa
pusha
pop
sbb
pop
cmp
xor
bound
xchg
push
push
mov
cwtl
sbb
imul
and
pop
loopne
aam
push
mov
popa
adc
dec
ja
or
mov
sbb
pop
mov
negl
mov
mov
mov
dec
xchg
xlat
shll
lcall
xor
xor
repz
xchg
pop
outsb
mov
fistpll
lea
loop
sbb
cmpsb
dec
sub
adc
sti
sbb
lahf
mov
xlat
or
js
icebp
jne
icebp
fcoms
pop
add
nop
dec
xchg
lock
lods
push
cltd
xchg
fldl
gs
jg
xchg
lds
fstpt
xchg
cs
mov
test
add
fcmovb
lods
sbb
mov
mov
sbb
sub
testl
inc
dec
incl
incl
fldcw
repz
jb
mov
pop
aaa
in
inc
jl
ret
mov
mov
jecxz
pop
add
jl
or
mov
xchg
inc
shrl
mov
or
sub
push
sub
push
test
repz
mov
adc
and
enter
mov
into
mov
iret
pusha
cltd
push
push
cli
cmc
dec
clc
xor
es
ds
xchg
addb
cs
ljmp
sbb
sbb
mov
mov
and
mov
cmpsb
add
add
imul
out
pop
sub
popf
scas
sarb
fidivs
out
repz
push
in
in
mov
loop
pop
add
jns
push
pusha
nop
push
cmpsb
inc
jecxz
mov
add
fwait
add
jns
ret
mov
movsb
scas
or
ss
adc
fstl
int3
dec
sub
in
inc
sub
aad
mov
outsb
or
mov
stc
push
negl
test
mov
cld
dec
stos
test
in
enter
into
pop
int
adc
iret
jnp
ret
pop
mov
addr16
jno
cli
cmp
or
or
ja
push
inc
movsb
xor
push
jp
and
lods
dec
out
out
bound
dec
xor
jg
fwait
push
orl
in
dec
out
adc
push
test
lods
cwtl
test
push
dec
pop
inc
push
mov
add
dec
xorb
push
sbb
and
sub
mov
in
repz
mov
sbb
icebp
sbb
dec
inc
jl
xchg
xorl
test
and
push
test
add
out
push
cmp
daa
insb
mov
std
inc
jae
cmp
and
cmp
movaps
ja
in
rolb
add
aas
in
ja
add
arpl
fildl
mov
cld
mov
mov
aad
inc
jb
fldcw
xchg
bound
lret
cmp
fcomps
or
sub
and
bswap
jmp
loope
push
loopne
ret
insl
movsb
imul
es
enter
aas
icebp
jo
sbb
mov
jle
cmp
rcrb
mov
das
popa
ficoms
sarl
popf
scas
insl
or
cmc
sbb
xor
dec
or
aam
pop
push
std
xchg
and
sbbl
push
mov
dec
cmpsl
cwtl
cli
imulb
stc
inc
jmp
mov
push
pop
lret
xchg
lcall
mov
sub
jecxz
lahf
loope
call
push
out
mov
std
inc
xor
loopne
push
push
loopne
scas
xor
rcrl
inc
lcall
add
mov
jp
into
imul
xlat
and
pop
jle
addr16
inc
in
mov
pop
loop
cmc
icebp
ja
mov
nop
in
adc
fidivrs
jmp
movsb
push
adcb
imul
pop
sti
adc
add
push
mov
add
pop
and
movsl
imul
pop
jle
mov
jmp
fwait
push
testb
dec
rclb
fldt
jp
xchg
idivb
imul
pushf
loope
sbb
and
mov
fisubl
and
fstpl
xor
push
xlat
rorl
mov
int3
fsubs
sub
xchg
movsl
hlt
dec
lcall
lahf
mov
cmp
sbb
or
out
pushf
addr16
dec
call
das
cltd
mov
and
xor
fsubl
pushf
dec
mov
mov
mov
scas
mov
pop
inc
xchg
sbb
mov
jno
xor
mov
mov
push
fs
mov
jge
in
xlat
xor
jbe
adc
xchg
daa
gs
inc
fs
xchg
jmp
lods
loopne
outsb
pop
or
inc
adc
add
lahf
xor
insl
push
mov
xchg
lret
jno
orl
jg
mov
data16
push
mov
xor
xchg
cmp
pop
mov
xchg
aam
sarl
pop
cmc
xor
test
fwait
dec
lds
lods
sub
push
gs
cld
add
lea
es
and
imul
or
iret
fwait
add
lock
in
loopne
dec
fcomps
inc
clc
dec
pop
sub
addb
insb
in
dec
xor
rol
mov
in
repz
mov
mov
pop
jp
cmpsb
daa
push
sub
jg
inc
lods
adc
ret
stos
add
push
dec
icebp
nop
cmp
mov
aad
cmp
and
loope
cmpb
into
mov
andb
jns
fucomi
sbb
nop
hlt
int3
es
pop
dec
daa
fistpl
insb
or
in
jnp
adc
push
pop
loop
or
xchg
nop
jl
adc
ds
enter
loopne
iret
lcall
scas
dec
jecxz
mov
faddl
popf
ret
sbb
lret
cmp
fistpll
add
dec
dec
sbb
jae
pop
pusha
push
sub
xchg
fstl
sbb
cwtl
fcompl
aas
test
xor
xchg
push
add
mov
push
enter
push
cld
nop
imul
sbb
ficompl
add
movl
aam
bound
rorl
dec
fbstp
in
mov
nop
scas
push
mov
inc
sub
mov
fs
jl
jns
sub
mov
out
or
test
test
pop
mov
je
mov
mov
in
div
lods
sbb
imul
push
into
cli
cmp
in
sub
push
rorb
add
jmp
inc
mov
cmp
mov
lahf
cmp
shld
sub
ljmp
add
andl
aaa
dec
push
pop
iret
sti
push
fcoml
in
mov
adc
cmp
lahf
push
js
inc
mov
jns
jns
sbb
adc
fwait
or
xor
test
add
out
lea
and
fs
mov
std
or
pop
jecxz
xchg
sub
pop
aas
cwtl
adc
push
nop
sub
and
inc
nop
test
push
cmp
mov
xorb
dec
lods
jae
adc
call
cmp
or
xor
mov
ja
int
sbb
sbb
push
into
outsb
dec
das
lock
or
test
negb
mov
aam
mov
mov
mov
lods
pop
nop
mov
stos
mov
orl
push
aas
sub
adc
in
jl
repz
out
fnstsw
mov
push
das
cld
mov
cli
inc
lahf
mov
fistpl
scas
insb
aam
iret
lods
outsl
dec
or
jg
add
jg
outsb
fimull
clc
add
addr16
cmpsl
mov
push
lds
or
test
cli
mov
in
leave
push
sbb
out
jns
adc
daa
xor
rcrl
lcall
push
inc
adc
loopne
pop
add
stc
jae
xor
pop
js
or
mov
push
mov
addb
and
xchg
inc
sti
pop
jp
sub
jl
cmpsb
lock
test
cmp
and
dec
jbe
fldl
push
push
sahf
and
cmpsl
lds
movsl
movsl
xor
pop
popa
sti
imul
mov
jb
lahf
mov
imul
mov
out
addr16
jb
mov
enter
xor
or
push
xchg
jbe,pt
lret
dec
inc
sbb
sub
dec
imul
mov
push
inc
sub
mov
cmp
and
test
js
imul
in
sub
sbb
mov
push
shr
ja
push
loope
test
mov
sarb
imul
mov
pop
jno
aad
jb
xor
popa
xchg
cmpsl
dec
xchg
into
add
jb
xchg
sbb
jl
xor
mov
sbb
push
and
pop
popf
pop
les
adc
daa
inc
repnz
andb
jg
and
push
pop
call
sbb
test
inc
pop
mov
fcompl
cmpb
sub
pushf
stos
je
in
inc
dec
jo
pop
lock
inc
ss
jo
inc
aad
sbb
adc
call
cmc
movsb
adc
adcl
xchg
inc
mov
mov
imul
addb
enter
rolb
mov
push
xchg
push
pop
adc
test
xor
mov
or
push
hlt
lock
decb
outsb
push
cltd
lahf
xchg
sti
xchg
ret
pop
nop
push
adc
sbb
jg
pop
xchg
xchg
fidivrl
pop
mov
outsb
cmc
jge
loope
in
gs
daa
add
pop
jp
sub
lods
sbb
mov
dec
es
mov
int3
adc
shr
es
push
lahf
cmp
mov
lret
push
rorl
inc
mov
loope
cmp
push
pushf
in
pushf
stos
jmp
and
push
cmpsb
pop
nop
icebp
jmp
aad
mov
inc
xchg
rclb
and
jns
add
add
add
cwtl
pop
jb
xor
mov
enter
enter
loopne
add
in
mov
ljmp
pop
and
repz
push
sub
adc
push
in
lahf
imul
pop
fildl
dec
pop
shll
hlt
stc
mov
rclb
and
xchg
mov
inc
cwtl
and
pop
jb
mov
inc
and
int
mov
jmp
dec
addb
shl
xchg
cmpsb
sub
mov
mov
sub
cmp
cmp
push
rcrb
sub
mov
pop
rorb
idiv
xor
dec
data16
mov
or
inc
lret
stc
cltd
sbb
lret
jae
cmpsl
adc
dec
adc
gs
and
dec
es
add
mov
adcb
es
ss
cmp
addr16
sbb
add
aad
dec
sarl
xchg
add
arpl
sbb
jle
test
int
sbb
fsubs
addr16
shlb
aad
cld
rclb
fsubrl
movsb
ficoms
push
sbbb
jne
jae
push
cli
mov
jmp
pop
pop
mov
cld
bound
mov
sbb
or
out
repz
lock
jbe,pn
push
es
insl
adc
add
es
xor
xor
jo
pop
or
and
cmc
mov
cmp
fidivrl
in
movsb
sub
ficomps
xor
inc
sarl
outsl
adc
push
pop
or
mov
lods
loop
sub
and
divl
xchg
cmp
inc
ja
repz
pop
in
fnstenv
mov
cmp
add
adc
add
sbb
loop
sub
inc
add
pop
in
cs
inc
xor
jl
xor
dec
mov
inc
pop
stc
popa
ljmp
mov
lea
jns
jl
mov
mov
scas
js
sub
and
pop
ljmp
or
sbbb
mov
push
push
lea
pop
jb
and
mov
movsb
cs
cltd
or
lods
cwtl
icebp
mov
js
jecxz
sub
test
dec
repz
xor
inc
popf
pop
test
insb
repnz
or
sahf
sbb
imul
mov
cmp
lods
inc
fistpll
je
fbstp
push
push
push
loope
mov
jge
inc
mov
mov
dec
lahf
and
cmp
popa
add
push
inc
daa
shll
fnsave
and
cmp
stc
fwait
adc
xor
jmp
xor
ret
addr16
nop
mov
jns
inc
adc
out
sbb
jg
mov
pop
sbb
cmp
mov
pop
sahf
push
add
ficoml
push
cmpsl
mov
sub
adc
lahf
outsl
xor
jle
mov
bound
cmpsb
lds
mov
cmp
imull
gs
xor
or
fisubs
adcb
sub
sbb
pop
pop
fstps
add
and
sbb
ficoml
jo
xchg
add
cmp
fwait
add
or
shrl
testb
lret
or
push
xorb
sbb
push
mov
scas
cmp
scas
test
hlt
and
xlat
pop
adc
lock
insl
inc
sbb
faddp
bound
lods
insl
movsl
insb
xchg
lret
push
adc
repnz
mov
cld
jmp
xor
mov
and
dec
mov
hlt
daa
mov
xor
ja
movl
jb
sbb
jne
clc
push
cmpsb
cmp
adc
in
cmp
rcll
std
out
and
push
stc
add
dec
lock
and
cmp
sbb
cmp
ljmp
and
mov
dec
rcrl
mov
repnz
pop
xor
jecxz
das
push
cltd
push
inc
push
pop
lods
int3
jecxz
movsl
movsl
xor
test
mov
movsl
int
in
sbb
mov
or
cmp
adc
pop
jne
add
mov
sub
fs
or
stc
mov
jg
popa
push
jecxz
dec
insb
lcall
push
aam
pop
lahf
push
mov
out
pop
loope
icebp
push
movl
pop
loop
test
sti
jbe
cld
lods
std
std
cli
pushf
fistpl
jp
jnp
and
js
jp
mov
push
cld
popf
mov
cmp
jmp
stos
adc
mov
cmp
sub
mov
fcoms
lea
mov
clc
xchg
es
add
inc
out
inc
mov
dec
out
das
and
adc
fsubs
frstpm(287
arpl
mov
mov
lods
andl
int
mov
scas
and
fucom
ja
nop
mov
mov
lods
lret
pusha
loop
cmp
mov
in
mov
push
decl
negl
popa
je
dec
mov
std
mov
adc
cli
out
scas
xchg
fwait
aam
dec
sbb
stc
sub
vhsubpd
stos
adc
test
add
fsub
faddp
dec
add
mov
or
push
lods
cld
sbb
leave
mov
mov
cmpl
pusha
mov
cmp
jae
jns
in
pop
or
adc
je
mov
rolb
and
cmp
data16
jbe
jle
lock
int3
ja
sub
xchg
pop
lcall
inc
and
cld
add
stos
data16
fisttpll
popf
push
cmpsb
enter
popa
or
mov
out
test
rcr
pushf
and
xchg
cmpsl
pop
test
aam
out
jne
mov
cmp
pushf
in
sub
lret
lcall
jno
loop
mov
rorl
cmp
inc
sbb
fwait
jmp
repz
mov
lret
mov
cmpsb
in
sub
fdivrs
je
sti
ss
cwtl
xchg
fbld
nop
pop
pop
movsl
adc
add
pop
xor
fwait
aam
add
ja
xor
inc
and
fsubr
nop
lods
out
insb
loopne
fs
lock
mov
cmpsl
dec
aaa
adcb
shrb
cmp
push
ljmp
push
lock
sub
jmp
rcll
mov
push
hlt
mov
repnz
add
pop
jnp
push
nop
xor
daa
out
ljmp
shll
and
mov
in
daa
dec
jmp
push
loope
repz
pop
cmp
cmp
out
mov
mov
cs
inc
push
mov
add
loop
cs
lret
mov
ret
cwtl
movb
mov
jns
fnstcw
in
inc
pop
and
out
mov
xor
pop
add
jbe
add
idivb
adc
das
cmp
out
push
adc
add
loop
out
or
mov
dec
xchg
inc
jns
into
xchg
sbb
sahf
push
dec
pop
lock
dec
outsb
in
and
mov
nopl
xchg
cltd
cmp
jmp
out
push
cmc
and
jmp
stc
mov
imul
mov
jno
jp
mov
add
and
les
pop
stos
adc
mov
pusha
outsl
jge
adc
and
sahf
lods
lahf
cltd
add
test
loopne
sub
jb
sub
outsb
inc
rcll
or
lods
pop
mov
add
outsb
out
fidivl
mov
jns
xchg
adc
mov
mov
out
push
cld
popa
or
cmc
lcall
popf
and
pop
ret
std
or
aaa
sbb
mov
mov
cld
xchg
mov
scas
dec
mov
mov
cmpsb
push
add
mov
pop
cwtl
adc
loopne
pop
loop
popf
ljmp
sub
mov
ret
ja
ja
and
mov
inc
mov
into
adc
xchg
sbb
scas
push
lret
push
lret
jno
sub
subb
add
imul
xchg
imul
jl
aam
les
fs
pop
dec
lock
add
lret
push
int
shl
pop
lret
jle
loope
push
loop
jl
scas
sub
call
in
jnp
es
pop
xor
push
add
jmp
mov
mov
cwtl
add
icebp
pop
lahf
lahf
and
test
out
je
lahf
or
aas
cmpsb
outsb
jbe
test
inc
bound
ret
and
dec
dec
inc
jle
dec
or
adc
je
jmp
mov
mov
scas
loopne
std
fldcw
push
xchg
rcl
or
out
shr
enter
add
rcrb
mov
and
push
loopne
xlat
xchg
push
push
push
lahf
or
fs
es
cwtl
mov
pop
inc
mov
dec
mov
jne
push
sub
or
rcl
ljmp
test
inc
fisubrs
insb
jp
sub
lock
ret
cltd
and
xchg
jb
add
int
push
or
dec
ror
decl
jge
in
add
xchg
movsl
inc
cmp
stc
pop
and
xchg
sbb
xchg
in
notl
cmp
push
je
pop
test
sub
mov
jecxz
mov
bound
cmp
xor
push
orl
pop
ds
sbb
sub
into
cmp
stos
mov
test
add
hlt
mov
fucomip
loop
jge
rcrb
sub
add
pop
fnsave
lea
mov
jns
fsts
std
xor
push
test
mov
in
fwait
test
mov
dec
and
push
aad
adc
popa
sub
xor
xor
mov
or
push
ds
jnp
dec
xchg
bnd
enter
repz
imul
pop
push
adc
adc
lret
mov
sub
repz
lret
xchg
dec
cld
fsubrs
jecxz
jge
jns
inc
jge
xchg
popa
cli
inc
lea
out
out
jbe
cmp
cmp
and
mov
iret
push
rclb
pushf
scas
xor
and
inc
je
out
call
mov
push
cmp
or
jne
out
jg
adc
out
adc
cld
jmp
push
flds
push
mov
imul
xchg
jb
and
sub
xorl
lcall
pop
pushf
cmc
pop
mov
fidivrl
inc
sub
xchg
cmp
js
aam
out
push
mov
mov
mov
jbe
dec
mov
lahf
and
jmp
bound
outsl
shlb
and
cs
repz
mov
mov
push
scas
div
lods
push
lds
orb
cld
arpl
std
sub
adc
push
push
jne
adc
hlt
push
cli
stc
mov
sub
lret
clc
adc
cmpsb
pop
mov
orl
mov
mov
xchg
mov
push
rcll
popf
jae
movsl
mov
and
xor
or
sbb
xor
cmp
inc
jno
insb
push
sbb
fistpl
and
test
jecxz
fnstcw
jns
cmpsb
adc
add
mov
dec
shlb
or
dec
leave
mul
fisttpl
and
ljmp
loope
xor
cld
das
subl
sub
outsb
les
rep
dec
add
repz
jbe
lds
or
in
loop
insb
les
mov
cwtl
addr16
sbb
push
lahf
or
pusha
jp
add
sbbb
int3
jg
cmp
mov
dec
roll
inc
gs
je
out
sti
push
dec
mov
into
test
cs
mov
in
lret
loop
in
in
xor
stos
data16
jo
or
add
mov
jp
mov
les
aas
scas
lahf
cld
mov
cmp
mov
ficomps
or
cmp
or
lods
or
dec
mov
int3
push
sub
das
insl
inc
shll
jge
jno
mov
adc
jmp
lds
jecxz
outsb
por
jp
jns
sub
ljmp
aam
sub
inc
or
cmp
or
jl
xor
and
int
ret
fbstp
mov
pop
jge
jp
add
or
rclb
jbe,pt
jle
add
or
shrl
sbbl
popf
nop
push
add
data16
aam
ret
mov
fwait
push
push
mov
fs
pop
data16
pop
aas
cltd
mov
and
outsb
pop
pop
inc
jge
sub
fldenv
notl
jae
sub
ds
pop
in
push
test
test
pop
dec
push
push
jl
pop
in
div
xor
mov
repz
mov
loopne
loop
and
cmp
out
pop
mov
ss
mov
push
lds
lods
sub
adc
or
mov
push
adc
repz
ljmp
push
jmp
sbb
inc
mov
add
or
and
nop
icebp
es
inc
lret
imul
movlps
hlt
and
mov
loop
cmp
mov
adc
je
lcall
push
sbb
shlb
mov
mov
mov
out
lods
ljmp
mov
out
cmp
int3
leave
cmp
xor
sub
test
jo
sbbl
mov
cmp
ja
pop
mov
call
inc
pop
xchg
mov
popa
cltd
gs
movsl
push
inc
pop
inc
xchg
pop
cmp
andb
mov
mov
cmp
fwait
adc
sbb
xor
mov
mov
jbe
sbb
rcll
pop
jg
testl
and
push
out
mov
test
xchg
inc
jle
xorl
loop
ret
ret
or
jo
imul
sub
fwait
inc
sbb
adc
loop
lret
sub
inc
int3
dec
xchg
ret
mov
inc
cmp
cmpsb
jge
push
dec
mov
lcall
lret
push
xorb
scas
jg
sbb
mov
inc
or
je
lcall
popa
add
sub
sbb
repz
inc
test
cld
jb
pop
addb
cmpsl
pop
test
outsb
push
mov
lahf
rcll
cmc
dec
lahf
je
push
jp
aam
cld
lods
dec
jno
and
pop
jb
mov
jns
pop
aam
js
testb
mov
dec
ret
call
mov
pop
add
divb
dec
jl
out
movb
cmp
scas
mov
in
xchg
es
and
je
dec
cmp
push
add
dec
cltd
lahf
int
std
in
mov
es
inc
mov
clc
push
and
movsb
xchg
xchg
ret
push
aas
xlat
mov
stc
inc
mov
dec
lahf
sbb
lods
aas
sub
popf
es
mov
push
push
arpl
dec
fcomps
xchg
mov
movsb
pusha
imul
mov
cwtl
and
pop
fwait
hlt
fimull
mov
dec
add
dec
cmpsl
cli
xor
jmp
xor
push
push
or
and
popf
xor
jno
sbb
push
dec
push
cwtl
push
test
push
push
push
popa
mov
push
adc
ret
movsl
fs
sbb
into
jb
movsl
data16
sub
roll
sub
mov
push
push
mov
cld
adc
jne
inc
fiaddl
daa
adc
je
pop
mov
fdivl
xchg
popf
mov
xor
es
lock
inc
adc
push
pop
or
mov
mov
and
add
xor
push
insb
jbe
ljmp
adc
sahf
xchg
ret
mov
cmp
scas
imul
add
sbb
repnz
mov
cmp
loope
addr16
unpckhps
dec
jo
loope
pop
xchg
out
scas
imul
add
or
xchg
js
add
test
lock
xchg
jl
jo
xchg
mov
mov
mov
jae
test
jbe
imul
dec
or
shll
leave
cmpsl
jl
pop
jle
sbb
jb
or
sti
scas
sbb
fwait
mov
cmpsl
xor
into
cmp
jae
add
adc
jg
push
iret
xor
fcoms
dec
xchg
push
adc
and
adc
sbb
push
lea
das
popf
jg
xchg
push
mov
cmp
out
dec
xchg
nop
sbb
test
in
dec
xor
adc
cli
out
xor
leave
out
fdivrs
xchg
jnp
xor
add
cmpsl
dec
cmp
dec
pop
shlb
clc
out
push
movsl
les
in
mov
push
sub
push
adc
jle
add
sbb
lods
jle
cltd
fcmove
lret
mov
jecxz
and
dec
jae
adc
sbb
repz
cli
adc
nop
sbb
pop
or
je
dec
in
adc
loopne
mov
movsl
jne
mov
or
shrl
pop
xor
cmp
mov
xor
or
jp
cmp
in
inc
inc
fildll
xor
pushf
xor
xor
cli
cmp
outsb
cli
pop
inc
pop
fistps
shl
and
jp
and
sub
push
lds
xchg
mov
inc
sbb
jg
fisubs
sahf
sub
imul
sbb
je
shlb
popf
cwtl
shlb
notb
andl
pop
clc
rorl
cld
pop
inc
fistpl
sub
sarb
int
ljmp
scas
add
mov
xor
jl
icebp
clc
xchg
sub
mov
or
xlat
and
or
orb
insl
gs
mov
leave
fwait
and
mov
loope
mov
pop
sub
ficompl
adc
test
aam
test
xor
mov
pop
mov
cmpsl
mov
add
iret
xchg
sub
ds
jo
aam
ljmp
test
loope
jae
stos
std
mov
icebp
pop
fdivrp
pop
mov
data16
and
orl
outsb
mov
lock
lds
sahf
and
pop
mov
popa
pushf
jne
and
add
mov
xor
jg
inc
sub
fadds
mov
sbb
mov
orb
ret
aas
repnz
loope
and
aad
mov
xchg
out
sub
sbb
dec
cmpsb
fdivl
stc
add
out
data16
shr
cmp
pop
in
lods
mov
jns
jns
ss
cld
pop
fs
aad
and
cli
je
bound
lds
pop
adcb
call
test
mov
xchg
add
leave
cmp
sub
rcrb
and
pop
dec
mov
mov
mov
test
or
dec
sbb
mov
addl
fcompl
sub
pop
std
xchg
es
imul
fdivl
mov
nop
es
int
mov
mov
outsl
repnz
rcll
xor
xor
test
js
mov
cltd
push
pop
xchg
ficomps
rcrb
popf
xchg
adc
lahf
enter
test
or
jg
mov
xchg
sub
decb
add
cmp
cmp
cmc
fists
adc
mov
adc
out
adc
scas
adc
pop
pop
push
push
out
or
add
mov
push
xchg
jmp
and
rcll
mov
pusha
or
cltd
push
lds
ljmp
mov
jae
adc
les
sub
adc
frstor
inc
movsb
std
fisubrs
ja
adc
int
shr
xor
pop
loope
sahf
das
xchg
scas
dec
dec
shrd
cs
leave
sub
push
xchg
popf
rcll
jbe
iret
cli
daa
xor
mov
sbb
add
pop
sahf
aam
xchg
lret
mov
and
in
sbb
mov
mov
mov
sub
adc
jb
in
jge
or
jge
popf
push
shll
sub
lret
sub
ds
fmull
sbb
into
fadd
stc
xchg
lea
lret
cmp
jp
inc
sub
dec
adcb
decb
cmp
fwait
data16
loopne
mov
rcll
jecxz
xadd
popl
push
dec
pop
rcll
cmp
push
inc
lea
and
or
pop
out
sbb
push
imul
mov
push
int
inc
dec
push
sub
or
and
inc
xchg
jge
adc
cmc
fwait
mov
or
out
mov
jg
add
fwait
test
mov
dec
inc
push
jle
jecxz
sub
sbb
jo
sub
xchg
dec
test
popf
pop
mov
cmp
cmp
inc
xchg
sub
push
cmp
jp
push
pop
push
jmp
mov
add
dec
stos
ds
sub
sbb
pop
outsb
xchg
in
cmp
cmp
loop
icebp
sti
rcl
mov
insl
dec
sub
scas
repnz
stos
icebp
dec
jns
push
push
mov
sub
xchg
lea
xor
inc
push
mov
rorb
inc
fs
push
testl
dec
jb
ret
mov
mov
je
xor
jo
jne
test
in
movsl
xor
sub
push
or
pop
fisubrs
adc
mov
jecxz
je
sub
mov
pusha
xchg
loopne
or
add
lea
les
mov
pusha
mov
mov
mov
inc
loop
add
cli
hlt
imul
repz
jp
jg
insl
mov
mov
sub
xlat
add
xlat
cmp
cmp
sbb
mov
jge
arpl
fcmovbe
add
lahf
and
stos
dec
aaa
lcall
mov
popf
aas
rcll
int3
mov
adc
xchg
fdivrs
inc
imul
das
ds
fsts
imul
fwait
push
mov
lcall
mov
mov
sar
jb
imul
add
fsubrp
mov
loopne
and
jo
push
out
and
dec
test
cld
daa
sti
push
mov
aad
icebp
lods
lods
adc
jmp
jne
fidivrs
cmp
mulb
cmp
nop
inc
punpcklbw
jge
jno
and
out
in
mov
mov
gs
test
pop
or
insl
or
mov
or
mov
shr
jb
push
push
mov
scas
pusha
cli
xlat
arpl
and
enter
pop
or
xor
cmpl
sahf
ds
subl
xchg
out
and
xor
sub
dec
test
sbb
aaa
pop
emms
outsb
in
adc
repz
test
adc
xchg
jg
repz
aas
push
ja
sub
dec
mov
imul
scas
aad
jecxz
insl
pop
mov
xlat
inc
popa
sbb
das
xchg
mov
jg
pusha
lods
sub
jecxz
arpl
pop
ljmp
mov
stos
sbb
xchg
ja
popf
xchg
addl
jb
mov
mov
sub
xor
xor
dec
inc
in
pusha
in
and
mov
mov
fiaddl
aaa
aam
daa
mov
dec
and
dec
orb
dec
mov
js
cwtl
aaa
adc
pop
roll
mov
cmpsb
cmp
xchg
repz
movsb
outsl
stc
idiv
mov
xor
lds
insb
rorl
xchg
push
fisubrs
dec
cli
adc
pop
pop
ss
js
cmp
ljmp
mov
imul
and
decl
aas
xor
jnp
xchg
movsb
aaa
mov
cmp
popf
stc
fcomps
iret
and
into
addr16
mov
movl
les
sub
shll
loop
sahf
aaa
jle
loop
or
test
push
das
lret
outsb
dec
pop
fisubs
or
dec
sbb
in
movsl
andl
dec
pushf
push
inc
shrl
ja
inc
xchg
sahf
sub
push
subl
pop
in
sbb
shll
out
loope
popf
repnz
inc
les
or
loopne
mov
out
xchg
pop
adcl
push
sti
js
imul
push
jae
fiadds
out
mov
rcrl
insl
fwait
jmp
cmpsl
mov
add
jae
inc
scas
insl
sub
or
xchg
mov
or
sbb
pop
sbb
mov
jno
mov
fs
mov
add
add
imul
jmp
sbb
pop
ret
xor
xchg
inc
test
mov
add
xor
xchg
dec
lcall
sub
int
rcrl
bound
or
pop
imul
pop
cs
sbb
and
insb
movsl
xchg
imull
pushf
movsb
int3
shll
cmp
jno
adc
push
popf
nop
adc
call
or
push
adc
cmc
push
pop
ja
cs
js
jg
xor
mov
jae
mov
dec
ficoms
push
bswap
cmpsl
mov
jae
or
xchg
pop
outsb
or
sub
jnp
shl
adc
jb
mov
sub
xchg
xor
mov
pop
test
fs
in
xchg
cltd
out
ficompl
std
test
or
std
jns
push
xchg
test
aad
pop
jge
lods
inc
repnz
stos
cmpb
or
xchg
loope
push
mov
je
add
jl
xchg
sbb
test
adc
rcl
and
lds
lret
and
enter
mov
std
stos
bound
sbb
dec
mov
cwtl
inc
cwtl
bnd
xchg
repnz
jmp
fwait
push
adc
pop
or
mov
cs
pushl
aad
scas
loope
fists
xor
xchg
les
inc
arpl
dec
dec
fwait
xchg
call
loopne
sbb
fdivs
xor
jecxz
cli
xchg
or
cmc
iret
add
or
mov
nop
out
jl
test
bound
lock
mov
pop
jg
scas
imul
mov
repz
xor
cltd
cmp
and
mov
mov
cmp
inc
jecxz
mov
jne
xor
clc
cld
sbb
and
add
mov
mov
mov
pop
fbstp
or
mov
xor
push
xchg
outsb
lret
int
fsub
out
movsb
pop
rorl
fs
mov
jno
add
dec
mov
out
insb
stc
or
into
cmpl
or
mov
add
scas
cli
cld
arpl
xor
xchg
xlat
jmp
mov
mov
test
mov
gs
push
jnp
cmp
rcrb
imul
inc
xchg
push
filds
test
sbb
fs
icebp
out
addr16
cmp
in
inc
jp
xchg
pop
jno
jp
push
inc
out
add
stc
out
out
sbb
fs
cmpsb
es
daa
cmpsb
jns
pop
and
xorb
pushf
sub
iret
imul
sbb
cmp
mov
rclb
outsb
inc
mov
push
cmpsb
xor
sub
into
insl
xor
cli
jno
pushf
int
popf
jp,pn
jno
and
add
jb
std
faddl
push
test
xor
jecxz
scas
inc
sahf
int3
repz
inc
nop
incb
jae
pop
fdivrs
xor
push
ja
mov
test
or
dec
jae
dec
push
cmp
movsb
arpl
test
add
xchg
insl
daa
cmpsb
rorl
outsb
jecxz
faddl
scas
jo
xchg
ds
cmp
and
cmp
rcrb
sbb
ss
enter
push
mov
testl
nop
jne
lods
adc
pop
shl
jl
aaa
cmp
add
in
xor
jnp
out
xor
pushf
cmp
stc
mov
mov
icebp
repnz
scas
jae
pop
xchg
mov
lcall
cmp
ret
nop
or
push
mov
jae
push
enter
dec
das
inc
jmp
scas
push
lds
mov
xchg
jmp
xchg
nop
push
dec
mov
inc
sti
cmp
sbbl
mov
jnp
dec
repz
rcrb
imul
mov
leave
int
cmpl
aas
ss
repz
ja
sbb
std
mov
sti
push
lock
dec
mov
out
pop
inc
ret
mov
or
in
inc
dec
xchg
sub
pushf
dec
inc
inc
and
push
xor
lahf
fwait
sahf
push
xchg
lods
mov
mov
test
call
lods
mov
lret
xchg
pop
inc
adc
scas
push
ljmp
test
mov
imul
pop
stc
aas
les
add
mov
ret
push
sub
addb
nop
stc
loop
fmull
xor
nop
jo
jnp
lret
gs
sub
mov
dec
lcall
int
cmp
dec
add
inc
mov
adcl
daa
ljmp
xchg
arpl
jae
dec
leave
ljmp
fsubp
mov
fbstp
daa
pop
ror
inc
rep
xor
out
inc
je
sbb
xor
adcl
loope
adc
pusha
mov
adc
das
gs
fs
scas
ljmp
pop
pop
mov
push
push
lcall
xchg
arpl
ds
stos
dec
xchg
mov
adc
sub
and
xlat
sub
cmc
lcall
aad
adc
loope
cld
pop
push
push
popa
adc
testb
lods
ret
insb
mov
int3
cmp
jp
test
repz
aad
insb
cmp
or
xor
nop
mov
push
fcompl
outsl
jnp
xor
notl
cltd
jns
popl
add
inc
inc
mov
into
lret
ljmp
nop
jno
std
push
xchg
jns
ret
sbb
std
rcr
ss
mov
fistps
icebp
pop
daa
jg
in
sbb
enter
ljmp
ds
cmpsb
fidivs
jle
mov
push
mov
sahf
push
loop
pop
or
xor
out
inc
xor
and
inc
mov
lret
push
sti
insb
scas
popa
push
sbb
inc
add
jg
je
je
inc
sbb
inc
mov
mov
sbb
mov
adc
aas
fwait
loope
daa
cmpsb
jmp
sub
ret
jb
add
addr16
jecxz
cli
sbb
inc
inc
out
xor
jmp
addr16
xor
inc
jb
cwtl
fldl
stc
gs
xchg
pop
dec
in
shrb
les
popl
jmp
cmp
cmpsb
cmp
in
imul
cld
nop
mov
add
jbe
test
lock
cwtl
ror
pop
xchg
fmull
shrb
mov
shrb
loop
fwait
inc
jns
aas
mov
rcll
xchg
fwait
xchg
jne
cmpl
fwait
xchg
cwtl
outsl
scas
pop
cs
aas
xlat
test
cmpsb
in
xchg
adc
rcll
test
pop
lahf
pop
xor
dec
push
mov
icebp
mov
sub
syscall
faddl
test
icebp
outsl
in
mov
xorb
pushf
sbb
dec
xor
pop
lods
fstl
jle
mov
ret
rclb
or
fcomps
dec
fistl
ret
inc
inc
les
movsd
push
add
ficomps
mov
lss
imul
pop
xchg
mov
pop
out
lock
jae
mov
pop
fidivrs
in
lods
and
cli
dec
push
or
cmp
push
rclb
cmp
test
sub
dec
mov
sarl
loop
adc
add
sbb
nop
mov
dec
enter
xchg
imul
jb
xchg
adc
imul
je
inc
ja
dec
ds
mov
mov
scas
xor
dec
aas
sbb
shll
mov
insl
pop
cmp
out
pop
cld
add
pop
ss
inc
lret
mov
fs
aad
mov
mov
in
data16
outsl
mov
xchg
pop
xor
ss
scas
cld
repz
inc
std
jbe
push
dec
cs
movups
aaa
cmpsl
adc
adc
and
push
stos
js
xchg
dec
in
ret
and
sub
pop
lret
cli
inc
imul
loop
adc
and
mov
sub
mov
aaa
sbb
in
fwait
movsb
jp
push
push
addl
pop
and
shll
fwait
push
push
sbb
lahf
divb
into
or
xchg
inc
lds
adc
xor
das
ds
sub
clc
mov
push
cmp
test
push
or
pop
test
inc
cmpsb
mov
jp
lahf
mov
and
out
cmp
in
shl
jge
in
add
ss
xlat
and
out
xor
cmp
and
in
mov
dec
lret
out
and
adc
cmp
sbb
adc
adc
xor
lds
xchg
or
xorl
jmp
sahf
fwait
mov
xor
inc
cmc
xor
pop
mov
sub
add
jb
or
xchg
sti
stos
outsl
clc
std
out
mov
or
int3
jb
lods
frstor
cltd
sub
and
xchg
ret
or
xor
dec
inc
xchg
scas
les
inc
sbb
in
cmp
lods
das
cmpsb
enter
inc
push
arpl
cli
cli
aad
insl
cmp
fldt
cld
mov
and
subb
push
and
mov
jecxz
test
or
hlt
sarl
xchg
enter
sbb
and
sbb
inc
gs
shrl
mov
nop
test
add
mov
or
xor
sbb
test
jns
sub
mov
inc
jp
cmpsb
fdivrs
rcl
clc
dec
xchg
or
or
pushf
xor
cmp
jmp
sub
pusha
sti
fisubs
pop
lret
lret
mov
push
mov
dec
push
dec
popa
jecxz
mov
in
push
dec
in
ljmp
jle
adc
xor
dec
sbb
imul
mov
fmul
jns
dec
pop
adc
adc
cmp
shll
add
adc
ss
iret
xorl
jg
fnstenv
mov
adc
aaa
popa
lods
add
bound
inc
inc
mov
into
xlat
test
out
data16
cmp
addr16
popa
push
out
xor
gs
pop
fimuls
stos
xchg
push
rorl
icebp
mov
jle
sub
dec
push
cli
lods
cmpsl
and
in
out
mov
fs
je
sbb
cmp
sub
iret
xchg
psllq
rcll
and
js
or
or
popf
mov
test
insl
shlb
add
mov
push
cltd
cs
mov
fcompl
loope
andl
jae
not
test
je
les
dec
dec
aas
mov
lods
test
mov
sbb
addb
adc
outsb
jmp
jns
and
scas
sbb
cmp
in
sahf
push
jmp
insl
pop
push
ljmp
push
dec
ret
mov
sbb
push
das
push
cmp
push
mov
pop
je
mov
shll
mov
jge
rorl
out
jle
shlb
loop
xorb
cmpsl
dec
xchg
mov
inc
inc
xor
movsl
jo
int
fld
lcall
mov
cltd
popa
cmp
popf
mov
jecxz
pop
xor
jp
fwait
jnp
loop
xlat
mov
ficomps
ficoms
iret
inc
sbb
loopne
movsl
xor
inc
mov
sub
jns
movsb
scas
and
stc
xchg
push
push
push
xor
and
pop
pop
adc
lea
adc
push
jge
fwait
insl
pop
jns
xchg
xor
cltd
scas
jmp
mov
jnp
inc
or
jb
out
mov
sub
loopne
xorb
dec
dec
push
add
inc
popl
in
fldl
cmp
lret
fsubrp
xchg
in
push
lds
in
divl
in
pushl
dec
jle
dec
in
pop
push
ret
fdivl
ljmp
in
lahf
data16
ja
test
sahf
repnz
js
dec
pop
adc
push
mov
loope
mov
mov
inc
sbb
int3
add
jae
fwait
and
jl
xchg
xchg
inc
push
pop
out
push
aaa
ret
or
cmp
sbb
or
jbe
bound
mov
xchg
lahf
ljmp
sbb
rorb
and
and
dec
cmp
adc
pop
bound
cmp
add
imul
repnz
repz
add
in
add
repz
fsubr
mov
popa
adc
call
xor
xchg
mov
mov
movsl
push
aaa
sbb
loopne
cmpsl
pop
dec
or
dec
lock
jle
das
cmpsl
or
xor
fisttpl
aam
cmp
gs
ret
xchg
xor
sbb
xor
jg
in
lods
testb
pusha
inc
fiadds
je
jg
dec
in
dec
lock
fadd
shlb
enter
xor
xchg
cmp
stos
pop
mov
jnp
sub
pop
aas
push
sub
fildll
dec
mov
sar
scas
mov
and
cli
xchg
leave
mov
jge
pop
shrl
fisubrl
xor
push
cwtl
jne
cmp
dec
mov
push
mov
push
mov
sahf
cmp
clts
jmp
ljmp
pop
push
dec
xchg
cmp
xor
and
pop
lcall
hlt
sahf
pusha
stos
neg
push
push
or
js
jns
mov
lret
cmc
loopne
and
nop
cmc
or
and
push
popa
ret
xchg
insb
repnz
adc
mov
cli
test
mov
loope
icebp
imul
add
add
imull
xor
xchg
shl
sbb
xlat
or
out
xor
daa
adc
arpl
shl
sbb
sub
in
aaa
pop
ret
lret
nop
dec
and
fcompl
or
cli
pop
rcrb
push
dec
iret
fists
mov
insl
xchg
sbb
or
iret
das
push
pop
lods
mov
push
xchg
lock
cmp
push
roll
inc
push
clc
mov
outsb
loop
inc
and
jmp
and
ds
jnp
or
push
inc
js
pop
and
cld
loope
inc
add
mov
movsb
out
inc
pushl
decl
pop
aam
lds
add
xor
aas
dec
push
outsb
icebp
push
mov
movsb
mov
cwtl
shll
pushf
or
sub
pop
mov
out
jae
dec
jbe
push
sbb
es
out
popl
roll
add
add
dec
call
and
enter
lahf
adc
inc
test
in
inc
lods
lret
xchg
dec
inc
clc
lret
movl
test
mov
ficomps
decb
mov
push
pop
dec
sub
incl
mov
mov
cs
loop
mov
and
addl
mov
mov
mov
jno
adc
inc
xchg
mov
xchg
cwtl
add
negb
xor
ret
mov
dec
rorl
jmp
xchg
imul
sub
mov
notl
cltd
jecxz
lsl
mov
lahf
xor
xchg
jo
cmp
fstpt
and
je
fists
mov
enter
insl
dec
adcb
repz
or
or
xchg
or
dec
rclb
pop
push
out
mov
mov
xchg
lods
hlt
in
mov
loopne
inc
cltd
jns
and
sub
and
push
inc
mov
out
xchg
xlat
daa
test
push
out
roll
mov
add
pop
mov
fldenv
hlt
xor
xor
or
xchg
inc
call
int3
push
scas
addl
push
loope,pt
mov
in
mov
jo
push
scas
lods
mov
xchg
inc
ss
inc
insb
sub
scas
negb
loope
fisttps
pop
pop
sub
repz
xor
mov
mov
ds
pushf
sub
sub
push
sbb
adc
imul
sahf
gs
fdivrs
cs
hlt
jae
lcall
push
or
test
sub
pop
mov
mov
push
jnp
jge
dec
je
mov
popf
aad
and
pop
loope
add
out
and
push
dec
pop
movl
dec
sub
pop
adc
mov
call
pop
mov
aas
dec
push
pusha
sti
add
out
lret
adc
jmp
xchg
in
and
xchg
loopne
dec
fbstp
or
loopne
mov
xchg
push
pop
sbb
xor
sbb
add
loop
aad
and
stos
in
pop
fs
add
ret
rcr
cmc
mov
leave
pop
ljmp
xor
sbb
pop
sahf
fldcw
mov
test
aas
pushf
xchg
mov
add
stc
xchg
sub
cmp
adcb
inc
adc
lcall
je
jp
into
xorl
jecxz
bound
jp
jno
sbb
aas
pusha
add
in
pushl
cltd
int
fucom
lods
sub
mov
mov
fcmovnu
adc
xor
pop
mov
adc
lret
fstpt
jle
gs
push
mov
mov
xlat
test
stc
out
call
dec
test
fisttps
and
mov
xchg
xor
dec
popf
aas
test
sub
test
icebp
mov
or
ds
mov
les
add
lods
sub
adc
mov
xchg
rcrl
outsl
inc
push
pop
aas
inc
iret
lods
or
lahf
mov
pop
push
jae
add
adc
mov
dec
push
add
clc
movl
repnz
pusha
mov
add
hlt
ret
mov
inc
and
cmp
adc
shlb
xor
mov
es
lods
ds
cli
leave
jb
mov
arpl
inc
rclb
push
mov
lcall
fwait
pop
or
cmp
sub
push
dec
lods
repnz
xchg
dec
inc
hlt
jno
xor
shlb
xchg
fprem1
addr16
and
dec
fsubrs
pop
rcl
int3
mov
push
or
jg
ret
cmp
out
or
sub
call
sar
add
or
addps
incb
int
mov
push
into
jecxz
adc
hlt
add
jne
push
jbe
jbe
pushf
fstp
jno
out
ljmp
mov
in
and
pusha
jmp
xor
out
subb
cmpsl
pop
out
add
mov
push
xchg
mov
test
fldcw
lret
jnp
ret
std
jo
int
fcoml
popa
stos
pop
insl
fcmovnbe
xor
sarb
frstor
lods
shrl
push
xor
pop
add
mov
mov
scas
imul
push
add
fisubrs
xor
cmp
fsubl
cmp
inc
dec
push
xor
pop
xor
xor
fwait
push
jne
xor
cltd
lret
out
jbe,pt
mov
ss
imul
dec
mov
aaa
dec
orl
push
movsl
push
jg
mov
pop
out
lods
das
sbb
gs
add
hlt
xrelease
mov
xor
std
sub
jecxz
test
mov
xchg
and
mov
jecxz
stos
insl
push
aad
mov
movsb
test
gs
push
orb
mov
outsb
out
sti
sbb
cmp
push
mov
ficomps
icebp
xorl
cmp
pop
and
cmp
cmp
fistpl
leave
popf
lcall
adc
fistps
jle
adc
fmuls
ficomps
xchg
dec
jnp
sarl
imul
mov
rcl
cli
and
cmp
enter
enter
movsb
push
lret
inc
inc
sub
hlt
loopne
outsl
mov
dec
adcb
sbb
icebp
sti
arpl
rcrl
pushf
push
setg
sbb
sbb
clc
pop
xchg
outsl
ljmp
lods
dec
adc
xchg
jbe,pn
cmp
push
dec
and
das
movsb
sub
mov
loope
and
out
inc
jecxz
movsl
loop
sub
xor
aas
fisttpl
std
pop
and
adc
jnp
add
pop
nop
pusha
mov
fdivp
adc
push
out
fnstsw
test
pop
mov
jbe
mov
fiadds
cmp
mov
mov
push
repz
popa
std
imul
in
lds
jae
mov
cli
popa
and
addb
push
outsl
std
sbb
out
inc
lcall
roll
imul
aaa
cs
add
or
pop
cmp
stos
rcll
notb
in
pop
test
add
dec
add
adc
aam
pop
xor
in
mov
cmp
push
mov
mov
mov
cmc
bound
subb
xor
jne
jnp
mov
inc
add
les
mov
lahf
push
jge
push
or
lret
xchg
xor
mov
xor
sub
orb
sbb
ja
sbb
sub
mov
xchg
inc
sbb
mov
pop
cmp
inc
push
mov
jo
sub
jbe
bound
xlat
add
out
dec
xor
in
sarl
mov
sub
mov
pushf
mov
cmp
mov
mov
bound
repnz
out
outsb
jmp
ror
js
pop
dec
xchg
pop
inc
outsb
adcb
xor
inc
sarl
mov
cwtl
mov
imul
sti
push
mov
inc
or
insl
aas
clc
push
sbb
cmpl
jmp
lock
mov
and
mov
loopne
subps
xchg
das
fimuls
fstps
mov
xor
sbbb
aas
xor
dec
fisubrs
test
sti
das
lcall
mov
xchg
popa
lock
xor
popf
fisubrs
clc
movsb
cmp
push
inc
arpl
fildl
loopne
pusha
jecxz
ss
pop
mov
xor
fdivrp
adc
sub
adc
xor
push
push
jbe
inc
sbb
fnstsw
ljmp
lcall
jnp
std
lock
outsl
rcll
jo
in
or
push
nop
andl
xchg
scas
push
push
cltd
sar
push
jb
es
mov
dec
jnp
cs
jl
leave
fdivs
push
jbe
sbb
in
rorl
cmp
imul
popa
add
jno
insl
or
mov
jle
test
daa
and
orl
mov
pop
pop
sti
jo
call
aas
sub
test
movsl
orl
bsf
outsl
pop
sub
cld
xchg
mov
pop
add
out
pop
push
xchg
lahf
or
loopne
mov
sbb
aas
xor
or
repz
sbb
ds
jae
ret
in
mov
push
stos
fists
testb
and
and
imul
jmp
xor
sub
addr16
and
rorb
jle
mov
pop
xor
mov
and
insl
sbb
sbb
nop
mov
add
sbb
enter
je
push
mov
cmpb
scas
xor
negl
orl
pop
dec
fistps
pop
inc
pop
rcl
and
pop
sbb
stos
adc
push
jp
or
ljmp
hlt
stos
jnp
out
test
fwait
dec
mov
mov
push
or
adc
mov
pop
mov
add
mov
aam
daa
sub
pusha
xchg
js
or
adc
cmp
out
lcall
fwait
push
sub
lea
xor
mov
mov
inc
inc
mov
in
dec
lock
mov
fbld
sub
dec
das
stc
imul
lods
mov
es
or
stos
stos
xchg
movsb
jo
or
cmp
rcll
arpl
mov
mov
rcl
sahf
push
cmpsb
sub
dec
mov
scas
out
xlat
cmp
push
gs
ss
popf
inc
dec
add
outsl
rcl
mov
aas
test
in
ja
or
xlat
dec
mov
repz
cmc
mov
mov
xor
mov
or
lcall
nop
call
fisubrs
pop
in
aaa
out
into
scas
cwtl
push
cltd
dec
gs
push
leave
rorl
mov
and
inc
imull
adc
je
test
xor
cltd
or
ficomps
cmpb
cmc
jmp
stc
push
movsl
add
mov
lds
xchg
divb
pop
into
popf
cmpsb
jecxz
push
mov
mov
movsl
push
or
and
jge
inc
xchg
cld
jnp
mov
push
xchg
add
pop
sbb
inc
dec
mov
xor
add
rclb
gs
pop
push
sbb
sbbb
cmp
lods
adc
fucomp
dec
inc
dec
pop
aad
dec
jl
jnp
and
nop
hlt
fidivl
pop
sbb
mov
sahf
iret
mov
aas
loopne
lea
push
mov
test
jns
pushf
mov
popa
xchg
sar
ss
sub
adc
sti
sarl
sub
fisubl
pop
mov
rcr
pop
inc
ss
adc
sbb
stos
mov
notl
xor
stos
test
ret
xor
mov
insb
sbb
mov
jns
jle
ret
es
inc
and
bound
push
faddl
push
push
cmp
sarl
loopne
gs
add
adc
push
pushf
xchg
adcl
sub
outsl
push
scas
inc
fistpl
outsb
loopne
push
push
mov
ds
lcall
jmp
ds
pop
jmp
scas
push
and
pop
dec
fwait
insb
mov
lcall
cmp
lahf
mov
jne
and
cwtl
aas
out
mov
adc
adc
mov
cmpsl
pop
nop
negb
movsb
sub
jbe
inc
fstpl
test
shl
cmp
jecxz
adc
cmc
push
cmp
push
js
push
das
rcll
xchg
and
test
jmp
jae
mov
or
sub
inc
mov
push
jb
insl
sbb
and
ret
inc
sub
jae
in
lock
loope
gs
in
lods
xchg
adc
push
xchg
dec
outsl
loopne
fwait
daa
push
mov
push
mov
pmuludq
jno
test
lds
push
and
inc
call
jmp
mov
icebp
jg
mov
imul
mov
leave
popa
data16
push
xchg
data16
pusha
xchg
imul
sbb
mov
lds
dec
cmp
repnz
cli
mov
cs
sahf
xor
pop
mov
daa
jne
dec
insl
arpl
cmpsb
inc
mov
fidivrs
inc
jb
mov
add
adc
ret
push
jne
incb
pslld
into
push
pop
pusha
or
lock
jno
mov
inc
data16
adc
scas
xor
push
push
mov
cmpsb
je
int3
xchg
addb
lds
out
mov
mov
repnz
in
sarl
inc
cs
loope
mov
mov
cmpsb
rorl
or
pop
xchg
arpl
xchg
idivl
pop
outsb
fsub
dec
dec
mov
pop
or
push
adc
add
insb
rorb
adc
mov
data16
shl
mov
or
xlat
ss
ret
loopne
subb
mov
imul
mov
pushf
mov
out
sub
outsl
sub
stos
jb
hlt
ds
fldenv
or
mov
jp
fistpl
mov
pop
sub
push
push
ret
mov
add
test
orb
ds
adc
xor
and
or
and
rorl
jne
xchg
cmp
or
cmp
cmp
fst
or
sub
or
mov
jge
add
scas
and
cli
rcl
add
stos
pop
mov
sbb
cmp
pop
pop
inc
popf
leave
int
ljmp
jle
cli
dec
inc
and
bound
jecxz
imul
lds
dec
imul
adc
shlb
pop
mov
iret
jnp
jne
or
loop
sub
dec
lahf
out
sahf
adc
dec
jo
iret
mov
sub
cmpsl
inc
pop
mov
lret
inc
cli
add
out
sbb
sbb
ret
sbb
jp
jbe
xor
fadds
push
int3
and
iret
dec
int
rcl
push
cmp
in
in
shll
ror
push
xchg
testl
xchg
aam
and
adc
bound
xor
fnstenv
into
cwtl
fisubl
jnp
imul
push
sti
lea
jmp
dec
adcb
jns
test
sti
adc
fcmovnbe
ret
adc
fisubrs
jo
xchg
loope
iret
pop
pop
es
andl
jbe
pop
jbe
bound
fidivs
mov
xchg
ds
flds
jl
dec
pop
aam
sub
in
fs
in
sbb
adc
jl
pop
sub
aam
push
xlat
pop
repz
and
adc
mov
lret
inc
push
cmp
push
jge
das
xor
outsb
inc
mov
cwtl
fnstenv
aad
inc
cmpsb
sub
js
sub
mov
add
or
push
imul
pop
and
fldcw
xchg
pop
pop
add
es
dec
lods
fistl
cmc
subl
loop
push
sbb
jl
flds
bswap
mov
sti
loop
mov
cmp
sbb
in
sub
or
out
add
lcall
and
das
stc
pop
aaa
cmp
add
gs
xchg
mov
jmp
cmp
scas
fstl
repz
pop
inc
push
inc
push
push
mov
je
mov
aas
das
daa
adc
mov
out
cltd
mov
sub
aaa
push
loopne
mov
xlat
fsubrp
clc
inc
mov
sbbl
mov
jmp
aaa
inc
fdiv
call
roll
jp
and
je
scas
ds
and
dec
xor
inc
jb
xor
mov
movsl
xchg
mov
frstor
jmp
rorb
popa
mov
movups
jl
out
mov
mov
sub
aad
mov
pop
push
mov
add
xchg
pop
add
adc
cmp
jmp
pop
ret
cwtl
push
dec
loopne
in
int3
jmp
pop
ljmp
jns
mov
pop
or
jecxz
cmp
fcoms
out
adc
iret
in
aas
sbb
in
roll
sub
jne
xorl
cmpsb
xchg
loop
sti
lcall
loop
mov
ljmp
xor
fldcw
test
std
pop
sub
out
mov
scas
mov
insl
je
loope
sbb
roll
fcomps
pusha
xchg
pushf
lret
push
mov
xor
rcrb
imul
aad
movsb
push
icebp
sbb
xchg
xchg
lds
mov
add
addr16
or
ret
pop
into
pushf
imul
nop
and
jae
mov
sbb
ret
adc
in
push
mov
mov
jns
jnp
push
pop
xor
lahf
out
stos
pop
and
inc
pusha
add
xor
cmp
lods
mov
in
das
shll
fsubr
dec
mov
mov
popf
sbb
mov
test
frstor
inc
daa
or
std
aas
sti
dec
ds
hlt
xchg
mov
jo
sbb
push
cmpl
lods
popa
xlat
rcr
push
xchg
mov
mov
data16
lds
xchg
and
lahf
pop
lahf
into
bound
ljmp
adc
sub
les
lret
nop
fstps
sti
sbbb
cmpsb
fwait
sbb
add
int
or
jge
scas
push
dec
pop
push
cmp
mov
dec
dec
add
jge
imul
mov
adc
mov
shrb
mov
lds
je
insl
rcrl
mov
mov
lods
mov
loop
push
mov
ss
cmp
inc
xor
adc
mov
and
xchg
or
cmpsb
inc
cmpsb
pop
and
jl
pop
inc
adc
push
rcrl
lods
mov
mov
push
pusha
daa
or
jge
or
mov
lret
sub
mov
cmpsb
dec
ds
lret
dec
adc
xchg
jae
movsb
ret
dec
sbbb
stc
nop
inc
scas
cltd
test
cmp
push
hlt
mov
xchg
jne
mov
jecxz
repz
inc
aam
and
jns
cmpsl
hlt
adc
add
ljmp
add
adc
loopne
push
rcr
push
or
jecxz
mov
repz
lcall
movsl
pop
inc
lret
ja
mov
lret
sti
cld
sti
into
ret
pushf
jne
das
mov
ds
add
add
dec
xor
stos
ret
outsb
xchg
adc
sub
sub
pop
fistpll
sbbb
dec
lea
sbbl
jmp
inc
fnstcw
push
xor
pop
xorl
jecxz
popa
fimuls
insb
and
pop
scas
add
jne
js
sub
cs
inc
imul
mov
popa
aam
sub
or
movsl
jo
or
rorl
cmp
mov
xchg
rol
ret
in
dec
mov
mov
movsb
lock
xchg
inc
mov
idiv
cwtl
pop
xchg
and
insb
jne
adc
ret
arpl
shrl
adc
leave
mov
popf
mov
aam
push
cmp
fisubl
fcoms
stos
push
out
sar
add
js
jb
mov
pop
lahf
mov
stos
cmp
subl
or
xor
push
jl
or
outsb
dec
lock
sub
mov
jb
pop
push
out
les
jle
test
pop
sbb
dec
lds
cmp
aam
add
xor
test
imul
mov
aad
dec
mov
inc
jnp
cmp
mov
mov
fistpl
ja
dec
pop
fbld
jmp
pop
insl
ljmp
adc
adc
sub
push
in
mov
cmp
jb
jle
mov
sbb
adc
inc
outsb
xchg
sbb
fmuls
jmp
xchg
push
lods
lret
cmpsb
cmp
pop
loopne
aad
xchg
int
jmp
cmp
and
push
or
jecxz
arpl
add
xor
mov
cmp
int
jae
mov
sbb
inc
dec
enter
dec
cmpsb
icebp
add
inc
jo
sbb
jae
jne
or
mov
in
addr16
out
into
pop
push
lret
jne
mov
jge
and
out
test
add
rcll
dec
pop
inc
icebp
cmp
xchg
push
mov
or
mov
aad
cmp
xchg
mov
xchg
pop
icebp
mov
or
dec
inc
test
lret
gs
aas
hlt
mov
das
lods
pushf
dec
pop
sub
incb
and
mov
cltd
mov
inc
pop
mov
scas
jno
pop
sbb
push
fldenv
add
cmp
adc
scas
outsl
fs
pop
shll
adc
test
outsb
stc
push
aas
movsb
out
insl
pushf
icebp
xchg
fwait
jbe
pop
flds
inc
ja
mov
mov
movsl
stc
int
push
call
push
cmp
jae
sbb
mov
lret
sbb
sub
add
fidivrs
dec
xchg
add
lcall
icebp
add
push
sub
cltd
ret
in
mov
add
sbb
add
xchg
xor
jae
dec
xchg
xchg
and
lods
test
sub
cmp
ret
inc
out
inc
loope
in
push
loope
sbb
push
mov
jae
stos
jae
ss
mov
insb
clc
mov
nop
sbb
fiaddl
daa
in
mov
cld
add
mov
pop
mov
sbb
add
hlt
adc
mov
ja
xor
addr16
mov
and
aam
mov
hlt
sub
sbb
adc
mov
sub
bound
sub
sub
out
mov
mov
incl
dec
aam
adc
clc
pusha
lcall
push
arpl
mov
dec
clc
aaa
jbe
fdivl
adc
loopne
mov
xor
pop
pop
and
loopne
push
xchg
loopne
int3
adc
cmpsb
je
jge
adc
push
adc
xchg
push
mov
jl
pop
jne
adc
push
movsb
out
push
les
lret
lcall
insb
scas
add
add
aaa
movsl
fwait
lahf
sahf
inc
mov
clc
aas
cmp
xchg
push
mov
xor
mov
pop
sub
pusha
inc
mov
cwtl
lret
ja
xchg
xchg
ljmp
mov
aaa
je
cmp
or
cmp
add
loope
aaa
jmp
dec
pop
pop
sbb
cli
pop
sarl
out
jge
andb
test
add
sbb
js
sbb
les
insl
xor
lock
add
pop
pop
add
dec
pop
insb
xchg
fwait
pop
ds
jo
roll
sub
fdivp
bound
out
push
pop
popl
lds
les
xor
or
les
or
push
aas
fcoml
add
fstpt
cmp
jmp
push
les
mov
cmp
sbb
xor
fcoms
mov
les
movsl
and
sub
adc
dec
adc
scas
into
in
pushf
repnz
test
das
enter
ficoms
imul
xchg
in
and
jb
sub
lods
mov
gs
jne
bnd
and
int
test
xor
cltd
sub
xor
movsl
dec
inc
fdecstp
cli
pop
mov
imul
mov
sbb
and
push
loopne
cmp
lret
mov
cmp
hlt
push
sub
loop
data16
stos
mov
arpl
movsb
cmp
addr16
aam
movsl
dec
dec
xor
mov
adc
sub
stos
jmp
mov
xor
cmpsl
xor
inc
jnp
mov
aad
das
jg
or
adc
jp
es
in
push
rcll
push
sbb
movb
je
adc
cmp
fbld
adc
inc
je
cmp
je
int
pop
outsb
mov
jne
or
negb
jp
dec
adc
and
or
fiaddl
gs
push
mov
xchg
int3
fwait
ret
mov
mov
or
fcomi
cmp
mov
lods
lods
stc
mov
mov
test
cmpsb
jp
leave
js
pop
sbb
sbb
nop
sti
stos
cs
mov
or
mov
in
loopne
cmp
adcl
icebp
xorl
cmp
sub
hlt
sbb
jb
inc
jns
enter
lock
cltd
dec
hlt
fidivl
dec
adc
cld
xchg
adc
mul
ss
das
jmp
js
inc
jle
jecxz
mov
jle
into
js
mov
sub
out
fisubl
mov
popa
repnz
pushf
sahf
lret
aaa
scas
push
fldcw
rol
loopne
fwait
add
mov
int3
sub
or
pop
cmpsb
or
lds
nop
sbb
jb
lahf
insl
imul
jo
ljmp
out
js
mov
inc
jno
jns
or
xor
scas
adc
int
cmp
mov
cmp
gs
xor
rorl
into
pop
insb
lcall
or
adc
call
stos
in
adc
out
sub
test
lcall
cmpsb
cmpsb
add
pop
iret
xchg
stc
adc
insl
hlt
faddl
movsl
jne
sub
push
and
push
pop
mov
cwtl
sbb
int3
xchg
rolb
jbe
dec
mov
shll
xchg
mov
repz
xchg
in
push
out
fcomi
mov
xchg
adc
adc
xchg
jle,pt
iret
into
aaa
jle
in
gs
and
pop
sbb
stc
adc
data16
imul
cli
xor
add
lods
or
sbb
jge
shl
add
dec
mov
fdivs
idivl
mov
jb
aam
cs
fbstp
mov
popa
xor
cmpsb
sti
mov
push
mov
push
adc
sub
inc
sub
sbb
dec
sub
nop
sti
clc
mov
arpl
pop
mov
push
addr16
xchg
inc
stos
cmpsl
mov
pop
inc
push
mov
mov
xchg
xchg
call
pop
int
sbb
push
psllq
mov
jns
push
pop
mov
arpl
jne
dec
jne
add
cmp
lock
mov
stos
das
sbb
leave
dec
jmp
movsl
jnp
push
sub
loope
inc
test
mov
lcall
test
pop
xchg
imul
fsub
cs
jnp
cmp
jb
je
push
inc
out
adcl
les
cmp
lea
fwait
mov
add
push
adc
dec
jns
dec
ss
loope
mov
jmp
and
mov
pop
ret
pusha
test
xchg
ja
outsb
pop
ss
in
in
loope
or
out
pop
push
jno
ret
pop
xchg
sub
data16
divl
out
pusha
xor
mov
sub
cmp
cmp
pop
jmp
loope
sub
out
gs
push
jp
xchg
mov
push
loop
inc
xchg
mov
ds
testl
jo
clc
in
sub
shlb
inc
jl
push
cli
cli
in
rcrl
shlb
mov
xor
xchg
mov
cmp
and
or
xchg
mov
mov
es
xlat
adc
and
jnp
lahf
inc
es
sahf
mov
shr
fcoms
sub
push
gs
xchg
xor
cwtl
imul
sub
dec
div
xchg
or
mov
out
ss
sbb
mov
or
xor
aad
dec
push
mov
xchg
mov
stc
adc
in
mov
mov
ljmp
cmpsl
xchg
fimuls
pushf
repz
loope
lea
es
loopne
jg
subl
adc
sub
sub
mov
adc
add
cmp
divb
push
das
insb
rcl
mov
fs
jp
sub
rorl
rcrb
inc
push
test
mov
jl
hlt
jns
jl
add
jb
int3
sbb
xchg
push
pop
rol
call
iret
pop
sbb
clc
and
cmp
or
mov
xchg
out
sahf
and
adc
sub
xchg
mov
adcb
pop
jl
push
sbb
mov
or
pop
jg
jecxz
mov
mov
xor
adc
jbe
lret
adc
pop
call
outsb
cmpsb
lret
push
dec
popa
repnz
jecxz
mov
mov
adc
mov
push
insl
or
jbe
or
mov
lret
mov
jb
push
dec
into
xchg
cmp
inc
or
adc
insb
cmpsb
mov
jmp
stos
lret
adcb
dec
lcall
pop
outsb
sbb
push
mov
mov
and
mov
int3
out
jne
push
inc
mov
dec
lret
shr
add
outsb
insb
push
pop
insl
and
sub
xchg
scas
mov
ficoml
or
inc
inc
push
lcall
mov
mov
andl
xor
inc
inc
and
scas
test
rcrb
in
mov
mov
out
inc
call
or
lock
in
mov
mov
test
call
rorl
ss
dec
cmp
adc
jo
dec
fbld
xor
lret
in
lret
lret
adc
dec
push
pusha
pushf
pop
jp
gs
insb
sub
sarb
xor
inc
out
sbb
adc
lahf
rolb
in
lcall
or
sbb
xor
std
and
cmp
push
mov
sub
mov
fucomi
cmp
mov
stos
out
xchg
xor
shll
daa
sahf
mov
push
ds
mov
push
arpl
inc
popa
js
imul
and
push
push
ficomps
dec
adc
fbstp
movsl
push
push
jmp
push
notl
rolb
sbb
mov
popa
push
fwait
addr16
imul
xchg
ret
jo
lods
in
push
test
dec
loope
call
xchg
lods
sub
xchg
mov
push
dec
jne
and
push
jae
mov
xchg
mov
inc
push
popf
dec
adc
outsb
out
push
fs
pusha
imul
int
cmp
movsb
jecxz,pt
insb
jae
ret
or
and
push
sbb
addr16
jg
insl
sub
mov
add
add
sarl
sbb
cmpsl
add
adcl
sbb
imul
rclb
add
jg
cs
popa
xchg
xlat
dec
mov
jns
out
shrb
das
dec
repnz
dec
repz
add
ja
jecxz
inc
mov
cvtps2pd
outsl
lret
cmpsb
jne
and
sbb
and
iret
dec
mov
decl
sbb
clc
ret
pop
test
mov
mov
jge
data16
divl
inc
std
jmp
jb
out
add
lods
dec
xchg
mov
xor
not
jmp
add
int3
jmp
bound
mov
or
stos
and
xchg
or
push
mov
pop
inc
adc
data16
and
xchg
mov
xor
mov
icebp
pop
aad
xchg
xor
xor
mov
jle
int3
lods
arpl
push
lea
mov
les
es
pop
sbb
cmc
daa
sbb
cmc
mov
inc
mov
pop
pop
mov
aam
adc
adc
mov
out
sbb
fnstsw
jmp
clc
dec
push
cld
stos
rorb
scas
or
push
push
jle
xor
aad
enter
mov
into
int
or
std
lahf
jnp
outsl
or
sbb
aad
lea
sti
adc
adc
rolb
repnz
mov
add
jb
xchg
xor
mov
aaa
and
dec
lea
pop
fnstsw
test
jp
push
sbb
jnp
xor
sarl
imul
dec
sub
nop
and
jo
inc
out
loopne
lret
sti
push
mov
adc
pop
test
jne
sbb
dec
arpl
mov
aam
and
inc
outsl
loop
fwait
jne
add
mov
mov
mov
test
inc
cld
xor
push
imul
js
repnz
dec
push
jg
adc
mov
repz
adc
mov
xor
push
cmp
mov
adc
das
cmp
add
fiadds
lock
xchg
je
ljmp
enter
inc
pop
push
and
decb
and
fnstsw
cmpsb
int
mov
repnz
insl
punpcklbw
mov
and
fisttpll
data16
popa
push
adc
and
insb
push
ret
ss
push
push
push
jmp
jb
ret
pusha
xchg
fnstenv
push
test
mov
cmp
push
dec
pop
sti
or
lock
inc
emms
pop
in
test
out
cmp
shlb
pop
mov
addr16
cltd
push
ss
mov
jnp
pop
lds
fisubrl
outsb
sbb
add
in
xor
rorb
jno
fbld
jg
xor
in
pop
add
in
adc
push
bound
pop
mov
mov
sbb
adc
sub
mov
ds
leave
mov
sbb
mov
shrb
cmp
test
cmp
rolb
cltd
mov
cmp
lock
and
and
lds
out
add
lea
jae
or
daa
pop
mov
sub
les
idivb
fs
pop
pop
mov
push
js
ret
add
scas
out
ss
orl
xchg
cmpb
and
movsb
mov
rol
icebp
cs
inc
lret
frstor
shl
add
data16
cltd
repnz
inc
jle
inc
outsb
inc
push
rclb
cmc
adc
pop
jp
push
jbe
out
pop
adc
lcall
mov
fistps
or
dec
lret
mov
mov
adcb
pop
das
fsts
or
lds
mov
mov
jnp
jecxz
sub
popf
stos
mov
cwtl
or
ret
gs
scas
movsl
repz
xchg
movsb
inc
fstl
pop
mov
repz
out
cmp
test
sti
ret
ds
loopne
outsb
sbb
inc
sub
xchg
xchg
fcoml
mov
sbb
mov
xor
imull
xchg
jle
fcmove
filds
sar
sub
mov
or
push
cwtd
pop
shrb
adc
mov
pop
mov
popf
jge
push
adc
stos
cmpsb
lds
mov
scas
mov
movsl
into
out
stos
cli
pop
into
sahf
arpl
sbb
add
adc
arpl
adc
nop
or
es
adc
in
outsl
adcb
cmp
int
lds
mov
adc
sbb
add
jo
pop
aad
sub
faddp
shrb
or
inc
dec
mov
xlat
pop
xorb
scas
outsb
sub
dec
ss
cwtl
push
mov
add
in
push
add
ss
fstpt
mov
pop
es
xchg
out
sbb
push
jo
mov
into
popf
icebp
popf
icebp
xchg
mov
adc
jno
push
out
sub
fnstsw
jbe
stos
jo
push
jge
fists
pop
das
sbb
jmp
stc
ffree
fucomp
xchg
mov
inc
pop
testb
rol
or
push
jg
mov
jecxz
cmpsb
dec
xor
push
insb
pop
stos
pop
and
push
mov
loopne
push
push
stos
addl
jle
testl
popa
test
ficoms
fdiv
jbe
lret
cltd
hlt
fdivl
in
pop
flds
add
xor
testb
jmp
and
js
jne
push
jmp
adc
add
xor
lcall
adc
or
sbb
sbb
xor
xchg
mov
scas
xor
ja
xchg
lret
inc
pusha
jae
push
sub
adc
push
insl
mov
xor
pop
movsb
fnstcw
xchg
or
pop
nop
push
xchg
imul
xchg
mov
movsl
mov
in
aad
les
repz
shr
push
test
dec
dec
inc
xlat
dec
js
loopne
sub
stc
push
or
and
jg
push
jnp
xor
dec
and
push
daa
xor
and
iret
movsb
push
ret
jl
fcmovbe
push
xor
and
repnz
push
dec
jmp
imul
jge
test
add
cmpsb
add
sahf
sub
lahf
pop
ficomps
mov
les
outsb
clc
ljmp
mov
pop
mov
cltd
test
bound
fistl
xor
jbe
xlat
add
xchg
in
dec
mov
mov
xor
scas
dec
jmp
xchg
xchg
cmp
jp
push
stos
int3
xchg
repnz
js
inc
fbld
inc
cld
sbb
shll
sub
int3
push
sub
dec
rolb
repz
insl
insl
decb
out
lret
push
inc
sub
ror
lods
insl
ds
sbb
sbb
je
jmp
rolb
mov
fistps
xor
faddl
pop
push
pop
movsb
push
scas
imul
pop
lret
sti
xabort
add
shll
shrb
sub
adc
fildll
push
loope
xchg
jle
loope
aaa
cmp
mov
imul
mov
les
mov
jns
xorl
push
pop
lret
push
cmp
sbb
ret
clc
mov
xchg
lahf
sub
mulb
fistl
dec
jb
loopne
dec
adc
add
cmc
adc
jo
sahf
xchg
mov
mov
cmp
addr16
lods
mov
dec
into
inc
xlat
test
icebp
mov
dec
fcoms
aad
dec
adc
or
comiss
lahf
rcrb
out
add
and
outsl
movsb
and
mul
push
mov
out
adc
mov
stc
mov
xchg
cld
mov
jns
mov
mov
inc
xorps
push
mov
sub
insl
imul
sub
and
cs
mov
dec
sti
dec
aas
mov
in
dec
movsl
or
enter
adc
aam
nop
shlb
xor
out
jne
setg
dec
mov
int
pop
call
lcall
outsl
pop
jae
test
cltd
xor
push
inc
ret
subl
or
out
jge
push
inc
shl
test
sbb
mov
or
xchg
addb
fimuls
xchg
sub
fidivrs
int3
or
or
loopne
xor
cltd
adc
mov
sbb
cmp
sbb
inc
sub
int3
adc
aas
cmpl
scas
dec
clc
into
jb
push
call
fisttps
mov
lahf
ret
insb
mov
pop
dec
sub
cmp
sbb
fwait
cmp
xchg
and
in
inc
sbb
pusha
sbb
addps
and
bound
enter
mov
sbb
mov
adc
sub
rcrb
outsl
pop
movsb
and
sbb
pop
pop
fucom
das
pop
in
add
mov
aaa
cmp
xor
bound
sub
adc
popf
pop
cmp
cmp
inc
imul
loopne
js
jmp
pop
sbb
frstor
push
push
push
push
xor
add
mov
imul
out
int3
flds
jecxz
push
jle
pop
movsl
mov
pushf
jae
add
dec
cmp
aaa
pop
clc
lods
mov
mov
mov
pop
insb
or
jl
jecxz
js
sub
in
fnstcw
aam
jecxz
lret
repnz
fbstp
push
fisubrl
das
jp
lea
into
and
mov
sbb
test
adc
cmc
sub
loopne
jge
aas
bound
xchg
movsl
imul
xchg
das
mov
or
fldcw
xor
mov
nop
pushf
push
call
call
idiv
outsl
fnstenv
inc
jecxz
in
cltd
mov
dec
lret
jmp
sub
rep
xchg
ficoml
jp
sbb
dec
mov
loop
sbbb
lea
and
add
ss
mov
loope
aaa
sub
mov
aam
cmp
pushf
cld
in
pop
clc
mov
sbb
push
inc
and
dec
sbb
xor
lret
fnstenv
lahf
jecxz
mov
rcr
stc
or
add
stos
jbe
mov
push
sbbb
push
xor
scas
mov
fidivrs
xor
sub
mov
lret
fwait
xor
mov
pop
cld
cmp
sbb
jmpw
lds
rcrl
sbb
mov
pop
cmpsb
je
and
adc
imul
push
loop
icebp
push
cmpsl
jmp
mov
out
jge
orb
or
scas
mov
mov
ljmp
clc
int
lods
mov
pop
cmp
push
push
std
fdivs
lcall
mov
mov
or
sub
or
inc
xor
add
or
dec
xor
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
