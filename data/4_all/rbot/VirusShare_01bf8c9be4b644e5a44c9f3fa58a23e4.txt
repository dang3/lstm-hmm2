call
in
sub
push
push
lea
push
push
xor
call
cmp
pop
and
pop
pop
mov
inc
push
mov
add
push
lea
fidivs
cld
jl
and
std
fistl
cmp
les
jle
add
pop
pushl
popf
dec
xchg
push
jge
push
mov
jnp
sbb
jne
push
pop
or
or
push
sub
testl
pop
pop
leave
ret
xchg
dec
push
neg
fbstp
dec
test
pop
jle
mov
pushl
adc
mov
jle
fsubrp
sarb
adc
movsb
es
andl
ret
in
add
test
add
test
or
fsubl
imul
lea
cwtl
fs
add
mov
sub
add
test
inc
mov
fsubr
frstpm(287
mov
ds
push
mov
sbb
jns
pop
or
inc
das
add
mov
insl
sbbb
sbb
popf
cwtl
verr
clc
andb
ret
nop
jbe
sbb
adc
mov
add
jmp
aad
fcomps
cmp
cmp
ds
pop
push
push
dec
or
and
in
push
xor
push
or
mov
pop
cmp
cld
mov
push
push
das
clc
fistpl
pop
imul
mov
ret
and
cmp
inc
lods
jmp
insl
add
and
cmp
movq
mov
add
push
ret
add
aam
push
push
push
test
and
pop
int
je
mov
mov
sbb
fsubs
inc
cmp
push
ja
mov
mov
dec
and
popa
pop
repz
or
push
sbb
push
ret
or
mov
movsl
pop
push
repz
ss
loopne
mov
pop
xchg
cmp
inc
fcomp
popf
adc
sbb
dec
js
clc
mov
loopne
or
iret
cs
sbb
or
push
out
xor
pop
pushf
outsb
push
inc
das
gs
adc
push
dec
mov
push
pop
jo
in
adc
into
ljmp
jne
mov
jns
clc
cld
lock
bound
idiv
jbe
xor
jmp
ja
push
pop
cld
clc
hlt
out
jnp
cmp
sbb
xchg
sbb
jne
and
fstpl
dec
shl
sbb
clc
cld
sti
in
out
and
mov
sbb
and
loope
insb
dec
hlt
adc
or
sbb
add
dec
ret
je
pop
test
decl
incb
dec
mov
push
mov
mov
outsb
mov
sbbl
outsl
adc
shll
movl
push
inc
out
push
push
fidivl
in
and
xlat
pop
sbbl
addb
pop
clc
pop
testb
push
jge
mov
out
mov
mov
jge
xlat
cmp
cmp
setg
pop
and
mov
jg
roll
lea
mov
movl
fsubs
movlhps
testb
pop
imul
mov
jge
das
je
pop
jl
add
fdiv
negb
add
lcall
mov
xorl
and
arpl
xchg
pop
fmul
bound
add
xor
stc
cli
sti
cmc
subl
loopne
jnp
xor
mov
lcall
ficoms
cmpb
call
flds
rclb
das
fcmovu
add
gs
add
mov
aad
fcoml
xchg
dec
loopne
add
jbe
lock
mov
repz
pop
repnz
cmp
jl
cwtl
adc
adc
and
les
outsl
jae
mov
cwtl
lea
mov
call
sti
mov
push
mov
push
cmpl
je
out
lock
push
and
adc
pop
outsl
mov
int3
add
lock
mov
cwtl
mov
sbb
cmp
jge
pop
test
aam
dec
sub
mov
cmp
sbb
imul
addr16
shll
mov
push
add
xorb
jne
pushf
pop
jl
push
xor
in
push
pop
les
test
xchg
fistpll
int
ret
aam
xor
loopne
mov
fwait
jbe
andb
mov
and
testl
fsubrs
in
jbe
or
out
mov
imul
dec
xor
fsub
bound
leave
dec
cld
mov
jne
push
call
inc
cmp
jbe
je
out
mov
pusha
ljmp
cld
mov
imul
aam
int3
test
add
rcrb
pushf
mov
cltd
movsl
call
adc
les
push
scas
lods
ret
adc
mov
xor
pop
sbb
cmpsb
scas
push
lods
or
andl
push
mov
mov
enter
je
xor
arpl
mov
testl
fiadds
push
imul
je
out
pop
mov
pop
jo
in
push
stos
and
cltd
nop
daa
or
cmp
sbb
mov
pop
mov
aaa
shll
or
push
xor
xor
lea
push
push
mov
mov
jge
ss
or
push
inc
jge
out
jle
and
ss
notl
pop
sbb
adc
add
insl
mov
push
andl
pop
sub
inc
jge
sub
cmp
jge
movzwl
push
push
cli
jl
iret
repz
lock
out
adc
push
push
xor
lods
xlat
fsubp
cs
sbb
jno
add
xchg
and
adc
mov
add
leave
mov
add
repnz
push
mov
mov
push
pushl
push
or
push
push
push
out
scas
ret
ret
dec
andb
lock
ret
add
jne
sbb
cmpsl
frstor
pop
push
inc
ret
pop
adc
add
inc
mov
pop
xor
pop
pop
loope
ljmp
insb
inc
cmp
mov
mov
push
mov
or
cmc
outsl
daa
movsb
push
jl
and
sbb
pmaxsw
gs
push
clc
pop
loope
pop
je
jge
or
in
sbb
imul
sbb
cld
lds
ja
or
sbb
or
push
jecxz
repz
rcll
fs
divb
push
xor
imul
cmp
and
jae
mov
insl
lahf
jo
mulb
pusha
jno
cld
xor
mov
loop
add
in
add
mov
loop
pop
pop
mov
int
cmp
je
test
test
adc
push
or
in
jmp
pop
aam
sub
sbb
cmp
jb
jnp
push
add
pop
stc
lds
push
dec
mov
pop
insb
loopne
je
xchg
test
sub
or
inc
jle
mov
mov
decb
test
out
call
in
pushf
pop
sbb
popa
pop
dec
test
enter
test
shl
out
pop
push
ja
adc
pop
scas
inc
adc
or
mov
sbb
add
sbb
dec
mov
sbb
fisubrs
xor
bound
adc
mov
sti
je
mov
ja
push
mov
xor
pusha
push
xlat
mov
mov
cmp
sbb
lahf
mov
xchg
push
sub
jbe
add
enter
pusha
lret
mov
sub
cmp
pop
mov
or
pushf
push
wbinvd
mov
icebp
test
push
sbb
fucomi
es
mov
test
sbb
mov
dec
pop
pop
pop
test
mov
in
mov
cs
int3
rcll
cmp
jmp
push
sub
or
dec
xor
rclb
or
cmp
mov
ret
pop
enter
sbb
mov
movsb
loop
ss
cltd
mov
loop
push
sbb
mov
shlb
sub
cwtl
sub
adc
outsb
mov
out
xlat
pushf
mov
jne
add
cmpl
lods
in
jbe
inc
push
push
iret
outsb
cmovne
subl
mov
cmp
and
int3
add
push
inc
hlt
add
das
in
or
inc
sbb
je
clc
xor
cmp
jge
mov
imul
pop
stc
mov
push
shr
jmp
loopne
add
lea
add
mov
fidivrl
orb
orl
inc
dec
divps
mov
push
fcomps
test
mov
negl
add
sub
int3
sarl
pop
les
xor
lock
adc
dec
sub
xchg
jns
or
push
push
push
xor
adcb
jl
push
loop
sbbb
mov
inc
orb
rorb
imul
and
sub
nop
in
jmp
dec
in
xor
fadd
in
jmp
adc
jmp
adc
jno
cmpsl
loopne
push
mov
jno,pt
stos
shrl
arpl
push
adc
out
addl
shrb
jne
mov
mov
adc
add
mov
add
les
adc
push
fisubrs
mov
int3
push
push
push
je
inc
jmp
outsl
cmp
sti
push
pop
inc
shlb
jnp
lock
add
daa
bndldx
in
js
mov
gs
xchg
sbb
cltd
lods
cltd
loope
xchg
and
or
and
lret
jg
mov
push
scas
adc
pop
mov
dec
add
lret
jnp
lds
lds
adc
pop
adc
adc
pop
fisubrs
inc
mov
add
cmpsb
pusha
sub
push
push
loope
imul
sbb
enter
sahf
cmp
or
push
or
push
jb
pop
rorl
sbb
std
addr16
mov
div
adc
adc
mov
testl
sub
icebp
cld
or
fsts
and
icebp
cld
adc
int
push
out
pop
faddp
sub
shrb
fstps
add
pop
and
cwtl
or
dec
insl
test
jnp
mov
add
xor
push
jo
and
push
mov
mov
or
sub
loope
inc
mov
aaa
loopne
hlt
cwtl
je
mov
shr
add
or
cld
push
mov
ret
arpl
pushl
fcomp
cmp
sub
sub
aas
xchg
mov
sub
les
sub
int3
xchg
pop
pop
sbb
adc
and
outsb
test
cmp
neg
out
jmp
adc
cmp
mov
data16
push
pop
jo
push
daa
cwtl
adc
fldpi
js
cmp
fs
test
je
or
and
jg
mov
pusha
pop
mov
sub
inc
aaa
outsb
or
imull
add
sbb
cmp
les
sub
xchg
lea
inc
cmp
jmp
sbb
xchg
adc
mov
daa
mov
call
out
pushl
push
mov
mov
and
and
xor
shr
mov
addl
jne
pop
rcrl
rcrb
loope
cltd
out
cmp
push
push
xlat
xchg
sub
loope
xchg
in
aad
clc
pop
mov
addr16
xchg
pop
jne
and
push
imul
imul
push
out
inc
push
jg
ret
jae
push
scas
push
testb
je
dec
dec
add
push
push
dec
xor
mov
jecxz
cmc
cmp
jbe
lock
scas
mov
mov
push
lea
lds
sbb
data16
aam
shr
inc
mov
jecxz
sbb
aad
cld
pop
jne
fs
aas
lock
push
sub
call
mov
imul
inc
mov
in
je
push
mov
add
cmp
insb
push
in
xchg
aaa
imul
in
cmpsl
push
xchg
xor
dec
inc
xchg
xlat
jle
out
pop
adc
push
movmskps
movsb
mov
adc
and
mov
cmc
pusha
imulb
xor
push
push
xchg
and
jecxz
cmp
icebp
add
xor
in
ljmp
shlb
xor
mov
fld
loopne
push
and
icebp
mov
sbb
ljmp
pop
fsubl
fcmovnu
adc
mov
daa
add
call
stos
jno
xchg
and
sbbb
mov
stc
shlb
push
jns
inc
sub
xchg
insl
nop
loop
xor
add
ja
insb
jo
push
pop
push
lds
std
push
jg
loopne
dec
mov
inc
or
push
lea
adcl
push
sub
stos
enter
mov
or
push
and
add
dec
ret
or
cli
ljmp
pop
lret
xchg
mov
jo
sbb
and
xchg
jle
jnp
inc
inc
mov
jae
xchg
test
adc
inc
fildl
in
pop
call
dec
inc
jle
add
push
add
insb
insl
or
test
sub
xchg
inc
inc
cmp
fiaddl
fs
jmp
pop
cmp
cwtl
stos
push
fprem
aad
je
sarb
cld
insb
aam
push
xor
cmp
sbb
jnp
dec
cli
test
push
shrl
cmc
and
push
stc
push
push
test
sbb
add
jne
mulb
cmp
sub
jmp
mov
add
push
pop
jmp
push
pop
cmp
dec
push
outsb
mov
cmpsl
adc
pop
lcall
push
xchg
lock
xor
mov
jo
and
in
aad
adc
inc
or
xchg
xor
mov
push
or
xchg
mov
and
sub
or
popf
out
adc
pop
clc
add
mov
and
push
push
sbb
cmp
push
jo
or
push
inc
sub
jge
xor
test
subl
sub
pop
xor
lock
andb
movsb
push
rcrl
mov
imul
mov
out
xlat
aad
fs
inc
cs
addr16
mov
call
push
or
adc
push
pusha
xor
cmp
and
and
pop
mov
cmp
jno
push
repnz
push
mov
or
dec
test
pop
and
push
addr16
fldt
push
xchg
mov
inc
ja
push
outsl
pusha
jno
push
pop
cwtl
jle
mov
loopne
mov
jne
jecxz
lock
inc
mov
out
rclb
push
lret
shr
push
test
cmp
icebp
push
mov
jnp
or
adc
jne
adc
shr
or
rorb
movsb
flds
and
test
es
jne
push
imul
mov
cmovle
in
std
pop
inc
pop
dec
cmp
pop
jbe
cmp
lods
nop
cmc
in
cmc
push
push
insl
shlb
cmp
shll
adcb
mov
push
sbb
mov
loopne
inc
sub
shl
pop
test
rorl
pop
lods
add
inc
cmpsl
call
and
and
mov
enter
loop
sbb
add
push
mov
or
sub
outsl
jg
push
xchg
fsub
cmpsl
dec
lods
push
nop
fldcw
mov
cld
scas
subb
and
cwtl
enter
xchg
cmp
xchg
jb
rorb
inc
pop
movsl
clc
cmp
jge
sbb
cmc
fistpll
in
fcomps
insb
imull
dec
loopne
dec
add
addr16
mov
sub
test
cltd
add
mov
popa
mov
push
aaa
adc
jg
out
adc
add
sub
jne
mov
mov
cltd
inc
or
push
xchg
shrb
mov
jne
sub
add
xor
es
out
cmp
cltd
pop
ja
and
test
mov
mov
push
movsl
orb
add
xchg
sar
cmc
mov
inc
dec
testb
popa
rclb
cmp
int3
pop
inc
inc
cmp
std
pop
pop
add
sub
push
jno
insl
or
daa
push
fimuls
outsb
jnp
add
pop
mov
cld
adc
inc
push
mov
rclb
pop
adc
inc
sub
mov
das
loopne
dec
xlat
mov
mov
or
inc
jge
rorb
jnp
push
popa
test
xchg
push
inc
bound
lcall
ss
push
loope
clc
or
clc
sahf
push
insb
pop
call
hlt
push
test
jmp
ljmp
mov
and
call
lds
aaa
in
inc
xchg
jbe
lahf
pop
in
sbb
sub
jno
push
push
testl
inc
push
push
jle
in
sbb
pop
in
add
push
nop
and
pop
pop
ret
lods
pop
je
adc
shll
jne
filds
pop
inc
testb
mov
mov
mov
jns
mov
adc
stos
mov
jl
inc
mov
stos
lea
mov
lcall
pusha
xor
notl
dec
xor
sbb
mov
mov
sbb
inc
mov
mov
add
jle
add
or
loopne
test
mov
or
dec
push
push
das
repz
add
mov
and
ret
mov
in
mov
roll
cmp
and
int
adcb
push
push
ret
mov
jo
ret
imul
data16
jne
pop
inc
insl
pop
les
add
jae
mov
cmpsl
cld
or
out
shll
aad
iret
inc
adc
mov
test
or
cmpsb
mov
dec
in
inc
xor
insb
push
loopne
loopne
insb
fwait
or
nop
mov
roll
mov
fs
in
and
jns
jnp
xorl
xor
xor
mov
cltd
sub
adc
stc
cmp
jne
cmpl
xchg
out
enter
and
xor
adc
punpckhbw
adc
lods
rclb
xor
sbb
adc
insb
push
pop
in
imul
jo
push
push
clc
dec
pop
cmp
decl
cmp
jnp
xor
pop
js
mov
mov
add
jae
mov
xor
mov
push
or
jl
and
xchg
jl
orb
mov
mov
xchg
and
icebp
aam
fldl2t
lea
adc
shl
push
aas
pop
mov
push
push
or
adcb
les
jmp
pop
or
pusha
iret
inc
je
mov
adc
adc
jl
mov
mov
xchg
int
nop
inc
mov
shlb
xor
es
out
adc
mov
cmp
sbb
jbe
call
sbb
fwait
test
sarl
les
mov
sbb
je
mov
adc
push
pop
cmc
push
push
xlat
adc
or
outsb
iret
jb
stc
push
push
cli
cmpb
test
leave
int3
ret
mov
and
or
lods
punpckhdq
insl
mov
adc
insb
push
add
cmpl
pop
xchg
sub
adc
mov
scas
in
cmp
test
fistl
inc
xor
adc
xor
into
fmull
lcall
jne
aaa
dec
insb
loopne
xchg
js
or
in
repz
jne
pop
pushf
mov
pop
jmp
mov
ret
add
movsb
test
jmp
push
jns
mov
lahf
sahf
fcoms
enter
mov
rclb
mov
jmp
mov
sub
adc
push
dec
in
and
cli
daa
fildl
imulb
push
pop
mov
mov
push
add
cltd
push
jl
jmp
inc
mov
imul
test
int3
ss
test
sub
push
ja
fcoml
xabort
adc
jmp
inc
cmpsb
jno
pusha
leave
push
xor
shr
loope
dec
pop
out
nop
sub
aam
lods
out
out
sbb
int3
mov
xor
mov
sti
push
push
push
adc
adc
das
dec
push
xchg
icebp
cmp
sub
cmpl
loop
or
and
pop
insb
sub
outsb
in
add
idivb
mov
in
cld
or
enter
out
jo
movsb
enter
mov
shr
mov
jmp
test
dec
cmp
or
int
mov
xchg
sbb
into
xor
rcrb
sub
or
sub
dec
in
inc
jb
xor
in
pop
and
leave
in
in
cmp
cs
add
add
movsl
cld
fldl
aas
movl
rclb
dec
faddl
in
rolb
dec
test
mov
into
jne
and
cmp
sbbb
add
push
mov
fidivs
jo
mov
jno
and
push
mov
mov
dec
ljmp
jl
push
sbb
sbb
bound
incl
sti
call
cmp
xchg
or
mov
inc
dec
rolb
sbb
icebp
mov
push
cmp
push
push
or
push
pop
or
jne
movb
fbstp
int3
pop
adc
pop
jge
pop
shrb
aam
pop
aad
push
dec
fdivl
loop
sbb
mov
cltd
mov
push
xor
push
ds
stos
fmull
sub
adc
jne
xchg
hlt
pop
xor
std
cmpsl
stc
add
push
mov
cmp
sbb
out
cltd
aas
mov
rorl
neg
sbb
and
add
mov
subb
push
clc
push
push
cli
cmpsl
lock
incb
jbe
lcall
sbb
or
or
add
std
subl
pop
adc
outsl
leave
enter
add
repz
jmp
push
add
and
cmp
shl
adc
ret
cmp
or
lock
leave
lods
pop
movd
fcomps
fdivrl
mov
push
fbstp
and
xor
push
adc
cmp
aas
into
outsb
jmp
xor
pushf
shrb
pusha
je
int3
push
addr16
jo
mov
rcrl
sahf
lock
nop
scas
xchg
rcrb
mov
mov
add
fstpt
inc
out
lret
xor
enter
mov
xor
in
jb
xlat
sbb
outsb
ret
cwtl
int
adc
cld
push
out
and
test
push
inc
js
jmp
add
mov
jp
inc
in
add
pop
add
push
hlt
dec
push
mov
sub
test
adc
pop
xchg
mov
inc
add
ret
out
add
mov
adc
mov
cli
cmp
mov
adc
lahf
out
call
sbb
orl
cmp
stc
subb
xor
lock
mov
pop
mov
je
sbb
cmp
xor
push
mov
sti
mov
jp
lret
mov
pop
lret
shl
pop
pop
jo
lods
ja
and
adc
cmp
call
outsb
ret
adc
flds
lret
push
daa
fildll
loopne
jae
xchg
sub
cmp
jbe
mov
xchg
or
jge
lods
les
jge
ja
mov
shr
push
xchg
dec
int3
pusha
mov
mov
add
cmpl
shrl
xor
add
xor
xchg
cli
nop
mov
rorb
stos
je
sahf
je
std
add
in
push
push
xor
imul
sub
sarb
jno
filds
mov
pop
inc
adc
xchg
in
mov
pop
je
test
mov
or
adc
push
lods
fcoms
or
das
inc
mov
xchg
das
and
fstpl
push
push
push
and
jbe
notl
sbb
fildll
jge
fmull
mov
and
push
push
push
jmp
push
enter
sti
shlb
add
fstpt
pushf
test
dec
aas
xchg
inc
fs
test
cs
js
jmp
jmp
jmp
push
jbe
pop
push
sub
mov
pop
push
push
sbb
xor
sub
push
sbb
mov
xchg
sub
pop
jne
rorl
fwait
jns
jl,pt
push
sub
lea
adc
popf
ss
add
call
insl
jnp
pop
jg
fidivl
das
mov
cld
mov
xor
adc
jle
mov
aas
mov
cmp
jl
ret
rolb
out
lock
dec
xor
ficoms
rorl
add
ret
lods
or
mov
or
fcomi
or
aam
lods
sbb
mov
inc
and
ja
sbb
or
mov
je
pop
push
cld
pop
cltd
mov
stc
test
outsl
movb
inc
jmp
mov
mov
mov
rcrl
incl
lea
cmp
jae
andb
daa
sbb
jg
add
jl
call
sub
das
lret
jnp
and
fdivl
xchg
xchg
xchg
fnstcw
rol
pushf
xchg
mov
enter
jo
popf
in
mov
clc
inc
mov
add
pop
clc
call
sub
popa
lahf
push
jae
mov
rep
notb
mov
jmp
jl
aad
cmp
mull
xor
call
mov
cmpsb
pop
sbb
lock
xchg
andl
cmp
dec
push
pop
mov
test
mov
in
push
add
mov
pushf
mov
mov
rorb
in
ficoml
call
cmpl
mov
pop
jnp
imul
sbb
ret
sbb
push
jecxz
pop
xor
add
mov
jl
cmp
pop
fstp
fisttpll
xor
pop
sbb
mov
cmpb
cli
xor
stos
xchg
ret
shlb
push
push
ret
pop
jg
sub
add
xor
sbb
pop
inc
jo
packssdw
mov
xchg
imul
add
hlt
fdivr
imul
adc
loope
xchg
sbb
jbe
jb
or
jno
adc
sub
lret
adc
push
insl
cmp
jle
jo
push
sar
mov
and
mov
je
push
or
push
xchg
ljmp
and
cmp
jne
insl
sub
movsl
push
gs
test
mov
xor
lret
mov
push
int
rorb
xchg
sbb
xchg
or
push
test
push
xor
adc
and
imul
xlat
xor
or
es
xor
stos
push
mov
test
lods
push
insl
sub
sbb
fcompl
inc
push
fsubs
sub
inc
dec
shrl
mov
mov
movl
and
mov
and
adcb
clc
pushf
add
scas
shlb
cmpsl
andl
pop
dec
jecxz
popa
movzbl
jle
cmpb
xor
enter
pushf
das
test
pop
pop
sbb
adc
mov
push
dec
add
in
jno
mov
pop
dec
ds
mov
push
adcl
loop
or
das
dec
add
dec
insl
xor
push
cltd
mov
pop
mov
or
nop
cwtl
fnstsw
cmp
je
cmpb
adc
jne
jmp
je
or
call
ret
test
daa
push
adc
fiadds
stc
aaa
sbb
cltd
fxch
mov
fs
sbb
and
pop
adc
clc
sub
or
and
neg
aas
jns
or
push
xor
xor
cmpsl
pusha
nop
pop
cmpsl
sub
mov
pushf
xor
add
leave
pushf
mov
mov
fwait
mov
es
inc
or
push
jle
mov
add
idivl
push
inc
mov
test
mov
ror
popf
and
iret
xchg
push
je
clc
push
in
jle
ljmp
adc
hlt
arpl
and
in
fs
call
enter
or
inc
movsb
lret
sarl
jo
adc
dec
icebp
aam
in
or
sub
maskmovq
divl
push
add
pop
mov
jo
roll
mov
sarl
cmpl
mov
push
jmp
nop
xchg
incb
pop
push
jmp
push
xchg
insb
shl
mov
aaa
lock
out
mov
pop
jmp
push
jne
or
in
subb
cmp
stos
mov
mov
add
rolb
aas
xor
push
dec
test
xor
pop
insb
push
pop
cmp
inc
call
inc
push
mov
xor
sbb
pop
cmp
inc
jbe
imul
in
xchg
in
dec
and
mov
push
push
sahf
jle
inc
jmp
add
sbb
inc
cmp
mov
cld
pop
mov
jnp
add
cmp
cvttps2pi
pop
add
fists
inc
test
js
mov
push
subb
lea
popa
dec
pushf
push
jne
sti
out
rcrb
xchg
fdivrs
sbb
or
xor
addr16
insb
les
push
ret
add
inc
add
mov
adc
orb
inc
push
les
and
sbb
xchg
cmp
jb
cmp
js
arpl
inc
mov
rcl
pop
lock
adc
fs
inc
push
push
pushf
cltd
mov
push
inc
into
adc
xchg
das
xchg
cwtl
mov
insl
jno
lea
xor
xchg
push
or
inc
lock
jg
repz
mov
pushf
lahf
test
shrb
xchg
pop
pop
loopne
sbb
nop
sbbb
dec
sarb
andb
cmp
jne
aad
arpl
rcl
int3
in
sub
and
hlt
push
xchg
pushf
dec
and
lret
mov
xor
bound
leave
pop
and
pop
je
or
push
add
inc
cmp
jb
jmp
pop
imul
mov
push
lahf
mov
push
xor
mov
mov
adc
shr
and
mov
mov
or
inc
mov
in
and
inc
sbb
pop
test
xor
add
mov
cmp
rorb
pop
mov
pop
add
pushf
jge
dec
cmp
jne
cmp
and
mov
jbe
mov
cwtl
pop
das
sarb
mov
andl
pop
xorl
mov
ret
dec
in
dec
cld
and
cmp
jne
fldln2
add
push
jmp
xlat
mov
gs
data16
xchg
sub
push
sbb
cmp
int
fcmove
fstps
mov
pop
lahf
mov
jmp
jnp
add
cmp
mov
andb
icebp
or
out
add
scas
dec
stos
or
sbb
sub
pop
icebp
add
or
inc
cmpb
or
fmuls
fldl
push
push
mov
pop
test
xor
xchg
pop
aaa
mov
push
mov
or
cmp
leave
push
pop
mov
shl
xchg
push
mov
dec
pusha
sub
mov
cmp
push
or
dec
rcll
filds
andl
mov
or
pop
sub
xor
pop
mov
call
push
dec
mov
call
mov
lock
decl
jbe
cmpl
dec
mov
test
mov
clc
testl
jo
hlt
in
das
scas
cmpb
jbe
inc
inc
ljmp
add
jb
arpl
mov
sbb
sbb
inc
push
push
pop
stos
adcb
andl
stos
stos
cwtl
andb
ret
jl
scas
clc
xor
test
sub
pop
fcom
sahf
repz
adc
add
dec
clc
cld
and
cmp
jl
xor
fs
vmwrite
mov
jmp
cwtl
adc
or
aas
or
dec
push
je
dec
iret
dec
lods
subl
js
inc
dec
add
cmc
subb
icebp
add
inc
xchg
iret
mov
cmp
push
out
xchg
js
push
dec
sbb
movsb
pop
mov
lahf
cmp
sti
xor
and
es
adc
add
mov
dec
cmp
lock
subb
popa
cmp
xor
loope
mov
jl
xorl
jae
je
imul
inc
or
push
pop
jp
push
ljmp
popa
add
data16
inc
jmp
dec
sbb
iret
les
ds
in
imul
scas
xchg
fsubrp
adc
jmp
adc
push
mov
pop
or
or
dec
push
test
hlt
subl
in
nop
sahf
rcll
lods
sbb
push
lahf
rorl
jmp
push
in
sub
dec
fldenv
lods
or
jg
nop
sbb
subl
pop
xor
add
fnstsw
or
dec
jp
dec
inc
pop
and
shl
scas
adc
cld
test
jns
mov
xor
push
push
dec
mov
and
push
dec
les
adc
add
arpl
lahf
arpl
cld
xchg
test
negl
cld
cmp
cmp
jb
pop
jne
cmp
jae
mov
orb
sub
cmp
xchg
push
adc
dec
and
jns
xlat
mov
popa
inc
dec
push
push
add
add
and
jg
roll
cmpsl
rclb
rcrl
pop
inc
cmp
mov
mov
or
inc
lea
shll
and
pop
loope
sub
out
out
movsl
adc
cs
push
cmpl
test
test
sbb
or
pushl
clc
add
fs
inc
sbbl
rolb
sbb
movsl
jnp
ficoml
pop
push
jecxz
sbb
adc
aas
repnz
push
inc
cmp
pop
jb
inc
frstor
mov
jo
fisubrs
cmp
fs
jmp
and
add
pop
lahf
mov
cmpsb
dec
sbb
lock
xor
push
loopne
mov
cmp
mov
xor
sbb
pop
out
popf
inc
sbb
xchg
mov
xchg
inc
shll
inc
jae
jp
clc
and
push
std
jns
sub
clc
add
and
neg
in
cmpb
push
popf
mov
jne
push
cmp
icebp
in
mov
cli
mov
insb
xor
aad
inc
outsl
rcrb
sub
inc
lret
pop
imul
push
push
imul
sti
dec
pop
sbb
cld
loope
xchg
jecxz
xchg
iret
lods
fiaddl
add
jle
testb
pop
jg
and
or
test
in
mov
dec
cs
lcall
daa
cmp
int3
cmp
aam
push
loopne
rcr
bound
iret
jne
pop
lods
jmp
pusha
push
jmp
icebp
je
test
shlb
sub
push
add
xchg
hlt
rolb
das
dec
movsl
xchg
jne
ljmp
add
jmp
icebp
push
sub
xor
push
mov
lea
dec
call
xor
or
add
and
iret
sbb
movsb
dec
cmpb
mov
fsubs
jg
movb
push
dec
insb
jecxz
sbb
mov
mov
jge
push
sti
rcll
cmpb
and
xor
divb
jne
inc
fsubrs
loopne
test
sub
xor
leave
jb
in
das
pop
inc
pop
data16
fidivs
inc
push
cmp
dec
cmp
sbb
rcr
add
and
or
dec
jmp
fwait
adc
cmp
add
sbb
mov
sbb
cmp
cmp
sub
je
and
sbb
adc
push
mov
pop
fildl
movsb
call
movsl
push
dec
les
jo
shrb
push
sub
pop
xchg
inc
push
pushf
sub
inc
and
daa
stos
jno
insb
inc
and
or
push
inc
mov
inc
add
aam
fsubrl
mov
lcall
push
and
cmpb
pop
aam
arpl
outsb
int3
mov
jmp
out
dec
lret
mov
jb
jne
cltd
lea
and
sbb
push
jl
dec
push
or
cwtl
ret
lock
pop
xchg
add
fldt
shrb
xchg
nop
lcall
dec
dec
mov
and
or
push
pop
inc
mov
pop
insl
adc
test
stos
sbb
bound
insl
imul
xchg
pop
mov
out
fs
push
xor
shrb
mov
movb
push
dec
add
xchg
sbb
cmpsl
sub
sbb
roll
in
ljmp
sbb
das
xchg
ds
cmpb
je
dec
jne
inc
push
sub
inc
dec
sbb
push
mov
xchg
adc
js
or
push
sub
je
movsl
nop
fs
cmpl
add
or
xchg
pop
nop
push
cmpsl
test
xor
in
jno
sbb
fs
sub
and
adc
add
xchg
xor
jl
dec
repnz
pusha
or
ljmp
jl
add
negb
rolb
je
and
xor
mov
adc
pop
sbb
bound
and
pop
jns
push
pop
or
push
pop
push
adc
push
push
mov
jb
cmp
pop
xor
cmp
loope
adc
push
testl
push
pop
fwait
jbe
or
adc
clc
pop
cmpsl
and
das
push
xor
sbb
push
jae
mov
movl
sahf
cld
and
cwtl
dec
or
xchg
and
shrl
int3
daa
pop
cmp
adcl
call
pop
mov
js
popa
sbb
es
xor
push
adc
das
sbb
xor
arpl
sub
lea
outsl
mov
sub
outsl
mov
cld
sub
fwait
loop
inc
shr
pop
aaa
icebp
mov
addr16
shlb
mov
ljmp
and
fiaddl
rcrl
push
add
or
lods
jl
and
add
adc
popa
addb
filds
dec
jne
push
or
insb
add
pop
adc
ljmp
dec
push
test
xchg
fcoml
pop
push
fwait
sub
push
xchg
push
insb
xor
dec
lea
jno
xor
and
popa
xchg
push
mov
mov
or
ljmp
and
push
cmpb
jne
movb
push
inc
add
ljmp
mov
cmp
mov
fcom
xor
sbb
mov
popa
adc
add
sbb
inc
iret
jo
sub
xor
mov
sub
loope
std
and
pop
sbb
emms
imul
sbb
sbb
mov
imul
push
add
pop
push
jne
fisubrl
test
adc
adc
push
sbb
mov
mov
and
mov
adc
xor
rep
lcall
dec
jne
dec
repnz
cld
sbb
lret
fcomip
inc
fcoms
call
inc
push
cmp
push
icebp
add
sub
fsubs
pop
scas
pop
hlt
inc
dec
pop
icebp
sub
and
movsl
ficompl
push
xlat
fcoml
inc
imul
mov
fsub
dec
add
adc
andl
xor
adc
jge
cs
add
sbb
sbb
movb
aas
daa
sahf
cmp
xor
mov
adc
cmp
insb
dec
fisubs
orb
dec
and
jecxz
adc
pop
cld
mov
sbb
mov
addr16
adc
mulb
add
mov
adc
addb
cmp
mov
mov
adc
popa
jnp
addr16
or
add
push
std
push
add
fisttpll
adc
repnz
pop
std
jg
dec
xor
div
cmp
jbe
jecxz
movsl
jbe
xor
call
jae
jne
shr
push
jmp
pop
sub
inc
cmpsl
pusha
push
jb
clc
pop
sbb
mov
movsl
or
push
inc
fsubr
fucomp
js
push
lods
aad
cmpsb
into
adc
js
push
test
shll
push
shrb
call
out
sbb
push
or
enter
cmp
push
add
push
and
fidivs
iret
add
aam
lahf
sub
insb
in
mov
xchg
enter
lods
insl
enter
mov
sbb
pop
jbe
adc
cmp
mov
mov
push
push
lods
sbb
scas
fcomi
pop
dec
enter
fidivl
sub
pop
mov
cmp
inc
xchg
mov
adc
mov
cmpl
insl
pop
adc
ret
scas
push
sbb
mov
pop
jmp
cmp
xchg
mov
inc
lcall
adc
lods
mov
cmpl
mov
sbb
or
cmpsb
mov
add
adc
sub
xor
sahf
push
mov
or
inc
leave
inc
cvttps2pi
sbb
pop
xor
test
dec
push
rorb
sub
push
and
mov
and
test
inc
mov
mov
add
ja
sbb
loop
data16
je
push
push
dec
add
lret
movsl
lock
sbb
dec
cmpsl
jno
add
and
scas
movsl
and
fiadds
nop
js
jmp
pop
and
push
pop
hlt
and
xorb
lock
fisubrl
push
inc
adc
andl
mov
mov
fldl
and
xchg
fisubl
mov
imul
mov
dec
popa
sbb
mov
cmp
sub
pusha
mov
shlb
sarl
sbbb
fwait
adcl
adc
mov
lock
mov
test
in
jnp
dec
sbb
cmpsw
pop
mov
xchg
jle
cmp
jle
or
adc
test
pop
cmp
push
jg
cs
enter
add
daa
add
add
mov
loopne
push
loopne
pop
data16
adc
and
jne
andb
mov
jbe
cmc
lahf
mov
xchg
jmp
jge
jne
fsubs
cmp
lahf
push
xchg
mov
adc
add
je
add
sbb
movsl
push
pop
into
rolb
add
pop
pop
subl
cmpl
pop
add
mov
mov
add
add
push
clc
sub
aaa
push
scas
push
push
or
test
push
adc
mov
mov
hlt
jg
outsl
jl
insb
sbb
jmp
push
sarb
push
xor
push
mov
push
call
adc
or
mov
or
xor
add
xchg
rorb
lahf
in
xchg
push
int
xor
cltd
jp
test
dec
inc
sbb
cmpsl
sbb
dec
sbb
xor
call
jmp
cs
mov
leave
fcoml
les
xchg
movb
add
movsb
pop
inc
mov
jmp
insl
shl
loope
jns
outsl
mov
sbb
rorb
mov
or
test
out
sub
lock
and
sub
push
dec
in
es
mov
push
inc
inc
sbb
out
mov
and
mov
rcrl
and
arpl
ljmp
stos
mov
orb
inc
lock
jae
daa
push
push
fadd
in
in
xchg
jbe
popa
and
cmp
daa
cld
stc
paddusw
adc
sbb
lahf
pusha
or
xchg
add
dec
inc
movsl
adc
data16
sbb
adc
addr16
out
add
mov
test
sbb
push
dec
push
addl
cld
cmp
pop
mov
js
push
out
sub
or
adc
loop
aad
pop
adc
mov
std
test
outsl
inc
lcall
push
mov
mov
daa
and
mov
mov
andb
pushf
jo
fs
dec
iret
and
dec
xchg
cmp
sbb
je
clc
out
rep
out
pop
xor
sub
fs
sahf
xchg
and
aas
sbb
adc
rclb
cwtl
stos
jge
xor
add
sbb
mov
jmp
shr
adc
cmp
outsl
push
outsl
inc
sti
push
sub
outsl
insl
mov
mov
data16
and
or
daa
and
inc
sbb
cmp
sbb
shll
sub
fildll
fisubs
mov
push
aaa
fiadds
leave
dec
mov
jo
and
test
pusha
push
dec
add
cmp
and
and
aaa
iret
repnz
add
pop
jmp
push
lock
xor
int
outsb
test
or
fimuls
add
sub
fdiv
cmp
popf
or
sbb
insl
mov
sbb
jb
je
mov
jbe
inc
divl
loop
aaa
imulb
aam
mov
mov
mov
ror
dec
cwtl
and
sub
subl
xchg
inc
js
push
xchg
xchg
outsb
pop
pop
dec
xchg
xchg
xchg
xchg
mov
mov
fstpl
pop
in
stos
fsubl
in
in
in
mov
add
sub
insb
mov
ret
cmp
push
pop
pop
mov
insb
cmp
sbb
mov
jo
popf
mov
insb
mov
mov
xor
les
cmovno
repnz
mov
jo
cwtl
ds
call
xchg
and
and
cmp
pop
stos
add
push
push
sbb
dec
loopne
or
xor
dec
data16
and
faddl
ds
lock
xor
cmp
mov
call
adc
enter
int3
ss
sbb
mov
mov
xor
cltd
popf
pushf
iret
movsb
xchg
sbb
rcrb
test
js
dec
xor
adc
mov
pop
nop
mov
dec
mov
jl
pushf
mov
inc
sahf
ja
cld
push
add
xchg
cmp
pushf
outsl
adc
stc
add
cwtl
cmp
in
cs
loope
mov
inc
enter
leave
push
xchg
ja
loop
mov
repnz
mov
movsl
test
xor
xor
jae
xor
push
jno
sahf
in
int3
imul
push
push
js
or
enter
cld
dec
je
sbb
sub
popa
mov
cmp
stos
dec
arpl
hlt
repnz
cmp
xchg
push
mov
fs
sbb
nop
xor
outsl
in
fs
insb
cmp
cmp
inc
js
jno
cmp
sbb
jae
pop
mov
or
lret
xor
and
xor
sbb
scas
cmp
int3
je
cmp
mov
outsb
jo
dec
addb
add
in
mov
sbb
dec
stc
pusha
scas
xchg
push
pop
mov
cmp
fimull
je
push
aam
hlt
jo
lcall
push
mov
sub
xchg
cmp
fs
push
mov
in
inc
xchg
mov
insb
add
adc
mov
enter
call
in
fs
mov
enter
cmp
rol
in
ror
sarb
call
clc
adc
je
sbb
adc
adc
adc
mov
adc
ja
test
pusha
pop
pop
cltd
xchg
sbb
cmpb
les
push
insl
jb
enter
fs
enter
nop
in
enter
push
xchg
loopne
and
enter
push
enter
sbb
clc
or
fcmovnb
rolb
test
bnd
cmovb
sarb
enter
and
mov
fmull
sbb
scas
xchg
xor
clc
addr16
push
mov
cltd
dec
lcall
sbb
sbb
in
daa
cmp
add
sbb
mov
insb
into
inc
scas
in
into
test
inc
test
cmp
or
enter
push
mov
mov
pop
loopne
adc
lds
pop
mov
outsl
xchg
cmp
push
adc
xor
fmull
dec
fcoml
enter
outsl
cmp
jns
xor
sbb
push
cmp
xchg
or
cmp
cmp
and
and
and
push
add
xor
push
push
pop
in
jo
push
sbb
pusha
xchg
inc
mov
nop
mov
sbb
sub
cmp
test
mov
mov
mov
and
xor
mov
adc
pop
adc
jo
test
repz
mov
mov
je
test
mov
movsl
je
lock
adc
jmp
je
add
adc
sub
push
push
cmc
inc
pop
sub
inc
mov
push
dec
mov
push
mov
sarb
notl
dec
imul
jg
xor
inc
rolb
mov
push
mov
add
mov
mov
jle
mov
cmp
je
or
mov
inc
cmp
jl
xor
inc
jle
cmp
daa
jge
cmp
xor
cmp
je
cmp
mov
jo
inc
cmp
jl
cmp
pop
in
shlb
loope
test
adc
mov
or
ret
mov
ja
stos
lea
fidivrs
loope
cmp
mov
enter
fs
lcall
mov
mov
dec
cmp
jle
mov
call
aas
push
je
cmp
pop
jl
cmp
jg
daa
test
pusha
sub
mov
outsb
or
jbe
jno
ss
add
xlat
gs
cmpsl
clc
out
xlat
mov
fisttpll
jmp
sbbb
mov
push
mov
pop
or
pop
loope
in
dec
mov
mov
fstpl
sbb
dec
jle
mov
add
outsl
jge
xchg
lea
fcmovnbe
cli
lods
cltd
adc
push
pop
xchg
pop
cmpsl
icebp
jecxz
dec
dec
shll
dec
movq
push
xor
xor
cs
mov
inc
cmp
jno
push
xchg
inc
cwtl
mov
movlps
cmp
mov
cmp
jg
or
dec
icebp
mov
lea
out
lea
je
and
push
push
mov
leave
test
xchg
or
enter
mov
cmp
cmp
add
je
add
mov
shlb
add
cmp
xor
out
scas
adc
je
jns
repz
adc
push
push
add
shlb
mov
notl
cmp
andb
loop
pop
mov
sub
out
ds
pop
enter
adc
add
in
cmp
and
or
mov
adc
push
xchg
add
add
fdivrl
test
je
in
push
xchg
lock
loope
cmp
popa
sbb
or
push
jl
add
xor
inc
push
push
imul
ss
in
frstor
int3
jno
push
push
mov
mov
or
les
mov
popa
loopne
or
xor
movups
jne
int3
or
pop
cmp
rorl
jecxz
cmp
fwait
jns
fsubs
imul
mov
sub
pop
dec
int
jl
and
xchg
inc
push
push
mov
push
xchg
jno
add
inc
sbb
push
lds
xor
dec
add
in
inc
test
push
xor
dec
sbb
mov
fiadds
sbb
inc
dec
and
or
punpcklwd
adc
pop
rcll
loopne
mov
cld
fidivl
insb
rol
adcl
adc
out
push
jno
inc
add
push
dec
push
and
leave
xor
cmp
push
push
mov
sahf
pop
pushf
adc
rorb
jae
add
fdivr
aam
pop
faddl
mov
pop
in
push
shrb
cmpsl
pop
shrl
or
mov
cmp
xor
gs
jno
inc
pop
add
fisttps
and
sbb
dec
call
xor
inc
inc
pusha
andl
aam
les
mov
movsb
sbb
sbb
inc
movsb
pop
shl
int
cmp
sbb
pop
pop
popf
jmp
cmp
jne
cs
call
mov
push
adc
xchg
mov
stc
sbb
sbb
add
pop
popa
daa
adcb
xlat
push
insl
leave
pop
push
xchg
je
rclb
add
or
rolb
insl
mov
popa
shll
lret
lock
or
sahf
xor
push
mov
aad
or
inc
scas
lret
or
mov
jns
and
pop
stos
and
add
jb
test
std
adc
inc
pop
add
loop
inc
jecxz
outsb
movsb
loope
in
nop
cmp
lea
push
inc
dec
pusha
and
fs
jno
pop
lock
inc
mov
repnz
jmp
add
test
je
shlb
push
or
cwtl
push
js
pop
dec
cmp
jno
xor
pop
idiv
popa
pop
inc
add
fsubs
int
fsubrs
dec
testb
cmp
inc
sbb
adc
pop
jg
and
push
lods
loope,pn
daa
popf
mov
xchg
imul
or
pop
pop
shl
inc
fimull
shl
push
lahf
jo
pop
push
lea
shl
out
and
in
mov
imul
push
sub
xchg
sub
jmp
mov
orl
scas
lea
add
cs
adcl
loopne
or
or
sbb
je
or
mov
mov
les
mov
jmp
or
fdivr
add
test
outsb
adc
jbe
push
sarl
sub
clc
dec
sub
add
jle
or
jg
cmp
push
jmp
out
push
fwait
sbb
jbe
aam
mov
lret
add
or
nop
dec
push
mov
ja
push
and
jle
fists
jmp
das
add
adc
pop
lock
or
out
enter
in
iret
addb
pop
in
xchg
and
ja
test
mov
test
add
mov
ja
adc
jge
or
push
fwait
jbe
push
popa
ja
je
lea
fiadds
cmp
ja
movzbl
and
push
or
mov
push
or
aaa
jne
das
push
aas
sub
and
sbb
icebp
adc
mov
loop
jnp
push
push
push
stos
dec
in
call
enter
cmpsb
mov
ret
call
push
and
push
clc
decb
lods
push
or
push
cmp
or
add
or
add
add
sti
add
add
sbb
cmp
and
pop
jns
adc
and
cld
push
fcoml
mov
pop
out
push
lds
shrl
outsl
notl
cmp
mov
adc
push
push
cld
jle
lret
repnz
je
add
pop
rcl
mov
push
push
fsubp
gs
in
or
pop
jns
in
sbb
jns
jns
jns
cmpsb
sbb
or
shlb
clc
xor
loopne
pushl
lahf
imul
aaa
ds
push
fcmovnbe
and
and
nop
lock
scas
clc
mov
cmp
adc
push
inc
inc
cmp
cmpsl
test
pop
xorl
pop
popa
add
sub
dec
cmpl
jne
push
push
shrl
push
pop
mov
push
cmc
ljmp
les
lock
sbb
push
dec
cltd
xchg
pop
scas
shll
lods
push
cmpsb
cmp
inc
loop
cmp
cmp
ret
inc
jne
lods
push
push
xchg
or
jo
aaa
mov
mov
ljmp
testb
jne
cmp
sbb
or
and
fbstp
push
pushl
sbb
pop
ret
inc
inc
sbbb
pusha
push
and
inc
and
add
nop
rol
pop
ja
sub
jg
xchg
lock
mov
and
push
fldenv
iret
xor
cld
inc
or
ret
aad
outsb
fmuls
or
add
push
add
pop
aam
push
cmp
clc
lea
jae
push
push
xor
sbb
add
add
cmp
sub
cmp
add
mov
pushf
and
mov
adc
push
lock
outsb
xor
nop
jae
jp
push
rcl
cmc
mov
std
add
add
sti
xor
ds
je
adc
sub
and
ret
flds
lock
je
ja
jmp
push
jmp
jb
inc
jnp
aad
jo
jbe
xchg
or
or
mov
and
in
push
sbb
sub
xor
mov
lods
rorl
inc
rclb
push
shll
and
sub
fidivrs
sete
vmwrite
scas
cmp
xor
dec
je
into
jne
ds
mov
add
push
lcall
adc
cmp
add
scas
or
and
push
mov
add
jp
movsl
dec
dec
add
std
dec
sbb
jb
mov
mov
adc
sbb
and
jge
lret
pop
add
inc
fcoml
bound
test
gs
daa
bound
jl
faddl
or
sbb
repnz
ror
cmp
enter
cli
push
push
jb
ja
lret
or
loopne
pushf
xchg
cmpsl
test
sbb
jo
mov
enter
push
inc
testl
push
push
shlb
and
or
pop
dec
inc
fiadds
imul
inc
movsl
add
pop
or
adc
dec
adc
sarl
dec
pop
shr
adc
call
and
in
or
adc
hlt
jnp
in
test
nop
stos
fs
and
sbb
fs
nop
stos
xor
jl
fs
mov
mov
inc
nop
stos
fs
cmp
dec
fs
mov
or
mov
mov
push
stc
pop
pop
jmp
push
push
aam
adc
add
jg
and
dec
scas
xor
leave
sbb
and
imul
nop
add
outsb
loopne
sub
jne
or
dec
dec
mov
sbb
cmp
mov
fwait
call
jg
add
push
jno
out
rcr
lret
jbe
adc
ja
pushl
push
dec
call
add
leave
roll
inc
cmp
jb
jmp
cmp
repnz
loop
add
stos
subb
inc
inc
pop
cltd
mov
xchg
and
imul
xor
inc
inc
jle
inc
adc
add
ja
je
int3
lret
outsl
sub
inc
or
je
xor
lea
add
xchg
dec
sti
nop
lea
adc
sbb
leave
push
cmp
clc
je
sub
mov
and
ss
dec
cld
jle
fsubr
jle
mulb
clc
stc
or
push
pop
ja
je
sub
jnp
je
dec
adcl
ret
inc
dec
push
call
or
push
pop
sub
pop
insl
call
out
sbb
pop
jge
jge
and
jge
jne
adc
cwtl
fs
lret
xor
or
jne
orl
add
inc
icebp
aam
inc
fucompp
push
jne
cld
ja
pop
popa
xor
add
and
sub
mov
or
clc
lahf
push
lcall
pop
push
or
push
mov
shrb
pop
push
lods
enter
push
rcll
iret
in
push
cwtl
or
loopne
and
pop
mov
push
push
push
inc
andb
ficoms
sub
cmp
pop
cmpl
sti
sbb
mov
nop
imul
mov
or
jae
or
sub
stos
gs
lods
push
faddl
or
mov
adc
mov
jbe
test
stos
mov
cmp
test
dec
cmp
fbstp
sbb
cmp
or
repz
or
push
mov
add
adc
pop
sub
mov
cmp
add
cmp
enter
and
or
adc
push
xor
pop
mov
push
div
adc
inc
sbb
xchg
aas
inc
inc
div
mov
add
fcmovnb
rclb
loopne
cs
pop
insb
sbb
lock
add
sbb
cwtl
je
fcmovnb
sub
call
mov
aaa
je,pt
mov
or
cmc
ret
jp
test
mov
adc
sbb
mov
enter
les
inc
lods
dec
mov
cmpsl
mov
fstpt
fimull
sub
cmovne
cmpl
pop
subl
mov
aam
aaa
pop
add
call
fcomi
add
sub
push
cs
ficompl
lock
add
mov
jo
mov
ret
mov
adc
not
sub
jmp
je
lods
push
mov
call
xor
loopne
wbinvd
iret
mov
push
dec
mov
push
aaa
rorb
sub
add
or
add
pop
push
sti
dec
push
push
jle
pop
pop
sub
insb
js
mov
jo
xchg
loop
in
sbb
in
or
inc
jae
outsb
lret
pop
hlt
je
rol
cmp
jne
cld
fsub
rorl
je
pushf
clc
jbe
sbb
push
jne
mov
sub
push
jmp
rcrb
enter
shrl
push
push
rclb
pusha
in
lock
ret
repz
movsl
inc
mov
insl
fistpl
adc
cmp
xorl
mov
mov
addb
sbb
icebp
enter
imul
fsubp
push
rcl
sbb
xchg
sarb
and
adc
jb
or
jno
dec
inc
popa
rcrb
dec
adc
in
call
outsl
stc
test
dec
lock
inc
mov
jmp
push
inc
andl
dec
insl
stos
mov
and
cmp
adcl
orl
jecxz
dec
sarb
adc
mov
lea
mov
lds
or
mov
cld
andb
inc
push
or
xchg
add
test
in
cli
push
or
and
pop
mov
mov
test
das
repz
shlb
icebp
scas
dec
adc
dec
xchg
adc
or
lret
pop
pop
mov
adc
sub
sbbl
sub
sub
cmc
shlb
lea
add
and
dec
pusha
pop
add
scas
dec
pop
pop
and
xchg
orl
adc
sub
js
cmpl
mov
bound
sbb
test
insb
cwtl
or
xlat
sbb
add
lods
ret
pop
inc
sbb
mov
clc
sub
sbb
or
lods
xorl
mov
jle
adc
push
outsl
jecxz
push
or
or
mov
sarl
test
xchg
lret
cmp
shll
jno
orb
push
jle
adc
fistl
movd
pop
orl
sub
push
ja
xor
pushl
mov
cmp
subl
ds
sbb
dec
cmp
push
mov
lea
out
sbb
outsb
mov
adc
inc
pop
and
addr16
adc
mov
add
pop
mov
adc
sbb
pusha
mov
jg
in
mov
lds
add
push
aad
fistpl
sub
jnp
sbb
in
sub
add
or
or
jg
test
je
jmp
fistps
inc
push
fbstp
mov
push
push
mov
sbb
sub
je
sub
add
xchg
xor
jle
outsb
je
stos
js
fadds
pop
push
andl
sbb
lock
test
mov
jbe
lea
pop
dec
pushf
pop
pop
inc
add
cmp
jb
jmp
push
int
leave
or
or
xlat
adc
add
sbb
out
push
adc
push
pop
mov
mov
dec
push
fadds
repz
mov
cmpb
push
or
lock
pop
and
jmp
lock
jmp
push
jle
lea
push
shr
inc
std
incl
lea
mov
or
mov
add
inc
inc
dec
jne
pop
jmp
or
scas
mov
xchg
push
add
mov
and
jmp
shr
add
pop
mov
shr
shl
int
int3
add
pushf
xor
test
xor
xchg
mov
dec
jne
and
jmp
leave
pushf
push
jmp
test
push
adc
or
cwtl
std
inc
cld
data16
and
outsl
adc
sti
add
rcrl
adc
in
andb
test
cs
std
sbb
add
or
push
and
sbb
pop
push
push
add
sub
movb
mov
rorl
pop
aaa
test
or
adc
jae
add
jl
adc
pop
insb
fisttpll
add
inc
pusha
pop
scas
push
xorb
xchg
es
mov
sbb
adc
test
mov
enter
sti
xor
nop
add
mov
mov
adc
mov
push
pusha
out
lock
test
ljmp
ret
lods
push
push
bswap
push
mov
adc
and
mov
fldpi
pop
push
sub
dec
inc
inc
fstl
imul
inc
add
dec
fistpll
mov
imul
push
jbe
scas
jecxz
add
lods
stc
cmp
add
test
cmp
fildl
test
sbb
or
movsb
adc
pop
nop
cmp
mov
out
inc
out
dec
mov
btl
or
pop
xor
cs
rcrb
das
jns
nop
or
cmpl
pop
nop
int
xor
mov
fdivs
mov
mov
sar
mov
ror
or
insb
cmp
sbb
add
aas
dec
call
jo
ja
fadds
jle
or
jge
jge
or
mov
aaa
iret
pop
sarb
pop
add
loopne
out
jne
test
dec
jecxz
mov
cmp
jl
add
and
or
inc
flds
pop
int3
and
test
pop
adc
adc
sti
pusha
push
int3
shll
lds
jne
arpl
test
and
int3
adc
subl
and
int
ror
cmp
xor
add
sub
push
or
or
mov
inc
idiv
inc
push
cmp
test
pop
dec
add
into
jae
ret
adc
aam
fsubl
out
xchg
inc
shlb
xchg
jge
jle
mov
aam
xchg
xor
out
loopne
out
pop
dec
insl
or
fdivr
lods
pop
or
jb
push
inc
ret
jns
or
jne
pop
sbb
dec
add
or
mov
sbbb
inc
and
mov
out
ret
or
push
int3
dec
dec
add
loopne
xchg
repnz
and
xor
shlb
xchg
adcb
clc
add
dec
std
push
push
xor
test
inc
call
add
sub
pop
jno
jecxz
sub
gs
sub
xchg
lock
add
stc
pushf
clc
sbb
mov
ret
jmp
addl
push
push
stc
mov
je
xchg
aaa
push
adc
test
or
test
or
fdiv
fisubrl
push
xchg
jae
ficoms
sbb
adc
sbb
cltd
sub
mov
or
sub
jecxz
xchg
cmp
mov
lea
or
dec
jp
inc
pop
mov
adc
pop
jmp
and
cli
cmpsb
mov
adc
rcll
jmp
pop
sub
push
insl
jns
sbb
pop
lret
mov
cmp
loopne
test
cmpsb
fwait
jecxz
nopl
pop
sub
dec
imul
dec
in
sbb
mov
lods
mov
push
scas
les
test
test
push
push
rorl
and
and
popa
add
cwtl
jp
and
push
cmpsl
frstor
inc
cmp
xor
in
les
add
addb
add
in
adc
movups
pushf
add
push
and
xor
or
andl
js
xchg
dec
mulb
xacquire
cwtl
sub
std
xor
andb
fidivrs
pop
sbb
negl
pop
add
insb
push
add
sbbb
cmp
scas
ret
cmp
std
sbb
add
fnstenv
fcomps
aam
dec
test
test
and
and
jne
sti
inc
add
and
jae
int
test
jbe
or
xor
pop
or
adcl
inc
dec
push
mov
into
gs
stos
cmp
pop
aaa
add
loopne
fldcw
inc
push
cmp
jne
mov
call
add
incl
adc
pop
or
ljmp
inc
fcmovnu
shrb
xor
pop
adcb
push
stos
lods
inc
sahf
pusha
or
or
cwtl
pop
add
loop
fcomip
hlt
add
mov
inc
lock
inc
je
and
cwtl
shlb
mov
push
inc
sub
ret
mov
stos
xor
mov
mov
mov
sbb
movsl
adc
add
add
test
push
pop
push
and
xor
mov
and
add
imul
push
loop
hlt
pop
outsl
aam
lock
push
stos
adc
add
jne
es
loope
or
mov
clc
dec
xchg
add
insl
inc
and
mov
mov
ficomps
test
sbb
jmp
cmp
sti
push
daa
jecxz
xchg
lret
jo
adc
or
lods
mov
or
and
inc
pop
and
mov
sti
add
fsubrs
push
imul
loopne
aam
xchg
and
addr16
shlb
add
add
je
cltd
rcrb
jne
lcall
popl
fnsave
sbbl
adc
test
loopne
add
push
jle
inc
daa
sub
and
and
push
cwtl
cmp
adc
and
cmp
leave
leave
outsb
jnp
pop
sbb
mov
cli
fcoml
pop
push
sbb
js
or
pop
gs
movsb
lret
or
aad
enter
imul
fcoms
hlt
divb
xchg
in
out
sbb
ret
iret
push
push
int
or
insl
inc
cmp
loopne
pop
lods
subl
loopne
add
addr16
push
cmpsl
aaa
fsubrs
add
jle
mov
call
fisttpl
or
mov
jbe
aas
cmp
je
pop
dec
loop
popa
imul
arpl
je
bswap
insb
fdiv
or
jae
dec
sarb
sbb
cmp
mov
into
push
push
or
add
orl
nop
mov
sub
sbb
jo
adc
js
sbb
jno
dec
jl
xor
imul
mov
sbb
and
mov
outsl
rcrl
sub
mov
rcrb
mov
mov
mov
adc
daa
mov
dec
cmp
sub
popa
pop
or
mov
cld
stos
add
push
sahf
or
pop
push
sbb
pop
sbb
sub
nop
int3
push
add
add
inc
lods
aam
cmp
or
mov
jl
add
push
mov
adc
jne
andl
pop
push
loope
pop
jo
mov
and
fwait
daa
add
push
pop
nop
sbb
xor
add
adc
sti
mov
nop
add
jo
test
pushf
lea
jp
dec
dec
addl
push
dec
push
cmp
outsb
jp
ret
and
jne
sbb
insb
or
and
aaa
xor
sbb
adc
push
mov
add
dec
dec
adc
pop
lock
cmpsb
addl
mov
mov
mov
inc
push
lcall
pop
mov
xor
fiaddl
push
jmp
ss
repnz
adc
mov
mov
or
ja
mov
pop
sarb
out
test
mov
add
push
xchg
xchg
push
notb
sbb
add
fildl
iret
mov
inc
mov
mov
jo
dec
jne
fisttpll
stos
or
push
push
rcll
pop
fcomps
jp
mov
loope
push
icebp
cmc
mov
sub
out
xor
inc
xchg
gs
or
sbb
push
or
test
jo
xor
and
add
test
or
cmp
mov
hlt
jle
cwtl
cmp
leave
cmp
xor
and
and
dec
sbb
fcos
aaa
mov
inc
arpl
jle
xchg
pop
cmp
std
je
or
je
xchg
dec
iret
and
sbb
call
jl
sbb
mov
mov
dec
pop
or
stc
nop
psadbw
fadds
rcrb
js
cmpsb
cmp
in
orb
popf
inc
sbb
cld
push
shrl
stos
jge
sbb
aaa
jo
mov
xor
jo
popf
sub
sti
add
mov
mov
dec
sbb
mov
dec
inc
push
pop
push
or
leave
xor
push
push
fstpt
and
and
pop
and
mov
push
inc
mov
jg
ffreep
jl
mov
jbe
adc
popf
jo
pop
pop
scas
ret
jle
sub
subl
aas
negl
mov
cmpb
sub
inc
lcall
jne
movsbl
mov
movb
aad
rcr
pop
add
adc
popf
lahf
xor
add
mov
adc
roll
jecxz
or
jae
repnz
imul
in
loopne
les
inc
mov
out
repnz
jns
add
inc
pop
out
mov
addl
xor
rolb
enter
mov
mov
mov
pop
ret
pop
sub
xor
mov
adc
and
dec
inc
dec
adc
dec
pop
push
and
nop
ja
iret
jmp
jne
das
push
movsl
jb
add
adcb
push
sub
call
icebp
and
mov
fsubl
call
idiv
lea
enter
inc
test
cmp
je
and
data16
pop
sarl
mov
fldl
push
and
fld
push
mov
and
bound
push
jo
in
pusha
dec
sub
jnp
int
and
mov
andb
sbb
mov
inc
mov
cmp
add
popa
push
fisubrs
cmp
cmpb
fmull
and
and
idivl
movb
inc
aad
sbb
xchg
xchg
mov
jo
inc
lock
push
jne
movsl
sub
and
test
xor
inc
sub
xchg
dec
mov
sbb
pop
je
sbb
sarb
add
jmp
xchg
add
adc
or
mov
mov
cmc
clc
mov
pop
ja
jl
shr
jle
out
xor
jecxz
mov
insl
push
jle
mov
add
jle
mov
mov
push
je
dec
aad
cwtl
nop
dec
daa
pop
adc
ret
sbb
ficomps
push
xor
mov
int3
mov
insb
sub
adc
sbb
js
and
insb
cmp
or
out
outsl
test
xchg
fdiv
sbb
dec
mov
inc
std
loope
jo
loopne
addr16
ret
sahf
cmp
orb
or
les
pop
push
mov
shlb
push
dec
push
push
arpl
fwait
sub
ret
out
cwtl
inc
mov
pop
fs
pop
mov
xor
psubb
lea
or
jmp
das
add
push
add
jge
sbb
dec
mov
loope
cmp
mov
xchg
daa
sub
jnp
nopl
sub
xor
pop
js
ljmp
xchg
ja
nop
clc
xchg
sub
int3
mov
sarb
fsubrl
and
ret
nop
adc
leave
adc
mov
adc
cmp
or
xor
push
and
jne
movb
popf
imul
and
add
outsl
ret
stc
gs
cld
cmp
add
je
add
dec
test
orb
mov
jno
sbb
or
lea
mov
adc
mov
cld
cmpb
je
mov
inc
mov
xchg
cmp
or
push
inc
pop
mov
stos
ret
into
std
or
fcompp
test
push
push
or
dec
xlat
add
in
sbb
in
dec
dec
inc
mov
add
cmp
repnz
xor
add
dec
mov
adc
lds
int
sbb
sbb
jne
adc
and
cmp
mov
or
icebp
call
sbb
and
mov
dec
and
xchg
stc
lea
sub
cld
dec
add
mov
sub
dec
pop
aas
xchg
push
xchg
cmpsb
jge
lds
push
test
push
cwtl
mov
je
adc
xchg
inc
pop
xor
adc
pusha
jl
sbb
dec
dec
inc
xchg
adc
add
adc
out
add
cmp
shlb
jo
sti
cmp
mov
mov
sbb
adc
lea
ss
push
pop
xchg
shl
mov
incl
xor
jns
ds
cmpb
inc
sbb
xor
das
add
xor
inc
clc
push
push
pushl
hlt
scas
scas
adc
in
inc
push
jae
ja
mov
outsl
jne
xchg
pop
mov
sbb
adc
decl
sub
imul
pusha
ds
inc
bound
rorb
jl
in
sbb
mov
sbb
sub
xchg
jg
movl
outsl
dec
cltd
or
aad
xchg
mov
add
js
push
cmpl
and
push
and
stos
out
adcb
sbb
push
and
fsubrl
mov
jno
mov
ret
dec
sbb
out
addr16
dec
dec
mov
sbb
push
xor
cmp
push
ss
nop
popa
dec
inc
int3
popl
jle
and
lds
sub
adc
pusha
add
mov
and
in
lret
or
and
sub
adc
inc
mov
pushf
rolb
adc
inc
test
and
rolb
jge
ja
arpl
push
clc
enter
cltd
inc
sbb
movsl
imull
or
jb
sbb
test
lock
lea
divps
rcrb
roll
or
in
mov
mov
jbe
mov
cltd
sub
push
fs
sbb
sub
es
inc
bound
adcl
and
sub
or
pop
dec
sbb
pop
repnz
add
repnz
nop
and
mov
and
pop
in
mov
in
rcl
popf
in
fimuls
xor
mov
int3
inc
cmp
cmp
jns,pn
sbb
nop
and
mov
packssdw
pop
in
out
or
inc
cmp
xchg
out
or
sub
in
out
push
push
repz
mov
dec
xor
add
enter
mov
sub
mov
jo
pop
mov
or
stc
push
shrl
cmp
dec
mov
jl
push
outsl
push
lds
mov
cmp
sbb
fmul
popf
xor
or
pop
enter
and
nop
xchg
or
and
repnz
or
xor
inc
or
in
and
add
inc
add
inc
cs
dec
inc
out
aam
inc
out
fdivl
mov
and
and
mov
xchg
mov
test
or
mov
repnz
pop
inc
cwtl
jns
and
or
in
les
jne
pusha
je
fs
and
enter
push
test
pop
sbb
push
sbb
cltd
nop
and
fimuls
imul
inc
push
inc
inc
cs
xor
fs
and
and
test
sbb
enter
pop
or
xor
sbb
mov
in
mov
jbe
sbb
or
fdivl
ljmp
inc
lea
jb
inc
push
xor
icebp
mov
push
test
mov
movsb
call
add
out
mov
lds
daa
push
cmp
pop
enter
sbb
andb
xchg
insb
inc
nop
xchg
or
push
repnz
inc
cs
and
repz
inc
xor
mov
pop
push
out
test
cmc
or
subl
mov
cmp
cld
mov
lds
daa
test
sub
call
mov
pop
and
pop
insb
lock
sub
in
or
adc
loopne
fsub
inc
push
mov
xchg
or
shlb
xchg
push
pop
les
ss
rolb
enter
xor
pop
xor
dec
pop
lock
sbb
nop
inc
es
nop
push
or
and
lods
xchg
sbb
sub
jb
daa
test
pop
xor
test
je
dec
pop
enter
xor
sbb
inc
xchg
pusha
inc
cs
inc
pop
sub
pop
ss
push
xchg
pop
xor
pop
dec
in
cs
push
mov
and
jb
shrl
pop
enter
in
or
sbb
scas
sub
inc
cs
cwtl
sbb
test
test
xor
nop
daa
sbb
call
pop
loopne
or
cmp
push
adc
addr16
scas
add
gs
or
repz
mov
les
add
mov
push
mov
inc
arpl
mov
shlb
add
lahf
in
sahf
into
mov
nop
mov
in
mov
popa
cmp
and
stc
test
fiadds
push
cli
jle
test
sbb
pop
adc
xor
jne
nop
xchg
lcall
xor
xchg
xor
add
add
loopne
movsl
and
in
movsl
lar
mov
sbb
in
mov
mov
outsb
pop
pop
loope
je
sbb
xor
push
inc
inc
mov
pop
jb
mov
mov
cmp
test
cmp
out
xchg
mov
add
add
pop
shrl
sbb
pushf
or
aaa
nop
jno
add
sub
in
xor
mov
adc
outsl
cmc
pop
or
and
or
mov
stos
in
loope
jae
je
subps
inc
loope
pop
fsubs
sti
jne
repz
test
pop
or
and
mov
sbbl
lods
jne
jno
outsb
mov
xor
add
aaa
repz
fstl
popa
sbb
adc
add
adc
dec
cltd
nop
negl
xchg
das
inc
or
out
jecxz
sub
xor
pop
pusha
in
xor
shrl
cmp
popf
nop
adc
mov
or
and
or
sbb
mov
sbb
dec
xor
lret
xchg
adc
mov
adc
dec
inc
xchg
pop
subl
pop
mov
push
cmpsl
cmpsl
je
jne
adc
js
jle
inc
je
mov
add
add
in
pop
ss
and
add
enter
push
xchg
xchg
imul
push
imulb
xorl
loope
ficoms
xchg
add
mov
cmp
repnz
and
sub
subl
and
and
and
push
pop
pop
insb
adc
sub
adcl
cs
test
and
mov
cmp
jb
inc
in
xor
sbbl
subb
or
and
inc
cs
out
sbb
inc
push
mov
leave
or
in
or
enter
mov
inc
push
cltd
inc
clc
xor
leave
or
lock
sbbl
sbb
cmp
scas
fdivs
daa
das
cld
sbb
in
in
or
push
sbb
ss
mov
pop
mov
sbb
inc
outsb
sub
enter
pop
mov
cmp
subl
nop
or
jp
daa
nop
xchg
adc
xchg
inc
or
fisttps
hlt
jg
mov
in
sbb
dec
inc
adc
mov
les
enter
jl
adc
sub
pop
std
adc
enter
push
dec
pop
orb
imul
or
push
bound
dec
jns
sbbl
or
cmp
pop
enter
pop
or
or
xchg
inc
inc
jl
jg
and
outsb
and
sub
insl
adc
pop
enter
or
or
scas
int3
add
hlt
mov
pop
enter
in
add
in
dec
loopne
fcoms
adc
or
lods
inc
negb
mov
enter
mov
sbb
daa
jo
and
pop
and
add
dec
repnz
inc
push
dec
mov
sbb
lock
test
daa
je
test
inc
inc
adc
fwait
or
sbb
fsubs
inc
xor
xor
inc
push
or
cwtl
or
icebp
mov
sub
nop
loope
dec
bound
rorl
push
mulps
dec
scas
push
push
dec
lea
xchg
cli
mov
int
mov
daa
cmpsb
mov
pusha
scas
mov
mov
movsb
js
das
mov
fwait
push
iret
xchg
stc
sbb
inc
add
out
add
inc
push
push
xchg
xor
int
ret
push
pop
arpl
loop
cltd
mov
mov
lea
arpl
adc
sub
fsts
sbb
dec
jno
inc
les
js
ja
push
shrl
sub
je
sbb
cmp
sub
enter
push
push
push
mov
fsubrl
dec
push
or
andl
ljmp
add
mov
hlt
mov
fmuls
idiv
add
pop
and
sub
push
adc
daa
sbb
and
sbb
hlt
pushf
scas
in
sub
test
scas
cltd
xor
sti
shlb
sbb
iret
add
jmp
or
nop
repz
pusha
push
sarb
sahf
jns
loop
inc
pop
sub
mov
push
push
out
mov
inc
dec
and
adc
in
adc
pop
or
rolb
ja
scas
cmp
enter
or
scas
shrb
in
not
push
inc
xchg
clc
lods
and
je
sub
lock
scas
or
add
dec
fmuls
test
sbb
cltd
xchg
push
fwait
sti
sbb
pusha
push
and
testl
cmp
sbb
mov
add
jnp
cwtl
mov
mov
jbe
mov
addl
mov
mov
sbb
and
dec
daa
cmpsl
dec
dec
in
jmp
sti
out
pusha
inc
loope
push
push
dec
add
pop
gs
sub
cld
aas
mov
outsl
rorl
push
mov
mov
jo
popa
js
xchg
inc
or
lods
sbb
push
cmp
xor
cmpl
pop
rcl
add
or
adc
aad
xorb
mov
and
xchg
cmp
pushf
test
insb
sbb
add
pusha
fs
and
clc
mov
jae
push
pop
adc
shll
sbb
xor
cmp
pop
inc
adc
mov
inc
inc
cli
jnp
fwait
push
mov
fsts
scas
mov
xor
jle
imul
enter
leave
cmp
sbb
lea
bound
lods
adc
fld
repz
xor
push
sub
inc
stc
rorb
mov
sub
insb
out
and
lods
xorb
sbb
add
cmc
jle
mov
movsb
sub
and
push
push
add
sub
leave
sub
test
mulb
add
mov
pop
mov
pop
insl
fadd
sbbb
ret
aas
loopne
loopne
push
push
push
arpl
mov
mov
pop
mov
jle
outsl
ja
adc
add
push
cmp
inc
sbb
aas
or
movsbl
cmp
jl
cwtl
jno
into
mov
icebp
mov
cmp
iret
push
sbb
js
clc
lock
sub
cmp
add
and
mov
push
xor
and
mov
or
stos
pop
pushl
push
jmp
mov
popf
insb
cmp
xchg
sbb
xor
pop
sub
ljmp
lods
push
andl
ss
nop
cli
mov
fdivrl
jo
insl
sbb
adc
add
sbbb
int3
jnp
rclb
push
dec
mov
mov
ficoml
or
push
xchg
fdivrs
jae
adc
mov
cltd
sub
xchg
or
adc
cld
xor
mov
sbb
add
sub
mov
dec
mov
xor
fisubrs
add
cmpb
outsl
add
in
xchg
push
push
sbb
daa
nop
pop
and
or
dec
sub
shll
inc
sub
adc
xchg
pop
enter
and
sub
sub
aam
pop
inc
imul
adc
mov
jns
in
cld
pop
sbb
arpl
std
push
outsl
pop
cld
adc
imul
cld
mov
xor
inc
pop
pop
or
dec
mov
mov
adc
int3
mov
xor
and
nop
inc
cld
lock
xchg
cmp
push
stc
je
add
or
adc
mov
and
sub
and
cmp
loopne
out
test
fcomps
push
scas
gs
repz
mov
push
pushf
int
pusha
mov
push
mov
jb
xchg
aam
rorl
jb
in
rorl
test
clc
out
cmp
sbb
add
rcll
mov
cmp
popf
xchg
adc
or
ficoml
adc
jns
xchg
das
xchg
jo
repnz
or
cwtl
cmp
cmp
clc
movzbl
repnz
xchg
icebp
stc
or
or
aas
inc
mov
repnz
enter
insb
push
adc
aaa
in
sub
repnz
xchg
fs
push
xor
push
cmp
in
pop
push
ja
fistps
mov
test
outsl
push
sub
or
add
aas
push
shrb
cmp
xor
or
les
xchg
adc
pop
and
dec
inc
testl
int
sub
int
and
outsb
push
inc
push
dec
cmp
and
test
enter
sbb
mov
jecxz
in
and
cmp
sbb
in
dec
pop
sbb
movsb
test
push
cltd
push
or
push
mov
dec
xchg
jns
aad
pop
dec
iret
jae
hlt
hlt
sbb
in
adc
ret
fsubl
aam
or
sub
push
ljmp
push
or
inc
xchg
stos
sub
cwtl
mov
jp
das
inc
test
push
sub
add
sbbl
xchg
cmp
or
xorb
pushf
and
sub
xor
and
sub
mov
imull
fucompp
mov
sbb
adc
test
or
dec
ret
xor
lret
adc
nop
add
nop
inc
jb
shll
jl
xchg
mov
add
pop
sbb
pop
jbe
add
push
and
dec
sti
pop
xchg
mov
shr
mov
or
xor
and
je
in
jg
sbb
ret
shll
sbb
in
rclb
jg
pop
sbb
mov
pop
sbb
jbe
inc
fsubrl
cmp
cmp
and
dec
movsb
fst
in
and
lea
mov
lret
mov
data16
xor
fscale
mov
loopne
or
and
mov
mov
outsl
mov
push
add
cmpl
std
sub
movsl
dec
dec
push
push
push
add
inc
ja
ret
xlat
mov
xorb
push
or
xchg
adc
fsubr
mov
push
and
push
popa
or
jne
mov
cmpsl
or
pop
or
dec
lahf
es
mov
xlat
mov
ret
push
mov
and
ret
cmpsl
adc
and
cmpsl
lds
fwait
nop
mov
or
add
test
lds
lds
in
shlb
test
mov
and
stos
dec
aad
dec
and
push
push
inc
pop
push
cmp
imul
mov
lock
push
push
pop
pop
sbb
add
inc
pop
inc
sbb
stos
je
repnz
push
jae
cmpsb
add
addb
cmp
or
push
jb
sbb
add
shll
push
jge
xchg
jecxz
sub
cwtl
jnp
xchg
sbb
popa
ss
andb
push
or
sarl
sbb
je
orb
test
add
xchg
or
cmpsl
in
cli
sbb
sub
add
cmpsb
mov
es
aas
mov
and
adc
nop
sub
icebp
sbbl
ss
and
xor
sbb
cmc
aam
cmp
fidivrl
loope
lcall
sub
push
mov
mov
inc
shlb
cmpsb
fstpl
or
add
or
mov
movsl
imul
pop
arpl
mov
adc
test
andl
adcl
int
in
adc
pop
push
dec
xchg
inc
inc
dec
icebp
pop
inc
test
push
dec
add
aam
flds
call
ret
xchg
push
test
xchg
pop
jb
and
mov
mov
sub
mov
and
or
add
or
cmp
push
adc
loop
je
push
jno
scas
inc
imul
or
js
fsubrs
xor
sbb
push
enter
incl
and
inc
or
xor
int3
in
sub
and
sub
shl
imul
subb
leave
mov
dec
divb
pop
add
add
pop
xchg
pop
ss
add
movsb
xchg
test
jbe
jno
lds
test
outsb
sbb
not
ss
add
add
adc
adcl
pusha
pop
inc
je
mov
cmpsl
subb
jl
dec
sbb
sub
ficoml
cwtl
and
aas
jmp
arpl
pop
push
loope
inc
xchg
fnstcw
sbb
adc
inc
jns
movsb
enter
lock
jo
and
add
test
test
adc
xchg
into
add
imul
es
test
push
ficomps
leave
mov
or
js
jl
cld
lcall
jno
fabs
and
mov
adc
adc
jge
or
push
push
loop
je
xchg
out
xor
ljmp
inc
dec
push
sbb
pop
dec
or
inc
shll
xchg
push
push
arpl
mov
adc
mov
mov
add
shr
dec
rcrb
movsl
cmpsl
scas
push
lods
mov
dec
flds
inc
jno
pop
bound
sbb
dec
mov
jp
push
mov
mov
negl
add
aam
mov
push
inc
mov
mov
push
pop
call
bound
leave
mov
les
mov
adc
add
pop
mov
and
mov
mov
push
adc
cmpsb
add
dec
js
mov
or
push
pop
aam
movsl
les
mov
pop
add
imul
inc
inc
test
sbb
test
pusha
cs
or
adc
mov
test
xchg
mov
pop
push
add
inc
mov
mov
call
push
pop
dec
add
xchg
sbb
pop
sub
andb
pop
je
imul
add
lds
xor
xor
mov
jb
sbb
push
or
filds
jmp
push
and
sbb
lea
sbb
call
xchg
andb
movsl
paddq
push
movsbl
cmp
and
fadd
mov
adc
mov
stc
mov
adc
xchg
cmpsl
cmp
xchg
mov
inc
aam
mov
mov
inc
pushf
and
push
aas
aaa
scas
push
rorb
push
add
in
xor
mov
push
fs
mov
ljmp
add
fisubrs
push
push
aas
hlt
or
lea
jmp
mov
sbb
jle
mov
sti
rcrb
or
arpl
addl
and
and
pop
fs
seto
testl
jle
pop
pop
push
pop
fldl
les
jns
xor
popf
jecxz
adc
pop
call
gs
pop
xor
mov
pop
in
loopne
clc
in
mov
roll
mov
cld
test
dec
in
xlat
fdivl
sub
aam
repz
mov
test
test
push
pop
dec
rclb
test
das
mov
xor
or
test
pop
rclb
daa
mov
fdivrl
dec
in
xchg
popf
inc
adc
and
inc
test
add
add
cs
mov
mov
inc
xchg
fs
adc
cmp
xlat
bound
xchg
push
cmc
mov
cltd
je
xor
mov
jno
popf
sbb
mov
or
xor
or
pushf
cmp
adc
push
subl
mov
test
push
add
dec
inc
insb
mov
ja
lods
dec
shrl
ret
popf
push
mov
out
add
daa
clc
dec
inc
xor
ret
lods
pop
sbb
pop
test
lods
sbb
jp
add
cmp
test
jo
jb
jmp
shrl
lea
and
inc
mov
xor
enter
adc
or
jne
pop
shl
dec
inc
shl
adc
jecxz
js
dec
inc
lods
test
rcl
dec
adcl
xchg
pop
xchg
popa
sbb
mov
dec
xor
imul
and
insl
sbb
add
addb
test
or
daa
nop
or
push
mov
fmull
test
jle
pop
mov
in
or
and
xor
inc
or
sub
jb
push
add
or
mov
mov
rcl
lods
popf
in
adc
scas
push
test
push
jb
add
lds
jmp
ficoms
add
mov
test
cmp
xor
pop
cmpsb
mov
or
repz
and
push
mov
dec
jecxz
aaa
pushf
pushf
lea
dec
inc
ror
cmp
push
insl
sbb
mov
cmp
or
outsb
add
and
leave
or
fstp
fmull
adcb
jae
and
aam
add
pop
and
push
repnz
pushf
jg
or
sub
cmp
inc
inc
push
pushf
adc
inc
cmp
xor
sub
scas
std
jbe
add
xor
loop
mov
push
shl
dec
imul
jl
icebp
xchg
shr
jns
push
push
lret
ret
mov
xor
ja
pushf
sbb
adc
cmc
jno
fnstenv
in
mov
cmp
fcompl
repz
addl
fwait
jne
sbb
xor
mov
push
outsl
lods
in
adc
push
fs
sbb
loopne
dec
movsb
xor
xor
popf
mov
adc
scas
stos
xchg
xor
sub
loop
ret
js
push
decl
or
fwait
xchg
add
orb
xchg
add
adc
jmp
outsb
jno
jo
pop
test
mov
jecxz
in
mov
xor
ret
das
xchg
sbb
pop
inc
cmovp
call
nop
push
in
jo
pushf
notl
mov
ret
mov
inc
stos
insb
inc
je
cmp
test
cmp
or
cwtl
or
jmp
pusha
lret
or
loopne
xchg
js
xchg
ret
xor
lcall
add
mov
stos
jnp
inc
mov
daa
pop
mov
and
lcall
into
and
dec
or
adcb
lcall
pop
inc
push
enter
cmp
rolb
js
add
icebp
mov
mov
sub
and
jmp
sub
ja
stos
adc
or
testb
mov
inc
sub
mov
test
adc
push
cld
aaa
mov
adc
pop
adc
lods
pop
dec
jmp
dec
inc
call
inc
insb
sti
dec
xor
xor
in
int3
or
jecxz
test
cltd
xchg
in
mov
jmp
repnz
cmp
push
repnz
lods
cltd
das
mov
push
je
dec
add
sbb
adc
xchg
pop
sbb
xchg
clc
jl
sbb
out
cltd
xchg
cltd
cmp
cmp
jl
sbb
push
xor
sbb
xor
adc
cltd
lds
in
rorb
call
and
inc
sub
mov
ss
or
push
and
and
lea
int
adcl
popf
push
mov
inc
jmp
movsl
adc
call
sub
add
rolb
test
mov
add
mov
and
mov
cmpsl
lock
fwait
aaa
test
sbb
dec
mov
out
and
test
arpl
enter
dec
and
or
push
sbb
stc
cmpsb
adc
clc
test
cmpsb
mov
add
lock
imul
push
inc
sbb
cwtl
in
adc
jb
daa
xor
lea
and
add
rorl
movl
cwtl
daa
jo
cmpsl
sbb
cwtl
xchg
xchg
mov
movsb
sub
lods
mov
pop
gs
add
jge
jb
scas
push
leave
rcr
and
xchg
out
rorl
xchg
aas
jne
mov
sbb
cmpb
mov
push
push
lahf
and
xor
or
imul
loopne
push
mov
addl
jns
mov
push
cmp
cmp
bound
jmp
dec
jo
dec
inc
cld
cmp
and
pusha
lods
adc
mov
push
add
mov
sbb
cmp
lods
dec
xchg
xor
or
mov
add
xchg
and
nop
dec
lods
fistpl
or
pop
cmp
dec
sbb
cmp
and
xor
mov
lea
in
je
inc
fisubl
shlb
rolb
popl
mov
mov
leave
xor
add
cli
or
fimuls
inc
call
into
jae
and
les
sbb
sbb
cmp
pop
mov
movsl
push
add
pop
push
nop
inc
xchg
dec
or
inc
outsb
ss
inc
adc
mov
mov
xor
inc
fstl
push
xorl
xor
jge
inc
inc
mov
sbb
call
add
ret
add
adc
sub
dec
add
into
clc
outsb
add
jae
mov
shr
lret
cmp
pop
popf
loope
xchg
mov
stos
loopne
in
sub
addr16
jb
rcl
adc
rclb
sub
pop
int3
lea
loopne
mov
adc
cs
or
push
ljmp
nop
rol
dec
insb
mov
sti
ret
push
and
test
pop
xchg
popf
lds
xor
ss
cmp
cmp
and
cmp
sub
ret
sbb
or
popa
pop
sub
fmul
imul
add
or
fsubr
jmp
cmp
push
mov
push
adc
shl
or
or
icebp
add
daa
jecxz
add
inc
push
adc
sub
add
xor
jle
mov
bound
push
rclb
loopne
and
dec
cld
cltd
push
mov
nop
popf
in
xor
adc
xorl
faddl
mov
dec
mov
jnp
daa
aad
or
ficompl
aaa
pusha
sbb
push
mov
dec
push
test
add
pop
xchg
push
xchg
mov
testl
jne
sub
add
inc
sbb
sub
cwtl
jmp
sub
and
cmp
or
add
scas
cltd
insl
aaa
add
jbe
and
or
cmp
jb
xor
push
mov
pusha
and
sti
cmp
insl
sub
jmp
inc
js
pop
sbb
dec
xchg
xor
mov
test
nop
and
xor
mov
in
push
js
test
and
mulb
xchg
sbb
inc
adc
mov
out
mov
fs
sub
fisttpl
lock
push
sub
xor
push
pop
cwtl
xchg
add
dec
dec
aad
add
paddq
cmp
adc
lds
adc
cmp
mov
sbb
add
mov
jle
add
out
in
mov
mov
rcll
and
inc
mov
icebp
orl
ja
push
fistpll
popf
lock
mov
xor
mov
inc
cmp
or
fdivl
adc
cld
or
shlb
cmp
add
or
mov
jbe
aaa
xchg
daa
mov
je
popa
pop
nop
mov
add
mov
add
dec
mov
jno
sub
fadd
add
sbb
push
adc
call
test
or
adc
nop
cmp
push
adc
sub
push
mov
loopne
iret
sub
pop
je
jns
sbb
sbb
faddl
xor
data16
mov
xchg
rol
pushf
adc
push
mov
xchg
or
push
test
aam
mov
call
ds
scas
jmp
pushl
pop
push
push
push
xorl
xchg
cmp
jl
addb
cld
xor
rcll
inc
and
bound
and
jb
sbb
js
and
hlt
mov
mov
int3
dec
mov
push
testb
addl
mov
test
dec
or
mov
lea
clc
mov
push
jmp
mov
pop
adc
add
dec
push
jns
push
lods
int3
or
add
add
js
std
jecxz
mov
pop
cli
jl
js
popf
fistps
mov
push
scas
dec
daa
out
sbb
dec
lods
and
jne
or
sbb
push
sbb
loop
in
and
inc
push
xor
les
xorl
and
adc
sub
lock
mov
push
cwtl
jecxz
icebp
test
mov
les
push
mov
pop
movb
lds
lahf
loopne
into
mov
rorb
sti
sbb
and
jne
jge
pop
add
mov
xchg
icebp
bound
or
data16
aas
mov
or
enter
or
mov
push
in
jb
sbb
xor
fadds
roll
pop
add
andl
rolb
add
inc
mov
sbb
push
xchg
pop
xlat
jle
ja
insb
rcr
repz
cmp
loopne
loope
ficoml
fwait
mov
add
int
mov
jle
mov
add
idivb
popf
adc
pop
inc
cmp
jl
andb
adc
es
push
mov
cmp
sbb
push
jne
cs
mov
stc
or
sub
dec
rorb
or
add
sub
pop
dec
or
dec
dec
inc
lock
xlat
enter
out
sub
cmpl
out
aaa
adc
mov
outsl
add
sbb
jne
mov
idiv
leave
sti
or
mov
jne
mov
iret
sbb
add
mov
pop
add
in
lods
adc
mov
loope
pop
sbb
repz
inc
test
and
and
add
div
adc
mov
je
fs
pop
dec
ret
scas
lret
int3
loop
push
mov
les
adc
push
arpl
xor
xchg
pop
sbb
and
pop
pop
insl
sub
inc
and
lret
dec
add
push
das
cmp
sub
in
aaa
add
add
mov
fmuls
or
loopne
cld
add
adc
push
clc
in
pop
jl
mov
inc
idivl
test
jg
mov
and
pop
pop
ret
or
mov
decl
and
lock
mov
fmuls
hlt
push
hlt
mov
pop
xor
shl
mov
xor
add
je
mov
mov
pop
or
adc
dec
adc
pop
sub
or
loopne
mov
fxch
cld
xor
xor
into
xor
je
popf
loopne
mov
lds
pop
movl
aam
jnp
sub
into
mull
scas
or
mov
test
dec
mov
imul
inc
cmp
xlat
jmp
sbb
je
or
mov
out
push
test
mov
lret
and
adc
pop
push
leave
sbb
pop
mov
adc
dec
xchg
inc
sbb
pop
mov
mov
lret
mov
es
sub
xchg
push
add
cmc
push
cmp
push
test
sub
icebp
inc
sub
out
pop
mov
movsb
aas
xor
mov
and
dec
cli
outsl
adc
gs
push
push
xorb
or
xor
pusha
les
xchg
gs
or
outsl
scas
xor
sbb
sbb
inc
inc
pusha
cmp
jne
mov
xor
adc
sub
and
dec
aam
inc
inc
popa
jb
sub
add
pop
gs
int3
ret
jae
add
pushf
ret
sbb
cmp
ss
loope
inc
imul
add
sbb
xchg
push
sub
xchg
sbb
je
adc
xorb
sbb
xorl
push
or
lea
add
sub
popf
jecxz
push
loop
pop
mov
mov
leave
ret
cld
jg
mov
addb
cmpw
pop
jne
shlb
adc
mov
inc
push
add
and
pop
rol
test
xor
idivb
push
sbb
cld
jbe
scas
sub
cmp
adc
jo
nop
shrl
test
mov
dec
pop
inc
and
dec
push
dec
adc
push
fadd
enter
push
loopne
lds
vminps
sbb
loopne
nop
inc
xchg
push
inc
rcr
xorb
in
jb
lds
and
add
or
add
jae
js
fs
sbb
mov
loop
arpl
add
in
in
loopne
mov
inc
or
sub
xchg
or
and
mov
scas
jb
call
cmp
mov
cmp
lcall
pop
mov
xchg
or
and
rclb
dec
and
mov
add
lds
jo
xchg
pop
shll
lods
ds
pop
push
jo
hlt
addr16
mov
loopne
sub
add
sbb
mov
dec
mov
aam
add
push
cs
movsb
lods
mov
ret
nopl
nop
push
fs
test
jo
push
sub
hlt
jne
jmp
inc
adc
adc
mulb
inc
jmp
mov
imul
sub
mov
imul
adc
ficoms
sti
or
mov
adc
in
sti
inc
inc
and
push
dec
push
hlt
int
sub
je
dec
test
or
loopne
das
jnp
mov
xlat
or
jmp
push
jmp
aad
adc
imul
or
xor
data16
adc
outsl
xchg
scas
xchg
rcrl
pop
out
xor
adc
sbb
clc
inc
testl
sbb
cmc
add
push
or
or
push
aad
jge
call
fcmovnbe
sti
ret
mov
jge
push
inc
add
dec
jb
insl
roll
xchg
cs
or
cs
mov
push
data16
out
cmp
xlat
std
loop
jle
jne
push
cmpsl
add
addr16
test
mov
call
or
aam
mov
push
push
test
fdivrl
rorl
rcrb
imul
fcmovnbe
inc
add
bound
jp
mov
out
inc
mov
fcompl
pushw
in
add
rcll
sub
es
mov
and
mov
icebp
loop
xchg
dec
hlt
dec
loope
das
ror
mov
sub
jmp
jnp
movsb
pusha
sub
in
sahf
arpl
sbb
into
pop
jmp
std
xor
cmc
sbb
arpl
sub
pusha
sub
push
stc
or
je
clc
push
scas
or
inc
inc
mov
cmp
outsb
or
outsl
ja
data16
xchg
sbb
pop
mov
aaa
scas
fs
insl
je
inc
dec
bnd
pop
or
mov
les
cmp
xor
cmp
cld
add
cmp
cmp
daa
ljmp
add
fists
jg
push
cmp
or
sub
jmp
cmp
jne
mov
and
stc
pop
cli
sti
cld
or
std
or
jmp
cmc
test
sbb
inc
cmp
mov
jbe
bound
inc
mov
es
push
add
cli
pop
xor
adc
mov
movsl
mov
jne
push
dec
cs
test
add
xor
scas
inc
jmp
das
jne
je
sub
or
es
mov
jae
mov
popl
test
sahf
ret
test
add
inc
and
test
js
or
dec
ds
subl
lock
pop
xchg
call
leave
js
dec
adc
loopne
cwtl
adc
inc
aaa
adc
cld
or
mov
and
adc
push
sub
fimuls
je
aaa
je
sti
mov
dec
data16
and
lods
aam
pop
add
cmp
imul
dec
adc
dec
dec
push
add
cmp
repz
lea
test
out
icebp
stos
and
dec
hlt
pop
sahf
loopne
jno
inc
adc
push
sub
ja
cmp
adc
push
xor
lock
add
adc
ret
mov
mov
or
sbb
pop
pop
add
pop
pop
pop
cmpsb
add
leave
jne
inc
mov
call
add
add
in
insl
jb
js
push
adc
push
in
sti
testl
jne
inc
mov
jbe
mov
shr
jo
fisttps
cmp
or
inc
cmove
add
sar
rclb
xchg
dec
xor
push
mov
sub
xchg
mov
add
xor
xchg
fwait
or
xchg
xchg
add
inc
test
xlat
cs
cld
adc
mov
iret
adc
xchg
or
or
imulb
push
inc
lea
sbb
jnp
xlat
aas
or
jle
adc
popa
push
or
mov
mov
lret
mov
ret
adc
repnz
dec
cs
xor
dec
sbb
pop
arpl
sub
pop
or
push
mov
test
test
pop
push
push
sarl
cmp
pop
cmpsb
push
add
jmp
lea
mov
or
sub
add
mov
sbb
pop
enter
push
jno
pop
mov
fadd
cwtl
test
sbb
ret
imul
in
fld
enter
inc
test
push
pop
notb
add
inc
pop
clc
inc
mov
rorl
xor
mov
je
popa
inc
sub
mov
nop
pop
adc
out
mov
jecxz
dec
xorl
jo
xor
ret
xchg
popf
and
push
mov
test
lret
jno
xor
dec
mov
push
jmp
xor
in
add
xor
pusha
jg
fisubrs
cmpb
push
mov
loopne
pop
mov
scas
shll
adc
test
jae
sbbl
sub
popf
lods
movb
pop
adc
les
cmp
scas
push
push
loopne
mov
sub
test
xor
cmp
dec
out
xor
adc
outsl
and
das
inc
add
orl
push
push
inc
lahf
add
inc
scas
fldl
pop
or
sbb
xchg
inc
sub
mov
mov
or
mov
jne
push
cmpb
mov
nopl
xchg
test
add
and
xchg
add
dec
je
inc
enter
lock
mov
mov
inc
andl
inc
fildl
mov
addr16
and
pop
pop
fistpl
ret
je
jnp
adc
or
xchg
leave
mov
xor
cs
jns
sbb
jns
out
xor
rorl
jo
aaa
and
and
in
roll
push
in
sbb
dec
lods
push
clc
push
pop
andb
pop
and
js
and
and
cli
push
fmuls
mov
lock
add
jge
loop
inc
pop
sub
mov
jbe
loopne
outsl
sbb
adc
js
push
and
fldenv
xchg
leave
and
jnp
leave
je
cld
jne
jns
push
mov
test
push
pcmpeqb
adc
inc
push
nop
icebp
sarb
sub
cmp
xor
inc
pop
push
les
pop
inc
mov
dec
or
jg
push
frstor
dec
popa
fisubrl
loope
cld
and
mov
sti
sarl
arpl
mov
inc
les
shrl
cltd
int3
clc
roll
xor
dec
sbb
je
inc
ss
mov
mov
sub
add
sbb
xorb
sbb
sbb
cmpb
dec
push
popa
ljmp
jmp
adcl
popa
mov
aam
test
dec
scas
push
in
adc
shr
pop
jo
lock
inc
pop
in
cld
leave
sbb
jb
popf
and
sbb
sub
xor
xor
bndstx
cmp
hlt
jb
push
xrelease
movsb
mov
mov
movb
icebp
test
jbe
jge
setbe
aaa
xor
jmp
push
ljmp
mov
sub
imul
add
cmpsb
add
rolb
clc
and
xchg
mov
sbb
jp
clc
mov
adc
test
fmul
inc
jb
int3
shlb
call
repnz
push
pop
aaa
mov
xchg
mov
mov
aam
mov
pop
hlt
aas
lea
sahf
xor
mov
pop
add
adc
test
cmpb
and
and
sub
xchg
iret
add
dec
out
scas
xchg
shl
adcb
out
add
pop
and
sub
sbb
lods
ret
not
sbb
jg
mull
mov
jl
push
or
add
data16
sbb
jl
imul
cmp
ret
jle
jne
jmp
xor
jmp
loope
aam
ffree
xor
adc
and
sub
sbb
cmp
mov
and
add
or
cmp
pop
xor
adc
int
inc
inc
movntps
pop
std
insl
test
mov
cltd
movsb
and
push
sbb
push
aas
adc
sbb
or
mov
sub
xlat
jb
cmp
ja
xor
push
pop
icebp
jg
fmull
test
pop
ja
jb
subl
incb
add
and
push
inc
inc
sahf
xchg
out
cmp
xor
es
out
imul
fisttps
or
jae
pop
sub
pop
sbb
add
adc
and
dec
sub
adc
xor
push
cmp
adc
movsl
xor
inc
push
and
ret
sub
les
es
jo
cmp
ret
jns
or
mov
popa
maskmovq
mull
xor
push
mov
and
add
clc
xchg
jae
movsb
nop
rol
pop
jne
cmp
and
add
lret
std
es
test
mov
push
push
dec
sub
mov
mov
xchg
push
movsb
es
add
mov
lea
sarb
out
aaa
jp
stos
movsl
cld
hlt
add
xor
inc
jne
outsb
lret
sbbb
imul
aam
push
nop
push
mov
pop
push
xchg
mov
inc
shlb
aaa
movsb
ret
nop
movsb
cmp
sub
pop
sub
dec
enter
fildl
xchg
xor
inc
fmulp
popf
daa
leave
xor
repnz
clc
adc
xor
stc
aas
cmpsl
xchg
push
cmp
dec
hlt
push
cmp
lods
and
stos
sti
and
mov
or
inc
decl
jmp
scas
clc
clc
scas
or
or
jbe
xchg
rcrb
mov
mov
mov
push
loope
sti
jl
lods
dec
push
mov
inc
pop
in
mov
add
adc
cmp
inc
pushf
mov
daa
aaa
outsb
cmp
inc
push
jge
adc
push
mov
repz
fildl
mulb
xchg
sub
es
mov
xchg
fnstcw
lods
ret
mov
test
rclb
sub
fcoms
dec
lret
scas
in
inc
sbb
mov
iret
and
repnz
stos
outsb
push
lds
aam
and
push
pop
rolb
mov
in
jmp
aas
icebp
nop
stos
imul
fistpl
iret
pop
and
inc
fnsave
cmp
sub
cmp
cmp
in
loop
int3
adc
sti
dec
and
push
addb
or
xlat
pop
imul
cmp
add
cmp
mov
test
dec
lock
ja
cmpsl
xor
loope
lock
cmp
dec
or
aaa
fadd
or
out
fidivs
adc
lods
cltd
movsb
or
add
sub
push
arpl
loopne
cmp
inc
fldcw
or
and
push
pop
add
sbb
call
aas
or
js
int
lock
or
pop
nop
seto
aas
pushf
scas
adc
cmp
inc
sub
imul
xchg
xor
mov
imul
or
out
pop
xchg
push
in
mov
dec
movsl
dec
jno,pn
repz
lea
pusha
xchg
pop
pop
mov
pusha
dec
enter
adc
dec
mov
mov
aam
cltd
add
es
rcr
mov
push
test
pushf
mov
daa
push
pusha
cmpsl
cmp
xchg
sbb
mov
mov
inc
add
scas
or
push
and
test
repnz
andb
mov
add
int
jge
push
ud1
popf
mov
adc
js
cmp
jne
and
cmc
mov
mov
adc
lock
ret
addb
outsb
jb
xchg
clc
xchg
int
cmp
sbb
fimuls
add
or
incb
push
ja
mov
jmp
sub
pop
xchg
aad
xor
iret
sbb
decl
lea
dec
mov
or
fisttps
xchg
sbb
fbstp
mov
adc
ret
lds
xchg
jo
movsb
cwtl
loop
sub
mov
pushf
das
sbb
nop
xor
mov
and
and
ja
int3
jb
xchg
gs
cltd
cmp
add
mov
mov
in
xor
mov
loope
xchg
adc
inc
dec
mov
hlt
outsl
or
cmp
pop
js
adc
sub
jmp
add
lea
sub
in
sub
cmp
sbb
rorl
jae
xchg
movsb
in
inc
adc
lods
mov
cmp
pushf
test
or
test
js
aad
addl
lea
push
xor
cmp
scas
sarl
push
loop
pusha
les
pop
jnp
inc
and
mov
mov
lea
sub
xchg
and
mov
jmp
icebp
gs
and
jo
push
int
int3
mov
popa
xchg
mov
mov
xor
or
shlb
and
clc
jmp
inc
mov
movzbl
clc
sbb
jp
leave
jb
or
push
scas
xor
dec
add
push
sbb
cmp
imul
mov
push
xchg
sub
lahf
dec
ds
and
pop
or
int3
mov
sbb
and
jg
fiaddl
inc
jnp
cli
stos
movsl
add
push
jne
jne
mov
fsubs
clc
addl
pusha
pop
mov
add
cli
cmp
dec
push
mov
test
xchg
adc
out
movsl
adc
mov
inc
arpl
add
mov
cmp
sbb
popf
andb
inc
dec
pop
aas
ret
cmp
sub
ficoml
sbb
xchg
sbb
std
sbbl
mov
and
pop
mov
mov
gs
insl
int3
jo
aaa
cmp
sub
push
adc
xor
outsl
jae
pop
aaa
sbb
pop
imul
mov
cwtl
aaa
lret
pusha
mov
inc
mov
sub
jo
repz
sahf
or
int
insl
push
jbe
cmc
pop
inc
add
inc
notb
subl
sarb
daa
dec
aas
mov
pop
mov
dec
gs
iret
or
mov
adc
inc
outsl
loopne
sub
dec
jo
cmpl
jne
mov
add
rcrl
add
inc
mov
iret
sub
pop
add
adc
aad
add
dec
cmp
inc
inc
fsubr
xchg
lock
xor
dec
je
inc
inc
inc
rorl
std
pop
ret
mov
pop
xchg
add
nop
icebp
pop
inc
and
and
xchg
test
xchg
loop
popf
sbb
dec
push
xchg
or
out
les
cmp
imul
push
xor
cmp
ret
mov
loopne
mov
xchg
push
sub
and
jno
push
adc
pop
mov
jb
push
inc
pop
mov
stos
dec
jg
inc
rep
orb
mov
xchg
fcmovnbe
cmc
repnz
jae
pop
loope
imul
in
loopne
lret
cmpsb
out
arpl
fs
mov
test
xchg
sbb
sbb
gs
rclb
xchg
push
push
loop
xorl
mov
or
lret
in
add
or
dec
sub
hlt
dec
imul
stos
and
dec
push
push
out
sbb
push
mov
or
pop
inc
mov
cld
orl
sbb
fwait
adc
xor
xor
cmpsl
and
test
nop
mov
scas
sub
aam
and
movsb
mov
xchg
insb
nop
cmp
inc
fstpt
add
sub
shll
sub
cmp
jns
mov
inc
punpckhdq
and
mov
test
loopne
pop
icebp
xchg
inc
test
jo
jecxz
pop
sbb
into
int3
jbe
pop
das
lahf
dec
sub
aad
movzwl
enter
cmp
xor
aam
addr16
sahf
out
loopne
fsubr
arpl
xor
add
mov
push
jmp
push
inc
aaa
adc
pop
jne
loopne
sbb
dec
and
mov
inc
dec
gs
push
add
jnp
ss
into
inc
xchg
or
sub
xchg
cmpsb
es
jne
xchg
ss
pop
fwait
push
cmp
das
lods
dec
push
sub
sub
xor
xchg
mov
stc
test
movsb
jno
adc
jbe
mov
and
popa
popf
and
iret
push
add
xchg
out
fdivl
add
dec
lods
mov
sub
xor
xchg
ffree
arpl
mov
adc
inc
sbb
in
lret
jecxz
lret
nop
or
in
sbb
push
scas
cmp
inc
pop
mov
test
leave
push
mov
pop
xor
js
adc
pop
enter
ja
popf
cmp
call
movb
lea
mov
pop
call
jmp
in
aas
bound
dec
add
sti
inc
inc
cmp
sar
icebp
jb
mov
nop
inc
push
pop
inc
cld
jo
lock
add
in
fcomp
fildll
push
add
push
push
jne
mov
js
or
lahf
add
push
mov
lea
mov
inc
lock
pop
insl
sub
mov
ljmp
hlt
dec
fistl
sbb
push
popa
xor
lods
push
mov
pop
pusha
push
inc
pusha
jne
fwait
inc
test
cmp
nop
sub
push
lret
fcompl
and
dec
mov
jmp
scas
bound
test
je
cmp
je
scas
sub
sub
aas
je
pop
dec
cmp
push
or
arpl
jmp
ljmp
in
pop
stc
inc
mov
mov
jmp
sub
and
dec
mov
pop
adc
inc
inc
mov
in
jmp
sbb
cmp
cmpb
repnz
ljmp
and
push
add
xchg
or
push
push
mov
rorb
bound
lock
cmpb
mov
out
aam
or
sti
pop
imul
dec
test
push
icebp
push
in
cmp
sub
dec
test
decl
sbb
pop
je
or
test
sbb
adc
fdivrs
xor
ret
mov
add
ljmp
stos
cltd
clc
fsubrl
or
stc
cmp
mov
rolb
sbb
xchg
add
push
adc
push
mov
cmp
mov
or
jne
adc
jnp
push
cmp
jne
jmp
inc
mov
leave
jecxz
and
and
shll
out
movsb
mov
or
pop
push
push
cld
test
mov
jmp
pusha
je
adcl
lret
mov
add
jp
sbb
enter
test
push
fstps
inc
mov
repnz
and
adc
pop
test
mov
sbb
push
test
pop
mov
inc
int
pop
jne
movsl
mov
jle
rolb
test
add
add
cld
dec
pop
test
je
loope
ja
loope
add
iret
dec
jmp
sub
jmp
stos
fs
or
stc
or
adc
mov
pop
mov
cltd
out
fld
jmp
sbb
push
inc
xabort
ret
xor
and
jmp
mov
and
inc
jmp
in
inc
cmp
add
cvtdq2ps
scas
pop
ret
daa
push
adc
adc
daa
sbb
aas
out
ss
mov
add
fidivrs
test
je
test
inc
adc
inc
mov
sti
adc
push
add
xor
sbb
inc
and
sbb
out
orb
cmpsb
inc
rcrl
js
xchg
cmpl
mov
in
lock
aas
add
sbb
adc
pop
das
or
adc
mov
mov
repnz
inc
neg
dec
mov
std
adc
pop
cmp
sbb
mov
cld
ljmp
jp
push
dec
mov
cmp
push
jmp
in
sbb
sbb
popa
pop
sahf
and
xchg
sbb
mov
mov
int
aaa
je
mov
pop
sbb
insb
xor
cli
std
jmp
add
sub
fs
sbb
adc
add
shlb
call
mov
inc
mov
jne
inc
pop
cli
lcall
add
and
mov
mov
add
cmp
jbe
or
cmpb
adc
and
pop
jmp
jb
popa
and
pop
jo
jle
fs
mov
jb
pop
add
das
pop
imul
lea
push
in
sbb
addb
dec
imul
push
shlb
rcrl
mov
sti
inc
add
lods
adc
cmp
dec
sahf
gs
dec
add
add
nop
inc
inc
inc
inc
jle
dec
dec
shll
sub
sbb
lcall
mov
mov
push
call
imul
mov
clc
clc
cld
cld
lea
fiadds
add
add
adc
loopne
push
jl
imul
pop
xor
mov
repz
sbb
ret
out
arpl
je
iret
jl
cld
jmp
mov
xchg
or
lock
test
mov
pop
stc
pushf
sub
jo
nop
or
sub
cmp
push
push
fildl
jne
add
dec
jns
mov
aas
inc
push
in
pop
out
add
push
mov
dec
dec
push
out
inc
lds
pop
mov
mov
dec
rcr
movsb
or
push
mov
int3
cmpsb
cltd
das
sbb
lcall
adc
adc
cmpsb
imul
aaa
sub
add
add
or
sbb
das
lsl
lds
es
inc
aas
cld
jge
mov
or
std
inc
icebp
add
lock
add
sar
and
pusha
add
andb
loope
icebp
in
add
jecxz
test
pop
or
add
mov
xchg
adc
add
inc
sbb
ds
je
add
int
pop
roll
mov
je
jmp
lea
stos
sub
ret
adc
sub
cld
incl
mov
push
test
inc
leave
sbb
or
mov
lcall
add
mov
cmp
sbb
lret
je
rep
je
cmp
imul
les
int
cmp
and
test
test
das
clc
jae
mov
mov
inc
add
ret
iret
xor
pop
stc
or
add
clc
ds
cmp
jne
or
cmp
and
ficompl
shll
cmp
jne
sub
adc
sub
rorb
out
scas
sbb
shl
inc
ret
jbe
add
add
jmp
add
imul
leave
rcll
mov
adc
mov
inc
jg
mov
movsl
cmp
loopne
mov
aaa
test
sti
aaa
add
add
movzbl
push
cmc
sti
sub
mov
add
movsl
ja
hlt
push
or
inc
jmp
sub
ja
movsb
pop
pop
sub
jne
push
arpl
rcr
fildl
add
fisttpl
mov
insb
jl
push
fwait
lea
pusha
jmp
cmp
ret
jne
mov
jg
mov
data16
fdivrs
dec
sub
and
sbb
and
sbb
fstl
sti
mov
xchg
in
sbb
jmp
js
or
sbb
orl
ret
jo
ja
addb
or
shl
andb
inc
add
call
stc
das
je
or
cmc
dec
ja
jne,pn
ss
jge
cli
mov
iret
cli
push
je
out
jno
sub
je
sub
cmp
jb
daa
pop
or
and
orb
jnp
dec
adc
mov
lock
add
in
cld
je
fs
fiadds
adc
out
sbb
sbb
lret
loopne
dec
lock
push
int
jmp
xlat
inc
adc
cmp
fsubrs
ret
inc
push
aas
stc
sbb
push
dec
add
mov
sbb
push
push
pop
mov
push
push
lcall
push
je
rclb
jecxz
xor
cmp
push
inc
mov
xorb
adcl
enter
mov
adc
mov
sbb
jp
mov
cmp
inc
adc
and
gs
push
insl
test
cmp
insb
nop
shl
lret
jp
fidivrl
ds
aas
push
jmp
out
test
ret
cmp
inc
mov
lea
and
stos
xchg
fisttps
int
pop
pop
insb
repz
pop
mov
xchg
push
cli
fsts
lods
movsb
jg
jmp
xor
fcoml
inc
push
pop
add
gs
sbb
fstl
mov
test
out
ss
adc
test
mov
and
cmc
mov
sbb
outsl
jge
pop
jmp
arpl
push
mov
sbb
lock
or
adcl
cwtl
jp
sub
stos
loopne
inc
std
push
pop
mov
mov
lret
and
hlt
sbb
dec
add
jecxz
inc
add
in
inc
add
in
loope
nop
out
in
lret
test
into
pop
push
shl
shr
mov
ficompl
clc
test
je
test
adc
fbld
lret
inc
push
dec
pop
shl
dec
shll
and
pop
test
mov
ja
lods
sbb
clc
lea
shr
dec
leave
lea
add
cmp
inc
shl
outsl
rclb
adc
roll
push
jne
or
push
cmpsl
shl
push
adc
mov
xor
jg
xor
pop
loopne,pt
mov
and
ja
sbb
or
roll
pop
sbb
mov
push
jne
add
add
inc
cld
cmp
cmc
mov
cmp
je
shll
and
fdivl
aam
xchg
pop
arpl
outsb
or
sbb
shlb
aas
xor
jg
ss
ljmp
cmc
rorl
les
jmp
or
inc
add
push
jmp
mov
rolb
xchg
mov
mov
pop
outsl
push
jne
andb
cmp
jne
lcall
mov
xchg
mov
ret
mov
insl
lock
test
mov
inc
cmp
shlb
adc
lahf
loopne
add
jmp
ret
jne
lea
mov
pop
push
jecxz
cwtl
sub
and
loopne
mov
sub
mov
bound
mov
and
mov
cmp
jbe
push
loop
faddl
or
int3
or
pop
jbe
or
stos
ret
push
sbb
sbb
mov
add
xchg
ss
cmp
js
clc
xchg
adc
mov
pop
push
rcl
test
addl
jl
adc
imul
or
xor
rcll
jbe
es
adc
mov
lahf
sbb
sub
stc
mov
stc
ss
insb
pushl
sub
jle
add
faddl
ffreep
ret
jmp
cmp
jb
mov
xor
mov
adc
fldenv
sbb
mov
sarb
aaa
xor
fsubr
sbb
ret
add
push
addl
or
and
test
punpckhwd
jo
mov
add
or
or
push
fmuls
mov
pusha
xchg
ljmp
and
or
cmc
loopne
xchg
pop
sbb
imul
ret
std
dec
mov
sahf
xchg
mov
jae
in
ss
aas
cld
mov
je
mov
cmp
push
dec
push
cltd
test
shlb
adc
ja
aaa
sub
lahf
pushf
and
popf
mov
fs
inc
push
nop
lea
fldenv
cmp
xchg
xor
xchg
daa
jne
cmpl
test
leave
mov
nop
adc
std
sbb
adc
ja
divb
cmpsl
popf
xor
cmp
roll
add
push
pushf
cmc
jae
mov
shll
mov
cmpsl
ret
xor
imul
test
jne
sbb
shlb
add
add
ret
or
adc
psubusb
inc
mov
sbb
add
xor
jmp
dec
sbb
and
sbb
ljmp
ret
rorl
push
jecxz
aaa
jecxz
xchg
push
inc
sqrtps
xor
enter
push
jns
mov
ja
or
std
jno
loopne
ret
stos
sbb
sbb
lods
popa
dec
adc
out
enter
inc
imul
adc
loope
xor
cmpsb
mov
aam
jno
movsw
sbb
dec
sbb
push
stc
jmp
scas
andl
lods
fisttps
jo
pop
mov
and
scas
das
dec
and
fmuls
inc
sbb
filds
mov
test
inc
xlat
or
clc
adc
add
or
add
sti
sti
sub
jmp
sti
sbb
cmp
adc
add
fdivrs
jb
aam
fwait
jno
sub
loopne
lock
xor
incl
dec
dec
or
dec
pop
enter
fildl
add
pop
sub
cmp
or
push
out
mov
adcw
inc
dec
jo
jp
cmp
out
loope
mov
insl
xor
icebp
pop
jno
popa
push
test
and
pop
imul
cmc
dec
testl
testl
adc
add
pop
xor
std
outsl
mov
push
mov
mov
mov
push
sub
inc
xchg
rcll
jo
sarb
cmp
js
adc
popa
sahf
addb
fwait
rcrb
aas
test
mov
mov
sbb
push
jne
loop
and
fs
and
mov
push
mov
cmpsl
or
cltd
xor
pop
mov
xchg
clc
push
fisubl
add
es
call
jmp
rcr
or
jne
div
mov
ficompl
inc
inc
mov
out
shll
cmp
or
cmp
add
pop
fisubl
mov
psubusw
icebp
and
push
mov
dec
sub
sbb
push
xchg
mov
or
shll
jbe
and
std
add
push
or
neg
sbb
stc
add
push
dec
pop
aam
andl
sbb
leave
ror
leave
mov
sbb
sbb
sbb
dec
ret
jle
adc
xor
loope
mov
jmp
icebp
push
cltd
fs
adc
js
cmpsl
inc
dec
jmp
pop
sar
and
and
inc
add
cld
jne
cli
rclb
jg
adc
or
inc
xchg
sbb
jmp
mov
icebp
cmp
add
mov
jno
sub
inc
adc
sti
and
std
sub
xchg
ja
pushl
add
xchg
or
pop
pop
sbb
sub
jo
pop
mov
or
decl
xor
pcmpeqw
fucomip
inc
inc
dec
sub
jne
mov
mov
adc
xor
or
xor
shlb
sub
cmpsl
ljmp
mov
dec
adc
cmc
in
push
fcmovu
popa
sub
sbb
jno
sbb
mov
xor
mov
mov
cmp
jne
sbb
pusha
mov
cmp
jne
or
loop
movsl
testl
icebp
loopne
jno
lret
mov
dec
mov
js
call
loop
xchg
xchg
push
das
or
inc
jl
cld
adc
mov
in
mov
and
es
bts
fistps
and
or
shlb
ret
movsb
int
pop
and
jno
adcb
std
jmp
mov
scas
insl
clc
jmp
cmpb
aad
or
pop
or
or
lcall
insb
adc
push
jp
out
pop
ret
scas
lret
push
lea
out
pop
add
or
imul
jmp
jmp
inc
or
in
inc
mov
loope
inc
inc
data16
jg
imulb
rcl
dec
ljmp
pop
push
add
add
xor
pop
icebp
jne
jg
mov
push
xchg
xor
or
enter
mov
andb
mov
inc
inc
outsl
in
jbe
lock
inc
daa
jecxz
push
push
jae
mov
xchg
or
push
ret
sub
jp
popa
imul
dec
sbb
hlt
mov
pop
outsl
mov
sqrtps
add
inc
dec
cmp
icebp
scas
test
ficoms
ret
lods
mov
xchg
jne
jmp
pop
or
ljmp
dec
inc
sub
hlt
aaa
int3
pop
dec
je
shll
incb
dec
add
shrb
and
lea
out
int
jbe
aaa
push
mov
add
or
nop
add
cmp
adc
push
add
rorb
push
add
mov
idivb
fcoml
mov
lea
or
std
add
lock
mov
das
sub
cmp
push
push
sub
dec
mov
and
mov
push
int3
mov
scas
movb
pusha
pop
add
xchg
cmpsb
add
mov
repz
inc
sub
or
sub
add
rolb
push
or
incb
add
and
dec
imul
and
mov
lock
jp
hlt
add
mov
je
adc
testb
sbb
push
cmp
push
cmp
and
or
pop
adc
add
adc
cmovb
add
dec
fcomps
lods
add
mov
mov
push
jns
repz
mov
sub
loope
or
adc
or
mov
jle
fisubl
push
dec
ret
push
mov
orl
lea
aas
or
jb
repz
std
jle
jl
lret
out
imul
add
mov
sahf
xchg
rorb
mov
cmp
sar
shl
rorl
out
lock
add
dec
sub
sarb
sbb
std
ds
lcall
ja
and
cmpsb
and
mulb
test
and
std
xlat
mov
pop
neg
sbb
neg
ja
daa
mov
fcomi
mov
pop
fnstenv
imul
xchg
mov
pop
add
xchg
cmp
pusha
dec
sub
push
and
cmp
lods
or
mov
push
inc
jecxz
mov
jg
subb
sub
mov
dec
repz
mov
inc
ljmp
cmpsl
dec
clc
dec
not
mov
cmp
cmpl
jmp
popf
push
gs
rcrl
out
push
loope
and
pop
add
cmc
imul
push
test
pop
and
aas
bound
adc
mov
sbb
mov
cwtl
and
sbb
lods
jmp
xchg
add
icebp
mov
mov
repnz
add
xor
push
cmpsl
cs
dec
inc
push
loopne
xchg
std
rorb
jle
loope
out
fildl
out
mov
shl
add
adc
xchg
lcall
jecxz
pushf
into
dec
sub
fwait
pop
and
incl
sub
mov
xchg
mov
and
cli
dec
push
rorb
cmpsb
xorb
rol
mov
aam
sahf
lock
pushf
cmpsl
icebp
pushf
test
lods
test
lods
sub
lock
push
jl
and
or
cwtl
push
push
outsl
mov
sub
lea
lock
mov
mov
lds
adc
imul
mov
push
lods
jne
adc
mov
pop
and
adc
jne
jo
pop
push
andl
adc
fildl
addr16
fmuls
and
mov
jb
xor
mov
add
or
and
insb
fsubrp
lods
xchg
pusha
jne
incb
jns
int3
pop
mov
or
push
je
test
ds
cwtl
insl
std
inc
pop
push
mov
dec
adc
jle
adc
inc
mov
pop
or
push
mov
lret
jge
jecxz
sar
loope
daa
loopne
inc
jge
hlt
dec
ror
js
mov
or
testb
leave
add
popa
mov
dec
or
and
mov
cli
cmp
pop
adc
dec
push
sarl
and
jle
xchg
cmp
pop
cmpsl
dec
add
mov
inc
inc
xchg
je
int3
in
mov
cltd
push
mull
push
or
rclb
cld
ds
push
in
jl
jl
or
push
cmp
sbbb
mov
pop
test
mov
pop
outsl
sarb
ja
std
add
stc
xchg
inc
mov
add
xchg
loopne
cld
fcoml
fsubl
sub
cmp
add
pop
fadds
sbb
cmp
or
add
and
enter
add
sub
xor
add
cli
dec
mov
outsb
fdivrs
lea
lea
loopne
rorb
inc
in
roll
sar
int
lea
jmp
stc
jge
xor
jb
lock
jle
mov
imul
je
insb
jno
push
jo
mov
jno
sti
dec
and
aas
ss
cmpb
jne
inc
inc
dec
adc
xor
out
xor
shlb
cmp
adc
sbb
cmp
test
rorb
sub
clc
addr16
adc
test
mov
and
ret
js
call
xchg
xchg
fidivl
insb
and
sbb
pop
movsb
xor
cmp
push
cmp
mov
pop
pusha
test
inc
adc
or
ret
sub
jae
or
pop
ja
inc
dec
xor
pop
in
rorl
aam
ret
iret
jnp
adc
inc
inc
jmp
inc
int3
add
es
lods
and
lea
sbb
sub
adc
fs
mov
int3
adcb
cmp
or
adc
ror
jo
add
out
hlt
shlb
push
dec
xor
xor
or
stc
call
mov
mov
mov
xchg
lea
pusha
subb
je
mov
leave
sub
pop
pusha
cmp
je
movswl
shr
ror
movsl
clc
fchs
imul
cmp
mov
je
adc
jmp
add
addr16
mov
mov
lahf
sub
dec
mov
sub
sub
cmp
mov
dec
lock
out
add
or
imul
mov
mov
inc
ret
xor
jne
je
and
sbb
mov
stc
icebp
nop
dec
xor
roll
add
sahf
or
std
jo
faddp
data16
inc
mov
leave
cmpsb
repz
cmpb
test
inc
sti
sbb
push
sbb
or
cld
mov
pop
or
mov
pop
mov
in
fisttps
push
and
mov
jmp
inc
adc
fildl
sbb
mov
mov
push
add
sub
aad
js
shl
in
push
mov
jmp
jp
cmp
fidivl
inc
sub
pop
ja
daa
sarl
in
cltd
jmp
pop
mov
jmp
inc
or
mov
mov
shlb
je
jg
jl
movsl
dec
jp
jae
mov
add
rorb
or
jne
and
fs
push
adc
or
loopne
testl
adc
lds
pop
mov
call
pop
hlt
jns
push
xchg
xchg
bound
shlb
popf
das
xchg
imul
inc
movsb
cmp
into
jle
add
cmp
addr16
sbb
mov
sub
add
cmpsl
or
xor
jecxz
scas
add
inc
jge
pop
aas
jp
es
cld
test
fistpl
ret
adcl
mov
or
je
and
sti
jne
sub
add
or
and
pop
test
andl
sub
in
into
pop
jl
add
jo
push
inc
adc
inc
or
jo
jle
sbb
bound
mov
push
inc
mov
scas
xor
xchg
loopne
mov
dec
mov
add
cmp
das
shr
pop
add
dec
pop
popa
test
div
out
adc
out
cmpsl
pop
movsb
in
ja
inc
add
pop
push
mov
repz
mov
mov
add
push
mov
mov
jl
leave
popa
or
cmpl
into
jne
sbbl
ret
incl
icebp
adcb
and
sbb
add
inc
out
adc
je
mov
dec
jno
cltd
bound
js
mov
push
inc
push
sbb
insl
aas
dec
insb
loop
call
addl
add
bound
inc
push
cld
movsl
xorb
data16
data16
push
js
cmpsl
push
aad
push
and
int3
dec
sub
sbb
adc
sbb
movsl
enter
ss
rol
mov
inc
dec
shl
xchg
imul
inc
inc
add
leave
pop
icebp
pop
fcomps
cmpb
xor
cmp
push
lret
push
call
inc
shl
ljmp
cmp
repz
xchg
jo
cltd
add
push
add
dec
mov
loopne
sarb
clc
inc
rorb
gs
dec
jg
je
or
adc
or
push
adc
dec
jne
jp
sti
mov
cmpb
jne
or
xor
inc
add
jnp
mov
jne
add
daa
cmc
mov
jmp
pop
push
pop
arpl
icebp
jmp
jbe
sti
jmp
decb
sti
cmpb
ss
mov
adc
mov
inc
jmp
pop
mov
aam
sti
rorb
mov
out
ljmp
insl
incb
xchg
xor
outsb
push
sub
std
add
push
jnp
and
cmp
sbb
lea
in
pop
loopne
or
rcr
add
fdivr
outsl
jg
lahf
or
js
mov
fs
add
mov
addr16
or
in
ret
loopne
push
and
incl
add
aam
inc
push
pop
inc
jp
pop
das
in
jmp
inc
jle
fcoml
push
jmp
lea
ret
push
mov
icebp
jne
lahf
and
add
lds
dec
dec
shrb
sti
scas
pop
mov
add
loopne
inc
sub
cs
adc
and
and
push
jae
mov
inc
mov
mov
jne
push
pop
inc
mov
nop
add
push
inc
fistl
rol
mov
mov
test
movb
dec
adcl
xor
and
add
sub
xchg
dec
push
adc
or
xchg
pop
sub
test
add
dec
hlt
mov
sub
out
test
xor
push
xorb
and
xor
or
inc
adc
shrb
dec
ljmp
fwait
and
mov
jo
mov
xchg
pushf
call
jecxz
inc
ret
mov
push
aas
xchg
js,pn
push
jmp
ret
pop
mov
cmp
ret
inc
shufps
cmpb
dec
jp
loopne
sbb
in
jecxz
and
mov
jmp
lret
shll
xor
push
xor
adcl
je
push
loope
lock
js
ret
loope
pop
outsl
push
pop
mov
jae
sti
or
sub
flds
subb
iret
pop
push
dec
add
and
pushf
arpl
jnp
clc
mov
jne
mov
inc
push
cmpsl
and
mov
mov
xor
pop
inc
cmp
xchg
jg
bound
inc
cmp
jae
mov
jmp
mov
mov
cmp
ja
gs
sub
inc
jg
test
mov
mov
and
mov
mov
or
inc
dec
jne
std
add
call
cmc
mov
mov
cmp
jmp
jmp
ljmp
lcall
xor
data16
mov
fnstcw
movsb
pop
arpl
enter
mov
pop
call
add
lock
cld
xor
test
je
pushf
jne
or
leave
jp
adc
and
enter
fiaddl
or
jmp
or
mov
ficoms
enter
je
sbb
xor
adc
lock
adc
push
sbbl
sub
jg
lret
subl
sbb
gs
pop
rolb
push
imul
fnstsw
add
adc
and
jp
dec
sub
rorb
imul
daa
push
adc
lock
sbb
cmp
fisttpll
add
xlat
pop
es
js,pt
jne
outsl
cmp
lahf
add
xor
scas
in
popa
cmp
mov
lret
inc
rcrb
add
push
pop
arpl
cmp
pop
movlhps
jmp
fnstsw
jecxz
fmull
roll
lods
neg
mov
mov
add
jo
cmp
repz
mov
insb
shl
jmp
fiadds
cld
cmp
shl
jmp
fwait
je
push
imul
adc
jno
mov
jl
sar
dec
push
adc
lea
add
fbld
push
xchg
sbb
cmp
adc
sub
rolb
sti
aam
or
and
filds
dec
add
adc
repz
cmp
lods
fbld
incb
gs
jmp
jns
xchg
mov
xor
cli
in
adc
pop
xchg
fwait
inc
dec
daa
sbb
dec
cmp
pop
enter
in
lea
dec
je
add
add
outsb
jne
mov
mov
test
push
notb
xor
push
or
lcall
outsb
mov
cmp
ret
push
outsl
push
push
loopne
jmp
jle
cs
add
adc
or
sahf
sub
pop
out
pop
sub
pop
xor
or
and
or
push
pavgb
inc
xor
rclb
and
leave
inc
sbb
orb
cmc
les
xor
test
shlb
stc
push
ja
insl
scas
jnp
pop
mov
inc
jmp
jmp
xor
push
adc
xchg
push
pop
imul
and
mov
std
push
in
clc
cld
mov
pop
lea
or
push
popf
lods
ja
pop
fcmovu
mov
jl
or
sbb
or
add
pop
xor
js
mov
or
cmp
adc
mov
je
pop
inc
clc
incb
inc
rcrl
jl
sub
add
mov
sarb
mov
in
inc
mov
add
mov
sbb
out
loop
movsb
cmc
rorb
fmuls
mov
stc
cmp
ja
lods
jge
sahf
inc
jmp
movsl
xchg
lea
cltd
adc
xlat
pop
out
stos
lea
add
mov
cmpsl
and
mov
inc
rol
pop
cld
mov
mov
pushf
cmpl
icebp
dec
jl
sbb
jb
pop
test
xor
ret
loopne
mov
mov
jbe
adc
movsl
xchg
push
loopne
pop
mov
cmpb
rclb
test
rolb
inc
cmp
sbb
push
jae
test
iret
sbb
xchg
or
mov
test
sbb
inc
cmp
ja
inc
mov
inc
sub
or
push
in
xor
sub
dec
insb
dec
or
mov
xchg
or
sub
icebp
mov
add
call
je
cmp
jmp
mov
fwait
cmp
or
push
flds
fldcw
shll
mov
push
fwait
adc
pop
jmp
loopne
iret
adc
popa
jge
cwtl
mov
std
add
hlt
mov
cli
and
pop
pusha
mov
push
lea
mov
sarb
sub
lea
or
or
dec
pop
jg
rep
inc
inc
mov
test
loopne
inc
out
sbb
imul
int
add
push
pop
leave
dec
fldt
mov
push
rcr
adc
dec
jbe
pushf
cmpb
in
mov
test
mov
adc
nop
and
sbb
add
jnp
daa
and
cmp
adc
mov
daa
loope
sub
and
aaa
sti
xchg
enter
mov
jb
fcomp
fmuls
mov
jmp
xchg
loopne
fistl
cmpsl
mov
lock
push
nop
add
stc
and
call
cmp
dec
or
xchg
pop
adc
add
arpl
push
pop
icebp
xchg
mov
dec
in
testb
mov
je
inc
inc
xor
sub
adc
pop
adc
cmovg
ljmp
andb
or
inc
cmp
mov
popa
lea
cmpsl
rcll
lret
inc
and
loopne
ret
add
push
adc
cmpw
mov
jmp
sbb
rorl
inc
sbb
fisttpl
push
into
sub
push
insl
jge
pusha
push
lods
mov
or
jb
and
or
jmp
in
xchg
mov
push
inc
push
and
stos
adc
or
js
ljmp
roll
div
or
add
in
subl
xchg
fadds
popl
mov
pcmpgtb
out
cs
icebp
lahf
and
or
xor
test
call
ds
mov
xor
enter
jne
loop
cmp
sbb
ja
push
cli
cmp
mov
ja
int
jae
xor
xchg
roll
inc
fbld
push
and
or
fs
xor
mov
jnp
mov
fwait
mov
xchg
push
lock
xchg
cmovno
jo
jb
ret
push
xorb
add
fdivrs
add
push
mov
add
in
pop
mov
iret
inc
mov
mov
jae
mov
test
sub
cmp
fwait
xchg
cmp
pop
adc
rcrb
ljmp
sub
shr
mov
imul
js
mov
mov
faddl
adc
movsb
pop
adc
lea
mov
dec
loopne
push
inc
clc
mov
mov
jmp
mov
add
cmp
jbe
push
pop
mov
ret
add
dec
dec
dec
pop
and
adcb
aas
shr
lea
not
and
decb
jne
add
jnp
jbe
sub
fchs
inc
cmp
sti
xor
push
pop
add
cld
insb
add
push
or
hlt
mov
push
or
and
push
adc
sar
pop
sahf
pop
push
sarl
hlt
fildll
jne
cmpb
and
sti
add
dec
dec
pop
cmp
jbe
jnp
xchg
insl
sub
xchg
xchg
adcl
cmp
je
orb
pop
cld
and
shr
not
and
add
not
shll
xor
cmp
adc
xorb
in
xorl
add
dec
pop
add
or
pop
or
jmp
mov
jns
pop
bound
xor
lcall
jne
mov
shll
outsb
mov
push
jae
dec
pop
sbb
mov
jle
or
sbb
sub
xchg
jbe
xor
mov
ljmp
push
mov
sarl
add
or
mov
cli
fimuls
xor
das
jle
loope
add
movsl
arpl
mov
jae
push
push
call
aas
gs
cmp
xor
movsb
mov
mov
jbe
dec
push
decb
adc
inc
add
pusha
add
and
mov
imul
adc
lea
cmp
ljmp
decl
fabs
push
decl
push
lea
push
sti
sahf
xor
lret
or
lret
lods
std
insl
or
movsl
mov
sub
mov
lret
cmp
ja
pop
and
lods
jmp
add
cmp
jge
test
adc
sub
loopne
not
call
sbb
mov
movsl
and
jae
inc
mov
and
jle
clc
and
or
rol
bnd
mov
xor
push
jne
mov
cmp
dec
adc
add
pop
dec
jae
ss
add
in
int3
in
push
jns
or
fwait
outsl
and
in
test
je
jl
cmpb
test
es
push
cmp
add
or
mov
mov
mov
les
mov
jo
push
mov
test
or
cmc
es
pop
cmp
call
cmp
xlat
je
xchg
das
xor
popa
mov
rol
xchg
dec
scas
into
jne
int
mov
fldt
enter
jl
shl
inc
jmp
mov
stc
xchg
sub
icebp
pop
mov
add
cmp
jle
pop
cmp
adc
mov
dec
aaa
std
and
iret
in
xchg
in
cmp
and
mov
decb
jne
repnz
lahf
sbb
dec
sub
and
fs
sub
mov
pop
or
shlb
roll
cmp
add
sbb
adc
fiadds
loopne
push
jl
jle
inc
mov
adc
or
cmp
push
aaa
lret
push
decb
jge
subl
mov
and
mov
or
adc
push
or
das
push
or
jo
gs
push
jnp
bound
add
or
inc
inc
cmp
fimuls
das
add
lods
sbb
add
inc
add
fbstp
mov
inc
lea
jne,pt
cmp
fdivs
xchg
cmp
fwait
xor
fbld
mov
lea
adc
or
xor
cwtl
jle
mov
pop
xor
lods
adc
nop
or
adc
test
push
inc
clc
data16
xor
out
mov
push
mov
jne
fwait
pusha
aad
sbb
imul
roll
incl
mov
adc
mov
inc
mov
andb
test
call
rolb
icebp
xor
outsl
add
add
add
push
xor
jecxz
cmp
or
out
add
or
push
mov
pop
sahf
mov
aad
inc
cmp
inc
out
dec
in
mov
pusha
fisubrs
in
lea
cld
lock
dec
add
sub
mov
pop
lock
dec
loop
mov
clc
je
cmp
pop
dec
mov
dec
or
pop
inc
fs
cmc
jecxz
mov
mov
mov
pop
test
clc
mov
fcomip
mov
jne
or
mov
and
jo
clc
lret
ret
imul
jne
mov
lea
sub
pop
sbb
rclb
ljmp
add
mov
inc
jge
push
mov
sarb
mov
addl
popl
xor
loope
sbb
popf
pop
add
pop
dec
or
jae
cmpsl
clc
lea
nop
inc
cmp
sub
inc
xlat
pop
enter
dec
or
dec
leave
jg
sub
add
fsubr
xor
sub
add
mov
das
push
in
pusha
lock
pop
dec
hlt
lea
adcl
pop
dec
pop
dec
ret
gs
pop
pop
pop
add
or
jns
adc
jae
int
cmp
dec
mov
and
repnz
and
xor
jae
in
pop
cltd
pop
or
test
hlt
push
stos
mov
sub
psubusb
mov
jge
or
sub
xor
rorb
and
or
pop
scas
pop
dec
out
inc
test
test
xchg
sbb
pop
jne
sbb
in
xlat
into
je
repz
sbb
cltd
inc
xlat
dec
push
in
and
ret
and
ja
das
ret
aas
in
or
adc
jnp
dec
sbb
xchg
leave
aam
into
ret
adc
pop
fisttpl
ret
push
andb
add
dec
into
push
and
ret
movsl
push
lcall
movsb
inc
pop
sub
pop
fmuls
dec
push
jmp
push
push
mov
mov
or
sub
xlat
filds
aad
scas
xor
push
cwtl
xor
add
push
push
xor
mov
jns
test
mov
loopne
sbb
adc
jne
jnp
xor
xchg
lea
jb
adc
mov
add
jle
pop
inc
in
mov
std
loopne
fdivrp
adc
popf
ret
rorl
mov
dec
es
xor
jecxz
pop
pusha
add
add
cmp
jae
orb
mov
movl
loopne
add
lods
rclb
outsb
std
cmp
or
test
rclb
js
outsl
pop
frstor
xor
pusha
test
push
mov
mov
movb
push
dec
push
lea
jecxz
or
inc
daa
or
jle
sbb
adc
mov
lock
lock
lods
aas
jb
cmp
cwtl
add
xchg
mov
jp
add
mov
int3
xor
ret
or
fbstp
test
xor
pop
sub
icebp
cli
or
lahf
mov
je
jns
adc
das
cmovno
pop
ss
int3
or
mov
mov
mov
shll
or
xor
dec
test
aas
and
jg
lret
adc
or
cmp
lret
shrl
cld
jmp
test
jne
lods
mov
mov
bnd
xchg
mov
xor
xchg
lret
adc
sbb
jecxz
dec
cmp
or
fisubs
sub
stc
or
enter
xor
jnp
add
andb
js
cmp
cmp
inc
add
mov
sbb
hlt
lret
or
popa
aad
sub
cmp
nop
mov
cmpsl
and
rcrl
js
xchg
mov
out
leave
sbb
mov
add
cmp
rol
nop
jp
jae
cmc
xchg
jecxz,pt
sub
jl
cmp
jbe
push
dec
cmpsb
xchg
jne
sub
inc
pushf
lea
jb
or
arpl
test
addl
cwtl
adc
pusha
or
es
add
mov
mov
mov
cmp
adc
adc
pop
test
jl
cltd
sarl
cmpl
ja
push
or
push
aas
fstpt
push
call
mov
in
or
testl
ja
cmp
loope
faddl
adc
aam
in
je
jo
popa
and
push
shr
inc
jo
jne
xchg
add
ja
pop
std
pusha
dec
jo
mov
jle
outsb
sbb
orb
cld
mov
mov
cmp
add
lods
push
outsl
movsb
jne
mov
enter
jnp
inc
cmp
add
sbb
and
jo
loope
or
jg
or
add
hlt
js
loopne
bswap
xchg
in
rolb
jmp
mov
push
sbb
jmp
inc
adc
sub
cmpsl
inc
shrl
push
sbb
loopne
lahf
push
aas
push
sub
push
int
cmp
cltd
xor
add
jle,pn
scas
and
dec
jae
adc
lea
lea
sub
adc
inc
loop
lcall
call
aaa
std
lahf
xorl
sbb
add
add
jg
jne
inc
inc
jmp
mov
add
aad
inc
jmp
or
push
sbb
inc
imul
sbb
out
lea
divl
mov
shr
push
or
or
mov
call
inc
lea
arpl
sub
mov
push
push
sbb
mov
pop
jl
push
sub
ret
sub
jb
fucomip
scas
cmp
add
add
jmp
outsl
push
ret
andl
or
cvttps2pi
inc
add
sbb
inc
loopne
jecxz
push
xchg
cmpb
cld
xor
lea
jbe
jno
lcall
adc
enter
setg
jmp
jae
mov
movsl
add
push
jp
push
mov
sbb
add
hlt
stc
inc
mov
mov
out
inc
imul
daa
push
lock
sbb
xor
push
lret
inc
cmpb
out
rcrb
lea
arpl
sub
lea
outsb
lret
mov
xor
add
stos
shrb
add
xchg
sbb
cmp
jae
adc
cmp
pop
and
pushl
bsr
testb
je
enter
iret
out
cmp
sti
mov
inc
push
push
sub
mov
lds
sbb
push
inc
push
add
std
or
call
mov
andb
fbstp
push
mov
adc
sbb
and
cwtl
dec
aas
or
pop
sbb
sbb
jg
icebp
andw
pop
push
cmp
dec
and
in
sub
outsl
dec
xchg
outsl
add
testb
cs
pop
pushf
push
lods
and
pop
stos
lcall
cmp
add
stc
iret
aaa
test
adc
rcrl
pop
pop
and
lret
int
xchg
push
and
pop
test
sbb
or
pusha
mov
xor
dec
loopne
rolb
faddl
into
jle
mov
stos
rorl
sbb
cmp
xor
add
push
add
icebp
sbb
imulb
add
xor
inc
cmp
jl
jno
add
outsl
sbb
nop
cmp
sub
pop
stos
cs
adc
mov
testl
pop
pop
pushf
push
iret
sbb
push
pusha
pop
xchg
insb
add
mov
ret
xor
pop
push
cli
push
cmp
mov
lahf
mov
mov
and
out
jle
sbbb
jno
jle
lock
jmp
loopne
inc
xchg
inc
jbe
dec
push
dec
addb
into
mov
xor
push
std
mov
or
pop
insb
pop
xchg
xchg
test
ret
js
fisttpl
clc
inc
and
jb
cmp
xchg
mov
fnstsw
cmp
lea
into
add
or
add
inc
add
ret
cmpl
lret
clc
push
jg
and
sub
je
or
cmpsl
call
cmp
cld
sti
popa
lret
fldl
sub
roll
mov
jmp
lods
inc
jne
adc
cwtl
pop
jne
das
mov
cld
pop
add
mov
ja
jne
or
or
bound
ret
xchg
enter
xlat
inc
daa
adc
jnp
or
cmp
fs
inc
mov
nop
imul
je
rclb
and
jno
addl
fiadds
sarb
add
bswap
lret
jge
sbb
testl
pop
add
sbb
jp
mov
dec
adc
mov
jb
jp
cmp
push
jle
mov
aas
sti
mov
cmp
je
testb
inc
sar
or
cmp
jl
jmp
mov
jmp
mov
push
shl
mov
pop
sbb
pop
mov
jecxz
pop
cmp
je
in
cmp
fisubrs
decl
outsb
in
or
sub
adc
xor
pop
add
jo
pop
cmp
addb
popa
pop
push
mov
das
stc
xchg
ret
insl
xchg
sahf
sarb
ja
mov
gs
adc
mov
inc
add
pop
pop
stos
sbb
wrmsr
or
jecxz
or
add
pop
xor
inc
jge
jb
cmp
push
pop
jnp
adcb
dec
mov
stos
enter
or
ss
cltd
jo
xchg
push
leave
add
out
mov
cltd
jp
stos
pop
stc
pop
push
mov
aas
inc
or
and
and
mov
pusha
out
hlt
push
sbb
add
leave
xchg
adc
popa
xor
cmp
xor
or
jle
pop
adc
iret
dec
pop
jae
add
lret
xchg
push
mov
sti
and
movb
inc
mov
jae
push
add
dec
test
pop
lock
pusha
aaa
adc
cmp
push
pusha
je
in
pop
pop
pop
mov
ds
mov
xor
jne
jle
inc
add
movl
fwait
repnz
je
loopne
xor
jle
jb
mov
out
cmc
shlb
cmc
or
mov
sub
jge
add
ficompl
xchg
dec
add
cmp
loopne
adc
fsubl
inc
sub
icebp
push
movsl
rsqrtps
out
lock
pop
pop
mov
add
test
lds
pop
movsb
sub
arpl
jmp
rcrb
out
in
pusha
and
call
sub
push
and
pop
adc
movb
daa
jo
mov
aaa
lea
jge
lret
sbb
ss
mov
and
repz
icebp
mov
in
mov
jl
leave
cmp
nop
pop
inc
jb
mov
rorl
pop
outsl
add
imul
add
xchg
push
sbb
mov
repz
dec
addl
mov
fcmovu
outsb
xchg
mov
mov
sbb
cmpsl
pop
pushf
add
pop
shl
cmp
sbb
pop
ds
or
sbb
jmp
aas
lock
adc
dec
xor
pop
push
ljmp
subb
add
adc
fistpll
fdivl
fmull
insl
lock
jge
fcompl
sahf
jbe
cmp
lods
cltd
dec
sahf
xchg
and
lods
adc
mov
sbb
pop
dec
aaa
pusha
cmp
add
mov
sbb
sub
lcall
popa
fst
sbb
mov
pop
dec
loop
mov
mov
fisubs
or
repz
rcrb
cmp
int3
mov
cmp
je
mov
inc
cmp
and
sub
or
sbb
in
mov
jmp
sbb
xor
adc
dec
mov
inc
daa
pop
addr16
scas
mov
aad
jb
and
push
test
je
clc
loope
dec
icebp
pop
fsubrs
fs
aam
and
enter
cmpb
mov
daa
inc
mov
adc
push
cmp
push
fistpll
sub
outsl
xor
mov
cmp
push
js
frstor
push
dec
lods
sub
scas
sbb
shlb
rolb
divb
lret
xchg
xor
inc
ret
imull
in
sub
sbb
ss
mov
add
mov
ret
sub
enter
fiadds
lret
subb
enter
push
dec
jmp
pop
mov
add
jns
neg
daa
sub
adc
fsubp
pop
stos
fs
pop
idiv
jnp
cltd
or
dec
enter
xchg
push
push
enter
mul
push
dec
enter
mov
pop
sbb
sbb
inc
push
lods
sbb
push
dec
cmp
xorl
les
add
imul
inc
add
ret
adc
loop
mov
inc
add
inc
xor
jg
push
mov
xchg
add
xor
jmp
add
cmp
cmc
pop
scas
mov
pop
mov
adc
xchg
add
fsubrp
push
cli
testb
adcl
adc
xchg
xor
enter
ret
pop
subb
mov
push
or
es
aad
jb
clc
mov
push
arpl
xchg
push
cmp
add
addr16
setl
mov
inc
pop
mov
jl
inc
jge
xchg
or
push
fwait
lods
stc
and
push
pop
xchg
jns
sub
inc
jp
mov
les
orl
xchg
or
andb
cmp
divb
xor
inc
leave
outsb
dec
lea
data16
out
std
pusha
fstpl
loop
sbb
mov
jmp
sbb
mov
push
push
scas
in
or
cmp
fcomi
fcmovnbe
xchg
add
adc
sub
pop
pop
cmp
shrb
mov
pop
mov
and
cmp
sti
push
xchg
cmp
jb
or
sbb
sbb
aad
push
mov
arpl
mov
jb
jb
outsb
mov
mov
mov
push
sbb
push
xchg
test
movb
lahf
movsb
push
xlat
pop
push
push
or
ja
and
inc
jmp
push
lods
lret
gs
ss
in
loope
bsf
add
inc
add
std
lods
cwtl
ljmp
sbb
aad
xchg
sub
push
fucompp
push
imul
js
cmpb
pop
xchg
dec
lea
inc
xor
xchg
jo
cmp
and
addr16
xchg
add
out
cld
fs
call
adcl
adc
sbb
mov
dec
and
lods
jecxz
je
rcr
inc
scas
push
or
xor
add
fdivrp
loope
testb
je
jge
icebp
mov
sbb
add
sub
mov
pop
sbb
ret
inc
lcall
arpl
andb
ficoms
pushf
adc
fbstp
cmpsl
enter
pushf
push
addr16
test
sbb
punpcklbw
xchg
stos
fdivrl
inc
jne
fidivs
out
orb
rclb
das
mov
sahf
mov
jnp
shl
dec
xchg
sbb
add
mov
enter
push
je
push
mov
or
xchg
sbb
pusha
sti
cmpb
push
cmpl
dec
shl
lods
and
inc
daa
xchg
lods
incb
sub
insl
inc
adc
call
hlt
or
jmp
mov
mov
jle
ds
dec
or
adc
and
mov
shlb
lret
je
cmp
or
data16
js
pop
lcall
inc
pop
and
or
repz
popa
jl
cmpsb
jp
vmovups
sti
and
jl
jge
xor
or
or
xor
and
add
inc
cld
cmc
and
push
sub
mov
test
and
test
jne
dec
jae
dec
xor
arpl
and
jne
xor
inc
cmpsl
adc
test
xor
loop
inc
jmp
push
dec
dec
or
rcrl
jle
popa
fidivs
sub
jns
rorb
push
mov
ja
mov
add
adc
jecxz
out
sbb
pop
mov
gs
jge
sub
mov
jmp
fdecstp
ret
cld
sarl
mov
sar
jecxz
mov
mov
sarl
shlb
cmpb
jne
push
xchg
hlt
sti
clc
inc
jmp
popa
xorb
dec
and
enter
inc
and
sbb
adc
cmc
xor
push
mov
movsb
dec
push
les
or
push
add
mov
or
dec
or
adc
popa
mov
and
xor
cld
arpl
mov
add
je
data16
inc
sbb
int
cmpb
inc
pop
inc
jo
sbb
call
xor
mov
and
dec
arpl
sti
add
mov
out
and
loopne
sub
idiv
inc
mov
dec
ficoml
iret
push
add
sub
inc
clc
fistpll
insb
add
push
cmp
jge
lea
sub
or
inc
sub
jne
mov
je
aas
fsubp
dec
out
nop
sbb
repnz
cmp
and
dec
cmp
lea
and
add
fucomp
leave
repz
push
adc
mov
mov
or
in
pusha
jmp
hlt
push
and
clc
xor
popa
rorb
into
insb
cmp
test
dec
fcomps
jo
adc
je
shlb
fcmovbe
push
add
out
std
pop
sbb
adc
lea
pop
pop
lea
mov
mov
sub
mov
xchg
and
hlt
and
xchg
fwait
and
mov
or
fnstcw
and
pop
fisubl
out
pushl
fidivrs
inc
or
jbe
inc
sbb
ja
imul
push
jmp
out
dec
mov
mov
decl
lds
fadd
je
cmp
je
inc
dec
shrb
adc
aaa
cwtl
jmp
lea
nop
dec
adc
les
push
or
orb
dec
jmp
push
das
mov
pop
inc
cmpb
and
push
xor
pop
or
out
and
fwait
pop
add
outsl
jne
pop
incl
aaa
loope
out
insb
popf
mov
xor
imul
push
inc
aam
pop
inc
mov
cmp
push
sbb
push
rcrl
inc
or
xor
mov
push
imul
mov
pop
inc
or
cltd
aas
daa
add
ret
out
adc
xor
sahf
cli
ljmp
push
jecxz
mov
add
cli
jge
cmpl
or
xchg
jnp
cltd
std
pop
add
push
mov
mov
inc
inc
pop
aad
jmp
sbb
cmp
jle
xor
cmp
inc
cmp
sbb
jp
xor
aas
lret
call
or
or
popa
dec
sbb
aam
ja
pushw
out
adc
push
add
dec
aam
pusha
popa
pusha
popa
adc
fsubl
and
scas
or
adc
sub
inc
push
push
mov
add
fisttpl
sbb
or
jmp
cmp
sub
sbb
xchg
in
shr
mov
push
aas
clc
test
adc
push
pop
inc
arpl
xchg
add
daa
xchg
add
stc
adc
add
xchg
je
jbe
cs
sbb
xchg
ss
aas
aaa
jno
add
add
fimuls
mov
andl
pop
outsb
dec
adcb
xchg
mov
dec
adcl
mov
movsb
testb
or
mov
cmp
cmpsb
sub
push
mov
gs
pop
ljmp
test
outsl
insl
sbb
jg
push
adc
out
cmp
out
mov
mov
or
call
clc
sbb
cmp
fstpl
jmp
xor
push
add
jge
and
push
jo
dec
or
inc
push
shld
push
push
add
clc
loopne
cmp
jmp
add
adc
into
push
or
cmp
fiadds
lock
or
sub
inc
cmc
and
aad
popf
mov
and
xchg
shr
cmc
mov
std
pop
rorb
mov
shll
dec
les
mov
sub
dec
and
pop
pop
mov
cmpsb
insl
movb
mov
or
mov
mov
sti
enterw
fisttpll
movsb
scas
sbb
inc
ljmp
lea
dec
repnz
lea
sar
cld
mov
push
mov
or
pop
mov
lea
dec
repz
std
shll
pusha
or
cmovge
adc
xchg
mov
inc
jmp
imull
loopne
adc
mov
cld
push
xor
add
push
mov
dec
mov
push
pop
cmp
mov
mov
mov
dec
add
inc
jae
add
mov
mov
lea
addr16
lock
test
add
mov
negb
ret
dec
xchg
or
es
mov
in
inc
dec
cmp
push
int
in
add
ss
das
jb
or
jmp
or
jl
pushl
adc
insl
orb
ret
int3
mov
sub
mov
aas
jmp
in
jp
or
inc
add
lods
dec
test
mov
test
push
add
cmpsb
cmp
push
js
repz
sbb
mov
int3
cmp
icebp
sti
mov
mov
mov
mov
mov
lret
sbb
out
ljmp
ret
popl
push
cmpsb
lods
mov
jns
jle
sub
rolb
push
or
or
jmp
mov
ret
xchg
imul
xchg
stos
imul
ret
cld
jg
int3
int3
push
inc
xor
pop
inc
xor
push
or
orb
sbb
stc
testl
mov
or
add
mov
pop
xchg
jae
or
arpl
je
push
push
lea
push
pop
pop
pop
orb
xchg
dec
sbb
xor
dec
push
addr16
add
sti
push
cmp
push
or
faddp
in
sbb
pusha
add
lods
outsl
xor
xor
jmp
adc
sbb
adc
mov
jmp
mov
sub
jno
sub
mov
push
pop
sbb
cmpsb
xchg
push
inc
ret
mov
add
cmpl
push
cld
jl
mov
outsb
mov
ljmp
adc
push
das
jge
cmp
mov
or
jo
jno
inc
cmp
icebp
in
cmp
testb
fxch
popf
dec
or
loopne
test
add
ljmp
js
sub
cli
pusha
adc
test
sbb
les
mov
dec
sub
push
in
pushl
call
clc
push
loope
jg
stos
pusha
incl
cmpsb
sbb
mov
pushl
push
arpl
mov
push
and
lea
xchg
adc
ss
adc
aas
sbb
pusha
pusha
xchg
inc
mov
in
adc
and
cmpsl
pop
cwtl
jmp
jg
orl
ja
adc
fsubrl
adc
and
insb
adc
mov
mov
xor
cmp
andl
push
jo
jge
mov
and
adc
jne
das
call
cmp
jge
add
stc
pop
mov
fidivrl
sbb
rorb
in
sbb
in
mov
push
adc
movups
cmc
cmp
jno
outsl
enter
ret
mov
sub
or
jg
inc
js
and
ret
nop
sarl
cmp
jmp
dec
adc
sub
shlb
add
lea
loope
add
scas
pop
xor
sbb
mov
jb
sbb
pop
push
das
push
push
pop
mov
pop
pop
cwtl
dec
push
adc
push
fstl
rclb
xchg
push
bound
clc
test
mov
jo
pop
les
je
ja
sub
pop
imul
lea
jns
loope
pop
pop
or
adc
jle
cmp
aam
dec
xchg
popa
or
addps
aad
fldcw
pop
jne
push
jb
cmp
xchg
sbb
sti
jnp
dec
test
fistpll
sub
or
push
push
push
pop
or
outsb
add
std
fisttps
cmp
jae
or
jae
shld
shl
dec
ror
addb
xor
pop
shl
hlt
fidivrs
jle
or
adc
xchg
xor
add
ret
pusha
popf
inc
and
mov
inc
or
ret
mov
push
inc
in
sbb
pop
push
das
imul
mov
ret
and
add
out
imul
xchg
mov
cs
push
inc
or
mov
sbb
dec
xor
mov
add
test
fildl
dec
lods
not
sbb
xor
push
roll
fsubl
popf
add
jns
jmp
push
lretw
xchg
outsl
cmp
mov
sbb
push
pop
andl
inc
scas
pop
lret
sbb
daa
mov
ret
lea
adc
adc
jmp
int3
jb
mov
push
outsb
sti
push
xor
loopne
mov
shrb
xchg
or
dec
or
adc
sub
sahf
sahf
fisttpl
mov
sbbb
pop
add
aas
dec
xchg
outsl
cmpsb
imul
add
fwait
xor
fdivrl
rcll
int3
adc
jmp
push
pushf
add
dec
pusha
mov
aas
adc
adc
nop
faddp
fstpl
xor
pusha
imul
dec
push
jo
faddl
lds
push
aas
jno
mov
imul
mov
dec
push
aam
orl
pop
fisubrs
add
aas
aas
and
fwait
or
push
cmp
add
mov
into
and
dec
adc
outsl
fsubl
ret
adc
mov
test
icebp
add
int
movb
dec
add
adc
jg
and
inc
xor
sbb
movsl
xor
adc
xchg
mov
add
jmp
shl
mov
jo
xchg
andl
test
insl
add
loop
cmpl
rcll
pop
int3
imul
sbb
or
adc
hlt
jmp
or
jmp
push
out
xchg
xlat
cwtl
push
pop
mov
or
add
mov
in
jne
daa
iret
dec
or
jo
cmp
sti
and
xchg
ljmp
lret
sbb
dec
dec
push
push
and
jle
push
orl
lea
in
loopne
inc
cmpsl
testb
add
add
ret
jge
cmp
lahf
shl
pop
jge
pop
and
dec
negl
jo
jbe
mov
test
test
push
repz
mov
movb
dec
ljmp
mov
mov
test
mov
mov
incl
clc
rcrl
pop
sub
jl
push
sbb
rcll
lret
and
leave
mov
adc
pop
xor
jp
adc
or
loope
and
ret
mov
inc
jmp
lods
and
mov
sbb
sbb
cmp
lret
enter
fidivl
sub
iret
je
and
cmp
add
inc
add
cmpsl
int
aaa
adc
mov
add
sbb
push
sub
cmp
mov
rcl
dec
add
or
cwtl
je
mov
movsb
cmpsb
not
and
outsb
sub
andl
push
testb
les
div
ds
cmc
or
mov
pop
fs
popa
iret
aam
sub
loop
imul
or
aad
cwtl
xor
dec
mov
adc
mov
mov
sbb
shrl
cmp
lret
or
dec
mov
mov
negb
dec
or
outsl
cli
repz
or
in
mov
repz
dec
out
add
js
jl
clc
loopne
div
add
lcall
jne
sbb
orl
insl
adc
cmp
insb
pushf
sub
adc
clc
stos
div
sub
hlt
cmc
adc
xor
cmp
xchg
mov
sbb
or
and
or
js
jno
loope
icebp
jmp
jge
dec
test
jg
cmp
shlb
or
and
addr16
inc
aam
dec
or
jg
or
fldcw
cs
clc
mov
call
shll
rcll
es
push
dec
push
xchg
xor
jge
lcall
add
sub
dec
add
xor
sarl
mov
mov
lcall
cmp
jne
es
or
outsl
or
mov
cmp
adc
adc
shlb
pusha
jbe
push
hlt
mov
sub
or
das
add
add
sbb
and
ret
sbb
mov
bswap
js
mov
cli
jo
int
into
movsb
inc
fadd
sbb
int3
or
or
or
xor
mov
or
sbb
cli
dec
or
add
adc
inc
jge
push
pop
push
lock
mov
sub
or
shl
not
test
jne
add
arpl
mov
in
jnp
add
sbb
add
jl
jbe
movsl
jnp
pop
nop
lock
rdpmc
cmp
jmp
mov
pop
pop
push
mov
xchg
js
ss
daa
shrl
or
cltd
out
and
sbb
out
mov
jecxz
sub
dec
popa
sbb
add
ret
pop
cltd
addr16
add
popf
sbb
andb
add
jle
loop
mov
test
test
add
push
sbb
sbb
lret
mov
sbb
orl
icebp
pusha
test
fnstsw
aaa
mov
sub
adc
xchg
bound
push
es
xchg
xchg
dec
or
or
push
ret
cli
jge
pop
adc
and
dec
popf
dec
add
jnp
cmp
dec
cmp
sub
not
inc
enter
shll
mov
call
dec
imul
push
fidivl
xchg
jge
mov
push
shrl
jl
xorb
pop
pusha
mov
roll
int
test
push
mov
dec
cwtl
cs
add
dec
pop
rorl
mov
pop
fisubs
add
jbe
push
or
pusha
mov
stos
and
mov
aas
cld
cmp
and
add
incl
cmpsb
imulb
aad
mov
pop
es
pop
in
and
ds
add
ret
call
inc
shlb
inc
mov
ljmp
loope
jge
ffree
jg
cmp
fdivrs
sub
in
sbb
xlat
adc
pop
test
inc
mov
cs
stc
cmp
jl
loopne
jg
movsl
popa
or
dec
testl
add
inc
push
sti
cmp
test
idivl
add
inc
clc
push
and
jg
inc
add
sub
mov
scas
incl
inc
sub
xor
paddusw
imul
add
add
mov
sub
xchg
call
cmp
dec
jecxz
add
and
adc
or
je
mov
xor
fadd
leave
pop
inc
arpl
adc
mov
stos
mov
cmp
sbb
pop
sub
movb
test
mov
jle
sti
xor
jle
loopne
cmp
mov
test
xor
adc
jmp
pusha
mov
cmp
lock
mov
push
xor
incl
sub
adc
inc
adc
cmpsl
rcll
popa
pop
lea
pop
js
pop
push
sub
mov
test
lods
mov
rcrl
or
orb
movswl
adc
fcmovb
mov
fs
pop
imul
call
jno
and
into
hlt
loope
iret
inc
sub
or
jo
push
inc
setl
popl
daa
add
test
jno
or
or
jmp
push
adc
rcrl
out
xor
push
pop
jmp
dec
add
mov
lods
adc
xor
or
or
decl
dec
adc
leave
mov
shr
or
sbb
or
mov
fbld
lret
jmp
and
mov
cmp
sub
outsl
sub
inc
nop
nop
fdivrs
xor
mov
pop
pop
push
pop
roll
jecxz
xor
ss
adc
sbb
and
jmp
add
inc
add
xchg
je
mov
imul
es
mov
in
mov
fimuls
jns
push
sub
mov
xlat
or
push
xor
call
sbb
test
icebp
mov
and
pop
push
ss
js
sub
or
pop
cmp
push
mov
shlb
ja
fcmovnb
lsl
ja
leave
inc
mov
xchg
sbb
ret
imul
xor
insl
mov
adc
aas
push
pop
addl
popf
nop
jmp
sbb
mov
adc
mov
je
jmp
shlb
mov
pop
pop
inc
das
testb
cmp
jecxz
inc
fstps
add
jl
inc
pushl
xor
ss
or
pop
andl
inc
mov
leave
adc
inc
movb
add
test
aas
testb
fwait
out
xchg
cmp
or
jmp
cwtl
xchg
nop
add
sub
outsl
sub
mov
xlat
add
add
mov
aas
sti
xor
loopne
or
cmp
jge
push
push
leave
push
and
das
icebp
fsts
sub
jne
sub
pop
subb
ret
inc
jge
and
mov
call
mov
testb
pop
jnp
adc
and
or
pop
jmp
ja
lea
lahf
push
sahf
fwait
xor
or
pop
mov
add
shlb
jl
aaa
adc
pop
sbb
je
pop
dec
es
xor
xor
add
inc
or
das
or
mov
adc
mov
into
add
ljmp
cmc
mov
mov
mov
mov
shr
shl
or
pop
movsb
pop
push
imull
sbbl
stos
in
imul
or
mov
or
out
shr
sti
push
aas
xchg
xor
mov
adc
adc
jmp
xor
in
dec
inc
adc
push
push
jnp
scas
add
movsl
movsl
push
movsl
sub
popa
sub
push
pop
add
adc
rcr
psubw
pop
lea
idivb
or
lods
pop
sarb
pop
cmp
loopew
xchg
mov
push
sub
daa
out
adc
loope
mov
adc
std
add
sarl
mov
cmp
jmp
and
inc
jno
pushf
add
add
and
pop
sub
gs
fimuls
inc
add
adc
aam
in
adc
add
in
mov
and
add
lea
inc
into
add
xlat
stc
or
push
pop
movsl
jl
loopne
sbb
add
xor
push
mov
jl
or
jg
popa
movsl
add
adc
pop
icebp
cmpsl
and
add
push
in
inc
shlb
adc
loope
add
lcall
rcr
adc
mov
jle
xchg
lcall
xor
sub
push
inc
jle
gs
sbb
adc
gs
adc
sti
dec
push
cmovp
dec
pop
add
cwtl
push
lcall
xor
mov
sarb
add
xchg
adc
add
jmp
fldl
bound
push
and
sbb
rolb
cmp
dec
sbb
jmp
adc
jbe
mov
mov
xor
in
xchg
sub
dec
xchg
dec
repz
notl
xor
and
xchg
adc
add
fistpl
mov
inc
ret
mov
loop
dec
push
inc
pop
inc
pop
sbb
je
pand
sarl
loopne
add
mov
or
jl
push
or
pop
dec
adc
jmp
insl
imul
pop
cltd
and
je
mov
mov
add
movsb
pop
pop
orl
dec
pop
decl
dec
orb
xchg
and
js
dec
xor
push
ljmp
push
sbb
mov
je
rolb
adc
mov
sbbb
mov
stc
jo
mov
mov
test
lcall
cmpb
jl
incb
hlt
jbe
cmova
dec
adc
imul
in
movsl
jns
mov
push
mov
repnz
insb
push
jp
movsb
aaa
ficoms
jo
jno
jge
pop
mov
adc
sub
sbb
adc
subl
inc
sbb
cmpb
loopne
push
mov
fdivrp
repnz
adc
aam
xor
mov
mov
in
cmpb
mov
add
rol
pop
into
sub
ljmp
hlt
mov
mov
xchg
jmp
adc
rclb
jg
lea
or
pop
mov
mov
sbb
xchg
popa
inc
or
adc
dec
out
jne
push
out
sbb
cmpsb
pop
ss
jmp
icebp
imul
imul
xor
push
mov
mov
lock
adc
leave
push
pop
int3
pop
dec
shll
jmp
xor
in
in
out
sti
out
aas
adc
push
inc
outsl
rorb
enter
add
or
and
adc
pop
mov
and
xor
add
add
fsub
ss
lock
mov
mov
cmp
outsl
jne
maskmovq
mov
stc
and
sub
addl
out
dec
and
inc
jne
push
and
push
or
cmp
push
mov
add
cld
or
loopne
nop/reserved
iret
add
jecxz
inc
jmp
dec
xchg
out
or
or
fidivs
adc
call
imul
mov
lea
sar
cmp
and
jae
lock
add
aas
jb
sbb
xchg
inc
xor
mov
scas
outsl
xchg
outsb
sbb
xor
adc
sbb
fxch
in
pop
push
mov
and
pop
inc
jnp
inc
mov
stc
clc
cli
test
pop
dec
sbb
mov
das
std
push
jne
popa
pop
neg
jp
insl
inc
outsl
xor
or
repz
mov
mov
push
mov
enter
icebp
movsb
gs
movsl
movsl
dec
stos
xchg
lahf
jbe
dec
sbb
mov
mov
adc
xchg
fistps
decl
jne
adc
pop
cmpsl
mov
popl
add
xor
movsl
inc
pop
cmc
sysenter
push
dec
jmp
push
ljmp
add
ret
sub
mov
testl
pop
and
and
loop
flds
add
andb
add
in
shr
scas
mov
jo
jl
lea
pop
add
shrl
and
push
cmp
add
or
xchg
xchg
orb
or
rolb
pop
add
test
adc
stc
push
js
mov
pop
mov
or
pop
cmpsl
push
jb
in
jmp
mov
ret
and
test
jle
lea
cmp
cld
xchg
push
and
jg
lods
cli
std
mov
adc
ja
cmp
mov
dec
sbb
push
xor
and
cmp
cmp
sbb
scas
pop
loop
out
hlt
adc
pop
cmp
push
cmp
call
add
and
mov
dec
shr
cs
loope
and
out
add
jle
rolb
xor
sbb
mov
sbb
rcll
sar
pop
daa
mov
daa
push
dec
loop
orb
add
out
lock
jne
and
xlat
enter
pushf
andl
xor
les
popf
out
mov
popa
or
jg
fsubr
insl
mov
jge
jmp
ja
pop
and
or
jnp
add
in
cmpl
popf
sub
aaa
mov
ret
dec
test
jg
sub
stos
xor
ds
adc
sbb
mov
push
adc
or
or
push
jmp
xchg
por
test
loop
ficoms
cmc
mov
sub
or
pop
push
movhps
add
in
sbb
dec
jg
neg
sbb
push
lods
sbb
inc
or
popa
andb
lret
sbb
xchg
add
push
mov
pusha
cmp
ja
jle
je
jge
mov
dec
mov
dec
or
adc
loopne
or
test
push
cs
push
int
mov
xor
xchg
pop
icebp
jo
fisttpll
cmp
rorl
xchg
cs
push
outsb
pop
jl
ret
outsl
cmp
pop
add
add
sbb
cmp
push
mov
pusha
sbb
sti
pop
ja
or
shll
mov
out
ret
and
add
pop
add
cmp
xchg
mov
test
outsl
cld
fdivs
xor
je
push
pop
inc
loopne
inc
in
or
sbb
inc
push
inc
pop
pop
int
divl
js
fcoml
jnp
add
and
push
pop
xchg
push
sbb
jle
ret
push
push
incb
or
leave
pusha
and
inc
adc
push
adc
cwtl
dec
dec
cmp
adc
cmpsb
add
iret
in
mov
inc
xor
xchg
incb
add
or
add
cmp
mov
or
leave
push
and
or
xchg
sub
inc
push
push
push
mov
das
and
and
ss
mov
and
sarb
push
jne
mov
push
add
mov
fwait
pop
add
push
add
and
sbb
jp
pop
lret
std
or
cmp
mulb
mov
lods
in
fidivrl
pop
mov
and
inc
and
rcrl
jmp
cmp
xchg
xor
adc
je
fdiv
push
ret
push
jo
je
push
push
stos
rorb
or
repnz
xor
test
roll
push
xor
add
add
mov
add
lods
in
in
push
pushf
mov
pop
add
sbb
cmp
mov
inc
push
icebp
inc
fwait
add
sbb
pop
sar
adc
xor
or
inc
inc
cmpsl
inc
push
push
adc
pop
inc
iret
insl
pusha
or
and
cld
insb
ljmp
add
jns
in
or
inc
fucomp
gs
mov
nop
dec
mov
push
int
sti
addr16
dec
add
rclb
xchg
out
sarb
dec
jge
add
cmp
pop
sbb
in
test
jge
add
scas
aam
mov
pop
aam
pop
cltd
not
aam
test
clc
jne
or
xchg
push
adc
ljmp
cmp
xchg
push
ss
mov
lea
lea
insl
push
adc
decb
test
outsb
fsubr
pop
outsb
movsb
mov
das
mov
lods
loope
pusha
loopne
lret
lds
cmp
push
cmp
decl
xchg
xor
ja
popa
push
out
mov
les
hlt
push
pushl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
incl
adc
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
incl
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
incl
fdivs
jne
filds
or
shrl
add
push
adcb
call
enter
mov
and
mov
cltd
xchg
mov
mov
or
decl
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
rcrb
mov
mov
movsl
in
lahf
xor
mov
js
stc
pushl
sbb
push
sub
insb
fs
add
push
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
inc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
idiv
jg
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
inc
shll
jmp
outsb
xor
mov
sarb
add
in
add
pop
decl
leave
jl
fnstsw
add
daa
adc
or
and
test
or
call
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
decl
pop
mov
adc
lcall
mov
pushl
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
jp
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
popa
std
ljmp
push
test
ss
sbb
push
imul
aam
loopne
jg
pop
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
call
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
lcall
or
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
incl
outsl
and
xchg
ja
int3
add
mov
das
es
lds
decl
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
push
arpl
pushf
mov
insl
add
ss
jmp
addr16
jb
lcall
mov
loop
sub
or
mov
xchg
or
pushl
or
rcl
xchg
aam
clc
mov
push
int
mov
negb
jmp
ja
outsl
ja
mov
out
sti
jo
std
dec
lret
pop
or
adc
sahf
gs
clc
sar
imul
push
js
jmp
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
icebp
ljmp
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
stc
sbb
mov
lret
mov
cmpsb
mov
sarb
xchg
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
sti
jmp
filds
sub
lcall
inc
add
mov
push
pop
push
cli
adc
add
jns
clts
add
add
add
and
cmp
in
pop
pop
or
aaa
xor
push
push
pop
push
and
add
pusha
push
jle
jo
js
or
or
add
sub
outsb
add
insb
add
repz
mov
insb
insb
adc
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
push
sbb
jg
dec
push
push
inc
push
push
or
push
sarb
inc
sub
jg
inc
dec
jae
jb
arpl
jae
jb
gs
je
jb
pop
sbb
mov
fldt
inc
dec
inc
push
dec
xorl
sub
mov
or
push
neg
mov
push
mov
jne
imul
outsl
femms
mov
push
push
sbb
outsl
outsb
push
dec
dec
inc
sbb
inc
and
jg
xor
cmp
sub
insb
je
fisubrs
imul
fldt
aaa
outsb
outsl
je
or
push
not
fisubs
inc
data16
insb
cmpsl
imul
sbb
sbb
fs
mov
jb
inc
addr16
arpl
arpl
insb
push
mov
push
ja
gs
das
mov
mov
cmpsl
mov
jo
mov
adc
fistl
inc
push
fs
push
nop
loope
fildl
dec
arpl
mov
insl
test
jmp
jb
fs
arpl
pop
ret
push
or
imul
pop
add
add
bound
mov
insl
inc
xchg
insl
insl
pop
iret
jo
divb
cmp
dec
and
sbb
pop
push
cmp
addr16
push
jae
push
xor
shll
add
and
ret
in
dec
decl
shll
ds
jg
push
imul
push
cmp
jb
sbb
imull
sub
aaa
mov
cmp
add
fldenv
lret
rorl
fnstenv
fcmovu
push
inc
gs
push
mov
and
popf
jge
sbb
add
pop
push
dec
fs
das
mov
std
cmpsb
in
addr16
outsl
js
xor
push
dec
inc
dec
add
cmp
jge
inc
add
xchg
cs
mov
mov
mov
push
add
popf
pop
sahf
std
std
add
pop
push
pop
pop
adc
xor
ret
add
inc
adc
mov
sti
inc
mov
add
bound
adc
add
add
mov
imul
gs
imul
pusha
addr16
add
mov
notb
outsb
je
popa
jae
dec
push
push
adc
decl
mov
insl
xor
xor
adc
sbb
outsb
ja
xor
adc
add
out
ja
pop
mov
xchg
insl
ja
ja
add
xor
movhps
add
insl
cmp
mov
ja
push
push
push
dec
cltd
add
xchg
lea
popa
insb
xor
inc
and
mov
cltd
fiaddl
ja
xor
or
pop
insl
jns
outsl
iret
addr16
adc
mov
add
or
nop
mov
leave
in
je
js
dec
pop
push
jle
lds
jo
jo
push
push
dec
push
in
imul
popa
arpl
or
mov
xor
inc
adc
add
out
inc
xchg
push
popa
jb
adc
in
ret
iret
icebp
pop
pop
sub
jne
outsb
addr16
nop
lret
add
bound
jns
pusha
outsb
adc
shrl
add
and
aaa
adc
je
insb
cmp
and
cs
lcall
pop
push
inc
inc
dec
pop
sbb
outsl
mov
push
pop
xchg
jae
arpl
lock
dec
push
arpl
shlb
fdivs
mov
jb
mov
dec
push
cmp
inc
dec
and
gs
fwait
outsb
loopne
sbb
jb
jb
divl
cmp
ds
pop
push
aas
and
xorl
out
out
cmpb
and
sti
jae
and
lods
pusha
gs
inc
int
mov
daa
cmp
push
test
xor
push
gs
in
sbb
sub
aaa
cs
out
xor
jp
jae
les
mov
cmp
fwait
xlat
and
pop
or
sub
xchg
push
cmpps
jne
insb
lock
sub
shll
mov
sbb
ja
imul
ss
addr16
sub
sub
dec
cmpb
pop
mov
and
addr16
cmp
jnp
sub
sbb
sub
out
imulb
xor
xor
adc
or
mov
dec
dec
inc
push
fildl
lock
inc
daa
and
and
pusha
insb
mov
popa
sti
sbb
stos
mov
daa
dec
push
rorb
add
std
syscall
xor
add
pop
sub
sub
pop
movsb
daa
sub
das
xor
sbb
sbb
sbb
sub
loop
add
je
cmp
das
cmp
or
or
push
add
dec
inc
pop
add
nop
lods
cmc
add
loopne
fadds
shlb
mov
int
pop
pop
inc
xchg
inc
xor
and
cmp
shlb
fildl
aam
das
shlb
push
cmp
cmp
add
bound
adc
in
das
mov
pop
and
or
cwtl
das
fs
in
or
xor
loopne
mov
shlb
das
cwtl
sbb
test
sbb
in
and
xor
sbb
fsubs
dec
mov
popa
das
jb
push
mov
fs
or
xor
cmp
xor
mov
mov
adc
insb
pop
push
aam
int3
push
lods
xor
xor
enter
das
add
xor
leave
or
xor
pop
sub
ss
nop
call
mov
mov
inc
fidivs
or
dec
lock
in
rcrb
enter
mov
or
push
or
or
in
sub
faddl
aam
das
mov
int
dec
cmp
adc
shll
int3
push
rolb
pushf
dec
push
sbb
das
push
xor
add
pop
inc
pop
jecxz
xor
cld
pshufw
dec
imul
outsl
jb
gs
jle
pxor
and
sbb
popa
lock
in
jb
sub
push
push
or
jo
jl
jne
pop
js
cltd
xor
outsb
arpl
lds
or
outsl
arpl
xchg
mov
sbb
dec
pop
mov
push
dec
push
dec
pop
imul
je
ja
insl
stos
insl
data16
sub
xor
bound
push
insl
jo
mov
xor
mov
cs
loop
cmpb
andl
dec
and
test
push
xor
gs
leave
dec
outsb
sub
sbb
push
add
jo
sub
fisubrl
and
add
fs
rcrl
lret
and
mov
jne
and
mov
jae
outsl
inc
push
jg
or
xor
insl
divl
idiv
mov
push
arpl
addr16
push
pop
pop
pop
fwait
les
mov
fldcw
sahf
inc
insl
pop
and
pop
outsb
xchg
pop
popa
and
sbb
push
fisttpl
cmp
inc
dec
mov
jg
sub
push
pop
push
imul
insb
rclb
push
push
popa
mov
cmp
sbb
push
stos
pop
cmp
js
mov
ja
push
leave
insl
iret
inc
fadd
and
je
add
inc
fldl
call
dec
push
dec
dec
inc
dec
inc
outsl
arpl
mov
mov
xor
xor
inc
insb
sbb
and
mov
jae
inc
movsl
jo
adc
cs
push
fsubs
lahf
xor
add
roll
sub
pop
sbb
gs
in
xor
inc
inc
mov
lcall
jg
shll
xor
imul
lods
outsl
addr16
cmc
and
cmp
insb
pop
scas
shl
sbb
das
inc
inc
dec
inc
push
pop
mov
xlat
fimull
cs
imul
sarb
aad
into
adc
adc
bswap
push
pop
sub
jnp
bndldx
mov
jno
cli
jne
jae
imul
mov
cmpsl
xchg
dec
and
aam
outsb
push
or
push
loope
jae
xchg
add
shlb
loope
jg
xorb
aaa
scas
pop
testl
icebp
xchg
dec
xlat
add
lahf
add
pop
aas
out
add
inc
xchg
bound
add
inc
mov
cmpsl
les
iret
adc
insb
mov
push
mov
pop
movsl
dec
cmp
or
adc
cmp
data16
or
or
jae
cmpl
lods
jo
sub
lods
add
popf
std
xor
arpl
push
push
sti
gs
arpl
xlat
lds
andl
xor
je
pusha
stos
or
cmp
adc
xor
xor
pop
aas
jb
and
sarl
pop
shl
push
dec
dec
das
mov
mov
nop/reserved
sub
adcl
ss
mov
mov
mov
jo
mov
mov
arpl
inc
pop
bound
cld
xorl
xchg
mov
jo
dec
inc
dec
and
cmp
fidivrl
inc
jne
cmc
ret
hlt
push
outsb
daa
and
mov
rorb
mov
test
pop
test
pusha
and
jae
push
arpl
xor
sub
sub
pop
adc
adc
popa
ret
fs
pop
insl
push
pusha
fmuls
loope
or
push
arpl
xor
sbb
mov
jne
inc
outsb
imul
push
mov
lea
ds
push
xchg
addr16
hlt
dec
and
cmp
add
imul
jle
xor
pop
push
aas
das
popf
mov
jl
xchg
pop
in
in
aaa
jo
jbe
cld
imul
dec
outsl
push
outsl
outsl
inc
add
xor
inc
dec
mov
sub
mov
push
sub
xor
popa
inc
jne
loop
push
mov
jmp
mov
dec
jno
inc
pop
test
fwait
pop
popa
xlat
push
xchg
sbb
lods
outsl
jne
insl
jo
cmp
jns
insl
aas
gs
nop/reserved
mov
cmp
inc
stos
dec
sbb
das
inc
add
pop
pop
xchg
jo
or
mov
mov
and
adc
cmp
fidivrs
bound
adc
sub
mov
pop
pop
or
jmp
test
pop
dec
xor
mov
xorb
loop
incl
jo
cwtl
cltd
cltd
ret
and
jmp
cltd
adc
test
fsts
movsl
lcall
mov
out
stos
je
into
enter
imul
shrb
xchg
rol
pop
popf
fdivrl
vmptrst
call
push
adc
mov
lcall
sbb
idiv
mov
adc
pop
xchg
adc
lcall
outsl
int
xchg
lret
iret
data16
gs
shl
popf
and
cwtl
repz
jnp
jnp
imul
sahf
and
pop
adc
popf
repz
lret
xor
or
or
jne
adc
inc
xor
adc
shrl
adc
mov
fbstp
mov
iret
lret
std
in
add
fisubs
movsl
jb
leave
pop
jno
incl
ljmp
pusha
enter
ret
shlb
ja
jno
idiv
jmp
data16
in
leave
jmp
cli
fdivr
std
jmp
ljmp
cld
and
jmp
sbb
cltd
fsub
lock
std
aad
sti
jmp
jmp
xor
mov
stos
stos
stos
cltd
dec
fmul
cmp
xchg
sti
lock
jg
mul
cmc
lock
jmp
in
pop
push
dec
dec
dec
dec
push
dec
push
mov
xor
ret
bound
jne
mov
pop
out
pop
xor
cs
pop
push
das
mov
add
pop
mov
mov
push
cmc
add
or
sti
jnp
jno
aad
push
xor
jbe
jo
xor
lock
inc
nop
ss
addb
enter
dec
push
xor
ja
adc
push
or
or
jne
es
insb
call
addr16
jb
and
and
stc
je
je
inc
pop
lock
sub
or
or
cmpsb
mov
cs
and
mov
xor
jbe
xor
cs
pop
add
adc
int
popa
out
idivb
jp
jo
gs
xor
add
xor
cmp
pop
dec
and
shrl
mov
cmp
and
push
or
ss
adc
testb
loop
inc
inc
aad
gs
outsl
shlb
je
jnp
or
notl
mov
popa
pop
inc
pop
sub
jae
daa
nop
pop
cmp
cs
push
and
sub
push
jb
jae
sub
scas
test
ret
push
sbb
dec
sbb
sub
bound
ss
or
out
ficompl
outsl
jne
outsl
add
inc
dec
pop
fcmove
mov
cmpsb
add
and
or
pop
js
cs
add
fldl
or
pop
imul
test
cmp
incl
lcallw
xor
push
push
jbe
test
decl
fidivl
pop
mov
sbb
add
mov
roll
jg
push
add
jb
mov
add
mov
insl
leave
call
lahf
call
dec
pusha
add
jnp
add
add
jmp
daa
xor
std
int3
inc
fs
mov
pusha
pop
or
ss
sahf
jl
add
sub
testb
call
cmpsb
push
and
inc
push
inc
addr16
mov
aas
or
test
or
pusha
fiadds
dec
inc
dec
push
shll
cmp
lahf
sbb
imul
sub
add
or
fildl
enter
fcoms
add
les
int
fs
insl
dec
pop
push
aaa
out
stos
pop
or
nop
or
cmpsb
movsb
nop
or
nop
lods
stos
dec
cwtl
cmpsb
mov
nop
mov
mov
test
adc
mov
mov
and
mov
mov
data16
add
mov
xor
lahf
add
or
decl
data16
jo
cwtl
xchg
cwtl
dec
rclb
test
outsb
adcb
xor
xor
xchg
sbb
pusha
pop
out
xor
xchg
or
incl
add
jmp
mov
jp
add
cmp
inc
xor
push
fcomp
push
and
or
mov
dec
add
loopne
mov
adc
cs
aas
mov
int
push
adc
cmpsl
into
push
jbe
pop
and
pop
add
sar
or
and
push
add
xor
in
fbld
outsl
add
and
cmp
add
sub
aam
dec
add
pop
pop
into
pop
adc
int3
loopne
jg
xchg
add
clc
sbb
rol
fstpl
add
jmp
inc
push
xchg
and
xchg
ret
outsl
imul
jg
pop
jo
jo
jo
popa
jo
cmp
or
xor
inc
cmpl
ss
cmpl
jne
add
lods
mov
dec
push
add
aas
inc
push
aaa
xlat
xor
push
andl
add
jno
add
repz
mov
and
dec
adc
jl
mov
ja
mov
in
ja
scas
cmovno
cld
ja
inc
inc
outsl
adc
sub
cld
dec
cmp
imul
dec
xchg
lds
and
inc
xorb
outsl
jae
mov
adcl
cli
fdivs
inc
add
jae
outsb
pop
push
dec
cld
lods
sbb
les
and
sub
mov
dec
push
jge
pop
xchg
icebp
stos
dec
push
jo
jbe
movsb
and
aas
loope
adcl
ljmp
inc
or
cmpsb
xor
jbe
jbe
ret
and
movsb
cs
or
push
inc
dec
movsb
mov
and
insl
push
inc
push
inc
dec
cmp
sub
movsb
pop
and
fs
ss
into
test
sub
or
int3
cmp
ja
or
das
and
mov
and
add
push
cs
outsl
jne
fs
pushf
sbb
jbe
xchg
ds
add
js
sbb
sub
out
aam
jg
push
inc
dec
add
test
loope
jno
bound
fcompl
inc
jb
lods
addb
add
adc
and
sbb
outsl
xchg
jp
adc
je
stos
mov
jns
push
out
cmp
inc
cmp
mov
test
loope
inc
xlat
lret
mov
imul
call
enter
sub
inc
adcl
pop
sub
inc
push
push
loope
mov
inc
bound
push
data16
inc
addr16
pop
popa
or
movsb
or
pop
or
sbb
mov
push
inc
cs
xchg
mov
xor
fsub
pop
inc
mov
sub
addr16
add
stos
lds
sub
jg
push
mov
or
insl
mov
fsubrl
ffree
sbb
movlps
fbstp
push
das
sub
cwtl
sub
add
inc
roll
add
dec
add
inc
dec
shlb
dec
es
adc
daa
cmc
divb
sbb
inc
xchg
or
add
popa
outsl
jns
shll
cmp
pop
jns
inc
jne
xor
enter
pop
aaa
dec
mov
fimuls
arpl
inc
mov
dec
or
outsl
pushl
imul
dec
dec
cs
inc
sub
cmpsl
jecxz
pop
inc
dec
daa
jns
jne
jo
rorb
push
fwait
mov
in
adc
rolb
inc
scas
push
mov
jo
pop
sbb
push
insb
add
pop
mov
sub
dec
das
inc
inc
cmpsb
add
pop
fisttps
cmpb
adc
add
repnz
int3
fists
lds
xchg
lret
adc
or
fwait
push
es
sbb
stos
jns
imul
dec
imul
and
xchg
cmpb
stc
push
or
inc
push
jl
xor
cs
xor
mov
cmp
adc
sbb
or
gs
jno
mov
nop
sub
mov
adc
test
cmpl
ficompl
sub
push
jns
and
addr16
les
mov
arpl
add
sub
mov
lahf
add
dec
push
and
and
dec
push
imul
gs
adc
daa
popf
mov
sub
add
inc
inc
mov
mov
mov
insl
insl
cmp
xlat
popf
stc
ds
cli
pop
and
and
xlat
push
scas
inc
jge
shl
das
jnp
pop
mov
cmp
mov
das
push
mov
pushf
inc
jno
add
pusha
pop
xor
sub
sbb
rolb
or
xchg
imul
jnp
mov
mov
push
adc
inc
and
dec
push
and
out
mov
xor
ds
sub
sub
jle
inc
dec
inc
adc
inc
pop
adc
dec
dec
sti
adc
mov
push
push
dec
push
inc
pop
cmp
sbb
shrb
cmc
jae
adc
mov
xor
das
sub
or
insb
fwait
cltd
add
xor
inc
push
dec
sub
aaa
mov
cmp
dec
inc
mov
dec
dec
inc
mov
pop
adc
imul
imul
hlt
das
or
jnp
xor
jae
mov
cmp
nop
xchg
outsl
sbbb
inc
xchg
aaa
sub
inc
jg
das
jae
jae
push
jns
cmp
mov
das
std
inc
and
push
add
xor
sbb
idivb
ret
mov
xor
das
or
pop
fnstenv
or
ja
mov
popl
js
or
loopne
push
icebp
imul
inc
push
pop
inc
movsb
xchg
push
push
or
out
insb
les
or
and
push
test
and
push
ja
jmp
mov
daa
push
mov
push
ds
jbe
and
addr16
adc
and
sub
push
cmovne
dec
dec
push
jge
mov
push
and
xchg
out
scas
icebp
fwait
nop
add
xor
push
gs
inc
iret
push
push
cmp
dec
outsl
sar
mov
pop
xchg
dec
pop
dec
inc
dec
mov
ret
in
push
loopne
popa
jbe
outsb
cmp
and
inc
mov
and
add
out
in
adc
ss
push
mov
push
push
pop
adc
inc
popa
and
xchg
jbe
add
mov
movl
adc
sub
imul
stos
pop
and
mov
push
sub
lea
imul
imul
aaa
popl
or
adc
sub
cmp
sbb
push
out
xor
adc
push
bound
mov
rorb
stc
not
or
inc
push
inc
pop
jns
lahf
arpl
xor
daa
jno
cmp
sbb
xor
cmp
cmp
xor
xor
cmp
cmp
jne
cmp
sbb
ss
cmp
cmp
aaa
ja
cmp
cmp
cmp
cmp
jns
das
pop
xor
daa
jp
insl
xor
cmp
jnp
or
pusha
sbb
outsl
repnz
xor
and
pop
mov
pop
jno
out
xor
xchg
es
imul
and
nop
push
mov
mov
fmuls
cmp
test
cmp
in
pop
sub
pop
sub
daa
int
mov
daa
int
cmp
xor
and
jnp
jno
lods
jge
imul
mov
or
ds
push
push
adc
fisttpll
adc
pop
imul
dec
imul
dec
adc
fidivl
daa
fistpl
arpl
lea
cmc
jge
push
popa
or
cmpsb
adc
and
adc
inc
adc
or
lods
adc
daa
adc
fbld
push
sub
adc
and
adc
xor
pushf
cmp
daa
and
dec
xchg
adc
pop
cmp
lods
imul
ja
lcall
dec
imul
ror
inc
out
dec
mov
jb
mov
rcrb
das
cs
push
cmp
jl
or
inc
push
push
dec
mov
push
push
or
pop
mov
or
mov
sub
push
push
sbb
push
xchg
mov
lods
sarb
push
pop
or
outsb
cs
dec
inc
pop
or
int3
mov
or
mov
and
rorb
or
adc
inc
push
pop
or
es
dec
daa
push
imul
into
inc
dec
or
repz
or
test
and
and
xrstor
lcall
dec
lcall
mov
popa
mov
bound
mov
or
fs
mov
mov
data16
mov
or
push
or
sub
or
jbe
inc
pop
hlt
push
mov
cmp
arpl
bound
cwtl
adc
or
sub
es
hlt
lea
add
push
pop
fs
ds
adc
arpl
mov
add
push
popa
jo
lods
xchg
pop
cmove
and
aaa
orb
mov
out
mov
push
inc
adc
gs
xor
test
adc
fdivs
add
test
cmp
insb
gs
xorb
add
inc
sbb
lods
sub
aas
jbe
negb
inc
outsb
jbe
je
jb
and
add
bound
push
dec
mov
dec
outsl
push
inc
sbb
jo
push
fmuls
inc
and
pop
arpl
dec
xor
les
cltd
pusha
das
inc
inc
fs
push
fldcw
daa
push
insl
jo
mov
adc
dec
jo
inc
pop
add
and
clc
xchg
jo,pn
insb
jo
pop
sub
mov
inc
cmp
pushf
sbb
sub
inc
aas
cs
add
xor
add
scas
add
push
add
orl
mov
inc
and
movsb
das
lods
pop
fwait
mov
mov
dec
ds
scas
aas
or
or
dec
lret
outsb
mov
outsl
bound
inc
mov
add
pop
push
xchg
aaa
mov
xchg
dec
arpl
sbb
pop
pop
inc
mov
dec
cmp
sbb
push
icebp
ds
loopne
imul
popa
das
xor
sub
lret
push
fdivrs
push
bound
fdivrs
dec
push
jb
inc
daa
lds
and
lcall
dec
mov
dec
xor
repz
adc
imul
sbb
xchg
cld
leave
mov
jbe
dec
pusha
seta
aaa
mov
jcxz
push
xchg
iret
bound
cmpsl
cmpl
jle
cmp
add
mov
adcb
test
lret
xchg
into
mov
xchg
sbb
scas
push
jbe
pop
push
fisttpl
fisttpll
stos
je
punpckhwd
inc
adc
outsl
rorl
jae
push
outsb
push
push
nop
pop
inc
jecxz
shlb
jo
dec
mov
mov
or
push
jo
gs
fdivrl
rcrb
dec
fs
pop
sbb
dec
lock
push
inc
xchg
arpl
test
xchg
adc
cmpsl
mov
lret
mov
push
pop
inc
ss
inc
scas
inc
imul
shlb
js
inc
insl
mov
frstor
scas
roll
or
outsl
out
mov
aad
dec
mov
outsb
pop
rorl
addr16
inc
hlt
push
mov
jae
andl
in
add
push
inc
insl
outsl
scas
push
jmp
cli
jae
gs
sub
lea
testb
inc
sbb
sahf
sbb
pop
inc
dec
fwait
add
pop
rclb
push
outsl
imul
testb
lods
and
iret
and
sbb
dec
inc
imul
adc
push
inc
je
loopne
arpl
cmp
lcall
and
cmp
push
int3
sbb
inc
sub
scas
and
sahf
jnp
imul
inc
inc
sub
sbb
cmpsl
and
js
popa
jae
add
shrl
insl
xlat
sbb
fs
scas
xorb
sbb
inc
add
lds
lock
out
into
jmp
pushl
fwait
xor
inc
mov
xchg
sbb
add
lahf
inc
stos
sbb
aaa
dec
imul
int
inc
cmp
cmc
ljmp
or
sbb
jae
mov
lds
mov
xor
push
pop
inc
xchg
int
inc
jo
sub
dec
mov
call
jns
dec
mov
mov
and
es
push
out
jg
or
and
roll
test
adc
popa
mov
scas
dec
xor
add
dec
push
pop
insl
adc
popf
xor
xor
roll
das
push
push
rclb
xor
in
aam
inc
fs
outsl
jbe
fsubrs
xor
les
divl
idivb
dec
movsl
cmp
outsl
cmp
jnp
inc
mov
cmc
cmpsb
lret
jne
mov
gs
jo
shrb
adc
das
arpl
cmp
test
and
cmp
or
test
adc
and
and
and
mov
mov
pop
dec
jae
les
bound
sahf
dec
and
pop
pop
sub
mov
sub
inc
pop
inc
inc
and
mov
sub
pushf
les
imul
mov
mov
sbb
test
scas
xchg
sbbl
cmp
push
adc
mov
dec
inc
adc
push
push
or
je
push
dec
mov
jae
and
ja
test
cmp
mov
sahf
lods
pop
push
push
int3
les
lods
movsb
pushf
imul
pop
lcall
rclb
ja
pop
popa
adc
cmc
push
popa
bnd
fnstenv
and
scas
dec
loope
xchg
dec
clts
xor
fdivs
push
scas
fs
call
cmp
mov
cmp
jne
daa
loopne
add
sbb
iret
pop
sub
and
aaa
outsb
or
cwtl
shrb
ret
in
or
lcall
xchg
rolb
jae
ret
lea
dec
dec
pop
xchg
aas
test
adc
push
fsubrs
dec
dec
adc
jo
in
sub
pop
xlat
dec
lret
sub
and
testb
sub
mov
xchg
inc
cs
add
insl
xchg
shr
popa
sbb
lods
push
test
pop
arpl
add
dec
dec
xchg
dec
sub
test
mov
or
cmpsl
jo
movl
sbb
pop
inc
lret
mov
dec
dec
orl
dec
push
pop
insb
subl
orb
fiadds
dec
popa
nop
inc
in
jo
xor
dec
mov
push
ja
popl
inc
mov
xlat
adcl
push
pop
adc
jno
popa
insb
pop
push
jne
inc
pusha
cmp
dec
imul
jne
push
or
and
scas
jo
push
cmp
mov
sahf
jbe
out
and
or
mov
inc
loop
sub
insb
mov
arpl
and
add
xchg
fdiv
adcb
repz
inc
rorl
movsb
imul
ret
pop
sbb
pop
pop
mov
jno
inc
jb
sbbb
add
jns
push
roll
mov
es
in
or
imul
mov
cli
xor
fdivr
or
aam
adc
cmpsl
and
sub
sbb
xor
push
das
pop
push
sbb
cmp
imul
pop
pop
sbb
adc
test
push
ja
jae
loopne
cmp
int
add
sub
push
push
pusha
dec
sbb
aaa
add
push
xorl
xor
add
ficompl
or
fsts
insb
mov
and
sub
jo
mov
sbb
or
pop
shrb
sbb
pusha
nop
pop
and
jae
xchg
pushf
sbb
xchg
and
mov
adc
xchg
push
aas
daa
ret
aaa
ljmp
xchg
scas
and
gs
inc
mov
out
xchg
fcomp
sbb
pop
daa
fdivs
sub
cmpsb
add
fs
mov
movsl
jb
adc
adc
sbb
xchg
nop
mov
daa
ret
xchg
shlb
je
outsb
xchg
stc
mov
arpl
test
leave
adc
xor
inc
loopnew
lods
test
push
mov
adc
or
daa
inc
jne
inc
insb
movsl
pop
aaa
dec
test
pop
out
sbb
add
insb
mov
mov
xor
inc
pop
fiaddl
cmp
mov
sbb
out
mov
add
and
mov
jo
push
cmp
and
and
aad
lock
xchg
sub
mov
jge
stos
push
and
mov
rcrl
mov
sub
jp
int3
les
or
or
xor
imul
mov
frstor
outsb
insb
jne
mov
stos
add
rcr
add
cmp
mov
outsb
mov
sub
mov
and
add
mov
sub
xor
push
sub
outsl
ret
sahf
lret
pop
push
roll
sbb
jo
add
jl
mov
lock
jns
adc
push
pop
movsb
or
sub
xor
and
andl
add
cs
cltd
outsb
or
mov
imul
mov
popa
and
sub
cltd
cmp
dec
fidivs
adc
add
xchg
or
inc
push
repz
push
into
test
jo
jb
test
pop
movsl
aaa
jbe
and
push
es
sub
dec
adc
fstpt
mov
cmp
nop
xor
cmp
test
mov
cwtl
addr16
addl
jno
out
xor
pop
push
cmpsl
addr16
add
cmc
sbb
add
arpl
and
ja
mov
xor
daa
mov
pop
sbb
and
and
jne
call
push
ss
sbb
pop
or
mov
xchg
lea
hlt
mov
xchg
addr16
mov
pop
pop
jl
imul
insb
fadds
sub
or
push
fwait
out
pop
sbb
leave
cmp
xchg
sbb
pop
stc
pop
icebp
sub
dec
push
push
dec
bound
mov
adc
int
sbb
out
push
iret
dec
cld
cmpsb
cmpsl
mov
int
push
push
and
and
sub
sub
jo
jns
cwtl
mov
in
pop
jge
loopne
xor
cmp
and
out
ret
fildl
lods
jle
push
jo
add
sub
and
push
mov
mov
mov
xor
xor
rdmsr
xor
pop
dec
out
in
sbb
idivb
pop
cld
mov
add
add
pusha
and
jbe
push
pop
clc
jge
xor
cmp
imul
add
pop
add
addr16
jae
and
test
lock
adc
pop
cmc
insb
dec
inc
lods
dec
imull
dec
xchg
orb
dec
pop
push
in
inc
and
inc
push
xchg
mov
dec
xchg
add
aam
dec
adcb
pop
call
mov
sub
insb
cltd
dec
arpl
sahf
aad
imul
mov
shlb
jb
or
add
sub
inc
xchg
or
and
nop
sub
sub
or
inc
xchg
nop
and
pusha
or
inc
jle
push
sti
les
cs
or
das
sub
test
and
inc
enter
adc
test
es
inc
enter
enter
das
pop
test
inc
cmp
xor
pusha
jle
test
and
imul
sub
xor
inc
enter
adc
test
sub
inc
enter
enter
pop
cmp
aas
daa
inc
enter
jle
adc
or
and
push
das
and
adc
test
bound
mov
rorb
sub
and
mov
and
or
aad
icebp
mov
xor
pop
and
dec
fisubl
dec
dec
inc
dec
pop
mov
dec
push
inc
push
rolb
pop
and
add
pop
sub
mov
push
xor
incb
jns,pt
insb
pop
add
mov
ficomps
dec
das
pop
cs
enter
pop
cs
dec
dec
notb
rcrb
mov
cmp
dec
mov
mov
outsb
or
inc
dec
push
cmp
inc
inc
adc
xor
add
add
jne
jo
arpl
jne
popa
insb
test
imul
sub
movsb
jbe
fbld
mov
call
inc
dec
sub
pop
mov
mov
lcall
or
and
leave
push
push
and
jecxz
nop
or
das
add
jmp
add
jae
xor
aad
xor
addr16
call
sbb
aad
outsb
pop
les
fdivrl
or
inc
ss
lea
ja
inc
xor
ds
ja
jae
or
adc
pop
std
outsl
gs
xor
fs
test
add
dec
out
in
cmp
ja
add
pushw
jg
out
popa
push
popa
xchg
outsb
sub
jnp
js
xchg
jg
add
xor
nop
jo
pusha
add
pop
mov
pop
mov
pop
sub
outsl
dec
dec
inc
cs
push
push
sub
push
ds
inc
jmp
adc
jbe
fnstenv
adc
clc
jb
xlat
push
data16
push
xchg
pop
lock
loopne
int3
les
mov
test
pop
cmp
jle
movsb
inc
cwtl
push
mov
cmpsb
imul
pusha
ficomps
inc
xor
shll
xor
adc
push
clc
xchg
lock
int3
push
loopne
shrb
enter
fwait
cmpsb
les
pushf
shll
mov
insb
pusha
pop
dec
inc
inc
xor
shll
sub
sbb
imul
dec
rcrl
es
fdivs
sarb
lods
test
cwtl
push
xchg
shll
cmpb
lcall
push
inc
cmpsb
imul
imul
scas
fdivs
rclb
push
xor
shll
test
jl
jae
cs
lods
imul
cmpsb
imul
insb
lcall
xchg
in
xchg
xchg
xchg
arpl
pop
shrb
loop
cltd
cmc
cmpsb
lahf
insb
adc
notb
or
mov
mov
add
jbe
data16
jo
imul
imul
push
pop
lods
test
aaa
out
adc
inc
out
into
bound
xor
imul
pop
xor
mov
aaa
sbb
bound
xor
mov
add
xchg
getsec
adc
fisubrl
dec
pop
jb
xor
push
mov
pop
pop
xchg
sbb
push
outsl
push
mov
clc
pop
insb
jne
bound
pop
test
jne
xor
es
xchg
xchg
sbb
into
je
insl
fildl
xor
push
add
push
out
scas
or
movq
xlat
xchg
mov
push
mov
mov
push
xor
add
xchg
inc
bound
pop
pop
xchg
adc
mov
jo
outsl
push
cmp
imul
ret
push
xchg
inc
cmc
push
ja
outsl
bound
jno
jp
in
push
xor
mov
fmul
push
cmp
add
aam
imul
imul
in
adcl
and
dec
push
add
sahf
add
push
push
movsb
mov
xchg
add
inc
lahf
js
mov
scas
xchg
std
insb
cmp
mov
xchg
je
inc
cmp
mov
addr16
pop
arpl
sub
insb
negl
imul
insl
les
and
mov
xor
fstpt
rcrl
xor
cmpl
nopl
aas
lock
push
push
scas
dec
jo
rcr
call
pop
pop
pop
xchg
and
pop
xor
dec
sub
into
xor
mov
mov
or
xchg
mov
sbb
addr16
cmp
aam
xor
or
jne
lret
adc
inc
and
inc
movsb
adc
pusha
pop
andl
int3
add
pop
insl
and
jbe
xor
dec
cmp
xchg
dec
pop
jno
inc
inc
leave
roll
mov
and
aas
cmp
jns
sub
cs
cmpsl
adc
rol
lcall
dec
les
cs
mov
inc
cmp
lret
inc
cmp
push
rorl
subb
add
jno
icebp
pushf
addr16
xor
cmp
into
sub
sti
dec
dec
push
push
and
sbb
pusha
cmpsl
jo
ljmp
aaa
dec
inc
pop
sbb
push
outsl
sub
xchg
rcr
mov
adc
push
and
dec
inc
movsb
gs
sbb
dec
test
inc
sbb
lahf
jle
xchg
add
inc
int3
mov
and
bound
cmp
sub
popf
testl
push
xchg
lock
xor
xorl
pop
loope
bound
or
test
pusha
dec
das
dec
push
push
pop
dec
inc
jmp
inc
push
push
inc
sbb
or
pop
xor
and
or
xchg
mulb
adc
imul
fcmovne
shr
ss
jmp
es
lahf
incl
dec
and
inc
ret
mov
sub
or
add
aas
mov
in
rorb
jb
inc
insb
mov
cmp
pop
push
enter
ja
out
lea
mov
and
lock
hlt
mov
sub
xor
push
adc
and
imul
outsb
add
xchg
mov
xchg
or
shlb
pop
xchg
arpl
fsubrl
imul
push
sub
pop
out
mov
fsubrs
andb
movsl
bound
call
add
inc
lahf
inc
jle
lea
jmp
das
inc
pop
push
jo
mov
inc
mov
dec
imul
fdivr
jne
test
pop
pusha
push
xor
jne
stos
jg
cmp
push
cmp
sbb
sahf
pop
sub
setns
xor
inc
mov
push
pop
dec
fsubl
or
mov
fwait
outsb
cmc
fildll
fistps
mov
cwtl
ret
test
push
test
sti
add
popa
fwait
and
pop
sub
mov
inc
cmpsl
sub
imull
sub
push
sti
rolb
sbb
push
loop
idivl
dec
outsl
sub
inc
xchg
insl
mov
movsb
cmp
jne
push
lods
push
popa
ja
sbb
add
outsl
imul
sarl
ret
cmp
movsl
xor
xchg
mov
xchg
mov
mov
jp
out
push
push
inc
call
mov
mov
dec
cmp
adc
js
arpl
adc
sub
dec
mov
aas
dec
ss
sbb
cmpsb
insl
mov
mov
add
nop
fstps
push
inc
jne
and
iret
xchg
mov
les
leave
xchg
push
loope
dec
fbld
subb
or
cmp
aas
pop
push
sarb
cmpsl
dec
jecxz
inc
mov
add
xlat
out
daa
rorb
and
and
cmp
dec
push
rcr
xor
fbstp
xchg
mov
cmpsl
mov
andb
or
and
negl
les
xor
gs
es
test
add
cmp
pop
popa
insl
jne
aas
dec
or
icebp
mov
push
xor
bound
adc
sbb
fs
shrl
popf
hlt
ja
pusha
mov
inc
pop
jne
movsb
mov
lods
idivl
daa
ss
cmc
ja
dec
jae
shrl
out
mov
subb
inc
pop
and
inc
aas
and
sbb
adc
enter
ds
out
or
inc
sub
xor
and
fwait
xor
jle
loop
push
pop
outsl
sbb
pop
jne
and
pop
fldt
pop
cmp
fcomps
or
or
scas
ja
mov
sub
push
xchg
bound
and
push
sbb
scas
jbe
jae
cs
inc
push
das
sbb
jns
xor
aam
cs
push
popl
jno
lea
mov
inc
dec
dec
dec
dec
push
mov
das
js
dec
pop
sbb
aas
mov
xchg
aas
pop
or
stos
aad
xlat
fistpl
push
clc
inc
pop
les
aad
mov
les
push
or
cmpsl
popa
je
push
out
aad
cmp
jne
clc
movsl
push
jnp
shrb
mov
add
ds
sarb
push
xchg
out
inc
xchg
adc
add
pavgb
dec
mov
mov
fadds
imul
dec
outsl
int
adc
or
outsl
add
mov
dec
test
out
push
inc
add
test
push
cmovg
nop
or
push
aas
sbb
xor
mov
std
aaa
sti
in
mov
ret
addr16
in
xor
jo
popa
ret
jbe
inc
or
addr16
insb
and
lock
jo
roll
dec
mov
lea
outsl
loop
fisubrl
mov
dec
and
aaa
mov
sub
and
cmp
sub
lds
and
adcb
mov
inc
mov
dec
pop
inc
add
dec
pop
xchg
test
jg
inc
push
lods
inc
dec
mov
adc
cmp
xor
popa
into
mov
mov
push
mov
inc
sub
dec
jae
jecxz
sbb
pop
sub
add
dec
inc
sbb
push
push
fdivl
mov
cmpsb
outsl
test
mov
cmp
inc
pop
fs
push
jns
aaa
ss
nop
scas
mov
xchg
je
ror
mov
lods
adcl
bound
push
mov
mov
mov
scas
bound
xor
pop
add
jns
dec
fsubrs
scas
adc
pusha
push
add
lret
mov
test
mov
mov
inc
movsl
xlat
pushf
je
cmp
sub
and
outsb
xchg
inc
rcrl
sbb
sub
xor
inc
xor
pop
leave
ret
loope
ja
les
data16
sbb
or
addb
pop
dec
or
sub
dec
and
lds
scas
jb
xlat
push
sub
pop
les
call
push
inc
test
test
ret
call
or
daa
bound
mov
adc
call
movsb
bound
movb
divl
lcall
sub
inc
test
jecxz
or
adc
and
cwtl
andl
add
adc
jb
jo
sbb
dec
and
or
data16
pusha
push
adc
or
data16
shlb
je
or
mov
pop
fmuls
mov
xor
fs
push
sbb
push
add
popa
push
mov
jo
cmpxchg
outsb
add
andb
and
sahf
sbb
xchg
inc
sbb
imull
mov
add
inc
frstor
push
push
cmp
xchg
inc
sbbb
stc
push
pop
mov
or
add
into
push
push
fs
add
push
imul
testl
insl
push
mov
cli
ficoms
ja
sub
mov
xchg
sbb
mov
sub
sbb
imul
xor
je
cmp
cmovnp
aaa
int3
popa
ret
push
cmp
jecxz
pop
das
out
popa
push
add
xor
push
aaa
pop
imul
adc
push
jno
xor
arpl
int3
or
sub
aaa
mov
shlb
xchg
xchg
push
add
pusha
movsb
aam
scas
or
sbb
add
mov
outsl
lods
ret
ret
push
aas
lods
lods
outsb
lods
aas
sti
aaa
cwtl
mov
push
push
imul
pop
or
movsb
lods
pop
dec
lahf
mov
fildl
lahf
ffree
mov
sbb
or
mov
imul
das
call
ficomps
push
adc
mov
adc
ja
sub
lods
xchg
xchg
retw
out
mov
push
data16
stos
push
mov
push
fnstcw
in
pop
pop
arpl
testl
push
jb
push
push
pop
adc
inc
push
movsl
movsb
inc
cltd
xlat
xlat
je
mov
dec
fiadds
mull
imul
pop
jo
out
add
jbe
outsb
push
dec
add
xchg
cmp
add
pusha
cmpsb
pop
fbstp
cmp
pop
jno
jne
push
xchg
pusha
xlat
test
add
or
addr16
mov
push
or
or
adc
arpl
xchg
dec
push
and
fisubl
jb
shld
sub
push
add
xor
ja
mul
push
dec
cmp
adc
addr16
push
jl
xchg
xchg
popf
mov
mov
sub
xchg
cmp
fcoms
mov
mov
ja
outsl
xchg
popa
ret
in
pop
test
cmp
adc
jbe
sbb
push
mull
aaa
mov
or
xchg
mov
xor
pop
push
push
mov
jae
insl
fisubrs
outsb
sub
jbe
jp
jbe
lods
and
shll
aad
mov
sahf
or
icebp
adcb
mov
shlb
pop
xor
lcall
pop
xchg
lods
sub
inc
pop
inc
nop
iret
es
xchg
add
push
or
cmp
xor
out
pop
xchg
dec
lea
xchg
mov
mov
dec
mov
rolb
push
inc
fwait
popa
jnp
cs
fmuls
scas
adc
mov
daa
xlat
pop
test
daa
addr16
ret
adc
fdivrs
push
clc
inc
popf
je
mov
inc
and
ss
jns
jg
add
sub
pop
or
mov
insl
inc
divb
orl
pop
push
pop
dec
jg
mov
or
push
iret
mov
or
cmpsb
test
xor
xchg
out
or
packssdw
jae
aas
nopl
or
xor
fsubs
and
js
rcr
mov
repz
add
push
sub
and
and
mov
xchg
sub
outsb
sub
in
and
aaa
jmp
and
and
or
stos
pusha
and
push
sub
adc
sbb
or
rorb
jno
sub
das
jp
jp
ret
rcrl
dec
pop
sbb
bound
arpl
movb
push
pop
rorl
dec
inc
push
pop
shll
or
out
add
orl
orb
xchg
movsl
rcll
nop
or
jbe
jbe
mov
inc
inc
test
and
sbb
test
sbb
xor
sbb
mov
mov
xlat
movsb
xor
add
ja
mov
push
or
add
les
fisttpll
dec
mov
mov
movl
xor
xor
push
pusha
outsl
dec
xchg
outsl
add
in
sahf
shlb
lods
lods
cmp
cmp
push
and
sub
andb
inc
add
mov
push
cmp
dec
xorl
rcrl
jne
addr16
push
sbb
and
push
dec
xchg
andb
sub
lahf
add
test
movl
push
pop
ja
pop
cmp
lahf
jo
rorb
insb
lds
and
in
mov
sub
in
lahf
in
popf
dec
lret
push
push
jns
lods
add
popa
mov
fadd
dec
cwtl
add
ret
lds
mov
xor
dec
mov
push
push
or
push
hlt
adc
daa
mov
or
sbb
lcall
add
jns
mov
push
inc
jg
add
les
je
pop
loop
int
xlat
sbb
movb
cmp
inc
mov
pop
mov
or
lods
fwait
pop
stos
or
xchg
cmpsl
xor
xor
or
add
and
sbb
xor
or
int3
push
data16
add
mov
add
cmpsl
inc
push
xchg
add
out
push
mov
add
add
dec
and
pop
ret
lfs
xor
push
xor
ficomps
pop
cwtl
pop
aam
out
loopne
mov
das
push
loopne
mov
rorl
pop
ret
aaa
dec
imul
cmp
mov
femms
inc
inc
inc
dec
adc
ja
mov
xchg
sbb
and
cmp
sub
or
jl
loop
and
xor
cmp
ret
push
daa
arpl
jbe
jae
imul
sub
pop
fsub
mov
sbb
mov
movl
inc
adcl
or
dec
sub
std
mov
push
inc
sub
and
fdivrl
add
mov
lea
mov
fs
cmp
aaa
sbb
mov
sub
add
and
es
pop
cltd
pusha
and
fldcw
leave
or
xchg
pop
push
insb
or
sbb
dec
inc
mov
xor
sub
add
fadd
push
xor
add
rcrb
push
xor
dec
and
mov
jae
add
add
mov
pop
pop
xchg
sub
rcll
iret
inc
xor
xchg
push
ret
adc
push
sbb
andb
aaa
lock
inc
dec
fstpt
fadds
adc
adc
test
mov
push
call
roll
or
inc
loop
das
das
imul
shlb
pop
add
js
jo
lods
or
decb
xor
inc
jl
cmp
rolb
or
add
mov
mov
add
shll
and
adc
dec
lock
jne
mov
adc
cmp
mov
dec
ret
jno
fildl
incl
xlat
add
add
push
call
add
push
inc
dec
arpl
pop
sbb
ret
add
dec
test
rcrb
pop
sub
in
ret
pop
pop
pop
push
sub
jmp
push
jne
mov
rep
mov
stos
push
push
push
push
add
push
push
cmp
hlt
inc
push
les
enter
enter
mov
std
outsl
pop
inc
push
xor
fsubrl
lods
arpl
fsts
add
xchg
inc
jle,pn
mov
stos
sub
xor
push
ret
imul
pop
inc
push
xor
rclb
std
inc
add
xlat
xor
xor
xor
pop
push
jg
pop
xor
xor
adc
aas
cmpsb
adc
push
popf
in
inc
out
int3
pop
popf
in
fisubs
pop
push
insl
dec
mov
dec
push
mov
inc
push
push
dec
dec
ss
dec
dec
jp
and
sbb
inc
sbb
and
and
push
cltd
sbb
cmp
cmp
sbb
out
mov
ret
cmp
sub
in
test
sbb
lods
pop
dec
out
push
int3
insb
aad
inc
cmp
pusha
fcoml
push
dec
mov
sarb
scas
cmp
cmp
dec
loop
movsb
arpl
xchg
adc
shrl
inc
mov
add
sahf
test
cltd
jb
push
js
loope
icebp
add
cmp
icebp
and
sub
mov
cmpsl
xor
xor
loopne
sahf
pop
or
loopne
mov
or
xchg
sbb
nop
add
sub
loope
adc
arpl
or
lcall
movsl
adc
push
das
mov
popa
mov
add
pusha
adc
loope
mov
fsqrt
add
adc
xchg
stos
xor
sub
daa
add
xorb
pop
or
push
mov
leave
popa
ja
cmpsl
cmpb
arpl
xlat
dec
adc
dec
loopne
insb
sub
ds
lahf
adc
cvtpi2ps
sub
mov
xor
inc
add
shlb
jmp
icebp
or
insl
insb
mov
rolb
aas
xchg
cmp
xchg
arpl
pop
adc
inc
inc
push
cmp
mov
add
jae
xor
jo
lcall
arpl
mov
outsb
imul
adc
sub
mov
loop
test
cmp
inc
push
inc
dec
and
daa
mov
sub
add
mov
mov
pop
jae
or
jmp
xchg
xchg
sub
jae
outsl
das
pop
push
and
sub
cmp
add
orb
dec
add
mov
dec
and
inc
test
addl
cmpl
add
and
jl
cs
push
add
add
movsb
add
in
and
and
mov
lahf
loopne
inc
jle
test
shll
xor
mov
inc
xchg
inc
mov
iret
mov
jmp
call
adc
pop
leave
pop
faddl
ficompl
pop
pop
fisubrl
xor
fcomp
adc
inc
xor
adc
insb
nop
cmpsl
adc
push
pusha
incl
add
push
xor
pop
icebp
sub
mov
adc
dec
dec
xor
ljmp
mov
push
add
punpckhwd
add
lcall
and
fisubs
push
or
or
jbe
imul
daa
adc
adc
push
jns
and
enter
addr16
das
popa
ret
xchg
pop
divl
insl
push
and
or
pop
andb
ss
orl
inc
lcall
or
insb
nop
mov
xchg
adc
into
aas
xlat
pop
sbb
rcr
jns
add
push
add
int
or
lea
enter
mov
or
xchg
xchg
xor
addb
pop
mov
std
cmp
xchg
sbb
add
or
push
or
cmpsb
imul
push
adc
lcall
cmpsb
imul
adc
sbb
imul
loopne
jbe
lods
cld
mov
lcall
rcr
inc
int3
mov
mov
jne
push
aas
add
stos
popa
adc
push
sub
mov
xchg
insb
lcall
sbb
shlb
mov
add
enter
in
sahf
in
pushf
or
ret
mov
adc
stc
and
adcb
sbb
leave
sbb
dec
mov
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
in
mov
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
lahf
add
divl
mov
popf
sti
jmp
stos
call
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
jmp
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
inc
cmp
popa
sar
mov
and
stos
xchg
adc
clc
repz
mov
subb
fwait
xchg
and
and
test
add
sti
aas
jno
or
mov
pop
jmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
jmp
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
incl
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
jmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
std
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
in
fs
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pushl
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
lcall
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
ror
add
cmpsb
fmuls
rcrl
add
stos
add
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
push
inc
in
aad
push
inc
cmp
add
dec
mov
gs
fidivrl
mov
mov
lahf
stos
dec
sub
enter
add
fcoms
pop
rolb
jle
aas
dec
or
inc
push
dec
add
punpckhdq
sbb
add
sub
add
pop
xchg
push
and
rolb
ficomps
mov
mov
inc
outsb
fs
xor
push
fadds
sub
mov
mov
sbbl
rorl
pusha
fchs
divl
sub
outsl
imul
push
push
push
sbb
or
flds
jbe
inc
jns
mov
outsl
outsl
push
imul
ja
nop
popa
inc
sub
push
imul
sbb
add
popf
xor
sbb
push
cs
push
dec
or
xor
inc
or
pop
jae
adc
push
ret
inc
in
cmp
daa
shll
push
xor
and
mov
mov
inc
outsl
sub
dec
stc
jo
in
dec
add
adc
gs
loope
sub
sub
xchg
in
adc
dec
push
sub
cwtl
adc
mov
xor
xor
nop
outsl
add
or
or
add
adc
xchg
mov
sbb
mov
inc
adc
add
lods
addr16
insl
mov
adc
and
outsb
mov
cmovb
or
leave
cwtl
push
outsb
shrb
pmaxub
daa
push
jo
gs
pop
mov
sub
dec
sbb
je
dec
addr16
lahf
filds
add
add
loopne
dec
add
push
jno
or
xor
add
mov
std
inc
inc
mov
push
sub
xchg
sbb
out
mov
push
imul
mov
fsubl
imul
adc
shll
dec
xchg
lock
lods
push
loope
shrl
jbe
cmpsb
das
fs
cmc
imul
sbb
lds
xchg
inc
cmp
push
add
inc
fcomps
push
jne
in
dec
int
pop
and
das
fistpl
les
stos
out
or
sar
push
outsb
outsl
sbb
add
add
sbb
mov
sub
mov
addr16
push
mov
mov
or
mov
mov
mov
sub
push
push
adc
fsts
cmovg
adc
adc
push
or
sbb
xchg
mov
inc
fiaddl
das
dec
inc
sbb
push
sbb
push
test
and
xchg
aaa
mov
or
adc
insb
sub
xor
mov
jns
push
je
ja
mov
test
inc
pop
mov
and
stos
mov
sub
mov
mov
into
inc
jne
jae
inc
aaa
popa
add
pushl
loope
pop
dec
add
add
repz
inc
adc
add
add
add
nop
and
in
daa
sub
lret
not
mov
pop
adc
packuswb
sbb
jnp,pn
adc
push
push
add
or
decl
dec
sub
jne
jl
scas
test
cs
xor
pop
je
out
add
lods
mov
insl
or
inc
out
mov
notl
hlt
out
in
bound
jo
into
add
dec
fmull
add
mov
jnp
or
repnz
add
push
dec
xchg
incl
add
bound
lea
pop
or
in
adc
nop
mov
inc
mov
inc
add
ja
mov
test
cld
adc
jb
mov
add
jne
lea
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
xor
adc
adc
jmp
xor
sub
jb
shl
mov
dec
xor
jbe
sar
mov
jmp
add
jne
lea
sub
adc
adc
add
jne
mov
xor
adc
adc
jne
inc
add
jne
mov
xor
adc
adc
add
jne
jne
lea
sub
adc
jae
add
cmp
sti
add
test
add
cld
jbe
mov
inc
mov
inc
dec
ja
jmp
xchg
lea
add
mov
or
sub
ja
add
jmp
pop
mov
mov
mov
dec
sub
cmp
ja
addb
repnz
mov
shr
rol
mov
sub
sub
add
mov
or
mov
in
lea
lea
or
jbe
mov
lea
add
push
or
call
xchg
mov
inc
or
je
mov
push
dec
hlt
scas
push
lcall
or
je
mov
add
jmp
add
popa
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
cmp
je
subl
add
mov
jmp
mov
jmp
add
add
add
add
add
and
add
add
adc
add
add
add
add
add
loopne
add
sub
incl
add
incl
add
incl
sbb
add
je
mov
add
adc
mov
cmp
add
add
inc
add
add
pop
inc
add
add
add
add
call
cmc
adc
adc
adc
sbb
add
aam
adc
test
xor
ja
call
ja
sbb
ja
dec
adc
nop
adc
add
adc
add
cmc
adc
nop
adc
add
jbe
ja
adc
add
adc
add
hlt
adc
cmp
or
add
adc
add
ja
sbb
or
add
add
add
adc
add
add
sub
ja
adc
add
push
aam
nop
adc
add
add
add
hlt
adc
and
add
inc
cmc
adc
clc
jmp
jg
add
add
cmc
adc
in
cmpsl
cmc
ja
in
std
jg
add
add
mov
add
jmp
jg
notl
add
add
add
cmc
ja
loopne
ja
in
std
jg
add
add
out
in
adc
pusha
notl
add
add
loopne
jg
cmc
adc
test
add
clc
jmp
jg
dec
je
push
pop
aam
jl
adc
pusha
notl
add
add
mov
add
add
adc
je
mov
add
add
add
mov
add
pop
adc
add
add
add
notb
add
or
in
.byte
mov
add
jmp
add
add
and
add
jmp
add
add
add
jmp
sbb
add
inc
cmc
adc
ficompl
fdivs
lea
test
cmc
adc
popf
mov
add
xor
add
add
add
xor
call
cmc
adc
adc
adc
sbb
add
aam
adc
test
xor
ja
call
ja
sbb
ja
dec
adc
pusha
adc
add
sbb
jns
adc
adc
adc
pusha
adc
add
jbe
ja
adc
add
sbb
jns
adc
in
adc
cmp
or
xor
sbb
jns
adc
dec
sbb
xor
pusha
adc
add
dec
adc
add
add
aas
sbb
roll
add
add
jne
ja
adc
add
hlt
adc
rclb
ja
adc
add
dec
adc
add
add
test
hlt
adc
and
add
inc
cmc
adc
clc
jmp
jg
add
add
cmc
adc
in
cmpsl
cmc
ja
in
std
jg
add
add
lea
sbb
add
clc
jmp
jg
notl
add
add
add
cmc
ja
loopne
ja
in
std
jg
add
add
out
in
adc
pusha
notl
add
add
loopne
jg
cmc
adc
mov
add
add
jmp
jg
dec
je
push
pop
aam
jl
adc
pusha
notl
add
xor
add
xor
add
xor
add
add
add
mov
add
pop
adc
add
add
loopne
adc
hlt
mov
pop
adc
in
adc
nop
sbb
add
inc
add
adc
nop
sbb
add
notl
add
inc
add
notl
add
adc
nop
sbb
add
adc
dec
add
add
