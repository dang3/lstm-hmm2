je
jb
arpl
fs
jae
sub
and
or
and
in
sub
arpl
inc
push
and
pop
mov
or
test
jbe
mov
pop
bound
sub
mov
mov
xchg
add
clc
iret
sbb
add
xchg
test
pop
xchg
sub
or
inc
xchg
or
bnd
jmp
lret
push
inc
daa
js
into
cwtl
cmp
xor
popa
push
mov
xlat
xchg
int3
loop
sub
loope
mov
mov
popa
sbb
or
adc
xchg
ss
in
and
lret
xchg
loop
out
insl
xchg
mov
sbb
scas
aas
or
cmp
rcll
mov
mov
out
arpl
repnz
push
inc
jge
cwtl
insl
leave
and
imul
pushl
je
aam
xorl
sub
ficomps
dec
inc
dec
mov
sbb
decl
jo
repnz
or
pop
daa
push
out
stc
jge
int3
pushf
lods
mov
dec
fldt
pop
into
in
pop
jno
jae
jp
faddl
movsl
push
les
xor
in
fwait
adc
xchg
xchg
test
add
pop
jno
and
pop
mov
sbb
mov
aam
sbb
gs
cmp
call
jp
xor
jne
les
mov
pop
cmc
loope
iret
mov
mov
adc
mov
ret
mov
rcrl
fiaddl
add
jo
sub
pop
pop
adc
sti
mov
push
or
jbe
or
inc
xor
mov
push
lretw
out
mov
icebp
and
mov
enter
inc
loop
xor
dec
push
sbbl
int3
pop
jg
addr16
inc
push
cmp
mov
fstps
shrl
inc
jbe
lea
jmp
xor
movsl
decb
mov
xchg
push
movsb
pop
sbb
sbb
inc
and
push
les
sub
mov
xor
lock
mov
std
cmp
push
adc
sbb
jmp
dec
inc
push
out
xchg
xchg
and
adc
pusha
stos
sbb
mov
add
dec
push
sbbb
sub
pop
sbbl
cli
cmp
mov
js
call
sahf
lahf
pop
aaa
jp
jle
add
aad
pop
inc
fimull
jl
imul
ror
popf
dec
lahf
dec
fimuls
shlb
in
ljmp
imul
mov
push
call
jecxz
xchg
fucomp
adc
jp
clc
fisubrl
and
mov
sub
lods
mov
pop
mov
push
push
cmp
inc
sbbl
lret
dec
js
data16
jmp
lret
push
repnz
ret
add
cs
int3
mov
dec
rorb
inc
cmpsl
mov
push
test
or
mov
xchg
mov
pusha
fcompl
inc
lock
mov
adc
lss
mov
xchg
xchg
mov
mov
ffreep
roll
mov
inc
inc
mov
pushf
mov
inc
sarl
shll
adc
std
dec
jp
cs
in
add
cli
add
ret
ss
pop
add
pop
into
or
inc
daa
mov
daa
data16
fcoml
lods
mov
push
jnp
fstpl
leave
xchg
sbb
cmp
std
sahf
cmp
push
scas
in
mov
cmpl
insl
movsl
mov
pop
jmp
and
jecxz
mov
and
cld
and
and
enter
push
call
mov
leave
cmpsb
mov
out
mov
call
fists
cmp
cli
cmp
push
cmp
mov
sbb
xchg
cmpb
push
mov
or
cmp
movl
push
movsb
mov
cmp
inc
lock
das
jo
mov
sub
cmp
lahf
jns
fbstp
std
pusha
hlt
shrd
int
loop
stos
fsts
lret
jg
call
lcall
subb
rcrl
jp
cwtl
sbb
xchg
stos
scas
int
out
dec
pop
std
jne
rcrl
cmpsl
sbb
nop
int3
fldcw
ret
div
les
cld
dec
dec
mov
push
xchg
sbb
inc
and
push
mov
lea
push
pop
sbb
setb
xor
push
jbe
sub
jl
fucomp
filds
pushf
call
aam
or
inc
jo
test
xorl
adc
pushf
mov
outsl
sbb
movsb
sub
adc
mov
data16
lds
scas
xchg
jle
shll
iret
stos
cli
gs
push
dec
cmp
push
add
sub
xchg
outsl
mov
push
dec
sub
or
jae
jmp
insb
psrlw
mov
or
mov
inc
gs
xor
mov
sbb
stos
test
aam
sub
cmp
lcall
aad
leave
cmp
int3
fs
out
ret
adc
outsb
pop
jns
lock
add
cmp
inc
pop
add
sahf
xchg
pop
jmp
and
ss
in
fmulp
adcl
and
movsl
inc
lock
fisttps
je
sti
mov
mov
push
cmp
sbb
and
mov
loop
push
push
add
push
mov
aas
xor
sbb
loopne
mov
push
pushf
outsb
test
push
int
xor
pop
shrl
push
mov
enter
jge
adc
enter
gs
push
sarl
fs
mov
push
mov
into
rclb
push
je
fwait
pop
pop
inc
inc
imul
repz
test
jge
fiaddl
jb
stos
dec
mov
jl
jge
popf
iret
fs
and
sbb
mov
imul
ja
psllw
lea
lods
test
imul
jg
mov
test
test
mov
mov
insb
pop
mov
popf
add
xchg
mov
add
cli
ds
sub
loop
mov
dec
jmp
pop
mov
sub
pop
daa
je
repz
xor
push
loope
imul
hlt
cs
adc
cs
push
sub
and
lock
in
mov
or
jl
or
in
and
iret
adc
and
jne
push
lcall
cmp
js
push
xor
jge
xchg
popf
frstor
pop
xor
lods
cs
adc
insl
leave
lds
cmc
dec
rcll
call
fcoms
sbb
je
pop
mov
stos
or
fidivl
jb
mov
mov
scas
in
into
dec
xor
outsb
jecxz
dec
sbb
mov
jnp
cld
or
jo
sbbl
cltd
mov
push
jne
cmp
sbb
pop
popf
stc
push
aad
mov
push
xchg
dec
out
sub
std
daa
adc
jecxz
sub
dec
fidivrl
clc
es
clc
xchg
xchg
lcall
subb
icebp
stc
popa
aaa
push
mov
jl
and
push
mov
push
mov
cmc
xchg
mov
dec
movsb
into
add
inc
sub
hlt
daa
pop
arpl
in
dec
xchg
or
pop
inc
dec
mov
jae
cmpsl
or
mov
sti
and
mov
test
lods
xor
dec
lcall
mov
aam
ljmp
pusha
ficomps
jg
fildl
psrld
fsubr
jmp
push
aad
loop
inc
pop
out
sub
sbb
in
xchg
mov
adc
dec
xchg
sbb
mov
lcall
mov
mov
or
or
ljmp
ret
xchg
insb
shrb
adc
jp
lock
inc
in
inc
mov
mov
arpl
jns
add
add
cmp
dec
xchg
subb
dec
adc
xchg
jne,pn
pop
push
cwtl
push
cmp
loop
in
pop
mov
in
or
fwait
pop
xchg
push
inc
movsb
decb
sub
out
test
sub
mov
ret
outsb
mov
in
fcmovnu
loopne
or
mov
fiaddl
mov
ss
add
sbb
lcall
fs
int3
in
jge
or
dec
xor
jne
pop
xlat
push
into
les
or
ret
sbb
pop
mov
insb
movsb
dec
std
mov
mov
pop
cs
mov
insl
or
cmp
pop
xchg
jbe
ljmp
cmp
std
sbb
out
sub
jle
xchg
push
xchg
std
mov
sub
or
inc
shll
push
leave
aaa
shlb
add
xchg
push
and
inc
leave
and
sbb
ret
unpckhps
sbb
insl
loopne
mov
sahf
jl
pop
cmp
pushf
negl
les
sarb
arpl
add
sbb
scas
test
adc
push
adc
sahf
xor
cmp
inc
jae
lret
inc
push
cwtl
mov
bound
xor
or
mov
stos
cwtl
outsl
mov
sub
stos
xchg
pop
push
or
icebp
xchg
pop
mov
push
das
cmc
jae
and
fists
ss
cmp
shll
int
pop
mov
movl
inc
das
cmp
subb
jmp
into
jg
cmp
push
pop
xor
or
push
cmp
cmp
in
jmp
lock
xor
imulb
or
repnz
or
in
loop
xor
dec
jo
sub
fisubs
xchg
int
add
mov
mov
xchg
leave
in
outsl
aaa
js
lret
inc
cmpsl
out
shrl
ficoml
or
inc
icebp
jae
std
icebp
adc
daa
sub
insb
andl
fimuls
sub
leave
xor
mov
xor
imulb
mov
xor
inc
test
ljmp
pop
pop
in
and
pop
call
add
pop
ljmp
stc
sbb
xor
lea
sti
das
fiadds
xor
lahf
push
pop
das
sub
xor
std
add
loop
lret
jne
imulb
into
jno
ret
movsb
cmpsb
pop
pop
sahf
push
pop
dec
push
insl
std
mov
cmc
mov
sti
pop
jno
xchg
mov
js
xchg
xor
arpl
fildl
movsl
mov
xchg
sbb
pop
or
xor
jg
rorl
sbbb
pop
xlat
mov
into
das
jno
fildll
gs
pop
movsl
std
cmp
and
popf
insb
mov
loop
cld
xchg
cmp
bnd
stos
ja
push
insb
push
push
ljmp
mov
popf
mov
ss
fdivrs
sub
movsl
popf
in
jo
sub
rolb
aad
dec
int3
inc
dec
ret
push
xor
gs
sbb
incl
inc
cld
clc
push
push
xor
andl
lcall
jno
push
pop
xchg
fcompl
mov
int3
xlat
popa
mov
cmp
push
and
cmc
loop
movsb
push
and
loop
xchg
popf
jecxz
aaa
shlb
in
push
into
shl
incl
mov
mov
mov
or
mov
xchg
in
push
add
sbb
inc
xor
scas
int3
pop
ds
push
xchg
inc
cmc
shrb
cltd
xchg
fs
add
test
es
inc
daa
fcomip
xchg
pop
sub
enter
cltd
loope
pop
or
xchg
fldt
xlat
cmpsl
scas
jle
mov
pop
inc
mov
sub
cmp
add
es
push
mov
mov
orl
and
test
inc
mov
pop
mov
mov
xchg
jo
push
mov
xchg
push
orb
jle
cmp
push
cld
inc
mov
notl
inc
cmc
pop
arpl
mov
test
sarb
lret
or
sti
fldcw
mov
jnp
cwtl
fidivrl
ja
mov
cmpl
rcll
shrl
xor
cmp
xchg
push
ret
aaa
stos
js
cmpsb
dec
loopne
sarl
jge
mov
ss
xor
fisttpl
ret
lret
aaa
nop
mov
xor
xchg
lds
fisubrl
lret
add
cmp
lock
sbb
adc
loopne
shll
in
pop
push
xchg
mov
jo
lea
jg
lea
mov
pop
cwtl
scas
out
das
insb
out
cmp
mov
or
push
fwait
jns
add
xor
jns
dec
lret
push
fwait
test
sbb
jbe
adc
inc
sub
or
es
shl
je,pn
mov
loop
fcomp
pop
add
nop
sub
je
enter
xchg
mov
pop
insb
stc
es
outsb
dec
sahf
sahf
mov
xchg
pop
jmp
xchg
push
aaa
fidivrs
sub
loope
loop
or
adc
fmull
test
les
or
sarl
ja
out
lret
nop
rcrl
mov
xor
pop
cs
bound
cltd
jle
inc
push
dec
xor
arpl
xchg
xor
mov
push
push
mov
test
mov
imul
cmp
or
in
jmp
iret
test
aam
mov
add
scas
int
push
pop
sub
mov
jne
jo
fildll
sub
das
jno
dec
fisubrl
out
jmp
shr
pop
dec
mov
hlt
fistps
push
cmpl
xchg
pusha
nop
stos
adc
add
fidivs
xchg
xchg
cmp
int3
testl
mov
aaa
fsubp
lock
sbbb
outsb
mov
cli
adc
mov
sub
je
pop
shl
xor
push
xchg
aaa
xor
leave
inc
xchg
sub
repz
xchg
add
push
push
imul
push
mov
test
sub
adc
mov
pop
add
sbbb
test
dec
pop
into
movsl
pushf
les
mov
jg
or
sub
aaa
fwait
or
outsl
ret
out
mov
je
xchg
inc
test
lahf
jns
sub
mov
xor
das
nop
mov
out
jns
or
or
and
in
pop
jns
mov
je
test
mov
xor
pop
sub
jb
sub
xchg
jno
and
adc
adc
adc
cmp
insl
push
mov
mov
cmpsl
push
mov
or
lds
inc
and
pop
lods
mov
in
sub
das
add
lods
fldt
dec
ja
out
scas
push
pusha
xchg
ds
pop
jmp
push
in
jo
mov
add
in
fsubp
inc
int
inc
movsb
push
mov
xor
mov
adc
push
negl
jns
mov
mov
push
jo
push
mov
loop
xor
jmp
mov
lea
pop
inc
sub
fsubs
lret
mov
int3
repz
outsb
adc
and
or
mov
cmc
dec
adc
arpl
dec
push
out
or
jbe
push
fadd
ljmp
mov
test
in
imul
pop
push
mov
rclb
iret
xor
inc
cs
mov
jne
push
jbe
adc
mov
push
xlat
xor
mov
ret
inc
out
push
outsb
fs
mov
inc
inc
popa
xchg
es
call
push
sub
jecxz
pop
fwait
aam
test
pop
or
mov
outsb
repz
mov
repnz
sbbb
test
aas
loop
cmp
shll
sub
dec
and
sbb
aam
xchg
push
pop
push
ror
je
adc
jge
dec
outsb
into
scas
call
adc
add
cmp
addr16
fildl
mov
movsb
xor
adc
jne
sti
lods
jmp
mov
in
repnz
jp
jl
inc
aas
cmp
jecxz
scas
mov
arpl
shll
inc
sub
mov
fdivs
mov
inc
data16
dec
push
xor
pusha
lods
mov
into
mov
jns
loopne
push
in
cmp
push
push
xchg
clc
cli
xor
notl
daa
sti
call
push
inc
idivb
pusha
cmc
or
cld
rcrb
lock
fwait
push
iret
cwtl
rorb
cmp
sbb
sbb
frstor
xchg
jp
mov
mov
push
lea
mov
iret
mov
cmpsl
pushf
mov
mov
clc
aaa
rorb
gs
xabort
lods
inc
das
inc
mov
es
xchg
dec
mov
jnp
sahf
xabort
into
push
rclb
fstl
movsl
push
pop
push
shlb
loopne
shlb
fisubrl
xchg
dec
mov
push
dec
cltd
inc
aam
gs
xchg
repnz
push
pop
cmp
xor
aam
push
fiaddl
mov
pop
enter
jo
cmp
pop
cmp
lea
fs
and
fsubp
setge
xchg
xor
mov
or
mov
cld
cmpl
dec
push
gs
or
sti
cli
xchg
aam
scas
mov
pop
outsl
pop
xchg
ffreep
ljmp
jmp
add
add
leave
fdivrs
cmp
into
adc
adc
push
leave
jo
jmp
inc
push
cmp
shll
repz
repnz
leave
popa
fdivrs
call
mov
lea
stos
push
fnstsw
dec
sbb
pop
mov
or
pop
mov
cmp
sbb
addl
dec
fists
call
cmpsb
cmpsl
outsb
inc
out
dec
cltd
mov
sub
mov
pop
cmp
mov
aam
pop
push
insb
aaa
mov
and
dec
fnsave
push
ds
mov
mov
mov
stc
ss
xor
pop
push
les
lods
popa
pop
mov
shlb
mov
repz
sahf
xor
cmp
jle
dec
data16
lock
push
subl
push
xchg
pop
in
xchg
push
and
sub
dec
inc
loop
add
insb
or
dec
mov
xor
mov
xlat
arpl
jge
pop
stos
add
out
popf
sbb
inc
mov
mov
mov
jo
shl
test
sbb
push
or
cmc
or
stc
clc
fwait
subb
xchg
lahf
repnz
mov
mov
add
fldcw
mov
mov
bound
xchg
shrl
mov
and
push
clc
in
sub
repnz
iret
push
inc
outsb
test
ja
lods
add
cli
movsb
loopne
ss
xor
mov
and
pop
jp
add
inc
push
ljmp
lds
loop
xchg
push
fcomps
inc
iret
jmp
add
dec
pop
dec
mov
pop
outsb
dec
inc
sub
and
mov
and
mov
sbb
inc
or
pop
jb
or
or
push
loop
div
jle
mov
repz
rorl
jp
inc
pusha
in
sub
out
sbb
jo
adc
cmp
lret
out
add
pop
jae
xor
inc
das
stc
popf
jae
out
cmp
xchg
pop
push
and
loope
das
hlt
xchg
cmp
ljmp
push
cmp
movsb
aad
lret
bnd
mov
icebp
cmp
es
push
test
int3
xchg
inc
popf
sbb
pushf
inc
loop
lahf
push
js
cwtl
adc
addr16
inc
ljmp
loope
shrb
mov
je
mov
sbb
mov
loope
in
push
mov
dec
fistps
stos
mov
les
loop
mov
mov
cld
mov
negb
inc
xor
call
jae
jnp
xchg
cmp
inc
aaa
fwait
and
mov
es
and
jle
ds
cmp
loope
fisttpll
pop
test
inc
hlt
dec
adc
idivb
mov
es
xor
or
int3
in
loop
xlat
es
pop
pop
stos
sub
mov
cmp
mov
std
sbb
xor
out
test
hlt
push
lahf
fwait
and
xchg
ret
pop
xorl
pop
data16
je
rclb
jge
or
sub
unpckhps
mov
nop
icebp
lret
stc
stos
mov
out
leave
dec
jo
jge
xor
xchg
xchg
lret
insb
fdivrl
xchg
fsubr
push
into
das
push
mov
pop
xor
push
jecxz
mov
xor
or
pop
mov
repnz
jae
push
add
es
push
xchg
adc
jmp
pop
push
add
pop
lea
pusha
enter
sbb
sub
pusha
cmc
and
cmp
add
imul
shll
shr
cltd
in
aas
cmp
mov
cmp
mov
into
add
mov
lahf
outsl
imul
pop
xchg
mov
lahf
repz
or
mov
aad
adc
aad
xchg
inc
lea
ds
mov
fwait
data16
rcll
push
and
ljmp
jmp
ja
cmp
push
ror
inc
adc
je
cmc
xchg
mov
nop
xchg
pusha
daa
mov
and
mov
fimuls
cltd
mov
jb
repnz
xchg
add
pop
pop
mov
adcl
loopne
xorl
idivb
pop
mov
dec
loopew
js
cmp
push
test
sub
and
cmpsl
mov
or
fwait
adc
addr16
lret
fists
clc
ficompl
mov
and
ds
mov
adc
int
add
shl
sbb
adc
sub
jp
mov
cmc
jmp
daa
adc
stos
xchg
out
sbb
rcl
icebp
sbb
into
cmpsl
and
insb
xorb
pop
pop
mov
outsl
fstps
cld
dec
mov
sbb
dec
pop
stc
xor
inc
sbb
pop
loop
gs
cmpl
jle
pop
pop
add
cmpsl
inc
sbb
movsl
sub
es
cmp
push
inc
daa
xchg
mov
jo
shl
pop
jne
mov
mov
imul
sub
ljmp
xor
mov
aam
gs
push
mov
push
dec
push
test
sahf
rol
sbb
call
add
dec
fs
add
inc
pusha
imull
push
mov
push
sub
movsl
popa
adc
add
jg
xchg
sub
mov
cwtl
ret
inc
leave
adc
jle
test
arpl
push
mov
mov
loope
jge
cmpsl
cmpl
lcall
ret
clc
ljmp
rcrb
mov
or
push
int3
cmpsl
adc
mov
outsl
jns
jo
lds
xor
jl
iret
sbb
mov
pop
psrlq
jnp
cmp
stc
jmp
leave
cmc
test
cmp
cs
mov
cmc
mov
fldt
les
push
mov
mov
mov
push
jle
xor
das
ja
and
pop
repnz
inc
and
sub
fstpt
fs
fmuls
sahf
sbb
icebp
mov
mov
mov
pop
jmp
mov
repnz
cli
add
dec
add
stos
icebp
inc
movsb
jl
fs
pusha
xor
mov
xchg
pop
or
lret
sub
pop
mov
les
and
mov
aad
cmp
mov
in
mov
ret
fcom
xor
les
in
test
inc
xor
popf
in
adc
rcll
lcall
pushf
dec
movsb
adc
add
sbb
push
lret
loopne
repz
dec
test
in
cmp
inc
xchg
aad
fimull
pop
xlat
xchg
jno
int3
jno
push
jle
aas
sub
addb
in
xchg
data16
xor
pop
stos
push
jg
xchg
xor
aam
mov
bound
adc
nop
sub
adc
insb
mov
ds
cltd
xchg
mov
scas
shl
sbb
in
cmp
add
popf
mov
inc
leave
mov
or
mov
mov
movsl
fidivs
sbb
mov
repz
xor
adc
lea
sub
insb
mov
shrl
insb
mull
add
sbbb
fsubs
roll
mov
es
test
in
repz
jbe
aas
mov
sub
pop
add
ds
jno
lahf
aaa
mov
aas
push
xchg
dec
xor
mov
in
mov
mov
in
mov
in
and
adc
mov
insb
fimull
add
addr16
sbb
or
jge
push
dec
aas
in
sti
push
sub
inc
cmpl
fsubl
insl
repz
and
je
cld
inc
sbb
test
fiaddl
lret
jg
mov
push
pop
rcr
inc
add
push
lret
gs
inc
into
pop
cmp
add
repz
jle
rcll
test
xchg
mov
mov
out
scas
mov
xchg
or
leave
lea
mov
pushf
mov
clc
les
divl
sub
movsb
or
sub
pusha
movsb
js
mov
jae
outsb
lds
out
xor
andl
shrl
jb
scas
jo
cltd
mov
dec
sti
push
jmp
and
das
mov
popa
aam
jb
mov
sarb
loop
adc
xlat
sbb
xor
mov
in
fs
dec
in
jle
repz
std
mov
inc
xor
cwtl
jno
add
mov
push
insb
pop
cli
add
push
sbb
mov
insl
and
pop
jo
jmp
subb
fiadds
xchg
xor
xchg
imul
adc
xchg
cmp
daa
mov
cmpsb
xchg
lahf
push
inc
cmpsl
mul
in
jle
in
cmp
lods
leave
mov
add
roll
loopne
and
jno
repz
inc
adc
lahf
sbbb
sub
loope
ret
cmp
mov
add
mov
pop
sub
jne
jp
stc
push
and
repz
mov
inc
mov
inc
push
adcb
add
sbb
jl
dec
mov
cmc
loope
scas
rcrl
sti
in
shlb
aaa
mov
fisubrs
call
icebp
mov
xchg
aad
shl
mov
or
xchg
mov
jnp
mov
jnp
pop
out
mov
hlt
popa
and
roll
inc
mov
lods
push
cli
add
inc
bound
into
lock
pextrw
imul
mov
cmp
pusha
dec
add
xchg
ret
jae
outsl
inc
test
fsubl
sar
dec
sub
cwtl
cmp
sbb
cmpb
int
push
bound
loope
cltd
pop
mov
dec
mov
push
push
mov
push
pusha
and
mov
lcall
int3
push
or
ds
sub
cmp
test
rcrb
pop
push
inc
inc
negb
fwait
lahf
mov
xor
pusha
dec
mov
out
hlt
push
ljmp
nop
out
scas
and
or
xchg
pop
pop
out
xchg
dec
roll
aam
sbbb
mov
xchg
fcmovne
push
adc
xchg
pusha
sbb
mov
sub
stc
jb
pop
inc
lods
aad
adc
push
push
clc
sub
or
bound
pop
inc
jecxz
fidivrs
push
lods
fwait
pop
dec
mov
inc
cmpsb
les
sub
insl
push
mov
flds
shll
mov
push
push
cmp
repz
and
sahf
xchg
mov
out
popf
cltd
xor
add
fisubs
clc
push
aad
dec
insl
mov
mov
ds
inc
pushf
jo
leave
repz
mov
sbb
xor
dec
and
inc
sub
xor
fmulp
fidivl
ror
push
fldcw
outsb
stc
pop
and
cmp
dec
loope
shll
mov
lods
lcall
and
jno
inc
cmp
pop
ds
ret
and
ficompl
fwait
xor
lods
inc
ret
into
outsl
repnz
push
xor
ds
mov
cmp
stos
cmp
lock
or
in
cmp
lret
mov
xchg
in
mov
mov
pop
push
sahf
cmp
cmp
jecxz
and
test
imul
sub
gs
test
adc
fcompl
dec
xlat
test
dec
add
movsb
mov
imul
mov
imul
or
adc
add
adcb
mov
sub
push
stos
jno
test
mov
sbbb
mov
insl
clc
out
cmp
rcrl
cmp
adc
cmp
mov
xchg
test
xchg
and
or
xchg
shl
sbb
cmpl
ret
fildl
add
xchg
test
push
sub
icebp
mov
xor
mov
insb
in
pop
mov
dec
mov
in
pop
pop
inc
sbb
jg
in
dec
sbb
xorl
fdivl
mov
push
daa
push
int
jge
dec
lret
imul
push
xor
dec
in
js
lret
imul
mov
xor
mov
jne
ficomps
xor
mov
sub
ss
lods
loopne
xor
pop
imul
ljmp
pop
sbb
negl
xor
jle
repnz
add
xor
decl
sub
pop
xchg
js
repz
pop
inc
shl
scas
cltd
mov
and
dec
adc
subb
imul
xchg
jno
imull
es
inc
cmpb
xor
or
push
or
jbe
cmpsl
paddd
fists
and
sub
dec
aam
outsl
stos
rol
dec
dec
or
xchg
push
data16
sbbb
adcl
adc
sbbl
pop
xor
scas
xor
call
push
sbb
stos
add
cmpsb
pusha
and
mov
out
in
dec
and
add
mov
loope
xchg
adc
pop
leave
and
ja
add
sti
dec
inc
int
rorl
mov
shrl
mov
sbb
arpl
fnstenv
jo
push
push
xchg
repnz
nop
sub
adc
push
iret
push
ja
out
pop
mov
adc
jge
out
scas
sti
jecxz
aas
jg
bound
repz
jl
fst
cli
shll
fldenv
int3
xor
mov
pop
mov
push
mov
adc
xchg
iret
add
fsts
jne
jnp
nop
mov
mov
lahf
movsb
jno
addr16
fiadds
fcmove
adc
fwait
sahf
xor
xchg
je
dec
adc
pop
repnz
imul
and
outsb
jmp
test
fst
js
loope
adc
call
push
popa
test
lahf
jg
pop
jne
cmpsb
or
cmpsl
loop
xor
adc
stos
pop
in
inc
shl
adc
or
mov
sub
cmp
out
mov
in
pop
loop
arpl
inc
pop
daa
in
pushf
and
jl
add
enter
cmp
call
mov
test
testb
inc
add
sub
call
sub
inc
cmp
mov
mov
fldenv
movsb
jbe
enter
mov
out
loopne
mov
pop
push
adcb
xchg
mov
or
xchg
cmpsl
imul
xchg
loopne
sub
bound
inc
outsb
mov
cmp
movsb
inc
test
aaa
xchg
pop
adc
cld
or
stos
xor
inc
bnd
imull
sub
ja
lcall
pop
push
cmp
pop
inc
roll
and
sbb
mov
mov
das
fs
xor
lcall
sub
and
adcl
setns
xor
jmp
jns
xchg
pop
rcl
repz
movsl
xor
mov
xchg
mov
fiaddl
push
dec
inc
in
lods
call
nop
cli
cmp
push
sbb
push
int
pushf
cmp
jno
push
test
push
mov
fnstenv
into
fcomi
or
mov
pop
jecxz
iret
jmp
sbb
pop
cmp
mov
push
and
and
lcall
filds
aam
cltd
stc
pcmpgtw
scas
mov
mov
and
cmpsl
addr16
imul
arpl
xor
fwait
es
adc
daa
pop
call
fimull
das
jecxz
mov
sub
test
xchg
xchg
push
sbb
jle
std
mov
jmp
sbb
sub
ret
add
cmpsl
ror
xchg
cmp
ds
leave
popa
inc
int3
dec
lret
mov
cli
subl
and
fisubrl
jl
loopne
or
adc
jecxz
mov
shl
inc
fs
aaa
loop
test
je
push
test
mov
insb
clc
mov
jge
ret
sub
sub
loope
jle
xchg
mov
stos
cld
and
int
or
pop
sbb
mov
and
and
xchg
aam
push
pop
dec
add
sub
mov
pop
add
inc
test
sbb
xchg
push
xchg
je
push
fdivl
aas
jno
mov
inc
out
mov
mov
call
mov
js
xchg
loopne
inc
jle
mov
aam
testb
mov
add
push
scas
and
ffreep
pop
jns
xor
jle
iret
jnp
shlb
pusha
stc
ret
sti
jae
jne
mov
xor
inc
fst
cwtl
aad
xchg
mov
cmpsb
jne
hlt
bound
jo
fnstenv
jns
mov
int
or
imul
aaa
jb
mov
fstpl
sub
mov
rorb
and
movsb
cld
jae
scas
xor
mov
out
lret
idivb
add
inc
jb
jne
add
push
shlb
inc
add
add
scas
add
imul
stos
push
mov
push
insb
and
loop
aaa
icebp
xchg
lcall
fdivs
xor
rorl
cmp
or
xchg
cmp
push
jo
mov
scas
popf
jo
icebp
push
dec
xchg
fistps
jns
push
dec
fidivrl
push
dec
adc
ja
imul
dec
std
sbb
push
adc
pop
mov
int
lds
inc
scas
out
fnstsw
or
or
arpl
test
out
das
push
ja
loop
lods
mov
and
cli
xor
call
insb
and
in
fmull
and
fdivp
push
push
nop
test
pop
sbb
aas
xchg
lahf
iret
sub
pop
or
xchg
sbbb
nop
cld
mov
mov
test
into
jg
mov
lods
jns
push
sub
int
test
jp
sub
lock
pop
add
fnstenv
cld
sub
fcmovnu
mov
cmp
cwtl
ds
int
sbb
outsl
sbb
lds
jle
push
fbstp
jmp
xor
push
ret
je
sub
and
imul
mov
adc
push
iret
in
sub
mov
dec
pop
xchg
sbb
pop
dec
add
or
icebp
xchg
pushf
push
addr16
into
aad
push
mov
cmp
sub
inc
in
stos
dec
gs
popa
aas
es
push
pop
jnp
insl
and
push
orb
loope
lock
mov
lretw
clc
and
dec
xor
or
xchg
dec
mov
fdivrl
cmp
mov
std
adc
jecxz
xchg
pushf
test
push
jle
dec
lods
adc
jbe
xchg
movsb
stc
pushf
sub
mov
incb
stos
add
imul
xor
xchg
in
mov
inc
faddl
push
testl
inc
cmp
push
inc
lahf
enter
rcpps
inc
and
incb
inc
inc
jno
dec
mov
lods
sub
jbe
or
ss
rcr
inc
into
cmp
mov
cmpl
ret
xorb
in
sub
push
cmp
inc
dec
cmc
ret
lods
arpl
adc
adc
jne
mov
leave
cmp
add
sub
jecxz
fisttpll
and
and
and
push
pop
stc
jle
pop
cmp
sbb
imul
xchg
scas
jno
ss
inc
adc
fldl
int3
into
fdivrs
push
mov
xor
sub
xchg
xchg
xchg
pop
jge
add
pop
sub
pop
add
lds
fstpl
fiaddl
mov
sbb
xchg
sbb
push
pusha
pushf
test
and
adc
sti
xor
jmp
fisttpll
xor
mov
bts
mov
and
xchg
sub
test
xor
rolb
out
fbld
call
mov
lea
adc
repnz
push
sbb
xchg
xor
mov
cmp
xchg
jbe
adc
pop
dec
add
jno
sub
add
jns
scas
les
test
sbb
out
call
mov
add
jp
stos
loopne
mov
daa
adc
adc
mov
fmul
xor
daa
mov
ljmp
pop
or
xchg
jp
clc
cmp
fistpl
movsl
and
imul
pop
cmp
push
cmp
jle
iret
pop
jno
in
mov
popf
lods
mov
jp
or
jle
test
fwait
pop
aas
int3
stos
addr16
sub
imul
mov
mov
ret
jne
adc
aaa
sub
cmc
jne
push
jmp
adc
les
mov
out
popf
iret
popa
out
mov
mov
cmc
cmc
pop
mov
sti
shlb
popf
xchg
push
lods
pop
fcmovbe
pop
outsb
inc
rclb
and
in
test
sbb
push
ljmp
outsl
imul
inc
daa
test
lahf
stos
mov
loop,pt
dec
xchg
jmp
mov
and
or
mov
loope
mov
je
outsl
cli
jb
in
stc
lcall
shr
cld
mov
repz
insb
mov
insb
loop
xchg
das
jno
daa
jl
jbe
jmp
adc
inc
mov
xor
ret
pop
stos
jmp
or
push
mov
jb
in
pop
int3
in
mull
add
gs
xchg
icebp
jno
not
mov
icebp
repnz
xchg
je
xor
sub
out
sbb
insl
xlat
arpl
fsts
test
out
inc
mov
inc
push
bound
push
scas
sub
fmuls
arpl
adc
repz
es
cmp
lods
add
or
push
jmp
int3
add
and
hlt
arpl
into
imul
sub
lods
adc
notb
icebp
ds
data16
frstor
subl
das
outsl
lock
cwtl
int
loope
inc
cmp
cmp
pop
mov
jb
into
inc
mov
jle
xlat
xor
xor
dec
shlb
fcoms
inc
xchg
pusha
adcb
and
sbb
sbb
out
js
aaa
push
sbb
mov
sbb
adc
jns
adc
push
ds
and
in
xor
push
aam
or
je
jae
frndint
inc
loop
mov
sti
inc
sub
dec
cld
or
outsb
addl
int3
inc
aam
inc
rolb
inc
imul
push
je
push
pop
mov
mov
je
sbb
loopne
inc
fnstsw
adc
rcrl
in
or
inc
jge
fisttpl
orb
ds
xor
mov
mov
iret
andb
adc
adc
inc
fldl
mov
out
sbb
pop
sbb
in
xorb
sub
test
loop
ja
out
push
in
loop
xorb
adc
mov
insb
cli
sbb
out
jns
dec
fwait
stos
or
dec
jecxz
mov
mov
mov
rclb
popl
popf
cmp
fistl
inc
mov
fs
lds
xchg
mov
xchg
push
loope
mov
shll
push
jp
jnp
rorl
sub
or
sub
inc
xchg
push
dec
ljmp
or
in
clc
leave
sbb
fimuls
fdecstp
fadds
dec
outsb
pushf
xchg
stos
jg
cmp
cmpsb
outsl
popa
test
push
xor
xchg
cwtl
add
leave
jle
rorl
movsb
stc
xor
xchg
sub
push
dec
ret
pop
xchg
aas
scas
dec
scas
mov
fmul
test
push
outsl
jle
lods
dec
inc
inc
mov
or
and
pop
sbb
sbb
xchg
or
mov
and
jns
push
data16
mov
sbb
ficoml
add
sub
add
jo
cld
inc
adc
pusha
rol
push
add
imul
inc
cmp
mov
mov
jle
jp
sbb
test
jl
inc
pop
aad
push
add
negl
aam
push
sahf
aaa
imul
clc
outsl
lock
sbb
push
mov
cwtl
outsl
mov
xchg
push
push
popa
leave
add
adc
lock
cwtl
data16
mov
jmp
insl
cmc
sub
inc
fs
aad
dec
data16
je
inc
xchg
in
scas
inc
mov
out
rcrl
in
mov
mov
inc
and
xorl
cmp
cmp
cltd
gs
cmp
addps
js
and
add
pop
pop
push
jle
rorb
sub
std
pop
insb
sbb
xchg
outsb
fidivs
mov
push
sbb
xor
xlat
leave
enter
cltd
outsb
sub
cwtl
xchg
xor
cmpsl
adc
push
sub
cmpb
inc
je
and
test
aad
sbb
cmp
sbb
sbb
pop
int3
mov
out
add
xchg
fcmove
or
rolb
xor
mov
es
fdivl
jbe
jp
add
popf
mov
bound
dec
gs
fcoml
inc
or
xchg
rcrb
sub
lea
fnstenv
pop
aas
push
test
cmp
cli
data16
cmpsb
jo
cmc
rorb
rclb
xorb
aaa
jne
add
mov
imul
mov
cwtl
lahf
mov
xor
pop
lcall
xchg
stos
push
add
popf
inc
jno
filds
or
lret
lds
sub
or
jbe
sub
mov
scas
add
fbstp
mov
fists
rorl
xchg
sub
cmp
mov
shll
aas
loop
mov
jbe
cmp
lds
bound
pop
leave
pop
jle
sbb
push
mov
int3
shlb
jle
jmp
pop
xchg
and
mov
clc
mov
push
cmp
mov
jnp
icebp
push
sub
fbstp
xorl
xchg
call
icebp
or
in
lret
iret
jmp
rorl
mov
push
xchg
xchg
inc
les
push
adc
mov
mov
inc
wbinvd
fisubl
hlt
cmp
repnz
loop
ja
loop
idivb
mov
lods
mov
call
and
fistpl
sti
lret
adc
push
ds
rorb
dec
and
aam
in
js
inc
mov
adc
in
xor
jge
imul
arpl
mov
out
and
stc
repnz
inc
jno
hlt
jo
loop
out
sbb
dec
in
out
push
xchg
xchg
lcall
add
sub
mov
jae
movsb
adc
cmp
cmp
xor
push
inc
mov
sub
sub
pop
test
jo
mov
repnz
sahf
adc
ja
in
cmp
icebp
popf
adc
pop
xchg
mov
int3
shl
pop
inc
loope
cli
pop
push
jmp
cmp
push
or
add
push
loopne
jnp
pop
ret
and
inc
aam
mov
cmp
popf
xor
fdivs
daa
dec
outsl
mov
mov
popf
and
dec
dec
and
aas
pop
testb
pop
push
mov
inc
xor
cmp
shll
nop
jp
ljmp
outsb
rol
sub
pop
cmpxchg
push
push
fidivs
in
imul
mov
arpl
scas
inc
push
xchg
dec
add
cmpl
sub
push
imul
incl
sub
add
pop
jmp
and
icebp
fstp
test
mov
mov
mov
inc
fstpl
cmpsb
outsb
push
add
xorps
pop
mov
dec
iret
xchg
jp
sub
xorb
aas
mov
xchg
ja
je
xchg
arpl
data16
push
gs
aam
and
pop
inc
sarl
sub
stos
add
insl
stos
push
repnz
dec
pop
ss
add
lret
stos
add
popf
popa
lods
je
imul
push
fildl
mov
jo
xchg
cs
cld
stos
and
mul
xor
mov
cli
stc
dec
aad
xchg
int
xor
mov
dec
int3
hlt
sub
cli
mov
test
push
pusha
nop
test
fisttpll
adc
test
pop
jne
sub
add
je
pop
sbb
call
mov
cmp
lock
cmp
aad
std
mov
lret
lret
fdiv
lcall
aad
sbb
stc
jno
je
loop
leave
sbb
repz
lret
jge
push
sbb
push
arpl
gs
and
in
or
adc
cmp
or
ret
pop
std
pop
lahf
mov
jle
cmp
stos
mov
into
adc
out
int
add
dec
test
xchg
cltd
sbb
add
jo
aam
or
adcl
sub
or
sbb
frstor
or
mov
bound
xor
pop
pusha
cs
lods
jecxz
jne
imul
psrad
in
xchg
out
pop
push
inc
jae
fsubrl
dec
outsl
cmpl
aam
xchg
test
xor
push
mov
mov
ljmp
inc
add
call
fidivrs
ret
and
mov
mov
xchg
or
xorl
inc
dec
cmp
in
mov
or
hlt
sti
popa
add
pop
cmp
iret
sti
mov
mov
dec
insb
nop
sti
or
sbb
inc
push
out
xor
sub
movsb
shrl
or
clc
jnp
test
call
addr16
dec
std
icebp
dec
testb
icebp
jno
out
ror
inc
rcrb
aad
push
cmpsl
ja
cs
inc
out
push
and
daa
rcr
data16
inc
xchg
pushf
aad
sub
inc
sarl
insb
enter
adc
out
pop
dec
movb
xlat
les
fisttpll
inc
mov
pop
add
fsubrs
inc
negb
cmp
mov
pop
test
rcll
int
jnp,pt
iret
sbb
iret
pop
xchg
fidivs
cli
inc
cmp
dec
add
or
mov
adc
sbb
clc
inc
lret
in
sbb
pop
and
xlat
push
mov
call
repnz
in
jb
sahf
gs
call
loopne
push
mov
jmp
fstl
and
push
lcall
testb
jnp
ret
fnsave
mov
mov
lea
jl
and
adcb
xor
cmp
xor
fmuls
aas
jmp
mov
insl
cli
push
leave
loopne
faddp
test
sarl
push
out
popf
mov
xchg
push
inc
data16
sbb
fbstp
push
repnz
movsb
jbe
sti
xor
mov
vfixupimmss
sarb
sub
cmp
scas
mov
mov
pop
jg
and
add
mov
push
cmp
cmp
dec
lods
push
mov
push
xor
jg
rcrb
fs
sarb
add
pop
pop
in
pusha
inc
out
push
cld
movsb
jl
pop
in
into
lahf
sbb
xor
xchg
adc
fbld
add
ret
aad
pop
lret
jge
popf
adc
dec
jbe
outsl
xchg
lock
rcrb
mov
add
jo
mov
or
inc
jb
add
dec
push
xchg
mov
sub
push
sub
das
out
ficomps
sbb
test
xchg
xchg
es
lret
jns
test
mov
lock
inc
push
lds
in
dec
rolb
ret
pop
cltd
jne
sarl
mov
xchg
push
int
mov
int3
push
rcrb
adc
or
mov
in
push
inc
fwait
and
lahf
mov
ret
add
rorb
mov
jmp
cmp
jo
sbb
int3
pop
cmp
jbe
dec
sbb
dec
xchg
sub
int
adc
fwait
andb
mov
les
mov
ljmp
fstpl
dec
dec
xchg
lret
dec
cltd
mov
jne
shlb
aad
jmp
in
fcoml
add
shr
jg
scas
add
or
mov
sub
fwait
adc
pop
lret
add
out
dec
inc
sbb
mov
ret
repz
xchg
mov
xor
hlt
lret
or
ret
dec
inc
sarb
dec
cltd
arpl
les
inc
dec
addr16
push
lods
fwait
or
jle
push
cmpb
jnp
or
xor
dec
inc
negl
shl
and
mov
loope
xlat
sub
enter
adc
adc
add
ret
cmpsb
lret
push
repz
loopne
pop
add
call
jne
xor
stc
in
jl
test
inc
sahf
mov
imul
mov
pop
ljmp
jl
mov
xchg
xchg
mov
sub
jne
popf
dec
aaa
add
jge
jecxz
cmpsl
aaa
fisubl
push
lahf
sbb
xorb
sub
dec
pop
scas
cmpsl
push
and
call
jb
pusha
sub
dec
xor
and
call
mov
pop
mov
stos
je
rcl
lock
aad
scas
ret
push
push
shl
ljmp
arpl
adc
xor
pop
sub
dec
mov
iret
cld
sahf
xchg
mov
xlat
lods
or
cmp
dec
mov
sti
dec
cwtl
scas
pop
movb
loope
lahf
jp
pop
lret
test
adc
xor
push
sub
rol
int3
ficomps
mov
add
xchg
or
mov
dec
into
adc
cmpsl
ret
nop
sub
cmp
mov
mov
sub
xor
or
nop
scas
rolb
pop
pop
mov
sub
fs
sbb
jp
pop
pop
or
sbb
cld
and
jbe
ljmp
insl
loopne
pop
rcr
mov
fisubrs
mov
lods
sub
push
lcall
dec
out
rcl
push
inc
js
mov
pop
test
inc
andl
test
cmpb
push
bound
inc
popa
xchg
ljmp
pop
daa
jbe
pop
mov
mov
lahf
and
lock
lock
test
cmc
sub
daa
sarl
movsl
push
inc
jns
and
sbb
daa
sub
inc
test
add
lcall
in
mov
movb
ss
sahf
push
sub
pop
adc
sbb
out
gs
dec
stos
out
mov
cmp
dec
jae
mov
into
or
xchg
je
xor
sub
inc
nop
data16
push
and
mov
mov
in
stos
lea
iret
ja
das
shll
xchg
pop
mov
mov
adc
cltd
repnz
fmuls
es
adc
test
sbb
dec
mov
cmp
mov
scas
dec
xchg
dec
icebp
repz
test
sbb
adc
dec
idivl
aaa
into
and
dec
test
push
sti
mov
mov
xor
cli
cmp
push
push
xchg
int3
jo
stc
dec
and
and
movl
lret
lea
sbb
mov
sbb
fs
xchg
scas
mov
popa
mov
arpl
jl
cmp
xchg
stos
inc
sarl
sahf
cmpsl
stos
into
fldenv
jl
ficoms
cwtl
in
mov
sbb
mov
jo
mov
adc
repz
xchg
adc
addb
lret
or
cmpsb
cmp
cmpsl
sub
jle
stc
je
xor
push
lret
and
std
andl
cwtl
and
or
sub
and
cmp
pop
adc
dec
ret
outsl
and
sbb
push
outsb
and
ret
addr16
jbe
dec
stos
jbe
add
sarb
cmc
movb
xchg
mov
inc
insb
jge
cmc
xchg
dec
ss
fnstenv
dec
stos
sub
and
sub
les
inc
movsl
aam
repnz
rcll
mov
push
adc
cmp
and
and
inc
inc
jbe
negb
cmp
push
pushf
daa
popa
mull
mov
sub
mov
and
gs
insl
fidivrs
push
and
movl
adc
pushl
loope
sub
xchg
adc
mov
xchg
cmp
xchg
addr16
xchg
out
js
sbb
icebp
mov
into
cs
imull
aaa
aad
sbb
xor
dec
and
std
lock
sub
cs
mov
cmc
mov
scas
xchg
dec
jle
std
stc
stc
cmp
add
and
pop
fisttps
inc
int3
jne
popf
inc
insb
xchg
pop
adc
mov
aaa
ja
repz
in
stc
adc
pop
inc
mov
pop
insb
add
cmp
popa
push
ds
aaa
dec
jge
sub
sbb
pop
xorb
dec
out
pop
clc
mov
dec
jmp
rcr
jl
sub
push
std
and
sbb
dec
xlat
popa
leave
push
repz
jmp
ret
jmp
setle
ret
cli
push
push
into
push
mov
xchg
test
les
in
pop
cltd
or
clc
je
loopne
inc
add
hlt
dec
lahf
mov
imul
fcomip
ror
dec
pop
pusha
repz
icebp
in
cmp
inc
xchg
inc
inc
int3
adc
imul
pop
jae
inc
in
add
fnstcw
insl
lret
testl
mov
dec
cmp
aad
xor
mov
pop
repz
cmpsl
push
outsb
mov
mov
aas
aaa
jo
jno
xor
rol
popa
dec
and
push
lcall
sbb
jmp
mov
in
push
arpl
inc
addb
in
icebp
fiadds
xor
mov
fidivrs
sub
adc
and
push
push
test
loope
ds
add
xlat
mov
mov
enter
sbb
xchg
outsb
nop
or
bound
or
rcrl
jp
dec
fdivrl
xchg
sahf
push
inc
push
and
dec
inc
or
lret
pop
loop
sbbb
in
stos
js
cmp
ficoml
sub
xchg
outsl
pop
int
mov
in
push
sub
xchg
or
into
pop
out
and
xor
inc
lods
fists
inc
in
fs
cmc
fwait
mov
es
dec
fsubs
xchg
jns
inc
cwtl
pop
mov
inc
sbb
dec
add
rclb
lret
addr16
arpl
inc
pop
xor
jno
sub
fistps
movsb
jo
xor
stos
hlt
roll
clc
es
pop
paddsb
mov
adc
daa
jecxz
scas
dec
inc
mov
ret
rcr
push
push
xchg
ds
fcompl
scas
xlat
outsl
cwtl
lods
and
gs
and
mov
rclb
xchg
xor
mov
adc
push
jmp
loop
rorb
push
cmpsl
cmp
fs
pinsrw
std
dec
roll
cld
jne
subb
mov
fdivl
mov
or
lock
jno
in
jl
out
ss
loop
enter
mov
loope
push
gs
jmp
add
dec
mov
pop
repnz
ret
lahf
mov
in
std
push
or
ja
mov
adc
into
cmp
jne
stos
repz
icebp
int
das
adc
mov
fnsave
xor
mov
or
in
xchg
adcl
xchg
je
notb
out
xchg
xchg
lds
ds
or
dec
movsb
mov
inc
aam
repz
mov
daa
cmpsb
push
test
cmp
mov
hlt
les
inc
rcll
sbb
fldt
pop
mov
js
add
dec
push
mov
data16
and
pop
xchg
mov
nop
mov
mov
ljmp
repz
adc
out
rorl
leave
jmp
push
dec
mov
xor
inc
test
jmp
sbb
jb
daa
adc
mov
scas
ss
ret
int3
inc
mov
hlt
inc
add
push
jmp
in
dec
ds
jno
push
adc
push
cmp
fs
gs
es
push
frstor
sbb
and
add
std
jp
shll
iret
add
cmp
je
ficompl
and
iret
push
push
sbb
cs
xchg
inc
cmp
push
fs
daa
cli
jmp
adc
sub
loop
dec
mov
dec
mov
mov
and
testb
fwait
repz
test
ret
popa
aam
jmp
sbb
cs
aaa
mov
lcall
test
leave
orl
pop
shrl
rcrb
xchg
xchg
fidivrl
fwait
jecxz
shr
jne
mov
jns
fisttpl
cmp
xor
and
mov
sbb
cmc
mov
xlat
mov
xor
lret
fidivrl
scas
add
jno
fisttpll
pop
dec
mov
popa
and
add
adcb
in
pop
popf
push
int3
mov
lahf
rcrb
inc
lods
pop
adc
insl
sub
jns
and
imul
scas
jp
dec
sarl
jb
pop
test
jg
add
mov
data16
push
in
inc
xor
jnp
ds
inc
js
mov
testl
in
add
rolb
cltd
xor
add
cmpsb
inc
test
or
out
cmpsl
movsb
fs
lds
std
pop
pop
movsb
add
inc
loopne
push
add
cmc
stos
ds
adc
xor
mov
lds
mov
mov
add
mov
fwait
xchg
es
nop
sub
lods
and
xchg
adc
sbb
dec
and
fnsave
cmp
adc
fimuls
xor
test
or
sub
lret
dec
dec
or
inc
mov
jae,pn
mov
out
mov
call
arpl
sti
pop
xchg
outsb
je
dec
mov
pop
inc
cmp
mov
fisubl
aaa
loope
rorl
rorb
out
pop
sub
dec
xchg
push
repz
andb
loop
add
loop
mov
aaa
cltd
rcrb
repz
out
jne
add
pop
aas
insb
mov
cld
sahf
push
dec
popa
push
out
test
std
iret
fistps
fldcw
inc
nop
push
lcall
outsb
sub
or
testl
and
dec
mov
pop
outsb
sbbb
pop
pop
rcrl
adc
negb
jle
testl
cmp
cmp
add
and
adc
add
stc
daa
pop
stc
mov
aaa
sbb
push
and
test
fs
dec
mov
out
call
cmp
add
fdivrs
jbe
jg
sub
daa
jns
inc
xor
outsb
adc
enter
inc
arpl
pop
mov
push
sub
cs
inc
push
and
jle
adc
mov
ret
sub
push
dec
es
icebp
jo
cmp
push
mov
int
jne
or
mov
inc
lcall
out
test
aaa
mov
aas
lods
mov
push
inc
mov
inc
test
dec
mov
pop
out
test
shrl
sbb
lock
pop
cmp
ret
ljmp
adc
ret
jne
push
insl
cmp
and
jp
shl
scas
sub
pop
adc
mov
cmp
addr16
and
stos
jmp
mov
es
push
inc
lret
ret
cmpl
pop
adc
cmp
mov
push
into
xchg
or
fwait
jl
dec
lods
mov
shlb
jl
or
lods
mull
mov
pushf
dec
sub
mov
fistl
int3
cmp
lcall
mov
xor
icebp
inc
mov
push
negb
in
adc
mov
sub
fistpl
dec
add
ror
jecxz
scas
int
lret
movsl
push
mov
mov
mov
movsb
cwtl
movsl
dec
xchg
rolb
cmp
ficomps
xchg
data16
shlb
lods
mov
loopne
pop
shll
pop
loope
jne
dec
jne
inc
xor
jmp
inc
mov
cmp
aad
mov
insl
xchg
daa
icebp
dec
add
mov
pop
repnz
popa
popf
out
push
xor
repnz
js
scas
addl
clc
sub
sub
cwtl
inc
into
dec
dec
adc
std
xchg
das
je
xor
cmpsb
add
mov
cmp
jo
out
xor
sub
push
sbb
push
sarb
pop
sti
pop
rorb
mov
mov
das
mov
in
inc
adc
pop
fsincos
dec
adc
or
xchg
or
xor
gs
insl
iret
repz
fildl
or
jg
lret
dec
subb
aaa
int
add
pop
fcoms
inc
inc
adc
cmp
mov
loope
xor
push
test
test
fistps
int
mov
push
mov
add
fsubrs
jnp
mov
mov
loopne
sub
cmpsb
dec
jae
push
inc
ficoml
xchg
add
or
pop
and
outsb
or
test
js
outsb
lods
jae
fdivrs
xor
sbb
push
inc
pop
data16
ljmp
mov
jecxz
mov
scas
test
jp
dec
cmp
and
mov
jns
push
mov
negl
loopne
dec
or
ljmp
dec
ret
imul
fwait
pop
imul
lcall
jnp
xchg
add
jle
stos
sub
mov
push
inc
out
xor
mov
inc
or
icebp
mov
sbb
into
xchg
sbb
adc
mov
out
mov
sub
insl
pusha
cmp
hlt
outsl
mov
lret
aaa
inc
xlat
in
mov
push
vpunpckhbw
test
and
lahf
pop
sub
jle,pt
movsb
jae
add
sbb
xchg
leave
push
inc
add
sub
shlb
js
mov
daa
sub
cmp
fadd
add
xchg
cltd
shll
out
cmp
loopw
sahf
cld
cmc
and
xchg
xchg
test
cltd
cmp
rorl
and
pop
test
sahf
ljmp
xchg
fdivrl
test
jb
fnsave
cmp
lds
adc
pop
push
mov
mov
xchg
repnz
cmpsl
lea
pop
sub
pop
dec
pop
fsubl
mov
sub
sub
pop
fwait
jno
iret
cmpsb
out
add
notb
pop
jbe
jl
push
push
push
sub
xchg
lea
cld
mov
jb
inc
xor
or
js
pusha
ja
adc
mov
or
leave
or
rcrl
lock
mul
orl
inc
test
pop
jle
stos
inc
mov
mul
mov
add
fistpl
outsb
loope
outsl
mov
aam
loope
mov
sub
sub
sub
sub
adc
push
or
mov
xor
inc
scas
cmp
leave
je
stc
mov
adc
push
outsb
fstpl
push
inc
mov
fistps
jmp
mov
in
sbb
andb
lret
mov
hlt
cmp
adc
inc
std
dec
mov
cmc
push
sbb
jne
and
in
scas
cs
adc
pop
mov
push
je
mov
insl
fcmovnbe
adc
jl
xor
test
js
jo
insb
push
dec
mov
out
cmp
outsl
mov
lret
mov
sub
out
andl
dec
inc
adc
push
fldcw
int
xchg
cmp
lds
inc
pop
cwtl
nop
mov
popa
xor
sahf
pop
adc
ljmp
add
loopne
test
and
pushf
imul
mov
adc
mov
sbb
mov
rclb
fistpl
add
iret
rclb
add
push
xlat
pop
in
pusha
add
jno
in
mov
outsb
int3
test
pushf
mov
lds
add
push
outsl
in
lds
adc
out
es
jmp
out
mov
or
mov
and
adc
add
cmpsl
out
xchg
mov
in
xor
sub
mov
daa
mov
xor
mov
inc
in
movsl
dec
fwait
jmp
mov
xchg
mov
decb
jmp
or
xchg
clc
and
cmpsl
or
addr16
popf
and
mov
fmul
lret
mov
mov
mov
cmp
mov
pop
cltd
insb
mov
outsb
enter
push
mov
int3
mov
scas
shrl
push
mov
jno
sub
jmp
pop
pop
cltd
xchg
add
or
mov
arpl
push
test
ret
sti
out
cltd
xchg
dec
or
popf
sub
mov
cmpsl
mov
dec
cwtl
cmpsb
cmp
cmpsb
mov
scas
mov
mov
jle
xchg
outsl
push
jno
ljmp
or
mov
ljmp
mov
adc
ljmp
orb
addr16
xchg
pop
stos
ja
fadds
fimuls
jns
sahf
add
imulb
insl
push
lods
mov
sbb
setbe
movsb
sub
std
in
call
adc
or
dec
aas
decb
fsubrs
dec
outsb
xchg
and
insl
shrb
xor
jns
push
insb
pop
addl
stos
jae
mov
repnz
cmpsl
rolb
and
popa
shlb
lahf
xor
add
inc
cli
pusha
cmpsl
popa
out
daa
xlat
xor
mov
pop
lock
lret
inc
inc
push
mov
xchg
fldln2
cltd
in
xchg
les
lock
pop
hlt
adc
leave
push
push
mov
js
arpl
idivl
push
xor
add
mov
push
push
push
bound
xchg
push
fstl
pop
fmul
hlt
dec
add
rcrb
fmull
inc
andps
lods
insb
decl
or
sbb
shl
sti
lods
cli
cwtl
lahf
inc
sahf
enter
mov
icebp
test
es
mov
cmp
or
sbb
and
fistpl
jl
jmp
je
sbb
lds
push
je
icebp
mov
xchg
adc
inc
mov
and
sub
mov
mov
fcmove
mov
mov
mov
ds
jle
pop
cmc
fs
int3
pop
and
jae
lods
or
bound
rep
push
mov
dec
aad
pop
push
lea
imul
ljmp
add
push
in
adc
or
mov
cltd
mov
pop
jb
pop
mov
dec
insb
push
int
enter
xchg
adcb
dec
cs
cwtl
out
rclb
inc
call
sub
insl
xchg
outsb
cmpsb
insl
push
xchg
iret
jbe
push
subl
pop
xorl
sbb
or
addr16
pop
sub
sbb
movsl
pop
pop
jmp
jmp
dec
and
pusha
les
movsl
ficoms
cli
jmp
mov
jg
in
dec
adcb
clc
jle
clc
or
jl
inc
sub
add
adc
xchg
xcrypt-ecb
cmpsl
dec
out
sub
setnp
stos
lret
in
sub
gs
cmp
pusha
fiaddl
cld
lock
mov
inc
inc
dec
mul
add
pusha
fsubr
pop
fs
cmp
add
fisubl
sub
out
clc
xchg
addb
neg
push
stos
add
lret
xor
or
idivl
jge
stos
jne
xchg
out
in
or
mov
sbb
push
xchg
imul
or
sbb
ljmp
sub
inc
test
addr16
jne
stos
mov
sahf
or
test
jl
out
lock
flds
jg
lret
mov
outsl
mov
gs
mov
int
sbb
mov
jne
add
outsb
call
push
lret
and
pop
js
mov
xchg
inc
loopne
movsl
stos
mov
out
pop
cmp
fmul
xor
cs
idivl
add
inc
push
mov
mov
push
loopne
ljmp
cmp
pop
sti
lds
jl
dec
pop
lods
incl
xchg
mov
dec
push
add
mov
add
xchg
adc
ja
in
cmp
xor
ret
sub
dec
sub
int
clc
dec
into
mov
subb
fildl
out
or
dec
fidivs
xchg
sub
jns
enter
in
ljmp
scas
xchg
stos
mov
pop
scas
das
data16
mov
mov
lcall
call
push
cmp
lods
sub
mull
xor
xor
into
dec
movsl
lahf
not
mov
loope
fwait
mov
idivl
inc
xchg
mov
xorl
sbb
sub
stos
adc
inc
jbe
lret
cmp
test
add
jb
lcall
lods
movsb
or
mov
jae
aad
jl
popa
and
lods
pop
xchg
pop
lods
jno
test
push
jno
cmp
aam
sub
clc
test
mov
scas
pop
in
dec
lahf
xor
je
mov
jno
mov
and
lcall
call
add
and
clc
dec
xchg
inc
arpl
repz
inc
mov
leave
sbb
and
inc
scas
fistl
jle
mov
sahf
shlb
mov
fmulp
jecxz
sbb
inc
push
mov
in
mov
hlt
stos
dec
das
lock
clc
aaa
cmc
mov
xor
dec
xor
aad
cmpsl
dec
mov
or
dec
inc
mov
xorb
pop
push
add
xor
call
pusha
in
pop
dec
mov
in
pop
sub
mov
add
addl
cwtl
push
and
push
xor
cmp
mov
inc
adc
cmp
jge
sarl
into
jp
paddd
xor
fadd
sbb
cmp
mov
cltd
loope
lret
int3
out
xchg
cwtl
les
cmc
int3
jnp
imul
or
addr16
dec
fldt
lcall
test
push
addr16
xchg
stos
cmpsb
mov
or
mov
add
rcrb
pop
or
add
sar
push
sbb
mov
mov
iret
leave
mov
test
sub
outsb
and
hlt
add
lods
mov
sbbb
outsl
xchg
push
loopne
ss
or
mov
fildl
lods
cmp
clc
jge
mov
shll
pop
pop
ret
fsubp
dec
push
push
pop
sbb
cli
mov
fistps
lea
add
loop
pop
jo
mov
inc
add
and
andps
push
pop
fwait
test
xor
mov
and
or
xchg
mov
sarb
shll
and
popa
mov
fildll
test
aas
fldcw
cld
sbb
sbb
or
scas
sbbl
xchg
cmpsl
cli
sub
push
sbb
jl
cwtl
mov
cld
stc
push
mov
cmp
sbb
clc
sub
cmpsl
xchg
addb
inc
sub
fdivl
aas
negl
mov
dec
sub
xor
dec
cmp
test
fs
push
push
push
lods
xchg
push
jge
cmp
pop
scas
out
or
test
push
push
jge
mov
dec
pushf
push
jno
inc
dec
enter
cmpsl
jle
pop
cmp
push
lret
inc
and
sub
lods
xchg
insb
push
fistps
jno
scas
sbb
dec
into
push
and
fimull
dec
fadd
rcrl
sub
adc
pushf
inc
sbb
outsl
pop
or
mov
sbb
sub
lods
xchg
sub
sbb
cwtl
add
stos
push
call
inc
jecxz
in
xorl
cmp
xor
jae
ljmp
xchg
jnp
inc
leave
or
js
push
gs
aam
in
xchg
ficomps
cmp
mov
xorb
adc
movsb
stc
inc
test
daa
jecxz
xchg
cmp
push
je
xchg
out
pushf
mov
nop
mov
daa
adc
jmp
sbb
sub
pop
sbb
adc
negb
xchg
inc
push
xchg
cli
dec
sahf
fimull
inc
loopne
bound
sub
pop
pop
jae
loope
pop
xchg
into
cltd
xchg
lea
dec
cmp
xlat
outsb
or
fwait
adc
and
mov
add
outsl
jbe
cltd
mov
fdivrs
pop
jo
out
cli
sbb
push
call
ret
cmp
cli
data16
in
aad
adc
jl
clc
aas
repz
fucomip
jp
aas
pop
pop
and
aaa
in
mov
mov
cmovne
ret
mov
dec
push
mov
and
popf
out
test
lock
fwait
out
and
sub
push
pop
xchg
int3
popa
fnsave
out
jns
int3
addr16
lods
ficoms
adc
pop
jns
cmp
jecxz
xor
adc
sbbb
scas
mov
mov
mov
leave
nop
gs
fcmove
loopne
mov
and
push
add
sbbl
faddl
imul
in
mov
or
fucomip
dec
stos
pusha
mov
rolb
aam
jl
push
jp
and
out
lods
cmp
sahf
pop
cld
mov
pusha
dec
inc
pop
mov
cmp
adc
rorb
xchg
pop
shlb
stc
mov
add
jbe
jne
lea
dec
mov
out
sbb
daa
cs
ss
addb
pop
jnp
dec
sub
dec
outsl
test
mov
sub
mov
movsb
mov
xor
pop
push
add
shlb
imul
sahf
cmp
or
push
inc
and
push
dec
fildll
nop
dec
mov
xchg
out
xchg
jl
cmp
inc
pop
cmp
inc
rclb
in
movsb
mov
and
daa
sbb
fnstcw
int
push
push
xchg
arpl
stos
adc
push
inc
inc
xor
sub
pop
test
mov
xchg
inc
pop
ret
ljmp
jne
jae
push
mov
jp
mov
sbb
xchg
xchg
loopne
sbb
mov
pop
shrb
sbb
add
push
in
lods
cmp
lock
sbb
sarb
ljmp
test
lea
adc
test
fistpll
jnp
adc
xor
mov
inc
gs
out
je
std
xor
push
subl
mov
mov
push
cmp
xchg
mov
push
push
stc
ljmp
jecxz
mov
push
pop
xchg
insb
not
push
iret
sub
jno
clc
js
clc
adc
gs
jge
leave
aaa
cmc
call
or
or
pop
aad
jmp
xchg
xor
imul
and
inc
pusha
inc
test
mov
dec
ljmp
jle
jo
fwait
pop
xorb
inc
cmp
dec
idivl
cmp
push
gs
fdivs
repnz
loopne
cmpl
mov
or
sbb
dec
nop
movsb
stc
in
xchg
fimull
cli
movsb
mov
dec
mov
xchg
fcomps
sbb
xor
jns
xchg
fisubrl
add
cli
mov
dec
out
sbb
cmp
fsubrs
enter
and
lahf
pusha
sbb
data16
subb
popa
mov
or
pop
xor
xchg
mov
lcall
dec
cltd
and
stos
mov
movb
push
sbb
sub
lret
push
subl
sti
shll
add
add
add
jmp
xchg
dec
out
repz
clc
iret
push
or
pop
pop
sbb
jo
leave
inc
sub
ret
push
mov
enter
fwait
xor
sti
dec
imul
mov
fidivs
aaa
xchg
and
add
xor
repnz
cmp
and
dec
pop
xchg
add
pop
cmp
xchg
nop
gs
popf
jl
fldenv
mov
jmp
dec
cmp
jbe
test
int
test
adc
fdivl
mov
nop
push
jmp
pusha
sar
sub
xchg
push
fs
cmovge
repz
sub
imul
insl
dec
dec
pop
add
jp
pop
push
enter
or
add
addr16
jbe
pusha
jnp
mov
jns
sbb
dec
and
xchg
loopne
imul
inc
leave
pop
out
add
jp
mov
adc
imul
dec
xor
mov
je
movsl
outsl
dec
ret
pop
jno
sbb
scas
add
out
cltd
in
in
mov
add
xor
add
in
mov
dec
pushf
enter
and
ret
test
fdivs
repz
test
movl
adc
test
sbb
cltd
inc
cli
adc
xor
out
ljmp
leave
call
aas
fisubrs
cltd
mov
mov
push
jno
call
sub
xchg
inc
pop
mov
and
iret
in
in
add
inc
dec
cltd
fs
test
gs
adc
out
or
sub
subl
and
out
inc
mov
xlat
dec
or
xchg
push
xor
sbb
inc
cmp
push
cmp
jl
test
test
mov
in
shll
fs
es
mull
xor
cli
pop
rorl
icebp
fcomps
jbe
push
pop
xor
rorl
jb
mov
push
jo
pusha
sub
lods
or
push
pop
pop
sbb
ds
notl
inc
and
rclb
xor
rcl
xchg
inc
pop
dec
std
push
xor
imulb
xlat
inc
xor
iret
dec
lods
mov
in
adc
repnz
sub
les
shrl
insb
add
xchg
ljmp
insb
dec
mov
jge
into
inc
in
dec
outsb
movsl
and
cli
sub
test
dec
adc
mov
outsl
xor
pop
add
cmp
loopnew
lcall
int3
adcl
jp
jl
sub
or
lret
mov
xor
lret
mov
cs
jmp
push
jbe
or
pop
shlb
push
imul
andl
xor
push
je
scas
cwtl
repz
mov
xor
and
clc
out
or
call
sar
adc
insl
into
stos
cmp
aas
popa
je
jmp
mov
stos
rolb
pop
lea
aad
or
jne
or
data16
outsl
imul
cmp
arpl
lea
pop
cwtl
loope
pop
inc
and
jne
add
sbb
mov
cmc
loope
xor
in
xchg
fimuls
daa
cmp
flds
pop
es
ret
cmc
lods
pop
xor
pop
ljmp
negb
movsb
adc
pop
faddl
xor
lcall
sbb
scas
pop
and
jle
in
jmp
cmp
pop
mov
pop
and
mov
lret
add
stos
sub
mov
pop
adc
push
or
and
sbb
popa
negb
outsb
xlat
sub
jbe
pop
iret
jp
std
mov
cwtl
mov
push
popa
aas
lods
jmp
adc
jno
xchg
mov
fstp
loopne
subb
test
xchg
repz
insl
pop
shlb
bound
stc
data16
sbb
and
loope
dec
insl
jns
lea
jg
dec
dec
js
loopne
int
imul
inc
ss
xchg
data16
xor
lret
push
rcrl
iret
xor
jg
mov
or
lock
cmpsb
stos
push
out
icebp
pop
dec
arpl
lret
mov
aam
adc
fcom
jge
cmp
sub
cmp
lahf
mov
imul
dec
and
push
adc
pushw
nop
shlb
adc
xor
inc
in
sub
mov
mov
gs
cmp
mov
add
push
sbb
pop
mov
adc
pushl
xor
pop
mov
out
fstpl
fdiv
pop
arpl
insl
and
mov
dec
fwait
mov
pop
js
inc
push
in
mov
nop
into
mov
fcoms
push
insl
mov
add
push
xlat
add
add
inc
sub
loope
sbb
imul
stos
scas
push
lock
jmp
jle
lret
and
insb
pop
outsb
leave
jecxz
adc
push
mov
fildll
cmc
cwtl
xor
jle
jnp
add
push
leave
sbb
cmp
rcrl
cmp
xlat
lock
xchg
sub
mov
int
lret
pop
ret
gs
cli
pop
jp
test
pusha
popl
out
pop
cmc
xchg
popf
push
push
mov
fucom
out
pop
iret
push
or
mov
xor
test
push
lea
fwait
popf
pop
or
dec
inc
lock
iret
xorb
inc
les
cmpsl
push
in
divl
fdivs
xchg
scas
pop
inc
cmp
movsb
fs
pushf
bound
xlat
push
and
mov
js
and
icebp
sub
popa
cmc
jecxz
cltd
adc
pop
leave
jns
mov
incl
fstps
push
inc
or
cwtl
push
inc
cmp
fst
cwtl
sub
test
loope
repz
mov
sbb
pop
xchg
sub
dec
cmovs
dec
cmp
pop
or
lcall
cltd
outsb
movl
add
in
rcrb
xor
dec
mov
cmpsl
xchg
fsubrs
out
add
dec
mov
mov
jmp
pop
push
sub
inc
mov
in
or
es
and
sub
hlt
xchg
enter
cmc
jecxz
fistpll
jne
jb
arpl
hlt
ds
leave
xchg
out
pop
loopne
sbb
and
mulb
or
sbb
or
imul
lea
jle
sbb
pop
scas
mov
movsb
mov
sub
push
jns
dec
jb
push
sti
sti
subb
je
adc
aam
clc
jae
test
std
adc
jbe
inc
ja
jl
call
pop
out
roll
xchg
pop
and
fmull
fmull
sbb
push
mov
mov
into
dec
or
xor
adc
mov
pop
add
lods
ljmp
cwtl
icebp
sbb
mov
and
lods
jne
lcall
mov
push
add
or
push
xchg
jg
inc
std
out
inc
clc
sbbl
mov
test
dec
jp
xor
insl
sub
push
mov
xchg
xchg
shll
xor
ss
daa
out
cmp
in
jle
xlat
fidivrl
ja
dec
test
push
jae
shr
xor
int3
jae
mov
pusha
movsl
dec
xchg
mov
jecxz
rcrl
std
aaa
mov
push
lods
clc
inc
ljmp
adc
pop
mov
xor
xor
loope
and
test
push
cmp
push
rcr
stos
loope
push
add
outsl
repnz
or
dec
sbbb
dec
xchg
out
xor
rol
pop
xor
ja
dec
int3
pop
lcall
adc
test
push
out
and
movsb
add
jne
ret
nop
pop
cld
xchg
repz
adc
mov
fidivrs
stc
fcoms
push
mov
out
pop
pop
mov
test
into
push
mov
sub
xchg
loop
or
inc
mov
pusha
pop
dec
stos
call
mov
jbe
and
and
addl
stos
cli
cmc
enter
mov
dec
mov
cld
and
or
xchg
jl
mov
and
xchg
inc
xor
sbb
adc
ret
push
xor
insb
jns
lcall
dec
call
mov
xor
aas
dec
jb
dec
cmpsb
inc
out
shrl
ficomps
outsl
and
clc
sarl
imul
cli
inc
jle
pop
or
dec
in
adc
fs
mov
or
dec
mov
mov
jbe
mov
cld
add
xor
cs
sub
cmpsb
fnsave
jnp
inc
popa
jno
in
cmpsl
push
xor
or
loopne
daa
movsl
jae
lea
jl
mov
fbstp
shlb
dec
mov
xchg
out
imul
out
jle
scas
imulb
cli
cmc
inc
sbb
xchg
ret
sarb
aaa
inc
push
int3
mov
arpl
ja
xchg
dec
sbb
mov
out
inc
mov
pop
cmpsl
cmp
movsb
inc
push
pop
xor
loope
arpl
addr16
stos
inc
out
insl
addr16
push
add
mov
sub
pushf
clc
or
and
jnp
jecxz
cmp
es
inc
jmp
add
int3
lods
jp
rolb
stos
fdivl
fdivs
push
andb
in
negl
dec
xor
lods
cs
mov
cmp
inc
sahf
fsubrl
insb
lret
inc
sbb
lahf
aad
xchg
je
mov
mov
sub
push
mov
inc
adc
sarb
pop
mov
cmp
lock
cmp
xchg
dec
sub
pusha
ss
jg
or
fisubrl
into
add
mov
dec
mov
cmp
fwait
adc
mov
out
mov
inc
loop
add
in
dec
xchg
dec
btcl
mov
jno
outsb
mov
rcrl
cmp
aam
in
mov
and
mov
sti
dec
mov
adc
sbb
mov
hlt
push
or
cltd
jp
lret
in
dec
mov
pcmpgtb
aaa
addr16
stc
or
jae
cmc
jb
sbb
test
inc
or
in
fistl
dec
ja
lahf
es
sub
rcl
sbb
push
jo
inc
arpl
xlat
flds
xor
loop
pop
dec
stos
jo
dec
push
loopne
or
mov
loope
fdivrl
jnp
xchg
pop
mov
add
in
cmp
gs
leave
mov
lahf
stos
sbb
movsb
jnp
pusha
ss
adc
in
adc
mov
inc
cltd
out
and
sar
test
rcrl
insb
mov
jp
in
popf
jbe
cwtl
or
sahf
sbb
lret
lea
cmp
cs
mov
shlb
add
out
outsb
insb
loopne
pop
into
test
and
cltd
and
fidivrl
sub
movsl
je
mov
sub
mov
push
sahf
rolb
and
or
sub
lret
jae
xlat
lods
das
inc
out
lods
inc
lahf
add
cmc
cmc
inc
pop
movsl
ret
out
shr
add
pop
xchg
test
jmp
fdivs
mov
mov
imul
out
insb
sub
test
cmc
dec
mov
cltd
ljmp
mov
outsl
jo
and
ret
and
rclb
xor
lds
sub
int
loop
inc
lods
prefetch
or
jb
add
test
das
push
jecxz
cmpsb
std
leave
fwait
push
mov
in
pop
cltd
push
icebp
stc
mov
cmpb
call
sbb
xchg
das
out
push
mov
xchg
or
cmc
sbb
xchg
mov
xchg
insb
js
and
push
jb
gs
xchg
pop
out
cmpsl
cld
pop
mov
or
stos
mov
mov
sbb
and
push
and
pushf
mov
mov
push
mov
xchg
in
pop
jnp
cmp
shl
out
push
shlb
and
popa
fstps
sub
dec
out
and
push
push
pop
sub
jno
mov
jp
lcall
test
sbb
insb
shrl
es
iret
scas
sahf
lods
cmpsl
mov
cmpsb
push
and
xchg
jne
sbb
adc
jae
push
or
sahf
cwtl
insb
std
leave
and
fsub
mov
sti
sbb
push
aam
fbld
mov
int3
adc
lds
sahf
pop
gs
xchg
cmpsl
xor
pop
fdivrp
jnp
call
pop
ljmp
aad
jno
sbb
dec
xchg
pop
lcall
fcmove
movsb
and
add
push
mov
add
movsb
mov
lock
sbbb
pop
mov
lcall
ss
mov
insl
push
or
add
ror
stos
jmp
adcl
or
leave
pop
jne
add
out
mov
ljmp
sub
xchg
andl
ss
sbb
or
gs
push
cmp
xor
jae
lret
pusha
movsb
ds
jbe
pop
test
aaa
or
push
inc
fdivrs
sarb
sti
mov
popa
push
mov
adc
sub
dec
cwtl
jnp
xor
dec
mov
cmp
bound
inc
hlt
jnp
mov
and
pusha
repnz
or
and
and
lret
or
in
mov
mov
sbb
dec
mov
cmp
and
xor
aaa
push
mov
loop
cli
adc
fiaddl
gs
push
xchg
push
and
xor
adc
out
mov
movsb
test
int3
lcall
cmp
sub
lods
gs
das
stos
dec
sti
cli
mov
outsb
fs
dec
iret
or
negb
jne
pop
imull
add
test
mov
scas
mov
push
jl
data16
stc
lret
pop
adc
jb
dec
cmc
popa
mov
mov
aas
or
pop
sbb
je
lods
test
sbb
std
mov
arpl
test
outsl
sti
pop
testb
nop
add
adc
cmpsb
or
mov
or
jbe
fsubs
aas
outsb
das
aad
stos
sub
mov
cmp
mov
pop
pop
push
and
ret
testl
add
negb
call
cmp
pusha
inc
dec
pop
lcall
mov
xchg
mov
inc
jge
popf
mov
cmp
int3
mov
movq
leave
outsb
jge
xchg
loop
stos
cmp
xchg
xchg
dec
inc
mov
loop
cwtl
iret
mov
in
fimuls
jns
cli
push
ds
adc
mov
lock
xchg
and
movsb
or
jle
xchg
jmp
xchg
fnstsw
xor
lcall
and
mov
sub
xor
pop
and
fcoml
gs
push
mov
fdivrs
cmp
pop
mov
subl
lcall
enter
stc
mov
jg
pushf
sets
std
outsl
mov
pcmpeqd
mov
insl
lret
popa
loopne
or
mov
inc
jl
jne
mov
mov
jne
ds
lret
cmp
in
es
pop
icebp
sub
push
adc
cmp
sub
in
mov
add
dec
push
lret
out
pushl
shlb
mov
loopne
jmp
jae
stos
arpl
jle
jno
pop
cmpsb
mov
lock
adc
cmpsb
lock
mov
repnz
xchg
movsl
and
test
xorl
or
fs
lock
fstpt
insl
insl
mov
pop
pop
xchg
lcall
cmp
add
movsl
out
sub
aam
push
adc
pop
sub
aad
inc
lret
sti
pushl
xchg
jmp
jo
imul
mov
nop
std
fisubrl
daa
fstps
xor
loope
pop
pop
addr16
int
mov
push
jae
shr
sbb
in
ret
jecxz
ljmp
push
push
popa
jb
les
es
hlt
leave
xlat
push
lods
sub
mov
add
push
sub
pop
sbb
inc
inc
enter
cld
das
cltd
pop
fisttps
cmc
push
adc
jae
pop
jge
or
or
jns
mov
testl
sahf
aas
push
push
loope
mov
adc
jg
jge
enter
cli
dec
mov
and
push
ds
xor
xor
adc
je
sbb
sti
jne
les
push
jp
jp
das
sub
sub
add
jns
sahf
out
mov
mov
mov
inc
inc
mov
es
adc
outsl
sub
ficompl
stc
outsb
or
rclb
inc
sub
or
xor
ljmp
mov
fcomip
aad
subb
ss
push
cmp
cwtl
sbb
notb
lret
repnz
push
inc
mov
jno
push
mov
mov
test
mov
pushf
adc
pop
or
xchg
scas
out
inc
xchg
inc
add
push
inc
mov
adc
cmpsl
or
sub
icebp
lcall
jne
dec
jle
xchg
pop
icebp
push
cmc
xchg
aaa
lods
je
stos
sbb
lock
xchg
xchg
dec
push
cmp
shlb
cmp
jmp
cmp
ficomps
sbb
pop
xor
and
add
cmp
mov
in
orb
dec
pop
jmp
sub
lcall
lock
imull
cmc
sub
sbb
or
xchg
test
jno
scas
mov
cmp
jb
das
lods
or
shrl
sarl
pop
push
rcl
xor
iret
xor
push
in
ja
mov
xor
fbld
adc
loop
fs
xlat
test
jnp
or
scas
pop
sbb
outsl
call
xor
jecxz
shrb
mov
mov
adc
push
arpl
js
jle
xchg
mov
lock
in
add
xor
fiaddl
or
scas
xor
das
outsb
fstl
sub
dec
test
push
jns
jae
push
xor
ljmp
cmc
stos
call
and
cmpsb
sbb
jle
mov
adc
fdivrp
mov
sbb
and
iret
pop
mov
and
jp
nop
in
xchg
cld
jp
mov
ds
push
push
dec
addr16
inc
jp
orb
sbb
jge
das
idivb
and
xchg
mov
scas
xchg
lock
push
inc
test
sub
daa
inc
add
inc
jnp
xchg
dec
lock
ljmp
mul
pop
add
mov
dec
and
adc
xchg
inc
dec
mov
ds
dec
dec
int
enter
xchg
imul
sbb
inc
jl
ret
ds
fisttps
repnz
push
fldl
insb
jnp
cmp
outsb
fcoml
cmp
iret
loop
cltd
shr
repnz
stos
es
push
inc
adc
push
push
cmpsb
adc
sahf
push
cmc
sti
inc
mov
aam
lea
adcl
loop
lods
sti
movsb
popf
mov
adc
dec
or
mov
sub
jnp
mov
es
dec
ret
and
pop
sub
push
sbbb
and
mov
add
sbb
inc
test
jge
shrl
test
daa
push
cmp
lcall
mov
mov
ffree
mov
gs
outsb
push
xchg
push
mov
adc
jbe
outsb
test
pushf
ds
inc
in
mov
dec
rclb
mov
push
hlt
call
stos
les
cmp
dec
and
call
jno
lea
cmp
ds
cmpsl
push
inc
ret
cltd
in
cmp
xor
pop
pop
sub
les
dec
stos
xor
sbb
add
test
mov
jno
mov
bound
dec
or
pop
lods
test
sub
lods
add
ret
xchg
sbb
fwait
dec
repz
fidivs
push
leave
ljmp
xor
in
or
or
psrad
int3
out
movb
insb
mov
stos
out
ficoml
imul
flds
mov
lods
div
int
mov
mov
fwait
pop
dec
testl
mov
mov
jo
sbb
mov
gs
and
dec
lea
pop
aam
push
sahf
mov
or
cmc
clc
aam
cmpsb
fadds
adc
aad
sub
xchg
fbld
push
adc
mov
out
mov
cmp
fsubs
in
lods
xchg
add
pusha
add
out
xchg
pushf
stc
mov
xlat
mov
or
adc
mov
ret
pop
cli
pop
xchg
adc
xor
nop
hlt
sbb
inc
mov
mov
cmp
xchg
xor
xchg
out
dec
mov
sti
add
add
stos
xor
pop
in
icebp
scas
push
mov
andl
mov
ds
cmp
dec
loope
mov
mov
xor
stc
cmp
cmp
and
xchg
and
test
ret
mulb
pop
cmp
xor
cmp
xchg
add
pop
pop
orl
fwait
decl
das
clc
push
mov
gs
jg
sbb
or
outsl
stos
inc
mov
push
dec
mov
inc
imul
mov
inc
test
int
jmp
add
out
repnz
add
fadds
and
mov
mov
lcall
mov
adc
scas
jmp
outsb
mov
lea
push
mov
scas
sub
mov
jno
sbb
lea
mov
lret
dec
xchg
cwtl
ret
insl
fwait
mov
stos
cmp
mov
mov
xchg
mov
test
je
cs
out
push
popf
nop
shrl
sub
or
lods
rcll
jl
mov
mov
fistpl
rorl
jae
ljmp
inc
rcrb
insl
mov
xchg
fildl
pop
jnp
out
or
jg
shlb
cmp
jb
in
fistps
xlat
jno
mov
sub
add
add
shlb
push
sbb
add
xor
or
in
daa
xchg
xor
out
lods
shr
es
cs
sub
push
testl
das
pop
pop
popa
arpl
pop
lcall
repz
pop
sahf
out
sub
and
mov
lock
mov
inc
jmp
adc
movsl
jno
imulb
and
in
ja
gs
in
xchg
andl
and
ja
sub
loop
mov
mov
shll
dec
je
xor
in
push
xor
jns
push
out
lcall
cmp
jb
outsl
pusha
pop
pusha
and
subl
xchg
sar
call
data16
push
fcompl
ret
push
addr16
inc
adc
div
jp
movsb
dec
xchg
insb
dec
add
out
sub
jns
scas
stos
insl
mull
stos
mov
repnz
dec
flds
fldt
xchg
mov
dec
je
cmp
insl
jae
cld
call
sbb
pop
jmp
call
cmpl
out
ds
adc
xchg
mov
dec
lret
add
shrb
fstl
inc
mov
lea
mov
lcall
push
lock
jbe
popa
cld
adc
pop
fwait
scas
inc
mov
data16
in
jb
ret
fidivl
xchg
enter
dec
sub
das
xor
clc
vpsrlq
dec
scas
xor
in
cmpsb
adc
sub
jae
shrb
add
lock
push
mov
pop
adc
ror
repz
mov
jp
add
in
add
sbb
lds
data16
sti
mov
pop
cwtl
cmp
cmp
xchg
lret
dec
in
cmp
push
adc
xor
and
push
pop
movsw
push
popf
bound
dec
out
or
xchg
jp
lods
insl
dec
sbb
push
sub
jge
or
mov
mov
jae
scas
push
mov
and
daa
lcall
out
lods
mov
movsl
push
mov
sub
std
jl
push
mov
mov
test
pop
cs
xchg
std
cmc
push
adc
popf
imull
pop
mov
dec
jl
flds
insb
js
lret
loop
test
insl
clc
add
lods
mov
pop
inc
hlt
pop
sti
daa
dec
shl
fidivrs
dec
repnz
daa
fcompl
fildl
pop
mov
ds
test
cmpsl
cmp
jb
enter
dec
pop
scas
dec
cmp
pop
leave
inc
xchg
leave
xor
int
or
icebp
mov
imul
test
out
cltd
jle
xchg
xchg
stos
rolb
sbb
sub
push
jb
mov
aad
xchg
aam
loope
sahf
cmp
jmp
pop
pop
nop
mov
adc
pop
imul
inc
add
mov
and
xchg
iret
cmp
xchg
inc
mov
andb
leave
xor
pop
lock
ficomps
push
push
mov
fcom
dec
sbb
jo
sub
lods
roll
fisttpll
aas
jmp
or
rcl
js
leave
ja
repnz
hlt
mov
pop
jle
roll
push
or
and
push
push
out
mov
je
mov
dec
xor
adc
xchg
cwtl
lret
mov
leave
mov
push
cmp
jne
sbb
setnp
mov
xor
xor
adcl
xchg
fdivrl
repnz
das
clc
jns
push
mov
aam
aaa
outsl
rorl
dec
fimull
mov
sbb
out
sub
mov
pop
jg
addl
xlat
xchg
cmovp
int3
jae
sti
outsb
adc
loope
mov
hlt
test
cmpsl
add
scas
jns
dec
xchg
xchg
mov
insl
push
xchg
mov
shr
cli
movsl
xchg
jnp
cmp
mov
pop
shrl
jbe
sbb
lcall
inc
xor
loopne
ja
int
jge
out
imul
lea
std
out
mov
xchg
rcrl
nop
pop
jmp
or
xchg
lret
nop
imul
js
into
jnp
in
call
mov
jbe
pop
popf
filds
sub
clc
sbb
loopne
pop
pushf
push
popa
cmp
cli
pop
mov
mov
mov
and
ss
loopne
je
mov
sub
inc
lods
inc
xor
ds
xor
push
cmpsl
fldenv
mov
mov
jmp
pop
ds
sbb
dec
lock
jbe
pop
cmp
mov
imul
lods
mov
sbb
pop
cmpsb
in
push
test
call
lcall
cmpsb
xrelease
iret
shr
mov
dec
fdivp
in
js
pop
dec
dec
mov
paddb
mov
cmp
push
enter
movsb
push
mov
clc
rorl
sub
fildll
nop
inc
and
inc
clc
mov
xchg
hlt
sub
or
leave
test
cld
test
jl
pop
gs
pop
int3
ss
les
xchg
popf
add
sub
sbb
in
dec
lret
leave
ret
clc
mov
or
pop
cmp
xor
xchg
cmpsb
test
jp
mov
mov
pop
scas
push
xchg
les
xchg
in
cmp
arpl
insb
inc
add
jbe
test
jp
dec
in
mov
test
inc
push
shr
xchg
pop
fs
or
add
jbe
push
shr
add
and
pop
stc
push
jg
or
rcr
lahf
adc
iret
push
test
push
mov
or
xlat
push
add
and
push
and
lock
cwtl
insb
sbb
fldl
inc
nop
scas
fwait
xchg
ds
adc
pop
shr
stc
pop
aaa
pop
jge
stos
mov
sub
ds
icebp
stos
push
loope
pusha
movsl
int
jmp
shr
arpl
mov
adcb
call
push
dec
loopne
iret
movsl
pop
cmp
pop
pop
setle
repz
lods
xchg
push
pop
adc
imul
sar
popa
dec
gs
fidivl
adc
data16
adc
aas
fisttpll
xchg
in
out
inc
mov
add
dec
cmc
iret
xchg
ja
ds
daa
push
adc
out
pop
mov
jecxz
int
subl
add
popa
sbb
repnz
mov
movsl
add
adc
dec
int3
xchg
dec
sub
test
sbb
xchg
push
pop
addr16
xor
sbb
aad
inc
xlat
jmp
xlat
xor
mov
stos
clc
fistpl
pushl
addr16
sahf
scas
stos
test
push
jmp
int
mov
cmp
and
in
ds
push
sbb
fs
jnp
xor
mov
iret
sbb
sbb
aam
sbb
xchg
gs
pop
mov
adc
pop
fdiv
pop
loopne
jge
iret
outsl
cltd
inc
insb
ret
mov
push
add
xchg
popa
cmp
rorb
das
add
fwait
cli
jb
fmulp
sub
mov
pop
popf
sbb
decl
mov
addb
into
imul
orl
xchg
dec
inc
cmpl
xor
lock
sbb
repnz
jle
ret
adc
cmpsb
je
fsubr
or
cmp
add
loopne
repz
lahf
pop
cmpsb
bnd
push
idiv
cs
adc
imul
or
cmpl
sbb
mov
clc
mov
mov
test
rclb
sub
or
inc
test
jge
shlb
ret
mov
mov
mov
je
and
mov
lods
adc
xchg
lahf
lods
push
movsb
jp
mov
rcr
xlat
cmp
cmpsb
jnp
js
jmp
out
popa
push
cmpsl
cmpsb
add
mov
mov
push
icebp
and
jns
adc
dec
sahf
mov
jb
les
mov
scas
into
js
aaa
adc
pop
pop
cmpb
add
out
sbb
cmpsb
pop
shr
cmp
xchg
mov
test
mov
sbb
iret
push
ljmp
push
push
pop
das
imul
pop
sub
adc
and
inc
hlt
pop
sahf
mov
or
subb
std
sbb
aas
fldt
xchg
cmc
push
mov
icebp
inc
repnz
out
mov
scas
mov
das
adc
aaa
mov
stos
xor
outsb
sbb
sbbb
adc
out
cmp
ret
mov
dec
push
xlat
mov
jns
shrb
das
and
inc
mov
and
dec
imul
mov
std
mov
jne
mov
or
leave
xchg
jbe
dec
daa
ficoml
enter
xor
cmp
incl
mov
xor
fs
push
imul
int3
cwtl
xchg
pop
ljmp
mov
xor
out
fs
or
jmp
out
push
fdivrp
movsl
loop
fistpl
pop
add
mov
nop
and
mov
xchg
call
out
shr
rcr
mov
addb
jp
sub
fsubs
xor
fucomi
adc
decb
jmp
xor
mov
mov
pop
fnstcw
lret
xchg
test
pop
push
inc
xchg
jmp
imul
sbb
icebp
insl
daa
lcall
icebp
adc
jle
jb
inc
and
repnz
xor
and
adc
add
or
dec
sub
lock
aad
cmp
je
inc
xor
dec
test
or
jae
sbb
or
aas
xchg
in
sub
lret
jp
add
push
mov
and
fisubl
push
sbb
dec
pop
dec
add
dec
xor
adc
scas
into
xchg
test
sti
lret
cmp
xor
repnz
stos
in
js
pop
add
addr16
cmp
xchg
sbb
imul
sub
sub
aam
inc
mov
mov
add
outsb
inc
xor
fsubl
add
sub
stos
adc
xchg
stos
mov
sub
popf
sbb
cli
scas
sbb
pop
inc
jb
xor
inc
jg
mov
dec
ror
fnstenv
adc
lds
sub
inc
jl
or
movsb
sub
cld
push
jne
pop
cmpsb
xor
xlat
sub
mov
je
mov
mov
pusha
push
mov
out
movsb
push
cmpsl
adc
add
roll
nop
out
mov
adc
mov
pop
jl
cmc
mov
stos
out
cld
sub
in
ss
dec
incl
push
xchg
adc
xor
js
scas
add
mov
stos
mov
repz
jle
pop
add
mov
mov
lds
xlat
je
std
ljmp
or
xchg
int
push
cs
push
cli
push
hlt
jg
add
xor
rep
jne
xor
push
sub
das
push
xorb
jle
repnz
or
in
in
gs
xchg
fdiv
jne
fstl
cmc
lods
pop
repz
mov
pop
push
mov
divl
daa
les
mov
add
cmp
adc
jge
hlt
outsb
imul
cld
aaa
mov
movsl
push
fldt
sbb
mov
loopne
data16
xor
push
inc
pop
fs
or
add
pop
fdivrs
in
adcl
inc
or
dec
cltd
clc
daa
incb
inc
cmpsl
and
outsb
dec
pop
xchg
notb
stos
adc
mov
xor
push
bound
insl
mov
out
enter
out
lahf
fisubs
pop
add
outsb
jle
add
js
adc
sub
out
fwait
lods
popf
inc
lret
addr16
loope
leave
outsl
xchg
xor
fstpl
fidivrl
fsubrl
loopne
iret
inc
js
dec
jecxz
sub
leave
fdivl
jge
mov
sub
popa
cmp
lahf
push
addr16
repz
pop
mov
int
lret
adc
lds
lea
repz
popf
push
sub
sub
mov
sbbb
inc
or
stos
push
dec
daa
mov
cmpsb
shlb
push
mov
adc
and
nop
call
sbb
ja
jns
lods
add
hlt
jecxz
in
or
fcmove
jb
push
xor
loop
pop
push
aas
test
insb
add
mov
add
mov
rcrb
pop
jmp
int3
add
lods
pop
add
clc
test
int
inc
push
das
lahf
pop
fcom
sbb
and
add
popa
stos
push
movsl
pusha
xchg
inc
or
fwait
out
push
ss
int
jmp
stc
jo
jmp
filds
sub
dec
adc
les
mov
cmpsl
or
inc
xchg
jno
daa
pop
int3
add
cmc
or
dec
sahf
aas
dec
das
shlb
xchg
test
push
jb
cmp
dec
in
lahf
xchg
imul
into
in
movsl
lcall
call
call
and
mov
es
hlt
js
std
cmp
push
pop
lods
mov
into
rcrb
pop
or
lret
call
mov
aad
rol
xchg
sbb
in
ja
sub
pop
cmp
or
sub
jnp
insl
sub
pop
and
mov
pop
aaa
sub
insl
lret
lods
fdivp
lock
jmp
out
shl
cltd
inc
mov
or
hlt
add
and
inc
cli
push
pop
xor
loopne
test
enter
pop
dec
fsubrp
push
rolb
adc
or
mov
fnstcw
mov
outsl
in
mov
hlt
sub
pop
shll
add
lods
push
xchg
lods
xchg
rep
pop
mov
lods
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
sub
cmp
jb
sub
push
movzbl
shl
sub
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
sub
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
sub
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
sub
push
inc
push
shl
mov
xchg
call
sub
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
and
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
sub
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
