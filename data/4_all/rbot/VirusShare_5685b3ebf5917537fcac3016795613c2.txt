shll
xor
push
mov
out
sahf
sub
xlat
jp
clc
cmpsl
lahf
mov
lds
cmp
loopne
mov
sub
ror
cld
sub
sub
sub
mov
ja
pop
cmp
test
pushf
int
sub
roll
mov
in
fisubrl
cld
xchg
ffree
cmp
jnp
mov
inc
rorl
aaa
adc
mov
adc
or
add
xor
and
mov
adc
ret
xchg
scas
subl
fsub
adc
mov
in
dec
addr16
push
and
cmp
enter
jecxz
arpl
std
out
push
xor
mov
mov
push
inc
mov
lahf
mov
lahf
mov
add
pusha
ficompl
sahf
lods
int
xor
pop
mov
xor
ds
inc
shrl
sub
pop
leave
push
jmp
mov
pushf
mov
mov
xor
adc
or
add
inc
xor
sub
data16
imul
or
frstor
jnp
je
push
sahf
mov
and
lret
inc
sub
mov
data16
addr16
iret
jmp
inc
mov
lock
ja
push
and
push
mov
mov
jge
iret
into
mov
int
js
ret
jmp
dec
mov
pop
inc
xlat
scas
movsl
sti
pop
mov
and
lods
dec
lret
cld
es
pop
std
pop
mov
mov
popf
enter
xor
les
sbb
pusha
aad
inc
scas
add
in
jno
jnp
stos
clc
jne
mov
icebp
out
roll
call
repnz
lods
xorl
sub
mov
sti
aam
gs
push
pop
jp
mov
or
pop
lock
cwtl
lret
bound
call
loope
out
add
scas
xchg
lret
dec
dec
dec
inc
mov
pop
cmpsl
leave
mov
push
aas
push
cmp
repz
push
mov
inc
pushf
lcall
add
imul
mov
loop
lret
add
lods
mov
pop
fwait
jge
and
xchg
xchg
or
jmp
ret
hlt
movsb
push
fwait
inc
xchg
lcall
lret
xor
sarb
mov
add
mov
sahf
mov
loopne
mov
jge
dec
push
push
add
test
adc
xor
das
adc
jmp
mov
inc
or
jo
or
lahf
mov
lea
sub
mov
mov
test
divb
and
daa
nop
ret
mov
jecxz
or
sbb
cmp
cs
xchg
les
shll
leave
js
sbb
pusha
and
mov
cmp
add
jne
ret
popf
int3
pusha
stc
xchg
movsb
test
xchg
or
inc
inc
lds
mov
push
mov
or
out
idivb
out
lahf
hlt
lcall
inc
mov
add
out
stc
aad
ret
lea
sti
iret
sub
sahf
mov
stc
dec
pop
inc
and
mov
cmp
mov
mov
push
cmc
add
inc
mov
je
pop
fwait
or
mov
inc
nop
xor
inc
pop
add
inc
loope
push
shrl
jne
pop
mov
clc
fisttpll
sti
sbb
jbe
xchg
pop
xlat
mov
adc
inc
sbb
fadds
sub
jo
pushf
repz
stos
inc
fstpl
add
add
push
cmpl
orb
add
pop
mov
lods
sbb
cmp
mov
cmp
pusha
adc
add
adc
aaa
cmpsl
mov
cmpsb
push
lods
call
mov
nop
jl
jo
mov
pop
es
xor
jb
add
or
addr16
jl
sub
or
push
sub
hlt
in
add
sarl
xchg
jg
adc
in
mov
or
mov
and
xchg
adcb
lods
mov
cmp
bound
ret
arpl
aaa
mov
subl
adc
add
imul
in
fbstp
enter
pop
push
and
lret
or
adc
dec
insb
outsb
int3
push
xchg
nop
and
or
mov
push
push
pop
adc
jle
push
and
mov
lret
loop
daa
add
sbb
fmul
xor
jo
lods
call
int
in
push
jmp
mov
xor
inc
fs
and
sub
xchg
pop
pushl
pop
cmpsb
add
aam
jle
popf
cli
inc
dec
lea
mov
mov
mov
sub
mov
cmc
in
pop
mov
mov
pop
sarl
jns
adc
cld
movsb
pop
jbe
lods
mov
dec
out
mov
push
xchg
test
imul
loope
iret
aad
and
jne
xor
add
xchg
mov
int3
xchg
bound
xor
fsubl
aaa
cmp
jnp
dec
fldt
add
pop
lret
pusha
loop
call
mov
in
pop
add
jbe
cmp
popf
or
repnz
addr16
fdivrl
movsb
xor
and
repz
pop
mov
stos
push
icebp
cmpl
pop
enter
xlat
in
retw
outsl
gs
in
mov
stos
inc
adc
mov
es
mov
pop
imul
nop
push
ret
cli
mov
xchg
dec
imul
gs
fwait
cld
inc
lods
bt
stos
push
int
cmc
push
pop
jno
es
mov
dec
cmpsl
cmpsb
jo
push
std
aam
loope
adc
push
cmp
mov
jp
fsubr
mov
xchg
xchg
cmp
xor
dec
ficompl
daa
popa
lods
push
repnz
mov
loopne
mov
mov
arpl
mov
jnp
ja
mov
xor
out
sbb
aaa
mov
cmove
test
dec
iret
inc
xor
mov
sub
test
fistps
inc
in
in
cmp
jo
or
pop
cld
dec
inc
pushf
pusha
stos
rorl
mov
ret
cmpsl
outsb
pop
jno
push
mov
push
aas
incl
cs
icebp
pop
jge
xchg
leave
loope
pop
mov
jne
fwait
es
js
or
pop
pusha
clc
push
fnsave
pop
jo
xchg
mov
push
cmp
jecxz
loopne
decb
hlt
jo
int
cltd
add
enter
fstps
inc
mov
dec
mov
xlat
leave
les
shlb
fbld
xlat
cmpsb
xor
cmp
jecxz
jl
loopne
push
test
cmp
lret
incl
imul
mov
shrl
std
dec
fnstenv
mov
fcomps
shr
aas
rcl
std
adc
pusha
lcall
mov
aad
inc
inc
sti
roll
imul
fisttpll
jo
mov
loopne
xor
mov
jmp
scas
fstps
xchg
adc
fwait
xchg
adc
mov
mov
sbb
sub
fisubs
dec
insl
push
mov
dec
pop
or
mov
mov
stc
xchg
mov
in
dec
pop
jmp
sub
out
and
jb
and
imul
iret
fbstp
xchg
xchg
cs
out
fldenv
dec
add
lret
jmp
lods
xchg
ficomps
xor
or
fidivrl
mov
call
outsl
pop
loopne
push
out
out
loope
stos
in
call
pop
sub
or
subb
repz
or
cmp
enter
ja
jnp
mov
and
pop
cmp
mov
outsl
sbb
sarl
pushf
rolb
in
aam
fldt
and
fldcw
test
sbb
insb
jle
test
dec
mov
sub
aaa
ret
xchg
pop
mov
push
cld
stc
jge
fiadds
or
pop
jne
lahf
bound
fisubrs
shlb
pushf
lret
jo
inc
mov
cmp
jecxz
jl
sbbl
test
in
loope
xchg
cmpsl
push
in
stos
lods
xchg
mov
aam
leave
jmp
sti
or
mov
aad
daa
adc
mov
inc
jbe
insb
shlb
pop
imul
dec
pop
fsubrl
lahf
cmp
insb
test
leave
pop
pop
or
adc
inc
fsts
mov
jbe
lcall
add
mov
lds
les
popa
add
pusha
and
gs
jo
inc
xor
cltd
xchg
inc
jmp
scas
inc
push
ror
cs
sub
pop
xchg
adc
fistps
pop
aam
add
cmp
push
pop
dec
or
sar
push
aas
xor
clc
xchg
shll
and
aam
cli
jne
mov
add
push
clc
lods
mov
fwait
mov
fmul
or
or
cmp
addr16
lods
mov
popa
push
add
xchg
inc
es
and
lcall
dec
and
jmp
mov
mov
or
or
inc
enter
adc
mov
cmp
ret
imul
jae
jmp
data16
dec
aaa
hlt
mov
mov
pushf
fwait
xor
cmp
mov
mov
repnz
pop
cli
cltd
mov
jle
mov
inc
and
sahf
lock
repnz
enter
dec
mov
jae
cmp
pop
enter
mov
inc
cmp
dec
mov
ja
cmpsl
int
dec
popf
cmpb
xor
mov
in
loopne
mov
mov
pop
inc
ret
sar
fsubr
sub
flds
xlat
ds
mov
shl
repnz
in
movsb
fwait
les
and
ret
rclb
push
movsb
movsb
adc
movsl
fimull
scas
pop
cmp
shl
arpl
xchg
lds
or
rcrb
jl
jp
rorb
mov
lea
jno
int3
inc
hlt
mov
mov
push
fistpl
clc
int
leave
nop
jns
in
inc
cmp
mov
int3
scas
sub
mov
mov
xchg
jae
mov
mov
int
dec
leave
push
mov
enter
mov
shrl
dec
adc
or
mov
mov
test
adc
js
xor
xlat
mov
pop
add
dec
addl
jle
fildll
cmp
stc
push
mov
and
xor
cld
cmpsl
sub
adc
scas
imul
dec
xchg
pushf
ret
cmp
sahf
iret
sbb
cmp
mov
push
pop
cld
inc
ljmp
iret
ss
dec
jp
insb
mov
jb
adc
int3
add
movsb
out
xchg
rol
and
cmp
inc
lahf
or
adc
test
fstps
imul
lret
and
inc
in
pop
enter
jge
adc
insb
mov
int
rorb
mov
xchg
adc
mov
sbb
push
sub
lods
fsubs
dec
sbb
gs
mov
xchg
rclb
fwait
bnd
jmp
jns
fsubl
push
adc
mov
lods
shll
outsl
mov
test
and
sbb
arpl
jl
sahf
mov
cld
and
sarb
sbb
fldt
je
je
insb
jo
pop
push
cmp
rolb
aam
insb
mov
lret
xchg
mov
test
mov
scas
pusha
pushf
sti
fcoms
sbb
jle
nop
nop
or
xor
mov
inc
sbb
ljmp
sub
pop
inc
fsubrs
cltd
aam
and
cmp
std
pop
icebp
repnz
push
jge
xor
lret
push
fs
sbb
lds
lods
or
sbb
sahf
inc
mov
push
stos
shrl
pop
es
jmp
push
enter
inc
nop
lods
rcr
dec
dec
inc
fdivs
pop
fadd
mov
fldl2e
scas
rclb
and
and
cmp
cmp
call
shl
mov
bound
mov
aam
bound
lea
stos
xor
ljmp
fdivrp
jl
pop
mov
cltd
and
mov
icebp
stos
les
test
or
adc
in
mulb
pop
icebp
mov
mov
int
xchg
pop
mov
lret
inc
cwtl
or
lds
movsl
int
popa
lret
insb
lds
inc
cmp
xlat
es
ss
repnz
shll
loopne
inc
dec
xor
jge
iret
mov
and
sub
and
shrl
push
cs
test
aad
imul
imul
call
dec
lods
testl
push
enter
nop
mov
sub
mov
sub
mov
inc
test
lret
pop
fdivp
dec
xor
adc
icebp
flds
test
fidivrl
pop
stc
xchg
cltd
xchg
dec
movsl
adc
aas
mov
mov
mov
jg
ds
inc
cmp
pusha
dec
sarl
ret
into
or
push
cwtl
and
sub
movsl
jnp
or
jnp
sbb
sub
rorl
hlt
leave
sahf
repnz
push
idivb
mov
outsb
jecxz
fs
push
ds
or
mov
adc
mov
mov
pushf
insl
pushf
mov
inc
jo
mov
push
inc
add
sub
mov
je
xchg
adc
inc
or
xchg
mov
je
enter
mov
fmull
leave
sub
stos
pop
mov
xor
lods
xlat
dec
xchg
mov
jno
or
inc
sbb
and
sub
mov
movsl
mov
das
mov
mov
xchg
xor
fs
mov
fmuls
cmp
int
sub
mov
nop
mov
dec
pusha
xchg
mov
dec
fldl
pop
pusha
je
or
and
int3
outsb
and
movb
mov
and
ds
adc
aaa
int3
jns
mov
adcb
mov
jge
shlb
aad
aad
adc
leave
addr16
lods
call
push
lods
cmp
sub
dec
inc
lahf
sub
pop
shll
jl
je
and
mov
xchg
add
sub
out
repnz
push
test
mov
jae
mov
xchg
jbe
ret
scas
icebp
cmp
pop
mov
je
sub
ja
add
scas
imul
add
push
scas
daa
pop
in
push
sub
mov
popf
xchg
fucomip
pop
mov
mov
dec
pop
xchg
fisttpll
repnz
repnz
mov
fcompl
xchg
xor
jl
iret
lret
mov
mov
cwtl
outsb
lods
push
imul
mov
pusha
jno
mov
shr
icebp
sub
dec
or
js
data16
cmp
jno
mov
lret
sbbb
fbstp
rclb
outsb
aam
scas
lods
popa
xor
push
push
mov
xchg
ret
push
movsb
mov
lahf
jnp
push
mov
mov
sub
enter
or
mov
lods
shlb
push
out
mov
nop
iret
push
into
enter
inc
out
xchg
mov
cmp
outsb
inc
and
lea
stc
scas
push
div
stos
loop
adc
sub
jp
das
mov
les
loopne
jp
int
dec
aaa
in
pop
inc
ror
mov
pop
les
fsubs
inc
push
mov
mov
cld
dec
scas
push
mov
add
insl
dec
js
les
sbb
ret
push
ficompl
cld
mov
push
pop
push
adc
push
out
mov
rcrl
xor
imul
adc
pushf
mov
aas
mov
cli
jge
imull
clc
mov
dec
lods
pop
cmp
jp
inc
icebp
add
sub
jnp
and
pushf
out
negb
loope
push
loop
inc
in
or
movsl
sbb
mov
icebp
cmp
sahf
adc
dec
add
ret
xor
xor
jnp
inc
mov
cmp
mov
sbb
gs
sti
mov
or
sub
mov
pop
ss
adcl
in
mov
push
leave
swapgs
fisubrl
popa
cwtl
inc
loop
pop
sbb
int
testb
sahf
scas
add
jo
mov
jbe
movsl
lcall
pop
mov
fbld
rolb
xchg
pop
xor
mov
push
dec
mov
jecxz
pop
mov
fimull
inc
fistps
dec
and
fldl
mov
jg
push
push
clc
mov
scas
fldl
inc
mov
xchg
sbb
addb
xchg
pop
push
jecxz
imul
stos
loopne
pop
xchg
jne
dec
mov
pop
in
mov
mov
icebp
lea
fbld
es
jae
xchg
shlb
fisubl
mov
leave
xor
jo
mov
jle
loopne
lahf
aas
out
push
or
sbb
jne
dec
mov
sub
sahf
mov
fildll
subl
dec
mov
lret
icebp
xor
rorl
xchg
cmp
movsl
cld
dec
add
push
or
jns
fwait
leave
sub
aas
mov
sub
shlb
fmul
add
les
mov
insl
cmpsl
das
daa
xchg
push
pop
out
jae
iret
enter
rorb
cmp
cmp
and
inc
and
mov
mov
rcll
aas
inc
sub
mov
fwait
shlb
and
or
or
stc
mov
rcr
cmpsl
adc
or
lea
xchg
dec
imul
push
mov
push
mov
clc
outsl
scas
loopne
out
dec
jl
shr
dec
mov
sbbb
mov
mov
pusha
stc
stos
push
mov
adc
aas
insb
rcrl
and
add
jl
orb
mov
inc
loopne
and
outsb
sbb
ss
mov
pusha
stos
lds
mov
loop
xchg
inc
cmp
inc
fcompl
add
cltd
nop
inc
cmp
ss
mov
fnsetpm(287
lock
lret
jecxz
add
mov
mov
jge
int
push
mov
pop
iret
insb
mov
shll
mov
js
pushf
ja
shrl
lea
jecxz
sbb
movsl
push
push
test
int3
mov
arpl
push
inc
in
sbb
cmp
and
popf
lret
jno
cwtl
out
xchg
add
lods
mov
clc
testb
pop
movsb
or
shr
imul
xlat
dec
lea
add
inc
inc
sbb
pop
ljmp
or
inc
outsl
push
xchg
push
lea
xor
scas
sbb
lds
cmpsb
and
jg
mov
sbb
xchg
sub
mov
pop
mov
sbb
scas
fsubrs
std
mov
adc
jge
push
repz
scas
xor
fwait
mov
adc
xor
or
mov
sbb
dec
dec
int
jno
cmp
test
out
dec
cmc
or
aad
pop
aad
inc
mov
stos
inc
and
pop
and
scas
mov
sbb
add
push
stc
ss
xchg
adc
xchg
repz
lahf
cmpl
add
and
xor
or
hlt
cld
xchg
dec
inc
loop
out
or
mov
out
fsubrl
adc
outsl
inc
mov
dec
sbb
ja
aad
arpl
pusha
into
sub
pop
mov
push
lret
xchg
sbb
iret
dec
and
mov
jle
es
mov
inc
mov
je
aam
sub
movsl
leave
cltd
mov
aam
shl
push
sub
addb
mov
sti
mov
or
inc
push
inc
cmpsb
sbb
cltd
mov
cmc
pop
and
push
ficompl
out
pop
pop
outsb
int3
push
test
push
leave
xchg
fdivrl
insl
add
push
and
xor
test
aam
in
enter
popa
filds
dec
rorb
mov
in
sbb
mov
jbe
mov
cwtl
mov
arpl
xchg
ja
mov
mov
add
insl
push
aaa
inc
cmp
add
stc
dec
lds
imul
mov
or
lea
xchg
int3
lods
jb
xchg
mov
cltd
insl
adc
push
fidivl
xor
lods
stos
fsubrs
sub
rorl
cwtl
outsl
sarl
cmc
leave
notb
ret
pop
aam
inc
mov
loope
mov
popf
test
sub
cmp
xchg
adc
movsl
cltd
mov
ds
les
sub
cwtl
sub
aaa
aam
lods
mov
mov
cmp
mov
sub
in
mov
xchg
cmp
cmc
fistpll
out
neg
pop
sub
cwtl
mov
mov
faddp
ret
ds
sbb
xchg
mull
mov
sbb
mov
push
pop
into
pusha
mov
jae
fistpl
cmp
mov
fs
stos
xor
pop
dec
and
xor
std
jmp
stos
mov
xor
gs
jle
sbb
inc
jle
insl
mov
mov
push
add
add
mov
enter
push
sbb
cmpsl
inc
sbb
push
pop
mov
push
jb
jl
iret
dec
xchg
imul
iret
xor
dec
ret
mov
or
adc
sbb
xchg
sbb
fptan
or
jae
movb
int3
shrl
mov
in
pop
xor
inc
sbb
and
test
addl
push
rorb
mov
cmpsl
shrb
ja
fdiv
cmp
insb
pop
mov
mov
jnp
scas
pop
out
push
mov
inc
and
ficoml
add
rcll
push
fisubrl
xor
lret
mov
add
inc
push
dec
and
mov
mov
lock
or
enter
shr
fistpll
stos
jo
xor
nop
and
inc
pop
repz
shlb
in
imul
and
push
push
sbb
popa
push
call
loopne
mov
mov
pushf
cmc
ficoms
add
cld
push
cli
sti
cmpsl
cmpsb
xor
jl
aad
add
xor
shlb
push
mov
sbb
mov
outsl
lds
mov
add
lret
lret
push
loop
loope
cmp
jl
cwtl
test
int
ljmp
cltd
add
enter
sub
sbb
fdivl
lea
test
loop
loopne
adc
ds
stc
cmp
pop
sti
popa
imul
xor
mov
add
lods
mov
mov
iret
in
lds
or
sahf
sahf
and
mov
in
movsl
push
fcmovne
pop
inc
mov
imul
lahf
sbb
xor
cmc
jecxz
mov
mov
and
xchg
jmp
clc
jmp
sub
ss
pop
lds
imul
stc
ret
movsb
jae
pop
out
leave
jb
push
add
movsl
inc
nop
pop
dec
leave
jecxz
lahf
cmc
call
inc
fimuls
sti
mov
jmp
adcl
incb
adc
mov
fnsave
movsl
pusha
icebp
incb
mov
xchg
adc
ret
cltd
mov
jns
sbb
sub
insl
shl
int3
jmp
mov
sahf
mov
pop
and
test
test
add
cmp
je
lds
xor
xchg
iret
das
inc
rolb
push
jmp
or
popa
lds
cmp
jge
add
jmp
cli
xor
inc
xor
mov
push
mov
jle
and
test
inc
xor
test
aam
icebp
daa
adc
mov
push
push
shll
pop
out
popa
pop
sub
rorb
or
fistps
inc
xlat
mov
lret
push
cli
sbbl
cmp
xchg
push
or
dec
popa
in
jae
cld
push
cmp
js
fldcw
cmp
pusha
cmp
out
adc
mov
mov
jl
mov
movsb
push
movsb
imul
push
arpl
mov
into
fwait
add
pop
aam
in
mov
sahf
imul
fmul
popf
mov
push
in
mov
push
adc
std
shll
inc
mov
jb
mov
cltd
push
subb
rcrb
fsubrl
mov
inc
push
or
jecxz
mov
pop
jb
mov
pop
out
je
mov
bound
sahf
mov
aad
jge
test
lods
cmp
or
cld
jb
sub
clc
sti
clc
sbb
ret
jmp
test
les
enter
xchg
push
push
dec
imul
sub
mov
mov
int
sub
loop
cmp
stc
xorb
push
mov
std
mov
mov
insb
inc
xchg
cmp
or
mov
mov
dec
aam
pushf
cmp
shl
dec
je
sbbb
mov
stos
inc
fdivr
push
add
lcall
dec
lods
fwait
mov
push
xor
push
pop
dec
icebp
lret
adc
adc
mov
sbb
jmp
lahf
in
pop
popa
xor
cmp
jae
xchg
int3
fstpt
in
xor
jmp
xchg
out
xorl
or
dec
sub
jg
jl
or
xchg
xor
pop
jl
adc
je
movsb
jno
daa
xchg
inc
mov
mov
and
cmovo
jns
sub
or
ret
je
arpl
stc
das
adc
mov
or
stos
xchg
pop
loopne
fs
or
mov
enter
loope
xor
ds
cltd
dec
add
and
adc
je
add
mov
cmp
xlat
jp
and
les
jo
pop
add
or
in
aam
stos
fs
cld
xchg
enter
adcl
enter
pushf
mov
mov
adc
cld
cmp
sti
rolb
loopne
or
fidivrl
sub
fistl
jmp
mov
mov
fstpt
leave
sub
or
mov
iret
mov
fdivr
inc
pop
dec
mov
ljmp
test
hlt
out
jle
mov
sub
inc
int3
adc
loope
pop
push
ret
sar
nop
mov
jg
push
stos
mov
mov
mov
in
mov
sarb
clc
movsb
sub
dec
sti
loopne
ds
fidivrs
pop
sbb
and
lods
lret
loope
cmp
jb
inc
adc
or
jecxz
or
aam
jp
jg
stos
mov
js
lods
imul
add
enter
in
and
inc
fsubs
call
xchg
xor
imulb
repz
and
cmpsb
xchg
mov
rorb
mov
add
mov
notb
in
pop
dec
inc
inc
fbld
insl
pop
repnz
sub
imul
ss
mov
leave
imul
neg
in
dec
dec
fdiv
stos
push
in
lods
inc
fisubl
jne
daa
mov
neg
shrd
sbb
pop
jle
mov
rcll
jno
je
inc
dec
punpckhwd
lahf
jl
and
enter
imul
mov
jg
or
std
fisttps
push
dec
pop
lds
insb
adc
pusha
jo
and
pop
in
and
mov
sbb
push
pushf
addr16
outsl
aad
sbb
dec
ret
in
adc
inc
outsl
sahf
enter
call
xchg
or
mov
xchg
scas
xchg
push
cmp
xchg
loope
popf
outsl
mov
adc
movswl
mov
test
dec
int
or
call
inc
mov
imull
jge
pusha
iret
sbb
dec
jl
lock
mov
test
and
inc
das
xchg
imul
sub
pop
jne
clc
jp
and
cld
outsl
enter
cmp
bound
jne
inc
ficoms
cld
mov
ret
push
out
pop
lret
dec
test
pop
push
enter
or
mov
push
xor
mov
lods
imul
adc
pusha
mov
and
dec
sub
iret
fucom
jnp
jl
mov
sub
movsl
xchg
sti
sti
mov
push
rorb
pusha
in
sub
lcall
das
js
and
imul
xchg
mov
sar
adcl
adc
sbbl
fisubs
fwait
aam
and
pushf
imul
pop
fld
ret
gs
pusha
pop
inc
lods
push
sarb
sub
push
loope
test
orl
mov
mov
xchg
jae
hlt
shll
jge
pop
xchg
sub
inc
push
sbb
add
leave
jecxz
imul
cmp
test
sahf
or
mov
push
arpl
aam
xchg
sub
gs
test
dec
icebp
cltd
and
fadds
jecxz
dec
fstp
dec
mov
mov
aam
imul
nop
repz
imul
out
in
jae
dec
outsl
lds
push
or
popa
push
ficompl
test
call
fcompl
adc
shlb
mov
adc
mov
add
pop
cmp
repnz
insl
sub
jge
sahf
mov
aam
mov
fnstcw
loopne
and
into
fldz
popa
cmp
add
sub
push
jno
insb
xadd
sbb
insl
in
push
in
and
rcrb
jbe
mov
jnp
xchg
cmp
dec
dec
adc
inc
stos
or
sub
mov
mov
and
inc
mov
inc
push
sub
cmovb
cmpsl
fwait
jg
in
jns
call
xchg
mov
aas
sub
xor
nop
or
nop
jle
pop
sub
xchg
pop
scas
enter
fstp
pop
dec
dec
xchg
dec
sbb
cmp
pop
das
mov
fdivs
dec
jge
jb
pushf
push
ror
adc
loopne
test
lods
jnp
shlb
and
mov
test
inc
stc
pop
arpl
lcall
mov
mov
ret
pop
cmp
daa
sub
jae
aaa
ret
imul
lret
mov
aam
pop
push
cli
adc
adc
repnz
lret
leave
mov
xor
out
fdivrs
cmp
cld
lret
sbb
xchg
movsb
ror
filds
inc
xchg
popa
shl
adc
mov
and
and
xor
aam
adc
xchg
inc
xlat
adcl
dec
sub
mov
lahf
leave
adc
sbb
xlat
repnz
inc
mov
xorb
pop
xchg
outsb
insl
popa
out
jns
sub
push
pop
or
adc
je
pop
cmp
inc
and
xlat
ljmp
dec
sar
popf
mov
lcall
mov
ja
fwait
jnp
mov
inc
xchg
sub
push
jno
pushf
and
adc
faddp
sub
xorb
gs
or
pushf
xor
es
mov
in
lahf
and
jge
testb
mov
imul
push
mov
shrl
or
fdivl
push
push
mov
sub
mov
ds
sub
xchg
pop
jne
leave
and
xor
mov
adc
cwtl
dec
pop
ljmp
jg
sbb
lods
xchg
xchg
jmp
jmp
push
inc
loop
out
inc
adc
or
mov
dec
dec
scas
pop
jnp
loope
inc
jge
ja
loopne
xchg
dec
pop
xchg
xor
movsb
test
lahf
pop
pop
in
push
xchg
dec
out
mov
outsb
sbb
outsl
add
insl
rclb
xor
out
mov
popa
jmp
jl
idivl
jl
and
dec
jmp
into
mov
sbb
or
adc
lods
mov
mov
aas
or
cld
pop
ss
cmp
gs
aam
xorl
mov
lahf
into
or
mov
dec
or
jnp
pop
sub
xor
cmc
in
hlt
push
push
lds
fwait
inc
push
mov
xchg
inc
mov
out
mov
bound
dec
jle
fsubrl
push
repz
inc
adc
push
fsubl
pusha
repnz
pop
sbb
sub
xchg
ret
xor
cmp
icebp
cmp
mov
fs
or
in
mov
sbb
sub
jecxz
cmp
pop
lods
or
cmp
adc
pop
sub
jns
out
pop
push
inc
fidivrs
ds
dec
push
call
out
loop
pop
pop
in
sub
add
scas
sub
loopne
test
or
flds
add
sahf
into
mov
adc
inc
mov
adc
je
out
fwait
cmp
mov
rol
popa
pushf
sbb
mov
push
cmpb
stc
int3
or
mov
mov
outsl
imul
xor
lcall
jno
movsl
imul
push
inc
sbb
push
xchg
dec
jmp
inc
pop
jecxz
mov
arpl
and
mov
cli
add
fs
popf
inc
mov
mov
aas
sub
push
and
inc
push
inc
out
aad
ficompl
xor
or
mov
nop
or
and
xor
push
push
mov
mov
jne
int
mov
or
cltd
clc
xor
pop
in
or
fmull
dec
cmp
aam
fcoml
add
scas
mov
ds
pushf
jbe
mov
inc
or
adc
cltd
movsl
flds
sub
incl
xchg
frstor
clc
test
push
mov
stc
jge
sbb
out
dec
sbb
dec
js
es
mov
leave
xchg
ljmp
xor
mov
arpl
test
jno
adc
push
and
icebp
cld
mov
xor
adc
or
dec
pop
add
adc
lret
pop
test
popf
and
insb
je
enter
sbb
rorb
scas
push
mov
test
push
push
out
ret
leave
push
sbb
push
inc
sbb
mov
xchg
lods
call
repz
pop
xchg
rcrl
lret
pop
dec
shlb
mov
in
mov
aam
add
or
daa
mov
push
inc
cmc
popf
aad
or
cmpsb
pop
ret
movzbl
addps
sbb
mov
int
ljmp
scas
dec
aaa
pop
jle
sar
mov
fisubl
pop
and
mov
dec
xlat
cli
xchg
aas
pop
cwtl
cltd
cli
fstps
mov
ss
mov
pop
and
dec
jnp
rclb
jg
xor
inc
sub
dec
jo
dec
test
pop
pusha
loopne
push
icebp
rclb
leave
in
add
movsb
fadds
outsl
aaa
out
and
test
adc
fmulp
and
lahf
xor
stos
mov
jle
inc
mov
xchg
test
nop
js
adc
add
test
dec
pop
pop
sbb
and
lcall
or
pop
adc
inc
inc
cmpsb
in
enter
dec
and
test
das
and
iret
hlt
lret
xor
cmovg
stos
cltd
imul
mov
rclb
stos
outsl
sub
test
lret
test
mov
xchg
not
cmp
push
xchg
sub
fistps
stos
ds
arpl
push
orl
mov
push
enter
xchg
js
repz
enter
sti
fsts
popf
lock
and
test
in
int3
dec
movl
inc
sbb
xor
dec
rdpmc
mov
or
ret
push
or
xchg
enter
jno
cmpsl
out
aad
xor
xor
mov
pop
sbb
int
add
and
xor
jno
mov
pop
mov
int
clc
add
pop
cmp
push
inc
pop
inc
pop
push
or
mov
movsl
leave
xchg
cli
dec
inc
xchg
fcmovnb
push
or
lcall
push
and
xchg
mov
lcall
add
daa
subl
les
dec
dec
dec
push
mov
mov
pop
mov
rcr
loopne
adc
adc
cmpsl
pusha
gs
pop
adc
mov
push
enter
nop
adc
shlb
xchg
out
icebp
imul
addl
lret
mov
dec
mov
stc
pop
push
outsl
lret
dec
and
test
xor
imul
test
dec
mov
clc
inc
movsl
lods
sub
popa
enter
inc
adc
cld
pop
add
outsl
jp
test
fwait
jp
jno
shr
add
add
mov
cmpsl
inc
sti
negl
add
call
sub
divl
jbe
inc
adc
xor
jnp
in
das
lock
lret
adc
outsl
add
in
push
mov
mov
adc
stos
pop
jbe
mov
mov
pop
lods
jg
or
mov
enter
push
jmp
sbb
adc
mov
mov
test
mov
out
sbb
iret
cmpsl
in
in
rclb
stos
inc
xlat
jo
cmp
pop
pop
mov
into
dec
rolb
jno
aad
xor
push
inc
test
scas
sbb
lret
sahf
pop
lret
xlat
cmp
mov
daa
push
in
lret
cli
js
sub
andl
in
mov
dec
dec
imul
rcll
out
mov
loopne
les
mov
sub
pop
mov
out
xchg
inc
mov
stos
mov
sub
ss
pop
out
ljmp
lcall
cltd
push
shlb
lret
shll
pop
js
das
out
mov
xor
dec
imul
daa
sarl
add
sub
lret
jne
xor
xor
in
push
xchg
cmp
jo
dec
sahf
mov
inc
push
xchg
out
aaa
mov
cmp
mov
xchg
add
js
jne
loopne
fsubr
push
mov
pushf
xchg
xor
jmp
lods
pop
test
dec
dec
stc
xchg
cmc
popa
pop
shr
pop
shll
pop
mov
fcomp
imul
push
push
sbb
push
sti
sbb
push
repnz
push
jmp
dec
mov
cmp
mov
pushf
inc
jecxz
int3
test
push
pop
int3
mov
es
cmp
test
pusha
sbb
dec
jp
inc
data16
fisttpl
xchg
inc
fnstsw
or
insl
jecxz
mov
jp
mov
push
insl
mov
clc
test
mov
xchg
pop
repnz
imul
movsb
fnstsw
movsb
jmp
add
scas
loope
push
clc
pop
addb
cltd
mov
and
inc
xchg
or
inc
fs
ret
cmp
mov
mov
or
sbb
fistpl
cmp
push
je
mov
dec
inc
out
rcll
add
xchg
jne
enter
out
out
mov
cmp
pop
mov
jno
fnstsw
imul
sub
push
cmpb
loopne
push
jae
fs
int
mov
sbb
lods
adc
or
jb
out
ljmp
mov
or
dec
mov
cmpsb
sub
cmpsb
xor
imul
jg
sbb
adc
mov
jb
pop
pop
add
stos
pmuludq
in
mov
sbb
dec
insb
and
shr
jg
mov
jge
and
jo
mov
ja
ficoml
sbb
and
vmovddup
inc
xor
cmp
mov
call
ss
lock
roll
adc
ja
out
adc
test
and
fdiv
mov
in
push
movsb
inc
pop
enter
add
xchg
repz
mov
pop
test
into
sbb
sbb
sub
fwait
adc
movsl
insb
pop
repz
dec
in
cmp
shrb
push
xor
add
rcll
jg
test
dec
jns
arpl
leave
adc
sub
cmp
sub
jl
mov
cwtl
cmp
sbb
int
bound
push
and
pop
dec
insb
into
inc
mov
cmp
pop
dec
xchg
xchg
fisttps
leave
fwait
or
pop
fisubl
les
push
push
xchg
jo
dec
cmp
loopne
mov
lods
lret
mov
push
loope
sbb
popa
adc
cmc
sbb
adc
pop
fisttpll
je
shrb
and
mov
sbb
popa
mov
mov
popf
mov
cwtl
stos
push
int
mov
jne
icebp
sbb
cmp
jp
dec
rclb
clc
mov
mov
rorl
arpl
stos
add
int3
inc
cld
outsl
push
jle,pt
sub
shlb
mov
pop
jg
mov
rorl
in
imul
inc
enter
das
in
adc
iret
into
cmpl
sub
xchg
enter
dec
mov
aas
sub
mov
dec
rcrb
xchg
pop
pop
or
dec
add
and
jl
out
mov
int
imul
shrl
fmul
sub
add
fdivrs
inc
fdivrp
add
cmp
mov
sub
sysenter
ss
inc
pushf
mov
lods
repnz
sbb
jns
mov
push
cli
sbb
insb
into
dec
stc
mov
adc
xor
mov
jns
out
ret
in
lret
mov
shll
push
dec
pop
mov
jl
pop
mov
clc
std
adcb
push
mov
pop
pop
loopne
cmpsb
inc
mov
mov
lret
cmp
adc
inc
jg
mov
cmpsb
xchg
sbb
loope
mov
jmp
mov
jp
mov
adc
and
mov
pop
test
dec
add
or
mov
popf
sub
mov
add
xor
dec
movl
push
push
cmpsl
pop
xor
mov
rorl
jo
jge
mov
sub
fstl
stos
fmul
pop
xor
pop
add
jle
sub
rolb
push
lret
xorl
aaa
pop
cli
les
jb
inc
outsl
lahf
outsl
roll
test
jno
xchg
repnz
sbb
addr16
cmp
lods
dec
sub
pop
push
jg
jmp
inc
mov
xlat
int3
test
cltd
outsb
add
ja
movl
cli
enter
outsl
inc
inc
aaa
pop
popa
ja
mov
outsl
leave
popa
dec
shrl
cltd
inc
xor
pusha
inc
push
clc
test
fwait
icebp
mov
adc
into
fiadds
and
aad
adc
lret
mov
sub
in
fldcw
jmp
jge
in
mov
data16
orb
pop
out
sub
mov
inc
roll
push
mov
sahf
xor
mov
stos
dec
mov
sarl
test
sarl
insl
lods
mov
push
mov
dec
js
into
mov
pop
jae
jne
fldl
gs
push
loope
sub
rolb
leave
sub
push
out
adc
hlt
and
xchg
jnp
dec
inc
les
sub
loope
or
sbb
ret
mov
mov
jb
push
adc
ret
push
xchg
cld
sbb
dec
jle
cld
inc
mov
push
shl
mov
into
loope
loope
mov
or
cmp
or
andl
dec
mov
aas
outsl
filds
or
and
adc
mov
and
pusha
xor
push
aas
sbb
icebp
imul
pop
pop
dec
shlb
imul
pop
insb
cltd
clc
pop
jne
cmpsb
sbb
push
add
push
mov
inc
or
dec
out
inc
sahf
inc
out
adc
test
mov
fadd
sti
scas
mov
sbb
xchg
sahf
adc
and
cmp
imulb
pop
push
test
push
in
cltd
xor
adc
pop
clc
dec
jo
and
test
popa
inc
or
and
jns
js
std
push
out
test
pushf
add
lods
pop
mov
cli
push
sbb
pop
pushf
mov
cmp
sahf
cld
cmp
popa
add
or
mov
adc
sbb
movsb
push
dec
cmpsb
cmc
cmp
loope
les
add
jne
xor
ja
stos
int3
jle
rorl
int
inc
fmul
ljmp
and
mov
outsl
inc
mov
cmp
mov
jge
jg
mov
aas
loopne
xor
jg
adc
and
imul
cwtl
in
push
push
pop
aas
fldenv
jp
test
hlt
push
or
push
arpl
pop
jl
loope
mov
or
xchg
pop
and
cmp
xchg
aam
mov
xchg
push
xor
mov
lcall
xchg
push
mov
imulb
ret
inc
xchg
adc
dec
ficoms
push
sti
lea
call
pushf
fs
in
mov
sbbl
lret
inc
ffreep
lea
ja
fidivrs
fdivrl
xor
pop
int3
add
mov
dec
das
fstps
xor
iret
enter
jns
popf
test
int3
xor
test
ss
add
jp
shr
shlb
sahf
cld
push
shlb
sbbb
jge
inc
in
ljmp
cltd
lods
adc
mov
iret
jge
mov
fcomps
fistpll
xor
xor
push
dec
into
jbe
jge
add
lods
loop
sbb
xchg
and
pop
lds
shlb
mov
and
mov
test
push
enter
jmp
mov
mov
cmp
dec
fstpt
push
int3
push
pop
mov
or
jp
out
pop
test
sbb
out
repnz
cmpb
loope
addr16
jle
jb
shll
out
jle
jae
mov
cwtl
pop
cmp
lods
push
cmp
lods
pop
aas
mov
mov
je
das
icebp
sahf
bound
jge
jbe
sub
jne
sahf
outsb
arpl
mov
lahf
mov
push
inc
or
jae
loop
push
cmp
es
and
addr16
movl
cmpsl
xor
push
lods
inc
call
inc
inc
mov
jge
sbb
test
test
pop
loop
iret
cmp
icebp
fs
mov
call
and
pusha
and
sub
jno
mov
std
std
pop
test
adc
sbb
xor
cmpsb
cmc
scas
pop
dec
je
not
stc
mov
movsb
cwtl
int3
pop
and
pop
cmp
jl
adc
xchg
es
jnp
decb
xor
jg
dec
rcrl
inc
arpl
fs
movsb
mov
mov
movsb
in
jg
push
int3
mov
sub
ficompl
divl
movsb
sbb
or
outsb
sub
adc
pop
jns
xchg
sbb
and
add
and
mov
cmp
jge
inc
jle
xchg
sbb
mov
nop
frstor
in
mov
fisubl
sbb
enter
push
and
loope
and
sub
faddl
cmpsl
or
inc
bound
adc
cld
imul
orb
rcrb
xor
cmp
bnd
cwtl
sbb
dec
adc
outsl
sub
inc
or
cmpsb
ret
push
fcoms
repnz
das
mov
cmp
in
sti
adc
mov
jns
sahf
jecxz
add
pop
sbb
cs
dec
cmp
stos
jnp
and
sbb
add
pusha
dec
cmp
adc
push
dec
xor
daa
es
push
mov
ds
xor
lock
jle
inc
or
sbb
xchg
cmc
xchg
add
jo
xor
push
sbb
into
dec
and
mov
and
out
sub
aaa
sub
mov
xor
shll
xchg
and
adc
loope
jb
test
rcr
clc
shrb
into
fildl
movl
je
fidivrs
sar
lds
iret
xchg
out
call
pushf
jmp
mov
mov
sub
and
add
cmp
pushf
jg
or
push
out
mov
cmp
mov
add
jp
inc
adc
sub
push
cltd
and
pop
notl
in
pop
jb
lock
or
js
cli
push
dec
addb
xlat
xchg
rcr
mov
mov
stos
int3
push
mov
repz
mov
dec
test
lcall
and
mov
into
addl
mov
adc
iret
std
cltd
out
bound
bound
add
pop
and
xor
pop
jne
inc
daa
mov
mov
mov
mov
pop
or
add
cmp
les
test
nop
out
sbb
out
mov
jno
lcall
into
scas
and
divb
pop
xchg
pusha
cmpsl
lahf
jmp
dec
or
jb
subl
mov
xchg
mov
enter
and
cmp
mov
xor
fildl
xor
xor
and
inc
jbe
add
roll
nop
popa
sub
imul
pop
ret
xchg
imul
lds
add
mov
adcb
pop
jo
ficoms
jmp
daa
mov
jbe
cltd
jecxz
pop
xor
pop
jne
jbe
push
cmp
int3
jecxz
jle
mov
repz
add
jle
sub
xor
loope
pop
mov
dec
cmp
and
out
test
ror
ds
sbbl
sub
push
push
cs
xor
push
jns
in
adc
inc
bound
ss
push
jbe
int
movsb
nop
mov
in
mov
adc
mov
push
inc
dec
mov
and
fldt
dec
lock
mov
mov
push
jp
mov
std
bound
xor
jp
psubsw
call
fnstsw
cmp
lea
pop
das
mov
aad
dec
pop
xor
ja
jbe
sarl
mov
mov
dec
pop
stos
test
loopne
push
mov
mov
inc
inc
dec
in
out
fsts
xchg
roll
xor
push
add
push
inc
sarb
insb
out
push
mov
jl
outsl
or
xlat
ret
inc
jmp
mov
iret
xor
mov
dec
ret
pop
cli
sbb
decb
cmpl
sahf
enter
cmovbe
push
xlat
test
inc
and
xor
jo
cli
test
xor
cmc
les
loopne
pusha
repnz
addr16
loop
lret
fdivr
push
inc
cld
rcll
rolb
pop
js
pushf
pop
jo
in
addr16
dec
movsb
pop
dec
add
test
adc
je
push
push
push
push
adc
mov
xchg
in
dec
mov
and
insb
adc
xchg
aam
test
inc
imul
fnstsw
push
mulb
or
fcom
cld
fildll
mov
or
sub
out
mov
jbe
xchg
cmp
fs
lock
inc
in
insb
ret
mov
inc
repz
ficomps
add
mov
shlb
mov
inc
adc
ljmp
pop
cmp
sbb
xchg
mov
and
inc
loopne
rcr
inc
fmul
es
nop
stos
cmp
mov
mov
pusha
jo
xor
aaa
sbb
jae
packssdw
jg
jae
sbb
cmp
inc
stc
jnp
and
in
into
mov
scas
ds
arpl
ret
push
cmp
inc
call
jbe
fstl
xchg
pop
cmp
cmp
arpl
jp
fstpt
jle
xchg
mov
pop
or
add
shlb
int3
inc
lea
xchg
iret
insb
jmp
mov
pop
popf
dec
push
inc
stos
ss
ja
dec
mov
adc
sbb
and
push
ds
sbb
xor
cmpsb
mov
push
pop
and
cltd
xor
sbb
lods
loop
cmpsl
mov
arpl
xchg
xchg
insl
pop
sbb
pushf
push
jmp
lret
mov
aaa
xchg
int
dec
repnz
imul
xor
pushf
imul
lock
pop
cmpl
push
inc
pop
dec
les
adc
xchg
out
add
aas
pusha
cmp
pop
pop
adc
jns
aaa
decl
shlb
aas
cmp
pop
mov
cmp
mov
stos
pop
sub
repnz
rcrl
subl
rcl
hlt
jl
mov
sahf
inc
stos
adc
mov
adc
inc
or
xchg
cmp
and
test
in
inc
inc
mov
ficoml
fisttpll
psrlw
inc
pop
mov
pushf
out
sbb
shlb
add
jae
dec
mov
test
inc
shll
add
mov
ret
shr
pop
mov
out
push
shll
jo
jmp
and
lods
clc
into
movsb
clc
mov
pop
dec
loop
mov
int3
or
xchg
pop
arpl
add
jne
or
mov
dec
lret
loope
ficompl
lret
xchg
daa
xor
dec
sbb
outsl
dec
repnz
aas
mov
fidivrs
dec
mov
aaa
sub
insb
cmp
cmp
jbe
iret
nop
adc
mov
xlat
mov
mov
enter
ds
and
jnp
mov
push
or
mov
dec
pop
mov
push
lret
repz
push
pop
arpl
ret
or
mov
xchg
jne
xchg
in
pop
pop
or
jmp
in
sti
xchg
pop
jl
fldcw
xchg
push
pushf
vmovsd
adc
xchg
mov
sbb
or
xor
push
mov
mov
dec
or
pop
rcrl
inc
sbb
xor
gs
in
outsb
push
in
lock
popf
adc
xor
jmp
dec
sahf
loopne
push
movsl
scas
xchg
das
dec
lcall
iret
test
lea
xlat
jecxz
into
rclb
mov
jo
pop
in
sub
dec
mov
mov
in
leave
push
and
inc
lcall
push
lods
mov
inc
pop
int
jbe
sbb
and
xchg
sahf
sub
stc
in
rorl
repnz
fisttps
and
adc
movsl
popf
adc
and
mov
jg
mov
out
cmp
iret
cltd
repnz
mov
adc
jg
pop
mov
sbb
mov
aad
jae
add
jmp
mov
sbb
mov
mov
movsl
jne
adc
pop
pusha
dec
mov
test
mov
imul
je
dec
xor
lret
lea
sbb
js
test
rcr
adc
pop
daa
and
bnd
lods
sysret
xor
flds
mov
push
push
jb
mov
adc
inc
cmpl
sbb
sbb
pusha
pop
or
lea
mov
ja
sub
arpl
sub
mov
out
das
cmpb
movsl
add
outsb
adc
lahf
test
repz
test
xchg
adc
scas
call
mov
inc
dec
bound
arpl
push
fwait
lods
mov
jge
and
pop
sti
mov
adc
arpl
mov
out
gs
mov
dec
and
lea
cmp
daa
je
mov
stc
ja
add
pop
arpl
sub
dec
out
fs
pop
and
cmp
clc
jecxz
cltd
fimull
cltd
push
xor
fs
mov
aas
xchg
inc
push
push
pop
pop
insb
fnstsw
cli
inc
movsb
dec
pop
xchg
rcrl
cmp
jp
mov
jnp
insb
mov
int3
add
imul
add
adc
pop
lock
xchg
mov
loop
xchg
je
add
jle
orb
dec
roll
mov
add
popa
xchg
sti
push
inc
add
jae
hlt
push
sti
cmp
in
shrl
and
rol
icebp
bound
rolb
mov
adc
inc
dec
std
loop
push
fldl
cwtl
dec
nop
push
movsb
stos
shr
mov
sahf
lret
test
adc
or
and
inc
ret
mov
inc
push
mov
xchg
or
ds
fidivl
jmp
lock
ja
xlat
sub
push
repz
sbb
hlt
popa
xor
mov
push
pop
fnstcw
cmpsl
shr
dec
sub
dec
push
in
out
and
aad
push
jecxz
mov
dec
je
stc
jne
sbb
mov
mov
push
pusha
cmpsb
mov
xchg
fs
sbb
mov
aas
xorb
pop
int3
mov
cltd
push
int
fsubrs
or
mov
push
xor
addr16
push
mov
aam
xchg
dec
popa
inc
sub
xor
cmp
fs
lods
fisubs
addl
nop
push
lods
xor
push
sarl
nop
push
fsubl
pop
pop
fs
mov
outsl
dec
mov
mov
inc
xchg
outsl
push
iret
and
mov
repnz
xor
ret
dec
add
cs
mov
aam
lods
rcr
add
xchg
add
stos
ret
adc
inc
jnp
sti
sarb
inc
sarb
lea
mov
or
jno
popf
or
addr16
sub
mov
adc
jns
psraw
gs
sub
test
jmp
shr
pop
and
fwait
xchg
dec
int3
add
inc
loope
int
pop
shrb
fisubs
jl
mov
lahf
or
dec
aam
dec
pop
adc
add
and
arpl
mov
mov
fcomip
dec
pop
mov
aas
pop
popf
jnp
mov
pop
cmp
mov
clc
fs
or
jnp
cmp
cmp
scas
popa
mov
out
cmp
rcrl
sub
mov
cmp
inc
or
shlb
outsl
xchg
pop
mov
loopne
dec
popa
dec
jle
repnz
push
cmp
out
push
xor
dec
adc
aaa
lret
push
scas
inc
sti
subl
fcmovnu
dec
rcr
mov
les
popa
and
popa
pop
and
jno
ss
pusha
dec
pop
cwtl
aam
imull
fmul
dec
xchg
test
fisubrl
jns
or
int
pop
rcl
inc
pusha
sbb
dec
mov
int
dec
les
out
aam
sub
adc
lods
xlat
sub
mov
lds
push
xchg
push
stc
sub
dec
lret
sub
rorl
popa
cmpsl
adc
ret
jb
insb
movsl
js
adc
in
rcrb
dec
xor
lcall
xor
xor
loop
pop
test
fistpl
sbb
repnz
add
cmp
daa
jp
popa
fdiv
inc
testl
leave
nop
sbb
and
pusha
fnstenv
insb
inc
jb
mov
flds
push
dec
mov
mov
gs
add
xchg
pop
iret
dec
es
or
and
or
movsl
sub
pop
mov
xor
add
jecxz
mov
and
fadds
xor
pop
loope
cltd
or
or
push
lods
xlat
mov
cmpsl
sbb
ds
adc
sub
xor
xor
push
lods
outsl
test
jg
xchg
std
repz
into
aaa
mov
and
hlt
adc
out
xchg
fsubs
xchg
out
push
fldenv
cmpsb
rcrb
xchg
out
aas
in
pop
sub
xchg
mov
push
mov
or
sbb
cs
cmpsl
pop
addr16
sahf
push
add
aaa
leave
xor
pop
push
sub
inc
pop
xchg
sbb
sbb
push
inc
jge
push
push
idivb
stos
pop
xchg
xor
mull
cmp
in
push
cmp
jl
outsb
add
adc
fwait
cmp
pop
test
mov
aaa
idivb
mov
xor
iret
aad
jne
movsl
jo
aad
cmc
mov
xchg
sahf
sbb
rcll
cmp
fsubs
rorb
cld
mov
rorb
outsl
inc
mov
inc
add
inc
les
stc
mov
pusha
mov
mov
push
dec
insl
es
mov
pushw
or
xor
pushf
sarl
push
pop
jne
xchg
mov
add
fs
inc
pop
cmpsl
add
mov
pop
jecxz
or
stos
rcrb
leave
leave
fisttps
mov
ja
outsb
and
mov
iret
lret
lret
mov
adc
into
and
lret
lea
xchg
test
mov
cmovle
out
mov
incl
popa
fldenv
loope
movsl
movsl
xchg
jp
lods
shrb
or
imul
sbbl
xchg
push
jne
hlt
jo
cmpsl
enter
pop
mov
push
jne
xorl
mov
cmc
mov
mov
jge
push
mov
jne
insb
into
sub
scas
pop
push
icebp
ss
inc
outsl
and
insl
sbb
push
cs
inc
stc
lock
scas
into
pop
and
jecxz
jne
cld
pop
lcall
mov
das
mov
pop
test
dec
cltd
adc
stc
bnd
pop
hlt
mov
lahf
adc
enter
adc
pop
js
or
jmp
fstpl
xchg
stos
push
fisubs
ja
enter
and
subl
jmp
push
stos
sub
imul
cmpsl
and
nop
cs
mov
mov
jo
adcl
push
dec
sub
shl
jg
jmp
mov
dec
ror
push
inc
rcll
ja
jae
shrb
jp
pop
mov
mov
rcrl
mov
daa
or
bnd
js
inc
je
jns
ret
jno
pop
mov
push
xor
and
stos
dec
inc
sub
shl
jmp
and
insb
jne
ret
movsl
mov
mov
sub
jo
fucomi
test
lahf
enter
les
int3
pushf
pop
pop
pand
bound
cld
mov
push
lret
cmp
in
inc
pop
in
lods
push
int3
fidivl
sub
cld
hlt
insb
andl
rcrb
ss
std
xchg
cltd
jo
push
inc
xor
xor
into
push
sbb
push
nop
push
push
scas
andb
pop
out
or
inc
add
shrl
xchg
dec
jb
nop
rolb
sbb
cmp
inc
pop
xchg
fnstcw
lahf
ret
xor
and
pushf
jmp
loopne
xor
jb
push
shll
cltd
adc
and
sub
clc
cld
mov
hlt
repz
or
fimull
push
lods
push
sbb
add
pop
pop
iret
adc
testl
lret
sub
adc
inc
dec
sub
mov
inc
icebp
iret
idiv
dec
out
popf
jo
sub
jecxz
push
mov
mov
insl
outsb
lret
stos
lods
inc
sti
add
sbb
fs
mov
ret
les
mov
dec
mov
out
dec
jo
ljmp
pop
dec
sbb
mov
pop
cmp
call
lcall
mov
push
and
mov
lock
inc
lods
aaa
add
lea
int
shll
push
cmpsb
pop
scas
adc
inc
cmp
lods
lret
pop
ret
push
xchg
addr16
sbb
insb
mov
cmp
fs
mov
jmp
mov
lock
movsl
inc
sub
dec
lret
gs
stos
mov
enter
pop
inc
and
pushf
inc
pop
adcb
xchg
lods
add
fwait
push
add
xchg
mov
mov
cmp
out
hlt
cli
add
imul
mov
add
lea
and
test
dec
arpl
jne
loopne
sbb
sub
jmp
pop
lods
repz
rcrl
in
lahf
ss
jbe
xchg
jp
movsl
or
int3
test
jp
lods
dec
je
xor
aad
arpl
lock
fcomp
jg
sbb
jb
dec
shll
pusha
jbe
in
inc
push
clc
mov
inc
jo
inc
fsubrl
pop
int
jno
cld
decl
pop
add
xor
jl
into
cmp
xor
cmpsl
test
jmp
add
jne
test
fcmovu
imul
int3
imul
int3
jmp
pop
mov
jge
mov
push
pop
xor
mov
lret
or
jb
and
jb
sahf
fists
dec
cs
push
mov
loopne
call
stos
mov
insl
mov
or
pop
xchg
aas
call
aad
in
and
lock
xor
mov
aam
mov
pop
rol
insb
je
mov
jp
les
fwait
test
dec
mov
mov
push
cmpsl
ds
fiaddl
pop
sbb
mov
sbb
mov
pop
mov
and
loop
in
iret
adc
inc
out
loopne
cmp
dec
fnstenv
jg
dec
sbb
jbe
sahf
mov
jg
mov
xor
cmc
cmp
mov
sbb
in
pop
pop
rorb
mov
pop
lods
mov
and
mov
sbb
push
enter
shrl
pop
inc
mov
dec
inc
inc
push
mov
movsb
inc
leave
mov
cmp
jg
in
enter
leave
cmp
inc
sub
cwtl
lods
adc
pavgb
in
fdiv
pop
call
enter
fwait
cmp
arpl
aaa
cwtl
push
fsubrs
pop
dec
aas
sub
mov
aaa
sub
cli
fdivrs
test
xchg
lea
jle
bsr
dec
or
dec
push
movsb
nop
lds
sarb
cmp
mov
jecxz
insb
pop
or
pop
jae
lods
and
mov
ljmp
sub
iret
xchg
insb
stc
jg
sbb
jnp
or
fs
or
or
ljmp
fchs
aas
sbb
push
dec
cmpsb
xor
movsl
inc
mov
cmp
mov
in
adcb
push
rorb
cld
lret
clc
ficoml
ljmp
icebp
shrl
cmp
gs
aaa
push
jne
shlb
dec
ret
mov
fsubl
lods
cwtl
and
cwtl
push
sti
mov
pushf
orl
inc
xor
pop
jns
fnstenv
mov
sub
jne
pop
test
test
addr16
daa
aam
jp
mov
loopne
and
pusha
xchg
xchg
xlat
xor
out
sbb
add
or
stos
and
popf
jae
pop
icebp
xlat
inc
push
xchg
dec
mov
xor
mov
sbb
pop
les
mov
scas
inc
xorb
dec
sub
add
popa
shlb
lds
iret
enter
orb
inc
push
cwtl
fisubl
mov
lahf
sbb
xchg
das
mov
nop
jo
mov
mov
adc
mov
test
xchg
adcl
adc
insb
push
inc
jecxz
inc
fistpll
push
lret
mov
test
mov
jecxz
test
inc
fisubl
mov
jns
add
sahf
cmovbe
push
dec
pop
icebp
lret
mov
jg
dec
add
pop
in
mov
repnz
inc
mov
insl
lock
sbb
mov
mov
mov
sub
mov
xor
add
inc
aad
dec
outsl
data16
mov
inc
scas
pop
pop
xlat
xor
mov
fldenv
jl
lods
cmpsb
and
out
xchg
sub
idivb
popa
outsb
or
or
imul
stc
dec
lret
jle
ret
testb
mov
rorb
stc
mov
and
jno
adc
xchg
mov
mov
jge
sub
jmp
add
jmp
pop
neg
aam
mov
or
mov
adc
mov
int
jle
out
inc
xchg
lret
stc
lahf
cmp
into
pop
test
inc
fnstsw
cmp
add
sahf
in
sub
jbe
fists
inc
and
cmpsl
jnp
aaa
mov
add
scas
loope
inc
sub
mov
jge
mov
in
es
lret
mov
sub
lea
xchg
or
jecxz
aaa
xchg
aam
pop
jmp
pop
push
in
pop
cli
push
xchg
xchg
jmp
ds
dec
arpl
mov
cmpsb
loopne
insb
dec
aaa
das
insl
cmpsb
or
push
inc
aaa
pop
pop
pop
jmp
mov
rcrl
xchg
cmp
fmuls
xor
mov
xchg
push
ljmp
int3
into
lret
loope
mov
fwait
jge
xchg
hlt
jno
push
pop
mov
push
rorb
xchg
dec
pop
jg
test
jbe
mov
pusha
cld
aam
mov
push
cmp
dec
ffree
push
xor
lds
xchg
test
ljmp
pop
test
pop
push
xor
clc
xlat
jne
add
and
popa
sub
xorl
mov
js
pop
and
pop
aaa
out
outsl
test
lahf
mov
outsl
int3
pop
push
pop
xchg
mov
inc
int3
xchg
ret
adc
ret
stos
mov
jecxz
cmp
shll
faddp
fldcw
frstor
or
push
cmc
aaa
inc
mov
jb
je
jns
or
aas
aam
lret
ljmp
frstor
jo
dec
dec
dec
sarl
ret
roll
dec
sbb
jge
add
dec
dec
sti
push
lret
sbb
in
in
lret
xchg
xchg
xchg
lret
js
add
loope
and
mov
sbb
outsl
mov
cmp
daa
mov
fadd
pop
cmc
push
loopne
xchg
fimuls
out
out
outsl
inc
pop
repz
lret
mov
inc
call
dec
or
jo
outsl
fsubrs
push
shrb
dec
jo
jle
sub
cmc
in
out
or
sub
sahf
sarb
cwtl
or
mov
cltd
xchg
mov
jl
icebp
ror
int3
leave
int3
and
int3
mov
inc
stc
sbbl
jne
add
into
dec
mov
shll
dec
jnp
int
aam
or
and
xor
cltd
dec
jg
cmp
icebp
xchg
mov
xchg
jge
mov
push
xlat
jecxz
pop
mov
in
faddl
mov
pushf
dec
les
ja
das
dec
stos
pop
sti
cmp
xchg
jp
and
sub
mov
out
daa
movsl
fwait
jo
mov
push
xchg
inc
pop
ja
mov
mov
les
xor
ds
mov
pop
mov
and
lock
adc
cmp
aad
inc
test
mov
repnz
push
clc
sarb
xchg
loop
mov
inc
inc
sbb
rcr
xor
xor
sbb
push
pusha
inc
sub
dec
add
jae
outsl
xor
jne
mov
out
repz
fwait
xchg
das
popf
push
lret
pusha
jl
icebp
dec
or
dec
sub
rcr
mov
fs
cld
insl
sbb
sbb
mov
popa
pop
test
adc
popa
sbb
inc
add
jle
xlat
and
adc
cltd
add
js
int3
cltd
and
cmp
enter
iret
in
cmp
add
pop
sbb
jns
jns
iret
fcos
lods
call
pop
fisubl
dec
in
dec
cltd
and
cmp
and
nop
push
hlt
jmp
xchg
in
mov
movsl
inc
inc
pop
mov
in
sub
xchg
fadd
test
bnd
mov
stos
cld
lds
es
lods
test
push
xchg
jge
pop
mov
mov
cmp
test
inc
mov
mov
jmp
or
inc
xchg
in
pusha
cli
sarl
and
adc
pop
mov
inc
in
rcl
sub
aaa
pop
pop
cltd
aas
xor
std
jle
pushf
lcall
jp
arpl
lods
outsl
clc
les
pop
and
cltd
rolb
push
dec
enter
ljmp
dec
pop
and
mov
fcompl
push
ret
lret
xor
pop
cmp
sbb
pop
js
and
adc
test
addb
hlt
sbb
jnp
jge
nop
mov
ja
pop
sti
dec
mov
fsubrp
cmp
nop
adc
xlat
ret
pop
ss
sbb
movsl
dec
push
ret
das
jmp
adc
inc
xchg
fstpt
jp
data16
and
jp
and
ss
pop
mov
scas
push
pop
fsts
sarl
outsl
icebp
inc
lret
xor
in
js
incb
xor
xor
xlat
dec
add
mov
mov
inc
out
dec
lods
dec
lods
mov
sub
inc
scas
jl
mov
xor
testb
sub
dec
dec
dec
movsb
push
cli
bound
pop
xchg
pop
gs
inc
add
mov
adc
mov
test
cmp
into
rolb
pop
outsl
shll
int
xchg
aas
jb
loop
jno
and
and
adc
push
nop
fcoml
sbb
inc
xor
jmp
cwtl
cmp
or
sbbl
mov
add
stc
and
aam
movsl
in
add
pop
gs
xchg
mov
jle
ds
cmp
cli
mov
push
rorb
pop
adc
pushf
fstps
jbe
out
dec
packssdw
icebp
rcll
add
jo
bound
sti
je
out
and
adc
mov
popa
mov
sbb
imul
pop
cmpsb
pushf
adc
lods
mov
shl
inc
stc
xchg
repz
mov
pusha
lcall
add
roll
lret
mov
and
or
sub
ret
cmc
aad
repz
fcmovnb
cwtl
cld
and
mov
aam
xor
dec
mov
es
push
shlb
push
in
jns
push
add
add
sbb
push
dec
leave
and
leave
jecxz
lock
and
aam
movsb
jmp
imul
xchg
cmp
lods
mov
adc
jg
push
cwtl
sbbl
test
mov
gs
dec
je
outsl
adc
test
xchg
ret
adc
pop
inc
and
je
sbb
insb
jg
jo
jecxz
add
lods
mov
mov
pop
dec
cmc
jne
ds
popf
dec
jb
add
mov
sub
pop
lds
mov
jne
jg
jg
rcrb
pop
or
sbb
xchg
incl
mov
fwait
je
ficoml
push
test
pushf
adc
enter
es
xchg
inc
inc
pusha
mov
pushf
ret
testl
sub
and
lahf
rcrb
sbb
mov
sub
arpl
sarb
xchg
adc
mov
and
pop
sarb
shll
mov
test
push
mov
mov
add
aaa
sarl
xor
inc
xlat
les
cmpsb
mov
dec
inc
enter
in
pop
loopne
mov
add
sub
mov
std
sahf
pop
aam
mov
inc
inc
sub
popa
test
push
call
xchg
lods
test
add
mov
jp
ret
out
jecxz
inc
mov
cmp
pop
cmp
jle
sar
testl
or
mov
sub
fidivrl
and
mov
sub
xchg
aas
xor
lret
mov
add
adc
sub
push
call
xchg
popf
loope
and
cmp
sub
rcl
aam
lret
cmp
ljmp
aas
lea
test
add
cli
pop
adc
or
andb
aam
scas
push
loop
test
fcmove
aas
pop
mov
aas
inc
lods
insb
sbb
bound
pop
mov
mov
cwtl
aas
test
pushf
dec
mov
cwtl
inc
fbld
rcrb
xorl
pushf
inc
sbb
les
xchg
mov
fimuls
sti
push
mov
mov
clc
pop
int3
aas
lock
aam
call
pop
pop
cs
nop
sbb
mov
or
jmp
rclb
pusha
fisubs
or
hlt
jmp
jno
fstps
add
inc
or
and
test
rcrl
inc
fisubrl
xchg
jg
or
jo
or
aas
shrb
scas
push
fs
sti
imul
jl
leave
adc
mov
jp
pop
xor
inc
inc
jecxz
dec
scas
repz
sarb
leave
les
sahf
mov
jecxz
cmpsl
mov
xchg
inc
pop
daa
pop
repz
pushf
jnp
insb
imul
lcall
loop
pop
dec
xor
gs
cmpb
xor
test
mov
and
xchg
jmp
test
iret
aaa
adc
add
or
inc
repz
xchg
cmp
mov
ror
mov
sub
jl
cmp
stos
fxtract
aas
mov
inc
sarl
mov
adc
jb
imul
popa
add
ret
mov
adc
std
push
push
rol
mov
nop
pop
out
mov
pop
sahf
push
enter
push
hlt
shrb
sbb
add
add
scas
pop
add
adc
stc
sbb
xchg
pop
insb
add
pusha
mov
mov
cmp
or
int
pop
adc
sub
adc
dec
pop
cmc
jl
mov
not
test
push
sarl
shll
xchg
xlat
shrb
adc
jne
sti
hlt
insl
mov
mov
ret
popa
sarl
jmp
sarl
movsb
push
cmp
sbb
lcall
and
rorb
cwtl
pop
mov
mov
add
push
pop
sbb
pop
dec
loopne
sub
xor
inc
push
jl
pop
iret
jle
mov
add
daa
push
std
mov
pop
inc
and
push
rol
pop
inc
push
sahf
push
xor
sub
jo
adc
mov
call
adc
aaa
mov
pop
hlt
mov
mov
aam
pop
mov
pushf
jge
mov
mov
fisubrs
je
xor
push
inc
inc
fists
add
cmc
push
push
cmp
test
dec
test
dec
arpl
jnp
repz
int3
mov
mov
outsl
or
xchg
iret
adc
cmp
dec
pop
mov
outsl
sub
loopne
ret
fwait
push
mov
aas
dec
inc
fistpl
hlt
test
or
mov
test
stos
sbb
jmp
imul
aas
in
js
push
pop
inc
or
dec
pop
xlat
cmc
xchg
xor
icebp
xchg
aas
fdivl
push
leave
les
jnp
or
dec
leave
inc
add
push
dec
pop
inc
sub
dec
and
std
xchg
in
test
jnp
movsl
aas
rorl
push
je
or
imul
xor
mov
pop
mov
push
add
stc
jae
enter
int3
sub
bound
mov
aad
lods
push
adc
test
mov
aas
das
sub
mov
lock
and
stos
sahf
jo
test
inc
lock
fbld
push
aas
push
scas
mov
out
nop
adc
rcrb
mov
stos
sub
nop
push
sub
mov
in
pop
or
mov
lret
jns
push
adc
add
adc
scas
sbb
xor
dec
push
pushl
adc
cmp
sbb
movsb
fimuls
mov
cmp
dec
shl
push
mov
arpl
pusha
inc
stos
in
mov
lret
cli
pusha
mov
mov
insb
lods
daa
sbb
cld
cwtl
fcomps
xor
aad
lret
mov
jo
add
mov
daa
push
clc
ret
fadds
xor
cmp
xchg
inc
rcl
ljmp
dec
xchg
inc
xor
repnz
lret
inc
xchg
ds
push
inc
sbb
test
push
setle
sbb
mov
cmp
or
mov
ret
popa
aaa
outsb
je
mov
dec
aad
mov
cmp
cmp
pop
imul
js
insl
js
bound
or
pop
jb
dec
mov
fcoml
sub
cmp
mov
pop
test
pop
call
adc
rorl
js
jle
into
cli
pop
or
mov
stos
lret
and
lds
lock
in
inc
cmp
or
dec
jmp
sbb
mov
js
iret
push
test
out
adc
data16
dec
sbb
dec
inc
cld
sti
jb
insl
inc
ljmp
mov
xchg
ffreep
lods
test
xchg
test
dec
int3
mov
sub
xchg
dec
mov
test
loop
pushf
in
pushf
and
push
inc
mov
in
jmp
cmp
fnstenv
call
sub
cs
movsb
cmpsb
mov
shrd
mov
or
mov
mov
sub
in
pop
lock
dec
push
pop
js
lcall
or
out
fisttpl
sbb
jo
mov
pop
push
cli
inc
cwtl
mov
jnp
jmp
inc
mov
add
inc
mov
mov
hlt
fldenv
pop
mov
push
xchg
or
push
jo
adc
test
lods
add
jge
in
pop
test
inc
mov
test
movsb
rorl
sbb
stc
cwtl
mov
and
xchg
or
pop
dec
cmpl
cltd
cmovg
sti
add
imul
adc
pop
jb
test
test
stos
cmp
mov
pusha
dec
mov
push
das
inc
out
dec
mov
daa
jl
fisttpll
pushf
sbb
andb
inc
pop
push
cltd
inc
int
inc
xor
xor
xchg
pop
mov
movsl
jbe
in
sbb
das
aaa
push
push
and
ret
out
lahf
cmp
push
inc
imul
lods
pop
mov
xor
cmp
mov
test
ljmp
pop
sbb
subb
rcll
pop
sub
test
cmp
popl
pop
inc
out
sub
inc
daa
movb
in
pop
mov
sub
rdmsr
mov
xchg
mov
mov
adc
lods
adc
jae
outsl
lea
mov
pushf
mov
xchg
jp
lds
dec
cwtl
sub
xlat
cwtl
mov
mov
mov
addr16
rcrl
popf
mov
movsl
popf
xchg
movsb
pop
sbb
enter
das
adc
or
sahf
cmp
movsb
enter
sbb
dec
xlat
stos
jno
sub
jno
sti
mov
pushf
cld
inc
mov
movntps
push
jno
pop
in
xor
pmaxub
jns
movsb
je
cmp
aad
nop
popf
data16
and
jl
fsubrs
adc
xchg
hlt
mov
mov
popa
stc
addr16
push
mov
mull
adc
cli
int
or
push
adc
lods
or
dec
out
dec
mov
pop
jnp
jg
lea
frstor
xchg
mov
adc
jae
xor
mov
addb
mov
jne
loop
pop
fistl
rcll
rcrb
jp
and
adc
mov
and
inc
out
mov
lcall
inc
data16
in
negl
nop
mov
loopne
mov
jb
pop
loopne
or
loop
ljmp
mov
add
jne
arpl
dec
cmp
ss
pop
inc
sbb
rclb
inc
mov
pop
jne
cmp
loopne
sub
pop
test
jle
xchg
insb
cmpb
inc
pusha
cmpsl
fsubr
push
negb
xor
inc
mov
adc
mov
mov
push
dec
jmp
xor
pushf
cli
and
lods
inc
loop
subl
pop
mov
xor
push
sti
adc
or
mov
add
adc
mov
mov
out
xor
test
fs
mov
cmp
xchg
rclb
cmc
jge
mov
push
lock
push
hlt
push
cmp
dec
jbe
ret
nop
mov
call
loopne
cmp
inc
loope
mov
sub
and
cmc
push
imul
and
imul
fldcw
dec
sbb
and
enter
loop
sub
mov
jmp
cmpsl
push
addl
test
inc
pop
push
movsl
cmp
mov
adc
scas
nop
dec
adc
and
es
xchg
dec
ret
cmp
jg
les
jp
loopne
sub
inc
pop
es
cmc
xchg
mov
pop
push
adc
mov
in
sahf
hlt
jae
mov
or
or
xor
sub
dec
add
pop
dec
xor
xlat
add
push
mov
add
xchg
push
cld
add
sub
and
es
mov
pop
mov
shrb
iret
clc
insb
push
xor
rorl
push
xor
mov
or
push
lret
sahf
lret
cltd
ret
outsl
push
dec
insb
mov
fcomip
and
test
or
adc
pop
add
sbb
out
aas
sub
cmp
int
mov
push
inc
cs
cmc
mov
mov
ljmp
pop
lret
or
sbb
add
in
cmpsl
insl
cli
or
test
mov
mov
adc
js
lret
mov
cltd
adc
push
nop
cmp
sti
roll
sbb
roll
movsl
fidivl
mov
mov
shl
add
pushf
pop
and
insb
mov
mov
bnd
lahf
xchg
fldenv
push
ret
or
dec
pusha
mulb
lock
adc
inc
mov
mov
ljmp
push
and
int3
jno
add
jns
lea
push
mov
out
mov
mov
test
aad
mov
sub
mov
ret
rclb
scas
fldcw
mov
jmp
jbe
lea
jmp
call
mov
jg
movb
jp
xchg
jl
xchg
xchg
fidivrs
and
pop
movb
sub
stos
mov
push
stos
leave
cs
aam
xor
or
in
leave
lahf
adc
mov
arpl
imul
loope
dec
inc
inc
xor
or
mov
mov
pop
push
mov
out
jl
arpl
add
or
dec
aas
cmp
popf
cmpsl
lock
test
sub
sahf
outsb
rclb
notb
xor
jnp
pop
sbb
cmc
popa
cmp
mov
jns
andb
pop
imul
pushf
or
fcomip
leave
movsb
adc
out
push
and
or
mov
scas
lods
pop
mov
push
clc
xor
and
es
jne
daa
jns
push
test
or
gs
cmpsl
fidivrs
push
out
mov
inc
xchg
fisttpl
jb
sahf
add
dec
mov
adc
fildll
jge
mov
xchg
sub
sbb
and
aad
sub
pop
iret
dec
mov
cmc
aam
lret
dec
sub
push
dec
mov
pop
dec
hlt
jnp
and
pop
in
mov
lret
or
cmp
mov
insl
inc
dec
mov
in
es
mov
push
jge
push
cmp
arpl
or
mov
inc
adc
dec
dec
int
adc
sarb
jne
addl
inc
addl
shll
mov
adc
push
inc
dec
lret
push
jl
mov
popf
add
fiaddl
cmp
stos
xchg
sub
sub
jmp
out
out
inc
rep
dec
cltd
lods
dec
hlt
xchg
out
cwtl
leave
xchg
xor
mov
push
gs
mov
dec
daa
jl
mov
cmp
mov
mov
in
movsl
pop
lret
movsl
inc
sarb
or
or
push
sbb
jle
inc
repnz
add
mov
or
pop
insl
pop
mov
fldcw
test
cltd
add
xchg
sub
loopne
movb
add
shr
and
inc
in
icebp
lahf
inc
xchg
out
stos
mov
mov
cmc
adcl
int
sub
and
shrl
sub
bnd
ss
arpl
rolb
cmc
mov
push
inc
mov
daa
je
jp
pop
and
lcall
push
push
fwait
push
dec
inc
adcb
fadds
loopne
sub
out
ffreep
pop
sbb
dec
xor
sahf
in
lds
movsb
int
iret
mov
lods
rcr
jbe
std
cmp
pop
cltd
aaa
sti
mov
or
movsb
sub
sub
xchg
out
or
dec
xor
in
push
fcmovu
inc
xchg
loopne
nop
push
and
mov
test
xor
std
mov
imul
bound
sub
xor
mov
adc
cmp
inc
jns
or
sub
test
cmp
dec
push
sub
sarb
sbb
sub
adcb
sbb
jge
pop
outsb
repz
xor
aad
das
sahf
addb
dec
cs
andb
mov
cmp
icebp
or
iret
das
aaa
nop
sahf
loopne
clc
into
mov
mov
rcrb
mov
lea
loope
arpl
pusha
cmp
fnsave
or
pop
pop
call
stos
jle
popf
icebp
lea
lcall
mov
jle
jmp
sbb
add
pop
or
dec
lods
stos
int
inc
ja
rcll
outsb
jmp
xor
adc
iret
inc
scas
clc
lods
adc
int
mov
jae
cmp
pushf
lea
mov
mov
cmp
in
cltd
adc
ret
gs
aad
inc
mov
jp
push
loopne
and
add
cli
and
dec
out
fs
push
sbb
rcrl
pop
xlat
xor
push
lea
dec
int
fidivrl
mov
data16
nop
mov
jmp
enter
out
test
es
roll
lods
jle
hlt
pop
je
inc
movsl
pop
cltd
jecxz
stc
cmpsb
popf
jg
cmpsb
sbb
cmp
decl
aad
pushf
mov
lahf
pop
mov
scas
adc
sub
inc
pop
out
sbb
cmpsb
pop
mov
xchg
fcmovnbe
insb
es
lods
roll
movsl
int3
int
nop
sahf
push
or
int
push
cmp
lods
sub
lret
test
movsl
dec
mov
push
or
dec
jmp
and
int3
xor
ficoms
negb
imul
pop
and
loope
sub
pop
das
lret
int3
loopne
arpl
mov
xor
imull
dec
loopne
popf
shrl
lahf
into
dec
lods
std
incl
cs
fadds
fisubrs
add
sahf
xor
mov
inc
stos
int
mov
adcb
mov
fldt
and
jo
das
jnp
xor
add
enter
gs
pop
int3
cwtl
inc
int3
mov
xor
fs
cltd
pop
into
rcll
lahf
xor
mov
add
scas
mov
loope
pusha
mov
aam
pop
aad
inc
pop
mov
jb
sbb
sub
test
adc
and
mov
cmp
push
imul
adc
sub
fdivp
leave
jae
sbb
jp
or
push
jnp
imull
jnp
fsubp
in
addr16
hlt
shrl
aad
jg
jle
cli
or
xchg
bswap
in
test
jo
xchg
push
lds
or
fnstenv
push
jns
sbb
pop
sti
movsb
int3
adc
xchg
sarb
insb
nop
ffreep
xchg
mov
out
cmp
mov
jne
out
dec
xchg
pop
push
aam
sub
insb
inc
aad
inc
mov
movb
stos
repz
fisubs
loop
mov
pop
sbb
cmp
popf
nop
sarl
bswap
dec
and
jo
jle
shlb
shl
leave
mov
mov
lods
pushf
jecxz
xchg
rorl
pop
stos
lods
pop
mov
fildl
push
adc
insl
scas
nop
rolb
dec
cld
int
xchg
dec
je
popf
mov
sbb
xchg
mov
adc
push
sub
loop
mov
aad
ja
sub
les
push
mov
fdiv
jmp
mov
lds
push
rorb
in
sbbl
lcall
hlt
dec
add
mov
js
ret
mov
sub
xchg
insb
lds
cwtl
push
cwtl
inc
mov
lods
arpl
xor
jnp
xchg
andb
lods
jmp
push
lock
and
fcmovnb
push
stc
jno
pop
addb
inc
leave
fisubs
add
or
rolb
add
aaa
mov
lret
sbb
pop
xchg
loopne
ds
scas
ret
pop
or
jge
test
jp
mov
push
or
mov
jmp
jmp
sbb
pusha
inc
outsb
xchg
jno
stc
xor
adc
aam
sub
sub
inc
push
pop
mov
cmp
cmpl
inc
mov
xor
fnstsw
lcall
pusha
insl
jg
dec
or
test
mov
adc
and
pop
jge
pop
and
leave
sbb
pushf
pop
add
loopne
rorb
and
stc
aas
fisubl
dec
mov
pop
push
sti
inc
sub
sub
mov
sub
fisubs
pop
xchg
sub
jp
and
dec
jae
add
or
push
sar
les
sti
and
cmp
scas
inc
mov
push
outsl
inc
hlt
xchg
cs
fwait
cmp
mov
dec
cs
orps
hlt
dec
call
xchg
xchg
out
pop
popf
jp
push
shr
subb
cmpsb
xchg
mov
jne
pop
lods
in
sbb
add
dec
and
add
dec
add
imul
lock
push
fwait
pop
divl
or
es
popf
jo
out
jnp
mov
mov
dec
in
dec
mov
mov
push
loope
imul
push
imul
cmp
xor
in
fnsave
dec
pop
xchg
pop
out
mov
int3
ja
rorb
jns
popa
and
or
scas
sub
sub
cmpsb
rol
xor
xor
inc
lods
push
cmp
push
jne
scas
mov
pushf
add
push
dec
fs
out
push
jmp
subb
idivl
outsb
xchg
call
cmp
test
or
clc
inc
jmp
push
cmp
aaa
xor
sahf
cli
out
cld
call
inc
adc
lods
ret
mov
pusha
dec
fisubs
inc
jl
out
push
inc
add
mov
ret
xor
mov
jnp
adc
ss
lahf
andl
cmovbe
inc
dec
inc
or
in
add
jg
faddl
fs
rcrb
ficoml
fistpll
mov
adc
sub
sahf
sub
in
inc
sti
pop
call
aas
inc
jge
dec
xchg
data16
cmp
sub
mov
mov
sub
or
mov
loop
push
and
fxch
inc
mov
cltd
inc
inc
inc
dec
popa
xor
mov
mov
nop
ss
lods
fldenv
or
movsb
pop
add
mull
movsb
lods
mov
lds
outsl
dec
inc
sbb
add
push
dec
inc
pushf
fsubl
or
jg
push
mov
popf
loopne
ret
lret
jnp
cmp
icebp
xchg
dec
lss
jmp
fnstsw
cwtl
in
mov
pop
mov
rolb
repnz
lods
dec
sbb
push
mov
stc
adc
xchg
lret
rcl
jno
test
les
mov
sbb
in
mov
xchg
aad
pop
cmc
in
fldl
pop
add
mov
out
out
mov
lret
jmp
dec
and
mov
loop
pop
xlat
adc
call
shll
cmpsl
iret
sbb
pop
pusha
push
stos
jo
cmp
push
daa
lds
packsswb
xor
and
stc
ret
cmp
sbb
nop
fstps
xchg
sbb
mov
stos
inc
mov
lret
push
addr16
mov
jo
insb
mov
fnstcw
sar
mov
sbb
or
xor
test
test
jbe
jge
scas
enter
jmp
adcl
add
dec
or
or
push
loope
xchg
push
pop
mov
and
adc
push
ror
dec
repnz
mov
push
aaa
pop
push
cmp
movsl
aad
push
movsb
mov
jns
imul
test
dec
and
popa
dec
int3
xchg
adc
or
jp
std
sbb
jo
loopne
push
ficoml
mov
test
repnz
lret
mov
into
lret
ljmp
popf
cmp
ret
mov
nop
bound
sbb
lret
nop
movsl
out
and
mov
add
and
dec
callw
ljmp
in
gs
jp
in
cwtl
push
pusha
cmpsb
jne
mov
sub
xor
lock
lret
rcrb
mov
iret
stos
pop
and
inc
fs
subl
dec
dec
xchg
sub
insb
xchg
iret
jae
xor
shrb
jle
jle
xor
and
push
adc
mov
int
inc
xadd
cli
daa
lods
fnstsw
ret
fwait
lea
jno
cmp
out
add
dec
jg
mov
lcall
mov
repnz
out
in
hlt
in
cmp
adc
cltd
xchg
es
add
in
push
pop
cwtl
sahf
adc
test
pop
flds
xor
sbb
xchg
adc
push
push
rclb
mov
js
push
cmp
push
pop
cld
xchg
push
or
shlb
cmc
rorl
push
mov
push
adc
out
scas
xlat
xor
into
jmp
cli
inc
out
add
dec
push
mov
and
mov
je
inc
jge
sbb
add
ret
fisubrl
mov
cld
jbe
cmpl
movsb
push
loope
in
dec
mov
adc
fcoml
fcomi
ficoms
in
aam
movsl
mov
out
gs
cmp
jo
clc
repz
fsubr
jne
lea
popf
mov
popf
inc
in
test
insl
pop
rclb
out
or
sbb
std
dec
test
mov
sbb
dec
lahf
icebp
inc
ror
ret
lods
ds
and
add
pop
xor
dec
sub
call
jo
jne
ficoml
and
cmpsl
pop
not
lock
shlb
shll
je
and
nop
sti
mov
pop
pushf
cmp
and
push
mov
jb
adc
fcoml
cld
aas
cli
sbb
ret
out
pop
int
dec
and
pop
and
sub
push
imull
cmpsl
fsubl
mov
mov
push
mov
fistps
lods
es
inc
repz
pop
cmp
orl
push
xor
lret
dec
lahf
sub
arpl
dec
sbb
sbb
lcall
or
mov
pop
pop
fucomp
xor
fprem
mov
repz
shl
push
add
invlpg
pop
enter
xor
lcall
scas
inc
pushf
cli
mov
push
lds
inc
insb
fiaddl
gs
dec
push
cltd
mov
into
pop
cmpsl
dec
cmp
cmpsl
jmp
xor
test
push
arpl
insb
dec
bts
xlat
add
jp
sub
jno
movsb
rorb
pop
mov
cmpsb
rcrb
push
jb
scas
cwtl
outsl
inc
xchg
jne
sub
dec
iret
mov
hlt
inc
lods
add
ja
adc
dec
loope
stos
jg
xchg
or
or
and
adc
in
inc
pushl
cmp
xchg
bnd
push
aas
push
out
and
ds
pop
test
and
lds
lods
icebp
jnp
mov
push
outsl
cmp
test
lods
test
inc
pop
out
fsubr
fxch
or
mov
inc
into
imul
cmpsl
adc
push
cmp
in
jns
aas
and
in
sub
cmp
sub
or
rorl
ret
fdivrl
jnp
dec
scas
jmp
xor
mov
push
mov
ror
das
pusha
decb
les
inc
lods
sar
roll
mov
mov
and
das
hlt
lcall
mov
fsubrl
dec
cmp
pop
int3
ljmp
fs
jnp
xchg
add
sub
pop
jp
shrb
rcr
or
dec
stos
hlt
fwait
pop
je
jb
nop
scas
push
mov
pop
int
test
inc
jb
mov
sbb
dec
mov
inc
stos
lret
iret
and
fs
jmp
xchg
loop
fdivrl
int3
cmpsb
mov
popa
enter
sbb
jnp
pop
incl
and
mov
and
lea
push
pop
js
mov
jmp
sub
push
in
fucomip
dec
push
icebp
add
adc
outsl
cmpsb
adc
add
imul
inc
add
adc
hlt
inc
push
pop
push
lret
ljmp
lahf
cmp
cmp
mov
mov
xor
ret
pushf
stc
fstpl
sub
sub
mov
jge
test
icebp
mov
rclb
and
mov
ss
adc
jae
pop
enter
pop
mov
lret
or
push
jns
js
clc
repnz
mov
sbbb
bound
inc
xor
xor
add
rolb
xchg
xchg
sbb
lds
inc
ds
and
cmpl
lcall
ret
xchg
mov
arpl
rclb
adc
and
js
out
sar
test
hlt
mov
into
jg
lods
bt
je
dec
outsl
cmp
loope
pop
hlt
push
movsb
cmp
jg
mov
loop
movsl
mov
jmp
icebp
xchg
movsb
mov
cmpb
movsl
outsl
out
or
adc
popa
lods
adc
insb
inc
imul
pop
cmpsl
ficomps
sub
movsb
fwait
inc
aad
jl
ds
cmp
mov
out
pop
push
jbe
jne
imul
and
scas
lock
fisttpl
jle
cmp
inc
add
push
loopne
and
bound
movsl
inc
xchg
out
push
test
ret
int
mov
mov
dec
loopne
shrl
pop
shr
rol
mov
push
dec
xchg
dec
lods
jne
inc
jne
sarb
push
gs
shll
mov
lods
stos
push
sti
das
clc
adc
cmp
pop
fwait
inc
adc
loop
repnz
lret
mov
rcll
inc
mov
dec
xchg
in
xchg
mov
adc
mov
inc
adcb
lods
dec
adc
xchg
pop
cmp
mov
sbb
jmp
roll
inc
and
add
jmp
lahf
rcl
fiaddl
enter
or
and
sbb
adc
push
dec
mov
out
jns
in
repz
jae
jb
pop
nop
mov
mov
gs
sbb
int3
jns
xchg
lret
add
cltd
cltd
add
punpcklbw
mov
lcall
rcll
jns
push
lds
cmpsb
push
mov
mov
push
and
fdivp
xchg
arpl
mov
inc
mov
sub
pop
cmp
adc
adc
pop
sbb
pop
xchg
leave
test
cltd
sbb
jnp
roll
pop
dec
shlb
mov
pushl
leave
orb
push
test
pop
imul
call
addl
adcl
pusha
inc
push
sbb
into
sbb
lahf
inc
sbb
lds
int3
int3
dec
mov
mov
test
mov
sbbl
lret
cwtl
je
movsl
add
fstl
dec
insb
mov
mov
push
shl
or
pop
mov
neg
bnd
jg
mov
lds
scas
fmuls
mov
and
jnp
movsb
jnp
mov
scas
aad
negb
andl
pop
jns
aaa
pop
mov
sub
pushf
push
out
shrl
aas
bnd
jle
pavgw
cmpsb
es
insb
inc
or
bound
stos
in
push
sbb
rorb
int
inc
sub
fistpl
cwtl
jg
or
jne
xor
into
add
shlb
xchg
push
cmp
mov
push
addb
mov
arpl
push
andb
add
sbb
adc
rclb
insb
push
addl
arpl
mov
hlt
loope
je
inc
jne
and
cmp
imul
cmp
pop
int3
cmp
mov
jle
adc
hlt
dec
inc
bnd
xor
rcll
mov
add
mov
int
scas
insb
mov
cmp
adc
pop
ret
add
mov
xchg
shrb
int
xchg
cli
std
lods
xchg
lods
popf
testl
pop
push
cmp
jns
hlt
fmul
scas
sub
jbe
popa
cs
mov
mov
pushf
push
and
gs
pop
cmp
dec
ret
aad
inc
imul
lret
push
lds
lret
lods
cmpsb
out
jbe
ljmp
stc
mov
enter
push
test
mov
jno
icebp
add
fsub
call
imulb
bound
roll
pop
popf
sbb
xchg
xor
and
shll
dec
cmp
ret
mov
je
mov
lods
lret
dec
fiaddl
add
arpl
stc
orl
cltd
push
push
fwait
or
flds
push
mov
inc
cmp
into
push
and
inc
inc
loop
lods
mov
into
sbb
lods
mov
clc
out
sarb
incl
and
leave
mov
xor
stc
mov
test
repnz
jge
sbb
push
dec
cmp
dec
cmp
je
cmp
xor
jne
push
pop
push
or
fcmovnb
push
mov
leave
inc
jo
popf
mov
mov
fwait
pushf
or
andb
xchg
or
dec
xor
out
dec
aas
fildll
pop
int3
mov
pop
adc
xchg
pop
mov
popaw
inc
adc
dec
and
ret
xchg
mov
std
xchg
lsl
rcl
imul
jecxz
xchg
cmp
mov
cmp
mov
mov
out
add
pop
icebp
clc
mov
test
sub
xchg
dec
pop
aaa
stos
outsb
or
dec
xlat
les
inc
stc
jae
arpl
daa
add
push
mov
or
les
mov
jg
je
into
or
dec
aam
sbb
lods
and
div
ret
in
xchg
xlat
xchg
mov
xor
xchg
jbe
inc
scas
mov
fdiv
mov
ds
inc
cmp
test
xchg
nop
js
and
or
and
mov
jle
arpl
int
hlt
popa
loope
repnz
mov
scas
pop
dec
lret
pop
xor
inc
pop
jecxz
mov
test
cmp
inc
dec
pop
int
lods
mov
xchg
rol
or
mov
inc
jo
pop
test
cmp
jns
test
jne
rorb
lods
dec
fiadds
xorl
jns
mov
mov
shl
cs
sbbl
fcmovnu
mov
repz
sub
mov
xor
and
int3
call
sub
pushf
sti
je
cmp
push
out
outsl
into
outsb
in
movsl
adc
jecxz
mov
in
sub
and
adc
mov
fstp
dec
jecxz
jne
lret
in
mov
sahf
push
mov
fistpll
shrl
adc
arpl
jo
sub
clc
mov
jae
repnz
sti
mov
cmp
or
sbb
sub
hlt
mov
fisttpl
fsts
out
push
or
mov
push
js
pop
aam
cmp
jp
cmpsl
stc
das
and
pushf
fwait
dec
leave
pop
aaa
bound
mov
into
dec
sti
dec
mov
ja
jg
dec
rclb
mov
or
or
and
mov
mov
sub
mov
xchg
lock
lods
mov
add
pop
pop
jbe
js
or
les
repz
loope
push
shlb
lret
jmp
ss
lret
pop
pop
out
jp
out
push
iret
dec
movl
lea
or
mov
dec
mov
sub
mov
lds
and
mov
jo
mov
inc
adcb
inc
int
xchg
push
punpckldq
jl
repnz
les
in
lea
int3
mov
popa
mov
cmp
iret
jae
dec
mov
xchg
cltd
pushf
or
pop
lret
lret
push
mov
or
std
cmp
sbb
ja
sbb
mov
jmp
lea
push
fisttps
mov
cmp
and
jmp
mov
aam
mov
ja
lods
adc
int3
inc
in
popl
fcomps
loopne
mov
add
cmpsb
and
fwait
pop
cmc
into
inc
mov
arpl
push
mov
sti
loopne
jecxz
cmp
inc
mov
ss
sahf
or
mov
shrl
mov
cmpsl
divl
pop
data16
decb
cltd
mov
loop
out
push
push
pop
loope
jbe
icebp
pop
rclb
test
int
cmp
jbe
stos
inc
inc
sub
bnd
out
aaa
insl
aam
xorl
pusha
mov
fidivs
out
dec
mov
dec
outsl
pop
loop
mov
xor
dec
mov
stos
xor
stos
popf
js
jno
mov
adc
mov
xlat
pop
mov
popa
cld
cmp
jmp
mov
inc
cmp
sub
sbb
test
insl
add
insl
notl
adc
push
mov
push
pop
cmp
mov
sbb
dec
cld
pushl
nop
mov
lods
shr
lcall
cs
stc
enter
sahf
gs
ss
cmc
inc
sub
ss
xor
test
add
lret
sbb
adc
dec
xchg
loopne
or
daa
dec
adc
add
popf
lret
mov
into
dec
ds
rcrl
xchg
fstp
xchg
push
jo
out
subl
push
xor
sub
pop
mov
mov
insl
mov
push
xor
call
mov
jae
fwait
mov
out
lahf
pop
mov
and
sub
mov
mov
lahf
imul
cwtl
mov
and
jo
adc
pop
dec
into
dec
fwait
test
out
and
sub
lahf
push
mov
cmp
pusha
shll
adc
out
xchg
xchg
sub
sub
rcl
lods
lret
xchg
sub
insl
and
add
out
cld
out
push
push
in
sti
sarl
and
lock
repnz
ret
jb
sti
std
stos
shl
mov
mov
cmp
pusha
sub
cltd
dec
add
dec
ss
dec
sub
xor
dec
cmpsl
xlat
aas
dec
lds
sahf
les
stos
jl
lret
mov
and
xor
or
pop
repz
mov
xchg
pop
inc
jg
jno
xchg
int
jmp
mov
fnstsw
js
les
add
in
int3
mov
xlat
sbb
and
mov
lods
inc
xchg
mov
iret
lret
dec
outsb
add
mov
out
adc
jb
je
sub
push
mov
enter
inc
sti
clc
pushl
or
cmp
rcll
inc
rclb
movsb
xchg
mov
xchg
xchg
and
mov
mov
mov
mov
test
outsl
jge
pusha
lret
xchg
jmp
xchg
insl
mov
cmp
repnz
xor
or
enter
jle
or
sub
push
push
sbb
adc
pop
flds
dec
cmp
xor
aad
imul
leave
mov
cmpb
mov
into
pushf
xor
loope
pusha
das
out
stos
push
pop
lea
mov
fisubrl
cld
pop
cmpsl
xor
rcr
inc
ljmp
and
orl
push
mov
sub
jbe
jecxz
test
mov
in
mov
in
jbe
pop
rclb
mov
filds
and
aam
loope
xor
mov
add
aas
sub
lods
dec
sub
fs
or
stc
sti
jae
sbb
cmpsl
clc
rol
leave
in
hlt
mov
aam
mov
jmp
xor
mov
push
push
jne
insb
mov
in
clc
mov
sarb
rol
repnz
cli
hlt
es
mov
lret
sbb
inc
mov
insl
ljmp
pushf
and
pop
push
inc
aas
jmp
fwait
add
dec
mov
xchg
inc
mov
add
xchg
or
push
xchg
mov
nop
loopne
xchg
cs
cli
pop
cmp
inc
cmp
jbe
notl
push
stos
stos
and
fstpt
cmp
sub
aaa
xchg
and
pop
push
sub
fldl
cwtl
pop
mov
out
outsl
and
shll
enter
add
in
jno
sbb
and
test
outsl
outsb
push
adc
dec
ss
sbb
and
sub
leave
out
xchg
cmc
cmc
jle
idiv
in
or
sub
jge
test
stos
shlb
into
cmp
outsl
cmpsl
inc
in
into
popf
add
orb
or
dec
mov
adc
sub
pop
bound
mov
xor
aaa
daa
inc
nop
dec
pop
mov
cld
insl
push
xchg
mov
mov
pop
push
aam
fucomip
ja
mov
xchg
sub
in
mov
push
dec
sub
or
xor
pop
pusha
gs
mov
sahf
jne
mov
test
cmp
push
jmp
jmp
adc
dec
mov
out
aad
or
int3
push
jno,pt
sbb
push
mov
lea
repz
aaa
push
daa
test
shrb
jp
push
jmp
or
xor
cmpsb
push
dec
jae
rcll
std
inc
and
push
loopne
mov
nop
mov
ds
mov
sub
mov
icebp
pushf
mov
inc
mov
add
push
mov
sarb
daa
std
fimull
jae
xor
pop
sub
mov
and
pop
loopne
and
pop
repz
jne
fcompl
inc
adc
sbb
and
sti
pushf
adc
inc
insb
cwtl
mov
push
inc
fstps
sbb
jnp
das
push
bound
sub
imul
cli
lods
je
call
mov
pop
dec
shrl
and
mov
mov
popa
lea
and
jle
and
jl
add
mov
sti
addr16
cmp
cld
sar
lock
aas
mov
int3
jle
cmp
xor
ficompl
jge
xchg
mov
mov
movsb
sti
inc
imul
leave
pop
adc
mov
jl
add
jl
stc
ret
sti
mov
pop
jmp
dec
pop
iret
fnstsw
xor
stos
mov
cmp
sarl
and
jge
shrl
and
pusha
cmp
test
adc
mov
idivb
push
cmc
arpl
test
addl
stc
inc
pop
js
enter
outsl
jmp
mov
std
xchg
movsl
mov
xor
stos
ljmp
inc
cmp
test
sub
pop
rcr
ret
arpl
jo
sbb
bound
movsl
mov
push
out
call
pop
aas
adc
in
lods
out
pop
xchg
loop
inc
outsl
xor
pushf
cltd
mov
fwait
push
mov
lret
in
jb
sbbb
inc
scas
xlat
mov
push
pusha
mov
in
push
daa
fcoml
xor
lahf
mov
and
lcall
das
add
dec
adcb
sti
adc
loopne
inc
adc
lock
jmp
icebp
cmp
pushf
out
rclb
push
lret
movsb
cmp
loop
and
adc
inc
jp
sahf
inc
addl
sub
in
enter
outsb
ds
pop
push
in
xlat
scas
out
bound
mov
subb
sub
and
sub
ds
outsl
fcomps
scas
sarl
cmp
cmp
pop
fisubrl
mov
pop
xchg
sub
rol
hlt
nop
fsubs
mov
in
fcmovb
push
push
jmp
xchg
cmp
je
scas
ror
hlt
hlt
mov
inc
inc
and
mov
enter
pop
pop
xchg
idivl
or
add
or
jl
xchg
jae
and
pop
mov
test
idivb
mov
orb
fdivl
cmp
aaa
dec
sub
sbb
pop
iret
jle
in
loope
cmp
mov
dec
mov
push
xor
jl
mov
mov
mov
push
loope
jmp
insl
sub
add
loop
sahf
inc
pop
fmull
jno
xchg
dec
stos
cmpsl
cmpsl
dec
lods
les
push
jg
loope
sub
sub
cmpb
pop
xlat
dec
out
push
shr
fs
rcrb
popa
mov
sub
test
int
xchg
mov
or
inc
test
lea
rolb
pushf
lods
sti
test
push
sbb
je
fistl
xor
lods
lea
pop
inc
xchg
dec
jbe
add
js
mov
arpl
and
jl
pop
or
xchg
mov
in
lods
jne
sbb
in
inc
or
icebp
movsb
lock
push
addr16
int
les
jmp
fistpl
sahf
jp
sub
jmp
add
mov
imul
ror
xor
ror
idivb
xchg
call
loopne
lea
ficomps
mov
js
in
cltd
xor
aas
add
push
lret
ja
adcl
pop
ljmp
ret
pusha
mov
dec
aaa
cmc
push
ds
mov
sub
test
pop
loopne
pusha
out
jne
dec
cmc
mov
xor
push
mov
or
je
mov
inc
xor
stos
divl
push
sub
dec
popa
inc
mov
pop
loope
ret
xor
xchg
cmpsl
cmp
nop
and
lds
sahf
lock
dec
inc
outsl
inc
stc
mov
xchg
xchg
xlat
insl
xchg
loopne
popf
xor
cmp
inc
sbb
xchg
adc
mov
xchg
inc
test
fdivr
in
mov
adc
notb
outsb
mov
adcl
mov
fstpl
pop
jnp
push
push
ret
sar
adc
fsts
pop
push
dec
mov
xchg
leave
cmp
icebp
std
sbb
pop
mov
sbb
mov
push
cmp
xchg
shlb
lahf
shr
push
faddl
in
xchg
jno
cmp
fst
rorb
inc
lret
sub
aam
jo
mov
jmp
xor
mov
outsb
movswl
jne
fstpt
pushf
cld
push
mov
fstpl
cmp
clc
or
std
mov
int
cli
inc
sbb
cmpsl
fldenv
cmpxchg
outsl
inc
cmp
sbb
push
insb
mov
xor
int3
or
daa
pop
jbe
lods
ja
ret
cmp
xchg
dec
mov
push
into
xchg
or
in
int3
mov
pop
cmp
pop
push
leave
cld
or
and
sbb
lods
xor
adcb
insb
icebp
fcmovnbe
dec
repnz
fcomps
cmp
addb
dec
test
negb
or
lods
jns
lds
push
mov
sbb
xor
pop
lea
or
inc
push
pop
or
test
jno
arpl
sbb
sbb
pop
push
in
xchg
xlat
pop
js
mov
mov
fstps
andl
popa
xchg
test
in
rcrb
lahf
loop
jp
jns
test
cwtl
popf
dec
mov
aas
cmp
lcall
sti
dec
in
xchg
ja
movsl
dec
push
dec
mov
jnp,pn
ret
push
push
iret
fldenv
cmp
data16
add
je
mov
call
xchg
xor
addb
outsl
mov
ljmp
dec
lea
xchg
out
shll
fisttps
test
or
xorb
popa
or
mov
rcl
repnz
loope
jg
lret
sbb
roll
aad
outsb
std
stos
mov
sbb
dec
cwtl
pop
pop
xchg
mov
jp
rol
fwait
sbb
mov
roll
ja
bound
movsl
das
ja
loopne
dec
pop
xor
jecxz
push
stos
jb
pusha
xchg
scas
lahf
testl
push
sbb
xchg
pusha
mov
xchg
jecxz
cld
mov
mov
cmp
xor
rol
xor
outsl
jbe
fimuls
lret
xchg
leave
xor
shlb
imul
push
mov
adc
cs
sub
cld
in
pop
push
xchg
outsb
cmpsb
adcl
sahf
fisubrl
adc
pop
sbb
iret
jbe
mov
lahf
jb
hlt
mov
pop
push
mov
lret
ja
push
push
fadds
xor
es
pop
mov
cmp
add
lds
mov
sbb
gs
enter
push
inc
loope
cmovge
mov
push
mov
aaa
ja
aad
cmp
addb
mov
dec
bound
mov
push
movsb
mov
outsb
lahf
stc
jne
imul
add
orl
mov
xor
pop
push
sbb
xor
push
movsb
or
xlat
dec
push
cmpsl
scas
test
adc
push
mov
mov
or
inc
icebp
push
xor
xchg
sbb
out
or
cmp
lds
loope
and
xchg
or
movsb
sub
nop
les
inc
stos
xor
aaa
in
xchg
cmp
push
or
out
push
dec
and
icebp
jecxz
dec
insb
je
enter
pop
loop
xchg
dec
jge
cmpsl
cmc
xor
mov
push
aas
jbe
iret
repz
outsl
fisubs
mov
pop
repnz
sub
scas
inc
xchg
xchg
add
shrb
ret
sahf
mov
inc
push
push
clc
sub
in
neg
dec
sub
mov
cwtl
inc
push
or
lods
fstpt
rcrb
movsb
mov
jecxz
jbe
inc
scas
sbb
mov
and
out
jle
jo
mov
call
jecxz
mov
lds
cmpsl
or
jae
push
sarb
loopne
mov
out
aas
sub
movsb
sbb
and
lds
adc
mov
push
sub
cmc
mov
jno
add
loopne
nop
lods
aas
cmpsb
loopne
push
mov
cmp
pusha
push
outsl
push
push
test
loopne
stos
adc
movsl
jb
lods
out
cmc
icebp
xor
pslld
xchg
push
ror
or
xchg
dec
pop
aam
aam
push
sbb
mov
xchg
push
push
add
int3
push
jle
stc
lret
jne
xor
inc
sti
jns
cs
inc
scas
mov
fcmove
subb
sahf
mov
jbe
xor
jbe
xchg
and
outsb
adc
adc
pop
dec
cmpsb
xor
lods
sbb
and
jge
xchg
jns
push
pop
rcrb
test
sub
push
mov
sbb
std
xchg
xchg
mov
mov
sub
mov
mov
mov
fcom
stc
sbb
insl
daa
rcrb
jae
jle
outsb
aaa
pop
xchg
mov
mov
test
pop
jmp
test
es
cmp
test
and
sarb
sbb
rorb
shrd
insb
push
rclb
stos
mov
je
idivb
xchg
ret
cmpsl
adc
sbb
aas
lods
push
xchg
insl
test
sbb
fidivs
mov
jbe
scas
pop
lds
pop
js
cmp
jae
fnstcw
clc
add
fsubl
in
dec
pop
and
imul
loopne
ret
lea
push
je
jl
mov
sub
dec
inc
scas
mov
stos
jg
ficoms
pop
dec
test
xchg
jecxz
into
inc
push
dec
cmc
pop
aaa
in
aam
stos
fs
pusha
and
shll
pop
pusha
das
test
pusha
mov
cld
mov
inc
push
or
lahf
and
out
jnp
or
mov
inc
mov
lret
negl
mov
push
clc
lret
inc
inc
movsb
popa
cmp
dec
dec
jbe
push
adc
dec
rorl
inc
jge
push
push
aam
cmp
mov
xchg
push
push
mov
xchg
mov
mov
scas
mov
sub
inc
pop
cmpsl
xchg
cwtl
mov
add
pop
mov
mov
pop
xchg
clc
in
mov
ljmp
inc
hlt
xchg
inc
data16
pusha
and
xchg
sub
fwait
sbb
inc
icebp
pop
fwait
in
test
dec
pop
stos
cmpsl
xor
add
outsl
mov
mov
sti
data16
push
adc
or
adc
sub
jne
mov
push
xor
cld
shrl
sub
shlb
int3
mov
dec
add
dec
ret
mov
jecxz
mov
adc
jne
test
and
adcl
jns
sub
dec
je
fdivl
jl
iret
ror
stos
pop
or
sub
and
xchg
adc
mov
dec
iret
sub
push
sub
sbb
mov
pusha
scas
mov
fistl
mov
nop
or
dec
pushf
ljmp
mov
mov
xchg
xchg
or
push
inc
mov
adc
add
mov
inc
xor
inc
into
and
sub
dec
rorb
rcll
lock
in
push
adc
xchg
insb
inc
pop
sbb
nop
mov
mov
pop
xchg
mov
dec
inc
sbb
inc
hlt
jg
jg
out
xchg
std
dec
sarb
jl
push
fs
inc
jecxz
ret
jnp
scas
lods
nop
cwtl
or
ret
jp
mov
call
and
cltd
cs
addr16
xchg
or
sbb
rorb
push
xchg
add
pushf
sub
scas
es
adc
jne
lcall
push
mov
adc
push
add
jge
add
mov
gs
dec
lods
mov
test
sbb
jbe
sbb
in
movsl
push
jne
jp
xchg
mov
and
push
pop
jl
rorb
dec
aad
and
lods
pusha
clc
jmp
inc
jbe
stc
or
cmp
js
loopne
lds
addr16
adc
inc
push
movsl
call
inc
ljmp
pop
pop
or
popf
hlt
les
fisubrl
repnz
dec
inc
mov
test
aam
pop
je
pop
imul
lods
xchg
dec
sub
push
ljmp
ds
popf
movsl
jl
leave
imul
dec
xor
popa
cld
xchg
pop
and
cmp
int
jg
xchg
scas
loope
cs
sbb
dec
incb
scas
push
push
fs
xor
and
ret
fcoml
or
pop
or
ss
int3
mov
and
daa
push
cmpsl
movsl
mov
cltd
sbb
pop
repz
mov
shll
adc
cs
pop
or
xchg
scas
dec
mov
mov
cmpsb
mov
movsl
shrb
shr
add
stos
sub
hlt
jnp
pushf
sub
adc
test
add
inc
add
xor
sbb
or
sub
xor
stos
xlat
call
test
sub
mov
mov
inc
lret
or
push
jbe
loopne
mov
dec
aam
add
in
repz
sub
mov
movsl
movsb
loope
add
inc
pop
je
mov
loopne
mov
add
sbb
mov
push
negb
mov
and
inc
cwtl
mov
outsl
ret
movsl
push
popa
aas
flds
stos
loope
push
push
lods
and
mov
add
shlb
sub
and
scas
push
cmpsl
pusha
adc
mov
insl
or
cmp
push
aaa
rcrb
push
fcoms
dec
rorb
pop
push
jo
xchg
push
mov
aaa
dec
jl
insb
mov
in
push
lds
clc
pushf
pusha
dec
and
or
sbb
scas
loope
jb
aaa
xchg
cmp
ret
inc
mov
lock
stos
jle
mov
ja
out
sbb
scas
adc
rcrl
xchg
mov
xchg
xchg
sbb
shrb
fnsave
cmpsl
pop
aaa
jo
cmpsb
mov
lods
mov
mov
inc
xchg
hlt
jecxz
adc
adc
pushf
enter
mov
lret
and
cltd
or
leave
mov
sbb
pop
outsb
das
in
xchg
ror
aaa
mov
jl
inc
enter
dec
fistpll
mov
daa
jbe
push
mov
out
popf
loope
fs
fs
adc
dec
das
and
fwait
sub
push
test
or
imul
popf
pushf
lcall
dec
dec
mov
rorl
mov
mov
loopne
cmp
imul
sbb
jae
cmpsb
sub
mov
ror
xchg
in
mov
dec
cltd
sar
pop
inc
and
jl
push
mov
ss
cwtl
jnp
mov
push
mov
aam
cmp
or
add
fisttpll
mull
fdivrs
leave
pop
mov
mov
daa
push
ja
and
dec
test
int3
pop
outsb
out
enter
aad
mov
cmpsl
sti
les
mov
shlb
ja
cmp
outsl
cmp
dec
jbe
sub
sub
sbb
sub
push
sbb
lret
jl
pop
sbb
add
popf
xlat
dec
inc
lcall
insb
ret
stos
or
sub
mov
sbb
lret
adcb
in
xor
pop
rclb
push
xor
sbb
ret
flds
adc
push
sti
or
in
sub
repz
pop
or
dec
hlt
add
dec
std
repz
xor
pushf
lods
xor
jae
sbb
stc
inc
xchg
divl
xchg
movsb
cmp
mov
out
adc
cmc
push
jb
es
inc
ljmp
fs
minps
out
mov
les
jecxz
mov
and
movsl
pop
dec
mov
inc
lods
movsl
sub
fstpt
in
or
out
add
pop
je
shlb
movsl
xchg
pop
sbb
ja
cmpsb
dec
dec
enter
jle
pop
cmp
call
xchg
xlat
add
lds
leave
and
cmpsb
xor
dec
dec
mov
cmpsl
fs
cmp
adcb
dec
je
daa
mov
arpl
jo
push
push
nop
xor
mov
jg
or
sbb
dec
into
mov
test
xor
bound
popf
lcall
sahf
or
loop
mov
mov
inc
cmp
lcall
xchg
ret
dec
add
imul
sub
nopl
adc
mov
mov
xchg
rcl
incb
mov
ds
cmp
shrl
movsb
add
icebp
out
and
cmp
pop
add
adc
sbb
mov
lcall
or
cmp
or
outsl
mov
push
jle
adc
mov
and
lret
dec
push
jb
loop
jge
push
cmp
cmp
cmp
add
test
push
popf
fwait
xor
mov
xchg
jp
mov
add
xchg
mov
aam
test
jbe
jmp
lods
mov
inc
lods
leave
sarl
add
mov
inc
ljmp
insl
jae
push
push
adc
jnp
mov
sbb
push
mov
xor
pusha
mov
mov
icebp
inc
leave
aam
int
test
insb
sahf
fcmovu
and
or
popa
xor
inc
loop
jns
xchg
add
dec
pop
or
pusha
lods
shlb
add
sbb
lahf
and
clc
mov
jb
xor
rcll
xchg
cmp
rolb
sbbb
shl
xor
test
xor
dec
lods
test
or
jmp
xor
outsb
push
cmpsb
data16
pusha
mov
add
cmp
fs
sub
push
sahf
cmpsb
inc
dec
pop
push
push
fisubrs
pusha
sbb
dec
int
nop
pop
jno
inc
lret
jge
test
or
pop
insb
and
mov
cmp
xor
xor
je
stos
pop
ds
and
pop
pop
sbb
xchg
lea
lret
adc
push
pop
mov
dec
mov
loopne
mov
test
mov
pop
mov
movsb
mov
xchg
pop
out
test
mov
cmpsb
push
bound
sti
testl
shlb
les
shlb
inc
mov
fidivs
mov
sub
mov
pop
cmp
sar
push
aad
pop
mov
mov
jp
push
adc
rorb
fnsave
lcall
xchg
loop
lret
cmp
cmpsl
iret
nop
in
sub
pop
addr16
rcrl
pop
popf
cmp
sub
and
mov
loope
sub
cmpsb
dec
push
dec
loop
lods
es
cmp
pop
inc
and
jg
les
insl
cld
fadds
jns
scas
cmc
rorl
cmp
sbb
flds
in
cmp
fcoml
dec
xchg
sub
aaa
std
and
insb
jns
sbb
int
mov
push
cmp
push
push
push
mov
and
mov
adc
rclb
fucomi
push
scas
push
pushf
es
gs
aam
and
jmp
mov
leave
mov
sub
add
mov
gs
cs
xor
ja
mov
and
stc
mov
lock
scas
cmp
jp
inc
pusha
xor
dec
jge
mov
int
push
adc
hlt
mov
push
mov
mov
xchg
mov
out
or
add
and
rcrb
sbb
ret
fistpl
movsb
mov
push
cwtl
mov
mov
add
jp
out
sbb
ljmp
cmp
mov
and
sti
sbb
xlat
mov
mov
or
inc
stc
xor
sbb
icebp
mov
inc
sbb
mov
cmp
movsl
dec
jle
fisttpl
data16
stos
xchg
ret
aas
pop
mov
repz
jp
addr16
roll
dec
jle
das
nop
inc
jg
sarl
xor
mov
imul
add
leave
push
and
cmp
fwait
in
pusha
data16
insl
lods
lret
stos
scas
mov
loopne
mov
xchg
clc
pop
dec
jne
mov
push
lods
jle
lock
das
int3
xorb
xor
mov
pushf
cmpb
lods
jnp
cmp
adc
sbb
mov
dec
pop
mov
xlat
mov
out
adc
cmp
lods
aam
and
lods
inc
jo
test
pushl
push
or
fs
call
or
sub
pop
xor
jle
in
jp
std
adc
fisttpll
lock
jno
lock
dec
jmp
mov
cwtl
adc
or
lds
inc
sub
test
push
fdiv
dec
mov
sar
inc
call
sub
or
sbb
cwtl
outsb
xor
mov
sbb
push
sarl
inc
xor
lods
inc
ror
iret
lcall
xchg
imul
int3
fidivrs
mov
outsb
shll
test
pop
mov
testb
push
cmp
stos
and
stc
or
push
repnz
aaa
loop
je
sbb
cmp
pop
pop
push
and
xchg
loopne
inc
jecxz
out
scas
xor
lds
testb
adc
ret
popf
sub
jns
inc
xchg
dec
xchg
xor
inc
mov
adc
pop
fidivs
loope
and
push
push
xchg
fiadds
in
pop
int
sbb
out
stos
mov
add
push
mov
pop
push
cmp
xlat
int3
push
sub
dec
daa
rol
inc
sti
cmp
sbb
das
test
pop
or
cmc
lods
lock
int
mov
dec
ficoms
das
test
movl
adcl
fcompl
mov
arpl
fwait
dec
mov
sub
cltd
adc
and
sub
cmp
xlat
push
movsl
test
ljmp
sbb
inc
pop
cmc
dec
data16
dec
cmp
out
xchg
lods
lds
push
lahf
sarl
mov
test
sti
popf
push
mov
call
jp
adc
lock
movsb
or
sahf
jmp
add
cmpl
stc
sub
imul
adc
adc
cmpsb
clc
jg
sahf
jp
push
cmp
cmc
push
pop
adc
dec
push
andl
in
cmp
xor
pop
clc
and
jae,pn
imul
outsb
jmp
push
jb
or
dec
shl
fists
mov
lds
test
or
lods
mov
adc
inc
sbb
out
jmp
insb
ret
sahf
ds
xchg
adc
rcrb
mov
fsubrs
sbb
sub
and
in
loope
mov
xchg
mov
push
pop
add
pop
test
jo
dec
adc
pop
shll
add
movsl
pop
loopne
push
in
jb
jb
popa
adc
mov
mov
fucomip
push
mov
mov
fs
jmp
add
outsl
outsb
pop
cs
fs
sbb
jnp
mov
xchg
push
cmp
cmp
pop
push
cmp
inc
popf
cltd
fdivrs
cmp
cmc
sub
popf
push
sbb
add
test
xchg
xorl
in
or
fmul
dec
mov
push
dec
shlb
mov
xchg
stos
mov
push
push
pop
adc
pop
mov
enter
xlat
idivl
dec
add
xor
lea
xor
mov
shlb
cmp
mov
sbb
lret
adc
mov
xchg
addr16
rcrb
stos
jmp
pop
xor
push
stc
pop
mov
pop
push
gs
push
imulb
jle
dec
out
mov
pop
outsb
and
sahf
pop
mov
lds
sti
cltd
pop
xchg
dec
movsl
dec
pop
pop
or
test
push
dec
out
push
mov
dec
jmp
xlat
arpl
dec
mov
pop
mov
jecxz
cmpsb
int
sarl
xchg
or
jae
loopne
push
jg
mov
notl
xchg
and
mov
in
fmul
pop
mov
pop
dec
arpl
jo
hlt
imul
lock
add
dec
scas
sbb
ret
adc
fwait
push
out
mov
shl
pop
add
sub
sbb
mov
jns
xchg
and
adc
scas
das
adcl
mov
test
xor
nop
popf
sbb
xchg
nop
sbb
loope
fs
xorl
out
fwait
sbb
loopne
jecxz
iret
testb
xchg
fistpll
sbb
sub
inc
fs
xchg
call
outsl
xchg
cwtl
xchg
mulb
fadds
mov
iret
cmp
in
mov
add
inc
sti
mov
or
pop
mov
mov
pop
adc
mov
lret
xor
adc
mov
or
mov
xchg
inc
fsubrs
dec
lahf
adc
or
outsb
mov
stc
loop
xor
lods
push
cmpsb
mov
mov
mov
repnz
xchg
pushf
fs
xor
pop
dec
mov
shrl
js
xchg
sub
inc
std
call
fidivrl
mov
mov
das
pushf
unpckhps
inc
push
fldl
push
mov
xchg
or
and
adc
clc
fwait
jp
test
lahf
aam
adc
dec
add
or
pop
dec
sub
arpl
cltd
shr
mov
aam
add
out
fwait
mov
aad
mov
mov
pop
dec
jno
mov
inc
jle
pop
push
iret
or
daa
jns
shll
or
mov
or
sbb
outsl
inc
sub
inc
xor
sub
xor
sbb
pop
pop
leave
add
and
push
mov
mov
test
xchg
cs
mov
fwait
aad
out
xchg
mov
mov
lahf
inc
jb
pop
mov
push
lret
daa
rcll
mov
dec
popf
jnp
cwtl
daa
jge
lods
sub
lcall
pop
mov
jge
loop
add
mov
add
js
cltd
cmp
lock
movsl
xchg
pop
push
sbb
mov
psubsw
ja
pop
cmpl
xchg
jp
in
cwtl
test
xchg
lea
pop
jg
jg
rolb
jmp
and
push
xchg
xchg
and
pop
mov
adcb
xchg
hlt
loop
insl
mov
adc
sbb
cwtl
cwtl
xor
mov
pop
cmp
push
mov
xchg
xlat
pop
xor
mov
aaa
sub
dec
cmpsb
sbb
adc
lods
fwait
insb
inc
pushf
adc
cmpl
ja
jnp
les
jp
mov
push
cs
lods
std
std
lret
inc
or
gs
add
inc
inc
xchg
int3
clc
and
ror
cltd
roll
lret
das
lods
rolb
xchg
push
int
add
enter
mov
mov
pusha
jmp
mov
and
inc
mov
mov
pusha
adc
scas
sbb
fistpl
aas
ret
aas
cld
pop
jle
lahf
icebp
cmp
shld
leave
movsl
out
push
roll
and
pop
ja
add
fwait
sub
and
mov
divl
jmp
inc
or
mov
push
mov
mov
and
sbbb
icebp
stc
test
ss
icebp
scas
jno
mov
add
cs
fimull
hlt
xchg
movsb
xor
lcall
lret
loop
lds
test
xchg
pop
and
pop
pop
cmp
addr16
icebp
push
mov
and
bound
sub
popa
out
xchg
mov
js
push
lods
sub
lea
into
mov
imul
or
ja
mov
sti
stos
sub
mov
mov
pushf
insl
mov
sbb
jae
inc
cmpsl
test
inc
test
nop
imul
jnp
lods
push
or
xchg
jge
ret
mov
and
lcall
jo
enter
adc
xchg
lahf
pop
fwait
inc
xchg
testb
and
dec
xchg
in
repnz
xor
xchg
clc
sti
in
xchg
mov
loope
jne
hlt
adc
addr16
jae
cmp
dec
test
je
lods
icebp
xchg
cmpsb
sti
mov
mov
cli
dec
out
inc
adc
test
mov
mov
push
sbb
and
lock
out
sbb
rcr
sbb
lea
pop
pop
pop
push
shl
mov
int3
addb
sub
xor
inc
jecxz
insb
pop
shl
pop
leave
ret
stos
inc
test
xchg
and
or
mov
lods
mov
sbb
mov
pop
movsb
mov
sub
add
jne
lea
rorb
imul
daa
out
sti
inc
addr16
insl
jmp
jp
mov
rcll
test
rep
repz
sub
insl
mov
sub
sahf
js
xchg
mov
jmp
enter
adc
dec
test
les
fucomp
mov
dec
adc
add
stos
jns
jno
adc
mov
fistpl
jo
and
mov
and
mov
push
push
add
push
inc
push
movsl
scas
rcrl
imul
icebp
loop
ds
gs
mov
loopne
hlt
jns
cld
pop
pop
leave
aas
outsl
dec
out
add
imul
xor
adc
mov
repz
out
mov
cmp
pop
sbb
fistpll
adc
or
imul
sbb
scas
sbb
push
clc
or
mov
xor
jl
incb
stos
add
ja
xlat
out
mov
xchg
jmp
stos
cmpsl
push
pop
lods
nop
sub
iret
icebp
nop
or
xchg
lret
cli
leave
aas
and
jo
out
pop
mov
repz
jecxz
ljmp
push
ret
add
in
cs
xchg
mov
cmc
mov
pop
and
mov
and
fisttps
pop
sub
outsb
pushf
hlt
hlt
loopne
das
cmpsb
jl
cmc
pop
cmp
or
xor
add
xchg
inc
add
ljmp
pusha
jns
dec
leave
pop
mov
int3
mull
mov
daa
aaa
xchg
js
stos
mov
and
lea
pop
insl
hlt
daa
jo
jp
loop
cwtl
adc
repz
out
fldenv
xor
popf
subl
mov
int3
cwtl
or
mov
fcmovnu
imul
jno
add
xchg
hlt
js
subl
stos
mov
mov
mov
xor
ja
jg
dec
fs
or
mov
hlt
mov
pop
or
mov
stos
sbb
add
cld
das
push
cmp
pop
inc
scas
sbb
inc
mov
adc
inc
pop
pop
in
fildl
fcomps
insl
push
stc
repnz
mov
shl
in
sbb
stc
fildl
ficoms
stos
cmp
or
jmp
test
insb
pop
mov
add
in
lds
xchg
sarl
clc
sub
mov
fidivrs
adc
rol
mov
icebp
xchg
jnp
out
jbe
inc
sbbl
jne
imul
ficomps
cs
pop
xlat
xor
sbb
dec
ret
clc
xchg
jg
in
xchg
mov
rcrl
jg
jb
pop
pop
add
pop
int3
mov
es
dec
or
or
shll
or
leave
xchg
out
mov
imul
je
test
adc
mov
nop
jne
loopne
inc
shlb
ret
add
and
mov
push
into
mov
or
aam
mov
out
pop
jl
jmp
inc
fnstenv
data16
mov
hlt
adc
lcall
mov
pop
mov
popa
ja
jmp
xor
lret
sbb
jle
mov
mov
and
mov
ds
lcall
mov
mov
sbb
cmpsl
movsl
sbb
or
mov
push
fwait
pop
mov
fidivl
adc
jbe
pop
xchg
dec
fxch
dec
xchg
inc
inc
cld
cmp
in
cmpsl
pop
jb
inc
sbb
scas
mov
insb
mov
or
test
add
mov
adc
mov
jl
or
adc
mov
sub
int
xor
jecxz
sarb
jno
pop
fs
mov
pop
dec
lock
les
cli
cmp
xor
jg
nop
push
negl
pop
ds
xchg
pop
dec
dec
je
ljmp
icebp
in
xchg
mov
push
mov
dec
hlt
and
pop
test
inc
mov
sbb
dec
daa
add
push
cltd
gs
arpl
jmp
cmp
adc
repz
add
push
and
inc
pushf
repz
push
cli
dec
and
or
fisttpll
mov
mov
mov
icebp
arpl
lds
push
adc
jno
sbb
add
xchg
jnp
out
pop
sti
and
adc
cmpsb
movsb
add
mov
and
xchg
xor
int
imul
data16
data16
xchg
in
out
aad
lods
adc
and
in
call
mov
dec
and
jo
insl
jne
icebp
cli
lea
ss
mov
fdivs
test
push
addl
pop
pop
sub
ret
mov
dec
or
push
sbbl
std
add
in
enter
jp
les
sahf
in
sbb
adc
subl
cmp
mov
xor
inc
aad
lret
adc
mov
adc
sahf
xor
insl
ret
cs
and
adc
add
sbb
enter
or
mov
sti
mov
dec
bound
insb
enter
call
push
cltd
sbb
or
or
push
sub
sbb
mov
aam
dec
in
andl
push
aaa
sub
pop
jecxz
push
lret
stos
pop
cwtl
mov
fsubl
xor
in
inc
movsb
adc
out
jge
pop
mov
jge
repz
fcomp
bswap
xlat
sub
pop
rcrl
adc
sub
mov
cld
sub
or
orb
out
mov
insl
std
mov
imul
inc
outsl
pop
mov
cmp
pop
xchg
mov
mov
in
test
fcompl
lods
outsb
pop
or
movsb
inc
push
test
push
nop
cmp
xchg
mov
imul
int3
rorb
mov
call
arpl
add
out
adc
scas
ss
pop
sub
stc
mov
addr16
add
and
int3
lods
shll
insl
gs
lcall
test
inc
movsl
jns
imul
insb
std
rcll
scas
icebp
xor
xor
sub
test
ljmp
and
sub
js
inc
je
xorl
outsl
jle
sub
repnz
out
int
aam
shlb
xlat
fwait
mov
jle
sub
subl
mov
loope
loope
sbb
movsl
in
bnd
insl
and
xor
out
fsubrs
mov
into
in
sbb
sub
leave
lcall
mov
pop
jge
push
stos
jge
jno
sub
cmp
and
push
lods
negb
gs
pop
in
pushf
sub
xor
add
mov
stos
sbb
stos
pop
sbb
mov
jnp
add
add
loope
shlb
and
add
cwtl
xchg
loopne
lods
mov
mov
lods
cmc
es
cltd
mov
mov
sub
daa
test
mov
add
mov
in
mov
pop
icebp
rcll
adc
fiaddl
jae
mov
in
sbb
test
mov
ret
cmp
mov
sub
dec
sbb
dec
test
out
xchg
les
vcvtdq2pd
add
outsb
mov
mov
lcall
rcl
loope
clc
cmpsl
insl
shl
add
push
mov
cld
and
movsl
testl
ret
rcrb
inc
lods
and
adc
lds
add
dec
mul
push
mov
out
jle
jne
movsl
or
and
xor
sbb
xchg
addb
fs
loope
fnsave
or
pop
test
cmp
dec
lds
sub
cmc
pop
xchg
dec
add
cmc
jmp
pusha
mov
subb
inc
cmp
adc
and
pop
mov
mov
adc
in
pushf
jmp
mov
inc
bound
pop
xchg
xor
pop
jo
cs
and
lods
mov
divb
adc
xchg
movsb
subl
push
int3
mov
add
push
mov
cmp
xchg
adc
sub
cmp
movsb
cs
cld
arpl
pop
or
fnstsw
loope
fsubp
sub
jo
ret
xor
add
iret
scas
fstpl
mov
or
ucomiss
pop
or
subl
pop
and
into
mov
mov
in
and
or
push
in
outsl
cmp
cmc
and
fildl
aas
in
test
in
inc
inc
ret
addr16
loop
ljmp
fdivrp
pop
xor
lret
xchg
xchg
lret
mov
out
push
pushf
cs
pop
mov
adc
mov
pushf
sbb
xchg
dec
arpl
lret
and
inc
cmp
sahf
inc
mov
mov
pushf
push
jge
or
adc
jnp
stos
mov
dec
add
dec
scas
pop
sbb
clc
push
insb
ja
clc
or
cmpsl
fwait
sbb
mov
mov
scas
insb
arpl
popa
test
mov
pop
sbb
lods
jecxz
push
insl
out
push
jno
int
fdivrl
cmpsl
jecxz
cmpsb
and
mov
mov
loop
xlat
ret
lods
xor
addr16
mov
cmp
clc
iret
jp
dec
sub
gs
inc
stos
inc
mov
aad
addl
mov
or
xchg
ret
add
add
pop
push
jge
xlat
pop
pop
or
xchg
pusha
jg
loope
adc
dec
int
xchg
enter
in
jns
cmc
jbe
lcall
and
jge
aad
call
push
xchg
and
cmp
mov
push
fcoml
dec
pop
mov
mov
dec
xchg
rorl
inc
add
fwait
in
sub
and
shr
adc
test
lock
frstor
test
pop
inc
scas
add
xchg
push
add
mov
or
dec
and
xchg
roll
test
pushf
xchg
pop
lock
repz
icebp
lret
add
mov
in
mov
xchg
cltd
jo
into
xchg
idivl
loope
orb
into
ficoml
mov
xor
mov
les
imul
loop
lods
orb
int
dec
pusha
inc
jae
mov
scas
repz
in
lret
imul
out
dec
lea
mov
adc
enter
imul
negl
pop
mov
cld
scas
into
dec
lcall
int3
insb
int
mov
pop
add
popf
out
addr16
pop
icebp
movsl
js
in
insb
sub
jp
xor
and
pop
stos
add
mov
fs
xchg
out
adcl
test
gs
mov
idivl
mov
mov
mov
lods
jbe
jae
loop
in
mov
sar
insb
jl
mov
jne
sub
sahf
mov
sbb
cmp
mov
adc
xchg
roll
jecxz
jb
out
xor
call
pop
adc
pop
mov
xchg
inc
add
dec
xchg
or
data16
mov
cmp
mov
sbb
js
gs
test
cli
addr16
jbe
aam
sub
sub
test
mov
cmp
jecxz
push
int
mov
push
fwait
xchg
xor
cld
add
fdivrl
push
add
fs
loop
push
jle
int
fsubs
in
or
adc
sahf
popa
ljmp
std
and
xor
add
pop
scas
sub
mov
push
stos
xchg
xor
int
mov
adc
mov
adc
loopne
out
xlat
cmpsl
cmp
pop
hlt
xchg
xlat
mov
sbbb
aam
jl
pop
in
icebp
or
sbb
mov
popf
ds
popf
and
pop
and
or
xor
mov
aas
lods
push
fcoml
mov
mov
xorps
adc
push
rclb
xchg
lret
leave
adc
and
ror
lret
cwtl
adc
or
push
push
orb
rolb
jne
sbb
pop
xchg
inc
mov
sub
dec
cmp
mov
and
xchg
jl
push
mov
jno
pop
comiss
mov
loopne
push
mov
pop
mov
add
shll
rolb
sub
push
enter
out
imul
shr
mov
repnz
fwait
lret
push
gs
jecxz
lret
pop
jbe
and
push
es
add
mov
int
out
push
push
xor
or
mov
iret
mov
popa
jns
lea
push
mov
lret
pop
sbb
daa
sbb
dec
out
jge
call
js
mov
imul
mov
xchg
rcrb
mov
jnp
rcrl
fcomps
jnp
sub
ret
push
cltd
add
iret
lock
lret
inc
and
fs
dec
jo
xor
insl
sub
dec
mov
inc
or
inc
loop
sbb
outsb
xor
jp
sahf
mov
inc
sbb
adc
dec
mov
pop
and
push
les
and
test
fmull
add
fcmovne
cld
adc
sti
jmp
mov
int
cltd
ja
out
dec
push
movsb
out
loopne
mov
sbb
jg
js
les
ds
mov
jnp
mov
out
je
std
jp
xor
mov
pop
aam
sbb
jmp
jns
repz
ja
xchg
jnp
outsb
jb
pop
loop
pop
add
jo
int3
adc
insb
push
out
or
add
mov
push
add
outsb
xchg
add
frstpm(287
mov
or
iret
and
add
rol
jp
shll
push
stc
add
mov
push
pusha
inc
xor
in
mov
test
push
nop
pop
fwait
stos
push
mov
rorl
or
pop
test
jmp
ss
mov
lret
add
jmp
or
jmp
enter
and
jl
in
xchg
dec
int
cli
push
mov
cmp
lods
ret
rcr
jae
movsl
jmp
push
out
leave
push
ljmp
sub
xor
push
adc
fs
lds
mov
adc
ja
jg
dec
stos
pop
inc
shl
das
xchg
subb
test
add
test
ret
or
and
jmp
sarl
xor
mov
pop
jnp
mov
pop
or
sahf
sub
lock
loopne
into
cmp
adc
lods
pop
inc
repnz
test
jno
pop
dec
js
inc
fistps
lret
fsubrs
mov
jne
les
mov
push
cltd
rorl
call
lcall
or
adc
jnp
lret
mov
jns
xor
pop
aad
int
add
js
sub
test
dec
fwait
inc
cmp
popf
pushf
daa
lock
sub
rol
xchg
sahf
ret
jl
mov
mov
mov
mov
and
dec
push
fwait
add
sub
movsb
mov
push
fs
lea
out
mov
int
dec
leave
xor
add
cmp
int
pop
sub
inc
test
mov
inc
ret
popa
inc
lret
dec
mov
addb
or
sbb
loopne
mov
pop
mov
stc
mov
movsl
jp
jne
jb
movsb
jb
push
sub
cs
adc
cmpsl
lret
movsl
out
jbe
je
jno
xor
mov
xchg
xchg
xor
mov
xor
mov
push
or
sahf
popa
and
pop
mov
aad
iret
pop
fidivs
fcomp
push
inc
dec
pop
lods
mov
jg
aad
sub
mov
xchg
scas
pop
test
jg
mov
push
mov
enter
test
lret
movd
rclb
mov
dec
cwtl
xorl
adc
cmp
jmp
lcall
jno
lret
mov
pop
jp
adc
sub
push
in
jmp
insb
out
jo
rcrb
jmp
adc
push
leave
add
psubb
add
pop
mov
jbe
jb
stos
sbb
xchg
ret
out
mov
les
cmpsb
mov
xchg
and
push
rcrb
add
mov
and
fldlg2
xchg
imul
mov
sbb
sub
push
jnp
lods
xor
pxor
inc
add
mov
andl
fisttpll
enter
ret
mov
sbb
sub
fcoml
sub
dec
in
pop
dec
lret
push
mov
xor
insl
add
subl
inc
mov
scas
or
mov
hlt
cmpsb
scas
pushf
shll
ljmp
mov
aam
add
jge
into
popa
jnp
add
xchg
mov
lds
jno
daa
xor
cmp
add
sbb
test
pop
insb
add
outsl
sahf
jmp
xchg
jle
in
outsl
fldt
rorl
movsb
inc
ljmp
inc
xchg
bound
ds
jg
in
or
jg
lahf
xor
fdivs
icebp
stos
mov
add
aas
inc
cmp
mov
lods
mov
dec
xchg
cmpsl
stc
rcl
into
enter
lret
in
stos
jmp
aam
add
adc
adc
dec
mov
sbb
add
insb
pop
lret
mov
add
psadbw
andb
sub
loopne
test
mov
scas
andb
outsl
aaa
dec
outsl
jmp
mov
adc
or
loop
pusha
repz
push
pop
jb
pop
cmc
in
push
scas
inc
dec
adc
pop
out
jo
in
popf
mov
insl
rcll
pop
out
inc
sbb
test
mov
js
or
lods
sbb
xchg
mov
xchg
pop
fs
in
xor
lds
pop
mov
push
or
sub
mov
popl
or
fdivrl
lods
cwtl
fs
int
xchg
loopne
mov
sub
push
das
les
test
or
sub
int
lds
adcb
pop
pop
dec
inc
add
ret
incl
mov
rcrb
lds
push
mov
and
fnstenv
jae
inc
cli
jnp
into
iret
out
lods
and
push
mov
mov
into
loope
cli
jmp
inc
or
jns
dec
mov
in
sbb
mov
in
pop
pop
dec
adc
dec
push
test
test
shll
or
imul
ljmp
cwtl
decl
xlat
push
loopne
pop
and
add
mov
inc
or
mov
mov
shll
lock
movsb
ret
or
test
stos
js
sub
cltd
mov
out
mov
mov
adc
mov
sbb
mov
and
jge
jmp
and
aam
jl
aad
jne
rclb
cmpsb
pop
sti
stos
loope
sbb
mov
cmc
iret
and
or
jno
mov
sub
outsl
fsubrl
in
dec
mov
push
pushf
pop
sarb
enter
mov
pushf
mov
mov
mov
repz
scas
mov
roll
cmpsb
add
dec
pop
cld
jno
push
or
push
int
inc
mov
or
loopne
jmp
cmp
fadd
cmpl
pusha
jo
lahf
jge
push
into
repz
pop
rcll
mov
out
cmp
push
fbstp
xor
dec
inc
xorl
in
mov
in
fwait
out
incl
sub
ja
mov
stos
xchg
aas
pop
fcomip
pop
push
cmp
xchg
xchg
push
outsb
rolb
adc
fbld
dec
or
in
pminsw
cli
repz
test
pushf
pop
cmp
jle
hlt
test
jne
push
xchg
cs
mov
sbb
fmuls
push
adc
iret
add
inc
mov
and
fs
into
out
push
ja
outsl
push
lahf
js
mov
mov
test
sbb
fimull
negb
popf
mov
xor
add
mov
xchg
inc
out
insb
dec
or
xchg
in
dec
mov
gs
lahf
push
gs
jge
adc
pop
jns
pop
jg
sarb
mov
sarl
sub
jle
pop
cli
pop
xlat
out
xchg
jge
outsb
dec
adcl
jno
sbb
jns
fsub
popf
mov
jo
mov
add
mov
out
or
xchg
lock
mov
mov
std
add
sahf
jg
into
or
pop
fistl
aam
mov
push
fs
ljmp
mov
pop
ss
iret
xchg
mov
ljmp
xchg
mov
mov
lret
lret
pop
mov
jmp
push
dec
add
push
js
rorb
in
aaa
mov
subl
test
icebp
and
je
xor
lret
lods
inc
adc
lahf
sarl
scas
outsl
popa
xlat
out
inc
xchg
mov
pop
imul
data16
pop
out
mov
scas
push
pop
into
lods
add
fs
cmp
sub
adc
jo
out
insl
or
test
lock
inc
or
add
out
and
cmpsl
sub
andb
xchg
test
mov
rcrl
mov
movsb
repnz
or
out
nop
in
fcmove
mov
cmp
mov
int3
push
dec
jp
movsl
jmp
inc
in
sti
mov
mov
mov
aam
je
mov
or
mov
adc
lock
jae
xor
dec
fldt
push
adc
mov
stc
dec
or
addb
add
ret
xor
xchg
dec
or
scas
jnp
loope
das
jbe
mov
mov
or
jle
stos
xchg
inc
or
mov
in
jmp
rorl
xchg
jge
popf
test
cmp
mov
jmp
mov
in
pushf
cmpsl
aam
fnstcw
xchg
and
sub
lahf
push
out
fsubl
stos
push
cld
popf
or
cmp
sbb
adc
xchg
jns
mov
movsl
dec
adc
sub
lods
xlat
insb
in
mov
popf
cmp
dec
and
cmp
pushf
push
mov
outsb
lods
loope
xlat
clc
sub
loope
cmp
insb
push
shl
stos
pusha
lock
mov
test
std
inc
out
adc
add
scas
fmull
je
dec
jno
imul
shlb
leave
mov
inc
ret
lea
test
dec
movsl
rcrl
and
push
scas
cmpsl
mov
outsl
dec
jg
mov
notl
mov
data16
mov
sub
dec
mov
imul
in
icebp
xchg
or
pusha
push
arpl
jnp
in
call
dec
subl
dec
mov
inc
cmpb
adc
sbb
push
out
or
inc
or
ret
sbb
ja
mov
add
mov
or
and
add
pop
cmp
push
ds
jns
add
movsb
sub
out
outsb
insl
test
xchg
pop
adc
mov
repnz
adc
add
test
add
arpl
mov
outsb
in
test
dec
in
scas
popa
adc
fcompl
mov
add
repz
jmp
in
xor
faddl
cwtl
outsb
outsb
jge
push
jl
jmp
jmp
mov
sar
push
adc
add
push
andps
xchg
setno
sbb
fcompl
aaa
adc
dec
cmc
sbb
cmp
and
xchg
cs
mov
pop
push
loopne
mov
jno
jmp
outsl
xchg
add
pop
imul
das
insl
and
ljmp
aaa
clc
add
popa
xor
leave
dec
test
sbb
mov
adc
movsl
nop
mov
popf
mov
pop
xchg
lahf
sub
mul
pushf
pop
rorb
dec
inc
sub
jmp
cli
xchg
dec
adc
mov
xchg
xchg
pop
add
sarl
cmp
repz
into
inc
pop
aaa
dec
popf
adc
cmp
filds
inc
and
stos
mov
pop
cli
dec
push
iret
push
loope
xchg
adc
add
pop
xchg
in
mov
and
lahf
sub
pop
aaa
adc
mov
xor
cs
pop
mov
jecxz
jb
cwtl
xchg
rcl
inc
sbbl
pop
loop
push
imul
sbb
cmpsb
loope
xchg
insb
pop
clc
mov
pop
fsubrs
mov
xchg
stc
fstps
mov
in
jo
scas
add
push
jae
pop
rdmsr
imul
pushl
test
inc
leave
push
mov
fstpl
xchg
test
outsl
cmp
xor
push
push
jmp
or
xchg
das
test
in
cmp
out
dec
cmp
popf
pop
sub
popf
das
loopne
enter
inc
jp
push
mulb
cltd
ljmp
mov
addl
mov
mov
pusha
test
pop
out
mov
in
fwait
xor
push
sub
pop
xor
xor
mov
vmulss
jb
stc
adc
pop
movsb
or
push
ret
mov
jbe
sbb
repnz
insl
jb
aaa
inc
push
lods
mov
jo
xlat
cwtl
xchg
jne
out
in
mov
jo
push
inc
dec
xchg
jns
mov
cmp
movsb
inc
lahf
daa
nop
pop
out
fisubrl
lods
popf
mov
andl
lock
lea
idivl
pop
jmp
fists
pop
push
lcall
pop
loopne
pop
shr
mov
xor
test
or
or
xlat
sbb
dec
inc
push
push
mov
ldmxcsr
sub
pushf
iret
lret
or
lret
push
stc
and
sti
mov
movsb
mov
inc
es
cmp
out
push
pop
pusha
lods
lahf
notb
inc
cmc
shrd
les
dec
sbb
movsb
jbe
mov
xor
in
pushf
lods
fisubrl
cmpsb
sbb
xlat
faddl
pop
aaa
pop
in
ja
mov
les
pop
pop
cmpsl
inc
push
xor
in
push
rol
jbe
ljmp
push
xlat
add
out
out
fcmovu
inc
pushf
aad
lods
and
xchg
mov
sarl
xchg
push
iret
and
cld
xlat
enter
movsl
fwait
loopne
mov
mov
sbb
or
roll
test
fs
loop
xor
in
inc
jne
enter
cmpl
or
insl
mov
mov
sbb
xchg
sub
and
icebp
xchg
adc
ret
scas
xorl
test
jle
or
push
add
rep
arpl
aas
lret
and
lret
or
jl
iret
movsb
ss
push
xor
mov
aam
jno
stc
les
clc
pop
sub
int3
jne
pushf
push
lock
push
ljmp
out
push
jbe
lea
fisttps
jge
fcomi
add
es
xor
dec
mov
aas
cmpb
cmp
pop
jns
mov
jns
sbb
js
stc
enter
inc
cmp
xorb
jl
sbb
mov
sub
or
mov
sbb
adc
jnp
push
and
ja
insl
mov
push
push
sub
push
add
insb
mov
pushf
jae
cmp
int
add
lahf
pusha
mov
mov
rorb
imul
pusha
adc
mov
adc
inc
loop
repz
push
mov
jb
adc
mov
out
push
cmp
orb
jns
dec
adc
lods
lods
daa
inc
inc
loop
std
push
cli
jg
insb
fstpt
add
scas
push
cmc
pop
push
bound
xchg
arpl
aaa
std
fwait
mov
mov
es
into
lods
push
sbb
push
loop
roll
in
insb
push
mov
jb
xor
es
dec
and
out
adc
lahf
mov
insb
and
mov
lea
je
stos
mov
scas
sbb
xchg
int
jmp
rcl
out
insb
imul
pusha
mov
mov
lods
sub
dec
mov
stos
mov
push
int
pop
mov
std
pusha
roll
int3
dec
cmp
push
mov
push
arpl
outsl
movsb
aam
pop
sahf
data16
mov
pop
test
or
sbb
into
dec
pop
insl
push
bound
adc
pop
ret
cs
pop
xchg
lcall
mov
push
mov
pop
movsb
nop
ret
repz
or
mov
mov
js
aad
movsb
mov
popf
nop
jno
out
adc
rolb
out
lcall
fdivrl
mov
push
push
mov
inc
jno
ret
xor
cmp
mov
mov
inc
fdivrs
mov
js
rolb
pop
jp
iret
into
mov
std
out
lcall
stos
jb
jne
out
ret
fistps
xchg
lock
mov
lds
fidivl
movsl
push
mov
or
inc
push
rolb
or
xchg
mov
subl
pop
sti
adc
pop
pop
xor
and
shll
scas
loope
sbbl
jne
jae
inc
sub
push
filds
shlb
push
dec
sbb
loop
sbb
cmpsl
in
ja
subl
mov
cmpsb
cltd
orl
pop
mov
sub
ljmp
cld
test
and
fwait
mov
in
pop
ljmp
mov
test
inc
jne
lret
and
cmc
push
rcr
scas
ret
jecxz
cmp
fld
imul
sub
gs
stos
sub
dec
scas
add
mov
mov
or
mov
leave
cwtl
cmp
dec
lods
jae
pop
fwait
mov
add
mov
das
imulb
inc
testb
pop
dec
ss
pushf
xor
mov
xchg
jne
inc
jnp
inc
dec
and
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
cmp
fwait
dec
.byte
mov
dec
mov
cmpxchg
addl
dec
add
jb
add
cli
arpl
lds
les
xor
lds
jno
shll
sub
fcmovb
mov
fiaddl
mov
jb
mov
fcmovb
gs
arpl
fwait
enter
pop
pusha
sbbl
push
leave
ret
mov
sub
mov
mov
out
and
jp
lret
jl
xchg
lods
jns
clc
ret
sbb
loopne
les
loop
mov
fisubrl
pop
pop
and
mov
popf
jae
mov
stos
pop
test
sti
or
stos
stos
xchg
lds
mov
lds
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
fcmovb
mov
jp
es
es
push
and
in
dec
into
dec
cli
ret
popa
fcmovb
mov
hlt
pop
mov
xor
mov
push
iret
or
add
or
mov
xor
shll
lds
add
les
lret
shlb
xor
test
dec
decb
hlt
stc
repnz
hlt
pop
mov
xor
es
mov
add
mov
fcmovb
lods
mov
lret
aam
jae
and
cmp
addr16
decb
hlt
pop
lods
push
xchg
mov
fcmovb
daa
sbb
lret
aam
jae
and
cmp
addr16
decb
hlt
pop
lods
xor
push
mov
or
into
dec
stc
in
add
mov
iret
or
add
les
lret
shlb
xor
and
sbb
aas
ficompl
das
fcmove
mov
push
divb
dec
push
mov
inc
fdivl
aad
dec
repz
jo
mov
int3
in
ret
fidivl
and
xor
pop
les
loope
lret
jae
mov
int3
sahf
lret
mov
fisubrl
insl
fcmovb
insl
out
and
or
and
push
mov
or
mov
sbb
movsl
pusha
inc
inc
mov
dec
int
mov
mov
lahf
aad
jl
jp
inc
adc
stos
lret
pop
mov
call
xchg
es
cs
popa
in
std
push
push
xchg
stc
xlat
push
sub
int
or
and
shlb
cltd
mov
add
fldcw
sbb
dec
mov
jo
ljmp
add
int
push
stos
and
lea
fldl
inc
mov
add
cmp
pop
pop
std
jl
mov
fucomip
lret
jb
and
movsb
stos
jae
dec
mov
out
sahf
inc
fs
jg
sarl
out
icebp
mov
and
rcl
cmp
or
mov
push
xchg
rcrl
pop
bound
xchg
sub
or
or
aas
jp
lods
leave
scas
ret
or
dec
jmp
pop
jecxz
and
dec
and
pop
add
fmulp
test
int
aas
push
inc
jecxz
lret
outsb
inc
mov
and
cli
ficomps
push
js
fs
stos
mov
leave
inc
imul
fcmove
sahf
cmp
jp
les
leave
in
jecxz
xor
mov
xchg
dec
insb
jecxz
push
pusha
jns
aad
and
push
popa
shlb
pop
jb
test
scas
rolb
cmp
adc
int
xlat
rcl
loope
xchg
or
pop
jb
rorb
test
xorb
test
xchg
mov
and
adc
pop
mov
scas
out
fs
or
pop
lea
pop
fwait
push
int
repnz
mov
mov
repz
dec
jp
or
ret
or
lds
jb
outsb
std
fcmovb
pop
ret
inc
adc
je
mov
pushl
stc
push
lret
mov
inc
daa
arpl
mov
repz
dec
aas
sbb
test
testb
ret
pop
sti
cmp
popf
xlat
es
or
int3
inc
mov
xchg
lret
sub
sbb
mov
cmpsl
adc
jb
addr16
js
mov
out
mov
xchg
icebp
xchg
sar
mov
fmuls
stos
in
cmp
leave
xlat
lds
subb
mov
in
int
repnz
dec
mov
push
nop
lea
xorb
lret
inc
mov
std
mov
adc
in
xor
fistps
xchg
mov
xor
sub
and
push
fnstenv
ret
or
repnz
mov
mov
xchg
xor
cmpsl
pop
stc
andb
ss
lret
adc
xchg
test
adc
mov
push
iret
xor
push
test
pop
xor
jae
add
mov
arpl
xchg
push
shlb
cld
sbb
addl
leave
dec
cmp
cmp
mov
cmp
mov
fs
cmpb
scas
mov
mov
leave
hlt
mov
dec
loopne
loop
xor
aad
rcl
cmp
clc
sbb
repz
add
xchg
xor
repz
mov
lret
pop
push
inc
popf
cmpsb
pop
adc
and
xchg
lock
outsl
push
cwtl
and
sahf
inc
push
ja
out
movl
repz
fwait
pushf
dec
std
sbb
push
ret
out
xchg
fdiv
dec
cmp
mov
mov
aad
cmp
lret
inc
adc
ret
popf
inc
sbb
mov
lret
mov
and
dec
ljmp
movsb
test
push
repnz
leave
lds
jecxz
push
ja
mov
push
xchg
mov
xor
enter
mov
xchg
addr16
sbb
jmp
xor
or
stos
shll
and
repnz
repz
jnp
int
iret
dec
xor
arpl
cmp
mov
inc
das
movb
push
stos
dec
es
repz
mov
inc
cmpb
sub
ret
imul
mov
push
test
push
ja
enter
add
jle
ss
mov
dec
pop
cmpl
add
jecxz
popf
xchg
rcrl
pushf
inc
or
in
mov
push
lcall
aaa
fcomi
xor
mov
pop
mov
sub
lret
roll
push
or
imul
xchg
and
mov
pop
and
jge
insl
iret
pusha
pop
sbb
mov
push
xchg
sti
or
xor
jnp
mov
loopne
in
or
pushf
hlt
test
sub
jge
adc
ja
pop
cmpsb
lea
incb
cld
je
je
fistl
cmp
ds
ret
sub
sub
xor
or
push
cli
add
dec
pop
pop
stos
repnz
jae
push
sub
or
xlat
dec
mov
mulb
imul
sub
mov
xchg
inc
push
out
icebp
xor
mov
mov
je
inc
dec
ret
into
cmc
mov
fnstenv
inc
dec
sub
lahf
jmp
pop
ss
lea
push
shr
les
out
mov
add
bound
adc
idivb
cmp
jbe
xchg
adcl
arpl
scas
mov
adc
test
xchg
cs
adc
stos
mov
cmp
insl
scas
mov
cmp
lods
stos
add
mov
mov
add
add
bound
int
rcrb
testb
mov
leave
xor
and
leave
inc
rcr
ret
push
lcall
ret
lret
hlt
enter
inc
and
enter
or
push
aam
dec
inc
mov
sub
push
sti
jmp
mov
and
fiaddl
pop
gs
cmp
push
imul
push
dec
sbb
lds
cmpsb
arpl
mov
xchg
xor
ss
shll
lcall
repnz
les
flds
and
xlat
cmp
les
fimull
xchg
cli
test
scas
cmp
push
call
pop
lods
test
mov
jmp
lods
test
mull
jae
out
push
out
jecxz
push
enter
mov
stc
aam
inc
lock
jae
daa
cmc
fsts
push
ffree
or
or
repz
adc
fwait
mov
cli
lds
dec
loope
sahf
aam
add
fildll
test
xor
mov
push
jnp
mov
cmp
mov
aad
movsl
lds
xchg
out
lcall
lock
stc
jmp
cmpsb
ja
adc
fsub
data16
cmpsb
enter
iret
add
rol
lahf
jmp
push
add
mov
js
les
rol
cmpsb
push
ds
cmp
and
stc
je
or
dec
adc
and
ret
loop
pop
or
xor
cli
gs
out
dec
sti
bound
push
ror
xor
mov
leave
fnstsw
sti
repz
mov
rcrl
pop
les
icebp
movsl
test
loopne
mov
andb
dec
stos
and
push
mov
jnp
xchg
push
ret
push
ss
or
ja
jb
and
mov
int3
cmpsb
aas
mov
mov
sub
sarb
or
cmc
and
fs
hlt
or
int
push
jmp
inc
jp
bound
sbbl
outsb
gs
imul
in
pusha
test
dec
or
jl
cmpl
cwtl
test
fidivrl
sbb
stos
pop
jmp
lock
sti
pop
repz
cmpsl
inc
out
hlt
mov
ret
ja
cld
mov
cmp
pusha
mov
inc
jb
adc
in
dec
xchg
arpl
add
sti
add
sti
popa
sar
stc
adc
xchg
repz
mov
jnp
jbe
ljmp
dec
outsb
dec
or
mov
imul
add
mov
mov
stos
and
push
out
mov
xor
fwait
or
stc
mov
orb
mov
cmp
pop
push
inc
rclb
fidivs
cmp
popf
lret
cmp
xchg
lds
fcmovb
cmpps
repz
arpl
and
xchg
pop
dec
cmp
cmp
mov
jae
fsubrs
lock
aas
jb
push
push
pusha
pop
xor
sub
inc
pop
pop
sub
lods
rorb
push
mov
mov
xor
sub
xor
mov
cmc
adc
divb
push
in
mov
jnp
inc
sbb
cmpsb
arpl
jmp
mov
mov
jl
xchg
ljmp
movsb
shlb
sub
les
add
cmp
andb
mov
jle
hlt
js
test
shlb
xor
and
lret
jge
fwait
or
push
or
cmp
jp
stc
mov
fmul
dec
sarb
xor
sahf
xor
xor
inc
sub
mov
cli
psubusb
addr16
lods
hlt
testb
ljmp
mov
xchg
pop
call
pop
push
pop
mov
out
sub
test
sbb
cmpsl
pop
dec
xor
stos
xor
scas
dec
mov
pop
jne
inc
int3
scas
lret
add
les
push
incb
cmp
add
sub
jg
add
mov
mov
pop
outsb
sbb
cmpsl
outsb
push
loopne
add
insl
fsub
fwait
mov
mov
mov
je
mov
jb
addr16
xchg
cltd
in
aas
mov
sub
pop
sar
sarb
shlb
sub
pop
mov
add
sub
add
enter
in
cmp
mov
test
mov
repz
mov
inc
aam
fcmovne
sbb
cmp
adc
xor
dec
idiv
or
loop
fdiv
fadd
mov
xchg
mov
xchg
jp
hlt
add
shrl
lret
sbb
jae
int3
daa
andb
mov
shll
push
lret
and
roll
in
mov
xor
mov
mov
dec
loop
push
push
sbb
movsl
adc
push
test
push
ljmp
ret
in
inc
add
add
pusha
and
rcr
sti
arpl
dec
dec
es
adc
out
mov
sbb
add
mov
cmp
lods
adc
pop
ds
mov
leave
cmpb
xchg
add
fcmove
jl
pusha
jns
add
test
fnstsw
pop
push
sbb
sbb
and
sub
and
push
lret
leave
sub
imul
stos
out
push
loope
mov
dec
ljmp
mov
dec
pop
in
js
iret
push
push
imul
jb
filds
clc
and
stos
jnp
mov
mov
call
movsb
ret
fadds
out
sub
movsb
xchg
test
cmp
mov
std
lcall
roll
out
ds
xchg
lcall
fistl
jne
jb
cli
pop
add
imul
push
test
imul
fidivs
ret
mov
ret
ret
mov
jns
push
xchg
ret
out
add
andl
nop
pop
les
adc
push
bound
pop
pop
fidivl
jns
mov
mov
and
xchg
jne
test
sti
mov
clc
sub
mov
push
fiadds
loope
push
dec
movsb
scas
lcall
in
scas
loope
fwait
xchg
int
sbb
fidivl
jp
push
jo
xchg
mov
mov
je
or
lret
insl
shlb
pusha
xchg
loope
xor
std
dec
add
punpckhdq
xchg
adc
push
push
add
loop
scas
jle
or
add
nop
cmp
repnz
cmp
data16
sbb
xchg
adc
shll
xchg
jb
sub
in
lods
sbb
add
sti
mov
add
add
mov
xor
push
sbb
jbe
jmp
pop
or
adc
aaa
rorl
outsb
push
cld
add
lods
add
push
xchg
mov
orl
repnz
xor
push
popa
add
pop
andb
call
and
aam
and
inc
inc
inc
jp
push
or
add
xor
fldcw
push
add
mov
mov
je
cmp
cmp
push
mov
push
push
in
mov
les
mov
add
std
mov
mov
sahf
das
daa
adc
nop
jbe
sti
pop
jg
pop
clc
or
rclb
lahf
add
js
subb
mov
push
mov
loope
aad
adc
ja
es
les
cmp
push
sbb
xor
or
adc
les
fildl
data16
dec
fld
daa
dec
out
stc
mov
test
add
inc
nop
push
or
mov
dec
inc
lock
mov
xchg
rcrb
push
mov
pusha
lds
mov
or
testl
fmuls
lret
aam
inc
or
rcl
cmp
movsl
fmull
push
aaa
push
sahf
pop
or
testl
insb
shrl
mov
jmp
add
jge
pop
xchg
cmp
in
add
push
mov
sbb
ds
and
int3
add
cmp
push
push
in
inc
fidivrl
mov
xchg
push
xor
push
adc
pop
add
leave
adc
pop
std
and
inc
inc
ficomps
mov
inc
aad
es
xor
add
add
rorl
jns
or
cmp
pusha
imul
aas
dec
js
jl
sbb
addr16
test
loope
in
loope
inc
cmp
mov
mov
into
xor
cmp
add
sub
shl
dec
sbb
xorl
loop
orl
aas
rcll
mov
sbb
lock
xor
pusha
fnstsw
add
xchg
push
shll
pop
pop
or
shlb
lahf
hlt
xchg
add
mov
jg
push
jmp
sbbb
push
inc
add
insl
xor
or
frstor
or
movsb
sbb
into
jo
fisttpl
in
cltd
xlat
loopne
test
fsubrs
mov
test
jbe
sub
dec
or
and
clc
pop
repz
add
mov
push
mov
in
arpl
inc
xor
in
xor
and
ljmp
or
add
fstpt
xchg
adc
pop
stos
mov
or
xlat
and
mov
adc
adc
sbb
dec
rolb
mov
push
inc
jb
fcmovu
inc
ds
mov
pusha
subb
bound
shlb
and
mov
pop
and
call
sarb
jnp
rolb
mov
sbb
jae
and
daa
jnp
add
adc
pop
sbb
mov
js
jge
xor
add
add
out
push
pop
dec
cli
outsl
or
ror
or
mov
bound
or
cmp
inc
cld
add
mov
xor
addb
sbb
xor
ja
mov
int3
test
and
test
nop
aad
jge
sbb
jne
inc
push
in
jns
nop
cmp
stos
sub
adc
ror
mov
mov
imul
and
mov
add
sub
movsb
pop
push
sbb
test
adc
rclb
xor
arpl
sbb
outsl
sbb
or
das
push
add
andb
adc
jge
les
or
movl
mov
or
clc
lea
pop
cmp
mov
and
jb
mov
sbbb
pop
xchg
mov
adc
inc
mov
sub
adc
xor
inc
aas
sub
ror
daa
xor
pop
cmp
push
in
loopne
add
cs
test
xor
adc
push
fisttpl
xchg
dec
push
incl
jle
mov
sub
imul
dec
mov
mov
faddl
aaa
and
inc
inc
subb
enter
es
stc
pop
and
loope
aam
je
testb
jl
rolb
imul
clc
sahf
mov
jmp
pusha
js
shrb
and
fs
inc
arpl
in
aas
inc
sbb
pusha
xor
subb
mov
cmp
sbb
shlb
or
sub
mov
inc
jl
sbb
jnp
ret
sub
pusha
fs
aaa
pop
je
lock
jae
inc
in
push
faddl
rcrl
sbb
push
jp
sahf
mov
cmp
add
rclb
xchg
aam
push
les
push
sub
lock
jg
add
xchg
jns
dec
lds
add
jg
push
adc
and
xor
loop
cmp
pop
push
popf
cmpsb
jl
rolb
mov
cmp
mov
add
mov
inc
lods
mov
test
or
add
add
inc
xor
dec
leave
arpl
xor
inc
aaa
hlt
cmp
pop
fistps
mov
stc
mov
adc
mov
inc
or
add
push
add
leave
sub
xor
aaa
insb
mov
int3
inc
pop
inc
dec
mov
and
cs
inc
ds
adc
xchg
pop
nop
shlb
xchg
inc
popa
je
hlt
sbb
pop
cmpsb
in
les
aas
cli
lods
mov
hlt
jns
cld
push
fwait
or
pop
cmpsb
add
int3
fsubr
xor
sbb
xorb
or
imul
movsb
daa
push
out
imul
sub
rolb
outsl
push
push
or
pusha
xchg
mov
adc
int3
loope
lock
add
inc
rcrl
fsubrs
or
lods
jno
cmpb
insb
add
pop
sbb
mov
js
add
aad
or
inc
je
fisubs
clc
push
mov
popf
addr16
mov
add
xchg
enter
test
xchg
cmp
fsub
dec
mov
dec
in
pop
add
or
ljmp
enter
inc
xor
nop
les
insl
adc
sbb
sbb
xchg
lret
les
adc
add
pop
xchg
js
cwtl
sbb
test
and
and
push
and
jl
ds
or
outsl
out
subl
rolb
jno
rolb
cmp
push
pusha
test
and
add
lea
lock
insb
test
cmp
outsl
pop
shl
jns
int3
cmp
mov
inc
add
aam
scas
xchg
sbb
adc
es
pop
or
roll
or
sbb
add
ror
mov
sarl
dec
or
pop
jecxz
xor
inc
mov
cld
aam
frstor
xor
xor
jmp
add
pop
lret
mov
and
and
ss
pop
mov
rorl
push
ret
and
hlt
dec
xchg
inc
pop
stos
cmp
mov
or
xchg
int3
and
and
str
aad
jmp
les
push
cmp
jmp
rcll
or
test
or
add
adc
pop
in
add
iret
andb
pop
sbb
mov
int3
xor
add
fimull
push
les
lock
js
inc
mov
lret
push
push
lret
or
pusha
test
popf
out
add
or
bound
or
inc
add
xorl
cmp
sub
int
scas
or
xchg
cmpsb
shll
loopne
test
and
sbbb
add
and
ja
add
test
fs
xor
xor
je
sub
loope
and
or
addb
adc
add
xor
cmp
cmp
pusha
pop
out
incl
rcll
lcall
xor
je
or
dec
and
test
sub
repnz
out
mov
mov
jno
jns
xchg
pop
shl
sbb
mov
cli
add
dec
insb
add
adcl
cmp
push
dec
adc
push
cwtl
sbb
pop
push
aaa
ficompl
lret
inc
push
outsb
loop
pop
in
adc
jecxz
into
inc
enter
rol
fnsave
mov
jo
mov
in
pop
fnstcw
or
enter
xchg
incl
adc
jle
add
cmp
dec
jae
test
dec
jg
xchg
cmpb
and
adc
mov
mov
call
mov
inc
mov
aam
add
movsl
or
ds
inc
dec
add
into
inc
aas
stos
xchg
inc
mov
pop
nop
test
and
ret
inc
cli
dec
nop
cmp
add
xchg
mov
into
sub
and
push
clc
test
inc
and
adc
push
filds
dec
lret
inc
sbb
cmp
loope
mov
pusha
lret
test
or
mov
lea
loopne
lcall
sbbb
les
out
rol
sub
or
shlb
jae
movsb
mov
enter
add
cli
in
sbb
scas
rclb
add
lock
pop
cmp
add
push
dec
in
or
mov
inc
cmp
enter
rorl
cmp
stos
ret
stos
mov
fs
xchg
je
gs
shl
test
enter
add
js
mov
into
pop
inc
into
push
and
cmp
nop
or
dec
enter
mov
sti
out
add
out
shr
mov
sbb
pandn
and
lret
inc
cltd
and
and
mov
idivl
lret
inc
add
mov
and
repnz
shl
mov
push
es
inc
add
lahf
add
jmp
adc
mov
mov
mov
xchg
add
roll
ja
push
frstor
sub
add
pop
dec
push
in
and
add
test
pop
lock
mov
or
mov
xchg
test
add
xchg
mov
add
push
jg
into
inc
mov
add
adc
xchg
push
int
xchg
test
adc
test
daa
pop
lahf
loope
inc
dec
inc
fwait
mov
sbb
cltd
push
shl
sbb
or
mov
jp
mov
sbb
inc
jmp
or
sbb
mov
lret
and
xchg
je
sbb
pop
or
add
loopne
jo
mov
xor
xor
ret
call
cmp
mov
add
cmp
loop
rcr
push
cmp
pop
sub
lods
movl
mov
jmp
sub
cwtl
loopne
and
add
mov
mov
xor
xchg
add
or
test
xlat
mov
mov
mov
in
add
inc
mov
adc
mov
mov
je
add
mov
sub
repnz
jnp
shlb
sbb
jle
adc
nop
add
or
pop
sbb
xchg
rclb
cmp
pop
inc
cmpb
inc
out
sub
dec
loop
sub
mov
rcrb
add
shr
push
push
in
fistl
lock
or
ja
loopne
jb
add
sub
ljmp
jge
jo
sub
aaa
es
push
sbb
test
cli
mov
sbb
cli
add
mov
sub
cmp
add
cmp
jge
cld
filds
ret
add
push
test
push
pusha
mov
ja
adc
and
xchg
pusha
push
xor
cmpsb
mov
and
add
xchg
andb
call
and
out
push
repnz
test
shlb
mov
sub
sbbb
xchg
inc
mov
xchg
xchg
push
cld
insb
hlt
es
mov
inc
out
or
in
js
stc
mov
ret
mov
dec
stc
or
stos
add
ss
subl
jmp
and
andl
push
in
sar
xor
aam
popa
mov
daa
pop
ret
shr
outsl
sbb
xchg
pop
test
mov
push
test
push
add
lea
pop
push
pop
xchg
rorb
cmp
mov
add
mov
sbb
xchg
shlb
push
add
xor
add
in
sub
nop
pushf
dec
or
inc
fs
xchg
loope
shlb
pop
add
arpl
es
adc
adc
xchg
mov
cmp
push
and
in
add
pusha
push
pop
jb
and
push
cmp
sbb
mov
mov
loopne
mov
pushf
mov
xor
sub
jo
xorb
push
sahf
cmpsb
push
insb
cmpsb
mov
enter
test
insb
ficoms
aaa
adc
mov
add
or
pusha
xor
jle
jae
add
test
xchg
mov
mov
pop
inc
mov
mov
inc
adc
or
pop
out
push
jno
cmp
loopne
inc
ret
mov
dec
mov
mov
bound
movsb
or
test
sbb
push
in
clc
mov
inc
sub
jl
jg
add
xchg
outsl
sub
push
out
ret
pop
jmp
icebp
cmc
sub
icebp
or
pop
add
call
and
jl,pn
add
aam
out
call
sub
nopl
inc
in
pop
mov
xor
cltd
sub
xchg
push
jmp
and
jg
shlb
sbb
mov
sub
mov
sub
insb
les
dec
or
adc
mov
leave
mov
lidtl
std
and
mov
mov
shll
jne
adc
push
mov
loopne
sub
cs
rcll
push
push
adc
or
iret
into
inc
nop
cmp
out
int3
cld
fs
push
mov
mov
cltd
sha1msg2
dec
inc
hlt
inc
xchg
and
decl
clc
pushf
faddl
xchg
pop
lret
jl
fmuls
inc
push
cs
add
call
mov
cmp
xchg
xchg
mov
iret
adc
dec
ret
test
sbb
sbb
addr16
mov
jle
into
push
adc
add
mov
daa
sub
movsl
sbb
sbb
or
insb
aam
test
lock
jl
sub
mov
pop
ja
hlt
xchg
call
and
sbb
idivb
add
arpl
mov
push
mov
xor
in
loopne
mov
icebp
ret
jl
adc
and
push
push
jo
hlt
push
mov
fcoml
mov
dec
cmp
lea
adc
aas
rclb
pushf
loopne
add
icebp
xchg
call
int3
mov
cs
inc
cmp
add
adc
mov
sarb
pop
sbb
mov
pop
sub
frstor
xchg
hlt
inc
shr
xor
int3
adc
add
or
pop
jl
lcall
popa
mov
inc
gs
enter
mov
pusha
lret
adc
jle
out
adcb
fbstp
pop
pop
in
insl
negl
addr16
mov
addb
clc
adc
mov
pop
add
gs
sbb
je
add
pop
sub
jmp
jnp
jmp
xor
xchg
and
je
jb
or
cwtl
fildl
inc
pushf
daa
lret
or
ret
adc
inc
enter
shll
sub
lock
aam
out
rolb
sub
push
test
add
in
cmp
les
sbb
lods
dec
and
adc
push
pop
xor
mov
clc
push
adc
and
lret
mov
add
push
push
shrb
outsl
loop
les
mov
push
dec
xchg
jle
cwtl
push
sbb
lods
nop
jl
loopne
push
outsl
test
push
in
sub
inc
adc
mov
add
jg
lret
dec
enter
xorl
adc
and
or
or
sbb
push
mov
mov
inc
popl
insb
inc
stc
and
cmp
fsub
add
test
sub
dec
push
xchg
fidivrl
jno
sbb
add
mov
data16
add
lock
or
xchg
sub
mov
sbb
sbb
or
or
cmc
or
push
iret
inc
out
mov
daa
test
or
cwtl
and
add
cmp
add
xlat
inc
inc
fdivs
rcr
add
or
inc
inc
add
les
popa
jb
add
in
adc
dec
pop
test
jl
add
clc
stc
pop
mov
rolb
inc
loopne,pt
or
push
xchg
mov
jns
adc
pusha
pop
stos
adcb
jle
and
dec
fcoms
pop
inc
addl
cltd
and
mov
clc
jae
dec
rclb
in
movsb
cmp
add
mov
in
and
bound
adc
or
stos
jp
ret
mov
lods
sbb
imul
xchg
fildl
shlb
sub
enter
int3
cmp
xlat
cmp
and
mov
cmp
shrl
push
lret
fcoml
add
xlat
add
and
aaa
push
call
test
mov
mov
ds
inc
js
mov
sbb
pop
ror
in
loopne
aas
mov
inc
flds
jmp
push
mov
enter
aaa
and
and
pop
movsl
add
int3
int3
imul
add
inc
fcomps
pop
mov
push
pop
loope
pop
add
xor
xchg
mov
mov
int3
enter
rcrb
gs
mov
aad
lock
cmpsb
sub
xor
jns
pop
out
scas
cmp
fsubl
adc
test
add
xor
outsl
cmovge
sub
and
push
inc
jbe
mov
or
jecxz
dec
xchg
fsubl
xor
je
jecxz
adc
or
xor
lods
lods
cmp
mov
es
push
jb
push
adc
imull
adc
pusha
mov
lahf
push
cmp
jno
cmp
xor
and
scas
ss
js
icebp
jle
pop
mov
dec
add
clc
enter
xchg
jg
dec
mov
xor
cmp
mov
or
mov
inc
jl
xlat
rorb
xchg
lock
iret
int
cs
sbb
and
inc
sbbl
inc
jp
pop
imul
cwtl
fwait
push
inc
lock
pop
pop
mov
jbe
xor
sbb
orl
xor
clc
aas
mov
add
popf
xor
mov
lock
xor
sub
jg
and
jae
cmp
or
push
sbb
call
sub
stos
rcrl
adc
pop
sbb
inc
aas
pop
shl
cmp
xorb
incl
pop
cld
xor
arpl
fcmovb
in
stc
out
popf
mov
rcr
or
rcrb
and
adc
rorb
jmp
sbb
sbb
pop
dec
pusha
test
sub
les
xor
pushf
or
aas
pop
lret
add
mov
std
sbb
lock
mov
cwtl
mov
xchg
dec
paddusb
addr16
add
mov
dec
or
in
je
sahf
push
jbe
imul
lret
fistl
cmp
inc
test
inc
out
rcrl
ds
xor
jge
dec
lock
add
jo
rol
loopne
add
mov
lock
mov
inc
loopne
aas
fadd
dec
xor
rorl
dec
out
sub
xchg
data16
enter
dec
in
add
jecxz
cmp
les
call
xor
lcall
xchg
int
aaa
cmp
lods
add
fwait
sbb
pop
ja
bound
jno
sbb
outsl
push
xorb
enter
or
addl
sub
xor
cmp
pop
lods
dec
mov
cmpb
adc
xor
inc
in
sub
enter
aad
mov
push
rclb
mov
mov
or
inc
push
std
stc
sbb
icebp
pop
movsb
sbb
rcr
aas
loopne
sub
sbb
aaa
daa
loop
inc
mov
pop
cmp
xchg
leave
push
inc
add
test
cltd
inc
xchg
push
stc
add
je
repnz
pop
loopne
test
cmp
cmp
push
xor
decl
mov
or
int3
sub
add
ret
aam
lea
xor
rclb
jmp
call
inc
sbb
inc
pop
dec
in
movsb
push
sbb
sbb
or
jmp
sbbl
arpl
test
sub
lods
ficoml
push
cltd
and
inc
push
sbb
mov
and
clc
add
movsb
lock
inc
mov
add
mov
jp
push
cmp
mov
or
sysexit
mov
mov
jo
sub
orb
test
jl
test
int
push
mov
push
and
mov
aad
pusha
pop
test
xlat
lret
int
mov
insb
lods
mov
fstps
mov
lds
int3
ret
rcll
lret
icebp
movsb
sarl
xor
mov
addr16
xor
pop
popa
or
jmp
rolb
inc
nop
pop
cwtl
dec
cmpsl
loopne
int
ds
hlt
xlat
mov
cltd
mov
xorb
in
add
pop
mov
aaa
mov
movsb
insb
in
js
iret
pusha
test
cwtl
mov
inc
mov
mov
push
js
mov
cmp
lret
and
mov
sub
ljmp
adcb
js
push
sub
mov
rorl
add
dec
cmp
xor
push
sbb
pop
jp
and
cli
jecxz
movb
movsl
adc
cwtl
inc
add
mov
cs
jbe
rcrl
jb
push
sub
test
insb
sub
add
xchg
out
dec
xchg
inc
or
add
out
pusha
xchg
add
std
test
push
mov
push
inc
jle
mov
sub
add
insl
pop
outsb
adc
sub
xor
mov
fdivs
lock
cwtl
or
pop
sbb
rcrl
inc
inc
fsubl
bound
aam
pop
popl
cmp
mov
push
movsb
cmp
and
mov
pop
xor
push
push
test
icebp
enter
hlt
ficoml
pop
and
add
data16
cmp
pop
pop
call
xchg
ja
add
js
xchg
mov
pop
lahf
test
fadd
dec
jecxz
outsl
test
and
lahf
aaa
lods
add
es
ljmp
inc
pushf
je
jnp
or
stos
ret
clc
sbbb
enter
push
sub
rclb
add
push
loopne
rorb
xlat
enter
daa
fimull
test
lret
adc
inc
ret
std
dec
cmp
add
add
in
or
push
adc
sub
or
cmpsl
and
mov
adc
stos
inc
jl
push
jecxz
jno
mov
mov
xor
or
loopne
jb
add
xchg
cmp
pop
out
int
pop
sub
add
sub
out
inc
dec
in
mov
sbb
cmp
mov
jle
mov
sti
sbb
aad
sub
pop
mov
or
iret
loopne
mov
sub
push
aad
add
shll
or
nop
jp
adc
xchg
aad
add
hlt
mov
int3
push
sbb
imul
inc
leave
pop
mov
fisttps
push
jo
fnstcw
sub
movsb
popl
daa
or
loopne
xchg
push
xor
jae
or
mov
xchg
out
jle
sar
test
mov
popa
fstpl
clc
in
adc
nop
fisubrl
cmp
dec
sub
sbb
insb
or
xchg
out
pusha
push
outsb
and
sbb
rcrl
inc
mov
not
fistps
pop
fmulp
inc
mov
or
mov
sub
cmpsb
jmp
add
ja
cmp
pop
adc
mov
inc
and
adc
and
mov
add
mov
jmp
adc
and
push
pop
movsb
add
int3
test
scas
push
movmskps
push
push
shlb
jge
cmc
or
in
and
rcrl
lods
xchg
pusha
and
cs
add
popa
or
sub
adc
cmpsb
cld
jae
xchg
test
leave
rcrl
xorb
repnz
inc
lret
sbb
fsubrs
sbb
rcll
add
nop
push
lods
rcrb
inc
aam
aas
xor
cwtl
pop
jno
push
jae
out
nop
pop
adc
mov
mov
inc
daa
fdivrl
jge
mov
hlt
rol
icebp
add
inc
and
aad
aas
jo
jae
add
or
negb
inc
jle
mov
mov
lahf
int3
fildl
adcl
sub
or
or
add
jge
sti
lods
es
push
push
or
stc
int3
fxch
sbb
pop
xlat
dec
jl
xchg
sbbb
push
mov
and
mov
mov
pop
pop
inc
adc
fcomps
jno
out
inc
pop
fimuls
mov
dec
mov
xchg
int
push
xor
arpl
pushf
and
mov
xchg
and
pop
jnp
aam
xchg
inc
pop
fmull
mov
dec
outsl
cmp
mov
push
add
cmpb
jl
jmp
add
adc
mov
mov
mov
push
ss
xchg
jmp
cmpl
jge
pop
mov
xor
sub
ret
push
loop
bnd
dec
adc
loop
mov
add
mov
cmp
jae
fildll
fsubs
dec
and
pop
ja
mov
pop
je
repnz
movb
push
and
add
in
push
and
pusha
in
xchg
mov
dec
lret
ljmp
xchg
pop
sub
sahf
or
nop
aam
ja
push
xorb
jl
and
pop
push
je
mov
add
scas
mov
repnz
test
adc
mov
int
add
pop
xchg
pop
loop
dec
pop
sub
and
push
adc
mov
push
sbb
mov
push
xlat
xchg
jo
dec
popf
or
push
flds
popf
inc
fsubl
xchg
add
adc
and
xchg
or
mov
and
sub
pop
ror
or
inc
ja
sbb
sbb
outsb
rolb
pop
arpl
enter
add
or
cmc
inc
inc
jae
add
sub
xor
test
and
pop
inc
enter
sbb
inc
mov
das
mov
iret
xor
cmpps
pop
shlb
sbbl
mov
dec
imul
sbb
and
fisubl
fmull
ltr
add
push
mov
add
es
sub
adc
sub
cmpsb
mov
dec
push
div
scas
push
xchg
mov
es
sub
mov
or
and
add
pop
pop
inc
jb
nop
mov
or
push
inc
lret
test
xchg
inc
xor
stos
shl
mov
popa
or
pushf
jl
test
xlat
mov
xchg
je
in
daa
in
jmp
call
rcpps
loop
sub
mov
or
xor
push
or
pop
cmpsb
xchg
test
xor
mov
imul
lea
mov
outsb
dec
cmp
cwtl
xchg
add
mov
rclb
popl
stos
dec
pop
inc
hlt
pop
pop
xchg
aad
subl
dec
sub
test
inc
mov
ret
or
dec
icebp
scas
fimuls
mov
lods
ror
sub
outsb
out
loopne
dec
cltd
sbb
dec
rcr
loop
add
lret
lea
sub
inc
nop
fwait
add
push
mov
mov
add
adc
fwait
sbb
xlat
mov
mov
mov
mov
inc
or
cwtl
ljmp
fadds
test
loop
mov
pusha
mov
pop
adc
mov
das
cmp
loop
mov
lock
inc
and
js
iret
cmp
xlat
add
lods
adc
mov
cwtl
arpl
cmp
mul
push
sub
or
aad
mov
jl
dec
cmp
cmp
test
mov
inc
dec
ret
ret
leave
rolb
jae
call
jmp
and
enter
pushf
or
loopne
pop
mov
mov
in
sbb
push
mov
mov
aam
fs
xchg
xchg
sub
or
lret
aam
xor
push
stc
sub
wrmsr
mov
fninit
pusha
mov
xor
cmp
sahf
push
notl
loopne
mov
mov
pop
mov
mov
or
lret
sbb
add
repz
jo
cmp
shl
imul
xor
inc
and
pop
testb
jp
dec
or
in
or
sub
lock
jno
loopne
pop
add
fdivr
cmpl
aad
das
pusha
pop
loope
fistl
xorb
mov
add
mov
faddp
mov
mov
jmp
nop
add
pusha
xor
fstl
popf
push
into
and
addb
popf
cmp
and
add
push
mov
popf
in
or
movsb
subb
xor
arpl
mov
pop
fcompl
adc
sbb
ja
push
les
leave
push
adc
enter
add
or
dec
sub
pop
mov
jbe
test
mov
out
lret
test
add
cmp
mov
add
inc
stc
mov
int3
inc
mov
data16
sbb
mov
stc
insb
lret
out
inc
pop
fisttpl
inc
inc
push
out
les
xor
roll
test
into
test
mov
inc
or
and
or
arpl
dec
mov
testb
push
clc
nop
sti
xchg
imul
lcall
sarl
ja
dec
cmpsb
mov
cmp
mov
add
loopne
pop
or
inc
mov
in
es
xor
fidivl
push
fcompl
imul
lods
mov
add
xor
pop
adc
dec
iret
addl
inc
stos
hlt
and
or
jl
daa
and
outsl
mov
xchg
aam
add
cmp
dec
shl
xchg
add
loop
mov
lock
fwait
loopne
in
outsb
sbb
inc
sarl
sbb
jnp
mov
rcrb
mov
add
sahf
push
pusha
xchg
mov
outsl
xor
gs
jg
add
ss
dec
loopne
jae
in
pop
pop
leave
inc
add
jmp
xor
vpcmpeqd
aam
sbb
int
inc
fsubrs
jnp
das
add
mov
inc
sub
push
cmp
pusha
cmp
fcmovbe
lret
in
adc
popa
add
jle
out
clc
movb
mov
xchg
int3
daa
jns
pop
pop
pop
shrb
mov
les
fisttps
xchg
repnz
pop
xchg
movl
in
insb
loopne
addb
gs
pop
ficomps
pop
inc
xchg
push
pop
push
ja
cmpsb
add
mov
insb
xlat
hlt
inc
lret
mov
sbb
xchg
jl
mov
arpl
jo
jle
out
xlat
pop
aas
lahf
or
daa
dec
add
movsb
and
or
pop
out
shl
push
push
sbb
movsl
jmp
and
or
jmp
inc
pop
sub
jae
and
inc
jb
cmp
mov
into
sti
aam
lret
sub
pop
setg
inc
mov
push
adc
dec
cs
out
aam
sahf
push
je
mov
movsb
push
jne
mov
lret
xor
inc
adc
cmp
unpcklps
dec
roll
push
mov
or
out
js
mov
lea
push
or
lods
movsb
in
inc
push
test
xlat
ret
and
loope
test
fadd
pop
into
test
out
inc
push
fstpt
pop
xor
ret
mov
imul
jl
adc
enter
and
mov
mov
mov
rorl
rcrl
icebp
push
mov
mov
nop
cmp
das
cld
mov
loopne
ljmp
shll
xorl
inc
les
out
xor
cmp
and
push
add
sub
xor
mov
mov
pop
es
jp
add
push
xor
and
xchg
and
test
mov
popa
in
or
sbb
inc
mov
cmp
jmp
xchg
xchg
xor
pushf
sub
loopne
jns
and
dec
inc
scas
mov
lds
sbb
xchg
data16
mov
std
mov
mov
pop
data16
adc
stc
lds
jo
or
mov
sbb
add
sbb
out
lahf
or
and
decb
xor
sbb
jb
and
pop
mov
xor
add
notl
mov
imul
mov
faddl
sbb
push
in
imul
xor
test
or
iret
xchg
adc
add
cwtl
sbb
lea
or
mov
fstps
insb
sbb
fiaddl
cmpsl
rclb
add
ud1
or
push
and
pusha
inc
hlt
add
jg
inc
out
jmp
dec
pop
or
inc
clc
jmp
cwtl
insl
mov
push
in
testb
xchg
push
into
add
dec
push
dec
mov
andl
gs
int3
add
sub
cmpb
les
pushf
push
xlat
enter
mov
xchg
mov
jb
or
negl
mov
stos
pop
jp
mov
adc
js
lds
fldl
out
add
pop
aaa
loope
or
dec
cmpsb
add
data16
imul
xor
adc
add
nop
mov
fimull
sbb
add
cmp
jmp
and
adc
pushf
call
add
inc
nop
cmp
push
mov
ss
mov
test
xor
sub
add
add
cmpsb
or
loop
mov
ror
push
fists
adc
xor
aad
jge
pop
inc
frstor
and
xchg
mov
cld
xor
add
sbb
mov
icebp
rcll
xlat
cmp
bound
pop
xorb
movb
sbb
and
inc
xlat
add
sbb
and
push
loope
aam
push
push
sub
subb
xor
jb
mov
shll
loopne
verr
adc
inc
ret
and
fisubs
lcall
aaa
pop
ljmp
incb
pop
adc
inc
arpl
aad
ret
sti
mov
add
popl
arpl
pop
call
mov
scas
insl
cmp
push
aad
js
xor
push
inc
adcl
pusha
pop
cwtl
mov
mov
push
xchg
test
jge
adc
xor
jno
pop
xchg
scas
pop
mov
add
or
add
lds
adc
sahf
aad
ljmp
jns
or
add
and
arpl
and
adc
add
mov
pop
mov
icebp
fistpl
push
jg
sub
xchg
pop
push
mov
mov
aaa
and
pusha
push
adc
sbb
push
inc
push
inc
filds
repz
loopne
push
daa
xor
mov
pop
and
add
mov
inc
or
inc
jno
sub
pop
mov
shrb
jecxz
fimuls
sub
mov
cmp
and
int
inc
or
xor
lret
add
and
ficompl
adc
pop
adc
cmp
inc
push
sbb
pop
frstor
lret
lods
or
pop
mov
inc
andb
scas
shlb
enter
or
mov
inc
fcoms
pop
inc
in
sub
rcr
movsl
inc
or
bound
lret
sub
pop
mov
cmp
icebp
and
nop
mov
xor
dec
jae
add
push
movsb
push
inc
adc
add
cmp
aas
mov
xchg
add
cs
enter
sbb
stos
dec
mov
mov
pusha
orl
mov
sub
cmp
cmpsb
pushf
loope
sbb
cli
sub
mov
add
jge
push
pop
mov
xchg
xor
daa
popf
leave
jne
cmp
das
mov
or
lret
inc
mov
clc
add
pop
add
fcoms
mov
mov
cmp
test
mov
bound
rclb
sti
push
sbb
stos
xchg
and
adc
mov
jnp
adc
add
test
or
or
add
mov
aad
insb
cli
cwtl
movsb
add
and
lret
test
dec
shrb
push
xlat
sbb
je
add
adc
inc
call
jo
xor
push
push
out
scas
and
in
sbb
dec
push
push
js
loopne
lret
or
cmp
mov
lret
into
daa
and
inc
call
jl
add
scas
les
push
add
mov
aaa
push
call
push
inc
popf
push
xor
pop
pop
push
jnp
jge
mov
leave
ficoml
and
das
cmp
adcb
pop
loopne
push
lods
movsb
iret
enter
movsb
jae
orl
add
mov
lret
cmp
push
pop
ja
es
jo
cmp
or
mov
movl
ret
fst
mov
dec
lods
add
lods
and
sbb
mov
push
int3
enter
call
pop
xor
and
nop
xchg
mov
pop
dec
gs
and
jl
sbb
aas
mov
mov
daa
insl
and
push
pop
cmp
add
pushf
or
or
push
sbb
scas
ficomps
add
mov
sub
jecxz
mov
cmp
and
inc
or
mov
cwtl
pop
pop
in
and
inc
lods
or
psubd
add
jg
mov
pop
jb
test
popa
xor
or
imul
in
inc
or
jb
mov
add
into
fdivr
push
mov
outsb
or
loopne
testl
mov
xor
les
fmull
adc
rorb
stc
pop
ljmp
fdiv
mov
mov
rcr
fsubrl
cmp
adc
sub
sbb
pop
jo
or
mov
shl
pop
sbb
rorb
rolb
mov
aam
mov
repnz
adc
fwait
ret
mov
into
lock
mov
xor
add
ffreep
dec
lret
sbbb
mov
leave
dec
stc
push
add
sbbb
xor
movsb
mov
outsb
nop/reserved
cmp
rcrb
loopne
sub
add
hlt
jmp
jo
dec
adc
xor
pop
lds
movsl
dec
insb
dec
rsqrtps
addl
add
or
pop
push
push
jno
fisubrl
push
rolb
bound
jecxz
and
aaa
adc
rep
movsb
add
pusha
das
sbb
fdivr
fldt
in
les
rorl
test
cmp
inc
pop
jb
adc
push
mov
jnp
inc
ja
adc
leave
mov
fisttpl
mov
pop
xchg
enter
sbb
push
add
cmp
shrb
scas
cmp
jge
jl
insb
mov
pusha
into
or
pop
dec
cmp
mov
mov
fiaddl
dec
int
sbb
scas
jmp
jnp
jge
cwtl
test
arpl
int3
or
mov
clc
dec
mov
jno
xchg
adc
insb
mov
adc
inc
lods
sbb
sbb
and
or
das
jne
xor
and
add
mov
pcmpeqb
or
adc
into
pop
jecxz
or
push
or
pop
xlat
nop
mov
mov
add
jnp
je
loopne
pop
popa
sub
mov
fwait
into
dec
das
xchg
aas
rclb
in
jle
xor
and
adc
sub
loopne
int
sbb
add
in
mov
push
mov
add
and
cmp
sub
jae
pop
add
fimuls
mov
pusha
mov
in
add
xchg
subb
mov
lret
pop
mov
push
sbb
sub
fldl
xor
adc
pusha
les
mov
push
paddusw
lea
add
jbe
mov
sbb
fistps
inc
push
inc
nop
rorb
test
iret
inc
pusha
add
pop
sahf
int3
mov
sub
test
sub
xchg
push
xlat
iret
jno
pop
pop
cmp
or
sub
dec
inc
andl
insb
adc
sbb
xor
or
mov
sbb
add
imul
add
lea
add
xchg
scas
sub
leave
rorb
push
push
inc
mov
push
fmull
ds
push
or
xchg
xor
xor
sbb
lock
lea
insb
inc
add
rclb
fcomp
inc
add
int3
test
add
fdivr
jb
out
call
int
xchg
cmp
loope
cli
mov
stos
pop
add
pop
ret
jmp
fsubs
cmp
cmp
sub
les
dec
xchg
inc
add
pop
jb
adc
mov
arpl
mov
iret
rcrl
fbstp
xchg
add
adc
inc
lret
dec
inc
fmuls
mov
repnz
mov
add
sbb
jbe
jo
into
fcomps
std
lret
add
cmp
pop
aam
adc
ror
das
inc
call
insb
xchg
dec
cmp
add
pop
inc
pop
test
mov
sub
adc
int
xchg
jne
xor
lock
or
add
test
pop
pop
fistpl
mov
cli
mov
mov
iret
aad
sbb
adc
fstpt
fmuls
loopne
das
movb
mov
push
push
imull
cmc
inc
mov
adc
fcoml
mov
pop
push
mov
loopne
sub
mov
add
lret
add
clc
xchg
mov
push
jl
add
and
and
repnz
shlb
in
pop
rcrb
nop
adc
loopne
xchg
add
out
and
mov
mov
add
lock
icebp
daa
pop
jno
xor
push
xor
add
lock
xor
mov
ds
or
and
adc
xor
cwtl
fs
and
or
or
call
sub
sub
dec
mov
inc
aas
dec
jl
adc
lods
mov
mov
test
cmp
fs
call
mov
stc
cmp
loope
icebp
enter
xor
pop
inc
add
xor
test
call
dec
sub
cmp
or
cwtl
cmpsb
adc
jnp
loope
popa
rorb
sbb
outsb
sarl
mov
dec
lcall
filds
push
gs
jp
mov
mov
les
pop
shrb
push
dec
in
fdivrs
xchg
scas
stos
andb
insb
mov
and
add
insb
aaa
loop
pop
push
pusha
dec
xchg
ret
shr
or
xlat
dec
leave
movl
movsb
push
daa
sbb
mov
adc
mov
xor
stos
push
adc
sub
mov
xchg
pop
xlat
cmp
pop
aaa
mov
mov
test
xchg
aas
addb
mov
cmpsb
mov
dec
push
pushf
xchg
mov
pop
cmp
adc
sub
jmp
arpl
clc
out
and
cmp
test
and
mov
out
pushf
adc
or
insb
pop
xor
ljmp
push
sub
inc
stos
int3
inc
adc
dec
or
push
mov
mov
add
ja
mov
xchg
lds
and
or
mov
pusha
and
sub
jg
pusha
test
imul
ficoml
lret
mov
add
into
enter
sar
orb
daa
pushf
push
and
cs
sarb
mov
nop
inc
and
fwait
and
add
sbb
int3
adc
dec
inc
or
lock
mov
jmp
mov
xchg
pushl
sbb
add
xchg
lock
cwtl
mov
mov
cmpsb
sub
mov
fcmovnb
jmp
add
push
mov
subl
dec
andl
or
dec
mov
inc
dec
and
cmp
dec
or
mov
adc
xor
fcompl
and
pop
mov
shl
xor
mov
loopne
nop
dec
inc
addl
aaa
stc
lock
pop
shlb
iret
aas
mov
pop
mov
jge
and
dec
sub
and
xor
cltd
dec
mov
dec
hlt
xor
mov
pop
pop
xlat
and
cmpb
mov
scas
and
rcr
es
add
stc
imul
push
ret
into
adc
sbb
mov
cmp
xor
les
andb
or
dec
dec
aaa
mov
sbb
jl
rcrb
xor
in
hlt
leave
sub
pop
lea
nop
mov
popf
sub
xor
lcall
loopne
fwait
sbb
test
push
cmp
mov
stc
jp
lock
and
adc
cs
sbb
fs
or
mov
jl
or
inc
adc
lret
push
lods
cmp
shrl
cmpb
jnp
mov
mov
arpl
rolb
add
movsb
mov
add
inc
fwait
or
or
jae
cmp
xor
imul
inc
mov
shlb
mov
cmp
mov
xchg
pop
loope
inc
xor
or
mov
add
mov
jo
xor
int3
adc
stc
orb
jle
imul
cwtl
lahf
inc
mov
popa
or
stc
in
stos
test
mov
push
emms
mov
inc
sub
jg
mov
inc
dec
loopne
loopne
sub
jno
ss
stos
sub
dec
add
popa
js
rcrb
icebp
and
or
or
pusha
push
jnp
inc
rclb
lret
pop
add
cmpsl
mov
ss
int
lods
inc
pop
scas
rcrb
pop
stos
adc
cwtl
xor
xor
addl
rcrb
xchg
xchg
scas
shr
mov
enter
stc
outsb
testb
sbb
sub
and
push
and
add
jb
mov
shlb
dec
add
jno
jecxz
cwtl
dec
add
jae
add
push
xchg
mov
push
jmp
cmp
pop
mov
cwtl
push
hlt
addr16
sbb
inc
lods
jnp
shrl
je
loopne
daa
mov
lcall
jg
ss
mov
aas
inc
cmp
adc
cmp
and
mov
xor
pusha
xor
cmpl
add
add
sub
inc
mov
out
inc
add
hlt
xchg
leave
lock
xor
adc
clc
and
movsl
lock
int3
pop
add
push
fimuls
jns
pop
addl
std
sbb
mov
sbb
popa
fadds
cmp
aas
movsl
fisubl
or
pop
loop
rolb
cs
push
xor
jo
int3
test
loopne
push
sub
scas
ret
rcr
fbld
pop
add
add
cmp
pusha
push
push
dec
sbb
pusha
aas
pop
push
scas
cmp
adc
xor
pop
jmp
lahf
xor
jg
cmp
push
push
inc
adc
int
pop
mov
sarl
hlt
mov
xor
add
pop
push
mov
xchg
or
dec
push
add
lcall
and
cmp
fdivr
adc
mov
std
loope
mov
sub
mov
cwtl
pusha
add
aaa
jle
adc
adc
xchg
mov
adc
push
mov
js
adc
adc
mov
xchg
pop
test
mov
mov
xchg
scas
add
mov
js
cmp
mov
les
gs
loope
xor
xor
pop
sbb
out
add
or
movaps
mov
push
pusha
fmul
icebp
aad
jl
add
cmp
xor
ljmp
mov
mov
rdpmc
sbb
add
rol
jle
and
mov
cmp
jmp
cld
dec
mov
lods
add
push
jp
mov
sbb
lcall
adc
mov
shrl
adc
pop
or
pop
mov
add
ds
jne
call
xchg
fcoml
pop
insb
inc
mov
xorb
test
ror
xchg
pop
mov
pop
xlat
mov
loop
mov
push
inc
xor
and
jb
mov
jae
pop
xor
daa
push
xor
nop
fiaddl
push
push
test
cmp
and
insb
je
cmp
lods
imul
pop
sbb
aam
cmp
iret
xor
ret
fstpl
lret
and
ss
scas
insl
cmova
dec
inc
lock
test
test
std
sti
arpl
sub
int
add
sbb
xor
or
loopne
push
push
loopne
cmc
sbb
in
mov
movsb
icebp
adc
mov
int3
xor
pushf
add
mull
add
jg
cltd
xlat
int
das
out
adc
inc
push
or
pop
and
pop
inc
in
add
inc
adc
iret
sti
pop
add
mov
mov
dec
xchg
xor
mov
or
xor
cwtl
push
xor
popf
dec
add
lret
pop
mov
push
movsb
aad
subl
cmp
popf
inc
pop
pop
stos
pop
adcb
sbb
or
jb
cmpsb
bound
pop
dec
out
and
shr
lahf
cmovae
add
cmp
lock
push
inc
push
fsub
ljmp
xchg
dec
xor
pop
add
mov
inc
dec
jnp
add
xor
pop
push
cmpb
mov
xor
add
sub
shlb
fcoms
cli
ficoml
dec
xor
mov
add
sub
push
mov
sub
or
dec
xor
rcll
pop
push
adc
ja,pn
add
movsb
cmp
insb
les
icebp
inc
ss
or
add
stos
sbb
inc
lret
jg
add
call
and
xor
add
xor
int3
shlb
jecxz
mov
rclb
fnstcw
test
pop
scas
clc
and
xchg
push
fldt
pop
test
fisubl
in
inc
test
sbb
mov
ss
cltd
lret
sbb
scas
es
or
xlat
and
nop
nop
xchg
roll
fdivr
jl
push
cld
nop
pop
add
adc
pop
gs
jecxz
clc
and
sahf
in
iret
dec
add
jnp
inc
mov
xor
sbb
mulb
mov
lock
mov
adc
and
pusha
enter
lds
es
fcom
or
xor
dec
pop
mov
inc
int
pop
and
sub
cmp
mov
pop
arpl
sub
es
shrb
and
lcall
data16
pop
sbb
add
lea
icebp
mov
inc
les
adc
insb
pop
aaa
fsubrl
clc
and
inc
xchg
pushf
shl
mov
leave
das
mov
or
cltd
cmp
mov
lock
pusha
cmpb
sbb
inc
mov
dec
mov
jl
out
and
add
sahf
lret
cs
imul
inc
in
push
add
jb
fsubrs
mov
and
and
lea
push
loopne
or
fsubr
add
nop
adc
adc
mov
enter
pop
stos
str
nop
push
xor
dec
clc
pop
fwait
push
sti
gs
inc
into
jo
cmp
sbb
mov
call
adc
push
push
sub
psubusw
rolb
cmp
pop
cmp
enter
inc
cmp
xchg
lret
bound
inc
and
mov
mov
xlat
cmpsl
adcb
mov
push
pusha
cmpsb
stc
push
fmul
push
es
push
or
or
fdivl
or
mov
sbb
xchg
std
nop
xor
jp
pop
cwtl
adc
clc
xlat
cmp
push
fisttpl
ds
add
xor
lahf
mov
popf
pop
adcl
movsb
adc
dec
add
mov
cld
xor
cmp
cwtl
popa
inc
cmp
mov
add
sub
cmp
jle
movsb
and
pop
dec
loope
inc
push
xchg
jo
scas
sub
sbb
adcb
push
xchg
mov
jle
hlt
add
mov
aam
add
pop
jo
stc
add
adc
mov
aas
add
xor
nop
outsb
clc
inc
jg
pop
pop
lcall
jnp
mov
lea
cmpsl
or
adc
mov
add
inc
fbld
lret
subb
mov
jo
data16
mov
or
scas
enter
mov
pushf
sbb
lret
jno
pusha
test
push
add
rolb
icebp
lods
in
xchg
cmpb
insb
push
cltd
in
cmp
push
lahf
fs
or
inc
pop
cmpsb
clc
sub
test
cli
mov
add
dec
push
fdiv
jo
call
sub
sbb
sbb
adc
mov
shrb
add
iret
push
pushf
dec
adc
jo
pop
aas
add
mov
cmp
push
mov
outsb
add
scas
int3
mov
into
ret
pop
xlat
inc
xor
xor
scas
mov
dec
xchg
js
outsb
add
push
addb
push
push
jnp
mov
inc
mov
cmp
in
xor
sbb
adc
loopne
cwtl
je
sbb
rcll
push
push
lds
insl
ja
nop
stos
jl
or
ror
scas
ret
pop
add
lret
pop
pop
pop
roll
add
mov
mov
stc
rolb
sbb
mov
ret
scas
cmovnp
lock
push
push
push
js
lds
scas
loope
pop
aas
add
push
arpl
adc
ljmp
pop
fnstcw
cmp
insb
shl
add
mov
shll
push
inc
dec
sub
subb
stos
test
insb
push
sbb
xchg
lods
and
call
fadd
or
push
pop
sub
cltd
icebp
lods
imul
jb
mov
rolb
jae
fcoml
jns
sar
sbb
xor
xor
mov
lea
cmpb
imul
inc
insb
insl
arpl
xor
bound
pop
xor
test
pop
adc
shlb
fcomps
push
or
rcll
outsl
mov
jl
adc
imul
jle
inc
inc
push
nop
cs
push
lods
xor
pop
xchg
mov
xor
cmp
fmull
mov
shlb
daa
mov
aaa
add
xor
pop
andb
jl
pusha
sub
mov
mov
add
cmc
mov
and
sub
and
sub
nop
jnp
inc
test
sbb
stc
cmc
add
cmpb
scas
sbbl
inc
mov
rolb
imul
js
and
fwait
testb
repnz
pusha
mov
test
ds
dec
xchg
lds
mov
push
nop
mov
jle
test
xlat
pop
cld
pusha
fdivs
test
mov
add
xor
mov
cwtl
icebp
jecxz
and
xchg
inc
fs
add
fcmovu
adc
pop
jl
mov
dec
pop
sub
dec
andb
sbbl
cmp
dec
mov
push
push
mov
mov
push
dec
pop
imul
or
add
sbb
shrl
rclb
rcl
pushf
cmp
inc
xor
pop
push
rolb
and
sahf
les
stc
subb
pusha
and
and
icebp
jp
cmp
jo
and
cld
adc
adcb
jle
add
shrb
or
cmpsl
sub
lret
loopne
dec
ljmp
jbe
push
add
fcmovu
cmp
add
aaa
sbb
aam
scas
sbb
inc
xor
add
sti
jmp
inc
clc
push
shll
mov
xchg
cmp
xor
jg
hlt
sub
addb
sbb
stc
mov
aam
mov
cmpsb
adc
rolb
sbb
cmc
cmpsl
imul
xchg
int3
xchg
adc
scas
xchg
pusha
adc
jle
inc
mov
dec
sar
stos
mov
and
sbbl
imul
xor
xor
leave
push
pop
push
rcrb
and
insl
aaa
cmp
ret
xlat
cmp
jbe
cmc
xchg
mov
ljmp
pop
fwait
or
loopne
push
cmp
jecxz
testb
jns
add
push
sbbb
dec
das
jle
add
pop
ret
jecxz
pop
in
iret
push
fs
test
in
or
cld
add
or
jecxz
test
add
mov
add
cmpsl
push
sti
or
add
pop
xchg
sub
xchg
pop
pusha
xor
inc
pop
xor
jmp
cmp
call
xlat
repz
iret
add
push
out
push
ljmp
inc
dec
add
pop
mov
cmp
add
mov
adc
push
pusha
ret
mov
orl
rolb
xor
sub
add
popf
jo
add
loopne
add
pop
out
or
cld
rolb
sbb
nop
xchg
clc
pop
pusha
ficomps
mov
mov
enter
mov
sahf
cwtl
push
hlt
aam
add
push
jg
mov
xor
sbb
xor
and
gs
add
jno
inc
sarb
sbb
insb
cld
je
movsl
hlt
add
pusha
jbe
add
mov
and
popf
dec
pop
add
cwtl
pop
cmpsl
pop
dec
and
pop
inc
sbbb
dec
xchg
sub
mov
xor
rclb
cmp
test
cld
adcb
xor
xorb
in
stos
out
add
or
cld
or
nop
add
ss
sbb
cld
negb
xchg
das
ja
rorb
les
fdivrl
mov
lret
les
push
add
ja
and
xor
jb
lds
rclb
mov
mov
xchg
sbb
add
lods
xchg
out
fsubp
adcl
adc
jo
in
add
cmp
cmp
insl
sar
mov
mov
cmc
push
dec
push
inc
sahf
sub
mov
cmp
xchg
xor
mov
dec
and
push
xchg
jl
in
mov
aam
rclb
and
int
inc
xchg
loopne
push
pop
cmpsb
mov
pop
add
mov
sub
sub
adc
pusha
xlat
push
add
cmpsb
mov
cld
and
and
sub
xchg
or
mov
pop
dec
notb
push
mov
testl
xchg
stc
and
jo
mov
testb
pop
push
push
scas
rolb
test
rcrl
mov
sbb
xchg
and
hlt
sub
inc
and
adc
jae
add
xchg
push
jmp
lret
cmc
dec
sbb
in
dec
push
addl
sbb
jl
aam
pop
cs
pop
push
lahf
shrb
dec
mov
jnp
out
sub
jne
xchg
add
and
mov
mov
test
int3
imul
sub
rclb
add
in
jl
rcl
jo
mov
jg
and
xchg
fidivrs
es
mov
or
andl
and
lock
verw
jne
sahf
pop
data16
cld
rcl
incb
mul
mov
fs
jb
and
cmp
cmp
xor
push
sbb
push
pop
push
mov
scas
push
les
dec
daa
stc
push
pop
aam
add
popf
sbb
pop
pop
jecxz
pushf
sbb
inc
movsb
cmp
or
jnp
ja
std
cwtl
jl
pusha
sbb
icebp
mov
or
js
orl
and
out
nop
push
popf
fs
xchg
hlt
lea
daa
insb
rcrl
mov
nop
scas
fildl
pop
or
dec
mov
ret
hlt
inc
lods
xor
push
cltd
sub
cmp
addb
add
es
cmp
aam
push
add
aad
repz
std
xor
testb
popa
loopne
out
xor
mov
adcb
les
pop
add
rcll
mov
js
jb
je
and
ja
test
add
sub
mov
ljmp
mov
int
or
adcb
sti
gs
mov
out
add
aaa
mov
rcrb
mov
repz
int3
inc
mov
mov
mov
lahf
add
mov
add
add
es
and
mov
pushf
outsb
pop
popa
pop
adc
pusha
int3
inc
int3
mov
adc
pop
std
clc
adc
inc
rorb
divb
js
xor
dec
pop
or
push
mov
or
add
inc
adc
leave
rcl
pusha
pop
pop
lock
aaa
push
push
int
je
mov
xchg
sub
add
sbb
xchg
outsl
sbb
push
out
fs
dec
dec
loope
je
int3
inc
xchg
into
shlb
or
add
outsl
cmp
fsub
loopne
cmp
fmull
rcl
sub
cld
xchg
pop
imul
mov
jo
or
sub
jbe
add
mov
in
xor
push
or
mov
push
pop
or
mov
fs
mov
inc
and
push
dec
jbe
sub
sbb
jo
outsl
pop
ret
fcoms
sar
stc
push
loopne
adc
add
in
jl
fsts
in
mov
hlt
jns
jge
jo
sahf
shll
inc
add
test
cmpsb
nop
popf
xor
mov
icebp
jp
pop
je
push
stc
mov
add
mov
sub
test
mov
enter
sar
sbb
add
sbb
pop
pop
pop
leave
xchg
mov
add
mov
ja
push
jns
inc
and
stc
adc
pop
sahf
push
and
push
pop
pop
inc
out
pop
add
mov
push
loop
push
pop
mov
adc
sub
inc
or
push
aam
fs
mov
add
jbe
jecxz
lock
xor
in
or
lret
mov
hlt
add
add
clc
xor
push
jmp
push
and
pushf
push
sub
decl
add
push
hlt
and
call
aad
xchg
pop
fistl
testl
cmp
push
xor
push
sub
jg
pop
inc
sarb
loope
push
or
inc
adcl
mov
clc
pop
insb
enter
push
or
ret
add
cli
popa
lods
dec
sti
out
add
shl
push
mov
addb
jle
or
dec
adc
aam
cmovle
add
mov
dec
adc
cmpsl
xchg
adc
mov
cmp
dec
adc
arpl
sbb
pop
push
push
clc
inc
sub
inc
js
pop
jmp
pop
fiadds
addr16
inc
sbb
pop
jo
movl
jne
mov
or
xor
mov
movsl
js
fs
and
mov
dec
jle
add
pop
mov
add
xor
sbb
and
sub
add
test
orb
pop
shrb
mov
add
inc
daa
test
cmc
sbb
inc
dec
mov
cmp
sbb
rcll
cld
test
arpl
and
add
aad
push
jae
jbe
and
pop
push
inc
cmc
add
in
ljmp
ds
rorb
pop
sub
jp
push
mov
pop
inc
mov
mov
stc
rolb
add
cmp
nop
pop
movsl
hlt
adc
or
jno
xchg
sub
imul
pop
ljmp
pop
dec
fldl
lret
mov
pop
scas
sbb
cld
adc
das
sub
pop
push
and
std
out
pop
pop
pusha
push
pop
add
and
adc
ljmp
push
js
sbb
pop
sub
xchg
pushf
xor
adc
add
cld
push
notb
add
fs
data16
add
aas
scas
sar
xchg
add
push
pop
lds
push
add
xchg
mov
arpl
cwtl
add
roll
or
enter
sti
xor
and
sub
adc
in
js
jno
sti
ss
xor
inc
sbb
mov
pop
add
insl
rolb
insb
cmp
ret
jns
pop
addl
pushf
loopne
mov
cwtl
push
and
loop
or
pushf
aaa
inc
dec
sti
dec
lds
aam
sub
adc
sbb
dec
inc
pop
cmp
and
test
negb
sarb
add
jecxz
cmc
out
dec
mov
fdivrs
divb
pop
inc
and
paddb
mov
arpl
jmp
inc
inc
or
leave
adc
hlt
add
mov
or
scas
xor
sub
popf
mov
adc
and
add
test
sti
popf
mov
out
and
and
outsl
jecxz
into
clc
sub
jo
incl
push
push
and
repz
enter
ljmp
sar
pop
xchg
mov
cmp
inc
inc
mov
sti
push
add
movsl
sub
add
fwait
jge
push
mov
pop
lds
sbb
xchg
jg
fcmovb
xor
mov
and
out
inc
mov
inc
pop
and
xchg
cmp
iret
lahf
and
pop
mov
and
es
inc
mov
sti
xorl
mov
or
dec
fwait
mov
out
adc
test
mov
mov
or
adcb
incl
outsl
adcb
adc
fs
or
pop
lods
push
push
push
call
inc
pop
faddl
or
adc
pop
add
rolb
mov
pop
movsl
fisubrl
dec
add
lea
movsl
push
add
rolb
fs
add
push
and
sub
xchg
xchg
and
in
sbb
les
dec
lahf
add
notb
addr16
lock
or
movsb
or
mov
adc
rolb
jge
fadd
in
add
mov
addl
int3
push
out
jmp
ljmp
les
dec
nop
js
out
and
or
sub
popf
sti
adc
lret
sbb
sbb
hlt
jecxz
fmull
dec
enter
cmp
bound
movhps
adc
test
nop
jecxz
frstor
jno
nop
adc
mov
and
jo
jge
inc
add
push
popa
out
mov
mov
adc
sub
fwait
nop
sbb
pop
dec
movsb
gs
lods
into
or
inc
addb
sbb
push
cmp
test
push
and
popf
xor
cmpsb
jbe
lfs
insb
and
mov
or
push
stos
sarb
addb
repnz
jmp
pop
sub
jne
add
lock
adc
xor
inc
adc
jnp
cwtl
jl
dec
popf
inc
inc
cwtl
test
jg
arpl
jbe
call
mov
hlt
xchg
mov
add
sahf
pop
xlat
xor
adc
jnp
and
cmpsl
shr
add
rcrl
outsl
cs
je
mov
dec
insb
and
es
mov
lahf
rorb
movsb
dec
les
jne
rcrb
add
jecxz
hlt
clc
adc
test
xchg
xor
pop
add
pop
dec
repz
push
clc
fdivrp
popa
mov
shlb
mov
xlat
pop
inc
cmp
arpl
rcl
mov
cmp
xchg
scas
and
add
movsl
jb
dec
nop
inc
clc
mov
outsb
mov
popa
stc
xor
les
push
add
bound
push
dec
jecxz
add
mov
insl
sti
push
popa
push
mov
pop
pushf
cmpb
inc
testl
dec
mov
add
popf
ja
shlb
adc
sub
xor
inc
dec
test
hlt
and
jno
add
mov
in
mov
and
cmpb
cli
js
daa
and
or
push
shl
sbb
and
mov
mov
xorb
test
insl
call
push
mov
push
xlat
jmp
add
xor
jne
icebp
cmp
pop
cld
cmc
cmp
lcall
add
roll
add
mov
mov
cld
add
arpl
or
adc
pop
xchg
mov
dec
push
push
divb
jmp
adc
andb
mov
cmp
pop
mov
sbb
mov
adc
push
sub
xor
add
xchg
sbb
loopne
push
jmp
in
push
sub
stc
xchg
pop
mov
mov
in
lods
pop
push
xchg
mov
mov
sub
stc
push
rclb
fdivrs
sub
push
xor
dec
iret
or
mov
mov
dec
jle
es
mov
or
orl
add
insb
add
jmp
roll
icebp
fildll
add
pop
mov
mov
out
push
jmp
in
sbb
pop
and
ret
ljmp
dec
add
enter
fadds
test
adc
xchg
pop
xchg
mov
das
push
push
loope
pop
mov
cmp
test
add
pop
out
push
pushl
xor
push
roll
loope
mov
mov
push
mov
pop
jle
mov
cmpb
jmp
cmpl
add
out
xor
adc
addr16
push
jmp
and
test
sti
ficoms
sbb
jle
sbb
push
jge
mov
push
push
stos
push
jmp
inc
jl
push
jb
roll
pushl
imul
lds
push
bound
lods
lcall
mov
sub
jle
xor
add
inc
not
dec
js
or
or
mov
pop
clc
or
mov
je
ds
push
push
inc
mov
pop
pop
and
sbb
repnz
imul
pop
cmpsl
roll
pop
add
pop
pop
mov
inc
enter
rorb
push
lret
rolb
or
adc
mov
and
dec
mov
test
jecxz
xor
push
inc
or
push
dec
cmp
push
lret
mov
or
add
push
push
pop
add
jmp
std
adc
inc
or
popa
mov
ret
and
xor
dec
addl
mov
push
push
add
mov
in
xor
inc
stc
add
fcmovnb
jecxz
mov
sub
pop
xchg
push
add
dec
push
add
pop
or
jp
adcb
jge
or
lock
add
decb
lret
push
testb
mov
inc
mov
insl
add
sbb
mov
inc
push
andb
lea
jge
in
or
inc
fdivs
pop
sub
push
mov
enter
inc
std
xchg
sub
mov
sub
nop
xor
jno
sti
inc
dec
add
pop
jmp
cmpb
sahf
pushf
jmp
sub
pop
xor
repz
cmp
pop
sbb
adc
jbe
fadd
out
lea
or
jo
mov
pop
out
adc
jmp
movhps
addl
mov
fsubrs
and
sahf
leave
sub
fwait
out
shll
jae
or
xor
sub
xor
cld
test
add
mov
jle
fldl
std
sbb
fdivrl
mov
push
push
ds
sbbb
loope
rorl
push
mov
and
xchg
icebp
mov
push
mov
neg
jae
repnz
aam
shl
sbb
adc
or
pop
inc
and
jle
lcall
addl
fnsave
push
jp
dec
stc
dec
inc
clc
cs
push
add
loopne
sub
pop
in
pop
xor
xor
sbb
and
test
add
sub
xchg
xor
and
add
jne
pop
roll
icebp
pusha
dec
or
add
lods
sub
rorl
lods
mov
mov
test
add
out
mov
adc
inc
jmp
add
jae
lds
sti
inc
pushf
adc
pop
add
lret
xor
xor
insb
sub
push
pcmpeqw
push
mov
add
add
jo
xlat
jns
or
xchg
in
pop
jno
cwtl
in
lds
fiaddl
sub
pop
cmpsl
cld
mov
jbe
call
pop
inc
xchg
or
push
cs
clc
push
sub
pop
or
enter
mov
mov
or
sub
mov
push
and
ljmp
aam
ss
xor
pop
lds
or
lock
xor
popa
dec
sub
sbb
add
lock
xchg
or
lret
add
sub
lods
test
jae
pop
inc
adc
jmp
mov
pop
push
sbb
divb
sub
pop
pop
lods
dec
sahf
cmpsb
add
jbe
push
xchg
jbe
mov
and
shrb
js
sbbb
lds
inc
rorb
enter
xchg
fs
push
add
jnp
mov
mov
call
loop
and
pop
popa
popf
ret
jmp
idiv
jl
pop
fistpl
push
lods
cmpsl
lret
adc
ficoms
test
test
rorl
jmp
mov
mov
mov
fildl
adc
jne
ljmp
sbb
or
cli
or
push
push
mov
inc
leave
bound
insb
js
jne
pop
je
add
iret
xorl
push
cwtl
xchg
inc
add
in
es
jl
jne
inc
sbb
pop
add
sub
pop
pop
add
mov
xor
andl
nop
sbbl
out
cwtl
sub
cmpl
mov
add
fistps
std
xchg
lods
mov
ss
inc
xchg
fistl
push
mov
mov
loopne
xor
pusha
mov
push
out
call
xor
fdivr
sti
sbb
and
inc
cwtl
in
or
pushw
int
cmc
jle
xor
ss
fnsave
pop
mov
xor
or
inc
icebp
int3
jns
or
lds
bts
adcl
rcrl
cs
or
and
and
mov
daa
xchg
push
outsb
scas
push
cmp
shl
add
lret
mov
adc
push
loope
xchg
pop
xor
addl
add
vandnps
sbb
adc
rol
jmp
add
loopne
fptan
rolb
sbb
push
sbb
dec
inc
sbb
shll
inc
or
inc
add
icebp
push
rcrl
movsb
jmp
lret
scas
jmp
sub
out
sub
push
fldenv
push
cmpsl
das
push
mov
push
mov
repz
rclb
mov
inc
sub
pop
add
cwtl
and
and
stc
mov
xchg
jbe
xor
dec
jle
imul
and
loopne
jecxz
jbe
or
jmp
repz
leave
or
adc
lods
push
xchg
stc
adc
add
pop
xor
push
into
popf
lds
enter
mov
xor
jmp
mov
xor
xchg
fs
xor
adcl
in
jl
mov
or
mov
insb
aaa
mov
mov
add
jo
dec
cmp
jmp
push
aas
mov
cmp
add
adc
xchg
cli
mov
int3
shr
lock
les
jno
push
in
stos
in
popf
or
add
mov
mov
lock
push
inc
fstl
or
pop
adcb
sbb
pop
adc
adc
mov
cltd
scas
cs
fcoms
daa
mov
aaa
lock
dec
fld
push
popl
or
add
xor
dec
lds
add
lods
mov
xchg
sub
add
pop
xor
mov
je
xchg
add
mov
add
mov
jo
rclb
subb
mov
sub
sub
ss
out
inc
xor
or
dec
jo
or
stos
push
jmp
repnz
js
sahf
mov
ljmp
mov
pop
test
xchg
hlt
dec
pop
and
xor
xor
into
mov
xor
or
mov
add
xor
or
add
mov
loope
jbe
clc
pop
mov
jo
push
scas
aas
mov
xor
sub
xor
xor
inc
mov
jnp
xchg
and
and
ficomps
dec
push
test
dec
test
ds
xchg
jmp
add
aaa
mov
pop
push
and
cs
xor
dec
fldl
sub
ret
add
sarl
cmp
add
rolb
pop
add
cmp
push
cmp
jmp
int
add
add
inc
sbb
dec
add
mov
fldcw
xchg
and
ja
andb
mov
pushf
xchg
add
shr
xlat
in
popa
sbb
jl
nop
call
into
or
cmp
out
pop
clc
push
pop
pop
mov
adc
adc
cmp
cwtl
sti
stc
icebp
inc
call
xor
andb
add
sbb
mov
jmp
icebp
pop
pop
adc
or
int3
subb
cmpl
fimull
push
dec
add
sahf
pop
inc
xchg
xor
subl
xor
push
nop
stos
sub
push
iret
aam
mov
loop
jmp
rcr
aad
adc
pop
sbb
lret
hlt
push
jmp
push
add
add
pop
mov
add
sub
das
add
mov
pop
or
lock
lock
xor
mov
dec
xor
sub
or
jp
out
push
repz
aam
test
cmpsb
pop
sbb
jb
hlt
add
cmp
xchg
add
test
or
mov
xchg
pop
add
inc
or
dec
mov
dec
pop
lea
rcll
rcl
test
loop
rcr
sbb
lret
cli
aas
fisttpll
in
mov
add
sti
pop
pop
daa
and
test
mov
sub
dec
psrld
je
mov
dec
push
into
cwtl
outsb
out
inc
inc
xor
push
adc
adc
push
push
je
inc
or
cmp
add
jmp
or
sbb
xchg
xchg
mov
xchg
jecxz
aam
mov
add
pop
jmp
add
inc
and
add
rcrl
inc
xor
pop
out
leave
dec
xchg
sbb
std
xor
leave
pop
shll
push
in
sub
add
pmaddwd
push
testb
jbe
mov
xchg
insl
cld
aad
mov
and
in
andb
mov
xor
into
pop
lahf
and
mov
xchg
jnp
add
lock
out
add
decb
int
lods
pop
push
ss
rclb
lea
shlb
sub
xchg
cs
dec
mov
cmp
mov
cmp
das
into
xor
cmp
adc
add
xor
pop
stc
push
cmp
add
leave
in
push
pushf
pusha
pop
dec
incb
push
je
push
and
fmull
or
mov
jmp
in
rcrl
mov
shl
jmp
xchg
sub
shlb
pop
xchg
cmp
ret
or
add
or
in
sub
mov
inc
sub
mov
dec
adc
jo
push
pop
jg
push
imul
pop
clc
repnz
aad
rcrb
ret
pop
nop
stc
cmpsb
stos
pop
jmp
xor
dec
jecxz
adc
ret
mov
xchg
push
test
aaa
sub
and
or
pop
cmp
and
das
xchg
or
and
jns
add
iret
in
or
mov
pusha
mov
xor
add
shl
xor
xor
push
jae
outsl
and
icebp
pop
clc
pop
mov
rcl
sbb
or
pop
or
ret
mov
push
sti
lds
pop
and
or
push
out
cmp
fmulp
mov
sub
xchg
mov
addr16
clc
cmp
and
das
and
xor
jmp
mov
push
jnp
adc
add
shll
push
pop
neg
cmpb
rcll
pop
roll
stc
and
stc
popa
push
mov
lret
xor
sub
or
pop
inc
jmp
cs
push
add
mov
fisttpl
push
add
leave
sbb
or
fsubs
es
int3
or
add
xor
adc
insb
imul
mov
xchg
push
xorl
pop
inc
fimull
mov
pop
pop
arpl
incb
neg
js
or
inc
cmp
ss
das
test
cwtl
jecxz
dec
cmp
add
xchg
add
pusha
repnz
xchg
sub
aas
and
jnp
xchg
and
rcrb
es
add
push
fsubl
push
xor
insb
mov
pusha
push
xchg
jl
lcall
adc
scas
sbbl
shlb
loopne
sbb
sub
and
inc
gs
icebp
inc
and
inc
popa
popl
leave
inc
data16
jb
insb
nop
mov
sub
gs
sub
inc
idivl
pusha
inc
jmp
mov
inc
into
pop
jecxz
das
add
dec
ret
popa
test
lret
dec
icebp
add
and
mov
or
dec
add
roll
imul
lret
sarb
add
outsl
pop
mov
add
sbb
adc
dec
mov
and
push
aas
jo
test
subb
push
nop
dec
lcall
daa
add
call
pop
xlat
add
or
repz
push
mov
adc
aam
mov
sub
mov
mov
push
dec
mov
adc
cmpsb
dec
enter
push
xor
cmp
xlat
add
dec
xor
add
mov
cmpsl
xor
pop
shrl
dec
sub
bound
push
out
or
mov
ret
cmp
sbb
cmp
xchg
rcrb
xor
add
std
pusha
push
andl
jecxz
and
xlat
adc
jnp
jno,pt
push
sbb
adc
das
mov
inc
and
add
sub
adc
addr16
inc
sbb
add
ljmp
test
cmpsb
adc
add
add
dec
mov
sbb
xchg
movsb
or
xor
stos
sti
add
ret
add
and
js
mov
cmp
rcl
ret
inc
scas
aas
jbe
fimull
or
dec
cli
cltd
maxps
jmp
sub
xor
aam
loope
or
bound
insl
js
mov
addr16
sbb
arpl
lds
and
push
mov
jg
and
adc
in
rdtsc
fs
orl
mov
pop
fmuls
xchg
mov
inc
shr
xor
adc
xlat
rcrb
fs
outsl
inc
jno
addr16
add
popf
dec
lea
insb
inc
sub
push
pop
testl
mov
and
sbb
inc
and
rcr
fsubrs
mov
xor
ljmp
mov
adc
dec
outsb
and
dec
xchg
stos
jae
push
out
das
and
inc
roll
mov
xchg
mov
cmp
xor
add
out
or
pop
xchg
add
sub
ret
jns
jae
pop
out
fwait
add
add
xor
fnstsw
shr
add
jp
cmpl
push
pop
push
xor
and
mov
mov
jg
sub
cmp
pop
xchg
xor
dec
inc
in
lods
add
mov
pop
repz
mov
xor
int3
flds
or
mov
jmp
mov
xor
push
add
loope
mov
sbb
bound
and
pop
cmp
daa
add
scas
ret
lahf
or
jmp
adc
add
rol
call
mov
pop
mov
cmpsl
lret
sarl
enter
sbb
push
dec
cmp
sbb
jmp
xchg
jle
mov
aas
out
pusha
das
cli
jl
call
cmp
sub
fsts
aaa
addr16
jno
sub
pop
sub
jl
stos
pop
setae
push
sarb
shll
arpl
aad
test
ret
inc
pop
fs
push
xor
shlb
inc
daa
int3
sub
add
mov
les
mov
add
mov
add
jmp
popf
js
enter
add
mov
in
push
add
cmc
mov
shlb
pop
inc
or
out
ret
stc
inc
adcb
addr16
add
jmp
or
push
shlb
enter
push
movsb
ljmp
shr
mov
ljmp
test
aas
sbb
pop
stos
imul
sub
leave
and
jl
out
mov
jge
aas
dec
dec
xlat
lods
mov
xchg
add
adc
sub
rorb
pusha
add
xchg
xor
sub
sub
out
call
jbe
push
dec
ja
or
adc
sub
data16
add
cltd
subb
inc
movsb
add
pop
sar
xor
pop
jae
or
jmp
dec
push
xor
push
jmp
xchg
and
inc
enter
ss
inc
ret
jle
pop
loop
sub
dec
aaa
dec
jae
sarb
dec
mov
and
out
lret
ljmp
inc
loope
cmp
adc
add
int
shlb
jmp
dec
lods
iret
add
jbe
add
popa
inc
push
adc
pop
scas
repz
sti
out
nop
movl
int3
int
jnp
mov
xlat
jg
clc
fsubs
pop
jmp
pop
mov
push
xorb
les
test
enter
push
outsl
dec
rcr
test
sbb
popa
push
call
lock
sub
in
or
mov
jb
jge
add
push
test
mov
pop
push
imul
xor
sub
popf
jo
pop
and
movsl
jb
hlt
mov
sub
cmp
mov
mov
or
dec
add
mov
hlt
imulb
movb
cmp
insb
test
mov
pop
movsl
add
inc
clc
in
insb
push
mov
mulps
xchg
js
and
aaa
sbb
aad
mov
cmp
add
sbb
sarb
mov
pop
inc
std
and
shlb
pop
mov
push
add
jnp
jb
pop
pop
cmpb
faddl
lods
cwtl
lock
ficomps
add
loop
adc
fsts
mov
add
or
add
push
repz
jnp
push
xor
inc
sub
cs
dec
imul
mov
cld
cs
insl
add
push
clc
jno
xor
imul
rolb
or
test
lahf
sub
mov
jno
xchg
orl
xchg
mov
push
mov
or
sbb
lock
sub
pop
repz
xchg
push
push
push
cmpb
jge
xor
loopne
mov
pop
bound
adc
xor
xchg
sub
lret
pop
mov
add
push
mov
pop
pop
popf
mov
jae
mov
add
hlt
stc
adc
pop
test
cmp
or
mov
xchg
psubsw
adc
scas
sbb
add
cmp
cld
mov
imul
rcrl
xlat
push
pop
rclb
add
or
cld
pusha
dec
aad
jmp
cmp
xchg
fimull
add
test
ljmp
sti
jmp
mov
popf
and
xchg
xlat
add
arpl
dec
push
lea
adc
sub
arpl
out
fisttpll
dec
pushf
out
sub
add
xlat
push
jmp
jmp
mov
lock
sub
add
mov
push
not
jmp
gs
adc
jg
outsb
lmsw
pop
les
or
lea
in
lcall
add
and
adc
lcall
rolb
icebp
pop
xorb
andl
pushf
cld
std
sub
adc
cmp
pop
sbb
xchg
add
or
lcall
mov
pop
xchg
imul
fsubl
es
or
or
test
rorl
or
in
add
addr16
jle
jae
and
and
add
loope
or
pop
and
adc
dec
mov
or
inc
inc
lock
and
xchg
jmp
loop
mov
cmp
and
pop
push
sbb
andb
das
mov
popa
or
mov
jge
pop
inc
imulb
xlat
movsl
push
into
push
dec
push
push
outsb
add
rclb
and
pop
movsb
push
test
andb
and
ret
add
mov
adc
repz
mov
cmc
or
or
or
dec
aad
adc
cmpsl
shlb
notl
jns
rclb
adc
cmp
or
and
dec
jmp
movsl
pop
xor
xchg
test
or
insl
push
mov
shr
push
les
and
out
mov
jmp
mov
loopne
jl
add
jns
bound
xor
mov
jne
ss
pop
jnp
or
add
lcall
and
dec
add
sub
scas
sti
and
pop
notl
jmp
bnd
insl
stos
les
icebp
or
jmp
or
rcll
sbb
fadds
mov
addl
inc
mov
les
mov
inc
push
ret
fsubrl
xor
int
sbb
test
add
std
push
xor
stos
add
outsb
adc
out
and
sub
test
xor
and
pop
jg
push
xchg
add
or
xchg
adc
inc
shrb
jae
insb
lds
xlat
mov
mov
or
je
out
cwtl
enter
add
ss
rolb
mov
cli
sub
leave
and
add
in
sub
aaa
ret
mov
cmp
inc
fstp
inc
push
mov
and
or
add
and
mov
inc
dec
adc
push
ret
mov
jp,pn
shlb
test
push
push
push
inc
pop
and
push
jmp
sti
popa
fcomps
sbb
jl
xchg
mov
aad
jnp
daa
add
cs
fsubl
mov
mov
push
add
out
and
int3
xchg
xchg
es
pop
xchg
xchg
das
dec
and
or
popw
movsl
fs
mov
cs
add
dec
les
aad
push
jbe
mov
shll
faddl
push
mov
es
iret
test
xor
push
cmp
idiv
fs
pop
in
push
xor
call
out
int
andb
lcall
gs
mov
rcr
xchg
pusha
test
and
and
jle
pop
mov
int
jle
mov
in
jmp
adc
clc
and
roll
aad
mov
push
loopne
sub
ja
pop
and
jl
imul
sbb
xchg
lods
inc
sbb
or
clc
dec
mov
pop
in
cmovp
mov
jb
add
lods
sarb
pop
cmp
dec
xor
das
in
add
jp
out
pop
les
xor
adc
out
mov
and
lock
jmp
mov
dec
inc
shrb
adc
loop
shl
stos
cmp
int3
in
shrl
sbb
mov
shl
mov
and
or
xor
ret
and
push
pop
jge
and
sbb
sub
xlat
mov
icebp
mov
in
sbb
not
xchg
push
jle
pop
nop
xchg
push
dec
stos
ljmp
lea
negl
dec
push
mov
xchg
pop
xchg
or
js
xchg
and
inc
fs
xchg
pop
adc
pop
cmp
sti
daa
mov
jne
inc
mov
and
jmp
pop
xchg
mov
iret
sub
in
enter
pop
xor
pop
mov
sbb
ja
and
es
xor
mov
bound
pop
jmp
dec
orl
mov
pop
jmp
rclb
mull
adcb
xchg
loopne
sub
pop
mov
fistpll
test
push
or
inc
pop
mov
sti
aas
call
inc
push
not
push
jnp
pop
mov
cmp
mov
inc
cmp
movsb
sahf
and
or
inc
adc
add
add
push
mov
and
sahf
or
xor
rol
cmp
sub
jmp
xorl
call
popf
mov
xor
adc
mov
or
out
and
xchg
icebp
add
ret
xor
jbe
or
and
out
dec
loop
rorb
add
add
push
add
scas
jo
xor
inc
or
rorl
cmp
xor
sub
aaa
daa
cmpl
mov
jmp
pop
xor
mov
adc
push
aas
mov
and
cmp
dec
pop
jne,pt
or
and
jns
xchg
cld
or
test
cmp
xchg
push
lds
in
ds
jb
popf
mov
add
fs
add
mov
mov
popa
adc
fadds
mov
add
imul
lret
add
adc
adc
push
and
int
jle,pt
in
pop
or
add
out
add
stos
push
lret
cmpsl
repnz
movl
in
pop
mov
ss
push
sub
mov
dec
dec
mov
mov
push
push
cld
imul
out
dec
or
xor
andb
mov
and
push
sub
clc
pop
push
add
sbb
add
je
pop
jmp
iret
mov
ficomps
xchg
jo
fs
or
cmp
add
int
sub
lret
dec
xchg
les
mov
add
bnd
rcrl
xor
divl
and
je
sarb
mov
lods
cmp
call
pop
mov
out
or
dec
jnp
filds
mov
xor
popf
push
inc
mov
add
pop
push
movl
mov
mov
xor
movsl
xlat
pop
dec
sbb
dec
js
sbbl
pop
popa
int3
or
add
imul
add
jns
pop
add
add
push
or
das
lahf
adc
addr16
bswap
jb
pop
mov
shrb
es
sub
pop
mov
das
sarb
mov
cmp
cmpsl
push
cltd
imul
mov
mov
stos
cmp
xor
xchg
lret
push
mov
push
mov
enter
jmp
loopne
inc
nop
or
ds
add
lods
dec
mov
and
rcrl
outsl
jo
mov
je
push
pushf
jne
lds
or
stos
out
dec
movsb
mov
add
push
push
sub
cld
mov
mov
lahf
add
cmpsl
pop
stos
inc
cli
add
and
or
pop
mov
js
add
mov
bound
out
pop
lods
pop
cmp
mov
push
fwait
dec
aam
xchg
pop
mov
enter
xor
pop
jmp
out
add
lea
jle
lods
mov
mov
mov
jp
call
mov
or
inc
stos
xor
imul
xchg
js
jecxz
mov
adc
shlb
clc
mov
enter
mov
movl
stc
or
sbb
push
inc
mov
pop
cwtl
mov
sub
cmp
pushf
cltd
mov
jno
dec
mov
jle
add
leave
cld
mov
stos
jo
xor
push
push
cmp
pop
push
roll
shl
dec
das
sahf
xchg
or
inc
icebp
mov
pushf
dec
inc
repnz
jmp
add
lret
mov
call
push
add
mov
imul
xor
nop
es
or
shlb
and
daa
mov
push
adc
push
andb
xchg
xchg
push
and
and
push
fmull
jmp
xchg
and
int3
or
sbb
ret
not
jne
sub
xchg
add
shl
jmp
push
add
mov
roll
and
orl
xor
cwtl
movsl
andb
test
mov
xchg
and
add
jl
inc
fsubs
xor
imulb
nop
imull
jbe
and
jp
pop
add
adc
add
push
and
pop
or
pop
ja
xchg
add
mov
out
jne
test
push
pop
stos
jno
xlat
pop
adc
xor
mov
push
es
pop
mov
hlt
pop
aaa
or
into
addl
inc
movsb
push
sub
add
pop
lret
cmp
and
xor
add
popa
and
add
test
in
or
and
inc
pop
push
and
add
mov
inc
inc
push
mov
jmp
lret
xchg
push
lods
dec
ret
xor
ds
pop
cmpl
mov
shrb
add
add
adcb
mov
cmpsl
cmpsb
xlat
lock
loope
add
dec
or
xor
fdivrl
repnz
mov
push
xor
jbe
test
xchg
dec
sub
pop
fs
pop
out
ja
sub
add
push
inc
push
mov
push
fimuls
ljmp
jl
and
push
neg
dec
jmp
ret
add
jl
or
xor
lea
mov
push
leave
mov
cmp
push
xorb
gs
inc
add
icebp
sbb
das
pop
lds
sbb
jnp
add
jmp
out
jecxz
push
in
adc
sub
mov
fdivrp
fdivs
mov
sbb
sub
loop
xchg
in
push
xlat
mov
cs
faddl
xchg
mov
cmp
jne
or
push
popa
push
lea
hlt
and
inc
push
and
and
mov
mul
add
lcall
les
aam
add
or
xor
aad
ret
mov
std
stc
add
cli
push
jmp
jge
cli
dec
mov
outsl
mov
sbb
jnp
ja
repnz
and
sbb
sub
add
or
jecxz
add
push
sub
pop
push
or
ret
add
inc
pop
pop
daa
adc
adc
push
scas
xor
jb
clc
dec
or
rorl
outsl
fildl
scas
neg
cli
imul
pop
sub
stc
sub
adcl
mov
add
pop
mov
lea
add
sti
add
cmp
addb
xor
jge
shrl
mov
xchg
push
xchg
add
cmp
and
adc
dec
out
frstor
push
pop
jl
lcall
dec
pop
inc
push
jmp
adc
stc
add
mov
jns
inc
pop
push
add
repz
dec
jo
rolb
jb
les
jle
cmp
fxch
push
jp
sub
aaa
lret
push
xor
dec
cmp
call
fisttpl
test
mov
jp
lea
cwtl
mov
cmpsb
jns
add
or
repnz
xchg
fnsave
push
das
xchg
jmp
sti
inc
mov
add
sarb
mov
lods
daa
pop
fs
jecxz
loop
andb
in
or
jecxz
popa
push
mov
xor
mov
das
not
inc
test
arpl
inc
lcall
inc
or
jmp
mov
in
pop
sub
and
add
dec
inc
pop
pop
xchg
xor
pop
ds
sub
pusha
outsb
rcll
call
sub
jae
and
dec
je
add
pop
add
jmp
xchg
mov
je
pop
push
test
insb
addl
in
jg
push
cltd
mov
movsb
add
jne
mov
pop
jg
mov
push
mov
daa
cmpsb
inc
mov
add
add
push
push
push
mov
dec
jmp
data16
add
jo
pop
sbb
stc
pop
rclb
mov
add
sarl
jle
insl
nop
sti
add
or
popa
ja
or
ljmp
xor
aam
push
cvtps2pd
cmpsb
imul
mov
jg
mov
aam
xchg
xadd
push
push
push
iret
and
add
pop
push
mov
add
jnp
sbb
cmp
sub
pusha
repnz
cmp
loop
pop
aaa
jg
in
cltd
add
xlat
push
scas
outsl
insl
adc
ret
dec
loope
and
adc
rorl
fwait
jo
sbb
fldt
pop
clc
add
ret
adc
pop
cmp
and
push
insl
inc
insb
xlat
pop
mov
sarl
push
xor
out
pop
imul
mov
jmp
lods
add
add
xchg
dec
sti
adc
sbb
out
insl
outsb
shlb
pop
jno
cltd
fcoms
mov
cmp
daa
mov
lretw
pop
hlt
out
dec
push
shl
dec
adc
sub
ds
mov
cmp
xchg
daa
mov
add
adc
add
cmpsl
fisubrl
addl
or
fildl
stos
add
and
in
faddl
adc
fsubrs
mov
loop
movsb
into
push
push
jmp
dec
dec
ror
mov
pop
jmp
or
jae
mov
add
cs
pushf
lods
add
in
mov
mov
loopne
pop
sub
pop
sub
push
lods
jne
out
pop
mov
repz
in
mov
dec
add
scas
jns
mov
add
insl
mov
aas
push
pusha
nop
mov
jge
test
mov
scas
xchg
mov
adc
sbb
inc
dec
jmp
decb
jecxz
pop
mov
movsb
aas
mov
lock
jmp
out
cmp
sbb
ljmp
or
inc
scas
push
sbb
xorb
inc
inc
xchg
pusha
xor
jns
mov
lcall
test
loopne
shrl
pop
mov
push
in
lret
outsb
into
add
xchg
notl
shr
sub
xor
popa
xchg
push
mov
add
sub
insl
jmp
mov
dec
sbb
mov
or
push
incl
sub
sub
lock
sbb
dec
inc
fstpt
xchg
xchg
jmp
cwtl
mov
fstps
aas
lea
lods
cmpsb
push
push
cmc
arpl
xlat
orl
movb
and
inc
jmp
sbb
cmp
jmp
and
add
sub
pop
fldcw
lahf
mov
loopne
pushf
or
mov
jmp
lret
pop
repnz
mov
jo
sbb
cmovbe
mov
fimull
mov
add
jmp
popa
push
xchg
add
popa
dec
stos
sub
jno
add
xor
mov
sbb
and
ret
mov
mov
push
pop
pop
call
mov
sub
lods
inc
mov
insb
xchg
mov
fs
pop
dec
add
neg
rcll
push
pusha
bound
adc
cmp
js
xor
pop
nop
cmpsl
mov
out
and
movsl
stc
insl
inc
push
push
fldt
push
fcoml
or
jb
and
mov
aam
es
movsl
psubb
pop
sub
rorb
in
in
jge
add
jecxz
in
sub
stos
icebp
sub
fisttps
jno
sahf
push
lahf
fists
stc
sub
jg
lahf
test
dec
adcb
push
clc
aas
cmpl
test
jmp
adc
insb
arpl
mov
jae
mov
or
hlt
pop
hlt
add
ds
add
add
or
adc
test
roll
mov
dec
lea
rorl
mov
test
jmp
mov
adc
cmp
cmp
sbb
ret
xor
and
out
test
les
jl
sbb
dec
lret
out
neg
or
fdivrs
mov
test
adc
or
lcall
cmp
xchg
and
fs
mov
loop
adc
fldt
lods
add
push
mov
js
mov
pop
add
xorb
sub
inc
jae
or
push
jg
pop
sbb
pop
imul
cwtl
roll
mov
push
out
mov
pop
lock
dec
orb
mov
or
or
cwtl
sub
or
sub
lret
push
adc
icebp
adc
push
mov
lea
sub
sub
push
das
insl
jl
add
or
shlb
sub
loop
jge
jbe
in
jnp
xor
nop
jmp
adc
or
add
lret
bound
or
jmp
jno
or
cmp
imul
add
dec
neg
cld
push
dec
scas
xor
push
sbb
sub
xorl
bound
notl
sub
xor
call
and
cli
inc
sub
orb
push
push
sbb
push
shr
push
les
push
in
sub
das
jl
aad
or
xor
add
sarl
xor
inc
std
sbb
jns
sub
std
mov
cli
gs
addl
jle
pop
repnz
sub
out
jmp
and
xor
fstpl
jmp
rcr
mov
scas
sbb
cltd
stos
dec
add
out
lret
cmp
popf
rol
dec
or
jmp
add
adc
dec
pop
push
mov
sub
push
dec
add
xor
push
or
xchg
or
add
push
push
xchg
and
pop
jmp
mov
or
call
jmp
mov
xchg
scas
fadd
push
js
shrb
iret
adc
es
pop
pusha
add
jmp
sub
repz
sbb
mov
nop
sbb
roll
add
adc
mov
hlt
aas
add
or
out
mov
add
pop
je
xchg
mov
aad
cs
or
cmp
into
pop
int3
and
pop
mov
cmovno
loope
lds
add
or
mov
mov
mov
jns
fsubs
lods
push
pop
xor
fs
jno
cld
nop
fsubrs
cmpb
mov
inc
nop
loop
insl
push
dec
daa
ror
and
cmpl
or
push
add
cmp
push
jge
push
out
cmp
enter
adc
daa
pop
push
fcoml
mull
mov
outsl
sbb
or
les
test
mov
add
pop
push
mov
sub
rol
lock
call
fists
mov
xchg
mov
or
jle
dec
jmp
repnz
cmp
and
scas
js
mov
js
sub
mov
sub
hlt
or
pop
mov
lea
xor
shrl
lds
mov
cmp
mov
inc
stos
jle
inc
ljmp
and
and
and
dec
or
andb
mov
gs
sahf
pop
sarb
and
rcll
popf
nop
fldcw
pop
pop
int3
dec
stos
dec
pushf
mov
dec
and
inc
pushf
ret
cmp
lods
movb
or
int3
push
xor
or
test
xor
jae
cli
push
push
fistps
sbb
xor
add
xlat
ds
das
mov
jge
nop
addl
fdivrs
test
adc
mov
adcl
pusha
rorl
push
pop
pop
out
popf
or
test
mov
and
push
pop
mov
add
ja
jne
comiss
enter
xchg
push
cmp
push
push
mov
and
sbb
rcrl
and
shlb
jb
not
dec
push
ljmp
push
xchg
int
ds
pop
fisttps
ret
loope
and
addr16
mov
adc
arpl
jmp
mov
jge
inc
ljmp
shrl
insl
sbb
cmp
into
bnd
fadd
repnz
daa
push
popa
out
and
and
xlat
aas
pop
sub
add
in
jle
jmp
jnp
or
push
add
jmp
and
push
mov
jg
je
or
jecxz
js
sbb
mul
mov
jbe
roll
cli
fmull
in
mov
lahf
and
pop
add
push
in
pop
and
leave
jb
adc
sahf
pop
pop
out
cmp
xor
or
pop
mov
lds
es
cltd
xchg
and
popf
xor
pusha
ficoml
hlt
outsb
das
cwtl
push
or
pop
add
cmp
sub
xor
adc
xor
das
inc
or
das
xor
frstpm(287
inc
jmp
dec
fsubrs
push
jno
les
sub
insb
lret
lret
hlt
or
loope
je
or
sub
and
xchg
inc
mov
jmp
shl
mov
cmpsl
mov
clts
pop
dec
dec
insb
cmp
push
call
or
jb
jl
popf
daa
jmp
adc
xorl
dec
jl
lock
adc
mov
stos
test
mov
xchg
jmp
mov
outsl
cmp
int3
aaa
mov
pusha
sbb
dec
out
sbb
push
cmpsl
sbb
or
jp
dec
dec
lret
sub
testb
shl
xor
sub
mov
add
addb
movsb
cmp
std
mov
xchg
inc
punpckhbw
rcrb
ja
and
inc
sub
inc
adc
add
xor
adcl
paddsb
adc
dec
xchg
push
push
push
sbb
es
cmp
cwtl
jo
rolb
xchg
loop
pop
adc
hlt
mov
mov
jmp
or
xchg
add
push
inc
jmp
dec
outsl
dec
insl
ss
mov
jne
dec
or
dec
mov
ret
aad
mov
pop
jbe
and
xor
pop
mov
clc
dec
sub
xchg
loopne
add
loope
aam
mov
jbe
adc
rorl
xchg
sub
cmovb
shll
sbb
fstpl
testl
lods
add
lret
or
rol
bound
insl
clc
pop
and
jmp
aad
cmc
mov
rcrl
into
call
sbb
lods
push
inc
pop
fsubr
test
pop
stos
pop
xor
xchg
and
add
add
lock
sarb
inc
xor
negb
jmp
xchg
sbb
ljmp
cld
das
sub
loop
ret
mov
push
inc
scas
fisubs
repz
addr16
jno
das
or
push
push
scas
daa
jno
sub
inc
add
pop
inc
jl
hlt
pusha
jnp
mov
sub
scas
repnz
out
mov
xor
lcall
rol
fimuls
mov
lret
jbe
hlt
pushf
and
mov
icebp
dec
mov
int3
aam
aad
fwait
loope
lods
fldenv
or
movsb
repnz
or
insl
stos
je
daa
push
lods
adc
push
mov
cmp
dec
pop
out
mov
add
jl
int
push
rcll
scas
jg
cld
outsl
adc
inc
jno
fnstcw
sbbb
push
mov
push
inc
inc
dec
push
sbb
mov
and
add
and
push
sub
push
cmpsb
add
decb
not
jmp
fiadds
shr
jne
mov
jmp
testl
add
mov
sub
mov
lock
mov
pop
jge
push
add
add
call
ds
and
push
lahf
add
jne
push
movsl
int
mov
repz
cmp
cmp
jg
cmp
sub
sub
push
out
jno
or
adcb
jb
pop
xor
cltd
push
jne
out
sbb
popa
iret
mov
cld
mov
push
jle
inc
inc
jle
mov
or
jmp
adc
sbb
jp
push
dec
ret
dec
jns
xor
je
sti
insl
lcall
sbb
pop
stos
add
inc
jmp
ret
es
pop
jae
pop
sub
ljmp
or
pop
fisubs
jp
test
pop
mov
insl
or
and
outsl
add
jno
jns
das
dec
movsb
push
jae
cmp
cltd
xchg
jg
push
sti
leave
rcll
and
add
popf
and
push
in
out
inc
mov
lock
movsb
sbb
cmc
and
or
es
add
int
inc
iret
sbb
fildl
pop
add
push
mov
and
cli
test
sub
fisubs
lcall
int
inc
mov
sub
xor
jp
or
call
cmp
int
arpl
mov
add
mov
es
sbb
ds
out
cld
out
xlat
jmp
xchg
gs
mov
pop
mov
jp
sub
insl
or
pop
cmp
pop
adc
lret
pop
mov
jmp
cwtl
mov
out
popf
inc
insb
in
lods
sahf
adc
and
jp
clc
adc
xchg
sub
add
or
dec
sarl
jg
push
inc
rcrb
pop
loop
or
or
xchg
movsb
pop
cli
les
and
cld
cmp
adc
push
out
dec
xor
pop
subb
das
and
rorl
jmp
cwtl
insl
out
das
or
xchg
cwtl
fnstcw
add
sbb
and
push
xchg
sub
and
lcall
test
in
sub
xor
adc
push
push
lds
xchg
orb
dec
adc
add
pop
push
push
jmp
dec
xchg
dec
pop
push
jbe
and
ss
xchg
pop
lahf
pushf
push
cmpsb
out
add
pop
cmp
dec
inc
lods
sbb
or
jecxz
pop
and
sbb
xchg
adc
add
pop
cli
sub
inc
pop
mov
and
test
jmp
dec
jmp
in
out
testb
jmp
dec
and
mov
and
xlat
pop
jae
fimull
and
imul
sub
dec
lea
mov
pushf
aas
pop
pusha
add
jecxz
pop
enter
in
mov
shrb
test
or
cwtl
cltd
cmp
xor
adc
subb
pop
adc
stos
fisttpll
dec
push
add
je
add
xor
adc
lds
mov
mov
inc
unpckhps
mov
inc
lods
les
inc
dec
pop
and
btsl
dec
ficoms
push
adc
mov
sbb
push
hlt
in
add
in
add
push
mov
not
jo
rol
inc
mov
pusha
adc
cmp
add
xor
mov
test
movsl
scas
and
lods
dec
add
popf
push
mov
imul
xchg
shr
shl
testb
call
push
sub
popa
mov
popa
inc
icebp
setg
cmp
in
lods
syscall
jb
push
jle
pop
out
push
or
dec
sub
inc
inc
add
pop
push
mov
and
dec
pop
loope
repz
inc
or
mov
pop
leave
fdivrl
add
pop
mov
push
and
add
push
lahf
add
jecxz
xchg
es
ret
jne
xchg
adc
repz
pop
int3
add
out
add
sub
mov
xchg
fwait
aam
push
add
bound
enter
pop
sbb
out
mov
push
mov
jmp
add
cld
dec
and
mov
or
mov
mov
dec
mov
add
pop
push
inc
or
fldt
xor
insb
mov
pop
add
dec
lahf
jge
push
cmp
not
inc
test
jbe
cltd
je
test
push
xor
jne
jle
sbb
jg
jb
or
pop
hlt
or
jno
xchg
clc
cld
and
xchg
pop
inc
sarl
jns
add
push
test
push
test
aaa
or
test
cmp
popa
add
cltd
and
add
cmpsb
adc
leave
pop
dec
sub
sub
filds
shr
cmp
dec
nop
ret
or
mov
mov
sub
call
xchg
jmp
pop
xor
inc
pop
loope
inc
cmpsl
mov
out
and
add
fdivs
pusha
xlat
dec
loopne
cmp
xor
sahf
and
cs
daa
add
xor
cld
inc
push
pop
std
fwait
insl
cs
dec
add
notl
dec
fstps
jnp
ret
adc
push
mov
mov
xor
or
cmp
adc
push
xlat
xor
inc
mov
pusha
adcb
cmpb
xor
aad
shll
jmp
add
loopne
lret
rcll
addb
add
sub
loop
das
sbb
jp
lock
mov
and
add
fsubrs
inc
sahf
cli
mov
pop
neg
xorb
sub
pop
out
dec
pop
xor
hlt
mov
cmp
ljmp
and
xor
ret
popa
jo
daa
popf
mov
sbbb
xor
insl
xor
ret
jecxz
pop
or
in
in
and
jmp
jmp
lods
adc
mov
adc
stos
mov
dec
arpl
jg
fcmovu
lea
lret
ljmp
push
rcrb
mov
mov
fcompl
out
aad
push
pop
and
fstps
lods
or
inc
inc
pop
add
dec
add
add
pop
pop
xchg
jo
pop
mov
inc
sbb
dec
or
pop
notl
pop
xchg
test
cld
nop
xchg
inc
sbb
pop
gs
aam
jo
cmp
pop
das
jmp
cli
xchg
push
mov
xchg
push
incb
and
jmp
push
in
mov
adc
lock
dec
pop
or
mov
mov
cld
xchg
dec
push
pop
pop
mov
aad
and
sub
or
or
jmp
dec
add
adc
or
adc
aaa
repnz
mov
in
inc
subb
test
jmp
pop
inc
xor
ss
or
fisttpl
sub
jmp
addr16
out
and
add
out
fildl
add
out
leave
or
jl
fs
out
or
jl
add
aad
loopne
push
popf
push
and
pop
push
andb
ds
mov
adc
shrl
add
filds
adc
mov
fldenv
add
xor
jl
adc
mov
in
inc
push
jmp
dec
add
jnp
dec
scas
push
mov
mov
pop
loop
and
xchg
fs
aaa
mov
pop
inc
cwtl
loope
adcl
in
data16
cs
fsubs
sub
ds
lods
sub
and
adc
push
push
int3
sbb
ds
idivl
xchg
add
xchg
mov
scas
sub
mov
punpckhbw
xchg
push
out
out
push
inc
jae
and
add
scas
xchg
adc
mov
xchg
iret
pop
aad
pop
mov
xlat
andb
pusha
push
ja
ja
dec
adc
mov
ljmp
repz
inc
mov
addb
or
jge
push
call
push
sub
mov
add
ficoms
fstpl
outsb
sbb
xchg
adc
dec
loop
loop
add
mov
dec
push
inc
clc
jle
xchg
pop
mov
sarb
xchg
or
pop
add
fimuls
mov
movb
push
mov
mov
or
xlat
jl
mov
push
and
lea
or
lcall
dec
jo
popl
int
inc
clc
xor
push
nop
lret
aaa
sbb
pop
xor
cmpsb
and
shrl
imul
sub
or
push
daa
daa
jmp
inc
jecxz
in
jle
push
mov
icebp
aas
inc
xorl
and
outsl
bound
xor
lds
data16
pop
icebp
pusha
sub
test
into
mov
mov
and
push
adc
dec
int3
or
mov
fdivrl
lods
lret
add
or
mov
push
ret
add
lret
lret
and
jne
mov
add
cltd
nop
pop
mov
outsb
icebp
mov
xor
add
js
into
pop
inc
cmc
mov
mov
aas
push
mov
add
add
inc
mov
sub
out
cwtl
jb
fmull
in
cwtl
jecxz
jl
dec
mov
jnp
jge
sbb
mov
cwtl
gs
ret
xor
mov
add
pop
add
mov
jmp
xor
out
dec
lods
adc
das
dec
test
xlat
and
not
inc
icebp
sbb
sbb
adc
out
add
add
test
mov
jle
pop
inc
push
out
nop
nop
add
mov
mov
in
cs
sub
and
push
inc
jb
add
add
mov
nop
orl
and
push
push
xor
cmp
lahf
jne
cmc
push
inc
jle
mov
jl
mov
adc
adc
loop
or
dec
sarl
fmuls
cmp
nop
leave
sub
jecxz
or
pop
aaa
adc
sub
rcr
mov
movntps
icebp
stc
sbb
inc
mov
fs
cli
jmp
mov
mov
neg
rorb
add
jmp
iret
stos
adc
xor
cli
stc
cmp
add
mov
xor
add
pop
shr
mov
push
out
outsl
sbb
sbb
es
lea
lret
repz
add
jle
mov
shrl
xchg
in
lock
lock
push
clc
out
xor
sub
pop
in
test
add
pop
shl
jmp
sub
pop
push
jmp
xor
scas
pop
mov
dec
jmp
je
fs
dec
icebp
mov
and
jmp
pop
pop
or
in
xchg
xlat
repnz
rclb
jmp
sbb
jo
or
test
or
pop
push
mov
fwait
aas
push
fstps
pusha
cmp
cmpsl
ja
addr16
rcrl
mov
lds
invd
xchg
mov
incl
in
cmpsb
es
int
dec
and
cld
and
outsb
mov
stc
sub
add
aas
add
test
test
call
popa
mov
aas
cmp
mov
adc
or
jmp
ja
fwait
pop
mov
and
adc
push
mov
adc
test
and
stc
lret
and
push
fisttps
xor
xor
pop
addr16
decb
add
mov
stos
sbb
dec
pop
add
lcall
sti
lret
bound
push
in
xchg
add
lock
and
cmp
iret
dec
add
pop
inc
and
inc
or
aaa
repnz
int3
push
and
adc
mov
stos
mov
cmp
icebp
loop
les
sti
xor
jg
xchg
mov
subb
add
imul
ljmp
cmpsb
jne
xor
dec
dec
push
inc
adc
std
pusha
xlat
push
xlat
nop
push
stos
sarl
xor
mov
xor
pushf
jmp
add
mov
add
add
add
das
inc
mov
push
mov
or
je
or
arpl
mov
adc
aas
mov
cwtl
data16
jmp
or
sbb
jecxz
pop
sbb
or
scas
and
mov
add
or
jp
pop
cmp
adc
dec
add
pop
push
add
sti
xchg
adcb
mov
jmp
pop
mov
inc
imul
cltd
imul
xchg
mov
jle
loope
cs
outsb
fnstenv
or
add
pop
jo
jl
test
xchg
ja
jae
cs
lods
mov
daa
icebp
adc
push
inc
pop
divl
inc
xor
xor
ret
pop
mov
inc
inc
stos
andl
popa
push
sbb
ljmp
push
out
pop
sbb
lret
add
jle
lret
ja
ffree
and
or
sbb
xor
xchg
jge
push
xlat
popa
rcrl
cwtl
nop
mov
mov
call
orb
imul
push
jne
pop
mov
pop
fmul
lret
repz
and
sub
cltd
sub
in
lcall
push
mov
push
ds
jmp
and
xor
dec
cwtl
in
and
flds
mov
push
fcmovbe
call
loop
sbb
es
sub
add
sub
mov
jno
inc
cld
add
jns
xor
mov
fidivrl
jo
rolb
mov
mov
rcr
jle
push
sbb
hlt
orb
jnp
xor
push
mov
movups
or
fcos
add
enter
iret
pop
mov
push
clc
es
adc
or
ss
jns
xorb
mov
inc
add
xor
gs
jp
mov
push
push
push
pop
aam
fmul
pop
xchg
xor
shlb
fimuls
push
xor
jle
sub
rorl
xor
stc
jb
and
lds
or
arpl
cs
mov
lock
cmp
bound
mov
pop
das
push
or
and
or
xor
cmp
insb
pop
js
pop
mov
cmp
add
hlt
jmp
ret
sbbb
cld
into
xchg
jne
xchg
jecxz
push
sub
sarl
sub
pop
xchg
jl
stos
mov
ljmp
adc
xchg
addb
xor
add
movsb
repz
shll
das
loop
mov
sbb
outsb
mov
jmp
pop
xor
and
xchg
mov
popa
dec
in
fnstenv
leave
lret
add
daa
xorl
mov
jp
xchg
push
repnz
pop
xchg
adc
into
loope
fistps
or
push
pop
ja
mov
inc
xchg
inc
outsb
and
xchg
popf
push
push
dec
cmp
pop
addr16
mov
movsb
pop
cltd
adc
inc
mov
cmp
inc
ljmp
gs
lret
add
xchg
les
xor
test
pop
data16
pushf
adc
pop
test
mov
xchg
mov
in
add
repnz
cmp
sbb
bound
xchg
add
inc
sub
add
add
adc
pop
adc
xlat
adc
xchg
add
ss
jnp
add
and
push
xchg
add
in
inc
inc
dec
mov
or
xor
and
mov
pusha
xor
sub
pusha
daa
or
sub
push
and
std
sbb
xlat
sar
mov
push
add
call
iret
jmp
add
idivl
or
pop
adc
fcoms
xorl
add
sbb
xchg
popa
inc
sbb
xchg
add
xchg
or
jl
ss
test
xchg
jne
popl
insb
mov
adc
scas
adc
add
lds
js
jmp
test
xor
or
sbb
mov
sbb
pushf
int
dec
testb
or
push
push
dec
pop
xor
push
jo
movsb
addr16
mov
adc
loope
negl
mov
ds
push
addr16
dec
loope
xchg
lret
cmp
shrl
jmp
fmuls
push
jp
mov
sbb
add
dec
inc
jecxz
and
sbbb
popf
xor
push
cmp
aaa
inc
sti
lret
fs
sbb
outsl
adc
push
add
fs
push
and
adc
push
push
xchg
ret
aas
cmp
rolb
and
mov
pop
or
sti
ja
push
dec
out
movsb
mov
scas
jo
popf
xchg
push
xor
xchg
mov
sbb
push
or
adc
mov
sub
js
aas
int3
add
loopne
sbb
mov
or
fsubrp
out
sbb
push
pop
cmc
mov
or
lods
jbe
xchg
sarl
std
or
enter
xorb
jb
addr16
bound
insl
cli
or
ret
jne
add
sahf
stc
fildl
pusha
dec
sub
push
adc
fucomp
cmp
not
fsubl
xchg
clc
and
mov
stc
int
cmp
decb
or
push
pop
cmc
xchg
and
jno
sarb
xor
cmc
loop
fstl
adc
pushf
lret
pop
js
dec
push
jne
mov
lds
or
mov
je
repz
or
cmp
jmp
push
gs
ret
sarb
or
push
add
xchg
xchg
jnp
dec
xor
and
mov
pop
ret
xor
jg
pop
out
test
xchg
adc
mov
push
xchg
inc
stc
sub
add
jae
and
cmp
mov
loop
cmp
and
mov
xchg
lods
add
xor
pop
cltd
mov
roll
insl
in
lret
push
adc
das
jle
xor
sbb
mov
fsubs
or
jns
pusha
aaa
inc
add
inc
scas
dec
and
pusha
inc
or
xor
addr16
dec
jg
fwait
pop
aaa
jns
adc
xor
cmp
repnz
rcrl
vpacksswb
add
cltd
xlat
add
lret
dec
push
jle
inc
mov
push
test
out
icebp
dec
dec
mov
xchg
fsubl
test
filds
dec
cltd
cmp
pop
mov
data16
dec
or
mov
pop
aam
test
mov
das
push
add
pop
jmp
mov
xchg
or
int3
push
push
or
inc
push
xlat
xor
pop
mov
out
xchg
mov
push
orb
cmpb
xor
cli
sub
jmp
jle
pop
das
push
jbe
cmpsl
add
popl
int3
lea
frstor
mov
jae
cmpl
sbb
stos
pop
cwtl
or
dec
adcb
mov
testl
pop
push
push
push
pop
pop
inc
jmp
stos
into
rcr
setae
arpl
lret
inc
jmp
mov
mov
icebp
and
add
arpl
push
and
pop
or
sub
adcl
cmpsl
sbbl
pop
jo
adc
xor
and
fisubs
push
es
ja
lret
adcb
hlt
mov
add
push
mov
imul
mov
out
or
sahf
or
js
sbb
mov
mov
jl
sub
mov
cmp
out
sbb
inc
and
add
test
push
mov
call
clc
or
iret
cmp
cmovbe
sub
mov
bnd
mov
pop
fcmovnbe
dec
lret
cmp
xor
je
sub
dec
push
add
les
add
enter
shlb
ds
sbb
inc
add
loope
js
pop
mov
xchg
mov
mov
and
int
dec
popa
dec
test
movsl
lea
test
push
jle
adc
inc
add
jo
dec
add
imul
clc
mov
xchg
loopne
xchg
sar
loope
mov
add
call
ret
fisttps
inc
rcll
lret
gs
xchg
in
fcoml
inc
jbe
cmp
xchg
push
gs
arpl
je
mov
pop
shl
or
cld
sub
fildl
add
sahf
mov
data16
int3
xor
xchg
inc
xor
jno
sbb
shlb
cmc
sbb
sbb
pop
nop
ffree
cs
push
iret
or
js
jns
movsl
push
dec
mov
xchg
pop
pop
movsl
inc
push
mov
lahf
fnstenv
outsl
movsl
push
and
sbb
daa
adc
lea
ss
cmp
into
pop
cmp
repnz
sub
neg
or
or
pop
mov
fs
and
outsb
mov
and
fcmovnb
inc
mov
cmpl
mov
sbb
pop
leave
loop
dec
mov
sbb
std
pushf
js
and
sub
sahf
add
jbe
inc
shr
cwtl
and
cmp
popa
aaa
add
or
jle
dec
or
push
pop
push
push
push
mov
and
xor
mov
add
inc
sbb
faddl
jmp
arpl
xor
jp
out
dec
push
sub
mov
lret
jp
cwtl
mov
jge
pop
test
shlb
adc
call
push
testb
rorb
imul
adc
clc
sub
sub
sti
dec
xor
sub
cltd
mov
loopne
xchg
jns
or
xor
fildl
lods
in
push
pop
pop
outsl
ret
add
mov
jmp
or
pop
sahf
dec
js
dec
lret
test
in
adc
xor
out
js
out
sbb
jle
dec
jmp
aaa
scas
sub
adc
fwait
xor
pop
jb
add
dec
dec
inc
jbe
inc
mov
fistl
js
pop
push
leave
push
xchg
jg
inc
js
mov
addl
js
mov
out
stos
fnstcw
push
in
mov
cld
ss
xor
inc
dec
add
fwait
movsl
cwtl
inc
jge
das
repz
sahf
jns
fcoml
jne
pop
movsb
clc
xor
bound
cmp
or
inc
pop
fstpl
push
shr
mov
mov
push
mov
add
xor
sub
sub
pop
sub
mov
orb
mov
pop
mov
push
arpl
xor
mov
cmp
mov
outsl
cmp
push
mov
andl
gs
adc
add
dec
push
mov
push
pop
in
mov
pop
roll
pop
stos
arpl
pusha
sbb
jge
mov
pusha
dec
pop
adc
ficoms
add
mov
rorb
or
sub
testl
in
fstl
add
push
jmp
add
adc
pop
mov
push
out
aad
pop
cwtl
and
jno
out
sbb
rcrl
imul
ret
outsl
pop
push
fs
lods
scas
sbb
jecxz
cmc
in
mov
leave
cmpsl
pop
and
mov
jp
jmp
xor
dec
les
pop
adc
xchg
mov
push
jae
and
sahf
jb
imul
push
mov
sub
push
pop
int
mov
push
hlt
add
loope
pusha
pop
xor
dec
pop
dec
nop
push
add
aam
inc
mov
pop
outsl
push
pop
shr
sbb
mov
test
shl
mov
ret
sbb
pop
aad
dec
jbe
pop
push
sbb
ret
add
mov
xor
mov
push
addr16
mov
inc
shr
ds
jecxz
mov
fdivl
or
nop
mov
loope
daa
cmc
add
nop
push
or
jmp
mov
ljmp
or
jmp
mov
je
out
inc
push
icebp
lock
push
dec
xorb
loope
jmp
repz
call
jae
testb
inc
mov
xorl
push
addl
or
mov
pop
inc
pop
das
sti
int
jmp
ret
mov
leave
add
jl
or
movsb
std
mov
icebp
adc
in
out
and
add
shl
xorl
add
cwtl
or
add
nop
pop
stos
pop
sub
lds
or
popf
aaa
jle
or
add
int
loopne
add
xchg
loope
call
in
jo
lea
inc
xor
test
xorb
dec
or
ss
xchg
mov
in
mov
or
mov
mulb
adc
cmp
mov
pop
pop
icebp
cmp
pop
pop
stos
daa
pop
stos
mov
mov
cld
jno
pop
jb
out
adc
je
mov
jge
xchg
test
movsl
jg,pt
xor
or
mov
and
mov
dec
orb
popf
or
jge
gs
xlat
das
pop
pop
cwtl
mov
insl
pop
lcall
add
je
insb
shlb
and
dec
lods
sub
and
xchg
jnp
add
jmp
sbb
shlb
cmp
add
pop
push
xor
imulb
xlat
push
inc
hlt
xchg
xor
adc
pop
pop
sub
sub
popf
add
loopne
icebp
inc
pop
push
stos
lcall
jae
and
jno
lods
rcrb
xchg
or
add
sub
fnstenv
ret
inc
adc
push
pusha
add
inc
das
sub
ret
or
or
notb
jb
or
push
lods
mov
jge
mov
std
int
inc
mov
aad
mull
jl
fistps
mov
and
adc
les
xchg
ficompl
mov
outsb
sub
ret
xchg
mov
aas
and
add
rol
pop
xor
andl
jge
push
cmp
daa
jmp
out
sub
in
sbb
pop
sarl
sbbb
cmp
push
jb
xor
mov
pop
in
inc
imul
jle
jns
add
stos
add
mov
and
clc
es
je
adc
mov
or
push
jo
sub
pop
cmp
call
cmp
mov
sbb
pop
iret
or
outsb
dec
push
add
jmp
cld
dec
loopne
outsl
pop
inc
pop
data16
lods
push
bound
sahf
push
insl
dec
fnstsw
inc
out
mov
ret
pop
mov
pop
push
int
add
inc
pop
subb
fnstenv
pop
pop
inc
or
pop
or
inc
in
stos
sbb
pop
lock
mov
cmp
pop
mov
cmpsb
cmp
mov
js
daa
pop
and
add
push
ljmp
push
idivb
dec
mov
leave
lret
fsubr
lcall
out
mov
addr16
jnp
jbe
fadd
loope
shrb
ja
aas
xor
mov
ret
mov
jnp
adc
ja
sub
jg
and
xor
sti
add
pop
push
pop
mov
sbb
jb
les
fwait
add
xor
dec
adc
cwtl
adc
orl
orb
pushf
jle
xchg
add
xor
aaa
imul
push
or
inc
or
cmp
jb
scas
mull
ret
or
mov
das
call
je
mov
test
xor
or
test
lcall
add
ret
movsl
loopne
divb
push
imul
loope
cli
mov
or
push
cmp
es
xor
cltd
lret
and
stc
sti
xchg
push
xchg
cmpl
sub
push
cli
jno
fdivrl
sbb
sbb
or
sbb
add
sub
mov
stos
cwtl
cld
ret
gs
sbbb
negl
add
das
out
add
es
test
rorb
lret
cwtl
enter
test
cmpsl
in
push
mov
mov
out
into
or
pop
or
pop
sub
movsl
mov
sbb
push
adcb
add
pop
aaa
xchg
icebp
cld
xchg
fstl
adc
inc
xchg
dec
lfs
mov
push
fildll
and
jae
enter
adc
or
inc
loop
push
jmp
pop
aad
in
or
mov
jp
mov
test
cwtl
lds
pop
push
pusha
jb
cmp
adc
push
lods
inc
or
mov
and
fwait
mov
bound
addr16
fs
adc
enter
push
or
mov
add
rclb
add
iret
mov
mov
dec
ret
fsubrs
lahf
test
push
mov
mov
outsb
inc
dec
xchg
stos
mov
movsl
testb
fld
pop
pop
shl
sbb
sub
inc
mov
mov
pusha
sub
pusha
cmp
flds
push
in
sub
xchg
dec
sub
adc
test
xor
add
sti
xchg
adc
cltd
sti
cmp
jae
lahf
push
and
cli
pop
mov
cs
sub
inc
sbb
dec
in
xor
mov
sub
push
add
mov
or
aam
lds
cmp
jmp
rclb
pop
scas
xor
adc
arpl
dec
cmc
sub
xchg
and
hlt
or
lods
pop
add
aad
scas
mov
xchg
dec
clc
or
push
stc
or
dec
repz
test
cwtl
xor
leave
sub
in
addr16
dec
fdivl
aas
and
push
repnz
inc
jmp
xor
ljmp
add
mov
loope
push
and
jmp
cmp
leave
jmp
outsl
lds
arpl
fstp
loope
inc
aad
push
addr16
sub
jne
mov
adc
dec
sbb
bound
cmp
ds
pop
and
in
add
jg
mov
cmovs
pusha
pop
mov
loopne
mov
sbb
mov
xor
repnz
shl
dec
dec
leave
in
xlat
mov
icebp
lea
std
push
shrb
shrb
fsubr
popf
lock
push
mov
mov
pop
daa
sbb
sbb
addr16
xchg
popl
dec
xor
mov
add
push
sbb
js
jg
js
jp
and
testb
or
cmp
mov
or
jmp
std
pusha
loop
adc
cmp
xor
mov
or
daa
push
jnp
cwtl
push
loope
jb
mov
bound
idiv
out
push
add
andb
and
clc
mov
add
dec
jmp
in
inc
push
aaa
mov
pop
push
add
add
and
sub
push
push
jae
mov
std
mov
cltd
push
dec
les
data16
out
or
in
mov
popa
cltd
jae
cmc
xor
imul
push
pop
xchg
insb
rol
add
or
lret
push
and
and
and
in
sub
popf
xchg
or
push
or
inc
or
pop
popa
bound
pusha
ffreep
pop
iret
aaa
xor
or
in
icebp
insb
dec
or
adc
inc
xchg
pop
pusha
xchg
repnz
mov
shll
push
jmp
and
add
sbb
push
add
or
sub
jmp
shl
add
push
push
rol
test
and
lret
mov
test
or
jle
inc
xor
push
and
fwait
adc
xor
imul
lcall
push
inc
and
mov
mov
enter
rol
repnz
inc
fprem
xor
stc
dec
leave
adcl
adc
jle
hlt
and
xor
cs
cmp
ret
mov
xor
adc
dec
pop
js
mov
or
sub
xchg
xor
jb
into
cmpsl
outsl
cmp
sub
jp
mov
rol
inc
sub
or
mov
loop
ret
pop
add
nop
push
and
mov
inc
pusha
jl
addb
and
and
jmp
inc
or
xor
cmovb
pushf
fisubl
push
cmp
out
pop
xchg
and
fisttps
stos
xchg
jg
pop
pop
shrl
adc
push
int3
pop
adc
call
ss
pop
popf
lcall
andl
mov
inc
lcall
call
inc
pusha
std
movl
push
or
xor
inc
add
lahf
and
push
or
mov
mov
int
lds
sbb
fwait
out
sbb
inc
fistpl
cmp
add
push
jb
pop
shll
repnz
add
or
add
push
push
shr
cmpsb
add
test
jnp
ljmp
cs
testb
push
xchg
sub
mov
jns
pop
xlat
int
sub
clc
xor
adc
sub
dec
sub
jle
ret
push
dec
xor
shl
cmpsl
adc
cmp
popf
lock
es
adc
mov
stos
daa
mov
adc
hlt
xchg
pop
push
insb
lods
negl
mov
jmp
push
push
mov
inc
in
iret
add
jmp
repz
andb
add
aaa
sub
shlb
adc
addl
mov
xchg
sbb
orb
mov
lret
or
sub
pop
pop
shr
mov
lods
adc
or
add
pop
push
or
das
or
sub
loopne
sahf
push
mov
dec
pushf
adc
xor
imul
cmp
scas
add
push
xor
mov
std
and
pop
push
sub
into
mov
inc
ret
or
sbb
jmp
mov
sti
gs
and
dec
xchg
fdivrl
jno
in
add
es
inc
daa
mov
add
stc
xchg
lret
mov
xor
rclb
or
or
shr
push
pop
sub
sbb
daa
arpl
pop
cmp
lret
add
int
sub
xor
xorb
enter
cmpl
popa
xor
lock
sub
loopne
add
test
sbb
jnp
and
pop
push
add
sub
jmp
cld
shlb
fs
and
add
test
mov
shll
cmpsb
and
gs
inc
and
cwtl
ret
pop
stos
cmp
fimull
adc
adc
jecxz
push
push
je
mov
or
sub
in
mov
std
pop
xor
mov
insl
sahf
push
aaa
add
mov
xor
add
loopne
adc
adcl
lahf
cmp
pop
mov
lret
adc
mov
addl
bound
lea
and
inc
adc
push
aam
and
shrb
and
cld
repz
popf
mov
push
inc
ja
mov
mov
fwait
inc
popf
repnz
and
shlb
add
cmp
dec
add
pop
cmpsb
inc
xchg
push
mov
aaa
pop
std
andb
inc
int
xor
inc
clc
popa
add
pop
adc
or
clc
mov
std
popa
lahf
les
mov
neg
add
adc
pop
add
aad
popa
xor
add
test
add
and
fwait
pop
add
testl
fmul
lret
out
cs
sbb
fdiv
xchg
test
pop
fsubs
dec
push
xchg
inc
imul
and
test
or
pop
das
nop
mov
aad
inc
pop
and
nop
jg
lock
or
imul
mov
std
outsl
xchg
dec
ljmp
and
and
stc
adc
stc
mov
popf
sbb
or
jnp
mov
and
fsubl
adc
sbb
push
mov
popa
mov
fsub
jo
rorb
push
push
insb
stc
pop
shlb
int3
dec
fstpt
dec
xorb
es
sub
jb
cs
mov
into
mov
add
jp
fsubrp
xor
push
push
inc
mov
icebp
adc
imul
jle
aam
push
cmp
add
mov
jecxz
push
shrb
or
sbb
out
clc
loop
xor
push
mov
pop
jne
mov
loope
or
sub
leave
into
xor
subb
or
xor
and
scas
add
mov
add
pop
mov
pop
sub
fdivrs
popa
mov
shl
or
mov
lcall
jmp
push
push
push
decb
mov
add
mov
xlat
cmp
loop
lea
jno
inc
cmp
dec
adc
ja
popf
shlb
push
push
lahf
loope
sub
mov
adc
gs
addr16
loopne
jmp
les
add
adc
inc
xchg
inc
xchg
or
stos
repz
jbe,pt
cs
sub
inc
js
xchg
adc
sub
jl
leave
mov
xor
inc
pushf
or
fidivrs
test
push
jnp
das
fisttpl
cmpsb
push
mov
inc
xchg
hlt
add
mov
cld
or
sbb
dec
and
dec
fcoms
out
sub
aas
cmp
cltd
out
adc
inc
push
and
dec
sub
rol
mov
fidivrs
add
loop
add
out
loop
xor
arpl
inc
inc
addl
sub
int3
bound
in
add
adc
fcomps
mov
adc
add
or
inc
inc
rolb
cmp
popa
ja
or
les
stos
add
or
shlb
stc
add
jno
dec
add
aad
loope
lahf
shll
pop
dec
fxam
xchg
jge
add
add
push
sub
add
jmp
cltd
stc
pushl
mov
add
or
iret
inc
jp
orb
movsl
dec
add
dec
pop
add
out
mov
hlt
out
inc
imul
scas
dec
inc
cmp
add
or
stos
sarl
das
inc
ss
pusha
hlt
adc
cmp
mov
add
xchg
fdivrl
sbb
adcl
pop
xor
add
fs
xchg
insb
cli
daa
xor
dec
rcl
das
leave
aas
loopne
fwait
loope
mov
fidivl
in
mov
stc
lock
mov
arpl
adc
loopne
add
push
and
movsl
dec
or
push
add
xor
and
adc
sub
js
jmp
push
pop
mov
stc
sub
sub
or
xor
pop
adc
dec
lods
outsl
loopne
imul
pop
add
lods
mov
insl
sub
and
data16
rorl
adcb
add
add
push
cs
fsubr
fistps
inc
xchg
sbb
movsl
dec
inc
dec
int
mov
pop
or
or
and
mov
push
push
xor
adc
add
inc
fiaddl
je
xor
xorl
inc
push
push
jnp
and
push
pop
jmp
sar
icebp
ljmp
cmpsl
xchg
daa
loope
loopne
dec
ffree
pop
push
test
shr
repz
pop
imul
in
movsl
pop
jmp
pop
mov
add
add
pop
gs
cmp
add
jmp
pop
inc
sub
mov
sub
xor
add
or
or
or
pusha
xor
xchg
aas
pushf
mov
inc
pop
inc
pusha
sub
es
dec
jle
je
mov
mov
and
jb
mov
jno
std
shrl
rol
push
xor
mov
sub
and
dec
push
push
std
jl
test
push
push
fsts
mov
sub
mov
fmulp
or
jg
nop
fidivl
outsb
add
push
pop
scas
inc
inc
lods
ds
rolb
dec
dec
das
cwtl
scas
pop
add
out
xor
leave
std
jbe
adc
jb
xor
add
mov
xor
push
pop
inc
xchg
push
rorl
daa
data16
add
ja
mov
and
fnsave
add
sti
je
testb
scas
call
jmp
shl
je
mov
add
inc
cltd
mov
gs
and
add
scas
inc
push
pop
ficoms
jmp
lea
push
push
sbb
push
fildl
or
fs
inc
pop
jg
mov
xor
inc
cmp
add
jl
jbe
mov
and
xchg
add
mov
call
and
mov
popf
rcll
xchg
popf
pop
ja
lahf
push
int3
inc
int3
xor
or
ljmp
inc
dec
and
xchg
sahf
aam
in
pop
out
aas
jo
sbb
sub
inc
xchg
or
sub
lret
jo
mov
mov
and
jg
rcl
push
dec
les
adc
pusha
dec
push
sub
add
xchg
popf
data16
push
inc
sub
add
inc
dec
add
pop
jmp
mov
mov
not
sbbb
pop
cmc
adc
push
xor
imul
push
sbb
and
popa
pop
inc
push
inc
inc
push
rcll
outsb
add
stos
add
pusha
push
push
pop
js
sbb
fisttps
xchg
out
cwtl
fs
jp
hlt
jl
pop
dec
fsubrl
aam
pop
or
mov
rcr
dec
jg
aas
mov
mov
lahf
shll
xor
add
push
cmp
adc
or
mov
ficoml
sub
add
sub
mov
push
repz
push
mov
cmp
push
adc
mov
jl
ds
or
dec
cmp
rorb
mov
packsswb
dec
cmc
mov
dec
or
pop
pop
nop
push
add
sub
ret
js
xchg
jbe
add
inc
shlb
add
outsb
push
adcb
sar
sarl
add
jbe
sarb
fsubrs
inc
and
push
daa
mov
loopne
jmp
pop
dec
aam
adcl
subb
sbb
pop
dec
shr
or
pop
cmp
jae
push
fs
stos
xchg
sbb
mov
loopne
adc
jo
cmpsb
add
jmp
ret
push
add
dec
out
icebp
lret
icebp
hlt
inc
pop
data16
lcall
adc
ja
mov
inc
push
sbb
and
mov
xor
add
inc
add
or
movsb
jnp
xchg
out
sti
sub
scas
xchg
add
sub
fnstenv
repnz
and
and
jg
sub
add
jle
jge
add
in
adc
inc
xor
xor
add
push
or
push
mov
int3
jmp
jnp
pop
push
push
or
insl
xchg
mov
stc
aas
test
push
test
in
push
inc
inc
mov
pop
adc
add
jnp
dec
ror
jmp
js
xor
lahf
sbb
repnz
pushaw
add
iret
or
mov
ret
push
in
in
test
imul
pop
les
fldl
and
add
mov
inc
rcr
or
add
rol
cltd
pop
xchg
aaa
mov
sbb
xchg
sub
int
lds
nop
inc
adc
int
in
imul
bound
movsb
xor
xor
jmp
jmp
fmul
mov
or
add
lock
add
jbe
jns
fdivrs
stos
call
adc
repnz
call
jg
mov
add
lret
xlat
ljmp
push
jge
adc
xchg
aaa
sub
push
sbbb
clc
add
std
xor
sbb
or
sub
mov
or
int
sub
add
rcrb
xchg
xor
sub
add
push
pop
das
jno
dec
cli
sub
xchg
jl
push
xchg
fsubl
fwait
outsl
int
repnz
sub
jns
xor
xchg
cmp
ds
add
jmp
loope
jb
mov
out
bound
shr
mov
jecxz
test
cli
out
mov
jmp
ret
pop
andl
xor
pop
jo
dec
cmp
inc
add
xchg
jo
jns
fisttpl
mov
pop
xchg
stos
fists
adc
leave
cltd
and
jnp
fwait
lret
inc
and
xor
mov
and
imul
dec
andl
mov
xor
lock
adc
ret
cmpsb
sbb
or
xor
add
icebp
push
pop
mov
aam
xchg
je
sub
inc
call
loop
in
cld
stos
dec
xchg
mov
fwait
pop
pop
xchg
or
dec
push
add
fs
loopne
icebp
cwtl
mov
add
mov
or
xorl
movsb
cmc
iret
hlt
add
sub
mov
bound
out
js
dec
call
lahf
push
sarb
add
stc
repnz
rclb
loop
data16
lret
mov
ljmp
popa
movsl
jns
dec
push
gs
mov
dec
pop
pop
sub
shll
imul
dec
sub
and
cmc
shl
add
cld
ds
jecxz
pop
lds
stos
shl
pop
js
movsb
stos
mov
nop
mov
sbb
xor
sub
sub
add
cmp
inc
xor
jmp
xchg
cmpb
mov
pop
jnp
not
push
lods
in
or
imul
enter
jmp
sub
pop
mov
or
mov
cmpb
andb
int
call
lret
push
jg
sarb
pop
pop
xor
roll
xor
push
rorl
cmp
filds
mov
stc
rcrb
dec
dec
add
mov
add
xor
pop
cwtl
pop
pop
push
add
daa
and
ljmp
pop
push
inc
or
sbb
and
add
dec
jmp
mov
push
push
cld
cmp
dec
jae
mov
je
adc
subl
cmp
or
outsb
loopne
cwtl
inc
xchg
divb
xor
add
pusha
dec
lahf
subl
inc
fistpl
inc
pop
inc
add
outsl
inc
push
shl
das
jmp
fmul
push
or
pusha
dec
mov
push
sahf
xchg
popf
icebp
loopne
in
and
js
sbb
jmp
cmp
sbb
dec
xor
aam
pusha
push
mov
fs
push
jmp
lret
shl
cmp
dec
popa
dec
sbb
pop
push
cld
or
pop
mov
mov
and
push
scas
sbb
xchg
pusha
mov
xor
push
nop
jle
push
pop
jmp
bnd
xor
sub
rcl
or
arpl
inc
add
sub
dec
cmp
ja
in
pop
jbe
out
lret
mov
xor
fadd
dec
xlat
lock
jg
fwait
dec
xor
cmp
pop
sbb
lods
sbb
sub
ljmp
in
pop
into
sbbl
int3
push
pop
call
or
sub
inc
xchg
push
jb
and
daa
cmc
sub
out
xlat
and
cs
cmp
jmp
rolb
rcrb
pop
pop
movsl
push
dec
movsb
call
mov
cmp
sub
mov
adc
push
inc
aaa
cltd
and
push
lock
clc
push
xchg
adc
or
jmp
pop
bound
xor
adc
xor
and
push
imul
push
add
int3
mov
jnp
mov
cmpb
add
and
outsl
in
inc
nop
jp
or
sbb
pop
push
add
adc
push
push
jmp
add
xchg
and
insb
imul
cltd
xor
and
and
mov
stos
sub
adc
jae
stos
popa
daa
xor
mov
sbbl
outsl
and
push
jmp
ljmp
int3
adc
inc
add
or
cmpb
mov
xchg
ljmp
rcrl
xchg
pop
adc
das
outsb
push
mov
dec
not
or
ror
movsb
mov
xchg
and
dec
sub
stc
pop
xchg
subb
or
pop
push
push
push
ret
shll
mov
jmp
mov
in
adc
mov
scas
or
inc
outsb
pop
pusha
jp
sahf
add
loop
adc
fsubr
push
or
fisubs
jmp
lcall
icebp
add
fisubs
push
xor
jmp
push
andb
xlat
cmp
psrld
sub
dec
mov
adc
sub
pop
enter
aas
inc
je
mov
sbbl
mov
cmpsb
jb
jmp
fdivs
loop
loope
add
jmp
and
jle
add
sub
adc
dec
movsl
xor
adc
aas
push
push
xchg
mov
inc
push
mov
mov
adc
mov
movsb
loopne
push
fwait
inc
xchg
push
add
push
das
adc
enter
xor
jecxz
stc
pop
pop
inc
mov
cmpsl
dec
or
push
push
add
test
push
pop
add
pop
call
jmp
mov
movsb
int3
pop
cmp
arpl
sub
pop
xor
pop
std
xor
xor
jmp
dec
repz
les
mov
ret
adc
fwait
sar
dec
pusha
dec
jle
push
outsl
fdivs
add
pop
sub
sub
inc
rorl
or
sbb
jmp
cld
ja
cmpsl
pop
mov
sar
jno
cwtl
mov
inc
mov
mov
sub
cld
rcrl
mov
sbb
xchg
repnz
sub
in
fnstcw
xchg
shrb
fs
cli
sbbb
or
cmp
jg
in
les
push
mov
clc
loop
not
dec
add
add
rcrb
in
cwtl
pop
push
push
mov
incl
xor
inc
popf
out
testb
jmp
je
icebp
jmp
mov
cmpb
sub
nop
std
add
lods
pop
xor
pop
sbb
push
jo
pop
xchg
sub
and
rorl
add
or
pop
incb
push
cmp
test
xchg
dec
sub
inc
mov
push
adc
adc
cmp
call
test
jno
dec
and
xchg
call
daa
ficoml
cmpsl
lods
pop
pop
ret
mov
arpl
push
mov
neg
ja
out
push
inc
mov
lahf
sbb
push
pop
es
insb
inc
and
xchg
arpl
push
ja
hlt
sub
mov
in
or
inc
lea
xchg
ss
call
js
cmp
mov
push
mov
clc
cmp
cmp
jecxz
push
mov
lahf
stc
test
and
mov
adc
and
je
das
pop
mov
cmpsl
movsl
mov
cld
cmp
mov
orb
lods
add
outsl
xor
dec
inc
int
test
xchg
movsl
pop
xlat
fwait
daa
push
pop
cwtl
jo
add
lcall
inc
push
mov
add
orl
in
xchg
xchg
clc
leave
dec
sbb
and
mov
not
mov
jecxz
es
fisttpll
cmp
or
inc
cli
add
in
insl
mov
add
push
fiadds
mov
cltd
stos
or
adc
or
sub
addr16
mov
jbe
adc
insl
ret
mov
shll
jl
movsb
scas
and
sub
cwtl
mov
pop
pop
inc
jmp
inc
and
xchg
cmc
push
and
push
les
insb
aam
icebp
gs
adc
sahf
jle
dec
and
and
lds
sbb
xor
mov
xchg
pop
std
jb
adc
sub
cmp
jmp
sub
mov
push
adc
daa
mov
push
mov
in
xchg
addr16
test
ljmp
rcrl
mov
sub
jmp
aas
jmp
inc
adc
dec
or
popf
pop
fiaddl
dec
and
fidivrs
repnz
adc
dec
mov
pushf
jmp
int
mov
xor
and
mov
mov
inc
inc
or
jb
pushf
push
jo
and
mov
or
outsb
flds
mov
add
or
jp
adc
or
or
add
adc
rorb
mov
sub
mov
push
hlt
xor
mov
pop
aad
sbb
sub
adc
sbb
jo
xchg
push
lds
addb
lea
pop
sub
pop
cld
pusha
mov
movsb
jbe
mov
push
add
inc
mov
inc
addb
and
and
or
in
fdivrp
pop
repz
hlt
sbb
xchg
pop
cmp
jns
and
sbb
mov
popf
stos
pop
fwait
test
sbb
aad
and
in
js
lock
scas
insl
xchg
jge
or
adc
xorl
cmp
add
or
shr
adc
mov
pop
sub
pop
and
pop
mov
push
mov
mov
mov
lret
and
adc
ja
adc
dec
cmp
mov
frstor
sbb
pop
shll
popl
dec
cmp
push
adc
add
sub
push
push
cmc
jne
jnp
inc
jmp
add
pop
inc
jbe
inc
inc
pop
adc
mov
mov
mov
js
scas
test
ja
inc
fldcw
outsl
cmp
pop
lret
test
call
add
inc
ja
std
xor
mov
cwtl
cmp
out
orb
dec
jge
popf
test
lahf
stc
lret
fisubs
sub
shlb
push
xor
cmp
push
pop
inc
adc
pop
dec
mov
mov
inc
test
lods
sbb
push
popf
dec
call
add
or
and
sub
inc
scas
xor
sbb
adc
ficomps
daa
xchg
inc
dec
xlat
inc
jle
push
xor
pop
push
lods
loope
mov
xor
lds
sar
xor
wbinvd
adc
sbbb
push
outsl
jae
xor
loope
xlat
imul
notb
pop
adc
repnz
mov
add
cmp
jnp
ret
adc
sar
mov
adc
jecxz
mov
and
mov
pop
sbb
je
xorb
jmp
mov
jmp
sub
in
cmp
and
pop
dec
inc
push
inc
pop
add
or
sbb
or
sarl
fnsave
sub
scas
cmp
ljmp
leave
mov
test
adc
nop
inc
fstps
sbb
sub
in
icebp
push
arpl
xlat
insl
inc
outsl
adc
repnz
mov
shll
push
mov
not
test
js
int
loopne
dec
sahf
arpl
icebp
shlb
lds
flds
dec
lahf
in
call
fs
jle
inc
loop
and
cwtl
push
add
sub
addr16
into
arpl
jmp
jmp
dec
sbb
inc
inc
or
adc
lods
mov
mov
mov
xchg
push
testb
add
enter
cmp
push
mov
mov
jmp
mov
outsb
enter
mov
jp
and
out
dec
aam
adc
push
xchg
loope,pn
dec
mov
and
pop
and
popa
xorb
xchg
ljmp
mov
out
jge
pop
push
pop
adc
sbbb
rorb
test
lock
jmp
test
shlb
inc
ret
fld
fcompl
push
adcb
sub
mov
push
add
insb
xor
push
mov
push
mov
mov
adc
jno
popf
xor
aaa
into
or
push
jge
pop
cmp
jp
hlt
adc
daa
bnd
je
popa
shl
add
push
mov
loope
gs
mov
test
cmpb
add
jge
inc
jg
or
push
dec
and
pop
leave
scas
dec
pop
mov
dec
lret
or
dec
sub
loope
fs
mov
lcall
pop
adcl
jle
in
cmc
adc
lret
gs
mov
push
or
and
test
jmp
mov
test
mov
inc
pop
xchg
mov
pop
mov
mov
or
repz
cli
push
push
les
add
xchg
mov
mov
or
sub
mov
aaa
out
xor
or
adc
neg
je
or
mov
pop
ja
pop
sub
add
xchg
leave
cmp
cmp
and
adc
or
or
push
add
xor
and
rorl
popf
insb
fcmovnb
add
mov
das
xchg
pop
lds
cmp
sbb
int3
or
pop
lahf
add
sbb
dec
inc
jge
jl
lea
or
push
jno
push
aam
sbb
cld
xchg
subl
cmc
or
dec
pop
xor
dec
jno
xchg
adc
jns
inc
idivb
dec
adc
repz
mov
add
das
jmp
loop
sahf
dec
and
or
cmp
es
push
sub
nop
daa
mov
or
hlt
sbb
pusha
dec
or
inc
mov
dec
or
adc
jno
dec
adc
insb
jnp
ror
mov
leave
xlat
cmp
mov
adc
or
ds
filds
sub
inc
sbb
lcall
pop
into
out
loop
ja
in
dec
notl
and
outsb
mov
dec
push
add
call
push
fdivrl
pop
push
outsb
cmpsb
int3
adc
call
inc
adc
add
pop
push
sbb
jno
add
add
aas
add
cwtl
push
xchg
pop
dec
inc
add
mov
add
jmp
les
movsl
cmp
aaa
cmp
cmp
les
jge
fcoms
testl
add
sub
test
pop
adcb
mov
imulb
pop
orb
fists
jo
cmp
sbb
mov
enter
insb
dec
jns
bound
dec
rorl
mov
call
jle
pop
sbb
mov
adc
ficoms
in
clc
or
jp
add
clc
pop
imul
movsb
inc
push
shlb
sub
pop
add
inc
mov
or
js
out
xchg
icebp
jp
jmp
lock
pop
loop
and
push
in
mov
imul
roll
into
xchg
adc
xchg
dec
add
js
sbb
sub
xchg
push
jbe
add
int3
popf
push
mov
jmp
push
popf
jmp
out
testb
lahf
outsl
and
rolb
mov
xchg
sbb
xor
aaa
and
ja
dec
mov
lods
or
adc
adc
test
push
push
jp
mov
sbb
jmp
ret
or
mov
sub
or
es
push
lea
out
pop
fdivrs
jae
adc
push
and
xor
jl
push
jns
inc
sti
inc
sub
fs
mov
mov
or
inc
jmp
pop
add
jmp
ficoms
mov
push
add
out
xchg
jbe
sarb
mov
cmp
movl
cmp
shl
shrl
shrb
dec
inc
aad
movsb
push
mov
cmpsl
xchg
sbb
das
pop
fsts
add
mov
pop
dec
rep
rcrl
imul
rorl
add
fildl
or
sahf
inc
add
fwait
inc
sbb
push
repz
push
call
cmp
pop
cld
add
je
adc
fisubs
sarb
pop
xor
out
out
sbb
cmp
push
lcall
pop
jl
cmpb
or
nop
cli
inc
inc
sub
add
xlat
inc
rorl
sub
xchg
daa
int3
xchg
xor
test
fcoml
daa
xor
aam
jne
add
int
shr
in
xor
push
lea
push
xor
and
cmp
lds
loopne
jle
add
xchg
pop
popf
test
xchg
jecxz,pt
xchg
cmc
pop
push
push
pop
nop
jb
inc
shrl
add
add
adc
shlb
shll
sbb
mov
add
sbb
or
xor
popa
mov
cmp
das
pop
pop
adcb
add
js
ds
add
jle
push
je
push
push
lahf
orl
enter
cmp
mov
and
push
push
stc
out
xor
pop
sub
sbb
cs
pop
jecxz
shr
popa
cmc
stc
xor
push
jecxz
mov
in
jnp
loop
mov
xchg
shr
scas
out
dec
mov
sti
popf
pop
fwait
and
mov
cmpb
repnz
ljmp
cmpsl
push
xor
jmp
pop
push
push
add
pop
stos
mov
pop
cltd
push
imul
dec
and
dec
jmp
pop
sub
inc
inc
dec
mov
stos
xchg
sub
mov
sub
pushf
and
loope
mov
cmp
shll
mov
and
imul
and
cmc
pop
inc
stos
das
shll
jmp
pandn
mov
mov
aaa
cmp
dec
cmpl
and
lods
loope
shlb
cmpsb
mov
and
xchg
pop
rcrb
mov
jae
addl
sub
or
push
cltd
jnp
ds
sub
mov
pop
jae
hlt
jmp
test
dec
mov
or
cmp
jmp
les
bnd
jmp
scas
imul
lods
and
add
add
ret
add
pop
icebp
sub
pop
xchg
popf
inc
cs
sub
rcll
adc
negb
mov
les
push
mov
shlb
pop
daa
cwtl
pop
leave
in
add
out
loope
inc
inc
lahf
outsb
push
jmp
or
outsl
dec
xchg
push
mov
add
jo
push
pop
inc
xor
or
mov
adc
test
cmp
fdivrl
stos
sbbb
fnstcw
js
push
xchg
jl,pt
ss
push
jns
rcr
outsb
lock
out
sbb
or
pushf
ljmp
dec
push
cs
push
pop
mov
int3
lods
je
icebp
or
adcb
or
lock
mov
cmpsl
shr
inc
sub
push
xchg
push
xchg
cld
push
pop
test
mov
sub
pop
cli
jmp
pop
push
cltd
jb
lcall
xor
icebp
jl
or
pop
mov
imul
out
mov
fdivs
pop
and
ja
add
arpl
outsl
xor
inc
notl
push
test
adc
fildl
inc
test
sub
sub
xor
xchg
adc
or
push
push
mov
sbb
out
and
ret
fldenv
dec
dec
pop
jns
push
pop
repz
dec
test
xlat
adc
outsb
and
jmp
fisttpl
pop
sbbb
out
adc
sub
es
sarb
idivb
sbb
mov
lahf
enter
sub
in
addb
ljmp
mov
rcll
ret
sbbb
mov
sti
movsl
push
shll
in
decb
jle
arpl
or
fs
and
dec
sbb
mov
add
inc
push
pop
test
pop
xchg
mov
rcrl
aaa
or
das
push
mov
jae
stos
fnstsw
push
jmp
out
or
aas
push
or
cltd
pop
pop
xor
fs
push
cmc
adc
jl
pop
leave
pushf
cmp
jg
and
mov
inc
mov
jg
xchg
add
inc
jmp
das
testb
sbb
xchg
stos
bound
jns
call
pop
outsb
mov
cmp
sahf
call
add
push
cmp
loopne
mov
popa
loopne
sub
lcall
jne
push
and
xchg
dec
xor
inc
push
rolb
dec
jge
sub
cld
rcrb
aas
mov
xor
or
std
push
sbb
pop
pop
aam
add
jmp
mov
mov
loopne
add
out
pop
rolb
out
push
mov
jo
lret
test
addl
or
sub
sarl
nop
push
jne
ret
movsb
movsl
mov
or
pop
leave
imul
or
mov
cli
add
pusha
jg
rorb
mov
and
jbe
push
push
inc
leave
in
sub
in
fwait
pop
jmp
or
mov
ja
cltd
push
jae
test
or
add
enter
mov
add
jge
daa
adc
hlt
push
or
push
fcompl
add
xchg
aaa
sbb
roll
pop
dec
out
pop
dec
mov
bound
pop
testb
push
jp
inc
mov
out
and
xlat
or
pushl
lods
popa
lret
dec
push
in
or
mov
loop
push
mov
pop
mov
mov
push
sub
or
dec
pop
mov
xor
pop
aas
add
jo
int3
cmp
stos
imul
xor
ja
push
testb
decl
popf
ret
sub
sub
xor
inc
scas
ret
hlt
mov
push
loop
and
mov
icebp
adc
ds
je
and
inc
add
jnp
or
push
flds
sub
pop
ret
negl
in
mov
sub
push
jl
cmpsb
xor
and
nop
dec
cmc
pop
cmp
sbb
or
frstor
add
xor
loop
cltd
push
ja
fmull
inc
fbld
mov
jp
cwtl
sbb
icebp
out
shlb
lods
inc
ljmp
cmpsl
push
or
nop
daa
jno
bound
data16
push
mov
fstps
mov
mov
call
jno
pop
push
adc
popf
sbbb
push
imul
addr16
push
jle
mov
mov
or
pop
lods
push
rorl
rcrl
mov
lret
stc
or
add
mov
mov
xchg
sub
push
int3
xor
inc
or
adc
sub
push
adc
adc
jmp
popa
push
pop
pop
daa
int
aad
cmpsl
insb
jne
push
cmp
push
popa
push
adc
aaa
mov
repnz
fldenv
inc
adc
push
and
mov
dec
hlt
sub
add
mov
add
je
pop
out
pop
adc
pop
and
adc
jne
push
popf
adc
or
movsl
add
dec
xchg
adc
lret
push
jl
pop
inc
adcl
sub
or
push
jle
ret
add
mov
lret
int3
test
push
xor
and
add
pop
dec
push
push
add
je
dec
jo
mov
js
imul
push
lret
mov
mov
xchg
scas
daa
lds
loope
jns
test
mov
mov
jmp
ljmp
cli
or
js
stc
jae
outsb
fs
ja
pop
pushf
mov
adc
adc
int
mov
cmp
pop
test
push
add
or
fcomps
push
adc
dec
jp
imul
out
sbbb
stos
pop
add
inc
jmp
cmc
push
push
add
ja
stos
mov
jne
pop
jbe
ljmp
clc
out
adc
std
and
dec
pop
jmp
push
push
enter
arpl
das
js
push
ljmp
outsb
mov
leave
lsl
or
outsl
mov
pusha
mov
pop
sub
push
mov
or
call
mov
das
xorb
jno
cs
sbb
cmpsl
sub
push
xchg
jmp
dec
scas
ret
testb
and
push
ret
add
orb
jp
loope
iret
adc
add
add
xor
or
jp
jbe
addb
pushf
xchg
push
data16
loop
push
addr16
pusha
mov
or
jmp
cmpsb
mov
and
movsb
adc
test
in
les
pop
add
jmp
cmp
pop
test
jmp
mov
dec
cmp
push
sbb
and
pushw
or
pusha
pop
inc
repnz
lcall
xchg
add
fsubs
xchg
outsl
outsb
push
loope
mov
xor
in
inc
cmp
andl
jnp
das
push
mov
push
lods
jmp
movsl
leave
or
cs
xor
insb
jns
pop
test
pop
add
ds
sub
sub
adc
mov
ja
cmp
inc
jmp
sti
cmp
push
das
mov
lret
push
xchg
lds
lods
int3
pushf
cmp
rclb
in
stc
cli
das
iret
and
dec
sbbb
sbb
or
sbb
and
cli
sub
push
cwtl
cmp
inc
adc
dec
inc
and
sbb
lcall
loopne
pusha
xor
hlt
cmp
andl
add
or
adc
sbb
push
sub
push
dec
rcll
sub
adc
jmp
mov
shrl
sub
push
push
andl
out
lahf
adc
sub
hlt
in
sub
adc
aas
push
or
out
jno
jle
les
xchg
mov
data16
mov
loop
ja
add
js
insb
mov
lea
add
mov
adc
rorl
cmp
add
dec
dec
sbb
and
add
in
ljmp
test
test
push
sub
jge
imul
pop
rorb
inc
add
out
clc
jecxz
pop
add
sarb
add
loop
and
lcall
dec
add
mov
shll
jnp
cwtl
sbb
pushf
sub
ds
inc
add
add
call
mov
jo
inc
add
into
das
add
pop
push
bound
add
adc
jl
cmp
xchg
into
cmc
in
add
jl
fstps
push
mov
repz
push
out
or
imul
stos
sub
xchg
or
test
xchg
les
xor
imul
sub
mov
sarl
outsb
mov
xor
or
test
sub
ds
push
sub
mov
sub
push
cli
sti
stos
fsts
mov
lods
or
add
fists
sub
jmp
mov
pop
adc
jmp
fs
js
and
lahf
mov
mov
pop
xor
mov
inc
xchg
adc
cmp
push
pop
lods
mov
xor
ljmp
cmp
outsb
jmp
ror
inc
cmp
mov
inc
mov
sbb
cmp
sbb
inc
or
inc
shl
sbb
andl
mov
arpl
fiadds
pop
pop
stc
cmp
add
test
cmc
inc
mov
pusha
mov
dec
loope
andl
fidivrl
scas
adc
jns
pop
fwait
cmp
add
mov
clc
std
lock
out
xchg
cmc
or
ret
jbe
popa
push
fs
hlt
add
pop
dec
jmp
dec
aam
xchg
pop
add
lret
out
daa
pop
adc
mov
filds
mov
push
stc
add
cmp
cmpsl
inc
mov
add
cs
leave
add
or
call
inc
xor
or
adcb
testb
daa
jl
jno
shlb
out
push
lahf
push
int3
add
pop
jmp
repnz
xchg
and
inc
cli
sub
fistpll
pushf
xchg
pop
nop
mov
xor
jnp
xor
lret
pop
inc
sub
sbb
add
cmc
repnz
mov
mov
stos
adc
xchg
sub
xchg
mulb
pop
push
in
push
dec
mov
pop
xor
xlat
dec
imul
es
sbb
cmp
jne
sbb
jnp
push
xor
sub
outsb
roll
cltd
fisubrl
cmp
ds
outsb
mov
int
cmp
rcr
ret
std
mov
fsubrl
pop
cltd
pop
imulb
stos
push
xlat
ret
dec
jb
and
jns
bound
or
outsl
repnz
jo
xor
or
js
inc
cmc
pop
test
mov
into
mov
push
mov
sbb
daa
mov
ja
push
mov
popf
scas
adcb
xor
sub
loop,pt
shrb
xorl
cld
pop
test
out
or
sub
fstpt
mov
push
adc
push
push
pop
cmp
mov
ret
sub
daa
mov
xchg
sarb
add
popa
mov
pop
call
mov
or
aad
pop
push
push
or
cmp
shrb
and
enter
loop
push
mov
and
sub
lds
push
sahf
push
cwtl
imul
movsl
xor
sub
enter
mov
xchg
int
mov
xor
pop
shr
mov
rcrl
scas
and
js
sub
inc
mov
gs
sbb
jmp
imul
jne
and
mov
popf
jnp
loope
fucomp
sub
mov
popf
inc
pop
mov
dec
in
jo
std
call
fdiv
dec
rclb
xor
clc
ret
pop
loop
das
dec
inc
push
insl
push
mov
js
jae
add
jle
popa
ja
mov
popa
and
je
pop
pop
mov
push
and
or
popa
adc
xchg
or
add
push
mov
mov
scas
xor
pop
mov
repnz
ljmp
mov
sub
cmp
test
out
mov
sub
xchg
rorl
jecxz,pt
lret
testl
roll
cmp
sbb
repz
xor
add
sbb
sub
cs
jnp
push
shll
add
addb
rcrb
push
jno
cmpsb
add
pop
push
adc
inc
jb
dec
xchg
inc
subl
or
jnp
xchg
pop
mov
cli
xor
mov
dec
loopne
mov
pusha
mov
pop
je
mov
fwait
in
mov
incb
sub
fstl
sbb
rorb
outsl
jbe,pn
pop
push
sbb
pop
fwait
lahf
arpl
js
and
or
pop
cmp
and
or
sbb
sti
hlt
ja
pop
mov
pop
push
inc
sldt
je
push
sub
sbb
pop
nop
sub
jne
test
pop
rol
push
mov
mov
bound
fidivs
push
mov
imul
cmpb
loopne
add
clc
push
inc
loop
cltd
push
ret
mov
pop
scas
out
ljmp
out
adc
mov
jno
cmp
push
push
std
popf
adc
mov
in
dec
mov
pop
dec
pop
pop
test
ljmp
xlat
push
xlat
mov
mov
mov
add
inc
mov
adc
and
push
test
sbb
add
cmp
or
cwtl
jge
push
pop
mov
std
movsb
inc
clc
out
add
bnd
in
jecxz
adc
lock
adc
adc
std
dec
imul
push
push
sub
push
testl
imul
movsl
mov
inc
leave
ret
pop
lea
pop
jge
aad
int
das
mov
lcall
fildl
xor
clc
pusha
sbb
adc
add
call
dec
aas
hlt
aad
ljmp
add
dec
jl
sqrtps
and
or
push
mov
int
fs
outsl
cmpb
sub
ds
leave
jb
mov
pop
mov
and
call
sbb
push
or
ret
sbb
xor
test
repz
xchg
jb
std
test
and
sarl
adc
fsubr
and
outsl
or
test
sbb
xchg
idiv
aaa
push
fs
lret
pop
mull
jo
pop
daa
xchg
inc
xor
repnz
cwtl
push
jmp
or
push
jbe
ja
sbb
mov
cmp
mul
clc
xor
popa
push
pop
xchg
in
adc
inc
xchg
jmp
mov
lock
mov
xchg
mov
add
dec
cmc
es
not
adc
data16
pop
xor
pop
jl
and
xchg
mov
outsl
add
lcall
mov
or
xor
mov
ror
dec
add
sbb
filds
add
jns
stc
fwait
test
inc
or
cli
test
xor
iret
and
imul
pop
xor
jno
pusha
add
pushf
movsb
sub
cmpsl
movsl
rclb
push
loop
stc
insb
inc
push
mov
js
or
movsl
add
out
nop
les
lock
push
adc
jle
icebp
shlb
data16
sahf
insb
or
sbb
ret
cmp
in
sbb
pusha
les
pusha
push
inc
jbe
add
shlb
add
das
mov
leave
or
mov
pop
pushw
and
push
mov
add
pop
sub
pop
andb
xor
out
and
add
mov
pop
ds
adc
pop
xor
notb
jmp
das
test
cmpsl
mov
dec
mov
addl
pop
or
pop
pop
adc
das
addr16
es
or
dec
sbb
and
loopne
sub
cmc
xchg
add
jl
or
cmp
cmpsb
leave
xlat
notl
adc
mov
shl
fs
out
xchg
pop
xchg
sbb
test
cmp
xchg
cli
jo
nop
xchg
not
hlt
jmp
xor
notb
pop
enter
cmpl
xor
dec
rorl
mov
jno
pop
sub
in
pop
test
dec
pop
mov
pop
fsts
sub
imul
sahf
out
cmp
js
xchg
pop
add
inc
in
movsb
adc
push
adc
repz
aam
mov
inc
into
jecxz
sub
jnp
or
sbb
mov
dec
aad
push
jne
mov
jmp
jmp
stos
ss
pop
not
dec
fsubl
inc
fldl
addr16
lea
pop
aaa
shll
inc
addl
rcrl
xor
cmc
shll
adcb
cmpsl
les
loopne
in
sub
pop
repnz
pop
sahf
xchg
pop
cmpb
fdivrl
dec
or
push
mov
sub
daa
jmp
adcb
fstps
jl
lods
lods
stos
cwtl
mov
ror
out
clc
push
cltd
stos
repz
cmc
xlat
adc
mov
ret
jl
mov
les
add
adc
sub
mov
add
jbe
pop
dec
or
in
cmpsb
enter
jmp
push
mov
insl
mov
and
jne
sub
fistpl
cmp
dec
shll
ret
test
outsb
lea
and
into
inc
xchg
dec
pop
mov
jb
or
mov
mov
push
lret
jmp
das
cmp
outsb
cmpsb
push
arpl
sub
inc
and
jmp
mov
sub
dec
and
les
sub
sub
lods
bound
pop
lahf
dec
xchg
inc
addr16
imul
mov
test
aad
adc
inc
es
bound
push
mov
pop
mov
or
aaa
lahf
movsb
stos
test
or
jae
pop
sbb
adc
inc
iret
sub
sub
in
or
dec
das
jmp
sbb
pop
das
add
inc
sub
imul
add
lds
in
pop
push
push
inc
lock
lret
insl
les
dec
and
imul
mov
popf
inc
sbb
ds
flds
push
push
pop
mov
cltd
mov
fmuls
test
jge
dec
fildll
icebp
push
out
push
dec
add
push
pop
jo
shll
adc
call
aam
add
leave
bound
mov
jmp
imul
addb
rorb
jle
cmpb
in
cvtps2pi
adcb
pop
xor
iret
ficoms
out
imulb
push
adc
pop
faddl
push
js
cmpsb
xor
fisubs
adc
jno
insl
sub
jne
and
xchg
ret
add
adc
inc
daa
das
sarb
daa
mov
xor
pop
test
push
std
daa
mov
rcrl
mov
sti
aas
adc
jecxz
out
gs
test
adc
push
push
jp
jo
pop
mov
push
add
out
leave
pop
inc
mov
fcmovnbe
dec
loope
in
aas
loope
push
movb
mov
sub
aas
sub
pop
jbe
xlat
cmp
sbb
xchg
or
mov
cld
add
scas
data16
pop
dec
xchg
lcall
dec
and
popf
pop
test
xor
lods
pop
aam
mov
pop
sbb
enter
sub
lock
xlat
ss
shll
leave
inc
mov
sahf
popa
insb
inc
xchg
dec
ret
adc
xlat
movsl
jmp
pop
loope
cld
push
pop
mov
jns
stos
sti
cmp
push
icebp
dec
push
sbb
xor
pusha
sub
mov
js
or
inc
sub
xchg
pop
into
and
push
insb
mov
dec
inc
sbb
inc
sbb
mov
data16
leave
jge
xchg
insb
jno
mov
cmp
in
bound
inc
jb
or
or
negl
xchg
adc
push
rcll
mov
mov
add
cmc
or
mov
add
xchg
dec
mov
cs
sbb
mov
cmpsl
mov
pop
pop
test
cwtl
adc
or
in
scas
sub
stos
fwait
xchg
ja
and
in
cmp
bound
pop
orl
jae
cmp
mov
adc
cmp
or
push
mov
pushf
dec
inc
add
jle
daa
sub
sub
pop
rdtsc
out
jmp
in
adc
and
out
lahf
shlb
cltd
lret
loopne
jo
xchg
ret
push
pop
xor
inc
jmp
mov
push
ret
stc
adc
or
pop
enter
push
out
bound
mov
addb
xchg
subl
lds
aad
xchg
xor
xor
push
lods
pop
dec
cmpsb
sub
dec
xchg
out
inc
ds
or
pop
cmp
aad
or
push
sbbb
jmp
pop
enter
push
mov
dec
adc
pop
push
into
and
lods
adc
mov
add
mov
enter
push
dec
push
inc
xchg
pop
pushf
inc
out
les
mov
pusha
sub
sub
or
push
sub
inc
add
cld
jl
jmp
push
dec
and
sbb
fldcw
jl
xchg
add
shll
lret
in
mov
sbb
mov
loopne
lock
sub
aad
inc
je
mov
fcoml
repnz
sbb
cmp
sub
arpl
pop
ds
adc
leave
mov
jne
mov
int3
popa
sbbl
pop
mov
repz
into
jmp
test
dec
inc
cwtl
test
lahf
inc
rclb
dec
out
ss
aaa
lods
out
and
adc
lds
je
jp
outsl
sbb
dec
adc
inc
inc
mov
xor
aam
negl
mov
adc
xchg
lret
push
add
sub
scas
adc
fldcw
pop
cmpsl
mov
cli
sub
fucom
jb
or
sbb
sbb
jmp
sub
mov
pop
ds
js
push
cmp
add
negb
push
fadds
pop
jmp
jecxz,pn
fwait
lds
mov
and
cld
xor
cmp
rorl
out
sahf
or
push
jbe
in
cld
adc
mov
add
or
jmp
pop
shrl
push
ret
jnp
pusha
pop
xchg
add
jge
btr
mov
fcoml
inc
subb
pop
cmpl
jp
xor
lret
push
mov
dec
push
inc
mov
lock
cs
call
scas
jg
negb
pop
call
call
mov
incb
push
mov
inc
lods
xchg
push
daa
leave
sbb
sub
fwait
add
cmpsl
gs
ret
adc
adc
scas
les
dec
mov
mov
ds
stos
test
dec
lds
add
stc
adc
stc
jmp
pushf
xor
in
pop
mov
hlt
out
push
jmp
jge
jno
mov
rorb
and
out
and
cmp
add
xchg
insb
jne
test
or
dec
popf
movsb
ret
inc
adc
pop
adc
mov
neg
mov
pop
orl
loopne
outsl
nop
add
or
cmpb
jne
sbb
ss
mov
add
adc
mov
mov
das
mov
push
dec
push
mov
lcall
mov
jecxz
sbbl
or
gs
sbb
stc
cld
sub
loope
sub
roll
mov
push
pushl
mov
mov
jle
jne
xor
pop
inc
jmp
iret
pop
cmp
cmp
jl
popa
jmp
or
and
sar
pop
pop
jo
rclb
pop
push
lods
mov
test
sub
lahf
orl
mov
xchg
repnz
jmp
flds
push
int
ja
popf
sub
mov
enter
or
aad
push
lds
dec
popf
push
idivb
mov
insb
pop
sbb
fnstcw
push
rcrl
push
add
push
test
sub
pop
out
or
pop
fcomp
pop
out
inc
sbb
loopne
nop
push
imul
adc
aaa
mov
pop
adc
add
push
pusha
jnp
pop
xchg
inc
mov
xchg
mov
xor
sbb
rclb
mov
ret
add
xlat
std
out
or
jp
mov
out
push
push
pop
test
mov
popf
in
hlt
fwait
imul
add
or
fisubrs
jp
jp
ficomps
shlb
sub
ds
push
jnp
pop
sbb
aad
and
jmp
dec
mov
adc
jne
push
sahf
add
push
push
scas
jns
stos
add
loop
pop
inc
cmp
sub
sbb
and
scas
jae
push
clc
push
mov
adc
ljmp
or
dec
pop
push
pop
mov
imul
cmp
add
sbb
xor
ja
aas
repnz
stos
jle
xor
add
sahf
add
hlt
sub
mov
popl
dec
push
push
pop
xor
add
dec
mov
xchg
push
insl
mov
outsl
push
push
in
int3
push
inc
xor
test
loop
xor
push
add
shr
sbbl
sub
jmp
leave
push
jecxz
rorl
inc
outsb
xchg
shll
xchg
repz
adc
push
cmp
rcl
sti
sub
dec
test
mov
nop
inc
add
lret
fbld
add
jmp
push
jl
or
adc
rcrb
rolb
xor
rorl
mov
imulb
aas
das
inc
push
enter
arpl
adc
bound
mov
test
loop
adc
lahf
mov
int
mov
dec
push
mov
sub
mov
cmp
mov
loop
mov
push
shrl
fbld
jle
iret
mov
pusha
pop
jl
pop
or
stos
push
or
js
push
mov
outsb
add
into
pop
std
dec
sbb
mov
push
cmpsb
fstl
lea
loop
test
shrb
mov
pop
stc
add
in
je
ss
inc
jno
sub
imul
movl
loop
push
pop
xor
add
btr
or
adc
or
push
sbb
add
adc
mov
ret
test
test
push
push
pop
aad
xor
mov
lahf
add
dec
adc
sbb
sbb
push
push
ret
daa
enter
pop
cli
adc
jecxz
jbe
pop
jmp
sbb
jae
xor
pop
int3
sub
aam
mov
ret
inc
add
sub
movsl
and
test
in
js
pop
mov
sahf
cld
inc
dec
xlat
clc
adc
mov
push
loopne
mov
dec
pop
inc
add
jno
adc
push
sub
mov
pop
mov
ljmp
neg
addr16
ficompl
pop
lea
xchg
jmp
jecxz
imul
xor
pop
jp
push
mov
enter
mov
mov
cltd
shl
push
sub
jb
add
lret
mov
push
push
and
lcall
shl
leave
jne
cmp
popf
add
cmp
jmp
push
mov
pop
test
add
jle
dec
jmp
push
imul
orb
pop
jo
mov
das
push
and
cltd
mov
cmp
cmp
adc
pop
mov
xor
sub
jmp
inc
and
adc
stc
add
testl
jle
mov
mov
inc
data16
mov
fdiv
insl
lahf
jl
imul
xlat
out
sbb
call
jbe
dec
pop
icebp
mov
jmp
mov
es
aaa
mov
loope
jg
push
subps
jb
mov
outsb
xor
mov
in
rorl
pop
inc
mov
xchg
lret
push
push
and
imul
ret
add
rorl
inc
mov
push
pop
and
push
jmp
xchg
lahf
pop
jp
xor
lods
dec
insb
pop
jae
stos
sub
pop
mov
sbb
mov
data16
cmp
enter
push
jns
xor
pop
adc
sub
rcll
dec
sub
push
xchg
push
jl
sbb
aad
jmp
fldcw
sub
sub
jne
cld
xlat
adc
movsb
add
jb
inc
or
sub
push
xchg
xchg
push
bound
jg
and
test
pop
pop
mov
jno
adc
push
and
rcl
sbb
push
js
inc
or
xorb
xchg
mov
xlat
pop
fwait
push
mov
icebp
jmp
jge
jo
test
add
sub
pushf
lock
jmp
add
inc
out
sbb
dec
aas
adc
cmpsl
pop
xchg
js
mov
fbld
das
mov
jnp
mov
jle
arpl
mov
es
pop
mov
sub
inc
xor
push
jb
and
push
sarb
push
rcrl
jo
jno
mov
ret
movsl
sbb
jno
test
pop
fiaddl
notl
mov
mov
inc
cld
subb
jno
pop
xor
dec
loopne
adc
adc
add
jmp
add
push
add
addl
jne
inc
daa
xor
daa
ficompl
cwtl
sub
lret
sub
push
fbld
das
adc
or
mov
inc
out
je
xor
cmp
add
adc
lods
nop
mov
jl
stc
cmp
movsl
and
push
rcll
stc
in
sbb
dec
push
mul
je
jb
jmp
repz
or
lods
or
and
inc
cmp
push
divl
and
loopne
fwait
pusha
push
sbb
adc
mov
sahf
lea
mov
jle
push
hlt
inc
jo
xchg
fisubs
push
lods
mov
pop
mov
movsb
push
nop
test
push
cmp
or
inc
sbb
xor
orb
jmp
fdivl
adc
sub
fs
push
xor
out
pop
cmc
and
nop
add
adc
xchg
sub
add
bnd
or
ds
inc
scas
add
cmp
rcl
jb
out
mov
jmp
xor
adc
cmp
push
cmp
test
or
adc
sub
out
jl
add
aad
sbb
add
addr16
cmp
imul
test
dec
andb
or
add
addr16
or
mov
inc
testl
decl
call
xchg
cmpl
ret
jo
push
addr16
sub
pop
xchg
jb
cmpsl
add
fcomp
pop
neg
add
es
jl
test
xor
inc
pop
pop
aas
add
xor
mov
hlt
xor
sbb
adc
ret
mov
ja
xchg
mov
inc
loop
mov
sti
pop
and
push
incb
js
push
cmp
mov
xor
mov
xchg
mov
push
sbb
mov
xchg
nop
jbe
lret
aad
cmpsl
inc
clc
push
xchg
mov
lock
ljmp
jp
adc
out
cli
pop
jno
sub
inc
in
stos
xchg
sub
mov
mov
hlt
xor
fisttpl
ja
and
fnsave
push
push
lret
popf
dec
or
jg
xor
shlb
pop
adc
out
mov
or
fadds
mov
sbb
dec
dec
add
and
gs
mov
push
std
dec
adc
je
mov
adc
decl
sub
jmp
popf
dec
bound
sbb
dec
mov
xor
add
sub
or
jo
test
adcl
insb
neg
cmc
call
ret
lock
mov
cmc
loopne
jo
lds
fadds
nop
sbb
pop
dec
mov
jmp
repz
or
sub
pop
je
pop
or
mov
sbb
pop
and
pop
add
push
loope
jns
repz
rorb
enter
pusha
mov
mov
fnstcw
sarb
xchg
fwait
mov
sbb
das
push
aad
xor
ret
subb
rorl
sbb
ss
and
jp
xchg
sbb
sbb
mov
rcrl
inc
leave
xchg
in
pop
shll
xchg
not
jp
sbb
jmp
cmp
xor
xchg
rcrb
in
jmp
jle
ret
pop
in
pop
xchg
ret
inc
inc
popf
jl
inc
cmpl
sub
sub
dec
mov
out
push
inc
lret
jp
fiaddl
add
cld
sbb
mov
andb
xor
mov
xchg
or
pop
repnz
rclb
dec
push
add
and
jmp
andb
jge
xchg
adc
test
add
mov
iret
orb
xchg
sbbb
das
xor
pop
xor
lret
test
stos
sub
xorb
xor
push
in
jmp
lods
adcb
sub
jle
xchg
imul
jge
jle
sbb
add
cmpb
sub
push
daa
adc
push
jp
ror
jmp
jg
mov
mov
sahf
insb
les
jae
stc
and
cmp
mov
sbb
sub
leave
daa
divl
out
or
mov
inc
fldt
cld
pushf
adc
push
cld
aaa
movsb
sbbb
mov
inc
test
loopne
pop
mov
and
imul
add
imul
mov
adc
loopne,pt
jns
lret
xchg
add
fists
pop
pop
fisubrl
jmp
int
loop
ret
and
push
cwtl
xchg
xor
mov
loopne
push
push
out
or
ljmp
jnp
jp
dec
sbb
add
cmp
dec
xchg
dec
rolb
mov
dec
xchg
inc
lret
xchg
insl
mov
and
push
mov
xor
and
inc
dec
repz
and
hlt
clc
pop
sub
mov
sub
mov
or
sbb
xor
pop
cli
lods
pop
mov
nop
cmc
inc
jl
lahf
mov
pusha
adc
or
xchg
mov
pop
rclb
xchg
lcall
mov
push
xor
add
push
in
jg
dec
ds
je,pn
lahf
shll
add
enter
add
sub
sbb
lcall
cmpsb
out
inc
addr16
cld
out
popa
pop
test
cmp
leave
orl
popf
test
sahf
or
shl
add
int
not
shrb
or
inc
test
test
pop
ret
jp
outsb
mov
adc
inc
inc
in
mov
mov
cli
mov
or
lahf
or
bound
aad
pushf
or
push
and
cmpsl
cmp
xor
xor
bound
pop
or
and
ret
or
cmp
aad
add
xchg
aaa
shrb
adc
js
adc
dec
mov
in
lds
out
outsl
add
es
fists
loope
cmp
xor
aaa
mov
push
loope
loope
hlt
xchg
push
pop
ret
or
push
mov
xor
sbbl
inc
outsb
adc
push
lods
loope
add
push
repz
cmp
fstps
lahf
mov
add
or
jmp
pusha
and
sbb
cwtl
jecxz
or
testl
sti
fiadds
adc
jb
lods
pop
popa
mov
nop
jl
outsb
push
or
dec
jmp
push
xor
popf
jae
or
inc
push
cmp
mov
xor
out
push
cmpsl
inc
adc
and
pusha
mov
loope
nop
lock
out
inc
xchg
jmp
jmp
xor
mov
ffree
sbb
mov
insl
shlb
inc
xor
mov
dec
ret
hlt
lret
cmp
mov
jmp
add
xchg
mov
dec
adc
mov
repz
and
push
gs
gs
and
or
dec
mov
mov
xor
or
inc
dec
pop
out
or
pop
and
lahf
enter
fs
mov
push
ret
imulb
pusha
jns
flds
push
xlat
and
adc
das
jne
test
pop
pop
add
lret
clc
lret
leave
and
rcrl
cmpsb
xchg
xchg
sarl
or
and
subl
enter
fs
adc
push
jmp
imul
out
sub
ja
jne
push
leave
xor
mov
in
sbb
jno
ret
punpckhdq
fisttpll
sarl
es
inc
das
add
sub
aam
adc
mov
pushf
add
xor
sub
mov
push
ds
jmp
rcrb
inc
into
rolb
and
sub
add
or
sub
pop
jge
dec
sbb
shll
daa
dec
lods
das
jmp
pop
mov
dec
leave
cwtl
ja
out
or
push
pop
aas
nop
pop
sarl
cmpsb
adc
xchg
xor
dec
adc
rcrl
loop
xor
xor
inc
lods
or
or
cld
gs
and
jno
stc
test
mov
pop
icebp
dec
sbb
pop
dec
pop
nop
pop
insb
push
lds
dec
mov
and
gs
cmpl
xchg
orl
pop
mov
xor
or
out
dec
push
orb
and
iret
stos
ret
stos
pop
xchg
jnp
jecxz
jnp
mov
add
xor
js
sub
incl
pop
jl
xor
pop
push
jmp
btr
pop
cs
sub
les
adc
jns
imul
ds
sti
icebp
repz
lods
push
mov
ljmp
inc
ss
adc
pop
sub
xlat
pop
faddp
push
mov
sub
je
lods
fildll
jnp
cmc
inc
pop
xor
mov
and
add
les
push
fucomip
mov
std
cmp
aas
fidivrs
xchg
inc
mov
dec
movsl
arpl
enter
cmp
fidivs
push
mov
jl
stos
pop
push
int
sub
test
loop
xchg
shll
push
adc
adc
dec
add
hlt
int3
mov
xchg
shl
pusha
test
mov
or
inc
ljmp
jmp
orb
add
push
push
jne
pop
das
sbb
inc
add
sub
jmp
fcomp
mov
ret
sub
cwtl
pop
ja
inc
add
push
mov
and
test
push
push
clc
xchg
mov
cltd
add
shl
or
jmp
mov
outsl
fldcw
in
dec
lods
jb
pop
leave
pusha
sarl
jnp
popf
dec
xchg
jmp
mov
sub
iret
movsl
sub
sbb
iret
and
daa
dec
xchg
and
inc
inc
jb
jbe
ljmp
lds
jecxz
or
jo
cmovle
add
dec
outsb
push
push
add
xor
cld
and
or
or
jmp
inc
js
jb
imul
push
inc
or
pop
push
mov
rclb
mov
jg
repnz
or
insb
hlt
xor
pop
cmp
test
mov
mov
icebp
mul
dec
sub
or
xor
fists
pusha
xchg
push
mov
adc
xorb
push
sbbb
out
push
mov
stos
pop
into
cs
jbe
cli
out
shll
pushf
xchg
das
js
inc
insl
and
rcl
in
adc
jbe
iret
cmc
cmp
adc
scas
mov
pop
mov
jmp
mov
test
imul
push
pop
inc
fldl
popf
int
in
push
mov
xchg
daa
imul
inc
cmp
fisttpl
movsl
imul
adc
test
mov
adc
dec
cli
sub
bnd
push
jmp
inc
in
and
jg
divl
sti
dec
push
sti
lea
push
cmp
adc
jmp
ret
ja
mov
jo
dec
push
inc
and
or
out
push
fs
inc
push
push
pop
mov
icebp
inc
ret
out
rclb
dec
dec
lret
push
mov
stos
aaa
imul
dec
mov
push
adc
jb
cs
pusha
dec
mov
not
frstor
fldl
mov
adc
fbld
or
jmp
cs
repz
inc
inc
sbb
mov
shrl
or
lods
sub
adc
cld
daa
lahf
pop
xor
cmc
fmull
add
push
sbb
and
fs
cmp
or
add
adc
pop
inc
adc
dec
xor
pop
and
jmp
mov
scas
mov
sub
out
out
lahf
sti
movsb
mov
mov
dec
lret
popf
adc
and
or
je
les
xchg
shl
add
jo
xchg
imul
sub
push
movsb
nop
or
loopne
mov
shr
andb
add
aad
scas
loop
mov
jle
dec
das
subl
sbb
sub
std
sbb
mov
dec
jge
xor
add
fs
fidivl
incl
out
mov
testb
pop
xchg
dec
hlt
pop
add
and
out
out
test
out
mov
je
and
and
xlat
or
add
pop
pop
popl
enter
and
loopne
xchg
push
push
sub
pop
cs
push
mov
mov
sbb
inc
sbb
push
jmp
xchg
mov
call
xchg
jg
lds
fmuls
adc
pop
scas
mov
and
fiaddl
cwtl
pop
sub
rcrl
pop
pop
push
cli
je
push
sub
dec
stc
push
and
and
pop
push
dec
out
or
popa
lock
shlb
and
rolb
add
mov
and
shll
dec
movsl
hlt
add
push
add
out
xor
mov
ret
pop
inc
jmp
push
push
sbb
mov
xor
xlat
inc
icebp
sub
cmp
iret
jmp
dec
add
aad
push
dec
lret
andb
shll
jecxz
stc
mov
mov
add
mov
cmpb
inc
sub
and
pop
mov
into
daa
loope
inc
fmuls
add
sub
dec
xchg
jle
sub
gs
ret
push
pop
cs
inc
fidivrs
lods
and
jg
es
push
inc
and
jge
xchg
adcl
hlt
daa
sahf
cmp
or
dec
xchg
int3
push
xchg
adc
sbb
mov
or
add
jns
imul
enter
cmp
std
sbb
sub
subb
popa
mov
adc
pop
add
rolb
inc
adc
dec
pop
add
jo
inc
jb
push
xlat
add
xor
icebp
iret
jne
into
sbb
int
adc
rorb
add
js
loop
cmp
aaa
adc
cli
mov
lds
jbe
jmp
movsb
mov
and
push
adc
dec
and
cli
jl
cmp
jle
loope
jb
add
inc
jmp
sub
subl
push
sub
fcomps
jge
push
pop
inc
test
negb
mov
add
test
pushf
stos
sub
loop
xlat
add
jmp
pop
add
push
inc
movsl
movsb
xor
sub
dec
pop
loop
mov
add
outsl
stos
jnp
mov
dec
sarl
jbe
stc
lret
lds
sub
push
mov
daa
push
add
mov
std
add
push
push
pop
pop
push
sbb
xorl
arpl
lods
stc
mov
rclb
mov
push
cs
orl
lret
add
mull
pop
mov
push
or
push
lods
xchg
cmp
fiadds
xchg
aaa
das
cmpsl
add
loop
add
repnz
aad
scas
add
negl
sub
nop
repnz
sub
rol
in
ljmp
sub
popf
int
cmp
scas
and
fldcw
fcmovbe
pop
mov
dec
out
pop
scas
clc
pop
sbb
shr
int3
not
push
fists
pop
loope
les
pop
mov
imul
in
pop
sub
pop
test
xchg
sub
sub
or
jge
inc
add
dec
das
adc
jle
lret
jne
js
dec
or
cs
in
nop
jo
repnz
test
sub
and
pop
lock
inc
mov
sbb
or
jmp
popf
fiadds
test
sarl
in
and
ret
pop
add
adc
mov
sub
cmc
test
add
push
inc
rolb
outsb
dec
jne
add
addb
aam
pop
je
xor
cwtl
cmp
sar
jo
or
out
int3
mov
xchg
mov
notl
dec
mov
mov
shlb
vprotd
jecxz
add
rclb
add
addr16
jmp
cmpsb
mov
mov
sub
add
mov
addr16
enter
repz
mov
loope
xchg
xchg
fnsave
adc
cli
pop
ja
push
or
add
push
pop
and
or
imul
ds
add
pop
sub
add
mov
add
fidivl
out
inc
test
xchg
data16
outsb
hlt
mov
push
fwait
in
push
sbb
xor
fisttpll
jo
das
adc
jmp
xor
sub
fimull
nop
test
pop
push
mov
in
adc
lcall
inc
cli
push
pop
jp
mov
mov
cmp
xchg
fndisi(8087
lcall
push
fldl
and
inc
cmp
adc
xchg
or
add
pop
pop
xor
mov
mov
inc
lea
sub
mov
in
and
hlt
or
cmp
mov
in
inc
mov
aas
shl
js
ret
jnp
dec
adc
adc
aaa
stos
mov
mov
push
cmpb
dec
pop
pop
jns
mov
push
out
mov
xor
mov
add
and
cli
push
stc
test
xchg
pop
fdivrl
cmp
adc
push
jnp
orl
add
sti
and
movsb
mov
es
jno
lods
xorb
sbb
dec
dec
inc
cmp
jbe
xor
cld
ja
int3
sbb
nop
mov
js
sub
push
idivb
dec
push
inc
mov
iret
sbb
pop
jg
push
cmp
pop
mov
scas
xchg
mov
daa
aam
pop
daa
add
xchg
cmpsl
cli
and
inc
xchg
dec
jge
loope
gs
pop
out
add
dec
inc
sub
jmp
mov
cmpsb
xchg
mov
imul
pop
xor
sub
mov
sub
mov
inc
aam
popa
cmp
in
push
orl
subl
mov
xchg
cmp
stos
fcomp
inc
loop
add
and
dec
cmp
sub
fcoms
jmp
dec
dec
gs
push
pop
lods
mul
pop
push
popf
xlat
cmp
cli
and
and
ljmp
sub
xlat
or
test
push
xor
jecxz
sub
sub
jns
xchg
idiv
mov
push
mov
or
shlb
xchg
imul
out
icebp
jmp
and
mov
and
addr16
cs
xchg
add
adc
jmp
xor
stc
pop
shrb
out
aam
and
push
push
jb
push
jnp
push
mov
outsl
lock
addb
jne
sbb
insl
xlat
cmp
adc
cli
or
and
and
leave
and
ficomps
adc
orb
xchg
sub
jb
or
and
mov
xor
daa
mov
mov
loopne
mov
and
fbstp
loope
in
mov
lret
inc
xchg
pushf
mov
dec
cwtl
scas
or
lds
shrb
aam
jb
dec
add
push
mov
sub
dec
pop
push
dec
sti
push
es
and
and
inc
push
jg
in
out
cli
scas
or
adc
setnp
xor
shl
mov
sub
inc
outsb
popf
movsb
xchg
aas
dec
xor
push
clc
addl
mov
cmp
sbb
push
push
repnz
pop
leave
mov
mov
xor
stc
mov
insl
sub
sbb
xchg
sub
xchg
aas
add
nop
sub
mov
ret
adc
or
jmp
aam
insb
dec
cmp
jle
movsl
jmp
jne
decb
mov
inc
data16
dec
test
inc
push
ret
decl
or
int3
xor
add
js
cs
iret
push
ds
jmp
nop
or
clc
jle
stos
fimull
or
gs
cmp
or
xor
mov
push
mov
enter
xor
lret
jae
pop
shl
pop
std
push
sbb
jbe
sbbb
cltd
mov
leave
jl
add
andb
popf
pusha
cmp
clc
out
or
jo
jl
shrl
lds
in
lods
movl
inc
and
mov
dec
fmuls
or
scas
shrb
jmp
ret
popa
pop
push
jle
das
jbe
jnp
mov
and
rcrl
sbb
in
add
xchg
mov
mov
mov
out
jp
shr
xor
jg
pop
add
and
insl
inc
or
ja
sub
js
test
inc
adc
adc
out
inc
push
decb
pushf
mov
int
cmp
fidivl
xchg
sbb
adc
mov
std
fidivrs
cld
mov
je
arpl
cmp
jmp
call
push
xchg
cwtl
mov
pop
mov
mov
ds
or
cld
out
mov
rolb
mulb
mov
add
xor
add
mov
mov
das
xorl
xor
in
sub
rcll
dec
lret
in
push
mov
pushf
cmp
sbb
cmp
loopne
xor
pop
sub
outsb
xchg
addr16
sbb
adc
xchg
inc
add
xor
add
pop
push
push
mov
xchg
roll
repz
fisubrs
std
imul
jp
pop
shr
jle
ja
nop
fisubs
addr16
xor
pop
add
push
lcall
icebp
test
hlt
xchg
or
insl
jb
and
lret
fsubs
sahf
rep
add
mov
lret
inc
loop
jne
daa
and
xorb
lea
sahf
loopne
rcrl
pop
imul
fsubrl
push
std
mov
dec
xor
cmpsb
or
add
and
orl
iret
push
cwtl
out
in
push
adc
inc
adc
xor
jno
shl
inc
add
xchg
sub
lea
inc
pop
cmovnp
jmp
inc
leave
push
pushf
mov
jae
mov
sub
pop
mov
cs
ret
les
push
hlt
cmp
sub
ljmp
popf
jmp
loopne
push
cmp
inc
scas
dec
data16
imul
sbb
adc
sub
in
adc
std
cltd
pop
lret
sub
das
mov
test
dec
pushl
mov
cmp
push
das
fdiv
and
push
jg
push
test
add
pushf
cmp
push
mov
dec
pusha
jl
ret
pop
cld
lock
shlb
lret
orb
sub
iret
jmp
jle
icebp
enter
dec
mov
addr16
adc
fsubrl
push
adc
jge
mov
sbb
into
adc
out
push
add
jno
jmp
lcall
jmp
pop
lahf
sbb
mov
movsb
leave
or
ja
push
adc
fisttpl
sbb
addb
test
mov
stos
push
lahf
mov
add
xor
mov
dec
aas
xchg
dec
or
sub
sbbb
pop
jle
jbe
dec
sbb
inc
fsubr
pop
imul
pop
out
ret
out
jmp
idivl
pop
pop
cmp
xchg
pop
movsl
or
lock
test
inc
fdivrl
add
mov
lock
or
sub
or
es
jmp
shr
in
loope
outsb
xor
inc
xor
mov
lods
fcomp
pop
jno
js
mov
or
pop
scas
inc
sub
or
sbb
es
popa
add
adc
xor
sarb
pop
dec
adc
pop
loop
jg
mov
ljmp
aam
xlat
gs
inc
mov
adc
xchg
jmp
add
sbb
add
jmp
xor
maxps
in
test
and
shrl
cli
mov
push
stos
in
push
in
aas
test
dec
cmp
dec
mov
mov
insb
into
and
jne
es
nop
cmpl
pcmpeqw
inc
add
pop
xor
aaa
add
stc
pop
mov
and
push
mov
sub
mov
int3
daa
dec
mov
rolb
add
das
andl
or
add
inc
jne
xchg
push
rol
xor
push
pushf
xchg
out
jg
lret
jnp
loopne
inc
inc
xchg
mov
inc
imul
mov
xchg
in
movsl
add
and
imul
xor
add
mov
and
xchg
bound
mov
pop
jge
fcoml
dec
pusha
fwait
test
adc
rcll
imul
mov
and
push
mov
divb
pop
or
push
decl
push
loopne
mov
dec
and
les
in
cs
lods
sbb
inc
sub
int3
add
das
fnstcw
mov
push
mov
mov
inc
or
cmp
or
push
nop
xlat
pop
loop
sbb
mulb
inc
dec
pop
lret
inc
pop
mov
add
cmp
in
pop
inc
in
std
jnp
sbbb
dec
imul
pop
jnp
mov
stos
mov
mov
mov
sub
inc
jns
faddp
inc
or
jge
out
or
add
inc
add
mov
and
add
mov
rorb
and
add
scas
dec
pop
cmp
sbb
add
jmp
lret
mov
add
jl
enter
lret
ja
add
mov
jnp
xchg
dec
das
cmp
xor
shlb
fcmovnb
insl
nop
sub
leave
clc
pusha
imul
inc
mov
pop
shll
bound
jg
aam
mov
add
cltd
sbb
xchg
rcrb
in
icebp
sbb
movsl
sbb
add
jmp
mov
rorb
or
pop
xor
test
test
pop
jmp
cmp
cli
push
or
rcr
or
xchg
sub
lds
xchg
loop
rorl
outsb
xchg
pop
add
sti
test
push
iret
adc
lea
les
cmpl
adc
jg
xor
adc
cwtl
testb
add
sti
push
jp
jmp
jno
in
and
gs
out
jecxz
xchg
mov
add
and
inc
jmp
hlt
test
push
or
inc
adc
lret
dec
mov
or
pushf
sbb
mov
push
in
push
cmpsl
insl
mov
jmp
nop
lods
mov
rorl
lock
add
cmpb
and
lahf
sbbl
add
xor
aad
cmp
fcoms
in
sbbb
arpl
pop
lods
lds
test
or
jmp
fadds
mov
pop
sti
out
aas
xor
dec
int3
loop
pusha
inc
push
mov
or
imul
jb
sub
push
pop
subb
imul
add
xchg
or
movb
adc
ss
clc
popa
fisubrl
jle
dec
in
fstpt
addl
orb
dec
aas
test
loopne
pop
push
push
pushw
sub
mov
ret
into
pop
jbe
pop
adc
xchg
stc
mov
pop
mov
aad
add
xor
xchg
outsl
mov
mov
cli
and
cmc
pop
lock
leave
pop
imul
clc
insb
pop
pop
dec
into
bound
subl
sub
mov
pop
mov
sub
les
cmp
mov
rorb
cwtl
hlt
pop
push
int3
rcll
sub
fstps
sub
xor
push
and
cld
xchg
sub
insb
je
pop
movl
and
aas
inc
fs
loop
adc
jno
test
push
call
popf
dec
movsb
fbld
in
and
jae
push
mov
shr
sub
ja
pop
push
lret
dec
inc
dec
or
pop
add
pop
sub
es
dec
shrl
sub
fs
inc
push
mov
clc
movl
and
push
dec
dec
leave
rcl
ret
pop
popf
and
push
lods
mov
adc
jb
xor
popa
fsub
cli
outsl
mov
adc
xor
lret
pusha
add
outsb
jl
lahf
popa
fisttpll
inc
and
add
ds
rorl
mov
pop
hlt
fisttpll
sbb
ret
out
jmp
fisttpl
in
fisttpll
sub
mov
xor
incb
dec
xor
popa
push
or
mov
shrl
sti
jb
adc
js
jl
mov
inc
popf
ds
jb
pusha
outsb
dec
lahf
imul
adc
out
inc
mov
or
sub
push
add
xor
cltd
xchg
add
push
sbb
xchg
add
mov
js
xor
arpl
sar
adc
pusha
mov
dec
jg
sub
jne
andb
push
sub
adc
test
pop
test
xor
mov
cwtl
cmp
inc
popf
jle
mov
in
mov
cmc
loope
pop
cs
popf
shrb
push
test
ficoml
and
out
loopne
mov
adc
adc
lock
jae
mov
movsl
jge
adc
dec
push
jmp
test
cmp
pop
mov
mov
lods
call
mov
or
and
lret
jne
ss
aas
pop
loope
adcb
aas
outsl
in
scas
dec
scas
push
pop
xlat
outsl
in
adc
imul
xor
pop
repnz
or
pop
dec
dec
inc
jne
std
mov
aas
in
or
daa
mov
inc
popa
call
cwtl
insl
mov
sbb
and
push
adc
xchg
shll
push
movsb
sub
inc
sbb
sbb
in
lahf
gs
mov
sahf
dec
int
in
mov
xor
dec
inc
jmp
je
in
inc
or
or
push
je
adc
pushf
jbe
mov
mov
adc
pop
pop
dec
mov
fistpl
ret
mov
or
mov
dec
push
adc
outsb
jo
aad
sub
and
jl
popa
jl
lds
adc
pop
pop
xchg
pop
dec
and
js
jge
mov
inc
out
lret
imul
push
lcall
int
jl
add
xchg
xor
int
add
jmp
jae
pop
or
jge
cmp
adc
add
out
iret
nop
mov
call
push
leave
cmp
imul
hlt
push
mov
pop
fimull
shl
outsb
movsl
xor
or
sub
jmp
xor
out
bnd
and
pop
push
fdivl
push
nop
ss
addr16
std
add
pop
out
fcoms
test
lods
sbb
adc
push
inc
in
dec
inc
pop
cmp
cwtl
fsubrl
lds
pop
pop
je
and
inc
clc
addr16
adc
jns
add
push
xchg
or
push
dec
pop
pop
add
imul
cmp
jecxz
bound
push
push
mov
adc
push
push
mov
xor
jbe
sbb
aas
pop
and
pop
push
hlt
sub
lods
sbb
mov
sbbb
and
add
jns
adc
movsb
test
mov
icebp
mov
push
jnp
scas
out
push
pop
xchg
test
clc
push
cltd
imul
add
and
ljmp
iret
test
sbb
or
aaa
and
pop
fcompl
repnz
push
or
cs
and
ja
in
cmp
out
add
js
inc
arpl
xor
jmp
mov
cs
subb
int
jmp
orb
stos
add
sbbl
pop
cmpb
ficoms
adc
rorb
jo
mov
imul
test
fisubrl
mov
inc
inc
sub
clc
inc
jge
jae
mov
iret
fmull
and
or
pop
inc
flds
dec
das
scas
cmp
loop
popl
or
notl
push
movsb
sub
pop
xchg
push
faddl
lret
cmovb
inc
inc
gs
push
stos
cwtl
mov
or
cmp
xlat
jae
sub
stc
jmp
adc
adc
daa
fsub
sti
mov
push
xor
adc
arpl
xor
iret
pop
insb
pop
sbb
lcall
cmc
sub
add
sbb
jns
jl
cmpsb
sbb
adc
sbb
fnstcw
mov
mov
inc
in
lods
push
and
push
pop
push
lods
mov
imul
and
dec
dec
movb
push
out
sbb
sbb
mov
sub
adc
sbb
daa
push
and
popf
jp
jb
mov
orl
cmp
inc
jecxz
sub
jns
mov
arpl
xchg
in
sbb
xor
xor
pop
andl
insl
inc
and
call
add
inc
cmp
dec
rorb
xchg
jnp
mov
shr
call
mov
pop
and
inc
and
mov
addl
mov
jmp
out
repnz
or
shlb
loopne
mov
loopw
fnstenv
xchg
loop
aam
or
std
loope
adc
in
sub
adc
stos
jo
xor
push
cli
jae
mov
mov
push
loope
mov
jge
hlt
mov
push
pop
inc
pop
hlt
icebp
add
fisubrl
add
jo
stos
addl
neg
lret
jnp
movsb
fwait
pop
clc
rorb
es
les
stos
lock
sub
das
enter
mov
fsubs
nop
scas
cli
push
inc
cmp
xchg
pusha
in
sbbb
inc
mov
inc
add
loopne
lret
sbb
pop
jmp
push
aam
int3
pop
sub
pop
in
mov
xchg
scas
mov
aam
lahf
lods
or
and
pop
icebp
sbb
fs
mov
mov
pop
int3
xchg
jnp
mov
rclw
movsb
aas
sub
mov
jae
xlat
test
ljmp
mov
imul
pop
std
mov
cmp
stos
add
or
in
or
ror
or
into
push
lds
arpl
mov
cmp
sahf
movsl
dec
inc
test
inc
pop
cli
popf
push
add
hlt
xor
lock
mov
xlat
sahf
fwait
repnz
add
xorb
pop
inc
inc
sub
std
jge
outsl
insb
or
or
sti
lcall
add
daa
shl
pop
cli
xor
xchg
xchg
push
scas
adc
or
int3
push
mov
adc
dec
int
xchg
scas
mov
mov
daa
shrl
into
cmc
sub
inc
rorl
aas
mov
dec
mov
cmpsl
pop
jle
pop
aas
or
int
rolb
jle
loop
lds
and
pop
ljmp
add
push
cmpsl
lcall
xlat
xor
push
sub
add
mov
sub
pop
pop
adc
adc
icebp
or
fwait
jl
or
incl
sub
xchg
outsl
pop
gs
mov
repz
inc
scas
pop
fsubs
lahf
hlt
dec
bound
mov
testl
jecxz
test
sub
test
cmc
ljmp
xchg
mov
xchg
aam
jb
lods
outsl
pop
jmp
lock
adc
leave
movl
pop
icebp
daa
push
lock
hlt
push
push
imul
mov
push
jb
push
inc
test
dec
pop
imul
loopne
enter
subl
sti
and
dec
add
push
ja
jmp
xor
lahf
out
jge
ljmp
pop
out
das
das
scas
push
ljmp
cs
sub
xchg
pop
push
add
adc
leave
mov
fninit
pop
sub
mov
loop
test
outsb
add
and
mov
pop
mov
jmp
jl
or
cmp
adc
jo
stc
pop
out
loopne
daa
mov
call
mov
mov
aam
jbe
xor
sbb
push
pop
rcrl
and
cmp
mov
push
add
push
in
xchg
stos
or
popa
sbb
cs
add
push
add
cld
stos
jno
jmp
xchg
lahf
lods
dec
mov
imul
xchg
pop
jmp
repz
mov
int
insb
lock
add
dec
stos
sub
and
cmpsl
movb
sbb
dec
pop
rcrb
lret
test
sbb
mov
adc
sub
jmp
inc
das
push
or
mov
cmpsl
std
frstor
lds
lds
fninit
push
adc
pop
or
shrb
or
jmp
pop
cmp
or
xor
sub
and
adc
push
aad
push
mov
xor
mov
jge
adc
sbb
cwtl
add
push
mov
xor
mov
je
test
mov
adc
jne
data16
pushf
rorb
js
or
adc
out
jo
or
and
icebp
neg
adc
popf
scas
xor
pop
xchg
decb
repz
test
push
popl
adc
pop
test
adc
shr
add
dec
hlt
cmp
xchg
push
out
xchg
sbb
add
mov
or
mov
push
ret
call
sar
xchg
les
rorl
lret
inc
ficompl
cmp
inc
fisubrs
fstps
cs
push
add
lret
test
add
inc
dec
jl
or
or
sbb
pop
pusha
add
cmpsb
push
and
mov
adc
call
repz
sub
inc
jmp
shlb
mov
mov
rcrl
stos
and
mov
pop
hlt
icebp
jb
add
es
ret
je
outsl
sub
pop
in
and
std
call
fisubrs
out
cmp
push
in
daa
pop
or
push
rcrl
jne
or
mov
sbbl
mov
mov
ret
xchg
jae
and
movb
inc
es
push
adc
ja
sbb
sub
inc
and
push
loope
sbb
daa
stc
test
icebp
testb
sub
add
cwtl
jg
daa
jmp
or
hlt
in
inc
lock
test
push
sbb
fistpl
pop
inc
or
bnd
mov
vdivss
pop
add
out
jge
sub
pop
push
jmp
fmull
push
mov
push
or
inc
popa
out
push
in
cltd
subl
adc
aas
add
or
sbb
pop
mov
inc
in
fs
iret
cmp
mov
push
mov
fdiv
ds
imul
jmp
mov
aas
loop
sahf
aad
lcall
cmpsb
add
push
push
js
inc
dec
jecxz
add
sbb
into
and
mov
cmp
aas
test
ret
jmp
fdivl
mov
mov
vmulss
ja
out
add
btr
mov
inc
roll
cld
movsl
or
mov
cwtl
jo
loopne
je
inc
inc
mov
adc
cs
out
xchg
dec
xor
cmp
add
or
popw
lock
sub
jb
out
sub
sbb
dec
xchg
pop
lahf
outsl
mulb
call
repnz
test
ret
lret
sbb
ret
xchg
xor
ret
jne
push
lock
push
sub
imul
adc
mov
pop
add
je
enter
xchg
das
pop
aad
sbb
decl
dec
jg
ljmp
or
mov
push
fisubs
jg
mov
addb
rorl
add
push
cmc
add
pusha
adcl
dec
cld
pusha
adc
xor
popf
icebp
xlat
aas
xchg
sbb
ret
das
negl
add
mov
mov
std
pop
negb
adc
out
es
pop
in
xor
cs
push
out
mov
test
dec
incl
adc
inc
mov
jl
add
push
push
and
sub
pop
push
das
jbe
pop
jmp
add
inc
cmp
in
lock
jno
sub
sbb
push
push
jno
adc
cmp
mov
mov
clc
mov
or
jo
dec
inc
add
add
adc
jmp
pop
lret
mov
sub
push
mov
es
and
inc
cmp
xor
fs
ret
imul
pop
cmc
add
jbe
jb
mov
push
cmp
repz
jne
jp
in
or
testb
je
pop
ja
sbb
mov
and
fmull
lds
lock
lds
sub
cmp
fildl
repnz
push
or
lret
test
jns
dec
pop
leave
call
sub
adc
aas
nop
sbb
mov
dec
jbe
add
mov
pop
aas
sub
mov
push
pop
cmp
insb
jb
add
aas
ljmp
add
or
fldcw
xchg
adc
or
es
mov
imul
in
pop
pop
adc
adc
mov
push
jmp
xor
pop
lret
aam
or
jg
fldenv
push
inc
js
lahf
bound
cmpb
repz
mov
test
es
test
xchg
js
iret
inc
cmp
jae
cs
rorb
jmp
jns
push
rorl
mov
push
mov
inc
mov
cmp
adc
hlt
push
setns
sbb
mov
jmp
fildll
imul
add
inc
pop
and
fmul
pop
cld
stos
mov
jl
push
jmp
pop
mov
sbb
mov
sub
sub
and
lret
jb
je
test
cli
and
pop
pusha
adc
jo
xchg
divl
mov
and
repz
and
mov
cmp
jbe
das
andb
fldl
insb
add
repnz
adc
sbbl
mov
and
xchg
dec
inc
mov
bound
shll
cmp
inc
into
xor
repnz
mov
sarl
movsl
jg
mov
inc
dec
addb
pop
sub
pop
pop
and
repnz
sar
pop
sub
movsl
pushf
push
mov
pop
daa
roll
pop
adcl
mov
in
or
jmp
dec
in
pop
add
clc
out
pop
jbe
or
push
mov
add
sub
pop
lcall
jmp
rclb
pop
sbb
inc
and
nop
xchg
aad
jo
pop
mov
sub
adc
mov
jl
adc
add
pop
push
inc
imulb
push
fwait
lahf
fidivrl
aam
pop
or
movsb
jo
pop
fnsave
mov
inc
mov
mov
xor
pop
pop
mov
mov
push
dec
xchg
pop
mov
sbb
xchg
cltd
sub
push
sbbb
inc
mov
and
mov
pop
loopne
aaa
lahf
mov
push
mov
pop
jecxz
jae
adc
push
int
into
inc
in
adc
aam
add
mov
daa
jge
jne
sahf
loope
push
sbb
cmp
xchg
les
jnp
mov
sbb
into
jecxz
push
lds
sbb
int3
aas
and
add
sbb
adc
sub
sub
jg
sub
xchg
xor
pusha
scas
outsl
or
mov
push
scas
jne
icebp
sbb
hlt
inc
fisubs
in
dec
movsl
scas
sub
xchg
push
fcompl
in
icebp
pop
aas
cmpsb
je
jns
adc
clc
add
push
ss
mov
ficoml
movsb
inc
add
aam
add
push
nop
sub
sti
ja
inc
add
and
cmp
jg
push
dec
loopne
pop
ret
mov
mov
and
pop
dec
xchg
rolb
subl
xchg
into
stos
lahf
mov
push
sbb
adc
pop
rorb
add
mov
pop
push
push
loop
xchg
incl
push
cwtl
xchg
dec
push
hlt
sbb
lret
and
mov
jg
out
xchg
mov
cmp
push
xor
jae
into
pop
mov
xor
and
dec
stos
add
jmp
adcb
jbe
push
mov
and
pop
pop
ret
rcrb
cli
mov
jmp
lds
sbb
mov
mov
mov
and
inc
test
sti
jl
push
addl
scas
xchg
inc
cli
lock
cld
dec
mov
xchg
fucomp
pop
test
cmp
pop
cli
inc
fsub
daa
adc
jbe
mov
orb
js
lret
ret
popf
cmc
sbb
sbb
adc
cmp
mov
inc
icebp
pop
shl
mov
xor
faddl
adc
dec
ljmp
xor
xorb
ret
out
out
fs
das
ficoms
mov
and
sti
pop
andb
push
lahf
add
and
imul
push
mov
push
or
std
pop
pop
loope
mov
xlat
lds
inc
dec
dec
jae
jbe
repnz
lds
push
loope
pop
mov
push
pop
pop
sbb
mov
and
mov
shlb
mov
out
shll
bnd
push
in
inc
mov
das
loopne
je
dec
jns
out
test
jb
pop
in
jge
mov
jmp
mul
xor
cmc
cs
daa
dec
decl
adc
lock
pop
decb
shlb
loop
pop
scas
push
pop
lcall
mov
aad
and
cmp
decb
movsbl
int3
mov
ja
lret
mov
test
lock
loope
or
mov
hlt
mov
adc
sub
adc
hlt
push
pop
or
adc
fs
inc
pop
push
ffree
fwait
dec
js
add
and
cmpl
push
inc
loop
adc
cmp
or
jmp
mull
testb
int
sub
lock
ret
xchg
in
sub
cmp
jo
mov
insb
push
nop
xchg
or
data16
insl
push
xor
ret
inc
inc
or
add
inc
es
xor
into
or
cwtl
popa
ret
nop
stos
adc
pop
ficomps
sub
mov
cmp
push
push
add
dec
call
ret
pop
out
loop
loope
add
mov
push
frstor
inc
scas
pusha
add
lcall
sub
shrl
mov
mov
bound
repz
jne
mov
pushl
mov
inc
cltd
test
push
dec
out
fisttpll
daa
jmp
pop
fnstenv
js
psubb
mov
push
jo
dec
lods
cmp
cs
or
subb
dec
cmc
inc
fwait
jnp
mov
jmp
pop
pop
lret
add
mov
mov
jl
roll
sub
and
shl
iret
aam
push
decl
sub
das
push
imul
ja
repz
sub
sub
in
and
and
pop
jno
sti
sub
push
adc
push
popa
jmp
push
js
add
mov
in
push
or
inc
inc
dec
pop
sbb
sub
inc
mov
sub
mov
push
lods
pushw
mov
dec
cwtl
jecxz
jns
inc
push
fldpi
mov
cs
daa
pop
and
mov
sbb
dec
sbb
bound
add
arpl
pop
fildl
cmc
add
mov
push
imul
idiv
movl
xor
popa
ljmp
push
mov
xor
add
sbb
lock
xchg
aas
xor
lods
arpl
rcrb
pop
pop
sbb
pop
mov
pop
test
mov
mov
adc
push
rcrb
jg
and
int3
mov
lahf
inc
sub
or
sbb
mov
lods
sbb
fcmovnb
out
mov
push
or
xchg
call
lods
daa
jl
jb
and
jmp
xor
inc
sub
jmp
pusha
psraw
incb
mov
sbb
or
jb
mov
ret
or
ja
inc
daa
xchg
cmp
rcrb
push
sub
shll
mov
jecxz
lock
fdiv
ficoml
out
inc
or
cs
lahf
adc
adc
xor
pop
add
je
lock
fistps
mov
inc
cmpl
add
jmp
mov
xchg
mov
test
push
adc
add
or
and
shlb
adc
aas
sub
stos
movsl
out
ds
xor
pop
add
cvtps2pi
sub
das
cld
cld
push
jmp
test
mov
ret
les
and
neg
mov
or
lock
jo
sub
fdiv
sbb
push
and
out
jnp
push
imul
outsl
test
mov
sub
pop
cmp
pushf
pop
pop
and
cli
test
and
rorl
addb
adc
xchg
ficompl
and
call
jns
insb
addr16
xor
jnp
xor
add
jb
jno
out
push
lock
shrb
je
cwtl
push
insl
cs
sub
jmp
sti
stos
inc
test
dec
pop
cld
xor
mov
pop
or
incb
sub
jecxz
adc
jo
mov
pop
mov
sub
or
jmp
xchg
push
lahf
xchg
js
push
sahf
ret
rcll
ja
insl
jge
cwtl
lahf
push
rcrl
mov
mov
imul
les
call
jecxz
add
shrl
jbe
sub
fstl
addb
or
or
fistps
cmc
cmp
dec
std
stc
jns
inc
pushf
push
decb
daa
scas
add
mov
leave
and
push
cmpsl
sub
mov
add
mov
add
clc
pop
sbb
sti
shlb
jmp
dec
out
mov
test
fwait
fs
dec
mov
daa
data16
stos
jp
mov
xchg
xchg
popa
mov
loop
pop
push
jp
and
je
or
adc
mov
sbb
and
jb
xor
movsl
jno
or
jb
lods
or
jmp
imul
dec
xchg
sbb
xchg
fs
add
push
or
mov
sub
jnp
mov
pop
xchg
pusha
cmpsl
push
mov
jns
sub
mov
test
ror
jne
lahf
lret
mov
in
loop
jle
mov
sbb
inc
or
cmp
jg
and
sbb
add
jg
jge
lods
mov
sarl
add
jmp
ret
loopne
sarb
cwtl
pop
sub
inc
inc
jo
adc
pop
pop
popf
lock
or
stos
sub
push
mov
imul
or
cmp
xorb
std
pop
pop
add
in
mov
and
sbbb
or
pop
cmp
push
fldcw
ss
pop
faddl
aas
jbe
push
bound
and
and
sub
pop
xor
mov
inc
repz
add
dec
xor
mov
inc
push
fcoms
and
cld
fsubrl
sbb
cmp
pop
xchg
pop
sub
mov
and
sbb
push
shll
shll
fisubrs
cmp
or
mov
pop
popf
mov
add
fbstp
clc
add
jp
xor
divb
mov
pop
cmp
cld
jbe
mov
adc
es
testl
fwait
dec
and
jp
test
xchg
in
sbb
test
sti
xor
std
add
ret
adc
mov
jl
xchg
ja
cmp
cmp
pop
sub
aam
mov
cwtl
mov
ja
out
cmp
arpl
sub
int3
mov
sahf
mov
cld
out
mov
push
inc
adc
pushf
in
push
adc
xchg
add
jl
outsl
xor
dec
push
dec
jmp
lds
adc
aas
mov
adc
cmpsb
ficomps
mov
sub
pusha
fs
bound
rcrb
aas
not
popf
cld
jecxz
repz
jnp
inc
xchg
es
fwait
adc
adc
jg
pop
daa
loop
jle
sbb
pop
shlb
mov
call
jl
neg
mov
dec
jo
ds
xor
imul
pop
jge
jmp
push
mov
jb
inc
jg
ret
sbb
pop
pop
std
inc
test
call
sbb
fisubl
sub
ficoml
xor
mov
orl
add
pusha
mov
fbstp
xor
xchg
sbb
sahf
cmp
or
out
fnsave
mov
sbb
jecxz
add
sub
jg
xchg
xchg
sub
adc
dec
add
mov
fucomi
inc
mov
mov
aaa
jg,pn
stc
pop
mov
push
cwtl
pop
push
in
shlb
push
testb
scas
shl
mov
mov
popa
push
movb
or
mov
sub
lret
mov
and
jae
clc
loope
fmuls
push
mov
inc
lret
jmp
lea
mov
add
nop
mov
mov
mov
cmp
sub
mov
fwait
lahf
stc
push
and
aas
pop
xrelease
fistl
push
push
rcrl
push
jb
xlat
dec
pop
sbb
mov
inc
popa
inc
dec
pop
sbb
shrl
bound
jmp
notb
jmp
mov
jge
push
or
in
adc
test
dec
aad
jl
inc
lods
pop
stc
das
xor
incb
pop
push
push
inc
jmp
sub
pop
ds
stos
mov
daa
out
and
insb
xchg
sbb
hlt
dec
adc
stos
repz
xor
testl
js
inc
xchg
mov
xchg
or
jmp
mov
dec
xchg
enter
xlat
shlb
mov
das
int3
dec
jmp
add
imul
fadd
sbb
mov
cmp
outsl
mov
add
add
lret
or
and
pop
mov
or
jns
gs
sub
xchg
pop
mov
sub
mov
fwait
pop
adcl
jb
xchg
and
mov
push
xor
mov
dec
jle
or
daa
cmp
mov
mov
sub
push
test
jp
mov
lret
dec
push
andl
mov
int
lret
pop
and
subb
dec
pop
jno
mov
loope
or
not
ja
divl
adc
pop
out
push
scas
ja
pop
sti
cmp
add
inc
sbb
mov
cmp
into
mov
push
fmuls
mov
scas
mov
loopne
add
popf
loop
bound
insl
dec
sbbb
out
gs
jge
mov
test
or
or
adc
add
cmovp
xlat
pop
scas
or
js
mov
dec
testb
jmp
or
sub
int
sbbb
movsl
mov
cmc
mov
push
mov
jb
or
mov
jbe
add
aam
and
in
push
lods
push
mov
rorb
mov
pop
adc
iret
pop
scas
lret
sahf
dec
adc
cltd
sbb
pop
or
pop
out
inc
das
xchg
lock
popf
dec
hlt
sbb
cmp
mov
stos
cmpsl
incb
add
jmp
scas
insb
aad
or
mov
and
call
mov
pop
lcall
lret
push
jne
mov
mov
ret
pop
imul
and
mov
add
cwtl
pushf
mov
dec
lock
and
call
pop
jmp
pop
int
xchg
or
cmp
repnz
jno
mov
sarb
aam
pop
sti
rcrb
loop
jns
outsl
add
mov
inc
xor
jmp
adc
cmp
iret
popf
lret
arpl
stos
hlt
pop
pushf
mov
push
jmp
add
jns
scas
stc
add
loope
popa
sti
neg
inc
cmp
repnz
or
mov
loop
push
push
push
fdivl
pusha
cmc
and
fcomip
push
ret
mov
fsubrs
call
add
mov
mov
outsl
add
jnp
mov
pusha
cmp
and
bound
push
add
sbb
aaa
pop
push
mov
andl
pop
xlat
test
jne
push
cwtl
xchg
sub
pop
xchg
loope
push
out
rcrb
adc
jp
mov
out
mov
test
call
vcvtpd2psx
dec
jl
notb
fs
test
test
push
mov
xor
fdivs
sarl
es
push
dec
adc
jmp
pop
outsl
lods
fisubl
hlt
or
inc
mov
std
lahf
xor
mov
lcall
jne
mov
push
push
cmp
pop
lcall
push
jne,pn
out
and
test
mov
das
int
jnp
jle
push
mull
mov
or
nop
jle
std
sub
sub
xlat
jle
xchg
jg
sub
in
mov
arpl
mov
xor
out
adc
gs
nop
fcompl
jnp
lock
adc
or
jmp
arpl
sahf
inc
in
in
jp
lret
xor
xchg
cwtl
mov
fstl
iret
mov
ja,pt
sbb
stos
bswap
pop
mov
inc
shll
cltd
dec
out
test
in
mov
cmpsl
jl
test
jp
jle
or
add
cltd
out
stc
and
sbb
lret
repnz
loop
into
ljmp
add
push
add
incl
add
jge
xor
mov
mov
or
shl
cld
inc
add
mov
jb
mov
and
fstps
orb
icebp
bound
aas
and
mov
pop
mov
cmp
mov
daa
pop
clc
or
lahf
push
xor
push
push
das
popa
fnstenv
subb
and
push
repz
sbb
mov
mov
sub
inc
testl
and
jmp
mov
jmp
mov
cmp
sbb
out
xor
and
outsl
ret
mov
dec
jb
mov
scas
pop
push
pop
jbe
in
popa
pop
not
test
les
ljmp
dec
sub
leave
dec
ret
enter
cmp
push
xchg
sbb
push
pop
push
add
out
sub
and
lds
jne
popf
push
mov
sar
and
out
adc
jl
mov
das
sbb
movsb
shrb
testl
xchg
les
int
jmp
jno
aaa
sub
mov
jae
shll
or
push
fisubrl
gs
add
pop
xor
shl
add
sub
cs
xchg
fstps
adc
pop
mov
sarb
jae
movsl
idiv
js
mov
in
sub
or
fnstcw
or
cltd
mov
adc
pop
inc
daa
or
push
push
ret
lahf
jle
andl
jb
pop
add
add
dec
xchg
js
sub
xor
xor
rcll
rcr
stc
mov
movsb
sub
adc
add
fisubrs
push
xor
divl
inc
push
add
sbb
mov
mov
loopne
and
or
sub
and
pop
jo
nop
cmp
fs
inc
sbb
lret
inc
sbb
mov
or
dec
xchg
jb
fimull
shl
int3
addr16
adc
mov
out
adc
cmp
test
cmp
ficoms
sub
daa
push
pop
add
outsb
addr16
jge
dec
loopne
ret
pop
sub
aas
add
enter
sub
and
jae
jbe
jp
not
in
adc
scas
dec
lods
sub
stos
sbb
push
rcrb
clc
sub
xchg
push
aad
jmp
sub
jmp
call
pop
mov
push
push
add
nop
adc
lahf
cmp
outsl
pop
jne
inc
rcrl
repnz
fisttps
movsl
push
les
mov
daa
call
rorb
mov
das
mov
xchg
popf
push
mov
jb
fs
ds
adcl
mov
and
loopne
pop
sti
xchg
inc
mov
lea
in
cli
repnz
orb
jmp
push
mov
fs
insb
xchg
pop
cli
popf
dec
xchg
jne
popf
mov
or
mov
and
idiv
lea
hlt
jne
gs
mov
pop
sub
jno
std
sti
adc
inc
pop
daa
outsb
push
pop
adc
or
mov
xor
jno
jno
repz
push
pop
cld
stos
scas
stos
popf
fistpll
jp
mov
ljmp
add
and
add
adc
fsubrs
ja
imul
xchg
sbb
cmp
out
add
lods
out
aam
scas
ret
pop
cmp
pop
push
mov
push
xchg
xor
add
cmp
jl
add
pop
jne
in
scas
mov
mov
out
push
adcb
dec
jns
cmp
pusha
enter
adc
push
sbb
and
es
movsl
pop
lret
frstor
data16
or
mov
repnz
aas
neg
movsl
mov
out
push
mov
xor
dec
pusha
lods
repz
clc
repz
pop
hlt
push
cmp
add
xor
mov
out
movsb
or
sub
fisttpl
adc
rep
cmpsb
jle
or
xlat
cmp
sub
pop
mov
outsb
mov
dec
jg
mov
loope
and
lahf
sarl
mov
add
pop
out
adc
daa
mov
shl
sub
icebp
movsl
add
add
fmull
sub
mov
push
jbe
push
repnz
fmuls
testl
cs
repz
testb
adc
sbb
shlb
or
das
push
pop
inc
pop
jb
imul
call
xchg
outsl
sub
cmc
das
roll
mov
sbb
adc
mov
clc
pop
daa
int3
jmp
ret
adc
repnz
data16
cwtl
xchg
lds
jmp
cmc
repz
adc
adc
inc
cmp
mov
das
jae
pushf
pop
loopne
dec
inc
xchg
jg
rcl
sub
fisttps
ror
enter
sbb
fwait
test
inc
jnp
mov
gs
sub
push
mov
and
mov
subb
jp
push
hlt
fadd
or
adc
and
mov
inc
add
in
js
or
fsubl
es
ss
mov
pop
fstp
add
fidivrs
jmp
popa
jo
or
lahf
in
sub
mov
or
pop
sub
mov
loop
and
lds
rcrl
or
dec
bound
or
mov
ret
dec
ret
mov
jmp
ja
jmp
sarb
xchg
add
xor
adc
ret
inc
jns
fidivs
push
je
cmpsb
mov
std
sbb
or
adc
stos
mov
push
push
bound
into
xor
mov
cmc
cmp
add
xor
adc
dec
test
das
add
inc
pop
pop
push
mov
jne
aaa
inc
or
add
xor
rolb
mov
lods
pop
stos
mov
inc
sub
mov
outsl
sub
movsb
dec
or
jbe
push
ret
fidivs
jb
in
dec
mov
mov
aas
add
push
in
push
pusha
sbb
sbb
mov
and
or
cmp
dec
test
sub
clc
pop
mov
pusha
pop
sub
aad
xor
and
and
and
in
mov
push
es
push
xor
pop
out
or
jl
out
fs
adc
mov
ljmp
sbb
andb
mov
sub
sub
aad
ljmp
xor
in
mov
ja
stos
sub
icebp
mov
psubsw
stc
ret
subl
cmpsb
and
dec
xor
cltd
cmp
orl
sub
xchg
das
mov
mov
xor
popa
popa
jmp
push
add
stc
das
mov
add
dec
inc
pop
dec
jns
pop
addr16
or
cwtl
loope
jmp
and
sbb
loopne
xor
mov
jb
xchg
jg
mov
xchg
lahf
mov
sahf
jne
pop
inc
fcmovnbe
aas
sub
xchg
shrl
shll
jmp
inc
sbb
jl
mov
std
mov
or
add
sbb
pop
cld
jmp
jge
loope
mov
mov
imul
push
fs
add
pop
not
fwait
jle
sbb
stos
xchg
sti
push
mov
inc
lds
pop
shl
js
test
lods
jmp
mov
add
fwait
shl
jle
sbb
add
mov
jmp
push
pop
test
cmpsl
add
add
dec
mov
mov
leave
or
add
cmp
push
and
dec
mov
fisubrs
adc
fndisi(8087
adc
mov
xor
lret
mov
test
dec
pop
call
pop
in
ror
add
test
dec
stos
jl
adc
shll
xlat
in
adc
mov
bound
pop
cmpb
xchg
add
sbb
add
divb
daa
loop
fsubl
mov
pop
mov
shr
add
test
dec
inc
decl
xchg
adc
jae
mov
sbbb
add
jne
jb
shrb
adc
or
jb
inc
dec
inc
negl
mov
test
adc
mov
mov
push
icebp
mov
sbb
xorb
xor
mov
lds
lods
push
adcb
scas
jge
dec
leave
repz
mov
sub
pop
xor
imul
adc
popf
repz
mul
push
outsl
add
sbb
shrb
es
sbb
or
add
out
out
push
hlt
lea
pop
dec
inc
xchg
push
fmulp
enter
mov
xor
ja
add
xor
adc
xor
imul
mov
sub
jne
or
jp
inc
ja
add
in
pop
shrl
mov
neg
out
mov
cmp
cmp
je
loopne
add
dec
jns
aaa
jno
adc
add
dec
adcl
into
add
mov
inc
xchg
add
push
clc
cmp
cwtl
adc
adc
or
dec
jb
dec
negl
or
sbb
aaa
mov
add
xchg
add
les
ret
add
cld
push
adc
xor
xor
fwait
cmp
data16
or
stos
cmp
fbld
sahf
imul
out
jl
leave
push
adc
pop
sbb
dec
adc
inc
andb
add
sbb
lahf
add
cmp
pop
add
sti
add
xchg
push
mov
push
xor
or
cwtl
sbb
cltd
inc
int
add
jl
mov
xor
or
dec
or
dec
aad
fidivrl
pop
adc
xchg
cmp
xor
rorl
or
add
cwtl
in
inc
stos
inc
pop
push
inc
add
clc
cmp
xor
mov
rcl
subb
or
or
rcll
mov
sub
pop
imul
or
and
cmp
lret
test
adc
pop
and
mov
popa
imul
mov
std
inc
xchg
scas
sbb
xor
mov
sbb
add
lret
dec
adc
jbe
dec
popf
sub
mov
mov
or
sbb
pop
inc
xchg
out
xor
aaa
rclb
or
mov
or
mov
xor
loopne
cmc
jge
jl
cld
flds
mov
or
icebp
notb
or
lahf
and
pusha
and
dec
dec
les
stc
inc
mov
dec
sbb
out
and
nop
mov
out
mov
lock
es
or
jb
and
cmp
xchg
cmpsb
adc
nop
mov
sub
and
rclb
add
dec
add
dec
add
adc
jo
jno
mov
inc
mov
push
popa
test
xchg
add
inc
mov
mov
mov
add
daa
adc
cmp
pusha
pushf
cld
call
jg
cmc
push
cwtl
dec
popf
shl
repnz
inc
sub
add
jmp
mov
mov
add
dec
add
mov
add
mov
rolb
mov
xor
sub
push
mov
xchg
dec
mov
xor
je
xchg
inc
notb
adc
pop
mov
stos
or
jmp
add
jp
push
jmp
shll
push
mov
neg
adc
imulb
lahf
add
push
mov
insb
push
xchg
neg
into
decl
repnz
xor
cli
insb
ds
out
lea
adc
push
mov
dec
out
and
push
dec
dec
or
je
leave
jbe
and
inc
arpl
into
jp
xor
andb
pop
mov
sub
mov
cld
loopne
inc
push
or
imul
jg
push
imul
jmp
call
inc
mov
or
push
mov
pop
adc
push
sub
pop
cmc
fcmovne
in
add
sahf
imul
add
dec
faddl
xchg
testb
jmp
in
push
pop
popf
imul
loope
call
add
adc
jmp
and
enter
js
je
mov
pop
sub
mov
dec
fs
sbb
push
pop
repnz
adc
xor
pop
popf
inc
bound
mov
adc
out
jge
ds
pop
test
jnp
xor
push
pop
insl
es
mov
insl
daa
mov
push
js
aas
fcoml
push
inc
inc
xor
and
jmp
mov
jns
or
and
push
add
jmp
inc
outsl
lahf
pop
dec
and
inc
and
sqrtps
outsl
arpl
mov
jmp
aam
movsl
mov
and
adc
push
dec
movsl
sub
add
pop
dec
pop
jbe
push
mov
xchg
push
pop
lock
push
outsl
dec
pop
ss
or
mov
or
inc
subb
jl
pusha
inc
mov
ss
ljmp
pop
mov
test
mov
or
push
dec
data16
bound
fmul
or
aaa
pop
ret
jns
jg
loop
pop
sbb
inc
add
add
ret
arpl
jp
inc
dec
shll
or
out
push
inc
xchg
inc
add
pop
mov
mov
add
fdivrl
enter
orb
xchg
or
pop
out
dec
and
add
jae
cmc
bound
ret
sub
stos
cld
jle
xorb
shrl
push
inc
shll
das
repz
sarb
loope
out
lret
imul
jmp
push
mov
sub
scas
and
js
adcb
or
lcall
fsubrs
pop
ret
test
insl
or
mov
dec
push
jge
jmp
aad
mov
out
cmp
inc
ljmp
lds
and
jg
or
jb
mov
adc
mov
push
or
xor
mov
pop
xchg
or
or
loopne
xchg
sbb
rcl
incb
fiaddl
pop
pop
call
sbb
icebp
sub
stos
sarb
mov
or
cmp
cmpsb
push
push
inc
sub
pop
inc
mov
aad
int3
lahf
enter
hlt
add
fisubs
push
push
mov
dec
mov
inc
cmc
rcl
dec
mov
clc
or
jmp
movsl
pop
xorl
mov
sbb
ret
sbb
jl
and
and
adc
fildl
mov
xorb
cwtl
imul
push
cmp
jo
sub
out
ja
and
adc
mov
add
lods
pop
shll
add
pop
fsubrs
xchg
out
add
inc
push
aaa
add
inc
jle
shl
mov
shll
inc
or
mov
in
jae
adc
rcrl
push
mov
mov
xlat
pop
stc
movsb
ja
cs
cmpsl
xor
push
lds
lea
jl
sub
subl
sahf
or
and
cmp
xchg
push
xchg
fisubrs
inc
add
cs
pop
and
repz
xor
iret
xchg
pop
mov
sbb
iret
xchg
loope
clc
pop
cmp
insl
and
mov
aas
popa
mov
add
cs
and
fsubp
leave
test
push
push
das
jecxz
adc
out
inc
push
dec
adc
jb
jbe
repz
add
fnstenv
adc
outsb
xchg
jns
pop
lds
faddl
xor
rcll
pop
sbb
add
adc
rcrb
pop
inc
sub
stos
inc
xchg
jmp
or
test
push
imul
and
mov
cld
pop
pop
or
insl
adc
jb
mov
sub
lahf
je
pop
xchg
das
dec
and
test
fmuls
lods
jmp
hlt
add
sbb
pop
out
push
scas
sub
jae
sub
add
addr16
cmpb
scas
pop
dec
add
xchg
mov
cltd
pop
inc
rcl
add
push
add
lds
movl
and
daa
add
stc
adc
popa
push
iret
cmp
push
mov
dec
sbb
xorb
push
icebp
mov
jmp
rclb
icebp
decb
and
pop
lods
in
sub
out
aaa
push
mov
cmp
mov
ss
das
xor
popa
sub
xor
add
xor
pop
push
mov
xor
inc
repnz
repz
inc
pop
adc
mov
loopne
lock
ret
mov
nop
ja
mov
jl
rcrb
lret
pop
int
push
xchg
and
add
mov
adc
dec
adc
jne,pn
fimuls
add
pop
aad
inc
xor
mov
sbb
jbe
jle
int3
push
sub
clc
loopne
scas
cmp
dec
inc
std
or
pop
out
and
jno
stos
in
or
pushw
xchg
and
push
mov
cli
call
push
or
or
dec
xchg
inc
push
sub
les
lahf
push
les
sahf
roll
jp
pop
sub
pop
stc
cs
push
loopne
inc
or
es
sbb
sub
sub
xchg
pop
in
sub
fdivl
pop
inc
loope
orb
add
xchg
adc
rolb
cmp
and
sbb
mov
outsl
pop
inc
mov
fldenv
fldl
and
popf
pusha
imul
cmp
jnp
inc
jmp
mov
out
inc
iret
rorb
sub
mov
stos
xor
gs
icebp
mov
mov
jle
mov
xchg
rolb
js
nop
dec
xlat
je
xchg
adc
sub
mov
adc
add
mov
xor
fwait
in
add
pop
push
jbe
lret
mov
cmp
das
pop
fsubs
xchg
sub
stos
pop
xchg
jmp
xchg
and
lret
push
mov
stc
into
pusha
in
out
pop
sbb
push
inc
mov
popf
and
xor
movsl
mov
add
subl
add
popa
test
sub
pop
sub
and
cmc
outsl
mov
mov
jecxz
mov
sub
push
add
scas
inc
jns
push
push
push
popa
pop
pop
sub
lock
adc
mov
test
pop
jmp
scas
js
jmp
nop
cmc
mov
movsl
dec
xchg
push
adc
cmp
insb
pop
pop
mov
mov
mov
rcrb
mov
cmp
cs
aaa
and
stos
mov
dec
xchg
push
mov
adc
arpl
stc
sbb
or
push
xchg
sub
sub
inc
or
mov
jmp
mov
or
and
stc
js
jb
and
call
mov
xchg
add
fimull
xlat
cmp
jle
loope
cmp
mov
jnp
jne
or
ja
mov
jle
sarb
stc
adc
daa
outsb
xorl
or
dec
xchg
fs
push
pushf
add
pop
jae
jmp
jge
cmp
adc
out
jp
sbb
dec
adcb
and
dec
xor
pop
add
and
mov
ss
jmp
adc
mov
scas
rorb
mov
sub
sub
add
stc
xor
sub
lods
lods
cmp
xchg
out
out
std
test
or
sbb
sub
add
out
test
xchg
adc
mov
add
inc
shlb
pop
fldenv
mov
mov
pop
push
pop
lock
shr
push
enter
mov
push
into
mov
push
jge
jge
loop
lds
push
rolb
daa
lods
xchg
mov
xchg
cmp
pop
popa
dec
add
mov
xchg
pop
mov
or
popa
in
or
pop
sub
sbb
stos
inc
push
mov
js
inc
cwtl
cmc
leave
daa
orl
mov
and
in
push
call
or
push
icebp
push
push
cs
es
shll
loope
mov
out
or
stc
add
sub
or
or
inc
loopne
adc
jbe
mov
or
sub
in
cmp
cs
loopne
rolb
cmp
add
jg
push
jo
movsl
or
test
mov
shr
or
ret
pop
stos
xchg
xlat
mov
out
or
adc
pop
xchg
mov
jg
mov
nop
sbb
lods
xor
loope
call
xchg
push
pop
icebp
test
inc
jo
ficoms
out
shlb
dec
or
jnp
xor
push
pop
jl
jnp
adc
inc
mov
xor
xor
adc
jecxz
push
xlat
adc
pop
add
sbb
pushf
outsb
or
lock
pop
jecxz
xchg
add
dec
push
into
jmp
inc
pusha
adc
int
rorl
push
cmpsb
test
push
and
push
mov
and
pop
sub
add
inc
inc
sahf
xchg
cmp
dec
push
jns
inc
or
cwtl
xchg
pop
and
sub
mov
mov
aaa
dec
in
pop
jno
lds
cmp
dec
negl
pop
leave
push
pop
sbb
pop
loope
mov
add
push
inc
mov
or
jno
cmp
nop
loopne
mov
dec
repnz
out
add
dec
and
pop
sub
xchg
je
push
repnz
leave
fiadds
js
pusha
in
insb
inc
push
cmp
sbb
jne
mov
add
or
jl
ljmp
adc
mov
mov
daa
and
inc
jo
sbb
fmuls
jnp
shr
repnz
add
and
fstpt
in
add
or
mov
sub
in
pop
inc
push
add
in
inc
pop
pop
fbstp
ljmp
mov
cmp
mov
or
xor
or
or
shlb
xchg
sahf
mov
bound
cs
insb
cmpsb
pusha
mov
mov
and
mov
out
jmp
pushl
in
sar
jo
pop
sbb
int
mov
jae
lahf
into
std
fdiv
add
cmpsl
popa
and
pop
sub
xchg
and
test
dec
movsb
mov
sub
jmp
pop
in
xchg
iret
rorl
mov
out
add
dec
add
jmp
jno
fs
inc
scas
cmp
imul
sub
das
clc
adc
inc
push
rorb
call
stos
mov
inc
mov
or
xchg
inc
testb
jmp
inc
sti
sbb
dec
xor
pop
add
dec
xor
jnp
jmp
cmp
int3
in
or
add
dec
pop
clc
push
mov
iret
dec
inc
add
lods
int3
sbb
push
in
pop
jmp
inc
push
push
mov
push
stos
and
add
ret
mov
mov
jbe
sbb
sub
jmp
jo
add
xor
push
mov
xchg
fdivrl
imull
imul
rcrb
sbbl
and
xchg
andb
ja
je
push
dec
es
nop
push
dec
mov
jns
push
dec
adc
cmp
stc
inc
add
push
push
xor
mov
inc
into
daa
mov
pop
push
movb
enter
or
ja
push
push
inc
insl
adc
test
add
mov
fisttpl
cld
sub
add
mov
mov
movsl
add
sub
jmp
ljmp
movsb
sbb
pop
jno
jae
push
imul
jg
stos
push
cmp
inc
or
jle
ds
jno,pt
sub
xchg
fwait
pop
clc
pop
pop
adcb
sbb
loop
sub
mov
nop
lods
pop
scas
mov
cld
pop
ljmp
gs
ja
test
mull
scas
hlt
in
in
jmp
xor
stos
pop
push
out
sub
jmp
inc
rclb
das
or
jg
arpl
adc
pusha
add
movsl
adcb
xchg
scas
ja
sbb
add
xchg
push
or
lahf
jnp
dec
les
inc
add
roll
daa
test
xchg
push
jmp
inc
xchg
jne
mov
daa
mov
adc
push
jg
imul
inc
dec
sti
xchg
adc
rolb
daa
mov
jbe,pn
mov
cmp
xchg
aas
or
repz
add
jbe
imul
push
sarb
outsb
or
mov
inc
and
pop
adc
add
adcb
jmp
push
sti
leave
outsb
daa
jge
dec
dec
mov
push
add
jge
mov
rolb
ret
jnp
xchg
cmp
js
push
icebp
lcall
dec
mov
cmc
pop
xchg
ljmp
das
std
xchg
stc
mov
sub
inc
xchg
je
jg
xor
and
andl
jecxz
sbb
in
and
and
fnstsw
adc
mov
mov
mov
push
or
pop
sysexit
pop
jmp
mov
sbb
subb
insl
repz
addr16
mov
cmp
in
aaa
divps
cmp
adc
mov
cli
lea
sbb
adc
insl
jne
ds
pop
or
enter
lods
lcall
sti
jl
sub
lock
and
testb
pop
xchg
jp
inc
mov
sbb
cmpsb
outsl
leave
jecxz
xor
inc
movsb
cmp
mov
mov
lcall
pop
jne,pn
das
movsl
mov
pop
mov
into
loop
mov
pop
pop
xor
lret
test
lcall
mov
xor
adc
adc
inc
cs
sbb
cmp
ret
fstps
xor
xor
mulb
add
aad
mov
fiaddl
call
mov
pop
or
mov
sub
or
xor
rorb
arpl
out
int3
test
cmp
adc
cwtl
adc
imul
and
and
std
xchg
jno
adc
and
enter
call
stos
and
add
addr16
add
pop
pop
xchg
pop
push
xor
sbb
mov
loope
pop
xchg
movsb
or
add
sbbl
add
call
sbb
mov
dec
push
in
push
insb
in
push
add
or
dec
xchg
mov
xchg
pusha
clc
jb
push
pop
movl
inc
jnp
adc
push
insl
xchg
sub
je
jno
hlt
mov
cs
ja
or
inc
loopne
iret
xorb
in
dec
xlat
loopne
pop
loopne
xchg
add
cli
jmp
inc
movb
xorb
sub
inc
cld
inc
jmp
in
jp
orl
pop
rcll
cld
xor
jl
test
loope
or
jp
mov
xchg
push
jmp
cmc
mov
and
and
lods
lahf
cmp
xor
jbe
mov
test
or
xlat
xchg
push
sub
xor
in
adc
pusha
repz
ja
pop
adc
jb
mov
stos
jmp
push
negl
mov
mov
jmp
aad
dec
ljmp
mov
dec
jecxz
int
xor
mov
in
xchg
outsl
or
pop
stos
test
and
sahf
mov
xchg
inc
clc
jl
and
push
jg
push
jecxz
test
lock
push
out
add
stos
shlb
fwait
push
sub
mov
mul
mov
mov
jle
imul
nop
movsl
popf
or
sub
pop
pop
lret
scas
sahf
sub
xor
rcrl
push
pop
fildl
hlt
test
add
sub
jmp
jmp
xchg
lea
fadds
sub
jb
mov
mov
xchg
sbb
sbb
gs
sbb
cmp
xchg
xor
add
cs
mov
jmp
adc
outsb
loopne
cltd
inc
stc
push
div
mov
mov
pop
enter
stc
imul
sbb
mov
frstor
cmp
in
pop
mov
add
jb
imul
add
test
pusha
mov
cs
test
clc
jmp
dec
imul
dec
cmp
sbb
out
inc
sbb
mov
mov
std
jno
es
adc
push
push
sub
lods
into
sahf
mov
popf
aam
cli
jbe
mov
mov
les
push
push
dec
push
add
jno
adc
movsb
xchg
mov
rclb
add
xchg
add
jmp
outsl
ret
test
std
popa
push
dec
jns
and
stos
cmpb
outsb
dec
insl
jnp
mov
repz
mov
mov
push
jmp
fisubs
push
pop
sarl
add
call
dec
pusha
xchg
sub
aaa
pop
callw
mov
dec
out
dec
push
sub
or
cmp
cmc
out
xor
or
sub
cli
mov
sbb
pop
int3
mov
and
and
inc
jmp
mov
sub
rolb
out
inc
ror
mov
xor
imul
ljmp
outsb
adc
pop
insl
mov
jno
jae
daa
dec
add
mov
cmp
push
stc
xlat
jnp
xchg
jg
jecxz
movsb
sub
push
push
int
dec
cwtl
cltd
jge
cmp
orl
aam
push
push
pop
inc
jl
jnp
mov
push
movsl
mov
push
in
mov
add
sub
out
push
cmc
in
lret
adcb
add
imul
add
fs
pop
ret
pop
test
mov
jmp
into
mov
icebp
scas
mov
testl
fistl
mov
push
insb
jecxz
xor
push
cli
sub
jmp
aam
adc
dec
sar
sbb
data16
mov
lahf
cli
lods
dec
and
mull
int3
in
sbb
dec
insl
aad
std
aad
mov
pusha
push
sbb
dec
xchg
dec
add
jge
jge
jnp
jo
push
popf
add
xchg
add
add
mov
cmp
sub
cmp
adc
push
icebp
lahf
push
or
test
add
and
test
je
ret
call
dec
les
mov
adc
lds
mov
push
lahf
rcll
stc
out
inc
jmp
push
sbb
cmc
dec
jg
sub
or
insb
jno
sbbl
int
or
sbb
inc
cmp
push
push
sub
sub
jmp
das
mov
incb
and
cmpb
pop
adc
cmpsl
and
jg
dec
inc
jmp
xor
push
out
and
aam
mov
jo
xor
pusha
cmp
dec
add
push
inc
ds
pop
movsb
arpl
mov
mov
mov
xchg
jno
cmp
jmp
dec
sbb
sbb
add
testb
cmpb
or
outsl
push
stc
cmp
or
jne
loope
mov
dec
inc
sbb
inc
out
and
sub
adc
shrl
out
gs
dec
loope
jle
dec
das
mov
or
push
add
mov
adc
jmp
mov
das
stos
sub
xchg
cmpl
fildl
roll
ret
jns
inc
jmp
sti
mov
out
gs
sbb
es
movl
jecxz
daa
fnsave
mov
add
dec
aas
pop
sub
adc
mov
push
push
jge
dec
mov
fdivs
sbb
out
and
sub
cwtl
sbb
pop
mov
xor
ret
jl
rclb
cwtl
ljmp
ficoml
lds
push
dec
in
dec
mov
enter
jmp
or
pop
and
dec
sahf
sahf
mov
hlt
cmp
lods
out
add
mov
push
inc
xor
xor
ja,pn
sub
mov
sub
aam
or
jno
aas
rorl
fimuls
not
inc
pop
orb
jge
sub
faddp
push
call
jmp
xchg
xchg
xchg
inc
and
add
inc
pop
add
ret
and
xorb
dec
jno
add
js
loope
mov
pop
jmp
in
add
in
pop
mov
sub
shlb
sub
or
movsb
xchg
mov
mov
push
xchg
pusha
les
add
push
mov
xor
test
sub
dec
or
ss
push
cli
pop
pop
mov
mov
movsl
adc
adc
adc
jp
mov
out
sbb
or
push
aas
jmp
push
pop
arpl
dec
or
xlat
xor
fnstenv
cld
ljmp
loopne
push
pop
mov
popa
inc
pop
fcomps
add
loop
int3
fistpll
fsubrs
repnz
add
das
inc
loop
int
lds
daa
lret
xchg
xchg
pop
decb
repz
fimull
sbb
sub
ds
inc
pop
inc
dec
loop
ljmp
push
sbb
mov
jns
xchg
mov
push
mov
shl
inc
xchg
inc
in
ret
add
ret
lods
xchg
mov
dec
lods
aaa
mov
cltd
adc
or
outsl
test
pop
loope
sub
mov
push
repnz
dec
dec
push
inc
mov
mov
sub
mov
repnz
jmp
movsb
leave
shrb
pop
faddl
mov
lds
iret
pop
xchg
and
inc
aam
sarb
dec
jmp
mov
cmpb
ja
leave
stc
xchg
sbb
sti
pop
aaa
add
fisubrs
xor
mov
pop
xchg
add
les
adc
outsl
xor
sub
pop
enter
sbbl
movsb
nop
and
cwtl
jecxz
add
dec
or
gs
div
jge
or
pop
movhps
sbb
dec
in
mov
push
mov
xor
mov
push
cmpb
or
icebp
scas
and
insl
or
xchg
in
add
mov
movsb
sbb
es
xor
mov
imul
jb
addr16
mov
imul
dec
jno
js
jl
add
lahf
xor
cmp
and
sbb
pop
addr16
sub
je
nopl
fmull
jmp
xor
xchg
cwtl
adc
sbb
sub
sub
fwait
cwtl
in
xor
adc
sub
push
leave
add
dec
insl
imul
sub
or
mov
test
jmp
push
xor
adc
add
pusha
mov
xor
jo
test
scas
xor
cmp
shl
inc
mov
push
add
dec
insl
add
and
ret
adc
adc
push
cwtl
push
add
add
inc
or
jmp
mov
ja
pop
push
cwtl
jo
xchg
call
pop
mov
loopne
xor
repz
call
and
add
or
hlt
mov
xchg
sbb
aad
stos
mov
and
sarl
js
call
dec
pop
sbb
jge
jg
pop
inc
or
ljmp
pushf
push
pop
hlt
bound
mov
movsl
jne
idivb
add
fcoml
das
loopne
ljmp
daa
je
add
jp
pop
cli
je
inc
dec
jmp
and
xchg
imul
mov
cmc
mov
add
std
or
inc
sub
add
mov
cld
mov
mov
dec
fistps
in
repnz
push
icebp
inc
or
push
jbe
push
push
daa
sti
pop
out
movb
cld
or
out
add
jge
mov
mov
in
fdivrp
push
or
dec
adc
sar
mov
ljmp
mov
xchg
repz
das
cmp
sti
xchg
fstpl
mov
ficoml
add
pusha
notl
cmp
out
mov
push
test
mulb
das
push
aad
mov
repnz
or
pushf
add
mov
cmpsb
sbb
mov
rclb
lock
lods
pop
sub
cltd
xchg
mov
scas
and
sub
mov
int
daa
testl
sub
pop
imul
jmp
add
adc
and
mov
lods
in
push
mov
add
xor
loopne
outsl
inc
xor
enter
out
cmp
imul
jo
insl
push
sub
ss
lds
xor
call
subb
pop
cwtl
jl
or
adc
in
pop
inc
cmp
add
pop
jno
ja
sbb
add
cld
iret
lret
mov
in
jmp
addr16
inc
sbb
push
in
jecxz
roll
imul
add
gs
sbb
adc
cwtl
in
sahf
pop
mov
pusha
pushf
lods
add
dec
push
jmp
std
rcrb
cmpsb
lock
push
inc
push
push
inc
movsl
je
dec
xor
xor
pop
pushf
jnp
pop
cmp
es
es
mov
outsl
and
es
mov
test
or
push
hlt
aam
dec
aas
jbe
nop
cltd
dec
xchg
or
add
pushf
push
notb
sbb
orb
jmp
popf
fisubrl
test
add
mov
jmp
in
pop
pop
cs
ret
ds
in
shrb
adc
incl
loopne
out
mov
lea
xor
repz
jns
lahf
fdivr
imul
jp
adc
cmp
pop
push
daa
mov
cwtl
lock
test
iret
or
push
xor
cmp
push
jne
adcl
dec
jo
xchg
xlat
cmp
mov
push
jbe
movsb
mov
ja
xor
das
mov
and
and
push
jnp
mov
test
push
ret
ret
outsl
add
xor
pop
add
jmp
push
jmp
pop
insl
and
sub
ficomps
dec
and
sub
scas
cltd
leave
sarb
mov
ja
cmp
push
pop
ret
push
jns
inc
jmp
daa
xlat
sbbb
jg
sub
cmp
xor
xor
stos
inc
jns
ja
dec
mov
jne
in
dec
es
add
aas
sub
sbb
aas
cmp
jns
cmp
jmp
mov
orb
scas
dec
sub
in
or
cmp
fwait
sbb
cmpsb
add
sub
icebp
sarl
jb
out
sarb
lss
movsl
cmp
stos
inc
fildl
testb
int
add
loopne
cmpb
daa
pushf
in
push
pop
out
out
or
jae
dec
jno
arpl
push
aad
xchg
sti
out
daa
sub
push
fcomi
movsl
ja
inc
daa
cli
shl
cmp
not
jp
cmp
xor
divl
std
or
cld
fwait
in
and
sbb
pop
imul
pop
add
or
movsl
inc
or
sub
sub
fwait
pop
lahf
aaa
notl
xchg
sub
ljmp
testl
inc
jp
xor
lret
jbe
or
sar
push
shlb
sbb
icebp
je
push
pop
stos
adcb
add
fimull
pop
push
push
sbbb
mov
push
push
or
xchg
pushl
dec
mov
ja
loopne
pop
dec
test
xor
dec
scas
push
add
sar
inc
and
test
out
add
sar
loope
fdivs
ljmp
es
div
xchg
sub
pop
adc
push
lea
fwait
xor
popf
and
jbe
jbe
add
ljmp
mov
das
push
loopne
pop
push
mov
shr
addb
imul
inc
cmp
push
orps
mov
lahf
add
test
cs
fadds
hlt
jmp
pop
and
inc
arpl
fs
fwait
push
jne
dec
push
inc
ret
or
and
sub
cmp
adc
js
movsb
sub
je
mov
dec
inc
push
add
inc
inc
arpl
inc
cwtl
jno
mov
bound
mul
adc
add
pop
sub
pop
pusha
push
push
add
lahf
js
add
sbb
cmp
dec
gs
jg
call
gs
mov
repnz
dec
pop
mov
lahf
shrb
ja
dec
aad
sub
imul
mov
mov
jmp
xor
cltd
aas
sub
mov
flds
add
ljmp
cmp
shrl
pop
inc
adc
xor
dec
stos
iret
sbb
jae
xor
lock
or
push
dec
mov
jmp
icebp
popf
faddl
call
add
mov
popf
jns
add
mov
call
sti
pop
jno
shrl
mov
mov
or
cltd
cmpsb
sub
pop
sti
inc
push
sub
cmp
dec
les
cs
mov
push
push
mov
mov
jecxz
jbe
in
xchg
xor
cltd
add
inc
cmpb
movsl
je
mov
lods
jbe
pop
dec
pop
stos
aam
loope
sub
mov
xor
mov
inc
nop
imul
imul
inc
outsl
lret
lock
cmp
leave
cs
daa
lret
dec
push
out
add
lds
faddp
xor
fdivr
or
ljmp
cmp
xchg
mov
sbb
jmp
dec
nop
or
out
pusha
dec
out
adc
xchg
jo
jbe
add
mov
jmp
and
or
inc
sar
testl
fstps
fists
mov
jg
ret
mov
rcll
mov
add
rcrl
inc
dec
jmp
fsubrl
clc
add
shl
pusha
lods
push
fcoms
jmp
or
inc
sbb
sbb
mov
aas
xchg
imul
or
sub
fucomi
pop
cs
pop
imul
imull
mov
mov
jecxz
jbe
jge
inc
add
adc
es
loop
pop
xchg
inc
je
ret
cmp
dec
xor
stos
mov
test
and
push
sbb
call
mov
out
add
jmp
ror
je
test
mov
sub
adc
push
les
inc
push
mov
or
movsl
imul
pusha
inc
and
popa
pop
xor
loopne
sbb
ret
add
movsb
cmp
inc
xchg
aam
pop
xchg
mov
dec
pop
and
mov
fsubrl
add
je
xor
loopne
push
bound
push
push
nop
xor
pop
push
loopne,pn
xchg
scas
mov
xor
rolb
add
push
sub
pop
cld
xor
cmp
pop
jmp
ljmp
mov
add
mov
jp
stos
xchg
clc
lods
xor
lods
sub
pop
push
mov
mov
adc
aam
test
add
jae
xlat
sbb
scas
lret
xor
lahf
and
add
push
mov
lods
sub
in
fnstenv
aam
push
and
mov
inc
lds
test
pushf
pop
enter
cwtl
fwait
xchg
fs
daa
and
fsubrl
pop
jmp
in
pusha
xchg
add
sub
aas
jmp
cmp
add
bound
fdivrs
pop
test
or
inc
not
frstor
iret
pop
pop
adc
dec
int3
push
test
or
cmp
or
hlt
mov
jne
sahf
js
dec
push
xchg
fcoms
xlat
xor
ret
and
and
cmp
into
push
add
push
rorl
icebp
mov
xchg
movl
rol
fld
rolb
xor
jge
enter
ficoms
sbb
outsb
push
or
jp
add
push
add
push
mov
and
inc
sub
repz
out
pop
fisttps
xor
add
fisttps
mov
cli
inc
xchg
test
add
lods
xor
add
inc
stos
pop
pop
jno
and
push
dec
in
adc
add
outsb
xor
mov
add
and
loope
orb
adc
and
xchg
adc
aad
mov
xor
or
inc
push
push
jmp
cwtl
fimuls
jnp
ljmp
jmp
dec
sti
xchg
sub
jle
and
mov
mov
pop
mov
jmp
lds
mov
adc
int3
mov
sub
fadd
pusha
in
mov
mov
adc
negl
mov
jmp
push
pop
gs
test
push
adc
dec
xor
lret
cmpsl
push
imul
orb
lds
ret
fildll
mov
clc
xor
fwait
jmp
add
pop
out
ss
inc
das
sub
push
jp
sbbl
fldcw
insl
push
and
fists
test
shl
sub
jl
xor
stc
push
in
and
pusha
or
ret
or
sub
subl
cmp
cmc
sub
xorl
pop
sub
adc
leave
inc
xchg
lods
push
rcrl
sub
out
xchg
ljmp
cltd
mov
ja
orl
sub
outsb
push
pop
jb
dec
cli
lret
and
loope
push
cmp
out
lcall
les
push
pop
adcl
cmp
jmp
pop
or
pop
imul
out
shlb
jmp
push
leave
cmp
xchg
test
dec
cltd
data16
in
adc
sbb
cmpl
add
clc
lret
dec
ds
or
adc
mov
mov
out
xor
xchg
insl
ljmp
popf
jmp
cli
add
movsb
shl
add
leave
xor
mov
inc
push
js
jle
rol
loope
iret
mov
add
das
sub
push
ja
add
xor
pop
sbb
pop
jl
push
xchg
testl
mov
dec
fdivr
pop
inc
loope
daa
dec
cmp
mov
das
inc
mov
shlb
xchg
cld
mov
jns
rol
and
rorb
mov
std
and
mov
movsb
or
pop
daa
pop
push
lods
mov
mov
xor
lret
cld
add
lods
movsl
adc
mov
pop
add
repz
mov
pop
push
inc
jo
push
push
push
pop
pop
not
or
xchg
das
pop
cwtl
add
sbb
insb
xor
repnz
dec
and
pusha
mov
mov
sbb
sub
inc
push
int3
out
add
dec
dec
jmp
test
or
sti
jmp
xchg
add
in
mov
loopne
pop
pop
cmc
iret
pop
xor
cmp
ja
jl
mov
jbe
inc
das
outsb
jecxz
adc
test
cs
sub
pop
fcmovnbe
das
ret
cltd
mov
fcomps
jb
sbb
sub
sub
add
xlat
push
mov
cwtl
in
push
in
nop
add
xchg
pop
add
fildll
jmp
push
out
pop
test
shr
or
and
and
mov
add
pop
sub
bound
clc
adc
jg
js
cmovle
in
test
or
mov
mov
lret
nop
sbb
jmp
daa
and
orb
in
jb
xchg
scas
pop
jns
push
ja
int3
inc
xor
push
xchg
pop
imul
xor
adc
es
andb
fs
call
mov
je
jmp
fwait
adc
scas
push
fldcw
adc
xor
clc
jb
sub
xor
pop
cmp
test
lods
or
mov
pop
add
sub
push
jmp
aaa
stos
lret
mov
or
pop
enter
dec
cld
rorl
pop
and
frstor
mov
push
loopne
dec
loop
mov
stos
cmp
addr16
xchg
pop
shrb
mov
cli
fucom
in
cmp
mov
mov
or
add
push
orb
sub
add
scas
test
in
aas
mov
push
push
outsl
cmpb
xor
pop
je
sbb
cmp
pop
orb
inc
push
xor
cli
adc
js
jge
outsl
xor
jg
push
orb
cld
ss
push
in
adc
pushf
leave
inc
and
add
dec
add
adc
xchg
sti
sbb
push
push
addl
inc
rcrb
push
sub
mov
dec
inc
mov
mov
sbb
ret
rol
testb
push
push
add
add
insb
and
jmp
dec
or
sbb
les
jae
lods
pop
imul
dec
pop
pop
ret
xor
sbb
test
mov
sub
lret
add
out
jb
popf
adc
adc
loop
popa
push
aam
iret
sub
orb
je
push
cmp
cmc
lcall
fs
repnz
das
sub
or
dec
xor
add
ret
lea
and
incb
cmp
shlb
sarl
push
clc
pushf
jne
add
rolb
cmc
mov
pmaxsw
icebp
add
jmp
out
hlt
add
push
push
movsl
cli
push
dec
jg
cmpsl
aas
test
outsb
imul
in
shrl
add
int3
push
inc
dec
lahf
clc
call
mov
add
cli
adc
or
popa
loope
int3
bound
xor
xchg
je
std
pop
pop
cmpl
mov
jno
lods
cmpsb
aad
and
jbe
and
push
sbb
cmp
xchg
jge
aas
mov
jg
movsb
cmp
in
lahf
gs
or
mov
daa
xor
js
pop
shl
shr
add
push
xchg
xchg
pop
ror
xchg
adc
sub
aas
stc
mov
push
mov
not
in
mov
inc
cmp
shll
test
outsb
pop
inc
jmp
rcrb
adc
in
mov
mov
adc
sbb
arpl
outsl
sub
mov
jmp
ret
cs
idivl
jns
mov
pop
inc
dec
mov
mov
and
shlb
sbb
mov
pop
push
aad
test
je
loop
pop
mov
fsubrs
dec
add
imul
sbb
popf
rclb
dec
jg
pop
dec
adc
jmp
adc
cmp
push
xchg
add
dec
jne
xor
mov
pop
dec
adcb
stos
sbb
stc
jp
pop
xchg
dec
sub
jmp
add
aad
imul
sub
in
add
dec
fmuls
sbb
ljmp
clc
adc
pop
neg
notl
xor
cld
add
pusha
sub
lret
out
movsb
fsub
xchg
push
insb
das
push
push
roll
shl
pop
push
adc
mov
mov
add
push
mov
mov
add
data16
scas
out
pop
xchg
arpl
jnp
es
lds
lret
shlb
sti
test
inc
sbb
ds
or
add
mov
aam
adc
int3
xchg
insb
add
pop
adc
ljmp
or
mov
in
lcall
mov
rcll
mov
dec
and
xor
in
add
sub
push
into
divb
enter
ret
jae
and
outsb
or
push
add
adc
xor
cmp
call
pusha
or
or
inc
popa
sub
and
rcrb
pop
cltd
sarl
imul
xchg
add
pop
jmp
adc
repnz
inc
xor
mov
out
ja
cwtl
sbb
add
push
mov
add
jecxz
sbb
jnp
mov
stos
xor
push
jg
dec
adc
push
push
cmp
jmp
lods
rorl
pop
lret
add
mov
sub
pop
in
outsl
lds
and
lea
jp
bound
mov
pop
add
inc
les
or
repnz
rorb
jo
mov
sub
xchg
std
mov
das
jmp
or
mov
clc
insl
cmc
imulb
lcall
cmc
push
pop
test
test
inc
and
and
jecxz
mov
imul
xchg
dec
xchg
mov
mov
test
mov
sub
cmp
xor
dec
push
jmp
mov
mov
inc
pusha
fwait
imul
mov
sbbl
inc
cmpsb
adc
sub
add
mov
xor
jge
mov
xchg
outsb
mov
daa
inc
repz
out
jae
lret
add
pushf
or
pop
mov
mov
jmp
jecxz
jnp
popa
mov
neg
repz
pop
mov
out
psubusb
into
adc
cmp
sbbb
add
xchg
pop
cld
xor
pop
push
pop
or
pinsrw
fiaddl
jecxz
sbb
push
sahf
mov
pop
and
nop
push
push
les
das
inc
pop
mov
gs
pop
cmc
in
repz
fucomi
xlat
mov
shr
push
test
push
dec
rolb
shl
pop
int3
mov
cmp
mov
and
cmp
das
mov
push
sbb
jmp
add
adc
xor
cli
xchg
or
call
add
sahf
add
add
iret
mov
jo
add
sub
aad
mov
mov
fildll
push
mov
xor
pop
dec
jnp
rclb
jge
or
push
xchg
adc
ljmp
sub
aaa
mov
xchg
cmc
push
je
add
fidivs
jne
adc
add
and
in
lea
pop
mov
add
sub
out
repnz
andb
pop
mov
pop
sub
iret
ret
das
inc
cmpsb
push
int
sub
or
addr16
dec
and
pop
clc
inc
mov
clc
jmp
ljmp
inc
jmp
popa
hlt
xchg
push
lret
stos
fiadds
sti
mov
rolb
dec
and
pop
cmp
jg
cs
lods
cli
sub
out
unpcklps
insl
orb
or
testb
dec
clc
sub
pop
push
sbbb
mov
push
jge
repz
and
sbb
cmc
les
push
cmp
jge
add
xor
inc
jae
imul
inc
sahf
sti
mov
ljmp
jmp
inc
es
inc
test
popf
pop
sub
in
sbb
ret
sub
push
mov
or
xor
pop
inc
cwtl
xor
ss
jo
pop
std
xor
push
pop
ret
inc
or
mov
nop
dec
sahf
push
iret
out
shrl
mov
adc
and
cmp
in
stc
sbb
push
push
push
inc
fnstenv
in
inc
jmp
sub
divb
inc
push
lods
mov
adc
xchg
jne
sub
or
jmp
or
js
jns
adc
lods
sarb
dec
mov
mov
test
mov
lea
addb
fsubl
icebp
sub
cmp
push
call
popa
mov
out
adc
inc
or
and
push
add
fwait
sub
pop
mov
push
xchg
jle
rcrb
mov
lea
inc
cmp
daa
inc
mov
jle
mov
and
mov
lds
inc
jmp
jae
out
out
vpaddd
cmp
nop
lret
mov
add
sub
sbb
inc
add
and
adc
ds
je
push
loopne
dec
jecxz
jne
jmp
cmp
mov
add
fnstcw
mov
fdivrl
xchg
cmp
mov
sbb
nop
flds
pop
push
pusha
jmpw
mov
imul
js
sahf
xchg
shlb
push
cltd
pop
mov
mov
inc
out
pop
pop
push
push
movsl
pop
enter
sub
adc
push
add
popa
arpl
jp
fldl
lret
pop
cmpsb
bound
out
or
pop
pusha
andl
out
xchg
icebp
push
mov
jle
mov
mov
adc
adcb
xchg
push
and
push
pop
and
inc
adc
push
push
add
fisttpl
not
ds
pop
adc
add
inc
push
aad
lods
leave
pushf
pop
inc
data16
pop
add
add
jns
js
adc
aad
insl
scas
jne
out
ficoml
add
inc
push
cmp
xchg
push
add
pop
orl
je
or
jo
and
mov
sbb
sub
jmp
jp
loopne
pop
and
cmp
or
add
adc
mov
push
and
jge
mov
fiaddl
divb
imul
xchg
push
or
imulb
push
xchg
outsb
mov
lret
orb
dec
jmp
repz
mov
shl
cmpsl
fldpi
jae
subb
fistpll
in
or
pop
imul
xor
and
sub
cmp
test
in
add
lret
add
adc
inc
fildl
or
and
hlt
icebp
sub
dec
and
mov
lock
dec
mov
pop
add
xor
rdmsr
ds
xchg
pop
jl
adc
gs
pop
ljmp
cmp
jno
lret
cltd
stos
push
es
loope
jns
add
mov
adc
xor
mov
jp
sbb
push
pop
outsb
adc
adc
xorb
inc
xor
fs
adc
xor
ds
push
push
stc
mov
sbb
jo
add
add
or
sbb
decb
xchg
lods
fcmovb
jmp
dec
aad
mov
js
pop
push
cmpsb
ret
mov
mov
movsl
and
mov
xchg
out
mov
adc
mov
daa
mov
sbb
push
pop
cmc
fsts
or
mov
sub
add
dec
add
and
dec
adc
mov
nop
popf
outsb
xor
fcmovne
aas
into
jmp
mov
jmp
pop
rorl
dec
and
jb
cmpb
dec
jmp
inc
push
sarl
xchg
outsl
and
adc
sbb
mov
mov
adc
xchg
jo
mov
cmpsb
not
mov
sub
fcoml
rorb
push
out
add
not
mov
cs
js
lcall
movsb
jbe
in
andl
int3
inc
jmp
or
push
push
cmc
out
lods
jo
cli
push
and
add
mov
outsb
mov
sub
mov
dec
shl
inc
mov
push
mov
jmp
je
push
int3
inc
and
mov
cs
in
xchg
loop
push
je
xchg
push
dec
and
sub
push
sbb
dec
sbb
xor
push
std
mov
inc
xchg
mov
scas
addr16
inc
xor
fbld
out
jecxz
jns
mov
and
pop
das
mov
push
push
movb
popf
test
repz
pop
push
or
or
insl
and
inc
ret
xor
adc
test
sbb
sbb
pop
xor
push
push
dec
sti
sub
sbb
or
les
push
push
or
or
arpl
dec
lods
add
dec
sbb
cmp
xchg
mov
ss
adc
enter
fucomp
in
xorb
push
inc
in
xlat
mov
push
mov
add
push
xor
xor
sbb
loope
mov
jge
out
and
out
leave
nop
arpl
cs
xor
sbb
aad
cwtl
int3
sub
and
mov
xchg
pop
inc
in
ret
dec
insl
add
ljmp
hlt
and
xchg
sti
shll
fidivs
js
push
xor
leave
clc
mov
push
push
cmpsb
cwtl
cmpsb
push
std
sarb
icebp
add
and
pop
xchg
push
fcmove
add
xchg
popa
xchg
lds
nop
sbb
mov
mov
cltd
daa
cmc
pop
cld
pop
fnsave
cli
pop
mov
dec
rolb
or
mov
jb
cmp
ret
scas
cli
faddl
sub
xchg
push
xor
pop
inc
sti
or
arpl
and
xchg
sbb
and
add
mov
or
jmp
fsubs
xchg
std
adc
xchg
shlb
or
jo
add
mov
or
adc
push
ljmp
xor
dec
out
ss
mov
and
xor
scas
push
jb
rorb
jp
inc
push
pusha
aas
gs
pop
leave
sahf
sbb
push
test
inc
pop
inc
out
ds
ljmp
push
mov
or
pusha
pop
sub
inc
outsb
push
mov
jmp
mov
push
dec
mov
arpl
mov
mov
aaa
in
cmp
loopne
ret
mov
nop
sub
push
jmp
add
test
and
push
inc
and
ja
iret
mov
pop
push
rcrb
in
jne
stc
sbb
lods
and
scas
imul
mov
aaa
or
push
adc
or
in
mov
and
shl
cmp
dec
inc
sti
dec
sbb
xchg
das
push
sbb
cli
bound
or
es
jmp
dec
jo
cwtl
dec
and
mov
ljmp
stc
shrl
add
pop
pop
ret
enter
push
mov
das
addl
dec
dec
push
icebp
mov
mov
popf
add
icebp
fldcw
mov
int
hlt
mov
addr16
sbb
sub
cwtl
pop
jge
jmp
pop
adc
xlat
pop
decb
iret
sub
pop
cli
pop
imul
call
loope
push
add
ja
out
jmp
aas
sub
lret
je
paddw
jp
mov
or
adc
jmp
mov
scas
mov
or
xchg
or
lret
push
fildl
add
sub
sub
data16
aam
push
mov
dec
in
jge
call
scas
int3
sub
dec
insb
add
and
imul
mov
sbb
insb
add
ja
and
mov
jmp
push
xchg
aam
push
movl
je
fldl
or
in
nop
push
subb
mov
arpl
cwtl
push
sub
push
leave
push
mov
lock
dec
ret
ffree
roll
mov
xor
add
and
clc
sub
pop
out
pop
mov
push
aaa
jae
mov
xor
pop
pop
and
push
push
and
jnp
mov
xor
xorb
pop
stos
dec
push
and
push
adc
xchg
push
xchg
in
inc
lods
roll
orb
xor
scas
pop
daa
fisttpll
enter
add
jne
dec
lock
adc
cmp
adc
mov
dec
mov
and
mov
pushl
shr
pushf
js
aaa
jg
rcrl
inc
jge
xor
rolb
shll
jb
mov
addr16
mov
cwtl
lods
cmp
faddl
shll
and
sbb
sub
xor
ljmp
push
inc
pop
xchg
hlt
outsb
loop
xchg
popf
inc
or
xchg
adc
cwtl
mov
test
scas
jg
mov
sbb
ret
xchg
pop
icebp
movsb
sbb
adc
pop
sub
inc
cmpsb
add
neg
call
hlt
stc
pop
cmp
imul
add
pop
xchg
dec
add
in
xor
cmp
cmpsl
std
jle,pn
and
adc
ja
gs
std
jne
test
and
mulps
lds
jle
std
sbb
mulb
clc
add
cmpb
pop
and
or
or
dec
and
push
add
mov
xlat
jle
and
dec
xchg
pusha
inc
imul
outsb
inc
sbb
popa
std
sbbb
test
xchg
andb
push
mov
cmp
xor
jmp
pop
je
mov
xchg
jb
fists
push
adc
dec
pusha
out
stos
dec
cmp
popa
add
stos
mov
jo
adc
add
addr16
leave
jno
inc
lock
pop
add
and
adc
dec
dec
push
add
mov
pop
mov
out
fsubs
dec
enter
cmpsb
inc
leave
je
ljmp
rcl
out
jo
mov
pop
or
adc
in
dec
mov
pop
fmull
lret
sub
jecxz
js
sub
push
xor
mov
pop
ljmp
ret
and
inc
cmp
js
dec
mov
sub
dec
cmc
push
sbb
ljmp
pop
out
add
cwtl
xchg
je
sbbl
std
or
sbb
xor
lret
out
rclb
xor
pusha
pop
add
out
gs
pop
mov
xor
fimull
roll
cmp
lcall
nop
dec
pushf
add
push
int
outsb
ret
nop
mov
xchg
or
mov
jl
movsl
sbb
mov
xchg
dec
out
cmp
loopne
pusha
sbb
inc
sti
add
inc
enter
and
addps
pop
add
inc
mov
data16
movsl
das
push
ljmp
add
sbb
leave
inc
fsubr
sub
roll
add
out
sbb
sahf
sahf
or
sbb
and
mov
pushl
iret
in
hlt
push
sbb
adc
loope
xchg
pop
jg
dec
inc
cmp
sahf
ret
mov
pop
mov
or
lods
mov
xchg
mov
mov
jmp
or
xor
and
ret
test
lock
and
mov
xchg
jle
shlb
dec
mov
rorb
or
or
ret
std
test
ljmp
mov
stos
and
mov
dec
incb
sbb
sbb
inc
popa
test
add
roll
sub
pop
xor
xchg
xchg
subb
push
imul
ss
jns
sub
xor
cmp
or
pop
add
and
jbe
xor
mov
das
jmp
sti
pop
add
pop
dec
leave
cmpsb
rdtsc
xor
mov
pusha
and
pop
push
push
insb
out
pop
insb
and
lret
test
xor
xor
xchg
mov
mov
pop
sub
es
add
jnp
aas
loopne
adc
stc
add
mov
pop
xchg
aas
or
jg
insb
sbb
pop
inc
xor
pop
dec
add
pusha
jne
jle
dec
push
mov
pop
and
pop
lret
pop
out
xchg
call
aad
mov
push
int3
sbbl
sbb
pop
aam
or
loop
pop
loopne
cmp
pop
and
pop
adc
iret
push
es
arpl
sub
adc
addb
push
movsb
mov
sarb
xlat
jg
ljmp
jmp
jbe
xor
loop
aaa
das
in
add
and
jns
cmp
out
and
std
shl
mov
push
pop
cmc
in
add
pop
xor
aam
mov
inc
cmpsl
pusha
aas
push
xchg
mov
mov
pop
push
pop
sbbb
int3
inc
ds
addl
mov
lret
add
push
pop
mov
push
mov
mov
sar
pop
mov
dec
mov
push
push
add
jecxz
sbb
jo
scas
popa
outsl
inc
jle
test
lds
subl
push
mov
cmp
pop
push
popa
cmp
cmp
icebp
fidivrl
mov
imul
ljmp
or
xor
sbb
add
inc
jbe
or
ficoms
add
arpl
mov
add
pusha
push
lods
push
dec
jmp
mov
pushf
sub
push
pop
into
add
adc
or
lret
insl
test
xorb
sub
in
ja
mov
jg
int3
add
fsubrl
fs
sub
test
aam
andl
in
and
fcomip
push
xchg
mov
xor
adc
mov
ss
xor
mov
xor
add
mov
jecxz
mov
pop
lcall
fs
aam
mov
mov
ret
sub
add
jbe
fwait
in
out
sub
add
and
xlat
jb
xlat
xor
cmc
imul
mov
and
xor
sub
in
inc
movsl
negb
aad
sub
js
mov
jge
push
mov
not
adc
pop
push
adc
pop
sub
andb
inc
out
addb
sub
pop
sub
adc
jns
movsl
add
push
daa
pop
xlat
pop
jp
add
rcrl
jo
jnp
or
add
inc
jo
and
jmp
pop
sub
js
mov
or
int
daa
cltd
pop
jb
stos
ljmp
insl
out
and
xor
xor
and
jns
shlb
enter
sbb
xchg
sti
and
std
or
test
adc
xor
push
add
pop
call
jbe
add
push
adcb
adc
and
jp
int3
inc
testb
roll
rcrl
scas
pop
test
ja
sbb
adc
das
cld
out
xchg
fcomi
xchg
and
outsb
xor
sbb
adc
pop
push
int
pop
mov
sub
push
xorb
cmpsb
jmp
inc
lods
jle
jp
into
notl
scas
out
push
add
xor
enter
sbb
flds
add
and
ljmp
mov
daa
add
sbb
mov
ret
in
add
test
cmp
cld
mov
dec
adc
inc
repz
in
cs
loopne
ret
xor
enter
aaa
repnz
jp
out
or
das
loopne
xchg
testl
and
ss
mov
stc
loop
sbb
fsubrs
xchg
pop
or
push
or
mov
lods
ffreep
dec
in
cmp
xor
dec
pop
lods
cld
xchg
stos
xchg
lahf
mov
loopne
lock
andl
pop
mov
mov
xor
adc
dec
adc
subb
sub
add
test
or
sbb
outsb
mov
mov
cli
xchg
mov
repnz
sbb
into
std
adcb
adc
aam
clc
inc
popf
ljmp
adc
jge
movsl
adc
je
mov
adc
and
es
mov
mov
cli
mov
mov
inc
out
adc
cwtl
popa
and
push
mov
inc
dec
xor
or
jbe
popa
loop
or
sub
jne
cltd
jno
data16
pushf
or
orb
and
and
xor
neg
shr
subb
lret
rolb
lods
push
push
popa
pop
addb
fcmovb
adc
mov
jns
pop
dec
xor
adc
out
mov
add
push
and
fcmovne
cs
and
adc
ljmp
inc
loop
adc
mov
aaa
lods
dec
std
enter
inc
xor
xor
sub
dec
je,pt
push
mov
inc
sub
pop
pop
sub
pop
inc
int3
jle
dec
lds
sub
xor
imul
mov
repz
pusha
push
movlps
cmp
fnstsw
mull
cmp
verw
add
push
daa
or
sub
fs
mov
pop
ja
mov
sub
dec
lahf
add
cmpsb
lods
push
mov
mov
pop
test
out
xor
inc
ret
fsubrp
fsubrp
adc
stc
mov
lret
and
inc
xchg
or
jne
neg
add
pusha
mov
ljmp
cld
mov
push
push
imul
pop
or
add
ret
dec
loop
jmp
imul
ret
jmp
add
push
mov
fistps
dec
and
push
out
xchg
sub
mov
push
icebp
ret
jge
push
das
shl
repz
rolb
push
dec
jne
mov
sbb
xor
bound
fdiv
dec
sub
sbb
imul
gs
mov
jbe
add
add
cmc
stos
repz
cld
sahf
out
mov
int
jae
pop
push
movsl
push
cs
sub
mov
adc
je
nop
leave
push
or
push
icebp
xchg
shrb
add
insl
adc
sub
pop
push
jno
add
ljmp
orb
dec
or
fldlg2
lea
icebp
bound
sarb
adc
cmp
aad
jg
and
push
dec
adc
pop
jmp
and
ret
clc
pop
or
lea
mov
mov
out
pop
xchg
fwait
std
dec
adc
mov
pop
testl
popf
xlat
mov
mov
and
cmp
push
mov
sub
mov
cmc
lock
je
testl
add
outsl
mov
add
pop
or
popl
cmp
inc
jo
aaa
add
aad
fs
bnd
pop
pop
xorl
push
cmp
xchg
pusha
pop
push
adc
stos
int3
jle
jmp
push
movsl
insb
or
and
ds
mov
xchg
icebp
pop
aam
pop
jns
or
jmp
sub
testl
jecxz
ja
and
jp
pushf
dec
and
test
dec
jl
in
subl
push
sub
mov
jg
inc
dec
testb
insb
pop
mov
jae
adc
sub
sar
add
sahf
and
cmp
mov
jb
pop
inc
cmp
xchg
mov
lods
add
bound
dec
sbb
cmp
add
add
pop
shr
and
aas
push
js
int
out
or
pop
stc
add
mov
sub
jb
or
pop
rorb
adc
outsl
movsb
xlat
ret
decb
call
frstor
sub
addr16
inc
aam
jae
add
mov
and
dec
in
jge
in
pop
mov
orl
xchg
cmp
out
les
sub
cwtl
or
push
inc
xor
lods
sbb
or
pop
pop
mov
sbbl
enter
inc
xchg
inc
pusha
mov
fbld
xor
insl
loopne
sarl
ret
adc
mov
sbb
cli
imul
sub
pop
sub
push
add
xchg
loope
subl
in
repnz
adc
mov
fwait
push
push
add
ds
inc
adc
scas
mov
adc
ljmp
das
sbb
leave
fistpll
add
pop
clc
test
sbb
je
fs
call
out
cmp
jnp
lock
pop
nop
xchg
adc
les
mov
jl
adc
push
dec
out
push
negb
adc
je
push
push
push
insl
mov
mov
add
test
mov
jmp
orb
dec
sti
sub
jne
fnstenv
fcmovb
scas
add
dec
sbb
repz
scas
into
lds
cli
scas
test
mov
test
stc
addr16
add
add
pop
fildll
inc
or
jae
mov
negb
add
mov
mov
in
mov
pop
push
cmp
mov
or
iret
mov
pusha
xchg
fnstsw
daa
mov
fcmovb
add
popa
add
mov
cltd
jmp
push
adc
adc
lcall
push
aaa
mov
shr
xchg
insb
sub
push
mov
and
movsb
movl
outsb
jg
insl
cmpsl
jnp,pn
sub
icebp
ficoms
adc
add
mov
sub
add
jnp
jmp
mov
lahf
addr16
dec
and
cmp
add
mov
int3
jmp
add
fcomp
add
inc
je
cmp
mov
or
sbb
scas
or
xchg
imul
rcrb
pusha
es
sub
and
scas
pop
mov
push
and
addl
push
add
mov
sub
out
sub
or
xor
pop
mov
addb
jns
fisttpll
xor
testb
xchg
adc
out
adc
jns
sub
test
cmp
mov
xchg
sub
enter
dec
cld
or
add
lret
or
mov
sub
std
int3
lds
in
lods
call
rcll
out
and
sub
rclb
loop
shll
cli
add
pop
std
movsl
push
lahf
inc
mov
xor
pop
push
xchg
adc
not
mov
jp
add
add
scas
xor
xor
add
aad
add
repz
mov
add
sub
shll
ret
push
push
sbb
xor
jmp
adc
xor
push
xchg
lahf
or
sbb
xor
shlb
es
lock
pusha
dec
sahf
xchg
lahf
fadd
loop
add
rorl
jno
jae
addr16
and
or
inc
dec
pushf
xchg
jo
sub
inc
sub
in
add
jb
ja
rcll
sub
mov
jl
mov
pop
mov
lret
pop
movsl
cmpsl
notb
nop
mov
sbb
inc
movb
jp
sub
sti
adc
add
lock
out
pop
sub
sbb
stc
iret
hlt
push
mov
cmpsb
lret
mov
jle
pop
pop
jo
sub
mov
mov
xchg
not
push
push
pop
pop
xchg
cmp
add
mov
cmpsb
and
or
sbb
push
mov
xor
and
jmp
ficoms
xchg
xor
cmpb
sbb
jae
imul
mov
out
push
sub
jb
and
inc
adc
adc
mov
ret
mov
push
ret
cltd
lds
jae
adc
or
stos
daa
jno
jmp
loop
nop
lea
lret
out
addb
mov
cmp
cs
shrl
jmp
jp
ret
loop
and
adc
mov
mov
repnz
aam
addr16
adc
inc
push
add
mov
lock
xchg
pushf
inc
or
pop
push
adc
call
add
mov
add
popa
cmp
js
and
stc
ret
out
pop
and
mov
adc
push
mov
out
mov
jae
shr
add
ret
jle
imul
and
sti
pop
loope
leave
add
xor
cwtl
ret
inc
shrb
insl
inc
sbb
pop
and
inc
test
loope
inc
shlb
mov
push
sbb
lods
inc
imul
sub
or
neg
pop
sub
dec
add
add
dec
push
ds
test
xor
sbb
mov
icebp
mov
or
inc
mov
mov
push
push
push
push
push
push
dec
outsb
nop
sub
mov
mov
xchg
mov
or
call
adc
rorl
adc
sub
jmp
mov
xorl
adc
call
sub
daa
sub
cld
mov
dec
clc
imul
cmp
inc
outsl
and
imul
je
mov
xor
das
jle
fidivrs
jo
and
xor
in
xchg
xchg
bnd
jl
pushf
mov
cltd
or
inc
pusha
sbb
or
js
pop
lret
testb
mov
dec
inc
lods
jl
mov
sarl
test
add
xlat
nop
pop
fmuls
xchg
shll
inc
jmp
test
pop
sti
cwtl
daa
imulb
inc
jg
push
jmp
xorb
dec
sti
ja
stos
repz
mov
xor
adcb
ss
mov
adc
pop
dec
imul
add
in
jb
inc
lock
shl
jb
jns
faddl
pop
in
push
dec
and
cmp
sub
sbb
pop
mov
clc
mov
popa
and
dec
jp
add
jne
or
cmp
mov
pusha
sub
push
xchg
sbb
das
js
add
loopne
dec
add
addl
pop
dec
push
test
fsubs
popa
leave
push
movsl
mov
pop
jno
das
cmp
sbb
mov
sbb
lret
out
ret
xlat
sbb
add
inc
or
aaa
sti
pop
push
mov
loopne
mov
jg
int
clc
into
pop
icebp
shrl
dec
stos
into
ds
push
jmp
mov
sbb
rclb
mov
daa
ljmp
pop
jae
popf
hlt
iret
pop
push
push
push
daa
je
out
pop
pushf
xchg
imul
sahf
push
dec
clc
jns
enter
dec
test
inc
sbb
sbb
cwtl
xlat
mov
imul
mov
pop
xchg
adc
xor
scas
sub
or
cmp
xchg
je
das
cltd
add
pop
negb
filds
jno
push
pusha
mov
pop
mov
shl
cs
sbbb
jg
add
or
ficomps
push
ja
loopne
loope
out
sub
jmp
xchg
sarl
fsubl
adc
jae
pusha
cmpb
into
sub
sbb
mov
fisttpll
push
lret
jmp
inc
jmp
insl
imul
scas
lods
xor
push
push
sub
and
pop
mov
adcb
pop
or
add
xor
dec
push
xchg
xor
ja
nop
ret
jmp
pop
xor
pop
mov
xor
pop
jl
cmp
sub
icebp
sub
sarl
fdivp
add
adc
mov
lret
dec
jo
cs
jg
loope
jge
popf
loopne
jbe
push
cmpsb
clc
mov
pop
jle
xchg
loop
jp
ret
mov
into
mov
or
jns
inc
adc
jmp
cmp
push
shlb
das
call
inc
dec
repz
mov
jo
mov
in
adc
aam
add
add
sbb
xor
push
adc
xor
sub
popl
add
in
sub
xchg
cmc
pop
jmp
sbb
push
pop
jo
and
sbb
repz
je
cli
shl
test
test
shll
scas
nop
cmp
jmp
add
pop
mov
sub
lock
dec
mov
and
pop
jg
loopne
imul
das
push
xchg
pop
and
rclb
and
mov
push
sbb
jecxz
into
jmp
shr
sub
jg
shrl
movb
push
mov
sub
xchg
jmp
stos
xor
mov
jae
push
lock
sbbb
fisttps
jmp
mulb
jmp
fisubl
fs
std
stc
sarb
cmp
cmpsb
mov
and
jle
push
pusha
push
inc
ss
mov
repnz
adc
pop
cmp
fistl
adc
adcb
icebp
nop
or
sbb
add
and
rorb
adcb
bound
shr
dec
sti
fs
adc
ljmp
pop
or
or
pop
add
jb
jns
mov
and
jae
push
frstor
loop
out
and
out
adc
out
mov
jns
cmp
sbb
add
jmp
cwtl
adc
push
pop
dec
add
mov
sbb
jle
lahf
in
sbb
and
mov
dec
fadds
mov
pop
inc
jmp
inc
xchg
jecxz
fidivrs
mov
xchg
push
inc
xorb
fcomps
fisttpll
mov
dec
xchg
sub
jl
mov
cmpsb
rclb
adc
dec
stos
adc
test
notb
nop
jl
cmp
ss
sbb
call
inc
or
gs
fistps
add
lahf
pop
inc
sub
jmp
and
mov
sbb
adc
insb
dec
roll
cmp
js
and
sub
and
cmp
mov
lock
push
cli
ljmp
sbb
loope
daa
or
xor
adc
in
push
icebp
xor
ds
or
dec
je
inc
inc
add
lock
mov
je
inc
sub
push
adc
mov
outsl
popa
push
and
loop
cmpsb
inc
imul
sarb
xor
push
add
xor
gs
jg
test
pop
bnd
add
imul
dec
lods
es
pop
repnz
push
in
mov
push
pop
sub
lahf
adc
adc
mov
aam
sbb
xor
mov
pop
push
sub
dec
inc
mov
mov
int3
sub
jns
sub
ret
add
jg
jno
ficomps
adc
pop
push
loope
sub
icebp
outsb
dec
mov
adc
add
fldl2t
ror
cmpl
inc
sub
das
jbe
jb
add
or
cmc
and
xchg
sub
test
cmp
outsl
push
shl
jb
add
hlt
jne
out
int3
out
lret
scas
das
cmpsb
pusha
sbb
push
xor
faddl
inc
lea
add
fiaddl
mov
jmp
inc
or
call
xor
xor
mov
sub
inc
adc
rorl
test
movsl
mov
mov
arpl
iret
sub
pop
roll
jmp
push
push
mov
ret
and
aas
pusha
ret
mov
adcl
and
push
sub
pop
pop
push
push
int
and
in
notb
xorb
sub
inc
aad
cmp
fidivrl
pop
cli
gs
and
or
xor
imul
insb
popf
add
push
jmp
push
jle
push
and
dec
daa
shrl
shr
or
daa
inc
xchg
inc
or
push
mov
ror
test
mov
inc
enter
out
jns
xorl
jmp
ds
xchg
mov
and
lods
test
jns
insl
add
pusha
jne
push
cmp
in
pop
mov
sub
gs
cli
mov
sub
push
lods
and
rcll
add
jmp
xor
stos
movb
lock
aaa
mull
push
add
sbb
mov
and
and
in
dec
and
mov
lds
xchg
push
inc
pusha
xorb
add
lret
std
cmc
out
and
aad
aam
loopne
adc
clc
inc
pop
dec
mov
or
dec
jne
pop
or
std
sub
mov
sub
out
mov
add
and
push
jge
faddl
mov
test
cmp
fdivrl
jno
loope
jmp
cmp
push
cmp
popa
push
adc
jbe
bound
mov
xor
aas
shll
roll
xor
jnp
push
ret
imul
xchg
out
cld
insb
mov
cmpl
aas
sub
pop
add
and
gs
push
push
pop
pop
add
lret
fcompl
sub
mov
jge
dec
xchg
and
adc
mov
cmp
sub
stc
insb
aad
fwait
or
rol
add
pusha
and
xor
loope
adc
push
xlat
in
call
sbb
nop
inc
mov
adc
imul
leave
sti
das
into
mov
inc
cmp
add
pop
xor
dec
popa
int3
mov
add
and
lea
inc
add
inc
sub
and
fs
lea
inc
cmpl
sbbb
add
mov
jmp
push
mov
pop
test
and
and
cltd
cmp
and
aas
xchg
cmp
cltd
ljmp
jmp
iret
jne
add
daa
inc
enter
mov
dec
adc
sbb
jmp
btc
pop
adc
push
inc
xchg
out
fcoms
and
insb
or
inc
push
xchg
sub
hlt
pop
mov
adc
adc
add
adc
lret
or
gs
mov
push
test
cltd
push
mov
pop
daa
push
ret
pop
sbb
test
jmp
add
xor
hlt
das
jmp
jo
adc
xlat
dec
outsl
add
das
fisttps
aad
or
fxch
insl
repnz
xchg
out
enter
stos
inc
xor
push
aam
mov
pop
jmp
into
je
test
xchg
or
dec
sub
es
add
imul
aad
push
lcall
lcall
pop
inc
enter
mov
mov
and
pop
pop
sbbb
pusha
lahf
pusha
sbb
mov
jmp
test
cmp
jns
cld
cs
jbe
cltd
cmc
bound
push
push
scas
xlat
cltd
pop
add
pop
loopne
or
sub
jmp
fcom
sub
lahf
jo
or
or
xlat
loop
or
push
pop
dec
add
hlt
pop
test
lds
mov
out
mov
mov
aas
clc
push
or
sub
incl
mov
sti
leave
fs
outsb
add
idivb
pop
cmp
jno
leave
cmc
mov
add
xlat
addl
sub
icebp
scas
cmp
add
inc
sti
pop
sub
sub
je
cltd
add
lods
jns
sbb
and
inc
and
lahf
pushf
test
pop
jmp
rolb
push
jmp
outsl
leave
inc
jecxz
aaa
add
xchg
xchg
out
mov
add
cwtl
mov
mov
mov
push
pop
sub
dec
xor
cmc
xor
jecxz
inc
aad
ret
inc
jmp
fwait
push
nop
call
jne
lahf
inc
push
pop
loopne
mov
ficoms
mov
rcrl
xchg
scas
add
shl
movsl
push
pop
pop
fdivrs
pop
fisttps
in
scas
popa
aas
repz
jo
cltd
std
mov
mov
sbb
add
or
lret
pop
xor
js
popf
adc
jne
inc
bound
pop
pushf
daa
xchg
sub
and
inc
and
cmp
clc
ret
es
pop
xchg
cmpsb
jp
test
sub
add
adc
outsl
lea
shll
popa
add
sub
add
sbb
push
test
cmpl
or
add
stos
add
push
adc
shll
dec
mov
mov
insl
jno
dec
cmc
test
ret
imul
dec
cmpb
jp
in
or
jmp
xchg
shlb
dec
push
or
adc
xchg
add
push
and
cmpb
fs
repnz
push
rolb
test
inc
push
mov
stos
fdivs
mov
jae
or
pop
pop
or
je
aaa
pop
mov
mov
lea
sbb
mov
mul
pop
push
mov
testb
sub
pop
pop
pop
pop
out
dec
test
push
mov
sub
rolb
pop
xchg
mov
mov
push
mov
mov
or
sub
aas
cmp
or
jno
sbb
sbb
nop
push
or
andl
mov
pop
xor
mov
or
adc
push
lahf
out
idivb
loopne
mov
cmc
jns
jmp
nop
sub
mov
xchg
bound
dec
or
icebp
push
pop
out
iret
loop
xor
pop
mov
comiss
popa
in
pop
push
mov
push
cmc
stc
faddp
mov
repz
and
push
push
jge
or
push
mov
pop
inc
mov
inc
cmp
movsl
loop
adc
xor
add
cld
add
imulb
adc
or
or
jne
gs
add
add
call
pop
mov
push
xchg
ss
repz
inc
outsb
cli
inc
jmp
xor
js
inc
fwait
inc
adc
bound
adc
cld
in
push
test
jg
sbb
lret
inc
cli
xlat
mov
or
and
xchg
jle
pop
push
data16
fs
inc
pop
dec
out
add
push
gs
jne
or
outsl
pusha
aad
insb
mov
lret
inc
add
je
dec
push
adc
dec
push
aad
ljmp
aam
xchg
dec
cli
fisttpll
push
mov
xchg
pop
ror
push
adc
enter
shrb
dec
or
into
loopne
lds
push
sub
sub
xor
dec
dec
mov
lret
pusha
insb
sarl
imul
stc
sub
push
mov
sbb
icebp
sub
leave
lock
mov
in
scas
adc
not
fimuls
cmpsl
mov
push
outsb
lock
adc
add
into
dec
mov
sub
jmp
push
test
mov
rcrl
shll
das
and
ja
push
pusha
sub
mov
jmp
sub
rcl
dec
fsubs
mov
sbb
push
scas
add
add
sub
xchg
int3
cmc
dec
sarl
add
int3
in
idivb
and
pop
stos
jmp
cmpsb
mov
test
lret
pop
pop
inc
dec
jmp
push
xlat
add
or
in
divl
addr16
loopne
xchg
sarb
pop
mov
adc
or
scas
sub
jmp
cmp
push
inc
adc
mov
out
and
inc
jmp
in
adc
cmp
jno
test
adc
inc
shrd
mov
jne
roll
adc
xor
pop
or
inc
shrb
sbb
ss
addb
cld
jp
adc
or
outsl
stos
lahf
rorl
scas
and
loopne
mov
and
pop
ret
sub
sub
bound
or
inc
pop
pop
lahf
cs
push
jmp
mov
sub
jl
lock
or
out
mov
push
push
fs
enter
lahf
out
pop
pop
mov
pop
xor
sub
mov
in
cmp
out
sar
fwait
movsl
and
sub
pop
notl
xchg
gs
push
push
lret
adc
and
movb
out
add
daa
jl
pop
jmp
mov
daa
movsb
mov
mov
in
push
jmp
add
mov
daa
or
inc
aad
gs
push
icebp
or
adc
dec
push
add
test
mov
loop
adcl
and
jmp
push
testl
adc
push
lods
cmp
in
fnsave
pop
mov
mov
pop
pop
pop
cmpb
and
and
cwtl
subl
jmp
shlb
sbb
pop
sub
ret
cld
lret
shrb
ret
insl
jp
xor
roll
pop
add
dec
test
test
fs
jl
mov
frstor
imul
addb
add
add
pop
pop
push
inc
cltd
push
inc
pop
repz
popa
lods
jb
jl
imul
push
push
jmp
stos
arpl
dec
pusha
and
sub
mov
push
invd
cmpsb
push
dec
xor
push
stos
loope
add
pop
mov
ljmp
or
pop
repz
imul
icebp
shl
or
mov
mov
push
add
mov
pop
stos
jo
jns
xor
pop
pop
popa
mov
sti
dec
and
sub
mov
lds
push
sbb
out
xlat
aam
dec
cmp
ret
xchg
jmp
call
shrl
insb
sbb
in
pop
xor
add
test
add
push
jmp
stos
sbb
scas
into
jb
xchg
imul
inc
push
test
add
mov
dec
ret
pop
cmpsl
lea
incb
xor
in
call
and
clc
lods
and
mov
bound
ss
mov
sbbb
fnstcw
push
jnp
xor
fcoms
idiv
xor
dec
test
test
inc
and
push
andl
inc
in
and
xchg
or
adc
scas
ror
push
mov
inc
mov
ret
add
or
fiaddl
mov
divb
cs
sti
mov
inc
data16
jmp
and
add
xchg
mov
xchg
out
jne
mov
add
and
pushf
outsb
mov
das
icebp
lret
outsl
adc
dec
add
push
jae
jno
popw
pop
in
dec
and
xor
call
lods
sbb
xor
xchg
push
mov
xorb
daa
mov
daa
xchg
inc
dec
cmc
fidivrl
xor
inc
leave
icebp
push
add
rol
test
sti
xchg
mov
cmp
and
add
mov
and
jge
pop
mov
ja
aad
mov
ds
push
mov
mov
out
dec
xor
sbb
xchg
fnsave
std
cli
les
push
movsl
movsl
mov
xchg
jmp
imul
imul
pop
cmp
inc
add
pop
jnp
rol
sub
xlat
and
adc
into
fists
mov
movsl
into
mov
lcall
xchg
adc
decl
orl
fidivrs
sbb
inc
mov
sbb
add
les
cs
xchg
loopne
lods
orl
fmulp
adc
mov
adc
mov
clc
or
cmpl
mov
in
or
xchg
loope
mov
mov
pop
int3
push
push
sbb
testl
jmp
dec
cmpb
dec
lcall
cmc
movb
clc
push
push
ds
fnstenv
jne
pop
loop
xor
xor
pushf
stc
and
adc
mov
mov
mov
jb
mov
cmp
stos
xchg
iret
xchg
sub
xchg
pop
daa
fs
jmp
pop
ror
mov
pop
loop
loope
mov
push
icebp
sbb
dec
enter
dec
pop
stos
lret
fcomps
or
repz
dec
inc
div
lahf
adc
mov
mov
sub
add
dec
sub
sub
mov
adc
xor
notl
xor
out
outsb
bnd
addr16
dec
adc
mov
out
shl
sub
push
or
pop
adc
stos
je
xchg
in
pop
in
or
mov
ja
fxam
xor
or
mov
adc
nop
inc
mov
cmp
decl
dec
js
inc
xchg
das
cmpsb
rcll
xlat
ja
mov
pop
sub
xchg
cmp
imul
loope
fmuls
ds
jge
or
add
jmp
mov
daa
stos
add
stos
icebp
subb
cmp
push
sbb
pusha
cmp
mov
or
negl
cmpsl
push
pop
inc
in
call
testl
push
out
add
out
popf
das
jno
inc
sub
jl
and
std
mov
xor
add
sub
jmp
mov
mov
out
sbb
cmp
pop
sub
mov
popf
add
sub
clc
loopne
je
cltd
scas
add
sbb
cmpsb
jbe
int
mov
out
add
mov
mov
hlt
cmp
push
mov
push
adc
sbb
mov
cmpsb
and
dec
or
stos
cld
inc
dec
addl
lret
inc
jae
std
xchg
jp
jns
inc
stos
or
push
sahf
insl
mov
adc
popf
jnp
cmp
jo
jle
ret
xchg
jp
lahf
pop
pusha
sub
jle
out
and
push
lret
xchg
add
add
sub
inc
mov
inc
movsl
orb
out
cs
repnz
push
fnstenv
cltd
test
cmpsl
mov
shrb
sbbb
ret
jae
sub
inc
das
xor
dec
inc
ds
jp
ljmp
adc
ljmp
ljmp
push
popa
xchg
clc
add
std
pop
add
nop
inc
lahf
add
jg
sbb
daa
negb
mov
mov
test
mov
jl
subl
daa
jle
or
je
jno
adc
mov
pop
pop
cmp
inc
cmp
lahf
aad
xchg
int3
cld
pushf
dec
out
cmp
jmp
xchg
fs
mov
push
mov
sub
pushl
in
stos
test
fmuls
push
dec
push
or
pop
sub
jmp
mov
push
decb
clc
rcrl
sub
sti
jecxz
rorl
enter
outsl
aad
mov
push
sbb
adc
and
pop
sub
stos
fnstenv
in
jmp
pop
add
add
push
sub
xor
inc
add
dec
jg
cltd
imul
rclb
ds
jmp
jmp
stos
inc
xchg
mov
sbb
mov
fsubl
sub
mov
vmwrite
or
sub
mov
push
or
lcall
or
push
jmp
pop
sub
add
jmp
push
nop
and
or
jns
push
loop
jge
stos
insb
lret
jl
mov
pop
mov
jmp
lret
mov
and
add
les
or
cmove
mov
sub
jo
mov
pop
xor
pop
call
mov
dec
aam
jp
lret
ljmp
nop
insl
xor
mov
out
sub
sbbb
xor
repz
and
mov
jae
mov
ljmp
js
rcrb
adc
or
testb
add
mov
aas
xchg
das
test
adc
add
dec
push
sub
add
mov
inc
jmp
mov
scas
xchg
push
inc
jle
push
imul
mov
adc
mov
scas
and
push
jge
push
push
jno
jmp
pop
in
add
aad
dec
rcll
xchg
add
popf
jnp
shlb
pop
and
loopne
add
pop
mov
adc
mov
andb
or
or
push
popa
pop
shl
inc
jbe
movsl
jecxz
stc
mov
lret
div
xchg
sbb
and
inc
pop
scas
popl
jmp
movsl
xlat
jmp
cwtl
sub
popf
bound
pop
mov
jmp
lods
rclb
xorb
clts
scas
leave
lret
popa
test
subl
xchg
mov
inc
sub
xchg
dec
popa
dec
adc
mov
xor
sub
rorl
mov
daa
jo
mov
mov
testb
dec
mov
test
hlt
dec
movsb
mov
and
mov
es
push
mov
push
xor
pop
add
or
test
cmp
gs
or
iret
jmp
pop
lods
lahf
pop
out
sub
mov
push
mov
jo
sbb
lahf
adc
pop
test
sahf
mov
aad
lock
clc
andb
mov
cwtl
adc
lds
shll
icebp
adc
aas
dec
xchg
pop
push
mov
xchg
or
add
dec
scas
and
push
add
or
daa
pop
inc
bound
jmp
lock
mov
es
movsl
lock
jbe
sub
ret
popa
ljmp
mov
mov
lods
jecxz
fimull
mov
push
push
sahf
sbb
cmp
repnz
test
cmc
lods
das
lahf
mov
inc
in
and
dec
mov
add
pusha
add
outsb
add
jge
jbe
inc
ljmp
popa
out
mov
sub
adc
inc
push
sub
ds
or
push
not
xor
nop
js
in
rorl
loop
aad
ret
add
pusha
dec
xor
pop
es
rorb
sarl
mov
movsl
repnz
sbb
dec
pop
add
gs
xor
cwtl
sub
cmpb
sub
aam
movsb
pop
loope
mov
push
inc
xor
add
mov
mov
xor
add
shr
add
jp
inc
cli
stos
sahf
adc
ja
or
push
fs
test
push
sub
xor
sbb
arpl
xchg
movb
jo
in
dec
add
lods
or
lahf
push
and
pop
out
push
sti
inc
and
mov
mov
pop
and
sub
dec
mov
and
outsb
dec
jns
inc
mov
cmp
pop
ds
cmp
idivl
sbb
fildll
mov
cmp
lcall
bound
orl
fsts
push
lods
jo
dec
daa
dec
adcl
xor
jmp
in
or
pop
and
jbe
add
subl
xor
push
jmp
notl
loop
lret
add
push
jo
jae
and
aas
add
push
pop
jmp
xchg
xchg
xchg
cli
dec
xchg
mov
mov
add
jl
ds
and
aaa
movsb
incl
repz
mov
nop
out
hlt
mov
pop
scas
call
ja
lods
cmp
and
push
add
jno
into
jge
ret
mov
loop
inc
insb
push
lock
cs
add
das
jnp
repz
jns
dec
push
lds
out
inc
mov
cmp
mov
clc
inc
out
mov
outsl
jb
adc
and
out
aam
mov
fidivl
xor
mov
dec
pusha
pop
adc
cmp
roll
test
cmc
or
pusha
dec
xor
jge
and
jg
neg
andl
jns
enter
mov
sbbb
push
pushf
inc
xchg
jae
js
sbb
shl
insb
jl
loop
xchg
loope
imul
xlat
sbb
loopne
or
mov
push
or
jb
loop
xor
mov
xor
jae
in
in
pop
mov
sub
lcall
sbbb
fmuls
neg
inc
rorb
shl
push
adc
mov
lret
jnp
mov
pop
fstps
sbb
andb
and
rcll
popa
add
cmp
xchg
cwtl
sub
xor
jp
push
jns
sbb
adc
dec
jecxz
fdivrs
jmp
bound
sbb
es
icebp
push
add
push
mov
dec
test
pop
mov
jmp
xchg
add
sbb
std
push
and
or
lods
imul
in
mov
repz
jbe
aad
int
jnp
dec
subb
faddl
cmp
les
and
push
and
add
cmc
inc
add
jbe
lahf
add
fucompp
lea
fimuls
mov
test
jns
test
add
out
aas
in
pop
cmp
mov
sub
addb
iret
adc
dec
sbb
inc
jmp
inc
out
or
leave
add
add
rcll
add
and
dec
and
clc
xor
scas
iret
sti
jbe
add
cs
push
pop
jmp
dec
add
sub
and
adc
mov
push
test
mov
insb
xchg
mov
pop
lock
fwait
xor
dec
data16
mov
push
adc
hlt
hlt
push
mov
loope
mov
add
outsl
add
adc
mov
jp
in
pop
xor
inc
pop
ds
push
push
test
rorl
cmp
xchg
add
stc
daa
add
mov
push
fsubr
push
mov
adc
pop
in
jecxz
out
jb,pn
add
jmp
jmp
into
dec
mov
xor
jno
outsl
push
stos
inc
inc
adc
push
mov
mov
add
outsb
fnstenv
push
pop
xchg
icebp
mov
inc
mov
or
jbe
cmpb
ljmp
add
sub
mov
jge
push
xor
mov
and
jbe
xor
lds
jb
dec
imul
clc
add
clc
add
xchg
inc
and
sbb
cmp
inc
cli
shll
divl
lar
loope
cltd
cltd
ja
in
fsubl
jp
stos
stos
popa
ja
add
adc
inc
jnp
leave
push
add
scas
and
dec
pop
lret
mov
inc
mov
cs
jb
push
ja
out
arpl
and
cmpb
cld
dec
shlb
xchg
cs
add
shr
stos
mov
adc
pop
mov
fwait
mov
xor
das
jmp
or
aas
mov
xchg
popf
adc
mov
mov
jecxz
int3
add
out
imul
add
rcrl
cmp
add
sti
or
sbb
fs
out
loope
pop
pop
dec
mov
or
push
mov
or
xor
jne
out
icebp
das
out
shll
das
dec
es
arpl
mov
dec
pop
aas
push
ja
fisttps
in
dec
jo
cmp
shrl
outsb
add
jl
ja
and
dec
test
pop
xor
add
ljmp
add
pop
pop
int3
cmp
cmp
pop
pop
adc
enter
lcall
push
addl
push
lcall
sbb
cmp
adc
arpl
scas
adc
shrl
imul
repnz
js
adc
and
adc
pop
and
adc
cmp
into
or
sbb
jo
rolb
mov
and
rcrl
xchg
mov
stos
push
or
jns
jnp
hlt
xor
push
sub
pop
add
mov
pop
movsb
jge
and
sbb
add
aad
push
gs
mov
out
mov
rclb
xchg
cmp
push
mov
sbb
xor
and
pop
adc
in
add
mov
sub
not
jb
xchg
lods
imul
dec
sub
arpl
add
sub
add
add
adc
pushf
xchg
xchg
int3
scas
icebp
aaa
movsl
lcall
and
and
adc
roll
in
das
pop
mov
dec
add
loopne
pop
mov
aas
add
fs
pop
jle
addr16
loopne
dec
neg
nop
and
sbb
cmp
push
jmp
fbstp
ret
adc
movsl
cmpb
and
lock
negl
stos
loope
dec
pop
push
push
jmp
dec
xor
nop
mov
shrl
push
js
ret
out
iret
loope
insl
outsb
testl
jecxz
loopne
pop
sub
sarb
mov
nop
pop
and
bound
lea
sti
xor
xchg
scas
loopne
jmp
cltd
sti
and
add
push
sub
mov
xor
insl
inc
addb
std
dec
outsb
roll
testb
jmp
lea
sub
das
js
lock
rcrl
out
dec
std
imul
mov
ss
pop
shr
xchg
psubb
cwtl
arpl
sub
ficoms
into
outsb
mov
push
lock
add
jnp
push
xchg
ror
pop
push
pop
sbb
push
mov
adc
mov
sub
mov
push
in
ret
cmp
shr
gs
sbb
inc
jp
xor
push
out
lret
pop
cmp
xchg
or
push
jno
mov
or
sub
popf
ds
sbb
int3
imul
and
dec
sub
jnp
mov
or
jnp
mov
dec
pop
ret
lret
adc
push
cmp
pop
mov
mov
shll
inc
repz
ds
add
sub
jmp
frstor
imul
stos
inc
push
sub
iret
test
adc
dec
xor
xor
test
mov
push
punpckhwd
xchg
inc
jnp
repz
jmp
pop
mov
add
lods
or
addb
xchg
push
inc
cmpb
dec
mov
dec
xchg
lahf
lret
or
pop
frstor
xor
jmp
jge
inc
xchg
mov
jne
add
pop
movb
lds
loopne
cmp
mov
and
aad
jns
mov
sbb
movsb
movsb
xchg
cmp
pop
add
lods
and
push
inc
leave
jo
pop
adc
mov
add
mov
scas
shlb
test
add
mov
dec
jmp
in
pop
or
cmpsl
add
jne
popa
pop
dec
sub
pop
mov
imul
add
jle
mov
and
push
xor
add
mov
and
insb
xchg
sbb
push
adc
sbb
clc
and
mov
xor
jmp
js
push
add
or
daa
inc
clc
and
mov
enter
mov
add
movsb
pop
adc
push
out
cmpl
inc
pop
xchg
in
or
outsb
xchg
add
insb
fs
pop
xor
repz
sbb
sub
in
cmpb
repnz
add
inc
add
mov
dec
mov
or
mov
mov
fnstsw
arpl
jno
sub
sub
subb
ja
jmp
cmp
sbb
xor
inc
push
fsts
repnz
leave
inc
or
inc
lds
add
test
push
or
cmp
repz
outsb
xchg
and
add
mov
neg
iret
cmp
pushf
out
sub
je
test
mov
xchg
cwtl
hlt
andb
pop
dec
arpl
mov
pop
shlb
push
inc
ss
jae
jno
mov
jecxz
std
add
pop
push
push
aas
pop
mov
inc
aas
jne
fiadds
xchg
mov
push
and
mov
stc
icebp
adc
jg
pop
sub
jg
inc
jmp
faddl
dec
push
xor
push
or
call
fistps
jnp
jl
das
hlt
sub
jnp
ljmp
pushf
xchg
xlat
and
daa
hlt
ss
movsl
std
aam
popf
dec
mov
dec
mov
and
andb
inc
cmpsb
xor
andb
add
adc
adc
fildll
and
pop
fidivs
add
arpl
adc
jno
movsl
push
imul
lretw
adcb
sub
enter
push
sbb
mov
mov
test
add
paddsw
aas
mov
xor
ja
test
adc
pop
push
dec
push
or
fidivrl
testl
push
lahf
mov
pmaddwd
sub
setl
mov
rclb
push
jnp
mov
sub
xchg
sbb
fistl
in
cwtl
add
or
inc
push
and
cmpsb
je
jp
clc
sub
test
ret
jl
pop
inc
in
rclb
inc
jmp
repnz
lds
add
and
mov
shr
test
je
jo
out
cli
sub
data16
jge
xor
outsb
dec
inc
sbb
daa
movsl
and
sub
in
imul
sub
dec
push
or
push
and
push
pop
add
testb
xor
add
loop
scas
dec
or
jp
cli
cmpsb
fldl
push
push
mov
jnp
incb
add
hlt
add
out
push
fdivr
xor
jmp
pop
mov
gs
jle
dec
inc
xor
push
fwait
jae
push
data16
inc
js
add
mov
ds
mov
insw
xchg
add
aad
or
sete
popf
test
test
sbb
push
xchg
or
add
bound
clc
pop
dec
jg
pop
adc
and
loopne
scas
inc
int3
inc
aad
out
push
addl
pop
call
cmp
dec
jmp
jmp
pop
mov
dec
sarb
xlat
mov
ret
sahf
lods
rolb
outsb
mov
js
orl
dec
out
insl
xchg
ret
pusha
vldmxcsr
xor
cmp
adc
cmp
jge
and
pushf
andb
movsb
xor
adc
neg
fsubl
pop
jb
js
ds
sti
cwtl
aam
pop
outsl
test
inc
sbb
inc
pop
mov
cmp
orl
negl
js
loopne
aaa
cmp
push
lods
ljmp
cwtl
jmp
jl
cmp
stos
add
ss
ret
pop
inc
std
inc
xchg
aam
inc
dec
cmp
pop
inc
pop
jmp
inc
sub
addr16
shlb
test
pop
and
stc
lods
dec
add
dec
addr16
and
jo
sub
add
stos
into
jo
jmp
inc
cmc
mov
dec
push
lcall
lahf
xor
jae
adc
data16
add
jp
push
jl
lahf
or
mov
rclb
jmp
xor
mov
xorps
ljmp
dec
jae
fbstp
adc
shll
mov
pop
push
push
jmp
xlat
ljmp
xlat
pusha
jb
mov
inc
dec
outsl
mov
lret
mov
sbb
push
shll
cmp
and
icebp
push
xchg
cmp
dec
and
cli
sub
push
xor
lret
mov
in
add
int
loope
add
das
mov
adc
fistpl
mov
mov
aaa
mov
mov
outsl
or
out
xchg
enter
mov
icebp
xchg
sub
movsl
in
mov
jmp
add
les
popa
dec
add
in
push
sub
xor
insl
cmc
xchg
mov
push
lock
jo
xchg
sbb
sub
sub
mov
sarl
add
lods
push
stos
mov
mov
in
lock
dec
call
stos
loope
push
mov
fisttpl
movsl
mov
sub
and
repnz
jo
cli
fsubrs
addr16
jecxz
sbb
pop
leave
mov
aas
pop
xchg
fs
adc
pop
and
lret
mov
push
mull
shlb
mov
pushf
pop
std
outsb
inc
push
rcll
loope
cmc
hlt
mov
popf
sbb
scas
iret
xchg
stos
add
pop
add
aas
mov
mov
push
push
mov
pop
in
dec
movsbl
cmc
sbb
pop
sar
cmp
mov
jg
push
mov
setae
push
adc
push
leave
cs
push
ja
out
inc
and
bswap
inc
mov
mov
scas
xchg
push
push
pop
ljmp
adc
xlat
adc
fmuls
push
fwait
add
push
test
loope
and
into
les
pop
test
xorb
mov
add
and
pop
add
sahf
inc
ds
jae
sub
mov
push
addb
js
adc
fimull
loope
sti
mov
xor
pop
mov
fildl
stos
jge
call
xlat
loopne
outsl
adc
fisubl
mov
cmp
sub
imul
mov
loopne
pop
xchg
ss
and
pop
push
daa
cld
gs
test
push
push
push
int
ljmp
push
push
mov
add
add
inc
push
test
ret
pop
rcrl
and
rol
jg
std
xorl
shl
jmp
outsl
scas
call
add
ljmp
cmovbe
or
xchg
add
push
jo
sbbl
adcl
lahf
jno
imul
xlat
out
xchg
dec
sbb
mov
cmp
pusha
repz
lcall
xchg
bound
pop
dec
fs
call
inc
mov
jnp
inc
adc
add
add
xor
shll
xor
push
test
jo
lock
imul
push
or
adc
pop
jne
adc
std
xchg
ret
lret
decb
loope
and
add
dec
pop
mov
pusha
insb
xchg
call
les
mov
pop
mov
push
loop
mov
xor
push
or
xlat
subb
mov
xchg
lret
or
push
arpl
jnp
in
xor
jmp
cmp
faddl
adc
dec
and
push
or
sub
mov
sub
mov
scas
sub
xor
jge
sub
xor
popf
xlat
test
inc
or
add
xchg
mov
xchg
push
or
mulb
jmp
lcall
addr16
hlt
loop
ficomps
sub
outsl
push
call
push
dec
and
sbb
aaa
inc
sbb
rclb
mov
int
push
scas
repnz
hlt
ret
jl
pushf
cmp
clc
add
push
xor
pop
stos
cwtl
or
popa
jae
jo
mov
and
dec
ja
adc
inc
push
out
out
push
inc
mov
and
sbb
jge
and
test
add
mov
mov
xchg
lock
mov
out
or
push
mov
and
or
push
jo
pop
mov
popa
push
adc
inc
ss
scas
fwait
add
loope
dec
jo
fmuls
sub
fisubl
stos
adc
jmp
ljmp
xor
xchg
mov
cwtl
xor
pop
sbb
sub
jg
hlt
xchg
sub
cmpsb
stos
dec
nop
daa
inc
xor
pop
jle
jmp
xor
mov
jne
push
add
repz
xchg
cmp
cmp
stos
pop
pop
xchg
xorl
icebp
xchg
pop
xor
sbb
xchg
call
push
fwait
push
fisttps
cmp
pushf
pushf
xchg
jnp
lods
out
jp
mov
adc
sub
mov
mov
push
push
xchg
xor
icebp
pop
sub
push
and
inc
mov
lock
pop
mov
push
sub
sub
sub
mov
out
int3
mov
and
jb
jmp
lods
xlat
sbb
jge
lods
and
adc
ljmp
mov
sbb
rclb
gs
fmulp
adc
out
popf
mov
xor
cmpl
mov
dec
dec
mov
or
sub
xor
les
pop
sbb
sbb
shrl
and
ds
nop
leave
mov
mov
adc
push
imul
call
idivl
dec
cld
ret
or
and
inc
in
loope
jnp
cwtl
mov
mov
cmpsb
and
or
outsl
mov
jge
xlat
stos
add
xorb
addl
sbb
xor
pop
jae
lds
int3
push
or
out
gs
or
add
pop
adc
push
inc
pop
push
addr16
pop
fildl
jmp
mov
cld
leave
mov
jb
cmp
fldenv
ja
sub
or
es
inc
sbb
test
mov
jg
push
or
lea
in
add
dec
push
neg
push
fnsave
and
cltd
or
pop
into
call
mov
mov
push
jg
andb
fdivrs
cmp
mov
adc
clc
add
push
push
dec
movsl
push
fmuls
mov
jge
dec
mov
adc
mov
jne
loope
ja
push
adc
std
xchg
pop
push
sub
add
pop
or
and
subl
ljmp
mov
mov
clc
add
daa
incl
out
bound
adcl
cmp
adc
inc
xchg
add
fistpl
nop
cld
insl
add
add
scas
lret
pop
jbe
es
sbb
adc
push
aam
push
sbb
dec
xor
cli
cwtl
xlat
add
aas
pop
dec
cmp
into
test
or
and
out
mov
inc
dec
mov
sar
fsub
push
mull
adc
xor
mov
jo
popf
pop
fcomps
ja
pop
jl
jecxz
adc
inc
das
pop
hlt
jle
inc
dec
push
mov
popw
dec
mov
fldenv
and
mov
mov
or
add
dec
jp
jnp
es
cmp
jg
leave
mov
jl
dec
jmp
mov
sub
pop
mov
jmp
jle
jo
mov
ja
xchg
add
adc
adc
pop
pop
mov
inc
shld
divb
lret
push
mov
cwtl
addr16
or
add
xchg
mov
sub
jl
add
imul
scas
mov
jg
xchg
loop
imul
jl
mov
and
sub
add
sbb
pop
pop
xor
fisubl
and
xor
outsl
sub
jo
arpl
sbb
xchg
pop
ljmp
dec
es
push
movsb
int
cmp
clc
imul
arpl
sub
add
stos
push
push
push
and
sub
pushl
enter
or
pop
sub
jle
dec
and
add
or
ds
xor
fcoml
hlt
or
js
or
xchg
aam
push
lock
add
pop
xchg
not
lock
jmp
mov
xor
push
xor
add
pop
jmp
xchg
mov
push
add
mov
mov
pop
pop
adc
dec
lcall
adc
dec
or
popa
daa
dec
repnz
clc
sarb
push
add
shl
mov
fldcw
adc
ja
inc
sbb
subl
push
or
mov
jno
jnp
daa
mov
push
pop
incb
and
clc
shll
ds
dec
mov
lret
shll
and
lret
fcmovne
sbb
pop
and
mov
mov
push
lahf
dec
or
add
pop
aaa
or
sbb
add
loopne
adc
inc
inc
cmpsb
adc
cmpsb
mov
andb
lods
loop
inc
pop
push
jbe
js
lds
or
subl
mov
notl
and
pushf
adc
inc
add
xchg
imul
push
xchg
mov
or
test
add
leave
es
add
in
mov
pop
push
sarl
sbb
testb
pop
dec
add
jle
out
push
jno
and
pushf
and
xlat
adc
dec
rclb
jl
iret
inc
inc
nop
sti
loop
xchg
stc
jbe
push
push
das
loope
adc
mov
push
inc
ljmp
dec
cli
cmpsl
jne
std
movsl
add
lahf
jge
jge
mov
mov
jg
scas
imul
pop
jmp
pop
jecxz
xchg
std
movsb
adcb
mov
pop
jmp
mov
je
and
mov
popf
pop
ds
jp
pop
pop
push
xchg
cmp
or
je
sbbb
data16
clc
jno
sbb
negb
repz
daa
mov
push
push
mov
clc
adc
scas
push
movsb
mov
push
movsb
das
mov
out
stos
stc
push
jns
adc
pop
mov
inc
fs
add
enter
jns
mov
rcrb
inc
movsl
add
cmp
popa
mov
inc
ss
aaa
cmp
cmpsl
mov
ljmp
sub
js
jns
leave
subb
lock
clc
gs
sbb
xor
imul
das
into
inc
stos
mov
pop
test
out
es
ret
call
fs
je
sub
pop
dec
dec
pop
mov
pop
fidivrl
xor
push
cmpb
xor
ja
mov
jl
jmp
idivl
dec
aam
pop
xchg
imul
or
push
push
nop
inc
adc
addl
sub
sub
sbb
ja
and
arpl
fnsave
std
fstps
mov
cmp
push
mov
push
lods
push
mov
lea
stos
and
loop
and
or
in
fldcw
mov
push
push
test
shlb
lock
sbb
jbe
stc
leave
jge
into
push
push
out
inc
mov
cmp
clc
xor
pop
lds
rcrb
jns
pop
repnz
push
add
aas
adc
xor
jmp
mov
rolb
jle
cwtl
pop
add
js,pn
push
shll
add
mov
cld
jo
jmp
aaa
movsl
add
push
xchg
jmp
mov
sub
pop
iret
mov
aas
sub
nop
rcrb
arpl
cmp
inc
jmp
dec
or
push
mov
push
cmp
out
addb
add
xor
xchg
inc
or
xchg
test
shr
adc
inc
lcall
add
pop
daa
mov
sub
cmp
cs
in
imul
xor
inc
lret
out
imul
fcomps
push
or
sub
mov
lret
or
inc
iret
lock
mov
jmp
jle
mov
mov
pop
jmp
xchg
stc
xchg
and
out
jae
and
jmp
push
cmp
popa
cmc
mov
push
xlat
sub
jns
cmpsb
add
jno
adc
jnp
pop
ds
out
dec
sbb
push
mov
in
push
pop
divb
mul
adc
icebp
cmp
test
aam
add
enter
xor
out
sbb
neg
dec
sbb
or
xadd
imul
or
pop
xchg
fcomps
pop
dec
mov
adc
adc
pop
ficoms
test
popf
adc
dec
push
add
pop
sbb
and
fsubr
push
out
inc
push
inc
mov
pop
mov
dec
cmp
outsb
bound
push
stos
insb
add
xchg
pop
adc
data16
or
xorb
cld
jnp
jmp
inc
nop
scas
dec
add
xchg
mov
push
cmc
ljmp
repz
xor
cmp
dec
xchg
pop
stc
cli
xchg
xor
xor
rolb
jmp
mov
add
xor
cmpsl
adc
or
add
cmp
and
pop
mov
ja
jae
jo
jmp
and
dec
pop
push
push
mov
pop
pop
push
and
fmuls
pop
mov
daa
js
xchg
jnp
and
pop
fwait
clc
stos
jge
lcall
xchg
add
aaa
sub
xor
repnz
adc
iret
add
in
outsl
adc
lret
add
push
pushf
daa
pusha
mov
xor
scas
rcrb
std
dec
sbb
add
push
hlt
shr
mov
cmp
pop
in
in
imul
xlat
inc
xor
js
daa
and
and
mov
or
das
not
pop
incb
jae
push
addr16
les
ret
das
pop
mov
sbb
sbb
icebp
sbb
xchg
add
dec
mov
imul
push
sub
addr16
int3
xor
pop
xor
or
arpl
pop
or
pop
jp
les
popa
loopne
ds
sbb
leave
jbe
push
daa
loopne
sbb
adc
imul
nop
xchg
fstpl
push
sub
sub
or
out
add
push
add
rorl
lods
dec
decb
add
push
mov
jne
xor
daa
test
sub
loop
test
std
adc
mov
mov
sub
pushf
test
adc
ja
adc
fmull
pusha
xchg
ljmp
add
cmp
fwait
add
lock
popf
in
xchg
mov
adc
sub
loop
test
dec
fildl
add
cmpsb
push
in
push
into
sbb
sbb
and
adc
xor
xor
jmp
xor
pop
jl
push
cmpsb
jmp
mov
inc
push
popa
rolb
inc
or
xor
add
add
imul
in
push
and
xchg
clc
mov
push
cltd
or
inc
adc
mov
or
adc
push
stos
push
cmpsl
or
adc
and
jmp
mov
enter
sti
mov
gs
push
adc
or
incl
sub
loope
cs
push
out
test
sub
pop
push
loope
sbb
getsec
jg
jl
icebp
inc
adc
imul
pop
pop
or
and
jno
cli
jmp
ret
mov
xchg
xor
lret
pop
pop
cmp
sbb
in
adc
push
out
push
aam
in
movsl
push
adc
out
lock
dec
in
mov
cmpsb
cmpb
sahf
mov
add
subl
sub
fstps
into
add
jb
cmp
ds
je
sbb
in
fwait
rorl
push
pop
sbb
inc
cmp
pusha
jns
repnz
fsubl
dec
lods
cmp
shlb
ret
ja
jne
add
arpl
cmp
daa
pop
shll
add
sub
add
or
mov
xor
incl
or
insl
les
adcb
mov
stc
xor
dec
decl
shr
xchg
push
push
inc
repz
push
xchg
mov
and
js
lea
repz
add
addb
fnstsw
push
imul
out
fdivr
fs
test
add
jmp
stos
insb
popf
pop
cltd
bound
cs
cwtl
push
loop
popa
push
test
push
clc
cmc
mov
pop
shl
arpl
mov
jo
xchg
jno
mov
ljmp
out
popa
test
inc
insl
frstor
fsubrs
imul
push
iret
push
daa
pop
addr16
push
sub
shr
cmpsb
cld
and
loop
outsl
mov
neg
test
xor
daa
push
jne
cs
mov
pop
shll
mov
adc
stos
cmp
sub
jne
mov
mov
pop
xchg
add
inc
pop
cmc
push
or
push
pop
add
ljmp
add
adcb
mov
sbb
clc
aad
and
pop
movzbl
lock
stmxcsr
es
imul
popa
adc
inc
lea
mov
movsb
dec
jnp
push
cltd
adc
cmp
and
push
push
outsb
out
adc
cmp
xchg
sbb
cwtl
fldl
popl
jg
out
imul
cmpsl
jle
and
mov
add
jl
gs
push
cmp
cltd
pop
out
xor
or
adc
cwtl
push
jge
lret
aad
divb
loop
fnsave
pushf
leave
xchg
mov
daa
lret
lds
data16
jae
push
jl
xor
xor
lea
sub
lret
sbb
ljmp
jmp
out
sub
push
pop
lret
push
pop
mov
adc
dec
and
enter
test
xchg
and
loopne
cli
cmp
cmp
divl
loope
pop
mov
sbb
sub
push
shlb
jp
cmpsl
or
les
sub
or
pop
decb
xchg
add
repz
sbb
movsl
ficomps
out
data16
pop
les
inc
ljmp
cmpsl
adc
adc
sbb
mov
jno
adc
or
or
jmp
pop
hlt
mov
add
enter
es
dec
cmp
sbb
addr16
add
cmp
inc
and
add
scas
xorl
movups
mov
in
push
push
scas
dec
mov
arpl
mov
mov
cmc
xor
push
aas
sbb
and
cli
les
pop
push
jmp
push
inc
or
and
mov
sub
push
mov
out
nop
mov
nop
mov
mul
outsb
ret
ja
push
test
out
xor
cmpsl
enter
and
adc
jb
lods
mov
mov
daa
ja
loop
add
lods
xor
pop
jmp
ret
pop
mov
push
sti
in
xchg
mov
pop
adc
push
mov
pop
rcr
jge
inc
das
dec
incl
push
shr
not
cwtl
jge
fmull
pslld
push
pop
push
mov
sub
ss
sub
xor
add
jmp
dec
xchg
insl
mov
push
leave
mov
ljmp
cld
xor
mov
add
jmp
dec
sbb
cli
enter
mov
popa
test
adc
insl
cmpb
or
lock
sub
sub
popf
mov
push
cmp
arpl
mov
pop
in
cmp
xchg
pop
sbb
add
add
xchg
cs
inc
lahf
add
loope
movsl
iret
scas
movsb
into
call
mov
adc
bound
test
in
pop
stos
xchg
push
cltd
xchg
iret
loopne
jmp
sub
nop
sbb
add
aaa
and
adcl
nop
push
pop
das
lods
pushf
mov
int
push
mov
sbb
popf
test
mov
mov
dec
daa
mov
addl
sahf
push
or
test
aam
loop
je
dec
shrl
in
sbb
xor
scas
mov
pop
push
pop
mov
lret
insl
test
lock
push
sbb
insl
iret
xlat
outsl
cld
gs
xor
adc
pop
pop
bound
neg
jmp
jbe
push
sbb
xchg
xchg
jno
pusha
add
cwtl
mov
add
mov
push
mov
les
jmp
jmp
jno
jae
nop
push
lahf
sub
pop
aaa
adc
mov
and
jle
das
pop
idiv
add
fidivrs
or
sbb
div
or
aam
adc
pop
or
mov
jmp
mov
orl
pop
iret
jnp
pop
mov
dec
fsubr
loop
lods
fists
loop
jl
leave
call
inc
loopne
cmp
stos
xor
lcall
dec
add
mov
dec
jbe
lcall
movsb
int3
or
je
es
xchg
cmc
xlat
gs
or
add
xor
jns
cltd
scas
loope
stc
sub
and
loopne
push
xchg
ret
dec
sbb
sbb
sbb
gs
sub
xchg
pop
dec
filds
jmp
addr16
mov
popa
jp
jno
gs
cld
jmp
add
neg
hlt
movq
call
sub
loopne
jns
sbb
jl
popa
mov
xor
mov
cld
dec
push
mov
mov
es
adc
pop
add
pop
out
xchg
dec
mov
ret
cli
pop
pop
stos
mov
and
mov
out
aad
sti
aam
scas
shlb
or
mov
cli
fmul
jo
ret
jno
mov
xor
dec
mov
iret
add
out
jmp
cmp
pop
fisttpl
mov
mov
lahf
hlt
sub
lret
pushf
pop
sub
pop
and
test
jnp
sti
mov
test
adc
sti
xchg
inc
mov
addr16
mov
add
push
mov
dec
sbb
ljmp
inc
xor
mov
cmp
nop
inc
lret
mov
popa
gs
or
stc
mov
insl
dec
stc
add
lret
inc
mov
mov
icebp
push
stc
ss
push
repz
dec
mov
push
mov
leave
daa
jecxz
cmc
scas
sbb
inc
test
cli
shr
add
adc
jae
xchg
daa
push
addr16
mov
lahf
push
clc
xor
mov
adc
xorb
sbb
inc
jbe
or
rorb
shr
or
cld
xor
mov
nop
int
push
sub
decb
mov
popa
cmp
das
mov
pop
test
loope
jb
or
jmp
and
xchg
outsb
fcoms
bound
das
mov
sbb
outsl
dec
pop
jnp
lods
fdivs
imul
inc
or
add
add
fcos
dec
das
orb
pop
xchg
xor
pop
inc
subl
xchg
push
sbb
subb
jbe
addr16
add
sti
xor
xchg
sahf
ret
and
outsl
jg
fcomps
clc
add
pop
out
call
les
es
xor
mul
lahf
stc
sbb
outsb
mov
insl
leave
mov
pop
xchg
xchg
pop
shr
push
repnz
loopne
lea
and
push
and
fs
outsl
pop
cwtl
fs
out
ja
xchg
aad
lock
push
mov
push
dec
pushl
test
lcall
dec
mov
aam
mov
jbe
fisubs
dec
je
xor
lret
fldenv
and
mov
outsb
inc
sub
or
insb
mov
orb
daa
fsubrl
inc
rcl
lods
orb
stos
ret
mov
cmc
sub
xchg
sub
xor
sbb
lea
cld
pusha
and
adc
or
and
and
insl
and
xor
push
push
xchg
push
push
and
pushf
stos
es
cmpsb
sti
scas
push
adc
div
jl
jmp
enter
jmp
inc
push
pop
sbb
and
cmp
test
cmp
shll
sub
stos
adc
sbb
add
negb
arpl
push
pop
or
lret
call
es
mov
outsb
inc
push
mov
icebp
or
sahf
es
jmp
das
jnp
xchg
sub
sbb
push
dec
push
repnz
xor
or
jmp
jge
jge
dec
sub
add
mov
cmp
test
popf
shr
ds
pminsw
icebp
in
in
js
inc
mov
cld
insl
mov
dec
pop
jnp
daa
inc
test
mov
cmp
js
lahf
mov
out
or
dec
add
cwtl
push
push
nop
shrl
pop
xchg
push
or
or
inc
pop
add
xor
add
adc
pusha
mov
push
daa
stc
loop
pop
or
aas
adc
and
bound
xor
call
fcoml
dec
push
mov
std
vxorps
cs
fbld
mov
iret
std
push
roll
andb
xor
jle
dec
stos
add
cmp
pop
loop
mov
imul
xchg
xor
jg
popf
push
or
add
inc
dec
stos
cwtl
cmp
pushf
add
mov
dec
push
inc
push
test
repz
enter
and
xchg
cltd
mov
sub
and
cli
pushf
sub
cwtl
pop
push
xchg
and
in
enter
fiaddl
add
test
push
adc
and
mov
or
pop
push
stos
and
loope
ds
sub
and
add
push
sub
or
sub
fnstsw
hlt
mov
out
sbb
out
pop
ds
cld
or
imul
mov
push
add
pop
add
jmp
ret
jbe
add
rcrb
stc
mov
enter
addb
mov
xor
mov
push
imull
aaa
add
mov
jb
mov
pop
mov
nop
cs
mov
xchg
cwtl
shll
and
in
pop
add
sub
ja
add
lahf
mov
xor
sar
push
adc
shll
icebp
inc
add
js
repnz
lret
dec
xchg
test
mov
cwtl
mov
lods
addb
jo
mov
add
jne
loop
fbstp
lret
pop
pop
addb
loopne
cmp
adc
cld
add
outsl
sbb
push
xor
xor
scas
jecxz
xor
outsb
jmp
ret
rcr
gs
stc
outsl
pusha
adc
mov
mov
rcrb
and
or
fwait
add
stos
popf
or
sub
jne
xchg
add
mov
push
out
bound
pop
or
cmp
into
adc
aaa
decl
jecxz
cmp
aad
in
inc
in
xchg
out
xchg
jno
dec
lock
sbb
jmp
out
mov
sbb
jge
sbb
jmp
sub
or
mov
dec
jns
and
mov
sub
jmp
mov
add
push
lret
sub
and
add
push
inc
jge
xchg
cmp
enter
mov
jne
jmp
out
or
sub
sub
imul
mov
jmp
repnz
sub
idivb
push
and
xchg
lods
pop
or
dec
mov
sub
push
or
push
sub
addl
add
or
adc
xor
add
out
mov
insl
subl
xor
jmp
cld
sub
test
bound
mov
cmc
scas
imul
pop
add
ret
insl
add
out
xchg
add
pop
test
add
push
cli
sbb
lret
mov
mov
cmp
add
lds
xlat
fnstenv
les
and
int3
xchg
popf
hlt
mov
push
imul
cmp
push
faddp
pop
aaa
adc
out
xor
mov
out
cwtl
cli
testl
inc
pushf
mov
sbb
add
adc
notb
mov
push
mov
xchg
fs
addr16
xor
mov
inc
neg
inc
jmp
or
stos
pop
sbb
push
or
mov
rclb
mov
jo
dec
loopne
inc
outsl
xchg
cwtl
in
push
jmp
mov
push
sbb
dec
repnz
aad
mov
fwait
jg
sub
push
leave
test
xchg
ds
pop
pop
loope
inc
mov
sub
das
or
hlt
repnz
rcrl
test
dec
cwtl
adc
inc
mov
jbe
dec
jmp
jg
mov
icebp
mov
lods
inc
dec
lods
mov
fbstp
shlb
fdivrl
lods
daa
fldt
imull
lcall
mov
test
or
mov
add
mov
dec
les
or
pop
sub
jecxz
adc
movb
adc
dec
mov
das
pop
xchg
into
sub
ret
ret
adc
mov
notb
cld
loope
out
test
sti
and
mov
mov
adc
movsl
pop
std
shrb
pop
cmpsb
decl
out
mov
jbe
cli
sub
addb
mov
dec
push
xchg
out
roll
sub
fs
lret
cmp
mov
jnp
jp
fildl
xchg
jg
jbe
push
notl
mov
mov
lods
push
inc
pop
xor
jb
loope
adc
mov
shlb
jns
mov
repnz
movsb
leave
push
pop
mov
sarb
shr
mov
mov
push
dec
pop
cmp
ds
jno
sub
jnp
dec
shll
or
inc
nop/reserved
add
ljmp
cmp
loopne
pop
iret
jl
repnz
imul
neg
repnz
outsb
rolb
ret
pusha
pop
dec
inc
add
mov
pop
adc
jo
mov
jp
sbb
xor
mov
dec
pop
add
out
jne
add
js
cmp
lahf
xorl
fildl
or
pop
mov
fmuls
jo
jmp
inc
pop
mov
pop
notl
inc
mov
jle
mov
aad
pop
add
xor
mov
pop
stos
mov
or
sub
or
sbb
sti
lcall
add
inc
dec
and
jmp
pop
stos
dec
popa
ja
pop
add
pop
and
leave
dec
lcall
pop
push
push
jge
mov
jp
mov
pop
cld
cmp
xor
push
mov
jge
insw
insl
cmp
stos
pop
or
push
cmp
loop
pop
sub
add
das
dec
cmp
add
jmp
sub
mov
and
inc
lea
loope
in
pop
stos
paddusw
cmp
inc
ja
in
mov
mov
out
adc
mov
orb
pop
subb
es
push
cmp
dec
ret
aas
push
xlat
arpl
mov
jno
in
pop
hlt
push
jmp
or
pop
fs
jmp
mov
and
pop
orb
dec
xchg
sbb
push
fucomp
push
les
ds
dec
pop
clc
adc
sub
jmp
repz
loope
add
sub
leave
jle
stc
add
mov
push
insb
xor
arpl
nop
add
jbe
push
push
add
test
inc
adc
pop
lret
dec
jmp
and
scas
lods
out
xchg
or
insb
pop
pop
fsubs
mov
xorl
movsb
add
adc
sub
lock
xchg
sahf
int
int
lea
lds
cmpsl
aaa
pop
sbb
xchg
jl
int3
push
push
push
std
jge
jecxz
sbb
cmp
dec
test
insb
jnp
inc
rcl
ss
pop
out
cmp
iret
shlb
in
lahf
incl
jns
push
sarb
sub
adc
add
inc
or
xchg
fsubr
mov
sub
mov
out
and
add
and
mov
popa
add
mov
dec
bound
pop
pop
push
xor
test
popf
iret
jae
rcll
inc
and
movsb
xor
dec
dec
push
fisttps
addr16
mov
and
cmp
mov
sbb
jno
mov
sbb
icebp
fsub
adc
dec
not
mov
fnstsw
dec
call
roll
sub
jl
sub
aaa
cltd
pop
out
fdivrs
jp
adc
inc
jne
les
add
rolb
aas
xorb
movsb
sbb
add
cmp
cmp
repnz
push
add
in
dec
dec
cmpb
lea
test
in
jmp
mov
and
je
test
sub
jae
mov
or
int3
movb
icebp
cltd
xor
dec
pop
and
sub
add
data16
adc
shlb
cmp
jo
loop
addb
mov
pop
cld
adc
sarl
sbb
mov
insl
push
gs
pop
out
cmp
pop
cmpsl
lock
js
xchg
aam
add
cmp
pop
mov
cmp
test
jmp
adc
fsubs
push
btr
mov
lret
jmp
into
xor
aas
fists
sar
inc
pop
cmp
sub
mov
jne
addl
gs
scas
push
xlat
add
mov
adc
les
incb
leave
jns
add
shll
pop
adc
mov
movb
in
xor
stc
inc
add
sub
lock
push
mov
pop
inc
test
push
data16
in
mov
or
std
in
mov
pop
inc
pop
xchg
adc
push
inc
lods
jnp
xor
add
sbb
sub
loope
xor
stc
sbb
rcr
pop
popa
mov
rcrl
push
loop
dec
orb
jl
add
push
out
mov
or
jecxz
xchg
pop
or
daa
pop
repz
mov
wbinvd
imul
fstl
or
xchg
jne
mov
insb
dec
or
ret
pop
push
out
lods
mov
or
cmc
mov
fxam
enter
pop
push
xor
push
cld
repz
jecxz
ficoml
jge
pop
and
xorl
clc
jmp
dec
inc
mov
mov
push
loope
pop
mov
fdivrs
or
inc
shlb
sub
push
sbb
pop
je
imul
push
sub
inc
sbb
push
mov
cmpsb
sub
xchg
les
cmp
push
sub
fidivs
lods
inc
ficomps
cmpb
fdivl
push
cmpsb
mov
jg
ficoml
xchg
add
cmp
or
cmpb
icebp
jge
sub
push
pop
add
sbb
cs
sbb
and
xorb
shll
inc
push
mov
je,pn
lock
bound
pop
clc
stos
sub
loope
inc
sbbb
data16
sti
dec
push
fisttps
or
sub
ja
xchg
sub
pop
add
dec
jmp
push
add
adc
mov
mul
and
pop
pop
jo
out
push
sbb
cvttps2pi
or
add
test
cmp
mov
lahf
repnz
repz
ja
imul
inc
cmp
orb
jl
daa
push
and
xorb
or
clc
pop
push
mov
popa
sti
xor
add
sub
pop
dec
pop
pop
jmp
xchg
pop
icebp
ficompl
push
pop
add
js
push
shr
outsl
repz
or
mov
add
ret
or
dec
pop
pusha
mov
in
cmp
mov
pop
pusha
addr16
mov
jo
push
daa
jmp
aas
xor
mov
test
add
mov
mov
add
jns
adc
or
inc
adc
and
lods
add
lret
sbb
jg
rclb
add
es
call
aaa
ss
add
sub
flds
insl
jl
sub
xor
mov
ljmp
pop
ffree
lock
sti
and
push
push
fdivrp
cmp
and
popa
sub
and
int3
lds
mov
mov
scas
rcl
mov
jnp
add
pop
mov
and
lret
push
xor
iret
cmp
push
mov
inc
pusha
add
test
bound
jae
sub
ret
in
paddsw
mul
rorb
sub
or
les
adc
xchg
add
scas
in
fldenv
fisttpll
cmc
pusha
lods
pop
pop
dec
shl
jnp
jne
nop
dec
mov
cwtl
xor
sbb
clc
sbb
neg
fcoml
mov
and
aam
dec
fcompl
daa
sub
pop
and
ljmp
lea
jb
pusha
inc
jno
inc
fldcw
imul
add
fadds
ljmp
les
nop
pushf
jl
repnz
mov
rcrl
pop
cltd
lahf
aaa
xor
cs
addr16
push
xor
sub
jmp
xchg
fcomps
push
xchg
std
push
sub
sbb
loopne
xchg
pop
jo
lret
ljmp
int3
lock
out
add
pop
push
mov
mov
xchg
fstl
out
mov
add
push
cmp
out
mov
das
xchg
icebp
sub
jmp
cwtl
cmp
imul
cmc
adc
repz
in
push
mov
jl
and
xchg
xor
loopne
dec
cmp
add
mov
mov
cld
lahf
rcll
out
icebp
daa
jg
xor
adc
mov
or
imul
cmp
or
dec
sbb
push
mov
sub
jne
pusha
mov
lret
or
in
fstpl
lods
call
adc
test
mov
das
pop
lock
enter
leave
mov
xor
jae
and
sub
or
cmp
les
push
mov
add
lret
add
and
fdivr
push
pop
imul
adc
mov
pop
push
insb
pushf
jb
incl
add
sbb
sub
or
jmp
mov
test
in
sbb
jl
and
out
jae
hlt
int3
ret
fsubrs
xchg
int3
imul
add
or
int
xor
outsb
jp
leave
xchg
and
push
ret
inc
inc
sub
sub
jno
pop
pop
xchg
push
mov
dec
imul
icebp
cmp
cmc
iret
xchg
xchg
inc
inc
and
into
repnz
jl
xchg
leave
and
inc
inc
mov
dec
or
fldl
aad
shlb
jmp
xor
cwtl
pusha
mov
add
insb
mov
std
out
and
ret
aas
outsl
inc
out
mov
jmp
int3
ret
or
sub
sarb
pop
xchg
pop
data16
xchg
sbb
add
ret
mov
cmp
dec
insl
sarb
push
jmp
repnz
sbb
dec
mov
push
pop
add
subb
lahf
stc
xchg
mov
sub
xor
stos
psrld
cwtl
clc
cmp
jg
sbb
movb
cmp
fnstenv
mov
push
xlat
repz
dec
jno
or
es
lea
lds
and
mov
inc
inc
xchg
shlb
stc
arpl
rcl
pop
jmp
push
in
add
sub
pop
in
add
fs
xor
fidivs
or
and
std
pop
pop
jns
pop
sub
bound
insl
mov
mov
loopne
mov
bound
adc
jns
iret
stos
xor
pop
shrl
jmp
daa
sub
and
jmp
mov
add
xor
js
je
and
jae
lds
outsb
xchg
bound
push
push
sbb
dec
cltd
pop
popf
adc
mov
jmp
mov
xor
push
test
ret
xchg
push
mov
movsl
adc
xor
xchg
dec
out
pusha
or
sbb
dec
and
jns
sahf
or
pop
sub
pushf
jmp
scas
pop
rep
jmp
rcrb
push
jb
jecxz
and
dec
xor
das
mov
je
out
pop
and
jbe
mov
xlat
sbb
arpl
add
aas
jne
fbstp
mov
or
mov
push
icebp
mov
pop
push
daa
notl
jmp
mov
lahf
dec
push
rolb
ret
or
int3
pop
mov
sbb
jbe
sub
addb
fsubr
popf
div
leave
pop
mov
cmp
fwait
hlt
pop
push
xor
push
mov
data16
pop
sbb
jns
das
mov
jmp
mov
add
or
xlat
inc
nop
jae
popf
stc
movsl
mov
je
aas
mov
jg
xchg
loope
and
or
xor
testl
sbb
lea
xchg
push
test
pop
rcl
and
mov
div
test
mov
mov
outsl
das
mov
xchg
xchg
or
je
mov
xchg
stos
bound
popf
in
xchg
sarb
into
adc
xchg
add
js
cs
jg
sbb
push
push
push
gs
jbe
xor
fcomps
inc
sahf
push
jecxz
or
ret
sub
pop
xor
sub
mov
cli
clc
js
popf
push
sub
loope
push
cltd
ret
pop
jne
jne
inc
sbb
subl
adcb
or
pop
and
loope
add
negb
pop
jmp
jae
or
dec
je
add
mov
sbb
mov
push
pop
in
rclb
fs
mov
jle
outsl
rcrb
sub
or
out
test
mov
ret
mov
sub
pop
xchg
inc
and
push
aas
repz
addl
jecxz
rcrl
adcb
int
in
jg
cmc
or
jmp
imul
and
and
test
andl
push
adc
lock
std
inc
in
jecxz
pop
clc
loopne
sti
add
push
xchg
xchg
mov
inc
pop
ljmp
add
pushf
add
test
rolb
sti
ds
adc
mov
test
xchg
das
add
xor
pop
dec
stc
lcall
dec
fimull
or
aas
mov
inc
pop
cmp
dec
loop
clc
add
xor
mov
in
and
lret
push
mov
pop
push
cmpsl
fxch
or
or
enter
sub
pop
push
jmp
mov
adc
ds
mov
pop
pop
outsl
out
sub
jge
lock
lahf
sar
sub
jmp
shlb
jb
bound
or
pop
cli
faddl
xchg
mov
mov
hlt
push
mov
sbb
push
test
test
mov
and
push
out
add
and
jmp
divl
sbb
xchg
daa
mov
push
xor
xor
in
add
cld
ss
rolb
adc
popf
ret
pop
inc
sub
loope
lock
imul
rcll
scas
in
mov
call
mov
pop
inc
and
push
in
ljmp
fsubs
lods
pop
negb
mov
dec
jbe
cmp
push
lahf
jno
add
xchg
pusha
mov
rcrl
jb
pop
push
imul
lret
fists
cmp
pop
xor
pop
xor
clc
mov
pop
cmp
cmp
inc
daa
pusha
icebp
neg
add
mov
dec
cmp
dec
loopne
mov
aas
push
dec
ds
xchg
loopne
add
jne
and
cmp
sahf
or
push
fwait
mov
xchg
lret
clc
pop
xchg
loopne
hlt
add
shr
adc
call
into
loop
dec
pop
adc
ss
xchg
movsl
pop
pop
pop
jae
adc
shl
outsl
mov
pop
xor
loopne
jmp
std
push
pop
incb
imul
push
dec
sub
pop
loop
add
mov
fs
lods
xchg
cmp
push
mov
mov
cli
out
sbbb
cmp
lock
dec
mov
icebp
cmp
rorl
pop
pop
push
sub
dec
imul
das
pop
pop
xchg
dec
mov
and
lods
jmp
adcb
add
cmp
push
nop
ret
outsl
mov
add
stc
das
xor
stos
push
iret
rclb
and
fdivrl
xor
or
out
ror
xchg
dec
pop
mov
pop
xchg
imul
scas
popa
push
repz
push
xchg
mov
pop
lahf
fndisi(8087
dec
mov
push
cwtl
cmpsl
pusha
pop
mov
testb
repnz
xor
pop
int
mov
sub
lods
mov
pop
call
add
daa
and
xchg
mov
adc
dec
sar
das
push
pop
stos
sub
cs
mov
sbb
mov
subb
pusha
and
inc
cmp
dec
push
push
pop
inc
sub
dec
fidivs
mov
or
pushf
sub
ljmp
cld
cmp
pop
pop
xchg
stc
add
cmp
leave
dec
push
mov
shr
sarl
stos
xchg
or
pop
mov
daa
ret
sub
and
jno
cli
sub
add
adc
add
add
adc
sub
sub
cmp
jb
push
xchg
pop
dec
or
inc
add
insl
push
enter
or
inc
jge
mov
mov
xor
jno
fnsave
xchg
push
xor
xor
push
adc
test
sti
shrl
rorl
add
bound
pop
cmc
inc
pop
inc
push
aas
and
dec
pop
or
cwtl
imul
xor
andb
insb
inc
xor
cmp
es
sbb
pop
inc
push
xor
in
jg
enter
lods
cmp
sub
or
daa
xchg
push
arpl
jge
jb
sbb
icebp
ljmp
mov
jmp
ss
into
sub
mov
in
xor
cwtl
mov
insb
cmp
imul
push
sti
sub
pop
adc
dec
sarb
mov
or
or
dec
shlb
cwtl
push
push
push
nop
pop
and
addr16
push
loopne
sub
out
bound
mov
jmp
jmp
jae
icebp
mov
cli
xlat
push
or
aad
inc
ficomps
loop
negl
adc
daa
mov
add
movsl
test
orb
xchg
adc
jmp
movb
dec
dec
or
add
or
jnp
jmp
add
cmp
add
xchg
xchg
test
push
repz
sub
rcrl
outsb
mov
ljmp
push
movb
xchg
nop
mov
nop
inc
adc
xchg
mov
movsl
icebp
movsb
jmp
pusha
addb
testb
add
mov
and
xchg
pop
bound
cmp
lods
mov
loope
push
sbb
mov
rorb
sub
push
mov
add
pop
xchg
mov
out
push
push
lock
cmp
jp
mov
aad
jmp
ja
sub
push
or
xchg
and
and
dec
icebp
jge
ret
cld
adc
lahf
and
out
out
sbb
add
ret
pop
xor
fbld
push
xor
sub
push
jmp
enter
test
mov
aad
aas
mull
addb
icebp
int3
xchg
or
jl
ret
arpl
xchg
dec
push
hlt
pop
jge
out
mov
aas
mov
sahf
or
jbe
add
js
ss
mov
xlat
fcom
lods
lods
jge
in
mov
mov
adcb
popa
jb
out
xor
cltd
fimull
shr
test
push
sub
pop
pop
dec
pop
adc
jne
add
add
mov
stos
fsubrl
xor
insl
dec
pop
sub
mov
in
cld
sbb
sbb
add
inc
mov
les
es
sbb
push
cmp
pusha
push
push
sbb
adc
mov
loope
push
jp
stc
mov
pop
mov
out
or
adc
negb
popa
pop
and
mov
test
add
mov
outsl
test
push
jmp
testl
mov
daa
mov
add
mov
xchg
inc
and
out
test
sti
sbb
xor
fimuls
pop
lods
es
add
or
mov
and
sbb
pop
sbb
push
adc
cs
mov
sub
mov
and
pop
cmovge
push
add
or
dec
or
jmp
add
sub
decl
jp
or
inc
dec
jl
cmp
loopne
xchg
jl
scas
call
push
es
inc
cmp
clc
and
dec
mov
xor
xor
pop
mov
add
testl
adc
sbbb
mov
call
ja
or
das
in
sub
add
gs
add
cwtl
mov
subb
mov
adcl
pop
mov
jg
jnp
mov
mov
adcb
jbe
in
dec
and
pop
jns
ret
add
ret
mov
lea
loopne
negl
movsl
fcmovnb
cmpsl
push
sbb
inc
mov
test
mov
data16
mov
pop
jmp
xor
ja
loop
popa
push
xor
add
sub
sub
dec
cld
aam
push
mov
mov
or
neg
shl
rolb
or
jmp
sahf
push
jmp
out
lock
xchg
out
pop
sub
lds
jne
push
adcb
dec
stos
xchg
sub
mov
in
xchg
xor
xor
sub
outsl
popf
mov
jmp
cmpb
call
in
mov
cmp
sub
adc
out
cmp
inc
push
je
sub
or
imull
inc
pusha
push
mov
push
jmp
adc
mov
sub
push
test
or
lcall
mov
and
dec
repnz
sub
lds
jb
test
insb
dec
pushf
xchg
out
pop
shrl
ss
movsl
sbb
pop
add
dec
mov
cs
jmp
add
push
inc
adc
or
addr16
aas
dec
cmp
pop
aam
jb
push
mov
fimuls
addl
sbb
jge
icebp
inc
add
sarb
add
and
xor
jp
iret
pop
push
xchg
push
cmp
or
xchg
out
in
inc
ljmp
mov
std
pushf
loop
jmp
scas
adc
xchg
cmp
xchg
jno
mov
push
in
cwtl
mov
jb
icebp
sub
sti
and
lret
adc
pop
pop
add
fidivl
jmp
xchg
sub
sti
fmulp
popf
mov
pusha
in
sub
outsb
xor
sub
jmp
fistl
inc
mov
pop
leave
pop
jl
jb
leave
sbb
jecxz
mov
testb
repz
or
push
pop
push
mov
idivb
fcomps
rol
daa
mov
arpl
rcrb
xchg
movsb
sbb
and
and
push
frstor
ret
pop
fisttps
jge
dec
inc
mov
jp
sub
in
cwtl
outsb
push
bound
pop
pop
or
xchg
push
jle
adc
cmc
jb
sub
orb
repnz
add
shlb
cmp
int
sub
adc
sahf
incl
aad
xchg
int3
out
hlt
bound
out
pusha
int
sub
dec
lahf
cmpsb
daa
pop
loop
incb
mov
aad
lock
jle
lahf
and
adc
sbb
jns
push
repz
jmp
cmpsb
push
loopne
mov
jnp
push
add
cmc
jmp
or
jp
and
or
push
lea
addr16
sbb
add
mov
push
cltd
inc
sub
dec
scas
jne
cli
enter
xchg
xor
imul
pop
mov
cmc
push
fdivp
gs
or
cmp
mov
jns
fcoms
in
es
xor
cmp
leave
jl
sti
push
mov
mov
test
push
sub
sub
imul
incl
fmull
push
out
and
iret
pop
sbb
adc
lcall
inc
loopne
jmp
test
repnz
inc
add
push
loopne
jge
sbb
jns
or
frstor
mull
andb
loopne
or
or
xchg
lock
daa
jb
fdivl
jnp
in
add
pop
push
subl
jmp
pop
jg
and
push
jmp
and
inc
jle
push
push
js
daa
repnz
jae
lods
cmp
sub
mov
icebp
inc
push
es
aas
int3
sbb
or
pop
test
adc
fcmovbe
sbb
outsb
lea
and
xchg
js
and
fnstsw
es
lret
adc
pop
testl
xor
jo
dec
jmp
add
shlb
jge
jmp
mov
sbb
pop
sub
shrl
mov
pop
shl
out
loop
and
pop
push
loop
lds
or
add
and
lret
sub
xlat
or
pop
testl
stos
adc
or
or
pop
pop
add
stos
add
lret
push
mov
rcrl
pushl
mov
cli
sub
les
inc
jecxz
popf
leave
inc
xchg
jnp
fwait
mov
fcomps
cmp
mov
fucomi
mov
cmp
push
mov
lcall
mov
sarb
in
movsb
push
in
test
call
scas
adc
stos
sub
sbb
scas
sub
and
lcall
cmpsb
dec
pmaddwd
inc
outsl
and
or
in
jns
dec
lret
stc
pop
out
add
scas
cld
add
ja
sub
pop
mov
jmp
bnd
pop
sub
fimull
in
fwait
into
pmulhw
push
dec
cwtl
lea
jg
pop
jmp
push
jmp
icebp
ds
loop
inc
stos
add
push
ficoms
stos
sbb
xchg
das
ret
sbb
jp
jp
inc
push
rcll
fs
pusha
addr16
mov
xor
mov
daa
out
repz
push
aad
mov
stc
es
shll
add
mulb
or
pop
jmp
jb
xchg
lret
push
push
mov
or
stos
xchg
mov
sub
add
out
lret
pop
daa
push
addb
call
ret
sub
dec
jle
sub
mov
mov
psraw
push
int3
movsb
mov
fdivr
orl
pop
mov
loop
jle
mov
popf
push
cmp
pop
push
add
pop
data16
cmove
roll
call
inc
xor
xchg
sti
sahf
inc
push
sbbb
xchg
push
add
in
add
aas
push
lea
js
inc
or
inc
je
mov
dec
inc
push
and
mov
das
lcall
or
jmp
and
test
sbb
and
xor
frstor
add
loope
push
and
xchg
gs
mov
jnp
xor
or
xchg
adc
add
std
push
cli
add
add
mov
out
test
adc
inc
mov
pop
or
loop
pushf
insl
mov
scas
bound
ja
flds
jmp
pop
mov
pop
xor
mov
out
jb
mov
lret
pop
xchg
jp
in
xor
into
xlat
not
xchg
fmull
daa
add
leave
sbb
sub
cmp
dec
out
sub
loopne
outsb
inc
out
or
pop
jae
mov
inc
aaa
xchg
cwtl
mov
mov
mov
xchg
push
jns
negl
add
or
cmp
inc
sub
fdiv
cmpl
enter
pop
xchg
pop
into
ret
jg
adc
sbb
outsl
push
pop
sub
lea
lods
repnz
mov
mov
pop
popf
enter
pop
fs
push
lahf
fcompl
dec
adc
push
pop
mov
add
jle
pop
adc
insb
add
daa
sbb
xor
fwait
imul
and
movsb
cli
xchg
xchg
dec
pop
vmovddup
repnz
xchg
test
call
add
sbb
comiss
out
orl
sbb
bound
sbb
sub
pop
cltd
pop
fldt
mov
faddl
daa
leave
rol
test
nop
inc
jp
loope
pop
sbb
mov
pop
das
fcomps
mov
dec
scas
rcrb
sub
or
jne
jl
push
imul
inc
push
push
xor
sub
inc
ret
mov
mov
pop
into
push
or
test
mov
xor
pop
pop
mov
mov
push
adc
cmp
xchg
pop
cli
add
jge
fwait
dec
add
loop
xchg
or
imul
dec
pop
sub
jne
mov
pusha
jne
inc
jnp
dec
roll
sub
js
or
jge
cltd
mov
jmp
push
push
jg
jecxz
jge
int
pop
repnz
mov
insl
js
push
dec
xchg
inc
jle
pusha
std
lock
lahf
inc
fstps
add
test
dec
sahf
inc
adc
not
jne
jecxz
push
jp
add
ficoms
mov
int3
pop
sti
xchg
mov
sbbb
enter
dec
call
jbe
mov
dec
push
popf
shll
adc
sbb
pop
add
sub
shr
jnp
mov
push
add
andb
cmpl
dec
pop
test
adc
sub
xor
outsl
std
andb
xchg
bound
jl
cwtl
and
cmp
cld
dec
push
mov
push
ds
xchg
mov
pop
and
js
pop
and
cs
fucom
inc
jmp
scas
decb
psubusw
in
rclb
pop
pop
cwtl
ret
pop
pop
lods
es
add
xchg
pop
cld
and
ret
add
mov
gs
xchg
jno
sub
push
js
pusha
dec
mov
lahf
mov
pop
mov
sbb
andb
inc
rcrl
lock
mov
mov
cmp
pop
mov
xchg
imul
sar
call
mov
mov
popa
cmp
sbb
pop
push
dec
test
adcb
je
inc
movsb
inc
rorl
push
testb
xor
aaa
push
outsb
lods
jbe
nop
shll
add
adc
es
add
push
cmp
shlb
sub
sub
jno
mov
cmp
push
fmul
lahf
push
arpl
adc
add
rorl
adc
lock
jno
jmp
mov
push
fiadds
popa
aad
push
cltd
cli
mov
xchg
insl
mov
sbb
jmp
or
sub
mov
int3
push
mov
cmp
movl
push
push
jae
fwait
adc
dec
inc
or
scas
xor
out
out
adc
sbb
ficoms
fstp
lock
push
adcb
aaa
out
lock
sbb
jno
mov
jb
push
hlt
add
xchg
push
cmp
test
out
and
pop
adc
push
adc
sbb
rcrl
dec
aad
and
dec
clc
mov
and
adc
cmpsb
push
xor
imul
push
movsl
pop
sub
pop
adcb
jmp
adc
mov
cmp
cmp
add
ss
mov
push
jmp
jmp
loope
jmp
adc
adc
les
adcb
mov
push
call
in
pop
pop
cld
mov
jp
repz
add
jmp
mov
sub
aas
fcmovbe
lret
mov
mov
inc
mulb
stos
push
dec
sahf
cld
lahf
ljmp
lea
mov
insl
and
xor
pop
out
cmp
shr
jle
mov
popf
daa
add
sbb
sub
enter
addr16
push
jmp
mov
leave
push
rcrl
add
mov
mov
insb
mov
ljmp
cmp
pop
stos
popa
shlb
cmp
add
cmc
arpl
push
jp
push
and
xor
adc
jmp
adc
add
int3
hlt
or
xchg
push
addr16
movsl
sub
jb
lods
xor
push
sbb
adcb
fnstenv
inc
pop
xor
add
lcall
pop
fists
and
cltd
test
adc
add
add
cmp
outsb
fsubr
xchg
adc
test
repz
and
ds
lret
pop
mov
mov
insb
mov
add
fs
push
jb
and
lods
xlat
outsb
cld
cmp
aas
popa
pop
imul
sub
mov
and
dec
test
fucomi
outsb
adc
outsl
pop
dec
not
push
lock
ja
aas
clc
aaa
ljmp
mov
and
je
cwtl
jg
adc
out
sub
ljmp
xchg
enter
mov
mov
sbbb
test
insl
rorl
jmp
mov
xor
iret
inc
lahf
push
push
jno
daa
adc
mov
cmc
mov
pop
stos
push
xor
fcoml
jge
xchg
xor
daa
sbb
repnz
pop
lock
mov
fists
cmpsb
shl
outsl
ficomps
jle
cld
shll
cmp
es
mov
dec
mov
inc
dec
mov
xchg
mov
push
fnstsw
xchg
sub
jae
and
pop
or
push
push
pop
mov
daa
cld
nop
ficoms
mov
xor
sub
cmp
or
dec
fstpl
push
incl
adc
mov
add
inc
sbb
ret
jbe
mov
loop
pop
push
pop
adc
cmp
pop
mov
pop
fwait
loopne
mov
repz
mov
rol
aam
addr16
dec
aas
adc
mov
adc
lahf
push
cmp
pop
pop
mov
cmp
jmp
andb
and
jg
add
stos
mov
jmp
xor
xchg
sbb
dec
or
sbb
testb
or
in
xor
xchg
add
jmp
and
jmp
pop
lds
inc
mov
push
push
iret
jo
dec
ret
inc
add
aaa
cmp
or
add
xchg
or
movsb
xor
xchg
adc
sub
pop
sti
adc
in
popf
gs
cmpb
or
data16
add
sub
jge
dec
jp
shrl
inc
sub
rol
xchg
pop
push
xchg
sub
scas
lods
mov
ret
icebp
push
bound
fcompl
sub
outsb
lea
out
jo
fs
dec
cmc
aas
push
cltd
shr
fadd
loope
repz
hlt
inc
pop
mov
jns
fistpl
cld
scas
add
adc
mov
xchg
cmp
out
fbld
mov
stos
add
cmpsl
sbb
in
lods
int3
lea
mov
or
hlt
es
mov
cmp
test
adc
mov
jmp
cs
xor
adc
dec
fwait
mov
mov
cltd
and
jmp
mov
sub
jge
mov
cmp
imul
aas
jae
jg
pop
jo
cs
inc
repnz
dec
or
push
insb
das
fsts
clc
jmp
fs
mov
dec
inc
cltd
outsl
icebp
pop
cmp
mov
jno
roll
dec
lds
xchg
loop
mov
pop
cmpb
add
sub
dec
push
subl
pop
sarb
aam
push
and
ret
mov
ja
arpl
in
sub
dec
sub
mov
inc
test
dec
dec
jb
jbe
cmp
sub
or
pop
jmp
xchg
adc
dec
out
xor
add
pop
je
mov
jl
sbb
ja
rolb
pop
push
push
adcl
inc
mov
leave
push
add
fnsave
pushf
setle
pusha
test
das
arpl
push
and
pop
mov
lcall
xchg
jne
fs
repnz
sbb
mov
out
and
imul
cmpsl
aas
push
adc
cmp
bound
inc
test
or
sub
push
xchg
cmp
jecxz
cmpb
add
ret
xchg
jge
ficompl
mov
pop
call
enter
xor
push
aas
sub
push
add
mov
dec
jb
jge
xchg
orl
inc
cmpsb
repnz
adc
or
mov
call
mov
gs
mov
push
push
pop
and
mov
jnp
adc
xchg
cmp
pop
aas
cld
lock
repnz
inc
cltd
pop
add
lods
or
or
dec
pop
adc
jge
sub
pushf
ss
push
fsubr
sub
inc
or
push
push
pop
nop
cmp
push
inc
pop
pop
popf
or
dec
stos
push
int
cltd
sbb
adc
dec
es
shr
adc
out
or
inc
push
dec
add
jmp
std
sub
pop
xlat
inc
jp
pop
ret
aad
outsb
lahf
mov
pop
fstpl
or
jnp,pn
insb
push
push
inc
fistpl
inc
loope,pt
pop
sbb
add
or
orb
cli
and
lods
pop
dec
sbb
xor
inc
fs
cmp
or
add
addl
outsl
inc
lss
xlat
popa
pop
xor
or
aaa
cmpsl
ja
pop
xor
pop
mov
push
or
clc
push
in
mov
repz
decb
mov
mov
sub
lret
ss
xor
nop
xor
test
add
pop
out
mov
dec
stos
cwtl
inc
fistpll
pop
test
arpl
sti
xor
leave
add
cmc
and
shlb
inc
mov
or
or
pop
pusha
sbb
testl
leave
jge
in
sub
jle
mov
mov
dec
pop
shlb
sbb
pop
aas
ljmp
xor
xchg
add
sbb
cmc
aam
out
cld
add
fiadds
dec
les
icebp
add
or
shl
loopne
cmp
testb
idivb
lret
inc
xorl
je
or
sub
push
shrb
xchg
adc
jbe
test
js,pt
data16
pop
sbb
clc
adc
pushl
cmpsb
push
adc
jmp
ret
dec
xor
add
and
add
adc
unpckhps
sbb
cmc
outsb
xor
or
jge
cmp
push
inc
dec
out
push
dec
mov
pop
pop
sbb
xlat
push
mov
clc
mov
add
jmp
pop
dec
call
cwtl
pop
je
test
mov
loopne
les
push
or
cmp
xor
daa
jmp
clc
sbb
test
or
out
jae
dec
push
jmp
mov
cmp
mov
sbbb
xchg
jmp
jmp
nop
iret
pop
lods
int3
mov
mov
mov
jmp
mov
jg
push
imul
or
mov
dec
daa
lahf
inc
xor
push
xchg
mov
add
cmp
js
stos
loopne
pop
mov
jbe
popf
fincstp
inc
negl
and
sub
and
pop
cs
mov
repz
inc
divb
in
call
rcrl
and
jmp
or
jb
xor
out
dec
add
aas
mov
jecxz
rcll
jg
jle
mov
mov
into
in
push
pop
cmp
imul
or
push
stos
cs
cmp
sub
pop
and
dec
aas
repnz
and
mov
xor
jg
jge
push
xor
shr
les
mov
add
cmp
jnp
jmp
call
xor
mov
pcmpgtb
push
jno
lahf
pop
outsb
adc
outsb
movsl
scas
push
adc
adcb
lahf
aam
inc
adc
fdivr
add
cmpsb
repnz
sahf
pop
fildll
icebp
adc
ret
sbb
stos
mov
xor
notl
test
mov
jno
pop
add
je
lock
mov
and
pop
hlt
decl
push
iret
add
and
push
mov
andl
lret
push
or
push
shl
dec
test
fcomp
or
push
sti
jnp
jecxz
lds
push
je
push
mov
jb
dec
sub
cmp
or
dec
mov
popf
sub
jge
cld
lret
push
jge
jmp
pop
xlat
gs
jmp
and
or
sbb
mov
sub
dec
pop
out
mov
jge
xchg
lret
int3
fmuls
add
mov
xchg
jno
mov
sub
and
mov
pop
iret
add
sub
push
loope
inc
cmp
add
out
push
inc
or
jbe
sub
jmp
xlat
sub
pop
sbb
or
push
xorb
cmpsb
jge
cmpsl
sbb
mov
inc
pop
out
cwtl
mov
dec
mov
push
pop
das
xor
lcall
jne
mov
ss
clc
mov
fsubl
jbe
add
pop
mov
outsb
and
pop
push
nop
and
mov
cmp
adc
pop
mov
daa
jno
inc
mov
jmp
jne
leave
pop
shrl
add
mov
xchg
pop
insb
xor
adc
push
jns
push
lds
add
adc
and
jne
xor
jmp
loope
dec
jb
clc
mov
shl
in
movsl
xchg
push
mov
pop
pusha
push
push
and
fucomi
xchg
jp
sub
shufps
add
testb
or
cmpsb
sub
mov
mov
das
mov
cmp
repnz
imul
xor
xlat
xchg
lret
popf
mov
mov
push
ds
adc
repnz
sti
dec
outsb
test
shlb
cs
pop
sub
addr16
popa
repnz
out
clc
push
add
mov
int3
popf
out
shll
inc
pop
iret
cmp
and
popa
inc
mov
inc
testl
sub
cmp
fdivs
mov
in
push
add
add
ja
sub
xor
je
dec
or
add
add
or
or
popf
and
mov
addl
sbb
ljmp
pop
and
popf
push
fsubrl
mov
cs
push
mov
loope
test
repnz
shlb
mov
ljmp
jmp
adc
sbb
lds
repz
sbb
cmpl
mov
xchg
fists
dec
mov
sub
mov
xlat
in
xor
pop
xor
xchg
or
push
mov
das
jmp
in
xchg
or
movsb
sbb
lock
incb
icebp
ficomps
pop
popf
or
cli
pop
xor
aaa
jg
int
mov
sub
sbb
in
lock
jg
jno
pop
nop
and
cli
adc
ret
or
pop
test
inc
add
jbe
adc
xlat
inc
xchg
sarb
xor
pop
or
mov
lea
lahf
add
rolb
jmp
test
jl
adc
pushf
roll
mov
mov
dec
lock
inc
ljmp
daa
add
lods
test
lds
test
lock
ret
cmc
xor
sub
repnz
out
dec
and
das
mov
ja
sub
lret
mov
push
push
mov
mov
add
cwtl
jo
jge
je
rcll
insl
mov
popa
xchg
rclb
hlt
adc
daa
test
push
mov
mov
push
adc
stc
pop
mov
mov
or
adc
cmpl
cli
push
xor
lods
lock
negl
out
or
out
fs
popa
cmp
fsubrs
or
jbe
jmp
xchg
jae
pop
or
jle
add
jmp
jne
imul
xchg
aam
xlat
push
jg
xor
inc
or
adc
inc
lret
and
push
xchg
add
fnstsw
push
dec
loop
insb
jnp
pop
aam
ljmp
push
lods
popf
push
xchg
inc
test
mov
sarl
mov
or
push
mov
testl
leave
sub
sub
in
rorb
test
mov
nop
mov
sub
cmpsl
push
lahf
push
sahf
in
push
add
inc
or
das
mov
daa
leave
loop
jns
loope
jo
das
inc
sbb
xor
jne
pop
mov
jmp
out
pop
pop
jmp
stc
mov
inc
pop
mov
test
xor
add
jg
adc
mov
push
mov
sbb
jae
and
push
cld
or
mov
sub
add
lret
and
sahf
jg
aam
and
jb
filds
add
cmp
incb
adc
dec
or
cltd
shlb
test
jo
push
push
stc
lods
outsb
mov
daa
push
jno
leave
mov
cmp
and
mov
pop
dec
sub
test
mov
push
or
or
popf
loop
push
je
adc
jmp
fwait
sbb
and
rorl
repz
out
adc
je
inc
add
stos
or
pop
testb
shr
cmp
nop
inc
and
pop
add
inc
and
pop
sub
out
push
jmp
mov
lock
pop
mov
stos
push
mov
sbb
add
cld
int3
ds
test
mov
sub
ds
ficoms
xor
adc
xchg
ja
sub
lock
cmpsb
loope
push
lods
insb
mov
sub
ja
mov
scas
push
mov
pop
scas
sub
cmpb
data16
mov
nop
dec
sbbb
in
ljmp
pop
sbb
mov
cmpsb
mov
pop
xchg
add
in
pushf
negb
jmp
sub
daa
and
push
push
insl
cli
fimuls
and
mov
mov
leave
xor
fdivl
leave
push
pop
test
push
xchg
xor
pop
and
add
sub
pop
or
aad
xchg
lcall
inc
leave
xor
xchg
xchg
lahf
jno
bound
push
jg
std
or
jmp
push
jle
fistps
add
cmpb
add
pop
cltd
add
repz
push
and
ljmp
ja
jmp
fs
loope
fdivs
cmp
in
sbb
loopne
jecxz
dec
movsb
pop
dec
stos
lds
mov
mov
dec
sub
push
stos
popa
sub
mov
xchg
pop
bound
sbb
adc
sbb
popf
addr16
pop
fiaddl
incl
inc
aad
lahf
adc
cmp
stc
or
js
push
mov
mov
pop
cmp
test
add
jg
into
inc
or
mov
daa
ror
or
xor
mov
pop
mov
scas
test
jle
xchg
jl
das
push
and
push
mov
andb
cmpsl
xchg
pushl
bound
je
das
test
scas
mov
xchg
in
mov
loop
loope
rcrl
mov
notl
inc
mov
jmp
xor
movsl
dec
js
push
pop
inc
cmp
arpl
into
and
sbbb
adc
pop
xchg
jb
nop
test
add
subl
hlt
arpl
xchg
xor
xchg
int
add
adc
jmp
push
mov
ljmp
cmpsl
gs
out
cld
or
sbb
iret
add
rolb
or
dec
mov
cmc
mov
mov
into
mov
loope
push
pop
mov
or
jns
push
push
shlb
rcll
push
cmp
mov
add
add
loopne
out
jo
push
call
repnz
ja
out
data16
pop
sti
jl
jmp
cld
nop
rclb
cwtl
inc
lods
jne
pushf
and
shlb
add
sub
cmp
jmp
push
aas
mov
or
out
jnp
or
cmp
jp
lods
push
dec
movsl
push
in
add
jmp
pop
pushf
fwait
dec
aam
inc
lods
jg
add
push
in
push
push
out
sbb
add
push
out
stos
mov
test
js
dec
adc
xor
pop
mov
push
cli
push
std
incb
inc
pop
or
xchg
and
notb
lds
outsb
mov
ss
pop
mov
push
push
add
repz
repnz
out
inc
add
loope
pop
fmuls
xchg
or
and
hlt
dec
pop
arpl
fists
ljmp
or
adc
icebp
mov
jmp
cmp
ja
jb
mov
ljmp
fxch
les
xchg
int3
unpckhps
inc
adc
lret
fcompl
aad
shll
rolb
negb
and
sub
repz
push
mov
out
mov
out
or
xchg
fbld
mov
and
pop
mov
pop
ret
out
jae
dec
filds
incb
sbb
and
es
and
sbbl
movsl
fnsave
sbb
or
jg
jb
pop
mov
xchg
mov
push
dec
xor
shlb
lods
les
xchg
pop
cld
pop
mov
pop
clc
pop
enter
jmp
xor
bound
fnstcw
lea
cmp
sub
lcall
in
xor
inc
imul
jmp
push
loope
and
cmp
sbb
pop
push
cmpb
rorb
ljmp
test
imull
cmp
ret
popf
rorl
pop
adc
add
push
push
lret
loope
aas
aas
inc
xchg
je
into
scas
pusha
or
or
rcl
test
test
aam
daa
jecxz
cs
dec
in
pop
mov
leave
pop
lds
xchg
xor
sbb
mov
jge
sub
fcomps
lret
mov
call
jg
into
mov
aas
test
test
cs
push
sti
subb
and
jge
ret
push
bound
scas
in
mov
jnp
dec
push
mov
lods
jge
mov
sbb
push
jnp
mov
pop
xchg
cmc
arpl
pop
fnsave
aaa
push
mov
lea
add
loop
les
loop
jne
inc
lods
outsl
or
mov
cmp
call
mov
xchg
aad
fistpl
sbb
and
adc
pop
push
add
cmc
xchg
loope
jne
adc
scas
repz
shll
call
pop
push
orb
mov
lods
jp
stos
dec
ss
or
xor
inc
dec
daa
aas
test
lret
and
mov
outsl
sarb
mov
loop
or
add
movsl
shll
push
aam
add
jno
or
std
or
xchg
sub
call
sarl
inc
in
or
push
in
push
popa
push
rorb
fsubl
mov
lock
pop
sbb
or
mov
out
pop
stos
std
adc
mov
rolb
in
sub
adc
mov
and
les
push
jo
clc
pop
xorb
outsb
pop
negb
pusha
inc
or
cld
xor
jmp
jae
cmp
push
adc
loop
mov
dec
sbb
jp
nop
cmp
fstpt
mov
out
pop
stos
sub
cli
pop
push
out
add
cmp
push
imul
movsb
mov
jg
push
arpl
cmpsl
ja
mov
mov
dec
jmp
orl
inc
mov
outsb
push
xchg
pop
inc
and
addr16
shrb
xchg
pop
mov
insl
flds
inc
jb
inc
mov
nop
push
add
mov
xor
push
push
push
movsl
mov
aam
jg
xor
stos
leave
jmp
inc
mov
fdivr
repnz
in
scas
jl
insl
out
jp
addr16
loop
fiadds
adc
mov
test
jmp
adc
cmc
cmp
sbb
and
xor
pop
push
and
jne
adc
or
in
outsl
inc
and
nop
in
out
dec
pop
inc
leave
sarb
jge
dec
imul
xchg
push
fsub
or
push
movsb
ljmp
cs
loope
cmp
ds
mov
pop
adc
sbbb
add
subb
push
adc
jne
mov
push
or
pop
sbb
lds
dec
pop
repz
or
out
pushw
push
sbb
mov
popa
dec
outsl
lds
jmp
push
movsb
jnp
xchg
das
adc
cld
ljmp
iret
push
jg
pop
mov
movsb
ret
xor
imul
add
jg
subl
aad
jp
frstor
jg
and
insb
loopne
jmp
pushf
pop
push
call
xchg
stc
xlat
out
arpl
dec
xchg
pop
clc
dec
dec
pop
stc
ljmp
fiaddl
fiaddl
mov
sar
jp
stos
arpl
stos
mov
shrb
jmp
mov
js
pop
or
push
push
jmp
pop
das
jmp
call
ds
jne
jmp
enter
subl
cmp
xor
jno
jmp
mov
xchg
pop
xor
fsts
cmpsl
adc
push
scas
mov
dec
inc
jb
fs
cld
popa
push
test
add
sub
or
inc
push
out
and
inc
or
idivb
xor
ja
imul
xchg
jg
xchg
sub
add
inc
call
sbb
mov
dec
push
pop
imul
sub
push
mov
cmp
add
xor
add
test
jle
js
rorl
movzwl
xor
bnd
mov
fwait
inc
int
push
sub
sub
mov
dec
pop
mov
rcrl
mov
mov
mov
and
adc
mov
or
ret
mov
or
jmp
mov
xor
imulb
je
inc
jecxz
adc
ret
mov
add
faddl
xor
lcall
or
decl
rorb
leave
repnz
es
icebp
pusha
leave
push
sub
mov
insl
or
jae
in
adc
imul
sub
stos
les
pop
inc
pop
inc
jle
mov
movsb
in
lods
dec
dec
mov
jno
pop
push
inc
mov
lds
sub
xor
jo
mov
fwait
pushf
adc
push
ljmp
into
arpl
dec
mov
and
mov
and
shlb
imulb
imul
xlat
mov
pop
pop
adc
or
int3
push
adc
sub
gs
ret
push
loope
movsb
into
pop
daa
jg
add
dec
inc
xor
sbbb
dec
enter
pop
xlat
cmp
mov
cmpsb
xor
push
mov
cld
movsl
stos
mov
jns
add
scas
push
lcall
call
inc
jecxz
int
pop
shll
fisttps
sarl
adc
inc
out
jo
adc
adc
xchg
pop
jmp
icebp
leave
mov
orps
jecxz
out
fnstsw
in
cmpsl
jno
jp
adc
add
xchg
mov
sbb
stos
movsl
add
jmp
int
jle
add
mull
in
pusha
push
or
fists
lods
adc
sbb
add
out
add
inc
add
faddp
and
push
fsubrl
cmp
scas
loope
push
jo
enter
ret
jecxz
pusha
into
add
sub
popf
call
bound
out
add
pop
mov
fwait
mov
enter
push
out
mov
pop
popf
cmp
sub
lea
addl
xchg
push
lea
in
push
and
add
dec
add
or
sub
jecxz
jae
imul
and
jmp
sahf
pop
mov
flds
adc
pop
push
mov
jp
cmovnp
cmp
loopne
sub
jns
cs
mov
or
jmp
orb
xchg
inc
fsubrl
insl
iret
mov
lret
cmp
mov
cmp
pop
sub
call
push
mov
mov
cs
jmp
xchg
pop
orb
daa
and
xor
mov
shrb
xor
inc
ret
loope
mov
dec
jge
xchg
mov
sbb
cltd
dec
into
cmp
call
lret
add
cs
xor
pop
bound
mov
mov
mov
xlat
insb
dec
loopne
mov
push
test
mov
add
mov
shl
jo
adc
jmp
mov
inc
add
outsb
in
xlat
pop
lds
cmc
ret
or
sti
movsb
pop
mov
popa
out
adc
sub
or
arpl
daa
adc
clc
fyl2x
mov
mov
mov
push
cmpl
and
ret
fidivrs
lods
mov
pop
sub
mov
adc
or
mov
xor
loopne
jno
mov
mov
and
sub
sti
sbb
das
rcll
sbbb
push
pusha
shr
subl
mov
jge
push
jecxz
stc
cmp
sbb
pop
xchg
lds
mov
loope
or
in
mov
pop
and
pop
push
shll
jno
ljmp
movsl
mov
decl
push
jmp
sbb
add
stos
jae
mov
inc
jmp
mov
push
mov
add
xor
cli
das
mov
push
notl
add
jmp
push
repz
sti
jge
xchg
add
fdivp
xchg
xchg
pop
mov
add
std
stc
mov
out
fs
sub
sub
pop
shlb
jmp
std
movzbl
mov
cld
inc
dec
leave
or
jecxz
clc
sbb
jg
test
or
fsubs
inc
dec
jge
daa
cmp
negl
add
sbb
hlt
enter
or
adc
clc
hlt
add
dec
sbb
sbb
test
mov
jb
pop
push
pop
call
mov
xchg
add
cld
popf
add
mov
mov
sbb
xchg
xor
loop
push
pop
jo
mov
mov
inc
je
stc
jle
jmp
mov
add
pusha
repnz
or
jne
aam
mov
dec
in
in
and
mov
xlat
pop
jne
aaa
push
jmp
pop
outsb
or
sub
jmp
add
aaa
sub
adc
pop
sbbb
cld
push
sti
add
iret
cmpsl
shrl
inc
pop
fisubl
adc
jmp
sub
or
aam
in
filds
jne
loope
ljmp
out
push
jae
xchg
jle
jno
and
add
push
das
sbb
sbb
pop
jl
into
sarb
dec
call
dec
cli
push
and
jmp
pop
push
insl
jo
xchg
xchg
or
mov
sbb
xor
loope
and
mov
xor
gs
inc
jmp
dec
or
push
lcall
mov
popf
cmp
pop
rcll
in
out
add
jp
stos
clc
sub
inc
and
push
or
cmp
or
pop
push
lcall
sbb
jmp
and
cwtl
outsl
dec
jle
and
fstl
push
dec
mov
shlb
cli
cld
jmp
push
aad
dec
mov
lds
xlat
mov
popa
lret
bound
pop
aaa
pop
and
dec
leave
add
xor
jmp
xor
stc
sub
cmpsl
clc
adc
fwait
add
fbstp
mov
sti
add
push
mov
inc
jne
and
inc
xor
inc
push
mov
in
ret
mov
sub
jge
out
pusha
fstpl
popa
add
or
jmp
inc
popf
sub
in
or
cmp
jne
xchg
mov
daa
subb
icebp
adc
inc
fisubrs
outsl
push
xor
test
nop
mov
in
cmpsl
jo
push
xor
jle
cli
sbb
sbb
sbb
adc
rcrl
mov
xor
pop
mov
add
unpcklps
stos
mov
mov
cmp
add
cwtl
push
push
push
or
xchg
inc
push
mov
lret
daa
sub
sbb
cs
pusha
adc
mov
mov
jmp
shr
or
aad
int
not
das
inc
cmpsb
mov
dec
mov
popa
rcrb
shr
std
push
call
and
mov
push
dec
ss
out
adc
dec
loopne
jecxz
in
and
outsl
mov
xlat
jno
dec
je
pusha
movsbl
push
push
mov
adc
pop
jbe
pop
jp
add
mov
cltd
dec
insb
adc
out
jmp
and
aaa
xchg
mov
rcrl
mov
sub
jmp
cwtl
pop
push
inc
jmp
shrl
jmp
in
and
in
fwait
mov
jbe
or
orl
cs
jmp
divb
icebp
aaa
push
shrl
inc
jo
add
andb
jns
outsb
jmp
loope
dec
in
push
nop
sub
out
push
aas
dec
pop
push
xor
jg
repnz
and
imul
pop
inc
mov
mulb
inc
mov
xlat
sahf
hlt
sub
push
fdivp
lea
inc
cwtl
out
notl
jle
in
leave
dec
dec
sbb
repnz
into
outsl
xchg
loopne
pop
testl
cmp
aaa
popa
mov
js
shlb
out
add
jns
push
jmp
dec
mov
out
mov
cmp
enter
sbb
not
mov
lock
out
inc
pop
jmp
mov
pop
fcoms
roll
iret
or
in
dec
jmp
pop
mov
popa
jmp
sbb
mov
cwtl
push
push
stc
xchg
add
in
dec
add
lcall
sub
rol
stos
cld
pop
xor
pop
rcrl
les
out
cld
push
pop
cld
ljmp
mov
push
das
mov
add
sub
pop
pop
pop
push
or
mov
dec
pop
not
shrl
fwait
in
mov
test
in
xchg
mov
pop
popf
push
lcall
add
hlt
into
lcall
shrd
inc
mov
lock
shll
and
xor
mov
mov
ficoml
and
dec
or
adc
jb
dec
shrb
mov
or
js
das
sbb
insb
cltd
daa
aam
je
jo
sub
fbstp
fmul
jmp
push
jo
push
add
es
aad
push
mov
adc
or
iret
dec
push
cltd
push
jae
push
daa
push
push
loope
pop
inc
or
xor
lds
cltd
dec
mov
xor
push
jo
lahf
jne
cmpsb
imul
sbb
adc
pop
sbb
mov
pop
imul
add
mov
push
jl
xor
add
lds
adc
fs
out
movzbl
pop
je
or
xchg
pop
push
push
push
pop
xchg
pop
das
adc
pop
sahf
xor
push
and
sbb
adcl
pop
push
inc
jmp
movsb
cmp
inc
adc
adc
filds
lods
pop
lcall
call
int3
dec
cmpsb
jo
jmp
mov
push
adc
jge
iret
imul
mov
adc
mov
sub
int
fiaddl
and
cwtl
add
add
or
rclb
sbb
js
sub
ds
dec
mov
cmp
insb
pop
mov
subb
add
add
cmp
mov
xchg
dec
mov
mov
flds
mov
pop
insb
into
pop
dec
lea
stos
adc
jnp
out
pop
rcrl
inc
mov
cmp
mov
add
pop
adcb
jno
and
or
je
xor
pop
mov
push
push
push
mov
cmpsl
add
jmp
mov
enter
pop
pop
jbe
push
jnp
jle
mov
jmp
mov
mov
pop
daa
mov
pavgw
push
cs
adc
imul
inc
lock
push
jne
sub
fiadds
icebp
insl
addb
or
pop
xchg
inc
fs
pop
and
out
iret
ja
push
dec
inc
mov
sub
fdiv
rcl
jnp
jge
lret
popa
fistpll
repnz
ret
aad
aam
push
sbb
clc
or
shrl
push
pop
mov
es
adc
mov
or
test
je
or
dec
or
orb
mov
les
push
clc
or
push
jle
pop
add
pop
sub
sub
test
js
leave
dec
add
mov
mov
loop
xchg
xchg
and
call
pushf
sti
in
in
in
push
push
push
dec
dec
mov
xor
clc
scas
dec
sahf
dec
decb
mov
call
pop
push
leave
adc
xor
xor
bound
mov
cmc
or
gs
aas
and
in
mov
fldln2
loop
in
mov
out
inc
dec
enter
cmp
adc
sub
cmp
ljmp
sbb
fnstsw
push
inc
and
ret
sbb
mov
jmp
pop
or
dec
jmp
into
inc
imul
xor
adc
mov
cli
jge
loop
jle
loop
and
clc
sub
or
jns
inc
mov
sub
fcmovb
dec
stos
push
push
out
pop
dec
xor
mov
outsb
xlat
ljmp
jp
pop
shlb
sti
dec
fdivrp
insb
mov
sbb
mov
jp
sub
rolb
and
mov
daa
inc
push
dec
push
in
push
repnz
mov
mov
leave
lcall
iret
mov
add
loope
sub
push
or
and
mov
cmp
add
add
imul
int
sbb
pop
dec
and
or
arpl
push
pop
std
xchg
xchg
push
mov
in
sub
adc
shll
lods
push
sar
dec
cmp
sbb
in
adc
mov
not
inc
lock
sub
rcrb
adc
pop
push
mov
fists
pop
push
xchg
add
jle
push
adc
dec
jnp
sahf
dec
aaa
adc
sbb
push
test
fs
xchg
push
das
add
xchg
mov
xor
es
pop
or
cmp
roll
nop
or
insl
dec
shlb
fmuls
les
jmp
and
shl
adcl
and
xchg
and
icebp
sbb
call
push
sarl
cltd
adc
mov
add
xlat
jbe
dec
and
dec
fsubs
in
cmp
iret
in
cmpl
cmp
ss
ljmp
or
cmp
daa
sbbb
and
adc
push
cmpsl
loope
mov
int3
lods
add
sbb
in
mov
push
push
or
pop
dec
or
mov
inc
jmp
rolb
inc
shl
sub
incb
mov
dec
popa
push
mov
push
pop
jg
jge
lods
adc
cmp
js
outsb
aaa
xor
xor
jo
mov
dec
rdtsc
ljmp
mov
sbb
dec
aas
clc
add
push
dec
inc
out
jnp
cmp
fisttpll
aam
sbb
or
adc
xchg
pop
mull
mov
mov
sub
jo
push
int3
repz
mov
not
or
fistpl
jnp
das
aam
mov
fs
pop
popf
je
imul
add
pop
sub
outsb
adc
jecxz
jle
jl
and
jg
pop
sarl
cs
daa
repnz
movsl
pop
clc
mov
mov
shll
ret
fsubrs
push
test
fildl
sub
mov
xor
fldt
outsl
test
loop
sarb
jmp
jmp
sub
pop
xor
ja
cli
lcall
in
iret
rolb
add
fwait
shr
in
repnz
loop
or
push
decl
aam
pop
stos
ffree
or
push
dec
sub
imul
xchg
mov
std
scas
out
scas
xor
mov
sti
stos
in
lds
je
movsl
mov
sahf
inc
xchg
dec
cwtl
mov
sub
add
pop
add
ret
arpl
das
add
data16
lods
mov
cmp
call
dec
daa
ja
sub
lret
es
adc
clc
ja
push
push
add
ds
add
jg
push
cmp
loope
sbb
ja
jae
fs
bound
jo
imul
arpl
or
lea
incl
clc
pop
cmc
movsl
orl
notb
jmp
out
mov
cli
xor
jmp
cmp
cld
movb
movsb
adc
dec
jg
add
and
mov
mov
into
imul
fimull
xorl
ja
jae
mov
aaa
and
enter
je
jp
push
inc
inc
cmp
xor
jge
push
add
or
xor
pop
add
popf
adc
sub
je
and
fstpl
insb
enter
jb
rcr
jmp
les
adc
and
cmp
insb
sti
cld
outsl
mov
dec
es
mov
shr
test
loopne
sbb
and
lret
daa
push
lods
or
in
sub
xchg
dec
pop
jge
cmp
rcll
mov
push
pop
nop
mov
fcmovnu
js
std
in
das
pop
cld
lods
push
pop
jmp
push
add
in
pop
in
xchg
and
or
sub
inc
jg
or
incb
push
sti
popf
movsl
xchg
lods
mov
mov
mov
pop
cli
mov
je
aas
daa
into
and
cmp
pop
mov
lods
leave
push
stos
add
pop
pusha
mov
cltd
outsl
rorl
xchg
adc
sbb
add
cmpsb
jecxz
into
jmp
add
rcll
clc
pop
out
js
not
lods
push
jge
xor
pop
popa
shrl
gs
and
mov
repz
mov
mov
adc
pop
xor
lods
cmp
mov
neg
pushw
andb
cld
in
lock
dec
fimull
ljmp
imulb
jmp
into
aaa
and
pop
sub
loop
xchg
lods
or
cmp
ljmp
cwtl
lock
pop
insb
fsts
lods
mov
mov
mov
das
insb
ss
cmp
iret
add
test
adc
frndint
jb
jmp
shll
cwtl
js
pusha
add
dec
adc
dec
push
test
clc
out
sub
imul
decb
insl
jmp
and
hlt
addr16
lret
imul
imul
in
arpl
lock
adc
daa
jmp
push
push
inc
insb
xor
stos
inc
push
pop
nop
xor
mov
or
xchg
in
dec
xchg
ljmp
ja
push
rorb
mov
push
pop
mov
lret
or
and
lods
int3
inc
mov
test
push
fisttpll
loop
std
pop
jb
add
add
fadds
push
stos
dec
stos
popf
and
in
daa
pop
pop
stos
mov
add
pop
xor
add
or
ret
fisttpl
popa
mov
ss
addr16
adc
add
adc
push
push
jg
add
push
sub
hlt
push
inc
stos
xchg
jmp
sahf
sub
mov
and
add
imul
orb
cmp
rclb
add
aas
mov
xchg
mov
out
adc
scas
add
xchg
mov
jge
das
add
mov
mov
dec
inc
inc
dec
outsb
mov
push
ret
addb
roll
fs
or
xchg
or
jno
cld
sti
int3
xchg
and
imul
push
cld
dec
add
sub
inc
sbb
neg
adc
jmp
pop
dec
push
std
out
test
inc
mov
sbb
repz
sub
jg
sbb
dec
enter
bound
jb
xor
jb
std
sbbl
pusha
mov
pop
insl
push
cmp
pop
adc
or
and
mov
push
lahf
test
xlat
mov
push
push
push
sbb
lods
lods
xchg
or
aad
pop
mov
test
or
mov
push
pop
pop
lret
pop
daa
jmp
incb
lods
fsubrs
or
bound
xor
push
xchg
lods
vpunpcklbw
dec
repnz
mov
leave
mov
or
sbb
cli
and
fwait
lcall
mov
mov
loop
push
xor
data16
cmp
popa
dec
loopne
cmpb
sub
xchg
push
shll
sub
hlt
test
mov
mov
std
loop
adc
inc
add
push
and
divps
out
movb
int3
jne
add
add
pop
xor
pop
clc
mov
enter
ljmp
pusha
not
push
mov
mov
pop
pop
in
push
or
xor
mov
bound
jge
fildll
loopne
sti
pop
fists
lahf
out
lahf
push
loop
lea
sbb
or
stos
adc
ljmp
cmp
sbb
stc
sbb
sub
inc
rcrb
push
icebp
dec
scas
mov
movsb
ds
andb
sub
pop
jg
notb
mov
mov
into
std
cld
fsts
sbb
nop
sub
fdivrs
pop
pop
ret
ds
shlb
add
clc
jmp
or
ljmp
add
stos
arpl
scas
ds
push
jecxz
scas
inc
addr16
add
mov
lret
les
idivl
mov
hlt
scas
loope
imulb
ret
jmp
out
jge
mov
stos
cmc
add
enter
ret
adc
sub
add
jmp
push
inc
andl
jmp
xchg
push
xchg
jl
pop
push
adc
sub
cmpsb
mov
add
cmp
or
mov
push
cmp
cli
rolb
jnp
sub
movl
cmc
out
adc
dec
out
imul
mov
jmp
and
mov
ljmp
loopne
mov
push
popf
rorl
out
in
sub
nop
mov
jg
sti
pop
sbb
imul
add
lock
jle
add
cmp
jg
jmp
fildl
dec
adc
push
push
xchg
cmp
push
lcall
inc
jge
mov
rcll
sahf
push
loop
or
gs
pop
jecxz
adcl
aas
xor
popa
divb
cmp
xchg
push
dec
cmp
xchg
xor
pop
sbb
cmp
xor
pop
mov
into
les
mov
pop
in
aas
add
push
pop
rorl
out
fists
and
mov
jmp
cs
add
dec
js
out
daa
cmp
jns
daa
cmp
jne
mov
and
fwait
xchg
scas
inc
xchg
and
loopne
idivl
mov
xor
xtest
jmp
lods
sub
push
shlb
add
sub
ds
inc
cmp
cwtl
xchg
pop
adc
js
add
gs
sbb
sub
out
pop
into
sub
mov
jle
ret
aaa
push
movsl
scas
mov
in
seta
inc
mov
mulb
movsb
pop
pusha
stos
xor
out
inc
stos
enter
pop
loope
or
jg
popa
or
inc
sub
pop
pop
push
push
pop
cmc
cmp
arpl
lds
cmp
xor
addr16
xchg
jmp
adc
add
loopne
mov
push
loopne
in
popf
pushl
push
sarb
push
lahf
outsl
ficoml
or
aad
test
hlt
xchg
pop
aad
pop
jmp
movsl
testb
cmp
xchg
pushf
pop
lret
pop
push
push
jmp
rcll
fnstenv
shl
push
xchg
ret
lds
mov
stos
xchg
ficompl
mov
jmp
jb
lahf
adc
pusha
pop
cmc
adc
mov
lods
mov
faddl
push
xor
mov
and
adc
fldenv
es
sub
stos
mov
xlat
cs
push
popf
pop
push
dec
jge
xchg
popa
mov
dec
dec
ret
add
sub
sbb
lea
popf
inc
mov
mov
pop
mov
insl
nop
roll
mov
jg
in
test
push
outsl
ds
dec
dec
stos
push
lahf
or
push
pop
push
jmp
add
push
or
insb
sub
and
mov
push
sarb
dec
push
cmp
sti
pop
mov
xor
xchg
push
xor
ljmp
and
mov
jge
pmuludq
es
mov
js
enter
jmp
ja
xor
clc
ret
pop
repz
icebp
dec
lock
push
and
loop
inc
or
jb
scas
testb
lret
in
mov
push
xchg
cwtl
test
adc
sbb
daa
xor
sub
cmp
mov
mov
dec
cmp
pusha
cmpsb
push
adc
mov
sbb
jb
xchg
cld
ret
dec
pop
sbb
pop
inc
inc
sbb
lret
xor
addl
pop
sub
pop
add
jmp
rorl
lea
pop
push
jne,pt
pushf
or
lods
ret
pop
mov
push
push
pusha
push
ret
hlt
rep
push
or
xor
js
push
lock
inc
repz
pop
mov
outsl
jo
xchg
jg
inc
aad
and
add
jle
jns
mov
push
dec
lret
ljmp
push
dec
cltd
clc
jo
mov
sub
sbb
jb
and
fisubs
fs
gs
add
dec
inc
mov
imul
push
ret
or
add
or
cmp
test
dec
out
fidivl
adc
loope
xchg
jae
loopne
pusha
cltd
jmp
imul
les
add
sub
aam
xchg
dec
sub
jo
sub
ds
sub
shlb
xchg
pop
cmpb
loop
aam
loope
jmp
leave
movsl
ret
cld
push
rcrb
lods
cmc
insb
xchg
in
mov
or
pop
rorl
popa
ret
adc
add
cli
xor
xchg
push
or
cltd
push
divb
pop
sbbb
pop
jg
pop
dec
push
xor
adc
in
xchg
add
pop
arpl
mov
xorb
push
les
psubsw
mov
imul
addl
aas
aad
test
inc
in
add
iret
insb
cmp
jmp
fstl
pop
mov
push
push
mov
mov
xor
dec
pop
xlat
es
cmpsl
jb
pop
and
sbbl
popf
pusha
mov
in
movb
mov
jge
pop
sbbb
adc
push
pop
aas
push
add
ja
xor
insb
mov
flds
push
xor
ret
incb
popa
decl
adc
adc
inc
dec
scas
inc
jbe
cs
sub
sarl
out
dec
cli
add
adc
mov
cs
add
cmp
out
xor
lret
scas
and
mov
add
shr
xorb
push
xor
fs
aad
inc
shlb
jb
inc
jge
mov
test
daa
or
sub
inc
dec
jnp
push
push
jo
xor
and
jmp
or
fisttpll
push
daa
jge
or
lods
xchg
add
push
scas
daa
jg
cmp
es
out
or
data16
and
fidivl
out
stc
inc
outsl
xor
ds
out
mov
or
push
add
pop
sub
cli
stc
add
jge
xchg
mov
add
cli
lea
mov
test
xor
loope
int3
mov
xchg
out
aas
test
sub
dec
lret
mov
loopne
jmp
into
loopne
jge
mov
or
jmp
cmp
jmp
ret
adc
jmp
repz
xor
mov
int
xor
cmp
or
dec
pop
aad
add
mov
fsubl
push
lds
xchg
std
and
loop
xor
ret
stos
cwtl
mov
xor
subl
sar
call
dec
and
sbb
arpl
pop
mull
fimuls
adc
loope
imul
pop
shlb
jg
dec
adc
in
pushl
in
jmp
movsb
ret
push
cmp
pop
add
pop
and
push
idivb
adc
lea
shll
in
mov
mov
fsub
ret
cld
push
daa
or
mov
mov
and
aaa
push
mov
cmpsl
add
lahf
outsl
mov
push
cmp
out
sub
pushf
loop
jnp
or
ja
inc
pop
repnz
mov
insl
xchg
nop
push
xor
daa
pop
ja
inc
ret
sarb
jbe
inc
jle
cwtl
repz
jnp
dec
das
mov
ficompl
cmc
or
lahf
pop
jmp
pop
stos
imulb
dec
ds
pop
ret
xor
add
push
shll
add
jmp
or
ja
rcl
dec
stos
and
in
imulb
mov
decb
push
jecxz
cmp
jmp
mov
sahf
sbb
add
dec
pop
mov
into
xor
or
push
or
fwait
pop
pop
bound
into
loope
lds
lret
ficompl
push
jmp
adc
xchg
add
add
inc
cvtpi2ps
fstps
cltd
mov
or
xchg
jl
push
and
or
mov
or
pop
push
add
pop
mov
icebp
jp
inc
mov
iret
ja,pn
mov
xchg
sbb
fiaddl
or
push
dec
pop
xchg
and
sub
popf
jge
scas
xchg
cmp
adc
and
shrb
adc
pop
push
idivl
mov
or
subps
or
test
pop
orb
jns
test
ret
push
mov
mov
jmp
pop
fs
shl
jecxz
push
lahf
jb
mov
inc
jmp
sbb
jmp
dec
jecxz
jl
add
sti
mov
inc
fsincos
add
mov
outsl
sub
push
push
add
ljmp
and
fmull
sub
sbb
sbb
movsb
pop
xchg
inc
jmp
test
sub
fstpl
xchg
std
pusha
add
cwtl
push
in
sbb
inc
or
add
insl
mov
scas
adc
push
subb
inc
leave
cwtl
push
inc
rcrb
jne
xor
add
fcomps
jmp
mov
rorb
lods
dec
dec
scas
mov
dec
rcl
jno
inc
or
pop
dec
push
mov
cmp
pop
mov
xor
popa
into
dec
pop
imul
cs
loop
dec
adcb
cmp
and
push
aam
inc
ret
cli
push
cmp
push
and
jmp
add
fnstcw
inc
outsb
pop
lods
mov
push
iret
cmp
sbbb
out
sub
adc
into
and
fmull
jno
test
push
mov
mov
mov
jecxz
sub
stos
or
xor
ficoms
imul
jno
out
das
push
and
data16
sbb
xchg
jg
enter
insl
push
cs
dec
or
das
aad
cli
adc
icebp
push
push
pusha
adc
iret
mov
and
mov
shll
fldcw
rep
daa
ret
ret
bound
sbb
push
xor
mov
lods
xor
mov
das
inc
cmc
fadds
mov
mov
nop
and
mov
ds
sar
jg
fnstsw
and
fwait
into
add
cs
scas
pop
xchg
das
add
loop
jne
adc
outsb
rcrb
imul
sbb
jnp
mov
pop
es
cmp
roll
lock
das
mov
mov
cwtl
data16
out
mov
or
test
xchg
int
and
push
rcll
fimull
pop
nop
and
test
push
lods
jmp
pop
lods
xchg
fmuls
mov
fidivs
xlat
shr
es
popl
jg
dec
int3
push
and
cltd
cmc
and
xor
lods
rol
push
aad
add
jmp
mov
sub
add
fprem
dec
hlt
adc
and
add
ffree
sub
pusha
fistps
or
jl
push
cli
or
push
call
out
lret
outsl
jle
sub
repnz
mov
lock
dec
mov
jg
fsts
mov
inc
sub
imul
repnz
cmp
test
cmp
xchg
repz
sarb
leave
rclb
mov
push
fwait
add
and
jbe
enter
aaa
or
ja
dec
push
mov
rclb
out
outsl
pop
int
lock
xor
mov
jmp
inc
jle
mov
aam
add
add
pop
je
xchg
int
pop
mov
push
xchg
subl
and
xor
les
and
mov
in
dec
pop
mov
sti
pop
push
ljmp
fadd
push
dec
mov
sub
out
imul
push
stc
jp
mov
mov
jmp
movsb
leave
sbb
mov
lock
sbb
incb
pop
sub
adc
sarb
push
mov
add
pop
arpl
xor
in
push
testl
das
push
outsb
add
mov
and
add
lods
mov
xchg
jae
xchg
pop
jno
dec
cwtl
xor
jb
jne
add
inc
or
mov
xlat
stc
adcb
shrl
mov
imul
push
insb
nop
es
dec
aaa
mov
not
addb
jns
push
and
popf
fmulp
inc
xor
shr
add
xchg
cli
fldl
pop
mov
mov
dec
cltd
xchg
popf
ret
clc
addr16
mov
mov
repnz
repnz
repz
sub
jmp
popf
add
push
mov
movsb
xor
lods
inc
test
and
addl
ljmp
add
add
pop
in
clc
pop
in
mov
mov
out
adc
cmpsl
add
add
jge
sub
rorb
cmp
negl
inc
mov
push
repnz
add
mov
inc
or
add
shlb
pushf
mov
jne
loop
push
shrl
cmp
flds
jmp
ljmp
js
sbb
sub
push
cmc
imul
mov
outsb
mov
mov
push
pop
les
and
sbb
jne
sub
mov
rclb
cltd
or
in
xchg
jbe
push
add
enter
fisubrs
aad
add
sub
mov
out
inc
xlat
cmp
add
pop
pop
jmp
lret
faddl
jge
subb
pusha
dec
push
cmp
das
mov
add
inc
xor
dec
je
mov
mov
adc
fcomp
push
sbb
jecxz
sub
pop
or
pop
add
mov
cmp
pop
jno
jg
clc
and
testb
ds
push
icebp
adc
xchg
inc
enter
and
jmp
mov
adc
ret
adc
icebp
dec
outsl
daa
fs
pusha
xchg
inc
cmp
lea
or
mov
inc
stos
mov
stos
cmpsl
or
jnp
out
or
push
js
push
add
ss
push
outsb
clc
arpl
cmpl
lret
shlb
lahf
cmp
mov
push
jg
gs
xchg
xchg
test
xchg
lods
test
out
aas
and
fisubl
jo
mov
and
or
cld
or
lods
sub
addb
pusha
das
inc
sub
mov
sbb
sub
inc
mov
enter
arpl
shll
int3
push
ljmp
movlps
pop
pop
sbb
ds
adc
xchg
fdivl
ja
and
jae
fsts
xor
and
ficoms
lahf
sbb
testl
push
sub
xlat
mov
inc
jge
fwait
orb
lock
dec
into
fidivl
push
add
push
push
mov
jmp
push
add
fildl
inc
push
ffreep
jnp
std
lds
ss
sbb
daa
addl
push
sbb
adc
push
xor
cmpsb
adc
mov
add
and
or
sbb
push
sbb
adc
lcall
jmp
out
xor
mov
sar
or
or
push
mov
call
or
bound
and
mov
or
shlb
mov
or
daa
cmp
cmp
jmp
jns
in
add
or
sbb
clc
into
shll
xor
xor
or
lea
movsl
mov
mov
lret
dec
in
or
sub
sub
insb
addb
std
or
mov
mul
add
add
xchg
add
add
push
add
and
cmc
lock
das
mov
out
push
lahf
rclb
xchg
inc
jbe
arpl
or
sub
jno
add
sbb
fiadds
or
lahf
cli
adc
nop
pop
data16
sbb
and
daa
imul
inc
data16
inc
inc
out
push
insb
fstpl
movsl
inc
rclb
ret
test
lahf
cmpsb
fdivl
and
leave
rcr
and
mov
enter
and
arpl
push
mov
bound
adc
mov
xor
addl
mov
xchg
push
jl
and
sbb
cmp
sahf
sub
push
scas
xchg
and
pop
test
xchg
imul
aam
xchg
push
mov
xchg
jns
and
add
dec
adc
cwtl
add
add
push
mov
lods
or
add
out
or
xchg
mov
adc
rclb
mov
andb
call
adc
arpl
push
mov
xor
pusha
adc
inc
sub
jne
jmp
mov
aaa
mov
add
dec
dec
or
jne
mov
add
add
mov
rolb
mov
xor
lods
push
sub
inc
jmp
pop
add
push
jecxz
jmp
test
movsb
cmpsl
ret
test
add
pop
xor
leave
pop
push
xchg
or
fiadds
lea
xchg
mov
xchg
xchg
out
cltd
mov
mov
enter
jmp
pop
mov
mov
sbb
mov
jae
dec
mov
stos
repz
lods
test
lds
push
cld
sbb
sbb
stos
lds
xor
inc
mov
jmp
out
add
pop
push
pop
lock
int3
and
ret
jmp
push
popf
sarb
adc
add
paddusw
lahf
xlat
adcl
add
dec
xor
enter
sub
iret
not
jmp
xor
cmpsl
js
cmc
push
test
mov
pop
dec
xor
pop
movsl
mov
bound
aaa
mov
push
lea
repz
xchg
mov
push
push
pop
out
pushf
jge
not
push
mov
pop
and
roll
xchg
pop
adc
cmp
xchg
add
mov
pop
pushf
out
cmp
fldt
push
inc
sub
fcmovbe
inc
jmp
mov
and
push
aaa
push
aas
mov
repz
push
push
pop
shrb
and
jge
sub
add
fisttpl
popf
fcoms
pop
jns
dec
je
add
outsl
push
aas
push
lds
add
adc
scas
sbbl
arpl
dec
add
jae
fadd
call
mov
mov
push
pusha
in
xchg
paddb
sub
jne
mov
mov
mov
dec
and
sub
push
mov
shr
hlt
add
clc
mov
ds
and
jmp
xchg
xor
mov
ficomps
xor
test
ret
in
add
aam
fmuls
mov
cmp
sbb
loop
xor
add
loopne
and
sbb
sub
loope
add
pop
out
nop
adc
xor
jns
das
sub
ss
dec
aaa
push
nop
mov
addps
push
jg
sbb
orb
push
adc
mov
sbb
or
das
sub
or
pop
adc
add
and
pop
sarl
not
jnp
dec
jl
add
clc
mov
dec
lock
jnp
and
dec
push
cmp
dec
std
xchg
and
cltd
and
xor
ljmp
popl
iret
dec
cmp
add
stos
int
push
sub
pop
into
inc
xor
push
mov
rolb
add
ret
jne
cli
into
int
inc
rcl
ficoms
in
inc
pop
push
sub
ficompl
pop
adc
jb
out
pop
add
xor
dec
xor
sub
cmpsl
pop
sbb
push
lret
pop
mov
pop
fbld
out
pushf
sbb
scas
push
stc
mov
mov
and
dec
add
scas
sbb
add
xor
mov
pop
daa
pop
fstpl
and
je
adc
jmp
xchg
add
add
rcrl
pop
xchg
add
ret
sub
mov
xchg
push
mulb
dec
shrb
daa
jp
stc
andl
popa
or
jb
mov
mov
loopne
stos
or
push
push
inc
jmp
dec
inc
cmp
xcrypt-cbc
cmpsl
rcll
or
push
mov
jno
movsb
cltd
add
inc
leave
inc
and
and
adc
mov
shl
popa
flds
int
pop
inc
mov
mov
inc
repz
xlat
jl
mov
jne
sub
pop
push
inc
lds
jns
sbb
leave
dec
inc
ljmp
pop
xor
jmp
outsl
mov
mov
std
pop
xor
jmp
cs
shr
clc
test
push
adc
rolb
mov
jl
cwtl
hlt
jae
cmc
fstpl
and
dec
ret
ljmp
jbe
inc
mov
fstpl
aad
pop
pop
jo
or
sub
or
dec
jae
dec
ficoml
lods
cmp
sbb
mov
stos
xor
call
adc
xchg
shrb
pop
inc
or
push
mov
in
jle
pop
test
stos
pop
es
mul
jmp
jp
mov
sub
daa
mov
or
std
fimuls
popf
push
sbb
in
cltd
xlat
xchg
into
sbb
sbb
pop
and
cmp
ljmp
outsl
jnp
ret
push
arpl
les
mov
add
pop
out
inc
mov
jmp
inc
faddl
and
push
push
in
lahf
in
int3
dec
fwait
push
arpl
push
lea
ja
mov
xchg
xor
dec
test
dec
scas
lods
adcl
pop
fwait
cmp
pop
push
lods
lds
mov
push
adc
pop
jle
add
or
xchg
clc
jo
fcompl
rorl
sarb
stos
inc
push
add
cmp
pop
nop
mov
jae
out
pop
dec
push
xchg
or
cmp
fcoml
jno
loope
add
pushf
jge
add
nop
lds
in
mov
pop
outsb
pop
orb
push
dec
pop
scas
inc
addr16
jae
push
sti
std
push
mov
add
out
mov
add
mov
mov
icebp
pop
lret
and
xchg
mov
arpl
jecxz
cld
out
add
les
pop
scas
int3
cmp
out
jge
xor
push
add
pop
push
inc
jmp
fadd
jmp
call
xchg
jl
out
cmovge
or
push
roll
sub
inc
mov
xor
mov
ds
movsb
push
movsb
add
mov
push
outsl
mov
lods
out
mov
xchg
inc
or
sar
cmpsb
addb
jno
push
clc
in
aas
dec
sbb
fucom
mov
push
mov
add
sub
rolb
xchg
pop
insl
sub
dec
jp
js
mov
mov
enter
adc
sub
dec
cmc
push
jecxz
rcll
cmpb
scas
nop
fnstenv
add
pop
cmp
lock
repz
es
pop
add
adc
decb
pop
cmc
cs
inc
pop
addl
push
ret
ljmp
pop
push
jmp
lret
imul
xor
sub
movups
jno
jmp
xchg
aas
add
inc
add
push
cld
push
mov
add
sub
stc
push
loop
mov
or
push
dec
daa
rcrb
jle
dec
xor
sub
jge
cwtl
ds
js
insl
xchg
in
or
inc
mov
bound
or
fs
pop
in
jge
xor
mov
das
push
or
jnp
orb
leave
jg
xlat
cltd
out
mov
xchg
adc
hlt
je
out
repnz
es
push
adc
imul
ljmp
push
data16
inc
xchg
imul
sbb
pop
or
jnp
mov
lcall
mov
cmp
cltd
maxps
xlat
and
pop
push
testl
fwait
cld
dec
enter
insl
jecxz
jb
and
add
push
getsec
pop
les
arpl
xor
std
scas
sarl
mov
movl
enter
mov
inc
sti
test
mov
lock
mov
out
mov
or
add
cwtl
inc
aas
pop
cs
push
add
or
cmp
cwtl
pop
fisubs
rcrl
jmp
inc
jl
jno
inc
adc
pop
sbbb
add
inc
push
stos
add
fbld
or
inc
inc
mov
sub
jp
mov
outsl
das
nop
jnp
loop
adc
ret
xchg
lock
cmpl
in
pop
inc
dec
jle
mov
jge
pop
das
rcrb
popa
sbb
jno
xor
mov
dec
fsubrs
out
loop
aam
pop
jge
rcll
shr
dec
aas
mov
insb
data16
movsb
js
add
add
or
cmp
loopne
jge
pop
and
mov
xor
lret
lods
adc
shll
xchg
add
push
rcr
and
repz
add
mul
push
stos
lods
icebp
fsubr
mov
loopne
xor
ret
lock
subb
pop
in
add
iret
adc
add
ja
push
jle
add
push
pop
nop
add
and
sub
je
add
xlat
jmp
push
xchg
and
sub
add
adcb
jb
out
sbb
lret
jns
addl
adcb
dec
sbb
pop
pop
xor
sbb
jmp
push
mov
out
subb
mov
add
pop
les
in
popl
add
in
add
add
sub
sub
add
cmpsl
sub
sub
sub
inc
xchg
lods
in
repz
add
or
xchg
pop
icebp
xlat
and
aaa
outsl
sbbl
out
data16
sub
fsubr
mov
scas
inc
jmp
lret
inc
push
out
sbbb
mov
or
ja
or
jmp
add
cmc
loopne
pop
jne
sti
push
pop
mov
rorb
repnz
adc
push
cmc
sbb
pop
inc
xchg
rcrb
aaa
mov
xchg
orb
fcoms
sub
fisttpll
jmp
mov
scas
paddw
dec
sti
dec
inc
dec
lods
in
movsb
pop
rorb
movsl
jmp
shlb
sub
rorb
inc
cmp
stos
hlt
pop
loop
jge
icebp
addr16
or
adc
dec
adc
cmp
mov
adc
and
add
imul
aam
outsl
call
add
into
lods
dec
pop
xlat
inc
pop
jl
das
sahf
ss
pop
mov
out
iret
push
dec
mov
scas
jmp
and
push
xchg
addr16
dec
inc
mov
test
add
mov
add
adc
jmp
insl
xor
add
sub
fisubs
xor
adc
inc
push
repnz
push
and
sub
cmp
jmp
push
sbb
inc
jl
rcrl
push
mov
cmpl
sbb
leave
stos
lahf
aam
add
mov
push
pop
pop
sub
push
add
loop
mov
ja
jno
mov
mov
jecxz
jns
push
fsubr
push
pusha
mov
bound
bound
adc
jo
add
push
jle
jno
ficomps
es
jmp
mov
adc
enter
xchg
adc
ret
or
in
gs
cmp
ljmp
enter
roll
mov
lods
les
jp
aaa
repz
scas
decb
aad
mov
push
ja
jmp
jge
call
add
fisttps
stos
cmp
jo
pop
pop
cwtl
ljmp
dec
fimuls
inc
mov
push
pop
adc
xchg
je
sbb
dec
gs
imul
mov
shr
or
mulb
imul
rcrb
jmp
or
es
push
mov
out
in
sarb
and
je
clc
jno
push
sti
and
mov
out
push
inc
inc
daa
jo
xor
fwait
push
popf
cmp
sahf
cmp
bound
or
jne
cltd
psrlw
lock
lret
mov
jl
adc
adc
loop
add
fsubl
adc
dec
jno
add
jb
mov
sub
test
dec
popa
sti
adc
or
adc
shrb
and
rclw
sub
fdivs
dec
pop
xor
icebp
subb
and
push
sbb
cmp
sbb
in
pop
inc
imul
jg
inc
dec
jnp
and
push
fnstenv
add
aaa
sub
xor
and
add
hlt
mov
cwtl
js
pop
adc
leave
std
mov
aaa
jmp
or
jae
and
and
jmp
loopne
test
inc
xchg
mov
adc
stos
int3
mov
std
ss
inc
xchg
push
sti
pop
leave
mov
dec
pop
out
int3
cmpsl
ja
and
inc
jne
push
adc
push
dec
lahf
addr16
and
out
out
mov
dec
mov
xchg
add
jo
les
scas
mov
or
test
decl
loop
jbe
mov
mov
xchg
loopne
xor
jb
xor
dec
sbb
push
push
sarb
pop
xor
in
shl
bnd
xchg
sbb
and
loop
rcrl
inc
sbb
xchg
xor
jp
cwtl
xchg
inc
pusha
icebp
arpl
add
fnstenv
add
out
push
and
into
cli
cmp
adc
sbb
and
inc
mov
or
cmp
sub
je
adc
icebp
xchg
pop
or
rcrb
pop
mov
lcall
sub
dec
inc
mov
push
inc
das
inc
mov
iret
dec
push
pop
dec
sarb
nop
sbb
dec
or
enter
dec
popa
push
xchg
jge
arpl
or
xchg
pop
jne
mov
cwtl
pop
nop
ljmp
fldcw
test
or
mov
out
sub
push
mov
adc
stos
jns
vmovhps
cmp
dec
lret
add
pop
and
mov
add
in
dec
insb
push
scas
in
fistps
xor
mov
xor
mov
xchg
lods
mov
aas
in
cs
push
dec
push
aam
mov
lods
cmp
repz
cmp
pop
push
lds
or
jmp
sbb
adc
repnz
adc
push
out
cli
sbb
jmp
sub
inc
dec
xlat
daa
add
sti
jl
fmuls
jge
jge
js
dec
jmp
out
xor
dec
sbb
std
and
cld
sbb
lock
jbe,pn
das
nop
jb
mov
ss
jno
std
and
sbb
or
sar
sti
mov
popf
pop
popa
jecxz
sub
push
dec
jge
fadds
jle
jg
xor
in
push
and
push
adc
xor
mov
inc
out
pop
aaa
imul
xor
ljmp
or
movl
imul
pop
or
jne
lods
xor
hlt
mov
push
cmp
inc
fldcw
push
mov
pusha
pop
cwtl
inc
inc
and
add
test
xchg
add
lcall
cmc
or
insl
push
pop
shlb
std
mov
jmp
pop
testb
rcll
and
pop
push
lods
adc
dec
idivb
stc
sub
mov
mov
mov
sbb
push
mov
jmp
jl
sub
or
push
sub
adc
sbb
dec
adc
shr
mov
pop
push
xchg
dec
push
adc
adc
std
insb
mov
pushf
fwait
cld
mov
shl
les
loop
rol
xor
mov
sbb
stos
pop
jl
sub
lock
pop
andb
add
ljmp
cmp
lahf
sti
mov
push
inc
gs
cmpl
push
push
jmp
or
lds
xor
test
jg
cmp
test
jns
add
dec
gs
mov
testl
addb
pop
sbb
xchg
dec
mov
or
add
data16
mov
lcall
push
loope
mov
das
nop
mov
push
push
aad
pop
xchg
push
enter
sti
add
mov
fstps
and
sub
sbb
fs
stc
or
xchg
movsb
push
cli
pop
mov
or
insl
cli
push
idivl
out
mov
pop
pushl
lahf
push
push
outsb
pop
js
addr16
fidivs
divb
adc
jmp
add
mov
bound
mov
sub
loop
cs
scas
daa
popa
mov
sub
nop
fsts
loop
push
rorl
xor
in
dec
das
outsl
sub
pop
das
out
jno
mov
cmp
cvtdq2ps
push
imul
dec
movsl
subl
pop
jge
dec
or
xor
outsb
fsubr
add
dec
pop
fildl
mov
dec
push
xor
or
add
xor
sub
cmpsl
mov
push
pop
pop
push
inc
test
push
pop
js
mov
lahf
jbe
shrb
imul
add
jnp
ljmp
nop
add
inc
mov
dec
out
inc
xor
mov
fsubrp
scas
push
nop
dec
dec
cmp
fxch
mov
mov
cli
mov
je
ljmp
mov
or
mov
sub
jle
cmp
xchg
push
xlat
adc
adc
pop
or
jbe
bound
pusha
or
out
xor
popf
fisubrs
inc
jb
nop
dec
cmp
sub
fsubs
sqrtps
inc
test
psubsw
mov
jo
cld
dec
inc
neg
add
jmp
xchg
stos
and
in
sbb
xchg
lahf
cmc
push
divl
fsqrt
loope
fcomps
cli
sub
xchg
cld
roll
call
add
push
and
aam
mov
cmpb
stc
xchg
into
in
xchg
sbb
pop
lock
jmp
sub
add
push
aam
pop
pop
sub
xchg
xlat
test
sti
dec
cwtl
lcall
js
cmp
or
or
out
adc
daa
pop
gs
sub
pop
push
das
ljmp
out
rcrb
aaa
mov
out
adc
pop
test
jmp
cmpsb
and
adc
mov
cmpsb
adc
mov
jne
sbb
mov
je
push
pushf
jae
shl
lret
xchg
push
mov
or
sub
and
jecxz
in
jecxz
and
push
leave
push
sbb
incb
sub
xor
xchg
cmp
loopne
sub
in
adc
push
jo
add
mov
dec
data16
cmp
jno
iret
inc
cwtl
mov
and
test
stc
lods
call
ret
cltd
scas
cmpsl
hlt
sbb
or
or
inc
cmp
jbe
dec
mov
or
sub
loop
jmp
pop
not
ret
pop
mov
cmp
push
add
dec
shrb
push
call
pop
adc
aaa
addl
lcall
add
xlat
popf
ljmp
add
and
inc
jmp
pusha
inc
pop
cmp
in
sub
shrl
jae
xor
dec
adc
xor
mov
adc
push
mov
iret
rcll
enter
mov
icebp
popa
or
jecxz
inc
pusha
push
dec
das
cwtl
jne
pop
sahf
mov
pop
orl
push
and
or
adc
cli
add
xchg
or
jne
jmp
cmp
mov
and
mov
icebp
repnz
push
jb
push
or
or
push
bound
outsl
jno
cmp
fisttps
sahf
or
sub
es
ds
xchg
inc
cmp
mov
mov
mov
nop
inc
or
sbb
sub
add
jmp
mov
in
ja
rcrl
nop
sbb
or
dec
pop
sbb
out
int3
rclb
cs
pusha
add
enter
add
out
or
data16
loopne
xor
mov
add
inc
and
adc
dec
push
push
xor
push
mov
cwtl
loope
popf
or
fimuls
and
jae
cwtl
mov
stos
xor
dec
es
or
ficoms
xor
sub
jmp
pop
sbb
xchg
jo
cmp
xor
orb
sbb
or
fucompp
xchg
clc
movsl
dec
pop
sub
cmp
repnz
into
jno
xchg
push
mov
stos
inc
xchg
ljmp
push
add
push
jmp
faddl
push
jge
push
mov
dec
dec
scas
or
add
in
loope
sbb
add
cmp
dec
inc
xorl
daa
mov
or
subb
outsb
push
cltd
aaa
popa
or
and
movsl
mov
nop
jns
inc
and
js
jno
or
dec
mov
fsubrs
xor
mov
rolb
cwtl
cmp
inc
jne
fwait
ds
shlb
pop
add
push
scas
sub
dec
add
xchg
insb
jmp
sub
jae
dec
sub
stos
xor
or
test
xor
mov
out
pop
and
jo
add
mov
aad
clc
jmp
cmp
cmc
fists
add
lea
pop
and
sbbl
sbb
sub
inc
out
mov
and
push
insb
lds
add
in
sbb
mov
mov
adc
add
add
inc
or
push
sbb
xor
mov
scas
mov
push
addl
incl
or
or
repz
nop
lea
aad
lahf
daa
imul
or
adc
in
or
dec
and
aas
sub
sbb
rclb
negl
sti
mov
imul
push
jecxz
pop
stos
fisubl
jl
dec
mov
nop
or
mov
mov
dec
jmp
cld
inc
push
ds
and
xlat
lret
shrb
fmull
sbb
add
scas
mov
add
popf
sarl
mov
mov
not
cmp
jp
mov
adc
or
aaa
sub
mov
fwait
insb
mov
push
out
jb
push
mov
cmp
sbb
addr16
in
add
adcb
sub
add
andl
mov
xor
enter
push
push
xadd
rorl
movsl
incl
pop
mov
or
stos
add
cmpsb
and
and
inc
push
loopne
mov
sub
aas
jb
pusha
clc
std
rolb
or
push
inc
push
sub
loopne
fcmovu
decb
pop
bnd
sub
xorb
push
outsb
xchg
mov
sbbl
clc
not
loope
lds
sbb
push
daa
adc
jl
add
dec
inc
call
or
jmp
sti
mov
nop
inc
push
add
cmp
lea
cmp
add
jno
imulb
dec
int3
mov
sub
enter
inc
into
rcrl
movb
aaa
je
jno
aad
icebp
ret
nop
loope
sub
xchg
or
pop
incl
mov
imull
xchg
cs
pop
jmp
stc
push
stos
pop
pop
push
sub
inc
xchg
pop
incl
pop
add
out
and
test
imul
xchg
jbe
imul
pop
dec
add
stos
jae
or
push
add
push
jbe
daa
jg
inc
or
inc
jmp
out
mov
loope
push
pushl
cs
lret
mov
pop
jg
bound
lahf
cs
add
push
dec
mov
stos
or
push
mov
les
inc
xchg
or
hlt
movsb
dec
and
test
scas
mov
add
jle
pop
rorb
addr16
outsb
pushf
push
jmp
pop
dec
aad
mov
xchg
nopl
inc
sub
push
jecxz
adc
add
sbb
push
inc
jae
shrl
dec
inc
es
lret
and
push
sub
or
dec
loop
popa
xchg
push
jg
cmp
push
pop
or
jmp
fld1
iret
mov
push
jp
popa
pop
out
gs
jge
add
mov
xor
dec
pop
mov
orl
imul
cmp
push
clc
or
xchg
fs
push
dec
inc
and
jbe
shr
sbb
int
ret
sub
fmull
push
cmp
cmpsl
lods
stos
xchg
fstpt
mov
jae
add
aas
fs
xor
or
outsl
dec
mov
add
pop
inc
mov
ffree
flds
in
lret
fsubr
mov
ljmp
out
addb
pop
popa
sti
mov
dec
add
loop
imul
repnz
ret
adc
bound
cmp
shrl
xchg
mov
or
ficomps
adc
testl
stos
add
mov
add
and
push
jne
inc
add
js
adc
add
insb
cmpsl
jne
jl
aas
test
jmp
lods
daa
sub
dec
jmp
add
mov
jo
dec
imul
mov
mov
pop
dec
incb
loopne
add
test
xor
or
cmp
or
and
pop
dec
add
addb
jge
dec
scas
test
fldenv
xor
enter
andl
ret
xlat
adc
aas
outsl
mov
popa
push
xor
loop
jmp
rcl
rcll
or
lcall
popf
in
mov
sub
or
loop
pop
subb
sub
cmc
sbb
bound
add
fimull
xchg
in
lcall
pop
in
add
adc
lock
pop
out
mov
and
xor
das
jp
pop
push
imul
in
xor
xchg
insl
stc
fidivrl
sbb
jge
aam
imul
xor
mov
mov
lock
adc
xor
or
cltd
add
idivl
add
push
adc
add
cmp
pusha
ja
in
or
jne
lods
pop
lcall
mov
cmpsb
add
notb
jb
out
imul
stos
js
pop
js
out
mov
sbb
jmp
popf
cmp
push
jae
lods
lret
xor
insb
movsb
inc
data16
rcrb
and
mov
or
or
insl
mov
or
out
adc
mov
adc
mov
inc
outsl
mov
test
jb
xor
push
xchg
pop
ja
lret
jmp
xchg
orb
or
push
popa
sti
pop
or
leave
push
leave
imul
or
lds
clts
add
mov
mov
fsubrl
lock
or
arpl
jge
insl
dec
imul
scas
push
cld
or
push
sahf
pop
pop
or
jb
sbb
sub
outsb
shl
push
sub
pop
repz
sub
pop
flds
out
cmp
inc
rorb
adc
mov
dec
xchg
mov
or
mov
cmp
inc
jge
jns
cmp
mov
sbb
xchg
fs
pop
push
mov
movsb
xchg
jecxz
dec
pop
ret
or
decb
mov
mov
cli
cwtl
jbe
push
insb
sub
push
push
xor
stos
mov
jp
push
xor
pop
or
or
mov
cmp
into
adcl
sbb
rclb
test
imull
jmp
cmpsb
inc
xor
je
pop
mov
dec
add
dec
in
imul
je
filds
and
pop
inc
add
jb
push
pusha
lcall
jo
jns
inc
hlt
and
inc
jmp
jae
jp
hlt
sbb
lods
or
or
les
push
clc
insb
fcoml
mov
add
stos
push
or
cmp
stos
adc
push
lds
xor
add
jl
push
lret
jle
ret
test
sub
adc
aad
scas
lea
adc
shrb
das
push
shlb
push
push
or
pop
subb
mov
lahf
pop
sbb
insb
les
fsts
dec
movsl
mov
mov
xor
adcl
fldt
jmp
aas
jp
sti
mov
xor
pop
pop
dec
out
das
cmc
fdivrl
mov
pop
in
dec
pop
mov
push
jmp
lahf
add
shrl
cli
loopne
cmc
or
pop
or
rcll
cmpsb
repz
push
and
fistps
add
jmp
stc
pop
dec
das
aam
jle
mov
pop
loop
repnz
push
fidivrs
lock
or
idivl
inc
mov
cmpsl
mov
inc
lods
scas
cwtl
push
dec
push
test
sub
sub
or
ret
pcmpeqd
sbb
or
mov
jae
push
jmp
mov
or
or
mov
pusha
fidivrl
push
roll
iret
fs
loopne
pop
sub
adc
inc
stc
pop
jne
in
stos
ret
ja
inc
xchg
fiaddl
rcrl
aad
clc
sahf
cmp
xchg
inc
push
test
xorl
lret
inc
xchg
sub
mov
push
or
jle
push
sahf
test
cmpsb
adc
stc
movsl
rcrb
add
xlat
outsl
xchg
jne
addb
fnstcw
in
jl
or
daa
add
add
mov
pop
pusha
xchg
push
jmp
ljmp
xor
jmp
in
adc
dec
rcr
jb
xchg
pop
out
test
push
scas
lea
in
sub
and
jge
or
xchg
test
js
insb
inc
cmc
adc
cs
roll
cmp
xchg
push
into
pop
out
adc
xchg
push
mov
add
sub
movsl
pcmpeqw
push
movsb
cs
inc
and
movsl
dec
xor
mov
cwtl
or
cmc
push
negl
stos
adc
out
roll
div
add
xlat
add
xor
push
and
loope
push
or
repz
sbb
lcall
push
cwtl
push
les
add
sub
cmp
add
sub
fldcw
incb
xor
dec
cmp
push
pop
jge
sbb
add
lods
mov
push
sub
jne
movsb
cmpsb
mov
jle
lret
in
mov
ljmp
push
into
jno
loope
add
mov
das
pop
pop
rolb
hlt
push
rorl
mov
lods
ljmp
lcall
xor
cmp
cmpsl
call
jmp
je
test
nop
mov
push
insl
andl
sub
xor
add
jmp
rcrl
mov
adc
or
aad
ret
push
adc
and
movsb
cmp
pop
sub
testl
enter
adc
shll
xor
or
add
or
pop
cmp
adc
aas
mov
dec
addr16
sub
dec
pop
xor
shrb
jae
jno
mov
fiadds
adc
push
cmp
mov
hlt
add
adc
pop
mov
jmp
dec
into
jb
add
sub
arpl
cld
sub
mov
pop
push
out
add
scas
jae
add
cmp
cltd
add
and
cmpsl
jno
mov
stc
pusha
or
mov
adc
push
pop
mov
and
add
imul
jmp
pop
popf
cltd
pop
addl
dec
xor
nop
sahf
add
je
jmp
hlt
js
out
fwait
cmp
or
jecxz
or
sbb
clc
std
add
add
out
fdivl
jmp
pop
mov
push
jne
dec
ss
inc
and
mov
cmp
neg
push
lock
sub
data16
adc
mov
push
adc
push
not
ljmp
jo
jne
add
xor
pop
push
xor
neg
mov
push
or
imul
pusha
xchg
sbb
mov
ss
push
hlt
jns
das
ds
pop
mov
mov
pop
push
or
mov
or
je
inc
push
pop
ljmp
push
mov
pop
mov
mov
fldl2t
lahf
shl
and
into
ror
push
inc
pop
jbe
pop
push
xor
test
je
dec
add
out
icebp
adc
xchg
bound
cmp
iret
movl
jp
sbb
cwtl
sbb
movsb
adc
lret
sub
pop
sub
mov
aas
mov
ret
xchg
lock
sbb
adc
push
mov
dec
and
gs
pop
adc
lea
push
mov
jae
ljmp
cmp
inc
not
add
incb
or
enter
dec
or
pop
cmp
lahf
or
push
mov
add
stos
inc
xchg
push
ljmp
pop
adc
sub
call
pop
mov
ret
jl
or
int
ds
addb
mov
out
es
into
notb
mov
mov
pop
stc
jmp
cmp
loop
in
mov
pop
stos
sub
push
movb
das
jmp
gs
inc
push
cld
std
fiadds
and
mov
sub
outsb
adc
xor
inc
loopne
mov
dec
out
or
xor
adc
nop
mov
mov
daa
cmp
test
adc
daa
and
dec
push
adc
dec
add
sbb
rcrl
mov
push
idivl
xchg
adc
and
test
jae
push
or
add
stos
mov
imul
and
cmp
popl
and
or
xchg
faddl
mov
je
or
inc
or
hlt
sti
aas
xchg
mov
nop
out
insl
pop
lahf
enter
pop
insb
ja
ds
pop
and
and
pop
pop
out
sub
repz
inc
xor
cmp
hlt
add
outsl
int
lock
lcall
pop
push
push
add
orb
daa
cli
mov
fxch
bound
int3
dec
arpl
cs
test
popf
pusha
mov
inc
xorl
jnp
jmp
pushf
out
int3
inc
adc
or
xchg
repnz
inc
pop
mov
icebp
cmc
dec
pop
rcrl
mov
or
sbb
jb
jle
ror
mov
rcll
add
pop
mov
xor
decb
int
in
dec
fs
test
icebp
xchg
mov
push
inc
in
xchg
jns
or
push
push
shrb
pop
or
das
fistps
std
sub
pop
jecxz
jb
dec
shr
pop
inc
stc
dec
add
jo
lret
jno
or
jno
pusha
inc
dec
shrl
cmp
xchg
cwtl
inc
ficoml
aad
mov
flds
mov
pop
ffreep
pop
mov
inc
sub
jbe
hlt
xchg
ja
mov
add
mov
jmp
ja
cs
xor
neg
ret
adc
xchg
sub
test
sbb
sbb
add
cmpsl
imul
dec
dec
pop
fistpl
cmc
sbb
popa
dec
bound
add
pop
mov
fcmovnu
add
or
and
dec
pop
or
sti
pop
pop
shl
ds
xchg
mov
mov
and
les
paddb
sbb
or
in
jno
ds
imul
mov
sub
jmp
pop
filds
push
add
cli
xchg
mov
jmp
in
sbb
stc
and
loop
stos
out
and
shll
fmul
mov
repz
rolb
mov
lret
cwtl
jnp
xor
call
adc
push
inc
or
or
mov
pop
push
adc
push
loopne
adc
ja
mov
sbb
dec
add
pop
shrb
dec
pop
addb
bound
jmp
jg
pop
sub
inc
aaa
push
add
pop
scas
add
adc
loopne
das
pop
push
and
lock
nop
xchg
out
and
in
add
fdiv
addl
jne
mov
pop
cli
cmp
mov
out
aam
add
cmp
cwtl
js
pop
cli
insb
sub
icebp
xchg
daa
loope
pushf
loopne
jae
adc
mov
test
dec
cmp
subb
xchg
ljmp
sbb
pop
aam
loope
jb
mov
and
pop
popf
notl
dec
add
inc
jno
add
pop
mov
pop
lahf
data16
rcrl
push
loope
xor
jnp
sbb
or
imul
inc
fcomip
sub
sti
mov
jne
pop
add
add
std
pop
adc
int
or
cs
pop
dec
test
sbb
rcll
xchg
repnz
repnz
flds
push
int3
das
les
jl
loopne
std
mov
sub
test
add
out
test
push
jl
add
xor
xchg
push
add
int
cmp
sub
sti
mov
fisubs
sub
dec
inc
sbb
shlb
pop
aad
mov
sbb
mov
cmpsl
cli
cmp
dec
andb
ret
jbe
outsl
incb
push
shr
adc
sub
dec
xor
add
mov
dec
xchg
pushf
pop
lock
mov
sar
mov
stos
push
cmovp
imul
lret
xor
or
mov
push
jb
pop
in
sub
adc
and
jg
dec
and
xchg
or
out
mov
add
push
mov
xchg
push
in
cmpsl
and
add
fildl
mov
push
ds
push
sti
mov
mov
jne
movsb
push
sahf
ficoml
fwait
daa
shll
fsubs
push
aad
imul
add
cmp
inc
stc
mov
push
mov
nop
cwtl
jo
mov
dec
lock
jp
orl
jle
outsl
xor
push
push
pop
pop
push
add
sub
cld
pop
in
mov
jb
das
rcll
cmpl
xchg
jbe
mov
pop
ljmp
mov
test
or
mov
negb
hlt
xchg
pop
adc
cmp
inc
mov
mov
lea
out
addb
cmp
cli
roll
pop
and
aam
sbb
sbb
pop
pop
out
lods
push
adcl
lcall
inc
mov
lret
imul
jo
mov
cmp
fisubl
sti
mov
pop
test
xchg
mov
sbb
xor
pop
xor
mov
arpl
lock
push
rcll
cld
inc
xor
ja
push
or
mov
push
add
cmp
mov
daa
data16
and
js
or
sub
loopne
mov
xor
mov
push
aad
push
ljmp
mov
pop
clc
mov
push
or
in
dec
push
mov
xchg
lcall
add
repnz
xor
xchg
jae
inc
aas
fs
cltd
icebp
xchg
xlat
sbb
adc
cmc
mov
adcl
jnp
scas
popf
pop
push
ret
popf
pusha
test
insb
push
sarl
cltd
lds
cmc
cmpsl
fidivrl
mov
sub
mov
push
adc
mov
adcb
inc
pop
shrb
or
ss
ljmp
jecxz
lret
or
push
ret
mov
dec
or
sbb
cltd
rorl
lret
push
inc
sbb
or
sub
or
xor
aaa
cmp
push
xorps
das
cwtl
jo
ret
mov
sbb
inc
adc
in
fs
lahf
xchg
scas
or
dec
xchg
jecxz
add
inc
jle
cmp
xchg
scas
push
inc
dec
pusha
jge
dec
and
dec
js
or
push
pop
pop
mov
dec
cmp
pop
incb
gs
sti
push
cmp
jb
sub
ret
mov
push
cmp
xorb
dec
push
add
cli
jmp
jnp
xchg
sub
dec
mov
mov
mov
lock
adc
es
jmp
push
xchg
nop
arpl
and
data16
mov
or
lea
aas
pop
sub
add
sub
inc
jle
ret
flds
xchg
aam
out
mov
adc
pop
push
push
decb
es
jle
mov
orb
or
shl
add
sub
rcl
pop
lcall
aas
push
dec
test
enter
lahf
pop
xchg
jle
fsubrl
daa
mov
test
adc
lret
pop
push
jmp
rcr
js
mov
lds
jl
dec
int3
leave
out
jae
push
push
mov
iret
ljmp
sbb
mov
sub
xor
mov
aaa
gs
or
cmpsl
imul
arpl
push
mov
cli
xchg
into
in
or
aad
dec
mov
mov
and
pusha
sub
add
and
push
insb
sub
or
cmp
xchg
sbb
movsb
push
xchg
sti
pop
daa
mov
fcmovu
push
mov
pop
lods
xchg
mov
ds
daa
add
mov
cmpb
pop
pop
rcll
inc
pop
add
adc
pusha
ret
fwait
aas
ret
jl
mov
fisttpll
loopne
loope
inc
add
xor
add
into
cmp
cld
cmp
out
not
and
add
pop
inc
jmp
loop
sbb
subb
and
fstl
testl
dec
pop
push
popf
and
nop
je
mov
loop
xchg
not
push
cmpsb
inc
mov
push
int3
lret
pop
andb
dec
stos
cs
ja
inc
cli
push
std
loopne
mul
sbbb
mov
sub
data16
stos
mov
scas
adc
xchg
das
pop
cmp
mov
jmp
pop
jb
jp
ds
out
pop
xlat
adc
jp
cmp
pop
cmp
call
lds
mov
lahf
out
jae
xchg
adc
shrb
sbb
pop
dec
mov
fcomps
lds
test
xor
bound
jmp
out
or
push
dec
outsb
clc
repnz
sub
jnp
xor
sub
dec
push
jmp
inc
es
lea
mov
pop
mov
inc
add
loope
outsl
test
inc
mov
call
xorb
fcoms
icebp
pop
in
lock
add
cli
decl
inc
sub
and
mov
add
inc
jmp
dec
addl
sub
xchg
movsb
cli
cs
mov
xchg
adc
push
test
cmc
idiv
push
ja
xorb
mov
push
jl
adc
pop
xor
sub
repnz
xor
lds
cmp
adc
inc
js
mov
scas
pusha
push
sub
dec
sbb
xchg
or
fdivrl
inc
vpminub
repz
stos
xchg
cld
jge
cmp
adc
inc
sbbb
mov
mov
sub
repz
mov
xchg
iret
jb
jmp
xchg
push
adc
dec
xchg
add
xor
mov
and
repnz
orl
in
repnz
std
clc
repnz
dec
mov
mov
testl
and
mov
gs
sub
jge
stos
sub
aaa
out
vpmaddwd
xor
aad
dec
lock
clc
pop
cmpl
add
mov
out
add
mov
xor
out
jl
adc
dec
mov
jnp
mov
adc
into
push
mov
test
xor
sub
xchg
loopne
insl
jle
or
mov
fstpl
mov
or
xor
mov
mov
mov
adc
sub
push
int
iret
shrb
nop
jl
and
push
adc
add
cmp
add
xor
pop
mov
mov
mov
movsb
mov
mov
outsb
cmc
and
pop
inc
add
in
arpl
xlat
sub
mov
repnz
add
and
push
pop
sbb
sbb
movsl
jno
dec
ret
loop
adc
dec
ja
sbb
adc
out
repnz
mov
gs
or
outsb
pop
sbb
lock
orl
sti
sub
sub
push
xor
jmp
lret
xchg
std
ret
leave
push
mov
sbb
push
cmp
mov
mov
cmp
fmull
jl
daa
test
xor
add
push
xor
sub
inc
sub
add
mov
xor
xor
dec
test
adc
push
fidivrs
inc
adc
ds
xor
cmpsl
dec
push
pop
mov
not
out
stos
push
dec
push
xlat
add
leave
jl
shll
add
cmp
or
mov
incl
push
inc
and
jb
xor
pop
push
into
push
mov
into
into
imul
test
scas
stos
je
jecxz
sub
add
sub
aas
test
xchg
jg
dec
sarl
and
push
icebp
test
lock
adc
out
rorb
int
and
dec
and
jmp
ja
sbb
call
repnz
or
frstor
in
nop
mov
mov
mov
pop
push
xchg
lret
cli
sub
jle
xchg
mov
aam
jp
pop
dec
sbb
pusha
push
pop
rolb
jb
sub
addr16
push
adc
stc
add
das
jbe
popa
fisubrl
sub
jmp
dec
dec
lret
shl
mov
mov
sub
pop
mov
and
or
fisttpl
ret
lret
sub
push
xor
sbb
sbb
jb
jge
inc
pop
pop
mov
mov
shlb
ja
or
movsl
adc
inc
movsl
daa
sahf
sub
jmp
mov
adc
icebp
fnsave
pop
adc
jle
sbb
pop
outsb
mov
dec
out
icebp
jmp
movb
mov
ret
fwait
add
cmpb
pop
mov
cmp
pop
xor
inc
add
das
nop
or
pop
std
inc
inc
mov
in
loop
add
sub
cli
daa
inc
decb
ja
in
cmpsb
mov
jp
loop
pop
sub
pop
mov
mov
dec
in
addl
sahf
pop
dec
or
sbb
fistpll
sbb
ljmp
cli
mov
sub
inc
iret
pusha
push
mov
mov
pusha
inc
fisubrl
ljmp
std
push
or
push
div
pand
and
mov
xchg
pop
daa
or
fstl
lds
pop
mov
mov
call
icebp
stos
push
jo
jnp
arpl
jg
lcall
shl
add
push
das
rol
shll
pop
adc
or
jae
daa
pop
mov
pop
xor
popf
pop
push
adcb
mov
dec
subl
or
shrb
push
mov
jno
in
adc
mov
push
pop
push
push
adc
mov
sbb
loop
add
cltd
or
sbb
push
loope
pusha
outsl
adc
data16
mov
dec
push
lds
mov
jnp
adcl
pop
cmpb
jg
jle
aad
in
ds
int3
push
daa
and
cmp
mov
divl
cmp
xor
jns
mov
jle
push
pop
cs
scas
sub
mov
push
push
aas
inc
xor
pop
xor
xchg
testl
push
lock
rorb
push
push
addr16
add
imul
insl
pop
push
mov
dec
dec
movsb
addr16
insl
xchg
repz
cmp
leave
es
xor
ds
outsl
pop
mov
mov
stos
out
lret
lock
bound
clc
jne
mov
in
push
in
mov
out
cmp
stos
cld
cltd
icebp
jo
je
push
das
pop
pop
fmuls
lods
loope
sub
nop
mov
sub
decb
hlt
fs
gs
inc
lret
out
sub
jb
sub
in
pop
sub
cmpsl
fstl
fnop
sti
cltd
pop
xor
nop
push
dec
jmp
insl
add
stos
mov
and
es
das
adc
out
cltd
out
xlat
add
mov
mov
popa
xchg
clc
and
cld
adcl
popf
fstps
xchg
pop
stos
pushf
sbb
or
dec
aaa
pop
das
and
mov
add
jmp
lret
in
and
push
popa
sub
jecxz
pop
sub
push
hlt
mov
inc
bound
jge
fcompl
aas
and
idivl
jmp
cmp
icebp
xchg
push
mov
push
das
decl
sbb
push
xchg
jo
adcb
dec
push
sbb
or
push
dec
cli
xchg
pushf
mov
push
push
push
xor
sti
and
mov
adc
in
xchg
adc
add
dec
push
orb
adc
pop
shrb
add
mov
mov
gs
daa
hlt
push
jno
and
popa
arpl
push
ja
add
mov
enter
push
bound
xor
xor
inc
pop
gs
js
ret
fdivl
jb
subl
lret
js
and
ja
dec
stc
push
dec
hlt
add
add
ror
repnz
dec
pop
adc
mov
push
cmp
rorb
lahf
add
pop
stos
jo
xchg
cmp
int3
je
pop
lahf
cwtl
leave
dec
dec
mov
sbb
and
fdivrl
mov
jbe
bound
ror
std
push
mov
fadds
or
out
pop
mov
pop
adc
push
sub
jmp
adc
adc
loopne
sbbb
jmp
lahf
fsubs
fcompl
seta
and
movl
mov
jmp
mov
in
lret
lret
dec
fisubs
cmpb
mull
inc
jge
or
out
pusha
scas
or
ret
dec
sbb
hlt
jge
pop
xor
testl
push
push
and
data16
popf
mov
push
popf
inc
cld
push
jg
xor
xchg
sub
mov
push
mov
and
cwtl
icebp
call
dec
inc
add
les
mov
into
push
sub
stos
cmp
lock
dec
jmp
sub
mov
out
mov
mov
jg
call
xchg
mov
cmpsb
pusha
stos
push
cmp
xlat
push
lahf
cwtl
int3
in
subb
pop
push
fidivl
hlt
adc
push
cld
adc
das
repz
hlt
sbb
push
or
add
pop
xchg
pop
out
lods
sbb
adc
jecxz
inc
pushf
or
dec
inc
popf
add
adc
inc
push
and
jno
push
xchg
cld
imul
add
shl
adc
cmp
cmpsl
je
cmp
in
mov
sbb
clc
fstpl
ret
adc
sbb
aam
dec
fbstp
jmp
lock
outsb
pop
std
xor
cmpb
flds
aad
jne
sub
clc
rorb
mov
mov
fisubrl
or
inc
lret
cltd
sub
ja
jae
repz
jnp
pop
xor
dec
and
rorb
loop
repnz
bound
sbb
bound
cli
lret
cmp
sub
mov
pop
or
repnz
data16
cmp
pop
mov
mov
or
rcll
lods
les
cmp
pop
mov
push
add
cmp
sub
not
and
pushf
je
and
dec
pop
arpl
add
pop
add
jmp
inc
test
in
or
inc
das
add
and
mov
mov
push
mov
add
jp
mov
lret
pusha
out
pop
jno
mov
es
mov
imul
test
fsubl
and
add
sti
jg
lock
xlat
and
in
cmp
jg
repz
xchg
mov
jo
jl
arpl
jbe
outsl
add
addr16
pop
aas
mov
push
mov
xor
sub
call
scas
mov
dec
sub
push
ja
popf
divl
push
lahf
push
fwait
clc
cli
jb
sbb
roll
push
xchg
loopne
jmp
xlat
lret
push
mov
sbb
testl
neg
or
inc
int3
jmp
roll
fwait
add
and
push
push
sbb
pop
int
sub
or
jne
mov
add
negb
pop
mov
inc
shl
mov
movsb
mov
jmp
cmp
pop
add
dec
dec
sbb
rcll
xor
jo
pop
xchg
xchg
xchg
shlb
mov
pop
pop
fstpl
lds
jnp
or
jp
lock
inc
xchg
fnstcw
ds
push
sub
shll
out
cmp
xchg
fildl
cmp
xorl
lahf
add
call
enter
lret
addb
or
inc
inc
cmp
lods
ss
in
in
inc
jo
aas
push
mov
mov
mov
push
das
sub
pop
pop
or
daa
test
aad
pop
aad
pop
gs
mov
sub
fs
sbb
out
add
orb
adc
jmp
loop
mov
popa
mov
jg
lcall
out
mov
sub
xor
jmp
mov
mov
dec
jg
in
jge
outsl
daa
je
jne
ljmp
leave
jmp
js
xchg
clc
push
or
push
pop
loop,pn
add
pop
mov
daa
sub
sahf
adc
inc
sbb
dec
lds
adc
and
or
cmpb
xor
scas
les
iret
lods
or
adc
pop
mov
loopne
add
xchg
mov
in
mov
dec
mov
out
leave
sub
or
shl
testb
aas
jno
pop
sub
popa
add
loopne
jmp
popa
pop
sub
loop
inc
out
sub
mov
cmpb
outsl
add
aaa
sub
xlat
inc
in
stos
mul
es
addr16
push
lods
push
rorl
ss
ficoms
inc
mov
dec
xor
xchg
repz
adc
addb
enter
pop
pop
jmp
xor
xlat
lahf
pop
jae
std
jmp
lock
lock
dec
add
pop
cmc
rolb
std
adc
sbb
outsl
popa
sbb
jl
aaa
rcrl
mov
dec
push
push
imul
inc
fwait
outsl
cmp
stos
in
mov
dec
int
dec
mov
into
in
or
ja
mov
outsb
jecxz
shr
fprem1
push
ja
clc
dec
hlt
in
push
sub
adc
enter
adc
push
cmp
cmp
xor
sub
add
aas
insl
stc
pop
cmp
push
pop
dec
jae
sbb
jmp
dec
push
fidivl
sub
mov
pushf
pop
or
jmp
mov
dec
sub
xor
cmp
push
lods
or
bound
iret
add
pop
cs
mov
iret
sbb
push
gs
or
dec
cmp
imul
jnp
mov
jmp
movsl
fucomip
insl
movsb
aaa
inc
loopne
fmul
dec
sarl
repz
add
dec
adcb
out
and
rolb
or
adc
sbb
or
adc
testl
punpcklbw
jmp
add
jmp
inc
loop
out
adc
jp
sbbb
mov
shlb
mov
jl
je
or
mov
pop
lods
pop
leave
push
jle
leave
or
jp
cmp
mov
dec
outsl
adc
sub
mov
fdivr
cwtl
and
inc
outsb
shlb
jmp
dec
in
cld
dec
dec
popa
and
sbb
and
repnz
jg
incb
xor
push
jge
xor
jmp
sbb
int
loopne
adc
jl
das
push
sub
pop
pop
aaa
jmp
mov
add
out
pop
add
enter
push
into
sbb
sbb
mov
lea
push
or
push
mov
push
sub
into
or
cmc
push
mov
daa
subb
inc
xor
or
pop
dec
pop
inc
rorb
aad
out
testl
xor
push
pop
inc
inc
cli
dec
sub
cmpsb
jmp
add
xor
ret
mov
pop
sub
add
sbb
jmp
int
mov
inc
xor
xor
mov
out
cmp
cwtl
xor
jne
insl
sbb
sub
or
enter
orb
cmp
pop
out
jbe
push
adc
in
cmpsl
in
cmp
and
mov
pop
sub
gs
out
daa
adc
pop
add
and
icebp
adc
adc
sub
pop
stos
int3
aam
pop
clc
mov
jo
mov
xor
ret
adc
sub
cmpsl
xlat
fsubs
ret
addr16
sub
jnp
leave
cmp
cli
lea
sbb
adc
dec
cs
pop
mov
cmp
pop
mov
pop
mov
lahf
mov
mov
cmpsb
xchg
adc
push
dec
shll
xchg
int
data16
insb
in
aad
mov
adc
out
insb
push
dec
dec
loop
call
pop
add
dec
pop
mov
mov
ss
push
pop
test
out
insl
dec
sub
filds
mov
jge
jno
add
or
mov
cmpb
push
xor
add
xor
push
ret
or
pop
or
orl
ljmp
ja
add
inc
cmp
jle
mov
sub
movsl
inc
pop
std
stos
pop
cmp
dec
stos
xor
jmp
add
adc
sub
dec
movsl
adc
mov
push
enter
pop
xlat
sub
push
dec
loope
cmp
xchg
clc
loopne
cwtl
sbb
or
adc
mov
or
das
pop
cli
add
inc
sbb
push
sbb
in
not
pop
sub
dec
jae
fdivrl
icebp
cmpsl
inc
shl
xor
mov
push
push
cmp
rcrb
pop
lret
mov
add
mov
cltd
shll
loope
push
dec
fistpl
and
push
xor
sub
cmovs
loopne
jmp
scas
lock
xor
arpl
or
mov
in
jg
mov
jmp
in
mov
cmpsb
or
ds
std
sub
mov
push
lods
je
xchg
xchg
not
or
lods
pop
cs
add
jmp
mov
mov
ja
and
add
xor
sub
loope
mov
movsb
bound
xor
les
outsl
loopne
aam
inc
ss
and
ljmp
pop
mov
adc
icebp
cltd
push
nop
iret
push
or
pop
in
out
adc
ss
xor
jmp
pop
ret
mov
daa
fmull
imull
pop
or
loopne
jecxz
sahf
pop
sub
sub
inc
pop
sub
push
add
aam
cld
rorl
out
xchg
paddusb
jbe
imul
stc
xchg
mov
add
filds
fdivp
push
fcomip
fcompl
lods
sub
pop
mov
pop
movsb
mov
decl
mov
sub
int
int
ss
pop
and
xchg
lock
ret
sub
sub
sahf
add
inc
adc
mov
hlt
fnsave
int3
pop
sub
push
adc
mov
push
xor
or
cmp
mov
std
lods
neg
xor
lahf
cs
sbb
les
mov
mov
cmp
hlt
data16
or
mov
sub
divl
repnz
and
pop
ret
outsl
mov
add
sub
test
xchg
xorb
xor
cmp
jmp
push
dec
dec
ja
sbbl
push
xlat
lods
push
cmpsb
or
pop
jg
xchg
iret
push
push
xorb
shlb
adc
pusha
adc
pop
and
or
lea
and
jnp
ja
or
mov
xchg
bnd
add
sub
pusha
fistps
mov
mov
pop
add
in
aam
in
add
mov
sub
mov
add
mov
cwtl
mov
or
scas
or
lock
and
xor
rcrl
push
sub
or
adc
adcb
sub
fnstenv
pop
jge
or
insl
add
xchg
data16
bound
jb
jno
pop
cld
cmpsb
outsl
inc
push
insl
push
mov
mov
shrb
jl
das
or
cli
sub
fistl
push
outsl
sub
adc
stc
cmpsb
pusha
mov
arpl
adc
pop
inc
ror
or
sub
xchg
jg
or
cmp
arpl
and
cmp
push
cmp
enter
imul
jbe
mov
push
xor
fnstsw
xor
dec
call
jae
xor
lods
or
fidivrs
cli
jge
dec
lock
test
call
imul
cmp
jge
loop
push
addr16
pop
lahf
xor
push
mov
adc
xor
dec
inc
push
mov
test
fistl
shlb
in
or
adc
mov
rorl
push
icebp
loop
jmp
inc
clc
dec
pop
iret
addb
inc
sbb
sub
mov
cltd
dec
mov
mov
lods
hlt
mov
pop
mov
ljmp
int3
jmp
jno
jb
repnz
add
movsb
pop
jmp
lret
clc
mov
jmp
das
jne
ljmp
sbb
pop
jg
aas
push
xchg
pop
and
add
shrb
xchg
loopne
rcrb
push
cwtl
cmpsl
push
add
dec
shll
pop
sar
int3
ror
imul
add
lahf
mov
sub
ret
push
cmp
sti
pop
lret
test
add
xchg
stc
data16
add
xchg
cld
daa
pop
adc
inc
mov
rcrb
push
leave
jmp
lea
jge
jl
sub
mov
xor
pop
and
fsubr
sahf
mov
hlt
flds
push
out
sti
xchg
mov
out
mov
adc
mov
mov
shl
pop
pusha
xchg
std
jmp
inc
ret
pop
testb
sbb
mov
push
adcb
js
jmp
xor
rcrl
jl
jp
push
jo
adc
test
aad
or
clc
pop
hlt
mov
sbb
imul
icebp
outsb
icebp
jae
dec
clc
cmc
pop
insb
inc
jle
cmp
or
int3
xor
shrl
or
adc
pusha
popf
mov
pop
sbb
add
rorl
jns
imul
jmp
lods
cmpsl
lret
dec
into
add
mov
pop
not
in
and
popa
dec
hlt
lock
and
out
pop
maskmovq
imull
pushf
shrl
jmp
mov
int
jnp
inc
sbb
pop
push
loope
or
dec
cmp
lahf
mov
ljmp
mov
xchg
xor
mov
fmull
jmp
aad
lret
jp
movsl
sbb
sub
scas
or
pop
adc
data16
dec
push
lods
pop
sbbl
push
push
ljmp
sahf
mov
jbe
cld
dec
or
dec
or
adc
mov
jne
ficompl
or
jle
xor
push
adc
push
add
jno
mov
stc
mov
outsl
mov
loop
mov
pop
xor
negb
and
add
mov
pop
mov
das
loop
xchg
test
call
pop
std
popf
dec
mov
xor
fbstp
dec
xlat
in
mov
mov
inc
rep
icebp
adc
cmp
ret
adc
and
pop
push
les
sub
rcrb
je
arpl
or
je
not
cli
push
cld
ret
push
pop
push
jle
mov
jmp
mov
lock
push
mov
xor
mov
fists
mov
push
xor
sub
inc
mov
repnz
lods
popa
gs
inc
adc
pop
add
add
pop
add
or
xchg
push
test
cmp
mov
push
inc
arpl
adc
cmp
or
sub
push
sub
inc
lret
pusha
in
jbe
or
jl
cmc
jp
pop
xchg
sti
inc
leave
pop
push
fcomp
jmp
xchg
push
out
hlt
xchg
jecxz
mov
xchg
leave
jo
jne
loop
repz
mov
push
outsb
push
mov
inc
push
jl
cmpsl
repz
std
inc
jg
push
add
loope
rorl
sub
inc
outsb
sar
inc
mov
imul
test
shll
jg
ja
lea
add
insl
sbb
fiaddl
rorb
inc
dec
jmp
xchg
add
ret
pop
cmpsb
jle
addl
ljmp
fiadds
or
pop
es
ds
lock
mov
neg
ja
push
inc
orb
rcr
mov
lods
push
add
xchg
inc
inc
xor
jnp
addl
jb
push
imul
jmp
movsb
sub
mov
fwait
push
in
pop
ret
test
push
xchg
or
xchg
inc
dec
add
int
pop
and
jns
ret
push
fiadds
dec
test
sub
push
sbb
dec
mov
sbb
dec
in
and
or
add
push
repz
adc
jl
movsl
jb
insl
mov
xchg
rcll
or
sub
and
sahf
push
test
and
sbbb
inc
int3
js
pop
fdivs
inc
insb
add
push
mov
jl
test
dec
inc
call
mov
das
push
sub
stos
sub
cli
addr16
cmpsb
ret
adc
adc
cs
loope
inc
and
push
lock
test
incb
and
jg
mov
bound
fcoms
imul
dec
cld
adc
jle
add
iret
adc
cli
mov
pop
mov
ds
test
pop
in
cs
or
push
lret
insb
and
mov
das
inc
pop
cwtl
and
jle
aad
add
or
dec
pusha
adc
mov
xor
pop
mov
add
sbb
jmp
push
cmc
loopne
mov
mov
jge
ret
xor
jae
mov
push
sub
neg
flds
fwait
daa
pop
xlat
mov
fs
mov
cmp
pop
icebp
scas
vmrun
dec
mov
add
jo
aas
mov
mov
scas
mov
add
sbb
orb
dec
insb
ja
shll
rcrb
adc
sub
fucomp
or
bound
adc
push
daa
fidivrs
fnstenv
add
pop
inc
inc
add
inc
pop
pop
jnp
push
test
push
inc
lret
inc
cltd
pop
push
cli
into
dec
cmp
sahf
rorb
sub
rolb
sub
xor
push
and
in
mov
daa
sahf
fdivrl
fcoml
imul
cwtl
mov
int3
idivb
imul
daa
lret
dec
add
push
push
and
or
aaa
add
leave
cmp
movsb
insl
and
push
lods
stos
daa
push
fisttpll
push
push
test
nop
loop
test
pop
scas
std
mov
pushl
jo
xor
pop
sub
cmp
xchg
mov
testb
shr
xorb
push
push
xor
push
mov
shr
in
jb
pop
xchg
sti
pop
int
pop
inc
ja
jl
mov
add
add
dec
rcrb
adc
popf
ficompl
or
out
and
pusha
pop
inc
xor
mov
mov
inc
enter
add
stos
lret
stos
sub
push
pop
mov
jg
aam
inc
test
push
mov
shll
dec
add
xchg
sbb
nop
loope
jmp
lret
xor
sub
in
cmp
pusha
push
dec
xor
sti
or
filds
sub
aad
push
sbb
hlt
pop
and
loopne
mov
es
ret
pop
cli
push
rorb
hlt
movl
xor
jmp
in
mov
adc
or
cmp
or
mov
repz
sbb
jge
jmp
push
ret
jno
test
jl
cwtl
fs
scas
call
adc
adc
dec
xor
jmp
and
mov
out
mov
add
or
or
cmpsb
mov
aam
andl
icebp
add
add
sub
xchg
sti
dec
push
fldl
and
pop
jmp
mov
mov
mov
mov
pop
mov
or
push
jmp
mov
adc
push
sbb
int3
mov
dec
xor
loope
adc
sbb
sub
shll
scas
sub
add
mov
pop
scas
lcall
rep
fistps
dec
hlt
push
roll
pop
push
or
lds
lods
inc
ret
xor
mov
mov
mov
dec
scas
popa
xchg
jmp
lods
pop
mov
loopne
push
imul
popf
push
jge
pop
icebp
scas
movsl
leave
ss
xchg
or
pop
pop
mov
dec
cmp
mov
enter
or
out
sub
lea
or
cvtdq2ps
scas
js
out
ret
sub
mov
jmp
xchg
call
lock
push
sti
popa
lock
dec
sub
aaa
mov
shr
push
fdivrs
scas
jb
push
jmp
test
mov
inc
fidivrl
jp
arpl
into
imul
pop
add
xchg
mov
arpl
and
movsl
jp
ds
ficoms
or
push
adc
and
lahf
inc
and
cmc
pop
pop
or
movsb
dec
shrl
iret
sbbb
xor
js
mov
inc
pusha
lahf
lcall
xor
in
dec
jl
sbb
adc
insb
jl
addr16
les
fisubs
dec
jecxz
pusha
mov
inc
std
pusha
test
sub
mov
jnp
dec
mov
mov
adc
dec
cmc
mov
mov
lods
push
pop
lods
insb
xchg
mov
mov
sbb
das
jno
idivb
mov
shrb
dec
nop
jp
mov
xchg
pusha
inc
loop
push
and
mov
add
mov
imul
fistps
int3
insl
mov
sbb
push
or
mov
pfcmpeq
in
mov
sbb
inc
stc
lret
mov
xchg
incb
into
enter
push
pop
cmpsl
ret
nop
testb
and
movsb
out
stc
push
jb
addr16
pop
pop
not
inc
push
inc
inc
xor
or
bound
jge
inc
add
adc
and
data16
sub
lods
sti
not
fisttpll
scas
jo
sbb
inc
cmp
push
add
je
push
std
idivb
clc
push
and
dec
mov
cmp
and
push
sub
inc
or
jnp
and
ljmp
dec
push
mov
cli
ficoms
pop
stc
dec
sub
pop
sbb
adc
adcb
push
push
mov
sti
inc
xchg
in
push
pop
dec
js
jbe
sub
nop
into
jmp
subb
inc
push
ret
or
pop
add
mov
das
loopne
pop
mov
sub
or
mov
xchg
negl
addr16
push
test
clc
subb
std
sbb
adc
mov
pop
cmp
push
popa
fcoml
jl
sub
inc
or
dec
mulb
filds
sub
adc
call
sarl
out
inc
and
rcrl
mov
push
jae
int3
ret
inc
xor
inc
pop
pop
pop
iret
outsl
mov
pop
aad
xor
xchg
fistpl
xchg
or
jno
xor
xchg
into
mov
add
jmp
jne
mov
pop
xor
xchg
adc
inc
sub
test
or
imul
adc
lods
test
pop
test
mov
push
sahf
adc
inc
inc
or
xchg
pop
test
nop
xor
int
add
xchg
rclb
dec
adc
adc
shll
imul
int
push
cs
test
add
jo
xor
push
paddb
fcmovbe
jne
cwtl
lea
mov
xor
jmp
pop
pop
mov
mov
outsl
adc
push
fnstsw
cmp
push
mov
es
pop
ds
cmp
mov
pop
inc
mov
push
sbb
imul
neg
scas
adc
jp
jo
xchg
xor
jae
popf
mov
fs
pop
add
dec
enter
daa
js
movsb
in
mov
xorb
cmp
roll
jl
jnp
sbb
cwtl
inc
push
push
and
pop
dec
or
dec
hlt
xchg
jo
rcrl
xor
scas
or
push
add
cmc
popf
mov
jmp
test
add
cmp
push
dec
mov
and
pop
enter
sub
jg
lock
adc
dec
ret
out
fistpll
jmp
inc
add
das
outsb
inc
cmp
dec
inc
jb
fstps
push
push
mov
xchg
jle
cmp
test
arpl
pop
jg
pop
cwtl
push
and
inc
mov
mov
inc
or
popf
inc
add
cmpsl
lahf
aam
inc
arpl
mov
pop
sub
pusha
arpl
adc
adc
pop
rolb
mov
or
aad
fiaddl
add
xchg
sbb
stc
xor
repnz
lea
shl
mov
dec
int3
stos
and
call
rorb
cmp
daa
iret
push
jmp
xchg
loopne
in
rclb
jb
shr
push
rcr
jmp
jns
int3
adc
ljmp
dec
lds
xor
scas
in
jmp
cmc
scas
or
add
pop
xor
pop
mov
les
shlb
mov
ja
add
push
sub
cmc
rorb
mov
cltd
es
or
cmpb
jmp
mov
insl
dec
push
jmp
mov
filds
add
adc
cmpsb
mov
and
and
loop
pusha
xor
jb
mov
js
add
or
sarl
cmp
popa
xor
sub
inc
cmp
add
orb
or
mov
pop
pop
dec
dec
pop
lods
push
inc
adc
daa
cwtl
xor
int3
push
pushf
mov
adc
push
or
push
add
xor
adc
mov
pusha
pop
shrb
rolb
or
sub
shr
data16
mov
dec
inc
mov
repz
push
jmp
or
xlat
in
lock
cmp
sub
sub
add
fsubrl
jmp
jp
out
mov
test
rorb
xor
call
es
inc
mov
add
ffreep
push
pop
push
jnp
daa
fists
sar
lret
push
jmp
popa
add
pop
jbe
ret
arpl
jne
loop
test
pushf
clc
mov
mov
ret
scas
sub
push
cmp
xor
in
test
jmp
adc
shll
jmp
mov
sub
and
outsl
loop
dec
mov
fidivrl
pop
or
aad
xchg
xor
movsl
roll
ljmp
mov
lock
inc
dec
cmp
ds
xor
or
hlt
sub
aas
adc
out
dec
cld
dec
dec
xor
push
mov
jnp
popa
mov
mov
les
sub
jp
lahf
lock
mov
push
call
cmc
jo
mov
popf
or
xlat
push
push
mov
jne
xchg
and
jmp
mov
jle
jbe
push
iret
push
jns
jno
repnz
xchg
cwtl
ds
pushf
addr16
leave
jo
enter
push
push
mov
pop
sbb
add
or
sbbl
fsubrs
sub
mov
js
inc
xchg
or
dec
cmp
cs
mov
sub
mov
push
or
lods
xchg
out
mov
rol
dec
lock
dec
mov
leave
xor
dec
ljmp
cltd
mov
xor
xchg
jp
xchg
jg
popf
icebp
mov
or
pop
xor
loopne
add
cli
add
mov
fnstenv
movsl
mov
js
sub
lret
and
jp
jp
push
mov
insl
lret
mov
sub
mov
sbb
and
inc
rcr
inc
mov
dec
int
repnz
add
neg
mov
scas
cmp
clc
jge
mov
cld
sub
std
cmpsb
xor
cmpsb
daa
repnz
cmp
push
mov
leave
xor
push
cld
cmpsb
mov
jo
rcl
push
xchg
or
int
or
pop
xchg
hlt
aam
in
and
icebp
dec
pop
inc
cs
insb
pop
dec
push
and
cmc
cwtl
lods
add
sahf
adc
mov
je
xchg
jle
fs
jecxz
adc
mov
jne
jnp
rolb
test
mov
push
cmp
lods
hlt
and
xchg
dec
inc
sbb
shl
nop
loopne
push
call
rorb
push
icebp
ret
jnp
mov
arpl
sbb
fxch
jo
sub
pop
sbb
add
ffreep
jle
jmp
mov
dec
andb
xor
xorl
lret
jbe
fnstenv
inc
icebp
push
jbe
push
pop
outsl
scas
int
cmp
sbb
sub
jmp
aas
pop
push
or
pop
test
lret
mov
adc
aas
in
or
pop
rol
mov
and
or
movsb
ja
dec
cwtl
xor
sahf
push
call
or
out
rcrb
popl
cmp
pop
mov
mov
sub
insb
and
gs
cli
jp
bound
xchg
mov
adc
bnd
sub
ss
mov
sbb
into
frstor
cs
daa
sahf
ror
mov
adc
gs
movsb
fs
loope
clc
nop
out
rolb
popf
jno
push
std
mov
pop
push
sub
pop
ljmp
fstl
push
stc
and
dec
and
mov
and
and
les
pop
lods
cmp
mov
scas
push
add
negb
lods
pop
add
cwtl
mov
pushf
mul
sbb
sbb
test
fistl
cli
lock
mov
adc
push
jne
pop
not
pusha
add
push
cmpsb
inc
jmp
call
jne
jle
mov
mov
adc
scas
adc
stos
and
mov
push
push
pusha
pop
out
pushf
inc
pusha
push
or
xor
xchg
inc
ja
lods
add
mov
push
mov
enter
icebp
sub
lea
sbb
cmc
or
lds
jmp
movsb
push
and
and
jl
mov
psubusb
mov
pushw
add
shll
aas
sbb
sbb
dec
stc
adc
test
adc
jo
jbe
adc
push
cmp
xchg
cmpsl
xor
ret
gs
or
je
mov
fidivrl
mov
out
pop
pop
mov
push
pop
mov
imul
addb
gs
pop
lds
or
push
std
mov
mov
pusha
pop
imul
add
push
xchg
adc
repnz
inc
or
mov
xor
push
sbb
jp
aam
hlt
sbb
inc
testb
lock
lret
mov
or
loopne
mov
xor
sub
jne
sub
sub
add
mov
lods
sbb
and
loop
idivl
out
jmp
or
js
mov
jne
or
cmp
arpl
leave
or
ds
push
sub
das
mov
repz
cwtl
ror
or
loop
lahf
dec
in
pop
js
imul
or
xchg
movsl
add
sub
pop
pop
push
lods
push
dec
in
cmp
pop
mov
dec
mov
mov
clc
jmp
out
dec
dec
jo
lret
cli
push
push
xlat
mov
mov
and
sbb
cmp
sub
sub
dec
inc
pop
pop
lahf
fsubp
arpl
shrb
adc
jbe
and
pop
dec
fistps
sub
push
xchg
push
ror
jmp
subb
into
xchg
call
xor
sbb
cmp
pop
mov
add
imul
std
imul
jg
and
cmpsl
and
aam
adc
scas
sbb
lahf
cltd
stos
leave
fistps
sbbb
les
dec
pop
add
orb
push
ficoms
cmp
mov
je
pop
rclb
pop
push
adc
pop
clc
hlt
and
sahf
je
pop
fs
or
inc
add
xor
push
push
mov
adc
aaa
fsubl
mov
push
fcoml
aad
ljmp
icebp
into
in
add
icebp
adc
dec
jmp
adc
loop
shrb
movb
out
dec
xchg
xchg
movsb
out
aam
mov
enter
lock
cmp
insb
insb
xlat
mov
dec
hlt
sti
pusha
push
test
stos
xchg
pop
xor
pop
loopne
and
cwtl
shll
nop
test
xor
push
cmc
push
sub
stos
cmp
lcall
fdivrl
and
mov
push
or
or
ds
lods
scas
xorb
mov
add
sub
std
add
jge
icebp
mov
insb
cmp
repnz
mov
and
sub
loop
adc
inc
dec
and
xchg
hlt
repnz
cwtl
rolb
jle
bound
cmp
mov
repz
and
nop
pop
in
loope
sub
bound
dec
jae
push
mov
pop
lock
loope
and
loope
sbb
or
mov
leave
test
sub
ret
mov
mov
add
aaa
roll
popf
notl
ja
jne
or
popf
jle
dec
or
and
mov
jmp
das
outsl
fidivs
push
add
lds
jl
ret
push
jl
jb
xor
rcrl
cmp
xchg
cltd
iret
fists
roll
or
jl
pop
jl
fwait
add
xchg
sbb
sahf
mull
lcall
stos
out
dec
jno
lock
inc
nop
movhps
xchg
fisubrl
repnz
mov
xchg
push
fbld
je
loope
sub
push
jb
add
cmp
jno
jmp
jno
cmp
int3
xchg
ret
pop
fisubs
adc
and
mov
icebp
mov
jmp
mov
jo
lods
inc
test
fsubrs
add
mov
add
mov
sub
or
adc
xor
mov
pop
or
mov
mov
inc
add
jne
add
xor
sub
aas
mov
pop
sub
out
mov
test
test
jae
jecxz
add
out
and
shr
in
aas
in
push
mov
test
fldcw
movsb
cld
pop
mov
stos
mov
push
sub
in
lahf
cmp
mov
jl
pop
mov
lods
pop
dec
or
icebp
and
mov
mov
ret
stos
test
sub
sbbl
sub
popf
jle
jb
icebp
imul
sub
not
pop
or
add
stos
add
mov
sub
aam
push
or
dec
jmp
push
pop
cld
sti
mov
mov
mov
je
jg
sub
pop
and
daa
jp
lock
cmpsb
loopne
push
push
or
jne,pt
out
mov
imul
pop
mov
and
mov
inc
inc
sub
cmp
scas
imul
inc
jnp
sbb
arpl
outsb
sbb
pop
push
inc
and
js
or
lds
add
adc
bound
push
rol
and
sub
rclb
or
jp
sub
mov
rorl
mov
enter
mov
loopne
mov
jl
add
int3
testl
aaa
inc
pop
gs
outsb
xlat
pushf
mov
push
push
scas
mov
push
sub
inc
or
aad
sub
jae
mov
js
push
xor
xchg
lret
daa
jo
pop
xor
sarb
shl
dec
jmp
sti
insl
enter
ret
push
pop
mov
push
popa
jbe
test
jmp
xchg
dec
and
cmp
or
fdivl
mov
fsts
pop
imulb
rcrl
xchg
leave
fwait
movsl
mov
stos
insb
lds
mov
clc
or
jmp
dec
pop
add
dec
test
test
add
pop
xchg
mov
xorb
mov
je
rorb
pop
dec
jecxz
mov
mov
test
imul
adc
loope
sbb
cmpsl
add
sbb
shl
sti
pusha
das
push
ds
mov
dec
adc
mov
daa
dec
jl
ret
stc
into
mov
into
outsl
add
push
pop
shr
cmovnp
rorl
gs
mov
mov
icebp
in
mov
repnz
outsb
das
xchg
icebp
jg
sbb
test
xor
xlat
pop
sub
add
xor
lds
rep
pop
xor
inc
inc
jmp
push
push
ljmp
mov
or
aam
inc
xor
jne
push
add
xchg
inc
movsb
adcb
inc
cli
sub
xchg
cmp
add
ja
push
adc
sbb
jge
sbb
cltd
mov
jmp
fcomi
aaa
rol
aas
xor
pop
dec
xchg
ret
cmp
pop
sbb
fldl2t
lds
jmp
stos
jle
jp
xchg
lods
sbb
xor
ret
fiaddl
jnp
dec
jo
test
jmp
sbb
pop
ficoml
or
cmp
add
mov
lret
inc
iret
mov
sbb
sub
jmp
js
pop
das
adc
mov
cmp
mov
lret
and
inc
jle
in
sbb
cs
xor
sbbb
or
cmp
jmp
dec
call
mov
inc
mov
std
mov
lahf
pop
inc
xor
shlb
lods
mov
outsb
clc
sub
aam
add
or
cmp
sub
add
fbstp
xchg
push
push
loopne
fnstcw
jae
pop
or
pop
dec
in
xor
mov
xor
mov
add
jnp
mov
add
cld
stos
sbb
mov
int3
bound
inc
stc
push
cmp
mov
rorb
inc
or
adc
imul
add
adc
mov
adc
push
bound
jmp
aaa
aad
decb
andb
dec
mov
int3
mov
data16
inc
test
scas
mov
stos
out
sub
pushf
imul
daa
adc
xor
dec
stos
daa
mov
ja
sub
mov
sub
loopne
negl
xchg
ret
loope
adc
cs
fists
dec
dec
cmp
add
sub
into
dec
inc
fdivs
mov
jmp
push
pop
push
rorb
adc
cwtl
out
pushf
xchg
sub
dec
pop
xlat
mov
dec
adcb
ljmp
xor
jmp
sub
cmpsb
push
jnp
mov
mov
or
xor
call
out
shlb
xchg
jb
loope
adcl
xchg
dec
push
and
scas
imul
push
xchg
aad
sub
popf
inc
pop
rcll
add
inc
mov
std
aas
xchg
popf
pop
loope
jp
bound
cmpsb
cmpsb
adc
mov
xchg
cmp
fisubl
mov
mov
sub
sub
inc
mov
sub
push
mov
pop
call
sti
add
in
jmp
mov
push
pop
mov
repnz
in
rcrl
or
ja
sub
cld
cmp
shrb
cmp
lret
mov
les
lcall
cmpsl
mov
mov
cmp
stc
xchg
jecxz
sub
shl
ljmp
cmp
les
movsl
push
outsl
test
test
mov
cmp
add
add
sub
adc
sub
mov
mov
cwtl
fs
sub
cmp
imull
repnz
out
call
pop
outsb
xor
stos
jno
cmp
nop
int3
in
out
push
enter
gs
call
shl
push
push
inc
lcall
cli
imul
das
repz
inc
push
mov
aas
pop
adc
push
add
inc
sar
push
in
clc
adc
adc
iret
cli
or
pushf
sbb
pop
test
ljmp
out
out
add
jmp
ja
inc
mov
adc
ds
mov
sub
jnp
jae
push
mov
push
icebp
push
cmp
xlat
adcl
xor
pop
sub
clc
jno
add
push
or
xorb
dec
dec
mov
xchg
and
pop
add
push
or
inc
inc
xor
daa
xor
mov
or
bound
xchg
out
sti
dec
lods
adc
mov
mov
xchg
aas
mov
lea
cli
jle
sbb
test
ds
insb
xchg
std
xchg
push
add
add
popa
popf
ret
mov
add
loopne
hlt
fistpll
sti
jl
cmp
repz
shlb
in
pop
sbb
aad
or
add
adc
pop
mov
pop
pop
mov
cmp
lock
pop
push
cmp
les
xchg
lock
or
call
insl
and
aad
mov
in
adc
push
fisubs
daa
jb,pn
out
pop
xchg
add
add
jg
hlt
adc
add
jge
aas
scas
aam
add
pop
pop
and
pop
mov
mov
mov
lods
push
adc
call
jmp
dec
sub
xlat
or
adc
xchg
cmpb
in
decl
iret
ss
mov
sbb
jle
add
decb
lds
dec
shrb
push
nop
and
fwait
inc
dec
push
adc
sti
sarb
test
jmp
inc
push
push
jns
daa
aaa
and
or
cmpsb
ljmp
popf
mov
shrl
add
add
mov
je
jo
outsb
pop
push
popf
push
sbb
fistpll
enter
xor
loopne
ror
and
jnp
add
pop
adc
jg
mov
add
jno
fsubr
nop
mov
jle
decb
data16
xchg
scas
mov
data16
pop
outsl
push
es
fwait
mov
pop
sub
pushf
xchg
into
jne
shl
or
out
lea
and
inc
jb
cmp
sbb
cltd
adc
adc
mov
lock
mov
aaa
dec
pop
cwtl
fmuls
call
divb
test
add
inc
movsl
sub
aas
mov
cmc
cmpb
lods
push
push
dec
xchg
and
es
add
push
iret
aam
push
dec
fisubrl
leave
cmp
lret
pop
sub
add
repnz
adc
sub
pop
ficoml
imul
cmp
fsubr
or
mov
mov
insb
add
or
inc
nop
test
or
pop
mov
push
adc
sbb
js
push
les
dec
sbb
std
or
xor
out
or
test
xor
outsb
ret
mov
mull
sti
ja
shrl
pop
and
daa
push
sub
clc
xchg
sub
mov
dec
daa
adc
sti
leave
and
jb
mov
ja
mov
outsl
jl
push
push
adcl
repz
rcrb
dec
lcall
adc
push
jmp
lret
pop
or
lret
cmp
popf
jbe
sahf
ret
push
push
lods
aaa
or
sub
jbe
mov
pop
push
pop
push
sub
ss
xchg
cmp
nop
fdivrs
xchg
movsb
int
inc
popa
jmp
jl
dec
icebp
add
cwtl
cmp
push
push
js
in
lods
inc
loop
push
lret
xor
repnz
push
xorb
mov
popf
inc
xor
out
das
xor
int3
mov
ss
ss
sub
mov
xchg
movsl
cmp
int3
xor
xchg
sub
ds
jmp
mov
and
mov
xchg
clc
test
call
or
xchg
test
rep
push
pop
xchg
push
xor
dec
rolb
push
in
push
fidivrs
insb
scas
and
jmp
mov
out
mov
sub
inc
nop
cmpb
mov
out
add
jecxz
lret
adc
call
cmc
fldcw
ret
pop
push
push
adc
xlat
pusha
leave
cmp
mov
mov
sbb
pusha
das
sub
push
aas
add
outsl
jmp
cmpsl
and
js
dec
mov
add
xor
das
pop
insb
stos
xor
jbe
jo
fstpl
movsb
adc
bound
inc
popa
hlt
hlt
add
adc
pop
cmp
inc
outsl
xchg
cmp
cmpsb
or
aam
inc
repz
pop
mov
sub
data16
scas
push
popa
notb
add
ss
lock
cwtl
icebp
pop
mov
adc
mov
sbb
or
adc
nop
outsb
and
pop
sti
add
fisubs
pop
pop
popf
pop
sahf
movlhps
jnp
test
in
cwtl
mov
inc
in
pop
cli
mov
mov
cmp
adcl
daa
andl
lods
outsl
daa
sbb
xchg
ds
incl
inc
arpl
and
or
mov
cmp
pop
clc
sub
dec
jmp
les
mov
adc
loope
and
push
int3
xor
arpl
add
push
adc
test
sub
push
xor
push
pushf
call
pop
cmpl
shll
pop
jno
das
sti
or
fstp
in
and
stc
repz
sub
repnz
or
sub
mov
sbb
sub
outsb
pop
test
rcrb
lods
sar
add
not
xor
orl
pop
mov
aad
incl
pushf
adc
ja
or
pop
jmp
or
mov
mov
inc
roll
popa
mov
aas
stc
jo
out
mov
mulb
fstpt
mov
loopne
sahf
adc
dec
mov
push
stos
and
test
je
pushf
mov
push
xor
xor
adc
pop
pop
int3
outsl
fwait
mov
push
iret
ss
mov
movsl
jp
add
or
push
mov
shrl
add
pop
popa
aaa
adc
adcl
xlat
push
in
ficoml
in
add
inc
mov
lea
loope
hlt
mov
or
mov
sub
dec
stos
popf
pushf
test
add
push
or
mov
enter
cmc
jne
xchg
fstl
enter
and
or
xchg
mov
and
and
popa
subl
hlt
pop
push
or
int3
adc
idivb
sub
das
imul
daa
std
pop
aam
push
push
mov
ss
jnp
add
sub
lds
or
mov
orl
add
push
leave
inc
outsl
mov
outsl
out
pop
out
cmp
lret
je
add
stos
mov
leave
cmc
aas
shrb
pop
lret
xor
pop
xchg
lods
arpl
xchg
or
push
xor
adc
test
push
jecxz
or
pop
pop
bound
or
movlps
loope
cmp
and
nop
and
and
in
or
pop
add
aam
or
mov
or
or
sub
bound
lock
xchg
popa
fisubl
dec
push
inc
sbb
push
sbb
adc
jmp
addr16
cmpsl
pop
push
mov
push
stc
cmp
mov
les
jns
imul
inc
jnp
mov
pop
arpl
mov
nop
pop
not
xchg
xor
and
sub
sub
jne
aad
lcall
xorb
das
scas
jbe
cmp
pop
repnz
jmp
mov
stos
popfw
push
add
shrb
add
jmp
pop
jp
mov
cmp
jmp
psrlw
lret
sbb
ja
jecxz
mov
cmpsb
dec
addr16
sub
mov
int
scas
pop
xor
stos
add
scas
dec
xor
jmp
sub
pushf
push
jle
lock
xor
out
lret
add
mov
or
ja
popl
out
and
int3
xchg
test
pop
mov
mov
push
outsb
sub
pop
sub
jge
jne
fistpl
fdivl
sbb
popf
popf
popfw
dec
xor
push
adc
insl
dec
enter
shr
adc
add
push
shr
sahf
out
stos
aad
ljmp
imul
jno
add
add
inc
shl
add
jmp
out
imul
mov
xchg
jg
pop
mov
test
pop
xor
pop
or
cltd
negl
in
mov
into
and
adc
adc
push
add
sbb
pop
rol
push
mov
in
icebp
out
jecxz
lahf
push
ret
stos
ret
mov
iret
xlat
push
add
mov
pop
dec
cld
add
pop
iret
or
int
sbb
dec
sub
int
sub
push
fldenv
fildl
and
or
mov
mov
xchg
rcl
loop
xchg
add
test
lock
or
dec
sahf
test
repnz
adc
and
mov
mov
cli
scas
push
nop
adc
lret
mov
cld
mov
pop
jg
add
pop
dec
add
mov
into
dec
imul
sub
add
scas
xchg
xlat
popf
pushf
and
data16
mov
and
imul
jmp
adc
iret
pop
popa
sub
or
push
jmp
int
cli
jge
cltd
jp
shll
and
dec
cli
stos
js
dec
or
xchg
xchg
jp
dec
shll
pop
dec
pop
int
mov
imul
and
loope
mov
fiaddl
add
jmp
andb
repz
movsl
shll
jg
icebp
jp
push
push
sbb
sub
or
sbb
mov
test
outsl
imul
jne
sahf
pop
aaa
jmp
loopne
xor
add
pop
or
dec
dec
test
xor
push
hlt
cmp
icebp
xor
shrb
sahf
pop
addr16
dec
dec
adc
outsl
jae
adc
pop
addr16
or
fwait
popa
neg
jo
xchg
or
sahf
icebp
xchg
add
or
xchg
push
sbb
dec
out
add
scas
lret
out
dec
and
out
loopne
lds
mov
pop
add
cs
movsl
sbb
cmp
xchg
aas
push
lret
jl
loop
dec
pop
popf
aad
cmp
adc
fsubr
xchg
lahf
sbb
cld
fwait
pusha
nop
sbb
jle
pop
jmp
inc
rolb
inc
mov
or
xchg
lds
cmp
in
mov
and
bound
adc
adc
push
das
adc
repnz
lods
mov
sub
inc
ret
cltd
add
or
sub
or
jbe
std
xchg
mov
add
and
cs
add
hlt
push
ret
rcrb
pop
cmp
addr16
loopne
lods
dec
and
sub
xchg
mov
mov
call
cltd
ret
and
pop
push
std
lret
repnz
aad
pop
lock
imul
subl
adc
pushf
call
xor
mov
fsts
ret
dec
lds
pusha
cmp
push
inc
scas
dec
inc
add
icebp
mov
notl
in
mov
pop
shll
lret
pop
xchg
dec
fsub
cmp
jle
add
sbbl
iret
lods
jmp
je
inc
dec
or
fistl
sbb
pop
icebp
aam
out
cmp
sub
xchg
and
faddl
push
push
outsl
dec
cmp
scas
jecxz
jo
ss
xor
ret
stos
mov
pop
xor
xor
pusha
jb
or
adc
popa
aaa
ret
push
inc
insl
cmpsb
mov
cmpsl
int
sbb
or
movsb
ljmp
les
pop
cmp
pop
pop
test
jo
mov
mov
adc
xlat
sbb
addr16
pop
xor
lds
and
add
xchg
testl
xchg
pop
mov
ret
dec
cld
andl
push
xor
test
loopne
or
test
push
jmp
jge
sub
enter
add
push
add
cwtl
sub
jmp
mov
inc
movhps
mov
scas
test
push
daa
dec
ja
iret
pop
dec
les
mov
stos
adc
mov
sub
cwtl
xor
and
mov
push
push
cmp
inc
jge
adc
or
lret
pop
fcmovu
xor
sub
mov
cmp
fdivl
test
int
or
cmp
add
pop
jne
bound
add
hlt
lea
pop
lahf
insl
push
dec
mov
pop
add
inc
and
fisubrl
sub
add
jecxz
adc
in
push
in
mov
icebp
pop
mov
out
popl
add
jmp
pop
popa
repz
fstpt
cmp
ss
in
inc
mov
mov
adc
jae
or
jne
lock
add
mov
out
cmc
movsl
cwtl
adcl
shll
mov
push
inc
mov
das
mov
fwait
jecxz
aam
mov
mov
dec
repz
adc
out
mov
jb
pop
popl
test
repnz
mov
fldl
and
jmp
sahf
or
xor
mov
out
adc
into
dec
mov
adc
xchg
ret
jne
leave
or
pop
repz
dec
int
xchg
idiv
cwtl
pushf
mov
xor
xchg
mov
stc
or
cmp
push
and
xchg
cmc
add
call
testl
sbbl
stos
mov
stc
js
das
mov
mov
xor
push
push
mov
repnz
add
fisubrs
pop
pop
adcb
dec
out
lcall
dec
xlat
divb
mov
mov
xchg
jle
out
or
scas
mov
mov
jns
je
sub
ja
stc
rolb
cmp
or
popa
sbb
les
cmp
rorb
jne
and
add
xor
xor
in
mov
add
mov
xchg
cld
pop
cmpl
jne
mov
je
sub
and
push
push
push
rcl
outsb
push
addr16
je
js
rcrl
cmp
dec
ja
add
adc
or
cs
inc
cltd
push
mov
outsl
incl
cltd
loop
ljmp
jmp
daa
in
fs
nop
scas
aaa
sbb
inc
xlat
pop
push
icebp
add
pusha
fs
adc
js
add
sbb
popf
jge
jno
notl
push
rcr
jae
and
sub
push
mov
and
jne
sbb
movsb
loopne
jg
icebp
push
lahf
push
sti
add
loopne
inc
neg
nop
pushf
repnz
psrld
mov
loopne
cwtl
in
push
or
rclb
stos
orb
lret
adc
mov
in
pusha
insl
or
lock
dec
xchg
and
fs
cmp
dec
lods
sub
dec
add
mov
xchg
out
lret
mov
rep
add
push
sub
aaa
adc
daa
or
adc
fcompl
jmp
mov
or
and
jb
xor
test
cmp
dec
push
jae
test
adc
sub
mov
test
or
xor
sub
adc
pop
mov
xor
mov
add
lret
into
jmp
ljmp
pop
cld
mov
sub
outsl
sarl
cmp
inc
cltd
test
mov
std
push
inc
inc
jmp
pop
call
out
xor
inc
mov
xchg
sahf
mov
mov
mov
pusha
addl
mov
mov
or
pop
mov
leave
daa
push
fwait
adcb
push
sti
add
or
jmp
or
loopne
mov
and
add
add
out
add
or
xchg
sub
inc
arpl
or
mov
inc
imul
jmp
mov
push
imul
xor
or
ret
pop
testl
test
xchg
movsb
out
inc
mov
in
or
and
sub
push
testb
sub
mov
std
xor
adc
jb
int
iret
pop
dec
mov
and
sbb
cli
sub
test
ja
mov
sub
test
xlat
pushf
push
add
pop
mov
cmc
fwait
into
out
movsb
push
fisubrs
inc
loop
fidivs
add
pop
sahf
sti
dec
mov
sbb
or
test
test
inc
adc
pop
ret
test
ret
inc
popf
mull
mov
adcl
sti
mov
jo
ljmp
mov
push
jge
je
pop
fs
pop
add
aaa
shr
jae
adc
not
fiadds
adc
lds
arpl
adc
xchg
add
std
out
jp
fldl
into
xchg
sbb
shrb
add
xor
out
scas
aas
mov
xchg
push
outsb
daa
sub
push
and
xor
jl
imul
mov
push
jmp
in
mulb
pop
cld
dec
imul
cmpsb
push
push
popf
adc
jmp
rol
loop
sbb
mov
add
jno
adc
clc
test
dec
into
outsb
divb
pop
mov
inc
inc
enter
push
int3
icebp
or
fndisi(8087
or
ret
aam
imul
gs
jge
xor
add
add
pop
sub
push
shrl
add
sti
xchg
jb
ja
mov
cmp
clc
push
sub
jp
cmp
sti
mov
daa
stos
push
nop
add
gs
stc
add
jl
or
ret
push
les
loopne
and
loopne
aad
mov
call
xor
push
jg
xchg
imul
pop
ret
pop
flds
outsb
mov
lock
adc
push
push
cmc
mov
xor
xchg
bound
or
dec
das
or
jmp
or
imul
or
es
roll
cld
add
sar
jnp
rcrb
popl
mov
adc
pop
pop
add
inc
or
mov
clc
mov
cmpl
cs
xchg
jp
add
add
fcmovnb
cmc
dec
sub
nop
idivb
mov
iret
xchg
loopne
and
adc
push
call
pop
sub
mov
dec
pop
jno
std
sti
out
sub
daa
jnp
or
sbb
icebp
lock
fidivl
test
jnp
inc
xchg
iret
pop
sub
jmp
jp
lahf
mov
popa
scas
fimuls
xlat
sbb
jno
xchg
mov
pop
inc
cwtl
sub
dec
pop
mov
fildll
pop
xchg
rorl
xchg
xchg
xchg
pop
add
out
pop
fstpt
js
negl
jnp
jbe
push
xlat
sub
mov
adc
push
cmp
adc
repz
xor
push
jle
outsl
loop
pop
push
adc
shlb
add
mov
cwtl
ja
or
orb
hlt
xor
cwtl
adc
ret
mov
jmp
mov
adc
enter
push
es
test
bound
mov
jbe
jne
shlb
loopne
mov
add
mov
add
adc
shll
enter
sbb
repz
movsb
inc
adc
sahf
jbe
mov
push
adc
xor
test
ljmp
das
push
push
pop
and
cmp
push
ja
mov
adc
add
xor
test
adc
cmpsl
fs
fisubs
cmp
adc
clc
pop
dec
sti
and
mov
jbe
fstpt
dec
cmp
in
jbe
addl
dec
imul
inc
icebp
and
cmp
rcr
out
add
mov
cmpsb
mov
adc
jg
sub
mov
pop
add
movsl
and
or
test
pop
mov
push
not
out
mov
xchg
or
mov
sbb
fbld
ficompl
sub
inc
inc
cmp
orb
insb
dec
je
sub
adc
add
rclb
mov
clc
in
adc
jle
je
aaa
lcall
mov
add
push
pop
mov
sbb
shl
ljmp
add
ret
push
leave
pop
rclb
fisttpl
mov
jg
pop
sub
push
push
mov
fadds
test
dec
in
pop
test
pop
push
add
xchg
cmp
mov
arpl
test
clc
or
jbe
lock
mov
das
test
push
inc
cmc
add
aas
xchg
lea
js
jp
jne
adc
add
fs
jecxz
cmc
out
gs
sbb
sbb
cmc
add
dec
xchg
dec
cli
sub
pushf
adc
and
adc
cmp
pop
cld
fstpt
ja
fidivs
pusha
cltd
push
outsb
add
inc
push
ffree
push
rorb
or
xor
out
negb
add
mov
add
adc
aas
loop
xchg
mov
lods
sub
push
stos
les
das
ret
int
adc
push
xor
leave
shlb
sbb
pop
add
fcmovb
addl
das
mov
insb
notb
out
mov
ss
bound
xor
and
fs
jmp
mov
mov
mov
fwait
add
in
test
add
data16
xor
lahf
pop
pop
sbb
aad
inc
fiadds
adc
pop
mov
pop
xlat
adc
test
fxch
imul
mov
scas
loopne
or
mov
cmp
jg
pop
jbe
and
mov
fdiv
pushf
mov
jmp
mov
dec
xchg
pusha
jmp
pop
sub
xor
scas
or
and
sub
and
jnp
jne
push
cmpsl
stc
int3
jns
or
sub
clc
fsubrs
mov
add
dec
xchg
in
ljmp
jmp
add
or
cwtl
mov
mov
and
in
dec
mov
dec
push
add
pop
add
adc
or
scas
xchg
imul
mov
fildl
adc
or
enter
mov
lods
pop
mov
add
dec
xchg
das
sbb
test
cmp
inc
daa
aad
xor
lret
jae
push
daa
or
mov
enter
pop
pop
daa
mov
jmp
dec
rcrl
mov
call
adc
pusha
jnp
rcrb
mov
loop
shr
sbb
push
scas
add
das
stos
aam
shrb
pop
mov
out
enter
call
cli
ret
dec
cmp
cmp
outsl
cmp
mov
jmp
loope
scas
repnz
xlat
mov
jmp
in
inc
dec
xchg
mov
add
mov
xor
subb
jbe
js
mov
and
mov
in
aam
cmp
sbb
mov
imul
sbb
les
inc
xchg
push
dec
out
pop
inc
loope
movsl
sbb
add
add
repz
add
je
aam
imul
pop
lods
or
pop
push
xchg
adc
and
aas
mov
popf
insb
fsub
push
push
xor
or
test
cmpsl
mov
adc
movups
bound
fcoml
ljmp
cmovnp
and
nop
loope
adc
mov
add
cs
mov
daa
cmp
ss
orl
aas
inc
jle
adc
hlt
mov
sbb
jno
jb
pushf
adcb
jl
sub
inc
or
dec
and
add
ret
or
jmp
icebp
bound
push
mov
fsubs
xchg
push
or
push
mov
add
mov
stos
dec
ror
xchg
cmpsb
mov
adc
mov
xchg
js
pop
inc
fcoml
or
mov
jnp
mov
neg
or
outsb
mov
xor
and
std
sti
inc
inc
xor
stos
cwtl
scas
pushw
cmp
push
jmp
loopne
ret
mov
mov
pop
stc
push
mov
cs
cmp
lods
add
jecxz
iret
aam
xor
andb
push
lods
fsts
xor
shrl
ja
mov
xchg
mov
icebp
es
push
push
mov
popf
subb
jge
aad
jge
push
inc
mov
mov
xor
mov
add
dec
jmp
mov
rorl
inc
stos
lahf
push
inc
cmp
sbb
cmpb
xchg
sbb
push
cmpl
pop
mov
dec
push
lahf
mov
and
mov
repz
and
add
cmpsl
mov
dec
repz
ret
fisttpll
add
sub
ret
aas
stos
and
mov
data16
mov
mov
lahf
scas
fdivrl
mov
das
daa
add
jns
les
push
shr
xchg
aad
xchg
push
and
shl
mov
cmp
out
mov
adc
ret
repnz
jb
pop
loop
jl
pop
push
fnstcw
inc
jmp
clc
xor
xchg
hlt
cmp
and
lcall
add
es
mov
xor
xor
inc
or
and
push
cld
mov
ljmp
adc
loopne
or
repnz
add
jmp
stos
add
loop
addr16
repnz
mov
in
lahf
sti
cmp
cli
in
jge
jno
les
sbb
cli
xor
jns
xchg
xchg
or
or
sbb
sbb
movsl
pop
leave
test
ja
sub
ds
jp
sbb
jns
sub
lahf
sub
aam
insl
ret
adc
xor
mov
push
mov
sub
repz
jmp
cmp
ror
adc
sbb
ja
dec
std
lds
cltd
aas
xchg
mov
test
das
jo
pop
sti
or
dec
data16
and
in
es
das
mov
in
cltd
push
push
imulb
mov
addl
lock
mov
add
or
les
sbb
pop
stos
mov
push
add
hlt
fs
xchg
jge
push
es
orb
inc
cmc
addr16
scas
imul
mov
pop
pop
xor
adc
repnz
pop
and
adc
mov
scas
gs
xchg
cs
xchg
dec
jp
sub
mov
scas
lds
rcr
add
lret
shl
insb
push
dec
mov
dec
mov
mov
mov
insl
mov
insl
ret
inc
mov
pop
in
inc
or
rclw
add
scas
cld
jmp
cmpsb
mov
jb
mov
xor
xor
loop
push
pop
pop
push
mov
xor
enter
add
test
push
test
outsb
das
pop
pop
out
repz
insl
dec
subb
push
push
and
fbstp
add
in
mov
mov
orb
leave
sub
xor
xor
jmp
push
xchg
rol
popf
clc
lods
xor
pop
adc
test
out
test
in
add
push
lock
sbb
xorl
and
mov
stos
pop
push
cmp
mov
and
ljmp
mov
jmp
or
dec
add
lahf
add
rcrb
cmp
inc
rcrb
sbb
mov
daa
jne
push
mov
push
xchg
cmpsb
push
fsubr
iret
out
pop
lret
inc
pusha
jecxz
and
xor
add
adc
scas
in
fistpl
shl
dec
add
cld
push
add
sub
loopne
mov
daa
pushf
mov
sub
xchg
cwtl
dec
mov
xlat
mov
pop
adc
mov
push
add
sub
cmpb
stc
push
mov
dec
fidivs
mov
pop
sub
cmp
mov
cmpl
push
int
and
jmp
dec
pop
in
out
adc
imul
mov
or
sti
call
scas
leave
mov
shlb
push
dec
add
rorb
aas
pop
out
popa
add
out
stos
dec
pop
pop
pop
out
xlat
cmp
or
movsb
cmpl
xchg
clc
cmp
jnp
cmp
icebp
and
or
cmpsl
and
push
jle
inc
nop
cmp
jns
inc
incl
in
and
insb
jmp
sbb
in
scas
stc
mov
add
pop
mov
mov
xor
inc
inc
cwtl
dec
push
ret
dec
xor
sub
xor
fcmovnu
inc
or
psubd
mov
add
pop
test
movsl
loope
jmp
sbb
rdtsc
lret
aam
and
outsb
xor
push
jle
sub
es
out
add
fucomi
xor
and
add
jns
fucomip
or
pop
out
xlat
out
xchg
add
cld
cmpsl
inc
lods
sub
mov
push
enter
pop
or
les
push
add
pop
arpl
mov
mul
and
inc
pushl
clc
pop
in
test
push
lea
xchg
push
gs
add
sub
es
cmpsb
xchg
and
jp
negb
pop
sub
add
loop
add
push
push
popa
mov
icebp
jl
inc
jne
cwtl
lcall
call
push
test
repz
addr16
fistpl
xchg
pop
adc
aaa
mov
mov
push
push
jns
gs
lea
shl
cli
jne
dec
test
add
aam
add
outsl
ss
insl
and
xor
maskmovq
inc
and
mov
adc
mov
divb
add
test
outsb
enter
pusha
bnd
push
shll
cli
jg
in
jmp
outsl
and
rcr
jb
clc
repnz
sub
call
mov
push
repnz
cmpsb
or
jne
add
xor
dec
fcmovnu
pop
jbe
mov
in
pop
add
fdivs
stos
clc
arpl
stos
mov
jl
xchg
loop
cmp
mov
jno
mov
fsts
mov
aas
call
dec
pop
add
inc
xchg
jo
rcpps
repz
dec
push
ja
nop
fcmovb
sahf
cmp
push
add
xor
push
adc
popa
xchg
imul
pop
mov
sub
jmp
rclb
jl
add
loop
dec
jae
jbe
pop
add
push
fsts
fdiv
movl
cmc
inc
ds
mov
jecxz
js
popl
jge
add
cmp
push
xor
sbb
jmp
xchg
popl
mov
sub
mov
addb
repz
jmp
iret
push
xchg
ds
popa
dec
ret
or
adc
mov
mov
call
jne
test
stos
dec
push
xlat
data16
jmp
pop
jnp
das
push
xchg
pop
mov
test
out
icebp
pop
ret
sbb
shrl
jno
pop
and
push
std
shll
push
sti
mov
sbb
push
jg
xchg
pop
fwait
mov
loop
imul
push
push
mov
push
dec
sbb
test
jo
js
pop
jnp
push
mov
pop
jmp
adc
mull
outsl
sub
cmpl
fadds
xchg
push
cmpb
and
jns
add
scas
paddw
cltd
fstpl
push
les
adc
push
repnz
or
mov
mov
repnz
push
jle
inc
mov
je
xchg
inc
mov
sub
mov
negl
js
es
fxch
mov
add
leave
idivb
sub
pop
mov
loope
sub
popf
inc
xlat
add
stos
inc
fldcw
jo
gs
ja
push
jmp
loopne
sahf
push
dec
add
dec
iret
test
les
xor
sub
xor
push
notl
repz
das
pop
jle
xchg
call
pop
and
dec
push
inc
or
out
mov
mov
xchg
es
or
push
add
cmpl
ja
sub
mov
dec
dec
inc
pop
sub
and
pop
xor
pop
jns
movb
dec
sub
test
sbb
stc
test
xor
pop
add
or
shr
cs
mov
sarl
mov
jmp
push
fimull
dec
or
dec
call
mov
mov
inc
outsl
pxor
xchg
pop
dec
push
nop
pop
scas
jl,pn
cmp
mov
dec
js
mov
mov
out
mov
loope
dec
adc
adc
pop
mov
es
mov
inc
sarb
dec
xchg
xor
lahf
shrb
out
bndldx
mov
in
xchg
push
jb
dec
jp,pt
dec
jmp
mov
cmp
dec
std
lret
lock
icebp
mov
lcall
subl
sbbb
in
sub
dec
mov
cmp
mov
pop
in
pop
mov
call
test
repz
add
sbb
das
cmp
add
test
push
push
mov
pop
mov
cmp
repz
adc
push
testl
das
test
pop
mov
sbb
add
mov
cltd
xchg
jmp
in
mov
sub
fcomps
and
shlb
cmp
int3
fwait
xor
aaa
xlat
or
aas
adc
adc
test
sbb
jge
lahf
adc
mov
mov
inc
shll
jecxz
or
int3
repz
sub
adcb
loop
sub
sub
xchg
or
push
push
mov
out
add
sti
cmp
sub
aad
mov
pop
out
bound
inc
jmp
ja
sbb
out
imul
divl
jecxz
jmp
pop
pop
lahf
aaa
or
sub
cmc
push
in
inc
sahf
lea
repz
inc
ret
push
xor
and
cltd
mov
dec
mov
push
pop
pop
jmp
jmp
xor
popf
jle
jp
xor
sub
stc
push
outsb
or
jge
mov
mov
jmp
and
jp
jb
pushf
dec
push
xor
mov
push
mov
pop
xorb
or
jmp
ja
dec
ss
loop
test
add
pop
cmpsl
ficompl
cwtl
add
outsl
addb
dec
add
insb
clc
push
rorl
add
fnstsw
aam
outsl
sahf
imul
xor
imul
and
push
sub
dec
push
mov
lret
aas
and
xchg
divl
mov
add
xlat
outsl
push
lahf
fcoms
add
inc
pop
jno
or
pusha
in
dec
stc
or
call
xchg
xor
mov
mov
daa
mov
mov
cmp
enter
jg
ja
jmp
xchg
dec
sbb
pop
stos
mov
mov
mov
fldt
in
orb
add
cli
cs
push
cmp
dec
stos
pop
sbb
clc
ja
push
in
cmp
in
adc
mov
cmpsl
in
jmp
and
push
mov
pop
xchg
jne
jnp
jmp
adc
das
test
cmp
add
fimull
adc
mov
push
pop
out
mov
out
mov
mov
inc
jnp
jne
call
jo
addb
cmp
adc
mov
setne
adc
push
jmp
rcll
clc
add
add
jno
cmc
cmp
sub
in
cli
push
pop
xor
add
xchg
rolb
repz
mov
ds
in
xor
dec
mov
dec
popa
adc
adc
sbbb
scas
dec
stos
push
cmp
orb
adc
out
xor
fincstp
rol
mov
cld
rep
jle
lds
jmp
inc
jo
xchg
and
int3
inc
rcrb
insl
sbb
or
pop
add
push
add
add
fadds
lods
sub
cli
rcl
in
int
lods
add
push
mov
jmp
xor
or
cmp
or
push
add
jge
imul
clc
imul
in
int3
adc
adc
cltd
adc
sub
lret
sbb
mov
push
push
adc
mov
ss
in
push
cmp
aam
dec
jbe
push
xor
int
inc
dec
mov
es
dec
scas
fdivrl
mov
jg
gs
lahf
jecxz
mov
js
xchg
mov
jmp
hlt
clc
dec
push
lds
imul
dec
dec
jl
sbb
push
arpl
or
mov
movsl
pop
jmp
add
jns
sar
jnp
imul
addr16
jle
push
or
dec
pop
mov
xchg
xchg
idivb
mov
movsb
push
jecxz
fwait
or
xor
mov
push
xor
mov
and
sub
pop
in
subl
inc
add
jmp
push
sahf
mov
mov
inc
jb
xchg
fcoms
es
loop
test
cmpsb
mov
jb
and
push
mov
add
ret
std
xchg
sbb
data16
mov
push
dec
insl
bound
sbb
movsb
cwtl
pop
and
lods
loopne
mov
lods
js
or
ret
mov
add
test
pop
or
cmpsl
mov
repz
pop
xchg
add
test
enter
inc
iret
add
xchg
in
aam
mov
es
add
addl
lods
ds
cld
mov
pop
sbb
jmp
lods
lahf
into
jno
ret
add
dec
mov
ljmp
clc
xchg
pushl
xor
cmc
dec
or
test
pop
add
subb
jb
jmp
addr16
mov
mov
aad
cmp
add
jmp
push
imull
sbb
in
mov
out
aad
xchg
mov
sub
dec
xor
xor
push
push
and
jmp
in
add
fndisi(8087
add
add
iret
pop
mov
xor
pop
push
roll
lahf
lret
or
rolb
popf
cwtl
shrl
jg
cs
sbb
jo
or
mov
stos
mov
adc
enter
loop
add
push
push
test
in
sahf
jnp
mov
nop
pop
pop
dec
jns
mov
push
sbb
push
das
mov
jmp
xchg
cmp
je
jnp
ljmp
and
cwtl
cwtl
pop
add
mov
jnp
rclb
mov
mov
iret
mov
cmp
stos
sub
mov
pop
push
je
jge
iret
xchg
jmp
inc
xlat
xor
lret
cmc
sbb
pop
mov
push
or
xor
xor
out
popa
sbb
and
sbbl
ja
or
push
pop
inc
les
ret
imul
adc
stos
pop
mov
cltd
dec
idivb
or
mov
aam
dec
hlt
push
mov
jnp
aas
scas
test
jbe
cmpsb
ja
cmp
push
cli
xor
xlat
cs
cltd
rcrb
mov
add
cmp
movsl
mov
add
sub
ret
or
dec
push
xchg
ret
loopne
aam
jl
fnstsw
lds
push
and
int
jl
cli
or
imul
stos
pop
loop,pt
sbb
pop
cmpxchg
and
rorb
es
xor
add
adcw
std
mov
cld
inc
fs
pop
sub
loope
cmp
sub
fcomip
movsl
dec
pop
popa
or
leave
fwait
cmp
lds
cmp
movsl
ljmp
or
jns
add
xor
lret
push
add
jne
sti
jno
mov
jle
mov
mov
mov
xorb
les
mov
lock
and
mov
sub
mov
repz
mov
testb
cmp
jl
adc
dec
scas
sub
jo
nop
outsb
adc
jmp
or
pop
test
jae
inc
hlt
aas
lcall
inc
jne
dec
pop
stc
mov
jp
popf
push
nop
sub
or
outsl
lock
push
mov
repnz
push
sbbl
ds
vprotw
xor
mov
or
add
sub
sub
orb
push
lahf
sub
iret
sub
adc
jp
scas
out
ds
das
pop
add
mov
pop
and
shll
das
mov
xor
cmp
or
lock
sbb
or
in
ljmp
xlat
mov
scas
pop
sub
mov
fdivrs
pop
mov
outsb
mov
cli
fdivs
xchg
jnp
scas
mov
and
mov
pop
das
sub
in
mov
jg
notb
das
adc
jecxz
pop
sbb
add
jnp
push
dec
xchg
andb
inc
movsl
and
inc
and
shr
dec
jg
add
jmp
and
xlat
dec
push
repnz
add
repz
into
imul
pop
jnp
cmc
cmp
sub
aad
jmp
fld1
ret
jg
sbb
mov
add
mov
jbe
cmp
lea
pop
shr
or
fisttpl
lret
xor
pop
lods
cmc
es
add
enter
ret
mov
and
pop
xor
cmp
cltd
pop
add
scas
mov
mov
fcompl
inc
loop
or
cmc
push
cmp
and
jmp
sbb
dec
pop
jns
pop
mov
add
push
and
in
scas
jb
push
adc
in
mov
push
xchg
xchg
cmovae
in
mov
movsb
push
imul
mov
sti
inc
aad
out
mov
mov
sub
popf
or
cld
leave
xor
push
cmpsl
cmp
or
dec
pop
or
push
arpl
pop
ja
add
push
mov
push
inc
jns
add
fsubs
imul
push
or
sub
xchg
add
cmp
jg
sbb
and
cmp
mov
mov
sbb
jmp
xor
ffreep
adc
fnstsw
xor
fildll
leave
pop
stos
jno
outsb
mov
and
and
and
inc
xor
mov
cvtps2pi
add
lea
repnz
xor
fwait
in
add
shrb
add
sub
into
jmp
mov
popl
bsr
add
inc
js
xchg
popa
xor
in
clc
mov
push
xorl
cmp
sub
out
icebp
add
std
jnp
dec
in
inc
rorl
dec
and
or
inc
pop
or
sbb
xor
lock
gs
jg
ljmp
ljmp
or
gs
push
jge
sub
push
rcrb
add
in
cmp
cmp
cld
decb
xor
rorb
subl
repnz
xor
in
pusha
decl
push
mov
and
test
xorb
popa
scas
lock
add
fldl2t
or
mov
adc
xor
cld
je
push
mov
xor
sub
out
sub
ja
jo
add
movsb
xor
into
adc
adc
cmp
pop
jmp
stc
dec
cs
fcomp
in
repnz
shll
lret
push
imul
sub
outsl
sti
icebp
aaa
fldenv
gs
clc
add
ja
notb
add
add
or
lock
cmc
push
jmp
fisubs
xor
popa
push
mov
outsl
ljmp
cmc
mov
mov
aaa
adcb
or
shlb
mov
jmp
je
popf
mov
inc
aas
add
repz
or
cmp
mov
daa
push
xchg
push
or
push
cmp
sahf
dec
cmpsl
mov
ja
lret
lret
in
test
ret
sub
add
movsb
into
add
outsl
jo
shl
popf
orb
cmpsb
icebp
jp
mov
mov
xchg
inc
or
pop
fsubrs
jle
cli
push
mov
jg
jmp
mov
pop
pop
push
icebp
mov
sub
mov
dec
div
jnp
sbb
pop
or
pop
cs
decl
and
xor
roll
mov
lahf
jecxz
fcmovu
pop
cld
xchg
outsl
shlb
dec
mov
jl
lds
mov
enter
add
pop
leave
or
popa
xor
loopne
add
ds
xor
dec
adc
adc
cmpsl
in
add
mov
clc
testb
push
lret
imul
adc
movb
mov
adcl
push
ss
movmskps
jl
add
adc
test
sub
dec
test
roll
add
pushf
or
and
pop
mov
mov
je
faddl
add
mov
mov
xchg
or
jecxz
inc
xchg
loope
mov
popf
sahf
xchg
add
scas
jnp
int
je
cld
ds
jno
into
cltd
jae
scas
xor
push
aas
xchg
add
and
test
add
jmp
pushw
loope
inc
jae
sub
dec
scas
inc
or
insb
mov
mov
push
and
js
nop
push
enter
test
mov
sahf
and
and
inc
test
add
scas
int
test
jl
add
jns
inc
dec
int
add
aad
add
jo
mov
cmp
push
pusha
mov
add
lods
mov
ret
subb
les
icebp
jle
or
call
sbb
jg
fbld
add
arpl
jbe
xor
fstl
jae
cmc
push
and
dec
pop
scas
out
out
stc
inc
add
push
cld
in
test
add
imul
mov
dec
jp
repz
pop
sbb
mov
sub
add
jle
xorb
aam
test
outsl
jb
xor
lock
andl
sbb
mov
fisubrl
pop
mov
add
outsl
addr16
jp
add
sbb
imul
xchg
add
mov
test
ficomps
mov
mov
stos
fadds
cwtl
xor
jecxz
call
push
es
andb
xchg
adc
aad
nop
lds
sbb
lret
stc
sarb
add
mov
ds
xor
mov
rol
jl
movsl
cmp
push
addl
jle
xor
fisttpl
mov
or
dec
enter
out
call
xchg
add
pop
nop
xchg
mov
ljmp
stos
add
mov
shlb
ja
cltd
cvttps2pi
lret
mov
sbbl
add
cltd
push
push
nop
daa
or
test
mov
add
and
jl
mov
loop
sbb
dec
jb
mov
mov
and
cwtl
stos
data16
cmovp
ret
shll
push
mov
ss
cmc
mov
pop
dec
mov
cmp
adc
inc
call
and
sbb
add
inc
push
outsl
ret
in
stc
sub
out
add
notb
adc
add
nop
movsb
xchg
jns
cmp
testl
cmc
inc
repz
mov
ss
fildl
popf
mov
and
pushf
add
push
or
out
jbe
jl
jmp
daa
add
or
mov
xor
dec
pop
jnp
je
add
lds
es
adc
add
icebp
mov
fldl
arpl
addr16
cmc
mov
roll
popa
add
sub
mov
pop
cmp
punpckldq
mov
add
xchg
adc
lods
xor
outsb
or
int3
add
stos
inc
scas
jmp
lods
inc
lcall
bnd
es
fadds
cmpsb
xor
mov
add
mov
repnz
ja
nop
xchg
pop
cmc
cwtl
enter
inc
jns
jo
cmpsl
add
inc
push
in
jae
in
xorb
out
mov
or
mov
add
out
inc
push
inc
push
repnz
cmp
cmc
faddl
sub
or
call
xchg
add
das
lcall
add
loop
cmp
scas
shlb
add
push
adc
or
mov
xchg
sub
outsl
stos
pusha
or
addb
jns
sub
sub
sub
add
ja
test
mov
cmp
out
add
push
add
cli
outsl
fisubl
mov
std
aam
cmc
outsb
push
int
adcb
mov
xor
stos
inc
sahf
rcrb
pop
adc
mov
and
pop
arpl
mov
insl
jecxz
cmp
outsl
mov
jb
add
xchg
pop
mov
rorb
xchg
daa
insb
fs
add
in
push
jne
push
ljmp
andl
mov
test
fadds
pop
jbe
subb
mov
movsl
imulb
pop
ficoml
out
add
jno
push
pop
in
lcall
jbe
repnz
add
pop
or
rorl
movsl
lcall
mov
cld
scas
xchg
mov
cli
pop
add
and
xchg
cmp
fsubs
add
inc
sbb
stc
push
popa
add
add
push
jo,pt
xor
outsl
shll
rclb
xor
mov
outsb
dec
subb
mov
jmp
pop
cmc
pop
add
mov
add
clc
les
repz
in
add
je
aam
lock
add
into
ljmp
cld
sar
pop
jb
push
or
orb
mov
pushf
xchg
mov
mov
dec
inc
add
js
push
test
mov
push
pop
add
fsubrs
jns
xor
fs
push
lret
add
mov
xlat
mov
mov
fimuls
mov
cmp
rorl
cmp
adc
mov
add
pop
icebp
mov
jb
je
movsb
nop
xlat
mov
sbb
ret
add
lahf
test
add
lods
mov
mov
cmp
out
jge
adc
sti
ds
or
pop
mov
lea
or
outsl
je
add
aaa
or
cmpsl
cmp
inc
add
xchg
test
pop
xor
stos
sbb
movlps
or
jne
jl
cmp
inc
inc
sbb
cmc
dec
ret
pop
int
add
test
fnstenv
lcall
idivl
fsubl
inc
pop
jno
dec
popw
mov
adc
cmpsb
add
mov
adc
out
dec
xor
sbb
inc
fmuls
out
andl
xorb
enter
imul
fnstsw
xchg
jns
je
out
or
jecxz
lock
ffreep
mov
pop
aaa
mov
dec
inc
pushf
add
pop
xor
add
and
push
stc
add
cmpsl
mov
shrd
dec
mov
aam
sbb
mov
xchg
lret
push
add
push
xor
les
mov
pop
in
loop
inc
mov
inc
fwait
je
in
xorb
push
sbb
xchg
scas
std
call
adc
jp
int3
jl
cmpsl
add
aas
iret
cmp
jge
lea
out
les
js
add
or
pop
or
pop
pushf
adc
cs
popf
call
imul
xlat
fldenv
xor
cmp
je
and
fadds
sbbl
xor
fildl
push
daa
add
insb
aaa
outsb
cld
sub
jb
add
add
cli
sbb
jae
mov
add
stc
cmpsl
adc
xchg
sbb
cmp
rclb
jns
lock
in
add
fneni(8087
movsb
sbb
bound
int3
xchg
jge
cmp
sub
xchg
out
xorb
mov
add
sub
or
jle
ret
jo
pop
adc
arpl
push
sub
out
popf
xchg
jg
jg
sub
jle
add
into
ffreep
inc
push
dec
fucomp
push
add
loop
call
orb
arpl
xchg
pop
inc
pop
popa
and
in
add
adc
xor
inc
add
call
loopne
adc
pop
and
add
cld
push
dec
mov
or
mov
push
shlb
add
mov
pop
add
mov
aaa
stos
sarb
lods
push
jno
lahf
pusha
mov
add
rcl
cwtl
xchg
testl
add
mov
push
adc
add
test
mov
psllq
ficoml
orb
cmp
lea
jmp
sub
lcall
fs
call
scas
add
mov
lret
cmp
scas
mov
shll
or
mov
add
push
mov
or
mov
ret
cmpb
sub
lea
push
xor
arpl
sbb
lods
out
imul
jmp
nop
pop
shl
add
in
sub
mov
insb
sarb
ss
inc
lock
sub
push
addr16
add
jo
hlt
add
ljmp
loop
fbstp
xchg
fildl
sub
cmp
hlt
in
loopne
push
push
jb
in
loope
in
push
add
jbe
pop
mov
pop
andb
movsl
mov
cmp
test
push
add
je
mov
add
mov
or
add
cld
in
or
add
or
hlt
daa
inc
ret
or
add
push
imul
mov
adc
into
popa
leave
repz
rol
fisttps
mov
add
stos
in
dec
popa
adc
push
add
mov
adc
imul
out
pop
ds
ret
push
xlat
pop
addb
rorb
add
mov
jbe
popa
pusha
in
cwtl
xlat
xor
jnp
shl
bound
rcrl
jae
inc
jo
idivl
add
lret
fisubl
fsubr
out
dec
jmp
jl
mov
mov
clc
mov
repnz
pushf
mov
lahf
ja
xor
loop
lret
scas
cmp
cwtl
or
stos
mov
adc
int3
hlt
jb
add
in
push
iret
pop
jo
andb
add
jmp
cltd
or
cwtl
inc
nop
loopne
cwtl
in
arpl
outsb
lret
and
jl
mov
sub
cltd
lcall
pop
hlt
dec
aam
nop
adc
adc
test
out
push
sbb
add
jecxz
call
mov
sub
aas
std
hlt
and
lcall
push
xchg
mov
lock
pop
push
lods
shlb
cld
cmp
xchg
pop
sbb
test
dec
sub
mov
loope
adc
shll
or
enter
add
test
ret
mov
jp
lods
cli
adc
push
add
rorb
out
add
loopne
lret
pop
andb
pop
pop
pop
out
cmp
pop
cwtl
mov
insb
add
fcomps
mov
and
mov
andb
add
insl
dec
ds
mov
push
es
add
inc
dec
repnz
or
sub
jns
dec
add
imul
sbb
xor
add
lahf
jo
clc
stc
loope
sbb
loopne
ficompl
inc
call
rcrl
dec
dec
ljmp
mov
mov
or
mov
add
ret
imul
in
sar
js
jmp
mov
add
push
dec
jo
shll
add
pop
and
jecxz
push
add
pusha
cmp
stos
out
mov
rcl
jl
js
sbb
mov
dec
jo
and
in
daa
ud2
jo
in
jmp
sub
fiadds
insb
ds
jbe
inc
add
loope
cmp
fstl
adc
mov
mov
and
push
fiadds
mov
cmpsl
psrad
ds
xor
jbe
repnz
add
imul
test
cmpsb
movb
xchg
sub
sbb
sub
rolb
and
jl
movsb
mov
push
jo
ret
mov
loopne
pop
fiaddl
lcall
sbbl
jns
mov
mov
aam
push
add
shl
sarb
mov
icebp
xchg
xor
cld
jae
jl
xorb
nop
clc
adc
scas
push
in
push
nop
pushf
cmp
xor
pop
lods
push
add
mov
int
loopne
enter
mov
cmp
adc
pushf
push
jp
fs
mov
sub
aaa
mov
aas
adc
popa
into
rcl
rcl
and
pop
add
icebp
mov
gs
repz
faddl
push
cmp
roll
nop/reserved
xor
sub
xchg
fsubr
lcall
dec
mov
lock
adc
or
push
push
stos
xor
stc
inc
sub
push
arpl
fs
sbb
popa
fucomi
fisttpl
fucom
aad
hlt
mov
popf
stos
mov
pop
pop
cmp
mov
mov
jle
sub
aam
cld
cwtl
cmp
call
popf
jne
mov
xchg
jbe
bound
imul
shlb
and
cmpsb
add
dec
inc
or
aam
cmp
addps
push
pusha
ffree
cmpl
sub
lods
add
mov
mov
sbb
adc
push
or
sahf
mov
mov
movsl
pop
jnp
movzwl
ds
sarb
ljmp
aas
pusha
xor
cmp
add
cmp
cmp
mov
stos
mov
nop
js
add
hlt
aam
ret
jns
add
pop
adc
cmp
push
dec
or
mov
mov
ss
popf
add
cmp
dec
loopne
and
add
mov
inc
xchg
jmp
sub
fiadds
xchg
sar
dec
addb
je
arpl
jnp
dec
xor
sub
add
aas
dec
shrb
cmp
mov
movb
xchg
adc
fisubrs
aas
add
xchg
cli
push
adc
add
jle
loop
add
mov
pop
in
imul
in
out
dec
pop
adc
stc
popf
jb
adc
push
inc
ss
call
add
in
cs
lret
js
add
stos
and
add
push
add
arpl
test
or
sbb
xor
lret
inc
cmp
add
cmp
dec
shrb
sti
adc
and
pop
cwtl
cltd
enter
dec
aad
setb
adc
nop
jge
mov
push
push
jg
inc
and
fwait
mov
lock
nop
and
enter
gs
jnp
repnz
inc
imul
popf
cmpsb
test
or
jno
add
inc
and
or
add
push
adc
mov
std
sti
mov
scas
test
fs
sub
add
test
xor
dec
js
xchg
add
mov
data16
in
cmp
leave
sti
cltd
xchg
xchg
nop
ret
fidivs
notb
movsl
and
test
adc
nop
lods
sbb
shlb
fisttpl
jmp
adc
push
sbb
mov
dec
xchg
add
xchg
sbb
cmc
daa
cmp
jne,pn
inc
dec
dec
pop
test
jo
lods
mov
add
push
pushl
lahf
cmp
filds
outsl
dec
fcoms
add
ds
imul
xor
enter
add
push
jno
add
stos
xlat
or
sub
test
xchg
add
movsb
into
lret
and
jp
clc
icebp
sub
insb
mov
fwait
cwtl
leave
mov
loop
pop
ss
adc
shlb
mull
add
subb
adc
mov
xchg
pop
push
jl
dec
pop
mov
lret
punpcklbw
cmp
push
test
mov
add
xor
out
dec
cwtl
jmp
add
mov
and
cli
push
mov
mov
mov
add
jns
pop
inc
mov
repnz
lds
jge
pusha
sbb
cmpsl
xor
lcall
and
mov
cmpb
cltd
int3
adc
pop
hlt
sub
repnz
push
xchg
int
xchg
add
push
sub
test
push
mov
add
arpl
xchg
fimull
add
push
pop
in
xor
or
rclb
jns
push
shrb
in
orl
add
cmp
test
xor
mov
xchg
das
push
mov
push
daa
mov
and
pop
adc
loopne
loopne
sub
mov
jne
add
cmp
pop
call
and
cmp
or
sub
cmp
into
add
pop
orb
out
push
sbb
pop
cli
sbb
push
jae
rorl
scas
dec
popa
jbe
std
mov
add
push
adc
lods
divb
mov
insb
std
popf
xchg
add
mov
inc
out
xor
mov
sbb
and
jle
cmp
fisubrs
pop
pop
insb
inc
imul
inc
sti
lcall
das
sbb
sbb
lcall
cmp
lods
imul
sahf
lcall
or
outsl
push
jg
add
es
pop
pop
add
inc
mov
adc
popa
add
jp
add
movzbl
jbe
loope
out
cld
movsl
pop
cmove
loopne
pusha
pushf
nop
and
jb
adc
mov
adc
or
jbe
xchg
xchg
sub
adc
inc
add
cmpsl
inc
jp
cmp
cli
lods
rcr
into
push
add
or
jbe
out
or
pushw
xor
add
sbb
inc
nop
add
push
or
movb
and
mov
stos
dec
add
arpl
jne
xchg
stc
mov
cwtl
nop
add
adc
xchg
pmaxub
cmp
pop
aas
stc
loopne
add
or
add
dec
fistl
sar
daa
das
rolb
les
leave
jo
dec
adc
push
push
pop
int
notb
in
dec
out
rorl
jl
jns
mov
fadds
inc
shll
push
jno
mov
jo
xor
rolb
mov
jne
arpl
jmp
push
or
mov
pop
inc
add
popa
sbb
and
add
aad
fisttpll
and
add
lcall
jmp
mov
in
jne
add
repnz
outsb
aas
shrb
dec
les
lcall
jmp
adc
cs
adc
sbb
push
xchg
orb
push
add
into
mov
icebp
aam
movsb
adc
cmpsb
pop
cmc
nop
scas
sti
push
sub
sbb
or
add
fcomi
outsl
rolb
xlat
mov
lcall
cmpsb
ss
rcl
mov
cwtl
mov
sub
mov
xor
add
cld
add
int3
cmp
rorb
add
outsl
fs
shlb
jae
cltd
lahf
dec
mov
pusha
popf
cmpsl
or
jp
add
jae
and
xchg
out
int3
add
and
push
cmpsb
mov
shrb
add
pop
hlt
pusha
popa
add
popl
hlt
imul
push
in
pop
lret
movups
imul
or
sti
in
std
mov
add
fsubs
cmp
mov
adc
rcr
add
insl
or
add
xchg
cmp
pop
push
add
rclb
sub
mov
add
xchg
xchg
hlt
add
push
iret
and
cltd
jecxz
jo
sbb
cld
dec
iret
cwtl
xchg
cmpb
mov
cmp
mov
add
fadds
add
sbb
fadds
mulb
xchg
jp
jae
add
shlb
push
sub
and
in
aas
add
clc
and
xchg
add
inc
pusha
adc
xchg
ss
and
dec
aaa
add
mov
xor
cmpsl
jbe
mov
lds
mov
and
js
push
mov
aaa
pop
loopne
loop
jle
inc
mov
add
xor
lret
roll
test
rcrb
or
ret
enter
das
sahf
orl
imul
or
shl
add
sub
or
pinsrw
std
sub
call
add
sub
mov
add
call
push
ret
add
inc
aas
xchg
adc
cmp
ss
popa
xorb
std
add
adc
add
nop
ss
add
and
cmc
xor
add
jmp
add
dec
pop
fdivrs
repnz
sub
add
fldenv
test
adc
ljmp
xchg
leave
mov
inc
xchg
sub
add
mov
scas
aas
xor
ds
jle
add
out
dec
out
leave
lds
push
add
ljmp
mov
into
add
repz
jmp
jp
leave
cmp
push
inc
jno
push
add
adc
mov
repz
inc
inc
pusha
cld
lods
cmp
enter
mov
je
fcoms
outsb
shlb
int
inc
push
xchg
xor
leave
add
add
sbb
inc
loope
movsl
test
add
in
push
addl
fwait
push
push
lahf
or
mov
xchg
leave
aas
or
jb
push
in
push
sbb
add
push
jnp
mov
xlat
popf
int3
xorl
int3
add
dec
mov
mov
sbb
daa
popa
add
ljmp
cmpsb
lods
mov
add
add
dec
pop
inc
fwait
jmp
pop
jle
into
in
leave
add
pop
adc
bnd
sbb
pop
dec
push
mov
mov
pop
mov
cmp
dec
pop
insb
hlt
sbb
aam
add
stos
add
test
xor
mov
xor
in
fstpt
fiadds
push
shlb
jge
pop
je
add
dec
in
dec
inc
roll
mov
dec
sti
add
in
dec
jne
repnz
inc
add
movsb
dec
mov
orb
aam
mov
add
jmp
pop
mov
cmp
fcomip
fwait
or
and
push
adc
adc
inc
add
negl
pop
dec
and
in
dec
out
cmpsl
lret
add
aad
cmp
and
mov
movsl
adc
leave
mov
inc
pop
rorb
sbb
xor
pop
jle
add
js
add
pop
add
and
lods
clc
add
testb
mov
jns
mov
ljmp
dec
jae
xor
add
enter
mov
out
add
mov
dec
testb
dec
cmp
mov
lods
clc
loop
push
int
pusha
or
repz
add
cltd
mov
addb
mov
icebp
es
stos
loop
dec
fstp
data16
mov
lahf
movsl
filds
and
cmpsl
repz
mov
out
iret
scas
sbb
pop
inc
int
inc
mov
mov
subb
mov
subb
mov
lret
xchg
jb
and
jo
or
add
mov
add
lahf
jg
xchg
cmpsl
lock
rcll
lcall
cmpsb
mov
inc
sbb
sub
into
pop
or
movsl
test
add
fs
test
or
jge
mov
mov
jl
push
jbe
lcall
mov
and
or
subl
arpl
mov
addl
sbb
cmp
fwait
stos
outsb
push
inc
mov
push
push
sub
ds
shl
mov
mov
fsts
sbb
je
adc
cmp
sbb
rclb
shl
and
shlb
lret
inc
aam
add
lods
push
pusha
dec
sub
add
pop
cmp
jle
test
cld
dec
mov
ficomps
inc
fidivl
leave
jnp
iret
inc
nop
ss
pop
add
dec
cmpsb
fsubrs
pusha
stc
lock
xor
cmp
xchg
stos
cli
mov
sbb
movsl
repnz
ja
lds
pop
movsb
adcb
das
cwtl
stos
incl
lret
pop
daa
jo
push
add
pop
int
mov
jecxz
xchg
mov
add
xchg
adc
mov
mov
jg
enter
out
sbb
adc
mov
xchg
cmp
repnz
jp
inc
cwtl
mov
out
xchg
mov
push
inc
sbb
sub
out
js
inc
mov
add
stc
pushf
add
fnsave
xchg
ss
pop
dec
ret
adc
sbb
insl
in
pusha
cld
call
or
mov
cwtl
pop
clc
add
repnz
lret
outsb
xlat
test
push
and
pop
mov
mov
fdivrs
xchg
sarl
pop
jmp
inc
sub
ja
decl
mov
clc
or
cmp
pop
movsl
sub
and
mov
pop
enter
mov
push
call
dec
pop
in
clc
mov
data16
add
push
fwait
inc
adc
add
imul
js
cmp
addr16
loope
js
pusha
psrad
test
or
loope
icebp
mov
push
ret
mov
pop
cmp
push
mov
out
mov
enter
roll
push
xor
push
aad
ds
or
gs
es
sub
pusha
cmp
push
xchg
push
add
arpl
jle
cmp
and
add
adc
pusha
clc
jecxz
mov
mov
push
and
push
cmpsb
sbb
clc
push
mov
lret
add
in
les
rcll
imul
sub
jge
push
dec
aad
rol
jno
xchg
jmp
xchg
add
xchg
ror
mov
jmp
js
sahf
lods
jl
add
outsb
xchg
xchg
mov
pop
adcl
add
and
enter
jg
inc
cld
dec
fsubs
add
lcall
xchg
jmp
divb
les
dec
jg
pop
pop
fiadds
adc
ja
hlt
add
stos
shlb
mov
rolb
pusha
shrl
nop
cmp
sbb
lods
pusha
add
aas
insb
dec
inc
cmp
arpl
and
push
pop
sub
and
loopne
dec
and
xchg
add
mov
je
sbb
lock
and
and
jle
sbb
bound
xchg
lahf
shlb
sub
mov
mov
adc
adc
or
or
xchg
inc
and
inc
adc
cld
add
in
outsl
pushw
loopne
mov
outsb
or
cmp
into
push
or
lcall
mov
mov
jmp
out
loope
call
cmpl
data16
or
pusha
sbb
cld
ja
mov
mov
cmp
outsb
add
scas
jo
testl
fdivl
rorb
dec
sbb
cs
pop
sarl
das
mov
lock
inc
xchg
dec
mov
lea
jb
lock
mov
sub
pop
and
repz
mov
and
sbb
and
flds
inc
pop
lods
cmp
rclb
jnp
add
lods
ja
add
dec
lea
xchg
add
lahf
dec
jp
int
adc
test
insb
and
mov
xchg
pusha
mov
or
je
xchg
je
subb
sbb
es
lock
fcmovnbe
cltd
add
dec
sbb
add
jle
mov
inc
movsl
adc
sbb
sbb
mov
mov
test
dec
mov
shrl
inc
adc
es
jnp
mov
fisttpl
shll
mov
inc
bound
adc
sbb
mov
push
pusha
imul
mov
rcll
xchg
pop
outsl
add
inc
insl
mov
fildl
cmpsb
ret
add
outsb
xchg
cmpsl
es
push
add
outsl
mov
inc
add
add
and
or
sti
add
popf
sbb
stos
outsl
jae
push
sub
inc
shlb
push
pop
fsubrl
je
cmp
mov
cld
cli
or
sbb
mov
popa
push
call
pusha
adc
xorb
jb
xor
popa
xor
movsl
and
lahf
fcomps
je
sub
leave
data16
call
pop
adc
jae
test
pop
and
lahf
fists
mov
enter
or
iret
fwait
and
mov
cmpsb
push
int3
lock
sub
call
adc
cli
inc
in
ret
push
popl
cmp
fwait
mov
jecxz
or
stos
jge
xchg
cld
add
mov
cltd
sbb
cwtl
movsl
je
sub
out
and
xorl
ja
jo
cltd
jne
inc
mov
inc
or
pop
xor
decl
out
loopne
lcall
sub
test
jl
jecxz
scas
dec
mov
xor
jnp
stos
xor
icebp
es
inc
mov
sbb
push
lret
adc
std
rorl
dec
sbb
roll
inc
xchg
scas
mov
and
in
sbbb
cltd
xor
jne
mov
sub
and
mov
mov
adc
mov
xchg
add
jge
xchg
sbb
and
or
divl
fs
dec
inc
adc
pop
enter
inc
cltd
mov
pop
mov
test
adc
pushf
lock
enter
inc
add
ss
push
mov
or
cli
out
adc
cmp
sub
lea
lcall
cmp
out
fcomps
and
rorb
inc
dec
in
sbb
sbb
xchg
fstl
inc
aam
inc
dec
rorl
push
sub
or
or
lods
sub
mov
enter
lock
jno
rclb
xchg
push
sbb
dec
andb
ss
sbb
or
hlt
or
inc
in
cmp
jg
inc
sarb
leave
lea
mov
cmp
repz
xlat
or
lret
inc
insl
push
xchg
enter
mov
testl
dec
and
dec
add
lret
add
xchg
and
cmp
add
cmp
pusha
sbb
add
or
mov
fidivs
cmpsl
add
jle
add
popf
mov
iret
out
mov
push
cwtl
push
cmp
enter
movb
cli
or
dec
sub
imul
sub
jg
mov
pusha
add
add
jg
out
and
sub
lds
xor
js
add
inc
push
push
imul
stos
pop
je
std
lea
mov
cmp
and
jle
push
test
movb
call
dec
xchg
inc
ja
scas
shlb
push
jno
addb
jne
sbb
sbb
inc
in
sub
pop
jo
sub
ja
jle
inc
xchg
jbe
scas
insb
xor
sbb
dec
je
xor
jno
xchg
loop
jle
je
mov
pop
inc
orl
jno
inc
push
jne
je
flds
add
dec
mov
or
fdivrs
dec
popa
jno
add
mov
pop
mov
sbb
or
subb
jle
dec
stos
dec
inc
adc
add
mov
shlb
push
aas
push
outsb
xor
in
test
add
jo
inc
imul
add
out
sub
test
mov
xor
in
jge
lcall
jno
fadds
sti
arpl
stc
data16
ror
test
lods
in
xchg
add
mov
lcall
jmp
jl
popa
pop
pop
and
jecxz
out
sbb
int3
sbb
movsb
inc
add
loop
imul
and
addl
cmp
insb
adc
xchg
test
sub
repz
lret
jge
into
cmp
sub
adcl
jl
lret
push
in
jno
movsl
xor
jno
jle
pop
xor
add
xor
sub
xor
in
scas
or
mov
xchg
cmc
pop
xor
in
xchg
or
aad
dec
push
cwtl
pop
push
sub
int
clc
xor
aad
mov
fiadds
jecxz
adc
add
imul
mov
adc
fsubrl
xor
inc
inc
jns
repnz
mov
into
sub
mov
adc
sub
pop
inc
mov
sub
jle
jmp
fnstenv
xchg
or
adc
or
inc
push
lds
test
mov
dec
fstl
inc
mov
aaa
lods
push
addr16
jnp
in
and
lds
dec
push
push
inc
and
pop
or
popa
xchg
bound
and
inc
in
jo
arpl
cmp
in
dec
xor
movsb
xchg
int3
adc
je
push
int3
outsl
and
cmpsb
xor
xor
insb
push
cmc
mov
sbb
sub
movsb
inc
out
mov
mov
das
xchg
enter
cmp
adc
out
or
pushf
shll
les
mov
cmc
dec
aas
pop
jle
lods
int
dec
cmp
jl
mov
add
pushf
in
push
cwtl
loopne
cwtl
aas
cmp
sub
not
xchg
add
test
movsb
add
testb
sub
flds
jp
orb
cld
or
xchg
lock
jmp
es
mov
ret
lods
adc
sub
and
sbb
shlb
fidivl
mov
les
push
popf
mov
and
inc
mov
push
pop
inc
xor
cwtl
lret
inc
xor
fucom
clc
in
add
insl
div
cmp
inc
ljmp
jns
mov
lods
pop
nop
pop
lea
adc
or
push
faddl
nop
mov
cmp
mov
aam
mov
pop
add
mov
rcrb
push
xchg
sbb
cmp
lret
sahf
pop
cmpsl
push
in
mov
cmc
sbb
push
lret
outsl
pop
fidivrl
add
enter
xor
fadds
scas
imul
daa
inc
and
outsb
icebp
add
push
xlat
jl
imul
movsl
pop
mov
mov
loope
xchg
popa
jno
and
lods
and
pop
push
es
movsl
loopne
push
push
rclb
xchg
add
dec
jbe
nop
push
ficomps
add
mov
lea
dec
rol
inc
pop
addr16
jb
add
dec
ficoms
icebp
cmc
mov
add
loop
adc
and
int3
rorl
sbb
add
in
jno
stos
roll
mov
in
call
pop
jno
sub
loopne
into
jmp
and
leave
jo
add
iret
aad
nop
je
add
cli
cmpsb
fstpt
adc
and
mov
xor
push
mov
fistpl
ret
cmp
xlat
int
mov
push
mov
cmp
mov
btc
dec
jmp
jmp
call
mov
lcall
ret
imul
or
cmp
incl
push
add
into
or
add
and
lcall
mov
outsl
stos
sub
add
xchg
pop
pop
icebp
test
add
out
shl
outsb
push
add
push
push
xor
mov
jns
pushf
pop
in
add
pop
jno
pop
fwait
out
push
mov
and
push
pop
rcl
cli
add
mov
stos
cmc
jne
adc
aaa
add
fldl
stos
xchg
cmc
push
int
dec
jge
lea
add
push
mov
sbb
add
adc
shrl
repz
out
test
pushf
fisubrs
push
sar
mov
mov
jo
cld
jnp,pn
add
popf
aaa
xlat
loopne
rcrl
add
sbbl
jns
js
lods
push
aaa
in
mov
jae
mov
cmc
or
and
xchg
add
cs
mov
xor
es
jmp
mov
addl
mov
inc
sbb
stc
loopne
insl
push
jns
lock
add
xor
cmc
jo
push
add
sbb
aam
in
ja
xor
add
xchg
repnz
add
sub
mov
add
or
cmpsb
call
add
adcl
out
hlt
inc
in
popf
jge
add
push
bound
cmp
cli
inc
rclb
mov
imul
xor
and
xchg
xchg
pop
jle
aas
lods
lahf
jo
inc
pop
es
mov
add
mov
inc
xchg
out
mov
cld
sbb
loop
mov
js
loop
add
mov
jg
add
sbb
mov
mov
adc
mov
rcrl
hlt
shlb
popa
les
push
pop
push
mov
ljmp
pop
inc
mov
or
imul
bound
mov
sbb
sub
mov
subb
fadds
mov
hlt
sub
jbe
fimull
je
add
jns
jnp
mov
pop
lds
pop
scas
scas
stos
xor
add
xchg
mov
sub
outsl
cmpsl
sub
mov
pop
mov
sub
nop
adc
jne
enter
cmc
mov
in
clc
or
push
std
sub
sbb
cwtl
and
sub
push
fwait
sbb
jbe
xor
sub
adc
adc
inc
dec
xor
mov
fs
je
pop
pop
xchg
out
scas
mov
mov
imul
aam
loopne
push
inc
ja
jae
jno
enter
adc
add
inc
push
jg
lods
mov
insb
add
mov
cld
or
and
pop
xchg
xorl
mov
imul
and
pusha
adc
nop
nop
loop
mov
fists
jmp
jae
adc
fwait
dec
add
add
pop
ljmp
or
add
fwait
jae
addr16
out
and
scas
cmp
pop
loopne
or
jno
hlt
inc
sbb
in
or
mov
mov
shll
es
fisttps
mov
xchg
mov
dec
fcmovnb
mov
add
fimuls
sbb
add
test
es
sbb
sbb
dec
out
or
xchg
and
js
aam
scas
cmp
pop
sub
mov
xor
mov
adc
sub
push
push
and
in
add
sub
out
inc
imul
inc
sub
loop
mov
dec
adc
in
loopne
icebp
pop
add
pop
and
imul
outsb
or
jbe
cmp
mov
pop
lock
gs
pop
add
mov
xlat
mov
sub
pop
sbb
adc
add
arpl
cltd
les
xchg
push
addr16
dec
sbb
push
and
jge
pop
or
jg
pop
jle
aas
and
mov
rolb
mov
pop
inc
or
jmp
test
add
sub
inc
xor
add
gs
dec
sbb
or
loope
div
aas
adc
jne
add
push
add
cmpb
sbb
mov
dec
cli
sub
xor
gs
sbb
sbb
add
jo
or
testl
addb
test
cld
popf
popa
and
addb
mov
ja
out
add
ljmp
jb
inc
es
loop
fs
or
add
inc
inc
rcrb
push
in
jge
and
dec
cmc
bound
mov
add
pop
and
and
lock
or
popf
shl
add
add
pusha
cmp
pop
xor
inc
loopne
fstpt
add
jb
out
adc
imul
clc
jg
imul
jns
add
push
loop
adcb
push
loop
in
sbb
pop
push
test
outsb
rorl
aam
je
add
mov
cmp
push
int
adc
mov
push
cmpsb
aam
call
add
daa
roll
add
xchg
mov
jle
sbb
adc
mov
jg
in
jo
sbb
sub
jo
inc
fimuls
sbb
mov
and
shlb
sub
and
jecxz
sub
lds
adc
sub
push
xor
insb
imul
fldl
fcoms
inc
pushf
xchg
sbb
adc
js
out
test
jmp
ret
gs
mov
and
jae
mov
fisubl
sub
sub
mov
out
les
dec
fnstcw
lret
dec
sbb
dec
shlb
ds
fs
xor
or
add
jl
sub
and
aas
add
jne
pusha
sbb
dec
or
je
add
dec
add
jns
dec
sbb
dec
add
pop
pop
or
pop
out
dec
movsl
mov
pusha
lidtl
testb
and
testl
or
or
mov
inc
je
mov
ljmp
cmpsl
lods
dec
in
sub
js
sbb
cmpsb
or
adc
inc
jmp
lods
xor
adc
stos
inc
data16
inc
or
add
cmp
clc
fistpl
les
xchg
add
mov
cmp
les
xor
mov
jns
and
and
and
xchg
inc
and
dec
dec
mov
and
dec
dec
xchg
dec
ds
add
pop
mov
push
xchg
jb
mov
out
push
aad
lret
pop
gs
dec
or
cmpb
jmp
in
roll
inc
add
mov
sbb
fs
js
js
pop
ljmp
inc
inc
stos
fwait
pop
inc
mov
sbb
inc
or
add
std
adc
mov
add
pop
xchg
mov
pop
xchg
cmp
push
inc
test
and
mov
pop
or
add
push
mov
jmp
jnp
mov
push
daa
and
fwait
sbb
dec
movsb
and
sti
or
or
andl
mov
test
adc
adc
sbb
clc
mov
xchg
sbb
nop
sub
rolb
pop
push
dec
fcoml
cmp
or
pop
cmp
popf
iret
xor
orb
test
insl
testb
push
sub
cwtl
mov
pop
add
aas
inc
xchg
lret
cmp
jmp
cmp
add
mov
xor
mov
sub
xor
cmp
testl
test
les
icebp
dec
xor
lret
cwtl
sbb
insb
and
fwait
push
movsb
cmp
inc
pusha
gs
in
xorl
lret
pop
jo
stc
jnp
inc
scas
cmp
push
outsb
imul
pusha
sub
xor
pop
cli
int
inc
divb
aaa
cmp
enter
je
movsl
adc
inc
subb
dec
jno
xchg
aaa
scas
lret
mov
cmp
imul
add
fstps
push
fiaddl
pop
push
dec
sub
xor
stos
lret
inc
outsl
insl
aam
imul
add
dec
and
sub
lods
add
mov
xor
lock
movsb
push
pop
mov
insb
add
mov
stos
push
je
jp
cmp
test
adc
fdiv
jg
clc
std
cld
test
jbe
aad
test
xchg
sub
sbb
push
xor
lods
mov
pop
test
push
dec
xchg
mov
aas
jae
cmp
aaa
test
fstpt
les
cwtl
aam
cmp
loopne
sti
or
cmp
mov
scas
mov
mov
xor
call
test
call
mov
cmp
xor
into
andb
or
mov
mov
cmp
imul
mov
mov
popa
movsb
dec
mov
pusha
inc
mov
mov
mov
fcomps
stos
je
das
xor
les
das
sti
movsb
xorb
aas
inc
inc
add
pusha
cmp
cmp
xor
cmp
and
mov
fs
enter
sub
call
jno
push
mov
push
adc
dec
clc
sbb
xor
loope
leave
scas
sub
and
fdivl
fnstenv
cmp
pushf
leave
jmp
lods
das
xchg
call
enter
jmp
inc
or
nop
jl
mov
pop
xor
inc
pop
jmp
cmp
add
inc
xor
fadds
js
adc
mov
ss
mov
push
cmp
imulb
mov
or
cmp
lock
sub
stos
sti
and
jge
dec
scas
mov
clc
add
mov
xor
add
mov
add
ret
jg
mov
int
mov
add
inc
sbb
lahf
add
es
mov
popf
int3
xchg
dec
push
dec
or
or
push
insb
xchg
mov
in
sbb
push
ljmp
xchg
dec
add
mov
and
jl
pusha
leave
pusha
mov
movl
dec
stc
daa
fidivl
or
adc
and
dec
and
jae
or
int
pop
rolb
lahf
cmp
jg
adc
fcoml
fildll
cmpsl
adc
bound
cmc
sahf
push
and
mov
inc
movsb
dec
inc
lret
scas
dec
ds
sub
pusha
or
mov
jp
push
stos
mov
or
lock
addb
add
jno
sub
sub
cmc
imul
mov
fcos
xchg
xor
add
rcll
sbb
bound
add
fldenv
sbb
sub
or
cltd
mov
fwait
and
cmp
mov
nop
lea
pop
mov
and
sahf
pop
jb
pop
sbb
sub
xchg
jmp
dec
push
iret
and
lods
in
inc
mov
xchg
daa
mov
inc
inc
pusha
enter
push
ljmp
rorb
mov
cmpsl
jmp
andb
sub
inc
les
adc
rorl
add
xchg
stc
or
pop
push
dec
cmp
jbe
ret
push
adc
xchg
adc
nop
add
clc
pop
add
jnp
jmp
xchg
aaa
xlat
pusha
addr16
mov
repz
sbb
test
in
stc
movsb
adc
inc
nop
outsb
add
mov
bnd
arpl
sub
dec
xsave
adc
lahf
dec
loopne
mov
mov
pop
sbb
outsl
adc
orb
test
insb
jae
pusha
sbb
sbb
lea
inc
cltd
mov
add
mov
mov
ret
push
inc
push
js
std
cmp
and
pop
ret
mov
xchg
int3
jns
mov
in
add
bound
cmp
inc
dec
add
sub
sbb
jle
int3
popa
movsl
jp
cmpb
pmullw
lods
sbb
jb
ret
movsb
sbb
jl
xor
and
je
sub
and
test
adc
add
adc
sub
add
data16
and
cmp
nop
mov
cs
add
std
mov
push
sbb
ret
pop
inc
add
push
or
ret
cli
stos
imul
addb
inc
and
pop
cmp
inc
sarl
push
dec
adc
andl
test
icebp
lods
add
arpl
adc
adc
sub
sbb
adc
push
hlt
pop
mov
nop
pop
cmp
sbb
adc
repnz
jle
add
jo
mov
cltd
insb
mov
or
inc
lret
or
clc
mov
push
movsb
dec
pop
sub
pop
rcrb
jl
rolb
dec
push
mov
dec
xchg
or
jle
sbb
xor
add
and
sahf
loopne
xchg
cmp
dec
xorl
mov
push
dec
inc
xchg
imul
ret
mov
iret
lcall
scas
test
mov
in
mov
cli
call
jl
loope
xchg
add
mov
rclb
mov
rcrl
inc
aam
pop
das
add
pop
ret
jmp
mov
push
add
aaa
pop
popl
fmul
rcll
pop
stos
leave
test
sbb
mov
and
punpcklbw
les
mov
pop
ret
cmp
mov
mov
sub
mov
jg
push
js
test
add
lea
arpl
inc
xchg
in
push
and
add
or
jno
test
xchg
cmp
loope
daa
sbbl
sub
mov
push
adc
xchg
or
inc
sub
pop
movsb
dec
or
add
jno
add
jg
xor
xchg
fsts
jbe
bound
mov
and
dec
call
cmp
xchg
ds
insl
or
lret
mov
add
insb
adc
lcall
mov
nop
xor
pop
cwtl
and
fs
lret
mov
lock
xor
sbb
repz
popa
cwtl
dec
jns
add
dec
mov
aaa
pop
xor
mov
sub
loope
ja
aaa
pop
adc
and
mov
jle
sub
xor
adc
add
inc
lea
adc
leave
cld
pop
into
sahf
loopne
xlat
std
add
xchg
in
aam
add
inc
int3
and
lea
movsb
or
or
sti
or
pop
inc
pop
and
sbb
pop
cmpb
adc
pushw
mov
add
popa
scas
mov
mov
mov
fsubl
jne
dec
nop
insb
call
add
lahf
dec
mov
mov
jp
sbb
jo
dec
or
arpl
insl
xchg
orl
jo
mov
outsl
pop
dec
push
mov
or
pop
sbbb
or
test
inc
inc
incb
dec
sbb
pushf
or
pop
mov
sbb
dec
jg
fldl
rolb
dec
jecxz
pop
sub
xchg
loope
pusha
popf
push
mov
dec
and
add
and
pop
jns
orb
das
mov
jg
and
inc
dec
jg
fld
dec
int3
daa
mov
sbb
les
lea
and
cwtl
cmpsb
add
mov
jl
pop
push
xchg
cld
push
adc
sbb
insl
orb
pop
xor
and
inc
push
adcb
dec
lds
or
xchg
push
iret
mov
sbb
mov
add
int3
push
push
mov
cli
or
subb
lret
xchg
or
dec
lock
jns
inc
pop
imul
dec
dec
rorb
pop
sub
and
cwtl
cli
movsl
pop
insb
sbb
add
xchg
sbb
dec
addl
jae
in
pop
jns
dec
into
push
dec
push
adc
std
adc
add
addr16
divb
inc
pop
test
aaa
in
pop
f2xm1
cmc
lret
ds
mov
sti
lock
int
jb
sub
sbbl
clc
ds
mov
ret
push
inc
push
pushf
dec
repnz
add
ror
pop
loope
xor
mov
and
add
dec
sub
mov
cmp
popf
cmpsb
aam
sbb
mov
orb
in
mov
sub
movsb
or
movsb
mov
jns
add
mov
sbb
repnz
mov
push
push
cmp
data16
negb
hlt
mov
mov
sbb
enter
sbbb
add
loopne
shlb
mov
add
es
or
std
or
andb
shr
adcb
push
pop
inc
xchg
mov
iret
sbb
mov
ret
lock
insb
cmpsl
aam
loopne
or
add
jg
mov
dec
jg
add
iret
add
or
int
clc
or
xchg
pushf
push
mov
mov
jp
xor
addr16
mov
addb
xchg
loop
mov
pop
rorl
sahf
pop
clc
popa
xchg
popa
mov
mov
add
add
loop
or
inc
push
add
push
inc
pusha
inc
mov
inc
mov
mov
shll
out
xlat
pusha
or
push
mov
push
mov
bound
jae
lret
jo
pop
push
mov
add
lods
fwait
dec
add
arpl
inc
test
enter
pop
mov
lea
mov
lahf
mov
dec
mov
lods
sub
decl
nop
pop
sub
cld
pop
mov
rcrl
adc
cmc
push
inc
dec
out
pop
add
mov
push
sbbb
xadd
ret
mov
ljmp
enter
fs
hlt
mov
or
pop
insl
add
mov
fs
repnz
aas
test
add
scas
hlt
les
lock
mov
lods
test
add
cmpsb
loope
mov
adc
rol
orb
inc
fs
es
pop
inc
mov
jns
cmp
popa
jge
enter
fsubl
or
or
pop
fimull
dec
jp
mov
adc
adc
sub
add
int3
sarb
and
sbb
pop
xorb
xchg
mov
adc
sbb
cli
pop
test
roll
sub
mov
andl
xchg
enter
and
xlat
mov
and
sbb
push
subl
hlt
mov
adc
mov
sarl
mov
cmp
and
mov
lds
sbb
and
sarl
cmp
push
andb
inc
aas
ret
lcall
push
rcrl
in
cmpb
add
lret
sub
push
xor
add
cwtl
movsb
inc
adc
pop
bound
lea
inc
push
test
fdiv
rorb
jno
enter
test
inc
xorb
rorb
mov
or
sbb
je
cmp
jmp
push
sbb
inc
xor
push
int3
loope
js
ret
arpl
addl
cld
pop
jmp
pop
mov
push
sahf
xor
sub
std
mov
xor
inc
jmp
sub
and
inc
into
js
pop
pusha
or
mov
popa
scas
jae
test
sub
pop
xor
cltd
xorb
aam
iret
or
mov
add
push
les
orb
aam
popf
mov
sub
sbbb
jle
leave
cmp
dec
stc
jno
push
xorb
sarb
adc
xlat
loop
shrb
movsb
cmc
and
sbbl
jecxz
fistps
out
xchg
test
addr16
pop
negb
iret
pusha
flds
mov
adc
dec
bound
mov
add
sbb
mov
in
push
ja
jecxz
add
or
hlt
dec
adc
rolb
fs
cmp
dec
mov
mov
mov
and
or
jl
scas
cmp
setge
pop
mov
adc
inc
cmp
outsb
gs
in
pusha
daa
in
cmp
orb
mov
insb
pop
add
xor
sub
and
add
dec
outsl
inc
jno
adc
mov
repnz
push
scas
sbb
mov
cmp
cmp
xor
in
adc
xor
movups
jl
scas
dec
sub
or
cld
cwtl
xchg
dec
incb
dec
mov
sbb
loopne
inc
and
jl
mov
adc
or
enter
icebp
adcl
pop
pop
cmp
data16
daa
fcomps
mov
xchg
push
mov
int3
addl
add
cmp
cmp
mov
dec
cmpl
mov
fcomps
pop
sbb
xchg
inc
leave
push
and
xchg
stos
rolb
repz
enter
mov
cltd
jo
in
inc
fxch
sub
pop
je
rolb
push
hlt
xchg
jecxz
leave
incb
cld
add
mov
js
and
xor
test
mov
push
add
adc
mov
mov
je
pop
and
adc
lds
popf
mov
mul
bound
cmp
dec
sub
pop
pop
es
or
pop
subb
push
inc
ds
aad
mov
sub
out
and
pop
push
pop
out
lcall
cmc
lock
xor
cmp
mov
mov
rcr
push
int3
sub
adc
and
push
jge
sahf
inc
xchg
xor
xor
and
ltr
lock
daa
xchg
fs
pop
lea
sub
fsubl
adc
add
andb
fiadds
ja
icebp
jo
call
jbe
mov
addr16
dec
rcll
loop
in
cli
add
adc
add
cmp
mov
adc
mov
orl
jno
pusha
lds
pushf
pop
mov
mov
pop
pop
mov
pop
test
fsub
lahf
icebp
mov
inc
fmull
pusha
push
sub
xor
das
sbb
iret
mov
js
mov
divl
rorb
insb
add
ret
adc
push
add
dec
pop
repnz
or
aas
cmpsb
movsl
mov
jecxz
jp
mov
test
pop
cwtl
sbb
inc
sub
add
cld
aaa
or
fnstenv
lods
xchg
adc
jnp
add
scas
lret
test
pop
jnp
inc
mov
mov
gs
mov
pop
add
mov
or
mov
pop
mov
int3
xchg
jmp
jle
sub
xor
nop
lods
cmp
sbb
les
rcrl
pushf
ficompl
mov
and
call
dec
cmp
mov
push
dec
mov
xor
les
daa
xchg
jno
xor
nop
iret
arpl
xchg
dec
cmp
cmp
pop
scas
rclb
dec
pushf
and
add
xchg
es
pop
mov
add
add
lock
andb
addb
mov
jl
dec
and
xchg
mov
filds
movsl
insl
cmp
add
pop
dec
cmp
cwtl
and
add
cli
popa
cld
arpl
cs
cwtl
nop
int
mov
es
pusha
pusha
dec
lret
add
rclb
movsb
es
xor
loopne
push
jmp
cmp
lret
cmp
fsubrs
add
pop
loop
andb
lahf
or
push
add
add
sarl
aad
xchg
sbb
jle
sbb
dec
mov
enter
xorl
ja
dec
mov
mov
xor
sbb
test
push
repnz
loope
pop
shll
rcrb
jo
add
sbbb
add
pop
push
cwtl
clc
jno
adc
adc
lea
mov
les
push
and
js
scas
sbb
cmp
sbb
push
push
cmp
push
add
outsb
lret
aad
fs
or
ror
or
in
dec
add
in
movsl
adc
test
aam
cmp
iret
lcall
and
icebp
push
fisubl
rorl
fcoms
inc
cmp
pushf
testl
cmp
lods
ja
add
mov
test
loope
mov
pop
andb
fidivrs
add
test
or
xlat
test
xchg
add
ds
pop
popa
xchg
dec
and
sub
mov
jae
orl
add
add
mov
int3
frstor
add
stos
adc
and
pop
and
pop
inc
inc
int3
in
jae
dec
cmp
cli
add
es
lods
or
mov
rolb
out
xchg
adc
jl
loop
pushf
add
pop
dec
cmpsb
or
and
or
aad
dec
and
sbbb
jo
push
jns
sbb
adc
nop
je
push
xlat
cli
jbe
xor
and
and
inc
mov
push
adcb
inc
rcll
cmp
loopne
outsb
mov
jno
adc
xor
pop
add
xchg
test
clc
cmpsl
loop
clc
push
push
push
call
adc
inc
lret
and
scas
pop
loop
mov
arpl
mov
push
call
xchg
lods
sbb
cmp
pop
cmp
ret
dec
push
std
add
add
mov
and
xor
mov
mov
push
xor
or
push
test
add
addr16
ljmp
mov
mov
ret
add
pop
mov
addb
or
or
popf
fsts
push
xchg
sub
add
dec
das
cmp
mov
and
cmp
adc
lahf
push
mov
and
mov
push
cmpsl
incl
xchg
je
sub
iret
xchg
add
xor
nop
fimull
or
inc
sarl
mov
sub
sbb
or
mov
push
jbe
insl
add
add
ds
dec
inc
and
clc
mov
sbb
nop
andl
and
pop
loopne
sub
inc
mov
lds
adc
adc
std
push
or
and
push
xchg
and
inc
push
ret
or
jg
lret
inc
sub
lea
pusha
xor
or
or
push
mov
sahf
sbb
popa
mov
pop
add
sub
test
and
and
call
adc
mov
jnp
imul
test
pop
xchg
mov
icebp
lret
stos
shlb
jge
movsl
divl
pop
mov
inc
dec
xor
sbb
add
movsb
enter
ret
xchg
mov
mov
add
push
sbb
mov
lea
push
ds
pop
sub
inc
sub
and
ss
adc
jl
je
mov
cmpsl
lahf
test
mov
dec
cmp
add
add
xchg
dec
pop
mov
jmp
data16
add
dec
std
fdivrs
add
mov
ja
pusha
or
xchg
popl
push
or
into
pop
les
add
or
adc
es
jbe
adc
pop
add
iret
std
jmp
add
jb
push
movb
inc
add
rorb
roll
adc
xor
and
sbb
push
pop
pusha
lods
and
xchg
test
jmp
jae
mov
movsl
adc
aas
sub
dec
lret
and
adc
sbb
call
stos
mov
loope
mov
xchg
push
pop
push
jnp
inc
or
test
or
add
ljmp
inc
sarb
bound
add
fcmovb
sbb
inc
or
pop
jecxz
adc
push
sbb
dec
inc
sub
insb
mov
pop
push
pop
hlt
jmp
and
pop
ret
inc
mov
add
ret
mov
xchg
add
mov
adc
and
mov
push
xor
ret
add
ljmp
xlat
and
push
test
xor
out
test
mov
adc
jmp
cli
xor
sub
ret
in
dec
jl
loopne
push
ret
add
int3
inc
inc
aaa
addl
push
add
sbb
pushf
mov
pop
mov
daa
stos
adc
pop
insl
add
push
push
dec
shl
cwtl
xor
or
jp
jne
mov
add
into
testb
arpl
jmp
xor
xor
imul
rorb
test
adc
cmp
push
icebp
cmp
or
stos
pop
enter
push
pop
and
pop
xchg
mov
inc
sbb
jo
inc
movsl
push
push
cld
dec
stc
std
push
mov
movsl
xor
rep
mov
pop
cmpl
mov
sbb
fisttps
dec
mov
shrl
xor
test
daa
adc
dec
sbb
mov
pop
ds
or
mov
sub
rcr
insb
out
dec
dec
or
je
add
jmp
xor
cmp
sbb
jb
push
sarl
add
das
sbb
and
lea
je
insb
imul
rcll
movl
inc
sbb
das
add
xor
in
cltd
xchg
dec
push
add
jno
nop
dec
xor
or
jns
je
pop
push
pop
lods
shl
dec
ror
mov
sub
roll
mov
mov
cmc
mov
dec
push
mov
mov
mov
enter
add
imul
jo
pop
js
mov
and
sbb
mov
push
and
jmp
inc
mov
lock
mov
pop
ljmp
mov
adc
out
movsb
jle
inc
aam
aam
xchg
xchg
and
push
xor
pop
and
addl
and
jp
cmpsb
cmp
mov
pop
dec
xor
adc
sbb
or
sub
notl
mov
scas
dec
xchg
sbb
cmp
fnstcw
add
mov
jle
xchg
adcl
adc
cmp
insl
push
add
inc
pop
pop
loop
leave
inc
adc
sub
ss
dec
mov
or
push
and
add
mov
push
sbb
pop
push
add
repz
sbb
sbb
in
popl
sbb
fimuls
push
jmp
out
pop
les
add
jle
das
jbe
movsl
push
mov
sbb
and
cld
vmovsldup
sbb
mov
push
enter
mov
cmp
or
jl
sbb
pop
push
cmp
or
pusha
add
ljmp
pusha
decl
and
cmp
mov
out
js
sub
into
out
mov
into
and
adc
dec
les
and
xlat
dec
dec
add
pusha
cld
popa
jmp
enter
cmp
rcl
pop
push
jecxz
or
sub
dec
mov
jmp
add
push
ret
ljmp
sub
mov
adc
mov
or
pop
add
rcll
dec
push
cmovo
into
adc
xorl
cmp
dec
outsl
incl
and
mov
xor
sub
mov
fildl
cmp
dec
xchg
in
leave
add
jb
es
popf
shlb
push
fsts
sbb
std
daa
mov
cmp
mov
adc
popa
icebp
scas
adc
rorb
int
cmpsb
dec
clc
bswap
mov
jmp
add
outsl
std
dec
xorl
push
xchg
mov
shlb
mov
shrb
inc
sti
add
stos
dec
jo
mov
jnp
xor
adc
add
jns
sbb
adc
clc
mov
popf
test
xchg
je
adc
pop
add
orb
pusha
sub
sahf
popa
popw
adc
adc
aam
adc
icebp
sbb
jp
push
adc
leave
pop
add
mov
adc
mov
pusha
push
call
pop
xor
outsb
call
or
outsb
push
dec
or
filds
sbb
push
jae
add
mov
sbb
jl
add
fidivl
and
add
sub
insl
jmp
sub
inc
fdiv
fcoms
xchg
xor
xchg
outsb
rol
bound
pop
inc
pop
aas
mov
cmp
or
xorl
in
dec
mov
push
mov
pop
xchg
sbb
xlat
test
add
or
xchg
xchg
add
dec
dec
int3
jne
mov
or
out
inc
mov
mov
or
in
pop
icebp
or
or
sbb
negl
sub
cmp
pushf
dec
jp
pop
adc
int
fldl
inc
int3
roll
push
or
hlt
or
sub
xchg
mov
repnz
or
ss
or
inc
inc
les
pusha
out
fisttpll
add
pop
xchg
pop
aam
dec
ljmp
jge
inc
push
in
pop
mov
jge
mov
inc
jmp
addb
lahf
ret
cli
and
push
inc
add
in
add
add
adc
dec
pop
jmp
sub
dec
inc
inc
push
mov
aam
add
add
aam
aas
lret
cmp
xchg
sub
mov
inc
push
or
int
aas
or
add
xor
mov
in
in
mov
jg
enter
and
and
aam
mov
adc
daa
push
inc
jecxz
dec
out
or
adc
ja
repz
and
lcall
xor
aam
lods
xor
ljmp
add
imul
mov
cs
sbb
and
mov
add
and
cmp
sbb
outsb
pop
adc
sbb
in
sbb
test
cmp
mov
xchg
in
sub
adc
xchg
sbb
or
sub
mov
pop
sbb
push
sbb
sub
jns
jmp
jae
mov
jb
mov
in
pusha
out
pushf
mov
push
mov
add
pop
add
lea
xchg
cwtl
xor
and
jmp
pop
cltd
inc
sub
dec
cmpsl
sub
fisttpll
and
jb
add
and
ds
loope
pop
sbb
and
jb
movsl
cmp
repz
sub
ds
or
movsb
bound
jmp
inc
mov
filds
ljmp
iret
and
xor
xchg
rcrl
mov
fildl
dec
pop
add
frndint
flds
sub
rclb
inc
jbe,pn
in
sub
xchg
sub
adc
mov
push
ret
mov
sbb
add
cwtl
lar
into
loopne
cmp
inc
popf
xor
xor
test
cmp
and
js
pusha
call
pop
add
cmpsb
pop
fneni(8087
pop
mov
sub
push
lcall
cmp
imul
stc
loopne
pop
pop
push
mov
add
mov
dec
call
add
scas
lock
and
inc
adc
cmp
xchg
add
aaa
hlt
call
push
add
jo
and
xor
js
mov
pop
jns
jmp
jmp
dec
adcb
adc
jp
or
or
movsl
dec
sbb
xor
maxps
fnstcw
mov
int3
dec
push
or
xchg
gs
lea
leave
lea
xor
inc
sbb
xchg
and
sbb
xchg
pusha
and
xorb
pop
popa
lock
lret
pop
mov
popf
mov
add
cmpsl
push
iret
sbb
cmp
push
mov
in
mov
loopne
fidivl
inc
add
or
sbb
insb
lock
add
push
cmp
dec
xor
dec
int3
sbb
movsb
sub
cwtl
push
mov
sahf
or
pop
xlat
add
sub
popa
jno
mov
xchg
sbb
dec
leave
add
inc
adc
mov
int3
aam
or
or
or
mov
sbbb
lcall
add
fadds
mov
in
xor
jmp
mov
sti
pop
or
dec
mov
sbb
mov
out
xor
sbb
jnp
in
sub
cltd
pop
fadds
push
in
xor
xchg
stc
outsb
add
lahf
or
mov
add
popa
push
lcall
cmp
out
fstp
sbb
add
movsl
insb
adc
add
pop
clc
fldl
pop
fnstsw
adc
cmp
lahf
dec
lret
and
jmp
movsl
stc
push
or
mov
lret
dec
frstor
mov
mov
or
sbb
into
adc
scas
push
mov
inc
clc
xchg
and
push
daa
ss
dec
jne
sbb
rcl
pop
mov
mov
test
or
xor
push
pushf
loope
add
stos
adc
enter
sub
lods
sbb
xor
lock
push
dec
punpckhbw
das
jo
aad
in
or
popa
push
sbb
inc
add
fldt
nop
shlb
jb
push
andb
adc
add
or
ret
stc
in
inc
dec
or
stos
popf
popa
adc
push
icebp
es
xor
insl
push
inc
push
xchg
or
add
jne,pn
dec
mov
sub
andb
stos
shlb
dec
adc
insb
pop
mov
jmp
nop
mov
mov
pop
xchg
ljmp
pushf
sbbb
call
pushl
push
xor
mov
add
mov
cwtl
ret
sbb
iret
fs
pop
mov
adc
daa
bound
or
jne
xchg
lret
mov
test
adc
push
loope
jmp
adc
xor
aam
inc
cmp
xor
or
pop
movups
test
add
mov
cmpsb
repz
pop
or
mov
add
orl
inc
xor
mov
das
pop
cmpsl
shrl
decb
fstp
sbb
sub
push
push
subb
or
add
jb
pop
inc
xchg
sub
rolb
ss
andl
add
or
mov
jo
mov
and
mov
sbb
push
and
mov
out
lock
jo
test
sahf
test
fldcw
xor
xor
xchg
mulb
loopne
push
addb
outsl
pop
mov
out
nop
scas
jno
add
ss
cmp
mov
add
or
xchg
mov
inc
ljmp
sti
push
or
or
push
cmp
in
or
pop
sub
dec
inc
lret
mov
sub
cltd
cltd
and
and
int
and
outsb
in
mov
inc
inc
and
push
cwtl
test
pop
jo
or
push
dec
lods
jg
lea
add
and
shlb
mov
sbb
pop
sub
fwait
pop
fwait
rol
repz
mov
xchg
ret
inc
cmp
or
aas
add
or
mov
dec
add
stos
mov
movsb
and
cwtl
push
mov
add
pop
iret
daa
ljmp
shll
mull
mov
add
clc
adc
jne
fistpl
test
pop
cs
and
in
ror
dec
or
pusha
rorl
adc
add
dec
xor
cmp
scas
sti
es
jecxz
xchg
and
adc
fistl
imull
and
or
lods
sub
xor
push
add
lcall
add
pop
into
dec
mov
and
pusha
add
stos
jne
imul
fs
shrb
ds
pop
sahf
add
dec
mov
insl
sbb
add
jnp
mov
lret
adc
sti
in
test
push
fcmovnb
pop
or
sbb
sbb
bound
popa
jnp
mov
jl
adc
and
iret
sbb
xchg
or
push
orl
fmuls
mov
rol
mov
add
into
frstor
inc
push
testb
xor
add
movsl
mov
jae
leave
subb
cmpsb
lret
loopne
cmpsl
imul
mov
xchg
dec
sbb
fsubs
outsb
push
xor
xchg
leave
push
orl
lcall
pushf
adc
add
pop
sbb
pop
nop
jmp
jle
sub
inc
dec
jo
cmp
add
notl
sbb
mov
js
gs
imul
data16
popa
or
rorb
gs
sub
arpl
je
out
stos
push
data16
ja
jb
jl
jle
jge
jns
divb
ja
imul
arpl
jae
mov
imul
cli
jne
or
add
add
sub
pusha
jae
inc
push
push
dec
jne
pushl
inc
sub
bound
jns
or
fisubrl
sub
addl
dec
dec
aas
sbb
ret
push
cmp
jg
mov
cmp
nop
in
cmpsl
mov
pop
lret
push
push
dec
push
dec
dec
punpckldq
je
mov
js
movsl
add
lods
xchg
adc
lret
push
les
push
das
pop
push
add
sbb
and
out
dec
sbb
pop
and
mov
xor
ficoml
and
arpl
or
adc
sbb
shrl
adc
mov
and
or
sub
adc
xlat
dec
mov
push
in
adc
dec
pop
adc
clc
bound
fldenv
xor
sub
aam
cmp
sbb
into
mov
adc
ret
dec
mov
dec
mov
adc
and
out
les
push
inc
pop
and
in
and
pop
scas
mov
sub
mov
and
sbb
or
add
xchg
inc
cmpsb
push
sub
and
gs
clc
push
mov
push
lret
sbb
dec
mov
mov
cs
add
mov
inc
add
jbe
iret
jno
repz
add
xor
cmpsb
push
pusha
adc
or
test
dec
or
ret
jmp
mov
popl
sbb
sbbl
push
cmp
xchg
push
fldenv
jo
and
iret
shrb
mov
and
add
or
and
test
fs
sbb
fildl
push
movb
inc
iret
jg
xchg
or
and
and
cmp
repnz
mov
pop
push
or
adc
mov
xorb
add
test
mov
fnstenv
popa
push
mov
sub
jl
sbb
outsb
and
xor
add
mov
or
movsb
add
inc
mov
sbb
add
mov
enter
inc
ror
stos
or
enter
dec
or
inc
in
and
push
mov
push
int3
jp
mov
and
sbb
cmpb
lea
pop
pop
mov
xor
fcom
add
add
mov
or
pop
pop
je
push
pusha
jnp
and
sub
sub
rorb
in
xor
loopne
sub
dec
and
test
dec
and
push
jl
mov
aas
mov
add
push
mov
inc
adc
cmp
inc
xchg
push
and
jl
scas
or
filds
jp
add
mov
inc
test
push
xor
cmp
jb
ljmp
sub
push
push
adc
sub
dec
or
addr16
inc
leave
or
add
xor
add
fadd
ret
or
sbb
pop
pop
mov
shrl
jb
sub
adc
les
pop
fnstsw
dec
dec
pop
and
add
push
push
pop
xor
incl
bnd
hlt
add
pop
ja
inc
int3
bound
call
dec
xor
call
push
addb
dec
testl
pop
mov
pop
int3
or
fsubl
add
ss
lock
or
scas
add
jmp
pop
sub
in
add
call
ds
call
ss
sub
jp
add
mov
cmp
fmuls
sbb
mov
xchg
imul
xor
sub
repnz
es
std
fistl
inc
lock
add
dec
push
int3
sahf
adc
mov
insl
ds
je
adc
in
or
push
and
or
or
push
adc
add
fiaddl
fmull
mov
push
cmp
sarl
inc
pop
xchg
pop
rcl
push
add
sbb
or
movsb
roll
add
sub
push
pusha
into
and
sti
inc
aad
je
movsb
pop
stc
out
enter
decb
test
pushf
adc
xchg
and
lahf
add
in
pop
or
sbb
mov
sub
mov
mov
shlb
je
loop
add
stos
mov
ret
jnp
pusha
cmp
or
or
xchg
wrmsr
sub
inc
push
push
pushf
adc
cli
sbb
ret
and
int3
inc
add
out
ret
adc
ss
jae
sub
add
jecxz
sub
and
lret
mov
xchg
adc
stos
out
push
sbb
cmp
lods
add
outsl
dec
in
add
jns
jge
push
jecxz
add
insb
or
fldt
test
pop
jb
pop
mov
mov
jno
repz
cmp
aaa
clc
xchg
incb
iret
jle
add
loope
sbb
mov
add
sub
movsb
mov
xor
mov
fidivrs
add
outsb
push
repz
jecxz
std
add
aas
push
lock
lahf
jp
push
mov
mov
aaa
shr
outsl
test
ss
rolb
jae
mov
fsubr
mov
sub
push
outsl
sub
loope
fadds
push
xchg
lahf
fbld
movsl
into
xor
pop
arpl
sar
adcb
repz
push
jns
jle
or
add
ds
xchg
cmpb
stos
je
punpcklbw
add
mov
mov
xor
add
xchg
jg
cli
adc
pop
ja
add
aas
xchg
jp
push
mov
mov
add
repz
je
xor
icebp
aas
filds
out
lock
jnp
push
mov
movsb
mov
pusha
sahf
mov
sub
jo
xor
neg
addb
sub
fcomps
add
lret
cwtl
mov
test
rolb
mov
jecxz
rclb
xor
xchg
and
loope
add
pop
adc
cmp
cmpsb
add
inc
inc
loopne
in
jo
movsb
les
jns
jno
sbb
add
jo
mov
adc
mov
or
adc
cmp
jne
sarb
leave
popf
rclw
add
ds
add
pop
mov
nop
xorl
jp
cmp
test
cmp
pop
add
pop
fisubl
std
add
push
xchg
gs
jle
repnz
jns
js
add
cmovs
xchg
inc
push
addr16
pusha
out
push
add
xlat
jge
add
xchg
cli
or
dec
loopne
mov
inc
and
add
shll
xchg
add
into
xchg
cmc
clc
scas
lret
adc
add
inc
cwtl
mov
push
movsl
or
pusha
push
xchg
inc
and
call
stos
les
adcl
mov
lods
daa
push
and
into
in
subl
clc
pop
ror
and
push
mov
into
insb
add
mov
test
push
push
lods
or
jle
push
stos
outsl
into
push
add
inc
lret
mov
enter
and
out
je
cmp
test
xchg
lea
adc
jo
scas
js
add
insb
pop
cmp
dec
in
lods
jne
sbb
adc
jecxz
sub
xchg
movsl
pop
sbb
stos
sarl
push
in
js
jnp
fstl
mov
bound
fwait
dec
xor
add
gs
sbb
and
cmp
lret
jo
andl
sub
cmp
add
fnsave
sub
lods
sub
xor
xchg
loopne
shr
lock
jo
jne
add
xor
jle
shll
xchg
add
inc
dec
and
scas
add
imul
push
lods
pop
es
lret
clc
lods
add
mov
lock
mov
add
fsubs
sub
jnp
rolb
push
add
jb
jmp
cld
pop
and
add
mov
push
xlat
lods
cld
xor
lea
mov
or
test
add
insb
sub
mov
sub
jp
dec
adc
repz
arpl
sbb
mov
add
cwtl
outsl
push
add
es
addl
xchg
dec
in
mov
sbb
push
cltd
adc
push
shrb
lea
add
lcall
push
add
adc
inc
adc
adc
insb
inc
push
addr16
dec
int
sub
add
add
cmc
ljmp
rcr
roll
stos
cmp
leave
add
imul
add
jo
addr16
add
mov
pop
mov
add
xor
cmp
outsl
insb
add
push
or
dec
jo
sbb
rolb
loope
add
scas
push
pusha
xchg
cmp
sbb
jg
and
aam
jnp
adc
or
test
sbbb
mov
add
xchg
imul
or
fmuls
or
sbb
and
and
testb
inc
hlt
add
push
jge
std
jns
rorl
sbb
loop
mov
xor
enter
outsb
cmpsl
xor
incb
adc
testb
ret
add
jbe
cli
or
mov
pop
fisubrs
call
lahf
pop
and
cmp
xor
cwtl
stc
add
call
add
test
mov
fimull
inc
fildl
out
jb
scas
aad
test
xor
lret
add
or
xchg
lods
and
in
inc
cs
mov
add
sahf
insb
mov
fdivr
xor
add
js
adc
dec
sbb
add
dec
push
test
push
add
or
mov
xchg
stc
stos
jp
xlat
jmp
cmp
enter
loope
mov
int3
add
inc
push
add
pop
out
add
bound
or
xchg
mov
pusha
ds
add
test
add
cmp
fsubrs
add
lods
aam
je
and
sub
jmp
mov
ja
mov
cwtl
aas
jle
xor
dec
stos
xor
test
sti
mov
fdiv
test
loop
cmp
pop
mov
je
hlt
out
add
sbb
push
lahf
jno
pop
cmp
ljmp
sti
nop
dec
clc
mov
jp
cs
sub
js
add
pop
and
pop
mov
adcb
jg
or
gs
mov
add
insl
jno
fldenv
faddl
lcall
lds
outsb
outsl
subb
pusha
repz
mov
lock
roll
mov
push
sbb
mov
lods
or
loop
popa
xor
dec
dec
lock
push
mov
jne
rcr
add
add
mov
fsubl
cwtl
xor
pop
push
je
push
jne
in
cmpsb
loope
jno
aam
push
fidivrl
mov
aad
dec
add
mov
test
pop
xchg
sbb
add
mov
xchg
dec
jg
add
pushf
add
repz
sbb
jne
add
inc
xchg
push
loopne
or
add
pop
mov
xchg
mov
adc
or
test
clc
and
add
movsl
dec
arpl
popf
or
icebp
push
fsubs
mov
mov
add
xchg
popa
push
lahf
lock
mov
xchg
sahf
stc
xchg
fdivl
scas
lcall
jne
cmp
or
push
shr
xor
rcrb
lret
dec
test
adc
pop
add
mov
cmp
pop
pop
jnp
loopne
stos
add
imul
sarb
mov
mov
fadd
lock
add
ss
pop
xor
add
push
les
xchg
popf
ljmp
inc
loopne
sub
popf
jp
pop
mov
stos
inc
call
push
add
mov
pop
mov
not
movsl
ds
sarb
cmp
mov
add
add
add
sarb
sub
stos
xchg
test
add
lret
daa
insl
add
pop
ja
pop
lea
mov
push
addr16
insb
add
push
pop
shll
add
mov
cwtl
incl
out
inc
lret
aaa
cmp
shll
ljmp
scas
test
mov
ror
cwtl
mov
mov
pop
cmp
rcr
add
mov
adc
pop
rcr
movsl
and
outsl
insb
jle
enter
pusha
dec
mov
add
cld
cmp
pop
adc
movsl
sub
in
enter
repnz
pop
addb
push
int3
xchg
add
mov
lock
pop
xor
pop
fistpll
dec
add
add
imul
and
add
popf
clc
adc
arpl
repnz
add
xchg
ja
cmp
add
sti
xchg
cltd
daa
addl
push
pop
or
cld
add
mov
rolb
cmpsb
inc
dec
shlb
pop
push
pop
sete
int3
lret
fistps
add
test
mov
aad
push
xchg
ficompl
push
int3
aam
add
idivl
test
adc
mov
mov
sarl
inc
adc
fdivrs
add
and
mov
call
popa
aam
lock
xchg
scas
xchg
pop
xlat
scas
pop
add
mov
cmpb
call
insl
int
mov
lahf
mov
roll
pushf
mov
inc
leave
nop
inc
arpl
lods
scas
cmp
dec
adc
push
fmulp
test
dec
sahf
cwtl
clc
jecxz
or
jo
add
push
xor
push
adc
mov
sarl
push
xlat
rolb
sahf
bound
jp
cmp
add
mov
in
sub
shrb
mov
mov
rclb
pop
daa
jp
pop
int
sub
inc
leave
lahf
sub
pop
add
mov
mov
dec
add
data16
cwtl
mov
add
stc
lds
inc
cltd
cmpb
fildll
add
cmp
out
sub
imul
fisubrs
adc
xor
adc
inc
popa
enter
mov
int
and
mov
fmuls
or
popa
push
and
inc
flds
pop
movsl
cmpsl
dec
adc
sbb
jp
jl
repz
mov
loop
push
mov
loopne
loopne
lret
lea
jbe
hlt
xchg
add
insb
orl
inc
stos
incb
aaa
jge
push
movsl
add
int
movl
cs
pop
push
cmpsb
cmc
mov
pop
out
push
jg
cmp
jle
xchg
add
and
mov
add
lods
rcll
or
call
aam
jmp
add
dec
mov
cs
cmpsb
ljmp
out
ds
imulb
out
lds
aaa
jmp
sub
add
notb
jns
and
dec
jp
sbb
fs
mov
loopne
icebp
stos
loopne
add
sbb
out
mov
sti
pushf
mov
in
jecxz
add
sahf
lahf
mov
push
ds
leave
shrb
mov
cwtl
das
push
movl
inc
ss
xor
xchg
dec
pop
inc
stos
add
subb
add
xchg
fs
mov
cmpb
icebp
sarl
dec
imul
push
mov
sub
push
dec
and
push
mov
stos
jecxz
imul
and
jno
inc
inc
xchg
dec
in
dec
aaa
loopne
imul
pop
mov
lcall
sub
xor
in
jp
test
addb
inc
and
sbbb
add
out
int
sbb
ds
sbb
mov
pop
cs
xlat
arpl
mov
add
inc
xchg
inc
cmc
out
orb
clc
xor
lret
push
dec
cmp
nop
pop
pcmpeqb
add
pop
divl
scas
shlb
jmp
add
xor
aad
mov
mov
cwtl
mov
add
mov
loopne
mov
testb
addb
add
es
add
jmp
andb
or
add
jle
and
lods
mov
mov
in
mov
sbb
inc
lds
or
push
push
aaa
inc
nop
shlb
test
std
pop
cmp
push
add
push
dec
testl
xorb
pop
adc
stos
fcomp
push
jl
push
and
leave
sbb
out
jp
pop
out
ficompl
mov
pop
sbb
inc
inc
push
test
fnsave
add
mov
pop
xor
mov
cmp
in
addb
mov
lahf
aam
pop
nop
js
mov
loope
fadds
cmp
outsb
aad
push
shl
xchg
or
dec
add
arpl
jnp
aam
push
addb
jge
stos
sub
xchg
add
pushf
int
fwait
loope
cmp
mov
repnz
xor
aas
add
cmp
sub
sub
adc
push
mov
xor
jge
xchg
mov
fadds
cwtl
mov
jle
fwait
dec
imul
imul
addl
hlt
clc
push
mov
jge
inc
bound
dec
dec
adc
test
das
push
loopne
dec
dec
cmp
sbbb
push
cmp
and
pop
sub
mov
pusha
adc
nop
mov
add
add
jns
cld
rorb
add
and
repnz
add
insl
int3
pop
pop
mov
shrb
add
into
jne
add
jecxz
aam
shlb
cmc
add
out
dec
cmp
or
add
jnp
pop
incl
outsb
dec
cs
dec
cmp
lds
mov
int3
mov
in
sti
or
rcrb
lods
in
mov
xchg
add
or
dec
xchg
stc
test
add
sub
pusha
add
aas
jmp
inc
arpl
gs
jecxz
shl
pop
cmp
add
add
ret
mov
je
in
stc
add
dec
cwtl
inc
mov
push
out
fcmovnbe
popf
lea
dec
int
jo
xor
add
pop
fiadds
mov
mov
das
push
sbb
jge,pn
add
jnp
push
out
out
popa
mov
hlt
imull
xchg
jg
or
popa
les
rcrb
out
and
add
cmpsw
orb
mov
push
mov
mov
adc
test
test
lahf
or
add
fisubrl
add
iret
scas
subl
cwtl
mov
mov
xor
jp
pop
cmp
add
ljmp
mov
imul
mov
cmp
pop
adc
sbb
outsb
cmp
cld
je
xor
ja
stc
cli
pop
add
jge
stos
add
aam
cmpb
inc
scas
push
push
add
adc
jl
nop
sbb
jl
xchg
add
pushf
or
and
out
or
mov
lret
adc
cltd
add
loop
in
in
sbb
push
fisubrl
shlb
cmp
add
ret
mov
loopne
or
or
ljmp
dec
in
adc
adc
cs
mov
mov
gs
add
mov
sbb
stc
out
int3
xchg
dec
xchg
jbe
rcrb
and
mov
push
lods
mov
pop
out
mov
or
popf
enter
or
mov
pop
pop
dec
pop
enter
jle
testl
pop
add
mov
sbb
and
push
sub
adc
cmp
lds
scas
add
ffreep
or
mov
pop
clc
pop
cmp
adc
leave
or
jnp
adcb
push
sbb
rcl
addb
fiadds
cmpsb
inc
add
rorb
ljmp
add
stos
test
mov
sub
sti
xor
or
lret
lds
ds
jecxz
daa
jle
pop
add
or
shlb
add
mov
jae
xor
adc
std
shll
sbb
dec
enter
out
sahf
or
sub
subb
stc
add
inc
sub
xchg
punpckhbw
out
js
jle
jo
dec
or
xlat
fistpl
add
jle
mov
test
adcb
add
popf
adcl
shl
add
jp
lahf
fdivl
test
mov
add
arpl
shlb
pop
mov
hlt
insb
incl
cmpsl
in
mov
nop
les
lods
xor
xchg
stos
mov
mov
add
movsb
mov
cmpsl
out
aam
sbb
aad
dec
inc
lahf
xchg
in
pslld
imul
mov
cmovo
rclb
sti
inc
add
and
dec
jbe
inc
adc
add
mov
mov
mov
loop
pusha
mov
dec
in
std
xor
cmp
mov
roll
lahf
paddq
xchg
sbb
xor
ds
mov
imul
rolb
mov
mov
nop
push
cmp
fsubrl
dec
dec
xchg
add
inc
push
mov
stos
add
aaa
xlat
les
imul
push
lods
and
jb
mov
shld
outsl
and
lock
adc
insb
inc
push
push
mov
jbe
sti
loopne
cmp
cmpsl
aam
xchg
inc
cmp
pop
xchg
addb
mov
add
loopne
xor
and
sbb
nop
and
jbe
sub
sbb
add
jg
cmp
enter
shll
repnz
adc
pop
xlat
sub
push
int
push
repz
adcl
leave
push
push
xchg
jno
ret
sbb
pop
lock
push
pop
or
xorb
add
or
lret
or
mov
pop
sub
movsb
shlb
sbb
rcr
inc
hlt
mov
and
pop
insb
icebp
add
scas
inc
sbb
testl
out
mov
dec
inc
lock
dec
and
mov
lea
mov
add
fisubl
sbb
inc
pop
adcb
jmp
push
sbb
nop
fwait
test
leave
sbb
mov
mov
aas
pop
lahf
iret
shlb
cltd
loop
in
imul
add
inc
mov
push
add
inc
inc
add
sbb
aaa
imul
inc
sbb
mov
repnz
xor
rolb
gs
xchg
add
enter
add
fistpll
and
int
mov
sub
jl
add
inc
adc
and
or
rol
add
sbb
push
xchg
dec
pop
stc
add
push
push
jecxz
dec
lret
out
add
pushl
add
stc
cmp
add
jge
mov
scas
sahf
es
in
add
fidivs
add
imul
cmp
add
push
insb
aaa
jb
out
pusha
jo
testb
adc
sbb
outsl
fiaddl
movsl
ljmp
pop
test
fcomps
cmc
ds
sub
mov
addr16
pop
push
loop
fbld
add
mov
movsl
xor
sbb
push
sub
mov
add
push
iret
call
push
and
scas
and
adcl
aas
mov
xor
add
xchg
cs
out
stos
andb
call
sbb
pushf
sbb
push
int3
clc
call
cltd
mov
pusha
dec
and
into
test
push
and
xor
lea
test
jecxz
add
sbb
repz
xor
cwtl
mov
bnd
mov
lock
mov
sbb
addb
imul
mov
pusha
insb
adc
mov
into
add
add
pop
imul
push
xchg
sbbl
lea
aas
sahf
mov
sahf
inc
inc
push
xchg
inc
imul
or
xlat
rolw
mov
sahf
inc
cli
incl
sub
insb
inc
mov
cmp
dec
add
fwait
xchg
jae
adc
mov
xchg
pop
jg
stc
fidivrl
lock
sub
jmp
or
xor
pop
enter
and
mov
cmpsl
add
xor
adcb
pop
add
jp
int
inc
pop
and
sar
arpl
std
cmpsb
pop
push
scas
mov
das
shrb
and
adcb
les
add
jo
frndint
stos
dec
fcompl
shrl
data16
ljmp
loop
sub
or
or
add
das
adc
xchg
dec
cwtl
jge
sti
dec
cmpsb
je
jb
jbe
lret
add
into
mov
push
hlt
adc
xor
gs
mov
fldcw
cmp
rolb
add
or
xchg
xor
xor
sbbl
add
mov
lret
add
pusha
mov
scas
sahf
out
cmp
test
movsl
mov
or
sbb
add
mov
call
in
jne
ss
mov
add
cmp
push
and
adc
xor
int
out
into
call
add
fcomps
inc
outsb
ljmp
sub
repz
scas
push
test
sbb
add
rcrl
mov
mov
or
inc
lret
adc
ljmp
cmp
adc
mov
dec
or
nop
sub
xchg
jle
push
and
mov
jg
inc
or
inc
mov
addl
xchg
mov
mov
dec
mov
test
mov
ret
mov
out
mov
test
imul
and
or
mov
sbb
and
push
hlt
adc
inc
js
inc
fcos
add
push
sub
ds
push
pop
stc
push
sub
cmp
push
sub
cwtl
imul
mov
add
xchg
jns
add
stos
mov
out
xchg
lahf
add
sar
add
repnz
repz
cmp
loope
in
add
outsl
sbb
cmpsl
xor
mov
fsubl
pop
aad
daa
sbb
mov
adc
pop
xor
cli
adc
mov
jne
jbe
xchg
push
cmp
je
mov
sbb
and
add
and
loopne
decl
xchg
add
or
nop
pop
xor
and
push
push
sbb
jl
pusha
mov
push
lods
mov
sahf
lret
and
mov
pushf
add
lahf
xor
push
imul
psrld
and
mov
rcrl
call
sbb
mov
pop
es
dec
stos
test
mov
or
cmp
add
xchg
out
adc
test
pop
sub
or
xchg
lods
add
and
and
fwait
cwtl
add
mov
xchg
mov
jo
jo
dec
add
std
je
mov
or
push
orb
shlb
roll
inc
ljmp
loop
xchg
pusha
add
pop
sub
mov
xor
mov
dec
or
jo
pop
pop
sbb
mov
push
adc
lods
loope
add
jl
sahf
xchg
mov
rorb
inc
subl
shl
gs
adc
cmp
mov
shrb
inc
in
jns
imul
and
push
ficoms
icebp
cmpsb
pushf
add
pop
in
mov
call
mov
sahf
and
in
inc
adc
mov
add
jle
call
xchg
mov
insl
dec
daa
jl
add
pop
push
inc
repnz
or
hlt
test
andb
roll
add
or
inc
add
test
mov
inc
lods
pop
pop
and
add
in
xchg
rcl
and
pusha
or
sti
int
jmp
loope
popaw
pusha
xor
mov
std
fcoml
and
lds
cmc
mov
pushw
nop
cmp
or
mov
sahf
lods
fcmovb
in
mov
or
popf
pop
loop
daa
dec
push
sbb
add
cmpl
fcmovnu
enter
pop
or
ret
rolb
push
ljmp
cmpsl
mov
add
daa
repnz
add
and
cs
dec
pushf
dec
cmp
jecxz
add
imul
out
and
cmp
rolb
push
test
loope
or
int3
rol
jno
adcl
nop
in
sub
and
repz
ja
ret
enter
pop
dec
cld
mov
fs
ja
sub
jns
add
pop
andl
jmp
cmp
and
cmp
clc
inc
mov
mov
pusha
sbb
mov
xlat
push
cmpl
xor
or
rorl
inc
dec
cmp
push
decl
into
inc
cmp
lret
adc
pop
inc
sbb
cmpsl
leave
sahf
movsl
rcll
add
out
xor
incl
add
inc
sbb
clc
jg
mov
mov
pop
pop
bound
jmp
ja
add
clc
push
cmp
push
mov
cmpsb
daa
jg
int3
movsb
in
jae
push
mov
repz
aas
addb
out
add
shlb
popa
or
cmp
cltd
fcompl
push
ret
aaa
cmove
adc
pop
cmpsb
sub
clc
movsl
pop
jle
push
mov
adc
mov
jo
xchg
push
lret
add
add
dec
and
cmp
xchg
loope
nop
inc
call
scas
sbbl
jl
pusha
add
out
pop
xor
xchg
mov
cltd
adcb
xchg
jle
lret
xchg
jo
bound
add
repz
add
and
and
add
jge
add
aam
sub
ljmpw
add
ficomps
and
mov
adc
add
sub
insl
fldcw
mov
pop
sti
cmp
xchg
mov
and
inc
push
jmp
sub
sub
mov
jo
dec
cld
inc
add
dec
push
adc
cmp
shlb
enter
sbb
cmp
cmpb
push
push
faddl
add
fs
adc
add
inc
cmp
pop
sbb
jle
cmpb
xchg
push
dec
pop
imul
or
adc
enter
lahf
imul
test
fsubrs
and
inc
add
les
sbb
dec
cmp
add
test
mov
jnp
push
jbe
mov
rol
push
add
adc
in
add
lea
sbb
push
add
or
repnz
jl
mov
test
jg
stc
fsubs
cmp
scas
xor
sbbb
sahf
jne
lods
adc
mov
int
push
add
inc
and
jno
add
outsl
ret
cmpsb
xchg
pop
mov
mov
push
mov
pop
dec
cmp
adcb
das
or
push
inc
mov
sbb
jmp
cmp
pop
sub
cli
or
lods
mov
ret
cwtl
out
subb
add
sahf
es
push
mov
mov
inc
mov
sbb
add
sbb
sbb
jnp
add
jl
icebp
or
ret
mov
ja
xchg
fcoml
add
out
adc
rcrl
push
fsubrl
loopne,pn
adc
xchg
and
add
mov
jno
shll
sub
jae
jmp
mov
cmp
data16
outsl
add
test
pop
pop
test
mov
mov
xor
inc
je
loopne
add
xchg
cmp
cmp
adcl
fwait
int3
int
add
xchg
xor
jecxz
enter
je
fists
mov
jp
shrb
pop
pop
add
jmp
mov
cltd
adc
je
loopne
push
pop
in
add
dec
xor
xchg
dec
js
hlt
or
jbe
fs
pop
ja
push
lahf
sub
pop
filds
in
push
sbb
adc
xchg
pushf
or
fcom
ja
jge
rolb
testb
in
xor
iret
inc
dec
ss
push
mov
loop
add
pop
push
inc
clc
sub
jo
sbb
or
hlt
add
push
sub
dec
ss
add
and
pop
push
lret
sub
outsl
mov
sarl
add
fbld
mov
iret
add
movsl
movsb
les
imul
add
xchg
add
popf
aaa
clc
add
mov
iret
add
mov
lcall
jp
add
xchg
push
jae
add
mov
mov
sti
and
or
gs
mov
inc
xchg
stc
pop
test
aas
lods
or
test
add
out
jecxz
xchg
adc
mov
mov
sub
cmp
insb
pop
cmpsb
pop
inc
xor
or
in
sbb
sbb
pop
add
outsb
add
adc
xchg
enter
add
cmc
jnp
push
mov
lock
cmp
add
xor
dec
imul
cmp
xor
sbb
sub
fnsave
or
jg
jmp
adc
stos
jno
addb
cmp
clc
int
push
insb
add
aad
popf
sub
xchg
fdivrp
inc
xor
add
adc
pushf
push
add
add
iret
sub
and
pushf
sbb
rolb
shrl
aam
add
lea
cmp
dec
into
pop
sahf
loopne
sbb
lods
dec
andb
pop
push
pop
sub
dec
push
aas
add
imul
adc
jo
lret
movl
into
test
add
mov
ss
sbb
orl
and
mov
cmp
push
fistpl
pop
das
outsb
and
nop
pop
mov
sub
push
ja
negl
and
adcl
jle
and
repnz
inc
push
stos
or
jae
ds
test
dec
push
adc
out
or
lret
cmp
jae
add
dec
push
xchg
jno
ret
subl
lret
insl
sahf
fwait
jge
bnd
xor
test
mov
xchg
jae
daa
call
fucomi
xor
inc
nop
and
ss
add
dec
rcll
cmp
pop
or
int
arpl
call
and
cmp
and
paddq
ds
xchg
shlb
push
add
mov
adc
adc
out
pop
inc
arpl
rcl
or
or
jecxz
mov
adc
push
sub
and
ficoms
cltd
xchg
cmp
repnz
mov
pushf
data16
mov
sarb
dec
dec
push
je
stc
loopne
xchg
sbb
push
leave
mov
mov
rcrb
addl
cmp
shl
and
add
mov
aas
adc
hlt
push
and
rol
and
loope
fcomp
std
add
dec
cmp
in
or
fwait
mov
adc
data16
jge
arpl
pop
pop
push
sub
out
daa
rclb
dec
shlb
xlat
mov
mov
cmp
mov
lods
data16
out
test
push
cld
or
popa
inc
jns
xchg
ret
add
pop
jle
sbb
add
lret
popa
mov
lods
add
lret
loop
imul
sahf
test
add
ss
call
mov
xor
add
xchg
orb
inc
nop
inc
xlat
add
roll
dec
add
inc
pop
sub
or
dec
push
xorb
add
pop
pop
cmp
mov
lds
subps
jp
adc
out
aad
dec
mov
pusha
and
or
push
pop
sub
pushf
sub
rclb
and
jge
mov
or
and
mov
sub
pop
in
out
xchg
mov
mov
rol
sbb
mov
add
sbb
push
or
aas
dec
push
add
out
mov
add
xchg
roll
insb
jecxz
xchg
push
fistpl
fwait
jns
jg
cmp
out
and
fadd
shl
xchg
sahf
pop
xor
push
mov
push
and
loope
lea
addr16
pop
jb
int3
test
add
mov
into
add
nop
shrb
subb
insb
jb
orl
push
nop
inc
add
movsb
stos
xchg
rorl
inc
push
repz
daa
push
fucomip
add
clc
icebp
and
add
movsl
rolb
lahf
or
or
and
lret
add
mov
in
dec
movsb
lock
std
arpl
adc
call
fs
dec
call
dec
sbb
adcl
sub
add
outsb
fwait
sbb
and
cmc
leave
lock
push
inc
xor
out
adc
sbb
xor
test
inc
cs
dec
ds
into
sahf
add
cmp
es
imul
add
jae
iret
pop
and
mov
xchg
call
mov
push
ret
lret
rcrb
add
das
xor
inc
sub
cmp
cmp
or
test
xorl
mov
cmp
fldcw
adc
ret
rclb
jnp
ss
bound
cwtl
push
jo
add
mov
cmpsl
add
bnd
bound
sbb
and
pop
or
daa
pop
xor
add
popf
adc
jmp
inc
out
shlb
fsub
push
adc
mov
dec
stos
nop
sub
sbb
push
out
fldz
push
add
inc
add
add
cmpsl
inc
cwtl
add
out
test
movsb
iret
push
inc
add
pop
or
sub
add
jmp
sbb
xor
pop
cwtl
and
push
xchg
call
jge
sbb
xchg
cmpl
fs
inc
add
das
add
sbb
lock
adc
jbe
dec
cmpsb
movsb
sub
addl
out
fs
jns
cmc
mov
jnp
jmp
inc
xchg
shll
push
xchg
rcrb
add
lcall
jne
pushf
or
rclb
int
add
mov
loopne
je
and
and
and
and
test
pop
xchg
adc
jge
ret
mov
roll
out
femms
mov
jnp
cltd
fcmovne
jno
loopne
leave
sub
add
mov
sahf
xchg
cmp
pause
lea
add
int
je
mov
add
ss
mov
pop
imul
cvtdq2ps
aas
mov
xor
push
mov
stos
inc
sub
rolb
ds
cmp
icebp
mov
jge
mov
lcall
addb
les
cmp
fsubrl
jb
cli
insb
jge
sub
sbb
mov
add
xor
add
mov
jg
test
push
cmp
add
xorl
int3
mov
in
jl
sub
repnz
lock
cli
add
testl
scas
sub
adc
jle
cmp
mov
jecxz
pusha
js
pusha
add
cli
dec
aad
lods
or
push
insb
int3
aaa
xchg
fmull
pop
call
xchg
jae
fisubrl
test
cli
aas
scas
mov
test
adc
cmpb
ss
mov
fwait
add
xchg
adc
cmp
mov
fwait
add
xchg
movsb
hlt
or
dec
rolb
rcrl
repnz
jmp
daa
shlb
iret
mov
test
mov
jbe
pushf
test
jno
dec
dec
aaa
lods
mov
push
test
clc
inc
cmp
test
icebp
flds
xor
add
cmp
or
and
dec
xor
or
sub
sbb
ret
cmovnp
xchg
xor
in
dec
fs
fwait
adc
mov
das
jmp
sbb
shlb
push
fildl
cmp
mov
inc
sub
sbb
lock
xor
std
cmc
jnp
pop
sub
cwtl
lret
add
stc
mov
add
loop
stos
hlt
rcrb
mov
adc
push
inc
pop
sub
nop
addb
loope
daa
jmp
dec
add
notl
jmp
pushf
mov
mov
int3
cwtl
add
fbstp
imul
mov
cli
dec
faddl
add
mov
adc
mov
cmp
mov
add
aaa
cmp
and
xor
into
push
cmp
xchg
jecxz
adc
ja
lahf
nop
outsb
insb
xchg
hlt
cmpsl
fldl
inc
pop
xchg
sbb
stos
shrb
clc
jno
push
pop
dec
jl
add
or
and
sub
cwtl
loopne
xchg
pop
dec
push
sbbb
js
xchg
fcomps
loop
js
add
addb
mov
pusha
mov
in
pop
bound
add
int
lock
push
fidivl
iret
cmp
out
adc
mov
daa
push
das
movhps
jne
pop
jmp
jo
mov
fsubr
js
icebp
dec
or
and
adc
dec
xor
add
stos
repz
add
jl
aad
sub
pop
mov
jns
add
aas
or
fldl
mov
adc
lods
cli
test
and
adc
cmp
inc
cmp
mov
data16
xchg
popa
in
xor
pusha
imul
rorb
pushf
inc
repnz
cmp
fs
xor
push
ja
int3
scas
into
loop
sub
adc
mov
sub
or
movsl
dec
xchg
lret
inc
rolb
inc
rcrl
adc
jp
xlat
icebp
call
shlb
add
cmpsw
stos
das
mov
je
out
pop
add
rorl
jo
adc
jmp
mov
or
test
addb
jmp
push
push
add
jecxz
repnz
ret
lock
or
jmp
add
sub
jne
cld
out
push
cmc
repz
add
xchg
dec
pop
inc
cmpb
inc
sub
cmp
cwtl
movsb
dec
pop
dec
add
sahf
lods
mov
add
scas
test
cmp
lcall
jmp
insl
add
test
cli
add
cmp
decl
sub
imul
or
in
fiadds
xchg
jle
pusha
dec
jmp
leave
mov
add
mov
jne
sub
enter
add
mov
inc
call
loopne
xor
inc
jecxz
mov
adc
jnp
jg
jl
add
mov
dec
xor
ror
xor
jb
fcomi
jmp
and
push
aaa
or
sbb
cld
outsl
jns
mov
and
add
pop
lea
and
sbb
daa
adc
insb
inc
lret
cmp
push
add
ret
push
or
push
and
add
outsl
pop
xchg
frstor
push
pop
mov
pop
or
push
xor
jo
mov
mov
test
stc
sbb
decb
cmpb
arpl
dec
xor
daa
fs
push
add
inc
clc
mov
add
lea
xchg
jg
add
aas
xchg
mov
sub
mov
add
dec
dec
push
ret
mov
sub
add
push
or
add
pop
imul
push
add
inc
sub
test
in
add
das
cli
xor
push
ds
flds
fucomip
cmp
xor
jge
popa
pop
insb
xor
jl
adc
mov
fcompl
xor
leave
andb
stos
ret
sbb
lea
arpl
xorl
mov
sbb
xor
ret
loopne
jno
cmpsl
add
push
adc
es
mov
movsb
and
bound
out
mov
mov
mov
dec
divb
test
add
jp
scas
cmp
inc
movsb
inc
pop
mov
xchg
lahf
fdivrl
add
jae
repz
dec
lock
inc
test
xor
sarb
lcall
fcomi
add
mov
jecxz
adc
in
mov
ret
loope
pop
popf
sbb
add
icebp
jge
mov
and
pusha
xor
inc
in
cmp
rcrb
sbb
rcl
mov
lret
push
fsubs
adc
xchg
inc
movsb
cwtl
sbb
fistpl
add
dec
jb
adc
add
js
adc
and
sahf
and
dec
ret
loopne
imul
mov
inc
add
dec
out
subb
add
in
adc
xor
clc
add
add
xor
or
xor
cmpl
sbb
call
add
pop
or
test
dec
and
cmp
xchg
sbb
lcall
gs
add
ljmp
pop
repz
outsl
push
push
mov
and
aad
cmc
mull
sbb
push
mov
fdiv
cltd
add
mov
call
rcrb
stos
in
dec
add
pop
movsl
add
jge
adcb
xchg
pushf
int3
faddl
repz
pop
loop
jo
mov
mov
movsb
rclb
cmp
mov
or
xchg
addb
clc
cmp
in
jne
push
andb
add
gs
jne
add
jmp
dec
insb
orb
add
lcall
scas
pop
lret
push
cwtl
push
out
cltd
loope
in
xchg
inc
add
sub
or
mov
aam
add
in
fadds
inc
xor
and
push
xor
and
push
xor
xchg
sbb
loope
sbb
in
daa
dec
mov
nop
jns
adc
ds
add
ficomps
adc
jne
out
dec
mov
add
xor
pop
cmpsb
inc
inc
cmp
dec
add
jle
adc
fisubrl
cmc
repz
and
mov
imul
daa
push
pusha
lcall
cmovne
sbb
sti
add
in
dec
imul
ja
in
iret
sub
popf
imul
nop
xchg
add
cwtl
mov
outsb
mov
ljmp
test
in
pushf
pop
lret
adc
add
dec
xlat
inc
jg
cwtl
bnd
sbb
xchg
and
insl
and
mov
inc
jmp
add
daa
xlat
outsl
pop
jnp
add
int3
sarb
add
xchg
mov
add
mov
push
xor
add
mov
dec
sub
add
jnp
movsb
pop
lods
mov
mov
in
pop
push
std
mov
imul
pop
add
leave
mov
in
rcrb
push
lret
add
neg
add
loop
add
add
jo
into
test
shrb
pop
enter
insb
mov
pop
andb
pop
lock
inc
push
loop
sub
shr
fistps
inc
fwait
inc
dec
pop
inc
les
add
insl
or
xchg
movsb
fnstcw
aas
jb
or
jmp
jae
add
sub
je
mov
or
and
sbb
dec
add
push
mov
loope
xchg
pop
iret
mov
and
adc
sahf
add
mov
push
mov
xor
add
adc
and
sbb
pop
in
pusha
xchg
mov
fldl
fbstp
mov
mov
fdivrl
add
loopne
add
xchg
cmp
sbb
rcr
enter
mov
lret
decl
and
adc
testb
and
jno
movl
int
pop
lret
ret
dec
xlat
mov
mov
mov
add
add
inc
test
jle
sbb
xor
repnz
in
lea
in
add
mov
jo
jbe
enter
add
cmpsl
xchg
pop
push
stc
jp
in
cs
adc
cmp
and
pop
aaa
dec
in
sub
push
inc
add
lock
in
shrb
inc
pop
inc
pop
addb
cld
dec
jne
orl
and
push
add
mov
push
add
jo
push
into
jmp
xor
icebp
insb
sbb
add
push
or
push
in
or
and
or
sti
sub
sbb
scas
jae
xor
loope
lret
aas
inc
adc
cmp
aam
or
mov
movsl
xor
pushf
or
mov
pushf
lcall
cli
pop
aam
jno
push
enter
add
jns
popl
pop
add
stos
call
xchg
sbb
test
cmp
mov
adc
inc
les
hlt
jl
add
mov
or
divl
std
mov
mov
filds
sbb
add
mov
add
mov
test
mov
fistpll
xor
sti
xlat
add
pop
imul
imul
jbe
scas
fldenv
popa
xor
ljmp
mov
add
xchg
cwtl
clc
or
add
inc
xchg
scas
add
fsubr
add
test
fisubs
idivb
dec
cltd
mov
mov
in
sub
sti
dec
adcl
clc
ljmp
fmull
nop
add
es
je
in
add
daa
fsincos
add
jne
into
out
test
fistl
jno
stos
mov
sub
ret
pop
into
mov
into
lcall
adc
inc
filds
shll
add
add
pop
imul
add
jb
sbb
pop
inc
mov
in
adc
jns
je
push
pop
and
loopne
add
leave
add
and
repz
outsl
dec
add
adc
xchg
adc
mov
xorb
inc
loop
sbb
stc
jb
xchg
out
jp
dec
sub
add
mov
add
push
xchg
das
dec
rcrb
jb
loop
push
jbe
pop
psubusw
loopne
mov
mov
add
lock
and
das
lcall
cmp
inc
arpl
or
hlt
or
dec
add
fsubrl
mov
cmpsb
pop
push
adc
mov
sbb
jl
test
add
adc
mov
inc
push
imulb
push
cld
pop
aas
lock
pusha
dec
jo
sbb
xchg
dec
pop
add
pop
cs
jb
loopne
add
stc
rcl
sub
into
and
or
mov
cmp
aad
ja
mov
add
outsb
pop
into
inc
imul
loop
sbb
mov
arpl
mov
mov
aas
inc
cmp
push
jno
push
ljmp
add
pusha
xor
push
xor
dec
lods
ret
jle
movsbl
push
sub
push
xor
lea
sbb
sub
adc
inc
popa
xchg
and
js
and
inc
mov
xchg
flds
xchg
sahf
add
insl
enter
pop
hlt
shl
jo
fwait
adcb
add
cwtl
test
mov
and
dec
adc
mov
cmp
nop
stos
mov
test
pusha
sub
lock
cmp
jmp
pusha
lds
add
or
sub
pop
mov
and
and
inc
push
das
addr16
adc
in
jg
insb
push
add
fcmove
xor
and
stc
push
sub
cwtl
in
sub
cmpsl
mov
dec
add
push
repz
mov
mov
cmp
mov
cld
test
mov
cmp
push
sub
jb
inc
mov
lahf
ljmp
mov
insb
adc
add
cmpsb
or
clc
enter
mov
into
shr
sbb
inc
pop
sarb
aas
mov
add
decb
sti
out
sbb
fdivrl
sbb
sbb
test
jns
test
sub
gs
addr16
jo
and
rcrb
add
cmp
pop
arpl
cmp
cmp
add
jne
aad
pop
jo
in
in
scas
shlb
aam
jno
push
das
adc
add
lock
add
rcl
mov
lret
mov
add
das
or
jno
repnz
or
cmp
jne
adcb
mov
add
in
mov
call
xlat
paddusb
lods
mov
rolb
cmpsb
mov
daa
or
lret
mov
clc
push
fistps
lods
push
xchg
les
pop
add
dec
xor
in
mov
repnz
cmp
movsb
add
pop
lea
dec
jnp
push
lret
icebp
add
pop
dec
lods
ficomps
icebp
and
lea
or
push
add
push
sub
test
and
xchg
sub
mov
jns
and
sbb
jl
cld
pusha
add
xchg
aaa
shlb
int3
movsb
cmpsb
js
fiaddl
in
inc
xchg
push
pop
les
mov
push
pop
xor
mov
outsb
add
push
and
insb
bound
or
xchg
daa
int
push
aas
scas
movb
and
clc
test
adc
movsl
std
inc
dec
adc
outsb
add
cmc
add
mov
pop
fildl
lods
inc
or
xchg
jne
add
mov
and
lret
add
mov
testb
add
add
lret
mov
lahf
addb
fwait
sub
adc
imul
das
pusha
insb
jbe
cs
repz
dec
push
aas
add
inc
or
add
daa
popa
add
push
xor
push
pop
mov
test
xorb
fs
sbb
rcrb
add
pop
ret
stc
dec
mov
xchg
or
jno
add
data16
cwtl
add
add
inc
push
daa
stc
repz
add
jmp
xor
pop
lock
add
or
insl
pop
clc
inc
mov
cmp
sub
jo
and
or
push
into
test
mov
jno
pop
add
or
inc
orl
repnz
arpl
iret
sbbl
and
jb
add
aaa
ljmp
add
inc
andl
aam
nop
mov
jo
pop
mov
add
cmpsl
lea
mov
cld
pop
js
push
in
and
xchg
pushf
inc
jbe
arpl
add
pushf
jp
dec
sbb
movsb
jge
mov
add
sub
insb
out
aaa
jge
add
sub
xor
cld
cmc
xchg
je
js
xchg
jp
aam
cwtl
add
ljmp
sbb
stos
mov
repnz
push
ret
lcall
add
fnstsw
xchg
mov
mov
js
lcall
shrl
push
pop
add
mov
sub
sub
insl
dec
add
jecxz
mov
fsub
add
ss
pop
lods
or
mov
shll
cwtl
pop
adc
and
add
cmp
cmpsb
jmp
jle
stc
fs
mov
xchg
add
sub
dec
push
add
push
inc
push
inc
cmc
mov
add
das
ds
inc
enter
dec
mov
cltd
adc
jb
clc
inc
int3
mov
adc
push
push
add
fisubs
jmp
xor
jno
lods
push
add
jb
pop
jnp
dec
and
loop
sbb
adc
jle
loope
test
call
xor
inc
cmp
cmp
mov
push
jge
out
mov
sbb
or
dec
pop
adc
push
dec
das
cmp
xor
and
subb
scas
insb
add
xor
mov
stos
adcb
and
mov
sbb
xorl
inc
sub
das
aam
cwtl
mov
addb
cmp
mov
mov
jo
xchg
inc
or
addr16
add
popa
dec
mov
jae
jg
movsb
adc
xor
pop
inc
or
add
loope
inc
negl
sub
out
add
dec
aam
push
mov
mov
mov
movsb
add
jle
and
push
ja
add
mov
js
xlat
addr16
icebp
sub
mov
mov
add
xchg
lods
iret
stc
negl
scas
pop
fs
add
sbb
mov
push
mov
mov
sub
stos
lea
dec
fcom
sbb
fdivs
dec
sbb
pusha
xchg
jbe
jo
or
xor
cmp
fisubl
add
shl
insl
and
popa
shll
mov
nop
insb
add
dec
or
push
add
xchg
and
pop
enter
sub
insb
mov
orl
js
add
int3
dec
sbb
pop
rcrl
inc
inc
xchg
cltd
jg
mov
add
iret
cmp
nop
or
xor
and
ret
mov
or
sbb
rclb
jno
add
loopne
fs
ret
push
xor
sub
js
inc
aam
cmpsb
jnp
push
mov
loop
pop
sbb
test
in
outsl
add
jmp
add
call
leave
insb
adc
out
push
jae
mov
loope
addr16
dec
and
aas
repz
shll
mov
movsl
jno
shl
cld
out
jnp
dec
mov
repnz
fdivs
pop
scas
mov
xchg
sbb
loopne
loop
cmpsl
add
xchg
pop
out
xchg
push
cmp
cmpsb
mov
in
add
inc
aam
mov
pop
lods
or
push
fs
decl
lret
sub
add
jg
idiv
fbstp
movsb
popl
jp
adc
sub
popa
add
jg
mov
mul
or
inc
cmp
adcb
aam
push
cmp
mov
mov
add
add
xorb
ror
lods
mov
cmpsb
add
fcmove
cld
fistl
or
and
lcall
push
insb
sbb
loop
andb
pushf
sub
pop
out
jl
cmp
jo
enter
popf
mov
xor
ficompl
mov
add
sub
imul
das
out
cmpsl
aad
rorb
cmp
add
pop
and
adc
movsb
hlt
add
push
lretw
cmpb
movsl
dec
xchg
dec
sub
test
add
mov
cmc
into
push
or
in
pop
pop
mov
add
leave
in
adc
xor
arpl
dec
pusha
loopne
inc
add
in
data16
mov
stc
cmp
aad
inc
lods
mov
insl
sbb
push
pop
sub
mov
push
xchg
addr16
pop
fmuls
add
xchg
loopne
mov
loopne
ret
jnp
mov
add
lahf
pop
arpl
imulb
gs
pop
out
jmp
mov
push
out
ficompl
dec
stos
rolb
jle
sub
adc
lahf
addb
adc
rolb
jmp
jmp
lods
lods
fsubr
jne
jnp
sbb
or
or
cmc
rcr
add
jno
idivb
push
int
xchg
ficoms
incl
loopne
fidivs
lods
sbb
scas
cltd
add
into
mov
jg
je
mov
out
add
push
pop
and
push
inc
mov
dec
sbb
jg
xlat
pop
pusha
movsb
or
cmp
cmc
stc
sbb
in
inc
inc
mov
int
pop
incl
sbb
fisubrl
add
shll
sbb
xchg
adc
lahf
cmp
add
aam
imul
adc
stos
aad
fldcw
in
add
pop
aas
pop
inc
imul
sahf
xor
shr
int3
hlt
adc
dec
call
cltd
mov
jnp
inc
sub
pop
aas
rolb
pextrw
dec
add
mov
mov
ret
push
ret
notb
fwait
test
mov
int3
rolb
pop
push
shlb
test
xchg
fisubrl
mov
aad
jbe
ss
loopne
add
inc
adc
jb
mov
and
mov
call
jl
and
subl
jecxz
addb
mov
addb
mov
sbb
jecxz
fstps
pop
call
add
jno
jge
jnp
stc
je
dec
call
ret
xor
jne
pop
mov
cmp
lea
jp
pop
dec
cltd
dec
xchg
addl
mov
fcmovnu
cmp
cli
push
add
dec
and
sub
mov
bswap
and
add
and
mov
daa
out
xchg
int
and
xor
fimuls
hlt
js
in
add
aas
pop
fistpl
push
cmp
cmpsb
sbb
lret
add
sub
das
sar
mov
cld
jle
or
adc
imul
jecxz
fwait
out
mov
xchg
mov
pop
or
iret
xchg
push
popa
mov
rclb
adc
cmp
mov
hlt
add
and
inc
sbb
pop
imul
pop
add
sub
add
test
xchg
in
popf
lcall
add
pushf
jb
mov
xor
ja
jg
test
stos
adc
push
sbb
test
leave
xlat
test
test
imul
andb
mov
add
xchg
sbb
add
jmp
fadds
aam
inc
fnstcw
and
mov
cmp
hlt
adc
or
dec
push
inc
xor
and
cwtl
push
push
mov
out
gs
mov
pop
insb
in
add
test
add
mov
mov
outsl
and
sarl
lret
pop
sub
push
inc
push
insb
mov
add
insl
sub
hlt
xor
ret
push
jb
and
push
jns
mov
sub
pop
mov
add
xor
insb
add
sbb
add
ds
fisubl
jo
subl
das
repz
adc
push
pop
fdivs
xlat
sahf
sarb
and
mov
pushf
sbb
add
and
icebp
testl
pop
xchg
pop
inc
push
dec
ret
frstor
addb
in
test
push
push
cmp
push
in
or
mov
and
push
loope
cltd
jecxz
xchg
sub
mov
add
push
dec
imul
stc
fsubs
lock
add
adc
pop
add
cmp
sub
add
mov
inc
push
or
mov
push
add
stos
jl
sahf
movb
lock
loope
into
ljmp
lret
fwait
mov
add
and
dec
cmovp
push
sbbb
out
and
in
jp
fldl
mov
dec
and
test
mov
xor
add
jg
sub
mov
add
test
add
xor
dec
mov
inc
aaa
push
push
lea
jae
loope
test
push
lock
jno
das
jmp
fiaddl
popa
cmp
mov
stos
add
jmp
enter
add
jp
nop
lods
fimuls
insb
push
pop
repnz
inc
cs
pmaxsw
mov
mov
fmul
and
cwtl
int3
add
and
sub
loopne
ss
pop
push
push
mov
mov
adc
push
add
cmp
out
xor
jbe
lahf
add
popf
xor
add
inc
inc
add
jge
adc
mov
lret
add
into
push
sbb
popa
loop
cmp
or
add
in
hlt
gs
jo
xor
lea
mov
mov
lret
sub
pop
fs
insl
rolb
sbb
inc
mov
sbb
or
leave
dec
cs
rolb
inc
sub
mov
mov
std
or
mov
ficoml
lock
adc
aas
push
mov
gs
xchg
and
sbb
add
mov
cltd
xchg
push
dec
adc
cs
sub
xor
pop
xchg
sbb
insb
jle
mov
xor
shlb
pop
or
inc
aaa
adc
pop
add
inc
add
inc
add
mov
addl
or
mov
arpl
add
outsl
fildl
clts
sub
or
hlt
jns
add
or
adc
imul
xor
in
popf
insb
insb
sub
clc
lods
lahf
mov
mov
sarb
ret
lds
add
xor
jno
mov
mov
pusha
add
or
int
rorb
es
sbb
pop
fnstenv
aaa
sbb
jecxz
ljmp
sbb
ret
leave
sarb
sbb
sbb
pop
mov
orb
bound
and
imul
jecxz
movsl
dec
pop
je
jg
std
jmp
pop
jno
mov
fistps
nop
and
movsb
dec
xchg
cld
js
sbb
aad
inc
push
xlat
clc
xorb
add
cmp
add
movsb
fcoml
mov
fcmovnbe
pop
jns
bound
xor
push
mov
sub
ret
in
lods
cmp
call
sub
fwait
popa
adc
std
add
pop
in
sar
js
cmp
mov
add
lea
sub
cmp
scas
adc
add
mov
aad
clc
sub
stc
in
cltd
jb
add
mov
loop
cwtl
push
int3
cwtl
movsl
sti
sbb
out
dec
adcb
je
ja
nop
loopne
imul
mov
sti
incb
loope
nop
out
fldl
or
aam
cmpsl
add
stos
mov
and
in
or
and
rolb
xchg
scas
xor
jecxz
es
add
adc
sbb
jle
int
sub
xchg
dec
into
loopne
fisubrs
add
jnp
out
les
daa
lock
inc
loop
sub
lds
cs
ja
inc
shlb
mov
jg
loopne
or
fchs
loopne
mov
outsl
inc
lcall
fs
jmp
mov
adc
or
push
pop
cs
adc
sub
icebp
jle
fs
sbb
mov
aam
add
mov
push
xchg
in
push
jge
ret
jl
andb
lret
push
loopne
in
push
jp
cmp
cmp
jne
call
cmp
cmpsl
jmp
mov
cmc
pop
dec
shlb
push
push
pop
jb
add
aam
clc
and
and
test
pusha
stos
shlb
add
dec
pop
jne
mov
add
mov
aas
xchg
ds
add
cmp
mov
into
in
sarl
mov
in
test
dec
add
add
fldenv
js
cmpsb
bnd
jp
xchg
add
subb
ret
andl
mov
repz
adc
stos
je
add
rcrb
fwait
cmp
pop
pop
and
rolb
stos
sbb
push
in
jge
cwtl
ret
cs
sub
push
shll
sahf
rol
or
sub
mov
inc
add
jp
inc
insl
cmp
add
fisubs
ret
sarl
pop
imul
js
cli
outsb
jno
fsub
inc
add
es
out
icebp
mov
push
sbb
sbb
ljmp
add
lret
ss
mov
aas
mov
mov
inc
sbb
sbb
jne
sub
adc
or
and
nop
pop
sub
inc
inc
loopne
dec
das
xchg
js
pop
pop
pop
add
fwait
incl
add
cmpl
push
fsts
xchg
inc
xchg
mov
cmp
add
gs
dec
aad
lods
mov
loopne
sub
repz
ds
daa
sahf
lock
push
push
es
lods
jl
cmp
cmp
cmp
into
in
add
loop
dec
and
dec
insl
shlb
add
cmpsb
fs
and
pop
inc
add
sub
movsl
push
pop
aas
or
adc
sti
repnz
test
je,pt
test
dec
pop
add
or
fwait
mov
adc
xchg
aad
xchg
daa
mov
std
fadds
sti
xorl
add
clc
cld
imul
jo
mov
push
in
fcoms
jno
xchg
mov
out
jmp
js
jge
cmp
mov
loope
fwait
rolb
mov
lret
xor
shll
push
out
test
mov
or
xor
ret
adc
jmp
adc
dec
pop
lahf
lcall
pusha
repz
sub
rcll
or
nop
imulb
mov
xor
add
pop
cmp
mov
xchg
lcall
jge
jg
mov
test
movsb
pusha
mov
fs
xor
and
xchg
push
pop
jno
dec
cmp
mov
mov
in
add
loope
pop
cltd
movsb
sub
mov
or
ss
in
out
and
adc
pop
add
out
and
mov
add
pop
loopne
ljmp
icebp
jne
add
in
cli
cs
jge
add
inc
addl
push
into
pusha
test
dec
xor
jecxz
xchg
add
fisubs
push
fdivr
or
adc
xor
xchg
add
insl
js
test
adc
aam
mov
lods
jno
test
add
lcall
pop
pop
and
mov
add
scas
add
and
mov
outsb
inc
outsl
sub
rolb
sub
push
adc
jge
mov
xchg
add
lods
or
pusha
cli
jmp
aad
loopne
insl
dec
imul
push
inc
div
roll
sub
pop
or
or
push
sbbb
or
cwtl
inc
xchg
fnstsw
scas
pop
mov
push
jo
add
xor
mov
sbb
aas
lret
or
addl
repnz
add
cltd
das
pusha
movsb
and
push
in
fdivr
xor
mov
xor
cmc
add
jle
add
ss
add
ror
pop
xchg
arpl
jecxz
div
shlb
jno
jbe
rorl
and
int
xchg
dec
out
push
adc
adc
mov
pop
aaa
lret
add
sahf
outsb
sub
cmp
add
add
dec
lock
out
add
mov
and
or
cmpsl
addr16
mov
and
sbb
push
pop
enter
push
sbb
xor
add
pusha
sub
les
popa
imul
jp
jle
add
lret
shl
lcall
outsb
lret
dec
push
fidivrl
jecxz
adcb
inc
add
sub
adc
pop
cmp
das
les
inc
mov
xor
sbb
outsl
push
icebp
rcrb
call
call
adc
add
jp
pop
mov
movswl
jbe
rcll
cmp
or
insb
test
inc
cmpsl
add
xor
add
std
pop
les
xorl
mov
pop
ljmp
sbb
xchg
add
jno
cmp
leave
fwait
add
jne
and
inc
pop
ret
add
add
repz
xor
inc
push
mov
push
or
js
jno
jnp
iret
xorb
leave
addl
popf
daa
movmskps
das
cmpsb
popf
add
fisubl
add
inc
push
das
aaa
dec
sub
jae
mov
xor
aaa
adc
add
push
pop
scas
jno
nop
add
push
stos
mov
cmpsb
and
mov
lods
rorb
addb
adc
les
add
add
jo
out
daa
xchg
inc
loopne
push
outsb
mov
jne
add
adc
pop
imul
push
add
lea
dec
xchg
fisttpll
fisubs
xchg
mov
fsubs
sbb
mov
xchg
xchg
sub
packssdw
lock
pop
in
xchg
sub
clc
sub
sbb
dec
mov
fs
cmp
insb
paddq
in
push
lods
mov
fs
mov
cmp
fsubrl
xchg
add
push
fnsave
mov
imulb
lahf
leave
int3
shll
aas
or
movl
and
loop
add
xor
jno
pop
popf
push
std
sub
push
lret
cmpb
add
sar
add
cwtl
adc
add
or
mov
push
inc
call
stos
inc
push
test
das
add
xchg
gs
add
fsubs
mov
call
jbe
jns
mov
adc
mov
mov
or
jno
pop
in
xor
mov
jo
lock
cld
ret
xlat
and
jge
xchg
add
mov
or
add
jo
jp
mov
out
ja
lods
shll
sub
testb
or
imul
lahf
mov
push
xchg
sarb
incl
xor
scas
dec
out
das
inc
sub
dec
add
sarl
les
loop
dec
jns
add
xchg
mov
and
add
cld
rorl
inc
aad
add
cmp
inc
add
mov
iret
mov
int3
insb
out
jno
and
sbb
lcall
and
mov
insl
sbb
add
repnz
add
out
in
add
pop
out
icebp
cmp
or
clc
pop
adcb
adc
scas
popl
inc
add
sbb
outsb
sbbb
addb
mov
movsb
and
andl
ljmp
orb
inc
xor
fsub
cmp
mov
imul
adc
jnp
mov
mov
lret
mov
shlb
cmp
xchg
sbb
enter
fildl
and
rclb
or
push
mov
jl
rorb
ret
aam
inc
inc
add
movsl
push
pop
sub
cli
mov
clc
xor
scas
push
iret
idiv
ds
pusha
inc
add
in
push
pop
push
jp
inc
adc
mov
jle
dec
out
mov
les
test
add
xchg
imul
jmp
add
test
add
pusha
xor
pushf
repnz
testb
pop
popa
jo
jp
push
xor
inc
push
pusha
xchg
add
or
fwait
cmp
ljmp
pop
outsb
cmp
add
push
loope
test
mov
in
add
shr
sbb
fld
cmp
push
ret
sahf
dec
stc
add
sbb
lods
nop
cld
xchg
push
inc
mov
add
into
add
adc
xor
clc
or
sub
insb
ficoml
push
dec
adc
add
fwait
or
pop
mov
shl
inc
mov
inc
pop
clc
mov
dec
jno
and
dec
pushf
mov
jg
add
push
ss
mov
cmpsb
inc
add
cmp
push
pop
cmc
jne
adc
sub
add
inc
adc
leave
mov
add
in
cmc
sbb
dec
sub
xchg
and
add
push
cmp
and
sbb
fs
adc
or
aas
pop
les
adc
mov
sub
dec
sub
rclb
in
rcrl
and
shll
add
out
imul
push
or
inc
mov
add
mov
add
dec
dec
jne
imul
cmpsb
arpl
aam
not
mov
xchg
test
adc
sub
int3
test
sub
sbb
pop
cs
test
inc
push
inc
jge
adc
stc
add
cltd
cmc
add
sahf
cmp
cld
push
cmp
negb
xor
dec
mov
shlb
inc
cmp
call
mov
mov
add
repz
xchg
leave
mov
pinsrw
or
cwtl
mov
cmpsl
test
push
std
push
jge
sub
mov
mov
add
xchg
imull
xchg
cld
rcr
jo
andl
push
and
into
pushf
test
add
mov
mov
adc
fmull
roll
fcompl
jmp
mov
pusha
int3
decb
and
jge
andl
mov
jb
cmp
or
fwait
mov
mov
das
push
adc
pop
dec
or
aaa
dec
cwtl
mov
xchg
cmpb
pop
xor
lock
jb
lock
dec
push
mov
int
mov
in
sub
ljmp
in
add
mov
mov
fmulp
mov
cwtl
stos
into
nop
jg
mov
mov
xor
enter
addr16
add
mov
add
pushf
add
mov
das
fldcw
je
cli
adc
clc
pop
data16
jl
sbb
inc
or
or
push
add
pop
jbe
bound
in
fs
lods
cs
xor
add
push
or
mov
sbb
add
inc
mov
xchg
ljmp
ror
xchg
cmovs
or
sub
je
xchg
add
jbe
cmpsl
fbld
mov
or
add
popf
and
cmpsb
mov
dec
jns
push
xchg
aam
sbbb
mov
mov
lret
pop
inc
inc
popf
rcrb
jno
lds
inc
sub
outsl
xchg
js
adc
inc
push
in
nop
mov
pop
mov
ret
lea
subb
clc
loopne
push
dec
pushf
add
push
sub
test
adc
je
add
scas
dec
pusha
popa
add
cmp
into
fsubr
add
stos
adc
pop
push
xchg
xchg
xchg
cmp
pop
add
out
fsubrs
enter
sbb
hlt
cmp
push
dec
and
dec
xchg
aas
nop
inc
ss
jecxz
not
std
or
rol
and
mov
lods
xchg
xor
loop
rorl
mov
add
aad
xlat
fs
add
shlb
cmp
stos
mov
das
rolb
in
add
idiv
shlb
push
xchg
loop
loopne
insb
add
orb
lea
pop
add
mov
add
insl
rcr
test
push
inc
and
shll
add
xchg
pop
stos
sub
out
push
mov
dec
repnz
xchg
js
adc
call
add
inc
sub
out
xchg
loopne
or
call
sarb
jns
add
xor
add
imul
rcll
jle,pt
push
add
out
and
add
ss
les
push
inc
xchg
cmpb
push
enter
icebp
fsubp
mov
and
xchg
inc
pop
and
cmp
adc
outsb
mov
jg
ja
filds
lret
add
xor
call
add
inc
adc
sub
inc
mull
mov
jmp
sbb
in
dec
pop
loopne
xchg
add
ret
push
fucomp
das
cmp
scas
inc
mov
add
and
fucomip
jno
orb
mov
inc
mov
push
les
mov
mov
repz
jl
inc
sti
dec
xor
inc
dec
cli
add
xor
add
inc
mov
jne
test
mov
cs
arpl
cmpsb
rclb
pop
xor
add
push
scas
andb
stc
imul
pop
jecxz
cmp
pop
cld
out
add
std
push
ds
push
ficoms
test
add
aad
jl
movsb
sbb
cmp
cmp
data16
push
inc
movsb
mov
add
jmp
frstor
jo
stc
rcl
add
xor
pop
push
sub
int3
insb
adc
filds
outsb
pop
fdivl
clc
adc
call
fcmovb
add
lcall
int
xor
inc
shlb
sub
mov
stos
mov
clc
sti
push
and
loop
mov
sbb
lock
int3
lahf
dec
add
cmc
sbb
popa
lods
sub
and
es
fldt
mov
out
clc
adc
ss
and
loop
lahf
clc
les
popf
mov
ret
mov
xchg
mov
add
pop
icebp
andb
push
xor
push
cltd
mov
pushf
xorb
mov
hlt
mov
pop
jb
out
jns
lret
mov
inc
popf
mov
dec
add
and
mov
bound
or
pop
into
test
and
adc
pop
fidivrl
imul
loopne
pop
sub
pop
in
sbb
dec
dec
dec
xchg
lods
mov
popf
inc
fs
mov
sti
add
mov
out
xor
pop
mov
inc
sub
lock
lret
sbb
mov
or
xorb
pop
mov
cmp
fs
mov
or
push
sbbl
cld
inc
mov
mov
in
sub
pop
mov
or
sti
xchg
sbb
cmp
mov
in
inc
dec
and
pop
imul
ja
sub
adc
sub
jne
loopne
jg
mov
sub
inc
mov
cmp
jp
add
cmpsl
pop
insl
sub
inc
ficoms
push
or
dec
add
cmp
pop
icebp
cmp
add
dec
add
push
cmp
dec
aas
ret
jb
dec
aam
inc
js
add
loop
cmc
lahf
call
scas
mov
imul
add
jns
ja
rcll
add
mov
movsl
cli
data16
xor
imul
inc
add
icebp
pop
add
add
bnd
pop
mov
aam
fisubl
sbb
or
ret
xchg
faddl
faddl
jl
fdivs
int
and
add
lds
jp
add
xchg
xor
addb
or
cmp
scas
out
in
inc
push
and
shlb
add
iret
xchg
insl
stos
adc
xchg
mov
and
out
jne
add
adcl
call
cltd
daa
or
cmp
jne
push
pusha
adc
ret
add
mov
insb
sbb
shll
rcll
add
jg
mov
jnp
shl
cmp
add
or
mov
mov
mov
push
or
push
mov
pop
and
push
dec
lods
pusha
nop
add
ljmp
daa
add
rol
sti
fdivp
pop
test
xor
clc
test
inc
or
mov
fdivrs
push
loopne
scas
push
pop
jne
or
sub
ja
int3
or
pop
mov
pop
sub
out
mov
mov
lock
imul
lcall
mov
int
pop
jno
xchg
outsl
outsb
popf
add
jl
add
add
mov
and
daa
cmp
mov
add
mov
push
sub
test
out
dec
mov
and
inc
pop
fs
dec
xor
enter
shlb
pop
cmp
xor
sub
xchg
lds
push
sbbb
fiaddl
xchg
mov
xor
test
add
lock
inc
mov
cmpsb
bound
or
add
lods
lahf
fcompl
ljmp
cmp
add
jno
pavgw
jge
mov
mov
mov
ja
push
jl
mov
cli
push
push
mov
orb
mov
jp
sub
or
movl
lods
jg
leave
sub
add
mov
sbb
pop
push
decl
pop
adc
add
jae
pusha
loopne
mov
cwtl
cld
push
jbe
mov
lods
jns
mov
fdivrs
pop
popa
shlb
add
or
insb
sbb
mov
cmp
lods
mov
add
mov
cmp
jecxz
mov
add
int
clc
rcrb
pop
cld
or
push
inc
mov
xorb
adc
clc
sub
es
mov
loope
cmpsl
adcl
push
aaa
adc
adc
push
test
xor
les
mov
pop
push
sbb
push
mov
and
add
icebp
negl
dec
dec
dec
test
iret
xor
scas
daa
adc
in
hlt
lock
insb
lret
loope
out
hlt
add
xchg
pop
repnz
or
mov
int3
mov
xchg
arpl
imul
movsl
dec
dec
icebp
add
jb
test
pusha
add
movsb
js
je
ds
pop
or
lcall
ljmp
adc
xchg
cmp
sbb
scas
je
push
loopne
jmp
xchg
bound
loope
add
push
xor
notl
sahf
fnstcw
pop
jns
xor
test
cmp
or
movsb
cs
leave
mov
push
and
cmp
cld
mov
dec
lock
out
adc
add
test
mov
mov
push
and
movsl
jb
add
fs
ljmp
xor
cmp
aaa
testl
mov
push
pop
out
cld
fucomip
mov
in
add
frstor
jno
mov
mov
sbb
fiadds
test
mov
jb
mov
jp
je
mov
cmp
adc
inc
shll
sti
add
add
clc
dec
push
push
push
mov
xorb
mov
adc
jo
lea
pusha
xlat
sub
mov
shlb
add
mov
add
movsb
add
aaa
jecxz
cmp
test
add
stc
popa
jp
add
add
adc
repz
sbbl
push
jo
add
out
mov
pop
imul
add
xor
ret
in
or
mov
test
lahf
pop
insb
xchg
sbb
mov
shll
call
clc
sub
mov
or
imul
lods
jae
je
and
sub
push
mov
or
cmp
das
popa
roll
or
pushf
mov
fstl
add
mov
and
sbb
cmp
loope
inc
add
pop
add
lahf
mov
arpl
adc
xlat
cwtl
push
sub
sbb
fimuls
fcoms
iret
pop
cmp
cltd
add
shlb
pop
add
outsl
repz
sbb
cmp
pavgw
adc
and
xorb
jne
test
mov
lret
mov
lahf
adc
mov
sbb
push
dec
in
test
adc
mov
push
add
push
repz
mov
std
add
add
jp
dec
incb
sub
or
das
imul
ds
push
push
xchg
cmp
and
and
push
popf
add
leave
stos
xlat
add
fs
notb
add
inc
nop
je
xchg
xor
push
lret
pop
movsl
xchg
add
cld
xchg
dec
popf
subl
sti
and
add
je
xchg
ret
jno
nop
mov
mov
repz
ja
daa
xor
test
add
cmp
bound
sbb
cs
cld
push
aas
cmpsb
xchg
test
push
add
pop
sarb
or
jmp
xor
ja
cmc
or
prefetchw
std
sub
sti
fdivr
fcompl
inc
sahf
mov
pop
adc
dec
or
sti
fimull
xchg
jne
cltd
adc
and
dec
mov
push
test
nopl
xor
adcl
pop
or
fimuls
fmuls
jecxz
mov
adc
add
cli
pcmpeqw
lcall
rcll
aam
push
pusha
xchg
ja
pop
bound
les
push
lock
dec
sbb
aas
sbb
pop
stos
popa
jg
and
sysret
mov
dec
adc
pop
add
and
add
dec
pinsrw
jo
xor
jne
push
pop
cmp
ret
cmp
pop
leave
adc
in
fsubl
push
add
cmp
mov
push
rorb
aas
adc
adc
fistps
add
std
popf
add
je
adc
push
fadds
or
adc
rolb
add
adc
pop
pop
lret
gs
push
cmpsb
add
jecxz
mov
jo
loopne
add
cmp
das
add
ds
addr16
cmp
mov
rolb
inc
test
mov
adcb
pop
xchg
push
mov
add
sub
sub
pop
repz
xchg
js
out
out
rcll
fistps
add
jno
add
cmp
add
mov
imul
jmp
sub
mov
inc
xor
cltd
outsb
mov
jmp
jno
or
dec
lret
or
add
add
sub
fs
nop
and
mov
add
mov
add
or
imul
jmp
mov
addr16
mov
js
inc
out
jle
ljmp
mov
out
cmp
xchg
inc
insl
mov
sbb
xor
push
jmp
jmp
sbb
mov
js
lahf
jl
and
push
xchg
mov
add
dec
xchg
lods
inc
xor
jg
add
sub
jno
push
in
push
xor
add
sbb
pop
dec
scas
and
add
mov
dec
xor
iret
add
repz
add
sub
mov
sbb
add
xor
rcrl
push
and
xor
lret
jae
inc
test
push
cmp
imulb
sub
sbb
out
inc
lock
sub
jl
xor
xor
lea
and
mov
mov
pusha
loope
add
sub
sub
nop
nop
jg
sbb
cmp
xor
adc
inc
jp
add
jmp
pop
xor
pop
xor
mov
push
xor
and
and
cwtl
out
jge
lock
ss
fisttpl
inc
sbb
scas
xchg
mov
test
ljmp
or
fdivrs
add
cmpsl
mov
in
pusha
lcall
jno,pn
jbe
les
paddq
jl
xchg
sbb
cwtl
cmp
add
ret
lds
adc
fucomip
pop
adc
add
cmc
sub
or
loopne
inc
popa
mov
and
call
test
pop
andb
xchg
jae
pop
std
jmp
mov
mov
leave
popa
sub
lds
imul
cmp
inc
xchg
int3
in
add
cmp
push
les
and
addr16
inc
xlat
and
pop
insl
fcomp
pop
lds
stos
cmpsb
rclb
mov
adc
cmpsl
mov
inc
repnz
sub
mov
push
pop
addr16
pop
aaa
adc
mov
mov
push
mov
jns
addr16
pop
sbb
pop
xor
loopne
add
clc
and
mov
psubq
lahf
movl
mov
int3
pusha
fdivs
stos
test
icebp
andb
mov
dec
mov
mov
mov
int
rolb
paddd
pop
lret
das
add
mov
add
lds
lea
and
faddl
cmpsl
test
mov
pop
rclb
xor
mov
aas
subl
popf
cmpsb
enter
pop
fs
mov
pusha
insl
fwait
or
test
je
cmp
loopne
add
push
push
cmp
adc
inc
adc
mov
cltd
dec
pusha
and
and
lods
or
pop
push
enter
add
cs
adc
add
add
adc
shll
add
cltd
jae
add
popf
mov
loop
or
repnz
mov
add
pop
and
enter
sub
jg
enter
jecxz
mov
sbb
movsb
add
pop
mov
inc
mov
cld
aad
out
imul
fs
add
es
push
fsts
mov
rorb
sbb
inc
fbld
pop
xchg
lods
push
mov
mov
test
js
mov
stos
subb
loope
and
and
cmp
push
es
add
icebp
cmp
call
test
adc
dec
mov
lret
jbe
rorl
notl
dec
xchg
loopne
cli
ss
sbb
jo
fwait
in
jg
dec
cmpsl
fdivrl
dec
add
stc
adc
ret
push
adc
add
inc
in
pop
roll
mov
pop
test
pop
or
add
push
xor
or
push
push
add
pop
addr16
cmp
lahf
xchg
add
in
pop
jb
push
add
jbe
adc
inc
add
add
dec
in
mov
add
cltd
pop
or
sbb
mov
jge
cmpsl
fidivl
fisttpl
add
push
outsl
xchg
cs
fwait
add
sarb
xchg
mov
fstp
movsb
jge
out
pop
adc
jp
cmpsb
fsubrp
ljmp
movsl
mov
das
pusha
les
inc
adc
xor
or
jae
jg
jbe
xor
push
pop
mov
imul
and
push
cs
dec
push
add
mov
or
sbb
add
pop
jo
nop
loope
test
roll
pop
subb
and
sbb
cmp
or
and
in
dec
or
aas
ret
sub
or
out
push
call
in
mov
or
outsb
mov
ficoml
mov
sbb
pusha
dec
loopne
nop
rcll
mov
stos
sbb
notl
sbb
xchg
lock
adc
xchg
int
xchg
call
rol
cvtpi2ps
pusha
repnz
mov
push
call
mov
mov
cmc
sub
or
xchg
mov
lock
cmp
xorb
out
sbb
inc
adc
movsb
xor
jbe
jo
js
pop
sti
pop
inc
sub
add
outsl
jbe
xchg
dec
sbb
add
mov
mov
cmp
jp
dec
and
adc
aad
sbb
ss
mov
loope
out
add
mov
ror
push
adc
add
cld
addr16
lret
lahf
add
cwtl
mov
sbb
jno
sbb
ljmp
xor
lret
outsl
add
iret
mov
sbb
cwtl
js
mov
retw
scas
push
gs
pop
push
sub
pushf
mov
adc
repz
or
push
and
lret
xlat
mov
lret
arpl
add
sub
enter
into
out
fcoms
and
daa
add
push
scas
jb
add
xor
fcomp
push
jno
and
nop
xor
adc
inc
jb
jge
add
test
in
js
cmpsl
add
xchg
sti
out
dec
jg
push
xchg
add
enter
nop
mov
jbe
mov
or
inc
aas
xchg
add
je
sti
or
pusha
out
xchg
cwtl
xor
and
and
aam
jbe
mov
or
push
decl
icebp
and
orb
xchg
add
pop
outsb
and
fcoms
aad
std
or
ds
add
and
mov
outsb
inc
leave
pop
hlt
inc
or
add
lock
sub
imul
xor
push
inc
out
aam
mov
cmp
dec
in
imul
mov
xlat
mov
adc
shrb
xchg
stc
mov
cmp
hlt
inc
lahf
std
les
dec
xor
cld
push
sbb
sti
add
push
or
ss
in
mov
adc
cmc
lret
lea
lret
out
les
shll
mov
cwtl
jae
jge
cmp
dec
sti
add
and
xor
test
daa
fldl
mov
push
xchg
andb
adc
xor
fadds
and
xchg
std
mov
push
aaa
cmc
pusha
bound
repz
js
and
test
cltd
or
and
mov
notb
jbe
lods
sbb
pop
mov
jnp
movsl
lret
or
movsb
cmp
ret
inc
out
add
sbb
and
dec
lret
add
lods
jle
or
sti
adc
popf
jl
jne
mov
hlt
push
push
jno
iret
sub
and
mov
movsb
movsb
test
xorb
inc
lar
mov
cwtl
mov
rcl
lock
cmp
sbb
mov
sbb
fstpt
push
scas
mov
sbb
or
sub
dec
add
aad
int
test
mov
inc
add
pop
or
push
lret
incb
es
or
pop
loop
jo
pop
shll
push
lea
pop
arpl
insb
or
sbb
or
and
pushl
insb
fistl
sbb
push
add
fbld
pop
pop
rclb
dec
lcall
add
in
je
std
das
pusha
inc
pop
repz
stc
and
xchg
mov
imul
sbb
in
out
scas
rorl
dec
push
enter
adc
sti
in
and
mov
add
or
add
jge
mov
shlb
outsl
pop
push
jmp
push
mov
jo
mov
cwtl
sbb
rorl
cmp
gs
sahf
mov
orb
add
fimuls
and
and
sub
arpl
or
push
adc
ljmp
loop
in
and
je
in
jbe
call
push
das
movsb
jmp
push
out
jbe
leave
mov
mov
xchg
pop
jecxz
cmp
push
fimuls
pop
pusha
shrb
jp
fwait
inc
mov
adc
push
rolb
pushf
imul
sub
loope
repnz
add
jns
out
xor
cs
cmp
int
adc
inc
ss
sub
adc
mov
cmp
loop
sbb
roll
xor
pushf
popf
inc
mov
aas
dec
add
sbb
fcom
ja
jmp
pusha
mov
shlb
scas
xor
dec
adc
xor
sbb
les
sbb
cwtl
mov
adc
outsl
js
or
or
subb
push
sbb
jecxz
sbb
mov
pop
mov
insl
xchg
inc
pop
addr16
push
stc
movsb
dec
or
cmp
stos
scas
out
pop
dec
push
mov
orb
fs
lds
jb
jo
daa
jp
add
and
sbb
xor
mov
jmp
mov
cmp
add
aam
mov
nop
xor
pop
mov
add
jge
pushf
lahf
js
seta
and
mov
sub
repnz
push
add
cmpsb
add
js
dec
xor
test
enter
sti
and
xchg
into
mov
dec
mov
int3
pop
mov
add
in
sarb
push
dec
out
mov
or
icebp
jl
mov
jns
push
inc
rcrl
xchg
cmp
and
fiadds
xor
out
inc
mov
pop
sbb
and
add
sub
negl
loopne
jnp
add
dec
cld
addr16
push
ja
or
dec
cmp
mov
cmp
in
rolb
imul
das
or
loopne
xchg
loopne
insl
cmpsb
in
add
pop
sub
jne
push
mov
adc
rcl
mov
fcomp
sbb
icebp
add
push
out
push
xchg
in
dec
adc
xor
and
aad
jbe
add
push
aas
icebp
mov
add
in
lret
std
sbb
sbb
fiadds
jmp
dec
arpl
inc
push
xor
adc
daa
loop
pop
sbb
jns
or
add
insl
mov
mov
mov
int3
adc
and
int
or
cmp
mov
shlb
pop
js
cmpsb
and
add
outsl
in
dec
pusha
cli
ltr
lcall
xor
xchg
adc
inc
add
pop
outsb
shlb
test
dec
xchg
scas
xor
inc
hlt
outsl
jg
loopne
xchg
dec
ja
add
repnz
shrb
adc
lock
movsl
lods
xorl
imul
xchg
ret
idivl
cmp
clc
jnp
sarb
popl
adc
mov
in
imul
push
and
stos
dec
pusha
out
test
pop
jne
adc
dec
adc
dec
sbb
cli
jae
aaa
out
dec
mov
out
inc
mov
js
inc
shlb
push
sbb
mov
or
aam
or
mov
sti
call
pop
push
je
scas
sbb
int
mov
or
daa
push
push
leave
xor
rclb
inc
shrl
sub
aas
mov
je
add
inc
nop
mov
xlat
mov
orb
mov
sub
ret
iret
cmpsl
je
inc
add
addr16
shrl
lods
add
mov
mov
inc
add
rorb
mov
cmp
cld
push
hlt
stos
add
sub
push
fdivp
sbb
mov
pop
cmp
aas
pop
outsl
sahf
xchg
or
dec
pushf
push
inc
push
iret
add
rclb
mov
fisubl
add
repz
popf
call
mov
xchg
cwtl
ljmp
push
sub
mov
or
pop
mov
add
or
idivb
xchg
or
insl
add
push
mov
cmp
adc
es
std
add
sbb
dec
dec
popa
cmp
sub
add
das
adc
dec
loope
shrb
mov
mov
push
xchg
add
mov
xor
repnz
adc
mov
add
sbb
xor
cld
add
cmp
mov
mov
fwait
popf
dec
lret
lock
pop
incb
frndint
or
pop
je
sbbb
and
mov
push
mov
add
mov
push
add
xchg
rcrb
aas
add
inc
int
cmp
sub
mov
add
push
sub
mov
clc
jbe
or
mov
adc
push
out
nop
dec
or
xchg
xchg
adc
mov
xor
xor
fs
add
add
add
or
push
loopne
scas
scas
aas
mov
add
xchg
cmp
iret
inc
mov
ret
inc
scas
push
dec
push
str
mov
add
pop
lret
cmp
in
frstor
and
jb
je
in
test
push
inc
scas
dec
aaa
mov
xchg
inc
push
sbb
inc
xchg
dec
std
movsl
mov
mov
add
jmp
cmp
rorl
push
cmp
test
xor
or
jne
jge
enter
lret
push
pop
int3
roll
add
mov
lods
xor
fsubs
inc
test
jo
inc
cmpsl
test
rorb
xchg
out
jnp
f2xm1
or
sub
and
fisttpll
pop
pop
dec
jbe
or
xchg
cmc
imul
lcall
out
pop
cs
sub
lods
fcoml
jl
std
enter
and
dec
mov
lock
push
adc
xor
push
rolb
pop
sbb
cmp
pop
aad
jecxz
leave
push
and
push
and
push
hlt
iret
pop
lret
decb
add
mov
cltd
xchg
inc
add
pop
add
xor
rorl
or
adcb
add
add
add
imul
jne
rorb
and
inc
cmpsl
add
add
push
adc
sbb
ds
cmp
clc
mov
xor
add
daa
arpl
or
pop
sub
jb
addb
sub
out
or
xor
adc
sub
push
hlt
add
lahf
scas
fidivrl
xchg
sbb
sahf
mov
mov
jl
jecxz
les
mov
or
pop
repnz
xchg
into
jnp
pop
sahf
xor
sarl
xchg
mov
pop
clc
sub
push
cmpsb
dec
push
cmp
cmp
fimuls
cmp
add
mov
xor
xadd
outsb
movl
in
lret
adc
and
das
add
test
aad
cmp
ja
adc
add
push
out
inc
lods
add
sbb
add
aaa
lock
daa
in
ret
xchg
xor
in
insb
sahf
mov
inc
push
mov
test
xor
lds
out
and
loopne
ljmp
dec
jo
xlat
mov
add
ss
in
push
jl
inc
and
test
stos
mov
out
adc
fistpll
stos
sahf
or
jnp
cwtl
add
outsb
xchg
mov
repnz
mov
mov
adc
xlat
mulb
mov
xchg
mov
pop
loopne
jns
xor
std
in
dec
rorl
add
cld
ljmp
cmpb
cmp
fildl
xor
insl
dec
loopne
add
push
pop
mov
jmp
add
mov
mov
push
ret
add
js
adc
add
push
call
rcl
or
add
push
mov
push
fiaddl
enter
movsb
imul
lahf
pop
jnp
stos
rcrl
fmul
mov
sbb
daa
add
sub
dec
arpl
outsb
in
jns
pop
mov
xchg
push
hlt
jne
orb
jle
enter
pop
and
js
idiv
sub
sub
outsl
cmp
xor
or
adcb
jmp
shrl
xor
push
clc
mov
loopne
mov
sub
push
dec
mov
cli
pop
into
pop
daa
sub
fsubs
hlt
rorl
imul
lret
pop
sbbb
mov
xor
je
add
adc
adc
in
lahf
pop
xchg
push
icebp
xchg
and
sub
and
jmp
mov
mov
mov
and
mov
fnstsw
adcb
add
mov
xchg
or
dec
push
and
pop
cs
dec
test
mov
xchg
addr16
pop
mov
or
mov
cmp
or
pop
dec
lock
push
add
ja
add
sbb
pushf
and
jno
sbb
mov
es
sbb
pop
dec
out
lahf
mov
rorb
pop
lods
nop
xchg
xchg
add
nop
aad
add
fwait
add
push
sti
push
adc
mov
add
loopne
imul
xchg
lock
daa
pop
xor
add
push
and
cwtl
cmpl
push
adc
repz
inc
add
out
xor
mov
push
push
inc
push
inc
movsl
mov
push
jl
test
lods
pop
xchg
iret
push
fxch
pop
popaw
dec
mov
incl
or
xor
jae
mov
mov
rolb
push
cmp
es
les
stos
es
hlt
ret
daa
jp
mov
je
call
push
sbb
fistps
stos
rorb
push
and
xchg
inc
subb
mov
stos
cmp
subb
adc
mov
jg
lret
add
push
push
adc
mov
xchg
aaa
lods
xchg
mov
jp
sbb
jp
lahf
int
outsl
rolb
add
fcoml
or
and
xor
rcr
add
arpl
inc
popa
mov
mov
addb
dec
sub
push
cmpb
shlb
sbb
and
lahf
dec
les
add
jl
mov
push
out
and
pop
mov
mov
mov
xchg
mov
les
repnz
scas
push
cmp
adc
mov
pushf
push
xchg
stos
sbb
jns
xor
aaa
pop
jne
mov
mov
mov
lcall
fisubrs
js
test
xchg
seto
test
jg
xor
mov
cmova
inc
mov
jmp
loopne
gs
xor
adc
loope
inc
pushf
xor
incb
cltd
mov
in
push
stos
push
sbb
mov
mov
add
or
rolb
outsl
sbb
add
cmp
mov
mov
and
ret
or
shl
push
mov
xor
jb
cli
movsb
add
cmp
jl
sbb
xor
test
sbb
rcrb
test
out
mov
push
cwtl
pop
jb
les
add
aad
xchg
fsubr
mov
and
cli
mov
adc
stos
sbb
adc
push
add
xlat
xchg
xchg
jge
and
mov
out
sub
sti
xor
inc
pop
icebp
mov
loope
jb
or
call
pop
idiv
inc
nop
cmp
sbb
fs
addr16
ret
lahf
sbb
push
or
mov
popa
lock
sub
push
rolb
jle
and
sub
fdiv
add
daa
or
sarb
xchg
push
mov
inc
daa
add
mov
cmp
add
push
dec
sahf
nop
cmpsb
fdivrs
jge
jb
add
add
sbb
mov
add
pop
sarb
les
add
and
lret
push
clc
fcomi
ficoms
out
pop
add
es
lock
pop
mov
insb
ret
and
jmp
dec
inc
sub
mov
lcall
xchg
outsl
ror
add
aad
jl
and
push
xchg
cmp
and
sub
cli
daa
sub
sub
fdiv
testl
push
push
adc
pop
lock
inc
leave
sub
arpl
inc
xchg
sub
gs
inc
rorl
dec
adc
jnp
mov
push
call
and
sub
je
push
or
hlt
mov
divb
enter
sbb
pusha
mov
pusha
pop
mov
inc
xor
pop
ljmp
add
and
add
jno
mov
pop
inc
sbbb
inc
push
sbbl
cmp
lods
sbb
mov
mov
add
jmp
lds
mov
mov
and
enter
ds
loopne
push
xchg
test
popf
dec
add
or
test
add
clc
pop
pop
xor
add
push
and
popa
icebp
and
mov
lret
cmp
adc
repnz
xchg
mov
push
sti
xor
bound
xor
mov
push
popa
sbb
jecxz
xor
xchg
pop
arpl
add
leave
jbe
cwtl
xlat
cmovns
push
cs
jl
add
jb
repnz
ret
mov
mov
in
call
mov
roll
enter
repnz
clc
push
sbb
icebp
popa
adc
stc
cli
fcomps
nop
repz
pusha
mov
call
adcb
ds
cmc
nop
mul
sub
push
mov
mov
es
jne
mov
inc
push
popl
shrl
stos
repnz
loope
or
stos
sbb
jmp
push
lock
dec
sub
add
mov
push
add
jmp
xor
inc
clc
repz
xlat
push
fldl
sahf
xor
out
lldt
ss
roll
xor
pusha
ds
dec
adc
dec
cmp
scas
and
cwtl
hlt
pop
out
adc
inc
add
in
dec
mov
jle
cmp
cmp
je
addr16
add
lods
inc
xor
mov
sbb
sub
mov
mov
jne
in
fs
push
daa
arpl
cmp
add
lods
push
mov
mov
test
pop
pop
enter
lret
mov
add
cmp
out
cwtl
test
stc
decl
xor
movsb
cmpsb
inc
push
repnz
popa
add
out
lea
sub
push
cld
rcll
hlt
jecxz
jg
adc
adc
fdivs
fcoml
mov
push
add
mov
cmp
sbb
add
jecxz
add
fxch
out
add
or
sub
and
clc
jae
scas
enter
gs
pop
sbb
sbb
and
cli
sbb
cmc
aas
stc
filds
inc
add
mov
or
aad
push
push
movsl
add
test
shrb
fdivrl
out
add
sti
mov
cwtl
sub
and
push
jge
inc
push
inc
cmp
movl
xor
cmp
test
cmc
pop
call
jnp
jo
pusha
ss
or
push
aaa
xchg
push
dec
outsb
lods
xor
pusha
add
out
push
xchg
loopne
add
xchg
andb
push
xchg
adcl
in
into
jns
pop
arpl
sub
pop
test
adc
dec
test
mov
xchg
fmull
andb
call
lds
cmp
jl,pt
adc
out
push
int3
mov
xor
pop
rol
sbb
in
push
out
jb
pusha
out
inc
pop
or
aam
add
pop
pop
inc
cmp
cmp
push
shll
ret
shll
sar
sub
outsl
push
jne
lret
push
daa
cltd
pusha
repz
add
lret
add
jg
xchg
add
into
dec
cmp
add
cmp
cli
cmpsb
mov
idivb
test
fiaddl
fmuls
rolb
popf
cmp
es
inc
cltd
dec
hlt
mov
ljmp
sbb
movsl
shll
add
gs
add
pop
mov
add
dec
pusha
inc
imul
add
pop
jg
in
faddl
loop
adc
ss
add
xchg
xchg
nop
dec
mov
stos
mov
int3
pop
les
sahf
jno
add
ficoml
xlat
sbb
fwait
or
adcb
add
cmp
adc
je
add
std
add
ficompl
mov
add
mov
stos
cmpsl
mov
mov
xchg
mov
fdivs
pusha
int
lret
xchg
scas
xor
push
cwtl
push
jo
fistps
sti
push
js
lret
mov
outsl
adc
outsb
loopne
nop
add
in
xchg
jl
mov
push
insl
dec
adc
or
sarb
out
and
jo
es
add
xchg
inc
mov
shll
push
test
dec
nop
adc
xor
and
mov
sarl
adcl
adc
lret
bound
cmp
push
sbb
cld
sbb
push
repnz
scas
sub
xchg
push
mov
sbb
and
pop
inc
pushf
xchg
out
add
cmc
mov
fsubrp
mov
add
sub
mov
add
or
jbe
mov
cwtl
sub
fsubr
scas
push
dec
pushf
stc
in
xchg
pop
out
fdivr
shlb
xchg
enter
jno
adc
ret
mov
mov
mov
mov
mov
dec
xchg
push
out
gs
icebp
int3
inc
add
add
sbbb
xor
push
mov
push
lea
inc
jne
add
xchg
and
fs
in
jb
cmp
and
or
out
cli
lods
cmp
inc
addb
mov
sbb
mov
cmp
inc
enter
cwtl
cld
jle
mov
cmp
push
movsb
int3
lock
jbe
pop
cmp
pop
or
lret
sbb
mov
daa
es
repz
mov
jge
add
ja
lret
call
out
orl
fs
icebp
stc
clc
enter
mov
xchg
or
mov
or
call
inc
sub
lock
add
movb
pop
pop
cmp
adc
mov
lock
lahf
xchg
lods
stos
inc
cld
dec
movl
daa
iret
call
sti
push
sbb
cmc
lock
sub
cmp
movsb
sbb
xchg
or
dec
cltd
xchg
add
int3
or
add
mov
loope
scas
in
addb
cwtl
sub
mov
ja
cmp
stos
dec
shrb
es
sbb
pop
push
sub
repnz
sbb
mov
out
dec
cltd
jmp
sbb
imul
add
xorb
push
jne
out
xlat
add
pop
ss
or
clc
sub
imul
push
jnp
sub
or
out
insl
push
bound
jge
ret
push
ret
jmp
cmp
or
add
mov
add
in
inc
and
pop
sub
loopne
cmpsl
cld
add
xor
test
mov
lret
cmp
rolb
add
inc
inc
push
mov
pop
or
add
les
adc
mov
lcall
daa
roll
lods
cmp
and
mov
lcall
js
add
push
mov
rclb
sbb
leave
sbb
lahf
lret
dec
add
in
hlt
pusha
cwtl
nop
or
adc
insl
andb
add
and
mov
dec
arpl
jae
add
sti
add
add
dec
and
rcrl
dec
cmp
pop
dec
pop
mov
mov
sbb
pop
into
adc
push
inc
pop
push
sbb
add
std
shl
xchg
pop
pop
es
lcall
call
or
cmpsl
add
xor
mov
pop
push
add
neg
mov
jno
mov
repnz
dec
mov
pusha
pop
fsub
aam
cld
mov
mov
inc
shlb
scas
mov
jl
insl
mov
pusha
pop
in
fwait
addr16
mov
and
cmp
mov
fiaddl
cmpsb
jne
adc
repnz
push
or
xor
mov
add
xchg
popf
push
mov
out
nop
cmpsb
scas
ja
xor
mov
add
cmp
push
adc
in
ljmp
popa
and
add
jmp
jmp
pop
icebp
imul
rep
js
pop
scas
inc
mov
pop
mov
aad
and
mov
int
dec
mov
mov
enter
add
and
sub
shll
jo
loope
pop
ja
sub
lahf
cmc
inc
popf
dec
or
sub
out
xlat
fbld
out
out
cltd
push
sub
inc
shlb
jne
ret
lfs
jle
mov
dec
push
je
cltd
mov
lods
js
add
sub
mov
add
mov
jmp
lcall
sub
ficomps
clc
add
cltd
pop
fldenv
mov
aaa
stc
add
lret
icebp
or
mov
out
jle
jns
adc
dec
xorl
push
xchg
mov
cmp
fistl
or
fistpll
xor
repz
pop
repnz
cmpsb
insl
or
ret
mov
jne
dec
push
jbe
cmp
or
lcall
sub
inc
xor
jecxz
add
xchg
setbe
sub
cld
sbb
adc
cwtl
loopne
loopne
pop
pop
icebp
sar
xor
popa
jns
mov
ret
popl
ja
mov
repnz
push
add
inc
lds
addb
arpl
sbb
in
bound
dec
fnsetpm(287
add
popa
or
icebp
mov
pop
aam
paddb
dec
sub
fwait
or
lahf
inc
xchg
fldl
call
or
pop
pusha
pusha
shr
ja
add
push
lcall
aad
xchg
test
aaa
add
pop
in
push
mov
jo
inc
add
dec
scas
cmpb
sbb
fnsave
cs
or
lods
add
shrb
xor
mov
test
cmpsl
inc
sub
sub
scas
add
sbb
sbbb
fcoml
in
mov
mov
mov
push
xor
jmp
add
sbb
cld
mov
dec
or
push
pusha
sahf
add
add
mov
xorb
sbb
sub
test
pop
jnp
out
push
cmp
paddsb
pop
fwait
iret
in
popa
inc
les
mov
jmp
xchg
mov
sbbb
xor
cmp
cmp
dec
outsl
adc
shrl
mov
addr16
ss
push
rorb
jo
adc
cmp
cs
sarb
movsb
lods
in
mov
fimuls
dec
pop
cmp
xchg
roll
dec
add
sbb
cmp
ret
xor
roll
pop
addl
xor
int
jp
sbb
adc
jbe
push
sarl
incl
pop
lret
test
test
xchg
add
loop
pushf
mov
cmpsl
add
xor
stos
adc
inc
fldl
ret
mov
xlat
add
dec
popa
or
xor
scas
enter
sbb
pop
lods
shlb
mov
nop
add
push
stc
jbe
push
dec
cmc
enter
test
add
ljmp
push
popf
in
push
lock
and
outsl
inc
rdpmc
push
adc
sbbl
push
pop
and
test
push
xchg
sub
xchg
sub
add
mov
dec
dec
daa
adc
pop
lcall
fdivrl
mov
inc
iret
mov
and
mov
mov
notb
mov
xchg
mov
sbb
lcall
xchg
js
add
push
xchg
push
xor
jno
add
mov
sub
fdivr
add
call
pop
pusha
jbe
inc
inc
cmc
push
dec
sbb
add
es
add
fcoml
cmc
inc
inc
sahf
add
xchg
xchg
mov
loop
jge
add
sub
sarb
cmc
out
add
daa
js
cs
fdivl
add
cmp
addl
add
pop
mov
stc
inc
jb
xchg
subb
add
mov
xor
mov
andb
or
cmp
jnp
lods
int3
sbb
int3
or
xor
and
pop
test
in
enter
orb
sub
mov
stos
loopne
jl
pushf
loope
mov
add
pusha
sub
mov
sbb
fldenv
and
pop
mov
dec
push
xchg
pop
dec
ds
in
inc
nop
sub
adc
xlat
aam
addl
push
inc
insl
jg
or
jne
test
push
pop
sbb
add
int3
insl
pop
js
rolb
jmp
xor
mov
push
jl
popa
dec
push
aam
hlt
cli
jp
add
xchg
dec
mov
fistpl
inc
gs
repnz
or
out
or
sub
cld
cwtl
aam
imull
shlb
lods
sub
push
arpl
enter
sub
sbb
ljmp
test
add
mov
test
cwtl
test
movl
icebp
js
pop
std
daa
xorb
jo
pop
xor
pop
ror
xor
inc
dec
arpl
push
mov
test
adc
fucom
fcoml
pop
or
test
scas
inc
movsb
push
scas
jmp
pop
add
xchg
jne
sbb
iret
dec
jae
fimuls
push
mov
enter
aaa
iret
and
jns
pop
pop
xor
mov
addl
add
and
and
jl
cmpsl
xorb
xchg
aas
dec
scas
mov
or
frstor
sub
lds
scas
je
pushf
enter
out
jo
push
bound
jmp
or
dec
rorb
jo
push
jns
cs
sarb
mov
cltd
mov
ljmp
inc
jmp
sbb
nop
shl
add
mov
inc
sub
out
xor
push
pop
mov
cmc
cmp
dec
sbbl
xchg
cmp
out
add
test
dec
iret
add
in
and
jge
add
js
cmp
setns
push
stos
sub
add
aas
jb
push
sbb
icebp
loope
dec
or
imul
stc
out
outsl
testb
pop
movsl
mov
xor
push
add
in
in
jecxz
add
mov
pop
pop
or
je
add
sahf
rorb
mov
mov
inc
push
and
into
mov
xor
inc
pop
push
cmp
inc
mov
sti
arpl
cmp
mov
jmp
nop
xchg
call
ja
add
cmc
ret
ss
inc
mov
repnz
pop
rolb
and
shlb
fists
xrelease
add
mov
xor
lea
mov
jns
mov
mov
push
movd
push
and
xor
pop
xchg
adc
jne
and
lock
out
jmp
loopne
test
out
lods
popa
je
je
or
push
inc
in
fadds
add
adcl
je
add
jmp
in
lock
sbb
sbb
add
je
sub
dec
mov
push
pop
in
test
mov
mov
inc
add
into
or
mov
fcomi
add
inc
in
xor
cmp
pop
lret
sarl
push
bound
cmpsl
call
pusha
into
xor
int3
cmp
dec
insb
add
push
adc
imul
add
stos
in
pop
jp
push
sbb
pop
push
sbb
cmp
or
int
pop
arpl
out
and
in
pop
and
jno
lods
add
pop
mov
add
cli
out
sub
fdivs
sbb
cltd
cmp
fwait
lods
sub
add
arpl
sti
xor
enter
mov
lock
scas
test
xor
test
movsb
pop
imul
wrmsr
notb
int3
pusha
arpl
mov
push
adc
cmp
jno
xor
mov
xchg
dec
loopne
jge
repnz
jle
add
addr16
sub
std
jg
movl
or
xor
fsubs
inc
stos
fisttps
xor
and
xor
data16
gs
add
add
imul
cmp
xchg
lret
je
inc
fs
xlat
stos
rclb
jg
adc
jl
add
iret
popa
insb
jno
xlat
pop
loop
add
incb
and
mov
xor
lods
out
inc
wbinvd
pusha
cwtl
and
dec
stc
cmp
das
add
xchg
push
pop
nop
sub
push
mov
das
sbb
jns
sbb
pop
cwtl
pop
sub
push
inc
dec
xor
mov
pop
pusha
fsts
addr16
inc
fdivrs
pusha
mov
and
fs
mov
xchg
mov
cli
ficomps
add
or
daa
movsl
or
xor
sahf
fdivrs
push
cltd
adc
adc
fldl
in
fisubs
cmp
ss
cltd
imul
push
add
push
sub
jl
leave
or
and
sub
ret
lahf
scas
inc
push
test
insl
add
fwait
popf
push
mov
dec
out
mov
fldcw
insb
andb
add
lret
sbbl
jbe
cmp
gs
and
push
dec
xor
mov
mov
inc
ljmp
popa
test
jmp
in
add
dec
aas
adc
pop
arpl
xor
add
data16
stos
push
add
inc
rcrl
or
cli
xor
add
mov
lock
insb
jge
leave
fwait
cwtl
mov
adc
cmp
mov
cmpsb
pop
hlt
mov
ja
out
ds
or
nop
in
inc
inc
sbb
mov
or
add
sub
mov
jg
call
jno
fmulp
pop
and
shll
je
mov
imul
dec
push
mov
dec
mov
and
inc
dec
cwtl
fwait
or
cltd
inc
jmp
xchg
idiv
test
adc
pop
insb
xor
call
popf
mov
adc
inc
insb
adc
xchg
or
and
adc
nop
lods
ljmp
push
inc
jnp
xchg
mov
xchg
sbb
xor
xor
add
jmp
pop
loope
fildl
loop
lret
add
cmc
jne
test
lock
or
add
mov
xor
add
lods
cmp
add
pop
adc
sti
test
loopne
sbb
imul
add
xchg
mov
mov
mov
aam
inc
sub
loopne
gs
lds
adc
sub
test
inc
xchg
xlat
sbb
jecxz
mov
mov
insl
sarb
push
ds
adc
and
lock
xor
mov
scas
inc
jle
xor
sbb
or
push
or
dec
add
addr16
ficompl
dec
insb
daa
or
addb
or
cwtl
sbb
mov
cld
js
stos
je
adc
or
add
insb
mov
addr16
mov
adc
jo
rolb
jg
add
add
mov
call
pop
nop
cmp
xchg
push
mov
pop
cltd
cmp
pop
subb
push
rolb
jb
ss
cltd
inc
clc
and
adc
add
jp
roll
cmp
hlt
int3
lock
push
shll
shll
or
jo
gs
pop
sub
jmp
aam
popa
add
lds
mov
or
pop
mov
dec
pushf
add
jno
xchg
sbb
lea
jecxz
mov
push
sub
jo
rclb
xchg
insb
sbb
xchg
je
fildl
or
in
sub
push
sti
jno
mov
arpl
dec
push
sbb
sbb
add
lret
jmp
in
mov
mov
insl
mov
cltd
push
loopne
adc
mov
pushf
mov
xor
adc
pop
mov
add
sbb
push
sub
das
addr16
faddl
xchg
sbb
pop
outsl
xchg
push
or
call
repz
sub
les
and
xor
adc
sub
add
loop
clc
mov
ret
dec
push
les
fidivs
inc
lcall
int
out
mov
add
inc
add
cmp
movb
jge
mov
xchg
and
sbb
inc
jg
add
push
mov
adc
call
cmp
in
out
adc
nop
mov
push
sub
cmp
mov
inc
mov
scas
xchg
mov
xchg
les
adc
fstpt
mov
enter
mov
add
mov
and
jae
lret
mov
lcall
push
add
cld
and
pop
sub
push
shrb
and
xchg
add
fs
sub
mov
xor
lds
subb
imul
int3
pusha
lret
shl
xorb
adc
sbb
mov
enter
cmp
dec
sbb
mov
pop
add
jp
aam
xchg
adc
xchg
push
fnsave
or
xchg
nop
ja
adc
xor
add
pop
incl
popa
jl
sub
mov
sub
ror
xchg
xchg
xchg
dec
call
andl
lret
or
int3
or
pop
dec
mov
mov
push
test
xchg
ficompl
and
sub
addr16
xchg
add
sub
xchg
addb
mov
sbb
adc
andb
cwtl
mov
mov
lcall
hlt
add
stos
sahf
inc
sub
movsl
add
lcall
jl
add
shrl
dec
fs
pusha
testb
loopne
pusha
in
sbb
xchg
dec
cld
add
inc
sbb
fsubs
mov
jns
sub
adc
enter
sbb
sarb
inc
insb
fucom
shr
outsl
insb
add
std
xor
jno
shlb
dec
cwtl
fiadds
pop
sub
iret
xchg
aad
adc
fdivl
mov
mov
add
int3
push
cmpsb
or
xor
fs
inc
test
clc
push
fstl
push
mov
imul
fadd
cmp
or
rcrb
icebp
pop
mov
rcrl
mov
push
int3
jecxz
and
pop
enter
add
call
sbb
fistps
ja
pop
inc
or
sub
pop
test
xor
add
xlat
fs
insb
popf
pushf
lods
xchg
cltd
sub
cmp
daa
addb
sub
loopne
leave
test
xor
cmp
test
add
mov
insb
add
jmp
push
cli
jno
dec
add
jp
sbb
or
lahf
or
stos
jmp
push
and
xor
movsb
cs
inc
add
pushf
popf
cmp
shll
lods
out
es
jae
adc
mov
les
add
fdivs
add
pop
jmp
and
mov
xchg
inc
rclb
sub
xor
dec
mov
cmpsl
cmp
std
mov
or
loopne
les
dec
inc
mov
or
les
out
cs
fscale
add
call
cmp
lcall
push
push
les
sbb
int
or
daa
mov
cmp
xchg
sbb
lret
fcoms
scas
pop
outsb
mov
sarb
aam
loope
shlb
stc
cmp
notb
adc
jecxz
mov
or
test
and
sub
mov
pop
sbb
adc
push
jmp
ret
leave
or
xor
mov
pusha
popa
dec
ss
pop
jl
jns
sub
stc
add
int
ds
pop
cmp
mov
and
or
jg
dec
inc
test
mov
out
dec
push
or
push
sbb
vpunpckhbw
std
inc
shll
xor
dec
mov
mov
std
add
imul
mov
jp
xchg
and
add
xchg
pop
sarb
or
fbld
inc
orb
shll
cmp
inc
out
test
jno
clc
rorb
xchg
push
add
xor
lea
pusha
shll
psubusb
loope
xor
inc
mov
xor
and
ds
loop
mov
push
fs
adc
pusha
mov
dec
aas
nop
call
jo
add
faddl
add
mov
jbe
cmp
outsl
add
and
pop
cmp
xor
lret
xor
and
inc
addb
ja
nop
shrb
mov
insl
sbb
sbbb
sub
mov
add
jno
sub
jo
xchg
sbb
pusha
test
lcall
mov
in
inc
push
mov
add
insb
pop
loopne
sbb
inc
dec
ficomps
jle
stc
push
pop
mul
xor
xchg
ror
mov
repnz
mov
push
mov
inc
insl
jmp
push
psllq
mov
and
jbe
push
sbb
mov
mov
mov
push
xor
push
push
insl
dec
jo
add
ljmp
push
pop
test
js
das
xlat
xchg
mov
subb
add
fidivrs
stc
mov
aam
jle
aam
clc
add
mov
and
pushf
lcall
add
iret
mov
das
insb
cld
or
gs
mull
in
pop
gs
lea
icebp
push
pop
and
mov
inc
xchg
addr16
vpmulhuw
push
rolb
or
repnz
pop
into
sub
shll
lcall
jno
cwtl
mov
push
and
push
sarl
xchg
cmpb
push
imull
xchg
add
or
push
lock
sti
and
xor
arpl
sub
test
sbb
fadds
pushf
mov
cmpl
js
or
pop
imul
push
push
rclb
push
enter
mov
ficompl
push
rcrb
sbb
aas
and
insl
call
call
dec
xchg
xchg
adc
xchg
rclb
lods
dec
aas
cmp
cmp
sbb
mov
add
jbe
pop
push
js
out
push
sub
push
xchg
cmp
fcmove
mov
cmp
add
pop
and
out
mov
js
loop
jl
mov
negb
loope
popf
adc
out
sti
sub
push
adcb
psubsw
rorb
sub
pusha
outsb
dec
andb
or
daa
and
lods
mov
nop
mov
push
cmp
xchg
xchg
add
inc
inc
jo
dec
lret
inc
roll
lret
pop
mov
cltd
jb
dec
mov
xlat
push
stos
imul
lock
mov
add
insb
sbb
push
and
push
mov
gs
repnz
daa
push
mov
insb
sbb
xchg
add
rorl
xchg
dec
popa
out
adc
cmpb
add
xchg
and
stos
filds
cmp
and
cmp
mov
push
addr16
shll
mov
mov
add
mov
adc
sub
xchg
cmpsb
dec
add
inc
mov
xor
dec
fwait
mov
sbb
push
lahf
jns
sarb
pop
jge
loopne
cs
mov
xor
mov
cmpsb
out
popf
push
push
mov
test
xchg
xor
enter
in
push
jg
mov
inc
test
lret
xor
lods
pop
out
data16
ret
and
les
xor
popl
add
mov
fucomp
cwtl
xor
pop
movsl
popa
jle
jl
lcall
cmc
push
pop
jge
push
and
mov
mov
sub
mov
add
scas
shlb
mov
xor
sub
wrmsr
xchg
adc
dec
rcll
mov
hlt
and
rcrl
in
cmp
scas
cli
jmp
xchg
lds
stos
adc
mov
leave
pop
jge
xchg
lret
sub
mov
loop
sub
inc
push
das
addr16
dec
sub
sub
jl
cmp
clc
mov
ret
cmp
repz
cmp
push
push
jg
scas
xor
adc
cmp
loope
pop
dec
dec
fmull
ror
adc
adc
lds
gs
mov
add
pop
inc
push
push
repz
push
jl
scas
mov
mov
sub
cmp
faddl
je
in
mov
adc
sub
insb
into
sbb
pop
insl
fs
imul
inc
movsb
mov
daa
data16
add
in
jno
hlt
mov
xchg
or
rcrb
sub
pop
mov
sub
mov
push
add
cwtl
insb
pop
popl
lock
les
pop
dec
xchg
int3
dec
lea
jno
push
in
pop
add
out
sub
xchg
cltd
sahf
add
out
sbb
mov
fwait
mov
inc
mov
out
mov
sub
inc
xor
sub
fprem
sbb
add
es
clc
hlt
sbbl
in
fbld
mov
adc
dec
dec
loopne
mov
test
mov
out
inc
ds
mov
jns
mov
adc
adc
jle
inc
adc
cmp
popa
inc
push
adc
or
dec
jb
rcll
push
icebp
into
xchg
or
add
loop
call
insb
cmpl
ret
jg
jbe
je
sbb
cmp
fimull
mov
sbb
pop
test
inc
stc
mov
ret
pop
rolb
push
pop
or
insb
or
sub
xor
rorb
push
movsb
dec
mov
pop
mov
and
addb
fs
sahf
lcall
lds
cwtl
mov
inc
and
mov
jmp
filds
mov
je
pop
and
shlb
aam
adc
punpcklbw
ret
jo
cmp
in
and
out
in
mov
inc
xorb
or
repz
jno
jnp
pusha
arpl
add
cmp
add
adc
scas
lret
push
arpl
add
cmpsb
aaa
stc
dec
sbb
pusha
mov
xor
fstpt
outsl
shrl
pushf
cltd
pop
xchg
mov
push
adc
sahf
mov
and
adc
popf
sbb
push
stos
das
lock
insl
roll
mov
shlb
push
lahf
mov
mov
adc
lret
ja
rcrb
out
inc
jb
add
jecxz
decb
jns
cmp
pusha
mov
pusha
inc
pusha
repz
into
ljmp
sbb
sbb
mov
push
push
mov
dec
in
jge
sub
or
rcrl
or
rol
xor
inc
lahf
orb
push
adc
enter
clc
xor
lcall
mov
call
cmp
add
dec
enter
ss
or
and
daa
mov
and
jmp
cmpsl
jo
das
mov
add
int3
aas
stos
fisubl
mov
push
or
jl
fsubrs
inc
push
test
jg
inc
cmc
out
and
add
out
fucomip
fadd
popa
xchg
jmp
int3
mov
es
repz
bound
shl
and
push
mov
pop
ret
int3
rorl
push
add
push
das
push
xor
mov
ds
lea
int3
loope
xchg
or
pop
xchg
loope
fldln2
inc
inc
fcompl
xor
dec
mov
pusha
sub
rolb
adc
daa
test
js
call
xchg
or
jl
cmp
and
sub
add
test
jno
dec
and
xchg
adc
jae
pop
addr16
xchg
jbe
cmp
shl
mov
lahf
adc
cmp
add
cmp
out
sbb
adc
mov
sbbb
ds
js
mov
les
jno
mov
sbb
pushf
scas
mov
in
leave
adc
mov
inc
ja
pop
leave
jp
add
push
push
jne
lea
xchg
in
mov
mov
testb
add
pop
test
insb
lcall
lds
shlb
pop
lret
add
lret
fsubs
ret
dec
imul
mov
les
mov
shrb
sbb
out
out
in
xchg
out
or
mov
add
inc
movsb
bound
adc
push
mov
rolb
int3
xor
sbb
popa
inc
fldl
repz
adc
sub
push
mov
push
mov
cmpsb
das
aam
push
lock
mov
in
cmpl
mov
mov
xchg
rclb
mov
add
add
jl
lock
mov
stc
add
mov
mov
xor
gs
xchg
dec
sbb
inc
sub
mov
into
mov
add
lock
sarb
daa
arpl
jo
mov
pusha
mov
or
cmp
mov
cmp
enter
adc
mov
add
sub
mov
je
add
out
add
fdivr
adc
cld
add
lret
sbb
les
adc
xorb
or
pop
push
les
hlt
fmulp
mov
mov
or
sar
mov
xchg
xlat
add
cltd
pop
in
insb
pop
lock
insl
loopne
inc
lods
les
dec
repz
push
add
int3
add
or
cmp
push
enter
in
scas
mov
and
push
in
inc
in
sbb
mov
add
aas
lock
dec
outsb
or
xor
movsb
cltd
out
jmp
enter
insl
pop
push
mov
nop
cli
dec
je
inc
sbb
sbb
mov
or
cwtl
inc
sbb
dec
add
mov
adc
jl
pop
sbb
add
jnp
push
jo
in
jbe
enter
loopnew
adcl
pusha
pminub
push
jo
stos
xchg
fldl
idivb
ret
loop
repnz
cld
addr16
and
dec
add
call
xchg
rolb
pop
lea
imul
push
fnsave
lahf
dec
out
dec
jo
add
or
mov
cli
adc
test
mov
dec
push
roll
adc
pop
add
pop
ljmp
xchg
int
add
mov
mov
pop
or
and
mov
pop
shll
mov
adc
add
aas
xor
dec
sbb
push
rorb
or
mov
lods
add
pminub
cmp
push
dec
ja
lods
or
mov
mov
nop
cli
pop
es
cmp
sub
pop
xchg
stos
andb
or
enter
mov
xorl
mov
mov
inc
imul
pop
stos
jmp
cltd
jl
adc
cs
or
mov
add
inc
jo
repnz
jmp
xchg
push
or
dec
add
repnz
cmp
cld
sbb
mov
rcrb
sub
data16
xchg
out
dec
add
mov
cld
inc
add
mov
or
add
pusha
jae
push
mov
es
adc
mov
and
push
or
aam
push
push
ja,pn
xor
fcoml
stc
add
call
sub
push
into
cmc
mov
fs
mov
or
and
idiv
mov
outsl
lock
add
es
sahf
adc
pop
adc
outsl
aas
scas
mov
cmp
jo
ret
shlb
loope
adc
add
xlat
xor
es
scas
push
test
xor
pushf
xor
cltd
dec
xor
adc
add
in
insb
xchg
or
sbb
hlt
add
out
mov
test
movsl
add
bound
adc
fmull
pop
fldenv
fwait
dec
add
push
les
mov
cmp
les
jge
out
nop
jmp
notl
add
adc
push
push
push
mov
jns
add
scas
dec
int3
mov
dec
mov
xchg
fucompp
clc
inc
adc
arpl
add
outsb
push
shlb
pop
mov
lock
and
xor
loop
jo
mov
mov
pusha
push
add
push
mov
add
aad
pop
sbb
sub
mov
or
mov
pusha
xchg
jbe
add
mov
push
inc
push
inc
and
jle
add
inc
int3
loopne
inc
sbb
mov
test
sarb
xor
and
je
xchg
xchg
mov
ss
imul
seto
dec
add
rclb
in
sbb
adc
xchg
adc
testl
mov
add
mov
add
mov
stc
out
or
mov
sbb
outsl
sub
and
popa
push
add
outsb
dec
test
mov
stos
std
inc
mov
cmp
adc
push
mov
hlt
inc
ja
mov
mov
add
add
test
push
iret
lahf
sub
adc
fs
sbb
or
mov
sbb
lret
paddb
cmp
jo
sub
mov
nop
add
mov
cmp
adc
stc
mov
inc
jno
js
lea
xor
insl
mov
dec
inc
jo
xchg
mov
test
stc
pushl
ss
clc
adc
enter
pop
loope
faddl
repnz
add
jge
dec
inc
repnz
loopne
cmpsb
notb
inc
push
loop
lds
xor
aaa
js
ljmp
nop
fcoms
push
jns
xchg
add
add
xor
aam
scas
mov
pop
stc
xor
mov
cmp
jle
pop
adc
test
fwait
push
sbb
je
add
jl
cli
xchg
pusha
cwtl
mov
sbb
or
mov
push
pop
jo
sti
cmc
push
xor
fmuls
dec
push
mov
mov
mov
push
sbb
or
loop
push
pushf
cs
insl
add
in
push
xor
inc
add
sbb
xchg
mov
inc
add
mov
or
add
dec
int3
sbb
not
movsb
adc
push
mov
and
and
mov
sub
adc
push
dec
repnz
pushf
sub
sbb
dec
push
cs
int3
or
enter
js
add
fisubl
int
cmp
pushl
stc
xchg
adc
cmp
xchg
iret
loope
sub
add
fcmovnb
call
add
and
sbb
mov
in
ds
addl
mov
iret
add
push
dec
iret
lret
xor
add
xchg
and
add
pop
sbb
sub
xchg
or
es
ret
icebp
sahf
sub
roll
sbb
adc
stc
cld
cld
and
mov
incl
fwait
sahf
add
insl
fsts
test
mov
mov
negb
xchg
and
rclb
roll
pop
outsl
push
rcrb
xchg
sub
repnz
jmp
jp
add
ss
adc
mov
cli
inc
popf
xor
aaa
int
or
pop
stc
pushf
dec
hlt
or
loop
cmp
add
lret
add
mov
push
xchg
push
nop
js
sbb
stos
pop
xor
leave
mov
testl
add
and
sub
add
icebp
xor
ret
xor
test
bound
jae
sbb
cmp
clc
fimuls
mov
dec
add
sub
popf
fbstp
xor
out
loopne
imul
ret
lods
addl
xchg
mov
orb
int3
insb
sbb
adc
clc
xchg
add
in
stc
stos
mov
mov
push
out
or
push
sbb
dec
xorb
jno
mov
xor
fwait
lods
in
test
add
pop
rclb
loop
je
clc
scas
push
add
sahf
mov
mov
add
jne
jo
bound
shlb
les
jmp
adc
jbe
adc
sbb
dec
add
xor
mov
sahf
rcr
in
orb
xchg
add
in
add
aaa
rcl
xor
arpl
dec
clc
nop
push
rclb
test
loopne
dec
add
lret
cld
push
insb
jl
add
xor
pop
mov
jb
push
sbb
fisttpl
or
pushf
mov
int
mov
cs
in
inc
or
sti
sbb
jo
rolb
in
arpl
add
out
jg
sub
outsb
into
ficompl
stc
repnz
cmp
out
mov
adc
fst
mov
outsl
push
lods
add
fsubrs
push
xor
and
add
inc
shrb
loop
xchg
iret
xor
and
call
mov
loop
push
mov
sahf
mov
push
and
imul
cli
imul
cmp
sbb
ja
lret
out
pop
lock
adc
loope
mov
cmp
lock
shll
inc
mov
add
mov
popa
pop
testl
inc
adc
mov
fimuls
pushf
add
xor
setb
jae
cmpb
arpl
in
std
add
push
sub
dec
push
add
cmp
xchg
sbb
frstor
insb
add
push
pop
sahf
sub
pop
push
popa
inc
pop
int3
fnstcw
and
push
push
jp
loopne
sahf
in
and
dec
aaa
bound
and
jecxz
adc
jle
fidivs
or
les
inc
lock
add
xor
push
inc
bound
inc
andb
xchg
ljmp
shrb
ss
mov
jo
sbbb
insl
and
sarl
add
xor
imul
cwtl
add
cmp
inc
sbb
insb
dec
xchg
divb
nop
repnz
jns
add
out
mov
clc
dec
sub
sub
loopne
lret
inc
mov
mov
add
das
push
roll
loope
add
mov
inc
xchg
and
clc
mov
jge
mov
add
mov
daa
fwait
dec
sbb
mov
or
pop
leave
and
mov
out
add
xchg
sub
mov
lods
cmp
adc
cmp
sbb
dec
and
cmc
mov
rolb
es
fnsave
add
out
mov
out
insb
push
lods
lds
popf
xchg
xchg
push
rolb
adc
dec
push
add
ja
push
fistps
adcb
sti
adc
jbe
sbb
ret
call
sub
push
mov
lret
cmp
jb
mov
adc
outsl
repnz
xor
imul
mov
sbb
stos
into
mov
adc
testl
fstpl
mov
sbb
adc
movsl
or
in
cmpsb
sbb
pop
pusha
imul
add
jge
sub
add
lods
fdivr
jmp
iret
adc
lods
add
sbb
js
or
sub
cmp
mov
dec
cwtl
mov
mov
pushf
lret
clc
in
inc
adcb
xchg
loope
mov
js
fsubr
shr
sub
and
setno
add
out
push
cmp
in
dec
loopne
jmp
aam
sub
in
add
orb
lcall
sub
jl
jne
jo
and
icebp
fstps
mov
loop
push
addr16
lds
add
lods
stc
sub
enter
or
and
sbb
cmp
xchg
lcall
nop
test
mov
rcrb
popf
xchg
in
push
pop
insb
and
add
mov
ljmp
mov
or
add
fldl2e
dec
dec
dec
pusha
insb
dec
test
popa
adc
xchg
xor
add
ds
sahf
jnp
jp
add
and
repnz
insb
negb
mov
into
or
add
loopne
subl
jae
pop
or
test
test
xor
dec
xchg
sub
mov
in
stos
ss
mov
mov
fildl
jle
fwait
ja
add
cmp
mov
out
xchg
jl
adc
rorb
push
ja
or
mov
movsl
stc
mov
pop
fstpl
mov
flds
mov
pop
dec
sbb
push
jecxz
jp
push
push
les
add
out
xchg
mov
mov
mov
dec
int3
call
fiadds
push
rcrl
push
and
les
xchg
cld
and
wrmsr
and
sbb
push
xchg
fwait
push
or
lods
adc
add
sti
pop
das
test
adc
inc
add
ljmp
pop
pop
push
test
iret
adc
mov
sub
sar
add
mov
out
or
push
iret
cmp
repnz
push
mov
call
int
inc
add
rolb
dec
sub
add
cmpb
fisubs
inc
pop
add
cld
fcoms
pop
hlt
lods
adc
fwait
dec
cmp
adc
and
xchg
dec
and
and
sub
push
push
loop
loop
or
in
sub
inc
adc
fstpt
out
xchg
and
or
mov
push
mov
lods
inc
push
clc
data16
inc
test
jl
add
outsl
flds
xchg
jmp
mov
cwtl
xor
pop
pusha
mov
int
enter
es
std
mov
and
fcmovbe
test
test
cltd
lods
or
jb
add
mov
mov
xor
adc
in
and
inc
add
mov
out
or
jae
push
arpl
movb
lret
mov
push
and
lock
sub
decb
les
or
test
imul
jno
inc
xchg
push
add
sti
les
shlb
mov
in
sub
sbb
rorb
pop
xchg
add
inc
aam
aas
cwtl
xchg
mov
push
adc
fwait
mov
inc
inc
cmpb
mov
sbb
and
cmpsb
pop
rcrb
sub
add
sub
fldt
add
movlps
dec
rclb
neg
jnp
mov
aaa
xchg
arpl
xor
xchg
std
jb
xor
repz
add
jmp
or
sub
bound
out
iret
xchg
adc
jb
sub
test
add
push
xor
dec
clc
add
mov
cmp
xor
pop
in
adc
cs
shl
inc
stos
jns
int3
push
stc
pop
mov
dec
ss
add
dec
cli
les
fs
nop
inc
aam
sbb
f2xm1
sarb
and
add
pop
das
rcll
sbb
or
and
sub
dec
cmp
fimull
jno
inc
dec
stos
daa
adcb
add
sub
rol
rolb
wbinvd
addr16
add
call
and
movups
xor
mov
in
jge
add
pusha
cmp
sbb
cld
sub
pushf
jno
or
sub
cmp
jno
pop
les
pop
aam
adc
xor
ret
loopne
clc
notl
pop
sbb
enter
pop
lahf
ret
fstp
stc
or
fcoml
dec
jae
mov
rorb
dec
enter
push
arpl
rcrb
ds
push
fldcw
aad
or
xchg
sub
push
mov
jle
cmp
pushf
test
cli
inc
xchg
setb
icebp
cld
sbb
dec
pusha
mov
push
sub
je
je
int3
add
xor
adc
mov
and
add
sar
sbb
mov
ljmp
loopne
dec
stos
add
jnp
jp
sbb
xchg
jbe
sub
jl
stos
fadds
push
jne
inc
pushf
enter
adc
lret
das
test
push
dec
mov
fsincos
jl
dec
jb
or
sbb
shll
push
stos
push
lahf
mov
jle
or
add
xbegin
fmuls
fisubs
adc
mov
add
insl
sbbl
jbe
mov
dec
fadd
mov
ljmp
or
out
out
je
mov
sbb
push
ljmp
cwtl
mov
imull
and
or
js
ret
addr16
shr
mov
pusha
sub
add
fldt
sarb
jl
add
aaa
sub
popa
jge
and
and
or
or
push
cmp
mov
in
and
push
stc
push
int
cmc
pushf
or
sub
push
xchg
fimull
xor
insb
sbb
xor
std
xor
cltd
addr16
aam
adc
repz
and
jb
enter
out
add
pop
add
push
dec
js
sbb
negl
cmp
shrb
and
or
or
aam
adc
loop
and
jmp
adc
add
test
faddl
sbb
pusha
cld
add
jl
or
xchg
outsl
dec
idivb
push
mov
mov
adc
push
hlt
mov
xchg
xchg
sbb
shr
imulb
pop
inc
xchg
inc
xchg
fldpi
outsb
sbb
jnp
push
inc
pusha
sub
mov
and
xchg
jge
add
push
pop
shl
repnz
stc
add
dec
xchg
enter
and
sbb
or
add
pop
xor
and
data16
inc
or
hlt
test
sub
aas
les
jae
shll
enter
add
jbe
out
mov
cmp
ror
sbb
jmp
and
rclb
push
sub
shll
mov
jne
fstl
and
divl
sub
adc
mov
loop
pusha
add
pop
les
inc
or
mov
mov
shl
hlt
add
add
in
data16
int
cwtl
in
dec
xor
xchg
adcl
mul
dec
and
ret
mov
in
test
pop
movsb
test
inc
xchg
es
shll
enter
jmp
sub
sub
mov
out
sbb
add
or
ljmp
xor
add
or
push
push
int3
xchg
inc
xchg
xchg
push
jmp
inc
add
ja
fildl
and
test
push
sbb
sbb
mov
imul
in
cmp
dec
sub
sub
fsub
add
insl
out
sbbl
daa
push
xchg
xchg
xchg
xchg
aaa
sub
stos
enter
mov
movsl
nop
out
jno
loop
pop
cmp
inc
pop
sub
sar
scas
jge
mov
pusha
adc
pop
sbb
sbb
add
popf
bound
incb
jns
or
out
mov
ret
jo
str
mov
adc
and
jp
and
jecxz
add
pop
movsb
cmp
es
leave
or
adc
pop
jo
jnp
jmp
cli
ss
and
sbb
inc
jecxz
mov
jl
or
mov
fbld
add
lret
in
pop
inc
jnp
jno
push
js
dec
cli
rclb
inc
xchg
inc
jbe
int3
add
popf
dec
xor
jmp
ficoms
in
loope
sub
xchg
in
cmpb
push
push
stos
aaa
in
mov
mov
jne
xor
push
inc
sbb
cmp
or
jl
adc
sbb
jnp
sbb
and
ret
bound
sar
js
addb
xchg
jo
mov
add
push
adc
xor
lret
add
cmpsb
test
js
or
mov
jmp
cwtl
cmp
call
outsl
sub
mov
add
insl
add
clc
mov
lock
add
pop
push
and
jbe
inc
ljmp
adc
or
inc
add
cmp
in
cmp
pop
push
test
fistl
add
leave
mov
lock
adc
dec
push
jl
loopne
cs
and
sub
jl
loope
adc
mov
or
int
xor
cmp
jns
pop
cld
add
adc
cmp
xorl
or
inc
pop
testl
imul
lret
enter
fs
push
push
xchg
sub
add
pop
inc
jo
mov
add
xlat
outsl
std
xchg
and
sub
ret
ss
xchg
xchg
xor
sbb
add
inc
mov
out
pop
psubw
xchg
inc
dec
jb
clc
outsl
mov
jecxz
jmp
test
out
push
cs
int
and
adc
adc
out
mov
das
fsubrl
lock
or
jno
dec
adcb
and
sub
imul
mov
je
out
and
fcomps
adc
out
femms
mov
mov
movsl
out
cs
sti
add
call
mov
xchg
pop
cmp
hlt
gs
mov
aam
in
fisubl
rclb
dec
xchg
dec
cmp
and
add
movsb
xchg
cmp
fmull
add
pusha
mov
xchg
roll
push
and
xchg
add
xchg
clc
pop
int3
push
pop
les
fs
mov
dec
jle
adc
sbb
std
outsl
adc
or
add
pop
ror
push
leave
xorb
aam
add
and
lods
xchg
xchg
add
jae
stc
adc
ret
xor
les
sub
leave
jmp
mov
sub
mov
cwtl
test
call
xchg
jmp
pop
rclb
rcrl
lods
mov
mov
pop
lea
lcall
call
aam
sahf
fs
or
add
shrl
mov
ljmp
and
in
pushf
notl
hlt
insb
insl
push
push
inc
xchg
shrb
outsl
and
les
popa
add
int3
and
pushf
je
sbb
enter
rorl
das
jo
ds
rclb
lea
xor
sar
test
and
fs
and
pop
inc
mov
adc
inc
mov
roll
jge
inc
sbb
fld
mov
or
je
sbb
pop
dec
add
pushf
jp
mov
pop
dec
mov
dec
test
jno
ficoml
and
mov
rclb
push
insl
inc
xchg
sub
add
imull
rcrb
inc
call
rolb
sbb
xor
loop
sub
mov
mov
jo
sbb
jnp
cmp
sub
int3
stc
test
dec
gs
sbb
in
loopne
dec
pop
sbb
mov
sbb
push
xchg
jg
push
data16
cs
cmp
mov
loopne
adc
add
repnz
mov
push
sbb
decb
pusha
test
inc
or
mov
sbb
pop
cld
out
and
pop
adc
ljmp
adcb
push
or
nop
dec
and
shrb
or
xchg
fdivrl
sbb
jg
andb
into
jp
jne
adc
les
mov
pop
incb
fisubrl
adc
inc
sbb
add
pop
clc
push
add
test
rorb
jae
sub
push
and
pusha
xchg
jmp
int
pop
push
ret
add
cld
fsubs
orb
std
pop
nop
adcl
ret
inc
mov
js
rolb
or
repz
mov
ljmp
mov
js
jnp
mov
stos
add
push
out
testb
sub
mov
add
adc
clc
test
xor
xchg
inc
aam
and
pop
or
lods
sbb
jle
addb
or
xchg
in
imul
pushf
jnp
adcb
jns
pop
and
xor
mov
pop
mov
add
dec
mov
sahf
xor
cmpsb
adc
mov
cmpb
shl
mov
push
inc
mov
adc
rcll
call
pusha
adc
inc
xor
popa
int3
shlb
les
loopne
mov
ret
inc
pop
stc
divb
cmp
add
xchg
dec
push
xlat
popf
mov
cli
xchg
faddl
daa
loope
sub
aas
popa
cmc
xor
inc
xor
sbb
fs
test
js
pushf
adc
mov
sbb
bound
cmpsb
push
inc
popf
mov
clc
sub
int3
aas
imul
sub
in
inc
in
pop
mov
mov
push
xchg
bound
lret
sahf
sbb
and
test
stos
and
pusha
fcomps
sbb
mov
push
popf
pop
cmp
dec
pop
xor
shlb
inc
or
inc
adc
jnp
push
sti
in
jmp
loope
loopne
ljmp
pop
xlat
mov
rol
lret
repz
jmp
dec
vpcomb
add
sti
jp
add
add
ret
add
pop
into
popa
and
push
pushf
jns
stc
mull
cmp
dec
call
mov
add
aaa
or
mov
les
mov
pop
mov
pop
jl
cmp
fs
shrb
add
and
xor
adc
add
aam
pop
inc
inc
mov
test
jo
push
pop
lret
aam
inc
shl
or
cld
add
mov
mov
das
and
pop
nop
sub
fimull
clc
and
pop
push
outsb
sbb
sarl
imul
sub
leave
shlb
inc
lock
or
nop
mov
inc
mov
mov
push
aaa
pusha
mov
rclb
andb
dec
imul
jl
popf
lcall
add
sub
or
dec
aas
fisubrl
inc
xchg
dec
sub
add
xchg
iret
stos
fldenv
mov
add
adc
ret
in
popa
enter
daa
out
fmull
inc
lcall
incb
sub
repnz
add
das
pushf
mov
mov
xchg
test
push
clc
repnz
cs
mulb
pop
fdivrs
sbb
or
imul
xor
out
jne
push
loopne
adc
xchg
test
mov
js
xchg
fcoml
inc
bound
cld
sub
scas
loopne
je
je
les
js
mov
or
mov
dec
test
lret
cs
push
arpl
ljmp
add
mov
cmp
hlt
int3
test
addr16
jbe
xchg
add
dec
ja
mov
cmpb
fisubl
or
dec
shll
add
pop
jecxz
cld
fcom
push
lcall
sahf
and
sub
fsubl
shll
call
aas
je
mov
test
jl
dec
ret
jno
stos
rclb
cmp
or
pop
adc
and
add
add
jl
test
sbb
push
add
xor
lods
mov
lret
icebp
lods
and
inc
rol
outsl
jp
add
nop
push
and
add
pop
in
in
or
bnd
je
iret
add
mov
and
sub
adc
mov
cmpsl
shlb
sbb
or
mov
pop
lock
bound
mov
jne
pop
dec
jo
jecxz
stos
incl
movsb
bound
xor
lds
pop
mov
ds
mov
outsl
adc
aaa
sahf
enter
add
movsl
xor
loope
push
ret
cwtl
and
pop
mov
enter
add
jns
dec
jne
sub
lcall
or
repz
les
push
jne
inc
andl
mov
fs
push
js
cmpb
fcomps
int3
fs
pop
out
cmpb
imul
xchg
cmc
pop
add
and
fistpl
shlb
pusha
mov
inc
ja
repnz
movsl
inc
and
cmc
fisttpl
pop
ljmp
sbb
add
shlb
and
ss
mov
xchg
and
mov
jmp
or
je
inc
cmp
xchg
cmp
sbb
fildll
push
jnp
frstpm(287
or
test
and
rcl
or
fs
fnstsw
andb
pop
xor
in
jmp
call
pop
xchg
nop
cltd
sub
sbb
jno
int3
adcb
adc
pushf
bound
syscall
xchg
loopne
jo
xorl
jmp
sbb
js
sub
sub
icebp
push
mov
adc
cmp
pop
dec
mov
or
pop
fldl
jg
sbb
mov
rorl
inc
inc
adc
sarb
or
push
cmp
sbb
pop
pop
sbb
mov
cmp
add
cltd
mov
add
pusha
mov
dec
lods
add
xchg
mov
daa
pop
insb
bound
push
loopne
repz
push
jle
mov
pop
enter
and
mov
cmp
fiadds
mov
cmp
aam
jle
or
push
add
adc
add
icebp
sub
mov
ret
pop
out
adc
pop
dec
or
inc
add
scas
clc
adc
push
cld
add
stos
pop
jo
in
cmpsl
std
ror
sti
testb
dec
nop
in
test
out
sub
divl
fisttpl
and
ljmp
jo
cltd
aam
cmp
sub
repz
sbb
mov
mov
les
xor
lock
dec
enter
pop
stc
fisubl
rorl
enter
outsl
rorb
loope
dec
int3
push
cld
out
sarb
daa
add
test
xor
repnz
rorl
adc
jne
adc
mov
push
pop
cmpsb
shrl
mov
and
les
jp
pop
mov
int
jne
jge
out
pop
push
add
inc
sub
or
or
sarb
cwtl
dec
xchg
jnp
adc
mov
les
add
ss
add
mov
and
jo
add
mov
movsb
mov
addb
out
sub
inc
lods
cwtl
push
push
sub
stc
sub
loopne
add
jl
push
icebp
incb
jle
inc
adc
ret
and
les
xorl
in
rcrl
pusha
or
and
inc
pop
mov
stos
and
pop
pop
and
in
xor
cwtl
call
movsb
cmpsl
fisubrs
inc
adc
frstor
fmull
push
xor
mov
leave
cwtl
dec
stc
mov
mov
je
sub
mov
test
xchg
mov
pop
or
mov
push
into
add
test
adc
adc
sub
js
call
jge
sbb
dec
in
mov
adc
push
rorb
xchg
add
addb
inc
cmc
or
mov
test
pop
pop
addr16
in
xor
dec
add
push
push
ljmp
mov
les
stos
aam
mov
mov
sbb
loopne
jl
es
sub
lret
cmpsl
sarb
add
adc
mov
adc
mov
mov
jmp
repz
rcl
jns
sbb
xchg
loope
les
out
add
icebp
aad
outsl
lahf
xchg
in
movb
adc
inc
mov
jns
pop
test
cltd
inc
mov
pushf
fstpl
rcr
mov
in
data16
mov
sbb
pop
outsb
mov
ds
pop
push
xchg
add
pop
fisubs
ret
out
loopne
adc
out
rcll
dec
xchg
mov
inc
push
addl
test
dec
cmp
popf
sub
pop
aaa
mov
push
movsl
xchg
sub
mov
rclb
in
test
lods
inc
in
or
pushf
fisttpl
repnz
jb
pop
mov
hlt
fld
lods
rorl
int3
mov
jge
hlt
add
xchg
test
sub
call
xor
sbb
mov
in
add
test
mov
sub
in
mov
ljmp
add
xchg
lods
cld
mov
jns
mov
rclb
jmp
jo
inc
loopne
jae
mov
adc
loopne
cmp
and
pushf
scas
imul
xor
pusha
test
icebp
and
addb
cld
aaa
jmp
add
cltd
shrl
inc
dec
add
ljmp
out
cmpsl
sbb
push
adc
dec
lret
inc
adc
mov
call
add
jae
add
push
jnp
or
out
and
or
sub
or
and
xor
setl
xor
pushf
pop
xchg
pop
add
inc
test
loopne
pusha
dec
clc
pushf
lcall
orb
add
lea
and
iret
ljmp
sbb
cltd
and
mov
add
push
stc
es
ret
inc
mov
sarb
and
cmp
gs
stc
add
roll
jb
mov
or
fcoms
xor
ja
or
cltd
clc
repnz
add
loop
jecxz
loopne
sub
xchg
cmpsb
and
lcall
pop
mov
ds
rorb
dec
hlt
add
sub
pop
or
ret
sub
je
mov
lret
dec
sbb
shlw
pop
lods
in
xlat
sub
adc
test
jle,pn
xor
out
push
sbb
movsb
es
lock
imull
in
xchg
or
cli
inc
cmp
jns
ds
add
idivl
pop
repz
enter
and
pusha
daa
pusha
push
push
test
pop
inc
dec
dec
mov
jmp
dec
adc
mov
cmc
jae
add
call
or
jns
int3
aam
int3
pop
push
push
mov
nop
or
xchg
sub
xor
ret
add
cmp
or
test
xchg
dec
mov
add
lret
sbb
lea
add
mov
dec
adc
cmc
xor
cmp
mov
push
mov
cld
pop
or
stos
cmp
mov
and
hlt
aas
fld
popa
pushf
sub
les
ss
lret
je
add
movsb
sub
jecxz
and
test
enter
cmp
pop
adc
dec
mov
les
mov
jno
sahf
and
sar
hlt
mov
adc
sub
les
jno
bound
sub
mov
pop
pop
and
sub
mov
lods
add
iret
mov
in
lods
mov
lods
adc
test
xor
nop
jae
lock
inc
dec
loop
test
je
mov
cmp
enter
mov
test
je
add
aaa
jg
mov
mov
push
loop
xor
hlt
add
xchg
mov
jmp
pusha
push
fadds
movsl
jb
mov
rorl
sbb
scas
inc
xchg
imul
outsl
xor
test
adc
adc
outsb
in
add
lret
jl
xchg
mov
jmp
mov
dec
pusha
fldenv
pushf
data16
cmpsl
pop
xchg
int3
pop
cmp
leave
lods
inc
push
add
jl
sbbb
sbb
xor
loopne
divb
mov
enter
cmp
outsb
mov
xchg
std
pop
jo
sub
dec
andl
mov
cmc
shlb
out
sbb
into
jp
push
je
vpsrlq
sti
add
jp
mov
iret
push
enter
mov
scas
cmp
mov
cmp
xchg
shrb
xchg
repnz
xchg
mov
xchg
mov
jo
xchg
fld
les
or
in
ja
cld
xchg
fdivs
pushf
add
aam
leave
cmp
cmpl
adc
or
rcrb
mov
movsb
je
sbb
in
gs
roll
or
popf
mov
xor
adc
mov
div
cld
sub
call
mov
dec
je
inc
dec
adc
jne
jp
cwtl
add
jns
in
rclb
mov
pop
roll
in
insl
rorb
mov
shl
sbb
test
fcoml
and
adc
jmp
sbb
add
orb
jg
cmp
dec
adc
repz
outsb
sbb
pop
xchg
mov
loopne
outsl
add
add
xor
fs
cmp
mov
xorl
jno
inc
loopne
jle
inc
bound
pop
and
push
cmc
repnz
outsl
or
mov
leave
add
and
popa
mov
pop
xchg
dec
add
push
jmp
add
in
pop
loope
sbb
lods
sti
cld
sub
add
lret
std
imul
int
jbe
and
sub
mov
and
add
movsl
mov
les
add
fwait
adc
add
lea
cmp
add
icebp
call
test
sub
mov
adc
pop
sbb
jge
loopne
sbb
negb
and
pop
jae
add
dec
jbe
add
sub
xor
stc
arpl
and
and
rolb
mov
xchg
jmp
icebp
push
mov
adc
fnop
je
hlt
mov
nopl
int
dec
sti
add
push
fbstp
push
andb
sahf
adcb
inc
fsubs
add
into
gs
ds
jp
stc
sub
lods
fwait
testl
and
movsl
sbb
mov
xchg
sbb
and
xor
inc
loope
and
sub
and
mov
sbb
mov
adc
mov
and
xor
sbb
jae
jl
or
adc
xorl
sub
leave
and
sbbb
jl
pusha
out
imul
cmpsb
push
stos
outsb
ds
mov
jmp
mov
dec
nop
mov
ja
bnd
stos
mov
jo
sbb
sbbb
addb
je
sub
jmp
dec
out
xchg
rol
xor
pusha
jb
int
pop
mov
push
xor
or
adc
and
push
mov
add
cmp
lock
push
inc
imul
xor
add
inc
sub
dec
add
jb
subb
cltd
imul
in
mov
mov
orb
and
addr16
add
aaa
jb
and
cmc
add
push
push
nop
cld
pop
jle
fsubl
add
sbb
fidivrs
sbb
mov
jmp
enter
test
jp
add
mov
dec
cld
inc
int
mov
add
bound
adc
jmp
add
lock
data16
pop
cmp
popa
frstor
mov
mov
add
jp
out
sbb
adcb
push
out
mov
rol
stc
push
fwait
cmpsl
sbb
pop
xchg
add
roll
es
sbb
push
lock
daa
test
jl
rcrb
xor
dec
jbe
in
xchg
dec
lea
or
nop
mov
add
dec
scas
cmp
jne
adc
push
test
addb
mov
call
aam
les
cmc
push
adc
and
sbb
addb
or
lock
jne
xchg
stos
or
shll
sbb
cmpsl
adc
push
add
dec
dec
mov
mov
add
push
inc
jle
std
mov
fcompl
imul
mov
or
xchg
sbb
repnz
out
cmp
sbb
cmpsl
mov
add
push
je
std
shrb
clc
mov
adc
test
fnstcw
sti
jno
add
je
push
loopne
xchg
dec
adc
fsubl
mov
movsl
pop
and
add
stos
cmp
push
xchg
in
xchg
xchg
and
sbb
adc
push
lahf
mov
test
dec
rclb
dec
mov
inc
push
jp
xchg
add
adc
enter
sbb
cmp
and
push
push
pop
mov
addb
mov
movsb
xchg
xor
adc
add
pop
in
pop
and
shll
xor
add
arpl
sub
sub
mov
sbbl
mov
fisubs
mov
inc
arpl
and
add
arpl
into
mov
loopne
int
add
mov
popf
push
fidivs
test
movsb
mov
fcomps
and
sbb
sbb
mov
pop
std
rclb
je
dec
jmp
repz
lods
and
int3
push
pusha
or
xor
or
daa
add
mov
dec
out
add
jbe
in
sbb
or
xchg
xchg
add
sbb
mov
scas
je
inc
icebp
add
cltd
gs
out
dec
in
jo
sub
or
ja
call
rolb
push
mov
dec
pop
inc
mov
xor
cli
add
imul
fnstenv
jbe
jp
sbb
outsb
mov
add
and
add
into
popa
in
sub
pop
or
inc
or
sub
xchg
dec
push
sub
pop
ljmp
add
mov
cmpb
daa
inc
shlb
or
lret
mov
out
push
dec
in
enter
mov
xorb
push
pop
mov
mov
flds
orb
pop
sbb
pop
in
xor
fadds
rclb
jns
mov
dec
hlt
pusha
mov
lret
std
dec
sbbb
xor
shl
xchg
out
inc
add
pop
shll
mov
add
add
gs
lea
dec
js
sbb
mov
jnp
and
xor
insb
das
and
psubw
or
xor
ror
and
lods
mov
mov
icebp
fmul
inc
enter
test
sbb
insl
and
push
add
test
test
addl
syscall
sub
adc
add
or
xchg
push
pushf
jae
mov
dec
popf
or
pop
xorb
pop
xchg
sarb
add
mov
add
inc
and
xchg
add
xchg
xchg
and
push
subb
xorl
mov
loopne
add
sbb
push
js
cmpsb
std
addb
daa
push
loopne
rcrl
pop
data16
and
adc
mov
and
ja
mov
jne
push
rcrb
mov
add
in
stc
dec
sbb
add
xchg
fldcw
fistps
add
cmp
int3
pop
xchg
popf
jbe
inc
lret
add
adc
in
mov
mov
repz
pop
or
xor
push
add
outsb
jmp
xor
xor
add
push
subb
es
fmuls
xor
mov
cwtl
mov
mov
cld
subb
mov
pushf
adcl
shrl
add
shrb
adc
shr
arpl
and
xchg
mov
jg
js
adc
mov
pushf
and
mov
mov
cmp
xor
clc
out
adc
es
loopne
fmuls
lahf
pop
mov
push
push
mov
fidivrl
mov
push
fdiv
pusha
adcl
nop
sub
bound
pop
mov
loopne
and
cmc
lcall
adc
int3
adc
movsl
mov
mov
sub
jo
out
pop
test
insl
cmc
sub
daa
jnp
ret
pop
pop
in
cmp
loopne
rorb
mov
cli
mov
pusha
int3
fisubs
push
insl
int3
add
lock
jns
sbbb
repz
adc
or
jb
inc
cmc
push
lret
pushf
aam
jne
sub
add
mov
mov
js
sbb
cmp
pop
adc
fucom
mov
jle
mov
int3
or
and
ja
lret
divb
inc
andb
or
adcb
push
cwtl
getsec
xor
dec
mov
adc
xor
sbb
cmp
movl
in
xor
setb
popa
xlat
sahf
ret
or
and
push
add
and
sbb
pop
je
mov
int
and
add
dec
inc
andb
cwtl
iret
movsl
mov
and
insl
fistpl
shl
add
pop
mov
sub
stos
sahf
test
jb
add
push
pop
jbe
mov
jle
or
cli
sbb
lret
movsb
mov
sar
sub
pushf
xor
orb
cmpsb
mov
jb
or
loope
clc
add
in
adc
add
cmpsb
xchg
mov
adc
and
inc
inc
leave
xor
jl
dec
xor
sbb
pop
std
mov
fdivs
andl
cmpsl
jnp
jo
leave
test
adc
pop
or
add
cli
imul
cmpsl
dec
dec
adc
inc
daa
movsl
push
setbe
int
sarl
sbb
xor
leave
bound
and
jbe
push
hlt
dec
les
clc
leave
add
sti
outsb
test
ss
mov
and
je
inc
dec
add
cmpb
js
push
ret
cmp
sbb
xor
xor
pusha
jbe
lret
jno
cmp
push
inc
fstl
jns
mov
add
jl
loopne
int
add
push
outsb
add
mov
or
nop
add
push
add
inc
je
call
ret
pop
adc
jl
add
cmp
xchg
dec
jp
fwait
fs
inc
mov
lock
or
adcb
cld
sbb
add
mov
inc
sbb
add
dec
shl
add
pop
xchg
dec
fcomip
jmp
cmp
jp
jns
sub
dec
push
pop
push
push
sub
fiadds
mov
xchg
hlt
mov
test
clc
rclb
inc
roll
test
pusha
push
jmp
daa
mov
jno
adc
jecxz
dec
addb
jle
in
xor
testl
xor
xchg
sarb
lock
pop
mov
ror
mov
xor
clc
nop
cmp
dec
add
xor
adc
fnsave
or
inc
sbb
fs
jbe
sub
rcrl
jp
insb
and
pusha
pop
add
sub
lock
mov
inc
add
rcrl
dec
fwait
inc
inc
pusha
data16
pop
add
cli
and
xchg
add
pop
jae
in
cmpsl
repz
mov
flds
bound
mov
and
cmp
add
add
std
movsb
push
int3
mov
out
mov
pop
in
mov
and
or
in
stc
test
push
jae
or
jl
and
dec
outsb
int3
loopne
je
dec
jp
add
jae
mov
pop
mov
cltd
xchg
lahf
xorl
mov
xor
mov
inc
sbb
aaa
inc
inc
ret
xor
cmp
xchg
cmp
icebp
repz
jno
lock
ss
fiadds
add
jns
xor
push
shrl
in
lds
in
pusha
jb
test
add
xor
mov
push
sahf
bound
inc
fldl
in
dec
sbb
mov
push
lahf
int3
add
pop
xor
adc
jo
cmp
orl
cmpsl
movsl
and
fwait
adc
push
popa
rorl
xor
mov
adcb
mov
iret
fst
inc
mov
addr16
pop
inc
leave
aaa
sub
lock
pop
or
lret
imul
jbe
ljmp
outsb
mov
sbb
jae
cmp
fsubl
fdivrl
add
dec
sub
es
pusha
ret
popa
mov
ss
and
add
repnz
dec
cs
addr16
add
pop
rorb
add
ja
xlat
sub
scas
inc
int3
cmpsl
xor
mov
mov
add
add
or
or
mov
and
sbb
sbb
push
fsts
dec
mov
and
sbb
jb
dec
xor
dec
add
mov
adc
push
test
pop
jo
fcoms
sbbb
pop
ret
shrl
lods
add
les
arpl
test
pop
ss
call
loope
shlb
xchg
xor
mov
daa
jge
in
int
rcrb
in
pop
jmp
mov
push
or
sbb
mov
mov
shll
andl
les
fcompl
pop
add
outsb
jo
pop
movsb
js
pop
or
add
enter
shrl
fwait
mov
inc
cmp
in
jmp
dec
stos
adcb
cmc
pushf
inc
jo
add
icebp
xor
sbb
fmuls
mov
sub
nop
je
out
lret
cmpsb
dec
dec
jbe
adc
es
shl
xchg
mov
adc
test
add
adc
xchg
jo
inc
fisttps
jae
mov
cmp
js
fmull
je
jg,pn
add
jp
loopne
pusha
sahf
rclb
mov
in
nop
out
mov
pop
inc
mov
rcl
sbb
pop
cmp
dec
je
rcrb
mov
pop
mov
xchg
addr16
test
jb
scas
push
sbb
mov
shrb
and
and
popf
outsb
test
ss
push
leave
pop
sub
add
lea
add
jl
sbb
leave
mov
mov
gs
mov
adc
xchg
pop
ret
roll
outsl
insb
xchg
jl
sbb
pmaxub
ret
sub
lock
sbb
pop
pusha
dec
dec
xchg
hlt
add
adcl
into
lock
shlb
inc
add
lret
lods
enter
mov
sbb
stos
rorb
cwtl
fs
push
add
fnstsw
shll
pusha
jns
fisttpll
push
inc
jnp
dec
aam
paddusb
lods
shrb
sbb
mov
jns
iret
mov
pop
add
orb
mov
mov
mov
in
jle
sbb
push
and
pop
mov
cmp
sub
inc
enter
mov
out
inc
pop
dec
xchg
lret
inc
dec
adc
jo
add
pop
aas
daa
lcall
mov
dec
rcrb
jne
dec
pop
xor
js
fldl
push
jb
in
xor
mov
jl
sbb
in
sbb
divb
cli
inc
jg
nop
push
pop
aas
add
add
push
mov
aaa
rolb
add
xor
mov
cmp
jmp
dec
sub
scas
shr
xorb
sbb
in
popa
lods
repnz
and
popf
ret
int
repz
push
aas
hlt
and
add
pop
adc
in
pop
push
add
addr16
icebp
push
dec
clc
aam
add
xor
in
mov
rolb
add
mov
pop
dec
adc
pusha
adc
sti
dec
fisttpll
mov
je
rcll
out
adc
add
mov
lcall
insb
inc
cmc
adc
incb
dec
add
and
ret
hlt
shlb
cwtl
cmpl
xchg
add
je
les
dec
mov
pop
mov
lret
sbb
sbb
or
push
inc
pusha
jns
cmp
lret
int3
mov
shll
inc
hlt
outsl
xor
cmp
mov
fldt
call
push
mov
jo
into
pop
cwtl
enter
and
push
dec
mov
sub
and
jnp
int
adc
nop
and
pop
mov
pop
xchg
push
enter
push
cld
filds
cmpsl
insl
es
lret
pushf
adc
mov
push
xchg
sbbb
add
sti
jne
stos
imul
cs
or
mov
inc
and
add
pusha
lods
mov
and
rcr
cmpsb
push
dec
mov
adc
outsb
push
inc
cltd
adc
lods
cli
push
mov
jae
and
push
mov
jo
add
cltd
adc
add
mov
pop
clc
add
push
ret
mov
mov
cld
and
test
cmp
dec
mov
add
jb
mov
mov
xchg
jae
push
cltd
int3
in
out
inc
loopne
sub
dec
shrl
cmp
sub
adc
jo
lcall
lods
fdiv
sub
inc
rcr
mov
call
aam
in
jl
push
cmp
push
and
ret
jl
sbb
mov
cmp
sbb
fnsave
das
sbb
sbb
sbb
jnp
mov
mov
out
gs
mov
jmp
fistl
dec
in
jae
lea
cs
sbbb
jp
testl
cltd
add
loopne
mov
jne
loope
pop
dec
adc
xor
and
push
imul
stc
dec
mul
shrl
fadds
or
out
fs
adc
sbb
pop
xchg
push
imul
mov
lods
push
xchg
cmp
clc
sub
jnp
or
push
call
inc
cld
or
pop
add
idivb
add
scas
ret
dec
mov
movsb
add
imul
cmp
test
sbb
mov
in
dec
shrb
ftst
jns
sbb
shrl
jo
xchg
sub
out
dec
pop
pusha
mov
mov
in
es
and
ja
adc
pop
out
and
pop
outsl
cli
popa
or
adcl
rcrl
int3
mov
or
and
dec
xchg
or
push
lds
xorl
inc
mov
test
in
fisttpl
rcll
sub
cwtl
ret
cmp
cmp
xor
xchg
pop
jbe
pop
mov
and
lcall
add
push
shl
jae
sbb
das
mov
jns
sbb
int
adcb
imul
jle
dec
inc
add
popa
shrl
mov
enter
push
insb
das
add
push
pop
enter
mov
dec
fsubrs
jle
add
sub
cmp
fadd
and
add
or
add
loopne
inc
es
hlt
mov
dec
cwtl
or
ffreep
lds
std
outsb
ss
ret
lret
cltd
imul
jl
sub
pop
cld
aaa
iret
jmp
jno
add
clc
jl
push
add
mov
mov
mov
mov
pop
inc
ret
jb
add
loope
xchg
pop
mov
es
add
pop
xor
xchg
lds
hlt
cmp
inc
xor
std
lods
cmp
scas
lock
bound
or
mov
cmp
cli
into
enter
fs
cmp
scas
dec
repz
push
gs
clc
jl
pusha
fwait
pop
xor
cmpsl
push
adc
adc
enter
pushf
out
pop
jmp
pop
cmp
xor
dec
mov
shlb
cmp
movsb
stos
or
scas
mov
add
and
push
mov
test
inc
sub
in
je
mov
push
loop
pusha
dec
scas
pusha
push
cmp
sbb
push
inc
loope
cmc
push
mov
or
je
mov
xor
enter
dec
push
in
js
insl
inc
xor
lds
pop
sub
push
adc
or
int3
lock
pop
push
hlt
cmp
and
add
int
ret
push
push
xor
and
aam
daa
subb
add
adc
lods
ffree
roll
dec
lret
xor
into
divb
out
pop
add
decl
repnz
push
or
xlat
pop
scas
inc
loop
fdivs
fldt
mov
jp
fwait
cmpsb
mov
adc
mov
aam
or
or
mov
or
mov
das
sub
leave
dec
je
loope
inc
cmp
stc
pusha
loopne
xor
sbb
les
ds
mov
lret
js
add
jb
or
cmp
mov
and
dec
faddl
addb
js
inc
xchg
cmpsl
mov
arpl
shll
mov
add
cmp
jge
jecxz
add
out
addr16
cmp
push
mov
ljmp
add
adc
jb
adc
fstpl
add
mov
mov
hlt
sub
xorl
cmpb
aam
cli
adc
dec
jae
inc
cmp
sbb
fmuls
cmp
mov
ja
xor
sbb
jmp
and
inc
loopne
sbb
in
fbstp
mov
dec
incl
add
or
inc
adcl
cmp
pop
popf
adc
test
pop
mov
shr
cmp
add
mov
jmp
sbb
test
cmp
js
or
push
int
lods
mov
xchg
or
insl
lret
push
and
cmp
jge
jno
orb
mov
inc
and
pop
cmc
das
push
and
andnps
rolb
push
cli
dec
lret
sbb
les
lods
and
lea
faddl
pusha
and
sub
mov
push
dec
xchg
dec
mov
or
sarb
mov
enter
dec
out
ret
popf
pop
fcmovnu
movsl
adc
or
pop
jb
cmc
inc
aam
xchg
adc
lds
cld
cmpb
mov
test
test
dec
cld
add
mov
or
sbb
movsl
push
psllq
iret
rcrl
pop
push
shrb
arpl
fadds
jo
xor
loope
inc
or
add
leave
les
push
sbbl
jns
jns
sbb
add
dec
jmp
sbb
push
in
cmp
push
in
iret
bound
sbb
mov
adc
les
push
in
xchg
mov
sub
imul
xorl
or
outsb
push
push
sarb
aas
or
push
mov
push
xchg
int3
clc
cmp
add
jns
mov
cmp
lods
out
add
adc
movsl
ds
inc
sbb
stc
mov
fistpll
add
jbe
sbb
fmuls
mov
lret
movsb
jl
add
inc
dec
jbe
test
and
ret
pop
les
sbb
in
je
inc
add
dec
xchg
pop
cmpsl
fadds
in
add
xchg
or
clc
push
push
and
in
addb
mov
mov
les
scas
inc
lahf
xchg
ret
xchg
xorb
push
xor
add
pop
sub
jl
and
jnp
sub
add
shlb
ret
fsubs
jne
cmc
int3
sahf
movsb
fmull
gs
mov
add
mov
ret
jo
mov
addb
sub
cwtl
gs
add
jb
nop
add
sbb
jg
add
loop
daa
fs
xchg
mov
and
xchg
dec
dec
sbb
movsl
adc
out
xor
or
sbb
in
jecxz
mov
and
nop
or
sbb
adc
xorb
pop
mov
dec
pushf
push
mov
mov
dec
das
push
and
add
adc
cmp
or
mov
aas
xor
sbb
popf
fimull
lock
loop
test
xchg
add
sbb
movsb
loop
sub
repz
adc
sub
cmp
sub
dec
jne
cmp
push
test
ret
fidivl
sti
sbb
hlt
mov
es
sub
push
hlt
rclb
sub
push
clc
int3
adc
dec
lahf
add
pushf
into
push
hlt
icebp
sub
mov
cmpsb
test
xchg
xor
sub
dec
jno
xor
stc
mov
dec
pop
and
fidivrl
inc
cmp
push
xchg
js
in
add
inc
aam
xchg
ja
and
sub
xchg
push
scas
fildl
xchg
pop
aaa
mov
and
add
enter
mov
lret
cmp
mov
fiadds
pusha
rclb
loope
dec
lock
andb
fs
push
lock
cmp
mov
dec
bnd
pop
pop
je
mov
lock
mov
test
imul
fwait
inc
aad
imulb
push
lea
mov
dec
lods
int
inc
push
or
lea
dec
ffree
jl
imul
mov
and
add
jbe
pop
inc
pop
paddw
cwtl
subb
mov
imul
out
and
add
fincstp
out
or
cwtl
lods
and
add
add
or
and
pop
leave
dec
cwtl
lock
or
pop
jns
and
cmp
jne
xor
add
js
push
and
push
dec
pop
ljmp
cmp
or
cltd
jo
sbb
mov
call
push
hlt
adc
sub
inc
test
adcb
call
aas
stos
cld
add
push
or
lcall
popa
xor
xchg
xchg
js
je
je
push
ktestw
fs
pop
inc
out
adc
loope
outsb
test
add
push
xchg
inc
xor
test
mov
andl
pop
aas
sub
aam
pop
loope
test
aam
das
cmp
mov
push
push
movsb
xchg
mov
sbbl
fldt
add
js
pusha
jo
inc
or
xor
inc
jne
add
pop
jbe
lret
jns
aam
andl
testl
xor
repz
inc
les
test
shlb
add
mov
pop
adc
lret
hlt
in
inc
pop
nop
lods
and
add
add
mov
xchg
pushf
xor
sarb
lret
enter
mov
lret
jb
hlt
and
sbb
push
loopne
xchg
sbb
sbb
xchg
ljmp
loopne
mov
scas
outsb
mov
in
out
icebp
popf
cmpb
pop
jl
push
push
imull
or
movsb
popf
dec
rol
sti
push
mov
hlt
inc
popf
push
test
into
in
xchg
cmp
mov
lret
in
jp
mov
mov
or
mov
lret
sti
adcb
add
and
push
mov
jns
cmp
int3
sbb
mov
jl
cmpsl
test
inc
das
xor
les
lret
push
movsb
aam
loopne
shlb
nopl
push
les
xor
inc
aam
xor
mov
rcll
or
insl
push
rorb
mov
shrb
data16
movsb
mov
shlb
int3
popl
imul
rcll
pop
lods
out
xchg
int
dec
inc
out
xlat
mov
pushf
loopne
sbb
and
dec
inc
test
pop
icebp
clc
mov
cmp
nop
fdivrs
cmpb
cltd
es
je
mov
jp
xchg
enter
xchg
out
push
inc
testb
sbb
hlt
jno
jns
sbb
cmp
loopne
jp
adc
add
add
jge
xchg
test
sub
or
pushf
rolb
dec
lock
movsl
add
push
rorl
push
mov
test
rol
or
aam
mov
js
das
and
add
mov
push
das
shr
pusha
pusha
add
nop
cltd
xchg
mov
add
cmp
or
and
dec
jl
mov
cld
xchg
loope
add
je
cltd
cmp
push
daa
clc
out
push
lret
mov
adc
mov
inc
in
hlt
cld
mov
mov
cs
add
fsubs
enter
lock
rdpmc
add
or
xor
dec
pop
stos
push
push
cmpsl
dec
jmp
lods
fdivs
add
pop
dec
jmp
xchg
hlt
ja
movsb
pop
icebp
dec
cmp
std
jl
mov
push
lock
xchg
ror
gs
mov
adc
aas
insl
sbb
jl
ja
add
push
adc
adc
sbb
jmp
cmpsl
pop
or
jl
xchg
jecxz
mov
add
xor
add
ret
cmpsl
xor
sbb
and
insb
xchg
jo
movsl
adc
or
inc
sub
mov
enter
andb
jo
inc
add
mov
cmp
inc
inc
dec
stos
cld
sub
enter
pushf
rclb
add
pusha
cmp
into
add
bound
xor
fstl
dec
mov
js
jl
jae
inc
or
mov
pop
imul
sub
inc
pop
mov
jne
add
mov
or
jns
add
push
or
add
jbe
call
adc
sbb
inc
dec
jl
jo
test
mov
mov
push
pop
cmpl
clc
outsl
push
test
cmp
fiadds
sbb
gs
les
bound
sarl
sub
cld
and
cltd
imul
ret
mov
dec
sbbl
cld
or
adc
pop
stc
lock
mov
les
sbb
dec
lret
cld
shlb
jl
jg
test
rolb
add
cmp
sarb
xor
mov
daa
jp
or
mov
and
inc
outsb
loop
mov
push
and
jo
mov
rorb
pop
mov
leave
jns
add
setno
push
mov
add
popf
scas
push
add
jno
or
jae
sub
and
add
or
loopne
jp
out
sahf
mov
or
and
mov
xchg
and
popa
pop
mov
or
dec
jb
xor
mov
out
mov
into
cmp
sub
and
pop
push
push
mov
jo
mov
mov
insl
int3
sub
ret
dec
and
loope
add
jl
leave
call
fmull
fwait
and
inc
inc
cmp
dec
shlb
sbb
or
add
sahf
adc
or
and
add
insl
xor
sub
cltd
add
adcb
loop
cmp
xchg
sbb
or
add
sbb
sbb
adc
aam
mov
and
mov
lock
jg
push
test
xchg
mov
cmp
add
pop
je
sub
in
or
jne
push
pop
dec
inc
or
call
mov
lret
add
std
lret
imul
nop
fdivrl
dec
ds
xor
pop
jg
mov
pop
negl
loopne
mov
sarb
pusha
push
js
cmp
and
ror
mov
or
dec
roll
cmp
mov
pop
push
pop
cmp
dec
ds
es
int3
or
and
add
xchg
mov
add
sub
sbb
sub
test
xlat
lock
cmpsb
pusha
jb
mov
shll
cmp
or
pusha
rclb
xor
fs
pop
mov
sbb
enter
fs
sarb
ss
dec
push
fistps
incb
or
test
out
sbb
and
xchg
cmp
data16
nop
or
icebp
movsb
inc
add
fs
pop
data16
iret
and
fs
jle
xor
xchg
pop
and
dec
sub
cwtl
shr
xchg
aam
dec
or
push
xchg
call
addb
inc
add
fwait
cmpsl
push
mov
clc
adc
xorb
inc
int
add
xchg
in
ret
fisubrl
add
sub
outsb
sbb
or
pushf
xchg
and
mov
xchg
dec
frstor
and
int3
xchg
push
in
les
test
test
psubsb
orb
cmpsl
xor
or
dec
divl
cmp
stos
add
xchg
adc
fildl
roll
pop
or
inc
arpl
rcrb
mov
insb
test
dec
ficoms
jnp
and
aas
sbb
popa
in
sbb
leave
fwait
sub
add
push
add
cmp
add
cmc
pushf
sahf
add
dec
xlat
xor
cmpl
mov
es
shll
scas
daa
pusha
fists
push
jl
dec
add
popa
cmp
push
dec
pop
adcb
add
fs
dec
mov
cmp
andb
ficoms
int3
lods
shll
push
je
adc
rolb
inc
fcoml
push
dec
add
aad
cmpl
inc
fiadds
jmp
add
pop
add
test
xchg
sbb
pop
sbbb
rcrl
xor
mov
fucomi
xchg
push
mov
mov
mov
mov
xchg
dec
ds
inc
out
xchg
jb
add
roll
xor
mov
add
xchg
xchg
xor
iret
or
int
adc
dec
std
sbb
xlat
add
push
in
inc
dec
hlt
les
ja
fcmovu
add
mov
mov
rclb
inc
mov
ret
sub
or
inc
or
int
mov
push
cmpl
mov
jle
fsubl
pop
loope
push
int3
inc
pop
or
or
xchg
sarb
sbb
or
lds
push
int3
mov
pop
or
hlt
pop
repnz
jle
sub
or
stos
mov
nop
int3
aad
xor
xor
mov
pop
ja
pusha
popa
add
iret
dec
sub
or
cmp
add
mov
xchg
inc
ds
sbb
add
enter
and
pop
data16
push
add
sbb
mov
add
xchg
xchg
push
lock
cmp
pop
arpl
mov
add
sbb
pusha
dec
fs
pop
pop
fs
in
rolb
and
dec
rcrl
inc
popf
fmuls
sub
lahf
jne
add
sti
mov
fdivrl
sbb
pop
repz
jb
jecxz
std
enter
xor
mov
push
pop
add
or
icebp
iret
or
add
push
dec
mov
mov
shll
jne
sti
sbbb
ds
or
je
sbb
xor
or
xchg
and
roll
adc
pop
jp
or
xchg
cmp
pusha
dec
rorb
add
add
add
adc
push
sbb
loope
loop
pop
icebp
roll
jmp
and
sub
mov
fwait
insb
out
mov
pop
mov
push
xorb
jo
out
xchg
jl
sub
pop
mov
std
mov
jge
mov
aad
scas
sahf
sbb
push
push
adc
sbb
cwtl
ds
addl
and
into
pusha
enter
aam
xor
fiaddl
jmp
mov
popl
cmp
dec
add
xchg
inc
imul
je
je
cmc
add
rcrb
sbb
adc
mov
push
sbb
sub
cmpsb
stc
incl
sbb
mov
fcomps
jle
mov
loop
les
cltd
mov
or
das
add
lret
xor
inc
lods
fldcw
pop
push
rcrb
xchg
hlt
orb
push
or
push
mov
int
std
add
mov
add
adc
mov
cmp
pushf
add
rol
enter
mov
aaa
inc
mov
sahf
sarb
inc
dec
fcomps
les
popa
lds
push
sbb
add
inc
add
adc
fistl
ds
sbbb
clc
sahf
jecxz
fucomp
and
rolb
out
jno
out
gs
jo
dec
push
pusha
push
out
jo
pushf
fcomps
in
out
add
insl
pop
ds
or
rolb
mov
and
add
mov
and
jecxz
lahf
out
mov
sub
xchg
data16
adc
int3
or
jl
adc
mov
in
das
pusha
and
push
mov
rorb
push
in
or
pushf
mov
cmp
cwtl
mov
inc
nop
mov
decb
push
repz
icebp
add
xor
cli
add
cmp
out
inc
lahf
xchg
cs
fbld
jo
pop
sbb
adc
adc
add
mov
xor
fcomps
push
xchg
aad
cmp
cmp
or
outsl
addl
popf
jecxz
push
cmpb
fistl
jo
or
jbe
adc
es
add
dec
or
pop
out
push
out
jns
sub
dec
sbb
out
xchg
in
add
add
xor
in
jl
jno
jb
sbbb
add
sbb
divl
aad
adc
fimull
adc
lret
enter
pavgw
push
daa
jb
je
fisubrs
push
add
xorb
fdivr
mov
add
or
cmp
and
dec
test
je
cmp
and
mov
jle
add
lahf
push
mov
pop
adc
cmpsb
sbb
enter
lea
mov
dec
dec
es
je
rorb
inc
push
and
add
push
fs
and
pusha
clc
decb
sbb
and
cld
int3
add
pop
andl
ret
lods
xor
jp
dec
mov
and
add
sbb
mov
lret
sbb
testb
xchg
mov
outsl
push
add
cmpsb
add
pop
or
inc
in
int3
mov
lret
sbb
call
lahf
lods
pop
std
mov
daa
sti
je
add
test
into
flds
test
test
es
pop
mov
mov
lret
or
sbb
rcrl
rcll
push
pushf
push
mov
sub
add
ljmp
and
ficompl
jnp
and
push
sub
addr16
add
jl
xchg
lock
lret
or
sub
mov
repnz
sub
jl
mov
ret
sub
sub
add
mov
loopne
iret
sbb
daa
pop
ret
lock
lret
jno
pop
or
pop
ret
add
cltd
in
cwtl
les
mov
mov
inc
sahf
mov
js
push
push
sbb
or
or
or
or
pop
out
and
sbb
mov
cmp
mov
mul
fsubrs
jo
cmp
inc
subb
xchg
lcall
aaa
rolb
mov
pop
scas
mov
adc
xor
push
mov
das
pop
int
xor
xor
mov
push
add
sbb
fiadds
in
rcrl
xor
cld
pusha
jnp
pop
cli
iret
subb
sbb
nop
add
test
fsubl
setp
cmpsb
mov
test
jl
xor
enter
push
mov
shrl
int3
add
movsb
add
jne
adc
inc
mov
cmp
xor
fadds
fcoml
inc
jg
sub
cmp
add
jo
or
and
inc
into
add
mov
sbb
and
out
mov
cmp
jns
xchg
jmp
jp
shll
lret
pop
sub
pop
mov
loope
or
mov
sar
and
cmp
inc
bound
testl
and
sub
daa
push
mov
movsl
push
cmp
jg
dec
or
addb
pop
mov
dec
fs
sarl
cmp
pop
and
es
sbb
xorb
test
pop
push
pop
mov
nop
adc
add
push
pop
rclb
xchg
mov
xchg
inc
iret
push
lock
leave
cmp
inc
sbb
shrb
xlat
fldl
xor
fs
in
bnd
inc
loopne
addr16
lret
add
aam
or
xadd
dec
push
add
cmpsb
lcall
adc
adc
aad
shrb
hlt
mov
mov
orb
sub
es
xlat
int
cmp
pop
test
call
and
xchg
push
or
sbb
mov
adc
and
popf
push
mov
and
out
or
fs
mov
lods
ja
cwtl
mov
jb
decb
test
xlat
repnz
repnz
add
iret
push
imul
xor
or
dec
push
pusha
adc
movsb
hlt
or
push
xchg
inc
jl
push
mov
adc
pop
mov
es
inc
mov
and
sub
add
cmpsb
push
sbb
int3
adc
fwait
dec
test
cmpsl
shll
aas
testl
test
popa
push
pop
enter
and
idivb
pop
cli
mov
scas
mov
cltd
jno
xor
jno
inc
fcompl
in
and
xchg
xor
mov
nop
lock
mov
sti
mov
sub
add
in
je
add
mov
add
push
js
adc
add
fisttpl
adc
push
jbe
popf
in
sub
pop
das
sub
and
shl
movsl
sbbb
push
or
inc
mov
xchg
shrl
push
adc
mov
data16
add
push
add
shll
cmp
inc
sbb
in
rolb
mov
add
dec
icebp
iret
mov
cltd
imul
add
std
jle
call
adc
out
andb
clc
lahf
cmpxchg
repnz
enter
mov
cmp
mov
repnz
cmp
test
sarl
in
mov
ror
ret
lcall
sub
fiadds
mov
les
loopne
mov
in
fisubs
and
jl
sbb
push
in
movsl
jae
add
ffree
std
nop
pop
stos
jecxz
add
lahf
mov
loop
mov
adc
sbb
xlat
push
loopne
int
xchg
rcrb
enter
jl
cld
pop
adc
mov
inc
into
pusha
imul
out
add
scas
mov
cmp
lods
or
xchg
xor
inc
rcrb
mov
cwtl
xor
cmp
push
es
imul
push
xchg
push
jge
xor
add
add
mov
rclb
inc
add
push
pop
cmp
push
fs
shrb
sahf
mov
or
push
test
fidivl
cmp
flds
shr
aad
fistps
daa
add
or
mul
clc
sub
scas
lcall
mov
pop
xchg
pushl
movb
mov
jmp
mov
sub
lahf
pop
insl
hlt
mov
pusha
xchg
mov
mov
add
xor
aad
faddl
mov
mov
std
dec
jg
in
pusha
dec
or
cltd
adc
roll
mov
cmp
jbe
mov
xchg
popf
test
bound
bound
add
fnstcw
out
imul
or
orl
sub
rorl
cmp
jo
test
add
nop
xchg
fists
xchg
adc
and
add
js
add
test
jbe
mov
inc
xor
lods
sbb
pop
mov
ret
mov
adc
adc
lea
mov
jmp
leave
inc
xor
mov
daa
adc
push
fsubs
mov
popa
jae
sbb
push
repz
int3
pop
pop
dec
jmp
xor
add
add
xlat
ljmp
repz
rolb
mov
inc
sbb
fiadds
lret
mov
xchg
or
pop
pushl
or
cltd
add
cwtl
nop
das
cli
imul
test
es
sbb
jg
popa
pop
int3
sub
jo
fsubrs
jle
xchg
movb
das
sbb
xchg
loop
std
in
lcall
je
add
adc
popa
movswl
ja
push
dec
fs
sbb
fwait
rol
sbb
push
or
xchg
or
rcrl
xor
mov
or
push
and
mov
mov
dec
clc
push
push
dec
add
jg
adc
and
loope
or
cmpb
cmpsb
sub
pop
movsb
jmp
jne
push
add
fs
push
flds
mov
dec
loope
sbb
sarb
adc
inc
cmpsb
lock
movsl
dec
les
stos
cltd
testl
push
test
add
popf
mov
and
cmp
insb
xchg
add
jle
lea
outsl
mov
mov
push
adc
inc
inc
add
mov
cld
pop
in
pop
jle
mov
add
add
sti
mov
mov
mov
popf
enter
in
std
gs
push
push
fisttpl
sbb
sbb
arpl
mov
add
out
call
push
es
sarl
jns
or
pop
or
add
pop
hlt
dec
or
and
test
pop
jbe
jmp
push
push
pusha
mov
and
or
mov
shr
xor
sbb
add
jg
in
jno
lret
add
pop
test
fldcw
sbb
mov
add
inc
lret
adc
xchg
push
add
lock
dec
xchg
push
push
pop
pop
add
mov
out
mov
cmp
mov
cltd
sub
ret
mov
pop
mov
xchg
subl
xor
ds
mov
pusha
pushf
add
ds
repnz
pop
dec
out
fsubrs
pop
xchg
sub
rorb
pop
enter
xor
or
add
xchg
into
xor
scas
cmpsb
cmp
pop
push
push
jecxz
test
fidivrs
cmp
mov
unpckhps
or
or
or
adc
mov
cmpsb
xchg
cmpl
test
adc
push
adc
std
in
sbb
mov
cmc
fcompl
loope
out
or
orb
leave
inc
adc
sahf
mov
pop
inc
fwait
push
cs
jbe
sbb
mov
arpl
xchg
jbe
mov
pop
xor
imulb
and
lods
cmp
inc
mov
mov
lea
imul
in
push
or
sbb
add
pushf
movsb
out
and
jo
push
test
iret
xchg
popf
jmp
bnd
lahf
xchg
adc
sub
addb
or
outsl
add
push
loope
mov
mov
jae
daa
push
cwtl
les
add
cld
sbb
out
xchg
es
nop
gs
sbb
cmpsl
xchg
add
stc
jmp
mov
xor
mov
stos
lcall
pop
pop
adc
mov
out
sub
ljmp
xlat
in
sbb
push
jno
mov
bound
es
test
xchg
pusha
cmp
sbb
pop
adc
jmp
add
mov
push
and
add
test
mov
ret
pusha
js
fcomip
mov
es
jae
xor
adcl
adc
aad
and
fdivs
aad
outsb
xchg
leave
mov
mov
mov
fistps
jno
pop
aam
loope
mov
mov
daa
jge
fcomps
sbb
int3
test
sbb
cmp
jmp
loope
les
push
nop
loopne
sbb
pop
jecxz
or
popf
jns
fiadds
mov
push
fsubl
lret
rep
push
cmp
nop
cmp
adcl
dec
into
out
jmp
xchg
lock
and
jge
loope
mov
add
mov
and
out
imul
arpl
dec
mov
and
sbb
push
or
xchg
jg
sbb
sub
scas
xor
jb
inc
adc
nop
jle
mov
and
ret
or
jo
and
xor
int3
and
and
push
pop
pop
mov
rclb
outsl
stc
sub
daa
push
mov
or
dec
stos
add
out
fldl
push
pusha
cmpsb
fs
mov
mov
in
daa
mov
xlat
test
repnz
lret
jecxz
test
pop
sbb
xchg
rcrl
push
push
mov
mov
loope
imul
cld
push
xchg
add
sahf
shr
adc
sahf
sub
xor
jle
repz
roll
out
jmp
popl
or
daa
shl
adc
pop
sbb
lods
sbb
repnz
pop
push
adc
lret
das
sub
mov
leave
xor
std
lds
das
stc
mov
and
dec
test
mov
cmc
or
popf
mov
enter
jo
je
dec
inc
loope
and
gs
nop
outsb
jmp
in
add
xor
inc
mov
cmp
pusha
cld
lret
outsb
adc
int
and
mov
arpl
clc
jg
leave
cmp
xlat
mov
das
adc
cmp
add
cmpsl
in
stos
and
and
cmp
or
push
test
cmp
popa
fwait
sti
adc
jge
push
mov
stos
inc
mov
dec
rcll
lcall
fs
dec
inc
ficompl
pop
and
mov
arpl
push
mov
dec
xchg
xor
and
mov
mov
add
or
sub
adc
sbbb
cli
adc
repnz
pop
mov
mov
adc
mov
and
jg
mov
jle
jp
rcrb
ja
sarb
mov
pusha
jns
je
adc
and
mov
add
pusha
inc
inc
inc
sbb
jae
add
fwait
or
mov
and
sub
jmp
sbb
fisubl
push
add
xor
inc
pop
cmp
xor
subl
add
mov
aam
iret
pop
hlt
add
jmp
push
add
and
imul
aaa
push
mov
pop
adc
pusha
mov
sti
pop
popf
pusha
or
xchg
mov
sub
jmp
xchg
add
and
test
test
add
es
ss
push
pop
push
daa
mov
stc
sbb
push
add
sub
mov
xchg
mov
add
mov
lret
jb
pop
mov
mov
rolb
adc
gs
mov
xchg
ficomps
into
les
sbb
pusha
aad
pop
xchg
lss
jge
dec
gs
loop
mov
add
fcompl
or
add
jg
adc
mov
daa
loopne
in
or
or
lret
xor
call
aam
mov
lock
add
add
and
imul
cmp
add
ja
pop
test
mov
ret
mov
xchg
adc
icebp
pusha
cmp
out
fld
push
popa
add
mov
pop
mov
sub
add
lret
fstpl
jecxz
xorb
les
dec
sbb
pop
fwait
adc
scas
mov
mov
xor
xorb
jns
test
and
mov
pop
sub
mov
ret
pushf
stos
faddl
in
test
pop
pushf
jg
or
movl
arpl
jo
dec
popa
mov
test
dec
cmc
mov
pop
and
popa
popf
jmp
jl
xchg
lret
adc
mov
add
cwtl
add
mov
cmp
lahf
dec
add
push
mov
jmp
stos
mov
push
in
add
push
jb
inc
pop
and
stos
inc
dec
shr
or
cmp
and
xchg
or
inc
sbb
xor
jne
ret
xor
lds
iret
push
fs
loopne
push
arpl
add
popa
sbb
in
push
int
insb
cmp
clc
push
sub
out
stc
pop
add
add
add
fwait
inc
xor
cmpsb
or
inc
mov
inc
out
add
xor
mov
stos
andb
xor
adc
rcll
in
xor
mov
cmp
daa
jmp
in
sub
in
pop
jp
xchg
mov
mov
repnz
sub
pop
int
mov
lea
add
cmc
lcall
aaa
and
mov
push
inc
dec
addr16
mov
pop
scas
and
data16
xor
mov
pusha
aaa
push
push
sub
adc
cmp
sbb
clc
sub
sahf
rorb
cmp
mov
rcll
mov
loope
mov
aas
add
mov
fcmovu
dec
test
add
xchg
shl
add
mov
sbb
bound
push
dec
mov
loope
inc
push
daa
and
jg,pn
cmpsb
add
shl
dec
mov
loop
rcr
aam
das
and
adc
popa
xlat
sub
adc
orb
test
out
mov
push
loope
jne
sbb
dec
pop
enter
and
lds
push
or
push
rcrb
mov
cmp
or
mov
sbbl
xchg
add
mov
xor
inc
fsincos
inc
loop
adc
cmp
push
jmp
mov
rorl
sbb
push
and
jl
movsb
and
sbb
cmp
cmp
cwtd
movsl
adc
sbb
dec
or
cmpsb
sbb
jno
adc
je
push
adc
mov
and
jo
ljmp
add
sbb
aaa
shr
sub
test
ficoml
mov
dec
addl
xor
mov
add
dec
cmpsb
jo
or
sub
push
and
add
and
movsl
pop
adc
mov
nop
push
mov
mov
cmp
jle
sbb
inc
sbb
xor
popa
cmp
aas
dec
pop
inc
sbb
loopne
xchg
shrb
outsl
cltd
push
push
or
lods
xchg
insl
stos
call
shrl
popf
rorb
lods
mov
add
push
cmp
dec
minps
jb
sub
inc
aad
test
push
or
sbb
aas
in
rorl
push
dec
xor
dec
pop
jle
lea
lret
cmp
add
sub
fistpl
mov
add
add
cmp
fsts
lods
and
mov
fiadds
jno
jmp
sub
sub
sarl
cmp
mov
sbb
and
enter
addr16
add
pop
inc
stos
mov
mov
mov
rcl
sub
pop
pushf
aaa
cmp
js
loope
add
dec
push
adc
push
inc
sarb
std
xchg
push
das
jae
inc
add
inc
adc
lods
add
push
mov
xor
xchg
gs
xor
pop
and
push
sub
test
adc
cld
fiaddl
cmp
inc
xor
or
dec
sub
mov
mov
faddl
fistl
push
stos
sbb
clc
js
adc
sub
out
aas
fnstenv
cmpsb
sub
fmull
cmp
iret
rclb
inc
inc
fldcw
fisttps
and
xor
push
gs
ds
aas
push
xchg
mov
xchg
sub
sub
push
mov
test
push
gs
push
popa
sub
mov
fcoml
or
and
adc
fldt
xor
xchg
dec
mov
dec
test
adc
enter
gs
push
add
mov
pop
stos
xor
inc
cmp
jge
sub
dec
dec
xor
dec
and
cmp
dec
pop
mov
push
pop
cmp
dec
movsb
xor
sub
lock
dec
fsubl
sbb
mov
mov
xor
dec
dec
jae
dec
xor
jl
aam
stos
sbb
js
dec
out
push
outsl
mov
xchg
mov
pop
cmp
loopne
shrb
xor
xchg
cs
loope
add
pop
scas
pop
inc
cmp
cltd
enter
mov
adcl
add
and
sbb
mov
js
lahf
es
testl
clc
insb
sbb
into
bound
adc
fadds
mov
cmp
add
pop
out
push
imul
test
push
jl
nop
in
scas
add
nop
fisubl
int3
or
xchg
add
mov
or
mov
inc
ret
sub
mov
lods
add
cli
stos
fbstp
pop
push
xlat
outsl
or
and
push
xor
xor
mov
add
jb
mov
mov
adc
pop
movsb
cwtl
push
stos
push
jle
and
arpl
xchg
pop
repz
xchg
test
push
sub
lods
scas
and
mov
push
lret
movsb
push
dec
and
fistl
mov
movsb
jge
mov
xchg
fiaddl
and
xchg
test
sbb
shl
rorb
pop
scas
mov
inc
xchg
and
cmp
adc
mov
cld
mov
xor
add
adc
mov
jnp
pop
lods
or
and
adc
out
pop
rcl
push
mov
insb
add
xchg
cld
scas
sbb
mov
lds
mov
and
sbb
sbb
lret
jnp
aas
mov
mov
fidivl
clc
sub
push
roll
adcb
fists
jge
adc
sub
stos
fistpll
inc
sbbb
test
mov
xchg
adc
imul
dec
loopne
mov
imul
nop
cmp
xor
sub
cli
mov
xchg
inc
jo
pushf
cmp
xor
adc
inc
or
sub
push
or
call
mov
dec
ljmp
mov
test
hlt
xorb
jecxz
push
test
adc
inc
push
cli
dec
add
loope
xorb
dec
or
xor
xchg
cli
pusha
mov
sbb
cmc
add
and
sti
aad
hlt
insb
sarb
mov
xchg
bound
mov
fdivs
sahf
ss
test
xor
mov
outsb
adcb
or
mov
cmp
pop
mov
sub
and
push
mov
push
pop
or
enter
scas
out
fimull
loopne
cmpsb
out
pop
or
cmp
mov
adc
jnp
adc
inc
data16
cmp
dec
inc
mov
cli
mov
fbld
cmp
shlb
sbb
fmuls
add
pop
adcl
mov
gs
lahf
pop
add
jmp
push
dec
mov
gs
cmp
and
mov
enter
sbb
cmp
or
mov
adc
mov
adc
aaa
xor
jae
add
or
jp
sbb
fisttpl
add
push
les
lock
mov
add
test
xchg
adc
and
mov
sahf
fdivr
push
loope
pop
fistpl
cltd
hlt
shll
in
fsubs
mov
sub
js
lods
orb
pop
and
add
push
fnstsw
xchg
fdivrp
dec
and
push
in
andl
test
stos
sbb
test
movsl
loopne
mov
xor
inc
std
fistpll
inc
cmp
add
imul
xor
xchg
leave
mov
mov
xchg
sahf
shll
jnp
jmp
push
js
or
or
mov
movb
stos
subb
inc
push
jl
cmpsb
sbb
cs
mov
mov
xchg
and
andl
out
xchg
fcmove
and
mov
xlat
bnd
jb
call
pusha
out
pop
dec
enter
sub
sbb
popa
clc
pop
add
gs
bsf
fcompl
adc
dec
or
xor
mov
shll
push
jp
dec
add
das
popf
dec
cmp
subb
push
and
or
cld
add
cs
mov
inc
pusha
movsb
sti
xor
sub
add
and
outsl
or
lea
jne
adc
outsb
xor
sub
xchg
stos
lcall
ss
pop
push
enter
push
add
hlt
adc
cmp
cmp
loopne
add
out
push
bsf
sub
jmp
adc
rcrl
push
fcomi
shlb
or
sub
roll
cwtl
das
and
sbb
add
sbb
popf
sar
ffree
cmpl
or
jl
add
mov
mov
scas
outsl
sahf
les
xchg
aam
hlt
call
lea
sahf
rcr
jmp
aas
cltd
in
adc
mov
mov
pop
mov
and
lock
xor
inc
add
sub
shrl
inc
xchg
cmp
fildll
imul
jnp
lock
sbbb
inc
push
add
call
adc
or
or
pop
mov
mov
inc
push
add
sbb
stos
mov
xchg
mov
xchg
add
mov
mov
jle
mov
lret
or
mov
jo
mov
sbb
dec
xchg
mov
stos
lods
jae
push
shlb
xor
add
mov
decb
adc
push
rclb
mov
pop
ljmp
out
push
xchg
fcmovb
cmp
xchg
or
lock
mov
push
outsb
test
or
and
jne
mov
nop
pop
adc
mov
or
jno
mov
aam
fiadds
inc
sub
or
and
jmp
dec
xchg
je
jo
xchg
mov
lods
insl
xchg
fsub
mov
and
imul
dec
push
add
enter
popa
loopne
adc
and
mov
add
cli
push
and
les
adc
ss
jecxz
test
movsl
inc
add
cld
jb
adc
pop
imul
addr16
jl
mov
imulw
inc
pusha
imul
mov
rcr
insl
cmp
mov
and
rclb
cwtl
lods
add
fidivrs
and
and
adc
adcl
stos
pushf
jl
xchg
inc
pop
inc
push
add
stos
mov
adc
in
push
in
dec
mov
pop
inc
cmp
mov
inc
or
push
add
insl
sbb
std
or
out
or
add
testl
call
nop
and
push
cld
xchg
and
in
mov
sbb
rcrl
sahf
mov
clc
test
push
add
xchg
dec
and
out
push
mov
push
push
jecxz
push
sbb
mov
sbb
sbb
hlt
movsb
add
pusha
mov
or
ret
lret
pushf
enter
cs
and
and
insl
scas
add
bound
inc
movsl
les
mov
pop
xchg
push
in
sub
mov
add
aad
cmp
nop
add
pop
fld1
je
movsb
aaa
lds
jnp
fcoml
jecxz
test
fbld
sub
mov
mov
and
dec
mov
inc
lods
dec
cwtl
call
and
lds
mov
popl
fildll
aaa
mov
adcb
test
mov
int
push
adc
pusha
pop
adc
push
add
adc
xor
out
in
cmp
jle
lahf
lods
jmp
decb
pop
mov
pop
sbbb
add
or
xchg
in
jmp
into
inc
pusha
jg
rclb
in
mov
nop
cmp
fistpll
jmp
xorb
xchg
jge
add
mov
push
je
aaa
xor
stos
add
mov
pop
insl
shl
aas
imul
push
push
sarb
decl
outsl
arpl
dec
fldl
push
popf
das
test
fwait
loope
add
jae
add
in
or
pop
push
mov
pushl
add
dec
add
cmpb
add
dec
scas
pop
jmp
dec
movsl
mov
and
iret
inc
test
idivb
ret
pop
add
and
sub
jg
xor
add
adc
push
js
jno
inc
ror
add
repnz
arpl
add
xchg
pushf
jns
add
sbb
jb
pop
test
ret
stc
cmpsl
ds
cmp
fcoms
movsl
sbb
in
andl
mov
jnp
xchg
sub
roll
mov
mov
push
add
sub
jge
add
mov
pop
add
outsl
push
sarb
movsl
call
xchg
bound
cmp
pop
adc
pop
movl
and
addr16
mov
mov
add
dec
enter
imulb
and
adc
pop
mov
bound
lcall
push
add
xchg
rcrb
out
xchg
aas
mov
cmp
jno
out
and
jns
rcll
sub
inc
add
dec
cld
xor
sub
hlt
pop
loope
dec
inc
inc
bound
add
mov
inc
sub
int3
repnz
adc
add
push
push
xchg
test
sbb
pushf
mov
lcall
mov
mov
or
rolb
rorb
sub
xchg
testb
rcrl
xor
data16
add
scas
pop
add
aad
fmull
inc
lods
stc
xchg
pusha
in
pushf
mov
dec
daa
mov
pusha
std
add
or
adc
enter
pop
or
pushf
subb
jb
sbb
push
aas
xchg
xchg
inc
jno
push
lods
xchg
repz
pusha
cmpb
add
cmpsl
sbb
stos
mov
jnp
or
hlt
add
cli
icebp
add
mov
and
xchg
pop
mov
dec
shrb
add
adc
mov
sub
je
add
cmp
xor
sbb
cltd
add
nop
jbe
bound
mov
push
data16
add
push
mov
inc
jg
testl
pop
loopne
sbb
pop
mov
push
popa
adc
pop
pushf
fldcw
nop
sbb
mov
xor
add
xor
mov
ss
cwtl
in
repz
nop
mov
add
mov
pop
mov
ljmp
add
xlat
std
xchg
sbb
sub
add
mov
out
fstpl
aad
cltd
inc
pop
pop
lret
repz
ja
in
fisubs
mov
popa
pop
sbbb
sub
pop
jecxz
enter
addl
insl
cltd
and
enter
pop
mov
push
mov
mov
adc
add
popf
and
fildl
adc
in
movsl
loope
out
add
push
sbb
cmp
sbb
movsb
add
in
push
inc
cmpsl
push
inc
loopne
add
xchg
int3
incl
jne
add
xchg
mov
idivb
fnstsw
lods
mov
inc
dec
mov
add
insb
push
xor
push
gs
pop
jo
mov
jle
pop
jne
mov
add
sub
push
rolb
add
mov
or
push
jg
add
leave
stc
fnstsw
ffreep
fbstp
mov
xchg
sbb
pushf
call
push
lock
je
push
clc
cmp
movsb
shrl
and
es
add
sbb
add
lds
cmp
subb
gs
jno
add
mov
dec
filds
cmp
mov
insl
sbb
dec
adc
xor
pop
mov
pop
adcb
out
push
shlb
clc
xchg
ret
std
or
fchs
jecxz
add
movb
xor
clc
es
xchg
mov
push
mov
or
push
add
ret
add
mov
sbb
lret
sub
mov
adc
mov
sbb
out
stos
pop
mov
add
push
mov
push
icebp
add
je
xchg
sti
sub
orb
dec
mov
lods
ds
in
push
mov
lret
fucomip
adc
loopne
dec
add
xorl
arpl
push
pushf
in
cltd
cmpsl
pop
or
aam
inc
push
fdivrl
and
add
or
fiadds
pop
jbe
mov
add
sbb
add
mov
out
pop
cs
inc
sbb
sbb
dec
jg
mov
push
inc
int3
xchg
add
stc
add
int
xchg
mov
mov
pop
xorl
or
jecxz
and
call
popf
and
cld
push
jnp
cmp
lods
push
lret
stc
loop
hlt
mov
sbb
and
arpl
xlat
add
mov
sub
add
enter
xor
push
lea
add
fs
test
xchg
je
les
jb
call
pushf
inc
jno
xchg
add
add
add
sub
jo
mov
cwtl
mov
out
xchg
das
lahf
add
aam
xor
mov
cwtl
adc
add
cmp
push
xchg
clc
sbb
aas
loope
shr
sbb
jl
and
add
mov
lods
dec
sbb
push
dec
add
mov
xor
rcrl
mov
and
jge
rol
pop
js
cmp
mov
dec
xchg
dec
mov
cwtl
call
add
jge
sub
mov
add
into
fcompl
push
xor
jge
int3
fbld
fistl
mov
rolb
pushf
cmpl
pop
push
shlb
add
mov
push
ret
js
pop
jle
xor
inc
add
and
pop
cmp
sub
jge
lret
jae
cmc
adc
mov
add
das
and
mov
sbbb
fwait
loop
cmp
fnstcw
sub
mov
jle
out
inc
jnp
out
mov
xchg
pop
popf
clc
sub
jl
cltd
jp
push
mov
mov
add
popa
mov
add
out
loopne
add
cltd
ljmp
sub
lcall
arpl
popf
add
add
mov
icebp
repnz
jo
mov
cs
jb
xchg
lret
faddl
test
pop
repnz
pop
in
pop
cmp
xor
sub
je
iret
nop
into
add
arpl
ljmp
hlt
cmp
test
imulb
jp
adcl
fldl
sti
les
cmp
add
jno
push
call
adc
into
iret
push
imul
cs
add
xorb
push
push
xlat
mov
pop
push
fcoms
xchg
cmpb
leave
das
je
sub
nop
sub
pop
mov
pop
lcall
bound
add
push
add
cmp
adc
push
dec
cltd
clc
lahf
ljmp
add
add
aaa
mov
mov
ja
adc
add
adc
rcrb
fstp
add
mov
sti
xor
out
mov
add
push
mov
mov
inc
or
fcoms
dec
movsl
fnsave
andl
lcall
mov
rclb
mov
enter
icebp
das
add
shlb
mov
add
jl
lcall
leave
cmpsl
cmp
int3
xor
mov
pop
and
orb
cs
inc
arpl
test
add
pushf
shll
insb
scas
cmc
outsb
add
jmp
push
jp
xor
sbb
in
xchg
add
ljmp
jb
lock
mov
jg
daa
rolb
repnz
dec
cmp
cmp
add
mov
sub
xor
cld
add
dec
jbe
sub
add
insl
cmp
add
push
mov
outsb
or
push
add
jae
in
jecxz
dec
mov
getsec
ljmp
add
outsl
in
add
loop
mov
sub
ss
test
negb
mov
xchg
add
xchg
sarb
add
ret
dec
push
mov
loopne
push
add
leave
sbb
sar
das
jecxz
sub
movsl
in
rorb
jae
sbb
int3
mov
stos
add
inc
dec
mov
sub
rolb
cmp
dec
push
clc
nop
ret
cmp
clts
test
and
fidivs
enter
loop
and
into
rolb
pop
pushf
push
sbb
lcall
fwait
lock
jle
test
js
cmp
loop
loope
loopne
lahf
add
xchg
inc
orb
rolb
jo
das
push
out
jbe
les
inc
into
cmc
cmp
sbb
mov
jle
add
in
scas
jg
jns
and
mov
jl
sbb
and
sarb
xchg
pop
add
ret
sbb
inc
or
lcall
push
inc
insl
js
test
movb
push
subl
bnd
lock
ret
xchg
shrb
call
and
mov
jae
dec
mov
inc
ficompl
xchg
pop
sahf
mov
pop
insl
cld
and
sub
pop
rcrl
mov
fwait
add
cmp
xabort
push
jmp
jg
fsubrs
xor
xchg
repnz
add
sarb
fisttps
lock
lds
sub
lods
arpl
punpckhbw
adc
pop
or
in
shll
imul
sub
lret
or
enter
sbb
or
cld
inc
dec
sub
cwtl
dec
push
xchg
mov
fbld
sahf
addb
or
or
pop
cmp
mov
and
add
dec
mov
insl
mov
repz
lea
decl
in
push
sub
add
scas
and
incb
insb
lret
dec
and
testb
lds
jle
jae
stos
push
xor
dec
shlb
les
loopne
lods
mov
or
subb
pop
inc
pop
cmpb
loop
add
outsb
fimull
cmpb
push
mov
and
js
in
push
dec
inc
bswap
add
shlb
sub
or
ret
inc
das
lahf
sub
jns
jle
cli
in
inc
add
inc
mov
cmp
cwtl
xchg
cli
or
insb
jmp
xor
add
in
je
cmp
ljmp
test
movb
jp
ds
pop
stos
mov
sbb
roll
cwtl
sub
sbb
add
lods
icebp
push
movlps
hlt
xchg
mov
in
inc
add
lahf
inc
cmpsb
add
jno
fs
shl
or
scas
sbb
inc
sub
lret
roll
inc
add
push
xor
add
imull
cmpsb
enter
lcall
mov
jb
cmp
adc
xlat
mov
xchg
mov
pop
cmp
add
test
fdivr
jle
or
jnp
subb
pop
add
mov
adc
icebp
jbe
dec
jae
mov
and
sbb
in
ret
add
xchg
and
scas
cmp
add
jae
ficoms
lret
dec
popf
add
in
mov
adc
add
mov
out
pop
sbb
dec
sub
xor
enter
sti
cli
sbbb
addl
pop
test
xor
cmp
inc
mov
adcb
stos
dec
adc
cwtl
push
adc
jne
aam
stos
cvtdq2ps
scas
mov
ficoml
cmp
seto
add
lods
mov
mov
jne
adc
sbb
dec
push
fdivs
xchg
fimull
add
push
xlat
stc
add
aaa
add
bound
das
rorb
lods
ss
movsl
loope
adc
sbb
lret
push
mov
sbb
pop
xlat
sarb
mov
insl
add
dec
xchg
rcrb
sbbb
jne
add
push
lock
jns
lock
paddb
shlb
jo
add
lea
pop
cmp
icebp
out
mov
cwtl
add
lods
mov
cwtl
filds
orl
jnp
pusha
in
mov
adc
xor
pop
popa
les
das
cs
lret
notl
mov
call
add
das
add
stos
lods
sbb
inc
mov
xchg
pop
mov
in
mov
or
lods
hlt
mov
xchg
loope
adc
nop
je
cmp
add
jl
xor
adc
mul
add
std
adc
sbb
xor
loopne
add
scas
mov
sub
loop
enter
dec
das
inc
lods
mov
cmp
dec
aam
or
das
notb
mov
pop
xchg
mov
shl
call
jo
add
mov
hlt
xchg
clc
sub
mov
sub
out
out
push
ror
stos
sbb
cwtl
add
std
scas
xor
out
xor
or
scas
push
popa
in
in
mov
jecxz
inc
in
ss
sub
aam
or
aad
pop
push
mov
shll
cmp
xchg
shrb
sbb
mov
imul
xchg
push
inc
fistps
mov
and
mov
fildll
pop
in
sbb
mov
hlt
cmp
insl
add
xchg
cmp
subb
rcrb
inc
jno
add
push
adc
in
fs
add
mov
bound
mov
xchg
and
jb
mov
add
push
pushf
mov
ret
ds
dec
data16
in
mov
pop
lds
add
xchg
leave
fdivl
adc
rclb
mov
mov
mov
in
subb
outsl
lods
and
into
fmuls
push
test
push
fdivl
cmp
cmpsb
sub
xchg
lock
lahf
xchg
or
jo
adc
inc
add
out
and
test
ds
call
sub
jno
repz
imul
jae
sub
push
xlat
in
add
out
mov
push
or
pusha
push
fdivs
in
enter
mov
adc
add
cs
push
rcrb
inc
xchg
les
nop
lock
push
dec
push
jl
lea
or
or
inc
xlat
pop
leave
or
fadds
dec
add
pop
adc
nop
fmuls
add
sbb
jbe
je
repnz
lods
add
inc
sub
clc
mov
jl
test
outsb
andb
inc
add
inc
int3
loope
cltd
add
daa
and
push
pop
pop
cwtl
sbb
mov
mov
mov
adc
xor
ret
inc
inc
fstps
push
adc
lock
ds
popa
dec
js
adc
loope
rcr
dec
cmpl
push
or
pusha
fisubrl
pop
xor
jg
lods
sbb
mov
sub
xchg
enter
clc
dec
add
xchg
loopne
loope
and
test
or
shl
xchg
shrb
jnp
add
lods
xor
xor
insl
add
and
add
xor
mov
adcb
pop
inc
in
adc
cmp
pop
ljmp
sbb
addb
or
es
sub
insl
push
or
cld
jl
mov
inc
pop
inc
sub
pusha
xchg
sbb
push
mov
mov
mov
and
mov
xchg
insl
ja
adc
sahf
fmull
out
das
mov
in
divl
and
sub
jne
test
cld
inc
mov
scas
and
lret
out
and
sub
xor
add
push
inc
fiaddl
popa
pusha
push
sub
loopne
imul
add
pop
ficoms
mov
loop
mov
or
repnz
pop
inc
je
or
out
and
rcr
addl
mov
es
and
data16
imulb
loop
enter
add
push
pop
fimuls
cmp
mov
test
push
mov
cmp
dec
or
xlat
movl
dec
gs
and
fcoml
js
insb
cmp
adc
sahf
cmpl
cwtl
mov
test
cmp
lods
pushf
adc
int3
or
lods
jb
popf
dec
or
sbb
mov
shrb
inc
pusha
pop
aam
cmp
sub
cmp
inc
movsb
pusha
xchg
adc
and
pusha
outsb
mov
add
ret
inc
add
xor
leave
or
jl
aad
push
loop
xor
in
dec
adc
mov
arpl
imul
pop
push
sbb
cli
movl
lcall
inc
insl
add
loop
add
outsl
or
cmp
cmp
imul
repnz
pop
push
dec
outsb
mov
lcall
mov
inc
sbb
scas
cmp
cmp
rcrl
aam
xchg
testb
jns
push
inc
push
sbb
adcb
xor
or
sub
cli
mov
mov
and
pushf
add
cmp
xor
mov
add
and
scas
xor
add
lods
subb
push
iret
invlpg
aas
cmp
sub
xor
lock
loopne
dec
sub
andb
cmp
fildl
mov
mov
fimull
jne
inc
int3
add
jo
add
sbb
fxam
loopne
add
lods
cmp
gs
sub
out
je
add
adc
fisttpl
cld
cs
or
ja
nop
dec
adc
jo
shrb
cs
int
adc
push
xchg
loopne
imul
fstl
push
scas
test
call
lahf
fcoml
js
clc
xchg
ret
loop
aam
mov
inc
push
add
stc
mov
lock
jg
add
clc
inc
icebp
push
je
sub
out
mov
repz
dec
mov
push
xchg
lods
js
pop
add
sub
adc
cmp
xor
lods
jl
scas
and
inc
cmp
pop
dec
insb
add
imul
add
das
js
scas
jnp
test
mov
xchg
test
inc
shl
xchg
out
and
add
je
add
in
sbb
push
mov
cmp
pusha
push
je
dec
and
sub
lods
in
shll
adc
movsl
jae
mov
pop
mov
enter
dec
push
inc
mov
xchg
clc
js
clc
fsubs
mov
inc
or
enter
xor
xor
dec
aam
sub
and
mov
jbe
mov
outsb
mov
ljmp
sbb
shl
lahf
and
push
leave
test
out
sub
sub
mov
rclb
or
cmpsb
push
loopne
cmp
nop
out
pop
xor
shr
sbb
mov
adc
cmpsl
jns
adc
mov
les
jno
adc
fimull
jp
fcoml
andb
sub
inc
xorl
nop
mov
adc
sub
xchg
mov
into
xor
or
sub
or
punpcklbw
in
or
cmp
xchg
push
addr16
cmp
sub
cmp
mov
into
addr16
inc
sub
pop
adc
popl
sbb
insl
cmpsb
sub
and
jb
dec
pop
cmp
adc
push
cmp
cmp
and
jmp
popl
xor
add
out
sub
jno
scas
in
pusha
nop
inc
adc
adc
mov
pop
movsl
hlt
or
das
pop
mov
push
rolb
cwtl
mov
fbld
cwtl
adc
fadds
adc
push
or
push
jge
push
in
mov
adc
dec
pusha
pop
sub
add
mov
in
cmpsb
mov
out
push
stos
das
fsubs
outsb
add
fucomip
sbb
jle
and
xchg
loopne
gs
shl
int3
stos
lcall
pop
and
xchg
int
cltd
cli
out
sub
pop
pusha
and
aas
cltd
xor
test
add
mov
js
xor
mov
mov
cmp
jecxz
mov
aas
xor
mov
xchg
or
cmp
fbld
inc
adc
jmp
in
adc
inc
call
out
shufps
jae
je
xor
mov
push
hlt
pop
sbb
out
sub
cmp
jae
in
xorb
cld
dec
sti
clc
and
and
or
mov
nop
add
pusha
negl
add
lcall
cltd
shl
imul
jge
sbb
pop
sbb
icebp
jl
sub
out
mov
ja
xlat
sub
sbb
ror
fistpll
or
mov
xchg
repnz
call
and
loope
push
test
mov
mov
mov
jnp
rclb
ret
add
push
dec
xchg
push
ret
and
cmp
pop
orb
adc
mov
sbb
pop
mov
mov
mov
mov
rcl
test
das
mov
enter
sbbb
dec
mov
cwtl
lods
call
adc
fwait
pop
lds
popa
jbe
lret
cmpsb
dec
xchg
xor
add
mov
pop
js
imul
xor
mov
fmuls
loope
loop
mov
xor
xor
jmp
adc
pop
movsb
shlb
ret
mov
inc
add
cmp
sub
loopne
push
scas
push
add
add
test
pusha
and
daa
shrb
and
cmp
repz
jnp
lret
orb
add
pop
in
inc
mov
aad
push
cli
fistps
std
sbb
sbb
dec
inc
inc
pusha
movsl
jbe
add
cld
mov
ret
inc
pop
fcoms
insl
xor
addr16
push
cmpsb
push
mov
jg
in
add
test
pusha
inc
and
mov
sub
js
xchg
inc
sub
dec
pusha
and
mov
pop
inc
or
add
scas
mov
push
enter
movsl
mov
and
test
xor
aam
pop
fcoml
fildl
js
inc
xor
add
xor
and
inc
cmc
popa
int
les
sbb
mov
inc
gs
lods
adc
and
dec
call
xor
mov
enter
rorl
imul
adc
inc
outsb
or
cmp
enter
or
call
inc
or
xchg
test
adcl
sub
mov
cs
dec
and
je
pop
xchg
add
cmp
mov
sarb
dec
inc
xchg
nop
cmp
xor
int3
in
cmpb
push
inc
loope
jge
enter
ret
mov
mov
movsb
and
xchg
pop
add
fcmovnu
adc
cmpsl
clc
pop
iret
stos
add
pop
stos
scas
adcl
mov
mov
adc
test
inc
jb
dec
dec
dec
imul
loop
aaa
out
pop
xorb
inc
xchg
add
and
loop
cli
test
push
pusha
push
cmp
add
sbb
xchg
mulb
cmp
or
cmp
sub
and
cli
mov
add
pop
ret
out
mov
jo
mov
stos
popf
cs
push
push
pop
xchg
cmp
loopne
addb
pushf
fidivs
adc
jl
lods
aas
add
xchg
sbb
in
sub
push
inc
in
js
xchg
rolb
sahf
and
pop
adc
mov
mov
add
jnp
imul
test
sbb
insb
add
cmp
cld
das
mov
loopne
sbb
xchg
out
fsts
jnp
shlb
rclb
cmp
jo
push
stos
sbb
add
psrlq
pop
sub
push
or
adc
movsb
mov
into
add
sbb
int
addl
andb
jmp
je
sbb
out
ds
or
jo
add
mov
inc
cmp
enter
aaa
add
push
out
mov
insb
inc
push
test
inc
xchg
jo
aam
push
cmp
add
ret
jge
ret
out
jo
xor
decl
mov
rolb
push
push
pop
loope
popf
fsubrl
inc
pop
lock
call
loopne
mov
les
jle
sarl
popa
and
mov
bsf
jmp
nop
in
inc
push
add
cmp
mov
xchg
mov
cld
xorl
xor
and
nop
and
jns
dec
mov
fbstp
xchg
mov
inc
in
mov
and
add
sub
mulb
sbb
push
test
aas
add
sbb
xor
push
lods
sub
sbb
jecxz
andb
mov
lock
aam
rorl
sahf
mov
in
clc
push
ret
int3
cs
push
adc
aaa
mov
andb
push
adc
add
shr
nop
push
cmp
lods
push
jp
xchg
cltd
int3
and
stos
push
xchg
and
add
xor
sbb
xchg
jge
repnz
jle
fdiv
daa
ret
xor
mov
sub
push
cmp
xor
sub
andb
pushf
or
pusha
xor
pop
add
mov
js
scas
push
xchg
adc
lea
push
sub
and
mov
add
ret
dec
mov
or
mov
test
sbb
shrl
inc
jae
or
push
push
into
adcl
dec
dec
sbb
mov
or
test
adc
popa
xor
mov
lods
icebp
push
and
add
adc
sub
jnp
cmpsl
jp
push
jmp
lcall
fisubrs
fmul
jbe
jae
mov
sbb
inc
pop
orl
cmp
cmp
sbb
clc
dec
subb
js
dec
lock
lea
or
and
jmp
cwtl
fyl2x
pop
push
cmp
pop
mov
xor
out
xor
popf
and
sbb
and
xor
xchg
mov
mov
adc
or
adc
shlb
ja
js
mov
leave
or
or
cmp
push
push
inc
je
ret
mov
jae
push
stc
fsubl
cmp
cmp
pop
js
cmp
pusha
loop
and
sbb
ficomps
mov
jns
xchg
popf
in
adc
fsubrl
cld
and
push
mov
add
rolb
mov
mov
and
sub
lea
or
hlt
ss
loopne
lods
nop
jns
loopne
push
mov
gs
fldl
mov
mov
call
xorb
inc
jecxz
mov
xor
popl
adc
xorl
adc
arpl
adc
sub
xchg
sbb
fldl
or
fmull
dec
clc
cmpsb
jl
sub
shl
jo
cmp
lods
test
mov
xor
and
lods
pop
mov
add
jo
and
push
fisttpl
mov
repz
cltd
je
insl
sbb
popa
or
insb
nop
xorb
scas
pop
add
mov
pop
xchg
cwtl
xor
xlat
add
enter
cmp
cwtl
cli
dec
add
call
cmpsl
and
push
icebp
loopne
and
out
jge
andl
dec
xchg
test
lods
pop
mov
inc
inc
add
add
lea
xor
add
jle
mov
pop
sub
cmp
aam
sahf
sar
pop
add
je
test
dec
lock
pop
adc
das
sahf
push
jns
bound
aad
mov
pop
push
mov
cmp
ds
sbb
sti
sub
add
mov
dec
xchg
cmp
add
or
add
jbe
dec
icebp
sub
jo
loopne
fisubrl
mov
push
cld
pop
mov
lret
sets
stos
pop
test
pop
inc
cltd
sahf
jns
adc
push
xor
pop
adc
mov
lock
adc
add
pop
push
and
jne
lods
cmp
rol
das
sub
rorb
mov
mov
test
inc
cmp
test
repnz
lret
sub
xor
pop
inc
inc
push
or
enter
and
enter
cmp
pop
inc
loopne
dec
push
cmp
adc
sbbl
sbb
outsb
mov
push
mov
cmp
addr16
pop
cmp
mov
cs
aam
das
lods
cmp
xchg
pop
and
dec
sbbl
mov
loop
repnz
xor
add
inc
jo
pop
adc
jmp
mov
fincstp
and
push
cmp
xchg
mov
aas
inc
int3
jge
frstor
ret
sub
negl
sub
inc
add
in
xchg
shll
or
fdivl
nop
dec
rcll
push
fmul
imul
mov
jns
jne
dec
mov
ljmp
sub
push
xor
adc
xor
push
rcrb
cmc
add
call
lock
add
xchg
jo
push
out
sbb
mov
jle
mov
and
lods
aas
pop
xchg
cld
lods
mov
jnp
ror
jo
and
xchg
dec
aam
lcall
mov
inc
imul
sarl
lods
test
lret
je
lahf
nop
addb
addb
xchg
nop
fidivrl
mov
jle
divb
or
mov
fisubl
das
xor
jmp
lods
insb
cmp
xchg
repnz
mov
adc
shll
repz
scas
stc
dec
push
fstpt
jnp
cwtl
inc
mov
jno
outsb
lock
stc
lods
sar
mov
hlt
out
add
fldt
fwait
enter
popa
sub
mov
fdivrl
inc
jno
hlt
dec
jg
and
inc
popa
and
std
shlb
fmuls
adc
gs
lock
ja
push
add
sbbb
mov
subb
and
push
dec
mov
sbb
inc
outsb
in
dec
je
mov
lock
aad
add
jmp
pop
sbb
aam
addl
shrb
inc
jo
adc
js
pop
into
pusha
cltd
cmp
loop
cmp
sbb
loop
add
dec
push
mov
cmc
adc
fildl
mov
aad
mov
out
pop
and
and
or
inc
imul
lods
add
cmp
iret
inc
or
je
mov
sbb
inc
pop
and
aam
enter
pop
sahf
dec
imul
mov
add
inc
aam
insb
imul
mov
mov
adc
js
mov
push
xchg
mov
icebp
or
movsb
scas
in
movsl
outsl
mov
mov
xor
xor
or
dec
pop
sub
pusha
xlat
cmp
sub
movsb
sbb
loop
hlt
push
outsb
push
sub
in
rcll
dec
insb
add
cld
rorb
or
mov
lock
jno
fsubs
movl
sarb
mov
cwtl
pusha
jnp
xchg
mov
push
addr16
add
or
lret
push
mov
inc
or
mov
lods
mov
or
xlat
idivl
leave
or
arpl
mov
push
xor
sbb
mov
mov
adc
jbe
in
rol
bound
test
and
aam
xor
sbb
dec
pop
cld
add
arpl
movsb
pop
or
cmp
mov
lret
ljmp
pop
add
pop
push
mov
adcb
stos
scas
add
lea
sahf
push
rolb
sbb
ljmp
enter
add
fstpl
cltd
cmpsl
mov
xor
fdivl
add
repnz
add
add
out
push
test
dec
ss
sub
shll
fadds
call
fistpl
cmp
cmp
enter
les
movsb
les
mov
pop
shr
mov
movsb
xchg
test
movsb
pop
pop
daa
int3
mov
jno
jae
mov
sti
mov
loopne
dec
cwtl
rolb
fstpt
shll
jb
xor
push
pop
xor
push
cmp
movl
dec
iret
add
mov
xor
xor
dec
add
or
adc
sahf
or
fdiv
lods
or
push
shl
out
mov
push
neg
das
xchg
in
jl
in
cwtl
rorb
mov
xchg
out
xchg
adc
push
call
jae
pop
clc
cmp
imul
repnz
mov
push
js
pop
out
stc
aas
test
shlb
loop
sbb
cmpb
pop
cmp
movsb
and
pop
sub
xchg
cmp
ret
mov
cmp
push
jecxz
adc
add
addr16
pusha
fldl2t
cmpb
sbb
add
xchg
nop
add
sbb
fsubrs
or
inc
out
push
mov
mov
dec
or
dec
das
rclb
push
and
jl
xchg
repnz
rorl
or
push
sub
fcomps
add
jp
rclb
scas
negl
and
je
pusha
pop
subl
es
and
mov
call
add
xor
xor
xor
enter
sub
rclb
xor
out
xor
nop
lea
nop
in
xchg
sub
fimuls
cvttps2pi
inc
add
icebp
add
fwait
mov
call
xor
add
out
das
mov
enter
mov
lock
adc
call
lock
andb
xor
or
mov
shlb
pop
jl
inc
lea
mov
std
pop
mov
hlt
repnz
mov
inc
cmp
jmp
leave
add
int3
add
mov
movsb
cs
and
adc
loopne
push
arpl
mov
loope
shlb
aam
mov
imul
cmp
stc
lds
xchg
call
rclb
mov
dec
add
js
scas
and
call
and
push
sub
pushf
cmp
mov
movsb
push
cmp
jo
add
mov
aad
push
dec
ds
pop
das
das
jp
add
jb
in
push
pop
add
aam
cmp
add
sbb
pop
jno
add
jne
scas
jb
push
enter
cmpsl
mov
add
mov
test
adc
int3
add
mov
xor
icebp
dec
or
inc
cs
cwtl
add
pop
adc
das
loope
or
shlb
movb
mov
pop
hlt
fs
mov
ret
dec
adc
pop
mov
insl
cmp
addl
add
insl
mov
mov
adc
addl
mov
test
lods
fcmovbe
sti
enter
lret
xchg
test
ljmp
mov
pop
cmc
adc
mov
nop
mov
push
ljmp
or
imul
loopne
mov
and
push
cmp
test
mov
scas
test
inc
rclb
int
andb
out
in
pop
adc
cmp
repz
test
jecxz
add
jp
pusha
insb
mov
mov
push
mov
lcall
repnz
dec
clc
mov
push
or
dec
inc
addr16
fdivs
sbb
add
stos
inc
xchg
pop
sub
cmp
mov
repnz
imul
mov
ret
push
loope
add
aam
or
movsl
adc
rclb
ret
dec
out
aad
int3
inc
shr
cmp
jp
inc
adc
pop
sarb
dec
lods
sarb
loope
adc
rorb
adc
mov
pop
mov
call
lock
les
adc
pop
rorb
shll
mov
addb
pop
mov
or
ja
cmp
clc
add
pop
mov
and
push
out
fucomip
pop
test
outsb
sub
push
cmp
ret
mov
les
xchg
lods
cmp
loopne
push
add
insb
mov
mov
and
scas
xchg
jl
inc
subb
aam
jg
cli
cs
adc
adc
lock
pop
lahf
lea
adc
add
mov
lods
inc
pop
stos
add
js
inc
out
jno
icebp
dec
sbb
cmp
dec
xchg
add
in
add
adc
test
faddp
call
lock
daa
js
int3
add
hlt
outsl
loope
cmp
add
mov
or
pop
cmp
sbb
cmp
sub
and
pop
test
inc
repnz
xor
pop
adc
push
pop
inc
mov
xor
and
iret
loope
xor
pop
shrb
adc
push
sahf
clc
fisubrl
cld
dec
pushfw
pop
insl
mull
call
pusha
dec
push
popf
test
inc
subb
dec
sub
xor
inc
mov
je
mov
in
and
aam
pslld
push
push
sub
sarb
mov
mov
lcall
fimull
sbb
pop
xchg
outsb
and
and
push
lret
mov
scas
adc
add
jae
add
mov
push
add
rorb
mov
shrb
test
addb
mov
dec
testb
cmpsl
xchg
jmp
imul
cmp
sbbb
insl
jge
frstor
dec
dec
pop
loopne
push
enter
sarl
jecxz
loope
sbb
and
das
dec
rol
ja
lods
mov
mov
rol
cld
sub
mov
stos
xchg
jg
push
mov
jecxz
mov
inc
pop
mov
lcall
adc
in
pop
pushf
pop
lods
shr
cwtl
test
add
add
sbb
out
push
or
int3
outsb
adc
cli
or
jl
push
adcb
jno
jg
cmp
sub
clc
and
ror
movsb
jne
hlt
ficoms
pop
mov
xor
xchg
pusha
or
stc
inc
add
mov
or
fwait
inc
icebp
ja
test
and
jp
call
int3
popf
fcoml
inc
addl
out
mov
adc
mov
lock
push
pop
mov
and
sti
ret
call
sub
popa
clc
fwait
arpl
xor
inc
pop
xchg
and
dec
lods
aaa
pop
test
sub
pop
add
mov
ret
and
loop
je
popa
adc
cmp
int
pop
sti
fimuls
in
fldl
mov
lods
mov
xchg
and
stos
fwait
inc
loope
je
stos
lcall
xor
lcall
and
in
pop
push
mov
lahf
adc
fdivs
je
add
mov
js
cmp
pop
mov
lods
pop
inc
shlb
fldcw
dec
pop
jg
sbb
sub
sub
inc
loopne
push
mov
les
adc
mov
cmp
imull
add
add
sbb
xor
add
inc
add
jmp
loop
scas
xor
pop
cmpsl
inc
add
inc
fadd
in
push
leave
rcl
xor
test
add
mov
push
adc
adc
xchg
out
adc
mov
xchg
mov
push
loope
pushf
out
lcall
mov
jmp
in
daa
in
adc
fstpt
pop
inc
or
mov
test
cld
cmp
insl
in
xchg
out
or
push
ret
or
cmp
nop
cld
add
add
xchg
fsubrs
je
call
out
and
xchg
aas
repz
cwtl
mov
and
movswl
out
mov
iret
and
dec
loopne
jl
dec
add
adc
inc
mov
or
mov
jns
dec
in
cmp
loopne
dec
xor
and
adc
cltd
outsl
int
cmp
fs
dec
test
js
jo
mov
xor
lahf
into
mov
es
adc
repnz
lds
ret
xor
and
popa
inc
insl
shll
dec
lods
and
mov
cwtl
jmp
jl
mov
jnp
pusha
jb
inc
ja
push
mov
aam
mov
pmullw
xchg
dec
or
pop
negl
repnz
lret
mov
call
adc
aaa
adc
push
sbb
adc
inc
push
adc
and
pop
and
in
sbb
sub
pop
fwait
rorb
fistpll
mov
sbb
dec
jge
inc
pop
imul
aaa
jo
icebp
mov
loop
add
lods
adc
call
enter
je
cmp
push
test
out
test
outsb
cwtl
dec
pop
push
aam
imul
mov
shlb
inc
pop
xchg
and
shrb
sub
mov
sti
cmp
shl
mov
add
clc
daa
push
test
pusha
jns
or
sub
dec
xor
dec
add
daa
xor
mov
aaa
fstpl
arpl
test
pop
pop
xor
pop
lcall
test
add
in
pop
loopne
mov
mov
je
mov
scas
inc
dec
adc
sub
push
cmp
or
xchg
or
push
ds
mull
pusha
pop
and
ljmp
int3
push
pop
out
cld
mov
or
mov
inc
push
sub
inc
ja
ret
je
call
dec
add
fwait
cmp
es
sbb
pop
add
test
pop
call
ret
ja
lods
sub
add
xor
or
popf
fcoml
aad
sub
xchg
fimull
lock
nop
popf
pusha
or
cmp
cwtl
xchg
sbb
and
adc
pushf
jmp
pop
loope
sbb
hlt
inc
push
sub
adc
rorb
jg
cmpsl
mov
adc
pop
mov
sarl
sub
push
fistps
sub
adc
and
mov
inc
cmp
pop
inc
inc
cltd
sub
lods
pusha
jp
add
ffreep
idiv
mov
outsb
add
std
mov
push
lcall
and
mov
test
shrl
dec
add
je
subb
lock
xchg
int
rcrb
xchg
clc
mov
xor
push
mov
shrl
lods
or
or
ja
mov
popf
leave
in
btc
jno
inc
pop
in
xchg
lods
mov
mov
inc
inc
pop
into
add
popf
or
aaa
jl
daa
lods
mov
jo
stos
and
flds
mov
add
lea
lock
or
les
xchg
addb
pop
mov
pop
in
mov
cmp
scas
cs
nop
andl
cwtl
and
test
inc
ja
je
adc
in
cld
xchg
pop
inc
xchg
dec
orl
xchg
inc
fimuls
jecxz
mov
std
add
adc
idivl
xor
cmp
pushf
add
enter
xor
dec
pop
in
addr16
dec
add
xchg
ret
mov
add
ret
aas
inc
je
adc
and
or
rcrb
loopne
nop
insb
je
jl
insb
add
mov
fnstsw
add
cmpsl
das
sti
mov
add
xchg
xchg
push
sbb
dec
mov
adcb
popa
xchg
adc
add
shl
das
pop
aas
inc
test
pop
cli
aam
add
add
or
jmp
inc
cmpsb
mov
and
sar
jo
or
add
inc
mov
scas
cmp
test
mov
dec
jb
hlt
mov
cmp
mov
or
mov
xchg
add
cmc
jp
shlb
mov
jecxz
movsb
inc
and
jl
lret
inc
aad
jo
sub
xchg
dec
mov
aam
pop
add
adc
or
inc
bound
scas
and
arpl
sahf
js
mov
scas
mov
adc
mov
int3
mov
les
push
fwait
cmp
xchg
fstpl
inc
mov
mov
xchg
ss
jo
cmp
daa
roll
loopne
rorb
lahf
inc
test
imul
mov
inc
and
test
aas
sbb
pop
mov
ds
mov
loop
pop
incb
mov
pop
sbb
sub
fmul
loope
ljmp
shlb
shll
xchg
mov
pushf
adc
sbb
into
dec
fldlg2
xchg
mov
mov
mov
xor
cld
add
aas
enter
cltd
xor
mov
fidivrl
add
out
xlat
add
fs
xorb
add
add
push
xchg
or
pop
push
arpl
in
hlt
aas
adc
enter
lret
shl
jno
inc
sbb
mov
sub
add
icebp
pop
mov
jnp,pt
xchg
cmp
cmpl
les
mov
int3
sub
sub
xchg
je
xor
cs
bound
js
bound
cwtl
pop
sub
sti
xchg
jo
ret
mov
or
cmpsl
loopne
xchg
pusha
fsubrs
andb
dec
jbe
addr16
or
pop
call
stc
inc
or
stos
add
lods
lds
insl
pop
adc
mov
jge
mov
xlat
pop
add
jp
loop
and
push
repz
add
push
aam
jge
xor
mov
loope
in
nop
dec
mov
add
je
pop
sti
mov
dec
scas
arpl
shrb
pushf
out
or
add
repz
dec
sbb
cmp
xor
stos
mov
and
jl
ficomps
add
mov
bnd
dec
xor
stos
or
call
mov
daa
int
clc
cmp
lds
inc
adc
je
lods
out
les
mov
scas
add
add
inc
adc
mov
lea
dec
add
xor
push
mov
enter
test
mov
or
add
and
pop
icebp
inc
repnz
add
jbe
ja
xchg
pushf
adc
fprem1
xchg
jg
clc
mov
or
mov
jbe
in
inc
or
mov
pop
push
jne
mov
inc
movsl
add
pop
je
jbe
insl
add
mov
adc
sbb
fmul
pop
cmp
and
jg
dec
shl
ficoml
aam
push
mov
rcrb
imul
push
mov
pop
mov
and
sbb
push
ds
and
imul
rorb
fcoml
jae
sub
shlb
mov
jg
test
and
arpl
mulb
adc
xor
mov
mov
mov
mov
add
mov
icebp
mov
mov
cmp
cwtl
pusha
pop
mov
add
incl
push
addb
adc
add
mov
adc
sbb
xor
fdivrl
push
nop
les
xchg
shlb
or
dec
push
shl
call
adc
mov
loop
xor
adc
mov
leave
pop
mov
or
call
addb
jmp
pushf
adc
pop
mov
int
pusha
fdivl
mov
adc
mov
lods
in
mov
aam
scas
add
and
ljmp
icebp
pop
mov
xchg
mov
dec
shlb
add
adc
int3
jbe,pt
adc
cmp
pushf
dec
mov
fs
je
xchg
lock
or
shlb
push
adc
add
dec
lds
hlt
pusha
xchg
int
pusha
inc
dec
cmp
call
pop
jl
add
daa
jns
add
mov
push
fcoms
push
sbb
scas
xor
push
and
mov
add
mov
add
inc
mov
or
loop
js
push
jp
insb
pop
mov
adc
mov
shll
lods
push
xor
dec
mov
fcoms
in
std
nop
inc
es
xor
add
pop
roll
outsb
add
sbb
stos
fwait
mov
divb
incl
xorb
pusha
mov
cmp
negl
loop
or
xor
loopne
scas
adc
pop
mov
loopne
mov
inc
cmpsb
sub
fmuls
lock
cs
mov
or
pop
aam
push
mov
cwtl
jo
imul
sbbl
jnp
adc
inc
mov
divl
in
jecxz
mov
add
pusha
push
mov
std
mov
lds
insb
jecxz
lock
andb
mov
push
mov
loopne
daa
dec
add
sahf
shlb
rcrl
fs
fcmovne
dec
shlb
js
pop
in
jle
fstpt
push
fdivs
or
add
jno
stos
daa
cmp
add
sbb
fidivs
push
inc
das
xorl
xchg
adc
mov
stos
scas
mov
fstpt
push
jae
add
mov
add
mov
cmpl
loope
addr16
js
sub
add
mov
les
and
nop
add
pop
ficompl
add
cmp
mov
xchg
pop
inc
or
cmp
flds
addb
arpl
add
pop
imul
cmpsb
jne
mov
in
hlt
test
sbb
jecxz
scas
addr16
fs
pusha
in
sbb
sub
jecxz
aas
mov
pop
sub
cmp
pop
cld
sar
dec
aas
or
stc
mov
push
push
lods
call
outsb
bound
rcr
push
lock
stos
cmpsb
mov
jno
or
add
jmp
xchg
sub
and
mov
repz
das
pushf
sub
mov
cmp
popf
rep
add
inc
insl
sub
add
lock
loopne
sarl
add
loope
shl
mov
mov
leave
gs
out
mov
aaa
movsb
add
push
inc
out
cld
xor
fidivs
hlt
arpl
sbb
jne
push
inc
cmc
loop
adc
pop
popa
nop
pusha
jle
mov
pop
les
adc
mov
push
mov
clc
or
sub
add
es
fidivrl
addr16
bound
sub
test
sub
movsl
sarb
add
or
mov
push
loopne
and
adc
jbe
aas
inc
repnz
rolb
in
adc
and
fisttpl
pop
lods
push
rcl
mov
or
add
cmp
fwait
ljmp
adc
test
pop
inc
popa
call
and
cld
push
call
in
loopne
push
ffreep
pop
pusha
arpl
adc
enter
xchg
fsubs
and
popa
frstor
orb
pop
add
adc
lods
int
gs
lret
fwait
leave
xchg
push
sbb
icebp
sub
not
imul
hlt
add
cmp
push
and
aam
mov
adc
clc
insb
adcb
sub
add
push
mov
ret
mov
add
repz
popa
rcll
jbe
movsl
sarl
cmp
jmp
enter
add
and
cmpsl
scas
mov
mov
les
ljmp
add
cs
popa
incl
rcrb
cmp
push
aam
add
popa
fcompl
add
inc
or
jno
push
les
xor
jno
flds
loope
movsl
mov
in
inc
sub
push
mov
fbld
pop
jbe
inc
pop
pop
sbb
cltd
rolb
notl
adc
clc
xacquire
movsl
dec
jmp
pusha
daa
mov
xlat
out
and
push
mov
insb
hlt
add
jne
repz
cmp
dec
dec
shl
mov
fsubl
or
out
addl
call
push
mov
mov
cmp
cmp
pop
stc
and
cs
dec
inc
cmpsb
shl
jns
test
popf
or
mov
flds
movsb
push
jb,pn
les
cmc
fs
xor
xchg
mov
add
gs
add
mov
loope
or
sub
mov
cmpsb
mov
cmpl
andb
into
pop
xor
mov
stc
and
mov
negl
popf
les
add
rcrb
cmp
hlt
lea
push
add
jmp
jp
inc
loopne
ss
scas
or
mov
xchg
and
notb
inc
stos
shll
push
inc
add
xchg
out
lcall
add
dec
mov
adc
jp
pop
cli
ffreep
js
adc
je
test
pusha
mov
cld
ljmp
sbb
sarb
xor
mov
leave
ljmp
pop
popa
test
jno
test
insb
add
push
popa
pusha
sbb
imul
xor
imul
cli
nop
push
push
aad
and
xor
enter
popf
jns
pop
add
jg
pop
faddl
sbb
out
pop
incb
es
dec
xchg
mov
push
pop
out
xor
rcr
add
movb
sub
test
pusha
popa
mov
cmp
mov
mov
push
sti
stc
loopne
jns
das
jno
adc
mov
test
or
or
pusha
push
jb
add
popa
call
xchg
mov
xchg
es
xor
cmc
enter
push
xor
sbb
sub
pusha
pop
push
or
mov
xchg
das
pop
mov
das
sbb
testb
push
jg
aad
inc
pop
add
sbb
std
loopne
rorb
xlat
or
sub
pop
popf
mov
and
orb
xchg
sub
jmp
in
mov
outsb
push
mov
mov
xor
pop
add
mov
fxam
or
inc
add
mov
or
jge
cmp
out
xchg
or
ret
cmc
and
into
clc
push
sti
pop
pop
popa
cmp
es
add
pop
push
cmp
cmp
fists
aam
jl
add
pop
arpl
add
into
pop
int3
jns
cmp
scas
add
sub
popa
xchg
cmc
in
push
shll
mov
mov
call
pop
and
add
nop
out
pop
mov
inc
dec
jmp
inc
jp
and
cmc
or
outsl
dec
cmp
call
xchg
inc
adc
dec
sub
lea
imul
nop
popf
dec
push
cmp
icebp
jmp
outsl
or
and
cmp
jb
nop
in
sbb
fs
dec
pop
int3
sbb
shlb
mov
push
push
add
adc
mov
dec
pop
pusha
push
popa
in
lea
test
imul
or
add
jge
shlb
jmp
fldl
cmp
nop
sbb
mov
xor
jecxz
mov
cmp
xor
roll
cmp
xchg
loopne
pop
sub
add
out
ss
add
or
sbb
sub
adc
push
test
loopne
pop
shrb
mov
xor
out
pop
add
mov
pop
pop
pusha
sbb
andl
mov
loop
mov
push
shlb
lcall
jle
stos
jg
out
or
fsub
sbb
inc
ja
ljmp
pusha
pop
aad
xor
sahf
fisttpll
inc
mov
xchg
xchg
jmp
les
sarl
clc
mov
ds
cmp
jb
rorl
js
sub
or
push
adc
push
push
add
aaa
mov
lahf
hlt
mov
hlt
xor
addb
int
divb
mov
inc
add
daa
fisubrl
nop
minps
and
mov
pop
call
shlb
push
add
mov
lret
test
cmpsb
add
or
ret
inc
aaa
xor
sbbl
push
xchg
sub
call
push
mov
add
lret
out
pop
xor
and
add
mov
negb
rolb
ljmp
adc
jo
jbe
mov
inc
sub
mov
push
add
clc
push
jg
repnz
pop
and
lds
test
cmc
cmp
jo
mov
push
adc
jae
cmp
xor
xchg
or
dec
sbb
and
rorb
mov
test
jg
jo
dec
js
imull
or
sub
push
cmpb
add
inc
jns
xchg
out
loopne
cld
push
nop
pop
mov
lret
xchg
dec
push
adc
push
pop
out
loop
imul
sbb
and
pusha
sub
ja
andb
fcomps
addr16
add
dec
push
and
add
inc
es
xchg
or
pop
xchg
sahf
test
ss
dec
sub
sbb
adc
lcall
pop
mov
add
add
pop
mov
or
sbb
jns
xor
or
popa
clc
mov
out
jae
add
cld
xchg
xchg
pushf
add
sub
lea
mov
xor
cld
push
mov
xchg
lods
jecxz
sbb
jle
pop
shl
shrb
xor
or
dec
mov
or
test
es
xchg
and
fcomi
xor
mov
or
or
pop
loope
clc
clc
jge
add
jb
xchg
dec
pop
adc
enter
or
mov
sbb
or
sbb
add
jge
add
lahf
test
outsb
mov
mov
add
mov
sbb
dec
or
mov
movswl
ljmp
data16
xor
scas
in
loop
mov
nop
mov
mov
add
pop
js
push
push
xchg
cltd
sti
les
dec
push
cltd
maskmovq
idivl
mov
and
cmp
mov
leave
daa
add
nop
fadds
int
jb
adc
add
pusha
int
aaa
pop
push
outsl
push
jle
leave
and
popl
inc
xor
pop
xchg
adc
adc
scas
leave
add
lea
shlb
clc
incl
mov
push
pop
and
or
subb
pop
ret
or
adc
cmp
pop
test
xor
std
inc
mov
inc
ljmp
xor
or
pusha
dec
and
stos
mov
lret
pop
adc
xor
sub
mov
add
push
mov
popf
loop
xor
dec
pop
xchg
popf
shrl
push
push
mov
push
ja
jecxz
int
mov
mov
loop
add
cmc
mov
nop
sahf
add
sub
xor
nop
andb
mov
iret
jmp
aad
das
sub
xchg
fists
packssdw
cmc
mov
popf
popa
adc
int3
insl
cmpb
idivl
out
loope
mov
xor
sub
jmp
push
sub
inc
pop
cli
roll
sbb
loop
sarb
addb
pusha
mov
jo
mov
dec
aad
add
cmp
mov
and
xchg
add
cmp
push
cmpl
adc
enter
adc
pushf
bound
in
pop
aam
call
adc
loop
sbbb
xchg
mov
cmp
rorl
orb
sub
lahf
mov
roll
sbbl
sbb
sub
xchg
add
pop
mov
or
cli
pop
cmp
xchg
cmp
sbb
jmp
clc
xor
filds
mov
and
ljmp
or
sub
lea
mov
adc
cmp
addb
mov
jg
cmp
scas
cli
xor
popf
dec
das
xor
leave
sbb
or
dec
out
jbe
fisubrs
out
xor
bnd
add
mov
dec
pop
jp
add
sti
and
push
sub
mov
cld
mov
pop
mov
mov
aam
xor
jae
or
and
sub
fildll
icebp
adc
sub
mov
add
xchg
dec
mov
shlb
pop
and
add
repnz
jge
or
xor
roll
pop
xchg
hlt
repnz
add
xor
aam
xchg
lock
movsl
lahf
repnz
pop
outsb
aas
je
sbb
push
cmc
repnz
rcrl
or
call
mov
fidivrl
test
adc
fs
dec
add
scas
xor
out
inc
das
clc
js
jp
sbb
add
or
dec
xchg
mov
pop
push
mov
push
fimuls
cmp
xchg
xchg
cmp
pop
idivb
and
add
gs
mov
push
lock
push
and
sbb
into
pop
movsb
fisubrs
adc
pop
rorl
or
fdivrl
jo
jmp
loope
mov
mov
xchg
cmp
ss
sub
cmp
xor
sbb
notb
cmc
xchg
lea
cmpsb
add
dec
movsb
jbe
test
mov
je
cmpsb
sbb
pop
adc
push
sub
jbe
loope
stos
pop
hlt
xor
inc
mov
pusha
mov
jbe
add
repnz
jb
push
add
jb
inc
aam
xor
testl
add
jo
and
xchg
dec
and
adc
data16
das
test
jmp
xchg
mov
pop
xchg
push
ds
sub
xor
es
push
out
inc
add
push
dec
call
fs
lret
inc
insb
push
ficoml
add
push
jb
in
jns
adc
jl
adc
inc
push
daa
or
test
push
into
aaa
jge
popa
mov
push
push
sub
sbb
sbb
ss
test
or
and
fs
sbb
adc
dec
cmp
adcb
popa
mov
pop
mov
and
add
pusha
sub
outsb
test
xor
fnsave
inc
adc
imul
popf
sbb
shl
jo
push
bnd
jecxz
lods
xor
pop
add
xchg
add
pop
cmp
or
loopne
sbb
repz
xor
push
nop
xchg
and
jmp
lcall
cmp
jl
push
pusha
lods
movsl
sub
dec
mov
jns
add
and
or
or
sub
jno
and
dec
jae
test
dec
dec
add
sub
icebp
outsl
ljmp
fsubs
mov
and
js
adc
push
push
or
iret
pop
sbb
rolb
mov
fcmove
mov
inc
jns
mov
inc
scas
and
das
jae
mov
push
nop
jp
pop
movsl
nop
rdpmc
push
jae
add
fxch
xor
sahf
sub
rolb
into
jb
adc
lods
nop
xor
enter
xchg
inc
lahf
pop
bound
sbb
pop
aas
xchg
cmp
daa
mov
push
pop
sbb
cmp
sub
loop
rolb
repz
in
fldcw
or
and
mov
mov
mov
pop
jns
frstor
inc
mov
pop
mov
in
clc
push
xor
jno
or
mov
mov
pushf
lcall
cmpsl
daa
dec
dec
ret
or
in
and
sbb
leave
mov
daa
das
je
cs
and
add
mov
aad
mov
jae
or
inc
or
adc
dec
add
outsb
xchg
adc
ficomps
mov
adc
movsl
add
adc
hlt
int3
sbb
add
adc
or
inc
pop
adc
sub
push
adc
cmp
mov
pop
stc
pushf
inc
jmp
mov
pushf
test
xor
and
adc
mov
push
cmp
sbb
sbb
outsb
dec
add
add
cmp
add
ja
fwait
pop
jae
pop
clc
xor
add
jecxz
push
ljmp
add
lds
mov
add
mov
adc
popf
dec
cmp
testb
or
cmp
or
popa
repz
inc
shrl
loopne
push
push
pusha
out
cwtl
lock
popa
push
ficoml
stos
mov
imul
lods
or
int
and
pop
mov
jno
inc
and
mov
daa
adc
icebp
jns
pop
notl
movsl
inc
sub
xchg
dec
fs
mov
outsl
add
add
daa
popf
test
push
lret
add
xchg
mov
xor
add
xlat
push
nop
pusha
sub
mov
dec
popa
popf
cmp
test
adc
stc
loope
imul
sub
popa
sub
enter
and
and
lcall
dec
insb
xlat
xor
shll
inc
and
das
mov
jmp
jg
pusha
repz
xor
mov
popa
xchg
sbb
inc
lock
mov
insb
xor
ficoms
ret
incb
loop
jle
lods
in
sub
nop
jle
popa
cmp
into
xor
mov
clc
push
push
lret
add
movsb
repz
push
mov
dec
or
out
adc
mov
adc
iret
lret
xchg
lret
cmpb
mov
xchg
cmp
dec
mov
mov
lea
fidivl
sbb
push
cmp
lock
sbb
adc
mov
mov
add
in
out
pop
dec
or
das
icebp
pop
dec
jecxz
jmp
arpl
mov
scas
xor
adc
lods
mov
xchg
lret
out
fidivs
mov
ja
aam
jno
pop
mov
push
add
pop
imul
jecxz
add
mov
clc
mov
jmp
mov
stc
or
pop
xor
xchg
subb
pop
dec
in
cmp
xchg
and
pusha
shlb
ret
xchg
shrl
xchg
push
pop
add
nop
call
sbb
add
shrb
filds
adc
in
popa
std
jg
lods
rorb
push
push
jns
out
or
or
movsb
xchg
cltd
pop
add
mov
pusha
and
push
or
loope
pop
insb
and
mov
shlb
leave
daa
imul
xchg
cwtl
lds
pop
mov
movsb
cld
pushaw
mov
jo
or
push
xchg
pop
jnp
adc
repz
mov
mov
adcb
ss
incl
mov
cli
lret
ss
mov
xchg
lods
xchg
xor
and
mov
out
orb
pusha
add
je
sub
sub
popa
roll
add
and
push
mov
mov
mov
mov
inc
and
push
cmp
cli
or
dec
pop
push
aad
lods
jmp
repnz
js
xor
dec
xchg
lcall
adc
orb
push
add
pop
and
jo
dec
add
dec
xchg
aas
pop
cs
jmp
pop
or
adc
lea
pop
push
test
or
cs
lret
in
add
nop
mov
sbb
int
mov
adc
xor
mov
movsl
or
popf
int3
fidivl
adc
jne
repnz
and
or
aas
test
cmp
xchg
rcr
inc
int3
adc
andl
sti
imul
dec
push
icebp
loopne
jle
mov
xor
xchg
pop
cmc
sub
add
dec
mov
test
mov
das
and
jmp
aam
out
push
dec
shlb
es
jl
adc
mov
cs
jp
js
pop
pop
jp
add
scas
pop
push
out
pop
adc
stc
js
mov
js
roll
and
mov
cs
clc
sub
rolb
cmpsb
and
xor
dec
sub
sbb
adc
repz
cmpsb
mov
shll
cmp
mov
mov
les
ljmp
dec
add
mov
les
inc
sbb
aam
and
sti
push
lea
or
pop
das
js
inc
in
pop
sbb
hlt
mov
jo
cwtl
and
xor
insb
scas
out
mov
fsubl
enter
stos
mov
xor
mov
lea
add
sti
dec
jns
sub
adc
mov
add
test
sbb
pop
jne
jno
pop
mov
mov
repnz
add
decl
outsb
pop
add
mov
daa
jg
pop
insl
mov
pusha
imul
or
loopne
jns
inc
pop
push
mov
inc
sbb
shlb
mov
fbld
fiadds
std
add
adc
insl
jbe
out
xchg
mov
scas
jne,pn
test
cmc
dec
pop
clc
pop
outsb
jmp
mov
pop
adc
shlb
sbb
dec
jae
xlat
dec
inc
shlb
aas
or
add
fisubs
xchg
aad
cmpsl
js
xchg
jb
in
nop
idivb
out
sbb
xchg
xor
mov
add
push
fdivp
inc
pop
scas
push
mov
xor
sbbl
clc
add
in
ja
add
pop
enter
jbe
or
cmp
mov
add
push
scas
arpl
lock
jg
int
inc
flds
scas
or
inc
add
lods
and
xor
sub
pop
lods
adc
in
rcl
sbb
jle
mov
push
out
or
mov
adc
inc
or
pop
add
scas
stos
or
lcall
adc
mull
sub
popf
cmp
pusha
je
sub
mov
sbb
jecxz
adc
and
or
insl
roll
mov
aad
in
dec
xchg
inc
rorb
sbb
sti
and
cmp
xchg
push
mov
add
out
pop
jge
cwtl
lock
cli
lcall
sbb
mov
imul
lods
mov
and
loop
pushf
pop
sub
arpl
add
push
jae
push
pop
hlt
fs
ret
and
pop
scas
adc
sub
es
hlt
jp
pop
jno
sub
sbb
sub
pushf
mov
jae
movsb
popa
mov
pop
cld
mov
xchg
mov
add
out
fwait
pop
int3
rorb
pop
js
add
cwtl
adc
jns
ljmp
loop
sbb
mov
add
sahf
pop
in
and
cli
daa
add
pop
pop
loop
adc
lds
mov
xchg
repz
scas
push
and
stos
fxch
hlt
rcrb
sub
mov
lods
or
mov
iret
push
outsb
in
xchg
xor
sbb
pop
mov
xor
imul
cwtl
jp
adcl
jecxz
jne
dec
mov
sub
xchg
push
push
cmp
sbb
xor
subl
jae
xor
mov
pop
push
push
jb
and
popa
dec
xchg
sub
out
outsl
clc
and
call
pop
leave
sbb
je
jmp
push
xor
adc
aad
push
add
in
iret
jge,pn
add
xchg
mov
dec
scas
add
int
push
xchg
in
enter
dec
in
add
sahf
pusha
lds
sbb
cmpb
add
imul
jo
mov
mov
mov
dec
add
sub
je
adc
adc
mov
sub
mov
and
mov
or
pusha
add
fs
pushf
sub
aad
or
push
jae
bound
and
xchg
adc
popa
adc
addl
pushf
push
dec
pop
int3
or
inc
hlt
push
jle
xchg
xchg
pop
or
sbb
mov
xchg
loope
xchg
movsl
movzwl
int
or
mov
shlb
scas
dec
out
fistpl
pop
enter
inc
cli
ds
add
and
mov
and
push
scas
sub
pop
xchg
mov
mov
jb
or
pop
mov
and
push
xchg
sbb
dec
es
push
shrb
sti
pop
xchg
imul
out
jle
aaa
mov
add
mov
fdivl
das
adc
out
dec
cli
loopne
adc
sti
popf
stos
sbb
and
addr16
jge
lea
insl
and
mov
popa
push
pop
cli
inc
in
imul
sbb
bnd
push
jo
out
mov
cmc
jmp
fnstcw
sub
aam
jmp
lods
out
add
and
mov
pop
cmp
push
lods
jae
or
movl
xchg
lret
add
add
std
enter
dec
jmp
xor
test
outsl
std
push
xchg
inc
imul
push
mov
cmp
popf
xor
movsl
pop
mov
stc
and
pop
add
pop
xlat
sbb
lahf
dec
insb
add
sbb
cmpb
aam
add
jmp
ret
xor
sbb
dec
jo
shll
cmc
add
in
adc
lret
pop
mov
sub
push
cmp
js
mov
cmpsl
sub
fisttpll
dec
incl
pusha
pop
mov
jg
cmp
pop
add
cwtl
sub
and
mov
mov
cmc
push
das
sbb
sti
add
xchg
cmp
sar
jecxz
dec
shrl
rcrb
add
inc
ror
hlt
out
roll
cmp
ss
in
leave
pusha
sbb
inc
mov
sbb
adc
adc
dec
xlat
cmpl
pop
test
jbe
xchg
mov
xorl
cmovb
jle
mov
sbb
jb
cld
mov
sbb
lret
in
jg
cwtl
icebp
add
mov
ljmp
ret
cmp
xor
mov
jmp
lahf
mov
push
mov
ficomps
dec
into
testl
sbb
loope
add
jp
fcmovnu
add
pop
in
pop
xchg
xlat
gs
test
xor
mov
inc
mov
fildll
add
mov
jb
jp
shlb
iret
mov
sbbl
int3
lods
push
les
and
dec
lock
inc
pop
inc
and
pop
push
mov
sbb
pop
push
nop
mov
cmp
movsb
push
dec
arpl
add
lret
add
add
jns
lods
cmp
test
mov
in
xor
adc
sub
inc
frstor
shll
add
clc
add
mov
scas
pusha
cld
ret
sub
mov
xor
jne
jns
sub
rcrb
mov
mov
pusha
and
mov
test
pshufw
mov
adc
cmp
add
mov
inc
sub
pop
mov
jo
insb
bound
mov
xor
sahf
pop
movsl
xlat
dec
pusha
ret
out
sub
std
or
add
gs
push
jmp
into
shlb
pop
out
sbb
in
imul
inc
xor
inc
push
add
jnp
dec
fs
and
sbb
jl
mov
add
add
xor
xchg
repnz
xor
push
cmp
xorb
imul
sbb
decl
sbb
out
sub
cmp
mov
jbe
out
lcall
cmpsb
in
test
sbb
xor
pcmpeqw
push
loope
dec
add
xor
pushf
ljmp
dec
lods
xor
mov
push
mov
pusha
lret
add
fisttpl
push
adc
jns
mov
sub
sahf
push
pop
xor
mov
jle
add
fldenv
call
add
fiaddl
mov
shll
cmp
cli
add
andb
inc
sbb
stos
adc
sbb
movsl
loope
xor
call
movsb
cwtl
js
mov
xor
mov
je
xor
mov
test
or
pusha
popf
fs
mov
xor
cwtl
cltd
pop
inc
addr16
push
sbb
repz
dec
enter
pop
imul
dec
cmpsb
pop
dec
add
imul
sti
shlb
push
fsubl
xchg
mov
cmp
pop
push
loopne
lds
in
xor
inc
scas
push
xor
in
enter
sahf
mov
xchg
es
aaa
jnp
mov
push
nop
xchg
dec
add
xchg
les
add
fdivs
sub
popa
cmp
int3
adc
xchg
daa
pop
add
iret
icebp
fcompl
movsl
cmp
pushf
sbb
in
add
lds
adc
orb
pop
int3
xor
xchg
es
xchg
jno
rorb
in
adc
jae
xchg
ss
add
push
test
stos
or
daa
sbb
in
jae
es
or
sbb
in
cmc
call
fdivrl
inc
cwtl
and
cmp
loop
loopne
ret
mov
in
insb
mov
or
dec
and
add
in
mov
insb
jmp
add
icebp
daa
add
mov
mov
xchg
std
popa
xor
dec
sbb
push
jecxz
jno
ss
cs
jnp
sbb
stos
shrw
repnz
mov
mov
aaa
sahf
inc
xchg
pop
out
out
ljmp
and
imul
inc
or
out
cmp
rcll
add
shll
mov
mov
sub
add
js
nop
cmp
or
je
jae
nop
mov
jnp
arpl
lret
mov
sbb
mov
sahf
push
inc
xchg
add
rorb
mov
inc
mov
push
jnp
pop
add
ljmp
test
lahf
pop
fmul
out
add
xor
mov
fnstcw
xor
sbb
shll
xor
push
adc
test
mov
add
xchg
push
sarl
cs
xor
sbb
mov
and
add
gs
mov
mov
xor
fadd
and
scas
add
xchg
test
imul
sub
mov
sbb
add
out
cmpsl
jnp
xor
jg
push
pop
aas
jae
rcr
mov
cld
inc
cmp
jbe
cmp
mov
rorb
fwait
mov
inc
mov
scas
cmp
push
shll
pop
lret
aaa
adc
xchg
xabort
sub
pop
mov
inc
loope
rcr
push
mov
sub
test
int3
mov
add
orb
cmp
or
push
ljmp
or
xor
and
shl
add
mov
cmp
push
lret
fcompl
cmp
or
inc
inc
cmp
insl
test
fwait
jbe
outsb
xchg
test
in
ds
mov
sbb
push
test
cwtl
out
add
pop
jmp
push
movd
call
add
sahf
pop
int3
inc
mov
inc
jb
ds
cli
popf
fwait
jno
pop
fdivrp
inc
cmp
rolb
movsb
add
insb
mov
push
out
adc
lahf
sbb
mov
mov
sub
jbe
jl
ret
pop
cmc
xchg
cltd
push
sub
dec
jae
inc
add
and
jle
jl
cltd
lock
add
mov
imull
in
and
mov
mov
and
aas
mov
movsl
seto
and
in
into
lock
push
push
mov
sbbl
lea
xor
fcos
xchg
and
rcrl
sub
cmp
add
out
cmp
mov
adc
test
pop
imul
and
shrb
cmp
push
add
cmp
enter
das
push
inc
or
xchg
adc
mulb
mov
shrl
inc
cmpl
xor
jbe
add
and
xchg
lea
cmpsl
adc
xchg
mov
call
sbb
pop
ja
inc
je
jo
push
pop
aas
push
pop
in
inc
orb
mov
in
sti
fiaddl
sbb
push
jae
cltd
nop
pushf
in
push
add
test
cmp
roll
push
mov
add
leave
inc
aad
movsl
mov
xchg
aas
loop
mov
add
cmp
mov
push
mov
cs
add
scas
mov
int
in
int
in
sub
stos
sbb
pop
add
sbb
jmp
adc
and
test
add
mov
in
cmp
sarb
out
out
cmp
fildl
jo
scas
add
pop
mov
jae
jnp
jb
push
loop
pop
push
sub
pop
push
into
dec
sbb
rclb
cmpsl
adc
movsl
cmp
sti
pusha
xor
sbb
dec
push
push
cld
dec
or
jp
push
mov
xor
hlt
push
mov
int
add
push
popa
stos
shll
or
mov
add
enter
rorb
pop
adcb
aas
mov
and
test
add
xchg
inc
push
cmp
add
mov
cmpsb
loope
push
jnp
das
stos
hlt
push
test
add
loop
sbbl
and
and
or
pop
mov
push
adc
cmc
mov
je
addr16
pop
inc
add
leave
and
xchg
and
pop
lret
aad
pusha
mov
adc
xor
stos
nop
mov
mov
xchg
cmpsb
js
in
mov
scas
sbb
lahf
loopne
and
adc
pop
inc
push
fucomi
stos
loope
mov
pop
add
xchg
sbbl
add
mov
cmp
xorl
mov
into
inc
pusha
inc
lcall
xchg
daa
xchg
fbld
shl
cmc
popl
lock
fmull
in
stos
adc
mov
add
push
xchg
pop
dec
xchg
sub
insb
std
push
jno
sub
or
daa
cld
add
add
mov
incl
je
lods
shrb
sub
adc
mov
into
push
xchg
mov
in
mov
lods
roll
js
mov
in
lret
sarb
pop
push
loope
sbb
sub
push
repnz
mov
aaa
rorb
pop
scas
push
add
and
push
mov
in
pop
jg
arpl
rcrl
dec
cmp
rcll
jnp,pn
or
int
aad
mov
cmc
or
mov
scas
clc
push
mov
inc
in
mov
sbb
fists
rolb
cmp
inc
mov
sbbb
push
pop
lret
mov
mov
push
int
pop
jmp
jo
lahf
jecxz
std
pop
ds
nop
stc
and
push
pusha
into
cmp
shlb
lock
mov
es
movb
or
inc
jne
jnp
dec
pop
dec
add
nop
clc
cmp
mov
pop
jns
jnp
pop
jl
add
mov
inc
je
xor
scas
inc
xor
nop
lods
push
mov
notl
mov
adc
data16
adc
fnstcw
in
data16
push
enter
out
pop
add
test
in
cmc
into
outsl
repz
add
push
insl
xchg
repz
sbb
hlt
es
out
sbb
inc
sub
sbb
mov
pop
in
fmull
add
test
dec
andb
out
pop
wrmsr
lcall
or
sbb
push
in
leave
xchg
rorb
pop
test
and
sbb
push
sub
push
cs
and
inc
out
xor
sti
adc
push
mov
ja
mov
cmpb
in
or
push
inc
sub
icebp
lret
pop
push
and
test
inc
xor
push
popl
js
ds
pop
pop
jmp
pusha
cmp
push
cmpsl
pop
cld
xor
notb
pop
aad
cli
std
mov
and
test
cmp
ret
out
stos
push
sbb
std
ljmp
jp
std
pusha
jbe
inc
xchg
sti
insb
push
add
dec
dec
iret
fnstcw
xor
dec
adc
and
out
adc
cmp
pusha
and
jno
add
das
pop
cmpsl
add
pop
imul
cmpsb
jge
sbbl
add
sbb
add
daa
test
popf
sub
xchg
sbb
cmp
dec
mov
dec
pop
aaa
add
mov
std
dec
enter
xchg
jns
sub
mov
fstl
or
ljmp
jecxz
jmp
pop
xchg
add
inc
pusha
inc
das
pushf
fsubrl
divb
dec
call
hlt
jb
xchg
inc
lock
cmp
mov
mov
out
push
xorb
add
int
inc
xor
jmp
in
notl
ds
mov
pop
pusha
mov
dec
leave
addb
daa
popa
xor
mov
xor
fwait
in
push
add
sub
push
inc
sbb
add
sbb
filds
xor
mov
or
fcoms
adc
xchg
clc
cltd
sub
lds
add
mov
insl
stos
push
push
add
ret
movsb
inc
imul
stos
ds
in
sub
movl
lods
pop
popf
sbb
adc
mov
aam
cld
das
adc
nop
mov
loopne
scas
xchg
popa
andb
pop
aad
xchg
jne
imul
ret
cmp
mov
mov
jnp
sub
jl
sbb
aad
ja,pt
dec
add
push
fmull
shl
mov
inc
rolb
xchg
cmpsb
std
dec
fcmovne
subb
std
es
dec
mov
testb
mov
and
add
out
cmp
push
popf
mov
or
and
jge
xor
cmpsl
andl
dec
xor
mov
or
test
add
jecxz
stos
adc
jo
mov
fdiv
add
fs
ljmp
lods
sub
roll
imul
push
sub
xchg
push
in
jg,pt
enter
push
ret
js
add
push
mov
int
test
or
xchg
push
add
adc
mov
jg
and
xchg
xor
and
cmpsb
adc
mov
fld
mov
jle
pop
outsb
jmp
pop
mov
stos
test
xor
push
mov
out
add
aam
mov
push
xchg
adc
scas
xor
int
movsl
pop
dec
aam
loop
sub
out
rol
adc
sbb
popa
sub
and
aaa
div
push
jns
lahf
inc
mov
ret
loope
mov
nop
mov
pusha
imul
inc
cwtl
popf
pop
and
or
aam
push
adc
cltd
push
shll
test
cmp
in
cmp
add
push
out
pop
in
rolb
push
xchg
lock
in
add
or
sub
mov
cmp
shl
into
jo
faddl
call
inc
cmp
xchg
inc
roll
cmp
cmpsb
mov
and
sub
push
xor
push
arpl
adc
jmp
mov
mov
jmp
mov
movsl
dec
push
mov
repz
push
fbstp
int3
add
jl
mov
stos
sub
push
add
xchg
inc
jo
push
mov
sbb
addb
cmc
mov
repnz
test
jecxz
sbb
mov
fcomps
add
pop
add
mov
cli
xor
loope
fildl
sub
push
xchg
push
push
xchg
add
sub
fucomi
xor
inc
jne
mov
add
sub
push
inc
push
adc
shr
inc
imul
or
push
cli
adc
das
lret
test
push
or
mov
shlb
mov
mov
add
pop
mov
mov
cwtl
cmp
mov
jp
cmp
call
sti
pop
sbb
les
lret
pushf
stos
lds
push
add
push
add
mov
and
mov
mov
add
push
lods
orb
dec
insb
cmp
inc
cltd
sub
arpl
imul
adc
xchg
das
cltd
or
fstp
mov
mov
sbb
and
add
xchg
mov
mov
push
pop
aad
pop
add
dec
xchg
iret
sub
add
mov
xchg
dec
and
mov
mov
mov
rol
fcmovu
div
or
and
add
das
jnp
js
cmp
xchg
jns
lret
jae
push
xor
add
mov
movsl
call
out
fnsave
cmp
popf
inc
lahf
aas
sub
add
ret
loopne
lods
or
push
add
outsb
aam
and
sub
popf
jns
pusha
mov
mov
adcb
ficomps
fsts
popf
mov
pop
mov
mov
pop
push
mov
inc
sarb
fldcw
inc
stc
pusha
es
add
leave
add
xorl
adc
push
xchg
outsl
lcall
push
mov
aad
test
stos
xor
pusha
push
pop
adc
popa
inc
and
cmp
addb
xchg
test
sub
test
mov
roll
sbb
and
add
aad
jl
push
incb
fidivs
jp
movsl
push
aad
aad
add
rcrb
pop
sub
or
popa
mov
adcb
jg
cli
call
in
jo
es
push
add
sub
push
lcall
push
sub
out
adc
pusha
pop
sub
jbe
pushf
dec
inc
shll
jmp
bound
xlat
sub
das
inc
inc
add
cmpsl
xorb
popf
insl
jns
mov
inc
dec
pop
jb
movsl
fwait
cmp
movsl
std
inc
scas
mov
cltd
or
aam
imul
popf
insl
aam
pop
and
push
xor
cmp
dec
fs
daa
pop
int3
imul
es
inc
adc
lea
sub
push
jnp
or
and
mov
fcmovnb
adc
pushf
aas
mov
sbb
or
adc
mov
adc
or
xor
mov
xchg
dec
or
in
inc
pop
add
stos
imul
push
add
pop
push
mov
roll
pop
xchg
les
outsb
scas
pop
cmp
fiaddl
push
inc
sbb
insb
inc
xchg
jae
mov
rcrl
lods
xchg
add
adc
mov
into
sbb
jbe
daa
or
lret
push
sub
mov
sub
mov
push
xor
cmp
fidivs
lods
or
mov
loopne
mov
xor
mov
popf
cmp
sbb
push
jmp
fcomi
loopne
add
mov
std
orb
adc
incl
cld
xchg
push
cwtl
nop
orl
pop
mov
push
xchg
sti
dec
je
mov
jbe
hlt
and
inc
outsb
or
hlt
add
cmp
jae
mov
mov
xchg
or
push
cmpsl
inc
mov
insb
cmp
sbb
xchg
repz
jo
xor
dec
stc
xchg
mov
push
mov
outsb
xchg
pop
subb
add
jne
sbb
out
mov
mov
fldcw
rcll
jo
dec
pop
cmp
dec
ljmp
loop
adc
cmc
adc
pop
dec
rcrl
dec
jmp
xor
sbb
and
add
scas
lds
jnp
sub
xor
in
xchg
dec
decb
xchg
sub
dec
or
rcll
xlat
scas
pop
pop
imul
jae
rolb
pop
test
jbe
in
xchg
mov
fwait
mov
sub
mov
fidivs
xor
pop
shrb
sub
shr
pop
pop
dec
call
mov
or
adc
adc
push
push
xchg
xchg
pop
fs
xor
gs
xchg
mov
ds
and
add
dec
mov
xchg
cmp
int
bound
and
and
inc
adc
sub
sbb
sarl
jns
inc
pushf
push
fdivr
mov
lock
repz
mov
pop
pop
and
out
ljmp
lret
adc
aas
mov
and
les
sbb
mov
mov
fsub
adc
pusha
out
mov
add
loop
dec
call
or
std
jb
add
cmp
mov
repnz
add
and
push
adc
xor
je
adc
das
in
incl
cmp
ja
jne
sbb
test
xchg
stc
xchg
mov
add
push
or
xor
adc
mov
arpl
test
cmpsb
jl
fistpll
imul
jae
nop
push
insl
pop
pusha
scas
adc
adc
adc
mov
rclb
notl
pop
test
push
add
push
add
leave
clc
in
shl
movsb
scas
inc
mov
cmp
flds
das
jl
icebp
insl
insb
out
lods
sub
mov
cs
mov
inc
adc
cmpsb
xor
mov
xor
mov
mov
in
pop
iret
cs
and
movsb
dec
adc
xchg
mov
xchg
add
dec
icebp
or
aam
xor
jg
sub
mov
cmp
pusha
xor
add
pop
push
sbb
js
xchg
das
inc
mov
pop
subl
shll
jmp
xor
test
fstpt
xchg
nop
push
cmp
dec
or
dec
adc
imul
fmuls
sbb
dec
jns
dec
add
mov
and
inc
loope
sub
popa
rolb
xor
push
or
xor
xchg
inc
jp
test
out
stc
add
pop
arpl
jmp
fs
or
in
cmp
ret
inc
push
or
mov
orb
cli
inc
and
jb
and
popf
imul
or
jo
negl
icebp
xchg
sub
pop
mov
rclb
jnp
add
push
dec
cld
inc
lret
bound
pop
xchg
sahf
ds
pop
popa
adc
cmp
adc
punpckhdq
and
adc
dec
add
and
add
pusha
js
add
sbb
movsl
mov
or
das
jle
mov
mov
xchg
pop
push
filds
enter
inc
dec
add
or
cmpsb
pop
lock
sub
jl
mov
rolb
pop
data16
cmp
dec
lret
dec
scas
pop
into
push
cmpsl
add
and
pop
cmp
adc
test
das
sub
ljmp
inc
cli
fists
jae
push
pop
das
mov
fldt
addr16
add
mov
stc
sub
pop
or
push
xor
lods
sarb
adc
push
mov
jb
inc
and
mov
mov
mov
daa
pusha
adc
sbb
sub
cmpsb
mov
loopne
fdivs
nop
fs
dec
or
adc
arpl
nop
push
roll
cmpl
das
lock
comiss
das
popf
loop
push
adc
sti
icebp
mov
int3
faddl
jg
icebp
pop
adc
mov
add
push
xchg
inc
mov
popa
cmp
imul
jnp
test
out
push
mov
pusha
cmc
pop
mov
and
lahf
push
lahf
les
or
pop
repz
mov
push
aam
out
rcrl
jg
xchg
pop
jmp
pop
or
mov
divl
dec
popa
int
in
iret
mov
in
das
jp
add
stc
sub
pop
push
jmp
push
or
dec
ret
data16
enter
dec
lods
push
gs
push
in
add
and
out
push
pop
pop
push
movsl
out
incb
pushl
mov
push
mov
adc
sbb
sbb
adc
push
xor
sub
enter
dec
push
pusha
ficoml
xchg
jmp
les
xchg
int3
jle
daa
clc
cmp
sub
cs
outsl
add
popa
sub
lock
mov
xor
cmp
rolb
ret
cmp
test
add
jl
out
or
inc
jns
pushf
cmp
add
inc
jmp
fcmovu
pop
push
and
sub
add
outsl
fbstp
and
jg
outsb
sbb
mov
xor
popa
aad
dec
mov
aam
scas
call
jb
add
cmp
sbb
out
pop
xlat
shlb
mov
daa
jbe
or
pusha
pop
jmp
loope
in
lock
xor
jns
or
icebp
dec
inc
fiadds
movsl
add
sub
ret
arpl
push
mov
dec
add
inc
rolb
adc
push
inc
push
cs
mov
popa
and
out
adc
push
popa
sahf
fists
cs
sbbl
rcrb
sbb
add
inc
xor
repnz
push
jecxz
dec
imulb
lods
adc
add
push
repz
push
pop
pop
dec
push
sub
push
or
dec
xor
dec
cmp
push
add
fstps
jp
inc
sbb
cltd
sbb
cwtl
xor
pop
faddl
sbb
push
or
pushf
jne,pn
scas
push
add
mov
xchg
mov
or
push
jg
insl
sub
icebp
aaa
fmuls
or
jnp
mov
push
sbb
mov
sarb
dec
mov
ja
fcompp
sub
dec
lahf
mov
daa
shlb
add
sub
push
cs
sarb
rcl
and
imul
faddl
adc
shll
inc
aas
adc
lret
xor
mov
jmp
jnp
add
aam
ja
lahf
lock
inc
lods
iret
sarb
in
mov
mov
inc
sbb
sbb
fidivs
adc
and
jecxz
and
adc
pop
pop
nop
sub
xor
add
jg
xor
push
adc
xchg
shlb
or
pop
mov
cmp
push
les
push
mov
popa
xchg
std
aaa
fildl
cmp
mov
pop
or
adc
mov
mov
cmp
sbb
xor
mov
jnp
fcoms
mov
push
mov
cmc
sub
das
pop
sub
and
sbb
and
fs
pusha
call
push
xchg
es
push
or
outsb
lea
xchg
lcall
mov
push
and
daa
pop
push
repz
inc
adc
test
xor
mov
jns
popa
sub
test
in
sarb
push
jecxz
popf
dec
pusha
push
dec
cmpsl
and
ror
loopne
cmp
pop
add
push
data16
out
xor
pop
scas
imul
sbb
dec
lods
dec
xor
pop
mov
add
push
daa
je
in
jp
jns
cwtl
mov
faddl
mov
mov
pop
mov
push
jl
lock
sbb
lea
mov
add
pop
dec
push
xchg
pop
pusha
xor
stc
pop
jecxz
jns
sbb
xchg
cli
or
cmp
daa
sub
icebp
or
addb
cmp
out
mov
stc
xchg
jns
sub
cs
xchg
and
in
popa
dec
push
xchg
mov
xor
and
mov
xchg
call
or
xchg
mov
push
loopne
cmp
and
mov
cmp
andb
inc
push
mov
hlt
xchg
adc
mov
xchg
mov
fdivrl
add
flds
cmp
sub
pushf
cli
xchg
pop
mov
adcl
xor
rcrw
pop
cmp
popa
push
add
dec
rcrl
mov
mov
pop
push
sbb
out
in
mov
jmp
add
fistl
shll
and
pop
lret
je
adc
in
mov
inc
sub
push
add
bsf
xchg
or
fs
pop
gs
test
scas
xor
inc
lock
iret
xchg
enter
jg
out
and
adcb
adc
mov
sub
or
cmpsb
and
or
pop
mov
icebp
sub
mov
enter
cmp
add
mov
dec
stos
mov
out
mov
inc
inc
adc
sub
rcrl
sub
jnp
sahf
movsl
rol
pop
sub
pop
fsubrs
cltd
mov
adc
stos
and
mov
add
add
lds
push
test
dec
stc
das
add
dec
movsl
jmp
fidivl
fucomp
je
lds
add
xchg
pop
add
pop
in
mov
roll
jns
and
sahf
stc
sub
pop
daa
cld
ds
pop
and
sub
repz
int3
dec
stos
arpl
rorl
mov
xchg
faddl
adc
shrb
in
lds
mov
sbb
enter
mov
sub
inc
mov
xchg
mov
in
das
cmp
pop
dec
popf
jns
pusha
xchg
xor
xchg
je
mov
dec
and
gs
pop
loop
add
or
aas
xchg
rorl
push
jne
lods
sarb
stos
add
xor
gs
mov
add
outsb
sub
adc
sahf
push
subb
pop
cld
push
mov
icebp
cld
jle
std
and
xor
fimull
sub
sub
stos
insl
jnp
push
add
adc
movsb
les
int
xchg
or
sub
cmp
mov
pop
mov
adc
adc
cmpb
inc
dec
in
test
cmp
xor
fisubrs
inc
xchg
lahf
or
pop
fldt
ret
sub
or
xchg
je
sbb
sbb
mov
pop
mov
loopne
outsb
mov
ljmp
xor
lret
loope
call
adc
inc
cmpsb
popf
push
dec
pop
xchg
lcall
insb
jo
mov
push
dec
ret
jbe
xchg
stc
lahf
push
mov
xor
xchg
sar
movsb
jae
or
dec
sbb
and
cmp
jle
fcompl
test
add
mov
dec
ja
mov
pop
pusha
fwait
js
outsl
movsb
or
and
pop
int3
mov
xchg
add
cmc
outsb
and
lahf
lret
icebp
sbb
scas
and
mov
cwtl
lret
lahf
cmp
dec
xor
sti
dec
mov
inc
inc
adc
popf
cmp
addr16
and
mov
xchg
push
mov
pop
sbb
dec
mov
aaa
jecxz
fildll
mov
daa
push
cmp
adc
xchg
icebp
imul
lcall
add
scas
lret
cmp
stc
add
shrb
ret
hlt
xchg
stc
dec
imul
sbb
mov
enter
ja
sub
add
sbb
pop
sub
inc
push
push
mov
rolb
sub
movsl
add
pop
fstpl
pop
mov
add
jae
add
mov
fcomps
add
leave
mov
dec
inc
cmpsl
hlt
inc
inc
xrelease
or
stos
movsl
int
rclb
or
pop
mov
mov
lods
loop
lods
hlt
or
sbb
ret
mov
push
sarl
mov
popa
sahf
mov
test
sar
xchg
push
out
ja
adc
je
pop
popf
mov
outsl
and
inc
lods
clc
cmp
aas
mov
sub
pop
sbb
pusha
add
loope
shr
loopne
popf
xchg
imul
mov
mov
or
repz
jg
rclb
sbb
loopne
fidivrl
daa
filds
pusha
subb
xor
ljmp
xlat
pop
add
jb
xchg
sub
inc
loope
sahf
testb
stos
dec
rclb
cmpsb
stos
dec
or
inc
push
repz
das
mov
testb
scas
push
dec
jnp
gs
movsb
xchg
push
and
int3
adc
pop
in
scas
sbb
pop
mov
and
icebp
jb
shr
push
jbe
add
loopne,pn
test
pop
les
pop
aam
mov
fistl
add
in
ds
sbb
inc
adc
iret
ficoms
cmp
jno
orb
mov
movsb
push
and
push
movsl
int3
lcall
jne
lock
loop
mov
pop
jbe
or
scas
daa
cwtl
fcoms
lds
or
loop
dec
jmp
iret
pop
cmp
imul
mov
or
lods
mov
in
imul
les
sub
test
add
cmpsl
pop
lahf
in
adc
or
and
pop
push
add
outsl
stc
add
test
sub
adc
in
mov
add
jne
rorl
cmp
mov
mov
lods
dec
add
add
mov
andl
push
or
mov
mov
xchg
popl
fists
push
int
sbb
pop
adc
aaa
mov
pop
add
or
les
enter
sbb
fcmovbe
ljmp
adc
cmp
int3
cwtl
into
or
fistl
push
mov
inc
fidivs
push
xchg
and
ss
bound
jne
adc
cs
mov
jns
add
into
xchg
cmp
jmp
adc
stos
mov
and
dec
pop
mov
or
movsb
xchg
add
stos
test
mov
pop
adc
mov
xchg
mov
aaa
test
add
stc
xchg
leave
fldcw
addl
es
push
and
dec
ret
adc
sub
outsb
in
repz
nop
xor
shrb
xorb
out
sbb
fdivp
jg
mov
shlb
sub
fstps
jae
mov
clc
out
add
iret
dec
mov
pop
pop
es
inc
test
imul
pop
stos
jle
add
push
repnz
mov
jmp
jb
jge
test
cwtl
sbb
popa
int
jbe
sub
test
subl
push
lods
mov
cwtl
dec
cmpsl
js
out
jmp
shl
mov
cmpsb
cs
adc
outsl
pop
adc
xor
stos
fisttpll
or
xor
pop
les
dec
push
mov
sbb
testb
add
xchg
sub
cmp
lea
fstpl
add
xor
pop
xchg
jo
popf
aaa
mov
jae
std
push
mov
aam
ret
jmp
pushf
decl
lret
pop
inc
cmp
sarl
es
cmp
cltd
mov
or
daa
mov
pushfw
ljmp
faddp
lods
aaa
rolb
hlt
loop
mov
add
outsl
insb
and
popf
sub
adcb
inc
push
adc
mov
push
fwait
cwtl
add
sbb
xchg
add
adc
pop
sti
sbb
mov
sahf
iret
mov
mov
pop
pop
mov
and
iret
rcrl
inc
dec
jl
sub
adc
xchg
xor
mov
push
push
das
and
cmc
fmulp
add
and
jp
popf
movsl
enter
push
fcomps
mov
fcmovne
rcr
fcoml
cmp
or
clc
shr
mov
and
mov
mov
cmpsl
fsub
repnz
daa
xor
test
cld
dec
in
aad
jae
pop
add
daa
push
dec
xor
in
jp
add
adc
fstl
dec
nop
fdivr
inc
ja
add
inc
ret
rcrb
into
movl
jl
push
push
xchg
jmp
jno
xchg
nop
icebp
in
out
mov
xor
mov
fcom
rcrb
adc
mov
mov
scas
mov
lods
sub
notb
sub
jns
cmpb
clc
xchg
mov
imul
mov
add
outsl
xchg
and
dec
adc
es
adcl
push
xchg
push
xlat
push
stos
adc
ja
shrb
enter
cmp
cmp
xor
jnp
push
xchg
cld
leave
xchg
sbb
clc
adc
mov
or
mov
adc
fadds
mov
mov
add
jno
aaa
aas
jns
cmpb
dec
mov
mov
movsb
xchg
jmp
mov
or
cmp
pop
sub
add
test
clc
rorb
sub
aas
int
xchg
sbb
in
add
shr
test
lcall
in
add
inc
mov
and
cmc
dec
jnp
xor
dec
push
adc
pop
pushf
int
pop
shlb
popf
add
xchg
andl
pop
cltd
sbb
loopne
xor
push
call
dec
adc
pop
lea
and
add
inc
dec
pop
mov
add
jo
ja
daa
es
xor
stc
dec
ds
cmp
and
je
push
les
pop
add
sbb
dec
dec
fstpl
outsb
shrb
pushf
jge
cmpb
mov
xlat
int3
jne
adc
js
test
xchg
sub
cltd
pusha
xorb
inc
imul
cld
sub
lea
fnstenv
push
and
dec
fidivrs
mov
fcomps
imul
fisubrl
arpl
les
cmp
inc
and
fildl
roll
bnd
sahf
insl
daa
ljmp
es
fisttpl
sbb
push
or
adc
ljmp
add
jne
int
xchg
xchg
add
xchg
fcoml
loop
and
dec
and
fisttpl
mov
xor
pop
repz
dec
loope
mov
xchg
pop
adc
lcall
dec
lret
out
add
mov
mov
test
pop
dec
lret
movsl
cmpsb
ret
add
pusha
cmp
movl
stc
out
ret
int
sarb
sbbb
outsb
jle
iret
rolb
cmp
js
lahf
fnsave
jne
subb
outsb
int3
fwait
lahf
repz
js
sbb
fstpt
mov
dec
fldenv
das
shrb
andb
jg
mov
mov
sbb
mov
cld
fidivs
nop
sub
fs
mov
cmc
aas
adc
cmpb
push
aaa
call
cmp
sbb
inc
out
add
clc
or
cli
shll
les
xchg
add
mov
stos
ds
stos
dec
add
mov
subl
push
test
sahf
mov
jae
xchg
mov
adc
enter
test
cmp
add
and
in
aas
mov
xchg
lods
cmp
xlat
sbb
pop
dec
pop
cmpsb
push
loopne
int3
lods
add
jge
jb
notb
add
jmp
neg
cmp
loopne
mov
out
inc
pop
xchg
jp
mov
add
add
aam
and
repz
orb
xor
ficoms
pusha
pop
scas
addr16
adc
xor
sub
mov
mov
pop
popf
sbb
mov
xchg
insl
loopne
adc
push
jmp
clc
mov
and
sub
fs
popa
mov
jnp
mov
jbe
dec
jno
fadds
adc
mov
cld
inc
jbe
dec
ficomps
jnp
inc
pushw
mov
aas
dec
push
daa
pusha
push
adc
push
xchg
sbb
sbbl
testb
hlt
dec
jle
adc
les
mov
les
in
scas
adc
les
test
or
lds
xchg
jecxz
sub
dec
jno
dec
jns
xchg
push
loop
dec
nop
push
inc
out
and
sub
into
pop
call
cmp
mov
ucomiss
dec
jg
pop
jo
fmul
jb
pop
pop
jecxz
add
pop
or
imull
inc
icebp
cs
mov
ret
nop
push
push
push
sbbl
push
lea
lock
nop
mov
js
sbb
ret
movsl
sarb
sbb
pop
mov
sbb
mov
or
push
ljmp
adc
out
hlt
lret
sbb
mov
mov
fldl
popa
pop
mov
mov
push
testb
leave
cwtl
jle
cltd
comiss
sti
cli
pushf
adc
jmp
push
sar
repz
dec
mov
lods
add
inc
mov
in
adc
repnz
test
sti
jp
add
rcrl
add
popa
mov
mov
js
ljmp
jne
mov
adcb
sarl
sub
cmp
or
jl
loopne
mov
in
jg
xchg
or
loopne
js
or
fstps
jns
movsb
jb
js
outsl
add
jnp
stos
fwait
rcrb
fdivs
pop
xchg
popf
rcrl
mov
fists
xchg
gs
mov
jmp
fcoml
jnp
std
loopne
pusha
test
fstpl
loopne
daa
popf
shll
shll
dec
int3
add
sub
rcll
nop
cmp
mov
or
sub
inc
xor
add
pop
ss
inc
cmpsb
in
xor
call
xor
mov
lds
daa
jno
or
in
push
addr16
pop
addb
dec
mov
sbb
jle
push
popa
jno
jl
call
or
movsb
aam
leave
sub
dec
stos
lea
xchg
out
icebp
xchg
scas
insb
sbb
es
lea
faddl
add
mov
outsl
cltd
loop
js
lcall
hlt
popf
lcall
dec
push
xor
pop
pop
rol
lds
lods
outsb
add
lret
in
lock
rcrb
inc
xchg
dec
test
fistl
outsl
lret
popf
mov
jne
sti
pop
cmp
mov
jae
fnstcw
pop
fnsave
out
sub
repz
jp
xor
das
push
or
in
stos
aam
sbb
iret
nop
xchg
lea
lret
jmp
sub
adc
jno
mov
xchg
sbb
adc
out
xchg
mov
xchg
ljmp
inc
mov
sarl
pop
je
loopne
jg
push
add
cmp
sub
xchg
lret
lea
mov
xorb
mov
mov
jno
adc
rorl
xchg
xor
in
pop
outsb
cmpsb
ds
add
jmp
push
jp
rcrl
push
or
dec
dec
popa
notb
leave
cld
adc
or
and
jge
cmp
in
movsl
dec
jns
and
sub
or
repz
and
or
sbb
add
cld
push
cld
jns
sbb
andb
xchg
and
sbb
pop
in
aam
fnstsw
mov
add
stc
sub
push
lcall
adc
scas
or
shrb
int3
in
stos
dec
lods
repz
fnstsw
xor
aad
dec
rolb
adc
sub
fiadds
add
push
cmpsl
repnz
orb
inc
jge
pop
or
lds
imul
sbb
scas
cmp
push
pop
in
das
in
xchg
je
or
cmp
loopne
bound
sub
inc
addl
jmpw
push
data16
push
imul
cmpl
aad
pop
sub
mov
clc
lock
call
jno
adc
sbbb
lods
out
ljmp
xchg
sbb
insb
sub
outsl
mov
dec
push
xrelease
xor
push
xchg
mov
or
push
mov
and
std
movsb
add
call
add
outsb
pop
add
dec
addl
mov
mov
push
mov
and
movl
leave
xor
dec
jmp
push
std
xor
dec
sbb
sbb
jns
sahf
lds
clc
in
cmpb
xor
outsb
hlt
add
ret
pop
jmp
loop
pop
int
sarb
inc
xchg
adc
push
mov
push
int
shlb
inc
std
mov
addl
bound
ficoms
mov
jge
int
fimuls
inc
daa
das
add
popf
jge
adc
fidivl
cmpb
cwtl
fldcw
mov
fisubrs
ljmp
inc
mov
call
test
push
adc
enter
seto
pusha
mov
mov
test
push
loope
sub
movlps
push
cmpsl
xchg
out
and
inc
out
jae
add
mov
lret
mov
mov
shl
adc
dec
xlat
sub
lea
sbb
push
test
pop
or
mov
jnp
lods
fmull
or
lods
jno
add
jmp
in
pop
rorb
rolb
lods
shr
popf
adc
sbb
mov
push
dec
add
repnz
pop
push
mov
xorb
dec
or
aam
lds
sbbb
test
xor
mov
test
rcll
push
stos
inc
movsb
pop
dec
sti
test
in
push
and
ret
xor
pop
cmp
mov
cmp
and
insl
int
lcall
filds
pop
faddl
lahf
loopne
add
dec
int
inc
popa
cwtl
loopne
js
pop
xor
lcall
mov
inc
mov
cmp
sbb
movsl
jbe
adc
add
cmp
jp
mov
mov
cwtl
mov
mov
jo
mov
add
sbb
mov
jmp
fs
inc
rcl
loopne
mov
fwait
enter
ret
pop
leave
bound
adcb
sub
das
add
jbe
jno
sub
fs
call
insl
dec
shl
mov
mov
sub
cmp
out
andl
pusha
xchg
aam
add
jmp
add
mov
les
outsb
and
mov
inc
adc
adc
loop
sub
sub
int
jp
mov
jecxz
mov
mov
das
or
test
and
push
push
lds
push
hlt
pop
test
sti
leave
pop
lea
imul
andl
adc
mov
push
movb
sub
jecxz
in
repnz
cmp
aaa
add
dec
and
nop
cld
jmp
jns
xor
mov
sbb
in
xchg
enter
and
add
out
xor
sbb
pushf
adc
mov
outsl
add
xor
dec
mov
mov
jp
add
or
aas
jl
sahf
add
icebp
or
add
cli
inc
test
lahf
push
sub
or
add
xor
xchg
hlt
lds
jnp
or
sub
imul
or
jb
stc
mov
xchg
mov
xor
fmul
xor
stc
insb
lods
aas
pusha
cs
test
es
aam
stos
cli
pop
sbb
insl
push
sarb
test
cltd
incb
push
int
sub
inc
orl
gs
nop
fistl
xor
mov
add
lcall
xor
dec
push
test
adc
inc
sbb
test
fmuls
mov
nop
ss
je
push
divb
push
or
xor
jne
xor
sbb
mov
or
aam
push
aad
pop
ret
fimuls
xlat
xchg
ss
xchg
inc
lcall
adc
sub
pop
adc
cmpb
cmc
dec
pop
add
int
in
jmp
dec
repnz
mov
icebp
in
jmp
or
xrelease
stc
xchg
mov
add
addl
sbb
aas
jo
push
add
adc
std
popa
rorb
jmp
inc
popa
jle
loop
pop
mov
mov
pop
xchg
notb
fadd
es
mov
dec
popa
daa
cs
sbb
jecxz
cmp
pop
data16
or
add
mov
lods
or
push
mov
das
cmp
in
adc
push
push
mov
jl
add
push
sub
pop
sub
das
pop
lahf
adc
ja
mov
fistl
cwtl
push
rcll
push
js
push
shlb
rclb
shr
out
pop
sahf
push
xchg
fstpl
adc
ficompl
pop
test
out
movsl
pushf
sbb
sub
sub
imul
mov
test
neg
adc
mov
or
sbb
or
jae
in
lods
andl
imul
outsl
cltd
ficoms
cmpb
add
mov
cli
dec
jnp
js
pop
add
mov
pop
sbb
dec
cmp
sbb
cmpsb
rorl
lds
or
loopne
rcrb
jmp
mov
je
dec
mov
lret
pop
hlt
fs
mov
push
push
xor
popa
mov
das
pop
dec
in
sbbb
pop
loopne
fstps
out
or
dec
outsb
jnp
pop
sbb
mov
cmp
das
ret
xor
movsl
xchg
ja
xchg
std
dec
sahf
popa
push
xchg
orb
or
push
jmp
filds
xchg
insb
mov
mov
outsl
cmpsb
out
xchg
adc
jmp
mov
xchg
gs
mov
test
and
xchg
mov
add
ljmp
fbstp
sub
cmpsb
leave
loopne
scas
mov
sub
test
push
out
dec
mov
mov
pop
mov
dec
inc
loop
or
jle
fiadds
add
rclb
outsl
sahf
xchg
xchg
add
call
pop
or
cmpsb
mov
mov
pop
imul
in
das
mov
add
sbb
fdivrl
sbb
lea
and
scas
in
aam
mov
loopne
repnz
popf
jge
movsl
push
sub
das
cmp
ljmp
adc
pop
dec
aad
test
dec
mov
pop
outsl
mov
add
xchg
lea
add
aas
pop
mov
pop
adc
push
push
xorl
bound
jle
dec
aad
incl
push
dec
xchg
out
add
addr16
mov
das
imul
inc
out
push
sub
int3
jb,pt
and
fiadds
mov
pop
pop
sar
pusha
xchg
dec
sbb
mov
mov
loope
popf
xchg
insl
pop
ret
filds
push
or
jmp
add
add
into
ja
or
adc
push
cwtl
or
pop
lock
icebp
xor
xor
pop
fistps
addr16
call
test
xchg
xlat
out
fwait
mov
repnz
add
into
rorl
adc
xchg
and
dec
xchg
loopne
or
fistpl
mov
mov
jmp
mov
dec
aaa
mov
jl
jl
dec
push
lcall
shl
test
arpl
mov
lahf
push
ja
xor
popf
and
les
sahf
adc
add
or
gs
pusha
mov
pop
and
call
sub
lcall
mov
xchg
dec
xor
sub
push
enter
movsl
idivb
in
out
lret
ret
jg
leave
adc
pusha
cmpb
dec
lods
test
loop
dec
mov
repnz
xchg
fldenv
adc
enter
movsl
add
cmp
adc
xlat
xor
out
mov
pop
adc
loopne
lcall
fnstcw
dec
mov
sub
add
cmpsb
mov
add
sub
add
inc
fiaddl
sub
sbb
jle
pop
xor
xor
lods
bnd
pusha
mov
loope
ds
mov
and
push
pop
out
maxps
push
in
xor
sub
ss
loopne
add
popa
gs
pusha
add
mov
cs
jmp
scas
lock
jge
lcall
push
sbb
lods
and
add
mov
mov
testl
inc
sub
leave
mov
sub
test
jge
add
mov
fadds
dec
jb
in
mov
add
sub
inc
add
aaa
xor
pop
fdivrp
xor
mov
mov
adc
inc
or
cmp
jb
add
dec
push
inc
stos
enter
pop
sub
add
clc
pop
mov
inc
in
nop
cld
enter
icebp
jle
adc
scas
xor
or
cs
sub
add
gs
out
xor
adc
jecxz
out
outsl
and
xchg
mov
adc
outsl
lea
adc
mov
push
cmp
and
mov
xchg
in
lds
mov
rcrb
jecxz
sbb
cmp
xor
ds
jbe
cmp
loope
mov
sbb
or
xlat
mov
clc
cli
dec
mov
sub
or
popf
test
and
call
dec
fdivrs
filds
fs
out
rclb
xchg
mov
into
sbb
sub
add
testb
stos
cwtl
xrelease
sbbb
sub
rolb
popf
jecxz
mov
add
insl
add
popf
add
and
dec
and
les
stc
adc
or
sbb
pop
push
sbb
add
mov
cmpsb
inc
or
mov
out
inc
iret
add
fsubrl
inc
pop
push
push
hlt
push
add
mov
ss
repnz
ret
dec
popa
mov
es
push
sbb
inc
insb
mov
fimull
jnp
push
bound
fnstenv
push
lods
cmp
push
mov
inc
adc
jecxz
clc
jge
push
jle
or
dec
pop
xor
jo
ror
dec
test
xor
icebp
add
mov
push
imul
cmpsl
adc
mov
jnp
pop
sbb
clc
add
sub
mov
pop
sti
mov
mov
xor
bound
xchg
les
stos
jecxz
add
mov
std
cmp
int
es
pop
subl
bound
movsb
loop
fildl
xchg
pop
and
xchg
pop
popf
faddl
xchg
in
lock
movsb
xchg
jmp
xchg
adc
shr
xchg
addr16
and
mov
test
mov
push
pop
inc
cmpsb
push
in
leave
mov
daa
sub
test
repz
nop
push
push
pop
dec
popa
mov
adc
mov
pop
pop
xorb
adc
pop
xlat
xchg
and
popf
push
outsb
fidivl
call
pop
xor
je
imul
add
sbb
rcrl
dec
test
ret
lods
les
dec
leave
mov
xchg
xchg
or
outsl
lcall
inc
lahf
insl
pop
and
jg
inc
fisttpl
rol
sbb
insb
add
repz
dec
xor
mov
gs
sbb
out
mov
sbb
pop
out
imul
mov
pop
jg
cmp
add
push
out
popa
dec
inc
test
mov
decb
jns
outsl
xchg
pusha
push
push
jg
and
sub
cmpl
inc
xchg
insl
push
sbb
and
push
lahf
push
popf
pop
sub
lea
dec
pop
sub
mov
scas
cli
pusha
push
and
push
dec
mov
add
mov
movsl
nop
add
std
ds
lea
out
sub
cmp
subl
testl
push
sub
add
fnstcw
xchg
popa
xchg
pusha
jp
aam
movsb
or
ljmp
leave
mov
mov
or
imul
xchg
iret
add
mov
call
out
add
xchg
pop
inc
jge
jae
mov
xchg
cmp
mov
jg
jb
aad
ret
inc
rcrb
shl
ret
repz
inc
lahf
dec
in
pop
and
testb
pop
cli
jge
or
test
push
pop
inc
mov
sub
mov
or
aaa
in
push
jbe
dec
fldcw
popf
icebp
add
push
mov
popw
js
test
jb
scas
add
mov
mov
loop
push
in
add
add
xor
scas
jne
sti
dec
pop
movsl
adc
xchg
fs
adc
cli
fimuls
sbb
inc
pop
xchg
out
add
sbb
push
cld
aad
das
mov
xchg
int3
xor
and
faddp
in
dec
mov
mov
and
fcomi
xorl
test
int
sub
in
mov
push
xchg
xor
int3
push
pop
add
daa
ljmp
mov
fimuls
or
mov
jl
or
jecxz
rol
in
cli
mov
popf
or
push
fcomps
pushf
adc
sub
sub
xor
mov
xlat
push
outsb
lods
xchg
stc
roll
nop
imul
ja
call
nop
mov
mull
xlat
loop
repz
adc
adc
cmp
xchg
sti
fnstcw
add
add
bound
jecxz
stc
das
xchg
mov
xor
pop
adc
and
fidivs
or
pop
mov
add
sbb
hlt
add
into
aad
je
pop
inc
ds
loope
sbb
hlt
cmp
into
test
fwait
test
pop
jns
fnsave
jg
stos
rorb
sti
add
es
add
adc
mov
xchg
sarl
cs
movsl
cmpl
adc
mov
xor
add
and
and
call
cmp
sub
fdivrs
add
jns
push
sub
loopne
stos
adc
xorl
mov
loopne
fdiv
cltd
fildl
popf
adc
fildll
daa
scas
iret
outsl
xchg
cwtl
in
add
scas
jecxz
push
and
push
repnz
adc
stos
lahf
cmp
fisttps
lods
stos
insb
iret
scas
lods
mov
cmp
xlat
sub
cli
test
in
cmp
shll
addb
inc
mov
sbb
adc
movsb
das
xchg
bound
fstps
loop
sbb
xor
pop
pop
pop
push
push
aad
or
inc
add
aas
pop
ljmp
add
push
arpl
and
sub
movsl
pop
xchg
add
xlat
es
sub
mov
movsb
xor
lea
aaa
popf
add
sbb
adc
mov
dec
adc
add
aad
xor
fbld
ss
out
pop
daa
inc
adc
popf
dec
sub
leave
pusha
inc
scas
ficompl
repz
out
in
push
jnp
je
bound
add
mov
add
mov
call
add
sahf
mov
inc
mov
cwtl
push
mov
sbb
xchg
and
cmp
inc
mov
mov
rol
shlb
incl
std
pop
les
andl
cld
in
or
orl
imulb
mov
jo
add
cmc
mov
sbbl
aas
or
jmp
dec
test
jbe
fistpll
mov
sbb
xchg
inc
mov
mov
add
xchg
and
mov
cmpsl
or
clc
sbb
cld
adc
push
push
addr16
in
cwtl
mov
ss
fidivrl
mov
dec
push
add
adc
aad
lds
sbb
and
mov
push
shl
rcll
js
rep
out
or
cmp
jnp
cmc
pop
popf
xor
ds
add
loopne
ljmp
sbb
mov
into
out
add
mov
pusha
cmc
mov
in
stc
inc
add
mov
cmp
xor
imul
mov
out
test
je
lcall
popf
adc
mov
outsb
and
or
incb
adc
pop
sarb
or
test
push
pop
pop
test
and
lock
mov
dec
add
cs
leave
add
imul
ficoms
mov
xor
mov
or
jns
cmpb
push
cmpl
push
mov
sbb
clc
xchg
add
addl
ss
daa
mov
dec
jp
adc
jb
repz
jecxz
xchg
jo
sub
jmp
add
and
std
and
xchg
sbb
daa
add
xor
data16
push
or
jle
clc
add
add
ja
sub
pop
scas
hlt
push
lcall
das
pop
pusha
and
popa
jge
sub
sbb
adc
inc
or
or
pusha
fdivs
mov
popa
je
sub
sub
push
icebp
dec
sub
add
jle
adc
shrl
adc
mov
pop
cmp
inc
rclb
int3
mov
xchg
add
inc
fidivs
dec
popa
xor
cmpsl
es
push
or
lock
nop
ja
pushf
mov
pop
aad
movsl
imul
dec
inc
test
dec
pop
xor
xor
fistpll
add
xchg
orb
inc
and
jg
dec
add
imul
pop
nop
xlat
mov
add
cmpsb
lcall
inc
mull
pop
je
push
pop
adc
mov
add
sbb
xor
xor
test
hlt
dec
pop
mov
pop
add
lret
aam
loopne
sarb
sahf
adc
xchg
pusha
outsl
repnz
shr
adc
orl
clc
ds
and
adc
outsb
fwait
adc
mov
sub
into
dec
mov
sbbl
gs
add
cmpsl
mov
rorl
sub
ljmp
jns
or
mov
jo
mov
pop
je
jo
or
jp
jnp
mov
fwait
sbb
xor
jmp
push
clc
loopne
mov
popa
cmp
and
cmc
test
stc
or
push
jb
sub
add
dec
test
movsb
pop
inc
pop
or
push
call
add
out
movsl
inc
arpl
pop
sub
jmp
pop
mov
mov
or
mov
mov
jns
xchg
push
mov
pop
jmp
fmuls
adc
mov
xor
shlb
imul
dec
cmpsb
bound
movsl
andb
rcrb
add
sub
xchg
jle
pushf
and
mov
push
mov
lds
and
pop
cmp
mov
jnp
test
cmpsl
dec
imul
sahf
add
add
enter
daa
outsb
std
dec
mov
fs
fwait
mov
xchg
add
daa
jl
jnp
or
or
mov
sub
and
nop
loope
or
xlat
pop
adcl
ret
jp
sub
xorb
inc
push
cld
add
out
push
jecxz
pop
nop
or
lea
xchg
xchg
xor
fdivrs
cli
adc
adc
sbb
or
pusha
dec
lock
mov
sub
mov
and
daa
mov
cmpl
rep
neg
cmpsl
xlat
dec
out
and
loope
add
mov
psubusb
cli
sahf
dec
mov
je
jno
sar
mov
loop
xor
adc
sub
add
add
loopne
subb
fs
div
sub
fisttps
insb
mov
popf
or
cld
cmp
dec
adc
ds
push
adc
dec
lcall
repz
imul
ret
adcb
add
push
in
notl
movsb
incb
inc
push
pop
scas
xor
popf
sub
xchg
mov
pop
sbbl
add
add
popf
xor
push
sti
and
jbe
or
jge
test
adc
mov
ljmp
sub
out
das
add
mov
adc
adc
add
xchg
jmp
loopne
mov
sbb
lea
mov
fwait
adcb
cmpsb
scas
arpl
push
and
and
in
into
or
mov
xchg
mov
daa
adc
pop
out
cmp
imul
push
sub
xor
sub
push
pop
mov
in
lahf
in
and
push
xchg
adc
lods
pop
jnp
mov
shlb
sbb
or
mov
loope
jnp
daa
add
mov
dec
bound
adc
adc
mov
pop
push
lods
lods
adcb
push
test
imul
int
pop
fnstcw
je
mov
outsb
fimull
enter
fs
jp
xchg
cmpsb
and
add
xorb
jo
adc
movsb
cld
sub
jmp
adc
fs
repz
jg
dec
push
mov
sbb
push
pop
lds
pop
cs
dec
xor
dec
add
dec
lret
movsl
mov
add
orb
fldl
test
pop
or
xor
dec
mov
cmp
mov
mov
testl
jecxz
push
fwait
je
xlat
out
fsubrl
dec
and
fisubrs
cmpsb
test
nop
pop
mov
and
mov
or
fcompl
pop
push
addl
cli
sahf
imul
faddl
rcll
pop
pop
adc
cs
push
pop
pop
gs
pop
mov
cli
mov
sub
imul
je
mov
add
adc
xor
dec
and
imul
sbb
mov
shll
int3
pop
mov
push
imulb
mov
fldenv
lea
xorb
add
sahf
add
popl
movsl
add
in
add
xor
gs
adc
add
mov
faddl
inc
fstps
cmp
xor
jl
add
sbb
andb
das
js
loope
jnp
xchg
jb
pop
inc
std
jne
mov
cmp
or
rcll
xchg
ljmp
bnd
bound
popa
pop
cmc
lods
lcall
add
jg
mov
jl
sub
and
adc
jle
cmc
push
rcr
add
pop
std
insl
cmpsb
imul
scas
inc
xor
pop
mov
ret
and
nop
rcrb
test
inc
or
negb
push
cld
add
shr
adc
mov
xor
xchg
cli
add
inc
shrl
or
mov
dec
inc
dec
pop
adc
dec
inc
mov
popf
or
das
mov
mov
and
cs
sbb
leave
pop
sbb
imul
xchg
stc
sbb
repz
or
fldenv
sti
add
out
lea
xor
fcmovnu
push
jno
scas
aam
jmp
mov
sbb
sub
call
insl
xchg
pop
xor
and
movhlps
out
movsb
loop
or
mov
je
mov
sbb
adc
mov
push
push
scas
fnstenv
ds
shlb
popf
or
dec
xchg
dec
add
mov
test
inc
inc
push
adc
sahf
mov
je,pn
add
lods
sbb
inc
add
int
js
std
adc
pop
mov
add
fldl
xchg
adc
mov
mov
jp
pop
fsubl
mov
ja
pop
push
add
cmpsl
add
in
sbb
jbe
and
dec
pop
xor
inc
mov
add
enter
xchg
jnp
js
adc
add
aas
push
fwait
add
in
pop
mov
mov
cld
sbb
inc
jmp
fwait
out
sub
sub
and
je
dec
lods
fiadds
rclb
mov
adc
bound
popa
dec
andl
fstpt
add
inc
sbb
push
pop
aad
mov
push
inc
adc
std
push
mov
js
lock
add
inc
inc
aaa
test
lcall
xchg
xor
or
adc
xor
loope
les
sub
cmc
out
mov
sub
or
pop
dec
push
insb
shl
int
shl
sbb
inc
lret
fldl
ja
add
and
mov
ja
add
je
lods
jp
out
addr16
add
pop
sahf
mov
and
jle
js
js
and
add
xchg
adc
inc
push
das
adc
lods
cmp
sbb
imul
aad
push
cmpb
insl
adc
or
outsb
sub
push
mov
pop
clc
and
adc
pop
jns
mov
pop
xchg
sbb
jne
sarb
imul
cs
jbe
pop
xor
mov
dec
adc
daa
imul
mov
insb
aad
ja
adc
loop
add
fs
dec
mov
inc
jae
jo
imul
loop
mov
sbb
addl
es
push
xchg
aam
inc
mov
je
mov
jp
dec
mov
movsl
mov
lahf
sub
jmp
sbb
jp
adc
dec
fucomi
orb
mov
cmp
andb
in
sub
pop
mov
sbbb
js
pop
mov
mov
loope
out
lock
mov
test
pop
in
testb
mov
xchg
pop
jecxz
mov
add
sbb
jnp
add
neg
push
ret
push
adc
jmp
pop
xchg
jle
les
jecxz
pop
xor
mov
inc
faddp
push
add
push
adcb
sbb
bound
jne
or
popf
hlt
mov
ljmp
jo
shrb
mov
gs
les
push
scas
mov
push
add
mov
mov
pop
shlb
int3
mov
sub
addl
orb
sahf
dec
push
int
push
pusha
stos
js
mov
jno
sahf
xor
jns
sub
push
adc
test
inc
pop
cltd
sub
aas
repz
add
dec
lret
je
aas
mov
movsl
loope
sub
jns
xor
push
sbb
dec
enter
push
cmovp
lahf
cli
push
sbb
loope
xchg
sbb
push
jge
hlt
xor
dec
icebp
call
push
and
dec
mov
cld
jecxz
adc
int3
int3
mov
jl
xor
add
inc
hlt
add
pop
push
pop
xchg
pusha
jp
pop
xor
add
fwait
js
and
push
inc
pop
inc
push
popf
jle
fcompl
jecxz
ljmp
mov
adc
sbb
mov
jae
movsl
insl
lahf
inc
clc
pop
jge
push
dec
test
mov
pop
mov
xchg
push
hlt
xchg
jl
or
mov
mov
cmp
rorb
mov
scas
imul
add
das
mov
mov
insl
inc
sbb
or
cs
fmuls
mov
pop
in
cmp
les
and
fnsave
xor
and
xchg
sbb
popa
xchg
jge
jne
sub
cmp
sbb
dec
push
fldl
ljmp
sub
in
jb
cmc
cmc
and
outsb
outsl
add
loop
pusha
stos
shrl
fiadds
test
movsb
xchg
cmpsl
fdivs
aas
cmp
jp
outsb
adc
add
icebp
das
sbb
dec
cmp
in
popa
dec
lret
push
cmc
xchg
add
insl
aaa
mov
push
movsl
add
mov
push
icebp
jno
dec
mov
pop
repz
jecxz
shrl
ja
addl
cli
dec
int
and
in
sbb
and
jnp
push
scas
xor
repz
aaa
ss
jl
enter
push
mov
push
lods
mov
js
xor
add
adc
imul
stc
sub
xor
dec
add
mov
ud1
inc
xchg
lods
fidivrs
lcall
fistps
dec
ja
dec
scas
xchg
dec
jbe
adc
jge
jge
ja
push
or
ss
adc
dec
outsb
nop
adcl
dec
jl
push
mov
popf
repz
mov
cmp
es
loope
cmpsb
xor
dec
or
or
sub
inc
out
xchg
dec
stos
nop
cld
xchg
push
lcall
add
cmp
test
inc
adc
popa
mov
data16
lock
movsb
inc
bnd
sbb
mov
sbb
jns
ljmp
add
das
loope
xor
lds
jb
pop
jmp
lea
xchg
insb
jbe
inc
mov
addr16
loop
shl
or
mov
movsl
les
pop
sti
ljmp
inc
fiaddl
movsl
gs
pop
dec
push
jo
in
add
jecxz
and
test
add
jge
fisubl
push
mov
mov
xor
in
adc
jl
sti
cs
xor
sbb
add
sbb
fistpl
pop
popf
and
shlb
cs
jbe
cmp
in
decl
inc
pushf
adc
fidivs
out
xchg
or
jnp
scas
gs
adc
scas
into
stos
sub
adc
adc
in
pop
jmp
sub
ja
push
add
dec
or
lods
je
fiadds
cld
into
outsl
ja
outsb
sub
add
mov
mov
jne
imul
movsb
test
aaa
popf
jmp
scas
or
add
testb
xor
outsl
pusha
adc
rcl
mov
leave
imul
jle
pop
outsl
nop
stos
sub
xor
jl
insl
pop
fs
cli
and
mov
pop
xorb
mov
popa
add
cmp
in
mov
daa
outsb
push
stc
xor
insl
stos
loopne
cwtl
pop
mov
fdivs
cltd
rorb
mov
add
cmpsl
xor
mov
pusha
xor
pop
sub
enter
rcrb
pop
sub
shlb
xchg
es
mov
loopne
pop
or
and
adc
adc
jecxz
out
bound
pop
cld
cmp
dec
int
xchg
daa
xor
add
jo
mov
adc
dec
cmpl
fdivrs
xchg
cwtl
popf
adc
lock
imul
adc
addr16
fists
inc
pop
inc
jo
sub
dec
lock
icebp
aas
add
adc
pop
mov
or
inc
aaa
cmc
adc
or
mov
shlb
aaa
jmp
clc
popa
fs
cmp
jae
int
mov
cmpb
stos
sbb
pop
add
push
repz
cmp
repnz
inc
jns
pop
jmp
aam
sbb
mov
jmp
jns
and
pop
mov
xor
popa
popf
xor
jne
enter
mov
adc
xchg
out
cmpsl
loopne
outsl
sbb
inc
or
nop
cmp
dec
shlb
bound
imul
push
xor
pop
adc
pusha
repnz
sub
pop
out
divb
pusha
jno
cs
test
andb
fildl
jle
sub
shl
outsb
jnp
lret
add
cltd
xor
sub
adc
pop
xchg
jmp
testb
pop
sub
and
cmp
push
cmp
add
scas
and
push
lods
adc
movsl
jle
sbb
or
repnz
sbb
xor
call
fxch
adc
add
test
push
mov
cmpb
mov
add
loope
mov
lods
mov
int3
sbb
mov
sbb
and
jo
add
lock
or
fisttpl
dec
cmp
jne
out
fistl
and
inc
add
adc
popa
lods
jp
xor
mov
loopne
mov
pop
hlt
mov
and
movsl
add
or
mov
test
mov
nop
push
movsl
dec
test
mov
sub
mov
cmpl
xor
sub
push
xlat
movsb
pop
push
mov
pop
addl
mov
arpl
fstpl
and
loopne
enter
fidivl
jl
push
push
imul
push
call
jge
xchg
ret
sbb
pop
movsl
mov
lock
adc
mov
aad
loopne
lcall
mov
int
punpcklbw
adc
cmc
mov
xor
popf
in
daa
pop
xchg
fstps
pop
cmp
inc
test
lock
or
add
inc
and
mov
sub
push
mov
add
add
cwtl
insl
xor
cmp
xchg
int
or
inc
xchg
lods
js
mov
cli
pop
enter
fwait
jnp
adcb
sub
stc
shll
leave
xor
sub
jecxz
ret
add
mov
les
out
shlb
adc
pop
mov
push
xchg
rclb
ljmp
xchg
sub
sub
add
pop
cltd
lret
dec
or
daa
adcb
div
inc
dec
dec
push
add
add
lds
add
pop
test
cwtl
add
mov
dec
mov
mov
mov
pop
scas
jns
mull
add
and
jns
mov
add
jecxz
out
addl
das
cmpsb
shl
mov
clc
add
mov
popf
or
stos
aaa
push
jbe
xchg
jmp
mov
imul
adc
pop
ret
adc
mov
add
push
sub
dec
pop
out
jg
sbb
test
imul
sbb
or
je
inc
sbb
mov
js
and
mov
pop
sbb
sub
xchg
cmc
out
repz
subb
and
adc
loope
pop
sub
xor
loopne
mov
call
adc
mov
iret
jp
icebp
xlat
in
out
and
in
pusha
out
outsl
into
add
sbb
cmp
mov
add
xchg
add
mov
popa
xchg
mov
lcall
sub
sub
cmp
test
stc
ljmp
mov
sub
pop
push
sarl
dec
mov
imul
jae
inc
in
paddsb
or
aas
jbe
loop
sbb
push
inc
push
add
movsl
scas
add
push
push
jl
lahf
push
sub
cmp
test
int
mov
dec
mov
enter
push
sub
xor
shl
out
stos
xchg
dec
fisubs
jne
mov
sbb
imul
movb
xor
shrb
mov
or
sub
cld
add
fbld
add
js
xlat
push
repz
sti
mov
mov
lcall
mov
jmp
add
popf
aad
xchg
fxch
pop
add
aad
data16
jnp
push
int
mov
dec
lea
cmp
and
adc
iret
addl
dec
mov
push
pop
scas
fs
ret
pop
inc
push
bound
imul
shrl
mov
xchg
cmp
arpl
jo
pop
xchg
cmp
out
pop
loopne
and
dec
jmp
out
adc
add
mov
les
jmp
lret
xchg
and
jge
jecxz
jmp
mov
and
xchg
pop
dec
cld
jge
sbb
shrl
add
mov
dec
push
inc
fadd
mov
mov
fsts
test
and
jl
pusha
rolb
repz
add
test
inc
arpl
jp
add
lock
jo
jnp
jl
push
cmp
xor
and
dec
pop
aaa
or
testb
cltd
stos
lahf
jmp
xor
leave
add
mov
add
test
add
cltd
stos
xor
or
add
pop
pusha
in
movsl
push
roll
xchg
negl
push
popf
cmp
call
lcall
push
xor
movsb
lret
lds
loope
stc
sub
mov
push
stos
add
lods
jnp
jl
add
mov
xor
and
fwait
enter
sbb
addr16
daa
jno
je
and
inc
in
test
cwtl
pop
mov
mov
enter
sub
outsb
fmull
sbb
xor
es
mov
mov
sbb
or
sub
fidivrl
int3
je
sbb
inc
jmp
cwtl
add
lods
mov
ret
enter
sbb
mov
lret
add
mov
cmp
aam
shll
test
enter
mov
add
enter
cs
sbb
cmp
jns
xorl
ljmp
push
dec
add
in
jae
mov
jmp
stc
filds
subl
lea
jb
add
das
fadd
out
repz
add
and
inc
insl
fdivrl
pop
or
and
shl
out
sub
inc
leave
and
int
mov
mov
or
movsl
sbb
mov
icebp
add
cld
or
out
sbb
stos
push
push
inc
mov
adcb
jbe
clc
and
push
add
sub
rclb
ljmp
add
daa
dec
in
or
and
adc
sbb
push
cmpsb
push
sbb
pop
ss
xor
sbb
or
inc
cld
flds
rep
js
sbb
mov
scas
rclb
jl
stc
and
outsl
jmp
pusha
mov
in
je
imul
xor
fs
push
popf
popa
jnp
inc
nop
addr16
sub
and
and
push
enter
loop
pop
jb
and
lahf
push
int
mov
movsb
push
add
xor
je
or
stos
jno
or
stos
jbe
sbb
sub
xchg
jecxz
out
enter
out
fldt
popa
test
push
add
int
fistpll
sbb
leave
aam
add
add
mov
loop
add
inc
push
inc
jo,pt
pushf
add
das
xchg
cld
dec
sarb
add
fsts
add
subl
sub
scas
movsl
outsl
xchg
lcall
mov
stos
out
test
call
leave
or
pop
bound
mov
roll
mov
out
data16
lcall
nop
pop
pop
mov
lea
mov
in
jnp
xor
and
sbb
add
xor
dec
sbb
aaa
add
mov
cmpsb
aas
add
enter
or
pusha
xor
jnp
movsb
jp
call
push
inc
filds
add
push
stos
inc
fnstsw
or
adc
push
and
dec
mov
clc
mov
andb
pushf
xchg
mov
lods
cmp
cmp
stos
imul
mov
lea
push
add
jmp
dec
add
outsl
fs
add
mov
xchg
mov
mov
lds
mov
pop
or
mov
sub
cmp
dec
adc
jb
cmp
inc
movsb
rolb
fdivp
pusha
mov
jle
stc
ss
movsl
push
mov
ret
and
xchg
add
aaa
push
sub
test
dec
ss
out
cmpl
test
pop
fs
lret
les
mov
sbb
hlt
outsl
mov
cmp
scas
fsubs
out
mov
pushf
jae
sbb
cmpsb
rol
loope
sub
add
sbb
notb
js
cmp
mov
adc
daa
inc
aad
and
add
sbb
or
pop
inc
xor
inc
inc
jle
je
loopne
sub
xlat
add
adc
sub
js
cltd
adc
add
mov
icebp
or
orb
adc
and
xchg
std
lea
or
stos
test
pop
cmpxchg
jo
icebp
lods
sbb
popl
add
iret
repnz
push
sub
adc
js
mov
lea
enter
adc
loope
in
roll
push
iret
add
or
adc
sbb
cwtl
jp
push
je
or
cmc
add
ja
rcr
jne
loope
push
sub
xchg
push
add
and
xchg
scas
jg
sbbb
fldt
incb
in
mov
or
pop
test
adc
scas
gs
repnz
xchg
int3
and
pop
add
ret
mov
out
lds
mov
into
out
or
add
sbbl
clc
dec
pusha
or
sbb
xchg
in
fwait
ficoms
or
imul
cmp
mov
into
cmp
cmpb
or
adc
sbb
add
fstpl
or
adc
sub
gs
xchg
loopne
sbb
cltd
loopne
xchg
rclb
fisttpl
push
movsb
pop
sbb
addl
jne
mov
pop
xor
shrb
jb
jo
add
fbstp
dec
and
add
add
mov
mov
mov
inc
mov
add
imul
add
pop
test
inc
sbbl
outsb
and
mov
mulb
and
jle
add
pop
push
mov
hlt
nop
pop
cmp
inc
insb
mov
add
pop
test
jae
movsl
rcrb
scas
sub
and
cmp
in
push
jno
mov
add
lahf
mov
mov
add
in
mov
daa
out
sub
fwait
pop
lock
pop
shlb
scas
outsb
stc
mov
loope
add
inc
in
push
pop
or
iret
mov
stos
mov
push
fidivs
repnz
cli
sbb
lret
inc
pushf
jp
imul
adc
inc
mov
das
jnp
push
sbb
sbb
loopne
add
sub
adcb
imul
in
sub
jbe
lods
js
cmp
loope
fildl
mov
or
xchg
xchg
sbb
icebp
push
add
ret
pop
clc
and
jns
mov
or
and
rolb
and
sbb
repnz
add
pop
ljmp
add
scas
jb
test
andb
mov
xor
ret
cmp
push
jle
adc
jge
call
and
inc
or
rcll
movsl
stos
shlb
cwtl
lret
cmpl
mov
lcall
adc
sub
dec
sar
out
jno
movsb
cwtl
or
mov
test
lea
idivb
mov
stc
push
adc
adc
pop
jmp
loope
outsl
pop
rcpps
add
dec
test
cmp
ss
data16
imul
jge
jmp
pavgb
inc
adc
jle
mov
movsl
mov
xchg
enter
int3
rorb
cmp
cmp
pop
mov
imul
inc
data16
andb
test
es
stos
jp
add
inc
cmp
sbb
adc
inc
sbb
test
test
push
shlb
sub
and
ret
or
push
insl
into
call
adc
pushf
aas
mov
mov
ret
push
or
mov
addr16
xchg
xchg
add
cmpsb
dec
cmp
int
out
loope
cwtl
and
pushf
movsb
popf
dec
xor
popf
push
pop
and
stc
cmp
push
jge
rolw
adc
pop
cltd
in
shrl
cmp
adc
outsl
mov
mov
or
adcb
add
mov
cmpsb
fistl
sbbl
ja
push
lods
cmovo
cli
lret
sub
sbb
ret
fiaddl
xlat
inc
addl
adc
add
dec
lcall
mov
mov
mov
movsb
add
jae
cmp
ljmp
adc
add
js
or
pop
and
dec
adc
add
pusha
and
pop
cltd
adc
mov
push
mov
mov
pop
cmp
mov
dec
xor
in
cs
sub
cltd
into
je
pop
cmp
and
mov
mov
mov
or
cltd
rolb
add
shr
das
dec
add
mov
sub
pop
mov
and
negl
cmp
fcomps
jecxz
cmp
jo
add
stos
xor
cmp
cmp
inc
hlt
flds
jle
jb
movsb
mov
loop
xlat
or
sbb
push
xchg
push
lahf
push
lea
stos
adc
sbb
jg
add
mov
roll
jmp
add
mov
addb
test
adc
repnz
sub
xchg
es
lds
cli
sub
add
test
jmp
je
add
xchg
jecxz
stc
cld
cli
sbb
mov
sub
add
or
fidivrl
jnp
mov
arpl
push
outsl
sbb
adc
loop
jo
adc
imul
mov
add
push
cld
ret
push
inc
cmpsl
adc
or
add
dec
lcall
call
roll
inc
xchg
mov
repnz
loop
popf
adc
out
sahf
aam
sbb
sbb
data16
jb
cmp
popl
std
mov
les
push
in
mov
inc
loop
test
or
cmp
fstpl
aad
add
shrb
sub
test
mov
jo
xchg
xchg
jns
add
pushf
nop
lret
out
add
sub
jns
sub
ds
sub
add
or
arpl
lds
sbb
adc
push
cmp
gs
dec
imul
out
loope
and
jno
test
int
mov
mov
ja
jne
xchg
aam
add
xchg
mov
push
rolb
je
sub
pop
lret
nop
push
add
inc
dec
jg
aam
jne
dec
xor
das
in
stc
dec
stos
ljmp
cmp
pusha
rol
jge
int3
aam
inc
add
cltd
push
rcl
mov
add
jno
add
das
cli
testl
rcrb
mov
fcoms
cltd
mov
mov
cld
mov
cmpsb
cmc
rcrl
xchg
out
xor
pop
or
and
es
sbb
mov
cmpsb
add
mov
aad
jecxz
rcrl
arpl
fs
push
inc
and
sbb
mov
mov
test
mov
pop
add
in
inc
jmp
push
xor
add
les
add
dec
mov
outsl
push
push
dec
icebp
iret
data16
pop
xchg
or
pop
inc
adc
rcr
jae
sub
jmp
mov
add
aas
lea
sti
push
push
xchg
fmuls
and
and
pop
adc
add
mov
faddp
or
into
int
push
or
je
add
fs
and
sbb
sub
out
fadd
sbb
cmp
jo
hlt
popa
icebp
cld
out
or
aas
dec
stos
sbb
and
pop
inc
cmp
add
push
movsl
sub
gs
and
adc
and
push
mov
add
hlt
out
or
add
int3
mov
dec
lcall
jo
nop
addl
sub
cmp
aas
adc
out
push
mov
add
add
xchg
test
xchg
pusha
cli
add
sbb
add
rcl
add
cmp
orl
das
aad
jb
xlat
add
adc
pop
xchg
imul
popf
add
dec
xor
pop
cmc
jge
jecxz
sbb
ret
nop
fwait
add
push
jle
push
gs
sub
pop
mov
iret
pop
adc
ja
mov
add
mov
add
push
xor
add
sub
and
xor
pushf
and
int
jo
fstps
pusha
add
cmpsl
mov
addr16
xchg
cmp
aad
push
and
add
inc
add
push
test
mov
pop
cltd
xor
sub
mov
mov
call
rolb
mov
pop
jp
ret
sub
fnstsw
cmc
push
add
lds
rcll
negb
das
mov
mov
popf
bound
js
sbb
cmpsb
xor
roll
push
outsl
or
faddl
roll
add
fwait
mov
push
jmp
outsb
addb
push
lock
push
lods
insb
mov
arpl
clc
mov
add
push
cmpsb
pop
mov
jle
sub
jno
add
sub
inc
add
jl
aaa
insb
loopne
shl
or
fisttps
adc
push
add
scas
cmp
or
sti
rol
pop
nop
sub
ret
fisubl
pushl
lock
sbbb
pop
lret
lret
add
fwait
sub
pop
js
cmp
xor
jno
in
cmpsl
stc
dec
jbe
add
js
popa
and
dec
add
dec
std
loop
subb
pusha
or
push
dec
jo
dec
add
pop
sbb
mov
in
add
pop
adc
je
add
roll
push
loope
jne
sub
enter
push
fadds
iret
lock
mov
push
lcall
and
adc
pop
in
inc
int
imul
scas
movsl
or
fstl
cmpsl
mov
je
mov
xchg
hlt
and
fsubrl
lds
es
div
rclb
iret
sarl
pushf
cmp
sub
xchg
sub
pop
js
cmp
push
in
test
or
pop
mov
inc
push
cli
sti
and
add
sbb
jecxz
test
mov
orb
iret
xor
cmp
lret
sbb
jle
cmp
les
and
popf
xor
mov
lcall
jno
cwtl
jbe
cmp
arpl
pushf
cs
sbb
sbb
xor
icebp
shrl
mov
add
add
jp
add
movsl
or
in
fistpll
add
mov
push
xchg
mov
or
gs
divb
or
or
xchg
pusha
xor
dec
xor
push
inc
aas
fcoml
lods
inc
fwait
ja
push
cmp
js
and
pop
or
adc
aas
fbstp
adc
add
mov
movsb
nop
mov
jg
pusha
lea
xchg
neg
pop
mov
sbb
inc
orb
call
adc
mov
nop
aam
add
shlb
pop
stc
mov
ret
add
rclb
mov
fldcw
les
aad
jo
pusha
adc
xor
cltd
ret
jns
pop
inc
add
cwtl
mov
sti
xor
inc
sub
pushl
fcomip
ja
xor
sub
xchg
lea
sub
repz
ss
imul
mov
inc
call
add
sbb
dec
stos
adc
call
xor
rol
adc
clc
mov
in
mov
clc
loopne
loope
ret
pushf
add
das
dec
jbe
movb
mov
cwtl
cmp
push
mov
and
push
aaa
rcrb
rcll
mov
rcll
push
subl
pop
and
cmpxchg
ljmp
or
add
ds
cs
adc
add
paddsw
adc
xor
lea
jecxz
jmp
cld
dec
mov
or
push
rol
enter
cld
pop
divl
pop
pop
inc
lock
enter
repnz
pop
flds
inc
adc
jno
adc
and
adc
sti
movsl
dec
fwait
adc
or
xor
and
or
push
cmp
bound
ja
pop
xchg
and
xor
lret
les
or
mov
jmp
or
out
mov
stc
add
cmpsl
push
push
mov
and
cmp
das
adc
jmpw
dec
aas
fldenv
bound
inc
xlat
mov
dec
es
jmp
xor
inc
loopne
add
scas
pop
or
lods
add
testl
inc
mov
sub
stos
clc
sub
pop
sahf
loop
popf
xor
xlat
xchg
xor
lods
ret
fidivrs
mov
and
xchg
cmp
dec
nop
sub
sbb
inc
repz
sbb
add
data16
mov
add
adc
fwait
dec
sub
push
or
inc
call
push
outsb
ss
mov
out
push
ljmp
pusha
cmpsl
jbe
jns
pop
xchg
or
mov
mov
fiaddl
and
mov
cmp
pop
cmp
test
fs
sbb
ja
and
sub
push
inc
fwait
add
ss
xor
sti
add
push
in
pop
imulb
add
mov
add
andb
insb
add
xlat
and
mov
test
call
fsts
xchg
pop
enter
inc
sub
leave
lods
loopne
aas
adc
outsl
jno
es
push
jecxz
neg
adc
ss
or
add
movsl
test
pushf
imul
lahf
repnz
inc
xor
add
mov
outsb
mov
mov
add
cmpsb
adc
shll
andl
inc
push
loope
imul
cltd
aas
dec
cmpsl
fmul
dec
add
in
sarl
mov
imul
rcl
test
iret
adc
sahf
mov
es
dec
mov
and
sarl
lret
int
and
scas
and
add
xor
shld
pop
sbb
add
dec
lahf
cmp
out
xlat
imul
loop
dec
jge
add
push
mov
push
test
add
enter
jnp
sbb
push
ficoms
mov
fs
add
push
cld
sbb
je
out
and
cmp
test
fildll
ficoml
movsl
icebp
rolb
mov
mov
mov
mov
xor
adc
xor
mov
out
lds
add
mov
fxtract
dec
add
xorb
cmp
xor
push
xchg
add
push
ss
xchg
cmp
nop
add
das
and
xchg
in
add
fwait
push
gs
adc
push
xor
rorl
add
jbe
es
xor
dec
nop
mov
xchg
mov
mov
repnz
mov
cmp
pop
imul
jmp
push
icebp
xchg
jp
jae
jge
add
pop
adc
push
pop
push
pop
ds
pop
shll
rclb
push
pop
xor
push
lret
push
test
jecxz
in
push
push
cmc
add
testl
mov
mov
filds
adc
pop
jo
sub
xchg
repnz
mov
pop
es
movsl
mov
add
mov
adcb
stc
mov
int3
shl
and
test
jbe
loopne
jg,pt
add
cs
cmpsb
add
dec
fisubrs
mov
mov
addr16
xor
or
adc
jmp
sub
daa
enter
shr
leave
push
pop
add
into
adcl
outsl
add
dec
test
aad
add
pop
movsl
add
lods
xor
add
bound
loop
fcoml
iret
repz
add
xchg
cwtl
popf
add
fstl
faddl
mov
or
loope
xor
push
dec
stos
push
cmp
adc
push
rorb
mov
lods
outsb
test
inc
pop
xchg
sub
loopne
mov
mov
pop
mov
xor
lock
ficoms
cld
iret
sbb
adc
in
rorb
sbb
insb
push
jo
adcl
or
or
popa
xor
rorb
mov
mov
add
xor
cmp
cltd
sahf
adc
clc
adc
int
aas
js
sbbb
loopne,pt
sbb
lods
inc
or
arpl
xor
mov
jecxz
pop
xor
data16
xor
test
add
mov
fisubrl
add
or
sub
add
and
into
shr
xchg
jg
mov
sub
aam
add
or
xor
mov
fisttpl
add
jg
add
lock
add
inc
xor
mov
pop
fimull
pop
cmp
rolb
inc
loope
fwait
jge
lret
out
jb
test
add
adcb
cmp
mov
insl
cmc
leave
lea
mov
xor
cltd
rclb
filds
xchg
add
nop
in
or
gs
sub
lock
imul
outsb
mov
add
fisttpl
push
mov
lret
repnz
loopne
push
add
mov
outsb
cmp
mov
pusha
or
pop
mov
inc
cmp
add
sbb
cs
stos
hlt
inc
xchg
cwtl
loope
mov
rcrb
inc
shr
push
outsb
and
dec
add
inc
in
xchg
add
je
xor
sahf
cmc
add
sbb
sub
xor
pop
or
mov
je
add
dec
dec
mov
fldl
hlt
xor
addl
stos
mov
add
xor
nop
sub
add
insl
mov
add
jp
out
dec
or
jecxz
test
sbb
jmp
sbb
in
adcl
inc
call
dec
popf
and
movsb
inc
fidivl
lret
push
fsubrs
lret
movsl
out
or
jge
xor
mov
fstpl
nop
pop
push
cmpsb
iret
into
pop
inc
out
test
pop
pop
pushf
adc
push
fmuls
sbb
andb
jne
rorb
sbb
add
aas
xchg
arpl
sub
cmc
mov
pop
int3
add
xor
mov
nop
push
pop
mov
mov
jno
and
push
and
gs
pop
dec
stos
add
add
add
cmp
and
enter
les
aam
add
pusha
mov
pop
add
dec
loopne
jb
out
imul
pop
adc
add
xchg
add
push
rorl
jmp
hlt
jg
imull
outsl
les
cmp
push
sub
sbb
lods
jp
imul
adc
sbb
add
pusha
jge
push
or
pop
or
mov
fs
xchg
fsubs
cmpb
stos
adc
xchg
add
pop
jae
cmc
mov
inc
jg
lcall
dec
add
push
sbb
mov
or
add
outsb
pusha
add
push
sub
fistpll
pop
add
aam
xor
or
add
iret
dec
or
ds
add
out
test
loop
cmp
pop
or
and
ficoml
cmpsb
sbb
mov
loopne
out
jne
add
loop
xor
mov
aad
or
mov
add
orl
add
xor
pop
push
loopne
ss
aam
je
dec
js
pop
add
lret
pop
mov
pop
sbb
mov
jmp
or
sub
mov
xchg
xor
subb
fstpl
xor
adc
add
pop
mov
lods
loop
push
popf
adc
xchg
sub
cmp
adc
in
addl
mov
xor
mov
rcll
out
inc
push
jmp
mov
rcrl
sahf
imul
sbb
jo
jecxz
test
int3
inc
stos
test
pop
test
mov
mov
and
fs
or
scas
pop
icebp
jmp
testb
sub
jo
mov
cmp
push
pushf
push
mov
and
js
out
mov
push
insl
pop
cs
sub
add
and
dec
sbb
push
jbe
sarl
push
loopne
in
add
pop
andb
push
xchg
sub
stos
add
sbb
addb
or
add
add
pop
sbbb
pop
cli
arpl
in
scas
xor
and
or
sbb
adc
call
in
test
lcall
bound
inc
loopne
mov
add
mov
mov
or
roll
dec
and
jne
add
inc
mov
sbb
pushf
mov
mov
push
add
cmp
inc
aas
loopne
pop
xor
sti
inc
adc
pop
out
in
in
and
or
js
or
mov
negl
add
popf
sahf
mov
fdivrl
add
xchg
pusha
xchg
fistl
cmp
xchg
stc
dec
clc
mov
insl
rsm
sub
cmp
pushf
addl
scas
je
inc
add
sbb
dec
add
cmp
sub
sub
loopne
imul
or
sbb
jle
mov
xchg
hlt
add
cmpsb
pop
add
lds
fs
lcall
push
add
xchg
jns
mov
inc
xchg
pop
mov
jmp
sub
decb
mov
xor
push
cmc
inc
ret
add
cld
ds
int
ja
adc
sub
outsb
je
jne
test
xor
pop
cmp
mov
sbb
mov
sub
adc
push
inc
push
jne
cmpl
sub
cmc
pop
xchg
mov
leave
jne
jl
add
into
outsb
xorb
arpl
sbb
gs
lods
out
sub
xor
cld
xchg
mov
mov
icebp
std
ljmp
lea
scas
xchg
subb
push
pop
jecxz
pop
rorb
inc
mov
xor
outsb
mov
xorl
jns
xor
add
add
mov
adc
pop
enter
add
outsb
pop
push
adc
cmp
popf
add
sub
jle
sub
les
and
add
pop
sub
jge
outsl
push
je
sahf
js
mov
movsl
cld
fstl
cltd
out
lahf
inc
add
stc
pop
push
ret
mulb
push
adc
jg
sbb
pop
cmp
mov
cltd
jb
nopl
push
cmp
inc
pop
xchg
cmp
fildl
xchg
mov
cmp
and
adcb
add
pop
nop
lods
jno
add
or
and
pop
loop
add
xchg
cmp
out
fidivl
repz
lock
or
popa
fisubs
sarb
add
into
push
in
lds
out
jno
andl
pushf
xor
and
xchg
orb
add
mov
push
sub
test
or
mov
scas
pop
mov
push
negl
add
or
mov
ret
fwait
rorb
cld
les
xor
mov
dec
rclb
push
iret
bndstx
repnz
sbb
lods
pop
or
shll
adc
ja
fwait
or
aam
sar
add
xchg
xor
ljmp
sti
add
and
fdivl
adc
dec
push
cmp
call
lock
repnz
test
adcb
and
or
xchg
mov
aas
rolb
incl
fwait
xor
mov
mov
add
mov
cmpb
push
pop
add
jge
add
sahf
add
leave
or
fbld
cmp
and
scas
leave
repnz
xor
mov
push
inc
jecxz
xor
movsb
popa
adc
or
or
andb
mov
adc
gs
lods
adc
xor
xor
push
pop
ss
mov
outsb
jle
mov
loope
mov
adc
mov
or
add
push
jbe
jmp
out
mov
push
add
fdivrs
add
inc
sub
shlb
idivl
movsl
sbb
push
lret
inc
in
js
pop
sarl
xor
ja
add
clc
add
jno
lcall
out
jle
mov
add
pop
scas
jmp
add
adc
mov
test
add
pop
mov
pop
push
mov
pop
mov
pop
add
dec
cmp
movsl
repnz
cmpsb
ljmp
loope
dec
aad
fiadds
xchg
pusha
mov
aas
out
adc
adc
pop
adc
sbb
push
push
ficoms
repz
inc
fiaddl
inc
and
outsl
lret
in
add
xor
movsb
cmp
movsl
add
mov
lds
lods
jno
or
stc
mov
pop
lods
add
stos
xor
popf
lcall
add
les
in
lea
or
fdiv
cltd
push
sbb
test
cmpsl
sub
inc
sub
das
pop
and
sbb
fadds
dec
popf
lods
sub
mov
add
inc
int
adc
stc
popa
into
rcl
mov
fcompl
fcomps
test
shll
aam
jb
jbe
add
mov
call
add
ret
xchg
inc
mov
mov
sti
xor
and
aad
es
or
sti
inc
addb
xor
jl
rcrl
fisttps
add
shlb
loopne
or
add
sub
mov
add
mov
shrl
or
hlt
add
jae
push
jp
dec
sub
imul
enter
cmp
jmp
xchg
or
stc
shlb
mov
or
jbe
xor
mov
push
cwtl
pop
pop
repz
xor
xor
mov
test
push
rorb
out
add
ret
popf
movsl
psadbw
mov
and
inc
scas
inc
add
lahf
insl
hlt
call
insb
sti
ja
cmp
fsubl
aam
add
out
adc
mov
jns
xchg
out
pop
xor
cmp
imulb
fld
add
inc
insl
xchg
jo
add
movsl
lcall
movsb
mov
inc
out
mov
add
jg
mov
add
repz
jo
or
or
xchg
push
adc
testl
mov
mov
add
sbbl
arpl
xor
push
and
mov
sub
sub
xor
add
xchg
sarb
and
cmpsl
jno
insl
das
or
mov
mov
mov
jb
hlt
jge
rcrl
xor
int3
push
or
add
sbb
mov
ret
dec
aam
lds
or
inc
sub
add
inc
add
mov
cmp
imul
add
test
sbb
add
lahf
stos
loop
cmpsl
push
add
dec
sbb
lret
fsubr
add
inc
inc
jbe
ds
incb
adc
in
pop
xchg
outsl
insl
add
insb
pop
push
repnz
cmpb
push
jb
call
jbe
fs
adc
add
out
fldenv
mov
add
pop
mov
lock
sarb
push
cmpsb
imul
add
mov
mov
leave
pop
add
push
mov
imul
push
iret
xor
test
insl
cmp
dec
andl
test
xor
leave
rclb
pop
je
sub
pop
cmpsb
decl
add
and
add
xchg
jl
outsb
cmp
adc
push
stc
scas
add
popf
mov
inc
push
dec
push
add
pop
mov
mov
push
das
xor
mov
and
inc
sub
pop
xchg
or
xchg
add
outsb
sub
mov
aad
inc
mov
movsl
aaa
pop
inc
pop
orb
pop
add
les
dec
dec
loopne
xor
jo
pusha
add
or
add
jno
inc
xor
jne
imul
cmp
pusha
mov
and
mov
stos
pop
je
add
sbb
and
mov
mov
xlat
test
in
lahf
dec
ret
xchg
movsl
add
insb
sysenter
mov
jne
xor
sbbb
call
pop
mov
mov
leave
adc
jb
xor
rorb
push
mov
sbbl
push
repnz
jmp
add
dec
adc
xorl
add
add
out
xchg
fmuls
add
cmpsl
dec
adcb
add
xchg
xlat
fwait
add
je
or
push
int3
sahf
rorb
mov
test
cmc
nop
hlt
fs
shll
enter
add
aad
cmp
xlat
lods
jno
push
lods
rorl
pop
cmp
rclb
ret
dec
nop
mov
inc
dec
test
js
jnp
pop
jp
movb
test
mov
call
jns
sbb
add
push
adc
dec
mov
rcrb
and
call
mov
xchg
push
loopne
cmp
testb
and
or
dec
dec
push
inc
push
push
xor
int
test
fs
call
mov
jp
push
clc
inc
mov
dec
mov
shlb
inc
or
sbb
or
cmpsb
mov
xchg
pslld
test
jl
test
add
insb
add
add
enter
fisubs
cwtl
mov
rorl
xor
xor
popa
lods
or
cmp
push
cmpsb
sub
mov
fdivs
pop
test
sub
add
push
je
clc
pusha
add
stos
data16
sub
and
jecxz
mov
and
mov
ds
jae
xchg
jbe
lret
cltd
imul
cmc
pop
imul
jl
jo
mov
jb
mov
inc
sbb
and
add
ftst
cmp
lock
and
adc
mov
add
push
cli
jns
inc
push
addb
jmp
push
inc
xchg
addr16
shrb
add
and
xchg
jae
cmp
pop
rcl
jge
push
adc
adc
and
xor
out
pushf
dec
cmp
mov
cmpsb
dec
push
jmp
add
lods
xchg
push
popf
adcl
je
inc
push
sarb
inc
nop
andb
aaa
jne
ret
es
mov
dec
xor
add
sti
insl
cmc
sbb
mov
or
xchg
inc
and
sbb
les
es
adc
sbb
cwtl
and
pop
sbb
adc
xor
test
sar
pusha
inc
rcr
test
pop
add
aam
aas
fisttps
xorl
pusha
xchg
jle
add
shl
repnz
out
add
nop
aas
mov
test
and
gs
inc
inc
dec
pusha
inc
cltd
xchg
xchg
in
in
adc
fisubs
xor
lods
fildl
enter
inc
dec
add
imul
mov
push
add
dec
sbb
jb
xchg
cmp
icebp
xchg
repz
add
hlt
xchg
pop
add
ret
add
or
mov
jmp
rol
in
jnp
jg
sub
and
ror
inc
shlb
add
adc
jbe
add
daa
mov
scas
gs
add
mov
shl
rol
cmp
mov
test
mov
lods
mov
je
ds
mov
movsl
add
outsb
pushf
sub
test
fs
pop
addr16
push
xchg
dec
inc
orb
setae
xchg
mov
adc
sbb
sarb
outsb
negb
or
int
test
pop
movsl
mov
mov
imul
jne
push
pop
xchg
arpl
lock
dec
loope
repnz
rcrl
loopne
or
gs
cs
mov
sub
add
pop
outsl
or
add
iret
addb
jmp
mov
mov
clc
ja
imul
aaa
repz
movsl
push
out
in
or
inc
or
fisubrl
popa
filds
scas
fs
jmp
sbb
popa
movd
push
pusha
or
push
inc
xor
add
pusha
add
test
inc
inc
mov
xchg
lret
cmp
bound
in
cli
pushf
or
loop
sub
adc
mov
inc
rcrl
test
cltd
pusha
jge
pushf
push
sbb
xor
sahf
pop
add
or
pop
push
outsb
mov
jns
clc
xchg
sub
dec
jl
subl
xor
loope
out
icebp
fimull
pop
test
mov
sub
pop
sbbb
dec
add
lods
pop
cmp
dec
gs
test
cmp
sub
loopne
jno
sub
xor
repnz
lds
std
mov
mov
aad
push
insb
mov
aaa
lods
xchg
add
pop
xchg
cmp
fiaddl
test
into
jg
leave
fcmovne
sti
push
movsb
rolb
xchg
cli
dec
pop
pop
or
push
lcall
in
sbb
inc
mov
sti
push
pop
rol
adcl
add
imul
dec
psubusw
popa
sbb
lret
fs
sbb
pop
shlb
add
movsb
mov
test
stc
and
fstpl
lea
lods
daa
push
outsl
jae
int3
cmp
inc
jns
xchg
push
lods
pop
mov
mov
sbb
inc
idivb
imul
push
lods
push
mov
sub
add
add
test
and
xchg
lods
or
adc
xor
shr
and
xor
outsb
dec
xchg
inc
and
lret
push
push
sub
dec
cmp
dec
in
int3
add
ja
test
aaa
arpl
das
jle
push
ds
xorl
cmc
ret
loope
jo
andb
call
cwtl
or
or
testb
pop
sbb
and
or
adc
inc
add
sub
pop
sbb
cltd
xor
mov
jne
lock
jge
add
xor
movsl
je
mov
in
roll
ds
sub
add
and
sahf
adc
add
push
mov
pop
or
sub
test
mov
clc
add
mov
outsl
cmp
mov
jl
cmp
add
lahf
cmp
cwtl
xor
jae
lds
mov
pusha
fldenv
pop
cld
xchg
je
jp
add
imul
xchg
pop
mov
add
mov
leave
pop
add
lret
les
std
mov
in
push
pusha
or
add
cmp
lods
pop
aam
jge
add
push
jb
sbb
lea
xchg
jecxz
mov
push
movsb
iret
add
jge
imul
or
cmp
jo
call
cmp
jg
ret
sbb
adc
push
or
sub
cmp
aad
pop
jns
add
arpl
mov
pop
sbb
pop
ds
rolb
repz
out
in
imul
and
cmp
add
rcrl
sub
in
push
rcll
adc
add
xchg
adc
pop
cmpsl
ja
jae
mov
add
push
inc
pop
lods
adc
mov
sbb
mov
filds
add
push
daa
data16
add
lahf
xchg
rorb
add
andl
add
dec
mov
mul
popf
add
clc
mov
xchg
push
out
sbb
mov
je
out
inc
mov
cmp
cli
add
or
xchg
pushl
stos
add
xchg
lret
movsl
cmpsl
jmp
hlt
adc
cwtl
ds
cmp
push
dec
mov
addr16
add
vpminub
hlt
cmp
inc
bound
sbb
popa
pusha
sbb
aas
popa
out
mov
jnp
inc
mov
fnstsw
ss
and
jb
jnp
fcmovne
add
lret
add
daa
pop
mov
jb
das
mov
add
shl
call
or
ret
add
and
mov
addr16
mov
push
test
add
xchg
jge
xor
xor
add
imul
rolb
fs
add
mov
in
sbb
mov
add
ds
mov
add
xchg
jno
sbb
xchg
sbb
lods
jb
xchg
jne
js
mov
pop
jno
adc
test
push
sub
adc
rorl
xchg
mov
xchg
sub
jno
adc
add
fnstsw
or
jnp
adc
subb
pop
push
flds
push
out
rclb
ljmp
cmp
jo
add
lahf
inc
fists
adcb
iret
dec
andl
push
stc
nop
hlt
lods
and
xchg
ds
mov
lock
push
jmp
xlat
ds
add
pop
out
inc
mov
mov
cmp
cld
or
je
pusha
jle
and
add
xlat
fdiv
sahf
jmp
js
add
xor
xchg
in
and
add
and
adc
mov
cli
ja
push
add
out
jno
and
das
lods
lea
clc
add
add
nop
or
add
pop
push
mov
in
xchg
ret
mov
sahf
or
imul
inc
bound
mov
testb
adc
imul
addr16
push
jne
sub
push
add
dec
cmpsl
test
mov
add
lahf
mov
push
arpl
pop
jns
sahf
ss
xchg
and
and
add
push
mov
vmovlps
mov
pop
jae
inc
daa
popf
notb
push
call
mov
add
mov
add
adcb
push
shlb
in
setae
psrlw
inc
loopne
mov
in
fimuls
jae
sbb
pushf
and
js
mov
adc
xor
sub
js
iret
shlb
rcrl
add
cld
dec
xchg
pop
jno
adc
push
mov
jmp
and
sub
pop
inc
mov
mov
pushf
add
mov
cmc
jne
adc
or
and
or
loope
add
enter
data16
cmp
sbb
jno
dec
cli
xor
add
xor
dec
jno
clc
or
push
mov
and
pop
push
add
ja
bound
add
cli
adc
repnz
jb
add
sub
add
ss
jg
lods
pop
or
loopne
mov
xchg
mov
add
jmp
mov
ret
ljmp
adc
aam
pop
pop
xor
xor
push
dec
push
mov
imul
iret
testl
jp
adc
clc
pop
imul
inc
loopne
loop
xchg
xchg
xor
and
int
nop
das
loope,pt
adc
out
ja
pop
popa
xor
mov
sarb
dec
and
aam
int3
pop
push
lret
cmp
pop
or
mov
ret
sbb
jo
add
sub
mov
jecxz
addr16
fstp
dec
aas
movsl
out
les
mov
dec
sbb
pop
xchg
jnp
rcrl
pop
insb
jp
push
call
or
js
repnz
je
push
into
mov
lahf
jmp
mov
decl
adc
outsb
lret
xor
mov
and
add
pop
shl
add
jo
aas
sub
mov
test
add
sarb
hlt
inc
repz
xchg
sub
pop
sbb
outsb
push
adc
sub
cwtl
add
lods
outsl
aad
mov
imul
int
test
pop
or
mov
sahf
roll
les
lods
outsl
sarl
idivl
lret
shlb
or
outsl
lock
sub
push
jne
test
cmp
adc
mov
push
orl
lret
cs
icebp
roll
shll
loope
and
js
pop
addb
enter
push
loope
jg
sarb
add
scas
mov
rolb
add
ret
stos
dec
cmp
mov
jns
add
push
xlat
pop
cli
lret
push
add
mov
stc
jle
clc
xor
int
hlt
mov
xchg
sub
sbb
add
mov
pop
and
pop
inc
inc
dec
xchg
sbb
loop
push
inc
movsb
jae
add
insl
leave
loopne
add
lcall
fs
mov
jecxz
add
push
add
mov
or
aas
scas
outsl
sbb
adc
es
mov
add
stc
daa
int
xor
ds
mov
or
imul
push
sbb
jne
add
jno
mov
hlt
add
out
cmp
dec
pop
and
cmpxchg
inc
add
jns
ds
add
insl
shl
jmp
shll
push
sbb
push
and
int3
add
addr16
jmp
loopne
aas
pushf
adc
js
mov
push
pop
push
decl
leave
sub
fwait
out
xchg
mov
data16
outsb
pop
cltd
lock
scas
out
mov
jbe
cld
cld
or
add
dec
mov
ret
push
rcrb
adcb
mov
scas
or
push
lock
mov
mov
inc
frstor
clc
je
add
scas
xchg
loope
iret
lcall
rcl
mov
out
out
xchg
sbb
mov
in
xchg
std
scas
inc
add
rcll
stos
lcall
xchg
add
xor
jp
or
xor
test
lcall
bound
xchg
call
push
movsl
adc
lea
add
test
outsl
bound
sbb
add
or
cmp
rcll
add
jo
sbb
test
add
xor
insl
push
stc
shlb
pop
inc
adc
add
movsb
mov
stos
jg
add
adc
sbb
aad
add
icebp
cmp
push
mov
js
orl
xchg
add
in
mov
mov
enter
inc
fstp
pop
lods
push
bound
add
test
inc
mov
stc
xor
fsubrl
cltd
jecxz
mov
xchg
movsl
add
pusha
pop
int3
add
jns
and
jmp
js
jg
cld
stos
add
jbe
dec
push
pop
add
pushf
mov
lds
push
xor
and
movl
mov
and
push
scas
push
sub
xchg
inc
fs
dec
rcl
xlat
add
leave
aam
jmp
inc
adc
adcl
mov
sbb
int
cwtl
lds
mov
out
aaa
inc
xchg
call
fnstcw
das
cmp
fwait
push
jl
loopne
mov
ljmp
pop
inc
mov
add
repz
in
mov
or
jmp
push
ss
push
stos
add
lods
cmp
sahf
xor
repz
rcll
mov
mov
jb
nop
xor
or
in
xchg
or
inc
lahf
or
fcompl
in
pop
out
and
mov
push
add
fadds
in
stos
test
cmp
jle
rcrb
loop
push
clc
mov
lods
int3
dec
jge
sub
lahf
cwtl
stos
hlt
pop
or
cmp
neg
shrl
add
mov
lea
lock
dec
pop
xor
les
dec
sub
and
push
pusha
and
insb
nop
ja
xchg
stc
rclb
cmp
adc
sub
dec
jp
sti
adcl
aam
repnz
repz
dec
pop
sub
lret
jmp
js
inc
stos
je
pop
add
pop
jecxz
add
mov
jmp
mov
daa
add
xlat
jne
fbstp
cli
push
or
jecxz,pn
add
pop
jmp
add
ret
sub
js
push
inc
nop
sub
dec
pop
xchg
push
aas
jg
sub
movsl
pop
cmp
jp
pop
mov
mov
xchg
and
fucomp
inc
xchg
add
mov
test
ja
hlt
inc
mov
rolb
push
mov
cmp
pop
pop
fiadds
nop
cmc
inc
jae
sarb
rcrl
pusha
enter
add
mov
sub
add
gs
in
mov
xorb
or
push
adc
mov
add
in
mov
cmp
push
mov
cmp
cmp
and
pop
add
aad
inc
add
lods
out
roll
jle
push
lcall
call
icebp
push
xor
jo
pop
faddl
test
sbb
ljmp
inc
cmp
dec
adc
jl
rcrb
addr16
add
pop
das
dec
cltd
sub
dec
xor
test
cwtl
lret
loope
dec
dec
cli
lock
add
xchg
xor
add
aaa
jp
loopne
inc
cltd
or
lds
and
add
fbstp
jg
and
xchg
xchg
arpl
mov
leave
pusha
jg
pop
push
add
add
and
push
pushf
sub
mov
mov
cli
xchg
add
es
xchg
mov
call
jl
or
test
arpl
jmp
int
sbb
inc
pop
ljmp
pusha
mov
push
mov
arpl
cwtl
mov
loope
and
xchg
popf
xchg
daa
pop
aam
enter
lock
cmp
add
lods
icebp
sarb
xor
mov
inc
roll
adc
ret
pop
int3
and
movsb
insb
lock
lret
add
cmpsb
lock
dec
inc
clc
sub
add
jb
xor
scas
and
movsl
mov
xor
xchg
add
out
stos
ss
push
test
dec
or
xchg
rolb
rorb
jmp
lret
add
xor
ret
mov
push
push
add
sbb
loope
adc
add
or
xchg
pop
stos
mov
add
adc
inc
add
outsl
clc
jo
daa
add
pop
fdivrl
xor
lock
adc
rcrl
fnsave
pop
xorb
jbe
push
jns
movsl
mov
sarb
adc
cmp
and
add
push
add
dec
mov
or
stos
push
inc
mov
add
mov
and
sub
push
add
aas
jo
xor
and
cmp
test
mov
in
cwtl
pop
mov
adc
add
cwtl
push
or
inc
das
jle
adc
adc
xor
adc
imul
push
xor
mov
retw
subb
shrl
pop
adc
stos
add
jns
cmp
xor
lods
adc
jl
pop
pop
sub
push
push
stos
movb
add
mov
xor
and
jo
pop
gs
or
divl
int
push
out
ljmp
stos
xchg
gs
jae
cmp
inc
div
pop
push
and
add
insb
mov
mov
add
sbb
jmp
vaddss
insb
add
aaa
inc
jg
mov
push
xor
pop
mov
call
xchg
xor
pop
adcl
inc
xchg
mov
add
pop
mov
mov
pop
add
push
cwtl
xchg
xor
push
inc
sbb
js
and
loopne
mov
lcall
xor
pop
cs
add
dec
lahf
mov
sub
loopne
popf
dec
push
cmp
push
sbb
add
and
add
or
cltd
comiss
fiadds
fisubrl
and
fsubs
add
or
or
mov
add
shld
outsl
adc
sbb
add
mov
cwtl
xchg
add
ss
adc
adc
loop
adc
insb
pop
sub
xorl
lret
adc
aaa
out
js
add
mov
ljmp
aas
mov
sub
and
js
inc
xlat
stc
sbb
mov
shlb
cmpsl
dec
or
mov
aad
sbb
rcrb
lock
jo
or
or
pop
sub
mov
add
sbb
dec
pop
pusha
mov
and
mov
jo
scas
jo
mov
inc
nop
and
addr16
push
fucomi
or
fwait
mov
popf
lcall
sbb
sbb
cwtl
add
fs
mov
out
and
clc
mov
add
orb
xor
inc
jle
mov
pop
aas
mov
popf
lcall
add
mov
push
add
cs
and
add
in
xchg
pusha
push
popa
add
out
gs
pop
das
jecxz
filds
mov
js
mov
push
pop
cmp
xor
pop
add
movsb
add
mov
bound
add
shll
sbb
jo
adcb
pusha
stc
movsl
outsb
pop
xchg
add
push
mov
xchg
xor
xchg
pusha
test
mov
mov
inc
and
loopne
push
out
mov
sahf
add
fistl
inc
dec
popf
cmpsb
cmp
add
sub
pop
dec
push
add
cs
fsub
inc
add
fnstenv
and
inc
cs
insb
sbb
shl
or
add
test
mov
mov
ret
add
pop
lcall
mov
cwtl
mov
xor
dec
dec
pop
jo
cmc
pop
in
ljmp
sahf
fbstp
add
mov
lcall
mov
sbb
pusha
inc
add
mov
xchg
fucomi
add
xchg
loop
testl
jae
add
mov
add
fwait
loope
xor
dec
repnz
popf
test
rorb
xor
addb
in
es
mov
or
add
mov
iret
or
fidivl
clc
in
or
call
int
outsb
cld
mov
push
mov
into
pop
xor
push
add
xchg
jnp
mov
jbe
rcrb
push
sti
andl
add
lea
add
aam
arpl
repnz
dec
add
loopne
in
int3
cs
loope
add
xlat
xor
repz
or
jo
sbb
clc
pop
orb
out
sbb
lods
lcall
inc
jl
ret
mov
gs
icebp
and
aam
dec
sbb
push
add
push
nop
lods
add
jmp
ss
jns
add
jl
and
loopne
add
orb
jp
test
aas
inc
clc
pop
adc
mov
and
mov
cli
lret
aad
les
fsts
add
add
or
dec
popf
adcl
cmpb
mov
hlt
jp
dec
movhps
pop
lock
jmp
nop
add
lahf
jbe
inc
cmp
add
sub
mov
jl
loope
jl
jb
or
dec
flds
das
outsb
lea
iret
addr16
mov
insb
negb
push
add
sarb
and
stos
pop
roll
or
insl
insb
fcomip
sbb
xchg
scas
leave
nop
mov
outsl
sbb
out
stos
lret
xor
mov
lods
cmp
in
xchg
int
lock
add
ljmp
xchg
repz
pop
test
jecxz
xor
sbbl
sub
fdivp
enter
push
jp
xchg
mov
mov
cmp
push
clc
loop
xchg
add
scas
pop
add
js
imul
inc
push
lcall
imul
inc
push
popl
push
scas
nop
addr16
and
sbb
or
jo
addl
adc
adc
roll
sub
sub
outsl
sahf
mov
or
es
shl
lds
or
add
jnp
test
cli
lods
pop
cwtl
out
sub
in
add
data16
or
add
out
mov
add
lock
add
pop
xchg
sub
jmp
filds
out
jg
clc
data16
test
add
in
cwtl
add
out
add
mov
lods
dec
adc
add
mov
add
cmc
ficomps
jbe
add
loopne
rcr
setge
jae
jnp
incl
cld
out
into
or
xchg
inc
insb
pop
or
inc
test
punpckhwd
hlt
xchg
aas
out
inc
iret
add
lret
loopne
add
xor
jns
nop
mov
test
out
add
nop
psubusb
mov
roll
lahf
cwtl
add
les
movsl
xchg
pop
stc
mov
into
push
shl
pop
nop
fildl
stos
mov
jle,pt
popf
xor
dec
xchg
aad
lods
aam
lcall
push
smsw
cld
jo
lods
loopne
mov
add
adc
aad
ja
add
and
call
add
mov
loop
or
lods
mov
popa
or
rcrb
cmp
ss
sbb
or
in
loop
ret
popf
xor
sub
popa
push
cmp
mov
and
leave
movsl
cld
stos
and
loope
adc
jg
add
mov
fmull
sbb
cld
cwtl
add
int3
daa
ss
xor
add
pop
std
jge
repnz
add
jb
push
mov
lret
shlb
xor
rcl
movsb
jmp
gs
pop
sub
dec
xor
jae
nop
xchg
arpl
and
fldenv
cmp
mov
or
inc
push
add
out
add
adc
add
das
xchg
test
push
lods
call
mov
in
inc
bt
shl
mov
push
cmpb
lret
mov
outsb
push
mov
sbb
or
cmc
xor
mov
or
dec
sarb
dec
imul
popl
stos
jbe
cmp
add
xor
pusha
arpl
ja
add
push
pop
fstp
jl
sbb
push
cld
aad
je
or
pop
jbe
and
push
les
mov
dec
enter
push
stos
adc
fdivl
add
pop
jns
mov
cmpsl
xchg
add
mov
jl
pop
pop
add
dec
xchg
jmp
adc
or
ds
mov
xor
adc
xlat
inc
adc
clc
inc
add
sub
dec
sahf
mov
mov
dec
add
js
xor
pop
mov
loopne
dec
pop
in
pusha
push
movsb
add
andb
clc
mov
jl
add
jbe
push
shrd
sbbb
daa
lret
out
inc
xor
roll
lods
cmp
xchg
sub
xor
aam
and
stos
pusha
stos
pop
rorl
scas
mov
add
xor
lds
in
inc
push
ljmp
xchg
push
xor
sti
in
pop
rclb
lret
lds
fstpl
adc
loope
scas
lret
pop
cltd
xchg
push
xor
and
add
mov
nop
cwtl
aam
pusha
sbb
popf
push
rclb
mov
lds
lods
mov
inc
jecxz
aad
lock
push
add
add
mov
loopne
call
js
or
aam
push
and
addr16
into
mov
pusha
rolb
add
adc
sbbl
add
pop
test
idivl
pop
push
inc
cmp
mov
out
sub
cmp
mov
sti
lea
testl
std
popf
cmpsb
xchg
inc
sbb
scas
pop
nop
js
ret
add
test
add
inc
add
popf
aad
and
and
or
hlt
lods
and
cmp
add
mov
movsb
mov
popf
enter
rclb
icebp
xor
pop
aaa
sub
mov
daa
popf
pop
inc
mov
xchg
hlt
shl
mov
aam
cmp
fneni(8087
popa
dec
ja
sahf
inc
xlat
stos
jno
into
aaa
add
lods
mov
mov
outsb
xchg
adc
add
rcl
out
or
pop
xor
out
jns
out
or
adc
lods
icebp
add
in
sub
cmp
in
sbbb
xchg
bound
fisttps
or
push
leave
aad
clc
sti
add
jmp
test
mov
psubd
pop
rolb
leave
mov
xchg
xchg
and
add
ljmp
pop
andl
pop
jns
add
xchg
adc
mov
aam
adc
insb
xchg
outsb
add
adc
js
popf
inc
xchg
push
addr16
stc
mov
mov
push
loope
dec
push
movsl
cmpsl
or
ljmp
jbe
inc
mov
push
leave
int3
mov
popf
add
scas
xchg
pop
sahf
cmpsb
cmpsl
rorb
pop
add
popf
xor
add
mov
xlat
or
jno
pushf
xor
stos
or
iret
xchg
jns
popl
mov
mov
sub
xor
mov
cld
add
xor
add
and
or
js
call
and
xor
add
cs
outsl
pop
or
jns
pop
test
add
mov
mov
mov
scas
clc
cmpsb
lods
fwait
ljmp
inc
or
xor
sbb
cmp
inc
addr16
rolb
add
lea
sub
or
add
icebp
push
push
enter
add
adc
jae
sbb
and
jmp
or
lret
dec
lods
sub
repz
outsb
pop
pop
hlt
xchg
pop
cltd
pop
push
and
and
sbb
mov
mov
sub
push
cmp
out
or
inc
movsl
sbb
xor
mov
push
xchg
add
fdiv
out
sarl
mov
xor
dec
dec
dec
popf
fs
stc
add
jp
mov
xor
sar
add
popa
jl
mov
add
pop
nop
jecxz
stos
jecxz
pop
mov
data16
je
add
push
sbb
adc
and
jb
int3
add
xor
sbb
lods
push
or
sub
stc
nop
in
andb
rcl
out
stos
inc
rcrb
addl
jo
outsb
adc
test
cmp
orb
dec
sahf
push
pop
popa
xchg
cmp
mov
sbb
pusha
scas
sbbl
mov
dec
sbb
or
mov
movsl
sub
xchg
inc
inc
xchg
imul
or
mov
mov
dec
xlat
dec
test
aaa
inc
arpl
movsb
add
lock
jg
int3
imul
push
xor
mov
jne
rcrl
dec
dec
jecxz
cmpb
or
outsb
fldcw
push
and
ds
cmp
sbb
pop
xor
xor
aaa
dec
xor
adc
loopne
mov
arpl
sbb
jo
loope
pop
clc
add
add
xchg
push
sbb
pop
xacquire
shll
or
add
xchg
xor
jns
xlat
or
mov
dec
int3
pop
and
js
scas
cmp
scas
sub
and
test
insl
sbb
not
xorl
lcall
jns
lods
sbb
xor
add
mov
negb
xor
add
push
inc
cmp
pop
mov
inc
and
mul
sbb
xchg
clc
add
mov
and
mov
add
mov
xchg
add
push
adc
dec
dec
pop
jae
pop
sbb
cltd
inc
insl
popf
cmp
testl
lahf
inc
push
adcb
cli
xlat
push
lods
ds
decb
cmp
testb
cmpsl
pop
fidivs
adc
add
rcrl
xor
fs
jl
imul
push
ja
add
outsl
sahf
mov
mov
jle
lods
in
xor
inc
inc
test
jne
loopne
sub
and
jns
pop
pushf
popa
outsb
jl
sub
ds
xor
insb
shrl
ja
xor
pop
out
add
loopne
xchg
clc
push
shll
adcb
outsl
sbb
jl
add
stos
js
dec
add
cmp
inc
dec
leave
sbb
add
movsl
fwait
out
jmp
push
inc
dec
pusha
xor
jnp
adc
test
ljmp
sahf
add
jbe
lock
repnz
test
adc
pop
testl
pop
xlat
out
stc
aas
iret
sbb
xor
mov
leave
push
lods
out
mov
lock
dec
jns
pop
scas
and
pop
ret
cmp
add
jl
scas
push
xchg
popa
cmp
ljmp
xor
add
jo
into
fwait
clc
cwtl
pop
xchg
pop
dec
push
mov
push
pop
add
subl
ljmp
adc
add
outsl
add
cmp
xor
and
and
or
jecxz
and
push
add
ret
cmp
sub
mov
jmp
jecxz
sbb
in
mov
inc
test
pusha
in
mov
adc
jns
mov
cld
adc
inc
and
shr
js
add
aad
xchg
mov
addb
sub
jl
lods
mov
repz
nop
sbb
jbe
mov
xor
test
jg
push
add
pop
cmp
ret
pop
mov
mov
jnp
add
insl
add
add
xlat
mov
insb
leave
psubd
mov
mov
mov
imul
jns
pop
movsl
orl
or
aam
insb
test
lret
sarb
pop
add
mov
jbe
add
xchg
cwtl
ds
pop
repnz
stos
mov
mov
inc
pop
add
fmuls
cmp
sahf
mov
dec
mov
add
test
add
pop
and
leave
lock
add
ficoms
fidivrl
cmpsl
xchg
inc
out
test
xchg
cli
divl
mov
in
loop
jo
shlb
add
mov
leave
adc
xchg
add
cmpsl
sbb
roll
mov
pushl
pop
mov
movsb
test
add
mov
jno
das
popf
addb
ss
out
out
and
stos
popl
mov
insb
repz
add
mov
cmp
dec
mov
add
sti
or
push
out
mov
test
add
xchg
cwtl
les
cmp
mov
adc
fwait
into
add
or
fcomps
jp
add
adc
add
mov
inc
stos
jecxz
jp
add
popl
adc
xchg
jle
jp
ret
in
add
sub
clc
out
sub
js
mov
push
pop
hlt
sahf
lret
es
jb
out
cmp
cs
ds
enter
cmp
or
mov
hlt
push
pusha
das
fcoms
pop
dec
shll
mov
aad
std
push
sahf
and
jmp
scas
inc
popf
andb
pushf
test
push
ret
outsb
test
pop
add
and
or
outsb
shlb
add
cwtl
mov
aam
xchg
jg
jbe
add
mov
jle
xchg
cld
push
arpl
add
fldcw
cld
adc
jo
jge
ja
add
mov
stc
push
cmpsl
jnp
add
lock
add
out
sub
sahf
dec
or
add
lcall
mov
xor
test
sbb
inc
insl
push
ror
jo
push
iret
test
push
and
loope
or
shrb
in
sarl
fwait
ds
ja
jbe
lcall
mov
or
mov
mov
lods
inc
imul
ljmp
loopne
rorb
and
iret
syscall
cmp
inc
add
stos
mov
xor
scas
lods
arpl
jne
lahf
sti
add
pop
jg
jl
add
xchg
out
jge
shlb
mov
mov
mov
outsl
les
fsubs
jo
mov
insl
mov
and
sahf
add
dec
push
jno
add
push
mov
mov
and
add
sahf
pop
std
mov
sti
jno
fcomps
pop
mov
outsl
shrb
and
mov
push
add
sub
jp
mov
add
mov
rorb
sub
scas
loop
add
lds
cmp
out
sub
roll
cmp
add
pushf
xchg
call
fistps
xorl
arpl
arpl
push
loopne
xor
inc
add
testb
mov
or
pop
es
mov
cld
out
adc
mov
mov
inc
xor
push
xchg
icebp
les
add
shll
sbb
xchg
in
mov
jns
jg
add
sub
adc
out
add
xor
movsb
icebp
popf
add
add
aas
jmp
test
xor
daa
cmp
ret
pushf
sub
push
loope
push
mov
inc
pop
push
sbb
addl
jo
or
subb
in
bound
jmp
adc
cwtl
push
sub
add
add
xlat
adc
mov
fisttps
push
outsb
addl
mov
inc
add
or
cmpps
mov
pop
stc
xchg
jp
rorb
or
sub
dec
push
shr
ljmp
ljmp
jo
aad
cmp
mov
jne
add
jp
cmp
pop
imul
mov
cmpsl
lock
add
fdivs
cmp
pop
sbb
je
sbbb
outsb
or
jo
nop
lods
sub
pushf
clc
mov
sbb
mov
sbb
jp
orb
sbb
push
mov
call
pushf
add
pop
aad
loopne
arpl
cmp
pop
or
sbb
fidivs
stc
ljmp
xchg
mov
js
insl
mov
pusha
jnp
les
mov
jmp
and
mov
sti
jae
pusha
push
pop
pop
mov
ret
dec
aam
dec
call
loopne
sub
sbb
jnp
or
fsubrs
rcr
cmp
push
mov
icebp
das
jo
loopne
mov
loopne
add
jne
add
mov
xchg
mov
jg
cmp
push
jle
in
cs
sbb
loopne
adc
and
addr16
xchg
movsl
xor
lods
mov
cld
ds
xor
push
xlat
movl
fistpl
daa
push
imul
arpl
mov
cwtl
add
lahf
and
xchg
mov
jecxz
pusha
or
add
jge
push
shlb
incl
cs
sbb
sahf
insl
popl
lds
sub
test
shll
je
out
fs
movl
inc
jnp
jns
jge
sar
inc
stc
test
add
add
xchg
lahf
mov
add
jnp
add
les
add
jo
push
je
inc
add
cmp
fildl
cmp
xchg
dec
ret
data16
pop
sub
ret
mov
pop
and
call
cmp
out
loop
loopne
pop
ds
adc
stos
xchg
pusha
hlt
loopne
add
or
add
cmp
and
les
jns
push
sub
and
mov
aas
ss
push
cltd
gs
out
pop
jg
mov
out
ds
fnsave
add
or
rolb
cwtl
cmc
add
out
mov
dec
inc
or
push
cld
nop
add
insb
xor
jg
cltd
ret
adc
inc
dec
sbb
add
pushf
ret
cmp
add
sub
jno
pop
adcl
push
mov
jb
in
pop
and
adc
jg
cmpsb
add
cmp
std
fdivl
cli
ds
push
add
repz
xor
testb
daa
aad
jg
or
add
cmp
sahf
pop
or
inc
add
add
stos
fildl
inc
push
pop
jnp
hlt
pusha
loopne
lcall
or
pop
xchg
mov
int3
add
out
or
push
ror
stos
add
jle
push
push
fsubl
mov
loope
lahf
test
popa
lret
pop
aad
stos
add
fisttps
dec
add
stc
popf
jbe
cmp
lahf
sub
pushf
out
adc
add
les
jbe
ret
push
add
fidivrs
and
icebp
movsl
popa
xchg
add
xor
jle
dec
popl
nop
mov
movsl
out
mov
or
test
out
add
cmpsb
adc
sarb
rcll
bound
add
aas
push
test
mov
pop
and
add
and
shll
fcomps
xlat
pop
lcall
and
xchg
aas
cmc
filds
lretw
xor
ljmp
adc
in
xor
mov
cmp
mov
movb
jle
ret
loopne
add
pop
pop
andl
add
push
ret
sub
insb
jae
mov
and
clc
pop
push
inc
dec
jl
adcb
pop
sub
pminsw
inc
inc
push
sahf
push
add
out
addr16
push
pop
cmp
add
icebp
xor
add
pushf
shrl
lock
mov
cmc
dec
cs
insb
addb
scas
jns
test
add
jmp
ja
add
lods
arpl
and
jle
pop
shrl
push
fwait
add
loopne
sarb
add
js
les
cmpsb
sarl
add
sbb
scas
cmp
cmpb
jecxz
lock
icebp
jno
mov
mov
inc
and
pop
sbb
jle
add
loopne
add
mov
in
insl
and
or
pop
scas
daa
or
pop
and
pop
push
loopne
loope
adc
add
sub
or
add
jbe
push
sub
add
xchg
pop
stos
dec
push
or
inc
inc
push
sbb
push
push
sbb
sub
xchg
or
std
pop
sbb
pop
push
cmp
add
fistps
add
mov
adc
enter
xchg
xchg
clc
fldl
cmp
sbb
cmp
push
pop
jp
pop
add
mov
stc
jle
stos
and
leave
add
cmp
and
mov
jmp
inc
test
aas
xor
stc
pop
xchg
mov
nop
mov
outsb
or
hlt
inc
add
pop
mov
add
in
sahf
push
jp
sub
insb
inc
add
mov
loop
in
test
js
add
nop
mov
add
push
xchg
mov
lcall
rorb
cmpsb
and
adc
pop
je
or
es
aad
inc
into
loopne
jo
mov
std
mov
insl
pop
add
dec
dec
out
jle
push
jp
mov
inc
jle
xchg
test
rclb
or
add
roll
push
add
mov
jbe
push
and
sub
add
sarb
add
jmp
mov
daa
iret
mov
es
push
cmpsl
sbb
addr16
pop
in
repz
loopne
jle
pop
sub
mov
pop
daa
add
stc
mov
inc
sarl
inc
enter
inc
test
sti
in
loop
push
cld
add
shlb
fsubrs
add
clc
movsl
popf
outsl
inc
cwtl
loop
and
aad
sbb
mov
cmp
and
add
dec
lahf
or
xor
sbb
mov
ret
cs
lahf
jg
add
jo
ljmp
push
mov
add
mov
icebp
push
xchg
push
xchg
pop
mov
add
xchg
add
jge
int3
fsubl
add
mov
imul
sbb
flds
andb
add
inc
jb
ret
cld
or
mov
cmpb
xchg
cmp
sub
mov
dec
jg
add
xlat
xchg
jae
pop
dec
xor
call
shll
test
out
movsl
add
or
in
jmp
xchg
sarb
sbb
outsl
lret
push
leave
cmp
mov
cwtl
mov
pop
rcrb
add
jecxz
sub
bswap
mov
sarl
xchg
xor
shlb
xor
lea
adc
jmp
push
pop
pop
add
inc
add
mov
xchg
lds
xor
in
xchg
pusha
shl
mov
test
arpl
mov
cltd
je
stc
fisubrs
sti
jb
rolb
loopne
pop
xchg
movsl
ds
add
aad
call
adc
xor
mov
or
imul
mov
xor
in
jmp
mov
and
xchg
pusha
add
jle
pop
data16
int3
jg
dec
mov
jmp
shl
aad
cmp
dec
xlat
jnp
cmp
enter
jnp
cmp
dec
andb
gs
xor
sub
rorb
add
and
push
lea
repz
fwait
add
es
and
add
mov
push
out
pop
mov
std
jle
lods
add
jns
mov
inc
ss
xchg
or
lret
dec
sub
push
scas
lock
out
rolb
push
xchg
xorb
in
dec
jns
data16
and
aad
jle
stc
inc
sub
pushf
in
fiadds
je
cmpl
xchg
lock
sbb
mov
add
jge
notb
adc
add
in
mov
lret
icebp
cmp
subb
sbbl
dec
ja
and
cld
test
or
jge
icebp
ljmp
cltd
sub
outsl
cmp
dec
mov
push
dec
push
jl
fdivrl
in
addr16
mov
add
stc
clc
insl
cmp
shrl
sahf
rolb
add
push
add
test
out
jp
clc
mov
in
andb
jns
gs
sub
stos
movups
add
pusha
enter
pop
add
dec
jmp
jb
adc
icebp
pop
pop
sbb
cmp
mov
stc
mov
and
mov
inc
adc
into
test
cwtl
and
cmc
test
push
add
cmp
jp
xlat
aas
and
jle
push
or
sahf
roll
leave
popa
jmp
dec
pop
inc
pop
and
xor
add
mov
in
out
movsb
xor
or
push
mov
pushf
add
add
inc
push
mov
movsb
mov
lret
xor
test
pop
and
add
loopne
add
sub
or
cmc
sti
add
js
sub
push
add
roll
xchg
xchg
add
adc
jle,pn
mov
jge
sbb
add
ret
imulb
adc
add
push
mov
pop
mov
push
add
enter
inc
dec
je
lret
xchg
loopne
xor
jnp
push
mov
clc
inc
pop
add
str
scas
mov
jge
add
sti
daa
mov
in
mov
add
or
fs
sub
popf
cmpsl
add
inc
loopne
or
jg
mov
add
hlt
xor
xlat
dec
jl
add
es
inc
pop
sub
or
jle
or
in
fisttps
pop
mov
cli
cmp
test
je
nop
pop
cmpl
in
add
in
ds
icebp
leave
lret
pop
inc
add
or
in
xlat
orl
dec
sbb
jle
fnstsw
sahf
in
in
fwait
pop
imul
sub
push
jecxz
cmc
and
addr16
add
add
adc
jns
aaa
test
imul
cmp
sbb
xor
push
add
cmp
movsb
add
pop
cs
dec
or
pop
sbb
int3
out
stc
sahf
mov
roll
outsl
sbb
aad
insb
insl
cltd
mov
xchg
add
mov
out
jno
leave
and
and
sbb
inc
and
imul
and
mov
in
test
add
jns
xchg
inc
ret
add
dec
or
mov
test
add
rol
test
add
mov
pop
ss
out
addr16
push
mov
add
xchg
xchg
pusha
mov
fwait
adc
jbe
add
leave
dec
outsb
cmpsb
xor
lcall
mov
mov
sbb
xorl
mov
ffree
add
adcb
add
sbbl
fdivs
or
mov
jbe
fcmovne
pusha
inc
lock
inc
sub
in
mov
sarb
or
mov
icebp
inc
inc
jle
clc
hlt
xchg
or
xor
cmp
ror
jbe
add
popf
pavgb
and
jl
adcl
push
xor
test
xchg
mov
jg
les
fs
rolb
xchg
xor
inc
addr16
inc
iret
cli
add
fnstenv
cltd
call
sbb
and
push
loopne
outsb
scas
leave
in
fimuls
mov
xor
and
push
out
mov
xor
add
cmp
mov
in
ss
add
dec
push
repnz
sti
subl
aam
xlat
out
adc
outsl
jecxz
cmpb
lods
jmp
mov
movsl
add
and
jnp
xor
pop
lods
xchg
inc
pop
mov
pop
adc
insb
std
jmp
dec
into
sbb
pop
loope
testb
sti
mov
cmpsl
loop
add
rorl
out
and
add
cmc
sub
push
lret
add
inc
iret
in
add
outsb
jb
or
dec
add
fwait
mov
xor
add
dec
or
and
imul
mov
and
xchg
shlb
fisttpll
jo
incb
test
std
pop
add
inc
fyl2x
je
mov
loopne
add
mov
xlat
stos
adc
jne
inc
sbb
xor
adc
aad
add
jne
cmp
les
ljmp
jns
sti
in
mov
out
dec
inc
xor
add
ret
xchg
pop
sub
add
imul
sbb
les
cltd
lahf
sbb
popf
das
andb
cmp
add
push
shr
js
add
sbb
sub
mov
mov
dec
mov
sbb
cmpsl
xchg
pop
out
movl
add
cltd
and
popa
add
cmp
je
add
mov
or
imul
and
incb
cli
loopne
int3
mov
mov
cmp
inc
inc
add
xchg
sbb
mov
sbb
mov
das
add
add
pop
loopne
push
mov
sbb
cmpsb
lock
cmp
mov
jno
add
add
mov
jp
mov
lods
adc
cmpsl
xor
or
add
cli
mov
sbb
cmc
lcall
je
add
imul
fmul
mov
lcall
jo
jno
xor
add
push
cmc
pop
xchg
outsl
lods
sarb
lret
or
xchg
aam
stc
cmp
out
pop
push
cld
xor
add
mov
fistl
rolb
mov
call
and
mov
incl
xor
lock
repz
dec
or
pop
and
nop
add
iret
lret
dec
lock
add
xlat
std
insb
out
push
xchg
add
dec
iret
adc
mov
or
sub
adc
mov
add
inc
andb
clc
mov
inc
or
jecxz
sbb
aas
lret
add
add
sub
xor
addl
dec
test
jl
cld
sub
outsl
lcall
pop
push
push
out
in
cmp
pop
inc
ret
aaa
dec
dec
xor
cmp
cmpsl
fildll
loope
cmc
test
jp
pop
xchg
and
sub
pop
js
hlt
add
pop
mov
xchg
popf
push
into
add
rolb
add
std
fsubs
mov
or
add
mov
imul
xchg
jmp
add
leave
push
jge
scas
inc
and
in
pop
movsb
dec
add
in
jb
xchg
or
add
pop
mov
jmp
pusha
add
cwtl
in
pop
add
movsl
pop
pop
rcr
ret
push
add
adc
imull
add
dec
sub
add
xlat
pop
pop
movsb
gs
adc
add
les
ret
lret
adc
rcll
addb
add
pop
daa
or
xchg
pavgw
pop
cld
add
fadd
push
add
cmpb
add
fidivrl
inc
in
aas
pop
pop
xchg
inc
std
sbbb
cmp
mov
add
cmp
fwait
adc
push
in
push
call
mov
pop
fstl
mov
test
mov
push
mov
xor
into
inc
add
scas
in
stos
add
push
test
or
loope
pop
fldl
imul
and
into
mov
stos
inc
add
jl
add
clc
cmpsb
loopne
in
popf
sbbb
mov
jb
imul
faddl
cs
test
add
les
push
push
sub
sbb
xchg
push
out
lcall
repnz
sub
add
push
mov
xor
jecxz
rcrl
cmpsl
jl
imul
pop
aad
cmp
ja
jecxz
jns
fbld
jecxz
fdivs
add
repnz
add
data16
jnp
lret
into
int3
imul
lock
lea
cld
push
mov
mov
pop
add
popa
xor
xlat
xchg
imul
or
dec
sub
mov
movb
aaa
test
iret
add
mov
adc
mov
rcr
jp
add
sbb
arpl
mov
sarl
mov
orb
sti
and
add
icebp
jg
xchg
and
je
or
xchg
mov
mov
push
lods
cli
popl
daa
aam
xor
cmp
andb
dec
repnz
and
or
sbb
xor
mov
push
icebp
fsubs
int
adc
jae
jp
insl
push
inc
sbb
or
bound
sbbb
fldl
sbb
stc
pop
aad
loopne
xor
das
dec
jno
sub
add
sub
push
push
dec
shl
cli
add
pusha
pop
and
or
dec
pop
pusha
cwtl
jnp
inc
xor
or
testl
fsubrl
sbb
push
xor
fs
inc
inc
jae
push
and
add
aam
cmp
pushl
cmp
dec
add
stos
mov
fldl
cli
pop
pop
mov
adc
test
cmp
call
pushf
push
scas
adc
or
add
inc
pop
sahf
jmp
rolb
mov
xor
pop
adc
pop
xor
add
jl
adc
dec
call
or
dec
add
lahf
aam
scas
inc
call
push
add
data16
jne
call
xor
jbe
inc
rcll
mulb
add
inc
ret
push
data16
pop
add
xor
mov
sub
ljmp
les
add
add
mov
cltd
aas
xchg
mov
and
inc
mov
or
out
xchg
sahf
mov
arpl
jecxz
jbe
pop
push
cmp
stos
enter
mov
frstor
mov
add
out
call
xchg
hlt
dec
jp
in
out
mov
add
cltd
pop
rclb
in
sbb
pop
jmp
mov
addl
addb
add
xlat
mov
xchg
sarb
or
mov
cmp
add
lret
push
fsubrp
and
add
loopne
add
aas
add
sarb
filds
jle
jmp
and
loopne
es
incb
rolb
mov
popf
out
aad
add
cmp
dec
cmp
dec
lds
adc
add
push
push
add
add
sub
leave
enter
scas
test
call
add
js
cmp
andb
popa
inc
dec
ficomps
add
movb
icebp
mulb
jns
fcmovne
jg
xchg
cmp
fs
dec
insb
xchg
addr16
fdivrp
or
inc
mov
jle
sahf
mov
in
fstpl
dec
add
mov
xchg
xor
popf
ret
xlat
fadds
aas
jb
xchg
and
fidivrs
xchg
push
or
add
shrl
pop
popf
pop
or
jns
fnclex
scas
mov
into
pop
aad
ftst
jge
xchg
add
mov
mov
adc
xchg
add
scas
sub
ljmp
cmp
rolb
adc
add
inc
inc
cs
jne
ret
sub
mov
in
mov
sbb
rcl
addr16
and
movsb
mov
jno
mov
out
add
movsl
cmp
add
mov
les
jb
cwtl
mov
loop
dec
insb
mov
decl
cmp
aad
nop
add
sahf
psubusb
sbb
stc
sarb
mov
cld
add
imul
daa
jmp
fsubrs
add
cmp
das
out
push
push
jbe
sub
push
and
xor
add
add
jg
push
enter
idivb
into
inc
add
or
mov
mov
or
adc
jle
repnz
in
mov
push
add
pop
fldt
movsl
cmp
pop
lods
repnz
add
xor
or
mov
lret
insl
jo,pn
lret
aas
sub
cmc
loopne
into
sbbl
hlt
mov
and
shrb
popa
ficomps
cmp
and
sbb
aad
mov
imul
mov
cmp
inc
or
in
push
add
loope
adc
add
mov
add
pop
mov
out
fsubl
add
and
dec
cmpsl
mov
les
dec
test
sbb
out
outsl
lock
int
add
add
dec
xchg
in
mov
mov
add
or
int3
mov
icebp
fnstcw
jo
adc
ds
mov
cs
dec
inc
add
jnp
sub
movsl
lods
pusha
or
sub
dec
fcoml
mov
in
jl
inc
add
sbb
sub
sub
mov
lret
es
jge
orl
aas
sbb
cmpb
scas
insl
pop
sbb
arpl
nop
ret
xor
push
aaa
sbb
inc
jne
ret
lret
add
mov
cmp
cmp
dec
sbb
jno
loopne
stos
xchg
inc
fiaddl
fnstsw
xchg
pop
cmpsb
inc
mov
push
ret
outsb
cmc
ss
pop
imul
or
enter
add
rcrb
gs
adc
push
sbb
lods
push
arpl
mov
pop
jne
dec
shrb
add
pop
popa
mov
or
into
or
jno
rolb
lods
pop
lock
adc
inc
xor
test
push
and
call
jo
add
leave
sub
nop
cs
adc
mov
arpl
out
out
bound
sti
insb
rorb
mov
in
jb
sbb
popa
jnp
pusha
mov
add
daa
jb
lea
ret
or
jle
and
movsb
dec
fdivl
add
rcr
lret
jl
int
cwtl
rep
outsb
cmp
fistl
mov
add
js
pusha
mov
add
gs
push
mov
inc
loopne
xchg
addl
mov
sub
inc
add
xchg
dec
mov
xor
enter
xchg
or
stos
cmp
and
jne
test
jp
add
lret
cld
xlat
add
xor
or
inc
ds
xor
aad
add
push
in
stos
mov
sbb
dec
or
mov
jnp
dec
outsb
push
mov
dec
je
subl
and
mov
lahf
add
lods
pop
pop
inc
addr16
lods
mov
adc
cmc
int3
inc
pop
call
out
nop
or
pop
adc
scas
add
pop
fdivrs
adc
jg
add
cmp
scas
mov
gs
adc
das
cmp
cld
sahf
mov
ret
andps
test
push
data16
jb
dec
push
loope
std
add
or
push
add
mov
fiaddl
outsl
stc
insb
xor
mov
push
pop
mov
xchg
jae
rclb
inc
sbbb
xchg
pop
scas
inc
cmp
add
mov
es
lock
xchg
xchg
adc
add
shl
adc
push
xchg
insb
aaa
daa
in
fwait
mov
add
loop
cmp
or
repnz
cli
dec
add
loopne
push
push
cmp
add
into
nop
pop
add
xchg
adc
rolb
jo
mov
mov
cli
add
push
in
imul
or
inc
and
cmc
adc
pop
sub
dec
pop
mulb
inc
inc
add
xchg
mov
jo
ds
mov
mov
rorl
or
aas
mov
xchg
mov
dec
adc
sbb
nop
repz
mov
cli
cmp
test
cmp
add
roll
fwait
adc
sub
xor
roll
push
or
jae
push
outsb
arpl
inc
sbb
pop
mov
push
push
mov
mov
mov
das
mov
test
jo
dec
add
jecxz
out
sub
loopne
adc
rolb
mov
xor
jl
mov
sub
pop
ja
int
decb
add
cwtl
sub
cmp
sbb
fcmovbe
sub
pop
pop
out
add
jbe
scas
push
inc
hlt
sub
cmp
inc
ljmp
add
or
addr16
mov
sub
sbb
mov
imul
dec
inc
shl
xor
add
loope
jbe
call
fsts
cld
sar
iret
mov
es
aas
stc
add
addb
pop
bound
je
mov
xchg
dec
les
ret
mov
adc
jb
ret
xlat
loopne
push
mov
repz
dec
mov
adc
sub
push
out
fiaddl
loopne
bnd
push
and
lahf
fildll
fmull
stos
add
les
pop
push
add
or
je
orb
adc
repnz
mov
lds
aam
inc
cmp
pop
int3
repz
adc
iret
jno
pop
mov
lock
sahf
cld
xchg
cmp
jecxz
add
cli
out
sub
inc
shll
xchg
push
add
adc
mov
incl
aam
mov
fists
lds
mov
adc
sub
imul
pop
adc
mov
incb
add
pop
pop
jmp
or
inc
cmc
subb
in
push
cmp
pop
cmpsb
push
xor
cwtl
dec
fildl
ds
xorb
andb
ret
add
roll
adc
xchg
add
sbb
pcmpgtw
dec
sbbb
shrb
add
dec
es
sub
or
hlt
sbb
jge,pn
aas
cmp
add
cli
addps
scas
push
mull
into
xchg
add
xor
sub
mov
sub
and
rcll
sti
jmp
fs
ja
jnp
add
cli
rorl
loopne
add
sub
test
pop
pop
add
jne
ja
jl
cmpsb
mov
lock
data16
adc
repnz
addr16
xor
push
clc
imul
shll
add
gs
or
mov
call
or
fwait
jbe
add
cmp
jmp
lods
fadds
mov
mov
sub
fwait
add
mov
mov
bound
orb
jne
push
add
stos
adc
or
push
add
add
decb
push
add
into
fiaddl
mov
ja
shr
adc
aaa
add
mov
into
sbb
inc
fsubs
fiaddl
xor
and
push
mov
fsin
rclb
movsl
mov
lds
jo
les
scas
adc
sub
pop
aaa
inc
mov
inc
pop
sbb
push
insl
pop
and
mov
repnz
outsb
jmp
adc
mov
movsl
outsb
xor
scas
rclb
test
add
mov
sbb
ret
add
or
stos
xor
pop
in
dec
pop
cmp
lcall
jnp
add
or
ret
add
aad
mov
rcrb
lock
jl
inc
xor
jg
fs
push
jb
ljmp
sbb
insb
and
add
fs
ds
adc
jbe
jecxz
jo
xor
sbb
jle
add
ja
cmpsl
push
mov
ret
jbe
and
adc
jge
sbb
xorb
mov
scas
js
out
add
add
jns
xlat
cmp
jae
dec
push
cs
inc
bnd
jecxz
sub
add
jo
cmp
gs
jl
sahf
fists
arpl
inc
adc
dec
add
arpl
cmp
mov
inc
cmp
js
sbb
jbe
pop
ret
sahf
mov
adc
mov
jbe
push
int3
notb
fdivrs
add
addr16
xchg
enter
push
iret
stc
xor
aaa
xchg
mov
inc
xor
mov
fdivl
cld
dec
fbld
sub
mov
adc
mov
xor
mov
sti
mov
inc
aas
pop
imul
jae
add
test
add
inc
leave
aaa
pextrw
mov
lahf
scas
add
fwait
and
cmp
pop
cmp
cwtl
andl
add
xor
imul
data16
mov
movsb
test
jmp
shlb
push
pop
mov
sub
imul
divl
ds
shll
pop
pop
clc
push
jecxz
jbe
sub
add
in
mov
adc
add
pop
mov
inc
rcrl
cwtl
pop
out
and
add
testb
lahf
mov
jno
add
loopne
xchg
adc
adc
bound
sbb
add
mov
lahf
add
jno
push
std
leave
and
sub
hlt
cmp
dec
push
jo
sbb
mov
jl
enter
add
fdivrs
xchg
add
push
and
inc
cmp
cmpsb
ret
jnp
insl
mov
int3
add
push
fidivs
clc
add
je
jp
incb
sarb
enter
and
sub
inc
sahf
bound
and
push
out
addb
mov
push
push
xchg
movsl
push
add
cld
jae
add
gs
stos
mov
add
sahf
or
add
cmp
arpl
ljmp
insl
cmp
mov
mov
add
inc
clc
lods
arpl
and
lcall
fsubl
clc
add
popa
and
fbstp
xor
enter
fwait
push
repnz
ljmp
sub
sysret
push
ret
xorb
push
adc
pop
fcoms
in
push
sti
pop
mov
xchg
pop
mov
jo
fisttpl
add
jo
cs
lock
imul
testl
rcll
push
pop
lret
call
fwait
int
mov
ljmp
sbb
subb
dec
or
add
sarb
jae
add
cld
test
lcall
mov
xchg
and
inc
fimull
shrl
or
sub
fsubrl
insl
add
adc
rclb
cmp
popf
pop
inc
sbb
adc
fisttps
test
adc
add
push
or
cli
orb
rol
or
add
push
cmp
pop
ds
stc
loopne
or
rcl
add
rcrl
fwait
inc
iret
dec
lods
jb
add
xchg
push
ja
push
adc
sub
jae
or
adc
adc
cmp
out
movsb
rclb
jmp
mov
test
pop
dec
mov
add
inc
repnz
addb
adc
mov
clc
dec
push
mov
daa
lds
pop
shll
btr
lret
subb
jle
add
sub
imul
aas
dec
cmp
sahf
inc
jecxz
stc
or
sub
add
out
insl
int
push
jge
add
mov
pusha
push
xor
or
xchg
clc
cmpb
push
add
ret
add
mov
sbb
ret
adc
popa
mov
test
add
int
cmp
test
lods
pop
cs
loope
push
ss
add
jecxz
imul
lret
icebp
add
xchg
mov
rcr
mov
sbb
pop
sbb
int3
lds
dec
outsb
push
repnz
mov
add
xchg
add
pavgb
shrl
stos
mov
add
sub
jecxz
dec
into
add
daa
sub
adc
mov
add
fisubrs
xchg
add
or
dec
and
movsl
add
sbb
fidivs
jno
insb
mov
jno
es
cmp
hlt
and
cmp
mov
or
jae
adc
dec
add
mov
adc
mov
jnp
or
sahf
adc
lea
jo
and
jne
add
mov
add
mov
sbb
cmpsb
inc
in
add
sar
rcrb
add
or
cmp
xchg
push
fcmovnb
dec
add
push
mov
push
push
or
andb
add
nop
stos
push
fmuls
push
popa
add
cmpsl
xor
and
add
pop
xchg
xor
lea
test
in
or
jmp
stc
mov
orb
xchg
inc
xchg
test
jle
dec
out
roll
rorl
in
mov
sbb
sahf
scas
sbbb
ret
xchg
or
notb
sbb
or
xor
mov
mov
fnop
jns
jmp
cmc
xchg
xor
or
cltd
ds
sbb
cmp
xchg
in
ffree
sbb
sbb
mov
jns
adc
add
call
out
and
or
shld
inc
pushf
cwtl
add
roll
xchg
xor
jae
push
add
xor
clc
adcl
out
pusha
jmp
addr16
cld
jg
jae
add
je
icebp
sbb
loopne
fadds
arpl
push
hlt
or
cld
in
add
push
outsl
jle
mov
jp
in
ret
push
dec
mov
inc
add
cmpsb
add
adc
or
mov
ret
push
mov
add
dec
xchg
adc
in
out
pop
sahf
lcall
js
stos
sub
sbb
cmp
popf
bound
cvtps2pi
push
adcl
ror
push
cmpsb
in
cli
add
sbb
sahf
je
out
add
repz
pop
inc
or
xchg
sub
push
add
loopne
insb
iret
add
notl
rcl
ja
nop
adc
push
adc
stc
data16
inc
dec
push
adc
xchg
out
add
clc
xchg
pop
nop
mov
cmp
inc
imul
mov
add
xchg
in
lock
inc
fcomip
add
loopne
or
add
std
fnstsw
xchg
popf
incb
push
rcl
push
add
push
test
sbb
add
ds
movsl
dec
pop
push
mov
xorb
jg
add
cli
dec
push
out
mov
mov
enter
add
scas
cmpb
das
fwait
add
or
jne
cmp
gs
lret
leave
cmpsl
xchg
push
mov
sub
mov
dec
push
popa
add
sarb
dec
add
and
pop
pop
add
xor
out
jp
bound
lock
sbb
mov
cwtl
mov
mov
xorl
cld
or
and
dec
addb
mov
and
ljmp
inc
adc
ror
sti
add
aam
iret
add
imul
add
push
sarb
and
add
popf
lds
lods
add
push
mov
aaa
or
or
insb
data16
lret
and
mov
mov
rclb
and
mov
mov
adc
pop
pop
sbb
push
pop
jno
ss
dec
add
jnp
xor
pop
xor
movsl
fcmovne
ljmp
add
push
jnp
add
gs
xor
cmpsl
sub
sahf
xlat
jae
adc
loop
nop
psllq
adc
push
add
loopne
in
push
flds
inc
outsb
test
push
repnz
add
add
insl
fwait
add
aam
push
testb
push
mov
fwait
add
aam
xchg
pop
pop
ss
add
das
out
ret
jmp
sub
pop
mov
dec
add
sbb
fstpl
jns
stos
es
loope
xchg
add
mov
dec
addl
sub
and
cwtl
xor
in
test
adcb
lea
pop
add
jg
mov
stos
cwtl
mov
aaa
mov
sbb
scas
sbb
pop
clc
mov
cmpsb
bnd
ret
pop
dec
movsb
push
mov
add
cmpsl
sub
and
mov
inc
jmp
gs
dec
ds
call
dec
stos
out
mov
mov
lahf
mov
add
mov
jns
add
push
jl
add
les
add
ljmp
and
shrb
add
xor
arpl
mov
negb
dec
sbb
out
std
cmp
mov
jbe
cmp
leave
jb
or
ljmp
inc
rorl
je
ret
int3
jb,pn
dec
jge
js
add
jmp
sti
or
jae
sub
pop
push
mov
mov
pop
testl
xorb
in
add
shlb
sahf
lock
adc
add
adc
mov
in
fidivrl
cld
stos
addr16
xor
cmp
rorl
leave
jb
add
jle
jle
jbe
add
pop
mov
into
cli
pop
push
mov
push
or
push
sahf
pop
insb
cs
pop
or
cli
mov
and
rclb
dec
mov
leave
stos
sub
push
add
jge
enter
jle
nop
movb
divb
lret
xor
sarl
stc
jo
add
call
lods
scas
sbb
sbb
dec
in
pop
add
hlt
add
ficomps
aam
add
enter
enter
mov
xchg
add
inc
jae
mov
ret
add
dec
jp
fstp
and
pop
out
mov
data16
sti
roll
fld
jnp
ss
or
add
in
incb
test
fldenv
pop
mov
sbb
xchg
pop
jns
cmp
mov
shlb
sbb
dec
xchg
xor
les
sbbb
add
stos
adc
dec
js
add
and
push
mov
je
gs
repnz
int3
pop
movb
aam
insb
pop
mov
outsl
add
jmp
sbb
xchg
inc
xchg
fwait
xor
sub
rcl
ds
nop
push
ret
adc
dec
mov
repnz
mov
push
in
or
jns
cmp
xor
dec
dec
popw
adc
cwtl
xchg
sbb
mov
add
or
call
cmp
and
inc
mov
mov
and
test
add
stos
mov
inc
pop
add
jb
out
jp
popf
push
rorb
arpl
fistl
adc
jae
and
call
cmp
test
push
sub
jbe
add
and
in
pop
add
minps
pop
xchg
mov
inc
gs
or
and
mov
add
sbb
outsb
negb
cmp
jo
dec
repnz
add
dec
scas
lret
dec
inc
andb
xchg
pop
imul
inc
pusha
les
lea
adc
inc
jmp
mov
aad
out
in
inc
aaa
sti
es
cmp
sbb
add
stc
push
test
or
rorb
pop
mov
nop
push
mov
hlt
mov
or
pop
add
in
fisubrs
addr16
mov
stc
sbb
sub
arpl
adc
popa
rorb
in
pop
jae
push
jbe
push
outsb
je
js
add
sbb
into
test
push
sub
pop
mov
cmpsb
jmp
sbb
adc
testb
xor
lret
sti
lahf
inc
stos
adcb
jne
xchg
add
sahf
dec
stos
dec
sub
incb
int
test
mov
push
jbe
in
add
or
jge
test
pcmpgtw
sbb
add
inc
test
adc
ljmp
jle
orb
adc
in
or
and
push
int3
loopne
sbbb
xchg
jb
pop
cmp
adc
jmp
lahf
add
cmc
inc
lret
jmp
stc
sub
sbb
or
cs
push
add
cmpsl
cmp
adc
adc
sub
sbb
cli
test
ret
add
roll
adc
add
dec
out
sarl
dec
push
ja
divl
repnz
push
test
ljmp
loop
adc
aas
jl
add
mov
fisubrs
add
dec
xchg
test
or
and
or
adc
ret
push
push
xchg
int
adc
mov
adc
sub
jb
push
lret
inc
jae
lahf
add
mov
std
hlt
add
mov
sti
dec
fwait
int3
add
inc
push
pusha
pop
xor
mov
mov
jp
sub
push
sub
cmpb
jns
mov
aas
fimuls
or
push
xor
adc
out
and
cwtl
mov
imul
lea
xor
push
or
lret
cld
stc
rorl
ror
iret
pusha
aaa
xchg
fs
add
mov
mov
out
addr16
loopne
mov
mov
dec
mov
out
sub
call
add
xchg
mov
push
cwtl
iret
jo
inc
inc
add
dec
add
mov
dec
lret
mov
add
insl
pop
hlt
cmp
out
lahf
add
sbb
mov
mov
cmp
push
arpl
add
pop
xor
imul
sbb
push
out
loopne
mov
push
jle
iret
loopne
add
xor
lock
add
insb
enter
movsl
mov
dec
aad
in
fistpll
cli
lock
stos
sbb
addb
cmpsb
adc
popf
fmul
sub
push
pop
xchg
lods
in
push
add
gs
mov
sarb
mov
cmp
mov
mov
aam
pop
dec
negb
inc
sbb
addl
clc
fisubs
nop
fprem
pusha
pop
sarl
jmp
leave
bound
stos
pop
add
xor
add
adc
cmc
pop
scas
test
xor
stos
dec
clc
aaa
insb
add
sub
mov
mov
add
or
mov
add
push
test
mov
scas
cmpsl
outsl
icebp
dec
push
pop
add
sub
pop
imul
fwait
add
dec
mov
sbb
mov
add
pop
cmc
ja
push
add
sbb
ret
pop
add
cmc
pop
add
pop
jp
stos
lods
int
jmp
in
mov
mov
or
add
mov
sarb
fsts
mov
jl
ret
pop
loopne
sbb
jnp
add
nop
lods
jecxz
mov
jle
lock
jno
clc
sub
repz
call
jae
sbb
pop
pop
xchg
mov
and
xchg
pusha
pushf
mov
lock
cmp
sbbb
xchg
add
jle
popa
ror
nop
pop
push
add
lock
fadds
xchg
dec
jnp
sbb
inc
hlt
in
int3
cli
mov
in
adc
xchg
inc
jns
add
xor
dec
in
sbb
cmc
outsl
sub
xchg
add
ret
bndldx
shll
out
cmp
push
add
data16
outsb
fmuls
mov
daa
dec
clc
call
pop
mov
jp
stc
fisubl
mov
add
sbb
cmp
dec
test
test
xor
call
sarl
mov
outsb
popf
fwait
cmpsl
loopne
dec
mov
add
sbb
sub
repnz
jp
aas
test
mov
and
jecxz
mov
pop
or
xor
jb
aad
dec
sub
bswap
jae
add
in
in
in
jo
fwait
cmp
lret
sahf
mov
mov
loopne
das
cmpb
lcall
inc
outsl
cld
mov
add
add
pop
pusha
int3
mov
inc
mov
xchg
jmp
push
mov
mov
add
and
add
xlat
sub
jns
les
enter
push
add
and
addr16
or
pop
mov
jecxz
mov
rcll
mov
cmp
pop
stos
iret
jp
dec
lods
push
mov
sar
xchg
cmp
mov
jae
adc
sub
lea
addl
mov
shll
pop
nop
add
and
cmp
xchg
fdivrs
sbbl
pop
rcrl
fdivrp
mov
inc
orb
adcb
decl
data16
insb
mov
es
push
xor
mov
mov
in
repnz
cld
pop
add
xchg
sub
or
lods
jp
adc
stos
clc
repz
push
inc
add
sub
mov
mov
enter
inc
and
popl
in
movsl
popa
mov
roll
fsubs
sbb
dec
sub
push
jo
daa
add
je
nop
add
js
jnp
ror
xor
sub
cmp
cli
cmp
fdivrl
pop
rcll
test
or
cmpsl
iret
sbb
pop
cmp
jae
inc
or
jle
into
cmp
jo
and
aaa
in
int
mov
xchg
leave
ds
test
sub
mov
push
add
hlt
adc
hlt
bnd
pusha
add
in
cmp
testl
aaa
ss
add
stc
lret
fimuls
adc
adc
jg
sub
add
sbb
sub
add
add
inc
jno
push
cld
pop
ficoms
adc
mov
mov
mov
movsl
adc
inc
in
mov
cmp
les
sub
push
xor
lahf
repz
xor
jae
add
movsl
aad
xor
push
mov
push
add
shrb
movzwl
add
inc
and
addb
sub
jmp
add
mov
sbb
or
jae
pop
adc
out
enter
pop
pop
adc
lcall
adc
outsl
ljmp
rolb
xchg
nop
sbb
movsl
adc
cltd
jnp
pop
repnz
sub
in
js
add
push
lods
mov
in
add
dec
sub
xor
rcrb
xchg
or
pop
xor
int
cmp
add
xor
or
cmp
xchg
add
shlb
pop
inc
sub
add
popa
addl
sbb
sub
inc
xlat
mov
add
sar
cmpsb
enter
sbb
pop
cld
sbb
orb
sti
aaa
mov
and
lahf
in
add
adc
mov
subl
in
je
das
mov
insb
cmp
xorb
xchg
xor
mov
dec
in
push
scas
dec
popa
int3
mov
cmp
in
icebp
pop
stos
loope
add
cli
insl
sub
hlt
add
push
dec
movsl
shll
or
cmc
mov
mov
sub
loope
or
loop
xchg
and
jmp
or
in
xor
fidivl
arpl
fsubs
add
dec
out
xor
in
cltd
dec
lods
repnz
roll
ror
aas
lods
mov
push
pop
shlb
std
mov
adc
sub
or
pop
rolb
xchg
je
cmp
inc
imul
loopne
pop
lods
pop
jge
mov
shrl
sahf
adc
sbb
add
fdiv
sub
rep
push
xor
in
jne
jo
xchg
dec
jecxz
idivb
hlt
xlat
sub
std
lahf
and
stc
call
ret
out
adc
pusha
xchg
dec
adc
sbb
pop
xor
add
in
xchg
inc
cmpsb
int3
iret
add
test
dec
inc
add
sbb
shl
pushf
xor
lods
pop
shr
nop
add
or
repz
fsub
mov
xchg
in
ret
das
adc
rolb
test
and
cltd
add
pop
cwtl
popa
xchg
pop
add
subb
add
adc
popa
jl
or
sarb
xchg
arpl
adc
pop
dec
or
dec
cmp
add
dec
stos
pop
inc
sub
jge
or
fiaddl
mov
arpl
xor
inc
std
push
clc
add
mov
mov
mov
adc
or
mov
jne
xchg
je
mov
mov
push
ja
mov
jnp
add
rcrl
nop
cmp
sub
stos
mov
add
xchg
into
fisubrl
je
sub
cmpsl
jo
push
and
mov
mov
xchg
jnp
pusha
mov
sbb
pop
sbb
imul
dec
adc
fs
cltd
clc
inc
add
inc
popa
mov
mov
pusha
add
movsb
pop
sub
jb
jp
add
out
and
jle,pn
add
cmp
mov
orb
jmp
jmp
repnz
add
mov
or
or
xlat
out
mov
pop
imul
push
mov
dec
lret
je
and
aaa
out
cmpsl
and
pop
xor
mov
sub
roll
test
lock
enter
fisubs
popl
adc
xor
movlhps
sbb
and
test
cmp
lods
pusha
inc
addl
inc
in
sub
adcb
mov
inc
sub
add
push
cmp
inc
add
mov
into
xchg
and
addr16
add
xchg
ret
xor
cmp
lahf
imul
mov
cmpb
lahf
lret
sbb
or
mov
pop
aaa
and
add
and
pop
add
hlt
mov
sub
orb
add
xor
cmpb
push
popa
jae
jp
adc
sbb
add
xor
jns
dec
insl
lea
mov
scas
mov
in
addb
push
pop
shlb
cwtl
fst
into
jno
pusha
cltd
lock
dec
adc
outsb
gs
pop
xor
mov
shl
fimuls
insb
mov
ja
lock
lret
inc
andb
ret
addr16
in
xlat
insl
mov
movsl
mov
fildll
loope
sbbb
sbb
imulb
add
mov
test
pushf
push
xchg
mov
push
xor
pop
add
push
or
ficoms
jl
add
std
pop
call
addr16
arpl
out
add
mov
sar
ss
mov
jne
adc
add
add
stc
rorl
dec
push
or
mov
mov
jno
pop
dec
scas
loop
pop
dec
sbb
push
pop
popl
mov
mov
push
mov
lock
aad
stos
lock
gs
sti
push
inc
add
xchg
cmp
mov
dec
scas
xor
js
mov
rolb
add
sub
pop
mov
adc
leave
sub
jge
inc
sub
add
pop
pop
sbb
outsb
bound
add
mov
add
push
shrb
data16
cmc
xadd
in
repz
cmp
lock
add
fadds
pop
iret
outsl
jge
dec
clc
insb
push
sub
orl
xor
jne
lcall
xchg
orl
jne
icebp
pop
add
pop
imul
push
adc
insl
addl
mov
adc
sbb
js
pop
inc
pushf
repz
rcrb
pop
add
add
adc
sub
jb
faddl
in
ja
mov
mov
lcall
rolb
enter
int3
pop
in
out
dec
rcrb
dec
gs
add
fistl
add
push
push
jns
sub
and
and
std
test
xchg
add
cmp
mov
mov
dec
add
popf
push
jnp
xchg
or
and
push
aaa
mov
popl
or
loop
and
je
roll
rclb
lahf
test
push
iret
add
xor
sub
mov
add
jns
std
sbb
test
cwtl
mov
add
in
adc
mov
cmp
sti
push
adc
inc
cld
jecxz
push
inc
shll
xor
sbb
addr16
dec
push
movsb
adc
hlt
push
cs
negl
mov
adc
adc
mov
call
sbb
shlb
in
shrl
rcrl
jnp
push
addb
repnz
push
or
sub
fistps
add
xchg
fiadds
out
sub
ljmp
mov
cmp
add
hlt
pusha
stc
test
scas
dec
sbb
mov
pop
pop
pop
xchg
xchg
inc
mov
mov
adc
pop
les
add
dec
adc
ja
cld
fisubrl
xchg
mov
or
notb
scas
es
jne
insb
shlb
add
xor
add
inc
adc
jb
dec
leave
mov
push
je
loopne
imul
add
cmc
adc
xor
cmpsb
and
sbb
add
dec
lea
or
sbb
and
lods
in
jnp
add
in
push
hlt
adc
mov
xchg
pusha
fchs
add
in
pop
pop
sbb
push
xchg
cmpsl
and
xchg
cmp
nop
add
mov
in
add
pop
pop
rorb
mov
insl
ss
in
lods
mov
sbb
ficoms
add
sbb
cmpsl
add
popf
mov
dec
ja
loopne
cmpsb
divl
pusha
pop
shl
cmp
jle
adc
add
cs
push
jmp
sti
lret
mov
sub
add
sbb
inc
rorl
outsb
push
xchg
sbb
add
scas
inc
add
sbb
rep
sbb
adc
jle
push
test
and
scas
enter
shll
mov
imul
push
push
jl
outsb
cmp
add
fcoms
rolb
add
outsl
cwtl
add
add
jne
sahf
dec
add
cwtl
add
pop
adc
pop
jno
sbb
cmp
fdivl
rolb
int
jnp
dec
nop
jne
jmp
inc
adc
nop
xchg
sahf
sbb
add
jl
arpl
mov
sti
and
popf
movsl
xchg
in
sbb
or
add
aas
call
cmp
sub
push
in
mov
nop
lret
movsb
pop
lea
and
pop
adc
pop
pop
add
inc
xchg
mov
add
in
jnp
mov
outsl
insl
bound
or
add
sbb
pop
add
and
add
xor
ds
cmp
dec
mov
sbb
sbb
rol
mov
sbb
push
mov
in
push
pop
mov
dec
pop
ds
jns
in
shrb
fxch
mov
loope
fsubs
xchg
jo
cmp
into
and
call
cmpsb
jo
jne
or
add
mov
mov
movsb
push
adc
test
push
mov
gs
call
add
imul
inc
call
ljmp
xorb
pop
ret
psadbw
push
call
xchg
and
mov
xchg
cmp
adc
loopne
mov
loopne
add
push
in
test
xor
scas
fcoms
loopne
pop
stc
dec
mov
sub
popl
lds
inc
test
cwtl
mov
pop
movsb
iret
cmc
add
stos
add
mov
mov
test
mov
cltd
cmpsl
push
adc
ret
add
lods
jno
imul
addb
mov
rorl
hlt
scas
pop
pop
je
pop
gs
outsb
cltd
or
jns
fwait
dec
sbb
lds
cwtl
fcoms
xor
dec
add
dec
imulb
testl
push
add
dec
dec
imull
enter
pop
mov
add
push
mov
mov
inc
ljmp
adcl
out
leavew
push
and
and
push
mov
xor
push
pop
push
stos
xor
mov
bound
adc
cmc
lea
and
movsl
sub
les
xor
imul
mov
mov
cmpsb
cmpsl
add
mov
lods
sbb
data16
repz
ret
test
shll
rcl
push
imul
repnz
sub
dec
xor
das
or
loopne
xlat
cmp
pop
add
pop
jno,pt
lods
mov
mov
aas
ret
cmp
imul
loop
mov
or
pop
mov
rorb
mov
sub
addb
lea
pop
cmp
push
fnstcw
ret
inc
arpl
pop
fwait
add
mov
pop
xor
cmp
add
pop
jg
pop
dec
lea
xchg
sbb
movsb
test
cmp
popa
jnp
jecxz
enter
in
xorl
and
xor
jbe
divl
add
popl
add
les
push
cli
cmp
inc
mov
loop
add
popa
repnz
add
jecxz
stos
or
and
add
push
dec
or
sub
rclb
mov
fcom
jae
lahf
fisubrs
mov
or
add
imull
dec
xor
add
adc
add
sub
addr16
xchg
jp
mov
lret
push
pop
inc
push
enter
sbb
out
pop
incl
adc
and
inc
jmp
push
add
das
orb
dec
test
pushl
xlat
lock
loope
pop
movsl
xor
shrb
sub
push
dec
clc
dec
gs
or
cwtl
repnz
int
mov
xchg
add
sub
mov
push
add
sub
mov
add
dec
popa
int3
push
jg
mov
pushf
lret
inc
inc
mov
jne
cli
test
lcall
nop
cmpsb
dec
dec
in
jle
lock
jg
mov
sbb
mov
test
rclb
int
in
or
pop
ss
cld
shlb
or
push
bound
xor
dec
mov
in
add
out
clc
arpl
addr16
int
or
ret
inc
and
push
fsubs
xor
push
sbb
push
roll
popf
sbb
inc
movsb
rol
xchg
outsl
loope
add
lret
fisubrl
jo
add
nop
shll
add
lock
push
icebp
cmp
pavgb
shll
jns
add
inc
pop
jns
rol
sbb
dec
fldt
sbb
cli
rcrb
outsl
add
pop
sbb
and
inc
fiadds
pop
jg
in
bound
add
mov
cs
fists
xor
push
mov
sbb
cmp
shlb
fs
and
push
add
outsl
dec
loopne
fsubrp
jl
push
and
popf
aam
add
xchg
fistpll
cwtl
adc
fisttpl
push
pusha
icebp
jmp
cmp
aas
jae
roll
xchg
xchg
cmp
lods
lods
scas
push
pop
add
stc
mov
and
rorl
sub
add
jle
add
lcall
in
and
jns
push
inc
sbb
cs
push
cmp
pop
add
ja
dec
cmpsl
add
jl
add
xor
sti
daa
sub
mov
int
je
xor
xchg
sub
mov
dec
mov
add
mov
cltd
xor
in
imul
lcall
xchg
add
mov
hlt
add
push
loopne
mov
sbb
mov
cwtl
pop
or
jmp
ret
or
jns
add
leave
dec
arpl
int3
push
add
pop
test
xchg
add
mov
call
insl
rolb
aam
dec
cld
sbbl
in
pop
inc
shll
add
dec
std
loopne
shlb
das
pusha
rcll
adc
fstpl
rol
cli
and
mov
push
repnz
int
pop
cmp
mov
popf
add
mov
cmp
adc
pop
mov
ror
pop
stos
mov
cmp
pop
out
pushf
xor
adc
sub
sbb
lret
ja
push
iret
enter
cmp
cmpsb
inc
sti
mov
xchg
fwait
movsb
lock
sarb
adc
ja
add
int3
repz
add
addr16
inc
sub
xor
sbb
pop
xor
cmc
fcomps
or
in
mov
push
jnp
mov
add
sarl
dec
xchg
sar
mov
movsl
cwtl
xchg
inc
pop
add
push
jmp
pushf
add
insb
jns
pop
dec
fbld
or
call
gs
mov
mov
and
movsl
cmp
test
into
sub
sbb
inc
rol
out
stos
filds
mov
bound
push
enter
xor
mov
outsl
fs
mov
or
add
lahf
add
add
adc
push
lret
lods
pop
rolb
loop
imul
inc
loopne
test
lret
bound
cltd
mov
arpl
aam
mov
movsl
add
fisubl
repnz
add
xorb
mov
arpl
pop
iret
cltd
xor
add
mov
dec
sub
jle
mov
mov
lea
push
les
rorl
pop
incl
add
leave
negl
jae
test
fidivrs
or
cmp
inc
mov
loope
iret
pop
or
add
dec
rcrb
xor
dec
lea
sub
dec
lret
fmuls
in
xchg
adc
add
insl
and
cs
stc
cmp
js
push
jno
pop
pusha
testb
xor
mov
adc
int
and
add
dec
leave
fucomp
fistps
insl
dec
mov
xor
push
xor
andb
das
xor
add
jle
es
mul
lcall
cmp
andl
sbb
jo
rol
dec
movsl
cld
sub
push
or
shl
rol
nop
fwait
ds
dec
hlt
add
xor
insb
push
shll
into
rcrl
cmpsl
cmp
sti
bound
sub
jo
add
inc
xor
jno
popa
cmp
out
xor
push
stos
cwtl
and
xchg
dec
sub
aad
fiadds
pop
sar
outsl
cmpsl
bound
pusha
xor
pusha
cmp
lock
addl
arpl
imul
iret
inc
inc
rol
pop
adc
in
add
dec
in
inc
push
mov
subl
mov
jecxz
clc
hlt
cwtl
movl
test
ret
rcrb
mov
aam
aas
pushf
add
aad
mov
sbb
inc
sub
testl
pop
add
cmp
cmc
mov
out
adc
jb
jo
cli
out
shll
xorb
ljmp
lock
and
test
fwait
pop
loope
roll
rolb
xor
inc
ss
dec
cmpsb
mov
add
push
imul
jle
int3
cli
les
add
jmp
dec
insb
fcoms
adc
movsb
in
push
daa
add
mov
data16
xchg
pop
movl
jecxz
sbb
out
add
xchg
pop
adc
pop
fimuls
into
lods
add
lock
addb
push
or
xor
lcall
mov
sti
test
sbbb
outsl
push
xchg
cmc
inc
sbb
cmp
adc
int3
jecxz
std
add
sbb
cld
xchg
adc
sub
push
add
hlt
inc
nop
push
adc
mov
xchg
add
pop
lcall
andb
sbb
ja
out
jo
mov
jno
mov
in
roll
lret
mov
aaa
testb
mov
adc
pop
mov
out
jne
add
gs
and
jne
jge,pn
mov
and
pop
adc
adc
mov
add
sub
cmp
in
add
mov
pop
mov
mov
mov
fsubp
adc
mov
rorb
je
push
inc
add
and
or
scas
inc
jo
and
cmp
sahf
iret
push
inc
dec
ja
or
orl
inc
les
adc
hlt
add
xchg
inc
in
mov
mov
push
popa
dec
std
add
int3
mov
jns
or
xchg
sahf
test
hlt
sarb
les
add
xchg
jg
pop
jnp
dec
add
adc
xchg
hlt
add
push
push
pop
shlb
add
push
je
sbb
outsb
clc
adc
dec
pop
mov
addr16
push
mov
pop
dec
pop
push
testl
icebp
cmpsl
sbb
add
cmp
hlt
jns
adc
sbb
insl
add
lea
add
movsb
test
ret
shr
mov
jns
lea
insl
inc
add
out
mov
jp
xor
scas
add
adc
push
add
std
pop
shlb
lret
sbb
mov
idivb
cltd
push
add
xlat
sub
gs
outsl
and
stc
stos
ficomps
je
add
lock
pop
xchg
or
testb
pop
or
mov
and
sbb
ss
sub
cltd
out
add
hlt
pop
fwait
mov
pop
sbb
fadds
xor
das
outsl
push
ficoms
mov
icebp
add
stos
add
pop
dec
pop
add
aam
pop
push
shrl
lock
rolb
inc
or
inc
xchg
subl
jle
add
iret
add
add
sbb
or
mov
std
xchg
das
push
add
enter
fdiv
lods
add
dec
xlat
repz
gs
jne
mov
ss
adc
mov
add
int3
shl
add
loope
sub
jno
xchg
add
cmp
add
arpl
xor
sub
outsb
dec
push
add
pop
sar
and
or
add
repz
xchg
mov
pop
repnz
add
ficoml
jmp
cmp
frstpm(287
and
sbb
lret
or
jl
add
pop
test
inc
add
ret
out
push
jno
rolb
sbb
push
mov
repz
add
jbe
push
les
lahf
mov
cli
loop
or
sub
mov
lahf
lea
decb
aas
ret
add
bound
adc
jne
add
sbb
jg
cmp
add
adc
arpl
call
inc
aas
gs
cli
add
fldenv
ja
mov
xor
xchg
fildl
lds
sbb
and
out
jl
push
in
push
mov
mov
add
sbb
add
ret
mov
sub
inc
hlt
out
cltd
or
add
add
push
into
mov
dec
pushf
add
cmpps
pusha
xor
cltd
fimuls
clc
sti
jne
pusha
scas
loope
stc
pop
jnp
xor
mov
mov
outsb
sbb
mov
lock
add
mov
jo
pop
mov
add
out
mov
jnp
loope
jecxz
lods
jl
pop
outsb
sahf
inc
add
lock
push
sti
xor
add
fstl
jbe
gs
jg
add
jge
cmc
add
push
lea
jo
rolb
add
hlt
leave
cld
mov
out
movsl
push
mov
loopne
sub
pop
cmp
pusha
orb
cs
push
add
jne
ss
out
push
mov
mov
je
inc
pop
cmc
fmull
in
add
sbb
add
outsl
lcall
push
lock
pop
cli
cmp
and
stos
call
jbe
out
stos
outsb
roll
imul
or
sbb
sub
lods
xor
mov
jp
mov
mov
and
push
inc
pop
out
or
add
mov
dec
adc
inc
jne
pop
bound
movsb
sbb
cld
add
mov
lea
jp
inc
or
std
daa
mov
pop
and
or
mov
xlat
mov
adc
in
hlt
cmp
dec
jp
add
aas
adc
inc
into
mov
and
leave
sbbb
sub
add
sbb
xchg
imul
in
scas
pushl
mov
cwtl
shufps
or
add
cs
out
xor
add
enter
fimull
cmp
xorb
js
add
jmp
xchg
cmovle
dec
pop
add
jecxz
inc
xchg
test
adc
xchg
cmpsb
adc
add
mov
add
push
iret
pop
arpl
fucomi
mov
jb
inc
cmp
adc
popf
cmpsb
add
stos
mov
add
xchg
push
jmp
add
jno
scas
add
movsb
push
adc
aad
fdivrl
push
jle
add
cmp
fldt
mov
call
xchg
add
push
jp
mov
inc
add
push
sbb
add
ret
ret
push
cwtl
into
incb
pusha
adc
push
push
lods
push
sbb
fs
vmovdqa
adc
into
dec
cmp
int3
add
push
cld
shrb
lret
nop
push
jecxz
add
add
mov
cld
notl
and
adc
inc
push
shrb
in
arpl
sarl
adc
pop
insb
add
xchg
mov
dec
adc
jl
sub
mov
cltd
dec
mov
jno
sbbb
call
inc
incb
sbb
sub
xchg
mov
arpl
das
and
add
push
loopne
out
push
add
sub
xchg
pusha
cld
lcall
jle
jmp
lods
sub
dec
sbb
movsb
push
aam
cmp
inc
clc
adc
int
push
into
and
inc
sbb
cld
mov
test
ret
jmp
stc
cli
cmpsb
push
sbb
out
call
jae
xor
add
jne
aam
or
add
adc
add
cmpsb
cmpb
jecxz
push
add
jne
push
push
sbb
cmpsl
out
jle
cmpsb
jnp
test
scas
dec
andb
ds
mov
shr
cmp
cmp
and
adc
rolb
in
cmp
add
cmp
pusha
push
mov
loope
repz
clc
pop
mov
cs
lods
loopne
or
sbb
add
inc
cmp
xchg
push
inc
sbb
adc
mov
sbb
cli
adc
out
inc
adc
mov
jle
push
daa
mov
cmpb
mov
test
add
imul
add
jno
sub
lahf
push
push
lcall
int
cwtl
cmp
jl
ret
sti
xchg
jbe
mov
fsubl
imul
mov
cmp
loope
push
mov
pushf
or
sbb
dec
push
sbb
ret
xor
add
ds
aaa
ja
add
dec
adcl
gs
sbb
mov
inc
cmc
nop
aas
pop
inc
inc
out
push
pop
test
in
and
pop
push
add
cmp
cmc
shl
cmp
divps
sub
add
cwtl
sbb
xchg
mov
pop
mov
add
mov
in
hlt
lds
scas
or
cmp
pop
cmp
ffreep
test
adc
clc
std
mov
fndisi(8087
mov
mov
add
mov
aaa
pop
popf
jp
pushfw
lahf
add
in
jg
lock
cmp
lea
lahf
inc
sbb
lods
xchg
or
push
sub
negb
jmp
insb
sbb
xor
fsubs
push
jbe
and
add
or
rolb
pop
out
adc
bound
sub
faddl
cwtl
gs
jle
sub
add
xchg
add
gs
pop
lret
es
stos
pop
mov
test
add
fsubrl
pusha
in
addr16
sub
jbe
das
test
int3
pop
cmp
mov
stos
arpl
add
inc
mov
mov
jl
mov
inc
sub
and
out
mov
add
int
add
ljmp
imul
sbb
mov
loopne
push
lret
shrb
mov
add
mov
jo
mov
lret
add
xor
jl
jecxz
pop
inc
push
hlt
ret
fistps
in
sbb
mov
into
fistpl
push
adc
mov
xchg
add
in
add
mov
cs
mov
les
clc
enter
cmpsl
mov
loopne
pop
add
out
lret
pop
les
jb
popa
aas
enter
cmpsb
mov
add
fists
scas
add
cltd
cmp
cs
push
adc
nop
mov
add
xor
cmp
add
pushf
subl
ret
dec
add
add
sub
sub
sbb
movsl
jns
add
cmpb
xor
jne
push
push
out
out
dec
and
add
lods
daa
ja
test
pop
jp
inc
adc
fimull
adc
xor
cmpsl
hlt
mov
add
add
ret
imul
divb
xchg
or
sub
adc
repnz
mov
das
stos
cmp
movsb
mov
cmp
jmp
lock
jb
adc
pop
dec
pop
sub
popf
pop
lods
add
inc
aad
add
inc
inc
add
adc
push
insl
sbb
cmpsl
xor
popa
je
lahf
add
leave
pop
ja
pop
lea
mov
in
push
mov
cmp
inc
in
adc
jmp
mov
movsb
fmull
add
xchg
and
cld
push
adc
je
or
push
outsl
and
in
cmpb
fwait
das
mov
loope
jo
add
jno
test
cli
mov
stos
add
andb
pop
aam
xchg
push
mov
test
and
shl
mov
sub
cmp
adc
mov
inc
outsb
repnz
jne
into
cmp
add
sub
data16
aaa
xchg
fwait
jg
and
add
mov
add
push
add
pop
mov
sti
fmuls
jle
sbb
mov
xchg
xchg
roll
sar
cli
in
mov
mov
pop
sub
mov
test
add
mov
jl
add
xor
adc
add
push
inc
push
ljmp
xchg
adc
add
adc
and
shl
out
cmp
addr16
sub
ret
add
fdivl
imul
shrb
mov
shll
cld
inc
jne
and
js
pop
addb
jnp
adc
xchg
insb
add
push
lods
push
pop
and
add
mov
fcompl
add
jmp
pop
cmp
and
addb
insl
loopne
jmp
fildl
mov
lock
mov
add
cmp
mov
cmp
rolb
ljmp
add
add
scas
popf
hlt
pop
fwait
dec
pop
add
pushf
cwtl
push
pusha
stc
push
rorl
mov
sub
cmpl
jge
fiadds
inc
add
test
imul
adc
add
imull
shlb
repnz
and
ds
add
sub
lahf
jmp
aaa
push
pop
add
cmp
mov
rorb
fists
aas
in
mov
ret
lock
add
into
push
jmp
dec
cmp
add
push
mov
sbb
and
adc
add
test
outsl
nop
pushf
or
xchg
add
push
mov
roll
or
test
add
cmp
popa
lods
dec
repnz
add
dec
cmp
lret
ds
and
or
scas
andl
cmp
lea
insl
mov
xchg
xor
aas
cmpsb
clc
sbb
pop
push
or
mov
xchg
mov
aam
pop
and
jbe
mov
push
inc
test
je
lods
and
aad
mov
fbstp
pop
push
sub
push
andl
or
xchg
mov
ja
add
pop
mov
aad
icebp
mov
mov
pusha
fcompl
jo
shl
xor
push
stc
scas
mov
inc
into
and
sti
and
add
sbb
xchg
sbb
inc
je
mov
push
dec
negl
and
pop
add
cmp
adc
adc
sub
add
push
outsb
stos
add
push
test
push
add
jae
xchg
pop
jns
add
cwtl
cs
ret
test
int
fdivrl
out
inc
xor
pop
adc
xchg
sbb
shl
or
sub
pop
mov
cli
into
daa
and
test
pop
cmp
leave
mov
push
pusha
or
jge
sbb
jl
xchg
cmp
pop
testl
jecxz
inc
mov
sbb
jne
push
cld
sub
pop
push
jl
and
popa
pop
std
adc
cmp
jns
and
add
mov
rcrb
push
inc
mov
mov
or
aad
bound
cwtl
add
push
cmc
aas
pop
loop
enter
push
mov
out
in
add
cmpsl
xchg
add
jns
and
sub
cmp
sti
scas
xchg
shrl
test
addr16
xor
pusha
orb
pop
dec
or
fwait
mov
ss
mov
mov
add
aad
mov
imul
inc
call
mov
sbb
imul
sti
inc
pop
aaa
imul
sub
sbb
mov
hlt
js
cwtl
xor
xchg
dec
and
or
lods
jl
lcall
and
outsl
and
dec
add
aas
loope
sbb
loopne
shrl
add
lds
add
filds
cli
pop
xchg
sbb
mov
shrb
imull
jge
jbe
add
cmc
add
jo
popl
fsts
nop
jns
mov
dec
add
cmpsb
jo
jg
pop
es
inc
scas
dec
mov
push
mov
add
cmp
add
pop
add
push
test
fadds
imul
cmc
sar
loopne
add
or
add
orb
in
add
sbb
cmp
jb
dec
inc
hlt
add
xchg
add
sbb
mov
add
or
mov
dec
in
ss
push
or
push
add
imul
fs
push
gs
xor
popl
add
imul
adc
sbb
sub
add
add
xor
sbb
add
test
mov
xor
fldl
data16
movsl
sbb
mov
movsb
xchg
stc
mov
add
xor
stos
icebp
and
jnp
shll
scas
or
imul
std
cmp
adc
enter
pop
jge
adcb
pop
add
fcompl
mov
incb
cmp
sub
xchg
mov
jno
call
add
loope
dec
jae
add
add
pop
insl
mov
mov
enter
xchg
add
loopne
shl
jnp
add
and
call
adc
movsb
push
nop
mov
mov
add
push
lret
inc
out
sti
cmp
mov
int
push
add
or
push
int3
add
data16
push
xor
add
loopne
repz
add
push
pusha
leave
stos
mov
pop
loopne
sbb
push
jge
aam
xor
rolb
cwtl
nop
lcall
or
movsl
sbbl
pop
pusha
and
add
daa
dec
xchg
rorb
xor
into
add
xchg
shll
cmp
mov
scas
rcr
aam
lret
mov
mov
pop
pop
cmp
mov
int3
in
xor
add
stc
leave
mov
in
push
jmp
jo
mov
mov
ljmp
ds
test
push
aaa
andl
test
movsb
cmp
push
add
sti
mov
out
or
jmp
or
mov
test
mov
rorl
pop
stc
adc
cld
inc
pop
add
pop
movsl
xchg
sarl
adc
test
add
or
pop
mov
int3
das
add
jnp
out
pop
add
add
in
add
popf
sbb
mov
decl
and
add
lahf
inc
pop
add
or
xchg
xor
outsl
add
inc
fsubr
out
or
push
fs
insb
rolb
adc
add
sbb
or
add
push
sbb
add
icebp
pop
pop
sub
outsb
flds
rolb
push
mov
pop
dec
xor
and
sub
enter
mov
xor
xchg
jecxz
mov
add
fwait
xchg
push
add
cmp
mov
out
jne
add
loope
push
jbe
add
enter
add
rcrl
into
add
fmulp
int3
mov
pop
rcrb
addl
add
mov
pop
adc
xor
lds
mov
adc
and
repz
fistl
das
fidivl
pop
addl
add
adc
js
sbb
aaa
icebp
clc
popf
mov
xchg
inc
lock
and
mov
imul
movb
js
ds
jmp
out
jns
add
cmpsb
inc
int3
xchg
push
test
bound
rcrl
add
mov
cmp
lock
cld
pop
idivl
adc
hlt
mov
jne
out
dec
or
pop
mov
in
xor
mov
xchg
das
add
aas
fildl
les
lds
inc
or
cmp
push
loopne
jge
es
cmp
sub
sub
jno
jle
push
jg
xchg
xchg
cmp
add
outsl
xchg
ret
aad
jl
or
or
pop
inc
add
repnz
lret
and
gs
cld
push
lcall
mov
je
add
cmp
and
push
mov
repz
nop
cmpsl
sbb
add
popf
cmp
push
or
sbb
lods
push
cmpsl
add
cmp
stos
add
mov
mov
jle
add
test
fs
xor
loope
pop
mov
sbb
out
sbb
xchg
dec
repnz
fstpt
ja
mov
pmulhw
rorl
imul
fcoml
xchg
sbb
lods
int3
add
add
cmp
pop
add
inc
cmp
call
bound
les
adc
pop
jp
shll
and
shl
pusha
jmp
mov
push
std
aam
push
add
push
rcr
or
pop
in
test
arpl
add
nop
sarl
add
add
xor
lahf
test
pushf
jp
xchg
dec
dec
dec
ret
add
adc
cltd
sbb
or
sbb
pop
mov
loopne
mov
jl
sbb
lcall
xor
aad
outsl
cmp
adcb
dec
inc
movsb
arpl
in
push
mov
sub
out
das
aad
mov
cwtl
sbbb
mov
cmp
jbe
cmpsl
es
test
iret
add
fs
sarl
dec
dec
cmpb
popf
push
fldl
push
sbb
sub
repnz
pop
inc
ds
aas
sbb
les
rol
cmp
sbb
cmp
mov
shlb
fdivl
mov
and
sbb
pop
es
test
shl
addr16
rclb
add
cmp
call
xchg
add
cmp
push
push
pop
test
fistps
or
add
pop
ja
mov
push
push
fstpt
shlb
xlat
pop
imul
xchg
lret
cmpb
inc
lock
cmp
cwtl
jg
adc
pop
push
pop
rcr
add
iret
inc
imul
movsb
pop
call
push
inc
lods
mov
jne
mov
adc
popf
or
pusha
ss
jmp
add
pop
add
fisubrl
jbe
fldl
nop
imulb
or
cmpsl
fadds
mov
fistpll
pop
subb
push
add
jge
mov
mov
mov
mov
mov
loop
lahf
sub
mov
jl
add
mov
fsub
sti
push
mov
inc
shlb
xchg
dec
lds
inc
mov
inc
movsl
pop
rolb
add
in
stc
xchg
push
push
inc
cmp
inc
les
fmull
mov
add
mov
pop
dec
jmp
pop
inc
xor
dec
sbb
add
mov
mov
add
mov
in
jg
cmovo
add
push
cmp
mov
pusha
add
aam
add
add
and
test
pop
loop
sub
mov
ja
adc
dec
addr16
add
cwtl
aam
sub
sbb
mov
add
adc
or
add
stos
dec
push
out
add
int
fsubrl
cmc
cwtl
add
sahf
ret
or
and
push
pusha
pop
push
mov
subb
pop
enter
push
xchg
xchg
add
adc
cwtl
add
inc
pop
mov
add
add
inc
jno
pusha
mov
arpl
inc
cmp
add
cmc
dec
mov
outsl
add
inc
push
clc
xchg
pop
or
inc
out
add
cmp
xchg
arpl
push
push
add
in
call
mov
cmp
mov
nop
mov
sbb
insb
push
ficoml
mov
punpckhdq
pushf
les
int3
sub
or
cmp
add
mov
add
std
sti
sbb
adc
pop
loope
fs
outsl
add
inc
sub
mov
cmp
stos
loopne
pop
or
mov
fnstcw
pop
and
in
fiaddl
and
leave
pop
mov
add
inc
stos
arpl
sub
sbb
movsb
add
out
stos
pop
dec
xchg
add
push
pop
dec
ja
mov
push
sbb
clc
sti
inc
add
mov
jmp
loope
mov
lods
cld
inc
xchg
or
and
mov
jae
add
xchg
sub
add
lahf
add
xchg
aam
cwtl
add
fcoml
add
dec
scas
enter
rolb
xlat
les
dec
es
inc
loopne
mov
rol
mov
repnz
movsl
jb
push
add
xchg
ret
loopne
lea
stos
ljmp
jbe
mov
call
inc
dec
imul
dec
mov
iret
lock
jns
adc
adc
sub
push
mov
dec
mov
pop
mov
sbb
xor
js
loop
in
jb
pop
pop
inc
decb
nop
jne
lds
and
fwait
lock
nop
mov
push
imul
add
lret
test
mov
aaa
outsl
xchg
into
aad
rcrb
inc
stos
aam
add
rolb
jnp
and
sbb
ljmp
push
into
or
gs
pop
fwait
push
enter
add
dec
fcompl
fld
push
out
mov
xor
cmp
jg
mov
je
adc
cmp
dec
add
lds
mov
cmp
sbb
sbbb
and
and
push
xchg
sbb
icebp
add
mov
pop
lock
and
push
xchg
push
scas
loopne
repnz
dec
xchg
mov
inc
add
push
pop
outsl
add
cs
cwtl
int
movsb
add
stos
inc
std
xor
mov
add
mov
mov
add
pusha
inc
loope
leave
xor
inc
sbbl
jl
imul
fnsave
lret
sbb
mov
add
dec
push
xchg
pop
push
pushf
add
das
repnz
cld
or
sub
or
add
push
ret
xchg
adc
pop
add
pop
adcl
out
push
loopne
scas
aam
xchg
xchg
jmp
cltd
adc
add
cmp
mov
cwtl
mov
add
lret
into
sub
xcrypt-ofb
cmpsl
test
adc
or
and
mov
cmc
aaa
pop
add
nop
xchg
jno
in
pop
mov
and
xor
stos
sbb
call
dec
xchg
cmp
push
add
push
fwait
xlat
orb
shlb
ljmp
jp
mov
pushf
int3
sub
adc
fdivs
lea
clc
sahf
dec
add
jecxz
fwait
aam
or
cmp
pop
ljmp
add
test
pcmpgtw
jecxz
lret
pop
mov
iret
sub
xor
jmp
in
or
dec
sbb
push
adc
add
insb
ret
mov
mov
incb
mov
add
dec
adc
jle
mov
ret
add
jl
mov
test
inc
sbb
add
ja
fisubl
setl
aaa
inc
push
push
xor
ret
inc
je
add
shlb
cmp
lahf
or
sub
fsubr
adc
dec
xor
xor
lods
mov
or
cmp
mov
mov
faddl
inc
adc
in
addr16
jmp
aam
add
add
mov
sbb
xlat
pushf
sahf
cmp
mov
lock
jns
push
pop
add
mov
shlb
mov
jp
add
into
pop
xchg
aas
lcall
jbe
xchg
mov
push
push
push
int
cmpsl
call
test
mov
add
xlat
xchg
mov
mov
jo
adc
add
pusha
pop
sub
xchg
test
xchg
adcb
das
push
ds
ljmp
pop
xchg
stos
add
mov
jp
fwait
push
mov
loop
ds
inc
or
roll
push
jbe
mov
dec
sub
xchg
stc
fs
ljmp
ja
hlt
add
in
fwait
add
fisubrs
cmpsl
jo
xchg
lahf
addl
test
ds
add
sub
cwtl
sahf
lock
fidivrs
movsb
js
loop
xchg
enter
aad
and
and
mov
push
test
mov
aam
or
fs
and
and
lcall
aas
cmp
in
pop
adc
inc
mov
mov
pop
inc
leave
mov
dec
jl
or
dec
xchg
pop
sub
repz
and
movsb
and
inc
enter
sub
inc
pop
in
and
and
and
pop
loope
jl
push
pop
sbb
jge
push
lods
or
incl
jae
rcll
pop
dec
test
add
sar
int
cs
jp
stos
js
lret
es
inc
lret
mov
popf
mov
push
adc
movsb
jb
les
mov
and
jnp
out
jp
les
stos
das
orl
jge
add
in
xor
add
sbb
push
add
clc
stc
jecxz
int3
pop
inc
add
shrl
adc
dec
adc
inc
sub
aad
pushf
push
rorb
fdivs
add
imul
add
cli
or
ds
mov
pop
xor
cld
push
negl
bound
jl
leave
out
push
sbb
push
flds
inc
imulb
iret
push
orb
fcomps
add
sbb
add
xchg
cmp
add
ja
mov
jne
add
outsl
or
inc
dec
adc
subb
ret
pop
sbb
xor
loop
pusha
push
shr
shl
dec
mov
mov
inc
sub
cmp
inc
inc
stc
clc
jbe
pop
movl
or
add
inc
nop
ja
adc
fcomps
inc
mov
sub
xor
add
push
lcall
xchg
pop
fldl
mov
fsubrs
mov
pop
add
insl
jp
std
loop
aad
cmpsl
mov
out
jg
jecxz
nop
push
cmpsb
inc
cwtl
dec
pop
mov
inc
iret
xor
mov
xor
xor
sub
mov
es
inc
sbb
xchg
jle
add
xor
xacquire
imull
into
pop
sbb
fmuls
out
inc
scas
repnz
inc
add
add
das
lods
insb
and
repnz
in
sar
sbbb
or
cld
add
stos
jge
add
dec
stos
mov
or
add
adc
mov
or
cmp
addl
fs
mov
jb
ja
xlat
pop
lret
fiadds
sbb
sbb
fsubs
test
xchg
aas
int3
bound
add
dec
sub
jne
arpl
data16
faddl
aad
inc
les
inc
rcrb
add
ss
sti
lock
mov
lret
scas
xorb
outsb
add
jne
push
add
pop
dec
pop
fdivr
rolb
int
rorb
push
jmp
sub
xchg
out
xchg
push
pushf
push
mov
add
lock
loopne
inc
mov
jge
add
jle
arpl
dec
mov
out
add
xchg
mov
shrb
test
ljmp
pop
jo
cmp
dec
roll
int3
lret
ds
xchg
pop
shl
test
std
add
mov
sbb
add
imul
testl
push
clc
cld
sbb
test
shl
mov
push
cmp
mov
inc
add
xchg
sahf
mov
sub
das
add
push
fnsave
xchg
add
push
inc
and
inc
mov
scas
test
dec
aaa
pop
add
mov
push
jae
add
jg
push
push
inc
mov
add
pop
pop
push
jns
rcrb
bound
add
hlt
xor
out
lea
jmp
popa
sbb
add
bound
add
cmp
sub
dec
sub
jne
je
mov
fwait
popf
sub
inc
js
push
dec
cmpsb
repz
push
dec
add
jle
xor
imul
sti
add
scas
push
cmp
mov
jne
xchg
mov
sbb
xchg
call
adc
mov
das
std
adc
sbb
jae
add
push
bound
and
adc
cld
add
sub
mov
test
add
popa
mov
aaa
cmp
int
add
xor
add
push
mov
lcall
jmp
add
xor
mov
add
jg
mov
add
cs
into
jno
push
cmpsb
or
and
add
sub
pop
push
scas
int3
into
push
xor
aas
gs
outsb
cmpb
pop
insb
icebp
in
stos
cmpsb
add
xchg
add
adc
add
call
cs
cltd
pop
xor
dec
add
aas
out
sysret
mov
test
les
adc
ja
aas
jg
pop
pop
jmp
push
adcl
inc
lods
ret
rol
imul
loope
add
mov
rcr
adcb
cmp
cmp
dec
test
inc
push
push
add
shll
mov
stos
xlat
adc
sbb
lcall
dec
ret
xor
pop
leave
sub
cwtl
and
xor
inc
mov
ljmp
adc
cmp
ss
sbb
mov
lds
adc
mov
mov
dec
fnstsw
imul
es
in
push
movsl
lock
int
inc
ficompl
xor
adc
or
nop
mov
cmpsb
icebp
pop
ret
adc
fcmovbe
sbb
idivb
repz
pop
add
mov
pop
mov
stos
imulb
ret
das
mov
add
pop
mov
in
aas
add
outsl
nop
movsl
loopne
xor
jne
xchg
mov
cmp
cwtl
add
orl
jne
add
sub
add
loope
inc
and
push
add
mov
fcomps
mov
xchg
es
pop
ret
mov
leave
fsts
sub
es
aad
add
mov
movsl
enter
mov
idiv
and
aas
fsubrp
and
pop
adc
pop
addb
in
repnz
mov
dec
fwait
mov
add
mov
pop
pop
fmull
xor
dec
gs
add
sbb
add
andl
in
mov
inc
dec
sub
push
ret
jb
mov
sub
je
xor
call
push
inc
jne
cmc
pusha
xchg
and
mov
dec
and
add
testl
jl
outsl
icebp
xlat
add
mov
pop
cld
xor
push
inc
and
loopne
xchg
lods
popa
cwtl
les
xor
xor
inc
jmp
jb
int3
cmpl
out
sbb
enter
into
sub
insl
fwait
sub
mov
mov
mov
adc
inc
jg
sbb
hlt
in
rclb
add
xor
sub
add
xor
ret
add
mov
repz
add
fucomi
or
mov
mov
inc
pop
inc
fs
cld
icebp
imul
adc
sti
pop
jb
js
sbb
jo
mov
mov
lods
ljmp
das
loopne
and
sti
add
or
adc
mov
stc
adc
pushl
test
add
sbb
pop
pusha
fsubr
lcall
add
xor
lds
loop
add
aam
xchg
lods
adc
lret
icebp
jl
xchg
pop
loop
not
and
cwtl
add
add
pop
fdivrs
add
sub
das
pusha
sbb
add
cld
jecxz
add
cmp
es
aaa
and
popa
mov
in
aad
xchg
addl
cmp
test
sub
cmp
andl
xchg
pop
lret
jae
or
les
or
add
or
aaa
lock
insl
add
cmp
int3
or
and
dec
mov
mov
mov
lods
pusha
sbb
add
push
inc
mov
sbbw
int3
add
jp
std
xchg
pop
cmp
cmpsb
jecxz
push
les
mov
xchg
in
adc
push
adcl
add
xor
mov
popf
lahf
iret
je
mov
dec
cmpsb
std
pusha
dec
rclb
xor
add
fists
xlat
push
sbb
pusha
cmpsl
or
fmuls
lds
and
cs
mov
enter
stc
sbb
push
rcrb
pop
xor
cmp
stos
cmpsl
mov
add
mov
in
xor
xchg
cmp
xchg
in
mov
dec
xor
jmp
loopne
inc
or
mov
rorl
adc
add
pop
cmp
jecxz
mov
divb
push
inc
cmpl
adc
lods
loope
add
and
mov
add
iret
sub
add
or
pop
pop
adc
mov
add
add
inc
xchg
cmpxchg
roll
adc
inc
nop
push
lods
call
sub
ds
loopne
sbb
es
pop
add
clc
imul
adcl
pop
sysexit
outsl
insb
jl
cmpsl
sub
roll
scas
loop
adc
mov
mov
add
testl
sarb
or
insb
add
push
mov
loopne
sbb
insl
add
leave
out
insb
loopne
xchg
stc
add
jl
add
cld
push
add
lahf
adc
ja
mov
insb
jno
test
sbb
aad
add
cmc
add
pop
cmp
sahf
gs
cmpsl
or
xchg
fistl
hlt
add
push
popf
data16
adc
push
mov
aad
dec
push
addr16
dec
and
adc
aaa
test
fistl
add
aas
mov
inc
ffree
cld
es
sbb
sbb
jb
add
iret
lock
mull
test
cmp
std
imul
rclb
and
mov
pop
jge
mov
sub
add
sub
push
das
adc
hlt
sub
jmp
inc
mov
jbe
add
dec
pop
popa
push
rcl
add
xor
add
movsl
pop
add
xor
adc
inc
add
rcrl
xchg
xor
pop
add
in
xor
add
jbe
mov
jmp
add
pop
fbstp
pop
out
xor
mov
mov
fbstp
stc
adc
and
add
sub
mov
xor
mov
xchg
or
loop
pushf
mov
adc
adc
add
push
int
mov
mov
and
popf
mov
pusha
and
push
pop
pop
stos
jne
xchg
dec
jle
add
cmpsb
or
jl
push
push
mov
mov
fmull
pop
cltd
mov
in
push
add
test
add
add
js
pop
sub
and
add
and
adc
enter
daa
mov
sub
pop
fiaddl
xchg
pushf
mov
add
lea
nop
add
and
push
dec
fcoml
in
push
or
inc
pop
xchg
push
add
add
mov
dec
fs
add
jns
mov
pusha
out
sbb
add
mov
mov
xor
cmpsb
imull
pop
xlat
xchg
xchg
movsb
jecxz
adc
jo
mov
ja
pop
jne
fcom
into
mov
push
push
dec
adcb
xlat
mov
add
or
repnz
ljmp
test
sarb
adc
dec
fs
pop
out
movups
inc
pop
and
push
cld
add
fisttpll
icebp
mov
pusha
mov
out
mov
test
repnz
pop
cltd
and
rorb
push
icebp
or
jbe
sahf
add
es
ss
cwtl
clc
add
rcrb
inc
add
jnp
mov
fadds
add
add
sbb
out
cmp
testl
mov
test
mov
adc
mov
sbb
bound
and
mov
pop
or
or
xor
add
cmpsb
sub
mov
loop
add
jmp
pop
jns
add
mov
addl
insb
mov
push
add
mov
pop
test
das
push
sbb
inc
sub
lods
cwtl
and
push
je
add
fnstcw
mov
inc
fdiv
jl
movsb
mov
add
jge
stos
mov
rcl
add
std
pop
cmp
and
scas
into
js
ljmp
lods
in
sub
fstpl
sti
ja
stos
pop
ret
pop
loop
cltd
rcrb
add
mov
les
test
push
pop
push
jns
clc
mov
push
pop
mov
out
addl
popa
add
sar
and
dec
dec
xchg
mov
add
lahf
mov
add
call
cli
lods
add
sbb
mov
aas
mov
or
xchg
push
fiadds
xor
pop
insl
ja
mov
lock
mov
push
je
jae,pt
std
mov
test
and
aam
add
jecxz
sbb
pushf
stos
push
adc
in
mov
adc
lcall
insb
cmp
push
cld
pop
pop
add
xor
into
mov
in
push
push
aam
add
sbb
mov
push
imul
sub
add
lret
jmp
mov
enter
xor
test
mov
cmpsb
inc
and
setne
pop
add
mov
nop
out
add
test
xchg
rclb
ret
bndldx
pop
sub
jb
jne
mov
push
ret
mov
adc
call
outsb
jae
subb
or
add
cmp
mov
add
addl
mov
cmp
cmpsb
es
insb
lock
into
push
or
movsb
repnz
push
add
in
dec
lods
sub
loop
sub
out
pcmpgtw
xor
test
dec
dec
addb
mov
imul
mov
int
xor
or
adc
push
pop
adc
mov
dec
add
lahf
sbb
jp
add
test
xchg
pop
add
dec
testb
cwtl
je
test
push
mov
and
mov
pop
or
inc
xor
push
push
aad
testl
insl
jbe
mov
or
mov
lret
ljmp
pushf
fdiv
nop
pop
call
lods
clc
in
icebp
xor
rclb
mov
sbb
push
mov
or
imul
ficompl
repnz
xor
cmp
push
xor
loop
inc
or
xchg
iret
test
lods
adc
or
rcrb
inc
jno
lret
ds
push
xchg
popl
cmpsb
fistps
inc
and
ret
adc
repz
inc
mov
stc
add
in
mov
adc
push
pop
pushf
loopne
aaa
xchg
mov
pop
or
cwtl
mov
add
jle
mov
add
dec
cmp
jns
push
jae
inc
sub
jp
add
add
jge
leave
mov
in
enter
cmp
int3
mov
mov
adc
insl
add
lahf
cli
jnp
bound
jecxz
inc
push
and
sbb
mov
dec
add
add
imul
mov
ret
or
push
add
pop
push
pop
jbe
jb
xor
add
push
sbb
inc
shll
mov
mov
add
inc
jmp
aaa
pop
leave
add
ss
rcll
dec
mov
ret
sub
xchg
pop
pop
sbb
push
scas
das
dec
les
add
jo
inc
push
add
add
dec
cmc
dec
pusha
sbb
add
aas
fisubrl
and
cmpsl
or
fcmovnbe
mov
stc
add
dec
xchg
test
int
pop
xchg
fisubrl
mov
add
mov
outsb
sub
adc
cmpb
push
loopne
inc
das
loopne
repz
push
inc
sub
pushl
dec
jnp
cmp
fcompl
xchg
sub
dec
add
pusha
or
cmp
add
fsts
cmp
xchg
lods
jle
cld
adc
push
mov
push
or
loopne
test
or
aam
pushf
add
shl
jbe
mov
lcall
and
shrl
add
rcrb
sbb
add
mov
add
imul
hlt
pop
xor
fcoms
mov
add
loopne
testl
test
pop
xor
add
xchg
mov
pop
outsl
clc
add
sub
arpl
pop
fsts
adc
sub
inc
or
rcrb
fcomps
add
int3
in
xorl
push
test
ljmp
ss
cltd
in
pop
test
int3
outsl
movsl
outsb
cmp
sti
push
loop
inc
loopne
stos
std
fadd
js
add
or
xor
add
lret
dec
mov
add
aam
jg
add
repz
cmp
and
mov
aaa
adc
mov
or
cld
stos
xchg
pop
cmp
movsb
scas
imul
sbb
jg
sbb
fisttps
incl
pushf
pusha
lcall
push
pop
add
les
adc
test
or
or
jmp
aam
add
sti
sub
pusha
xor
test
insl
add
fcomps
dec
pop
out
cmp
add
xchg
jle
add
xor
shll
xor
pop
jmp
data16
ljmp
int
add
pop
inc
movsb
mov
arpl
adc
lea
mov
add
stc
cs
add
xchg
mov
cmp
dec
dec
mov
push
add
scas
push
sub
mov
add
xor
push
jns
add
add
and
xchg
mov
xchg
add
jnp
cld
std
loope
bound
cs
shlb
or
mov
add
sub
jp
jae
stos
insl
mov
cli
jne
popa
hlt
sbb
inc
sub
push
mov
add
xor
jnp
mov
scas
scas
pusha
fildl
cmp
cld
add
sbb
popa
pop
lret
dec
add
lcall
or
mov
mov
sbb
pop
fwait
mov
push
lods
add
jo
add
daa
sub
out
sbb
push
repz
push
push
sbb
ja
add
mov
nop
fdivl
push
mov
fcoml
xchg
add
lret
lret
sahf
into
int3
sbb
pop
loopne
repnz
inc
or
mov
add
mov
push
push
test
xor
popf
xor
push
cli
sbb
mov
add
lret
leave
movsb
sbb
inc
xor
rolb
imulb
add
stc
cmp
lock
test
xchg
pop
xor
lret
add
add
ret
cmp
add
sub
xor
pop
pop
rol
add
cltd
clc
bound
sbb
int3
aaa
add
or
dec
xchg
mov
testb
rolb
mov
mov
xchg
cmp
insb
push
sub
dec
scas
xor
ret
aam
mov
cmpsl
test
cmp
out
sbb
fcomps
stos
int
cmp
insb
adc
scas
shlb
adc
inc
add
popf
das
loopne
add
sub
sbb
nop
movsl
or
pop
mov
xor
push
add
lds
dec
popa
mov
gs
fldenv
sub
out
sti
pusha
daa
out
inc
add
in
notl
and
mov
push
xchg
mov
cmp
pop
pop
push
test
cmp
fisubrl
and
xor
xchg
dec
jns
js
frstor
dec
movsb
sub
pop
xor
add
add
pushf
rcll
add
jmp
xchg
sbb
mov
fwait
imul
lods
xor
loope
cmp
mov
xchg
loop
and
nop
lods
add
stos
cmp
data16
pusha
adc
push
pop
fstpl
jnp
mov
fdivs
pop
cmc
movaps
sub
mov
nop
aas
lret
and
jnp
inc
add
jecxz
cmp
pop
addl
je
add
adc
adc
imul
add
inc
inc
mov
mov
addr16
add
dec
xchg
mov
imul
or
inc
mov
jg
or
xor
push
and
lret
mov
lret
outsl
out
mov
dec
mov
or
sbb
and
mov
add
xchg
inc
mov
fcmovnb
mov
xor
pop
jne
jp
out
xor
cwtl
jae
rcl
movsb
sub
out
mov
pusha
mov
add
cld
sub
sbb
leave
sub
filds
sbb
jo
add
lea
aas
jp
ret
stos
push
jge
add
fcoml
add
jb
mov
xchg
popf
sbbb
out
out
mov
incl
cmp
data16
pop
xor
jo
mov
add
pop
incb
push
add
sub
and
stos
add
loop
adc
ljmp
fdivrs
aam
add
dec
shrl
lret
xor
mov
scas
add
mov
inc
neg
lea
in
or
jb
lcall
scas
and
mov
int
and
dec
pop
je
or
dec
xchg
push
cwtl
ficomps
rorb
add
dec
or
lods
inc
pop
pusha
inc
mov
js
loopne
pop
inc
xchg
pop
fldl
xchg
lods
mov
repz
add
sbb
sbbl
sbb
inc
pop
aam
add
xchg
orl
cmp
mov
sub
push
fmulp
xchg
jg
mov
imul
push
scas
test
out
and
aad
fstpl
and
add
loope
hlt
mov
add
outsb
dec
mov
stos
xchg
addb
mov
or
cmp
xchg
pop
testl
push
mov
xor
push
add
iret
popa
nop
adc
or
clc
xchg
mov
xor
xchg
xlat
pop
sbb
add
ljmp
adc
inc
mov
add
push
das
mov
cmp
xchg
insb
cmp
push
adc
sbb
movsl
arpl
xor
cltd
pusha
clc
lds
rcl
add
mov
enter
inc
rorl
jnp
aad
subb
xor
push
cwtl
push
xchg
outsb
or
in
std
sub
inc
mov
addr16
sub
or
lea
fiadds
movsl
pop
jg
mov
bound
xchg
testb
lahf
xchg
les
fimuls
pop
ljmp
pushf
repnz
add
hlt
pop
add
mov
add
xor
not
cmp
shlb
icebp
cmp
and
pop
adc
push
xchg
xchg
sbb
and
roll
in
shll
js
adc
lds
inc
xchg
xor
out
add
outsb
add
loopne
xlat
jmp
icebp
hlt
fisttpl
cmp
and
sbb
xor
and
sub
inc
scas
push
dec
jbe
xorl
pop
add
sub
es
shll
pop
int3
mov
xlat
fucomi
call
gs
xor
jne
insl
mov
test
add
jno
incb
icebp
mov
pop
test
push
cwtl
xor
and
add
adc
test
add
popa
cmp
xor
hlt
sub
ficoms
jmp
add
xorl
lock
mov
enter
imulb
pop
enter
dec
cwtl
stc
push
shr
add
sarl
jle
add
lcall
mov
fldcw
sub
adc
xchg
popa
sbb
nop
mov
ret
mov
notl
add
call
cmp
and
lcall
in
mov
jmp
call
shll
jb
xor
dec
push
add
add
gs
fcomps
icebp
push
lret
loop,pn
pop
jno
and
or
pushf
fcmovnb
pop
loopne
sti
mov
dec
pop
add
cmp
and
sub
inc
fdivrs
xchg
add
jb
fdivl
loop
add
test
mov
and
add
xchg
sub
mov
mul
sub
fdivrs
rorb
aaa
pushf
adc
into
shll
push
add
dec
jg
lcall
jle
xchg
pop
lahf
cmp
and
sahf
loopne
inc
add
jo
pusha
xlat
dec
add
jae
xorb
js
ret
sub
mov
out
outsb
pop
push
add
adc
and
push
push
dec
sahf
mov
addb
loop
cmp
add
xlat
std
out
addb
xchg
fcmovbe
xor
das
mov
pusha
subl
aam
xor
divl
cld
stc
add
inc
pop
pop
fimull
shl
cltd
add
sbb
jl
push
xor
push
jmp
les
daa
testb
js
das
shlb
or
imul
add
jne
or
sbb
push
mov
jo
push
pop
call
xor
fwait
pop
ljmp
lock
dec
add
cmp
aas
mov
add
sub
add
mov
inc
addb
sbb
movsl
dec
jb
fcoml
mov
mov
data16
inc
pop
inc
push
pusha
and
scas
ds
pop
sbb
jnp
add
shl
cwtl
cmp
adc
lret
add
push
fnstsw
add
negl
clc
dec
add
or
xchg
add
enter
inc
jp
sub
dec
popf
mov
cmp
fldcw
fwait
add
jnp
imul
repz
and
fadds
pop
popl
and
insb
mov
aam
add
movl
push
in
add
mov
ret
xchg
sbb
ret
adc
sub
ljmp
xchg
or
inc
mov
add
or
mov
orl
jmp
mov
jle
add
int
jge
xchg
inc
push
or
pop
xchg
add
int3
adc
popa
add
mov
sub
mov
cmp
adc
sub
lret
mov
inc
pusha
or
inc
test
daa
mov
mov
sahf
push
iret
adc
pop
mov
mov
ret
xor
or
lods
add
testl
dec
clc
add
stc
out
add
in
ds
in
sti
add
fcmovnu
iretw
xorl
aad
rep
cmp
std
insl
icebp
jle
pop
add
add
xor
das
jmp
push
mov
sub
clc
add
xchg
sahf
mov
daa
outsl
add
data16
pop
in
outsl
cmp
push
addr16
mov
nop
daa
push
or
mov
add
xor
movsb
mov
cmp
pop
imul
fdivl
or
stc
xor
cmp
movsl
sub
sub
add
out
cmp
xor
inc
das
sbb
add
leave
add
cmp
enter
fildl
stc
jne
add
sbb
gs
aaa
cmp
add
pop
sub
adc
mov
inc
enter
mov
dec
clc
out
mov
shlb
mov
pop
das
lock
xor
adc
jne
cltd
add
inc
add
add
mov
sbb
push
jmp
loope
adcb
add
cmp
xor
rolb
pop
andl
addl
sub
rclb
cli
std
ja
sahf
and
out
hlt
or
in
mov
add
xlat
or
push
clc
dec
cmp
repnz
lods
std
adc
imul
pusha
pushf
fisubrs
cli
dec
repnz
popl
std
mov
fbld
mov
dec
addl
dec
mov
mov
test
aad
rcr
pop
mov
xchg
call
cmp
jne
sar
rcl
add
jge
ss
mov
sbbb
mov
sti
sbb
jge
and
push
mov
add
jl
xorb
bound
mov
dec
jge
xor
xor
out
stos
add
inc
cmpsl
push
insb
push
jb
add
push
mov
mul
cmp
dec
scas
add
inc
push
sarb
popl
or
mov
dec
cmp
arpl
leave
push
ja
add
xor
and
xor
popf
fbstp
shrb
cmp
add
fdivl
sahf
scas
jo
lret
pop
xchg
out
inc
mov
add
sbb
cld
pop
push
inc
rcrb
cmp
xorb
xor
daa
dec
xchg
sub
push
dec
jl
mov
pop
leave
sarl
dec
mov
push
inc
loope
hlt
outsb
roll
cs
test
scas
fld1
push
aam
sbb
repnz
or
inc
sbb
pusha
mov
cmp
dec
lds
inc
add
imul
push
fstps
ja
icebp
sub
pop
mov
nop
das
sbb
fwait
xchg
mov
fiaddl
cmp
fisttpll
les
or
cmp
sbb
push
add
sub
pusha
insl
fwait
roll
cmp
jae
xchg
pop
push
andb
fnstenv
push
push
fcomps
xor
test
cli
xor
xor
cwtl
clc
out
xchg
ret
add
and
jns
xlat
cmp
sbb
jl
mov
js
sbb
inc
pusha
inc
sub
pop
cmp
mov
fldl
or
pop
add
mov
ja
adc
test
or
xlat
jl
pop
inc
fimuls
add
push
pop
std
xor
push
lea
mov
inc
inc
cmp
nop
cmp
xor
fmull
loope
pop
pusha
sub
pop
fstpt
sbb
jns
jnp
add
push
imul
mov
mov
lock
pop
pop
add
sahf
jg
adc
xchg
cmp
mov
mov
scas
addb
adc
stc
stos
shr
add
sbb
enter
and
pop
cltd
pushf
mov
mov
movsb
or
inc
sub
xchg
fildl
sarl
fxam
ljmp
cmp
fiaddl
jge
add
je
push
add
dec
aad
mov
cli
sbb
adc
loopne
imul
iret
cld
inc
add
popl
mov
test
push
mov
repnz
jno
rorb
movsl
cli
enter
gs
sub
mov
add
add
inc
shll
dec
test
dec
and
xlat
push
adc
into
mov
add
or
dec
pushf
lahf
mov
andb
or
xor
cmp
or
cld
and
or
in
push
xchg
xchg
mov
mov
inc
dec
nop
pop
pusha
nop
pop
xor
gs
shr
add
loopne
dec
jb
sub
mov
out
adc
xchg
add
sbb
add
inc
out
dec
das
xchg
or
lock
xor
loop
mov
mov
outsb
scas
add
leave
add
jl
xor
dec
sub
or
lods
adc
mov
fstps
ja
icebp
adc
xchg
cld
lods
jno
add
dec
pusha
addr16
das
cmp
shrb
sub
sub
insl
cmpb
or
dec
outsl
mov
pmuludq
divb
push
lret
sbb
xchg
inc
xor
xchg
fxch
lods
add
lret
sbb
in
lcall
mov
xchg
pop
mov
add
xor
add
and
add
pop
dec
mov
add
cli
inc
lods
add
in
inc
faddl
pop
pop
add
push
lret
mov
push
jns
add
or
fcomps
push
arpl
fbstp
or
sub
in
mov
xor
clc
mov
popa
push
idivb
pop
adcb
pop
sti
push
add
aaa
popf
nop
xchg
out
xor
dec
cltd
repnz
add
enter
jge
dec
and
shlb
add
dec
fucom
and
rsm
xor
shl
lock
dec
mov
and
andl
lods
das
mov
jo
xorb
sbb
adc
push
dec
cmpsl
lock
xchg
call
mov
push
pop
movsl
mov
cmp
and
mov
data16
in
shrl
add
pop
jecxz
jns
sub
das
add
lods
inc
int
and
sub
popa
pop
lds
cltd
cmp
lret
divb
das
and
add
xchg
xchg
iret
pop
aam
sti
pop
cmp
pusha
lods
stos
out
push
mov
sahf
pop
add
fcompl
and
mov
movsb
and
xor
dec
add
or
cld
ss
sbb
sahf
lret
scas
in
add
pop
jns
rcrb
add
sbb
push
jns
xor
test
cld
xchg
rolb
neg
sbb
sub
cli
add
xchg
in
in
fsubrs
push
push
xchg
ret
add
cmp
sub
cwtl
sbb
imulb
divl
cmpsb
in
cwtl
nop
iret
ffreep
add
ds
test
add
dec
jg
aam
xchg
fsubs
in
adc
inc
mov
enter
inc
xchg
add
pop
fisubs
inc
js
lret
and
or
ret
add
push
xor
clc
mov
mov
xchg
lods
fcoml
popw
add
pop
xchg
mov
mov
cmp
inc
xchg
orl
and
add
add
jbe
xchg
push
repnz
scas
xor
jp
cmpsb
mov
push
icebp
adc
mov
push
aad
popa
sub
int
adc
mov
add
inc
push
out
pop
mov
xchg
sbb
push
xor
push
or
mov
mov
loope
xor
pop
sub
aam
mov
pop
adc
data16
lahf
mov
jp
cwtl
pop
xlat
xchg
add
test
lods
xor
sarb
jecxz
sub
xchg
push
cli
js
pop
pop
addb
push
inc
xchg
es
cmp
push
lea
push
mov
adc
add
jmp
xor
xchg
jmp
iret
inc
jge
out
xchg
add
xor
fstps
push
or
enter
add
test
jns
lods
add
mov
adc
push
gs
or
adc
pop
mov
xor
ja
add
es
in
lds
nop
add
test
xor
push
stos
add
ljmp
orl
and
dec
jb
rclb
int3
push
sbb
out
sbb
xorl
test
test
push
jno
cs
out
xlat
shlb
mov
mov
cwtl
lock
sets
mov
add
clc
xorb
inc
int3
fdivrs
add
mov
mov
add
dec
pop
add
push
setg
daa
xchg
dec
subb
ja
cmp
rolb
xorb
clc
add
jno
cmc
shl
dec
nop
mov
sbb
cmp
cmp
mov
in
mov
jae
nop
push
pop
gs
lods
dec
popa
fs
ja
dec
mov
push
push
push
outsl
push
sub
sub
inc
fdiv
test
cwtl
mov
rorb
push
das
cmp
es
into
sbb
sub
jb
pop
cmp
inc
in
inc
add
dec
jns
dec
xchg
xor
test
jne
int3
mov
cmc
or
jb
mov
imul
hlt
adc
sbb
inc
std
adc
scas
mov
les
mov
repz
popf
mov
xchg
add
sub
dec
cwtl
loope
in
jl
aas
das
sub
sub
mov
or
and
sbb
pusha
shlb
data16
rclb
lret
in
adc
lock
pop
fwait
mov
and
scas
andb
add
ss
lods
sub
out
inc
inc
fcomps
dec
das
add
jl
lods
add
jp
xor
test
adc
mov
cwtl
add
inc
fwait
pop
inc
pop
stc
mov
lock
shlb
aam
test
jno
sarb
cmp
inc
mov
clc
adc
shrl
loopne
mov
cmc
pushf
orl
and
or
add
dec
pop
fldcw
jecxz
add
xchg
repz
inc
inc
jl
hlt
sbb
jg
pop
call
push
lock
pop
arpl
mov
add
adc
mov
addb
push
lahf
clc
push
and
movd
jmp
and
and
xor
xor
enter
das
repz
dec
xor
cmp
adc
dec
mov
inc
jbe
pushf
int3
mov
insb
clc
push
movsl
xor
pushf
pop
inc
sub
xor
lock
pop
sub
cmp
outsb
sub
cwtl
sub
inc
jns
mov
ja
nop
sub
add
ffree
bound
hlt
adc
jae
jb
cld
std
jbe
sbb
mov
jp
xor
aas
adc
mov
and
mov
add
cmp
aam
dec
leave
and
not
movsb
inc
mov
arpl
add
cmp
fwait
cld
push
add
push
testb
inc
out
inc
xor
add
scas
sbb
dec
inc
addr16
sbb
stos
push
mov
mov
push
or
das
dec
shlb
loope
popf
lret
pusha
frstor
jae
pop
add
sbb
shrl
add
cs
std
inc
or
pop
sub
push
sub
pop
jns
mov
inc
mov
arpl
or
push
mov
ficoms
add
sub
push
mov
mov
in
lret
jae
add
cwtl
leave
negb
rolb
sub
and
cmpsl
rolb
test
xlat
cmp
popa
pop
call
jp
leave
clc
shrl
xor
ljmp
push
aaa
xchg
mov
mov
push
psadbw
fs
stos
add
add
pop
dec
test
test
loope
and
rcr
jecxz
test
add
mov
repnz
stos
sbb
add
and
sub
inc
scas
scas
bound
add
mov
jle
pop
adc
jmp
aam
add
test
add
loopne
mov
dec
pop
aad
or
scas
add
jle
dec
pop
outsb
xchg
pop
and
dec
mov
stos
jecxz
test
push
enter
add
or
gs
int3
push
sbb
shl
push
add
bound
or
xor
jbe
stc
ds
dec
sbb
cld
add
fistl
hlt
or
gs
push
call
mov
or
lcall
mov
fcmovb
aad
push
in
pop
in
and
pop
ss
push
sbb
jns
add
xor
xchg
ret
add
mov
xorb
mov
subl
sar
shll
loop
std
fistpll
rcr
stc
push
addl
cmp
xlat
lods
jle
xchg
int3
nop
fcoms
push
add
inc
sahf
xor
dec
fisubl
lret
mov
loope
pop
js
outsb
or
cwtl
mov
add
mov
stos
add
pushf
test
fldenv
pop
add
sti
subb
dec
cmpsb
xchg
cmpsl
lea
mov
add
mov
add
inc
push
or
std
mov
lahf
enter
and
roll
dec
imul
add
xchg
movsb
lret
idivb
sub
sbb
add
iret
nop
pusha
das
jecxz
add
add
ret
pop
cmp
xchg
outsl
dec
popa
xchg
adc
addb
js
mov
jmp
sbb
es
int3
sbb
fstpl
lret
test
pushf
lret
sbb
mov
add
hlt
leave
mov
pop
jbe
add
fiaddl
rsm
outsl
jnp
rorb
ja
cmp
andb
cmp
lret
mov
xor
fwait
push
pop
or
ja
or
sub
or
movsw
push
loop
loopne
and
cltd
adc
js
orl
dec
aam
mov
or
mov
sub
ret
mov
popf
hlt
out
and
cs
jo
shl
adc
sub
xchg
xor
and
add
nop
roll
push
sbb
push
cmp
push
pmulhuw
faddl
sub
inc
int3
pop
push
add
daa
rorb
xor
cld
inc
arpl
add
stc
shlb
mov
jns
and
pop
iret
jnp
add
xor
add
in
xchg
jbe
ljmp
push
hlt
addb
popa
cltd
mov
pop
in
out
jae
mov
loop
add
lret
push
mov
lahf
movsb
out
push
subb
mov
orb
aas
push
jb
imul
sbb
ret
call
outsb
mov
in
adc
test
iret
mov
add
lret
lahf
jmp
bound
xchg
gs
mov
cmp
mov
jbe
jnp
dec
and
xor
xchg
test
rorb
std
aaa
add
push
mov
add
pop
inc
popa
pop
cmp
or
rcrl
mov
adc
aam
lahf
jne
inc
add
mov
ror
mov
mov
icebp
shrl
orb
and
cmp
ds
loop
mov
xchg
fwait
pop
adc
add
xchg
std
fistl
adcl
jbe
pop
dec
mov
sbb
jp
fcomps
mov
pusha
ret
and
pop
sub
mov
adc
xchg
scas
add
outsl
shlb
pop
add
and
jecxz
mov
add
loop
ss
ret
push
inc
xchg
movl
imul
std
add
shrb
lcall
daa
push
jne
lods
sti
lahf
add
inc
push
push
pop
jns
jl,pn
add
add
insb
outsl
dec
mov
add
xor
jns
add
add
jl
mov
adc
xchg
dec
outsl
add
or
adc
pop
orl
or
mov
insb
mov
pusha
les
mov
stos
je
xor
mov
push
movsl
add
ljmp
mov
or
sbb
lock
mov
cmp
mov
mov
ficomps
push
cmp
add
cs
pop
xor
loope
mov
jmp
mov
and
inc
jg
add
jae
add
test
sbb
mov
sbbb
add
cmp
sarb
add
outsl
scas
and
add
imul
sti
icebp
enter
lds
repz
inc
adc
outsl
aaa
mov
jns
add
inc
adc
sub
sub
sbb
add
aad
lods
add
dec
jo
popa
lea
push
cmp
shll
add
sub
mov
add
xadd
sub
rolb
ret
add
push
push
pop
add
popa
and
addl
gs
fwait
lea
and
enter
mov
push
xor
out
ret
xor
enter
add
mov
and
inc
in
popl
out
push
mov
sbb
xor
cmp
loopne
xor
jge
add
xchg
clc
cmc
mov
jne
iret
cli
out
pop
xor
into
and
shll
add
out
lea
push
mov
shrl
add
xor
jmp
das
addl
addr16
jns
inc
push
filds
push
and
sbb
repz
out
out
push
in
loop
dec
test
data16
lcall
filds
pop
xor
cmp
inc
add
inc
rcll
push
lret
jl
in
pop
sub
add
popf
addl
jne
in
or
movsb
xchg
test
das
jbe
add
push
ljmp
jge
push
sbb
xchg
test
xorb
inc
xchg
xchg
push
cmp
pop
ds
mov
inc
mov
aaa
jae
xlat
push
leave
add
pop
fs
out
adc
int3
popa
js
jp
inc
clc
xchg
mov
mov
add
outsl
addr16
ja
add
xchg
adc
nop
adcb
or
push
outsl
movsl
sbb
sbb
dec
xchg
insl
lcall
sbb
and
cs
jb
rorb
adcl
mov
add
sbb
cmpsl
imul
inc
sub
cli
filds
mov
hlt
xchg
sbbl
jmp
jbe
clc
jg
dec
test
iret
aam
mov
inc
mov
in
imul
daa
dec
sbb
test
adc
xlat
xor
daa
sub
add
jg
mov
mov
scas
pop
ret
outsb
daa
lea
mov
es
out
inc
shrb
sbb
jo
outsb
add
test
add
cwtl
xor
sbb
cmpsl
lret
add
cmc
andl
adc
xor
lret
cmp
sbb
inc
push
xchg
orb
out
std
pop
add
sub
out
push
loope
rcl
cwtl
outsb
push
das
add
imul
xchg
cli
pop
pop
inc
je
add
mov
xor
outsb
inc
stos
add
ja
aad
idiv
cmp
leave
or
add
jbe
xchg
xchg
movlps
es
ljmp
pop
mov
imul
lcall
adc
pop
loopne
jg
add
jbe
mov
mov
stos
test
je
or
std
pop
push
cmp
popf
daa
add
js
out
cmp
mov
add
pop
mov
adc
lret
add
gs
shll
xlat
push
dec
scas
arpl
push
add
sub
inc
fdivr
sbb
aas
or
add
xchg
fistps
cmp
add
xchg
fnstcw
add
xor
add
loopne
add
inc
sahf
adc
lods
push
xor
insb
sub
cmpsl
incb
or
ja
fildl
sub
mov
adc
shll
or
xchg
test
lret
nop
xchg
pop
dec
xor
leave
sarb
add
adc
int
rclb
outsl
shlb
sbb
cmp
adc
xchg
shl
xor
add
xchg
push
and
pop
add
jne
outsl
dec
cmpxchg
jbe
mov
mov
push
insb
lcall
popa
cmc
inc
mov
cs
add
lret
fbld
les
imul
shlb
loope
stc
adc
in
add
scas
lods
enter
jle
xchg
push
add
inc
test
test
cld
cltd
add
aam
mov
dec
cmp
popf
fdivrs
pop
add
movl
addr16
dec
add
pop
icebp
mov
jmp
fsubrl
push
pop
add
fldlg2
out
cmp
cwtl
leave
scas
ljmp
lock
pushf
aad
mov
test
leave
xor
mov
add
fadds
xchg
adc
das
pop
or
and
cld
mov
je
add
mov
push
fnstsw
jl
int
sub
mov
add
les
inc
inc
dec
dec
cmp
inc
xchg
scas
adc
add
push
aad
inc
ds
push
int
mov
xor
lret
jmp
mov
sub
sbb
enter
jge
call
sbb
mov
les
nop
jb
and
cld
add
sbb
push
xchg
dec
mov
and
es
lcall
test
sbb
ret
push
pusha
add
jo
repz
flds
mov
ljmp
rcrb
add
or
jbe
add
dec
mov
test
push
addb
xchg
ljmp
call
test
and
andb
dec
and
xchg
fnstcw
mov
lahf
lods
xor
js
mov
fidivrl
jle
add
push
test
cli
push
add
test
aad
lds
into
push
jnp
add
ret
dec
mov
inc
or
jo
add
xchg
lods
inc
mov
mov
cmp
cmpb
mov
dec
dec
sti
add
aad
xchg
mov
pop
push
add
jmp
shlb
shll
mov
ljmp
lahf
cmp
mov
mov
fidivrs
jp
int
mov
sbbl
popa
movsl
push
adc
push
aas
int3
adc
cmp
xorb
pop
nop
in
sub
cwtl
outsl
sbb
xchg
sbb
push
xor
pusha
ja
fwait
push
mov
sub
pop
mov
add
shll
add
adcl
je
sahf
adc
jle
mov
mov
scas
sbb
out
sbb
or
and
subb
out
xor
stc
int3
push
add
push
cmp
roll
mov
out
jmp
daa
add
jecxz
push
mov
sbb
cmp
and
add
push
andl
and
push
add
xor
xlat
add
mov
add
lds
je
mov
xor
and
mov
int3
rcrl
lds
das
aas
pop
call
insb
mov
adc
cltd
push
fadd
es
scas
cmp
aad
bnd
cmp
jle
push
add
sbb
daa
add
shlb
repnz
pop
popf
loopne
inc
xor
in
jl
add
addr16
in
mov
mov
test
fcmovnbe
es
mov
insl
ds
add
lods
adc
mov
dec
and
dec
and
ljmp
jb
xchg
xchg
jnp
add
mov
roll
jle
lret
aad
testb
out
add
mov
adc
xchg
pop
cmp
push
iret
add
mov
dec
cmp
add
jo
das
jmp
jl
cmpsb
xor
fs
inc
aas
int3
pop
sbb
addl
dec
adc
add
add
xor
add
pop
or
mov
mov
add
int
add
fs
adc
clc
jns
jle
paddq
dec
mov
negl
pop
cmpsb
pop
lea
push
pop
push
lock
ja
cld
mov
push
fstps
sbb
push
cld
add
loope
iret
sbbb
je
fwait
sbbl
out
pop
push
push
out
in
es
jne
cmp
and
pop
ljmp
js
hlt
and
fists
mov
ficoml
imul
add
jo
cmp
adc
cmp
xor
testl
adc
xchg
cld
std
ficompl
imul
shl
add
jg
adc
mul
xchg
mov
in
ret
cmpb
mull
js
pushf
pop
sbb
pop
mov
mul
sub
pop
in
cmpb
out
mov
aaa
pop
fidivl
rorl
inc
mov
lea
add
repz
xchg
and
add
adc
loope
stos
inc
xor
and
and
clc
sbb
add
push
add
cmpsb
jecxz
shl
ja
add
add
cmp
push
mov
mov
rclb
std
add
je
add
xor
cld
push
mov
sub
insl
pop
int
mov
pop
push
xchg
in
and
ja
pop
xchg
data16
fcompl
jl
scas
pop
out
mov
loopne
pop
in
loope
inc
mov
push
sub
add
roll
fildl
push
movsl
dec
sti
rorb
fcompl
sub
mov
cmp
negl
sbb
nop
dec
shrb
jb
cmp
test
test
sarb
mov
inc
or
sub
test
jl
sbb
iret
jb
out
or
dec
jns
jp
cwtl
add
or
pop
lcall
stos
repnz
pop
insb
je
out
mov
movb
lea
loopne
cmp
push
pop
pusha
mov
pop
add
sbb
lahf
cwtl
pop
xchg
push
out
loopne
jecxz
sbb
inc
idivb
sbb
push
inc
jnp
movsb
mov
ljmp
sbb
lock
inc
mov
scas
std
aad
xlat
mov
fsub
push
sbb
push
pop
add
lods
mov
push
xchg
mov
push
pop
iret
jns
pop
xor
aam
xor
cmp
ror
adc
mov
pop
mov
sub
aam
xorb
jne
hlt
fcomp
cli
lds
aas
outsl
cmpsb
add
std
sub
mov
pop
lahf
fstpt
gs
mov
int3
or
or
cmc
fwait
addl
add
cld
movsb
mov
loope
pusha
mov
cmp
push
pop
aam
pop
pop
stc
popa
das
push
std
mov
iret
shrb
add
ret
or
dec
fs
jae
js
insb
faddl
add
add
pop
jle
and
pop
ds
add
ret
mov
das
les
subb
jge
aas
dec
fadd
rol
push
jp
in
mov
push
inc
jp
xlat
mov
or
loop
cli
cmp
add
or
dec
mov
inc
je
and
mov
add
int3
adc
push
and
andb
dec
inc
addb
faddl
pop
lds
je
add
cmp
int3
in
sbb
test
lea
sti
mov
arpl
pop
cwtl
clc
add
negb
ret
movsl
pusha
sbb
add
ds
dec
pop
adc
jnp
test
xlat
or
shr
inc
sub
stos
pop
inc
bound
aaa
and
rol
pop
cmpsb
cmc
add
jle
lods
dec
add
add
das
popf
cmp
rcrb
enter
xchg
pop
sub
push
add
cmp
cmp
loop
daa
mov
aas
ret
and
add
pop
add
imul
lock
ret
adc
xchg
pop
fs
testl
push
loopne
movsb
sbbb
add
es
push
mov
orb
js
inc
mov
sub
pop
pop
add
xchg
mov
int
push
add
or
mov
iret
mov
mov
push
cmp
cmp
mov
add
dec
mull
jp
pop
xor
and
jge
cmp
and
cmp
mov
icebp
lock
dec
mov
mov
adc
mov
in
ja
push
enter
sbb
mov
mov
outsl
mov
shll
lods
adc
ret
adc
mov
cmp
dec
out
jp
pop
pop
stos
push
mov
in
pop
cmp
jle
pusha
insb
shrb
mov
test
or
out
lea
pusha
dec
cwtl
call
inc
sub
jno
in
cs
and
add
jns
and
repnz
orb
nop
test
sarb
inc
cld
push
stos
cmpsl
dec
sub
js
lock
jb
xor
mov
fs
mov
xchg
dec
ss
push
and
les
mov
inc
mov
add
lea
add
sbb
mov
mov
daa
add
ljmp
pop
cmp
test
inc
cld
push
fidivs
shlb
cmc
sub
fwait
dec
xchg
dec
mov
repz
xchg
sbb
mov
icebp
cltd
sbb
rolb
mov
pop
das
xor
xchg
fs
out
jo
test
sbb
fisubl
xchg
xor
xchg
cld
std
push
xorb
xchg
aam
xchg
arpl
add
or
cmp
sub
into
mov
adc
ja
pop
and
add
out
jg
add
aas
adc
das
sub
adc
add
xor
and
cmpb
negb
aam
arpl
push
movsl
mov
das
xchg
scas
cwtl
call
xor
rolb
sbb
pop
mov
xor
cwtl
flds
xor
push
sbb
cmpsl
call
js
pop
mov
fisubs
mov
and
add
lret
bound
add
out
mov
cmc
inc
dec
sub
jne
imul
add
mov
add
imul
pop
fildll
pop
mov
xchg
fwait
jmp
mov
roll
push
ret
xchg
mov
test
cld
fmull
lret
test
or
fwait
jb
pop
adc
addb
sbb
std
fstpl
jg
xor
push
ja
in
imul
scas
es
pop
inc
movsb
dec
movsl
add
add
sub
icebp
pop
nop
das
addl
sub
rclb
add
shll
push
add
pop
stos
cmp
xor
xchg
xchg
mov
out
movntq
add
and
movsl
adc
cwtl
sbb
movsb
addr16
sti
cld
je
loopne
sbb
mov
insb
cwtl
mov
jmp
pop
mov
and
scas
adc
pop
cwtl
inc
adc
popf
mov
clc
sbbb
sahf
notb
push
and
mov
test
inc
or
sbb
pop
insl
xorl
jb
add
jle
dec
movsb
add
jecxz
xchg
scas
ljmp
fs
test
mov
cli
imul
jle
dec
sub
cmpsl
or
mov
rolb
mov
shlb
loopne
mov
call
popf
mov
shl
cmp
inc
dec
loop
add
insb
dec
sarb
mov
lahf
pop
movsl
in
cld
pop
xchg
scas
aaa
sbb
ds
sbb
mov
add
mov
fstpl
pop
dec
xor
sahf
adc
jl
mov
faddl
arpl
or
add
mov
lods
jo
xor
xchg
cwtl
cld
dec
in
test
test
sub
sbb
sbb
add
jno
pop
nop
jo
dec
insb
popf
sub
decl
xchg
inc
or
sub
mov
dec
adc
add
mov
stos
mov
adc
fimull
cmp
add
adc
push
shrb
aas
stos
add
add
xchg
xchg
dec
repnz
mov
int3
mov
mov
inc
xor
push
stc
add
xchg
mov
pop
mov
or
push
jb
fadds
out
lret
fs
ret
jge
enter
mov
jmp
dec
lahf
xor
jno
movsl
mov
sbb
push
sub
adc
pop
dec
faddl
and
mov
test
sahf
popa
xlat
mov
mov
mov
pushf
xchg
jecxz
daa
sub
in
jg
js
in
push
add
cld
loop
xor
je
and
negb
jnp
loopne
inc
hlt
ret
push
int3
ja
dec
or
inc
lock
xor
pop
mov
insl
jmp
mov
and
pop
dec
out
pop
add
bound
or
out
in
add
ret
js
add
mov
add
cwtl
es
sarb
fdivl
and
pop
push
pop
nop
mov
dec
xor
ss
dec
jne
pop
fdivrp
adc
add
test
popa
add
ds
fdivs
pop
cltd
push
and
pop
jl
or
add
insl
xchg
insb
bound
std
cwtl
pop
add
xor
nop
pop
dec
pop
pusha
int3
clc
push
int
adc
xorl
stos
enter
push
ja
rol
pop
adc
add
add
cltd
pushf
xchg
jno
or
sub
fldt
add
xchg
jg
add
popa
push
hlt
add
pop
and
cmpsl
sti
test
in
mov
incb
movsb
rcrl
test
sbb
popw
das
push
repnz
mov
push
xlat
mov
mov
ljmp
shll
repnz
clc
int3
out
aaa
pop
popa
shrb
add
stos
insb
mov
pop
cmc
mov
dec
and
mov
testl
bnd
pop
pop
pop
jbe
add
loopne
into
inc
mov
cmp
outsl
pushf
mov
cmp
fcomip
jo
cmpb
call
push
push
ja
push
push
mov
mov
push
dec
mov
test
add
repz
mov
mov
insb
jo
sub
dec
int
sub
aad
test
fists
or
adc
dec
sbb
cwtl
xor
xchg
sbb
clc
inc
mov
lods
add
pop
push
or
iret
pop
or
dec
loopne
jo
lret
xor
mov
xchg
loop
mov
fdivrs
jge
add
or
add
dec
push
xor
add
outsl
mov
xor
and
and
out
movsb
mov
sbb
mov
add
push
push
enter
add
dec
pop
sbb
mov
jb
mov
add
xchg
ja
out
scas
add
mov
sub
jmp
xchg
hlt
jo
sub
fs
and
and
lret
rcr
adc
jmp
popa
sub
sub
mov
leave
popf
cmpsl
and
aam
add
or
out
pop
call
lock
add
push
imul
les
jns
adc
jae
add
sub
inc
movsl
push
mov
and
jns
push
xchg
push
in
pushf
xor
ss
cmpb
push
ltr
xchg
movl
dec
push
test
cmpsb
insl
xchg
jl
jae
das
mov
add
outsb
ret
xchg
add
sar
fidivs
ret
clc
cmp
push
addr16
aad
stos
pop
push
pop
adcb
inc
into
add
outsb
shll
mov
dec
lock
daa
add
jb
jno
cld
push
pop
xchg
fsub
cmp
scas
push
out
or
add
pop
into
mov
imul
sub
loopne
add
inc
add
and
mov
in
faddl
xchg
adc
fsubl
cmpsb
or
adcb
mov
cmp
inc
andb
mov
aas
sub
addb
lahf
pop
ficoms
add
sarl
leave
jg
add
xor
das
add
pop
jp
push
stos
js
pop
ficoms
stc
rcrb
scas
xorb
js
jecxz
outsb
xchg
fidivl
inc
out
sbb
add
or
outsl
cmp
js
or
popa
mov
orb
or
mov
add
jns
pop
aad
shr
cwtl
pusha
add
inc
cmpsb
sub
scas
cmpl
pop
fsubs
jne
out
ss
pop
lar
out
inc
jle
or
out
fiaddl
out
ja
add
scas
fcomps
add
es
cmp
cmp
add
sub
mov
add
cmp
test
lods
fidivrl
xchg
mov
rcrb
roll
outsl
push
and
loop
int3
std
imul
mov
and
xor
or
data16
push
jmp
xor
push
aad
int
arpl
push
cmp
mov
sub
jmp
or
loop
pop
int3
cltd
sbb
lret
scas
push
shl
xor
fistl
int3
into
mull
add
mov
dec
movsl
pop
loopne
je
sets
inc
sbb
shrl
jns
mov
rcl
xchg
cmp
mov
xor
adc
pushl
and
push
sub
push
jnp
sbb
xchg
or
add
xor
dec
lret
insl
sub
mov
dec
in
cmp
jae
std
jecxz
add
fnstcw
cli
sbb
out
daa
test
ret
cltd
cmc
mov
or
xchg
ljmp
push
or
lods
mov
or
push
sbbb
add
jns
xor
mov
test
nop
sbb
push
mov
or
add
xor
or
in
sub
clc
add
mov
and
cs
cmp
negb
jle
les
loope
popf
fcmovb
subb
jle
pop
mov
push
jo,pt
orl
jp
mov
insb
sbbb
sbb
jno
pop
lock
jg
xor
das
dec
push
scas
mov
mov
xorl
dec
add
push
rclb
xor
iret
xor
fstp
stc
in
xor
lret
lock
add
jbe
rcrb
add
aas
insb
add
sbbb
lods
xchg
add
jle
pusha
mov
fistps
add
pop
aad
outsl
fstpl
add
pop
add
add
pop
sbb
leave
jg
pop
fisubrs
add
or
jo
jl
add
add
add
jne
jbe
add
repz
push
sbb
push
sub
shll
bnd
push
cmp
pusha
fistpll
or
xchg
sbb
push
mov
xchg
mov
inc
lret
in
mov
subl
mov
fsub
rclb
jle
xor
add
adc
adc
push
jo
pusha
loope
add
xchg
dec
lea
ljmp
xor
out
push
aam
leave
and
sar
loopne
or
add
in
test
pop
mov
xchg
xchg
bound
add
fucomip
jbe
loopne
inc
cs
cmpsb
sbb
jo
nop
cli
cmp
add
repnz
sbb
xor
add
push
lret
jmp
ljmp
jecxz
dec
sarl
pusha
int3
mov
popf
xchg
push
icebp
hlt
mov
dec
mov
sub
push
call
xchg
xchg
sti
in
mov
mov
mov
mov
pop
leave
and
add
dec
bound
test
cld
xor
std
mov
xor
shrl
movsl
mov
int3
push
rorb
add
xor
shll
mov
add
mov
stc
int
stos
mov
jno
aam
fiaddl
cmpsb
xchg
es
nop
and
pop
sub
add
in
scas
cmpsl
and
adc
adc
xchg
lods
cmp
sub
cli
adc
shll
imul
jne
add
subb
add
addb
pop
or
sbb
mov
cmp
mov
or
call
sbb
cmpsl
cltd
jno
rorb
rcr
scas
add
in
mov
sbb
clc
lahf
or
fs
outsl
add
arpl
nopl
cs
inc
inc
std
and
and
pusha
das
sarb
sub
mov
lahf
pop
add
add
dec
mov
add
addb
fwait
cli
arpl
dec
nop/reserved
dec
nop
xchg
mov
or
dec
and
std
xchg
lods
cli
inc
popa
and
xchg
xorb
rolb
mov
ss
sbb
popf
mov
xchg
lock
push
stc
mov
pushf
and
push
push
cmp
mov
mov
pop
cli
add
dec
ret
cmp
test
sbb
mov
mov
or
or
mov
add
fidivrs
scas
stos
add
mov
in
sbb
ds
je
add
dec
outsl
not
cmp
add
push
mov
pop
imul
fs
or
adc
lds
inc
mov
fiadds
or
in
outsb
aad
add
sub
ret
call
sub
jo
xchg
cmpb
sub
mov
out
add
and
xor
mov
fnstsw
cmp
mov
xor
aad
movb
bound
adc
cmpb
xor
inc
add
rolb
subb
inc
scas
xchg
cmp
sub
mov
or
mov
xchg
aaa
sbb
cs
leave
push
loopne
aad
shll
dec
outsb
xchg
int3
cmp
push
add
mov
fdivr
inc
testl
cld
xchg
jne
jle
add
or
sbb
popa
jbe
es
mov
lock
sbb
jae
dec
int
and
stos
in
out
sarb
repnz
lret
popa
dec
cmp
roll
inc
cmp
mov
push
and
push
pusha
pop
enter
fisubs
sbb
mov
mov
stc
in
add
or
sub
and
adc
frstor
cld
ret
adc
add
xchg
xlat
mov
cmp
subb
out
out
outsb
and
aam
xchg
jl
and
lods
add
pop
add
xlat
inc
das
fwait
inc
jns
jae
pop
xor
daa
es
nop
out
lods
add
js
jl
pop
jmp
enter
dec
lret
add
lock
adc
pop
add
sub
inc
or
mov
push
xchg
pop
mov
jecxz
or
pusha
js
mov
xor
and
fisubrs
dec
movsb
adcb
and
out
movb
cli
xor
adcb
inc
xchg
pop
jne
pop
push
ds
in
sbb
test
int
dec
lret
imul
out
jl
or
insb
or
shlb
jp
data16
xor
bound
in
mov
or
mov
xchg
xor
mov
loop
mov
sbb
xchg
test
outsb
push
push
push
jbe
lret
sti
xchg
cmc
add
xchg
pop
rsm
insb
sub
push
mov
mov
add
sbb
push
dec
inc
mov
sbb
inc
sbb
lea
and
cmpsb
push
add
das
insb
gs
jno
pusha
mov
shlb
mov
and
jle
pop
cmp
lret
addb
cmp
lods
push
cmpb
loopne
push
jb
add
popa
cmpsl
addb
mov
xor
inc
movsl
daa
shll
lods
add
add
aad
mov
inc
loopne
cmovb
jmp
pusha
std
stc
testl
jmp
xor
xor
fildl
icebp
add
inc
sub
sub
addb
push
scas
add
inc
push
jl
outsb
mov
add
cmc
test
aaa
shrb
out
pop
add
jo
push
jmp
or
mov
jle
add
mov
xchg
shlb
mov
icebp
xor
call
sbbb
jno
dec
add
jge
push
add
jle
mov
jno
sbb
loope
outsl
add
mov
dec
out
add
inc
jg
in
std
mov
adc
outsl
inc
pop
scas
ds
sbb
aad
aaa
add
pushf
je
ljmp
add
xor
adc
icebp
repnz
scas
ds
add
incb
out
int3
pusha
sti
test
dec
pop
mov
or
ss
dec
mov
dec
and
xchg
cmp
scas
pop
pushf
inc
sbb
stc
ja
mov
pusha
leave
test
or
gs
arpl
add
cmc
into
test
shrb
adc
mov
ja
clc
and
add
iret
xor
add
lcall
sub
enter
dec
sbb
mov
add
aaa
xor
in
enter
mov
xor
jle
add
cli
mov
xchg
add
pop
int
sti
add
xor
jecxz
shll
push
jne
aam
or
in
xchg
pop
into
leave
xchg
push
mov
imul
out
mov
mov
inc
jle
add
or
add
outsb
fidivl
pop
lods
dec
test
add
xor
jmp
mov
adc
xchg
lds
fcomps
xchg
insl
mov
add
mov
ret
push
or
or
aam
mov
xchg
sub
fdivs
pop
inc
add
test
cld
xorl
aad
pop
xor
jmp
out
call
push
cltd
shr
cwtl
into
add
cli
es
mov
xchg
cmpsl
push
xor
vcvttpd2dqx
orl
stos
fdivrs
aas
sti
add
jl
popa
mov
testb
ret
add
push
orl
jo
adc
mov
ds
movsb
inc
call
mov
add
iret
pop
enter
dec
push
push
pop
adc
sbb
add
push
jns
enter
adc
into
loope
cmp
sub
mov
ljmp
sbb
and
lcall
pop
imul
add
push
cmp
or
enter
inc
jl
shlb
xchg
jb
push
sahf
sbb
cmpsb
add
push
push
in
shr
in
add
outsl
pusha
mov
cmp
cmp
dec
or
popa
int3
es
jne
add
pop
fiadds
jg
inc
add
lock
add
mov
inc
mov
jecxz
cwtl
cmp
xor
out
test
pop
std
adc
imul
sbb
enter
add
ljmp
enter
sahf
push
add
clc
sbb
addr16
xchg
dec
out
adc
and
int
das
mov
add
cmp
aad
add
adc
daa
ror
lock
add
jge
out
add
cmc
out
test
or
ljmp
sarl
push
pushw
dec
add
lret
popf
mov
mov
add
jns
addl
out
jecxz
aas
je
cmp
test
add
push
enter
add
scas
rcr
xlat
ret
or
xor
lods
dec
cmpsl
push
adc
sub
and
lret
and
push
or
mov
cli
rorb
adc
push
push
repz
out
loope
xorb
mov
gs
lcall
outsb
mov
jp
add
sarl
dec
test
add
jge
cmc
incl
add
cmp
clc
add
out
inc
pushf
decb
jg
sbb
add
jmp
mov
in
orb
sbb
add
int3
and
testb
jp
int
pop
dec
xchg
add
xor
dec
imul
popa
or
push
sbb
inc
add
call
mov
add
xor
add
mov
add
data16
xchg
fildl
and
jle
add
fdiv
cmp
push
cs
int3
xorl
sbb
hlt
mov
mov
lea
add
test
lahf
sbb
call
adcl
pop
sub
shlb
mov
les
add
int
inc
stc
out
mov
push
clc
mov
or
sahf
andl
add
jp
cwtl
mov
test
jmp
add
popa
addb
pop
xchg
push
xor
mov
mov
cmc
jo
mov
pop
xchg
mov
mov
push
das
int3
adc
mov
adc
jno
or
sbb
lret
xchg
and
adc
roll
mov
sbb
adc
sbb
dec
sahf
jne
xchg
pop
xchg
push
iret
jp
inc
inc
xor
mov
xor
mov
shrl
push
pop
das
std
cltd
add
add
dec
loope
test
mov
add
leave
imul
fcomps
ret
daa
outsl
or
js
mov
xor
loope
punpcklbw
icebp
ret
adc
rorl
add
test
mov
push
insl
fiaddl
jb
ror
test
xchg
test
cltd
cmp
sub
mov
adc
hlt
fisubrl
or
test
xorb
or
lahf
test
add
xchg
adc
lret
movb
sbb
add
adc
jne
sti
ljmp
out
and
mov
outsl
jl
jo
add
jmp
fisttpll
hlt
add
pop
pop
lock
dec
sbb
sbb
jns
mov
sbb
fnstenv
sub
or
cwtl
mov
ss
mul
int
icebp
mov
jnp
jecxz
loop
add
mov
std
pop
ss
pop
ljmp
outsl
pusha
add
and
ljmp
scas
jge
sub
test
daa
shlb
xchg
and
adcl
dec
and
inc
lcall
dec
test
pusha
enter
sbb
adc
orb
cmp
scas
shlb
popa
in
repz
paddusw
xchg
xchg
mov
aam
xor
mov
mov
mov
stos
add
mov
mov
add
cli
bound
xchg
test
push
addl
lods
pop
inc
add
clc
mov
dec
push
pop
inc
and
pop
jmp
add
and
ja
adc
mov
andb
ljmp
mov
adcb
movsb
mov
loope
ficompl
mov
push
out
testl
cmp
stc
push
mov
sbb
push
clc
ficoms
not
pop
scas
lods
xchg
add
out
xor
mov
in
pop
mov
pop
and
ja
ret
jl
mov
out
add
icebp
xor
sbb
xchg
pop
stac
adc
inc
lahf
iret
pop
mov
pop
pop
adc
gs
cmp
add
xchg
ss
xor
ljmp
and
les
ret
xchg
stos
add
verr
adc
mov
mov
std
aad
sbbl
add
sbb
adc
or
pushf
popa
mov
adc
and
int
add
mov
out
adc
mov
mov
or
imul
sbb
push
adc
pusha
lret
mov
dec
lods
shlb
test
andl
stos
sub
cmp
sub
pop
rcl
into
sarl
push
fcmovnb
xchg
emms
xor
xchg
je
sub
in
cld
add
lahf
push
push
dec
add
cmpsl
sub
lods
out
movsb
xorb
maxps
add
inc
bound
xor
mov
mov
mov
add
jge
mov
add
push
sub
mov
call
repnz
pusha
adc
mov
movsb
cmpb
adc
add
ja
and
cld
xor
inc
add
rclb
push
push
test
add
mov
adc
xor
add
push
jb
test
mov
cld
inc
rcl
mov
adc
add
inc
stos
les
loope
sbb
out
sub
pop
cmp
ficoml
lea
dec
js
sub
jae
jnp
add
jecxz
cmpsl
adc
add
pop
lahf
loope
sbb
rorb
in
jecxz
jle
adc
dec
mov
sbb
dec
or
lods
popf
cmpsb
repz
lret
add
loop
inc
jo
add
xchg
adc
pop
outsb
add
sub
repz
dec
daa
sub
pop
mov
movl
pop
mov
and
hlt
jg
addr16
jns
mov
nop
sbb
jno
sub
pop
sub
xlat
fldcw
pop
jnp
dec
test
add
pop
cmp
and
cwtl
xchg
dec
movsl
mov
xchg
mov
sbb
stc
ljmp
jns
out
ds
xor
cmpsl
cmp
inc
jae
addl
icebp
push
adc
add
xor
ret
jmp
idivb
out
fnsave
add
in
arpl
fwait
xchg
and
aas
test
push
jmp
push
das
addr16
mov
push
jb
ja
jo
adc
mov
pop
stos
push
add
aaa
outsb
scas
imul
leave
addl
dec
jmp
adc
add
pushf
ljmp
shll
add
and
mov
fists
xchg
add
in
insb
int3
inc
dec
dec
add
jg
adc
rcrl
push
add
pop
jge
adc
mov
andb
cli
lods
xor
inc
in
inc
cwtl
cmp
cmp
pop
sbb
xor
push
popl
mov
add
add
lea
outsb
or
loop
and
daa
rolb
xor
add
push
add
jbe
xor
add
popf
add
cmp
xchg
mov
nop
in
dec
add
sbb
je
ss
repz
sub
lret
fadds
and
insl
stos
pop
out
pop
sbb
clc
into
popf
adc
lret
lods
ja
in
outsl
add
lods
fwait
sbb
sub
cmpsb
add
ja
add
jne
lcall
jmp
xor
ljmp
orb
fcoms
push
lods
adc
scas
sbb
stos
sti
ss
leave
mov
or
xor
mov
pop
rol
sbb
add
cmpsl
xor
lods
rorl
loop
daa
add
popa
push
out
in
lahf
inc
lcall
subb
or
dec
lock
pop
sub
in
jo
mov
imul
cwtl
push
mov
or
sbb
adc
inc
mov
mov
roll
mov
daa
adc
popa
add
xorb
pop
outsb
add
pushf
mov
subb
mov
sub
bound
jo
ret
xlat
cmp
das
outsl
int
inc
jae
inc
cmp
fildl
mov
add
repnz
jp
repz
shlb
mov
or
movsbl
enter
mov
inc
lret
xchg
jecxz
push
mov
jns
add
mov
mov
ljmp
push
dec
dec
push
add
mov
push
sbb
cmp
pop
sub
shll
movsb
add
pusha
fs
les
xlat
sub
std
pop
jo
pop
cwtl
out
inc
sub
orb
mov
xchg
pop
test
sub
xor
imul
adc
adc
mov
stos
ljmp
sub
xor
and
shl
mov
lret
pushf
ds
je
ss
loopne
ja,pn
cmp
jnp
jg
mov
out
adc
xlat
sbb
cmp
sbbl
jp
xchg
mov
add
rolb
shl
mov
lods
ret
push
xor
mov
sub
cmp
cwtl
or
sbb
cwtl
je
adc
add
fnstcw
jmp
and
clc
inc
sbb
cs
scas
and
add
mov
mov
pushf
in
movsl
repnz
repz
cli
mov
mov
dec
cwtl
ret
repnz
nop
pop
add
sbb
lahf
sbbl
int
cmp
fdivr
psrld
nop
pop
lods
sub
xchg
add
mov
sbb
out
adc
movsb
mov
mov
dec
sub
and
enter
outsb
fsubr
inc
movsb
popa
in
bound
sub
jnp
add
xor
and
test
mov
shrb
js
mov
pusha
pop
cmpsl
xor
repnz
aam
fsubs
pop
xchg
push
sub
psubq
dec
push
sbbl
ss
adc
ror
mov
inc
add
xchg
aad
lods
add
xor
out
mov
cltd
add
inc
mov
push
mov
sbb
adc
add
inc
xchg
std
test
xchg
mov
jae
mov
push
and
loop
add
push
out
scas
loop
negb
inc
js
inc
pop
ret
mov
add
and
add
jl
inc
shrd
cmp
push
mov
pop
add
sbb
cwtl
aam
xchg
std
add
clc
xchg
push
addr16
xchg
push
pop
lds
dec
hlt
nop
inc
xrelease
lret
sbb
mull
out
mov
int3
push
scas
mov
mov
stos
cmp
lods
xor
inc
rclb
and
cs
in
ret
xor
mov
jge
rorb
movl
int3
dec
fnstenv
js
add
mov
adc
xchg
add
popa
and
dec
ret
xor
inc
daa
and
xchg
out
sub
or
mov
dec
incb
shll
xor
cs
mov
aas
or
add
cmp
add
pushf
jl
mov
xchg
je
push
add
in
add
sub
or
inc
mov
dec
mov
mov
rcr
sahf
inc
sbb
push
js
jg
in
inc
mov
add
lret
pusha
dec
add
xlat
sbb
push
faddl
adc
imul
xor
and
mov
add
sub
push
xorl
cmp
xor
add
cmp
rcrb
test
xor
xchg
ficoml
pop
dec
mov
sbb
xchg
add
data16
adc
insb
adc
adc
mov
xor
add
jmp
xor
or
cmovne
inc
scas
loopne
lds
adc
inc
cltd
add
clc
jmp
sub
xchg
xchg
mov
loopne
bound
pop
ja
add
mov
aas
lods
xlat
test
int
stos
push
repnz
popf
mov
mov
xor
jg
inc
enter
inc
add
adc
add
push
mov
popa
fcoml
movl
jno
out
mov
rolb
or
add
xchg
xchg
jnp
movsl
xchg
dec
nop
std
and
adc
adc
outsb
sbb
push
mov
pop
jecxz
jmp
jno
hlt
xor
pop
jl
xchg
pop
mov
enter
push
addl
adc
sub
adc
leave
push
out
push
or
clc
and
add
scas
xor
out
pop
out
xor
lahf
das
pop
xchg
aad
mov
cli
inc
sbb
adc
push
test
adc
sbb
jne
mov
iret
loop
xor
clc
fildll
insl
add
fbstp
jp
xlat
pop
add
jmp
lods
jb
push
testl
negb
and
cmp
or
shlb
add
cmp
lcall
add
fstpt
stc
xor
jp
movsl
push
ljmp
inc
cmp
icebp
orb
movsb
addr16
jge
movsl
lret
ljmp
push
add
js
sbbl
pop
sbb
inc
xor
cmp
mov
cmp
cmp
add
mov
sub
std
push
add
fwait
mov
xor
repnz
lock
jnp
mov
mov
adc
mov
sub
adc
sarl
pop
add
push
xchg
lea
sub
cmp
sbb
and
add
ss
xor
or
jmp
mov
icebp
andb
out
add
mov
mov
dec
sti
add
jmp
mov
mov
jno
add
xor
imul
testl
shlb
popf
mov
mov
add
push
aad
fninit
push
jnp
mov
add
push
out
add
test
fs
jl
add
movsl
fdivrs
inc
popf
add
out
push
mov
mov
add
jecxz
insb
nop
test
pop
and
xchg
or
sti
ret
add
push
shll
and
dec
xchg
jp
add
bound
sub
fsubrl
pop
sarl
adc
fucomi
mov
push
shlb
adc
add
addr16
addb
jmp
pop
push
insb
xlat
xor
add
mov
and
mov
mov
in
add
jl
shlb
pop
out
add
sbb
adc
add
add
inc
loope
faddl
mov
xor
call
cmp
adc
add
cmp
mov
hlt
iret
cmpsl
scas
and
test
or
sbb
cltd
or
and
adc
jno
stos
mov
add
xor
iret
out
mov
xchg
and
pop
in
add
popf
lods
or
adc
push
pop
mov
testb
pop
mov
lock
outsb
pop
testl
jle
and
mov
adc
out
mov
mov
add
lods
idivl
scas
xlat
pop
cmp
rolb
jae
xchg
pop
inc
cs
ds
cwtl
add
add
xchg
ret
cmpb
outsb
push
test
xor
mov
or
mov
lret
mov
add
jns
movsb
cmp
add
inc
cli
mov
push
cmp
je
add
xchg
in
mov
daa
aam
jno
call
mov
add
cs
fiadds
sub
sbb
xor
sar
cltd
idivl
outsl
shrb
dec
add
add
out
push
add
mov
movd
ljmp
cli
pop
xor
idivb
add
inc
sti
and
idivl
mov
rcrb
jo
nop
push
int
cmp
or
add
sbb
pop
pushf
mov
shr
insb
incl
test
or
cmp
xor
add
mov
xor
cltd
lret
add
sub
xchg
faddl
mov
pop
jne
pop
adc
add
xchg
mov
lds
fsubl
dec
cmc
es
enter
pop
mov
mov
jmp
mov
inc
out
sub
add
or
test
mov
push
fbstp
aas
fst
mov
add
push
xchg
lods
cmp
adc
test
mov
out
xor
xchg
sahf
mov
hlt
rolb
popf
xchg
jno
loopne
pop
jnp
je
dec
pusha
pop
pushf
out
add
addl
cvttps2pi
xlat
ss
cmp
mov
mov
add
inc
and
add
xchg
lret
movsb
int
fnstcw
imul
xor
addr16
mov
sbb
inc
mov
pop
stos
cs
xor
cmpsl
xor
cmpb
pop
mov
bound
jbe
pusha
mov
add
push
dec
jns
mov
push
cmc
and
cs
scas
movsl
fwait
mov
data16
into
mov
jne
push
test
stos
xchg
mov
adc
inc
push
push
jmp
pop
addl
xchg
jmp
dec
aas
addb
pop
test
sbb
add
ja
xorl
and
adc
xor
cmp
fldl
push
sbb
and
jmp
sub
pop
push
subb
add
pop
repnz
mov
mov
pusha
into
jb
cmp
and
ficomps
add
mov
xchg
add
or
fptan
das
add
mov
mov
pop
pop
add
adc
lcall
jbe
and
aas
jle
sub
mov
jne
and
orl
jl
test
sbb
jne
xor
add
lods
jle
xchg
rolb
adc
add
inc
rcr
mov
and
add
xchg
lcall
movsb
add
repnz
sub
call
out
hlt
jno
add
inc
push
leave
inc
ret
adcb
add
imul
test
add
jb
or
icebp
movsb
inc
outsl
and
xchg
add
mov
add
xor
adc
mov
lds
shrb
loopne
add
xor
ret
stc
xor
aad
fsubl
aam
push
cli
bsr
movb
mov
stos
cmp
mov
rclb
xchg
or
jle
add
jb
cli
jno
dec
push
iret
xor
jp
or
sar
add
sub
stc
mov
insl
add
pop
fcom
lahf
lret
enter
mov
test
int
pusha
repz
add
or
sub
adc
lods
dec
jb
xchg
mov
ja
hlt
les
push
add
sub
aad
mov
sub
xchg
cmpsl
pop
add
dec
add
stos
pop
out
add
mov
cmp
inc
add
and
lock
sub
sti
cmp
lods
call
faddl
mov
mov
sahf
jl
jp
pop
lcall
add
gs
aas
lret
sbb
lds
in
sbb
in
dec
enter
les
and
insl
xlat
or
sti
cmp
cwtl
clc
xchg
add
lcall
dec
in
lds
test
inc
and
jnp
push
mov
xchg
stos
imul
and
mov
add
jge
mov
mov
aaa
repz
adc
outsb
sbb
xor
imul
ds
mov
push
rcrl
add
negl
mov
add
dec
jbe
loope
daa
add
cmp
sub
fisttps
rclb
mov
inc
push
add
test
add
lret
movsl
pusha
sbb
comiss
out
or
cmp
adc
lods
pop
cmp
mov
inc
sub
inc
add
lds
cmp
lahf
test
inc
jb
add
add
pop
inc
lcall
in
popa
mov
je
hlt
add
mov
pop
xchg
and
adc
arpl
and
xor
sbb
addl
test
mov
add
shll
sbb
sbb
rcl
dec
stc
sarb
aam
std
popf
lea
inc
rcrb
sub
inc
rclb
test
mov
cmpsb
add
and
jae
inc
xchg
sub
dec
add
dec
loop
push
mov
mov
pusha
leave
push
aad
sbb
test
fcoms
ss
cmp
mov
sarl
cmpsl
ret
mov
test
divb
es
xchg
orb
hlt
cmp
dec
mov
mov
es
outsb
mov
cwtl
adcb
xchg
mov
add
insb
test
add
inc
xchg
or
push
hlt
jp
adc
mov
ljmp
mov
dec
movsl
add
xchg
add
xchg
ret
add
insb
mov
push
add
dec
les
dec
stc
adc
xchg
outsl
aam
xor
push
incl
js
loop
shll
cmp
push
gs
dec
call
xchg
imul
shll
push
fs
cli
out
jno
sub
push
shll
dec
mov
fnstsw
imul
repz
lods
inc
clc
addb
add
jl
ljmp
mov
mov
sub
lods
dec
repnz
movsl
scas
sbb
sti
icebp
add
cltd
mov
add
jbe
stc
outsl
pop
mov
and
cmpsb
mov
and
loope
xchg
dec
xchg
loope
fstpt
pusha
dec
bound
xchg
pop
mov
cltd
add
or
sbb
popf
add
in
add
sub
shrb
out
ja,pt
add
ret
rolb
data16
mov
or
dec
mov
jle
jmp
lret
adc
dec
popa
pusha
mov
add
outsb
inc
fbld
xor
add
je,pt
cli
imul
add
scas
push
inc
loope
xchg
test
aas
mov
cmp
je
adc
pop
js
and
push
sbb
aas
sub
xchg
sahf
mov
js
adc
pusha
pop
xchg
das
mov
inc
sub
mov
mov
out
inc
ret
rorl
or
add
jecxz
lret
sbb
outsb
rolb
sub
sub
fs
mov
mov
cwtl
jns
jb
lret
rorb
pop
or
dec
inc
inc
fsubs
fwait
loopne
jnp
xor
pop
sbb
in
cli
and
test
mov
bound
xor
mov
mov
roll
and
in
addr16
push
inc
lahf
xor
fnstsw
mov
jle
xor
add
or
dec
testb
call
xchg
push
add
inc
and
sub
das
sub
cmpsl
add
jp
push
cld
cmp
aas
mov
inc
fimull
xchg
xor
mov
loop
mov
adc
jp
fisttpll
add
addb
cmp
stos
mov
ret
and
pop
adc
or
and
leave
sub
mov
fisubrl
test
xchg
mov
dec
ja,pn
fcoml
xlat
gs
jbe
or
fdivp
repnz
sub
lea
inc
loope
inc
scas
nop
idiv
xor
xchg
testb
aam
es
adc
roll
cli
lock
fdivrl
jecxz
pop
leave
mov
and
das
pop
pop
loopne
jns
aas
xchg
movsl
add
xor
test
shl
outsb
inc
jo
mov
outsl
clc
inc
add
cs
daa
add
sbb
into
sbb
sbb
add
fldcw
jnp
add
mov
jb
into
lahf
dec
pop
aam
add
adc
out
add
mov
js
lret
pop
xor
and
sub
or
lret
add
scas
mov
sub
jno
and
add
repnz
or
sbbb
pusha
dec
jg
sahf
add
stc
jnp
xor
divb
and
mov
push
push
mov
sti
sub
loop
in
sub
xor
jo
or
mov
dec
pop
pusha
or
roll
loope
adc
cs
shlb
cmp
jmp
mov
xchg
dec
dec
mov
inc
jg
mov
cmc
std
and
movsb
or
lods
mov
mov
jnp
jg
cmp
pop
pop
enter
push
imul
mov
add
mov
inc
push
fwait
int
in
adc
mov
and
push
sub
add
shl
fldenv
test
scas
aaa
mov
ja
popa
cmp
push
rorb
mov
add
addb
es
add
add
pop
aas
jecxz
lahf
mov
push
incl
push
mov
add
or
lods
cld
xorl
adc
stos
push
ja
add
repnz
gs
or
lret
lds
out
inc
imul
jg
mov
xor
add
adc
sahf
scas
or
cltd
fiadds
ss
negb
add
popf
mov
sbb
out
and
dec
pop
scas
int3
jbe
or
push
mov
les
sahf
aaa
and
pop
xchg
cmp
xchg
mov
mov
jl
sbb
mov
imul
in
es
mov
jns
pop
or
iret
or
mov
sbb
les
push
add
enter
add
jae
add
mov
and
mov
add
cltd
lods
cs
adc
hlt
sbb
mov
fcom
cmp
sbb
adc
push
sub
fstpt
adc
lsl
jo
cmp
jo
push
sti
repz
add
movl
jns
rorb
xor
cld
test
sbb
push
pusha
cwtl
nop
lock
mov
push
add
mov
cs
or
mov
xor
push
leave
cmp
rorl
mov
or
enter
outsb
jns
adc
lcall
das
mov
push
in
adc
and
call
imul
or
or
push
cwtl
add
mov
popf
in
xchg
inc
test
out
or
inc
movsb
sub
decb
mov
xchg
or
int3
sbb
add
adc
sbb
cmp
popa
fstpl
push
into
addb
fdivr
sub
push
mov
popa
adc
outsb
or
daa
cmp
adc
xor
add
xor
outsb
add
cltd
ret
ja
cli
add
filds
dec
out
dec
pop
loop
orw
pusha
bound
xchg
add
mov
mov
bound
outsl
pusha
mov
fucomi
push
pop
lock
push
pushf
mov
dec
out
add
shlb
loopne
clc
or
add
jae
loop
sti
call
push
mov
pop
pop
push
xor
fsubl
push
mov
sbb
fiadds
insb
mov
mov
push
add
lret
sub
xchg
movzwl
push
lea
sub
mov
shrl
inc
int
addr16
adc
sbb
add
ds
inc
sbb
and
jecxz
add
movsb
adc
les
add
xchg
push
sub
mov
add
add
mov
sbb
js
dec
xchg
std
push
pusha
bound
insl
dec
lods
mov
dec
out
add
add
inc
xchg
arpl
cmc
mov
xor
xchg
jecxz
mull
lret
mov
mov
adcb
and
fcompl
cmpsl
xorl
cltd
jg
sbb
lds
mov
add
int3
sub
shlb
sbb
pop
leave
add
jge
hlt
fiaddl
xchg
dec
test
dec
repnz
add
jl
cmp
pop
push
jp
xor
out
movsl
ficomps
or
cmp
adc
int
sub
cmpsb
sbb
mov
dec
in
sbb
lahf
mov
push
andb
jo
xchg
mov
xor
test
inc
dec
cmp
sub
dec
push
mov
add
sahf
xchg
mov
push
add
add
and
inc
xor
stc
pop
xchg
dec
pop
cmc
push
inc
shrb
inc
cmp
stos
sub
in
je
mov
adcl
mov
arpl
add
adc
push
jbe
lock
lea
add
les
adc
out
and
mov
rclb
rclb
mov
xchg
xchg
push
bound
js
mov
pop
xchg
mov
add
jno
out
xchg
dec
rcrb
push
inc
loopne
sbb
dec
repz
cli
fdivs
and
add
roll
dec
test
cmp
fsubs
in
shrl
adc
add
rorb
add
add
pop
inc
movsl
sub
pop
dec
add
xlat
adc
mov
xchg
pop
cld
add
jae
pop
insb
add
sahf
push
andb
mov
pop
sub
es
outsl
aaa
in
adc
into
test
add
pop
mov
xor
push
xchg
add
testl
adcl
add
pop
pusha
fstpt
add
push
shr
push
xlat
and
out
push
add
nop
fiaddl
daa
mov
xchg
and
jbe
dec
mov
add
and
add
cmp
shll
add
nop
stc
sub
int
cmp
movsb
adc
mov
test
xor
fiaddl
xor
mov
das
add
cmp
push
fildll
add
fs
pop
int3
add
out
clc
aaa
xor
rorb
mov
popf
and
push
pop
push
inc
sahf
adc
and
int
add
add
add
pop
add
sbb
mov
sarl
xor
mov
push
or
hlt
jae
xor
inc
popa
shrb
mov
ret
call
jae
inc
adc
push
jge
sbb
in
js
in
xlat
mov
and
inc
lock
mov
add
sahf
test
enter
sbb
sbb
dec
pusha
lahf
vpinsrw
push
sbb
add
pop
pusha
mov
movsb
sbb
fcmovu
mov
push
and
mov
push
mov
mov
data16
stc
add
jmp
fidivl
ja
inc
and
add
add
push
push
insl
movsb
ss
mov
add
and
or
mov
shufps
test
push
loope
pop
pop
or
xchg
or
jl
and
test
sbb
scas
add
pushf
jmp
or
ja
add
sub
ret
cmpsl
scas
mov
mov
fsubl
nop
cwtl
add
lock
pushf
dec
orb
jns
pop
cmpsb
adc
dec
sbb
add
xchg
jmp
dec
ljmp
or
in
add
clc
add
repnz
or
adc
add
sahf
in
mov
loopne
cmp
cmpl
push
cltd
je
dec
lds
popf
pop
mov
add
pop
test
das
or
add
icebp
loope
and
and
fwait
push
jg
shr
movsb
pop
mov
sub
lret
add
cmp
pop
dec
mov
subb
in
xchg
andps
cmp
aad
rep
add
jb
push
fwait
xchg
push
and
xchg
mov
sbb
push
es
cmp
lods
xor
inc
xor
stc
sbb
mov
xor
popa
and
xchg
push
cmp
mov
into
lods
adc
leave
add
mov
jmp
fistpll
pop
mov
add
xchg
dec
scas
xchg
dec
dec
subl
jnp
repnz
pop
cmp
jge
arpl
stos
subb
adc
inc
ds
outsb
nop
out
cmp
sbb
enter
cmp
adc
jecxz
inc
mov
lock
sbb
add
shll
pop
enter
sbb
mov
add
mov
pop
mov
pop
or
add
sahf
stos
or
xchg
es
mov
jne
adc
fimull
jp
dec
pxor
into
push
rorb
mov
dec
sbb
pop
xor
mov
push
mov
push
les
je
rorl
lds
add
dec
in
jns
ret
jae
add
add
sbb
cld
into
jae
sub
mov
roll
stos
sub
xor
aam
lods
loopne
pop
mov
std
or
pushf
pop
lea
fisubs
add
out
sbb
jns
mov
mov
pop
sub
sbb
int3
add
dec
push
gs
mov
or
andl
test
ja
add
jecxz
push
jb
cmpl
cmp
fwait
mov
hlt
sub
out
jge
mov
ret
sbb
push
and
imul
jb
js
add
pushf
lods
data16
loopne
add
push
test
outsl
scas
push
dec
add
fisubs
scas
loopne
out
pop
int
xor
out
inc
fists
add
jl
fdivrp
out
pushf
lcall
in
adc
add
inc
pop
xchg
dec
addb
lahf
mov
mov
push
pop
pop
dec
push
je
pusha
add
orl
mov
xor
add
scas
jp
int3
pop
lock
pop
jae
or
cmp
dec
xchg
sbb
lret
pop
push
push
push
test
mov
addb
cmp
or
lods
adc
rolb
loop
shlb
pop
inc
inc
or
call
sub
sub
int
scas
pop
adc
outsb
fwait
das
inc
inc
lea
gs
xchg
clc
inc
andb
xchg
mov
fdivl
mov
sbb
add
popa
stc
inc
push
mov
mov
pop
pop
push
push
stc
sub
cmp
adc
loopne
push
cmp
pop
cmpb
or
mov
push
mull
outsl
dec
add
shl
bound
insb
xor
mov
add
and
cltd
pop
fstps
sbb
ss
lea
loopne
loop
mov
cmp
pusha
dec
pop
stos
divl
mov
dec
ret
xchg
and
cmpb
sub
out
clc
fsubrl
and
cmp
adc
xchg
les
int
outsb
pop
popa
push
shlb
call
mov
test
dec
add
fmulp
push
fsts
dec
add
aad
out
mov
ds
stos
fidivrl
int
dec
add
dec
and
mov
inc
inc
testl
add
jb
jne
mov
insb
enter
and
in
sbb
xchg
pop
sahf
mov
or
orb
sbb
add
xlat
enter
add
daa
ret
sub
lea
repz
mov
push
fsubl
xor
inc
mov
mov
stos
add
ficomps
sbb
int3
and
pop
int
aam
in
xchg
add
xor
add
insl
jp
xor
cld
mov
jg
movsb
in
or
push
xor
and
mov
sbb
add
mov
gs
or
and
inc
dec
xchg
out
mov
adc
lcall
xlat
fprem
jno
add
pop
xor
push
push
fs
cld
rol
inc
test
sub
sarb
mov
cmpb
mov
push
test
push
add
popa
xor
cmp
loopne
or
sbb
movb
adc
mov
mov
mov
push
mov
cmpsb
clc
jb
add
aaa
add
and
and
xchg
scas
cmp
add
adc
jns
aad
adc
add
xor
inc
rorb
dec
add
cmp
push
ficoml
addr16
xor
mov
mov
cld
sub
add
aad
fildl
xchg
cmp
mov
icebp
jmp
test
loopne
add
push
scas
jb
stos
jno
add
inc
loop
sub
mov
repnz
xchg
movaps
or
add
push
add
cmp
pop
mov
mov
sti
enter
cld
pop
cmp
mov
repnz
pop
incb
push
xchg
test
ficompl
enter
arpl
testb
adc
pop
add
cli
aam
out
jae
xor
add
andb
adc
sbb
mov
into
dec
pop
add
push
add
xor
mov
push
into
mov
add
inc
push
jbe
out
sub
push
mov
pop
sbb
sbb
pushf
das
mov
cmp
xchg
stc
pop
aas
in
push
ret
nop
mov
sub
add
loop
in
xchg
and
iret
in
enter
add
les
std
mov
add
fnsave
jbe
and
sysexit
mov
sbb
cwtl
jns
push
loopne
dec
repz
and
xchg
iret
das
nop
add
mov
lahf
xor
call
pop
test
shlb
cli
fldl
cltd
fnstenv
cmp
sub
add
jge
mov
add
pushf
mov
jno
jns
add
push
insb
cmp
mov
or
xor
inc
in
pop
ja
js
addb
lods
mov
pusha
pop
mov
jbe
pop
dec
jp
sbb
push
test
mov
popl
cs
mov
nop
pop
pop
jge
dec
add
mov
loope
mov
mov
frstor
adc
pop
jne
add
leave
insl
jo
mov
add
sahf
scas
aad
adc
jnp
testb
sbb
cltd
add
cmp
mov
pop
or
or
fwait
or
mov
pop
jb
add
adc
mov
inc
mov
fiadds
xlat
clc
ljmp
daa
mov
sti
outsb
mov
out
xor
cmp
push
rolb
mov
in
lret
xchg
data16
out
cli
popl
add
test
mov
mov
sub
outsb
insl
add
out
stos
aam
mov
in
scas
leave
xchg
in
es
hlt
add
pop
jmp
aam
in
pop
mov
pop
inc
add
ret
or
fmull
jecxz
fsubs
push
clc
pop
xor
cltd
sub
lea
dec
add
ss
data16
rorb
jbe
jbe,pt
sbb
aad
cwtl
adc
add
pop
or
jnp
pop
inc
sub
jp
add
xorb
movsb
and
xchg
add
iret
sbb
cmp
daa
jmp
psrld
fwait
shlb
push
cmpsl
movsl
add
push
loopne
push
ret
push
or
xor
js
addl
leave
hlt
fadds
sbb
mov
dec
incl
stos
add
movsl
jno
and
xchg
fcmovne
rorl
mov
pop
testb
add
xchg
dec
cmp
jmp
add
cli
out
adcl
mov
mov
insl
and
movl
ret
xchg
sbb
neg
xorb
mov
test
pop
faddl
xchg
jo
inc
pop
nop
or
test
sub
insb
fnstenv
test
xchg
sub
add
jo
cmp
mov
ret
pop
cltd
xchg
test
je
test
repz
aam
add
insl
roll
loop
mull
cmpsl
or
seto
add
in
cmpsb
lahf
xor
adc
testb
fcoml
push
jo
mov
push
daa
inc
sub
push
cld
dec
in
das
mov
add
sub
cmp
test
push
fwait
add
lea
scas
mov
pop
add
repnz
mov
dec
sbb
mov
in
dec
in
add
mov
xor
mov
sub
cmp
add
bnd
sbb
and
jmp
ret
shlb
lcall
jns
mov
cmpb
add
je
stc
or
rclb
add
mov
adcb
cmc
xor
adc
jb
icebp
movsb
out
les
mov
add
and
cmp
les
adc
add
mov
xchg
sti
xchg
call
jns
sahf
dec
inc
xor
dec
pop
inc
add
xor
lock
idiv
dec
repnz
enter
pop
out
xor
pop
psllq
and
test
lret
add
pop
inc
out
cmc
shlb
fsubrl
repnz
mov
jno
dec
add
xchg
lcall
cmp
jge
push
in
repz
mov
pop
or
loopne
jp
shlb
lcall
xor
lea
daa
push
dec
loopne
sbb
and
cltd
push
sti
add
shlb
in
or
nop
mov
lock
cltd
cmc
inc
push
sub
aas
loopne
icebp
add
dec
push
loopne
sbb
pop
push
xor
push
stos
add
or
pop
sub
jmp
pop
add
testl
mov
sbb
adc
shl
daa
add
out
rorb
jmp
cmc
jns
out
dec
adc
add
fwait
stos
mov
xor
and
sbb
inc
mov
in
push
ss
out
and
xor
push
add
popf
in
in
inc
test
shrb
stos
ret
nop
inc
add
mov
add
fs
scas
sbbb
cmp
sub
mov
add
into
xchg
dec
scas
and
cltd
push
push
sbb
jmp
mov
xor
pop
add
es
iret
sbb
adc
clc
ret
in
outsl
xor
idivl
add
xor
ss
pop
jae
add
push
push
and
icebp
loopne
ja
adc
fisttpll
lods
jg
mov
inc
sbb
add
dec
pop
test
movsb
push
inc
add
jp
jmp
shll
testb
or
nop
or
loopne
movsb
inc
es
sub
mov
add
fstps
cmp
or
mov
add
sbb
mov
movsl
mov
rcr
cmp
jle
and
push
inc
pop
out
sbb
xchg
sbb
add
jns
mov
adc
stos
shrb
cs
repz
lret
mov
cld
add
pushf
mov
pop
jl
hlt
adc
adc
dec
adc
or
shr
xor
hlt
iret
cmp
mov
enter
jle
das
push
inc
mov
fcmovbe
add
arpl
dec
pop
mov
cs
jle
sbb
xor
mov
and
cs
cmp
add
int
aas
lods
loopne
xor
mov
xorb
cmp
sub
fdivrs
out
xchg
jb
mov
sbb
adc
iret
pop
pushf
add
lcall
imul
pop
nop
lds
pop
adc
mov
dec
pusha
xor
mov
fnstsw
and
call
test
or
test
mov
mov
add
hlt
insl
lret
pop
pusha
sbbb
adc
mov
adc
mov
inc
push
sbb
in
mov
pop
or
outsl
sbb
jl
gs
rorl
pop
mov
mov
es
push
jo
popf
pop
mov
fisubl
rcrb
pop
adc
stos
rorb
cmp
push
jg
mov
push
lcall
lahf
add
out
js
mov
add
das
iret
pop
push
pop
out
add
ja
mov
pop
in
or
fwait
sbb
shrb
push
xor
lock
cmpsl
add
out
das
inc
test
lods
jne
call
xchg
sbb
jecxz
push
xor
addr16
loopne
push
and
add
xor
flds
out
clc
int
rcl
jmp
das
dec
cmc
out
mov
sub
add
add
adc
ror
jge
add
popa
popf
pop
aas
es
sbb
sub
loope
test
mov
jo
pop
xorl
clc
xlat
push
xchg
aaa
jno,pt
or
dec
xchg
and
imul
jnp
add
sub
or
or
loopne
adc
push
andl
lahf
stc
xchg
cmp
mov
mov
ret
out
clc
xchg
lock
sbb
xchg
mov
lods
leave
inc
out
in
cmp
repz
cs
insb
jb
movsb
sub
jo
sbb
pop
jp
and
lds
mov
stos
xlat
push
pop
pop
xchg
add
dec
or
pop
push
leave
hlt
enter
jo
lock
mov
sub
fists
or
pop
mov
cli
shrl
mov
imul
data16
inc
xchg
xorb
dec
faddl
cld
movsb
add
in
lds
test
lahf
inc
sahf
push
loop
add
jp
lds
cmp
test
pop
icebp
cmp
cmpsl
xor
outsb
push
call
jmp
rclb
lods
lea
hlt
xor
movsl
pop
add
add
push
movsb
xchg
add
pushf
jbe
cwtl
notl
mov
inc
daa
bound
mov
or
roll
aas
or
sub
addb
sti
mov
xchg
or
push
add
stc
and
ds
add
lea
or
add
aad
sub
lock
sub
jge
fdivs
cs
jno
int
test
inc
sub
inc
test
clc
fimuls
add
or
dec
call
xchg
loop
mov
js
jl
lods
and
mov
aas
inc
xor
xchg
mov
adc
stos
cs
xor
cmp
jbe
data16
imul
shr
push
pop
add
sbb
mov
movsl
sbbb
or
xchg
jno
cmp
jle
add
and
cmp
add
mov
in
cmp
sbb
enter
in
add
or
add
insb
outsl
fcmovbe
gs
or
push
or
add
stos
or
add
fmul
sbb
sub
movsb
ret
xchg
loopne
lcall
mov
mov
inc
je
or
jb
xor
mov
sbb
pop
cwtl
cmpsb
xchg
sbb
cmp
insb
or
imul
loope
into
pusha
shrb
repz
mov
andl
adc
and
add
jo
popa
jns
add
test
add
scas
sbbb
jmp
lcall
loope
test
into
cmp
ljmp
adc
inc
sbb
push
jns
repnz
mov
addl
xlat
pop
push
mov
pusha
mov
jns
xchg
xor
movsb
imul
add
add
xchg
add
mov
inc
dec
jae
add
test
and
inc
das
inc
push
xchg
add
lcall
pop
insb
out
jge
sub
frstor
cwtl
pusha
inc
aam
sarb
rcrl
jne
aad
lea
dec
inc
mov
jecxz
mov
popa
sti
cmp
stc
jns
inc
or
in
flds
mov
aas
push
jle
int3
jge
jmp
jb
aaa
cli
dec
inc
loopne
mov
sub
sbbl
js
add
repz
mov
popa
ss
xor
stc
test
test
pop
outsb
cmpb
xor
and
ljmp
pushf
ljmp
cmp
or
hlt
cmp
add
add
push
and
pushf
xchg
add
roll
sbbb
jmp
mov
jae
test
xlat
subl
pop
jecxz,pn
cmp
fnstenv
and
sbb
xor
add
inc
rclb
bound
push
sbb
xchg
sbb
jno
dec
cmp
addb
test
shrl
add
jge
or
les
out
movl
mov
dec
inc
xor
stos
xchg
mov
cmp
fs
xchg
add
add
adc
adc
repz
or
cmp
dec
mov
test
sti
inc
xor
lods
cmpsb
lds
push
lods
jns
inc
pusha
jmp
mulb
jp
and
inc
push
in
sbb
out
aaa
jg
je
xchg
jle
jnp
add
xchg
inc
test
dec
test
clc
mov
ss
and
and
mov
fadds
in
js
lods
add
scas
dec
in
sub
mov
out
pop
push
cmovl
leave
leave
sub
daa
fsubl
pusha
xor
jmp
lods
lods
inc
mov
mov
sbb
inc
mov
dec
push
shrd
lret
inc
mov
repnz
inc
pop
adc
rolb
and
xchg
dec
in
data16
add
cmp
jb
or
or
sahf
xor
mov
mov
lock
xchg
push
sbb
add
mov
or
push
add
shrb
sbb
jmp
jp
cmc
and
jge
push
fnstcw
xlat
andb
jl
inc
ret
and
mov
jmp
cmp
inc
cmp
roll
xor
rcrb
imul
nop
data16
inc
dec
jl
mov
dec
loop
jp
jo
in
into
lret
push
repz
and
test
add
pop
out
pushf
repz
jno
add
cmpsb
pop
xchg
cmp
inc
dec
movsl
outsb
pop
or
sub
or
adc
jmp
xor
hlt
movsb
xlat
xchg
test
mov
inc
inc
stos
cmp
add
jmp
xor
adc
sub
and
push
bound
jmp
lods
mov
cmp
pop
or
shrb
inc
rclb
adc
adc
mov
sahf
andb
push
add
cmp
lret
pop
js
sahf
js
push
fsub
lahf
mov
push
mov
mov
sbb
add
sub
inc
repz
jecxz
roll
push
rolb
sub
sub
dec
repz
loope
push
inc
fidivs
insb
hlt
sbbl
orb
out
and
and
repz
lods
push
lret
mov
push
sub
enter
sbb
or
jno
mov
mov
mov
pusha
adc
out
xlat
adc
inc
xchg
push
subl
cmp
and
sub
sbb
je
add
sbb
add
inc
mov
out
outsl
jle
test
push
out
xchg
add
cmp
or
jo
push
pop
popa
in
insl
mov
dec
sbb
lea
add
xchg
ret
pop
cmpl
lcall
or
sbb
xlat
ljmp
mov
dec
ljmp
dec
fwait
inc
int
cmc
out
pop
test
jmp
cmc
xor
mov
lock
imul
push
or
mov
or
pop
pop
dec
test
xorl
shll
or
inc
jo
add
jl
dec
mov
inc
cmp
out
sub
negl
jmp
lret
fs
dec
adc
xlat
sbbb
and
stc
and
push
addb
idiv
nop
add
divb
mov
pop
pop
mov
jno
imul
pop
cmp
mov
or
mov
fsubl
cmpsb
add
in
pop
mov
add
hlt
add
sub
sbbb
add
test
pop
les
push
iret
add
cli
push
mov
xor
pusha
sbb
adc
pop
mov
push
adc
push
in
and
ficoml
xor
or
lret
add
and
ret
in
xor
mov
fmuls
sbb
mov
sub
mov
inc
insb
push
cmp
add
push
pusha
faddl
imul
cmp
orl
rclb
mov
mov
orl
cwtl
and
aas
je
fbld
cmp
fsts
cwtl
cmp
cmp
sbb
pop
shrb
andb
add
pop
mov
test
sahf
roll
std
out
add
ljmp
shlb
pop
mulb
push
inc
inc
push
jb
sub
pusha
cmp
fists
bound
inc
mov
xor
lods
imul
jo
fisttps
mov
fwait
inc
call
xchg
add
dec
add
push
xchg
pop
test
inc
mov
fmuls
inc
inc
movsl
cli
dec
push
sbb
cmpsb
rclb
repz
popa
hlt
hlt
mov
adc
mov
add
inc
dec
add
lock
sarl
adc
xor
arpl
add
add
stos
es
out
add
rcrl
rcrb
or
arpl
add
mov
in
cmc
inc
ret
xchg
adc
sub
add
aaa
xchg
ljmp
bound
xor
add
fs
push
mov
jg
neg
int
inc
rcl
dec
push
sbb
or
or
aam
push
cmovo
lods
dec
loopne
add
dec
sub
lahf
addb
cwtl
sub
cltd
mov
sbb
xchg
jecxz
orb
insb
xchg
adc
fadds
movsl
adc
mov
cwtl
push
sbb
rorb
loope
clc
dec
add
fisubrs
out
pushf
and
stc
xchg
xchg
arpl
hlt
pop
xor
cwtl
lea
ljmp
int
and
mov
xchg
pop
mov
mov
lods
sub
add
scas
sbb
stos
out
xchg
lds
in
inc
cmp
and
mov
nop
je
pop
das
in
push
pop
cmp
xchg
or
adc
loopne
xor
sub
shlb
mov
cmp
push
and
add
stos
ud0
cmp
xchg
rorl
cld
xorl
bound
or
je
dec
lea
and
sahf
mov
into
in
scas
dec
xor
fs
movsb
repnz
cld
jmp
add
inc
xchg
aas
sub
dec
lods
addb
add
mov
jg
add
jp
test
leave
stc
cmp
inc
push
iret
int
jnp
jbe
dec
out
xchg
and
enter
les
ljmp
fdivrs
mov
bnd
lock
imulb
fadds
jae
rcl
mov
pop
in
and
and
xchg
les
push
add
mov
int3
aam
inc
add
jno
test
jne
add
cltd
call
cmp
mov
pop
repz
or
push
jnp
dec
mov
inc
lcall
sub
ret
stc
nop
inc
add
and
pushf
add
sbb
xchg
push
popl
into
pop
std
aam
enter
inc
push
dec
and
cmp
dec
add
in
mov
xor
out
test
jbe
sub
sbb
mov
setbe
xor
and
das
add
and
add
cmp
mov
lods
dec
test
push
xor
mull
push
in
jo
cmp
add
rorl
cmp
repnz
add
loopne
push
sbb
jecxz
call
insl
adc
mov
imulb
inc
mov
and
bound
popa
les
push
xor
push
push
push
or
and
rcrb
pop
mov
dec
add
inc
pop
cmpsl
add
push
fnstenv
xor
cmp
add
outsl
jns
out
jg
inc
sbb
xlat
lea
addl
add
jmp
or
xchg
xchg
lea
aas
xor
add
lock
ret
sub
inc
mov
fidivl
add
pop
xor
xchg
dec
cmpsb
lock
adc
add
test
cwtl
add
mov
inc
lea
xor
or
sbb
in
xchg
repnz
fwait
xchg
sub
or
aad
out
inc
sub
mov
adc
pop
xchg
fld1
push
shrl
int3
xchg
call
cmp
add
shll
mov
push
and
push
mov
enter
jns
mov
lock
dec
mull
mov
lcall
jp
add
adc
push
cmpsb
dec
xchg
xchg
pop
clc
scas
add
shrl
mov
shlb
jns
add
mov
aam
int3
cltd
pop
dec
rcrl
and
mov
repz
cmp
dec
push
pop
push
add
scas
rcrl
mov
or
ja
jl
in
adc
cmp
push
sub
xchg
pop
nop
add
adc
sbb
test
and
dec
mov
sbb
movsl
pop
mov
sub
inc
and
rorb
xchg
jb
lret
aaa
sbb
hlt
popa
mov
sbb
fdivs
mov
xor
push
test
cltd
stc
bound
test
mov
insb
inc
jb
xchg
inc
jge
add
daa
inc
or
dec
stc
shl
cltd
adc
xchg
inc
test
imul
xchg
sub
sub
add
jmp
sbbl
icebp
sub
inc
insb
inc
jmp
mov
loopne
aam
shll
sbb
imul
jle
rcrl
and
mov
jns
sbb
jle
and
out
adc
fstps
push
psrlw
inc
lock
mov
cmp
adc
mov
mov
daa
cwtl
hlt
xor
jl
mov
adc
and
shlb
cli
mov
inc
fldenv
cwtl
xor
scas
arpl
cmp
cmp
xchg
jb
fdivr
nop
add
push
or
sbb
inc
test
clc
dec
and
ret
jl
add
dec
lret
mov
and
pop
inc
adc
and
mov
sub
mov
sub
lret
inc
daa
adc
pop
popa
cwtl
cld
dec
add
ss
sti
int
rolb
lahf
fsubs
rol
sbb
push
inc
frstor
xor
call
fidivrl
insb
test
dec
out
xor
xchg
sbb
nop
fmuls
icebp
hlt
inc
das
add
inc
xor
or
and
cld
dec
or
add
inc
ds
pop
pusha
jns
add
cmp
xor
inc
and
add
push
sub
repnz
jne
or
mov
pop
cmp
popf
add
lsl
out
dec
dec
inc
es
add
inc
jl
add
sub
lock
jne
js
cmp
fnsave
imul
xor
lea
in
shlb
adc
mov
div
cmp
cmp
pop
inc
xchg
mov
or
jmp
sbb
lahf
test
inc
fwait
iret
frstor
les
les
ret
hlt
fdiv
pop
push
subl
sbb
inc
addl
push
sbb
inc
std
pop
xor
orl
int
jl
js
add
jns
insl
push
inc
push
mov
add
enter
lds
dec
inc
jp
adc
pop
jo
mov
push
and
fs
and
fisubrs
pop
add
push
xor
cmpsb
or
mov
mov
or
add
in
push
pop
loope
or
add
pop
test
mov
xor
pop
sub
pop
out
fimull
mov
add
inc
mov
mov
add
adc
sti
fbstp
hlt
or
repnz
nop
sbb
mov
cli
inc
xor
and
and
lds
mov
sbb
dec
jbe
and
dec
adc
adc
aaa
add
jo
pop
fs
mov
xchg
sahf
aas
ficoms
in
shrb
in
jnp
add
xor
cmc
mov
cmp
scas
repnz
stos
cmpsl
addr16
adc
and
ss
cli
sarb
outsb
or
mov
xor
rolb
mov
aaa
rclb
mul
sbb
pop
xchg
ljmp
sarl
xlat
sub
loop
xchg
mov
insb
les
push
aam
push
leave
inc
xchg
bound
or
jne
gs
jmp
movsl
and
adc
jae
or
cltd
aam
repnz
in
push
push
xchg
add
cli
add
mov
and
popf
or
mov
sub
add
fdivs
push
pop
and
sbb
and
mov
xchg
ror
ret
inc
daa
sub
sti
js
pop
repz
or
fs
xor
add
mov
add
add
sub
sbbb
jne
add
push
adcl
fs
mov
add
inc
mov
sub
aas
adc
add
xchg
or
das
lcall
lods
test
xchg
hlt
add
cltd
mov
and
mov
cmp
aaa
insb
dec
mov
mov
lock
leave
cmp
outsb
adc
sub
push
int3
and
or
inc
addr16
sub
rorb
jne
cltd
fidivrl
testl
mulb
and
rolb
decb
dec
enter
mov
jb
adc
pop
sub
xor
push
es
out
mov
inc
sub
mov
xchg
pop
mov
sub
xchg
aad
pop
inc
xchg
pop
push
data16
out
popa
les
add
add
mov
mov
pop
sbb
pop
push
fidivrs
movb
inc
mov
jns
and
rcrb
add
push
pop
notl
mov
sbb
pop
pop
xchg
mov
pop
cmp
in
xsavec
mov
push
ficompl
ja
push
sbb
orb
xor
add
dec
mov
outsb
adc
inc
divl
dec
cmp
stc
cmp
sub
mov
jne
add
pop
aaa
dec
jno
mov
insl
mov
push
and
sbb
rorl
inc
rolb
add
inc
jo
push
outsb
aaa
js
ja
add
dec
xchg
inc
loopne
mov
xchg
add
cmpsl
bound
enter
inc
outsb
jl
sbb
mov
fldenv
lret
add
dec
fstl
les
repnz
cltd
pop
cmpsb
nop
sub
je
jae
adc
cmp
xchg
cltd
dec
and
cmpb
popf
andb
fistl
mov
aam
or
in
push
pop
sbb
loop
in
push
ja
pop
pop
xor
subb
adc
inc
and
push
pop
testl
pop
test
jmp
adc
xor
or
push
dec
out
xor
mov
sub
sbb
inc
push
jno
xchg
adc
inc
mov
int3
inc
or
in
stc
adc
mov
xor
ret
sbb
jecxz
mov
xor
scas
push
mov
inc
pushf
xor
push
rcrb
fwait
mov
or
cmp
mov
pop
shlb
inc
mov
cld
cmpsb
lods
outsl
loope
xor
les
mov
add
mov
nop
cmp
cmc
or
xor
es
enter
add
adc
movsb
push
fld
lock
push
mov
xchg
jo
add
jecxz
or
mov
mov
mov
push
mov
cmp
dec
and
cmpsb
hlt
mov
mov
les
mov
jnp
jl
sbb
pop
lock
jb
dec
fcoms
xorl
fadd
hlt
jge
adc
aam
add
xor
dec
adc
int3
mov
xor
and
and
dec
inc
and
or
cltd
sub
test
lret
mov
xchg
inc
xchg
popa
cmp
cwtl
or
ss
int
push
jae
sti
lock
imul
mov
faddl
add
enter
into
and
add
inc
call
loop
leave
jle
add
fisubl
cmp
jno
mov
or
jl
pusha
fldcw
pusha
adc
enter
jns
cmc
setnp
sbb
inc
dec
loope
lahf
cltd
incb
aas
push
cmp
shrl
sti
pusha
pushw
mov
xchg
pushf
jne
jg
add
fiadds
fcompl
add
push
xchg
sahf
and
add
andl
mulb
popf
add
addr16
cmp
adcl
cmp
outsl
push
in
push
jnp
cmp
nop
sbb
fcompl
inc
jmp
pop
jle
bound
adc
hlt
loopne
add
add
inc
ss
mov
out
add
lahf
movsl
cmp
cwtl
fcoml
dec
mov
clc
adc
hlt
adc
jp
mov
lret
add
push
clc
sub
push
loope
addr16
or
xchg
sbbb
ficoms
cmp
cmpsl
fistl
and
xchg
pop
arpl
fiaddl
aam
mov
bound
push
lea
xchg
enter
add
mov
dec
insb
mov
movsb
loopne
xchg
jg
xlat
or
sub
add
arpl
mov
int
loopne
gs
les
sbb
add
pusha
add
ret
lahf
fsubl
dec
scas
add
divl
insb
pop
sbb
pop
sbb
mov
mov
std
xchg
pushf
orb
push
test
sub
aas
mov
dec
decl
add
adc
hlt
pop
mov
hlt
mov
addl
mov
dec
cwtl
adc
flds
sub
mov
cltd
push
add
orl
cmp
fldcw
jge
hlt
sbbl
imul
stc
pushf
shlb
mov
pop
out
add
mov
or
xor
idiv
mov
rcrb
dec
adc
pop
loope
in
mov
sub
xchg
xor
dec
scas
jp
add
popw
scas
add
aas
push
mov
lock
mov
xchg
adc
xor
aam
and
lods
sti
xor
pop
lcall
ss
call
and
add
aaa
jbe
orb
andl
add
fsubs
repnz
in
add
dec
aas
sub
sub
mov
pop
std
inc
lds
jb
dec
jle
sub
sbb
push
jp
test
mov
in
add
daa
sub
test
cwtl
xchg
ds
lock
out
cmp
sbb
lcall
mov
fwait
pop
loopne
mov
pop
add
mov
lods
aaa
je
cmp
add
and
pop
push
in
js
bound
or
sub
xor
es
adc
rdmsr
shll
aas
inc
repnz
and
in
xor
cmp
and
and
sub
gs
idivb
add
inc
repz
xchg
xchg
addr16
push
sub
divl
arpl
add
xorl
adcb
add
cltd
lods
xor
or
add
fldenv
lods
push
shl
cmp
and
lds
nop
cld
or
add
fs
push
push
mov
add
xchg
out
icebp
xlat
mov
add
mov
fwait
nop
fmull
ja
add
lock
pop
inc
es
mov
add
das
mov
add
cltd
stos
inc
scas
fisttps
xlat
push
icebp
sub
or
or
lds
or
cmc
add
int3
dec
loopne
cs
mov
and
fimuls
fs
rol
dec
xor
ror
pusha
nop
adc
test
add
or
or
sub
adc
nop
jge
sub
mov
cmp
shlb
jmp
and
mov
xchg
arpl
imul
jmp
fs
add
dec
fdivrp
call
sbb
enter
add
leave
sbbb
push
mov
sbb
inc
clc
sahf
adc
test
or
jns
ss
mov
mov
xor
les
add
cmp
adc
movsb
cmp
in
es
ljmp
les
pop
stc
sbb
fwait
es
movsl
clc
mov
and
sub
cs
repz
sarb
mov
push
bound
mov
and
inc
adc
hlt
add
pop
pushf
xchg
and
pop
fadds
cmp
imul
add
pop
inc
or
rolb
pop
popa
das
push
scas
adc
out
lods
rclb
mov
insb
mov
cmp
mov
jno
pushf
int
mov
rcl
or
lods
inc
in
add
cmp
or
or
inc
enter
orb
ljmp
faddl
add
daa
jno
mov
pop
bound
cld
or
cmp
mov
sbbl
dec
lahf
jp
loopne
push
sarl
xchg
daa
mov
rdtsc
scas
push
shlb
popf
cmp
scas
xchg
and
lock
and
inc
cs
push
mov
sub
jg
out
adc
mov
imul
mov
cwtl
jo
lret
add
mulb
add
pusha
and
notl
pop
xchg
sti
out
imul
jb
xor
mov
pushf
stos
xor
mov
xor
int3
pusha
jl
cld
or
sbb
mov
cli
cld
sub
lock
shll
cwtl
sbb
pop
add
loope
sbb
inc
pushf
arpl
xchg
ss
fnop
push
orb
in
sbb
out
je
cmp
push
lods
inc
shlb
sub
bound
les
cmp
sbb
cltd
lods
out
movsb
pop
mov
dec
test
leave
test
mov
sbb
cwtl
jo
inc
dec
cmp
lock
sub
daa
call
dec
pushf
push
push
std
jbe
lcall
inc
cwtl
aaa
rcl
or
dec
in
js
subl
adc
and
push
cmpsb
test
call
add
daa
and
frstor
add
jmp
or
sbb
mov
stos
sbb
arpl
sub
xchg
jo
movsl
int
mov
arpl
fldenv
pop
cmpsl
mov
cmp
je,pn
jo
xchg
mov
xchg
movl
adc
add
ss
mov
iret
add
add
outsl
mov
add
lret
bound
pop
dec
lea
mov
ds
cmp
enter
fidivl
hlt
pusha
ljmp
pop
push
xor
sub
adc
and
push
dec
mov
fcompl
mov
push
clc
dec
lock
xor
pop
outsb
sbb
dec
jg
mov
sahf
lods
rclb
add
add
mov
sbb
repz
jl
in
inc
xchg
call
testb
cmp
rolb
in
shll
movsl
mov
fcoms
ds
jp
daa
test
cs
adc
lods
xchg
lret
push
ds
or
sbb
and
cli
out
mov
add
jl
mov
outsl
dec
pop
adc
test
sub
mov
xor
cmp
scas
jle
mov
repnz
hlt
je
sti
sbb
sbb
iret
or
hlt
fs
add
fmull
pop
add
mov
push
jmp
sbb
add
xorl
out
cmc
add
pop
xchg
xchg
out
fwait
loope
andb
push
mov
push
lret
popf
add
movsb
lods
xor
cli
lcall
pusha
mov
int
push
loopne
cltd
sarb
in
pop
shll
add
rcrb
mov
test
xchg
adc
add
and
jbe
cwtl
sub
adc
add
test
add
pusha
sub
jo
ror
call
pop
cltd
test
fs
jae
add
mov
and
fmulp
imul
pop
dec
pop
or
add
mov
iret
add
pop
jbe
ja
push
push
xor
cli
add
cld
mov
push
dec
bound
cmp
dec
pop
xchg
cld
mov
or
insb
leave
int
or
jno
js
loopne
mov
mov
aam
je
inc
or
stos
subb
adcb
and
arpl
and
cmc
test
data16
iret
fstp
icebp
sbb
cmp
inc
lcall
out
or
clc
dec
push
cli
add
in
dec
mov
out
or
sbb
mov
jno
cmp
les
leave
in
xchg
fldl
test
jne
dec
mov
movl
repz
push
cli
fisttps
add
enter
jle
mov
push
int
repz
ret
dec
pop
xor
rol
or
or
cmp
mov
pop
pop
repnz
lds
mov
insb
add
adc
arpl
imul
lret
fdivrs
mov
pop
ret
add
js
rclb
dec
sbb
and
or
std
adc
fcompl
sub
push
rcr
push
jns
xor
and
scas
das
mov
sbbb
fsubl
hlt
sub
push
mov
cmp
popa
cmp
js
decb
cmp
dec
pushf
or
subb
ret
pop
js
adc
inc
jnp
or
dec
and
xchg
adc
mov
or
jp
shll
or
mov
cmp
test
cmp
mov
cwtl
inc
xchg
outsb
jo
loopne
add
movsl
xchg
xor
popa
push
pop
sub
sub
sarb
aad
xchg
add
inc
jmp
loop
mov
adc
and
das
pushf
pop
push
div
js
mov
ret
test
add
lods
sbbl
xchg
adc
jg
mov
test
sub
jns
es
push
cmp
push
and
sbb
xchg
adc
sbb
push
outsb
push
add
or
mov
xor
pusha
cli
mov
imul
mov
add
sub
jmp
dec
push
adc
xchg
sti
push
dec
add
mov
add
lock
movl
inc
add
push
pop
test
and
jnp
pop
jbe
add
out
rolb
leave
mov
popa
xlat
push
ror
sbb
push
repnz
cmp
or
dec
pop
in
or
add
push
nop
adc
mov
or
fbstp
in
add
ret
add
fs
sbb
mov
insl
mov
inc
add
cmpsb
dec
or
out
adc
jp
pop
inc
and
or
in
xchg
leave
push
adc
add
xchg
push
mov
jp
mov
insl
addl
xchg
sub
xchg
dec
xor
add
dec
popf
fnstsw
aam
pusha
lcall
mov
push
loope
xchg
cmc
jbe
lock
dec
aaa
aad
loop
shlb
xor
pop
leave
jns
cmp
dec
xchg
out
jl
fidivrl
fwait
sbb
pop
add
in
movsb
cmp
inc
shl
pop
push
rcl
inc
mov
mov
add
fs
xchg
out
sub
sub
mov
sbb
xor
and
mov
and
out
mov
and
xor
das
inc
xchg
jecxz
xchg
mov
mov
or
jns
push
sub
add
mov
and
mov
add
andl
adcb
imul
jbe
sar
pop
cmp
adcl
loop
push
cmp
cmp
pop
fcmovnb
shl
inc
adc
mov
pop
sub
sarl
mov
aas
imul
inc
jg
mov
pop
stc
jmp
insl
mov
int
xlat
add
sbb
jge
push
jns
pop
aaa
cmpsl
add
add
nop
push
lds
xchg
xchg
xor
inc
dec
xchg
cmpl
js
aas
inc
cltd
rcll
out
xchg
out
int
shrl
mov
xor
sbb
loopne
sub
push
mov
iret
inc
stc
fistpl
movb
mov
push
lods
pop
cmp
jecxz
out
and
adc
xchg
add
xchg
add
sbb
mov
leave
lea
mov
dec
xchg
or
sub
loopne
enter
ret
sbb
mov
bts
lret
test
sub
xchg
cwtl
xor
ljmp
cmp
add
testl
mov
inc
std
adc
movsl
arpl
sbb
pop
dec
push
xor
cmp
imul
in
push
pusha
ja
dec
push
mov
imul
pop
adc
push
test
add
pop
cmp
jg
fs
add
repz
hlt
mov
pop
jns
sarl
jecxz
imulb
fcoml
dec
pop
pop
pop
addb
lea
pushf
add
add
inc
les
mov
rclb
and
clc
push
dec
repnz
inc
dec
js
or
push
push
out
mov
xchg
jb
sub
nop
enter
jg
xor
or
jge
mov
push
add
leave
adc
cmp
rcl
jno
call
jle
mov
mov
out
bound
pop
divl
shlb
mov
clc
lods
pop
cltd
cmp
sub
loop
sub
movsb
rclb
sub
arpl
or
pop
cld
dec
arpl
jo
aam
aas
inc
jo
push
pop
mov
and
mov
xchg
inc
or
adc
rcl
ja
pop
inc
jo
loopne
mov
adc
push
fstpt
sbb
mov
addb
xchg
sub
add
imul
inc
shlb
and
or
leave
and
and
mov
dec
and
mov
roll
push
cmc
push
inc
pop
lcall
sub
jno
xchg
mov
dec
push
pop
clc
push
sub
push
cmp
push
inc
sbb
jne
sahf
mov
mov
std
add
ja
add
adc
mov
adc
sub
mov
test
cmp
sbb
test
call
add
push
xchg
enter
dec
push
and
jl
fwait
int3
sub
add
roll
jmp
mov
dec
push
shlb
aas
pop
sub
sbb
jno
dec
jecxz
mov
call
sti
inc
mov
cmp
inc
dec
and
sub
pop
or
cltd
je
add
lcall
iret
push
cmp
lods
data16
lret
daa
lock
movsl
dec
lods
roll
mov
or
mov
js
stos
adc
sub
mov
adc
pop
and
push
jmp
jo
sub
out
cmp
add
bound
adc
cmp
and
int
daa
lret
dec
aas
xor
push
sub
addr16
inc
add
outsb
inc
pop
sbb
lock
rcrb
andb
or
dec
iret
insl
test
adc
xor
or
dec
add
imul
fsubs
mov
test
add
jp
sbb
cld
and
push
push
inc
and
xchg
mov
das
jnp
insb
fistl
int3
call
cwtl
cmp
cmpsb
ucomiss
pop
dec
dec
loop
sbbl
sub
ljmp
cmp
lahf
pusha
pop
scas
aam
inc
sbb
push
inc
add
ret
test
popf
sub
push
mov
in
mov
daa
cmp
and
lret
setb
dec
addb
or
shll
pop
aas
xor
mov
jp
adc
sti
add
scas
mov
adc
sub
add
sarl
inc
pusha
pusha
xor
cmp
jne
int
inc
mov
pop
jns
xor
call
inc
pop
mov
stc
and
out
cli
sbb
pop
imul
js
add
out
adc
mov
sub
mov
xor
or
rclb
or
aad
les
dec
pop
clc
inc
cmp
pop
hlt
add
cltd
sahf
cmp
dec
push
outsb
jge
sbb
imul
out
add
ret
xchg
and
stos
mov
xor
inc
iret
cmc
mov
mov
mov
in
mov
push
pusha
imul
xor
aam
pop
das
pop
adc
pushf
int3
popf
jne
add
inc
ljmp
jge
stos
add
push
or
in
adc
push
inc
add
je
push
sub
ret
stos
clc
ret
sbb
sti
movsb
adc
jo
add
mov
push
adc
and
leave
sbb
mov
or
cld
pusha
movsl
pop
jo
push
xor
jp
leave
mov
in
dec
push
and
js
push
mov
push
and
push
das
pop
jae
and
adc
fnstcw
clc
pop
inc
sub
sti
cmp
out
xchg
enter
mov
dec
pusha
jl
xor
jg
ret
dec
adc
dec
xor
pop
or
repz
xlat
and
hlt
push
or
push
sub
inc
pop
jne
add
bound
lods
loope
bnd
xor
xor
lock
add
mov
add
xor
mov
mov
je
imul
add
fwait
repnz
js
cs
in
mov
lods
inc
in
faddl
push
cmp
sbb
call
jmp
loope
test
and
lds
cmpsl
mov
jbe
push
or
mov
jbe
jnp
aam
jl
add
push
nop
xor
dec
jmp
xorl
outsb
pop
jp
fs
mov
cwtl
cmp
add
push
and
pop
imul
mov
adc
add
jl
push
or
inc
pop
mov
js
bndstx
mov
jecxz
leave
mov
jno
pop
inc
and
addr16
push
sub
or
pusha
jle
stc
cmp
into
inc
les
add
push
adc
cltd
aas
insb
ficoml
int
xor
push
aam
push
jp
push
arpl
cltd
mov
add
inc
repnz
mov
or
lcall
mov
add
push
ljmp
and
inc
pop
filds
push
add
add
iret
adc
xchg
mov
jnp
adc
push
inc
mov
mov
jg
pop
test
cwtl
pop
inc
sarb
ds
ret
mov
or
cmp
xor
incl
mov
sbb
jp
iret
cwtl
or
sbb
jns
sub
inc
pop
sub
jno
fcomps
add
mov
push
sbb
insb
add
rorb
fisubl
mov
push
pop
pop
incl
addl
ret
lock
push
adc
add
jle
mov
xor
mov
dec
negl
push
adcb
cs
nop
test
adcb
push
ret
and
cltd
repnz
inc
push
scas
sbb
mov
rol
xchg
dec
add
jno
mov
scas
sub
idivb
inc
sbb
inc
cld
add
lcall
pushf
imul
xchg
dec
sarb
nop
push
push
cwtl
test
push
dec
sti
or
movsb
add
cmp
pop
push
hlt
aas
jp
adc
andb
mov
lds
call
adc
jp
lock
mov
orb
dec
sub
sbb
inc
rolb
push
sub
pushf
test
or
roll
loop
cld
jns
or
mov
adc
add
mov
cs
lds
inc
inc
ss
push
enter
jns
test
jl
cmpsb
jecxz
mov
call
cmp
cmp
ret
or
adc
or
lods
mov
shlb
inc
nop
js
adc
ret
inc
sub
repnz
ffree
hlt
lds
in
insl
xchg
xchg
inc
lret
pop
cmp
jp
and
dec
mov
aam
je
cli
call
cmp
push
aam
jo
test
sbb
sub
mov
ficoms
or
add
rolb
dec
lds
mov
ret
iret
mov
lods
shlb
adc
out
add
imul
pop
sbb
dec
add
mov
push
adc
clc
push
mov
xor
shll
rorl
outsb
dec
hlt
dec
mov
pop
add
push
fadds
add
mov
adc
add
pop
aaa
in
push
cmp
adc
repz
xor
fistpl
push
movsl
add
shll
cwtl
add
gs
add
out
ret
sub
or
fs
loopne
inc
scas
sbb
push
add
add
js
sub
lea
fdivrl
mov
push
cmp
push
iret
fs
loopne
inc
movups
inc
add
icebp
in
mov
sbb
or
mov
movsl
dec
sbb
mov
leave
pop
mov
lds
in
aas
add
xchg
xchg
scas
and
iret
les
mov
je
add
sbb
dec
inc
notl
and
mov
movsl
pop
roll
inc
pop
dec
fsub
xorl
fadds
arpl
cmpsb
add
shrl
jo
jno
rorb
pop
and
xor
inc
cld
mov
test
add
clc
mov
or
pop
sub
xchg
pusha
pop
cli
sub
mov
adc
push
shr
push
cmp
push
sbb
jo
stos
sbbb
xchg
sbb
push
mov
aas
out
cmpsb
mov
add
pop
or
rol
mov
std
nop
cmp
and
call
xchg
pop
sbb
adc
add
cmp
jae
cmpsb
add
adc
ljmp
add
adcl
add
fists
mov
xchg
sub
adc
inc
push
ret
repnz
lcall
push
or
add
fcoms
jo
jae
xchg
xor
adcb
xchg
and
pop
jg
push
sbb
lcall
push
mov
xor
aam
mov
and
insb
inc
aam
call
aaa
test
clc
adc
add
mov
cmp
pushf
mov
scas
clc
sbb
pusha
adc
adc
mov
sub
cld
nop
imul
inc
add
fbld
bound
scas
js
pop
push
and
sub
xchg
push
fsubr
loopne
mov
or
lock
dec
cmp
add
fs
call
adc
sub
pushf
push
in
xchg
adc
inc
nop
das
sbb
add
std
mov
pop
push
jle
add
fwait
jne
cli
xchg
loope
imul
jmp
ja
pop
movsb
test
dec
inc
enter
jb
cmp
xor
xor
push
hlt
or
mov
or
cmp
sub
pushf
xor
cld
jg
es
or
push
sub
lea
mov
pop
adc
add
orl
lret
jmp
jne
sbb
jmp
out
jb
add
fstps
jo
push
sbb
ret
jge
or
adc
xor
or
jle
pushf
sbbb
sbb
dec
je
sti
imul
add
pop
or
or
pop
add
sub
jbe
or
mov
pop
test
fnstenv
mov
sub
lods
or
sub
adc
jno
fldcw
jecxz
and
imul
or
mov
sti
rclb
popa
jb
jg
add
pop
mov
orl
clc
and
inc
push
fadds
incl
add
jbe
cmpsl
nop
enter
add
lret
mov
out
sub
cwtl
add
bound
leave
icebp
fwait
push
add
mov
inc
fadds
shlb
and
out
inc
cmp
lea
mov
xchg
je
jne
inc
jecxz
inc
in
outsb
stc
mov
sbb
jmp
add
push
jae
push
mov
into
lret
hlt
mov
ljmp
xor
pop
jne
shlb
pusha
movaps
outsb
aaa
sbb
lods
xor
xor
insl
xchg
iret
and
inc
jae
fxch
push
dec
inc
pushf
add
mov
cmpb
add
cmpsb
push
test
xchg
icebp
add
add
dec
movsl
jmp
test
dec
fidivrs
jo
mov
mov
fldenv
in
or
xor
cs
mov
mov
xchg
add
cmpsl
popf
faddl
lock
pop
jle
jmp
lcall
add
push
out
cmpsb
add
scas
inc
call
jle
and
cwtl
pushf
outsb
lock
mov
push
leave
imul
xor
add
inc
pusha
insb
cmp
push
mov
or
jno
js
push
push
insb
pop
shlb
leave
mov
je
xchg
pop
sub
test
mov
sbb
movsw
adc
jp
add
push
popa
push
sbb
bsr
xor
jmp
xor
fdivp
push
mov
inc
test
dec
rolb
and
enter
pop
sbb
int3
call
scas
mov
movl
stos
jns
outsb
int
mov
jecxz
push
xor
lahf
jno
stos
aam
add
notl
adc
xor
xchg
cmp
mov
jne
pop
and
lcall
daa
loop
mov
outsl
sbb
xchg
loope
add
and
lret
test
lea
jmp
test
frstor
dec
leave
mov
shr
fldenv
pop
push
sahf
cmpsb
or
dec
js
xorb
sub
xchg
inc
lock
cmpsl
and
add
les
or
push
mov
inc
jo
enter
inc
push
ja
mov
mov
cmpsl
sub
xor
sti
das
sbbb
add
cmp
lret
loopne
je
or
add
lock
sub
mov
inc
cmp
lods
mov
xchg
in
ds
add
mov
sub
mov
aad
in
add
xlat
inc
lahf
xor
xorl
jl
nop
add
push
sahf
in
mov
add
add
bswap
inc
inc
push
loopne
movsb
add
aas
sub
xor
and
jp
and
add
cld
jl
push
mov
and
xor
adcl
adc
push
add
scas
adc
negl
xor
cwtl
pop
test
pushl
push
in
dec
leave
movl
loopne
mov
mov
mov
adc
xor
in
faddl
sbb
arpl
jg
xchg
fucomip
inc
xlat
jnp
scas
dec
es
insb
dec
pop
cmp
jbe
ds
mov
or
jl
mov
mov
pop
cmp
jnp
sti
add
mov
or
dec
adc
popa
shrb
jge
jle
add
or
and
rclb
or
add
push
xor
pop
popa
cmpsl
fnstsw
aam
mov
aad
inc
and
inc
fcoml
jbe
test
pop
jp
and
int3
jl
add
pop
arpl
xor
push
mov
cmp
fcmovb
aam
iret
xor
clc
or
mov
rcll
loopne
jo
jne
mov
ror
lods
or
mov
les
sub
subb
pop
xchg
add
cmp
cmpsl
dec
inc
and
adc
scas
out
cltd
sub
test
pop
dec
xchg
in
fs
sub
cmp
sub
sub
add
aas
leave
mov
test
mov
mov
adc
or
jg
bound
es
outsb
xchg
cltd
dec
push
inc
sbb
lods
xchg
mov
outsl
in
stos
lret
cs
nop
jl
js
stc
inc
or
and
popf
mov
mov
scas
andb
fisttpll
mov
jno
push
pop
xorb
or
adc
pslld
and
cli
push
mov
pop
mov
out
out
xor
scas
mov
inc
xchg
fisttpll
test
and
mov
dec
loope
iret
rolb
xor
push
test
shrl
es
add
sbb
mov
or
test
add
gs
stc
xlat
pop
rorb
add
xor
fsubs
inc
mul
add
daa
ret
mov
and
add
dec
add
mov
in
cmp
shrb
movsb
push
mov
push
jmp
mov
outsb
test
add
dec
divb
in
jmp
pop
jmp
inc
add
and
xlat
push
nop
sbb
add
add
mov
push
push
dec
adc
and
aad
movsb
aas
pop
push
testl
mov
inc
mov
xor
adc
cld
pop
add
or
xor
enter
popf
js
sbb
jg
push
push
nop
dec
loop
add
lret
sub
xor
faddl
and
std
xchg
cmp
mov
sbbl
mov
xor
mov
mov
add
xor
pusha
shrb
fisubs
hlt
str
mov
add
jnp
pop
cmp
jb
pusha
shrb
or
or
orb
xchg
cwtl
out
fcoms
or
xchg
imul
dec
push
cmp
mov
js
add
shlb
es
jno
add
or
push
adc
inc
enter
lret
push
stc
test
cmp
jle
jnp
pusha
sti
and
loope
lods
nop
mov
js
or
popa
fdiv
into
jg
mov
shr
mov
add
xor
push
fdivrl
add
xor
shlb
add
jge
inc
jl
aaa
fstpt
dec
inc
jmp
jecxz
cmpxchg
incl
dec
fiadds
lret
push
push
shl
pusha
jp
inc
mov
push
call
cmp
adc
ds
mov
or
cmp
adcl
add
push
add
fsubs
sbb
adc
and
adc
or
push
inc
pop
das
inc
fisttpl
ds
out
ficompl
add
jb
xchg
loopne
aam
inc
rcll
jnp
adc
pop
fs
leave
and
add
mov
in
inc
cmp
rorl
jne
lock
add
xchg
xor
pop
je
lea
sahf
in
fwait
test
push
cld
rorl
loope
test
sbb
lea
dec
decb
adc
test
xadd
mov
jecxz
nop
sub
out
pop
inc
dec
fsubrs
int3
in
xor
xlat
arpl
xchg
loopne
pop
add
jl
mov
push
xchg
or
aas
pop
movsl
xor
lcall
add
push
cltd
and
fwait
jo
adc
psadbw
cmp
xchg
mov
add
sub
xchg
add
lock
push
pop
adc
xlat
and
bnd
adc
clc
push
cld
sub
cmc
push
jge
xor
or
stc
leave
mov
flds
mov
cmpsl
mov
dec
das
mov
jg
aas
and
add
test
test
mov
mov
out
repz
aam
outsl
aaa
test
enter
sub
push
cld
mov
and
incb
mov
insb
jno
adc
lcall
iret
xchg
int3
pop
aad
mov
sahf
clc
add
popa
inc
and
test
mov
daa
les
and
imul
xor
dec
outsl
ret
cmp
add
lahf
faddl
cld
sbb
xchg
pop
repnz
push
icebp
xchg
test
mov
sub
sbb
lock
or
inc
or
call
pop
mov
cld
aad
add
inc
or
add
xchg
cwtl
int3
xchg
mov
outsb
add
add
mov
inc
sbb
adcb
cli
shlb
jns
popa
mov
rclb
sbb
test
mov
mov
ja
popa
jno
jne
jae
in
add
pop
xchg
xchg
xor
dec
dec
mov
aam
jg
sub
jno
repnz
add
xchg
outsl
mov
mov
bound
jno
pop
dec
cli
adc
xchg
xor
rolb
xor
cmp
sub
add
adc
fdivr
jno
or
test
addr16
insl
pop
mov
popa
cmpsl
scas
clc
stos
add
arpl
cmp
rorb
enter
sbbl
insb
pop
or
push
out
inc
mov
rclb
add
dec
test
jle
sar
movsb
cmp
stc
adc
rcrb
test
loop
fisubrs
int
add
gs
mov
fldenv
mov
sub
cli
sbb
jmp
test
fs
daa
inc
cmp
sbb
arpl
add
fiaddl
insb
pop
inc
nop
addr16
jno
add
push
test
std
jo
inc
icebp
inc
test
addl
adc
ffree
pop
or
mov
xchg
fadds
xchg
push
push
std
inc
dec
mov
push
decl
xor
mov
jle
lock
fs
inc
xchg
mov
cmp
mov
xchg
push
xchg
mov
stos
pop
push
sti
jnp
jge
cmpsb
call
loope
mov
dec
fadds
or
cmp
cmp
adcb
mov
xor
test
pop
daa
mov
fdiv
add
push
sbb
aam
xor
add
call
jmp
add
enter
int3
movsb
jo
fs
fidivrl
std
dec
mov
xchg
mov
push
bsf
lock
add
aad
rcl
pusha
cli
mov
add
jge
adc
cmc
add
test
fcomp
movsb
cmp
add
leave
fidivrl
daa
add
pop
jb
push
push
clc
add
mov
pop
cmp
ret
jge
les
repnz
test
loopne
xlat
inc
push
roll
fmuls
rclb
pusha
xchg
test
inc
dec
sub
fmul
test
out
lret
iret
sbb
imul
mov
dec
mov
cmp
clc
call
cli
or
in
jae
les
hlt
mov
xor
cmc
sbb
mov
inc
cmp
push
or
xor
cld
dec
cwtl
add
js
and
push
push
xor
subl
and
std
xchg
sbb
loopne
jb
test
hlt
mov
mov
cmp
sbb
hlt
cltd
test
and
cmp
inc
mov
loop
test
xor
out
mov
push
test
or
jl
pusha
add
roll
sbb
push
push
pop
inc
icebp
nop
sbbb
js
cmp
and
test
aam
mov
add
lds
sbb
push
xchg
add
mov
add
js
push
jbe
adc
sbb
lcall
mov
out
movsb
inc
pop
pop
mov
push
or
mov
push
add
popf
or
sub
nop
fucomp
movl
push
xor
testb
adc
stc
enter
mov
rolb
xor
repnz
push
mov
inc
mulb
inc
pop
pop
and
mov
xchg
int
adc
mov
lods
mov
lods
stos
dec
sbb
xchg
outsb
and
ja
add
cwtl
cmpsb
in
aad
rclb
add
jb
mov
inc
jle
add
adc
jo
xchg
enter
sahf
inc
jnp
mov
ljmp
xlat
movl
mov
les
scas
add
push
fs
jecxz
mov
sub
inc
sbb
adc
pop
aas
into
aad
xor
pop
xor
sub
inc
xchg
push
js
mov
pop
das
cmpb
rolb
pop
push
mov
add
stc
daa
test
les
popa
and
scas
and
push
mov
cld
mov
pusha
int
add
push
jns
mov
hlt
xchg
pop
and
xchg
int3
mov
mov
pop
mov
dec
iret
add
or
mov
mov
outsb
enter
sbb
adc
mov
sub
dec
aad
ficompl
push
sub
stc
lods
inc
data16
aas
xor
push
mov
je
pop
xchg
addb
enter
rorb
dec
add
sbb
jmp
xchg
je
pop
arpl
sub
cmp
sub
lods
jb
xor
cltd
mov
xchg
mov
xor
xor
loop
pop
hlt
and
jl
jle
dec
adc
shl
lock
jb
add
xchg
shl
rolb
push
mov
enter
push
pop
nop
pop
fdivr
fldenv
rclb
js
push
in
test
div
add
std
rcll
sbb
sahf
xchg
addr16
sbb
out
mov
xchg
add
sbb
std
dec
aaa
rcrb
mov
fcoms
add
bound
lea
mov
add
pop
orb
add
pop
sbb
andb
pusha
add
imul
mov
jb
movntq
jle
insl
flds
add
add
scas
cmp
test
xchg
fsubl
add
dec
lods
push
out
sub
add
push
push
add
enter
cmp
imul
jne
add
push
mov
pop
shll
jb
jne
or
rcl
lahf
sub
enter
out
shll
into
js
inc
or
ret
jge
cs
jl
cld
push
or
mov
dec
rclb
xor
inc
pop
cld
or
jg
add
fs
ret
lea
shrl
and
jno
fsub
lds
insb
pop
ret
add
dec
mov
adc
sub
pop
icebp
sti
cmpsl
push
sub
add
or
jp
xchg
insb
inc
dec
adcl
mov
iret
mov
push
add
fnstenv
add
div
push
mov
jg
or
repnz
inc
mov
pop
pop
shlb
pop
in
lock
fstps
fisttpll
movl
jno
or
jo
adcl
pop
std
add
xchg
and
loope
aam
mov
in
and
cs
shl
cmp
adc
sti
or
pop
leave
fimull
js
and
lahf
and
cli
xchg
inc
movsb
sbbb
fimuls
dec
add
sub
jo
cmp
mov
add
push
jo
inc
jmp
xor
pusha
xchg
mov
int3
mov
xlat
fimull
mov
out
and
inc
dec
mov
pushf
orb
out
repnz
stc
and
aaa
adc
sub
add
lcall
dec
aad
movsb
mov
add
ja
cmp
push
adc
pop
mov
out
sarl
dec
out
add
jmp
cmp
ret
in
mov
inc
xchg
mov
push
sahf
add
jmp
popa
mov
push
aas
push
cld
add
add
mov
fisubrl
test
nop
int3
adc
pop
sbb
lcall
push
add
test
jmp
add
in
and
xchg
pop
insb
push
stos
aad
cmc
or
sbb
in
add
jb
xchg
dec
and
inc
dec
imul
push
icebp
jl
xchg
dec
subb
mov
add
es
adc
je
movsb
push
lods
xor
sub
push
mov
mov
xchg
les
push
xchg
mov
mov
nop
mov
fdivl
das
add
push
and
jle
add
in
test
and
push
mov
ret
cmpb
in
xchg
fs
or
fcompl
fwait
mov
and
push
sbb
jns
jg
xchg
mov
xchg
pop
lock
fbld
mov
aaa
xchg
je
sarb
leave
or
mov
clc
or
adc
add
loop
mov
add
cmp
into
dec
in
stc
pop
add
test
add
mov
or
mov
addb
popa
mov
je
cmp
lret
mov
cmp
dec
scas
pop
or
mov
xchg
and
sahf
xchg
xchg
mov
adc
arpl
xchg
int
mov
imul
mov
or
aas
mov
sbb
icebp
fwait
jns
inc
aam
and
fs
or
cmp
clc
mov
lret
pushf
imul
ja
add
pop
push
mov
xor
jns
mov
and
cmpb
xchg
pop
mov
dec
cmp
mov
mov
fs
mov
adc
add
ss
adc
mov
cmp
mov
push
out
mov
xor
or
pop
xorl
add
arpl
ret
cmp
pop
push
test
test
add
jno
pop
dec
cmp
inc
add
xor
mov
cmp
fcomps
adc
mov
in
jne
lods
fidivl
sbb
notl
pop
sarb
repnz
loopne
and
arpl
xchg
add
ss
pusha
sbb
dec
mov
and
add
cli
and
lods
insl
mov
pop
mov
adc
ljmp
mov
adc
fs
mov
clc
jp
mov
fcomip
mov
add
js
xchg
ret
nop
lret
les
ret
add
imul
cltd
or
cmpsb
sarb
or
fisttpll
adc
repz
mov
add
pop
mov
aas
jne
mov
xor
push
es
and
popf
adc
dec
cmp
sub
fcoml
je
lahf
lds
loopne
xchg
push
adc
fstpl
in
add
cmpb
lret
cmpb
popa
xor
shlb
arpl
inc
mov
daa
ror
inc
add
fmuls
scas
add
repnz
loope
pusha
pushw
mov
adc
adc
mov
popa
add
add
mov
or
or
adc
daa
add
mov
pop
int3
add
pop
adc
fcomps
sub
pop
add
dec
sbb
lock
adc
arpl
repz
jmp
je
test
add
pusha
ljmp
out
cmp
push
popa
fwait
cmc
sub
lea
ja
rorb
in
aad
popa
add
subl
or
cld
jmp
call
sub
cmpsl
pop
popa
sbb
mov
in
xor
sbb
test
in
fldenv
mov
test
inc
sub
add
stos
out
in
insb
xor
pop
xorb
lods
xchg
mov
add
mov
xor
adc
sbb
clc
rcr
xor
and
cld
add
add
test
mov
mov
mov
mov
movsb
popa
call
jns
mov
or
lods
xchg
test
add
es
popa
mov
or
cmp
sub
mov
call
lret
mov
lea
lock
xor
clc
mov
inc
lret
leave
xchg
jbe
lret
repz
lock
ss
add
sub
mov
mov
mov
cmp
popa
push
data16
pop
fisubs
push
les
andl
mov
adc
call
add
sub
pop
push
pusha
mov
cltd
out
dec
call
pop
popa
jo
or
ret
lea
jb
inc
sub
add
xor
loop
mov
inc
lahf
mov
and
xchg
sarb
push
or
orb
or
cmp
adc
jmp
dec
add
inc
mov
sub
fstl
sub
sbb
jg
push
sub
mov
pushf
cs
lahf
in
cmp
adc
or
add
and
dec
popa
adc
jbe
cmp
inc
mov
add
mov
pop
cld
fcoms
add
jns
and
add
dec
insb
jle
xchg
inc
pop
inc
adc
inc
str
inc
lret
bound
aam
pop
jecxz
cltd
mov
push
adcb
push
dec
or
xchg
or
xchg
adcl
fistpll
loope
shr
add
and
xor
lods
dec
add
xchg
add
shr
cli
jnp
push
pop
mulb
and
mov
dec
inc
aam
in
jge
popa
xchg
jg
aad
hlt
and
lret
pop
pushf
inc
aaa
mov
movsl
add
in
loop
pop
test
mov
pop
pusha
push
push
mov
pop
push
inc
pop
pop
lret
mov
adc
loope
adc
movsl
jp
or
popa
dec
push
sub
in
cmc
sub
cld
inc
repnz
or
adc
pop
push
jmp
scas
pop
xor
cld
clc
push
adcl
sbb
mov
push
cmpxchg
mov
es
lcall
test
sub
cli
decb
std
and
xchg
or
jbe
dec
cmp
add
or
push
dec
popf
xorl
or
mov
xrelease
cwtl
call
into
mov
pop
lods
shlb
inc
lcall
mov
sbb
fs
jae
mov
push
jb
sub
outsb
xchg
leave
mov
pop
or
and
adc
adc
stc
mov
lea
or
xchg
shlb
out
js
sbb
subl
jp
stc
adc
sbb
scas
rorb
mov
shll
mov
xchg
scas
add
push
add
movb
inc
pusha
icebp
addb
jmp
jae
mov
leave
mov
lret
pop
mov
jbe
test
andb
jge
pop
test
pop
fstpl
and
add
mov
push
inc
push
pushl
xor
xor
jae
imul
xchg
lea
add
push
pushf
loopne
xchg
mov
popf
cmp
and
push
push
cltd
push
rorb
orl
push
mov
and
mov
push
xor
test
xor
aas
jp
lahf
mov
shlb
inc
test
inc
mov
and
inc
push
inc
sbb
add
mov
ret
out
push
mov
mov
pop
pushf
fdiv
mulb
frstor
and
in
xor
sahf
jns
sbbl
dec
les
adc
inc
bnd
pop
xchg
add
clc
aaa
fsubs
cmpb
mov
cmc
pop
and
adcb
arpl
add
sbbl
or
sub
insb
shlb
jb
xor
adc
xor
adc
push
add
inc
xlat
pop
push
sbb
jmp
add
cmp
inc
push
or
ds
inc
fs
push
pop
data16
inc
xchg
addb
sbb
out
sub
es
push
adc
adc
adc
lret
adc
lds
or
cltd
fmull
cli
adc
or
imul
push
push
mov
jo
hlt
outsl
add
dec
xorl
dec
fbld
out
or
mov
mov
clc
mul
dec
cld
xor
adc
cmp
mov
adc
rorb
out
dec
and
push
mov
je
pop
add
sub
repnz
xchg
cmp
dec
outsb
push
mov
into
js
inc
incb
mov
inc
adc
mull
adc
sub
and
or
mov
shlb
ficompl
or
add
jne
sbb
test
xchg
mov
adc
sti
mulb
in
cmp
push
mov
repnz
cmp
add
outsb
jecxz
dec
enter
add
jne
int3
sub
add
jns
movsb
insl
mov
js
push
pop
push
flds
loope
rorb
test
add
stc
push
andb
dec
cmp
add
into
std
div
loope
ret
add
leave
jmp
pop
xor
mov
jnp
inc
xor
jg
dec
pop
inc
jmp
cs
mov
call
pop
movsl
push
movsb
add
test
xchg
add
clc
pop
hlt
xlat
push
sub
cltd
cld
cmc
cmpsb
adc
pusha
es
js
xchg
inc
out
inc
adc
or
lcall
push
sbb
push
mov
cltd
push
aaa
pop
popa
dec
adc
adc
pop
xlat
xor
push
pusha
push
mov
sub
push
mov
mov
fcmovnb
pop
pushf
aas
mov
negb
stc
inc
adc
cmpl
adc
and
add
mov
inc
xchg
bound
inc
or
lods
sub
or
push
lods
mov
xor
push
test
add
dec
rcl
ja
and
das
stc
outsl
sub
mov
out
add
je
xchg
mull
add
cs
inc
outsb
test
mov
jl
cmp
add
loopne
out
ret
adc
cmpsl
or
cmp
int
mov
ja
sbbb
sub
inc
es
sbb
clc
cld
es
push
inc
xchg
rcr
popa
pop
stc
push
clc
cmpb
ds
cmp
mov
add
loopne
gs
fiadds
mov
pop
and
dec
sub
inc
adc
mov
add
dec
bound
pusha
and
or
add
fcomi
mov
stos
ret
mov
out
push
and
or
push
popa
add
ja
cmp
mov
sbb
es
add
lret
mov
add
inc
shll
loopne
lea
popf
in
in
lahf
mov
cmp
jmp
or
add
push
test
cltd
or
stos
mov
inc
rorb
pop
pusha
pop
add
mov
subl
push
in
mov
jne
lar
mov
and
mov
int3
test
sbb
pop
psrad
fists
ljmp
push
mov
push
out
div
push
test
inc
xor
lret
ret
add
movl
cmc
pop
stc
rclb
dec
out
xor
add
aaa
imul
clc
pop
add
lret
push
out
imul
rcl
repz
dec
pop
leave
cmp
sbb
add
mov
imulb
adc
or
popf
sub
inc
lods
fiadds
in
mov
xor
dec
add
sbb
cmp
subb
cmp
pusha
lcall
and
mov
call
jae
jnp
andl
add
pop
shll
getsec
dec
mov
xor
cli
lsl
and
add
ja
inc
cmpl
gs
cmp
mov
jae
enter
inc
shlb
scas
xor
and
mov
stc
xor
pop
dec
pop
pop
lret
push
and
push
stos
mov
jle
jbe
mov
add
das
add
sbb
jns
in
jbe
shlb
outsl
icebp
add
fbld
push
mov
add
cmp
pop
out
inc
inc
jg
xor
pop
in
add
push
mov
mov
jmp
pop
mov
ficomps
dec
into
pop
xchg
xor
and
pusha
clc
fs
scas
roll
cltd
mov
inc
mov
fldl
imul
jecxz
pop
dec
aaa
and
xchg
stos
sbb
test
jl
inc
je
aam
jae
or
pop
or
hlt
mov
jg
xchg
xor
sub
popl
and
lcall
xchg
cmpsl
adc
std
and
lea
adc
mov
push
mov
outsl
add
xor
inc
add
ljmp
aas
aad
mov
adc
inc
xchg
xor
sbb
jg
sbbl
add
xchg
daa
mov
addb
movsb
stos
rclb
add
outsl
flds
insl
xchg
movsl
popa
push
scas
sub
xlat
and
mov
push
mov
xchg
loope
jmp
cmp
lret
add
cmp
push
shr
arpl
testl
inc
shlb
lods
cmc
jno
fbstp
sbb
inc
jnp
in
or
jns
inc
push
jne
or
leave
add
inc
roll
out
jecxz
add
dec
cld
fs
cs
add
xlat
xchg
xor
movsb
mov
fnstenv
mov
fcmovnbe
cmp
add
add
push
int3
push
mov
xor
call
adc
push
push
aaa
jecxz
movl
addr16
jge
mov
mov
ret
sbb
cwtl
jle
pop
cmp
xlat
gs
out
adc
fs
loop
inc
xchg
lahf
leave
add
pushf
xor
test
push
jno
sbb
inc
dec
adc
cmp
clc
xchg
scas
sbb
jl
pop
stc
mov
push
add
mul
aas
add
xor
cmpsb
push
loope
sti
add
int3
sbb
das
add
call
push
testb
mov
cmc
jmp
popa
xor
hlt
push
clc
xchg
inc
std
out
cmp
add
mov
movsb
add
sbb
loop
int3
out
je
jbe
jno
add
in
mov
jge
movsb
push
loop
movmskps
inc
sbbl
ret
mov
aas
fs
adc
adc
lea
aas
add
push
jno
cmp
js
aas
push
ljmp
movsb
add
jg
shrl
push
or
jns
gs
add
dec
jb
mov
int3
mov
lcall
and
sti
insl
adc
add
cld
xchg
es
xor
sub
inc
repnz
inc
movsl
popa
push
mov
push
pop
sbb
adc
and
add
sbb
or
or
popf
xor
ja
mov
fwait
dec
outsl
add
outsb
mov
lret
loopne
mov
pusha
pop
cmp
imul
std
pusha
add
test
fnstcw
sysret
cmpsb
push
movsb
xor
ljmp
mov
and
js
jnp
rorl
add
jno
jp
loop
inc
out
movb
or
dec
pop
or
fisubs
fimull
or
mov
rol
cmp
dec
test
mov
mov
inc
cmp
ret
mov
clc
mov
ret
pusha
test
fs
dec
movsl
fbld
into
sbb
out
mov
in
or
jp
adcl
mov
lret
add
enter
pop
jmp
mov
ljmp
add
sub
push
and
int3
and
pop
add
cld
aad
or
xchg
dec
mov
push
mov
xor
outsb
add
or
pop
les
pop
test
fwait
jmp
and
sbbl
mov
sahf
bound
mov
push
xor
cmp
jmp
lret
scas
pop
push
pop
sar
add
shll
inc
xor
jg
add
mov
popf
xor
sub
cmpsl
mov
push
add
aaa
xchg
loop
lret
sbb
adc
das
pop
pushf
jecxz
stc
mov
add
push
cltd
mov
inc
and
dec
adc
inc
ror
xchg
jnp
cli
in
nop
push
push
repz
sbb
jg
movsb
in
pop
lret
jns
fs
shlb
int3
and
sub
xor
push
xor
sbb
add
cltd
add
insl
movsb
push
mov
add
es
and
or
mov
xchg
add
enter
xchg
inc
sbb
rcrb
cltd
xorl
mov
xchg
repz
xor
lds
jo
dec
insb
and
nop
mov
pop
mov
mov
mov
sub
dec
add
pushf
and
leave
out
sbb
in
sar
and
mov
add
inc
xchg
mov
cmp
mov
sub
cmp
pop
add
add
xor
pop
and
ficoml
cld
sarb
call
dec
mov
and
sub
aad
mov
test
xor
mov
dec
dec
and
pop
jmp
add
popa
loop
dec
sarb
flds
stc
push
fisttps
aam
cmp
jl
popf
in
dec
es
lret
mov
stc
push
in
cmp
mov
add
mov
ror
nop
add
push
and
stos
fnsave
sbb
rclb
inc
add
lods
xor
sub
push
dec
xchg
pop
push
ss
jle
pop
ljmp
dec
enter
shlb
mov
mov
jae
rolb
popl
aaa
inc
fcmovb
pop
fists
and
xchg
aaa
push
lret
outsl
inc
cmp
test
mov
adc
push
or
mov
orb
scas
cld
mov
xchg
cs
and
xchg
jl
xchg
cmp
loopne
aaa
outsb
loopne
icebp
addr16
fisttpll
or
test
inc
bound
cmp
pop
jmp
shl
push
jmp
mov
jns
mov
aad
call
dec
mov
in
pop
mov
outsb
cld
mov
push
mov
xchg
add
in
pop
jge
rcll
scas
popa
movsl
cmpsb
and
rolb
lcall
roll
in
fstl
mov
sbb
mov
add
les
in
and
repz
bound
insb
mov
inc
xchg
mov
push
add
cmp
pop
jae
adcb
inc
xorl
loop
ds
add
pop
mov
push
mov
cs
push
push
loopne
sub
add
std
push
mov
mov
adc
ss
loopne
pushf
inc
inc
and
test
sti
inc
add
test
adc
lods
or
mov
or
add
sub
pusha
testb
ljmp
fs
lock
scas
and
mov
popa
stos
rorl
add
sbb
mov
je
add
add
mov
inc
push
jp
adc
mov
int3
add
into
pop
call
add
das
loope
leave
jbe
loopne
enter
pusha
aam
cmp
cmpsb
xchg
add
and
xor
mov
xor
outsb
fldl
xor
adc
nop
mov
jno
loopne
loope
sbb
clc
jmp
jge
push
out
add
insb
faddp
popa
pop
jg
push
and
or
and
xor
and
cmp
xchg
ficomps
xor
push
or
xchg
aaa
mov
xchg
dec
xor
or
rorl
jns
rorb
sbb
add
or
fwait
and
pop
xchg
and
xchg
xor
push
mov
clc
push
mov
jg
lock
movsb
sbb
repz
xor
stos
int3
test
add
sar
fadds
or
dec
add
jbe
and
sub
in
adc
stc
jae
push
orb
push
mov
inc
je
mov
cmp
or
add
dec
and
or
jb
pop
clc
pop
add
lds
push
sarl
movsb
or
sbb
inc
or
push
mov
mov
ret
sbb
orl
mov
sbb
add
js
pop
sbb
inc
sub
xchg
stos
fdivrp
sub
lds
and
outsl
notl
test
clc
push
and
cmp
cmp
pop
push
andb
xor
popf
pushf
push
in
jmp
shlb
add
inc
jb
ljmp
flds
pop
sub
mov
pop
cmp
jecxz
mov
test
cmp
imul
shl
dec
xchg
jmp
sbb
inc
push
fldcw
fdivs
dec
mov
cmp
mov
enter
cvtpi2ps
addb
add
idivb
fimuls
fmull
pushl
cmp
sub
insl
and
imul
flds
xchg
call
sbb
adc
add
pop
hlt
push
xchg
popf
push
setns
push
or
mov
enter
les
loopne
sahf
or
sub
jnp
cmp
mov
out
add
adc
jb
int3
pop
rorb
push
pop
int
mov
stos
pushf
jmp
push
dec
ret
je
jnp
or
vmovaps
loopne
loopne
mov
fs
pusha
loope
push
std
add
addr16
mov
xor
imul
fcompl
cmp
fcomps
or
jl
xor
nop
sbb
and
xchg
or
pop
call
adc
push
dec
std
sbb
rolb
add
and
std
dec
and
cli
lea
pop
pop
enter
pushf
jb
fldpi
clc
add
cmp
insb
je
sbb
icebp
fcompl
sub
mov
repnz
js
pop
add
mov
lret
aad
add
add
mov
pushf
out
adc
ret
and
aaa
lcall
inc
adc
mov
or
mov
mov
add
in
push
adc
adc
push
inc
loopne
test
sub
push
xor
push
mov
pop
not
add
push
mov
xor
add
lret
mov
xor
les
fdivrs
dec
pop
addl
dec
popl
cmc
mov
push
movl
push
les
jmp
or
mov
cmpsl
cs
inc
fs
add
lods
sbb
int
shrb
mov
push
scas
sub
out
das
leave
cli
sub
mov
push
mov
add
popa
xor
jp
jno
xor
push
call
pop
ret
nop
mov
add
inc
or
and
ret
sub
ja
xchg
out
mov
cmpsb
into
cmp
add
mov
jg
jl
adc
movl
mov
sbb
sub
fdivrl
xor
in
inc
insb
and
mov
pusha
mov
xor
pushl
mov
pop
ret
in
inc
jl
sbb
inc
push
ret
test
ljmp
push
adc
pop
ret
and
inc
push
ret
add
adc
int
inc
push
add
mov
jmp
fadds
aas
lahf
lods
dec
jb
in
jg
popa
or
sahf
jns
add
add
jl
add
lret
pop
lods
loopne
pop
push
pop
hlt
add
push
pushf
add
rorb
add
mov
xor
dec
xchg
mov
inc
or
les
fs
mov
mov
shrb
mov
xchg
lock
lcall
add
jp
jae
cmp
or
cmpb
pusha
mov
out
add
mov
ficompl
mov
and
inc
popa
sarb
xchg
nop
orl
and
add
xchg
pop
mov
icebp
hlt
mov
cmpb
inc
add
gs
mov
sarb
fistpl
cltd
jnp
fwait
sub
or
imul
clc
pop
lret
subb
test
dec
fwait
sub
xchg
rorb
imul
test
xor
scas
add
xor
lods
add
or
mov
cmp
hlt
add
sbb
pop
jbe
ja
cli
mov
out
fildl
rorl
cmp
xor
js
add
fisubrs
ficompl
push
jae
stos
rolb
xor
sub
sbb
pop
das
jno
push
or
and
sub
out
pop
mov
stos
sub
and
pusha
int
sbb
mov
fisubrs
repz
clc
add
xor
enter
cmp
roll
and
pop
xchg
mov
cltd
push
dec
test
sub
push
repnz
mov
in
in
rorl
adc
pushf
xor
fadds
mov
ret
sbb
cli
dec
mov
in
xchg
aam
sbbb
rclb
lock
sarl
pusha
subb
stos
inc
jns
push
mov
pop
lret
sub
loopne
pop
jg
bswap
jl
repz
cld
xor
add
jns
and
test
jle
loopne
pop
or
inc
pusha
hlt
adc
add
add
adc
pop
into
and
mov
mov
mov
cwtl
es
sub
inc
imul
fwait
mov
sar
add
sub
lds
sbb
push
dec
jae
adc
mov
lea
adc
bound
es
sbb
dec
dec
xlat
repnz
push
add
jo
jl
inc
imul
sub
sbb
nop
and
jg
cli
sbb
pop
int3
pop
jne
daa
int
jl
jle
je
adc
add
cmp
pop
adcb
jge
scas
push
mov
xchg
jl
repnz
add
test
outsb
push
inc
pop
add
addr16
sub
sbb
jp
rcr
xchg
add
cmpsl
or
test
mov
pop
test
lahf
daa
cmovl
push
loopne
lret
jg
ret
dec
fimuls
adc
dec
push
add
inc
pop
cmp
out
in
cmpsb
push
shlb
xor
mov
aam
or
shlb
inc
add
rcrl
pop
jle
add
xor
ret
xorl
lret
js
fistpl
xchg
mov
push
mov
outsl
or
add
push
xorl
adc
inc
push
pushf
clc
bound
sbb
xchg
mov
mov
outsb
add
sub
insb
add
pop
push
lcall
jp
stos
or
call
mov
or
cs
add
cld
test
or
push
mov
cmp
gs
idivb
add
add
mov
push
add
jnp
cmp
push
add
rolb
hlt
repz
mov
rolb
lds
sbbl
jnp
popa
add
add
jle
pop
int3
sbb
faddl
es
nop
xchg
add
daa
push
sbb
and
pop
in
clc
lret
shll
sbb
shlb
cmpsb
in
mov
pop
shl
out
jb
lea
fwait
je
or
inc
sub
sbb
pop
cmpsl
mov
loop
or
mov
mov
inc
mov
lds
je
ret
popf
ds
std
jl
jo
scas
das
or
xchg
adc
ror
mov
int3
mov
xchg
inc
dec
fsubs
push
in
or
in
sti
cmpb
fisttpll
mov
dec
push
and
inc
add
add
pop
push
insl
fwait
mov
add
push
jno
or
mov
add
aas
pop
sbb
imul
push
fsts
subl
jp
loopne
fmul
push
adc
or
inc
sbb
adc
lock
xor
int
loopne
add
push
repnz
jb
add
popf
imul
movsb
loopne
idiv
pop
mov
inc
jne
add
jns
pop
out
pushf
insl
cmp
lods
pop
mov
loopne
xchg
xlat
add
sub
mov
popa
sbb
imulb
popf
add
jae
jmp
dec
pop
sbb
mov
inc
addl
cli
or
dec
cmc
sbb
dec
icebp
add
ds
hlt
add
cmp
xor
add
mov
sub
insl
jo
orl
add
test
mov
adc
add
jae
adc
out
or
rolb
leave
xor
in
psubsw
add
lret
mov
int3
out
add
int3
sbb
icebp
pop
jae
adc
sub
test
add
add
sahf
repnz
hlt
push
lea
rclb
movsb
outsb
cmp
mov
xor
xchg
lahf
mov
and
test
test
add
dec
icebp
inc
pop
int3
pushf
or
sbb
adc
shl
add
fcomp
ret
pushf
push
and
shrb
pop
sub
add
mov
add
movsl
rclb
inc
ds
push
adc
insl
add
or
sahf
das
or
mov
les
cmp
dec
cmp
add
ret
or
mov
cs
push
daa
mov
inc
add
in
cld
jl
jmp
cmp
mov
mov
outsl
aas
fcomps
push
push
add
pop
out
lods
add
push
lea
bound
pop
fwait
aas
jb
fs
sbb
jb
add
scas
sbb
push
pop
dec
or
fs
sbb
push
mov
add
mov
and
outsl
xchg
dec
cmp
gs
xchg
call
les
std
loopne
addb
pop
mov
jns
add
fsubrl
cmp
pusha
xchg
push
sbb
mov
in
sub
jge
or
daa
or
xchg
lcall
xor
jecxz
incb
add
or
xchg
lods
xchg
test
pop
xor
nop
stos
add
push
mov
jmp
data16
cmp
cmc
jnp
ss
sbb
ds
inc
or
rol
addb
pop
or
popf
cltd
push
mov
js
and
add
sub
pop
movsb
cs
push
add
test
outsb
js
out
push
les
mov
adc
dec
push
es
cli
and
loop
xor
ret
into
mov
paddsb
jne
movsb
enter
xor
push
dec
cmpb
nop
jb
add
jns
mov
mov
sahf
mov
sbb
dec
cltd
loope
aam
test
inc
and
dec
int
add
cmp
add
out
xor
push
repz
push
pop
mov
subb
xor
cwtl
xor
icebp
add
mov
andb
nop
inc
push
push
jle
inc
iret
jecxz
out
inc
mov
dec
int
cld
int3
lahf
pop
push
js
mov
lcall
sbb
dec
sub
dec
mov
add
stc
push
add
jnp
inc
mov
mov
movsb
jne
mov
xor
add
lret
pop
les
cmp
and
or
aas
add
xchg
add
add
push
jge
inc
add
adc
mov
push
lahf
pop
cmp
jbe
les
xchg
add
cltd
mov
mov
jne
sbb
aas
pusha
cmp
jae
cmp
push
cld
or
or
in
xchg
add
lods
loop
inc
call
icebp
ljmp
enter
jns
add
lds
push
cwtl
mov
frstor
add
pusha
out
hlt
fwait
adcb
pop
sub
jecxz
cmc
push
mov
push
es
lret
lods
jo
and
mov
pop
and
sbb
jle
adc
add
cmp
cld
add
es
add
sub
and
loopne
cmpsb
lea
loope
sub
jno
mov
xor
sbb
das
test
lods
aam
mov
mov
push
cld
jp
je
push
loopne
stos
sbb
clts
dec
mov
shlb
cmpsl
xor
push
push
lods
add
std
mov
sbb
add
test
lahf
sub
leave
and
dec
inc
cli
fstl
xor
nop
inc
add
das
adc
xchg
adc
sub
in
or
lret
enter
push
dec
and
popa
int3
add
cld
xchg
das
push
add
fwait
mov
rclb
ret
test
fistps
or
sahf
fnstenv
jl
mov
imul
movsb
test
pusha
inc
or
ret
rolb
mov
add
dec
mov
call
fcomps
lcall
inc
inc
aam
dec
popf
lods
daa
xchg
and
pushf
cmp
add
xchg
mov
add
adc
test
adc
lahf
sbb
add
shlb
sub
push
lahf
js
inc
add
nop
mov
setl
sbb
mov
push
fucom
movsl
mov
sub
sahf
or
xorb
cmp
loopne
mov
add
in
or
add
or
xchg
bound
mov
push
icebp
aaa
push
movsb
test
cld
testl
sub
xchg
fidivs
xchg
inc
xor
aad
pusha
iret
mov
xor
lods
mov
aaa
mov
add
scas
lcall
clc
jnp
jg
inc
add
sbb
add
clc
and
call
and
loop
clc
add
jl
cmpsl
mov
inc
fbstp
add
push
test
movsl
dec
repz
mov
mov
ja
std
adc
ret
mov
in
jg
add
push
xchg
and
push
sbb
jns
out
or
add
imul
inc
enter
std
movsl
push
inc
cmpsl
decb
dec
push
pop
jecxz
out
inc
popf
enter
js
jae
sub
in
inc
ss
fs
mov
outsl
sahf
cld
add
dec
sub
movsb
add
pop
pop
cli
adc
inc
add
int
sbb
mov
psubb
sbb
es
xchg
inc
adc
in
ljmp
lret
jne
cmpb
idivl
stc
addb
xor
pop
shrl
jmp
xchg
je
xlat
adcl
cmp
mov
in
orb
push
push
cmp
imulb
ret
clc
add
scas
fsubrl
pusha
fnstcw
mov
add
int3
and
cmp
xor
incb
push
mov
add
and
lock
adc
mov
and
cmpsb
push
loope
or
add
cmp
sub
dec
pop
or
aam
andl
jbe
and
lds
inc
pop
leave
out
add
add
iret
mov
clc
sub
mov
add
mov
inc
add
cmpb
popl
mov
sti
loope
mov
mov
jae
int3
push
icebp
jle
mov
jg
push
icebp
pop
imul
incl
add
push
movsb
les
cld
out
add
xor
jl
push
adc
sub
push
add
mov
lock
adc
popf
cmpsb
clc
mov
arpl
jo
pushf
add
add
mov
repnz
push
shrl
add
div
cmp
add
jne
pop
sbb
jbe
sub
insl
mov
mov
adc
mov
xlat
push
mov
push
jge
or
popa
fadds
js
jmp
push
mov
push
aaa
cs
outsl
push
add
sub
pusha
pop
call
rdpmc
pop
pop
mov
movsl
jne
dec
mov
js
mov
adc
sahf
adc
adcb
add
dec
and
sbb
add
popa
sub
mov
sbb
out
jg
jecxz
fistl
xchg
and
cmpsb
pusha
mov
ds
test
add
or
pop
jecxz
int3
cmpsb
ljmp
add
jp
dec
icebp
pop
mov
cmp
sbb
rorb
movsl
jl
cmpsl
adcb
cmovb
fs
mov
fldcw
bound
add
xchg
lds
add
loopne
fucomi
add
je
iret
cmp
or
push
cmpsl
sbb
int3
incl
xor
into
shll
orb
popa
add
push
add
add
mov
pop
jne
stos
adc
xchg
lea
add
add
xor
out
inc
sbb
dec
push
orb
mov
int3
dec
iret
jp
xor
pop
mov
add
push
inc
jle
fildl
ja
sahf
cmp
mov
rcrl
or
sbb
test
pusha
popf
and
mov
push
bound
add
xor
cs
add
cld
aas
scas
addb
stos
sbb
xchg
inc
add
popf
andb
stos
scas
addb
cmp
inc
add
add
mov
out
add
xchg
push
xchg
dec
cld
dec
pop
push
clc
rol
push
mov
cmp
push
add
nop
adcb
dec
lock
sbb
push
and
push
and
pop
cmpsb
inc
add
js
lods
jb
orb
dec
add
orb
lret
jno
pusha
xchg
add
xchg
mov
mov
cmp
sub
fdivrs
mov
mov
sbb
pop
mov
pop
add
add
fidivrl
cmp
cltd
mov
and
and
addr16
xchg
repz
pop
mov
loopne
and
clc
aas
outsl
push
adc
sbbb
enter
loopne
adc
dec
push
jg
clc
lds
mov
inc
adc
push
filds
repnz
je
push
mov
xchg
sub
test
push
jmp
adc
dec
sbb
and
mov
outsl
sbb
das
stos
push
push
xchg
fistl
addl
pusha
cli
or
out
mov
inc
add
inc
and
js
add
cwtl
fistps
test
push
adc
outsb
dec
test
out
das
mov
mov
add
sbb
push
sbb
fwait
add
mov
xchg
adc
inc
xchg
mov
add
dec
inc
jae
fwait
ret
add
iret
mov
mov
mov
test
jnp
pop
add
jmp
mov
ret
test
add
adc
add
ret
pusha
mov
xor
mov
loopne
pop
cltd
cld
sbb
adc
push
pop
and
arpl
imul
mov
cwtl
push
pop
outsb
inc
je
sbb
jmp
into
push
xchg
sub
push
pop
arpl
push
xor
and
pop
lods
ss
sar
mov
sub
xor
into
or
or
roll
xor
add
sub
add
insl
sub
pop
adc
xchg
cmp
xor
sbbb
fnstcw
and
jne
add
xchg
cmc
fisttpl
mov
jge
xchg
in
add
sbb
cld
jno
sbb
lods
add
loopne
mov
add
mov
scas
cltd
ds
jo
cli
add
out
mov
adc
dec
adc
adc
push
cli
push
pop
mov
loopne
sub
add
jae
mov
mov
insl
ret
sbb
lcall
jns
cmp
xchg
aam
aas
fidivl
push
mov
cs
shll
dec
sub
jo
xlat
imul
aas
inc
add
add
or
sub
jle
outsl
dec
adc
xor
adc
lods
out
add
inc
loopew
add
add
dec
jns
jae
sbb
ds
xor
xlat
cmp
ja
sarl
icebp
std
mulb
mov
in
add
inc
xlat
cmp
and
add
mov
mov
in
sub
cmp
aad
cmp
xchg
add
jno
xor
ret
les
popa
in
cmpsb
fwait
add
and
push
in
add
push
ljmp
inc
in
stos
jae
aad
or
out
push
pop
and
or
arpl
push
shrb
aaa
mov
cmpsb
mulb
adc
cmp
jle
popa
imul
lahf
mov
test
push
jmp
cltd
es
adc
adc
rorl
jb
add
mov
xlat
ja
pusha
call
add
bound
mov
insb
cwtl
in
shlb
jg
gs
xchg
pop
clc
add
nop
xchg
lahf
ret
jle
add
cmp
sub
mov
mov
xchg
add
xchg
clc
pop
or
divb
or
or
inc
in
sahf
dec
loopne,pn
test
or
test
call
loope
dec
ror
sbb
xor
jb
iret
je
das
sbb
add
sub
lea
dec
lcall
push
popa
mov
leave
add
sub
movsb
add
mov
add
and
int
ficoms
add
mov
into
aaa
mov
mov
fcomip
enter
mov
xor
mov
add
xor
movl
adc
pop
xchg
subl
test
xor
fmull
and
inc
jns
sub
outsl
adc
cmp
or
adcb
bound
ficoml
add
dec
daa
cs
call
fdivrs
invd
add
repz
mov
or
dec
bsr
fsts
add
sbb
daa
jnp
sub
out
mov
pusha
sahf
pusha
sbb
inc
mov
pop
jmp
add
ja
xchg
or
add
adc
or
pop
jae
add
lods
bswap
push
repnz
add
out
and
add
aaa
repz
push
popa
call
ret
fimull
lods
push
ljmp
js
pop
sbb
adc
inc
inc
jp
add
xchg
mov
mov
add
push
pop
mov
push
movsl
add
subb
add
cmovl
out
or
ljmp
imul
in
jl
loop
inc
push
and
call
stos
sbb
pop
mov
cmp
cmpsb
dec
or
data16
jo
xchg
cltd
xor
add
cwtl
cmc
stos
aad
scas
mov
and
data16
pop
movaps
rcll
or
cwtl
add
dec
cmp
leave
cmp
push
pop
mov
push
jbe
movsb
push
addr16
and
test
sub
mov
add
arpl
pop
pop
or
aaa
add
outsb
filds
mov
arpl
fcompl
inc
dec
imulb
xor
xchg
test
mov
fcomps
jmp
add
jecxz
addr16
fiaddl
nop
loopne
inc
movsl
xor
add
dec
mov
sbb
dec
jge
ret
cmp
cmp
flds
xor
push
add
push
xor
cmp
lods
add
xor
dec
and
jno
add
jnp
lcall
jmp
inc
repnz
add
ficoms
and
or
add
in
mov
arpl
cwtl
add
cmp
add
aad
and
in
mov
ror
inc
bound
aas
xchg
orb
jg
insb
and
add
call
dec
cmpsl
popa
push
lds
cld
jg
add
xchg
subb
out
push
add
outsb
pusha
mov
aam
jecxz
inc
xchg
pop
lret
leave
gs
mov
push
add
jbe
test
addb
repz
jecxz
loope
insl
sub
data16
addl
xor
pop
and
pop
xchg
inc
repz
mov
or
jbe
and
mov
xor
jp
add
mov
cmpsl
cmp
sub
mov
daa
sahf
jg
cltd
dec
mov
mov
xchg
fildll
mov
dec
pop
popf
xchg
or
sbb
pusha
dec
mov
mov
add
gs
imul
sti
xor
jb
test
push
xor
pop
aas
adc
out
cli
push
iret
mov
je
rcrl
or
js
dec
imul
js
sbb
lods
or
cmp
jno
sub
xchg
das
mov
adc
cltd
mov
add
sbbl
dec
test
addr16
cli
jo
cs
add
repnz
in
js
push
or
jmp
push
incl
lcall
shl
scas
jno
add
jnp
pop
nop
test
add
dec
jg
movsl
das
jmp
in
cmpsb
mov
add
push
or
sub
push
es
and
jnp
dec
add
jo
cmp
add
ss
mov
add
les
scas
add
jp
push
inc
push
fcom
cmpsb
add
sahf
jmp
and
repz
sub
pusha
sahf
and
xchg
add
sbbb
jno
xchg
or
jb
test
push
ret
or
cwtl
push
sub
xchg
pop
and
push
adc
add
fldt
popf
jno
add
pop
sahf
xor
add
jae
jl
adcb
mov
mov
out
out
adc
jp
pop
xchg
sbb
mov
inc
mov
lret
outsb
notb
mov
gs
add
lock
inc
inc
add
mov
mov
jae
pop
cmp
pop
mov
and
enter
aaa
lea
imul
add
push
cmp
hlt
dec
add
inc
lahf
insl
fmulp
out
add
jns
popf
xchg
push
fst
pop
sbb
xor
nop
inc
jne
push
jnp
jp
imul
fiadds
fwait
insl
pop
xchg
sldt
test
imul
push
dec
and
add
adc
xchg
add
mov
lock
cld
cmpsb
out
ja
jo
add
inc
test
and
mov
bound
xchg
add
or
sti
cltd
add
jl
cli
jno
mov
pop
mov
mov
xchg
or
insl
aas
mov
enter
aas
mov
inc
mov
add
fcompl
repz
cmp
xchg
dec
cmp
leave
inc
int
add
les
lock
arpl
scas
adc
fdivp
pop
add
mov
pop
int
in
lcall
push
cmp
mov
aaa
outsl
add
jnp
and
inc
js
mov
clc
mov
and
or
push
push
arpl
enter
dec
cmp
clc
daa
xchg
add
mov
lcall
dec
xor
xor
pop
lods
add
jl
add
loop
sbb
jno
addr16
cmp
int
sti
not
pop
scas
mov
xor
inc
xchg
cltd
clc
mov
lret
jmp
dec
push
pusha
adc
add
pop
cmp
popf
add
cmp
jl
hlt
or
cmp
lahf
xchg
test
push
mov
hlt
or
add
xchg
sub
setge
in
in
rolb
sub
mov
fbstp
and
jg
add
adcb
fcoml
add
dec
dec
xchg
cmovno
out
and
pop
sbbl
call
inc
pop
push
fcomps
adc
pop
dec
imul
outsb
mov
add
xchg
loopne
je
xchg
popa
leave
mov
test
rcl
aam
xchg
add
add
and
lock
sbb
sub
mov
adc
inc
repnz
loopne
roll
das
pop
add
dec
in
clc
mov
push
outsb
sub
mov
clc
mov
jp
mov
loop
iret
add
or
adc
out
push
test
aas
and
mov
call
push
std
ret
add
push
mov
push
clc
adc
inc
out
testb
cmpsl
dec
les
add
mov
inc
enter
adcl
fucompp
test
int
inc
mov
add
cli
aaa
or
push
prefetchw
stos
scas
jb
add
xchg
sbb
push
arpl
movsb
add
imul
mov
ja
lods
sbb
lea
pop
mov
mov
dec
and
jg
orl
mov
add
stos
mov
adc
ret
call
mov
cmp
mov
jmp
add
push
mov
xchg
fwait
xchg
fsubrl
lock
loop
mov
or
jne
cmpsb
dec
add
mov
dec
xchg
ret
and
add
outsb
jae
adc
test
jbe
cmpsb
push
add
popa
adc
stos
mov
in
jle
fistps
and
je
ret
add
mov
mov
roll
inc
rcl
jg
rcr
add
faddl
insb
lret
mov
imul
mov
mov
in
fldt
lcall
sub
pop
add
cli
cmc
dec
push
pop
jp
outsl
pop
pop
faddl
add
es
adc
pushf
sub
jbe
cmp
xlat
mov
jg
aam
adc
in
shrb
insw
and
sbb
add
in
sbb
mov
mov
add
xchg
in
push
pop
dec
inc
imul
and
add
mov
les
mov
lods
jge
adc
fs
and
in
add
sub
aas
outsb
sub
pop
sub
sti
stc
add
mov
mov
fcmovnbe
dec
loope
push
decb
nop
dec
call
cld
icebp
xchg
repz
clc
inc
bndldx
lahf
loopne
test
leave
push
add
xor
and
sti
adc
loope
mov
sub
and
stos
sahf
repz
cmp
jbe
inc
add
andb
xor
fstpt
xchg
xor
push
xchg
ss
cmpb
lret
fwait
test
cld
add
pop
insb
add
rcl
pusha
adc
sbb
sbb
and
cmpsb
xchg
arpl
stos
adc
or
lods
orl
cmp
fbld
mov
push
fsubrl
sub
in
pushl
out
cs
push
mov
adc
ret
movsl
rolb
push
add
or
push
aas
cmp
divl
sahf
orl
repnz
cmc
sub
cmp
push
add
out
ljmp
rorl
add
fsub
add
xchg
inc
and
imul
ficompl
ret
imul
cmpsl
mov
xor
and
inc
push
pop
mov
xor
pop
mov
add
add
jae
aam
int3
xor
mov
cmp
adcb
in
std
les
jp
cmpsb
in
and
pushf
dec
push
call
add
test
mov
outsb
xchg
aaa
adc
or
fidivl
shl
add
xchg
push
shrl
cmp
repnz
jnp
jns
loopne
add
sbb
cli
cmpl
jle
add
xchg
popf
xlat
push
or
add
shlb
push
xorb
repz
orl
stc
inc
cmc
add
add
inc
push
push
imul
xchg
sbb
bnd
add
cmp
add
fdivrs
and
mov
orb
jle
pop
jbe
stos
sbb
cmpsb
data16
dec
daa
inc
ltr
mov
xor
mov
data16
sub
outsl
xlat
add
sahf
in
dec
sbb
and
cmc
cmp
jp
shlb
wbinvd
fnstsw
and
fldcw
adc
mov
sub
jno
sti
cwtl
in
cmp
cld
lcall
add
push
xchg
sub
inc
cs
jbe
pop
cld
dec
outsl
subb
out
bound
out
cmp
xchg
cmpsl
push
or
sarb
mov
enter
sub
lret
out
mov
mov
cmp
je,pn
jl
mov
std
mov
sahf
test
dec
cwtl
mov
shrb
lret
loop
add
out
out
jp
push
popa
xor
pushf
rclb
jns
insl
sti
andb
testl
inc
sub
imul
lcall
lret
mov
jecxz
xchg
sub
mov
or
add
inc
pop
lods
add
clc
mov
cmp
in
loopne
lock
cmp
into
fisttpl
scas
sbb
add
movsl
xchg
gs
lcall
cmp
dec
mov
lea
adc
xor
daa
movsb
add
mov
repz
jns
test
test
scas
inc
cmp
add
cli
int
repnz
jo
inc
sub
pushf
out
sar
add
mov
pop
call
int3
shll
inc
cltd
aaa
jmp
add
es
inc
and
adc
imul
std
pop
rolb
mov
add
pusha
mov
inc
mov
adc
loope
add
stos
add
out
fsubr
stos
ror
or
daa
cltd
inc
inc
and
xchg
add
out
out
outsb
inc
adc
test
add
and
adc
ret
push
inc
xlat
pop
cli
adc
in
inc
aam
jo
pop
clc
mov
ret
or
inc
xorb
pop
dec
outsb
outsl
filds
lcall
push
push
lds
in
pop
jecxz
jl
out
sbb
rcrl
dec
mov
mov
hlt
mov
in
das
fisttps
push
jae
xor
and
add
js
cmp
ret
sub
lock
mov
jo
xchg
dec
mov
adc
or
mulb
and
mov
aas
pop
in
pop
xchg
push
push
imull
mov
aas
addb
cmp
clc
inc
mov
add
mov
mov
xorb
sbb
in
add
add
dec
cltd
into
jae
push
inc
stos
jle
in
subb
das
jo
pop
insb
les
cmp
mov
nop
ds
loopne
ja
stos
das
cwtl
inc
sbb
push
iret
ret
repz
or
sbb
out
jge
add
aas
push
outsl
sbb
in
dec
cmove
jl
arpl
xor
push
mov
shrb
xchg
cmpsl
mov
ds
test
inc
lcall
ret
cld
and
cwtl
add
loope
pop
add
mov
lcall
mov
mov
xchg
adc
pop
stc
shr
fdivrl
cmpb
outsb
fsubrp
add
dec
xchg
or
fisttps
or
aam
pushf
push
in
xchg
pushf
or
les
jno
or
je
and
dec
mov
push
add
mov
dec
xchg
cmp
jb
add
add
push
pushf
sbb
or
mov
jno
add
xchg
and
jnp
or
xchg
xlat
add
pop
cmp
repnz
or
loope
sub
push
pop
dec
cs
inc
pop
or
push
mov
iret
pop
lret
lahf
andl
cmp
push
cltd
inc
pop
inc
sub
nop
add
icebp
pop
sub
cmp
jno
xchg
cli
inc
sbb
fcom
icebp
and
or
pop
mov
fimull
lock
test
mov
mov
cmp
out
lcall
xchg
ja
xchg
mov
shrb
xor
sub
out
repz
daa
fisubs
aam
add
pop
cmp
iret
dec
inc
mov
outsb
es
js
adc
jbe
sbb
push
leave
add
bound
fnsetpm(287
lock
adc
mov
dec
cmp
add
sbb
arpl
outsl
ror
add
bound
es
loopne
int3
imul
mov
imul
pop
pop
fsubp
or
inc
cmp
push
stc
xchg
jmp
fwait
sub
fisttpl
dec
add
cmp
jbe
faddl
inc
sub
iret
add
mov
stos
add
loope
lods
dec
rcll
cmp
subb
popf
mov
jb
cmp
clc
jmp
sub
test
add
jmp
cmp
loopne
adc
out
jl
nop
es
sub
sbbb
mov
pop
addb
pop
mov
adc
out
add
out
sbb
movb
or
popa
pop
or
mov
or
xchg
cmp
cmp
addr16
sub
cli
jno
sti
mov
lock
add
aad
cwtl
lret
test
lds
sub
push
sub
cmc
loop
sarb
xlat
push
jl
cmp
push
roll
out
out
sub
loope
cld
das
nop
js
adc
pop
push
push
aam
cld
add
mov
repnz
pop
pop
inc
mov
pop
lock
add
movsl
das
iret
dec
sbb
mov
adc
cli
jo
movmskps
sbb
movsb
dec
mov
add
mov
repnz
push
arpl
add
pop
jae
mov
mov
add
jge
nop
cmp
fucomi
xor
enter
sub
movb
mov
arpl
iret
xor
xchg
adc
dec
nop
xchg
jg
sbb
ds
push
dec
mov
bound
into
mov
and
jnp
add
mov
dec
test
push
add
xorb
js
mov
jae
adc
sti
rolb
daa
in
dec
xlat
inc
dec
bound
lea
out
add
sbb
loope
xchg
add
jmp
addb
loopne
in
or
les
aaa
or
outsb
pushf
add
sbb
outsl
sbb
subb
fisubl
out
and
cmpb
dec
add
roll
add
push
outsl
hlt
jmp
mov
inc
xchg
and
add
pop
mov
and
push
sbb
loop
add
fidivrl
mov
add
call
xor
pop
pop
and
cmc
fs
and
add
add
push
enter
add
int
jmp
rolb
ret
leave
enter
add
dec
jo
jle
scas
cmp
movsl
and
dec
sbb
xor
mov
les
sub
cmp
or
add
hlt
push
fidivl
les
mov
fisubs
add
addr16
ljmp
and
adc
inc
add
cmp
sbb
mov
inc
mov
adc
sbb
add
popf
btr
iret
rclb
pop
cmpsb
sbb
and
cltd
repnz
add
addr16
mov
fisubrs
add
pop
push
fadds
imul
lcall
cmp
sub
add
call
dec
push
add
jo
xor
push
jg
pop
in
cwtl
int
mov
xor
add
pop
nop
in
sub
pop
lods
gs
add
cmp
xlat
test
adc
pop
sub
mov
nop
cwtl
push
sub
ljmp
ss
fdivrs
xchg
in
or
push
add
shlb
push
ljmp
cmp
jns
mov
repnz
outsl
ret
std
test
add
jge
mov
add
add
jns
cwtl
movsb
imul
mov
addr16
roll
push
test
mov
or
inc
push
inc
andb
sbb
xor
leave
mov
xlat
add
and
xchg
es
pop
jge
aas
sbb
xchg
xor
shlb
or
mov
lret
add
jno
push
fistl
mov
jp
mov
ljmp
mov
pop
add
mov
add
rorb
lods
daa
xchg
std
sub
jne
icebp
or
add
cmp
mov
xchg
push
loope
hlt
xchg
add
inc
push
cmpsb
sub
push
popf
lods
sbb
test
add
sub
push
add
les
out
cmp
jbe
sbb
sbb
mov
xchg
sub
mov
xor
sar
jnp
test
sarb
jne
pop
mov
inc
mov
jno
add
xchg
pop
int
gs
mov
mov
and
and
push
cld
inc
push
mov
inc
inc
xchg
mov
fidivs
pop
iret
xlat
or
add
jl
and
xor
test
pop
lds
je
outsl
scas
pop
enter
xor
sbb
inc
add
daa
cmp
add
adc
jp
insb
add
scas
push
add
lcall
or
dec
jns
imul
fwait
shlb
aam
add
pusha
adc
addb
sbb
jne
pop
sub
mov
mov
fstpl
xchg
and
add
fidivl
mov
mov
into
fs
pop
out
add
push
sub
xchg
add
mov
jge
mov
cmp
test
pop
mov
adc
jae
clc
add
and
imul
dec
dec
jo
jo
popa
push
pushf
sbb
pop
mov
add
lods
bound
add
dec
sbb
sbb
jae
add
jns
add
lret
ss
cmp
push
scas
inc
xchg
imul
incb
popa
mov
lcall
xchg
in
mov
sub
push
ljmp
test
sbb
jl
pop
sbb
add
stos
addb
add
add
xchg
cli
pusha
push
js
mov
xchg
popf
sbb
add
push
scas
call
pop
add
inc
add
xor
pusha
jae
xor
mov
add
cmp
loopne
pop
ljmp
cli
cmp
add
fmuls
pop
movsl
pusha
adcb
or
xchg
in
dec
pop
fsubl
sbbb
fsubp
pop
enter
xor
pop
mov
xor
push
xchg
xchg
int3
scas
push
loopne
push
push
nop
xchg
inc
incl
adc
xchg
xor
push
or
fucomp
or
add
cli
inc
aas
add
xchg
jl
lds
lock
pop
popf
leave
xchg
inc
lods
xor
cmp
stos
adc
dec
mov
fs
ds
lea
cmp
xchg
add
xchg
ljmp
inc
xor
and
xorl
mov
mov
es
xchg
jno
mov
dec
mov
and
cld
loopne
add
xchg
dec
jmp
fsub
inc
mov
test
inc
xchg
push
rcrl
lods
inc
or
ret
cmp
adc
and
test
negl
sub
sbb
push
sbb
xchg
add
pop
jno
push
icebp
add
mov
cmp
and
iret
test
enter
pop
and
or
mov
adc
cmp
outsb
pop
sahf
icebp
push
orb
dec
cmp
andb
lods
adc
cmp
mov
jbe
xor
sbb
adc
inc
add
outsb
pop
mov
mov
cmpsb
jne
add
add
sub
cmp
jne
mov
ret
je
xor
xor
add
jmp
imul
cmpb
jne
in
lahf
cli
pop
add
and
rcr
mov
jb
cmp
fcmovnu
nop
movsb
mov
call
push
xchg
ror
or
mov
xorl
xchg
add
sahf
xchg
ror
sub
mov
mov
add
cmpsl
inc
cltd
push
cld
outsl
aas
fiadds
dec
jno
pop
add
cwtl
sub
push
fs
call
cltd
xor
pusha
lea
orb
lcall
imul
adc
inc
sub
push
test
js
icebp
das
ss
je
rorb
dec
push
rclb
add
pop
xlat
pop
pusha
push
mov
add
movb
add
mov
fdivl
cmp
or
repz
inc
cs
addb
mov
and
clc
jo
adc
fidivs
cmp
cli
cmpsb
jl
add
addr16
add
loope
test
test
jo
cmpl
popa
loopne
jg
rcrb
rolb
in
xchg
cwtl
fwait
aas
mov
punpckhdq
and
mov
jb
add
inc
sbb
dec
cltd
mov
inc
fiadds
sti
add
stos
xor
jae
insb
inc
sub
add
pop
mov
or
add
stos
inc
in
into
xor
xorb
add
dec
or
movb
pop
add
add
loopne
lahf
call
push
xchg
std
push
jo
adc
lods
inc
in
not
pop
push
mov
lods
cmp
mov
xchg
jnp
test
daa
jle
inc
mov
loop
push
fcomps
sbbb
out
sub
ds
jno
add
sub
subb
test
mov
clc
adc
fnop
add
fwait
push
adc
pop
daa
mov
enter
cmp
in
mov
add
out
xchg
push
movsb
mov
shl
or
stos
es
in
in
or
call
out
lahf
enter
adc
scas
cmp
stos
jo
xchg
xor
xor
in
inc
cmp
das
pop
dec
lock
pop
adc
std
add
xor
inc
dec
push
pop
add
repz
clc
xor
es
jbe
adc
cmp
insl
leave
dec
sub
push
cmc
jp
adc
add
mov
sub
push
sub
bound
or
cmpsb
mov
test
stos
sub
das
in
push
mov
call
lret
mov
pusha
pop
xor
lods
push
mov
or
ja
pop
sub
pop
mov
mov
lcall
inc
dec
xor
mov
xchg
lret
int
mov
sub
mov
jle
add
shll
fdivrs
mov
add
jp
idiv
adc
test
lock
cmp
cmp
mov
jecxz,pt
or
andb
jmp
lret
aam
cs
add
sbb
sbb
cwtl
add
or
outsb
adc
pop
adc
test
in
push
lock
inc
jle
imul
pop
outsb
inc
in
hlt
and
ror
jb
aam
addl
cmp
inc
add
mov
mov
or
sub
fisttpll
adc
mov
lods
and
stos
add
dec
add
lcall
adc
jb
lods
ret
sub
inc
add
add
lret
or
add
sbb
mov
jp
imul
push
mov
lods
jo
adc
inc
adc
inc
fldcw
jecxz
add
int
adc
lret
add
mov
xor
add
jo
mov
in
add
xchg
ret
in
mov
mov
fisubs
mov
in
mov
sahf
dec
adc
add
pop
sarl
push
add
push
pushf
cmp
push
and
lcall
sbb
pop
dec
sbb
out
push
add
scas
test
add
aad
insl
js
popl
push
pop
sub
dec
xchg
dec
in
dec
jo
add
dec
xlat
add
sbb
push
incl
xchg
sbb
mov
xor
jp
sarb
dec
adc
add
sti
pop
inc
mov
and
movsl
inc
jbe
jmp
pop
sub
call
packssdw
mov
divb
dec
pop
inc
xchg
add
or
and
add
xor
cli
cmpsl
sbb
dec
lea
inc
or
pop
les
and
sti
aaa
push
pop
hlt
cld
jno
add
jp
and
ljmp
push
sub
mov
pop
mov
inc
and
xchg
fiadds
mov
mov
repz
xor
add
xlat
into
aam
pop
jns
add
mov
or
or
outsl
cmpb
pop
shlb
lret
sub
mov
or
and
scas
arpl
xchg
mov
add
punpcklwd
movl
push
cmp
out
mov
jno
sub
adc
in
mov
jbe
mov
adc
pop
cld
jno
sbb
inc
cmpsb
enter
push
dec
inc
add
les
je
sub
cmp
jne
push
sti
lds
xchg
daa
or
loopne
inc
sbb
clc
xor
xor
mov
test
aam
pusha
fstl
shlb
add
les
dec
mov
ja
push
add
repnz
cmp
aaa
stos
add
push
xchg
imul
xor
shlb
ret
push
add
ljmp
push
dec
sbb
add
into
add
loop
imul
adc
icebp
in
in
cmpb
and
mov
popa
mov
rorl
add
mov
adc
lret
add
jbe
imul
lahf
out
out
jecxz
testl
cmpsl
popf
sbb
sbb
movsl
in
je
sar
cmp
out
xor
dec
jo
lods
rclb
test
movb
mov
outsb
out
xchg
cwtl
stos
pushf
pusha
add
ds
int
cmp
or
loop
xor
daa
ficompl
xchg
adc
sub
or
add
jb
cmp
sub
int
pop
in
pop
xor
jmp
imul
push
sbb
mov
jle
test
mov
and
in
loopne
dec
lds
sub
jmp
mov
icebp
pushf
sub
mov
jno
jbe
cmpb
pushf
or
mov
cmpb
rolb
adcl
add
sub
add
mov
dec
add
outsb
dec
stos
lcall
jmp
neg
sub
filds
js
jns
jp
xlat
pop
adc
inc
cld
in
jp
add
cltd
ret
idiv
loopne
xchg
mov
add
push
or
xchg
rolb
or
xor
add
jle
and
mov
add
sbbb
pminub
push
xchg
in
cwtl
add
fsts
cld
xor
int3
sar
add
out
orb
push
js
movq
nop
iret
pusha
into
subl
es
dec
xor
jg
sub
xor
stc
test
cwtl
sbb
add
pushf
and
pop
or
add
cmc
lea
aas
shll
push
std
pop
pop
cmp
mov
push
or
icebp
xor
in
out
dec
jo
or
pop
cld
sub
dec
inc
xor
into
add
lret
cmp
stos
mov
in
pop
push
mov
jo
add
rcrb
stc
jle
sub
mov
pop
je
xchg
pop
or
xchg
jecxz
les
dec
add
mov
push
mov
xchg
xlat
dec
and
add
test
jae
inc
cli
mov
push
xchg
jecxz
dec
add
dec
sbb
fstl
imul
sub
adc
push
cld
icebp
add
push
push
push
jg
cmp
rorl
mov
cmp
pusha
test
mov
add
lcall
call
fcomps
add
pop
jg
bound
cmp
push
inc
mov
filds
movsb
mov
in
clc
imul
dec
rcrb
insl
xchg
mov
cmp
xlat
and
lret
cmpb
adcl
mov
jge
cld
adc
aam
pop
int3
jmp
mov
rcrb
std
imul
mov
jbe
add
and
insl
ss
add
mov
push
mov
lahf
and
sub
js
sti
addb
fbstp
xor
lock
add
in
add
out
push
idiv
cld
loop
and
rolb
inc
jle
add
jno
mov
aas
iret
rolb
and
add
xchg
mov
orl
xchg
adc
xor
inc
inc
dec
pop
cmp
add
loopne
cmp
dec
sbb
lahf
inc
mov
add
sahf
sbb
add
lea
jge
add
inc
bndldx
push
cmp
jg
or
adc
mov
cmp
test
les
push
add
repz
add
rorl
push
ret
mov
jns
adc
fcoml
add
adc
fstpl
add
scas
mov
idivb
cs
dec
jae
dec
add
mov
jbe
lcall
js
xor
add
cmp
mov
inc
dec
outsl
aas
ret
mov
dec
lods
sahf
add
dec
mov
rolb
push
rorl
shl
in
jb
sbb
pop
lret
cmp
jg
xor
mov
add
dec
negb
and
fists
xor
ja
adc
mov
xor
inc
cmp
inc
mov
enter
imul
mov
bound
push
mull
popf
add
jno
loopne
jecxz
dec
add
xor
and
jne
fistl
add
inc
jns
xor
adc
xchg
sub
inc
loope
movsb
mov
add
bound
cs
das
mov
jb
push
rcr
hlt
cmp
mov
imulb
lahf
in
ja
mov
aad
inc
mov
mov
add
pusha
dec
mov
push
pusha
or
and
sbb
sbbb
add
xchg
aas
fs
push
cmp
stc
add
scas
lock
xor
mov
push
sbb
add
aad
cmp
repz
shl
insb
pushf
add
sarl
aaa
dec
push
add
sub
cwtl
fistl
sbb
es
add
jg
flds
adc
dec
arpl
mov
xor
sub
or
add
pop
xchg
shrb
mov
ds
jns
paddd
out
pop
and
add
arpl
xor
dec
or
std
loop
adc
mov
xchg
mov
fdivrl
arpl
sbb
scas
dec
dec
dec
cwtl
loop
popf
push
sub
xchg
sub
xor
sbb
call
les
sarb
add
add
sbb
mov
repz
rolb
inc
add
push
data16
add
sub
adc
lock
pop
and
scas
loope
sbb
pop
fs
fcoml
sbb
pop
push
mov
call
mov
add
xchg
xchg
sub
fisttps
cli
add
loope
fdivs
lea
hlt
subb
jns
add
inc
test
mov
aaa
mov
sub
cli
pop
stc
inc
test
cltd
xchg
add
dec
push
xlat
in
push
mov
and
jecxz
dec
push
imul
pop
icebp
fmuls
cltd
sbb
rcll
add
lret
call
sbb
dec
shlb
adc
js
cmc
xor
push
and
mov
js
dec
xor
and
push
pop
and
mov
sbbl
push
mov
push
xor
and
test
fidivs
sbb
cmp
sub
fimull
or
adc
shl
or
xchg
push
rcrb
push
fldl
xchg
insl
cmp
add
inc
imul
pop
jl
hlt
je
add
rorb
and
xor
loopne
add
xchg
add
mov
ja
mov
int3
popa
and
ds
mov
pop
arpl
loopne
leave
pop
rcrl
lods
cmp
add
les
add
mov
adc
mov
and
mov
xor
mov
add
cli
adc
or
cmp
out
jecxz
inc
stc
int3
loope
jg
rorb
aas
mov
testb
bound
mov
xor
xor
xor
popa
fisubrs
bound
js
adc
cmpsb
and
mov
xor
mov
push
in
xor
in
addb
mov
sub
aas
jge
test
test
int3
pop
add
jmp
fucomp
add
dec
jg
fwait
and
add
xchg
add
shr
dec
popa
das
inc
add
pop
jecxz
sbb
cmp
xor
adc
cmp
dec
inc
movsb
xor
mov
xor
test
push
xchg
add
test
mov
mov
or
in
adc
jmp
rclb
in
aad
iret
jecxz
push
sbb
pop
andl
add
and
sub
roll
mov
sti
imul
xchg
shll
cmp
loopne
cmp
jns
add
mov
adc
dec
mov
imul
dec
push
lock
outsl
cmp
loope
cli
sub
dec
jg
add
pop
mov
std
sub
gs
xchg
push
scas
inc
test
andb
push
cmp
mov
ds
insb
pop
sbb
add
pop
push
les
cltd
pop
stos
ja
push
aam
ss
and
mov
adc
into
dec
rclb
rclb
adc
inc
add
dec
pop
fdivr
mov
dec
sub
stos
adc
std
pop
jp
punpckhbw
cmp
inc
and
outsb
cmp
loop
inc
pop
ret
dec
or
and
lods
insl
in
add
adc
add
push
test
imul
orb
jno
mov
adc
add
pop
sbb
mov
xorl
adc
or
and
xchg
int
mov
lods
inc
lret
add
jecxz
push
mov
pop
mov
cmp
sarl
fs
pusha
int
and
lock
add
mov
and
sub
loopne
fstpl
movsl
add
xchg
lea
adc
inc
insb
push
adc
out
scas
and
subb
xchg
add
stc
cmp
fwait
lock
pop
inc
xchg
cmp
add
sti
mov
jecxz
or
sub
movsl
xor
test
mov
dec
push
shl
add
xor
lods
jg
fldenv
jae
add
mov
add
cmpsl
mov
cmp
in
popf
sbb
subb
sbb
leave
sub
or
add
xchg
pop
inc
push
or
or
cmp
sub
mov
inc
mov
add
jb
movsl
add
fdivl
or
inc
inc
mov
sbb
jl
pop
cmp
add
lcall
fisttps
pop
popa
icebp
jmp
mov
mov
cmpsl
dec
push
imul
cmp
sbb
in
and
sbb
shrl
mov
add
ret
mov
xor
pop
hlt
xchg
mov
push
add
stos
mov
add
pushf
mov
ss
pop
cmp
add
es
repz
enter
rcrb
and
popa
rol
cwtl
cmp
ret
add
pop
add
cmpsb
add
ljmp
xchg
addl
cmp
sbb
jbe
add
xchg
cwtl
hlt
add
sub
int3
mov
sub
hlt
ds
fs
shlb
pusha
testb
adc
dec
pop
dec
dec
cmp
fs
cli
push
in
inc
dec
add
dec
jmp
pop
jno
addl
testl
jg
xchg
cmp
cmpsl
jp
repnz
cmp
iret
leave
orb
gs
pop
dec
cmpl
andps
dec
fneni(8087
jg
loope
push
cmp
addb
fsubs
ret
mov
mov
lock
jle
dec
or
and
pusha
push
jg
sbb
inc
fdivrs
xor
pop
sbb
mov
add
push
inc
cmp
cmpsl
sbb
mov
sub
imul
mov
jns,pt
cmp
rol
push
pop
pusha
push
lds
cmpsl
ret
aad
sarb
add
fwait
int
inc
popa
pop
add
das
arpl
enter
pop
add
addr16
rorb
outsb
push
xor
in
icebp
add
pop
mov
adc
mov
adcb
lcall
movl
fsubl
mov
mov
in
adc
cmp
sbb
adc
cmp
shlb
cmp
in
sub
jmp
mov
push
outsb
cltd
cmp
fcompl
jns
inc
ret
inc
in
fbld
scas
add
cmp
je
in
int3
dec
icebp
fsts
dec
add
cmp
cmpsl
in
fistpll
arpl
xorl
or
xor
popf
insl
fcmovbe
mov
addb
icebp
call
pop
add
push
mov
add
int
add
dec
or
clc
jb
pop
cmp
and
sbb
and
mov
outsb
jae
out
iret
roll
and
subb
push
and
xchg
imul
cmp
mov
mov
add
pop
push
dec
inc
add
stc
jmp
jb
es
hlt
jge
mov
iret
cmp
shrl
add
inc
gs
xchg
push
ret
seto
fcmovne
shlb
cli
data16
decb
mov
or
pop
leave
pop
and
fidivl
mov
lahf
or
ret
add
cltd
mov
mov
stos
jmp
test
add
faddl
jnp
ljmp
inc
sbb
and
dec
xor
jmp
test
test
jg
mov
adc
push
es
fbld
push
repz
cltd
and
sbb
jo
rcrl
lret
inc
jae
filds
add
outsb
and
arpl
add
test
dec
js
adc
push
push
fldt
jge
add
push
xchg
sahf
dec
mov
or
pop
push
test
sub
add
enter
popa
dec
add
push
movsb
push
add
lcall
ds
test
rclb
test
pusha
clc
xorb
pop
add
push
es
and
sbb
sti
add
pop
add
loopne
mov
clc
cmp
ret
mov
sbb
loop
sti
push
push
dec
jmp
xor
faddl
loopne
mov
and
ret
rol
cmp
mov
add
ror
js
int3
jl
pop
std
gs
mov
add
mov
addr16
add
jmp
jae
lods
sbb
rorb
in
es
add
sub
fdivrs
sbb
pop
adc
pop
xor
mov
cmp
ds
push
shll
cld
add
or
jae
les
icebp
lret
add
jle
add
cmp
pand
pop
xchg
add
mov
rolb
jo
loop
and
fdivrs
stos
add
repnz
scas
add
ss
add
push
pushf
sbb
loopne
xchg
mov
sbb
mov
scas
addl
mov
push
enter
out
sub
in
mov
inc
lret
xor
mov
mov
add
and
xor
mov
and
gs
push
cltd
add
xor
sub
loopne
add
mov
in
adc
mov
add
mov
mov
push
dec
jge
daa
pop
adcl
decl
packuswb
movsb
mov
cli
xor
pop
cmp
push
add
add
in
in
mov
dec
jp
add
stc
add
sbb
cli
cmpb
lret
leave
jb
add
out
mov
or
movsb
sbb
mov
ljmp
inc
cld
orb
xchg
add
dec
or
insb
xor
push
push
jg
or
les
movsb
mov
add
mov
mov
scas
pop
add
cmp
roll
ret
pop
pop
push
icebp
imul
push
xor
stc
mov
dec
mov
repz
xor
jnp
fdivl
sub
push
add
inc
xchg
push
cmp
test
scas
add
mov
inc
sbbl
cmp
loopne
fwait
mov
insl
add
repz
das
aas
adc
aad
sbb
inc
inc
popf
cltd
push
ja
add
jmp
or
jle
pop
xchg
jno
in
daa
cmpsb
pop
mov
jae
add
push
out
arpl
push
pop
pop
sarb
cmpb
sub
pop
add
fisubl
incb
lods
pop
mov
and
adcb
add
in
call
or
jae
add
xor
sarb
jl
add
sbb
lret
lock
add
or
xor
mov
hlt
movb
dec
xchg
cmp
jge
movaps
mov
jg
xchg
mov
cmp
dec
xchg
or
in
inc
mov
push
inc
repnz
add
jo
jb
cwtl
dec
sarb
cmp
data16
call
in
es
lret
fimuls
sbb
pop
inc
add
cmp
mov
sub
jl
insl
cmp
mov
jle
dec
jnp
lods
pusha
sbb
sbb
push
push
shlb
adc
jmp
adc
mov
xchg
mov
faddl
adc
and
les
outsl
cmp
lock
into
push
sbb
adc
jb
sbb
imul
pop
cltd
fcoml
and
jl
add
popf
int3
mov
repz
mov
dec
popa
and
rcrl
lock
add
push
movsb
js
mov
mov
xchg
rolb
add
fldcw
mov
xor
scas
sbbb
imul
out
adc
add
outsb
movsl
pusha
aam
add
xchg
xor
insb
pop
cmpl
data16
and
lock
adc
sub
xchg
inc
cmp
shrl
aas
add
xchg
mov
xor
cmp
add
pushf
cmpb
repnz
inc
inc
jne
lods
scas
je
adc
adcl
push
xor
imul
push
push
mov
data16
ret
scas
pop
mov
aad
sti
dec
push
test
mov
mov
add
loop
outsl
add
outsb
test
dec
dec
add
std
xlat
movsl
sbb
mov
cmp
mov
pop
add
and
ror
add
push
popa
insl
scas
jae
add
adc
push
add
or
outsb
cmp
sbbb
pusha
xor
add
in
lock
mov
movsl
add
test
mov
mov
add
xor
sti
leave
push
and
adc
mov
push
es
jbe
les
add
iret
scas
cmp
mov
add
pop
out
cmp
sbb
lcall
icebp
ror
repnz
mov
add
fdivs
inc
sub
and
jns
sub
les
imul
push
pop
xchg
add
cmp
mov
dec
loopne
in
sbb
pop
sub
mov
pop
dec
add
ja
add
nopl
push
xchg
sub
leave
push
pop
inc
adc
repz
mov
add
imul
insb
filds
add
aaa
sub
mov
dec
pop
jno
test
jecxz
add
out
xchg
add
fsubp
add
push
mov
lahf
test
mov
cmpsl
and
add
shlb
push
lret
add
jmp
jge
dec
outsb
dec
jecxz
flds
mov
clc
cmpsb
insl
divb
jb
jne
mov
aaa
adc
and
xchg
or
jl
push
inc
mov
pushf
add
jae
mov
xor
or
cli
pusha
sbbl
mov
clc
arpl
jecxz
or
dec
push
add
imul
stos
int
cmp
or
add
push
pop
hlt
dec
lock
jne
cld
add
pcmpgtb
mov
out
rolb
push
lcall
repz
mov
push
add
pop
xchg
pop
je
enter
and
push
mov
out
pushf
insb
add
sbbl
rcrb
ss
cvtps2pi
and
cmp
dec
orl
add
sahf
scas
test
repz
addb
sub
mov
cmp
jl
lods
fstl
mov
mov
jns
add
mov
fs
push
mov
lcall
cmp
fwait
pushf
jns
add
pop
jge
adcb
outsb
iret
cmp
add
insb
mov
add
jnp
outsb
and
inc
repz
cmc
psubsw
lods
jb
pop
loopne
mov
bnd
loop
add
fadd
outsb
outsl
inc
ret
add
dec
sbb
jo
sbb
mov
mov
js
push
sar
sub
dec
movsb
cmpsl
inc
jae
adc
outsl
jns
add
add
cmc
shlb
sub
outsl
pop
test
leave
cltd
xorb
xor
fadds
pop
xor
test
mov
cli
add
mov
pop
dec
addb
inc
ror
ffree
sub
stc
cmpsl
add
addl
push
call
and
fisubs
loopne
outsb
sbb
call
xor
xchg
push
push
je
pop
inc
lea
lret
into
dec
add
pusha
rcl
enter
push
adcb
loopne
mov
or
add
jmp
punpckhwd
cmpsl
ror
das
jg
add
stc
mov
jae
fstps
iret
pop
adc
adcb
out
xchg
mov
xchg
lret
shrb
test
ja
movsl
es
mov
addl
addr16
lock
pop
add
je,pt
sbb
adc
outsb
pop
daa
sub
fistpll
and
cmp
sbb
in
in
add
lock
mov
xchg
adc
xor
add
mov
daa
enter
das
leave
lock
add
mov
mov
add
push
mov
adcb
cmpsb
add
sbb
dec
and
dec
mov
iret
jnp
adc
dec
jo
adc
js
ds
in
flds
pop
push
mov
scas
mov
ficoms
pop
popa
lahf
xchg
xchg
sbb
xchg
imul
fstps
add
jmp
std
sar
cmpsb
add
mov
lret
add
sbb
pop
jo
mov
mov
or
mov
cmp
add
call
jnp
or
add
pop
inc
iret
inc
stos
loopne
sbb
sbb
rcrb
add
inc
jmp
fdiv
ds
add
adc
call
repnz
jbe
jle
dec
and
jg
push
nop
jo
je
add
adc
dec
mov
add
daa
dec
dec
call
cli
mov
xorb
add
or
int3
xor
xchg
lock
dec
clc
pop
sub
addb
add
sbb
push
pop
sbb
cmc
add
cltd
es
add
dec
fsts
add
jbe
push
mov
fcmovb
push
mov
mov
pop
cmpsb
adc
pop
out
add
sub
jge
pop
daa
inc
ud0
sub
jmp
add
xchg
and
int3
and
add
dec
int3
sub
icebp
insl
mov
mov
jmp
jnp
push
mov
mov
push
jl
lret
cltd
pop
inc
sbb
add
dec
addb
mov
add
cli
cmp
add
gs
add
scas
cmp
add
push
inc
loopne
xor
or
insb
iret
aad
int3
lea
add
fidivl
mov
movsl
scas
lods
or
mov
mov
mov
lds
add
call
mov
jns
and
lahf
jle
lret
and
add
pop
xchg
add
add
xchg
push
dec
out
idivb
js
subb
test
xlat
fs
jne
and
cmp
lcall
add
sahf
mov
je
popa
jne
inc
add
int3
dec
test
push
push
or
inc
fwait
adc
mov
jp
popa
gs
sbb
mov
insb
sbb
stos
sub
dec
cwtl
imul
js
sti
fisttpl
cmpb
mov
test
jae
fidivrs
mov
test
mov
dec
popa
and
adc
dec
push
add
cmc
outsl
jae
iret
xor
loopne
mov
jecxz
jg
sbb
sbbb
push
shll
or
adc
movl
ljmp
out
pushf
scas
push
push
pusha
add
fstl
add
mov
pushl
add
fneni(8087
pop
nop
or
pop
add
xchg
or
sbb
pop
cmp
insb
sar
repz
inc
lret
subb
out
sbb
dec
mov
sbb
inc
addl
push
ja
add
and
xchg
xchg
pop
add
in
out
movsb
cmpsb
jecxz
js
pop
adc
xor
add
or
inc
mov
addr16
lods
sub
faddl
mov
les
add
mov
test
loope
loope
cmp
push
pop
ja
subb
mov
lods
and
pop
push
xor
outsb
cmpsl
lret
xchg
pop
int
and
out
adc
aad
and
pushf
or
push
push
bound
pop
dec
icebp
shr
add
ljmp
cwtl
adc
jl
add
push
xor
mov
hlt
cmp
arpl
lea
xchg
movsl
pop
in
popf
nop
aad
push
mov
jg
add
fisubl
mov
cmp
add
push
xchg
pop
je
nopl
cmovg
add
or
arpl
out
test
ret
jbe
cmc
rorb
cld
add
jno
and
mov
push
lods
insb
add
lods
push
dec
mov
cmp
adc
xor
jb
pop
movsl
fcomps
pmuludq
cwtl
pop
inc
sbb
loopne
or
jge
add
dec
dec
lahf
popf
push
add
insb
cmp
cltd
pop
mov
mov
in
fcompl
inc
dec
cmpsb
sbb
mov
stc
fsubrl
xor
mov
bound
xor
clc
mov
rclb
sbb
or
test
mov
dec
cmp
xchg
mov
push
dec
andb
jb
mov
add
cmpb
lock
ds
popa
xorl
dec
nop
lret
pop
leave
cmp
cli
sub
and
fiaddl
hlt
and
enter
outsb
aad
leave
cmpsb
push
test
jne,pt
orb
in
pop
dec
push
sbb
xchg
cmp
bound
popf
jae
push
rcrb
dec
sbb
inc
insl
jmp
rclb
sbb
xlat
inc
xor
xorb
add
test
fmul
add
xor
pop
lret
fs
cmpsl
add
andl
jge
jmp
enter
shrb
shll
sbb
push
fs
mov
es
pop
inc
sahf
adc
out
jle
inc
repz
mov
test
add
cmp
filds
pushf
repnz
push
rol
fnop
imul
repz
and
add
ficoml
sbb
cmc
pop
add
bound
pushf
fwait
pop
outsb
pop
mov
mov
pop
add
mov
loop
add
enter
push
lods
jmp
cmc
jge
adc
addb
in
cmp
add
or
insl
mov
aam
push
gs
jle
nop
add
sub
sub
fs
jbe
cwtl
jmp
hlt
loop
stos
in
fsubrs
outsb
gs
mov
mov
addb
pop
pusha
pop
and
in
xchg
stos
int3
or
adc
pop
fildll
imul
xorl
cmpsb
ss
jns
adc
shr
push
inc
fst
shlb
jp,pt
dec
mov
fidivs
adc
or
dec
push
cmp
dec
cs
xorb
add
std
push
sub
enter
push
add
cmpb
test
loop
add
orl
movl
pop
out
nop
sub
pop
fwait
add
test
out
fiaddl
loopne
insl
int
add
push
or
std
mov
adc
cmp
ret
out
insb
add
hlt
inc
lcall
mov
cli
jo
ret
cmc
addb
add
dec
mov
leave
add
lds
cmpb
add
push
cmp
ds
lds
dec
adc
add
mov
mov
pop
adc
sub
add
aas
add
cwtl
movsb
shrb
inc
mov
and
push
xchg
les
cmpsl
jbe
add
push
xchg
sti
add
loopne
ljmp
iret
mov
inc
sbb
stos
inc
inc
inc
add
xor
pushf
dec
lods
cmc
jl
cli
iret
add
xlat
and
aas
pop
push
lret
in
scas
rorb
inc
mov
jmp
cld
sbb
pop
les
lock
sub
and
mov
push
movsl
push
adc
test
adc
jo
add
add
jns
adc
in
push
out
and
ret
mov
mov
add
aas
push
lcall
fsubrl
xor
subb
sahf
sbb
inc
dec
push
pop
cmp
cmpsb
and
jle
test
and
or
aad
push
mov
inc
lea
jae
pop
cli
jno
into
gs
adc
add
add
inc
or
cwtl
jle
add
mov
pavgb
jp
inc
rcr
add
add
in
dec
add
push
fwait
stos
add
or
mov
getsec
or
xor
mov
adc
inc
shl
daa
add
inc
rcll
mov
movsb
adc
hlt
sub
xor
shll
add
mov
hlt
cwtl
fldenv
mov
add
lahf
mov
loopne
enter
fisubrl
sbb
jbe
mov
or
cwtl
inc
test
xchg
das
jmp
and
add
xchg
adcb
fisttps
adc
rclb
in
xchg
add
add
imul
hlt
mov
test
gs
icebp
add
mov
add
scas
test
out
outsb
mov
or
int
cmp
imul
add
cmp
decb
mov
mov
push
jo
enter
adc
jnp
movsb
jbe
cwtl
out
add
adc
outsl
dec
bound
pop
fdivp
mull
add
cli
xor
add
adc
ss
sahf
mov
je
add
jle
pop
xchg
sbb
fisubs
pop
addb
sbb
add
lret
add
mov
or
jne
xor
xor
inc
or
add
int3
mov
ljmp
lods
dec
js
ljmp
pop
or
mov
mov
push
sbb
mov
mov
sub
lldt
fimuls
rcrb
push
dec
pop
jl
ret
hlt
fs
push
push
mov
sub
jo
add
repnz
dec
cmpsb
add
adc
cmpsl
jnp
mov
shrb
outsb
int3
pop
mov
pop
jmp
push
rorl
add
inc
mov
jb
sub
jg
inc
inc
add
sub
xor
fcom
inc
and
inc
mov
jmp
and
pop
add
jmp
int
add
jno
sti
and
sub
dec
sarb
jns
rclb
add
idivb
imulb
insl
outsl
lock
inc
leave
call
xor
test
pop
inc
add
adc
mov
inc
xchg
cmp
cmp
adc
pop
sbb
jns
mov
jg
popa
jmp
test
pop
jbe
and
js
hlt
nop
add
cs
lea
adc
out
lfs
leave
loop
and
out
xchg
xorb
inc
mov
xor
movsl
test
jg
inc
shll
dec
add
inc
setb
filds
pop
std
outsb
mov
into
xor
push
lret
mov
pop
insl
nop
mov
inc
negl
jns
and
roll
push
push
fsubrs
and
arpl
mov
push
add
add
add
mov
sub
cld
std
fdivrs
lcall
inc
in
clc
and
xor
add
mov
add
sbbb
fdivrl
cmp
fcomps
add
rorb
add
das
and
fstl
repnz
outsl
and
popa
sub
xchg
add
shl
cmp
out
shl
xor
add
aas
mov
add
sub
fsub
or
ds
pop
push
inc
add
or
dec
push
dec
int
add
loopne
sbb
add
and
mov
rclb
pusha
ljmp
ret
jmp
lods
add
out
adc
test
or
faddl
xchg
sbb
fists
and
add
inc
pop
cmp
lret
popa
mov
test
fcoml
push
add
jae
and
xchg
add
fnstsw
je
dec
es
shl
jae
jo
add
leave
outsl
enter
call
inc
lret
jmp
js
add
jo
cmpsl
mulb
and
mov
add
sbb
cltd
pop
xor
mov
or
faddl
into
popf
jns
mov
stc
add
nop
mov
push
push
add
xor
pop
and
fiadds
jne
mov
or
add
mov
push
movaps
and
add
pop
mov
hlt
push
mov
lret
jmp
add
mov
into
sahf
mov
stos
xlat
jge
cmp
roll
xchg
mov
jo
rcl
add
inc
repz
dec
mov
add
hlt
mov
mov
pop
dec
add
jmp
decb
leave
out
mov
xor
add
mov
sub
push
or
icebp
jbe
iret
xor
mov
push
adc
movsl
lods
cmp
add
pop
mov
ret
xchg
dec
push
lock
xchg
xor
scas
adcl
xlat
adc
sbb
add
jns
rcrb
in
inc
sbb
xor
mov
inc
ss
jns
and
frstor
popa
aad
roll
dec
push
cli
dec
in
and
add
fxch
add
xchg
imul
enter
shrl
nop
jle
pop
scas
mov
jp
cli
int3
add
mov
mov
add
cld
jmp
and
ds
mov
adc
les
popl
cs
cli
cli
data16
decl
xor
and
push
sub
sti
dec
out
aaa
shll
sbb
jo
or
pushf
cmpl
dec
fidivrs
xor
stos
xchg
rcrl
and
add
movsb
pop
insl
gs
push
popf
add
jp
call
jg,pt
les
xor
in
add
idivl
imul
jp
add
add
xor
sub
add
outsb
icebp
subl
loopne
repz
add
rorb
adc
sbb
dec
xor
add
jbe
xchg
xchg
xor
push
outsb
popf
or
dec
lock
jle
add
xor
negb
repnz
clc
add
fs
push
lock
ret
roll
xor
or
inc
add
in
dec
mov
imul
mov
dec
pop
dec
xor
into
mov
ret
jae
negl
loopne
mov
push
add
shl
filds
xor
pop
syscall
pop
add
inc
hlt
xchg
xchg
or
popf
icebp
ljmp
mov
cltd
mov
mov
mov
in
stos
cmp
addb
lock
loopne
xor
cmp
adc
shll
iret
jp
aas
jbe
push
pop
xchg
sub
sub
jge
add
test
cwtl
stos
add
sub
repnz
sub
adcb
jecxz
test
adc
sub
fimuls
or
jnp
ud0
jbe
mov
mov
sbbb
pusha
pop
jmp
pop
ficomps
push
add
and
loop
add
je
cmp
pop
out
mov
pop
add
dec
mov
xor
inc
add
and
out
push
sub
push
jl
test
sbb
or
mov
pop
mov
jp
cmp
sbb
aad
adc
add
push
add
ret
sub
repnz
testb
xchg
ds
add
call
dec
add
fmul
ret
and
movsb
mov
fisttpll
push
out
mov
and
shrl
loop
and
movb
orl
push
and
push
mov
lea
jb
pop
sub
or
fiaddl
add
mov
and
cmp
into
xchg
jecxz
incl
xchg
out
add
lock
inc
ret
mov
notb
add
ljmp
jmp
pop
loope
add
enter
imul
dec
and
add
incl
xorb
cmpsb
lea
clc
je
mov
lock
xchg
bound
lfs
xor
mov
xchg
scas
dec
inc
sbb
mov
hlt
ds
dec
sbb
sbb
add
icebp
idivb
enter
mov
dec
jae
sbb
adc
add
push
iret
adc
popf
rorb
push
lea
negb
add
sbb
push
sbb
add
adc
inc
inc
and
cwtl
das
mov
cmp
add
pop
daa
pop
std
movsl
cmc
pop
pop
mov
rcll
leave
mov
add
pop
fsubs
call
xor
push
nop
inc
ffreep
adc
pop
add
add
loop
jns,pn
mov
mov
and
ret
add
rclb
loopne
add
add
adc
jmp
add
pop
pushf
mov
cmpsl
xchg
push
inc
sub
add
jge
xorb
mov
sbb
inc
mov
pop
cmp
cld
sbb
into
push
jge
cmc
data16
pop
add
lcall
pushf
jns
test
fildl
and
jbe
add
test
cmpb
imul
add
cmp
jle
daa
in
add
ss
andl
movsb
je
negb
sub
sub
xchg
lea
mov
cmp
mov
test
imul
scas
xor
cmp
jns
add
shll
dec
push
add
js
add
les
sbb
outsb
jb
fldenv
fcmovb
push
or
jl
pop
sbb
orl
in
and
cmpsb
xor
jl
popf
add
xchg
push
inc
int
lea
pop
fcmovnb
and
add
jecxz
push
pop
stos
in
pop
test
inc
sub
rorb
pushf
testb
sub
dec
cltd
dec
mov
mov
shlb
pop
mov
push
in
add
loop
rclb
push
js
jb
andb
loope
and
mov
dec
pop
add
je
insl
cmp
jl
add
push
adc
xchg
lret
mov
in
xchg
push
add
insl
lret
xor
add
cmp
adc
add
add
pop
data16
loopne
shrb
mov
xchg
pop
out
inc
add
push
push
inc
cmp
mov
cmp
out
pushf
leave
cmp
push
cmp
add
sbb
jb
add
and
enter
cld
mov
xchg
jge
cmp
cmp
pop
or
pop
dec
mov
push
lret
xchg
adc
and
mov
inc
ret
dec
les
std
mov
out
add
mov
add
and
cmc
xlat
add
sub
sbb
xor
jmp
adc
cmp
hlt
loopne
add
test
ret
add
les
push
jno
xchg
roll
push
lret
push
jo
jp
or
dec
bound
push
rolb
test
sbb
in
add
cltd
cmp
aaa
add
or
add
inc
lds
mov
ds
mov
push
push
xor
and
ret
add
call
and
leave
cmp
ret
sti
fists
mov
xchg
add
shlb
fcoml
cmp
sbb
add
cwtl
data16
add
adc
mov
mov
andl
je
ljmp
pop
mov
xchg
fdivs
jns
stc
jo
and
std
add
mov
dec
cwtl
stos
add
icebp
xchg
jbe
mov
clc
add
mov
lcall
cmp
or
jb
add
sub
add
and
test
jmp
cmp
push
add
clc
add
popa
inc
inc
cmp
jmp
das
into
lock
mov
sarl
pop
add
in
xchg
mov
insl
push
outsl
sbb
in
out
push
cwtl
add
in
mov
mov
cmpb
cld
push
add
mov
mov
sub
dec
inc
popa
mov
in
aas
aad
jne
mov
int
or
ret
outsl
cli
loopne
aaa
push
sub
stos
mov
hlt
jne
pop
add
rolb
rcr
pusha
sbb
mov
imul
and
call
sahf
jns
inc
in
xchg
mov
sbb
jae
pop
add
std
lock
jb
add
add
mov
das
arpl
cmp
add
scas
jno
sub
pusha
fmuls
fbstp
add
lods
sub
or
repz
ds
add
cld
js
cmpsb
in
adc
mov
sbbb
lea
add
popa
mov
ret
add
mov
add
negl
add
mov
cmp
adc
ja
add
inc
inc
mov
jle
adc
jl
add
pop
mov
xor
rorb
fidivrl
loopne
mov
push
jo
jge
add
cmpb
adc
mov
inc
inc
aam
rclb
cmp
das
and
repz
rolb
imul
scas
and
inc
jge
fildl
movsb
adc
mov
int3
stos
dec
xchg
cld
add
daa
mov
add
int
jns
adc
xchg
or
add
rcll
mov
hlt
cltd
mov
lock
add
je
ret
push
add
add
add
mov
outsl
push
shl
mov
clc
nop
jg
jg
out
add
addr16
dec
cltd
push
add
add
les
popa
gs
jns
add
inc
mov
aam
pop
push
dec
movsb
leave
add
sbb
sti
or
lahf
xchg
dec
pop
add
cmp
in
xchg
jo
jp
pop
or
shld
xor
fimuls
cmp
push
lds
dec
sbb
loopne
cmp
adc
sub
aad
ljmp
out
xor
loopne
adc
stos
incl
out
movd
pop
dec
arpl
rorb
adc
sbb
xorb
pop
jge
adc
inc
dec
test
fwait
adc
fsubl
pop
leave
add
les
bound
ja
pop
loopne
push
dec
adcl
add
jl
mov
sub
pop
movsl
js
cmp
add
jns
faddl
stc
data16
rolb
ss
aaa
mov
cmp
sub
cmpsb
je
sarb
lods
pop
add
dec
rcrb
and
loope
pusha
xchg
pop
or
dec
push
adc
xchg
inc
jmp
cwtl
sbb
xchg
notl
rcrl
xchg
in
and
add
adcb
add
push
std
pop
add
aam
pop
fdivrl
cmp
mov
imul
shl
or
sbb
leave
repz
shrl
sub
cmp
add
loopne
jge
xchg
ljmp
cmp
xchg
add
xchg
fnstsw
lcall
mov
mov
test
lock
pop
sti
add
dec
xchg
push
in
pinsrw
sbb
sub
pop
out
mov
sub
rcl
xchg
mov
cmp
dec
pop
mov
mov
rcll
movsb
add
or
and
push
lea
mov
rcl
daa
sbb
das
or
jo
std
add
pcmpgtw
shl
enter
add
inc
pop
stos
xlat
scas
roll
out
or
xor
jp
xchg
adc
push
xchg
inc
add
lea
adc
jne
popl
add
and
sarl
lcall
ljmp
cld
mov
jle
sbb
outsl
icebp
cmp
mov
mov
sub
push
cmpsb
test
dec
rolb
mov
addl
add
aaa
clc
and
es
hlt
pushf
add
push
push
cmp
pop
xchg
jge
adc
fstpt
pop
jne
jae
movsb
flds
mov
shr
xchg
add
cltd
test
xchg
pop
aad
add
add
dec
test
add
pop
or
push
jl
add
mov
in
xchg
cmp
les
lock
add
pop
jmp
xchg
mov
int
fbld
xor
lcall
je
out
push
nop
hlt
cmp
xor
add
dec
mov
inc
out
aas
insb
add
cmpsb
inc
lods
push
xchg
sbb
xchg
xchg
or
adc
push
jmp
js
adc
and
inc
mov
adc
pop
add
imul
and
xchg
fisubrs
incb
mov
mov
jg
out
loopne
mov
xchg
sub
jle
inc
cltd
or
js
jbe
subb
add
push
cmp
or
or
xor
pop
call
mov
sahf
in
adc
inc
add
add
outsl
adc
rorb
and
adc
push
fcoms
mov
jge
push
sbb
jne
mov
cmc
mov
cli
or
in
ja
pusha
outsb
sbb
popf
push
add
sbbl
pushf
add
mov
mov
dec
dec
cld
sub
mov
push
aaa
jne
add
mov
adc
inc
sbbb
add
mov
rcll
stos
mov
or
mov
loope
or
add
inc
sbb
cmp
les
das
enter
lds
iret
sub
ljmp
dec
mov
aas
dec
int3
fldl
data16
mov
popf
daa
add
jnp
dec
push
jmp
int3
sub
pushf
cli
dec
ret
es
mov
add
xor
push
pop
lock
xchg
push
mov
jns
add
jnp
pop
mov
iret
cld
add
cwtl
cli
fdiv
pusha
in
lret
dec
pop
xchg
inc
adc
into
hlt
add
mov
add
fcom
or
dec
out
sub
clc
stos
push
xchg
push
idivb
in
add
add
in
cmp
pop
clc
add
sbb
fisubl
pop
shlb
jle
cmc
cmp
and
jns
or
dec
add
xchg
cmc
cwtl
jle
inc
pushf
xor
mov
push
dec
pop
pop
add
pop
out
xlat
addb
fsub
jne
cld
movsb
movsl
jecxz
pop
jg
sbb
sbb
xorb
dec
dec
mov
and
lret
scas
pop
outsb
cmp
repz
or
ror
test
lods
and
mov
and
stos
arpl
dec
mov
xlat
ficompl
outsl
incb
mov
pop
xchg
xchg
add
out
inc
xchg
popa
inc
push
lcall
pushf
in
stos
inc
and
cmp
rcrb
sbb
fwait
mov
dec
cmp
add
cmc
jmp
mov
inc
pop
sbb
dec
pushf
fwait
addps
scas
sub
and
mov
outsl
cwtl
lds
add
divb
add
sbb
fadd
sbb
dec
xor
test
xor
ret
jns
ja
mov
fisttps
or
or
xlat
adc
lock
faddl
cltd
adcb
out
jmp
add
mov
inc
add
test
mov
scas
inc
cli
add
jae
sub
leave
and
mov
scas
jo
out
and
sub
fwait
cwtl
cld
add
in
test
xchg
push
repz
inc
add
popf
xchg
xchg
add
daa
add
pop
stc
enter
mov
adc
andl
mov
aam
shrb
adc
add
stc
cmp
pop
rcrl
sahf
and
xor
loope
outsb
pop
std
jecxz
mov
daa
ds
adcb
je
inc
ret
inc
repnz
jmp
push
neg
sub
dec
push
sub
fcoml
lods
jg
jbe,pt
cmp
xor
fidivrs
mov
aas
sbb
push
mov
rcr
outsb
nop
call
cwtl
inc
je
shll
dec
xor
lods
cmp
adc
mov
lret
adc
adc
xchg
shll
into
and
sbb
and
cmp
daa
mov
shr
xor
jecxz
sbb
add
sbb
xor
fisubs
mov
testl
push
in
shrb
mov
out
orl
aam
jo
call
js
jb
subb
leave
jmp
addr16
clc
stos
movsb
inc
loope
and
shlb
rcrl
push
aad
dec
pusha
ret
fsub
nop
sub
add
cmp
cs
xor
jg
divb
clc
xlat
push
xor
mov
adc
stos
add
and
pop
add
cmpsb
les
inc
sbb
mov
and
xchg
sub
push
repz
shll
out
cmp
aaa
mov
ss
add
mov
adc
push
mov
addb
and
pop
lret
jae
loope
lods
sub
fsubrs
mov
jp
add
pop
xor
add
cmp
add
push
fwait
sahf
mov
xor
cmp
xchg
add
int3
jae
fsubl
add
fcmovnb
repnz
cmp
or
nop
inc
jle
aas
mov
adcb
mov
lock
sbb
push
movl
das
lods
push
mov
pop
dec
mov
es
pop
jmp
ret
add
sbb
cmp
pop
inc
cs
flds
sbb
dec
pop
outsl
cwtl
lret
add
push
test
ret
xor
inc
mov
dec
sub
add
add
ds
xchg
ret
fst
jle
loop
pop
jp
push
loopne
push
pusha
push
xor
out
mov
push
sbb
jnp
sbbb
movl
in
loopne
xchg
add
dec
mov
adc
push
mov
pop
cmp
push
in
sbb
cld
into
addb
add
mov
fucomp
inc
pop
inc
pop
mov
pop
and
add
loop
or
lahf
pop
xor
aaa
ja
ss
jmp
sti
stc
cmp
jg
adcb
insl
pop
add
imul
add
sub
pop
fisttpll
sbb
lds
int3
cmp
xchg
jb
enter
add
adcb
jno
sbb
add
aaa
iret
bound
mov
pushf
xchg
cmp
sub
or
add
sub
and
mov
sbb
cwtl
sti
popa
pusha
rolb
fiaddl
int
add
inc
int3
jmp
xchg
insb
stos
jge
cmp
mov
lds
inc
sbb
push
inc
pop
mov
popf
add
outsb
aaa
xchg
jg
add
mov
ja
test
adc
test
sbb
imul
cmp
mov
dec
inc
xchg
xchg
add
cld
popa
dec
mov
mov
mov
test
shr
push
hlt
testb
mov
stc
sbb
movsb
ja
sbb
cmp
je
and
inc
imul
test
jbe
add
paddq
sarl
push
adcb
inc
mov
add
cmp
bound
mov
mov
movsl
pop
add
icebp
xchg
das
mov
jl
ret
and
fs
sbb
jecxz
pop
movsb
test
cmpl
stos
cmpl
iret
xchg
andb
leave
push
pusha
jne
lret
sbbl
dec
loope
add
loop
push
push
add
pop
add
lock
push
das
pop
pop
push
shl
nop
jno
jecxz
inc
pop
fs
fnstsw
dec
dec
adcb
add
out
in
sar
pushf
add
pop
sbbb
aad
out
pop
jb
xor
cmc
add
mov
pop
jl
and
jae
lahf
rclb
int
or
jns
ffreep
imul
push
lods
push
pavgw
aas
adc
test
sbb
lods
in
xchg
jecxz
mov
into
push
xchg
fistpl
adc
das
jge
mov
xchg
add
rcll
push
outsl
add
cmpsl
push
add
pop
or
in
fsubrl
mov
and
jmp
ljmp
lea
test
lret
lock
into
les
jo
xlat
push
mov
jle
xor
add
push
pop
int3
jnp
sub
ret
adc
inc
xchg
add
repnz
push
push
dec
dec
movsb
jb
rol
shll
ja
pop
mov
and
dec
add
pop
lods
sbb
daa
xlat
adc
ds
pop
mov
movsl
add
movq
cmp
push
jnp
add
std
push
pop
dec
mov
int
mov
inc
pusha
rcll
add
rclb
lahf
adc
jle
daa
mov
cmp
or
clc
ljmp
mov
sub
and
add
or
pop
or
pusha
test
rol
xor
hlt
sbb
out
popf
add
cmp
ds
xlat
add
in
shr
mov
pop
pop
loopne
add
push
daa
out
pushl
idivb
add
repnz
popf
roll
jb
cmpb
add
pop
cmp
int
add
sub
dec
shr
sub
push
stos
add
xor
add
jo
ss
pop
inc
or
pushl
pusha
push
fs
cmpsl
mov
std
xchg
sbb
push
outsb
pop
sbb
xlat
add
js
stos
mov
push
int3
add
inc
pop
xor
lcall
test
jg
js
adc
mov
pop
std
push
sub
lods
pushw
push
pop
mov
sbb
int
jle
add
sub
cwtl
pop
filds
into
xchg
notl
inc
jmp
ds
add
mov
inc
dec
inc
add
pop
and
or
loopne
pop
add
cli
ds
xchg
movl
sbb
test
pop
adc
stos
mov
out
xchg
popf
mov
sti
add
arpl
inc
cltd
add
sarl
dec
add
pop
test
movsb
out
and
popf
ja
imul
mov
add
jmp
insl
addr16
adc
jno
xchg
mov
add
cmp
ss
sbb
cmp
ja
divl
mov
dec
out
adc
in
incb
add
ljmp
push
or
negb
pop
outsl
cmp
popf
in
mov
jg
pop
lea
cs
push
popa
add
xlat
and
mov
add
repnz
in
add
and
and
in
pop
push
andb
mov
dec
xchg
fs
mov
mov
jns
add
xor
js
stos
aaa
jl
add
imul
ret
daa
mov
into
add
lcall
in
xchg
movsb
mov
nop
sbb
cvtps2pi
lock
add
in
pop
sbb
add
adc
add
into
sbb
mov
pop
int3
or
dec
add
in
repnz
rcll
add
push
je,pt
lret
sub
test
clc
push
rorb
repz
dec
add
add
dec
popf
dec
cmp
adc
jne
dec
je
add
add
repnz
dec
pop
pop
aaa
sbb
fiadds
mov
xor
mov
dec
cmp
aad
lds
nop
jns
adc
ss
incb
popa
push
mov
xor
pusha
outsb
in
f2xm1
data16
das
dec
lds
jl
and
mov
fidivl
add
dec
mov
add
inc
mov
cmp
add
loop
fnsetpm(287
and
int3
xchg
das
and
out
cwtl
rorb
add
cli
clc
cmp
scas
add
int3
pusha
jb
hlt
cmpsl
test
inc
sti
inc
inc
add
cmp
je
pop
add
jns
nop
rclb
push
add
sti
jo
in
mov
add
inc
in
dec
testl
lods
fcomps
push
xchg
iret
or
add
ret
rolb
mov
cmp
mov
decb
sti
lret
pusha
in
and
das
jmp
adc
cmp
loopne
lods
aaa
je
add
ss
mov
push
add
aam
push
add
popa
push
ja
scas
add
lcall
hlt
push
out
stos
scas
leave
outsb
inc
mov
add
pop
mov
cmpsl
out
cs
mov
pop
xor
out
incl
cltd
sahf
dec
repz
add
int
push
adc
and
jecxz
cmp
sbbb
popf
ret
jl
add
push
dec
iret
repnz
insl
pop
add
jnp
loopne
push
xorb
out
shlb
fwait
push
iret
jg
das
xchg
imul
leave
shl
dec
jp
mov
lock
inc
ljmp
clc
add
mov
sub
dec
and
sti
ja
xor
cmp
mov
repz
out
pop
test
mov
pop
test
add
int
xchg
in
or
jmp
xor
insb
add
hlt
pop
int3
in
add
mov
stos
inc
mov
push
pop
mov
cmp
addr16
pmulhuw
shll
jecxz
dec
pushf
dec
mov
filds
out
ret
adc
subb
xchg
add
mul
iret
out
aas
add
aam
fwait
add
std
bnd
and
dec
add
ss
lods
stc
and
push
push
aad
imul
lret
out
xor
cmp
cmpsl
add
es
and
cmpsb
push
repz
pop
jbe
sub
pop
add
lret
mov
mov
shl
out
and
mov
and
adc
sub
and
test
jno
call
add
dec
enter
add
pop
push
iret
dec
mov
cli
out
dec
ja
add
rorl
aam
pushf
add
aaa
inc
mov
add
mov
rorl
lret
test
cli
lahf
push
add
aam
gs
repnz
add
push
popf
cmp
xchg
inc
add
cmp
ja
push
loopne
add
dec
fstps
mov
in
sbb
sti
fildl
out
nop
fs
xor
sahf
jo
add
jnp
faddl
mov
pop
loopne
add
popf
imul
add
sub
jo
pop
add
subl
pop
cmpsl
mov
pop
xchg
inc
mov
mov
test
loop
fildl
mov
jo
pop
test
icebp
dec
jb
add
test
outsl
add
pop
mov
enter
inc
mov
clc
test
sub
lods
mov
ficompl
stos
cltd
nop
sarb
lock
pop
call
mov
dec
sub
add
mov
or
add
mov
roll
fsubrs
jl
push
stc
sti
clc
lods
jl
into
xor
mov
and
or
ljmp
fwait
scas
mov
loope
add
push
jmp
add
icebp
cmpsb
ds
fs
rclb
nop
dec
or
outsb
or
push
mov
pop
mov
scas
cmpb
aas
or
std
push
add
push
or
push
mov
lock
lret
add
addl
mov
inc
lods
sub
adc
or
push
shrb
and
and
dec
pop
sbb
les
and
std
mov
out
loop
mov
mov
push
test
inc
xor
jl
pop
mov
mov
mov
shll
pusha
dec
add
pusha
mov
mov
xor
movsb
js
push
jne
dec
das
push
testb
cmp
xor
mov
imul
subb
faddp
outsl
pop
sub
lds
lock
inc
mov
je
add
loopne
push
in
ret
add
pop
fstpl
out
in
add
jle
clc
in
push
add
mov
adc
insb
add
stos
cmp
pop
aam
loope
andl
fistps
sub
fwait
xor
mov
mov
sbb
push
subl
pop
xchg
arpl
aaa
xor
incb
in
lret
cmp
cmpsb
clc
mov
repz
jbe
add
shrb
popa
sahf
aad
add
scas
xor
sbb
add
lret
aad
add
ljmp
call
lahf
pop
out
add
cmp
add
stos
cli
add
or
xorb
jb
add
test
out
push
dec
add
subl
aam
add
testl
xor
cmp
add
lret
fdivrl
nop
push
add
rolb
rcll
add
mov
mov
loopne
cwtl
pushf
dec
repz
addb
aad
push
add
lret
push
push
xor
fsubr
xchg
add
fimull
jno
sub
inc
sub
rcrb
inc
stos
push
sbb
sub
call
outsb
cmp
pop
sub
cmpsb
add
std
xor
arpl
ret
fs
lds
sbb
mov
adc
popf
add
add
add
je
int3
rorl
jbe
in
jb
in
xor
jae
add
lret
sbb
xor
xor
mov
icebp
jp
sti
pop
lcall
and
push
push
sbb
stos
out
add
dec
imul
ror
add
push
std
mov
stos
int
lds
xchg
scas
xor
add
and
in
aaa
mov
add
negl
filds
cmp
jbe
or
ret
pushf
xchg
rorb
push
popa
movsb
inc
subb
clc
ja
adc
mov
jae
insl
in
sbb
lods
and
inc
add
pop
aad
add
clc
cs
inc
test
inc
jns
in
and
sub
pop
cmpsb
cld
sbb
add
mov
add
adc
jecxz
divb
loope
push
push
lcall
fisubl
ret
dec
call
scas
push
aam
lock
push
pop
sub
push
jle
vpsubusb
imull
sbb
popa
mov
push
cli
push
scas
or
xor
and
pop
pavgb
inc
or
jp
and
loopne
jno
add
data16
mov
rolb
int
iret
ds
push
lods
push
fwait
dec
test
sub
je
mov
aas
scas
in
js
xor
and
nop
incb
cmp
sbb
aas
nop
xchg
test
add
imul
pop
add
sub
mov
pop
add
lods
fnstenv
popa
add
sub
sub
xchg
and
sbb
lcall
adc
mov
adc
add
and
inc
push
or
add
xor
nop
std
add
cmc
movsl
ret
sub
test
fstps
or
push
hlt
add
sbb
je
flds
gs
jl
call
cld
mov
add
add
mov
arpl
addr16
sarl
clc
add
repnz
in
add
sub
pop
cltd
cli
es
add
rcr
jb
shlb
add
std
mov
adc
dec
sub
mov
mov
int3
loop
jge
cmp
gs
add
lahf
imul
add
insl
jg
testl
pushf
je
ds
add
loop
sub
loopne
mov
jg
adc
bswap
and
pop
clc
imul
fwait
adc
lea
sub
pop
or
rolb
xor
sub
xchg
sub
mov
lea
jnp
add
mov
inc
mov
push
add
pop
hlt
les
mov
loop
xor
divl
ja
add
test
pop
adc
jle
push
and
rcrl
mov
add
in
call
cmp
sarb
or
pushf
mov
xchg
inc
mov
mov
push
cld
in
add
push
loop
xchg
mov
cmpsb
js
shrl
cmp
push
btr
in
sbb
enter
add
scas
jg
das
loope
cli
sub
call
insb
sub
add
packsswb
add
xlat
dec
subl
fwait
rorb
mov
inc
lock
insb
shlb
imul
add
cmpsb
in
mov
xor
outsl
fldcw
add
test
addb
shll
or
out
inc
or
pusha
push
mov
mov
lds
repnz
fisttpl
add
add
imul
faddp
sbb
mov
add
sub
mov
repz
pop
dec
mov
enter
xchg
scas
jmp
add
push
fistl
push
loopne
add
or
adc
and
pop
add
sbb
xchg
add
sahf
push
lcall
pavgb
cmpsl
xor
das
sbb
sbb
les
lock
pushf
xor
mov
adcl
test
sbb
and
out
add
imul
or
xchg
cmp
add
in
imul
add
icebp
arpl
add
mov
jmp
add
jne
js
ficoml
int3
repnz
jno
sub
lods
ja
je
dec
rcr
pop
sbb
or
icebp
cli
add
xchg
inc
out
add
call
subb
adc
xor
xchg
push
adc
mov
test
out
scas
jno
ljmp
inc
xchg
push
movsl
mov
js
daa
insl
push
inc
rorb
jmp
inc
add
mov
sarl
xchg
add
mov
sbb
add
xchg
or
sbb
fstps
add
cs
daa
inc
add
dec
cltd
fadds
mov
repnz
mov
push
jge
icebp
inc
shl
cltd
or
sbb
lahf
cmpb
loope
pop
cmp
mov
xor
xor
push
sahf
pushl
shr
pop
cvttps2pi
cmpsl
stos
cli
loop
and
sarb
sbb
jp
dec
pop
out
fcoml
pop
pop
and
mov
add
test
ss
and
add
mov
pop
xchg
mov
outsb
xor
pop
nop
out
xchg
dec
daa
pop
lock
jne
je
cmovbe
pop
push
and
add
mov
push
adc
mov
inc
mov
inc
popf
repnz
pushf
cmc
lmsw
out
pusha
mov
or
imul
inc
sub
out
pshufw
push
xchg
xchg
mov
xchg
or
add
sbb
add
enter
mov
add
stc
fmuls
sub
inc
ja
mov
repnz
addr16
dec
adc
add
leave
mov
lcall
cmp
scas
pop
push
add
lods
or
mov
pop
pop
jge
sbb
dec
out
gs
popa
pop
xchg
inc
lock
ljmp
push
cmc
dec
push
shll
add
xlat
jae
add
jns
xchg
jno
add
pop
shlb
in
loopne
ds
ja
hlt
outsl
jbe
add
sbb
jmp
iret
movsl
xlat
mov
les
ret
jmp
fdivrs
pusha
push
mov
shrb
cmpsl
pop
add
and
call
pusha
and
scas
in
cmpsb
xor
or
push
adc
stos
test
popf
clc
add
mov
jl
cmpsl
jae
or
add
fadd
out
stos
push
xor
inc
xchg
jg
test
fwait
push
lret
fcmovne
call
jmp
aam
scas
int
test
push
loope
xchg
mov
add
into
pusha
jecxz
mov
add
repz
pushf
jae
cmp
or
pusha
xor
add
std
jp
outsl
pop
mov
sbb
push
loopne
push
testl
mov
lahf
add
mov
push
cmp
sub
sbb
mov
add
hlt
inc
add
xor
add
or
test
mull
je
jb
push
cmp
repz
xor
mov
sub
cld
movl
out
pop
bound
out
sub
pop
rcrl
add
repz
lcall
mov
fistpl
mov
enter
add
adc
daa
movsb
add
rclb
mov
sti
push
out
and
xchg
cmpsl
repz
add
dec
roll
xor
rolb
pop
push
testl
pop
mov
adc
xor
and
popf
test
jle
cwtl
fwait
lcall
and
loop
push
add
sbb
add
adc
out
pop
rolb
add
loope
js
jge
fiadds
mov
ret
inc
sub
jecxz
jae
or
lock
push
push
add
jb
jbe
lret
pusha
pop
shrb
jecxz
add
jp
iret
fs
aam
push
pop
hlt
pop
adc
jp
dec
int
and
imul
jns
loop
lahf
jl
add
pop
dec
sbbb
add
enter
jmp
push
sbb
and
jge
xchg
add
jmp
sbb
lret
mov
sub
push
or
mov
rcr
lds
mov
xor
imul
add
push
scas
addb
test
addl
mov
xchg
ret
inc
and
inc
jmp
arpl
js
shrb
add
div
mov
add
pop
lods
push
add
xor
jecxz
hlt
push
push
cld
cltd
inc
add
xchg
sub
pop
ljmp
outsl
das
loopne
push
and
lods
es
in
mov
call
iret
add
xchg
lsl
add
or
nop
jmp
mov
aad
sbb
in
push
pop
mov
pop
jp
add
cs
movsb
jnp
add
inc
fucomip
out
push
push
dec
and
in
add
clc
inc
ds
or
insb
xorl
cli
adc
lcall
push
and
stc
repz
mov
add
sbb
add
mov
je
jno
push
add
fldl
adc
sbb
push
cmp
loop
sbb
iret
cmp
shll
ficoms
xchg
in
xchg
xor
inc
pop
hlt
lret
jecxz
cwtl
mov
jge
adc
xchg
adc
jmp
in
fstpl
pop
fcoms
cmp
orl
jecxz
add
sbb
add
fwait
xchg
dec
inc
adc
mov
inc
mov
mov
xor
or
mov
enter
adcb
jne
xchg
or
cs
imul
mov
mov
sbb
iret
and
in
daa
add
dec
cmc
xchg
shrb
add
sbb
stos
sub
inc
subb
arpl
inc
add
pop
adc
movl
pop
add
into
mov
stos
push
or
clc
sbb
adc
xlat
lea
lods
loopne
mov
add
mov
ljmp
gs
mov
ds
add
pop
call
mov
sti
enter
aad
add
cmpsb
into
mov
jmp
dec
jge
cmpb
ds
cmp
in
aaa
pop
cmpsb
jnp
mov
lcall
or
repz
ljmp
jge
or
mov
add
xchg
xchg
pop
jnp
bound
sbb
sub
mov
gs
add
add
mov
pop
sbb
insl
jno
jns
leave
add
cmpsl
cmp
dec
sub
jns
xor
in
or
aam
or
scas
cmp
xor
sbb
push
mov
in
xor
mov
adc
outsb
insb
shlb
inc
pop
cmpl
mov
bound
je
and
into
cld
adc
outsb
pop
psubw
mov
jo
testb
sbb
adc
sbb
stos
test
add
add
adc
clc
mov
mov
add
push
sub
dec
lahf
imul
push
scas
stc
mov
and
shl
stos
mov
xor
add
mov
push
or
cmp
repz
outsb
sub
and
sbb
outsl
add
pop
mov
push
jae
jl
test
mov
enter
push
add
inc
aaa
inc
out
cmc
push
add
mov
push
popf
add
insb
pop
cmpsl
mov
and
push
push
xchg
mov
sbb
pop
loop
pusha
xor
add
gs
pop
loopne
out
test
mov
fwait
mov
jmp
je
dec
or
adcb
fnstcw
in
add
iret
shlb
dec
test
daa
es
mov
push
add
pop
daa
xor
dec
pusha
sti
cmp
jb
sbb
sub
in
jge
inc
cmpsl
loop
add
lea
in
xor
xchg
add
bound
scas
movsl
sub
pop
shl
les
or
cmp
push
mov
pushf
cmp
mov
repz
dec
jbe
pop
mov
lds
cwtl
jbe
lea
jae
adcb
add
dec
imul
add
aad
cmp
ja
add
fildl
add
mov
test
paddsb
outsb
or
subb
xchg
sub
fsubp
mov
fldenv
or
stc
pop
add
mov
xor
sbb
jo
push
add
mov
lret
push
dec
dec
and
lret
push
and
mov
out
imul
cmpsl
sub
push
sub
xchg
cmp
mov
cmp
in
xchg
cs
add
cmp
dec
aas
mov
ljmp
addb
xor
pusha
add
xchg
rolb
cmpsl
sbb
decb
adc
lea
or
and
or
add
sti
out
or
xchg
out
push
add
xor
outsl
aas
push
rolb
sbbl
fidivrs
leave
popf
aaa
cmp
sub
push
mov
shrb
mov
add
je
notl
add
ds
add
and
mov
inc
sbb
adc
dec
std
sbb
xchg
push
hlt
xchg
ds
test
int
stos
ret
add
cli
data16
push
ljmp
testl
sbb
mov
dec
movq
mov
mov
pushf
pop
jmp
jnp
aaa
or
sbb
cmpsl
add
repnz
add
xlat
ret
pushw
jg
pusha
mov
addl
push
pop
mov
mov
ljmp
insl
xor
sar
and
sub
push
mov
add
imul
ret
push
in
xchg
cmp
add
adcl
bound
mov
out
pop
dec
add
fwait
jp
push
fs
add
in
js
ja
add
fadd
jns
fnsave
arpl
mov
imul
sbb
mov
sbb
push
add
mov
ja
sbb
mov
rcr
cs
jle
add
mov
out
fdivl
push
sahf
cmpsl
call
mov
call
scas
or
cmpsb
lods
push
xchg
sbb
mov
loopne
dec
cli
jnp
mov
xor
movsl
or
addl
inc
imul
femms
insb
aad
mov
mov
adc
cmp
push
xchg
jb
add
inc
mov
jb
add
push
rorl
add
sub
int3
dec
pusha
xor
and
ljmp
mov
das
cmp
gs
orl
add
pop
mov
subb
xor
clc
fnsave
jae
or
cmp
add
dec
dec
inc
pop
jg
xlat
add
enter
js
arpl
dec
lea
popf
add
add
das
add
mov
pop
icebp
add
scas
add
ficoml
xor
xor
pop
add
icebp
inc
mov
xchg
movl
mov
and
pusha
pop
in
add
jne
pop
add
cli
mov
call
mov
add
xor
scas
mov
cmp
jne
fnsave
mov
or
push
xorb
mov
or
cmp
pop
stc
jl
shll
fbstp
int3
and
push
bound
add
and
mov
nop
in
pop
add
ja
mov
adc
add
lahf
imul
push
push
movntps
xchg
stos
js
inc
add
jbe
xlat
and
testb
push
out
mov
cmp
aas
mov
inc
bound
sbb
pop
pop
sub
sub
std
call
add
popf
jae
add
hlt
add
dec
push
cltd
shrl
fiaddl
or
adc
jp
add
mov
and
mov
nop
inc
inc
subb
incl
rcll
push
mov
jae
push
jge
fldcw
xor
adc
es
lahf
leave
or
push
pushf
insb
icebp
add
add
test
js
lret
jp
adc
dec
aaa
dec
add
push
out
or
push
add
scas
shlb
adc
aad
mov
jge
cmp
test
lds
jne
add
adc
pop
je
call
push
mov
mov
add
adc
popf
filds
aad
orl
lds
fwait
push
mov
ficoml
repnz
cmpsb
inc
lret
cld
loopne
vpcomuw
shr
add
mov
sbb
call
adc
ret
mov
in
mov
pop
and
jb
imul
xchg
jae
scas
lock
or
add
repnz
xchg
push
add
mov
push
je
lret
pop
stos
out
sahf
jbe
popa
sahf
aas
add
xlat
adc
add
rcr
jp
jmp
daa
add
daa
add
lcall
xor
sbb
test
mov
add
cs
pop
stos
jne
cmp
push
ss
mov
add
int
pop
aas
xchg
scas
add
jle
add
rcrb
ret
cmpb
test
test
pop
pop
add
out
cld
cmc
xchg
or
jl
mov
lods
ja
add
aam
in
push
stos
in
mov
mov
and
dec
cmp
xchg
mov
add
cmp
rolb
cmp
gs
cwtl
dec
stc
pop
in
inc
add
fmull
push
cmc
jns
and
lret
pop
jno
divb
dec
out
hlt
add
stos
push
fists
add
sarb
lret
or
and
adc
push
mov
fnstsw
in
or
outsl
add
mov
xorb
inc
adc
and
decl
adc
lea
rcrb
outsb
imul
jle
mov
add
fsubr
sbb
xchg
cmc
xchg
add
or
sbb
shrb
pop
pop
add
push
jl
xchg
rorb
out
lea
adc
xor
fnstenv
add
xor
cs
cli
lea
mov
lds
movsb
sbb
and
jl
hlt
jo
adc
loop
jb
add
in
les
jo
hlt
and
mov
add
in
add
inc
mov
and
in
sub
add
add
inc
pop
mov
mul
xor
arpl
dec
sti
imulb
lock
lods
ret
sbb
mov
inc
mov
lods
sbb
sbb
negl
insl
outsb
lock
push
cltd
shl
push
fsubp
mov
add
scas
mov
jl
pop
add
lds
push
push
mov
and
js
loop
lock
dec
icebp
scas
mov
aaa
push
test
rclb
ficomps
add
sbb
and
dec
cmp
sbb
incl
xchg
xchg
add
je
dec
push
lods
stos
jnp
push
mov
xor
rclb
bound
add
jo
mov
pusha
xchg
sub
mov
jecxz
mov
int3
mov
add
cmp
and
inc
lret
pushf
and
fmull
fs
imul
lock
aam
add
xor
jle
pop
xor
push
std
add
pop
sbb
psadbw
and
rclb
add
sbb
int3
add
test
xchg
clc
mov
mov
mov
lret
push
mov
add
inc
cld
std
jbe
add
xchg
adc
pop
mov
prefetcht0
add
xorb
sub
inc
sub
mov
push
mov
mov
rep
adc
into
jge
out
xchg
add
xchg
mov
xlat
cmpsl
fldcw
fisttpll
or
sbb
ljmp
lret
sub
inc
rcrb
mov
jo
mov
dec
cmp
xchg
mov
xor
aad
outsb
add
add
pop
inc
call
and
clc
arpl
add
movsb
in
aas
jno
xlat
pop
and
mov
clc
enter
dec
sub
sbb
mov
push
out
sub
fxch
roll
imul
and
roll
cmp
sbb
inc
push
push
fnstenv
mov
mov
sbb
test
sub
int
pop
mov
sbb
cli
pop
aaa
mov
sbb
push
add
inc
push
loop
test
mov
inc
push
mov
pop
jg
adc
add
sbb
add
add
and
pusha
xor
aas
insb
lret
add
out
idiv
and
push
mov
jle
loope
adc
cmp
pop
ljmp
sbb
cmp
inc
leave
or
test
push
inc
mov
sarb
loopne
xor
loope
xchg
loopne
cmp
out
dec
or
mov
mov
jo
les
jno
loopne
add
mov
xor
xor
xchg
jg
push
add
and
xor
pop
adcb
jno
fsubl
sahf
fidivrs
add
jl
popa
mov
mov
dec
dec
andl
add
xor
cmp
mov
add
pop
xchg
dec
add
stos
mov
xor
insl
icebp
dec
add
lds
sbb
lods
or
ja
ds
push
push
lcall
xor
or
cmp
xchg
mov
xchg
std
jns
jl
bound
mov
or
adc
imul
xor
int3
xchg
ficoml
fstps
cmp
jmp
inc
adc
pop
notb
sub
mov
mov
mov
test
inc
cs
push
cwtl
sarb
add
lods
sarb
lahf
mov
sbb
lret
ret
popf
into
aas
adcl
mov
add
in
sbb
xor
and
inc
pop
add
add
push
test
or
sysexit
fmul
test
loop
push
sbbb
adc
mov
scas
sub
aad
push
arpl
pop
push
fdivrs
add
js
mov
push
je
fdivr
in
data16
cs
push
lock
or
add
out
push
js
sbb
scas
into
jno
xor
add
insl
loopne
push
mov
ljmp
ljmp
rcl
rcrl
clc
dec
loopne
add
cld
mov
popa
adcb
mov
addb
xchg
pop
sahf
pop
push
mov
test
clc
cmp
inc
in
pop
shrb
xchg
push
lods
push
out
iret
arpl
or
rcl
mov
cmp
and
sahf
lret
xchg
adc
fstps
imul
sub
mov
jp
jno
stos
jg
adc
lret
pop
xchg
adcb
or
nop
push
push
gs
mov
sbb
inc
mov
or
xor
inc
pop
das
xchg
mov
inc
bound
push
jns
add
sbb
and
cltd
xor
or
imul
xchg
sbb
and
fstl
movsb
mov
xchg
sbb
adc
mov
and
daa
or
call
lret
xor
in
roll
and
in
test
add
std
andb
int3
mov
inc
scas
or
mov
test
or
pop
cs
shll
and
stos
add
jl
push
and
dec
mov
pop
add
scas
js
xor
push
jne
aas
out
aam
fstpt
push
out
inc
addb
dec
rclb
leave
in
jae
add
mov
add
loope
fsubl
ljmp
ds
dec
mov
mov
cmp
scas
add
mov
push
push
mov
rcr
inc
add
jbe
or
pavgb
sub
add
lods
jl
sbb
pop
mov
incb
jno
cmp
enter
add
std
xor
add
add
addl
in
scas
sub
cmc
call
xor
push
addb
rolb
enter
add
xchg
lcall
pop
cmp
sub
jp
lret
int3
add
add
mov
movsb
dec
std
add
shl
fnstcw
add
mov
call
iret
push
insb
jne
push
scas
push
sbb
test
adc
aad
imul
nop
inc
loop
lods
jno
fisubl
inc
imul
fstps
add
test
pusha
pop
or
mov
enter
cltd
iret
inc
add
cmp
adc
gs
push
add
movsb
push
adc
add
scas
sahf
dec
cmp
mov
mov
call
test
pop
jg
jo
and
bound
int3
mov
sbb
add
jns
add
cli
in
jecxz
dec
jnp
popa
cmp
mov
popa
lods
clc
add
dec
xchg
je
add
push
jmp
add
xchg
lahf
or
testl
sbb
and
fsubp
xchg
or
icebp
clc
cmp
scas
adc
sbb
aam
adc
xor
xor
add
enter
das
cmp
jg
push
mov
jb
add
sub
lret
add
sti
aam
fimull
into
rsqrtps
sbb
add
mov
dec
adc
cltd
push
lods
mov
adc
add
stc
mov
ss
arpl
mov
push
jecxz
add
adc
pop
rorl
add
pop
loop
orb
mov
popa
jl
jnp
add
outsb
lret
and
loop
sti
push
data16
pop
es
arpl
hlt
in
add
das
pop
ror
pusha
icebp
add
popf
cmc
lods
add
sbb
mov
add
adc
daa
add
scas
inc
cmp
outsl
add
test
roll
add
or
aad
push
push
leave
test
mov
and
stos
dec
add
add
push
adc
pop
xchg
add
pop
stos
xchg
mov
repz
cld
add
gs
xor
lret
hlt
outsl
add
je
mov
popf
leave
xchg
ljmp
jmp
cmpsl
aaa
lock
cli
clc
add
jp
xchg
jno
sbb
fwait
xchg
sbb
sbb
arpl
add
adc
cwtl
jae
add
or
pop
out
fdivs
and
div
add
pop
scas
stos
add
adc
sbb
mov
negb
test
pop
mov
rcl
mov
pop
lcall
add
sbb
sbb
sbb
ds
jno
mov
push
lock
daa
out
cmp
pusha
push
add
out
dec
push
inc
xchg
add
jmp
rorl
out
dec
push
sbb
lea
jnp
pop
inc
cmpsb
hlt
mov
add
jno
rclb
loope
outsb
sub
jecxz
inc
cmp
movsl
ds
rorb
add
insb
lret
mov
mov
or
rol
pop
inc
pusha
cmp
ret
add
cmp
mov
add
fwait
out
arpl
xchg
sub
pop
mov
mov
das
pop
sahf
adc
pop
dec
xchg
test
imul
adc
jb
add
movaps
add
fmuls
mov
xchg
mov
sub
xchg
inc
js
sbb
hlt
leave
jo
xor
stos
sbb
lock
fiaddl
lock
xchg
sub
je
add
inc
adc
cli
pop
push
sbb
jmp
add
fcmovb
dec
mov
push
les
push
dec
enter
test
jb
mov
xchg
sbbb
or
icebp
xchg
push
add
fidivrs
mov
add
pushf
or
add
add
jb
add
je
jns
and
or
jbe
outsl
ds
ret
inc
xor
mov
mov
lahf
add
imull
es
cwtl
xor
stos
leave
pop
in
insb
inc
push
jo
sbb
and
daa
push
int3
dec
add
sbb
repz
rcll
popf
pop
inc
push
add
lock
dec
mov
lahf
stos
jp
push
and
cmp
sbb
or
cmp
inc
popf
mov
add
loope
cmpsl
jbe
add
or
jns
test
xor
push
adc
mov
adc
add
es
add
xor
movsl
scas
in
insb
add
dec
sub
test
dec
push
mov
fists
or
inc
mov
call
jo
mov
add
ret
jg
jae
and
dec
xor
in
stc
inc
je
inc
pusha
int3
repz
rorb
adc
ja
pop
aas
cmp
inc
add
sub
mov
cli
dec
mov
add
xlat
mov
mov
xchg
paddw
push
fstpt
sbb
add
xchg
aas
out
or
cmpsb
adc
add
ss
aas
jb
add
int
ret
push
lahf
and
pop
int3
add
mov
hlt
add
dec
roll
add
xor
int3
jmp
pop
sub
or
sahf
add
mov
scas
add
sub
sub
xcrypt-cbc
cmpsl
shlb
out
dec
xor
data16
daa
jg
bound
adc
adc
pop
ds
push
lcall
sub
scas
push
lods
sub
xor
pop
add
mov
or
xor
add
and
rcll
add
jne
add
dec
lret
fildl
lock
sahf
push
adc
lods
js
dec
in
xor
sub
or
inc
lock
movsb
jecxz
inc
and
out
sbb
orl
cmp
push
cmp
les
add
mov
scas
into
push
sub
add
loope
loop
insb
clc
mov
dec
mov
sub
scas
faddp
loopne
out
adc
test
jno
negb
scas
and
lret
aam
std
add
push
dec
mov
add
pop
adc
pop
lcall
xor
and
push
loopne
out
pop
sub
add
cld
enter
add
push
gs
xor
lock
add
or
jge
and
jnp
mov
in
cmp
sub
mov
push
popa
add
fistpll
sub
mov
mov
out
or
mov
sbb
fwait
xchg
add
pop
leave
cli
scas
jb
stos
xor
cltd
pop
test
xor
fmul
mov
mov
ja
mov
xor
sub
add
mov
push
mov
iret
xchg
cmp
push
cltd
add
je
into
add
ficoml
inc
clc
cmp
pop
inc
mov
test
cmc
or
pop
dec
in
mov
sbb
les
dec
pusha
iret
mov
add
sub
jl
push
add
mov
push
call
add
rcll
add
stc
aad
in
test
loop
xor
int3
lods
mov
sti
out
fiadds
add
and
dec
push
jo
xor
fwait
cmp
inc
mov
push
add
jle
add
jns
adc
out
adc
mov
hlt
push
inc
push
or
movb
fcoml
rolb
jmp
insb
jns
fidivs
popa
aam
stc
xchg
add
add
les
xor
icebp
imul
daa
xchg
jl
add
lock
fmuls
pop
jo
sbb
gs
lret
add
add
insl
add
lea
xchg
dec
xchg
mov
add
mov
daa
rolb
sahf
add
jb
add
jg
out
mov
add
sub
push
nop
add
ljmp
add
dec
mov
add
inc
fadds
aam
mov
jno
mov
mov
xchg
pushf
test
lahf
repz
cmpb
dec
add
dec
iret
test
es
test
push
shll
add
add
fs
add
inc
xor
xchg
adc
lds
add
sar
out
sti
adc
in
push
and
pusha
pop
scas
lcall
dec
xor
in
mov
mov
mov
xor
jmp
ljmp
sub
nop
xor
push
add
out
stos
popf
mov
shlb
or
enter
or
int
add
xlat
repnz
je
test
push
cwtl
mov
sub
lds
add
lret
insb
test
mov
nop
dec
xorb
loop
ftst
and
fs
pop
xchg
je
ljmp
repz
or
sub
cmp
cmc
dec
fwait
add
mov
out
cwtl
lcall
seto
dec
sub
jo
adc
add
outsb
shlb
lods
jp
in
mov
add
lcall
mov
mov
movsb
pop
xchg
add
lock
loopne
dec
xchg
addb
add
data16
bound
push
mov
cltd
add
in
into
mov
adc
ss
push
sbb
lock
call
sarl
in
lock
cmc
mov
mull
or
aas
movsb
ja
scas
jno
add
bound
imul
pusha
mov
mov
ret
popf
adc
cmc
xchg
pop
sbb
add
idivb
adc
pop
rorl
nop
sub
popa
fsubr
add
dec
push
pop
jne
jge
or
xchg
lahf
movsl
mov
sbbb
sbb
mov
jne
in
loope
je
add
fcmovbe
mov
inc
bswap
outsl
pop
sbb
cmp
hlt
rorb
xlat
add
pop
out
daa
add
ficoms
add
add
add
sub
sbb
push
sub
add
inc
sub
jne
repnz
mov
iret
fidivs
add
cmpsb
repnz
push
xchg
das
pop
adc
jle
lods
add
sahf
push
jp
xchg
rcrl
in
in
add
loop
jnp,pt
cmp
or
mov
aaa
dec
mov
add
and
popf
push
mov
and
sti
mov
pop
adc
inc
add
or
add
pop
mov
add
push
jp
cmp
out
roll
jg
xchg
mov
in
clc
test
pop
adc
adc
jp
push
sub
int3
mov
sarl
mov
test
push
pop
in
imul
les
out
add
gs
cmp
adcl
stos
mov
add
ja
out
dec
mov
inc
addr16
in
add
sbb
lcall
sbb
push
test
add
aad
bnd
jg
add
mov
enter
add
ror
scas
inc
out
pop
xlat
leave
call
movsl
fmuls
sbb
xchg
push
add
adc
mov
add
mov
lds
jle
sub
dec
pop
pop
xor
in
xchg
or
xchg
aaa
xor
fsubrl
mov
pusha
lock
out
add
jae
cmp
mov
add
loope
ret
dec
add
pop
out
xchg
xor
mov
add
stc
dec
fs
xchg
loope
jp
mov
clc
add
xor
and
cmp
icebp
inc
loopne
mov
scas
jg
shr
cmp
pop
add
sbb
or
adc
jle
push
in
xor
cmp
mov
inc
pop
test
pop
inc
cmp
or
movsb
lock
lret
mov
push
sbb
popl
cmpb
pop
stc
jg
lcall
mov
jns
rep
cmp
add
lret
std
add
mov
test
add
sti
mov
sarb
loop
push
loopne
mov
shlb
cmp
add
test
xor
and
sub
pop
scas
add
mov
add
add
pop
cmp
cltd
aad
add
adc
incb
jno
in
lcall
daa
ja
int3
pop
add
rorl
add
jmp
stos
test
out
ret
jle
adc
add
inc
jno
fisttpl
add
xor
repnz
cwtl
mov
and
imul
insl
pop
lds
sbb
cmp
emms
and
inc
test
lock
in
add
jbe
lcall
cmc
jge
or
iret
ret
mov
xchg
movsl
sbb
pop
add
ss
ds
mov
add
xchg
paddsb
jnp
add
int3
mov
aas
pushf
mov
inc
mov
jge
xchg
ss
movb
inc
ljmp
dec
cmc
and
adc
test
add
pushf
fsts
fs
add
in
mov
imul
ds
loopne
pop
sbb
lods
repz
movb
js
lret
add
je
sarl
add
js
xor
sti
mov
add
inc
rep
cli
mov
xor
pop
leave
mov
sbb
shl
mov
in
push
js
xchg
or
fcmovnb
push
cld
rol
pop
aad
cmpsl
xor
lock
hlt
push
pop
cs
sbb
daa
add
and
es
add
into
inc
adc
jno
cli
add
les
shrl
nop
jo
fisubl
push
sarb
or
and
lsl
inc
lret
test
lds
rcrl
fwait
add
ret
push
dec
fbld
shlb
add
gs
leave
inc
or
in
xlat
subb
cs
addr16
cmc
fwait
nop
out
sub
pop
jecxz
ret
popa
jg
jmp
movsl
mov
and
push
push
inc
clc
roll
adc
stos
rcrb
cmp
dec
or
jns
shrl
push
imull
test
ds
or
dec
add
call
inc
fs
pop
ja
pop
inc
aas
popa
andl
cld
scas
popf
mov
sub
aam
int
std
jge
insb
add
mov
repz
enter
add
push
sub
pop
pop
in
add
pop
stc
dec
dec
rorl
in
sub
jnp
mov
push
and
filds
lock
and
mov
pop
test
std
repz
add
out
add
dec
ja,pn
fsubr
lahf
mov
inc
lods
push
cld
addr16
stc
shl
xor
jmp
add
and
lea
mov
mov
dec
mov
mov
loope
addl
adc
fmull
das
sahf
add
fiaddl
adcb
loopne
pcmpeqb
nop
mov
mov
push
and
test
and
das
inc
add
xor
add
imul
xor
rolb
add
ret
jo
fmul
mov
fstps
push
mov
das
sub
jle
cmc
inc
push
in
sub
mov
sub
inc
pop
pop
or
rcl
cwtl
lock
xor
daa
add
pop
in
dec
add
enter
xchg
clc
xchg
stos
xor
xchg
mov
jne
aad
sub
in
or
dec
sub
arpl
pop
xchg
mov
clc
in
rcrl
push
add
mov
enter
mov
mov
and
sbb
pop
jl
inc
mov
xchg
add
lods
xchg
lahf
sub
stos
inc
push
enter
mov
fsubrp
add
ret
rcrl
mov
sahf
jo
push
sbb
call
add
les
xchg
push
fbld
sbb
in
je
jo
dec
push
nop
push
mov
add
sbb
fnstenv
mov
dec
shrb
mov
adc
fdivrl
xchg
inc
xor
sub
add
btr
inc
pop
add
jle
cmp
mov
adc
add
inc
stos
jbe
fimull
add
in
sti
push
push
and
mov
fdiv
add
stc
repz
arpl
xchg
mov
enter
inc
imul
sbb
mov
loop
xor
int3
je
fstps
test
jae
pop
jle
add
adcb
imul
clc
pop
pop
adc
push
in
pop
imull
test
divb
popa
out
add
sahf
enter
sbb
cmc
in
push
pop
and
ljmp
filds
pusha
inc
enter
adc
sbb
or
lret
cmp
mov
adc
dec
adc
cmc
cmp
and
push
pop
jb
add
mov
gs
aaa
pop
mov
sub
enter
dec
or
jg
cmpsl
loopne
pop
mov
js
rol
xchg
push
movsl
or
adc
sbbl
add
lea
inc
pop
inc
add
sub
push
jno
sub
popl
inc
bound
push
xor
aaa
nop
hlt
lahf
loope
iret
push
jnp
add
jne
add
lret
add
cmp
fiaddl
call
inc
lock
push
pop
add
outsl
ss
mov
add
push
jb
aaa
fldt
inc
adc
imul
sbb
jp
push
add
ss
and
add
mov
xchg
xor
jecxz
int
cmc
push
add
push
fsubs
dec
add
xchg
ss
push
sbb
cmp
stos
inc
pop
sbb
cli
rclb
aad
add
cld
push
dec
xorb
fsubrl
pop
push
dec
mov
leave
xor
in
mov
add
cmp
testb
xchg
xchg
add
pop
xor
add
add
or
xlat
aad
outsb
jo
add
cmp
mov
inc
jle
add
mov
nop
and
pop
dec
imul
int3
adc
cmp
xchg
stc
lods
pop
push
mov
xchg
fidivrl
movb
xchg
add
sar
ljmp
cmpl
push
sbb
outsb
pop
cmp
cwtl
add
dec
data16
pop
cmp
pop
in
fcoms
fsubrs
pop
jg
lret
add
in
jge
mov
inc
inc
aad
push
pop
loop
inc
mov
les
movsb
add
leave
sbb
daa
and
pop
jle
rcrb
or
lret
xlat
add
fcmovbe
adc
lcall
and
inc
push
cs
add
negl
inc
pop
add
push
mov
lds
cmp
lret
pop
add
mov
dec
inc
mov
out
cmc
sub
push
xor
push
imul
push
cmp
out
mov
push
add
adc
lods
gs
aas
ret
enter
int3
cmp
jnp
adc
or
mov
cmpsl
or
inc
rorb
sub
mov
jl
cmp
xchg
add
mov
out
add
nop
add
mov
test
push
aam
sti
mov
pushf
add
mov
jbe
out
mov
es
push
adc
enter
mov
dec
or
fiaddl
test
xchg
cmc
lods
add
jns
jbe
sbb
sub
add
push
test
fisubrl
and
call
sub
shr
inc
add
adcl
cli
cld
pop
imul
xorl
and
add
add
popl
or
xor
or
xchg
sbb
add
leave
ja
mov
xor
insb
jbe
pusha
fildll
mov
cmp
inc
and
mov
add
push
fisttpll
add
and
and
and
or
xchg
push
shrl
mov
cmp
jo
cli
ret
jo
sarl
sbb
fnstenv
xchg
cmp
or
ljmp
lret
add
adc
pop
sbb
xchg
loopne
add
push
adc
mov
and
jg
add
add
add
adc
mov
sbb
cwtl
imul
aas
shlb
push
add
bswap
mov
addb
cmpsb
add
daa
mov
inc
mov
inc
add
negl
cmp
add
imul
in
push
add
ds
mov
es
stos
jge
inc
push
pop
add
filds
repz
and
fstps
mov
daa
cmpsb
clc
mov
add
xlat
mov
addl
cmpsl
cmp
sub
adc
mov
jle
add
in
in
add
rclb
dec
icebp
movsb
fists
xor
bound
lock
jmp
jns
dec
xor
cmp
dec
test
mov
push
cmp
sub
mov
cmpsl
aas
je
adc
push
cmc
pop
add
sbb
pop
shll
faddl
fnstenv
insl
adc
push
add
mov
and
scas
xchg
jns
rolb
mov
xchg
add
or
sbb
fnsave
add
cmpsb
call
mov
shlb
fwait
test
rcl
add
nop
loop
mov
addr16
add
fisubrs
jne
in
sti
loopne
aam
movsl
out
add
jo
js
stc
mov
mov
mov
loop
xor
push
xor
mov
jecxz
cwtl
dec
mov
fnstcw
jge
or
sarb
sahf
lea
mov
xor
xchg
xchg
rcrb
test
push
xchg
mov
xlat
out
cwtl
mov
push
xchg
xchg
inc
add
mov
fldl
rcll
out
lcall
in
out
xchg
mov
fwait
add
outsb
adc
jle
daa
imul
xchg
adcb
inc
lret
and
jg
int3
cmp
adc
adc
in
mov
incb
or
popf
sbb
stos
mov
add
loop
ja
push
out
cmp
mov
mov
push
popa
sub
ja
fbld
mov
mov
add
dec
xchg
mov
insb
push
or
lahf
add
scas
sbb
fcompl
ss
cmpsw
sub
nop
xchg
mov
stos
loop
add
mov
orl
xor
dec
sbb
jp
ds
pop
jmp
rcrb
sub
icebp
push
ficomps
fldlg2
pushf
sbb
pop
fstl
test
or
sub
movsl
mov
jge
jp
and
je
add
sbb
lahf
setno
sub
les
adc
xchg
in
out
fcmovnb
or
cmp
sbbb
out
in
add
pop
add
jecxz
sbb
mov
sbb
jp
outsb
lds
cwtl
dec
add
xchg
in
rorl
mov
push
scas
dec
inc
and
imull
adc
into
loopne
lock
fadds
in
js
pmulhw
sti
mov
pusha
test
add
or
jg
and
aam
and
pop
xor
ret
mov
out
mov
ffreep
aas
push
jg
dec
push
lcall
popf
lahf
mov
pop
mov
xorl
pop
jns
adc
loopne
sbb
push
mov
sbb
push
add
stc
mov
sbb
jp
sbb
add
test
hlt
rclb
pop
call
inc
addl
adcl
leave
and
pcmpgtw
mov
imul
pop
adc
add
jnp
dec
add
add
pop
iret
das
mov
pop
test
js
lahf
add
jle
je
lret
xchg
ror
xor
or
add
dec
movsl
fs
xchg
in
jg
pop
push
or
popa
sbb
pop
sbb
adc
dec
jg
lds
lcall
add
test
push
push
sub
cmpsb
push
xchg
or
sub
push
icebp
cmpsl
pusha
test
mov
addr16
bound
in
fldt
cltd
dec
and
rolb
or
outsb
add
jge
mov
add
sbb
aad
imul
outsb
push
not
push
ficompl
out
and
sti
ret
adc
js
jp
btr
loope
jmp
add
mov
lcall
mov
roll
push
cmp
or
mov
or
add
cmc
rcrl
call
cmp
adc
mov
icebp
xor
addb
out
add
mov
repnz
aad
fdivs
add
adcb
dec
jno
inc
inc
jne
and
add
testl
ljmp
xchg
xorb
pop
push
je
into
add
push
push
add
push
clc
jns
movsl
je
dec
pop
loopne
pop
repz
lds
add
mov
lock
sub
arpl
imul
push
push
orl
jle
and
or
add
ss
pop
dec
jl
cmp
stos
lret
dec
scas
sbb
push
push
push
orl
sbb
je
or
cli
aam
pop
and
dec
enter
adc
loop
pushf
stos
loopne
imul
or
mov
sbb
jecxz
push
shl
jmp
jg
outsl
leave
push
add
adc
into
jecxz
inc
cmc
addb
cmp
mov
inc
or
xchg
add
or
insb
nop
mov
not
pop
jmp
and
aas
xor
add
mov
fidivrl
add
inc
ret
sti
arpl
mov
cli
enter
std
jp
xchg
aaa
add
movsb
mov
sti
push
adc
das
dec
add
jnp
add
inc
js
add
pop
subb
sub
mov
dec
push
js
add
in
inc
xor
and
inc
or
xchg
es
add
pop
call
add
sbb
xlat
add
mov
adc
add
xchg
sub
into
imulb
xor
mov
add
sbb
xor
xor
adc
aaa
jge
add
js
aas
add
mov
pop
dec
add
iret
nop
mov
or
test
mov
leave
dec
in
pop
aam
incl
jge
cmp
add
pop
stc
mov
lret
dec
sbb
push
sub
movsb
pusha
imul
add
cvtpi2ps
jb
and
scas
repz
leave
jle
test
adc
sub
mov
jo
movsb
dec
sbb
add
push
cmpsb
gs
add
dec
lahf
sbb
adc
push
add
les
rcll
push
mov
mov
sub
shll
add
lret
dec
pop
xor
out
pop
insb
add
flds
mov
leave
and
gs
and
enter
inc
lds
xor
movsl
popa
mov
addb
push
dec
adc
and
aaa
or
dec
and
mov
xchg
mov
outsl
dec
fisttpll
cmp
pop
push
add
mov
xor
mov
add
pop
insb
mov
mov
inc
xorl
pop
add
out
frstor
out
mov
add
inc
cmp
sub
popf
sub
cmp
arpl
mov
adc
ljmp
insl
pushf
pop
add
or
imul
add
addr16
ja
mov
loopne
fdivl
pop
sbb
sbb
xor
lea
add
push
add
jg
testl
repnz
add
js
xchg
mov
xor
or
lock
add
hlt
in
or
pop
cmp
loopne
shrl
rclb
xor
fdivl
dec
out
in
dec
xchg
push
jmp
xchg
xor
cld
pop
lods
gs
fneni(8087
loope
je
add
push
mov
sbb
loop
inc
mov
out
outsb
loopne
and
xor
jl
mov
mov
rclb
dec
inc
xor
loope
data16
push
mov
mov
int
adc
mov
cmp
mov
int3
enter
mov
jle
outsb
addl
loope
mov
pop
fwait
ja
mov
ret
stc
sbb
insb
test
cld
add
inc
mov
add
mov
add
and
push
ds
xor
fildll
out
dec
aam
fwait
xor
cmp
addps
sub
jo
add
mov
imul
test
xchg
fstp
dec
add
shlb
or
add
sub
cmpsl
enter
xor
lahf
jg
push
imul
fnstsw
ss
inc
aad
xor
pop
add
push
mov
cmp
lret
pusha
mov
sti
sub
lods
repnz
in
add
add
cli
dec
lidtl
adc
cld
fmuls
ljmp
scas
mov
pop
test
fidivrs
loopne
dec
mov
add
cmpsb
sbb
mov
push
xchg
add
cltd
ds
sbb
inc
ret
loop
pop
add
sarb
test
cmp
jmp
inc
mov
push
cmp
inc
sar
mov
ss
js
add
cs
and
dec
aad
shl
sahf
xor
shrb
push
xor
add
clc
dec
xor
mov
mov
jmp
adc
xchg
and
or
out
ret
jnp
add
out
popa
jne
aas
adc
popf
jmp
pop
cwtl
mov
add
cmp
in
mov
add
bound
xlat
leave
pushf
inc
push
xor
sub
mov
in
orb
pop
xor
jnp
add
ja
sbb
pop
stos
mov
stc
cli
inc
pop
jno
sbb
mov
bound
nop
jp
xor
lcall
roll
and
jle
push
out
int3
jl
mov
insl
addl
outsl
leave
ljmp
add
in
xchg
bound
sti
sbb
out
std
sbb
pop
push
add
nop
nop
add
sbb
aam
mov
fcoms
pop
cmp
add
ret
in
das
cld
andb
mov
sub
sub
add
aad
mov
fcmovnu
push
daa
sub
push
and
jmp
xchg
push
lcall
jecxz,pt
add
not
push
inc
mov
lods
add
mov
add
sub
in
xor
je
cmp
add
jg
out
pop
add
pop
jmp
xor
mov
loope
add
mov
scas
lahf
cli
dec
and
push
jg
add
addb
popa
cltd
orl
enter
fiadds
add
xchg
mov
jo
cltd
test
mov
stc
add
cmp
aam
cltd
xchg
dec
add
loop
aam
in
sub
push
jne
rcrb
inc
psubsb
daa
into
fwait
push
cmp
push
fs
jb
addr16
jo
js
xor
inc
leave
sbb
iret
addl
add
lock
aaa
sbb
call
out
ror
lsl
hlt
add
sti
fucomi
sbb
dec
loopnew
paddw
jmp
dec
sub
repnz
jle
mov
and
xor
sbb
sbb
inc
sbb
mov
fisubrs
cli
adc
into
data16
mov
loopne
mov
pop
rclb
add
cld
xchg
in
rolb
push
jae
sbb
js
in
dec
add
and
lret
decl
mov
jecxz
sbbb
pop
aas
shl
bound
pop
add
into
push
and
inc
out
adc
jo
add
mov
cmpb
sarl
mov
mov
add
cs
cmc
push
mov
out
add
je
and
sbb
xorl
filds
in
insb
dec
push
ds
and
lea
aad
jmp
cmp
repnz
loope
icebp
std
in
cmp
xchg
loopne
aaa
and
or
push
test
cld
lahf
mov
mov
std
sbb
insb
xlat
sbb
cs
add
mov
add
mov
ja
pop
add
clc
jge
imul
rcrl
mov
xchg
sub
add
sbb
scas
add
dec
pop
iret
push
dec
es
xorb
test
add
fadds
int3
outsl
mov
mov
ret
mov
sbb
sub
dec
in
add
push
jae
cmp
cmp
mov
ja
inc
adc
add
xor
ret
xchg
nop
xor
mov
in
lcall
or
mov
mov
inc
les
es
jo
orl
out
filds
aam
repnz
outsl
sbb
and
mov
nopl
test
xorl
add
xchg
test
dec
add
into
insb
inc
cmpl
test
cltd
roll
mov
mov
loopne
lods
push
or
inc
andl
and
jb
dec
add
mov
jp
pushf
inc
ss
inc
push
rcrl
xor
mov
sbb
xchg
inc
mov
shll
inc
out
push
ror
adc
testb
xor
loope
pop
adc
out
pop
xchg
lret
fidivrl
cs
add
dec
mov
push
aas
int3
orb
add
fisubrs
sub
popa
sti
pop
mov
pop
call
out
scas
push
add
popa
mov
mov
daa
roll
adcb
sbb
xorb
pop
jmp
cmp
int
add
jbe
xchg
addb
adc
lods
cmpsb
scas
loop
cli
aam
dec
push
loop
adc
fiadds
pop
sub
fcomps
xor
cltd
fstpl
fldt
xor
push
push
inc
test
add
rorb
loope
cmp
cmpsl
scas
fnsave
cmc
ljmp
aad
repz
cltd
and
add
rorb
add
sub
cmpsl
jb
jge
ds
in
add
or
loopne
inc
pop
dec
addr16
shlb
add
loop
stos
test
scas
mov
test
xor
mov
xchg
and
and
subb
and
stos
pop
add
pop
cmovnp
in
popf
je
add
sbb
adcb
pushf
jo
popf
pop
ds
lods
lea
roll
adc
imul
cmp
push
scas
push
pop
add
xchg
pop
fucomi
lods
or
add
movsb
lock
inc
cmp
pusha
add
cmp
idivl
dec
add
popaw
push
ljmp
jmp
jg
and
pop
xchg
xor
shrl
jg
pop
fstpl
sbb
std
lock
inc
lahf
xchg
add
fcoml
push
repz
repz
add
scas
aad
sbb
aaa
push
cld
rcrb
cwtl
insl
mov
jle
sbb
dec
mov
jmp
add
xor
xchg
pop
dec
scas
hlt
in
add
pop
xchg
sahf
jge
add
adc
inc
nop
sub
cltd
aam
jno
lods
or
insb
add
add
and
fs
cmc
jmp
and
incl
stos
scas
mov
xchg
rorb
mov
stos
lea
ret
xchg
stc
call
dec
mov
jmp
adcb
fcomip
cmp
push
lds
mov
sub
mov
adc
fldcw
mov
cld
imul
bound
mov
push
lods
add
roll
cmp
sub
aad
les
clc
mov
add
push
adc
and
in
or
cltd
jns
movsl
add
inc
add
mov
lods
hlt
iret
testl
push
mov
jecxz
dec
addb
and
add
ljmp
mov
in
into
dec
pop
andb
lock
addr16
outsl
or
push
dec
jp
stc
mov
iret
clc
cmp
cmpsl
jne
cmp
xchg
mov
push
loopne
push
es
jecxz
inc
repnz
sbb
add
fdivs
jg
loopne
add
andl
xchg
add
fisubs
dec
mov
add
test
add
add
lcall
mov
popa
jne
and
or
pop
les
add
sbb
jl
into
gs
call
pop
adc
mov
cmc
testl
addb
out
or
cltd
add
dec
pop
mov
pop
xlat
lret
add
cld
cvttps2pi
jle
fsub
add
outsl
xchg
add
out
add
mov
cmpsl
add
push
xor
mov
mov
test
icebp
jecxz
fcompl
sub
les
and
pop
loopne
aam
loopne
and
ret
mov
add
lods
push
mov
repz
ficomps
fs
jmp
push
call
push
rolb
xchg
cltd
pop
mov
adc
mov
add
pop
pushf
loope
adc
ret
nop
sbb
cmp
push
pop
ljmp
add
xchg
repnz
xchg
int
adc
inc
addb
addl
add
or
pop
jne
add
jae
aam
sbb
adcl
icebp
popa
fmull
rolb
push
push
xchg
jecxz
in
or
lods
cmp
add
pop
push
lock
jl
fcom
out
shl
outsb
mov
add
mov
in
add
cwtl
xchg
mov
dec
cltd
lock
add
dec
cli
or
mov
nop
add
out
cmp
sbb
xchg
add
stos
dec
popa
ljmp
int
in
cmp
dec
jnp
ret
cmp
sbb
and
inc
add
in
out
dec
pushf
cmp
leave
cmc
divps
arpl
sti
pop
cmpsb
dec
lahf
outsb
lret
or
loopne
shrl
add
aas
shlb
pusha
mov
push
loopne
pop
xor
add
scas
pop
pop
lock
push
add
pushf
add
or
cmp
inc
ja
fwait
inc
cmpb
add
lds
mov
xchg
orb
add
ds
das
int3
pop
push
add
ret
cs
or
fildl
test
incl
and
and
push
xchg
adc
pop
call
sub
add
dec
sub
inc
andb
repz
cmp
add
test
int3
pop
cmp
add
lds
adc
mov
mov
add
inc
add
dec
inc
aam
stc
pusha
repz
pop
sti
lret
mov
cwtl
int3
add
call
push
sub
add
and
fildl
jle
add
and
sbb
add
mov
sub
mov
inc
lock
sbb
shrb
fisubs
orb
push
jl
push
add
incl
stos
add
notb
popa
mov
dec
add
addr16
or
sbb
bound
ljmp
pop
mov
add
push
fdivr
adc
jbe
lock
outsb
fldt
ror
call
adc
cmpsb
dec
mov
jl
pop
cmpl
in
push
mov
add
jmp
imull
adc
loopne
lods
cli
push
mov
iret
les
sbb
mov
fdivp
pop
es
add
mov
push
icebp
je
stos
xchg
push
sub
andb
in
push
mov
sbb
add
cmp
mov
aas
jns
sbb
push
xchg
ret
xchg
pop
fcom
xchg
sbb
adc
orb
cli
hlt
lock
and
adc
idivl
add
arpl
mov
xchg
push
call
adc
pop
mov
pop
mov
sbb
int3
fadds
sbb
sarb
adc
pusha
lret
jae
pop
pop
add
hlt
clc
mov
or
fldl
out
push
sarb
sub
sbb
mov
ja
cs
incl
xchg
or
or
sbb
sub
adc
sarb
repz
mov
add
into
mov
jg
sarb
xor
adc
call
jbe
test
lock
cmpb
cmp
add
jo
add
cmc
out
pusha
mov
shll
lock
sbb
daa
xchg
cmp
add
mov
xor
mov
fdivr
and
cmp
popf
jo
mov
mov
xchg
inc
mov
enter
mov
ficoms
ss
jmp
ret
mov
sbb
dec
lods
mov
sub
mov
mov
ret
mov
push
mov
fstps
xchg
cwtl
loopne
pop
iret
cmp
lods
mov
fs
add
out
pop
adc
sub
jge
xor
pop
imul
ret
cmp
push
jmp
xor
call
icebp
xor
xor
mov
dec
jo
fsubr
add
xor
jnp
out
add
bound
mov
sbb
inc
inc
in
sahf
add
and
ja
pop
aaa
cs
rol
cmc
dec
roll
cmp
jbe
shlb
ret
xor
test
imul
inc
test
mov
out
jo
xchg
add
jmp
sbb
add
inc
xor
sar
jnp
mov
inc
cmp
sbb
loopne
cmp
mov
jo
scas
sbb
adc
adc
fmuls
xor
ljmp
fadds
aas
pop
jmp
dec
mov
jecxz
or
pop
enter
inc
jmp
icebp
imul
add
xor
jnp
jns
dec
lock
add
adc
pop
mov
mov
test
add
rolb
adc
adc
cld
xor
or
xor
pop
rcrb
sete
int
add
pusha
clc
jns
add
mov
add
repz
inc
or
insl
pop
mov
push
out
inc
jnp
push
shll
push
int3
adc
add
xor
sbb
mov
xchg
xor
inc
mov
les
sbbb
lock
lahf
add
pop
push
jge
sub
lock
dec
lea
mov
mov
outsb
iret
ljmp
cmpsb
scas
mov
inc
xor
lea
mov
popl
inc
sbb
push
inc
aam
mov
or
movsb
push
mov
mov
aas
addb
pop
sub
add
test
dec
addl
outsl
inc
add
sub
andb
adc
fdivr
inc
pusha
cmp
or
rolb
sub
cltd
imul
and
aas
add
xor
negb
push
inc
pop
inc
mov
or
mov
xchg
dec
mov
pop
add
negb
jmp
and
push
mov
mov
leave
out
add
add
lahf
mov
sub
fnstsw
mov
cmpsl
dec
int3
cmp
in
sub
dec
or
dec
daa
inc
pop
test
out
mov
outsb
test
paddq
add
mov
mov
add
xchg
and
cli
mov
lcall
cmp
xchg
sbb
dec
or
lods
jae
mov
lock
scas
insl
push
pushf
push
bnd
add
jmp
add
jae
in
dec
dec
std
xchg
add
loopne
cltd
xchg
nop
and
cwtl
adc
iret
in
sub
xor
loopnew
das
push
cmp
or
fisubl
xor
xlat
fwait
jg
cmp
sbb
mov
sbb
sub
adc
add
pushf
hlt
nop
out
out
fstps
xor
jmp
xchg
daa
push
jecxz
stos
nop
idiv
or
mov
aas
rcrb
or
mov
mov
ja
repnz
int3
int
int
fcompl
and
jae
test
add
and
sbbb
das
inc
andb
nop
jp
loope
lds
and
mov
xchg
mov
sbb
ds
xchg
shll
mull
rol
aas
xor
xor
out
inc
repz
sti
lock
nop
xchg
loop
cmpsb
and
xchg
adc
jle
pop
scas
aas
add
push
lods
in
bound
lcall
adc
out
sub
out
and
add
imulb
test
push
cmp
pushf
loope
and
and
in
and
or
sbbb
pop
test
aas
inc
add
sbb
in
int3
push
xor
or
sahf
and
popf
test
aas
ss
add
mov
mov
push
jb
add
jl
dec
inc
pop
mov
subl
imul
adc
scas
orb
bnd
aam
iret
loope
or
xor
push
add
fs
jns,pt
add
push
jle
mov
roll
loopne
or
fnstcw
daa
jg
test
aaa
enter
movsl
or
lret
outsb
call
push
sub
jnp
movsl
add
cli
inc
add
jb
movb
je
cmp
jp
adc
shlb
sarl
or
clc
in
or
xlat
orl
cltd
ljmp
add
dec
sbb
adc
jecxz
sbb
or
daa
push
xor
mov
jns
and
inc
xor
movl
in
nop
or
add
pop
fidivrl
popf
xor
or
mov
mov
cmp
mov
jns
out
data16
js
je
fldl
adc
or
fmul
cmp
mov
push
ret
inc
and
or
mov
daa
pushf
ds
icebp
and
nop
jb
dec
add
hlt
add
stos
std
xor
mov
inc
adc
mov
or
test
inc
lret
jns
filds
in
out
pop
mov
lock
add
xchg
stos
je
cmpsl
jmp
push
xlat
inc
rolb
shlb
int
add
mov
in
inc
dec
jl
dec
or
inc
pop
inc
sub
add
cltd
icebp
jne
jno
cwtl
pop
add
mov
or
mov
hlt
xorl
pop
nop
cs
add
inc
jle
std
add
stc
pop
mov
out
in
add
xchg
lahf
lcall
jns
add
pop
fiadds
adc
loopne
das
add
cmp
adc
cmpsl
jae
sbb
ja
add
clc
repz
jl
imul
jb
xor
xor
out
adc
mov
outsb
sub
add
sbb
jp
pop
dec
sarb
dec
dec
popf
sbb
mov
sbb
add
decl
dec
or
add
push
repz
shlb
dec
movl
jecxz
mov
inc
filds
nop
pop
pusha
outsl
imul
arpl
dec
and
ds
out
rorb
jg
jae
push
push
cld
inc
add
and
pop
pop
cmp
pop
add
add
pushf
stc
mov
ds
and
or
dec
ficomps
test
popl
iret
out
shrl
xor
sub
push
fwait
pusha
scas
add
push
inc
cmp
aas
add
out
sub
pushf
push
add
cmp
mov
add
or
mov
mov
add
aad
add
arpl
pop
xchg
inc
insb
sub
cmp
enter
add
into
dec
sbb
jmp
adc
adc
xor
mov
rorb
jno
shlb
enter
sub
add
cmc
mov
jne
mov
pop
pop
cs
icebp
xchg
mov
scas
add
jo
add
sbb
cmpl
test
add
cmp
outsl
cwtl
sbb
cld
dec
fldl
mov
inc
fldenv
enter
mov
mov
int3
mov
jg
mov
jne
addl
ss
fildl
xor
nop
in
add
jb
mov
and
push
sub
sub
add
setne
cmp
mov
outsl
add
mov
add
in
and
fsubrs
dec
cmp
push
jb
nop
jmp
and
aam
push
add
sbb
xor
fidivs
jbe
scas
in
and
adc
dec
or
pushf
movsl
xchg
jle
adc
xor
fwait
or
das
sbb
int
adc
sahf
add
sbb
push
mov
add
xchg
adc
add
dec
into
fwait
jb
and
outsb
int3
add
popa
in
in
call
in
mov
mov
cli
imul
sub
adc
push
add
jge
dec
cmp
daa
das
inc
pop
movl
mov
mov
add
pop
mov
arpl
add
xor
adc
jnp
sub
push
int
mov
add
ret
add
in
or
clc
pop
add
mov
xchg
mov
addb
xchg
cmp
or
add
xchg
bound
or
nop
movsl
mov
add
and
sbb
xor
cli
jecxz
jne
fwait
loope
adc
dec
lods
jp
xor
cmpsl
inc
hlt
loope
push
add
or
add
cltd
into
jae
add
inc
fisttps
out
mov
jle
movsb
add
rclb
mov
xor
ljmp
aaa
adc
add
fbld
mov
out
add
shll
hlt
pop
popf
cmp
nop
sbb
add
add
daa
test
xor
mov
movsl
sahf
mov
lock
mov
inc
push
repnz
mov
sub
or
xchg
in
adc
add
sbb
add
dec
shll
dec
sub
emms
push
add
mov
add
push
rolb
inc
dec
jne
in
add
filds
aas
jmp
mov
sub
jo
test
dec
rolb
add
cmp
ficoml
cwtl
mov
repnz
frstpm(287
mov
push
cmpsl
shrb
mov
cmp
xchg
add
vcvtps2dq
xchg
sbbb
lock
push
test
add
pushl
add
mov
ficomps
gs
mov
fadds
stos
or
add
hlt
fisttpll
xchg
mov
insb
pop
loop
dec
clc
ret
push
dec
or
pusha
cltd
sbb
pop
mov
mov
xchg
stc
and
or
cmp
jne
sbb
cmp
rcll
push
das
mov
push
gs
mov
jno
add
fs
xor
mov
push
or
inc
mov
out
arpl
jb
xor
mov
outsl
lea
or
inc
lods
xor
cmp
jg
out
add
sbb
jbe,pt
rcrb
test
hlt
xchg
xlat
cli
push
rcr
and
push
add
dec
jo
enter
pop
and
mov
adc
and
sti
adc
movsb
sub
xchg
jg
xor
mov
jne
adc
jns
add
xlat
rcrb
mov
fsub
mov
jbe
jecxz
lret
bound
jns
cmovb
je
or
add
js
mov
test
ljmp
js
out
lods
adc
mov
adc
add
sbb
add
cltd
jle
inc
xchg
add
push
adc
pop
inc
pop
add
stos
sarl
comiss
repnz
int3
mov
subb
loop
mov
jge
sub
and
add
test
repz
add
fimuls
xor
rcrl
jno
adc
je
adc
xor
out
gs
add
jmp
es
xchg
mov
cmp
xchg
das
arpl
movsl
call
mov
jno
pop
push
pop
out
cmpb
adc
jbe
popf
lods
bound
pop
add
pop
add
ficoml
cltd
sub
jge
jbe
dec
push
cmc
stc
aad
push
add
ret
add
cmp
ljmp
mov
and
xchg
xor
lea
mov
pop
jg
xor
ljmp
mov
add
test
inc
test
xchg
mov
pop
mov
cmp
pop
aad
cmp
cltd
pusha
sbb
xlat
or
incl
mov
aas
scas
flds
in
jae
cmp
lret
mov
jmp
nop
cwtl
jl
pop
nop
mov
cmpsb
mov
add
xor
cli
push
shlb
inc
or
xorl
jns
stos
pusha
adcb
sbb
pop
stos
sub
daa
cwtl
mov
xchg
test
ljmp
dec
sarb
aam
fidivrl
pushf
dec
jecxz
push
cwtl
loopw
add
or
pop
dec
or
test
out
stos
inc
sbb
push
add
cltd
popa
mov
sar
lock
lahf
xchg
inc
idivb
scas
or
cwtl
mov
sbb
popa
rolb
cmp
or
test
dec
cltd
rcr
and
cmp
pop
dec
xchg
push
shr
out
sbbl
rcr
push
mov
sbb
add
cmp
ja
add
ds
loop
orb
push
add
fiadds
add
mov
xchg
rcrb
mov
ja
test
sahf
int
fwait
jge
dec
jge
ljmp
push
clc
pop
add
inc
rorb
sti
mov
imul
stos
call
cmpsl
dec
mov
or
or
ss
add
xor
faddl
clc
sbb
fsubrl
addr16
mov
sahf
addb
jns
add
sbb
imul
mov
add
inc
fsubrs
inc
pmaxsw
xlat
fldcw
pop
call
hlt
popa
ja
sub
clc
push
mov
push
repz
xor
filds
es
adc
inc
cld
sub
add
pusha
mov
lods
inc
sub
lock
incl
sahf
in
pop
jmp
movl
push
and
in
movsl
or
cmp
test
push
mov
and
pop
in
ljmp
dec
xrelease
sahf
mov
inc
pop
xchg
lock
xchg
inc
inc
andb
or
push
aam
and
lock
sub
mov
outsl
sahf
or
std
popa
clc
pop
sub
jle
inc
icebp
cmpsb
mov
aad
aam
sarb
leave
jnp
dec
mov
pushf
pop
bound
push
mov
or
out
jno
lock
addb
pop
mov
nop
add
out
aas
lret
xlat
and
xor
ret
push
call
stc
fwait
rorl
icebp
not
std
jo
or
jnp
add
xchg
add
filds
andb
hlt
jo
add
push
inc
loop
lods
pushf
and
lea
decl
adc
je
add
outsb
test
dec
movsl
bound
call
cmc
fucomp
pop
movsb
push
and
ret
nop
add
rcr
inc
pusha
dec
in
test
sbb
dec
mov
cmc
mov
je
xchg
add
sub
xchg
cmp
in
push
mov
xchg
flds
xor
jp
or
call
push
cmp
loop
repnz
add
mov
aad
nop
add
outsl
push
pop
inc
sahf
add
in
dec
inc
jle
cs
je
lods
test
jecxz
data16
inc
dec
add
cmp
or
or
sbb
and
arpl
add
add
adc
test
add
or
pusha
sti
sub
dec
inc
ljmp
adcb
jnp
sbb
inc
loop
xor
cwtl
mov
pop
cmp
mov
popa
xlat
jne
andb
aam
pextrw
lret
inc
pop
pop
sub
pop
add
sbb
push
add
enter
add
fidivrl
cwtl
add
cmpsb
in
pop
push
add
xor
or
dec
push
int
jbe
cmc
loope
pusha
fwait
push
sbbb
outsl
dec
test
xchg
jns
pop
hlt
shl
lods
in
aam
add
scas
cmp
shlb
dec
fsubrp
or
push
das
push
and
stos
je
pop
mov
je
loopne
mov
mov
mov
or
push
inc
adc
lods
out
sub
pop
repnz
push
xor
add
mov
push
out
cmp
test
or
xor
inc
pop
push
bound
pop
mov
in
add
test
sti
add
lret
or
fdivrs
popl
or
add
lock
sbb
jecxz
push
cmpb
adcl
sbb
popf
scas
mov
notb
lods
test
inc
and
mov
mov
rolb
mov
dec
adc
xchg
lahf
push
inc
jmp
add
test
adc
addr16
dec
cmpsl
repnz
out
movsl
mov
lret
aaa
movb
rol
rol
jo
cmp
lcall
scas
mov
sub
cltd
enter
in
or
out
lods
loopne
add
and
mov
shrl
cli
inc
stos
iret
inc
add
mov
out
shrl
add
int3
bound
sahf
leave
dec
addr16
inc
xchg
mov
out
jo
cli
aas
in
add
mov
cwtl
roll
pop
flds
dec
jle
xor
add
adc
dec
xor
sbb
cltd
add
or
dec
mov
lds
cmp
sbb
cmp
xor
iret
mov
pop
jo
add
jp
push
xor
dec
clc
add
and
xor
jge
mov
shr
pop
hlt
add
rol
adc
insb
jmp
rcrb
and
dec
fcmovnb
adc
lea
cmp
jae
ja
mov
and
hlt
test
pop
mov
cld
or
ja
or
es
mov
inc
nop
rcr
pop
add
mov
pop
cmp
add
pop
aad
mov
ret
in
or
adc
mov
sti
xchg
push
add
popa
add
jge
jl
push
dec
inc
jp
mov
subl
add
das
and
shrb
xchg
jo,pn
xor
addl
pop
daa
push
xchg
sub
xchg
xor
dec
aaa
mov
lock
pop
js
pop
pop
cltd
sbb
ss
mov
xchg
ret
dec
add
and
popa
add
jecxz
insl
repnz
or
jp
add
inc
cmc
test
xlat
nop
cmp
sub
test
add
jg
out
popa
push
push
int3
cmc
in
add
data16
add
pop
add
pop
push
fnsave
scas
imul
add
mov
push
data16
dec
aam
sbb
fists
jo
add
and
popa
and
lock
add
repnz
or
out
ljmp
adc
mov
push
mov
sbb
inc
add
add
sub
imul
lahf
jns
aas
addl
out
dec
jp
int3
lahf
jae
add
dec
movsb
and
ds
mov
sarb
and
pop
paddb
imul
add
test
add
lods
mov
add
xchg
lods
mov
jo
pop
jg
push
lock
aaa
cmpsb
in
ret
ficompl
mov
xchg
notb
arpl
pusha
sbb
mov
decb
out
jo
cmp
push
fdiv
nop
test
fimull
push
sub
stos
in
mov
xor
jmp
inc
lea
inc
pushf
in
add
sub
pusha
lods
shlb
ss
sbb
cli
in
cmp
loopne
inc
add
xchg
mov
dec
sti
dec
movsl
push
in
packsswb
push
push
call
sbb
jns
shl
pop
cmpsl
shlb
mov
pop
lock
pop
xorl
xchg
fdivl
jecxz
cmp
das
adc
mov
ret
or
jbe
clc
cmp
fnstcw
and
inc
andb
mov
mov
inc
clc
push
movsl
pusha
aaa
sub
sub
sbb
das
orb
fidivrs
jp
or
adc
jle
andl
adc
call
pop
adc
jnp
cmp
pushf
and
pop
es
pop
rcl
jne
rclb
jae
or
xchg
xor
adcb
test
xor
movsb
cmp
adcb
test
loope
lods
jo
out
pusha
or
inc
cmpl
add
cwtl
or
jae
sub
pop
cmp
and
sub
jecxz
push
mov
lods
cmp
jl
negb
out
add
xchg
pop
push
jle
jne
cmp
cmpsl
out
add
aas
imul
iret
jo
add
mov
data16
or
push
pusha
out
fcompl
cmpps
fcoms
add
and
loopne
add
in
cwtl
mov
add
inc
loope
mov
push
dec
dec
push
add
lea
cmp
lret
sbb
pop
mov
jo
or
mov
mov
add
test
fisubs
mov
addr16
pop
sub
ljmp
cmc
add
fs
add
sub
scas
pop
add
ret
add
inc
push
bound
sbb
std
adc
xchg
sahf
mov
clc
mov
add
mov
push
mov
or
fwait
sbb
xor
sbb
rolb
fisttps
loop
int
and
mov
xchg
cwtl
fnstenv
outsl
pop
add
cmpsl
dec
std
rcrl
dec
mov
orl
adc
or
inc
pusha
push
cld
aam
orb
sbb
ret
xor
clc
or
outsb
sbb
in
push
out
mov
bound
adc
mov
mov
add
xchg
sbb
mov
mov
test
imul
mov
mov
addl
pop
iret
add
or
inc
jmp
mov
cmp
and
mov
lret
sub
loopne
xor
add
add
mov
lea
mov
pop
jno
loopne
cmpsb
mov
add
mov
pusha
pop
adc
cmpsl
ljmp
xor
in
fmuls
jle
in
repnz
xchg
sub
arpl
lahf
add
insb
insl
lock
pop
xchg
mov
pop
add
or
add
inc
loopne
mov
call
mov
lret
notl
sbbb
dec
dec
add
mov
mov
push
push
add
repnz
jmp
push
add
cmp
adc
outsl
cs
cld
lret
or
add
cwtl
dec
repnz
adcb
xchg
in
xor
je
movsl
add
pop
bound
inc
adc
adc
inc
mov
jmp
or
jbe
and
shlb
lret
add
in
xchg
jnp
mov
out
lcall
hlt
cmp
add
in
jle
xor
push
andl
iret
xchg
add
inc
leave
inc
cs
add
or
xchg
ja
inc
add
lock
outsl
add
js
into
xor
jb
add
cmp
hlt
bound
xchg
movsl
pusha
push
in
dec
add
mov
mov
bts
pushf
call
xor
add
jl
jbe
movl
aaa
test
pop
or
sub
xor
test
add
sbb
push
mov
cld
adc
dec
stos
addl
cltd
push
loopne
and
pop
dec
mov
movsb
lcall
dec
jno
inc
mov
rolb
sbb
mov
mov
out
lea
add
mov
in
adc
es
sbb
and
jmp
cmp
sbb
add
pshufw
jle
add
test
shll
shlb
push
mov
xor
aas
add
xchg
lahf
cli
lea
js
push
mov
xchg
clc
int
or
out
or
xor
cmp
lods
add
mov
lahf
fistpll
sub
imul
jg
xor
lods
mov
xchg
pusha
add
adc
xchg
rcrb
mov
rcr
movsl
and
add
ret
fnstenv
xchg
enter
popa
add
push
inc
or
push
add
std
cmc
ret
cld
cwtl
daa
bound
lods
insl
and
sbb
push
loop
push
cmp
mov
add
pop
cwtl
stos
xlat
out
add
add
std
mov
aaa
adc
xchg
ud0
mov
pop
cwtl
loopne
xchg
dec
dec
adc
pop
push
cli
mov
add
inc
mov
repnz
jecxz
xor
shrb
xchg
cmpb
jmp
dec
adc
cmp
stos
lcall
sbb
pop
add
mov
sbb
adc
lds
xor
push
inc
jne
push
mov
mov
test
insl
sbbl
push
pop
pushf
xchg
out
push
flds
inc
xchg
test
mov
add
roll
pop
jle
mov
mov
in
out
cli
jb
sbb
jmp
add
push
in
inc
add
std
dec
add
and
pop
xchg
pushf
pop
xorb
in
shlb
push
inc
cltd
add
rcrb
outsl
xchg
cmp
add
push
mov
add
and
in
push
dec
dec
lods
or
out
pop
mov
pop
out
mov
fwait
imul
add
lahf
fldl
push
or
jns
lds
inc
or
inc
sub
or
lods
daa
lret
shr
inc
or
or
add
sbb
xor
xor
fwait
add
inc
xchg
aam
xorb
loope
jne
mov
clc
mov
test
adc
pop
rcrl
push
mov
pop
repnz
inc
mov
inc
mov
insl
xor
stos
in
add
jle
cmc
hlt
sbb
xchg
adc
sbb
jge
vpunpckhbw
clc
adc
lock
stos
cli
add
inc
call
dec
and
add
mov
lret
xchg
and
lcall
jo
faddl
mov
jle
imul
add
dec
or
xchg
fmull
testl
and
add
fcoms
dec
xlat
mov
jecxz
pop
xor
or
call
inc
push
mov
ljmp
test
jp
test
addl
add
mov
add
rclb
lret
notl
add
lcall
sti
add
shll
je
les
cs
cmp
jae
js
sahf
movl
push
sbb
add
sbb
aam
rolb
es
addr16
str
je
add
xlat
dec
jne
push
mov
pop
push
xacquire
in
cwtl
mov
imul
lods
testb
pop
sub
dec
pop
pop
lea
stos
push
shl
dec
add
jp
repnz
add
add
sbb
popf
pop
imul
or
call
std
adc
daa
add
loop
int3
add
jo
jecxz
dec
push
out
inc
mov
mov
movsb
add
leave
lret
das
ja
ret
adc
dec
in
add
jo
add
jnp
repnz
mov
add
cmpsb
mov
add
aas
scas
mov
ljmp
mov
rorl
jno
pop
sbb
mov
sbb
in
sub
jecxz
xchg
andl
xchg
add
dec
in
add
roll
faddl
mov
out
vminss
imul
dec
dec
scas
sti
out
add
xchg
mov
add
inc
in
dec
push
in
add
or
jecxz
and
mov
mov
push
xchg
leave
int3
addr16
fs
adc
dec
rclb
cld
add
jbe
mov
and
cmp
jno
clc
loope
jb
mov
pusha
rol
pop
xor
and
inc
add
daa
mov
fldenv
jg
pop
push
imul
push
fwait
outsl
mov
or
or
in
sbb
std
scas
lock
xor
bsf
addr16
dec
aad
mov
stos
pusha
pusha
push
popl
shlb
fildll
daa
in
add
fwait
cmp
cmpxchg
ljmp
inc
add
pushf
cmp
mov
lret
add
movsl
ss
jle
lods
push
sti
add
push
sets
data16
add
add
int
xor
cmpb
sbb
lock
fnstenv
push
jl
cwtl
add
jle
cmp
add
call
call
lds
out
mov
add
jmp
dec
insb
call
push
test
inc
jns
jae
add
xchg
icebp
adc
dec
subb
lahf
mov
ror
ljmp
out
push
into
pop
fldenv
adc
cs
sbb
pushf
mov
push
lea
adc
xchg
mov
xchg
pop
shlb
call
pushf
jg
or
sti
test
aaa
testl
mov
test
dec
out
dec
pop
mov
inc
int3
arpl
jb
sbb
add
andb
icebp
shl
cmp
mov
lods
inc
call
pusha
insb
sbb
jmp
adc
dec
inc
cmpb
xlat
cmp
xor
pop
mov
out
adc
into
iret
mov
add
mov
jbe
add
popa
inc
xchg
xchg
hlt
cmp
les
jae
xchg
pop
shlb
sub
add
jno
mov
in
aad
addl
mov
pop
shrl
loopne
mov
adcb
pusha
pop
adc
or
cmp
shrl
lods
add
mov
aaa
mov
test
int
orb
xchg
lock
sbb
add
jg
nop
mov
gs
add
xor
sti
pop
or
and
sub
js
adc
sbb
in
jl
cmp
xor
aaa
sub
push
test
cmpsl
jle
mov
inc
sbb
rorb
pop
repz
add
mov
movb
xlat
inc
mov
add
sub
and
adc
in
xlat
dec
out
mov
repz
jp
xchg
add
mov
mov
jmp
ja
call
dec
jne
pop
xchg
fstpl
outsb
lods
inc
jnp
sbb
xor
inc
dec
inc
and
loopne
repz
sbb
xor
aaa
add
adc
popl
push
pop
sub
xchg
scas
add
bound
stc
out
jge
movsb
fsubs
mov
cs
pop
pop
mov
fstps
add
addr16
xor
or
adc
mov
mov
inc
sub
push
inc
xor
or
inc
ja
inc
call
aam
mov
adc
imul
and
je,pn
sub
das
or
adc
cld
mov
adc
in
imull
xchg
lods
add
fs
jl
dec
dec
add
push
cmp
xor
inc
daa
pop
xor
fsubs
sbbl
cmp
aaa
mov
cmp
mov
loop
xchg
jno
pop
and
adc
inc
xor
ja
nop
add
cmpsb
das
xor
inc
andl
gs
xor
mov
mov
test
imul
fisubs
mov
xor
iret
jl
sub
mul
into
sbb
pop
mov
xor
mov
push
mov
fs
data16
out
and
clc
pop
and
mov
test
mov
popa
loopne
mov
fucom
add
xchg
in
clc
cs
aad
mov
daa
nop
lock
cmp
int3
or
and
stc
daa
xchg
loope
and
out
outsb
inc
jo
lea
or
aaa
enter
adc
movsb
and
cli
psllq
lds
pusha
xchg
mov
std
nop
clc
mov
add
daa
jae
mov
jbe
sbb
push
dec
jl
pop
test
xor
dec
mov
sub
mov
add
and
add
pop
sub
jmp
inc
sbb
jns
jecxz
stc
adc
les
add
and
jae
pop
cmp
pop
mov
jg
cmp
scas
add
inc
mov
sub
call
lret
xchg
and
push
sub
fs
add
xor
mov
cmp
jl
cmovle
add
sbb
mov
jo
das
xchg
push
xchg
sub
imull
sbb
lret
arpl
or
iret
addb
mov
xor
std
cmpsb
and
testl
xchg
jg
mov
iret
and
inc
add
add
ds
aad
divl
or
and
xchg
push
add
push
sbb
shlb
mov
rolb
iret
or
fnop
push
dec
pop
sbb
std
push
jmp
lea
stos
dec
or
repnz
inc
popa
cld
add
fiadds
add
jo
in
int
aas
add
ja
ret
add
dec
pushf
mov
xchg
jp
fnstenv
inc
xchg
movsl
into
in
add
js
mov
and
push
fadds
call
xchg
jmp
push
cmp
xlat
pop
das
cwtl
xchg
add
mov
mov
push
push
cmp
in
fmull
imul
ret
pop
cmp
lds
mov
shrb
lret
push
out
jp
and
adc
cltd
cld
call
adc
test
mov
clc
lret
add
push
aam
imull
aaa
incb
cmc
addr16
movsb
les
repz
pop
mov
inc
push
cltd
addr16
xor
jecxz
call
sbb
xchg
jge
shlb
into
sbb
mov
adc
fnsave
call
test
out
pusha
out
sbb
xchg
or
pcmpgtw
jmp
insb
out
test
inc
and
push
fstpt
cmp
pop
mov
adc
push
pop
pop
adc
jb
je
push
jae
jns
lcall
lret
jne
rcl
in
shlb
jns
popf
sbb
repz
sub
test
adc
aas
stos
repz
adc
push
pop
xchg
push
mov
fidivrs
add
inc
lock
xchg
cmpsl
dec
and
mov
nop
outsl
test
aas
in
arpl
jnp
push
ret
rolb
dec
adc
jno
punpckhwd
ffree
cs
out
sub
adc
add
inc
sub
add
xchg
mov
push
cmp
sbb
filds
inc
ss
out
rcll
sbb
add
xor
xchg
inc
push
add
enter
iret
inc
add
xchg
mov
cmc
add
call
adc
xor
add
or
repnz
mov
xor
out
lock
dec
add
call
movsb
jb
mov
adc
inc
les
pop
xchg
popf
in
add
test
pop
cld
arpl
pusha
cmc
add
push
loope
push
jge
fldl
ror
or
mov
js
ds
inc
cmp
rol
ret
push
aas
test
add
sbb
add
insb
sbb
dec
mov
adc
and
xchg
xor
and
pop
divb
push
cmp
add
in
push
es
fsubl
add
stos
pushf
sbb
sbb
addr16
pop
xchg
jecxz
out
jns
jle
dec
mov
test
sti
push
sub
mov
dec
sahf
ss
push
fsubrl
pop
jle
popa
out
add
xor
in
push
mov
stos
pusha
xor
insb
and
and
and
add
lret
or
ljmp
fldl
cld
adc
les
popf
sbb
loopne
fbld
pop
mov
mov
add
aad
dec
mov
dec
mov
in
jge
loopne
in
pushf
or
bound
mov
call
push
sub
sarl
jg
fwait
jp
and
xor
push
add
mov
test
clc
push
lcall
jg
pop
xor
or
sarb
xchg
xor
std
mov
loop
cwtl
mov
nop
xor
xchg
pop
mov
cld
xorl
int3
cli
push
add
pop
and
jmp
xchg
ret
inc
mov
add
mov
divb
insb
lret
jns
repnz
lret
inc
mov
mov
push
pop
xchg
test
dec
jg
add
lock
mov
pop
pop
pop
pusha
jnp
jg
add
jle
insb
test
std
push
add
mov
add
push
loop
pop
mov
add
dec
pop
movb
and
loop
push
pusha
es
xor
push
fbld
pop
mov
loope
xor
lds
push
add
jle
pop
dec
and
mov
push
in
xchg
insb
inc
clc
xor
add
mov
subb
push
cmp
adc
mov
mov
add
outsl
inc
je
lods
pop
mov
cld
in
int3
stos
sbb
fcompl
lret
aad
sahf
dec
or
dec
push
add
jns
insb
push
addb
aam
xchg
add
lret
xchg
push
in
fwait
iret
push
pop
fsubr
xchg
rolb
stc
das
adc
ret
add
rcr
add
repz
fs
sub
sbbb
stc
adc
adc
add
jl
rcrl
xchg
mov
repz
hlt
mov
bound
lret
pop
out
inc
xchg
cmp
addr16
loop
add
or
inc
and
add
movsl
mov
repz
adc
or
push
pop
cmpsb
enter
add
cltd
ljmp
stos
xchg
push
scas
jge
pusha
cmp
sbb
aad
sbb
gs
xor
loope
sub
and
cmp
cmpsl
adc
jae
mov
push
add
cmp
cmp
testb
adc
xchg
mov
or
pop
mov
and
cltd
arpl
cld
out
cmp
stc
sub
fisubrl
push
pop
mov
iret
add
sbb
dec
enter
add
dec
xlat
daa
jno
mov
je
scas
ljmp
prefetch
ss
rorb
xchg
cmp
lea
xor
shrb
dec
loope
scas
call
push
mov
push
sarb
push
int
mov
sub
lock
movsl
sti
sbb
push
cmp
push
add
movsb
jns
xor
add
int3
fisubrs
add
outsb
sbb
add
repnz
add
ss
sti
cmp
repz
aas
jp
add
movsb
xchg
addr16
je
jmp
mov
lock
popf
inc
sub
dec
loope
jp
add
cmpsl
leave
cmp
mov
mov
cmc
xor
sub
xchg
dec
stos
xor
and
add
jle
aas
ja
xchg
daa
jns
cvtps2pd
sub
add
add
xor
xor
mov
mov
xrelease
into
sub
out
xchg
add
adc
jns
divb
lock
mov
loope
sbb
lcall
or
outsb
lods
jle
add
or
hlt
push
xor
imul
and
push
sbb
jbe
adc
jne
add
cli
fwait
rolb
or
lret
sti
add
mov
into
and
data16
btr
push
and
jge
inc
jo
lds
popa
divb
inc
adc
fidivs
and
mov
cwtl
mov
insb
cwtl
pop
push
pusha
sub
mov
mov
jecxz
add
ljmp
andb
movsl
sub
scas
dec
cmpb
xchg
lods
lret
sti
pop
fidivrl
hlt
sbb
add
mov
push
jge
push
xor
test
jg
jno
inc
bswap
add
hlt
shlb
lock
xlat
add
std
int
jbe
add
xor
pop
mov
sbb
mov
ljmp
or
es
or
add
cmp
lock
mov
sarl
xor
push
dec
int3
ror
push
aam
stos
aad
xchg
adc
sbb
cwtl
sub
push
or
daa
arpl
movsb
pusha
xchg
mov
pop
fs
mov
jp
push
adc
test
push
push
or
movsl
jo
mov
lods
and
or
push
push
in
mov
inc
add
fnsave
test
xlat
fcmovnu
pop
ljmp
out
std
lcall
dec
cmp
push
addr16
push
test
ror
and
mov
sub
in
test
add
push
loope
inc
cmc
testb
and
mov
xor
jo
push
sbb
dec
ljmp
movsl
adc
xor
add
xchg
xchg
xor
inc
mov
inc
cmp
jo
cmp
sub
test
dec
out
add
aas
mov
xor
stos
mov
in
dec
out
pop
mov
pop
pop
in
inc
or
add
aam
add
add
mov
fdivp
dec
push
jmp
insl
adcb
push
sub
popa
out
inc
and
in
and
add
mov
cwtl
pop
jp
ret
pop
adc
add
xor
cld
inc
mov
call
bound
add
data16
and
adc
xchg
sub
add
jno
jbe
or
add
cli
cmpsb
cs
adc
inc
aas
xchg
sub
add
data16
ds
fst
mov
imul
xchg
stos
pop
mov
or
scas
leave
add
jl
rorb
add
cli
mov
add
loope
xchg
pushf
inc
pusha
add
adc
jg
rol
sbb
add
push
mov
clc
out
mov
out
dec
icebp
add
fbstp
ds
add
bound
inc
and
push
loopne
add
orb
hlt
fcoml
cmpsb
jbe
add
outsb
movsl
stos
loop
add
ds
and
lods
dec
cmp
addl
push
loope
add
dec
in
shr
arpl
aas
and
mov
enter
in
frstor
rorl
or
shrb
add
xorb
test
ret
insb
xchg
xorb
int3
arpl
sbb
daa
and
mov
sbb
pop
out
adc
mov
fists
into
test
arpl
inc
aam
dec
addr16
xor
add
pop
addl
jmp
nop
sbb
out
shl
sub
lret
pop
fwait
dec
ret
jmp
negb
clc
add
fiadds
adc
jns
adc
cmp
aas
add
sub
aam
fildl
shl
xor
mov
and
pop
push
jle
cwtl
dec
add
xchg
out
sub
inc
mov
pop
test
mov
outsb
and
adc
mov
jecxz
or
enter
jo
add
enter
inc
sbb
das
xchg
movsl
xor
bnd
xcrypt-ofb
cmpsl
insb
mov
daa
push
int3
stos
sarb
les
loopne
add
cmp
iret
lahf
pusha
pop
aaa
scas
add
xor
and
add
push
rcrb
js,pn
add
adc
roll
leave
aad
push
jecxz
cmp
mov
gs
jno
je
cmpsl
inc
pop
out
ljmp
add
hlt
and
lock
push
fdivr
fidivl
push
xchg
stc
add
lret
nop
scas
in
sbb
mov
pop
or
bt
add
mov
mov
xor
jno
cld
test
aas
push
loop,pt
cmp
pop
mov
cmp
and
dec
nop
sbb
sbb
rcr
movsl
sbb
mov
test
outsb
cltd
je
add
cli
call
xor
sbb
pusha
fsts
imul
ja
push
test
in
mov
cmp
pop
and
sub
mov
pop
fldcw
jb
and
out
nop
imul
sub
adc
pop
cmpsb
negb
shr
faddl
jp
sarb
push
mov
inc
rep
pop
sbb
fnstcw
mov
sub
cmp
dec
call
sub
shld
xor
aad
pop
sbbb
rcll
stos
stos
push
push
add
les
add
mov
xor
xchg
fmul
jge
add
pop
dec
pushw
mov
pop
mov
adc
mov
pop
push
xchg
int3
and
das
push
or
lods
mov
add
adc
push
shll
add
sti
shl
imul
push
sub
aad
push
ret
xor
xorl
cmp
pop
mov
into
andb
dec
rol
sbb
sbb
hlt
adc
sahf
movsl
or
test
cmp
mov
jnp
push
mov
movsl
mov
icebp
jge
dec
and
sub
pusha
scas
jmp
pop
inc
in
cli
pop
jecxz
into
int
pusha
mov
adc
or
loopne
cmp
sbb
stos
mov
pushf
mov
popf
inc
cmp
ret
js
sub
mov
pop
mov
sti
negl
pop
push
dec
clc
inc
in
mov
push
mov
cli
push
dec
aad
or
xor
cwtl
rcrl
sbbb
and
pusha
pop
inc
gs
fsts
aad
and
js
andl
pop
stos
dec
fcoml
dec
ret
pop
add
out
sbb
mov
push
xor
imul
cmp
or
mov
aad
aam
daa
add
jb
mov
add
cltd
movsl
mov
push
adc
pop
pop
pop
lea
rolb
add
popa
fs
xchg
fsubs
sub
scas
loopne
pop
xor
int3
call
repz
add
shr
sub
lsl
jae
mov
loopne
mov
call
icebp
pushf
dec
adc
jne
xchg
and
add
test
sbb
sarb
dec
mov
out
and
cli
or
ja
aas
sub
hlt
cmp
cltd
fiaddl
ljmpw
xchg
addl
int3
ss
add
jb
lcall
add
push
xchg
pop
roll
dec
fadd
fwait
scas
sbb
shll
xor
ljmp
xchg
gs
lret
push
clc
adc
pop
cmp
loop
cmp
lret
mov
outsb
push
inc
xor
add
std
adc
fidivrl
and
cmpsl
and
icebp
insb
lock
cmp
mov
xor
and
jle
dec
pop
adc
pusha
push
icebp
xor
lret
pop
mov
xor
and
jbe
loopne
pop
xor
xlat
in
and
add
jo
cmp
add
mov
movsb
mov
movsl
add
call
push
ja
notl
cli
mov
push
sub
mov
or
shrb
sub
mov
sarl
sbb
xor
mov
push
gs
lock
iret
xchg
xchg
push
inc
ds
das
subb
or
shlb
enter
sub
imul
enter
icebp
pop
arpl
and
cli
sub
inc
shll
cmp
or
jno
xchg
sub
pop
dec
test
pop
sbb
push
js
mov
add
dec
lock
int
add
xor
fsubrs
sub
push
push
ja
xchg
js
divb
sbb
mov
cmpsl
xlat
cmp
inc
add
in
mov
adc
cmp
add
clc
and
or
add
pop
or
dec
pop
add
jl
lea
hlt
adc
mov
repnz
loop
or
shl
mov
popa
jge
scas
inc
cmp
dec
adc
add
aad
out
and
mov
pop
movsl
mov
xor
sti
pop
int
fcmove
mov
shlb
cwtl
lret
jge
cli
mov
mov
std
iret
inc
fbld
fisttpll
sub
mov
int3
push
jge
cld
add
sub
test
ja
push
iret
fcmove
mov
cmpsb
push
xlat
addr16
dec
dec
ss
pop
add
out
int3
sub
lcall
test
add
scas
mov
mov
add
push
and
js
cmp
jae
mov
movsb
xchg
fidivs
dec
dec
xchg
xchg
cli
add
jo
nop
jle
fildl
ret
sub
cmp
jmp
lock
icebp
scas
pusha
jecxz
addr16
push
mov
pop
arpl
lret
inc
xor
mov
dec
lock
adc
pop
sub
dec
jp
add
std
jecxz
cltd
push
xchg
jne
and
add
cs
outsl
cmp
xor
fcompl
mov
cltd
les
call
mov
xlat
fs
lock
xchg
add
mov
outsb
dec
flds
arpl
sub
or
cmp
cmp
pusha
iret
and
fsubrs
add
mov
les
add
jo
fmuls
clc
in
call
inc
jmp
adc
fisubs
adc
mov
jl
pop
push
inc
insl
and
rolb
sbb
lcall
push
jmp
nop
lahf
mov
push
adc
add
sub
insl
push
adc
add
cwtl
xor
fsubrs
lock
rolb
es
mov
inc
cld
ljmp
jmp
mov
push
jo
add
lock
cmp
les
pop
fdivl
ds
add
add
xchg
icebp
pop
xor
and
pusha
into
xor
pop
pusha
pop
sub
or
test
lds
cwtl
sbb
xor
outsb
adc
or
inc
insl
and
loope
push
and
mov
mov
and
and
fsub
notl
adc
repnz
ds
add
mov
pop
rclb
popf
fdivrl
cli
jmp
push
jnp
icebp
test
int3
fimull
pop
leave
gs
aad
andb
mov
mov
xchg
sbb
jecxz
inc
cmp
add
movsb
pop
or
adc
cltd
sub
add
cld
mov
cmp
and
xchg
rorl
xor
aad
jle
fisubrs
cwtl
dec
mov
pusha
push
int
out
cmp
jb
jmp
sbb
inc
inc
insb
nop
rolb
leave
std
add
pop
adc
add
jecxz
ret
aam
fdivs
mov
test
add
mov
mov
rclb
sub
mov
mov
mov
push
xchg
es
icebp
mov
xchg
inc
movsb
out
jno
cmpsb
pop
sbb
jg
inc
mov
or
enter
addr16
mov
push
sar
lock
push
pop
inc
fwait
push
adc
insb
xor
mov
push
rcl
in
add
jg
fidivs
clc
je
pop
mov
pushf
dec
add
stos
cmp
add
rcl
mov
fisubs
insl
sbb
in
fiadds
xchg
lods
sub
test
ficomps
add
jno
sbb
xchg
jecxz
je
push
rclb
roll
int3
mov
ret
inc
call
orb
incl
lock
dec
push
adc
push
and
xor
lods
mov
dec
sub
mov
les
insb
flds
ljmp
cmp
repz
insl
nop
dec
add
aas
xor
push
pusha
cmp
adc
cmp
and
shlb
mov
lock
test
sahf
jbe
out
test
outsb
xchg
add
jl
lret
inc
add
adc
push
dec
insb
pop
mov
sbb
test
aaa
or
mov
dec
call
int3
lock
rclb
pusha
cmpb
call
out
sub
pop
fmuls
sbb
lds
mov
lea
inc
insl
sbb
js
pop
xor
and
out
fwait
push
popa
shll
cld
sbbl
and
hlt
adc
adc
and
sub
inc
sub
callw
or
daa
lds
pop
lea
and
and
dec
and
inc
inc
testb
mov
xchg
pop
inc
sbb
js
and
push
pop
je
mov
or
ret
xchg
push
in
and
inc
outsl
sti
add
pop
in
ds
push
jl
pop
ja
aam
pop
inc
push
or
push
or
jo
push
xchg
pusha
fmull
lock
scas
and
inc
pop
jmp
and
xor
dec
dec
or
aam
aad
add
out
mov
inc
jo
mov
lock
xchg
jge
add
es
adc
and
cmp
xor
jbe
or
lods
sub
and
xchg
sti
adc
pop
lds
xor
cmp
pushf
adc
clc
sbb
sahf
jle
xor
cmp
dec
sub
and
and
sbb
jno
pusha
ror
fld1
insb
inc
jae
pop
xchg
mov
adc
add
push
cwtl
push
xor
data16
or
and
add
imul
enter
sbb
lods
xor
fiadds
xchg
or
cmp
dec
push
lahf
or
inc
lods
cli
sub
mov
or
inc
scas
and
data16
jb
ret
add
pop
aam
sbb
ljmp
scas
jns
inc
fisttpll
sbb
xchg
lgs
movsl
jo
or
sti
jno
add
or
add
mov
lds
and
repz
pop
mov
mov
sub
das
add
mov
lret
push
add
dec
stos
fnstcw
add
push
roll
mov
add
fldt
mov
pop
jle
mov
cmp
xor
xchg
sti
loopne
mov
adcl
cmpsl
repz
push
and
loopne
mov
xchg
cwtl
adc
enter
movb
xchg
cmp
fisubs
mov
and
xchg
mov
xor
sahf
cld
jo
lods
cs
pushf
ds
lds
leave
insl
push
mov
mov
fcoms
adc
xlat
jb
pop
mov
mov
push
push
pusha
push
adc
push
xor
out
in
push
jo
inc
aas
add
test
lock
arpl
stos
push
and
cs
xor
and
mov
and
pusha
les
add
add
xor
in
inc
mov
sahf
call
insl
lret
sbb
mov
std
shlb
mov
fldcw
aaa
leave
push
pop
pushf
push
pop
jo
into
jecxz
dec
add
shll
adc
fmull
in
push
call
mov
xchg
mov
add
fs
sbb
adc
rcll
sub
sub
adc
mov
xor
rolb
enter
add
test
dec
mov
inc
jmp
or
jns
sarl
cmp
imull
sub
push
dec
mov
and
loope
jmp
jnp
xor
pop
or
ja
mov
popf
pop
mov
add
jle
jmp
pusha
movsb
pushf
dec
or
and
pop
mov
push
or
ja
xor
or
jo
adcb
sbb
pop
adc
xor
subb
sahf
in
add
mov
stos
test
cmpsl
enter
insl
test
test
sbb
xchg
adc
inc
sti
xchg
sbb
dec
sti
sub
xchg
xchg
mov
dec
movsb
sbb
movsl
or
inc
push
addb
mov
xorl
call
jb
and
sbb
aad
pop
adc
pop
mov
fsubrl
jl
jl
mov
aam
cmp
rclb
dec
cltd
fsubrs
sub
ss
dec
enter
test
push
xchg
xor
cmp
push
xor
push
add
daa
clc
mov
into
cmp
mov
ss
mov
mov
lret
dec
pop
pop
mov
test
cmp
xor
call
and
adc
cmp
adc
add
popf
inc
mov
dec
push
test
push
push
nop
sar
andb
jecxz
add
and
mov
mov
push
dec
adc
js
les
into
aam
mov
nop
mov
andl
add
lods
sub
call
out
dec
mov
or
cs
dec
jl
lds
arpl
test
push
js
and
test
mov
ds
push
aam
ljmp
mov
sub
jo
or
test
jo
out
in
bound
dec
pop
cmpsb
cwtl
popf
pusha
aaa
movsb
test
and
mov
js
cltd
xchg
mov
or
add
dec
faddl
mov
mov
mov
ret
cmp
into
xor
add
test
das
lds
sub
mov
or
xchg
and
enter
shrb
push
fmuls
push
pop
mov
test
xchg
cmp
push
mov
popf
and
or
arpl
in
lcall
or
out
pop
or
push
fadd
sub
pop
int3
add
leave
jne
js
dec
cmp
push
adc
loopne
repz
test
and
test
dec
cmp
or
mov
les
popa
adc
in
mov
jbe
call
loopnew
fisttps
sbb
jmp
fwait
mov
fs
or
add
add
nop
js
in
mov
mov
sbb
mov
and
ret
or
fs
mov
and
arpl
repnz
sub
loopne
int
lods
xor
adc
inc
orb
xor
insl
js
enter
int3
nop
inc
shlb
xchg
push
cmpsl
lds
shll
or
push
cwtl
sbb
call
js
test
les
int3
fs
test
cmp
in
mov
adc
or
int
add
popl
jle
or
icebp
sahf
add
fsub
fdivs
je
mov
icebp
pusha
inc
fsubrl
andl
lds
cld
or
jmp
sub
inc
inc
mov
or
pop
or
add
loop
iret
sub
xor
or
add
jmp
fstps
or
sub
or
jle
mov
sub
dec
mov
fdiv
mov
adc
adc
ret
lods
sbb
mov
push
jg
out
repz
fstpt
cld
add
insb
sub
in
test
test
add
push
lcall
push
in
xor
pop
sub
adc
je
sub
add
xor
push
in
iret
dec
addr16
add
mov
loope
dec
or
mov
adc
rcr
jne
testb
int
pop
mov
pop
addl
fildl
inc
lds
mov
ljmp
fidivrs
or
adc
jmp
adc
mov
jns
add
sarb
pushf
nop
push
inc
mov
sbb
ja
xor
or
xchg
or
push
andb
xlat
mov
jns
pop
test
and
mov
jns
xor
mov
xor
mov
pusha
dec
cmpsb
pusha
sub
roll
stos
xor
xchg
sub
dec
add
aaa
sbb
pop
pop
xchg
rorb
mov
cmp
adc
mov
ja
jmp
fisubl
and
jecxz
jmp
push
lock
add
push
leave
adc
sbb
addb
fisttpl
push
rcrb
pop
xor
movsl
xor
aad
cmp
push
test
adc
sbb
icebp
and
or
xor
das
scas
insb
pop
cltd
aaa
arpl
cltd
sbb
inc
jns
or
add
cmp
call
inc
sti
mov
js
pusha
fsubs
mov
inc
dec
into
out
inc
cmc
add
jg
xor
pop
outsb
mov
sub
shl
dec
bound
dec
dec
push
ret
outsb
xor
xor
sahf
jns
ljmp
mov
adc
scas
bound
inc
aaa
ficompl
jmp
inc
pushf
imul
cmp
mov
testl
fstpt
sub
scas
pop
jmp
inc
xor
ret
jo
aaa
cltd
and
mov
subb
call
sub
mov
add
sahf
int3
pop
adcl
and
nop
sarl
inc
lret
add
or
pop
mov
lods
icebp
test
mov
pop
fidivrl
add
jo
mov
xor
inc
xor
sub
out
aaa
xchg
sub
xor
sbb
xor
pushl
arpl
push
push
mov
scas
pop
jo
adc
adc
aaa
das
xor
jp
mov
movsb
popa
push
test
sti
jl
ja
popa
cltd
dec
rcrb
adc
fdivrs
pop
fsts
loopne
lods
stos
bound
mov
sbb
push
xor
dec
fildll
pop
or
shll
jns
lret
and
adc
fs
roll
insb
xor
mull
jo
sbb
cmc
inc
jns
ljmp
test
sub
add
mov
add
xorb
xor
popa
inc
pop
arpl
adc
sbb
push
jge
test
cmp
adc
cmp
and
rorb
jmp
mov
mov
fcompl
sbb
test
lret
mov
popa
cld
rorb
mov
mov
fcoml
int
and
add
out
add
jae
inc
or
dec
adcb
add
je
imul
jno
shl
add
iret
adc
xor
adc
shll
bound
pop
adc
rcrb
xor
or
xchg
pop
jno
je
xor
pop
adc
add
popa
cmp
pop
imul
cmp
outsb
or
shl
jl
mov
mov
adc
push
cltd
loopne
pusha
mov
loopne
sbb
xor
lock
sbb
push
test
pusha
add
and
arpl
adc
ret
adc
jmp
cmp
lds
and
lock
add
stc
sbb
jno
clc
add
cmp
push
lds
push
mov
rcll
aam
or
and
test
pop
add
pusha
add
cmp
aad
push
adc
xor
inc
mov
fisttps
push
sub
mov
imul
mov
sub
arpl
adc
dec
les
shll
mov
inc
rolb
mov
les
mov
rolb
imul
cmc
or
repz
arpl
push
adcl
and
adcb
mov
xorb
add
hlt
orl
or
mov
sub
inc
push
and
dec
sbb
pop
in
jo
mov
xchg
iret
in
nop
jle
mov
dec
mov
dec
aam
loopne
push
pop
mov
inc
out
jl
mov
rorb
cmc
lock
sahf
or
pushf
cwtl
push
or
add
inc
repnz
and
xchg
xor
orb
arpl
inc
stos
xchg
or
inc
xorb
mov
or
dec
rorl
push
mov
xor
mov
in
or
jnp
bound
jns
pop
mov
in
or
rorl
inc
mov
test
sub
cmp
loop
jno
push
pop
pusha
rep
in
add
mov
or
icebp
xchg
nop
lea
add
push
and
out
xor
and
lock
mov
and
xchg
sbb
dec
dec
sbb
xchg
mov
pop
aad
popa
xchg
push
stc
inc
mov
mov
dec
in
mov
shrb
or
and
shll
or
jnp
imul
sbb
and
cmp
fildl
cs
int
pop
rcll
sahf
add
fcoml
shlb
add
adc
inc
imul
add
jmp
sbb
jo
and
sub
jl
mov
pop
add
and
mov
cmpsb
xor
xor
xchg
loopne
sub
or
jle
or
les
pop
sub
icebp
je
cmp
push
push
test
xchg
sbb
or
xor
and
mov
clc
or
sub
mov
and
or
movsl
lods
xchg
mov
and
inc
mov
stos
mov
cmp
jg
imul
and
sub
gs
bound
mov
add
dec
ds
and
pop
mov
rorb
xor
xor
xor
xor
dec
cmp
fwait
scas
push
movsb
pusha
mov
and
gs
ret
and
adc
jo
xor
mov
inc
pop
mov
push
mov
cmp
sbb
push
sbb
lods
out
je
add
or
xor
or
xor
push
addb
sbb
sub
in
addl
inc
jne
lods
or
test
add
push
lock
out
adc
fisttpll
in
test
sbb
jnp
and
cmp
pop
cwtl
unpckhps
jmp
mov
xchg
jge
fsts
mov
mov
push
ljmp
pinsrw
bound
fmull
mov
testl
data16
mov
push
lock
xor
cmp
pop
jae
add
push
jmp
movsl
jbe
outsb
pop
push
loop
sub
in
mov
ficoml
mov
push
imul
jo
outsl
mov
xor
sub
adc
movsw
in
pop
cmpsb
in
or
addb
jnp
out
fdivs
mov
xchg
sahf
or
ds
fildl
dec
js
mov
xor
js
sbb
sbbb
std
inc
scas
sub
inc
adc
inc
fldl
sub
add
int3
ret
scas
pop
dec
fs
pop
mov
adc
jl
add
into
popa
in
loope
mov
in
ret
xchg
js
or
mov
dec
xor
mov
insb
outsb
rolb
xchg
add
ljmp
lret
mov
xchg
inc
out
pop
add
lea
out
fsubrs
pop
jns
mov
fldl2e
and
sarb
pusha
add
cmp
add
mov
add
or
add
push
push
out
in
in
sub
jmp
sbb
decb
sbb
add
daa
int3
xor
xor
sub
mov
dec
mov
loop
mov
push
mov
dec
xlat
add
clc
fisttps
loop
xor
sbb
sub
out
jno
outsb
jmp
fwait
jnp
cltd
add
add
test
dec
mov
add
repnz
dec
add
enter
sbb
ja
out
or
push
add
and
sbb
lods
cmpsb
inc
push
leave
sub
in
cmp
add
sub
push
xchg
stos
sarl
jmp
jb
jo
xor
popf
and
insb
jecxz
dec
add
mov
cmp
das
movq
add
arpl
sar
mov
cmp
mov
test
loope
and
loopne
cmp
cmp
popa
jmp
addr16
mov
add
lcall
ret
mov
pusha
push
xor
mov
popf
inc
xchg
cs
adc
out
xor
xor
add
and
pop
hlt
scas
dec
and
cmp
lret
shr
mov
add
cmc
push
lahf
dec
adc
add
xor
dec
sub
cmpsl
jp
pop
cmpb
mov
popf
call
in
xchg
jg
xorl
not
les
sbb
jo
xor
cmpb
cmp
arpl
sarb
add
faddl
mov
jbe
out
mov
in
into
sarb
pop
add
and
add
xchg
pop
cmovno
push
sbbb
or
ss
adc
sub
es
cmp
aaa
cs
test
adc
cmp
ret
add
or
and
add
shlb
test
or
sub
push
dec
sub
pop
pop
add
in
adcb
cmpsl
and
cld
in
sub
add
mov
jecxz
and
xchg
test
cmp
dec
stc
fldenv
xchg
add
std
lret
mov
add
mov
xchg
mov
ficompl
fwait
js
lahf
add
lods
mov
aas
adc
xchg
add
jecxz
cmp
in
pop
and
add
loopne
add
test
mov
sbb
sbb
add
or
mov
hlt
cwtl
ljmp
add
push
cmp
mov
sbb
out
jns
or
add
daa
inc
mov
ljmp
add
adc
loopne
pop
add
aad
push
stc
pop
je
je
cmovb
and
out
lods
inc
add
adc
es
sub
add
mov
xchg
add
add
add
cmp
push
adc
lods
xchg
add
movsl
loope
pushf
mov
outsl
cld
cltd
mov
out
pop
nop
sbb
enter
inc
push
cmp
pmaxub
jnp
inc
mov
or
adc
add
fcmovu
xor
sub
dec
loope
andl
push
sbb
in
mov
adc
add
enter
sbb
pushf
jge
cmc
mov
push
push
fcom
add
sbb
and
push
xor
sbb
stos
dec
mov
int
int3
vprotw
mov
add
mov
imul
add
inc
push
mov
loopne
cmp
add
ret
and
scas
aas
mov
pop
mov
sub
and
push
popa
orb
lret
aas
or
bound
call
mov
mov
pushf
jae
push
sub
sar
movsl
jno
cld
add
repnz
dec
sub
push
int3
pusha
rolb
inc
push
dec
aas
mov
inc
jmp
or
lods
lahf
loope
adc
jmp
popf
stos
decl
imul
pop
jne
sbb
xor
rorl
add
push
sbb
mov
xor
add
jbe
jecxz
ja
xor
xor
xor
push
add
loop
sbb
jne
test
divb
mov
or
pop
pop
push
iret
fsubrp
loopne
stos
xor
add
fstpl
imul
add
mov
cmp
sbb
mov
js
add
add
mov
mov
push
push
aad
fsts
add
adc
dec
and
dec
jnp
cmpsb
divb
sarl
in
es
sbb
divl
cs
jns
sub
lret
add
in
cli
jnp
in
pop
add
add
fst
repnz
add
test
xor
pop
xchg
loope
jno
and
sbb
or
dec
in
fidivrl
add
fucomi
cld
sti
xchg
fildll
pop
movsl
aaa
push
je
pop
pop
sub
add
ror
js
cmpsl
cld
jnp
sbb
push
aas
movsl
mov
fmull
rol
cltd
dec
jg
add
imul
mov
dec
imul
dec
outsb
mov
lea
push
xor
add
adc
jecxz
negb
loope
psubsw
sub
inc
add
scas
xchg
mov
jg
pusha
fsubl
jae
pop
xor
icebp
pushw
loop
jns
add
shlb
in
push
mov
sbb
adc
or
cmp
inc
or
mov
rcll
test
xchg
std
lock
cmp
sbb
call
add
and
bswap
ja
add
popa
pop
clc
mov
sub
ret
xchg
add
fildl
inc
pop
push
lods
call
repz
pusha
inc
push
mov
fldl
cmp
shr
shl
pop
xor
movsb
mov
cmp
add
dec
mov
pop
xor
jle
nop
pop
mov
mov
popa
lahf
popa
or
in
add
test
pop
jne
adc
outsb
cmpsl
es
movsl
push
sbbb
sub
jne
add
shl
nop
popf
jno
and
xchg
add
pop
inc
sarb
int
add
mov
mov
jb
and
out
nop
sbb
lock
inc
decb
aad
outsb
adc
inc
bswap
mov
or
push
rcl
ret
mov
icebp
xchg
push
mov
and
out
cltd
mov
and
lock
add
outsl
cwtl
dec
into
imul
mov
dec
add
shl
sub
adc
dec
mov
add
or
add
sbb
lock
cmc
or
inc
cmpsl
imul
insl
les
add
and
pop
roll
dec
add
loope
mov
adc
fsubrp
mov
jmp
sbb
movsb
subb
cld
incb
push
in
inc
lds
xchg
xchg
rolb
jmp
add
lea
hlt
mov
out
add
mov
sub
jmp
insb
popa
xchg
loopne
jb
test
add
add
cmp
lock
xchg
add
mov
jecxz
test
sub
and
adc
es
scas
xchg
lret
pop
int3
fbstp
fwait
or
lods
push
fdivrs
lret
and
or
idivl
data16
bound
fnstenv
pop
dec
push
stos
adc
adc
xchg
cmp
test
out
xchg
add
insb
mov
lods
fdivs
dec
ret
pop
ds
outsb
dec
stos
test
mov
sarb
mov
dec
call
pop
imul
add
idivb
add
mov
adc
nop
inc
out
mov
cmp
adc
js
xor
stos
mov
mov
add
cli
in
sub
in
xchg
pop
jmp
push
stos
cmpsb
add
jno
aas
in
stc
jae
std
jge
add
mov
push
cmp
in
pop
das
add
imul
mov
fildl
cs
sub
xchg
cmpsb
and
add
call
aas
int
pop
data16
xchg
xorb
push
sub
add
lret
pop
push
push
iret
in
dec
cltd
mov
lock
lods
mov
out
loop
or
or
stos
dec
shlb
mov
ret
or
lds
pop
sub
add
rolb
add
jp
sbb
or
cwtl
add
test
icebp
lock
adc
push
push
and
mov
shl
int3
jns
add
lea
lods
inc
xchg
cmc
add
iret
jmp
adc
sbb
mov
in
cs
pop
dec
add
lea
xchg
cmpb
add
jno
mulb
adc
add
add
cli
mov
pop
push
or
gs
fidivrs
add
jno
psubw
outsl
add
incb
pop
add
jno
pop
loope
sbb
cmpb
rolb
dec
bound
add
cmpl
add
jo
add
pop
jae
out
add
push
scas
mov
xchg
ljmp
and
dec
add
icebp
cmpsb
cmp
scas
cmp
and
dec
or
fiadds
xchg
daa
idivl
add
mov
cmp
mov
in
add
add
mov
jbe
popa
push
int
movsb
add
enter
lods
mov
call
adc
fldl
sub
and
addl
sbb
imul
dec
add
mov
rclb
xchg
add
mov
mov
lret
ljmp
mov
sarb
test
mov
outsb
add
mov
out
sti
push
test
mov
sbb
jno
xchg
jmp
ja
jo
add
pushf
and
popf
pop
jne
sub
cmpl
inc
in
add
jp
jmp
and
imul
jnp
add
clc
fistl
in
addl
mov
inc
dec
ret
cmp
jmp
pop
icebp
pop
add
lods
loope
clc
jmp
mov
loopne
push
jp
cmp
in
addl
mov
lds
ret
pop
add
mov
xchg
lahf
sarb
jnp
push
outsl
or
test
mov
push
jecxz
test
mov
nop
pop
inc
inc
dec
inc
sbb
cmpsl
mov
inc
push
cld
add
pop
push
insb
sbb
xchg
inc
or
out
xor
pusha
inc
or
sbb
add
cmpb
idivl
add
clc
add
push
insl
aam
orb
dec
xor
mov
filds
stos
push
pop
mov
fs
xor
jbe
mov
jae
xchg
mov
push
mov
dec
imul
jle
sub
push
lret
mov
cs
repz
in
inc
mov
into
cli
popf
rclb
add
jp
cmp
movsb
fsubs
sub
push
or
lret
fisubrl
sub
mov
cmp
ljmp
fstps
cltd
push
and
push
dec
hlt
out
add
into
rolb
sub
fdivs
mov
pushf
bound
ljmp
ret
mov
and
push
jl
add
es
lock
cmp
add
ljmp
fisttpl
add
aad
lret
dec
subl
mov
xchg
inc
repz
psubb
stos
add
inc
inc
cltd
bound
lcall
and
shr
lock
aad
lret
loope
sub
rcl
or
xchg
sbb
loopne
mov
sub
push
lock
clc
push
rorb
movsl
cmp
sbb
and
add
ficomps
mov
mov
lock
jmp
cwtl
xor
add
fbld
loopne
add
cmp
pop
adc
mov
mov
push
mov
mov
cmp
adc
jns
add
mov
push
add
mov
add
fpatan
sbb
mov
and
cmp
jecxz
dec
aad
scas
addl
pop
jl
shrl
dec
xor
jnp
pop
push
push
test
jnp
add
dec
rorb
pop
roll
insb
adc
roll
cmp
in
adc
pop
xor
or
ljmp
jle
sub
mov
and
xchg
out
je
dec
aas
mov
insb
scas
fistl
add
paddw
hlt
clc
xchg
add
scas
sub
das
xchg
sbb
hlt
ss
xor
pop
push
xor
les
dec
mov
push
xor
mov
out
cmp
clc
add
imul
xor
and
repz
pop
mov
roll
js
add
ja
or
cmp
adc
pushf
cs
ljmp
sub
jmp
lea
xchg
push
mov
add
test
addw
jb
dec
cmp
std
mov
mov
test
int3
lods
jmp
add
arpl
push
add
xchg
fnstcw
jg
cs
into
jmp
fs
std
add
push
sbb
add
lock
pop
out
push
loopne
cmp
push
negl
and
ja
and
xchg
or
icebp
sbb
ds
inc
out
pushf
add
xor
jns
out
cmp
in
enter
mov
lods
in
cmp
jne
add
flds
incb
test
xchg
mov
filds
cmp
add
mov
jl
add
shll
push
imul
sbb
push
and
stos
push
rcrb
dec
push
xchg
ja
push
inc
in
add
pop
mov
mov
int3
bound
add
pop
xor
mov
mov
daa
cmp
addr16
xor
xor
dec
push
fbld
xor
and
daa
out
in
mov
call
dec
or
jb
adc
insl
push
xchg
inc
movsb
push
std
mov
sub
mov
add
add
data16
fsubr
lock
scas
adc
out
in
pop
inc
jnp
add
mov
fsubl
inc
daa
dec
aam
add
cmp
insl
inc
les
dec
jl
jg
mov
adc
decb
mov
daa
or
lea
mov
sbb
shrb
aaa
add
and
and
add
and
outsb
stc
in
cmp
hlt
xchg
data16
jg
cld
add
adc
xor
dec
enter
sbb
mov
pop
pop
push
pop
xchg
inc
cltd
xor
mov
das
enter
adc
add
or
adc
dec
lods
insb
cld
bnd
cmp
xor
nop
pop
and
popa
ss
and
mov
mov
jbe
xlat
add
aaa
mov
mov
jnp
imul
jge
push
jb
nop
jg
xchg
incl
sbb
xchg
pop
lret
adc
or
andb
add
negl
stc
fdiv
fdivs
mov
add
andl
pop
and
addl
push
in
cltd
cmpsl
add
pop
sti
push
mov
add
iret
lock
push
out
lahf
subb
sub
out
rolb
call
stos
cmp
xchg
mov
xchg
dec
push
sti
push
daa
addb
jno
add
sub
and
inc
add
rcl
pop
dec
int3
aad
pop
xor
es
and
sbb
mov
jae
jne
xorb
cmp
lcall
inc
addr16
sbb
add
jmp
jl
stos
in
add
or
cmpb
xor
call
mov
lea
aam
push
cld
fildl
mov
push
sub
add
lds
add
adc
cmp
lods
out
push
lret
cmp
pop
call
popf
sbb
inc
inc
ffreep
add
cs
fiadds
mov
inc
pop
jg
or
jo
mov
fadds
add
lods
enter
dec
inc
mov
mov
jecxz
js
repz
mov
arpl
faddl
std
dec
xor
push
and
ret
mov
add
or
add
mov
pop
jns
push
cwtl
hlt
test
mov
inc
sub
emms
iret
push
jecxz
mov
add
fdivs
cmp
stos
jle
movsb
mov
jno
xchg
push
pop
int
add
mov
mov
not
data16
add
repnz
mov
add
shr
jbe
inc
outsl
add
ljmp
pushf
jmp
adc
popa
lods
les
pop
lea
subb
movsl
xchg
inc
add
mov
mov
jo
xchg
sbb
andb
loop
add
mov
lret
test
sbb
inc
pop
mov
dec
stos
decb
fisttpl
enter
mov
hlt
shr
fdivr
pminub
lods
jno
les
enter
shr
dec
sub
jecxz
push
shlb
jnp
add
stos
ret
jno
cwtl
repnz
or
xchg
ret
lock
leave
pop
fcmovbe
fst
pop
xor
inc
mov
in
jae
adc
call
clc
xlat
xchg
jo
in
bound
jae
lock
add
lds
fs
sbb
sbb
inc
pop
addr16
cs
push
and
add
sbb
mov
add
insl
fcmovu
mov
mov
lret
add
push
or
fs
insb
test
subb
and
lret
mov
mov
dec
add
shlb
inc
ss
xchg
add
push
stos
fdivr
insl
pusha
sbb
add
popf
and
jo
cld
negl
movsb
sbb
arpl
mov
ror
sub
sub
inc
jmp
mov
mov
push
inc
pop
and
ljmp
mov
adc
sti
push
mov
sbb
in
ret
push
add
in
clc
popf
loope
xchg
pop
sbb
mov
inc
adc
gs
outsb
mov
inc
add
pop
add
jg
adc
xchg
cs
jbe
sub
js
mov
push
add
push
je
lods
or
aam
lods
xor
in
sbb
out
add
push
out
ds
aad
add
rolb
sub
push
jge
fildl
pop
das
add
jle
fcom
pop
cli
pop
add
loopne
fcomps
sbb
mov
add
add
jle
and
gs
pop
mov
adc
lods
iret
in
mov
cmpb
xor
add
jmp
movnti
mov
in
push
pusha
push
lods
lock
add
sub
scas
loopne
cld
int3
xchg
hlt
add
je
fndisi(8087
shrb
add
jae
lock
mov
fmul
push
xchg
add
xor
inc
pop
sti
pop
rorl
insb
or
add
xchg
rclb
xor
test
add
in
mov
jne
jo
in
sarl
add
mov
jmp
stc
jno
int
scas
clc
cmp
adc
mov
outsb
pop
pop
mov
xchg
or
sbb
enter
push
xor
xchg
stos
add
dec
loopne
inc
popf
mov
cmp
sub
fwait
rol
fdivrs
inc
fldl
inc
int3
lcall
rcrl
or
mov
std
addl
pop
add
and
and
mov
adc
sbb
and
hlt
daa
outsl
div
jo
or
mov
mov
std
inc
call
loop
fucomp
sub
test
sbb
inc
loopne
sub
mov
adc
push
aad
adc
fneni(8087
stc
lahf
cmpsb
imul
mov
insl
push
orb
add
cmpxchg
hlt
mov
cmp
mov
pusha
cltd
or
inc
add
mov
push
cmp
aaa
dec
cmc
js
cmpsb
ret
pusha
dec
xchg
jmp
xor
add
lds
daa
lock
shrb
mov
rolb
mov
add
dec
and
pusha
repz
lret
outsb
xchg
repnz
sub
notl
jnp
and
add
mov
add
stc
shrb
cmp
into
in
pusha
xor
add
cmp
sbb
lea
js
mov
loop
inc
or
sbbb
ds
xchg
jne
aad
mov
test
and
filds
jle
and
call
sbb
lcall
pop
inc
mov
into
in
aaa
push
popcnt
out
mov
pop
gs
outsb
jbe
add
inc
dec
inc
test
sbb
inc
sbb
movsl
sub
mov
xchg
cmp
sbb
adc
test
push
iret
insb
and
add
push
or
add
sbb
xchg
stc
pusha
sub
movsb
data16
sbb
jno
mov
insb
icebp
les
sbb
mov
ds
pop
xchg
cmp
fstpt
subl
lods
jbe
shr
cli
add
scas
adc
add
sbb
fsubrs
aad
flds
ret
sti
cltd
cwtl
adc
pop
cmc
rcr
mov
add
pusha
test
cli
inc
push
add
pop
adc
fwait
sbb
sub
sub
mov
out
mov
jae
add
lret
add
jge
fwait
or
adc
xor
stc
add
and
mov
adc
fsubs
lods
dec
add
mov
div
add
jno
inc
push
or
dec
add
ss
adcb
and
dec
jmp
add
sub
cmc
add
cmp
xor
call
lret
fildl
cltd
mov
sub
or
idiv
rolb
sbb
dec
push
adc
rorb
xorl
pop
jno
pusha
loopne
addr16
dec
ret
fadds
sahf
shl
imul
fcmovnbe
movsb
sub
add
jbe
cmc
xlat
and
mov
in
push
out
pop
in
test
test
mov
push
add
pop
lods
dec
jnp
pop
stos
add
pop
movsb
cli
mov
and
mov
lret
or
addr16
xor
loopne
or
xor
movsb
orb
lods
dec
pop
inc
jp
pop
jae
dec
subl
add
movb
scas
mov
pop
shrb
adc
sbb
add
les
inc
aaa
push
loop
mov
add
incl
rcll
jbe
sti
xchg
fmuls
ret
xchg
dec
xor
ljmp
ds
or
pop
mov
xor
mov
jmp
pop
adc
clc
add
loop
lret
inc
jmp
and
add
cmpsb
fcompl
jle
mov
mov
arpl
add
fldl
ret
scas
pop
loopne
mov
xor
out
dec
add
imul
add
aas
roll
mov
jecxz
fsubrl
add
inc
mov
enter
idivb
add
and
sahf
add
cmp
push
lock
icebp
mov
loopne
jae
add
mov
pushf
cmp
inc
push
shl
out
add
mov
xchg
or
out
stos
sbb
orb
add
in
ret
mov
add
add
jg
adc
and
popf
out
cltd
fmuls
ds
inc
fs
adc
or
inc
inc
lock
mov
inc
aas
inc
mov
xchg
lock
shlb
or
fldt
sbbb
jge
add
hlt
mov
pop
add
cmp
mov
add
cmp
pop
mov
in
mov
inc
imul
je
sarb
mov
push
inc
lock
popa
add
xchg
dec
in
addr16
pop
jae
das
loop
movb
pop
add
jmp
cmpsb
out
fsubrl
push
cmp
mov
add
dec
sti
mov
add
arpl
add
dec
or
mov
lret
repnz
cmp
hlt
mov
pop
jle
add
jge
sar
loopne
pop
ds
add
cmpsb
mov
or
out
call
xchg
inc
clc
inc
add
hlt
fdivs
or
add
pop
mov
add
jle
push
cmpsl
xlat
leave
loop
mov
loopne
sbb
add
insl
add
pushf
cmp
nop
push
add
aad
popf
xor
dec
pop
adc
outsl
inc
jae,pt
and
mov
jmp
adc
into
pop
pop
repz
add
xor
add
hlt
insb
push
dec
outsl
add
pop
shrb
in
cld
les
xor
add
test
mov
gs
push
and
cmp
mov
xor
lods
jae
sub
sub
cmp
movups
xor
xor
lock
add
push
icebp
push
addb
cmpb
pop
testl
nop
push
jg
add
shll
arpl
push
nop
jl
pop
cmpl
adc
out
dec
push
add
mov
daa
loop
add
or
lock
mov
in
arpl
adc
nop
add
and
pop
add
push
int
mov
out
add
fwait
loopne
dec
sub
out
add
mov
cmovp
cwtl
insl
stc
sti
add
daa
xchg
and
adc
or
movsb
mov
lret
add
pop
pushf
mov
jge
and
mov
dec
adcb
adc
fiadds
inc
xor
popf
add
daa
add
pop
outsb
add
cltd
xchg
repnz
icebp
push
mov
jg
pop
mov
ror
jp
push
mov
adcb
jp
repz
ljmp
mov
leave
add
add
fs
ljmp
notb
pop
outsl
inc
push
cmpsl
lods
push
adc
add
mov
and
jmp
push
fcompl
pusha
cwtl
fs
mov
cmp
jo
movq
push
lea
mov
jecxz
ljmp
shll
xchg
pop
lret
mov
xchg
xor
sub
mov
flds
adc
cmp
loopne
add
mov
push
clc
icebp
push
clc
wbinvd
cli
mov
fwait
add
add
adc
outsl
fidivs
scas
jns
pmulhuw
cmpsb
shlb
inc
popf
imul
pop
pop
mov
mov
jnp
rorb
sbb
add
orl
mov
xor
lods
shr
mov
shrl
loop
mov
bound
jns
popf
or
add
and
pop
sarl
lahf
nop
aad
sti
sbb
pop
pop
sbb
jns
cmp
clc
mov
add
lahf
ds
add
mov
dec
sti
in
lods
add
lds
notb
lock
imul
jnp
inc
xlat
addr16
add
clc
add
pop
popf
xor
imul
sbb
push
jbe
dec
in
sbb
pop
leave
and
pop
pop
cmp
cmc
test
and
xor
add
jle
shrl
je
add
hlt
addr16
scas
stos
test
aas
mov
add
movsl
sub
mov
add
adc
aad
rcr
mov
cltd
clc
add
rorb
xor
xor
push
mov
push
mov
mov
add
mov
nop
add
cmpb
negl
push
add
popf
movsb
mov
cmp
psubsw
adc
xor
in
add
cmpl
pop
add
add
aas
push
mov
jns
add
xor
aam
add
shl
mov
push
cld
stos
rcl
push
add
add
pop
dec
lds
add
jmp
dec
mov
outsb
scas
push
add
inc
stos
ret
or
xchg
movsb
lds
add
les
cmp
lock
sub
shll
pop
mov
lods
xor
pusha
lret
js
addl
scas
mov
add
xor
add
dec
ljmp
cmp
add
push
fcoml
push
test
fs
push
dec
aam
cmp
add
and
push
nop
and
ret
jle
cwtl
test
aam
lret
mov
push
add
cmp
adcb
mov
add
loopne
test
xor
leave
mov
adc
cltd
add
or
mov
mov
add
adc
add
dec
rorb
xchg
adc
add
into
lea
aad
je
popa
mov
xor
mov
mov
fdivrs
fimuls
and
rorl
push
cmpsb
mov
shl
out
scas
fwait
sbb
movd
inc
push
xchg
lcall
add
push
sbb
xor
or
rolb
inc
add
test
xchg
testl
push
inc
idivb
add
mov
add
das
in
outsl
jo
add
shrl
mov
and
sbb
and
dec
out
add
sub
addr16
dec
and
add
outsb
jb
jbe
and
adc
sahf
adc
imul
enter
pop
iret
test
push
push
xor
inc
mov
sub
add
cwtl
jno
shrb
add
notb
add
jns
dec
adc
xor
jle
add
imul
popa
cmc
adc
push
inc
xor
xchg
cmpb
or
loop
popf
in
pop
es
ret
and
bound
add
push
repz
push
mov
sbb
add
sub
push
dec
xor
or
je
add
add
leave
add
loopne
sbb
call
push
sbb
or
mov
add
jp
mov
stc
push
mov
add
and
out
sub
jnp
and
and
jbe
inc
popa
int3
out
pop
add
mov
xchg
mov
jne
mov
pop
loope
add
int
scas
jecxz
and
sub
mov
pushf
loope
mov
sbb
push
mov
xor
xchg
in
pop
mov
jb
dec
into
stc
add
mov
mov
lea
rcl
sahf
jbe
cmp
pop
sbb
fadd
jo
enter
pop
pop
mov
xlat
sub
mov
hlt
sbb
push
lret
add
and
test
rcrb
jo
push
inc
jb
ja
add
movsl
sub
sbb
and
loopne
sarb
pop
hlt
add
aam
mov
add
lret
ss
mov
add
cmp
pop
dec
rcr
jge
add
pop
ss
cmpsl
sarb
fsub
xor
mov
loop
or
stc
xchg
sub
lret
or
dec
mov
pop
stos
add
push
cwtl
cmp
mov
add
andl
roll
lcall
add
or
hlt
or
mov
mov
lea
jmp
ja
pop
push
aam
enter
js
and
mov
adc
mov
lcall
mov
mov
mov
fcoml
adc
sbb
xor
and
inc
in
adc
pop
inc
ficoms
ficoml
mov
adc
adc
fs
sarb
test
mov
inc
cmc
add
mov
add
jle
enter
cwtl
add
movsl
or
inc
cwtl
enter
into
add
stos
fs
push
pop
push
add
sti
and
arpl
enter
pushf
popf
push
flds
adc
mov
sub
int3
lock
mov
and
sbb
sbb
cmp
incl
pop
popa
mov
mov
add
pop
push
mov
mov
es
icebp
mov
xchg
inc
andb
sbb
add
das
loopne
stos
pop
dec
xchg
dec
std
rorl
aas
push
cmp
sbb
adc
imul
pop
mov
add
add
dec
movsb
jno
loope
push
jmp
out
cmp
push
andb
in
xor
add
xor
pop
add
xchg
and
stos
push
arpl
mov
cld
addb
jnp
add
inc
dec
cwtl
and
and
xor
add
cmp
xchg
xchg
cwtl
sub
movsb
or
mov
test
sti
xlat
dec
sbb
cmpsl
mov
sbb
lods
sbb
aas
jnp
cmp
xlat
pushf
mov
inc
idivb
sahf
out
nop
add
loope
sbb
xchg
xor
mov
fwait
add
push
shll
add
jl
mov
adc
sbb
popa
or
sub
mov
mov
mov
imul
leave
and
shrb
pop
sub
insb
int
or
xor
outsl
mov
test
ja
mov
mov
and
imul
cwtl
sub
jmp
add
jge
sub
rcr
jp
add
les
and
iret
lret
add
and
add
ds
es
std
adc
lods
out
add
cmpsb
stos
xchg
xor
popf
push
or
lahf
add
lcall
xor
test
dec
sub
add
add
sub
mov
ror
sbb
imul
loopne
daa
popa
push
add
cld
pushl
inc
ror
repz
add
xorb
adc
push
out
inc
rcl
test
icebp
stos
mov
adc
mov
subb
mov
inc
add
frstor
xchg
add
xor
cmp
lods
cmp
jns
xor
sub
add
jo
filds
movsb
loopne
jg
popf
xchg
inc
add
or
lcall
pop
add
cmc
sbb
sub
cmp
push
xor
mov
je
or
jae
mov
inc
push
dec
add
cmp
push
xchg
push
xor
add
test
and
mov
xchg
jg
cmp
cmp
add
add
je,pn
or
mov
add
pop
fbld
daa
repz
js
inc
jp
add
mov
roll
aam
inc
cmpb
fbstp
or
mov
mov
add
call
sbbb
sub
xchg
and
roll
cmp
inc
xor
xorl
add
mov
fdivrp
jg
lahf
xchg
ss
negb
jo
add
jns
pop
insb
inc
dec
inc
add
lods
sarl
jbe
or
xlat
mov
lea
repz
inc
push
and
jge
cs
adc
jb
xchg
add
add
mulb
add
cmc
std
adc
adc
lret
add
pop
repnz
pusha
lock
rcrl
sbb
or
push
jp
add
pop
xor
sbb
ljmp
aad
ja
out
xchg
and
push
sbb
pop
add
dec
addr16
loop
cmp
aad
jge
ds
push
sub
loopne
mov
inc
shrb
loop
xchg
add
and
xchg
jno
rclb
jo
cld
lods
lods
dec
shr
cli
mov
andl
push
jp
sbb
aad
das
pop
mov
sbb
test
test
bound
ja
pop
push
adc
scas
mov
or
out
jb
adc
jp
add
pop
ds
inc
add
in
aas
cld
ljmp
lret
add
jno
pop
cmp
ret
add
lods
xchg
or
and
and
inc
inc
mov
adcb
lret
test
sbb
push
push
subb
inc
xor
or
cmp
adc
adc
inc
js
sub
call
sub
add
mov
push
mov
or
add
roll
insl
add
pop
je
inc
push
repnz
mov
test
inc
jb
or
addb
mov
jl
add
or
iret
rcl
enter
and
push
push
pusha
xchg
jo
mov
or
inc
jecxz
les
push
sub
ret
inc
aas
sti
mov
mov
jp
icebp
loopne
shll
sbb
or
xchg
clc
add
cwtl
jmp
inc
stc
testb
test
inc
fcomp
adc
pop
add
popa
addb
mov
rcrl
leave
lahf
mov
pop
adc
pop
fidivs
push
jge
fadd
push
fwait
movsl
mov
sub
nop
mov
adc
repnz
adc
pop
and
or
push
lret
ss
icebp
mov
popf
jae
adc
push
stc
cwtl
adc
repnz
push
mov
jmp
adc
ss
hlt
add
or
enter
add
loope
fld1
out
push
or
in
jecxz
inc
or
add
lds
sub
xchg
ljmp
stos
aad
cmp
add
pop
insl
cmp
add
lahf
scas
lret
inc
lahf
cmp
inc
inc
sahf
aam
cmpsl
mov
xchg
xchg
pop
sub
ret
mov
loopne
ljmp
push
add
mov
jge
cld
addr16
add
inc
sub
ror
loopne
adc
loop
popf
arpl
cwtl
push
pop
cli
add
xchg
int3
jb
add
xchg
xchg
cld
std
pop
aad
mov
ja
pop
add
sub
or
sbb
xor
cmp
sub
mov
jns
fistpl
ljmp
inc
lds
scas
aas
mov
jle
stos
das
pusha
mov
jnp
mov
mov
jo
and
jno
enter
add
popl
das
fsubr
shl
fucomip
loop
shl
adc
jns
lods
movsl
enter
inc
dec
adc
dec
orb
pop
in
inc
pushl
jp
lock
sbb
mov
sbb
mulb
add
mov
jge
imul
andl
add
fs
push
add
incl
mov
add
push
sub
stos
inc
add
push
mov
enter
add
pop
loope
loopne
stos
add
mov
mov
push
dec
mov
cmc
lds
and
bnd
outsb
inc
pop
pop
mov
sbb
lret
and
pushl
shl
and
inc
inc
mov
add
mov
add
leave
cli
cmpsb
add
jae
je
mov
fiadds
icebp
mov
pushf
jl
push
outsb
jne
js
out
add
repz
mov
mov
test
xor
add
adcl
mov
push
mov
cmpsb
ret
test
push
xor
mov
cmpsl
jmp
sub
or
fildl
hlt
lds
ljmp
cltd
sbb
pop
add
cmp
ja
test
xor
mov
mov
arpl
jne
fmuls
sbbb
movsb
ljmp
and
jbe
cwtl
in
out
mov
xchg
push
jb
adc
ret
rcrl
add
int
pop
repnz
addl
pop
pop
mov
in
sbb
pop
loopne
cli
and
and
insl
cltd
fcompl
fdivrl
and
pop
xor
push
into
add
adc
add
cmp
dec
neg
ljmp
test
insb
fs
xchg
test
rolb
stos
aas
imul
jle
test
pop
out
movsb
adcl
setae
cmpsb
stos
mov
mov
pop
fwait
mov
nop
scas
test
add
in
xchg
lock
add
test
daa
add
inc
rcll
outsb
pop
add
pop
xchg
rolb
aam
add
repnz
scas
xchg
push
jnp
or
lea
out
dec
pusha
xor
sub
jae
loopne
inc
pop
mov
mov
add
rcrb
inc
cmc
bound
add
inc
loope
add
jge
pop
add
sub
or
inc
loopne
jecxz
cmpsb
inc
pop
aas
es
cmp
sbb
cmpsl
sub
push
cli
jb
jnp
test
add
mov
outsl
add
sbb
inc
adc
jae
dec
ret
xor
in
sub
hlt
jns
aas
lcall
stos
add
add
cmp
adc
mov
xor
add
adc
add
jg
ds
gs
dec
jecxz
xchg
add
arpl
xlat
std
pushl
in
add
jbe
sbb
sub
inc
imul
shlb
cli
fisubrs
pop
and
or
pop
xor
fiadds
push
jo
cli
mov
push
and
loopne
add
inc
in
push
outsl
insl
lds
or
mov
icebp
ljmp
or
or
jbe
add
jecxz
add
stos
mov
dec
cmp
and
pop
mov
cmp
out
mov
pop
shlb
mov
sub
push
ja
mov
dec
mov
pop
popa
aam
out
adc
push
or
iret
scas
jo
lock
in
sbb
ja
inc
fwait
mull
pop
fs
aaa
add
ljmp
pop
xorl
stos
jno
add
push
inc
add
sub
push
xchg
sub
in
inc
lahf
outsl
out
das
pop
add
out
xchg
jbe
inc
or
cs
push
pushf
push
fs
push
out
jl
pop
mov
cmp
mov
out
rep
pushf
or
lret
cmp
cmpsl
add
shr
mov
add
cmp
adc
add
sbb
xor
jne
xchg
and
push
jle
repnz
push
int3
cwtl
dec
dec
sub
push
loop
lods
cmp
add
fwait
mov
add
fcompl
jne
dec
add
xor
push
je
sub
add
jb
fbld
cmc
rorb
add
das
roll
add
push
adc
adc
clc
lods
imul
sub
aad
cld
sti
push
add
cltd
xchg
xlat
lret
jnp
fidivrs
push
xchg
rorb
or
mov
mov
xchg
fdivr
nop
lahf
insl
jl
andnps
in
push
mov
dec
jae
add
adc
jge
inc
mov
or
fcmovu
sbbb
xchg
add
insb
loop
add
adcb
cmp
add
xor
pop
xchg
mov
notl
pop
xor
insl
push
jl
cmpl
pop
mov
shlb
mov
fdivrp
dec
shlb
stc
in
outsl
cmp
jno
lock
push
xchg
add
ds
out
imul
jmp
sbb
add
push
dec
pop
int
nop
add
push
jns
test
jnp
aad
sub
xor
push
add
pop
mov
mov
or
push
cwtl
jp
cmp
mov
add
rcl
cmp
push
cltd
aad
icebp
jo
mov
inc
shll
cmp
mov
xchg
push
lcall
js
push
cld
testl
push
out
xlat
xor
dec
fs
andl
fcmovu
imulb
addr16
sbb
pop
cltd
fisubrs
xchg
or
flds
andb
push
cmp
add
icebp
cmpsl
cmp
mov
dec
rolb
cli
sub
ret
clc
ljmp
ds
or
dec
lods
in
and
add
adc
lcall
test
mov
imul
jp
lcall
roll
inc
stos
adc
ljmp
cmpsb
sahf
jl
cmp
fidivl
jnp
or
add
dec
lea
out
outsb
add
fisubrs
adc
and
push
xchg
lcall
scas
cmp
fildll
int
in
add
sbb
nop
add
sbb
dec
jmp
and
add
imul
add
inc
lahf
loopne
outsb
sub
insb
ja
add
sbb
xor
addr16
sub
jl
pop
mov
pusha
and
sbb
or
scas
or
and
or
iret
sbb
add
add
mov
mov
fisttpll
add
inc
push
inc
xchg
stos
loopne
pusha
jg
inc
add
jns
mulb
add
push
pusha
out
mov
add
aad
push
int3
int
jae
add
ret
inc
sbb
vmwrite
sbb
mov
jb
iret
cmpsl
add
movsl
stc
in
sbb
lods
adc
les
mov
xor
imul
cmp
add
cmpsl
pop
inc
sbb
push
cs
dec
pop
xchg
mov
addb
xor
lock
orb
mov
in
int3
icebp
test
adc
and
jno
xchg
mov
les
andb
nop
add
xor
xchg
stc
jg
push
xchg
frstor
cmp
daa
and
gs
xor
add
push
lahf
incw
pop
cli
jne,pt
loopne
aaa
enter
into
or
inc
sub
lock
clc
repz
rorb
add
xchg
mov
adc
add
movsb
fbld
sbb
or
push
jl
and
scas
dec
std
add
xchg
mov
loope
imul
cmp
jp
dec
mov
pop
cli
enter
mov
xor
clc
xchg
sti
addb
inc
add
xlat
adc
add
test
roll
inc
xor
mov
add
add
xchg
push
out
insb
add
xor
pop
fsubrs
adc
push
dec
fimull
push
push
xor
clc
loop
movsb
aam
push
mov
add
scas
dec
int
ret
inc
sbb
cmpsl
fstl
nop
ss
incb
call
aad
cmpsb
add
dec
pop
push
dec
adc
pop
mov
or
fmuls
add
aam
mov
fmul
xchg
and
pop
mov
add
aas
xchg
mov
jno
int3
lret
and
ja
cmp
or
add
pushf
lds
jecxz
xor
popa
jl
adc
stc
test
cs
cwtl
into
scas
mov
cwtl
arpl
pop
inc
ret
push
jae
add
and
dec
add
xor
mov
mov
inc
out
out
mov
inc
int
pop
sub
in
in
push
fiaddl
mov
out
test
pusha
loop
add
lret
sti
sbb
sbbl
adc
mov
and
sub
test
mov
lds
mov
pop
sbb
add
xorb
mov
cwtl
cmpsl
out
leave
psrad
add
fwait
pop
ret
call
xlat
pop
dec
cmp
xor
add
pop
fwait
add
dec
stos
testb
pop
mov
data16
mov
cmp
add
dec
mov
add
xor
jle
inc
mov
decl
data16
sbb
push
stos
roll
and
icebp
adc
divb
aad
add
sahf
rolb
push
rorl
lds
inc
sub
mov
mov
or
fldl
sbb
call
xchg
testl
pop
mov
loopne
sbb
mov
ljmp
push
and
mov
add
stos
enter
incb
lock
in
orl
push
lock
sarb
jbe
orb
mov
es
add
push
mov
je
in
subb
decl
xchg
and
add
cwtl
sbb
lds
in
cmpl
lods
xchg
enter
xchg
inc
stos
and
paddb
sbbl
or
sub
lods
out
andb
cld
mov
js
mov
cmp
sub
dec
in
pop
jns
fstpt
sub
push
adc
jmp
dec
int3
aad
sbb
add
rcr
jp
mov
add
mov
popl
dec
loopne
ja
popa
inc
jno
xor
mov
jbe
sbb
fcmovnb
inc
xor
add
adcb
or
out
cld
shll
add
sahf
mov
jp
shll
cmp
popf
jle
rdtsc
sbb
inc
jmp
outsl
test
cmp
fcompl
fiadds
adc
and
mov
mov
arpl
xchg
add
fbld
add
cmp
mov
cwtl
mov
and
js
dec
lahf
outsb
add
mov
shl
add
test
xchg
add
cwtl
jmp
add
sbb
cltd
mov
pop
out
mov
hlt
mov
sbb
cltd
or
mov
sbb
xchg
jb
sub
add
dec
mov
cmp
add
outsl
mov
xor
popa
push
cs
mov
add
xor
addb
jno
sub
ja
imul
xchg
push
push
rorb
cmc
or
push
ret
rorb
in
mov
inc
add
jl
mov
add
pop
adc
add
push
mov
outsl
push
inc
sbb
cmpsb
pusha
mov
jo
inc
add
and
mov
movsl
fldl
pop
jle
dec
sti
test
add
add
or
jp
testl
inc
sub
lret
cmp
arpl
xchg
aas
add
pop
sub
xor
xor
lea
sub
inc
or
lods
incb
cs
fiadds
cld
iret
or
push
mov
sarl
mov
lods
dec
jle
jp
or
jl
adc
mov
and
lds
push
mov
cmp
pop
rclb
test
fxch
and
push
ret
sub
mull
cmp
sub
pop
xchg
filds
fcoml
jb
add
push
and
add
dec
daa
sti
lcall
and
mov
add
add
dec
mov
pop
movsb
add
jmp
icebp
cld
lret
sub
add
cmpl
add
pop
sub
add
shlb
add
adc
add
in
sbb
sbb
mov
inc
into
repnz
pop
xor
sbb
mov
das
add
and
dec
cmp
in
rolb
pop
pop
and
outsl
sub
into
sub
pop
pop
mov
mov
das
xor
inc
mov
push
arpl
and
fistl
push
js
jnp
dec
movsl
add
pop
or
add
push
dec
sub
js
je
add
jmp
and
mov
xor
icebp
pop
inc
out
cmp
add
cmp
lahf
pusha
pop
in
ss
int
notl
sbb
push
add
rol
jl
shr
int3
daa
xchg
pop
mov
jo
dec
inc
bound
ja
xchg
dec
pop
add
pop
mov
test
cmp
into
add
ror
dec
mov
mov
addr16
jecxz
add
test
cmp
movsb
jmp
pop
xchg
stos
loopne
repnz
xor
mov
mov
clc
inc
dec
out
ffreep
int3
add
mov
punpcklwd
and
ret
ret
mov
add
test
out
into
mov
and
sbb
xchg
cmp
dec
outsb
arpl
addl
fwait
push
add
out
jo
lahf
add
inc
xchg
cmp
pop
int
nop
iret
adc
xor
cltd
add
js
ret
push
jl
xor
mov
popf
add
ss
sahf
mov
xchg
add
fwait
dec
fcmovbe
add
adcl
add
loopne
mov
cmpb
lea
faddl
xchg
mov
push
lcall
lahf
aaa
jle
loope
inc
mov
shll
int3
testl
pop
push
cwtl
dec
add
jne
inc
sub
inc
add
cwtl
fnstenv
inc
xchg
add
sbb
jg
in
stos
mov
imul
or
in
faddl
stc
outsl
inc
test
sbb
push
lcall
mov
cmp
pusha
fs
test
test
pop
add
rorl
andb
outsb
add
push
aad
pop
lret
adc
pop
jp
xchg
adc
and
adc
mov
lods
jecxz
xor
push
mov
rcrb
imul
mov
add
inc
cmpsl
dec
and
mov
inc
cmpb
add
into
repnz
dec
clc
cmp
cmp
xchg
hlt
aad
inc
lock
pop
mov
dec
cmp
out
movsb
mulb
mov
fcomps
add
stc
mov
test
rcrb
scas
mov
andb
mov
inc
add
imul
xorb
push
shll
mov
dec
inc
and
comiss
or
mov
xor
and
cwtl
mov
add
xchg
lds
add
or
fidivrl
bound
addb
insl
ja
jecxz
scas
and
add
mov
in
xor
add
enter
mov
cltd
pop
fidivrs
ret
es
fs
sbb
pop
je
add
add
cmp
inc
pop
cmp
pop
scas
add
pop
arpl
int
cwtl
jae
add
sbb
pop
pop
add
sub
cmp
lock
inc
and
dec
inc
mov
arpl
sbb
lock
rorb
dec
cmc
clc
js
hlt
out
in
lods
punpcklbw
add
bound
or
jp
pop
mov
sub
out
adc
cmp
stc
mov
cmpsb
push
inc
call
and
pusha
dec
in
pop
xchg
aad
or
loopne
lretw
jae
or
aas
or
loop
add
gs
lds
sbb
stc
and
rolb
push
loopne
cli
out
add
jae
jno
clc
enter
lods
inc
sarl
cmovne
mov
cmp
lea
mov
xchg
mov
mov
dec
add
rorl
cmp
testb
inc
mov
imul
mov
add
fs
les
and
ljmp
and
loopne
add
inc
add
daa
scas
jmp
add
xchg
jecxz
repnz
add
popf
iret
pushl
add
mov
jne
ret
cmpb
adc
push
out
jp
lret
add
mov
mov
nop
lds
lret
push
insb
idivb
jb
add
mov
lock
adc
rorb
dec
add
push
push
push
xchg
aam
lock
popf
ret
mov
pop
pop
add
imul
fsts
and
mov
add
sub
push
dec
cmp
and
jno
jns
mov
mov
mov
cli
add
test
sbb
ljmp
or
stos
hlt
addl
mov
scas
mov
pop
sti
cmovns
mov
pop
mov
add
and
jno
cltd
mov
add
mov
push
aam
inc
push
push
loop
daa
mov
push
rolb
mov
xchg
add
dec
jbe
mov
add
pop
inc
mov
cmp
xor
fldln2
push
add
aas
test
ret
and
add
add
jecxz
sub
fstl
jne
pushf
add
cmpsl
nop
fistl
test
mov
push
add
rclb
add
fdivrs
and
and
or
and
pop
add
xchg
sbb
fcoms
xchg
push
sbb
icebp
adc
outsb
cwtl
in
jle
add
movsb
test
mov
and
shrb
into
out
lahf
add
xor
pop
add
pop
add
std
fldcw
cwtl
jno
sahf
mov
pop
mov
js
xor
out
and
sbb
orb
cld
nop
enter
aam
lods
insb
arpl
mov
pop
addr16
imul
xchg
dec
jne
aas
pop
adc
cwtl
cltd
clc
inc
int
add
xchg
fwait
addl
inc
adc
movsb
mov
aas
mov
jns
pop
jo
das
add
inc
push
push
lret
and
xchg
mov
add
mov
popf
out
call
pop
imul
dec
push
mov
pop
mov
cmp
inc
scas
loopne
imul
es
pusha
add
jecxz
jge
mov
jns
cld
jg
mov
aaa
push
add
je
lret
cltd
pop
pop
add
rcrb
into
cmp
daa
or
xor
incl
ret
mov
aad
subb
test
iret
sbb
adc
add
mov
scas
add
or
mov
xchg
sbb
jp
cltd
flds
and
jmp
mov
outsl
jb
and
insb
ss
push
je
xor
mov
jns
add
stos
push
xchg
add
lods
push
fadds
or
pop
repnz
mov
inc
or
cwtl
pushf
testb
cmpsb
mov
mov
dec
pop
stc
jg
xor
or
push
test
out
dec
cmpsl
lea
loop
pusha
xchg
shlb
bound
cmp
mov
inc
mov
repnz
mov
test
test
inc
pop
sub
fxam
add
jge
jb
out
add
cmp
and
ret
xor
sarb
inc
cltd
pop
imul
arpl
lcall
shlb
push
repnz
push
cmpsb
iret
adc
xchg
push
add
mov
test
adc
add
sti
and
jb
xor
mov
pop
jg
add
in
sub
jg
xor
js
cmp
pop
cmpsb
ds
mov
jne
add
cmp
sahf
jns
lahf
stos
push
jbe
adc
add
xor
out
jmp
outsb
addb
xchg
mov
cmp
jae
add
mull
cmc
fs
adc
jb
push
lret
pusha
add
lock
mov
jne
push
push
ficomps
add
cmp
cs
mov
push
and
ret
iret
jge
add
incb
cmp
xchg
mov
std
add
cmc
add
push
fidivrl
push
add
rcll
lods
sub
notl
pop
dec
test
add
mov
add
sbb
pop
lahf
or
dec
cmp
jae
sti
xchg
stc
sarl
ss
pop
enter
ret
jbe
dec
and
xor
andb
loopne
add
add
adc
fsubrl
or
jle
pop
mov
inc
gs
sbb
ja
add
std
testb
jne
dec
add
cmp
shlb
rorl
ret
in
movl
push
les
loop
xor
fimull
jnp
repnz
sar
inc
rclb
lock
adc
loopne
pop
or
popf
je
loopne
sahf
pusha
filds
movsl
mov
adc
lock
xor
add
bound
cli
add
icebp
sarb
inc
movsl
or
stos
and
add
ss
sbb
add
mov
add
sti
imul
shlb
sub
xchg
mov
jg,pt
daa
stos
jne
sbb
roll
mov
or
or
inc
sti
incl
and
lock
add
push
jge
jecxz
jb
push
inc
xor
and
add
jmp
loop
cmp
aad
ror
rcr
cs
std
pop
add
jecxz
test
out
add
mov
mov
xchg
fnsave
pop
popf
neg
xor
ds
push
add
imul
or
dec
cmp
mov
inc
dec
xchg
add
aam
arpl
cmp
loopne
push
ret
add
nop
repz
pusha
movsb
cmp
dec
andb
ret
push
mov
pop
outsb
xchg
lahf
pop
xorb
imul
adc
cmp
jge
cmpsb
out
push
inc
daa
jnp
or
adc
push
nop
xchg
pop
xor
lods
fnstenv
and
lods
xchg
mov
imul
sahf
jge
sbb
or
test
add
arpl
add
sbbb
add
mov
sysret
sub
adc
loope
les
sbb
adc
add
fldt
push
les
mov
insb
ret
push
add
xor
xor
and
rorl
cld
sbb
sub
add
fs
clc
mov
mov
mov
cmpsl
jle
sub
ja
sbb
mov
cli
inc
cmp
lret
sbb
repz
push
mov
dec
sub
flds
iret
mov
sub
xor
dec
push
inc
pusha
lcall
pop
xor
fists
jo
cld
push
sub
cltd
jo
sbb
inc
daa
nop
add
insb
scas
add
xchg
stc
loop
add
aaa
cmp
adc
lods
sarl
nop
inc
sub
das
xor
sarb
repz
adc
loopne
jge
dec
nop
sub
and
int3
cs
add
test
inc
fldt
aad
xchg
loopne
sti
lock
add
jns
xor
or
xor
add
sarb
push
roll
incb
mov
xchg
xor
sbb
shlb
mov
mov
mov
dec
lea
imul
rcrb
mov
push
and
stos
push
add
add
lock
add
andb
aad
sbb
dec
outsb
pop
sbb
mov
rcll
rcrb
cmovbe
add
data16
mov
dec
mov
push
stc
adc
add
add
add
mov
xor
jns
sub
add
fdiv
outsb
jae
sti
jp
xor
lea
mov
add
cmpsl
popa
repz
push
and
inc
fcoms
loope
xchg
and
or
lock
pop
and
jmp
and
and
jnp
insl
push
fistpll
js
add
out
pop
pop
mov
cmp
mov
stc
pop
mov
push
cmp
fisttps
lds
inc
add
push
push
fidivs
inc
lds
shlb
adc
cli
mov
add
bound
testb
pop
call
fmuls
add
insl
adc
mov
test
mov
lcall
add
cld
mov
jbe
sbb
jo
shl
jl
jle
add
pop
test
enter
cmc
jnp
sbbb
pop
inc
nop
and
cmp
push
sbb
lcall
shr
jecxz
insb
xorb
out
add
xchg
xchg
sbb
adc
pop
inc
dec
arpl
add
mov
hlt
popa
pop
call
in
rorl
jns
adc
add
sub
inc
scas
cmp
xor
jb
xor
xchg
sti
push
mov
add
insb
and
addl
test
and
stos
add
jns
cwtl
aam
outsb
xor
lods
inc
cmpsb
or
mov
mov
mov
cmp
lock
xchg
adc
add
and
push
jmp
sbb
add
dec
mov
hlt
out
add
call
aas
ja
or
into
out
sbb
push
pusha
cld
pop
add
xor
push
in
stos
add
mov
std
test
sbb
inc
aaa
shr
in
xorb
and
into
fisttpll
add
inc
ficoms
add
rol
dec
inc
push
pop
mov
cmp
in
xchg
iret
cld
add
mov
mov
test
xor
das
sbb
fwait
mov
mov
and
inc
push
ds
out
cli
iret
mov
js
inc
mulb
sbb
xchg
sub
scas
inc
add
incl
aaa
add
shlb
pop
xor
add
sub
into
out
nop
add
cwtl
cmc
rcrb
fbld
or
loopne
andb
ljmp
inc
jle
add
xor
mov
rcrb
loopne
ds
dec
pop
pop
add
jne
add
xchg
repnz
jecxz
xor
mov
pop
ss
out
jg
shrl
add
lcall
add
popa
and
stc
push
clc
add
dec
mov
and
dec
add
fsts
dec
add
sub
add
mov
mov
add
cmp
mov
cltd
fnstenv
cmp
out
add
jmp
loopne
loope
jns
add
push
es
jmp
pusha
jb
xchg
dec
std
fsub
lds
adc
dec
mov
push
jnp
stc
arpl
pop
les
pop
loope
cwtl
add
push
aam
add
lods
idivb
adc
call
add
lret
addl
pop
add
and
and
daa
mov
add
incb
cmp
aad
loop
add
xor
testb
mov
sti
outsl
mov
ret
add
inc
fisubs
test
seta
js
mov
mov
sarb
arpl
wbinvd
int3
in
fidivrl
icebp
jno
add
lcall
cmp
movaps
sbb
sbb
add
loop
xor
add
daa
pusha
bound
pop
dec
mov
verw
xchg
lds
adc
and
sub
mov
mov
std
mov
ljmp
aam
push
inc
or
daa
mulb
jp
add
insb
or
test
mov
pop
out
enter
dec
add
in
out
mov
divl
pop
cld
xor
cmc
jp
and
pop
jmp
ret
ret
add
mov
add
pop
mov
out
or
movhps
cmp
sub
mov
add
test
xor
test
das
cmp
inc
mov
mov
mov
aam
ret
jae
add
mov
test
outsl
pop
sbb
jp
shlb
cmp
es
jecxz
stos
add
leave
aad
out
scas
jp
add
int
mov
nop
xor
jne
jl
lcall
aaa
pushf
add
pop
loopne
adcb
xor
adc
movsl
add
pop
mov
add
xor
stos
or
add
in
jmp
jge
jecxz
fstpl
add
mov
lock
mov
int3
mov
inc
in
add
add
add
lods
pop
hlt
repz
nop
jo
cmp
mov
push
add
mov
jge
lock
pop
cmp
insb
sahf
aas
jo
cmp
jae
je
movsl
add
cmp
rorb
pop
daa
cmpsl
in
mov
add
xchg
fdivl
ss
inc
mov
lods
sbb
popa
xor
rorb
lds
and
jo
lret
push
cwtl
sub
cmpsb
orb
mov
nop
add
dec
adc
in
cmp
cmp
cmp
pop
notl
nop
xor
or
adc
pop
mov
add
filds
fmul
xchg
jl
jmp
lds
inc
shll
pop
outsb
pop
femms
or
or
addb
cmp
in
adc
in
mov
add
pusha
push
cmp
mov
fists
mov
pop
in
fmull
pop
outsl
fs
jmp
pop
cmp
lahf
lock
add
call
add
mov
out
popf
jne
xchg
xlat
xrelease
lds
in
leave
neg
sbb
sbb
mov
js
add
sbb
mov
mov
add
xchg
flds
jno
shlb
fs
push
js
icebp
mov
into
sub
inc
ja,pn
scas
add
and
add
jmp
cmpl
outsl
jb
cmp
ffreep
pop
cmc
mov
sub
mov
jmp
maskmovq
notl
mov
sarb
inc
or
jo
add
shl
cmp
sahf
add
cld
out
ret
mov
rorb
add
fiaddl
ja
inc
or
add
ret
std
pop
cmpsb
add
xor
iret
or
pop
push
mov
je
and
lock
outsl
push
jle
and
inc
into
or
test
inc
jl
pop
and
pop
subb
rclb
jne
jle
add
add
inc
jp
add
iret
or
add
sbbl
into
jns
pop
adc
mov
mov
push
sarl
add
adc
int3
inc
add
nop
ds
add
std
mov
mov
mov
pushf
inc
fildll
loopne
mov
nop
push
lds
push
mov
ret
xchg
loop
push
fstps
xor
xor
sub
inc
pusha
dec
add
sbb
cltd
inc
ret
ljmp
adc
cwtl
faddl
test
pop
add
or
ljmp
mov
inc
pop
sbbb
pusha
push
cli
lods
lods
scas
mov
out
jle
inc
pop
pusha
add
rep
addl
sbb
cmp
mov
imul
xchg
roll
fsubrs
mov
outsb
push
jo
cmovns
or
mov
out
test
sbb
xchg
add
mov
cs
pusha
jbe
xor
mov
scas
mov
mov
and
add
jne
roll
mov
ret
std
imul
jge
std
call
testl
ljmp
add
jmp
add
xor
cmp
orb
and
inc
add
or
add
pop
add
push
scas
imul
sbb
add
xchg
pop
shrl
dec
add
call
mov
add
and
xor
mov
aas
jnp
add
shlb
cmpsb
cmp
mov
mov
in
cs
aad
jne
and
push
sbb
pop
jl
add
lds
pop
jne
dec
and
mov
in
jp
fld
pop
je
cmp
pop
add
adc
xchg
fcoms
fwait
insl
push
add
stc
and
mov
aam
pop
dec
jb
lcall
xor
mov
push
icebp
push
add
scas
pop
cmp
or
mov
les
sbb
nop
jg
xchg
imul
gs
push
lock
mov
sbb
cmp
ljmp
jbe
lods
sub
add
mov
mov
jb
dec
inc
inc
shrb
ja
push
les
add
cmp
mov
ds
loope
mov
pop
mov
cmp
ljmp
add
imul
jns
pop
add
sbb
sbb
sub
repz
pop
stos
jbe
les
lods
add
mov
add
dec
fwait
jbe
int3
cwtl
xchg
movb
and
ja
mov
es
int
fwait
sarb
cmp
iret
sub
add
test
repz
out
js
add
and
mov
pop
fldt
mov
cmpsb
push
sbb
mov
xchg
rclb
cmp
xchg
aam
in
cmp
xor
add
testb
cmp
data16
pop
sbb
pusha
push
xor
jecxz
jmp
mov
cltd
rclb
xorl
lods
cld
in
add
jecxz
cltd
ja
fisubs
cmp
icebp
or
mov
cld
addr16
hlt
daa
lock
test
pop
nop
xor
jp
push
xchg
pop
clc
mov
add
add
jmp
jns
xchg
ja
shlb
sbb
sub
cs
popf
sub
shrb
int3
in
mov
jno
push
pop
sub
add
in
outsl
pop
push
mov
dec
lds
cmp
cwtl
add
pop
pop
fidivs
jo
aad
dec
dec
mov
add
aas
ficoml
ds
loopne
add
dec
mov
in
imul
aas
mov
add
jge
mov
pop
imul
push
xchg
push
iret
popw
or
mov
inc
mov
mov
jecxz
cmp
sub
rcll
mov
test
aad
mov
and
inc
popf
int3
rorl
sbb
inc
data16
add
inc
in
jmp
mov
das
jge
pop
mov
push
es
and
addr16
addl
lods
xchg
aas
xor
push
rcr
enter
jne
pusha
or
mov
aad
out
shlb
clc
jbe
cmpsl
testl
inc
call
sub
mov
cmpsl
add
and
inc
aaa
jo
scas
out
cmp
iret
subb
sbb
add
adc
adc
xor
jmp
mov
fldl
sbb
hlt
xor
dec
outsl
in
mov
mov
addl
xor
sub
push
call
lret
xor
xchg
mov
test
psrlw
add
xlat
jle
add
sbb
ljmp
mov
cmp
mov
gs
pop
ficomps
jmp
jne
push
push
insb
xchg
push
nop
dec
mov
add
inc
or
push
mulb
dec
inc
push
push
or
mov
sbb
push
das
jl
mov
pusha
add
mov
icebp
and
dec
mov
mov
mov
mov
mov
jmp
sbb
cmp
xor
pop
pop
lcall
mov
add
hlt
mov
dec
add
push
jne
cli
add
push
fisubrs
lret
call
addl
or
pop
lea
mov
push
mov
and
push
dec
das
cmpsl
push
shlb
pop
add
lret
push
pop
mov
mov
iret
inc
adc
dec
xor
ret
inc
les
mov
pop
jb
jnp
in
xor
in
rolb
and
je
js
sbb
sbb
add
sahf
lahf
fwait
sub
mov
add
movsl
push
test
jmp
adc
lahf
hlt
add
push
jnp
push
inc
xor
sbb
int3
mov
add
mov
jno
rol
jb
clc
je
pop
pop
ss
jecxz
add
popw
add
dec
imul
sbb
lods
or
sti
or
and
stos
imul
sub
mov
cmpl
lret
sbb
in
mov
sub
cld
and
aad
sbbl
imul
divl
cmp
int
popf
sbb
xor
sub
mov
pusha
shlb
pop
push
jae
mov
cmpsb
test
pop
sahf
adc
fs
add
mov
clc
pop
mov
mov
mov
dec
mov
and
add
leave
pop
add
cmc
add
mov
es
pop
stos
cmp
cltd
add
dec
or
inc
call
add
fwait
aaa
fldl
jae
cld
aas
rcl
add
outsl
or
cmpsl
mov
repnz
mov
mov
cmp
mov
lret
addr16
jo,pn
call
andb
sbb
js
cmpl
pop
fstl
xchg
les
out
adc
dec
or
or
sbb
repnz
pop
andl
xor
jae
into
mov
push
dec
or
or
lods
lea
inc
sub
iret
add
xor
leave
mov
in
mov
fsubp
mov
xor
dec
mov
mov
adcb
pop
out
loope
aad
out
add
dec
loopne
push
xlat
ret
mov
rcl
pop
jbe
add
xchg
aad
add
cli
sub
rcr
mov
test
adc
cmp
loopne
add
push
ja
lods
push
sub
add
push
sbb
mov
paddusw
lea
xor
bound
inc
stos
pop
and
adc
popa
pop
aam
loop
xor
sahf
fsubp
xchg
shlb
and
lods
jnp
add
cli
and
lret
clc
in
mov
data16
repz
sbb
push
test
arpl
sub
and
add
mov
mov
xchg
mov
inc
fcomps
ret
add
adc
cld
add
out
or
std
sub
mov
lret
mov
cmpsb
inc
add
lahf
or
test
xor
cmp
js
pop
fimuls
xor
mov
pusha
jae
fcoml
pop
scas
add
leave
add
into
jbe
stos
aam
mov
das
xchg
xlat
enter
mov
icebp
push
insl
push
cmp
mov
pop
push
add
lcall
pop
lds
ds
add
je
push
sub
mov
out
xor
xchg
pusha
jae
sti
and
xchg
in
iret
add
ja
into
add
pop
addr16
int3
mov
mov
or
sub
scas
fiaddl
inc
sti
xchg
add
mov
jecxz
daa
xorl
loope
pop
pop
jnp
add
popf
dec
out
fwait
repnz
inc
push
lret
adc
aas
cli
mov
dec
pop
sbb
mov
addl
shr
loopne
pusha
fcmovu
jmp
aaa
dec
sbb
xchg
arpl
sarb
xchg
lahf
push
in
and
add
cmc
fsubl
dec
rolb
lret
push
f2xm1
jo
std
pop
lock
or
fidivs
sub
mov
movb
jb
mov
lahf
jmp
add
fdivs
mov
xchg
lret
cmp
call
jno
mov
sbb
lods
add
jge
push
pop
mov
adc
xchg
and
push
enter
inc
push
cmp
xor
or
add
lock
sarb
lahf
lcall
push
lret
sub
fildl
push
adc
in
mov
push
jbe
fisubrl
inc
xor
lcall
lcall
iret
repnz
jne
pop
xchg
les
test
mov
add
mov
or
cmp
push
add
jae
loopne
dec
mov
sbb
imul
enter
lds
xchg
out
mov
inc
add
push
movsb
sbbl
add
or
add
je
int3
bound
add
jnp
lret
je
add
mov
mov
pop
mov
sarl
repz
andb
cmpsb
aad
adcb
aas
scas
mov
and
ret
mov
add
push
lods
dec
js
mov
sub
xchg
loop
sub
add
ret
cwtl
dec
subb
stos
cld
xchg
push
mov
das
test
cltd
add
add
std
add
stos
inc
andb
sti
popl
mov
pop
mov
psubusw
or
xchg
pop
je
add
js
cmp
ss
outsl
push
jo
lahf
pop
lea
mov
pop
jb
or
fidivs
add
pushf
mov
pop
xor
aas
fstpt
roll
out
and
add
cmc
addr16
cmp
jo
in
sbb
xchg
std
mov
int
pop
xchg
lock
xchg
add
mov
stc
sbb
pop
inc
nop
mov
lods
lret
adc
mov
push
jno
in
mov
aad
add
in
cmp
mov
mov
loope
loop
cmp
pop
nop
popa
add
jmp
or
dec
iret
add
mov
sbb
cmp
int3
cmp
add
test
xchg
dec
cmpsb
or
mov
xor
sahf
pcmpgtw
mov
xchg
insb
das
add
jno
or
pop
imul
popf
hlt
pop
adc
add
cmc
add
inc
dec
mov
mov
add
aad
push
add
mov
call
pop
inc
or
xor
testb
mov
outsb
dec
es
sahf
dec
stos
out
flds
push
popa
add
aaa
sbb
icebp
rorb
add
inc
or
shlb
in
add
xchg
int3
negb
lock
lds
sti
lods
jge
jl
and
mov
stc
push
ja
out
fidivrs
dec
add
mov
sbb
jno
cld
add
mov
std
add
negl
add
xlat
inc
cmp
inc
xor
arpl
adc
arpl
cmc
sbb
int
cld
push
dec
int3
xchg
xor
aam
or
rcrb
cmp
in
orb
mov
lds
add
mov
mov
mov
sbb
cmp
inc
jp
sbb
push
sub
xchg
call
push
inc
imul
insl
arpl
inc
jb
push
lcall
or
mul
cwtl
pop
inc
add
repnz
outsb
mov
xchg
push
push
cmp
stos
popl
shlb
sahf
ja
int3
add
push
out
ret
rol
dec
sub
pop
adc
faddl
xchg
add
and
std
cmpsb
jle
sub
mov
or
je
xor
pusha
jp
add
push
mov
sub
sub
sbb
clc
push
lock
cwtl
aaa
in
sub
pop
xchg
adc
lods
cmpsb
stc
aam
jecxz
push
push
ja
iret
inc
mov
outsl
add
adcl
mov
subl
sub
frstor
jmp
pop
test
dec
divb
fwait
sbb
inc
aad
dec
loopne
cmp
rol
roll
jecxz
shlb
dec
outsl
mov
push
imul
ja
insb
imul
cmc
int
jbe
sbb
lock
xor
mov
sahf
add
ficoml
mov
dec
add
lcall
add
js
add
insb
jbe,pt
test
cs
test
mov
mov
mov
push
or
and
jp
jp
pop
sbb
scas
jns
xlat
pop
lock
add
sbb
icebp
rclb
inc
jnp
mov
cmp
add
jno
scas
hlt
add
jne
movsl
outsl
push
mov
jns
add
sub
test
push
jge
inc
test
xlat
or
add
aad
movd
add
idiv
ljmp
jl
inc
loope
sbb
cltd
imul
push
data16
sub
mov
xor
mov
data16
jns
xor
stos
cmpsb
mov
ljmp
inc
add
push
pop
sbb
out
pop
aam
sti
or
sub
aas
lock
fwait
out
test
subb
pop
mov
rolb
cmpsl
cmp
sti
mov
push
cmp
loope
pmulhw
inc
fldl
pop
mov
addr16
scas
or
xor
clc
paddsb
fwait
mov
sbb
xor
repnz
add
jns
sbb
clc
and
cmp
add
ret
pop
pop
mov
adc
test
jg
and
std
add
es
imulb
dec
lds
dec
pop
or
adc
lahf
shrl
or
push
fsubrl
mov
mov
mov
or
xor
add
sti
incb
sbb
lods
add
push
xor
sub
xor
imul
mov
jns
cmp
stc
sbb
add
cs
mov
add
xchg
and
push
scas
in
xor
daa
test
or
pslld
sti
push
and
xor
mov
mov
cmp
add
in
loope
mov
jns
mov
xor
ficoml
jo
bt
or
es
loopne
movsb
rolb
mov
mov
cli
push
add
or
inc
mov
push
rol
add
push
or
ror
daa
aam
add
xchg
out
out
bound
dec
nop
push
xor
mov
push
xchg
cli
in
add
xchg
sbb
outsl
dec
cmp
sti
int
jle
sub
sub
sbb
adc
add
into
out
test
xchg
add
push
out
xor
mov
aad
cmp
nop
and
sbbl
gs
je
jns
adc
add
jg
mov
mov
cmpsb
adc
cmpsl
rcrb
insb
sub
aas
push
fnstcw
pop
out
add
repz
push
jo
sub
fs
xchg
ja
add
in
jnp
pop
pop
add
seta
sarb
and
add
mov
jge
out
or
pushf
xor
sbb
lods
mov
imul
sbb
add
xor
in
inc
and
pusha
enter
and
sti
movsb
add
adc
pusha
xorb
pop
fiadds
cmp
xchg
mov
in
sbb
lcall
add
push
mov
sub
dec
lea
cmpsb
and
test
fdivrp
inc
add
cs
hlt
cmpsl
jae
pusha
add
stc
pushf
push
ljmp
in
es
ret
xor
notb
add
sub
xor
mov
add
jecxz
add
rcll
outsb
dec
inc
ljmp
cmp
cmp
inc
dec
iret
cmp
inc
jae
add
mov
sub
pop
jg
adcb
test
fisubrs
jae
push
xor
das
popf
sbb
cmp
dec
call
and
jno
lret
sbb
lea
add
pop
ret
roll
cmp
mull
add
fcomp
outsb
pop
aaa
movsl
hlt
icebp
clc
and
ret
sbb
out
cmp
sbb
mov
out
push
iret
into
add
cs
mov
imul
pushf
movsb
mov
jno
xlat
add
es
subb
xchg
sbb
fs
jne
add
mov
jno
jne
push
push
hlt
std
jae
jns
pop
fwait
pop
mov
and
mov
sub
sbb
xchg
out
imulb
jl
repz
das
sbbb
call
dec
xchg
lret
imul
faddl
ret
sbb
cmp
loopne
pop
loopne
pushl
xchg
loopne
cmp
das
add
or
cmpb
add
xor
and
add
in
pop
sbb
cmpsl
add
js
and
in
fstps
ret
repnz
xchg
ret
data16
push
adc
mov
jnp
popa
fldl
popa
outsl
xlat
push
sub
hlt
pop
xchg
call
mov
cmp
jae
add
lret
ja
icebp
hlt
xor
push
dec
inc
mov
jo
add
pop
mov
fisubrs
mov
jge
mov
cmp
or
add
inc
adc
outsb
mov
lds
push
inc
push
jmp
add
gs
mov
xchg
popf
sti
cmp
lahf
mov
fs
push
rcl
jae
sbb
pop
test
cmc
mov
lret
jno
cmp
test
and
pop
les
sbb
nop
loopne
fildl
sub
push
pusha
xor
add
jns
sti
add
outsb
xor
jnp
and
add
adc
enter
out
add
mov
mov
mov
incl
mov
in
verr
sbb
dec
add
sub
out
cmp
inc
xor
icebp
or
sub
or
adc
push
inc
outsl
push
add
cs
repnz
orb
or
mov
add
mov
pop
in
and
mov
hlt
aas
inc
fidivrl
pop
cmp
fildl
das
inc
fwait
or
sbb
mov
or
ss
add
aas
adc
test
jle
cmp
jg
or
les
out
pop
sub
repz
add
nop
cmpsb
jbe
mov
xlat
xchg
imul
arpl
imul
test
stc
add
jb
mov
rolb
sbb
imul
movsb
out
cmp
ds
pop
inc
mov
mov
sbb
adc
sbb
inc
mov
push
push
dec
jnp
test
into
pop
add
int3
xor
adc
addl
dec
in
inc
popf
add
dec
cltd
mov
cmc
or
subb
insb
add
xchg
and
add
mov
jbe
cmp
inc
test
cwtl
les
pop
xchg
mov
xor
cltd
push
incl
jmp
or
je
insb
jl
lods
inc
and
inc
lock
pop
lea
fstpt
add
add
into
push
fs
stc
int3
ja
xor
mov
ret
sbb
cwtl
and
aad
xchg
lahf
nop
add
add
add
inc
mov
xchg
add
pop
ret
les
mov
adc
repz
out
fcoms
or
mov
sarl
add
push
and
emms
lahf
add
push
mov
rcrb
in
imul
testl
mov
ja
test
fiadds
add
mov
sbb
push
out
sub
fildl
ljmp
pop
add
aad
and
dec
jae
add
psraw
inc
movl
add
cmpsl
js
lret
adc
cmc
in
push
andl
add
sti
jp
xacquire
in
jmp
rorl
mov
mov
fidivs
sub
add
sub
jnp
data16
push
imull
mov
mov
mov
mov
push
clc
gs
dec
adcb
push
lods
enter
push
in
ret
lahf
arpl
es
mov
add
flds
inc
and
lds
sbb
xchg
push
jne
ja
xchg
sub
lock
lods
dec
inc
mov
xchg
xor
imul
pop
jecxz
daa
sub
lock
pop
pushf
cmpsb
fiaddl
enter
lods
mov
add
bound
cmp
add
xor
aaa
add
adc
mov
dec
push
add
test
lds
loop
movsb
arpl
cmp
xchg
fsubrs
xor
cmp
incl
and
leave
push
incb
out
int3
cmp
lret
jp
addb
fisubs
dec
add
xlat
orl
dec
dec
mov
jge
loopne
stos
mov
xchg
push
cmp
cmp
push
jb
jo
pusha
and
fldl
xor
xor
insl
mov
addr16
mov
jg,pt
xor
clc
add
pushf
mov
nop
pop
addr16
pop
sub
and
shlb
or
popa
nop
shrb
add
adc
cmp
sub
rclb
add
negb
out
sub
rorb
dec
cli
rcrb
push
loope
js
sarl
and
xlat
roll
mov
cwtl
pop
add
push
adc
lods
add
adc
add
movsb
mov
scas
xchg
mov
sub
push
add
es
push
push
pop
jns
xor
jae
loop
add
push
iret
mov
faddl
lcall
pop
pusha
movsb
int
and
roll
inc
or
pop
cmp
xchg
ficoml
orl
mov
ja
cli
loope
jae
lcall
xor
rolb
jecxz
xchg
mov
out
pop
cmp
clc
bnd
mov
cwtl
mov
jl
xchg
stos
int3
push
dec
add
call
mov
imul
jge
push
sbb
push
or
icebp
lods
push
add
or
mov
add
icebp
cmpb
add
mov
cmp
push
fwait
push
cld
xchg
add
sub
push
pop
into
imul
add
add
movsb
mov
in
sbb
in
dec
jb
add
or
and
jno
out
bts
adc
shrl
fmuls
add
call
imul
sub
mov
add
inc
addr16
mov
add
mov
jo
rorl
or
inc
lock
mov
rol
loope
ja
bound
adc
inc
sub
ret
mov
xchg
add
addb
add
loopne
jl
jle
xchg
jae
push
xchg
and
add
std
pop
add
mov
push
test
pop
insb
fdiv
das
or
cltd
lahf
sub
sbb
adc
in
shll
jmp
push
xchg
mov
cli
loopne
ss
scas
jmp
gs
call
mov
push
mov
mov
push
push
mov
mov
loopne
mov
ds
add
cmp
test
xor
in
xchg
or
adc
adc
cmpsb
sti
xor
xor
aam
cltd
xor
adc
adc
clc
fadds
lret
dec
xor
mov
add
fs
mov
inc
inc
lock
fcompl
add
in
insl
fs
test
data16
sbb
hlt
add
cmp
xchg
add
jb
jne
sbb
sbb
adc
add
in
push
cmp
add
lahf
aas
insl
dec
mov
jb
mov
sub
xchg
js
add
add
stc
incb
mov
cmp
dec
and
cs
pop
add
add
das
std
and
rcl
inc
or
adc
test
stos
stos
cmp
sub
gs
mov
jnp
jecxz
adc
sahf
mov
testl
ljmp
mov
push
idivb
lods
or
in
loopne
mov
aam
shll
jmp
cld
cmpsb
bound
outsb
test
mov
cmp
jae
ret
mov
aad
sbb
cmp
push
pop
repz
dec
sbb
das
jbe
lret
xchg
mov
popa
loopne
movsl
lods
add
xchg
fstpt
sub
in
cmpsl
or
jb
movb
jmp
das
lcall
aas
daa
push
mov
add
mov
mov
mov
jle
fmul
sub
adc
or
pop
mov
cmp
scas
jb
nop
rcll
sbb
push
add
dec
outsl
jno
add
pushf
jp
sysenter
pop
cli
add
mov
jae
add
sub
js
ud2
mov
mov
in
into
mov
add
std
js
pop
dec
fwait
movl
jmp
add
movsl
mov
inc
dec
add
xor
lods
cmp
xor
mov
mov
sbbb
test
repnz
mov
inc
imul
movlps
sub
jb
add
inc
xor
and
mov
mov
pop
shll
fistl
push
gs
add
inc
dec
ret
add
ljmp
add
hlt
cwtl
and
push
pop
imul
ret
cmpsl
adc
pop
rcr
cmp
repz
cmp
lret
subl
and
sahf
insb
cwtl
xchg
je
jo
or
dec
mov
mov
in
nop
cmp
inc
jno
orl
lock
ds
mov
inc
pop
loopne
ret
dec
mov
cmp
addb
pop
add
inc
pop
mov
mov
push
jp
cmp
sbb
dec
addb
std
push
mov
jg
roll
clc
and
data16
add
lock
xchg
mov
mov
adc
stos
loop
cltd
mov
add
or
or
xor
iret
cs
mov
sbb
add
pop
cmp
pop
mov
loope
lahf
jp
add
scas
sbb
push
incb
movsl
rcrb
and
jns
pop
xor
or
outsb
addb
mov
jno
addr16
pusha
sar
add
mov
test
leave
pop
stc
loopne
xor
and
jge
movsb
jmp
fsub
pop
jns
nop
xchg
xlat
or
add
jne
les
jecxz
cld
push
pop
jb
add
add
out
xchg
and
popf
mov
and
sbb
push
jle
fwait
sub
mov
xor
mov
ds
roll
push
not
add
lcall
inc
inc
add
add
add
mov
xchg
add
push
test
jo
mov
test
and
inc
mov
add
lds
and
jno
inc
push
lret
sub
push
rorl
add
jne
shr
fsub
insb
lods
lea
xchg
jecxz
add
add
sub
jbe
mov
pop
bound
jns
add
outsb
xchg
jl
jmp
add
sub
ds
xchg
mov
test
cmp
fiadds
sar
and
jb
xchg
pop
pop
xchg
add
lret
lods
outsb
out
xlat
cltd
mov
add
mov
add
jae
bound
pop
inc
pop
mov
cmp
jp
add
push
cmpl
test
call
mov
jmp
lock
bound
mov
fcompl
movsl
rorl
mov
cltd
adcb
inc
adc
bound
jbe
shlb
ja
add
cld
xor
mov
das
aas
sbb
and
and
faddl
sbb
stos
mov
test
loop
fdivp
cmc
filds
movsb
pop
push
loopne
jbe
push
pop
sahf
cmpsb
xchg
loopne
adc
xlat
or
stos
inc
lods
jnp
add
add
sub
sbbl
mov
xchg
scas
fistl
inc
lock
add
ss
shrl
outsl
andps
in
orl
lea
pop
add
filds
incl
fadds
jbe
jg
add
mov
dec
mov
es
sub
push
adcb
xchg
scas
inc
fiaddl
add
mov
xchg
jmp
lea
rolb
daa
jne
gs
incb
jmp
cli
out
jecxz
mull
add
orb
shll
cmp
rcl
test
cmp
adc
and
adc
add
mov
xchg
jl
in
into
add
jbe
loope
or
cs
or
add
jmp
orb
fbstp
cli
cmp
dec
shlb
xor
jnp
add
mov
xchg
rolb
cmp
and
incb
ja
adc
sub
fisttpl
enter
add
xor
loopne
aas
pusha
pop
lcall
sbb
notl
loopne
sbb
sbb
dec
mov
inc
jb
add
lahf
stos
mov
xor
in
lock
dec
add
mov
jbe
and
cld
mov
mov
icebp
call
mov
sub
jmp
mov
inc
add
xor
idiv
xor
mov
or
pop
test
xor
mov
in
pop
int
mov
dec
scas
shll
add
orb
dec
xor
hlt
jno
adc
dec
add
cmpsb
lods
incl
movsb
loopne
ljmp
add
mulb
stos
lods
add
out
xchg
mov
pavgb
popfw
in
lea
add
xchg
xchg
loope
fwait
jle
push
push
add
sub
mov
pop
imul
xchg
lock
imulb
push
jae
mov
cmp
icebp
add
leave
ss
fs
nop
js
xor
in
sar
adc
out
xor
out
jle
add
xor
cmp
cmp
mov
push
add
sbb
in
dec
scas
add
mov
xchg
andl
xchg
shll
iret
sbb
add
icebp
sti
pop
jne
pop
stc
sub
add
dec
mov
pusha
mov
pop
addr16
add
mov
in
pop
cmc
pop
jp
inc
bound
test
movsl
rcrb
xorb
xchg
adc
daa
add
add
mov
js
fsubs
xor
dec
xchg
cmc
add
sbb
addl
adc
js
or
loopne
cmp
mov
aam
out
cmpb
std
daa
dec
sub
inc
dec
sarl
sbb
xchg
popf
stos
inc
pop
insl
dec
std
and
add
cmp
arpl
movsl
push
subl
inc
add
push
aad
inc
add
jne
ss
test
cmp
fidivrs
and
xchg
mov
arpl
cld
dec
or
es
mov
icebp
pushf
movsb
add
jnp
fadd
inc
movsl
stc
dec
cmpsl
pop
iret
call
cmp
add
add
imul
push
ret
inc
testb
call
sarb
add
pop
sahf
lock
sbb
sbb
add
dec
fldz
mov
jo
sbbl
pop
add
jbe
lea
cmp
xchg
movsb
cli
mov
or
fwait
stos
mov
int3
cmp
adc
cmpsb
xor
pop
rolb
sbbb
push
sarl
inc
add
pop
mov
or
dec
xor
or
xchg
mov
idivl
adc
in
sbb
mov
movsl
jg
xor
and
jo
or
insl
dec
mov
icebp
loope
push
mov
add
fcoms
enter
pmuludq
xchg
dec
pop
jl
push
es
xorb
fwait
jns
pop
adc
clc
add
outsb
lcall
out
mov
and
adc
repnz
xor
or
sarl
add
xorl
or
cmp
test
cmp
mov
add
test
enter
and
arpl
or
repz
jns
jmp
andl
jnp
arpl
daa
roll
int3
repnz
xchg
cli
addb
imul
jl
je
pop
jmp
jnp
lods
cmp
add
adc
mov
cmp
stos
shlb
lret
add
xchg
fwait
lcall
cmp
mov
inc
inc
pop
add
pop
jae
std
fdivrp
mov
inc
add
insb
mov
sub
outsl
jbe
adc
cmp
mov
pop
add
add
and
aaa
arpl
ja
popf
add
loope
mov
nop
add
add
fwait
add
sub
movb
cs
adc
add
in
in
jo
pop
sub
push
adc
cs
incb
cltd
sbb
or
repnz
add
jmp
xor
ljmp
lahf
hlt
mov
add
loope
adc
mov
lahf
sub
cmp
or
pop
in
push
sahf
pop
adc
add
test
movsb
push
mov
xchg
add
outsb
xor
add
out
or
push
mov
test
lock
jp
das
pop
iret
sbbb
int
add
mov
cld
scas
add
lcall
cmp
adc
out
shlb
cltd
mov
and
dec
loop
pop
dec
xchg
call
mov
xor
stos
call
leave
mov
mov
xor
add
add
shr
xor
pop
and
andb
add
mov
mov
imul
sub
push
inc
out
in
mov
sub
mov
add
jnp
adc
rcrb
sbb
icebp
daa
or
call
xchg
arpl
sub
sti
cmp
loop
xchg
add
ja
pop
cwtl
std
jno
jns
add
cmc
test
inc
enter
ljmp
call
pushf
cs
in
inc
mov
fcomip
arpl
cmp
inc
add
jl
pop
rcll
mov
sub
es
in
aas
adc
add
lcall
xchg
pop
test
lods
mov
add
adc
jl
cs
add
mov
loop
add
inc
ljmp
sbb
dec
sti
or
scas
loopne
iret
rdpmc
rorl
sbb
push
xchg
adc
xor
add
loope
cld
add
xchg
gs
mov
add
pop
adc
jo
mov
mov
addr16
add
shr
test
sbb
jne
mov
xchg
sub
leave
fsubs
rcrb
dec
sub
fnstenv
xor
adc
cmpsl
add
aaa
das
adc
pop
add
rcrb
inc
fs
push
add
mov
jnp
pop
mov
xor
pop
and
clc
in
cmp
sarb
pop
xchg
xor
es
ljmp
arpl
sbb
stos
mov
add
addr16
cmpsb
cmpsl
mov
rcll
aad
mov
add
stos
aas
add
sub
es
xchg
cmp
inc
push
xchg
cmp
lret
lcall
add
mov
or
test
add
or
dec
rorl
addb
int
lahf
je
mov
shll
sub
mov
jbe
add
push
repnz
cltd
adc
int3
out
add
and
pop
xlat
xchg
ds
stos
xchg
iret
xor
loopne
push
addb
std
fwait
sub
push
jl
add
js
iret
jl
icebp
inc
add
aas
shll
xor
nop
pinsrw
xor
xor
mov
push
cwtl
pop
dec
movsl
add
pushf
inc
loop
cmc
and
or
mov
sbbl
mov
sub
subb
mov
xor
loope
das
jecxz
cmpsl
std
or
enter
in
adc
adc
iret
mov
imul
insb
test
loopne
dec
in
sbb
dec
sarl
xchg
fsubrl
sbb
ljmp
ss
fisubrl
loope
dec
lds
xor
mov
gs
cmp
add
jns
lret
imul
xor
xor
lret
sbb
push
mov
jo
push
xor
mov
mov
xchg
jmp
in
cwtl
ss
and
add
bound
cmc
inc
mov
dec
js
mov
add
sub
in
jns
cmp
mov
mov
mov
dec
popa
push
xchg
push
mov
push
cmpsl
mov
std
cmp
int3
xor
cmp
cmp
pop
xchg
inc
or
add
out
addr16
sbb
inc
xor
sbb
or
mov
sbb
scas
stc
inc
ret
add
jle
sbb
aam
add
xchg
fmull
mov
pop
fists
push
addl
jnp
add
mov
popf
add
sub
jnp
jmp
or
cmp
inc
ffreep
or
add
mov
arpl
sbbb
add
jne
pop
ljmp
mov
rolb
call
pop
xorb
loopne
xchg
jnp
mov
cli
add
fwait
mov
push
and
sub
mov
mov
pop
lods
mov
dec
int
mov
call
je
jmp
outsl
cmc
ds
jle
pop
test
pop
mov
xchg
stc
mov
adc
popf
test
test
outsl
jmp
scas
imul
pop
outsl
popa
inc
ror
push
out
pusha
adc
daa
mov
jb
add
sahf
adc
out
pop
lret
daa
push
push
dec
xchg
in
jns
inc
add
lods
and
xorb
clc
lahf
xchg
stc
psubq
push
adc
das
inc
popa
mov
repz
sub
jle
add
ds
mov
xchg
lcall
push
lock
add
add
sub
dec
jg
ret
add
arpl
and
fs
cwtl
loopne
in
add
add
int3
add
xor
mov
jno
cmc
mov
lret
push
pop
das
rcr
test
fisttps
push
add
dec
fdivs
add
pop
xorb
push
out
jae
mov
fcompl
shl
bnd
xor
mov
add
inc
mov
hlt
jp
sti
data16
fsubrs
incl
ds
and
add
rol
lretw
or
add
pop
add
xchg
fiadds
cmpl
jle
loope
mov
ds
sar
add
push
into
aam
enter
nop
cmpsb
out
inc
add
mov
mov
in
dec
add
out
pop
arpl
pop
mov
addb
mov
add
jno
dec
cli
dec
mov
out
mov
shrl
into
sub
lret
test
push
or
leave
push
mov
pop
cli
pop
mov
cld
sub
sbb
cs
or
data16
sub
fidivrs
pop
push
hlt
and
iret
lret
divps
leave
loop
lea
nop
sahf
jno
loopne
sbb
out
lea
sbb
pop
mov
fmuls
pop
add
insb
push
ret
add
lods
pop
mov
mov
mov
mov
or
test
sbb
call
dec
sar
ja
jle
sarb
push
std
ss
cmc
cmp
test
insb
inc
movsb
test
or
add
mov
lock
lcall
je
or
sbbl
movsl
mov
ret
std
add
lock
push
cvtps2pd
mov
test
pop
add
movl
out
dec
xchg
sbb
add
arpl
rolb
stos
sbb
decl
and
push
cli
pop
fs
xor
loop
ret
loopne
mov
lock
push
ds
mov
or
add
add
into
pop
mov
push
add
pop
lods
pusha
repz
cwtl
dec
sub
enter
pop
in
add
insl
stos
mov
xchg
bndstx
mov
inc
xor
mov
sub
add
push
xchg
jo
mov
pushf
popa
add
pop
clc
das
hlt
test
xor
mov
jle
stos
fcoml
mov
sub
rcl
sub
rcrl
popa
decl
and
arpl
add
adc
jns
add
mov
adc
test
fmull
das
push
loope
sub
mov
outsl
mov
in
cmp
push
fidivrs
dec
mov
arpl
sbb
xchg
mov
adc
fcomip
rorb
or
lock
cmp
scas
add
repnz
lea
cld
xor
sbb
jecxz
sub
or
orl
fildl
and
nop
mov
xchg
inc
jae
cmpsb
sbb
inc
outsb
cmp
and
lret
std
pop
mov
inc
add
jmp
xorb
mov
add
jg
xor
nop
out
add
mov
inc
les
mov
sar
cld
cmp
or
imul
loope
add
push
out
cmp
mov
and
lcall
pop
mov
inc
and
pop
mov
gs
orl
add
addr16
scas
fucom
insb
mov
jne
jnp
scas
lahf
or
mov
pop
or
bnd
sbb
add
sbb
push
stos
mov
test
add
mov
mov
mov
and
inc
add
iret
jbe
jnp
and
add
xchg
imul
mov
addl
flds
inc
mov
pusha
mov
xchg
push
mov
dec
mov
sbbl
inc
jecxz
lahf
test
lods
add
addl
stos
js
in
push
pop
add
insl
push
pushf
xor
decl
imul
jns
add
mov
jo
add
dec
fwait
adc
sbb
roll
xor
push
cmp
jo
dec
cs
push
je
cmc
cmp
push
xchg
clc
nop
enter
add
jnp
add
push
mov
mov
dec
add
mov
pushf
movsl
mov
fsubs
loopne
or
push
add
sub
pop
push
nop
mov
leave
xchg
add
mov
pop
in
add
or
mov
xchg
sub
int3
add
mov
and
add
push
mov
add
inc
jl
push
stos
iret
ret
pop
dec
dec
add
js
cmp
das
jo
push
and
jge
xorb
vmovss
adc
xlat
xor
dec
fnstsw
cmp
jmp
je
sarb
xchg
xchg
and
pusha
fucom
push
jae
out
stos
daa
mov
sti
dec
mov
mov
push
and
aad
enter
cmp
mov
dec
dec
outsb
mov
int3
cmp
pop
mov
sbb
hlt
lea
pushf
cmp
adc
push
movsb
dec
push
adc
aad
jns
push
inc
lods
pop
mov
xor
cmpb
add
sub
or
mov
arpl
adc
mov
cmp
mov
lret
cwtl
inc
mov
add
cli
adc
mov
xor
std
or
adc
xchg
cld
gs
pop
das
out
add
xor
in
pop
lock
and
mov
add
inc
nop
sub
xor
mov
pop
add
aas
repz
xchg
sahf
adc
jae
xchg
ljmp
popa
add
scas
lock
lcall
cmp
xchg
sbb
xorb
shrl
mov
push
pop
loope
adc
inc
jl
loop
mov
xlat
mov
mov
add
push
test
push
dec
and
mov
fstps
cmp
add
int3
in
add
mov
lret
insb
add
sbb
out
roll
and
mov
xchg
rorb
adc
add
and
and
add
push
out
and
call
cmp
cmp
frstor
call
in
sub
subl
dec
hlt
out
enter
add
pop
mov
adc
dec
pop
out
lret
ja
ljmp
pusha
cmpsb
call
xor
add
mov
pushf
mov
cmp
pop
ret
or
dec
pop
push
add
jle
into
sub
adc
mov
mov
test
sbb
add
lods
and
jo
xchg
dec
and
jnp
mov
xor
add
cs
outsb
add
inc
imul
add
jmp
arpl
outsl
out
hlt
adc
or
dec
xor
add
mov
jbe
add
adc
add
push
data16
incl
pop
call
adc
push
addl
sbb
xlat
inc
add
mov
in
pop
dec
add
pop
add
rcr
sub
test
push
xor
jb
push
jnp
dec
mov
pop
and
add
xor
cmpsb
leave
shlb
mov
call
decb
cld
sub
add
xchg
sbb
xor
mov
dec
cmp
dec
mov
mov
xchg
push
and
clc
mov
push
adc
stc
push
in
and
push
xor
mov
insl
mov
lret
xchg
dec
mov
bound
sub
pop
add
js
and
sbb
add
push
rorb
fcomps
mov
rcrb
fisttpl
pop
push
pusha
cmpsl
cli
mov
push
and
adc
testb
sub
add
inc
mov
mov
mov
popf
cmpb
push
adc
test
rcl
ret
pop
push
std
scas
push
cmp
lods
add
out
cltd
inc
jecxz
inc
jle
sub
incb
cmp
xchg
testl
jnp
es
add
addb
add
cmp
out
inc
cmpl
pop
add
add
push
add
scas
dec
sub
loop
dec
sbb
pop
mov
jo
pushw
or
aas
sbb
add
mov
push
sub
jecxz
cmp
movsb
push
xor
fiadds
inc
mov
adc
addr16
add
xlat
push
add
jge
add
mov
add
lahf
mov
ljmp
imul
add
fnstsw
pop
out
rolb
fiadds
and
add
fisttpl
fdivrl
adc
add
nopl
sbb
sbbb
js
and
sub
inc
dec
pop
loopne
or
xor
in
add
arpl
add
mov
shlb
xchg
add
push
mov
popa
cld
int
nop
xor
and
adc
adc
jg
fldenv
add
dec
mov
push
xchg
mov
clc
cwtl
xor
inc
filds
cmp
cmp
or
lea
push
addb
ss
or
aas
enter
inc
dec
fiadds
sub
push
add
mov
xchg
fdivs
loop
jecxz
push
push
push
sub
push
lods
lds
mov
xchg
cmpl
aas
and
add
xchg
fsubr
add
add
cmp
shl
adc
into
cmp
filds
enter
add
xor
adc
pop
xor
cmp
faddl
push
scas
cmp
cld
pop
pop
mov
nop
mov
test
mov
rolb
sbb
or
lods
or
scas
je
ret
pop
add
mov
pop
and
jmp
loope
shrb
test
cld
sbb
es
sbb
leave
add
lret
loopne
pop
xor
mov
jno
push
call
out
pop
add
iret
add
sbbb
push
xchg
cmpsb
add
adc
call
adc
pop
or
sbb
iret
adc
pusha
pop
in
push
mov
es
mov
repnz
sub
ret
fs
cwtl
aam
cmpsb
cli
inc
lret
movsb
add
outsl
xor
ja
mov
scas
cmpl
popa
add
add
movsl
xchg
fidivrl
ffree
divl
sbbb
mov
and
or
repnz
fsubr
in
sub
cli
scas
add
pop
pop
jl
insl
push
add
lods
add
out
nop
mov
test
lds
push
mov
mov
add
sbb
in
and
jg
daa
fiaddl
loop
xorl
stos
mov
test
insl
add
xchg
pop
jmp
add
shrb
or
dec
jno
or
inc
jae
dec
add
adc
imul
dec
add
mov
add
mov
inc
xlat
shrb
add
jne
ja
in
iret
xor
and
sahf
ret
cmp
outsl
mov
xorb
loope
cli
cld
add
push
shrb
pop
cs
push
sar
cmpsl
inc
fadds
in
sahf
sub
xorb
jecxz
icebp
add
sbb
lods
xchg
sub
push
scas
inc
or
xlat
popa
subb
movsb
mov
xchg
xor
sbb
test
and
imul
add
inc
add
and
jge
and
sbb
ficompl
stos
jg
popf
std
add
pop
lahf
inc
fmull
push
cmp
lret
sub
addl
scas
dec
addb
dec
or
roll
or
cmpsb
jno
inc
cltd
rolb
mov
push
sar
lret
jnp
add
popa
popf
in
jne
mov
push
add
je
pop
mov
cmp
xor
stc
adc
mov
loope
test
add
outsl
pop
je
ljmp
mov
int
jecxz
fs
movsl
and
mov
imul
out
in
loopne
inc
mov
add
push
outsb
mov
xor
or
xor
fnstenv
fimuls
sub
iret
push
pop
ret
rcrl
dec
xchg
scas
add
aaa
pop
adc
sbb
loope
rol
add
stc
add
scas
shlb
cmp
je
out
out
lret
and
push
int
xchg
mov
sbb
cmp
push
add
or
adc
loope
add
cs
test
add
sbb
lock
loop
andb
pop
add
fidivs
adcb
jg
sub
add
xchg
lahf
or
cwtl
or
push
add
sti
add
sbb
lock
out
pusha
add
repz
push
sti
adcb
or
inc
mov
loopne
adc
mov
fldt
push
add
psadbw
shrb
xor
sbb
dec
sub
adc
enter
scas
imul
je
push
and
fsubrs
int3
push
sbb
add
pop
add
adc
add
in
and
mov
or
mov
scas
pushf
orl
push
popa
push
jg
enter
cwtl
pusha
je
pop
cli
or
or
pop
xor
jecxz
add
sarb
pop
fsts
lods
xchg
xorb
lcall
or
and
jne
add
insb
mov
inc
add
shl
push
mov
push
pop
add
sarb
stos
inc
mov
jo
sbb
cmp
sub
lods
push
mov
out
cmp
and
setge
add
cld
cmp
adc
aaa
xor
fldcw
jo
popf
add
pop
fcmovnb
lret
sub
add
mulb
test
xchg
sbb
add
ljmp
shrl
nop
loop
or
imul
repnz
addr16
enter
lcall
scas
xchg
lret
pop
repnz
jge
fisttps
pop
sub
hlt
out
xchg
jmp
inc
loope
inc
pusha
add
ret
xor
dec
loopne
jle
cmp
and
pop
stos
inc
repz
push
mov
jo
add
mov
hlt
cli
xor
das
xchg
dec
dec
sub
add
aas
push
pop
add
push
seto
and
inc
aam
insb
jp
lret
xor
fldl
jmp
ret
or
sbb
or
testb
fadd
cmpl
mov
jb
pop
pop
sbb
cmp
push
inc
stc
mov
inc
xor
adc
std
stos
xchg
dec
mov
mov
cld
repnz
inc
cmpl
cmp
out
inc
xchg
push
add
jl
xchg
test
pusha
std
dec
int3
mov
pop
add
out
xorb
add
push
insb
mov
add
loopne
dec
roll
cmp
aaa
lock
add
inc
lock
mov
push
pop
fisubs
inc
push
add
test
cs
jb
fwait
pop
sahf
mov
add
popa
mov
pop
xadd
cmp
and
dec
and
movsb
or
mov
adc
add
decb
cltd
or
dec
cmp
sub
clc
jp
into
mov
mov
jge
pop
int3
pop
or
in
push
and
add
aam
push
daa
movsl
enter
mov
add
mov
add
sbb
add
cmp
mov
add
fimuls
mov
pushf
cli
push
xchg
add
scas
xchg
adc
xor
inc
lea
rcl
rolb
arpl
add
push
jno
cwtl
sar
test
push
cld
or
xor
jmp
clc
fstl
adc
jecxz
and
dec
pop
push
pop
movsb
sbb
in
add
iret
dec
fsubs
andnps
dec
adc
mov
add
or
aad
iret
ja
int3
sub
cmp
add
or
jecxz
int3
xor
push
xor
lods
and
repz
scas
jle
sahf
add
mov
test
sbb
or
cwtl
subb
pop
negl
push
lret
xor
seta
out
push
jbe
pop
sbb
cmpsb
mov
pop
loopne
xor
sub
add
daa
cmp
popa
shlb
popf
xlat
stc
jp
add
jge
shlb
daa
sub
shl
add
and
adc
lcall
es
pop
adc
cld
dec
sarb
addl
sarb
or
jp
inc
femms
shlb
jmp
xchg
sbb
call
out
and
add
rorb
and
stos
mov
jg
loope
and
icebp
add
push
sti
add
incb
pop
dec
not
add
andl
xchg
rcr
pop
mov
pop
fldln2
inc
fs
lahf
push
inc
push
mov
stos
out
or
add
dec
mov
add
pop
mov
mov
mov
arpl
fists
dec
sub
cmc
nop
mov
repz
inc
push
pop
mov
test
or
inc
xchg
xchg
stc
sbb
out
add
gs
mov
imul
out
repz
jnp
dec
or
mov
dec
int3
lock
insb
sub
sub
inc
out
inc
es
sbb
add
xor
mov
imul
icebp
add
add
cli
push
pusha
movsb
and
or
inc
pop
shll
incl
pusha
and
rorl
js
cli
dec
inc
sub
add
inc
popf
push
add
cmc
lea
out
dec
nop
add
jb
xor
iret
cmp
add
int
dec
mov
mov
add
jge
push
mov
lods
sbb
lcall
add
data16
roll
dec
add
jl
push
push
aas
fs
add
repz
shll
sub
out
and
aad
cli
jbe
mov
push
sbb
popa
inc
in
int3
cmp
jmp
push
add
pop
add
imul
testl
push
mov
xor
xchg
cmpsl
adc
lods
fmul
pop
es
and
mov
cmp
push
jg
pusha
lds
push
ret
sbb
add
add
add
in
adc
incl
jae
push
insb
mov
and
cmp
mov
test
fs
push
sub
popa
pusha
cmp
js
jnp
hlt
jo
cld
cmp
inc
data16
subb
add
mov
cmp
movl
and
add
test
add
je
jge
shll
add
gs
add
pushf
inc
mov
sub
jns
fdivrl
sti
xor
xchg
je
xchg
and
dec
repz
mov
in
add
shll
and
adc
icebp
clc
mov
add
inc
jb
scas
in
xor
es
or
fiadds
push
fwait
mov
pop
outsl
call
int3
mov
inc
mov
jo
add
adc
repnz
or
and
mov
adcb
or
sbb
push
ja
fcoml
pop
mov
es
test
xchg
jmp
sub
clc
stc
push
inc
mov
sub
xor
xor
outsl
jns
nop
push
das
stos
mov
and
hlt
lods
cli
cltd
add
imulb
jo
push
pop
loop
add
rol
arpl
dec
movsb
jle
add
bound
dec
mov
int
add
pusha
aam
xor
pop
rcrb
aas
leave
or
push
and
mov
mov
cwtl
pop
dec
nop
popl
push
mov
xor
insl
aam
push
daa
cmp
add
push
stos
neg
pusha
outsl
dec
bound
push
cltd
lods
inc
jmp
add
mov
js
push
jb
and
orb
pop
xrelease
cmp
cmp
cmp
imul
jnp
outsl
roll
xor
add
in
addr16
loopne
dec
das
std
lsl
or
xchg
pop
or
and
and
adc
jno
xchg
sub
xchg
inc
loope
sbb
lea
stc
repz
xor
cltd
scas
add
movsl
popf
pusha
outsl
mov
je
cmpsb
in
rol
xlat
add
aas
insb
adc
mov
sbb
leave
pop
fists
stos
loop
sub
stc
popa
or
ss
rclb
jl
push
scas
mov
loope
xor
fistl
call
inc
sar
jb
adc
pop
out
xchg
mov
insl
push
lock
sbb
pusha
es
mov
jo
call
mov
mov
add
cmp
dec
pop
xor
mov
mov
clc
push
out
inc
enter
adc
adc
mov
mov
das
leave
in
add
xor
gs
jmp
jae
out
in
rcrb
sti
add
mov
jmp
xor
adc
jno
notb
lds
adc
mov
les
add
stos
test
xor
lds
pop
cld
pop
lods
mov
lock
jnp
cmp
pop
in
fisttpll
mov
arpl
add
les
mov
xor
and
push
sub
sbb
mov
add
add
icebp
insl
xchg
add
jl
pop
out
mov
mov
roll
lods
sbbb
cwtl
scas
bound
scas
sub
or
inc
dec
icebp
pop
dec
iret
xlat
add
mov
jecxz
xchg
mov
mov
movsb
jle
mov
add
lret
cmp
jmp
fnstcw
lods
sbbl
bound
mov
dec
pop
sbb
std
cmp
cmc
cmpb
ljmp
cli
popl
sbb
test
pop
add
jp
push
mov
jle
mov
shl
add
jnp
add
dec
cld
aad
adc
leave
mov
adc
and
jno
pcmpgtb
mov
add
mov
leave
inc
dec
push
lret
or
stc
sahf
ret
lods
ficomps
popf
ret
cld
xorl
repnz
outsl
mov
cmp
insl
mov
add
mov
mov
inc
xor
cld
add
jecxz
mov
outsb
rorb
adc
sbb
lret
add
pop
lods
push
or
push
add
dec
xchg
and
inc
into
xor
xchg
add
cwtl
in
add
mov
rcrl
pushl
pop
lds
stos
mov
push
lar
scas
inc
loope
and
mov
mov
jmp
negb
call
push
sbb
dec
mov
mov
xchg
mov
xchg
lahf
adc
jb
sbb
add
lods
sahf
loopne
cmpsb
add
and
aaa
dec
adc
mov
push
cmc
xor
pushf
shlb
int
adc
push
lcall
in
repnz
push
mov
xor
sub
lret
mov
mov
sbb
sar
sub
xchg
ds
andb
popa
jge
out
xchg
rorl
insb
fs
cmp
jmp
sbb
sar
nop
cmp
lock
cwtl
rolb
add
aad
cmp
shrb
popf
jb
rcrb
add
or
es
lock
add
jb
inc
and
loope
sbb
xor
mov
push
jg
mov
rcll
mov
jb
adcl
mov
adc
incb
pop
sub
fadds
add
add
out
xchg
push
push
testl
or
pop
add
cltd
test
pop
dec
clc
push
sub
push
add
clc
pop
push
xchg
jecxz
jmp
pop
enter
fdivrs
mov
jecxz
mov
xor
inc
pushf
add
add
mov
imul
jns
pusha
dec
mov
dec
pop
xor
cli
and
inc
dec
test
ret
mov
or
test
ret
loopne
sbb
cmpsl
repnz
bound
push
sub
add
pop
xchg
sub
in
verw
pop
dec
rorb
fs
outsl
test
clc
imul
data16
subb
xorl
and
add
push
fdivl
add
jl
mov
inc
movsl
cmc
sbb
mov
rolb
jle
dec
jmp
xchg
cmc
xchg
jl
add
add
enter
sti
imul
adc
sbb
and
mov
pop
sbb
jg
xorl
imul
mov
mov
pop
add
lds
cmpsl
dec
sub
cmp
mov
rclb
inc
mov
cmp
aas
add
in
out
dec
nop
lcall
or
xchg
jge
cmp
inc
inc
pop
jbe
inc
pop
pop
in
roll
add
inc
and
xor
flds
pop
rep
in
pop
push
popf
jmp
jae
loope
mov
xchg
push
pop
mov
sbb
lret
push
sbb
jg
add
mov
add
or
and
fistps
sub
mov
xchg
and
dec
push
lea
inc
loop
shll
test
iret
aas
xor
stos
push
pusha
fldcw
and
dec
dec
sub
divb
add
cmp
add
test
dec
popa
mov
pusha
rcrb
outsl
arpl
jecxz
lret
std
inc
xchg
andb
dec
xchg
filds
and
ljmp
jl
add
out
popf
imul
testl
sbbl
mov
lret
cwtl
cmp
scas
data16
je
push
dec
mov
sbb
in
nop
shlb
mulb
sub
cmpsl
shlb
lock
or
add
loopne
push
dec
dec
xchg
aad
rclb
mov
add
ljmp
cmp
add
pop
push
add
xchg
aas
xchg
mov
mov
lds
iret
test
cli
and
fmull
sub
add
xlat
pop
pusha
movl
pushf
repnz
inc
pusha
ret
sub
and
inc
xchg
and
mov
adc
cmpsb
jae
pop
out
test
inc
sub
mov
scas
cld
adc
test
push
add
ljmp
les
pushf
mov
mov
sbb
sbb
out
mov
jbe
adc
cwtl
xor
xchg
loopne
mov
xchg
dec
movsb
test
mov
cmp
add
out
jle
xchg
pushf
push
insl
or
fistl
fdivs
or
add
or
loop
push
dec
add
adcb
shlb
sbb
ror
jb
adc
mov
jne
or
mov
jg
add
add
sbb
mov
push
mov
lods
cmp
std
or
dec
repz
inc
add
jl
aas
sbb
mov
nop
jns
mov
adc
enter
sbb
add
sti
movsw
and
cs
orl
xor
xchg
aad
call
cmpsl
add
and
add
push
adcb
psubd
out
div
sub
mov
in
push
add
ret
cwtl
jle
nop
push
repz
cmp
fs
add
fsubrl
lods
enter
test
pop
jl
xor
dec
in
dec
push
dec
xor
ljmp
push
push
lock
push
fisubrs
xor
adc
add
xchg
jle
or
lods
loop
add
hlt
neg
addr16
movsb
inc
faddl
xchg
loope
jns
jmp
insl
or
jl
xorb
idivb
mov
adcl
cmpsl
add
dec
shll
fstpt
scas
xchg
in
popf
sub
dec
lock
pop
out
je
mov
push
shl
aam
hlt
add
jno
cmp
jne
jae
add
pop
std
lods
das
inc
pop
push
mov
inc
xor
and
out
es
mov
incl
pushf
inc
lahf
mov
fdivrs
andb
add
call
sarb
or
sahf
sub
add
stc
xchg
cli
in
adc
add
cltd
cmp
add
cmpsb
or
out
add
fucom
sbb
loope
es
add
jne
mov
pop
sbb
xchg
add
fs
mov
add
cmp
mov
icebp
inc
mov
insl
or
cmp
stos
add
xchg
shlb
jl
sbb
stos
inc
test
mov
aam
add
dec
popf
addr16
test
dec
add
add
dec
movsb
out
outsl
mov
add
mov
or
lock
mov
pusha
cmp
pusha
mov
jne
xchg
lock
lcall
mov
orl
adc
out
test
outsb
test
insb
mov
mov
in
push
and
sbb
movsb
es
push
rolb
cmpsl
lret
out
in
pusha
into
dec
add
subl
or
jge
jo
xchg
add
fstpl
mov
add
pop
repz
sub
dec
sbb
add
scas
mov
sbb
dec
jl
jmp
mov
jmp
mov
add
pop
and
adc
insb
push
jge
aas
add
push
subb
loop
add
in
mov
dec
loopne
add
mov
lret
fildl
xor
mov
mov
xchg
dec
add
daa
add
test
dec
mov
xchg
adcb
jo
pop
add
popf
jmp
mov
bound
lret
xor
push
fsub
sbb
mov
inc
sub
idivb
cwtl
in
pop
mov
orb
cmp
sbb
xor
out
outsl
negb
xchg
mov
in
and
enter
rorb
adc
scas
add
add
cmp
negl
mov
mov
pop
dec
call
mov
mov
inc
test
sub
and
sub
sbb
pop
jecxz
cld
movsb
mov
es
imul
adc
adc
add
and
sbb
xor
sbb
sub
jno
subb
and
cmpsl
out
nop
into
adc
cwtl
add
lcall
mov
add
mov
mov
push
mov
js
mov
cmpb
mov
push
fadds
add
mov
fsubp
les
nop
mov
adc
mov
mov
pusha
stos
mov
nop
aas
and
lods
sub
pop
aam
adc
push
xorb
adc
jb
in
leave
add
addl
add
pop
mov
repnz
pop
ror
pop
push
jns
outsl
add
push
sub
jnp
mov
push
or
andnps
jg
xchg
arpl
aaa
xlat
adc
jmp
push
xchg
jo
sub
pop
cli
inc
add
cmp
aad
jns
rorl
add
sub
in
mov
mov
or
mov
aas
push
and
jg
or
add
jns
repz
fadds
pop
cmpsl
data16
sub
pop
jnp
rcrl
push
insb
call
sub
inc
adc
rcll
pop
cmc
dec
mov
xchg
inc
xchg
dec
es
out
pop
mov
fsubrs
mov
jnp
pusha
adc
mov
add
adcl
add
add
adc
inc
cmp
sub
or
xchg
jbe
stos
pop
inc
push
dec
xor
and
jae
inc
or
cs
xor
inc
jb
movsl
or
xchg
add
insl
mov
dec
addl
popa
xchg
flds
xorl
add
sub
ret
pop
outsl
fnstsw
shr
call
mov
mov
inc
mov
pop
movsb
loop
or
cld
sub
in
xor
xor
sbb
cmp
jae
xor
repnz
dec
add
enter
cmpsl
sarb
fnstsw
je
mov
or
sbb
movsb
lret
pop
mov
adc
mov
pop
sbb
jg
pushf
add
mov
or
adc
cmpb
pop
mov
fadds
mov
test
call
push
or
lret
outsb
stos
add
ja
cmp
xchg
inc
and
std
rcl
es
aaa
mov
push
adc
stc
inc
das
cmp
adc
cld
imul
add
inc
lea
mov
jno
cmpsb
andb
sbbb
dec
ror
fiadds
push
out
and
mov
jo
push
lock
call
outsb
outsl
mov
add
mov
dec
mov
js
movsb
cmpl
stc
imul
pusha
call
out
aad
and
dec
add
mov
inc
fdivp
jo
lret
sahf
stc
jns
shll
lahf
dec
test
int3
das
add
jne
add
movsb
jae
nop
into
push
mov
sbbl
dec
and
sub
pop
push
push
mov
in
ret
and
mov
subb
xlat
sub
cmp
add
das
xchg
sarb
mov
test
sbb
and
jo
mov
mov
adc
in
mov
aad
addr16
std
xchg
rolb
mov
cmp
sbb
inc
shll
and
out
add
push
mov
inc
push
mov
lret
pop
outsl
pusha
mov
iret
or
cmp
fadds
mov
add
xchg
jle
outsb
push
jl
scas
dec
mov
addb
test
mov
hlt
adc
mov
pop
jecxz
in
fisttpll
mov
add
mov
sbb
pushw
aaa
sub
andl
add
mov
dec
xchg
push
filds
scas
inc
ja
or
push
add
add
xor
cmpsl
dec
das
popl
xor
arpl
into
leave
xchg
out
adc
sub
xor
push
pop
subl
dec
add
inc
hlt
call
stos
and
test
daa
cmp
andb
dec
pop
or
ret
sbb
std
scas
in
jnp
mov
pop
cmp
and
jge
jnp
faddp
sbb
add
cmp
ret
push
loopne
shll
or
mov
mov
adc
enter
cmc
nop
cmpsl
fildl
lahf
push
xchg
jl
xchg
call
int
ffreep
shrb
cmp
pop
push
pop
es
add
incl
or
sub
add
jecxz
jae
cmp
cwtl
in
ljmp
sub
out
test
shl
pop
sahf
sub
adc
push
jno
cs
clc
lahf
push
rcr
xor
add
pop
fildll
jo
insl
dec
jnp
fcoms
adc
lcall
sub
xorb
in
pop
mov
in
adc
add
inc
cmp
sti
jecxz
sub
sbbb
xchg
mov
pop
add
lret
loopne
sub
sbb
rol
mov
jae
inc
rolb
lcall
and
jo
out
mov
mov
xor
fsubr
pop
jnp
arpl
add
push
mov
dec
popf
adc
and
or
shlb
loopne
add
inc
jbe
lods
and
add
cli
andb
add
adc
mov
xchg
ret
xor
rclb
add
dec
xchg
stc
clc
je
std
scas
nop
or
test
mov
xor
jl
xor
cmp
loope
mov
pop
dec
mov
inc
shll
add
add
pop
movsb
daa
push
add
cs
jp
push
push
or
mov
dec
and
or
and
sahf
mov
nop
sub
xor
jne
scas
jl
pusha
das
orb
fbld
sbbb
das
mov
pusha
aaa
sub
xor
mov
pop
xor
popf
push
rolb
loope
mov
mov
test
add
pop
push
push
xchg
dec
and
sub
xor
out
scas
mov
js
je
subl
adc
jmp
mov
jl
sbb
loopne
or
add
loope
shrb
fxch
int3
or
push
fildll
insl
mov
inc
in
cmp
cwtl
xchg
maxps
xchg
sub
or
pushfw
or
and
push
and
psraw
cmp
xor
sub
xor
in
orb
add
loope
push
jbe
xchg
sbb
arpl
loopne
decl
ret
push
fwait
nop
cmpsb
add
in
mov
testb
fs
int
mov
inc
shr
ret
add
sub
push
and
add
or
add
push
mov
unpcklps
mov
fsubl
cld
or
outsl
clc
int
faddl
repnz
sbb
and
push
test
mov
add
cwtl
test
adc
dec
pop
or
cwtl
or
call
mov
rcll
rcl
inc
movsb
jb
push
loop
inc
cmp
inc
pusha
mov
out
adc
push
xor
or
lds
ljmp
lea
fisttpl
sub
insl
mov
cmp
pop
enter
and
pop
push
dec
adc
cmpsb
or
call
data16
mov
stos
gs
fsub
add
and
in
jge
adc
xor
or
shlb
jne
push
mov
mov
bound
add
stos
out
adc
call
add
lahf
loopne
in
mov
mov
cmp
clc
pop
ror
xchg
in
push
sbb
add
sub
push
addl
stos
rcll
addr16
or
cmpsl
insb
imul
xchg
loop
jo
cmpsl
adc
pop
mov
ret
mov
adc
add
out
cld
test
ljmp
jg
loopne
or
adc
sahf
es
dec
loope
push
test
inc
in
bound
arpl
mov
pushl
in
adc
sbbb
add
popf
movsb
push
pop
lea
or
loope
jo
fiadds
outsl
rorl
xor
and
mov
adc
pop
xchg
sub
mov
jecxz
mov
cmp
inc
mov
add
xchg
and
add
xchg
sahf
xor
cwtl
cmp
push
cmpsb
andb
mov
pop
jns
push
dec
xlat
push
jge
shll
jnp
insb
adcb
xor
xor
inc
loopne
pop
cmp
dec
enter
mov
jle
nop
mov
call
dec
add
add
dec
das
movsl
pop
testb
dec
je
xor
imul
add
push
adc
add
ljmp
adc
loop
and
std
mov
aad
lock
cltd
fiaddl
cmp
xchg
aam
add
xchg
sbb
je
mov
imul
loope
and
mov
or
mov
arpl
or
addl
sub
das
clc
cmp
xchg
add
sti
mov
xor
test
cwtl
cmp
test
push
incl
stos
insb
lahf
add
in
sbbl
mov
aas
in
sub
xchg
fsubl
jae
daa
inc
push
pop
cmp
int3
pop
sub
call
push
test
xchg
movsb
adcl
out
je
inc
mov
paddusb
jle
stos
inc
cmp
lock
sbb
or
loope
les
fldt
dec
or
push
loopne
mov
inc
ds
push
xchg
popf
add
clc
iret
ficoml
in
pop
aam
xchg
dec
mov
js
add
cmpsl
mov
loope
inc
sub
ret
xchg
testl
mov
add
pop
cwtl
mov
mov
sbb
pusha
popf
movsb
adc
sbb
xor
imul
mov
or
call
mov
inc
cmp
inc
push
mov
rolb
sbb
add
xor
mov
jns
mov
push
test
xor
xor
and
xor
mov
sbb
in
cwtl
push
in
lcall
or
xchg
insb
xor
fldl
add
stc
les
jae
add
mov
jnp
add
popa
mov
shll
sti
cmp
jmp
rcr
in
movsb
lock
test
xor
jbe
inc
and
inc
xchg
fsubrs
in
pop
cmc
push
dec
fdiv
push
push
xor
sub
inc
jmp
add
fisubs
adc
jne
call
xchg
shlb
dec
loopne
sub
aam
cmp
fs
or
adc
fiaddl
fmuls
xchg
sub
mov
sbb
adc
fmull
push
adc
lahf
and
inc
or
push
out
xlat
cmp
repnz
add
adc
dec
and
add
pop
xor
std
add
push
adc
sarb
push
test
dec
cmp
loop
popf
andb
insl
inc
movsb
fbstp
and
pop
js
cmpsb
inc
xchg
test
cmp
rcrb
jle
push
jne
add
adc
add
xor
cmp
mov
or
insl
add
jnp
xchg
cmp
sbb
xor
imul
push
rcl
pop
dec
adc
bound
fisubl
insl
add
cmp
add
add
setnp
sub
add
xor
imul
xor
cs
sub
sub
adc
dec
mov
adc
add
arpl
ror
pop
outsl
call
lea
or
xor
xchg
and
adc
inc
insb
xor
js
cmp
xchg
je
repnz
sbb
mov
jmp
test
imul
loopne
dec
mov
rcr
mov
inc
aad
imulb
or
add
dec
stos
add
push
add
test
jle
ljmp
jp
jge
daa
dec
and
jecxz
adc
lods
push
add
in
xlat
add
cltd
stos
mov
xor
out
push
mov
mov
lcall
test
add
lods
movups
cmp
aam
lods
daa
pop
stos
addb
pop
push
mov
and
jp
xchg
sub
xor
pop
shll
addb
cmp
dec
xor
fcom
sub
add
fldt
xlat
inc
dec
adc
fsubrs
pusha
or
cmp
lea
sarb
arpl
clc
adcl
fidivs
test
mov
sarb
sub
mov
push
fadds
dec
cmp
pusha
imul
nop
jp
fstps
adcb
and
es
push
xchg
enter
dec
bound
xor
test
decb
sub
adc
test
or
ret
mov
js
sbb
adc
adc
stc
ret
and
sbb
push
pop
mov
or
inc
ret
dec
mov
test
mov
jo
jno
pop
sbb
dec
cmp
das
inc
adc
xlat
ja
and
loope
mov
adc
fcoms
inc
shlb
dec
push
sbb
jnp
mov
dec
push
andb
mov
adc
adc
cmp
sbb
push
and
pusha
add
jg
orb
mov
mov
mov
push
and
ret
jmp
sbb
inc
cvtdq2ps
popa
or
mov
fwait
or
pop
test
je
dec
cmp
pavgw
mov
call
pop
adc
xor
adc
xchg
inc
sbb
and
or
loop
xor
dec
cmp
movsb
jle
adc
xor
sub
stos
dec
cmp
movsb
and
shlb
out
adc
jno
test
xchg
daa
or
mov
out
sub
in
sub
sub
ss
loopne
rorb
push
xlat
fadds
jmp
sbb
cltd
mov
jp
imulb
push
inc
ljmp
sub
dec
add
shr
dec
repz
cmp
mov
sub
adc
ret
dec
cwtl
dec
jmp
and
pop
and
add
and
bound
repz
mov
and
loop
dec
test
fidivl
pop
inc
mov
sahf
jmp
sbb
inc
scas
loopne
inc
adc
sub
lahf
daa
addr16
cmc
ficoms
jmp
scas
gs
xchg
inc
sbb
or
mov
xchg
fwait
add
jecxz
aaa
sbb
roll
push
jno
add
xor
pop
or
or
and
inc
xchg
or
and
mov
or
cli
jle
popa
mov
sbb
pop
les
xchg
push
jge
xchg
cmp
mov
push
sub
mov
xchg
dec
sub
sbbl
sub
push
in
gs
push
cmp
lret
cmp
add
addr16
fisttpll
daa
xlat
sub
and
call
adc
and
xchg
movsb
enter
mov
and
xchg
and
jns
cmp
loopne
mov
push
sarb
ljmp
mov
arpl
adc
dec
sub
fcompl
jmp
xor
pop
or
add
lcall
stos
sbb
sti
cmp
and
xchg
sti
adcl
mov
add
test
in
aam
out
xor
sbb
sub
cmp
and
mov
mov
add
and
sbb
stos
add
pushf
pop
out
sbb
sarl
cmp
sbb
aas
sbbl
push
cmc
sbb
pop
adc
outsb
cmp
cmp
sub
lea
sbb
or
aaa
pop
inc
shl
adc
filds
inc
push
repz
aam
add
addb
arpl
sub
mov
dec
pop
leave
imul
add
test
mov
xlat
add
xchg
imul
sub
fistl
popl
js
or
movsb
test
xlat
add
and
inc
jle
add
shl
dec
insb
pop
xchg
cli
into
or
gs
cld
imul
add
arpl
add
cltd
std
cmp
outsl
cli
fiadds
ret
adc
cmp
mov
lods
incl
inc
fiaddl
cwtl
push
xor
xorps
xor
jne
or
mov
sub
daa
xchg
inc
mov
jb
hlt
xor
dec
jle
pop
iret
and
arpl
push
jl
int3
and
add
les
movsw
sub
xchg
or
lcall
jge
adc
daa
stc
pop
xor
push
and
test
fs
jbe
jmp
clc
add
xchg
push
cmc
mov
addb
jl
addl
and
cltd
nop
add
imul
ds
and
aad
inc
dec
xchg
pusha
inc
roll
paddb
mov
mov
push
and
and
and
es
add
notl
arpl
pop
popf
repnz
fistps
rolb
add
ja
outsl
jmp
mov
cwtl
loop
loope
lods
add
dec
pop
aad
scas
inc
fcomps
mov
rorb
add
movsb
xor
xchg
push
in
stc
pop
inc
sub
pop
mov
add
jge
dec
les
mov
das
movsl
mov
add
ficompl
rorl
lods
or
or
xchg
aaa
test
int3
cmc
mov
jmp
addb
into
enter
lods
flds
or
push
movsl
add
xor
aam
insb
jns
stos
jg
add
adc
repz
cmp
ljmp
dec
imul
aam
std
add
jae
adc
lahf
leave
add
sbb
jg
test
cmp
add
imul
int
cmp
jl
movsl
fmull
fildl
fstps
aaa
sub
pop
xchg
dec
inc
out
pusha
mov
rolb
add
pop
mov
sahf
pop
dec
jb
clc
and
mov
in
insl
add
dec
leave
shrl
popa
pusha
cmp
loop
imul
pop
int
xchg
in
sbb
fsts
inc
sub
mov
or
add
mov
pusha
ret
mov
xchg
xchg
scas
je
pop
sub
mov
mov
adc
mov
jecxz
jg
mov
adcl
dec
js
mov
push
inc
adc
xchg
test
lods
sahf
mov
aaa
and
sbb
adc
mov
int3
push
rcll
push
dec
cmp
xchg
mov
je
lock
xchg
pop
pop
jb
stos
enter
clc
jmp
mov
jp
inc
idivb
mov
aad
out
sbb
lea
pusha
es
and
xor
xor
test
xchg
add
push
lahf
loopne
fcomps
repnz
cmp
mov
add
or
and
or
add
adc
push
add
sti
mov
pop
dec
imul
pop
popa
sub
push
push
xor
push
andb
lods
int
push
outsb
mov
add
in
rolb
sub
ja
cmp
mov
cmp
pop
jg
lods
pop
lods
fildl
sub
mov
dec
iret
sbb
mov
add
lods
bound
fwait
mov
shrb
lock
jae
add
cmp
add
mov
idivl
pop
sbb
dec
fldt
out
fiaddl
ja
popf
pop
add
mov
jne
and
inc
dec
rcrb
stos
in
cmc
ljmp
scas
jnp
cmp
mov
scas
push
sub
shl
sub
pop
dec
sarb
call
in
hlt
sbb
leave
es
jl
cmp
fsubr
pushf
mov
hlt
leave
add
test
lods
mov
shrb
repz
sub
pop
jne
add
jb
lock
add
into
rcll
fadds
add
popa
sub
add
out
cmpsl
and
ret
bound
data16
mov
mov
pop
push
fs
sbb
insb
nop
fdivrl
nop
add
xor
in
fnstcw
ud1
and
mov
adc
sub
dec
outsb
jcxz
sbb
fildll
push
add
mov
jp
xchg
xor
verr
pop
and
int3
push
add
jmp
out
adc
push
add
insb
fdivr
loope
add
cld
cwtl
dec
lret
cmp
repnz
rclb
imul
nop
sub
pop
mov
add
inc
imul
insl
clc
rolb
pop
mov
in
int3
push
inc
addb
hlt
add
add
int3
ljmp
xor
adc
mov
shlb
xor
adc
pop
sub
movsl
xchg
aam
dec
shr
pop
sub
push
in
sbb
test
or
or
repz
xor
call
lea
add
jecxz
mov
jbe
or
roll
jo
fisubrl
xorl
les
mov
fneni(8087
jns
add
jmp
cmp
sub
adc
mov
adc
fs
cmp
icebp
cmp
cmp
repnz
or
add
test
arpl
and
push
pop
fidivs
lock
add
insl
jnp
jbe
mov
pop
mov
add
mov
iret
test
enter
push
jecxz
add
pusha
arpl
add
mov
enter
int3
mov
add
andb
icebp
movsb
add
push
sub
mov
insb
cld
push
add
fs
add
xchg
add
movb
out
sbb
clc
ficompl
vprotb
add
pop
pop
add
inc
pop
jge
in
jns
push
sub
out
mov
pop
jle
insl
and
add
mov
add
stc
cmp
fwait
aas
inc
in
nop
addr16
jnp
push
lods
rolb
cwtl
adc
loopne
sbb
xor
mov
xor
add
mov
pop
dec
ret
fbld
cmp
add
add
cmp
mov
and
outsb
cwtl
jno
add
stc
mov
or
sub
cmp
repnz
popf
pop
test
add
enter
add
sub
inc
lcall
mov
pop
sbb
fadds
bound
cwtl
xor
add
or
mov
mov
pop
jmp
add
xchg
add
mov
cmpsl
xor
gs
jbe
std
test
rolb
add
mov
fidivrl
xchg
lcall
dec
jg
cmpsl
jns,pn
aad
pop
mov
fcomps
cltd
jae
xchg
or
in
add
mov
ja
dec
sub
xlat
add
jp
icebp
idiv
enter
js
lods
ret
jg
imul
pusha
ja
jne
push
in
jp
dec
mov
les
sti
mov
pop
add
dec
aam
in
pop
add
rolb
mov
lcall
xor
xchg
add
pop
xchg
push
inc
cwtl
push
mov
lret
loopne
hlt
sbb
pop
je
mov
push
add
inc
add
stc
test
in
gs
push
jae
add
cli
mov
in
sub
dec
popf
mov
sub
in
cmpsb
add
xor
shl
cmp
pop
sbb
push
popa
nop
mov
aam
stos
cmp
add
xor
rolb
repnz
nop
sahf
push
sarl
mov
and
xor
push
cmp
and
enter
rol
push
mov
test
inc
movzbl
pushl
fsubrp
shll
push
call
cmp
jle
cmpsb
clc
mov
lahf
pop
push
and
mov
inc
sbb
sbb
in
dec
andb
add
loopne
test
popa
ds
add
lock
cmc
add
fldl
or
fildl
subl
inc
pushf
jge
jle
data16
aad
shll
loope
stos
sti
daa
filds
sahf
and
in
xor
push
hlt
mov
mov
pop
rep
sbb
mov
pop
xlat
pop
push
push
dec
fs
mov
fwait
loopne
cmovp
pop
ljmp
sub
jmp
lds
add
das
addr16
rcrl
sbb
imul
rcl
faddl
loopne
ja
sbb
push
cmp
xchg
dec
ss
ror
rcll
jge
pop
movsb
stos
sbb
adc
jne
xor
mov
add
push
mov
aam
cmpb
aas
dec
push
mov
push
push
xchg
jmp
lret
add
push
cs
imul
or
xchg
add
inc
enter
jge
mov
mov
xor
mov
pop
es
inc
push
push
mov
lcall
or
andb
outsb
outsl
pushf
sub
fadds
loop
lods
mov
int
and
jg
int3
add
mov
sub
rorl
cmpsb
pusha
or
and
jno
imul
mov
push
aad
mov
xor
bsr
aam
enter
loope
les
add
jo
push
cli
movsb
mov
insl
outsl
ret
gs
addb
xor
push
call
cmp
jl
pop
lods
push
aam
ret
stos
sub
lds
out
call
repnz
sbbl
call
add
aam
pop
add
sahf
mov
add
mov
push
cmp
mov
sbb
jb
jge
push
push
inc
jns
adc
je
in
mov
inc
mov
movb
xchg
add
sbb
add
pushf
les
add
dec
movsb
sar
cli
sub
jb
dec
repnz
repz
mov
ljmp
test
fs
pushf
icebp
sub
adc
xor
in
mov
iret
jg
xlat
add
daa
hlt
inc
jg
es
ret
push
mov
or
or
lcall
rcl
push
mov
int3
add
test
inc
orl
cmp
pop
jge
es
jb
insb
cmp
cmp
orb
push
divb
add
mov
pop
fldl
ja
pop
fildll
fwait
lahf
pop
adc
aad
push
movsl
cmpb
pop
pushf
jno
add
into
in
pop
or
lea
xor
ficomps
roll
sub
adc
add
mov
sub
or
cmp
xor
mov
pusha
jmp
out
add
sub
cmp
xchg
cwtl
sti
out
push
rcrl
sbb
xchg
mov
movsb
add
jo
inc
push
loopne
in
xchg
add
sti
add
jmp
cli
add
in
shlb
aam
xor
test
pavgw
or
fmuls
push
or
fidivrl
arpl
add
xlat
dec
fnstcw
pop
orb
add
sub
shrb
jmp
sbb
lret
sbb
mov
mov
adc
sub
scas
out
sldt
imul
push
negl
add
dec
aam
pop
sub
mov
add
imul
mov
mov
lcall
stos
sbb
and
movsb
or
xorb
push
outsl
mov
decb
sub
test
cmpb
jp
fsubr
sbbb
mov
test
lds
adc
es
sbbl
fadds
add
jb
sub
inc
repz
mov
test
xchg
add
xchg
jge
cmp
fcompl
add
bound
jle
or
in
and
adc
sub
fadd
jnp
mov
pop
jno
or
cmp
pop
inc
push
scas
in
cmp
pop
aam
jmp
inc
jo
addb
add
mov
or
push
xchg
cld
in
or
mov
jge
repnz
pop
add
adc
pop
mov
and
and
or
shlb
lods
push
cltd
mov
inc
out
stos
sub
lock
push
push
jb
mov
cmp
mov
popa
or
pushw
xor
in
jns
int
sbb
adc
sub
out
mov
into
enter
mulb
xchg
xlat
xchg
pop
cltd
testl
ret
dec
ss
add
or
icebp
sbb
inc
rolb
fidivrs
push
daa
pop
mov
rolb
arpl
add
shl
xchg
repz
xor
pop
jbe
dec
enter
dec
std
add
movsb
fmul
xchg
lods
fimull
cmp
repnz
int
push
add
and
pop
add
cmp
xor
add
icebp
sahf
add
add
das
sbb
fdivrl
js
fldcw
and
arpl
out
sub
sbb
inc
lea
jo
push
adc
aam
jo
popl
stos
mov
enter
imul
add
movsb
jo
add
lret
pop
mov
jmp
mov
fcoms
add
inc
out
popf
data16
jne
add
or
fmull
add
orb
clc
fwait
xchg
pop
insb
or
push
dec
push
add
jbe
inc
push
ret
push
loop
outsb
mov
shlb
and
rorl
out
mov
lret
popf
add
adc
sbb
xor
bound
faddl
lahf
in
sbb
test
jle
xor
subb
nop
aas
ud1
test
decl
adc
rcrb
add
stos
jmp
test
mov
pushf
and
and
sub
cld
add
mov
or
xchg
mov
sbb
int
inc
jg
repz
add
inc
test
punpcklbw
adc
or
sub
lahf
inc
sbb
ja
xlat
ret
gs
jo
ret
xor
call
scas
fwait
and
cmp
incb
js
sub
mov
leave
inc
aas
cltd
out
add
jns
jno
push
mov
add
adc
or
fstpt
mov
arpl
push
and
or
or
stos
jge
in
std
adc
pushf
fstps
jb
mov
sbb
xor
add
imul
fiaddl
es
adc
stos
push
or
nop
testb
insl
push
xchg
pop
push
movsb
orl
inc
movsb
das
fisubrl
adc
imul
sbb
sbb
pop
or
xor
lock
mov
test
or
xorl
pop
xor
ret
fmul
adc
or
and
stos
test
nop
aaa
cmpsl
ret
inc
mov
lods
mov
std
push
xchg
pusha
dec
fcomps
pop
fadd
in
lods
repnz
mov
pop
push
lock
pop
adc
inc
testl
in
jne
shufps
cli
or
mov
popf
or
cmp
add
out
ja
lds
fcoms
sub
or
inc
jne
mov
add
gs
add
pop
mov
nop
cmpsl
fidivl
sub
fcomps
xor
pushf
test
ret
add
std
stos
in
xchg
add
in
dec
push
xchg
add
mov
orl
jae
inc
jbe
add
ja
in
jo
mov
jb
and
adc
mov
stc
mov
push
xor
in
in
jge
add
cmp
loope
rorb
dec
xor
pop
lret
out
enter
cltd
sub
add
shll
fiadds
mov
jo
jecxz
adc
imul
pop
sub
add
int3
sbb
out
jmp
mov
xlat
adc
hlt
mov
pop
lret
jmp
nop
add
mov
test
lahf
mov
and
imul
daa
add
outsl
jns
xchg
sti
cmpsl
insb
add
ss
mov
push
je
add
cld
adc
loope
mov
sarl
xlat
xlat
out
add
test
add
xchg
fadds
xchg
cmp
inc
cmp
fisubs
add
cwtl
sar
sbb
add
mov
movsb
jns
out
dec
and
add
frstor
mov
lods
add
push
jl
and
jp
add
lds
fwait
int3
lret
incb
pusha
shl
orb
add
push
sbb
jae
cmovp
test
push
mov
pop
aas
ret
subb
push
add
je
orb
adc
outsb
mov
in
cs
add
inc
xchg
pop
add
outsl
das
mov
shlb
in
push
ja
mov
iret
or
outsb
mov
cltd
es
xor
movsbl
add
add
shrl
cli
pop
mov
adcl
sahf
xlat
add
mov
mov
movsb
flds
sub
xchg
pop
cmpsb
pop
xor
test
loope
mov
addl
andb
ds
add
rorl
and
inc
je
cmpb
test
stc
cmp
pop
sbb
mov
mov
jae
add
lahf
add
push
daa
popa
ds
stos
add
push
adc
or
inc
dec
pusha
and
mov
cmc
mov
add
jge
pop
daa
dec
add
dec
cmp
test
insl
movsl
cmp
imul
pop
loopne
int3
or
fistps
or
ds
loopne
add
cltd
call
mov
adc
or
ficoms
faddl
inc
push
adc
or
lods
mov
add
fisubs
add
filds
rorl
jecxz
sub
push
mov
jne
icebp
call
lods
fidivl
jns
push
add
aas
test
aam
sti
inc
jp
add
fs
imul
mov
push
mov
hlt
add
or
jmp
pop
arpl
orl
shrb
insl
lret
mov
sub
xchg
fs
push
ds
enter
xor
add
xchg
dec
pop
add
xchg
push
inc
xchg
arpl
test
mov
test
add
popa
or
mov
int3
insl
adc
rorl
cmp
jg
xor
mov
das
jb
in
dec
ss
hlt
pop
les
sbb
iret
or
mov
adc
inc
sbb
inc
out
divps
outsl
lds
add
push
fisubrs
push
nop
xor
xchg
iret
shrl
or
push
lods
mov
sbb
dec
push
push
cwtl
and
xlat
and
ds
or
sbb
add
add
sbb
pushl
stos
and
outsb
add
add
xor
adc
sub
sbb
sub
xchg
pusha
lahf
fsubp
xor
pop
cli
or
push
aad
jge
inc
push
pop
clc
jnp
ja
and
pop
popf
jb
les
lock
mov
pop
addr16
mov
imul
loope
popa
xor
xchg
sub
mov
mov
xchg
mov
into
add
movsb
lea
add
jbe
cmpsb
ja
add
jne
jb
push
adc
inc
cwtl
add
mov
mov
add
adc
lock
enter
xor
scas
add
rolb
rolb
cmpsl
imul
add
cmpb
inc
xchg
add
loop
mov
scas
mov
jbe
ja
mov
dec
add
lods
iret
add
scas
outsb
icebp
fistps
add
sub
xor
or
lods
mov
shlb
aaa
inc
pop
lds
add
ljmp
push
divps
insl
loope
add
int3
mov
sub
cmp
aas
testb
out
add
cmp
xchg
fiadds
xchg
cld
mov
mov
lahf
loop
lcall
pop
movsl
and
mov
sub
mov
flds
sub
and
test
and
insl
sbb
gs
je
in
or
lcall
xorb
stos
js
ja
add
sub
ljmpw
mov
jl
xlat
fdiv
xchg
add
jg
cmp
roll
lret
push
test
sbb
scas
sbbb
fimull
mov
int
inc
lahf
add
faddl
fiadds
push
mov
inc
lret
testb
xor
and
mov
andl
dec
xchg
test
push
ret
in
xor
sub
stos
push
or
push
fidivs
iret
mov
inc
xlat
rorb
jge
sbb
cmp
rcr
insb
mul
sbb
push
add
into
jnp
add
lret
cli
sub
bound
loopne
inc
stos
add
jae
icebp
xchg
nop
dec
and
rcrb
loope
insb
pop
int3
sbb
clc
outsl
adc
mov
add
gs
adc
ss
je
jae
sbb
iret
sbb
push
dec
pop
imul
mov
inc
dec
mov
xchg
cmc
push
scas
add
jmp
inc
sbb
and
lods
add
mov
pushf
add
xchg
movsl
int3
push
mov
fisubrl
enter
cmpsb
sub
lahf
inc
cmpsl
inc
nop
rolb
add
test
xlat
lock
add
mov
cld
jle
sbb
scas
and
pop
add
test
and
mov
inc
fwait
or
mov
push
pop
push
test
shrb
mov
jg
jno
mov
dec
cmp
xor
and
add
js
dec
out
loopne
sub
clc
and
sbb
pop
outsl
movsl
nop
cld
mov
pushf
pop
push
mov
pop
inc
pusha
push
les
add
fnstsw
xchg
bswap
imul
inc
xor
mov
mov
fdivs
sbb
in
nop
sub
sbb
and
xchg
cmpsl
add
add
repz
int
add
repnz
jmp
jge,pt
addb
es
add
mov
stos
xchg
push
jo
subl
leave
repz
add
sbb
sbb
inc
es
sub
dec
cld
inc
mov
add
flds
mov
add
scas
popf
fimull
cwtl
mov
push
add
mov
push
xlat
outsl
or
pop
loop
addb
cmp
jbe
mov
xor
add
sbb
rorl
leave
xor
std
and
sbb
fwait
in
jl
dec
inc
mov
pop
cmp
ret
mov
push
push
mov
pop
jg
fadds
inc
clc
test
jecxz
cmpsb
lcall
mov
push
stos
cmp
and
sbb
or
mov
jns
stos
lret
hlt
add
mov
je
andl
inc
push
push
popf
push
adc
insl
or
pop
test
jo
cmp
gs
and
test
ret
add
pop
dec
stos
stc
cmpl
movsl
out
repz
loopne
mov
add
pop
push
addb
push
test
push
xchg
ds
mov
pop
push
mov
xor
hlt
cltd
negl
xchg
popa
add
xchg
mov
mov
cmp
add
adc
fs
nop
leave
jae
pop
sbb
and
ja
add
push
pop
sub
adc
and
or
test
sub
mov
pop
pop
cmp
rclb
cld
test
xchg
stos
adc
je
in
add
fldcw
cli
lcall
inc
mov
cmp
jno
rorb
lds
sub
or
scas
sub
out
xchg
test
jbe
add
mov
fcomp
sti
test
sahf
sbb
pusha
add
add
inc
lret
push
fldenv
pop
adc
lds
pop
aas
out
sarb
jg
add
data16
lods
ja
jno
insb
cmpsb
add
imul
add
inc
cmpsb
mov
call
ret
sub
sbb
push
testb
jnp
jmp
test
aam
and
pop
dec
or
adc
push
addl
ds
cltd
test
pop
add
int
cmpsl
sbb
push
cmpsl
rcrb
jmp
scas
cs
or
es
sbb
ds
mov
xor
sbbl
dec
xchg
cmovge
push
rol
popa
push
sbbb
movsb
sbbb
push
icebp
mov
das
jne
lcall
sbb
popf
dec
add
fwait
push
dec
cli
add
hlt
sbb
lea
add
push
jo
lret
jle
aam
pop
or
pop
call
and
fiaddl
scas
out
neg
jo
or
cmp
lahf
add
pop
loopne
out
testl
add
js
xor
mov
fdivrl
mov
push
add
popl
jmp
inc
nop
xor
ss
dec
mov
add
mov
lods
xchg
rcr
push
cmp
push
cmp
mov
sub
sbb
dec
mov
out
pop
add
xlat
push
mov
jno
xchg
inc
pop
add
out
lcall
stos
sbb
add
push
jmp
insl
cli
lock
adc
xor
nop
in
cwtl
adc
and
scas
add
test
lahf
ljmp
push
xchg
jl
pop
lret
jno
push
lea
xor
out
xchg
add
push
push
pop
test
faddl
scas
in
add
rclb
add
xchg
test
dec
push
adc
add
jb
stc
sub
pusha
sbbl
mov
add
add
xchg
enter
shlb
xor
hlt
stos
movsl
int
add
in
and
mov
mov
hlt
call
nop
lcall
rol
jge
and
sbb
jno
mov
add
inc
fcompl
test
sub
mov
fmuls
fwait
enter
add
mov
pop
add
movsb
adcb
cmp
loopne
cmpsb
test
mov
sbb
aad
scas
xor
xchg
cmp
mov
or
aad
pop
mov
pop
add
fisubrl
shl
fs
pop
in
mov
cmp
xor
sbb
mov
push
xchg
outsb
ss
mov
push
xchg
push
inc
subb
inc
mov
sbb
add
sbb
and
in
xchg
loope
pushl
sub
add
and
pop
push
movsl
cmc
jno
pop
mov
mov
out
adc
pop
inc
add
roll
sbb
int
or
pop
xorb
insb
subl
cmp
or
clc
sub
add
mov
clc
gs
enter
or
les
xor
out
shlb
iret
xchg
add
lret
lds
xor
in
fisttpll
es
rcrb
jmp
rorb
repz
test
add
fisubl
ret
lods
push
cmp
lods
dec
add
mov
inc
test
pop
xor
sahf
loope
fadds
adc
or
and
out
add
mov
fistpll
gs
mov
outsb
pop
pushf
dec
daa
nop
mov
xlat
add
idiv
stos
nop
inc
pop
mov
loop
jne
ret
aas
mov
pop
cmp
mov
loope
data16
inc
leave
mov
add
cmp
fidivrl
cwtl
daa
jns
mov
cmpsb
andb
and
push
cmp
jns
sub
add
enter
rorb
xchg
add
leave
dec
sub
add
loopne
mov
rolb
dec
adc
cmp
mov
mov
les
loope
nop
xchg
mov
outsb
jl
inc
mov
pop
dec
ficoml
shrb
in
addb
lea
pop
add
pop
mov
jge
rol
add
pop
iret
loopne
or
bound
repz
jmp
push
enter
rolb
jo
lcall
sbb
cld
cwtl
mov
cmpb
lcall
shrb
ljmp
cmp
call
adc
adc
pop
or
shld
ret
popa
or
pushf
test
pusha
cwtl
and
lea
cs
jns
movsb
adcb
fisubs
ljmp
push
sub
or
inc
push
ljmp
or
inc
cld
rclb
add
push
lods
loop
xchg
jmp
push
fwait
stos
mov
xlat
clc
dec
aas
js
movsb
add
mov
sti
or
shr
outsb
pusha
or
add
out
lea
sbb
cmp
mov
cld
inc
mov
xchg
mov
mov
fbld
push
mov
push
cld
nop
dec
loop
add
enter
popf
adc
test
xchg
stos
pop
mov
gs
dec
add
add
xor
lea
shl
xor
ret
insl
addl
and
inc
aam
mov
add
add
add
idivb
push
xor
nop
cmpsb
fsubs
inc
add
push
xchg
sub
sbb
cmp
push
xor
aaa
add
mov
fs
jge
jmp
mov
dec
test
andb
sbbl
cwtl
dec
lret
sub
ret
or
xor
dec
mov
aas
jb
pusha
or
push
pop
imul
pop
mov
pop
int3
nop
ret
ja
addl
and
cmovo
rorb
pop
aaa
mov
mov
cmp
dec
rorl
sbb
fdivp
inc
lds
daa
inc
psrad
loop
pop
inc
or
sbb
cmp
repnz
mov
and
push
mov
sbb
jbe
fdivs
test
inc
in
add
mov
bound
add
xchg
sub
fadd
mov
ljmp
sub
and
mov
push
test
xchg
test
jns
add
mov
nop
and
rcr
in
jge
mov
inc
cmp
adc
inc
adc
mov
sub
loopne
jb
jae
add
shrb
mov
icebp
outsl
aam
movb
adc
inc
mov
rorl
lahf
adc
rcll
add
or
add
ljmp
aad
hlt
dec
cltd
add
xlat
aam
jne
in
in
xchg
bound
shl
cwtl
js
adc
and
jb
push
inc
add
sub
fisubrl
pop
mov
inc
je
sbb
mov
jo
xor
xchg
xor
ds
cltd
bound
pop
add
ja
cmc
test
insl
shr
repz
add
addr16
nop
xchg
movl
inc
test
push
pop
jmp
add
data16
aas
lcall
jns
or
mov
add
mov
dec
ja
xchg
add
mov
sbb
test
and
add
hlt
int
pop
dec
adc
add
dec
xlat
mov
movsl
pop
add
mov
outsb
add
movsb
push
xor
cmpsl
mov
test
mov
cmc
dec
ficoms
cmpsb
pop
jae
jp
mov
adc
popa
add
mov
add
filds
aad
js
movsl
sbb
add
add
aaa
pop
dec
mov
shr
loop
addl
jns
cld
outsl
add
cmpsb
stc
test
pop
cltd
sbb
leave
jno
fs
out
pop
adcl
add
add
jb
inc
jge
mov
jne
xor
xlat
mov
push
pop
sbb
jg
jp
and
popl
out
je
cmp
add
scas
out
or
add
xchg
cmpsl
aam
push
arpl
mov
inc
in
add
ja
xor
fisttps
sbb
inc
jmp
xor
mov
mov
into
push
test
pop
in
sub
cwtl
inc
sub
pop
iret
add
xchg
mov
gs
add
fs
in
mov
xchg
sub
mov
cmc
movsb
out
test
dec
pop
daa
nop
sbb
test
pushf
sub
mov
in
dec
pop
scas
xchg
inc
clc
nop
add
xchg
ret
enter
sub
fs
xor
pusha
jno
sbb
sub
or
pop
loope
test
or
jae
or
pushf
pop
jbe
pop
call
xor
pop
xor
add
or
cmp
repz
loop
add
insb
xor
dec
adc
add
popa
push
sbb
push
mov
mov
jmp
repnz
adc
and
sahf
jg
xchg
nop
add
or
ret
and
push
add
mov
inc
rcrl
pminub
pop
add
and
and
sahf
mov
or
test
je
das
and
les
fwait
mov
add
shlb
lret
imul
xor
ljmp
dec
pop
aaa
add
pop
dec
inc
pusha
int3
xchg
xor
clc
xor
jecxz
add
cmp
add
adc
ds
add
jge
mov
je
std
xor
xchg
gs
mov
mov
shll
faddl
out
orl
aas
inc
or
cmp
hlt
dec
add
mov
and
and
inc
fisubrs
bound
imul
mov
mov
cltd
orl
adc
xor
add
cmc
in
xchg
add
push
sub
cmp
incb
scas
negl
add
stos
mov
push
xor
sahf
xor
fxam
popa
inc
clc
inc
push
add
sbb
icebp
daa
xchg
and
repnz
pusha
sub
pop
dec
out
or
andl
mov
cmc
dec
test
jb
je
popa
jmp
gs
push
ret
rcl
inc
xor
add
push
push
xor
dec
cmp
loopne
inc
sub
mov
cmp
xor
dec
mov
repnz
shrl
lods
add
loopne
lods
lea
sub
ja
out
sbb
test
sbb
fldl
jge
push
nop
and
nop
jmp
xor
rorl
mov
aam
jge
sbb
cmp
pop
mov
andb
lcall
cltd
loop
add
cmp
sbb
push
andb
adc
pcmpgtw
mov
or
xorl
mov
testb
sti
pop
inc
js
call
or
dec
xchg
push
lcall
cmp
repz
sbb
xor
mov
pop
sbb
loope
add
push
dec
sub
xchg
mov
clc
and
scas
call
jno
cwtl
or
inc
mov
mov
cmp
stos
pushf
out
xor
sub
shl
cmp
movl
shr
add
push
jl
test
xchg
lea
call
add
xorb
cwtl
dec
clc
repnz
push
xor
push
dec
lock
lahf
sbb
or
jns
fsubs
into
xchg
or
cmp
add
call
dec
mov
push
mov
testl
cmc
mov
mov
in
mov
adc
mov
popf
adc
and
xchg
shr
mov
add
xor
or
mov
jp
ja,pn
mov
lock
movsl
adc
add
pop
enter
add
clc
adc
cmp
in
lock
mov
icebp
fadds
leave
sbb
jle
mov
add
loop
pusha
xor
test
add
push
xor
out
scas
cmp
add
push
add
push
popa
add
subl
sbb
lahf
imul
gs
inc
cwtl
mov
mov
jl
and
inc
push
push
es
inc
jne
add
add
cmpsb
sbb
cmp
popf
add
outsl
jbe
mov
cmp
shl
cmc
add
arpl
insl
inc
mov
push
iret
loope
add
inc
mov
push
das
in
dec
mov
add
in
mov
repnz
in
out
ja
lret
hlt
popf
jle
arpl
std
sahf
pop
sarb
test
insb
out
dec
cmp
mov
push
inc
add
push
and
mov
fstps
xchg
sbb
push
mov
inc
add
mov
out
lea
in
push
cmp
lock
dec
dec
add
mov
mov
push
mov
add
push
xor
inc
mov
shl
and
outsl
add
mov
inc
add
pusha
in
cmp
xor
pop
mov
jae
jno
leave
dec
addb
out
int3
test
xchg
fsubl
fsubrs
rcr
jmp
cld
jno
adc
jl
enter
pop
movsb
mov
and
jnp
adc
and
xchg
mov
push
lret
mov
mov
mov
cmpsb
or
add
idivl
daa
aas
fstpl
and
mov
jbe
imul
call
and
pop
sbb
mov
add
sub
fsts
mov
ja
and
or
adc
or
dec
push
or
mov
add
lret
mov
in
jbe
add
arpl
or
add
movsl
jbe
mov
jnp
pop
mov
push
xchg
fisubl
push
pop
and
in
mov
pop
pushf
xor
or
fmuls
scas
add
subl
adc
xor
adc
nop
inc
mov
sbb
out
add
in
sar
icebp
lgs
mov
push
loop
add
xchg
cmp
xor
adc
fstpt
push
ficomps
jnp
push
mov
punpcklwd
call
xor
cmp
push
or
lret
ds
cmp
dec
dec
icebp
add
mov
sub
or
xchg
es
loope
dec
adc
jo
add
cld
xor
fcmovne
call
lcall
lods
push
popf
pop
mov
sbb
sti
xchg
add
xchg
lods
dec
adc
jecxz
pop
in
sbb
scas
stc
les
add
xlat
js
sub
in
add
cmp
ds
sti
dec
sbb
xchg
mov
sahf
adc
and
scas
push
add
push
cmp
xchg
cmpb
add
mov
push
add
mov
pop
xor
dec
loop
test
test
imul
mov
cld
jae
pop
add
jg
jge
add
push
fs
cli
push
add
adc
enter
mov
repnz
push
aaa
and
jae
hlt
add
popa
mov
mov
jb
call
xchg
movsl
cmpl
pop
mov
andb
xchg
daa
add
jp
bound
out
aad
dec
repz
xor
sub
loopne
and
or
ret
mov
out
add
stos
inc
mov
jecxz
in
jns
daa
jmp
xor
or
push
cld
pop
add
loopne
add
inc
test
dec
jp
xor
clc
jl
out
push
xchg
cld
arpl
movsb
mov
cmp
add
pusha
xchg
cmpsl
sbb
iret
jg
inc
cli
pop
or
dec
mov
push
xchg
jecxz
or
dec
repz
mov
and
pop
or
adc
sub
nop
pop
js
mov
jle
jo
sbb
add
xchg
les
cs
imul
jecxz
jmp
and
adc
xchg
fistpll
push
insb
ja
test
shrb
icebp
mov
cmp
stc
mov
sbb
xor
pop
icebp
dec
push
jae
adc
inc
xlat
sub
aas
out
pop
sbb
fimull
cmp
add
dec
mov
inc
mov
sub
pop
xor
cmpsb
sbbl
push
inc
sahf
lea
dec
adc
fstps
xchg
hlt
mov
dec
sub
shll
ss
imul
call
pop
popa
xor
sub
orb
dec
inc
adc
or
xlat
ss
outsb
lret
xchg
pusha
out
daa
int
or
loopne
data16
xchg
or
push
add
popf
in
add
hlt
lock
lds
adc
push
ret
test
mov
mov
pop
das
pop
outsl
jmp
add
push
stos
sbb
sbb
loop
or
mov
dec
ds
add
push
xlat
pop
test
fiadds
mov
lock
leave
cmp
cmpsl
lahf
cmp
push
fsub
xor
in
repz
in
inc
dec
sbb
mov
sbb
popa
mov
not
pusha
or
mov
pop
mov
add
pop
push
cmp
add
loop
push
pop
pop
sub
mov
into
leave
add
jae
pop
adc
roll
addr16
pop
cmc
pop
add
shll
in
add
mov
les
push
jge
mov
add
and
or
add
pusha
sub
fs
rclb
sbb
fcomi
jecxz
enter
test
adc
jmp
stos
data16
jle
das
fiaddl
rclb
push
mov
popf
fwait
mov
mov
sbb
ret
jb
push
lret
fiadds
adc
das
pop
in
fsubrs
inc
sarb
mov
push
xchg
stos
pusha
adc
clc
inc
mov
push
sub
mov
ds
add
scas
sub
movl
and
int3
mov
lret
imul
mov
add
outsl
pushf
xor
push
jns
enter
pushw
scas
push
sub
sbb
sub
add
das
pop
pop
mov
es
rolb
pop
repnz
ljmp
inc
xchg
ja
aaa
scas
adc
ljmp
xlat
and
cmp
jne
add
push
sbb
mov
sub
fs
adcb
ljmp
mov
mov
mov
shl
xchg
mov
pop
shrl
jmp
push
and
and
add
dec
clc
pop
ja
rcrl
mov
jmp
adc
rclb
push
pop
std
dec
adc
inc
add
mov
in
jge
add
and
push
std
sbb
sbb
shll
outsb
pop
pop
icebp
jmp
popa
movsl
aam
pusha
adc
dec
stos
add
fistpll
jnp
inc
sub
cmp
mov
loope
iret
xor
adc
fwait
jnp
or
bound
adc
mov
cli
jge
ss
inc
gs
cmpsb
adc
add
outsb
mov
lds
xor
xor
aad
jno
mov
enter
or
mov
xchg
add
mov
daa
xchg
test
and
lods
push
shrb
push
ret
fisttps
push
dec
sub
shll
cmpsb
rcrb
cmp
add
fsubs
mov
inc
shr
fidivrs
out
es
ja
inc
push
mov
in
sbb
stc
sbb
mov
and
xchg
orb
enter
xchg
rcl
adc
fnstcw
cltd
lahf
add
add
push
fiadds
stos
add
dec
pop
mov
xor
enter
movsl
push
sbb
cmp
imul
bound
xchg
rorl
add
add
pop
sbb
add
add
add
es
or
orb
js
mov
and
dec
bound
pusha
inc
xor
add
lods
lret
jae
orb
fxtract
inc
aad
jo,pn
mov
add
mov
inc
sbb
sbb
push
aaa
imul
popa
sub
int3
shlb
mov
cltd
fs
leave
jo
shl
push
shll
outsb
add
xor
addb
xorps
xchg
cld
pop
rcrb
and
sarb
mov
cmp
nop
je
pop
test
add
enter
push
sbb
add
push
mov
test
mov
mov
cs
xchg
mov
lret
inc
cwtl
jne
lock
inc
fnsave
sbbl
ss
mov
outsb
fs
xor
pop
cmp
test
inc
push
pusha
pop
and
xchg
mov
adc
xchg
xchg
popf
fldenv
aaa
mov
hlt
fiaddl
in
mov
add
fwait
das
xchg
add
jnp
pop
roll
sbb
nop
inc
jb
pop
ret
ss
sbbb
cmpsl
add
iret
inc
je
jno
fldenv
notl
cmpsl
scas
add
fdivr
dec
cwtl
or
add
xchg
loopne
sbb
inc
add
mov
test
xchg
mov
dec
mov
rcl
inc
push
jle
fidivl
cmp
test
subl
adc
shll
xor
xchg
jb
fdivs
gs
inc
xchg
jb
into
add
scas
out
pop
jae
mov
rcr
push
lds
add
test
cld
pop
sarb
adc
sbb
loopne
adc
cmp
cmpl
inc
enter
fiadds
push
sbb
or
aas
fucomp
add
jp
cmp
push
shrb
cmp
push
insb
sub
subb
pushf
adc
cmp
fadds
in
movaps
pop
sbb
push
sub
add
repz
adc
xchg
dec
push
cmp
aas
add
cmp
adc
movl
push
rolb
cmp
mov
popf
das
repz
inc
add
out
and
fwait
add
outsb
sub
cwtl
jmp
adc
in
mov
nop
cmpsb
ret
je
add
adc
and
jg
xor
dec
adc
sarb
popf
inc
cmp
xchg
adc
imul
jmp
cmp
or
mov
mov
add
je
xchg
sub
out
add
xchg
sbb
pop
dec
out
adc
jmp
add
jo
mov
cmpsb
scas
adc
push
in
add
ret
std
clc
lcall
test
int
xor
int3
cs
dec
gs
add
dec
inc
mov
mov
in
mov
imul
inc
cmp
push
inc
and
push
mov
jmp
xchg
and
movsb
pop
loop
and
lahf
decb
dec
push
xchg
imul
addl
inc
xchg
loopne
aam
fs
xchg
mov
mov
adc
repnz
ds
iret
add
sub
les
mov
mov
aam
adc
ret
sub
cmp
inc
je
or
leave
mov
jne
dec
pop
fldt
in
inc
mov
and
test
imul
pop
mov
mulb
shlb
push
daa
scas
mov
repnz
ret
lahf
shlb
les
dec
sbb
call
jo
data16
add
cli
jae
ret
jmp
push
or
or
add
sub
and
js
pushf
cmp
ja
dec
ret
in
lods
push
inc
cmp
push
nop
xchg
adc
pusha
sub
movsb
loopne
sbb
adc
stos
push
xor
cwtl
mov
sub
mov
lahf
mov
inc
dec
pop
xchg
add
mov
ja
or
fidivrs
loopne
ficoml
sub
dec
mov
inc
movsb
mov
inc
jmp
dec
loopne
inc
push
sti
out
pop
cmp
gs
push
fucom
add
cmc
into
xor
rorl
loopne
sub
out
mov
clc
daa
and
and
ds
xchg
xchg
into
mov
add
rorl
in
insb
or
idiv
adc
push
nop
sub
loopne
sbb
addb
mov
int
mov
pop
shr
pop
ficomps
in
hlt
or
xchg
jno
stc
mov
add
pop
or
pusha
adc
xchg
hlt
lahf
sbbl
dec
xchg
cld
and
cld
or
or
and
add
dec
adc
lods
mov
int3
pushf
adc
pop
inc
dec
fwait
push
xchg
rolb
jbe
ja
mov
pop
mov
inc
sub
in
inc
orl
sub
lret
bound
push
add
insb
repz
add
dec
popa
call
cmpsb
addr16
and
mov
xchg
add
repnz
xchg
insb
add
imul
add
jo
lea
add
arpl
arpl
repnz
xchg
fs
xchg
mov
and
adcl
adc
cmpsl
test
and
mov
pop
cmp
adc
jg
mov
pushf
and
cmpsl
lret
faddl
dec
leave
rcrl
add
das
inc
push
fcomp
subb
pop
cli
mov
push
add
adcl
xchg
mov
sbb
add
mov
add
jle
xor
pop
add
subb
mov
mov
mov
xchg
fs
and
nop
jp
adc
ret
fs
aam
dec
add
dec
mov
jb
pop
mov
xchg
cmp
and
dec
jecxz
and
add
fiaddl
jae
testb
fisubs
lods
lahf
cwtl
and
lock
jle
add
pop
adc
mov
lock
in
add
incl
mov
cmpl
lahf
cmp
mov
nop
insb
icebp
and
addl
inc
add
sbb
es
adc
xor
leave
test
add
jno
sbb
pushf
push
jge
adc
inc
hlt
jno
dec
push
mov
add
mov
hlt
add
mov
mov
add
or
clc
mov
add
sub
dec
mov
cmp
es
mov
add
jl
push
push
mov
sbb
mov
mov
rclb
mov
js
dec
arpl
int3
pop
mov
sub
das
outsb
cmp
in
jge,pn
rcll
or
and
cmp
xor
lds
ljmp
jl
mov
xor
out
in
out
iret
mov
cmpsl
cltd
es
data16
aaa
dec
xchg
mov
and
fcompl
movsb
jns
jne
jl
cmpsb
and
dec
imul
loop
xchg
add
testl
push
nop
mov
xchg
icebp
add
adc
xchg
mov
lods
repz
rcr
in
fadd
cmp
pop
mov
in
ljmp
xchg
les
xor
int
xor
call
mov
out
fildl
push
xchg
add
push
mov
fsubl
or
sti
cmpsl
add
std
loopne
test
adc
cmp
mov
pusha
rcl
hlt
dec
xor
pop
nopl
cmpsb
jmp
xchg
fmul
cmp
fiadds
dec
jno
sub
clc
pop
jbe
push
inc
and
shlb
cmp
sbb
hlt
cwtl
adc
cwtl
pop
sbb
add
fs
cmp
dec
and
cld
in
push
out
pushf
cmp
and
fnsave
xchg
or
pop
mov
cli
jmp
subb
jb
in
adc
mov
rclb
out
mov
adc
xor
orb
mov
pop
cmovp
mov
push
rcrl
lret
rolb
stc
jae
jecxz
out
pop
das
jp
add
mov
push
testb
and
mov
leave
fadds
int3
sbb
lods
rcll
sarb
jp
pusha
add
mov
adc
push
pop
sbb
push
or
stc
addr16
mov
roll
dec
sub
xchg
adc
or
xor
lock
lcall
icebp
movsb
sub
mov
enter
repz
aaa
and
xor
out
add
dec
fisttps
pusha
mov
clc
push
je
sbbb
jno
sbb
mov
shl
std
mov
lds
sbb
mov
cli
mov
in
ret
addb
ljmp
pop
mov
and
inc
jg
add
mov
les
in
mov
mov
mov
cmc
leave
mov
mov
hlt
sub
push
test
mov
adc
xchg
push
or
xchg
les
adc
addb
add
and
aaa
add
out
mov
insl
or
test
aas
add
ja
add
pop
and
cwtl
repnz
pop
rolb
out
add
add
xchg
add
add
cld
aad
in
inc
ret
add
dec
shll
jno
add
xchg
mov
cs
push
xor
lds
mov
and
adc
xor
lock
adcb
adc
jmp
ret
stc
and
mov
cmc
aam
mov
inc
nop
pop
add
movsb
je
in
jecxz
add
inc
mov
dec
add
sbb
shrl
sahf
rolb
aas
or
add
aad
mov
scas
push
pop
repnz
enter
pop
add
icebp
inc
jns
ljmp
pop
in
mov
leave
and
pop
div
add
add
rcr
insl
les
jg
push
push
xchg
pop
fs
adc
ret
cwtl
loope
add
sbb
movsb
push
dec
mov
test
lahf
dec
aam
js
mov
add
loope
xchg
adc
cmpsb
cwtl
add
sub
sub
mov
pop
test
add
movsb
mov
jecxz
add
es
fs
fnstcw
push
jns
fs
ret
outsl
xlat
push
arpl
or
dec
sbb
mov
repz
imul
cmpsl
mov
mov
int3
and
xchg
pop
jae
call
jne
inc
pop
dec
xor
xchg
popf
ljmp
out
sub
fadds
lahf
pop
faddl
sbb
inc
ja
fmuls
jne
sbb
mov
call
inc
adc
outsl
mov
push
ret
and
or
pop
into
pop
or
andb
in
outsl
sbb
or
mov
outsb
in
add
push
sahf
imul
das
nop
or
enter
add
mov
in
daa
je
rorb
or
addb
mov
cld
test
scas
and
stos
push
xor
and
adc
cmp
pusha
mov
and
emms
stos
xchg
add
stos
add
loopne
adc
stc
mov
pushf
lock
and
add
mov
mov
lock
fiaddl
fldt
aad
pop
int3
push
int
sub
sbb
and
jl
das
mov
negb
and
adc
int3
xor
adc
xchg
inc
or
dec
push
popa
cwtl
lds
sbb
repnz
insb
push
aas
fs
add
xchg
cmp
fcoml
jns
out
push
mov
fxch
insl
dec
enter
push
push
jo
jo
or
in
hlt
pop
pusha
mov
or
and
add
scas
lahf
xchg
inc
mov
jo
or
and
loope
add
pop
loopne
sub
cmp
cmpb
add
jae
xchg
add
and
push
js
pusha
mov
loope
or
repz
pop
mov
sti
cmp
rol
test
mov
lret
mov
cltd
or
or
or
jo
or
adc
mov
ret
cwtl
cmp
xchg
xor
pusha
dec
in
mov
in
les
sub
mov
jbe
adc
jns
mov
sbb
push
cmpsl
mov
sbb
sahf
and
push
push
mov
fistl
push
adc
pushf
mov
mov
mov
add
inc
inc
adc
in
andl
adcb
sub
js
dec
jo
mov
dec
lcall
and
or
imul
les
push
add
inc
stc
loopne
lods
xchg
pop
sbb
cwtl
mov
lcall
xor
adc
mov
ret
lods
imul
pop
sub
mov
addb
add
lcall
inc
dec
mov
in
inc
push
xor
scas
add
popa
insl
sbb
mov
mov
fnstenv
int3
shll
je
cwtl
inc
mov
aas
addl
call
inc
loop
jns
and
add
dec
add
pop
add
fsubrl
mov
shll
sub
ljmp
js
daa
add
jp
ret
push
daa
pop
push
lds
push
lea
mov
clc
and
push
test
test
and
pop
int
nop
pusha
jo
jg
mov
in
jecxz
add
data16
adc
stc
icebp
add
dec
rorb
mov
stc
push
insb
add
sub
jb
add
std
jmp
adc
sbb
xor
sbb
call
or
inc
pop
sbb
sbb
bound
cltd
jo
and
add
push
push
push
mov
and
add
mov
mov
add
arpl
cld
adc
lea
andb
push
cmpsl
cs
lods
adc
xchg
mov
adc
jl
push
and
add
inc
add
fnsave
arpl
cmpb
int
loope
add
je
es
jg
sub
fldlg2
shlb
add
xchg
xchg
dec
or
inc
and
and
add
xor
sub
sub
shrl
xchg
lahf
add
push
adc
xor
sbb
loopne
mov
outsl
leave
or
faddl
sbb
add
jmp
pop
mov
sub
lcall
insl
add
jp
idivb
outsb
dec
xchg
fsub
in
pop
sbb
and
psubw
inc
sbb
pop
mov
push
jl
mov
jl
push
jo
cmp
sub
sbb
mov
or
js
sbb
sub
lds
fcoms
jecxz
inc
mov
push
jno
mov
add
mov
add
pop
cmpsl
dec
outsb
gs
add
sbb
insl
data16
int3
add
and
push
pop
rcrl
fldenv
rolb
clc
add
lahf
push
data16
or
inc
ja
mov
sub
push
sub
mov
ror
ss
jns
sahf
mov
test
xchg
and
repnz
out
pushf
fisttps
lahf
jecxz
mov
inc
js
pop
pop
adc
adc
pop
jo,pt
repnz
shll
add
mov
js
xchg
jp
add
imulb
cwtl
inc
rolb
push
lods
test
xchg
xchg
and
int
jmp
pop
jbe
jnp
add
or
shll
add
clc
dec
add
cmp
insb
stc
xorl
lods
mov
jno
add
mov
add
sub
loopne
out
or
pop
clc
les
mov
jg
pop
sub
cmc
inc
jno
mov
add
fs
mov
mov
clc
sub
push
cwtl
call
jmp
mov
and
inc
sub
sub
les
rcrb
pop
out
ret
pusha
mov
dec
lea
mov
dec
or
faddl
out
nop
aaa
mov
aad
loope
cmp
xlat
mov
mov
pop
loopne
add
sahf
loope
cmp
mov
jno
push
dec
jl
test
in
mov
stos
add
adc
stos
test
arpl
insb
cmp
push
push
pusha
mov
ret
shl
movd
iret
pop
xchg
dec
ret
inc
sahf
test
push
add
daa
cmp
sarb
dec
lret
push
mov
inc
adc
or
jp
jge
scas
hlt
ret
sbbl
lods
aas
jmp
leave
xor
push
std
mov
psllw
clc
loopne
mov
and
cld
mov
repnz
cmp
xor
jmp
cmc
adc
syscall
pushf
sub
popf
pushaw
and
stos
adc
lods
jle
loop
int3
jmp
pop
repnz
push
stc
sbb
add
test
xchg
and
mov
fistpll
mov
jo
lods
cmp
loopne
pop
std
jb
out
cmp
loopne
sbbl
cmp
loope
imul
pop
mov
pop
fcoms
bound
popl
adcb
test
mov
or
sub
dec
add
mov
add
dec
in
push
cmp
mov
ret
scas
mov
or
in
je
nop
bound
pop
pop
mov
and
add
mov
testl
dec
pop
rol
test
inc
mov
add
add
test
cmp
shlb
pop
stos
jo
inc
popf
adc
or
fldt
aam
data16
mov
das
jae
add
clc
repnz
js
jg
adc
test
and
inc
xor
dec
adc
js
adc
fscale
out
push
mov
dec
xchg
and
dec
popf
add
in
pusha
test
or
aam
mov
je
pop
dec
adc
jb
inc
pushf
jo
int3
jns
pop
rorb
add
into
push
sbb
imul
mov
cmp
xchg
adc
dec
inc
leave
add
jge
adc
sahf
pop
in
inc
push
sub
shlb
and
pop
inc
xor
pop
aas
scas
dec
addl
bound
jg
loopne
cmp
push
lcall
mov
push
adc
sbb
fldenv
add
inc
and
hlt
mov
ds
fsubrs
test
mov
sbb
sub
sahf
ljmp
repnz
lcall
lock
cmp
outsb
add
or
jg
adc
in
inc
fstpt
sbb
js
out
movsb
add
sbb
jbe
add
fnstsw
and
add
lock
test
sub
and
jl
repnz
clc
in
add
add
dec
das
adc
jno
clc
push
cltd
dec
testl
add
sbb
iret
sahf
sub
sub
pushf
and
call
mov
and
adc
pop
add
sub
sbb
add
cld
rorb
or
add
insb
inc
out
add
dec
and
fsub
lret
inc
mov
push
mov
in
test
xchg
xor
xor
sbb
fbstp
push
cmpsb
add
lods
push
inc
add
fsubrl
mov
dec
push
test
ja
addb
cmp
into
push
repnz
enter
lods
movsb
and
sub
pusha
sbb
jne
sub
mov
dec
mov
lret
leave
mov
scas
jl
xchg
hlt
rolb
daa
nop
add
sub
mov
lds
or
pushf
mov
lods
adc
xorb
jb
or
cli
jne
inc
jae
push
inc
in
nop
jmp
loope
dec
ret
ffreep
jo
jns
imul
push
pop
xchg
notb
dec
add
negl
hlt
inc
dec
cld
add
xor
int3
cmp
mov
inc
lret
or
mov
rorl
in
leave
push
sarl
dec
rclb
and
add
adcl
insb
push
push
movsb
xchg
rorb
mov
jo
and
dec
test
mov
cmpb
lock
mov
fwait
hlt
lods
shlb
adc
repz
inc
and
mov
jb
cltd
loopne
imul
adc
mov
sbb
xor
dec
mov
fsubp
and
lods
mov
xchg
dec
call
add
lods
mov
fsubl
mov
sarl
jmp
orl
in
jns
fcomps
push
dec
lret
shll
xchg
ds
out
inc
cmp
mov
dec
sbb
std
cmpxchg
push
in
jne
dec
inc
and
add
pop
imul
dec
xchg
adc
push
sub
or
dec
mov
adc
fdivr
pushf
mov
adc
xor
sbb
fnstsw
and
xchg
outsl
jmp
pop
fistl
push
jl
sub
add
insb
sahf
adcb
movsb
xchg
pop
push
lahf
hlt
jb
mov
lcall
loopne
or
mov
pop
adc
push
popa
inc
jle
iret
loopne
dec
add
scas
xchg
jp,pn
orl
and
push
add
enter
sub
int3
sub
mov
cwtl
pop
mov
add
dec
and
rcl
adc
cld
orb
test
add
inc
mov
fs
stos
jne
mov
imul
ficomps
adc
nop
mov
aam
ja
jne
mov
imul
sbb
inc
outsb
out
push
and
inc
dec
pushf
push
dec
push
xor
xor
fdivrs
jo
mov
cmp
mov
mov
push
or
add
addr16
int
test
shr
xorl
pop
xchg
jne
push
cmp
add
arpl
mov
and
fisttpl
jae
jo
inc
cli
add
std
add
test
mov
xchg
in
inc
xchg
ds
pop
sub
incb
push
add
in
jo
add
cmp
and
dec
call
mov
adc
mov
insb
xchg
add
jg
xor
fnsave
add
xchg
xor
stc
or
cmp
sti
and
lret
push
inc
mov
lock
cmp
and
fs
mov
sbb
pop
mov
mov
push
add
cmp
sbb
and
aaa
cmp
and
mov
add
shll
sbbl
rcl
pop
pop
sbbl
xorb
jns
sbb
jns
test
add
inc
push
out
out
pusha
rolb
stos
xchg
ljmp
mov
hlt
mov
enter
sub
jl
push
fimuls
les
stc
adcb
sbb
add
std
pop
popa
cmp
insb
adc
add
enter
call
mov
mov
jle
and
and
or
inc
insb
add
aaa
lcall
add
add
std
cmpl
dec
rorb
cld
repnz
nop
or
dec
pop
or
mov
pushf
pushw
test
mov
inc
mov
lods
in
add
jp
stos
and
stos
jno
pop
push
inc
inc
iret
scas
mov
cmp
mov
fsubr
inc
pop
insl
adc
jo
push
rolw
test
out
cwtl
sbb
adc
xor
push
into
cld
add
sub
jge
jb
dec
addb
add
inc
jno
inc
test
push
ja
in
mov
push
aam
and
push
jo,pt
int
push
or
xor
mov
rcll
inc
iret
stc
aas
pop
adc
pop
rcl
mov
and
test
add
pop
jnp
sub
pop
inc
daa
inc
sbb
in
push
fbld
adc
mov
sbb
adc
dec
mov
sub
push
in
dec
std
gs
pushf
js
cmc
mov
add
adc
xchg
xor
pop
cwtl
std
cmp
mov
mov
subl
pushf
and
rcr
stos
mov
dec
test
clc
pushf
push
ja
xchg
int3
mov
push
sbb
mov
in
inc
push
xchg
movb
xlat
xchg
fwait
pop
add
sbb
pop
push
jne
sbb
sti
fisubs
push
adc
xor
or
inc
jge
push
imul
pushf
insb
jmp
mov
adc
or
inc
add
enter
or
and
cmp
loopne
sbbb
pop
push
mov
mov
sub
mov
sbb
inc
es
popa
jge
or
push
popa
dec
push
xchg
and
scas
cmp
in
xchg
or
rolb
shrl
push
pop
inc
mov
dec
cltd
add
push
dec
xchg
mov
sub
out
fs
mov
dec
adc
hlt
in
sbb
scas
adc
scas
sbb
xor
js
loopne
and
pop
mov
ror
push
enter
and
pop
push
sbb
test
xchg
jge
shl
xor
add
or
inc
adc
mov
fdivl
mov
cmp
enter
and
xchg
icebp
stos
leave
push
loop
add
dec
shl
mov
xchg
inc
addl
mov
mov
add
jb
add
mov
fdivrs
inc
nop
mov
xchg
mov
addb
jb
xchg
push
pop
cmp
add
mov
sbb
inc
pop
shrb
lahf
sahf
dec
push
loopne
ss
int3
mov
nop
fcoml
stc
fisubs
js
mull
sbb
pop
xor
mov
or
and
push
sub
lret
pusha
adc
add
fs
xor
mov
sub
lret
adc
stos
add
sub
push
leave
arpl
jmp
clc
or
sub
cmp
mov
and
add
adc
jb
hlt
sub
sbb
xchg
pop
dec
outsl
test
mov
inc
sbb
add
pushf
xchg
mov
les
inc
add
xor
or
push
and
fildl
jnp
mov
sub
jns
iret
push
add
pop
addr16
pop
and
rclb
jge
int3
add
movsb
adc
jp
and
pop
jecxz
movsl
inc
pop
test
lcall
push
addr16
movsl
cmp
mov
adc
lock
xor
sbb
or
shrb
stos
fiadds
lods
arpl
pop
pushf
mov
dec
add
xor
mov
and
cmpsl
add
jb
sub
cmp
jae
inc
push
pusha
add
sbb
bswap
cwtl
lds
mov
cmp
sahf
and
mov
add
dec
ret
xchg
pop
clc
in
orb
stc
push
mov
lods
push
lret
nop
scas
xchg
mov
ds
add
insb
mov
mov
cmp
jg
mov
inc
and
je
dec
fdivs
mov
test
or
addr16
out
enter
nop
imul
sarb
cld
call
mov
mov
add
adc
mov
clc
pop
enter
inc
push
jbe
push
daa
mov
push
mov
js
loope
inc
inc
xchg
sbb
addr16
in
mov
ret
sub
mov
add
fisubl
xchg
xor
outsb
ss
movsb
xchg
loopne
jg
or
mov
and
jle
push
xchg
dec
addb
pop
cmp
in
xor
add
or
xor
xchg
sub
pop
bound
pusha
adc
mov
jl
push
shr
pusha
ret
sbb
fbstp
mov
xchg
and
call
push
mov
dec
popf
es
mov
dec
sbbl
mov
xchg
in
dec
fwait
push
js
movsb
and
inc
and
sub
leave
repnz
repnz
dec
mov
mov
jnp
aam
insb
ret
pop
je
andb
cmp
hlt
xchg
ja
inc
adc
cwtl
jno
sbb
ljmp
fidivrl
xchg
mov
les
es
jb
jae
or
or
test
out
outsl
je
pop
imul
hlt
mov
es
outsb
pop
pusha
xchg
iret
test
in
les
push
faddl
pop
xlat
xor
outsb
sub
and
jo
add
xchg
xchg
inc
push
sub
add
and
and
je
pop
mov
pop
rcll
sub
loopne
scas
mov
es
add
jne
in
xchg
clc
mov
and
jne
push
les
inc
jno
cwtl
insb
aam
lahf
mov
xchg
add
in
call
not
loop
add
xor
sbb
xor
pop
add
or
inc
dec
test
mov
test
pop
mov
pop
fisttpl
addb
xchg
je
andl
pop
adc
sbb
jecxz
mov
xchg
enter
mov
outsl
xchg
push
rcll
add
dec
and
icebp
xor
add
andb
mov
mov
add
xchg
fisubs
and
mull
dec
int3
jb
lret
add
shlb
or
dec
rol
test
nop
add
push
add
negb
push
leave
xchg
xchg
lods
divl
enter
sbb
sub
sbb
fs
xchg
cmp
mov
xchg
std
shrb
aas
sbb
lds
mov
push
mov
push
xchg
mov
add
push
cld
cs
push
shr
repz
mov
inc
xchg
add
lods
dec
xchg
mov
int
subb
ret
lods
pushf
jl
or
mov
mov
add
lret
dec
std
jl
adc
sub
pop
or
les
fisttps
push
ret
test
adc
fadd
add
add
sub
fisubrl
loopne
jae
or
cmp
push
popa
ret
fmull
push
add
shrl
push
fisubl
push
pop
adc
stos
pop
add
jmp
add
mov
pusha
xchg
in
scas
add
outsl
aam
xchg
addl
fimull
int
sbb
lahf
pop
xor
pop
hlt
enter
mov
push
mov
test
arpl
fistpl
movd
push
push
in
adc
mov
int3
sahf
inc
sahf
jb
in
dec
mov
test
adcl
movb
fs
or
imul
pop
daa
fwait
data16
cmp
cmp
lahf
je
cmp
xor
mov
xchg
inc
jecxz
insb
lret
rcll
add
cli
sahf
das
jb
jnp
aam
in
push
dec
mov
cmp
stc
movsb
inc
or
mov
cmp
dec
add
mov
adc
cmp
xchg
daa
sub
fcoml
adc
cmp
les
arpl
push
test
dec
pop
mov
jnp
in
pop
pop
dec
pop
mov
adc
push
in
add
sbb
pushf
stc
xor
lock
add
add
mov
sbb
xchg
sbb
add
cli
cmp
pop
mov
fiaddl
push
cld
mov
add
push
jo
push
push
data16
add
jae
iret
and
mov
imul
scas
sub
stc
and
jmp
in
inc
pop
sbb
cmp
cmp
cmp
ja
jb
mov
mov
push
xchg
cld
lea
jmp
jb
es
cli
adc
iret
add
xor
ret
fwait
add
ja
pushf
inc
cs
stos
mov
push
lea
jns
cld
dec
xor
nop
sub
popa
rclb
je
lea
adc
mov
addr16
xchg
add
loopne
xchg
cmp
sbb
mov
sti
rcrl
daa
cmp
dec
jl
add
stos
or
add
out
sbb
das
add
in
and
add
and
ficoml
incl
sbb
xchg
shrl
add
das
lods
inc
mov
cltd
add
out
repz
or
inc
popf
sbb
aaa
mov
and
sbb
fcoml
dec
push
sahf
pop
pop
popf
ret
into
rclb
movb
call
aas
pop
mov
add
imul
xchg
mov
pusha
cwtl
arpl
lock
jae
sbb
xchg
add
fsubr
push
and
test
add
push
jns
add
repnz
xor
push
mov
mov
cwtl
adc
stos
fwait
add
sub
test
mov
mov
std
inc
mov
mov
mov
or
xor
mov
inc
call
inc
and
js
inc
jnp
dec
movzbl
add
loope
movsb
cld
lock
adc
jle
jbe
rclb
add
jmp
push
add
jmp
ja
xor
sbb
sbb
dec
bound
add
cmp
scas
xchg
testl
call
loopne
cltd
add
inc
mov
nop
pop
mov
push
and
popf
ja
dec
push
cmpb
add
fmul
xor
add
and
in
inc
mov
dec
and
mov
ljmp
sbbb
xchg
adc
inc
nop
mov
inc
dec
or
fcomps
loop
mov
rolb
addr16
test
push
repz
js
rorb
jl
pop
add
add
int3
out
aad
push
ja
jno
lods
pop
or
jo
negb
adc
inc
jne
or
nop
xchg
test
subb
fwait
pop
add
rdpmc
sti
inc
je
or
pushf
add
mov
cmp
popa
ja
xor
fildll
adc
adc
push
lds
jno
add
test
popl
dec
aam
in
sub
dec
mov
adc
iret
add
dec
mov
push
arpl
mov
push
pusha
push
sarb
dec
add
out
cmp
hlt
jno
xchg
jo
and
jl
mov
in
dec
and
je
sbbb
repz
and
dec
lret
inc
cmp
incl
in
sub
adc
adc
into
and
f2xm1
xchg
rolb
xchg
negl
sub
aas
add
push
adc
sbb
ret
jbe
sbb
push
leave
repnz
sbb
cs
cmpsb
cli
es
inc
nop
adc
mov
xchg
es
push
cli
inc
xor
or
sbbb
enter
ret
es
mov
add
lods
xlat
jb
divl
add
or
add
jnp
std
sbb
and
push
mov
dec
xor
xchg
mov
jge
dec
or
mov
mov
call
push
js
dec
inc
cmp
xchg
inc
sub
push
xorb
test
lret
fldln2
into
add
fdivrs
push
sbbl
out
push
mov
jp
idivb
push
mov
and
mov
ret
in
inc
mov
mov
cmp
pop
add
imul
mov
movsb
cmp
pushf
add
or
sti
sub
sbb
cmp
jbe
dec
stc
push
addb
mov
bound
jb
movsbl
dec
leave
inc
pop
nop
andb
ds
divb
xchg
or
mov
pop
mov
jp
jnp
loopne
pop
ficoms
push
jbe
ljmp
dec
popa
aas
adc
cmp
shll
and
sub
push
test
dec
add
mov
js
sub
outsl
or
mov
mov
inc
mov
imul
ret
sbb
loop
sbb
mov
sbb
into
out
andl
pusha
cmp
xchg
fsubl
mov
pop
movsl
push
pushf
adc
jle
jo
in
dec
sbb
mov
dec
cmpsl
cli
ljmp
cmp
lret
arpl
pop
add
push
mov
repz
cmp
push
ja
mov
jno
add
and
xor
int
rcr
add
dec
fsubl
dec
and
push
push
or
ret
imul
test
sbb
inc
adc
adc
pop
add
xor
xchg
xchg
push
test
pop
jae
xor
mov
adcb
or
push
push
xor
push
cwtl
or
push
jne
push
pop
lahf
xor
pop
test
push
int3
lods
rcrl
ret
out
cmc
inc
xor
idiv
add
cwtl
push
and
popa
dec
dec
jmp
jae
movsb
pop
push
lods
faddl
jbe
or
and
mov
add
sub
add
add
loop
outsb
dec
nop
or
mov
inc
mov
cld
repnz
add
lret
call
xchg
add
rcll
lock
daa
sti
xor
in
mov
rcl
push
mov
add
fdivrs
jbe
sahf
pusha
add
xor
in
xor
and
mov
inc
mov
icebp
xor
push
mov
lea
sarl
mov
and
jge
xchg
jmp
xchg
sub
shlb
and
es
das
rcrl
add
shlb
push
jb
es
cmp
fs
pop
xor
pop
adc
lods
push
test
movsb
clc
jl
inc
add
out
jmp
push
fildll
add
xchg
fcoms
outsb
addr16
lret
je
xor
cmpsb
fisubrs
dec
push
push
addr16
ja
data16
and
arpl
fdiv
mov
jb
js
add
icebp
or
mov
es
data16
mov
mov
lock
rcrb
mov
js
in
dec
push
xor
das
and
out
add
jno
fs
es
pop
jnp
add
int3
lcall
mov
lahf
xchg
mov
mov
fwait
jnp
add
cwtl
stc
punpckhdq
aas
sti
dec
fucom
jl
ljmp
mov
andl
and
sub
and
pop
sbb
fcompl
jae
inc
les
shll
mov
int3
insb
hlt
add
fcom
lds
xchg
mov
jg
add
inc
bswap
dec
mov
mov
sub
add
mov
mov
mov
inc
enter
sub
add
inc
lcall
xor
push
test
and
int3
imul
in
or
dec
aas
add
movsb
dec
push
dec
imul
add
idivl
xchg
or
mov
stos
pusha
xchg
daa
and
stc
faddl
in
lods
in
jne
xor
test
ret
movsb
pushf
imul
dec
xchg
icebp
cmp
or
mov
mov
xchg
mov
inc
leave
aad
mov
and
mov
js
mov
ss
dec
add
jl
outsb
xor
pop
and
cs
loopne
push
faddl
cld
adc
test
adc
loopne
roll
sbb
je
pop
or
xor
xchg
outsb
mov
push
enter
out
mov
jmp
test
push
push
push
aas
insb
inc
inc
adc
and
add
lcall
movsl
enter
popa
in
push
sbb
mov
xchg
jp
jo
loopne
add
mov
fmuls
add
outsb
ljmp
xor
icebp
aam
call
adc
enter
call
ds
dec
push
xchg
je
je
mov
call
mov
imul
mov
lods
jns
nop
vpmaddwd
add
and
add
or
std
add
adc
inc
hlt
enter
add
inc
push
add
cmpsl
mov
add
les
call
mov
pop
or
lods
adc
loop
jnp
popa
jle
and
jb
jecxz
bound
or
addl
mov
imulb
pop
sub
addb
push
cld
sub
jmp
push
test
inc
xchg
mov
bswap
cmp
loop
jp
jbe
and
jne
or
jbe
adc
add
lret
push
adc
test
inc
inc
in
sub
imulb
lahf
push
lods
fs
mov
cmpb
cmp
sbb
icebp
pop
outsb
fst
cmp
or
and
mov
push
and
out
push
fsubrl
leave
push
shl
and
or
test
repnz
insb
add
fcoml
imul
jno
add
cmp
dec
adc
dec
and
cmp
mov
mov
mov
or
sbb
push
sbb
xchg
test
lds
push
mov
daa
sbb
jb
inc
push
jae
fwait
nop
sub
add
mov
rorb
pop
nop
aaa
in
sub
out
sub
and
iret
rorb
push
add
add
int3
pop
stos
jo
add
repz
rcl
xor
cmp
insb
mov
jae
adc
xchg
push
iret
and
pop
testb
inc
cmp
xchg
loopne,pt
addr16
lds
decl
sub
or
mov
xchg
and
cmpsb
push
dec
xor
cmc
ret
cmp
mov
add
roll
aaa
pop
cmp
fs
movsb
and
xchg
pop
adc
add
xchg
loopne
lods
adc
push
inc
cmpl
int3
lret
or
cmp
nop
xchg
cmpl
popf
nop
and
mov
inc
syscall
std
jo
xchg
xchg
and
into
dec
mov
pop
jge
je
add
enter
xor
dec
add
aad
or
dec
cltd
stos
dec
lret
add
bound
cltd
xor
cmp
jne
or
and
push
repz
jno
push
scas
mov
mov
add
inc
pop
sbb
add
aaa
call
add
push
ljmp
or
ret
pop
add
jecxz
sub
out
mov
popa
ret
inc
fs
rorb
add
scas
pop
push
sti
shlb
ret
xorb
sbb
add
mov
out
lahf
lret
sti
bnd
jp
inc
and
mov
adc
adc
mov
sahf
mov
dec
dec
push
nop
mov
jnp
popa
addb
ss
add
sub
xor
popa
cmc
arpl
rol
repnz
pusha
cmp
or
in
out
xor
mov
sub
ret
add
aas
loope
xor
cmp
add
sub
add
into
inc
gs
pop
push
xor
jmp
js
fwait
or
ljmp
loope
std
movsb
mov
and
fs
xchg
sub
aam
mov
lcall
bound
inc
cmp
or
push
shrb
xor
cwtl
test
sub
sub
jo
push
mov
nop
push
adc
pop
xchg
push
sub
stos
jg
mov
or
imul
adc
pop
add
sbb
xchg
popa
xlat
ds
imul
push
fnsave
imul
add
sub
mov
in
and
or
call
rolb
xchg
sub
adc
pusha
adc
xor
stc
sub
data16
push
test
xor
xchg
pop
dec
pshufw
or
mov
adc
mov
nop
xchg
inc
fiaddl
mov
push
push
push
add
lods
add
adc
jg
cmp
and
fs
rorb
fsts
and
cwtl
je
nop
in
ret
aas
sti
jg
or
out
inc
fs
repz
sbbl
mov
or
sub
adc
and
pop
lods
hlt
pop
fbstp
in
cmp
push
jle
sbb
clc
xchg
adc
add
lods
xchg
or
in
rclb
jne
add
lcall
vmovaps
sub
xchg
or
mov
mov
ret
loope
pop
and
push
inc
test
ret
sub
mov
scas
push
and
sahf
and
xchg
test
mov
add
sbb
or
fisubrs
fildl
xchg
mov
mov
inc
pop
push
loope
add
sub
ficomps
add
stc
ret
jg
add
push
add
add
ss
subb
cmp
fnsave
jns
into
loop
sti
jecxz
sub
cs
arpl
ss
movsb
xchg
outsb
xchg
add
imul
outsl
rol
test
mov
pop
and
xchg
addb
mov
popl
shrl
inc
push
ret
in
dec
decl
cmp
movb
inc
jmp
cmc
pop
mov
xchg
fwait
mov
rcr
mov
mov
add
or
mov
adc
sbb
fisubs
faddl
icebp
sbb
lods
jbe
test
mov
pop
js
pop
les
push
jle
push
lods
jmp
mov
cmp
cwtl
cld
and
push
mov
test
es
popf
insl
add
pop
mov
or
imul
and
xchg
push
add
jmp
xor
fadd
filds
iret
popf
adc
sti
sub
push
pop
cmp
or
push
push
daa
pop
cwtl
out
cmp
icebp
add
push
sbb
outsb
adc
shlb
mov
mov
add
or
sbb
pushl
stos
sub
xchg
pop
add
push
gs
sbb
adc
add
add
js
imul
mov
es
in
xor
sub
idivl
sbb
mov
popf
add
mov
adc
adc
loope
xchg
jb
mov
hlt
jae
mov
shll
add
dec
add
fs
push
mov
fwait
dec
xor
into
pop
call
imul
push
cld
arpl
xchg
cmp
xor
mov
ss
mov
frstor
outsb
rolb
mov
and
and
mov
adc
add
mov
adc
push
dec
cwtl
add
stc
xor
or
call
inc
and
xor
aam
dec
push
aam
jl
jbe
xorb
adc
cmp
mov
loopne
lock
movsb
xchg
inc
nop
sbb
mov
ret
pop
or
adc
add
addr16
or
clc
push
xchg
pusha
test
or
add
fdivr
push
mov
loope
sub
icebp
mov
out
outsb
sbb
lods
loope
sbbl
dec
call
sub
pop
fidivl
or
incl
and
imul
mov
sbb
mov
in
fstps
dec
lock
jp
addr16
jge
repnz
or
pop
sti
aas
add
adc
call
pop
jns
xor
pop
nop
adc
pop
pop
dec
mov
mov
mov
xor
cmc
pop
loope
pop
imul
dec
mull
lds
jmp
insb
xor
lcall
cmp
inc
lret
push
sbb
shl
setne
push
add
subb
add
subb
sub
mov
push
push
hlt
mov
xor
and
jbe
lret
jl
repnz
stc
pop
mov
nop
sbb
pop
dec
aad
test
lret
test
pusha
mov
add
addr16
and
add
insl
push
add
sub
xor
nop
dec
gs
cwtl
lods
and
or
roll
bound
mov
add
jb
xchg
sub
push
sub
pop
jge
pushf
mov
add
push
fbstp
adc
testl
push
cmp
dec
shrl
mov
dec
std
add
leave
cmpsb
sbb
nop
xor
sub
adc
scas
mov
lret
sub
pop
test
subl
inc
je
addl
mov
mov
shrl
shl
or
pop
push
lock
cmp
fcoms
arpl
shl
xchg
dec
incl
and
inc
lods
in
pop
add
lcall
add
faddl
inc
adc
cltd
cld
icebp
adc
dec
dec
xor
inc
cwtl
add
scas
addr16
imull
add
push
cld
testl
push
xchg
test
inc
lock
jne
imul
sahf
int
jae
mov
in
mov
leave
inc
outsb
enter
popf
rep
andb
push
or
inc
adc
lcall
arpl
push
pop
dec
mov
sub
lods
insb
jl
mov
aas
and
adc
aas
push
mov
lret
loope
and
sub
adc
or
loopne
xor
push
in
or
lcall
inc
dec
and
add
and
lds
dec
mov
rcl
ds
out
add
repz
add
fs
mov
jnp
add
das
rol
stc
out
adc
cmc
ret
test
and
push
xchg
and
pop
mov
pop
push
inc
int3
push
and
sub
mov
je
andb
jbe
in
aas
and
sub
pusha
fmull
sbb
fnstenv
push
mov
push
xchg
cmpsl
add
lret
addb
lret
in
daa
repnz
ljmp
mov
adc
add
mov
sub
pusha
repnz
add
dec
pushf
and
mov
test
jb
arpl
push
pop
pop
add
jle
cmpsl
out
or
sbb
sbb
pop
nop
int3
enter
inc
jnp
movsl
int
out
daa
or
or
add
sub
sub
loope
mov
sub
cmp
cmpsl
jo
ret
adc
popa
sbb
aam
adc
les
or
sarl
dec
js
cmp
sarb
jg
inc
stos
out
mov
addr16
test
pushf
dec
out
ds
pop
ret
pop
std
jnp
test
add
mov
add
and
mov
int
out
add
cmp
and
sbb
adc
fcmovb
mov
arpl
mov
cmp
shlb
fdivs
adc
ja
test
lahf
xchg
testl
sbb
add
mov
stc
scas
cltd
dec
add
cmp
inc
in
sub
pop
cmp
add
fiaddl
cmp
lret
jo
ja
push
dec
lods
enter
jge
xor
mov
js
mov
mov
cmpsl
adcb
ficomps
pop
adc
enter
lods
out
rolb
add
dec
xchg
sbb
xchg
pop
add
pop
popf
pop
pop
or
and
lods
mov
in
xchg
mov
mov
cmpsl
add
dec
sub
sahf
push
inc
imul
repz
ret
inc
sub
mov
xor
add
or
lret
dec
test
shlb
mov
sbb
sub
ret
fistl
xor
test
lret
stc
and
cmp
les
dec
test
or
in
jg
add
into
in
cld
and
mov
cmp
scas
test
or
adc
cmpsb
and
inc
mov
add
xor
jge
xchg
add
arpl
cmp
ret
roll
lret
pushf
adc
sub
xor
jbe
incb
es
mov
xchg
cmp
jmp
cld
shlb
adc
imull
or
ret
jg
out
mov
mov
lods
or
jmp
add
inc
gs
pop
mov
adc
add
add
add
inc
je
or
push
mov
dec
mov
add
and
repnz
or
mov
mov
dec
cmpb
shr
mov
pop
pop
enter
cmp
mov
les
adc
insb
test
sbb
fbld
jl
pop
bound
hlt
jae
imul
nop
inc
inc
mov
sahf
in
insl
js
stc
mov
insb
inc
popa
out
enter
stos
jb
cwtl
dec
pop
push
pop
sub
sub
orl
lahf
xchg
dec
mov
pusha
mov
adc
push
or
push
inc
dec
inc
iret
gs
push
lock
lret
dec
sarl
inc
dec
xor
add
inc
sbbb
xchg
push
pop
pop
adc
loopne
fcoml
cltd
add
push
sub
jne
xchg
or
fdivrs
fs
repz
inc
xchg
cld
lret
stos
sbb
jae
push
ss
jmp
add
das
add
and
push
sub
cwtl
dec
xor
sbb
rolb
stos
cmpxchg
mov
dec
jnp
jl
add
fwait
shlb
mov
dec
in
mov
out
jnp
imul
lret
js
inc
ds
xchg
fs
dec
ror
lret
loopne
adc
mov
cmpsl
lret
cmp
movsb
cwtl
xchg
add
aam
push
inc
pop
inc
xchg
pop
sbb
mov
kmovw
cmpsl
mov
daa
cld
test
enter
mov
call
addl
add
adc
scas
in
add
call
rorl
cli
lods
decb
iret
cmc
lcall
rcrl
push
in
clc
and
mov
add
push
enter
or
shl
pop
mov
adc
cmp
iret
scas
add
adc
rcll
mov
add
cmp
dec
push
in
sub
xor
mov
scas
pop
adc
adc
mov
arpl
and
xor
lea
sub
add
sbb
jg
sarl
and
fwait
mov
inc
pop
aaa
and
cmp
popw
leave
ret
push
or
mov
xor
add
cmp
xchg
inc
add
jnp
jbe
fildll
out
add
daa
leave
test
pop
xchg
sahf
sbb
push
lret
xchg
xor
aam
addl
push
mov
sub
and
pop
add
push
ret
outsl
loop
lock
sub
loope
rcrl
push
cmp
lods
xor
insl
mov
imul
jbe
test
movsl
out
and
aam
xor
addb
icebp
call
push
sub
or
sub
or
add
mov
sbb
shll
jne
jp
lcall
mov
xchg
shlb
fiadds
mov
xchg
test
mov
sarl
pop
es
scas
add
mov
enter
fidivrl
cltd
push
push
in
fdivl
movsb
lods
mov
sbb
pop
imul
cmp
mov
mov
adc
mov
and
sbb
addr16
adcb
push
mov
int3
and
lret
fs
test
pop
jp
add
rorl
orb
cmp
add
lods
mov
in
pop
fs
dec
sbb
into
lds
jle
jge
pop
and
imul
jge
mov
and
insl
dec
mov
nop
testl
les
loope
jl
add
push
mov
out
pop
mov
pop
dec
xchg
push
sti
push
je
hlt
daa
pop
mov
leave
out
lcall
pop
ficompl
push
adc
loop
in
jg
repnz
call
shlb
ret
xchg
loop
or
adc
repnz
adc
add
outsl
pusha
mov
aas
dec
add
push
pop
cmp
and
or
mov
pop
sub
bnd
daa
lret
pop
fisttpll
or
jl
sub
out
adc
ljmp
pop
mov
fadd
and
pop
les
clc
jmp
and
mov
ret
movsb
add
hlt
xor
dec
loopne
imul
adcl
jns
stos
cmp
mov
sti
or
je
mov
xchg
jb
outsl
test
inc
sbb
sahf
pop
xor
pushf
stos
pop
int
and
and
mov
data16
loop
dec
les
test
imul
dec
xor
fiaddl
jmp
pop
rorl
lods
inc
push
or
in
in
int3
xor
enter
mov
sub
jo
pop
and
aad
cli
xchg
mov
aas
jp
push
test
dec
aam
adc
mov
jmp
js
sub
rol
add
sbb
inc
popl
dec
mov
arpl
mov
mov
or
jb
and
repnz
push
jne
adc
test
xchg
test
xchg
loopne
sub
pop
imul
ret
filds
add
mov
and
icebp
js
jns
popl
xchg
jo
adc
push
push
subl
sub
inc
xchg
neg
in
add
mov
mov
add
mov
jg
xchg
sbb
mov
cwtl
jo
js
cmpsl
ds
sbb
jmp
push
out
cs
or
sbb
incl
add
jbe
lcall
mov
sbb
cmp
pop
add
adc
aaa
xlat
cli
add
roll
movsb
xchg
cmp
mov
out
jecxz
jb
mov
lea
cmp
jge
imul
sub
cmpb
add
cmp
or
push
inc
add
inc
daa
leave
adc
hlt
lahf
xor
movsb
push
dec
test
inc
jmp
xchg
jl
push
push
jno
mov
aaa
pushf
jae
mov
iret
and
mulb
in
movsb
and
jl
fdivl
pushf
loopne
xlat
mov
sbb
hlt
mov
enter
mov
addb
cmp
push
pop
dec
arpl
add
rcll
sbb
push
xchg
xor
or
mov
jnp
pop
add
test
movsb
pusha
mov
mov
cld
jno
jne
aam
ss
jle
jg
push
lods
add
enter
cld
rcrb
out
add
into
pop
xor
jb,pt
nop
rcrl
sub
punpckhdq
lock
mov
sbb
or
mov
iret
push
inc
mov
cmp
mov
pusha
adc
jo
sbb
faddl
mov
rorb
push
jp
cmpps
mov
cltd
sub
jg
lahf
jne
lret
inc
out
jae
jo
sub
cmpsl
add
inc
and
in
in
fwait
loope
xor
arpl
loopne
or
mov
jecxz
lret
fisubs
adc
or
jl
pop
loop
scas
inc
mov
lock
push
sbb
mov
andb
push
jbe
ret
cmp
push
nop
xchg
enter
das
xchg
add
jbe
sbbb
lcall
subb
lret
shl
es
in
cmp
adc
and
cmp
xor
add
jns
sbb
jecxz
add
push
add
lea
jge
call
xchg
dec
and
add
push
push
lret
cltd
sub
in
or
xchg
bound
push
xor
ficompl
cmp
rorl
jecxz
inc
rclb
jp
addr16
bound
popa
je
int3
rorb
xchg
sti
loopne
sub
mov
inc
or
fsubrl
orb
add
pop
pushf
xor
inc
fwait
fsubr
push
jb
ljmp
and
in
fisubrl
nop
dec
add
adc
out
sub
xor
xchg
inc
add
fwait
iret
inc
adc
hlt
cmc
fsubr
addr16
cmpsb
in
pop
push
add
push
cmp
rolb
js
add
sbb
mov
je
js
cwtl
insb
dec
push
mov
xor
lret
stos
push
and
inc
adc
mov
xchg
rolb
loopne
jmp
sub
test
jae
add
inc
add
jae
add
pop
and
arpl
loope
jecxz
or
leave
fmuls
mulb
imul
inc
jo
pushf
mov
jl
adc
imul
hlt
pop
scas
rolb
lods
fneni(8087
add
cltd
add
in
std
jmp
jle
pop
xchg
outsb
mov
ret
call
testb
push
das
pop
mov
xchg
mov
mov
flds
fadds
sub
enter
cmp
inc
jne
fistpll
test
lcall
adc
pop
mov
popa
mov
pushf
cwtl
adc
inc
add
mov
add
cmpb
mov
xchg
inc
dec
mov
fs
add
mov
fwait
mov
scas
adc
or
les
mov
jbe
cs
into
hlt
jae
add
mov
xor
adcl
enter
ficomps
incl
add
jb
mov
inc
negb
in
scas
sarl
std
inc
and
test
fwait
mov
ds
cld
ss
roll
imul
jp
sub
adc
repnz
adc
xor
push
mov
add
das
mov
inc
aam
stc
jle
mov
mov
or
leave
xor
push
aas
shlb
push
cwtl
les
xchg
inc
sub
aaa
fdivrs
jo
jg
inc
inc
and
xor
xor
hlt
insl
in
inc
aaa
dec
outsb
mov
mov
add
fldt
push
notl
sub
sub
add
mov
sbb
dec
fs
mov
pusha
pop
cmp
push
ret
add
push
mov
push
sahf
scas
rcrl
pop
xchg
add
pusha
mov
or
sub
or
test
sbb
sti
mul
jns
add
mov
dec
and
cwtl
mov
addl
stos
pop
add
inc
cs
add
add
mov
les
add
adc
hlt
adc
adc
out
sarb
shll
add
int3
jo
mov
mov
cwtl
nop
inc
ret
pop
add
cmpb
pop
add
pop
mov
into
leave
call
fidivrl
out
in
popf
dec
push
push
ljmp
popl
pop
mov
orl
or
cmp
je
dec
sbb
mov
add
loop
dec
sbb
fnstcw
or
mov
add
add
xchg
mov
adc
hlt
mov
adc
sub
mov
xor
sub
jg
pop
push
xor
loopne
pop
mov
cs
or
mov
loope
or
adc
in
mov
das
scas
test
mov
int3
loop
aam
sub
in
inc
stos
rclb
fisubrs
add
loop
push
lret
icebp
test
cltd
int3
and
dec
andb
or
mov
mov
imul
add
shlb
mov
repnz
fsub
mov
pop
movsb
faddp
add
adc
mov
and
rcrl
js
lcall
xchg
loop
into
fnsave
add
mov
mov
add
jl
out
in
testb
cwtl
cmp
mov
adc
add
pop
sbb
mov
lods
sarb
push
push
aam
add
addr16
push
add
push
test
jb
arpl
or
push
dec
shlb
lret
in
and
cli
fmuls
adc
loop
les
pusha
shl
mov
icebp
add
adc
cmp
xchg
enter
outsl
inc
filds
loopne
aaa
cmp
pop
pop
ret
das
inc
rolb
roll
pop
cmpl
jae
cmc
andl
mov
pop
inc
lret
es
rorl
rol
gs
mov
push
inc
jl
fmul
inc
mov
or
jle
xchg
mov
test
lods
mov
sub
add
inc
mov
out
add
xlat
icebp
std
lahf
adc
xchg
cld
xor
shlb
daa
aad
inc
enter
adc
out
icebp
push
movsl
mov
test
mov
pop
xchg
pop
mov
inc
sub
mov
xchg
dec
lret
jg
push
imul
add
xchg
pop
dec
fildll
push
mov
ds
dec
xchg
inc
push
add
inc
cli
or
int3
xchg
mov
and
into
and
int
in
ds
or
xchg
jns
mov
outsl
add
mov
shlb
rorb
js
rclb
sub
jge
mov
test
ss
xor
sub
leave
inc
add
in
scas
mov
pop
jo
inc
and
ret
inc
mov
adc
out
test
xchg
xorb
sub
es
cmpl
fldcw
or
ret
lock
sub
add
mov
xchg
mov
mulb
filds
and
sub
pushl
add
dec
addr16
sbb
clc
jo
fs
mov
cmp
dec
aaa
popa
jnp
xchg
arpl
pop
out
andb
lahf
inc
addl
clc
xlat
push
jl
sbb
pop
and
add
subb
dec
je
imul
adc
testl
push
inc
xchg
popa
mov
daa
movsl
mov
and
add
scas
shrl
or
pop
sbb
inc
add
shl
adc
mov
scas
daa
in
data16
scas
test
mov
in
xchg
push
adc
jno
add
and
pop
rorb
sbb
pop
xchg
popa
or
inc
dec
in
xchg
inc
cmp
mov
jno
mov
inc
jmp
or
add
addl
lcall
faddl
into
sub
add
lea
jl
xor
clc
sbbl
in
xor
outsl
add
movl
and
sub
lds
out
flds
inc
adcb
jmp
mov
cli
pop
imulb
or
das
and
popa
xor
and
add
nop
mov
or
lods
mov
cmpsb
ficompl
shrb
push
js
popa
xlat
push
pop
repnz
jmp
push
scas
mov
lods
sbb
lcall
push
fcompl
sub
jns
into
sub
lret
call
inc
les
out
jbe
xor
hlt
cmpsb
psrlq
mov
popa
or
dec
and
lret
movb
xchg
andl
xor
cmp
fsubr
jmp
push
add
lods
pop
dec
je
and
adc
jne
pop
ds
add
std
mov
cltd
cmp
unpckhps
dec
lock
sub
xlat
daa
test
mov
imul
pusha
ficomps
aaa
or
mov
es
push
shrb
dec
and
push
jae
movb
into
and
fisubs
add
mov
fsubs
cltd
dec
adc
add
lea
mov
add
add
sub
push
aad
dec
xchg
ljmp
xor
add
outsb
inc
mov
or
pusha
add
cmp
push
fsubl
xchg
fwait
test
ret
in
addb
xchg
adc
pop
rcr
inc
push
jae
add
repz
pop
add
or
or
add
cltd
jbe
cmp
orl
lar
paddq
test
jo
pusha
pop
jns
data16
mov
inc
push
adc
stc
in
sub
adc
insb
inc
sbb
sysexit
mov
cld
inc
pop
and
xchg
pop
fnstsw
icebp
lea
out
push
push
loopne,pn
push
scas
sbb
or
sti
rol
pushf
dec
xor
sbb
add
outsl
cs
in
lret
inc
hlt
xchg
cwtl
stos
or
orb
add
push
and
ja
jge
xor
inc
or
inc
fbstp
popa
xor
or
mov
or
or
scas
mov
inc
pop
dec
xchg
sbb
rcrl
inc
popa
adc
filds
jg
orb
and
incb
incb
sub
repz
dec
xor
and
pop
xchg
inc
push
adc
and
adc
xorb
add
int
add
xor
mov
jno
lcall
adc
mov
cld
mov
in
xor
xchg
fsubrl
daa
in
adc
fidivs
repz
adc
fstps
sbb
cmp
stc
mov
push
in
pop
or
out
or
cltd
mov
shll
or
lret
movsb
add
pop
lock
iret
mov
repnz
xor
fmull
rcrl
shrl
popa
int3
sbb
xor
mov
or
loopne
in
mov
adc
xchg
fsubs
dec
or
or
or
lods
mov
jmp
push
mov
fisubrl
mov
sub
or
mov
sub
sub
dec
adc
leave
lods
add
fsubrs
push
push
xor
test
test
add
pusha
xchg
out
cld
fldl
hlt
xchg
dec
add
add
and
dec
hlt
sti
scas
add
and
sbb
in
xor
add
mov
add
jmp
dec
add
lret
push
sarb
outsb
dec
repnz
cmp
push
jl
rorb
xorl
pop
add
mulb
test
adc
jns
add
pusha
and
lahf
mov
popa
add
movsw
cmpsl
out
subb
mov
setge
mov
jmp
stos
dec
mov
push
je
mov
stos
jl
or
outsl
mov
add
into
out
push
bound
scas
scas
fcmovnbe
inc
sub
sub
cs
pushf
pop
cmp
mov
or
call
or
aas
pop
xchg
sbb
daa
movsb
xor
ljmp
sub
inc
pop
sbb
add
nop
jns
jne
add
les
xchg
jae
test
and
pop
fadds
popa
push
jb
push
mov
mov
adc
sbbb
xor
mov
cmp
inc
pop
mov
inc
rcrl
jl
leave
jnp
cmpsb
aaa
stos
call
je
and
mov
sub
mov
in
mov
cmpsb
xor
xchg
cmp
jl
or
in
jl
iret
cmp
orl
fld
fwait
ret
adc
add
cmp
jne
xchg
lock
test
xchg
mov
sub
adc
push
xlat
fsubs
or
adc
push
inc
fs
cmp
push
sbb
roll
cmp
scas
cmp
subb
mov
insb
and
pop
jmp
dec
and
mov
es
ret
push
and
dec
pushf
add
not
jmp
test
fsubl
shlb
pop
lea
cmpsb
lods
incb
je
jno
lcall
xchg
mov
adc
imul
mov
aas
xor
ljmp
jns
fwait
cmpl
xchg
xchg
fs
add
flds
loop
mov
mov
iret
mov
mov
icebp
mov
cs
out
inc
fwait
push
or
and
mov
add
aam
sbb
jb
add
arpl
adc
push
push
arpl
pop
fdivrp
mov
loopne
test
cmp
cli
cltd
jmp
jge
test
jbe
in
pop
xor
mov
popa
push
pop
mov
sub
xlat
aas
repnz
or
xor
jmp
cmp
adc
xchg
insb
dec
lret
mov
xor
sub
test
mov
adc
arpl
xchg
pop
mov
stc
dec
inc
cwtl
pop
mov
fmull
pop
fsubrp
push
loop
jno
xchg
addr16
sub
adc
pop
add
xchg
daa
ss
jnp
inc
push
dec
nop
mov
insl
jno
or
mov
jbe
sub
les
or
mov
scas
dec
cmpsb
mov
aad
pop
or
imul
pop
mov
pop
push
sbb
lret
xchg
or
lcall
jbe
leave
cmp
lods
es
jnp
cwtl
xchg
lock
add
mov
or
add
fiaddl
add
inc
pop
or
in
cmp
jns
in
mov
xor
sub
pop
mov
xor
lock
dec
rolb
clc
sub
inc
test
mov
flds
fsubr
cmc
sub
push
jl
push
adc
xchg
ftst
add
mov
inc
loop
pop
testl
lcall
cmpb
loop
dec
dec
js
add
jmp
add
inc
jne
shlb
push
xchg
sbb
adc
lcall
and
ja
imul
adc
cli
iret
mov
sbb
test
mov
inc
andb
test
iret
sbb
xor
fwait
pop
rcr
ds
add
adc
and
inc
jg
jnp
and
aaa
lods
dec
sbbb
je
stos
movsl
and
mov
xor
pop
movsl
jo
cs
mov
inc
jae
cwtl
jo
dec
or
xchg
mov
xchg
jle
js
mov
xor
cmp
dec
adcb
pminsw
pop
out
mov
or
loopne
xchg
aaa
mov
push
stos
mov
cs
in
outsl
add
repz
fistpl
cltd
xor
daa
in
adc
pop
add
in
dec
add
or
adc
add
push
in
jle
xor
fdivr
daa
sub
push
fiadds
or
jnp
ja
adc
jmp
add
sti
mov
xor
and
lret
adc
scas
sbb
mov
xor
dec
test
hlt
iret
push
or
or
jmp
cli
stos
add
int3
pop
loope
jbe
nop
pop
and
jae
and
xchg
or
inc
inc
fcoml
scas
cmc
rol
inc
sub
mov
inc
xor
push
push
jne
sub
and
dec
aam
rolb
fildll
pop
sub
pop
scas
shlb
xchg
shll
test
add
jne
cmp
das
push
sub
outsb
jmp
lcall
inc
push
in
or
popa
or
sbbb
pop
insl
nop
sub
push
add
adc
mov
hlt
mov
fs
inc
dec
xchg
test
ljmp
adc
mov
fcomps
mov
sub
or
cwtl
adc
pop
and
int3
filds
cmp
push
mov
xor
inc
or
in
jge
mov
add
or
or
jbe
fsubrl
pusha
inc
cmc
push
push
popl
enter
movsb
stos
jnp
scas
lock
test
pop
inc
cmp
cwtl
dec
cli
ljmp
mov
hlt
pinsrw
push
dec
sub
add
adc
adcb
add
dec
cmp
loop
add
insb
push
or
dec
pop
jl
jns
mov
nop
add
shll
mov
lret
mov
inc
orb
mov
mov
popa
add
add
mov
shrl
xchg
in
hlt
test
cmpsl
dec
aaa
and
fwait
sahf
fs
popa
mov
movsb
jp
and
xchg
cmp
add
popa
mov
pop
cmp
push
ss
xchg
fcmovb
cmpsl
pop
xchg
mov
push
call
xor
clc
jmp
lcall
jno
aam
or
popa
lods
xor
lock
jnp
es
add
out
pop
sbb
add
loopne
sbb
pusha
in
sti
xor
loop
leave
xchg
and
out
out
dec
xchg
in
iret
sub
jmp
sbb
stos
mov
inc
dec
in
inc
xchg
jg
test
data16
cwtl
sub
cmpb
and
add
add
clc
add
mov
dec
xor
sub
or
and
jno
xchg
dec
sub
cmp
add
push
fwait
xchg
pop
and
shll
enter
hlt
jns
add
fimuls
pop
jle
arpl
lret
pushf
and
repz
and
daa
and
dec
mov
cmpsb
pusha
fs
fists
add
jns
jl
push
rolb
sub
loopne
rorl
add
orb
mov
pusha
std
jp
inc
nop
inc
xor
xchg
cmp
jl
push
pop
pop
cmp
jo
fistpll
lcall
jle
aaa
pushl
das
ja
mov
mov
xor
stos
pop
mov
adc
aam
gs
mov
push
lret
outsl
lods
add
sub
add
add
dec
push
pop
dec
ljmp
dec
loopne
xor
leave
or
mov
pop
dec
sub
pop
mov
adc
add
inc
or
rolb
sub
cli
sub
jb
pushf
xlat
add
sub
add
scas
dec
jle
xor
jo
pusha
add
xor
movb
sti
subps
fcomp
inc
and
sarl
mov
xchg
dec
loopne
mov
inc
fisubs
push
out
jbe
or
xor
mov
cmp
mov
stos
adc
je
loopne
add
aas
adc
loopne
mov
pop
test
or
mov
sbb
jmp
nop
ja
neg
push
pop
test
addl
cmc
je
add
or
sbb
sub
dec
mov
inc
call
add
sbb
jle
mov
arpl
xchg
xchg
xchg
nop
js
inc
add
dec
sbb
push
je
xor
xchg
rolb
push
insl
jns
add
sbb
add
fmull
mov
pushl
bound
subb
sub
dec
pop
mov
scas
stos
das
dec
mov
xor
jl
mov
fs
mov
cmp
pop
rcl
or
push
mov
in
or
mov
shlb
add
stc
add
jmp
cmp
sub
fbld
jnp
jmp
aad
call
mov
pushf
dec
lods
and
pop
cmpsl
cmp
push
or
daa
sub
xor
dec
repz
in
jp
add
notl
sub
clc
gs
mov
and
js
repz
push
inc
loopne
out
mov
add
pop
rorl
ja
daa
xor
sbb
les
inc
add
lods
sub
adc
push
mov
mov
sbb
pop
adc
adc
sbbl
scas
pop
mov
sub
pusha
loope
js
add
sbb
push
inc
mov
popa
cli
sub
inc
pop
jp
push
mov
dec
lea
ret
incb
xor
stc
scas
sbb
cltd
test
mov
and
add
push
mov
rorl
push
test
icebp
repz
stos
add
sub
pop
cmp
add
int3
push
out
cmpsl
repnz
xchg
inc
push
fldenv
inc
loopne
adc
lds
jns
jo
nop
push
pminsw
add
hlt
or
iret
neg
pop
in
sub
adc
daa
popa
movlps
inc
mov
iret
add
jnp
dec
andb
cmp
push
mov
pop
pop
loopne
les
pushf
in
inc
sub
mov
hlt
pusha
xchg
jg
cwtl
fcmovnu
sub
add
leave
int
call
icebp
mov
popa
rorb
fstps
mov
and
in
dec
int
les
mov
jecxz
les
pmuludq
adc
mov
enter
dec
mov
repz
orb
les
jbe
xchg
mov
push
xchg
sub
mov
and
xor
in
jo
cmp
mov
fidivrs
add
jp
and
sbb
shrb
loope
adc
pop
push
ljmp
out
and
cmp
lcall
pop
repnz
int3
or
jo
dec
rorb
pop
movsb
dec
int
mov
wrmsr
dec
scas
pop
int3
pusha
dec
sbb
pop
push
out
add
daa
outsl
inc
imul
xor
sahf
or
and
and
jg
sbb
adc
int
rolb
add
cld
pop
pop
push
out
jge
add
sub
dec
sbb
adc
pushf
mov
rolb
jno
in
bound
jo
sti
add
jne
popa
in
xchg
inc
xchg
cmp
daa
xchg
inc
cld
cmovle
mov
lods
daa
jne
cmp
inc
jge
sbb
xor
hlt
and
push
outsb
jae
popf
stos
fwait
adc
pop
cmp
add
popf
iret
insl
repnz
adc
clc
lods
jle
and
sahf
cwtl
jl
push
mov
in
mov
out
adc
add
mov
xorb
scas
aaa
es
ljmp
stos
fs
add
mov
adc
sahf
mov
mov
pop
incl
ret
cmp
add
dec
xchg
lods
dec
insb
pop
sub
inc
add
lret
ljmp
fcomip
mov
loopne
add
loop
fisttpll
add
pushf
shlb
mov
push
sub
loopne,pt
dec
or
xchg
pop
xorb
sbb
cld
jge
outsl
addb
xor
sbb
mov
adc
dec
and
movsl
xor
sub
rcll
mov
je
or
pop
sbb
sub
sbb
das
mov
pushf
fldenv
xor
arpl
jmp
sahf
xchg
mov
fisubrs
shlb
add
xchg
int
and
loope
lock
mov
push
out
out
sbb
lods
mov
pusha
test
mov
xor
and
cs
lods
mov
in
sub
and
inc
iret
inc
sti
and
icebp
mov
enter
rcll
jl
or
mov
fldcw
inc
ljmp
pop
inc
jno
in
add
adc
imul
inc
or
pop
dec
mov
pop
rclb
add
daa
sarl
andl
in
enter
lret
dec
push
clc
pop
pop
xchg
cmp
outsl
lds
mov
mov
xorb
dec
dec
gs
add
and
and
jg
mov
or
or
bound
cmp
add
sbb
add
lret
pop
outsl
fidivs
xor
adc
das
xor
iret
pop
xchg
cmpb
cmc
dec
or
out
xchg
inc
int3
inc
push
sub
subb
cli
or
add
in
and
or
mov
cmpb
pushf
subb
mov
push
mov
push
jg
mov
adc
sub
out
addl
test
mov
or
dec
jno
pop
iret
and
rcll
add
and
push
lods
mov
pop
cwtl
lods
adc
push
xchg
fs
fistpll
in
lods
fstps
or
push
xor
xor
or
jae
sub
jge
or
clc
rorb
xor
ffree
or
in
mov
jmp
dec
mov
and
clc
adc
push
stc
mov
add
inc
mov
inc
bound
adc
and
out
cmpsb
movsb
mov
mov
inc
popa
push
mov
outsl
dec
mov
movb
sub
jns
hlt
je
add
lea
loop
adc
fwait
dec
mov
dec
inc
sub
push
lds
icebp
mov
push
out
sahf
lcall
sbb
xchg
popa
mov
pop
jl
js
or
mov
sub
jmp
add
sub
sbb
add
lock
xor
and
decl
cmp
mov
mov
pop
out
push
pop
test
cmp
cwtl
add
mov
inc
jmp
xchg
push
adc
adc
icebp
in
xchg
cmp
and
mov
testb
loopne
fstl
inc
mov
and
add
and
loopne
outsb
mov
fsubl
push
or
add
out
mov
loopne
add
lret
cwtl
fdivl
mov
mov
insb
add
lea
mov
aaa
xlat
push
jg
and
repz
out
add
jl
sbb
and
sub
fadds
and
adc
add
ljmp
jbe
cmp
clc
lea
adc
movsl
gs
cltd
mov
cmpsb
sub
mov
nop
sub
inc
pushf
or
pusha
cmp
inc
gs
adcl
sbb
testl
es
shl
insb
daa
jbe
dec
cmpsb
adc
mov
push
popa
or
lods
add
jmp
cmp
or
cwtl
lcall
sub
in
dec
outsb
hlt
xchg
test
mov
pop
imul
ret
or
sub
jno
sub
addb
and
sub
jo
or
daa
mov
andb
pop
and
gs
js
inc
imul
int3
pusha
in
ljmp
push
or
cmp
lahf
sub
loopne
dec
adc
add
std
daa
mov
cli
in
adc
pushf
frstor
cmpsl
int
mov
jmp
pusha
cmp
add
jp
cld
push
les
aaa
xchg
lahf
or
push
dec
cwtl
inc
pop
shlb
and
dec
jbe
jno,pn
dec
into
push
sbb
fwait
ret
js
mov
push
cmp
jmp
loope
mov
das
xor
and
adc
sub
gs
mov
pop
fisubs
inc
fwait
mov
pop
jno
jmp
test
cld
mov
stos
out
adc
loope
fisubrl
pop
xor
roll
cltd
add
mov
cmp
mov
dec
mov
ja
or
xchg
pop
clc
cmovae
mov
aam
in
mov
js
sub
pop
fidivl
pop
xor
pop
push
jecxz
adc
dec
andb
adc
mov
je
nop
xor
xor
push
ja
jno
xchg
je
add
gs
in
dec
lcall
and
pop
sub
xor
inc
add
cs
daa
dec
push
in
pop
outsb
xor
jecxz
aas
sbbb
xor
pop
bound
cmp
cmpsb
add
out
inc
jg
je
mov
adc
xchg
decl
ljmp
mov
xor
int
mov
pop
call
push
inc
sub
jg
dec
xchg
xor
add
xchg
rcl
jmp
pusha
dec
pop
xor
iret
sahf
repz
push
or
cmp
adc
in
sbb
adc
insl
addb
sub
xchg
xor
fmull
or
ds
sub
jns
in
sub
fiaddl
int
les
jg
cwtl
add
cmp
insl
add
xor
js,pn
or
pop
jno
xchg
or
cwtl
cwtl
out
push
xchg
cmpl
xor
cs
sbb
push
jbe
repz
cwtl
fwait
adc
stos
xchg
mov
cmp
and
add
faddp
in
imul
adc
sub
ret
aas
in
in
mov
add
and
add
inc
xor
add
je
sbb
xchg
shl
adc
mov
dec
mov
cltd
push
pop
push
lods
andb
gs
loop
add
mull
cs
adc
add
xor
or
xchg
hlt
lods
in
and
sbb
cwtl
jg
call
mov
or
and
add
mov
or
dec
repz
dec
push
pop
test
mov
test
add
rol
lds
ret
xlat
fldl
lea
popf
out
es
loopne
aas
xchg
add
jbe
out
mov
pop
mov
loopne
mov
fwait
clc
mov
movsb
and
mov
xchg
scas
call
add
in
test
int3
jmp
sbb
add
mov
add
dec
adc
inc
repz
adc
lea
mov
mov
and
push
jnp
in
ss
jg
adc
adc
push
mov
xor
pop
fldcw
add
pop
inc
je
sbb
add
inc
mov
xor
mov
and
mov
xchg
add
mov
daa
mov
add
mov
pusha
xor
xchg
mov
and
inc
mov
or
roll
mov
shrb
mov
cs
adc
test
jae
mov
lock
pop
in
imul
rolb
jle
inc
push
int3
jge
nop
mov
mov
stos
mov
pop
iret
sahf
push
shlb
hlt
add
mov
enter
xchg
sbbb
jmp
push
mov
lock
fwait
cmpsl
jmp
fmuls
in
icebp
es
add
pop
sub
xor
andl
dec
pushf
xor
jo
add
imul
clc
aaa
push
xchg
jp
xor
in
xorb
cmpsl
or
movl
mov
cmpb
jno
es
mov
shrl
sbb
sub
add
xchg
loope
test
xchg
fs
push
les
pop
jge
xchg
mov
pop
push
mov
or
js
jno
push
xor
rolb
bound
cmp
or
adc
jl
inc
and
cld
fldenv
lahf
lret
sbb
dec
sbb
mov
addr16
pop
frstor
jns
mov
and
jnp
add
cmp
sbb
xchg
dec
jmp
icebp
push
mov
inc
add
aaa
movsl
in
jnp
mov
add
mov
and
cmp
sub
fs
adc
or
movsb
rcrb
sub
mov
popa
mov
arpl
hlt
fwait
data16
in
fnstenv
test
sbb
and
jecxz
and
pop
fmuls
pushf
lcall
mov
add
sbb
pop
jno
lock
push
aam
xor
das
out
fcom
gs
cmpb
js
push
fbstp
insb
pop
stos
push
dec
bound
repnz
adc
or
cmp
and
cltd
cld
rorb
or
adc
ljmp
fwait
and
jg
add
xchg
cmpsl
and
pop
mov
add
js
lret
mov
ficomps
sub
cmp
push
push
dec
xor
notl
filds
pop
add
icebp
fadd
aam
mov
inc
pop
jae
es
arpl
int
insl
dec
aas
pusha
pop
adc
mov
lods
movl
jmp
pop
push
adc
enter
jae
dec
ficompl
aam
xor
addl
jno
les
in
mov
mov
lahf
sbb
fwait
jns
xchg
cmp
sldt
out
lea
cmp
and
loop
xor
or
or
sub
add
stos
pusha
repnz
loope
pop
cmp
fadds
jg
aam
sub
loope
xchg
mov
mov
xor
das
add
shll
add
add
cmpb
cmp
jnp
add
or
push
sub
add
mov
cmp
out
out
adc
xchg
or
lods
mov
push
xchg
test
and
jmp
lods
dec
insb
xchg
bound
lods
dec
cltd
pop
add
adc
mov
or
add
sarb
add
fisubrs
lret
inc
mov
lock
loopne
int
rcl
js
mov
xchg
or
movups
lods
pop
ja
repz
loop
jns
add
addl
in
in
icebp
sbb
jp
or
loope
sub
and
push
adc
insl
out
push
jge
or
push
pop
bound
cs
mov
inc
push
jo
pop
popa
and
add
into
shrl
daa
or
es
xchg
sbbl
jo
pop
pop
cwtl
or
add
dec
mov
sub
fmull
lds
das
jge
xchg
ljmp
je
notl
addb
lods
inc
sarb
sti
in
jle
in
add
fwait
lods
mov
add
add
jno
jp
inc
mov
decl
xor
repnz
add
xor
jns
pop
push
loopne
jmp
icebp
sub
mov
lret
mov
test
rcll
sbb
fidivl
fiadds
xchg
fcomps
xor
les
popf
add
mov
xchg
push
inc
shlb
add
xchg
adc
push
mov
dec
add
and
cmc
lahf
ds
sbb
rorl
push
out
stc
inc
add
cmp
add
push
mov
add
dec
adc
jns
scas
daa
push
out
aam
adc
adc
xor
jle
add
lahf
shrb
add
dec
faddl
push
fs
push
or
fwait
andb
and
cmp
push
inc
fldl
pop
mov
cmpsl
xchg
fs
ror
imul
fcomps
in
inc
sub
dec
xchg
add
cmpsb
test
push
mov
mov
dec
js
pop
inc
insl
adc
orb
add
std
fadd
popa
xor
nop
cmp
or
add
mov
xchg
jno
pop
pusha
jne
loop
sub
jmp
pop
outsl
cmpb
andl
adc
jnp
fcos
xchg
add
push
adc
aaa
mov
sub
das
or
pop
xchg
les
pop
pop
jge
lods
or
xchg
pop
or
adc
jg
fiadds
dec
scas
stc
inc
inc
dec
cmpb
sbb
push
adc
mov
dec
xchg
out
and
nop
push
test
and
repnz
mov
xchg
stos
pop
mov
pop
mov
or
inc
inc
jae
jp
or
and
push
jecxz
add
dec
add
push
frstor
mov
dec
mov
push
jmp
adcl
insb
jg
shlb
or
push
jl
test
lods
pop
mov
nop
push
ja
add
stos
xchg
mov
mov
sahf
push
lret
adc
fsubrs
in
sbb
adc
popf
xor
add
or
xor
add
add
add
dec
in
inc
pop
flds
aaa
xchg
in
data16
cmp
insb
xchg
lock
mov
stos
cmp
hlt
add
outsb
sahf
jle
cmpsb
and
dec
mov
push
lahf
pop
inc
inc
inc
lea
fwait
sahf
cli
in
dec
pop
mov
mov
jge
jp
fwait
cmpl
lods
cltd
add
xor
rolb
inc
add
cmpb
lret
jecxz
xchg
jmp
stos
call
cmp
or
mov
mov
je,pt
fdivl
mov
imul
pushf
inc
jl
or
or
les
daa
adc
in
js
push
jle
add
popf
imul
fdivrl
inc
push
dec
pop
stos
shlb
rcrb
jae
mov
test
push
cld
in
push
fdiv
sahf
jno
setp
or
dec
sub
or
int3
jmp
push
fs
dec
mov
cmp
and
ss
and
lcall
test
int3
sbb
inc
enter
and
cs
addl
lea
push
nop
xchg
xchg
jne
sub
pop
sbb
adc
dec
xchg
adc
ss
cmp
loopne
dec
int3
loopne
in
mov
mov
dec
jb
mov
and
stos
stos
shrb
out
pop
mov
sub
mov
rol
fistl
mov
inc
sbb
and
cld
std
xor
push
pop
icebp
test
je
pop
and
mov
mov
pop
or
add
inc
addb
fwait
negb
aaa
fs
das
and
lsl
aas
leave
sbbb
daa
bnd
push
in
ror
and
xchg
gs
pusha
movsb
mov
inc
jg
inc
and
cmpb
cwtl
lods
clc
add
or
or
adc
sub
jg
rolb
mov
std
insl
dec
dec
add
js
add
fisttpll
jmp
gs
out
cmp
jbe
enter
cmpsb
jle
adcb
and
data16
fwait
pop
sub
dec
popf
fiaddl
hlt
shrl
aaa
add
fs
mov
add
cmp
xchg
lods
add
into
cmc
dec
andb
sahf
loopne
cld
jl
mov
adc
cwtl
iret
notl
add
into
lea
outsb
xchg
pop
xchg
enter
add
outsb
inc
xor
je
decl
das
in
or
cmp
mov
hlt
out
mov
lret
movb
je
and
clc
pop
mov
ds
nopl
flds
daa
aam
scas
cs
add
cmc
sarl
scas
or
pop
repz
sbb
inc
loop
aam
nop
push
loopne
xchg
out
outsl
js
mov
orl
lock
mov
dec
and
test
add
fdivrl
dec
js
les
sub
jo
add
xchg
gs
leave
adc
pop
cmp
jl
clc
jg
cltd
bound
in
sbb
pop
and
add
mov
jbe
and
cmp
add
xor
ret
adc
mov
dec
arpl
icebp
and
inc
adc
scas
add
hlt
popa
fiaddl
mov
adc
xor
sarb
lret
push
xorb
push
test
orb
inc
push
ret
mov
js
inc
out
pop
add
adc
and
add
or
decb
and
test
xchg
mov
pop
stos
jg
jl
push
mov
add
push
repz
mov
ja
push
test
push
pop
mov
add
jnp
stc
sub
xor
sub
loopne
jae
pop
add
cmp
jns
add
stos
arpl
dec
mov
jno
lods
and
lds
push
sub
add
in
daa
xchg
mov
add
pushf
sahf
pop
aad
lods
cmovl
mov
enter
mov
sahf
test
pop
fmul
inc
xor
aad
jmp
adc
add
out
paddsb
sub
rorl
out
add
cmp
ljmp
stc
scas
fmull
jae
add
jg
dec
movsl
push
mov
sub
sahf
mov
insl
into
jge
xchg
add
das
cwtl
jmp
jmp
mov
mov
popl
pop
cmpsl
mov
or
lods
pop
out
add
js
ljmp
jno
cwtl
rolb
xor
inc
bnd
adc
ljmp
lds
adcb
inc
mull
add
mov
pop
mov
add
mov
xor
adc
sbb
std
shl
sbb
mov
fcompl
inc
cwtl
adc
xor
rclb
cltd
adc
xor
mov
jmp
dec
and
pop
rorl
lret
in
pop
jno
jmp
sbb
and
gs
or
ret
cli
xchg
popa
xor
daa
mov
sbb
mov
push
fnstcw
pop
popf
add
lods
dec
mov
cmp
push
xlat
add
xchg
jbe
cwtl
hlt
das
mov
inc
mov
insb
mov
or
enter
dec
stos
dec
test
cmpb
pop
mov
test
outsl
pmulhuw
ss
cmp
cwtl
mov
fcoml
adcb
fwait
add
stos
ficoms
rcll
sbb
cld
int3
mov
push
pop
cmp
shl
mov
inc
push
jg
mov
push
clc
pop
ficompl
add
mov
ss
xchg
mov
mov
cmp
push
lahf
jns
lea
pop
insl
adc
call
sub
xor
js
push
add
stos
add
inc
mov
mov
jae
sbb
sbb
movhps
sahf
add
xchg
jns
dec
adc
push
mov
add
scas
dec
in
jl
imul
pop
xchg
and
lea
and
loope
sbb
lcall
sarb
cmp
jbe
xor
mov
test
daa
lds
xchg
cwtl
xlat
cmpsb
xchg
adc
outsb
push
pop
dec
lock
sbb
mov
sti
mov
pavgw
lea
jno
pop
push
mov
arpl
aam
les
loopne
inc
pop
add
test
adc
rolb
pushf
fwait
iret
mov
ljmp
outsb
add
mov
fs
inc
mov
lcall
adc
pop
add
jb
sub
add
adc
cmp
orb
xor
push
lcall
add
mov
xor
push
or
adcl
or
mov
adc
add
popa
push
popa
das
jno
push
ljmp
mov
mov
dec
xchg
mov
jne
add
outsb
movsl
lret
xor
sub
insb
mov
pop
je
cmp
clc
add
cmpsb
dec
push
in
int
cmp
enter
add
and
jno
or
cwtl
and
inc
nop
test
add
testb
dec
dec
jb
ret
adc
lret
cmp
popf
popa
xchg
or
roll
ss
loopne
incb
sub
push
enter
xchg
and
and
xchg
xor
stos
call
and
xor
pusha
ficomps
add
sbb
xchg
or
pop
dec
mov
in
mov
or
out
xchg
test
stos
mov
xor
cmp
int
add
or
or
rcrb
enter
clc
fidivrs
in
gs
add
mov
dec
popf
xor
pop
xchg
andl
adc
faddl
lock
imul
mov
test
inc
and
fwait
add
in
dec
int
in
ret
xchg
jmp
cmp
andb
cld
add
xchg
loop
xor
popa
or
jbe
daa
adc
push
cmpb
add
push
xor
sub
cltd
bound
stos
aaa
int3
sbbl
lahf
and
and
dec
add
rcrl
loop
cmp
sbb
or
cmp
int3
jae
inc
shr
push
fldl
sub
lret
lds
out
push
mov
jge
dec
and
cmc
pushf
pop
cli
adc
lock
xor
cs
xor
adc
push
jle
add
xor
add
jb
mov
add
or
in
cmp
aam
stc
in
mov
push
leave
imul
rcll
add
dec
dec
shr
push
mov
mov
fsub
push
or
cwtl
shrb
jp
call
outsb
les
rorb
pop
xchg
aaa
push
test
xor
jmp
pop
add
jns
ret
or
test
jae
adc
pop
xlat
mov
nop
jb
jmp
aaa
stos
add
adc
lods
filds
loop
add
push
and
movsl
push
add
mov
inc
lods
add
or
adc
xor
cwtl
or
mov
jge
push
sbb
fisubl
leave
enter
pop
sbb
movsb
dec
xlat
stc
push
or
aam
mov
shll
outsb
nop
or
push
add
cmpsl
sbb
repz
cmp
push
clc
jmp
add
fldenv
jmp
nop
adc
push
mov
and
bound
les
outsl
cmpsl
fwait
and
orl
addb
add
pop
icebp
filds
jnp
mov
xchg
add
lret
pop
std
or
in
cltd
push
cmpb
pcmpgtd
cmc
dec
mov
jo
add
lahf
xor
mov
sbbb
cmpsb
loopne
xchg
jge
dec
mov
addb
mov
inc
iret
cmp
mov
pop
les
adc
fdivrl
test
test
jbe
or
dec
push
fnstsw
cmp
mov
outsl
lret
fwait
mov
lret
loopne
cmp
es
pushf
adc
in
cmpb
pop
xchg
subb
dec
mov
lea
mov
cmp
push
lock
sbb
lods
insb
adc
jno
dec
sarl
popa
push
cwtl
fcoms
pop
sub
or
mov
push
into
notl
push
push
jle
lods
add
dec
enter
adc
movsl
add
adc
pop
fdivrl
mov
icebp
nop
push
or
mov
push
mov
cmp
mov
subb
mov
adc
mov
clc
adc
add
ret
pop
dec
dec
fs
pusha
push
and
jne
inc
xor
pop
xor
fsts
mov
pop
pop
cmp
mov
mov
movsl
xchg
inc
test
cmpsb
das
int
rol
push
sub
pop
and
inc
add
fcmove
mov
add
xchg
pop
loop
add
or
outsb
in
inc
cwtl
pop
and
pop
xchg
cmpsl
cli
into
clc
mov
push
and
xor
bound
adc
push
inc
jb
lock
push
cmpsl
mov
xrelease
jmp
insl
arpl
mov
or
push
cwtl
pop
nop
jae
lods
das
daa
cmp
icebp
test
and
jp
xchg
daa
mov
adc
xchg
dec
push
test
xor
pop
jns
cmpsb
aam
rcl
sbb
rorb
ljmp
icebp
in
test
cli
push
cmp
sub
js
sbb
cmp
add
jne
lock
insb
int3
adc
mov
dec
ds
inc
or
shlb
add
popf
dec
jmp
push
xchg
sbb
clc
daa
xchg
pop
jmp
add
aas
push
jns
iret
add
lds
cmp
movsb
leave
inc
adc
sub
mov
xchg
inc
bnd
enter
mov
add
ret
daa
xchg
add
fnstenv
dec
jg
int3
gs
scas
pusha
pusha
pop
mov
daa
cmp
xor
adc
add
xor
pop
xchg
jmp
jbe
fistps
out
push
lcall
dec
jo
xchg
push
sbb
inc
jge
mov
xorb
popf
xor
push
mov
mov
pusha
mov
loope
fnstcw
jle
add
mov
mov
or
adc
incl
jp
pop
ficoms
add
xor
in
sbb
or
clc
adc
xchg
jbe
orl
pop
xchg
faddl
xchg
add
pop
sub
lahf
fs
adc
cmp
push
sbb
lods
mov
add
fbld
or
jp
and
fs
mov
lahf
push
and
jmp
fidivrs
push
out
xor
and
sti
jns
jl
aas
loope
adc
mov
cmp
movsl
add
js
test
push
stos
into
inc
les
add
outsb
and
jmp
addb
pop
shll
fwait
cmpsl
xor
dec
in
sub
test
aam
mov
addb
xchg
and
or
lahf
push
pop
mov
les
jl
loop
lcall
or
ror
add
mov
mov
cmp
hlt
push
add
and
sbb
jo
fstps
fsubr
roll
movsl
xchg
test
jle
aam
add
mov
xor
pop
shrb
dec
add
test
movsb
or
xchg
and
adc
push
mov
imul
loop
push
pop
xor
mov
bound
ret
in
jp
popa
sbb
test
jge
sbb
and
cmpb
vpackssdw
inc
cmpsb
mov
das
je
add
mov
or
lea
faddl
push
and
add
lock
xchg
add
push
fwait
leave
push
and
or
pop
mov
jbe
add
rcrb
stos
inc
icebp
js
sbbb
loop
push
push
adc
adc
dec
mov
xor
adc
xor
mov
cmpsb
movsb
mov
test
and
popl
ljmp
nop
icebp
push
inc
lods
mov
repnz
stc
push
out
cmp
repnz
in
adc
inc
cltd
lock
mov
inc
sub
add
dec
fprem1
out
jae
pop
push
dec
xor
mov
lea
shlb
sbb
add
lods
inc
sbb
fmull
sbb
sub
popa
xchg
jno
test
fisubrs
xchg
dec
inc
mov
dec
mov
nop
addb
adc
cmp
ljmp
xchg
lahf
daa
lock
mov
les
and
nop
or
mov
pop
in
mov
xor
push
xor
and
push
sub
sbb
out
and
or
and
dec
out
fucomi
das
jl
daa
inc
cmp
cmc
imul
fsubs
jge
repnz
dec
test
sub
add
lds
add
inc
cmp
sbb
daa
mov
pop
adc
push
in
cs
jo
daa
mov
nop
ljmp
sbbl
and
fdivs
test
fs
and
lret
push
push
in
push
add
sub
mov
push
js
hlt
orl
mov
fcomp
adc
jmp
mov
aaa
add
ficomps
fadds
add
dec
ds
imul
outsl
cld
mov
das
xchg
pop
pop
mov
popa
dec
sub
pop
lea
in
lods
dec
sti
adc
and
or
imul
js
add
into
jge
inc
mov
adc
add
adc
pushf
add
aas
insl
jle
add
push
mov
mov
or
shll
dec
add
xchg
cmp
add
mov
jmp
pop
les
rolb
in
xor
inc
jno
mov
mov
mov
push
fcompl
xor
or
repz
jo
out
add
lcall
pop
fdivs
mov
pusha
call
add
inc
pop
ret
insl
mov
les
stos
std
ss
fwait
and
jge
fsub
ret
pop
ffreep
add
xor
cmp
inc
cmp
mov
shll
add
jge
and
sbbb
inc
leave
and
cmp
adc
or
sub
in
jb
inc
cmp
push
jmp
test
and
add
fcoml
pushf
test
call
cmova
inc
cmp
and
or
push
bswap
daa
pop
pop
addb
addl
adc
mov
jmp
lcall
in
inc
add
test
in
xor
or
pop
fcmovu
lea
adc
test
mov
add
mov
cmc
or
fldcw
add
xchg
push
adc
cmp
test
push
sub
rcrb
repnz
test
mov
add
or
loope
push
dec
sbb
mov
sbb
jmp
dec
dec
enter
clc
subb
js
add
cmp
jbe
pushf
cs
inc
cmpsb
repz
xor
mov
and
cli
cmpsl
daa
mov
in
cs
sbbb
lds
test
adc
add
jmp
xchg
sarb
mov
xorb
daa
jb
lock
jno
repz
mov
sub
add
popf
loope
add
sub
mov
js
shr
dec
xchg
lcall
jmp
lahf
inc
mov
out
add
mov
add
loope
pop
cli
aam
scas
dec
js
or
repz
je
pusha
sub
jno
pop
ljmp
insb
and
roll
adc
mov
push
cld
sahf
add
repnz
pop
stos
roll
and
lea
dec
add
cli
ret
adc
inc
ds
mov
cvtdq2ps
cwtl
pop
xchg
dec
fnstcw
aam
inc
nop
insb
ja
jmp
mov
push
push
fstps
insb
mov
bound
pop
shl
clc
jge
add
aas
mov
shll
pop
faddl
add
repz
sub
into
adc
iret
dec
adc
pop
mov
xchg
pshufw
pusha
cmp
sub
dec
add
mov
add
jecxz
out
mov
sbb
mov
sub
roll
stos
jge
repnz
mov
shlb
add
call
inc
xor
push
not
lock
mov
mov
outsb
add
js
or
insl
jg
and
add
stos
add
imul
out
jg
add
adc
adc
fistl
xor
gs
stc
add
in
inc
les
or
loopne
add
or
test
nop
out
sbb
int3
sub
fmuls
insl
gs
xor
push
std
scas
cwtl
sbb
mov
data16
stc
jle
shlb
push
in
sbb
aaa
jmp
sub
icebp
mov
sti
pop
cmp
rclb
adc
ret
cmp
xchg
hlt
leave
push
add
xor
push
xlat
pushf
cld
lea
add
ds
lahf
sbb
out
testl
test
pop
cwtl
imul
pop
mov
sub
xor
into
movsl
rcrb
in
cs
or
test
xchg
pop
js
pop
fs
in
imull
jecxz
adcb
sbb
xchg
popf
js
add
movsb
ds
add
fstpt
jo
pusha
ja
aam
add
add
dec
adc
mov
cmpsl
mov
or
xor
inc
add
test
fwait
ljmp
or
aas
lahf
jb
mov
xor
ja
mov
test
sbbb
les
or
arpl
mov
xchg
jmp
add
mov
and
mov
outsb
add
pop
cmpsb
js
imul
add
adc
inc
adc
pop
inc
push
mov
or
mov
loope
movsb
xor
push
jbe
add
xor
sub
add
adc
add
and
push
pop
in
clc
jne
add
push
cmp
jmp
push
xchg
mov
sti
lock
sub
sub
mov
das
push
xchg
add
push
or
mov
or
in
std
pop
adc
leave
dec
add
add
out
repz
jbe
loope
lahf
pop
ja
loopne
xor
lock
push
mov
add
add
loope
dec
pop
push
stos
icebp
adcb
inc
and
add
pop
mov
and
aam
add
jg
sahf
add
mov
add
xchg
lret
dec
repz
and
pop
jecxz
aad
adc
add
shll
mov
pop
pop
xor
mov
jg
cmp
inc
enter
push
pusha
aaa
xchg
imul
push
jae
out
lock
out
les
or
adc
add
or
fiaddl
lea
or
push
dec
lss
mov
sub
dec
outsb
roll
push
sub
in
pushf
add
aaa
hlt
test
test
mov
inc
lcall
pop
push
mov
andb
inc
xchg
mov
xchg
rolb
push
dec
fidivrs
adcb
dec
ss
roll
dec
sbb
mov
add
lahf
lret
jmp
xchg
mov
add
fsubp
xor
addr16
popa
aam
leave
add
sub
pop
add
shll
push
lea
in
add
test
into
add
mov
xor
aas
jl
push
cld
mov
dec
push
sbb
dec
adc
add
pop
push
xchg
rclb
mov
sub
sbbb
popf
xlat
adc
sub
insl
mov
dec
add
sub
ss
mov
nop
ret
jnp
add
insl
adc
pop
xor
hlt
add
sbb
jo
xchg
stos
orb
sbb
sbb
xlat
xor
jno
sub
in
jae
and
pop
ja
or
pop
ds
loope
add
enter
stc
jo
test
lahf
lods
lds
jge
shrl
add
sahf
movsb
push
pop
sbb
into
dec
out
ret
and
mov
ja
pop
clc
inc
ror
out
xchg
add
xor
into
adc
or
add
add
xor
sahf
daa
jle
scas
push
adc
or
xor
cmp
mov
test
mov
sub
rorb
jp
inc
jo
je
cmp
mov
sarb
cmpsl
pop
xchg
mov
js
jmp
enter
xchg
scas
cmp
mov
xchg
jp
xor
pusha
dec
les
add
clc
pop
mov
out
add
and
out
add
cmpsb
dec
sub
push
xlat
cmp
jae
jnp
test
add
bound
adc
push
add
test
cs
xchg
das
add
mov
cmp
cmc
add
loope
push
xor
mov
cmpsl
rorb
add
add
push
test
dec
add
adc
shll
imul
mov
cmpb
mov
adc
sarl
xchg
iret
pop
dec
rolb
cmpsl
lods
pushf
sbb
xchg
xor
in
rolb
out
aaa
repz
pop
out
inc
pop
mov
push
push
fsubrl
adc
sti
cmpb
cmp
jecxz
leave
stos
jnp
int
fnstcw
or
cmpsb
gs
fisttps
and
add
pop
incb
push
ds
push
inc
inc
cmp
add
aas
clc
daa
ja
dec
pop
cmc
add
adc
push
add
pop
add
je
mov
aaa
lcall
popa
nop
add
addr16
outsb
sub
jg
sbb
inc
sbb
filds
push
push
mov
or
rcrl
cmp
jecxz
add
mov
add
icebp
addb
mov
inc
cwtl
adc
sub
leave
xchg
clc
dec
push
dec
add
rolb
shrl
orb
aam
push
ljmp
movsb
fnsave
add
loope
inc
inc
sbb
out
push
xchg
add
jmp
sub
inc
jecxz
add
adc
xor
or
in
push
sbb
add
push
rcrl
or
jge
inc
and
ja
jbe
sub
ret
nop
jecxz
sbb
sarb
push
loopne
outsl
dec
nop
push
sbb
mov
aam
adc
hlt
test
aad
push
inc
sbb
out
xchg
cmpb
jb
bound
and
lea
pusha
pop
inc
lcall
jnp
pop
xchg
idivb
hlt
mov
inc
add
dec
mov
clc
jl
dec
pop
or
outsl
sbb
mov
test
in
stc
pop
or
ss
nop
sbb
sbb
iret
insl
or
daa
cwtl
mov
rorb
jle
push
mov
cmp
dec
cmp
fisttpll
cmpsl
scas
push
xchg
bswap
fwait
inc
adc
aas
jns
mov
sbb
lods
add
stos
test
push
jo
ret
pop
clc
dec
cld
mov
das
andb
repnz
pusha
in
sarb
sub
dec
test
dec
outsb
dec
sbb
add
jg
stos
add
xor
adc
outsl
loopne
es
add
inc
inc
adc
in
popf
ret
jecxz
mov
xchg
dec
add
xchg
pop
sub
je
mov
icebp
aam
ret
in
sub
or
add
outsb
mov
jbe
adc
add
into
sub
and
cmpb
sbb
add
sbb
sub
xchg
and
add
idiv
es
pop
loopne
jge
sbb
push
jne
cmp
ljmp
xchg
cmpl
add
jge
xchg
out
jo
xchg
add
and
push
sbb
das
fsub
jo
inc
je
mov
or
fsubrs
adcb
movsb
xchg
push
xor
mov
or
dec
jle
add
call
adc
adc
popf
fwait
mov
add
push
mov
mov
or
add
mov
mov
add
push
mulb
imul
mov
arpl
nop
mov
outsb
divb
ja
push
sbbb
bound
dec
enter
lcall
repz
pop
add
xchg
mov
pop
inc
aaa
jbe
mov
jae
aaa
sarl
dec
adc
dec
add
xor
cmp
and
dec
cmc
pushf
divb
rorb
iret
and
cltd
add
mov
or
push
ret
test
addb
mov
and
rorl
add
xor
mov
xorl
xor
lods
insb
movsb
sbb
pmaddwd
sbb
and
scas
std
sbb
jl
in
add
jno
pop
cmpsb
cmp
outsl
cmpsl
push
mov
addb
add
push
add
jnp
cmp
lods
push
clc
mov
inc
or
push
dec
mov
pop
loopne
out
mov
add
sub
add
and
lret
es
insb
fwait
add
jg
out
or
js
add
data16
std
mov
jp
inc
mov
mov
jb
in
mov
add
je
lret
nop
dec
sbb
jp
sbb
loope
inc
fimull
dec
cmp
xor
cmc
xor
mov
mov
add
and
sub
fdivr
in
add
jns
or
jmp
mov
imul
jle
add
js
ror
test
xchg
mov
add
aaa
dec
and
pop
jb
pop
stos
add
nop
push
sahf
lcall
lret
add
imul
push
pop
sub
data16
enter
rolb
add
inc
xor
roll
dec
test
inc
clc
add
and
pusha
lea
pop
js
cmp
mov
dec
cmp
add
pop
fcoms
add
sub
jne
cwtl
shlb
inc
loop
sub
jo
jecxz
stc
addr16
xchg
add
inc
mov
jo
add
es
xlat
or
push
add
xor
and
mov
cmp
push
add
outsb
adc
push
loop
hlt
push
xchg
dec
jo
into
mov
or
dec
mov
in
jecxz
fadds
xor
adc
adc
dec
call
push
add
call
inc
mov
pop
rorl
inc
call
das
fsubs
pop
add
movsl
xor
push
xchg
outsb
mov
add
ss
enter
rolb
mov
jbe
in
jnp
clc
cli
inc
add
sub
into
add
mov
mov
aad
and
fsts
imul
xor
pop
sti
clc
or
adc
sub
in
xchg
pushf
dec
aas
js
in
mov
adc
repz
dec
cmpsl
cli
addr16
jmp
out
add
mov
jg
lahf
xor
inc
jecxz
or
or
sahf
dec
inc
mov
mov
add
or
ljmp
loope
pop
fisubrl
sub
xor
adc
mov
push
or
sbb
fmuls
dec
fidivs
mov
mov
out
and
cli
add
stos
andb
cmp
mov
icebp
ljmp
fdivrs
sahf
mov
cmp
sub
mov
aad
scas
jo
mov
loop
push
cwtl
cmp
lock
sub
sbb
xor
out
lcall
adc
movsl
inc
pusha
cmp
cmp
call
dec
inc
jmp
inc
lcall
dec
and
xor
loop
dec
xor
fcoms
cmpsb
add
addr16
rclb
popf
adc
sbb
imul
call
addr16
mov
icebp
adc
dec
lahf
push
xchg
cltd
pop
lds
sub
sub
mov
jecxz
add
shl
jns
ret
jle
shrb
jnp
xor
fld
mov
add
mov
add
int
push
sbb
adc
loop
add
jl
aas
sub
or
cld
push
or
daa
mov
stc
push
scas
add
jge
decb
adc
jmp
inc
add
stos
push
les
and
pop
sbb
sub
push
fucomp
imul
jmp
stos
mov
rorb
push
adc
or
test
stc
icebp
sbb
or
idiv
pop
adc
test
nop
pop
mov
orb
or
add
or
pop
ret
add
xor
lds
loopne
mov
cmp
mov
push
push
fiaddl
adc
mov
mov
mov
push
push
pop
mov
jno
test
add
insl
mov
add
mov
fs
inc
add
out
jmp
jb
std
adc
jo
stos
sbb
movsb
mov
stc
jo
lea
push
leave
movsl
mov
sar
cs
xchg
frstor
push
stos
cwtl
mov
loop
cmp
cmpsb
xor
flds
push
out
dec
es
test
cmp
add
jae
push
in
loopne
incb
out
negl
add
sti
pop
push
ret
arpl
ss
push
aas
nop
scas
dec
jmp
sub
cld
jmp
xor
add
add
inc
rorl
fstpl
add
mov
xchg
out
add
add
stc
rolb
mov
std
shll
loop
frstor
inc
jecxz
out
adc
mov
incl
das
or
pop
lods
addl
in
std
add
mov
mov
mov
pusha
mov
mov
adc
and
sub
dec
jmp
mov
mov
insl
dec
aas
sahf
jp
lahf
fwait
jg
sbb
paddw
inc
xchg
xchg
mov
loopne
mov
pop
fs
loopne
mov
js
add
xchg
ret
xchg
xchg
lea
stc
stos
dec
push
adc
scas
mov
push
jle
pop
mov
add
movsb
jae
inc
mov
mov
add
jne
jo
pop
add
cmp
mov
jl
or
outsb
add
fs
aam
xchg
push
mov
movb
mov
cmp
daa
mov
mov
dec
cli
ficomps
xor
sbb
add
repnz
cltd
inc
push
push
in
jmp
jo
roll
sbb
icebp
mov
add
stos
pop
outsl
lcall
xchg
rol
enter
pop
mov
xchg
adc
pop
sub
sahf
cmc
pop
addr16
push
fists
xor
call
enter
adcb
popf
jo
add
in
in
subb
call
cmp
out
pop
xor
in
jo
lret
inc
push
sub
jl
addl
xchg
icebp
cmp
fidivl
xor
mov
mov
sub
xor
arpl
sbb
loope
and
cltd
add
jmp
leave
jg
sub
out
popa
add
aaa
sub
adc
orb
addr16
add
pusha
in
add
movsl
jae
out
pop
test
xchg
or
cli
fstpt
and
mov
push
add
add
pop
test
outsb
add
repz
adc
and
aad
mov
mov
jmp
add
test
js
and
imul
test
jbe
sbb
sub
mov
jl
push
mov
add
and
pop
aas
mov
jns
lods
push
mov
shrl
mov
lds
scas
mov
clc
push
push
bnd
xor
sbb
and
inc
cmp
lods
cmp
jno
sbb
add
ret
ja
dec
add
push
or
cmp
stos
cmovle
adc
adc
push
repz
inc
add
mov
mov
pop
cmp
add
cwtl
sbb
outsb
das
or
push
pushf
and
push
das
add
out
imul
iret
push
cld
aad
or
inc
sti
das
pop
jb
add
dec
xlat
inc
jg
dec
mov
dec
test
jmp
add
movsb
add
xor
movsl
or
adc
hlt
sbb
and
or
negl
sti
repz
cmp
or
clc
cmp
mov
push
adc
es
add
push
lds
jb
jmp
or
push
jp
cmpsl
push
sbb
and
add
dec
jg
jl
adcb
ljmp
scas
add
faddl
xor
aad
rolb
rorl
in
jns
inc
inc
clc
sbb
add
inc
mov
repnz
insl
fbstp
jge
dec
pop
ljmp
add
data16
mov
in
fidivl
jns
pcmpeqb
mov
mov
pop
shlb
sub
adc
ret
adc
mov
aaa
xor
bound
insb
pop
mov
sub
test
inc
push
cmp
stc
cmpb
or
jp
loope
inc
subb
sbb
push
mov
push
mov
or
cmp
sbbb
adc
xor
call
add
fildll
dec
aam
jne
push
xor
loopne
stos
into
lahf
pop
andl
jo
inc
jmp
xor
fmuls
xor
pop
adc
mov
hlt
clc
push
mov
daa
ror
jne
inc
sti
dec
out
fs
push
jecxz
mov
or
add
test
outsl
inc
lea
mov
fsubs
dec
cmpsb
pop
jno
or
mov
jns
and
jnp
add
dec
or
paddw
lods
add
das
jp
cmp
lock
pop
add
inc
fwait
andb
js
cmp
pop
xchg
xlat
iret
mov
adc
popa
add
cmpsl
or
aaa
xchg
movsb
adc
jno
push
outsl
inc
repz
xchg
mov
andb
dec
cli
mov
push
or
ja
mov
mov
add
rorb
incb
daa
test
stos
enter
add
in
insl
mov
fdivrl
push
add
js
pop
mov
outsl
add
pop
or
add
ss
js
stc
add
lods
mov
mov
sbb
pop
xorl
xchg
xor
shrb
or
popf
das
xor
xchg
pop
loopne
xor
jno
sbb
inc
cmp
push
lods
jne
lcall
scas
repnz
adc
notb
jle
cmp
cld
aas
add
leave
dec
cmp
or
xlat
adc
movsb
dec
add
xchg
enter
enter
ror
mov
stc
add
xchg
or
cli
mov
xor
movsb
add
pushl
add
repz
push
xchg
mov
and
loopne
mov
and
push
jbe
add
lds
pop
dec
loope
js
add
sbb
inc
int3
add
ja
or
inc
outsl
jle
sub
lock
add
into
aam
jp
enter
stc
inc
fnsave
call
lods
shlb
adc
add
ret
pop
cmpsl
xor
lock
xor
xchg
mov
add
loop
inc
cmp
test
push
dec
mov
je
add
shl
cmp
jo
mov
mov
outsl
add
or
mov
dec
scas
arpl
pop
int3
add
xchg
sub
jnp
dec
adc
mov
add
movsl
mov
mov
int3
test
add
add
push
les
in
outsb
xor
xchg
and
sbb
mov
and
inc
and
pop
enter
push
loop
and
mov
test
add
adc
orb
jbe
cli
addr16
sbb
loopne
mov
dec
sub
jnp
icebp
inc
cwtl
adc
sub
adc
xor
add
stc
xchg
cwtl
mov
sbb
notb
in
sbb
mov
adc
xor
push
out
cmp
add
shll
cmp
lock
add
xchg
add
sub
daa
sahf
dec
fidivrl
push
lds
push
pop
add
punpcklbw
cltd
and
inc
in
into
add
mov
xchg
int3
cmp
ret
and
push
dec
and
add
rol
sbb
loop
hlt
cmp
bound
mov
repnz
pop
jecxz
adc
test
adc
test
cmp
pop
cmpsb
leave
pop
sbbl
insl
stc
and
outsb
add
pop
sbb
add
ror
stos
outsl
fsubrs
add
xor
arpl
sbb
cmp
adc
fstpl
aam
mov
shl
and
jle
lahf
jge
jp
rcrb
addr16
inc
mov
or
push
jmp
andb
cwtl
mov
loope
mov
repz
std
and
push
mov
stos
repz
jle
sahf
cmp
sub
sar
pusha
mov
mov
add
lds
xor
adc
dec
call
add
ret
cltd
mov
sbb
or
xchg
mov
jae
and
push
sub
push
scas
xor
mov
push
jo
push
mov
adc
in
popf
cmp
or
pushf
push
adc
insb
rcrb
adc
cld
call
xchg
addb
filds
mov
or
insl
ret
pushw
inc
pop
xadd
popa
add
lods
pop
add
enter
add
push
cmc
add
or
push
ja
adc
cmp
xchg
mov
add
sub
add
adc
je
and
add
loopne
cltd
pop
test
mov
popf
out
fstps
jae
push
pop
mov
out
add
jo
add
lsl
daa
sbb
sbb
lock
xor
or
cmc
loop
xchg
cmovle
fs
loopne
out
xchg
addl
rclb
jae
mov
add
adcb
xor
jbe
xor
daa
adc
adc
cmpsl
dec
test
sub
test
pusha
inc
loope
inc
jbe
mov
xor
imul
leave
lds
sbb
and
and
mov
cmp
arpl
pxor
jle
and
mov
das
add
outsb
inc
cmpsl
icebp
push
ret
sahf
cmpsb
les
lock
movsb
stc
leave
sub
inc
pop
push
cmp
out
testl
sbb
pop
and
fsubl
nop
dec
hlt
push
das
add
test
add
ficomps
jns
mov
add
ss
js
insb
call
mov
inc
jl
xlat
or
push
inc
lcall
mov
fistpl
adc
dec
mov
mov
test
cmpb
lret
pop
cmovbe
popa
rolb
pop
or
cmp
lahf
add
stos
jl
ret
rcrb
dec
test
cmp
out
cmp
cmp
pop
cmpsb
cs
and
and
cld
add
pop
cmp
pop
add
in
pop
lahf
in
sbbb
sub
mov
out
dec
push
enter
fs
fcompl
push
xchg
fs
and
lds
test
add
out
xor
pop
cmpb
stos
push
adc
les
ja
pop
mov
in
dec
ret
adc
add
je
loopne
pop
leave
jo
js
dec
outsb
scas
push
pop
pop
lock
sbb
mov
int
and
movsb
mov
sub
xchg
hlt
sub
push
stos
and
add
pop
mov
mov
mov
stos
mov
xchg
testb
bound
sbb
les
divl
arpl
test
xor
popa
add
imul
cld
mov
add
loopne,pn
cmp
les
out
push
cmp
dec
add
push
inc
icebp
or
sti
shlb
add
mov
xchg
pusha
mov
out
add
ret
or
movsb
and
adc
add
pop
inc
testl
jp
pop
gs
cmp
ucomiss
add
leave
pop
xor
lahf
ret
pop
ds
push
call
push
sarl
in
mov
inc
xor
sub
loope
rcll
jns
xor
out
add
stos
sub
mov
jbe
add
mov
psadbw
fucomi
icebp
pop
xchg
cmp
jmp
push
gs
int
jge
outsl
mov
push
xchg
in
pop
jle
push
mov
ficomps
andb
clc
je
and
jb
push
mov
iret
sbb
loop
mov
mov
cltd
nop
rclb
or
push
sbb
iret
sub
mov
lds
push
test
insl
sbb
sbb
add
out
add
mov
and
int3
jmp
and
sbb
mov
or
lahf
ret
mov
dec
cs
add
ficoms
sub
inc
jp
sbb
mov
pop
cmp
movb
dec
dec
lock
sbb
xchg
das
repz
dec
xor
cs
pop
pop
rcrl
mov
xchg
out
sub
insl
ja
jp
pop
andl
mov
xor
adc
loopne
mov
add
stc
add
repnz
test
in
shl
aam
cmp
inc
adc
jmp
adc
popa
mov
out
push
lods
gs
inc
inc
call
data16
sub
add
dec
dec
testl
jb
sub
add
jne
ret
add
push
out
and
or
clc
or
imul
stos
pop
jge
xchg
ljmp
mov
add
pop
add
outsl
mov
sbb
push
mov
dec
add
mov
add
out
test
push
xchg
in
movsl
scas
shlb
add
mov
adc
pop
jb
pop
test
jbe
dec
mov
jl
lock
push
adc
cmp
add
adc
xor
divps
mov
push
repnz
push
loop
push
add
and
repz
pop
icebp
aad
imul
adc
add
xor
xchg
push
add
and
and
or
adc
addb
arpl
hlt
inc
mov
pop
sub
sub
xor
int3
jmp
jb
inc
add
fiaddl
push
xchg
jns
jno
push
push
orl
ret
lock
ss
lret
adc
cmp
imul
in
in
adc
fs
flds
mov
sub
fsubl
shr
add
in
dec
ds
jnp
aas
push
sar
popf
jmp
push
jno
or
pop
jecxz
cmp
jmp
add
pop
add
pushf
test
cmpl
ljmp
pop
mov
add
mov
add
mov
test
xchg
and
xchg
fists
cwtl
and
inc
xor
mov
push
negb
call
mov
rolb
push
cmp
cmp
xchg
fistl
add
sub
jge
add
inc
fimull
push
jbe
add
ja
outsb
lea
pminsw
mov
cmc
daa
cmp
test
call
add
push
nop
mov
sbb
mov
inc
cmp
mov
inc
or
mov
mov
movsl
add
nop
loop
sti
mov
jo
loopne
add
mov
pop
testl
jp
dec
jbe
push
int
inc
icebp
pop
push
in
outsl
or
mov
lcall
push
sub
loop
fs
pushf
xchg
add
shl
ficoms
add
xchg
and
sarb
aad
pop
xchg
sub
rol
lret
nop
sub
cmp
addr16
testb
mov
xchg
mov
pop
and
in
popf
mov
push
xor
add
inc
gs
pop
sahf
sbb
xchg
pop
fcomip
mov
repnz
mov
loopne
stos
or
dec
add
sub
dec
gs
add
xorl
cmc
mov
mov
cltd
sbb
push
add
faddl
pop
stc
pushf
rorb
push
loop
mov
cmp
int
cld
lret
dec
and
stc
ds
add
js
sbb
cmp
scas
sarb
mov
dec
add
inc
fwait
insb
out
fs
add
inc
jp
test
add
mov
jb
add
hlt
lods
xchg
fistpll
repnz
scas
and
mov
pop
dec
add
outsl
test
lcall
or
or
aaa
loop
mov
cmp
mov
sub
mov
cmp
pop
pop
xor
loope
dec
lret
inc
sbb
out
cmp
shlb
leave
imul
lea
jae
dec
adc
pushf
push
cs
fwait
add
and
popa
test
int3
repz
mov
or
mov
add
bound
mov
add
je
and
sbb
aam
shlb
fistps
pusha
adc
pop
test
add
aas
sub
rclb
in
fsubs
cld
pusha
inc
push
jg
jge
rclb
inc
clc
add
stos
jl
sahf
fldl
movsl
sbb
jbe
add
repz
mov
jg
daa
add
dec
mov
cmp
test
mov
ret
adc
push
push
mov
aaa
stos
jecxz
ds
add
leave
adc
movsl
punpcklbw
daa
stos
popf
mov
mov
sub
or
sbb
push
adc
mov
add
xorl
and
rcrb
add
gs
add
outsl
dec
pusha
mov
aaa
es
dec
push
push
add
lret
inc
cwtl
xchg
add
add
flds
jmp
adc
sbb
cmpsb
insl
jo
gs
pop
stos
fsts
pop
mov
cmp
fcoms
xor
add
in
add
push
imul
or
sbb
shlb
in
jb
sub
jnp
add
pop
mov
mov
rorb
add
push
rol
scas
je
mov
dec
ret
roll
out
clc
test
push
andb
out
add
sbb
sub
outsl
jmp
push
out
add
ljmp
mov
add
pop
jo
or
rorl
or
dec
jmp
cmp
jle
dec
jecxz
fmull
aas
add
addl
add
or
xchg
and
jp
add
sub
pop
lcall
xchg
nop
outsb
int3
add
add
add
jge
shl
fs
cwtl
aam
int3
test
test
pusha
xchg
sbb
jbe
fiaddl
out
push
cltd
pop
orl
adc
inc
add
scas
mov
lret
add
out
cmp
mov
pop
rclb
jns
out
xor
pop
add
movsl
and
mov
add
ds
outsb
cmp
fbld
sbb
rolb
repz
cwtl
int
mov
add
mov
clc
sub
lea
dec
adc
loope
push
cmp
inc
push
cmpsl
lods
and
and
mov
aas
jae
addr16
push
mov
inc
cmc
shrl
test
cld
xchg
and
ja
add
iret
cltd
movsl
mov
andb
out
xlat
repnz
xchg
jp
cmp
or
adc
testb
roll
add
movsb
and
add
jl
push
sbb
stos
push
add
scas
mov
pop
outsb
pushf
movl
call
jge
jecxz
aas
or
cmp
push
add
dec
jl
pop
push
xor
out
paddb
in
test
sub
sahf
mov
jb
les
add
fldt
add
adc
clc
movsl
and
sahf
nop
and
adc
pop
add
enter
arpl
add
sub
sub
fists
push
pushf
mov
cmpsb
jbe
adc
icebp
pop
fadds
stos
mov
or
movsl
add
add
pop
dec
or
xor
mov
in
popf
lret
add
pop
mov
lods
arpl
jne
xor
mov
pop
mov
jne
pop
ja
add
or
pusha
xchg
test
enter
bound
and
js
pushw
ret
or
das
in
and
fstps
mov
or
cwtl
add
movsl
ja
jl
add
push
jo
stc
add
mov
fwait
sbb
push
aad
adcl
sbb
or
stos
add
iret
mov
fs
fimuls
icebp
lret
hlt
sti
cmp
xchg
cmp
mov
lock
jmp
add
mov
adc
mov
xor
push
xor
pop
movsb
add
xor
add
sub
pusha
addb
sub
stos
out
rcrb
gs
mov
scas
clc
loop
push
jno
adc
mov
push
test
std
xchg
inc
sbb
and
add
inc
sub
daa
mov
jmp
mov
addr16
xchg
ds
mov
inc
xor
in
js
gs
adcb
dec
mov
pushf
add
mov
rcll
pop
or
push
outsb
cltd
add
sub
loop
add
jg
mov
and
rcrl
out
ja
stc
loop
out
ret
fs
rclb
fnstsw
sbb
mov
jns
add
xlat
add
addl
add
mov
cmp
add
mov
loopne
aaa
dec
jno
add
push
xor
xchg
add
jecxz
jp
out
add
sbb
or
fsub
add
mov
movsl
xor
add
jg
out
push
sub
pop
pop
jl
add
sarb
mov
pop
add
or
add
push
psrld
mov
mov
mov
iret
in
mov
loop
addl
ds
enter
add
inc
sub
cwtl
add
faddl
cwtl
bound
add
andl
flds
add
pop
je
push
mov
addl
sbb
lock
stos
bound
imul
add
mov
jbe
out
mov
xchg
sub
in
in
rorb
dec
test
and
add
mov
mov
lock
dec
cmpsb
lret
adc
gs
ds
sbb
std
fsubrp
add
inc
add
aam
jno
add
add
or
push
repnz
mov
xor
sbb
pop
test
inc
nop
mov
hlt
pop
aad
test
icebp
push
mov
xor
xchg
shlb
test
sub
inc
jno
sbb
cmp
dec
popf
cmpb
add
pop
cltd
add
or
add
xchg
mov
fldl
pop
loope
xlat
leave
dec
jne
add
mulb
hlt
add
pop
xor
pop
add
mov
adc
push
jne
add
pop
sbb
dec
add
out
mov
into
int3
in
or
xchg
cmpsb
dec
idivb
pop
in
loopne
je
jg
ja
enter
lods
test
fdiv
add
neg
xor
push
jg
sti
rclb
push
shll
and
imulb
cmpsb
dec
cmp
sbb
bound
mov
jb
imul
rcrl
sbb
aam
and
ja
add
xor
in
daa
orl
push
dec
jbe
insl
mov
jo
pop
dec
popf
add
cwtl
dec
and
xor
or
inc
lea
add
add
adc
mov
jle
aas
adc
add
outsl
sahf
or
adc
and
pop
jecxz
test
neg
sti
add
adc
cld
add
jne
pushf
mov
cmp
cli
test
setb
hlt
mov
out
xor
push
push
pop
pop
test
mov
or
sub
syscall
fcomps
shlb
js
add
mov
clc
ret
cli
add
inc
outsl
hlt
xchg
ds
xor
loope
ret
lods
sbbb
js
add
and
add
sbb
pop
cmp
enter
test
and
and
and
adc
subb
dec
and
and
adc
lods
inc
adc
fists
pop
cld
dec
xor
dec
das
mov
jb
in
xchg
add
dec
xchg
xorb
add
mov
adc
int3
mov
and
fs
xchg
inc
inc
or
or
arpl
cwtl
add
das
mov
dec
insb
scas
sbb
pop
andl
and
aaa
call
loopne
or
hlt
sti
add
out
dec
sub
sub
jb
aad
icebp
pop
leave
pop
shrb
inc
cmp
sar
int3
outsb
movsl
add
ja
mov
dec
add
xchg
pop
lods
pop
sub
sub
sbb
or
inc
testl
and
out
add
or
icebp
outsl
in
and
add
pop
ljmp
mov
testb
fsincos
rol
test
in
add
inc
jbe
ljmp
push
add
scas
test
jp
fidivl
inc
add
mov
cmovnp
pop
bound
fidivl
push
lods
loopne
popa
loopne
sub
jmp
jo
mov
addl
cmp
push
lods
lcall
push
push
add
faddl
xchg
add
imul
dec
adc
jo
cmc
adc
stc
sti
mov
add
stos
mov
add
xchg
and
xchg
add
sarl
and
mov
push
push
arpl
rcll
lcall
sbb
fcmovbe
incl
sub
mov
rcll
add
jbe
out
jge
add
lret
fidivrl
mov
dec
and
shr
scas
ja
addr16
in
inc
xchg
mulb
repnz
push
mov
mov
imul
data16
in
int
fnsave
jge
add
insb
test
pop
sbb
sub
daa
dec
push
push
or
jl
or
cmp
stc
jb
pop
std
cld
mov
ficompl
fildl
mov
in
add
push
jmp
lds
stc
jbe
sarb
lods
sub
adc
outsb
push
and
out
and
nop
call
fcompl
cmp
mov
jae
mov
or
orl
out
push
jecxz
pop
repz
ljmp
xchg
mov
fwait
inc
and
fiadds
or
and
sti
or
inc
jmp
add
shl
icebp
lods
mov
sbb
dec
or
push
and
and
sahf
shr
push
sub
loopne
loopne
sbb
shrb
sti
jae
mov
pop
push
iret
push
insb
ret
inc
mov
pop
popf
mov
dec
jmp
mov
add
mov
jb
mov
iret
xchg
inc
inc
rcl
mov
cmp
repnz
adc
xor
insl
clc
adc
push
les
xchg
xchg
jnp
pop
cmpsb
pop
rorl
pusha
ljmp
add
mov
mov
rclb
lcall
aaa
dec
and
xor
je
pusha
shrb
sub
add
push
add
rolb
push
push
lods
xchg
test
push
add
jg
xchg
cld
jmp
dec
fsubr
push
mov
call
dec
mov
add
inc
clc
cmpl
lods
fxch
pushaw
fs
idiv
add
fsubrp
jno
mov
mov
push
mov
inc
in
jnp
pusha
jo
gs
dec
repz
dec
or
dec
pop
cwtl
int
adc
jmp
shll
xor
cli
ja
add
aad
call
sbb
push
ss
cmp
mov
fiaddl
subb
jmp
add
dec
jle
lcallw
lods
cmp
in
outsl
sbb
repnz
mov
sub
xor
sarb
outsb
in
popa
out
pop
cmpsl
imul
mov
add
mov
add
ret
hlt
aad
js
push
je
push
lea
lldt
imul
sbb
pop
push
push
shrb
push
add
outsb
fiaddl
add
loopne
pop
sub
pusha
enter
adc
push
cs
add
subl
add
imul
add
dec
or
add
mov
jno
add
imul
sub
outsl
insl
loopne
clc
pop
push
lods
das
jle
push
dec
jbe
add
es
insb
xor
cmp
add
xlat
das
loop
xchg
mov
in
dec
or
mov
repnz
fnstsw
xor
sahf
pop
inc
not
add
add
sar
adc
das
mov
or
orl
push
inc
pop
xorb
mov
or
fiaddl
mov
jl
jnp
add
aam
std
sbbl
pop
lahf
push
imul
imull
and
fst
cmp
adc
hlt
shlb
fwait
add
pusha
sbb
pop
rcrl
cs
roll
rcrb
jne
lock
or
or
xchg
repz
add
fwait
rolb
push
scas
repz
push
shll
cmpsl
push
stos
in
aam
imul
add
mov
out
clc
ds
fisttpl
adc
lods
loop
mull
and
cmp
in
and
add
pop
scas
xchg
movsb
clc
adc
cld
in
mov
xor
add
fs
jge
adc
into
add
and
das
add
je
pop
jle
push
out
or
pop
cmp
add
sub
mov
into
pop
push
rcrb
js
insb
add
popf
mov
cmp
jle
adc
sbb
dec
test
pop
jno
fwait
cmp
add
and
in
adc
mov
inc
ltr
add
bound
pusha
adc
add
or
mov
out
out
jo
sub
popa
cltd
jbe
cmp
cmp
xor
insb
push
cmp
jecxz
fwait
cmpsl
cltd
fidivrl
not
cmp
inc
pushf
pop
mov
mov
add
sarl
mov
int3
add
aaa
push
loopne
lock
xor
inc
movsb
jl
or
xchg
out
lcall
mov
fidivs
sbb
inc
maxps
jns
iret
adc
jge
xor
mov
jo
jl
mov
out
add
js
sti
repnz
xorb
cmpsl
sahf
mov
into
push
popa
or
sbb
cmc
sbb
fadds
jno
add
lea
cwtl
aas
enter
dec
mov
int3
inc
dec
inc
js
movsb
xchg
add
inc
pop
in
aam
lock
jbe
out
in
rcll
nop
jnp
mov
shll
or
ror
scas
add
shlb
jb
pusha
and
sarl
pop
cmpb
pop
add
pop
and
add
mov
sub
or
fwait
subl
nop
pusha
add
jne
sbb
stos
hlt
push
fistpl
push
subb
sub
add
mov
mov
inc
push
sbb
jge
and
in
add
xchg
out
pop
add
pop
outsl
icebp
pop
or
or
imul
add
bound
xor
mov
mov
rcrb
xchg
fisttpll
adc
add
dec
fdivrl
xor
scas
stos
sahf
cmp
jno
loopne
xchg
dec
xor
sbb
pop
sub
ret
iret
push
scas
sbb
mov
add
out
inc
xor
je
add
or
dec
arpl
rcl
ja
and
pop
cmp
loopne
fisubrs
xor
sarb
add
gs
das
xor
pop
lahf
test
cmp
and
andl
push
fsts
sti
cmp
je
and
fwait
cmp
mov
popa
adc
negb
rolb
or
xchg
les
insl
and
xchg
aas
inc
lret
xchg
mov
adc
lock
push
fsubp
push
xchg
sbb
mov
sete
cmp
out
push
and
shl
ds
lcall
sub
stc
add
dec
inc
outsb
or
mov
mov
xchg
insl
out
fmuls
xorb
jno
add
cwtl
add
adc
jle
jg
lcall
jnp
outsb
loopne
add
insb
testb
pop
clc
add
ror
in
test
adc
pop
out
movsl
loop
shr
fwait
add
adcb
sub
dec
inc
sahf
add
popf
add
cld
or
add
jbe
pop
sub
pop
test
sbb
lea
faddl
loope
popa
dec
ret
ljmp
sahf
add
mov
shll
sub
fsub
add
daa
fsub
scas
ljmp
loopne
aad
aas
or
adcb
fldl
push
add
mov
xchg
jae
jns
lcall
push
and
loop
push
scas
fwait
adc
xlat
dec
inc
mov
add
sub
adc
test
pop
jecxz
loope
jnp
sub
ljmp
mov
jb
xor
pop
dec
adc
push
das
cmp
add
lcall
clc
add
mov
pop
add
dec
into
pop
dec
push
pop
nop
js
nop
lods
push
adc
inc
stos
push
xor
dec
add
and
pop
mov
sarl
andb
jmp
cmp
mov
or
rcl
add
fdivs
aas
push
sub
mov
sbb
mov
mov
hlt
cmpb
testb
scas
mov
jg
cmp
adc
xor
and
add
xor
add
movsb
mov
adc
lods
dec
inc
mov
fsubrp
add
add
scas
cmpsb
insb
and
push
outsb
repnz
adcb
rorl
add
mov
mov
jmp
sbb
xchg
pop
push
pop
aam
pop
fistpll
dec
or
out
lock
jle
movsl
popf
rclb
mov
jo
fidivrs
lods
mov
imul
in
fistpl
xchg
cmp
lcall
fists
sub
aam
jns
insl
sbb
out
add
ret
mov
lock
mov
decb
add
pop
lret
mov
or
push
add
arpl
sarb
add
pop
sub
jo
jo
mov
data16
lret
pop
bound
sti
adc
push
push
inc
mov
mov
cmp
stos
dec
dec
fcoml
movsl
movsb
les
mov
in
xchg
pop
mov
add
dec
fbstp
sbb
pushf
lods
push
mov
dec
dec
xor
xor
repz
push
outsb
add
out
mov
aad
jle
and
movsl
std
push
adc
dec
add
lret
int
and
rclb
jp
inc
clc
lock
pop
or
and
pop
gs
insb
push
adcb
jnp
jl
pop
adc
push
sbb
rorb
xchg
mov
hlt
add
inc
movsl
dec
nop
fadd
jbe
fdivr
or
sbb
lock
push
add
or
xor
rol
into
arpl
decl
cmp
sti
and
mov
or
mov
aam
add
je
pusha
or
sbb
movsb
pop
rcrb
ucomiss
data16
sub
rclb
lea
add
leave
in
mov
xor
fildl
les
test
movsb
stos
inc
jo
out
pop
hlt
nop
fimuls
push
push
outsb
in
add
add
add
iret
pop
jne
les
sub
fistl
mov
adc
clc
imul
mov
jno
or
loopne
pop
fwait
addl
incb
mov
adc
mov
mov
stos
adc
add
add
lock
dec
push
ljmp
enter
femms
mov
dec
lods
adc
jne
cmpsl
mov
pop
pusha
cwtl
push
push
or
fnstsw
inc
add
add
sub
add
pop
popa
xchg
jnp
std
loopne
push
or
adc
cwtl
xor
xchg
dec
sub
sbb
or
loopne
push
add
repnz
xor
mov
add
mov
lahf
push
into
hlt
movsb
jo
imulb
add
lret
adc
mov
in
or
cmp
add
es
movsl
rorb
lret
rcrb
repz
and
add
mov
add
insl
popa
shrl
add
fwait
cmp
push
loopne
in
scas
rcrb
pop
push
cmp
mov
testl
int3
inc
mov
sbb
push
outsl
cmpsb
sbb
add
pop
in
push
pop
adc
jns
mov
movsl
xor
and
and
std
test
adc
pop
cmc
mov
and
int
xchg
xchg
imul
loopne
out
adc
call
add
mov
add
sub
add
push
jo
add
outsl
dec
sbb
mov
inc
cmp
or
cmp
pusha
int
mov
rclb
sbb
pop
icebp
add
push
mov
inc
or
int3
aas
pop
mov
xor
mov
jns
pusha
addr16
add
rcl
je
cmp
in
aaa
call
add
into
xchg
mov
xchg
pop
mov
popf
mov
loope
and
int3
pop
xor
xchg
add
dec
mov
cwtl
stc
add
data16
aam
fistps
add
fldl
add
pop
cmp
adc
jne
test
add
cltd
imulb
push
iret
stos
popa
hlt
loopne
aas
inc
sbb
es
or
add
fsubrl
lds
jbe
fbld
jge
push
jne
xor
andb
popf
jo
movsb
out
mov
addl
add
pop
add
add
aam
jne
es
addr16
out
enter
push
xchg
int3
rclb
jle
xchg
ror
add
mov
add
jp
pop
decl
les
das
lahf
dec
push
push
jmp
mov
pop
mov
push
xchg
mov
add
jns
fs
call
xlat
jge
mov
mov
or
sub
subb
dec
es
mov
cmp
mov
add
push
js
sbb
dec
repnz
mov
adc
and
jno
inc
js
and
sbb
ljmp
arpl
pop
popf
adc
or
addb
or
push
cmp
sahf
dec
repnz
pop
xchg
scas
sub
js
add
mov
cmp
inc
jl
lods
aaa
add
or
stos
push
addb
cld
adc
mov
clc
jmp
or
fists
push
clc
lcall
inc
movl
cwtl
mov
mov
mov
roll
sub
adc
jo
push
pop
inc
popf
inc
sti
pop
fcomip
xor
shrb
dec
fs
sub
pop
fisttpll
fdivs
setg
inc
cs
and
add
jle
insb
dec
jg
cltd
add
pushf
repnz
loope
pop
add
jle
pop
xchg
jo
xchg
add
jns
sbb
lds
xor
fstl
into
es
jg
iret
mov
testb
add
stos
in
dec
add
test
mov
dec
scas
popa
pop
xor
arpl
sbb
les
into
das
add
jne
mov
data16
inc
jb
xor
movsl
inc
aad
lret
fadd
sbb
add
les
jo
jecxz
cmpsb
pop
or
pop
add
popf
shll
outsb
xor
inc
jle
adc
adc
mov
inc
jmp
aas
xor
mov
push
scas
rclb
add
push
cltd
stos
add
and
jp
fmull
xor
jg
adc
inc
xchg
sahf
mov
fcomps
mov
lods
cmp
cmpsl
dec
dec
int3
add
mov
cmpb
ret
jne
xor
test
pushf
sarb
sarb
xchg
cld
add
daa
movsl
ficoms
pop
push
add
sbb
add
xor
and
mov
mov
sbb
xor
cmpsb
enter
pop
push
in
sarl
lock
add
cli
xchg
add
push
xchg
mov
cmpsb
ficompl
mov
or
add
pop
pop
inc
sub
imul
and
aaa
cmp
sbb
push
pop
mov
enter
push
xchg
out
pop
jmp
imul
jnp
mov
push
add
cmp
pop
imul
sbb
and
inc
cmp
fsubl
test
popf
aam
les
sbb
dec
add
xor
jno
enter
sbb
push
daa
add
xchg
ja
ffree
add
sbb
jmp
mov
mov
or
lret
sarb
cmc
cwtl
add
mov
adc
ja
popf
stc
push
aas
sarl
mov
int3
fmuls
adc
imul
or
lock
pop
lret
cmpsb
lock
mov
leave
les
rolb
xor
and
mov
jg
out
add
call
xchg
dec
test
cld
testl
ja
fucomp
shll
call
in
das
out
cli
add
xor
scas
jecxz
push
sub
pop
mov
sub
jmp
adc
mov
iret
js
pushf
addr16
loopne
add
jp
push
add
xchg
ss
add
clc
lahf
cmp
lods
lds
outsl
pushw
pop
dec
mov
ffreep
add
into
mov
clc
aas
fldln2
xor
mov
cmp
adc
add
cmp
shrl
inc
jge
and
add
inc
or
cli
xchg
add
movsb
mov
add
dec
cmp
add
adc
mov
pop
add
filds
out
daa
out
mov
add
mov
cmp
push
jb
shrl
rcrb
push
addb
and
test
out
sub
in
jmp
roll
fiaddl
hlt
mov
mov
cmp
or
mov
addr16
push
add
xchg
cmpsb
dec
adc
push
add
sbb
xor
cmpsb
pop
add
shr
xchg
lods
mov
jge
push
add
push
js
xchg
aam
mov
jle
xchg
push
add
pop
add
lret
lds
sti
rolb
adc
stc
loop
lock
xor
jge
mov
jbe
cmp
and
xchg
loopne
lahf
dec
in
add
jo
es
scas
or
in
jp
add
add
and
jge
outsl
and
cmp
and
insb
and
add
xchg
dec
cs
ja
add
push
inc
int
dec
loope
lea
jae
mov
call
jns
mov
cld
or
sbb
fcoms
aas
lcall
and
jo
adc
fucomp
mov
clc
scas
cs
or
mov
loop
les
loopne
mov
pop
add
mov
push
jg
add
jmp
add
rclb
sbb
outsb
mov
cmc
ficoml
test
sub
sub
jnp
scas
mov
clc
jne
xor
add
in
mov
adc
and
cwtl
add
pop
jl
fnsave
add
outsl
push
add
fcompl
dec
into
fisubs
xor
sub
mov
test
sti
add
sar
inc
sub
jl
add
mov
pop
int3
mov
mov
add
fwait
rcr
jnp
adc
cmp
ret
mov
mov
cs
pushf
pop
add
std
adc
inc
dec
and
xor
ret
jg
out
sbb
repz
pop
ds
aad
scas
mov
mov
add
orb
in
sub
jo
xor
out
pop
inc
adc
mov
out
jnp
mov
loope
sahf
or
sbb
loopne
dec
add
icebp
mov
cltd
jns
jge
or
adc
jb
add
aas
cli
xchg
popw
sbb
inc
jne
push
lock
push
mov
dec
add
cmpsl
and
mov
out
mov
imulb
push
jno
clc
out
and
add
ss
call
push
pop
adc
dec
jg
add
dec
xchg
dec
adc
sahf
mov
mov
add
fcmove
mov
sbb
pushf
hlt
add
inc
mov
cmp
push
push
sbb
sahf
adc
mov
cld
nop
into
dec
movsb
sbb
lods
and
xchg
std
pop
fdivrs
lea
sub
dec
cmp
pop
ret
fdivl
stos
xor
out
xor
iret
call
mov
out
or
gs
cltd
psrlq
lret
xchg
sarb
add
cmpb
in
movsl
les
sti
test
es
push
dec
cmpsl
push
jp
fsts
neg
add
int3
sub
shr
xchg
shl
add
mov
jae
int3
mov
jne
ret
loopne
fiadds
test
shlb
xchg
loope
das
out
popa
and
add
clc
roll
mov
inc
cmp
lock
popa
add
mov
mov
push
sub
sarb
or
push
roll
add
cld
dec
push
lret
adc
sbb
lds
jbe
mov
xchg
icebp
mov
rolb
add
push
lods
fnstcw
mov
fwait
add
imul
sbb
mov
dec
pop
cmc
push
fidivs
cmp
jp
sahf
loop
scas
rorb
sbb
pop
les
jo
xchg
cmp
xchg
mov
sbb
push
jbe
imulb
and
testl
fisttpl
xchg
jne
fiadds
inc
cmp
fsts
pop
sbb
fst
add
mov
mov
nop
push
jl
dec
jle
int3
add
adc
insl
inc
xor
sub
cmpsb
mov
jecxz
rolb
dec
clc
jno
les
addr16
dec
or
add
lret
imul
and
stos
cmp
push
roll
or
jo
xlat
mov
push
adc
pushl
lret
cs
sub
imul
mov
sbb
add
pop
popa
mov
sbb
mov
add
dec
daa
add
jns
sbb
mov
sub
adc
insl
pop
add
shlb
rcrb
ret
adc
mov
pusha
pop
jb
sub
inc
xor
mov
pop
push
push
fs
outsb
ss
push
movsb
add
orl
aam
push
add
lret
scas
inc
lahf
mov
or
and
sbb
or
pusha
ret
in
and
mov
push
repz
add
rclb
mov
pusha
rcr
pop
mov
push
ds
loopne
cmpsb
dec
movb
les
out
pushfw
pop
add
adc
hlt
add
test
add
mov
adc
xchg
pop
in
add
cmp
and
out
repnz
jge
jl
add
xchg
add
pop
data16
in
push
push
movsb
push
negl
inc
ja
add
and
je
cmp
pushf
inc
ss
add
arpl
jmp
and
mov
ret
push
or
rolb
test
cltd
jb
push
arpl
out
and
jl
add
popa
sbb
mov
add
or
push
dec
mov
add
shl
cmova
add
arpl
add
jmp
inc
into
cmpsl
inc
cmp
add
jle
push
out
inc
or
cmp
ja
lods
xchg
mov
mov
add
sub
ficompl
add
test
mov
cmp
add
mov
fildll
shl
xor
sbb
pop
loop
xchg
mov
xchg
sahf
adc
bound
ret
pop
mov
push
cmp
add
jge
pop
sub
push
mov
int3
mov
add
inc
mov
cmpsl
xor
mov
dec
or
jb
dec
ljmp
jg
call
in
cli
add
test
loope
cmc
mov
stos
fwait
pop
jg
andb
sub
popw
in
not
addb
add
add
dec
or
test
mov
jl
ljmp
pop
xlat
xchg
xor
js
jp
lea
mov
inc
jno
pop
mov
flds
decb
adcl
add
and
mov
lea
jle
inc
add
add
add
sar
sbbl
add
cmp
push
cmp
or
dec
subb
dec
lahf
je
jl
dec
xlat
clc
sub
js
mov
inc
adc
adc
mov
inc
inc
jae
sbb
dec
lods
inc
sub
jo
jbe
ds
mov
mov
xchg
clc
sti
mov
ljmp
adc
and
push
adc
aad
fs
mov
and
lcall
sbb
jbe
add
loop
or
and
or
cwtl
enter
jae
xchg
int3
lock
add
in
and
add
add
flds
cmp
lock
jmp
add
inc
push
js
and
mov
dec
pushf
bound
cwtl
iret
fs
dec
ljmp
xchg
xchg
dec
imul
xchg
mov
mov
mov
mov
add
add
std
das
sbb
mov
repnz
dec
clc
add
pusha
fucom
adc
push
add
insb
adc
mov
add
inc
pop
sbbb
dec
and
cmc
mov
stos
cs
test
shl
mov
scas
add
xlat
mov
push
add
jno
loopne
pusha
jnp,pn
cmpsb
bound
ja
cmp
adc
sbb
flds
das
add
or
pop
hlt
lcall
xchg
mov
lea
fs
or
push
push
shr
loop
test
xor
mov
xor
jmp
int3
push
cmp
out
push
sbb
mov
and
pop
and
pop
mov
nop
jge
out
dec
add
mov
in
add
adc
aaa
pop
sub
bswap
adc
mov
push
pusha
rcrb
frstor
popa
in
xchg
mov
in
adc
cmpsl
andb
and
rcrl
lods
dec
dec
xchg
inc
insb
pusha
cwtl
jb
movsl
test
add
sub
sahf
jmp
pop
add
lods
decl
push
je
add
or
stos
faddl
add
ss
fildl
lcall
fldcw
filds
mov
sub
xor
add
int3
aam
cwtl
xchg
dec
leave
imul
popl
adc
push
mov
repnz
push
sbb
lret
sahf
adc
std
cwtl
or
xor
cmp
fwait
cmp
mov
jle
xchg
dec
add
dec
dec
xchg
das
add
and
js
push
and
cwtl
sbb
mov
xor
or
and
xor
sub
and
push
outsl
mov
adc
das
add
or
add
mov
mov
pop
sub
int3
add
mov
loop
iret
mov
mov
adc
add
inc
call
movsl
xor
les
sarb
aaa
add
sub
pop
sti
rorl
mov
dec
mov
mov
sub
popw
ficoms
dec
sbb
lods
mov
aas
add
movsb
xlat
sbb
dec
sub
cmpsb
js
mov
sbb
mov
inc
in
call
dec
add
out
lds
add
movsb
mov
outsb
inc
addb
pop
data16
mov
pop
and
ljmp
daa
inc
push
pop
aas
add
fadd
mov
pushf
sbb
push
gs
mov
mov
lcall
or
test
rclb
ja
pusha
xor
mov
int
add
nop
fmul
movsl
cwtl
lret
xor
pop
into
add
xchg
lods
sbb
stos
add
add
push
and
in
xor
ret
ss
int
addb
adc
sarb
popl
test
jge
xchg
shrb
lcall
xor
shl
cmpl
and
add
jno
in
sub
cmp
jge
jns
scas
inc
lahf
mov
cmp
add
test
and
roll
rclb
in
stc
sbb
or
add
repnz
push
rclb
cmp
xlat
pushf
dec
and
add
xchg
and
pop
xchg
addl
xchg
repz
inc
hlt
sti
in
test
ds
stos
add
or
xchg
xchg
xchg
mov
lcall
out
push
js
in
cmp
xlat
jo
mov
cmp
dec
add
orb
sbb
mov
sarl
out
je
lds
and
ret
xorb
loope
lods
enter
in
sbb
add
push
scas
and
xchg
das
stos
call
dec
icebp
nop
movsb
lea
pop
sbb
add
mov
mov
cmp
xorb
loop
adc
fbld
mov
add
jle
mov
out
ret
mov
jl
cmp
sub
or
pop
mov
inc
add
xor
mov
fmulp
clc
sub
jnp
pop
xchg
je,pt
mov
loopne
lods
or
or
adc
add
inc
mov
ficoms
aam
testb
dec
and
mov
rcr
pop
in
jbe
inc
sbb
mov
std
loop
add
ret
movsb
xchg
test
int
out
xor
cmp
xor
and
ds
dec
decb
outsl
cmc
in
loope
cmp
pop
pop
adc
sub
int
xor
or
lods
sahf
jg
mov
add
mov
cwtl
loopne
mov
sub
sub
mov
clc
sbbb
es
test
cmpsl
mov
lea
or
inc
push
push
lret
ds
adc
js
or
pusha
sub
int3
scas
dec
imul
fwait
jg,pn
fs
mov
add
cmp
xchg
gs
jo
inc
jnp
sarl
sbb
and
in
mov
jae
out
mov
fst
clc
movsb
add
cmpsl
inc
addl
mov
jmp
lock
into
mull
verr
test
imul
aad
xor
aas
jmp
adcb
pop
dec
inc
jg
cmp
inc
mov
nop
dec
jmp
fdivl
cmp
pop
jo
outsb
or
cmpsb
shrb
subb
inc
dec
mov
shll
testb
mov
shl
bound
loopne
mov
cmp
sahf
in
int3
add
jmp
cmp
adc
cmovne
jge
fsubrs
pop
jl
hlt
push
cmpsl
or
cwtl
test
mov
pop
jb
aaa
mov
lret
scas
rolb
mov
sbbb
testb
cmpsl
add
push
scas
and
xchg
cmpsb
clc
fbstp
jae
lret
sbb
push
and
add
sbb
js
mov
rclb
add
int
stc
movsl
lock
or
xchg
out
dec
les
mov
dec
pop
pusha
jne
mov
add
pop
push
push
lods
mov
mov
cmc
rcrl
outsb
nop
loope
add
cli
out
mov
add
add
push
shlb
cmpsl
add
mov
jo
xchg
push
mov
inc
xchg
test
add
add
imul
and
aas
add
mov
cltd
nop
adcb
aam
test
push
rorb
cmp
inc
test
add
mov
mov
aad
sti
mov
std
lahf
push
add
mov
cltd
add
pop
sub
clc
lds
jp
mov
pop
popf
push
jnp
scas
sbb
outsb
add
and
sub
push
or
in
fwait
sub
std
add
fidivrs
ja
add
test
scas
popa
xchg
sbb
mov
outsl
stos
sbb
out
pop
jb,pn
ds
sbb
pushf
cwtl
cmpl
mov
or
and
mov
cmp
pop
cmp
fiadds
sbb
out
add
or
popa
outsb
mov
rorl
cltd
push
mov
insl
jne
mov
ss
and
mov
dec
mov
andl
dec
pushf
xchg
in
mov
xor
mov
mov
cmp
lret
adc
out
out
cmp
mov
pop
insb
xor
arpl
push
clc
dec
or
push
js
andb
nop
adc
xor
inc
adc
fcmovb
sbb
in
adc
or
sub
push
sub
or
in
outsb
and
iret
std
xor
add
lret
mov
or
je
sbb
outsl
or
adc
stos
cmp
add
pop
or
cli
mov
lock
testl
shll
push
add
cmp
xchg
nop
lock
fldcw
outsl
add
inc
sub
lret
mov
lahf
fldt
scas
decl
adc
in
sahf
or
adc
ds
aas
add
xor
inc
and
repz
add
loopne
stos
shrb
mov
or
mov
add
popf
repnz
mov
xchg
inc
add
out
add
add
mulb
incl
sub
int
call
cmpl
rcr
movsl
pushf
xor
sbb
add
ficomps
push
add
xor
add
sbb
gs
fimuls
mov
sub
pop
stos
loope
loop
xor
add
sbb
sub
jae
xchg
pusha
fildl
or
clc
fs
push
adc
dec
movl
aam
outsb
mov
adcl
mov
loop
jae
jnp
sbb
ljmp
inc
inc
push
lods
lods
dec
jge
add
or
pop
jb
or
or
lock
scas
aad
scas
add
jo
mov
and
inc
gs
mov
mov
sub
pop
mov
loopne
es
lret
fiaddl
dec
pop
orb
adcb
fucom
xchg
xchg
popa
fsubrs
push
mov
cltd
aaa
stos
test
mov
mov
cmpb
jne
or
fsub
mov
pop
mov
leave
scas
or
inc
addb
mov
ds
mov
jne
add
jo
hlt
movsl
dec
inc
mov
mov
add
insl
insb
mov
cmp
mov
icebp
pop
sub
push
jb
inc
sbb
mov
add
fs
mov
xchg
or
pop
adc
push
pop
addl
ja
fcoml
mov
mov
add
mov
aas
or
cld
icebp
cmp
ficoms
shlb
ret
cmp
xor
add
jle
lods
leave
push
je
adc
xorb
mov
xor
ficoml
sbb
stos
mov
add
bound
push
movsb
jb
sar
dec
lock
stos
add
sub
stc
add
cmp
xchg
sub
push
daa
dec
loopne
daa
mov
jo
xlat
nop
jge
or
and
jae
mov
popf
cmc
ss
les
mov
cmp
xor
inc
ficompl
mul
les
jge
insb
sbb
pop
add
in
jl
test
fadds
and
or
shrb
idivl
sbb
add
cmpsb
hlt
push
in
fidivrs
aaa
dec
add
and
add
adc
push
out
add
lret
popf
xor
or
lods
push
and
shrb
mov
test
xchg
sub
jl
jp
jmp
ss
add
xchg
add
movsl
xchg
pop
add
push
xchg
cmpsl
mov
enter
xor
pop
je
dec
or
mov
adcl
mov
rolb
cmp
scas
insl
add
mov
xchg
sbb
orb
out
test
and
or
stc
ss
sbbl
popf
cmp
fmull
fwait
imul
pusha
loopne
dec
in
sbbb
push
add
jl
fsin
jge
pop
push
xor
rcrl
jo
lret
insb
xchg
cltd
or
rcl
pusha
test
leave
mov
xchg
mov
inc
fs
push
inc
ror
jne
dec
cmp
or
xorl
adc
push
or
add
mov
push
fs
in
add
nop
xchg
dec
shlb
js
mov
pop
out
add
push
in
cmpsb
into
loopne
pop
out
add
dec
out
dec
adc
mov
adc
mov
and
dec
insl
out
add
push
pop
fildl
fstp
fdivl
outsl
adc
pop
sub
nop
and
push
mov
cli
add
sub
sub
add
jnp
push
mov
xchg
sbb
pop
jne
pop
loope
lret
mov
mov
in
push
add
and
xor
mov
inc
lret
add
sarl
dec
cmp
rolb
fcoml
push
dec
xchg
add
add
repz
test
add
pushl
iret
mov
jo
pusha
bound
scas
mov
mov
and
inc
sbb
add
inc
jo
dec
addb
pop
imulb
sub
inc
les
test
inc
pop
add
push
orb
mov
mov
cltd
adc
stos
loope
sub
mov
xchg
movsl
adc
cmp
or
add
cmp
mov
pusha
add
aad
aam
test
push
test
enter
pop
pop
xchg
sub
mov
daa
add
inc
outsl
rolb
add
jne
fucomp
stc
push
andnps
pop
sub
add
test
xorl
cmp
shll
fucom
cwtl
mov
jp
es
push
xchg
lret
in
sbbl
dec
pop
sub
orb
dec
add
les
imul
loope
repz
push
push
out
fcomps
and
mov
sbb
add
cmpsb
dec
xchg
xor
loopne
pop
dec
dec
pushf
pop
pop
movsb
mov
xor
xor
adc
js
pop
out
cmpsl
xor
lret
mov
nop
cs
mov
sti
rolb
out
pushf
dec
push
pusha
fildl
mov
xor
add
insb
ds
cmpsb
dec
stc
add
mov
mov
lret
push
cwtl
add
mov
mov
xor
ret
sub
mov
push
add
jle
and
xchg
or
in
xor
xor
xor
cwtl
sarb
rcrb
sbb
insb
push
dec
cmp
aad
js
add
cmp
pop
push
ds
scas
and
shl
daa
sub
sbb
xchg
sbb
das
orb
pushf
add
sbb
in
inc
dec
pop
shrl
adc
push
mov
subb
out
movl
and
ljmp
repnz
addb
mov
outsl
lock
and
nop
dec
jmp
mov
ljmp
xor
xchg
mov
insb
push
das
mov
sub
out
les
cmpsb
je
dec
pusha
cmp
add
jne
inc
mov
imull
mov
pop
shrb
aaa
into
mov
dec
sar
mov
mov
es
fists
leave
mov
loopne,pt
mov
stos
cmp
hlt
out
add
cmp
lcall
push
popf
jo
ret
sbb
incl
test
dec
js
fnstsw
xor
psubsb
roll
and
stc
xlat
ret
popl
les
je
enter
add
push
push
mov
adc
in
dec
or
shll
out
ds
sahf
jb
daa
hlt
jmp
pop
xchg
pushf
jae
jbe
movsb
pushl
pop
in
push
cmpl
sub
xor
mov
or
and
mov
hlt
faddl
mov
js
lret
add
int
jo
leave
sbb
fcoms
jp
ja
push
addl
stc
clc
imul
addr16
aam
sbb
mov
orb
sub
add
mov
out
xor
fstpt
add
inc
adc
test
add
mov
sbb
stos
call
in
mov
invd
add
pop
loopne
lods
push
mov
or
icebp
sti
mov
pop
lods
add
adc
movsl
stos
add
imul
pop
test
push
or
fwait
or
add
fidivrl
mov
pop
in
in
mov
rorb
cmp
adc
repz
mov
jge
cmp
push
jp
mov
fbld
decb
dec
dec
int3
cmp
cwtl
or
sbb
daa
ret
mov
js
add
cmp
jno
push
aaa
hlt
push
stos
jge
add
xlat
clc
adc
mov
fldl2t
mov
cmp
cld
pusha
lock
add
inc
jns
pop
xor
cmc
stos
mov
xor
push
xchg
jbe
fldl
pop
cmc
add
sbb
xor
into
xor
aas
push
sub
jp
and
clc
daa
xchg
nop
or
mov
xchg
fldl
cs
and
mov
add
lock
and
in
rclb
add
xchg
out
mov
adc
in
test
cmp
xor
scas
addl
add
inc
iret
jmp
cmpsl
cmpsb
shlb
add
stos
fwait
jnp
cmp
mov
out
inc
and
xchg
test
mov
shlb
stc
jno
inc
mov
jne
mov
xchg
xlat
add
add
add
scas
imul
mov
out
sub
cmpsb
sub
enter
push
popf
fxam
lcall
mov
jae
add
pop
jp
cmp
adc
dec
aas
mov
fs
hlt
jl
imul
test
call
jmp
sbb
xchg
fisttpll
add
ror
fcmovne
push
pop
add
into
fsub
add
fs
test
ffreep
push
loopne
js
sarb
xlat
cld
push
cmpsl
sbb
inc
jns
mov
jbe
or
dec
cwtl
pop
nop
icebp
sub
bound
xchg
and
add
inc
ret
sbb
adc
movsl
sub
push
into
add
jge
push
outsl
mov
push
dec
shll
and
sub
jnp
cmp
movb
push
loope
jbe
add
xor
pushf
sbbb
adc
and
sbb
jg
xor
ror
mov
shlb
mov
and
mov
add
mov
cmp
pop
push
leave
mov
add
dec
sahf
mov
inc
rolb
add
xchg
pusha
push
cmp
mov
sbb
mov
push
out
jmp
inc
mov
mov
adc
les
push
mov
in
sub
adc
pop
pop
add
adc
in
inc
pusha
movsb
jae
loope
add
sub
xor
adc
pop
cmp
jno
adc
loope
popf
adc
pop
cmp
fstpl
jmp
insb
loop
add
rcl
add
imul
push
sbb
test
out
mov
jle
xchg
ds
dec
sub
nop
jne
sbb
subb
add
lea
xchg
mov
adc
mov
scas
xor
mov
out
cmpsl
incb
push
jae
cmp
add
fisubl
sbb
enter
inc
xor
sub
sub
jns
dec
in
mov
test
or
add
xchg
jp
xor
sbb
rdmsr
mov
jae
out
notl
orl
stc
cmp
fcoms
sub
push
add
xchg
out
add
bound
clc
in
push
add
in
xor
lock
stos
mov
mov
dec
mov
imul
test
out
cmp
fwait
sahf
or
inc
mov
data16
add
mov
push
add
test
xchg
cmp
sbb
dec
scas
mov
cmp
fstpl
sbbb
add
fidivs
sbb
inc
sbb
hlt
popl
scas
in
sbb
out
xchg
out
loope
mov
add
cmc
in
cmp
mov
jne
add
movsl
inc
mov
gs
add
outsb
or
mov
call
outsl
jno
in
push
movl
mov
xchg
sqrtsd
xorl
test
xchg
int3
out
scas
inc
in
mov
mov
sbbb
mov
stos
es
add
xlat
pop
inc
lock
mov
xchg
cmp
sti
xchg
lods
cmc
add
and
push
sbb
fisubs
lods
fnstcw
add
das
xor
add
sbbb
ljmp
jge
daa
lds
shr
inc
dec
add
pusha
xor
les
pop
jne
push
data16
lcall
pushf
pop
hlt
jb
pop
cmpsb
mov
mov
aaa
outsl
mov
add
xchg
push
cwtl
aas
pop
int3
or
mov
cmp
rolb
imull
pushf
mov
sbb
subb
and
mov
ret
js
mov
test
aas
add
std
add
lds
ret
call
imul
inc
push
das
aad
subl
fdivl
pop
sub
cmp
mov
mov
add
test
pop
arpl
jle
aaa
mov
cltd
inc
add
das
add
mov
rcrb
jo
pop
mov
out
pusha
push
push
scas
mov
negb
aaa
in
andl
sbbl
nop
lods
aas
loopne
dec
bound
bound
mov
popa
daa
cs
dec
mov
ret
adc
js
pop
lock
jle
popa
inc
sbb
insl
outsb
add
push
shl
or
mov
out
andb
pop
out
jge
add
dec
mov
inc
xchg
sbb
xor
clc
popa
push
shrb
add
push
pop
dec
gs
lock
inc
pop
cltd
mov
pop
or
sub
addb
xchg
xchg
jae
add
ljmp
jns
mov
jmp
mov
cmp
sbb
inc
outsb
add
mov
xor
fwait
mov
mov
fdivs
adc
pop
xchg
dec
push
and
fcomps
add
mov
ficomps
popf
add
leave
sbb
xlat
add
dec
dec
inc
out
xchg
adc
pop
xor
push
cmp
in
and
enter
shrb
in
add
shlb
nop
add
out
mov
push
xchg
jne
je
in
add
lods
push
and
mov
xor
dec
xchg
int3
dec
pushf
add
scas
inc
push
pop
push
jmp
push
lods
adc
jecxz
mov
sbb
push
xchg
faddl
mov
je
rcrl
gs
add
or
shl
jb
adc
repz
cwtl
inc
add
lea
add
stos
sub
pop
push
adc
pusha
ret
jg
inc
pusha
into
xor
adc
cmpsb
cli
cmpsl
shrl
add
ja
cmp
data16
xor
pop
pop
push
mov
repz
lods
outsb
or
add
jno
inc
pop
rol
add
mov
idivl
add
js
xor
inc
add
out
repnz
or
rcrb
mov
hlt
dec
sub
outsl
xor
xorb
mov
and
push
pop
mov
sub
and
lret
xchg
movsl
push
ds
out
and
add
mov
xchg
mov
in
sbb
fiaddl
shrb
push
add
fdivp
cli
fisttpl
pop
add
xchg
add
loope
add
or
mov
ret
pusha
jne
faddl
xchg
jno
fxch
int3
mov
mov
jecxz
mov
popf
sbb
jbe
fs
inc
fadds
std
adc
xchg
ret
or
and
imul
divb
cltd
cld
es
add
xchg
es
mov
out
imul
add
rorl
sub
and
insl
xchg
adc
pop
das
add
es
repnz
hlt
push
add
mov
push
pop
in
mov
inc
add
xor
dec
rclb
or
pop
icebp
pop
sub
inc
loope
lods
scas
add
js
inc
mov
adc
sbb
cmp
add
cmp
ret
loopne
push
add
in
and
out
xor
adc
lret
push
mov
int3
add
test
sbb
push
addl
xor
pop
adc
cmp
lock
mov
jp
push
xchg
repz
mov
arpl
rcrb
into
mov
sub
mov
dec
jle
pusha
jecxz
rclb
je
mov
ss
iret
cmp
or
mov
sbb
mov
add
testb
jg
jl
sub
mov
jno
enter
jbe
ja
sbb
add
rcr
sub
inc
lds
jne
cmovs
mov
loop
pushf
icebp
cld
test
mov
arpl
add
jge
xchg
pop
sbb
add
xor
movsb
add
arpl
stos
xchg
xchg
mov
in
out
inc
push
inc
cmp
or
fistps
rcrl
ret
jg
add
push
pop
xchg
mov
arpl
mov
jle
dec
xchg
push
pop
inc
xchg
lcall
or
sbbb
mov
add
xor
fcoml
mov
sbb
dec
jecxz
cmp
add
les
pushf
jnp
lret
add
cmp
ret
sahf
inc
push
into
dec
lahf
add
and
jno
imul
repnz
rcll
push
sbb
int3
mov
inc
mov
cmpsl
je
das
roll
inc
sti
iret
add
rclb
add
mov
cmp
mov
sti
push
xor
scas
ljmp
mov
cmp
and
adc
mov
imulb
mov
xor
add
stos
push
sbb
int3
pusha
pop
js
mov
bound
lcall
push
aam
gs
jb
mov
dec
push
jge
ss
xchg
xchg
and
subl
enter
jns
insl
in
sub
jge
pop
pop
pop
xchg
xor
push
add
sbb
sti
xchg
mull
xchg
inc
cltd
push
or
dec
outsl
scas
sbb
lods
jae
and
ss
pop
or
addr16
jo
loopne
xor
and
test
movsl
icebp
lock
sub
inc
cmp
pushf
pop
cmp
into
add
movsl
test
popf
dec
cmp
stc
stos
mov
ficompl
mov
mov
sbb
mov
dec
mov
jge
push
sbb
shl
add
out
js
push
mov
outsb
add
push
inc
repnz
addl
lods
fiadds
push
jl
flds
idiv
add
pop
jns
sub
out
fnstsw
inc
mov
movsl
add
mov
dec
and
adc
loop
add
sbb
addr16
out
add
dec
inc
pop
ss
mov
adc
enter
or
adc
jae
and
jmp
sbb
je
fidivrl
cmp
jns
sbb
pop
jb
inc
dec
adc
stc
mov
or
popf
lea
push
pop
and
adc
push
add
iret
icebp
rcll
pop
jo
push
cwtl
int3
cltd
and
adc
imul
and
sbb
dec
sbb
into
in
adcb
jo
add
adc
repnz
dec
dec
sbb
add
sub
shr
mov
sar
push
or
adc
cwtl
or
push
pusha
or
jmp
or
cmp
jle
jl
push
rcll
movsb
mov
rclb
rcl
or
and
pushf
mov
pop
ret
add
dec
hlt
sbb
idivl
pusha
adc
adc
add
xor
into
std
ret
sbb
and
popf
les
inc
cld
add
andb
xchg
or
xchg
lods
roll
mov
in
fnstenv
rcrb
and
frstor
rolb
pop
cmp
ds
add
jb
xchg
jne
lods
cmpl
dec
push
jno
sbb
add
test
pop
std
adc
push
into
inc
mov
pop
and
add
cmp
mov
ret
add
sub
add
adc
push
dec
roll
aam
and
jo
add
daa
xor
push
test
rorb
push
xor
lds
pushf
and
fwait
mov
leave
mov
mov
gs
mov
sbb
pop
and
cmp
jl
movl
adc
pop
xchg
push
movsl
subb
mov
and
add
pop
fidivs
scas
pop
test
into
push
mov
inc
sarb
hlt
test
inc
or
dec
sub
mov
or
jno
mov
mov
cmp
cmp
push
sti
mov
shrb
mov
rorl
and
test
icebp
mov
mov
test
int
fwait
imul
ret
add
imull
add
jl
push
mov
xorb
sbb
cwtl
jmp
add
sub
jmp
int3
or
and
add
mov
sub
into
call
jo
adc
or
push
mov
add
jo
leave
and
xchg
add
push
xor
cwtl
ljmp
and
add
nop
pop
add
pop
mov
leave
push
cmp
inc
mov
sbb
enter
sub
xor
les
sub
add
dec
mov
mov
xchg
lahf
aaa
sti
lods
mov
jecxz
and
pop
inc
mov
lock
dec
insl
add
inc
and
dec
popa
roll
int3
mov
xor
shlb
jns
stos
push
jno
into
mov
and
sbb
add
xchg
loopne
add
xor
mov
dec
mov
adc
inc
shlb
xchg
cmp
or
inc
push
pop
cmp
jle
lahf
nop
xchg
sbb
pop
mov
std
push
sub
lods
inc
jns
mov
daa
adc
xchg
stc
mov
cmp
insb
and
mov
add
orl
roll
jmp
pushf
add
dec
icebp
nop
pushf
lods
cmp
inc
in
and
add
pop
shl
push
std
mov
mov
push
or
mov
adc
xor
mov
orb
add
fsubrl
add
mov
xor
add
lcall
push
jmp
incb
push
jo
es
popa
repnz
rcrb
daa
mov
add
cmp
cmpb
test
cmp
adcb
popf
and
xor
adc
and
jns
xlat
stos
add
enter
xor
popa
pop
cltd
bound
addr16
mov
js
into
dec
loopne
add
shrb
xchg
pop
loopne
sub
dec
rorb
sahf
mov
jo
cmpsb
xor
iret
sub
add
test
sub
jge
or
cmp
fdivrl
xchg
push
dec
xor
sbb
or
sub
mov
out
mov
ds
int3
or
add
imul
stos
movsb
in
add
lret
and
cmc
repnz
pushf
inc
mov
add
dec
mov
dec
cmp
and
rcrl
inc
and
add
add
add
adc
mov
pop
mov
jo
orb
sahf
push
mov
and
dec
fsubs
and
xchg
popf
push
sub
mov
adc
cmc
stc
test
sub
jo
add
mov
pop
subl
cli
add
stc
push
adc
add
or
mov
and
cmp
adc
gs
push
pop
mov
add
fs
leave
mov
push
xchg
loope
pop
xchg
cltd
lods
mov
in
lds
jae
pop
mov
add
icebp
outsb
sub
call
test
cmp
or
add
fsubrp
cmovne
stos
cmp
and
pop
mov
pusha
out
mov
mov
adcl
jns
mov
mov
ror
int3
or
and
pushf
xchg
repz
test
js
adc
mov
movb
add
mov
pop
or
xor
sti
shlb
test
ret
in
je
add
clc
mov
xor
mov
push
andb
and
xchg
and
fdivp
sbb
sbbb
flds
pushf
inc
push
xchg
adc
repnz
divb
add
mov
sub
adc
mov
int
leave
sub
fcoml
cmp
xchg
cltd
filds
stc
push
push
mov
add
mov
jns
insl
aaa
and
cwtl
push
out
cmc
adc
icebp
add
movsl
cltd
sti
testb
and
into
outsb
insl
jecxz
ret
inc
mov
lcall
fadd
fsubr
add
pop
leave
jmp
nop
add
or
xchg
jns
test
or
mov
scas
sbb
xor
adc
dec
sub
enter
adc
and
or
mov
add
loope
repz
pop
mov
or
mov
testl
mov
lods
add
insl
jge
jo
mov
add
paddb
push
daa
setno
repz
pop
pop
mov
mov
aaa
lods
xchg
aam
or
test
int3
mov
movsb
lcall
jns
xor
cmp
mov
ret
outsb
mov
lret
cmovo
out
jle
pop
and
fxch
pusha
jp
mov
xchg
xorb
mov
jbe
add
ljmp
or
jno
mov
sbb
adc
enter
lods
rorl
clc
xchg
jb
loopne
jecxz
les
jo
lock
mov
add
cmp
inc
movsb
mov
mov
xchg
fildl
jnp
mov
loope
cmc
push
call
jg
test
jbe
testb
hlt
sbb
add
bnd
fistpl
lock
mov
cmp
nop
in
push
inc
dec
scas
ret
mov
sub
lock
fmuls
outsl
sub
jo
ficoms
in
jge
sub
push
xchg
or
rclb
inc
add
enter
iret
push
inc
popa
clc
mov
adc
add
sti
int3
xchg
aam
inc
sbb
add
jmp
je
xchg
ss
sarb
testl
mov
dec
add
dec
xchg
loope
fsubr
dec
xor
clc
out
mov
arpl
sub
jp
repnz
nop
push
mov
fldcw
sub
xor
or
enter
ds
testl
push
and
add
js
aad
pop
push
test
sub
in
ret
cmpl
or
sbb
jo
xor
sbb
loopne
inc
xor
adc
add
add
push
xchg
sbb
loopne
lods
add
rorb
addb
jae
ret
pop
test
mov
mov
and
mov
push
ja
cwtl
cwtl
mov
and
and
aam
test
xchg
insb
push
sub
adc
or
pop
clc
or
lea
sub
xchg
add
mov
xor
sub
push
xor
sub
pop
das
mov
xchg
add
adc
and
add
ret
movsb
sbb
jge
push
or
add
loope
repz
jg
cmp
jge
xchg
negl
rorb
add
dec
pop
jmp
add
xchg
adc
add
hlt
add
sbb
out
fistl
fdivl
lods
push
pop
inc
add
mov
xchg
sbb
cmpsl
sbb
and
add
and
roll
add
adcl
ret
loopne
imull
sub
inc
jge
push
out
loopne
mov
add
hlt
jle
cmpl
andb
fisubs
cmp
xchg
push
shlb
js
mov
add
inc
sbb
inc
fadds
jp
xchg
sbb
lods
pushf
add
les
arpl
jl
or
add
dec
sub
add
add
or
adc
out
ret
jb
sub
cmp
sarb
repnz
cld
and
jecxz
ss
clc
mov
divl
ljmp
shl
add
decl
arpl
mov
mov
roll
jecxz
mov
in
add
xchg
repnz
daa
sub
add
in
fs
adcb
inc
and
cmp
mov
lret
inc
movsl
dec
insb
xorb
push
or
add
dec
jno
add
dec
sub
sbb
sub
cld
mov
add
mov
and
outsb
test
mov
mov
sub
inc
mov
cwtl
out
add
fdivl
jge
jmp
dec
daa
cmpsb
cld
jo
mov
push
inc
outsl
dec
repz
push
mov
xor
in
add
mov
inc
adc
jns
in
test
aas
cmp
ljmp
adc
push
pushf
sbb
pop
cmp
arpl
das
sub
clc
add
xchg
or
jne
add
fcmovnbe
and
jbe
and
ljmp
shl
or
and
imul
test
movl
jno
in
or
mov
inc
ds
pop
mov
inc
loopne
xor
add
pop
xor
dec
add
sbb
rolb
or
dec
mov
add
insb
sub
scas
shlb
mov
test
popf
inc
lea
nop
push
sub
inc
mov
out
sahf
add
mov
cltd
mov
jne
mov
lods
xor
xchg
add
dec
js
add
xor
xchg
insb
cli
nop
push
je
add
mov
sbb
int
dec
ficomps
cltd
mov
add
or
mov
push
mov
inc
add
cmp
ffreep
pop
nop
pop
lods
daa
rcrl
mov
adc
pop
add
mov
test
das
sbb
mov
push
jg
mov
into
outsb
xorb
cmpsl
add
ds
fcomps
int3
inc
repnz
inc
xor
mov
std
dec
or
ss
xor
add
lock
pushf
add
aas
mov
jne
add
jo
fs
xlat
je
push
jb
push
cmp
rorb
cmp
aaa
xchg
add
ret
popf
inc
lds
sub
pop
in
cltd
fwait
ja
jo
sti
cmpsl
push
pop
push
add
mov
movsb
add
or
push
add
adc
fdivs
push
lahf
jae
mov
mov
add
lods
sbb
xor
mov
ljmp
arpl
add
js
das
xchg
sub
in
xchg
stos
xchg
and
enter
pop
inc
cld
sub
lahf
inc
add
jbe
push
cmp
add
mov
pop
add
adcl
add
clc
xor
xchg
js
add
pushf
lea
and
pop
out
or
jae
jmp
add
cmp
sub
add
daa
ret
add
fstpl
mov
jbe
xchg
das
inc
add
add
jmp
je
jno
fmull
mov
inc
and
push
test
xor
faddl
orl
add
mov
adc
in
aad
dec
enter
add
sti
mov
add
adc
int
fadds
ret
adc
sub
mov
mov
xor
aam
mov
xor
lcall
inc
cmp
add
int
push
add
inc
push
add
sub
and
mov
sub
punpckldq
inc
fdiv
loopne
sbb
xor
jp
jge
repz
mov
popl
stos
mov
push
sub
mov
push
pop
xorb
mov
incl
cmpb
aas
cmp
add
andl
scas
addb
dec
xorl
dec
loope
loopne
pusha
add
stos
push
popl
sarl
inc
adc
les
fnstenv
jmp
iret
or
movsl
sbb
jnp
or
imul
adcb
jmp
cmp
addb
in
sbb
lods
loop
inc
pusha
dec
add
push
sbb
sahf
mov
outsl
mov
adc
and
clc
popf
lock
fisttpl
imulb
xor
add
sbb
or
call
jg
cmp
sub
mov
and
fs
add
hlt
imul
and
adc
mov
sarb
nop
push
in
pop
mov
xor
das
ss
cld
push
mov
rcll
add
jne
jmp
add
cmp
pop
les
inc
xchg
push
dec
hlt
fs
push
and
pop
add
jb
mov
cmpsb
push
cli
adc
mov
fwait
mov
inc
scas
inc
dec
pop
xchg
jl
xchg
adc
pop
mov
push
fsubs
add
add
jecxz
push
dec
add
stc
sub
test
xor
inc
pop
in
xchg
adc
std
or
test
leave
cmp
add
sub
loopne
dec
out
insl
add
mov
push
jp
aam
imul
stc
decl
cmpl
push
add
mov
movsb
or
pop
bound
mov
out
aam
inc
jnp
pop
clc
fbld
jbe
and
sbb
pusha
add
scas
add
add
sbb
fdiv
cmp
and
adc
pop
repnz
mov
jnp
call
xor
mov
lret
xchg
jb
stos
sub
test
cli
xor
pop
jne
add
dec
das
mov
add
jbe
mov
insb
xchg
cmp
jb
les
mov
sbb
xor
ja
add
test
imul
fsubl
sbb
into
mov
add
jecxz
inc
insb
fnstenv
cmc
cld
ret
and
mov
sahf
shl
or
add
xchg
xor
mov
add
int3
cmpsl
out
jp
push
push
pushf
pop
jbe
adc
rcl
loopne
das
int
add
test
shlb
push
ss
mov
add
pop
stos
pop
mov
xor
pop
xchg
addb
add
mov
icebp
push
xor
aam
and
dec
inc
xor
push
xor
mov
mov
xchg
fstl
call
jg
push
add
stc
outsl
lahf
int3
add
pop
jmp
pop
cmovbe
or
push
add
or
cld
add
dec
cmpsl
aas
push
add
and
xchg
push
add
and
mov
add
mov
andl
sbb
imul
into
repz
das
sbb
pusha
pop
jns
or
xchg
add
int
lods
movsl
std
xor
mov
rclb
pushf
xor
fiaddl
dec
push
inc
int3
sub
aaa
jg
aas
xlat
imul
and
cmp
repz
loopne
into
sbb
adc
call
add
out
scas
add
test
pusha
popf
mov
fcmovnbe
sahf
inc
pop
inc
xchg
test
jecxz
lret
insb
add
loope
and
jbe
xchg
sbb
jge
add
pusha
outsl
and
cmpsl
sub
mov
mov
test
out
pop
arpl
lods
mov
cwtl
jo
popa
inc
push
fdivs
mov
add
gs
pop
xor
scas
in
jmp
in
call
movsb
test
inc
add
fsubrs
loope
in
and
imul
mov
rcll
cmpl
lret
outsb
enter
pop
iret
ja
call
mov
sub
jg
and
lock
add
inc
cmpsl
testl
mov
shl
sbb
mov
leave
sbb
mov
add
clc
dec
add
add
js
xchg
dec
sbb
rcll
adc
nop
mov
xchg
mov
mov
inc
incl
mov
jo
add
stos
add
mov
cld
pop
nop
pusha
jne
ljmp
fidivrl
pusha
cmp
mov
rcr
stos
push
adc
or
adc
sub
mov
add
cmp
pusha
mov
das
jmp
leave
jge
xor
mov
int
test
loop
push
frstor
add
rcrb
and
mov
adc
je
adc
jge
pop
sbb
jns
mov
mov
ljmp
rolb
and
fiadds
sbb
push
adc
int
pop
adcb
roll
push
movsl
mov
aaa
stos
loop
bswap
out
inc
mov
xor
push
and
xor
sub
fdivrp
and
add
adc
in
mov
adc
cwtl
sub
pop
cmp
add
jp
pop
dec
pop
mov
aad
add
loope
push
outsb
xor
add
or
jg
mov
push
loope
inc
jb
add
testl
shlb
fcom
dec
xorb
in
add
int3
or
lds
imul
ss
fsubrp
mov
repnz
cli
xchg
pushf
in
sti
orl
push
shlb
pop
push
filds
lods
in
push
add
mov
imul
repz
loop
dec
cmp
sub
jbe
stos
cmpsb
mov
popf
inc
add
shll
cltd
lock
mov
daa
mov
in
sbb
or
faddl
stc
pop
nop
xor
jge
add
mov
jbe
jg
int
cli
add
jae
dec
cmp
mov
stos
xchg
dec
popa
orb
clc
cmc
xchg
mov
movl
sub
pop
pop
dec
push
hlt
and
cld
outsl
inc
mov
add
rorb
xchg
mov
xor
sub
pop
add
push
mov
inc
mov
mov
inc
or
hlt
jmp
movsb
ret
cli
add
cmp
jp
mov
arpl
rorb
and
mov
scas
mov
rorb
push
and
cmp
and
pushf
xchg
cmc
lss
pop
sti
and
rorl
dec
aas
sub
cmp
and
es
sub
jmp
jg
add
push
sbb
push
fcompl
cmp
mov
imul
rolb
mov
fsubrs
fbld
cmp
xchg
add
cmp
add
pop
nop
je
add
jmp
push
push
outsl
daa
and
adc
push
add
xor
inc
jle
xor
cmp
decl
je
call
sbb
hlt
inc
jns
imul
adc
add
arpl
outsl
push
dec
mov
mov
ret
aam
dec
add
cmp
or
aaa
jo
add
add
mov
fistl
dec
push
mov
int
push
jns
add
jmp
addb
sub
xchg
add
mov
jb
cmp
push
add
psadbw
fimull
add
jp
int3
cltd
icebp
clc
imul
xlat
add
jp
and
xchg
mov
sbb
or
mov
test
add
test
xlat
in
clc
cwtl
jle
lahf
mov
pushf
or
push
and
in
clc
pusha
fldenv
jb
js
add
push
xorl
xchg
jle
adc
pop
ss
jp
pop
add
ds
mov
cmp
push
pop
xor
cwtl
mov
jp
mov
lock
icebp
jl
xchg
inc
sbb
dec
or
jge
lea
xchg
aam
pusha
arpl
sub
sbb
dec
mov
or
add
aam
pop
adc
enter
dec
and
sub
add
cmpsl
jns
add
lods
mov
cmp
and
gs
movsb
jecxz
xchg
setnp
jle
cs
int3
inc
adc
xor
repnz
repz
xor
xchg
ljmp
xor
mov
movsb
lds
int
xchg
test
ret
add
mov
rcrb
cmc
mov
push
or
faddl
sbbb
jl
pop
push
mov
scas
add
add
jge
cwtl
add
push
mov
ss
cmp
inc
cmp
lods
xor
cwtl
mov
pop
push
ja
push
and
add
jo
es
add
rcll
mov
scas
pop
add
adc
add
int
pusha
iret
add
leave
push
or
push
adc
add
sahf
cmp
subb
cltd
out
pop
pop
adc
out
xchg
sbb
ljmp
rcr
mov
xchg
repnz
cld
xchg
adc
add
lods
shll
imull
int
inc
ret
sbb
popa
inc
in
test
sbb
je
imul
movsl
rcrb
sbb
cmp
xchg
popa
shlb
cli
leave
in
or
cwtl
push
add
insb
sbb
cmovbe
adc
pop
out
jb
add
push
sbb
add
mov
addr16
ja
or
in
or
movsl
mov
push
test
int3
mov
scas
push
test
roll
or
adc
or
daa
add
push
pusha
add
mov
push
out
jns
pop
lods
add
cmp
cmc
sbb
cmp
shrb
pop
mov
cld
mov
mov
add
and
push
pop
pop
rorl
add
into
hlt
mov
icebp
add
ss
sahf
push
add
pushf
out
mov
jnp
sbb
fdivr
mov
add
jno
arpl
pusha
leave
mov
xchg
aam
or
aas
push
inc
filds
icebp
je
paddusb
mov
das
mov
sbb
push
add
lcall
add
test
notb
push
sbb
add
pop
mov
add
into
dec
popa
inc
add
lock
bound
cld
lods
shrl
cmp
adc
mov
aaa
inc
add
ficompl
push
int
add
mov
loopne
sbb
mov
movsb
add
fcmovnu
cmpb
and
xor
popa
mov
dec
xor
test
and
shl
lcall
mov
sbb
xor
mov
dec
xor
ret
lcall
jecxz
add
cwtl
dec
pop
mov
lock
leave
ja
add
add
adc
cmpsl
lret
lret
mov
add
stos
loop
add
popf
stc
lea
roll
xor
nop
call
int
pop
dec
jne
add
mov
cmp
popa
je
pop
icebp
popf
push
dec
subb
fdivl
ss
iret
pushf
xchg
fimuls
hlt
out
push
sbb
mov
test
shr
mov
mov
popa
push
and
sti
and
xchg
add
daa
fstps
leave
popa
cmp
adc
push
rolb
sub
cmpsb
addl
daa
inc
inc
iret
loop
push
mov
js
add
adcb
xor
sbb
adc
rcll
add
or
fcoml
sbb
cli
mov
dec
in
dec
dec
mov
sbb
daa
push
filds
cltd
push
test
stc
test
xor
xor
cwtl
dec
pop
test
mov
into
pushf
mov
ret
mov
inc
sub
orb
mov
cld
mov
add
push
cmp
sub
or
rorl
nop
dec
gs
xor
sbb
fdivrl
and
pop
push
addl
dec
aam
faddl
sbb
add
jl
cli
or
sti
inc
xor
push
push
inc
push
xchg
add
fistpl
test
movsb
jb
cli
roll
mov
pop
ljmp
ds
lcall
aad
cmp
push
mov
mov
add
adc
mov
add
or
add
cmp
mov
dec
or
inc
push
inc
pop
jmp
out
pusha
outsb
add
add
pop
mov
mov
mov
xchg
loopne
mov
or
sbb
add
pop
inc
or
addb
add
lahf
in
xchg
ja
pop
fdivrs
xchg
movsb
test
cmc
outsl
mov
inc
sub
cli
jbe
jl
sub
pop
into
bts
xchg
mov
dec
pop
jp
xchg
in
jnp
add
loope
push
push
outsb
in
nop
pop
cmp
cwtl
mov
cmpsb
lock
pop
pushf
add
in
add
push
mov
jns
jmp
push
add
bswap
pop
pushf
andl
in
add
and
sbb
out
and
sbb
pop
aad
mov
sbb
push
shl
fs
push
pop
divl
rolb
adc
sti
sbb
rorl
cld
mov
mov
imul
sbb
and
adc
xchg
inc
aam
xchg
mov
xchg
repnz
push
fstl
sbb
dec
std
or
movsb
jg
add
in
and
mov
push
or
add
add
xchg
fisubrs
or
test
test
mov
mov
mov
sahf
roll
inc
ret
mov
add
rcrb
in
and
jno
test
dec
adc
in
and
add
shll
xor
pop
mov
outsl
in
sbb
jle
pusha
mov
add
gs
shrl
fldl
push
enter
push
sbb
cmpb
jns
cmp
cltd
add
call
add
rolb
mov
enter
add
int3
shl
aas
push
dec
shlb
cmpsl
dec
loopne
fcomp
lcall
sub
jnp
mov
mov
inc
test
mov
in
ds
popf
loopne
aas
sbb
jno
push
mov
ret
mov
int3
add
adc
je
add
sbb
push
in
inc
pop
add
dec
mov
mov
mov
aad
nop
in
test
adc
lahf
xorl
cwtl
bound
sbb
repnz
cltd
or
fiaddl
and
push
loopne
jg
add
and
nop
pusha
mov
je
int
paddsb
dec
ror
pop
inc
enter
pmovmskb
cmpsb
push
lock
adc
add
int3
adc
sub
lret
add
or
xchg
xchg
xchg
call
jmp
or
sbb
dec
xchg
xchg
add
push
aas
inc
add
nop
in
arpl
and
jp
jle
mov
adc
inc
shlb
xor
adc
add
jb
ljmp
add
mov
scas
xchg
add
or
inc
cwtl
adc
addl
mov
out
add
adc
mov
lock
mov
repz
arpl
cmpsb
stos
sbb
or
test
push
pop
nop
dec
adcl
mov
pop
mov
push
dec
xor
mov
add
cli
sub
pop
and
adc
iret
pop
call
jns
push
cmp
mov
nop
add
mov
adc
pop
mov
icebp
jns
sbb
out
pusha
xor
xor
add
cmp
dec
jp
add
cmpsl
mov
int
mov
cld
loope
pop
inc
es
lret
pop
jo
ds
push
mov
fmulp
sbb
ljmp
mov
rcrb
loope
lock
xchg
pop
fucomip
pop
add
xchg
jl
sub
dec
in
pop
push
jo
dec
mov
mov
enter
popa
repz
insl
nop
testb
ds
xor
mov
and
lds
adc
sbb
add
nop
adc
adc
aad
mov
jno
inc
pop
les
pushf
add
mov
sub
test
add
je
das
popa
jecxz
push
inc
ret
pop
ror
push
faddl
xchg
cmpsl
pop
arpl
sub
rcrl
lcall
imull
fs
push
add
inc
mov
ds
push
js
add
leave
fimull
aam
add
nop
mov
add
mov
shlb
add
adc
xor
pop
loope
cwtl
pop
add
pop
inc
and
dec
vmovaps
adcb
mov
jae
outsb
add
cmc
jno
push
mov
addb
xchg
or
add
sub
sbb
mov
ret
push
testl
jne
add
add
jge
xchg
cmp
ss
xor
fwait
push
add
mov
sbb
shrb
lret
in
push
add
add
adc
loopne
xchg
test
or
cwtl
in
xchg
shlb
jmp
add
pop
shlb
adc
or
lods
mov
dec
lcall
cmp
dec
and
andb
dec
cmp
mov
cs
ret
jb
push
sti
mov
lret
icebp
and
mov
push
lahf
lret
movsb
cmp
mov
out
mov
mov
xchg
inc
nop
test
inc
pop
fwait
sbb
lret
inc
pop
daa
jg
or
shll
add
in
loopne
add
or
roll
pop
les
pop
sub
xcrypt-cfb
cmpsl
out
cmpsb
sbb
fldt
dec
stos
mov
fnstsw
jns
add
leave
and
mov
das
sub
or
add
inc
dec
mov
jg
adc
andb
lcall
xchg
mov
xor
lods
sub
inc
cli
jp
test
loope
pop
cmp
xchg
in
mov
or
mov
sbb
inc
push
pushf
add
push
and
sbb
fdivs
ss
inc
add
stos
or
adc
into
adc
or
mov
je
dec
aas
loop
outsb
fs
call
iret
lds
subb
imul
inc
add
dec
sbb
and
dec
daa
jmp
lods
cld
std
jb
add
jl
mov
test
shl
cmc
in
stos
andl
pop
push
jo
jno
pop
push
add
call
lds
add
lret
mov
push
icebp
bound
test
sub
add
loopne
pop
xchg
or
add
jno
add
mov
fbld
inc
add
shrb
add
stos
insb
pop
in
loopne
add
jle
sbb
add
push
clc
je
dec
xchg
pop
ss
shll
push
and
aas
pop
sub
dec
sub
mov
repz
or
rol
int3
add
inc
sub
add
test
mov
jge
add
jl
adc
imul
lea
xor
push
sbb
mov
add
sbb
dec
cmp
sbb
jl
aas
rorb
push
je
add
inc
adc
fimull
xchg
add
inc
xchg
cmp
mov
aad
add
jmp
sub
inc
lahf
inc
aas
push
sbb
add
push
ficompl
fsts
mov
xorl
pop
cmp
loop
cld
jle
scas
movsl
cmp
add
enter
mov
dec
cmp
das
dec
ja
dec
add
in
cwtl
out
mov
lods
sti
shll
ss
push
and
ljmp
outsl
movsl
out
jge
lahf
or
push
cmp
sub
ja
sti
mov
add
sub
adc
test
and
cltd
dec
pop
test
pushf
lds
pop
and
ds
cmp
clc
adc
xchg
test
add
movsb
pop
das
cld
loopne
bound
adc
jecxz
push
xchg
nop
in
js
mov
push
rol
insb
sub
and
lds
dec
pop
pushf
rorl
test
aam
in
pop
and
xlat
or
push
or
add
sbb
mov
out
js
adc
or
es
lds
add
sbb
xor
add
jnp
xlat
jg
int3
mov
lock
cwtl
aaa
mov
mov
fs
sbb
cmc
mov
cmpsb
ficomps
and
in
clc
shlb
mov
add
push
push
shll
pop
loope
jnp
mov
stc
add
loopne
push
or
mov
insb
mov
sbb
sti
out
lret
adc
push
iret
or
data16
push
pop
js
add
push
in
cmpsl
mov
xlat
add
iret
shr
fs
in
test
cmpsb
dec
hlt
ret
lret
insl
add
push
jecxz
push
pop
fs
pop
aas
and
cmp
pop
add
gs
popa
les
xchg
add
test
add
mov
mov
fldl
inc
adcb
outsb
add
sub
push
lods
das
add
cmp
adc
lods
mov
add
stc
scas
dec
sbb
les
add
and
jmp
push
je
test
aam
xor
mov
mov
jno
sbb
add
push
call
or
xor
mov
mov
jmp
inc
xor
jecxz
fimuls
adc
enter
add
data16
outsb
ja
and
and
jmp
xorl
pop
or
ja
lock
add
sbb
xor
loope
push
rolb
call
adc
cmpsl
aad
add
sbbl
add
hlt
aad
jle
inc
add
sub
dec
push
js
mov
pusha
aas
repz
cmp
mov
xchg
arpl
std
jg
movsl
lret
mov
adc
int
mov
test
add
scas
dec
cmp
ficompl
xlat
icebp
mov
pop
imul
push
mov
lea
fdivrl
mov
cmp
xchg
jle
jg
xor
dec
sbbl
ljmp
sbb
cld
lahf
xlat
rolb
std
sbb
xchg
sbb
mov
int
lock
rcrl
pop
icebp
adc
mov
in
jnp
out
subb
loop
jmp
add
push
and
dec
push
pop
sbb
cmp
movsb
rcrb
lret
inc
vmwrite
jmp
or
pop
or
mov
xchg
xor
jmp
add
aaa
movsl
and
mov
fcomip
lret
test
lock
loop
fisttpl
sbb
cmp
and
dec
fiadds
xor
mov
or
test
add
and
cltd
mov
or
out
mov
cld
sar
add
insl
js
push
xor
push
in
cmp
clc
loopne
dec
cld
push
add
push
pop
repz
daa
inc
jge
jl
sbb
push
stos
sbb
and
cmp
cmp
inc
sub
das
shlb
pusha
notl
lds
or
bnd
or
shlb
cmpsl
mov
sub
jne
add
fwait
imul
push
jl
pop
orb
lock
js
mov
dec
xor
dec
xor
or
aas
and
icebp
or
xor
jae
ficomps
idivb
mov
dec
cs
icebp
mov
lahf
adc
mov
movb
lds
sub
add
mov
jmp
fdivr
ja
mov
int3
cmp
push
cs
sarb
xchg
pushf
lret
mov
or
or
ds
in
mov
pusha
pop
mov
lret
add
gs
and
shl
push
add
ja
inc
pop
ljmp
les
jecxz
pmullw
push
lret
mov
push
jnp
cmpsl
adc
add
jno
lods
push
fs
xorps
aad
xchg
repz
or
mov
add
cmp
xchg
inc
mov
stc
fwait
jg
cmp
add
test
push
xchg
push
jmp
mov
dec
cmp
adc
in
outsb
mov
fmull
mov
or
xchg
loopne
and
xchg
or
mov
repnz
clc
sti
mov
push
sub
push
nop
insl
xor
mov
repz
lods
loopne
insb
lock
adc
jmp
insl
mov
add
mov
add
mov
cwtl
scas
or
sbb
add
mov
inc
int3
cld
xor
cwtl
bound
mov
lahf
sub
mov
add
xor
add
les
push
add
loopne
jle
mov
xor
xor
and
enter
movsl
push
xor
popf
sbb
jo
dec
and
mov
lea
xor
sbb
sbb
push
push
or
loopne
out
sbbb
scas
sti
xor
pushf
mov
adc
add
dec
pop
jle
aaa
enter
adc
add
add
pop
sub
jge
outsl
ret
jg
add
int3
fbstp
daa
add
add
sahf
jns
xchg
shl
mov
cmp
mov
imul
pop
add
push
enter
cmp
shll
stos
mov
cmp
sbbb
fdivr
loope
add
push
push
cmp
addr16
add
and
ss
push
sub
jnp
js
into
pop
sbb
in
cmp
aaa
add
and
test
aas
mov
xorb
adc
or
xor
rolb
mov
sub
adc
sub
stos
popa
int3
mov
mov
and
push
stc
inc
mov
xor
mov
xchg
add
sbb
cwtl
insb
lcall
sahf
pop
out
ja
dec
popa
cmc
adc
inc
test
pop
add
mov
sahf
movsl
pop
inc
dec
pop
in
pop
cmp
mov
lds
int
shl
ret
sarb
mov
mov
cmp
mov
jno
das
cmp
xchg
add
enter
adc
xchg
cmp
dec
mov
lea
push
mov
push
add
jle
repz
jnp
xlat
push
lods
ja
mov
mov
out
pop
add
lock
mov
mov
fwait
add
daa
push
sub
xchg
xchg
int3
add
or
push
add
test
fs
pop
vmovhps
lods
add
jno
add
push
sub
invlpg
jecxz
loopne
loop
pusha
or
add
ja
push
shlb
pop
add
cmp
fs
outsb
pop
add
ret
mov
add
das
sub
add
dec
pop
dec
sub
das
jnp
pushl
shrb
sub
ret
lea
cmp
jo
stc
repnz
xchg
xlat
int
inc
iret
jg
add
fldcw
xchg
add
mov
mov
test
cwtl
adc
subb
addr16
or
fcomip
and
sbb
mov
dec
insb
pop
stos
bound
aad
insl
stos
stc
scas
xchg
sbb
lret
jle
popa
pop
call
lods
sub
ss
push
outsb
adc
hlt
test
subb
add
lret
or
dec
push
add
fs
fdivr
dec
add
dec
lea
cltd
dec
sub
or
fdiv
xor
and
add
and
fadds
add
mov
loopne
push
fs
push
cmp
add
mov
ret
mov
mov
loopne
test
sub
push
push
pop
inc
pusha
xchg
xchg
or
pop
sbb
mov
shll
fs
inc
shlb
xor
mov
push
fchs
inc
out
xor
sub
stc
jg
bound
sbb
stos
insb
cmpsl
ret
js
add
mov
add
jb
cmc
sbb
cld
pop
xchg
jno
or
pop
and
aad
pop
xchg
inc
pop
dec
cmp
sti
cmp
in
stos
es
add
push
and
scas
dec
and
loop
daa
stos
aas
jge
enter
cmp
stos
repz
pop
aad
add
bnd
sub
je
add
pop
out
and
mov
sub
pop
test
fadd
leave
xorl
add
and
rcrl
out
sti
test
pop
out
sub
and
pop
ds
out
movsb
js
int
je
fisubl
addl
mov
clc
mov
xlat
aaa
mov
jle
sub
xor
push
xchg
xor
cmp
xchg
sbb
lcall
es
in
pop
int3
les
mov
or
mov
daa
pop
mov
and
andl
pop
xor
loope
cwtl
adc
or
dec
and
daa
add
les
orl
out
popf
test
mov
stc
popa
cvtpi2ps
jno
shrb
or
pop
xor
sbb
mul
add
scas
icebp
and
xchg
sbb
daa
xor
adc
push
leave
mov
scas
pop
mov
cs
cmc
pop
jle
xchg
add
mov
idivb
jae
je
icebp
pop
es
test
xor
movsb
add
lcall
loopne
add
icebp
das
in
pop
xlat
sahf
dec
test
mov
outsb
adc
add
dec
push
mov
and
ljmp
fdivl
pop
mov
dec
mov
addl
cli
shlb
push
xor
xor
divl
jle
notb
scas
or
jge
cmp
xchg
loope
shll
in
aad
mov
pop
std
addr16
shlb
inc
push
daa
and
rolb
push
xor
popl
dec
pop
sarb
xchg
cwtl
cmp
mov
repnz
test
and
cltd
push
fwait
test
pop
fimull
dec
lahf
andb
sti
sbb
clc
add
bound
pushf
daa
insb
fstps
test
pop
sub
lret
push
push
add
lock
call
mov
mov
jl
add
jp
movsb
push
ss
jbe
loopne
mov
inc
sahf
pusha
mov
rorl
adc
xchg
js
xchg
xchg
sti
lock
add
mov
cmp
adc
lds
add
pop
fcomi
sub
adcl
add
cwtl
or
push
push
in
movsl
add
mov
mov
add
lret
mov
add
rcrb
mov
add
out
lahf
scas
sarb
sbb
lods
push
pop
call
data16
sub
in
mov
inc
dec
sbb
add
push
lods
popf
das
lods
jne
pop
js
mov
cmpsl
jecxz
shll
adc
add
dec
shrb
mov
adc
mov
out
fdivl
dec
push
nop
popa
xchg
and
push
out
add
lods
decl
ljmp
mov
add
das
push
pop
imul
pushf
cmp
fstpl
add
xchg
in
icebp
pop
nop
or
pop
in
lea
or
orb
pop
and
shl
outsb
sbb
std
add
les
inc
sbb
add
sub
aaa
add
andl
sbb
arpl
cmc
das
xchg
jns
add
jl
or
dec
xor
jbe
je
montmul
cmpsb
xorb
js,pt
pusha
sti
nop
aas
pop
fwait
mov
inc
sub
mov
or
add
add
hlt
sub
mov
add
shrb
adc
add
fwait
mov
cltd
adc
xor
add
sbb
adc
mov
pop
add
push
loop
or
jo
movsb
add
sbbl
add
and
push
popf
arpl
test
lods
push
mov
mov
test
xchg
push
add
pop
sbb
jbe
push
out
mov
sbb
dec
pop
je
dec
fsubs
push
lea
fcoml
jnp
pop
rolb
cld
out
loope
js
lcall
ret
inc
ja
daa
imul
fldl
int3
es
mov
push
lods
dec
adc
and
scas
push
and
enter
sahf
add
pop
pop
loopne
inc
add
lds
stos
jne
in
push
mov
popa
or
xor
enter
dec
bound
add
and
mov
fldl
inc
std
pop
fsts
dec
je
mov
and
add
mov
iret
mov
fsts
cmp
push
dec
je
jo
push
mov
pop
add
inc
jo
jmp
insb
pop
or
add
test
cmp
arpl
cwtl
xchg
and
pushf
pusha
cmp
push
mov
sub
enter
xchg
inc
cltd
cs
xor
add
cli
or
sbb
lock
mov
xor
cltd
pop
popa
nop
push
adc
addb
movhps
add
xchg
jo
mov
cmp
push
add
xchg
adc
adc
loopne
adc
popf
test
pop
cmpsl
mov
lds
pop
jns
imul
xchg
shrb
jg
lret
ja
add
add
iret
xor
repnz
jp
sub
and
clc
test
push
repz
jmp
xorb
and
cmp
or
out
or
andl
push
loope
fldt
jmp
ret
and
enter
test
fdivl
push
stos
mov
insl
xchg
push
fisubrl
inc
test
dec
cwtl
add
fldl
cmp
fwait
cmpsb
push
mov
call
mov
mov
add
inc
dec
push
pop
pop
sbb
and
push
add
in
jg
dec
push
push
inc
sub
orb
xor
pop
add
test
or
and
push
test
mov
popa
pop
imul
fisubrs
add
inc
pop
push
adc
into
repnz
add
sub
push
mov
add
int3
jnp
jns
enter
mov
add
mov
and
das
repnz
mov
sbb
add
sbb
les
adc
add
sub
mov
test
lea
cld
xchg
incl
cvtps2pi
aaa
cmp
fstl
out
mov
insb
movsb
loop
es
lret
imul
adc
rorl
cmp
rcrl
pop
push
test
movsb
les
cmpsl
jmp
push
popf
jae
and
cmp
pop
fistps
flds
dec
adc
pop
notb
sti
mov
mov
dec
push
jmp
fbstp
rorb
xor
lahf
fiaddl
inc
shlb
es
mov
cmp
xor
and
add
inc
mov
add
add
inc
pusha
sub
inc
inc
mov
in
repz
cmp
les
add
lret
push
repnz
stos
sbb
stc
dec
stos
sbb
pusha
popa
aas
pop
mov
sbb
cmp
pop
add
sbb
mov
scas
jl
pop
mov
stc
addr16
subl
and
enter
ja
add
cmp
mov
push
mov
add
or
add
jp
imulb
jns
je
xchg
sub
cmp
push
repnz
xchg
movsb
lds
fidivl
cmpsl
sbb
jge
sbb
int
jl
sti
xor
aas
push
scas
flds
fidivrl
ret
jno
add
inc
xchg
cmpsb
add
fildll
lods
lea
aaa
add
xor
into
add
sub
mov
sub
mov
nop
jo
out
adc
stos
pop
insl
negl
out
xlat
addb
cmp
sbbb
and
xchg
add
cmp
push
and
icebp
jge
es
add
adc
loope
sbb
les
mov
xor
inc
sub
fdivrs
stos
add
add
pop
fisttps
sbb
je
cmpl
or
test
xchg
sbb
pop
mov
in
add
cmp
repz
fldenv
xlat
daa
add
jge
cmpsb
mov
cwtl
fcmove
clc
testb
out
les
sar
aam
or
cmpsl
mov
add
and
dec
xor
out
add
mov
push
addr16
add
push
fldl
popa
stos
xor
pusha
or
add
mov
jb
orb
fiadds
std
xchg
int3
jle
cmc
cwtl
push
add
pop
sub
or
outsb
adc
xchg
ds
addl
andb
or
and
add
sbb
mov
sbb
adc
and
jle
xor
clc
popf
add
adc
pusha
mov
outsl
and
sub
mov
rclb
adcb
shr
jp
jmp
push
xor
mov
inc
stos
inc
add
mov
mov
and
scas
mov
mov
test
sbb
repz
push
lods
movl
aad
xchg
lds
je
shrl
dec
lret
mov
aas
push
mov
sbb
dec
inc
and
mov
pushf
mov
jmp
idivl
xchg
add
dec
lds
fdivrp
add
cmp
sti
inc
rcr
divb
cmp
push
dec
push
xchg
cmp
add
lods
push
stc
loopne
jns
adc
inc
xchg
mov
or
jmp
dec
push
shlb
xchg
push
les
mulb
scas
push
xlat
fcoms
push
xor
pop
fsubr
xor
cmpb
cmp
aad
lret
cmp
add
push
stos
sub
xchg
inc
cmp
push
add
cmpb
icebp
lret
cmp
lcall
mov
push
lods
mov
aas
mov
push
pushf
cs
fldl
rcrb
negl
add
lret
mov
xchg
adc
pop
adc
shlb
inc
repz
cmpsl
sbb
inc
rcrb
and
cs
add
push
cld
xchg
pop
test
jge
mov
mov
xchg
adc
clflush
addb
push
mov
push
push
fadd
sub
add
mov
and
sbb
adc
in
xorb
pop
add
sti
es
cmp
jns
pop
jg
mov
roll
push
fcompl
aad
push
push
insl
xlat
pop
jne
adc
sbb
faddl
dec
test
adc
dec
cli
ds
cld
test
xor
in
add
fnstenv
add
xor
sub
cmpb
add
push
out
jp
push
push
dec
pop
sub
ljmp
mov
pop
hlt
or
out
jge
sub
mov
pushf
push
loop
and
fldl
push
mov
cmp
clc
out
pop
jb
xchg
adc
cmp
pop
mov
mov
lods
jmp
rorl
adc
je
stc
pop
inc
add
push
inc
mov
in
leave
sub
es
mov
jno
test
out
pop
sub
lahf
sbb
frstors
push
dec
add
dec
push
fiadds
jnp
xorb
push
addl
sub
mov
jbe
nop
enter
pop
sub
or
inc
sbb
add
ss
xor
nop
pushf
push
mov
sub
sarb
pushl
add
nop
jp
ds
xor
mov
jns
and
cmp
pop
add
and
jns
mov
fs
repnz
inc
xlat
aad
add
pop
fcomps
clc
gs
or
sub
cmp
cmp
sbb
in
nop
sbb
scas
adc
mov
mov
std
add
inc
xchg
cmp
dec
aad
addb
lock
jge
cmpsb
adc
mulb
add
mov
cmp
xor
arpl
or
mov
mov
add
fdivrs
lds
dec
cmp
adc
jno
cmpps
shlb
stc
sub
dec
sbb
fsub
std
cmp
xor
andb
cli
pop
push
or
movsb
push
adcb
add
mov
xor
loop
jno
jno
and
loope
add
pop
stos
cld
mov
call
inc
aam
int
es
fisttpll
clc
arpl
inc
mov
mov
dec
call
xlat
es
xchg
mov
andl
testl
pusha
bswap
out
rcr
shlb
jns
scas
add
pushf
enter
or
pop
add
and
mov
push
cmpsb
sub
ja
push
inc
cmp
int3
fisttpll
jmp
dec
je
outsl
pusha
inc
and
rcrb
xchg
mov
out
mov
sub
sbb
sbb
js
cmp
inc
add
or
and
cmp
in
test
rorl
pop
test
xor
push
ret
lock
into
dec
mov
je
mov
pusha
test
add
call
shlb
dec
rorl
mov
stos
mov
loop
push
mov
dec
cld
pop
mov
sub
push
mov
sbb
jl
sahf
outsl
int
mov
movsb
cmp
mov
nop
mov
imul
rcll
in
pop
lods
or
faddl
dec
aaa
xchg
roll
xchg
decb
cwtl
or
je
ds
filds
mov
adc
cmpsl
roll
or
ds
out
arpl
sub
incb
cmp
xlat
pop
adc
imul
adc
jle
add
fwait
gs
insl
add
sbb
nop
adc
jb
xor
imul
xor
dec
or
cmp
fiaddl
call
subl
rcrl
pop
jnp
jmp
mov
in
sub
sub
lods
adc
push
movsb
and
mov
les
pop
jbe
adc
mov
aad
je
push
loop
gs
push
test
xchg
mov
daa
mov
divl
lods
mov
xchg
repz
cmpsb
popa
cmp
xchg
into
and
dec
pushf
add
out
xchg
xor
aad
adc
lods
xor
mov
cli
fadd
xchg
add
out
sbb
loop,pn
sti
add
mov
sbb
mov
mov
andb
pop
jae
xchg
hlt
popf
jg
push
jmp
xchg
dec
filds
cs
jb
loopne
mov
cmpsl
mov
data16
cwtl
daa
sub
add
xchg
add
mov
dec
pop
pop
and
add
dec
mov
dec
cs
push
push
adc
jbe
xor
adc
inc
inc
or
xor
lret
adc
outsb
or
add
inc
push
mov
and
add
xor
add
push
out
aad
mov
shll
and
gs
inc
mov
and
cmp
pop
add
clc
push
inc
data16
dec
xor
mov
mov
jbe
jno
and
push
push
test
add
sbb
jp
add
adc
lock
push
cmp
adc
and
add
inc
mov
mov
xchg
rcr
shlb
fcmovnu
out
xor
cmp
mov
push
mov
xchg
ret
push
or
inc
mov
into
add
or
add
add
and
dec
addr16
jns
outsl
into
gs
inc
add
movsb
aas
cmp
in
loopne
pop
dec
cmpsl
mov
xor
outsl
jno
add
mov
sbb
xor
ss
and
add
ds
jae
xor
rcrb
mov
cmc
mov
dec
dec
mov
xlat
inc
mov
sbb
mov
sub
push
in
pop
sbb
cs
jmp
outsl
xchg
movsl
ds
mov
pop
pop
mov
dec
fmul
dec
ja
mov
push
popf
and
repnz
mov
arpl
fidivrl
mov
iret
sub
inc
add
test
inc
and
lahf
and
popf
push
roll
and
add
add
jne
sub
aad
lock
sub
jp
add
outsb
push
decb
loop
inc
cmp
mov
push
jno
mov
jg
out
sbb
pop
push
adc
or
cmc
adc
adc
sti
test
movb
add
mov
incl
aam
and
pop
add
cmpsl
push
int3
pop
xchg
xor
sub
add
in
dec
mov
pop
mov
xchg
dec
enter
sbb
movsb
syscall
sbb
shlb
push
pop
mov
push
js
pop
add
sbb
cmp
es
push
pop
jmp
push
movsb
les
repnz
pop
bound
add
pop
xor
rclb
pop
insb
popa
enter
sbb
rcrb
add
leave
mov
pop
clc
pop
xchg
pushf
mov
inc
daa
xchg
lock
test
pushf
add
ret
or
ljmp
pusha
dec
test
jae
ficompl
jne
and
xor
lret
test
sbb
enter
adc
rorl
stc
movsl
hlt
out
cmp
dec
xchg
or
inc
lds
mov
adc
sbb
aam
out
sbb
hlt
nop
mov
pop
add
sbb
test
cs
add
js
xchg
and
movsl
mov
rcll
lahf
push
mov
add
decb
les
add
int
inc
add
xchg
stos
pop
mov
fisttps
push
ja
cwtl
out
pop
jg
sbb
add
dec
lret
xchg
punpcklbw
jns
lahf
inc
repnz
mov
movsl
adc
inc
dec
leave
insl
mov
mov
cmp
cmp
sub
aas
movb
loope
aad
stos
cmpb
xlat
inc
jp
sbb
mov
and
fmul
or
jge
inc
or
sarl
pop
ljmp
or
sbb
call
movsb
add
and
jnp
cmp
xchg
sbb
adc
loopne
add
xchg
cmp
test
add
sub
ret
or
mov
inc
and
dec
jne
movsl
add
jo
iret
fisttpll
add
adc
les
imul
jmp
sbb
dec
or
je
jbe
repnz
mov
xor
adc
int3
and
jno
add
sbb
aad
fwait
xchg
or
mov
loopne
cmovae
and
pusha
or
es
rolb
dec
ss
xchg
push
fnstenv
aam
insl
or
inc
adc
loopne
jns
fisttps
mov
enter
test
test
js
fsubrl
loop
pusha
cld
push
popa
lock
sbb
mov
jne
call
adc
pop
mov
mov
scas
dec
sbb
adc
cmp
jg
mov
xchg
mov
fwait
push
imul
nop
mov
mov
dec
jno
mov
cmp
sbb
mov
xor
xlat
fs
and
loopne
cmp
leave
std
inc
repz
push
add
rolb
xchg
mov
push
cmpsl
jb
cli
imul
shlb
or
roll
imul
xorb
popa
cmp
xor
insb
test
add
dec
inc
push
and
addb
mov
pushf
mov
mov
inc
ss
or
or
mov
mov
movsb
fs
cwtl
fisttps
call
ja
or
scas
dec
dec
push
adc
push
add
out
lods
cmp
and
mov
insb
iret
xor
int
addb
pop
test
inc
out
cli
push
or
cld
and
inc
sbb
adc
out
adc
cmp
scas
mov
mov
add
pop
push
or
or
nop
add
jae
decl
xor
aam
inc
mov
inc
aas
sub
scas
outsl
sub
call
mov
cwtl
push
fucom
xchg
jns
shlb
imul
push
pop
mov
mov
pop
mov
and
cmp
pushf
cmc
scas
int
dec
loope
mov
scas
adc
or
test
shr
out
push
cmp
push
lods
rclb
mov
shl
dec
xor
add
leave
push
mov
adc
jne
push
test
sub
insl
sub
xor
sbb
adc
xchg
push
call
mov
aad
movsb
jnp
and
push
shll
dec
nop
or
sub
and
adc
inc
cmp
roll
pop
test
mov
fnstenv
lcall
shl
adc
pop
mov
cmp
push
ljmp
pop
push
sbb
cli
jle
cmp
mov
scas
fimuls
add
fsub
lcall
outsl
dec
and
xchg
out
add
adc
repnz
jno
fnstenv
mov
cmc
inc
jle
adcl
mov
push
cli
push
or
rcrb
xor
mov
jbe
imul
aas
mov
mov
imul
pop
aad
inc
call
mov
fcompl
insb
adc
je
inc
adc
clc
aas
loopne
lods
pop
mov
mov
shrb
dec
filds
cmpsl
xor
inc
pop
and
push
xor
shlb
fnsave
int3
mov
xor
cmp
mov
mov
jo
ljmp
loopne
fsubr
or
mov
sbb
mov
push
and
add
adc
repz
aad
or
dec
mov
xor
lret
popf
repnz
jo
push
mov
add
push
cmp
lret
punpcklbw
or
and
mov
push
add
imul
pandn
mov
add
mull
fs
inc
scas
test
mov
add
cmpsl
inc
arpl
xchg
add
out
enter
shr
xor
into
mov
fistpll
insb
cwtl
push
mov
xlat
xor
inc
mov
mov
mov
test
mov
fnstsw
xchg
sbb
mov
jbe
push
hlt
mov
adc
and
adc
xor
mov
test
cmp
xchg
adc
push
push
rcrb
and
adc
mov
arpl
fidivl
mov
xchg
dec
sub
or
sbbb
or
mov
outsl
hlt
pop
pop
sbb
push
fdivrl
imul
add
pop
popl
mov
mov
and
cmp
mov
push
dec
sbb
push
dec
mov
cmpb
adc
push
in
inc
mov
sbb
es
push
jo
xor
jbe
loopne
adc
add
dec
insb
mov
xor
mov
add
sub
push
or
jb
add
pop
push
xor
add
ret
jns
adc
pop
ret
jae
test
aas
add
push
lock
flds
jae
jns
lret
push
push
pop
mov
in
and
out
clc
xchg
ljmp
inc
mov
mulb
sub
int
push
pop
or
and
fcoms
popf
jb
fdivs
ret
xchg
sbb
insb
outsl
insl
dec
add
xor
cmp
fnstenv
cs
js
push
bound
adc
cmp
in
sub
je
jb
push
orb
aas
mov
fcomps
jge
pop
loope
inc
dec
faddp
cmp
inc
push
aas
pop
xchg
subb
aad
test
dec
lret
subl
mov
dec
ds
loope
xor
aam
add
loop
out
push
push
mov
pop
xchg
lds
push
pusha
lcall
lret
cmp
out
or
cmp
add
shlb
inc
sbb
cmp
outsl
addr16
jno
add
aas
out
or
mov
hlt
pop
add
ss
and
arpl
mov
pop
dec
dec
lret
push
out
ret
pop
jl
push
test
xorb
pop
jp
insl
and
inc
iret
aas
repnz
test
sbb
and
add
and
xchg
xor
adc
mov
daa
in
add
sbb
or
or
cmp
stc
add
fidivs
movhps
shr
add
jo
mov
push
adc
adc
push
pop
xor
xchg
inc
adc
lret
inc
add
jge
push
inc
and
cmc
dec
add
mov
sub
ja
movl
xchg
push
add
jb
jge
daa
jge
inc
sub
rorb
cwtl
and
cmc
cmp
int3
jno
push
shl
in
push
cmp
rclb
lret
mov
outsb
test
add
adc
ret
xor
push
mov
outsl
dec
or
add
fcoms
in
push
sarl
cmp
loope
pusha
pushf
fcomip
inc
or
addb
add
adc
xor
push
add
mov
and
inc
mov
adc
orb
gs
push
pop
fnstcw
inc
rolb
sub
cltd
js
dec
enter
mov
ret
insl
fbld
cmpb
cmp
dec
jo
pop
add
pop
dec
rolb
xor
push
fsubrl
add
andl
add
loop
mov
arpl
mov
xor
arpl
inc
cmpsl
ds
cmc
sub
leave
mov
aad
mov
cmp
inc
int3
dec
mov
push
push
pop
pop
in
jnp
ret
enter
inc
or
mov
scas
mov
jnp
pop
push
xor
mov
cltd
add
and
push
mov
push
mov
cmpsl
mov
mov
xor
inc
add
xchg
sti
loopne
xchg
daa
rolb
cld
jle
dec
fisubs
fs
stos
or
inc
out
call
mov
test
mov
lret
add
adc
xlat
sahf
mov
into
mov
sbb
sahf
fs
add
and
and
call
mov
add
in
mov
xchg
iret
insb
cmp
ss
arpl
flds
sub
pop
sub
cld
cs
incl
mov
cmpsl
popa
rol
mov
stos
and
js
into
test
out
add
les
inc
pop
dec
mov
mov
jg
dec
sbb
jns
dec
or
addb
mov
pop
sbb
inc
inc
fstps
lock
inc
pop
orb
add
sbb
jle
mov
mov
pusha
pop
pop
sti
daa
inc
mov
fnstenv
les
jp
mov
push
and
jb
leave
add
fisubrs
int3
push
sti
sub
xchg
in
and
sub
call
add
mov
test
sub
outsl
cmp
mov
iret
add
xchg
cmp
mov
scas
jb
push
mov
dec
int
xor
jmp
das
dec
jns
add
jo
pushl
mov
xor
or
jl
and
mov
fcmovne
pushf
add
sbb
add
or
push
mov
or
inc
push
adc
cmp
int3
mov
fwait
test
mov
andb
xchg
lret
test
scas
shll
pop
and
or
test
cs
pop
sbb
add
mov
push
js
jo
add
mov
fcmovne
inc
push
mov
push
pop
cmp
in
js
push
fistps
push
inc
push
pop
loopne
add
sarl
lcall
in
cwtl
mov
lods
call
sbbb
push
add
sbb
cmpsb
mov
push
les
cmpsl
inc
add
test
and
xchg
adc
pop
xchg
aad
sti
lds
imul
or
mov
jne
add
mov
jb
mov
sub
mov
enter
adc
fs
mov
outsl
add
fisubrs
jge
rorb
sub
inc
lret
add
jnp
fiaddl
adc
fsubr
mov
imul
ja
push
hlt
sbb
xlat
rorl
clc
jne
mov
mov
and
lcall
jmp
in
xchg
bound
add
shrl
add
hlt
push
jns
sub
in
add
xchg
test
sub
clc
pop
sub
add
stc
ror
adcb
xchg
pop
and
add
pop
lea
mov
mov
add
orb
dec
cmpsl
and
scas
das
dec
or
ret
push
data16
roll
call
shlb
push
xchg
inc
stos
cmp
int3
std
add
movsb
mov
pusha
and
mov
or
out
or
push
and
dec
pushf
add
inc
or
add
mov
fnstenv
inc
add
mov
and
sarl
imul
das
cmp
inc
int3
inc
rolb
or
mov
mov
test
xchg
push
scas
aad
es
push
pusha
sbb
xor
or
jge
cmpsl
fisttps
pop
inc
lods
nop
aam
mov
ds
sub
and
insl
bnd
js
orl
mov
or
add
jecxz
xorb
sub
mov
dec
cld
pop
test
adcb
hlt
adc
test
in
push
pop
mov
decb
ret
mov
imul
add
movsb
in
add
sbb
lret
pop
test
outsl
imul
dec
add
inc
jl
mov
mov
push
jecxz
add
movsl
add
shrl
pop
mov
or
jmp
fcomip
fdivrl
jge
add
popa
int3
data16
cld
sbb
sti
imul
add
jbe
mov
pusha
adc
adc
mov
jl
pop
loopne
cli
mov
pop
movsl
jmp
sub
add
divl
scas
dec
jnp
cmp
sbb
mov
inc
or
js
xchg
jl
sub
inc
add
mov
rcrb
adc
int3
ret
adc
int
xchg
sbb
push
cmpb
int
adc
sub
loop
add
cmpl
je
and
dec
fstpl
add
and
ret
add
leave
mov
ss
add
ffreep
insb
jge
mov
inc
mov
inc
mov
fldl
sub
sar
jge
ret
and
pop
mov
inc
jl
pusha
mov
dec
testl
fstpt
mov
inc
sahf
not
pmullw
push
movsb
fdivrs
ret
and
push
scas
adc
popf
repnz
mov
jp
add
loopne
inc
leave
cmpb
es
add
cmpsb
xchg
pop
lock
out
add
inc
sub
and
jmp
xor
lods
daa
jle
dec
push
jecxz
scas
mov
push
jmp
data16
popf
push
sub
rcl
testl
sbb
sub
out
jno
mov
aas
loope
arpl
jmp
roll
mov
dec
cmpb
mov
out
sub
mov
jp
pop
pop
hlt
and
mov
addl
sub
add
lds
adc
mov
cmpsb
pop
leave
sbb
inc
aas
sub
xchg
ja
ret
jbe
sub
cli
mov
mov
inc
mov
sahf
and
lock
jno
xlat
imul
leave
lahf
or
dec
cmp
jp
jbe
mov
pusha
fsubs
inc
dec
in
cs
pop
adc
mov
mov
mov
lock
mov
or
add
in
lods
loopne
jae
cmp
push
sub
pushf
push
inc
mov
mov
xchg
dec
add
idivl
lods
push
xlat
inc
pop
mov
or
clc
sahf
or
dec
and
mov
lcall
mov
sbb
in
mov
jle
loop
in
add
das
and
sub
iret
fsubs
jb
add
lock
add
adc
leave
adc
movsl
imul
add
insl
sub
xchg
mov
or
mov
jae
jne
hlt
mov
xchg
hlt
inc
mov
mov
xor
xchg
adc
loop
xorl
rclb
cmc
xchg
inc
addr16
adc
lods
pop
xorb
into
jnp
pop
ja
adc
rclb
dec
ret
fs
adc
loope
fmul
add
dec
push
enter
fwait
sahf
lock
jae
add
adc
and
enter
xor
shll
mov
adc
mov
leave
aam
and
popa
adc
pop
pop
scas
xor
or
sub
filds
mov
int3
in
add
sub
cmp
movsb
mov
loop
pop
pop
mov
rcll
loopne
nop
cmpsb
in
ljmp
movsb
or
adc
les
dec
punpckhwd
sbb
pop
cmp
push
cmp
aas
dec
pusha
inc
adc
inc
mov
je
adc
dec
mov
fldl
pop
xchg
lret
push
notb
inc
cmp
dec
and
je
fildl
jne
ret
dec
aad
xor
cmpsb
enter
mov
adc
test
mov
add
add
shlb
or
xchg
in
nop
pop
mov
dec
push
pop
sub
jge
clc
dec
add
cmp
dec
sub
adc
and
jge
pop
mov
repnz
mov
cmc
popf
mov
pop
fwait
hlt
je
pop
jo
rcr
or
shl
add
mov
xchg
xchg
dec
mov
test
mov
sbb
add
add
push
push
push
mov
cmc
mov
nop
js
movsb
mov
popf
pop
sbb
repz
rcll
fsubr
out
test
das
and
es
mov
cmp
sbbb
lea
add
xchg
mov
mov
gs
adc
cmc
push
jb
sub
sub
shlb
and
or
mov
or
in
repnz
in
push
out
mov
mov
lahf
or
fwait
pop
shrb
in
add
sar
sbb
xor
add
adc
sahf
stos
aam
sub
and
or
xchg
add
mov
mov
push
flds
sahf
add
mov
mov
fcomps
adc
hlt
shlb
mov
push
rclb
loopne
enter
xchg
push
mov
orb
mov
mov
add
das
mov
in
jmp
add
clc
cltd
xor
adc
add
scas
jl
loopne
rorl
dec
addl
pushf
or
loopne
imul
stc
add
aas
in
iret
shlb
orb
jge
fmuls
or
test
xlat
mov
imul
outsb
jne
cmp
fs
insb
shlb
aad
pop
movsl
out
mov
dec
ljmp
scas
pop
repz
xchg
cmp
lock
cmp
cmp
enter
pop
mov
dec
pop
cld
insb
inc
lret
cmp
add
pop
cmpb
dec
pusha
sbbl
inc
add
push
movsl
or
mov
cmp
insl
add
jns
xlat
adc
push
and
xor
add
mov
scas
and
rclb
sub
mov
jg
fs
call
outsb
int3
pop
push
addb
sbb
test
aad
xchg
movsb
xchg
push
clc
imul
ss
insb
addb
add
fcoms
int3
jp
cmpsl
pop
sub
xchg
fwait
add
bndldx
and
fidivrl
pop
push
scas
jmp
dec
insl
jnp
nop
cmp
sbb
xor
and
dec
jb
pop
stc
adc
cld
call
or
sbb
mov
insb
pop
push
or
mov
push
jl
lods
inc
lods
cwtl
or
inc
into
imull
ja
ds
mov
pusha
add
xchg
add
add
or
sub
sbb
cmp
or
aaa
rolb
or
mov
or
xor
xor
add
pusha
sub
pop
dec
mov
inc
mov
popa
mov
aas
jge
subl
sbb
sbb
fcmovnb
inc
mov
or
sub
sub
sub
jne
add
ljmp
mov
call
addr16
mov
stc
fldl
pop
sbb
and
add
pop
sbb
xchg
stc
add
and
imul
add
movsl
jl
inc
sub
jbe
mov
lcall
in
add
cmp
subb
inc
mov
inc
or
jbe
jp
dec
xor
pushf
sbb
addb
arpl
js
in
cmp
fstpt
add
iret
movsb
xchg
outsb
push
xchg
mov
cmp
push
dec
cmp
mov
stc
inc
push
les
aad
out
bound
ret
xchg
xor
push
inc
mov
lahf
out
mov
lock
sti
push
rcr
and
shlb
nop
inc
add
call
popf
add
lods
jp
cmp
pop
mov
xchg
out
xchg
and
hlt
xor
jg
fidivl
test
fmull
cmpb
daa
cmp
xchg
inc
call
repnz
jecxz
mov
add
cmpsl
inc
or
and
popf
add
data16
fwait
popa
cli
add
xor
mov
addr16
cmp
or
push
mov
or
or
test
push
inc
mov
push
loopne
add
xor
clc
shlb
das
hlt
mov
mov
incb
sub
mov
push
adc
sbb
incb
icebp
add
aam
test
bound
addr16
sbb
mov
jb
pop
shrl
add
jge
inc
imul
sub
adcb
sbb
out
xor
or
fwait
cmp
mov
cmp
mov
add
loope
dec
add
pop
bound
dec
addr16
add
push
addb
popf
xor
das
mov
add
and
insl
or
fdiv
and
ljmp
or
mov
cli
xchg
push
add
mov
shr
mov
nop
cmpl
xchg
mov
add
pop
push
outsb
sarl
les
or
cmpsb
sarb
movsb
jp
pop
jb
test
cli
call
lock
mov
clc
push
and
movsb
mov
mov
fsub
add
insb
xchg
mov
ljmp
mov
fwait
push
dec
mov
inc
mov
out
inc
jo
or
lock
or
sbbb
cltd
jo
sbb
inc
es
xchg
sub
sbb
xor
rorl
orl
testl
cwtl
clc
mov
add
insl
cld
and
cwtl
mov
cmp
adc
lcall
fdivr
fdivr
dec
nop
arpl
add
xor
dec
divb
in
outsl
add
lods
push
jecxz
in
daa
add
cltd
pop
xchg
test
jo
rorb
mov
jle
aas
loop
add
shlb
lahf
pop
pmaxub
push
filds
mov
add
or
das
pop
push
enter
rclb
add
cld
mov
sub
push
sarl
cmp
sub
sbb
add
jg
or
int3
mov
push
inc
xor
icebp
cmp
dec
xor
inc
push
mov
jge
outsb
push
push
adcb
sbb
pop
rcr
inc
add
iret
dec
stos
add
lods
add
fcmovnb
cltd
add
or
das
or
add
iret
mov
jno
pop
add
pop
jle
sub
pusha
add
xor
pop
add
push
shl
imul
cmp
sub
inc
jl
arpl
jnp
add
mov
dec
xor
stc
pop
stos
xchg
pop
lcall
pop
cmp
test
das
mov
add
hlt
movsl
dec
or
push
stc
jge
cmp
and
test
out
mov
mov
mov
mov
xchg
insl
add
xor
add
outsb
push
push
push
inc
bound
mov
leave
or
adc
inc
push
add
int3
fcoml
movb
fwait
mov
push
add
mov
or
push
cmpsb
roll
pop
pusha
jp
add
jmp
push
inc
mov
mov
nop
add
sub
add
loope
jge
sbb
pushf
pop
cmp
xlat
cmpl
sbb
int
test
cmpsb
add
add
xor
fsub
add
xor
scas
xchg
mov
hlt
ja
xor
rclb
pop
jp
jl
cld
shl
sub
dec
addb
out
cmc
adc
out
movsl
sbb
outsb
pop
insl
add
or
aam
mov
test
add
add
leave
daa
add
sub
pop
dec
push
xor
fucom
adc
mov
fsubs
adc
fs
sub
test
enter
sub
into
pop
leave
xchg
push
test
test
enter
jo
out
int3
stos
mov
push
pop
roll
sub
mov
sub
rolb
imul
fcomp
mov
mov
inc
mov
mov
or
inc
repz
sub
fdivrl
shrl
out
mov
jne
in
cwtl
mov
jecxz
arpl
flds
lcall
push
pop
adc
rclb
sbbl
push
inc
ljmp
pop
je
add
enter
cmp
add
fldl
add
loop
xlat
jae
pusha
pop
jl
pop
pop
adc
add
mov
sarb
fwait
rcrb
mov
popa
fstpl
pushf
adcb
add
and
out
orb
xchg
mov
movsl
cmp
addl
inc
sti
push
add
popaw
inc
std
dec
xor
push
cmp
push
mov
push
rcl
inc
sbb
subb
inc
dec
test
sub
inc
add
cmp
adc
mov
dec
xchg
adc
add
dec
cmpsb
mov
adc
pop
jb
xor
xchg
sub
outsl
les
test
mov
jle
adc
lretw
mov
das
fcmovb
and
movsb
clc
popf
sub
fldt
lcall
push
mov
je
add
test
pusha
jo
add
push
cmp
cmp
pop
imul
hlt
pop
or
mov
add
sub
jns
add
mov
mov
daa
pop
add
mov
add
xchg
lret
in
adc
cmpsl
fisubl
lock
sbb
jne
xlat
stos
or
test
es
and
lahf
add
bound
or
test
sbb
sub
pop
or
mov
movsl
nop
adc
stc
leave
add
mov
lret
cli
cltd
add
loope
push
jecxz
popa
sub
sub
xor
mov
mov
hlt
adc
sub
test
mov
out
sbb
lock
pop
mov
imul
or
add
sub
mov
jge
add
xchg
xor
pushf
mov
or
sub
push
inc
test
addr16
sub
mov
xchg
add
rclb
out
enter
loop
sub
add
pop
push
aad
adc
sbb
xor
pop
test
mov
sub
jmp
mov
lods
call
adc
cmp
xchg
xchg
mov
fcompl
xchg
shr
test
insb
cmp
mov
mov
mov
dec
xchg
mov
xor
aad
add
daa
mull
push
cmp
dec
mov
and
icebp
mov
dec
fmuls
push
scas
frndint
add
dec
gs
or
cmp
stc
mov
movsb
sbb
dec
lods
sbb
and
jmp
subb
cmp
test
add
mov
hlt
popa
mov
add
jecxz
cwtl
clc
cmp
add
mov
sbb
out
rcr
xorb
jb
xor
or
roll
sbb
nop
pop
jl
wrmsr
call
dec
xchg
int
pop
stc
int3
adc
adc
shr
cltd
add
add
adc
outsl
mov
jae
popa
bound
lock
add
xor
pop
inc
xor
mov
sub
loopne
orl
or
dec
and
cwtl
or
inc
clc
push
add
cltd
lcall
adc
cmp
cmp
xchg
aam
jb
inc
rclb
addl
xchg
xor
add
and
inc
or
add
stc
add
cli
test
mov
xchg
stos
shrd
mov
jae
add
and
or
mov
and
jge
outsl
mov
inc
jp
imul
or
movq
add
int
xor
ja
push
add
lret
jb
or
movsb
or
add
push
enter
and
fistpll
je
mov
push
fs
pop
push
jecxz
pop
aad
cltd
fnstenv
xchg
mov
add
mov
sahf
mov
shl
pop
pop
pop
dec
cli
cwtl
sub
movsb
popa
sub
sti
add
leave
andb
push
mov
or
rorb
jmp
fstps
or
in
jecxz
mov
xchg
add
test
push
imul
out
loop
push
lods
add
pop
adc
mov
sub
inc
dec
loop
mov
xchg
add
mov
or
loope
add
insb
pushf
or
nop
popa
dec
pop
mov
loopne
xor
adc
pop
cmpps
test
add
ret
int
mov
js
add
adc
fsubr
andl
xor
sbb
jo
pop
or
mov
cmp
das
ret
mov
sub
data16
mov
sar
add
cmp
ffree
popa
sub
jo
mov
out
cli
data16
cmp
test
add
pop
push
int
jo
sub
sbbl
mov
loop
jl
lret
or
scas
out
xchg
rolb
add
rcll
sub
aam
adc
xchg
pop
cld
cmpl
nop
out
pop
das
inc
pop
sub
xchg
fsubr
pop
lods
and
mov
push
xorl
and
lahf
in
ljmp
movsl
push
pop
movsb
inc
jl
adc
sub
mov
or
orb
inc
das
out
mov
clc
lahf
mov
mov
cmpb
jge
roll
stc
add
jo
mov
pop
mov
lahf
add
sub
add
sbb
push
out
rcrb
in
pusha
jbe
lcall
addr16
inc
or
fdivrs
inc
xlat
jmp
sbb
popf
or
adc
sub
mov
out
sub
xchg
add
sub
sbb
push
mov
jae
or
pop
loope
jg
fimuls
xchg
jne
pop
rolb
and
dec
nop
add
das
push
sub
inc
sub
cmpb
and
fcomps
decb
push
lcall
dec
arpl
sbb
dec
cmp
push
leave
mov
sub
and
sbb
add
dec
pusha
lcall
stos
int
aam
mov
fnstenv
add
mov
lods
lods
pop
jae
inc
stos
push
pop
push
or
loopne
inc
fiadds
cltd
xor
dec
sbb
inc
rol
mov
push
in
jns
add
lret
adc
cmc
sub
add
jnp
dec
jl
xor
scas
in
push
lahf
and
mov
loop
inc
mov
mov
imul
fcomip
call
add
addl
jl
push
dec
jmp
cwtl
sub
in
std
rorl
xor
sub
push
add
shlb
mov
in
xchg
inc
mov
int
push
xlat
cmpb
dec
adc
js
or
cmp
iret
pop
or
mov
adc
and
rorb
clc
cmp
cld
mov
lret
fsubrs
mov
lods
lahf
xchg
add
dec
in
jbe
push
or
out
enter
dec
mov
adc
sub
mov
cmp
jg
faddl
sbb
xor
or
in
test
subb
loop
mov
mov
jmp
inc
cmp
sub
sbb
lahf
and
pop
push
int
dec
stos
outsb
popa
add
cmp
jge
int
mov
pop
dec
das
dec
and
out
fwait
add
xchg
call
mov
jne
add
enter
xor
adc
shrl
xor
pop
pop
loopne
adc
mov
cmpsb
cli
jns
inc
int3
adc
pop
jae
add
mov
push
arpl
dec
add
in
into
test
inc
push
add
fwait
aaa
pop
not
test
cmpsb
fs
addr16
inc
fimull
add
xchg
push
adc
sbb
pusha
fisttpll
push
shrb
xchg
clc
mov
test
mov
jbe
or
push
test
in
add
lods
idiv
mov
lds
xor
xor
enter
mov
sub
out
adc
xlat
icebp
pushf
shlb
dec
or
pusha
call
jp
adc
add
cmp
rcpps
cld
pop
inc
pop
mov
or
loopne
mov
xor
add
aam
int3
mov
xor
andl
mov
mov
jge
clc
pusha
mov
lock
mov
dec
and
cmp
sarl
andb
jge
loope
inc
add
dec
and
add
jg
stos
nop
and
sbb
negl
seto
pop
mov
pop
adc
dec
cmp
add
jg
or
pop
add
je
fwait
push
invlpg
push
xchg
and
leave
out
andl
mov
or
cmp
add
pop
mov
clc
nop
rorb
jecxz
mov
cmp
aaa
add
int
pop
xor
movsl
lea
psubusw
and
js
clc
add
call
loope
or
sbb
andb
mov
jns
mov
and
pop
les
mov
xor
cld
adc
dec
push
ja
sub
hlt
mov
pop
add
adc
jl
xchg
rcll
fs
lea
sbb
sub
pop
xorb
addb
dec
mov
ficoml
insl
lods
add
xchg
jle
push
xor
imul
and
or
cmc
rolb
inc
sub
mov
pop
icebp
popa
adcb
outsl
push
add
lahf
int
or
jnp
add
fs
pushf
repnz
icebp
or
jb
cmpsb
std
mov
add
mov
push
mov
pop
or
inc
pop
loope
lcall
dec
push
mov
fsubl
lret
xchg
cltd
out
rorb
xchg
stos
jne
fs
cmp
enter
lods
shl
rcl
mov
pop
xor
out
test
dec
push
loop
clc
enter
sbb
inc
pop
add
dec
adc
out
xor
pop
and
push
cltd
mov
lcall
sub
popf
pop
test
orb
add
or
sbb
add
movl
pop
add
sbb
rolb
add
push
pop
cmpsb
test
add
sbb
dec
test
dec
xor
lock
push
mov
mov
sub
pop
out
fs
sub
xchg
dec
sbb
mov
jge
icebp
xor
push
adc
aam
pop
test
pop
dec
out
loope
cli
int3
pop
mov
mov
cmp
test
dec
mov
dec
fadds
xchg
pop
cmpl
outsb
std
rcrb
negl
push
cmp
movsb
cltd
push
dec
gs
arpl
paddusw
loop
pop
insl
add
cltd
push
mov
enter
or
or
or
mov
pop
mov
pop
or
rolb
jge
push
clc
pop
mov
cmpb
mov
add
xor
push
add
sbb
dec
cwtl
push
add
jno
fistl
mov
lahf
cmp
add
in
ja
andb
rcll
mov
cmpb
fstps
addr16
cmpsl
inc
push
mov
cli
xor
mov
cmp
cmpsb
push
je
jp
push
or
add
faddl
outsb
filds
mov
or
and
dec
pop
dec
add
je
xor
xor
shlb
adc
outsl
cmp
cli
mov
adc
mov
xchg
mov
outsl
leave
lcall
popa
sbb
mov
add
add
sub
xchg
sbb
pusha
xor
mov
cmp
mov
pop
scas
fs
js
adcl
js
aaa
dec
sub
leave
add
xor
fdivrl
cwtl
lahf
nop
rorb
adc
sub
out
mov
pop
imul
insl
pop
test
dec
push
inc
outsb
add
add
sub
hlt
push
inc
or
test
push
sub
stos
negb
cmp
inc
mov
jne
repnz
mov
or
lds
pop
aad
mov
popa
test
ret
aaa
adcb
push
lock
fcmovnbe
sbb
nop
pusha
arpl
mov
inc
push
fs
mov
insl
pusha
je
aas
out
fs
loop
lods
outsb
shll
test
loopne
add
icebp
in
and
wrmsr
outsl
ja
bound
flds
add
sub
jae
or
fs
add
outsb
cmp
popf
and
in
xchg
orl
add
ljmp
dec
js
fmull
mov
clc
jne
adc
sbb
push
or
jno
add
xchg
or
stc
xor
mov
jae
dec
es
pop
add
jae
pop
shlb
nop
test
inc
add
or
jne
sbb
and
test
nop
xor
add
ljmp
mov
orb
xchg
dec
jg
popa
jb
sbb
loopne
nop
loopne
xchg
mov
sarb
loop
scas
pop
sbb
std
jne
fadds
cmp
hlt
pop
adc
shl
sub
dec
sub
mov
stos
faddl
lret
aaa
fcomps
mov
popf
hlt
jnp
mov
addb
jns
jp,pt
mov
and
popf
jnp
jle
lcall
sbb
rorb
xchg
xor
aaa
loopne
into
int
ss
cltd
push
push
inc
rol
les
test
scas
ja
lods
pusha
mov
ret
in
sub
pusha
outsl
jb
idivl
in
mov
je
lods
je
incb
test
adc
or
mov
movsb
add
in
cmp
cmp
add
xor
out
cmpsb
or
push
outsl
push
in
mov
arpl
fsts
push
add
sbb
add
loopne
xorb
push
fsts
dec
fadds
mov
imul
add
je
sahf
jo
or
and
add
lods
mov
nopl
add
flds
arpl
and
in
add
mov
rcrl
out
nop
enter
in
and
sub
sub
mov
adc
mov
xchg
inc
andb
cmp
imul
push
fbstp
rclb
pusha
pop
popa
add
fsts
pop
sbb
mov
xor
filds
stc
mov
lods
inc
rol
dec
pop
ljmp
push
or
mov
mov
push
test
mov
or
ljmp
jge
jo
add
or
stc
cmp
xchg
or
notb
daa
cmc
jno
sbb
and
pop
leave
hlt
rorl
inc
icebp
mov
add
or
outsl
bound
mov
mov
aas
xchg
hlt
or
mov
sbb
loop
mov
sahf
fs
and
pushf
shll
sub
fs
adc
das
imull
imul
push
fwait
mov
pop
and
fmul
ds
and
mov
pusha
pop
cmp
roll
hlt
push
scas
faddl
lea
aaa
sbb
sbb
fwait
or
jo
dec
mov
push
add
into
fstps
add
out
jl
test
jne
ss
mov
nop
stos
adc
xorb
int3
mov
lahf
xchg
pushf
and
cld
repnz
je
out
add
dec
in
dec
jl
push
test
rclb
xchg
fs
jmp
out
push
push
add
in
jg
mov
xchg
adc
out
in
inc
adc
adc
lds
cli
test
adc
add
fwait
sub
sbbl
insl
cmp
inc
cmp
out
test
mov
lock
fmull
push
add
add
call
pusha
add
fcompl
das
sarb
xchg
xchg
dec
cwtl
mov
and
cli
sbb
in
and
cvtpi2ps
add
xor
fs
rcr
mov
test
scas
cmp
sub
int3
add
std
mov
sub
push
push
call
int3
pop
mov
inc
sub
sub
add
cmpb
jne
movb
mov
push
push
push
push
call
add
mov
pop
pop
ret
push
mov
pusha
mov
mov
shr
mov
mov
jmp
xor
add
add
dec
or
jne
popa
leave
ret
