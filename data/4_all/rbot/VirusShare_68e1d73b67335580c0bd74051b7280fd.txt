add
add
adc
add
add
add
add
insb
les
add
push
push
add
add
add
add
add
add
js
add
je,pn
js
add
add
add
add
add
add
add
add
pusha
or
add
add
inc
push
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
push
add
push
push
add
push
add
push
add
add
push
add
add
add
add
or
add
add
inc
push
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
push
add
push
push
add
push
add
push
add
add
push
add
add
add
add
cld
push
push
add
add
or
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
add
add
add
cmpsb
adc
add
adc
add
test
pushf
pusha
call
pop
mov
sub
lea
mov
cmp
je
lea
mov
cmp
je
movl
mov
mov
sub
mov
add
lea
add
mov
mov
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
add
push
pushl
push
push
call
mov
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
add
pop
add
and
jl
add
add
add
sub
jge
jnp
xor
repz
lret
repz
cld
idivl
rclb
cmp
mov
in
inc
ljmp
pop
gs
xchg
pop
ficoms
mov
int
and
lcall
lret
inc
mov
ljmp
mov
imul
mov
cmpb
scas
outsl
shlb
sbb
shlb
push
shl
adc
sub
pop
sbb
push
in
jmp
mov
repnz
sbb
insl
movsb
dec
cmp
stos
cmp
xor
sbb
xchg
icebp
in
cs
pusha
add
or
mov
mov
pop
adc
adcl
je
jb
lods
xor
enter
int3
adc
push
insl
dec
sbb
sbb
push
jmp
in
jecxz
adc
shlb
push
cmpsl
ds
in
cmpsl
daa
pop
fstl
xor
mov
fidivrl
push
mov
fistpll
stos
outsb
push
stos
xchg
mov
and
pop
rol
pop
and
add
cmp
add
call
jbe
xor
ja
jne
in
dec
sub
bound
push
sub
inc
mov
inc
xor
ss
bound
jbe
adc
cmpsb
in
sbbl
test
lret
mov
sar
cmpb
jnp
test
icebp
das
jg
fnstenv
add
jmp
xchg
cmpsl
pop
pop
outsl
rcr
fdivs
inc
sub
andl
inc
pop
lcall
es
xchg
mov
dec
xor
mov
rolb
xchg
mov
in
jno
ss
cmpsb
and
popf
jp
sub
xchg
aad
xor
cmp
add
dec
cwtl
cmp
mov
sbb
adc
out
andb
outsb
push
jbe
xchg
sub
mov
fsubrs
popf
mov
jp
in
filds
push
or
cmc
mov
fbld
xchg
push
iret
movsl
stos
mov
pop
test
or
or
dec
mov
push
adc
sub
ret
aaa
or
mov
xor
adc
insl
cmpsl
dec
adc
cmc
cs
cmp
lods
sbb
xchg
mov
push
adc
add
rcll
daa
mov
mov
mov
pusha
and
mov
jb
sbb
push
gs
movlps
push
mov
mov
lcall
mov
pop
inc
push
aad
sbb
mov
lahf
mov
sub
jno
adc
xchg
or
inc
sarb
popa
xchg
mov
scas
or
filds
xchg
and
cmp
xor
cmpsb
insb
ss
jnp
xor
cmp
loop
data16
sbb
cmpsb
scas
call
dec
and
add
mov
int3
dec
mov
or
mov
cwtl
mov
and
subb
mov
add
xor
jbe
and
push
cmc
jp
xor
aas
xchg
xchg
pop
stc
cmp
repnz
xor
jnp
pop
out
mov
or
push
xchg
lahf
xchg
data16
fs
pusha
push
add
dec
jl
mov
je
add
jb
mov
push
stc
jmp
cld
push
cltd
dec
mov
jo
mov
xor
les
mov
xor
int3
or
and
pop
pop
rcl
std
repz
pop
cmp
mov
dec
lods
xor
mov
mov
cmc
sbb
push
iret
scas
bound
test
imul
push
das
cwtl
mov
mov
fcoml
pop
pop
push
jecxz
pop
repnz
dec
inc
cmp
cmpsl
out
jecxz
jae
mov
pop
or
dec
sbb
add
push
lret
stos
mov
sub
xchg
xchg
mov
lcall
xchg
jge
add
popa
add
pop
xchg
and
je
in
repz
fsub
icebp
rcrl
cmp
sbb
and
inc
cwtl
lds
loop
cltd
push
push
sub
addl
mov
imul
fwait
adc
insb
sbb
std
or
push
push
test
sbb
enter
inc
add
cmp
in
xor
popa
iret
sbb
fs
pop
xchg
sub
stos
out
sub
nop
icebp
loop
or
and
pop
pop
scas
adc
cld
scas
mov
push
and
movsb
enter
imul
push
sbb
cmp
lock
cmp
mulb
lods
fldt
shlb
dec
adcb
outsb
test
mov
dec
xor
insl
cmp
add
mov
mov
or
and
mov
xor
xor
leave
xorb
jo
pop
test
repz
lcall
dec
repnz
outsb
inc
jb
pop
popa
nop
popf
lds
fstps
mov
das
cld
push
ss
call
pop
add
mov
mov
mov
or
cmpsb
fidivl
jecxz
or
pop
mov
stos
jbe
js
jb
xchg
lret
inc
adc
sahf
xor
imul
mov
rcrb
fstp
repz
mov
xchg
aas
movl
add
and
push
rcr
pop
insl
enter
ror
mov
fmuls
ds
pop
jne
daa
fmuls
stc
xor
mov
bound
ja
add
outsl
sub
dec
push
push
cmp
and
mov
imul
mov
stos
out
movb
int3
outsl
ret
push
popa
mov
data16
mov
mov
cltd
sub
fwait
sbb
leave
mov
outsl
dec
inc
clc
out
cmp
and
add
add
lret
xchg
insl
stc
ljmp
adc
fwait
ret
fsubr
mov
add
lea
sub
lock
xchg
adc
sub
lock
out
cmc
stos
mov
jbe
es
in
and
sbb
dec
add
xchg
testb
inc
out
sbb
lods
jle
jnp
clc
inc
pop
stc
js
aam
xchg
sbb
divl
xor
loopne
push
call
aaa
gs
stos
jno
mov
cli
pushf
sub
jo
into
or
and
mov
xchg
and
or
add
daa
in
int3
not
jno
jl
in
push
enter
in
mov
arpl
lods
add
push
inc
mov
pmulhuw
hlt
jb
mov
test
mov
push
inc
mov
lods
fimuls
cmp
lret
pop
shr
add
mov
aas
pop
scas
adc
sbb
hlt
dec
popa
adc
shll
mov
stc
push
or
add
sbbl
or
jnp
jno
xchg
push
lcall
out
dec
xchg
nop
cmp
xor
scas
lret
sbb
inc
cmp
add
or
cmpl
out
cltd
mov
xchg
into
mov
addr16
fscale
pop
or
lahf
notb
adc
push
lea
insb
mov
mov
into
xor
outsb
add
or
scas
jae
adc
lock
std
inc
mov
test
xor
mov
cmpsb
repnz
shlb
fsub
dec
pushf
fisubs
sahf
ret
std
lds
pop
mov
lahf
add
lods
divl
lcall
cltd
mov
cwtl
clc
popf
and
mov
cmp
sub
and
data16
sub
das
push
mov
adc
adc
sbb
ss
stc
push
rolb
adc
data16
adc
flds
loopne
add
dec
loop
mov
pop
bound
cld
adc
pop
loope
mov
jle
adc
inc
nop
sarb
shlb
or
stos
mov
mov
fadds
add
hlt
fwait
add
lret
fs
push
inc
xchg
dec
inc
inc
sub
pop
loopne
jmp
stc
stc
insl
out
shlb
outsb
xchg
xor
xchg
add
ret
in
insb
mov
sub
outsb
mov
and
sbb
push
inc
fistpll
jmp
sub
aas
and
loopne
jne
jecxz
jnp
push
test
xorl
int3
out
fdivp
fildll
fnstsw
mov
fsub
aaa
or
stos
test
aad
popa
addl
sti
or
gs
dec
xor
dec
mov
or
or
xlat
dec
push
int3
iret
cmpsb
sbb
mov
dec
mov
add
pop
mov
xchg
into
sbb
sbb
and
mov
mov
sarl
aas
push
pop
ss
dec
sub
js
mov
sub
out
icebp
pusha
out
popf
arpl
nop
daa
push
test
pop
pop
movsb
and
ja
sub
jp
mov
int
nop
dec
mov
les
loop
data16
rcll
xchg
sahf
inc
lret
jge
fucom
or
pop
dec
fwait
shl
out
and
sub
jecxz
daa
jg
inc
lret
hlt
cmp
sub
lahf
negb
bound
jns
push
fwait
lods
cmc
mov
cmpsl
popf
lahf
xchg
std
jnp
jp
mov
loop
inc
aad
ja
xchg
jge
cmp
adc
mov
orl
and
popa
mov
in
js
stc
fs
mov
sbb
cmp
pushf
push
std
fdivrp
adc
fstl
and
jecxz
stos
xchg
shlb
test
jne
push
mov
cli
cmpsl
popa
jns
dec
push
std
cmp
add
nop
or
or
in
movsb
and
movsl
sbb
jmp
xor
popl
ret
test
fisttpl
adc
loope
xchg
negl
or
cmp
lahf
xor
scas
stos
loope
mov
or
cmp
xlat
mov
jle
jg
out
add
xor
movsl
lods
xchg
inc
rorb
lret
arpl
cmp
arpl
cmp
push
subb
into
daa
xor
loope
sbbb
mov
imul
das
repnz
scas
push
enter
cmpsl
pushl
dec
ftst
push
xchg
pop
stos
movsb
fwait
sbb
imul
out
cvtdq2ps
cmp
xor
or
lods
push
xor
cmp
testb
outsl
pop
pop
cmp
loopne
mov
xchg
sub
sbb
test
xchg
jo
js
sub
sbb
daa
or
ss
cmp
pusha
xchg
cli
mov
aad
lds
sbb
pop
sarb
pusha
repnz
int
lret
shlb
movsb
jge
add
fmull
hlt
sbb
xor
das
sti
cmc
or
mov
add
xchg
adcl
iret
push
clc
fiaddl
mov
shrb
cmp
add
cmp
and
sub
pop
mov
fcmovne
add
cltd
mov
jle
addr16
subb
inc
mov
sti
adc
jnp
mov
cmp
sbb
leave
cld
leave
inc
ljmp
pushl
icebp
inc
lock
jecxz
mov
into
into
fistps
sub
sbb
add
push
test
lahf
in
pop
lcall
pop
mov
jmp
stos
ret
clc
outsl
dec
mov
pop
fsubrs
imul
cltd
jae
push
xor
jb
sbb
outsb
call
daa
xor
add
adc
sbb
jnp
inc
pop
pop
inc
lods
push
loop
adc
cli
xlat
jle
cltd
repnz
sbb
mov
pop
adc
and
push
jp
dec
pop
adc
aaa
fldl
in
inc
jg
mov
mov
mov
mov
inc
sbb
lods
jmp
cwtl
cmp
cwtl
mov
test
out
sbb
xor
pop
xor
cwtl
add
pusha
scas
pop
sbb
xchg
xchg
jl
pop
repnz
adc
mov
mov
pop
maskmovq
mov
sbb
fidivrl
enter
add
dec
mov
mov
jge
testl
sarb
ja,pt
jo
mov
out
int
xor
push
jo
mov
pmuludq
dec
ret
or
or
mov
pop
cmc
lock
mov
and
aam
pop
je
inc
popf
push
jl
mov
fisubl
lock
add
sahf
into
fldt
sub
fnstsw
lods
inc
daa
mov
jle
loop
loopne
dec
inc
jmp
imul
jne
push
cltd
push
daa
inc
mov
outsl
or
and
out
test
bound
or
mov
jl
lahf
into
push
std
xchg
mov
mov
addr16
test
gs
mov
cmp
out
outsb
jne
inc
adc
xchg
insl
loope
adc
push
mov
pop
add
mov
outsl
int
adc
xchg
jb
lock
cld
mov
cmp
movsl
push
in
inc
lcall
pop
es
lock
xorb
jge
dec
inc
xchg
hlt
inc
or
pop
loope
mov
pop
mov
adc
js
inc
lds
dec
jbe
pusha
popf
test
cmc
cmp
xchg
arpl
or
cmp
les
push
push
stos
mov
loopne
jbe
lahf
add
pop
sub
std
sub
aad
sahf
fbld
daa
mov
rclb
test
shlb
mov
cmpl
sahf
mov
or
adc
sbb
mov
adc
mov
sbb
push
fs
negl
out
dec
inc
xor
iret
jo
popf
push
cmpb
jno
xchg
and
jne
das
mov
lcall
and
mov
jo
ffreep
mov
jl
andl
sub
movsb
pop
ds
pop
push
xchg
gs
aaa
xchg
bound
mov
repz
xchg
outsl
into
pop
dec
xor
xchg
call
dec
into
loop
push
add
xchg
sti
inc
outsb
ret
and
arpl
jns
pop
adc
shlb
test
add
mov
push
cmp
mov
xor
jecxz
or
shlb
xor
adc
jns
jae
jecxz
cmc
sar
stos
mov
push
mov
inc
inc
outsb
jge
shll
lds
lcall
pop
movsl
mov
mov
mov
mov
push
mov
les
pusha
adc
lret
enter
dec
sbb
roll
stc
xchg
test
popa
ficoml
cli
jne
jnp
shl
mov
mov
outsb
pop
call
ljmp
rcll
outsb
push
adc
loop
mov
cmc
insb
push
cmpsl
lret
aad
cmpsl
sbb
xor
sbb
mov
mov
sub
sbb
data16
in
dec
push
ss
sbb
dec
mov
lods
xchg
shll
out
push
sbb
subl
inc
pusha
or
mov
pop
shl
pop
cs
insb
or
push
loopne
mov
lock
mov
sub
fisttpll
xlat
cli
xor
add
cmp
mov
ret
or
lods
and
aaa
and
or
xor
sbb
mov
lock
or
mov
movb
and
push
inc
push
mov
arpl
jns
mov
xor
or
stos
lods
mov
cld
mov
cmp
in
lods
push
mov
je
dec
push
jns
in
arpl
dec
mov
call
addr16
and
sbb
and
lock
std
lods
inc
in
add
lret
scas
iret
ror
es
fs
addr16
into
add
adc
sbb
stos
or
lock
sbb
inc
fsubl
mov
out
lods
mov
or
repz
xchg
push
sub
push
jo
pop
or
xchg
notb
xor
icebp
dec
push
push
cmp
jle
add
mov
sub
and
lock
push
xchg
mov
fcomps
jecxz
xor
sub
or
loope
cmp
outsl
xchg
daa
inc
mov
dec
push
sbb
or
mov
xchg
xor
dec
mulb
cmp
and
fsubrs
insl
pop
jp
cmpl
shl
arpl
hlt
mov
or
sub
push
lret
fstl
cmp
outsb
int
sti
cmpsl
push
jge
fwait
jmp
mov
jb
cmp
dec
loopne
js
pop
or
mov
lock
jns
ss
loop
push
mov
fstps
add
ss
lock
aad
push
sub
jne
rcrl
xor
push
inc
xor
fs
mov
fistps
sub
pop
je
sbb
cmp
or
sub
sbb
dec
or
adc
sbb
push
aam
xchg
jbe
mov
pop
movsl
push
fwait
jbe
add
mov
cs
aas
into
mov
loope
test
xor
push
lcall
jnp
sub
pop
lods
sub
cwtl
test
dec
mov
inc
push
pushf
mov
cmp
sahf
inc
jne
in
mov
fcom
or
or
mov
gs
xor
enter
stos
push
inc
add
adc
roll
leave
sub
daa
xchg
pushf
fildll
das
mov
mov
xor
loop
in
mov
out
mov
rclb
jle
or
dec
movsl
sub
jmp
leave
xor
test
imulb
je
cmp
xchg
and
add
push
cld
and
and
outsb
iret
xchg
es
out
mov
subb
cmp
ret
shrb
mov
push
inc
dec
pop
xchg
and
adc
add
add
pop
scas
xchg
xchg
pop
mov
mov
daa
insb
xchg
inc
je
sub
cmp
or
add
ret
pop
adc
inc
and
pop
jl
daa
add
out
stos
or
out
add
mov
dec
jno
push
std
add
repnz
shl
dec
push
jo
mov
add
mov
sbb
icebp
push
mov
sub
hlt
jnp
xchg
sbb
mov
cmpsb
aas
dec
ret
icebp
icebp
xchg
mov
inc
or
sbb
scas
stos
cmp
dec
cmp
cwtl
and
push
sbb
ss
or
call
imul
sub
gs
sahf
push
fcoms
xor
sar
push
iret
cmpsl
sbb
bound
notb
sahf
pushf
jne
mov
idiv
mov
test
jns
outsl
imulb
xchg
mov
and
cmp
add
xchg
gs
scas
subb
aam
or
cmp
xchg
imul
es
adcb
or
pop
push
xor
fildl
dec
push
mov
mov
test
mov
daa
flds
and
pop
pop
mov
call
fstl
xlat
inc
xchg
movsl
dec
popa
clc
shrb
in
mov
fadds
mov
push
xchg
sar
mov
pop
outsb
mov
adc
cmp
add
cmp
pop
sub
insb
mov
add
inc
dec
mov
hlt
repnz
sub
mov
cmpsb
pop
in
pop
leave
in
cmp
js,pt
bound
mov
mov
xchg
cld
addr16
xchg
stos
cwtl
mov
pop
dec
sub
divb
add
dec
inc
lea
sarb
shll
mov
jae
sbb
xchg
pop
lds
cmp
mov
pop
loopne
lock
sti
jbe
cwtl
push
push
adc
movb
lds
jmp
jno
andl
in
lret
jmp
mov
aad
jg
dec
jo
jp
divl
push
add
sar
stc
add
jb
pop
fcomps
push
mov
inc
and
sbb
sbb
jecxz
loop
ja
sub
dec
xor
inc
dec
movsb
jns
bound
push
aam
dec
sarl
out
lahf
scas
xor
mov
cmpsb
add
repnz
inc
inc
cmp
lods
and
sub
out
xorl
popl
push
mov
js
fisttps
mov
popa
sbb
jge
xchg
xlat
testb
lock
cmc
inc
or
mov
out
push
xchg
lret
sbbl
stos
stos
sbb
roll
leave
or
add
faddl
jo
mulb
ret
add
lahf
pop
lods
jmp
fldt
push
dec
ret
adc
in
mov
mov
pushf
cmc
stc
add
xor
jns
push
inc
adc
outsl
cli
insl
in
test
pop
and
xor
cs
mov
addl
inc
jno
mov
sbb
and
lea
xor
out
sub
pop
push
xor
out
cmpsb
scas
mov
lmsw
and
lahf
pop
inc
mov
mov
call
and
adc
scas
mov
or
nop
jmp
in
mov
call
or
into
andb
xor
out
xor
scas
xchg
incb
jns
mov
cmove
push
cwtl
jo
mov
in
add
push
das
test
dec
loopne,pn
mov
out
or
ret
cmc
or
xlat
inc
cmc
aaa
adc
test
scas
or
out
mov
jp
xor
lea
push
aad
insb
mov
xchg
adc
xor
xchg
adc
ficoml
xchg
mov
sbb
jle
mov
enter
jae
leave
hlt
cld
daa
push
faddl
sub
cmpl
in
xchg
imul
inc
or
inc
add
push
iretw
and
cmp
fsubl
xor
lret
loope
pusha
xor
jmp
fistps
push
mov
dec
cmpl
cmp
lcall
mov
enter
iret
out
fcomi
pop
pop
jns
mov
rclb
dec
mov
fs
les
and
sub
jnp
iret
pushf
ror
rcl
ret
jecxz
sbb
out
fdivs
dec
fnsave
push
dec
mov
pop
dec
pop
rorl
ds
cmpsl
rcrl
xchg
add
repnz
add
test
or
mov
out
mov
test
sbb
je
aam
frstor
pop
mov
or
in
out
cmp
clc
push
cmpsb
mov
scas
in
int3
push
mov
mov
cs
out
lret
dec
lret
addr16
push
je
jg
sub
pop
mov
dec
data16
xchg
dec
out
addr16
int3
das
dec
rcl
dec
jp
add
fbstp
aas
fidivrl
lds
xchg
lahf
ja
cmp
push
xchg
ret
test
or
add
add
enter
shlb
sub
mov
cmp
xchg
fisubs
aam
sbb
push
mov
ret
shrb
xchg
aas
jecxz
adc
les
lret
push
lods
loope
xchg
xchg
adc
in
xor
je
push
pop
mov
adc
das
mov
nop
lds
jecxz
sub
sub
inc
xchg
push
cmpsb
adcl
addl
lods
jbe
and
jb
shlb
rcrl
test
inc
mov
mov
lea
jnp
divl
test
sahf
xchg
fsubs
out
add
pop
jge
mov
cwtl
cmp
dec
fistl
push
addl
mov
insb
xlat
aad
mov
loope
add
fcmovb
sti
gs
test
push
loope
jne
or
pushaw
cmp
outsb
push
fisttpl
cs
xlat
ds
scas
popa
mov
in
out
push
pop
gs
sarl
shrb
in
rorb
push
xchg
inc
ret
sub
stos
jl
outsb
xchg
sbb
sub
and
or
cltd
iret
cmp
adc
or
add
push
cmp
lods
int3
rcll
inc
push
adc
test
sub
mov
outsl
mov
cmc
pop
loopne
rcrb
cs
loopne
and
xchg
xchg
sbb
or
lods
fwait
mov
jl
pop
daa
mulb
fs
gs
out
loope
inc
jns
sub
add
inc
cld
add
push
pop
adcl
repnz
cmp
insb
jns
dec
test
inc
adc
push
push
and
loopne
lahf
test
pop
mov
dec
test
in
ror
adc
fsts
mov
cmp
jge
fildll
or
sub
fstps
in
test
repz
fsts
cli
ljmp
mov
dec
push
into
js
int3
sti
xchg
sbb
push
push
inc
and
jae
xorl
aad
cmp
jae
pop
rcrl
fistpll
sahf
int3
inc
movsl
mov
es
aaa
adc
mov
sbb
push
mov
fidivrs
sub
sarl
int3
sub
enter
push
pop
jb
sbb
stc
or
sub
add
push
fnstsw
sub
sbb
bound
out
or
xchg
and
jl
push
cmpl
test
cmp
inc
sub
hlt
push
enter
std
adc
push
dec
fisttps
sahf
aam
mov
imul
ret
es
xchg
xchg
aam
rorb
mov
jb
inc
adc
inc
jge
sub
or
push
sbb
push
mov
xchg
jae
jnp,pn
sbb
jae
adc
mov
push
add
and
mov
ficoms
cmp
dec
dec
or
add
insl
call
or
lods
cmp
or
push
push
iret
jle
bound
push
inc
mov
loop
mov
push
aad
pusha
and
movsl
add
push
aas
movsb
cmp
jle
test
pusha
push
scas
push
push
aad
rorb
scas
sub
mov
cmp
push
cmpsl
xchg
hlt
mov
and
inc
call
shll
shrl
test
jl
cmp
lock
sbb
sahf
sbb
mov
hlt
js
sub
mov
aad
lods
or
push
insb
icebp
mulb
pop
fwait
mov
sarl
mov
les
pop
rorl
fildl
mov
sub
mov
test
mov
loope
insb
or
sti
dec
sbbb
xchg
cmp
mov
mov
ret
shr
scas
sub
in
aas
fcmovnbe
mov
sub
push
mov
sti
push
imul
lret
fwait
clc
mov
mov
jns
shlb
xor
notl
push
push
xchg
mov
push
and
mov
clc
test
jmp
in
push
adc
hlt
ljmp
pop
out
sub
dec
jae
jge
in
xchg
push
cli
pusha
dec
leave
fcomip
addl
cwtl
mov
inc
clc
popf
add
jo
test
lcall
pop
pop
xchg
lea
in
lods
push
pop
lea
mov
xor
cmc
ss
xlat
mov
ret
shll
jp
ret
sub
push
push
sti
add
push
pop
fwait
or
add
sarl
add
lcall
mov
inc
adc
xchg
sub
cmpsb
jnp
fldln2
fwait
cmp
add
inc
jns
lcall
enter
aam
dec
pop
gs
sub
xor
push
xchg
std
xor
and
in
ja
dec
sub
sub
or
sub
push
clc
dec
add
ss
adc
mov
out
jmp
or
ret
lret
fwait
clc
mov
dec
adc
or
dec
nop
arpl
ja,pt
fwait
mov
imul
mov
adc
mov
jns
out
sti
sti
mov
repnz
jns
mov
adc
push
enter
jmp
mov
pop
pop
pop
sub
outsb
fcomps
mov
sub
les
dec
xchg
push
int3
and
pop
ds
notl
test
or
mov
iret
sarb
sbb
adc
lahf
sbb
inc
xchg
sub
mov
mov
xlat
xchg
mov
scas
cmc
adc
test
pop
sub
out
adc
test
mov
push
shr
popa
icebp
movl
pop
stos
mov
icebp
push
adcb
inc
sub
or
dec
pop
ficoms
adc
test
je
sub
mov
pop
pop
loopne
push
arpl
pop
test
sub
push
fcoml
int
es
xchg
addr16
inc
sbb
push
aad
addr16
mov
sub
and
push
imul
iret
adc
add
push
es
aam
xor
mov
xbegin
movsb
hlt
dec
popf
ss
test
int
fwait
orb
fidivl
jp
lds
call
sbb
pop
push
sbb
sub
in
xor
mov
fidivl
es
rcrb
mov
cmc
pop
jmp
daa
sbb
ss
mov
out
add
xchg
stos
movb
pop
mov
push
mov
pop
sbbb
inc
scas
sbb
iret
jae
mov
pop
rclb
jb
cmp
ror
xchg
inc
add
in
lock
test
add
imul
int
mov
mov
pop
cld
loop
or
scas
adc
mov
inc
xchg
mov
jle
cmc
pop
xchg
jl
fld
dec
push
out
popa
cltd
int
xor
sbb
pop
and
and
push
iret
in
fs
mov
mov
xlat
and
stc
loopne
inc
sbb
or
or
pop
mov
push
cmc
inc
adc
into
into
adc
pop
push
or
stc
fistps
fidivrl
daa
adc
icebp
xor
mov
adc
jnp
nop
or
push
in
iret
imul
imul
and
or
add
and
stc
add
mov
clc
test
aam
push
pop
inc
ds
pop
pop
arpl
loopne
divb
pop
jecxz
mov
scas
xchg
jb
jo
iret
inc
daa
aam
xchg
inc
in
mov
mov
jg
arpl
adc
jo
sbb
fs
lret
mov
iret
popf
xorb
mov
or
mov
adc
aas
mov
fcmovne
dec
lock
jg
mov
inc
movsb
sub
int
adc
inc
push
mov
pop
dec
cltd
pushf
in
ret
inc
push
push
popa
add
shl
mov
push
cmp
push
stos
ficoml
mov
div
and
test
sahf
shl
xchg
xchg
ret
or
inc
imul
xchg
ljmp
sbb
xchg
sub
int
adc
jo
jl,pt
or
mov
cwtl
bound
rclb
and
adc
mov
xor
mov
xchg
pop
inc
mov
sub
adc
mov
jge
incb
clc
aas
jge
ret
fidivl
stc
adc
dec
pop
lret
movsb
cmp
dec
push
jl
inc
push
cmp
add
cmpsl
mov
shl
stc
fmull
jmp
xchg
outsl
or
cmp
pop
fistpll
cwtl
sbb
mov
loop
orb
jne
lock
mov
or
push
xlat
shl
xor
stos
jbe
js
pop
add
out
popa
jp
and
int3
imul
popf
push
pop
test
sbb
cmp
out
clc
stos
pushf
loop
cli
sbb
fwait
rol
cmp
dec
ficompl
in
adc
cmpsl
push
pop
rorb
enter
jge
ljmp
push
scas
cmp
clc
cmp
sti
jl
test
test
pop
out
bound
xor
in
pop
es
test
into
pop
pushf
push
mov
aaa
insl
xor
jne
cltd
loop
testl
loope
sub
int
pop
mov
lock
cmp
das
xlat
xor
and
sbb
movsb
ret
add
push
push
addr16
iret
gs
cmp
adc
and
mov
enter
add
sbb
dec
idivb
cmp
add
loop
fisttps
jns
and
lea
ljmp
mov
stc
shll
fldl
icebp
mov
leave
es
stc
in
cmpsl
icebp
xor
xor
psubq
popa
popf
and
inc
repz
in
push
jp
dec
out
out
mov
inc
lret
jo
pop
adc
or
orb
in
mov
ljmp
dec
add
jae
push
lcall
bound
ret
adc
sbb
frndint
xchg
push
nop
mov
scas
into
cmpsb
dec
stc
mov
mov
jo
push
lret
dec
loopne
mov
xchg
jae
dec
jnp
leave
and
cmp
loopne
mov
push
bound
adc
cmp
stos
shrd
in
mov
or
xor
or
popf
cmp
mov
xor
mov
orb
jl
jb
aad
push
and
roll
pop
scas
dec
repz
dec
pop
add
pop
addr16
aaa
lahf
push
add
dec
pushf
subb
test
ret
jmp
vmread
lcall
roll
lcall
and
mov
xor
int3
aad
push
pop
sbb
jo
cs
loop
lea
jo
loop
jo
shll
push
jne
adc
xchg
sti
sub
or
push
jae
or
int
je
cmp
aaa
into
mov
not
push
jl
jne
out
decl
popa
fsubrl
pop
jle
adc
pop
xor
bound
addr16
sbb
xchg
jmp
xor
xor
xor
push
inc
adc
in
shlb
gs
rcrb
int
inc
test
sub
inc
mov
mov
jl
mov
adc
push
and
sub
add
iret
imul
mov
test
cwtl
jo
lea
sti
or
scas
xchg
push
lret
js
or
aas
cmpsb
sti
inc
adc
dec
sbbl
popa
cltd
jno
lock
cmp
sbbl
ret
cmp
js
or
shlb
add
dec
imul
mov
mov
test
loop
subl
rcr
lds
sbb
adc
and
add
arpl
xchg
push
mov
jg
cmc
andb
mov
mov
and
dec
movl
sti
dec
or
mov
add
cld
mov
div
push
add
and
pop
lea
std
cmpsl
scas
ja
xchg
or
add
fs
push
addl
testl
add
mov
inc
push
test
jg
movhps
stc
cmpsb
adc
insb
jae
dec
lahf
gs
jp
dec
jb
lret
or
test
pop
leave
jge
jns
lahf
lret
adc
cwtl
loopne
cltd
and
scas
xor
addb
jo
pop
ficoml
xchg
iret
les
dec
notb
aam
repnz
push
popf
js
repnz
sbb
cld
add
pop
push
shrb
sbb
ljmp
in
mov
cmc
or
leave
jns
add
or
cmp
fcompl
push
add
fldenv
jo
cmpsb
hlt
mov
jl
stos
addr16
repz
sbb
and
inc
adc
jbe
xchg
sti
mov
out
in
je
pusha
xor
cld
sbb
dec
ja
rclb
mov
dec
mov
jb
rolb
js
lahf
xchg
sub
adc
dec
adc
ds
cld
iret
es
jecxz
sub
adc
sub
cmp
jg
popa
mov
pop
lds
cltd
dec
rol
sbb
insl
clc
leave
xor
mov
add
cmpsb
in
nop
and
jbe
enter
or
cmpsb
add
or
xchg
ficoms
cmc
xchg
lock
pop
int
js
in
mov
outsl
xor
dec
jle
ljmp
outsb
pop
lret
lods
lea
rcrl
arpl
lahf
icebp
pop
cld
gs
lcall
jnp
xor
movsl
imul
inc
mov
add
sarl
pop
lret
xor
push
test
stos
or
ss
jnp
out
das
lret
movsb
xor
pop
dec
add
test
jle
mov
jne
stos
xor
test
push
or
cmp
and
or
inc
enter
dec
sbb
mov
stos
into
and
mov
inc
sub
cmp
lret
mov
cmpsl
aad
bnd
jns
ret
push
cmpsb
xchg
push
mov
inc
add
aaa
sbb
jne
outsb
popf
cltd
mov
ds
adc
pusha
aam
ljmp
adc
dec
mov
jae
jge
iret
jge
cmp
lcall
xor
cmp
sub
mov
push
push
mov
movswl
xor
push
pop
fmul
fidivrl
lcall
sub
or
mov
jnp
inc
ret
pop
pushf
sbb
loop
mov
inc
daa
andb
rorl
cmp
mov
inc
adc
in
out
scas
pop
xchg
pop
mov
sub
popa
push
mov
cmp
push
mov
lods
out
dec
in
test
or
je
and
add
fsubp
sub
lcall
dec
insb
in
push
dec
sti
xor
lds
lea
jne
cmp
shll
fildll
outsb
ret
push
cltd
insb
loopne
cmp
xchg
in
inc
pop
out
cmp
pop
std
testb
sbb
aaa
pop
xchg
outsl
fadds
lret
adc
xchg
xor
xchg
pop
rclb
pop
in
ds
or
push
cld
or
stc
add
std
adc
pop
dec
mov
cmp
adc
sbb
cs
mov
xor
mov
scas
fcmovne
test
ss
cmp
cmpsb
or
push
jle
xorl
lods
mov
inc
jl
dec
lahf
xchg
in
inc
inc
idivl
nop
add
jns
in
mul
mov
push
stos
adc
fildll
ds
xor
popa
mov
cwtl
rorb
scas
adc
mov
bound
add
cmc
lods
stos
mov
cmc
xor
lret
in
inc
fstpl
mov
cmp
jbe
inc
pop
pop
mov
insb
jp
out
lds
int3
or
push
jb
jecxz
add
outsb
cld
add
push
cltd
mov
mov
popa
iret
pop
sbb
fwait
mov
decl
scas
inc
or
sbb
cmp
mov
dec
push
pop
and
xor
adc
sahf
stos
xor
xchg
out
and
mov
mov
call
cwtl
pop
mov
cmp
sbb
test
mov
test
icebp
in
mov
xchg
mov
into
xchg
addr16
xchg
xchg
ljmp
mov
inc
call
inc
addl
cmp
dec
add
int
mov
xchg
adc
sbb
fadd
mov
clc
fbstp
mov
scas
ficompl
sar
xchg
cltd
arpl
xor
adc
push
pop
and
in
mov
cmp
xchg
mov
and
add
adc
or
pop
add
out
push
pop
lods
mov
jne
mov
scas
jg
out
pop
adc
sbb
pop
mov
fcmovne
pop
dec
xchg
rcrl
xchg
push
sub
into
test
bnd
adc
push
adc
mov
xchg
in
lcall
lcall
sbb
scas
pop
cmp
int
popf
lahf
ja
inc
iret
pop
sbb
jae
push
mov
int
insb
test
inc
inc
idivb
push
gs
add
and
mov
lahf
je
xchg
stos
sub
inc
pop
sub
pop
sub
jno
jnp
add
cmp
add
ret
inc
jmp
cltd
insl
push
subl
adc
xor
and
scas
insl
fwait
mov
xchg
mov
pop
jae
cld
in
lret
mov
in
mov
inc
xchg
loope
and
je
mov
xor
subb
sahf
xor
out
push
scas
cld
pop
adc
rolb
ljmp
xlat
movsl
mov
jb
test
xchg
and
mov
mov
call
repnz
mov
enter
sbb
or
push
jno
mov
imul
mov
lret
pop
and
adc
dec
sbb
or
dec
mov
rolb
inc
push
fs
push
jnp
dec
pop
mov
mov
jmp
rcrl
stos
lea
stos
pop
push
jl
sub
jle
add
sub
dec
out
inc
lods
movsb
xchg
cmpsb
imul
cmp
iret
push
std
in
mov
mov
loop
shrl
adcb
sbb
aam
inc
sbb
imul
dec
dec
in
mov
mov
adc
xchg
daa
test
dec
negb
add
and
cwtl
lret
mov
push
pop
pop
out
or
jp
scas
pop
sub
mov
push
push
in
jmp
cmp
scas
dec
sub
and
pop
dec
mov
adc
mov
les
pop
dec
repz
mov
mov
dec
ss
fbstp
jae
popa
adc
xchg
mov
scas
lods
sub
ljmp
sarl
cmp
andb
jns
imul
cmpsl
imul
jp
andb
lock
and
jmp
push
pop
shlb
dec
xor
jb
lods
push
cld
sub
cmp
std
mull
pop
imul
in
mov
jmp
pop
shll
cmpb
into
sbb
add
mov
loop
cmp
cmp
pop
sbbb
xchg
gs
cwtl
xchg
push
jp
adc
sbb
shl
cmpsl
out
fildll
fisttpll
outsb
into
rol
gs
lock
cmpsl
scas
pop
jo
xchg
pop
or
movsb
leave
loope
lcall
cmp
inc
lock
jge
cli
into
xchg
pushf
movsl
xchg
jo
roll
outsl
ljmp
sub
sub
in
add
cmp
arpl
ss
fwait
sahf
cmp
pop
outsb
jmp
js
jle
and
and
xor
inc
mov
test
insl
inc
adc
mov
adc
cltd
insl
movsl
mov
hlt
cmp
sub
dec
sbb
js
jne
aad
mov
xchg
test
fs
push
adc
rcll
mov
decb
mov
mov
outsl
inc
ret
jg
xor
int
sub
mov
jae
inc
iret
mull
inc
sub
lret
sbbb
xchg
cwtl
inc
fcmovnbe
mov
mov
mov
mov
pushf
sub
mov
xchg
adc
mov
lahf
loopne
inc
stc
loop
in
push
pop
dec
call
add
mov
outsl
sbb
aad
js
icebp
clc
sub
inc
sbb
pusha
dec
and
jbe
inc
aam
cld
arpl
out
repnz
mov
idiv
push
scas
jae
inc
std
jnp
or
out
loope
not
mov
push
mov
js
jno
mov
decl
inc
sub
push
and
jnp
push
mov
lret
in
sub
mov
push
cld
ljmp
mov
rorl
jg
jae
inc
jl
stc
pushf
push
cmc
loopne
gs
pusha
insb
cmpsb
in
imul
xchg
pop
fwait
pop
xor
jg
mov
jo
or
mov
lea
dec
ret
pop
sbbb
adc
add
mov
push
gs
adc
or
pop
jl
test
dec
dec
and
cwtl
mov
sti
lock
fstl
dec
jb
fstpl
cld
xchg
faddl
mov
jne
repnz
xchg
mov
dec
push
popf
push
mov
movsl
notb
rorb
in
out
inc
lea
loopne
sbbb
and
mov
inc
sti
or
push
xchg
mov
inc
pop
mov
mov
dec
das
cmpsb
cmp
or
stos
jne
dec
xor
negl
mov
pushf
fmull
ljmp
jp
shlb
jns
mov
out
arpl
aad
out
dec
and
add
or
push
imul
cmp
lock
leave
arpl
popf
add
ds
sbb
fdivrs
aam
jle
bound
or
jge
jg
mov
aad
dec
pop
cmpsb
xchg
mov
stos
and
inc
fs
sbb
lcall
sub
lods
pop
cmpl
in
jg
lds
outsb
scas
js
xor
push
es
hlt
xchg
test
lea
sub
inc
inc
cld
je
cmpsl
popf
in
int3
inc
daa
pop
lcall
data16
push
adcl
prefetch
jne
dec
and
push
lods
gs
cli
inc
push
nop
mov
sahf
jb
push
pop
lret
add
ljmp
xor
call
outsb
mov
insb
mulb
mov
test
leave
mov
fildl
or
or
in
push
sarb
cli
pop
push
lea
popa
je
pop
mov
pmaxub
xlat
add
add
sbb
aaa
inc
xor
mov
xchg
cld
data16
sahf
stc
sub
popf
pusha
notl
jl
or
dec
mov
dec
sub
loopne
cmp
or
push
mov
cmp
rcrb
insl
pop
cmc
push
push
dec
cmpsb
scas
push
inc
outsl
ljmp
jecxz
fs
adc
in
lcall
cmp
mov
push
push
xor
xchg
lock
sub
push
int3
mov
add
fiaddl
add
push
inc
icebp
jb
stc
or
mov
data16
mov
jle
leave
fstps
jmp
jp
bound
add
stos
in
shlb
mov
jp
sbb
add
pop
adc
fistps
stos
push
in
push
mov
xor
push
iret
rorb
outsl
push
xor
adc
xor
aas
and
stos
leave
inc
add
inc
icebp
mov
jae
inc
or
idiv
lods
aas
insb
aaa
xchg
sbb
lods
ljmp
adc
fidivs
inc
add
pop
jae
clc
xor
push
push
stc
sbb
inc
mov
jae
sub
rcrl
xor
lods
jecxz
adc
repz
aad
xchg
inc
sbb
and
adc
inc
call
and
popf
inc
popf
mov
sub
fldcw
mov
mov
insl
sub
andl
sub
out
aad
jbe
mov
inc
push
inc
add
out
push
out
repz
push
jle
orb
subl
sbb
mov
sub
pop
xchg
xor
popa
jae
aas
jne
push
xchg
push
adc
mov
sti
mov
lcall
mov
mov
fsubrs
jp
insb
les
test
shl
outsl
lods
iret
insb
pop
fildl
lods
and
xorb
loop
ret
cmpl
or
scas
mov
mov
mov
inc
shlb
dec
bound
jb
sbb
lock
xor
loop
xor
pusha
mov
xchg
pop
xchg
xchg
pop
or
mov
je
into
int3
test
and
inc
sub
and
cli
loop
sub
ret
push
daa
shlb
add
out
incl
mov
mov
mov
jae,pt
clc
rcr
xchg
xchg
mov
icebp
ss
aas
jne
mov
rolb
das
lds
xor
das
in
ficompl
popa
mov
clc
dec
sar
mov
inc
aas
push
adc
js
es
icebp
mov
shlw
fisttpl
jmp
jno
jb
cmpsb
jnp
cmpsb
dec
add
inc
lods
pop
addr16
cmpsl
into
dec
and
jmp
fcmovu
outsl
sbb
dec
insb
movsb
jo
jecxz
inc
mov
lahf
nop
mov
mov
insl
xor
shl
lcall
xchg
and
jbe
fldl
jb
ja
or
adc
mov
pop
fsubl
add
inc
push
add
sbb
adc
ror
pop
ss
test
or
es
scas
sub
mov
fisubs
and
repz
adc
xchg
lock
enter
inc
shrb
sub
jbe
adc
fnstcw
mov
pop
dec
mov
adc
fcoms
repnz
push
repz
sbb
push
in
int
or
pop
cmc
lds
jp
cmp
cmc
movsl
int
dec
add
mov
aad
aad
data16
ja
cmp
add
mov
pop
into
or
hlt
mov
shl
test
inc
jmp
fsubr
js
lods
and
adc
fidivl
andl
sub
insb
dec
pop
jg
insl
sub
cmpb
ret
push
rorb
mov
and
int
dec
adc
mov
leave
dec
push
mov
out
scas
jae
fsts
popf
scas
repnz
xchg
sbb
jne
loope
daa
shll
leave
aaa
sbb
loope
test
aas
pop
mov
lods
mov
lahf
jb
imul
sub
ret
cmc
adc
scas
subb
cmp
fucom
jae
xchg
adcb
push
xor
pop
jle
xchg
pop
cmp
clc
add
imul
out
int3
dec
xor
loope
sub
mov
fisubrs
sahf
adc
pop
loope
mov
adc
mov
push
je
jge
enter
push
xchg
xor
xor
pop
pop
cmp
jmp
test
pop
fs
sub
in
adc
push
rcr
jnp
xchg
sbb
sub
sub
pop
out
add
or
add
bound
je
sar
xorb
arpl
and
jmp
inc
fdivl
pop
shll
fs
pop
shll
loop
add
or
inc
pop
jmp
sub
push
sbb
xchg
cmp
mov
test
xor
adc
xor
out
and
test
mov
jmp
jmp
cmp
in
stos
xchg
out
inc
in
dec
sub
sbb
xlat
jae
mov
adc
pushl
push
lea
cmpsl
subl
xchg
mov
imull
mov
cmp
popa
enter
adc
pop
push
sub
cmp
cld
jmp
adcb
lcall
scas
xor
bswap
mov
cmp
and
les
and
cmc
inc
lcall
incl
inc
cmp
in
daa
data16
cmpsb
cld
out
sub
add
xchg
jl
xor
out
stos
xchg
xor
test
mov
xchg
jne
mov
data16
mov
sbb
cltd
mov
cmc
xor
movsb
dec
or
es
push
lods
aad
inc
pop
movsl
mov
andl
mov
lods
pop
sub
pop
xchg
pop
jecxz
mov
xchg
dec
repnz
mov
inc
dec
sbb
inc
nop
or
cmc
inc
jo
sahf
jbe
cmp
mov
out
pop
ljmp
cmp
daa
movsl
pop
pop
rcl
in
cmpsl
sub
push
lods
stos
cld
call
mov
popa
push
mov
mov
sbb
mov
mov
jne
in
add
in
rcrb
mov
and
nop
rep
sbb
xor
add
pop
inc
rcll
test
in
xlat
pop
push
ljmp
sub
pushf
inc
insl
cltd
iret
roll
and
ja
insl
mov
sbb
pop
mov
dec
mov
mov
mov
mov
xchg
and
subb
repnz
fs
shl
mov
push
xchg
outsb
scas
test
mov
push
movsb
in
movsl
jp
mov
mov
push
adc
sub
ljmp
adc
push
sahf
sbb
xchg
std
cmp
mov
inc
repnz
rorb
dec
mov
mov
js
push
and
stc
cmpsb
js
shrl
mov
inc
dec
les
scas
pop
mov
inc
xlat
out
in
loopne
loop
aam
adc
icebp
dec
pop
inc
popf
cmc
div
hlt
imul
les
and
cmpsl
rep
adcb
inc
inc
bound
mov
cli
xchg
add
lock
push
pop
mov
pop
adc
push
repz
int3
cmc
xor
pop
and
jle
mov
mov
loope,pt
in
lods
xor
sbb
jp
addr16
push
pop
orl
sub
pop
in
les
sbb
pop
lret
mov
inc
cmp
cmp
in
movsl
pop
jge
daa
mov
loope
hlt
xor
pop
repnz
jle
sbb
push
xchg
sti
jnp
pop
xchg
out
imul
jmp
pop
aam
pop
aaa
dec
outsb
dec
popf
xchg
sbb
xor
jno
xchg
cmpsl
pusha
imul
leave
mov
xchg
int
adc
mov
and
mov
jae
movsl
adc
inc
pushf
push
test
pop
xchg
fs
sbb
ds
xchg
add
mov
mov
xlat
sbbb
push
push
add
inc
iret
mov
mov
mov
mov
sahf
out
pop
fnstenv
insl
pushf
sbb
push
inc
ja
imul
xchg
dec
lds
mov
xchg
mov
shll
jge
and
aam
nop
dec
fsub
sahf
sti
push
push
jbe
scas
add
jnp
inc
ljmp
psubusw
cmc
stos
in
fists
ficomps
xchg
int
stos
aas
cmc
dec
fprem
sub
add
add
fbld
xchg
xor
fsubs
cmp
sub
adc
add
push
sub
mov
sub
mov
aad
pop
or
and
rcr
xor
mov
mov
arpl
icebp
mov
cmp
aad
push
push
pop
add
stos
test
mov
push
pop
mov
gs
pop
xchg
repnz
movl
les
lock
pop
mov
bound
shlb
pop
outsl
jle
shrl
ja
ja
sub
jae
daa
add
iret
in
out
mov
sbb
addb
loopne
gs
aam
inc
shl
imul
scas
popa
out
dec
push
mov
jns
mov
sbb
les
sub
and
lods
bound
pop
aam
mov
testb
sbb
icebp
dec
into
xor
outsb
mulb
pop
pop
insb
lods
leave
dec
hlt
inc
push
dec
or
add
out
push
xchg
and
cmpsl
mov
or
icebp
push
and
loop
lret
xor
sub
mov
mov
mov
push
sub
leave
iret
pushf
sub
in
in
jns
loopne
cmp
pop
aaa
popa
xlat
arpl
cld
cltd
test
push
lods
or
mov
stc
or
pop
lods
test
cld
cmp
js
jne
xor
aaa
xor
xor
push
in
and
ret
jnp
out
fmuls
rclb
rcll
inc
loope
sub
adc
sbb
inc
roll
xchg
jb
lret
xor
fists
jbe
dec
pop
ja
xchg
xor
subl
inc
or
push
andb
xor
mov
mov
adc
ret
jecxz
ret
sub
cmp
push
std
iret
sbb
cmp
inc
rcr
icebp
je
out
jp
mov
fisubrl
sub
test
fstl
or
dec
jle
mov
lret
pop
pop
fpatan
clc
leave
mov
inc
dec
and
aaa
cmc
aas
bound
daa
dec
push
fsubrl
mov
pop
ljmp
cmp
jne
mov
imul
cmp
rcll
mov
pop
sub
aad
int
jg
lcall
into
into
cmc
sbb
xchg
jecxz
pop
movsl
mov
inc
xchg
aam
jge
fisubl
xchg
xor
push
inc
leave
jp
push
or
mov
jns
mov
sbb
mov
sub
outsb
jo
outsl
sub
cmp
nop
filds
cwtl
and
inc
mov
bound
pop
sbb
mov
jmp
ficompl
pop
jl
jo
inc
pop
push
loope
mov
sahf
adc
daa
cmp
jne
add
push
or
aaa
das
lcall
pop
sub
stos
pop
aad
adc
jns
add
loopne
sub
shrb
icebp
ja
outsb
pusha
clc
pop
push
lahf
push
mov
jmp
cld
mov
ficoms
jmp
imul
mov
ffreep
push
lods
test
xor
pop
mov
ficompl
mov
mov
adc
fildl
pop
out
test
sub
stos
mov
loop
into
test
pop
fdivrs
push
stos
jge
dec
aam
pop
push
lock
jmp
mov
mov
xchg
lcall
xchg
or
sbb
sbbl
or
adc
mov
dec
dec
scas
movsl
das
jbe
popa
addb
sub
inc
sbb
stos
mov
inc
lods
fisubs
mov
jecxz
sarl
sub
pop
mov
dec
dec
addr16
xor
lcall
push
cltd
movl
test
adc
or
adc
stc
enter
add
push
and
int
cwtl
inc
jns
xchg
subl
add
jl
inc
int3
push
inc
add
in
add
ds
sti
out
insb
jns
pop
pop
into
xchg
sub
test
data16
leave
mov
or
movsb
mov
mov
or
or
add
sub
stc
adc
fcmovb
dec
imul
lret
stc
mov
mov
mov
ret
push
lret
mov
jae
xor
add
xor
sub
ss
movsb
inc
fstp
sub
push
into
shrb
out
cltd
leave
or
lret
dec
xchg
in
dec
shl
adc
sarl
inc
cmp
stos
out
adc
ja
bound
inc
dec
in
loopne
jg
cltd
movsb
inc
dec
es
xchg
shlb
push
jne
xchg
mov
pop
push
std
xchg
adc
mov
xor
lret
or
fwait
dec
xor
dec
test
in
popf
enter
sti
lea
mov
adc
test
out
insb
aad
add
and
test
mov
aam
lret
inc
notb
out
mov
mov
dec
hlt
enter
or
insb
jne
and
outsl
xchg
mov
adc
pop
xor
adc
lods
adc
out
jge
daa
sbb
test
dec
lret
pop
std
cmc
lods
jb
adc
sbb
pushf
xchg
test
lods
scas
add
shrb
stos
lock
js
xchg
pop
sub
imul
adc
inc
stc
cwtl
add
fcmovbe
adc
pop
aad
in
aam
pop
mov
test
xor
mov
fs
packsswb
sti
imul
shlb
pop
sahf
adc
sahf
insl
pop
cmp
jg
sub
ret
inc
fcoml
dec
daa
cmc
and
inc
push
cld
mov
xchg
movsb
mov
test
push
pop
mov
xorb
mov
dec
and
cli
xchg
movsb
mov
sbb
lods
mov
movaps
shlb
dec
popf
push
push
mov
adc
xchg
lcall
jne
cmpsl
loop
fwait
sti
cld
sub
xchg
shll
ljmp
xor
sbb
out
inc
out
shll
jb
outsl
sub
add
fisttpl
pop
mov
jg
dec
add
stos
scas
xor
jmp
push
or
ret
jno
out
add
outsl
add
aas
int3
js
clc
daa
add
cmp
inc
das
mov
pusha
cmp
aad
push
std
imul
imul
sub
jbe
lret
cmp
pop
andb
loope
insb
and
inc
jg
sbb
cmp
cmp
dec
mov
or
cmp
mov
lret
mov
lds
out
xchg
xchg
adc
xchg
mov
shrb
add
mov
add
repnz
das
add
dec
es
inc
sbb
and
cmpsb
dec
mov
pusha
mov
call
mov
shlb
imul
xchg
lcall
adc
insb
and
test
fcoml
push
adcl
aad
and
iret
dec
int3
add
mov
pop
add
sub
pusha
dec
out
fistl
insb
pop
fnstsw
and
mov
sub
fisttpl
les
mov
push
add
mov
hlt
jge
sbb
dec
test
and
loope
pop
stos
insb
cmp
jne
stos
pop
stos
mov
out
pop
out
mov
pop
push
aaa
lds
or
lock
cmp
mov
test
insb
std
push
test
adc
shrl
test
mov
sub
fstpt
icebp
xchg
insl
cmp
inc
out
dec
idiv
cmpsb
loop
sti
stos
mov
add
pop
inc
cmp
jecxz
pop
lods
dec
or
xor
inc
je
add
and
cli
addb
es
dec
pop
fadd
js
or
jle
push
lods
repz
and
leave
xchg
adc
aas
addb
addb
roll
add
or
xchg
pop
xchg
pushf
jge
outsl
cmp
mov
mov
mov
pop
mov
sti
andl
push
add
fcompl
push
out
push
cmp
mull
cmp
sub
mov
test
aaa
enter
cmp
mov
int3
ficoml
jno
je
sub
cld
mov
mul
loope
sbb
shr
imul
pop
mov
popf
or
xlat
movsl
or
dec
add
lock
sbb
pop
aam
mov
das
ja
or
out
adc
lock
fisttpll
or
mov
das
cld
mov
push
shrb
out
pop
ljmp
mov
sub
cld
rcr
imul
lods
add
andb
insl
out
pop
jno
and
xchg
jmp
lock
lcall
shrb
inc
rcll
jae
mov
dec
js
divl
repnz
call
ret
out
mov
push
xor
ss
xchg
lret
mov
call
lods
and
add
cmpl
xorl
xchg
sahf
mov
andb
pop
and
aaa
rcll
pop
rcrb
xchg
adcb
inc
mov
adc
sbb
adc
aaa
cmpsl
in
std
mov
int3
mov
sbb
push
and
add
adc
clc
cmp
cmp
add
pop
or
inc
sbb
push
rolb
mov
mov
add
aad
add
and
mov
inc
mov
test
jg
rorl
imul
pop
lods
jnp
or
lahf
push
orb
and
aaa
outsb
in
inc
lahf
xchg
xor
and
bound
or
add
or
imul
dec
jle
xor
xor
cmp
andl
movsl
jge
loope
or
iret
xchg
xor
hlt
add
loop
push
mov
andl
outsb
add
xor
je
push
das
push
test
adc
xchg
adc
push
test
andl
xchg
adc
pop
lea
aad
stc
ja
push
cmpsb
out
mov
mov
pop
gs
and
into
push
lret
push
dec
aad
out
xor
dec
push
mov
sbb
add
les
stos
mov
inc
and
pop
mov
ret
or
movsb
out
test
shlb
arpl
lahf
bound
lcall
sarb
in
sub
scas
cmpsl
or
cmc
test
aaa
pop
push
cli
or
stc
outsl
pushl
arpl
jl
iret
pop
mov
addr16
add
in
mov
jbe
out
pop
not
sbb
push
jae
test
jecxz
pop
add
stos
faddl
frndint
movsb
sub
push
mov
insb
xchg
loopne
mov
add
mov
xor
sarb
jae
ds
repz
or
xor
ret
stos
adc
bnd
cmp
out
mov
rorl
rclb
xchg
push
mov
jmp
in
dec
mov
push
push
cltd
mov
push
cmpsl
sub
bound
pusha
adc
popf
lds
cmc
mov
mov
lea
and
mov
xchg
das
jae
adc
xchg
push
jl
out
gs
jns
push
and
pusha
or
jg
mov
outsb
cmpsb
xor
fimull
xchg
mov
mov
push
mov
jge
rolb
ss
cli
push
mov
jnp
js
nop
lock
lret
mov
stos
cmc
pmaxsw
ja
and
cmpsl
lods
push
sub
jae
jg
shlb
int
stos
test
mov
inc
cmp
test
faddl
and
cmpsb
inc
cmp
scas
pop
cmc
enter
push
inc
pop
pusha
jno
fs
pop
add
xor
gs
dec
ljmp
and
or
insl
in
jb
imul
in
ss
mov
pop
mov
ficoms
stc
aas
cmpsb
repz
pusha
pop
or
out
pop
shrb
data16
pop
into
jp
cmpsb
pop
jg
and
dec
enter
lret
sbbb
out
cmp
mov
popa
std
pop
fstpt
inc
xchg
sub
ja
pop
adc
pop
ret
cli
dec
jo
inc
inc
push
inc
lock
mov
popa
push
jl
neg
roll
sub
inc
dec
mov
out
sahf
fcompl
xor
add
push
adc
mov
fld
inc
sbb
fs
xlat
dec
js
mov
arpl
sbb
sub
mov
xchg
push
stos
push
lods
pushf
std
sbb
cmc
aad
or
es
int3
imul
imul
jp
xor
sahf
push
lods
out
rorl
arpl
lret
and
mov
xor
imul
pop
mov
xchg
loop
inc
sub
test
adc
add
cmpsb
mov
popf
jbe
xor
outsl
push
mov
or
sub
aaa
cmp
inc
cmp
xor
or
mov
pop
int3
test
ljmp
or
dec
or
notb
in
inc
pop
cmp
xor
and
out
pop
sub
arpl
adc
loope
pop
and
dec
fidivl
and
fwait
movsb
adc
imul
mov
std
fwait
mov
sub
out
adc
inc
mov
lret
add
ret
sbb
stc
mov
sahf
incl
das
imul
lods
into
fcmove
lock
jnp
les
mov
pop
sbb
cmp
push
je
pop
bound
mov
push
lock
dec
int3
imul
icebp
cmp
out
push
mov
mov
mov
outsl
push
jle
in
cmp
mov
pop
int3
loopne
cmp
fstp
sti
mov
rolb
xchg
lea
pop
jae
mov
je
jp
mov
dec
or
push
pusha
dec
stos
std
outsb
mov
dec
mov
addr16
sbb
jle
loopne
arpl
mov
popf
and
fisubrl
scas
and
loopne
repz
cmp
int3
cli
loop
and
inc
cmc
add
dec
arpl
test
push
pop
mov
sbb
cmp
outsl
cs
dec
jecxz
add
adc
mov
les
inc
aad
sbb
das
push
std
ljmp
dec
add
or
arpl
dec
data16
mov
fwait
jl
pushl
push
leave
xchg
iret
mov
jmp
ret
aam
daa
cs
sbb
pop
fcomps
pop
std
sub
xchg
push
jbe
add
dec
lahf
sbb
cmpsb
jle
lds
mov
xchg
mov
xor
das
cmc
filds
dec
sbbb
xor
jae
inc
cli
inc
jns
mov
xor
outsl
mov
mov
imul
add
mov
mov
push
xchg
and
jne
and
jmp
call
inc
fstp
je
push
or
ja
mov
cli
jge
pop
test
jns
pop
xchg
mov
outsb
push
sub
inc
mov
out
outsl
scas
shl
imulb
loopne
stos
push
xchg
rol
inc
ljmp
mov
jnp
mov
imul
incl
cmpsb
dec
push
mov
mov
std
adc
xchg
pop
pushf
adc
jge
aad
push
add
xchg
loop
dec
xor
cmp
clc
cmp
out
lods
fs
or
popa
and
pop
arpl
jmp
imul
or
in
negb
and
sub
scas
jo
decl
sub
loope
pushf
andb
sbb
xor
and
mov
test
cs
out
in
push
lret
imul
inc
sub
xchg
shll
mov
shll
sbb
out
icebp
das
inc
adcb
out
shll
aaa
rcrl
lods
push
mov
sub
ret
testb
xor
or
adc
es
int3
add
shll
mov
push
rcrl
inc
sbb
jg
hlt
je
adc
dec
leave
mov
mov
xor
xchg
test
cmp
mov
je
icebp
inc
and
or
push
push
dec
and
xchg
cmc
add
xchg
sub
inc
add
movsl
sbb
cmp
hlt
ss
push
mov
out
mov
insl
xchg
mov
cld
mov
xor
fiaddl
or
jl
or
data16
lock
xchg
push
xor
in
cmp
sub
mov
pushf
mov
xor
pop
repz
or
inc
sbbl
lret
lahf
add
pop
nop
popa
add
pushf
mov
loop
test
jnp
inc
push
inc
test
js
inc
sbb
scas
rolb
push
fcom
jb
push
mov
jo
arpl
stos
or
sub
cmc
cmpsb
loop
scas
pop
add
jg
shlb
xchg
lret
test
cmc
lret
pop
xchg
js
mov
testb
cwtl
hlt
push
xlat
pop
sub
jecxz
sti
mov
movsl
in
mov
sahf
cmp
test
faddl
lahf
inc
mov
cmp
adc
mov
stos
or
or
mov
push
adc
adc
xor
cmp
dec
loope
sti
stos
add
loope
cmpsb
mov
mov
loopne
push
movhps
sub
pop
add
lahf
repz
sbb
jae
fstpt
and
iret
in
mov
lock
and
push
incl
xchg
les
and
stc
test
and
fstpl
dec
aad
popf
dec
sub
cs
jmp
mov
inc
loopne
and
ret
sahf
cmp
hlt
jmp
mov
addl
pusha
jnp
inc
cmp
in
add
aas
sbb
sarl
mov
rcll
fbstp
push
enter
das
data16
add
inc
repnz
jle
xor
pop
out
insb
fsubr
test
in
xchg
pusha
cmpsb
outsl
inc
enter
es
lods
cmpsb
mov
repnz
and
ljmp
inc
inc
cli
jp
fildll
pop
push
fs
repnz
ss
push
std
sub
push
adc
or
sbb
out
imul
xor
dec
shrb
pop
cwtl
clc
inc
mov
loope
dec
xlat
cmp
enter
sub
roll
je
sub
std
push
test
jmp
mov
mov
scas
rclb
or
cmpsl
call
adc
jb
test
mov
subb
xorl
arpl
adc
lods
jg
rcrl
jnp
sarl
xchg
das
das
jg
outsb
mov
xchg
outsb
xchg
hlt
sbb
loopne
scas
cmp
icebp
test
leave
xor
ljmp
mov
xor
xchg
or
mov
inc
push
mov
dec
enter
jecxz
xor
shll
leave
std
lret
ljmp
pop
inc
aas
add
sbb
push
mov
scas
adc
push
mov
push
sysenter
add
sbb
push
jbe
push
icebp
fsubrs
jae
push
mov
or
inc
add
cwtl
negb
mov
lcall
push
cmpsl
pop
leave
nop
mov
xlat
cmp
insb
or
test
mov
mov
repnz
jecxz
hlt
test
push
clc
add
dec
jo
and
and
push
gs
jne
jne
push
rcr
xchg
jle
dec
xor
call
repnz
shll
cmp
sub
mov
jne
jl
rcrl
movb
lock
xor
mov
js
and
imul
bound
or
inc
jmp
mov
mov
xor
cs
mov
add
daa
and
out
mov
cltd
adc
jle
mov
xchg
mov
push
ret
mov
and
enter
insb
cld
push
jle
out
push
sbb
sub
shr
rorl
fcoms
fiaddl
adc
sub
and
xlat
bound
adc
xor
cld
pop
jno
sti
frstor
mov
hlt
pop
sbb
push
lods
xor
ljmp
lret
movsl
and
roll
mov
scas
and
clc
mov
rol
jae
xchg
mov
xor
das
loope
or
jne
ljmp
add
mov
mov
sbb
pushf
adc
inc
push
rorl
push
adc
aas
add
scas
pop
jmp
xchg
and
mov
push
lods
test
pop
jl
pusha
cmp
pop
bound
inc
xchg
dec
mov
push
xor
push
mov
std
int3
loopne
dec
pop
sti
vmwrite
mov
adc
mov
sub
inc
jns
pop
mov
sbb
adc
mov
pinsrw
fisttpl
pop
and
inc
and
mov
loope
pop
sub
cmpsb
stos
cmc
aad
adc
pop
cmp
fisttpl
pop
rcr
aaa
imul
stos
je
js
sti
inc
xchg
dec
mov
arpl
mov
jecxz
push
std
push
dec
ja
pop
ljmp
sbb
fsubrl
xor
inc
leave
cli
pushf
cmp
jnp
pushf
xchg
fmuls
fisubrs
jg
ljmp
orb
int
jge
and
push
adc
pusha
or
sbb
add
xor
xor
pop
je
cmp
jle
xor
fisubrl
or
into
movsb
xchg
std
int
cltd
xchg
sarl
pusha
pop
push
jge
out
sbb
jp
add
mov
sbb
jp
enter
mov
das
jecxz
das
jno
adc
clc
jne
cmpsl
or
sbb
jo
mov
push
cmp
add
push
pop
or
push
lods
xchg
cmp
and
les
xlat
cmp
imul
shl
aam
and
xchg
rolb
insl
lds
add
xchg
mov
out
push
pop
enter
pop
and
ficomps
bound
cld
insl
mov
cmpsl
rorb
mov
lock
loope
js
sbb
imul
xorps
pop
loop
adc
xor
adc
sbb
dec
lods
cmpsl
inc
and
inc
jo
les
movb
js
xchg
jp
mov
lods
cwtl
inc
outsb
hlt
popf
mov
xchg
fcomps
je
mov
hlt
aaa
lret
testl
pop
or
ds
push
cmpb
mov
lcall
pusha
fnsave
test
push
cmp
jg
inc
mov
cmp
sub
subb
sub
push
inc
cmp
fisubrs
fisubs
pop
loopne
inc
and
rorl
lea
pop
nop
push
fisubs
mov
lret
insb
inc
adc
rorb
sti
fwait
sub
daa
in
test
ljmp
push
sbb
inc
ja
adc
icebp
scas
push
sbbb
imul
shr
enter
in
ret
dec
jle
mov
lret
add
in
ja
jbe
or
xchg
fistpll
sub
xchg
push
fiadds
cmp
cmpsl
xorb
adc
mov
sbb
aaa
in
mov
shr
arpl
xchg
jmp
cmc
mov
jb
aad
lret
enter
ret
jle
mov
add
sub
and
mov
push
xchg
jns
mov
cs
add
add
repnz
or
lds
sub
push
and
daa
sub
dec
subb
dec
add
ret
push
mov
stos
aas
lret
ljmp
mov
cmpsb
mov
pusha
sahf
xchg
dec
bound
jp
aad
test
jmp
stc
daa
cwtl
mov
xchg
cmp
dec
mov
adc
add
mov
push
push
xchg
xchg
sub
pop
icebp
rcll
mov
xchg
and
adc
mov
push
inc
adc
stc
pop
xor
mov
sarl
mov
dec
ret
clc
shl
inc
out
pushf
call
sub
jmp
push
mov
pop
cmp
push
adc
pop
cmpsb
imul
dec
fimull
xchg
lcall
inc
pop
iret
inc
add
mov
xor
or
sti
test
add
xchg
divl
xchg
inc
pushf
add
inc
jl
jmp
lcall
mov
xchg
dec
outsb
popf
loop
xchg
dec
rclb
fwait
pop
sub
mov
xchg
push
or
clc
mov
add
push
out
loopne
jnp
call
hlt
aam
fs
call
aaa
sahf
mov
dec
popa
cmpsb
insb
mov
fimull
outsb
out
outsb
orps
sbb
pop
adc
or
cwtl
daa
pop
mov
daa
sbbl
add
sti
push
cmp
stos
pop
push
jmp
push
inc
fisubl
ret
fsubl
pop
jmp
movnti
fwait
pop
mov
xchg
int
inc
cmpsl
nop
in
fcomip
adc
movsl
push
adc
push
xchg
adc
movsb
mov
xor
jno
and
inc
sub
into
add
test
jb
in
or
add
inc
mov
in
hlt
js
mov
xchg
cmpsl
pop
jmp
adc
lret
adc
pop
inc
stos
or
fiadds
sbbb
shl
xor
or
add
loop
sbb
flds
mul
aas
xchg
aam
ljmp
adcb
adc
inc
add
xor
rcll
repz
fcmovnu
push
mov
inc
arpl
js
sub
sbb
inc
pushf
dec
out
std
dec
push
lea
lret
sbb
popa
mov
scas
mov
dec
mov
pop
in
pop
sahf
dec
fucomp
stc
in
fs
xorb
aam
jae
adc
cmp
adc
cmpsb
aas
or
sub
movsb
roll
aas
stos
das
and
sbb
xor
and
vpavgw
lcall
add
mov
inc
adc
adc
adc
fs
push
mov
sbb
pop
movsb
lret
or
dec
sub
inc
mov
pop
jns
icebp
punpckhbw
cld
psraw
push
js
push
and
ljmp
fstl
ja
dec
aam
loope
push
push
cwtl
psubusw
jnp
mov
xchg
jl
mov
dec
jbe
cmp
dec
les
scas
push
arpl
shll
mov
xchg
outsl
inc
adc
in
xor
adc
iret
xor
lods
inc
dec
jmp
sbb
aam
adc
sbb
cmp
dec
inc
push
mov
adc
jg
gs
or
shlb
and
into
cwtl
movsb
push
mov
mov
pop
movsl
ret
and
movsb
test
mov
imul
jns
sub
or
stc
and
push
pop
adc
pop
fadds
and
cltd
iret
arpl
push
scas
pop
xchg
rcll
cmp
loop
leave
cmp
test
and
fwait
out
cwtl
aaa
mov
add
loope
lret
push
pop
loopne
std
out
push
cltd
or
repnz
ret
pop
pop
cltd
andl
push
aam
pop
or
inc
cmpb
in
xchg
mov
sbb
sbbb
fdivs
push
sbb
sub
pop
pop
mov
lods
in
js
mov
xchg
fbstp
cmp
movsb
pop
adc
cmpsl
mov
push
scas
pop
cmp
xchg
pop
mov
xchg
or
fwait
dec
inc
jl
mov
add
aam
and
pop
je
roll
sbb
xor
cmp
jo
test
arpl
mov
inc
int3
cld
mov
sub
in
xchg
cmp
enter
pop
test
mov
sbb
enter
fsubr
pop
stos
je
not
addb
mov
and
shl
insl
cmp
jbe
int3
mov
out
lock
nop
sti
dec
mov
sub
fstpl
ss
in
and
and
bound
ds
xor
sub
aaa
ljmp
xchg
cmpsb
outsb
pop
sub
pop
shll
scas
xchg
sbb
push
in
and
push
out
insb
subl
adc
mov
sub
cli
enter
mov
outsl
stos
sub
movsl
sub
aam
adc
pop
fs
jb
inc
adc
jns
data16
cld
sub
cwtl
jmp
iret
divb
imul
push
sbb
adc
jns
mov
mov
scas
in
in
xor
cmp
add
push
jle
cmp
push
xchg
hlt
push
and
loope
mov
mov
adc
and
out
add
cs
and
cmp
daa
enter
cmp
and
pop
cmp
les
cs
push
sahf
stc
pop
and
pop
xlat
lret
icebp
xchg
adc
test
jmp
sub
add
clc
lds
loop
fisttps
pushf
xchg
dec
pop
adc
es
lret
mov
lods
lahf
sti
add
mov
jg
out
fisttpl
jne
lods
push
imul
lods
pop
push
jb
pop
sub
add
call
test
adc
mov
mov
xchg
out
shlb
rclb
movsb
lahf
out
push
mov
popa
inc
ljmp
jns
and
jb
cmovg
inc
jle
push
movsl
lock
lods
mov
adc
iret
xchg
pop
fisubl
dec
out
loopne
cmpl
inc
mov
sbb
xchg
adc
aad
movsb
pop
out
mov
out
andl
add
mov
out
fldenv
or
ja
push
cmp
mov
rcrl
and
xor
mov
sub
xor
addr16
sbb
mov
les
addl
repnz
mov
adc
add
sti
scas
and
cli
inc
ret
roll
lock
push
xchg
inc
pop
sarb
jmp
vpsrld
in
or
inc
bound
lret
movsl
add
dec
mov
aas
jne
rclb
adc
ffreep
sbb
jl
push
lods
push
mov
dec
bound
dec
pop
popf
inc
xor
loopne
imul
push
popf
daa
push
inc
shll
mov
push
add
mov
loop
sbb
sub
jg
in
imul
addr16
inc
mov
xor
out
mov
sbb
dec
je,pt
sub
inc
push
xchg
in
dec
negb
pop
lret
xchg
aas
push
js
test
pop
sbb
les
pop
push
pop
and
dec
inc
inc
shlb
lds
call
shlb
stc
iret
stos
pop
jns
push
mov
push
or
pop
inc
pushf
mov
insb
loop,pn
xchg
out
jae
movsl
std
sub
rolb
mov
push
mov
xor
mov
shufps
fnclex
sub
sub
and
jns
insl
mov
pushf
sbb
push
adc
jmp
mov
sbbb
fs
fisubrl
inc
shr
into
xor
data16
inc
push
lock
xchg
not
cmp
push
sub
stos
jle
or
in
lods
sub
icebp
push
lods
subps
int
add
sub
dec
push
mov
adc
mov
adc
cmpsb
mov
cli
fwait
mov
adc
push
adc
push
push
jmp
push
icebp
imul
push
jb
mov
mov
mov
xor
cs
inc
sahf
dec
cs
inc
fs
mov
cmp
adc
adc
push
jo
das
pop
push
sbb
loopne
neg
test
jle
insl
push
adc
clc
mov
hlt
xchg
jno
scas
jo
test
cmc
popf
push
out
in
test
ret
jns
pop
fnstcw
sti
in
arpl
mov
pop
mov
es
fistl
jne
call
mov
mov
jne
cmp
mov
xchg
add
rol
xchg
dec
mov
ret
xchg
sbb
clc
pop
insl
out
mov
movsb
adc
jo
into
xor
xchg
or
data16
rorb
insl
leave
adc
repnz
dec
orl
or
sbb
mov
mov
loop
xchg
push
jb
loopne
xor
popf
and
popa
push
cmpsl
push
or
sbb
jecxz
push
pop
sub
sub
jbe
cmp
sbb
pop
aaa
pop
jle
push
cltd
mov
and
inc
in
xchg
and
xor
fisubrs
popa
test
dec
jmp
lret
arpl
adcl
dec
jg
mov
mov
cmpsl
push
or
pop
in
mov
sbb
cmpsb
inc
arpl
jecxz
mov
int
jecxz
loope
cmp
add
or
xchg
sub
mov
out
dec
xor
scas
idiv
stos
lahf
or
mov
fildl
pop
mov
and
rorb
insl
push
mov
xchg
fcompl
negl
adc
push
js
dec
divl
xlat
sub
mov
daa
popa
push
xor
stos
stos
gs
fldt
xor
jp
lods
ja
jbe
pop
aad
and
adc
mov
jo
and
dec
xchg
addr16
jg
mov
lods
je
cmpl
stos
mov
pop
sbb
mov
add
cltd
adc
jo
inc
xchg
outsl
rorl
int
and
pop
int3
movb
sbb
inc
daa
pop
aad
jbe
add
or
in
test
jo
inc
xchg
in
cmp
std
or
aam
inc
add
in
outsl
stc
out
jo
inc
push
mov
and
push
call
xchg
pop
xchg
test
inc
into
jge
popa
mov
push
movsl
fcompl
xor
jmp
js
ret
mov
and
push
jp
ret
mov
sahf
and
loop
sub
js
cltd
lds
or
push
dec
jo
mov
repz
mov
out
mov
inc
hlt
lcall
sbb
inc
fld
sub
in
int
mov
or
aad
aam
lods
lret
xchg
aad
xor
and
stos
cmpsb
ljmp
jecxz
push
xchg
sub
call
sub
add
jge
jp
loope
jno,pn
jl
cmp
xchg
lahf
xor
enter
inc
sbb
cmp
and
js
push
sbb
jl
push
pop
mov
inc
jo
pushf
pop
data16
xchg
iret
mov
cmp
lret
loop
in
mov
pushf
imul
dec
inc
popa
gs
leave
and
outsb
popa
dec
stos
in
sbb
loop
loop
xor
sahf
mov
shlb
fcmovnb
and
imul
loop
push
dec
jae
sub
xor
stos
hlt
push
outsl
setb
roll
pop
mov
bound
lods
icebp
mov
sarl
outsl
nop
repz
clc
mov
mov
cltd
movsl
shrd
sbb
sbb
out
or
xor
mov
aad
fstpt
stos
filds
mov
jge
add
xor
and
loope
popf
inc
xchg
dec
cmp
insb
jbe
xchg
jno
call
jbe
jp
arpl
das
push
cmpsb
out
push
cli
jl
in
pop
xchg
aas
mov
mov
scas
stos
sub
std
out
bound
or
in
loope
es
daa
js
fisubrl
or
pop
sub
push
jbe
xchg
xor
aas
sbb
fistl
and
fiadds
push
lock
jle
faddl
jecxz
add
dec
xchg
lods
cld
les
lret
cmc
lock
insb
inc
add
push
shlb
rcll
test
and
push
sub
push
mov
shrl
aaa
dec
rep
cli
daa
fldt
aaa
xor
cmc
pop
test
mov
aaa
sub
fidivs
in
pop
repz
pushf
jl
cmp
cmpsb
cs
and
pop
xchg
sub
rcrb
fildll
adc
and
jns
mov
js
lods
mov
inc
and
sahf
fs
mov
add
loope
popa
mov
cmp
ljmp
fistps
xchg
xor
xor
mov
xlat
aaa
mov
ss
shlb
pop
popf
fnstcw
out
push
mov
inc
jge
call
shl
xchg
add
push
leave
pop
lods
cmpsb
stos
loopne
shr
fimull
aad
xlat
mov
out
in
pop
or
push
mov
out
cwtl
add
fimuls
add
stos
into
jmp
xchg
xchg
mov
insl
xor
push
jmp
aam
repz
adcb
push
flds
inc
aaa
pop
dec
cmp
dec
mov
mov
fcos
pop
test
xchg
popf
mov
inc
cltd
cmp
daa
cmp
lock
nopl
mov
lods
cmpsl
jl
loop
lret
icebp
jg
adc
cwtl
cli
jge
push
pop
lret
pop
dec
hlt
loop
sti
add
push
add
xchg
rcl
enter
jnp
adc
jbe
xchg
and
fldcw
mov
fcoml
push
addr16
mov
in
mov
stc
cmp
popa
sbb
cmp
popa
out
lret
jl
es
sbb
je
mov
inc
add
ss
bound
mov
mov
inc
mov
test
in
in
test
movsb
dec
xor
movsl
cltd
xor
mov
mov
ret
dec
aad
jae
ds
rclb
test
arpl
in
rcrb
pop
adcb
jmp
jp
dec
lock
xor
aam
icebp
and
dec
xor
xor
sbbb
out
xor
sahf
fldcw
and
loop
enter
call
jns
jb
add
mov
movl
mov
push
das
mov
sbb
add
fisubrl
mov
mov
pop
pusha
out
imul
jle
push
daa
test
dec
scas
movsb
dec
jl
das
push
imul
pop
lret
xor
divl
mov
in
push
mov
in
mov
xchg
add
pop
inc
loope
jge
sbbl
int
sbb
iret
mov
sbb
jg
inc
ret
ret
insb
push
mov
ljmp
mov
inc
fsub
or
movsl
xchg
jbe
xor
test
push
mov
mov
mov
nop
idivl
adc
xchg
int
hlt
cli
pop
lret
add
fcmovu
and
pop
lods
fidivl
dec
shrl
pop
mov
pop
mov
daa
push
lods
jle
fcmovnb
mov
inc
scas
and
dec
mov
and
daa
int
jne
aaa
inc
popa
mov
sahf
and
repz
mov
cmp
outsb
insl
sbb
xchg
divb
std
mov
mov
movsb
push
mov
aam
aam
in
mov
cltd
in
dec
jbe
add
mov
pushf
aas
jge
jecxz
mov
es
sub
mov
repz
mov
pop
jns
add
insb
add
push
loopne
js
jge
or
je
mov
inc
imul
icebp
mov
push
or
mov
push
mov
cld
loope
out
jge
mov
jae
sti
dec
test
mov
cmp
and
push
lahf
pop
jno
mov
iret
mulb
lods
sbb
hlt
add
fsubl
loope
xchg
out
mov
pop
cmpsb
sub
in
xor
dec
rcrl
dec
xchg
shl
scas
jo
daa
and
jb
pop
inc
mov
mov
dec
subb
aaa
insb
and
out
dec
cmp
jnp
lock
add
or
mov
mov
test
sub
cmp
es
shl
je
jno
pushf
xchg
mov
mov
inc
ficompl
push
das
faddp
pop
mov
jo
or
mov
mov
push
xchg
pop
pop
adc
sti
je
jle
and
xor
stos
xchg
or
dec
stos
fdivl
push
mov
adc
dec
aas
addl
mov
fsubrs
cmp
popf
repnz
pop
jno
in
mov
jo
iret
into
js
sbb
and
bound
gs
dec
cli
dec
push
bnd
cld
jns
imul
andl
scas
les
jecxz
adc
lods
mov
or
pop
mov
pop
pop
enter
jno
inc
mov
pop
adc
inc
mov
push
lods
jmp
scas
inc
int3
adc
jo
inc
xchg
leave
jo
fisttps
jb
cli
cmp
mov
js
or
pop
iret
aaa
aam
mov
clc
jne
or
mov
xchg
sbb
mov
jp
dec
fisttps
adc
lds
out
sub
fsubp
popf
cmp
xchg
or
pop
jge
js
out
jle
mov
and
mov
addr16
cmp
js
addr16
aam
sub
inc
cmc
push
add
cmpsb
push
popf
inc
jne
pop
jns
or
dec
mov
cmp
cmc
test
cs
stc
fucomi
cmp
pop
push
ja
ds
adc
lds
aad
mov
in
popa
xor
inc
dec
cltd
mull
jmp
fsts
sbb
into
adc
nop
clc
mov
ret
adc
in
jle
int
gs
test
sbb
inc
xor
xor
mov
push
fnstenv
push
pop
stc
loope
in
xchg
sub
stos
hlt
pusha
mov
sbb
sbb
cmp
lahf
xor
int3
dec
ret
pop
mov
jecxz
stos
aaa
test
push
mov
stos
mov
mov
addr16
lods
nop
ds
xchg
dec
sbbb
ds
push
int
rcrl
push
movsl
jle
movsl
mov
inc
fldcw
mov
ret
pop
or
cmpsl
outsl
xchg
or
ljmp
mov
das
movsb
jl
in
scas
inc
sbb
jp
sbbb
jae
cmp
mov
cwtl
xor
nop
bound
in
cmp
sub
jmp
jmp
xchg
repz
cltd
xchg
in
fwait
es
jl
mov
inc
sub
in
push
out
scas
xchg
mov
mov
push
pop
mov
popa
push
test
nop
jae
bound
push
out
xchg
add
jp
imul
add
pop
inc
pop
push
lahf
dec
subb
xor
xor
adc
pop
lret
and
ja
aaa
cli
xchg
aaa
cwtl
adc
clc
adc
xor
subl
adc
out
cltd
pop
pop
out
dec
enter
or
int3
dec
addl
data16
push
push
dec
gs
in
dec
fsubs
in
loopne
test
jmp
lcall
push
add
bound
push
xchg
adc
test
sti
or
dec
cmp
jecxz
les
leave
stos
addr16
dec
sbb
test
pop
enter
jle
sbb
adc
clc
sbb
inc
test
scas
dec
xor
dec
jge
fs
add
xchg
imul
mov
fsubs
ficoml
or
iret
stos
push
out
int3
push
or
sbb
inc
xchg
pop
sar
jne,pn
and
or
push
mov
cmp
cld
popa
or
imul
std
sbb
xor
orl
in
cld
mov
xchg
jg
shll
dec
lret
xor
mov
and
xlat
outsb
dec
insb
int
sub
xchg
iret
scas
stos
pop
jp
cmpsb
jmp
pusha
aam
loopne
fldcw
gs
imul
loop
mov
push
push
fisttpl
mov
enter
jmp
pop
pop
int
out
push
call
mov
sti
sub
and
das
ja
js
and
cli
int
fs
add
mov
enter
clc
ret
jmp
sub
in
out
or
sub
mov
iret
fdivrs
cltd
imul
sbb
pop
push
in
lret
or
mov
in
jnp
add
movsb
fisubrl
ficompl
jp
test
mov
fistpll
dec
mov
lahf
mov
imul
sub
jbe
int
orl
push
mov
adc
loope
cltd
push
les
std
sbb
fstpt
pop
dec
aas
push
adc
mov
cs
je
sbb
filds
fdivl
fldt
outsl
das
pop
clc
pop
neg
test
push
sub
in
roll
or
lcall
inc
add
or
xchg
jp
xchg
into
fwait
in
addb
shll
fldenv
sbb
jge
cmp
test
inc
xchg
jbe
jmp
push
imul
test
leave
add
push
dec
jmp
push
dec
sbb
sbb
sub
xchg
and
hlt
xor
fs
sub
or
mov
int3
xchg
dec
xchg
add
adc
insb
adc
push
outsb
lea
or
and
cmp
pop
cmpb
aas
mov
xor
jmp
outsb
mov
dec
xorb
dec
sbb
fs
xor
dec
cmpsb
fs
mov
xchg
insb
and
ret
mov
pushf
sbb
xchg
mov
not
imul
inc
adcl
mov
loop
inc
cmp
push
xchg
outsb
push
mov
mov
mov
xor
or
arpl
add
lods
scas
pop
dec
outsl
aam
ljmp
mov
adc
add
lods
pushf
xor
xchg
pusha
dec
leave
inc
loop
int
sbb
xchg
ffreep
pop
push
xor
in
cs
lods
outsl
add
sub
sub
into
insl
cmp
xchg
leave
pop
pusha
sub
xchg
sahf
cmpsb
sbb
mov
and
movsl
outsb
fisttpl
ljmp
ljmp
cmp
or
mov
cld
and
add
sbb
mov
lds
div
jno
dec
fisttps
sbb
mov
mov
enter
cmp
loop
popa
adc
add
or
in
lret
mov
int
xchg
cmp
xchg
les
enter
add
mov
mov
and
xor
add
cmpsl
xor
test
sub
mov
jno
mov
dec
adc
sbbb
nop
jp
sbb
add
insl
loopne
push
imul
test
in
cmpsl
xor
lods
js
sbb
cld
pop
inc
mov
std
imul
fdivrs
and
xor
sub
inc
mov
xor
js
push
aas
sub
push
add
cmp
inc
ja
mov
or
add
mov
add
scas
inc
outsl
hlt
push
add
repz
insl
leave
dec
repnz
cwtl
jmp
out
jns
cmp
cmp
in
rol
jp
clc
jg
aad
in
sbb
push
filds
inc
mov
in
mov
rcrl
mov
mov
sti
sub
lods
mov
mov
rorl
adc
insb
iret
out
xchg
push
mov
mov
lods
ss
mov
fadds
mov
mov
sbb
mov
sbb
sub
rorb
jnp
lock
add
cld
and
mov
addr16
jmp
push
xchg
popf
inc
mov
inc
adc
mov
ret
int
movsb
adc
cmc
inc
adc
in
fdivs
fldl
imulb
lret
aas
dec
fadds
popa
lcall
or
out
mov
pop
clc
or
in
cli
lds
fwait
inc
pop
pavgw
jge
inc
adc
sub
std
jo
test
subb
sbb
mov
mov
mov
mov
loopne
das
into
es
pop
js
add
les
add
xchg
inc
imul
invd
xlat
xor
add
cli
cmpsb
push
xorb
movb
ljmp
xor
cmp
xchg
das
lods
or
dec
cmc
push
adc
push
inc
sti
hlt
mov
add
mov
outsl
jge
in
jle
repz
pop
push
push
fstps
sti
mulps
out
popf
sbbl
add
xor
rolb
pop
stc
inc
filds
pop
std
jb
scas
xchg
adc
popa
jp
scas
in
into
jle
je
ja
mov
adc
div
inc
sbb
sub
and
popf
pop
enter
shl
sub
cwtl
xchg
xchg
jle
cmp
adc
pop
cmp
pop
jns
out
cmovp
sarl
push
push
sti
loope
mov
sahf
inc
dec
imul
sbb
scas
adc
mov
out
data16
mov
adc
xor
mov
mov
mov
adc
je
push
and
xor
push
push
jnp
lods
adc
addb
and
stos
inc
push
mov
dec
or
mov
push
fmul
cli
sbb
sub
popa
fiaddl
addr16
test
inc
pop
push
adc
aad
mov
jl
and
lcall
ljmp
jb
push
dec
mov
outsl
insl
pop
mov
and
outsl
popf
ret
mov
outsl
lds
sti
jge
call
sbb
inc
jge
pop
xchg
jge
mov
adc
in
mov
and
mov
xchg
out
test
and
mov
rcll
jge
adc
mov
scas
test
push
daa
std
inc
icebp
mov
test
fistpll
movsb
adc
es
sbb
mov
andb
and
lret
call
and
add
jmp
rol
mov
mov
test
sub
movsl
or
fwait
mov
push
js
out
lods
mov
mov
push
pop
std
mov
loop
xchg
jl
dec
jb
adc
sbb
lods
fnsave
fwait
sarb
rcr
mov
pusha
pushf
mov
aas
sub
clc
outsl
adc
pop
in
push
cwtl
jp
pusha
jno
aaa
push
out
xor
dec
aaa
add
addl
in
sub
in
into
or
or
sbb
cmp
xchg
push
xor
mov
jo
mov
push
pop
mov
inc
int
lea
sbb
insl
mov
mov
jg
int
popa
std
aaa
lods
iret
sub
rdtsc
push
lret
cwtl
mov
fmulp
pop
js
sub
jne
decb
cmp
aaa
dec
sbb
stos
dec
cli
aaa
push
iret
bound
fistpl
lret
icebp
cs
in
sub
mov
pusha
popa
daa
dec
jmp
repz
js
sbb
or
push
pop
ljmp
jo
shrl
jg
int3
push
adc
lahf
fldl2e
rorl
mov
icebp
je
xorl
rorl
xor
inc
aad
call
imul
lret
add
fnstcw
or
lret
ret
mov
cmpsl
jne
test
lock
sub
cmp
aaa
es
std
dec
mov
pop
scas
push
popa
daa
cli
cmc
test
inc
and
rcl
xchg
push
in
sub
repz
push
test
lret
out
fidivl
shrl
mov
pop
shll
jnp
mov
js
fidivrl
sbb
sbb
popa
es
adc
out
icebp
ljmp
dec
es
inc
xchg
jg
test
inc
mov
cltd
sti
sub
jne
xchg
popa
lcall
hlt
sbb
sbb
into
loop
test
mov
ss
cs
ljmp
pop
call
hlt
mov
ss
fwait
add
in
inc
dec
jl
mov
stc
pop
iret
push
mov
push
mov
sbb
dec
mov
bound
test
push
dec
mov
cmpsb
ljmp
dec
jg
xchg
fstpl
addr16
gs
pusha
rorb
hlt
fs
leave
incb
clc
fwait
leave
in
lret
xor
mov
push
je
xorb
inc
push
dec
outsb
adc
mov
and
popf
jecxz
mov
mov
add
cwtl
pop
test
lcall
fildl
add
jg
fadds
insl
mov
repz
jo
add
mov
cmpsl
push
and
or
push
aad
gs
pop
mov
ret
nop
insl
xor
dec
jl
jecxz
popf
shlb
add
xchg
cmc
pop
pop
cmpsb
pop
jns
out
xor
std
fnstsw
mov
ds
sti
jl
jmp
stos
dec
and
loopne
lret
mov
adc
jge
inc
xlat
cmp
jb
inc
dec
or
mov
or
lahf
lea
es
lcall
aam
adc
pop
lds
push
sti
push
outsb
dec
dec
pop
sbb
jnp
popa
les
aaa
and
adcb
mov
xor
outsl
movsl
outsl
or
or
mov
test
cmp
xor
pop
aas
cwtl
inc
fisttpll
xchg
icebp
pop
mov
aad
hlt
mov
rcll
cli
sbb
xchg
cli
adc
dec
test
lcall
xor
les
cli
xchg
cmp
mov
cmp
pop
sbb
icebp
mov
popl
jecxz
imul
push
aas
and
mov
mov
jne
into
sub
imul
fwait
add
jns
cmp
mov
xchg
out
movzbl
test
insl
aaa
out
es
pushf
mov
into
cld
cwtl
xchg
push
mov
out
cltd
adc
add
into
pop
std
add
cli
inc
out
pop
fadds
inc
dec
adc
push
cmc
jne
xchg
xor
pop
sahf
sbb
cmp
outsl
xlat
inc
out
cltd
push
inc
scas
dec
mov
xchg
arpl
or
jge
dec
lahf
sub
push
movsl
ja
rorl
das
xor
icebp
adc
push
and
sahf
mov
xlat
ret
outsb
xor
loop
in
and
test
imull
xchg
pop
scas
cld
idivb
add
jb
loopne
pop
mov
pop
jno
call
pop
pop
sbb
push
data16
sbb
sbb
push
xchg
inc
fldcw
cwtl
imul
mov
pop
xchg
push
cwtl
repnz
push
popf
lret
and
jle
incl
lock
outsb
pop
inc
out
mov
lods
scas
insb
lods
push
std
shll
xchg
push
inc
jg
sub
xchg
imul
push
sarb
add
xchg
or
sub
or
dec
fs
lret
popa
loope
inc
dec
xchg
or
cmpsl
ds
stc
imul
push
sbbl
push
loope
fwait
lret
push
xchg
xchg
cmpsl
add
in
or
xor
mull
stos
push
fmulp
push
or
xchg
lret
dec
fisttpl
jo
and
xor
addl
or
mov
aam
aaa
jno
je
cmc
mov
loop
dec
enter
rcr
pop
out
sbb
inc
xor
bound
out
sbb
or
loope
das
rorb
bound
cmp
mov
mov
popf
mov
test
pop
sbb
shrb
mov
arpl
pop
aas
mov
cmpb
mov
sub
fwait
mov
adc
and
lods
pop
pop
movsb
xor
push
outsl
jmp
loopne
lods
scas
enter
dec
lock
xor
and
in
icebp
test
lret
icebp
and
int3
push
inc
in
test
outsl
inc
cs
les
loope
add
xchg
xchg
mov
mov
dec
mov
inc
shlb
pushf
jo
sti
inc
hlt
ja
aaa
cmpsl
or
dec
cmp
and
in
mov
dec
in
lret
mov
hlt
or
aaa
test
hlt
push
push
dec
sbb
or
sub
pusha
scas
cwtl
inc
and
push
or
cmp
or
pop
xor
adc
adc
mov
sahf
stos
scas
dec
jecxz
dec
sahf
xchg
mov
lods
repnz
cmp
jae
cmp
je
mov
pop
js
gs
sub
mov
cli
mov
dec
mov
lock
push
push
cmp
or
fs
cmc
es
shlb
mov
dec
xchg
and
mov
aas
adc
lods
loope
or
xchg
mov
fidivl
repnz
imul
inc
cwtl
mov
sub
insb
or
into
sbb
cmp
enter
pop
xor
inc
jecxz
pop
xchg
and
dec
cmp
inc
push
or
stos
int
or
mov
lods
jle
jbe
sub
lret
dec
fistpl
xor
and
cli
ret
lret
xlat
mov
loop
out
std
pop
xlat
add
mov
xchg
stc
fistpl
cmp
or
sbb
cmp
jmp
jns
fsubs
jl
dec
pop
jecxz
pop
push
sub
pop
pop
adc
push
push
je
xchg
mov
scas
stc
dec
sbb
mov
in
push
in
test
cmp
xchg
jecxz
movsl
lret
mov
outsl
scas
xchg
sub
clc
int3
orl
sbb
outsb
push
push
dec
mov
outsl
dec
sub
popa
xor
dec
pushf
fnsave
sbb
push
daa
or
inc
cmp
mov
dec
mov
ljmp
pushf
fsubp
aam
aas
mov
cli
push
jae
dec
scas
decb
gs
cmp
pop
int
fwait
sub
test
shrl
repnz
mov
aad
int
aam
xor
sbb
pop
out
xor
jp
into
and
push
mov
outsb
fisttpll
lcall
or
mov
xchg
sub
pop
pop
sub
lret
std
ret
or
pop
push
lret
lret
cmp
sti
shlb
jg
popf
movsb
dec
inc
inc
idiv
pushf
imul
pop
scas
jmp
xchg
xchg
faddl
es
ljmp
lahf
cmpsl
mov
int3
push
lock
test
jo
test
insb
dec
fistps
scas
xchg
ror
fdivs
fwait
hlt
push
adc
stc
lret
pop
and
lods
xor
lea
jp
xchg
pop
std
and
enter
mov
cmp
outsl
aaa
out
sbb
cld
cmp
mov
mov
pop
xchg
dec
sbb
inc
push
test
popf
jne
movsl
mov
mov
cmp
popf
divl
add
cmp
inc
jecxz
mov
push
pop
ficompl
jns
mov
sbb
push
mov
add
push
mov
insl
outsl
outsl
clc
nop
xchg
pushf
fwait
xor
in
shl
inc
fcompl
scas
addb
sbb
pop
pop
sbb
in
add
stos
mov
fsub
out
aas
inc
cmp
adc
push
add
add
popa
push
imul
mov
mov
outsl
sbbl
push
cmpsl
dec
mov
movsb
adc
nop
pop
jnp
stos
jne
out
jne
lea
xchg
subl
inc
push
cmc
cmc
movsl
int3
add
jb
test
mov
mov
je
mov
clc
lods
mov
add
jne
test
lods
sbb
out
add
leave
insb
icebp
roll
and
in
xor
or
sbb
push
adc
out
and
cmp
xchg
cmp
pop
xchg
jae
notb
insb
xchg
mov
out
dec
mov
add
dec
shlb
lea
iret
cwtl
dec
cli
cli
push
lea
stc
jg
add
inc
add
loope
dec
call
sbb
divb
loopne
loope
add
inc
or
adc
add
scas
push
add
mov
aam
add
testb
inc
dec
lcall
call
push
out
sahf
sbb
popf
mov
sbb
ja
dec
push
push
cmp
mov
or
xlat
lea
jg
leave
mov
xor
mov
mov
inc
popf
mov
stos
int3
aad
jno
lock
xchg
out
cmp
in
adc
test
pop
push
xchg
rclb
sub
pop
shl
roll
pop
into
lds
repnz
clc
mull
xchg
sar
outsb
jbe
cmp
push
cwtl
mov
lods
fwait
push
or
call
cmp
icebp
xchg
fsub
push
int3
and
add
jecxz
adc
fistpl
jle
cs
jle
xchg
test
iret
jl
into
xor
std
or
pop
scas
adcl
fildl
aas
out
xchg
decl
sub
jmp
mov
push
jecxz
sub
pushf
sahf
testl
fidivrl
lods
jge
add
sub
or
scas
stos
or
mov
mov
mov
das
dec
xor
pop
mov
fwait
lea
fisttpll
mov
call
fs
jmp
xor
xlat
xchg
add
mov
push
faddp
shlb
es
test
movsb
sar
popa
shll
insl
add
gs
mov
sub
inc
push
in
push
or
jb
call
insl
test
movsl
cmpsb
push
add
push
addr16
jl
testb
js
push
les
test
sbb
inc
inc
lahf
insl
ss
mov
fisttps
add
ljmp
xchg
mov
hlt
clc
mov
loopne
or
cmp
xorl
jns
mov
inc
push
push
sbb
xchg
lock
ret
pop
aaa
stc
scas
push
xor
mov
daa
pop
shlb
les
testb
push
out
rcrl
imul
clc
dec
jo
daa
mov
lea
loope
sub
rclb
ficomps
popf
in
das
add
clc
mov
imul
xor
lock
fldenv
fneni(8087
jmp
cmpsb
mov
loopne
jne
fildll
arpl
in
es
or
scas
or
jns
inc
mov
cwtl
scas
xchg
push
clc
into
iret
or
cmp
out
adc
in
xor
out
sbb
cmp
pop
push
or
out
out
jecxz
adc
mov
daa
pop
pop
fstl
mov
lods
js
fisttpl
mov
pusha
pop
movsl
cltd
sub
loop
fs
pusha
in
imul
cmpsb
jl
mov
cld
mov
ret
cld
repnz
fwait
jns
leave
aaa
aas
loopne
push
aaa
push
hlt
cmp
adc
or
mov
das
lea
loop
enter
das
and
int
xlat
addb
pop
stos
add
add
jbe
mov
add
pop
imul
adc
arpl
xor
dec
je
mov
ljmp
sbb
popa
jae
inc
sub
aam
inc
and
push
imul
in
stc
ret
pop
ljmp
mov
shlb
test
inc
loopne
rclb
sbb
xor
jo
cwtl
sahf
adc
cmp
dec
jmp
add
inc
popw
add
or
pop
pop
or
fldenv
add
pusha
ljmp
addr16
xchg
push
pop
jns
rolb
push
push
in
add
fists
mov
flds
loope
cmp
icebp
add
and
sbb
addr16
les
mov
xchg
dec
rcl
push
rolb
stc
pop
ljmp
movaps
movsl
jg
dec
insb
cmp
testb
dec
loope
sbb
out
xor
outsb
sbb
sub
xchg
scas
jne
imulb
fidivs
or
in
push
mov
cmp
jno
fcompl
sub
sub
inc
mov
push
or
jae
jne
add
fildll
lods
pop
ds
aaa
jo
stc
or
test
aas
sub
bswap
loopne
sbb
fwait
pop
inc
call
mov
imul
mov
xchg
jge
in
inc
xchg
mov
lods
fsubrp
add
sbb
adc
test
mov
int
pop
add
dec
dec
mov
nop
test
scas
push
fwait
ljmp
inc
pop
lea
mov
adcb
cmpb
or
push
pop
leave
xor
cld
sub
jne
rclb
dec
jp
or
mov
or
not
stos
cmc
test
imul
inc
das
pop
out
arpl
fildl
add
stos
push
mov
jbe
orl
sti
cmpsb
mov
cmpsl
push
imul
aam
or
mov
dec
cmp
xchg
mov
nop
cmp
enter
jl
mov
or
pushf
mov
adc
mov
mov
push
mov
mov
lahf
jbe
xorl
pop
fdivr
shlb
jns
mov
repz
clc
pop
cmp
inc
add
mov
cmp
mov
mov
test
sti
iret
rcll
movl
rcrl
cli
adc
xchg
add
fucomip
mov
jp
push
xchg
test
mov
fs
std
and
jg
or
mov
cmp
push
cmp
cmp
adc
pusha
xchg
cmp
cli
jns
filds
rorb
or
add
ds
xor
pushf
icebp
mov
test
sbb
mov
mov
mov
cmpsl
sub
mov
movsl
addr16
popa
dec
sbb
testl
rcr
and
ja
pop
fiaddl
hlt
inc
mov
adc
jle
leave
out
adc
and
jbe
and
pop
aad
add
xor
and
scas
jmp
ret
std
lret
stos
cmp
xor
xchg
cltd
iret
lret
mov
sahf
aaa
dec
mov
fstl
pusha
loopne
push
cli
push
mov
jns
jmp
xor
sbb
cld
cmp
lds
and
cltd
pop
into
push
adc
xchg
arpl
mov
aas
mov
and
sub
ret
aad
movsl
out
mov
push
shlb
faddl
scas
call
mov
mov
lods
test
loopne
pop
or
fldenv
fs
int
mov
mov
sbb
mov
xchg
sub
sahf
mov
hlt
push
adc
cmp
mov
cmc
incb
jo
sbb
scas
push
clc
fcoml
stos
loop
int3
incb
fwait
jmp
sbb
into
cmp
popf
mov
addb
divl
dec
out
push
stc
hlt
jle
and
sub
jno
or
cmp
jl
icebp
stos
stc
das
daa
jecxz
rclb
outsl
lret
xchg
jge
add
xchg
fdiv
cmp
sbb
arpl
jl
lret
addr16
jb
jbe
gs
and
std
repz
clc
cli
cwtl
jo
sub
mov
or
mov
test
repnz
inc
arpl
aas
bound
inc
mov
lods
inc
jmp
mov
jecxz
loope
jecxz
pusha
in
cld
fdivr
aam
sub
push
inc
jle
sbb
clc
mov
lds
nop
mov
add
test
addr16
hlt
stos
inc
sahf
fstps
jge
xchg
outsb
lret
xlat
lea
fisubs
mov
sub
push
incb
lahf
xor
fucomip
jecxz
sub
addr16
push
adc
out
ljmp
add
aaa
sub
cs
ss
insl
inc
jmp
cli
push
out
ja
ret
aaa
icebp
mov
sbb
gs
lods
mov
sub
cmc
fcompl
jmp
dec
sarl
mov
leave
pop
cmp
cmp
std
xor
leave
and
inc
shlb
daa
or
push
fcmovnbe
test
mov
adc
jl
xchg
pop
test
cltd
or
pop
cmp
jge
jnp
and
lret
inc
repz
lods
dec
sub
jl
xor
push
push
add
ja
inc
es
push
inc
mov
in
fisttpl
fcmovnu
shlb
dec
stos
xchg
outsb
jnp
shll
dec
or
mov
add
call
cmp
push
inc
dec
aaa
movsl
test
xchg
push
pop
fld
iret
cmpsb
mov
sub
mov
jno
dec
sub
aad
lds
inc
je
xlat
push
sti
jg
iret
push
jns
xchg
mov
js
scas
iret
sbb
dec
pop
fldl
mov
idivl
and
xchg
jecxz
mov
add
lahf
pop
mov
int
cmp
and
stc
sbb
pop
js
ds
add
cltd
int
addr16
inc
fwait
cli
imulb
and
pop
or
push
pusha
jbe
sbb
sub
push
push
and
adcb
mov
sub
rcll
add
lds
push
sbb
cmpsl
sub
icebp
popa
dec
shrb
xchg
lcall
mov
dec
dec
rolb
into
cmp
dec
mov
movsl
mov
inc
bound
and
push
imul
mov
jle
xlat
cwtl
pop
int
push
mov
shr
or
ds
addr16
sti
daa
cmp
shrb
cmpsb
in
ficoml
pop
mov
rorb
das
mov
xor
add
adc
adc
pusha
cmp
add
sub
in
dec
xchg
cmpsb
xor
add
mov
lock
dec
mov
and
or
ds
and
cmp
cld
push
fdivrl
xchg
out
adc
push
clc
lea
cmp
test
das
outsl
add
push
jno
repz
ret
lea
pushf
movl
or
or
jle
rolb
aam
arpl
popa
popa
and
mov
in
push
negb
pop
push
adcl
mov
mov
and
fcoms
sub
into
stos
jns
outsl
scas
xchg
stc
outsb
cmpsl
mov
xorps
xchg
enter
ficoml
mov
movsb
dec
jbe
ljmp
inc
xor
and
xchg
dec
mov
ljmp
push
pop
mov
mov
add
xor
stos
jb
inc
popl
mov
mov
in
push
mov
jne
add
cmp
dec
repnz
push
inc
pop
jecxz
xchg
pop
lret
adc
jbe
test
sbb
je
out
sbb
add
inc
cmp
mov
and
xor
push
mov
mov
loop
es
popa
fstpt
test
addr16
nop
adc
mov
or
xchg
adcl
dec
fwait
ja
add
mov
jnp
dec
outsl
lcall
aad
insb
mov
mov
mov
pushf
lahf
cli
or
pop
cmp
adc
mov
inc
outsb
jecxz
lret
movsl
cmpsl
fistps
fsubrs
push
dec
adc
push
xor
lds
jne
fcomp
fcmove
cs
inc
xchg
jbe
ret
pop
sbb
in
ret
mov
xchg
mull
iret
sub
loop
flds
fcom
pop
or
out
popa
or
and
cwtl
ret
fwait
or
jle
pop
ljmp
push
pop
lods
or
mov
or
mov
jl
out
mov
sub
cld
push
jbe
hlt
out
adc
jbe
lods
xchg
andl
or
clc
mulb
pushf
and
mov
divb
loop
mov
andb
and
xlat
inc
mov
dec
lret
pop
nop
mov
jmp
incl
cltd
sbb
cmp
add
adc
in
outsb
push
mov
push
adc
popl
cmp
inc
jge
or
fsubr
or
push
movsl
lods
sbbb
test
jbe
jne
mov
adc
sbb
js
pop
subl
mov
mov
xor
jmp
add
push
pop
fnstsw
les
mov
inc
push
aas
push
adc
jle
arpl
daa
cmp
stc
inc
pop
jo
jae
jp
sub
pop
clc
cmc
mov
xor
insb
shrb
or
mov
in
adc
cmp
xchg
xchg
mov
jge
imul
lret
lds
jl
sbb
mov
xchg
pop
push
test
scas
inc
loopne
and
cmpsl
inc
arpl
xchg
add
clc
fs
test
cmp
mov
into
xor
pop
inc
mov
xchg
jg
pop
dec
jle
xchg
rol
in
jg
mov
sti
push
lret
stos
sbb
arpl
add
xchg
push
xor
test
pop
add
insl
cmp
aad
push
ret
mov
aas
cmp
notl
mov
cmp
lahf
je
dec
add
adc
mov
mov
repnz
pop
test
fwait
jnp
mov
enter
ret
xchg
and
mov
pop
cli
out
cmpsl
push
sti
imul
jae
mov
into
pop
fstpt
mov
inc
jle
mov
push
insl
cmp
mov
test
xchg
dec
jb
xlat
in
dec
push
lds
jb
mov
fcoms
pushf
shrl
popl
inc
or
fwait
icebp
aad
std
or
mov
ficompl
outsb
in
outsl
inc
mov
mov
out
shll
les
add
or
cld
fwait
pop
xchg
out
les
sub
lods
cltd
fbld
push
repnz
ds
xor
into
movsb
sub
lods
push
mov
fnstenv
lea
cmc
adc
inc
ja
mov
cmp
pop
mov
scas
or
out
imul
int
mov
or
sbb
xor
sub
add
add
jmp
out
je
aad
mov
mov
add
and
movsl
ficomps
repz
arpl
pop
out
lds
xchg
fs
mull
daa
lret
mov
fs
pop
nop
xor
dec
sbbl
jno
rorl
jae
xchg
sub
scas
xor
mov
push
test
fldl
cltd
lea
dec
hlt
idivl
sub
jecxz
and
js
movsb
loopne
sbbb
push
push
push
dec
outsl
cmp
push
test
fstpt
add
test
pop
sub
movsb
outsl
add
ds
in
mov
sbb
cmpsb
dec
mov
push
dec
rcll
cmp
push
jno
mov
test
sahf
add
and
jo
out
adc
in
aas
aas
cmp
mov
jge
sbb
pop
shlb
xchg
out
xchg
loop
sub
cmpsb
or
push
cld
pop
ljmp
int
or
xchg
aam
push
in
cli
push
sub
pop
jle
lahf
pusha
push
lcall
jns
movsbl
add
pop
int
xchg
cmc
mov
jecxz
fucom
int3
lods
add
and
rorl
std
xor
inc
les
push
in
xchg
dec
pop
imul
and
repnz
sbb
or
sbb
xlat
fistps
sub
stos
mov
mov
pop
insl
sti
mov
mov
cmpsl
ljmp
pop
daa
jg
xchg
push
fsubs
jp
rorl
ret
scas
cmovno
mov
xor
jmp
inc
popa
aad
repz
dec
lret
jae
pop
fiadds
dec
movsl
add
fs
cwtl
jecxz
cwtl
mov
xchg
push
adc
adc
ficompl
int
xor
hlt
inc
add
mov
cli
lods
mov
push
push
imul
ret
or
and
jo
lods
lea
mov
mov
jecxz
push
push
fildl
ret
jb
adc
xchg
and
xchg
mov
mov
fidivrs
ret
movsb
rorl
jp
sbb
in
cmpsb
adc
cmp
and
scas
xchg
out
add
xor
rolb
dec
add
out
aas
and
jae
js
push
and
sbb
pop
or
lods
es
scas
xchg
fdivrl
insb
int
cmp
neg
adc
repnz
mov
xchg
adc
div
shll
outsb
into
push
pop
jbe
popf
cs
fiaddl
xorb
ss
inc
mov
mov
in
lock
gs
nop
mov
aam
inc
xor
fists
sub
jecxz
ds
cmp
fdivrs
test
lods
mov
pop
aas
push
sub
and
out
rolb
lret
xlat
add
sarl
push
and
mov
adc
push
adcl
addr16
lods
roll
or
insb
bound
lods
loop
fiadds
int
dec
push
rcll
je
int
xchg
pop
scas
ret
jecxz
vzeroupper
pop
push
rolb
ljmp
mov
mov
inc
insl
lret
fidivrs
in
lcall
scas
xchg
lea
clc
xchg
movsb
imul
lods
and
lret
cmp
lcall
insl
stc
push
xchg
push
and
inc
push
popa
and
pop
inc
push
stos
dec
int
jge
jae
lcall
insl
mov
jl
pop
ss
lcall
mov
push
push
add
push
sar
jns
fldt
mov
jecxz
cltd
add
stos
sbb
pop
jne
loope
cltd
sahf
cmp
and
out
sti
adc
clc
mov
fs
ret
sbbl
stc
mov
push
stos
pusha
ljmp
js
mov
or
and
jno
dec
mov
push
shrl
xor
in
push
or
lret
icebp
mov
insl
test
and
leave
mov
push
jne
lods
pusha
int3
stos
mov
jbe
mov
add
movsb
mov
lods
movsl
or
push
scas
fs
push
testl
lea
lds
fimull
shlb
jmp
stos
xchg
sub
lock
rclb
adc
scas
imull
fwait
push
lds
sbb
movsl
push
test
lds
mov
rcr
rcll
push
es
pop
or
or
sar
and
push
xchg
fcmovnb
cmc
hlt
add
leave
adc
jp
clc
mov
std
sbb
sbb
push
outsb
ds
sahf
push
sbb
pop
out
psubusb
or
imul
mov
dec
dec
xor
divb
repnz
xor
mov
scas
cld
js
nop
pusha
imul
test
popa
mov
in
inc
push
cli
adc
inc
fadd
enter
fisubs
pop
repnz
or
fs
aad
leave
cltd
int3
dec
pop
and
pop
fld
outsl
adc
nop
in
push
jb
pushf
sub
test
in
rclb
pop
pushf
jb
pusha
pusha
lock
pop
mov
push
or
and
in
jb
bound
xor
mov
add
hlt
shr
insb
aas
add
clc
out
add
in
add
jp
push
nop
xor
sbb
imul
pop
and
icebp
test
xor
adc
cld
and
cmpl
jbe
xchg
add
imul
push
fsts
jp
lock
aas
jecxz
xor
and
push
mov
and
and
mov
push
out
insl
mov
arpl
inc
aam
jb
mov
cmp
xchg
sub
stos
sbb
mov
push
mov
and
xchg
pusha
sbbb
push
and
add
mov
bound
ficomps
xor
lods
push
cs
jbe
aas
dec
inc
loop
jb
aaa
mov
push
movsl
mov
sub
xor
pop
imul
test
or
stos
mov
cltd
out
xchg
push
fwait
out
mov
adc
sbb
push
das
push
or
aam
mov
ret
int3
fdiv
ret
arpl
xchg
mov
jmp
ljmp
pop
dec
ret
sub
adc
mov
cmpsl
out
push
jno
jmp
aaa
lods
fnstenv
ret
pop
xor
pop
jg
xchg
lds
sbb
xchg
mov
sbb
loopne
pop
dec
fwait
lret
loope
push
popf
aas
mov
lods
mov
ds
in
imulb
decl
dec
xor
jecxz
xor
or
xchg
in
xchg
shrl
cltd
iret
aam
cmp
bound
push
dec
sahf
imul
push
bound
adc
sti
xchg
adc
dec
xchg
loopne
shl
in
cmp
mov
jmp
icebp
mov
out
sub
mov
add
mov
xor
cli
test
mov
pop
es
sub
mov
daa
add
add
fdivs
xchg
addr16
sub
rcl
mov
push
or
sbbl
cmc
rep
dec
pop
jno
ljmp
adc
xchg
aas
daa
mov
dec
jne
mov
fiaddl
inc
pop
je
mov
lock
dec
sbb
iret
test
mov
sahf
pop
push
out
icebp
jne
rcll
lahf
mov
lea
jnp
ret
leave
lods
sub
push
jae
pop
push
cmp
aad
xor
fidivs
push
cld
movsb
ret
mov
ss
outsb
or
je
rcrl
enter
mov
jne
cmp
jbe
sub
cwtl
sbb
imul
adc
insb
xchg
pop
je
xor
ljmp
outsb
mov
xchg
iret
cwtl
xor
push
repz
sbb
push
sub
mov
pop
cmpsb
lret
add
imulb
testl
cs
je
push
lret
sub
mov
xor
sbb
mov
loope
ds
lahf
sbb
pop
jecxz
sbb
add
adc
out
xchg
push
jno
mov
imul
mov
cwtl
in
fldt
push
jmp
insl
or
ds
fmuls
mov
scas
mov
dec
loop
adc
push
les
ret
mov
inc
mov
pop
outsl
mov
push
lret
adc
or
movsb
sub
add
sub
ljmp
cli
cmp
shll
push
lods
pusha
add
inc
jb
push
jp
adc
mov
icebp
cmpsl
or
adc
mov
xchg
push
mov
shll
int3
stc
add
fwait
mov
fimull
or
mov
mov
inc
adc
jp
repnz
fimuls
iret
pop
adc
loop
bound
out
push
cmp
sbb
sub
lea
sbb
xchg
pushf
outsl
movsb
cmp
mov
outsb
dec
dec
cmp
sub
shll
push
loop,pn
push
sbb
enter
scas
ja
lcall
mov
pop
fnstenv
xchg
lahf
iret
aad
lods
loopne
mov
jl
cmp
mov
and
push
or
cmp
insb
es
xor
lret
xchg
cmp
or
adc
sbb
stos
push
inc
dec
adc
insl
mov
xchg
sbb
mov
xor
xchg
mov
or
ror
in
cmp
jno
push
jno
jmp
mov
sbb
daa
test
sbb
mov
cmp
xor
mov
in
sub
jp
mov
popf
add
test
ror
push
mov
sbb
inc
dec
les
clc
cmc
mov
xchg
or
fstpl
out
test
dec
push
push
cmpsl
call
add
mov
mov
xchg
lret
pop
rolb
test
adc
dec
mov
sbb
or
or
cld
jmp
xchg
leave
mov
pop
lea
inc
jmp
insb
faddl
pop
mov
fcomps
pop
in
sbb
ret
lods
cmp
mov
and
dec
pop
push
mov
mov
iret
mov
stos
les
mov
mov
xor
add
sub
jne
inc
pushf
test
lahf
insl
sub
pop
daa
xchg
mov
fadd
stos
adc
add
iret
sti
fdivrl
test
adc
xchg
cs
ljmp
rorb
mov
jns
push
add
sub
or
imul
sbb
test
addl
iret
data16
lret
or
mov
fisttpll
mov
int3
pop
dec
adc
pop
fs
jb
fsubl
xor
pop
sahf
xor
push
int
jmp
rcl
mov
loop
fmuls
rclb
cld
cmpsl
out
adcb
mov
lock
mov
inc
sub
cmc
jb
pop
push
dec
mov
dec
xor
push
cwtl
lock
add
sub
fdivrl
bound
aas
out
mov
push
inc
mov
outsl
in
ret
or
push
ror
fwait
mov
inc
incl
nop
adc
adc
and
mov
xchg
rolb
arpl
stos
sbb
cmp
push
adc
pop
push
in
insb
out
jmp
pop
rorb
push
mov
or
ss
cmp
mov
cltd
mov
int
outsb
icebp
lods
fdivr
xor
inc
mov
arpl
mov
lret
fbld
in
stos
adc
mov
popa
popa
test
or
cmp
mov
mov
mov
fadds
or
out
stos
es
or
add
sub
mov
xor
loopne
outsb
xchg
xchg
mov
dec
or
int
xchg
sbb
mov
cmpl
mov
fldl2e
cmp
loopne
das
je
sbb
cmp
jbe
lds
fmul
lret
or
int
jb
jge
mov
push
popa
mov
outsl
inc
and
fisttpll
inc
push
pop
fidivrs
inc
cmp
adc
add
xlat
fiadds
aad
push
jo
inc
jl
mov
mov
aas
aaa
sub
loopne
bound
stos
inc
bound
imul
pop
loop
xchg
xlat
lods
nop
pop
jmp
jo
std
inc
mov
jo
data16
mov
jo
sub
hlt
add
or
mov
mov
mov
pop
sti
lods
cmp
jmp
cmpsb
add
sbb
sbbl
mov
dec
incl
dec
xchg
jno
addl
data16
inc
pop
xor
loop
mov
sbb
cltd
pop
lea
and
jb
mov
xchg
adc
xor
push
mov
or
mov
mov
out
adc
push
dec
orl
jbe
jl
aam
sti
mov
or
pop
fisttpl
in
in
mov
xchg
mov
pslld
hlt
pop
jbe
in
mov
xor
mov
lock
test
mov
into
xor
in
pop
sub
jg
push
shl
rcrl
lods
fcmove
lret
push
adc
push
in
push
aad
movsl
cmp
jp
in
outsb
daa
hlt
lahf
inc
xchg
test
out
sub
jae
gs
cld
adc
ss
lret
cli
enter
inc
aaa
imul
fcoml
xor
sub
push
call
sub
xor
adcl
pop
test
lret
aaa
imul
and
insl
adc
mov
rcl
dec
xor
stos
ljmp
stos
jnp
cmp
int3
push
cmp
mov
mov
das
scas
pop
push
pop
sbb
sub
xchg
bound
sub
push
movsb
ret
loopne
dec
push
adc
jmp
js
xchg
out
add
add
xchg
pop
daa
hlt
pop
lock
push
fimull
pop
negl
pop
das
incl
push
xchg
push
fcoms
jne
fistl
sub
jl
jg
stos
push
in
sbb
mov
ds
jmp
daa
mov
jnp
push
inc
stos
iret
sbb
add
fsubs
aas
loop
xchg
test
xor
movsl
xor
insb
pop
mov
out
ss
xchg
orl
lock
push
aas
repnz
push
add
imul
fcmovbe
aam
or
fidivrl
test
std
adc
lock
dec
jg
fnsave
mov
jle
lock
les
push
aam
xchg
aas
lock
push
ja
or
outsl
rcll
pop
aam
mov
das
cli
ret
fsub
sub
pusha
bound
sbb
in
jl
dec
les
fimull
aaa
push
lret
xor
mov
jbe
lods
sub
test
inc
push
xchg
aas
jmp
addr16
push
cwtl
shl
shlb
mov
mov
or
repnz
mov
mov
mov
mov
int3
nop
mov
and
adc
aad
cmp
negl
xchg
and
adc
push
es
xchg
out
popa
sbbl
roll
idivl
aaa
mov
fisubl
aaa
or
push
pop
add
mov
mov
int3
push
jle
or
out
inc
push
test
mov
test
and
loopne
sbb
jle
sahf
scas
inc
rorb
add
stc
and
mov
and
mov
and
ja
xchg
dec
pop
pusha
movsl
sub
fildll
ret
call
ret
sub
enter
aaa
inc
xor
cwtl
sub
aas
jbe
xor
adc
jbe
push
in
jl
jnp
clc
push
xchg
jo
push
ficoms
shr
lds
daa
sbb
divb
xchg
jmp
insl
lret
and
dec
sti
or
bound
int3
loop
enter
ficoms
aaa
outsb
xlat
push
push
dec
or
clc
and
icebp
and
sbb
inc
inc
jne
mov
cmp
ret
push
scas
push
and
lret
jno
ljmp
mov
loop
mov
xlat
sahf
xor
mov
xor
sub
xchg
push
test
or
test
in
dec
shrb
call
stos
mov
pop
cld
test
pop
push
cmpsb
addb
dec
stc
fiadds
push
movsb
sub
loope
inc
lret
mov
pop
add
sub
loope
jl
mov
dec
insb
stos
fiaddl
es
leave
push
movsb
sub
jo
incl
sub
lret
xorb
sarb
aaa
in
mov
cs
outsl
pop
or
sub
fidivrs
pop
dec
sbb
sbb
dec
int3
hlt
xor
das
mov
mov
dec
add
mov
fwait
lcall
xchg
dec
loopne
lret
pop
rcl
push
jg
iret
mov
adc
lea
gs
jecxz
mov
dec
push
mov
pushf
mov
int3
mov
ja
dec
pop
jae
push
lret
shlb
scas
cmc
je
in
pop
or
pop
add
fwait
movd
xor
into
dec
jb
sbb
cmp
inc
lods
inc
sub
in
mov
fldt
btsl
std
ljmp
adc
sbb
lods
fstps
pop
loopne
inc
aam
dec
pop
dec
into
inc
out
adc
fs
iret
jno
loop
insb
xchg
sbb
test
pop
jne
xchg
mov
mov
int3
pop
rorl
push
add
mov
inc
sub
mov
data16
mov
dec
or
jmp
icebp
scas
not
mov
insb
cwtl
jno
cmp
stos
add
mov
cmpsl
xor
push
sahf
push
inc
inc
fwait
aas
cmp
jne
scas
sub
int
xor
inc
and
out
jb
push
sti
rorb
out
aaa
xchg
xchg
cltd
fisttpl
mov
sbb
jmp
hlt
sub
call
adc
push
fmul
int
mov
push
loope
loop
mov
shlb
lcall
ljmp
pop
call
repz
mov
or
bound
mov
out
cmp
lahf
fldt
cmp
and
test
scas
mov
jp
out
dec
loopne
or
imul
in
fwait
iret
fmul
dec
out
jne
sub
cmp
push
jnp
ljmp
push
nop
sti
pushf
or
stos
xor
je
xchg
mul
xchg
lock
pop
pop
jo
adc
pop
or
add
jno
