add
add
add
add
and
add
pusha
add
addb
add
add
add
cmp
add
add
add
or
add
add
les
adc
test
add
add
add
mov
add
addb
add
or
add
and
add
add
pop
add
push
add
dec
add
dec
add
add
add
add
and
add
add
or
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
add
jno
push
add
es
cmpsl
ss
add
pop
adc
aaa
sub
fildl
add
pop
dec
add
dec
cmp
jecxz
push
add
ja
add
sbb
add
pop
inc
add
inc
add
pop
add
popf
pop
pop
add
and
add
outsl
push
add
and
add
fs
add
outsb
dec
add
jbe
add
insb
inc
add
dec
add
sbbb
mov
mov
dec
add
jo
call
jne
fmull
test
jmp
cltd
add
mov
add
mov
add
mov
sub
add
add
fisttps
add
push
sub
call
add
ret
xor
add
inc
push
add
dec
push
add
push
sub
cmp
add
cmp
add
dec
adc
ret
add
inc
add
sarb
add
fisttps
add
inc
or
fmull
add
xor
add
arpl
add
sub
out
add
loope
add
stos
arpl
add
pop
add
sub
add
push
adc
add
push
add
outsb
add
clc
add
mov
add
lcall
add
jb
add
add
ret
push
add
imulb
add
pop
add
out
add
ret
je
add
push
add
jle
add
mov
add
addl
decl
add
xchg
call
add
call
pop
or
lcall
add
add
notb
add
andl
leave
cltd
dec
add
stos
add
icebp
sahf
add
leave
xchg
add
mov
add
cwtl
add
ljmp
add
les
add
cmpsl
sub
jmp
add
rcrb
add
and
jae
add
aam
or
xchg
jge
add
xlat
pop
add
adc
lahf
cwtl
add
ja
inc
add
data16
rcrb
add
or
push
jle
add
xor
sub
das
add
addb
sub
mov
add
add
push
add
dec
mov
mov
add
or
add
add
add
push
xor
add
add
add
add
add
add
jns
add
jno
add
outsl
add
add
add
arpl
add
rorb
mov
add
pop
add
add
add
test
add
lret
inc
add
mov
add
cltd
push
add
add
pop
sub
adc
add
imul
push
add
pop
add
mov
add
xchg
add
out
scas
add
movsb
add
movsb
insb
add
mov
add
lret
addl
ret
add
nop
add
jbe
add
icebp
popf
add
cld
movsl
add
jno
add
lret
xchg
add
xchg
data16
xchg
adc
inc
add
outsl
dec
add
addl
xorb
addr16
add
xchg
add
add
stos
mov
test
xor
add
push
add
xchg
lea
or
add
mov
add
fwait
mov
sbb
scas
add
cmc
add
pushf
roll
int3
incb
add
out
add
mov
aam
add
fildl
or
mov
incl
sbb
in
add
leave
repz
sar
add
add
std
add
push
add
jge
add
mov
add
cld
add
repz
popa
sti
add
arpl
add
push
jmp
add
push
mov
add
cmp
add
mov
add
daa
mov
add
jo
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
dec
cmp
add
add
add
add
add
add
add
add
add
add
popa
pop
dec
sbb
sbb
add
add
add
add
add
add
add
add
add
push
ss
ss
add
add
add
add
add
add
add
add
add
cmp
sbb
pop
sbb
xor
xor
sbb
add
add
add
add
add
add
add
adc
sbb
outsl
mov
adc
ss
add
add
add
add
add
ja
adc
outsl
lcall
adc
add
add
add
add
add
add
xor
aaa
inc
inc
inc
pop
movsb
movsb
mov
aaa
xor
jb
dec
adc
add
add
add
add
add
aaa
inc
inc
dec
dec
push
xchg
mov
inc
aas
cmp
jg
dec
sbb
add
add
add
add
ja
aas
inc
dec
push
push
push
outsb
popf
popf
lahf
lahf
xchg
push
dec
inc
inc
pop
mov
dec
add
add
add
add
add
inc
dec
push
push
pop
pop
imul
push
orb
bound
add
add
add
add
dec
push
pop
pop
pop
adcb
mov
mov
add
add
add
add
dec
pop
pop
fwait
mov
mov
mov
push
sbbb
cmpb
add
add
push
mov
loopne
out
outsl
jbe
imul
lcall
add
add
mov
fabs
out
fstp
lea
popf
popf
mov
add
push
and
push
or
out
jecxz
shll
jge
imul
and
sub
sbb
or
aad
loopne
call
jl
je
pushf
popf
popf
mov
add
and
sub
sbb
out
fucom
lea
nop
popf
mov
add
and
sub
and
or
out
fstp
mov
jns
test
popf
mov
add
cmp
sub
and
or
call
cmpsl
mov
jae
add
add
and
daa
sub
sbb
push
rcr
mov
rol
aad
mov
mov
pop
imul
add
add
and
sub
es
or
mov
lds
gs
add
add
add
add
sub
and
jmp
lret
int
mov
mov
pushf
fs
add
add
add
add
add
repz
add
idiv
cld
ret
enter
rol
int3
fwait
test
add
add
add
add
repnz
jmp
sti
ror
int3
mov
mov
add
add
add
add
add
add
in
ljmp
lret
int
mov
rclb
add
add
add
add
add
in
out
ljmp
int
mov
xchg
add
add
add
add
add
add
add
in
out
jmp
cld
ret
enter
mov
add
add
add
add
add
add
add
repnz
ljmp
ret
int3
add
add
mov
add
add
add
add
add
add
in
in
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
in
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
add
add
adc
add
add
add
add
int3
pop
add
add
add
or
add
push
adc
add
add
add
add
add
add
out
sbb
add
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
adc
sbb
adc
test
adc
xor
adc
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
push
inc
push
outsl
arpl
je
add
add
and
add
add
add
add
add
add
add
mov
add
cltd
lcall
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
inc
add
sbb
add
adc
add
sub
mov
rcrb
stc
test
xchg
cmpsl
push
sub
mov
into
push
rorl
sbb
repz
repnz
mov
stc
fwait
aaa
jecxz
jl
adc
push
and
mov
imul
stc
pop
out
fidivrs
xchg
add
loopne
add
push
aam
fistps
imul
iret
fisttpl
fiaddl
push
xor
cmp
mov
loope
xchg
call
mov
imul
in
mov
add
sahf
cmp
sub
jnp
lahf
enter
mov
xchg
pop
push
mov
sbb
push
push
das
pop
jp
xor
inc
cmpsb
sbbb
and
xchg
es
mov
inc
dec
adc
pusha
outsb
xchg
sti
push
fiaddl
vcvtdq2pd
mov
add
adc
insl
outsb
adc
das
pop
popa
repnz
js
movsb
sar
test
decl
jb
or
cmp
test
enter
gs
jns
add
push
clc
jp
cltd
or
dec
or
jp
testl
stos
movsl
cld
stos
pusha
ficomps
or
sub
jns
icebp
xchg
cmc
mov
pop
ds
and
cmc
mov
aam
fs
mov
mov
push
push
inc
and
lods
xor
mov
sahf
rorb
push
sbb
push
lcall
mov
neg
sbb
fadd
lea
fisttpll
daa
xchg
or
lret
mov
jp
jno
push
push
xor
xchg
mov
adc
xor
movsl
pop
pop
fiaddl
add
jecxz
xchg
xlat
fptan
call
out
outsb
xor
mov
add
outsb
mov
cmc
ja
mov
ds
dec
mov
and
inc
jp
pop
jge
leave
pusha
xchg
xchg
and
rcl
push
into
push
jns
ret
mov
push
jb
loope
aam
mov
xchg
pop
jg
fdivr
dec
ret
es
pop
insl
test
mov
inc
fldl2t
sbb
jl
dec
mov
xor
outsb
inc
pop
sbb
xchg
adc
std
cmpsl
addr16
das
dec
xchg
jg
pop
pop
clc
add
adc
add
push
je
icebp
popa
and
dec
js
xor
mov
xchg
icebp
jmp
fsub
dec
ret
movsl
add
clc
pop
ljmp
xchg
cmp
inc
sub
and
and
or
dec
subb
shl
mov
cwtl
jmp
jae
fidivs
cmp
cmp
imul
test
subb
loop
test
mov
mov
push
test
and
adc
lea
pushf
xlat
or
int3
sbb
icebp
or
push
fucomp
sub
mov
adc
sti
pop
cs
xchg
repz
push
or
call
sti
test
es
call
imul
aad
mov
fmul
cmp
jne
movsl
pop
jne
lahf
or
arpl
imul
jne
mov
out
lock
inc
bound
push
jl
mov
mov
cmp
gs
xchg
lahf
orb
popf
push
xchg
pop
in
sbb
inc
mov
in
jl
imul
cmp
nop
push
test
test
dec
or
leave
aam
inc
jmp
jge
iret
test
sbb
icebp
jae
xorb
aam
xor
mov
lock
icebp
mov
arpl
add
pop
or
add
add
inc
out
mov
cmc
xchg
int
sub
or
cs
dec
test
jge
sub
sbb
dec
jle
lods
xchg
popa
test
jbe
popf
pop
sti
pop
movsl
ss
gs
lret
cs
sahf
push
ljmp
jbe
inc
xchg
dec
inc
shlb
fldenv
sub
mov
insl
dec
imul
mov
pop
adc
mov
inc
lock
or
inc
sub
rcl
adc
jl
xchg
stos
dec
add
ds
aaa
mov
jbe
cs
data16
aam
cmp
jl
lods
xchg
scas
xchg
scas
push
mov
mov
outsl
push
push
and
xchg
jne
loope
lea
pop
movb
sbb
cmp
fwait
pushf
pop
add
jno
or
push
and
sbb
mov
fcmovbe
mov
cs
pop
mov
lcall
call
xor
sub
fstpl
out
or
mov
inc
lods
loopne
into
add
jmp
cmc
jg
subl
xchg
bound
sub
push
fcom
dec
jg
rolb
call
or
sete
mov
dec
sbb
and
and
lods
sub
dec
stos
shl
sarl
repnz
and
insb
dec
pop
cmp
mov
adc
std
adc
pop
xor
mov
mov
aas
cmp
sub
mov
cwtl
cmp
fucomp
or
enter
mov
data16
mov
loope
test
lahf
lods
mov
mov
mov
sbb
fstl
xchg
sbb
cmp
dec
jge
das
bound
ljmp
push
nop
push
in
popl
sub
subb
int
andb
mov
pop
inc
dec
leave
bound
mov
lods
imul
addr16
mov
lcall
xor
fisttpll
dec
and
cli
add
mov
adcl
sub
inc
scas
aad
imul
cmp
popf
cwtl
test
pop
addr16
mov
je
or
jl
cmp
mov
jge
jecxz
out
pop
cmc
add
jl
xor
mov
mov
mov
inc
inc
rorb
into
mov
iret
stc
mov
push
dec
add
nop
and
int3
in
insb
add
sbb
in
jge
xor
jbe
fsub
outsb
lock
cmp
sti
push
mov
test
jl
lahf
popl
push
jbe
sbb
nop
sahf
fwait
or
loopne
shrl
xor
ror
cmpsl
mov
icebp
xor
inc
dec
adc
dec
ds
add
arpl
sbb
cmp
xchg
jecxz
mov
mov
inc
push
sub
in
or
mov
add
lods
dec
mov
or
movsl
xchg
jl
aas
or
add
xchg
aas
nop
outsl
sub
push
outsb
sti
dec
fsubs
jp
ss
dec
jnp
in
pop
adcb
jnp
push
cmp
or
add
inc
xor
std
cmpsb
sub
add
inc
div
scas
dec
or
hlt
or
lret
sub
in
movsl
in
movsb
mov
pop
cmp
clc
addr16
pop
adcb
movsb
adc
stc
int3
or
sub
push
or
int3
lods
cwtl
orb
fisubl
mov
and
adc
pop
aam
mov
movsb
push
xorl
xor
pop
shlb
jge
repnz
out
popa
cmp
mov
xor
fsubs
adc
popf
cmpsl
loope
mov
fwait
mov
inc
xlat
leave
xor
jl
mov
xlat
lea
inc
push
cmpsb
insl
pop
mov
dec
in
test
push
pop
into
lods
xorb
fcoms
mov
cmpsb
mov
ret
inc
pop
sbb
push
movsl
sbb
test
dec
repnz
in
fsubl
jmp
xchg
mov
outsb
insl
imul
dec
xor
pop
rclb
adc
sbb
popf
mov
xlat
call
pop
aam
or
dec
mov
and
outsb
pop
test
xor
rorb
rclb
fistps
iret
call
jb
les
mov
fisubs
loop
pop
and
push
stos
stos
add
mov
shlb
out
clc
sbb
add
inc
pop
xor
xacquire
ret
inc
push
mov
sub
leave
out
jnp
ret
mov
or
adc
or
xchg
ret
aam
sti
xchg
and
xor
jns
jb
mov
aaa
push
sub
fnstenv
mov
mov
adcb
incl
jbe
inc
sub
out
cld
nop
mov
xlat
out
cmp
push
iret
loop
sbb
cltd
push
pop
arpl
mov
or
in
rcrl
mov
adc
mov
xchg
ret
or
mov
push
mov
and
mov
jmp
xchg
in
mov
and
lahf
xchg
ficomps
add
movsl
lea
lret
sbb
adc
and
iret
lret
xor
ret
xor
in
fldt
fmul
and
shlb
push
pusha
lods
mov
cmpl
pop
xor
push
imul
mov
xchg
sub
pushf
cltd
add
push
add
mov
shll
testb
rclb
mov
shrl
test
sbb
and
sarb
push
ret
mov
dec
sti
mov
in
in
shlb
mov
orb
adc
je
sub
decl
aad
cld
cmp
add
mov
xor
push
data16
jbe
cmp
xorb
cmpsl
in
xchg
xor
pusha
call
mov
push
cmpsb
push
mov
add
cli
mov
enter
fstps
mov
js
cmp
aad
mov
nop
imul
popa
adc
xor
add
jl
out
shll
cmpsl
mov
lods
lret
add
push
sbb
gs
cmp
mov
or
aad
loopne
addr16
xchg
jp
pop
cmp
mov
fsubl
cld
insb
pop
sarl
mov
loope
xchg
loope
jecxz
xor
cmc
push
push
sbb
in
xchg
inc
pop
cli
jb
fcoms
push
movsl
fsubrs
out
inc
pop
jo
lcall
or
dec
pop
push
sub
inc
or
shl
jp
icebp
mov
nop
add
fisttps
mov
mov
cltd
add
icebp
stos
fistpll
lds
pop
aaa
loopne
jge
loope
sub
adc
inc
sub
jge
lods
sarl
add
jno
movb
xchg
cmpb
in
push
lea
fbld
push
enter
sub
push
fisubs
aaa
pop
repnz
jg
add
cmp
jne
lea
into
jns
or
mov
mov
dec
shll
fnstcw
cmp
out
sarl
popf
jns
mov
cmp
lahf
dec
test
mov
ss
lahf
or
hlt
lock
insb
sub
das
sbb
jecxz
xchg
adc
inc
sub
push
test
push
nop
sub
shlb
fcomi
cmpl
test
cmpsl
mov
aam
sbb
sbb
jle
inc
fcoms
aam
adc
cmp
pop
pushf
push
fisubs
std
cmp
dec
xor
fcmovu
pop
in
inc
push
push
lock
imul
imul
shlb
pop
push
mov
cmp
das
jmp
sahf
sub
xchg
xor
mov
xchg
sbb
aas
ljmp
jl
add
in
inc
in
out
popa
jno
jmp
loop
iret
and
nop
xchg
mov
sbb
xchg
jae
push
in
jae
bound
push
sub
xchg
mov
mov
xchg
cmp
jae
leave
leave
stc
mov
add
push
push
xlat
mov
cmp
jnp
pop
and
std
adc
lea
inc
mov
fwait
push
shlb
inc
pushf
add
ret
out
mov
xor
add
sub
popf
push
jae
and
jg
test
faddl
mov
mov
xchg
inc
add
es
sbbb
jbe
cmpb
jae
ss
mov
das
mov
cld
in
mov
into
sahf
cmp
popa
sub
dec
ljmp
test
cmpsb
gs
dec
lret
rcl
sbb
xor
push
inc
pushf
xor
sub
mov
popa
ja
pop
mov
dec
mov
cmpsl
push
mov
xor
xor
inc
imul
fadd
pop
inc
xchg
mov
dec
push
aad
push
sbb
and
mov
adc
lahf
mov
repnz
or
into
rolb
aam
sbb
cmp
out
icebp
cmc
insl
in
repnz
aaa
out
pop
call
sbb
push
xor
into
daa
outsb
ret
roll
dec
pop
jl
mov
pop
cmp
pop
stos
ljmp
xor
adc
jp
adc
or
les
ljmp
xchg
sti
es
pop
jbe
pop
push
inc
daa
dec
dec
lcall
insl
in
pusha
dec
push
sbb
outsl
lea
sub
rclb
mov
jbe
out
shll
daa
cwtl
mov
add
dec
decl
movsb
fxch
jmp
aas
mov
mov
dec
xchg
out
gs
xlat
aad
sub
lret
mov
cli
mov
xor
enter
sbb
repnz
imulb
mov
addl
or
jp
add
cmp
out
cltd
and
shll
data16
cmp
incl
movsl
mov
test
or
dec
addr16
xlat
xchg
sub
mov
dec
sbb
mov
jae
rclb
jne
xchg
add
das
fdivrp
cmp
test
rorb
sti
out
sbb
cmp
dec
mov
ficoml
ds
movsb
add
xor
repz
test
pop
les
aaa
push
and
pusha
jp
sub
not
pop
cltd
adc
adc
stc
out
popf
add
loope
mov
or
and
push
pop
mov
lret
lds
outsb
in
fldcw
xor
iret
dec
cmp
stos
jns
out
mov
jne
icebp
push
aaa
sub
sbb
jno
push
push
mov
and
push
jae
push
xchg
subl
daa
outsb
cmp
mov
arpl
or
scas
sub
mulps
cs
sub
fsub
pop
shll
sbbl
loopne
mov
int3
imul
cmp
adc
push
adc
rolb
roll
iret
addl
push
dec
arpl
std
gs
add
push
fsubs
add
dec
jle
adc
call
dec
mov
sbb
in
sbb
arpl
and
fwait
jg
loopne
mov
aaa
dec
and
jae
push
scas
call
pop
push
ret
movsb
mov
in
xchg
fiaddl
push
jp
sub
daa
popf
or
les
xchg
daa
shll
daa
in
es
mov
cmp
loopne
mov
imul
daa
insl
into
stc
in
pushf
mov
push
test
je
stos
out
fsubrs
outsl
icebp
and
mov
movsl
mov
dec
mov
movsl
scas
push
mov
insl
mov
shr
jo
add
mov
push
cmp
lock
mov
dec
fwait
icebp
js
adc
fistpl
cmp
lahf
mov
or
ss
pop
adc
jb
cmp
cmpsb
push
cli
fldl
inc
and
faddl
xchg
dec
in
mov
cwtl
pop
fmull
mov
xchg
add
lret
repnz
and
test
in
inc
pop
or
notl
mov
mov
lds
pop
mov
jne
das
inc
lods
mov
xor
sbb
sbbb
mov
add
mov
mov
adc
scas
faddl
jp
mov
lods
inc
cwtl
sbb
repz
test
inc
cmpsb
add
fbstp
cmp
lds
test
into
paddsb
lods
divb
adc
jb
test
mov
sti
xchg
jecxz
and
mov
mov
nop
dec
pop
rcrb
mov
cmp
xor
call
mov
jl
jmp
out
lcall
clc
rclb
cmp
mov
roll
pop
ss
pop
dec
sbb
jl
cmp
dec
aad
int
pop
inc
jle
cmp
inc
sub
call
sbb
and
loopne
aad
out
push
pop
rolb
dec
and
inc
pop
out
lret
sub
xchg
enter
sbb
iret
sbb
inc
fs
ficompl
lods
jge
pop
testl
scas
mov
or
xchg
outsl
cld
cmc
and
ja
test
xor
imul
or
and
pop
add
mov
out
insb
dec
scas
fnstcw
shl
xor
outsl
pusha
mov
shrl
jg
pop
pop
fidivl
bound
mov
sub
data16
mov
fldln2
jnp
mov
pop
jbe
pop
mov
je
adc
repnz
add
pop
cmpsl
leave
daa
mov
ret
out
std
pusha
jecxz
jg
rcrb
rcr
addb
fnsave
loopne
jnp
sub
roll
xlat
ret
mov
shll
push
pop
xchg
add
xor
or
jg
push
mov
jg
insl
cmp
popaw
push
adc
add
ret
fwait
stc
cs
repnz
stc
sub
shrb
mov
aam
std
cltd
stc
mov
pop
loop
dec
inc
xor
out
pusha
inc
xor
cltd
xor
add
and
add
pop
jae
cmp
push
jns
popf
jb
xor
cwtl
mov
sub
pop
adc
out
mov
and
cmc
inc
cmp
test
sub
insl
cmpsl
cmpsl
mov
int
xchg
add
and
dec
add
add
xchg
outsb
mov
shrl
pop
add
out
in
stc
push
ja
cmp
pusha
mov
mov
rolb
cli
stos
mov
pop
cmpsb
imul
icebp
test
jmp
push
mov
mov
lods
mov
mov
hlt
push
add
push
dec
pop
xor
adc
repz
test
outsl
nop
pop
mov
sub
mov
push
cmp
push
cmp
xor
insb
cmpsl
jne
xor
add
sbb
push
or
lds
sbb
idivl
cmpsb
fidivrl
adc
add
xchg
adc
cli
rolb
ss
pop
jmp
popf
xchg
add
fmul
sbb
mov
jbe
repz
mov
adc
or
movsl
adc
ss
shlb
mov
mov
mov
sahf
xor
cmc
push
sub
pop
jne
add
enter
imul
popa
repnz
cmpb
jg
add
inc
add
ja
inc
int
test
xor
jns
icebp
iret
jne
mov
pop
int3
leave
call
push
pop
jecxz
fbld
mov
pop
gs
add
popa
mov
in
ret
jbe
lods
movsb
jno
stos
and
inc
sub
fld
lods
imul
mov
negb
dec
pop
lcall
add
adc
aad
fwait
aam
aas
cld
xchg
sub
sub
arpl
popa
lds
mov
cld
nopl
out
sbb
pushf
dec
aam
rol
xchg
adc
aaa
mov
cmc
mov
cs
jnp
push
or
bound
add
in
mov
enter
add
in
xchg
data16
or
sbb
scas
xor
push
fcoml
sub
xchg
pusha
gs
pop
ror
add
repnz
insl
outsb
push
xor
dec
imul
aaa
rorb
jb
adc
jecxz
cltd
jmp
jmp
xor
dec
pop
or
ja
mov
inc
adc
les
jb
inc
mov
data16
nop
jbe
pushl
shlb
mov
and
das
ljmp
mov
cli
movsb
pop
movsb
int3
mov
pop
shrl
clc
add
and
dec
adc
xorl
sahf
stc
or
mov
arpl
inc
sub
pop
add
andl
and
into
hlt
leave
js
and
pushf
fsubr
pop
ljmp
inc
rolb
dec
fdivs
fs
addr16
adc
enter
imul
xorb
add
into
scas
sbb
push
jno
nop
pop
cwtl
mov
cs
lods
bound
cld
adc
pop
adc
call
pop
jmp
movsb
movsl
aas
wbinvd
fucomp
and
inc
aam
shlb
jmp
iret
pop
push
leave
mov
push
or
xchg
popf
rolb
push
push
inc
push
mov
push
out
cwtl
test
push
mov
fmull
xchg
mov
bound
pop
mov
sub
cmp
xor
popa
mov
imul
pop
clc
ljmp
inc
int
mov
jnp
es
mov
addr16
repnz
mov
xchg
fisubrl
mov
pusha
insb
mov
les
add
cmp
jp
fcoml
ja,pt
mov
xor
es
aas
rcrl
es
add
daa
jmp
lods
shlb
jecxz
out
inc
pop
and
ljmp
inc
xchg
and
imul
lea
add
nop
and
mov
out
outsb
dec
push
fistpll
dec
outsl
rcll
insl
lods
cmp
mov
fwait
pop
sbb
fadds
mov
mov
movsb
push
pop
clc
add
cwtl
xor
mov
lret
or
xchg
mov
add
mov
mov
jmp
mov
adc
xor
lret
cli
push
jge
jb
pusha
push
stc
mov
cli
fdivrs
lahf
mov
test
mov
sbb
dec
repz
fisubl
insl
add
stos
mov
enter
dec
sub
push
mov
repnz
sub
adc
and
cmp
cmpsb
dec
xlat
aam
cwtl
dec
icebp
and
dec
insl
test
ret
ja
pop
lret
mov
or
cmp
mov
outsl
lcall
sbb
mov
jmp
lahf
imul
enter
fcomps
push
push
std
lret
sub
stc
cld
cmp
xor
nop
xchg
xor
test
jmp
pusha
mov
sar
fistpl
cmpsb
xchg
shrl
ret
outsb
out
push
cmc
mov
sti
imul
pop
sbb
cmp
mov
mov
or
in
out
repz
rcll
inc
fwait
negl
xor
test
sbb
pop
pop
stos
dec
jle
xor
xchg
ret
adc
adc
sub
push
and
sub
add
or
mov
push
ljmp
nop
xchg
mov
adc
fdivl
adc
enter
cmc
mov
ss
xchg
inc
add
mov
jns
lret
cli
xor
jge
inc
loop
lcall
add
cwtl
push
jb
sahf
fbld
popf
sub
popf
sahf
add
fistpll
xor
mov
cmp
adc
mov
inc
rclb
fcom
mov
xchg
sub
sub
push
pop
sub
ret
cmp
sbb
lods
stos
mov
xchg
sbb
ds
cmp
pushf
adc
icebp
jo
push
out
test
dec
inc
and
bound
jecxz
je
xchg
adc
pop
ret
push
inc
sbb
xor
push
pop
xor
stos
adc
fildll
ljmp
mov
add
jae
add
and
mov
in
and
and
add
sbb
lea
xchg
inc
ret
cli
loop
push
insl
insb
xchg
pop
lea
scas
rorb
call
sub
in
sbb
iret
and
lcall
jo
or
mov
inc
adc
fcoml
pop
cmp
inc
les
sub
pop
jne
fldcw
data16
imul
and
pop
dec
and
jbe
fwait
aam
push
sub
mov
push
nop
cmpsl
or
imul
add
out
shl
jno
inc
mov
xor
mov
outsb
add
xor
cmp
or
std
adcb
push
movsl
icebp
ret
fcmove
add
bound
test
hlt
imul
scas
test
push
xchg
mov
out
cld
sbb
xchg
sbbb
nop
xchg
add
in
les
inc
dec
enter
pusha
pushf
push
mov
sub
sbb
mov
repnz
fsubrs
sbb
pop
xlat
cmpsl
lock
roll
jecxz
inc
iret
push
pusha
fisttpl
xor
ret
shll
stc
add
andb
in
stc
hlt
adc
pop
cmp
mov
mov
mov
cs
xchg
outsb
cmp
cmpsb
out
mov
pop
xchg
pop
dec
nop
adc
fstpl
arpl
call
ja
rclb
das
jno
cltd
js
cld
cmp
ds
jl
arpl
jle
in
push
lret
pushf
inc
xor
mov
lock
jb
leave
ret
cmp
and
lds
pop
mov
inc
lcall
sub
sbb
sbb
int
sahf
cmp
xor
adc
and
pushf
shlb
hlt
inc
mov
mov
mov
popf
in
aad
mov
cli
stos
adc
cld
out
popa
decb
pop
jbe
push
or
fdivrs
push
sbb
sti
cltd
mov
lods
aaa
aad
mov
cli
inc
enter
push
mov
lds
repz
sub
fisubs
fs
jne
in
lods
loop
dec
in
stc
in
lods
nop
xor
xchg
and
mov
mov
sub
inc
mov
sbb
cmc
mov
pop
and
mov
add
cmp
movsl
int
mov
in
fcoms
es
xchg
mov
pop
ss
out
xor
mov
aad
mov
iret
sub
mov
and
sti
xchg
dec
push
mov
pop
pop
ret
cmp
cli
mov
data16
imul
insb
imul
lods
es
fsts
test
mov
mov
cs
call
rcrl
loopne,pt
add
cmc
mov
ds
imul
xchg
repnz
test
mov
xchg
sub
push
xor
out
dec
sbb
cmp
xchg
gs
test
pop
sub
icebp
fwait
jl
xor
sbb
dec
push
add
jne
add
adc
xchg
cmp
inc
jns
adc
adc
int3
hlt
mov
or
mulps
pop
arpl
jp
rcrl
hlt
mov
xchg
das
sbb
jns
sbb
adc
pushf
cltd
cltd
xchg
add
inc
lods
addb
fnstcw
mov
and
jbe
adcl
mov
mov
dec
sti
sub
in
mov
dec
inc
lsl
scas
aaa
push
push
insb
jp
mov
add
or
push
pop
ja
jne
jle
loope
addr16
dec
push
adc
stos
pop
and
mov
pop
add
or
and
fwait
js
ds
or
or
fildl
mov
scas
adc
hlt
mov
jnp
inc
xor
cmpsb
popa
andb
imul
js
push
mov
fbld
mov
lahf
jno
sti
ficompl
fdivrl
jns
rol
xchg
gs
test
pcmpeqw
pop
xor
repz
inc
xchg
sbb
std
cmp
into
mov
push
xlat
sbb
nop
fldcw
mov
sbb
mov
xor
adc
or
movsl
dec
lret
cmp
aam
aas
filds
scas
push
lds
pop
add
in
jmp
rol
test
mov
shlb
pop
sti
jmp
mov
in
scas
test
ds
xchg
pop
jge
out
cmp
dec
inc
idivl
dec
jo
addb
jbe
mov
mov
lods
xchg
pop
jp
movsl
dec
jp
test
fmuls
xchg
enter
and
int
shrl
pop
or
data16
mov
sub
jo
push
push
lret
lods
mov
or
scas
mov
cmp
or
fistpll
mull
insb
sbb
pop
or
and
jg
mov
push
jl
imul
dec
je
sub
mov
fisttpl
leave
xor
outsb
cltd
inc
xchg
stos
mov
mov
mov
hlt
mov
sbb
sbb
fdivrl
or
pop
pop
test
cltd
movsb
ljmp
inc
rorl
sbb
aam
pushw
add
xchg
pusha
add
cmp
imul
fs
stos
sbb
dec
clc
push
jnp
and
pusha
inc
daa
jbe
das
mov
pop
movsl
inc
imul
mov
jno
inc
mov
mov
adc
in
daa
sbb
jge
aad
fdivl
and
std
mov
sub
lods
fisttps
xchg
xor
dec
jge
jno
imul
std
jo
xchg
idivb
mov
sub
and
or
pushf
sti
sbbl
mov
mov
std
stos
adc
dec
push
pop
xor
adcl
and
jl
mov
movsl
ficoml
enter
cmp
mov
jno
loope
mov
je
std
mov
cmp
inc
pop
mov
push
cs
sub
sub
mov
mov
adc
imul
call
mov
scas
pop
pusha
lret
mov
repnz
mov
cmp
sub
fs
cmp
pop
in
jg
repnz
jb
push
and
sarl
inc
ljmp
mov
adc
sub
arpl
lahf
cmp
sbb
or
inc
stos
lods
pop
jl
sbb
sub
out
call
icebp
pop
fs
adc
iret
popa
push
movsl
or
sbb
mov
dec
sub
dec
or
out
sub
xchg
data16
adc
push
incl
mov
leave
dec
sbb
add
loope
js
or
shlb
sbb
aam
xor
mov
dec
imulb
gs
mov
popa
enter
fwait
andb
outsl
inc
fs
mov
inc
mov
test
mov
stos
xchg
mov
out
push
or
cmp
ds
std
lret
and
jo
mov
rcrl
clc
mov
xlat
sub
push
lods
movsw
in
and
jne
jge
xor
outsb
cmp
in
imul
add
sbb
dec
mov
mov
mov
sbb
iret
pop
fs
add
repnz
dec
inc
sub
pushf
jo
popf
adc
and
add
xchg
xchg
sub
push
ja
out
lods
sbb
int3
sbb
dec
fisttps
lds
dec
cmpb
cmp
mov
icebp
pop
push
or
inc
in
aas
sub
shr
leave
fwait
xor
loope
pop
ds
or
push
shll
jbe
inc
xchg
mov
stc
sub
push
int
dec
mov
mov
out
lret
push
mov
xchg
jle
sub
push
jp
fs
push
jb
mov
push
outsl
inc
xor
xchg
adc
imul
out
ret
pop
ffree
pop
adc
cli
scas
out
loopne
dec
loopne
fs
xchg
lods
les
xor
sti
xchg
fidivl
cltd
pop
imul
jbe
out
popa
or
in
jo
in
cmp
outsl
jne
sbb
inc
insl
imull
repnz
out
out
inc
out
sub
testl
cli
lds
sub
clc
sbb
pop
jmp
lock
stos
cmp
push
add
enter
pusha
cmp
cmpsb
pusha
mov
mov
hlt
pop
mov
es
out
out
scas
push
stos
inc
mov
xor
xor
lds
or
fadds
movsb
and
pop
push
shl
fisubrs
pop
xor
fcoml
add
sbb
push
imul
std
inc
xor
jmp
lahf
or
push
sub
and
mov
fwait
repz
out
loop
or
mov
sub
aad
ss
arpl
cmp
mov
cmpsb
in
int
cmp
cmp
ja
jb
cmp
add
fidivs
xor
cmpsl
jne
push
es
inc
and
jb
mov
mov
inc
inc
stos
rolb
lods
les
and
sti
adc
mov
dec
adc
cli
out
movsl
pop
mov
stos
xchg
int3
mov
shrb
mov
dec
push
shll
adc
jle
pop
loop
sarl
test
push
stos
mov
jge
mov
std
sahf
or
inc
movsb
push
xchg
ror
sbb
mov
xchg
sbb
lret
or
fisttpl
jl
fidivrs
or
mov
mov
mov
sbb
jmp
xchg
sub
jne
cwtl
decl
lfs
mov
repnz
push
rolb
and
js
cmpsl
jne
in
and
dec
jmp
xchg
or
bound
lret
dec
leave
ret
mov
notb
mov
aam
inc
push
adc
jbe
hlt
mov
inc
add
out
and
mov
pop
or
setb
ret
jne
xor
shrl
dec
mov
jle
sub
pop
loop
bnd
cmp
mov
mov
popa
pop
clc
and
adc
jle
mov
loop
xchg
gs
fwait
lods
dec
faddp
mov
insl
push
dec
enter
das
cs
jle
xchg
xchg
rcrb
fimuls
addb
and
popa
gs
add
fnstenv
mov
icebp
pop
cmp
sub
ficompl
daa
jb
iret
pop
loopne
push
mov
int
sbbl
mov
cld
push
scas
pop
dec
xor
popf
out
xchg
inc
inc
dec
iret
mov
enter
dec
arpl
mov
add
insl
popa
sub
mov
mov
dec
testb
mov
mov
shr
mov
call
sub
pushf
pop
movsl
sbb
xor
add
pop
ret
lods
es
daa
int
mov
xlat
and
mov
sub
push
inc
je
inc
adc
push
xchg
sahf
pop
mov
push
dec
movsb
and
jmp
fs
or
add
loop
cs
cmp
pop
xchg
pop
cmp
lcall
inc
dec
sti
mov
xor
jmp
popl
test
push
pushf
ja
mov
aas
aad
or
dec
jmp
inc
jmp
dec
iret
iret
or
or
cmp
lcall
jns
mov
sahf
inc
sbb
stc
aas
pop
xchg
loope
xor
pop
mov
ja
out
pusha
sub
pop
sbb
xor
pop
gs
lods
mov
test
aam
and
push
dec
push
push
jo
or
push
test
xor
inc
push
cltd
or
call
cmc
scas
add
in
jb
mov
call
cmp
ja
pop
aam
cmp
jb
enter
push
popf
mov
mov
and
and
mov
sbb
out
nop
inc
daa
pop
jno
mov
inc
imul
jp
mov
ljmp
mov
inc
sbb
ret
movb
cmp
jbe
mov
jbe
test
test
imul
clc
adcb
dec
mov
scas
addl
jnp
lret
sub
sub
aaa
push
mov
mov
sbb
adc
mov
xchg
sub
add
in
sbb
pop
lcall
xchg
mov
push
mov
jg
jmp
xchg
mov
ret
in
aam
int
xchg
dec
iret
icebp
int
mov
mov
add
mov
in
mov
imul
stos
mov
nop
es
xor
aad
out
pop
push
dec
out
out
inc
ja
or
ret
jnp
test
mov
cmpb
adc
sub
fnstsw
mov
fisttps
out
push
jno
cmp
push
int
mov
aad
aad
cmpsl
leave
jae
and
hlt
adc
daa
fs
mov
lea
inc
hlt
test
insl
sub
ret
jns
xchg
mov
rorb
mov
mov
adc
in
cli
mov
xchg
bound
jnp
dec
push
xchg
movsb
xor
stos
shrl
mov
dec
scas
xlat
scas
or
xchg
and
xchg
test
lahf
mov
push
hlt
dec
jecxz
stos
popa
cmpl
aam
in
mov
jl
xchg
sbb
cmp
mov
add
out
xchg
popf
enter
test
sahf
dec
sub
and
int
cmc
mov
jns
test
xchg
jg
jg
cmpsl
sub
dec
mov
stos
push
insl
mov
mov
loop
push
push
dec
and
push
popa
push
into
lods
adc
sbb
dec
pop
pop
or
adc
sub
rcl
push
lock
popf
cwtl
cli
pop
and
push
mov
adc
cmpsb
and
sbb
ja
out
mov
push
dec
sbb
pop
xchg
or
dec
mov
bnd
dec
lret
pop
dec
call
sub
aaa
push
push
lret
fucomi
lea
inc
cmp
outsl
pop
add
or
or
add
int3
inc
call
scas
pop
or
testb
push
js
int
call
rorb
das
js
adc
adc
dec
out
cmpsb
mov
enter
push
daa
sahf
push
push
pop
out
mov
xchg
dec
icebp
cmp
stc
cmp
daa
push
lock
outsb
aam
cmp
inc
jle
jl
ret
mov
pop
int
push
mov
mov
mov
popa
and
or
sar
sbb
add
mov
icebp
sti
jno
outsb
imul
jns
jl
jne
test
lahf
add
rcll
xchg
lea
fisttps
lcall
push
aaa
adc
mov
test
dec
arpl
lea
leave
inc
loop
push
mov
fistl
xor
sbb
push
add
dec
subb
inc
pop
lods
or
xchg
cmp
inc
cmpsb
adc
in
fbld
adc
xor
mov
pop
xchg
jo
addr16
push
arpl
mov
pushf
pop
mov
jge
std
jp
aas
add
push
jno
divl
sbb
stos
int
out
push
insl
inc
pusha
loope
fld
dec
jno
clc
stc
cmp
into
jecxz
inc
test
jb
cmp
jnp
pushf
daa
aad
dec
mov
int3
scas
icebp
aaa
xchg
push
addr16
scas
jne
fcompl
mov
out
inc
test
jecxz
push
ror
fcoml
ja
ret
js
push
or
stc
inc
fadds
pop
fs
adc
cli
outsb
jo
or
push
neg
stos
sbb
in
enter
jl
add
xor
dec
jmp
movsl
dec
fsubrl
js
sbb
dec
add
push
jg
mov
jb
jbe
aaa
out
in
pop
hlt
nop
clc
pop
clc
call
icebp
lret
push
fstps
arpl
aam
pop
cld
and
push
insb
test
movsl
cmc
jns
cs
mov
cs
lcall
xor
jnp
mov
gs
and
or
cmp
inc
cmp
cmp
pop
pop
mov
jp
mov
ret
push
add
repz
pushl
cs
pop
rcl
add
mov
leave
lret
xor
jne
mov
test
imul
mov
popa
sbb
sub
repnz
dec
in
rcll
sub
dec
out
stos
and
xchg
and
hlt
rcll
ret
imul
sbbb
mov
pop
ret
fiaddl
jl
subb
fwait
mov
hlt
add
pop
es
scas
sbb
insb
mov
icebp
push
out
sbbl
lahf
mov
mov
cmpsb
mov
pop
pop
and
ds
xchg
add
sbb
inc
cld
add
xor
and
xor
pop
lret
in
mov
loope
out
stos
aad
dec
pop
ret
mov
clc
mov
pop
fiadds
and
cmp
xlat
push
fdivrl
pop
ds
icebp
bound
les
mov
les
mov
arpl
jg
iret
ja
bound
push
test
lcall
in
loopne
movq
testb
xor
outsb
imull
cmp
dec
jl
fcomp
shl
imul
xlat
ljmp
mov
jno
sub
add
stc
fisttpll
test
add
dec
mov
gs
inc
fnstsw
sub
cmp
inc
mov
cmp
dec
mov
in
and
mov
bound
fdivs
aam
and
movsb
int
fs
data16
and
pop
push
push
xchg
adc
mov
call
dec
cmp
jg
push
xchg
xlat
sub
aaa
out
sti
call
repnz
fcom
cli
push
mov
adc
mov
hlt
pop
push
mov
das
rclb
test
lret
movsb
aam
pop
sbb
imul
aad
stos
and
lahf
xlat
ljmp
sbbl
sarl
out
push
xor
std
cld
dec
push
dec
cwtl
in
test
mov
iret
mov
dec
inc
sub
jnp
gs
outsb
movsb
cmpsl
shll
mov
add
jae
fdivs
pop
add
rcl
in
jle
pushf
and
sub
into
sti
mov
adc
es
jae
arpl
mov
add
addr16
push
sub
sub
dec
scas
ret
mov
mov
jo
cmpsb
rolb
pop
ss
lds
push
test
xchg
ds
inc
aad
clc
sti
int
mov
mov
push
push
xlat
inc
push
sbb
cmc
outsb
pop
mov
sub
xchg
movsl
stc
dec
mov
in
pcmpeqb
sbb
push
fwait
jns
cwtl
pop
leave
mov
std
cmp
add
loopne
divl
xchg
test
jmp
call
or
pop
mov
sub
jp
in
lret
clc
push
fidivl
enter
out
ret
divl
loop
scas
jmp
mull
sub
repz
hlt
adc
cmpsb
cltd
jmp
fiaddl
lcall
cltd
jno
pop
xlat
in
xorb
jae
xor
orl
dec
and
pop
repz
pop
adc
jmp
inc
push
lods
xor
push
jmp
mov
xchg
or
adc
pop
pusha
inc
push
popa
flds
scas
jnp
loopne
push
and
push
in
ljmp
pop
ljmp
xchg
xchg
outsl
push
arpl
mov
andl
and
inc
icebp
dec
lock
sbb
stos
mov
out
aas
cmpsl
mov
inc
aad
js,pt
loope
test
shlb
ss
out
pop
std
lcall
out
and
add
or
in
jns
mov
jmp
mov
jnp
cmp
jge
orb
inc
xchg
jo
inc
int3
jo
stos
ljmp
push
mov
mov
repz
fisttpll
mov
fidivrl
fs
inc
or
int
stos
jle
cli
in
xor
or
loopne
inc
push
adc
mov
out
test
xor
imul
out
jno
or
int
push
popf
loop
push
shrb
mov
cmp
loopne
mov
mov
mov
lcall
scas
ret
push
sarl
sbb
jmp
mov
sbb
sbbb
mov
pop
or
push
mov
js
aam
lcall
stos
hlt
outsb
jnp
cmp
in
loopne
push
lcall
idivl
jg
cmp
xchg
push
xchg
ret
les
test
add
lcall
sbb
mov
mov
dec
hlt
es
jge
fs
add
repz
fidivs
out
stos
ja
adc
test
sti
add
mov
and
test
fwait
sbb
test
inc
nop
dec
or
mov
loope
mov
cld
push
mov
rcrb
pop
mov
xor
pop
and
dec
repz
ljmp
pop
jno
sub
movsl
andl
jne
jns
add
adc
add
xor
sub
movsb
daa
lods
jecxz
notb
and
pusha
xor
and
es
xchg
mov
popl
leave
xchg
xchg
test
push
lods
lds
hlt
mov
mov
jnp
ret
xchg
pop
push
add
adc
test
loope
push
inc
inc
mov
mov
cmpb
mov
adc
add
jg
arpl
pop
cmp
test
out
jno
arpl
lds
lcall
push
mov
sbb
loope
lret
mov
cmpsl
push
mov
mov
dec
xor
inc
rcrb
sub
mov
div
fdivl
inc
fbld
inc
enter
hlt
test
aam
dec
subl
adc
je
ret
mov
and
je
mov
push
int3
test
icebp
inc
inc
les
daa
into
push
dec
icebp
ret
push
or
adc
push
xor
mov
or
dec
stos
dec
ds
jno
jns
fldt
imul
lods
xor
lgs
cmpsb
setns
adc
adc
push
xchg
pop
imul
sbb
enter
jns
cmovl
xchg
jecxz
push
and
jnp
push
pop
scas
sahf
mov
hlt
mov
test
dec
inc
aam
stos
rol
inc
cmc
mov
mov
test
jg
repz
popf
and
mov
fs
lods
lcall
sub
jbe
sarl
jo
xor
mov
enter
out
xor
push
pusha
leave
push
inc
xorb
xchg
sub
adc
addb
lret
mov
cmpsl
lods
jo
adc
aas
lcall
fistl
mov
jns
fstpt
mov
or
sub
in
cmp
sbb
adc
fdivs
rcl
mov
add
and
stc
or
and
mov
cmp
adc
sub
shr
sbb
scas
lcall
adc
cmp
mov
rclb
mov
mov
outsl
std
sub
addb
cli
mov
sub
test
lcall
dec
dec
arpl
sbb
mov
mov
sbb
mov
mov
mov
add
and
add
scas
pop
mov
sbb
scas
xor
jl
fbstp
push
pop
and
add
icebp
pop
sbb
push
adc
rcl
pop
arpl
popa
cmc
jp
push
aam
xchg
pop
sub
adc
popa
dec
fisubs
jbe
lods
pop
inc
ja
fcomps
sahf
lock
mov
leave
lock
iret
in
test
ljmp
subb
in
inc
out
mov
gs
or
sarl
mov
or
out
xor
mov
inc
dec
xchg
in
add
addl
aas
pop
adc
mov
icebp
mov
lds
inc
inc
cmp
sahf
pop
and
adc
and
mov
popa
out
mov
sti
stc
lret
movsb
mov
repnz
dec
adc
xchg
pop
jmp
pop
lds
xor
xchg
xchg
inc
idivl
and
int3
enterw
inc
pop
inc
and
mov
loopne
pop
iret
push
adc
icebp
stos
ljmp
sub
in
fpatan
push
sbb
mov
shl
scas
sahf
pop
pop
popa
pop
xor
jnp
dec
sarl
xchg
or
fwait
lods
push
pop
mov
inc
jno
dec
popf
inc
lahf
and
jnp
negl
mov
push
push
ror
lods
cmpsl
das
call
out
in
jecxz
xor
lods
and
sub
insb
mov
mov
imul
jecxz
orl
push
das
mov
xor
dec
push
shrl
imul
mov
push
xchg
and
scas
xor
shlb
mov
loope
lods
jecxz
popa
rorl
stc
das
adc
inc
orb
pop
add
in
add
shl
mov
subb
pop
xchg
mov
fmul
mov
push
mov
jno
pop
out
mov
pop
pop
mov
negb
orb
push
movsb
mov
sub
mov
sub
dec
fnstenv
xlat
dec
adc
outsl
inc
lret
and
xlat
or
mov
xchg
sbb
mov
cmpsl
bound
and
dec
test
mov
xchg
lea
out
insl
aaa
push
into
mov
mov
int
cmp
imul
cmp
adc
dec
or
and
imul
arpl
mov
fwait
push
stos
push
mov
gs
add
lcall
test
jle
inc
cmp
jp
sbb
mov
scas
jl
sub
sti
adc
mov
cmp
jp
cmp
call
jge,pt
mov
test
mov
sbb
cli
rcrl
inc
cmp
push
test
addr16
jl
xorl
jl
lock
jmp
push
or
adc
rcrl
stos
fcoml
mov
cmpsl
xor
outsb
aas
mov
push
popa
test
lock
jle
mov
aas
add
popf
or
pop
mov
ljmp
inc
push
cli
mov
jno
rcr
and
jno
sub
jne
cmp
mov
mov
mov
push
movsl
xor
or
or
xor
cld
mov
adc
out
push
add
jns
fcoml
inc
push
ret
sbbl
stc
jge
dec
int3
aas
mov
jb
test
mov
sub
mov
das
int3
jo
es
mov
xchg
mov
outsl
loopne
push
test
bound
mov
call
int3
pop
mov
mov
xchg
shl
push
scas
lret
push
mov
xor
adc
and
xchg
rcr
xor
pop
xchg
mov
inc
popf
push
cmp
cwtl
mov
out
pop
nop
push
push
rcrl
outsl
sub
push
mov
cmp
mov
les
in
mov
mov
jns
aam
sub
xchg
or
mov
iret
xchg
xor
push
pop
push
mov
mov
decl
mov
or
sub
pop
xchg
pushf
fldt
jbe
out
shl
push
aaa
fstps
arpl
dec
insl
lahf
inc
jmp
fsubr
dec
push
out
call
popl
aaa
add
push
push
shrl
pop
stos
or
cmpsb
sbb
je
jl
push
mov
xchg
call
cmp
sub
or
scas
push
adc
jp
jecxz
enter
xchg
xor
mov
pop
lock
loopne
xchg
push
addl
cltd
inc
push
push
ds
ret
fmulp
in
test
mov
cmp
aas
jnp
icebp
int
dec
ret
in
movsl
or
mov
dec
jp
inc
push
daa
repz
mov
inc
sub
pop
repnz
pop
insb
pusha
out
and
cmp
xlat
flds
and
aam
jb
inc
cmp
pop
push
cmp
movsb
xchg
out
adc
or
mov
rclb
pop
ss
sub
mov
cmpsl
cvtpi2ps
jne
lock
sbb
mov
xor
shll
xor
mov
bound
pop
sub
mov
stc
addr16
dec
cmp
xchg
or
cmc
push
pusha
sub
sub
cmp
inc
sbb
fs
andl
in
and
icebp
dec
or
push
cmpsb
repnz
and
jl
fiadds
dec
loope
xchg
les
repz
addr16
dec
insl
sub
call
xchg
cltd
jne
pop
jb
push
icebp
xchg
xchg
push
into
sub
loope
bsr
xlat
out
adc
xchg
pop
jno
jl
push
xchg
sub
lock
pop
jle
orb
cmp
mov
arpl
and
enter
aas
pusha
ja
xchg
jbe
push
xor
cmp
push
test
cmp
test
mov
std
decl
jmp
mov
or
in
sti
mov
cmpsb
cmpsl
fsubrp
add
inc
sbb
popa
cmpsl
lret
or
fistpl
xor
ja
icebp
or
sbb
mov
inc
xchg
mov
push
int3
inc
mov
flds
cmpsl
and
int3
adc
dec
and
xor
out
fsincos
dec
pusha
jns
pop
adcb
aas
je
mov
jge
rep
nop
lock
adc
or
jae
jmp
inc
in
push
orl
fimuls
lods
mov
mov
sbb
mov
js
lods
je
scas
xchg
andb
xor
adc
push
cmp
outsl
pop
test
push
mov
and
mov
movsb
out
mov
frstor
pop
inc
pop
cmp
adc
std
fidivs
out
push
inc
push
mov
mov
leave
shrl
xor
pop
and
cs
lretw
dec
rolb
fsub
ds
sbb
jnp
pushl
mov
xor
inc
xchg
pop
or
add
cmpsl
and
xor
movsb
int
gs
push
jnp
shll
mov
xor
adc
ds
mov
xor
cmp
mov
es
leave
push
arpl
mov
call
cmc
sbb
cmp
mov
xchg
mov
test
loopne
jae
out
pop
in
mov
sub
mov
and
push
out
je
insl
xchg
mov
outsb
mov
inc
adc
mov
gs
or
push
ja
ret
std
and
push
fmull
mov
inc
clc
loop
pop
xor
das
xlat
fwait
or
pop
mov
mov
dec
and
imul
lea
push
ficoml
mov
mov
mov
pusha
pop
cwtl
and
jne
das
xor
aam
jb
js
mov
arpl
pop
xor
scas
xor
inc
adc
subb
sarb
xor
or
insl
lds
getsec
es
pop
clc
or
jmp
jns
mov
mov
lea
insb
sbb
xchg
xchg
loopne
in
ds
sub
out
dec
mov
push
mov
icebp
sarb
mov
cmp
sub
pop
loope
mov
pop
push
jo
adcb
xorl
mov
loopne
mov
inc
jg
cmpsl
xlat
dec
xchg
dec
sbbl
inc
lret
nop
cli
stos
les
sbb
adc
or
sbb
decb
and
cmp
repnz
in
pop
fs
cmpsl
lods
popa
hlt
xlat
jns
jmp
pop
stos
sbb
lods
ret
xor
sbb
inc
mov
pop
fisttpl
into
cmp
jp
out
cmp
imul
inc
jno
add
add
flds
filds
xchg
jecxz
imul
pop
inc
sub
mov
dec
aas
inc
jno
adc
push
cltd
rolb
into
in
test
push
setbe
xchg
and
je
cmp
icebp
lahf
push
mov
lahf
nop
ja
cmpsl
pop
jbe
pushf
xchg
clc
lret
jbe
test
call
add
add
inc
jnp
or
aam
mov
push
jno
lahf
clc
inc
sbb
mov
push
insl
mov
aas
jnp
je
adc
scas
sahf
enter
aam
mov
mov
dec
pop
leave
add
lods
imul
stos
push
lcall
cld
add
push
or
cltd
dec
mov
nop
pop
mov
mov
xor
sub
xchg
pusha
repnz
lea
lods
lods
fdivl
xchg
jae
in
gs
pop
add
je
ret
xchg
ss
and
hlt
inc
bound
imul
xor
jecxz
sbb
xchg
dec
pop
pop
add
inc
ljmp
movb
das
lock
cli
pop
adc
add
sbbb
imul
jne
sbb
sti
add
mov
cmp
fwait
shl
or
mov
jne
js
fiadds
mov
out
add
lret
cs
pop
outsb
jg
mov
icebp
inc
int
popf
add
pop
add
test
or
dec
test
jp
mov
dec
pshufw
std
cmp
or
scas
mov
mov
cmp
mov
lret
push
inc
divl
mov
je
add
nop
gs
jp
leave
dec
mov
add
mov
rclb
and
pop
cltd
test
mov
inc
mov
or
cld
bound
pop
jmp
dec
mov
iret
mov
repnz
orl
iret
jg
cwtl
lret
cs
push
dec
or
pop
mov
pop
imul
hlt
test
jne
mov
pop
mov
repnz
stos
jp
mov
mov
xorl
cmp
cwtl
dec
es
fmul
jne
lods
loop
jno
data16
adc
push
xor
push
add
xlat
jb
cmpsl
mov
jp
cmp
rorl
popa
cmp
xor
add
loop
xorl
mov
test
cmp
inc
jnp
mov
and
in
mov
bound
aas
out
fs
pop
fistps
mov
dec
aas
pop
hlt
cmp
or
and
jnp
xor
pop
ja
jl
pop
inc
ret
xor
cld
mov
scas
mul
pop
pop
ret
add
out
or
fbstp
inc
mov
jnp
nop
jb
jnp
les
push
fidivrl
mov
add
pop
aaa
notl
xor
lret
mov
mov
out
fsts
mov
ds
sub
fsubs
or
pop
inc
sbb
mov
add
mov
xor
loop
mov
sbb
xchg
push
out
xchg
stc
je
cmp
push
push
sbb
push
mov
mov
loope
dec
push
addr16
sahf
in
push
jp
xor
push
cmp
addr16
dec
data16
pop
xor
lahf
pop
test
sub
test
xchg
je
mov
push
push
xor
mov
add
gs
mov
and
test
cld
or
add
cwtl
rcrb
movsl
push
sbb
jg
movsl
pop
or
xchg
and
in
dec
mov
mov
mov
jge
add
mov
aaa
mov
and
adc
lds
rcrl
sbb
cmp
shll
lds
mov
pop
dec
add
pop
in
mov
dec
loopne
and
jecxz
sub
jp
fistl
std
push
addb
les
cmc
jp
fsub
and
push
ret
add
push
mov
mov
cmp
pop
jno
ret
sbb
dec
jns
addl
mov
pop
push
adc
movsl
dec
sub
inc
dec
adc
js
sahf
push
inc
sti
xor
sbb
jno
pop
jge
roll
dec
xor
push
mov
dec
mov
mov
test
mov
out
push
and
jge
lcall
pop
gs
mov
adc
bound
mov
lods
test
subb
daa
sbb
cmpsl
xchg
ljmp
imul
pop
cmpsl
mov
xchg
shl
fs
sbb
sbb
jb
aaa
rcll
fwait
mov
inc
movsb
rcr
or
sub
add
jge
xor
cld
and
or
adc
mov
and
dec
js
mov
popf
xor
add
push
add
sbb
dec
lods
mov
scas
pop
in
push
cmc
stc
jmp
mov
pushf
das
push
inc
mov
or
test
dec
lcall
ret
mov
push
ret
dec
fisttps
xchg
cmpsb
mov
sbb
je
rorl
mov
std
mov
dec
mov
sub
in
xchg
clc
stos
mov
fsts
or
inc
out
rorl
sbb
xchg
enter
pop
rorb
push
push
mov
sahf
mov
sbb
je
mov
notb
insl
and
pushf
push
mov
stos
push
jmp
ja
adc
push
or
loop
repnz
mov
jp
mov
jnp
dec
subb
sti
es
push
dec
divb
jle
inc
mov
adc
jb
loop
mov
xchg
mov
inc
outsb
add
test
sub
cmc
push
shll
sub
cmpsb
xchg
inc
outsl
repz
lret
nop
rcrl
xchg
jge
or
xlat
cmp
mov
scas
pop
sbb
and
jmp
dec
sbb
mov
rcrb
xlat
jle
mov
push
pusha
orl
loope
lcall
mov
xchg
cs
dec
or
jp
bound
and
cmpsb
jp
es
push
add
xchg
mov
nop
into
andb
jo
rcrb
lods
xchg
and
push
sti
icebp
in
pop
add
mov
dec
xchg
jge
outsl
call
outsl
icebp
cmp
or
adc
cmp
xlat
sbb
cld
fstl
loopne
mov
mov
popf
and
rcrb
mov
mov
xchg
fisttps
push
fcmovnb
xor
jno
or
jmp
dec
fisubrl
dec
mov
xorb
jo
fs
pop
out
add
jmp
pop
lcall
and
jo
inc
dec
int
outsl
pop
xlat
mov
push
mov
xchg
add
mov
jae
les
push
push
ja
xorl
sbb
adc
lea
lods
xchg
sbb
adc
int
incb
stos
sbb
int3
stos
mov
sbb
cmp
packsswb
repnz
add
inc
enter
xorl
push
and
push
pop
sbb
sub
cltd
lcall
jecxz
inc
fsubrl
lods
or
dec
das
or
icebp
xor
jnp
ss
jb
jmp
adc
dec
ljmp
mov
mov
inc
shrl
int
test
mov
xchg
test
shlb
add
iret
cli
push
jbe
cltd
xorl
jb
popf
push
pop
pop
add
rorl
cltd
loope
je
mov
push
sbb
in
adc
fldenv
add
dec
stc
cltd
shrb
in
push
repz
xchg
xchg
rclb
fucomip
scas
pop
icebp
imul
out
sbb
fnstcw
loope
push
stos
xor
pop
mov
cmpsl
adc
out
dec
jg
sub
mov
pop
pop
adc
data16
inc
cld
out
sub
and
cltd
call
cli
xchg
lret
test
inc
mov
js
ds
dec
dec
push
add
jno
push
pop
dec
fisubl
jmp
jmp
or
imul
cli
or
rcrl
adc
lods
mov
ja
push
mov
xchg
xor
mov
push
pop
inc
sbb
sub
inc
pop
pop
pop
and
jb
clc
ds
and
repnz
mov
add
syscall
stos
pop
dec
imull
xchg
cmpl
or
pop
hlt
mov
loop
fwait
clc
xor
inc
add
das
cmp
xor
ret
xlat
xchg
push
outsl
xor
lahf
sbb
fsubl
mov
cltd
sub
pop
sub
add
subps
mov
sahf
mov
rcr
gs
push
or
sbb
mov
sub
xor
loopne
add
stos
pop
xchg
adc
xchg
mov
dec
xchg
lret
or
xchg
in
jecxz
fimuls
add
shll
orl
sbb
test
insl
popl
jl
imul
and
inc
loop
mov
push
pop
pusha
push
dec
xchg
ret
jb
adc
pop
sahf
adc
in
xchg
shlb
out
mov
push
insb
lock
outsb
pop
test
scas
push
scas
popa
dec
jp
cmp
lods
pop
jp
xchg
popa
shll
test
ret
add
jb
nop
rol
adc
push
xor
flds
fcoml
push
or
das
popf
in
inc
aaa
out
push
and
dec
int
or
mov
sti
adc
xchg
jnp
stos
cmpsb
push
pop
shlb
xchg
test
pop
jge
cmp
dec
std
ss
pop
call
jo
and
scas
sbb
inc
cmp
daa
adc
mov
jmp
mov
lods
xor
ror
and
dec
je
jle
mov
sbb
sbb
lret
ffree
out
or
fidivrs
xor
in
push
fsubs
shlb
or
clc
mov
test
xlat
jle
sbb
sahf
ficoms
adc
or
push
cmpsl
sahf
ljmp
push
sbb
mov
clc
popf
fcoms
cmp
pop
jg
push
ffree
aam
xlat
or
dec
sbb
cmp
cltd
jnp
mov
add
mov
in
xor
inc
mov
xor
stos
adc
in
data16
into
xlat
outsb
push
loope
cs
jne
fcomip
inc
xchg
jo
rorl
pop
jns
fdivrl
fmuls
aaa
pop
addb
sar
add
mov
icebp
popa
loopne
and
outsl
sub
pop
mov
test
fisttpll
movsb
or
jl
xchg
test
push
mov
mov
popf
dec
sub
dec
adc
add
mov
insb
sarb
xor
enter
mov
xchg
out
pop
scas
push
bound
sbb
push
dec
add
jecxz
mov
and
stos
or
pushf
mov
mov
sti
aam
and
jge
sub
dec
out
add
enter
adc
lds
imul
icebp
mov
jecxz
sbb
add
mov
add
push
jnp
xchg
pop
sub
xchg
dec
addr16
rolb
push
insl
mov
cmpsl
pop
test
in
dec
sahf
andl
mov
lahf
cmp
fwait
mov
in
sub
push
stos
rolb
mov
jmp
add
xchg
insl
xchg
ljmp
add
pop
das
aad
sub
nop
push
pop
mov
cmpsb
fsubrs
xor
xor
cmp
mov
sub
mov
mull
cmpsb
sti
mov
xchg
aas
mov
push
setg
mov
mov
cltd
mov
rcrb
lret
jbe
lcall
jb
pop
in
mov
xor
cmp
aad
addr16
icebp
sahf
mov
mov
inc
cmc
jo
add
cmp
dec
inc
repnz
std
xchg
jmp
enter
add
add
les
push
jnp
testl
movsl
ljmp
mov
repnz
pop
std
in
sbb
xor
adc
inc
and
sbb
movsb
dec
or
xchg
push
cmpsb
hlt
cmp
dec
in
adc
xor
and
aad
cmpsb
pop
or
mov
inc
negb
int3
sub
mov
rcll
out
add
call
gs
jp
inc
xchg
ds
jo
push
iret
lea
sub
int
jp
push
mov
push
adc
xchg
adc
sub
dec
adc
or
gs
push
xchg
adc
mov
in
jl
sub
mov
cmp
outsl
incb
wrmsr
cmp
sbb
and
outsl
mov
jne
add
iret
shll
sbb
lret
enter
sub
sbb
sub
int3
and
add
jmp
daa
dec
lret
dec
ds
pop
sti
dec
adc
hlt
adc
and
xchg
outsb
cmp
xchg
repnz
push
adc
icebp
icebp
cmp
inc
aaa
movsl
std
adc
sub
sarl
add
and
xchg
xchg
sub
sbb
int
pop
lods
mov
mov
mov
mov
rolb
jnp
inc
adc
outsb
adc
mov
jle
pop
xor
test
fwait
dec
aad
add
dec
das
inc
mov
cli
mov
and
push
in
scas
enter
repnz
xchg
jno
out
xchg
xchg
mov
add
pusha
adc
xchg
sub
jae
stc
hlt
cmp
in
out
mov
outsb
sbb
fwait
scas
adc
ret
arpl
mov
in
dec
out
arpl
mov
and
inc
sub
in
inc
pushf
dec
or
fidivrl
aas
mov
xchg
mov
mov
sbb
sub
stos
xlat
add
mov
pop
pop
insl
lods
xchg
andl
push
fwait
jbe
insb
ret
addb
push
or
jl
mov
jle
jmp
fnstenv
adc
jne
mov
gs
xor
test
lret
js
imul
and
sbb
mov
mov
adc
sub
mov
fisttpll
divb
add
loopne
popf
cmpsb
xchg
sbb
xlat
pop
fldt
hlt
and
stos
in
sub
negl
dec
xchg
mov
push
xor
sbb
jo
pop
pop
je
sub
add
mov
popf
sbb
mov
roll
dec
sub
andb
stc
out
mov
call
repnz
fs
xor
std
ficoms
jb
and
jg
pop
jp
push
mov
test
sbb
data16
push
cmp
dec
mov
xchg
jp
lret
sahf
pop
aad
adc
loop
mov
test
and
sti
cmpl
popa
mov
push
pop
ljmp
cmp
pop
fsubs
fisttps
loopne
mov
movsl
push
add
add
mov
nop
dec
cld
inc
add
rcrl
mov
addr16
outsl
imul
mov
imul
stos
sub
mov
xchg
cmp
mov
adc
push
mov
dec
cltd
not
jge
inc
jmp
jg
call
test
mov
pusha
cld
jbe
data16
jo
rclb
sti
xchg
lods
pop
cmp
xchg
movsl
inc
pop
outsb
call
jl
and
rolb
cli
rol
ret
sahf
test
xchg
call
mov
scas
push
push
push
push
dec
bound
in
xchg
arpl
into
jmp
in
push
icebp
inc
xchg
int
incl
push
test
nop
pop
test
fldenv
mov
mov
pusha
mov
mov
pusha
fisubrs
inc
jo
xchg
and
rcl
mov
push
inc
fnstenv
popa
xchg
push
and
mov
arpl
sbb
adc
out
xor
pop
cmp
imul
std
aad
sahf
int3
sbb
xchg
adc
add
or
add
xchg
pop
test
cltd
inc
lds
fnstsw
ja
nop
fsubrs
xchg
pop
jp
sbb
push
inc
lahf
movsb
in
mov
xor
or
gs
xlat
xor
stc
mov
add
in
add
pop
psrlq
pop
add
lods
inc
push
jbe
pop
or
aaa
mov
sub
push
in
imul
cmp
jb
loopne
dec
push
mov
and
inc
and
arpl
adc
jecxz
cmp
xor
leave
push
loopne
std
lcall
sub
in
sub
dec
mov
xchg
shll
dec
cmp
jnp
popa
push
mov
sub
mov
or
aam
and
mov
aam
dec
sti
repnz
jb
push
loope
stc
cmp
int
xchg
sub
mov
test
mov
repnz
mov
insw
xchg
or
cld
xor
roll
xor
mov
mov
popa
fs
nop
xor
jbe
rorb
adc
iret
push
xchg
mov
mov
in
lahf
popf
subl
ss
mov
pusha
sbb
cmc
dec
int3
aad
xchg
inc
or
pop
ja
call
rcll
sub
push
jl
fbstp
push
push
bound
pop
adc
repz
out
lret
sub
and
aad
rolb
jg
pop
leave
popf
mov
jbe
orb
fcoml
or
jbe
and
in
push
cld
mov
loop
jns
popa
dec
cmp
sub
adc
cmpb
mov
inc
mov
sub
cli
sti
push
fcoms
ret
in
inc
mov
stos
or
mov
mov
in
lcall
push
movsl
fwait
pop
or
rol
scas
lods
mov
out
aad
push
or
shrl
scas
xor
fbld
mov
mov
movl
inc
dec
stos
mov
rcrl
inc
xor
add
lahf
mov
std
xor
arpl
mov
pop
ds
sti
pop
mov
push
xor
daa
mov
mov
xchg
cmpsb
adc
xchg
aad
or
out
or
fbstp
adc
mov
aaa
xor
mov
mov
ds
mov
lods
enter
sub
fildl
sub
paddusw
and
push
mov
lahf
fstpl
ret
pop
out
test
xor
pop
mov
cmp
test
cmp
rcll
lea
cmpl
negb
out
lret
cmpsb
xchg
ds
pop
prefetch
icebp
std
push
ss
sbb
and
push
aas
mov
in
enter
lahf
js
outsb
mov
stos
jecxz
sbb
lret
jmp
or
fisubrs
cmp
mov
out
jle
adc
add
xor
outsl
and
fists
pop
sbb
xor
int
lcall
adc
xor
cmc
push
std
scas
jl
lcall
je
enter
ja
push
ja
mov
push
ret
data16
int3
cmp
cmp
sub
test
xor
ret
jp
ffreep
jmp
ljmp
test
ss
mov
in
enter
inc
lahf
aas
sbb
adc
call
movsl
ds
movsl
stc
arpl
mov
sbb
or
out
shr
sarl
adc
mov
inc
sti
cmpl
mov
xchg
mov
push
jnp
xchg
pop
ss
shrb
popf
arpl
xlat
daa
sub
xchg
fstp
and
out
mov
mov
push
sub
repnz
pop
lea
mov
cld
shlb
arpl
in
stos
xchg
mov
daa
xchg
pop
cmp
xchg
gs
mov
into
scas
aaa
mov
stos
and
jno
sub
cmpsl
mov
je
jne
xor
adcl
mov
stos
scas
ficoml
lea
and
push
pop
lods
cwtl
sub
jmp
sub
inc
pop
sbb
adc
xor
outsb
or
xor
mov
mov
dec
gs
into
lods
lret
jle
or
call
outsl
pop
shlb
lock
popf
push
lahf
and
out
std
cmp
pop
dec
or
stos
xchg
mov
rol
jge
pop
pop
mov
and
xchg
shlb
and
orl
xorl
lods
sahf
sbb
data16
dec
sarb
stos
arpl
cmp
add
inc
adc
add
stc
ds
daa
xchg
push
jmp
js
mov
ret
push
jns
insl
iret
cld
jg
jo
dec
cmp
insb
nop
pusha
xor
stc
add
test
je
call
loop
cmpsl
xchg
insb
add
enter
cmpsb
lcall
adc
cmp
sbb
cltd
int3
inc
push
mov
mov
ret
push
fbld
push
xchg
lcall
int
pop
sbb
movsl
mov
ljmp
inc
xchg
cmpsl
sub
lods
dec
hlt
pushl
dec
stc
shrl
xchg
lods
daa
pop
pop
cltd
dec
ror
push
jmp
dec
inc
pop
and
jo
pop
mov
movsb
jo
inc
popa
xchg
js
mov
out
sbb
mov
pop
dec
sahf
scas
stc
in
ret
shrb
mov
jb
push
xor
push
shll
out
stc
aam
jbe
test
sub
push
jl
xchg
shlb
xchg
pop
in
cmp
enter
xchg
xchg
lret
jae
cmp
loop
clc
outsl
fistpl
add
pop
test
and
les
into
adc
ds
cmp
mov
sbbb
insb
ss
jmp
mov
nop
adc
insl
out
fwait
out
mov
sub
in
cs
push
scas
xor
sbb
stos
mov
mov
xchg
mov
in
int
pop
push
ret
jg
push
adc
pop
mov
xchg
fnstenv
jmp
cmpsb
addr16
jp
in
fmulp
mov
sbb
lds
and
sbb
sub
lcall
divb
cmp
jno
arpl
jne
ret
xchg
sbb
adc
jae
outsb
dec
jmp
sub
adc
pop
push
ds
pop
popa
ficoml
lds
mov
pusha
rcll
add
push
fistpll
cli
fst
stos
rcrb
fdivs
outsb
mov
faddl
adcb
fcoms
jl
inc
pop
cwtl
shll
mov
mov
dec
enter
daa
stos
jbe
aaa
sub
daa
mov
loopne
addb
int
jge
call
xchg
dec
jecxz
push
mov
fstpl
push
cmp
popf
in
ficomps
arpl
fwait
lea
pusha
dec
das
sbb
cmc
sbb
iret
sbb
std
sarb
xor
test
inc
add
out
inc
pop
push
push
inc
or
jmp
push
adc
pop
jb
xchg
cmp
jecxz
loopne
pop
out
cmp
adc
in
mov
sbb
pop
cmp
shlb
and
add
mov
fdivl
test
mov
test
je
out
xchg
sti
jp
out
xchg
out
cwtl
xor
enter
sbb
cmp
cltd
ret
mov
sbb
mov
and
jp
in
ljmp
inc
adc
dec
js
jecxz
cmp
addl
add
mov
ret
or
js
sti
and
xchg
dec
jecxz
fisttps
loope
mov
repz
outsl
or
mov
push
daa
inc
and
ljmp
imul
mov
push
xor
pop
mov
sbbb
xlat
ljmp
sti
and
mov
inc
xchg
iret
and
fistpl
and
sbb
sbb
repz
shll
pop
mov
sub
add
shlb
notl
xor
xor
shrb
cmc
mov
aam
cld
xchg
adc
sub
cltd
mov
stos
test
jns
jmp
bound
adc
into
imul
xchg
mov
subb
push
cmp
xor
into
insb
fisttpll
or
hlt
add
cmp
add
cmpsb
jge
sub
ret
adc
sub
xor
hlt
xor
jl
mov
mov
xor
popf
jmp
out
ljmp
std
int3
mov
push
fdivrs
pop
push
xchg
loopne
pop
xor
ficoml
cmp
pop
ds
jge,pn
jbe
mov
lret
and
gs
jns
pop
test
jmp
std
popa
pop
and
add
test
cmp
mov
pop
ficompl
aam
dec
xchg
inc
int
enter
mov
lea
inc
mov
imul
cmp
pushf
lea
cmp
cmpsl
iret
sbb
subb
sbb
inc
imul
xchg
xlat
pushf
mov
andl
mov
xchg
mov
cltd
iret
mov
mov
fwait
je
jo
fidivrl
mov
mov
jno
hlt
fldl
xor
popf
aad
addr16
or
test
lret
cmpsl
inc
fdivr
repz
xor
movsb
add
pop
fmuls
pop
loopne
dec
sub
gs
mov
and
fcmovu
shlb
ret
push
lcall
and
or
repz
xchg
mov
jecxz
sbb
imul
or
push
or
or
insb
test
bound
les
push
pop
cmp
mov
js
jl
pop
dec
add
les
std
inc
into
mov
mov
fsts
xchg
test
jl
aas
inc
or
jmp
and
mov
inc
mov
push
or
pushf
push
adc
icebp
sahf
in
pop
ljmp
dec
add
imul
ds
pop
cmp
mov
sbb
mov
mov
push
popf
cmp
pop
ret
lret
pop
or
int
or
mov
leavew
push
aaa
sub
mov
push
scas
mov
xor
sub
psubsw
mov
mov
dec
add
sbbb
es
sub
rorl
jnp
push
and
ror
jno
and
mov
inc
xlat
xchg
pop
arpl
cmp
stos
adc
mov
mov
fmul
lock
cmp
push
lods
cs
stos
jl
dec
inc
push
pushf
mov
sub
and
pushf
add
adc
ljmp
stos
movsl
pop
outsl
jbe
addr16
mov
cmc
mov
cld
outsl
clc
iret
sub
popf
decb
mov
inc
mull
sbb
jmp
push
arpl
das
fptan
cli
aas
ds
mov
push
and
pop
ds
mov
cltd
enter
or
aam
sti
stc
cli
sub
lock
adc
pmulhw
mov
lods
or
jmp
leave
lods
pop
out
in
and
shrb
jbe
popa
insl
dec
movsl
jbe
icebp
aaa
mov
mov
mov
imul
sub
rcr
daa
enter
fdivp
xchg
mov
and
pop
mov
insb
loop
push
faddp
xchg
popl
pop
push
push
and
adc
pop
out
cli
or
cmp
inc
dec
test
mov
jge
push
in
fwait
arpl
cmp
jl
xchg
cwtl
xchg
jae
fwait
xor
out
cmc
and
mov
fwait
into
loope
mov
insb
cmp
movsb
mov
xor
and
mov
jbe
ja
aam
sub
aaa
es
fcoms
icebp
pop
shr
inc
insl
insb
test
mov
xor
jno
lret
fdiv
ret
rcl
mov
adc
std
add
icebp
sti
sub
fcomps
adc
and
dec
xlat
mov
jnp
pop
pop
insertq
mov
sub
sub
or
push
inc
popf
sub
and
adc
jb
stc
cmp
test
int
call
out
cmp
test
mov
out
ficoml
dec
push
xchg
ja
adc
clc
mov
sbb
sub
das
das
inc
rcll
mov
fdivrs
lret
jno
xor
loop
imulb
insl
xchg
mov
mov
movsb
es
pushf
mov
pop
imul
xchg
push
scas
scas
push
pop
out
push
cmp
xor
sub
mov
and
mov
popf
bound
mov
or
es
add
popf
mov
jns
icebp
xlat
rol
adc
mov
inc
vpmulhw
sbb
pop
in
rcrb
jp
jl
adc
mov
xchg
int3
push
mov
cmp
dec
cmp
pushf
call
and
push
mov
std
out
cli
test
xor
rcll
xor
push
mov
addr16
adc
mov
cmp
inc
andl
cmp
cmc
mov
add
out
sbb
stos
cmp
fidivrs
cltd
mov
lods
mov
movsl
sbb
xor
cmpsl
push
lcall
cmc
pusha
in
dec
jge
jl
pop
dec
incb
int3
sti
adc
ljmp
jns
sub
cmp
push
test
mov
out
add
add
fwait
and
cmp
divl
icebp
sub
sbb
cmp
cmp
jb
popa
inc
outsb
nop
fcomps
jecxz
call
fstps
addl
add
movb
out
fcoms
dec
sub
add
sahf
jo
adc
lret
sbb
je
ret
lods
mov
dec
inc
sbb
jle
xlat
sub
icebp
xchg
push
clc
imul
jns
push
mov
ss
or
mov
out
push
fnsave
pop
jae
cltd
rcl
insb
adc
dec
adcl
mov
xchg
jne
pop
jb
lret
mov
mov
enter
sub
xor
clc
xchg
stos
xchg
nop
pushf
test
add
filds
jecxz
fadd
or
jne
sti
mov
enter
fstpl
orb
mov
sbb
push
outsb
loop
mov
push
sub
and
dec
and
push
inc
xchg
mov
rcr
jae
cmp
ret
insb
filds
pop
incb
in
sbb
lahf
lods
lahf
faddp
ret
cmp
shll
fdivr
add
ret
sbbl
and
data16
jecxz
push
push
les
cmpl
inc
pop
cmp
cmp
je
jbe
push
or
or
es
cwtl
ljmp
icebp
mov
sub
sbb
push
and
testl
cwtl
pop
test
inc
fbstp
popf
xor
in
pushf
pop
mov
sahf
cli
jl
jae
ss
imul
or
add
addb
shlb
shl
sbb
imul
loop
sahf
push
push
inc
dec
jmp
out
mov
push
insl
pop
push
adc
xlat
outsb
jo
xor
and
add
shr
in
in
and
std
xor
addr16
mov
and
divb
cli
cwtl
nop
inc
cltd
repz
loope
inc
daa
imul
fwait
dec
lock
call
add
sub
mov
sti
mov
inc
mov
push
sarl
test
push
out
add
aad
pop
xor
jg
xchg
xor
in
rolb
push
aaa
roll
push
mov
sub
rcrb
or
in
sahf
in
jb
push
ret
frstpm(287
aas
or
mov
cwtl
fisubrs
push
pop
aam
xchg
es
ss
adc
mulb
mov
mov
or
imul
mov
push
out
cmp
adc
xor
int3
imul
pop
sub
inc
ror
popa
sub
sti
call
out
mov
add
mov
xchg
inc
shr
sbb
loopne
insb
or
lea
xchg
es
ret
cmp
rorl
pop
pop
push
xchg
pop
cmp
sub
dec
insl
mov
orb
xlat
inc
mov
fidivl
shrb
nop
icebp
xchg
cmp
loop
push
movsl
add
sbbl
sbb
clc
and
pop
ss
ret
cmp
hlt
das
pushf
push
or
cmpsb
sbb
xor
add
inc
mov
ret
xor
pop
stc
loopne
out
sub
xor
stos
push
shl
jle
aam
shll
nop
or
lock
or
mov
movsb
inc
into
xor
pusha
jecxz
mov
sub
jecxz
testl
je
daa
ror
inc
iret
xchg
stos
dec
push
jno
rclb
push
jge
or
inc
dec
out
popa
pop
int
aam
clc
nop
sar
arpl
out
fldenv
and
es
ss
adc
xchg
mov
fnstcw
xor
in
int
xchg
sbb
cld
loop
mov
rep
frndint
cmc
popf
jp
outsl
outsl
push
dec
xor
popf
inc
es
popa
push
mov
push
xor
sbb
out
push
adc
je
addr16
repz
lret
int3
push
push
fistpll
xchg
sub
leave
movsb
add
notl
mov
or
dec
sub
std
je
pop
push
out
jp
test
sbb
mov
lea
aad
push
stos
cmc
in
popa
xchg
mov
and
jno
sbb
cmc
fcomps
mov
mov
mov
xorl
or
subb
flds
movsb
lcall
jg
mul
mov
int
mov
and
jmp
pop
je
xchg
fisttpll
addr16
icebp
test
push
sub
adc
test
xchg
inc
xchg
sbb
jecxz
jns
inc
pop
mov
xchg
lods
and
sub
stos
sbb
hlt
adc
pop
mov
jno
scas
outsl
and
push
mov
xchg
push
outsl
nop
dec
movzbl
movsl
inc
jmp
outsb
sub
dec
lret
sbb
and
push
js
jno
lcall
test
loopne
mov
push
cmp
mov
push
inc
mov
sti
push
push
es
sbb
test
pop
int
mov
xchg
xor
mov
pop
push
ljmp
movsb
push
xor
out
xchg
gs
rcrb
data16
loope
xchg
aam
mov
mov
stos
mov
movsl
fsubr
divb
je
mov
fsubrl
mov
les
xor
sbb
cmp
ds
pop
add
aaa
hlt
scas
adc
sub
into
add
mov
inc
xor
cmp
loop
pop
and
lret
cmpb
pop
scas
into
shlb
or
add
icebp
mov
in
decb
fildll
ss
clc
mov
fnstcw
mov
lods
out
imul
ret
fldl2e
jb
cmp
in
fnsave
or
sbb
scas
lcall
inc
lahf
shlb
adc
mov
and
jbe
lods
cmc
jo
in
dec
push
call
pop
xlat
xchg
in
or
mov
das
repnz
sub
icebp
jg
loop
dec
cwtl
xor
pop
loope
icebp
jmp
and
stc
mov
jae
in
movb
dec
xchg
dec
mov
jge
loop
lcall
das
fistps
icebp
or
xchg
jmp
xor
xchg
mov
jl
push
lds
cmp
mov
inc
hlt
out
rolb
inc
push
jbe
sbb
and
cs
dec
cwtl
and
adc
enter
xlat
add
sub
in
fldl
xchg
mov
mov
imul
mov
in
and
lock
je
push
and
xchg
jb
cmp
pusha
sbb
mov
pop
pop
outsb
xor
cmpsl
jmp
mov
lcall
out
mov
mov
repnz
in
push
ss
mov
push
jno
adc
pop
ja
lcall
push
xor
outsl
or
adc
pop
movsb
push
and
sbb
adc
outsl
aaa
pop
je
std
mov
mov
fbld
pop
push
rol
xchg
inc
sbb
fisubs
mov
jmp
mov
sub
dec
fistpll
insl
sti
mov
inc
pop
shrl
into
mov
jp
daa
outsl
adc
or
pop
pop
jp
push
leave
or
lcall
test
pop
subl
popa
mov
sub
push
pusha
cwtl
xchg
jecxz
sub
loope
lcall
add
push
into
mov
cmp
imulb
fmul
pop
xor
bound
in
inc
jle
incl
push
ret
es
insb
xor
add
pop
xchg
fstpt
sub
lds
mov
push
cmp
inc
in
sub
rcrl
push
pushf
xor
jecxz
dec
cmpsb
data16
mov
jg
daa
mov
outsl
pop
popf
out
aaa
mov
fists
mov
mov
cli
pop
mov
pop
movsl
cwtl
sbb
adcb
sub
clc
lds
js
pop
cmp
dec
sbb
xchg
adc
int3
or
call
xchg
lret
jnp
pop
inc
fs
jne
jle
and
shlb
sbb
out
jp
pop
nop
shr
xor
mov
jl
pop
push
fisubs
mov
dec
jp
fcmovb
lret
lcall
mov
cmp
jg
push
repnz
mov
aad
daa
inc
sbb
je
lahf
jb
rcrb
popf
mov
fwait
out
jecxz
xlat
lea
sbb
lret
int
mov
int
jbe
dec
push
mov
loope
mov
out
xor
lds
ds
out
xchg
xor
adc
daa
fstpt
cmp
clts
lret
pop
inc
popa
pop
jns
push
pop
js
ret
or
into
mov
xchg
fsubp
xchg
lret
xabort
imul
dec
addr16
dec
lods
out
cld
xor
lret
inc
jl
xchg
out
xor
cmpsb
lea
icebp
mov
out
loopne
clts
filds
aas
xchg
fisttps
mov
sub
mov
sbb
iret
fldt
adc
xchg
rcl
ror
add
push
jle
xchg
aam
adc
xchg
repnz
stos
lods
divb
jnp
pop
mov
mov
lods
xor
data16
mov
arpl
cmp
int
jge
push
xor
cli
push
insl
sub
mov
pusha
fisubrs
adc
mov
loopne
cwtl
mov
stos
scas
lock
pushl
fwait
xchg
inc
jnp
dec
cli
pop
dec
popf
push
enter
mov
bound
add
loop
fidivrl
das
mov
pop
push
jo
add
fbld
mov
sub
jecxz
movsl
nop
cld
popf
popa
cmp
mov
xchg
fdiv
push
pop
xor
sbb
loopne
sub
pop
adc
lods
xor
sub
aas
jecxz
lock
stos
sub
ret
outsb
push
pop
jge
fmull
das
loopne
sbb
xchg
xor
lcall
xchg
pop
dec
scas
ret
arpl
pop
adc
loope
js
dec
call
jp
das
das
or
std
jnp
jecxz
call
rcrb
adc
mov
push
jle
int3
jns
xchg
mov
cmp
paddw
mov
stos
in
out
push
mov
push
jecxz
xchg
gs
into
ret
pop
ds
popf
divl
idivl
leave
inc
and
mov
js
sbb
push
addr16
sbb
fsubrp
outsb
sub
mov
or
ja
ljmp
mov
push
scas
inc
push
or
std
xchg
inc
pop
jo
jmp
mov
xor
adc
cmp
inc
shl
mov
lods
cmpsb
mov
popa
lods
and
and
sub
pop
mov
mov
bnd
mov
and
call
fisubrs
push
dec
arpl
sbb
js
mov
dec
sbb
aad
push
out
mov
mov
insb
lcall
inc
mov
pop
xor
adc
je
mov
icebp
add
push
mov
enter
js
ret
xor
push
hlt
iret
or
xchg
out
je
clc
push
push
add
mov
fnsave
hlt
inc
mov
enter
xor
pop
lods
mov
sbb
popa
dec
movsb
cmp
mov
sbb
outsb
jnp
insb
das
add
fdivl
push
push
inc
outsl
ret
inc
sub
in
imul
andb
jmp
fsubrl
cmp
ss
mov
cmpsl
push
cld
dec
jnp
aad
sbb
sub
addr16
divl
jle
push
xchg
mov
repnz
dec
mov
or
hlt
xor
fldenv
addr16
aas
call
mov
mov
mov
sbb
jae
mov
jns
dec
aas
inc
add
mov
imul
mov
dec
and
dec
add
xchg
fcoms
cmp
iret
mov
data16
mov
test
ljmp
dec
lahf
mov
lret
jb
gs
sbb
add
and
sub
pop
out
std
into
inc
rorb
mov
and
lds
shll
enter
sahf
and
and
int
fcmove
pushf
jnp
icebp
cmc
lock
lret
and
cmpsb
orb
out
fisubrl
add
jl
lds
lods
jno
sub
aam
jp
inc
pop
sbb
or
inc
movsb
mov
xor
adc
rcll
mov
lea
ljmp
sub
jl
pop
std
or
pop
into
mov
popa
jnp
stc
pushf
rcr
sub
or
xchg
mov
xchg
enter
ret
ss
hlt
push
shrb
in
test
pop
jb
lret
ljmp
es
sbb
jae
cltd
mov
lret
fcomp
mov
mov
cmp
and
add
aaa
mov
jp
leave
out
fimull
adc
sbb
loopne
jne
into
xchg
and
sbb
dec
jge
orb
lods
stos
call
loop
iret
cltd
push
inc
xchg
leave
lcall
add
jmp
inc
sbb
movsl
or
mov
std
jnp
inc
cs
enter
repnz
push
test
shl
cmc
mov
imul
mov
push
push
aas
adc
xchg
sbb
xchg
out
push
mov
es
push
inc
push
ret
jmp
in
mov
gs
in
sub
mov
pusha
mov
jmp
inc
mov
stos
shlb
pushf
test
xchg
jmp
add
addl
imul
mov
stos
xor
xchg
or
jmp
mov
add
outsb
adc
enter
enter
rcrb
movsb
sbb
stos
in
cmp
test
adc
sbbb
rcrl
cmpsl
lods
int
and
out
lods
push
inc
js
out
mov
insl
adc
or
mov
lcall
xchg
test
push
aas
cmp
lods
xor
push
pcmpeqd
mov
pop
fmul
inc
jl
gs
fadds
push
aas
std
dec
test
cmp
icebp
jl
cmp
and
cmp
and
rcrb
xchg
or
push
push
scas
testl
mov
xor
ds
addr16
xor
pop
or
fwait
int3
sarl
rclw
movsl
in
in
repnz
add
sbb
push
repnz
outsb
arpl
dec
and
mov
mov
cmp
push
mov
test
xor
jge
cltd
cmp
push
pop
faddl
push
fsts
insb
das
pop
cmpl
dec
add
xchg
call
outsb
inc
pushf
sbb
push
inc
stos
clc
pop
lret
dec
xlat
in
pop
int3
repz
shll
sbb
sub
mov
bound
cmpsb
lds
pop
inc
mov
jbe
lds
shufps
test
into
popa
xor
cmpsl
xchg
insl
inc
and
outsb
sub
jb
push
mov
sub
lock
in
xor
addl
filds
mov
inc
call
cmc
xchg
dec
mov
out
and
mov
insl
push
aas
sub
test
pop
jnp
cmp
outsb
nop
lret
and
jge
cmp
fldenv
sbb
mov
fiadds
sub
jge
push
std
enter
mov
into
xlat
cmp
mull
addr16
faddp
jge
int
add
or
int
add
pop
aas
ret
push
daa
push
ficompl
pop
gs
lret
mov
inc
movsl
mov
lea
mov
jle
mov
loopne
arpl
out
push
enter
imul
and
loop
mov
and
pop
xchg
in
and
repnz
dec
add
iret
rorb
add
mov
subb
daa
add
mov
psubq
cltd
push
jae
es
in
sub
mov
shrb
into
cli
jno
xor
cmp
sub
push
dec
jne
into
ss
ja
xchg
inc
or
fwait
and
test
rorl
jae
out
mov
mov
pop
sbb
icebp
push
leave
insb
add
inc
push
dec
imul
aad
cmp
jle
push
test
dec
nop
jmp
xchg
imul
js
mov
mov
outsb
sbb
lds
xchg
addb
popf
out
or
data16
dec
mov
repz
xlat
pop
mov
push
jb
add
inc
xlat
mov
test
int
out
lods
subl
mov
push
xor
popf
adc
cld
mov
insl
and
push
test
mov
cmpsl
test
out
mov
shlb
arpl
out
mov
mov
add
adc
jbe
push
cmpsb
outsl
clc
add
push
inc
and
and
cmp
mov
imul
sbb
fstps
xor
and
sbb
mov
lret
sbb
cmp
das
or
inc
pop
mov
iret
gs
push
sub
les
loop
jno
pop
mov
or
jge
push
data16
insl
ds
lcall
and
mov
inc
ljmp
sbb
add
inc
scas
jge
stos
ret
iret
pop
and
out
popf
mov
dec
add
sbb
rclb
iret
sub
push
lret
xchg
fwait
pop
dec
repz
sbb
push
addr16
sahf
loopne
cld
mov
push
xchg
cmp
pop
stc
aam
lods
inc
stc
ds
pop
dec
xor
fadds
pop
mov
popf
mov
inc
sbb
dec
aad
cmp
add
lahf
nop
pop
jo
je
mov
sub
jo
fstpt
sub
mov
sahf
xchg
or
and
in
cli
mov
fadds
mov
pop
inc
mov
mov
pop
inc
popa
add
inc
pop
test
outsb
ret
sarb
sar
adc
or
lods
sub
dec
cwtl
incl
dec
dec
sub
xchg
mov
xor
lret
aad
outsl
push
mov
cld
insl
out
mov
test
fidivrl
mov
dec
add
shr
cmp
mov
arpl
fstl
frstor
es
inc
aaa
mov
jbe
aam
sub
shl
adc
jecxz
or
fimull
rclb
xor
xor
adc
popa
sub
negb
sub
fidivs
sub
mov
leave
cmp
sub
push
lret
mov
mov
out
xor
repz
jl
loopne
aam
rclb
cmp
les
jnp
inc
mov
push
pop
pop
sti
mov
inc
dec
addb
jno
stos
and
aad
stos
xor
mov
add
loopne
or
jo
push
push
or
dec
and
xlat
mov
popa
sbb
push
and
movsl
cmpsl
js
repz
test
inc
and
push
sub
mov
and
ja
inc
cli
jg
mov
popf
jecxz
xchg
sub
jecxz,pn
rcll
divb
fcoms
popl
std
push
xchg
rcl
icebp
xchg
inc
negb
xchg
lcall
xor
cmp
cmp
outsb
pop
ljmp
out
add
adc
scas
mov
cmp
mov
xor
sub
scas
and
fnstcw
jo
outsb
jg
in
pop
pop
push
dec
out
xor
jo
cmpl
pop
adc
lock
adc
push
and
aaa
cmp
xlat
xor
dec
into
jnp
test
push
xchg
test
pop
adc
inc
pop
call
int
adc
lods
subb
in
push
cs
insl
test
adc
mov
cwtl
fsts
insl
sub
dec
pop
jg
add
push
mov
mov
imul
lret
stc
xor
inc
in
pop
inc
sbb
movsl
dec
and
mov
or
ret
mov
xor
andb
inc
int3
xchg
stos
rorl
popf
mov
in
js
ja
xchg
pop
js
cmp
push
mov
test
lahf
test
push
mov
in
fcoms
repz
loop
repnz
ss
xor
dec
mov
push
aam
popa
test
inc
add
test
dec
mov
xchg
pop
js
aad
loope
push
gs
pusha
mov
cmpl
aaa
fbstp
cmp
pop
pop
inc
das
popf
es
xor
arpl
dec
mov
movsl
js
std
jmp
adc
loop
popf
mov
pop
jnp
or
pop
test
jae
jg
dec
cli
add
lahf
pop
aaa
xchg
pop
jmp
jecxz
loopne
lcall
mov
and
cmpsb
fcomps
call
dec
and
leave
adc
mov
repz
mov
cli
mov
mov
out
inc
jmp
mov
out
jecxz
and
mov
sub
pop
in
cmp
or
in
push
out
js
sub
push
fiadds
or
sbb
and
pop
cmp
cwtl
ret
jecxz
jbe
ds
sub
pop
cwtl
add
mov
jg
push
push
jge
and
iret
or
movsb
scas
loopne
jne
mov
push
cmp
adc
adc
add
jle
sbb
mov
sub
sbb
icebp
lcall
adc
imul
xlat
out
mov
aas
rolb
cmpsb
decb
lcall
stos
dec
xor
out
pop
lcall
pop
or
adc
xchg
outsl
ret
xor
adc
sub
pop
mov
in
hlt
outsb
push
pop
push
sbb
fmulp
push
lret
inc
mov
dec
leave
rcll
aam
jl
add
leave
arpl
xchg
push
cmp
push
mov
add
mov
xchg
inc
lret
shll
dec
stc
xor
shlb
mov
inc
and
xor
cmp
popf
stos
fwait
cmp
and
ret
lret
outsb
adc
cmp
cmp
rclb
adc
cmpsl
rol
ja
stos
add
stos
xchg
mov
dec
dec
add
fimull
adc
push
lods
add
lcall
lods
sub
loop
inc
mov
test
pop
imul
aaa
xchg
and
int
xor
into
add
aam
push
das
shrb
jnp
dec
jo
mov
daa
adc
pop
and
sub
lcall
xchg
ss
mov
test
enter
dec
sbb
out
add
lea
inc
insl
inc
sbb
or
push
sub
insl
or
out
mov
aad
mov
xor
movsl
push
jbe
dec
test
add
arpl
sub
and
loope
sub
mov
cmp
push
addl
pop
stc
sub
adc
hlt
jmp
jae
push
add
loop
mov
pushf
push
out
ljmp
jl
stc
ficomps
ret
test
fcoms
cmp
adc
pop
jns
mov
sbb
cmp
sti
js
jmp
adcb
ficomps
iret
repnz
mov
mov
scas
test
jno
or
jo
fmuls
jne
rcll
cmpsb
mov
mov
fistpl
repnz
iret
push
xchg
jne
js
cltd
sub
jbe
shrl
xchg
insl
mov
cmp
mov
cmpsl
popf
insl
add
mov
lods
outsl
adc
mov
dec
iret
cmc
movsb
or
lret
mov
outsl
sbb
loope
nop
or
jmp
fisubrl
mov
popa
lods
jp
ss
orb
push
pop
or
or
xchg
mov
cmp
sub
lods
lds
mov
movsb
or
jae
hlt
and
cs
dec
and
push
xchg
loop,pn
aam
in
cli
ret
scas
popf
ret
leave
jmp
daa
shl
call
mov
into
out
xor
inc
sbb
addb
adc
scas
dec
fisttpl
xchg
fwait
lcall
lret
cmc
xor
mov
std
cmp
inc
sahf
mov
addr16
xchg
or
aaa
mov
outsl
and
dec
pushf
mov
outsl
and
mov
arpl
sbb
cmp
mov
dec
rcrb
add
jg
and
mov
jb
inc
rorb
daa
sub
jae
push
push
dec
loope
mov
imul
call
push
inc
popf
lods
test
lods
pop
push
ds
or
movsb
mov
mov
cmpl
outsl
push
dec
stos
jno
mov
into
mov
add
inc
test
je
movsb
das
sbb
cmpl
dec
push
cmpsb
mov
adc
mov
es
sahf
popa
push
push
scas
xor
idiv
push
mov
sbb
sub
xor
ret
push
cmp
mov
and
and
sub
jbe
jmp
mov
pop
ja
mov
iret
iret
rorb
dec
add
call
das
popa
in
dec
xchg
call
cmc
cmp
into
jnp
adc
pop
imul
cmpsl
cmp
imul
or
out
cmpsb
aad
fxch
bound
or
inc
jbe
lods
dec
dec
shll
and
lods
addl
sub
fdiv
add
aad
sahf
jno
mov
push
sti
loop
pop
push
mov
pop
mov
mov
xor
fucomi
and
test
loopne
std
adc
mov
imul
cli
xchg
aad
call
loope
jae
or
mov
mov
icebp
sub
dec
mov
pop
push
or
ljmp
mov
test
fisubs
mov
rcl
pop
mov
movsl
xchg
repz
mov
nop
or
movsl
imul
and
cmp
mov
cmpsb
xchg
mov
leave
pusha
xor
dec
mov
stc
xorb
bound
scas
cmp
push
jmp
jae
test
or
dec
lods
adc
jmp
mov
movb
hlt
pop
cld
and
imul
incl
mov
in
pop
add
lea
pop
loopne
es
mov
dec
lock
jb
mov
das
jb
das
xor
pop
jnp
xchg
adc
jbe
jle
das
sub
daa
insl
xlat
jg
imul
pop
out
push
cmpsl
ret
push
cmp
into
lock
leave
js
orl
inc
mov
arpl
sarl
mov
push
dec
jb
lret
dec
jl
jnp
mov
pop
xchg
bound
jp
pop
sbbb
and
push
ljmp
ret
pop
jns
push
push
icebp
mov
add
cmp
sub
jb
enter
and
mov
adc
rorb
mov
cmp
loopne
cmp
loop
pop
mov
inc
xchg
xchg
xchg
test
xor
sbb
dec
dec
cmpsb
cltd
dec
cmp
loop
jo
jb
lods
mov
ja
lods
pop
adc
push
jecxz
shrw
pop
cmp
add
pop
inc
dec
ljmp
mov
popf
loopne
add
arpl
mov
mov
mov
pop
xor
and
adc
test
jb
call
addl
adc
addr16
std
stc
movsb
and
jge
les
mov
mov
rorl
xor
in
jnp
ss
dec
push
xchg
scas
fsubs
adc
decb
sbb
inc
adc
mov
or
jne
insb
cmp
mov
mov
lock
pop
scas
inc
push
leave
mov
mov
lea
mov
adc
icebp
rcl
gs
mov
adc
dec
adc
jmp
sub
addr16
sbb
sti
or
cli
xchg
stc
pop
pop
gs
push
mov
daa
mov
cmp
mov
push
cvtdq2ps
pop
std
sbb
int3
cmc
lock
mov
xchg
and
xchg
xchg
xor
cmp
orl
sahf
push
pop
fwait
sbb
mov
pushf
jmp
outsb
aam
stos
push
js
xchg
stos
sbb
arpl
xor
and
or
mov
cmp
dec
nop
insb
mov
xchg
loop
push
pop
pop
mov
in
ret
gs
clc
pop
pop
and
dec
push
mov
stc
imul
sub
pop
or
aam
mov
and
fnstcw
xchg
cs
push
and
lahf
aaa
add
jbe
adc
mov
fs
mov
addl
popf
push
push
adc
dec
sbb
out
loope
cwtl
xchg
xor
push
or
stc
js
scas
mov
pusha
int
or
leave
fnstenv
xor
mov
lea
mov
dec
cmpsl
loop
cltd
and
cmp
jle
jmp
jo
sbb
jecxz
dec
add
in
push
sub
ret
sbbl
bnd
push
and
mov
or
int
into
pop
bound
xor
ret
test
enter
push
int3
in
adc
push
jo
xorb
push
repnz
jl
test
iret
adc
jo
idiv
and
shrb
sub
gs
rorb
push
cmp
test
scas
lret
pushf
pop
rorb
pop
jmp
adc
addr16
xchg
xor
sbb
dec
adc
scas
jp
into
mov
adc
mov
or
cs
push
push
mov
nop
jle
inc
enter
or
aaa
xor
sbb
cs
lock
aad
es
cwtl
ret
xchg
pop
inc
imul
mov
jge
into
pushf
mov
jg
pop
hlt
into
shl
xor
push
js
and
gs
pop
psrad
mov
scas
dec
cmc
or
inc
mov
test
and
in
hlt
mov
aam
jne
bnd
sar
inc
jge
jg
add
out
dec
test
xchg
mov
mov
sbb
push
push
jl
add
push
push
or
sbb
mov
jno
nop
aas
mov
and
negb
cwtl
push
cmp
mov
push
lcall
sbb
loop
nop
push
lods
fwait
lods
out
push
repz
cmpsb
in
cltd
xchg
repnz
xor
mov
add
or
jg
jl
or
das
sbb
inc
xchg
jbe
in
push
test
rcll
in
mov
xchg
push
sbb
ljmp
xor
in
ds
stos
mov
cli
push
call
push
xchg
and
mov
ds
cmc
jecxz
adc
in
icebp
push
in
mov
cltd
mov
mov
iret
mov
mov
cs
outsb
mov
pusha
test
mov
in
daa
imul
xor
mov
mov
xchg
rcrl
jle
pop
popa
adcb
sti
sbb
loopne
repnz
sbb
jp
mov
addl
lahf
xchg
push
lret
icebp
aas
mov
pop
sub
data16
rcrl
movsl
movsb
sbbb
aaa
adc
add
outsb
adc
out
lret
adcl
aam
mov
hlt
daa
push
outsl
and
in
mov
xchg
gs
movsb
pop
sbb
movups
or
jmp
test
mov
popa
sahf
push
xor
popl
sbb
scas
cmpsl
push
out
inc
mov
adc
fmuls
inc
out
adc
aad
push
dec
pop
push
push
mov
xor
std
pop
scas
push
rclb
addr16
inc
pop
add
and
pop
movsl
cmp
fmull
stos
pop
les
rclb
addr16
cli
adc
jmp
sbb
sub
adc
pop
sub
push
bound
or
sub
jbe
push
adc
xor
add
cmp
jmp
xor
push
push
les
in
scas
mov
std
mov
call
mov
fs
jmp
dec
daa
lcall
mov
shll
jne
clc
mov
cmpsb
xchg
dec
cmc
sbb
ljmp
lods
lock
lea
mov
add
test
stc
cld
xchg
push
aas
repz
ret
js
jmp
mov
mov
mov
mov
xchg
jno
adc
test
mov
ret
ret
andb
xor
jg
sbb
mov
cmp
dec
dec
push
push
pushf
jecxz
lret
sti
xchg
jge
adc
push
mov
mov
inc
xchg
xor
sti
lods
pop
outsb
push
mov
sub
or
testl
out
xor
lahf
inc
inc
mov
cli
sbbl
push
push
dec
lret
in
arpl
sub
jb
insl
adc
rorb
iret
sub
in
xchg
stc
add
dec
jmp
sub
repz
add
xchg
inc
pop
mov
cs
xchg
adc
cmp
jecxz
jp
xlat
push
jge
stos
add
stos
inc
sarl
xchg
lods
mov
mov
in
and
loop
scas
mov
movsl
sbb
pushf
xlat
ss
in
test
or
mov
or
hlt
sub
imul
or
fistpll
pop
imul
cmc
incl
jmp
ret
ficompl
scas
and
mov
push
dec
xor
sub
repz
push
cmpsb
fldcw
fdivrl
mov
mov
jecxz
aam
aaa
rcrl
mov
outsb
pop
hlt
jl
lock
fistpl
in
cwtl
sub
mov
cmp
enter
out
push
rcl
cmp
insb
mov
cmp
jl
sub
sbb
cli
jmp
add
sub
adc
mov
cmp
dec
xchg
xchg
adc
int
push
inc
test
add
orb
hlt
fcomps
fwait
incl
push
scas
pop
push
ret
cli
dec
stos
test
mov
lods
or
aad
fimuls
ds
shl
loop
insb
push
movsb
stc
inc
scas
outsl
shlb
mov
in
js
ss
jle
cld
aam
cwtl
ljmp
lahf
sbb
mov
xchg
sbb
pop
xchg
ljmp
sub
mov
mov
jp
call
imul
sbb
inc
pop
adcl
dec
dec
lds
and
scas
testl
and
inc
mov
sub
test
clc
mov
aaa
jns
jb
aaa
cwtl
cmpsl
dec
insl
fistps
xchg
add
xchg
xchg
mov
xchg
pop
mov
in
lods
sub
lea
adc
and
mov
icebp
pop
aad
lods
mov
std
and
loopne
and
sarb
mov
std
xor
or
cld
fcmovnb
xchg
pusha
xor
jno
insl
mov
add
insl
sbb
push
imul
mov
js
das
cmp
jp
jmp
add
mov
hlt
adc
inc
and
cmp
mov
insb
pop
cmp
xchg
popl
add
add
fcompl
outsl
fmull
xor
in
out
jmp
cmp
gs
outsb
outsb
aam
cmpsl
sbb
xor
add
cmp
cmp
stc
xor
and
adc
in
sub
mov
adc
mov
and
mov
test
and
mov
inc
ret
jne
emms
loope
aad
dec
sub
push
loope
subb
fs
jnp
mov
cmc
stos
sti
insb
cmpsb
adc
sub
mov
les
lcall
dec
jge
add
push
inc
aam
outsl
lods
cld
sub
emms
xor
outsb
sbb
fdivs
mov
mov
sub
fiaddl
mov
xor
sub
int
sbb
pushf
les
mov
inc
fnsave
arpl
inc
jecxz
push
or
test
test
jge
roll
in
cmp
cmp
sub
out
and
in
iret
pop
xchg
pop
test
movsl
mov
movsl
sbb
push
shl
adc
lret
sarl
xorb
pop
lret
ljmp
stc
rolb
push
push
in
outsl
icebp
cmp
test
add
ret
pop
in
ret
insb
push
push
mov
or
add
add
inc
jb
cmp
movsb
inc
cmp
lock
daa
cmp
gs
leave
ret
flds
xchg
ret
cmpsb
push
pop
imul
outsl
push
jle
sbb
clc
xlat
add
arpl
mov
jecxz
test
addl
cmpsb
in
into
xchg
shlb
lcall
fs
xchg
mov
sbb
mov
lods
dec
mov
cmp
fiaddl
pusha
adcl
fstp
inc
lret
pop
add
sarb
and
pop
dec
shlb
sbb
sbb
cld
sbb
xchg
imul
sub
ljmp
xchg
bound
mov
xchg
mov
cmpb
into
repnz
sbbl
les
jge
cmp
push
pop
dec
pop
sub
mov
popf
xchg
dec
jae
mov
and
push
daa
loope
add
movsl
pushf
in
aam
cmp
div
cli
cmpsb
cwtl
jns
in
ret
xchg
mov
sub
sub
dec
popl
mov
push
cmp
xlat
xor
xchg
mov
nop
mov
mov
lcall
mov
lret
mov
xchg
mov
jmp
pop
insb
mov
xor
add
clc
mov
xchg
jmp
and
cmp
cmp
repz
lea
shll
xor
aam
in
sub
pop
and
dec
divb
lods
mov
insl
test
mov
test
or
sahf
scas
lock
lret
das
dec
adc
push
dec
mov
inc
jecxz
out
pop
jne
xor
mov
jmp
cld
pop
outsb
mov
jge
push
inc
inc
dec
popa
bound
and
mov
push
jnp
push
pushf
dec
lods
sub
test
pushf
das
in
jle
ds
ret
add
fstpt
jl
mov
push
or
jmp
sub
or
add
dec
js
sbbl
cs
mov
repz
insb
in
mov
adc
xchg
ret
rolb
loopne
int
movsb
fsts
test
mov
icebp
xchg
jg
inc
ret
mov
mov
inc
ror
ret
mov
imul
inc
inc
jl
and
imul
stos
push
dec
orb
nop
nop
mov
jmp
gs
adc
push
shlb
das
jg
out
testl
push
mov
fmuls
aad
jae
repnz
add
pushf
loop
sbb
jg
mov
stos
sahf
fcomp
call
out
movsl
add
out
daa
dec
sbb
lret
pop
push
push
loopne
dec
nop
lcall
mov
jno
outsb
cmpb
pop
nop
out
test
pop
cmp
divl
cmp
mov
mov
pop
inc
shll
movsl
cmp
mov
sub
fisubrs
push
jns
test
daa
sbb
sub
xor
xchg
movsb
movsb
dec
and
test
cmpb
dec
mov
or
mov
lcall
test
aam
sub
cmp
jge
dec
pop
imul
fdivrs
xorl
cmp
enter
ja
aam
int
divl
notl
xor
or
ret
mov
jge
cmp
arpl
push
insb
cmp
adc
jecxz
inc
pop
xor
into
jmp
lock
dec
jno
mov
cltd
loope
push
imul
or
loopne
mov
dec
insb
push
inc
xlat
push
push
push
insb
mov
lahf
hlt
cld
sysexit
test
les
mov
call
cltd
outsl
xlat
cmpsb
dec
enter
dec
je
sarb
lock
add
cmpsb
out
dec
fistpl
mov
andb
aam
shrl
js
sub
xchg
fldl
xor
sti
add
sbb
jns
cli
mov
jge
lea
lods
push
idivb
mov
js
rcrb
push
pop
cld
sub
rorb
or
test
mov
sti
mov
or
and
imul
lds
popa
notb
rclb
das
mov
test
pop
pop
je
mov
repz
shl
ss
mov
lcall
dec
mov
pop
enter
mov
rcrb
jmp
mov
adc
outsb
dec
testl
rcrl
jge
std
loopne
jg
in
jg
je
stos
cwtl
leave
pop
lcall
sub
cwtl
out
dec
dec
addr16
mov
aad
dec
cld
xchg
push
mov
mov
push
stc
xor
inc
mov
jle
add
out
into
add
and
inc
inc
scas
jl
xchg
sub
pop
push
insb
cmp
mov
inc
outsl
fmull
dec
into
push
int
sti
and
jbe
push
sub
inc
or
into
cmpsb
and
mov
sbbb
sbb
pop
xor
jne
addb
inc
movsl
jge
jne
in
pop
mov
lods
popa
arpl
add
repnz
subb
add
inc
int
sbb
mov
add
mov
out
mov
pop
dec
xor
xchg
sahf
repnz
inc
adc
test
loop
out
in
daa
hlt
sbbb
mov
clc
adc
cmp
mov
xor
pop
or
jge
enter
je
mov
lret
sub
stc
sbb
adc
fildl
lret
fiaddl
jp
rorl
cmp
and
andb
sbb
dec
cmc
mov
xor
xorl
ljmp
repz
dec
xorb
aad
xor
mov
mov
adc
mov
dec
aas
fildll
pop
push
outsl
dec
pop
inc
es
popf
jmp
inc
out
inc
mov
xor
pmulhuw
xchg
lock
cli
pop
stos
sub
fildl
std
sbb
push
adc
sub
sbb
es
xchg
sub
push
int
cwtl
jmp
movsl
shll
ss
dec
insl
lret
loope
lods
daa
mov
stos
cmp
hlt
lds
and
or
pop
mov
cmp
push
scas
sbb
cmp
cmp
mov
mov
sbbl
lret
mov
mov
add
inc
inc
data16
xlat
mov
fdivrl
pop
pop
ret
mov
xchg
cmp
dec
lock
mov
sub
js
pop
movsl
xchg
scas
sub
xchg
or
dec
lret
sbb
dec
xchg
mov
jg
add
addb
scas
je
dec
clc
decl
in
and
jne
testb
mov
fsts
jno
repnz
inc
outsl
sbb
cmp
rcr
in
mov
xchg
add
fsubp
xchg
sahf
or
dec
in
xor
mov
cmp
js
imul
jecxz
enter
in
sub
std
add
out
in
dec
xlat
outsl
inc
or
push
int
add
xor
into
or
in
mov
xchg
clc
dec
sbb
decl
cld
and
xorb
xlat
aad
mov
mov
orb
dec
xlat
out
movsb
and
push
mov
jne
enter
push
and
repnz
es
cwtl
push
testb
sbb
push
mulb
xchg
out
mov
sbb
lea
dec
hlt
int
mov
and
in
or
pop
ret
mov
ljmp
idiv
and
icebp
lds
in
cmpsl
push
stc
push
dec
pop
pusha
push
ret
test
push
add
test
xor
iret
loopne
mov
aaa
sahf
addr16
xchg
lods
xchg
pop
cli
pop
aaa
sbb
das
out
bound
pushf
std
adc
add
adc
mov
mov
sub
inc
push
das
pop
inc
daa
bound
enter
or
jmp
sub
dec
ret
push
dec
pop
ror
cmpsl
imul
pop
or
mov
ret
adc
fs
loope
or
or
push
mov
sbb
insl
in
call
hlt
stos
dec
mov
sbb
and
ret
movsl
iret
mov
popa
loope
out
cltd
int
aam
scas
add
xlat
cmp
xchg
jmp
loopne
inc
dec
cld
mov
push
cmovns
jae
call
in
push
mov
adc
push
fdivs
adc
inc
jno
mov
mov
iret
add
cmpsb
loopne
gs
add
scas
loopne
pop
daa
mov
negl
push
in
daa
in
push
xor
pop
out
add
dec
mov
aam
and
or
adc
sbb
dec
data16
adc
loopne
repnz
addl
cmp
add
or
stc
movsl
mov
js
popa
sahf
in
scas
pushf
push
movsb
lock
cmp
movsb
flds
pop
push
mov
scas
aad
iret
fadd
xor
and
jl
scas
jp
add
lahf
push
mov
sti
enter
jo
fmuls
xor
sbb
jb
dec
jno
arpl
push
call
into
mov
shlb
and
rorl
cltd
mov
xor
dec
shll
imull
xor
shll
cli
int3
icebp
shl
hlt
movsl
sub
xchg
sti
mov
or
mov
shll
push
sub
and
dec
jge
lds
clc
mov
xor
shl
test
jmp
jle
packuswb
loope
idivl
push
fsubr
xchg
rcll
mov
jp
jmp
out
xor
mov
pop
lcall
lods
pop
pop
xchg
pop
mov
scas
sub
int
jge
jo
roll
dec
out
in
int3
adc
gs
sub
shrl
repnz
filds
adc
adc
shrl
arpl
xchg
fwait
jb
mov
or
xchg
mov
inc
imul
jno
jmp
cmp
ret
aam
and
cmp
adc
fstp
fisttpll
push
adc
insl
loop
mov
mov
stos
add
ret
dec
push
sbb
pop
xor
jmp
out
mov
ljmp
sbb
pop
and
lahf
leave
and
and
and
les
add
xchg
or
orl
cmpsl
iret
mov
roll
mull
add
je
and
sarl
jnp
outsb
fdivrs
test
rclb
xchg
hlt
orb
lds
out
fdivrs
loopne
xor
cmpsl
aas
jns
mov
les
mov
jmp
push
xor
addr16
in
push
sub
sbb
mov
movsb
repz
and
xor
call
and
xchg
inc
inc
jbe
outsb
adc
or
jnp
cmc
add
mov
popf
xchg
push
sbb
orb
and
dec
mov
and
dec
ficompl
cmpl
sbbl
test
xor
xor
xchg
inc
outsb
jle
fnstcw
xor
les
sbb
jmp
cmp
mov
sbb
insb
cltd
inc
xchg
push
aas
repz
or
push
repnz
sbb
loop
fimuls
jge
idivl
call
sbb
inc
in
mov
bnd
push
mov
clc
adc
outsl
rolb
pop
fisttpl
in
sub
adc
iret
adcb
or
or
push
push
movsl
js
mov
scas
lret
push
mov
fistl
jecxz
lret
jp
or
popf
xchg
xchg
dec
jnp
hlt
rcrb
icebp
pushf
hlt
out
jp
pop
push
lret
sub
or
ret
fstl
and
xor
mov
in
pop
cmp
mov
sub
jge
mov
insl
or
adc
push
cld
addl
rcpps
cmpsb
insw
fcomi
push
cwtl
xor
lret
add
mov
jno
into
fldl
movsl
mov
mov
push
adc
repz
in
dec
push
push
add
imul
cs
inc
mov
ljmp
pop
ds
jmp
push
out
push
lahf
dec
fstpl
jne
popf
sar
mov
fwait
pop
add
mov
add
movsb
lcall
mov
lcall
xchg
sub
dec
add
adc
ljmp
inc
popa
add
mov
lods
bound
mov
sbb
jp
mov
push
push
ret
sbb
mov
push
das
add
fdivrp
test
jnp
les
jno
and
fldl
push
scas
repnz
cli
dec
sbb
in
mov
push
pop
lret
pop
icebp
inc
sbb
stos
jp
clc
stc
push
insb
sub
xor
ljmp
dec
addl
xchg
in
push
inc
cmp
movsl
xchg
add
push
in
dec
sbb
push
mov
push
fcmovnbe
or
std
aas
movsb
aas
pop
lds
aad
mov
mov
mov
cmpsl
aam
mov
test
fistl
dec
addr16
or
popf
aaa
out
dec
dec
and
mov
ret
das
sbb
pop
and
sbb
mov
mov
fisubl
xor
xchg
inc
shrl
in
push
pop
imul
add
pop
xchg
mov
and
stos
add
outsb
dec
and
mov
movsl
push
xor
loop
pop
add
stos
pop
mov
pop
adc
bound
int
mov
mov
sub
pop
mov
fstpt
push
pop
gs
imul
xchg
in
fidivl
fdivrs
mov
aas
out
std
jecxz
mov
inc
pop
sahf
mov
lock
adc
cmc
sti
mov
loopne
cld
cmpl
mov
icebp
gs
jle
inc
gs
push
mov
dec
addl
cli
mov
push
and
adc
je
mov
adc
mov
enter
das
sarb
daa
mov
dec
stos
jne
ffree
hlt
add
ret
xchg
les
sbb
cmp
fwait
mov
nop
pop
xchg
scas
les
mov
xchg
rclb
andl
sub
jo
leave
xor
adc
scas
aad
popa
and
cmp
mov
in
neg
sbb
arpl
outsb
outsl
mov
ret
push
sub
movsb
or
imul
adc
dec
xor
or
adc
pop
fwait
mov
sub
xchg
subb
popf
push
mov
sbb
or
leave
jae
lea
pop
loope
movsl
or
test
mov
adc
sbbl
cmpsl
xchg
mov
xor
push
sbb
push
or
cmp
je
enter
insb
push
test
out
push
inc
lock
push
xchg
or
push
push
mov
push
add
mov
xor
push
decl
and
dec
arpl
cwtl
in
clc
xchg
lret
mov
sub
cmp
dec
stos
pop
pop
mov
mov
push
aam
pushl
xchg
lods
pusha
mov
cld
xchg
pop
mov
mov
add
rcll
mov
jle
cmp
lret
fiadds
push
lea
enter
scas
daa
in
jmp
mov
scas
loope
popf
push
lahf
jnp
sti
les
xchg
jmp
adc
xor
mov
out
fstps
int
frstor
push
insl
or
frstor
inc
jle
sti
mov
xchg
push
mov
adcb
add
cmc
mov
je,pt
pop
add
stos
jne
les
dec
rcll
sub
mov
push
fwait
pop
jo
inc
cmpsb
xchg
xor
mov
fcmovnb
iret
test
or
cwtl
stc
pop
fcmove
jnp
stc
xchg
cli
mov
fscale
add
xchg
pushf
and
inc
loope
in
mov
fcoml
loopne
fs
out
gs
mov
or
shld
clc
es
mov
adc
add
jp
push
js
loopne
pop
adc
loope
call
cmp
addr16
popa
push
ljmp
mov
jl
xorps
jmp
sbb
stos
xlat
jnp
ret
pop
cs
insb
or
xlat
inc
repnz
movsb
ja
lods
aaa
or
lods
dec
adc
cmpsb
rol
inc
in
cmpsb
dec
sbb
adc
addb
ds
notb
outsl
sahf
push
out
cmp
cmc
movsl
aas
jp
jno
cmp
call
dec
popl
js
mov
jae
fbstp
sahf
adc
rolb
fidivrl
pop
mov
dec
inc
pop
dec
mov
lea
out
insb
jb,pt
cld
loope
aam
jecxz
lahf
push
jns
inc
stc
enterw
fldenv
stos
inc
fidivl
shlb
std
shlb
sarb
les
mov
xor
dec
out
cmc
fcom
sahf
cmpsb
or
repz
mov
xchg
jmp
xchg
rol
das
xchg
push
shlb
mov
sub
pushf
repz
xlat
sahf
pop
fmulp
std
scas
push
jge
aad
lds
mov
mov
pop
cmp
movsl
lahf
xchg
jo
mov
mov
mov
fwait
push
jae
fs
loop
in
xchg
subb
jle
xor
and
in
mov
mov
cmp
pushf
pushl
mov
fdivs
std
in
iret
fisubrs
cs
mov
stc
pop
test
test
test
sbb
ja
loop
dec
sbbb
fnstenv
xchg
pop
adc
jnp
in
lds
cltd
sbb
xor
cmp
dec
mov
arpl
jp
xor
mov
in
cltd
scas
dec
icebp
adc
jge
mov
push
or
sbb
ds
push
insb
push
mov
ret
mov
pop
mov
dec
add
mov
pop
jg
sti
mov
out
out
adcb
or
mov
lock
je
cli
and
mov
lods
sub
xor
dec
sbb
push
lret
hlt
xor
fisubs
jmp
insl
out
divb
clc
jp
insl
imul
mov
lahf
dec
sbbl
js
sub
mov
push
lcall
push
cmc
imul
dec
push
mov
cmpb
cmp
push
xor
jge
stc
xchg
dec
loope
clc
cmp
cmp
out
dec
shll
mov
out
insl
mov
iret
sub
xor
lret
inc
icebp
and
sar
fdivs
lods
xlat
popa
xchg
jns
add
xchg
popa
xor
test
jle
adc
jle
lds
mov
jge
mov
ds
pop
test
adc
decl
mov
xchg
xchg
sbb
lret
fdivr
mov
add
xor
and
xor
xchg
loope
stc
out
fldcw
pop
mov
mov
imul
or
cwtl
push
imul
rorl
pop
js
mov
dec
into
cvtps2pd
mov
adc
sub
add
and
shr
cmp
mov
push
call
shl
in
or
add
out
inc
lret
pop
je
jge
hlt
xchg
sub
sbb
in
or
sub
addr16
insl
cs
jecxz
enter
arpl
loop
fxch
into
lods
cli
mov
cwtl
sub
and
inc
pop
shll
pop
ss
cmp
das
aad
mov
push
pop
test
dec
pop
pop
mov
and
shl
out
loopne
notl
jno
sbb
adc
roll
sub
lods
enter
cwtl
push
xchg
adc
mov
hlt
inc
cld
inc
adc
mov
in
leave
outsb
mov
mov
cs
push
or
aad
mov
faddp
add
push
add
sbbl
or
sbb
sbb
scas
arpl
xor
mov
dec
mov
jns
inc
or
clc
stc
cli
or
and
es
scas
aaa
add
sbb
inc
xor
sbb
add
pop
push
push
into
cmc
divb
ljmp
aad
cmp
int3
out
frstor
test
aad
push
das
xor
ds
mov
adc
scas
sub
aaa
push
imul
cwtl
loopne
out
insl
push
ret
arpl
mov
sub
mov
sub
sbb
pop
push
push
sbb
and
cmpsl
xchg
nop
adc
push
cltd
mov
pop
or
push
jnp
sti
inc
and
adc
or
loop
not
cs
pusha
mov
dec
xor
mov
mov
mov
mov
insb
mov
add
inc
sbb
notl
fwait
mov
xchg
fidivrs
shrl
imul
or
testb
jno
rcr
incl
jle
loop
xlat
cmpsb
idivl
das
cli
xchg
leave
lock
or
fimull
xor
xchg
jne
stos
les
xor
loopne
cmp
dec
xor
sbb
scas
jle
push
test
scas
add
cmpsb
aaa
add
arpl
ret
jge
inc
adc
xor
test
push
loope
push
movsb
ds
xor
cmp
andl
stos
sbb
inc
and
and
insl
rcrl
xlat
jl
shl
stc
test
mov
mov
cmp
call
mov
dec
xchg
pop
sbb
inc
inc
out
in
mov
enter
das
ret
jb
or
nop
adc
pop
fadd
test
movsl
sbb
sbb
sub
jb
xor
jns
dec
xor
or
add
sti
inc
loopne
mov
or
loop
jge
mov
mov
cs
jo
jl
and
dec
out
shrb
xchg
aam
movsl
repnz
nop
daa
xchg
popf
jb
adc
push
cwtl
js
pop
clc
push
repnz
lcall
fnsave
lock
xor
pop
sbb
stos
out
pop
orl
xchg
addr16
and
stc
adc
std
shrb
loop
test
xchg
scas
dec
push
and
push
jmp
dec
sub
push
ret
enter
cmp
lret
pop
fwait
sub
xor
xchg
xlat
mov
call
aad
fwait
les
out
jb
fstps
es
xlat
cmc
call
jg
popa
push
cwtl
mov
cld
nop
xlat
lock
pop
xchg
mov
pop
gs
loop
into
jo
cmp
push
pop
xor
push
cmp
cwtl
loope
fiadds
xlat
testb
adc
ret
in
pop
scas
push
jg
mov
push
outsb
pop
addr16
and
sbb
add
and
mov
lods
jns
cli
mov
lods
inc
mov
fs
push
pushl
dec
dec
jno
ljmp
test
mov
jo
cltd
sub
dec
movsb
inc
dec
pop
and
jecxz
cmp
sbbl
mov
sub
jo
leave
lahf
push
sbb
into
or
cmpsl
scas
idivb
push
xchg
jl
push
mov
xchg
cwtl
out
push
or
cmp
call
jo
add
inc
dec
ss
fwait
addb
imul
inc
test
mov
scas
push
xor
cltd
std
inc
cmc
dec
or
push
mov
pop
mov
aas
aam
xor
push
sahf
sbb
cmp
xchg
frstor
pushf
lds
xor
call
sbb
pop
addr16
sub
dec
pop
adc
dec
inc
mov
lahf
call
cmp
jo
cmp
jl
jmp
inc
adc
jns
testb
pop
adc
dec
inc
je
xor
mov
cmpsl
dec
mov
daa
sti
ret
pop
sbb
sub
ret
sub
fs
fdiv
lret
pop
push
test
ja
sub
adc
jae
push
adc
daa
pop
sbb
fisttpl
push
sub
bound
insl
adc
leave
fdivrl
call
sahf
cmc
cmp
mov
add
mov
cmp
mov
call
in
pop
aaa
adc
aam
mov
xchg
and
fwait
mov
pop
popf
mov
sub
inc
mov
pusha
push
rcr
or
mov
sub
fnstcw
loopne
and
inc
insl
mov
pop
and
repnz
fucom
add
push
mov
ret
daa
and
bound
push
cmp
call
inc
movsl
mov
out
cmp
sbb
mov
xor
cwtl
adc
xor
popa
sbb
push
lcall
dec
sub
out
mov
xchg
jo
jmp
add
out
sub
cmp
je
out
lret
xchg
xchg
bound
cltd
cmpsl
das
mov
es
rorl
adc
pusha
cmpsl
xchg
inc
lock
movsb
das
jbe
in
ja
jne
insl
shl
adc
js
outsb
dec
jnp
imul
mov
sub
mov
ljmp
dec
jg
and
incl
push
ss
in
mov
loope
mov
mov
mov
fmulp
jne
stos
mov
pop
sub
jg
sbb
pop
mov
xor
jl
iret
adc
xchg
add
testb
imul
xor
fidivl
cmp
push
sub
data16
jg
dec
add
lcall
cmp
ljmp
inc
push
aam
lock
data16
in
std
push
insb
or
sbb
mov
adc
mov
insl
mov
imull
jmp
psubd
stos
mov
loop
js
in
mov
mov
test
xor
or
pushf
lret
pop
adc
mov
sbb
lods
push
lea
cmp
fincstp
lret
cli
pop
mov
mov
pop
mov
cs
aam
fcoml
xlat
cmc
cmpsb
push
out
jle
jle
fwait
sub
pushf
add
in
jo
lret
ss
or
sub
mov
sbb
hlt
repnz
jns
and
push
pop
mov
pusha
and
lret
add
cmp
dec
pop
fiadds
inc
xor
mov
movsl
jge
je
jge
cld
jns
test
xor
pusha
add
mov
push
sub
stos
push
cmc
call
mov
dec
loopne
mov
popa
fdivl
jmp
mov
rol
sti
and
aad
push
jp
les
test
jb
lock
gs
or
mov
pop
aaa
mov
push
jg
mov
fbld
mov
aad
pop
mov
dec
shrd
push
sbb
icebp
leave
mov
in
inc
dec
adc
add
clc
notb
mov
fisttps
sbb
cmp
dec
fcoml
rcll
and
mov
jbe
sbb
mov
bound
mov
pusha
jae
stos
scas
js
jp
sbb
inc
add
mov
and
in
decb
jle
pop
sub
adc
cmp
push
test
aam
jmp
xchg
into
pop
cmpsl
or
sbb
test
jnp
mov
inc
repnz
jecxz
js
movsl
enter
mov
leave
sbb
xchg
inc
sub
or
jmp
and
cmp
mov
cld
stos
outsl
stos
mov
add
das
xchg
popf
inc
cwtl
jg
clc
fwait
adc
clc
addr16
xorl
cmpsl
xor
xor
pop
inc
addr16
mov
jmp
mov
mull
and
cmp
pop
cmp
add
jecxz
out
lcall
pop
mov
in
cmpsl
clc
stc
pop
repz
adc
jo
pop
dec
xor
sti
xchg
mov
in
or
into
jns
mov
mov
sub
mov
ljmp
sbb
xchg
and
mov
arpl
push
mov
hlt
call
repz
imul
je
nop
add
in
xor
jle
add
jnp
mov
clc
lods
test
mov
sub
mov
jecxz
fisttpll
popf
and
cmpl
cli
xor
movl
aam
cld
xor
js
test
xor
xchg
aaa
push
icebp
push
mov
mov
pop
cmpsb
fstpt
out
stc
add
xor
mov
mov
jns
bnd
mov
flds
mov
cmp
sbb
mov
xchg
filds
adc
stos
in
cmp
xchg
out
sub
push
sub
outsb
cmc
pop
xchg
xchg
mov
iret
push
mov
jge
insl
pop
xchg
daa
enter
lods
mov
in
fidivl
or
daa
push
cmpsl
movsl
lock
jo
pop
ret
cmp
bswap
push
pop
vpunpckhqdq
insb
movsl
dec
or
fistps
mov
push
adc
pop
outsb
mov
and
jg
adc
shlb
loopne
and
cld
ljmp
push
inc
adc
adc
lds
jns
mov
jnp
daa
mov
push
push
inc
sub
rcrb
push
imul
je
adc
sub
inc
adc
jg
dec
sbb
pop
pusha
movsl
fs
jbe
or
clc
jno
mulb
mov
mov
daa
sbb
push
jle
dec
mov
xchg
fcompl
popf
jbe
pop
aas
cld
outsb
pushf
in
cmp
sahf
outsl
gs
xorl
push
mov
daa
dec
dec
sahf
push
push
dec
shrb
aas
cmp
or
repnz
push
stos
nop
rcrl
test
pop
xchg
aas
xlat
sub
movsb
mov
push
mov
cltd
ficompl
or
or
fistps
or
xor
push
test
xchg
lret
lds
hlt
nopl
lock
jno
push
fs
rol
mov
inc
outsl
add
cs
or
iret
mov
lea
jbe
cs
sub
xchg
xor
mov
into
in
xchg
test
add
mov
loopne
xlat
jle
hlt
inc
lret
push
rolb
shl
lods
aas
dec
rorb
or
push
xchg
insl
ret
clc
neg
stc
dec
outsb
sbb
dec
pop
push
rolb
cmp
xchg
fstpt
adc
jae
imulb
lods
adc
aad
push
dec
xor
les
mov
leave
sub
mov
test
ficompl
bound
cmp
pop
into
mov
push
out
adc
xchg
fcoms
push
xchg
dec
ja
shrl
imul
jb
lret
push
mov
dec
arpl
push
cmp
cltd
leave
inc
xor
mov
rorl
into
adc
sbb
dec
adc
dec
imul
popf
sbb
pop
lret
cmpsl
sarb
or
jl
fsubs
ret
xchg
jns
push
sti
push
sub
js
pop
push
cmpsl
add
xchg
dec
dec
jp
scas
pop
mov
inc
mov
mov
xor
das
pushf
mov
mov
pop
mov
leave
push
rol
or
stos
enter
inc
and
xor
lret
loopne
adc
imul
cmp
lea
mov
xlat
cs
sub
adc
mov
bnd
imul
jne
mov
ss
or
push
lret
aas
ljmp
ret
xchg
and
mov
xlat
xchg
adc
pusha
and
mov
or
notb
xchg
insb
inc
add
mov
push
mov
leave
xchg
cwtl
sbb
insl
cmp
call
sub
mov
sbb
mov
xchg
mov
jne
stc
or
in
adc
in
lret
mov
ss
popl
mov
aam
and
data16
test
or
add
popl
sti
mov
add
adc
lret
call
test
call
iret
loopnew
lods
fisubl
iret
xor
jmp
into
ret
test
inc
loope
xor
push
out
ret
loopne
push
stos
mov
add
pop
mov
lds
dec
repnz
out
lahf
mov
imul
add
lds
sub
loopne
and
scas
fsub
and
xchg
xor
push
push
lds
bound
xor
lcall
data16
mov
jmp
scas
pop
dec
sti
inc
lock
jp
cld
out
push
pop
nop
jae
mov
lret
xor
or
ja
sbbl
mov
lds
push
dec
mov
mov
aam
divb
cltd
push
inc
mov
or
mov
lret
incb
aas
pop
in
mov
dec
cmp
dec
mov
inc
imul
stc
xor
jmp
pop
rorb
sub
mov
sti
adcl
cwtl
and
xor
mov
push
sar
std
adc
jno
push
jecxz
into
ja
push
in
mov
out
movsl
in
sbb
push
or
mov
jmp
cwtl
je
fchs
mov
scas
pop
iret
loopne
jne
fcomps
es
jo
lret
jle
dec
cmp
mov
sbb
adc
xor
clc
add
pop
aad
mov
jecxz
daa
insb
jbe
aam
xchg
mov
mov
jno
stos
mov
decl
or
leave
push
mov
cwtl
test
or
in
pop
pop
ljmp
popf
pop
add
enter
fbstp
cwtl
xchg
sarb
and
test
mov
xor
imul
data16
cmpsl
inc
cmpsb
mov
sbb
cmovno
test
je
std
shrl
adc
flds
leave
sbb
xor
and
mov
cwtl
push
xchg
in
decl
stos
ljmp
xor
int3
adc
xor
filds
xor
push
mov
sbb
fdivrs
push
loope
xor
fistps
jg
jle
cmpl
adc
pop
lods
xchg
xlat
dec
mov
pop
aam
xchg
popa
add
aas
mov
movsl
mov
push
scas
or
adc
and
lods
or
push
shrb
push
imul
sbb
and
stos
ljmp
addr16
adc
int3
stc
or
mov
mov
icebp
sbb
movsb
lods
pushf
mov
or
sbb
ret
mov
icebp
dec
jg
adc
movsb
fwait
mov
sub
and
dec
jmp
mov
sti
arpl
test
cli
xor
out
negb
mov
cwtl
or
sbbb
xchg
push
and
adc
dec
xor
popf
xchg
jno
or
dec
aad
sbb
andb
cmp
pop
and
jno
loop
daa
mov
cmp
inc
add
mov
push
ljmp
test
mov
addr16
fsubr
imul
mov
or
imul
ds
test
xchg
cmp
and
cmp
fcmovne
ret
push
mov
outsl
lahf
in
in
nop
pop
rclb
insl
dec
sahf
xchg
loopne
popf
js
les
pop
jmp
das
ljmp
push
test
std
mov
cld
or
dec
push
mov
in
and
jns
and
jnp
cmp
add
fs
pop
mov
and
pop
jne
push
lcall
inc
or
sub
pop
sub
inc
cmpsb
jne
xor
lret
sbb
ret
in
rcrl
data16
xor
mov
pop
mov
icebp
jo
mov
xorl
and
es
adc
xor
mov
ljmp
or
mov
and
cltd
ss
pmullw
cwtl
lcall
sub
hlt
add
inc
adc
xchg
out
sti
push
xor
pop
mov
mov
sarb
ds
sti
or
es
jne
xor
dec
out
and
arpl
cltd
xchg
std
mov
jl
xlat
jle
cmc
sub
mov
sbb
lahf
or
mov
pop
adc
xchg
sbb
adc
mov
pop
xchg
xchg
mov
adc
jmp
xor
or
rorb
stos
jne
adc
sti
cltd
insl
pop
or
sbb
xchg
jmp
mov
ds
mov
ss
movsl
fnop
adc
mov
xchg
jmp
into
sub
or
dec
out
in
ret
jne
push
jnp
inc
inc
jl
sub
xor
arpl
jp
sub
addb
sarb
cmp
pushf
popf
mov
pop
lahf
push
adc
das
push
push
pop
cld
cmp
cmp
sub
sub
popa
mov
mov
out
pop
push
pop
push
cmp
dec
pop
fsubrp
dec
test
test
aaa
mul
jns
pop
dec
popf
clc
sub
shlb
decl
in
pop
sub
mov
dec
loopne
clc
mov
dec
mov
sbb
fmulp
mov
sbb
fcomps
outsl
cmp
xor
gs
xchg
je
fcoms
push
or
dec
sub
and
aaa
inc
sbb
inc
test
bound
arpl
bound
sbb
jp
out
cltd
xchg
in
cs
in
xchg
inc
adc
and
lret
cs
cmp
movl
mov
hlt
pop
out
outsb
sbb
xor
pop
inc
andl
cltd
je
movb
loopne
push
jmp
dec
or
jge
dec
cmpl
add
add
pop
jno
xchg
or
pop
mov
repz
add
fcoml
es
jno
es
je
and
in
push
insl
sub
sbb
adc
test
and
leave
mov
pop
jmp
add
dec
jmp
lods
or
xchg
rorb
dec
pop
xor
fwait
pop
add
mov
aas
push
jle
sub
into
inc
repnz
insl
mov
adc
jl
adc
and
cs
aas
push
stc
bound
ret
in
test
das
aas
loopne,pn
inc
sub
aad
sbb
rcrl
jle
insl
mov
add
in
aad
dec
mov
enter
mov
das
lret
sub
inc
fcomi
jge
addr16
and
sub
lcall
and
pushf
pop
add
mov
lahf
or
cmp
cmp
and
outsl
sub
loope
dec
xorb
mov
xor
int3
imul
arpl
pop
sbb
xlat
lods
mov
mov
outsl
or
sub
lret
test
or
sub
mov
jae
jg
inc
sub
clc
mov
pushf
mov
fs
hlt
nop
add
mov
leave
inc
cwtl
test
fistl
repz
mov
xor
bound
imul
jg
ljmp
cmp
rclb
and
xlat
ret
jl
mov
and
mov
in
jno
stos
sbb
idiv
addr16
test
sahf
daa
ljmp
sub
jno
lods
ljmp
outsb
aas
dec
dec
hlt
and
xor
shr
mov
mov
testb
or
inc
sbb
xchg
pop
andl
les
movsb
hlt
out
insb
jp
enter
movsl
xor
lds
jne
dec
pop
imul
sbb
dec
push
inc
das
inc
popaw
xor
int3
mov
xchg
inc
mov
dec
rorb
adc
mov
xchg
cmp
xor
orb
and
je
inc
sub
rolb
call
push
jg
add
mov
inc
fisttpl
add
inc
mov
sti
repnz
fs
test
andl
mov
in
fadd
lcall
mov
hlt
xchg
mov
rcll
push
daa
imulb
sbb
out
mov
out
ret
mov
xchg
or
test
sar
stos
push
and
aad
xchg
or
pop
mov
pusha
sub
and
or
shrl
xor
cs
mov
testb
and
out
mov
jge
dec
les
pop
aad
push
movsl
nop
fnsave
xor
jne
lods
dec
mov
and
ds
mov
popa
pop
cmp
sahf
pop
push
jbe
insl
mov
inc
mov
call
xor
pop
lods
push
out
andb
popa
xchg
sub
test
dec
pop
dec
dec
loop
out
inc
mov
aad
testl
pop
cmp
hlt
popa
cmc
xchg
mov
sbb
daa
imul
mov
jmp
mov
cmpsb
cwtl
pop
dec
sbb
imul
int3
adc
out
sahf
jmp
push
std
ret
jns
arpl
adc
push
add
stos
sbb
ljmp
jecxz
fnsave
repnz
inc
and
dec
mov
ds
les
int3
or
test
inc
xor
arpl
out
add
mov
push
lcall
into
movsl
out
mov
mov
nop
outsb
add
std
push
add
daa
out
ds
xor
mov
inc
push
sbb
inc
adc
in
mov
cmpsb
sbb
je
push
push
xchg
js
inc
add
out
movsb
mov
cld
dec
xor
lods
and
xor
loop
ret
mov
rep
dec
adc
cmc
jl
mov
jbe
sbb
arpl
movsb
sub
sbb
adc
push
mov
jmp
sarl
fwait
mov
pop
adc
push
dec
enter
or
jg
aaa
add
std
xchg
cli
jb
mov
and
jne
insb
testb
daa
xchg
jnp
add
mov
mov
xchg
jp
dec
pusha
ss
inc
pop
push
imul
loope
ja
enter
lret
sbbl
jns
mov
pop
lea
xchg
fisubrl
lahf
mov
sbb
outsl
and
loopne
in
out
lcall
out
jl
lods
sub
adc
insb
push
sbb
lret
dec
fidivl
mov
ret
dec
lds
sub
je
stos
jne
xchg
jnp
leave
mov
sub
or
sbb
iret
sub
mov
pusha
pop
jp
adc
imul
jbe
push
clc
loop
mov
test
mov
dec
mov
mov
lahf
or
pusha
int3
rorb
sub
jo
insl
gs
js
in
mov
mov
inc
cmp
negb
pop
repz
fdivl
mov
dec
mov
add
mov
inc
int
mov
and
xor
push
ljmp
mov
xor
jl
mov
aas
mov
xchg
push
cmp
xchg
dec
push
pop
mov
mov
int
loop
or
dec
mov
sbb
add
decl
inc
sarb
pop
shrb
bound
pushf
mov
fsubrp
addr16
data16
dec
mov
and
in
push
lret
mov
jmp
sar
add
or
rcl
mov
int
fstl
cmp
xchg
sbb
add
sub
push
leave
mov
test
xlat
testb
imul
xchg
mov
in
xor
or
popf
mov
cmp
es
and
mov
daa
js
es
xor
xchg
sbb
lods
stos
xchg
in
xchg
xchg
jne
mov
stc
sahf
push
int
in
jle
pop
jne
fisubrs
es
inc
mov
std
sbb
cmp
imul
push
sbb
sub
cmc
add
push
in
cwtl
mov
pop
popa
sbb
es
pop
sbb
repnz
pop
daa
jmp
adc
and
mov
jne
pop
sbb
xor
outsb
pop
mov
sub
es
loop
mov
adc
pusha
adc
add
loope
leave
fnstcw
mov
push
xchg
mov
rcr
xchg
movsl
loope
movsl
mov
imul
fistl
xorb
pop
inc
mov
or
in
repz
in
push
inc
cwtl
into
mov
sub
rolb
rorl
imul
imul
mov
das
cmpsb
loope
dec
out
cmp
xchg
or
jo
pushl
in
mov
sbb
sub
mov
ja
jns
sbb
push
pop
flds
adc
pop
mov
mov
test
sub
inc
xchg
mov
dec
fmuls
adc
sbb
clc
add
sarb
daa
in
mov
mov
mov
xor
pop
push
lea
jmp
mov
cmp
dec
push
js
adc
les
nop
cmpsl
jno
sbb
jmp
ret
adc
inc
mov
mov
xor
addr16
push
lahf
xchg
or
jmp
pushf
psrld
dec
jno
mov
test
nop
aad
rcll
shl
add
mov
sbb
xor
popf
pop
pop
mov
imul
push
or
rcrb
mov
push
clc
fdivs
pop
out
test
fs
cmp
imull
mov
clc
xor
mov
xchg
dec
outsb
std
stc
adc
pop
push
andl
xor
pop
push
and
add
dec
and
inc
inc
sbb
into
std
enter
xor
stos
pusha
dec
arpl
ret
ja
mov
mov
loop
push
aas
and
add
lods
mov
sub
adc
add
in
push
mov
mov
sub
les
stos
fcomps
stos
fildll
popf
cmp
repz
ljmp
jecxz
jge
ja
sub
shr
shrb
dec
xchg
xor
mov
xchg
loope
js
push
sub
out
iret
mov
dec
clc
fwait
and
xlat
les
xor
dec
push
push
lcall
adc
or
mov
das
and
cs
adc
out
dec
sub
loop
jae
inc
mov
imul
jmp
sbb
rcrl
mov
adc
adc
stc
in
sub
xchg
shll
sti
pusha
lret
loopne
bound
daa
jp
outsb
fcompl
mov
in
stos
inc
or
repnz
push
sub
sahf
lcall
xorb
push
sub
xor
push
lret
dec
scas
rep
mov
fstl
ds
outsb
cmc
pushf
fdivrl
or
xor
insl
outsl
push
mov
adc
jle
push
push
fists
or
imul
imul
scas
cmpsl
push
mov
dec
std
push
and
sbb
popf
mov
push
sbb
cli
inc
insb
pop
mov
mov
fs
pop
ds
arpl
pop
jne
rol
mov
loope
pop
mov
sbb
adc
mov
or
pop
xor
cmp
or
popw
lret
out
fildl
jle
cmpsl
mov
inc
mov
ljmp
mov
xchg
je
repnz
out
jo
out
call
arpl
xor
jg
pop
or
add
insl
sahf
cmp
mov
sahf
sbbl
or
mov
mov
and
mov
lds
jp
movsb
insb
xor
notb
mov
and
and
mov
pop
or
outsb
or
or
pop
inc
pop
gs
lret
insl
sbb
pop
and
stc
jne
mov
sub
test
cmc
fnsave
out
add
push
mov
mov
push
add
repnz
jmp
push
pop
xchg
call
dec
imul
aad
insb
in
add
push
inc
push
insl
push
mov
shll
adc
icebp
inc
sub
repz
pop
inc
sub
pop
adc
jae
jns
fsubp
xchg
jnp
or
outsb
fcoms
enter
add
rol
fwait
or
test
add
ret
cmpsb
fwait
in
insl
shrl
pop
mov
jg,pn
movsl
push
push
mov
sbb
pushf
fimull
mov
push
add
cwtl
arpl
xchg
lret
xor
into
mov
sti
pop
cs
cltd
push
ss
push
add
das
int3
lret
clc
in
xor
arpl
pusha
out
jns
outsb
int3
mov
add
sbb
ret
cld
lcall
arpl
sbb
test
in
or
push
push
aad
shl
inc
jb
dec
xor
push
dec
or
and
adc
jmp
ljmp
mov
std
sbb
rcr
test
stc
psrld
test
fisttps
adc
sarl
sub
xor
sub
adc
push
movsl
or
pop
pushf
pop
mov
dec
pop
push
pop
and
push
push
sti
lcall
push
mov
hlt
inc
sbb
daa
je
mov
adc
dec
pop
insb
fcomps
fst
jns
cmpsb
in
ret
lahf
loop
push
adc
add
dec
in
jo
and
daa
iret
cmpsb
jne
push
call
sti
pop
mov
shlb
inc
mov
mov
stos
push
insl
xchg
add
jecxz
xchg
push
xlat
jmp
fisubl
mov
jmp
out
inc
cmc
pop
into
cmp
gs
icebp
fs
aas
inc
lods
adc
decl
mov
pusha
jne
lds
sbb
adc
popa
adcb
push
loop
xchg
call
mov
xchg
sbb
int
fsubrl
jmp
hlt
inc
dec
cld
cmp
bound
inc
in
pop
jnp
push
ss
xchg
aam
outsl
repz
mov
mov
inc
jp
cwtl
or
mov
cltd
out
call
nop
sub
jmp
ljmp
jbe
jmp
mov
jle
outsl
and
repz
xchg
push
outsl
xorb
nop
inc
addb
lock
jge
push
or
mov
pop
cmp
fidivs
int
add
add
jo
repz
lods
sbbb
cwtl
lcall
xor
sahf
add
add
jmp
subl
fldt
dec
sub
dec
jo
and
or
sbb
inc
dec
mov
adc
out
mov
sbb
cld
mov
fs
in
mov
and
dec
ja
ficomps
sbb
arpl
xor
xor
fwait
jg
mov
repz
pop
ret
ds
fildl
lods
in
mov
jnp
sbb
pop
jg
dec
lods
cmp
sbb
mov
inc
lods
mov
insl
lcall
push
pop
loope
adc
push
es
cwtl
movsl
sub
or
ret
daa
jne
xchg
pop
sbb
xchg
pop
and
subb
subl
mov
dec
mov
fwait
shlb
xchg
loop
stc
imul
popf
cmp
orl
lods
sbb
das
int3
add
add
mov
mov
jbe
pop
xor
js
inc
mov
push
add
pop
stos
js
mov
xor
pop
fisttps
je
push
outsb
mov
out
cmc
popa
jg
jne
adc
aam
nop
jbe
jo
xor
pop
add
xchg
js
gs
sub
fiaddl
pop
xchg
lods
cmp
mov
je
mov
sbb
loope
iret
push
jecxz
dec
pop
loopne
lahf
push
adc
fucomip
data16
int3
ficoml
dec
xchg
xchg
mov
testb
imul
lds
cmp
cld
cmp
out
push
lret
mov
jbe
push
shll
lods
cmp
mov
mov
bound
je
lret
pop
adc
mov
arpl
je
push
mov
pop
jno
pop
fidivl
xchg
gs
add
push
in
bnd
jns
lret
pop
fwait
lock
dec
or
push
xchg
fmull
and
ss
inc
sbb
in
jbe
push
cltd
xor
jne
shll
sahf
sahf
jns
mov
dec
jp
fld
mov
pusha
or
sbb
fs
pushf
jp
inc
sub
mov
scas
cld
jns
fnstsw
arpl
jmp
add
std
xchg
aaa
mov
mov
xchg
jae
add
jbe
into
shll
loop
xchg
push
cmp
push
mov
mov
sub
mov
repnz
and
adc
mov
jnp
inc
data16
in
notl
mov
dec
xchg
adc
xor
adcl
ficompl
imul
fcompl
orl
dec
insl
inc
pop
mov
sbb
int
cld
mov
imul
fdivrl
mov
sbb
les
add
scas
mov
push
nop
pop
lcall
adc
aam
dec
or
movsb
hlt
xor
push
pop
jmp
in
scas
xor
call
cmp
sub
push
or
sub
aad
das
jbe
ljmp
lods
cwtl
push
add
cltd
sub
cmp
pushf
jp
js
lret
imul
jo
cwtl
dec
xchg
loop
jns
std
out
cmpsl
pop
xchg
call
ret
push
push
shlb
jns
xchg
xchg
push
rcl
lret
pushf
push
sahf
std
push
jbe
lea
or
out
mov
jb
decb
add
test
jb
pop
lret
mov
cmp
mov
cmp
int3
sbb
lfs
and
mov
or
cmpsb
mov
test
cmp
fstp
repnz
push
or
stos
rcl
xchg
into
adc
push
dec
push
push
pushf
mov
mov
sbb
inc
or
fidivl
out
addr16
or
fcomps
sub
orl
outsl
pop
js
lods
xchg
or
sbb
repz
loope
add
push
enter
jb
mov
aas
cwtl
and
xchg
hlt
repnz
push
push
jno
and
add
clc
cmp
sbb
pop
in
iret
in
pop
test
call
mov
in
xor
faddl
mov
pop
repz
outsb
dec
sub
cmp
pusha
xlat
scas
gs
inc
or
jge
push
outsl
mov
les
into
add
mov
adc
pop
daa
jae
pop
stos
add
lcall
and
add
pop
negl
xchg
pop
push
sub
jns
sbb
jb
jns,pn
jnp,pt
sbb
rclb
mov
cld
dec
sbb
clc
sti
pop
mov
mov
xor
ret
shrl
out
sarb
les
cmpb
mov
add
xlat
inc
sbb
clc
stc
lock
ja
jnp
lods
sub
push
xorl
cmp
jl
das
mov
imulb
push
cs
imul
or
cli
cltd
shlb
les
dec
scas
mov
add
test
icebp
stos
iret
mov
test
adc
lds
xor
aas
addr16
push
scas
push
sub
xor
ret
es
ljmp
dec
add
and
sar
xor
xchg
mov
jnp
test
sbbb
fwait
dec
repnz
bsr
out
cmpb
mov
sbb
xchg
js
iret
fs
movsl
cmp
dec
mov
cltd
dec
push
xlat
dec
inc
xor
fstpl
les
cld
fs
cs
cltd
xchg
push
negb
and
xchg
mov
pusha
or
or
xchg
addr16
add
push
incl
out
imul
aas
and
fildll
mov
sbb
push
shlb
mov
idivb
out
and
inc
mov
stos
es
cmc
jae
test
out
jnp
nop
push
mov
daa
adc
mov
pop
inc
shrl
clc
lret
lock
cld
jb
lea
call
addb
je
insb
mov
sbb
outsb
xchg
sub
xchg
sbb
add
cmp
rol
jg
mov
and
cmpsb
mov
stos
mov
add
xchg
sbb
mov
ja
mov
sub
mov
les
mov
sub
lret
push
outsl
pop
add
or
out
clc
sub
mov
scas
cltd
jo
xchg
mov
arpl
push
inc
lea
xor
aam
and
sbb
enter
insl
xlat
cmp
ljmp
pushf
xlat
and
adc
out
sar
inc
and
in
ljmp
or
xchg
cvtps2pd
add
dec
pavgw
push
fwait
jo
cmc
popa
dec
out
aam
std
loopne
mov
and
mov
ljmp
mov
dec
mov
les
or
add
stos
into
es
xor
ljmp
lcall
and
adc
inc
adc
jne
sarb
cs
add
ja
sarb
repnz
scas
and
or
xor
mov
std
or
xchg
movsb
cmp
ss
mov
int3
and
loopnew
cmpsb
sbb
jle
dec
xchg
in
insb
inc
cld
in
adc
xchg
mov
mov
xchg
cmpsl
and
xchg
and
inc
iret
adc
cmpsl
inc
into
testl
ds
int3
mov
sub
cmp
xchg
mov
push
and
cmp
cmpsb
push
repz
adc
sub
sub
push
popa
sbb
insb
push
adc
add
std
push
and
sbb
sub
mov
subb
inc
testb
mov
mov
jae
faddl
mov
stos
testl
pop
and
sbb
in
pop
in
adc
subl
mov
cmp
pusha
add
lds
rolb
loop
adc
lahf
mov
arpl
push
pop
aad
adc
push
sub
or
jns
pop
aaa
cmp
add
mov
pop
add
sbb
test
xchg
adc
sbb
test
imul
scas
xchg
repnz
into
adc
and
mov
add
fdivrs
sbb
ret
push
in
cli
frstor
std
push
pop
scas
lock
dec
sub
or
divl
pop
mov
call
sub
xchg
mov
pop
adc
sub
xorl
jge
movsb
sub
add
mov
mov
mov
filds
outsl
in
ljmp
or
pop
dec
lds
int3
mov
sbb
mov
nop
cmp
push
aam
and
push
mov
loope
into
scas
jne
push
inc
dec
mov
cmp
insl
pop
xlat
and
nop
jb
out
repz
push
stos
leave
testb
js
push
pand
ja
or
jnp
das
out
jne
and
es
xor
add
or
add
aad
push
stc
xor
fsubl
icebp
sub
pop
imul
mov
ret
subl
in
and
cltd
ret
dec
pop
cmp
xchg
icebp
xor
adc
xchg
jns
sub
std
scas
movsb
push
inc
xor
rclb
mov
add
dec
cmpsb
jae
idivb
pop
or
pushf
in
movsb
jmp
fisubs
aas
dec
mov
mov
clc
add
fwait
in
popf
or
pop
jp
fisttpll
mov
and
push
out
repz
movsl
pushl
das
outsl
pusha
xchg
outsb
pushf
jns
call
into
push
enter
popa
aas
shll
xor
adc
addr16
movsb
push
sub
xchg
jmp
movsb
lds
test
pop
xchg
cmc
push
in
inc
sub
rorl
hlt
xor
aas
mov
fucomp
gs
add
stos
dec
scas
xchg
pop
sub
pop
lock
jo
add
push
jbe
inc
shlb
cmp
push
mov
or
imul
sahf
mov
mov
sbb
jb
clc
jo
cmp
mov
pop
xor
shr
dec
dec
pop
hlt
pop
lock
xor
cld
pop
inc
mov
xor
mov
test
sub
enter
cmpsl
or
movsb
imul
out
push
ss
xchg
mov
out
mov
add
cmp
mov
adcb
out
xlat
xchg
rol
xchg
mov
push
shll
mov
jmp
movsl
imulb
out
push
stos
pop
dec
aas
mov
dec
pop
dec
or
and
sbb
iret
imul
ds
cmp
inc
mov
mov
out
daa
mov
fmull
inc
xchg
adc
std
xchg
arpl
and
xchg
cli
add
int3
push
push
cmp
mov
sub
in
dec
sbb
dec
push
mov
mov
mov
cmp
add
adc
aam
xchg
testb
pop
pop
cmp
les
mov
ljmp
ret
or
cli
xor
and
push
cmp
aad
cmp
std
pop
mov
mov
dec
push
mov
daa
xor
dec
sub
test
inc
jo
in
jno
xchg
cwtl
mov
xor
out
sub
sbb
push
push
icebp
shlb
rolb
mov
mov
fcoml
pop
shl
loop
and
push
push
mov
jg
testl
jge
dec
scas
xor
pop
and
xor
ret
jg
scas
ljmp
xchg
in
xchg
jle
sbb
out
insb
movsb
out
mov
loopne
clc
dec
test
push
leave
cld
dec
lods
pop
jb
pop
insb
mov
dec
fwait
mov
cmp
sahf
sbb
sub
xchg
pop
xchg
out
jle
filds
pop
fwait
rcrl
or
das
mov
stos
push
ss
jmp
add
and
xor
xchg
jmp
not
fwait
xchg
pop
inc
and
aad
flds
xchg
aaa
fnsave
mov
repz
ret
mov
lea
outsb
aaa
lds
fimull
cld
sbb
int3
imul
into
imul
repnz
mov
sbb
mov
xchg
pop
sub
jns
mov
or
dec
and
in
aam
and
mov
mov
push
sbb
rclb
int
pop
or
jnp
jnp
ficoml
cld
xchg
std
xor
dec
sub
dec
fs
xor
or
xchg
add
pop
xor
xchg
and
xchg
adc
xor
or
adc
mov
sub
jne
call
mov
jmp
data16
add
mov
cmc
pop
fwait
cltd
enter
add
cmpsl
mov
fmuls
and
test
jle
je
roll
mov
jbe
nop
pop
sbb
pop
mov
xor
mov
cs
dec
inc
stc
or
or
test
imul
sti
dec
pop
fildll
scas
sub
mov
sub
jbe
jle
int
pop
ljmp
push
das
daa
inc
adc
js
std
and
mov
jns
testb
sub
sti
pop
into
pop
incl
sbb
mov
stos
adc
sub
ds
subb
sbb
pop
fcoms
repnz
mov
inc
mov
jge
scas
daa
adc
mov
fmull
xchg
jecxz
pop
sub
hlt
jno
mov
adc
sti
es
out
insl
insb
leave
mov
sti
loopne
dec
in
mov
cli
mov
stos
cmp
into
add
ds
ret
js
inc
rcll
imul
xchg
pop
jno
jl
imul
pop
cmc
bound
mov
add
dec
or
dec
hlt
jp
pusha
cmp
push
lods
adc
or
inc
mov
in
mov
popf
pushf
xor
push
jae
pop
arpl
xchg
pop
mov
or
in
aam
push
jecxz
add
repnz
or
inc
pop
pop
add
popf
bound
jecxz
mov
repnz
and
std
incl
push
imul
imul
pushf
cltd
jl
imul
sub
xor
and
fbld
or
dec
fmuls
adc
cmp
insb
cmpb
data16
or
hlt
les
xor
test
jmp
pop
push
stos
jle
xchg
adc
scas
pop
ljmp
and
push
stc
push
sub
das
cmpsb
enter
outsb
mov
push
xchg
std
pop
xchg
aad
int3
repz
mov
ljmp
push
and
sbb
dec
cmp
inc
pop
nop
repnz
loope
repnz
sbb
orl
add
mov
push
add
test
mov
mov
push
loopne
nop
aad
addr16
jbe
cmp
jne
cltd
mov
ror
pop
lock
sub
mov
clc
dec
jge
push
pop
push
idivl
hlt
or
add
inc
push
jne
push
test
lret
jbe
arpl
inc
popf
fnstsw
scas
mov
fsubrs
xchg
jle
popf
push
int3
test
pop
cmp
sarl
and
std
jno
popf
push
push
inc
cmpsl
sub
sahf
push
or
push
lea
inc
lods
dec
sub
sub
fcmovu
dec
imul
mov
test
fstps
pop
or
mov
push
mov
or
pop
push
movsb
push
stos
push
aas
rolb
push
xchg
dec
mov
or
test
and
pop
or
shll
dec
pop
pop
movsb
imull
cmc
fldl
int3
fucomi
movsb
add
test
ret
mov
inc
lret
lock
test
inc
sub
mov
fsubrp
jae
lea
dec
pop
pop
ljmp
mov
inc
xchg
mov
mov
les
jb
inc
mov
or
pop
jbe
int3
fsubrs
jle
pushf
testl
out
xchg
aas
push
sub
imul
mov
out
repz
cmp
pop
test
mov
add
jns
pop
pop
mov
xlat
pop
jae
popa
pop
add
push
sti
mov
fucompp
int3
arpl
adc
insl
mov
jle
and
lret
loope
adc
outsb
loopne
sub
shll
cwtl
push
xor
adc
jge
xchg
test
popa
loope
jmp
cmp
mov
jno
xchg
sbb
repz
mov
push
mov
sbb
stc
or
sub
movb
call
loop
mov
loope
jns
jge
xchg
xor
and
mov
movsl
ds
sbb
push
std
adc
sahf
jg
sub
cmp
filds
dec
push
jl
aas
dec
ret
leave
add
insb
aad
or
fsubr
mov
cmp
and
insl
in
js
adc
jg
and
sbb
sbb
push
data16
dec
fdivrs
jg
lock
dec
sbb
add
cmp
dec
loopne
leave
clc
shl
push
mov
dec
inc
stc
push
push
rcr
pop
repnz
das
gs
pop
adcl
addr16
lcallw
hlt
popa
mov
adc
movsb
adc
xor
jmp
outsb
loopne
sub
push
idiv
aas
push
lahf
adcb
push
cmp
cli
sub
aad
or
inc
inc
mov
jbe
addr16
popf
popf
xchg
rolb
push
mov
mov
push
pop
out
jbe
in
jns
leave
std
sbb
dec
push
loope
cs
jg
xchg
lds
jb
mov
adcl
or
jb
adc
sub
mov
aam
movsl
inc
std
and
imul
popa
mov
pop
xor
shr
out
fists
adc
mov
in
mov
cmpsl
xchg
push
fucom
andb
dec
cmpsb
sub
pop
mov
leave
xchg
pop
and
jno
enter
inc
pop
sub
std
movsl
mov
mov
sahf
and
dec
imul
mov
sti
sub
inc
mov
xchg
sbb
jno
mov
mov
mov
loop
xorl
mov
data16
aad
shrl
lcall
or
jmp
aaa
cltd
cwtl
cmpsl
mov
ret
pop
imul
push
data16
sbb
rcrb
into
jmp
jbe
xchg
mov
sbb
xchg
shrl
int3
addr16
jmp
xlat
sarl
out
jl
fwait
mov
pusha
sahf
push
pop
jbe
mov
arpl
leave
jne
add
xchg
leave
pop
leave
sarl
fs
data16
insb
pop
mov
mov
sahf
xor
mov
xor
sbb
mov
jl
out
lock
add
inc
sbb
sbb
sbb
pop
shlb
add
sbb
ret
sti
add
xor
out
jns
pushf
jbe
and
adc
mov
mov
sbb
jp
or
hlt
or
pop
int
outsl
scas
inc
pop
out
xchg
mov
ret
scas
enter
fdivr
ret
and
cmp
loope
push
in
mov
push
mov
jnp
push
call
push
push
push
jle,pt
mov
xor
pop
sbb
mov
dec
and
decl
aas
frstor
jecxz
mov
lods
push
pop
fimuls
icebp
dec
in
jbe
add
xlat
icebp
sbb
cmpsl
xchg
mov
rolb
dec
jmp
sbb
bound
std
in
mov
popf
outsl
es
xor
pushf
sarb
adc
outsl
in
dec
push
aam
jle
xor
repz
push
or
mov
push
jp
fildll
sbb
pusha
xor
jne
mov
inc
lock
outsb
call
sub
xor
adc
xchg
stos
inc
jmp
test
sbb
stos
lcall
jg
mov
lcall
aad
mov
dec
add
into
sbb
shrl
mov
dec
mov
jnp
and
cmp
inc
stc
ret
sbb
inc
xchg
mov
hlt
mov
lcall
ret
adc
xor
push
cli
rdtsc
dec
andb
cmp
popf
or
cmp
test
std
sub
or
movsl
dec
outsb
dec
lock
mov
popl
pop
shll
jno
mov
jecxz
inc
push
jp
push
pop
in
cmpsb
adcb
lds
and
mov
sbb
mov
lods
lcall
cmp
or
pop
aas
sarb
int
pop
and
scas
cld
loope
packuswb
rcl
rclb
mov
lods
enter
lahf
lods
jae
aam
pop
incl
fildl
mov
inc
inc
ja
push
icebp
test
testl
mov
cli
pushf
sub
or
and
inc
cmpsl
lcall
ret
cmpsb
dec
sub
divb
cwtl
cwtl
cld
mov
push
fcmovnb
and
dec
xchg
mov
ja
add
push
sub
sub
lcall
je
adc
xor
clc
je
cmp
and
test
test
sbb
sti
aad
dec
push
shlb
rolb
sbb
out
push
pop
adc
hlt
ljmp
mov
jns
aad
int3
std
sbb
fstpl
inc
sub
push
fcomp
arpl
add
lahf
in
jne
or
cmc
int3
out
mov
insb
mov
fsubs
mov
cmpsb
xchg
arpl
daa
js
cmp
cmp
mov
icebp
and
lcall
fcoml
jnp
imul
xchg
int3
or
fisubrs
hlt
push
movsl
mov
push
or
adc
push
pop
cmpsl
out
addr16
add
fisubrl
scas
in
sti
mov
add
jae
push
fsubs
fldl
movsb
sbb
ds
lods
xchg
cmp
test
inc
pop
test
xchg
and
cltd
ljmp
push
sarl
or
sarl
jg
lahf
jns
sahf
aad
in
fbstp
das
jno
out
scas
cmp
push
in
test
cmp
jb
add
orb
xchg
jp
int3
jmp
xor
mov
rcl
test
rcr
pop
push
lods
ret
fwait
loop
popf
insb
jns
int
pop
loopne
cmc
adc
adc
inc
mov
scas
mov
mov
add
imulb
mul
fcomip
lea
add
xor
pop
data16
fistps
or
inc
call
push
dec
sbb
hlt
enter
rorb
push
push
dec
loopne
pusha
enter
cmp
dec
inc
pxor
jg
and
mov
sbb
or
jle
sub
std
aad
dec
push
mov
inc
ljmp
das
cmp
pop
jge
inc
mov
push
push
insl
push
lock
out
loop
cmp
jecxz
stos
mov
gs
outsl
leave
jmp
outsl
pop
xchg
sub
repnz
mov
jecxz
cbtw
fldl
lea
xor
or
lods
loope
out
clc
cmp
int3
repnz
add
and
mov
adc
adc
stos
mov
lods
scas
and
inc
inc
scas
lds
loope
push
adc
bound
sbb
sti
mov
sbb
icebp
stos
test
mov
dec
mov
xchg
popl
xor
cltd
push
jmp
aam
jp
push
and
es
cltd
scas
pop
mov
std
cmc
jl
rol
sahf
mov
mov
push
outsb
sub
mov
fisubs
jle
cwtl
jle
or
cmp
push
or
mov
cmpl
xor
mov
mov
stc
adc
xor
cmp
enter
cmp
cmc
stc
jecxz
or
or
jns
ds
cli
and
xor
cmp
hlt
pop
xor
cwtl
sti
push
je
adc
lea
mov
insb
icebp
leave
int3
ret
cltd
fs
iret
loopw
je
das
lcall
sbb
xor
scas
cmpsb
mov
adc
movsb
in
mov
jae
fdivs
sbb
test
inc
lret
jge
pop
movsb
mov
int
add
jge
loopne
xchg
pop
ljmp
dec
pop
fs
adc
jne
pop
mov
inc
in
jno
ret
imul
icebp
pop
cmpsl
ds
cmpsb
jne
cli
push
call
push
add
mov
push
jae
xor
push
arpl
dec
add
or
xor
push
lea
inc
cmp
icebp
add
mov
into
inc
lea
dec
call
jbe
faddl
pusha
sub
scas
pop
jecxz
jo
addr16
cmp
mov
pop
sti
mov
repz
imul
mov
mov
shll
mov
xor
lret
popf
jl
cmp
lea
int
movsl
sarb
mov
mov
insb
rcrl
mov
mov
adc
xor
icebp
mov
outsb
pop
jge
dec
ret
push
mov
sbb
lods
mov
sbb
nop
mov
in
cmp
lea
int3
rol
push
fwait
pop
sbb
cmp
push
mov
push
mov
pop
cltd
or
xor
leave
sbb
or
in
xor
pop
pop
movsl
xor
jns
add
mov
adc
cmp
mov
add
xchg
cmp
lods
xchg
dec
cmp
mov
pusha
dec
fdivr
neg
insl
ror
roll
push
mov
pop
test
and
sti
pop
outsl
inc
xor
jp
sub
sub
and
xchg
call
test
pop
test
jmp
jbe
rcll
insl
lods
mov
fimull
gs
icebp
adc
jne
insl
push
arpl
mov
std
adc
mov
lcall
adcl
mov
fstpt
sub
push
dec
aaa
push
adc
jnp
fists
int3
ret
push
das
or
mov
orb
adc
daa
add
ds
adc
cmpsb
pop
cmpsl
jb
inc
mov
cmp
lock
outsl
rorl
and
icebp
jle
js
sbb
and
cmp
fimull
int
pop
add
dec
xadd
rclb
add
and
scas
test
inc
lea
aad
pop
jg
cli
movsb
mov
or
fildll
stos
jecxz
aaa
push
xor
mov
inc
cli
or
xchg
sub
adc
adc
push
fcoms
add
jns
sarl
mov
jge
cmp
add
mov
out
lods
inc
sub
shlb
js
cwtl
inc
mov
pushf
push
cmpsb
fisubl
cwtl
adc
in
test
pop
js
push
xor
xor
in
test
mov
push
pop
icebp
jnp
int
xlat
xor
jecxz
stos
bound
movsb
mov
in
shlb
cmpsb
fs
xchg
push
rorl
sbb
cmp
xor
leave
rcr
xchg
clc
addr16
cmp
pushf
rcll
adc
test
inc
xor
xchg
into
push
pop
cld
add
and
xchg
xchg
push
daa
and
push
pop
push
push
hlt
outsb
imul
out
mov
sbb
out
mov
xor
inc
xchg
test
or
jle
sahf
cmp
xchg
movsl
add
out
lea
cmpsb
int
adc
rclb
jl
mov
aas
movzbl
outsl
or
pop
xor
repnz
fstps
sbb
cmp
mov
push
push
sarb
pop
arpl
sub
subl
jae
and
cmp
adc
pop
jnp
push
sub
adc
jg
test
xchg
inc
rclb
xchg
or
in
icebp
push
xchg
outsl
push
jno
dec
push
inc
cmpsl
shrl
xor
adc
mov
stos
inc
and
or
push
jne
or
sub
loope
xor
inc
add
lods
ja
sarl
adc
imul
push
dec
jb
mov
and
notrack
loop
movsl
fadds
sbb
into
push
iret
loope
ret
repnz
mov
and
ss
fwait
bound
ret
in
push
aas
fcmove
sbb
stos
mov
jle
lds
mov
je
pop
lods
outsb
dec
sub
icebp
leave
ja
test
adc
xchg
mov
loopne
xchg
adc
mov
ljmp
popf
lods
enter
xchg
pop
fidivl
movsl
hlt
jb
xor
mov
ret
xor
dec
loop
loope
dec
les
in
std
iret
mov
lods
aas
mov
dec
xchg
ret
insl
push
mov
repnz
jg
out
mov
push
aaa
lds
lods
push
in
inc
push
and
scas
frstor
and
popf
gs
movsb
cmp
sbb
jmp
shlb
mov
fsts
lock
out
pop
ds
adcb
adc
xchg
fisubrs
ljmp
cmp
je
insl
push
iret
push
in
leave
xchg
mov
or
adc
lcall
adc
jno
test
adcl
mov
inc
popa
loope
pop
sbb
push
test
add
dec
loope
inc
insl
cmp
xor
fidivrs
outsl
fstpt
jle
fcoms
test
inc
popa
in
xor
leave
adc
dec
inc
xor
push
and
lret
lea
hlt
add
inc
les
cwtl
mov
xor
stos
xchg
or
or
aas
sbb
and
cs
inc
stc
arpl
aad
stos
ds
sti
out
mov
dec
sbbl
mov
aas
mov
dec
in
cwtl
cs
mov
xchg
das
push
movsb
gs
into
faddl
push
mov
jne
and
cwtl
movsb
jne
fildll
iret
repz
sbb
repz
push
sbb
jp
mov
or
mov
or
and
cmp
mov
aad
or
and
or
loope
mov
lds
ss
or
add
das
adc
dec
stos
mov
lahf
xor
pop
xchg
jo
and
or
stos
push
adc
ret
out
sbb
and
gs
pop
xor
popa
lret
les
je
call
ret
or
sub
outsl
movsl
dec
jg
mov
pop
push
xor
dec
into
sbb
push
test
sti
imul
xchg
and
mov
es
adc
test
or
mov
mov
lret
sbb
stc
jge
cmp
repz
sbb
xchg
pop
repz
test
decb
add
xchg
jb
shll
dec
test
sbb
sub
fcmovne
mov
out
test
sub
out
stc
xchg
xchg
and
xor
mov
lds
or
flds
mov
lea
mov
hlt
mov
clc
rorb
jno
mov
test
or
sbb
pushf
jne
or
mov
repz
jnp
push
push
lock
ljmp
xchg
mov
mov
and
divl
bt
addr16
ja
inc
pop
pop
sahf
cld
adc
add
xor
sbb
jl
push
dec
inc
mov
pop
sbb
idivb
add
fwait
mov
aaa
adc
xchg
push
fildl
push
push
in
fcmovnbe
lea
bswap
out
scas
push
xor
jnp
pop
and
cmp
sub
stc
mov
adc
xor
cmp
test
or
pop
ds
sbb
push
loope
test
insb
shlb
xchg
inc
or
into
lock
insl
movsb
cld
mov
cltd
ss
in
jae
stos
sbb
mov
xchg
aas
repnz
push
jecxz
imul
fwait
lea
mov
pop
loop
lret
out
sbb
cmp
inc
icebp
scas
test
std
movsl
stos
shrl
inc
mov
cmp
stc
adc
add
xchg
int3
push
mov
dec
mov
bound
push
stc
mov
bound
popf
cmp
push
mov
out
sbb
dec
xor
dec
and
mov
mov
je
test
mov
xor
add
lahf
xchg
lods
sub
jno
insl
push
mov
in
or
aam
jae
dec
jne
adc
fcomi
push
jne
jge
pop
repz
out
mov
stos
dec
arpl
dec
movsl
stos
lods
fisubrl
xchg
mov
jo
negb
fidivs
or
push
test
sub
fst
sub
mov
roll
es
sbb
dec
jge
cld
mov
xor
and
jmp
pop
dec
or
sub
jmp
push
rcrl
push
sbb
ret
int3
xor
cmp
cmp
xor
scas
loope
sub
loope
and
xor
ljmp
ret
xchg
testl
sub
or
cwtl
jmp
push
out
lret
cmc
lcall
mov
fidivs
push
call
mov
daa
sub
ret
jmp
push
mov
repnz
lcall
lcall
into
aas
cmp
insl
mov
and
jecxz
jl
dec
push
cmc
in
fs
push
popa
mov
iret
lret
scas
sbb
push
sbb
imul
imul
push
in
sti
mov
mov
idiv
xor
int3
cmc
add
lret
std
xchg
js
sub
fsubp
and
test
lods
das
fistl
or
lods
pop
adc
push
cmpsl
adc
add
dec
repz
dec
pop
and
mov
cmpsb
sbb
addr16
lea
xchg
popf
mov
sub
mov
out
pop
fcoms
shll
jmp
inc
stc
push
xchg
xchg
lret
push
imul
mov
pop
fldl
mov
clc
icebp
sahf
int
std
popf
mov
test
imull
inc
test
adc
ss
mov
dec
test
and
mov
push
mov
jp
int3
cmc
outsl
and
and
dec
jns
pop
fsubs
pusha
jecxz
fcmovnbe
test
imul
push
cmp
inc
sbb
icebp
dec
or
push
mov
mov
test
xchg
clc
push
xchg
and
std
mov
pop
mov
call
repnz
push
lods
aaa
pop
fistpll
mov
sbb
gs
or
out
or
mov
lds
outsl
notl
es
jnp
sub
pop
jns
mov
jl
push
sahf
and
dec
jmp
jno
jge
aad
and
lods
aad
inc
adc
jl
xchg
push
add
adc
xor
dec
mov
inc
pop
out
adc
and
lea
lret
dec
repnz
mov
add
sti
mov
xor
jnp
movsl
xor
rolb
xchg
dec
cmp
out
bound
inc
bound
ficoml
dec
fwait
test
and
sbb
and
aas
jo
pop
inc
nop
cwtl
outsb
imul
or
mov
scas
pop
add
scas
out
aam
shll
repnz
test
cs
sub
cmc
jmp
jmp
repz
sub
xchg
cld
pop
test
adc
sub
mov
xchg
push
fcom
lods
cmp
mov
mov
js
stos
mov
leave
mov
icebp
gs
dec
cld
pop
jno
push
sbb
aas
data16
push
dec
add
mov
cmp
loop
xchg
cltd
test
lods
jle
loopne
mov
lock
lods
inc
jb
pop
push
xchg
adc
jmp
mov
lahf
sahf
mov
jmp
imul
xchg
dec
jae
mov
sub
cmp
pop
inc
mov
and
push
inc
pop
popa
or
mov
repz
insl
xchg
push
repz
cmp
je
sbb
inc
pop
push
fsubrl
repz
mov
dec
cmp
incb
icebp
mov
call
lock
sti
jns
or
orb
pop
sti
or
mov
sbb
insl
pop
inc
mov
mov
lcall
ds
aam
js
nop
fiaddl
dec
jmp
jg
cmp
test
xor
mov
in
cmp
addr16
arpl
push
or
insb
popf
fisttps
cmp
sub
sbb
test
sub
add
sti
add
mov
test
sbb
pop
ret
mov
push
sbbb
jmp
dec
sub
push
jnp
movsb
pcmpgtd
sub
jbe
popa
mov
outsl
jo
in
mov
push
sar
pushf
aad
push
rcl
idivl
mov
filds
aas
pop
rorb
es
push
insb
jle
cwtl
idivl
xor
xor
stos
dec
push
cmp
daa
je
sbb
or
loope
loope
pop
sub
dec
xlat
lock
cmc
iret
inc
push
mov
gs
mov
int3
adc
xchg
mov
fisubs
xchg
js
lahf
fisubl
faddl
xor
mov
sbb
add
pop
out
sub
inc
mov
xor
sub
outsl
scas
jae
or
fcompl
lods
push
add
mov
push
loopne
xrelease
cmpsl
cmp
push
insl
jmp
or
or
ja
arpl
scas
int
mov
jl
sub
dec
stos
or
nop
roll
cmp
pop
xor
adc
mov
mov
mov
and
pop
insb
ljmp
add
das
mov
mov
sub
pop
jp
lret
daa
lea
mov
dec
mov
pushf
jns
ret
testl
fidivs
mov
into
mull
jmp
push
xor
sahf
jmp
push
movl
or
ja
mull
push
xchg
push
cmp
imul
icebp
add
popf
arpl
icebp
mov
sti
mov
repnz
push
rcrb
push
dec
lret
mov
popa
pushf
or
push
mov
inc
or
pop
mull
xchg
ss
xor
mov
sbb
dec
xchg
lcall
pop
jno
in
scas
es
push
mov
fisttps
jp
fnstcw
mov
call
out
out
pop
xchg
test
adc
push
or
cmp
add
sbb
lret
lea
and
ja
mov
sub
push
sub
push
loope
cmp
cmp
xchg
or
lea
jne
push
xchg
cmpsl
inc
fbstp
push
lds
fucomi
and
xchg
mov
sub
pusha
imul
es
mov
js
inc
ds
stc
shr
call
push
cltd
addr16
mov
and
mov
mov
pop
xlat
push
pushl
push
dec
bound
loop
mov
int
out
pop
inc
ds
ljmp
or
clc
addr16
push
fisttpll
les
pop
mov
leave
xchg
lods
cmc
in
xchg
mov
outsb
jecxz
sbb
dec
sub
mov
sub
push
mov
vcvtpd2dqy
stos
xlat
je
push
negl
pop
adc
movsb
lret
dec
loope
dec
and
cmp
cmp
ret
loopne
popa
addb
arpl
imul
sub
pop
test
sub
add
pusha
mov
repz
fwait
aaa
movsb
in
mov
or
fstpt
add
mov
xchg
fbld
aaa
sbb
cltd
adc
or
jns
nop
inc
adc
jg
es
or
jne
xchg
mov
std
dec
dec
push
mov
ret
adc
popa
pop
sbb
movl
push
cmpb
xor
xchg
jp
adc
stc
mov
xlat
mov
pop
jnp
mov
andl
add
lods
scas
dec
gs
mov
shll
sbb
sub
ret
sub
lret
clc
in
cmp
out
fdiv
or
xchg
iret
jmp
xchg
fs
and
out
std
push
inc
leave
imull
xor
bound
cmp
shr
cld
popf
cmp
jg
jno
fisubl
push
ret
mov
and
mov
iret
mov
mov
leave
adc
test
xchg
in
xchg
add
mov
jo,pn
scas
cltd
lods
lods
in
hlt
jne
xorl
xchg
or
mov
daa
sbb
inc
push
mov
pop
in
xor
leave
les
int
sbb
inc
bound
jg
cmpsl
xor
aaa
fnstcw
jmp
add
cltd
icebp
iret
add
lret
cmp
movb
push
fidivl
loop
fnstenv
xor
pop
jnp
mov
stos
sub
or
jp
and
lds
pmuludq
fcomi
js
scas
sbb
push
in
mov
shrl
stos
xor
or
xor
fs
stc
dec
mov
push
out
lods
xchg
dec
dec
iret
xchg
mov
repz
arpl
cmp
mov
iret
int
das
filds
shl
cwtl
push
xchg
lret
int3
adc
cld
mov
jae
mov
pop
movsl
scas
push
adc
daa
lea
ja
adcl
mov
push
popa
jno
testb
dec
int
pop
adc
sub
adc
std
add
fdivs
sub
add
jl
and
mov
mov
and
fnstcw
dec
mov
push
stc
jnp
dec
popf
add
cmpl
adc
sub
mov
mov
call
xchg
adc
dec
fstl
fs
in
int3
shll
pop
xlat
sarl
add
push
and
mov
inc
inc
add
fwait
jb
leave
jae
and
mov
sarl
aad
insl
cmpsb
and
inc
push
adc
mov
adc
fdivs
mov
mov
inc
hlt
ljmp
push
pop
sbb
mov
popa
jge
ds
push
sbb
in
jecxz
inc
cmp
idivb
lea
arpl
push
cmp
sti
push
iret
dec
xchg
fwait
stc
jb,pn
mov
fwait
push
lret
fsubrl
rcl
pop
imul
and
sub
xor
or
mov
adcl
mov
icebp
add
xchg
lahf
shll
stos
pop
test
jmp
cmp
jne
dec
popa
mov
enter
pop
stc
add
mov
inc
gs
bound
push
popa
dec
xor
xor
repnz
fists
sub
sahf
pop
xlat
ljmp
cs
addr16
gs
cmp
cs
mov
cld
int3
dec
mov
aas
in
or
xchg
les
mov
mov
hlt
jbe
shll
faddp
sbb
sbb
movsb
insb
sti
dec
cmp
loope
push
mov
sti
dec
mov
cmc
cmp
pop
lea
dec
mov
mov
lcall
mov
and
les
mulb
into
call
push
or
push
iret
xchg
xchg
jns
adc
movsb
or
mov
insl
sub
mov
rcrb
mov
lcall
inc
xchg
sub
mov
inc
sti
inc
iret
jecxz
enter
adc
mov
bound
xchg
inc
mov
and
cmp
jne
xchg
push
fsubs
insb
shlb
repz
test
push
imul
shrb
orb
pop
scas
rclb
mov
leave
fisubl
insl
test
mov
jg
ds
lea
inc
jbe
and
xchg
cmpsl
out
jl
cmp
repnz
ja
and
jb
and
pop
cld
movsl
add
cmp
or
outsb
cs
mov
jns
lods
mov
pop
cmp
scas
movsb
xchg
lea
xor
loop
stos
sbb
sbb
mov
imul
xor
mov
add
js
enter
jecxz
outsl
dec
lret
dec
insl
inc
cmc
sbb
jl
lods
mov
cmp
xor
jae
pop
jbe
out
jbe
cmp
pusha
out
test
js
ror
gs
ss
aam
nop
lds
sbb
ss
insb
or
in
mov
ficompl
inc
pop
jo
js
scas
sahf
std
push
mov
lret
mov
in
popa
mov
imul
in
fnstcw
int3
lahf
mov
std
nop
xchg
mov
jae
pop
filds
jnp
sbb
cltd
out
aaa
cmc
cli
stos
dec
jo
leave
jp
and
push
pop
popf
or
scas
push
ret
mov
jmp
in
mov
ret
push
dec
negl
call
out
scas
icebp
daa
lahf
adc
sub
sub
fmulp
outsb
daa
cltd
adc
icebp
in
xlat
xor
incb
dec
jle
push
jmp
stos
xchg
jnp
xlat
mov
sub
adc
sahf
mov
sbb
lds
inc
data16
xchg
push
pop
xor
aam
nop
mov
inc
sub
popf
insl
lock
insb
cmp
cmp
call
into
sti
stos
stc
push
sbb
push
cmp
or
mov
mov
push
mov
jnp
jge
js
mov
push
or
adc
cmc
jae
pop
jns
adc
aad
imul
cmp
sub
enter
ret
ja
jo
sbb
jb
out
lcall
pop
ja
or
pop
fiadds
pop
jb
aad
xor
add
inc
in
xlat
xchg
adc
or
in
lods
pop
test
push
lock
mov
sub
mov
xor
repnz
add
outsl
in
xor
out
push
fsub
mov
mov
lret
sbb
enter
dec
pop
mov
sbb
lahf
jns
lahf
imulb
push
sar
mov
mov
push
jns
jae
testl
jnp
mov
or
cld
js
lcall
mov
adc
lea
mov
add
jns
cwtl
int3
jbe
mov
add
scas
inc
push
lret
jp
and
jnp
outsb
hlt
aad
sub
orb
mov
adc
mov
sub
adc
cmp
mov
imul
jecxz
jg
popa
adc
ss
xor
cmpsb
jl
and
adc
xchg
inc
push
push
sbb
push
push
and
popa
lods
pop
and
inc
mov
fwait
jmp
pusha
popf
fs
leave
clc
fimuls
and
lock
mov
in
xchg
scas
sbb
in
rol
fidivrs
fldl
and
jl
mov
and
rcrb
xor
push
mov
arpl
adc
xchg
pop
fldt
jmp
lock
inc
enter
xchg
fs
cmp
cwtl
jb
sbb
cmc
and
cmp
into
lods
pop
cmp
jo
movsl
inc
lea
or
or
add
mov
push
aas
cmp
ds
lret
jb
fisubs
stc
push
loopne
sbb
xchg
push
adc
lea
sbb
inc
mov
ljmp
mov
jl
dec
je
adc
add
adc
dec
add
dec
hlt
jo
pop
inc
sbb
sub
pushf
or
loop
mov
cwtl
test
lds
stc
lahf
jae
add
es
xchg
insb
inc
sub
adc
adc
les
push
mov
in
ret
xor
mov
push
add
add
sub
incb
dec
add
sub
mov
icebp
bswap
inc
ds
pop
pop
inc
outsb
leave
aas
mov
mov
mov
xor
in
lcall
add
push
fcoml
subl
mov
push
xor
lea
ljmp
daa
scas
dec
ja
jbe
fnstenv
int
aad
shll
gs
push
sub
scas
add
mov
pop
pop
cmpsb
or
jmp
mov
mov
lods
dec
sbb
pop
xchg
and
cli
mov
loop
popf
sahf
out
and
xor
test
push
adc
in
mov
popf
adcb
jns
int3
icebp
stos
idivb
popa
push
mov
mov
jl
icebp
mov
sbb
arpl
or
push
and
movsb
push
sub
pop
and
adc
jns
hlt
ds
jmp
xor
add
xchg
adc
icebp
sub
arpl
inc
cmp
mov
rorl
sbb
stos
sbb
iret
aaa
ljmp
push
xor
and
inc
imul
pop
jmp
jp
push
aaa
and
test
cmp
fwait
mov
inc
mov
test
sahf
addr16
jmp
jecxz
out
mov
bswap
pop
and
enter
gs
ss
mov
sub
fnstsw
shrl
jp
lret
mov
cmp
sbb
pop
and
inc
bound
xchg
outsl
out
imul
ljmp
in
mov
test
cwtl
dec
rorl
popf
cmp
and
fdivrs
and
push
mov
add
xor
sub
sub
fmull
or
call
jns
or
insl
scas
mov
cltd
int3
mov
aaa
push
insb
fiaddl
mov
mov
inc
jb
aam
scas
mov
lds
push
inc
lret
loop
insb
cmpsb
pusha
les
sahf
ret
push
xchg
mov
and
aam
clc
test
aam
in
lret
mov
pop
test
push
cwtl
dec
xchg
xor
xchg
jp
sbb
push
pop
add
into
inc
mov
sbbb
mov
push
dec
aad
outsl
subb
out
pop
or
enter
jg
push
pushf
sub
icebp
or
push
enter
sbb
int3
mov
pop
push
mov
inc
sub
sbb
call
ljmp
or
xchg
mov
or
sbb
test
fdiv
loope
loope
test
out
or
cmp
mov
mov
and
or
and
enter
xchg
iret
aam
shlb
and
pop
test
mov
or
and
add
xchg
or
mov
fldenv
xchg
cmp
repz
jo
mov
and
add
fyl2x
push
mov
shlb
mov
xchg
adc
push
stos
or
push
psrlq
mov
stos
fs
inc
imul
xchg
repz
inc
aad
pop
mov
les
xchg
repz
add
mov
lods
aaa
repnz
push
push
ret
fdivrl
fadd
inc
xor
mov
add
pop
insl
push
stos
add
xchg
xor
push
sbb
popf
sbb
cmp
jnp
out
cmp
dec
mov
mov
pop
xchg
inc
xchg
inc
push
xor
jns
sbb
mov
dec
sbb
or
sahf
rolb
pop
jg
push
fwait
inc
sub
and
fbld
and
dec
outsb
pop
cmp
psrlq
xchg
shrb
sbb
push
fs
stos
sbb
sahf
into
sbb
movsl
xchg
call
into
and
in
add
rolb
in
das
sub
jb
push
adc
xor
mov
iret
popa
lods
mov
lods
sub
mov
jne
inc
cli
lds
lods
mov
mov
cli
sub
and
mov
and
sub
xchg
mov
cs
dec
inc
xchg
pop
or
xor
inc
sbb
in
xchg
sbbl
lds
mov
nop
mov
shlb
sarl
sub
sbb
fisttpl
outsb
lds
ret
aad
dec
mov
fldenv
rcrl
movsl
rolb
jbe
pusha
std
insl
jnp
mov
mov
pop
ret
xlat
xor
push
jmp
pop
pop
and
mov
repnz
jmp
sub
pop
xor
xor
push
ficompl
sbb
in
adc
lods
inc
mov
mov
mov
call
ret
sub
insb
mov
ficompl
insb
mov
fiadds
push
imul
add
lea
outsl
aaa
mov
or
push
clc
inc
sub
into
push
in
pop
hlt
inc
jecxz
call
xlat
addl
mov
les
cmp
movsb
and
jmp
aas
push
and
mov
fwait
xor
push
pop
push
dec
push
dec
inc
sahf
pop
xchg
push
pop
mov
popf
daa
rclb
jecxz
pop
xchg
clc
roll
out
add
stc
loop
xorb
push
and
mov
movsb
out
xchg
loope
mov
mov
lock
repz
inc
dec
sbb
mov
xor
xor
sub
lret
mov
cwtl
inc
xchg
packsswb
jo
mov
lds
push
ds
or
mov
pushf
addr16
outsl
andl
sub
negl
or
out
imul
xchg
or
xchg
mov
ds
mov
add
inc
mov
decl
repnz
jbe
dec
inc
adc
test
js
aaa
ffreep
js,pt
mov
xor
gs
push
jg
push
dec
sub
mov
pusha
hlt
xchg
lods
pop
add
xor
pop
pushf
cmp
mov
jae
call
and
aam
fnstcw
sbb
mov
mov
nop
and
imul
pusha
imul
test
jb
mov
adc
ss
push
and
jp
push
cmpsl
xchg
push
jb
mov
mov
in
cmp
dec
xchg
add
inc
push
adc
ret
or
inc
cwtl
cmp
cmp
jmp
jnp
jecxz
xchg
icebp
dec
icebp
mov
pop
roll
pop
pushf
dec
in
stos
decl
push
and
mov
inc
lds
dec
xchg
imulb
rcrl
jl
pop
dec
orb
leave
push
jl
mov
push
and
popa
xchg
and
fs
ret
out
mov
mov
jbe
push
or
mov
jle
fnsave
push
icebp
insl
xchg
push
mov
mov
sbb
mov
je
stos
movb
and
insb
jge
ja
dec
add
cmc
adc
fucom
dec
imul
call
inc
aas
int3
loop
lret
out
aaa
xchg
xchg
stos
lret
fiaddl
pop
repz
cmp
adc
sbb
push
sub
inc
je
push
sbb
inc
aas
add
rclb
xor
in
in
lds
shlb
xchg
sub
jmp
sar
out
insb
push
mov
push
idivl
outsb
cli
sahf
fbld
bound
lret
clc
lahf
sub
mov
mov
push
hlt
mov
or
mov
dec
test
mov
subb
xchg
push
fildll
lea
imul
not
cs
stos
stc
cwtl
sbb
inc
add
pop
loope,pn
xor
mov
sub
jp
cs
ret
inc
pop
icebp
add
mov
push
arpl
outsl
add
add
imul
popl
push
std
test
cmpsb
pop
enter
aam
enter
cs
icebp
push
out
js
addl
push
push
pushf
xchg
xchg
addr16
push
loop
shrl
adc
jge
sti
add
xchg
in
jns
cmpsb
jmp
dec
inc
jbe
pop
mov
or
lods
insl
outsb
xorb
or
inc
xchg
sahf
sbb
jp
and
sub
dec
pop
pop
into
test
lds
loopne
mov
mov
jno
mov
jmp
jecxz
fbld
jp
jmp
test
hlt
sarl
dec
fwait
cmp
gs
movsb
pushf
cli
stos
fs
lahf
ffreep
sbb
jp
sbb
fnstenv
push
cmp
dec
mov
bound
add
popf
push
jg
out
inc
lock
add
shll
lock
xor
mov
xor
mov
or
cmp
xor
dec
vpaddusw
or
xchg
cmp
orl
and
sbb
loope
fistl
lock
in
or
push
int3
das
push
add
xor
sub
loopne
cmc
lods
jle
pop
xchg
adc
dec
fwait
mov
and
lods
or
inc
jmp
mov
mov
insb
test
out
or
jge
push
push
pushf
and
mov
dec
pusha
cmp
fidivl
jns
cwtl
fists
and
mov
rclb
out
add
clc
int
fadds
xchg
leave
mov
mov
jbe
xchg
mov
sub
mov
jne
sti
call
movsb
mov
mov
je
in
mov
movsl
adc
fisubs
mov
fimuls
cmp
movb
inc
pop
in
inc
sub
sub
add
ljmp
push
xchg
cmpl
xchg
in
lret
mov
jg
jo
ret
data16
les
pop
inc
sub
and
lret
repz
cmc
in
push
iret
adc
out
sbb
call
lea
popa
fwait
dec
xchg
push
pop
movsb
push
orb
or
push
and
andb
fwait
mov
in
adc
xor
mov
aaa
out
dec
lds
xor
push
nop
popa
mov
cmp
mov
dec
imul
aas
addb
mov
xchg
inc
sbb
fistps
sarb
mov
mov
mov
dec
gs
popf
push
and
mov
aad
mov
nop
mov
adc
cmpsb
push
jb
dec
jns
jle
or
or
xchg
aas
mov
lea
stos
sub
dec
pop
mov
push
pushf
dec
out
adc
jns
fs
loopne
das
cmp
jbe
daa
pushf
cmp
adc
ret
add
cmp
dec
aaa
pop
or
test
xchg
mov
mov
cmp
mov
dec
jbe
sbb
mov
adc
sbb
add
outsb
xor
sbb
es
mov
inc
jmp
popf
jp
popf
sub
push
jge
ss
mov
sbb
push
mov
or
pop
inc
cmpsb
jnp
xor
punpckldq
jge
cmp
mov
sbb
xorl
mov
rcl
cmp
push
sar
mov
dec
mov
jp
push
jl
mov
pushf
jae
sbb
test
dec
pop
inc
xchg
shll
adc
incb
jnp
loopne
mov
adc
cwtl
xlat
scas
push
xor
aad
pop
mov
cli
xchg
jmp
mov
lret
lahf
push
cld
test
sub
mov
fildl
push
outsl
lret
jle
dec
xor
add
rcrl
jnp
push
fcmovb
sbb
in
mov
es
fcmovnb
ja
sub
notl
or
xchg
push
and
jmp
inc
xchg
xor
ljmp
xor
inc
pop
gs
shll
adc
push
sbb
in
insb
mov
test
add
xor
jmp
fisttpl
push
mov
dec
idivl
mov
shrl
inc
adc
bound
lea
xor
out
mov
fld
pop
in
mov
insl
mov
int3
pop
push
sub
or
push
xor
arpl
pop
mov
icebp
push
lea
pop
mov
fistl
push
fisttpll
gs
fistl
lock
aam
dec
movsb
insl
pop
cmp
jle
icebp
mov
mov
popa
lret
xchg
shl
add
push
jp
xor
xor
jecxz,pn
dec
push
mov
and
push
lods
dec
adc
sarl
sub
in
nop
ret
and
out
sti
sbb
out
xor
fnstenv
xchg
mov
add
ds
in
mov
jle
xlat
stc
fcoms
or
pop
shl
out
enter
xor
sahf
sub
je
push
inc
xor
push
outsl
xor
inc
lret
icebp
inc
push
insl
cltd
lahf
loop
mov
aas
cmp
push
push
int
movsl
jne
icebp
mov
or
mov
cmp
push
fwait
arpl
mov
adc
dec
inc
push
inc
lret
mov
clc
pop
shrl
adc
subb
jmp
mov
adc
dec
ficomps
pop
movsb
adc
test
cs
and
lods
mov
xor
in
mov
pop
cmpsb
mov
lods
dec
int3
pop
cs
ret
cmp
xchg
popl
push
add
sarl
into
leave
call
or
out
mov
aam
pop
setno
jno
add
test
pop
push
jecxz
and
push
jmp
sbb
dec
push
cltd
mov
dec
pop
in
loop
dec
mov
xchg
xor
nop
mov
inc
pushf
clc
dec
jno
inc
sub
jbe
mov
add
movsb
jmp
jne
ljmp
enter
cmc
addr16
aaa
mov
movsb
fisubrs
xchg
pop
dec
pop
ret
xchg
ret
out
std
and
cmp
cmp
xor
loopne
movb
push
xchg
sub
out
daa
sar
scas
ret
test
and
xor
aas
je
xor
dec
das
stc
jbe
imul
cmp
inc
inc
pop
xchg
inc
pop
pushf
jg
sbb
jnp
sbbl
dec
lods
sub
or
or
adc
mov
xorl
popf
mov
fsubrs
loop
mov
push
arpl
jle
mov
mov
loope
xchg
stos
jg
and
or
xchg
mov
pop
pop
adc
insl
pop
mov
inc
out
push
jb
xlat
in
cltd
or
dec
and
xor
ja
mov
sbb
aad
stc
and
imul
jge
fidivrl
mov
mulb
lret
inc
cmp
inc
mov
xchg
aam
or
pop
sbb
inc
call
aad
aad
push
push
mov
push
adc
out
repnz
ficoms
iret
ja
pop
or
or
and
adc
add
add
gs
data16
outsb
mov
ret
xchg
lahf
dec
rorb
ret
repnz
sbbl
mov
and
cld
hlt
sub
repz
mov
bound
dec
or
movsl
mov
mov
aaa
jge
test
cmp
add
pop
xchg
mov
and
xor
sahf
add
lock
ja
adc
or
adc
jg
xchg
add
push
pop
push
cs
shr
out
ljmp
push
add
xchg
dec
rolb
dec
negb
dec
push
jno
popa
jno
out
pusha
lcall
daa
xchg
sub
ror
ret
jle
adc
pop
mov
xchg
pop
sbb
adc
mov
sub
out
adc
sub
pop
sub
xchg
iret
jb
je
into
ds
add
andb
out
sub
or
pop
pop
in
andb
cmp
lahf
cmc
fwait
lahf
sti
sub
xchg
rolb
dec
xlat
pop
mov
into
aas
lret
fisttpll
cmc
mov
jge
sbb
setl
ss
inc
or
inc
rcrl
sbb
popa
dec
push
mov
xor
lds
shrl
enter
jb
and
and
jg
push
or
xor
stos
pop
fmull
pop
xlat
push
stos
data16
push
int3
mov
pushf
adc
adc
jno
adc
jno
adc
mov
dec
sbb
add
jecxz
shll
jmp
out
les
dec
sarl
mov
lds
jae
pop
pop
shlb
vpshad
loop
xor
pop
jnp
inc
pushf
mov
pop
jns
cmp
mov
xor
and
insl
in
pop
rcrb
fisttpll
inc
repnz
add
or
out
divb
stos
xor
popa
ret
cld
lahf
or
inc
jecxz
sub
sbb
xlat
pushf
lods
lret
inc
adc
dec
pop
jle
jecxz
lods
rcrl
loopne
pop
cli
in
sub
mov
dec
lods
sub
mov
ret
jae
pop
jnp
dec
lock
inc
mov
into
repnz
add
fistps
dec
cltd
jle
xchg
lea
out
mov
aas
jge
inc
inc
sub
aas
sbb
mov
shll
test
inc
inc
cmp
shrl
fisubs
sub
loope
addl
into
push
xchg
dec
ret
ds
or
lods
test
add
das
popf
mov
cmpsb
aaa
popf
fstps
call
xor
sub
jle
pop
adc
sub
sahf
into
add
and
jge
xor
std
sti
xchg
in
out
pop
push
or
aaa
push
pop
push
pop
rcrl
mov
cld
dec
rorb
dec
rclb
mov
inc
jnp
xlat
mov
or
jne
inc
dec
add
pop
push
inc
cli
test
loop
xchg
mov
fistpl
xchg
jbe
outsl
and
jb
pop
mov
add
jns
sub
ja
push
gs
add
cmp
insl
jnp
jbe
lds
pop
outsb
test
xchg
fucomp
xor
in
add
xchg
pop
cmpsl
clc
inc
cmp
jecxz
mov
lcall
push
je
inc
leave
lsl
and
lret
test
mov
push
outsb
xor
push
or
ret
cmp
int3
inc
into
lock
jmp
cmpsb
jp
sub
and
cmp
mov
add
int3
dec
dec
pop
jmp
icebp
jg
jl
xchg
loop
adc
rcll
xlat
les
sub
pop
jp
xchg
imul
xor
mov
mov
in
pop
jnp
dec
test
jmp
popf
out
adc
jmp
ss
hlt
pushf
mov
mov
inc
cmc
or
mov
pusha
push
decb
adc
dec
out
addb
lds
dec
pop
aad
sbb
cmp
adc
sahf
stc
xor
fidivrs
enter
int
loopne
daa
loop
dec
adc
and
xchg
lods
xchg
jecxz
fldl
cmc
or
cmc
jl
jmp
into
enter
sbb
mov
loope
popf
xor
jnp
xlat
xchg
push
fdivrs
imul
push
jp
and
mov
or
insb
jbe
mov
fcomi
call
lret
cmp
shl
fsubrl
pop
dec
cmp
in
mov
mov
outsl
hlt
shll
aas
xor
not
iret
fistpl
dec
xor
inc
or
sahf
into
mov
xor
fisubl
add
inc
ror
ret
push
sub
xchg
add
stos
dec
lahf
pop
notb
and
lea
hlt
push
movsl
and
stc
mov
imulb
lods
sbb
mov
push
sub
dec
cmp
gs
rorb
icebp
adc
mov
dec
les
jp
imul
js
inc
lcall
shlb
rcr
jae
adc
aaa
cmp
or
push
inc
xchg
insb
cmp
mov
daa
and
add
pop
jmp
cmc
scas
mov
dec
cmpsb
imul
scas
cmpsb
xor
dec
push
xor
push
rorl
aas
and
push
mov
jae
and
lods
mov
insl
jg
mov
push
xchg
sbbb
jmp
mov
mov
ds
loopne
dec
xchg
fldt
arpl
leave
xchg
sub
cmp
dec
daa
das
inc
nop
mov
xchg
jge
jae
sahf
insl
xor
push
cwtl
and
dec
mov
sahf
inc
xor
pusha
xchg
cmpsb
cmc
mov
fstps
mov
jne
adc
addr16
mov
fcmovu
adcb
dec
movsl
shll
push
lds
out
sub
inc
mov
das
out
cmp
int3
sub
stos
fs
iret
jle
mov
fldt
cmp
cmp
test
cltd
xor
out
insl
add
pop
add
mov
insb
add
and
and
mov
jg
or
xor
xchg
shll
clc
out
sbb
js
std
push
rol
popf
dec
aas
cmp
dec
adc
loope
adc
xchg
mov
cmp
mov
inc
push
shll
andl
xchg
lea
mov
insl
mov
shrl
mov
mov
cmpsb
sbb
hlt
add
nop
movsb
scas
ja
out
fs
rcrb
lahf
mov
std
leave
sbb
adc
mov
mov
out
daa
ja
xor
js
xchg
dec
out
mov
ret
sti
mov
rolb
nop
enter
push
lods
jg
outsl
pop
push
adc
rolb
jbe
into
negl
notl
push
xor
arpl
into
shrb
shll
or
push
mov
lcall
mov
inc
push
cmpsb
pop
clc
test
fcoml
popf
jecxz
enter
push
decl
iret
pop
int
inc
and
mov
int
xor
hlt
xchg
ljmp
bound
mov
dec
lret
inc
add
aas
out
arpl
or
sahf
js
dec
les
imul
cmc
mov
adc
out
pop
mov
andl
ret
bnd
popf
cmp
dec
into
adc
push
adc
mov
sub
sahf
repz
fidivrl
adc
es
push
andb
and
sti
ja
cmp
cwtl
lock
shlb
jp
iret
cmpsb
cmp
mov
outsl
inc
pop
sti
xchg
push
or
orl
out
stos
cmp
js
pop
jle
push
sbb
xor
mov
cmpsb
andb
add
sub
pop
and
scas
push
sub
adc
sub
stos
out
fidivs
add
cmpsb
jg
xchg
xchg
fcoms
cld
repz
dec
dec
call
jge
inc
push
pop
pop
cvtps2pd
pusha
insl
and
lret
ror
daa
add
js
add
scas
push
inc
sti
pop
lret
mov
jne
lock
or
and
jo
sbb
xor
icebp
mov
scas
and
mov
nop
test
sub
and
mov
ja
xor
fiaddl
add
mov
nop
cwtl
or
mov
lds
out
push
xchg
imul
leave
stc
jne
fidivl
xchg
imul
xchg
push
test
roll
ja
xor
cwtl
push
das
std
out
xor
lods
xor
mov
xchg
lds
outsl
xchg
adc
mov
jbe
mov
mov
ds
in
inc
test
leave
ror
pop
lock
arpl
int3
or
jmp
jecxz
out
jne
pushl
ret
sub
aas
movb
into
loope
pop
inc
mov
popf
add
dec
imull
ja
into
idivl
push
mov
shll
cmpl
jp
adc
jle
in
and
adc
dec
movsl
loopne
adc
pop
lret
sub
in
std
shll
push
into
sbb
fdivrs
push
xlat
mov
fwait
aam
loop
add
push
xchg
inc
cmp
adc
mov
or
push
or
sahf
std
cmpsl
push
notl
dec
push
movl
sbb
xor
imul
xchg
push
mov
adc
push
test
imul
or
es
call
dec
inc
sti
adc
movsl
bound
insb
adc
mov
mov
adc
lcall
in
pop
ljmp
je
adc
pop
or
das
xor
inc
push
jecxz
shrb
cmp
and
pop
sub
jl
hlt
bound
push
and
fcmovnbe
cs
out
jg
lret
push
daa
sahf
pop
jnp
cmpsb
mov
ja
test
xlat
push
pushf
mov
ret
out
aad
decl
and
mov
adc
jge
adc
lahf
int
sbb
adc
push
push
inc
pusha
dec
loope
add
bound
adc
aam
push
and
jb
cmpsl
inc
cmc
or
ds
rclb
repz
mov
insb
mov
dec
cli
outsl
adc
push
jnp
test
push
adcb
loope
mov
out
fs
dec
or
fisttpl
cltd
jb
and
inc
cmp
xchg
adc
ja
punpckhwd
ljmp
xchg
adc
in
pop
dec
jl
imul
loope
mov
mov
push
add
inc
sbb
stc
push
push
xor
mov
and
cwtl
dec
bswap
xchg
mov
mov
mov
add
stc
or
inc
sbb
lahf
popa
dec
or
and
sub
pop
and
test
pop
bound
mov
fsubl
dec
mov
std
sub
les
in
jno
dec
mov
mov
jecxz
push
scas
push
outsb
inc
clc
or
andb
dec
lret
jbe
or
jge
mov
xlat
mov
jecxz
shlb
ja
inc
adc
dec
rolb
xor
jg
pop
cmpsb
adc
fldenv
xchg
mov
or
mov
lods
mov
add
shrb
fstl
inc
sub
or
sarl
xor
xlat
sub
aaa
inc
sbb
xchg
cmpb
cltd
popa
xor
fistps
add
test
mov
push
mov
rorb
test
jg
pop
add
dec
repz
imul
sarl
leave
aas
xchg
stos
movsb
pop
js
nop
iret
push
jae
cwtl
jns
aad
sub
cmp
mov
or
sub
mov
add
out
mov
ja
sub
xlat
xlat
sbb
shrb
dec
jae
mov
dec
xchg
jg
out
movsl
dec
rcrl
bound
in
gs
dec
sub
mov
rorl
sub
test
mov
or
and
mov
in
test
fbld
test
jo
push
mov
push
inc
sti
jle
test
sbb
pop
inc
sbb
hlt
xchg
leave
and
stos
sbb
pop
rorl
mov
mov
dec
mov
cmp
push
dec
mov
cmpsb
sbb
mov
fldcw
ret
mov
leave
dec
jbe
loop
add
sbb
xor
jae
bswap
sti
out
insl
scas
test
ja
mov
lret
cld
addr16
jbe
insb
lcall
or
and
xchg
cld
negl
pop
fucomip
jecxz
inc
into
mov
xchg
mov
lahf
in
adcb
mov
cld
jo
jmp
cmp
roll
lea
jge
outsl
mov
push
inc
add
xor
cmp
out
pusha
mov
div
xor
call
push
jle
cmpsb
lods
je,pt
fsts
mov
cmp
sub
imul
jns,pt
fucom
or
out
xor
ja
push
out
pop
inc
adc
idivl
mov
jo
jno
jp
pop
popf
ficompl
test
mov
xor
adcb
insb
cmp
jb
inc
push
cli
decl
mov
cmpsl
insb
pop
out
jb
shll
cmpsl
pop
rcl
call
pusha
or
dec
xchg
jmp
aam
mov
in
add
jnp
push
push
mul
push
je
pop
push
mov
cld
jne
cmp
leave
adcb
outsl
inc
call
pop
gs
cmpsb
mov
add
add
hlt
loop
insl
cs
cmpsb
push
mov
mov
or
mov
adc
repnz
jmp
enter
sub
in
repz
push
sbb
push
inc
mov
push
adc
mov
das
lods
dec
sbb
sbb
pushf
pop
push
imul
mov
outsl
xchg
or
cwtl
pop
adc
cmp
in
adc
push
ja
xchg
or
adc
push
out
xor
jle
gs
and
and
jne
in
notl
push
lret
imull
sbb
mov
scas
mov
pop
or
xchg
sbb
or
xchg
in
addl
jl
iret
stos
fdivs
fwait
sub
jle
inc
xchg
fmuls
pusha
pop
adc
int3
shr
push
xchg
stos
pop
push
push
loop
jge
aas
loop
movsb
frstpm(287
cmp
and
jg
nop
push
lods
adc
or
pop
cmp
fstl
mov
outsb
cld
cli
jbe
adc
imul
cli
fcoml
test
lcall
pop
stos
rorl
adc
pop
push
pop
mov
pop
repz
dec
stos
fnstcw
add
and
push
xor
fwait
lock
pop
in
mov
mov
and
imul
dec
jns
arpl
iret
aad
or
sub
mov
scas
sbb
xor
or
cmpsb
std
cmp
xor
stc
fdivrl
ret
cmp
fcomps
adc
xlat
cs
mov
icebp
insb
mov
add
mov
in
xor
movsb
sub
cs
cmp
sub
leave
incb
jmp
daa
mov
xor
daa
test
std
fs
rcl
aam
adc
dec
xor
cmp
push
mov
jbe
insl
mov
in
icebp
xor
push
cli
xlat
loope
les
call
cwtl
mov
test
ret
push
dec
aam
sub
xchg
shr
sub
scas
enter
mov
jge
jae
or
cmp
cmpl
adcl
sub
test
cmp
xchg
mov
mov
mov
ficoms
sub
popf
sub
xchg
aaa
mov
fsubs
push
sar
mov
mov
fs
in
sbb
out
pmullw
std
push
mov
divb
adc
aam
outsl
mov
insl
arpl
iret
mov
xchg
mov
push
imul
xchg
mov
aas
xchg
pop
mov
mov
cwtl
stc
add
js
xor
cli
arpl
push
les
mov
dec
ja
cs
pop
mov
sbb
mov
jbe
mov
popa
out
enter
sbb
rolb
xor
sub
pop
push
add
sub
outsl
dec
cmp
sahf
xchg
out
lea
push
inc
dec
jecxz
and
nop
sub
push
movsl
pop
mov
loop
jg
fmull
mov
push
dec
dec
movsb
add
test
int3
stos
add
pushf
data16
sbb
clc
xchg
jne
jnp
je
push
mov
sub
dec
mov
iret
adc
hlt
mov
cmpsl
xorl
cs
mov
mov
gs
loop
mov
pop
in
or
arpl
movsb
push
lcall
aad
jge
xor
out
mov
jp
rorl
mov
fcmovb
mov
icebp
clc
lret
cmp
pop
in
xchg
hlt
stc
push
lea
clc
cmp
adc
cmp
lds
cli
js
jmp
loopne
gs
mov
push
int3
xlat
dec
cltd
push
jns
loop
lcall
fiadds
mov
and
xor
stc
pop
xchg
daa
arpl
dec
jae
lret
adc
imul
cmp
ljmp
jae
sbb
pop
pop
mov
cmp
xor
pop
mov
lods
inc
cmp
pop
imul
xchg
in
xor
cmp
pop
cwtl
outsl
jl
movsb
mov
push
cmp
cmpsb
mov
in
fldl
mov
jge
xor
in
xlat
mov
and
jo
rorb
xor
jae
xorl
aaa
adc
lock
xor
jl
add
or
jl
into
subb
ljmp
pushf
jb
push
cmp
inc
sub
mov
jno
sub
scas
jae
xchg
scas
xor
pusha
movsl
cmp
test
and
push
outsb
add
aad
js
adc
push
call
bound
repnz
pop
mov
jae
push
or
push
test
mov
sbb
xchg
jo
push
and
call
rcrl
cli
fistpll
xchg
into
pop
shr
inc
push
mov
hlt
and
sub
jge
imulb
in
popf
stc
jp
out
xor
ret
xchg
test
into
test
pushf
aam
cmpsb
jnp
cmpsl
test
mov
push
inc
gs
movsl
mov
gs
xchg
scas
cmp
sarl
xor
jnp
push
jge
cld
outsb
and
or
std
and
xor
fsub
adc
cld
out
mov
sub
jae
insb
cmp
outsl
lods
mov
call
cld
imul
fistl
cmpsl
sbb
adc
iret
push
pop
in
daa
cltd
push
pop
gs
or
data16
fwait
sub
or
adc
lea
xor
into
imul
popa
fistpll
ss
sahf
cmp
les
in
and
adc
xor
mov
sbb
sbb
or
leave
cmp
jmp
dec
pop
call
push
or
push
mov
dec
test
fcmovnu
jecxz
scas
das
xchg
shlb
adc
int
cli
aad
stos
mov
arpl
rorl
adc
out
sarl
push
push
mov
data16
mov
push
dec
hlt
cmp
push
rcrb
sub
sbb
sub
add
pop
js
rcrl
test
stos
lock
sbb
fiadds
dec
cmpsl
jmp
inc
mov
add
push
push
jp
dec
push
push
dec
movsb
out
xchg
scas
sub
and
push
out
aam
lods
mov
inc
cmp
rcll
mov
fs
push
outsl
stos
imul
cmp
ficoms
mov
lds
xchg
mov
pushf
jle
mov
loop
xor
xchg
lahf
dec
cmc
dec
imul
aam
mov
notb
mov
pushf
loope
sahf
scas
aas
mov
out
lds
out
mov
popa
mov
outsl
jbe
lcall
cmp
xchg
and
and
xor
mov
andb
mov
xor
leave
jo
inc
out
mov
mov
push
cmc
in
mov
cli
loopne
xor
dec
adc
loope
in
lahf
pushf
dec
or
in
cmc
call
sbb
stc
lahf
pusha
jbe
subl
mov
leave
ljmp
cmovp
xchg
movsb
leave
mov
cmpl
xchg
xor
xlat
outsb
hlt
les
jnp
jecxz
in
cmp
mov
mov
fwait
cmpsb
or
mov
mov
into
push
inc
dec
js
jo
lock
cld
xlat
adc
test
add
mov
add
lods
icebp
sub
jp
outsl
loopne
xor
and
sub
imul
add
push
inc
ret
mov
dec
cmpb
pop
xlat
into
nop
roll
roll
pop
mov
stos
jno
repnz
jp
iret
and
xchg
adc
add
xor
jl
inc
xchg
lds
mov
enter
arpl
int3
mov
fimuls
pop
pushw
cmp
xchg
mov
outsb
stos
xor
les
jg
pop
xchg
or
push
mov
out
jp
imul
cmp
pop
sti
in
add
cmp
pop
std
fwait
xchg
pop
rolb
je
aas
sub
cmp
cwtl
xor
push
fcompl
cmp
mov
out
push
or
and
sbb
imul
mov
pushl
mov
or
shrb
push
fs
or
out
into
adc
test
add
mov
xlat
jnp
adc
out
xlat
push
mov
sub
jecxz
addr16
adc
xor
jae
inc
add
jno
or
jbe
xchg
lret
pop
popa
out
add
cmpsb
movsl
rorl
add
jp
adc
dec
ja
mov
pushl
loop
push
jnp
and
push
xchg
adc
out
jl
or
cmp
cltd
nop
sbb
int
add
cmp
imul
lea
jecxz
fnsave
jecxz
xor
xchg
pop
add
xchg
test
inc
and
rolb
fcompl
dec
insl
inc
lahf
xor
pop
pop
decb
and
out
inc
gs
push
repnz
dec
mov
cmp
decb
dec
mov
call
pop
int
mov
iret
lds
scas
mov
push
sbb
daa
dec
push
dec
int
into
sub
add
lods
insb
push
xchg
aaa
adc
ja
hlt
scas
ss
subl
mov
out
stos
lea
das
lcall
cmp
stos
cwtl
filds
jae
icebp
cld
imul
mov
pop
cmc
iret
mov
push
in
pop
inc
mov
xor
leave
loopne
dec
insl
imul
popf
mov
mov
fisubrs
and
xchg
sbb
pop
pusha
inc
mov
jl
int
ljmp
dec
bound
movsl
cwtl
adc
adc
icebp
mov
lock
addr16
mov
mov
add
cmp
and
gs
nop
cmc
mov
mov
stos
mov
xchg
adc
into
test
mov
jmp
jbe
dec
mov
xchg
ja
imul
mov
mov
mov
mov
test
scas
ret
sub
sahf
stos
ret
push
sbb
int3
enter
insb
xchg
pusha
cmpb
mov
in
jno
ja
bound
std
loop
out
cwtl
pop
ds
dec
das
jb
push
sahf
or
fcomps
lret
dec
pop
dec
les
jg
in
add
xchg
mov
mov
cmpsl
sub
lock
push
mov
mov
clc
mov
push
sub
mov
rcrb
shl
or
js
out
push
dec
add
aaa
inc
add
inc
sub
out
or
jno
and
xchg
in
shlb
xor
shrl
adc
loopne
pop
xchg
jp
xchg
push
imul
push
scas
cmpl
inc
out
inc
in
mov
mov
cmpsb
lret
pop
add
ljmp
insb
iret
or
outsb
test
or
cltd
push
jl
xor
insb
popa
lods
aad
lret
fists
cmp
or
and
inc
xor
and
pop
and
in
inc
mov
xchg
mov
jo
mov
mov
cmpsl
dec
sub
cmp
pop
popf
xchg
insl
test
arpl
sub
push
cmp
cmpsb
stos
in
negb
or
jp
nop
sbb
push
mov
cmp
jg
jl
aaa
adc
jmp
xor
push
mov
dec
mov
cmp
xchg
dec
push
inc
inc
push
mov
loope
and
nop
cmpsl
stc
int3
push
xchg
cltd
sbb
mov
jmp
lea
add
mov
mov
push
fisubrl
sub
andl
mov
add
lods
xchg
xchg
or
cmp
cwtl
not
add
lock
xor
sub
or
fisubs
push
or
pushl
add
xor
cmpsl
mov
jle
mov
xchg
das
stos
add
in
repnz
fsubl
out
pop
out
pushf
bswap
dec
dec
cmc
inc
filds
mov
testl
insb
adc
sbb
dec
inc
shlb
adc
cmc
or
mov
mov
je
inc
cmp
adc
xchg
outsb
test
pop
in
push
inc
and
dec
shl
ss
xchg
jecxz
add
test
adc
inc
das
xchg
sahf
add
pop
jl
decb
icebp
nop
inc
leave
cli
lret
pop
stc
mov
sbb
cmp
mov
pop
into
loopne
push
and
or
repz
sub
outsb
icebp
lret
ss
xchg
cmp
push
dec
std
lock
pop
add
mov
clc
test
push
testl
push
jbe
jns
pop
rclb
push
add
outsl
pop
dec
and
mov
sarl
push
inc
outsb
sbb
mov
xor
push
jns
and
clc
aaa
dec
ljmp
jecxz
inc
jle
cltd
push
insl
stos
pop
stc
jno
jbe
xchg
mov
push
sti
loopne
xor
jo
stc
add
pop
cmp
push
pop
popa
dec
pop
mov
in
addr16
push
jbe
jnp
repz
xchg
mov
orb
ljmp
loopne
push
sbb
in
xchg
push
lret
jle
mov
adc
sbb
lfs
je
add
test
sbb
and
xchg
test
ss
scas
adc
pop
jp
aas
daa
inc
call
sub
jge
push
mov
fmulp
xchg
xor
icebp
loope
loopne
lret
les
test
lods
into
adc
gs
movntps
push
xchg
insb
lret
mov
jb
out
and
fwait
rorb
pop
int
jbe
mov
add
aad
repz
call
push
outsl
pop
xor
xchg
dec
push
shll
out
cmp
pop
mov
push
adc
jmp
dec
enter
mov
inc
add
adc
or
leave
sbb
jl
jmp
ss
add
xchg
or
add
mov
das
shlb
std
sti
out
jo
pop
cli
pop
sub
fdivrl
inc
sub
mov
inc
mov
lods
out
fisttpll
fcompl
xor
push
out
fiaddl
test
mov
mov
mov
pop
sub
fisttps
pop
xchg
mov
adcb
repz
out
inc
push
loopne
push
mov
add
add
jns
push
and
int3
dec
jno
bound
cmp
enter
test
mov
je
in
test
daa
ss
sub
add
add
dec
pop
cs
jle
mov
insb
jmp
loope
inc
dec
lcall
lods
add
jp
inc
popa
add
shr
mov
push
and
nop
sbb
mov
xor
stc
jl
stos
fs
int3
cmp
xor
fildll
mov
jno
adc
dec
mov
dec
jmp
dec
fldt
mov
cmp
mov
sub
xor
mov
cmp
xchg
mov
test
stos
mov
and
enter
cmp
push
mov
mov
sub
call
jbe
pop
jecxz
mov
xor
addr16
pop
out
cs
mov
insb
adc
add
lock
insl
and
mov
sarl
or
addr16
mov
mov
xor
int
and
sub
loopne
adc
and
imul
mov
idivl
imul
mov
jne
jp
shr
mov
mov
aad
pop
jecxz
mov
mov
inc
push
scas
dec
jp
in
test
xor
cmp
call
xor
popf
sahf
add
jle
jle
scas
mov
xor
nop
inc
xorb
cli
ds
pop
lahf
leave
into
repz
movsb
fimull
js
lock
and
rcr
dec
xorl
sub
sub
mov
xor
push
cmp
repz
dec
mov
outsb
sub
mov
push
jb
dec
xchg
call
out
cmpsl
push
cltd
jle
out
sar
sbb
inc
stos
sbb
push
jl
sbb
mov
dec
or
fdivs
push
xchg
repz
mov
mov
mov
insb
das
insb
or
pop
xchg
xor
in
add
test
or
into
nop
enter
sub
jb
icebp
mov
pop
xchg
sbb
jg
sub
mov
movsl
sub
jnp
xor
sbb
and
or
and
ja
out
xor
repz
ds
scas
aas
adc
xor
psubusw
fcmovbe
jne
cmp
cwtl
mov
xchg
mov
mov
mov
cwtl
cmpsb
mov
jns
inc
gs
and
cltd
xorl
lock
leave
push
pop
scas
cmovl
adcl
inc
push
pushf
enter
loopne
sbb
sbb
outsl
lcall
bound
adc
push
test
push
repnz
mov
mov
repnz
xchg
lods
jb
mov
dec
mov
arpl
icebp
jnp
stos
aam
mov
mov
cmp
pop
cmp
mov
mov
jno
call
fwait
pusha
jo
xchg
js
pop
lock
lods
fst
add
bound
test
mov
test
cltd
sub
add
imul
cmp
decl
pusha
ss
or
ljmp
xchg
dec
and
jecxz
pushf
lods
shll
xchg
add
addr16
mov
fistpl
sti
adc
sub
fcmovb
lret
cmc
fwait
jp
fcoml
sbb
pushf
mov
test
inc
out
dec
repz
xchg
push
sbbb
pop
jne
dec
rcll
lret
fldcw
pop
lcall
xchg
ljmp
je
into
pop
dec
sbb
hlt
and
ficomps
call
imul
cmpsb
scas
movsb
xorl
cmp
xor
rorl
push
rorb
pop
push
aad
jne
in
rorl
popa
push
pusha
loopne
xor
rorb
out
jne
scas
dec
stos
insb
rorb
cmp
sbb
outsl
lret
mov
jno
rorl
out
sahf
adc
mov
repnz
ja
pushf
cmp
pop
adc
cltd
stos
ds
fwait
xchg
mov
mov
cmc
and
jb
adc
fdivrs
mov
sti
push
out
ret
inc
and
add
sahf
pop
sub
mov
iret
sub
mov
pop
inc
cltd
xchg
xchg
lcall
push
xchg
sbb
fcomps
push
pop
sbb
ror
dec
mov
adc
mov
push
jbe
jge
popa
sub
aad
in
popf
sbb
cltd
mov
lcall
cmp
test
dec
rcl
aam
xchg
aas
fwait
imul
and
das
jo
int
pop
adc
cmp
dec
dec
mov
sub
js
add
xor
mov
vmread
fisubrl
leave
mov
and
bound
int3
or
arpl
pop
xchg
dec
cltd
clc
pushf
daa
or
addr16
pop
add
mov
cmpb
jnp
pop
cmpsl
push
scas
or
jae
adc
sbb
sub
movsl
xor
lcall
insb
lahf
mov
sbb
jecxz
add
jg
loop
cs
repz
or
xchg
add
xor
bound
xlat
xchg
mov
sub
stc
in
imul
pop
adc
ljmp
aas
and
enter
or
inc
daa
sub
xchg
or
jbe
pop
enter
pop
pop
pop
push
push
out
mov
icebp
aaa
scas
lds
subb
add
dec
cmp
and
adc
push
loopne
rorb
xchg
mov
mov
pop
lahf
sahf
nop
das
push
test
stos
nop
inc
arpl
imul
sbb
out
push
out
mov
in
fisubrl
push
adc
sbb
ja
pop
mov
dec
int
out
xchg
in
pop
jns
rclb
cmc
pop
fstl
scas
insb
stos
enter
idivb
out
push
pushf
cmp
jno
cwtl
cmc
push
nop
dec
hlt
push
call
mov
lret
bound
add
sbb
pop
sbb
movsl
cmp
and
add
dec
xchg
jl
ret
ret
insb
or
push
sbbb
mov
jp
mov
cmp
icebp
lahf
scas
xor
sbb
xchg
cmp
sbbb
push
push
pop
sbb
adc
fimuls
mov
ret
push
fidivrl
das
dec
ret
movsb
pop
or
cmc
in
insl
pop
ljmp
push
sbb
jbe
pop
adc
arpl
loope
jmp
movsb
and
lods
inc
push
lahf
stos
andl
cmpl
jno
push
mov
lods
jge
imul
insl
sub
stos
adc
mov
dec
data16
and
xor
jecxz
scas
out
cmpsl
xchg
in
mov
stc
bound
add
mov
cwtl
add
cmp
cwtl
test
lret
mov
fisubl
pop
mov
xchg
fstpt
xchg
add
ja
fstpl
adcb
stos
inc
rcr
mov
push
roll
adc
movsl
dec
out
mov
sbb
divb
scas
mov
push
into
jno
pop
pop
dec
scas
movsl
inc
jg
arpl
xchg
pushf
fistpll
fwait
arpl
pushf
in
test
aad
stc
and
push
xchg
sub
mov
pop
andb
mov
jl
and
push
mul
jno
cmp
and
fs
ljmp
cmp
outsb
or
cwtl
xchg
ss
rclb
xchg
clc
sahf
inc
outsl
popf
jmp
inc
inc
into
stos
test
push
mov
cs
cs
clc
xchg
testb
mov
dec
push
jecxz
jns
testl
nop
sub
xchg
jae
movb
inc
orb
fs
stos
pop
pop
andl
sub
add
rcrl
pop
stc
pop
and
inc
adc
stc
push
mov
pusha
imul
call
push
mov
jbe
xor
leave
insl
jecxz
jae
pop
mov
leave
sub
inc
push
std
jne
leave
mov
cmpsl
cmpsb
and
pop
and
shll
push
jge
fwait
jecxz
xchg
jecxz
int
dec
xchg
fldl
inc
test
sbb
sbb
cwtl
mov
xor
add
jp
pop
sub
mov
sub
in
in
dec
in
lea
xchg
fisubs
inc
xor
std
test
insb
adc
test
fmul
xor
or
pusha
pop
inc
in
pop
sbb
mov
shlb
dec
push
mov
cmpsb
hlt
cmp
inc
sub
mov
pop
push
dec
mull
dec
ret
movsb
repz
push
std
out
mov
out
test
xor
mov
sbb
outsb
mov
jne
neg
xchg
dec
outsb
xlat
or
cmp
insb
cmpsl
icebp
int3
cmp
add
icebp
jno
mov
and
dec
call
mov
mov
pop
das
push
inc
jp
xchg
mov
out
rcl
pop
inc
fadds
push
fidivs
ja
mov
pop
xor
fmul
jge
addr16
leave
sub
cs
mov
dec
xor
inc
je
mov
outsb
or
in
sti
fsubrs
push
les
cmp
dec
shll
lods
xor
jnp
lods
aad
cltd
xor
cld
sbb
ds
aas
mov
data16
imul
lock
stos
mov
outsl
push
sbb
dec
inc
insb
inc
jns
jbe
inc
daa
push
lcallw
xchg
cmp
popf
lahf
mov
push
lods
out
sub
mov
insb
nop
jecxz
mov
dec
pop
roll
mov
xchg
cli
cli
xor
pop
stc
push
movsb
imul
jecxz
xor
in
dec
das
test
aas
sbb
mov
jecxz
loop
xor
scas
leave
mov
adc
outsb
loop
insl
das
cmc
inc
jae
jecxz
jmp
rcl
dec
test
rclb
frstor
ret
idiv
sub
mov
cmpsl
xlat
out
dec
aas
push
hlt
sub
add
mov
dec
sub
mov
stc
ficompl
and
dec
lret
lahf
int
mov
or
fisubrs
mov
pop
sub
pop
mov
pop
xor
push
cli
mov
ss
rorb
cmp
pusha
jge
inc
cs
jmp
mov
cwtl
or
mov
push
or
mov
fimull
dec
lods
lods
jecxz
lds
and
sbb
add
mov
jns
jmp
ljmp
xchg
mov
sub
sub
xorl
mov
mov
jo
adc
add
sbb
push
js
cld
sub
sbbl
jg
and
mov
lcall
add
arpl
mov
cmc
hlt
mov
or
xchg
adc
pop
xchg
ja
and
int3
fdivp
mov
test
mov
xchg
mov
fistpl
dec
mov
lahf
mov
and
das
js
xor
rcl
push
ja
and
jp
lock
mov
dec
or
sbb
xor
pop
push
xchg
inc
pop
popa
cld
mov
cmp
out
dec
les
loopne
inc
adc
xor
mov
popa
sbb
aas
jmp
dec
push
or
sbbb
jmp
mov
popl
xor
xor
mov
and
push
push
or
sahf
in
adc
mov
movsl
lcall
cmp
mov
imul
push
push
sbb
arpl
add
lret
scas
sahf
pop
notl
out
mov
lds
mov
out
test
inc
push
push
add
add
mov
cmpsl
jns
pop
fcompl
dec
push
repnz
dec
inc
outsb
adc
adc
test
push
pop
jecxz
outsb
or
cs
int
xchg
sti
aam
inc
sub
rclb
cmp
xlat
std
pop
mov
or
inc
aas
repz
ljmp
nop
jg
xchg
shr
mov
lock
inc
pop
pop
and
fdivs
pusha
rcrb
add
lds
imull
aaa
push
inc
push
lods
dec
ret
ja
and
mov
test
xlat
pop
mov
adc
add
repz
xlat
push
fcomp
add
popf
add
jle
sub
push
or
mov
pop
inc
sbb
cltd
inc
gs
cmp
sarb
jmp
pop
pop
popf
add
mov
inc
jg
inc
enter
cmc
cli
add
popa
ljmp
pop
ljmp
sti
adc
push
inc
and
add
mov
inc
push
repz
stc
and
aaa
lock
scas
rcrl
xor
lcall
cli
frstor
pop
xor
dec
push
inc
setne
roll
pop
aad
in
dec
shll
lds
pop
cs
and
xchg
push
add
test
das
mov
stos
icebp
cld
enter
pushf
mov
or
lods
orb
into
outsl
push
dec
inc
jnp
mov
xor
jbe
mov
jmp
in
out
ret
into
test
mov
ret
popf
adc
push
mov
push
xor
fucomip
and
ljmp
push
sbb
adc
and
out
dec
lcall
cs
mov
ss
cmpl
inc
dec
stos
in
test
fsubl
cmp
call
mov
mov
insb
repnz
and
fwait
movsl
popa
repnz
sub
int3
ss
imul
or
adcb
lock
jno
outsl
add
mov
xor
out
cmp
mov
mov
repnz
sahf
pushf
out
lahf
add
in
jle
fs
and
out
stos
lahf
aas
ljmp
jbe
sahf
mov
push
dec
and
int
fcmove
insl
push
pop
sar
ja
cmp
dec
push
cmp
add
repnz
lcall
fistps
sahf
leave
lods
mov
lock
cmc
aad
es
scas
dec
inc
out
fisubl
insl
enter
push
mov
cmp
pop
pop
xchg
adc
mov
repnz
xchg
andl
fbstp
out
push
lcall
xchg
or
inc
cmpsb
push
adc
aad
push
or
fsubrl
imul
adc
cmp
cmc
mov
lretw
hlt
adc
pusha
movsb
xchg
aam
ret
pop
addr16
or
loope
call
xor
sub
lret
clc
enter
adc
pop
xchg
fsubl
adc
mov
sub
jg
jge
xor
and
aad
sti
xchg
fcomps
lods
jne
in
xchg
ficoml
push
cmp
add
mov
adc
lock
and
jmp
jmp
lock
adc
test
into
inc
mov
es
pushf
cmp
mov
imul
jmp
outsl
or
test
adc
iret
loopne
jmp
leave
xor
pop
dec
jg
dec
mov
mov
ds
jp
aad
adc
inc
mov
pusha
outsb
lahf
dec
arpl
cli
pop
fucom
loop
stc
xor
inc
xchg
enter
sub
add
stos
imul
imul
aas
bound
jne
adc
imul
xchg
dec
sub
mov
pop
push
gs
inc
shlb
dec
movl
xchg
nop
out
push
test
cmpsb
loop
xor
fbld
mov
jnp
fnstenv
and
shrl
cld
repnz
mov
inc
adc
push
insb
out
adc
nop
lock
cmpsl
jbe
xor
jns
mov
int3
sbb
dec
mov
push
or
mov
jle
arpl
pushw
jge
adc
loope
xorl
jno
xchg
sbb
das
and
xchg
lahf
in
xchg
xlat
cmpsb
xor
lea
test
and
adcb
push
cmc
sahf
cmpsl
lea
and
mov
out
lea
pop
jp
pop
and
inc
xor
sub
adc
inc
ffree
xchg
adc
jno
andb
ret
test
xor
outsb
shll
aaa
mov
jb,pt
lahf
test
sbb
into
mov
mov
scas
sbb
ja
pop
xchg
mov
push
push
cmp
xor
jne
xor
data16
adc
out
mov
or
ret
xor
jecxz
add
shlb
insb
mov
xchg
cli
jns
mov
xor
xor
push
mov
xchg
sbb
mov
jge
test
inc
aam
ret
mov
xchg
sub
and
lahf
lods
cs
or
mov
mov
push
xor
jg
or
xchg
stos
adc
push
mov
cmpsb
add
or
jmp
pop
pop
push
lret
pmaxsw
dec
inc
decl
cmp
inc
andb
cmp
add
mov
cmp
cwtl
add
sahf
addr16
ret
jbe
insb
push
inc
out
in
fdivrl
push
jmp
xor
aaa
into
data16
lods
sub
stos
out
clc
pop
xchg
xor
outsb
insl
adc
enter
or
push
popf
cltd
sti
mov
fwait
in
inc
jmp
cmp
xor
dec
sbb
cmp
inc
iret
mov
mov
je
lods
mov
or
xor
pop
aad
int
inc
jp
jmp
in
inc
lcall
les
xor
cmpsb
and
icebp
imul
xchg
or
sbb
or
sti
sbb
or
sbb
les
mov
xchg
out
or
jge
std
add
daa
xchg
xchg
ret
cltd
insl
std
pop
mov
sbb
andl
movsl
mov
mov
stc
movsl
xor
lods
ljmp
and
mov
jp
repz
js
addr16
mov
jns
mov
push
pop
mov
loopne
cld
push
jo
repz
adc
push
out
insb
orl
sahf
dec
xchg
mov
lret
pop
or
or
xchg
je
sub
loopne
inc
ffreep
xchg
xchg
mov
repnz
add
mov
aam
loopne
loopne
inc
mov
fbstp
pop
lds
dec
jae
fs
popf
lds
xor
inc
cmp
fidivrl
add
dec
xor
pop
out
je
aaa
push
sbb
roll
dec
sbb
test
testl
std
or
insb
mov
jnp
push
and
out
std
test
sbb
dec
xchg
pop
mov
push
push
scas
pop
xchg
xor
scas
into
and
add
ja
and
insb
dec
testb
jnp
out
fwait
push
and
add
inc
out
xor
shrb
dec
cmp
adc
or
pop
nop
lods
inc
xor
mov
enter
pop
sarl
sti
or
hlt
or
lcall
stos
mov
cmp
sub
pop
inc
lds
daa
test
lahf
push
jle
sbb
dec
sub
aam
lods
adc
or
sbb
or
and
rcr
fistl
in
cmpsl
outsl
mov
lds
push
mov
adc
push
repz
repnz
pop
gs
xor
cs
aaa
jmp
decb
mov
sub
pop
andb
or
lea
nop
sbbb
xchg
mov
loope
lret
lret
out
xchg
mov
adcb
inc
xor
imul
bound
pop
pop
add
repnz
inc
and
nop
push
add
roll
rol
fcmovnb
call
and
jae
mov
aad
pop
xor
adc
sahf
push
gs
fs
enter
sub
mov
or
into
jbe
jg
mov
or
mov
mov
xchg
inc
pop
inc
and
sub
stos
lock
mov
out
lret
xorl
popf
hlt
mov
or
push
xchg
ret
mov
outsb
and
jmp
lret
and
mov
mov
repz
pusha
cmp
mov
rolb
push
inc
dec
jle
and
pop
push
xchg
es
and
push
rorb
movsl
addr16
xor
fistl
fisubrl
test
cmpsl
test
movsb
sub
fsubp
lret
cmpsb
jbe
xor
jb
fdivr
xlat
repnz
je
notl
mov
aad
rcr
stos
jns
lcall
imul
je
jbe
stos
push
push
and
inc
xchg
sahf
sbb
adc
pop
jle
clc
pop
mov
mov
stos
xchg
and
dec
dec
mov
mov
es
sub
lods
or
or
int
out
xchg
fmuls
decl
sub
es
imul
cmpsl
xchg
xor
lods
scas
xchg
insb
jne
mov
inc
push
jae
je
movsb
lahf
test
xor
inc
add
orl
fbld
sub
std
arpl
fwait
adc
imul
rcl
mov
dec
ss
jecxz
mov
mov
pop
and
pop
cmp
xchg
stos
pop
or
ret
adc
jno
jb
xchg
es
loop
ja
sbb
sub
andb
mov
inc
push
inc
xor
jl
jne,pt
push
jl
cs
repz
fistpll
test
mov
rcrl
das
mov
iret
mov
aaa
and
inc
jns
mov
dec
ss
pop
nop
sbbl
sbb
jb
aam
das
xchg
jp
mov
repnz
das
into
jecxz
mov
jae,pt
lods
jbe
xlat
ret
cld
fstl
sub
fld
add
xor
stos
in
repz
mov
test
sub
push
test
and
pop
popa
cwtl
inc
and
jae
scas
jnp
sahf
push
jle
jno
repnz
sbb
cmpsb
sub
cltd
dec
outsl
sbb
xchg
jne
add
shr
arpl
jns
xlat
movsl
inc
loope
ss
addl
in
jno
jo
cmp
sub
push
rcl
add
std
hlt
pop
push
outsb
mov
dec
fstpt
into
xchg
push
insb
addr16
outsb
cmp
leave
ljmp
xchg
inc
shlb
out
add
daa
lods
data16
mulb
dec
test
jmp
enter
lock
and
ds
adc
ljmp
xchg
mov
aad
sbb
clc
jae
sub
iret
and
push
insl
mov
outsb
out
sub
sbb
jmp
sar
xchg
push
pop
or
adc
or
push
push
jne
cmpsb
pushf
ret
das
pusha
mov
in
sbb
repz
dec
pop
fidivrl
icebp
dec
jp
jae
cmp
mov
push
mov
nop
cmp
mov
test
ljmp
sub
std
jp
push
inc
or
sbb
jp
mov
add
add
into
mov
lock
gs
xchg
iret
xchg
cmp
pushf
insl
jmp
lods
jecxz
push
je
dec
push
fdivl
and
add
mov
aad
clc
sbb
inc
scas
test
sub
test
lahf
lahf
jecxz
adc
cmc
repz
lahf
addb
jg
pop
insb
inc
mov
daa
cmpsl
cmp
add
lods
in
adc
adc
mov
out
mov
mov
cmpsl
sub
int3
out
add
dec
xchg
mov
cmpsl
ds
mov
or
cmp
call
mov
addr16
rol
rol
lea
jnp
loope
mov
mov
scas
mov
sbb
pop
fistps
jge
mov
xchg
sbb
insl
into
cwtl
pusha
add
cltd
inc
xchg
mov
pop
sub
lock
mov
iret
pop
push
fcoms
fldt
sub
xchg
in
daa
mov
insb
cmp
mov
lcall
xchg
push
add
leave
pop
mov
mov
cmp
ljmp
mov
enter
insl
pop
jne
mov
out
pushf
hlt
les
in
lret
ljmp
mov
adc
out
mov
outsb
aad
xchg
addr16
mov
in
cmp
inc
push
cmp
mov
orb
cmp
das
in
dec
rorb
cmp
rorb
cld
mov
cmp
adc
sbb
ljmp
clc
orb
jne
lret
data16
inc
add
push
xchg
jo
inc
and
dec
test
ja
test
push
test
ljmp
mov
xchg
adc
jns
jle
rcll
aad
loop
cmp
or
pop
loopne
mov
pop
jnp
ret
push
imul
outsb
aam
and
push
mov
sbb
shlb
inc
jge
inc
jp
and
rcl
les
ret
cmc
nop
insb
dec
pop
sub
or
nop
adcl
test
int
pop
mov
imul
out
ret
mov
gs
daa
ds
sti
leave
push
cltd
inc
add
jle
dec
inc
cmp
adcb
repz
scas
adc
aam
adc
repz
out
dec
xor
aaa
std
push
cmp
mov
mov
xchg
fsubs
mov
fisttps
jbe
or
or
and
mov
lcall
rorl
cltd
inc
mov
jmp
fnstcw
sbb
inc
notb
scas
fisubs
xchg
test
faddl
xchg
ss
xor
aaa
pop
addr16
xchg
popa
and
cld
test
cmpsb
test
lds
ffree
jo
cmpsl
loopne
or
mov
or
out
adc
loopne
in
fidivs
add
cwtl
or
jge
lret
aam
ret
inc
sbb
sub
dec
out
int3
xor
pusha
mov
push
xchg
mov
pop
push
xchg
es
bnd
xor
gs
aam
sahf
push
stos
mov
ljmp
xchg
and
mov
in
push
push
add
sub
pop
add
orb
adc
push
and
dec
dec
push
xchg
movsb
inc
jo
xor
lods
jge
dec
scas
lods
cmp
stos
xchg
mov
xchg
fcoml
xor
inc
push
aas
add
cmp
cmp
scas
loopne
sub
sahf
sub
adc
int3
xchg
inc
nop
and
subl
shlb
mov
hlt
mov
pop
lret
xor
xor
xor
fimull
scas
or
stos
xlat
loopnew
test
loope
dec
mov
add
or
or
add
sti
test
adc
push
pushf
stc
or
xor
add
push
sub
jl
es
hlt
xor
fsubl
outsl
pop
mov
jno
pop
mov
es
mov
jg
ret
mov
mov
add
bound
cmp
mov
push
xlat
mov
adc
add
or
ret
dec
mov
xchg
sti
jmp
scas
mov
frstor
jge
cmp
clc
incl
add
xchg
nop
sbb
stos
fdivl
and
sahf
push
add
cld
mov
inc
cltd
gs
cmpsl
push
ss
iret
pop
cwtl
clc
sub
or
or
xchg
scas
mov
add
repz
mov
inc
mov
xor
xchg
fdiv
mov
or
arpl
jg
sub
push
adc
fmulp
ret
dec
xor
fucomip
push
xchg
push
sti
mov
mov
dec
adc
xchg
test
imul
out
pop
pop
pop
cs
loop
test
outsl
jecxz
leave
xor
pop
mov
fwait
mov
mov
filds
mov
dec
subl
mov
xor
repnz
aad
jno
loop
test
add
lret
into
stos
stc
test
mov
cmp
push
adc
es
lea
sbb
popa
popf
sbb
repz
hlt
jge
test
sbb
fimull
imul
enter
xor
mov
or
dec
in
mov
jmp
test
pop
outsb
push
add
test
out
das
jnp
cwtl
dec
sub
repnz
xor
xchg
lds
ljmp
pop
xchg
cltd
enter
es
cmp
add
movsl
add
or
inc
adcl
inc
arpl
xor
enter
arpl
jae
dec
jle
cwtl
add
cwtl
test
jg
mov
mov
mov
jnp
xlat
movsb
sub
sbb
push
insl
sub
adc
shrl
mov
mov
cmp
xlat
mov
data16
cmc
ja
fcomi
sahf
inc
push
pop
cmpsl
sub
or
dec
xchg
or
test
mov
push
xor
mov
cld
loope
pop
test
push
jne
fldl
mov
test
movsb
pushf
stos
ja
stos
nop
adc
add
pop
fsubrs
mov
mov
xor
xchg
rorl
push
cmp
mov
xor
imul
test
xchg
mov
xchg
jmp
mov
roll
icebp
cmp
dec
jb
or
ds
iret
sti
add
jno
lcall
or
xor
pop
cmp
or
jbe
sahf
pop
xchg
pop
lcall
jo
mov
xchg
fcomip
fs
mov
jo
mov
mov
aam
in
lods
and
adc
rclb
test
ss
add
movl
lds
test
cmp
ret
rcrl
pop
mov
arpl
test
adc
mov
movsl
mov
inc
pop
fcmovu
mov
pop
xor
sub
and
lret
pop
jecxz
aaa
mov
jno
stos
inc
enter
dec
adc
nop
push
repz
cmp
lcall
mov
stos
and
ret
xor
push
push
icebp
pop
xchg
in
xchg
std
xor
jecxz
pop
dec
and
popa
std
out
mov
sub
xor
pop
fwait
inc
jnp
jnp
imul
shl
and
pusha
pop
push
inc
inc
in
aam
xor
and
sbb
mull
push
ret
adc
outsl
jecxz
sbb
add
aam
and
pop
mov
popa
inc
lods
adc
addb
add
pop
push
dec
xor
iret
adc
cmc
cmp
add
sub
pop
pop
outsb
pop
arpl
inc
int3
xor
imul
mov
lods
out
popa
mov
add
push
scas
pop
push
sbb
roll
fisubrl
sbb
test
icebp
outsb
lods
fstps
popa
mov
xor
xor
aad
or
loopne
cltd
and
xchg
cmp
sub
je
ljmpw
lods
sbb
cmp
push
fsubs
in
cmp
mov
into
inc
push
in
and
leave
nop
addr16
les
cmc
mov
shrl
pop
pop
mov
loope
lret
push
inc
fiaddl
pop
jmp
iret
call
cs
inc
add
test
mov
mov
mov
jns
pop
inc
cli
insl
xor
int
sub
ljmp
push
std
add
jno
js
out
ja
movsb
gs
cli
xchg
subl
loope
sbb
icebp
inc
xor
scas
dec
mov
jge
js
mov
scas
xchg
pop
xor
adc
movb
adc
sub
mov
cmpsb
idiv
int3
and
xchg
mov
loop
shl
jmp
cmovs
repnz
pop
pop
push
inc
mov
push
add
sub
dec
or
cld
std
mov
xor
mov
jmp
jmp
sbb
mov
out
jne
jl
cs
xchg
jne
test
pop
mov
push
outsl
adc
je
mov
movsb
xor
sbb
clc
pusha
test
rcrb
push
aas
loop
jbe
sub
lret
insb
test
and
jne
dec
insb
fwait
push
jp
inc
mov
fisttpl
pop
shrb
xchg
jmp
addr16
inc
xor
inc
int3
shrl
pushf
mov
mov
out
inc
mov
stc
push
mov
add
and
cli
sbb
testl
fcoms
movsl
inc
and
enter
sarl
jl
push
mov
dec
ror
scas
imul
cmc
jmp
xor
dec
movsl
nop
mov
adc
in
notl
jecxz
jns
push
push
pop
scas
clc
adc
arpl
jns
add
dec
add
mov
pop
sub
push
je
movsb
stos
xorl
inc
ret
clc
stos
int
test
rcll
imul
movsl
or
fdivs
add
sbb
dec
enter
push
add
cli
shrb
add
push
int3
lods
sub
icebp
std
mov
push
jo
dec
inc
jmp
fistpll
rcrb
inc
and
sub
mov
lods
inc
addr16
aam
aaa
into
mov
cltd
jb
jmp
rcr
je
and
or
addb
scas
inc
pop
cs
inc
mov
repnz
in
jb
or
mov
outsb
insl
inc
daa
adc
adc
ffreep
xor
jecxz
fistpl
adc
psubq
ljmp
xchg
data16
popa
mov
dec
xchg
xchg
mov
sti
jl
pop
ja
pop
scas
or
pop
imul
pop
sbb
jno
jmp
xchg
xchg
je
mov
pop
sub
cmp
fcmove
out
imul
xorb
fnstenv
push
sub
out
repz
inc
int
and
adc
mov
or
lcall
aad
push
jns
push
cmp
ljmp
ret
pop
dec
iret
stc
sub
xchg
xchg
or
lods
negb
or
inc
cli
int3
mov
movsl
loopne
jb
and
ja
enter
out
jl
push
xchg
pusha
pop
int3
pop
cmp
mov
mov
sahf
popa
in
mov
test
cs
pop
push
push
xor
testb
iret
add
testl
and
cmpsl
xchg
imul
push
jmp
es
or
push
push
or
lods
dec
and
jl
jmp
mov
sub
jmp
xor
jae
in
mov
pop
xchg
cmp
xchg
mov
jnp
push
push
ds
cmp
test
les
inc
test
lock
lock
bound
sub
repnz
mov
ja
jg
push
jo
mov
inc
xchg
mov
ja
fwait
adc
jnp
or
mulb
arpl
mov
mulb
mov
into
inc
lcall
mov
lds
or
mov
add
xchg
xchg
jo
or
imul
and
rcrl
fbstp
in
inc
subb
mov
inc
adc
fstp
mov
mov
sbb
inc
add
int3
dec
mov
call
jp
or
out
outsl
xorl
add
pop
inc
insb
and
rcrb
fldt
dec
adc
xor
sub
mov
push
push
mov
cwtl
push
scas
mov
pop
repz
sbb
and
hlt
lret
mov
sub
cli
out
sbb
lret
in
dec
pop
mov
push
shrb
cmp
mov
pop
pop
insb
jo
and
mov
fimull
cmc
adc
out
adc
repz
ja
ja
pop
xor
pop
leave
lock
ss
sbb
and
int3
and
jae
aas
pop
mov
mov
mov
add
jnp
jl
test
outsl
sarb
clc
icebp
dec
ljmp
mov
or
and
ret
sbb
sbb
loope
notb
or
test
sub
adc
cmp
es
std
movsl
imul
popf
jo
add
icebp
and
xchg
in
mov
cmp
mov
inc
cmp
insb
add
out
inc
jg
int
mov
mov
push
roll
scas
jle
push
scas
push
dec
xor
daa
sub
jl
lods
xchg
sub
cmp
jnp
scas
aaa
pop
adcb
jg
mull
sub
push
das
dec
out
xor
xchg
inc
mov
setns
in
cmp
lret
pop
xchg
cmpsl
jecxz
in
bound
sti
push
les
cli
cmp
pop
cmp
pop
gs
add
or
flds
scas
inc
add
xchg
push
pop
xor
pusha
adc
xor
out
sub
or
inc
in
fs
jmp
jecxz
lods
dec
movsb
loope
cwtl
fiaddl
jmp
sbb
cmp
ret
ficoms
andb
lea
or
sti
dec
jp
test
push
or
insb
insb
repnz
rcl
xor
push
dec
sbb
pop
jg
call
scas
sbb
out
xor
rcrb
stc
push
daa
xor
and
popa
xor
leave
inc
push
add
aas
jno
dec
test
lret
inc
and
adc
pop
inc
jo
or
mov
iret
fwait
loopne
andb
call
repnz
add
mov
call
mov
push
daa
enter
roll
fstpt
clc
sub
dec
jno
movsl
xchg
push
xlat
jo
pop
xor
pop
ss
cmpsb
rorl
pop
jmp
dec
and
es
bound
aad
cltd
pop
jae
sbb
jl
and
xor
negl
adc
push
push
and
pop
out
repz
adc
fs
loope
pusha
cmp
mov
shll
or
adc
lds
cmpsl
jae
in
lea
cmp
or
push
je
int
mov
xchg
stc
lock
mov
lret
add
mov
jle
cs
xor
test
add
mov
stc
out
mov
mov
sti
cmpl
movsb
cmpsl
ret
test
pop
and
xchg
daa
stc
out
cmp
push
cli
pop
fwait
inc
and
call
xchg
mov
call
sahf
push
insl
inc
add
lods
adc
xchg
outsb
lret
push
lock
push
daa
xchg
call
addr16
test
test
add
pop
dec
xlat
adc
loop
lahf
js
hlt
sahf
jl
and
or
adc
aaa
and
inc
clc
cmc
fcmovnu
push
cmp
xlat
and
imulb
cmp
cmc
sub
adc
je
push
rcrb
mov
movswl
ret
pop
mov
in
pusha
add
nop
xchg
jbe
mov
jae
sub
test
dec
fisttpll
add
das
sbb
jmp
mov
nop
xchg
xor
dec
push
fcmovnbe
outsb
imul
dec
test
sbb
adc
insb
lock
rorb
mov
insb
shlb
pop
sub
ljmp
mov
js
jns
cmp
loope
imul
add
push
adc
xchg
or
loop
mov
inc
fs
and
repnz
push
adc
fnstenv
lods
mov
dec
sbb
jg
sub
or
test
dec
stos
mov
fbstp
inc
and
and
das
cmp
or
pop
mov
xchg
inc
or
lcall
leave
fimull
fistps
fisttpl
cmp
cmp
mull
sbb
callw
fs
jge
movsb
jmp
dec
outsl
mov
popl
call
adc
loop
imul
adc
imul
addr16
mov
cmc
cmp
inc
movsl
adc
xchg
mov
xchg
cs
push
dec
jecxz
mov
jo
cmp
push
mov
cltd
push
jb
dec
xor
es
mov
leave
jnp
loope
mov
rcl
xlat
movsb
cmp
in
pusha
sbb
pusha
push
test
dec
cmpb
xor
jp
sbb
xor
lds
fdivl
out
pop
jno
add
cmp
mov
lahf
jb
js
loopne
shlb
inc
lret
stos
cmp
xchg
sbb
add
push
repnz
clc
movsb
test
inc
inc
push
jl
out
test
mov
or
jmp
pushf
cmp
lods
inc
stos
sbb
fucom
mov
inc
mov
rorb
movsb
outsb
ss
data16
mov
jmp
push
loop
mov
inc
jl
dec
fldcw
gs
fidivs
jne
mov
jp
cmpsl
pop
rcpps
cs
pop
sar
xlat
mov
test
xlat
cs
adc
rorb
loopne
push
in
xchg
sub
lock
xlat
cs
out
adc
and
push
xchg
daa
popf
dec
adc
in
sbb
je
or
or
sub
into
inc
and
mov
je
mov
out
in
in
or
jo
xchg
fldl
mov
gs
dec
dec
adc
gs
decb
outsb
jge
ret
in
std
clc
push
test
imul
pop
fs
fstpt
enter
pop
out
call
sbb
data16
nop
xchg
fistpll
or
shlb
mov
xchg
popa
add
movsl
clc
push
add
wrmsr
pop
adcb
pop
lds
pop
adc
ja
mov
rcrl
pusha
icebp
out
pop
inc
mov
fidivs
stos
test
scas
pushf
pop
pop
and
leave
mov
or
push
mov
xor
scas
xor
xor
pop
out
lea
adc
or
push
dec
fadds
mov
add
pop
pushf
inc
enter
leave
xor
call
sbb
or
sub
pop
scas
loope
mov
jnp
outsl
sbb
shll
xchg
test
cmp
mov
xchg
adc
arpl
popf
cmpsl
jl
and
movsl
mov
adc
out
pop
orb
into
in
pop
dec
mov
jns
inc
sbbl
shll
hlt
fiadds
or
rorl
pop
rol
xchg
shlb
cs
xor
in
adc
and
cltd
ret
enter
dec
popf
pop
xchg
mov
cmp
push
mov
aas
jl
rorb
pop
fsubl
jnp
push
mov
mov
pop
and
jno
pop
stos
push
pop
imul
fldt
push
ljmp
dec
push
insl
xor
push
push
or
sbb
xor
pop
or
sub
repz
call
mov
cli
dec
pop
ret
es
fadd
pop
and
xlat
xor
xchg
mov
dec
clc
sti
test
pop
cmc
test
add
sbb
xchg
incl
mov
adc
or
mov
gs
xchg
and
dec
mov
xor
cmp
push
ljmp
sti
idivl
imul
lock
and
rcrl
outsl
push
fldl
mov
outsl
xchg
sub
xchg
add
or
sub
push
adc
add
lods
xchg
sub
sub
test
sti
es
or
jo,pt
cmp
sub
inc
inc
pushf
jg
xchg
out
dec
sub
std
aas
lods
popa
cld
inc
ficompl
jne
cltd
jle
cmp
lea
push
jb
out
into
clc
mov
movsb
lret
pop
and
mov
test
jle
cmp
mov
fisubl
out
repz
pop
ljmp
cmp
or
out
sub
dec
fnstenv
mov
mov
adc
mov
test
push
cmpl
jnp
rclb
push
mov
inc
mov
icebp
cmp
ss
out
popw
loopne
leave
mov
clc
mov
test
mov
inc
in
jp
inc
inc
sbb
cmp
mov
je
imul
aad
xchg
lcall
cs
mov
test
cmp
data16
push
sbb
ficompl
push
sbb
pushf
bswap
push
lods
mov
cmp
push
jle
or
daa
inc
cmpsl
loopne
mov
pop
push
jmp
xchg
push
dec
out
mov
sub
pusha
xor
testb
rcrb
push
pop
cmp
pop
icebp
ja
lahf
fdivr
dec
cmp
pop
inc
std
xor
aam
les
xchg
ret
mov
cmpsl
das
inc
xorb
and
jb
xchg
push
cs
fcompl
inc
mov
or
cmpsb
push
std
dec
push
dec
push
push
xlat
scas
fnsave
dec
push
ds
scas
and
scas
mov
add
mov
xor
lret
mov
xor
sub
cmp
xor
pop
popa
xchg
and
cmpsb
adc
hlt
push
xlat
cwtl
addr16
mov
fiadds
mov
repz
lret
lea
mov
fs
and
mov
xor
sub
iret
pop
bound
sub
mov
es
mov
out
pop
adc
cmp
out
ror
test
lahf
loopne
enter
js
cmpsl
add
dec
inc
add
and
push
cs
gs
xor
inc
or
fsubl
outsl
sub
popa
mov
loopne
ja
inc
push
mov
mov
enter
or
sub
adc
std
jb
fsubl
mov
insl
and
mov
push
adc
daa
pop
xchg
es
mov
sub
int
sub
clc
pop
push
inc
push
gs
dec
or
insl
dec
out
mov
pop
inc
mov
int
in
lret
iret
out
in
dec
test
aam
into
pop
cmp
pop
mov
mov
push
add
inc
sub
or
ljmp
addr16
popa
mov
push
mov
push
ds
inc
mov
mov
test
sti
sbb
cmp
xor
fsts
stos
jmp
jp
hlt
or
ds
jae
mov
inc
sahf
add
hlt
fbld
xchg
loopne
sti
mov
mov
push
aad
imul
mov
lods
fidivs
sbb
lret
dec
mov
mov
lds
push
sbb
sbb
add
add
push
inc
xchg
jge,pt
xchg
js
adc
mov
or
push
add
fdivrs
je
sub
xor
add
pop
xor
stc
cltd
cmp
test
push
or
push
fimull
add
sbb
jmp
fs
push
push
mov
addb
cmpsl
inc
jns
pop
adc
and
in
insl
dec
fadd
pop
mov
inc
sbb
je
popf
sbb
nop
js
clc
scas
push
mov
push
and
out
push
call
sub
jge
push
mov
mov
icebp
cli
test
into
hlt
scas
into
mov
pop
xlat
bound
sbb
mov
fsubrs
xchg
jge
xchg
mov
lods
pop
fcmovnu
leave
jecxz
mov
in
or
int
sbb
ret
pop
pop
mov
jmp
mov
xor
test
rcrb
das
orl
jle
sub
xchg
test
mov
dec
or
stc
aas
lods
out
pop
hlt
test
testl
movsb
dec
out
pop
pop
xchg
hlt
insl
pop
add
push
xchg
cltd
or
sub
std
out
stc
outsb
pop
inc
jmp
outsb
jmp
fiaddl
pop
ljmp
sar
repz
xor
sbb
mov
in
jns
loop
cli
adc
ljmp
and
and
daa
out
jle
inc
sbb
std
xor
sar
adc
xchg
lods
call
mov
pushf
push
push
pop
push
push
mov
insb
scas
push
mov
add
andb
push
insb
mov
push
call
inc
push
add
ds
pushf
scas
push
pop
leave
jnp
mov
push
mov
xchg
xchg
push
mov
ljmp
and
in
addr16
cmp
test
repnz
jp
out
xchg
jp
pop
movsl
adc
icebp
cmp
bound
sahf
andb
cmpb
mov
dec
and
out
push
clc
jnp
push
jg
mov
push
je
push
sub
aam
xchg
sub
sbb
sub
pop
dec
cmpsb
rclb
sub
mov
mov
xor
jb
lods
mov
xchg
shrb
jnp
in
fcmovnbe
and
sub
mov
push
push
mov
pop
aad
into
pop
jnp
hlt
test
fdivrs
aaa
xchg
notb
cmpsb
xor
mov
push
mov
adc
mov
clc
xchg
mov
lahf
sub
xchg
dec
outsb
fcmovbe
sbbb
add
mov
fcomps
pop
inc
pushf
mull
test
mov
out
adc
fisttps
cmc
lods
pushf
subb
and
fsubrs
adc
mov
ljmp
jmpw
push
frstpm(287
hlt
sub
xchg
jae
int
mov
push
hlt
and
push
enter
pop
adc
xchg
enter
in
insb
push
pushf
jnp
pop
inc
xchg
aaa
sub
cmc
in
rolb
mov
adc
push
ss
sbb
fistps
cmc
xchg
dec
int3
sub
jge
cmpsl
inc
aad
data16
xor
lods
xor
rol
je
insl
sbb
js
imul
jne
jbe
push
cmp
test
enter
andl
push
cmp
sub
cmp
je
into
mov
xchg
out
leave
mov
or
pop
pop
cli
pop
adcl
test
push
mov
imul
icebp
test
jns
and
fbld
adc
push
es
mov
jp
scas
clc
ficomps
cltd
in
stc
rcl
in
sti
mov
push
imul
dec
cmpsb
mov
jne
test
lea
std
ret
xchg
sbb
outsb
mov
dec
mov
cld
xchg
sub
jge
les
jl
shlb
aam
mov
and
inc
in
ret
movb
nop
stos
in
ret
dec
jmp
fstps
or
movsbl
jecxz
jb
ret
std
fcoms
mov
dec
push
loop
scas
pop
jle
or
jmp
mov
fbld
inc
cmp
push
adc
popa
cmp
or
cmp
dec
ja
xor
test
icebp
mov
pop
fdivs
nop
pop
push
push
dec
xchg
les
xchg
insb
mov
shll
sub
pop
ror
xchg
fucom
dec
ret
loopne
pusha
xchg
mov
xchg
adc
jmp
inc
xchg
outsb
scas
mov
ficomps
hlt
jp
jo
mov
repz
loope
jp
arpl
dec
pop
cmp
dec
repnz
outsb
and
cmpsl
scas
lds
cmp
rcrl
push
mov
fprem1
jmp
cmp
sub
xorl
inc
insl
in
inc
lahf
push
test
push
aad
push
pop
test
dec
adc
dec
loope
cwtl
jmp
and
pop
in
std
mov
ds
fdivl
xchg
enter
mov
jecxz
aaa
addr16
xor
jmp
xor
in
mov
adc
mov
fsubs
fnstsw
cmp
pushf
andb
jo
lret
pop
dec
inc
lods
jge
pop
fisubl
popf
cld
test
cmc
pop
bound
das
or
xchg
stc
adc
test
cmp
dec
aaa
push
and
pop
imul
test
js
xor
add
ja
adc
sbb
mov
idiv
outsl
or
outsl
or
inc
push
adc
cmp
mov
add
xchg
jecxz
in
cmp
loope
inc
lcall
pop
add
das
clc
div
sti
mov
adc
push
mov
mov
mov
jne
mov
out
xlat
outsb
adc
or
js
mov
pop
jb
subb
or
js
inc
iret
int3
shr
pop
sbb
insl
in
jo
cmpb
lock
dec
sbb
cmp
rcrl
jg
mov
rcrl
mov
in
ss
or
push
xchg
push
push
adc
sbb
mov
fcompl
int3
in
sub
push
ja
sbb
in
scas
adcb
outsb
addr16
mov
pop
or
push
mov
data16
rclb
mov
scas
jns
mov
pop
add
stc
pop
je
test
xchg
sub
lret
adc
fcmove
jae
mov
test
dec
fisttpl
cmpsl
jb
sub
xor
out
test
in
lods
int
xchg
jb
int3
xchg
mov
sbb
cmpsl
nop
sbb
mov
pop
je
fdiv
and
mov
js
mov
fmuls
pop
movsl
outsl
xchg
xor
xchg
push
xchg
sub
inc
sub
push
mull
inc
int3
push
cmp
aam
pop
nop
cltd
cld
rorb
xchg
mov
ss
push
xchg
lds
int
in
shlb
xor
and
jnp
lahf
adc
pop
inc
cmpl
push
and
dec
in
rolb
pop
mov
xchg
fnstsw
fs
inc
ret
ret
push
gs
jne
or
jo
push
lret
mov
insb
ja
xchg
push
sbb
pushf
dec
adc
out
mov
adc
leave
notl
lea
add
jle
xchg
cli
leave
lods
push
hlt
lods
pop
ss
xchg
in
add
cs
test
sbb
shll
mov
mov
addl
outsb
loopne
dec
fwait
stos
mov
lret
lret
sbbb
mov
mov
push
jbe
sbb
out
pop
jbe
xchg
je
pusha
pushf
mov
gs
ja
inc
and
xchg
xor
mull
or
pop
inc
shl
mov
add
cmpsb
inc
movsl
lret
popa
push
xlat
ret
xchg
pop
pushf
xor
fucomip
xor
jnp
push
jecxz
sbb
xchg
mov
test
ret
test
mov
xor
xorl
xor
adc
sub
mov
push
aam
pop
mov
fnstenv
mov
fs
out
in
addr16
rol
or
or
mov
or
int
jns
add
sti
ret
push
fucomip
nop
js
xchg
sub
xchg
cmp
movsl
cmp
adc
in
loop
frstor
int3
push
sbb
add
cmp
popf
sbb
out
xor
imull
push
mov
sub
jl
in
jg
mov
outsl
or
call
popa
fiaddl
aaa
jmp
push
jns
sarl
mov
push
ret
and
sbb
push
test
fnsave
lret
ljmp
enter
pop
out
in
jns
in
push
cli
cli
pop
xlat
push
or
jmp
fs
fdivs
ljmp
sbb
lret
repnz
jl
sub
data16
call
xchg
cmp
int3
jo
sahf
out
jmp
leave
imul
addr16
or
push
fmulp
mov
xchg
insl
dec
repz
in
aam
cwtl
dec
cmp
and
push
mov
push
into
es
aaa
mov
pushf
fwait
testl
or
scas
mov
shll
mov
mov
pop
mov
adc
int3
addr16
gs
std
dec
pop
xlat
dec
dec
loope
jmp
or
jmp
mov
jp
testb
fldt
nop
mov
push
fidivs
ret
push
jae
jp
clc
out
add
ret
dec
inc
andl
fidivrl
xor
sub
rorl
setb
dec
jecxz
fs
mov
and
test
dec
push
jnp
xor
jecxz
pop
cli
inc
pop
daa
test
mov
mov
sbb
insl
sub
aam
mov
jl
jg
mov
dec
jnp
mov
clc
movl
or
adc
add
inc
pushf
sbb
insl
insl
dec
lcall
xlat
cmp
mov
js
jne
shl
push
jb
cmpsb
lock
push
test
movb
sub
dec
cwtl
jne
arpl
jle
mov
decb
dec
imull
notb
fcomps
adc
sub
pop
shrl
out
jns
icebp
aas
pop
mov
mov
scas
fsubl
cmp
dec
sbb
mov
adc
pop
xchg
test
add
inc
xor
lods
jno
jnp
cmpsb
pop
adc
jp
cwtl
mov
mov
cmp
out
adc
mov
and
outsb
cmp
push
iret
cmp
mov
or
xchg
movsl
cmpsb
jg
cmp
fsubs
pop
jnp
mov
insl
sbb
dec
adc
push
negb
sub
push
mov
test
and
sbb
mov
pop
mov
cltd
outsb
aaa
sub
gs
les
cld
arpl
je
mull
push
js
jecxz
inc
ret
loopne
hlt
push
or
xchg
or
push
jbe
inc
jno
lds
push
rcl
push
mov
mov
cmp
ss
addl
xchg
popf
jle
sub
out
scas
push
pop
mov
cmpsb
lods
je
xchg
cmp
push
push
jne
mov
xchg
and
pop
fdivr
adc
movsb
sub
je
ljmp
fstps
sahf
jbe
iret
lret
sub
lea
arpl
movsl
fldenv
mov
insl
fsubs
in
rorl
test
push
rcrb
out
test
adc
dec
mov
jecxz
loope
stos
sub
push
aam
fs
shl
jbe
or
lret
sbb
xor
cmp
cltd
mov
adc
push
sbbb
xchg
mov
fwait
xchg
cli
in
fldenv
pop
repz
out
pop
cmp
inc
fidivs
xor
add
fstpl
mov
mov
data16
scas
shll
pop
xor
inc
test
fmuls
jo
mov
cwtl
xor
mov
and
mov
sbb
ror
enter
xor
lret
sahf
sahf
pop
mov
aam
mov
sub
mov
lock
repz
lahf
ud0
aaa
loop
sub
or
mov
pushf
mov
incb
xchg
mov
sbb
outsb
je
sbb
cwtl
insb
pop
push
add
ret
loop
xor
movsb
xchg
add
add
loop
loopne
mov
jmp
ret
sbb
adc
aas
mov
lret
adc
addl
adc
popf
cmp
ret
push
push
add
cmc
adc
push
cmpsl
inc
dec
and
mov
ljmp
aad
scas
xchg
outsb
test
sub
mov
jb
xor
ret
andb
or
test
mov
subb
inc
jno
sar
pop
sbb
xchg
jns
xchg
push
inc
jae
loop
in
faddl
sub
aam
or
push
xor
testl
mov
push
mov
push
mov
icebp
dec
in
pop
inc
jae
pushf
mov
fistps
and
scas
mov
stos
sbb
aas
cmp
cli
push
loopne
shll
cli
mov
inc
and
pop
push
aas
xchg
push
out
loope
insl
ds
jo
out
out
xchg
adc
or
add
mov
js
jne
add
jae
or
stos
in
mov
das
int3
imul
cld
jnp
dec
or
insl
in
test
daa
daa
test
stos
jmp
mov
cmpb
sarb
das
out
mov
pop
sub
pop
dec
push
or
or
sub
push
in
inc
hlt
test
inc
inc
mov
or
push
cwtl
fwait
push
lods
xor
xchg
fwait
es
fmulp
xor
xor
xchg
and
mov
sub
sarl
add
xchg
cmp
fstl
in
mov
das
pop
dec
jno
lret
mov
mov
fistpl
add
fisttps
ljmp
int3
xlat
or
divps
fcompl
jecxz
sbb
and
dec
sarl
add
adc
lcall
sbb
je
and
mov
ja
vmwrite
mov
bound
mov
mov
cmpb
jl
sub
add
inc
pop
xchg
pop
in
xlat
pop
mov
fdivrs
fdiv
jns
or
cmpsl
push
repnz
pop
insl
stos
or
cmp
and
mov
sbb
cmp
mov
dec
aad
jno
or
mov
sbb
imul
push
adc
or
out
rcrl
sub
cmp
cmp
inc
adc
fs
fsts
imul
sbb
icebp
loop
dec
rcrl
sbb
rolb
fstpl
shrl
rcrb
movb
or
sub
xor
xchg
fstpt
pusha
mov
data16
pop
push
sbb
popf
and
out
mov
cmp
lods
mov
notl
jno
pop
push
jns
enter
inc
pop
jbe
jne
push
add
insl
nop
aam
mov
ja
dec
push
jle
rcl
adc
xchg
ds
dec
ja
imul
and
frstor
out
outsb
test
repnz
inc
jno
mov
fwait
cmp
lods
gs
icebp
cmp
pop
mov
dec
dec
dec
or
mov
pop
xchg
xchg
cmp
es
or
mov
sarb
mov
add
inc
adc
and
pop
lock
lods
aad
lcall
add
xor
rolb
pop
movsl
and
loop
mov
pop
mov
nop
mov
push
mov
rol
lahf
pop
insb
adc
add
push
inc
xchg
sbb
ljmp
imul
mov
jbe
int
jecxz
int3
and
push
add
sub
inc
adc
fwait
test
jecxz
or
imul
or
mov
stos
xor
js
sbb
xor
lds
push
iret
sbb
lods
jb
clc
xchg
ffree
xor
adcl
xchg
or
ljmp
sub
xor
in
outsl
cmp
jl
sbb
aad
adc
adc
pop
sub
mov
inc
push
jno
push
pop
push
xchg
out
cmpsb
sub
fstps
lods
filds
cmp
xor
push
push
push
and
and
inc
gs
mov
popa
gs
fcomps
adc
pop
jno
jne
mov
xchg
cli
adc
inc
mov
xchg
clc
test
out
adc
add
sub
inc
sbb
add
and
sub
push
mov
push
and
mov
cmpsl
scas
push
loopne
inc
mov
mov
inc
dec
addr16
mov
adc
mov
rcrb
imul
sbb
aas
cmp
pop
mov
xchg
in
push
pop
cmp
xchg
rcll
std
adc
xor
scas
call
test
mov
xchg
sub
std
dec
cmp
push
add
pop
prefetch
mov
test
je
ret
and
test
addr16
or
mov
adc
mov
in
cmc
mov
sub
jb
lret
call
ds
fstl
dec
mov
jb
mov
ljmp
or
popf
pop
test
lahf
repz
jnp
in
xor
and
pop
push
sarl
push
add
negl
das
jo
iret
mov
sbb
and
ljmp
xchg
or
xchg
jbe
dec
or
inc
xchg
lea
pop
jns
cmp
insl
fcoml
pushf
imul
call
adc
mov
rclb
jae
xchg
sbb
xchg
push
out
and
push
sbb
sti
rorl
in
sub
push
aad
mov
cld
call
jae
les
pop
and
ffree
mov
and
xchg
incl
push
cmc
scas
out
sub
jl
mov
clc
fwait
ss
lds
mov
mov
pop
aam
insb
or
inc
inc
andb
sbb
dec
mov
adc
push
ds
call
xor
test
push
and
insb
icebp
xchg
repnz
adc
shlb
mov
xor
inc
jno
or
aaa
mov
dec
int3
jbe
adc
mov
mov
movsb
ss
mov
xlat
lea
outsl
testl
pop
popf
xor
test
dec
mov
mov
adc
rolb
bound
cld
sti
mov
inc
mov
rclb
test
mov
dec
int
jnp
outsb
and
mov
or
mov
aas
lcall
sbb
insl
inc
xchg
add
ret
or
enter
fsubl
lahf
sbb
add
push
add
jge
subb
int3
or
push
rcll
rcrb
xor
push
movl
sub
jecxz
mov
inc
fdiv
xchg
inc
into
lods
stos
mov
pusha
fbld
push
loope
and
jp
inc
mov
andl
mov
push
dec
jp
cmp
enter
leave
in
cmp
jnp
outsl
loop
ficoms
sahf
jno
cmp
data16
and
daa
iret
sub
adc
jne
mov
xchg
outsl
fdivrl
push
pop
negb
cmpl
jmp
iret
sti
adc
fucomp
xor
lods
add
inc
mov
push
and
jb
lods
lock
jno
scas
xorb
aaa
dec
cmpsl
push
dec
inc
xchg
shlb
mov
sbb
mov
test
cmpb
in
popf
jns
out
add
imul
dec
mov
adc
jae
jle
pop
xchg
out
push
cmp
mov
dec
rorw
xor
pop
repz
xchg
mov
jle
ds
adc
nop
outsb
pop
mov
mov
or
sbb
daa
cmp
int
jmp
xchg
cld
les
fcmovnb
lods
mov
sbb
imul
xlat
test
pop
negb
and
push
xchg
jo
testl
enter
push
push
mov
scas
gs
mov
shlb
arpl
popl
sbb
les
xor
bnd
cmp
jp
cltd
inc
sarb
sub
iret
cmp
push
in
test
stos
jno
jmp
fistps
paddd
in
pop
call
jl
mov
jmp
push
out
int
mov
mov
bound
inc
xchg
jmp
jmp
add
adc
inc
xchg
sbb
mov
mov
pop
or
enter
mov
popl
mov
pusha
xchg
and
xor
jecxz
xchg
jne
xchg
out
push
lret
test
cld
mov
outsl
add
mov
or
add
inc
addr16
jmp
cltd
jp
and
sub
pop
cli
sbb
imul
mov
add
pop
rcrl
pop
cmp
dec
and
arpl
cli
dec
imul
sbb
mov
cmp
rclb
add
inc
jmp
popf
jge
sbb
je
sub
push
pop
cwtl
adc
outsl
jae
nop
jle
cs
sub
popaw
xor
mov
push
movsl
push
jb
jns
pop
outsl
ja
dec
dec
mov
xchg
in
jmp
pop
pop
in
or
sbb
pop
imul
loope
popl
lret
nop
jecxz
inc
je
pop
in
jmp
jl
pop
mov
cmp
push
pop
ljmp
les
add
pop
icebp
mov
inc
inc
iret
jp
ja
push
loopne
adc
outsl
mov
push
add
sbb
xor
arpl
and
add
push
daa
or
jmp
insl
sahf
inc
fnstenv
jmp
inc
stos
or
inc
rclb
mov
sub
mov
mov
push
decl
dec
popf
dec
out
lcall
fstps
mov
into
xchg
inc
test
into
sub
pushf
push
bound
pop
test
add
adc
data16
jno
cs
or
push
push
std
outsl
or
push
stc
inc
push
popa
cmp
fildll
dec
fnstsw
dec
push
add
jmp
xor
mov
scas
or
mov
scas
out
pop
push
mov
cmp
push
imul
mov
fsubrl
pop
mov
int3
shll
aas
fld1
push
mov
push
push
scas
pop
pusha
outsb
pushf
lock
out
xchg
or
xor
les
pop
mov
cmpsl
sti
dec
into
mov
jae
mov
inc
mov
add
test
jb
ficompl
cmpsl
pop
adc
push
cmpsb
inc
or
push
pop
push
repnz
mov
lahf
adcl
mov
push
cli
xor
add
push
mov
popf
loop
push
and
xor
and
xor
jmp
out
lds
and
lds
mov
scas
ds
pop
xor
fbstp
sbb
fisubrs
sti
pop
in
jg
ja
pop
andb
cmp
mov
mov
push
out
jbe
mov
adc
cli
or
jl
cmp
insl
push
jns
and
pop
xlat
lds
push
stc
test
lods
arpl
mov
daa
mov
sub
push
dec
in
test
lahf
jle
imul
aam
cld
ds
mov
mov
das
insl
push
insl
fs
and
jp
mov
cmp
insb
sub
imul
mov
add
push
mov
divl
mov
sub
xchg
jl
mov
mov
popa
mov
out
cmp
lock
mov
in
jecxz
jge
imul
mov
imul
push
adc
xchg
outsl
ret
jmp
test
pop
in
inc
and
inc
jnp
add
in
mov
mov
test
inc
inc
sbb
xchg
push
jo
nop
sbb
pop
icebp
cld
sahf
mov
sbb
pushf
lds
sub
add
divl
aam
sub
adc
imul
and
jle
dec
fwait
push
jne
lcall
and
shl
ss
jmp
ds
insb
dec
popf
sub
push
imul
cmp
and
dec
xor
jle
subb
arpl
mov
xchg
sbb
leave
stc
push
lods
mov
sub
jle
xor
loop
outsb
push
mov
add
outsb
or
loop
int
cs
adc
rcl
fdivrl
ror
not
repz
inc
jo
insb
aas
shll
test
rcrl
fwait
xor
rorl
mov
push
arpl
out
add
jmp
or
cmp
iret
daa
aad
mov
in
mov
mov
cwtl
fsubs
fisttpll
adc
xchg
cmp
jmp
inc
xor
push
sbb
push
sbbb
push
sbb
mov
push
lock
xor
jae
dec
pusha
sbb
adc
dec
aam
cmp
mov
je
mov
mov
or
dec
push
xor
pop
enter
pop
pop
lret
mov
dec
inc
cli
imul
adcb
scas
inc
sbb
movsb
cld
push
sub
data16
sub
pop
dec
test
dec
mov
jo
mov
rclb
leave
popa
mov
fmulp
dec
cmp
push
leave
push
pop
cmp
or
out
out
pop
lret
mov
gs
sbb
dec
push
pop
adc
repz
ret
mov
or
sub
in
cwtl
mov
add
lret
fldt
ret
adc
dec
das
xchg
xchg
and
push
fcoml
pop
pop
clc
sub
add
mov
xor
sbb
mov
sbb
or
add
scas
jb
stc
jae
loopne
hlt
xchg
mov
sbb
sbb
xor
xor
add
push
ss
addb
jl
sub
lahf
mov
movsb
loop
xchg
inc
cmp
enter
aaa
pusha
dec
xor
mov
push
lret
shlb
fadd
test
push
xchg
jae
sbb
andl
enter
test
xor
testl
rorb
repnz
mov
cmpsb
add
xchg
fildl
divl
cmp
stc
loop
jmp
orb
scas
aam
xorps
and
iret
ja
sbb
or
out
mov
and
mov
out
leave
adc
adc
xor
mov
mov
inc
fstps
or
cmp
pop
scas
nop
pop
mov
orb
cmp
dec
cmp
jl
dec
test
cmpsb
js
aad
sbb
jbe
lea
jmp
dec
ss
leave
mov
xor
iret
pop
adc
or
shl
mov
ds
dec
jp
pushf
mov
mov
pop
and
rorb
or
cmp
sub
add
mov
lock
xchg
xchg
pop
daa
aam
out
xchg
fdivrl
cld
jge
pop
scas
je
loopne
lahf
gs
nop
pop
ret
mov
mov
adc
push
sub
push
sbb
lds
and
inc
shl
mov
arpl
dec
dec
push
test
aam
mov
mov
pop
pushf
popa
movsl
stc
fisttps
std
js
ds
int3
inc
in
lcall
or
je
sub
cmp
dec
cmpsl
stos
push
or
dec
xchg
jns
jnp
in
push
sahf
movsb
and
mov
sbb
popw
jae
dec
call
sbb
ljmp
pop
jle
lods
stos
pop
add
jle
inc
or
lods
dec
ljmp
lock
mov
mov
push
rolb
jno
ret
aam
loopne
popa
cs
xor
adc
sbb
and
and
addr16
or
jae
test
sub
insb
sub
ja
cltd
jp
sbb
or
rcll
addl
addl
movsl
jb
push
repz
in
scas
push
mov
or
dec
pop
sbb
mov
imul
in
test
ljmp
fildl
adc
pusha
dec
or
cmp
push
push
outsl
sarl
sub
imul
repnz
dec
shlb
pop
mov
fldt
pushf
xchg
in
mov
sub
cmp
jge
jle
and
mov
pop
ret
mov
inc
and
negb
rorb
imul
ficoms
inc
push
out
inc
jle
in
mov
mov
mov
cmp
jns
pop
dec
lret
mov
mov
and
lret
pop
notl
es
mov
xor
mov
aas
stos
sub
sub
jo
sbb
or
inc
ret
sbb
fldcw
dec
lods
or
ljmp
sbb
lahf
jge
out
cmp
cmp
push
dec
sbb
ficompl
das
pop
adc
add
call
sti
int
mov
mov
mov
cmp
gs
sub
jno
mov
cmpb
pop
leave
mov
xor
add
jmp
mov
and
jbe
xor
push
in
aam
rorl
stos
test
pop
mov
inc
jecxz
popa
push
mov
sti
repz
fldcw
out
test
call
push
scas
sbb
xchg
pop
push
xorb
pusha
xchg
sub
lea
pop
inc
repnz
push
sbb
mov
notb
jb
dec
lods
or
adc
mov
mov
mov
mov
push
pop
sbb
mov
jb
daa
loope
orl
dec
rcll
push
sub
pop
fidivl
jns
sub
repz
mov
dec
xchg
inc
jne
dec
das
pop
nop
in
popf
stc
sbb
rcrl
outsb
es
adc
rol
test
mov
dec
pop
pop
adc
add
psrad
imul
cld
add
push
adc
repz
push
mov
mov
add
cmp
mov
daa
or
sbb
lds
lods
lret
or
push
mov
mov
adc
loope
inc
sub
shll
sub
xchg
mov
fdivs
pop
bound
insl
ret
xor
inc
ds
push
mov
dec
xor
sar
or
inc
dec
repz
jp
stos
and
popf
dec
and
fsubrl
cmp
dec
movl
cwtl
jge
test
sbb
cwtl
cltd
popf
jo
dec
orb
hlt
cld
pop
and
lcall
mov
sub
lock
xor
mov
add
data16
lods
mov
mov
stc
out
cmp
js
cwtl
add
jle
and
jnp
idivb
pop
or
scas
cmp
int
lret
xchg
pop
sbb
adc
jnp
imul
or
aam
mov
push
add
xchg
jae
add
inc
xchg
add
les
xor
mov
out
out
clc
insb
pop
pop
sti
add
mov
notl
pop
call
int3
inc
mov
fnstenv
es
sub
mov
cmp
ret
jnp
pop
pushf
inc
pusha
push
mov
sbb
aas
inc
clc
mov
sarl
out
arpl
repz
push
fldt
ja
cld
pop
fwait
sub
push
rolb
adc
ja
fisubl
pop
scas
pop
push
ficoml
add
repnz
mov
xor
mov
jmp
dec
sbb
jl
cmp
out
sti
push
xchg
dec
das
insl
xlat
dec
clc
or
pop
xchg
push
and
or
aam
testb
pop
arpl
lea
test
or
les
mov
fbstp
fs
ljmp
xor
add
mov
out
mov
std
stc
jae
jmp
insl
lea
push
in
mov
test
pop
rclb
incl
int
dec
push
rorb
adc
clc
popf
jge
or
push
adc
cmp
lret
push
clc
shrb
mov
cmp
mov
dec
dec
xchg
dec
add
movsb
rol
pop
loop
fsubrl
scas
ficoms
dec
jg
fsub
adc
push
jecxz
mov
push
in
andl
push
pop
and
push
out
lods
div
jmp
inc
and
loopne
jecxz
lea
fnstsw
pop
or
add
push
mov
or
adc
mov
jbe
push
jle
cmp
cmp
push
adcl
mov
jbe
and
loopne
push
ss
icebp
jbe
dec
shl
lods
daa
sub
cmp
imul
in
jecxz
dec
fwait
dec
add
lcall
sub
jne
rorl
xchg
imul
jns
push
dec
sbb
mov
push
xchg
xchg
push
lods
jmp
push
mov
xchg
push
mov
or
cmp
pop
mov
outsl
fucom
or
aad
mov
out
xchg
mov
or
aam
jg
das
movsb
dec
mov
dec
and
xlat
icebp
in
cld
ja
lret
test
add
inc
sbb
fstps
pop
jno
adcb
jnp
push
xchg
outsb
aas
push
fs
dec
mov
psrlw
mov
lods
dec
mov
pop
lock
mov
push
or
xchg
pop
test
lock
test
add
in
dec
mov
pop
inc
push
mov
dec
insb
xchg
es
xchg
lcall
push
ljmp
jmp
or
add
sub
in
mov
jle
push
push
je
movsb
push
pop
xchg
scas
ljmp
hlt
into
daa
lock
cli
or
and
pop
in
aas
cmpsb
add
jle
pop
jb
fbstp
mov
out
imul
in
jmp
mov
shr
std
daa
mov
push
out
clc
or
inc
cmp
lahf
xchg
ret
addr16
loope
xor
sub
or
bound
lcall
cwtl
in
xor
shl
push
outsb
mov
lret
mov
jns
sarl
lret
loop
adc
cmpsb
cltd
sub
mov
aam
popa
nop
cld
daa
clc
sub
jbe
inc
xchg
rorb
ljmp
mov
mov
mov
mov
popf
cld
enter
jbe
jae
test
pop
aas
iret
bound
daa
add
in
fs
inc
ret
pop
test
or
dec
data16
push
addl
pop
inc
mov
cmp
push
cmp
loopne
inc
lods
inc
mov
adc
push
pop
leave
lret
sbb
js
push
test
push
sub
inc
mov
outsb
push
inc
outsb
jmp
xchg
jp
sub
movsl
imul
insl
lret
cmp
push
cmp
sub
pop
dec
gs
dec
repnz
inc
jb
cmp
iret
insl
sbb
jb
test
ja
xor
cmpsl
fildll
loopne
test
in
push
rcrb
xchg
ja
mov
imul
inc
dec
push
loope
xor
or
add
add
fs
insl
shlb
pop
mov
movsb
mov
stos
mov
outsb
popa
popf
xchg
jl
inc
test
inc
add
lods
dec
in
xchg
dec
call
push
adc
test
cmp
sub
dec
push
into
dec
cld
jae
and
stos
stos
sahf
mov
sahf
fisubrs
mov
enter
pop
add
or
push
subb
xor
cmc
aam
rcl
mov
push
cmpsb
mov
add
aam
outsl
push
jg
pop
imul
cwtl
add
mov
pop
test
in
xor
daa
pop
mov
in
notl
leave
xchg
cmc
adc
dec
lcall
test
cltd
test
xchg
sbb
movsl
push
xor
mov
lret
sti
mov
mov
cmp
mov
mov
and
dec
xchg
rorl
shlb
xor
gs
iret
rcrl
cli
call
inc
push
pop
dec
movb
pop
fidivrl
andb
scas
push
je
daa
adc
xor
xchg
cmp
xchg
add
cmc
pop
loopne
outsl
sbb
aad
cs
ljmp
rcrb
fdivrl
lock
lock
out
xchg
lahf
push
push
xchg
adc
inc
ss
rolb
push
fdivrp
movsl
mov
xor
dec
xchg
aam
push
repnz
or
stos
shll
lret
scas
cld
jp
inc
sub
mov
xorl
push
xchg
loopne
addl
mov
enter
outsl
xor
xchg
std
xlat
stos
aas
jmp
mov
adc
insb
pop
add
push
aas
mov
or
or
movsb
jle
in
cld
pop
nop
jmp
std
test
mov
jecxz
add
push
xchg
cltd
int
mov
inc
sbb
out
lods
jge
inc
scas
add
fs
inc
xchg
mov
cmpsl
out
mov
std
xchg
add
dec
cmp
cmp
add
mov
mov
sbb
imul
adc
mov
cmp
stc
imul
cmp
sub
cli
insb
js
lret
out
outsl
scas
jl
pop
push
stos
int3
xor
jnp
jmp
xor
xchg
or
xchg
mov
sahf
fcoml
test
aaa
dec
or
jl
jg
adcl
push
xor
pop
inc
xchg
mov
mov
mov
xchg
and
mov
pop
mov
sbb
shll
outsb
jl
inc
lds
aas
mov
sub
outsl
adc
add
fmul
std
push
push
pop
push
into
stos
xchg
aaa
lods
sbb
push
or
sub
or
cmc
shlb
sub
pop
sub
ds
les
stos
adc
lret
dec
ficoms
add
sbb
pop
or
sbb
frstor
iret
in
mov
cwtl
xor
mov
mov
lea
add
stc
lcall
in
xlat
fsub
shr
push
icebp
push
stc
lea
daa
ja
aaa
pop
xchg
xchg
packssdw
mov
inc
cld
add
insl
sub
mov
stos
pop
xacquire
mov
mov
sbb
ret
mov
pop
shlb
scas
or
mov
sbb
push
inc
mov
aad
stc
pop
cmp
addr16
movsb
imull
inc
jns
push
push
inc
jle
paddw
push
sbb
pop
jp
adc
shll
icebp
or
call
add
imul
movsb
inc
in
mov
insb
rolb
loopne
fmul
lods
clc
xchg
in
les
out
mov
sub
icebp
xchg
cmp
push
or
jnp
and
inc
cmp
push
xchg
cmpsb
jno
mov
mov
hlt
jo
imul
sbb
cmp
push
testb
mov
test
sbb
clc
mov
jecxz
pushf
ficoms
and
inc
jmp
xor
pop
insl
cld
shll
out
or
jbe
xchg
inc
jnp
es
repnz
daa
mov
popa
lods
fldt
loopne
fs
or
dec
dec
inc
adc
dec
mov
test
mov
add
stc
jns
dec
xor
cmp
jnp
mov
adc
push
xchg
mov
pushf
aad
xlat
xchg
ret
push
rclb
and
sub
mov
push
sbb
mov
lcall
hlt
cmpsb
mov
mov
jg
adc
sbb
sub
or
inc
pop
jbe
clc
add
pop
and
clc
outsb
push
loop
loopne
sbb
mov
dec
pusha
push
dec
xor
aaa
push
mov
cmp
xchg
cmp
mov
fs
adcl
jp
test
inc
pop
pop
dec
arpl
jnp
int3
pop
jle
lds
mov
mov
iret
push
mov
popa
jae
mov
add
rcrb
lods
cmp
stos
ljmp
jae
pop
pop
dec
sub
and
jns
dec
ja
call
js
pushf
lds
push
popf
scas
inc
pusha
sbb
mov
xchg
xlat
imul
push
dec
scas
inc
call
mov
sbb
in
mov
test
loop
addl
jb
es
push
mov
out
test
imull
cmp
sub
inc
sub
hlt
cld
mov
and
int3
mov
fucom
fdivl
dec
dec
movsl
in
push
out
jecxz
fdivp
pop
ss
xor
mov
lret
and
push
mov
lea
xor
cwtl
sbb
fisubrl
shrl
or
push
in
mov
xchg
adc
inc
inc
cltd
and
fildl
andb
cmc
mov
jne
jne
adc
fisttpll
les
pushf
xchg
mov
iret
mov
sbb
add
into
aaa
jle
cmpsb
loopne
outsl
jnp
mov
pop
lahf
cli
fs
lret
pop
mov
inc
pop
xchg
sbbb
pop
xchg
nop
loope
xchg
icebp
push
test
in
sub
fxch
push
push
enter
mov
mov
cmp
push
dec
fcompl
sti
cld
add
outsb
arpl
xchg
in
cmpsb
into
mov
dec
add
mov
std
sbb
test
push
popf
push
addb
cmp
or
test
inc
and
add
xor
test
inc
fsubl
jecxz
adc
clc
xchg
xor
arpl
std
lods
cmpxchg
outsl
or
insb
and
mov
add
push
in
adc
jno
jb
std
xchg
and
cmc
negb
addr16
mov
fcmovnb
cmpsl
sub
jo
add
jecxz
jnp
mov
into
cmpsb
and
xchg
ljmp
out
shrb
pop
fwait
insl
fistpl
xchg
daa
ret
xlat
jmp
std
cmpb
or
jecxz
das
fwait
and
rcl
fs
push
and
or
and
mov
xchg
lods
sarb
jge
movsl
push
pop
outsb
fcompl
std
mov
ret
mov
inc
mov
cmpsl
sbb
mov
pop
mov
outsb
push
les
xchg
and
add
das
fldenv
pusha
mov
pushf
hlt
jmp
add
xchg
mov
ret
cvtdq2ps
sub
pop
call
fisubl
adc
sub
negb
lea
sbb
xchg
sbb
shrb
call
mov
movsl
mov
push
jae
xchg
jbe
pop
jle
cmp
sbb
ficoml
or
sub
cltd
add
insb
inc
sbb
pop
pushf
leave
dec
rcl
imul
arpl
pop
scas
in
in
and
fs
lret
adc
shrl
pop
sbb
xor
xchg
cmpsl
addl
testl
inc
or
addl
xchg
cmp
mov
std
inc
mov
popa
or
sbb
xchg
lret
pop
cmp
lock
xsha256
cmpsb
adc
fidivrl
xchg
mov
cli
lea
sub
shlb
xor
stc
xor
mov
and
xlat
jge
xor
mov
dec
arpl
mov
ds
and
sahf
rcrl
push
pop
fisttps
cmpl
scas
xlat
dec
dec
test
xchg
jecxz
popf
mov
inc
push
imul
xor
add
lcall
pop
pop
xor
cmp
fildll
adc
inc
mov
addr16
dec
jecxz
mov
mov
cmpsb
or
nop
out
dec
pop
rclb
sub
jnp
xor
sbb
pop
sbb
cmc
jno
xchg
pop
mov
jecxz
in
and
jae
sahf
add
rclb
dec
sahf
and
aad
repz
jae
lds
and
loopne
bound
or
mov
fcmovnbe
pop
movsb
sbb
add
sub
stc
mov
or
and
mov
insl
push
push
lods
cli
ds
push
jl
inc
cltd
sub
pop
int
adc
cmp
push
subl
inc
mov
pop
jl
shrb
aaa
pop
sub
cmp
adc
ret
out
sbb
add
dec
sbb
sbb
sbb
push
lds
pop
arpl
dec
aad
inc
test
inc
jno
cmp
insl
xchg
add
xor
sub
jg
mov
fs
inc
ja
leave
test
inc
jmp
push
mov
pusha
lahf
rcr
and
cli
stos
ljmp
inc
int3
loopne
mov
lcall
fiaddl
dec
ret
and
push
inc
mov
or
xor
fstpl
push
and
sub
orl
rcr
jge
out
xchg
or
fsubrs
insb
std
push
jns
push
loopne
cld
and
addl
das
mov
jno
fsubrs
sbb
mov
push
hlt
ljmp
adc
cmp
js
inc
pop
shlb
dec
sub
or
dec
push
inc
and
fstl
jle
jb
outsl
adc
aad
lret
inc
inc
scas
push
inc
mov
mov
inc
addr16
jecxz
nop
adc
out
sbb
inc
adcl
lahf
mov
jb
dec
or
lods
jmp
mov
mov
mov
push
cmp
sub
fdivr
popa
xchg
xchg
dec
jns
inc
ja
clc
mov
mov
enter
rol
fwait
push
push
in
inc
cmp
leave
mov
mov
cmpsl
stos
mov
call
lcall
fildll
jp
imul
notl
push
mov
loopne
xor
inc
fildl
in
or
dec
repz
fildl
hlt
jnp
fmull
lret
add
cmp
adcl
cmc
outsb
sub
insl
addr16
add
mov
sahf
cmp
in
testb
nop
cs
pop
fsubrl
push
mov
add
jl
dec
cltd
ret
dec
mov
mov
mov
sbb
in
jle
ret
loopne
lods
loope
push
orl
mov
pop
xor
lds
dec
and
shll
cwtl
test
leave
stc
push
popf
rcrl
mov
sbb
test
xchg
test
stos
inc
leave
aad
test
cmp
xchg
aam
mov
sbb
data16
ljmp
xchg
mov
push
push
cmc
addr16
pop
mov
cmpsb
lods
add
cli
ret
jle
dec
dec
mov
jo
das
xchg
das
divb
insl
fisttpll
movsb
movsb
mov
or
mov
pop
mov
jl
jae
rcll
pop
ljmp
pop
xchg
aas
xchg
stc
test
push
out
mov
test
mov
push
sbb
cmp
push
add
pop
push
outsb
icebp
aas
test
jp
repz
sbb
dec
std
jl
lods
xor
jo
cmp
bound
pushf
inc
in
inc
pushf
out
xchg
lret
fisttpl
fnstenv
fstpl
add
lret
push
clc
pop
in
sub
pop
sbb
addr16
in
in
ss
loop
add
jns
adc
pop
movsl
movsl
sbb
lds
mov
xor
aad
sahf
in
cmpsb
adc
mov
repz
mov
test
fsts
push
inc
pop
ss
lret
pop
into
mov
loopne
pop
ljmp
jg
nop
mov
push
in
loop
adc
jne
and
movsl
push
rcrl
adc
dec
push
test
xchg
dec
xchg
lret
dec
in
cwtl
je
dec
pusha
pop
jb
shll
mov
inc
jmp
fwait
push
cmc
adc
ljmp
cltd
mov
popf
sbb
adc
fildll
add
arpl
int
gs
mov
sbb
mov
add
push
repz
jge
inc
adc
and
lea
ds
push
scas
sbb
mov
push
jge
stos
jnp
cmpsb
mov
out
bound
ret
pop
pop
and
xchg
rclb
pop
shr
push
in
push
jmp
mov
push
hlt
sub
dec
mov
push
das
xor
lea
push
scas
sbbl
cmp
xchg
pushf
shlb
loopne
adc
add
push
jmp
cwtl
test
xor
or
out
data16
aas
orl
pop
adc
repnz
dec
faddl
data16
xchg
and
dec
out
mov
in
and
xor
or
add
pop
mov
cmp
add
test
xorl
push
mov
call
and
push
jo
ret
in
xchg
xor
or
and
adc
clc
mov
lea
jo
xchg
cltd
xchg
push
sbb
or
push
and
imul
stc
mov
sub
jg
lods
test
adc
mov
pop
adc
in
inc
iret
leave
rcrb
roll
jl
inc
ret
pop
cltd
xor
pusha
dec
mov
or
inc
add
dec
mov
insb
inc
out
xor
jne
lahf
leave
mov
and
aas
cmp
push
mov
mov
mov
jb
repz
mov
push
xor
push
adc
inc
aad
sub
push
sahf
mov
jle
cmp
jo
ficomps
mov
jns
test
xlat
mov
dec
nop
dec
stos
cmpb
mov
mov
and
xchg
dec
or
push
mov
pusha
fldcw
xchg
xchg
loopne
xor
xchg
out
cwtl
cmpsl
cwtl
js
dec
ret
and
std
dec
mov
pop
aam
in
cmp
cwtl
xchg
sysexit
pop
stc
jl
ret
in
cmpsl
lcall
inc
push
fdivrl
loop
insb
or
orb
dec
scas
sbb
insl
das
nop
push
lret
sbb
mov
sbb
and
or
sub
cwtl
mov
outsl
mov
aaa
mov
insl
adc
dec
in
mov
ret
jno
xlat
mov
lret
iret
in
jne
mov
pop
mov
cwtl
cmp
mov
push
call
sub
pop
xor
adc
pop
sub
sub
or
cmp
test
dec
mov
out
adc
cltd
aas
movsl
xchg
movsl
fists
fcompl
inc
imul
jo
cmp
mov
push
daa
mov
lock
xchg
and
or
adc
ds
push
mov
push
pop
add
shrl
push
lods
cltd
mov
ja
and
roll
inc
popf
outsl
push
push
imul
scas
insb
pop
xchg
push
gs
popa
das
jle
mov
mov
imul
dec
imul
mulb
into
xlat
stos
mov
das
arpl
xchg
into
push
adc
lds
std
in
test
fsubp
mov
fwait
cmp
in
bound
sub
jl
scas
sub
xor
mov
adc
outsl
dec
mov
xchg
mov
push
jp
movsb
jecxz
enter
subl
jae
fildl
test
ss
xor
dec
dec
bound
decb
sub
cmp
dec
dec
fldenv
adc
mov
imul
jle
lret
sbb
test
and
mov
mov
mov
test
or
cli
mov
lods
push
lock
sub
mov
inc
mov
sub
push
sbb
cmpsl
repz
lods
mov
test
push
decb
shr
in
jae
loop
inc
sbb
ljmp
fidivs
xchg
loope
xchg
or
mov
pop
mov
jno
inc
dec
jl
mov
repz
cmpl
and
mov
jl
push
ljmp
mov
xchg
mov
inc
dec
pusha
inc
mov
ret
sahf
jae
cmpsl
arpl
lcall
test
dec
loope
sub
cmp
lret
push
push
cs
aaa
repnz
inc
movsb
fiadds
fwait
pop
fdivr
push
sbb
mov
shll
push
shl
insl
cmp
movsb
jne
or
mov
popa
mov
jno
pop
cmpsl
and
push
and
rclb
or
cmpb
daa
mov
mov
adc
into
imul
mov
cs
xchg
dec
lods
sbb
cld
imul
icebp
fwait
js
repnz
insl
pop
icebp
jnp
das
adc
and
sahf
lahf
jnp
icebp
push
ret
andl
scas
aam
xchg
cmp
popl
jnp
sar
xchg
int
popf
negb
xchg
aam
pop
mov
popf
cwtl
shll
cltd
mov
pop
jp
jmp
fwait
test
outsl
je
push
push
stos
push
mov
pop
push
loopne
jno
dec
pop
and
inc
pop
rolb
mov
xor
pop
call
push
jecxz
pop
cmp
or
in
add
and
jge
shrl
xchg
js
scas
mov
and
sub
add
sbb
cmc
push
xchg
sbb
dec
dec
mov
movsb
idivl
dec
cli
stc
lock
int
nop
scas
push
shll
je
push
mov
jbe
pop
imul
jne
sbb
push
add
arpl
mov
into
iret
andl
jle
rcll
and
mov
int
sarl
adc
cli
mov
jmp
rclb
cwtl
mov
stc
sti
sbb
ja
push
pop
mov
jecxz
andb
in
out
cmp
dec
aad
dec
sub
xchg
insl
dec
and
out
push
sbb
test
push
cmp
jmp
xor
out
sahf
dec
xchg
add
cmpsl
cmc
repz
xchg
push
ja
dec
jno
pusha
jno
ret
cld
cmpsl
repnz
mov
outsl
mov
mov
dec
std
pcmpgtd
inc
movsb
sbb
sub
jge
dec
lea
daa
mov
scas
test
push
mov
push
and
jbe
in
pop
cmpsl
pop
and
nop
out
aaa
cli
mov
loop
mov
add
aad
call
daa
cmpsl
icebp
and
jmp
mov
xchg
jle
je
outsl
adc
mov
lds
lret
push
shll
mov
sub
adc
inc
push
mov
ss
jo
out
cmp
enter
sub
mov
cmpsb
fsubs
inc
frndint
lods
imul
push
pop
add
sub
sub
jb
mov
pop
fadds
pop
stos
nop
stc
in
in
sub
jns
inc
fldcw
loopne
pop
mov
sub
or
mov
sbb
mov
iret
inc
lea
fdivl
dec
mov
es
and
xchg
pandn
jbe
jmp
sbb
lret
roll
jb
xchg
sub
sub
out
cmp
cli
les
daa
jle
sub
sbb
lret
subb
fwait
mov
insl
push
out
xor
mov
call
aam
dec
or
nop
jl
imul
mov
xor
cmp
push
mov
mov
adcb
daa
mov
push
test
xor
cmpb
cltd
iret
xor
sarb
push
push
ret
int
mov
cmp
dec
cmp
repz
iret
stos
mov
push
and
hlt
dec
xchg
test
jns
cltd
scas
in
fisttps
xchg
cwtl
fwait
mov
fcoml
pop
ret
xchg
push
fwait
shlb
rcrb
mov
popa
lcall
add
push
or
add
cmpl
roll
scas
xchg
btr
lret
cmpsb
mov
iret
xlat
cmovno
mov
cmp
pop
imul
dec
jb
aad
jne
xchg
or
rorl
cli
outsl
and
jle
mov
add
inc
clc
xorb
insl
sub
sub
adc
scas
add
adc
nop
inc
dec
jmp
mov
push
jmp
fcoml
adc
xchg
push
cmp
imul
das
popf
mov
mov
push
mov
in
inc
jecxz
fstl
out
cmp
popa
sbb
popf
add
and
pushf
das
push
pshufw
push
leave
sbb
xchg
popf
cs
std
int
repnz
test
shll
push
mov
add
mov
mov
inc
ret
sbb
push
jp
mov
xchg
sbb
das
mov
add
dec
mov
mov
movsw
out
xlat
call
dec
cmp
loope
jge
call
lret
push
scas
cmp
push
sbb
insb
jne
cltd
mov
daa
je
out
dec
and
test
fidivrl
sub
sarb
jmp
ds
pop
jno
ljmp
ljmp
dec
adc
dec
cmp
addr16
mov
adc
js
xorl
insb
lret
cmp
mov
xorb
sahf
add
or
out
out
call
mov
or
inc
shlb
fistps
xlat
sbb
mov
stos
push
in
adc
mov
and
adc
shlb
push
pushf
insb
add
mov
add
mov
fwait
movsb
sub
imul
add
shll
dec
lods
lret
jo
jmp
dec
popl
add
mov
stos
push
jo
js
inc
pushf
jge
movsb
lea
mov
pop
ja
out
sub
and
test
jo
and
outsb
cmp
out
sti
int3
in
xchg
scas
out
loopne
pop
scas
sbb
inc
dec
movsb
cmp
iret
mov
mov
ljmp
dec
stos
repz
testb
or
fwait
mov
mov
mov
adc
jp
xchg
pop
mov
das
jl
jle
mov
lcall
xchg
pop
mov
fstpl
jbe
lcall
sbb
mov
sahf
test
lds
xchg
cmp
repz
xor
cmp
les
movsl
movsb
jns
sub
pop
outsl
pusha
pop
cmp
sub
sarl
movsb
movsb
jo
aas
lcall
aaa
je
pop
mov
movsl
sahf
push
nop
icebp
popf
stos
xchg
dec
shll
das
pop
cmpsb
jns
xchg
pushf
cmp
daa
dec
in
or
mov
pop
inc
cwtl
and
jp
fnstenv
fildll
cmpsl
add
mov
adc
fs
es
sub
test
mov
cmc
sbb
and
aas
and
imul
jecxz
push
loope
ret
inc
jno
xor
lret
test
xor
fisubrs
mov
sarl
mov
jns
out
xor
or
in
setnp
inc
sbb
pop
insl
adc
test
cmp
and
inc
in
mov
and
fstps
adc
aam
js
fmuls
in
jl
and
mov
jb
cs
addr16
cltd
sbb
lcall
mov
push
mov
rcl
loopne
and
xchg
test
fyl2x
mov
cmp
jno
mov
addl
xchg
push
xchg
and
rdpmc
gs
or
fcoms
jb
pop
push
inc
sub
sahf
hlt
jne
add
lods
xchg
inc
xchg
push
in
notb
cmp
test
xchg
fidivl
dec
pop
clc
cmp
dec
xchg
jno
rol
cli
es
adc
je
das
xchg
int3
pop
jae
mov
mov
movsb
cmp
stos
mov
rcrl
jne
push
repz
inc
fldcw
and
adc
ss
jne
xor
xchg
insb
insl
mov
xchg
pop
mov
adc
xchg
mov
push
and
xor
out
negb
adc
negl
loop
push
int3
jnp
or
sbb
cmp
enter
cmp
test
call
out
enter
or
inc
cmp
popf
fcompl
inc
inc
in
pop
xchg
hlt
dec
cmp
into
aas
pop
push
mov
push
fbstp
cld
sub
push
bound
fcomps
mov
sub
fcoml
ss
dec
rolb
and
jo
in
hlt
insl
pop
mov
sub
mov
cmp
andl
add
sub
test
cli
and
lods
mov
adc
pop
sub
arpl
and
lcall
xor
cld
sub
shll
out
loopne
inc
notb
adc
out
dec
xchg
test
mov
xor
and
pusha
or
mov
cmp
jl
testb
mov
xchg
lret
push
push
je
je
aaa
mov
mov
adc
std
lahf
cld
pop
jne
mov
add
cmpsb
fwait
jbe
mov
jne
repz
xchg
ret
mov
push
mov
jno
ja
xchg
out
jo
dec
clc
mov
jae
xchg
pop
push
adc
rcrb
sub
mov
gs
ret
icebp
sbb
pop
int3
std
jno
lret
jnp
movsb
lcall
dec
inc
mov
mov
shll
aaa
lahf
sbb
lock
dec
add
icebp
scas
das
cmc
pop
wrmsr
and
rep
jns
mov
aas
and
add
sbb
add
dec
movsl
pop
mov
mov
enter
push
jo
rcr
int
mov
fmull
or
sbb
rcll
cmpsl
xchg
fistpl
push
jno
and
xor
push
popa
pop
pusha
adc
lahf
divb
fstps
xchg
stos
andl
mov
das
lock
lahf
imul
in
lock
push
lods
fstpl
xor
mov
lahf
clc
leave
je
data16
outsl
shrb
dec
push
imul
sarl
pop
mov
add
xlat
int3
cmp
mov
cwtl
sub
mov
pop
or
xorl
xchg
or
mov
inc
jne
dec
push
mov
add
in
clc
sarb
xchg
or
iret
insl
je
ljmp
cmp
aas
push
lcall
push
inc
or
cli
and
cmp
mov
xchg
jb
adc
push
out
enter
scas
in
sbb
das
mov
test
lret
clc
adc
rorb
fildll
lret
xchg
dec
mov
xor
incl
jnp
pop
mov
shrb
xor
out
xchg
hlt
das
fisttps
out
pop
mov
mov
shlb
outsb
fwait
addr16
das
das
sbb
cs
push
lgs
imul
cmp
push
adc
lcall
adc
in
rcll
test
iret
sbb
lret
xchg
mov
in
imul
dec
shlb
cld
jg
adc
mov
add
jge
jne
scas
push
mov
sarb
lods
addr16
aas
xlat
jnp
and
fstl
sbb
cmpsl
xchg
jbe
out
mov
repnz
add
lock
xchg
mov
pop
push
mov
test
gs
aad
orb
test
fstpl
jecxz
adc
outsl
sub
push
cmc
mov
pop
addb
pop
adc
mov
bound
movsb
in
add
jmp
mov
push
push
inc
push
stos
subl
aaa
mov
sbb
add
inc
cmp
pop
jno
adc
sub
clc
daa
mov
sub
cli
push
lahf
xor
jnp
loope
sar
sbb
adc
add
out
sbb
pop
push
in
jbe
int3
pop
icebp
out
mov
push
jno
pop
sub
cmp
in
or
and
fildl
inc
scas
repnz
imul
mov
mov
rcll
rol
pop
negb
loope
dec
cmp
xchg
ss
mov
mov
stc
pop
fdivs
xor
ret
mov
hlt
cld
arpl
mov
xor
nop
ds
inc
push
mov
mov
stos
xchg
lret
es
dec
xchg
dec
int3
es
mov
cmp
in
mov
push
scas
cmp
scas
add
xchg
cmc
in
xor
xchg
push
pop
jecxz
or
mov
lods
gs
xor
mov
int3
mov
imul
es
pop
in
sub
roll
xor
mov
sbb
ret
outsb
adc
ljmp
cmp
cmp
rorl
push
jb
cmp
or
xchg
aas
fdecstp
lds
je
mov
add
test
sbb
xchg
loopne
mov
movsb
ldmxcsr
idiv
leave
mov
xorb
cmp
mov
mov
cmc
lea
lods
xchg
stos
mov
mov
daa
movsl
nop
outsb
xlat
bound
movsbl
adc
dec
ja
xlat
stos
xchg
jle
inc
sub
fisubrl
xchg
sub
dec
lods
mov
fmuls
in
or
test
test
xchg
sub
sbb
andl
pop
aad
aad
xor
inc
mov
repz
lds
and
cld
inc
pusha
aaa
pushf
movsb
cltd
inc
ret
jmp
lcall
lahf
jns
bound
fucomi
mulb
enter
aad
sbb
mov
xor
test
shll
out
mov
lahf
sub
aas
mov
dec
xchg
and
stos
ds
push
std
mov
sbb
scas
sub
ja
leave
pusha
insl
xchg
mov
push
sbbl
scas
xor
push
mov
fiadds
or
and
stos
scas
mov
xchg
movsl
clc
xchg
lahf
dec
fs
pop
xchg
arpl
xchg
fidivl
lods
mov
dec
les
rol
mov
shll
sti
add
sbb
iret
push
in
push
out
add
or
hlt
movsb
out
push
js
ret
pop
mov
push
inc
mov
fnsave
shll
mov
push
adc
mov
jecxz
mov
in
or
mov
les
cmp
cld
sti
mov
push
inc
mov
cmpsl
daa
outsb
dec
inc
sub
add
add
xor
in
sbb
ds
jge
cmp
bound
fcomip
mov
outsb
fadd
addl
or
call
jmp
out
xchg
adc
sub
inc
sbb
leave
sbb
jl
insb
or
and
mov
test
test
enter
std
add
inc
dec
mov
jmp
in
fwait
dec
jb
loop
enter
sbb
in
and
in
sub
jns
gs
xchg
xchg
out
sbb
or
xchg
cmp
sbb
pop
and
adc
icebp
jg
jecxz
pop
jo
imul
lret
pushf
in
mov
jl
subl
shl
clc
lcall
add
pop
lods
adc
mov
ljmp
jbe
add
loop
adc
push
in
sbb
arpl
xchg
add
stc
sbb
cs
sbb
jmp
cmpl
xor
popf
test
inc
jbe
or
jp
fidivrl
mov
cmp
push
sub
mov
pop
fisubrs
inc
cltd
push
ret
jp
mov
fsubl
sub
jp
push
cmpsb
inc
mov
mov
in
int
mov
sub
mov
jl
sbb
mov
push
test
fimull
pusha
stc
sbb
mov
gs
cmp
push
imul
pop
inc
mov
ljmp
sbb
in
insb
jbe
neg
stos
pop
mov
lret
sbbl
mov
lcall
mov
imul
enter
cld
inc
shlb
pop
xchg
rorl
add
and
pop
or
jno
int
xchg
add
orl
sub
test
aas
pusha
inc
inc
cmc
jo
mov
jg
add
jb
pop
jo
mov
ljmp
xchg
sbbl
pop
rclb
push
imul
lret
std
cmc
jae
jb
lods
insl
arpl
or
xor
scas
fwait
mov
imul
decl
and
psrld
add
jbe
mov
popa
pusha
imul
and
xchg
mov
in
cmpb
cmp
out
movsb
nop
scas
inc
sbb
fwait
pushf
cmp
int
inc
xchg
pop
popf
add
push
cld
popa
scas
mov
int
xor
in
jne
add
and
mov
cli
or
fsubs
cmp
jae
cmp
mov
xchg
jbe
pop
xchg
lret
xchg
sbb
jge
mov
adc
loope
imul
ja
mov
or
push
xor
sbb
ret
movl
jmp
repz
clc
or
fldt
xor
test
arpl
mov
enter
sub
iret
out
sub
sub
sbb
test
jecxz
cmp
add
addr16
lret
mov
loopne
daa
int
std
and
cwtl
aad
xor
pop
rol
mov
adc
push
xchg
push
pop
cmp
fldl
insb
sub
sbb
loope
inc
push
cmp
roll
inc
adc
dec
sarb
popf
leave
xchg
or
lods
test
enter
cwtl
adc
mov
lahf
mov
sub
add
or
stos
dec
fdivrs
push
lock
sbb
rcr
add
scas
movsl
push
cmp
xor
xchg
mull
fcomip
enter
roll
lcall
scas
mov
imul
stos
mov
or
dec
scas
pop
popa
push
adc
pop
dec
mov
cmp
out
mov
jo
sub
xor
jg
stos
fcompl
sbb
cmp
inc
hlt
sbb
aas
or
add
push
jmp
int3
test
cmp
fisttps
sub
mov
inc
mov
sbb
mov
sub
das
mov
je
loop
mov
jle
or
inc
jge
mov
lock
aas
jae
in
jbe
loop
aad
ss
pushf
lods
pop
cmp
lods
cwtl
xchg
inc
ficoml
ss
stos
sahf
mov
adc
js
mov
pop
scas
loopne
shrb
popf
push
mov
mov
xor
jnp
inc
add
hlt
and
sti
clc
push
cmpb
stc
fcomps
mov
jbe
mov
push
dec
stos
popl
bound
cld
movsb
andb
in
dec
fdiv
loope
pop
ds
adc
pop
mov
and
inc
jge
and
push
mov
pop
enter
outsb
out
mov
inc
xor
jg
filds
jg
lods
int
out
aas
orl
cld
mov
adc
and
jecxz
mov
pop
push
ret
cs
sub
mov
popf
mov
pop
sti
mov
into
dec
lea
addl
inc
notl
mov
mov
nop
pop
outsb
es
mov
sbb
mov
mov
mov
sbb
fucomi
lea
xor
scas
dec
mov
inc
cmpb
gs
fldcw
xchg
jns
movsl
mov
xlat
jg
insb
xor
lret
movsl
sbb
pop
push
sub
pop
cmpsl
dec
lods
xor
and
dec
mov
mov
pop
hlt
push
cmp
adc
int3
popf
fdivl
mov
lcall
xchg
outsl
jb,pn
sbb
adc
jmp
std
std
jno
mov
xor
inc
mov
testb
jmp
iret
push
pushw
fs
imulb
frstor
inc
fidivrl
add
popa
adc
loopne
push
flds
push
sbb
cmp
sbb
into
sub
jle
push
mov
sahf
push
test
popl
cmp
aas
add
imul
jae
cli
aam
mov
loop
jmp
test
add
mov
push
imul
fcoml
sbb
push
push
movsb
push
mov
add
add
jnp
sbb
movsl
lcall
sahf
sbb
push
jbe
or
repz
xor
sub
and
dec
push
in
xor
or
js
sub
movsb
pusha
add
cmp
pop
sub
or
in
mov
rcrl
adc
xchg
adc
lods
mov
pop
cmc
or
dec
jl
push
mov
ss
aam
push
fimuls
pop
lret
scas
and
addr16
and
cmp
jb,pn
fwait
lahf
aad
mov
mul
mov
repz
sbb
loopne
repz
cmp
cmp
popf
xor
push
mov
push
daa
jnp
aad
dec
aam
cli
lcall
jno
pusha
cmpsb
push
test
push
mul
xchg
jle
shlb
dec
jp
lcall
mov
mov
mov
test
cmc
or
imul
insb
pop
xor
pop
xchg
pop
mov
outsb
jne
push
outsl
add
inc
jmp
clc
add
and
cmp
jbe
xchg
inc
scas
inc
into
sbb
cmpl
in
adc
xor
cmp
in
daa
stos
in
push
push
insl
cli
pop
xchg
sbb
mov
icebp
lods
sbb
xor
pop
mov
loop
pop
push
mov
push
and
adc
sbb
inc
sub
gs
inc
push
les
fildll
cwtl
adc
aas
adc
es
pop
scas
inc
cmp
cmp
xchg
push
and
push
jmp
sarb
cmc
call
push
add
mov
shll
mov
sbb
push
movsb
fdiv
loopne
xchg
shlb
mov
cmp
call
push
push
fwait
popa
and
mov
cmp
in
push
dec
test
push
push
jnp
pop
scas
push
and
adc
or
jge
movsb
test
std
push
xor
xlat
sbb
add
inc
in
or
push
mov
mov
lcall
jno
cmpsb
movsb
add
mov
mov
adc
mov
cmp
int
push
insl
cmpsb
rclb
xchg
mov
xchg
xlat
mov
shlb
in
xchg
pop
jp
sahf
xchg
in
cmpsb
xor
push
clc
inc
sub
cld
jns
sbb
sbb
inc
mov
cmp
mov
repz
push
inc
xchg
or
popa
in
fcoml
mov
out
cwtl
popa
lock
pop
pop
fisubrs
xchg
cld
xchg
fs
push
push
in
jp
aas
shlb
test
jmp
pop
scas
int3
cmp
std
dec
and
stos
mov
dec
loope
jmp
idiv
int3
or
push
aas
mov
cmp
test
dec
mov
push
jno
dec
daa
inc
int
ss
mov
xor
les
pop
or
daa
in
lret
lock
jnp
daa
sbb
leave
adc
lahf
movntq
cmpsl
loopne
mov
test
scas
sbb
adc
into
hlt
cmp
insb
dec
loopne
mov
mov
xor
and
mov
mov
fwait
push
push
dec
sbb
add
jnp
rorl
mov
sahf
adc
frstor
and
aaa
mov
inc
in
insl
lret
lods
mov
push
addb
adc
inc
in
xor
mov
sbb
sar
push
vsqrtpd
dec
adc
pop
adc
mov
xor
jge
addr16
push
popa
mov
mov
and
mov
xchg
sbb
jo
add
jg
pop
add
jns
imul
in
adc
xchg
fbld
notb
mov
int
mov
xchg
fldl
cmp
scas
in
jo
int
lahf
aaa
arpl
iret
dec
adc
sub
add
sti
lret
mov
sub
cli
cmp
fdivl
rorl
daa
and
fwait
and
loopne
out
lock
daa
jge
popf
icebp
pop
aas
push
cmpsb
mov
xchg
rclb
fcomps
add
out
pop
adc
and
ss
dec
add
push
sub
shr
or
push
jp
or
mov
add
in
xchg
jne
jne
rclb
xchg
push
std
outsl
lods
popl
xchg
aaa
xchg
push
fsubl
outsb
daa
pop
inc
mov
faddl
inc
subl
sub
xchg
mov
test
leave
xchg
out
daa
les
mov
test
mov
aaa
hlt
and
pop
xor
push
jbe
lock
movsb
lds
std
scas
ss
dec
popa
sbb
add
lds
xchg
xor
subb
insl
lock
movsl
mov
inc
lods
mov
in
mov
xchg
xor
fisubl
add
xchg
mov
out
mov
repz
jle
outsb
adc
clc
popa
and
fs
mov
sbb
jb
test
mov
push
xchg
mov
mov
jne
test
inc
fwait
sbb
test
mov
add
jbe
jno
aad
or
cmp
adc
addl
add
mov
inc
sti
lock
cmp
mov
rolb
fisubs
adc
shrl
ljmp
aas
jl
fistpll
mov
xor
dec
jp
mov
xlat
sbb
idivl
pop
js
sbb
fisubrl
outsl
outsl
sbb
inc
mov
or
mov
or
pop
scas
in
sbb
dec
pop
pop
popa
cmp
jo
dec
sar
frstor
lea
inc
notl
les
sti
mov
and
adc
push
fisubrl
sub
adc
test
sbb
test
adc
iret
mov
dec
dec
bound
push
es
mov
insl
into
mov
xor
push
jae
push
adcl
mov
xchg
and
mov
cmp
lds
pop
fisttpll
jo
xor
push
iret
out
movb
faddl
mov
stos
jb
cmp
aad
xor
frstor
jns
fidivs
xchg
mov
mov
les
mov
sbb
imul
aad
cwtl
pop
jne
das
sub
orb
mov
mov
lods
dec
pop
sub
mov
jl
pushf
mov
xchg
hlt
js
sbb
das
sub
popa
out
sbb
insb
out
sbb
sub
aam
mov
cmp
lods
mov
dec
cli
pop
test
cwtl
repz
xchg
mov
inc
data16
mov
mov
out
and
ja
cld
daa
outsb
jae
mov
fdivl
inc
xor
addr16
xchg
aad
subb
sbb
mov
adc
xor
sub
add
stos
xchg
xchg
fcomps
jo
lods
mov
lcall
and
imul
cmp
mov
xor
outsl
hlt
mov
mov
and
sarl
dec
and
mov
jg
out
rorb
sahf
loop
inc
cld
or
xchg
ror
mov
jno
cmpsl
shl
sub
push
inc
xchg
jmp
sub
inc
or
and
pop
sbb
adc
ror
pop
mov
sbb
jmp
jae
mov
inc
fidivs
mov
test
test
adc
fstpl
jno
mov
pusha
repz
ja
sbb
jl
pop
xor
adcl
pop
jo
ret
lret
cmpsb
stos
push
dec
mov
sbb
mov
lea
sub
mov
pushf
out
xor
push
push
push
push
sub
xor
subb
nop
sbbl
in
mov
mul
push
xchg
jne
stos
jno
das
movsl
sbb
mov
les
not
fwait
mov
shll
inc
pop
in
lcall
clc
ror
pop
into
mov
jo
and
add
cmp
pop
mov
mov
aas
nop
cmp
sbb
cmp
sub
lock
xor
enter
xchg
dec
mov
dec
insb
add
inc
add
jg
mov
data16
outsl
cli
inc
loopne
mov
aaa
or
push
sbb
out
in
mov
inc
sub
scas
and
clc
jne
sub
cmp
fistpll
or
xor
jne
mov
sub
sub
aas
rcll
mov
jl
jb
clc
xchg
imul
cmc
arpl
vpshuflw
mov
add
cmpsl
subl
lods
jmp
mov
mov
jns
ds
pop
mov
call
push
ljmp
out
xchg
xchg
or
lret
adc
fdivrp
or
jae
mov
add
add
cmp
dec
push
stos
lock
xchg
xchg
mov
pop
stc
sbb
lea
inc
add
mov
jnp
lret
add
mov
mov
xchg
ret
cmc
push
or
push
sbb
lods
mov
mov
bnd
mov
das
add
pusha
fwait
out
pop
jbe
or
in
test
pushf
in
ss
stos
inc
inc
enter
stos
into
cmc
ret
mov
outsb
mov
fimull
aad
movsl
mov
sarl
xor
mov
jnp
inc
inc
mov
xor
nop
call
repz
fs
out
dec
pushf
xor
mov
xchg
pop
addb
inc
je
paddw
and
adc
in
lahf
mov
jp
jl
xchg
sub
inc
daa
add
mov
dec
add
add
enter
lea
shlb
sarb
dec
cmp
inc
xlat
test
orl
and
sub
inc
orb
adc
inc
pop
adc
cmpsl
lret
inc
in
cmova
adc
jne
fcmovne
je
pop
dec
nop
xchg
lock
out
clc
hlt
rep
inc
mov
dec
das
adc
bound
pop
pop
mov
ficompl
cmpsb
xor
idivl
std
inc
imulb
and
cli
and
cmp
pushf
cmpsl
cmpsl
leave
sub
and
add
ret
push
xchg
jmp
ljmp
fimuls
movsb
data16
test
daa
mov
movsl
mov
jle
loopne
aas
insl
pop
push
mov
xchg
repnz
mov
mov
xchg
adc
sbb
and
push
ret
daa
add
rorl
js
mov
or
cltd
push
dec
jg
andl
sub
in
in
sub
and
lar
jae
inc
inc
jnp
push
stos
insl
jns
sub
mov
xor
and
mov
in
pop
xchg
test
pop
icebp
dec
in
scas
bound
inc
adc
das
push
or
lds
sub
bound
mov
hlt
popw
roll
mov
mov
pop
in
repz
cmc
xor
mov
jnp
sub
jb
lret
inc
ret
pop
sbb
push
jo
stos
fmull
lret
mov
mov
pusha
lods
mov
adc
gs
leave
sub
insb
lods
lods
repnz
add
dec
shrb
fisttps
sub
and
cli
fsts
in
mov
adc
stc
and
xchg
sub
addr16
jb
scas
es
mov
test
xchg
xchg
arpl
repnz
xchg
sbb
xchg
xchg
scas
int3
mov
lock
leave
push
add
incb
das
xor
push
les
icebp
ja
xor
mov
lahf
sbb
test
stos
mov
push
js
xchg
pushf
repz
fisttps
pop
cmpl
iret
imul
add
xor
fs
sahf
lods
fs
sbb
sbb
pop
mov
je
mov
insb
lahf
adc
mov
jno
pop
add
ja
mov
mov
sub
or
shlb
inc
in
adc
adc
testb
jp
cwtl
and
sbbl
sbb
es
adc
mov
lods
scas
test
mov
push
pop
or
sbbl
mov
into
adc
dec
jle
sub
stc
movsl
or
or
adc
fisubrl
icebp
and
push
cmp
and
pop
inc
repnz
sbb
sti
sub
es
cmpl
daa
jecxz
cwtl
jmp
jae
ret
out
mov
pop
jbe
xchg
notb
mov
mov
cli
push
insl
mov
fbld
cmp
fildl
shll
clc
leave
xor
xor
lret
faddl
dec
sub
inc
mov
mov
int
in
lods
jb
cmp
pusha
out
inc
ds
into
mov
adc
shlb
mov
aas
test
push
xlat
jp
dec
ss
xchg
loop
or
pop
fsts
and
xchg
push
inc
lods
aad
shlb
fwait
int
jns
pop
std
loop
push
aas
stos
mov
cmp
jecxz
das
dec
test
mov
inc
push
xor
pop
push
sub
lahf
shrl
les
mov
xchg
add
add
mov
xor
sub
or
xchg
cmp
push
mov
or
xchg
xor
cld
push
and
adc
push
repz
xchg
scas
jp
sbb
popw
jg
ror
pop
je
fstl
mov
push
sbb
jo
inc
push
imul
aam
mov
xorb
sub
popf
pusha
mov
jmp
xor
fmulp
sub
shrb
inc
cmc
out
ret
aad
cmc
cmp
jge
mov
inc
push
cmp
in
mov
add
jl
lods
and
push
inc
adc
insl
gs
and
or
lret
es
xor
rcr
pop
pop
leave
pop
cltd
repnz
adc
sub
pop
mov
mov
pop
cmpsl
ret
xchg
or
sub
inc
mov
jno
arpl
imul
sarb
push
imul
and
add
xchg
cs
fldl
add
cmp
dec
cld
repnz
faddl
push
scas
out
ljmp
repnz
adcl
mov
imul
in
adc
faddl
mov
cmpsl
shl
sub
dec
xor
fcmovb
nop
xor
sub
in
push
dec
mov
lcall
pop
and
push
test
jl
and
pushf
rcrl
pusha
out
mov
or
fldlg2
clc
inc
or
ret
daa
mov
mov
sarb
jo
imul
or
sub
mov
jmp
or
jns
xor
xlat
scas
ror
xchg
fisubs
rcr
xchg
inc
sbbb
jecxz
mov
bnd
cmp
or
dec
xchg
inc
sbb
pop
adc
add
sbb
pop
mov
jo
es
mull
or
decl
lods
dec
fcmovnb
leave
xor
push
dec
sub
and
push
clc
clc
add
nop
in
cmpsl
mov
or
and
sub
xchg
mov
jle
adc
mov
jle
mov
int
xor
mov
dec
jne
in
orl
or
ret
aaa
scas
and
pop
pop
push
sub
pop
jge
in
stos
xor
jl
pop
and
mov
int
sub
mov
test
sahf
pop
shr
or
lea
in
pop
repz
jl,pt
cmpsl
push
push
stos
enter
into
pop
or
xor
ret
call
int3
bound
xchg
cmp
xor
xor
sub
pop
mov
cmpsb
sbb
loop
into
insb
cmp
movsl
inc
or
jae
cmc
in
pop
or
aad
shll
add
sbb
cltd
fsubr
scas
mov
data16
cmpsb
pop
pop
fwait
inc
pop
mov
mov
in
das
cmp
ds
mov
and
in
jl
jb,pt
mov
mov
jg
mov
lock
mov
sbb
jg
push
stos
ljmp
and
dec
in
inc
pop
inc
mov
mov
xor
cmp
movsb
fcmove
mov
pop
sbb
scas
mov
add
and
lcall
inc
xor
or
sub
jle
mov
adc
ss
rcr
daa
and
and
or
repz
jne
scas
or
inc
jg
dec
sub
cmp
adc
inc
inc
pop
jle
out
inc
push
outsl
inc
jmp
sub
inc
icebp
and
inc
repnz
rorl
mov
js
inc
jmp
out
fsubs
ret
lods
into
data16
sub
mov
testl
or
jns
fidivs
mov
pop
push
popa
sbb
pusha
lret
clc
mov
les
inc
push
jmp
imul
cmp
add
dec
push
add
leave
sbb
xchg
xor
shll
dec
add
fs
inc
cli
xchg
mov
loopne
push
jecxz
mov
aam
insb
xor
rolb
and
cmp
roll
jno
ffree
jne
test
divl
xor
cmpsb
jnp
data16
sbb
gs
xor
pop
sub
push
or
dec
insl
xchg
inc
scas
loopne
lahf
sub
sar
sub
in
jg,pt
push
adcl
pop
push
lods
adc
test
jp
adc
and
or
jbe
sub
aaa
mov
es
mov
mov
imul
popf
nop
cmp
add
push
push
fbstp
sub
sub
ds
clc
mov
lea
inc
dec
popf
push
movsb
cltd
mov
fwait
ret
pop
xchg
xorb
sub
sub
push
loopne
dec
adc
jmp
outsl
mov
xchg
jmp
push
aas
dec
mov
int
int3
cmp
gs
daa
add
scas
mov
cwtl
adc
sub
into
cmpsb
inc
adc
add
or
les
loopne
mov
lret
rcrl
in
int
pop
loopne
jb
mov
dec
cmpsl
sub
inc
jg
mov
in
dec
test
stos
movl
sub
negb
xchg
out
jne
mov
cmp
adc
std
cmp
fsubrs
jg
push
sub
in
sub
mov
subb
lock
cmpsb
dec
jnp
div
jl
jp
mov
push
loopne
cs
jg
popf
aas
cmp
hlt
movsb
pop
shlb
loope
add
jae
dec
or
test
cmpb
popa
xchg
in
and
vpackssdw
decl
jle
xchg
shrl
test
sbb
sbb
mov
jmp
xchg
pusha
mov
push
lret
push
push
lahf
or
nop
data16
rorb
fdivrs
jle
pusha
xor
cmp
xchg
mov
fisttpll
int3
push
dec
jge
or
jmp
mov
dec
xchg
pop
or
inc
loop
outsb
push
push
dec
cltd
sbb
aam
jbe
cltd
je
int
shl
cltd
ljmp
xchg
mov
mov
bnd
mov
les
adc
mov
mov
cli
jg
or
ja
mov
pusha
rol
dec
jle
call
jecxz
sub
mov
sbb
fldt
es
pop
pop
push
sub
xlat
inc
pop
adc
popa
jg
repz
dec
repz
push
arpl
outsl
pushl
push
repz
incl
mov
ficomps
rolb
xlat
stc
xchg
push
and
mov
or
mov
mov
sub
hlt
call
pop
ret
sbb
and
add
nop
nop
fcoml
cmp
std
iret
mov
arpl
jg
ds
jle
and
and
loop
xor
inc
push
sub
add
or
lcall
lods
push
dec
xlat
movsl
lds
adc
mov
fstpl
mov
popa
jp
adc
xchg
xor
inc
icebp
or
ja
cld
movsb
je
push
leave
xchg
sahf
inc
adc
test
test
sub
idivb
inc
pushl
mov
fnsave
push
aas
aam
ss
mov
xor
cmp
cmp
mov
mov
mov
inc
je
xchg
fisttps
dec
push
dec
and
fldcw
aam
sub
hlt
sbb
dec
inc
aam
adc
dec
repz
mov
dec
outsl
push
push
and
adc
jne
xor
cmp
hlt
and
sbb
inc
test
shrl
jns
lods
in
inc
aad
xchg
pop
shlb
push
sub
out
loopne
fadd
xor
aaa
clc
mov
and
mov
stos
leave
push
inc
decl
test
loop
pop
imul
or
or
push
lret
sbb
and
mov
cmc
aam
sbb
lret
dec
les
mov
std
add
pop
pop
xlat
push
test
fnsave
sub
insl
sub
lahf
dec
mov
jnp
popf
push
out
lea
push
and
xor
pop
or
and
test
sbb
cmc
cmpsb
inc
cmp
inc
xchg
add
addr16
arpl
insb
pop
out
mov
mov
mov
adc
xchg
and
and
mov
pusha
lret
jbe
xor
iret
adc
repnz
mov
mov
cmc
add
sti
mov
data16
imul
xchg
test
push
lock
fnstenv
mov
cmp
leave
push
cmp
bound
cld
loopne
add
repz
data16
mov
dec
stos
mov
jns
mov
push
sbb
notb
je
mov
pushfw
movsb
iret
test
adc
mov
mov
xor
pop
push
out
inc
negb
negl
stc
lock
xor
dec
jo
sub
rcr
out
cmpsb
mov
jae
pop
test
mov
loope
xchg
pop
lock
xchg
push
inc
mov
mov
jns
dec
popa
sbb
jmp
jo
fimull
add
mov
mov
mov
or
inc
jb
ret
rclb
jp
popf
hlt
sahf
inc
mov
ds
push
jne
loop
push
mov
or
aam
testb
cmp
add
sub
addb
add
lds
idivl
pop
jp
adc
das
imul
sub
fwait
out
xlat
jmp
xchg
in
xchg
pop
jbe
lcall
out
xchg
dec
push
out
aad
push
sbb
outsb
adc
je
in
fdivrs
mov
testb
shll
iret
xor
dec
add
or
xor
repz
enter
pop
enter
sti
in
jecxz
mov
rcr
add
push
lds
jo
push
sbb
add
icebp
in
mov
pop
in
jae
mov
jmp
pop
ljmp
movsb
hlt
int
xchg
insl
lahf
test
fwait
imul
mov
arpl
aad
lds
scas
movsl
add
dec
sti
add
cmpsl
dec
mov
aaa
aam
ds
sbb
mov
xor
std
stc
clc
cli
fistps
mov
push
jl
enter
push
xchg
sub
pop
js
enter
mov
mov
or
ret
repnz
mov
sbb
add
lods
cmp
repz
cmpsl
neg
shlb
insl
xchg
call
aad
pushf
xlat
sbb
jmp
lret
pop
dec
sbb
xor
dec
call
aad
dec
call
dec
mov
outsl
mov
out
and
push
xor
cmp
mov
sub
das
subb
or
stc
pop
inc
in
into
mov
mov
fst
aas
pop
dec
push
test
cmpsl
push
dec
hlt
icebp
inc
int
pushf
sub
fucomi
jne
pop
add
sbb
cli
mov
lods
dec
and
dec
mov
xchg
jo
jne
push
xor
pop
leave
cmp
je
push
push
mov
push
sbb
imul
loope
cwtl
and
cmpsl
in
add
loop
xchg
daa
pushf
xlat
jecxz
sarb
dec
daa
es
push
ret
mov
sbb
add
sbb
rcrl
int3
inc
add
adc
call
push
push
lea
and
ljmp
push
xchg
jns
sub
push
insl
mov
icebp
cmp
cmp
push
filds
outsb
leave
movsl
shl
aaa
cmp
call
in
and
int3
outsb
and
lods
adc
hlt
mov
hlt
dec
cmpsb
jbe
sub
idivb
mov
loope
fisttpl
adc
cld
ja
sub
sbb
fs
jp
mov
mov
addr16
fistl
aam
or
leave
int
rcr
dec
lods
out
push
jge
jno
mov
push
sahf
popa
dec
or
jo
sub
jns
ja
lock
xor
js
push
xor
mov
pop
iret
test
cmp
test
cmp
repz
xchg
mov
in
jbe
mov
es
in
div
lock
in
pusha
gs
sti
and
xlat
push
cmp
xchg
mov
and
sub
sbb
fdivl
pushf
stos
mov
and
lcall
lods
shr
les
xchg
clc
out
adc
fbld
mov
andl
mov
inc
jbe
pop
pop
xchg
insl
jp
rorb
ljmp
adc
pop
xor
dec
pop
push
inc
push
in
int
xor
addl
cmp
jecxz
repz
sarb
push
nop
imul
into
arpl
or
sbbb
mov
rcr
mov
outsb
inc
jnp
adc
or
adc
in
sarb
mov
inc
shrl
and
pop
or
push
xchg
mov
cmp
imul
mov
fwait
dec
bnd
push
popl
mov
bound
decl
pop
clc
gs
loopne
int
addr16
xchg
push
or
push
lcall
push
int
add
pop
imul
aad
xchg
sub
jge
inc
xor
mov
mov
jle
add
rorb
and
xchg
stc
xorl
push
out
xchg
push
xor
sbb
push
inc
or
inc
add
sarl
sbb
and
xchg
fcomps
in
xor
test
jmp
sbb
add
pop
xor
int
cmp
gs
scas
mov
insb
aad
sbb
or
mov
or
dec
or
cmpsl
data16
add
or
and
repz
cmp
lods
xor
sub
and
adc
outsl
aam
push
xor
xor
fstp
sub
lock
dec
iret
sub
into
push
sbb
int
xlat
iret
lods
sub
sbb
bound
enter
mov
in
sub
inc
test
or
addr16
cld
xor
mov
fadd
mov
mov
push
mov
faddl
mov
jns
mov
cli
test
pop
xlat
dec
xor
jle
jno
sub
in
stos
sbb
es
jo
test
push
mov
lods
xorb
ret
adc
loop
cld
sub
or
mov
lds
cmp
xor
pop
loop
dec
xchg
cmp
push
lea
jae
and
inc
sub
jno
sub
jne
mov
inc
dec
xchg
mov
out
leave
cmp
cmp
aad
lahf
cmp
and
insb
mov
loope
std
xchg
daa
pop
movsl
loope
lods
adc
lock
lret
and
pop
ret
decb
xor
mov
test
add
cltd
push
popf
xchg
mov
rorb
sbb
push
adc
pop
pop
push
repz
shlb
mov
test
aaa
pop
cltd
mov
int3
or
xchg
ljmp
mov
insl
movsb
in
lods
cmp
loopne
cmc
xor
push
mov
mov
ds
roll
insl
lahf
cltd
aaa
inc
lahf
jecxz
loop
ficoml
xor
pop
movsl
or
mov
push
sbb
dec
cmp
popf
cwtl
cmc
jge
je
call
mov
inc
addr16
mov
jnp
subb
dec
lahf
inc
sub
cmp
sbb
sti
mov
call
lds
aas
int3
cmp
lods
xorb
fisubs
jns
fidivl
ds
test
dec
loopne
addl
jg
mov
pushf
and
orb
ljmp
mov
stc
lahf
cmpsl
test
test
push
icebp
daa
lods
aas
aaa
and
inc
and
loope
lret
inc
int
cs
xchg
iret
cld
fdivrs
jns
test
inc
sub
popa
pop
loope
fstpt
mov
addr16
cs
popa
movsb
outsl
imul
push
jnp
mov
ds
out
xchg
testl
jns
iret
cmp
test
divb
scas
insb
out
add
shr
mov
inc
lcall
out
lods
jmp
dec
loop
mov
inc
push
aad
xchg
nop
scas
and
lret
pop
je
pop
lahf
out
ds
mov
xchg
leave
add
inc
add
std
mov
sub
jge
sbb
movsb
and
rcl
lret
push
adc
dec
mov
paddusb
fisubl
sbb
out
sub
outsb
mov
jb
xchg
xchg
movsb
adc
or
mov
pop
pop
imul
out
outsw
roll
inc
inc
aad
or
adc
jp
xor
inc
add
dec
xor
pusha
pop
inc
adc
repnz
mov
loop
inc
mov
mov
rcrl
push
push
fbld
out
test
mov
mov
imul
add
adc
and
nop
xor
or
push
dec
clc
sub
pop
cmc
cmpsl
fwait
leave
sti
jecxz
push
icebp
nop
adc
push
mov
add
lcall
inc
inc
mov
jg
xchg
lret
push
jg
sub
jg
cmp
and
push
cli
mov
in
popf
xlat
mov
push
dec
sahf
int
cmpsl
sub
or
xchg
inc
mov
ror
jle
pop
std
mov
ja
scas
aas
sub
jl
push
lock
push
sbb
ret
push
std
mov
das
and
inc
ret
push
inc
aaa
mov
sub
call
int3
ja
sub
repz
cmp
adc
bound
sbb
lahf
int
inc
dec
inc
shrb
xchg
mov
lcall
pushf
sbb
xchg
push
out
pop
cli
inc
test
jmp
nop
adc
jl
ret
sbb
ficoms
jae
gs
jnp
mov
jge
imul
clc
xchg
shlb
das
cmp
ret
xchg
and
sub
cmp
adc
push
leave
inc
ret
add
xchg
dec
loop
add
sbb
xor
pop
cwtl
bound
or
stos
push
lock
jecxz
sbb
jno
cmpsb
addr16
xchg
lahf
lds
xchg
add
push
mov
enter
xor
gs
mov
mov
xor
sti
push
repnz
or
pop
xchg
hlt
cmc
adc
push
or
shlb
mov
es
add
arpl
push
out
sub
pop
adc
sbb
mov
rorl
stos
adc
adcl
jl
out
dec
pop
popf
jg
cmp
push
pop
jecxz
shl
fs
dec
leave
loop
mov
bsf
js
bound
imul
pop
jmp
aam
jo
std
lds
je
fistpll
into
inc
sub
mov
data16
cli
mov
cwtl
sub
inc
cld
inc
add
dec
mov
daa
orl
pop
ret
and
push
jl
xchg
fcomps
or
orl
push
rolb
popf
and
stc
inc
xchg
and
bound
repnz
fbld
test
sti
and
imul
out
fdivrl
and
dec
sbb
inc
cmc
mov
inc
sbb
xor
icebp
in
lds
std
cmpsb
scas
sbb
pop
mov
mov
mov
push
popa
cli
xor
mov
push
loope
insl
push
mov
adc
xor
adc
adc
rcll
lret
lret
xchg
das
push
mov
es
loop
xchg
jmp
add
xor
out
add
mov
cli
pusha
mov
notl
ja
mov
jae
call
push
mov
mov
idivl
cli
xchg
dec
arpl
int3
test
loope
dec
ret
arpl
mov
insl
sbb
jecxz
add
adc
mov
or
mov
or
or
mov
sbb
or
mov
dec
push
pop
test
data16
pop
inc
pushf
push
out
cltd
nop
movsb
jo,pt
rorb
daa
ss
insb
and
sti
in
adc
sub
push
sbb
mov
dec
int
push
repz
mov
pop
lea
rcr
xchg
popf
inc
xor
xor
inc
jnp
out
test
jnp
jb
dec
icebp
out
sbb
pop
jmp
add
out
mov
fiaddl
cmp
cmp
int3
mov
mov
push
jbe
add
push
xchg
imul
jns
push
stc
insl
stos
cld
sub
add
sub
xor
repnz
fwait
pop
jg
fpatan
mov
aas
dec
outsl
shrb
mov
sub
push
cli
cld
sbb
mov
std
sub
xlat
mov
mov
loopne
clc
mov
test
insl
stos
push
out
pushf
or
test
flds
mov
xchg
out
push
clc
sbb
xchg
dec
jmp
sti
push
push
das
repnz
dec
cli
ja
js
inc
ljmp
mov
adc
fnstcw
fsubrl
and
cs
out
adc
and
mov
pusha
arpl
loope
mov
pop
mov
mov
movsl
sub
sbb
out
mov
aad
sbb
std
in
push
outsb
fwait
xchg
sbb
mov
mov
lret
and
xor
mov
mov
aas
fistpll
or
test
xchg
mov
lods
push
imul
lds
and
or
add
call
jbe
outsl
mov
lcall
mov
jg
lret
inc
ficompl
push
insl
mov
or
fdivrs
cmp
mov
xchg
mov
xlat
ret
loope
nop
loop
mov
aam
popa
mov
in
mov
mov
xchg
mov
es
fcompl
xchg
aad
cmp
xchg
hlt
xchg
and
push
loopne
fbstp
mov
les
mov
loopne
push
cli
loope
sti
pop
lds
adc
inc
fmull
dec
cli
adc
sbb
rcrb
mov
neg
inc
arpl
mov
pop
nop
ret
into
imulb
dec
es
fldt
scas
cmp
adc
lea
mov
fucom
push
clc
xor
rcr
popf
stc
cmp
mov
mov
xchg
pop
dec
cltd
jnp
xchg
cmpsl
add
pop
inc
pushf
mov
repnz
jno
ds
dec
in
jl
add
and
sbb
lock
mov
sahf
rorl
pop
cmpsl
pop
pop
xchg
sbbb
sub
inc
ret
je
sub
xorb
mov
mov
inc
adc
pop
jg
sahf
dec
xchg
idivl
hlt
rcrb
scas
mov
sti
add
in
pushf
xor
xor
mov
pop
mov
mov
in
std
pop
jnp
adc
dec
ds
aas
pop
cmp
mov
movsl
rcl
dec
sti
sbb
insb
fs
adc
stc
rcr
mov
fiaddl
and
mov
insb
jmp
fdiv
es
aad
outsl
testl
outsl
roll
cs
sbb
mov
pop
sbb
les
and
rorl
stos
iret
ja
jecxz
mov
add
movsl
in
jne
movsl
mov
das
adc
sahf
fildll
mov
nop
mov
insl
jb
push
mov
dec
lcall
push
push
scas
ljmp
mov
dec
dec
dec
out
and
add
inc
loope
pop
in
fwait
out
aam
test
call
jle
jo
nopl
xor
adcl
pop
sub
dec
addl
pushf
sti
aam
push
js
mov
adc
mov
dec
in
ljmp
mov
punpcklbw
mov
stc
rcl
shl
fdivrl
ret
psubq
pop
jae
push
call
mov
pop
push
mov
pop
pop
adc
outsl
cli
ljmp
mov
mov
inc
sub
lahf
frstor
test
cwtl
jne
or
lods
hlt
dec
jbe
movsl
cmc
enter
xor
mov
pusha
aaa
add
out
adc
xor
dec
repz
push
xchg
mov
dec
and
test
adc
rorb
cwtl
mov
cmp
adc
push
in
cmp
pusha
dec
pop
and
mov
xchg
dec
sahf
lods
ja
rorb
mov
push
sub
outsl
enter
lods
sub
clc
into
xlat
rcr
imul
lods
out
dec
jecxz
repz
adc
mov
cmpsl
and
andb
xlat
stc
mov
and
jb
aam
jmp
push
imul
out
inc
add
sub
mov
push
adc
popa
sbb
xor
lcall
hlt
pop
jecxz
stos
inc
loopne
add
xor
outsb
fs
jge
in
sbb
scas
mov
or
or
fdivs
push
les
dec
insb
jecxz
fimuls
mov
push
or
xor
scas
rorl
rcll
xchg
adc
pop
push
push
sbb
gs
call
roll
test
pop
std
mov
negb
addb
test
std
fcoms
mov
outsl
sti
pop
mov
mov
jb
out
push
popf
pop
sub
iret
push
popa
clc
lret
inc
lods
push
xchg
mov
mov
lods
push
push
pop
mov
sbb
loop
out
cmp
in
xchg
dec
int3
jg
ja
jle
data16
fildll
dec
cmp
lret
cmp
jns
mov
or
and
shr
test
mov
push
dec
sti
mov
mov
fadds
mov
pusha
mov
fnsave
push
fs
cmp
fdivrp
cmp
xchg
pop
xor
ret
xor
xchg
pop
aam
jb
and
sbb
jp
dec
jecxz
sbb
int3
fcmovnu
divb
and
orb
inc
xchg
sub
adc
shrl
aas
jmp
outsl
jl
jge
add
test
xor
add
or
mov
movsl
fidivl
inc
inc
inc
in
cmp
test
jns
lock
xor
lods
push
lds
push
push
push
jp
inc
mov
inc
pusha
cli
cwtl
and
or
lds
pop
scas
and
xchg
arpl
cmp
cmp
in
fildll
outsb
sbb
loop
in
cmp
fsubs
jl
fidivl
mov
movsw
cmp
add
mov
cmp
lods
cmpsb
pop
jbe
xorb
rorl
add
push
mov
aam
imul
lcall
dec
fstpt
stos
xchg
lcall
inc
and
test
sbb
out
cmp
subb
dec
into
je
fisubs
inc
icebp
push
outsb
add
mov
xor
pop
jle
stc
int
or
push
push
lahf
arpl
in
and
stos
dec
shrb
pop
mov
cmp
in
outsb
mov
dec
inc
jae
mov
sti
es
mov
loop
jle
and
push
inc
jg
push
jno
xor
add
cmp
pop
mov
xchg
jno
out
mov
in
jns
pop
mov
cmp
and
fdiv
leavew
push
movsl
outsb
iret
fimuls
xchg
mov
loop
xchg
mov
inc
popl
sub
lahf
in
mov
cmc
dec
sbb
enter
dec
lods
mov
fildl
jl
cmpsb
int3
in
out
xchg
or
out
or
scas
sbb
jbe
inc
lods
gs
gs
dec
test
fs
pop
sub
out
lock
lret
inc
mov
shlb
sub
jae
mov
fnstsw
push
push
sbb
loopne
sub
out
fimuls
push
call
cld
out
lret
sbb
add
mov
adc
dec
test
jnp
push
outsl
orl
push
ljmp
inc
mov
leave
jg
and
dec
jp
dec
add
adc
inc
stc
lahf
mull
cli
xor
addl
lea
je
push
cltd
decl
dec
push
fistpl
jne
inc
clc
in
dec
icebp
out
jecxz
push
cmpsb
mov
push
int3
sbb
cmp
xchg
fcmovne
out
clc
push
mov
jbe
sbb
xchg
adcl
mov
aaa
aas
mov
sahf
push
push
jae
mov
mov
add
cltd
shll
es
add
sub
jmp
ret
dec
mov
les
test
in
cmp
jnp
ret
add
imul
jae
cwtl
popf
repz
mov
add
jmp
cmp
je
sbbl
mov
ljmp
rcrb
push
inc
push
xor
rcl
xlat
xor
or
out
push
cli
test
orb
fwait
pop
or
adc
push
out
mov
jae
lods
cld
in
mov
subb
adc
mul
ja
and
mov
push
insl
ret
xor
cmp
cltd
aaa
jb
push
mov
jbe
sbb
or
dec
cmp
outsl
cmpsb
and
jne
add
into
mov
xchg
adc
cwtl
aaa
add
push
rcll
dec
out
insb
icebp
pop
cmpsl
outsl
push
mov
outsb
out
in
sub
fs
or
repz
dec
and
shlb
stc
add
xchg
ljmp
xchg
pushf
aad
movsb
jae
lds
inc
add
shlb
dec
fxam
fsubr
scas
cmpl
sbb
push
test
xchg
inc
out
pop
dec
loopne
push
lret
pushf
stc
sub
fiaddl
insb
push
jmp
pop
sbb
mov
jge
dec
pop
popf
lds
arpl
cmp
stos
loopne
sub
sub
bound
in
push
test
bound
mov
mov
fildl
dec
ret
add
js
ret
fs
cld
add
lods
out
or
xchg
lds
js
hlt
inc
mov
sub
push
cwtl
sti
shll
test
vpaddsb
ljmp
push
aad
sub
fwait
sarl
or
mov
mov
scas
and
sub
dec
push
add
and
divl
cwtl
dec
inc
or
inc
aad
stos
out
lcall
cltd
inc
add
mov
jae
incb
or
pushf
movsl
fmuls
jmp
sbb
fcmovne
loop
iret
out
into
jl
cmc
add
arpl
in
add
pop
dec
pop
sub
call
or
adc
dec
dec
lods
cmp
inc
out
mov
dec
mov
andb
cmpsl
xlat
xchg
lret
pushf
xchg
sti
test
add
or
inc
inc
inc
mov
pop
push
sub
lea
sbb
lret
scas
add
out
inc
lock
sbb
adc
aad
xor
pop
in
jl
mov
mov
call
cmp
jne
bound
jmp
and
in
out
inc
push
sbb
xor
in
out
push
negb
imul
and
cmpsb
adc
mov
add
pop
mov
inc
jl
addl
push
pop
fcomip
inc
push
xor
add
xchg
cmpsb
js
xchg
and
adc
cmp
fwait
sbb
add
dec
stos
add
cmp
and
add
les
movsl
cmp
cmpsb
jge
dec
scas
push
and
and
lock
jp
popa
inc
pop
sbb
pop
dec
popa
test
ret
dec
cmp
roll
popw
add
lcall
ret
or
mov
adc
repnz
cltd
fnstsw
nop
pop
aam
and
and
jb
imul
mov
aam
outsb
mov
mov
pop
jge
cmp
unpckhps
sub
popa
push
mov
lock
xor
or
insb
cli
mov
orl
in
mov
sub
sub
or
shlb
fsubrs
or
jmp
sti
popa
cmp
lock
mov
aas
aad
dec
aam
lods
movsb
jge
pop
mov
and
cmp
jg
and
sub
cmpsl
fwait
xor
mov
rolb
mov
int3
mov
xor
xor
test
sub
jae
jg
gs
push
aad
int
xchg
sub
std
hlt
shl
repz
adc
fiaddl
sbb
jo
in
pop
ljmp
ja
jns
mov
cli
enter
outsl
lods
push
lods
and
rclb
push
pop
insl
lret
inc
xchg
arpl
mov
popl
sbb
cmp
aas
rcrl
ss
dec
ds
adc
aaa
xchg
jmp
inc
outsl
sarl
sbb
sub
nop
into
int3
sarb
ljmp
cmp
insb
fstpt
xchg
imul
icebp
ret
push
aad
faddl
pop
test
push
pop
inc
outsl
fld
out
sub
and
test
leave
cmp
loopne
je
sar
popf
jns
pop
test
push
test
loope
fmull
stos
adc
jle
push
gs
adc
adc
stos
movsb
loope
fdivl
imul
setge
mov
movsb
pop
push
push
add
xchg
jecxz
push
jb
push
xlat
cmp
cmc
lcall
shrl
xor
pusha
call
lock
or
sbb
adc
out
pusha
xchg
push
movsl
call
add
push
stos
dec
std
pop
mov
icebp
test
test
jb
dec
sbb
or
mov
sub
dec
cltd
sub
inc
test
sbb
jecxz
movsl
push
cmp
aad
push
out
insl
sbb
ljmpw
push
stos
cmp
inc
outsb
cmp
pushf
stos
outsl
xchg
shlb
fwait
ljmp
or
xchg
mov
jmp
or
bound
lcall
xor
add
sub
into
fcompl
mov
imul
jg
fimull
fwait
rolb
sti
ja
add
shrb
cmpsl
subl
push
cld
jle
movsl
lret
imul
sub
xchg
add
xchg
pop
pop
mov
mov
fdivp
arpl
cmp
aam
data16
jmp
std
arpl
mov
frstor
mov
mov
adc
jmp
jno
in
xchg
sbb
adc
fucomip
pop
push
sahf
mov
xor
lcall
sub
rolb
insb
loopne
mov
das
daa
rcrb
js
push
mov
mov
xlat
add
dec
outsl
cli
add
clc
lret
or
cmp
mov
cmc
mov
pop
xchg
cs
data16
lock
das
inc
out
int3
jecxz
outsl
scas
jno
cmpsb
lods
cmpsb
add
repz
dec
test
or
addr16
cmp
test
loope
mov
fimuls
sub
add
rolb
pop
dec
xor
cmpsl
pop
mov
jnp
inc
sbb
adcb
lods
xlat
scas
cli
jle
pop
jg
xor
sbb
push
movsl
and
out
push
xchg
pop
jmp
lods
lock
add
add
nop
inc
mov
imul
loop
or
mov
mov
imul
cmp
cwtl
sub
sub
or
mov
mov
dec
sub
jl
cmp
mov
lods
jl
aad
pop
xor
insb
sbb
sbb
clc
mov
bound
add
adc
daa
ds
dec
xor
xchg
and
dec
or
fld
test
fmuls
adc
push
xchg
xchg
pop
xchg
push
lcall
dec
lcall
imul
loope
nop
test
ret
mov
sub
or
jae
in
leave
dec
inc
jnp
sub
aaa
and
pop
mov
jg
cltd
push
or
and
jae
pop
setae
insl
pushf
pop
push
ret
rcll
clc
nop
clc
sbb
push
stos
ja
aas
or
ja
imul
mov
mov
scas
jmp
enter
lods
mov
adc
in
imul
test
in
jne
sub
lds
int
jb
in
mov
add
sub
je
push
lret
add
mov
shll
and
negb
fwait
inc
movl
pop
sarb
mov
mov
pop
sti
fcoml
out
cmpsl
test
loop
testb
jne
cwtl
mov
jle
inc
cltd
and
ss
daa
rol
fbstp
cmp
push
and
addr16
sbbb
add
fstpt
pop
push
movsl
lcall
lds
dec
sub
je
push
sbb
dec
pushl
test
stc
push
or
test
out
ret
xor
das
dec
mov
mov
fcomps
and
into
pop
mov
jecxz
in
pusha
sub
add
jmp
loope
pushf
pop
push
xor
in
aam
andb
sbb
push
mov
lret
sbb
add
pop
pop
xchg
outsb
xchg
lds
add
push
xchg
leave
test
jo
ja
xchg
je
test
aas
mov
jae
xchg
inc
pop
xor
lret
stos
aad
test
addl
or
stos
mov
imul
enter
cmpsl
fidivrl
sahf
mov
test
mov
cmp
cltd
fistpll
mov
or
aam
push
jg
lea
xor
dec
invd
sbb
lcall
and
jo
mov
xchg
mov
push
arpl
stos
fmul
lods
adc
lea
xor
mov
xchg
dec
dec
xor
test
les
inc
and
data16
push
mov
nop
mov
sbb
xchg
dec
mov
xchg
mov
sahf
xchg
mov
lahf
inc
outsb
imul
or
icebp
inc
add
fadds
int
dec
cs
push
loope
sbb
push
in
outsl
test
ret
xchg
sbb
hlt
inc
jecxz
loope
das
repz
pop
sub
insb
xor
pop
lea
lock
scas
fistpl
cmc
lahf
gs
mov
xchg
ret
pusha
and
adc
add
add
scas
pop
in
push
jle
dec
insb
loop
rcrl
leave
loopne
je
inc
lret
mov
sub
fistpll
insl
fs
out
jns
and
ljmp
fs
rorl
cmpsl
dec
push
dec
xor
ja
je
sbb
lret
repnz
mov
inc
andb
jae
testl
arpl
ljmp
mov
test
push
xor
push
mov
neg
pop
jmp
mov
std
xchg
add
int3
int
push
lock
fisttps
inc
aam
mull
fdecstp
inc
insb
xor
add
int
repz
jae
adc
mov
inc
xor
lret
fmuls
popa
jle
aaa
mov
insb
mov
fiaddl
adc
inc
rcll
repz
pop
stc
jns
shr
rcr
mov
or
sub
pusha
and
sbb
push
cmp
ljmp
inc
fstpt
dec
push
inc
mov
shrl
js
inc
mov
stos
pop
fs
xor
ds
loopne
mov
into
stos
pop
in
jnp
stc
in
lea
and
arpl
leave
cli
xor
lret
lea
test
dec
inc
or
inc
xchg
in
jbe
mov
mov
adc
out
pop
negb
jb
or
in
cwtl
mov
dec
dec
rcrl
in
push
out
ret
test
mov
out
mov
out
or
lcall
jnp
scas
inc
icebp
dec
jecxz
pusha
sub
mov
arpl
imul
dec
adc
mov
add
push
testb
and
test
cmpsb
pop
jmp
lods
iret
ret
xor
mov
data16
cwtl
rcl
dec
mov
jecxz
and
pop
mov
outsb
nop
loope
addr16
adc
adc
push
bound
push
mov
in
test
mov
cmpsl
or
cld
or
lds
in
pusha
push
sbb
int3
mov
cmp
pop
loopne
push
xor
mov
clc
cld
orb
push
movl
js
mov
je
mov
jbe
jecxz
stos
pushf
and
push
les
addb
and
stos
mov
psubusb
out
mov
push
in
sbb
mov
popf
ds
leave
xchg
cmp
pop
cmpsb
mov
and
mov
repnz
jb
xor
jle
dec
bound
or
jnp
lds
sbbl
pop
add
cmp
mov
idivl
push
sub
daa
ss
mov
xor
adc
sub
push
loope
sarb
fisubrs
popa
sbb
lds
inc
inc
mov
ficoml
sbb
bound
fs
inc
push
mov
imul
in
aad
pusha
push
or
imul
xchg
xchg
dec
lret
in
sarl
and
gs
aaa
std
adc
jo
icebp
jno
inc
inc
push
loop
cmp
jecxz
sbb
mov
adc
lcall
nop
insl
push
lods
ret
ret
and
leave
repnz
mov
leave
cwtl
popf
ret
sub
jg
stos
push
pop
add
aad
je
rep
jb
sub
mov
iret
cmp
xor
pop
dec
or
fwait
or
and
scas
out
xchg
sub
rorb
imul
adc
imul
mov
aad
ds
jnp
jl
clc
aam
shl
fisttps
push
mov
stos
ficoms
ficompl
sbb
data16
nop
bound
popa
jbe
adc
xchg
mov
aad
xchg
mov
imull
sub
les
in
mov
mov
pushf
adc
test
dec
fwait
ret
xchg
loop
pop
lahf
arpl
mov
or
scas
jg
mov
mov
repz
mov
movsl
push
test
insl
mov
movsw
clc
xorb
lea
mov
les
mov
int3
popa
stc
mov
idivl
aad
rcrl
movsl
xor
pop
stos
repnz
push
adc
sbb
xchg
rclb
mov
aas
mov
jle
mov
jle
or
push
push
movsb
xchg
cmp
pop
jle
mov
mov
mov
mov
pop
inc
ds
cmp
leave
andb
xchg
test
push
sbb
sbb
sbb
pop
mov
cwtl
pop
addl
push
cmp
adc
cltd
xlat
jnp
mov
test
ret
mov
fnstcw
repnz
pop
imul
pusha
or
aad
pushf
dec
ret
hlt
pop
insl
add
repnz
jge
sub
mov
inc
push
pushf
stos
ljmp
mov
in
push
dec
cwtl
movsl
jno
nop
in
call
push
test
sar
mov
clc
aam
into
test
adc
ret
mov
push
lahf
mov
iret
std
xchg
lcall
inc
sub
repnz
push
push
push
mov
fst
and
notl
ds
mov
loopne
or
sub
imul
jle
and
mov
push
decb
inc
cmc
orw
xchg
inc
ds
and
xor
mov
lea
and
pop
and
or
test
inc
push
dec
pop
fstpt
movsb
scas
pop
cmp
push
xchg
pop
mov
push
in
sbb
mov
mov
sbb
iret
scas
ret
js
and
mov
scas
daa
jecxz
hlt
notb
mov
add
add
lock
cmp
out
hlt
lret
imul
xorl
cmp
cld
das
sub
pop
mov
push
outsl
sub
pop
adc
pusha
xchg
add
xor
daa
cmp
out
mov
gs
lods
cmp
inc
stos
mov
insb
movsb
push
fldcw
loope
lock
adc
jle
test
dec
idivl
je
pop
xlat
fimuls
outsb
js
cmp
test
stos
sbb
gs
into
mov
ss
push
sbb
ja
mov
xor
fiadds
sbbl
cli
imulb
in
fs
imul
mov
inc
xchg
pop
test
push
dec
aad
aas
push
xchg
sbb
sub
and
xchg
xor
lea
shrd
ret
mov
sub
addr16
ret
push
sub
jo
imul
leave
dec
cli
sbb
mov
and
add
stos
mov
leave
addr16
dec
xor
imul
adc
sub
sub
fimuls
imul
add
jno
ljmp
pop
xor
insl
cmp
push
cmp
sub
xchg
sbb
bound
cs
sbb
outsl
int3
pop
arpl
cmp
outsl
mov
es
xchg
mov
push
dec
ds
sarb
sbb
adc
mov
xchg
hlt
negl
and
mov
andps
inc
or
mov
mov
xor
jno
enter
cltd
pop
rorl
aas
loop
dec
mov
xchg
ret
clc
movsl
mov
vminss
outsb
jb
xchg
cmp
jp
fiadds
cmc
jno
push
fildl
jbe
les
cmpsl
cmp
add
mov
div
lods
ret
ja
scas
out
or
and
mov
and
fisubs
movsb
outsb
dec
es
sbb
dec
or
jmp
fcmove
fwait
or
loop
add
add
push
outsl
clc
add
andb
or
mov
icebp
out
out
sub
add
in
ljmp
mov
outsl
outsb
and
jnp
add
inc
sub
adc
scas
pop
mov
test
xchg
lods
inc
ds
mov
add
jno
insb
mov
inc
fs
inc
and
pop
imul
inc
sub
sub
es
push
rcll
mov
sarl
inc
out
outsb
orb
out
mov
sti
into
repz
js
int3
xchg
xor
aas
insb
pop
inc
aam
out
in
jmp
pop
fnstsw
mov
push
dec
jo
pop
pop
jns
leave
vmread
cwtl
sahf
ret
shll
sub
adc
in
push
push
jne
xchg
push
sub
comiss
popf
les
outsb
jle
cs
inc
mov
mov
stos
stc
in
push
repnz
xchg
sahf
inc
jge
lret
in
mov
in
sub
or
enter
jno
add
xchg
fsubs
push
icebp
imul
mov
rol
mov
mov
outsb
popa
push
leave
dec
xchg
jo
loope
pusha
dec
stos
push
add
daa
gs
movsl
gs
pop
and
aad
rolb
jno
icebp
stos
xor
popa
fwait
sub
adc
mov
lahf
int
pop
mov
dec
xchg
imul
in
pop
mov
and
xchg
cmpsl
xchg
xchg
jge
fisttps
xor
jns
repz
xchg
lahf
and
mov
repz
ljmp
mov
cmc
insb
mov
push
lds
repnz
sub
xor
xchg
stos
xor
push
fs
xor
push
jbe
daa
rcr
fldenv
call
mov
cli
mov
shll
sub
adc
xchg
jns
push
jg
mov
mov
mov
fisubl
lcall
aad
jne
and
sub
bound
shlb
stos
out
pop
sbb
adc
in
subl
and
pop
and
push
mov
sub
pop
pop
pop
and
jp
inc
mov
hlt
shrl
jp
pop
ljmp
cmpsl
mov
icebp
lcall
add
in
add
mov
stos
jns
sub
or
cmp
aam
pop
imul
scas
out
cmp
dec
cmp
or
sub
push
jp
sbb
jecxz
xor
das
xor
stos
pusha
add
cs
push
mov
das
outsb
and
mov
cmp
cmp
push
pop
push
and
sbb
enter
lock
pop
pushf
cltd
pushf
pop
movsb
clc
lds
add
or
sub
jnp
test
mov
jns
icebp
xor
push
jmp
adc
xchg
pushf
fmulp
iret
sbb
pop
lds
mov
jle
sti
ret
fstpl
adcl
pop
xchg
rcrl
jle
or
mov
mov
divb
fmuls
testl
mov
mov
and
and
mov
xor
les
xchg
addr16
push
hlt
mov
stos
icebp
cwtl
mov
lret
xlat
pop
adc
push
pop
push
cwtl
jns
jp
and
or
xor
icebp
dec
int3
jp
pop
sbbl
push
addr16
add
push
sub
jmp
dec
or
cmpb
push
decb
mov
lcall
addl
mov
dec
arpl
pop
ss
cvttps2pi
xchg
or
cwtl
jno
lcall
xor
jae
xor
mov
jl
scas
jno
scas
in
or
mov
pusha
lret
xor
fcmovbe
adc
adc
lret
mov
dec
pop
cmp
ds
inc
xor
aad
aaa
mov
mov
sbb
inc
mov
xchg
imul
stos
repnz
add
lahf
nopl
lods
data16
or
movsl
or
adc
lret
fcomps
sahf
outsl
repnz
arpl
sbb
mov
movsb
inc
stc
icebp
lea
cs
mov
incl
iret
stos
mov
mov
lcall
leave
aas
aad
out
cmp
and
add
mov
insl
insl
test
pusha
push
xlat
xchg
ja
arpl
fadds
inc
imul
jb
ss
sahf
or
or
jo
jnp
push
orb
int
ljmp
mov
iret
xchg
jp
and
xor
mov
mov
xor
into
or
stos
and
mov
jmp
outsl
or
sbb
jp
add
sub
loop
in
jbe
outsb
lcall
test
sbb
cmpsl
insl
sub
mov
dec
inc
icebp
xor
int3
std
sub
mov
scas
ret
jl
jnp
fstpt
pop
mov
inc
mov
sbb
stc
mov
and
jp
xor
lret
and
in
xor
sub
je
dec
adc
xchg
cmp
xchg
sti
mov
pop
idiv
jns
popf
fsts
lret
xchg
test
and
inc
inc
xlat
xor
out
rorb
jno
roll
adc
sub
imul
dec
and
loopne
bound
xor
push
inc
mov
mov
imul
adc
xchg
rolb
and
je
enter
adc
mov
mov
in
repz
pop
push
push
je
lcall
clc
leave
and
fsub
sahf
push
cmp
add
push
xchg
lret
ret
divl
pop
jmp
jno
pop
mov
mov
or
push
push
sti
lcall
mov
or
pop
push
push
push
in
in
lds
add
push
lods
xor
sub
or
add
hlt
subb
xchg
jmp
rcr
lds
iret
or
lcall
push
jnp
fmull
jecxz
dec
mov
cmp
add
fwait
mov
pop
sysret
cltd
inc
clc
out
jmp
and
pop
mov
mov
jge
sti
sarb
mov
xor
fcomi
cli
inc
xchg
call
xchg
lret
jbe
add
xchg
mov
pop
cmpsl
arpl
scas
mov
push
push
int3
push
pop
rcll
pop
hlt
pop
dec
icebp
mov
inc
mov
mov
loop
ja
pop
mov
fwait
rcrb
mov
jmp
xchg
mov
clc
jns
jge
shl
and
pushf
mov
clc
mov
aad
ret
jge
mov
test
loop
pop
lcall
push
fildl
aad
inc
bswap
cmpsl
jno
lret
mov
fldcw
iret
ficomps
jecxz
test
fwait
popa
iret
sbb
xor
cmp
and
adc
out
add
dec
or
dec
push
push
sub
adc
int
push
nop
shll
inc
aam
ficoml
push
sub
outsl
mov
cmp
xchg
cld
fsts
incb
push
jge
lods
adc
aaa
roll
movsl
jbe
inc
pop
pop
push
lgs
xchg
jnp
mov
mov
and
sahf
ficoms
adc
pop
or
jbe
repz
and
add
push
iret
fwait
paddusb
or
lea
mov
pop
jb
mul
push
in
inc
jp
mov
or
clc
sbb
lahf
mov
sub
cmp
adc
test
je
jno
mov
push
out
loop
add
sahf
inc
sbb
adc
popa
mov
lods
lea
out
push
mov
add
mov
mov
xor
test
insl
test
or
sbb
and
pop
out
sub
insb
movsl
fsubrs
xchg
or
inc
movsb
push
xchg
sbb
sub
out
sbb
xchg
add
pop
outsl
cmpsb
adc
imul
xchg
iret
add
cmp
adc
shll
xlat
xlat
sub
lock
andb
dec
repnz
jge
rol
andnps
mov
xor
scas
movsl
mov
cltd
xor
scas
and
lock
cmc
cwtl
push
push
mov
and
out
mov
xchg
ss
mov
and
mov
and
fwait
push
fimull
mov
orl
jo
adc
sti
pop
and
or
das
mov
push
hlt
jg
sub
scas
test
inc
sbb
iret
add
loope
ret
ljmp
cmp
and
inc
idiv
pushf
lret
or
pop
dec
or
sti
mov
cmpsl
mov
cld
sar
xor
adc
std
mov
imul
adc
imul
arpl
daa
repnz
xchg
jle
xor
out
xor
add
stc
data16
and
faddl
cs
aaa
pusha
xchg
lret
fidivs
dec
inc
inc
in
inc
dec
mov
and
in
inc
jbe
test
push
ficoms
xor
inc
xor
bound
adc
mov
and
cmc
in
inc
mov
imul
add
jecxz
pop
sub
in
and
lret
test
xchg
jne
ss
mov
lds
inc
add
loop
and
insb
xchg
sbb
cs
jge
dec
xchg
jb
xor
in
jge
xor
inc
add
push
mov
or
ds
xor
insb
jo
dec
sbb
pop
lcall
xor
imul
out
rorb
movsb
int3
sbb
sub
lret
aam
sub
add
loope
and
hlt
jg
rorl
or
add
lock
mov
xchg
je
ret
dec
dec
nop
pop
aad
lock
fsts
gs
outsb
iret
xor
sub
movsl
nop
loope
xchg
dec
sti
xchg
imul
or
into
jmp
adc
lret
and
xchg
cmpsb
lcall
imul
pop
clc
pop
repnz
cmp
jo
mov
mov
in
add
add
jmp
ret
inc
dec
and
sarl
stc
jg,pt
pop
sbb
mov
mov
mov
test
cmc
test
cli
arpl
push
pop
repnz
sub
lods
xor
dec
movsb
neg
jb
and
mov
mov
fwait
xor
xchg
repz
sub
push
out
call
sub
add
cmp
repz
sarb
dec
cmp
push
fstpt
sub
cmp
push
aaa
mov
clc
mov
add
test
sub
in
push
jo
cmovl
repnz
mov
rorl
xchg
sub
adc
mov
ret
inc
scas
push
frstor
faddl
xchg
mov
cmp
inc
fdivrs
sbb
int
cli
dec
xor
or
push
dec
imul
jmp
mov
aad
jge
movmskps
inc
sub
sub
mov
mov
lret
lods
fnsave
jbe
addr16
push
sbb
pop
movsb
dec
inc
mov
pusha
dec
shl
lcall
dec
sbb
jns
mov
insb
push
xchg
insb
cltd
xchg
rclb
sub
pop
inc
xchg
mov
pusha
jmp
aad
fs
fs
inc
je
cmp
mov
mov
jmp
lods
xor
fimull
mov
cwtl
jne
in
lods
int
jmp
pop
outsb
imul
or
ljmp
mov
adc
jge
pop
movsl
arpl
in
dec
push
xor
out
mov
cli
sti
jle
cs
mov
inc
xor
mov
and
icebp
push
pop
outsb
mov
push
hlt
enter
inc
loope
jo
mov
dec
add
insl
or
adc
out
mov
aaa
inc
mov
pop
adc
mov
or
popa
xchg
mov
daa
adc
xchg
fsubrl
das
sbb
mov
and
xchg
push
mov
les
mov
sbb
dec
nop
dec
mov
inc
pusha
jb
add
xchg
pusha
es
jnp
xchg
or
mov
adc
leave
adc
mov
pop
call
ljmp
jne
inc
jno
inc
inc
inc
lds
xchg
or
ja
fs
pop
mov
adc
push
movsb
push
jle
pop
adc
stos
out
leave
sbb
and
pop
stos
test
cmp
jb
ljmp
sub
mov
iret
lcall
mov
adc
cmpsl
or
jle
imul
data16
daa
lret
mov
icebp
repz
stos
fld
mov
mov
and
dec
enter
lock
jmp
subl
addr16
and
push
lret
and
or
clc
ss
pushf
push
pop
mov
cli
into
mov
xchg
mov
test
jge
stos
call
icebp
sbb
pop
lea
sub
and
daa
pushf
arpl
or
fwait
cwtl
in
cmp
mov
sbb
shlb
mov
lahf
out
out
bound
jns
mov
das
mov
scas
add
xor
cmp
je
in
jge
add
push
jmp
sbb
out
or
or
sbb
sbb
sub
lcall
fsubs
inc
xor
bsf
aas
add
shlb
cmp
mov
and
mov
mov
cs
add
cs
adc
enter
in
lret
sti
sbb
leave
arpl
inc
inc
mov
add
rol
shr
sub
in
mov
xor
cwtl
sbb
jo
push
xlat
push
xlat
push
jno
add
call
cmp
stc
cmc
stc
mov
pop
xor
push
call
shlb
add
scas
jb
in
fisttpl
nop
push
mov
mov
add
fsub
divb
cmp
pushf
inc
pop
lds
lahf
push
hlt
lret
pop
arpl
cltd
loope
mov
dec
inc
adcl
lock
dec
out
mov
mov
ja
fwait
dec
cmp
enter
add
ds
ret
roll
push
dec
out
mov
mov
add
mov
inc
pop
orl
pop
mov
jb
mov
outsl
xchg
fwait
outsb
xchg
lods
mov
add
and
push
outsb
adc
les
xchg
fcoml
jle
add
lea
iret
bound
cmc
xchg
dec
je
outsl
push
add
aaa
mov
sahf
in
inc
jge
or
pop
mov
mov
xchg
imul
xor
xchg
adc
daa
sbb
out
inc
leave
or
jb
pop
sarb
sahf
gs
xchg
popf
adc
rcll
dec
enter
sahf
lds
js
fistpl
xchg
aas
xchg
sub
xchg
mov
inc
sbb
adc
inc
add
imul
outsl
mov
pop
fcmovne
dec
fidivrs
mov
pop
loope
pusha
sub
scas
daa
aam
ror
mov
dec
lods
pop
push
ftst
sub
dec
movsl
push
or
add
movsb
movl
add
loopne
repnz
out
inc
jg
imul
xor
rolb
mov
cmp
iret
in
push
fsubrs
das
mov
and
ffreep
xchg
fs
jns
clc
iret
fistpll
dec
int3
mov
lahf
adc
jge
lcall
and
dec
dec
ja
cmpl
push
lret
inc
icebp
call
push
pop
pop
push
push
cltd
insb
and
add
or
aad
mov
iret
rep
sti
mov
cmpb
pop
pop
outsb
xor
adc
loop
int3
pop
call
movsb
rclb
cmp
mov
sbb
cmpb
or
jg
mov
aam
lds
add
mov
sbb
push
arpl
push
ds
dec
dec
ja
fstps
int
iret
dec
ja
inc
movsl
push
pop
push
cmp
into
adcb
inc
add
fucomi
mov
out
test
je
repnz
lods
icebp
out
sub
lret
ljmp
daa
int3
mov
rclb
gs
cld
sti
jne
rol
pop
and
pop
aas
jmp
scas
scas
ja
ret
or
mov
cli
fwait
or
test
arpl
xor
and
pop
push
je
mov
xchg
inc
inc
ljmp
add
push
jbe
dec
shlb
mov
mov
dec
fbld
cmpsb
inc
xlat
loope
push
icebp
test
sub
xchg
int
movsl
or
dec
xchg
xchg
push
mov
or
cmp
loopne
pop
xor
fdivrl
mov
adc
lock
mov
xor
mov
dec
xchg
xor
pop
dec
fcomp
inc
rcll
and
insl
mov
pop
and
or
pop
test
jp
notb
mov
addr16
aad
lods
sub
mov
js
icebp
or
out
arpl
je
notb
push
lods
mov
cmp
js
out
inc
fbld
aad
repnz
insl
ss
pop
gs
dec
out
xchg
xorl
xchg
data16
cmpsl
or
xchg
sahf
xor
test
mov
push
xor
or
jle
and
fwait
nop
jmp
mov
push
lcall
mov
int3
insb
inc
mov
mov
out
mov
lret
mov
insb
add
ds
setb
mov
or
gs
sub
aas
mov
inc
mov
or
xor
sub
pop
or
sarl
lea
fildl
xor
or
or
xrelease
jmp
lock
addr16
and
scas
repz
and
pop
dec
rep
cmp
arpl
pop
and
add
fs
outsb
shr
outsl
inc
sub
sbb
xchg
mov
fs
andb
xchg
repz
outsl
loope
sarl
pop
cwtl
push
movsl
jp
mov
std
pop
test
fucomip
mov
jnp
subb
data16
dec
sbb
in
xlat
jp
iret
icebp
push
js
cmpsl
fwait
mov
aas
lods
movb
jle
repnz
movsb
xchg
aas
inc
outsl
or
leave
mov
xor
mov
mov
ss
std
mov
repz
mov
rorb
inc
dec
xchg
sbb
stos
cld
fs
ret
loop
data16
inc
add
rcrb
add
repnz
adc
adc
mov
dec
fbld
test
mov
push
les
fwait
daa
push
test
dec
ficoml
mov
push
cs
or
pop
imul
lds
arpl
std
ljmp
mov
daa
imul
js
inc
inc
pop
and
adc
cmp
pop
or
ret
loopne
dec
les
sbb
xor
pop
sub
ss
dec
lret
mov
mov
pushl
sbb
lods
fldcw
and
xlat
rclb
jne
xor
jns
sub
jno
bound
mov
mov
add
mov
inc
xchg
pop
xchg
and
addb
jmp
sahf
test
ljmp
je
lret
stc
push
aaa
test
incb
ja
stos
filds
jb
imul
sub
loop
jne
mov
hlt
cmp
imul
into
vfrczpd
mov
and
call
and
ja
xor
icebp
xchg
je
inc
pop
lock
add
scas
clc
paddb
sbb
nop
das
inc
mov
es
cmp
inc
mov
addr16
loope
repz
lret
sub
cwtl
sub
dec
es
jae
cmpsb
imul
xor
popf
pop
pop
jl
sbb
sub
dec
push
in
outsl
mov
pop
jecxz
xchg
push
or
ja
gs
ja
mov
adc
mov
xchg
mov
jecxz
jae
dec
lahf
mov
je
fstl
pop
jnp
push
jmp
popa
test
adc
mov
inc
mov
cli
data16
cmp
xchg
sub
out
fwait
xchg
add
xchg
adc
xlat
outsl
sub
mov
jo
and
sti
push
ljmp
cmpsl
ljmp
ljmp
jle
testl
loope
fneni(8087
pop
push
fwait
mov
mov
xchg
leave
shrb
pushf
push
adc
push
jbe
xor
scas
jp
jne
in
hlt
out
adc
popa
leave
mov
bound
adc
push
mov
repz
dec
add
lret
xor
outsb
push
stos
dec
push
fdivl
mov
inc
aaa
or
or
add
mov
adc
lahf
push
sbb
aam
sbb
pop
mov
scas
add
push
out
fistps
les
sbb
or
std
into
icebp
shl
sub
bound
push
and
mull
or
in
andl
xlat
mov
push
xchg
push
dec
stos
nop
outsb
je
stc
into
dec
jno
cmpsb
aam
mov
stos
movsl
sbb
mov
cmp
cwtl
mov
cmp
mov
out
mov
mov
repz
pop
scas
test
daa
icebp
shlb
jnp
icebp
in
stos
test
push
rolb
mov
adc
mov
out
jecxz
rdmsr
inc
adc
add
icebp
add
int3
je
clc
sub
inc
inc
in
mov
int
cmp
cwtl
lahf
insl
insb
aas
arpl
orl
incl
aad
jne
sahf
hlt
cmp
inc
pop
in
dec
dec
sub
push
repnz
or
fcompl
imul
or
mov
jne
sub
push
ffreep
cmpsl
jp
ss
mov
pop
mov
loopne
std
lcall
aam
pusha
fldl
subb
fcom
inc
sub
cmpsl
ret
imul
add
cmp
sbb
and
fisubrl
repnz
push
pop
adc
sub
push
insb
xor
xchg
jge
xchg
ja
cltd
push
sahf
stos
ja
inc
mov
xor
inc
cmpb
ret
xchg
add
push
out
sbb
aad
mov
cmp
test
pop
dec
xchg
cmp
push
xchg
cs
in
add
lahf
lret
pop
sbb
xchg
into
xor
je
jmp
cmp
fsubs
test
in
leave
or
mov
subb
in
mov
sub
clc
xchg
fldcw
pop
shll
arpl
cld
xchg
movsl
cli
enter
jo
fdivrp
imul
xchg
pop
and
jge
subl
fnsave
push
shll
push
outsl
lock
lret
bound
jae
mov
fisubrl
out
in
leave
inc
push
mov
not
arpl
xchg
ljmp
pop
inc
fidivrs
ficomps
adc
repz
push
sti
jno
in
pop
dec
or
dec
dec
adc
jbe
push
ljmp
mov
jl
in
mov
stos
dec
fnstsw
jle
ds
push
push
jecxz
mov
and
sub
mov
fwait
mov
mov
adc
push
pop
jo
popa
mov
mov
jnp
lds
stos
rsqrtps
jmp
fs
cli
push
lahf
andb
cmp
je
mov
lahf
jae
push
arpl
rcl
jns
ret
int3
adc
sti
rorb
insb
in
add
fstl
test
push
xorps
adc
frstor
faddl
mov
fcoml
stc
out
xchg
iret
xchg
push
dec
lds
popa
jmp
push
in
arpl
std
popf
unpckhps
roll
adc
sbb
and
out
sahf
jae
movl
clc
and
fcmovb
dec
loope
fnstsw
mul
repz
xchg
jl
decl
push
ret
pop
pop
xor
into
in
ror
push
addr16
push
and
repz
mov
jb
into
jo
inc
or
jmp
pop
call
hlt
rcl
pop
repnz
inc
cmpsl
addr16
mov
aaa
adc
jmp
jp
lods
fwait
xchg
lds
xor
or
fwait
lret
lahf
jns
mov
call
jno
push
jae
sub
xchg
sbb
xchg
sahf
test
std
fld
sbb
and
xlat
in
hlt
add
adc
xchg
xchg
ds
mov
xor
xchg
in
repz
sahf
push
mov
mov
in
shrl
es
out
rcrb
cwtl
push
jecxz
inc
sti
sti
pop
out
inc
je
dec
sbb
jp
ret
fimuls
xchg
sbb
adc
push
dec
ja
lahf
sbb
out
js
shll
loopne
fs
pop
pop
add
cwtl
test
jne
mov
add
aaa
ljmp
add
movsl
inc
xchg
fadds
sti
pushf
pop
or
or
aas
mov
int
adc
imul
dec
cmp
cmp
std
movsl
aas
xchg
ffree
xchg
int3
repz
mov
sub
fstl
mov
push
cmp
outsl
lcall
aam
xchg
mov
jbe
mov
mov
lods
test
popw
in
daa
sbb
loopne
cmpl
cmp
cmp
icebp
jns
and
cmp
call
sub
and
leave
sbb
fcomps
pop
ja
iret
jbe
iret
test
mov
and
fidivs
mov
rorl
xlat
push
in
add
xor
je
inc
test
enter
add
fcoms
push
xchg
cmpsl
inc
add
xchg
jne
in
fnstenv
xchg
stc
or
pushf
ljmp
stc
or
push
fmuls
sbb
and
test
arpl
loope
and
xchg
jecxz
xchg
pop
push
mov
aas
test
mov
loope
add
lret
data16
lods
addr16
push
js
mov
sub
jecxz
data16
sub
or
xchg
bound
push
adc
or
das
inc
mov
pop
mov
mov
es
pop
push
xor
mov
xor
and
pop
lds
push
xor
sbb
int
in
cltd
push
loope
test
sub
xchg
lods
insl
mov
push
or
das
hlt
loop
mov
sub
sub
sahf
cwtl
orb
jns
jb
xchg
outsl
cld
scas
cwtl
enter
arpl
ds
leave
mov
clc
ja
adc
jl
test
fimuls
int3
mov
cmpsl
cs
mov
int3
cmpsl
mov
jg
in
test
lahf
sbb
ss
and
push
jb
std
xor
das
mov
testl
les
jmp
and
sub
test
mov
das
xor
cmp
pop
sbb
mov
mov
xchg
xchg
or
adc
loopne
iret
cmp
dec
nop
mov
fwait
xchg
sbb
and
xchg
jns
stos
loopne
aaa
xchg
movsl
pusha
sub
sbb
or
add
pop
jae
stos
xor
iret
lahf
sub
mov
add
push
leave
mov
xlat
je
pop
inc
imul
gs
popf
cmp
pop
dec
mov
cmp
and
dec
imul
pop
add
test
out
or
and
mov
pop
pop
insl
dec
jl
enter
mov
or
mov
xchg
mov
movsl
or
out
int3
xchg
lea
mov
fs
aas
jg
push
lea
les
push
int3
loope
inc
or
insl
je
cltd
sub
ja
xor
dec
aas
lahf
push
fisttpll
cld
int
inc
sahf
js
xchg
pop
imul
and
repz
pop
add
inc
subb
cltd
sbb
test
mov
fwait
ds
in
xor
pop
dec
addb
mov
xchg
add
stos
jmp
sbb
addr16
dec
pop
sub
cli
ja
pop
mov
inc
jb
in
lahf
inc
addl
outsl
mov
and
cltd
xchg
test
clc
mov
dec
das
adc
out
xor
es
fs
in
push
push
arpl
jae
loop
out
testb
stos
pop
jmp
in
pop
sbb
xchg
adc
xchg
lcall
mov
mov
mov
or
mov
cmpl
mov
inc
xlat
and
push
inc
or
in
stos
stos
sub
mov
xchg
pop
adc
sbb
mov
push
sub
frstor
dec
jbe
adc
stc
sti
mov
xchg
filds
adc
inc
fisubs
je
push
nop
aaa
dec
mov
repnz
inc
sbb
cmp
add
call
popa
mov
ja
adc
dec
or
lahf
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
orl
stos
sti
push
cmpsl
das
mov
mov
inc
mov
addr16
or
jmp
add
ret
addr16
jmp
or
jnp
in
fsubrs
xor
pop
pop
jle
rcr
daa
ret
jne
adc
and
dec
icebp
cld
lret
es
add
sub
imulb
mov
sbb
push
add
movsb
test
insl
insl
sahf
lahf
jmp
lods
add
stos
push
test
in
xor
lea
js
shlb
and
push
dec
loopne
or
ror
push
jle
outsb
loope,pt
push
insl
subl
dec
stos
mov
adc
clc
jl
or
mov
fwait
mov
push
sbb
bound
pusha
leave
push
iret
and
shl
pop
push
mov
fs
dec
jle
pop
sub
icebp
icebp
inc
lret
mov
aad
stc
mov
sbbb
pop
xlat
jo
mov
shrl
sbb
mov
stos
push
xor
int
and
out
test
imul
cmp
xchg
cmp
mov
xor
and
arpl
add
mov
jle
or
add
push
push
pop
jp
mov
imul
aaa
mov
outsl
fsubrl
push
mov
hlt
bound
into
fsts
stos
loope
jae
pushf
in
mov
xchg
xor
das
and
js
sbb
mov
pop
jne
adc
push
add
test
mov
stos
out
jno
mulb
mov
mov
or
cmpsb
pop
sbb
inc
sahf
clc
dec
aas
jo
mov
sub
jecxz
popf
dec
fwait
dec
movsl
mov
xchg
insb
fwait
imul
shlb
ds
xchg
in
pop
mov
daa
mov
sbb
fists
jmp
mov
xchg
sbb
adc
sub
sub
adc
mull
sbb
xchg
sub
cmp
popa
mov
cmp
enter
adc
imul
sbb
jl
mov
pop
adc
in
leave
sbb
inc
fnstsw
in
sbb
clc
jg
or
daa
or
lds
mov
stos
cmp
test
push
mov
mov
fnstcw
xor
dec
int3
push
int
pop
add
jns
cld
cmp
xor
jecxz
into
pop
fimuls
test
imul
popf
nop
mov
add
jp
out
pop
mov
mov
in
mov
dec
mov
add
sbb
add
xchg
adc
popl
repnz
or
pop
loope
sub
mov
sti
xchg
mov
stos
shl
sbbl
out
arpl
cmp
mov
cmp
adc
or
inc
pop
scas
outsb
or
inc
js
repz
imul
aas
sub
pop
mov
inc
sti
mov
push
outsl
xchg
loopne
inc
jl
xchg
push
aaa
or
jb
loopne
loope
pusha
cmp
lcall
out
movaps
in
rcl
fs
in
push
movsl
xlat
shrb
fidivrl
dec
mov
lods
adc
test
pushf
or
jno
mov
divl
add
out
lret
ss
aas
fldcw
inc
ss
xor
les
aad
dec
shll
nop
mov
pop
js
fimuls
sbb
stos
and
outsl
popf
sub
push
push
and
jbe
in
pushf
lcall
sarl
inc
or
aaa
rcrb
