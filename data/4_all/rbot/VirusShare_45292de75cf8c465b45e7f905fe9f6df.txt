push
call
ret
ret
repz
lret
xchg
sub
add
push
mov
cmp
pop
fisubs
fisttps
movsb
lcall
icebp
out
xchg
mov
movsb
ret
imul
push
fsubrs
push
add
push
scas
lock
int3
pop
mov
outsl
int3
ret
add
movsl
es
jmp
xor
fisttps
xlat
sub
xlat
mov
movb
rcrb
lcall
cmp
out
sbb
mov
mov
dec
outsl
or
jg
fsubr
push
xchg
mov
decb
push
in
insb
ja
xor
mov
and
lcall
dec
push
mov
or
pop
xor
cli
mov
cmpsl
ret
lods
cmc
imul
mov
pop
sbb
call
test
fwait
dec
test
jnp
or
mov
pop
aaa
and
or
fadds
push
pop
rorb
fsubr
das
push
mov
int3
jns
mov
cmp
or
jmp
jg
rcrl
test
fisttpll
in
sbb
xchg
push
test
inc
pusha
push
or
ror
test
pop
arpl
das
dec
mov
rorl
bound
call
incb
jecxz
hlt
outsb
mov
test
dec
shr
dec
jbe
lahf
invd
fisubrl
inc
fcoms
jp
mov
into
out
lret
lret
lods
hlt
dec
mov
add
and
inc
or
lea
out
inc
rclb
mov
xor
xchg
xchg
cwtl
and
mov
pop
cmp
test
fildll
jb
fdivp
test
inc
mov
pushf
pop
or
mov
adc
jno
push
sahf
jnp
fdivl
sahf
jle
pop
aaa
push
aas
pushf
mov
inc
and
in
lea
pop
std
aas
add
xor
fisttpll
jmp
icebp
popa
xor
or
outsb
mov
in
adc
out
xlat
and
jmp
inc
fucomi
jg
pusha
mov
mov
xor
mov
in
addl
mov
mov
cld
xchg
cltd
ljmp
stos
jae
inc
cmp
pop
add
push
or
mov
cli
jb
rcl
movsb
mov
xor
or
fsubrs
mov
mov
mov
negb
xchg
icebp
lds
in
mov
add
jle
dec
inc
mov
fs
iret
mov
xor
in
xlat
mov
aas
inc
jnp
aas
test
push
push
and
xchg
cld
lea
insb
xchg
mov
xchg
sub
imul
adc
dec
or
adc
rorb
mov
cmp
popa
xor
xor
xlat
push
jno
lret
pushw
push
sbb
rcrl
push
ja
dec
add
das
scas
testb
jle
sub
mov
cmc
mov
lret
inc
mov
inc
cmpl
xor
pop
lods
push
clc
pop
xor
les
imul
mov
iret
jle
dec
sar
adc
mov
sub
xor
repz
loopne
repz
adc
test
dec
repnz
xor
pop
mov
nop
xchg
ret
and
ds
inc
mov
rcrb
pop
jg
es
and
add
loop
cli
out
push
push
nop
dec
and
bound
adc
xchg
mov
cmp
jge
in
inc
popf
mov
sar
inc
arpl
aaa
ss
cmpsb
cmp
nop
dec
cmp
dec
adc
mov
inc
sbb
pop
inc
jle
xchg
subl
in
push
and
into
mov
push
sub
xlat
outsl
aad
xor
cltd
je
out
int
movsl
fwait
data16
xchg
movsl
jl
ret
shll
das
jbe
mov
mov
insb
insb
fstp
sbb
ja
add
adc
push
inc
jecxz
mov
push
popa
mov
mov
xchg
cmp
shl
inc
lods
inc
daa
loopne
stos
cmpsl
subl
xor
xor
pop
adc
adc
jae
insl
and
add
mov
push
out
int
faddl
push
pop
scas
adc
out
popf
sbbb
mov
add
popl
jge
cmc
and
in
xor
cmp
fdivrs
les
sub
push
mov
sbbb
sti
push
inc
sti
icebp
decb
roll
mov
repz
fstps
dec
cmp
cmp
inc
ret
push
cvtps2pi
daa
mov
inc
je
aas
mov
test
or
pushf
push
call
xor
jg
mov
stos
test
std
into
roll
adc
fstl
sbb
jbe
fstl
sub
testb
insl
push
out
outsb
mov
nop
fs
test
pop
pop
xchg
cmp
out
shr
xchg
mov
and
mov
cwtl
ret
test
incb
xchg
aaa
scas
sahf
xchg
popa
loopne
pop
adc
or
outsl
push
jecxz
cwtl
out
loopne
dec
xor
sbb
fstps
pop
mov
loope
aas
add
inc
xor
mov
xchg
repz
jp
pop
mov
xor
mov
mov
dec
mov
test
fsubrs
in
sbb
pop
call
lea
outsb
rcrl
mov
dec
push
cmp
and
jo
mov
fsubp
sbb
in
or
push
inc
cs
int
bound
xorb
adc
movsb
mov
and
jmp
adc
cmp
pop
out
jo
dec
inc
xchg
stos
mov
jle
cmp
push
adc
mov
dec
xchg
ret
push
fstpt
loope
dec
dec
mov
and
push
sbb
cmp
push
xchg
ret
nop
mov
fdivrl
pop
xchg
jno
ljmp
jno
mov
test
lods
inc
popa
push
hlt
ret
lds
mov
leave
daa
jmp
clc
ret
imul
jne
mov
out
xchg
mov
jl
and
stos
out
arpl
pop
aas
sarl
sub
push
dec
jne
bound
xchg
divb
push
add
xor
mov
stc
mov
in
pop
mov
and
aaa
push
xchg
lret
mov
sub
push
add
lahf
pop
mov
mov
stos
call
add
outsl
add
sti
mov
movsb
shll
aas
mov
mov
call
and
ret
and
inc
sbb
cmp
mov
popa
pusha
adc
movb
repnz
jo
aaa
mov
mov
ret
popf
mov
inc
test
xchg
and
push
xlat
addr16
roll
std
add
xor
or
leave
or
andl
pushf
imul
jae
dec
rorb
in
push
cmp
inc
loopne
pop
ss
mov
test
jnp
popf
inc
push
adc
loop
xlat
js
cmc
fbld
jo
dec
xchg
test
xchg
stc
daa
jnp
jnp
xor
test
cltd
sbb
sub
mov
scas
mov
cli
or
push
mov
je
adc
cld
lods
ds
subb
push
std
fsts
out
pusha
jo
push
pop
ss
aas
ret
or
jb
iret
stc
pop
outsl
jge
jne
gs
in
scas
jmp
xor
mov
clts
shl
jne
mov
adc
loope
xchg
rorl
mov
mov
clc
add
add
pop
mov
xchg
push
call
ja
in
jno
xor
mov
pusha
dec
je,pt
and
test
jns
dec
rcr
xor
xor
and
dec
sbb
arpl
pushf
pop
push
mov
sti
mov
sbb
pop
fbld
push
fstpl
lahf
movsl
fadd
in
xchg
and
lret
pop
or
popa
add
sbb
mov
xlat
jo
lods
in
mov
ret
mov
push
fnstcw
xchg
es
stos
call
adc
shrb
frstor
aas
mov
sbb
jle
sbb
repz
testl
push
mov
das
sti
movsl
pop
out
sti
push
in
xchg
push
int
cmp
jno
rorb
scas
call
xor
ljmp
test
bound
fwait
mov
pop
stc
shll
mov
shll
cmp
xchg
jnp
mov
adc
pop
push
dec
test
pop
adc
outsl
lret
inc
pop
mov
or
jge
imul
out
aad
cmp
in
and
pop
or
xchg
outsl
pop
xchg
mov
mov
lcall
and
add
jle
mov
cmp
ja
mov
add
mov
mov
test
push
xchg
dec
lret
pop
cmp
dec
pop
xchg
mov
in
xor
push
xor
movsb
cmp
inc
sub
into
rcll
mov
daa
fmuls
inc
jns
scas
fiaddl
ror
and
scas
cwtl
lock
jle
mov
mov
mov
or
or
mov
and
sbb
in
sbb
xlat
cmp
loopne
jg
mov
roll
fsubrs
dec
nop
jle
or
cmp
sbb
xlat
shll
pop
sti
lcall
xor
push
out
cmp
mov
daa
es
hlt
loop
rorl
adc
cmpsl
ljmp
mov
shl
mov
mov
into
push
xchg
fcompl
arpl
movsb
sbbl
movsw
cmc
imul
xor
addr16
cmc
cmp
cmp
mov
ficomps
mov
adcb
pop
mov
inc
sub
ficoml
popa
jmp
xchg
mov
test
mov
inc
ljmp
iret
out
jl
call
cltd
movsb
popf
stos
shrb
addr16
sub
sub
ja
repnz
xchg
sti
lret
cmp
sbb
das
ffreep
add
out
cli
push
push
adc
pop
or
test
push
aam
cmc
fnstenv
dec
aaa
xlat
stos
pop
int3
mov
and
sub
sub
fsubrl
ja
scas
pop
dec
repnz
out
fsubs
pop
ret
or
mov
jb
mov
ljmp
ret
sbb
fsubl
mov
xor
dec
cmp
xchg
cwtl
clc
mov
or
and
and
push
adc
ret
subl
mov
inc
mov
pop
inc
movl
add
in
mov
arpl
test
xor
loope
sub
cs
jns
cmp
fsubrl
add
gs
inc
fwait
add
and
out
lods
cmpsl
inc
mov
xor
pop
adc
sti
or
loope
stos
aam
push
lods
in
add
cmpsb
lcall
mov
sbb
fistps
push
subl
cli
cli
sbb
mov
jmp
dec
pop
jmp
sub
addr16
add
in
mov
inc
out
xor
stc
imul
cmc
int3
pop
and
fcoms
fst
xchg
test
pop
and
mov
sbb
mov
or
xchg
lret
pop
and
mov
pop
out
outsw
inc
jae
xorb
pushl
bound
dec
in
mov
mov
pusha
and
lods
xchg
in
fisubrl
les
adc
push
inc
fiaddl
data16
lret
insb
cmpsb
xchg
mov
or
pusha
push
enter
fprem1
repz
cmp
sbb
add
mov
and
adc
int3
inc
cmpsb
inc
cwtl
mov
cmp
push
je
cld
mov
pop
and
enter
outsl
mov
mov
pop
dec
mov
stos
icebp
sti
or
std
jno
popa
sbb
addr16
adc
addb
dec
mov
mov
push
ds
mov
cmc
add
lahf
in
push
cmp
cmp
stc
xchg
call
ds
cmp
popf
repnz
data16
cld
mov
sti
cltd
pop
xchg
cwtl
sti
push
push
rcll
mov
or
insl
ss
stc
adc
cld
lea
cmpsl
fildll
scas
pop
addr16
in
mov
cmp
or
addr16
cs
cwtl
mov
popf
movsb
sbb
adc
jl
add
dec
mov
jne
lcall
lret
mov
dec
cmc
bound
shrb
cmp
mov
fldl2t
lahf
push
adc
and
in
mov
ds
pop
mov
andb
popa
sub
movsl
dec
sbb
insb
and
dec
scas
xor
cltd
popa
jge
ret
dec
jbe
xor
jl
and
dec
adc
push
and
test
stos
fwait
pop
sar
test
stc
mov
pop
dec
bound
pop
xchg
dec
rorl
call
sbb
adc
push
xlat
push
or
and
xor
xor
sub
xchg
push
fs
cmp
psubusb
and
mov
dec
lret
adcl
lock
dec
pop
cmp
dec
inc
repz
inc
xchg
cltd
xchg
jnp
mov
xor
jo
arpl
push
mov
aaa
xchg
jb
imul
add
fimuls
adcl
push
in
ljmp
insl
adc
imul
inc
iret
mov
mov
mov
out
mov
jmp
xchg
std
add
mov
inc
pop
negl
aaa
lock
inc
inc
lea
cltd
fistpl
lea
ret
insb
pop
xor
sub
push
xchg
xor
testb
bound
cltd
push
aas
scas
jo
mov
mov
in
mov
push
mov
cmovl
xor
mov
or
pop
inc
ss
jmp
out
jae
cs
aad
mov
dec
or
test
in
or
xchg
pop
pop
lret
mov
xor
and
loope
xchg
dec
dec
les
dec
ret
cwtl
jb
mov
xor
jl
test
ss
int
jne
inc
leave
hlt
repnz
test
test
or
mov
out
jns
add
cmp
sub
cmp
in
jae
loop
xchg
xorb
sbb
xchg
jle
mov
dec
cmpsb
shlb
shll
insl
mov
pop
loopne
sbb
and
inc
push
jne
pop
mov
pop
std
adc
cmc
sti
sbb
loop
jb
mov
addr16
icebp
push
mov
loop
jg
dec
aad
xor
jns
std
not
xor
jl
add
imul
push
mov
xchg
fsubrp
popa
mov
and
jmp
cwtl
outsb
test
jmp
xchg
xchg
push
pop
xchg
inc
cmpsb
inc
int
leave
inc
lret
add
stos
fdivrs
sub
dec
cmp
and
lods
fcomi
scas
mov
sub
fcmove
fisubl
fs
cmp
push
lret
sub
into
outsl
dec
cmp
in
mov
sbb
or
adc
faddl
cmp
ss
loop
sbb
enter
clc
jno
inc
dec
mov
xchg
ja
inc
loope
lods
mov
xor
sbb
add
add
mov
jnp
mov
cmc
pop
sbb
mov
mov
pusha
mov
xlat
xor
mov
dec
and
pop
lods
push
int3
xor
mov
call
or
loop
or
or
shrb
mov
push
cli
cltd
pop
inc
jno
xor
xor
bound
nop
adc
cli
pop
inc
lcall
test
cmc
aad
push
push
mov
pop
aam
lea
push
adc
shr
jno
rcrl
jge
xchg
xor
pop
insl
jo
sub
out
push
mov
sub
fiadds
sbb
and
rol
dec
mov
mov
clc
adc
fcmovbe
mov
mov
pop
lahf
dec
js
sbb
outsb
daa
xlat
insl
aaa
pop
test
test
adc
mov
push
mov
mov
dec
pop
clc
mov
enter
fwait
and
fs
ljmp
movsb
in
pop
ret
insb
xchg
push
push
scas
in
shrb
fidivs
out
dec
scas
sub
push
imul
ljmp
sahf
push
lahf
subl
jo
fldenv
data16
test
jl
gs
dec
push
mov
in
jge
pop
and
out
shrl
sarb
daa
jns
cli
pop
daa
into
jo
mov
cmpb
nop
lcall
mov
scas
mov
mov
adc
jmp
pop
mov
cmp
dec
mov
add
cwtl
insb
pushf
xor
cmp
pop
dec
mov
jne
inc
imul
xchg
pop
in
ret
cmp
sysret
or
dec
mov
scas
inc
pop
xchg
outsl
into
mov
mov
mov
stc
inc
push
mov
lds
scas
je
jge
gs
jl
enter
push
push
shl
adc
mov
sub
xchg
cmpsl
scas
pop
push
lcall
xor
mov
shrl
jg
pop
es
jg
push
testl
sbb
pop
test
cmp
and
mov
inc
pop
lret
xchg
fmuls
push
movsb
popa
xchg
push
dec
xchg
or
push
insl
jl
repz
pop
inc
jl
popf
pop
loope
dec
repz
gs
movsl
rcr
dec
push
rcl
test
stos
mov
pushf
dec
jmp
cmp
shr
jmp
int
mov
rolb
test
repz
jns
cmp
test
les
mov
data16
rcr
ja
shrb
lds
lret
cli
or
add
mov
nop
testb
adc
lret
xchg
bound
repnz
int
jns
lea
sarl
fwait
fwait
cmp
push
cmp
repz
add
mov
mov
sub
pop
ret
in
lock
sti
js
sahf
cmp
and
or
push
icebp
add
fdivs
lea
mov
dec
inc
ret
aam
call
nop
test
inc
sub
push
je
dec
ja
sbb
lock
stc
cltd
push
ret
fldt
and
icebp
stos
xchg
out
std
ja
mov
add
aad
mov
xor
jecxz
fcmovnb
and
push
push
movsb
or
fnstenv
testb
std
pop
loop
jmp
ss
jl
mov
mov
or
fstpt
add
call
mov
xlat
popa
scas
add
sbb
fists
mov
movsl
mov
aam
fistps
push
jae
add
aam
xorb
dec
fisttpll
hlt
cmp
adc
and
div
adc
inc
push
dec
adc
add
in
cmpsb
je
call
outsl
ret
push
jnp
or
pushf
pop
movsl
sbb
enter
jne
cltd
adc
pop
arpl
mov
inc
fcomps
out
and
aad
and
jnp
lahf
arpl
xchg
sbb
rolb
mov
mov
in
shll
out
xor
inc
cmp
fistpll
rcr
push
fcmovu
dec
jg
xor
jbe
fwait
push
cmp
icebp
dec
add
mov
movsb
add
inc
enter
mov
push
aad
xchg
jp
xchg
aad
stos
stos
jg
loope
addr16
jne
pop
leave
sub
jo
and
es
cmp
repz
push
xor
decb
mov
or
shlb
stos
or
push
push
test
in
inc
push
pop
scas
jnp
adc
add
scas
in
xchg
adc
insl
pop
div
ret
inc
sahf
loope
jle
mov
cmp
push
outsb
cltd
pop
lock
enter
mov
cmp
xchg
cmp
mov
out
jo
lea
xor
xorb
push
int3
sub
xor
fnstsw
jle
mov
jge
jmp
xchg
xor
mov
in
repz
dec
outsl
loop
cmp
mov
push
adc
xor
rclb
testl
cmpsb
adc
pop
mov
leave
int3
adc
pop
gs
adc
or
mov
loope
sub
push
stc
fwait
mov
pusha
scas
daa
jp
pop
sbb
jbe
push
je
sub
mov
mov
lods
xlat
repnz
inc
sbb
add
pop
and
hlt
pop
arpl
movsl
sbb
jge
mov
fimull
and
js
stos
mov
mov
or
popf
or
mov
fcomip
dec
xchg
ja
fnstsw
int
test
or
fistl
iret
sbbb
enter
and
std
sub
into
faddp
test
mov
sub
faddl
movsl
jl
xchg
add
gs
adc
sub
cwtl
mov
mov
mov
into
push
fcoml
and
adc
fdivrl
add
mov
notl
mov
cmp
sub
lcall
in
or
or
aam
or
inc
gs
cs
into
in
call
cmp
lret
insl
loop
push
add
call
xlat
loopne
pusha
rcrb
in
xor
pop
jae
aas
mov
or
fdivp
mov
cwtl
ss
lret
in
sub
and
imul
sub
mov
es
sub
aad
aam
nop
sbb
cmpsb
mov
scas
mov
xchg
insl
loope
clc
push
mov
sahf
clc
rolb
test
fisubrs
in
cmpsl
pushf
in
xor
enter
cld
push
jmp
pop
arpl
das
jb
test
ret
movsb
inc
ss
movsb
lea
rcll
pop
xchg
mov
fwait
cmp
jp
fcmovbe
sti
iret
push
jp
jb
jecxz
ds
fcomps
movl
sub
imul
and
mov
ret
icebp
lea
adc
addl
ret
mov
xchg
test
mov
mov
jbe
gs
testl
in
mov
sbbl
pop
push
out
stos
mov
nopl
dec
or
es
sub
xchg
and
adc
dec
inc
xor
add
outsb
xor
push
divl
mov
je
and
sti
movlps
popa
jno
js
pop
push
mov
ljmp
lock
pushf
mov
push
mov
dec
mov
xor
dec
int
jg
jp
mov
ret
add
mov
xchg
adc
les
cmp
push
hlt
xor
dec
bound
mov
cmpl
mov
das
nop
ss
jge
je
and
inc
cmp
xchg
pop
push
out
shll
out
popf
cltd
push
cmp
xchg
mov
int3
lcall
popa
divl
faddl
stc
out
pop
xor
mov
movsb
mov
cmp
rcll
pop
or
pop
pop
icebp
jnp
nop
push
inc
mov
sbb
sbb
fwait
dec
js
mov
xor
addr16
dec
ljmp
push
inc
fistl
movsb
cmp
ss
cmc
loopne,pn
out
sar
js
arpl
or
or
adc
mov
pusha
xlat
jle
je
mov
and
std
jb
mov
mov
and
pop
inc
and
stc
aam
add
outsl
push
faddl
push
sub
je
or
mov
ja
insl
stos
mov
pusha
aas
xchg
insl
shll
and
clc
cmp
inc
lret
int3
push
in
or
sahf
insl
fbstp
dec
movsb
lds
and
xor
popa
mov
sub
mull
xor
sbb
mov
mov
shrb
mov
in
jbe
fcmovnbe
ja
add
notb
mov
rol
mov
loope
lds
xchg
xor
xor
pop
out
data16
nop
test
dec
push
aad
adc
xlat
sarl
inc
adc
repz
mov
mov
xor
push
adc
xchg
aad
mov
les
jg
sub
or
mov
and
jnp
cmp
sub
dec
insb
gs
sar
xor
inc
sbb
jg
stc
cwtl
mov
cmp
push
mov
sub
cltd
fsubrs
arpl
imul
or
pushf
and
push
jmp
add
jmp
mov
out
mov
xchg
rcrl
repnz
movsb
daa
in
or
shll
dec
lret
clc
movsb
mov
hlt
icebp
mov
sub
and
clc
dec
rcrl
jbe
xchg
pusha
push
mov
test
adc
xor
jmp
imul
rorl
shr
cwtl
or
xor
adc
sub
and
xchg
in
shr
mov
mov
xor
clc
and
pop
lods
test
ds
inc
push
jle
int3
sbb
cmp
mov
mov
sbb
mov
pop
sub
pop
in
insl
fisubs
mov
sub
daa
jmp
jns
push
mov
iret
ss
rcrb
xor
or
bound
cmp
iret
adc
inc
inc
idivb
dec
sub
pop
adc
negb
rcr
insb
std
push
addr16
repz
jnp
mov
cmp
addr16
movhps
in
pop
sbb
test
fdivrs
mov
inc
sub
hlt
jo
inc
push
push
arpl
inc
xchg
movsb
and
pop
xchg
push
mov
popf
mov
bound
cwtl
jns
push
ret
mov
test
sarb
sub
aad
dec
std
shl
loopne
aad
fcos
fmul
dec
cli
sahf
mov
xor
inc
pop
loop
in
imul
pop
ds
lds
mov
jl
popa
ficoms
loopne
add
into
inc
scas
pushf
xchg
ds
push
mov
xor
dec
push
int
sbb
or
xor
and
fcompl
js
fstpl
cmp
out
inc
das
lods
push
rcl
lret
ljmp
mov
cmp
ljmp
pop
jmp
movsl
je
pushf
imul
jge
cmc
cmpsl
dec
add
arpl
outsl
add
xchg
imul
pop
jb
cmp
cmp
adc
dec
mov
sbb
inc
in
mov
inc
rolb
cmp
popf
cmpsb
mov
jmp
ss
jp
sbb
xchg
rcr
cltd
pop
mov
ret
lahf
adc
hlt
pusha
mov
dec
stos
add
or
outsl
cmp
sbb
mov
cld
mov
mov
test
dec
inc
scas
cmc
xor
dec
inc
std
jl
lret
cmp
jle
cmp
xor
cs
mov
xor
xor
daa
mov
inc
lea
popa
add
and
nop
dec
mov
lcall
scas
mov
int3
les
cli
mov
xor
loop
in
xchg
inc
jle
adc
lcall
cli
scas
cmp
sahf
in
push
xchg
jae
jge
arpl
mov
dec
jmp
xchg
add
stc
mov
mov
fildl
pop
aaa
loopne
and
clc
addl
jle
shll
flds
sbb
enter
mov
and
jbe
jno
mov
or
mov
jae
inc
ret
mov
test
mov
dec
jecxz
jp
pop
clc
push
xchg
dec
mov
and
xchg
mov
cmp
bound
outsb
pop
push
cmp
push
jno
cmp
shll
mov
jecxz
dec
test
push
sbb
fsubrs
xchg
add
int3
popa
inc
xchg
push
sub
fldt
mov
xchg
jb
in
jns
test
push
enter
call
iret
xchg
dec
pop
in
or
jbe
sti
or
cmp
out
and
add
or
xchg
test
mov
xchg
xchg
lret
adc
mov
pop
addb
les
imulb
jmp
pop
jnp
sbb
push
jp
rcl
test
mov
mov
xchg
ja
lahf
sub
mov
or
fnstcw
dec
adcl
and
push
mov
xor
pop
adc
mov
cwtl
test
push
adc
out
mov
add
insb
xorl
push
loop
adc
inc
and
mov
add
mov
clc
jmp
mov
lock
test
push
dec
xchg
pop
cmp
mov
or
xchg
mov
test
adc
jnp
jecxz
pop
into
cltd
xchg
mov
cs
sbb
clc
hlt
sbb
jp
xchg
cmp
mov
push
int3
push
jae
daa
repnz
pop
hlt
mulb
insb
stc
cmp
or
rol
aaa
pop
inc
pop
jmp
fwait
inc
cmpsb
das
inc
shlb
mov
stc
rclb
popa
push
lds
and
in
mov
stos
and
add
loope
mov
hlt
icebp
iret
lds
shrl
in
movsl
movsl
add
sbb
mov
sub
or
dec
mov
sbb
adcl
and
outsb
push
out
inc
sbb
call
fldt
out
lds
inc
mov
and
rcrb
push
cwtl
xchg
out
sub
std
out
rorb
add
xor
lock
cld
fstps
cld
scas
cmc
jp
jne
add
popa
stos
fdivrs
mov
gs
and
repnz
jbe
iret
nop
xchg
sbb
divb
xchg
jns
adc
leave
arpl
test
dec
es
data16
sub
out
lock
leave
mov
pop
popf
push
jns
mul
movsb
fucom
or
mov
bndstx
and
jg
je
xor
adc
pop
pop
cwtl
mov
or
pop
jb
test
mov
out
jle
or
push
data16
jno
lods
lods
mov
lret
icebp
xchg
adc
or
outsl
mov
inc
scas
mov
fcmovbe
leave
xor
push
orl
or
nop
call
xor
lods
push
ds
adc
mov
mov
jnp
pop
scas
cmp
cwtl
pop
ret
adc
shr
xor
scas
incl
dec
mov
cmp
stc
jnp,pn
faddl
int3
andl
leave
loopne
ret
mov
inc
jg
lret
xchg
cmpsb
xor
xor
add
and
inc
lret
sbb
xor
iret
sbb
mov
pop
add
outsb
in
adc
or
imul
or
xlat
mov
loop
push
sbb
sub
pop
cld
fdecstp
mov
sub
inc
es
out
add
mov
xorb
mov
and
mov
push
imul
lods
jae
repz
pop
and
ljmp
jecxz
stc
aaa
xlat
lea
hlt
loopne
stc
push
and
stos
gs
xchg
dec
out
lods
sub
and
xchg
and
mov
push
xor
push
jecxz
cmp
jae
inc
mov
call
xchg
lahf
mov
or
xorb
xor
push
sbb
add
pop
fildl
sub
xchg
and
in
mov
jns
stos
loopne
and
mov
data16
outsb
mov
mov
push
jp
push
decb
inc
cmpsl
in
test
mov
inc
cltd
fistpl
rorl
sbb
arpl
lcall
pop
int3
fstl
jmp
mov
fdivrl
cmpsb
jnp,pt
add
jne
cltd
mov
loope
repnz
mov
cmc
sbb
dec
sbbl
rorl
xchg
js
lret
aad
push
or
mov
stos
dec
test
sub
adc
push
and
and
scas
aaa
cmpsb
mov
mov
adc
adc
fsub
mov
loop
scas
mov
adcl
pop
aad
push
xor
ds
mov
add
pop
cmp
jns
sbbb
sub
mov
dec
popa
and
shrl
push
int3
dec
sahf
push
jnp
or
xchg
cmpsb
and
add
jae
testl
pop
cmc
test
adc
push
ljmp
add
mov
pop
sub
push
imul
push
loope
sbb
push
cmp
push
add
out
push
popf
in
das
iret
fdivp
or
movq
arpl
stc
lods
scas
jecxz
mov
jbe
dec
pop
flds
cld
addb
add
movsb
inc
mov
push
jbe
jmp
dec
push
jne
lcall
fsubs
mov
rcl
mov
rorl
or
fnstsw
dec
xor
push
cmpsb
cmp
cs
rcrb
aas
addr16
jbe
mov
mov
sbb
cwtl
jnp
popf
jbe
and
js
adc
sub
jg
jo
scas
push
out
in
sbb
rcrl
push
xchg
cmpsl
jp
ret
push
inc
inc
imul
or
dec
and
and
mov
add
adc
xor
outsb
dec
arpl
pop
in
call
xor
mov
adcl
cltd
cmp
sti
and
iret
pop
cmp
enter
push
fwait
dec
stos
mov
cmp
xlat
out
or
ja
jl
clc
dec
adc
or
push
lcall
shlb
inc
jno
dec
or
jg
jp
loope
mov
les
xchg
cmp
mov
jmp
lds
adc
insb
xor
mov
jb
xor
loop
int3
add
sar
call
ljmp
jmp
xlat
outsb
dec
icebp
mov
xchg
xorb
out
jbe
js
adc
daa
movsb
sarb
repnz
rcrl
fcmovb
insb
divb
and
lret
mov
scas
stos
xchg
inc
into
sbb
mov
test
arpl
jno
leave
enter
push
dec
xor
mull
addr16
mov
mov
into
adc
sarb
subb
pop
push
mov
sti
test
ret
inc
mov
sbb
inc
lods
lods
fs
push
mov
sbb
aaa
aas
int3
jmp
sarb
and
lods
iret
jge
xchg
or
push
rcrl
dec
and
adc
mov
stc
addr16
ficoml
scas
mov
aad
sub
lods
sub
dec
adc
aad
add
lock
add
pop
or
ljmp
pop
sbb
jns
imul
and
popf
add
daa
mov
das
rcr
enter
lret
mov
push
mov
jp
data16
nop
ljmp
sub
icebp
pop
rolb
xchg
rol
and
cmp
pushf
cmp
sub
jb
cmp
push
addb
outsl
test
arpl
in
insl
sub
cli
lds
push
mov
pop
je
mov
lcall
pop
push
pop
push
push
xchg
xchg
xchg
test
push
jecxz
or
xor
fisttpl
mov
or
fs
hlt
mov
pushf
and
xor
in
lods
lret
adc
pop
push
stos
dec
sub
dec
jg
lea
xor
mov
scas
dec
aas
cmc
push
jbe
enter
popa
pop
xor
xlat
mov
rclb
into
stc
dec
push
cmc
push
pusha
or
cmp
stos
in
xchg
jae
inc
aam
and
mov
leave
test
pop
negb
and
mov
pop
movsb
sub
cmp
jns
inc
int
jle
sbb
mov
cli
pop
jl
std
scas
jl
rcll
pop
adc
push
std
mov
mov
dec
aad
and
dec
je
js
sti
repz
out
pushf
ret
cmpl
test
fidivrl
inc
or
fbld
scas
scas
xchg
movsb
pop
xlat
aam
mov
push
inc
leave
and
xlat
aam
dec
sahf
testl
xor
int3
jmp
xchg
aas
push
addr16
daa
nop
cmp
fidivrl
inc
ss
cmp
mov
xor
gs
outsl
ret
inc
or
mov
adc
and
sbb
jns
sbb
pop
insb
ret
sbb
pushf
mov
mov
mov
and
iret
adc
addr16
fs
xchg
cmp
push
or
inc
xor
xchg
arpl
pop
adc
jecxz
sbb
push
mov
xchg
xor
mov
sub
mov
clc
push
shr
outsl
aaa
xor
adc
lcall
outsl
cld
repz
fidivl
pop
mov
jge
pop
out
das
jle
in
hlt
insb
lods
push
flds
mov
fwait
bound
outsb
adc
add
bound
aas
hlt
cltd
xor
pop
and
sbb
lds
jo
mov
adcb
sub
lahf
xchg
mulb
xchg
add
mov
and
sub
in
sub
repz
cmpl
mov
rcl
mov
cs
sub
les
insl
rcrl
xor
xor
add
loope
cmpsb
out
gs
stos
fldt
pop
xchg
mov
mov
cmpsl
hlt
fnstenv
jecxz
mov
mov
lret
cmc
xor
or
out
pop
dec
fisubs
cmp
xor
imul
add
adc
mov
push
aaa
es
and
pop
les
mov
cli
int
leave
jae
fwait
add
int3
xor
push
cmpsl
mov
mov
push
insl
sbbb
sbb
mov
cltd
inc
xchg
aas
adc
xor
mov
pop
jge
fildll
xchg
gs
inc
fistpll
adc
fldt
or
lret
or
cmp
shl
inc
and
fs
rclb
dec
int3
es
and
lahf
xchg
xor
imul
int3
leave
mov
mov
icebp
aaa
fstps
xor
push
int
xchg
das
inc
or
aam
cmpsb
and
pop
sbb
jecxz
shlb
loope
popa
inc
ret
movsb
add
xchg
sbb
or
fisttps
adc
inc
and
mov
mov
sti
jg
pop
scas
and
fidivs
das
inc
mov
and
aas
add
lret
sti
sub
or
shl
sbb
or
test
push
or
lret
or
ljmp
mov
cmp
lods
push
sub
cmc
ja
pop
ret
in
out
xor
rcrb
cmc
inc
jb
xchg
ja
adc
iret
jbe
orl
xchg
fiaddl
or
pop
enter
xor
push
mov
shll
enter
roll
xchg
mov
inc
fstpt
sub
shl
and
xchg
nop
sbb
inc
mov
xor
pop
stos
stc
jp
sub
cmp
fsubl
mull
fwait
lea
mov
frstor
add
loope
stc
push
and
std
push
pop
dec
jp
std
hlt
jbe
mov
aad
and
frstor
cltd
xor
adc
or
fisttpl
enter
pop
ret
inc
cs
ret
popf
popa
mov
sbb
test
mov
movsl
lea
leave
inc
lret
testl
push
xorb
jmp
das
dec
adc
int3
out
js
ret
dec
idivb
mov
mov
iret
mov
fnstcw
jg
xor
xor
or
mov
jle
dec
push
ficoml
les
shlb
dec
dec
mov
adc
rorb
cmp
fs
addb
mov
jecxz
leave
mov
arpl
into
repz
lods
inc
mov
mov
dec
add
push
mov
cmp
mov
dec
dec
lret
pop
int
test
loope
arpl
outsl
cs
inc
rorl
sahf
sbb
lcall
cmp
cmp
jp
add
cmp
out
mov
jecxz
inc
int3
mov
mov
mov
shll
sti
pop
test
int
aad
xchg
lahf
adc
into
mov
mov
lds
call
aad
mov
mov
movsb
movsl
or
mov
incl
adc
jle
iret
movsb
mov
je
pop
push
les
int3
movsl
mov
add
in
push
scas
cli
lods
loopne
xor
push
mov
push
mov
inc
jecxz
andb
bound
jecxz
adc
jns
mov
add
mov
into
pushf
sbb
mov
popa
pop
shl
out
aad
or
push
loop
cs
jp
push
lods
xchg
xor
ret
pop
mov
in
mov
mov
push
sahf
sub
aam
and
dec
imul
cmp
inc
outsb
lods
pop
mov
pop
adc
clc
xor
push
push
or
cwtl
pop
cmp
aaa
cmc
out
lahf
ss
sbb
daa
sbb
pop
orb
ja
fistpll
cmpb
and
pop
add
ja
rcll
in
cmc
pushf
cmp
xlat
sbb
test
hlt
fistl
leave
jecxz
fwait
cmc
hlt
mov
push
pop
jno
jg
das
vmwrite
fwait
add
push
mov
movsl
roll
mov
rclb
mov
stc
pop
pop
pop
int
mulb
ljmp
lds
popa
mov
mov
push
gs
das
scas
mov
in
cmc
stc
sub
adc
xor
mov
imul
inc
add
pushf
sub
shr
cmp
xor
dec
add
mov
adc
and
mov
scas
shr
jnp
lret
dec
sbb
in
and
mov
test
dec
icebp
mov
shrl
xchg
pop
jne
adc
test
ja
mov
aas
addl
cmp
mov
test
mov
pop
cld
lret
mov
pop
or
mov
push
sub
sbb
mov
pop
dec
orl
jge
inc
mov
test
call
mov
stc
adc
popf
mov
mov
jne
dec
stc
inc
mov
fiaddl
rol
mov
push
mov
sub
les
lock
int3
jo
cmp
jne
filds
xor
xor
outsl
push
xor
xchg
mov
xchg
xchg
mov
cwtl
xor
push
mov
stos
lods
leave
inc
and
inc
fnstenv
mov
pop
inc
or
cld
sti
and
cmp
cmp
mov
jno
lock
in
jecxz
push
mov
mov
jecxz
inc
cmp
into
sub
add
xor
and
es
mulb
or
mov
test
addr16
cld
add
push
enter
jb
mov
xchg
imul
cmpsl
call
xchg
data16
cld
out
cltd
add
push
sbb
rcr
ret
mov
insl
lods
and
ss
test
sub
aaa
mulb
jge
pusha
xchg
inc
cmp
jo
stos
roll
dec
sub
jmp
into
cmp
sbb
paddw
mov
cwtl
and
stc
jne
les
mov
mov
mov
or
inc
cltd
arpl
repnz
pusha
sub
cmpl
dec
pushf
inc
cmp
imul
adc
test
add
mov
sbb
pop
mov
and
aad
adc
cmp
test
orb
jmp
inc
mov
es
dec
cltd
fnstcw
test
xchg
mov
add
sub
dec
popl
dec
or
iret
sub
cmp
fcom
pop
pushf
mov
and
int3
sub
xchg
and
ljmp
neg
iret
cmpsl
cmp
pop
or
sub
push
inc
shrl
arpl
lea
int
and
repz
cmc
aaa
mov
lods
addr16
cli
or
shrl
in
push
sbb
dec
fwait
addb
pop
rorb
clc
xor
jnp
mov
sti
sbb
xchg
inc
int
jb
adc
sub
idivb
and
shrb
jb
jge
insb
push
js
push
daa
mov
push
pop
dec
inc
cld
loop
stos
aaa
adcb
ret
pop
and
fstpt
movsl
clc
sbb
jecxz
sub
mov
mov
cld
jmp
fistpl
add
and
pop
lcall
xchg
xor
es
mov
ret
fisubl
js
adcl
in
mov
mov
out
mov
out
or
clc
sarl
jno
mov
jns
in
pusha
push
jp
cmc
xor
cmpsl
push
inc
jle
fs
sbb
push
insl
lahf
mov
jo
sbb
pop
push
pop
call
jo
pop
sub
clc
push
dec
movsb
inc
in
xor
lods
or
int3
ljmp
inc
inc
fisttpl
aad
mov
jo
movsb
mov
push
add
ljmp
push
jge
sbb
rorl
lods
sbb
and
je
mov
jmp
xchg
mov
mov
dec
inc
sahf
xchg
add
inc
jp
cltd
mov
pop
cwtl
mov
pop
hlt
cwtl
dec
sbb
and
bound
dec
jae
mov
xchg
xchg
pushl
ljmp
pop
fst
imulb
xchg
out
or
aam
pop
sub
ret
xor
add
sub
inc
repz
fdivrp
sub
dec
out
jne
lods
bound
mov
xchg
lods
fs
mov
in
add
push
loop
les
mov
mov
into
pusha
pop
nop
cmpsb
sahf
xlat
jmp
in
inc
push
pop
ds
cmpsl
jbe
push
jg
cmpsb
fiaddl
mov
popf
xchg
and
add
xchg
or
xchg
out
call
adc
shlb
testl
jb
dec
lods
addr16
ficomps
adc
push
cmp
push
jnp
orb
cmc
jecxz
jo
adc
ja
cmp
mov
cmc
je
jecxz
push
fs
adc
mov
insl
push
icebp
or
dec
or
mov
sbb
mov
fisubs
push
adc
xchg
xchg
adc
cmpsl
rorl
daa
inc
mov
pop
adc
and
repz
xor
pusha
sub
fsubrl
jnp
je
test
dec
mov
call
iret
cmpsb
jmp
and
fmuls
dec
inc
pop
xchg
push
mov
push
setnp
pop
orl
cld
inc
jmp
mov
pop
clc
xchg
repz
and
mov
std
es
ds
inc
mov
stos
arpl
jge
xchg
push
push
inc
fcompl
push
cmc
mov
cmp
cltd
mov
mov
pop
in
shrb
aas
adc
das
jo
mov
roll
mov
dec
arpl
jmp
loopne
call
dec
mov
fadds
arpl
jp
pop
test
or
or
and
call
jge
jbe
pop
lock
mov
dec
mov
mov
in
loopne
xchg
push
seta
jmp
push
stos
scas
test
in
jle
aam
lds
or
add
cmp
pop
adc
fwait
jg
shll
out
pop
xor
push
xchg
push
fisubs
cmp
popw
mov
mov
mov
pop
test
daa
jo
rcl
js
mov
push
je
bound
popa
cs
inc
sahf
or
scas
jnp
or
out
jle
xor
jne
negb
cli
xchg
cltd
ss
push
stos
pop
add
out
lea
mov
into
sub
orb
sbb
inc
xchg
mov
adc
xor
imulb
mov
les
out
xchg
dec
faddl
xor
popf
dec
shrl
icebp
or
xor
xchg
iret
jnp
adc
inc
test
aas
dec
int3
pop
mov
adc
enter
testl
outsl
xlat
push
mov
adc
sub
sbb
add
pop
call
xor
popf
loopne
mov
mov
sbb
stos
sbb
jp
mov
fcmovb
mov
mov
jg
popl
dec
ss
cmp
mov
jb
test
addl
adc
pop
sub
mov
daa
adc
scas
gs
in
push
ljmp
repnz
xchg
mov
pusha
test
insl
je
stos
fnsave
out
cmp
leave
or
sub
fiaddl
cmpsl
icebp
call
scas
clc
adc
jge
or
or
jno
popf
dec
cmpsb
jno
mov
sub
pcmpgtw
sub
scas
mov
stos
in
push
hlt
ja
lahf
mov
aad
jb
clc
add
cs
test
xchg
arpl
test
push
shll
ret
push
clc
pop
das
notl
inc
or
subl
or
cmc
fisubrs
leave
ja
out
fisttpll
repnz
inc
dec
sarl
aas
lea
pop
test
push
lret
add
jp
aaa
repz
aaa
popa
mov
mov
xchg
xchg
ret
add
lods
mov
mov
sub
push
test
lods
dec
cmc
int
pop
jae
leave
jecxz
inc
sbb
and
insb
inc
sbb
cltd
mov
sub
and
add
aas
test
add
hlt
fidivs
stos
push
mov
aaa
mov
sbb
arpl
pop
and
lock
jno
je
inc
or
dec
adc
lods
insl
incl
insb
jl
pop
mov
pop
pushf
pop
pop
xor
mov
xor
mov
lods
lcall
sub
pop
cmp
lds
push
cmp
call
popa
movsl
xchg
dec
inc
add
lock
mov
cltd
xchg
mov
jecxz
imul
cwtl
push
repnz
pop
cwtl
inc
fstps
idivl
mov
sbb
jne
lcall
dec
dec
data16
and
adc
jg
add
pusha
inc
iret
add
mov
dec
sub
outsl
int
or
sbb
arpl
clc
mov
pushf
inc
lret
std
mov
shll
repz
adc
sbb
iret
into
rclb
loop
add
aaa
mov
popa
lea
cli
or
add
stos
aam
mov
jb
loope
js
dec
sti
mov
mov
add
and
push
jns
xor
cli
and
lock
sbb
fcoms
mov
stos
sbbl
push
rcrb
std
hlt
mov
bound
inc
lock
adc
xor
sarb
sub
sbb
insb
dec
outsb
mov
movsb
ret
bound
cmp
jbe
push
sub
jp
bound
je
faddp
adc
aaa
xchg
in
xchg
pop
test
and
int
lods
lock
jp
pop
test
out
mov
mov
mov
cmpsl
cwtl
popa
adc
cmp
movsl
adc
inc
mov
and
add
loope
clc
inc
jae
mov
pop
add
nop
int
out
pop
mov
rclb
push
sbb
fidivs
add
jo
push
jle
lock
mov
sub
jg
jbe
jb
lds
xor
or
pcmpgtb
sbb
xor
call
dec
jnp
pop
jecxz
pop
or
cmp
lea
adc
jle
add
sbb
daa
jmp
push
stos
mov
sarl
arpl
mov
out
mov
scas
push
ret
push
rorb
and
sub
into
and
cmp
or
cmp
or
sbbb
pop
lret
negl
leave
mov
xor
fdivrl
arpl
ds
dec
xchg
xchg
aad
out
shll
cmpsl
push
addr16
mov
cltd
test
mov
scas
inc
es
fdivrs
mov
push
daa
cwtl
push
pop
dec
push
clc
icebp
outsb
push
repnz
rcrl
mov
lahf
pop
out
fildl
loope
outsl
push
jmp
jecxz
cmp
fidivrs
dec
in
jecxz
in
jp
pop
imul
xchg
xor
mov
pusha
adc
inc
sahf
enter
popa
dec
inc
or
dec
insl
xchg
imul
fdivl
adc
fnstsw
rclb
loope
shll
mov
jb
xor
std
inc
mov
xchg
nop
add
pop
xor
call
and
bound
lock
add
dec
push
aas
sub
jp
push
cli
scas
shrl
fs
decl
lret
adc
jge
xchg
push
xchg
dec
aam
cmp
pop
fs
mov
push
ss
add
xor
mov
adcb
lret
ljmp
outsb
dec
pop
push
mov
cmpsl
mov
mov
outsb
aas
sarb
and
sub
push
fs
dec
cli
into
ret
aam
or
lds
out
scas
xchg
data16
pusha
or
jns
rcrl
push
into
aaa
hlt
pop
xor
shrl
push
xchg
xor
movsl
rcrl
xchg
pop
dec
insl
lock
push
daa
push
orl
shlb
push
xor
dec
mov
push
fmul
mov
push
aaa
sbb
loope
push
popf
test
rcrb
clc
add
cmp
mov
rcll
adc
movsb
arpl
pushf
mov
int
in
cli
jl
in
in
call
addb
inc
insl
outsb
xor
lods
sub
or
popa
cltd
and
stos
cmp
movups
inc
pusha
nop
les
xchg
mov
fs
xor
inc
lcall
adc
dec
push
into
stos
scas
int3
jle
or
adcb
ror
dec
lods
lods
into
in
pop
sbb
dec
cmpsl
and
das
movsb
les
pushf
add
push
or
push
loop
lret
iret
out
push
mov
jle
out
mov
loop
testb
jnp
fdivl
dec
cmpsb
pushf
out
shlb
clc
add
js
pop
lods
cmp
adc
imul
push
jne
mov
jo
xchg
pop
sbb
nop
or
das
or
decl
ret
inc
lret
sahf
sub
loopne
stc
xor
jl
jns
and
dec
loopne
orl
mov
hlt
sahf
stos
lret
cmc
mov
sub
arpl
or
inc
add
out
mov
dec
lret
pop
push
jb
inc
in
pop
adc
in
and
pop
out
pop
or
roll
dec
push
add
mov
das
cmp
enter
jno
cmpsl
mov
in
mov
fldenv
test
mov
push
xchg
scas
sub
sbb
dec
add
inc
push
xor
adc
daa
mov
ss
and
imul
jae
xchg
lock
xlat
sub
stos
test
arpl
cmp
dec
mov
fstp
pusha
xchg
jmp
dec
dec
mov
leave
movsl
faddp
jns
fisttpll
mov
pop
aaa
pop
enter
scas
test
test
in
add
ficomps
ljmp
dec
sbb
out
cmpsb
ret
leave
sub
out
das
xchg
lret
inc
cld
lret
xchg
int3
pop
mov
lods
sbb
jno
out
cmp
shll
ret
cmp
jnp
fiadds
lcall
in
decb
outsb
fiaddl
cmp
jnp
jae
xor
sar
test
or
xorl
arpl
std
dec
sub
daa
xchg
scas
mov
fs
out
pop
cmpsb
gs
mov
cmp
adc
add
popf
xchg
sahf
sub
mov
mov
mov
outsb
cmc
dec
xor
dec
loope
aas
ret
sbb
xchg
mov
inc
mov
inc
inc
cs
or
add
fs
inc
inc
insb
clc
cmp
mov
fldenv
imul
lods
mov
add
sahf
push
jae
pop
adc
and
inc
dec
insb
jb
movsl
cmpsl
stos
xchg
push
and
out
sbb
fidivs
push
dec
cmpsb
repz
pop
aaa
adc
ja
test
test
add
sub
ljmp
cld
xchg
inc
loopne
decb
sbb
mov
int3
or
inc
mov
cmpsb
adc
mov
adc
shrb
push
xor
jmp
outsl
aad
sbb
or
movsl
ds
fcomi
xor
jb
icebp
and
xchg
push
in
xchg
test
xor
add
popa
movsb
nop
bnd
dec
faddp
ss
fldcw
movb
add
cmpsb
orb
fldcw
fistps
shll
or
xchg
cltd
aad
ret
or
or
and
add
pop
test
out
cmp
sbb
mov
mov
cmp
inc
jmp
repz
in
sti
mov
mov
cltd
test
or
fimull
xchg
lcall
imul
adc
lds
inc
sub
int3
gs
daa
and
ljmp
int
shlb
xor
mov
repnz
pop
fcoml
push
cmp
repnz
mov
test
jecxz
sbb
pshufw
clc
mov
insl
xchg
mov
and
pop
mov
jns
inc
out
leave
sub
jl
icebp
pop
jno
mov
add
dec
sub
xchg
jne
arpl
les
jmp
mov
mov
inc
insb
in
and
jle
int3
push
cmp
ds
imul
push
jmp
test
scas
adc
xchg
pop
in
sbb
out
mov
xchg
cli
out
pop
sub
mov
cltd
or
enter
clc
addr16
adc
or
lock
pop
cli
adc
push
lea
sub
xchg
sbbl
push
adcl
mov
pop
repz
lret
xor
ss
pop
cmp
add
lods
in
rcll
dec
xchg
aad
lds
xchg
pop
insl
xchg
lret
jbe
xchg
pusha
arpl
fsubrs
addr16
jb
into
cwtl
jo
inc
inc
mov
leave
jns
inc
xchg
ret
scas
aam
insl
mov
pop
push
add
scas
out
jmp
fwait
in
fldl
shll
iret
push
or
push
pop
xor
pop
arpl
cltd
fwait
adc
sbbl
add
lret
cmp
iret
cmp
cltd
stc
adc
sbb
jmp
cmpsb
incb
dec
sahf
inc
scas
pop
xchg
jae
sbb
or
mov
push
push
insl
fld1
cmp
das
faddp
jbe
loope
pop
push
ret
dec
and
clc
cmc
test
mov
sbb
aad
xchg
push
pop
in
jl
insl
mov
es
ljmp
and
push
popf
shrl
int
lcall
lcall
gs
nop
out
inc
cmp
add
mov
sbb
ljmp
movsl
nopl
jp
mov
lret
add
out
or
and
fisttpl
or
mov
xorb
push
adc
dec
lahf
dec
pop
jmp
dec
cmp
lds
test
mov
insb
fwait
addl
pop
fs
sbb
fsubrl
lds
shlb
dec
mov
mov
dec
in
push
and
adc
or
cs
inc
scas
pop
xchg
arpl
or
fs
adc
fstps
jae
rclb
cmp
lret
pushf
lret
xchg
xor
std
outsb
pop
iret
popf
testl
call
push
clc
cmp
cmp
loopne
inc
repz
lods
pop
jno
test
xor
add
std
je
add
jbe
mov
jle
adc
lcall
fidivrs
imul
mull
pop
test
inc
pop
jecxz
sti
mov
jno
sbb
cwtl
mov
jb
aaa
mov
dec
loopne
fdivrl
adc
fwait
mov
addb
xor
nop
sbb
push
xchg
xor
jecxz
adc
mov
pop
jmp
xorl
sub
mov
pop
push
loop
and
mov
mov
rcl
xchg
pop
sbb
inc
stos
arpl
pop
lods
mov
add
popf
imul
or
loope
adc
aas
adc
sbb
and
nop
int
push
xor
repz
lods
jmp
fwait
popf
mov
lret
mov
jae
xor
cmovbe
push
mov
pushf
pop
push
push
or
pop
jo
aaa
cmp
mov
xor
pop
sti
fnsave
jne
jg
adc
ds
xlat
inc
pop
orb
imul
xlat
inc
jbe
xorl
adc
arpl
mov
or
shr
mov
jmp
cmp
mov
ss
xchg
rorb
pop
cmp
das
into
xchg
cli
jp
add
and
jmp
cmpsb
push
shll
negl
push
or
inc
inc
popa
sbb
dec
movsb
dec
xchg
test
dec
sbb
neg
xor
or
dec
sbb
fcompl
in
out
cmp
fiadds
mov
pop
ljmp
nop
into
je
and
jno
push
xchg
dec
mov
and
dec
lret
sub
fadds
push
cltd
inc
or
popa
mov
jge
push
cltd
mov
inc
cs
or
icebp
rcrb
cmp
fwait
sahf
xchg
jne
xchg
dec
push
ffreep
dec
and
dec
daa
das
repnz
in
scas
add
mov
jb
inc
test
inc
in
cmp
pop
rsm
xchg
outsl
sub
inc
pop
mov
enter
lahf
xor
out
in
push
mov
ret
cld
pop
adcb
pushf
out
push
pop
sub
xchg
clc
roll
lock
xor
add
mov
mov
lahf
lods
clc
jecxz
test
cmp
pop
dec
push
addr16
lret
xor
aam
and
sub
int3
mov
mov
nop
cmpsb
sbb
setno
mov
add
mov
xor
fisttpl
pop
jecxz
xchg
imul
mov
mov
mull
cs
lock
aam
in
push
lods
rcrb
mov
in
inc
and
add
ja
jno
mov
mov
out
loopne
rcrb
inc
xor
lret
push
mov
jecxz
lret
push
jo
xchg
jecxz
add
push
cmp
rcll
ss
mov
popa
idivl
fs
pop
fnstcw
stc
lods
gs
cltd
std
ret
lea
and
jno
mov
shll
mov
inc
adc
fidivrs
fsubs
add
push
repz
outsl
jo
rorl
sub
add
xor
xchg
push
mov
in
pop
ficompl
xchg
iret
push
out
dec
pop
imul
dec
push
dec
inc
cld
lahf
inc
mov
aad
loopne
lret
inc
es
mov
xchg
add
ret
cli
adc
repz
cmc
inc
add
xchg
cmpl
fbstp
stos
sahf
pop
out
aad
jns
or
mov
js
pop
add
xchg
lret
mov
pop
movsb
inc
jae
movsl
out
pushf
pop
inc
sbb
cs
jge
sub
fstpl
nop
rolb
out
inc
out
lock
pushf
daa
pusha
in
mov
mov
insb
int
cmpb
and
sti
dec
lods
or
pusha
test
jo
add
repz
ret
sbb
xlat
cli
add
adc
mov
mov
mov
dec
push
in
addl
mov
imul
cmp
idivb
mov
fstps
push
ss
imul
pop
test
mov
lods
xchg
xchg
push
out
xchg
aad
cmc
xor
and
int3
xor
rcrl
xor
test
mov
xchg
xchg
es
loop
adcb
cmc
enter
or
into
mov
or
xchg
jl
mov
out
scas
inc
dec
jge
cwtl
pop
fistpll
push
bound
jno
jmp
outsl
lods
or
sbb
shlb
dec
out
dec
xor
xchg
cmp
or
adc
mov
mov
lea
cli
movsl
mov
xchg
push
or
push
clc
mov
sti
dec
pop
or
mov
rclb
mov
dec
pop
sar
frstpm(287
xor
xor
add
ret
jl
cmpsb
or
or
xchg
fcmovb
movsb
out
punpckhdq
iret
add
insb
jo
lret
xor
insb
in
xchg
repz
add
cmp
mov
cld
cmc
xchg
xchg
cmpsl
cmpb
out
mov
lret
imul
mov
or
mov
js
or
push
pop
add
in
sbb
dec
add
mov
fisttpll
or
mov
sbb
in
lds
test
stos
push
loope
sbb
cmp
mov
push
mov
jmp
sub
lret
pop
dec
out
popf
and
add
sar
xor
loop
out
push
sbb
mov
add
addr16
popf
push
movsl
outsb
xchg
mov
inc
mov
clc
push
lock
push
test
xchg
mov
insb
mov
xor
xorl
shrb
rclb
mov
jb
push
xchg
pushf
mov
mov
push
sbb
mov
dec
jbe
add
push
mov
pop
push
loope
mov
mov
ja
inc
cld
jl
call
stc
mov
add
aad
cmp
jno
xchg
nop
mov
sti
cltd
movsb
xchg
inc
xlat
repnz
pop
rcll
and
adc
das
cmp
inc
dec
jmp
sti
jo
jne
insb
std
add
pop
or
mov
push
xor
jb
jmp
add
xor
pop
jae
jl
fiaddl
push
sbb
jb
adc
jnp
sbb
sub
mov
idiv
xor
jae
lahf
add
xor
out
call
dec
stc
fisubl
mov
mov
mov
das
subb
das
xchg
testb
xor
jp
mov
push
pop
test
insl
sbb
mov
movsb
mov
xchg
pop
jge
jne
ret
outsl
and
and
sbb
mov
adc
test
and
adc
mov
daa
mull
pop
fidivs
mov
shr
pop
mov
stc
std
jno
jle
jbe
mov
jnp
call
pop
lods
out
mov
xchg
pop
sbb
orl
int3
outsl
or
pusha
rolb
jge
push
in
jp
imul
je
mov
out
in
iret
hlt
mov
in
push
or
and
scas
xchg
pushf
and
mov
andl
cmp
mov
cli
sarl
push
pusha
sbb
jno
mov
fiaddl
insb
pop
pop
cmc
out
lcall
das
imul
lret
and
sub
mov
pop
out
mov
jge
ljmp
dec
dec
mov
rol
inc
daa
ljmp
rol
and
cmp
push
or
stos
out
dec
das
mov
pop
out
std
cmp
sub
je
xchg
scas
dec
cmp
jno
mov
lret
insl
es
sub
mov
test
push
out
push
movsl
and
adc
pop
loop
repz
subl
test
aas
jmp
stos
notl
sub
cmp
sub
mov
xchg
icebp
fwait
repnz
xchg
push
sub
cmp
jno
inc
es
insl
mov
inc
test
out
mov
mov
inc
or
in
stos
test
push
pop
into
aas
and
lods
in
xchg
sbb
imul
int3
inc
fsub
scas
insl
mov
mov
push
fdivl
fldenv
hlt
adc
push
pop
mov
xchg
popf
mov
pop
jne
dec
movsb
xchg
mov
insl
dec
mov
jnp
repz
dec
inc
aad
fidivl
int
hlt
imul
jl
out
dec
addb
and
xchg
cmpsb
in
or
stos
icebp
lret
mov
mov
lret
jge
cld
cli
aad
push
push
dec
push
push
mov
andb
lret
scas
imul
fwait
dec
xor
lret
out
xor
push
daa
popa
sbb
lds
or
and
mov
xchg
imul
sbb
rcll
dec
cmp
mov
cwtl
push
xor
inc
jno
sub
jmp
imul
fisubrl
add
cli
fistpll
pop
jge
sbb
in
lods
jecxz
add
orb
div
sub
scas
popf
repnz
pop
test
andb
scas
test
std
or
dec
inc
mov
rcll
mov
inc
out
loope
orb
repnz
outsb
sbb
pop
xchg
sti
add
xchg
loope
aad
popf
jae
std
fiadds
push
xchg
stc
in
xor
shll
mov
lret
mov
mov
and
int3
sbb
fstps
loope
dec
ds
jle
lret
pop
lea
insl
xchg
dec
lea
loop
pop
sarb
inc
mov
das
sub
mov
jmp
xchg
pop
and
fwait
or
andl
fisubrs
jmp
add
mov
leave
cmp
mov
lret
xlat
test
sub
or
xchg
into
and
fstl
jno
xlat
pop
loop
pusha
mov
mov
push
out
pop
stos
pop
fldl
fdivrl
add
scas
pop
xchg
cmc
ret
pop
into
inc
rolb
inc
and
xchg
or
repz
imul
mov
cmp
aaa
cmp
jb
mov
out
in
adc
or
mov
cmc
dec
pslld
outsl
lds
inc
inc
pop
insb
scas
repnz
add
arpl
fwait
xchg
jnp
cli
mov
pop
inc
cmp
pop
xchg
ret
adc
or
mov
push
mov
aas
ret
fs
jnp
mov
aaa
mov
popa
inc
xchg
xchg
cmp
mov
test
das
push
jnp
test
adc
xchg
cmpsl
ja,pt
out
sbb
sbbl
call
pusha
rcrb
inc
jnp
jb
xor
ret
push
movsb
shl
dec
mov
jb
dec
dec
lret
loopne
rol
push
or
push
xorb
pop
xchg
fisttpll
in
xor
jecxz
movsb
inc
jmp
mov
es
sbb
xchg
xchg
or
jae
dec
cmp
cmp
lea
ja
jecxz
enter
adc
mov
mov
in
add
sub
test
push
gs
jmp
push
dec
insl
add
lods
pop
xchg
imul
push
dec
cmpsw
mov
inc
arpl
mov
lods
cmc
rcll
cmp
gs
test
cmp
xor
inc
out
cmpsl
negl
push
shl
jp
jno
dec
inc
push
bnd
xor
js
movsb
pop
jne
pop
popa
fmuls
mov
in
and
loopne
dec
test
xchg
shll
hlt
xor
mov
mov
dec
pop
sub
or
mov
adc
mov
xchg
push
les
pop
dec
push
xchg
dec
dec
lea
inc
inc
sub
jg
movsb
mov
mov
mov
xor
ror
aaa
cmp
sbbl
js
lds
sub
in
shr
es
pop
mov
jbe
mov
adc
mov
ret
or
add
or
popf
pushf
cs
out
xchg
add
lret
push
out
in
mov
leave
pop
jns
clc
push
add
cltd
cmpsl
xchg
jl
addb
scas
mov
sahf
cmp
push
int
xor
xor
rcll
imull
lret
imul
xchg
sub
push
out
sbb
xor
dec
mov
cmovg
adc
xor
ljmp
jle
gs
and
in
sbbb
inc
xchg
and
psubusb
and
sub
cld
mull
dec
hlt
je
mov
pushf
dec
aam
int3
movsb
bound
jp
or
cmpsl
rclb
sbb
mov
mov
sbb
push
mov
pop
mov
jo
pop
aaa
mov
push
push
ljmp
and
dec
jmp
push
fwait
insl
dec
repnz
fldcw
fcomps
sub
cmp
arpl
cwtl
pusha
ja
pop
leave
ja
call
fwait
mov
push
ss
mov
jno
pop
push
leave
push
frstor
pushf
push
lock
nop
pop
push
push
mov
cs
cwtl
mov
jecxz
push
mov
jno
aaa
xchg
dec
out
mov
sub
push
or
insl
fdivl
sar
adc
jp
or
cs
lret
lds
xchg
sbbl
push
cwtl
push
aas
adc
or
incb
ret
jp
mov
hlt
or
sbb
mov
pusha
dec
sbb
or
push
call
lock
int
pop
or
xor
or
adc
imul
rcrw
clc
jg,pt
sbb
ret
or
mov
xor
lret
jp
pop
out
mov
loope
les
bound
push
popa
lock
in
mov
jbe
in
mov
pop
xor
jmp
inc
fisubrl
repz
jne
popa
cmp
jecxz
pop
cltd
mov
push
cmc
xor
pushl
add
test
inc
mov
mov
in
fstps
clc
enter
xlat
rcrb
std
loop
cmpsl
xchg
mov
push
int
mov
lds
and
xor
mov
xchg
add
insb
xor
cli
push
clc
mov
xlat
sar
es
movsb
int
adc
inc
mov
js
insl
inc
mov
lods
push
int
or
icebp
push
jbe
or
cmp
xor
or
adc
pop
jae
mov
adc
fnsave
ljmp
dec
cmc
fcoml
push
iret
sub
fsubs
inc
shll
cmpsb
adc
je
sbb
dec
xchg
shll
or
xchg
popa
sti
dec
pop
sbb
cmp
out
fisttpl
shlb
jno
xor
cwtl
push
or
test
mov
fs
xor
fiaddl
cmpsb
repnz
pop
sbb
call
push
sbb
jg
jbe
popa
mov
aas
or
pop
and
adc
inc
dec
cmp
stc
in
cs
cs
call
int3
insb
aam
fwait
cwtl
scas
dec
outsl
adc
scas
lods
push
adc
jae
es
jo
les
fadd
arpl
pop
divb
or
ret
outsb
xchg
test
mov
bound
push
xor
and
push
ljmp
mov
out
mov
push
filds
sarl
cmpsb
xlat
stc
mov
xchg
push
andb
dec
xchg
data16
dec
inc
in
mov
jno
ljmp
cs
mov
lret
insb
out
sbb
cmp
arpl
push
push
jno
fdivrs
cmp
aaa
sbbl
fsubr
cmpl
int3
mov
xor
loop
sarb
inc
into
jb
xlat
and
pushf
lahf
push
inc
jo
ds
xchg
xor
xor
test
jmp
sbb
mov
inc
push
scas
sub
pop
cmpsl
or
add
aaa
jmp
dec
push
fsubrl
int3
and
jne
mov
stc
mov
dec
mov
leave
out
enter
sbb
lds
xchg
add
sti
or
jae
test
imul
enter
lret
adcb
jns
jmp
or
sarb
rcrb
mov
jo
std
xor
test
mov
adc
xchg
popf
pop
jo
pop
int3
subb
int3
aam
add
pop
mov
cmc
xchg
test
pop
inc
fsts
frstor
test
lret
adc
ret
adc
mov
ja
mov
adc
sbb
fisubrl
into
cmpw
sbb
call
dec
add
mov
data16
roll
mov
lods
add
and
inc
ss
in
testl
lret
rol
cmp
xor
mov
push
outsb
sahf
mov
push
loopne
push
mov
popl
sbb
fmuls
test
pushf
movsl
in
dec
sub
mov
sbb
add
sub
aaa
test
add
xchg
adc
mov
sbb
insb
call
push
in
push
mov
popf
cli
loopne
jb
xchg
orl
mov
ljmp
cs
rorb
dec
cmp
adc
addl
mov
push
inc
xchg
out
dec
scas
jecxz
in
pop
push
jnp
ffree
mov
inc
in
adc
jae
ss
sbb
popf
sbb
lds
jno
jp
jecxz
stos
or
repz
imul
push
mov
test
cltd
ds
div
adc
cmp
inc
push
inc
pop
cmpl
shll
mov
in
xchg
mov
sub
popa
and
out
add
mov
repz
and
pop
mov
jae
cli
adc
mov
lds
jmp
in
push
dec
test
and
insl
test
adc
ds
or
adc
stos
push
fstpl
add
pop
push
add
cltd
in
stos
std
lea
popf
push
bound
cld
repz
loop
xor
and
rorb
je
lret
cmpsb
call
sar
push
mov
sub
mov
adc
jl
ret
and
scas
cli
out
popf
notl
adc
jge
std
or
out
call
inc
push
push
dec
adc
insl
jecxz
xchg
xor
dec
dec
mov
xlat
cltd
mov
xor
cli
clc
sbb
mov
inc
jno
sub
fisttpl
scas
or
sub
cmc
or
pop
das
and
lret
das
adc
roll
std
mov
das
add
fs
hlt
lret
or
cmp
dec
xor
loop
scas
sbb
mov
mov
enter
notb
outsb
jnp
and
push
aad
mov
cld
aas
sahf
lds
pop
mov
push
pop
mov
in
scas
cmp
ljmp
or
pusha
jp
mov
movsl
adc
add
in
mov
insl
fidivl
sti
and
jae
or
mov
insl
lock
add
and
loopne
jo
das
arpl
pop
fists
insb
push
addr16
add
mov
notb
jne
xlat
push
stos
aas
or
int
jge
jl
adc
in
cwtl
and
fcompl
mov
pop
jae
sbb
popf
jp
cmp
cmp
mov
sbb
cmpsl
or
in
stos
mov
out
loope
dec
loope
dec
xor
cmp
jmp
scas
pushf
fwait
pop
lcall
stos
test
scas
jmp
fs
popa
pop
mov
lea
mov
aaa
fldt
into
cmp
sahf
lahf
dec
xor
xchg
cld
sub
movsb
mov
int
mov
mov
aad
mov
xchg
add
out
sub
clc
aam
aad
mov
scas
jg
stc
into
jmp
cmpsl
fsubrs
push
jae
pop
mov
imul
shll
jns
push
xor
xchg
jns
lahf
pop
fcoml
add
inc
test
adc
cmp
popa
and
rcrb
ljmp
push
sbb
cmpsb
out
dec
jge
dec
and
adc
sub
xchg
jl
lea
xor
iret
mov
jecxz
cmpsl
int
mov
loop
mov
jp
and
ret
shll
fisttpll
sub
cmp
cmpsb
aad
jo
dec
fmuls
imul
mov
daa
stos
aaa
mov
cmp
ljmp
outsl
mov
lret
nop
subb
xor
nop
inc
pop
jns
fs
push
mov
adc
in
inc
jl
jg
jbe
mov
push
outsb
imul
hlt
cld
jp
dec
fisubrl
pop
insl
cmp
jl
mov
cmpb
frstor
out
xchg
lods
ret
sahf
push
pushf
inc
dec
inc
shll
add
nop
enter
mov
jnp
and
push
int3
cltd
mov
push
sbb
cmp
andl
push
pop
push
inc
insl
jmp
mov
xchg
dec
jns
mov
sbb
in
and
imul
loope
jns
add
stos
pop
mov
ret
mov
xor
iret
sub
mov
xchg
xchg
std
dec
vmread
push
xchg
lret
xchg
inc
jmp
stos
sub
and
icebp
xor
loop
sub
push
test
rcrl
jmp
ljmp
cmp
mov
mov
mov
cltd
xchg
push
loop
call
or
js
scas
or
mov
xor
inc
das
lock
mov
in
cld
jb
out
aaa
flds
or
jg
jmp
lock
mov
pop
push
sahf
dec
pop
push
jbe
arpl
jbe
jnp
push
lds
push
jne
clc
dec
adc
rcr
cli
dec
inc
jae
pop
add
jecxz
mov
or
fldenv
pop
sub
int
jle
out
ljmp
xor
add
ss
dec
push
push
std
jl
or
aas
icebp
rcl
out
enter
ljmp
addb
out
cmpsl
fstp
out
sub
cld
popf
in
pop
cwtl
in
out
cmp
push
imull
test
push
mov
cmpsb
xchg
xchg
loop
out
mov
fsub
scas
scas
ja
and
or
mov
clc
lock
mov
call
push
add
and
pop
les
outsl
les
popa
pop
push
scas
js
adc
test
jmp
stos
or
movsb
fimull
inc
xorb
xor
pop
cwtl
cmp
fidivs
mov
sub
out
aam
dec
out
sbb
xchg
xor
frstor
imul
pop
or
mov
mov
gs
pop
lods
adc
adc
jg
in
rclb
add
push
popf
adc
xchg
leave
mov
repnz
andl
cli
mov
or
jle
jmp
mov
push
das
adc
xor
sbb
xchg
mov
div
or
pop
fwait
or
int
mov
ds
data16
popf
int3
into
push
cs
das
fwait
mov
stc
movsl
lahf
add
cmp
mov
push
jle
adc
pusha
ret
jne
popf
sbb
xchg
push
iret
cmp
mov
xor
xchg
jno
divb
cmp
enter
sub
js
dec
jmpw
cmpsb
sbb
mov
mov
outsb
add
jge
in
mov
fsubl
int
es
clc
mov
imul
std
mov
pop
add
repnz
adc
scas
adc
inc
negb
sbb
jmp
fbld
sub
fidivl
push
roll
lcall
enter
imul
mov
pusha
ss
leave
imul
ja
cmpsl
aas
cmp
adc
outsb
scas
mov
addr16
or
or
add
fsubrl
stos
cmp
jg
subl
push
lret
pop
enter
pop
push
adc
add
dec
dec
cli
add
repz
cmp
movsb
popf
pop
adc
pushf
jne
subl
test
stc
jecxz
ret
pop
cmpsb
sbb
aad
lods
mov
fimull
sub
lahf
movsl
test
mov
daa
shlb
adc
addr16
push
or
orb
jmp
sbb
popa
push
std
mov
loopne
pop
je
mov
pop
int3
cmpsb
push
divb
mov
jb
xchg
mov
bound
mov
and
pop
mov
pop
xchg
repnz
aad
js
cwtl
push
cmp
dec
sbb
push
aam
loop
and
lock
iret
mov
fs
jae
cli
std
push
push
ja
lcall
dec
es
pop
xor
mov
xor
stos
ja
mov
rorb
jg
inc
scas
loop
rcr
das
pop
xor
jb
and
mov
dec
add
cld
test
push
jecxz
mov
jno
stos
xor
push
dec
cmpsl
mov
push
pushf
lods
mov
loope
inc
jmp
fsubr
stc
icebp
ja
mov
or
mov
into
pop
xchg
in
fdivl
lret
aam
sbb
outsb
jecxz
fcmovnu
mov
sahf
cmp
mov
nop
subb
stc
adc
and
fsubp
or
xor
jo
xchg
std
xchg
jle
push
fadds
pop
sub
sub
push
dec
sti
es
lret
movsl
mov
sbbb
mov
inc
popa
in
scas
or
jecxz
shrb
movsb
daa
cmpb
adc
addl
push
adc
mov
xor
imull
nop
stos
adc
jle
pusha
xchg
cwtl
push
fstl
sbb
shrd
dec
inc
lret
stos
lahf
adc
adc
add
cs
and
cli
lea
inc
in
cmpsb
push
popa
jb
icebp
bnd
and
out
stos
out
push
sub
gs
sbbb
push
hlt
test
or
mov
cli
mov
loopne
mov
dec
inc
add
push
outsb
pop
cmp
pop
imul
loop
mov
and
push
mov
es
ficompl
std
arpl
movsl
loope
repz
ljmp
test
imul
clc
push
pop
ret
mov
add
add
mov
push
ds
nop
add
dec
xchg
incb
or
dec
jae
fildll
ret
mov
inc
pop
out
cmpsb
mov
lea
test
or
push
xlat
ljmp
add
fidivs
mov
jnp
pop
jecxz
or
sbb
jns
orb
outsl
rcrb
repz
and
sbb
out
in
popa
cmp
push
decl
imul
lock
cmpsl
mov
push
std
frstor
int3
or
xchg
mov
das
leave
xor
fs
mov
fistl
mov
sub
test
xchg
arpl
leave
stc
in
jg
dec
inc
je
rcrl
out
mov
jno
movsl
out
cmpsl
sub
mov
aam
jb
pop
in
into
and
jg
sbb
addr16
aas
sub
mov
cmp
test
into
je
dec
and
ret
imul
fstps
aam
adc
jb
scas
out
mov
imul
pop
pop
loopne
push
clc
mov
or
xor
and
icebp
testl
mov
mov
push
sub
mov
stos
imull
sbb
jmp
bound
push
call
sub
fdivl
test
and
xchg
sbb
addb
int3
insb
dec
lcall
sub
nopl
faddp
ror
mov
out
mov
add
or
sahf
sub
jbe
rorl
xchg
inc
addr16
fdiv
mov
and
sbb
mov
mov
cli
ficoms
or
lahf
sub
mov
xor
fs
lcall
ret
scas
daa
int3
mov
je
call
inc
add
lods
xor
jo
gs
shl
xor
outsb
pop
sbb
pushf
mov
adc
loope
out
ret
stos
pop
xor
mov
adc
cmpsl
loop
fcoms
push
into
xchg
out
repz
mov
mov
mov
gs
mov
retw
push
fisubs
imul
sti
leave
mov
adc
push
sub
cs
dec
lock
pop
test
dec
jne
add
mov
std
xchg
vmaxpd
jo
cli
in
out
dec
addr16
repnz
and
inc
inc
imul
rolb
and
mov
mov
loopne
adc
pop
pushf
mov
mov
into
pop
adc
nop
inc
adc
fbld
push
pop
mov
xchg
enter
sub
repz
push
pop
cli
outsl
xchg
push
jns
mov
lret
fistpll
cmpl
and
or
adc
js
xchg
les
mov
mov
pop
clc
adc
loop
inc
add
xchg
lods
inc
dec
jle
mov
sarl
lods
xor
iret
jecxz
mov
lds
data16
test
fstpt
pop
lods
mov
sbb
add
xor
mov
fisttps
dec
dec
inc
jle
sub
and
xchg
mov
add
scas
cli
or
lods
test
repz
sti
jmp
int3
lcall
arpl
adc
shrb
icebp
mov
push
or
daa
and
insb
aas
test
mov
or
or
fsubl
add
and
sarb
and
test
int
mov
loope
sub
xchg
xchg
inc
cld
xor
pop
stos
inc
lret
dec
ss
insl
je
int3
or
dec
je
dec
leave
out
or
xchg
lods
mov
adc
gs
clc
fldl
push
in
test
test
icebp
push
dec
pop
cwtl
inc
cld
adc
scas
xchg
cmpsl
mov
add
mov
stc
popf
inc
cmc
jno
imul
lods
aam
flds
cmp
icebp
dec
sub
call
sbb
clc
pop
sbb
jbe
nop
xor
dec
push
mov
cmp
mov
dec
sbb
jnp
repz
popa
pop
cli
out
xor
xorb
mov
leave
mulb
push
inc
xlat
mov
mov
outsl
lock
imull
lock
push
pop
xor
inc
cmp
dec
sbb
das
das
xor
jg
lock
std
in
xchg
dec
xchg
add
dec
mov
jae,pt
out
aaa
mov
repnz
int3
pop
xchg
stc
jnp
inc
popa
daa
cltd
insb
mov
aad
scas
sbb
jmp
enter
adc
jnp
push
xchg
or
cmpsl
lcall
add
and
xchg
inc
inc
xchg
cmpsb
mov
adc
lods
rclb
ret
xor
je
into
scas
shlb
inc
pop
pushl
mov
repz
mov
iret
xchg
inc
es
mov
pop
gs
adc
lods
or
jle
inc
pop
xor
push
inc
cld
loop
mov
mov
cmp
daa
gs
pop
mov
in
es
lret
push
sub
mov
ja
xor
sub
imul
jnp
int
dec
mov
xchg
add
popf
and
ret
mov
push
xlat
icebp
sbb
adc
and
in
push
mov
sbb
mov
sub
jbe
lcall
mov
mov
sti
loop
in
jbe
fnstcw
push
adc
sbb
xchg
ds
xchg
cmp
scas
adc
xchg
dec
cmpsb
sub
lods
or
push
ret
inc
pop
dec
imul
inc
jbe
ja
aad
add
push
pop
inc
adc
je
jne
mov
inc
call
sub
and
sbb
mov
outsb
in
or
lods
jne
fisubrl
xor
lods
int3
nop
dec
call
lods
adc
gs
push
outsl
jb
lcall
daa
push
adc
inc
int
outsl
movsl
js
and
or
xor
jmp
and
outsl
repz
pop
das
das
xor
dec
mov
shlb
or
je
pop
xchg
cld
jecxz
stc
cmp
nop
add
cmp
xlat
imul
sbb
fwait
xchg
cld
push
inc
repz
sub
adc
stos
std
je
lock
xchg
sbb
hlt
adc
adc
addl
dec
push
aaa
fidivl
inc
sub
push
sub
inc
add
xchg
ret
xlat
rolb
fcom
sub
adc
scas
in
mov
mov
add
inc
jg
push
shll
inc
pop
fs
arpl
xlat
xor
jp
xchg
cmpsl
fs
push
mov
mov
xor
xlat
jo
imul
lods
sti
sub
xchg
or
or
or
mov
sti
int
insl
les
loope
stc
push
repz
jae
pop
dec
in
stos
ja
test
ds
loopne
sub
lret
test
and
lods
and
inc
push
pop
movsl
push
cmpl
rol
sub
popf
xor
mov
call
addr16
pop
stos
icebp
aas
mov
cwtl
ss
ret
mov
lea
lock
int3
ficoms
jo
xor
fs
and
adcl
pushf
jg
pop
rclb
mov
mov
into
add
sti
outsb
out
fmuls
mov
adc
cli
or
push
dec
xor
out
mov
test
push
fidivs
sub
gs
adc
add
out
pop
rcll
dec
push
fsubl
sub
loope
sarb
jbe
popl
cmp
xchg
aam
sar
lds
jne
iret
iret
ja
out
leave
pop
and
adc
xchg
jg
pop
hlt
scas
stos
shl
push
rcr
fwait
subb
mov
lret
and
stos
stos
sub
shlb
mov
xor
add
mov
or
lds
inc
adc
adc
and
or
push
repz
arpl
mov
ficoml
pop
addr16
stos
adc
mov
shll
adc
cmp
mov
ret
lods
test
pop
adc
and
imul
jae
test
xchg
cld
inc
data16
imul
dec
lods
cmp
mov
es
jae
adc
sub
out
or
and
cltd
jne
jne
sbb
add
or
popf
mov
aam
mov
shll
push
push
xchg
into
jecxz
rcrb
ja
cmp
fisttps
jnp
dec
sub
mov
js
subl
cmc
in
or
push
dec
xor
loopne
pop
xor
out
inc
jecxz
pusha
inc
push
add
sbb
test
out
jp
aas
loop
call
sub
test
mov
decl
mov
or
ljmp
jae
sub
outsl
and
rcll
xchg
stos
stos
add
sub
jmp
jl
popa
loope
mov
xchg
xchg
xlat
sub
rcll
jnp
out
jo
sub
pop
lea
repnz
ficomps
add
stos
adc
repz
repz
adc
cmp
jo
push
jmp
in
mov
mov
pop
xchg
jo
cmp
je
imul
rclb
ja
and
cmp
idiv
push
aad
lahf
push
lds
loope
inc
jno
and
mov
adc
sub
sbb
sbb
bound
test
inc
in
ficoms
cmp
enter
adc
xchg
lea
push
stc
clc
mov
push
das
cli
and
scas
sub
push
stos
add
fwait
inc
arpl
mov
inc
mov
pop
test
cmc
in
mov
mov
jb
and
popf
mov
sub
dec
leave
fisubrs
adc
addb
adc
imul
cmp
add
cmpsb
jecxz
sbb
test
rcrb
lcall
fstp
cmp
add
test
xchg
ds
repz
insb
in
xchg
fsubrs
and
invd
das
lods
addr16
fwait
scas
dec
add
adc
jmp
xlat
and
push
in
and
xchg
push
popf
jbe
pop
cwtl
popa
sbb
pusha
or
xlat
xor
cmp
jno
dec
jae
cld
sbb
popa
xor
add
test
sub
icebp
pop
pusha
aas
nop
sub
sbb
adc
pop
or
mov
movl
xchg
loopne
popa
sbb
in
mov
lret
pop
cmp
inc
mov
xor
mov
enter
cmp
pop
mov
bound
int3
mov
les
lret
jne
aad
fistpl
mov
rorb
lods
jae
xchg
aad
xorb
out
shlb
lahf
int3
sbb
notb
test
inc
and
lcall
test
xchg
cltd
pop
add
popa
test
ret
shrl
in
push
push
mov
repnz
int
adc
arpl
push
inc
pop
rol
push
cmp
pop
cwtl
es
or
pusha
inc
adc
pushf
lahf
popa
xchg
sub
jl
ret
cmpsl
or
stos
in
bound
dec
xchg
data16
cmc
cmp
cmp
lcall
pop
cltd
sbb
int3
cmp
subl
rcl
movsl
mov
dec
jp
flds
icebp
out
and
pop
jmp
adc
je
cmpsb
push
xor
jne
shl
lret
js
pop
add
xchg
jle
or
push
pop
xchg
fldenv
xorl
out
mov
call
imul
js
or
rolb
loop
test
xchg
cltd
mov
cmpsl
jg
insl
sbb
push
cmpsl
test
mov
pop
push
fidivl
out
in
push
test
or
push
iret
inc
addr16
enter
sti
roll
aad
and
pushf
test
push
push
jle
xchg
testb
pop
xor
pop
insb
mov
mov
add
lock
pusha
dec
fs
call
lods
imul
push
loope
mov
ss
das
mov
push
jae
scas
adc
movsb
mov
add
pop
inc
pop
ret
cli
xchg
push
fstl
movsb
and
mov
and
mov
sub
or
cli
loope
cltd
mov
cli
mov
pop
fisttpll
popa
cmpsl
ja
adc
mov
in
lods
add
and
iret
sbb
lea
jecxz
jb
je
js
jns
cmp
cmp
lcall
jg
and
dec
test
sbb
mov
lret
mov
ucomiss
movsl
les
cmp
mov
jg
xchg
loop
mov
xor
pop
sar
xor
jecxz
out
repnz
and
ret
repnz
jecxz
js
outsl
jle,pt
imull
sbb
insb
hlt
loope
cmp
enter
sbb
jne
scas
add
dec
outsb
aaa
jge
mov
adc
imul
icebp
sti
pop
fldcw
jo
or
xchg
lods
ret
xlat
rcrb
mov
inc
cli
pop
repz
push
pop
pmuludq
and
into
outsl
outsb
pop
xor
loope
rolb
jns
sahf
push
int3
xor
sbb
stos
mov
pusha
js
shll
scas
nop
cmp
inc
dec
cmc
fnstenv
outsb
jnp
insb
xor
pop
mov
cld
inc
sbb
cmp
sbb
mov
into
rclb
xchg
outsb
lahf
fidivrl
mov
call
dec
daa
dec
jp
imul
push
mov
popa
mov
cmp
imul
outsl
divl
fwait
ret
adc
jae
ljmp
imul
sub
add
pop
mov
enter
xbegin
orb
push
mov
popf
loopne
sbb
mov
fisttps
mov
call
add
int
lcall
push
add
xchg
loopne
cmp
or
cmp
subl
fildll
in
call
mov
pop
stos
mov
in
xchg
enter
out
mov
out
addl
test
lods
sbb
push
jb
and
mov
jp
mov
dec
cmp
stc
movb
sbb
popa
call
xchg
add
sub
push
in
test
cltd
addr16
cmp
andl
mov
xor
mov
jmp
es
adc
int3
and
xor
pop
in
mov
test
dec
dec
pusha
inc
nop
sbb
cmpsl
mov
add
sub
fdivr
in
std
inc
jns
popf
dec
xor
stos
cwtl
and
mov
addr16
inc
scas
ja
outsb
xchg
sbb
xor
add
notb
xor
andl
xor
mov
mov
xchg
jmp
lods
gs
cltd
ljmp
mov
lea
push
jne
and
xchg
inc
push
lods
dec
addl
push
lea
lret
rolb
sbb
loop
pop
stc
cwtl
xor
pop
push
iret
xchg
aas
dec
cli
mov
adc
cmp
dec
jle
xor
mov
sub
xor
mov
jle
faddl
das
xchg
in
or
inc
ret
jmp
movsl
andl
mov
jmp
nop
pop
leave
push
jae
movsb
rorb
inc
repz
jg
aas
push
sub
sub
jnp
aam
and
mov
xchg
sbb
adc
xor
imul
cmpsb
jp
jmp
push
xchg
cmc
scas
dec
mov
mov
push
xlat
dec
neg
mov
ja
test
es
mov
inc
jbe
rorb
gs
and
data16
mov
ds
ja
repnz
mov
repz
push
mov
mov
jge
addb
test
xor
inc
aad
icebp
mov
test
xchg
jb
pop
stc
and
popa
cmp
aad
jnp
dec
jle
push
lock
add
shlb
pushf
ret
pop
loope
or
inc
push
call
jns
cmpsb
mov
xorl
or
int
ret
pop
and
cmp
in
jp
ret
rol
push
mov
popa
scas
push
mov
add
inc
push
add
push
insb
pushf
fsts
lods
daa
mov
push
stos
out
lock
or
inc
mov
jmp
dec
cmpsb
xchg
dec
jmp
mov
mov
popf
xor
and
aad
inc
xor
fistpll
push
iret
mov
int
add
out
push
mov
lods
arpl
test
enter
call
pop
and
lcall
add
hlt
xor
push
jae
mov
lahf
dec
test
shll
mov
push
mov
cli
out
jge
dec
mov
arpl
bndldx
test
repnz
fadd
push
fisttps
shl
fildll
stos
jle
cmp
mov
insb
pop
sbbb
out
pop
lret
cmp
cmpsb
js
cs
pop
rclb
mov
sbb
cs
out
ja
int3
cmp
insl
mov
ret
pop
data16
sub
js
ja
test
cltd
jo
push
ds
and
pop
outsl
lods
aam
js
fisubrl
dec
daa
orb
pop
scas
cmpsl
xor
pop
lret
mov
leave
pop
dec
test
fisubl
arpl
adc
cmp
adc
inc
mov
pop
cs
pushf
inc
dec
out
shr
push
dec
imul
test
pop
mov
mov
mov
mov
mov
mov
xlat
mov
idivl
xchg
scas
rcrb
fsubp
cltd
aad
mov
imul
mov
adcl
ret
dec
jae
sbb
test
imul
cmc
mov
xchg
call
lock
sub
jp
test
mov
adc
out
nop
fs
adc
adc
add
sti
jl
daa
pushf
test
imul
xor
js
push
add
lods
push
iret
das
mov
xor
or
push
dec
lahf
psubb
scas
or
pusha
jmp
mov
ds
inc
lods
orl
push
and
sti
inc
aam
xor
pop
rorb
adc
test
enter
push
or
loopne
xor
jecxz
decl
scas
and
mov
sub
push
inc
inc
cmpsl
xchg
dec
aaa
cmpsb
pop
mov
shrl
cld
lcall
lret
pop
mov
aam
mov
xchg
out
aam
aad
cltd
dec
lret
bound
insb
push
mov
rcrb
aad
jo
aad
push
sub
iret
es
repnz
sbb
mov
mov
xchg
xor
push
das
push
je
inc
jae
mov
ja
and
cmp
push
push
mov
adc
mov
jne
cmp
das
test
xor
addr16
stos
dec
in
push
sub
imul
adc
push
dec
aas
jnp
mov
jae
xchg
fwait
jge
jbe
jae
push
out
or
add
enter
lret
stc
add
dec
lahf
bound
push
rclb
call
repnz
mov
lods
push
mov
movsb
push
aad
and
aas
vmovsd
adc
mov
mov
and
aas
pop
sub
mov
jecxz
mov
sbb
in
roll
sub
add
push
mov
cmp
repz
or
shlb
repnz
lock
cld
adcl
repnz
in
test
imul
xchg
adc
int3
push
lea
xchg
shrl
es
add
and
movsb
inc
arpl
popf
cmpsl
lds
mov
jnp
xor
ljmp
mov
xchg
icebp
clc
sub
mov
xlat
popf
aaa
test
adc
dec
shrl
push
call
push
push
pop
jmp
mov
mov
pushf
xchg
cmpsb
dec
arpl
gs
pop
out
jo
add
pop
testl
std
or
packuswb
loope
sti
cs
sbb
xchg
popa
pop
inc
push
mov
fnsave
imul
les
ficomps
loop
and
xchg
daa
xor
pop
std
lahf
and
mov
movhlps
testl
jne
pusha
rorl
adc
sub
cmc
stos
jb
cltd
call
stc
mov
test
add
stos
jecxz
mov
jl
or
cli
jmp
cmp
outsb
imul
mov
xchg
and
and
imul
flds
jnp
cmp
mov
mov
push
fstp
xchg
icebp
sahf
rorb
jnp
mov
hlt
sbb
push
cmc
aam
std
aas
out
sete
or
mov
push
repnz
jp
inc
lods
jne
or
pop
popf
in
add
adc
xor
aam
push
add
xchg
pushf
sbb
sbb
cltd
fwait
cwtl
push
aam
ret
and
cltd
punpckhwd
dec
mov
jb
shl
and
cwtl
xchg
cltd
xchg
fprem1
xor
xchg
push
cmpsb
bound
mov
inc
xor
inc
enter
inc
add
aaa
scas
aas
mov
inc
and
add
add
mov
in
cld
jg
mov
imul
inc
std
or
mov
shr
inc
les
addr16
les
ret
movsb
pop
mov
cmpsb
pop
fwait
sti
aaa
and
and
shlb
call
and
or
fimull
jmp
sbb
adc
ret
cmp
mov
xchg
ja
movsb
push
aaa
inc
enter
mov
scas
out
imul
rclb
mov
push
xchg
or
xchg
shll
aam
jno
xchg
mov
bound
stc
mov
aas
daa
mov
push
pop
jb
add
test
adc
push
dec
test
jl
cmp
int
iret
pop
push
jecxz
jp
add
andb
jne
cwtl
xor
loopne
or
pop
in
popa
ficoms
add
dec
outsl
fwait
add
push
jmp
lahf
xchg
neg
or
fcomi
mov
mov
fnsetpm(287
inc
jg
and
pop
subb
xor
fistl
ljmp
icebp
push
nop
lea
cmp
shlb
pop
pop
jns
sub
jl
fstl
sbb
add
add
mov
sub
pop
sahf
and
cmc
sub
mov
fs
mov
imul
xchg
lock
pusha
jae
mov
cmp
jecxz
inc
cwtl
mov
inc
ret
pop
inc
fldl
cli
fdivl
cli
js
imul
mov
popl
pop
add
xor
and
repnz
scas
mov
xchg
movsb
sub
push
cmp
xor
lods
inc
idivb
add
pop
ret
scas
push
cmc
mov
push
and
mov
xchg
popf
push
sub
mov
mov
aaa
mov
lods
sub
mov
mov
sbb
test
add
movsl
std
call
mov
rorl
cmp
ljmp
pop
sbb
mov
out
jg
fucomip
data16
out
cld
xchg
fnstenv
adc
adc
test
push
mov
int3
jb
fcoms
sub
imul
das
cli
sbb
mov
addb
cs
in
lahf
sar
pop
add
xchg
mov
jb
or
xchg
lcall
jp
sbb
pop
xor
jg
repz
iret
imul
push
aaa
out
sbb
loopne
enter
call
dec
int
add
cmp
fs
roll
rolb
cmp
jmp
adc
mov
pop
mov
in
mov
jl
mov
cmp
dec
je
jg
mov
pop
adc
mov
hlt
repz
ja
push
adc
sub
cli
jae
mov
sbb
gs
scas
cli
mov
shlb
jbe
sbbb
ret
inc
jmp
adcl
push
mov
ret
aad
idivl
pop
das
adc
jp
loope
loop
daa
mov
mov
lods
and
mov
push
xchg
in
mov
fsubrs
xchg
test
inc
cli
inc
xor
shl
sub
adc
push
cmp
mov
pop
lods
rorb
inc
ds
jmp
jmp
xlat
cmp
xor
call
push
pop
inc
aam
enter
std
inc
xchg
addl
or
fstps
pushf
lods
mov
push
or
popa
test
jg
jno
js
bound
xchg
sub
stos
mov
out
sbb
pop
xor
int
pop
xor
jle
sub
in
sbb
lds
imul
inc
ss
xor
xor
imul
xchg
cmpsb
push
std
mov
jb
jns
inc
in
dec
cwtl
pop
jb
test
ret
iretw
push
pop
in
lahf
jae
inc
sbb
jle
ret
stos
jg
movsl
dec
add
sbb
jmp
and
test
pop
aas
sbb
jmp
adc
insl
jns
clc
adc
jne
addr16
lret
jmp
out
jnp
mov
fnstcw
cmpsl
fldpi
adc
sub
shl
jle
sti
rorl
fs
cmc
or
or
cmpl
stos
cwtl
stos
or
push
and
mov
sub
sahf
js
sahf
movsl
aad
mov
jmp
insb
daa
repz
dec
inc
mov
les
cmpl
mov
movsl
push
sti
fs
push
push
sub
sbb
bound
imul
rorl
cvtdq2ps
test
fisubrl
inc
pop
fists
or
sub
jge
data16
push
cmp
sub
push
xor
jae
enter
fidivrl
xor
lret
pop
mov
stc
loope
pop
and
mov
fdivp
ja
sub
adc
push
sbb
mov
scas
xchg
xor
mov
mov
adc
jp
stos
test
push
inc
sbb
les
push
hlt
addl
in
sub
adc
push
je
fwait
dec
shlb
lcall
jmp
mov
shll
dec
lret
jmp
pop
lcall
adc
lcall
jmp
mov
ss
adc
mov
dec
mov
inc
je
imulb
sub
push
push
ret
daa
cmovnp
shl
or
imul
cwtl
inc
pop
ja
adc
xchg
pop
pop
mov
jb
mov
gs
jle
fmull
divl
ljmp
adc
inc
rolb
cmpsl
xor
test
mov
in
loopne
scas
lea
leave
push
lods
stos
xchg
inc
test
jne
test
jbe
sbbb
jmp
das
push
fisubrs
pop
outsb
or
fsubl
sti
mov
jae
cmp
adc
mov
fwait
or
dec
add
movsl
jb
insb
lods
mov
adc
clc
sbb
add
mov
jno
nop
lea
fistpll
sub
mov
mov
subb
mov
xchg
into
push
push
add
outsb
repz
xchg
and
cwtl
xchg
or
push
mov
int3
mov
adc
mov
lods
jp
enter
pusha
dec
iret
out
jno
punpcklwd
add
sub
jne
testb
ret
xor
jbe
aaa
add
pop
cmp
inc
addr16
pop
xchg
in
jno
loop
jp
nop
lret
cmp
or
mov
mov
call
arpl
int
fidivrs
in
pop
aam
scas
mov
test
lea
inc
mov
push
out
and
mov
js
and
adc
inc
xor
je
dec
adc
ficoms
mov
aam
idivb
push
loope
sub
pop
testb
das
push
xchg
cltd
test
mov
test
add
pop
mov
or
mov
repz
add
mov
loop
je
test
and
pop
cmp
int3
aam
in
or
fsubl
es
fimull
and
xchg
sub
pop
fstpl
xchg
lcall
shrb
dec
sub
cmpsb
pusha
jg
sti
xor
inc
and
pushl
sub
cmp
loope
add
pop
je
lock
dec
sub
shll
xchg
in
adc
les
push
cli
aas
nop
pop
mov
or
inc
cld
xor
dec
insb
lods
pushf
push
nop
pop
outsb
repnz
cmpl
js
aas
outsl
push
mov
xor
outsl
jno
out
clc
pop
mov
in
andl
mov
sahf
stc
cld
inc
in
mov
push
mov
push
arpl
test
xlat
xor
les
popf
dec
ret
out
int3
sahf
push
mov
jno
aam
movsl
imul
stos
pop
mov
add
push
jne
notl
mov
push
jno
lock
xor
sbb
ret
push
ret
adc
jb
call
push
mov
jle
out
pop
sbbl
sub
sbb
push
cmp
mov
mov
outsb
sbb
int
xor
pop
lock
ja
mov
in
daa
cmpsl
aas
inc
mov
inc
jle
jns
dec
or
and
insb
jl
jle
pop
std
sbb
mov
and
mov
mov
enter
add
aaa
daa
add
and
call
inc
and
lahf
mov
or
add
xchg
adc
popa
leave
and
rorb
std
pop
sti
lret
out
xchg
shl
add
and
movsb
lods
jae
popf
into
daa
imul
push
and
repnz
xchg
adc
add
fwait
ds
xchg
movb
mov
lahf
scas
pop
js
adc
in
xchg
repz
loop
mov
insl
mov
mov
iret
jae
add
inc
or
add
ds
movsb
or
mov
pushf
loop
aam
xchg
sahf
rorl
xchg
lods
xor
enter
imul
mov
popa
mov
adc
bound
test
adc
sub
and
push
mov
cmp
hlt
xor
idivl
js
or
mov
mov
hlt
adc
stc
enter
adc
mov
mov
push
sbb
xor
mov
lret
lcall
aad
roll
xor
mov
inc
rclb
push
mov
push
out
movsb
stc
pop
pop
xlat
pushf
push
cmp
push
pop
xchg
aas
sbb
mov
cmp
insl
adc
movsl
sbb
xchg
das
adc
push
cmpsb
and
jmp
jg
fsubl
jae
pop
cmp
mov
sbb
jge
je
cmp
lret
mov
add
ja
idivb
and
rcll
icebp
add
mov
sahf
pop
lahf
push
xlat
movsl
imul
test
leave
shll
xor
int
dec
pop
jne
fcoml
leavew
xor
shlb
repnz
xor
jb
ljmp
push
in
leave
cwtl
mov
push
mov
add
fdivrl
loope
cmpsb
cli
int
mov
cmpsb
lahf
stos
mov
inc
cmp
aad
cltd
sarl
in
add
enter
inc
lret
lret
dec
push
outsb
jne
mov
mov
sahf
rcr
int3
cmpsb
pop
scas
ds
lret
sarl
push
pop
enter
xor
dec
xchg
mov
cmc
out
jecxz
or
aas
push
dec
cmpsl
lods
mov
insb
or
mulb
addl
dec
push
arpl
imul
push
push
mov
bound
mov
pop
jmp
dec
push
mov
das
or
mov
fistl
add
cmp
and
lahf
jns
xlat
shll
jge
or
and
mov
ss
push
mov
pusha
fs
pushl
jae
fnsave
dec
test
add
shrb
xor
adc
in
pop
add
lret
mov
lock
aas
adc
test
add
test
testb
xchg
inc
xor
push
xor
dec
inc
push
mov
mov
jg
rorb
in
inc
pop
sbb
cwtl
mov
jmp
dec
push
loope,pn
push
xchg
sub
mov
push
sbb
push
enter
pop
xor
xchg
idivl
shlb
in
outsw
push
or
push
inc
mov
stos
sub
icebp
out
pop
jns
jge
enter
pop
pop
mov
lods
mov
and
adc
stos
pinsrw
mov
mov
rcrb
xchg
sahf
xchg
sub
inc
imul
cmpsl
and
popf
fs
testb
dec
je
push
fldt
inc
repz
jmp
pop
mov
xor
xchg
sub
repnz
out
mov
leave
sbb
jmp
and
dec
pop
das
add
arpl
add
xor
mov
aam
pop
popa
cmp
insl
out
insl
xor
test
ret
or
lock
sbb
cs
js
dec
jmp
lods
rcrb
xor
cmp
in
inc
mov
pop
sub
add
push
add
pop
cmpsl
fcoml
jnp
push
xor
adc
or
inc
jne
sub
cmp
xor
pusha
jo
inc
mov
jno
lods
mov
filds
clc
dec
loopne
jmp
divl
mov
push
push
insb
mov
sahf
fnstsw
or
lds
pusha
js
outsl
std
xchg
xor
xor
ds
adc
mov
iret
outsl
mov
adcb
adc
xor
shll
and
std
xor
push
pushf
sbb
shll
mov
icebp
fistps
in
loopne
pop
mov
inc
pop
jle
xlat
jmp
pop
push
pop
insl
xchg
and
adc
nop
js
in
adc
add
btc
andl
fistps
push
add
rcr
jge
sbb
out
rcr
sbb
xchg
pop
adc
fcmovnu
and
mov
inc
and
arpl
inc
jmp
fisubrs
push
jmp
cmpsb
push
sub
mov
pop
jnp
rclb
and
ret
add
scas
mov
sahf
mov
lds
jp
mov
aaa
mov
es
mov
call
mov
enter
cwtl
and
pushf
andb
and
int
fisttpll
or
mov
sbb
adc
lcall
sarb
sti
in
mov
fldt
sub
push
xchg
aam
bound
fidivrs
add
aad
inc
mov
or
aam
inc
add
jno
sbb
pop
test
leave
xlat
sahf
sbb
push
mov
pop
sbb
std
repnz
sbb
inc
pushf
loopne
and
add
and
sub
test
xchg
enter
int3
xor
or
icebp
push
cmp
xlat
cwtl
pusha
push
ss
mov
sub
sbb
cmpsl
mov
ljmp
cmc
mov
pop
bound
daa
pop
xchg
inc
mov
ror
out
pop
testb
mov
test
pop
fcomps
and
je
pop
xchg
xchg
fmulp
mov
pop
push
xlat
mulb
cli
mov
shrb
mov
pop
sub
dec
fcmovbe
dec
mov
das
mov
fsubrp
sub
pop
pop
pop
xor
popa
aad
dec
ds
mov
sbb
cmp
inc
popf
ja
scas
adc
test
sbb
jg
dec
inc
je
mov
test
fxch
xor
jo
mov
mov
pop
fs
out
xor
dec
cmp
cli
or
mov
test
jecxz
add
push
popf
xchg
aaa
pop
cs
inc
pop
inc
fprem
mov
ja
push
xor
adc
into
jg
stos
orl
test
aaa
out
scas
push
xchg
das
add
lods
pop
add
add
jne
out
cs
mov
jg
inc
xchg
insl
xchg
ret
lea
insl
or
mov
mov
mov
jp
iret
dec
cli
testl
rcrb
imul
or
pop
into
popf
adc
shrl
mov
push
mov
loopne
dec
test
addb
shlb
sti
dec
push
xor
mov
jg
pop
cmp
jnp
out
fldt
inc
mov
fsub
jnp
inc
std
add
xchg
mov
or
fnstsw
cwtl
lret
push
je
sti
jne
out
inc
dec
shl
push
xchg
ret
sbb
fiadds
icebp
mull
cltd
je
pextrw
cmpsl
mov
testb
bound
and
cmc
loop
dec
call
ljmp
imul
int3
fsubl
std
lret
push
xchg
outsb
adc
xchg
loop
mov
popa
mov
mov
and
shlb
insb
ret
jle
out
fdivrs
add
jmp
shll
mov
gs
adc
xor
mulb
subb
maskmovq
imull
movsl
ja
adc
and
loopne
mov
fldcw
data16
adc
pop
bound
stc
les
rorb
mov
mov
icebp
push
inc
lret
imul
sbb
adc
add
cmpsl
lods
mov
mov
aad
push
nop
pushf
lahf
dec
movsb
loop
test
ficoms
ret
mov
adc
in
fsub
test
add
cmp
stos
pushf
jecxz
mov
sbb
subl
loopne
xor
pusha
imul
inc
fnstenv
insl
inc
fnstsw
icebp
outsb
add
or
inc
ret
add
sbb
pop
sub
fimull
cmc
mov
lods
into
xchg
mov
jmp
fs
push
test
jae
fucomip
adc
ja
ds
mov
or
inc
lret
lret
jg
push
ret
xor
pop
inc
adc
add
nop
push
jecxz
clc
adc
outsb
jge
popf
fildl
sub
cmp
lret
imul
pop
pop
arpl
imul
sub
inc
add
sub
dec
lahf
mov
pop
xor
repnz
sahf
shlb
ja
dec
test
cld
clc
fidivs
mov
ljmp
loopne
xchg
mov
push
pop
inc
in
pop
cmpsl
mov
mov
insb
fwait
sti
daa
inc
mov
es
and
push
sub
mov
fsubr
push
inc
out
aas
aaa
sub
add
mov
mov
push
jmp
push
shrb
push
je
mov
in
into
cmp
popa
jo
sbb
arpl
or
pop
add
pop
sbb
or
bound
xchg
decb
adc
cltd
in
loope
hlt
rcrl
xor
push
out
jnp
imul
cmp
dec
pushf
std
outsl
xchg
xor
dec
fidivrl
stos
jge
pop
das
inc
inc
mov
cmpsb
test
testb
loop
outsl
dec
fstl
mov
push
push
lock
outsb
push
push
movsb
jmp
nop
push
xchg
data16
outsb
adc
dec
pop
push
gs
jmp
or
shll
mov
fadds
sbb
rorl
aad
sbb
lahf
pop
ljmp
mull
jl
enter
call
clc
rorl
stos
xchg
inc
jo
or
xchg
icebp
imul
stc
in
pop
xchg
xchg
mov
dec
ret
sub
icebp
xlat
lahf
sahf
inc
ret
in
loop
lret
xchg
push
repnz
out
mov
or
dec
or
popa
call
pop
xchg
dec
aaa
xor
les
pop
aad
jo
imul
dec
data16
pop
aam
leave
dec
sub
ljmp
adc
cmp
xchg
mov
popf
lods
and
adc
xor
jmp
push
xchg
jg
pop
in
ret
mov
inc
or
sti
jno
jl
bswap
dec
jnp
cmc
add
xchg
mov
stc
jge
lods
pop
loop
mov
mov
xchg
fimuls
dec
mov
and
loopne
hlt
and
loop
push
ret
adc
and
sbb
mov
mov
dec
das
gs
fiaddl
xchg
js,pn
sbb
lcall
shlb
int3
pusha
pop
push
rolb
popf
cmp
dec
mov
cmpsb
cltd
push
inc
pop
dec
int3
and
jle
jg
sbbb
adc
stc
cmpb
mov
dec
pop
push
clc
lahf
fbstp
cs
push
xchg
std
mov
ljmp
xor
out
jmp
outsl
mov
sub
fsub
int3
xchg
push
fwait
lcall
push
lods
gs
cmp
push
cli
add
fisubl
in
xchg
sub
mov
push
nop
scas
jle
icebp
pop
jo
jmp
push
mov
imul
pop
fwait
sub
sbbb
imul
inc
add
cmpsb
pop
mov
fmuls
shr
or
push
adcb
adc
push
jge
or
mov
test
loopne
push
arpl
daa
sarb
int3
xor
xor
add
and
clc
adc
and
or
dec
icebp
loope
orb
sahf
popa
sbb
movl
push
lahf
pop
stc
push
sbb
mov
and
or
pop
ret
adc
loopne
clc
push
push
cmp
sbb
stos
je
jno
rorl
adc
and
sti
insb
ret
int3
lret
cmp
push
addl
pop
orb
fsts
push
xchg
fldt
xchg
fwait
clc
stos
fldt
inc
cltd
dec
ficomps
push
push
dec
and
xchg
les
dec
xor
mov
xchg
in
push
data16
xor
push
mov
jnp
inc
dec
lret
add
xchg
test
xchg
js
jmp
inc
adc
mov
mulb
add
sti
popa
push
xor
rcrb
in
das
mov
add
imul
movb
roll
push
daa
mov
jmp
jns
xchg
iret
mov
fisubrl
dec
sub
inc
loop
mov
pop
outsl
mov
addr16
je
xchg
mov
xor
sbb
rclb
mov
fisubl
aad
pop
fistl
loope
dec
shll
in
lods
pushf
dec
push
jge
daa
mov
fcom
mov
pop
and
jle
fildll
cltd
adc
xor
push
jle
arpl
addr16
mov
fildl
fwait
cmp
orl
jle
mov
in
sbbl
xchg
faddl
fdivl
pop
adc
jno
sub
xor
repz
rorb
jmp
mov
rcrb
stos
sahf
addr16
test
mov
fistpll
fwait
ljmp
cmp
addr16
jl
push
aam
xchg
fisubrs
dec
and
ds
xor
je
jb
cwtl
and
into
in
ljmp
cltd
xor
int3
sub
push
push
mov
mov
out
lods
js
testl
mov
sbb
xchg
shlb
xchg
mov
leave
jp
repnz
test
mov
inc
mov
dec
test
jae
es
shrb
clc
repnz
repnz
mov
ret
xor
cmp
xor
or
insl
jecxz
adc
add
add
insb
int3
push
sbb
and
mov
pop
roll
stc
pushf
fnsave
es
sub
mov
push
in
popa
fs
mov
rcll
push
jg
xor
jb
xchg
stos
repz
clc
jb
test
leave
or
ljmp
adc
mov
shrb
inc
inc
sub
dec
pop
insb
daa
xchg
or
mov
sub
scas
pusha
repz
ret
out
dec
cmp
into
icebp
cmp
cmp
fstl
cmpsb
and
ja
jecxz
pop
mov
add
in
xlat
xlat
out
mov
jmp
cwtl
pop
daa
les
push
js
mov
enter
stos
sbb
sub
pusha
or
push
into
imul
addr16
stos
xor
cmp
mov
inc
ljmp
and
jbe
cmpb
shl
shlb
aaa
sbb
jne
dec
and
fiaddl
jnp
sub
mov
xchg
loopne
xchg
stos
outsl
add
in
ret
add
sbb
sub
xchg
mov
sbb
jbe
push
jmp
dec
fs
insl
push
push
insl
les
mov
movsb
mov
cmc
adc
repz
hlt
add
add
push
cmp
aam
dec
js
std
mov
mov
mov
push
sub
stos
lods
subb
loope
push
cmp
mov
out
out
mov
dec
or
push
stc
shll
mov
xor
pushf
fs
inc
nop
addr16
loope
fsubs
lahf
rorl
mov
testb
dec
fpatan
add
and
add
call
add
je
xchg
adc
cmpsl
fimull
out
push
lock
cmp
gs
push
jg
out
sub
mov
fsubs
addr16
ja,pt
ss
push
adc
icebp
pop
mov
ret
mov
stos
lahf
fimuls
or
ss
dec
cld
out
inc
rcrb
scas
pop
int
inc
lock
push
lret
fcoml
dec
mov
sbb
test
aam
clc
sbb
mov
bound
shll
push
xor
das
sbb
sahf
je
mov
inc
int3
cmpsl
imul
jmp
sbb
cli
and
pop
ja
daa
roll
dec
repz
adcb
add
mov
arpl
adc
pop
pop
mov
movsb
cmpsb
jl
iret
push
test
nop
sub
xor
sbb
fs
not
pop
add
mov
adc
dec
fldenv
test
aam
mov
dec
jb
pop
adc
iret
cmp
gs
sub
mov
sub
jg
arpl
test
bound
ss
arpl
incl
sarb
jb
jmp
jp
mov
mov
push
xchg
push
es
test
hlt
xor
mov
or
insb
loop
cmp
mov
pop
add
stos
adc
test
daa
mov
test
cmp
insb
ret
push
inc
xor
mov
repnz
jae
jae
iret
fadd
cmc
pop
push
or
sti
andl
lcall
sub
pusha
sub
in
push
pop
scas
mov
and
cmp
inc
data16
mov
adc
mov
sub
pushf
lret
push
filds
mov
mov
fcomps
pop
enter
ret
lcall
inc
stos
inc
jl
fistpl
das
mov
push
pop
cmp
cmpsb
add
jbe
sti
js
jmp
add
stc
outsl
inc
pop
pop
sub
lds
insl
das
std
in
fwait
mov
dec
sub
xchg
mov
dec
cs
ljmp
gs
mov
cli
add
es
jg
icebp
mov
insb
ret
mov
cmpsb
fnsave
pop
cmc
push
loope
push
fnstenv
push
pop
or
pop
cmc
xchg
sbb
mov
aam
out
mov
mov
lcall
add
push
stos
sbb
mov
hlt
push
js
lcall
dec
fstl
jmp
jae
jns
add
out
mov
mov
cmp
repz
sub
cli
mov
push
incb
dec
jne
cmp
aaa
shll
ljmp
cmp
out
jae
add
dec
fwait
in
mov
adc
sub
or
push
fwait
xchg
sub
sahf
divb
push
addb
lea
mov
pusha
hlt
sbb
xchg
jl
xchg
xchg
into
into
add
pop
cmpsb
into
sbb
xchg
js
je
shrb
mov
sub
push
or
fsub
dec
fstl
fildll
mov
leave
lea
push
dec
pop
xor
imul
js
cmp
rdmsr
sbb
addr16
cltd
push
ss
pop
aad
jecxz
stc
mov
cs
cli
pop
nop
mov
movsl
mov
adc
shrl
fwait
notb
idivl
imulb
jb
out
mov
cmpl
bound
icebp
xlat
mov
and
sub
jmp
fistpll
xchg
sbb
or
xor
or
lods
test
xor
repnz
push
mov
outsb
repnz
stc
ljmp
jmp
repnz
loop
mov
out
add
sahf
mov
fstps
loope
add
mov
inc
xchg
pop
and
ja
dec
pop
dec
mov
cmp
push
dec
and
push
cmpsl
cmp
sti
dec
pusha
ja
xchg
inc
or
adc
scas
fcomps
xchg
lods
test
pop
into
rorl
xor
pop
xor
pop
and
mov
jmp
pop
lds
cmp
mov
sarb
cmp
pushf
and
lret
sbb
cwtl
jnp
out
fsts
dec
add
les
and
inc
loop
hlt
xor
outsb
jl
jp
dec
pop
lods
data16
sbb
jne
mov
cmpsb
repnz
push
cltd
pop
outsb
add
test
cli
loope
daa
dec
jae
and
test
ret
mov
push
mov
das
xchg
dec
pusha
insb
and
push
mov
cwtl
popa
out
push
sub
adc
imul
ret
cmp
adc
dec
mov
lods
or
testb
sarl
lock
movsl
push
and
and
sbb
jl
cmpsl
cmpsb
das
repnz
cmp
popf
iret
cmp
xor
push
dec
imul
shll
mov
add
jns
lret
lret
and
stos
test
add
pusha
or
mov
data16
rorb
clc
lods
lods
push
pop
pop
sub
lcall
mov
inc
shrb
dec
pop
dec
add
gs
sub
ficoml
mov
jne
push
je
shll
or
fisubrl
dec
inc
sbb
mov
aas
pop
hlt
xchg
cmp
out
mov
and
lret
sub
in
test
shlb
loope
push
lahf
fxch
push
push
xchg
cli
pop
int3
adc
push
sbb
mov
cmp
ret
mov
nop
clc
jb
dec
pop
int3
jge
xor
and
and
mov
xor
pop
push
inc
push
cmp
inc
loope
mov
sahf
add
pop
cwtl
xor
repz
jecxz
stc
add
sti
icebp
mov
in
mov
stc
sbb
subb
sub
push
xchg
pusha
js
fs
inc
cli
or
mov
push
xchg
stc
ds
pop
push
jecxz
lock
dec
ljmp
in
and
or
add
and
mov
roll
in
sub
mov
dec
mov
movsl
enter
push
adc
fs
loope
pusha
add
adc
mov
sbb
jbe
stc
mov
gs
mov
call
xchg
xadd
call
nop
pop
lcall
cmpsl
xor
and
dec
push
push
out
lods
insb
insb
and
mov
icebp
add
inc
add
push
das
fnstcw
aad
inc
imul
outsb
stc
jg
rcrb
nop
jecxz
push
icebp
push
scas
loope
rcll
movaps
out
push
pop
stc
mov
addr16
inc
add
sub
xchg
pop
cs
adc
divl
inc
add
aaa
push
aam
add
xor
dec
or
out
lods
lahf
cmpsb
dec
sbb
bound
shr
outsb
inc
fbstp
mov
mov
jl
jo
ja
ja
mov
push
fs
lea
dec
mov
dec
dec
in
cs
lea
clc
fdivr
out
clc
mov
push
stos
adc
call
xor
dec
and
dec
out
dec
jne
dec
xor
pop
andnps
testb
das
pushf
mov
push
insl
and
fdivrl
jmp
push
dec
iret
js
shll
or
ret
push
scas
nop
daa
jp
test
mov
cwtl
repnz
pop
out
cmp
fmuls
stc
fsubrp
arpl
push
mov
jl
stos
repz
xor
aas
ret
jg
in
inc
stos
inc
inc
jno
je
loope
push
fstp
xchg
mov
sub
dec
and
pop
sahf
iret
adc
push
sub
dec
or
pop
aaa
outsl
scas
mov
sarb
inc
xor
xchg
dec
stos
mov
sbb
mov
rcrl
outsb
addb
mov
jp
fisttps
jnp
leave
daa
ds
dec
xchg
fnstenv
pop
pop
sbb
pop
fsubs
add
test
fucomi
sub
mov
fldt
lock
sbb
fneni(8087
pop
arpl
xor
push
xchg
cmpsb
imul
ret
add
sub
sub
jge
imul
outsb
fstp
cltd
pop
inc
outsl
in
dec
leave
out
movsl
mov
data16
adc
xchg
loopne
mov
mov
adc
jns
and
hlt
insl
sbb
and
adc
popa
cmp
jae
jnp
and
imul
xchg
out
push
push
lret
mov
add
pop
dec
inc
or
fiaddl
pop
das
mov
pop
in
dec
int
nop
jno
popf
sub
cmp
mov
es
mov
lahf
sbb
mov
push
out
dec
imul
cli
mov
adc
adc
adc
or
xchg
cmp
xor
rol
lock
sub
cmp
jb
cmp
test
js
stos
dec
pusha
push
fimull
mov
ds
push
leave
jecxz
mov
fists
test
or
pop
sub
fidivrs
cwtl
shlb
les
xor
dec
push
pop
jbe
add
shrb
mov
xchg
adcb
loope
inc
sub
fs
fldcw
push
mov
cmp
sub
mov
pop
inc
cmp
dec
push
dec
outsl
mov
push
adc
cmpsl
cmp
into
mov
bound
sbb
test
add
adc
push
popf
aas
imul
mov
das
lcall
lds
mov
mov
scas
clc
or
sbb
pop
repnz
movsl
jo,pn
fnstenv
stos
stc
fistpl
insl
and
xchg
fdivl
xchg
sub
mov
sbb
cmpsl
jno
inc
mov
xlat
inc
mov
lods
sub
stos
iret
sub
and
les
sub
add
pushf
lcall
orl
or
mov
jg
fs
mov
push
push
adc
mov
xor
shrb
test
test
xchg
leave
adc
rcll
not
pushf
push
cmpsw
sahf
lret
pop
es
add
or
jae
loop
add
icebp
and
in
xchg
test
mov
adc
xchg
pop
test
mov
hlt
xchg
lret
jmp
out
mov
xchg
cmp
or
test
mov
jns
lahf
repz
rclb
sti
out
and
int
mov
aas
xor
test
cwtl
ds
idivl
out
push
push
sub
sahf
bound
sub
jle
addl
test
inc
mov
mov
inc
mov
xor
jecxz
cmp
adc
test
ja
pop
jl
imul
rorb
xchg
mov
faddl
loopne
lcall
inc
xor
call
pop
in
pop
fstl
adc
nop
mov
and
sahf
xchg
aaa
movsb
cmp
adc
fsubrl
std
jge
dec
je
cmp
inc
inc
out
iret
sti
cmpsl
loope
popf
adc
dec
sub
dec
mov
mov
dec
test
stos
stos
fs
outsl
lds
adc
cmpb
imul
outsb
cmp
add
push
sbb
popa
sti
mov
bound
xor
mov
dec
mov
scas
adc
sbb
ljmp
xchg
leave
popf
aaa
inc
push
jmp
aaa
fs
mull
pusha
jnp
xrelease
lock
pop
data16
out
adc
jb
inc
or
pop
push
xor
cltd
jnp
mov
lea
outsb
adc
fiadds
pop
xchg
adc
cld
jl
cs
cwtl
sahf
imul
fsubrl
mov
sbb
sub
movsb
mov
lock
mov
xchg
sahf
jae
xchg
xchg
jb
xor
lret
pop
or
inc
add
rclb
add
pop
push
xorb
imul
jae
mov
dec
movsb
jg
dec
inc
xor
mov
jno
inc
or
cmc
mov
insb
sub
ljmp
add
loopne
emms
out
mov
lods
dec
xor
mov
je
pop
jns
loope
lea
pop
mov
lcall
out
pop
pop
loopne
pop
lret
pop
push
sbb
adc
daa
cmpsb
les
in
mov
or
std
xchg
js
call
inc
dec
in
jo
lea
pop
inc
shrl
or
cmp
sti
js
scas
in
jns
and
cli
sbb
jle
xor
inc
test
mov
xchg
nop
loopne
pushf
push
cmp
fs
pop
and
pushf
xor
data16
mov
jp
xchg
jp
dec
cmpsl
mov
xchg
lahf
ret
xchg
add
or
xor
popa
jle
xchg
fwait
pushf
mov
int3
cmp
or
adc
xor
repz
lret
cmc
cltd
notb
popa
xchg
rclb
fimull
mov
add
pop
sbb
jb
in
inc
icebp
test
mov
call
add
imul
jb
xchg
fisttpl
rclb
inc
mov
push
and
or
mov
jae
jb
call
hlt
adc
dec
stos
test
xchg
inc
gs
mov
pop
test
movsb
enter
or
test
xchg
jns
out
ds
pop
jmp
sub
das
clc
pop
insl
xchg
scas
fnstenv
mov
dec
repz
inc
mov
push
xor
jb
add
sub
ret
mov
jo
ja
dec
dec
test
xlat
pop
int
repnz
cld
fdivr
adc
jno
pop
roll
xchg
add
sbb
fld
std
push
mov
scas
or
pop
mov
daa
f2xm1
xchg
fadds
ficoml
popa
mov
hlt
sub
jo
mov
addb
push
sub
xchg
cmp
les
out
ds
das
mov
push
roll
pop
pop
addr16
jg
cli
pop
inc
icebp
movsl
sub
aam
jo
cmpb
push
push
mov
mov
push
fsubr
test
sub
xor
pop
push
hlt
test
iret
das
xor
pop
sbb
ss
pop
push
mov
jnp
cmc
inc
outsl
mov
jecxz
xorl
jg
mov
sbbl
fistpll
cmp
out
push
dec
nop
sbbb
into
xorl
sub
xor
incl
adc
lcall
call
adc
dec
lea
daa
adc
mov
pop
push
lods
lahf
sub
stos
cmpsl
xchg
push
cwtl
outsb
je
pop
jae
adc
jo
sarb
aas
into
dec
sub
in
xor
push
xchg
cli
push
cwtl
mov
mov
mov
push
pop
jbe
sbb
out
inc
movsl
mov
fnstenv
xchg
cmpsl
js
test
xchg
dec
cwtl
lea
lcall
jle
cmpsb
xor
xor
jle
pop
call
mov
mov
fldl
mov
jbe
mov
gs
cmp
sub
daa
adc
jnp
push
mov
mov
xchg
sub
sub
cmp
lret
xchg
int3
push
and
mov
sti
nop
and
scas
addb
stos
imul
out
hlt
sbb
in
mov
pop
shl
call
insl
ret
sbb
fidivrl
push
jmp
insb
mov
das
cmp
push
push
gs
lods
aas
imul
mov
add
dec
sub
loope
add
repz
pop
sbb
ret
mov
inc
jl
or
push
inc
in
lock
mov
arpl
fistpl
mov
repz
mov
xchg
leave
mov
gs
jle
jb
dec
add
les
int3
jg
mov
sbb
addr16
mov
daa
cmp
pop
mov
lcall
jb
jbe
pop
sub
popl
xchg
push
scas
add
rol
fs
inc
dec
imul
shl
popf
int3
dec
dec
aam
es
mov
push
jbe
add
or
mov
mov
fucomp
dec
into
xor
push
mov
xchg
pushf
mov
mov
out
imul
or
mov
or
enter
and
mov
mov
sbb
aam
xor
or
jle
xor
xchg
or
dec
jns,pt
dec
pop
std
sbb
add
dec
int3
push
pop
jbe
aaa
jmp
adc
sub
mov
or
out
or
mov
add
ds
pop
mov
xchg
call
inc
loope
into
cmp
lret
cwtl
outsl
jmp
or
sub
push
xor
inc
sbb
add
lret
and
ret
add
adc
dec
sahf
cmpsl
inc
rcll
and
mov
stos
dec
sbb
sub
pop
ror
and
xor
stos
jae
out
loopne
or
push
sbb
stos
pop
mov
cmp
imul
xor
shlb
mov
push
sbbb
pop
xlat
dec
dec
add
mov
push
pop
sbb
push
dec
mov
xchg
push
sub
jnp
sub
out
repnz
jne
imul
adc
add
adcb
cli
sub
adc
or
scas
stos
or
sub
sub
int3
in
cmc
sahf
mov
cmpb
inc
cs
popf
mov
cmp
loop
rorl
mov
mov
sbb
fildl
shr
mov
jg
das
pop
mov
scas
imul
push
pop
cmpb
pop
inc
lcall
mov
mov
in
pop
outsl
frstor
pop
shl
xor
pop
bound
fs
scas
mov
mov
xchg
push
movsb
popa
jo
aad
cwtl
adc
out
or
insl
jne
jg
test
lcall
insl
cld
jle
dec
sbb
call
fistps
inc
inc
push
sbb
mov
xchg
xor
test
inc
enter
por
int3
and
dec
daa
fsubl
pop
movsb
div
jg
pop
popa
pop
xor
xchg
jns
cmp
push
sbb
sub
in
ljmp
popf
fadd
pop
and
mov
and
fildl
lods
cli
or
fisttps
test
out
inc
mov
rolb
leave
adc
pusha
insb
in
addr16
insl
fildl
stc
or
or
adc
lds
testl
xchg
cld
loopne
addl
lret
pop
or
lods
push
mov
sbbl
adc
cmp
jg
mov
xchg
ffreep
mov
inc
lcall
dec
lcall
push
cmpsb
jno
test
push
pop
popa
mov
iret
stos
icebp
gs
sub
cmpsl
jbe
xlat
push
rcrl
xor
push
inc
hlt
sti
out
inc
jne
pop
add
xor
push
testl
das
nop
inc
cld
out
mov
lahf
cmp
out
loop
aad
sub
xchg
mov
ja
xor
mov
dec
leave
cmp
in
mov
orl
inc
fldl
add
insb
shr
stos
add
sub
sbb
mov
inc
lods
push
pushf
mov
mov
rcrl
inc
in
xchg
arpl
test
lock
mov
in
mov
es
and
clc
xchg
adc
adc
dec
enter
mov
add
or
push
sbb
shll
aaa
pop
mov
adc
lcall
aaa
or
cmp
movsb
idivl
sbb
dec
cmp
sub
shlb
sbbl
das
fs
dec
pop
inc
sub
clc
es
loopne
push
cmc
std
loope
cwtl
hlt
cwtl
pop
mov
push
xor
sub
jecxz
adc
inc
aam
rolb
mov
sbb
in
iret
decl
pop
xchg
mov
ret
lods
or
sahf
mov
fimull
in
dec
and
ljmp
push
mov
out
adc
into
cld
inc
frstor
je
cltd
imul
cli
ds
dec
push
push
xor
xchg
cmpsb
test
mov
insb
pop
push
ja
testl
add
add
ss
movsb
mov
mov
gs
gs
fsubl
in
fwait
inc
and
cmp
insb
lds
iret
add
push
sbb
dec
push
sub
lds
sub
ja
mov
adc
in
pop
mov
sahf
xorl
jo
inc
cld
adc
xlat
sbb
mov
jg
scas
mov
mov
repz
xor
mov
and
rcr
jbe
lods
loopne
xchg
dec
xor
bnd
xchg
mov
jno
sarb
sbb
mov
pop
stos
mov
hlt
sub
sub
lods
dec
lea
and
popa
add
dec
pop
daa
or
aam
sarb
dec
inc
aad
mov
jae
jbe
scas
xchg
clc
or
dec
mov
pop
clc
imul
jl
jne
cmp
movl
sub
outsl
pop
mov
cmp
push
inc
or
fstpt
mov
inc
lcall
movsb
or
test
mov
mov
pop
xchg
fdivl
jbe
or
dec
test
mov
pop
divb
sahf
xchg
dec
push
inc
or
xchg
inc
jno
push
cmp
repz
jle
data16
lcall
jns
adcb
imul
jae
adc
xchg
dec
shlb
imul
cmpb
rclb
jmp
fisttpll
mov
jge
loopne
out
sub
push
xchg
fcmovbe
lods
mov
mov
aad
daa
dec
cmp
xchg
xor
cmpsl
pop
and
out
notb
into
fucom
cmpsb
rdmsr
mov
stos
ljmp
pusha
sbb
int
pop
push
mov
popf
pop
and
xor
inc
push
lret
dec
out
mov
and
aad
xchg
loope
in
mov
push
mov
cmp
push
mov
adc
mov
mov
pop
nop
pushf
dec
mov
mov
orl
insb
cmpsb
add
xchg
mov
inc
andb
out
xor
js
or
inc
xchg
enter
lret
pop
sbb
push
je
lahf
inc
rorb
sbb
outsb
mov
mov
repnz
test
xor
sub
mov
pop
inc
push
add
js
fdiv
adc
cwtl
movl
pop
aas
push
or
testl
mov
popa
aam
or
and
pusha
add
scas
pop
daa
or
push
push
pcmpgtd
insb
fstpt
or
sbb
pop
xchg
loopne
xor
adc
sbb
ds
hlt
cwtl
pop
movsl
ljmp
cwtl
push
andl
lahf
ja
mov
test
dec
lret
cmp
test
fucomp
std
fld
or
int
or
sub
dec
push
mull
pop
shll
scas
mov
addb
push
insl
and
xchg
outsb
cmp
lret
out
dec
test
pop
inc
mov
ss
xchg
adc
or
cwtl
aas
pop
jae
jns
loopne
mov
jno
decb
arpl
push
aaa
xchg
mov
negl
or
mov
test
lahf
in
inc
dec
xchg
xchg
and
cmp
sub
das
pop
shlb
mov
and
lret
aaa
movsb
ljmp
insl
push
and
mov
rcrb
das
pop
xor
jp
popl
mov
shll
aaa
inc
jae
dec
dec
mov
ret
xchg
xchg
roll
and
sub
insl
ret
xor
mov
mov
test
lret
icebp
pop
inc
mov
scas
icebp
aaa
pop
test
jg
xor
xchg
pop
inc
push
stos
xor
xor
add
sbb
movsl
lcall
add
and
add
in
push
test
fwait
jne
dec
pop
cmpsb
adc
lahf
ja
loope
sbb
dec
jnp
aad
outsl
lahf
rcrl
lcall
push
add
lcall
xchg
push
pop
mov
addr16
dec
add
dec
xchg
ret
fistpll
popf
cmpsb
mov
sub
adc
rcll
or
or
inc
jge
push
push
mov
aaa
movsl
movsb
fsubr
lea
lahf
mov
cld
adc
fs
rcrl
and
push
lret
add
stos
std
pop
dec
sti
in
cltd
cmpb
mov
fwait
mov
xchg
inc
loope
push
jmp
scas
xor
cli
pop
mov
cmp
aas
movsb
jnp
xchg
cs
andb
sub
outsl
mov
and
pop
out
dec
mov
cmp
mov
fisubl
ja
divb
fwait
insb
inc
jns
mov
call
aad
mov
add
push
and
mov
nop
sbb
ljmp
ss
add
loope
cmp
or
adc
pushf
adc
jecxz
iret
lahf
push
push
bound
jb
stc
out
cmp
xchg
mov
repz
and
lods
insl
fidivl
mov
push
gs
aaa
adc
mov
jg
adc
cs
add
punpckhbw
jg
pop
out
xchg
movsb
xor
sbb
sarl
pop
lcall
inc
mulb
js
shrl
clc
lret
or
xchg
adc
rclb
cmpsl
pop
ficoml
mov
sahf
mov
in
stc
lret
push
shr
and
mov
ljmp
or
scas
call
fldpi
sub
repz
lcall
movb
fwait
sub
scas
sbb
fstl
or
lret
repnz
out
xchg
xor
in
call
shl
insl
out
add
add
and
imul
dec
test
xor
sbb
push
push
xchg
rcrl
fs
push
push
inc
cwtl
pusha
pop
mov
xchg
adc
cmpsb
std
hlt
movsb
adc
mov
pop
scas
jp
and
xchg
lods
sub
mov
xor
sti
stos
and
cltd
cmpsb
xlat
fbld
push
and
fwait
mov
int
fcmovb
in
js
icebp
out
add
and
pushf
add
fdiv
lcall
test
pop
jp
dec
stos
push
xchg
jl
lahf
inc
xchg
sti
jp
adc
sub
je
jo
aad
cwtl
imul
movsb
pop
lea
fldcw
leave
mov
lret
pushf
sbb
or
mov
push
fwait
addb
in
ror
movsl
ret
xor
jmp
rol
mov
pop
ljmp
scas
pusha
sub
push
pop
xlat
sub
loop
mov
leave
sbb
xchg
popa
cli
mov
xchg
push
fcomp
push
sbb
mov
cli
clc
push
cmpsl
inc
insb
arpl
into
aaa
cmpl
notb
ja
aad
adc
jge
std
cmp
add
aas
pop
insl
and
ljmp
cld
std
inc
cltd
adc
stos
lods
and
lea
rorb
ds
pop
or
aaa
jmp
js
mov
mov
sbb
push
fidivrl
pop
add
adc
cld
inc
jae
mov
in
xchg
dec
or
enter
int3
outsb
call
or
push
inc
in
in
mov
movsb
popf
fldl
jbe
shlb
leave
and
psubsw
push
push
cmp
push
add
lods
test
iret
shl
shlb
int3
sub
pusha
insl
adc
mov
es
data16
xlat
loopne
jnp
je
decl
mov
adc
fcmovnu
lea
mov
sahf
pushf
lods
add
xchg
movsl
lods
repnz
push
pop
add
mov
fisttpl
pushl
in
ja
add
ror
xor
mov
mov
lods
jne
or
shrl
sub
mov
pop
jge
pop
imul
scas
mov
outsl
fists
outsl
jae
cmc
cmp
mov
ss
or
addr16
or
adc
fwait
das
adc
loopne
push
pusha
push
push
adc
mov
std
sbb
add
fmuls
add
bnd
mov
fwait
pop
fisubs
stos
fldl
std
and
jnp
or
inc
out
mov
dec
mov
cmc
and
xor
pop
mov
inc
mov
xchg
jae
cmc
mov
cmp
jg
xor
loope
pop
movsb
pop
imulb
in
xlat
adc
data16
imul
xchg
push
repnz
ljmp
fs
movsb
pop
out
das
fbstp
fs
test
jmp
daa
bnd
insb
mov
lahf
inc
cltd
push
mov
in
or
mov
pop
jg
xlat
loope
mov
mov
aad
fbstp
out
mov
mov
pop
pusha
add
cmp
push
inc
pop
ficompl
imul
pop
xor
scas
jne
add
fistpll
ds
and
call
sbb
xor
sbb
hlt
mov
pusha
insl
jge
mov
sub
ljmp
and
cmp
imul
mull
inc
push
outsb
cmpsb
dec
xchg
push
xorl
cmp
lcall
jb
inc
jbe
clc
dec
fnsave
cwtl
mov
cmpsb
push
lods
pop
pop
lock
lds
adc
mov
sbb
or
out
stos
gs
cmpsl
decb
xchg
xchg
ss
iret
adc
or
mov
jecxz
sbb
mov
jle
sarl
cmp
retw
flds
pop
fadds
dec
cmp
or
lock
push
fisubl
pusha
adc
xor
pop
arpl
jmp
aad
lock
xchg
cltd
imul
jecxz
inc
inc
in
mov
rol
shlb
mov
push
ss
gs
dec
cltd
mov
add
lock
repnz
popa
nop
xor
fwait
daa
dec
sarl
jnp
adc
pop
jae
in
mov
data16
subl
cmp
stos
daa
es
push
sbb
push
hlt
pusha
pop
in
lods
xor
or
out
clc
pop
xlat
aas
pop
lret
pop
icebp
mov
inc
data16
jge
shll
nop
test
add
fcoms
fimull
mov
mov
pop
push
push
inc
sbb
lea
cmp
inc
dec
addr16
hlt
xchg
pushf
adc
add
icebp
pop
pop
inc
lcall
jno
scas
into
dec
xchg
mov
movsb
dec
push
pop
sahf
scas
es
xchg
fistpll
repnz
sahf
inc
and
jge
enter
push
repnz
mov
cmp
imull
jno
insb
mov
es
js
lock
mov
push
cltd
das
aas
xchg
sub
jp
jecxz
mov
mov
sub
jb
push
shlb
jg
jae
xlat
mov
push
mov
adcb
jp
imul
mov
inc
cs
aas
push
lahf
adc
jnp
push
and
push
cmp
cmp
dec
jl
xchg
subl
cmc
jmp
test
fcomip
int3
mov
enter
movsl
dec
xor
ret
cmpsl
adc
ficompl
pop
push
and
call
rorl
jne
imul
and
jg
and
pushf
repz
and
das
pop
imul
nop
idivb
push
xchg
loopne
clc
or
mov
mov
xor
pop
adcb
add
clc
mov
movl
int3
push
ds
push
mov
std
dec
cmp
das
clc
jb
adc
add
idivl
scas
mov
fistps
cwtl
mov
test
lahf
jmp
xchg
icebp
sbb
xchg
add
dec
jbe
lret
dec
shrl
test
pop
sub
pop
nop
push
cmp
push
xchg
inc
inc
imul
and
rolb
fstps
or
xchg
aam
or
mov
add
jnp
xor
mov
repz
test
mov
shl
mov
xchg
mov
xor
mov
and
lea
and
rorb
mov
push
xor
inc
add
in
sbb
mov
cmp
mov
rcl
mov
inc
iret
les
xchg
adc
add
xor
and
mov
pop
dec
mov
xor
xor
inc
cmpsl
es
adc
push
push
loopne
aaa
icebp
mov
mov
dec
and
loope
ljmp
repz
xor
sbb
adc
mov
sub
aad
fst
fdivrl
add
sahf
mov
loop
pop
xor
push
mov
push
in
xchg
sub
dec
adc
es
cmp
andb
scas
shl
jle
or
cmpsl
pop
lock
xlat
dec
es
pop
sbb
repz
ja
gs
xor
pop
popa
inc
jnp
mov
inc
adc
push
cli
adc
ss
popf
jge
ds
into
xor
xchg
xchg
xor
fiadds
or
outsl
jb
gs
cmc
jnp
pop
cld
fucomi
inc
or
mov
jge
repz
mov
pop
in
xor
pop
push
ficoms
xchg
cmp
lods
arpl
pop
shr
pop
mov
adc
hlt
arpl
sub
jbe
ficompl
ljmp
mov
enter
call
cli
pop
pop
je
add
aas
jp
movsl
xchg
loopne
xchg
jo
mov
clc
adc
sbb
outsl
sbb
lds
mov
repz
inc
test
and
push
mov
sub
es
int
jno
out
jle
jle
xchg
and
lods
lcallw
xchg
divl
mov
jl
xor
hlt
sbb
add
lahf
jns
ja
popa
mov
rcll
or
lret
std
ror
roll
pop
out
pop
inc
inc
cmc
and
in
cmpsl
sarl
jmp
mov
mov
mov
inc
das
xor
int3
in
or
rcrl
sbb
loop
jg
jmp
mov
sbbb
das
loop
xor
arpl
out
jp
sbb
xlat
sub
mov
mov
lds
pop
adc
int
inc
ret
jns
ret
cmp
sub
mov
lahf
rclb
add
sbb
dec
mov
jne
cwtl
jae
adc
add
fisttpl
and
jns
insl
jne
pop
jg
add
xor
push
cltd
shr
dec
les
xor
fcoms
jecxz
sub
cmc
dec
push
mov
test
jnp
jecxz
imul
out
loope
outsb
leave
cwtl
cmp
pop
push
sbb
push
cld
cmp
lea
insb
cmp
add
imul
das
out
push
ja
test
cld
repnz
aaa
inc
pop
mov
jp
outsl
mov
add
jne,pn
enter
popa
out
sbb
dec
push
adc
sarb
loop
mov
sbb
add
mov
mov
fsubrl
loope
mov
shr
stos
ss
mov
rcrl
fs
mov
ja
shlb
test
pop
sbb
test
mov
inc
inc
sbbb
inc
push
sbb
jae
cmpsl
sub
and
xor
adc
jge
dec
mov
push
pop
pop
push
xor
repz
dec
lahf
jl
inc
mov
xor
decl
nop
and
push
push
dec
out
repnz
aas
inc
push
mov
jno
sub
outsl
sbb
movsl
adc
mov
jne
pop
iret
xchg
pop
jl
xchg
out
jecxz
ljmp
sarb
mov
stc
xor
mov
xchg
fstpl
cmp
sub
cmc
push
sub
add
push
scas
jg
xchg
mov
lock
or
mov
xchg
cmp
mov
js
or
ds
mov
mov
xchg
gs
fst
imul
mov
cs
add
dec
push
pushf
add
xchg
arpl
inc
push
out
jmp
out
gs
in
out
fs
sub
mov
or
mov
mov
and
add
jae
xchg
sbb
or
push
pop
or
jecxz
cmp
xlat
jno
sbb
mov
addr16
push
sbb
mov
andb
test
cmp
cmc
ja
mov
clc
xor
sti
and
sbb
mov
jle
adc
aam
das
xchg
popf
cmp
inc
xchg
sub
jnp
stc
pop
mov
out
sub
out
push
insl
stos
pop
mov
inc
movsb
loopne
in
add
sbb
cltd
sub
mov
or
mov
xchg
jle
lods
jnp
iret
cmpsl
or
pop
cmp
ds
cmc
ljmp
push
js
call
xor
mov
sbb
jbe
inc
mov
ds
mov
or
hlt
inc
clc
loope
sub
add
into
jl
and
and
and
in
lock
sbb
std
and
inc
scas
inc
insl
cld
xchg
in
jnp
sbb
cmp
add
push
jmp
inc
mov
pop
cmp
lods
xchg
inc
adc
das
ljmp
enter
jp
fnsave
mov
push
test
mov
mov
cmp
ret
inc
clc
mov
add
ret
adc
inc
test
ja
inc
movsb
lods
sub
pop
xchg
lcall
faddl
dec
pushf
inc
dec
js
inc
loopne
dec
scas
es
rcrl
test
pop
adc
or
pop
pop
adc
outsb
mov
mov
jno
arpl
xchg
xor
pop
add
jb
in
pop
pusha
enter
int3
and
push
arpl
test
dec
das
xchg
out
iret
xchg
xor
mov
aad
cltd
xchg
mov
inc
lret
add
jl
bswap
jnp
mov
mov
popf
pop
aas
test
sbb
pop
xor
rcrb
xor
sbb
mov
loop
sub
mov
or
stos
or
daa
scas
pop
sbb
dec
in
push
push
push
aad
ja
push
push
push
sbb
lahf
shl
jb
xor
and
lock
es
sub
outsl
push
test
cli
pop
mov
inc
mov
int
mul
setae
inc
push
mov
or
leave
add
dec
mov
outsl
rol
sub
sub
fsubp
xchg
inc
pop
add
sub
movsb
cmp
icebp
sbb
push
lods
fdivs
in
mov
ljmp
adc
and
rclb
push
std
push
jbe
or
jmp
imul
mov
pop
mov
push
gs
test
andb
js
lods
add
dec
outsl
out
test
fwait
dec
mov
mov
int3
mov
adc
mov
add
in
dec
add
aaa
movsl
push
pop
outsb
jbe
xchg
mov
xchg
push
jnp
add
imul
mov
idivl
lods
repz
iret
cs
jge
icebp
add
out
test
jnp
outsl
sub
fs
test
adc
jp
imul
addr16
insl
int3
cmpsl
xor
lret
mov
or
cmp
pushf
add
repnz
out
stc
mov
lods
push
xor
imul
clc
test
mov
mov
mov
test
movsl
sahf
inc
and
fs
in
dec
aaa
jnp
out
cmc
add
adc
sub
cmp
and
test
push
stc
mov
ret
mov
xchg
jecxz
sub
sbb
data16
mov
test
mov
sbbl
xor
sub
popf
pop
xchg
cld
movd
loope
jecxz
push
aam
call
inc
xor
inc
out
call
sub
mov
mov
cmp
sbb
cld
push
and
das
rdtsc
or
stc
mov
cmp
jl
xchg
adc
and
hlt
jb
xorb
imul
in
jge
jne
fisubs
sub
mov
mov
sbb
xor
xchg
jg
ljmp
stos
fcomps
cmp
cmp
enter
out
outsb
sbb
clc
repz
mov
lea
lret
xchg
push
and
xchg
enter
imulb
pop
je
jg
repnz
xchg
mov
adc
out
pop
mov
xchg
add
xor
dec
in
lea
cmp
dec
sbb
setnp
not
sbb
out
push
stos
dec
push
and
lret
pop
mulb
cmp
mov
sbb
push
mov
adc
leave
roll
test
jecxz
mov
sub
or
xchg
dec
cmpsb
cmp
add
je
mov
loopne
adc
mov
push
lahf
push
addr16
push
lods
sub
mov
or
mov
pop
jp
mov
imul
pop
mov
in
clc
clc
add
out
cmpl
pushf
push
mov
fs
ret
cmp
popl
mov
shrl
and
jb
outsl
pop
hlt
js
movsl
into
add
sbb
pushl
dec
pushf
cmp
psubw
xlat
ret
xchg
or
add
sub
or
call
xchg
mov
dec
mov
les
inc
loopne
fists
inc
sarb
repnz
mov
lret
xchg
call
gs
cmpsb
jnp
test
leave
pop
ljmp
sub
insl
pop
dec
sbb
fst
lods
mov
cmpsb
jo
sub
jge
jecxz
cltd
mov
mov
jae
pusha
lods
negl
insl
aam
movsb
daa
dec
mov
loop
add
mov
iret
dec
or
mov
scas
lock
push
enter
inc
inc
testl
fst
imul
push
jle
xor
int
pop
push
rolb
mov
in
lahf
jb
ja
mov
jg
dec
dec
enter
pop
xchg
cmc
add
icebp
adc
pop
xor
ret
out
lea
cmp
dec
pop
lock
mov
push
iret
fidivrl
mov
jns
cld
xchg
jg
pop
fs
mul
cmp
inc
pop
sub
jl
add
jne
mov
mov
sub
xlat
enter
and
in
ja
nop
cmp
cmpsb
pop
adc
adcl
and
lahf
push
nop
pop
ret
and
dec
orl
sub
pushl
shrb
mov
stos
test
inc
dec
xchg
fdivrp
sub
dec
sub
xchg
popf
cmp
fwait
arpl
mov
sbb
cmp
dec
mov
mov
push
aaa
push
cs
aas
shr
in
xchg
gs
jae
push
inc
add
test
or
ret
adc
jne
int3
xor
jno
add
lret
add
pusha
mov
movsb
hlt
mov
xor
pop
cmp
xchg
popl
mov
mov
dec
popa
filds
or
push
mov
jg
call
push
shrl
dec
fs
push
std
nop
jg
jb
std
push
xchg
cmp
xor
push
adc
add
fsubs
ljmp
jne
pusha
pop
xchg
lods
sbb
out
jno
jne
mov
fs
addr16
arpl
movsl
xor
mov
ss
cli
test
arpl
gs
aad
mov
stos
or
je
push
cmp
push
sbb
xchg
jecxz
pop
or
mull
push
dec
xchg
adc
push
arpl
mull
pop
cmp
cmp
lods
adc
icebp
push
stc
rclb
lods
ds
insb
outsb
fdivrl
movsl
push
lods
and
mov
jnp
imul
pop
mov
shll
popf
aam
je
mov
mov
ud0
rcl
jo
and
std
pop
inc
pop
fistl
ret
mov
mov
jecxz
stos
fisttpll
xlat
loop
lahf
lahf
sti
add
mov
dec
mov
pop
sbb
push
sub
iret
repnz
testl
xorb
cmpsb
mov
pop
inc
jmp
xchg
fs
adc
insl
mov
cltd
movsb
std
mov
mov
dec
repz
xlat
pop
cmp
outsb
loop
jbe
xor
cmp
in
or
fistpl
sub
nop
push
out
cmp
sbbl
int3
ret
insb
dec
add
add
arpl
or
in
cld
pop
mov
test
test
add
test
xlat
aad
and
cld
es
loop
fwait
rorl
push
das
test
out
and
mov
xor
call
jg
and
lds
stc
jo
adc
jp
xchg
loope
mov
cmp
dec
mov
pop
cmc
in
and
js
jmp
dec
xor
cmpsl
mov
jle
out
cs
jl
pop
imull
push
mov
ss
imul
inc
fadds
movsl
mov
mov
inc
gs
push
adc
addl
mov
mov
daa
mov
jge
add
mov
sbb
pop
xor
imul
lds
int3
fcmovne
sub
ficompl
aaa
sarb
or
pop
rcl
mov
outsb
xchg
shlb
push
cmp
mov
iret
call
psubusw
dec
push
lods
mov
xor
inc
fwait
mov
or
ljmp
push
insb
outsl
xchg
push
stos
ficompl
adc
or
loop
sti
xor
dec
fidivrs
mov
add
out
imul
fwait
shrl
lock
inc
push
rorl
pop
ret
popa
insl
lds
int
pop
leave
pop
xchg
out
jbe
lods
dec
loopne
push
jmp
lods
cwtl
fidivrl
cmp
sbb
sub
ds
call
add
xchg
aaa
iret
or
fsub
and
push
fsubrl
mov
sub
and
stc
insb
adc
mov
sub
push
pushf
mov
inc
fucomi
js
xchg
scas
push
and
adc
stos
sub
data16
int3
or
pop
bound
mov
pushf
jae
mov
push
and
mov
sbb
roll
fwait
negl
mov
insl
inc
or
repnz
pop
out
xacquire
insl
mov
inc
mov
inc
test
out
notb
sti
in
repz
inc
mov
lock
arpl
jmp
push
push
mov
cmp
hlt
push
xor
and
jbe
pop
jecxz
fnstsw
aas
aaa
sub
and
aad
fxch
push
mov
fwait
push
rcrl
jnp
les
push
xlat
xchg
sub
jecxz
subb
sbb
push
jno
mov
cmpsb
xchg
jno
ds
push
or
in
xchg
xor
shll
push
push
mov
data16
fwait
pop
xor
xchg
scas
inc
mov
popf
jge
or
shrb
xor
dec
dec
jnp
psubw
sub
mov
cs
jnp
xlat
leave
orl
dec
fadd
loopne
dec
mov
jmp
les
or
mov
ljmp
mov
xchg
xchg
std
aaa
adc
pushf
ror
mov
jp
in
jge
pop
out
imul
mov
call
stos
repz
in
movsl
mov
pop
jno
xor
cmc
mov
mov
xor
fs
sbb
cmc
insb
pop
rcr
push
ffreep
inc
cmc
cmpsb
jbe
cmp
push
in
and
add
movsb
push
call
outsb
pop
inc
cwtl
inc
ss
xlat
adc
nop
icebp
xchg
cmpsb
fbld
lock
jno
lcall
xor
bound
xor
sti
mov
mov
xchg
int3
imul
jmp
mov
jbe
sbb
dec
xor
dec
clc
push
or
pop
icebp
roll
or
jle
inc
push
and
outsl
mov
cmpl
mov
sub
xor
sti
sahf
sub
sub
repz
ljmp
add
cmp
cmpsl
xor
das
jnp
push
mov
push
sub
sub
dec
andl
scas
inc
cmp
inc
jb
push
hlt
xchg
shrb
push
in
mov
cmp
sbb
add
leave
mov
out
add
iret
stos
xor
into
arpl
ja
rorb
push
add
pop
sbb
shr
jno
bound
test
xchg
not
or
fimull
bound
std
mov
stos
and
out
data16
insl
sti
scas
scas
movsb
jnp
pop
insb
icebp
sub
test
push
inc
sub
cmpsl
fidivl
lea
jo
dec
mov
sbb
cmp
movsl
xchg
in
mov
icebp
dec
xchg
jo
dec
jmp
mov
mov
add
fld
mov
and
xor
push
daa
xlat
xor
dec
and
daa
cmp
add
stos
fcomip
cwtl
enter
fstl
pop
cmp
sbb
nop
mulb
add
ret
mov
cmpsl
test
adc
sahf
jecxz
cmp
xchg
pop
dec
jle
aam
aas
inc
mov
pop
and
mov
ret
dec
fs
xor
lret
xchg
lods
out
pop
lea
jge
cmpsb
cld
xchg
pop
jno
mov
enter
dec
scas
push
inc
jg
mov
cmp
lcall
mov
fcompl
xchg
aam
int
cltd
pop
or
pop
mov
data16
mov
jno
mov
icebp
mov
ret
sub
fcomps
repnz
clc
cmp
hlt
pushl
insl
push
dec
jl
fidivrs
and
dec
push
outsl
sbb
and
pop
mov
dec
enter
inc
mov
jp
stos
arpl
in
scas
dec
pop
loopne
push
xchg
out
outsb
jo
call
shlb
in
push
cmp
repnz
dec
lret
sti
clc
add
add
shr
xor
mov
push
xchg
adc
jb
xchg
dec
insb
sub
mov
gs
fidivs
jns
add
insb
xchg
adc
hlt
popf
jno
cmp
jp
jae
cmpsb
lret
xorl
test
adc
mov
mov
repz
jno
jb
fcoms
adc
sbb
push
sub
call
inc
sbbb
repz
adc
sarb
outsl
stc
mov
bswap
push
pop
test
cmc
cmp
fstl
pushl
pop
out
push
sub
mov
mov
sbb
loop
fcoml
push
dec
shrb
xchg
ret
pusha
and
mov
lods
mov
lcall
and
mov
int3
pop
push
enter
mov
and
inc
stos
aam
mov
negl
or
push
push
jo
mov
and
or
data16
and
repz
inc
push
ret
int
sub
data16
cmp
lret
enter
pop
mov
or
jl
lret
xchg
stos
mov
or
mov
dec
jle
inc
mov
fisubrl
fdivl
cmp
std
mov
jbe
std
or
sarl
lods
or
and
push
fmull
pop
bound
jns
mov
dec
in
int3
jp
jno
jmp
scas
add
and
movsb
dec
pop
roll
mov
outsb
mov
aad
out
jns
xor
push
stos
loop
ljmp
es
ret
sub
gs
pop
sbb
mov
fstps
xor
fdivr
jge
in
or
int3
leave
icebp
and
dec
mov
pop
xchg
into
cmpsb
je
and
je
sbb
dec
insl
inc
mov
sbb
cmp
mov
xchg
sbb
orb
js
jecxz
sub
inc
add
inc
jne
push
pop
lret
pop
mov
insl
loop
jmp
inc
dec
int
adc
xor
sbb
push
push
test
inc
pop
in
scas
aam
loop
and
push
push
fisubrl
ja
addr16
cmp
xchg
hlt
jp
adc
dec
sub
adc
cld
cli
nop
adcl
push
fstpl
out
xchg
fdivrl
or
mov
ds
leave
mov
pop
mov
inc
adc
lds
sbb
int3
adc
fsubl
xorb
ja
loopne
mov
mov
push
in
nop
jns
dec
cs
xchg
in
insb
test
jecxz
mov
loope
jl
mov
je
cld
push
sti
sbb
iret
mov
pop
daa
fistl
push
std
mov
loope
sub
fwait
lock
jns
mov
fldt
pop
orl
mov
push
addr16
mov
mov
into
xchg
je
pop
sub
ljmp
popa
bound
sub
cltd
and
inc
mov
js
pop
inc
add
mov
and
push
add
outsl
add
xor
adcb
xchg
lcall
rcr
mov
mov
loopne
addl
in
lds
inc
rcrb
xor
lret
or
cmpl
ja
inc
adc
push
adc
enter
out
cli
iret
cli
jl
out
das
fwait
je
adc
shrl
jmp
pop
adc
and
push
push
add
enter
mov
adc
jecxz
cmp
fs
aam
lcall
outsb
and
push
scas
xor
push
dec
ret
xchg
lock
gs
mov
aad
pop
popa
clc
mov
mov
inc
insl
pop
test
pop
add
gs
jbe
lahf
insb
cmp
icebp
mov
nop
shrl
sub
xchg
pop
pop
adc
sbb
inc
insl
loop
mov
xchg
int
cmpsl
call
inc
push
push
cmp
push
xor
or
jmp
and
fs
and
aad
push
test
mov
movl
or
jp
mov
mov
add
pop
mov
out
stc
aaa
jl
aam
pusha
stos
and
dec
sbbl
sub
sub
adc
pop
mov
inc
lret
xchg
test
xor
sbb
push
inc
dec
sbb
xchg
mov
cld
pop
je
cmp
adc
jg
rcrl
nopl
ret
jns
mov
repnz
mov
fstpt
pop
and
mov
add
test
call
vucomisd
imul
shrl
mov
lea
lret
inc
pop
idiv
pop
inc
mov
insb
inc
fmul
ds
jo
nop
ds
dec
cmpsl
rcll
mov
or
or
fcomps
sub
pushf
adc
cmp
cltd
leave
ret
in
mov
jecxz
stos
sub
loope
push
cmp
push
xchg
aas
adc
fnstcw
lds
cwtl
jo
fwait
lret
lcall
mov
adc
sub
shlb
mov
xor
sbbb
pop
inc
lock
cwtl
lahf
inc
push
in
inc
imul
pop
imul
aas
xchg
inc
xor
out
aad
arpl
in
sbb
orl
jno
mov
testl
inc
push
lret
enter
xorb
cmc
inc
int
cltd
push
popa
test
mov
insb
jbe
je
loope
scas
sbb
xor
sub
test
jne
mov
bound
ja
repnz
mov
enter
cmp
icebp
orb
pop
pop
movsb
jo
push
mov
dec
inc
sub
add
out
lea
xchg
xchg
aam
iret
stos
femms
loopne
and
jae
pop
mov
xchg
pushf
aas
cmp
pushf
cltd
ljmp
and
mov
inc
mov
add
xchg
sub
sbb
sbb
adc
sbb
inc
add
xchg
mov
pop
or
sbbb
fdivp
push
hlt
mov
je
or
outsb
stc
jo
arpl
dec
cmp
mov
pop
fcom
inc
or
mov
sub
xchg
cli
into
adc
mov
in
mov
lods
push
std
sub
cmpsl
pop
inc
stc
push
loop
andl
out
clc
push
daa
imul
lods
push
adc
repz
xchg
adc
insb
adc
fdivs
loop
arpl
lcall
sub
ds
xchg
lock
mov
jmp
push
fldt
dec
and
xor
lods
push
sub
scas
repz
out
push
and
bound
adc
sbb
mov
or
push
mov
sahf
les
mov
dec
mov
mov
dec
sub
lret
enter
mov
cld
push
and
lret
stos
sahf
xchg
loope
gs
lret
int3
gs
in
in
sub
pop
outsl
jmp
xchg
dec
lods
and
inc
xor
mov
fidivs
pop
mov
out
ss
adc
les
inc
xchg
mov
mov
sbb
in
push
aad
je
jecxz
jle
adcl
adc
pop
sarb
arpl
es
xchg
sub
pop
adc
lds
push
iret
sub
add
out
int
loop
mov
inc
mov
insb
mov
mov
add
pop
jg
arpl
and
xchg
xlat
js
inc
adc
addl
dec
xor
xchg
mov
add
test
js
or
mov
inc
ffreep
in
lahf
or
js
int
fnsave
xchg
sbb
dec
shl
mov
jnp
cmp
incl
mov
adc
sbb
sbbl
stos
mov
lcall
jg
sbb
adc
mov
jnp
pop
data16
add
ja
push
jb
mov
xchg
cltd
xchg
mov
pop
add
popa
mov
pop
cmpsb
mov
sub
pop
inc
lea
adc
movsb
daa
cwtl
fnsave
shll
pop
lret
mov
and
xchg
repz
push
xchg
mov
jge
ret
icebp
or
lock
or
icebp
add
dec
scas
arpl
outsl
xlat
jnp
adc
cltd
jp
jle
mov
stc
cmp
cmovle
lret
sub
adcb
loop
or
out
pop
jp
cmp
xor
inc
cmp
or
fbld
xor
out
lods
xor
jecxz
bound
loop
xchg
cli
mov
cmp
mov
cmp
imul
push
fistps
loop
mov
lret
sub
push
or
or
or
cmc
dec
inc
dec
lret
inc
mov
mov
fwait
call
push
call
jge
push
sbb
push
out
add
std
out
pop
jno
push
xor
adc
inc
pop
imul
lods
pop
aas
loopne
jb
in
or
push
nop
daa
xor
xor
inc
es
add
outsl
in
shlb
js
sbb
cmpsl
bound
outsb
aam
push
scas
aaa
xchg
repz
or
sahf
jo
fisttps
andl
push
pop
jge
xchg
ja
imul
mov
stc
adc
or
adc
inc
gs
js
movsl
lret
test
jle
cmpsl
xor
cmpsl
jmp
ja
outsl
lock
mov
lcall
loop
mov
lods
mov
and
cmpsb
and
mov
test
repz
sbb
push
leave
xchg
mov
iret
sbb
mov
or
lahf
mov
lock
adc
scas
sbbl
xlat
cli
or
aas
jno
cmp
stos
dec
xchg
jmp
pop
popf
push
jge
call
jo
xchg
or
inc
ret
and
sbb
sbb
inc
cmpsb
xor
adc
inc
jge
inc
sbb
popa
stc
xor
out
mov
lock
push
push
sub
ret
mov
push
nop
mov
das
add
sbb
adcl
pusha
inc
out
adc
xor
imul
pop
fstps
push
xchg
jle
test
pop
scas
sti
push
pop
dec
test
into
scas
fmul
jbe
add
aaa
aad
push
sti
mov
inc
or
sub
pop
stos
jmp
push
cltd
sti
cmp
sbb
loop
push
mov
mov
movsb
sbb
inc
in
loopne
in
adc
ljmp
push
xor
inc
fsubrp
sbb
lods
lock
inc
dec
mov
andl
scas
inc
sub
xlat
aaa
fists
jnp
mov
dec
mov
sbb
test
ds
jb
test
out
stc
jne
xorb
and
imul
stos
push
les
dec
movsl
popa
xchg
cmpsl
insl
jb
stc
test
adc
aad
sbb
out
pop
cmp
ss
jge
lcall
fidivs
jae
xor
out
pop
iret
lds
xor
pop
repz
inc
adc
std
mov
xchg
fbld
icebp
ficoml
daa
sahf
dec
dec
cmc
mov
cmp
int
mov
in
sub
popa
jg
inc
aad
cmpl
leave
addb
pop
test
decb
cli
pop
scas
sbb
jns
jl
xchg
and
push
jne,pn
push
dec
xor
daa
aam
mov
lret
pop
les
fucomi
mov
and
push
xorb
pushf
jge
cmp
gs
inc
lret
insl
je
and
push
mov
aam
sar
jae
pop
test
mov
add
loope
cmp
sbb
aas
push
test
xchg
leave
or
pop
mov
adc
daa
lds
js
pop
xor
cmp
rorl
mov
popa
sub
mov
pushf
je
cmpsb
rclb
es
lock
sub
mov
mov
jbe
mov
les
and
sub
test
xchg
adc
mov
and
jmp
ja
mov
outsl
xchg
fiaddl
fsubrp
pop
mov
les
cwtl
mov
aaa
inc
loopne
lds
imul
shll
mov
add
jns
inc
inc
js
call
cmc
dec
inc
ret
gs
sub
mov
js
loop
xchg
incb
fisubrs
inc
cmp
gs
mov
popf
addr16
pushf
cltd
mov
aam
sbb
sub
or
dec
lcall
pushf
repnz
add
stos
xor
mov
cwtl
shrl
mov
mov
and
jnp
inc
aam
and
dec
fs
aad
push
mov
cli
jo
mov
sub
push
test
xchg
xchg
lret
iret
leave
stos
mov
mov
sbbb
xor
in
sub
mov
cmpsb
push
push
pop
pop
sbb
test
pop
sbb
adc
insl
lock
xor
scas
cmpl
je
mov
push
es
cmc
pusha
divb
fcompl
mov
mov
addr16
and
lret
dec
sub
out
jb
test
adc
das
je
jb
pop
dec
mov
jl
inc
or
test
ret
aaa
xor
jb
dec
mov
add
adc
repnz
pop
popf
xchg
xchg
xlat
sub
je
jne
aam
dec
push
out
test
mov
or
rcrb
ror
xchg
or
aaa
out
repz
arpl
push
xchg
or
stos
lret
mov
and
or
sub
pusha
fs
pop
and
mov
adc
inc
stos
push
shll
xor
out
inc
mov
popa
mov
stos
jns
dec
aam
mov
das
sahf
jnp
rolb
sbb
das
cmc
jg
adc
gs
xor
test
and
ds
dec
push
jo
add
add
fstpt
push
inc
mov
mov
lds
lds
in
mov
lahf
cmp
or
rcl
mov
mov
cmp
pop
pop
minps
data16
mov
pusha
or
iret
jae
cmp
push
xchg
daa
cmp
sahf
cmp
pop
push
push
sub
mov
mov
pop
jb
sub
idivb
add
push
mov
aad
out
pop
or
push
insl
push
and
cmpps
cmp
pop
lret
into
stc
push
and
filds
inc
into
dec
enter
out
das
adc
sbb
or
int
push
push
lods
inc
cld
mov
les
push
xor
icebp
sbb
outsl
fbld
or
or
xchg
and
push
inc
loop
jnp
ret
xchg
fwait
mov
xchg
scas
adc
loope
adc
call
inc
dec
jge
pop
jbe
test
sbb
sub
and
xor
daa
cltd
fs
fisubrl
inc
test
rorl
faddl
push
cmpl
or
push
repnz
idiv
add
push
lret
iret
scas
xlat
movsl
ret
arpl
inc
cmp
repnz
ljmp
mov
dec
lea
jecxz
xchg
xchg
lret
push
sarl
popl
push
sti
jmp
lock
imul
dec
sub
ss
pushf
pop
add
add
int
pop
subb
adc
idiv
push
mov
out
jno
pushf
mov
inc
xor
iret
add
aam
setno
negl
and
subb
in
inc
dec
add
into
cmc
fs
lahf
mov
inc
push
inc
out
cmpsb
push
xlat
lods
aam
lea
jmp
les
xor
out
aaa
in
ret
push
mov
cwtl
repnz
scas
pop
outsl
sti
test
arpl
sub
shl
ret
pop
fiaddl
xchg
imull
lods
jge
clc
sub
jae
or
outsl
rol
inc
pop
into
jp
fidivs
mov
xlat
les
imul
stc
mov
dec
jne
in
test
test
adc
dec
bound
gs
daa
or
and
popf
call
stos
imul
mov
repz
sbb
bound
cmpsl
popf
xor
rorb
imull
imul
mov
adc
push
call
cmp
cli
sub
xor
pop
enter
test
leave
cmp
pusha
cwtl
add
js
jl
and
pop
add
add
and
popa
jo
mov
push
sub
and
jmp
mov
in
jns
jmp
add
fwait
movsl
repz
mov
jecxz
add
fs
repz
mov
xor
cmp
clc
mov
stos
aaa
ret
xor
lock
mov
cld
xor
int3
call
dec
pop
dec
cmp
mov
cld
sbb
or
add
rolb
lds
mov
mov
pop
xor
dec
and
xor
gs
dec
or
testl
and
inc
sti
xchg
addr16
je
and
cmc
mov
test
dec
pop
hlt
add
xor
sbb
das
stos
leave
incl
lret
repz
inc
mov
push
cmc
jp
cmpsb
add
sub
lods
cmpsb
test
popf
fld
or
jno
sbb
push
icebp
push
sub
lea
pop
pop
lret
mov
adc
stc
and
cmpsb
inc
sahf
jne
cmp
jp
mov
gs
sbb
test
cmp
aas
mov
data16
sahf
jp
insl
xchg
pop
jle
testl
xlat
or
push
popa
test
push
add
fptan
xchg
mov
push
enter
lock
movsl
aad
xchg
arpl
movsb
stc
les
ror
sbb
movsl
insb
std
xchg
imul
std
test
push
add
fucom
mov
xor
xchg
popf
jg
push
cwtl
pop
imul
inc
jmp
xlat
and
shlb
std
das
xchg
mov
adc
outsb
push
dec
inc
or
xor
loop
mov
ror
and
pop
icebp
shrl
imul
bound
jb
stos
imul
pusha
stc
loop
leave
xchg
iret
out
mov
insb
add
mov
xor
xor
inc
jns
icebp
mov
fldcw
adc
mov
xor
lcall
adc
xor
mov
cld
xchg
aam
shlb
int
mov
mul
mov
xorb
stc
loopne
jp
aad
int3
jnp
mov
cmp
int
fsubrl
in
xlat
inc
cmp
imul
int
aad
lods
imul
lret
movsl
std
push
xor
push
push
or
cs
push
mov
in
adc
popf
aas
adc
daa
jbe
push
mov
cwtl
xchg
cmp
jns
cmc
inc
cmp
popf
or
add
movsb
loope
lods
pushf
or
add
repz
rorl
inc
xor
cltd
xlat
nop
adc
and
and
mov
jmp
enter
mov
sub
adc
inc
mov
sbb
inc
and
int
inc
xchg
ficoms
xor
xchg
mov
xchg
xor
dec
lcall
pop
arpl
mov
cld
and
loop
pop
mov
stos
cli
add
popa
fldl
dec
and
add
leave
mov
into
and
cld
sub
sub
js
out
cmp
xor
cmp
sbb
inc
outsl
jp
and
or
mov
inc
pop
aaa
cmp
out
in
cmp
mov
adc
jae
pop
movsl
imulb
test
push
out
lcall
test
movntps
shr
mov
inc
jp
add
test
scas
dec
sti
xchg
rcrb
js
and
sbb
jo
sbb
mov
cmp
mov
pop
push
push
mov
hlt
fisubrs
mov
inc
sti
mov
loope
and
and
jle
jp
mov
inc
mull
mov
or
js
jnp
jl
add
daa
or
inc
sub
inc
imul
cmpsl
ja
dec
ljmp
imul
lods
dec
ss
sbb
cltd
sbb
mov
and
iret
dec
cli
roll
das
out
clc
stos
cmpsb
dec
inc
add
dec
mov
repz
lods
inc
sbb
mov
mov
scas
mov
xor
or
lods
and
pusha
xchg
cmp
loope
sbb
stos
es
sub
mov
add
inc
or
mov
int3
jmp
out
xlat
xchg
pop
imul
andl
insl
jnp
push
fdivr
xchg
js
stc
pushf
push
out
pop
fisubs
push
enter
jno
pop
mov
xor
pop
adc
xchg
outsl
push
rolb
pop
stc
out
out
out
roll
enter
aas
add
enter
and
rorl
push
jae
mov
adc
pop
push
push
and
fcoml
pop
iret
stc
push
pusha
push
cltd
in
rclb
cmp
mov
dec
xchg
jno
ja
mov
push
xor
and
mov
xor
or
test
bswap
pop
mov
cmpb
in
adc
and
mov
out
cltd
stc
xor
loopne
mov
and
into
ret
lcall
and
stos
pop
jecxz
insl
pop
lret
pop
stc
pop
sub
call
pop
mov
xor
jg
js
gs
stos
dec
lret
repz
aas
movsl
dec
push
push
push
adc
jmp
push
mov
out
push
cmp
rorl
mov
sahf
outsl
lds
push
rcrb
scas
cmp
and
dec
sub
sarb
xlat
test
out
cmp
das
lea
xchg
call
sbb
subb
negb
repz
leave
adc
outsl
mov
stos
icebp
mov
not
fcompl
jo
bts
inc
pop
sub
out
cmpsb
adc
jp
dec
rorl
call
adc
sbb
and
shlb
pop
jp
push
or
jo
dec
push
cmp
sub
leave
sbb
test
adc
sub
or
sbb
outsl
mov
mov
das
insl
jne
lcall
lahf
movsl
stc
test
mov
pop
lret
gs
in
sbb
mov
out
rcll
xchg
lods
pop
mov
std
outsl
mov
xor
je
jecxz
xchg
mov
jbe
jno
rolb
pop
repz
test
mov
data16
push
xchg
jne
add
fiadds
pop
dec
xchg
je
outsb
dec
xor
outsl
rcr
dec
jne
addr16
stos
push
scas
mov
loop
aas
les
nop
mov
test
arpl
enter
in
hlt
sub
xchg
aam
daa
cli
mov
shl
or
test
push
lods
nop
adc
adc
mov
pop
mov
adc
aas
arpl
pop
out
cmp
xor
out
push
fnsave
sub
push
cmpsb
out
jb
cli
insb
dec
adc
pushf
shl
nop
inc
jnp
and
stos
push
lret
test
fildl
lods
sub
lahf
lret
mov
mov
adc
js
pop
mov
dec
pusha
cmp
or
lret
mov
jecxz
inc
xor
sbb
sbb
sbb
push
test
inc
pop
inc
or
push
inc
sbb
xor
cmp
rolb
push
fnstsw
pop
sub
adc
and
nop
iret
push
hlt
imul
push
movsl
fdivl
mov
cmp
fsub
and
std
mov
mov
and
in
jp
loope
lret
lock
out
sub
fnstsw
loopne
jmp
sbb
test
jecxz
sahf
dec
int
push
mov
xchg
addr16
jnp
and
out
dec
fyl2xp1
push
int3
mov
cmp
inc
pop
out
xchg
sbbl
test
sub
xchg
or
cmpsb
loop
pusha
add
mov
add
inc
outsb
aam
decl
sub
ljmp
lret
push
sub
mov
xor
push
inc
xor
or
push
push
pop
mov
xor
mov
leave
scas
fimuls
and
cmpsb
lahf
ret
lds
fwait
rclb
daa
iret
mov
mov
clc
es
xchg
push
cs
inc
hlt
xchg
mov
and
sub
cmp
in
xchg
das
aas
insl
and
insb
stc
gs
adc
dec
cmpl
data16
mov
lock
gs
cli
sbb
lods
test
jle
ljmp
jno
adc
shrl
push
or
sbb
mov
mov
jbe
xor
inc
and
sbb
push
testb
and
xor
push
insl
lret
mov
pop
mov
aas
add
or
test
cmpb
xor
cli
jecxz
mov
in
adc
loopne
push
mov
fs
aaa
lods
mov
push
addr16
lret
jecxz
adc
and
mov
pop
add
push
aaa
mov
add
xor
inc
sbb
int
cmpsb
aaa
aam
jle
xchg
mov
stos
repnz
test
leave
fcomi
pop
loope
fstp
adc
push
std
adc
dec
pop
flds
ret
aam
xchg
or
lock
push
nop
mov
out
mov
insb
xchg
mov
mov
sbb
sbbl
add
push
stc
dec
jno
pop
lods
jno
mov
pusha
mov
repnz
insl
push
repnz
inc
movsb
sub
dec
ljmp
dec
xchg
cmp
fwait
sahf
std
jo
mov
clc
inc
mov
ret
int
jnp
push
aad
mov
stos
and
hlt
push
push
push
insl
fimull
sub
jl
call
lds
xchg
sub
sub
xor
stos
mov
sub
and
dec
pop
or
jge
out
ret
pop
xchg
mov
lock
mov
jae
cmp
out
mov
pop
leave
pushf
cwtl
adc
leave
sbb
jle
mov
inc
and
gs
add
or
sbb
mov
out
xor
mov
cmp
inc
dec
or
pop
imul
dec
pop
shrb
pop
add
inc
mov
ret
push
mov
cwtl
xchg
cmpsb
shrb
in
test
mov
xchg
sub
xlat
ljmp
and
aaa
cmp
add
int
call
pop
rorb
cmp
popa
ja
cmpsb
addl
clc
jge
aam
pop
push
and
popf
test
lock
loope
xor
aaa
repnz
test
xchg
xor
rcl
mov
pushf
cmpsb
repz
outsb
hlt
iret
push
mov
mov
jecxz
sbb
pop
jecxz
bound
xor
and
aam
xchg
pushf
in
outsl
ret
pusha
addr16
testl
pop
push
push
fbld
pop
scas
mov
addr16
movsl
aam
mov
in
pop
push
sbb
bound
xchg
or
cmp
pop
sbb
std
dec
aas
cmp
das
push
add
lret
std
xor
repz
push
out
mov
cltd
pusha
pushf
push
mov
lods
mov
movsb
xchg
mov
mov
into
dec
inc
xchg
mov
push
icebp
lods
ljmp
test
repnz
push
pop
adc
add
hlt
rcr
je
push
ret
xor
jbe
mov
mov
add
xor
test
pop
mov
cmp
cmp
fldt
push
stc
rolb
in
out
aaa
std
fnstcw
push
mov
lret
inc
dec
xor
sahf
mov
int3
repnz
cwtl
cmp
stos
push
mov
call
jns
sub
dec
aas
jmp
xor
mov
jp
add
nop
stos
or
jns
pusha
aaa
cmp
iret
hlt
sbb
rcrb
push
jg
jo
xor
les
push
jle
pusha
sub
es
div
mov
aad
bound
cvtps2pd
testl
mov
outsb
repz
xchg
gs
lods
aam
pusha
stos
jb
aam
adc
push
insb
adc
sbb
addr16
inc
leave
jno
les
rol
into
xor
push
aad
pop
sub
push
ds
dec
add
stos
cmp
fisubl
sti
push
pop
jge
dec
outsl
mov
addr16
xchg
pop
dec
mov
inc
ss
lods
ja
pop
dec
nop
stos
inc
or
pop
mov
sub
fsubl
fisubl
or
jne
cmp
out
mov
scas
dec
ja
pushf
sub
sbb
add
xchg
pop
adc
leave
and
nop
jb
test
fs
cmpsb
lcall
mov
cs
repnz
inc
out
call
pop
rclb
mov
add
in
mov
js
mov
push
fs
adc
ja
imul
or
hlt
je
xchg
fbstp
inc
imul
jecxz
stos
fildl
jg
sbb
jnp
loopne
mov
sahf
lret
cli
xor
inc
iret
popf
jp
jle
xor
popf
dec
sbb
sub
inc
or
ljmp
ja
cld
cmp
adc
jno
jmp
and
jae
lret
fcoml
sbb
insb
lea
pop
test
xor
jl
add
test
lret
mov
scas
mov
pop
xor
sub
jg
imul
pop
inc
cltd
ret
xor
push
sbb
cltd
jnp,pt
fdivl
xor
loope
xor
testl
xlat
mov
cmp
sbb
sbb
dec
push
mov
adc
icebp
leave
aam
icebp
mov
push
insl
and
sbb
pop
in
cmp
stos
mov
frstor
inc
movsl
mov
lahf
xor
dec
lock
mov
jo
xlat
sub
jbe
lret
cmp
inc
mov
test
dec
dec
insl
lret
sbb
push
test
pusha
and
jno
jae
test
and
adc
rol
mov
lahf
inc
pop
and
add
push
sbb
popa
adc
cmp
test
lods
scas
les
cltd
cmp
push
ljmp
mov
jbe,pn
lcall
and
icebp
stc
sub
enter
nop
mov
test
dec
pop
push
test
sbb
mov
adc
cmp
cltd
mov
inc
out
int3
sbbl
inc
push
ljmp
sub
pop
mov
loope
and
jle
cltd
mov
test
mov
movsl
push
xor
push
lcall
loope
fadds
pop
jne
mov
xchg
enter
out
mov
pop
fisttpll
cmp
jmp
mov
push
js
loop
inc
inc
mov
test
aad
scas
cltd
leave
mov
verw
lock
insb
sbb
or
mov
pop
inc
sub
lret
leave
jo
jo
shrb
in
jle
or
movsb
or
push
dec
clc
loope
imull
mov
iret
jmp
in
shl
inc
add
lcall
cmc
loope
mov
pop
push
pop
or
dec
shrb
pop
mov
push
add
mov
daa
sti
das
jns
cmp
pop
movsb
arpl
lea
movsb
and
fmull
xchg
jnp
mov
or
sub
enter
adc
adc
jg
sub
fstpl
push
lea
movsl
jge
fisubrl
cmp
leave
jmp
ljmp
push
leave
adc
add
jbe
pop
paddusw
push
xor
pop
jl
adc
jg
aas
jo
xor
lcall
mov
jnp
jo
push
mov
cli
mov
lcall
andl
xchg
add
in
into
out
mov
aas
jbe
xor
xlat
arpl
es
mov
inc
subl
das
addr16
adc
outsb
lahf
push
fwait
cmp
repz
pop
aaa
lock
rorl
push
add
push
adc
push
mov
pop
xchg
aas
mov
movsb
push
pop
cmpsb
rcrl
js
jmp
int
inc
sbb
cmpsl
dec
pop
jno
inc
insl
and
addb
sbb
inc
xchg
cmp
xor
fidivs
xor
mov
lods
loope
xchg
sti
mull
xchg
fistpl
movsl
xchg
js
loopne
call
dec
jmp
in
jecxz
imul
loop
stos
ret
xchg
mov
fwait
jecxz
push
or
sub
add
or
xchg
pop
movsb
xor
pop
cmpsb
mov
pop
mov
adc
mov
mov
imul
pushf
mov
test
mov
lea
sbb
mov
ret
or
fcoml
push
xor
aad
or
in
sub
in
xchg
push
shrb
and
xor
rcrb
jmp
jns
incb
add
cli
gs
push
jne
jns
and
scas
mov
cmp
push
adc
enter
stos
xor
nop
xor
int
cmpsb
or
push
jle
movsb
out
sbb
ja
inc
in
pop
dec
mov
push
subb
lock
outsl
pop
xlat
sub
push
push
push
push
pop
aad
notb
pop
in
frstor
adc
rcrl
mov
or
cmpsb
cltd
in
scas
push
mov
jp
jae
psrad
mov
lcall
lret
sub
lcall
mov
jnp
addb
xlat
call
xchg
and
dec
shrb
sub
imul
push
and
inc
dec
adc
je
rcrb
xor
shll
sub
das
outsl
test
mov
shlb
mov
mov
mov
addl
fwait
lahf
mov
adc
jg
or
pushf
mov
enter
sbb
xor
sbb
sub
jo
andl
sbb
ljmp
sub
shll
mov
pop
push
shll
fwait
popf
adc
dec
inc
jg
push
push
movsl
int3
add
mov
xlat
xor
loop
in
xor
xchg
dec
xchg
sti
daa
jno
imul
xchg
sahf
dec
xchg
das
inc
pop
movsb
hlt
mov
mov
cwtl
popf
and
xor
push
dec
add
mov
and
int3
or
dec
fildll
scas
stc
lods
adc
test
movsl
adc
test
xchg
push
and
xchg
jae
lods
cmp
sub
and
nop
mov
adc
mov
push
sub
prefetchnta
popf
cmp
push
stos
lahf
mov
mov
inc
jbe
loop
dec
in
jns
lods
or
test
mov
mov
movl
iret
imul
fdivrl
orb
lcall
sti
jl
adc
jl
inc
push
and
iret
roll
push
stos
cwtl
je
inc
xchg
xor
adc
ss
mov
mov
xchg
adc
pop
aas
subb
sbb
jo
inc
pop
add
shlb
dec
cli
pop
mov
inc
add
and
sub
popa
insb
jmp
push
pop
cmc
pop
inc
fwait
pop
sub
mov
and
jmp
ss
loopne
adc
add
icebp
sub
cmp
in
in
iret
rcr
push
div
cmp
out
std
pop
push
xor
jg
ss
sub
pushf
lret
insl
mov
xor
jp
dec
push
add
sti
pop
cmp
jo
mov
shrl
dec
sti
adc
and
loop
xor
and
in
aas
inc
movsb
test
xor
scas
in
or
out
ss
mov
fcom
jp
idiv
mov
lret
push
xor
inc
push
push
xchg
mov
sub
mov
fwait
xchg
sti
adc
sti
or
or
fsubrs
test
shl
jo
mov
cmp
out
loop
mov
test
push
in
scas
nop
fdivp
les
test
xor
fnstenv
mov
loop
mov
fwait
in
mov
sub
daa
pop
pop
mov
xchg
pop
mov
adc
and
loope
push
out
mov
mov
out
inc
roll
jmp
shlb
adc
mov
in
cmc
mov
shl
mov
push
or
pop
jecxz
scas
xchg
push
mov
xchg
mov
orl
mov
cmp
mov
sub
stc
and
and
xor
mov
push
xchg
dec
je
sbb
js
cltd
inc
pop
mov
dec
gs
cmp
icebp
gs
pop
test
jb
push
mov
cmp
adc
cmp
adc
mov
sub
andl
subb
cli
dec
jp
fnstsw
repz
mov
sub
xchg
mov
cs
lods
pop
lahf
cmp
cltd
mov
in
jb
lods
xchg
sub
adc
sbb
int
pop
lea
lods
mov
cmpb
movsl
xor
mov
aam
xchg
add
int3
pop
insl
andl
dec
mov
mov
mov
aad
pusha
int3
cmp
jnp
mov
es
pusha
adc
insl
push
mov
mov
movsb
pop
inc
orb
js
shl
or
push
adc
and
popa
stc
in
add
lods
pop
ljmp
fwait
add
pop
mov
adc
lret
dec
stos
enter
jae
lock
icebp
cmp
and
repnz
cmp
dec
inc
notl
inc
pushf
in
xor
div
push
sti
mov
lret
pop
add
js
xchg
jp
repz
test
push
push
add
cmc
repz
sti
mov
xchg
sub
mov
mov
xchg
add
std
pop
cld
and
pop
pcmpeqb
cwtl
pop
lcall
divb
dec
cmpsl
adc
sti
xchg
bound
pop
mov
lds
jg
mov
mov
repnz
mov
fcomps
loop
in
pop
push
jecxz
jo
pop
pusha
mov
adc
mov
or
sbb
imul
inc
mov
mov
pop
shll
and
test
stos
mov
ja
cmp
and
and
lods
sbb
mov
xchg
cmp
push
push
cli
cmp
jecxz
int
mov
and
and
leave
nop
jae
movsb
xor
pop
sbb
push
xchg
in
and
adc
sbb
add
cmc
sbb
movsb
push
movsl
into
jne
loope
sub
xchg
mov
jo
cmp
int3
pushf
jno
or
inc
in
cli
les
push
mov
hlt
imul
les
insl
xchg
and
into
pop
out
fcoml
inc
movsb
cmp
push
mov
jb
sub
subb
jle
mov
xor
cmpl
lahf
dec
pop
js
lods
cmp
icebp
div
xchg
mov
sbb
loop
js
gs
or
inc
cmp
flds
mov
rorb
mov
jne
jl
mov
cli
out
cmc
cmp
insb
lods
pop
pop
fcmovnbe
and
jg
xchg
ret
xchg
or
popf
outsl
fwait
insb
in
lret
push
add
ret
data16
cmpsl
imul
mov
jbe
and
inc
jl
or
sbb
jmp
push
mov
repnz
jmp
jg
cmc
sub
xor
pop
dec
jns
in
outsl
dec
shlb
sub
or
add
add
inc
mov
imull
repnz
lcall
cmp
add
out
fildl
lahf
sarl
rorb
mov
cmpsb
jle
jg
adc
push
jp
lret
jb
out
mov
orl
dec
ljmp
dec
fcomps
test
cwtl
imul
push
inc
adc
cmpsb
xchg
xor
sarb
adc
notb
jmp
or
dec
popf
xchg
jne
out
incb
nop
pop
repz
mov
out
cmc
dec
cmp
shrb
sub
outsb
outsl
adc
mov
jo
mov
xor
in
mov
dec
testl
cwtl
stc
cmpsl
jle
push
dec
pop
adc
mov
xchg
xchg
inc
sti
ss
sbb
xchg
xor
inc
pextrw
push
cmc
lahf
ss
popa
jns
imul
and
jb
js
fisubrl
int
pop
fisttpll
mov
sbb
roll
and
and
mov
xchg
pop
and
jno
xlat
in
jno
xor
movsl
enter
jo
aam
imul
cltd
jbe
sbb
std
sub
dec
sbb
mov
jno
push
jo
popa
jo
pop
je
xor
fmulp
pop
ljmp
int
jnp
xchg
inc
cmp
stos
data16
sbb
mov
scas
mov
mov
push
arpl
je
hlt
dec
aas
xchg
mov
ja
inc
int3
fnsave
inc
gs
mov
xor
scas
jmp
cli
cmp
add
int3
test
rorl
add
jp
mov
mov
add
popf
adc
nop
push
cmpsl
push
test
fsubl
or
mov
add
dec
push
xor
stos
push
ret
cmp
das
sbb
mov
test
push
mov
in
cmp
pop
sbb
or
fcmovne
mov
cmp
jl
pop
pop
flds
jnp
mov
mov
push
push
orb
test
movsb
push
fs
addl
imulb
sbbb
cmp
xor
test
mov
aad
aaa
in
test
jbe
cmpl
das
pop
scas
lret
pop
dec
dec
xor
push
in
in
test
loope
mov
jae
pop
je
dec
je
jmp
shl
add
jecxz
sti
and
fs
pushf
cmc
loope
mov
xchg
testl
push
pop
inc
and
leave
fwait
rolb
adc
add
pushl
mov
xchg
das
dec
mov
sub
scas
cltd
push
ljmp
je
xchg
xchg
pop
test
or
push
jo
adc
mov
inc
adc
scas
inc
adc
pushf
mov
test
scas
add
adc
push
cwtl
fidivrl
and
inc
or
pop
push
push
cmp
mov
pop
mov
dec
loopne
pop
das
aaa
push
stos
mov
pop
xchg
inc
xor
fwait
add
pop
inc
mov
imul
pop
stc
xor
push
cmp
jg
mov
xchg
mov
mov
loop
loopne
mov
je
add
cmp
inc
fnstcw
inc
jns
pushf
inc
xchg
add
stos
das
push
cltd
out
cwtl
popa
sarb
stc
incb
jmp
push
divb
cmc
ret
push
xor
pop
or
and
scas
inc
shlb
adc
push
push
or
pop
dec
adc
mov
jbe
fldcw
xor
push
and
xchg
push
fs
aam
mov
dec
and
dec
ret
movsl
cmp
dec
leave
add
hlt
js
jle
sub
add
lods
ret
xor
sbb
sbb
mov
movl
roll
push
and
lods
xor
test
cmpsl
lods
cmp
sub
lods
into
lcall
inc
jg
push
shrl
sbb
pushl
xchg
mov
cwtl
in
push
mov
inc
insl
rcll
arpl
mov
jo
pusha
stc
xor
mov
loopne
jbe
outsb
dec
into
mov
setge
ds
push
int3
mov
les
inc
mov
sub
or
dec
jb
ja
adc
jns
pusha
sub
push
mov
xorl
aas
inc
lea
mov
jae
jmp
das
fwait
add
test
or
and
aam
mov
sahf
cltd
je
and
push
xor
or
fdivr
mov
stc
scas
out
xchg
mov
arpl
mov
jecxz
dec
mov
ljmp
ljmp
ret
jge
push
sbb
add
test
add
push
adcb
jne
xor
stos
out
sti
adc
xchg
add
in
insl
fcmovnb
imul
and
push
stc
dec
call
jnp
mov
in
ds
xor
popa
mov
xchg
js
out
jle
testl
hlt
imul
and
je
fs
lods
mov
cmpsl
test
cwtl
mov
mov
repnz
xor
inc
push
repnz
lods
imul
xorb
or
in
xor
shrb
dec
rcrl
xchg
gs
cmp
popf
nop
mov
inc
sbbl
jp
mov
mov
cltd
jge
in
js
jb
xchg
popa
or
push
add
aam
div
pop
popf
fcmove
inc
mov
push
lods
fmuls
cmp
insb
pop
dec
in
dec
and
sti
in
mov
push
xchg
aaa
mov
pop
dec
sub
adc
mov
inc
xchg
mov
psubw
and
push
iret
pop
pop
mov
repz
cli
sub
cli
inc
mov
fdivl
mov
stos
pop
or
adc
jl
sub
xor
push
mov
sbb
cmpb
mov
rcr
cmp
adc
fwait
mov
fsubs
nop
or
sub
pop
out
imul
or
loopne
cmp
stos
push
or
mov
test
sbb
ret
mov
rcll
sbb
outsl
mov
lret
mov
sti
xor
xlat
aad
mov
sarb
es
int
mov
mov
and
mov
jg
or
mov
jnp
decb
pop
je
xchg
jne
fisubrl
jl
mov
out
cs
rcl
inc
dec
push
xlat
imul
scas
mov
xor
out
or
inc
testl
iret
call
in
and
jge
sahf
std
cld
imul
pop
add
pop
daa
scas
jne
leave
dec
shll
mov
push
xchg
pop
xor
add
test
jo
dec
incl
test
adc
das
clc
int
cwtl
ja
enter
adc
enter
lea
mov
or
xor
or
mov
lahf
pop
sub
fldenv
repnz
lods
and
pop
push
rol
mov
mov
rol
cltd
dec
pop
and
or
push
in
pop
xor
cmpsl
push
pop
ja
stc
push
jo
fiaddl
pop
and
or
jb
fnsave
mov
add
mov
add
loope
xchg
sub
pop
pop
push
xchg
test
imulb
jge
test
mov
mov
mov
push
dec
push
mov
das
xchg
xlat
adcl
mov
xchg
pusha
mov
adc
dec
cmp
mov
mov
jg
lock
mov
filds
aad
inc
shlb
stos
mov
add
cwtl
xchg
sbb
mov
aas
inc
fdivs
cmp
loop
fst
imul
adc
cmp
int3
clc
test
push
mov
pop
cmp
dec
mov
shrb
inc
pop
cmp
popa
pop
push
cmpsl
test
inc
mov
fdivrl
dec
xchg
mov
sbb
dec
mov
adc
dec
jle
mov
adc
sub
jmp
fisubrl
in
mov
je
sti
xor
movsl
enter
inc
lods
sahf
sar
and
push
pushf
sti
aaa
sbb
frstor
cmpsb
lock
and
xchg
push
pusha
push
inc
pushf
push
cmp
fwait
aam
inc
pop
xor
mov
ljmp
shrb
adc
clc
lds
mov
hlt
insl
dec
pop
ret
adc
mov
jle
addr16
leave
movsl
sbb
cld
loope
adc
cmp
pop
dec
cmp
jno
mov
sbb
mov
or
mov
mov
xchg
pop
fiaddl
into
xor
inc
dec
mov
negb
jmp
and
imul
mov
daa
push
movsl
dec
mov
hlt
mov
sarl
push
lock
test
sbbl
mov
push
add
ss
int3
cvttps2pi
rorl
push
lock
add
and
jmp
adc
jns
pop
in
int3
das
out
sbb
in
mov
xchg
stc
or
add
cmp
leave
fisttpll
jmp
or
es
addl
insb
aas
xchg
mov
mov
mov
mov
or
scas
imul
idivl
push
shlb
dec
js
popa
dec
mov
insb
adc
in
inc
loope
mov
jae
fsts
ljmp
cs
in
mov
cmc
ss
cmp
sub
idivl
cmp
testb
stc
sub
dec
add
std
push
jp
sub
inc
iret
inc
js
cmp
add
sub
fisubl
mov
inc
pushf
call
popf
jmp
jle
mov
clc
js
dec
mov
in
js
sbb
js
xchg
and
pushf
mov
pop
add
adc
je
push
pop
imulb
xchg
cmp
scas
loopne
xchg
and
mov
faddp
jno
add
mov
xchg
icebp
mov
xchg
fcmovbe
xor
adc
into
xchg
rorb
sub
cmp
xor
fwait
inc
push
cltd
mov
xchg
pop
les
mov
adc
lods
and
sbb
mov
nop
dec
lods
cmp
into
mov
cmpsb
inc
and
call
lahf
mov
lret
les
inc
xor
sub
dec
insl
jle
inc
int
hlt
mov
fisttpl
mov
or
icebp
dec
dec
sarl
mov
or
or
lods
aaa
enter
mov
rcrl
pusha
orl
ret
xor
out
shlb
push
pop
push
call
je
sbb
mov
cwtl
and
sub
cwtl
es
push
jo
stos
xchg
ret
jnp
sbb
fldenv
inc
movsb
mov
scas
adc
lock
mov
cmp
and
ljmp
in
inc
scas
jne
xchg
mov
jae
sahf
stos
push
or
xor
push
lea
ret
mov
je
adc
or
cmp
add
sbb
jmp
lods
xchg
mov
mov
nop
jle
cmp
adc
iret
ja
call
das
fldl
xor
pop
sahf
push
jg
ret
mov
test
repz
adc
add
xor
adc
xchg
push
mov
push
mov
rcll
adc
mov
inc
sbbb
fwait
ret
arpl
xadd
fidivrs
ret
imul
or
sub
test
jb
cmp
dec
and
out
repnz
push
unpckhps
movsl
iret
test
push
test
in
jle
xor
sbbl
insb
push
add
fisubs
fstps
cld
add
mov
mov
test
ds
mov
inc
shl
movsb
cmpsl
xchg
enter
aad
mov
iret
sbb
push
hlt
in
data16
jb
pop
and
mov
out
lret
loopne
shl
pop
dec
sub
cmc
dec
xor
scas
cmp
dec
loop
nop
sbb
jl
jmp
mul
ficoms
icebp
idivl
sarl
cmp
jmp
pop
adc
pop
pushf
lahf
arpl
fwait
dec
sub
and
xor
pusha
dec
repnz
dec
jg
lods
pop
mov
fstpt
sbb
xor
lret
dec
mov
and
dec
lods
cmp
xchg
scas
iret
dec
ljmp
stos
icebp
pop
or
test
enter
mov
and
fstp
jnp
jmp
mov
mov
mov
fwait
adc
arpl
pop
mov
sbb
pushf
and
lahf
xchg
push
imul
stos
jmp
std
test
mov
jle
jnp
hlt
dec
lcall
iret
pusha
imul
cli
jge
push
pushl
cmpl
mov
in
stos
mov
mov
lret
bound
jmp
out
in
mov
adc
std
cs
rcl
jg
flds
out
idivb
popa
and
push
out
sbb
jbe
sbb
mov
mov
loopne
js
mov
xchg
popf
or
and
dec
testl
clc
push
or
jo
cmpsl
insb
jle
rorb
fldt
aaa
jl
add
inc
mov
cs
hlt
add
and
xchg
sub
push
cmpsb
mov
mov
add
pop
ret
ret
imulb
andl
or
mov
loopne
inc
cmp
xor
pop
out
mov
pop
outsb
dec
lods
mov
test
int
ror
mov
xor
mov
jg
mov
adc
mov
clc
imul
cld
ss
mov
int
movsb
rep
sbb
pop
jno
std
jge
jae
or
cmp
push
and
rcll
jnp
popa
pop
lods
or
inc
out
xchg
cmp
lret
and
ret
inc
nop
daa
xchg
push
sahf
scas
lods
adc
inc
pop
mov
ja
xor
stos
loopne
or
mov
out
jb
dec
inc
cmp
dec
cmpsb
leave
mov
aam
mulb
lahf
xor
or
xor
mov
cltd
imul
int3
and
out
mull
push
psubw
call
or
cld
mov
inc
fidivrs
inc
push
inc
adc
cmp
xchg
enter
ds
pop
dec
sahf
outsl
dec
pop
into
inc
inc
xchg
inc
loope
mov
add
call
mov
jne
mov
mov
loop
pop
adc
call
and
out
cmp
inc
xor
cltd
popf
jns
sbb
ret
inc
lock
faddp
fldcw
jecxz
mov
leave
jle
leave
lcall
movsb
mov
push
hlt
lods
arpl
das
pop
xor
mov
xor
push
gs
enter
mul
or
rclb
cs
test
lock
cld
sub
pop
idiv
shl
sub
imul
sbb
xchg
push
out
incl
push
cmp
sbb
cmp
shrl
shl
mov
out
dec
cmp
cmp
mov
sbb
push
mov
xchg
mov
out
add
xchg
pop
sub
jmp
out
aam
dec
mov
outsl
push
les
js
cmc
mov
jmp
test
test
sti
dec
xor
into
cmp
test
xchg
jne
adc
lahf
add
mov
sbb
pop
dec
dec
jne
mov
inc
test
pop
sub
cmp
sbb
mov
nop
mov
pop
sbb
jecxz
nop
in
jp
jo
arpl
rorl
daa
test
out
sti
pop
mov
add
xor
inc
dec
movsl
inc
andb
xchg
or
and
mov
add
leave
leave
cli
leave
test
pop
movsl
enter
daa
sbb
jno
ljmp
xchg
je
rclb
cs
out
out
and
nop
jno
and
sub
mov
mov
sub
std
test
cmp
jecxz
mov
and
add
popf
cltd
xor
in
iret
clc
push
xchg
clc
sub
sbb
push
ljmp
mov
mov
daa
push
push
cmpsl
es
jge
test
popf
seta
insb
cmpsl
adc
mov
out
out
mov
jl
int
gs
mov
xor
les
bnd
pop
mov
push
lahf
filds
in
cwtl
xorb
mov
dec
iret
pop
aaa
stos
popf
unpckhps
mov
cmpsb
adc
mov
aas
adc
add
daa
or
lea
or
stos
xchg
ja
push
mov
and
inc
pop
sub
or
jne
cmc
cwtl
ja
fistl
xor
aad
inc
inc
mov
jo
or
and
ret
push
pop
inc
outsl
pop
cli
cltd
inc
or
jle
mulb
test
cmpsb
jns
cmp
stc
or
dec
fstpt
test
rcl
mov
xchg
bound
in
or
int3
fsubr
dec
notb
movsb
and
dec
icebp
and
shrb
jnp
aad
sti
mov
inc
dec
mov
pop
cmpsl
sahf
mov
clc
fyl2xp1
pop
lret
aas
pop
dec
add
testl
and
shll
pop
or
icebp
jmp
jae
lcall
outsl
push
cmp
outsb
int3
les
out
sbb
push
insl
cmp
repnz
xchg
test
or
cld
adc
fists
dec
jecxz
mov
mov
and
fldt
fiaddl
notl
add
mov
cmpsl
pop
lds
jo
ljmp
imul
mulb
stc
jl
fcoml
sbb
aad
push
lcall
iret
insl
push
repnz
mov
lret
mov
in
pop
cld
arpl
addr16
jg
cmp
mov
xlat
sub
lods
sub
xchg
or
fmul
fisttpl
jmp
jl
lods
dec
lods
popa
mov
outsl
xchg
clc
insl
jmp
xor
iret
lds
mov
stos
jbe
les
sub
mov
sbb
adc
and
add
xchg
aad
xorl
popa
jnp
mov
testb
mov
pop
hlt
pop
inc
pushf
addb
decl
add
filds
imul
jl
test
sbb
pop
pop
sub
inc
jne
xchg
adc
mov
loopnew
lods
jg
pop
sub
fdivl
and
jae
stos
sbb
jge
jns
sub
and
rclb
rcl
iret
cwtl
icebp
out
out
test
add
xchg
bound
jmp
jno
popf
ljmp
sub
stc
movl
scas
add
mov
fwait
sub
out
inc
mov
jae
fnsave
in
out
and
adc
test
subl
or
jo
jmp
add
fmull
popa
inc
jl
je
ljmp
repnz
ret
sbb
movl
adcb
iret
inc
mov
in
pop
fdivrl
fidivl
pop
std
xor
fists
push
outsb
or
mov
cli
mov
xchg
ljmp
ds
in
push
loope
mov
sahf
add
out
pop
mov
sbb
repnz
cmp
shr
push
fisttpll
nop
push
xchg
andb
sub
js
iret
daa
and
sub
les
xor
inc
pop
pushaw
ljmp
aad
or
dec
hlt
xor
mov
inc
inc
pop
fimull
mov
jle
setbe
fwait
cmp
dec
in
in
sahf
adcl
xor
push
push
repnz
mov
xchg
mov
pop
rorb
aad
leave
inc
add
addr16
adc
pop
stos
or
addr16
jmp
test
xchg
dec
movsl
pop
dec
cmp
cmpsl
pop
add
or
hlt
push
pop
orb
iret
int
dec
inc
mov
imul
subb
mov
outsb
in
subb
inc
js
rcrb
pop
dec
arpl
aaa
add
mov
push
stos
je
pop
ret
xchg
outsl
stc
jo
inc
mov
add
movsb
inc
cmp
jbe
add
mov
push
mov
pop
jecxz
lods
int
inc
ret
int3
jmp
pop
and
addr16
fs
jbe
add
xchg
sbb
sbb
cmpsb
repnz
cmpsl
pop
sahf
inc
push
mov
dec
scas
cmc
xchg
insl
lods
mov
shll
aam
cmp
fsubs
pop
cmp
sarl
sub
testb
jb
mov
mov
aam
inc
das
loop
insb
and
cmpl
jno
fwait
dec
cli
or
push
mov
dec
push
cmp
aas
lret
fwait
lret
lcall
mov
lahf
mov
movsb
sub
or
jb
in
pop
cmpsl
fcoml
in
mov
jge
fisttps
jl
xor
ljmp
sub
int3
sbb
mov
scas
in
call
inc
lcall
shrl
pop
pcmpeqw
push
xchg
das
dec
and
arpl
adc
sarl
cwtl
ja
xchg
lret
rcrb
dec
clc
cmp
orl
leave
mov
pop
rcr
fildl
dec
insb
fistpll
sub
outsb
pop
mov
sahf
daa
sbb
jmp
das
sub
jg
movsb
xor
inc
aaa
inc
bound
in
out
ljmp
xchg
pop
xor
sbb
sub
scas
cmc
cltd
jmp
gs
sbbl
and
dec
fstpl
lret
rcl
mov
jmp
movb
imul
add
jg
clc
lret
test
or
test
cmp
and
sbb
ds
aas
adc
xor
mov
movsb
mov
and
fldln2
cmp
sub
cmpsb
outsl
cmpsb
jecxz
rcl
test
inc
jg
lahf
add
insl
in
loop
xchg
lods
popl
shll
xchg
shl
iret
xor
orb
push
out
push
clc
dec
push
xor
xchg
xlat
cmp
pusha
cmp
xlat
add
pop
push
and
push
add
and
jbe
fdiv
push
cmpxchg
xor
adc
jb
pop
mov
cli
jp
outsl
xchg
clc
xor
pop
stos
mov
sbb
loopne
mov
lret
jl
and
cmpsb
popf
incl
push
lahf
testl
sahf
inc
call
cmpsb
jbe
orl
and
add
add
mov
or
mov
add
adc
in
negb
jne
or
mov
mov
push
addr16
ja
mov
mov
dec
mov
cmpsb
mull
xchg
rclb
dec
mov
rcll
mov
push
cwtl
insl
xchg
aaa
adc
aaa
pop
xchg
cmc
push
and
orb
adc
fisubrs
ret
ss
inc
or
divl
pop
loop
inc
in
mov
jle
pop
movb
push
mov
sbb
add
aam
jmp
insb
pop
test
cwtl
push
and
and
icebp
and
xchg
ja
xchg
jnp
aas
fidivs
iret
mov
pusha
pop
push
lahf
or
out
push
out
sbb
ja
push
stos
loopne
repnz
test
mov
mov
push
cmp
sub
pop
xor
out
fisttpl
fs
test
cmp
stc
lahf
mov
adc
outsl
inc
mov
dec
mov
or
out
adc
mov
jae
add
fs
push
xor
sti
cmp
xor
repz
jge
xor
fs
push
inc
fwait
sti
test
push
cmp
notl
les
dec
push
sub
rcrl
sub
mov
fiaddl
jbe
insl
int3
in
sbb
aad
inc
push
popa
xlat
mov
outsb
arpl
mov
dec
jne
adc
mov
test
cs
jl
xlat
fst
push
int
aas
jns
std
ret
and
fsub
addr16
mov
jb
out
cltd
dec
dec
lds
mov
insl
cli
gs
ret
das
push
out
dec
stos
add
std
and
jmp
sub
mov
add
push
shl
inc
add
xor
cwtl
push
lods
add
ljmp
fs
cld
xor
add
adc
mov
jbe
in
xor
sbb
inc
pop
sub
shlb
mov
inc
aam
lds
pop
in
mov
add
popa
sub
bound
subps
push
out
xchg
test
leave
push
shll
ficompl
or
test
inc
mov
push
repz
mov
xlat
or
dec
shlb
push
cmp
fidivl
rcrl
adc
mov
and
mov
adc
push
in
jp
into
adc
repnz
in
out
push
mov
jno
inc
in
je
push
xchg
clc
dec
fsubr
in
scas
sbb
inc
xor
pusha
lcall
xchg
dec
jle
cmpb
ds
mov
pushf
sbb
pop
adc
mov
pop
loop
lods
mov
lods
scas
xchg
and
arpl
in
lods
cs
das
dec
stos
leave
div
pop
cmp
into
fidivrl
icebp
lea
sbbb
mov
mov
inc
pusha
mov
rorb
fisubl
cli
pop
incb
cli
das
mov
dec
imulb
test
xchg
inc
imul
adc
inc
nop
cltd
mov
lea
std
in
xchg
or
cmpsl
pop
shlb
pop
cmpsb
ret
mov
jmp
sbb
cli
pop
ja
cmpl
push
add
cmp
add
insb
pop
push
lcall
aaa
push
push
lret
sti
mov
mov
lods
cmp
test
sub
lock
pop
mov
xchg
ret
rolb
fdivrl
inc
push
int
add
push
sub
xchg
mov
sbbl
add
push
or
imul
lds
push
jae
add
sub
daa
rcrb
inc
push
jno
dec
aad
pop
inc
xorb
jbe
inc
iret
fisttpl
pop
insl
pushf
mov
orl
push
cmp
xchg
pop
mov
xor
ja
loop
mov
adc
insb
and
push
mov
movsl
xlat
mov
sub
push
or
adc
push
jne
cmc
decl
loop,pn
ret
jbe
popf
stos
dec
stos
hlt
mov
sub
and
lret
and
jne
mov
stc
dec
mov
fwait
in
xor
lea
push
xchg
outsb
repnz
cwtl
std
xor
sbb
rcl
insl
xlat
or
lret
daa
stos
mov
sub
push
notb
pushf
pop
in
pusha
sub
push
cmp
fs
and
push
jns
aam
rorl
repz
xor
or
cmp
cld
dec
or
movsb
inc
pop
dec
jne
inc
jmp
outsb
test
movsb
movsl
pop
and
lock
leave
xchg
push
ljmp
push
es
fucomp
aad
in
dec
iret
aaa
pop
insb
inc
pushf
test
lods
and
test
dec
into
cmp
mov
and
adc
into
insl
test
je
sbb
pop
filds
idivb
lea
jbe
lcall
fcmove
lods
stos
push
push
xchg
mov
das
sbb
push
addl
mov
lcall
addr16
sbb
cli
mov
mov
dec
les
into
in
ffree
mov
movsb
push
xchg
jecxz
sub
andl
cmp
sbb
les
leave
mov
movsb
add
xchg
divb
or
subl
and
sbb
ds
xchg
aad
lods
and
pop
mov
iret
lods
pop
cmpsb
outsb
out
test
outsb
stos
push
sub
push
mov
xor
and
das
pushf
inc
into
pop
ds
gs
std
xor
sub
add
inc
xchg
mov
jne
loope
bound
imul
sub
fisubrs
push
xchg
and
scas
or
out
pop
fcmove
adc
dec
adc
in
aad
dec
cmovns
in
das
cltd
push
cmc
inc
add
mov
shrb
dec
cmpb
or
in
xor
aam
push
cmp
jo
repnz
xchg
and
fwait
jae
pop
into
les
cmc
icebp
test
sbb
push
inc
sahf
stos
in
cli
adc
int3
fcomps
mov
adc
mov
ds
mov
jle
test
movsb
fidivs
leave
popl
dec
mov
add
cwtl
sbb
lret
lods
movsb
ret
nop
lds
pop
cmpsb
das
xor
adc
pop
rcr
lret
repz
jle
outsb
adc
lock
outsb
xchg
sub
mov
add
sub
push
fcmove
lahf
sub
xchg
and
orb
ja
sub
iret
dec
push
push
popa
xor
out
fnstenv
pop
inc
fidivs
inc
mov
and
testb
mov
lods
lret
push
jbe
dec
movl
add
xchg
popf
jg
mov
cld
push
leave
addr16
mov
movsw
mov
hlt
ja
push
and
mov
test
clc
iret
cmp
nop
int
mov
dec
push
test
and
cmc
mov
push
ljmp
adc
xchg
xchg
movd
test
movsb
mov
jb
dec
add
mov
loop
or
cmpsl
subl
iret
mov
xchg
js
and
xchg
adcl
xchg
cltd
fldt
in
jbe
and
or
nop
xchg
shlb
xor
out
cmp
jnp
jmp
enter
test
cmp
hlt
add
std
repnz
xchg
aam
and
push
icebp
add
xor
pop
js
cmp
nop
sub
pop
jmp
mov
popa
icebp
xchg
mov
sub
lret
or
inc
cmp
jae
mov
movsb
mov
or
pop
stos
fcompl
out
dec
inc
sub
or
mov
iret
sahf
inc
sub
insl
inc
mov
xor
pop
ljmp
test
out
icebp
cmp
push
push
and
cmp
add
test
shr
xchg
cli
jmp
mov
mov
call
mov
push
mov
or
jbe
mov
rcrl
scas
xchg
mov
xor
sbb
jae
xor
xorb
mov
sti
cmp
pushf
dec
and
cmc
gs
shlb
pop
inc
xchg
xchg
cld
mov
lock
xlat
push
mov
mov
or
lahf
dec
icebp
out
mov
xchg
iret
dec
pop
js
mov
xchg
add
int3
jo
push
xlat
pop
xchg
test
sbb
or
into
inc
or
lahf
jp
and
push
scas
adc
test
jo
cwtl
shrb
mov
loop
push
and
ret
jle
sbb
push
xchg
les
sub
jne
divl
dec
rcrl
aas
add
xchg
lret
sahf
lret
hlt
push
mov
jg
andb
sbbl
mov
aas
fstps
imul
and
insl
lret
scas
out
push
sub
movsb
inc
or
xor
inc
push
jb
lahf
push
or
jmp
bsr
movsl
xor
jecxz
xor
xor
ss
lods
aas
insb
mov
icebp
or
xchg
xor
add
cmc
pusha
jecxz
mov
in
adc
fistpl
in
test
fnstsw
mov
mov
mov
and
add
es
in
inc
xchg
pop
std
test
inc
push
sbb
dec
cwtl
out
inc
int
test
insb
add
daa
inc
jnp
xor
or
lret
push
inc
jns
xchg
jmp
push
test
sbb
cmc
jle
jmp
mov
addl
inc
lcall
pop
fwait
mov
test
jge
mov
mov
pop
cmpsb
xchg
lea
dec
cmc
add
popf
pop
push
je
rolb
rclb
outsb
push
movl
enter
inc
inc
dec
cmp
sub
aaa
xor
push
or
pop
in
inc
test
jg
loopne
out
pusha
adc
inc
pop
lret
in
arpl
xor
and
mov
mov
and
and
std
ret
jp
cmp
mov
sub
or
fisttps
inc
jns
cwtl
outsb
and
pop
mov
push
mov
mov
jmp
pop
inc
xchg
pop
adc
sti
cld
pop
push
sbb
daa
xchg
ljmp
inc
dec
in
lret
cwtl
movsb
rcll
es
int
sub
pop
jge
jp
insl
stos
pop
xlat
inc
xchg
adc
push
aas
xchg
or
pop
inc
outsb
mov
test
sub
lds
insw
adc
cs
hlt
lock
sbb
lock
push
mov
fwait
mov
jnp
rcrb
mov
sti
fsubrl
repz
mov
int3
test
sbb
and
jmp
movsl
xchg
and
push
lcall
push
xor
daa
fistl
in
cs
xlat
dec
cmp
mov
pop
stos
pop
rcll
sbb
push
cmp
jnp
pop
xor
lcall
sub
adc
mov
push
negb
loopne
sbb
repz
das
pop
aam
lret
out
push
xor
mov
inc
push
popl
push
mov
mov
icebp
addl
cld
dec
les
lods
les
insb
movsl
lods
adc
rorl
faddl
inc
sub
add
in
lret
mov
xchg
fadds
push
inc
les
insl
scas
mov
movsl
sarb
cltd
cmp
scas
dec
mov
mov
pop
call
arpl
fnstenv
sti
lcall
dec
std
cmpsb
push
shr
movb
mov
mov
adc
lods
into
and
arpl
pop
mov
std
int
xchg
push
rcr
jge
insb
rolb
or
daa
fnsave
mov
das
mov
stc
sarl
and
jbe
mov
xchg
push
cmpsl
mov
cmp
pop
rorl
push
pop
add
jae
sti
sarb
icebp
in
daa
xchg
lock
pop
testl
gs
aad
dec
mov
or
sti
rorb
ss
fsubl
push
pop
test
dec
in
repz
bound
mov
icebp
xor
mov
pop
pop
cmp
cmp
ja
push
es
jle
and
fs
mov
vpmulld
cmp
out
filds
ficomps
das
dec
mov
jno
xor
pop
fcoml
sub
int
pop
iret
imul
push
inc
das
es
cld
mov
sbbl
and
jae
mov
sub
nop
push
and
repnz
fistpll
ror
cmpsl
mov
and
xor
out
pop
or
sbb
leave
mov
jmp
subb
fisttps
dec
jbe
push
stc
xchg
xchg
jge
jge
sbb
pusha
ret
shrb
pop
sub
mov
mov
jle
sbb
into
sarb
in
leave
and
add
nop
outsl
out
mov
xor
das
or
rol
mov
xor
jns
je
adc
aam
mov
ret
sbb
ret
push
jecxz
push
mov
stc
in
fistl
add
jo
sbb
clc
sbb
push
jmp
popa
or
jns
sbb
js
daa
add
ljmp
mov
andl
dec
hlt
and
pop
icebp
xor
jo
cmp
fcompl
js
pop
decl
or
imul
rep
dec
pop
or
sub
andl
xchg
and
jno
jno
xlat
jecxz
add
fstl
out
jl
shl
add
jns
mov
xchg
std
or
push
pop
cltd
sbb
mov
pop
pusha
int
js
bound
ret
call
push
fldcw
push
sbb
ljmpw
into
mov
xchg
ret
push
mov
jne
out
fadd
icebp
inc
ja
fdiv
repz
xchg
mov
push
and
mov
repz
jns
push
xchg
sub
mov
mov
mov
pop
test
clc
or
jmp
inc
mov
inc
cmpsl
sbb
fcompl
out
sbbb
mov
rcrl
xchg
ljmp
xchg
loope
rcrb
pushf
sbb
sub
pop
rorl
imul
mov
xchg
xchg
les
aad
xor
popf
jle
into
jns
push
outsl
and
test
mov
dec
rclb
clc
insb
mov
push
dec
xchg
cmp
jbe
xor
fs
test
leave
addr16
cld
jno
pop
andl
je
sub
into
jo
mov
jne
pop
sti
inc
sbb
sub
outsl
rcr
cmc
push
or
stos
insl
mov
test
xchg
ret
cmpsb
lcall
lahf
jmp
cli
mov
div
sub
dec
jbe
movsb
cs
push
add
cmc
jno
repz
in
inc
leave
and
sub
test
jmp
inc
mov
repz
test
sbb
leave
xor
into
ucomiss
outsl
or
and
inc
scas
pop
mov
gs
mov
mov
cmp
jp
mov
add
movsb
jecxz
fs
imul
inc
cld
scas
lret
pop
push
arpl
jmp
push
cli
xchg
cli
jb
cmc
fildl
cmc
sbbb
and
mov
cmc
imul
aam
repz
mov
mov
out
fsub
pop
xchg
add
xor
lret
xor
ret
std
testb
xchg
call
mov
rcrb
push
lahf
out
js
jnp
aam
icebp
dec
pusha
push
inc
pop
pop
bound
and
jl
push
xchg
jle
jg
add
mov
sbb
imul
jne
dec
push
jae
sbb
and
sbb
xchg
jb
mov
movsb
insb
pop
cmp
inc
rcrl
push
or
sahf
mov
cli
inc
mov
std
lret
ds
adc
les
fildl
insl
lret
add
xchg
add
sbb
sub
dec
sub
fldenv
fdiv
mov
lret
mov
bound
pop
xor
aam
outsl
fwait
mov
and
fs
xchg
add
pop
fldt
xchg
imul
test
inc
je
clc
shrb
pushf
cmp
dec
imul
push
and
hlt
fwait
out
jle
or
mov
or
xor
jnp
add
mov
xchg
sub
jne
je
sarl
fnstcw
movsl
in
call
cmp
jmp
xchg
dec
xlat
clc
pop
and
pushf
jecxz
hlt
into
mov
cltd
jmp
cmc
pop
dec
in
cmpsb
gs
inc
cwtl
sub
test
adc
pop
data16
das
or
rcl
popf
ret
shr
lahf
lahf
inc
or
movsl
cwtl
mov
je
shl
mov
xor
sub
mov
fwait
inc
adc
pop
xlat
popf
aas
bound
mov
add
test
or
fwait
xor
cmp
mov
pop
cwtl
pop
push
cmp
inc
mov
xchg
xchg
test
pop
sub
xor
xchg
mov
jo
data16
push
cmp
gs
ficoms
std
xchg
mov
xchg
decl
mov
outsl
call
cmp
out
inc
les
mov
sbb
push
imul
aam
cld
push
negl
sahf
and
mov
repz
mov
popa
lods
push
mov
lods
das
aaa
mov
dec
lahf
popa
dec
and
xor
cwtl
xorb
sbb
xor
sti
xchg
mov
jge
sbb
shlb
and
stc
mov
fcmovb
mov
add
add
push
jle
pop
outsl
xor
fcmove
mov
pop
cmc
cs
mov
cmp
inc
fcompl
repz
loope
mov
jp
jno
xchg
hlt
jno
pop
inc
pop
loopne
rorb
inc
mov
mov
imul
pop
and
leave
int
movsb
dec
adc
mov
xorb
jle
mov
cmc
xchg
cmp
mov
xchg
ret
mov
shll
pop
mov
or
xor
and
insl
xor
push
pop
dec
scas
ret
sub
frstor
out
or
jno
xor
jge
imul
add
mov
cmp
in
jp
test
or
dec
insl
or
fwait
cmp
jbe
adcl
ja
stos
mov
cmp
mov
xor
cmc
pop
adc
push
cli
out
jmp
lahf
inc
test
cmp
into
or
dec
push
inc
push
jl
mov
lret
loope
or
adc
aas
jge
mov
ret
adc
rcll
ljmp
or
fcomip
fld1
loope
addr16
jl
fsts
add
fptan
inc
shr
fwait
xchg
xor
sub
shrl
or
jno
inc
lret
mov
nop
sti
pop
clc
ds
out
pop
or
push
scas
lods
mov
adc
dec
push
lods
push
sub
mov
xchg
cmp
jae
inc
inc
cmc
xor
inc
cs
fs
push
sbb
into
mov
push
std
setnp
dec
lret
mov
inc
lcall
pop
insl
ss
inc
xchg
mov
push
rolb
pushl
xor
pushf
stos
cld
push
cli
js
inc
dec
jp
ret
aad
mov
sbbb
enter
lea
dec
test
mov
pop
dec
add
rorb
push
aas
ljmp
xchg
enter
xor
fwait
imul
push
arpl
xlat
cs
sub
into
fwait
sbb
fiadds
lock
cmp
or
decb
sbb
xor
loope
cmpsb
dec
adc
dec
dec
adc
sbb
cmp
push
ja
sub
inc
clc
jl
imul
xchg
rcr
out
pop
mov
aam
aas
dec
ss
adc
icebp
out
ficomps
push
cmpsb
outsb
int3
enter
sub
test
int3
loop
pusha
lret
and
gs
sub
shlb
mov
cmp
scas
mov
adc
mov
ds
ds
lds
xchg
xor
fcomip
xchg
jle
xor
pop
ret
movsb
push
pop
sub
lock
lret
pop
out
cli
dec
loop
inc
pop
or
mov
xchg
arpl
push
mov
icebp
push
jne
enter
shll
or
jno
bound
jns
mov
mov
mov
outsl
mov
xor
lahf
sub
fdivrs
mov
xchg
js
outsl
outsl
mov
repz
lods
fldenv
xchg
ja
add
jae
lret
repz
je
add
xor
mov
pop
dec
sarl
test
mov
int
jne
dec
sbb
mov
test
push
insb
cmp
or
jae
cmp
cmp
ret
xor
jb
js
and
lret
and
xchg
cmp
cmc
in
leave
shlb
cmp
push
lcall
push
sub
out
xchg
ret
and
les
aam
es
mov
add
mov
test
repnz
jl
fcmovbe
sub
pop
mov
cli
add
cli
sbb
std
xchg
mov
inc
jnp
cmc
inc
scas
mov
push
or
loopne
call
jne
das
test
outsb
scas
push
lds
mov
sti
outsl
sub
fs
cs
stos
xchg
xchg
lahf
push
jae
adc
mov
and
clc
push
or
push
dec
or
out
fpatan
pop
mov
or
xor
xor
xchg
dec
dec
out
add
add
add
jge
in
push
leave
and
dec
lcall
test
lods
push
ret
rorl
scas
cmp
test
pushf
jmp
aad
push
sbb
xchg
cmc
mov
cmp
in
adc
inc
push
lds
scas
xchg
push
xchg
shrb
pop
adc
ss
out
adc
cld
repnz
dec
js
jl
pop
daa
jbe
pop
pusha
sbb
outsl
mov
cmp
sbb
daa
mov
lcall
aad
mov
in
or
repz
std
scas
cwtl
sbb
jge
jle
fildl
pop
js
in
divl
jno
and
inc
and
fisttpll
add
loop
or
test
cld
mov
cmp
dec
daa
ljmp
mov
sub
add
jnp
jmp
xor
mulb
test
or
pop
jnp
in
repnz
sti
into
jo
fs
or
cmp
jb
imul
pop
sub
jbe
repz
mov
movsb
jecxz
mov
repz
lea
stc
dec
arpl
jns
call
jns
push
dec
gs
mov
cmpl
cmp
in
and
cmpsb
dec
xor
pop
and
dec
lods
movl
inc
adcb
sub
ja
pop
or
and
push
xor
jp
push
or
pop
int3
mov
shlb
nop
dec
inc
jecxz
pop
outsl
dec
lea
sbb
pop
inc
rorl
cmp
loop
cld
lret
pop
fnstenv
xchg
mov
or
arpl
jbe
repnz
std
cmp
add
jbe
and
ds
xor
dec
add
xchg
es
adc
cwtl
sbb
lahf
xchg
mov
lock
outsl
xorl
sub
and
lock
dec
mov
mov
pop
loope
sub
cmpsl
jmp
jp
pop
and
mov
adc
into
lods
push
lahf
push
sub
xchg
cmpsb
dec
insl
loope
into
test
mov
testl
mov
paddsb
push
aad
rcrb
cmc
jg
imulb
gs
fisttpl
mov
add
std
lret
fnsave
cmp
mov
arpl
add
andb
pusha
sbb
pop
mov
adc
roll
adcl
shrl
mov
sbb
outsb
lret
sti
in
fsubrl
int
dec
jle
sub
jbe
lds
adc
mov
cwtl
jne
mov
add
sub
stos
shrb
inc
xor
les
in
out
jno
shl
inc
push
ss
adc
ja
push
mov
imul
sub
iret
pop
lea
cmp
daa
sbb
push
jnp
mov
lret
push
inc
int
movsl
push
das
fwait
cwtl
das
push
cmp
cs
cmp
loop
mov
mov
jp
xlat
xchg
dec
dec
push
jmp
push
fistps
push
pop
adc
mov
or
ret
repz
dec
jp
data16
mov
jb
loopne
xchg
stc
or
jo
or
mov
pop
xor
shl
push
cld
in
js
das
mov
fadds
push
push
sbb
ds
into
jae
mov
frstor
mov
sub
mov
nop
clc
adc
mov
stos
mov
scas
loop
adc
pushf
mov
cmp
jae
out
dec
push
jg
and
dec
or
push
and
cwtl
test
adc
pop
cmp
popf
add
and
mov
int3
cmp
mov
into
test
popa
sbb
adc
jle
mov
push
sub
out
cmc
jbe
cmc
inc
cmp
or
jne
push
sbbl
and
scas
lahf
xlat
pop
push
pushf
jae
in
daa
inc
clts
jge
cmc
cmp
test
in
inc
fldcw
rcll
adc
shr
loope
xor
inc
pop
outsb
sbb
jl
aad
stos
xchg
insb
insl
sub
push
cmp
out
push
sub
mov
push
mov
jg
pop
mov
mov
push
push
jne
int3
les
xor
or
mov
fwait
call
sub
cmpsl
movsl
in
sahf
scas
or
popa
dec
fimuls
push
push
inc
and
lret
add
push
js
adc
mov
pop
mov
add
in
cs
pushf
push
lret
js
pop
mov
mov
push
xor
push
jg
ret
jnp
das
mov
mov
xor
xchg
adc
or
jbe
nop
fbld
sbb
mov
addr16
jb
les
and
dec
jmp
sub
xor
lret
cmp
ss
pop
pop
xchg
mov
in
fcomps
popa
inc
scas
sub
fcoml
sbb
nop
pop
mov
and
pop
shlb
jp
adc
adc
rolb
jp
push
dec
and
mov
lds
mov
imul
int3
push
and
push
inc
mov
xchg
es
cmp
test
out
movsb
sub
cmc
pop
fildll
fisubl
cmp
std
sbb
add
push
mov
push
hlt
cs
mov
sbb
jno
jmp
enter
and
xorb
test
mov
mov
jnp
mov
fsubrs
add
test
sbb
and
jecxz
mov
dec
push
mov
repnz
or
cmp
push
mov
jecxz
fcmovu
fcomps
test
gs
lea
jmp
insl
push
mov
pop
xchg
outsl
push
and
sub
fsubrl
jmp
xchg
cmp
in
mov
leave
mov
sub
cmpl
mov
jne
movsb
cmp
test
notb
int3
cmp
adc
out
repz
into
ret
fisubrs
pop
push
jp
cmc
fsubl
push
pop
sbb
cltd
cmp
out
inc
pop
notb
dec
jecxz
in
adc
dec
dec
addr16
aad
rcrl
repnz
ds
mov
bound
or
push
cltd
xor
cmp
mov
incl
cmpsb
add
dec
ss
push
scas
add
or
mov
pop
sbb
fidivrs
int
cmp
fcmovnb
pop
xchg
in
js
xlat
jne
pushf
pop
add
js
popl
aad
mov
imul
add
mov
lds
shll
mov
jp
jge
stos
and
outsl
adc
shl
sbb
repz
icebp
scas
lds
test
stc
and
lret
sub
adc
adc
xor
out
imul
ss
movsl
dec
int
and
mov
sti
jo
jbe
mov
sbb
xor
xchg
jno
stc
ret
imul
adc
popa
xor
aas
xchg
and
sbb
and
sarb
sub
es
push
insl
push
pop
enter
rclb
pop
mov
addb
js
inc
lea
sbb
xchg
xor
mov
mov
repnz
sub
mov
sub
leave
xchg
and
xlat
out
not
test
jbe
repz
loopne
adc
lods
cli
testl
inc
ret
push
mov
pop
mov
add
lods
adc
clc
dec
add
xchg
pop
pop
inc
lret
sbb
ljmp
fldl
das
pop
sarl
pushf
push
pandn
jl
bound
jge
test
hlt
fidivs
sub
out
pop
adc
lods
mov
dec
push
dec
pop
mov
jns
xchg
cmp
cmpsb
out
test
bound
in
jnp
movsb
jge
mov
loop
adc
inc
add
push
and
inc
jge
test
dec
clc
or
xchg
push
inc
jnp
inc
pop
dec
or
mov
test
sbb
and
frstor
bound
daa
xchg
insb
xor
fcmove
mov
add
xor
ror
mov
das
addr16
mov
sbb
inc
clc
sub
outsb
sbb
or
scas
mov
xchg
push
jl
and
push
outsl
js
or
test
push
enter
and
pusha
mov
leave
test
inc
xlat
push
jae
jmp
std
aam
lcall
sub
bound
add
les
aaa
pop
bound
xor
push
mov
je
push
lcall
mov
mov
in
dec
ffreep
xor
out
or
fs
stos
inc
fcmovnu
xchg
imul
push
mov
mov
fsts
sub
jge
inc
popa
add
xchg
out
mov
lahf
push
popf
mov
inc
xor
sbb
jno
or
hlt
xor
repnz
adc
iret
arpl
pop
mov
bound
push
jmp
mov
fwait
jecxz
aam
neg
call
sbb
cmpsl
jp
lahf
int3
or
arpl
and
enter
popf
fisubrl
jae
das
push
negb
or
mov
add
xlat
push
fnstsw
arpl
dec
mov
sarb
mov
rol
sbb
ds
cwtl
andb
mov
roll
inc
push
mov
fdivrp
popf
mov
into
sub
lods
inc
mov
ljmp
cmpsl
mov
pusha
and
jge
push
in
adc
into
das
imul
push
lods
arpl
or
arpl
adc
jns
bswap
sahf
iret
decl
mov
cmp
push
sub
push
push
xor
push
lods
fsubp
add
test
add
sub
popf
movb
push
movsl
insl
and
enter
enter
jbe
jno
ja
pop
lret
and
ljmp
ss
pop
clc
and
imul
push
cmp
sahf
orb
scas
dec
test
xchg
cmpsb
pop
mov
push
in
add
insb
mov
lea
sbb
push
add
sbb
insb
adc
pop
mov
aas
inc
add
mov
lods
dec
ja
dec
mov
popf
sub
mov
movsl
push
in
mov
push
outsb
dec
or
sbb
lods
lcall
test
xchg
inc
sub
cmp
je
je
mov
adc
xor
lea
outsl
sub
pop
insl
add
sub
jl
pusha
lret
inc
xor
addr16
xchg
inc
fs
filds
aad
out
xchg
ss
pop
std
andb
cmpsb
jp
xchg
stc
push
dec
add
scas
leave
xchg
es
lcall
dec
imul
xchg
testl
cmp
adc
push
dec
push
fdivr
pop
das
mov
mov
mov
push
sub
fcompl
divl
dec
shrl
lret
pusha
jmp
loope
mov
ret
jl
mov
lods
shl
imul
fldenv
ss
jecxz
aad
add
jmp
dec
jmp
cld
ljmp
push
int3
pop
push
pop
cmp
cmove
push
movl
repnz
dec
lret
inc
es
test
inc
shl
jb
daa
aaa
add
sarb
sub
mov
mov
add
xor
adc
cmpsb
pop
dec
mov
and
fistl
jle
sub
mov
repnz
out
push
push
hlt
jmp
add
push
lods
mov
ret
xchg
mov
sahf
jmp
mov
loope
fimull
jne,pt
inc
and
aaa
dec
push
mov
cmp
popf
and
inc
pop
and
jmp
jge
int3
adc
mov
lea
xchg
in
push
addr16
sbb
push
pop
clc
mov
sahf
pusha
popf
inc
andl
ds
lods
in
mov
rclb
out
push
xor
dec
pop
lea
dec
es
in
mov
add
mov
dec
push
ss
in
cmp
in
test
and
add
or
gs
push
mov
sarb
fisttpl
mov
add
push
push
loope
movl
adc
jbe
lods
mov
dec
xchg
mov
push
sub
jecxz
arpl
aam
mov
mov
or
leave
jge
and
cmp
lock
xor
ljmp
imul
cmc
push
out
aad
or
and
cmp
aaa
mov
sbb
pop
je
pop
jle
dec
mov
addr16
push
das
jmp
pop
add
jae
out
push
cmpsl
divb
push
cmpsl
jmp
fwait
scas
inc
xchg
or
sbb
out
mov
inc
push
and
mov
popa
insb
jns
dec
stos
gs
push
mov
out
mov
mov
lods
out
inc
out
push
aaa
pop
leave
mov
les
rorl
pop
call
mov
and
pop
pop
or
scas
xchg
add
dec
xchg
lods
lcall
sbb
daa
dec
xchg
pushf
in
jo
sub
cmpsl
cli
mov
cltd
sbbb
jbe
inc
ja
sbb
mov
adc
ja
ret
hlt
ret
je
sbb
fbld
fcoml
sbb
push
dec
push
mov
ret
dec
jae
sub
into
xor
outsb
xchg
loope
adc
cmp
pop
lea
push
gs
mov
ja
sub
and
jno
mov
outsl
std
adc
push
rolb
mov
dec
adc
aas
push
test
pop
mov
ja
dec
add
fst
popf
dec
in
adc
and
gs
lret
int3
loop
jmp
pushf
jne
pop
lods
add
cmpsb
push
cmp
sub
rcrl
cmp
add
jle
mov
jmp
cmp
fucomip
and
jecxz
sahf
repnz
mov
push
daa
fldcw
mov
dec
movsb
pushf
sbb
xorb
clc
pusha
test
sbbl
hlt
idiv
test
sbb
bound
adc
mov
lret
in
jmp
and
jmp
add
mov
xchg
jmp
fs
jb
mov
add
das
lds
adc
nop
pop
fidivrs
insb
sahf
xrelease
xor
pop
ror
pushf
adc
adc
xor
sbb
adc
or
fistps
nop
ret
int
push
add
mov
add
jl
pop
push
ret
sahf
mov
mov
jecxz
test
pop
pop
mov
sti
push
sub
pushf
fwait
or
decb
rorb
and
jbe
out
out
sub
mov
cmp
in
les
ret
mov
and
dec
mov
jne
mov
adc
repnz
repnz
stos
adc
sub
je
sub
les
mov
and
mov
movsl
jge
dec
notl
xor
in
lock
and
enter
sbb
cmp
iret
lds
xchg
push
sbb
nop
hlt
pushf
push
cmp
inc
stos
xor
xchg
sbb
sbbl
pushf
cmp
push
inc
mov
inc
addr16
mov
inc
stos
inc
mov
daa
imulb
fcmovne
jns
xor
sub
lods
loopne
arpl
xorl
xchg
repnz
lret
std
icebp
adcl
xor
mov
push
outsl
xchg
es
lods
adc
je
repnz
iret
sub
dec
mov
xor
lods
out
jmp
test
pop
or
xchg
inc
inc
arpl
sbb
leave
lret
pop
ja
sar
gs
mov
cwtl
ss
enter
or
mov
jg
adc
cmp
ds
test
cmp
pop
dec
add
addr16
sar
cld
rcrl
adc
mov
imul
or
hlt
out
pusha
sarb
lds
pop
les
dec
iret
adcb
xchg
pop
xor
xchg
outsb
in
xchg
or
outsb
jp
fistpl
adc
out
cmp
pop
psubsw
imulb
inc
mov
inc
mov
add
lods
cmpsl
pop
sbb
jl
arpl
subb
subb
shll
xchg
add
std
movsb
rcll
imul
inc
or
call
ret
adc
add
sbb
imul
jo
sbb
or
aad
mov
psrlw
aam
out
push
sbb
jg
rolb
js
pop
push
lock
ret
bound
stos
sbb
push
xor
dec
jecxz
or
inc
orl
xorb
mov
jns
ljmp
xchg
movl
jnp
push
sub
adc
hlt
stos
es
mov
push
mov
shrl
in
cmc
aam
int3
ds
in
cmpsl
sahf
sbb
xchg
xor
cltd
addl
mov
gs
nop
xor
imul
jg
cld
out
adc
scas
xchg
sub
or
leave
jb
add
mov
lcall
mov
cmpsl
pop
dec
inc
test
mov
pop
pop
mov
jnp
or
fdivrs
negl
push
and
add
mov
jae
add
jb
pusha
xchg
adc
inc
xor
aas
lret
and
icebp
aad
jo
dec
ss
cmpsl
fldenv
out
mov
inc
fwait
in
repnz
jg
push
int3
push
and
sbb
faddl
pop
outsl
cmpsl
inc
int3
mov
inc
lret
or
hlt
shr
mov
adc
xchg
fimuls
jle
icebp
jne
inc
sahf
and
loop
xlat
mulb
inc
push
fcomp
jecxz
inc
jg
in
cmp
cmpl
mov
jo
cwtl
cmpsl
push
nop
xchg
inc
mov
icebp
test
xchg
pusha
cli
insb
mov
jb
adc
aad
loop
jae
xchg
push
repnz
mov
inc
shlb
or
pop
mov
jecxz
xchg
pusha
sarl
inc
dec
mov
adc
cmp
sub
xchg
xor
cmp
sub
rcll
push
mov
mov
push
sbb
je
stos
sub
xchg
test
push
inc
xor
mov
fwait
cli
int
jno
imul
loopne
pop
add
lcall
in
arpl
adc
inc
lcall
inc
cmp
push
xlat
cmp
out
das
dec
jl
gs
out
shl
mov
jne
dec
cmp
fidivrl
lret
iret
or
test
or
hlt
mov
addr16
dec
in
lret
xchg
xchg
xchg
or
mov
pop
imul
repz
dec
roll
loopne
aaa
sub
leave
pop
sub
iret
jne
fcmovbe
movsl
outsl
inc
ror
sub
js
daa
ja
xor
movsb
pop
ret
cmp
loopne
testl
mov
mov
dec
lret
stos
js
xchg
aam
out
push
mov
lret
mov
out
arpl
pop
das
sub
sbbb
imul
xor
xchg
not
and
xor
shld
out
nop
or
add
mov
jno
mov
rorl
imul
inc
loop
mov
sbb
movsl
jmp
dec
sahf
lods
fs
or
fsts
mov
cmc
add
cltd
icebp
decb
ret
sub
cmp
movsb
sar
in
aad
gs
test
push
push
enter
mov
push
mov
punpcklbw
sbb
pop
mov
nop
cmpsb
push
dec
int
push
pop
jb
pop
popf
fistl
sub
leave
cmpsb
mov
movsl
insb
imul
fdivrl
adc
movl
mov
xchg
sarl
fldcw
and
jmp
shlb
mov
arpl
mov
and
push
rorb
mov
xchg
mov
arpl
sti
pop
sub
sbb
lock
mov
mov
sti
jecxz
rclb
es
out
mov
jl
in
push
add
jp
enter
adc
cmp
pop
hlt
out
mov
cwtl
push
jae
pop
fbstp
sti
push
cmp
cmpl
fsubrl
imul
mov
repnz
mov
adc
rcll
or
mov
fiadds
pop
inc
mov
mov
outsb
cltd
push
mov
xlat
push
pop
jge
inc
sub
xchg
pop
add
sub
add
inc
pop
cli
aaa
dec
xchg
jnp
lret
add
scas
xchg
sbb
jo
sti
xchg
add
je
push
sar
or
inc
hlt
pop
jns
xchg
xchg
lock
xor
sbb
fistps
mov
add
and
jnp
ljmp
mov
aad
mov
aaa
inc
insl
push
sbb
cmpsl
sub
and
adc
outsl
mov
xor
pop
sbb
mov
std
pop
push
stos
sbb
push
test
xlat
clc
adc
mov
pop
adc
in
mov
inc
lds
dec
mov
in
mov
lock
jmp
gs
mov
inc
sbb
add
push
mov
sub
in
decb
jmp
push
popf
push
in
pop
pop
mov
ret
push
jge
in
in
xor
mov
pop
enter
cli
mov
aaa
jnp
mov
xchg
push
push
std
or
dec
lods
data16
adc
shr
push
mov
imulb
lret
or
jno
popf
mov
adc
fists
cmp
fs
adc
outsl
outsb
call
mov
xchg
and
popa
in
js
mov
shrb
mov
or
mov
or
pop
into
push
lods
inc
mov
add
mov
xor
pop
test
pop
inc
fisttps
sbb
call
jmp
xor
mov
xchg
add
hlt
in
xor
imul
dec
jb
cli
inc
ja
adc
sbb
nop
pop
xor
shrl
ja
sub
cli
imulb
icebp
push
cmp
cmp
mov
pop
mov
movsl
mov
mov
scas
pop
xor
popf
jno
mov
mov
test
fcoml
pop
out
mov
ds
xor
sub
push
fidivl
pusha
mov
dec
scas
shrb
and
cmpl
push
ret
or
mov
jge
mov
hlt
clc
aam
outsl
bound
enter
dec
pop
call
insb
jle
std
inc
js
and
movsb
xchg
mov
jno
pop
xchg
pushf
mov
adcl
jbe
fs
repz
fldcw
roll
lds
xor
pop
inc
mov
ds
popa
jg
outsl
mov
lahf
or
sbb
jae
inc
push
add
push
ret
fstpl
xor
inc
jl
lcall
xor
sub
enter
sbb
adc
mov
shrl
in
adc
lahf
adc
dec
jp,pt
mov
mov
dec
dec
js
ret
or
in
push
adc
push
xchg
andl
loop
test
sbb
jne
das
icebp
jb
push
and
jecxz
adc
cs
jge
testl
jne
call
sbb
or
daa
cmp
fldl
mov
pop
sub
insb
pop
dec
sbb
or
pop
lret
jbe
and
sti
sbb
cmpsl
mov
notl
sbb
iret
pop
jmp
fldenv
mov
add
std
imul
jg
ds
sbb
cwtl
addl
mov
int
test
xor
pusha
dec
push
and
js
pusha
lea
mov
aaa
dec
or
cmp
in
mov
pop
rcr
aaa
push
leave
xchg
psrld
pop
xlat
lret
outsb
xor
arpl
ds
cli
xchg
jo
xor
cmpsb
inc
xchg
stos
imul
inc
sarl
aaa
arpl
inc
cmp
sbb
dec
loopne
lret
xor
jne
jge
or
in
pop
ja
mov
and
pop
pusha
cs
mov
mov
loopne
iret
outsl
loopne
test
loopne
out
mov
push
sbb
or
xchg
xor
inc
jbe
jge
adc
rorl
pop
test
cmpsb
cmp
movsl
or
ja
push
push
cmpsb
cmp
cmc
pop
fmull
jmp
sbb
jge
push
or
and
inc
call
xchg
jl
hlt
mulb
into
mov
loope
cmpsl
or
push
frstor
jo
and
push
add
cld
pop
mov
frstor
xchg
xorl
cmp
lea
movsl
xor
imul
dec
sarl
jb
bound
inc
push
inc
push
xchg
cs
loope
mov
orb
cmp
pop
fld
rolb
addr16
xchg
iret
aad
sbb
outsl
ret
scas
stc
xchg
mov
rcrb
xchg
jg
cmpsb
cmp
enter
cmp
pop
jb
cmc
sub
adc
pop
mov
sub
lret
sbb
jne
pop
mov
addr16
inc
sbb
hlt
xor
das
shrb
into
mov
push
push
add
or
pop
sub
ret
addr16
mov
xchg
mov
fstl
push
sets
mov
push
shrl
push
test
sub
cmc
push
fdivr
aam
outsl
js
popa
cmpb
adc
out
repz
lds
fbld
xor
cld
mov
fildll
jge
jge
pusha
sub
push
icebp
jb
push
outsl
fcmovb
xchg
xchg
jns
popa
popa
fadd
js
fimuls
xchg
jecxz
js
into
adc
lret
sbb
idiv
dec
fnstsw
jmp
mov
adc
xor
outsb
loopne
roll
sbb
fisttpll
outsb
dec
xchg
xchg
fucom
jnp
mov
sbb
stos
mov
out
mov
fildl
stos
xchg
data16
push
test
push
mov
jp
xchg
dec
rclb
mov
popf
mov
xchg
jle
lahf
nop
imul
and
cmp
pop
int3
mov
outsl
adc
dec
mov
dec
shrb
mov
sbb
xchg
insl
popa
jnp
cmp
imul
jae
sbb
jbe
imul
cmp
imul
dec
lock
lret
cmp
pop
mull
lods
jo
jecxz
dec
cmp
push
jne
repnz
cld
outsl
sbb
sub
testl
sub
hlt
movsb
adcl
mov
imul
xlat
cs
push
push
mov
test
loop
and
loop
shlb
gs
push
shlb
ffreep
add
push
imul
jmp
sbbl
enter
rolb
lret
sub
daa
aad
std
repnz
stos
sbb
push
xchg
aam
out
cs
add
aas
add
ret
mov
push
ret
std
inc
insb
orb
cli
mov
hlt
fistpll
or
movsl
lret
fadd
pop
adc
sbb
gs
ss
or
mov
js
inc
outsl
add
push
sbb
mov
out
cmpsb
sbb
add
rorl
jecxz
cmp
pop
fsubs
dec
jp
outsb
fiadds
jmp
push
sbb
jae
aad
idivl
call
int3
lcall
andb
cld
sbbl
sbbl
out
cmp
out
daa
rorl
and
test
sar
pusha
mov
dec
adc
enter
add
aas
adc
or
adc
ja
stc
xor
pop
sbb
mov
xor
push
repz
or
ss
and
jae
xorb
jnp
pop
adc
pop
lret
cmpsl
rcrb
push
sub
mov
xchg
mov
mov
stos
test
nop
ds
push
sub
je
xor
mov
mov
push
cmpb
adc
roll
push
adc
jg
repnz
notb
out
jo
insl
xor
jecxz
mulb
daa
pop
divb
push
jb
xlat
cwtl
icebp
popl
adc
mov
or
cs
fmull
push
insb
insl
cmp
rorb
add
fsub
enter
daa
hlt
cmpsl
aam
ss
cmp
cmp
cmc
sahf
fwait
sti
push
sub
fiaddl
jae
mov
loope
push
lds
adc
enter
orl
aas
sbb
daa
push
sbb
sahf
loopne
repnz
movsb
das
popa
jge
push
sbb
int3
lea
adc
adc
adc
fwait
notl
insl
pop
xchg
add
outsb
faddp
sbb
sbb
push
add
cmpsb
cli
ss
jno
push
push
push
inc
ficomps
pop
adc
dec
and
dec
shl
rcl
sti
dec
popa
rcl
sbb
iret
loop
or
mov
jno
push
pop
loop
xchg
lahf
out
outsb
inc
pop
xor
hlt
lods
xor
mov
jle
add
int3
cltd
fsub
stc
cmp
rorl
push
pushf
xor
push
cmp
stos
shlb
stos
or
aam
jge
inc
xchg
cmp
fisubrs
xchg
out
cmp
sbb
imul
xchg
mov
push
mov
out
imull
sahf
push
testl
test
stos
fsubl
lea
push
sub
in
jne
mov
mov
pop
ljmp
pop
dec
call
jecxz
fxch
lahf
test
mov
pop
xlat
push
loop
addr16
ja
int
and
out
enter
xchg
loopne
and
loope
out
subl
in
jae
add
dec
mov
loop
stos
dec
incl
aad
mov
sbb
mov
popa
cltd
leave
shl
inc
mull
ljmp
inc
popf
jnp
xchg
pop
pop
adcl
add
xchg
sbb
add
dec
ficoml
cli
sub
or
xchg
inc
in
pushf
sub
out
pop
outsl
mov
sub
ss
shrl
cmpsb
push
js
out
cld
std
xchg
sub
add
ror
xchg
je
jg
in
dec
pop
enter
pop
test
sbb
paddsb
sbb
mov
push
xchg
outsb
ja
push
sbb
cmpsb
call
or
imul
adc
cwtl
pop
cmp
push
mov
sbbl
aaa
sbb
outsb
cmp
mov
dec
pop
addr16
pop
cmp
sub
mov
mov
jae
loop
shll
cmc
sbb
dec
addr16
movsb
jbe
jmp
xchg
mov
add
jp
fsubrs
es
mov
cmp
xchg
cmp
push
xchg
aam
xchg
cld
or
arpl
popf
test
stos
xor
aas
shrb
add
adc
lret
mov
cltd
inc
add
xchg
cltd
test
stc
jne
inc
mov
cwtl
aad
call
mov
xor
mov
pop
sub
adc
loop
stos
int
mov
scas
jb
aad
icebp
or
sbb
dec
xor
out
xor
stos
sub
movb
movsb
add
icebp
dec
mov
mov
cltd
lret
inc
fwait
mov
cmpsb
icebp
jb
ljmp
lcall
in
inc
inc
push
prefetch
dec
jns
sub
push
xor
inc
push
and
cmp
sub
xor
sbb
mov
push
xorl
imul
ljmp
push
sub
cs
or
pop
xor
inc
add
xor
inc
jg
lock
adc
loopne
sub
and
mov
notl
out
or
aad
pusha
jmp
and
out
stos
mov
jmp
mov
test
push
jg
ja
subb
dec
adc
mov
pop
clc
imul
xor
push
sbbl
push
pop
xchg
pop
push
xchg
jle
push
fsubs
jae
pop
std
mov
icebp
inc
shlb
roll
xor
out
dec
sub
lret
push
xor
mov
stc
es
sar
sbb
add
daa
ljmp
pushf
clc
cmpsb
jmp
mov
mov
xchg
cmpsl
jae
mov
jmp
stc
leave
mov
and
in
fwait
cmc
cmp
sub
sti
icebp
inc
or
int3
jne
out
add
inc
sbb
popw
xchg
cmp
adc
lods
mov
inc
movaps
loope
sub
decb
movb
sets
out
cmp
jnp
pop
xor
fcoml
aaa
xor
lea
xor
fmulp
sub
push
push
jmp
sti
repnz
push
fsts
cmp
pop
pop
pop
fwait
push
or
in
sub
ret
pusha
test
sahf
push
enter
jg
iret
mov
inc
adc
aad
xlat
lea
mov
cld
mov
es
mov
lods
subl
stos
push
mov
scas
enter
data16
lahf
push
sti
inc
adc
mov
fisubrs
stos
daa
xchg
and
mov
clc
inc
cmpsl
imul
dec
mov
movsb
in
xchg
cmp
ret
fmulp
lds
pop
int3
jnp
pushf
stc
out
movsb
sub
jmp
ret
sar
sti
xlat
push
cvtdq2ps
out
dec
cmp
ret
rorb
and
pop
ljmp
cs
das
push
dec
cmp
movsb
mov
jl
xor
clc
push
pop
nop
ljmp
aaa
jl
shrl
mov
push
add
sbb
jbe
xchg
rorb
adc
in
and
sbb
stos
scas
popf
call
outsl
inc
mov
xchg
pop
rcll
pop
stos
in
add
or
jmp
mov
pop
add
sti
cmpsl
stc
sarl
xchg
sbb
add
add
cs
sub
sbb
imull
rclb
stc
push
adc
sahf
add
lret
adc
loope,pn
cmpsb
dec
ds
inc
in
lea
outsb
stos
gs
mov
add
cmp
sub
mov
add
adc
les
or
sub
imul
sbb
cwtl
xchg
out
popf
cmp
xor
mov
or
repnz
jns
andb
sbb
push
add
mov
mov
push
lret
in
stos
mov
pop
outsl
je
pop
cs
imul
inc
ret
xchg
mov
lret
jae
xchg
push
mov
ja
inc
out
je
jbe
in
or
jecxz
push
mov
out
jle
lds
repnz
test
aam
jb
or
insl
xor
pop
out
jne
aam
aas
ljmp
push
cmpb
sub
js
int3
jle
push
enter
out
mov
dec
dec
or
or
in
mov
pop
push
xlat
jbe
cli
scas
adc
scas
aad
mov
out
sub
out
push
pop
loope
pop
xchg
xor
cltd
pop
jg
jp
jle
fdivrs
adc
mov
cltd
xor
and
lods
ss
jnp
add
shrb
loopne
push
movsl
data16
xchg
adc
and
cmpl
xor
out
xchg
push
mov
jl
sub
cld
popf
jbe
sbb
adc
es
lds
lcall
imull
mov
mov
mov
xorb
shl
mov
adc
or
in
xchg
dec
orl
xchg
inc
rorb
mov
push
fdiv
inc
repz
mov
inc
out
dec
cltd
cmp
xchg
lcall
fsub
adc
jmp
jno
xchg
mov
dec
xchg
mov
movb
in
jnp
xchg
cmp
cltd
jbe
mov
mov
cltd
loop
push
pop
mov
rorl
arpl
push
mov
je
addr16
push
lret
jl
ficomps
insb
push
pop
sarb
lahf
je
rorl
rcrb
test
add
insl
push
xchg
pop
ss
loope
push
inc
sarl
rclb
aas
ljmp
bnd
sub
hlt
add
ljmp
out
pop
inc
cmp
jo
out
mov
loope
xchg
mov
mov
push
imull
push
insb
or
mov
inc
fidivl
xor
insb
jae
jg
cmp
jne
add
adc
jle
mov
int3
sbb
loopne
call
xchg
loope
je
ljmp
ds
aad
xor
daa
callw
popf
xor
jae
cmpsl
mov
inc
jns
insb
mov
addr16
pusha
sahf
xchg
push
jne
jno
xchg
lds
sub
or
push
lahf
subb
push
shlb
aad
repnz
es
es
push
loopne
ret
pop
pop
push
cmp
jno
out
xor
cli
cmp
jmp
repnz
imull
sbb
sub
negb
jecxz
xchg
sub
stos
repnz
adc
lcall
mov
push
adc
push
and
lahf
pop
xchg
inc
stos
int3
mov
daa
outsl
faddp
add
and
cmp
push
movsl
and
rcrb
fidivrl
rolb
push
pop
hlt
cld
insb
mov
fs
mov
popa
jecxz
mov
mov
adc
adc
mov
fisttpl
jecxz
out
jmp
sbb
and
sub
mov
xor
fbld
pop
aam
sbb
iret
adc
int
repz
stos
addr16
jecxz
scas
push
scas
orl
into
repz
in
jne
stos
dec
pop
sahf
push
pop
aaa
dec
sub
scas
rclb
xor
ss
ret
xor
insb
xlat
adc
and
cmp
cli
loop
in
insl
aam
inc
push
scas
andl
pushf
cs
negl
movsb
popa
pop
pop
cmpsb
dec
loopne
cltd
cld
lea
or
pop
jle
and
and
xor
cmp
aam
inc
js
mov
outsb
arpl
push
ret
inc
inc
addl
mov
mov
fisubrs
sbb
xor
mov
xchg
jp
xor
subl
sbb
push
ds
movl
inc
jp
dec
clc
and
xchg
enter
mov
in
hlt
and
sub
jno
mov
cwtl
test
out
jg
add
mov
cli
jo
pop
shl
mov
cld
pop
in
sub
mov
push
notl
bound
ljmp
sbb
mov
popf
adc
jg
cwtl
and
xor
jae
pusha
or
sbbb
hlt
inc
mov
test
adc
mov
out
es
out
ja
jno
xchg
sbb
mov
mov
rol
ljmp
cmp
fsubr
out
pop
mov
xor
sbb
mov
mov
jg
lret
dec
stc
or
sahf
ljmp
hlt
aam
sti
dec
mov
inc
mov
fldt
cs
add
shll
xchg
mov
std
push
add
adc
and
mov
jecxz
jo
cmp
jg
aas
rol
in
fiaddl
dec
mov
aad
push
addl
out
pop
jecxz
dec
jl
add
xor
outsb
in
jge
mov
test
xor
aas
xchg
adc
lods
sub
push
adc
or
addr16
mov
and
stc
ja
popf
jp
pop
or
cld
aaa
out
pop
pop
lods
fisubl
inc
xchg
into
movsl
cmp
punpckldq
decb
mov
les
mov
insl
sub
or
inc
je
mov
pop
insb
mul
mov
shll
bound
cmp
xchg
push
push
adc
fsubrs
mov
mov
cld
and
jle
lock
subl
and
cltd
inc
dec
ds
in
stos
sub
lea
push
dec
pop
movsl
stc
scas
das
cmpsl
in
lcall
out
in
adc
push
icebp
sub
add
xor
and
adc
es
adc
scas
add
dec
fisubs
dec
mov
out
jmp
pop
mov
test
mov
out
mov
call
lea
mov
lods
jmp
adc
addr16
lea
stc
std
out
mov
rorb
mov
ja
fxch
xchg
xorl
sub
pop
aaa
lret
mov
mov
mov
pop
push
mov
jno
loop
mov
mov
sbb
lods
sub
push
pop
aam
sub
sub
popf
std
testl
movsl
jmp
stos
ss
xchg
lea
adc
mov
xor
and
push
cmp
fcomps
fwait
mov
cld
int3
ret
jae
cli
cs
cli
cmp
daa
loopne
out
mov
test
mov
dec
pop
popa
outsb
mov
outsb
fcomps
pop
inc
jecxz
mov
cmc
or
mov
cwtl
in
and
inc
sub
cltd
ret
in
outsl
jge,pn
shll
jp
and
cmp
mov
mov
adc
cmpsb
pop
pop
xorl
dec
cmpsb
push
inc
lahf
pop
mov
mov
js
pop
sar
pop
lds
and
mov
sbb
hlt
lcall
les
sub
mov
cmp
lret
scas
mov
lods
sbb
and
les
xchg
sbb
xor
repz
jmp
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
jns
pop
insb
xor
pop
call
mov
jmp
movzwl
pop
mov
add
push
mov
pop
mov
mov
mov
push
mov
pop
add
mov
sub
push
mov
pop
xor
and
mov
push
movzwl
pop
sub
push
pop
dec
jne
mov
sub
out
pop
aas
push
daa
jmp
repnz
sub
daa
cmpsb
push
xor
test
insb
movsl
int
pop
das
negb
in
pop
push
es
or
push
lods
in
pop
push
es
arpl
loope
pop
push
jg
push
outsb
mov
scas
mov
push
add
scas
cmc
sti
popf
mov
es
pop
jb
mov
push
sbb
divb
xor
popf
jo
jo
repz
fisttpll
es
pop
sahf
outsl
lea
jmp
push
jno
es
cwtl
xor
in
lods
pop
inc
inc
imul
hlt
mov
es
pop
cmpl
dec
jnp
inc
and
fwait
gs
filds
out
pop
test
out
pop
push
jge
clc
sbb
repz
jne
aas
test
out
pop
push
push
mov
and
inc
push
jl
jns
xchg
out
pop
push
idivl
inc
mov
sub
insl
lods
add
push
sbbl
inc
mov
jle
jb
stos
dec
insl
mov
dec
sarb
or
xchg
push
mov
out
movsl
arpl
cmpl
dec
ret
sub
repnz
dec
inc
rclb
int
out
dec
inc
ss
addr16
xor
into
xor
rclb
pop
pushf
jp
lret
mov
neg
sbb
cmp
in
mov
out
lds
or
repz
pop
enter
dec
fwait
add
xchg
mov
ret
mov
inc
dec
add
push
dec
inc
ret
mov
imul
jno
jae
scas
arpl
sti
dec
inc
mov
add
aaa
mov
imul
push
test
gs
jmp
stc
pushf
push
scas
std
fcoms
clc
push
test
mov
out
int3
xor
xchg
sbb
lods
les
fsubrl
loope
js
movsl
add
shl
add
insl
xchg
sbb
flds
sub
inc
cli
lods
pop
shlb
and
cwtl
into
mov
loope
test
int
inc
push
inc
push
mov
xchg
add
or
insl
fwait
xor
add
jp
mov
dec
inc
push
mov
sahf
test
xor
aas
ljmp
loope
test
adc
mov
dec
subl
gs
push
mov
push
cltd
loopne
mov
loope
test
movsl
repz
inc
mov
add
inc
outsb
inc
xchg
shlb
negb
pop
test
bound
mov
testl
loope
out
popa
mov
shll
roll
stos
or
sub
inc
pop
ds
ss
and
aad
cmpsb
clc
aad
test
mov
sar
int3
sub
incl
pop
pop
mov
jne
test
idivb
or
sbb
push
imul
lcall
dec
pop
outsl
and
pop
add
pop
xchg
sbb
sahf
rcrl
jmp
mov
mov
xchg
outsb
arpl
les
cs
and
outsb
and
mov
sub
push
sbb
jnp
enter
lcall
pop
and
fildl
and
add
and
or
and
sbb
mov
sbb
and
sbb
xchg
jecxz,pt
sbb
sub
sti
mov
xchg
movsl
sti
pushf
xor
lret
mov
sbb
jge
cmp
and
sbb
adc
xchg
mov
add
jmp
sti
ficompl
push
add
and
jecxz
and
aam
mov
sbb
mov
adc
xor
sbb
xor
outsb
xor
leave
push
and
call
filds
inc
dec
adc
sbb
xchg
testb
mov
fdivs
mov
jecxz
and
jge
sbb
lea
mov
sub
idivl
pop
mov
mov
mov
xchg
and
call
not
cmp
sbb
xchg
movsl
aam
jmp
and
sbb
and
sbb
and
jp
mov
add
mov
mov
add
sbb
test
dec
adc
lods
mov
icebp
lret
mov
jnp
pop
pop
sub
sbb
test
dec
adc
push
push
dec
add
mov
mov
jl
push
sbb
xchg
push
jge
clc
or
dec
ret
movswl
shrb
jg
xor
jle
sub
sbb
test
dec
adc
dec
in
sub
cmp
andl
xchg
cmp
pop
shrb
jg
xor
jle
sub
sbb
test
dec
adc
scas
fwait
jg
push
and
lcall
shrb
jg
xor
jle
sub
sbb
test
dec
adc
scas
fwait
aam
dec
push
in
cli
fsubl
loop
and
add
pop
nop
sbb
and
or
dec
ret
psubsb
shrb
jg
xor
and
and
sbb
scas
imul
push
push
aam
dec
push
or
fsubl
loop
pop
mov
je
mov
lcall
sbb
pop
cmp
in
add
sti
loop
mov
cmpsl
push
sub
xchg
incb
and
pusha
test
add
and
sahf
dec
pop
movsl
sbb
and
and
lds
mov
and
push
sub
jae
les
aam
mov
and
scas
cmpsl
or
add
and
daa
stos
ficoms
loope
fiadds
push
mov
pushl
cmc
leave
sub
lods
stos
and
adc
and
test
push
ss
sub
call
call
dec
mov
xchg
dec
test
fiadds
scas
cmp
loop
sbb
dec
sub
mov
hlt
out
mov
inc
nop
insb
xor
test
and
jge
sbb
outsb
aad
aam
and
sbb
and
sbb
and
sbb
and
sbb
adc
sbb
inc
xchg
sbb
and
and
sbb
and
add
and
sbb
and
sbb
and
sbb
add
xchg
loopne
icebp
out
dec
push
sub
pmaddwd
data16
lret
arpl
mov
lcall
test
cwtl
mov
mull
shrl
ret
mov
mov
aaa
jae
dec
je
push
scas
lahf
test
jl
dec
movsl
mull
scas
testl
pop
lret
out
push
fisubrs
xlat
push
sub
cmp
leave
mov
or
adc
mov
xchg
cmp
xor
icebp
add
imul
sbb
pushf
lret
mov
mov
movsl
and
dec
mov
mov
jnp
or
sub
sti
mov
nop
call
lahf
push
inc
sub
ret
push
pop
outsl
or
popa
or
cltd
add
and
add
add
add
ljmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
ljmp
mov
pop
add
ljmp
mov
ljmp
int3
ljmp
ja
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
addb
add
icebp
ljmp
pop
jmp
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
or
add
cld
add
or
xchg
add
jne
adc
mov
les
and
and
and
inc
jl
push
and
addb
push
and
adc
mov
xor
mov
or
lods
mov
leave
mov
jmp
adc
or
push
je
add
xor
add
ret
xor
sub
int3
and
rolb
inc
aam
mov
adc
add
pop
push
dec
bound
add
je
and
orl
lods
jb
cmp
pushf
and
nop
in
jb
cmp
sbb
test
andl
js
shlb
shlb
and
pop
add
pop
in
jb
cmp
sbb
add
inc
xchg
fmul
fsub
add
jb
cmp
cld
add
and
add
call
in
adc
or
add
call
or
inc
and
faddl
je
push
movzwl
add
jmp
sub
cltd
xor
or
js
and
xchg
pop
and
and
sbb
push
push
mov
adc
add
push
leave
call
add
test
jne
add
mov
mov
xchg
or
sbb
ret
rorb
mov
sbb
push
inc
inc
cmp
jne
add
iret
adc
push
pop
nop
add
mov
hlt
pop
je
jbe
or
call
test
dec
dec
mov
push
mov
push
or
addb
bound
inc
pusha
ret
add
jg
jle
gs
pop
push
adc
mov
nop
push
push
orb
out
pop
bound
cmp
loopne
mov
scas
cmp
inc
mov
push
or
push
jne
addl
frstor
sbb
sbb
jmp
xchg
add
add
or
cmp
jl
icebp
clc
jg
add
pop
pop
add
mov
jns
add
mov
mov
jb
inc
into
add
add
call
ja
add
jne
in
or
cwtl
or
stos
cmpl
and
cmpsb
gs
jmp
add
divb
add
into
fldl
clc
aaa
xor
iret
pop
sub
add
sub
aas
sub
add
jl
cmp
adc
rolb
sarl
test
add
or
or
pop
cmp
cltd
inc
sbb
pop
xchg
nop
pause
mov
in
lock
jge
pop
mov
cmp
out
adc
add
or
push
add
and
sbb
cmp
testl
and
sarl
sbb
addb
mov
shlb
pop
clc
stos
fs
call
fmull
add
push
pop
push
push
push
pop
jne
jns
lret
and
cmp
ja
movsl
add
movsb
insb
lahf
in
rorb
adc
movl
adcb
call
add
mov
rorb
push
xchg
repz
nop
out
ja
inc
and
movb
ds
xor
push
push
xchg
jbe
add
cmpsb
jne
push
jae
add
sub
jo
cltd
dec
adc
cmp
jmp
pusha
aas
add
add
sub
push
psubsw
or
adc
xchg
sbb
adc
cmpsb
mov
dec
test
pop
ljmp
add
xchg
add
je
xchg
and
xchg
add
sub
dec
inc
cmc
xor
cmp
add
add
xor
sbb
clc
call
or
pop
inc
adc
sub
fs
push
test
shrl
cmpsb
jmp
adc
mov
mov
xchg
imul
je
sub
mov
and
xchg
sahf
jmp
inc
add
pop
leave
lock
sub
cmovno
add
mov
or
out
fdivrp
lea
std
pop
sub
inc
inc
dec
pop
inc
loop
adc
add
inc
sarb
incl
aas
push
xchg
add
cmc
add
xor
pusha
movq
sub
jl
xlat
push
push
call
and
push
std
add
dec
jbe
nop
mov
fnstsw
rclb
and
adc
cmpsl
add
pop
movsl
and
add
call
insb
aaa
add
jp
pop
mov
clc
je
add
cmpsl
xchg
add
bound
dec
pop
adcb
test
inc
mov
movsb
loopne
xchg
fimull
pop
test
es
mov
das
mov
push
xor
test
es
inc
jne
test
mov
popf
out
dec
mov
or
push
or
mov
push
add
pushw
cmp
sub
sbb
mov
cmp
push
fdivs
add
cmpl
outsl
sub
imul
or
inc
movups
push
adcb
cwtl
sbb
jecxz
xor
add
push
es
sti
add
jae
ror
push
add
mov
repz
mov
mov
and
mov
push
ret
mov
cmp
inc
je
add
push
adc
out
pop
adc
add
mov
in
pushf
cmp
dec
fs
pushl
int3
andb
xor
leave
cmpb
roll
adc
ja
cmp
shlb
mov
push
cmp
add
orb
cmp
shl
hlt
add
push
rolb
daa
add
jl
movb
sub
pop
cmp
push
test
mov
ret
jmp
in
mov
les
dec
ds
add
xor
rclb
sbb
or
daa
push
xchg
push
call
mov
imul
rcl
lea
cmp
and
add
pushf
mov
pop
jo
pop
jl
scas
pop
cmpsb
orb
jmp
out
sub
jbe
in
push
pop
push
in
pop
cmp
loopne
cmp
inc
movsl
adc
add
cmp
jo
add
test
jns
cmp
stc
add
movsl
das
jne
add
jmp
xchg
pop
mov
sub
push
pusha
mov
scas
sub
pusha
dec
movsb
popf
adc
dec
add
roll
pop
add
or
movhps
test
cmp
cmpsb
adc
and
cmp
mov
les
clc
add
add
jl
add
push
cwtl
test
mov
sub
jl
adc
leave
and
mov
orb
incl
rolb
loop
cld
popa
in
test
add
adc
outsb
or
add
xor
push
sub
xchg
hlt
ret
and
sub
push
dec
fs
xor
and
or
add
dec
sub
add
push
sub
scas
bswap
xor
testl
divb
sahf
loopne
inc
andb
sarb
push
and
add
add
ret
push
fs
gs
mov
icebp
test
or
in
fadds
and
sbb
repz
inc
or
add
andl
xchg
lret
mov
and
mov
pop
dec
xchg
pop
fsub
shlb
sub
push
shl
jg
leave
fsub
ds
mov
dec
adc
add
push
xchg
in
ja
addb
pandn
add
adc
sub
in
cwtl
and
inc
xor
mov
imul
push
lcall
mov
or
clc
add
cmp
xor
add
mov
addb
mov
add
xchg
nop
add
mov
out
test
shlb
dec
lret
orb
imul
add
xchg
jmp
lcall
mov
pop
out
stc
cvttps2pi
or
dec
or
adcl
fbld
xor
add
fnstcw
add
or
add
mov
sub
adc
dec
enter
adc
pop
add
sbb
enter
lcall
lea
cld
adc
pop
or
xchg
cmp
sbb
es
sub
add
and
add
repz
je
and
aas
mov
xlat
xor
adc
and
dec
pop
xchg
aaa
insl
sub
outsl
incb
dec
sbb
addl
pop
fs
adc
xchg
pop
mov
add
fldl
icebp
call
cmpsb
add
jnp
mov
jne
add
and
mov
cmp
dec
stos
pop
dec
push
xor
addb
clc
add
dec
push
aaa
pop
bound
push
addb
jne
or
pop
ljmp
push
dec
mov
or
je
jo
ja
jg
test
sub
icebp
insb
or
jnp
or
mov
jg
jge
pop
arpl
je
push
jle
jmp
fcoml
or
push
add
inc
xor
pop
sub
mov
add
cmp
fldt
les
or
test
mov
mov
add
mov
pop
or
xor
and
dec
mov
fdivrl
bound
cmp
or
roll
add
or
bnd
dec
cmp
jecxz
push
add
pop
pop
aam
add
mov
insb
pop
mov
add
mov
mov
or
or
add
push
jo
dec
add
dec
xor
lock
pop
out
inc
fsincos
inc
pop
rolb
subl
int
dec
jge
je
jns
sub
ret
add
shlb
dec
sahf
jmp
add
hlt
lock
xchg
lahf
jno
or
or
or
adcl
cs
mov
lock
add
and
inc
sbb
daa
xor
jns
adc
loope
or
sub
inc
mov
cmp
add
xchg
and
mov
xchg
inc
push
cmpsl
pusha
adc
and
and
pushf
andl
add
cmp
inc
sub
jmp
add
jge
jb
pop
jmp
cltd
test
adc
jne
push
cmp
ret
pop
fs
inc
adc
sbb
jns
or
ret
mov
or
push
add
pop
je
mov
mov
add
sub
loopne
dec
push
int3
aas
enter
dec
sub
ret
pop
sbb
data16
xchg
push
imul
cmp
mov
or
push
addb
loop
add
xchg
movsl
scas
add
add
je
sbb
add
and
add
aaa
orl
test
mov
out
js
mov
clc
rcrl
jbe
add
or
icebp
adc
push
bound
roll
mov
and
cmpsb
fsubrs
js
addb
adcb
out
add
dec
mov
ret
add
pop
mov
mov
add
nop
enter
syscall
mov
lahf
fdivrs
jne
cmp
sub
add
add
es
mov
dec
rsqrtps
rcrb
sub
adc
or
testb
add
test
aam
scas
sti
movsb
jl
sbb
pop
pop
incb
mov
xor
or
or
and
jae
add
adc
sbb
jb
ret
push
sbb
sub
sbb
add
sub
sbb
jmp
test
mov
xchg
js
ret
jg
in
pop
cmp
add
lods
cmpl
add
jmp
dec
sahf
movsb
xchg
push
sub
dec
add
cmp
dec
pop
sub
fcoml
add
mov
xor
adc
or
jmp
dec
jmp
lods
cmpsl
imul
push
bnd
add
cmp
and
movl
cld
jmp
ss
sbb
xchg
xor
mov
ret
in
dec
sbb
psubb
adc
call
jmp
pavgb
mov
jge
jo
and
cmp
add
sbb
xchg
xlat
adc
sub
ret
test
dec
sbb
xchg
mov
mov
test
add
jl
sbb
and
pop
lahf
jne
imul
jge
pop
pop
cmp
lods
push
pusha
adc
rolb
xlat
cltd
xor
adc
cwtl
loopne
lock
or
add
call
dec
adc
add
jns
call
add
or
out
or
cmp
iret
add
into
fcmovnu
lret
fcmovu
add
loopne
jecxz
in
in
pop
or
push
mov
pop
push
shlb
gs
push
inc
push
popl
syscall
jmp
adc
enter
cmc
std
xlat
add
adc
xchg
pop
add
rep
incl
frstor
push
cld
inc
add
add
add
xchg
push
movw
or
nop
les
cld
push
cltd
cwtl
push
jb
decb
loopne
add
jbe
cmpb
jne
or
or
or
add
adc
jmp
add
and
jl
inc
push
add
push
add
test
cmp
pop
in
pusha
jnp
add
pop
rol
jl
add
cmc
add
mov
sbb
clc
mov
xor
cmp
push
leave
adc
sub
and
mov
enter
subb
out
repz
xor
inc
cmp
mov
jl
mov
jnp
shll
loopne
scas
call
enter
addr16
mov
add
imul
data16
mov
inc
jns
mov
add
imul
loope
sbb
add
mov
in
or
or
mov
insb
jl
or
fstps
add
jo
add
push
sub
pop
sbb
cmp
dec
push
sbb
add
cwtl
nop
mov
aaa
add
arpl
inc
adc
adc
add
out
shll
add
dec
xlat
xchg
fiadds
jbe
add
dec
add
mov
push
lds
shr
fwait
loopne
add
daa
repz
loopne
in
out
sbb
es
ret
sbb
dec
in
adc
pop
add
xchg
sbb
adc
push
add
add
loop
push
and
add
out
clc
add
je
mov
cmp
add
xor
dec
add
rorl
mov
push
inc
or
addl
sbb
aam
mov
adc
ret
jbe
jmp
sbb
nop
push
mov
xchg
adc
or
add
or
stos
mov
dec
xchg
stos
pop
inc
and
adc
test
les
test
add
loop
push
xchg
int3
adc
wrmsr
adc
iret
orb
in
pushf
pop
mov
or
icebp
xchg
adc
add
add
out
mov
jae
pop
sub
mov
sbb
xchg
add
pop
sub
jne
jl
add
mov
rorb
and
dec
shlb
adc
xor
xchg
jmp
enter
push
leave
ljmp
mov
push
add
add
mov
cmp
sub
sub
data16
and
cli
popa
pop
pop
hlt
pop
pusha
inc
mov
aas
sub
test
jmp
or
cwtl
addr16
add
clc
mov
add
jb
insb
fcoms
jne
pop
out
int
add
jl
add
mov
and
js
movd
js
add
fidivs
push
add
push
xor
je
ret
shlb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
test
jmp
jo
add
inc
mov
dec
jne
cmp
cmp
dec
add
pop
add
push
inc
xor
out
in
add
push
jbe
xor
es
aas
and
fdivrl
mov
sbb
and
cld
jo
jl
mov
or
loope
rolb
cmp
add
push
sbb
add
jbe
mov
push
insb
and
jne
loop
cmpsl
or
add
sub
cwtl
add
rcrl
add
mov
pop
push
add
dec
clc
jae
ss
push
add
das
push
mov
imul
cs
sub
xor
xor
mov
add
inc
hlt
mov
add
clc
mov
enter
lcall
sub
cmp
lods
push
inc
add
cld
sub
mov
mov
pushl
and
ret
or
add
mov
adcb
sbb
push
inc
add
pop
inc
outsl
jb
insb
popa
cmp
cmpb
jo
push
dec
rolb
add
popa
jae
push
add
imul
mov
add
jo
xor
mov
cs
mov
cmp
add
sbb
je
mov
add
hlt
jbe
xchg
push
add
pop
call
mov
jmp
mov
test
rolb
add
or
leave
dec
sbb
popl
jl
sub
loopne
stc
add
inc
gs
pop
pusha
fiaddl
mov
add
push
cld
push
mov
ror
stos
mov
nop
aas
fimull
gs
pop
hlt
imul
arpl
mov
add
pop
xor
jo
sbb
jmp
cmp
mov
rol
sbb
dec
jae
testb
or
cmp
clc
aaa
dec
jne
cmp
test
fxch
adc
fildl
sbb
ret
dec
add
push
push
cltd
and
sarl
adcb
add
repnz
clc
or
add
ret
pop
add
sub
enter
cld
notl
pusha
adc
cmp
pusha
lods
push
cmp
nop
rclb
or
rolb
into
movsb
cld
pop
add
adc
adc
jmp
lahf
xchg
popa
sub
push
push
push
add
cmpl
in
je
add
imul
and
movsb
or
add
or
pop
inc
lock
push
mov
inc
sub
lods
or
or
sbb
push
pop
and
dec
pop
daa
and
sbb
adc
call
add
pop
lods
mov
out
stos
push
push
call
adc
loope
jbe
push
imul
in
push
cltd
cmp
int3
aam
xchg
push
fistl
push
add
push
push
cmp
mov
rclw
pop
adc
add
push
push
or
mov
pop
cld
push
add
leave
shlb
cmp
popa
sub
or
nop
and
add
inc
add
add
xchg
push
jbe
movsb
add
loope
pop
sub
out
adc
xchg
and
or
mov
jbe
push
add
mov
and
add
inc
idiv
out
cmpsb
sldt
cmpl
cmp
orb
outsb
add
call
push
cmp
adc
test
push
mov
out
mov
dec
mov
into
cli
out
push
je
aaa
jg
add
jbe
pushf
add
ja
imul
ret
mov
loop
inc
out
and
js
mov
mov
sub
cmp
stos
push
push
ljmp
or
xchg
icebp
mov
dec
add
push
xor
fstpt
sbb
mov
sub
das
shll
rcrl
jl
inc
add
decl
mov
insl
mov
cwtl
aad
push
pop
add
inc
shrb
xor
add
lret
mov
jecxz
ss
lods
sbb
adc
or
add
jmp
push
nop
xchg
cmp
je
pop
mov
add
add
and
add
inc
cmp
add
or
dec
mov
or
and
rclb
inc
inc
add
fdivrs
jae
xor
ficoml
imul
inc
call
je
mov
imul
add
dec
fld
jns
push
popa
add
adc
mov
inc
mov
jmp
ja
jne
add
daa
and
xchg
push
loopne
adc
add
mov
roll
push
call
test
vpmadcswd
or
add
inc
ret
idivb
or
add
inc
and
cmp
push
push
push
mov
pop
add
sub
mov
push
inc
xor
xor
jne
and
or
or
pusha
sar
pushf
add
or
xchg
jne
bound
xor
fdivrp
and
push
push
adc
adc
push
lea
and
pop
lret
jecxz
dec
je
les
push
inc
pop
call
loop
addb
dec
das
xor
add
and
das
cmpsl
inc
add
shl
dec
xor
movq
inc
pop
sub
inc
push
sub
mov
adc
dec
jmp
pusha
add
les
orl
dec
add
cmp
adc
sub
add
push
pop
and
cmp
add
wrmsr
das
push
mov
es
sub
enter
leave
cmp
jmp
int
and
sbbl
xlat
aad
in
in
fdiv
push
std
or
fprem
push
daa
add
loopne
jmp
in
or
pop
and
adc
add
add
repz
push
cmc
loop
lods
dec
cmp
clc
popf
cmp
and
std
mov
adc
pusha
popl
add
je
xorb
add
pop
mov
arpl
cli
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
adc
cmp
sahf
or
stos
adc
fistps
ja
in
mov
jmp
add
add
cmp
dec
add
jo
push
or
je
cmp
cld
cmc
cmp
mov
push
scas
xchg
adc
push
add
or
mov
add
push
fstpt
sar
inc
fiadds
push
dec
xchg
sbb
and
add
sahf
mov
mov
add
or
nop
pusha
mov
sti
push
xor
je
push
push
js
inc
and
cmp
jle
inc
sbb
mov
test
shrl
jg
pusha
pop
add
mov
jge
les
movsl
mov
mov
sbb
jecxz
lods
enter
add
or
cmpl
mov
mov
and
sub
inc
rolb
mov
add
mov
je
incl
mov
sbb
cmpl
jne
mov
pop
cld
es
mov
and
xor
testl
inc
je
sbb
lea
mov
push
push
js
daa
and
add
cmpsb
pop
cmp
add
test
add
lods
sub
imul
pop
mov
adc
adcl
add
dec
push
mov
add
inc
pop
pop
incl
addl
jp
push
add
call
test
rdmsr
ljmp
pushl
sbb
and
aaa
xchg
movsb
add
pop
adc
add
sbb
leave
test
addl
add
pusha
ljmp
sbb
sbb
add
sti
and
out
sbb
phaddw
aaa
and
push
adc
mov
loopne
xor
cmp
in
or
and
dec
mov
mov
call
pop
sub
insb
pop
push
pop
mov
mov
inc
or
or
sub
and
mov
pop
pusha
cmp
push
xchg
pop
fistps
pop
inc
fdivrl
lds
push
add
outsl
sub
ret
dec
mov
jb
add
movsb
mov
or
lret
mov
mov
sti
xchg
add
pop
add
mov
jb
je
add
jae
jns
jo
cli
aas
add
jp
sub
addl
sub
scas
lret
add
insl
mov
push
nop
mov
mov
bnd
dec
fisttpl
cmp
sbb
dec
and
jl
lock
push
inc
lret
push
lea
in
add
pusha
inc
add
movl
push
or
pop
pminsw
dec
lret
xor
or
inc
inc
jg
pusha
cmc
inc
jo
mov
pop
daa
es
sbb
dec
cmp
pop
imul
outsb
xchg
dec
add
jle
sub
xchg
mov
pop
loopne
push
adcl
repnz
or
stc
add
jo
clc
xchg
pop
xchg
jle
add
mov
xor
jnp
cmp
clc
add
xchg
or
inc
cwtl
movsl
lock
pusha
outsb
and
or
mov
clc
icebp
ds
flds
or
push
and
addb
jge
sub
mov
sbb
add
push
push
adcl
add
icebp
test
add
xchg
into
mov
fwait
in
push
add
aam
dec
ds
push
test
loope
mov
addb
mov
loop
lock
push
sub
push
or
sbb
pop
icebp
inc
xor
lahf
add
rorb
es
and
add
add
mov
pop
sub
inc
push
in
and
push
xor
bound
and
or
add
xorl
push
jbe
sti
and
cmp
mov
inc
and
nop
push
push
adc
xlat
mull
imull
pop
mov
sbb
pusha
and
add
xor
xchg
add
add
add
lahf
and
je
xor
mov
jmp
add
cmp
in
call
jp
push
sbb
jbe
testb
cmpsb
test
aaa
popa
pusha
add
mov
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
xchg
dec
lock
lods
dec
xor
pop
lea
loopne
mov
or
popl
lret
imul
mov
aaa
push
xor
ja
add
ret
ljmp
pop
and
inc
dec
push
pop
test
pop
out
mov
fwait
sub
ljmp
add
sub
cmp
add
cmp
out
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
in
rorb
dec
cld
nop
cmp
add
inc
js
or
jno
sbb
push
cmp
add
jmp
add
add
lods
push
out
inc
int3
pop
add
mov
pop
sbb
es
jl
cmp
or
add
sarl
push
sbb
hlt
insb
xchg
xchg
ret
mov
add
mov
icebp
out
adc
add
sahf
pop
mov
sub
add
cld
dec
jl
ret
dec
ret
ret
add
cmpsl
iret
data16
stc
add
cmp
setb
push
xchg
cli
jmp
fbld
xor
cld
rolb
adc
jle
cli
aad
adc
repz
sbb
mov
dec
add
jne
or
dec
cli
out
add
popf
inc
mov
mov
xor
add
scas
and
jne
cli
dec
in
es
sbb
loopne
ja
push
xlat
mov
mov
inc
scas
xor
fsubrl
rorb
stos
xor
cmp
jl
mov
add
jmp
test
aam
leave
pop
fildl
adc
enter
repz
add
fimull
push
inc
sub
in
orb
add
loop
mov
call
add
in
sub
mov
jecxz
push
adc
pop
sbb
ret
or
dec
xchg
pop
xor
add
test
pop
adc
add
leave
cltd
or
push
mov
xor
dec
sbb
mov
test
sub
push
sarb
sbbb
mov
lods
adcb
or
jecxz
pop
push
push
dec
add
cltd
and
inc
sbb
and
jg
add
rcll
add
mov
cld
inc
push
mov
add
inc
test
cwtl
scas
cmp
push
mov
add
adc
mov
push
dec
jg
sub
dec
stc
or
jb
movsb
mov
in
cli
add
adc
iret
nop
aad
add
or
pop
pop
or
push
ljmp
adc
mov
in
mov
mov
dec
or
jmp
sahf
add
inc
daa
jmp
js
out
pop
add
sub
in
popa
add
sub
and
pop
xchg
ss
repz
push
add
aad
push
add
mov
pop
lret
add
mov
roll
push
cmp
dec
add
jno
std
cmpsl
push
push
lock
sbbb
add
mov
push
inc
lldt
mov
inc
add
and
test
sbb
xchg
and
mov
test
and
pop
clc
or
test
inc
cmp
inc
adc
dec
sub
mov
jp
imul
xchg
mov
pop
push
xchg
and
adc
jp
xchg
mov
sbb
xchg
popa
pop
pop
cli
or
jecxz
stos
shrb
ds
mov
cltd
mov
push
inc
add
lea
sbb
sti
call
or
add
sarl
stos
jo
lock
ficompl
leave
jbe
adc
addb
cmp
pop
push
cmp
dec
test
cmp
push
orb
in
out
mov
mov
pop
adc
push
nop
dec
xchg
loop
fldenv
cld
jmp
jge
inc
arpl
lea
xchg
pop
ret
inc
xchg
pop
xchg
add
mov
cltd
xlat
add
xor
andb
push
loop
nop
add
mov
pop
adc
aas
mov
sbb
cmp
in
add
dec
add
dec
jne
pop
test
jg
push
out
lahf
inc
pusha
and
iret
subb
mov
movsl
notl
inc
popa
and
xchg
or
pop
pushf
leave
inc
add
dec
mulb
pop
xorb
xor
addb
and
add
test
cli
add
push
add
pushl
add
movl
imul
add
inc
sbb
mov
adc
inc
add
adc
inc
loopne
ret
or
sub
addb
or
sub
inc
in
and
mov
jae
add
jno
leave
fimull
jne
add
sbb
stc
pop
and
lret
fchs
rolb
and
ljmp
mov
stos
pop
inc
das
hlt
dec
add
mov
and
lds
addr16
sub
into
test
push
jnp
and
fadd
xor
sub
cmp
stos
ja
cli
push
bound
push
xor
test
xor
push
sbb
mov
or
or
fs
add
push
scas
aaa
arpl
or
jno
add
mov
sub
fiadds
adc
or
add
lahf
call
cmpl
jb
subl
jne
jmp
add
pop
mov
add
andb
cmpsb
lock
movsb
dec
icebp
cmp
cmpw
subb
jne
add
mov
or
inc
jmp
call
dec
mov
add
pop
pop
lahf
pusha
cmp
lret
in
cmp
push
add
inc
or
ret
cltd
jo
cmp
mov
jle
daa
add
xchg
xor
pop
popl
call
fiaddl
cmp
sub
ret
xor
or
sub
sbb
fdiv
xor
lock
adcl
pop
pop
push
cs
lock
and
sub
das
sub
pushf
rcr
add
push
cmp
adc
dec
pop
add
pop
scas
inc
shrb
push
mov
mov
test
nop
jno
add
loop
repnz
dec
jmp
add
or
iret
call
add
rclb
push
fst
and
add
sbb
mov
out
clc
add
or
or
adc
jmp
sbb
aam
inc
push
daa
push
mov
push
add
push
imul
cwtl
inc
pushf
scas
and
inc
pop
push
std
add
popa
cmp
cld
out
adc
or
and
fadds
ffree
dec
daa
xor
add
stos
ljmp
inc
add
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
jmp
dec
sub
daa
xchg
test
inc
popa
adc
push
pop
xchg
aam
imul
cmpsb
popf
clc
xchg
inc
add
inc
arpl
dec
ret
inc
add
aad
gs
rorb
mov
add
xor
shld
sub
pop
ret
les
jns
mov
sbb
add
lret
sahf
jo
inc
jge
add
jo
fiadds
and
add
loop
imul
pop
push
out
into
xchg
fldenv
fsubs
dec
add
icebp
xor
mov
cli
cmpsl
pop
pop
dec
repnz
push
sbb
cmp
or
mov
dec
call
jp
dec
fbstp
or
push
lock
imul
sub
aas
cmc
popa
add
call
add
xor
cld
xor
pop
add
insl
call
mov
cmp
xlat
cmpsb
push
shlb
nop
lcall
mov
jnp
dec
sbb
cmc
sub
cmp
xlat
add
add
dec
lock
mov
pop
loopne
push
pop
in
push
nopl
or
mov
std
dec
fcoms
dec
imul
rolb
pop
arpl
popf
xor
rcrl
push
cs
add
arpl
add
insl
push
enter
mov
or
dec
add
xor
cmpsl
add
xor
mov
es
sub
scas
jge
push
mov
pop
add
push
pusha
andl
cs
or
aaa
add
and
sbb
aam
dec
psubusb
push
shll
clc
pusha
add
add
out
add
and
incl
loope
movsl
inc
icebp
or
add
pop
pop
gs
dec
clc
inc
paddusw
push
or
lret
add
lret
inc
pop
insb
xor
cmp
add
test
clc
rorb
hlt
dec
pop
xor
cmpsb
dec
add
push
push
mov
lret
inc
int3
mov
clc
pop
jl
and
xchg
add
ficompl
sub
in
add
stc
adc
cmpl
push
imul
sub
add
mov
lods
or
cmp
lods
or
or
hlt
add
sbb
or
int
adc
sbb
pop
pop
cmpsb
and
test
pop
mov
addl
mov
loopne
push
hlt
test
add
mov
loope
sbb
popa
or
hlt
inc
push
lahf
add
je
pop
cwtl
insb
test
insl
sarl
mov
call
leave
cmp
cmp
into
orl
add
jne
add
out
call
add
mov
xlat
push
mov
cld
add
pop
orb
sub
or
push
fs
mov
cmp
int3
jnp
add
inc
cmp
popl
push
add
xor
dec
xor
mov
loope
je
cmp
ret
test
mov
loop
add
iret
aam
cmp
add
inc
jo
add
dec
movb
inc
inc
dec
lods
inc
and
cmpsl
aaa
or
add
test
and
push
pop
call
add
sub
fs
cmpsb
mov
jb
xor
ucomiss
in
shl
inc
xorb
outsb
addr16
popa
out
jno
rcl
insl
cmc
inc
inc
adc
add
cmpsl
nop
jge
jecxz
push
add
jmp
movb
pusha
out
add
icebp
loopne
das
sbb
add
lret
push
adc
jno
add
aam
and
enter
push
and
call
push
shlb
outsl
or
dec
sub
xchg
movsl
add
pop
sbb
dec
jmp
imul
push
xchg
out
movsb
int
and
inc
add
repz
add
sub
sbb
les
mov
and
scas
mov
or
jae
out
into
add
insl
dec
add
push
and
jne
sub
add
adc
pusha
or
mov
push
dec
scas
push
jne
mov
popa
in
std
push
sti
rolb
imul
es
inc
cmp
and
dec
loopne
add
data16
adc
gs
fisubs
lahf
jmp
mov
movsl
and
mov
inc
cli
mov
cmp
fmuls
hlt
cmp
je
push
dec
shll
cwtl
lods
add
sub
add
test
mov
cmp
lahf
in
inc
mov
mov
push
add
iret
movsb
pop
enter
lods
cmc
addl
rorl
cmp
cltd
add
mov
dec
push
add
push
cld
inc
repnz
add
sub
add
aas
cltd
sbb
fisubl
cld
add
je
les
add
add
inc
movb
inc
or
js
pop
add
in
clc
icebp
or
mov
stos
sub
iret
dec
pop
xor
jle
add
fdivrl
push
ljmp
pop
push
cmp
mov
xor
das
mov
ficoml
add
lea
rolb
add
lock
clc
or
mov
repz
mov
nop
aad
imul
in
stos
pop
add
xchg
xor
pop
dec
xor
imul
lock
pop
mov
in
pop
orb
mov
inc
dec
mov
add
push
adc
test
cmp
or
and
cs
mov
dec
cmpb
add
movl
add
daa
push
sbb
adc
adc
pminsw
cwtl
or
in
pop
push
and
xchg
or
mov
xchg
lods
mov
adc
pop
push
cwtl
push
inc
lock
lods
fcmove
add
cmp
mov
jle
mov
scas
into
sbb
sti
mov
call
leave
and
jae
xchg
xchg
or
cmp
push
mov
inc
inc
popa
lea
or
sbb
jnp
add
mov
dec
add
sbb
or
and
subl
sub
dec
cmp
sub
shll
addps
push
rcrb
push
orl
cmp
pop
add
dec
jle
adc
add
jne
push
cli
mov
imul
and
les
jmp
and
add
fldt
lea
adc
aam
cmp
lret
int3
add
sbb
jno
and
fmuls
add
bound
sbb
mov
nop
sbb
adc
scas
or
pop
dec
pusha
sbb
ret
push
push
pushl
push
add
sbb
pop
push
push
and
scas
popa
idivl
add
loop
sahf
and
pop
add
push
addb
add
ja
push
test
mov
pop
loope
and
pop
fisttps
movsb
sub
shlb
in
push
jbe
add
aas
pop
add
cmpl
sbb
jae
mov
push
int3
test
add
inc
xor
ret
movsb
xor
or
inc
mov
sbb
add
inc
shlb
push
add
or
mov
movb
incl
stc
stos
sbbw
nop
add
inc
dec
fiaddl
aad
push
mov
out
pusha
dec
dec
out
inc
cld
add
popf
icebp
pop
cli
adc
dec
shlb
int3
dec
pop
adc
sub
add
add
jl
mov
add
inc
cmp
je
pop
or
jp
out
jmp
dec
sub
add
into
leave
push
jne
add
dec
push
test
pop
jae
ret
xorb
in
adc
add
jne
icebp
or
mov
dec
imul
lock
jae
mov
or
mov
push
jl
add
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
pop
pop
jmp
add
add
and
push
daa
or
jne
push
lahf
push
vaddps
sub
dec
mov
bswap
ja
inc
pop
jno
orb
cmp
inc
jle
inc
jmp
mov
cmpsl
mov
inc
dec
mov
pop
aad
add
int3
pusha
incl
ret
jae
sbb
leave
and
and
in
sub
add
mov
ljmp
dec
sbb
mov
lret
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
push
jg
sub
in
rolb
js
adc
mov
pop
mov
subl
add
pop
jle
jnp
cmp
movb
push
negl
inc
outsl
add
mov
mov
or
or
adc
add
cmp
inc
sub
inc
fiadds
lret
adc
sbb
ljmp
ret
shll
push
mov
je
scas
repnz
cvtps2pi
add
fs
push
sub
mov
add
pop
add
call
adc
in
jb
cmp
pop
or
add
sbb
call
add
cmpb
fs
mov
lahf
adc
nopl
test
dec
jmp
or
clc
jl
jmp
push
mov
add
cmp
sbb
mov
dec
nop
jle
pop
das
mov
push
add
aas
aam
sub
jl
cmpsb
dec
inc
das
sub
daa
jns
pop
inc
sub
sbb
add
mov
dec
mov
or
inc
adc
test
sub
imul
add
lods
add
dec
pop
sbb
and
pop
jp
add
shlb
aam
xor
movsl
push
add
fsubs
orb
mov
mov
or
call
outsb
or
jnp
pop
add
adc
js
cld
jne
or
cmp
mov
out
adc
push
jbe
lret
mov
in
mov
push
or
call
lds
pushl
mov
mov
cmp
fs
sub
pop
xor
jno
adc
or
or
cmpsb
pusha
dec
cwtl
insl
jl
jp
orb
lret
fs
xor
cmp
sbb
pop
jecxz
cmp
and
cmp
enter
jb
cmp
sbb
add
xchg
mov
mov
lods
cmp
mov
enter
nop
jb
cmp
and
js
je
jo
insb
dec
cmp
and
pop
add
push
jb
pop
cmp
inc
mov
or
adc
and
add
sbbl
push
and
enter
inc
jb
cmp
sbb
xor
xor
sub
add
enter
jb
sbb
mov
rolb
shl
or
cmp
ret
sub
adc
clc
adcb
lahf
add
push
out
js
xlat
xor
dec
pop
xor
sub
mov
enter
xor
call
add
in
arpl
and
lock
or
sbb
xchg
mov
cmc
mov
clc
cmp
xor
and
and
add
icebp
mov
jb
cmp
sbb
sub
add
out
out
call
jmp
mov
jmp
pop
xchg
daa
add
in
jb
cmp
xor
inc
shlb
shll
call
enter
jb
or
ficompl
sub
add
fstl
rolb
sarl
sbb
add
les
lds
in
jb
or
sbb
and
mov
xchg
into
leave
iret
and
cmp
add
mov
mov
mov
mov
mov
and
mov
cmp
mov
and
cmp
orl
xchg
test
shrl
stc
loopne,pn
dec
ds
cld
add
repz
xor
or
cs
adc
mov
hlt
xchg
add
add
or
arpl
dec
jo
scas
mov
cmp
pop
pop
orl
call
dec
inc
pushf
cmp
add
loope
adc
pusha
test
bound
loopne
or
dec
jne
je
data16
insl
outsl
jb
cmp
pop
shrb
inc
jo
jmp
or
outsb
mov
sub
push
hlt
test
orb
lock
pop
fcomps
sbb
pop
popf
and
or
push
adc
adc
push
sub
or
dec
andb
out
cmp
inc
imul
mov
sbb
sub
xchg
rclb
adc
gs
negb
adc
add
dec
jbe
add
insb
outsl
ja
je
mov
fs
add
push
mov
sbb
or
xchg
pop
sub
imul
and
fsubrp
in
xchg
mov
and
xorb
nop
mov
and
sbb
popa
out
inc
cld
push
nop
das
push
push
sub
pop
mov
inc
inc
pop
mov
push
inc
outsl
jmp
fst
add
ror
movl
scas
fs
inc
call
or
outsl
mov
push
lods
cmp
sub
inc
pop
arpl
push
mov
insb
or
mov
push
imul
dec
inc
fldl
push
inc
lea
push
lock
or
arpl
andl
adc
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
scas
pop
add
rclb
or
cmp
addb
dec
outsl
lea
aad
pusha
in
aam
jns
aas
add
jge
and
mov
xchg
pusha
rorb
xchg
push
lods
mulps
push
andl
stc
xchg
scas
movlps
popa
rorb
movsb
cmp
jo
lcall
dec
push
and
pop
mov
pop
pop
add
add
adc
jge
cmp
or
add
adc
js
das
add
push
mov
call
dec
add
xchg
lods
dec
imul
pop
inc
and
insl
sub
cmpsl
sub
iret
das
mov
jno
cmc
cmp
mov
pop
sub
mov
add
fiadds
jo
mov
iret
jmp
sarl
aam
scas
add
jge
mov
cmp
dec
add
call
sub
jns
mov
daa
jne
stc
pushf
dec
cmp
add
addl
outsb
xchg
int3
or
fwait
imul
sarb
rsqrtps
jle
add
cmpsb
je
add
mov
mov
movsl
cli
jl
std
lea
mov
add
add
mov
push
mov
sub
or
movsb
int3
jbe
add
fadds
mov
inc
ds
arpl
mov
add
mov
sub
rclb
lock
mov
xorb
pop
loopne
pop
jmp
jbe
hlt
add
jge
mov
call
dec
xchg
sub
xor
insb
add
sub
push
inc
cmc
sahf
jae
push
addr16
xor
outsl
cltd
sbb
and
jno
add
mov
add
mov
push
dec
notb
sub
and
add
sahf
cmp
and
add
dec
in
hlt
ja
add
xor
bound
lock
leave
mov
xchg
or
daa
push
add
je
push
cmp
add
mov
sub
lret
push
aas
inc
jmp
add
out
aam
lock
stos
cmp
in
mov
sub
dec
add
hlt
imul
popf
sarl
cmp
pusha
or
pushf
test
shlb
xor
inc
bound
or
dec
push
jge
push
aaa
stos
xor
pop
pop
add
dec
leave
dec
jae
add
add
mov
push
aam
mov
mov
xor
data16
inc
stos
imulb
dec
and
enter
mov
je
push
cmpl
fwait
pop
and
dec
pop
test
mov
into
addb
fadds
unpcklps
push
test
sbb
push
out
mov
mov
pop
jg
mov
add
jmp
mov
sbbb
testl
rcrb
add
jne
dec
popf
loope
jg
idivb
add
and
mov
mov
cwtl
add
es
mov
add
in
push
pop
add
loope
xor
sbb
por
mov
mov
pop
cmp
and
sbb
and
push
lahf
popa
call
or
hlt
and
dec
cld
cmpl
mov
imull
mov
or
mov
sbb
fildl
push
cmp
outsb
out
test
shl
xor
or
test
xor
nop
sbb
mov
xor
inc
in
sti
clc
nop
add
lods
xchg
xchg
loop
add
subl
adc
push
enter
mov
sbb
lret
inc
add
psubsw
roll
sbb
inc
call
aaa
and
std
and
outsl
das
out
cmp
cmp
dec
fisubs
aas
push
pop
push
lret
cmp
repz
fwait
lret
aas
inc
inc
andb
pop
scas
push
push
add
lret
dec
das
add
jp
add
inc
sub
sub
fstps
pop
loope
stos
out
xor
xor
jmp
ficoml
mov
pop
mov
add
cmp
xorb
xor
inc
shr
mov
inc
clc
test
add
cli
daa
pop
inc
ljmp
mov
xchg
jl
mov
inc
enter
lods
and
nop
xor
jp
xchg
shlb
add
or
dec
push
inc
mov
pmuludq
dec
sub
je
add
loopne
icebp
add
push
lea
add
sbb
inc
add
flds
pop
orb
in
lea
adc
add
stos
dec
and
int
sub
adc
sub
inc
shlb
sbb
inc
or
adc
into
mov
insb
in
add
jge
repnz
push
pop
jbe
add
rorl
add
test
popf
aas
dec
add
mov
jp
add
ret
testl
icebp
das
shlb
inc
and
divl
add
cmpsl
fsubrs
lea
daa
repz
and
pop
sub
adc
rclb
movsl
xchg
pop
jge
push
inc
in
push
hlt
or
jno
add
cmp
inc
mov
inc
je
and
loopne
aas
sub
add
jmp
xor
mov
xor
cmp
xor
lods
call
mov
cmp
or
xor
aas
and
fists
mov
add
sub
xchg
fcoml
shll
mov
pop
mov
add
jae
push
fistpl
cmpb
lcall
dec
shl
in
xchg
lret
or
jg
mov
push
mov
call
addb
das
cmp
je
or
xor
jb
add
ja
imul
xor
cmp
je
adc
sub
add
push
sbb
sbb
sar
adc
push
adc
xchg
push
je
dec
fsubrl
sarl
jae
enter
jne
add
push
loopne
in
mov
and
popf
addb
jbe
cmpsb
pop
adc
in
xchg
pop
add
xor
xor
and
jno
int3
inc
xor
add
call
loopne
pop
dec
fdivrl
sub
stos
xchg
add
sub
pop
data16
adc
incb
dec
pop
push
popa
cmp
je
jg
cmp
sub
pop
add
jne
mov
testl
je
dec
sbb
orl
pop
stc
call
mov
sub
push
add
mov
lea
lods
add
add
and
add
and
sbbb
dec
push
push
push
sbb
dec
mov
fisttpll
jb
lea
mov
push
mov
dec
jbe
cmp
js
add
xorb
add
movl
repnz
cmp
mulb
jns
pop
fadds
call
inc
lahf
scas
add
pop
jne
ds
add
sarb
add
mov
mov
pop
and
lahf
mov
cmp
jmp
xchg
js
out
inc
sub
leave
and
mov
dec
sbb
lods
mov
mov
shl
fildll
sbb
lock
sbb
push
inc
jb
or
xor
divb
mov
dec
loopne
loope
test
pusha
push
sub
xor
jecxz
sub
jo
lret
mov
inc
push
add
loopne
or
lds
orb
dec
sbb
add
jg
push
sbb
add
inc
repz
ljmp
adc
jg
cwtl
pop
add
cmp
jbe
dec
mov
jne
mov
push
add
sbb
sub
subb
add
push
push
pusha
repnz
iret
call
dec
dec
shll
ret
push
add
mov
mov
and
or
mov
sub
arpl
daa
popa
stc
xchg
pusha
sbb
or
into
call
or
add
add
in
xor
cld
xchg
push
or
push
dec
sub
movsb
mov
add
loopne
lock
dec
add
add
scas
rcll
sub
add
and
sbb
in
jne
add
loopne
lea
cwtl
inc
jnp
or
inc
add
rolb
clc
xor
das
add
pop
inc
xor
add
test
pop
jge
sub
push
adc
arpl
mov
push
sbb
jns
setb
inc
cmp
xor
and
mov
add
out
ret
push
xor
inc
add
pop
in
inc
add
jg
add
movsl
outsl
leave
popa
push
pop
cmc
add
mov
sub
cmp
add
add
or
push
popf
int
dec
pop
adcb
push
or
add
pusha
mov
call
fcoms
jl
movb
outsb
jnp
sbb
jae
or
cmp
inc
orl
mov
faddl
in
mov
rolb
sahf
dec
pusha
pop
sbb
ret
roll
xor
or
mov
fdivs
rorb
push
fwait
cmpsl
add
das
inc
pop
xor
lret
sub
movsb
dec
jo
fisttpll
hlt
es
cltd
jp
cmpsw
pop
jns
add
iret
cmc
adc
or
adc
daa
add
and
addr16
jp
inc
hlt
rclb
add
clc
pop
sahf
xchg
and
mov
addb
xor
cltd
add
or
mov
mov
cmpsl
mov
adc
xchg
inc
sbb
cltd
or
iret
daa
cld
sub
push
add
icebp
imull
pop
xchg
or
test
enter
and
mov
adc
mov
mov
pop
xchg
sbb
fidivs
add
icebp
add
je
xor
add
sub
clc
test
insb
cli
add
dec
in
cmp
dec
pop
add
cmp
add
xchg
loopne
lea
out
xor
lds
popf
mov
jb
add
jle
es
popa
add
or
sti
add
sbb
clc
cmp
sbb
pop
adc
jle
jae
andb
ds
jle
xor
in
mov
cltd
mov
icebp
insl
lds
rorl
sub
pop
inc
fwait
mov
add
jl
or
leave
jne
loope
add
adc
je
mov
pusha
xchg
fcoms
jl
and
sarl
imul
cli
hlt
add
add
dec
repnz
mov
and
push
incb
and
test
jg
pop
lret
adc
push
aad
or
add
jmp
cmc
add
xchg
lock
test
mov
push
add
jl
jg
xchg
imul
adc
xchg
add
lods
mov
xchg
cltd
sbb
add
or
out
dec
js
cmp
hlt
add
ds
sub
aaa
jns
jnp
add
sub
loopne
add
repnz
mov
push
pop
pop
adc
push
cltd
mov
cmpsb
add
je
pushf
dec
push
pop
dec
mov
pop
in
mov
cmp
jb
insb
or
jmp
fisttps
loope
cltd
cmp
insb
add
es
hlt
mov
and
inc
les
adc
pop
xor
push
or
push
shlb
mov
mov
sub
cmp
test
cld
mov
out
pop
inc
dec
add
cmp
add
cmp
lds
sub
and
pop
fstl
lret
dec
ss
push
push
inc
pop
repnz
add
adc
das
inc
push
repz
add
mov
and
push
ss
and
add
mov
cltd
scas
jo
inc
sar
add
fidivrl
repnz
mov
xchg
add
push
mov
lret
xchg
pop
mov
cmpsb
mov
add
push
sub
lods
and
jns
push
adc
imul
add
call
add
cwtl
idiv
xor
in
mov
add
mov
in
and
loopne
add
je
xor
inc
pop
lock
xor
rclb
and
add
mov
jmp
add
mov
inc
add
cmp
je
mov
nop
cmp
mov
mov
hlt
js
push
sub
add
jne
fists
lahf
inc
das
cmp
sbbb
dec
out
mov
test
bnd
aad
movb
push
je
cmp
jecxz
xor
pop
in
push
test
and
pop
mov
ficoms
mov
popa
clc
outsl
mov
add
rcll
roll
test
push
add
jae
xchg
add
repnz
test
ret
scas
into
icebp
and
add
insl
mov
or
push
add
inc
mov
xchg
and
jecxz
cmp
push
mov
mov
dec
pop
sub
subb
adc
inc
add
and
or
jne
or
orb
or
push
add
aas
add
lods
push
xchg
and
cmp
jne
push
xor
les
add
pop
aas
mov
xor
add
popa
dec
adc
int
rolb
xchg
adc
nop
sbb
ficoml
add
hlt
testb
pop
daa
lahf
icebp
sbb
xorb
jmp
xchg
add
in
push
and
add
insb
sub
push
aam
cmp
pushw
inc
subb
jg
in
and
shrb
or
sub
jp
je
xor
push
and
rcrb
inc
adc
dec
mov
add
arpl
jle
push
scas
add
pushf
jns
les
adc
dec
fadds
sti
in
fsubrl
pop
jns
or
cmpl
jl
or
push
sbb
call
aam
out
sub
adc
add
adcb
test
pop
sub
fs
dec
loop
addb
add
mov
add
add
jae
push
repnz
mov
push
add
cmpsb
dec
pop
pop
add
xor
ljmp
and
mov
jne
lock
dec
ljmp
dec
nop
inc
add
push
cmp
xchg
sub
sbbb
add
scas
cld
sub
or
jae
ljmp
add
idivl
add
pop
sbb
or
add
ss
or
cmc
adc
test
je
xor
test
mov
pop
mov
rcrl
jmp
or
sbb
lods
imul
scas
ja
add
leave
lods
sub
add
mov
mov
iret
xchg
xchg
ds
sbb
dec
add
cmp
and
adc
sub
fcoms
sub
and
dec
mov
mov
out
cmp
sbb
xor
xchg
xchg
pop
sub
test
sub
sbb
pop
addb
out
je
icebp
int
add
cmp
out
imul
fcomip
push
add
scas
and
add
sub
add
and
leave
push
or
pop
jg
mov
loope
jne
jmp
sbb
adc
add
mov
call
add
jg
je
jnp
and
arpl
jne
inc
add
hlt
push
xor
pop
shl
jecxz
pop
or
jge
sahf
jne
dec
mov
mov
ljmp
push
or
inc
xchg
and
jne
enter
jmp
adc
sbb
mov
inc
mov
test
sar
imul
adcb
rcll
pop
call
adc
xor
cmpl
push
push
or
push
mov
pusha
add
shlb
call
jg
aam
xor
jnp
push
adc
sbb
pop
xor
push
in
jns
add
test
add
push
jne
sub
mov
jge
xchg
push
jns
pop
and
push
popa
test
cmp
cmp
inc
pop
xchg
das
mov
jae
out
xchg
add
mov
into
push
jnp
add
jno
or
fwait
cli
jp
dec
inc
inc
movsb
sbb
neg
roll
and
sti
mov
imul
add
shlb
and
sahf
psubsb
pop
out
and
mov
stos
xchg
dec
pop
inc
cld
dec
push
sub
add
push
add
js
xchg
add
ljmp
add
sub
lds
nop
mov
xchg
imul
inc
jne
dec
clc
push
add
cld
std
test
add
and
cwtl
loop
adc
jb
shrb
xorl
mov
cmp
inc
and
pop
daa
pushf
imul
ja
inc
dec
das
push
out
mov
push
or
add
add
fcoml
and
sbb
test
adc
push
pop
lods
mov
por
add
cs
jo
mov
dec
in
mov
jns
add
icebp
sbb
pop
xchg
int
and
adc
jns
mov
sbb
xchg
sarb
in
clc
sti
pop
cwtl
lock
das
fdivrs
add
shlb
pop
pop
in
in
hlt
sub
fistpl
das
sarl
insb
lret
add
mov
pop
add
xor
jmp
pop
mov
add
enter
pop
lock
cmp
xor
add
add
mov
inc
addb
add
sub
jae
xchg
add
nop
mov
add
jle
sbb
add
pop
or
add
sub
fnstenv
movsl
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
jge
push
add
mov
js
add
out
cmp
dec
test
add
sub
inc
or
cltd
add
bound
add
jl
xchg
mov
jnp
test
icebp
or
adc
dec
pop
jl
or
add
sbb
and
sti
jg
fnstenv
clc
cltd
add
sub
pop
ds
add
sub
je
sbb
add
push
or
jbe
les
pop
push
push
sbb
or
push
and
js
clc
push
push
inc
pop
or
jle
filds
ret
xchg
outsb
cwtl
cltd
pop
adc
scas
xor
add
add
add
les
cmp
and
addr16
add
call
mov
mov
mov
enter
dec
lds
mov
sub
stos
pop
pop
jo
xchg
add
mov
dec
or
jecxz
ret
enter
add
mov
lock
adc
mov
add
mov
ja
cmp
pop
cld
cltd
xor
sub
add
add
sarl
add
jg
fdivrs
cmpl
loopne
bound
adc
pop
roll
push
adc
dec
loop
xor
add
lahf
roll
cld
movb
fsub
addl
fcmovb
adc
add
dec
out
add
dec
mov
mov
ret
jnp
shl
leave
sub
pop
shl
fiadds
fbld
dec
leave
add
or
adc
fwait
add
or
add
out
dec
dec
xlat
pusha
movsb
add
mov
add
sbb
inc
fwait
mov
loope
hlt
push
push
imul
xlat
jno
xor
or
dec
or
inc
int3
and
add
pop
ljmp
sbb
cmpsb
pop
jmp
sbb
inc
push
jb
inc
and
add
cs
jge
or
shll
adc
scas
hlt
lods
adc
andb
and
je
hlt
add
pop
mov
adc
sbb
lock
ljmp
adc
cli
andb
pop
jo
add
popf
cmc
push
pusha
jno
pop
dec
adc
push
add
sub
xchg
loop
inc
jecxz
pop
repnz
test
push
aad
sbb
or
cmp
cmp
sbb
jle
and
add
mov
nop
or
loopne
adc
mov
movsl
mov
push
jo
cmpb
cltd
jmp
add
inc
sub
push
enter
xchg
andb
pop
jmp
lea
xor
or
add
test
roll
lahf
fsubl
addb
pop
add
lret
push
fcomps
xchg
popa
add
sub
ja
jbe
jae
add
test
test
add
clc
lahf
adc
inc
xor
jb
les
jae
mov
add
push
and
inc
ret
or
gs
or
add
orb
lock
push
shr
pop
test
dec
testb
and
pusha
incb
jnp,pt
cmpb
je
add
dec
sub
sub
inc
add
mov
sbb
pop
loope
or
mov
add
and
cmp
mov
and
ret
or
je
lret
mov
cmp
push
push
frstor
jge
les
popa
repz
enter
add
dec
push
sbb
test
and
decb
or
lldt
pop
incb
rcrb
sub
or
dec
add
mov
adc
ret
pop
imul
cs
les
push
sbb
call
int3
lret
pop
lea
lds
sti
jl
cwtl
or
cmp
inc
fdivrp
adc
daa
dec
mov
pop
mov
loope
orb
mov
bswap
fdivs
int3
adc
or
add
and
push
aas
xchg
inc
push
jl
jne
dec
xchg
mov
xchg
jnp
test
mov
sub
frstor
xchg
fcoms
sahf
jb
cvtps2pd
add
xor
add
pop
jnp
lods
adc
orb
sbb
aas
loopne
mov
jno
add
mov
sbb
dec
and
add
inc
rcl
fsubrs
data16
add
or
inc
into
adc
nop
add
popf
push
roll
inc
inc
mov
sahf
jnp
das
pop
or
shlb
or
adc
add
mov
cmpsl
popl
push
movsl
xchg
inc
cli
loopne
add
add
lods
outsl
add
insb
nop
jns
push
stos
add
xchg
pop
xor
xchg
movsb
in
stos
xchg
add
mov
adc
fdivrs
push
push
das
rcrb
add
jle
xchg
cmp
add
add
hlt
test
inc
lock
test
add
rclb
jne
add
and
nop
gs
add
jns
add
mov
add
lods
gs
mov
lds
mov
roll
jns
or
mov
jmp
insb
jo
or
pushf
cltd
push
sbb
test
push
dec
jp
cmp
cmpb
sub
or
or
pop
jne
xchg
cmp
popf
and
pop
mov
add
or
daa
add
jp
les
or
xchg
ds
sahf
add
and
inc
jmp
jg
add
scas
js
jp
pop
add
mov
inc
lods
and
pop
loop
movsb
add
sub
aam
mov
or
add
push
clc
outsb
jge
jbe
sbb
std
jb
dec
stc
shrb
test
add
loop
lahf
movsb
frndint
push
mov
mov
add
add
jne
push
add
movsb
test
stos
fs
fidivrs
xor
loope
mov
inc
cwtl
xchg
xor
dec
push
adc
ret
push
add
mov
mov
insb
xor
add
cmp
sti
add
lock
mov
ljmp
rcrl
mov
aas
mov
call
loop
sub
add
pusha
jle
jmp
mov
aad
imul
xor
add
lcall
pop
lds
test
rorb
mov
push
mov
js
jmp
ljmp
and
inc
enter
add
jg
push
rorb
fcompl
xor
or
pop
add
fiaddl
enter
xchg
lock
nop
lods
movlps
addl
mov
aaa
cli
dec
pop
les
fistps
lods
mov
add
adc
mov
add
out
sbb
or
cmp
rcrb
add
imul
add
sbb
daa
jne
push
enter
std
jns
add
pop
and
push
and
sbb
psadbw
adc
pusha
cmp
nop
out
add
push
jmp
or
popf
jns
pop
lds
mov
call
inc
rolb
cs
and
adc
and
pop
adc
mov
lods
adc
call
inc
and
xor
mov
push
popa
into
dec
lock
add
add
mov
cli
fisubrs
add
out
cld
and
dec
inc
cmpsl
add
rorb
xchg
pusha
popa
adc
sbb
mov
xabort
lret
cmp
es
inc
mov
add
test
add
or
sarb
lea
cmp
movsb
xchg
mov
push
xchg
sbbb
add
or
nop
test
das
repz
or
dec
and
add
mov
mov
inc
mov
and
icebp
add
xchg
or
out
inc
jle
push
push
bound
add
and
add
jmp
rcrl
inc
add
jp
pop
in
sub
fmull
add
xlat
adc
lods
nop
mov
jb
fs
mov
outsb
add
mov
and
loop
in
testb
test
jecxz
jmp
addb
and
paddd
cmp
mov
pushf
and
clc
jbe
shrb
add
sbb
test
add
and
arpl
cmpsl
add
xor
fildl
call
jbe
aas
ja
loope
fucomp
je
clc
jne
icebp
push
adc
and
mov
xchg
and
int3
add
add
sbb
add
xlat
push
push
std
mov
mov
jo
add
xchg
mov
mov
push
jns
sub
rcrb
dec
je
or
psubusb
jb
jmp
mov
ja
and
pop
xor
adc
subb
movl
outsl
mov
add
repz
daa
nop
dec
push
add
cld
call
popf
or
xchg
or
jb
pop
roll
and
dec
push
mov
sub
outsb
sbb
add
push
rorb
jge
inc
hlt
clc
xchg
subb
push
loopne
mov
mov
mov
popf
dec
into
mov
fcmovnb
or
xchg
aad
add
pusha
sbb
dec
mov
xchg
fidivs
insl
add
mov
xor
add
shll
sbb
lcall
nop
or
mov
mov
cmp
clc
pop
sbb
add
inc
push
bound
add
daa
jmp
out
fnstenv
aaa
in
inc
sub
push
jmp
push
les
inc
mov
fs
add
jne
add
or
inc
addr16
call
mov
jns
mov
mov
push
fmuls
sbb
mov
rolb
dec
icebp
fisttps
add
sbbl
add
xchg
movsl
or
jmp
add
sbb
push
call
dec
and
es
lock
add
movsl
mov
mov
cmpsb
in
mov
xchg
movsb
insb
data16
hlt
mov
push
dec
in
adc
xchg
xchg
mov
add
push
mov
or
mov
les
sahf
in
adc
and
shlb
push
sub
pusha
add
fsubrl
lea
pusha
imul
cwtl
push
test
loopne
movsb
xchg
repz
test
sub
sbb
and
cmpsb
cmpsl
leave
sbb
arpl
mov
add
mov
std
cmp
jmp
stos
pop
arpl
dec
dec
push
add
rolb
add
or
sbb
sub
and
pop
test
cmp
push
nop
inc
add
pop
xor
sbbl
je
loopne
add
inc
push
cli
bound
imul
into
sub
rolb
inc
mov
fisubrl
mov
xorb
and
les
cmp
or
jb
add
test
mulb
dec
push
std
push
pushf
jg
adc
add
or
add
mov
stos
cmp
add
pushf
inc
mov
cmp
inc
sahf
dec
fnsave
add
mov
cmp
or
push
or
es
add
mov
mov
mov
xor
test
fdivs
int3
inc
fsubrl
pop
mov
pop
hlt
and
adc
dec
cld
cmp
xchg
mov
push
add
dec
xor
nop
add
shlb
jo
test
add
movsb
or
inc
fdivrs
or
fdivl
loopne
lock
cmp
add
xor
sarb
pop
pusha
mov
mov
outsb
add
jmp
mov
dec
pop
cld
add
test
jl
mov
or
or
add
sub
add
dec
pop
or
inc
test
jne
add
xchg
inc
push
cmp
inc
fildl
xorb
ret
cmpsl
popa
add
faddl
pop
dec
in
sub
add
add
pop
test
rorl
xchg
testl
add
pop
fistpll
gs
test
jle
jp
sub
lods
pop
dec
jge
cmp
inc
add
sbb
adcl
add
inc
xor
push
out
mov
mov
dec
pop
daa
mov
shll
sub
push
inc
mov
jmp
jns
add
imul
sbb
xor
pop
lock
add
mov
inc
add
movsl
leave
dec
in
enter
add
jle
xchg
int3
daa
cs
add
and
and
inc
lock
pop
add
mov
fsubrs
mov
pop
inc
xchg
or
or
add
cltd
ror
cmp
add
inc
outsl
push
in
fstpl
bound
sbbb
push
xchg
mov
cmc
ljmp
popf
sub
fs
adc
add
adc
outsb
lock
sti
push
sub
inc
rol
add
sahf
sub
ljmp
add
push
pop
bound
in
js
jge
xchg
jb
test
lds
mov
cltd
stc
aas
cmp
test
outsb
fdivrs
mov
rclb
je
faddl
mov
jl
das
jno
movb
sub
sbb
pusha
mov
inc
add
cmp
imull
push
packsswb
shlb
cli
das
jbe
push
cs
fnstenv
xor
jge
subb
movsl
inc
xor
or
xchg
push
add
pusha
add
mov
movsl
add
je
xor
inc
add
nop
dec
mov
fsubrl
hlt
cwtl
add
call
mov
mov
push
add
std
call
inc
bnd
cmp
adc
pmaxsw
rolb
cld
push
add
sbb
aad
push
or
adc
lea
stos
add
setg
lret
lds
mov
loopne
mov
mov
and
add
pop
rolb
sub
jb
push
inc
mov
rorl
inc
int3
lret
jne
out
loope
repnz
test
or
int3
add
mov
fiaddl
test
push
push
cmc
nop
cwtl
add
and
aas
add
sbb
add
mov
add
add
das
add
movsl
push
lock
inc
daa
inc
adc
jbe
sbb
inc
fwait
mov
sub
jmp
push
fisttps
push
ss
nop
mov
mov
subl
mov
adc
repnz
inc
adc
rorb
xchg
repz
sub
in
xchg
sbb
mov
das
pop
mov
loope
pop
sub
pop
push
cmp
sahf
or
mov
pusha
adc
cmp
xor
cld
or
push
sub
rolb
nop
loope
mov
int3
lahf
test
jle
xchg
add
pop
clc
bound
cltd
in
pop
lock
shll
nop
stos
aam
lret
pushf
rdmsr
sbb
cltd
aas
jne
jbe
out
fcomps
add
bound
hlt
add
mov
jge
push
cld
push
jle
add
cmpsl
inc
push
sub
sub
sbb
fimull
or
adc
pop
xor
aad
cltd
cmp
idivb
sbb
mov
inc
push
insl
cmp
fs
test
pop
push
push
add
scas
repnz
popa
cli
or
push
jo
inc
sbbb
xor
adc
verw
nop
jecxz
push
into
add
adc
add
mov
add
add
mov
mov
add
jmp
mov
stos
and
dec
out
loop
add
inc
lods
and
and
mov
cmp
or
inc
dec
jb
mov
jns
jo
imul
push
push
inc
push
shlb
inc
js
add
mov
mov
in
mov
add
adc
add
sbb
mov
fidivl
mov
mov
fmuls
test
enter
or
cs
dec
aas
pop
nop
mov
mov
dec
orb
cmp
fisubs
or
fs
mov
add
or
es
pusha
subb
mov
aas
push
xor
cmovs
cmp
jecxz
and
enter
repnz
adc
out
sbb
dec
test
repnz
jo
adc
xor
fwait
mov
xor
inc
and
popa
in
mov
add
js
jns
aam
push
add
xor
inc
pop
add
sub
movsb
loopne
fsubl
xor
fdiv
orb
jns
js
shlb
clc
enter
dec
jge
iret
fcmovb
sub
inc
mov
mov
popl
cmp
lods
pop
mov
xlat
movsb
repz
mov
aas
mov
jp
xchg
jge
jge
addr16
mov
xor
call
aad
xor
dec
clc
sbb
push
or
je
movsb
jp
jg
fbstp
insb
setb
push
pop
sub
jbe
push
test
mov
in
dec
daa
cmp
push
and
inc
in
call
rcrb
pop
aas
or
call
adc
fdivrl
pop
push
adc
inc
and
xlat
es
mov
dec
add
stc
mov
pop
pop
mov
add
ret
add
xor
pushf
push
sub
testl
xor
pusha
in
clc
inc
mov
add
lds
mov
shr
lahf
sbb
scas
jmp
mov
and
jne
out
mov
adc
sti
add
je
add
ja
xor
mov
jle
mov
sbb
adc
sti
lods
pop
mov
add
cltd
fstpl
cmp
scas
int3
cs
lcall
lods
or
sbb
pusha
ret
mov
out
add
sub
cwtl
add
push
in
mov
cmp
std
jl
or
leave
xchg
sbb
pop
stos
inc
test
inc
mov
and
push
jmp
clc
stos
mov
pop
je
sbb
loop
or
add
stos
push
xor
dec
clc
mov
pop
cmc
andb
push
push
sarb
mov
sub
mov
xchg
ljmp
inc
sub
add
dec
stos
or
jne
add
jmp
mov
maskmovq
pop
mov
cld
les
stos
xchg
push
mov
test
testl
sti
and
mov
jmp
add
xor
pop
and
addl
adc
add
fwait
dec
in
inc
add
sub
mov
jo
add
dec
mov
div
mov
sbb
inc
mov
dec
je
dec
jne
add
pop
push
xor
jmp
add
sbb
add
inc
rol
sub
add
test
loop
orl
add
or
inc
add
pop
jbe
cli
jae
fisttpll
mov
xor
push
je
push
push
push
leave
and
sub
sub
call
jg
imull
add
fdivrl
rolb
dec
cld
push
inc
pop
ret
and
outsb
inc
add
popf
mov
cmpsb
and
std
aas
sub
jg
push
sub
pop
add
push
data16
sbb
jle
inc
call
sbb
fisubl
fisttps
xor
daa
sub
xor
inc
pop
ret
add
and
mov
mov
jb
add
jbe
sbb
jmp
scas
inc
jns
stos
out
fcoms
jnp
dec
ret
sub
lea
cld
dec
add
sub
inc
pushf
dec
mov
bound
nop
add
lock
add
mov
data16
dec
jp
cmp
push
or
cmp
shll
mov
sbb
jle
sarb
negl
sub
mov
add
xor
pop
push
mov
mov
lock
dec
or
shl
cmp
jne
or
sbb
add
and
add
add
loop
mov
cld
sbb
add
or
nop
add
add
rolb
cmp
movsl
shl
sbb
imul
out
ljmp
mov
add
aas
mov
add
push
clc
push
hlt
push
mov
mov
and
add
daa
xor
movl
ss
clc
inc
cld
mov
add
inc
inc
int
outsl
testl
jge
and
add
mov
xor
mov
push
mov
and
sub
add
testl
pop
in
ret
pusha
pop
sub
add
sub
test
ljmp
sti
movsb
or
adc
pop
inc
xchg
add
adc
outsb
cmpsb
and
ds
add
sub
faddl
sub
arpl
jne
add
add
mov
jl
pop
clc
dec
into
inc
daa
jmp
mov
sbb
sbb
dec
and
dec
mov
test
int
jno
add
out
add
lock
insb
add
or
in
push
xchg
cmp
sbb
add
mov
out
gs
dec
lea
into
add
mov
fisubrs
fmuls
sbb
jne
sbb
inc
sarb
add
in
adc
inc
subb
inc
dec
pop
or
fneni(8087
icebp
pop
xor
outsl
data16
lret
insb
pop
jmp
cmp
sahf
push
dec
rolb
inc
adcl
add
leave
repnz
jne
add
stos
mov
cltd
rcll
mov
stc
das
inc
add
movsl
mov
pusha
mov
imul
dec
add
cmp
add
inc
push
push
popa
sbb
cmpl
add
add
inc
outsb
push
jmp
fldt
sbbb
imul
cmp
clc
das
inc
add
or
sub
cli
flds
pop
loope
dec
mov
inc
dec
cmpsl
sahf
fmuls
fisttpll
sbbl
inc
je
fidivl
push
cmp
clc
add
jne
lea
mov
fwait
mov
mov
cmp
xor
sbb
bound
jmp
rolb
inc
mov
dec
add
lea
add
cmp
cmp
adc
arpl
jb
xor
mov
add
cmp
adc
jmp
add
cmpsb
xor
add
mov
sbb
and
pushf
icebp
inc
and
cmp
roll
mov
mov
add
mov
push
cs
test
enter
je
cld
jns
idivl
imul
add
mov
sahf
cwtl
js
cld
and
pop
mov
orb
cmpsl
add
add
dec
xchg
dec
push
add
js
hlt
fildll
xlat
mov
ret
sbb
xor
mov
dec
fwait
cld
adcl
mulb
or
pop
mov
or
xorb
lret
cmp
roll
cmp
and
push
and
xor
dec
ljmp
adcl
aad
aas
inc
shl
stos
mov
jmp
stc
mov
sti
je
mov
push
add
dec
jge
fisttpll
fnclex
add
mov
or
add
cmp
lds
pop
add
inc
sbb
adc
add
inc
test
cmp
je
lds
filds
test
call
pop
add
push
inc
loope
and
loopne
ret
sub
stc
add
xchg
stc
test
adc
add
loopne
ds
aas
jnp
jmp
add
test
mov
add
add
ret
mov
insl
inc
nop
fadds
cwtl
lret
push
dec
jmp
cmp
orl
xor
push
dec
nop
inc
push
ret
ret
sbb
push
add
mov
or
dec
jnp
add
imul
nop
add
cli
add
loopne
jb
ljmp
pop
daa
jle
loop
ss
add
test
cmp
add
call
aas
jle
je
add
mov
add
stos
call
mov
nop
push
mov
sub
pop
aas
cmp
jo
rorb
nop
adc
push
adc
and
ror
push
jae
xchg
or
or
mov
clc
add
and
loopne
adc
sbb
test
cmp
test
cmp
inc
xor
push
arpl
adc
cmp
xor
mov
sbb
jae
mov
pop
hlt
pop
stos
xchg
mov
leave
jb
scas
sbb
and
sbb
js
rclb
add
add
mov
test
mov
or
inc
jp
add
sti
lret
lcall
dec
mov
hlt
xor
add
push
not
mov
pop
or
inc
das
sbb
shl
add
xor
fstpt
add
repz
add
ret
or
fnstcw
hlt
push
inc
pop
dec
ja
ror
insl
or
mov
jmp
lea
xor
add
lcall
fdivr
fcmovb
loopne
repnz
pop
divb
adc
add
shr
mov
stc
cmp
jne
addb
frstor
add
into
add
cmp
ja
add
jp
adc
push
adc
cmpsl
cli
jae
lock
sarb
add
dec
push
add
mov
sub
cmp
jecxz
adc
int3
orb
mov
test
add
movsl
idivl
arpl
pop
xchg
push
das
test
outsl
testb
push
mov
add
into
dec
pop
xacquire
mov
lea
mov
cmp
ror
int3
leave
addb
xor
add
push
add
daa
or
adc
je
xchg
add
rol
jne
add
and
dec
pop
mov
test
dec
lock
ljmp
push
mov
jl
add
mov
or
push
cmp
push
xor
and
out
push
out
dec
popa
pop
incb
test
push
shrl
xchg
adc
add
fmul
aas
add
paddsw
push
test
cld
pop
push
ljmp
xor
lea
cmp
es
movsl
pushf
add
mov
mov
pop
inc
inc
inc
mov
jo
call
or
mov
mov
sbb
sbb
or
out
and
mov
or
adc
add
add
fldcw
data16
xor
fwait
dec
push
add
jnp
popf
push
and
mov
mov
mov
add
je
push
rcrb
xor
adc
out
pop
xchg
add
flds
or
loope
xor
xchg
adc
loop
mov
pop
testl
adc
lea
jg
add
jne
xor
add
mov
xchg
add
jne
shlb
pop
mov
pop
inc
sub
in
or
pop
bound
outsb
add
addr16
in
loopne
out
mov
mov
fcmovb
movsl
mov
loop
xlat
ljmp
pop
sub
mov
mov
aas
pop
mov
push
or
lods
adc
sahf
xchg
adc
cmp
mov
adc
lods
sbb
addb
mov
or
and
iret
and
clc
loopne
jno
dec
pop
add
sbb
pop
adc
pand
jae
cmpb
lock
sbbl
call
add
mov
sbbb
in
add
ret
add
cltd
mov
out
jl
call
ret
sbb
dec
and
and
mov
sub
int
add
sub
fdivs
inc
cwtl
rorb
mov
pop
in
ljmp
adc
cmp
repnz
add
clc
mov
fs
add
pop
das
mov
add
or
add
stos
jae
inc
push
stos
jle
scas
jbe
push
add
mov
cmpsb
pop
add
insb
inc
xchg
dec
push
js
xchg
loopne
lock
inc
cli
add
cs
pusha
test
add
mov
push
cmp
push
scas
imul
inc
rcrl
jl
or
pop
dec
inc
or
xor
add
jmp
les
in
add
add
aas
add
mov
rcrb
adc
push
iret
lret
add
xor
dec
add
jno
and
loopne
inc
add
jnp
cld
push
jl
add
dec
ja
mov
cltd
add
ret
imul
mov
add
mov
add
mov
add
fbstp
and
cmpsl
pop
lcall
call
push
repnz
xchg
jecxz
push
pop
sub
leave
rolb
sub
pop
pop
hlt
je
inc
das
ret
std
xlat
or
adc
add
roll
push
dec
pusha
mov
xor
dec
or
add
rolb
lods
xor
mov
jmp
mov
or
shr
push
fdivrs
or
sysexit
and
in
incb
pop
into
jne
xor
and
mov
testl
movsl
jns
pop
test
rolb
jns
call
pop
pop
dec
pop
dec
fiaddl
not
adc
ret
aaa
add
jno
add
or
mov
addl
add
sbb
lods
sbb
add
ljmp
sbb
movb
mov
push
cld
subb
dec
loop
xchg
add
mov
shr
loopne
imul
add
inc
sti
ljmp
add
in
movsl
sbb
inc
add
xchg
cmp
add
mov
xchg
push
int3
in
mov
testb
mov
call
jmp
inc
inc
cmp
adc
icebp
add
rcrl
cmp
fistpll
popf
les
lret
xchg
shll
cmpsb
mov
add
out
pop
cld
add
cmp
orb
cmc
add
or
add
adc
pusha
jecxz
ret
mov
es
fdivrl
pop
rorb
hlt
out
xchg
sub
jmp
jns
mov
add
pop
pop
out
dec
clc
movsl
in
add
rclb
lret
sub
sbbb
repnz
and
mov
jae
mov
push
scas
dec
add
fadds
dec
add
and
xchg
add
mov
xchg
emms
pop
pusha
mov
sub
je
add
pushf
push
lret
movsb
and
jmp
sbb
enter
jg
mov
pop
packsswb
mov
push
les
sbb
jecxz
push
pop
inc
icebp
loopne
sar
add
div
xchg
in
and
shl
mov
and
push
sub
and
movsl
jb
mov
shlb
pop
in
inc
push
mov
jo
test
cmp
cmovo
cmp
mov
pop
add
movsl
inc
insl
add
pop
xchg
push
dec
call
xchg
xchg
cld
fists
push
mov
mov
pop
sub
mov
pushf
jo
xchg
int3
xchg
adc
jge
mov
pop
or
sub
lret
dec
out
add
packuswb
mov
outsl
faddl
push
mov
pusha
pop
fstl
add
pop
scas
add
push
fmull
int3
pop
enter
xchg
ret
shlb
or
jg
je
movb
add
out
nop
add
and
mov
mov
push
adc
rcrb
movsb
push
adc
jmp
nop
xor
add
push
jnp
add
pop
mov
add
loope
jmp
dec
bound
cmc
sub
mov
jne
lock
jns
out
add
in
repnz
mov
sbb
add
push
jl
loope
sti
xchg
jo
mov
movb
dec
xchg
js
dec
sbb
pushf
sbb
mov
repnz
mov
dec
cmp
and
pop
dec
stc
xorl
inc
fiaddl
cwtl
add
xchg
adc
sub
inc
xor
pushf
xor
test
mov
popa
bswap
stos
adc
mov
xchg
call
and
lret
sub
daa
mov
loopne
add
jnp
mov
shlb
call
and
xchg
cmp
mov
add
or
pop
enter
mov
fwait
dec
or
lock
push
cmp
fstpl
in
or
mov
mov
and
in
pusha
negb
lds
fwait
inc
int3
push
fdivr
and
add
xchg
je
or
sbb
mov
nop
sbb
mov
or
sub
jge
jne
daa
pop
inc
jbe
add
repz
add
mov
aam
das
mov
and
ljmp
sbb
pop
pop
cmp
dec
xor
fidivl
push
loop
test
add
ret
xor
add
pop
aas
jg
add
les
js
pop
or
add
cli
pop
add
or
add
pop
push
mov
jl
jbe
hlt
sub
jb
iret
fistpll
xor
or
push
stc
add
cmp
sbb
adc
test
pop
xor
enter
adc
lret
pop
mov
add
jo
pop
adc
add
xchg
enter
mov
xor
jbe
shl
cmp
add
lret
lods
ss
imul
mov
adc
push
add
or
lock
mov
push
or
mov
and
scas
fwait
add
add
out
movsb
jmp
push
add
into
enter
push
dec
inc
add
movsb
fstl
sahf
add
shll
fisubs
add
add
jae
mov
xchg
cmp
lcall
jecxz
les
test
pop
inc
cmp
cmpps
xor
add
or
add
imull
enter
inc
xchg
clc
arpl
mul
dec
movsb
mov
hlt
inc
sub
daa
add
test
jl
pop
test
add
popa
mov
or
dec
mov
pushf
add
lahf
jmp
int
xor
cmp
stos
popa
loope
mov
pop
add
iret
outsl
sti
jno
fsubp
jecxz
add
cmp
mov
add
sbb
test
add
fisttpl
mov
or
inc
movsb
inc
pop
pop
fs
add
or
adc
inc
add
lea
mov
dec
add
add
xchg
shrb
clc
jo
and
add
jns
jge
mov
push
sub
test
add
popf
xor
dec
mov
pop
and
jge
inc
hlt
mov
inc
or
lds
sbb
incb
add
add
popf
mov
cltd
dec
inc
lods
xchg
cmp
add
push
lock
mov
mov
adc
dec
leave
test
mov
sbb
cmpsl
adc
adc
and
clc
sbb
lods
xor
jp
movsl
adc
add
adc
rolb
push
insb
lods
mov
das
sarb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
sbb
adc
sub
inc
mov
add
dec
fwait
sub
add
sbb
and
mov
add
pop
lret
jno
push
pop
dec
mov
fs
je
adc
jns
jno
jle
add
les
outsl
int3
pop
mov
dec
rcr
scas
push
push
xchg
rolb
addl
das
mov
in
and
ljmp
or
push
mov
cld
ja
mov
jle
push
fildll
pop
shlb
clc
push
sbb
and
ficomps
xchg
push
aaa
pop
push
add
jo
nop
push
aad
jb
daa
pop
and
inc
insb
cwtl
cmp
pop
jae
add
push
sbb
pop
sarl
lock
incb
jge
repnz
mov
xchg
sbb
push
or
ljmp
add
xor
pop
dec
push
test
insl
out
shrl
cmp
mov
inc
and
jge
dec
cltd
add
mov
dec
mov
pop
fsubs
inc
add
inc
push
gs
ret
pop
add
sub
lcall
inc
shlb
push
sbb
jge
add
test
arpl
xchg
sbbb
movsl
int3
mov
add
cli
jle
sub
fsub
es
cmp
enter
sarb
or
inc
xchg
pushf
pop
add
inc
int3
sub
add
or
pop
mov
test
add
jae
shll
lea
pop
movsb
pop
mov
lea
cmpsl
rolb
ror
pusha
add
push
adc
push
cld
es
add
enter
adc
sti
pop
adc
in
add
cltd
push
xchg
push
pop
mov
punpckldq
and
push
pop
or
cld
or
push
call
jg
clc
mov
jge
ror
mov
jp
add
mov
int3
roll
sahf
inc
inc
add
je
scas
aam
jno
test
sahf
lods
ljmp
adc
xchg
cmp
and
ret
add
clc
popf
leave
cmp
mov
rcll
add
mov
jne
ja
adc
sbb
sbb
mov
sbb
add
lea
mov
sbb
mov
out
loopne
into
add
inc
aad
push
clc
push
sarl
insb
add
inc
daa
sub
jle
push
push
mov
call
add
mov
aam
mov
mov
add
fists
add
adc
enter
add
mov
pop
iret
fnstsw
pushf
push
xor
test
orb
test
incb
dec
inc
rorl
imul
fwait
inc
lret
mov
dec
sbb
add
xor
cmp
mov
jo
pop
push
fdivrs
icebp
and
jo
mov
pop
add
movb
add
addr16
cmpsl
xor
popf
lcall
cld
fcompl
cmp
rcrl
cmpsb
xor
es
add
hlt
loopne
hlt
scas
add
and
je
cmpsl
inc
mov
jge
xor
aam
add
pop
rorb
lea
dec
cmp
fadds
mov
xor
mov
jp
cltd
mov
mull
int3
xchg
jns
jecxz
out
push
mov
adc
test
xor
mov
add
push
push
dec
and
add
pop
sbb
mov
xchg
inc
mov
ds
add
mov
adc
jg
xor
mov
add
addr16
adc
adc
pop
push
adc
pop
sub
subb
mov
jmp
push
mov
jge
fimuls
roll
jle
movsb
push
adc
pop
add
pop
push
ret
add
adc
add
jle
sub
xchg
rcrb
pop
ss
or
sbb
ret
inc
or
adc
or
add
and
add
js
rorb
push
ljmp
jmp
add
mov
stos
xchg
add
sbb
inc
out
add
dec
test
add
adc
pop
aam
mov
mov
fdivrl
add
ja
sub
cmpsb
out
adc
add
push
push
pop
jmp
cmp
dec
pop
jne
in
shll
cmp
jge
lcall
addl
or
lods
pop
xchg
mov
ljmp
icebp
push
stc
xor
ds
cmpb
add
insb
push
fbld
cli
cmp
pop
fs
and
push
aas
out
add
dec
hlt
sub
fistl
adc
into
xchg
lock
jb
push
xor
or
mov
adc
mov
ja
add
test
lret
add
enter
inc
sub
pushf
adc
out
add
add
sbbb
cmp
pop
les
pop
sub
mov
and
and
xor
jnp
jno
add
sub
inc
xor
outsb
add
outsl
addl
mov
dec
cld
push
xrelease
and
repnz
cmp
add
imul
rolb
std
or
or
je
ja
add
sbb
xchg
test
scas
popf
add
sub
lock
pop
add
mov
dec
dec
inc
mov
fwait
jbe
mov
adc
aaa
movb
addb
orb
or
aad
xchg
jno
ljmp
mov
add
movsl
ja
cli
cmpsb
add
sub
fldenv
and
jge
xchg
inc
push
nop
scas
into
ljmp
push
popa
fisubs
clc
movsl
rolb
mov
sub
add
scas
mov
add
test
adc
test
aas
xchg
ds
xor
mov
lods
push
add
es
adc
jb
adc
mov
sub
enter
aaa
andb
or
movb
add
pop
or
cmpsb
add
nop
mov
pop
pusha
add
into
sbb
pop
add
ret
sub
push
mov
cwtl
jnp
iret
and
bswap
jg
call
inc
jns
jnp
mov
imul
sub
jg
or
scas
shll
xor
push
aas
test
add
adc
jne
or
dec
pop
fstpl
ss
adc
cli
xor
push
ljmp
fnstsw
add
xchg
subl
or
jns
jg
decb
cmp
loopne
mov
fdivp
inc
pusha
data16
add
jg
xchg
mov
add
and
and
cld
loopne
sub
sbb
add
and
enter
xchg
loop
dec
jl
add
and
add
lret
std
xchg
fadds
lods
aaa
add
outsl
insl
dec
outsb
imul
hlt
xchg
jle
pop
or
jno
nop
fisttpll
out
add
push
fs
icebp
mov
call
imul
push
jno
add
lcall
add
cmp
or
imul
jnp
adc
push
cwtl
push
add
and
test
sub
mov
daa
cmc
push
loope
or
js
jne
out
and
ljmp
icebp
or
nop
push
xchg
loopne
lret
sub
sbb
stos
pop
mov
mov
lret
inc
or
fstl
add
cmp
add
xor
or
aad
clc
in
pop
lock
or
fldl
pop
enter
jno
aaa
add
test
stc
jg
adc
inc
sbb
lahf
push
outsl
dec
rcll
cld
pop
fmull
loope
in
cmp
or
inc
jmp
dec
into
push
testb
testb
shlb
add
pop
lock
loop
jno
and
mov
jnp
in
testb
icebp
add
jno
cmp
movsl
mov
sbb
mov
ljmp
mov
loope
inc
je
pusha
scas
xor
shl
or
jmp
bound
xor
pop
cmp
add
jecxz
xchg
mov
rcrl
hlt
arpl
sbb
stos
pop
push
mov
push
jle
rcrl
aas
jecxz
lods
ljmp
in
sbb
push
pop
inc
movsl
adc
addl
cltd
inc
rclb
pop
mov
jg
mov
lea
in
jnp
mov
shrl
imul
add
popf
xor
sti
push
push
pop
add
aam
clc
mov
mov
es
test
adc
lcall
sub
daa
dec
push
lret
mov
inc
push
pop
lcall
sbb
push
jb
ss
inc
xchg
sub
sub
add
pop
push
pop
xor
push
fiaddl
push
push
in
gs
mov
call
orb
cwtl
pop
cmpsl
sub
test
cmpl
fstpl
es
out
rorb
jae
pop
mov
pop
loopne
aas
cmc
inc
in
pop
pop
mov
lods
int
call
paddw
repnz
add
lock
pop
stc
push
sbb
add
push
clc
insb
pop
sub
mov
icebp
ljmp
dec
aad
es
add
jne
xchg
aas
and
add
mov
push
bound
icebp
mov
fwait
les
out
and
mov
push
add
lock
push
subl
jmp
add
icebp
je
fildl
or
dec
cs
pop
dec
add
int3
push
mov
outsb
ret
popf
in
add
inc
test
add
xor
bound
out
mov
sbb
cmp
jge
dec
shll
lods
ficompl
outsb
call
lods
mov
and
xchg
push
fsub
imul
push
je
subl
call
fs
repz
add
loopne
call
add
xlat
dec
ret
pop
xchg
scas
addr16
stos
sbbb
or
push
bndldx
loopne
inc
fyl2xp1
sub
pop
add
mov
shlb
xchg
xor
push
inc
flds
xchg
mov
out
lahf
call
xchg
xchg
mov
aas
in
stc
cmpsb
clc
shrl
mov
jo
call
jne
add
jp
jle
dec
sub
cmp
rolb
and
test
sub
cmp
mov
add
lock
inc
pop
cmp
in
or
or
add
nop
sbb
sbb
add
and
fs
cwtl
pop
add
insl
cmc
rcll
and
add
data16
xor
rclb
clc
push
add
rolb
xor
pop
add
jo
push
in
jle
cmp
popf
cld
inc
ljmp
repnz
in
pushf
dec
or
mov
test
and
int3
add
adc
add
pop
pop
add
stc
ss
hlt
scas
aas
insb
bound
test
in
jl
add
pusha
push
je
popa
outsb
jae
inc
jb
in
daa
xchg
lock
sarb
add
push
sub
cmp
cmp
mov
xchg
rol
fnsave
pop
mov
lock
out
and
adc
add
cmc
mov
add
bound
stc
sbbb
cmp
je
mov
leave
pop
jne
sahf
roll
dec
incl
test
add
jle
pop
inc
cmpsl
or
mov
lea
mov
and
testb
pop
dec
xorb
inc
jg
pop
add
and
inc
jmp
aad
and
loopne
add
cmp
iret
pop
mov
shl
addr16
dec
add
and
and
out
or
add
cmpl
add
cltd
call
push
add
stc
and
add
or
neg
xchg
cmp
add
out
adc
clc
add
fimuls
lods
jmp
add
inc
add
xchg
into
cmp
add
or
jae
sbb
adc
in
adc
add
and
add
test
mov
lock
nop
and
mov
jno
sbb
ljmp
and
push
faddl
mov
je
mov
pop
inc
mov
inc
cmp
pop
adc
add
add
ret
push
lret
adc
int
sub
sbbb
scas
jg
add
int3
out
xchg
fmull
push
adc
push
pop
mov
dec
xor
ss
jmp
and
sub
xchg
add
outsb
into
call
or
test
add
ret
adc
add
dec
movsb
les
cmp
jns
test
mov
loope
nop
out
mov
or
int3
or
iret
inc
inc
sub
in
icebp
sbb
sbb
sub
dec
push
test
jle
leave
and
roll
scas
or
xchg
or
movb
cld
sub
test
jle
cmp
inc
sub
adc
lret
inc
cmp
cmp
sbb
mov
call
cltd
and
sub
add
pop
mov
jmp
add
and
and
cs
sbb
sub
lret
mov
inc
push
imul
adcb
jno
add
and
ja
lsl
in
add
lret
enter
jle
add
add
or
loopne
push
nop
adc
bound
shlb
inc
js
and
jbe
ds
subb
mov
or
pop
in
int3
mov
push
ret
jg
xor
stc
cmp
xlat
dec
test
lds
xchg
mov
fwait
jae
add
dec
inc
push
pop
ljmp
push
add
std
lahf
sub
ret
cld
in
mov
inc
add
dec
add
add
dec
mov
pop
mov
rclb
xor
adc
rol
cmp
and
pusha
cwtl
loopne
fdivr
add
fs
int
mov
inc
aas
add
push
sub
add
xor
lock
cmp
add
or
int3
jle
inc
outsl
sub
rorb
in
mov
push
test
xor
sub
arpl
pop
icebp
pop
mov
or
fildll
add
daa
mov
add
cmc
mov
add
das
pop
jo
fstps
or
inc
jle
in
outsb
subb
pop
cli
jb
xor
push
cmp
add
or
add
adc
mov
add
nop
scas
cmpsb
loopne
fs
add
xchg
sub
sub
add
push
out
rolb
outsl
adc
loope
jl
or
sbb
xchg
jmp
jbe
add
jge
dec
add
test
push
push
dec
sahf
adc
add
push
call
and
mov
loop
pop
add
icebp
xor
out
add
jnp
cs
xor
popf
inc
cmpsb
dec
push
pop
or
xor
jecxz
stc
out
sbb
sbb
and
and
packuswb
inc
paddb
stc
cli
cmp
incb
cs
and
cs
pop
sbb
xor
and
inc
or
add
jae
add
or
mov
inc
lahf
cwtl
pushf
add
sub
xchg
icebp
movsb
add
iret
push
loop
inc
xor
sbb
add
jg
ds
xchg
out
pop
pop
inc
fcomps
aad
mov
sub
enter
testl
and
nop
sub
xor
sub
mov
popf
les
in
mov
nop
imul
enter
mov
aas
xor
xchg
sbbb
adc
inc
cmp
mov
and
or
mov
rolb
bound
imul
jge
incb
repz
add
xchg
rolb
imul
pop
fs
cmc
rclb
pop
add
xchg
rol
dec
push
push
add
adc
imul
dec
call
add
sti
inc
adc
movsl
mov
sub
adc
add
mov
rcl
cmp
or
inc
add
in
add
test
hlt
in
and
mov
mov
repz
sti
shl
pop
add
and
add
out
movsl
jns
sti
fmul
loope
xchg
add
xlat
les
cmp
add
aaa
ret
test
js
bound
cmp
xchg
or
sbb
add
adc
inc
cli
int3
push
sbb
add
cmp
lea
aas
inc
mov
add
mov
cmp
sti
add
cmc
in
add
add
add
rorb
or
loop
loopne
adc
add
fadds
add
cmp
ljmp
les
addr16
sbb
divb
addb
add
cmc
cmp
js
push
popa
popf
insl
mov
sbbl
in
sbb
mov
add
pop
dec
or
mov
les
imull
adc
rcrb
adc
cmova
pusha
cmpb
test
jo
mov
fprem
xor
jle
pop
fwait
icebp
adc
mov
push
hlt
ljmp
sbbb
pop
aam
stc
sbb
add
in
xchg
cmp
aam
sbb
mov
add
shlb
iret
in
fistl
out
adc
loopne
sbb
arpl
pusha
sahf
mov
pop
add
sbb
or
push
lods
les
test
inc
and
sub
inc
add
or
int3
out
outsb
mov
push
testl
call
mov
add
push
inc
pop
cmpsl
and
xchg
dec
stos
xchg
jo
inc
rolb
mov
add
inc
andl
mov
jmp
call
lcall
jo
pop
and
push
add
mov
orb
int3
ljmp
sub
jns
loope
jge
out
push
std
fcomps
dec
cmp
out
test
ljmp
test
aad
clc
jl
mov
out
sub
bound
stos
inc
mov
adc
add
cwtl
jge
mov
push
and
jns
add
div
test
and
mov
cmp
fld
inc
stc
call
rcl
sub
ja
add
leave
push
adcb
outsl
jmp
loopne
xor
push
jne
aaa
inc
lret
outsl
arpl
push
jg
in
inc
scas
adc
inc
decl
mov
jl
dec
cmp
jle
or
fimull
inc
or
add
nop
mov
clc
dec
sub
dec
dec
sub
pop
xlat
mov
xchg
imul
pop
mov
mov
sub
add
jae
call
dec
sub
clc
lret
cmp
sbb
or
ljmp
in
sbb
adc
cli
add
sub
cmpl
adc
adc
push
sub
sub
adc
mov
mov
cli
pusha
rcrl
push
jbe
xor
add
sub
subb
iret
pop
adc
and
addr16
adcb
inc
add
pop
xor
cmp
or
sub
inc
mov
inc
push
add
sahf
pop
aas
sarl
adc
and
add
push
decl
jl
sbb
js
jg
jge
add
sbb
or
ror
fmull
and
daa
clc
push
test
leave
outsl
insl
jno
pop
imul
inc
stc
and
xchg
ljmp
test
add
xor
jbe
mov
xchg
xor
sub
sti
mov
std
sub
mov
mov
and
enter
sub
int
or
pop
sti
xchg
adc
xchg
orb
pop
insb
rorl
movsb
faddl
pop
add
or
cmp
in
lret
in
xor
cld
bound
inc
leave
pushf
and
or
popf
idivb
cltd
mul
add
in
dec
adc
adc
sbb
clc
sbb
orb
jns
clc
hlt
mov
enter
and
or
lret
psrad
mov
or
inc
adc
test
enter
in
lret
or
icebp
and
push
rolb
adc
add
dec
fstpl
dec
clc
mov
repnz
cmp
in
addr16
enter
xchg
stc
pop
sbbb
adc
cmp
scas
add
imul
or
jmp
jnp
dec
outsb
pop
add
popf
push
lret
test
add
fs
sub
sub
and
push
cmp
loop
sbb
ds
xchg
fsubrl
push
loope
adc
pusha
dec
dec
sbb
add
and
bound
add
aas
pushf
push
clc
test
repz
aam
push
daa
add
xor
ret
xor
nop
sbb
add
mov
loop
and
sub
adc
add
push
jl
add
call
pop
hlt
in
and
sbb
pop
add
les
into
and
cli
roll
mov
test
mov
jnp
add
clc
and
sahf
or
inc
mov
jns
call
sub
add
pop
jp
js
pop
push
fcoml
jmp
dec
nop
pop
cmp
cmp
cmp
inc
or
and
dec
hlt
cmp
lcall
leave
push
sarb
loop
pushf
jmp
adc
add
rolb
divb
and
add
popa
je
cmp
push
cmp
nop
cmp
dec
in
add
push
sub
mov
adc
push
sbb
adc
addps
add
or
notl
movsl
add
pop
test
and
cs
mov
loopne
xchg
or
clc
psllw
pmaxub
push
cmp
and
xor
add
loopne
add
cs
pusha
cmp
call
xchg
aam
aaa
fsubs
add
jmp
outsb
repnz
xchg
fwait
cmp
pop
xor
add
mov
xor
add
sub
jle
jmp
sub
test
push
or
mov
rorl
pusha
pusha
sbb
mov
dec
std
call
add
mov
ds
mov
add
push
addb
rclb
out
or
cmp
adc
and
cmp
fcomps
test
sbb
std
cmp
sar
push
cmpb
xorb
je
mov
jge
xchg
test
or
mov
out
mov
adc
sti
mov
into
cmp
and
or
call
dec
popf
pop
and
xor
dec
xor
out
aad
rcl
addr16
jne
dec
adc
add
jmp
loop
push
das
loope
or
cs
ss
jb
fcmove
insl
das
jp
or
jmp
pop
pop
test
sub
addr16
add
sub
movsl
decl
xor
pop
seto
push
sbb
or
or
cmp
sbb
std
and
and
add
ljmp
out
dec
call
add
movsb
loop
mov
arpl
popa
lahf
addb
mov
dec
int3
mov
sbb
push
xor
nop
roll
or
incl
xor
pop
jno
dec
pop
cmp
inc
or
cmp
aaa
mov
xchg
unpcklps
or
clc
mov
sub
jns
push
pop
loope
sti
ja
les
add
lea
pop
xchg
add
jnp
jo
xor
pop
pop
fnstenv
push
push
pop
lods
cmpsl
dec
std
hlt
mov
sti
xor
sub
lret
lds
sbb
jle
mov
push
add
mov
mov
sbbl
xor
sub
sub
cmpsb
inc
xchg
xor
xchg
jp
xchg
jmp
scas
jae
and
adc
mov
add
lret
xchg
cmp
xchg
loopne
mov
jo
cmp
in
popf
add
inc
add
sub
movsl
add
shlb
cmp
popf
xor
mov
adc
es
add
call
pusha
and
mov
push
fdivrl
loopne
push
inc
clc
add
enter
ljmp
xchg
sub
pop
mov
or
jno
ret
pop
cmp
mov
push
fisttpll
cltd
cmp
mov
test
fwait
add
lret
cmp
sbb
pop
jl
hlt
xchg
fistpl
jl
or
cmpsl
or
push
popa
loope
add
dec
add
and
inc
push
ficomps
js
jl
pop
gs
incb
add
dec
lret
pop
leave
subb
add
mov
ja
dec
jbe
add
adc
jle
inc
pop
mov
jno
nop
outsl
scas
rcr
inc
add
adc
cld
stos
test
fistpll
iret
inc
in
cmp
jl
mov
add
sbb
out
jmp
testb
adc
add
lret
fs
push
punpckhwd
inc
cmp
jecxz
enter
sarb
xor
add
or
cmp
mov
dec
adc
sbb
mov
clc
ja
pop
mov
mov
fdivrs
xor
inc
js
mov
lahf
call
out
dec
pop
sub
dec
xchg
xor
insl
js
or
dec
push
push
xchg
inc
sub
jae
cmp
sub
cmpb
loop
shl
shr
lock
test
dec
push
add
lret
or
sub
add
dec
inc
out
add
or
cmp
lahf
nop
das
int3
pop
mov
add
stc
js
add
xchg
addr16
add
mov
daa
xor
mov
add
cmp
jg
add
shl
add
mov
jl
adc
stc
clc
and
mov
mov
es
pextrw
popa
test
and
pop
push
push
push
adc
xchg
xor
inc
inc
push
add
sbb
cmp
adc
stc
xchg
scas
loop
call
cmp
loope
icebp
dec
call
mov
pop
stos
cli
inc
outsl
scas
xchg
mov
or
dec
fcomi
lret
icebp
addb
pop
cwtl
add
jg
add
add
or
push
dec
xorl
jns
sbb
icebp
xor
pop
lret
rorb
adc
add
adc
popl
repnz
jge
es
stos
add
sbb
jo
pop
push
jne
mov
ret
jg
add
jle
add
cmp
add
pop
add
dec
mov
pusha
scas
mov
add
mov
jmp
cld
das
test
call
add
dec
je
push
inc
hlt
xor
insb
loopne
enter
in
and
mov
sbb
push
add
mov
mov
mov
mov
cmp
add
mov
lcall
dec
ficoml
sbb
sub
inc
xor
dec
pop
inc
sub
out
add
push
and
or
xor
xchg
mov
pop
jle
add
and
repnz
addb
arpl
push
or
jmp
add
jl
inc
sbb
clc
stos
jo
inc
rolb
lods
mov
mov
repz
cs
mov
jnp
rol
stos
push
push
fs
add
dec
lcall
xor
je
jmp
cmp
jecxz
cmp
lret
dec
pop
cli
cmpsl
add
inc
pushf
adc
pusha
outsb
push
inc
push
cmp
add
repnz
out
xor
inc
sub
xor
lahf
add
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fadds
loopne
repz
and
addl
cli
jb
mov
cld
pop
xor
inc
movsl
call
xchg
sbb
pushf
jp
mov
mov
fadds
add
test
add
imul
call
cmp
xlat
outsl
movb
data16
mov
vorps
or
inc
xchg
outsb
sbb
in
inc
out
faddl
nop
mov
cmpsl
push
add
orb
add
and
and
out
adc
test
add
inc
shrb
jp
js
jl
pop
roll
paddusb
loopne
xchg
add
cmp
mov
xor
out
lret
pop
sbb
pop
pop
subb
in
push
mov
hlt
sbb
xchg
mov
dec
sub
clc
xchg
add
shll
xchg
cld
xor
out
add
fsubr
fidivrl
xchg
cmp
pop
jl
add
add
je
add
enter
sbb
inc
and
movb
and
inc
add
test
push
inc
sbb
je
mov
or
push
out
add
sub
subl
mov
lcall
enter
mov
aam
adc
mov
mov
sbb
shll
rcrl
add
scas
inc
js
adc
cld
loop
rcr
inc
add
adc
cli
add
nop
jecxz
jnp
push
std
mov
add
dec
daa
jne
aam
test
inc
xor
or
je
jcxz
das
push
and
add
sbb
ret
call
xchg
xor
push
imul
pop
movsb
xor
add
jle
scas
es
scas
add
repnz
incb
cmp
pop
aas
movl
sub
aas
mov
nop
or
xadd
add
jb
je
jo
add
add
rorb
in
mov
ficomps
pop
sbb
add
rcr
pop
fiaddl
sbb
dec
fimuls
ffree
sbb
sbb
add
aam
aad
cmp
pop
sbb
loope
in
call
adc
add
adc
in
xor
add
shl
xor
ss
testb
shlb
hlt
add
cld
cmp
add
sarb
ds
xchg
jno
cmp
sarb
psubw
sub
add
add
shrb
sub
inc
ljmp
cmp
add
in
inc
pusha
push
in
add
and
and
daa
add
mov
idivb
jecxz
and
add
shlb
and
data16
mov
cmp
andl
cmpsl
in
loopne
add
inc
movsb
loopne
insb
add
lods
subl
outsb
inc
scas
cmp
stos
cmp
imul
or
test
push
sarl
mov
jp
mov
enter
loopne
or
mov
jl
mov
je
push
jne
inc
mov
ja
mov
mov
inc
jbe
jb
mov
mov
mov
shlb
inc
mov
push
add
nop
adcl
push
inc
xchg
ret
xchg
daa
push
inc
push
addr16
rcll
rolb
pushf
rcrb
inc
jo
add
sahf
add
pop
cmp
xchg
lcall
or
pop
sbbb
fisttps
cmp
addl
dec
lock
rorl
rorb
dec
inc
mov
inc
or
or
or
xchg
mov
inc
call
xchg
in
sbb
push
mov
cld
jb
add
js
and
xor
push
popf
push
rcrb
jns
push
and
inc
add
push
add
mov
mov
pusha
pop
popf
add
pop
add
jno
aad
or
and
in
ja
pusha
test
jae
aas
call
mov
add
add
movl
adc
dec
sbb
xchg
push
sbb
mov
lock
add
and
fistps
jnp
scas
cmp
sub
arpl
add
push
push
data16
adc
fdivrp
mov
dec
jo
push
push
push
sarb
add
lods
xor
add
dec
push
mov
lcall
jne
dec
add
or
sub
jle
jl
pextrw
cmp
mov
add
adc
lods
add
mov
lahf
adc
pop
fisttps
pusha
push
cld
lcall
cwtl
push
lods
cmp
mov
pusha
add
jo
call
inc
in
or
adcl
lea
xchg
pop
cmpsl
and
push
xor
fadds
adc
cmp
add
aad
mov
add
jne
add
cwtl
mov
stc
xchg
inc
push
jp
push
inc
pop
scas
leave
sarb
add
daa
add
addr16
mov
stos
add
lret
sbb
mov
test
add
cs
xor
jno
out
add
adc
add
sti
icebp
dec
xchg
nop
pop
adc
mov
adc
repz
and
add
pop
pusha
cmp
loop
add
stos
nop
xlat
insb
push
stc
leave
add
icebp
pop
shlb
xchg
jmp
sbb
or
mov
jno
xchg
dec
xchg
add
into
rcrl
lret
mov
leave
icebp
add
cmp
popa
mov
into
push
cmp
mov
adc
push
les
push
add
add
mov
and
cli
jbe
and
and
push
loop
push
cmp
sub
push
adc
int3
enter
enter
xor
andb
and
pop
xchg
jno
jb
mov
add
repnz
sub
testb
icebp
dec
cld
stc
ret
push
or
sub
xchg
adc
mov
push
int3
ret
add
sbb
dec
ret
clc
lods
incb
adc
lods
dec
and
dec
inc
xchg
cmp
inc
inc
adc
xor
mov
lods
dec
xor
stc
cmp
sub
or
mov
movsl
adc
loope
add
or
mov
or
lods
int
push
inc
or
sub
test
enter
xor
icebp
sub
imul
add
aaa
sub
add
mov
fs
loopne
repnz
cmp
adc
fwait
loopne
mov
pop
movlps
rcll
add
leave
mov
mov
mov
enter
rolb
push
popf
lods
fcomp
fs
dec
or
fs
sbb
or
jecxz
jno
xchg
add
data16
inc
cmp
dec
pop
nop
or
push
ja
aam
inc
xchg
lret
add
pop
icebp
or
inc
pop
sbb
stos
and
scas
shlb
repz
or
cmp
insb
xlat
fildl
shll
cld
and
push
repnz
pop
sub
out
pushf
cmp
mov
or
add
icebp
add
pop
mov
pop
in
inc
pop
test
xchg
int3
loop
out
pusha
loopne
sbb
mov
and
lock
xchg
push
mov
adc
sbb
mov
test
scas
xor
and
popf
add
in
add
dec
or
push
add
or
cmp
inc
cmp
sub
dec
inc
addr16
addr16
xchg
pop
jge
mov
xor
test
adc
add
leave
je
push
js
mov
test
jnp
mov
xor
daa
shl
jmp
orb
dec
call
mov
ret
ucomiss
mov
mov
add
jmp
shrb
push
jno
add
ja
subb
les
mov
sub
jle
xchg
ret
mov
orl
out
sub
and
adc
add
movq
sub
add
sbb
or
jnp
in
adc
shr
pop
sub
add
jne
jno
les
pop
mov
das
div
psubd
inc
ljmp
mov
sub
jge
addb
fbstp
sub
add
lret
jg
hlt
js
add
cmp
fs
es
cmp
adc
aas
sbb
enter
repnz
or
mov
or
sub
call
cs
pop
pop
clc
pop
loop
js
add
insb
sub
cs
aas
add
div
and
add
insl
cmc
and
xchg
push
push
lcall
data16
or
mov
movsb
push
cmp
mov
or
nop
inc
adc
loopne
cmp
adc
jb
repnz
add
push
sub
adc
add
repz
pop
pop
std
jecxz
call
adc
nop
add
mov
hlt
add
cli
cmc
mov
add
lahf
jae
imul
sbb
xor
cmp
lldt
fmuls
rcrl
push
stc
jns
cmpl
sub
cmp
pop
mov
jno
orb
cmp
cmp
and
sbb
inc
in
pop
add
mov
or
cmpsl
sbb
pop
xchg
xor
cwtl
loop
add
ret
cmpsl
call
out
shr
je
mov
or
mov
and
mov
hlt
pop
sbb
pop
inc
jecxz
inc
pushl
push
add
sub
xor
add
pushf
inc
dec
add
test
filds
stc
lods
notb
add
fnclex
test
neg
mov
sti
mov
mov
cltd
push
std
out
addl
push
and
mov
mov
loopne
fsubrs
mov
sub
leave
js
jge
jg
pop
push
dec
inc
sbb
inc
inc
inc
pop
inc
inc
dec
cmp
dec
dec
dec
dec
dec
dec
push
cs
or
add
pop
sbbb
pop
bound
data16
imul
pop
pop
jg
test
jne
shlb
jns
xor
xor
xorb
sub
add
and
and
sub
mov
jge
loopne
sub
sub
daa
sbb
xor
add
cmp
push
jae
add
pop
aas
cmpsl
cmc
dec
pop
and
sar
ss
rolb
fstl
lret
mov
pop
xor
hlt
subb
bound
testl
add
fdivrs
aad
aam
cmpsb
outsb
pop
add
inc
loopnew
lcall
push
in
lahf
add
mov
add
inc
js
stos
cmpsb
mov
test
fstl
jge
xchg
hlt
in
dec
xor
cwtl
arpl
mov
rolb
sub
outsb
adc
scas
lea
push
out
movb
jle
shl
sbb
loopne
add
inc
dec
dec
jne
aam
pop
orw
dec
inc
mov
xchg
shrl
mov
xor
dec
call
ljmp
add
stos
adc
jg
push
fs
cld
dec
lock
lods
mov
rcrl
inc
mov
incl
add
and
cmp
xor
pop
and
jne
mov
repz
iret
rol
inc
pop
xor
ljmp
inc
mov
or
cmp
pop
rorb
mov
test
adc
std
add
sti
adc
cmc
inc
sub
test
xor
add
loopne
cmp
add
or
orl
add
test
inc
add
test
sbb
mov
das
data16
arpl
add
push
aam
inc
mov
push
pop
pop
push
push
mov
dec
mov
mov
sub
add
xorl
push
movsl
sub
push
test
inc
inc
and
andb
lahf
pushf
sbb
sub
adc
mov
and
es
addb
adc
mov
out
adc
add
add
cmp
sbb
sub
fs
mov
push
or
out
pushl
lahf
out
rorb
add
xchg
sbb
loop
repz
mov
and
push
mov
add
push
push
or
xchg
shrb
push
cmp
addl
jl
pop
inc
add
nop
test
adc
movsb
in
jmp
add
jbe
or
push
call
js
inc
xchg
ficompl
push
dec
subb
jl
add
mov
push
pop
shll
outsb
movsl
into
pop
mov
cld
adc
push
mov
add
add
push
mov
jno
mov
test
xchg
xchg
stos
enter
cmpb
mov
cld
dec
inc
add
mov
mov
mov
mov
pop
loop,pn
add
jae
outsb
jecxz
into
and
sbb
add
dec
inc
push
add
push
push
pop
mov
sub
push
mov
xor
cmp
in
inc
mov
inc
and
sbb
push
jp
mov
add
mov
and
insb
jmp
in
sti
popa
pop
sub
cld
mov
mov
lret
push
leave
lcall
jne
adc
loopne
dec
lock
add
adc
mov
mov
jne
add
clc
daa
push
imul
jge
sub
mov
mov
add
mov
stos
into
fbstp
fstpt
movsb
jo
add
popf
fs
pop
and
xchg
xor
movsb
add
enter
xor
ret
add
incw
and
out
sbb
mov
pop
push
adc
jb
add
sub
cmc
inc
out
clc
sub
xor
adc
push
add
rolb
jae
add
or
out
add
imulb
push
les
cmp
xchg
inc
sub
adc
ljmp
xor
movl
loop
rorb
dec
jns
sub
add
stos
enter
loopne
inc
or
dec
lcall
add
push
or
mov
dec
cltd
cli
loop
add
notl
add
push
or
cmp
jb
pusha
xor
cmp
cmp
sbb
loop
mov
jge
outsb
inc
sbb
inc
fisttpl
icebp
add
add
inc
adc
fimull
pop
or
cmp
push
jp
xchg
jecxz
mov
adc
sub
int3
decb
sbbb
fildl
cmpl
pushl
add
add
dec
and
add
inc
in
aas
add
or
icebp
inc
pop
int
add
xchg
verw
loopne
and
cmp
cmp
push
in
lds
lock
xor
mov
add
out
adc
add
cld
mov
add
or
jle
pop
aas
insl
add
inc
push
pop
lret
add
out
loopne
movzwl
clc
add
repz
movlps
ffreep
push
add
sub
jbe
lldt
dec
inc
add
shll
sub
mov
cltd
gs
add
aaa
add
push
mov
pop
hlt
cmp
test
cmp
push
add
adc
and
adc
jne,pn
mov
sbbb
add
xor
push
inc
lret
push
mov
pop
and
or
loope
mov
add
jne
push
jo
add
iret
daa
xlat
xor
push
cmc
bound
add
mov
lock
sub
fs
dec
in
add
outsl
gs
mov
xlat
leave
push
sub
in
or
or
fcoml
inc
das
hlt
jl
cmp
adc
movsl
mov
mov
nop
or
dec
dec
add
lods
add
xchg
in
es
add
or
cmp
push
xchg
or
jne
mov
mov
or
mov
mov
into
dec
repnz
enter
add
push
in
inc
push
dec
lret
ja
stos
sub
mov
gs
mov
push
in
push
aam
movsb
push
js
dec
add
insb
mov
fcoms
add
in
xchg
nop
mov
cmc
dec
add
movsb
dec
xchg
pop
add
adc
lods
adc
loop
xchg
dec
cmp
add
out
fwait
aam
repnz
cmp
ret
cmp
movsb
cmpl
adc
inc
adc
ss
and
and
or
jmp
sub
add
adc
mov
add
sub
shrl
and
and
cld
mov
ret
lahf
jl
leave
inc
loopne
push
dec
mov
xchg
test
push
xor
movsb
add
xor
adc
mov
push
add
xchg
sarl
jbe
fs
adc
in
mov
loop
push
pcmpeqw
add
dec
aam
xor
or
cmp
ljmp
dec
dec
adc
in
inc
fucom
mov
cld
dec
clc
dec
sbb
filds
test
or
adc
push
inc
add
lret
sbb
add
addl
js
add
call
fdivs
xor
pop
inc
and
push
sbb
cltd
add
icebp
add
push
int3
incl
es
sbb
flds
icebp
push
jp
pop
xchg
add
push
inc
mov
clc
imul
add
adc
mov
ds
push
mov
sbb
add
ja
mov
and
nop
lea
add
out
dec
fisttps
rol
bound
add
jne
andb
sbb
inc
xchg
cmp
xchg
shlb
push
and
rcrl
ret
xor
incl
dec
adc
aam
cmp
cmpsl
mov
xchg
sub
sub
add
or
sbb
push
mov
adc
cmp
imul
add
pop
xor
add
fcmovnb
ljmp
push
add
pop
xchg
and
sbb
lock
jg
xor
add
test
add
or
push
sbb
push
and
and
dec
or
nop
fldcw
ret
js
dec
je
jle
mov
add
sbb
dec
cli
insb
add
add
push
jb
decb
stc
sbbb
add
cmpsl
int3
adc
inc
sub
pop
daa
lret
mov
inc
fadd
xor
addl
mov
add
add
dec
pop
sbbl
mov
mov
cvtdq2ps
hlt
and
pop
and
mov
dec
cmp
inc
jb
out
test
inc
pop
xlat
cli
push
xor
les
inc
add
add
jne
pop
in
ljmp
pop
add
or
xor
shll
jmp
jg
sub
push
ret
add
and
rcrb
test
add
aad
lcall
ss
lock
cmp
cmp
jb
add
iret
xchg
arpl
rorb
add
lods
pop
fnstenv
sub
mov
mov
imul
pop
and
or
addr16
xor
jo
dec
sbb
xor
jbe
into
add
adc
fcmovu
inc
and
push
dec
dec
cmp
adc
adc
xor
dec
nop
fs
fisubrs
hlt
pop
add
lret
icebp
dec
jae
call
push
das
jb
add
dec
hlt
jne
mov
lds
aaa
jg
add
rolb
mov
dec
push
clc
jle
fstl
or
push
add
mov
dec
loopne
popa
loope
test
lcall
les
incb
push
xor
clc
lock
mov
push
gs
repz
inc
aas
push
pop
and
sbb
mov
fisubrs
add
fiaddl
rolb
inc
sti
push
lcall
imul
jmp
pushf
add
cwtl
pop
add
in
inc
cmpb
jne
lock
in
jge
pop
mov
push
je
mov
adc
and
movsl
and
lret
add
int3
add
push
xor
dec
cmpb
jne
add
call
mov
dec
psllw
push
cmp
iret
xor
je
and
cmp
add
pop
push
or
addr16
inc
addl
call
cmpsl
dec
cmp
push
jo
inc
xor
mov
add
adcb
pop
mov
add
mov
ja
inc
jae
or
sub
sbb
je
add
pushf
jbe
aad
xor
sahf
or
or
rolb
shl
shrb
xchg
cmp
adc
divb
add
sub
mov
jmp
and
push
sbb
mov
loopne
cmp
orb
xlat
and
or
rclb
aad
and
jb
xor
mov
scas
loope
add
loopne
pop
dec
and
call
mov
mov
adc
mov
cmpsl
imul
mov
inc
mov
incl
testl
movsl
loopne
call
sarb
xchg
push
xor
inc
lret
push
pop
inc
add
sbb
or
les
mov
cmp
cmp
mov
jecxz
test
je
sub
push
call
mov
add
adc
mov
cmpsb
je
lret
cli
hlt
pop
sbb
imul
xor
ljmp
das
add
and
adc
daa
jne
out
xor
mov
add
dec
push
jl
sub
push
push
push
push
xchg
pop
push
pop
mov
or
or
js
add
mov
leave
test
xor
mov
inc
pusha
adc
push
add
mov
call
sub
lods
pushf
mov
inc
add
xchg
or
daa
adc
inc
push
mov
mov
sbb
inc
and
adc
mov
jb
mov
icebp
pop
imul
inc
xor
mov
xlat
push
add
fisttps
inc
xchg
pusha
add
cs
call
sub
add
push
fs
add
push
dec
lret
xchg
or
je
mov
sbb
xchg
or
xor
lock
add
loopne
push
xchg
sub
aas
call
adc
cltd
inc
mov
in
mov
cli
sub
cmpsl
lods
sub
ret
aam
lcall
mov
stos
adc
add
or
mov
pop
sub
loop
ficoms
sbb
ds
cmpb
dec
inc
fisttps
mov
je,pn
fnstenv
popa
add
add
add
pop
add
pop
xor
sbbb
mov
data16
out
inc
mov
push
push
add
ret
add
dec
mov
jge
stos
pushl
test
pop
add
xchg
add
movb
sbb
lea
clc
js
add
mov
in
enter
lahf
sub
loop
add
dec
inc
push
pop
adc
add
aas
call
mov
pop
or
fwait
or
adc
scas
pop
outsl
xor
push
ret
sub
ss
add
in
scas
test
nop
xchg
subb
and
rorl
and
add
daa
adc
fdivl
or
call
push
pop
popl
add
dec
xchg
push
and
jns
data16
push
add
xchg
ret
and
add
xor
mov
jns
repz
loope
cs
add
push
popf
int
push
addl
push
adc
sub
add
lcall
mov
add
shlb
in
inc
or
repnz
lahf
add
popa
mov
push
sub
add
xchg
xor
add
dec
sbb
add
rcrb
jnp
cmp
clc
pop
fadds
shlb
xchg
sbb
push
ret
sub
jecxz
add
lds
invd
add
data16
sub
pop
xor
je
cltd
and
add
rcr
jg
or
es
mov
mov
sub
pop
dec
adc
mov
sahf
bound
add
pop
inc
mov
nop
in
add
inc
mov
cmp
mov
rcrb
dec
xor
clc
adc
cmp
or
sbb
and
xor
xchg
mov
or
mov
lds
jmp
mov
push
add
mov
dec
add
les
loopne
es
add
js
pop
add
loope
dec
add
pop
es
and
sbbl
incb
mov
push
leave
cmpsb
sbbb
adc
ret
push
daa
jns
dec
adc
pop
jmp
or
mov
movsl
sbb
lock
xchg
insb
add
nop
mov
or
xor
push
leave
adc
sbb
pop
fsubs
sti
mov
adc
loop
dec
sub
jo
inc
add
call
lcall
add
lock
mov
add
arpl
shlb
jge
mov
jg
add
inc
push
mov
add
imul
clc
push
sbb
subl
and
push
and
pusha
repnz
incl
mov
add
mov
stos
insl
bound
push
iret
xor
adcl
stos
xor
add
push
push
pop
fbld
popa
shlb
dec
sub
add
inc
repnz
add
xor
or
push
or
test
test
jae
cmc
add
inc
push
sub
jg
sbb
adc
push
mov
subl
xchg
jg
add
mov
mov
mov
cmp
fiaddl
out
mov
out
add
orb
fwait
pop
cltd
jg
ret
inc
adc
and
lret
les
sbb
adc
lock
or
in
stos
dec
adc
sti
mov
decl
jns
bound
push
inc
dec
or
push
pop
cltd
add
aam
push
mov
sbb
add
mov
testl
pop
add
push
dec
adc
push
push
pop
rclb
or
pop
cmp
add
pop
stos
add
xchg
cmp
dec
loop
shl
xchg
xchg
push
pop
push
dec
adc
repz
add
je
repnz
mov
in
ds
add
arpl
pop
nop
sub
test
movsl
jge
incb
fidivl
leave
push
stos
and
sbb
pop
fwait
test
adc
push
inc
mov
stc
fs
inc
xchg
pop
sub
push
inc
pop
cltd
movsl
jnp
mov
pop
jo
fwait
ljmp
lret
test
ret
push
sub
test
dec
inc
lahf
push
dec
add
push
gs
cmp
pop
mov
call
push
sbb
sti
out
inc
roll
aaa
rorl
call
cmp
ss
inc
add
xchg
adc
lret
inc
xor
mov
insb
add
ret
cwtl
push
je
or
shrl
xchg
cld
fmuls
jne
pop
enter
cltd
adc
pavgw
jmp
push
movsl
adc
es
push
add
or
sub
mov
cmpsb
or
adc
add
xchg
adc
sub
es
mov
lret
inc
xor
xorps
jnp
add
or
cmp
lea
add
mov
sbb
lret
dec
or
addr16
or
mov
ja
test
fisttpl
add
and
add
ret
test
add
shlb
add
xor
cli
mov
cld
cld
int
test
inc
pop
std
mov
push
hlt
cltd
mov
imul
sbb
mov
cli
sbb
pop
xchg
inc
in
xchg
mov
jnp
pop
shrl
dec
or
dec
xlat
shll
aas
cld
and
pop
mov
cmpsl
add
xor
push
not
movsl
repnz
xchg
push
ds
lahf
mov
ss
ljmp
lods
cmp
xrstors
push
test
insl
sahf
in
push
std
pop
sub
inc
add
addb
and
repnz
inc
ror
xchg
cwtl
rol
pop
sbb
pop
mov
es
or
cmp
subl
test
movsl
mov
in
dec
add
sub
add
rcl
mov
mov
inc
mov
add
pop
inc
out
add
or
mov
mov
sbb
orb
cs
test
and
cmp
lds
cmp
adc
stc
xor
inc
pop
adc
insb
and
jbe
movsb
mov
sbb
pop
pushf
and
mov
sbb
lods
hlt
inc
loop,pt
cs
push
jp
cmpsl
jne,pn
insl
out
sbb
loope
roll
les
and
xor
add
xchg
pop
mov
icebp
mov
xor
lods
lock
sbb
mov
or
inc
mov
cmp
pop
subb
pop
lahf
xor
add
and
push
mov
inc
mov
push
jbe
mov
movsl
aam
or
int3
loope
dec
mov
push
out
push
adc
aaa
mov
std
aas
outsl
mov
pusha
cmp
and
in
clc
push
lret
inc
pop
sub
dec
add
je
jns
mov
shrb
mov
pop
add
idivb
cli
ja
pop
leave
pusha
xchg
sub
adc
enter
ds
add
inc
inc
popa
push
cmp
add
mov
push
popf
aad
inc
jbe
in
push
mov
adc
movsb
or
xchg
loopne
push
pop
sbb
cmpsl
pusha
ret
fs
mov
cld
pop
loop
imul
ljmp
mov
lea
jp
mov
andb
or
inc
pop
das
leave
xchg
xor
add
test
pushf
into
rcl
add
sub
pop
sbb
je
jb
add
bound
add
jb
cmp
ljmp
sub
cmp
jns
pop
dec
in
lods
push
add
lods
sub
xor
jno
add
jge
lldt
insl
pop
daa
dec
adc
xchg
mov
xchg
mov
arpl
pop
jae
cwtl
fs
add
xchg
dec
lahf
js
lea
test
add
mov
mov
fbld
push
inc
jmp
push
les
or
xchg
xor
pop
imul
add
xchg
push
pop
add
jle
sahf
add
ss
and
add
stos
push
ret
jns
add
sub
test
mov
push
xchg
push
ror
bswap
hlt
add
negl
or
add
push
loope
mov
and
jne
adc
pop
cmpsb
call
mov
push
inc
addr16
cmpsb
jb
gs
jb
pop
and
lods
fwait
add
push
bound
pop
pop
xlat
inc
or
nop
popf
scas
push
insl
xchg
jnp
add
fsubrl
and
mov
arpl
cmp
adc
push
jmp
add
or
jbe
inc
aam
popf
adc
lret
in
lods
adc
out
outsb
and
scas
jbe
mov
mov
or
add
cli
cmpsb
adc
add
add
sbb
popl
ret
add
add
jns
add
lret
sti
push
out
jbe
add
mov
ja
jl
dec
test
ret
push
inc
lahf
xchg
pop
xorl
enter
cmp
leave
mov
adc
stc
insl
lds
int3
push
jg
jecxz
sub
adc
push
arpl
add
jge
pushw
jbe
add
mov
pop
dec
push
inc
jl
pusha
add
jbe
outsb
cmp
jp
imul
imul
add
push
jl
nop
jp
lods
outsb
pop
xor
andb
adc
pop
ds
inc
outsl
insb
pop
gs
push
jg
jae
jge
lret
inc
not
fs
aad
and
popa
mov
add
jno
popf
jp
fstpt
mov
dec
sbb
outsb
dec
arpl
add
dec
add
push
push
data16
cmpsl
addl
mov
add
je
jl,pn
aad
mov
cmp
addb
fs
inc
xchg
mov
or
subl
inc
outsl
frstor
sbb
inc
add
push
nop
ja
jo
out
and
test
ret
xchg
jb
loop
pop
popa
clc
in
add
je
adc
sbb
push
test
jecxz
add
leave
xorb
or
sub
cmp
push
pop
mov
pusha
add
jecxz
pop
mov
push
push
mov
adc
popa
jbe
arpl
fildl
cmp
add
nop
lods
jbe
adc
aas
imul
push
cli
mov
sbb
xor
add
or
pusha
push
cwtl
sbb
and
arpl
cmp
popa
add
rolb
mov
adc
inc
jne
mov
push
mov
out
insb
pop
xorb
mov
fwait
mov
add
adc
enter
add
jp
sbb
jle
add
in
add
daa
cmp
xchg
adc
adc
add
push
jnp
js
fadds
adc
inc
xor
lods
xchg
loope
repnz
out
faddl
in
enter
pop
mov
lock
jae
jp
add
xor
jno
loopne
mov
enter
push
sbb
add
or
mov
das
std
add
lahf
in
xor
dec
push
out
aaa
sbbl
movb
cmpb
inc
push
add
out
mov
leave
or
lahf
bound
mov
xchg
adc
or
cmp
jo
mov
mov
bswap
add
pop
popf
pop
adc
stc
roll
mov
xor
fwait
loopne
push
enter
ret
cmp
pop
jmp
pop
push
mov
psubq
dec
add
cmc
inc
ljmp
jle
dec
sbb
xadd
add
into
and
fisubs
cmp
sahf
dec
pop
mov
push
mov
xchg
xor
and
mov
inc
adc
test
push
rclb
mov
sti
outsb
mov
inc
pop
cmc
pusha
adc
add
into
adc
repz
xor
and
pop
incl
ret
fimuls
idivb
call
jecxz
sub
xchg
pop
lods
cmp
mov
add
outsb
xor
call
jnp
xor
xor
push
enter
cmp
inc
ret
xor
in
dec
add
dec
sub
xchg
push
push
push
jle
clc
push
loopne
ljmp
sbb
out
movsl
adc
xchg
dec
pusha
push
lea
xchg
adc
xor
mov
stos
sbb
jg
add
insb
outsl
and
je
mov
fiadds
mov
jg
pop
add
int
adcb
xor
xor
daa
daa
testb
loop
pop
aas
adc
je
int
fstl
mov
cmp
stos
addb
into
loopne
mov
cmpsb
and
add
bswap
fisubrs
dec
dec
lods
test
and
sahf
lock
sarb
shr
aam
mov
cli
push
and
subl
aad
mov
mov
sub
mov
andl
in
add
rclb
inc
pusha
aam
fcoms
faddl
les
ja
add
inc
lock
dec
stc
loope
lcall
hlt
les
cld
inc
sbb
cmp
sarl
xchg
sbbl
lcall
sbb
and
adc
inc
add
icebp
sbb
mov
cld
jecxz
or
testb
add
aas
adc
cmp
lds
inc
push
xor
add
jnp
cmp
inc
addb
fmuls
mov
cmp
sbb
or
rclb
jp
lods
nop
clc
sahf
jl
jae
add
fldl
pushf
or
aam
imul
mov
leave
das
push
push
pop
rorb
mov
pop
add
jae
scas
fsubrl
fadds
jle
mov
pop
sbb
inc
or
adc
add
cmp
add
xchg
rorl
scas
add
mov
sub
dec
test
and
orb
or
pop
push
cwtl
sub
adc
mov
xor
add
comiss
roll
jne
add
je
outsl
add
and
adc
aad
push
jne
add
das
pop
pop
add
in
pop
in
lret
enter
push
mov
mov
add
push
out
aas
rolb
test
addb
cmp
jne
pop
addb
add
jge
push
push
pop
iret
adc
sarb
insl
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
fsubrl
add
sub
inc
mov
jmp
sub
stos
add
addr16
jl
mov
pop
or
pusha
cmp
sub
cmp
add
mov
or
xor
roll
push
sbb
sbb
push
and
mov
cli
dec
add
or
or
fildll
shl
add
call
xor
loope
and
xlat
push
mov
rcll
cmp
jle
sbb
mov
clc
inc
mov
mov
inc
imul
or
shl
mov
and
dec
lods
andb
mov
inc
fists
in
xchg
push
cmp
pop
outsb
fs
outsl
jne
or
add
scas
xchg
test
enter
call
rorl
hlt
popa
fadds
mov
cmc
xchg
jge
push
call
jg
and
mov
mulb
nop
mov
sar
es
inc
add
cmp
call
cmp
je
jnp
popa
add
xchg
lret
jge
lcall
test
in
je
sub
pop
fiadds
jnp
subb
mov
fadds
call
adc
je
add
dec
push
cmp
mov
or
je
add
stos
pop
repnz
add
mov
xchg
sarb
xor
jmp
fisubl
pop
jae
add
mov
pop
jge
add
cmp
loop
dec
call
push
fiadds
and
pop
clc
mov
push
out
or
lods
pushl
mov
add
xlat
mov
jo
push
cs
cmp
inc
and
lea
pop
pushaw
cmp
mov
lret
add
add
jg
enter
je
pop
cmp
cmp
push
adc
add
push
out
ds
leave
cmpb
out
iret
add
cmp
cmpsb
xlat
pop
or
rol
loop
xchg
outsl
dec
add
testl
add
movl
xorb
dec
imul
inc
mov
or
inc
addb
sbb
je
mov
cwtl
add
mov
xor
sahf
xchg
pop
push
bound
or
or
xchg
in
adc
decl
scas
roll
cs
popa
arpl
and
aad
jo
jle
add
dec
pusha
lahf
push
cld
roll
stc
cmp
addl
mov
dec
fwait
repnz
rorb
or
fs
add
stc
sub
push
mov
inc
sub
fldl
call
les
aad
ljmp
stos
mov
jnp
adc
xchg
adc
mov
pushf
mov
push
dec
sahf
imul
clc
pusha
push
mov
lea
xchg
and
repz
adc
and
or
sbb
nop
cld
sbb
add
cmpsl
sbb
pop
cltd
sbb
adc
shrb
call
test
mov
add
sub
add
jo
push
jle
jae
pop
test
ds
mov
dec
lds
lock
or
jo
pop
inc
jle
jmp
xlat
jo
rclb
fiaddl
add
inc
jmp
lea
scas
cmp
ds
cmp
mov
adc
jae
mov
add
add
imull
fildl
xchg
add
sbb
add
or
fildl
add
jmp
in
add
push
add
fwait
mov
lods
jp
cmp
lea
out
jo
add
add
andb
add
xchg
addl
mov
or
and
lea
or
andb
mov
rorl
popa
xor
mov
cld
inc
add
ret
call
lock
orl
jo
add
push
cmp
fistps
and
sub
sub
add
sub
add
es
adc
call
ret
jne
cmp
jae
test
ljmp
jbe
loopne
nop
in
js
mov
add
ret
add
pushf
lret
inc
or
dec
test
adc
push
dec
shrl
xlat
iret
push
and
inc
pop
fiadds
push
push
add
add
sti
or
inc
sbb
lea
or
sub
jbe
dec
sbb
xorb
add
movl
ret
aad
test
inc
push
mov
xor
jmp
adc
and
inc
inc
pop
add
and
push
ljmp
add
sbb
or
or
xorb
fs
cmp
mov
subb
push
dec
and
inc
inc
dec
xchg
lahf
add
lret
jb
adc
test
xor
mov
add
ss
add
sbb
push
mov
lea
add
add
cmp
and
pop
sbb
push
loope
jnp
add
cmp
pop
xchg
push
and
sub
sbbb
movsl
ret
imul
mov
or
cmp
outsl
pop
test
add
pushl
icebp
nop
jle
stos
add
sbb
loopne
fisubl
add
or
pop
loope
pushf
jle
push
sbb
cmpsl
in
dec
shlb
fsubs
push
js
dec
add
xlat
nop
add
xor
jns
fnstsw
add
adc
push
mov
lods
and
sbb
pop
add
sub
sbb
push
cmp
dec
xor
addw
inc
lret
adc
xchg
cmp
mov
add
lock
or
cmpsl
add
mov
xchg
std
imul
adc
push
sbb
mov
inc
xchg
lret
or
das
mov
add
adc
clc
mov
mov
jg
imul
loope
icebp
paddusb
mov
mov
or
add
add
lret
add
daa
dec
push
sub
sub
add
mov
xorl
daa
ja
popa
add
add
fyl2xp1
pop
shlb
mov
movb
push
xor
fwait
cmp
dec
add
jns
sbbb
leave
iret
adc
sarb
add
call
rcl
mov
pop
add
int
into
push
dec
fstps
cli
jmp
enter
fs
sub
pop
rclb
add
cmp
inc
cmp
sub
cmp
test
dec
es
dec
add
ljmp
in
add
ret
lods
mov
and
mul
add
pop
adc
dec
mov
xchg
pop
mov
ret
pxor
fisttpll
in
mov
jne
xchg
add
pop
aam
dec
sub
adc
dec
push
xlat
add
test
or
mov
xchg
xchg
sar
dec
in
mov
and
fdiv
lret
add
inc
fstl
pop
or
daa
test
and
nop
jbe
push
testl
mov
stos
loope
pusha
push
push
pusha
push
and
add
lahf
clc
jge
stos
inc
imul
mov
hlt
ja
add
js
inc
je
dec
fcomp
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
push
test
inc
inc
mov
add
sbb
in
add
rcrb
je
jbe
test
xchg
xchg
jmp
ret
sub
lock
leave
jecxz
cmp
call
inc
out
add
push
call
add
ds
imul
push
gs
roll
dec
add
push
pop
jb
movhlps
push
jmp
xor
mov
gs
push
hlt
mov
and
repnz
enter
add
das
out
daa
jl
scas
add
cwtl
jo
test
push
or
outsb
add
cmp
test
or
xchg
mov
aam
add
inc
lods
push
popf
jb
sub
jnp
cmp
cmpsb
add
cmp
add
imul
add
je
xchg
out
sub
inc
mov
and
add
dec
push
add
cmp
jbe
ds
sarl
int3
or
mov
add
stc
cmp
sbb
sub
arpl
cmove
push
push
pusha
or
iret
push
push
sahf
add
dec
push
dec
jge
les
jmp
xchg
rclb
rclb
jle
sbb
jnp
cmp
cmp
aad
push
mov
mov
mov
xlat
mov
sub
cmpsb
imul
call
fs
ret
rcll
scas
cmp
and
mov
mov
cmpsl
and
loopne
push
mov
xchg
push
arpl
inc
iret
pop
mov
add
dec
pop
mov
sbb
add
loop
mov
or
adc
ret
add
xchg
ja
mull
cmp
sbb
adc
mov
xchg
ret
loop
clc
je
add
sub
dec
jb
adc
adc
fildll
sarl
je
push
cmc
xchg
inc
push
cmp
aas
xor
fisttpll
or
xchg
push
adc
mov
repz
jmp
xor
pop
mov
pop
or
shll
xor
scas
inc
out
inc
add
xor
int
sarl
loopne
scas
mov
adc
inc
movsb
jo
stos
dec
leave
add
pop
or
lock
negl
add
and
push
test
rorb
xchg
test
into
test
push
add
jbe
popf
pop
mov
push
cmp
xor
inc
add
or
movb
cmp
adcb
push
test
sub
ljmp
sub
jo
es
aas
dec
push
add
pop
clc
jae
incl
sbb
je
mov
sub
jbe
sub
call
mov
sub
pusha
xorb
cwtl
out
mov
test
jb
adc
and
movsb
lock
pop
add
add
pusha
xorb
mov
mov
jmp
enter
cld
pushf
pop
movsb
cmp
add
mov
add
addb
or
leave
and
adc
pusha
scas
fstl
inc
dec
inc
or
mov
dec
xorb
stos
ret
jae
inc
imull
dec
and
xchg
mov
and
in
test
ja
jmp
divl
daa
jb
aas
lcall
popf
xchg
push
add
leave
ljmp
sbb
es
sti
add
lahf
stc
inc
add
loopne
ret
add
pop
aam
or
xor
call
add
leave
cmp
lea
or
push
pmulhuw
ret
dec
jbe
pop
add
push
mov
or
repnz
jmp
add
xchg
shlb
jmp
rolb
push
xchg
loop
push
xchg
stos
shlb
int
and
popa
leave
xchg
inc
inc
mov
dec
add
sbb
jge
adcb
jb
push
dec
mov
add
pop
or
inc
cmpl
jmp
jge
pop
xor
xchg
je
add
and
mov
movsl
popf
adc
or
add
and
sub
add
lea
inc
add
repz
stos
daa
mov
lock
add
xor
out
mov
add
incl
mov
and
mov
add
ljmp
sub
adc
mov
aam
push
addr16
add
int3
call
enter
mov
push
sbb
push
dec
sbb
push
in
mov
cwtl
lock
inc
mov
sub
cmp
xchg
pop
xchg
sbb
mov
fmull
cs
jbe
add
and
rclb
xchg
add
hlt
pusha
cltd
xchg
push
add
fbld
leave
imul
add
xchg
gs
mov
dec
cltd
dec
xor
mov
mov
in
add
mov
jo
popa
dec
cmc
pop
add
aas
push
and
push
cs
sub
jno
pop
pushl
jge
arpl
add
ja
pop
add
sub
cmpsl
or
or
jbe
or
hlt
add
loopne
cmp
fidivl
out
or
scas
cld
cmp
pop
mov
cltd
rcll
pop
aad
loopne
jl
enter
sarl
enter
bound
jns
jp
addb
popa
loope
out
and
adc
push
mov
enter
test
add
and
les
std
mull
cmpsb
scas
cmp
pop
jg
inc
mov
mov
push
add
lret
call
add
jae
pop
mov
test
pop
lahf
jo
inc
or
push
dec
add
decl
mov
sub
sub
sub
fwait
jo
add
and
lret
ja
or
cmp
je
mov
mov
mov
sbb
rolb
mov
gs
add
jge
adc
sub
or
into
shlb
add
jmp
add
add
lahf
jb
jae
add
jge
cld
rolb
add
ss
jb
xor
push
inc
add
sub
add
adc
pop
jne
or
rolb
dec
mov
ds
add
daa
push
cmpsb
adc
cmp
pop
test
push
or
dec
out
mov
mov
addl
xor
add
ljmp
lods
push
movsb
nop
dec
sbb
or
add
aam
xchg
push
push
or
push
dec
aad
cld
dec
sub
inc
pusha
add
fs
jl
push
fldenv
cmpsb
adc
inc
mov
pusha
mov
jae
mov
sarl
addl
mov
call
add
mov
sbb
jne
add
adc
mov
in
push
xchg
or
sbb
mov
pop
xor
mov
in
inc
or
out
testl
cmc
test
sub
adc
aam
jg
xor
mov
sbb
adc
mov
and
cmp
xorb
insb
add
ja
sbb
rorl
cwtl
xlat
cmp
xchg
orb
fucomip
cwtl
cwtl
cli
add
jbe
mov
cmp
sbbb
inc
add
dec
xor
xchg
imull
and
roll
clc
pop
xchg
mov
add
out
cwtl
mov
mov
int3
cmp
cmp
andb
jnp
fcomps
in
pop
xor
sub
sub
bswap
jle
push
pop
imul
dec
flds
bound
and
rolb
cmpb
pop
aas
inc
and
test
pop
fisubrs
sbb
add
cmpsl
xchg
pushf
add
push
test
mov
pop
nopl
lret
into
jns
sub
mov
jl
mov
inc
mov
ret
hlt
decb
cmp
arpl
insb
add
orb
cmpsb
dec
pop
clc
shrl
stc
cmp
adc
fstpl
aam
lods
popl
dec
pop
lret
or
and
mov
push
push
popa
jae
xorb
ss
outsl
dec
add
dec
outsb
je
and
testl
push
and
cmp
arpl
int3
iret
pop
sahf
dec
popa
outsl
and
ds
mov
xor
in
jl
push
add
in
pop
push
mov
addl
inc
xor
push
xchg
or
jle
add
jmp
push
add
or
lret
icebp
xlat
push
shrl
in
mov
jne
call
jmp
inc
add
jmp
iret
les
notb
lahf
pop
sub
je
xor
shl
add
inc
mov
cmp
push
sbb
mov
dec
dec
test
fstpt
idivb
je
adc
adc
mov
sbb
xor
aad
insb
sub
cli
add
inc
xlat
cmpsb
mov
cld
push
and
jl
and
add
cmp
rol
in
add
jae
mov
pop
xchg
or
jp
inc
inc
add
gs
mov
dec
add
push
sub
mov
mov
arpl
or
jbe
cmp
cltd
mov
inc
add
cmpl
or
sub
enter
push
sbb
sarb
repz
adc
and
or
lea
call
pop
or
cmp
xorb
jp
je
fcompl
inc
fcom
clc
adc
call
mov
fiaddl
adc
dec
add
hlt
test
fcoms
push
imul
xchg
dec
adc
add
fidivrs
rolb
sbb
pushf
aad
call
lds
cmpsb
add
jecxz
imul
add
scas
sbb
pop
cltd
mov
in
mov
or
or
xor
and
push
jmp
data16
aaa
add
push
adc
adcl
movsb
sub
fmuls
sahf
sbb
inc
sub
lahf
adcl
lea
mov
mov
test
mov
outsl
outsb
clc
mov
cltd
jmp
jge
add
add
or
cmp
add
jmp
and
inc
pop
dec
stc
inc
add
mov
add
add
cltd
mov
aas
mov
jle
add
aam
lcall
cmp
mov
inc
pop
fwait
roll
leave
push
pop
or
pop
sete
add
dec
lods
loop
je
adc
add
xchg
paddq
movsl
fdivrs
call
clc
filds
sbb
pcmpeqb
push
mov
pop
lahf
icebp
pop
shrb
dec
lock
aaa
push
sbb
and
push
dec
xor
cmpsl
nopl
xchg
mov
movb
notl
nop
fisttpl
movsl
mov
incb
and
outsb
sub
push
xor
sbb
lock
or
add
mov
cli
call
add
mov
add
loopne
or
ljmp
es
adc
add
out
pop
push
or
outsl
fwait
ret
mov
std
add
and
fiaddl
add
push
pop
and
data16
sbb
xlat
addb
ficompl
ret
mov
mov
push
testl
pop
jg
aas
add
adc
and
cmp
sbb
inc
sbb
ja
cld
sub
add
stos
loope
aaa
pmaxsw
dec
add
dec
loopne
jb
cli
dec
add
ret
jl
inc
cmpb
jle
in
pop
jmp
cld
or
pop
adc
add
add
xor
push
ret
add
out
dec
add
sar
imulb
add
add
pop
loopne
pop
sbb
sbb
or
jo
dec
rolb
andb
rcr
or
aaa
incl
add
in
adc
loopne
mov
pop
pop
stos
daa
hlt
aas
incb
add
cli
xchg
lea
stc
cmc
add
adc
add
lods
dec
sub
mov
das
add
in
push
or
icebp
pushf
mov
cmp
addb
sub
fsubrs
add
imul
sub
lock
stc
gs
lods
sar
ljmp
cmp
sub
push
xchg
xorl
in
pop
nop
adc
andb
xchg
xchg
scas
sub
arpl
xchg
add
sbb
cs
sarb
or
add
add
cltd
or
mov
fwait
andb
mov
add
sbb
or
mov
add
orb
frstor
rolb
fld
test
scas
mov
sub
pop
ss
mov
xor
inc
cmp
xchg
or
and
test
add
sti
les
push
add
fstpl
add
xchg
pop
les
das
mov
je
leave
adc
scas
lods
xchg
jg
add
mov
adc
fimull
enter
enter
add
xchg
sbb
loopne
add
mov
push
mov
lahf
push
les
mov
rolb
imul
in
scas
rol
add
pop
popf
js
gs
add
call
lahf
lcall
push
mov
adc
lods
ds
pop
ss
inc
sbb
lret
mov
mov
lcall
in
add
adc
fstl
cmpsb
mov
xor
jnp
repnz
pusha
icebp
incb
ret
add
cld
or
inc
addl
pop
pop
iret
push
add
fwait
dec
imul
mov
pop
mov
inc
inc
out
icebp
es
mov
mov
daa
jo
testb
sbb
pop
xchg
jge
cmp
hlt
push
add
icebp
fldl
xor
movsl
cmp
push
sub
iret
and
jle
loopne
aad
jge
addl
sub
lea
and
movsb
push
cmp
inc
sub
sbb
inc
sbb
xor
add
mov
jle
aam
scas
ss
pop
pusha
shrb
or
aaa
add
testl
jmp
add
pop
cmp
add
test
fsubs
imul
mov
ud1
cmp
lea
dec
sub
popf
add
mov
mov
xor
sub
cmp
or
mov
mov
mov
enter
ret
lock
mov
cmp
pcmpeqw
adc
fdiv
add
jecxz
jle
mov
add
aaa
shr
loop
cmp
and
or
fcoml
jl
rcll
insb
adc
jns
add
cmovp
cmpsb
or
mov
nop
aam
bnd
pop
lahf
pop
stos
and
mov
out
lret
jb
aam
stos
add
xor
push
xlat
inc
or
shr
inc
xchg
movmskps
sbb
and
test
in
fmuls
stos
roll
flds
cltd
iret
adc
rclb
sbbl
mov
andb
cmp
and
and
nop
popf
lcall
dec
add
into
cld
push
mov
fists
mov
add
popl
stc
xor
adcl
aam
add
rorb
inc
xor
lods
add
sub
inc
pop
push
ljmp
mov
dec
pusha
add
fdivl
lcall
lret
loopne
je
adc
or
add
dec
sbb
es
add
ljmp
add
lea
rsqrtps
movsl
arpl
mov
add
popa
sbb
cmp
and
out
add
shr
add
movl
cmpsb
pop
mov
xchg
sbbb
sbb
sub
jle
movsl
add
dec
push
pop
dec
pusha
pop
sarb
add
or
hlt
add
pusha
or
adc
pop
daa
sbb
aam
add
pusha
jo
andb
add
xchg
add
and
add
mov
lret
xorb
or
or
or
xor
adc
enter
push
mov
push
mov
push
cmp
jb
push
push
add
leave
sbb
add
jo
xchg
xor
add
shl
sbbl
lock
add
add
das
pop
je
out
pop
not
add
jb
daa
inc
adc
add
pusha
ftst
pop
mov
iret
and
sbb
fwait
popa
mov
pop
pop
mov
stos
lods
jmp
xchg
add
xchg
imul
jg
dec
mov
cwtl
sbb
mov
sub
sbb
mov
stos
pop
mov
test
xchg
and
add
push
or
cmp
mov
xchg
or
cmp
lds
mov
xchg
inc
add
ret
adc
pop
or
jno
xor
mov
push
daa
adc
xchg
loopne
rorl
add
add
sbb
jno
pusha
add
mov
jle
loopne
add
add
cmp
cwtl
jge
add
and
jl
mov
cltd
push
mov
pushf
idivb
rcll
into
and
add
mov
mov
int3
sbb
add
fstl
and
cwtl
lods
cli
lret
and
add
loope
fmulp
call
add
dec
test
sbb
lds
or
sub
xchg
inc
add
pushl
add
pop
xor
cwtl
rcrb
and
dec
addb
leave
add
mov
shll
xchg
and
ss
mov
or
xchg
cmp
xorl
cmp
mov
add
add
add
in
push
jo
sub
jb
movsb
cmp
mov
inc
mov
add
bound
loope
xchg
dec
pop
pause
in
outsl
xor
jge
pop
stc
roll
daa
js
arpl
add
mov
cmp
pop
and
and
xchg
sub
enter
mov
add
mov
inc
push
sub
or
xchg
icebp
jmp
add
xor
stos
cwtl
mov
xor
or
lock
and
add
or
fadds
aaa
dec
jns
and
int
mov
ret
xor
pop
call
cs
add
les
jmp
sub
imul
aad
inc
mov
jo
nop
insl
add
mov
std
add
jp
shl
add
fiadds
clc
cmp
inc
add
push
push
aaa
inc
movsb
inc
mov
sbb
jo
mov
xor
or
adc
inc
rolb
add
add
jmp
push
add
push
inc
pop
add
lahf
jne
mov
leave
add
or
push
cwtl
push
inc
inc
mov
mov
shl
movsb
clc
pop
push
pop
or
pusha
scas
add
dec
cli
add
jl
add
daa
and
sub
cmp
sub
lea
push
add
pop
int
aad
shll
add
push
push
xchg
push
add
xor
rorb
adc
add
adc
lea
mov
xchg
push
mov
movsb
int3
xchg
or
mov
xor
mov
add
stc
testb
fcom
mov
nopl
xor
inc
jmp
jne
aas
sub
pop
pop
lods
fdiv
repnz
cmp
rorb
and
add
pusha
dec
sub
ljmp
xchg
or
sub
push
pop
in
add
ja
jno
movb
and
inc
dec
xchg
cmpsl
in
rolb
lret
and
popf
or
add
rorb
xchg
xchg
inc
sbb
xchg
lock
andl
adc
mov
lods
das
or
jb
jnp
dec
sbb
cmp
add
rclb
cld
mov
adc
dec
sub
testl
sub
aas
add
mov
in
mov
int3
jo
add
arpl
mov
push
fadd
addr16
popa
push
sbbb
xchg
push
jae
add
fisttpl
push
add
stos
xor
jae
cs
and
or
rcrl
mov
adc
pop
icebp
out
inc
mov
dec
jg
add
mov
fwait
jb
xor
add
adc
sbb
adc
mov
das
jle
push
into
cmpsl
xor
int3
int
iret
ror
ljmp
imul
sub
mov
add
pusha
ja
pop
les
aas
xchg
scas
push
xchg
cmp
cld
cli
add
incl
jb
jno
add
pop
add
push
add
cs
and
add
sub
or
mov
mov
daa
dec
xor
mov
clc
add
xchg
mov
iret
jns
sub
or
out
sbb
int
inc
cmp
and
cwtl
jb
add
std
add
sbb
jmp
pop
xorl
sub
inc
inc
mov
in
ret
movsb
mov
sbb
add
test
add
add
dec
sbb
je
loop
mov
jmp
sbb
enter
pop
pop
mov
pop
push
in
fldl
bound
nop
push
adc
mov
add
cmp
loopne
jae
xchg
sbb
inc
roll
push
verr
fisubl
jnp
xchg
and
adc
or
sub
cld
imul
outsb
sub
add
icebp
testb
subl
jae
add
int
dec
or
lret
movsb
add
fnstsw
popa
cli
fcoml
adc
or
lret
mov
push
inc
orl
pushf
das
add
loopne
or
shlb
mov
mov
jo
push
out
test
xchg
fs
outsb
xchg
addr16
add
and
add
push
lods
ljmp
push
pusha
call
add
or
je
xchg
bound
shlb
ret
add
mov
clc
rolb
aas
push
cmp
ret
pop
push
sub
add
lods
sbb
repnz
push
jnp
mov
or
rol
imul
js
pusha
inc
pop
inc
adc
aad
mov
insb
jno
dec
add
das
mov
and
xor
and
xor
jg
cmp
stc
pushf
bswap
or
jge
xchg
adc
data16
pop
flds
je
lcall
lock
push
loopne
and
add
loop
adc
add
and
das
cmp
inc
verw
or
adc
mov
push
push
into
aas
cmp
movsl
xor
mov
xchg
inc
test
sbb
fiaddl
add
push
or
mov
in
add
mov
sub
add
inc
jp
fimuls
lds
clc
jge
test
inc
sbb
mov
sbb
sbb
xchg
into
push
inc
sbb
add
or
test
scas
cmp
mov
mov
add
or
pop
nop
hlt
dec
push
js
add
ja
sbb
negl
sub
add
es
xchg
sbb
sbb
push
inc
jno
inc
adc
jg
in
adc
xchg
aas
jl
push
and
add
push
or
notb
hlt
jmp
sub
pop
sti
and
or
inc
pop
sub
loop
cmc
addb
pop
jge
or
push
add
xchg
add
leave
call
pop
inc
or
stos
push
and
movsl
add
mov
cltd
add
aas
shlb
dec
ret
jg
mov
add
flds
xchg
xor
clc
jecxz
add
shl
jmp
addb
lock
pop
jle
lds
hlt
fadd
mov
adc
cmp
xor
and
add
icebp
pop
xchg
hlt
xchg
add
mov
sbb
lods
jle
pop
or
ljmp
xor
and
dec
jnp
adc
mov
je
push
inc
inc
pusha
jle
pop
push
xlat
pop
ss
lock
sub
pop
in
add
popa
jae
jo
call
mov
sbb
xor
rorb
sub
sahf
push
sub
outsb
dec
add
cld
add
mov
mov
pop
cmpl
jmp
cmpsl
cld
sti
add
bnd
mov
and
xchg
add
sub
popf
and
adc
mov
jp
ret
inc
jmp
xchg
mov
mov
jecxz
mov
add
xchg
out
jl
add
aad
add
lods
add
mov
xor
clc
adc
dec
ljmp
xchg
add
xor
jl
add
hlt
rcll
and
movsl
clc
data16
insb
cmp
cmp
std
xchg
ret
or
mov
test
push
lods
stc
fsts
aam
ds
add
push
nop
jmp
add
fisttps
push
adc
stc
add
jae
lds
das
in
popa
movb
sub
or
cltd
cmp
ret
testl
xlat
jecxz
enter
xchg
notb
aam
icebp
mov
movsl
jae
mov
add
or
and
add
and
add
and
add
sbbl
cld
add
cs
not
inc
mov
push
test
sbb
and
jle
in
or
push
jne
inc
jg
shll
bnd
mov
pop
cmovg
pop
fildl
test
fwait
jmp
cmpsl
gs
adc
repnz
test
push
mov
mov
dec
or
movb
cmp
ds
pop
sub
or
mov
and
jnp
loopne
cwtl
pop
add
negb
mov
jbe
add
jno
das
inc
add
add
or
rcr
in
loopne
sahf
ja
dec
daa
mov
add
test
jb
jae
push
mov
incl
fcomps
fistpl
lods
add
mov
fmulp
xor
stos
jo
mov
mov
push
xchg
mov
and
lds
add
das
aam
and
add
test
adc
testb
mov
dec
rorb
mov
mov
in
clc
jnp
jns
add
sub
add
int3
pshufw
adc
nop
int
cld
mov
cwtl
pop
mov
addl
jne
inc
add
inc
clc
and
add
inc
data16
cltd
mov
xchg
push
add
daa
cmp
push
rclb
sbb
or
mov
and
add
push
mov
jo
add
pop
cs
rcl
or
cltd
add
sbb
addb
mov
test
sub
add
push
stc
push
and
xchg
inc
cld
adc
add
orb
adc
sub
pop
or
and
std
mov
mov
xchg
inc
inc
test
call
cmpb
pop
ret
fildl
xor
cmp
add
or
ja
add
inc
xchg
out
pop
sbb
pusha
and
outsb
jb
pop
imul
xor
push
or
rcrb
add
lock
sti
daa
and
sub
add
or
inc
sub
mov
dec
ds
mov
ret
ljmp
mov
push
xchg
cmpsl
jl
add
add
and
shll
call
nop
add
cs
jne
les
inc
dec
mov
adc
in
imul
add
jg
pop
add
in
and
add
fs
addl
outsl
je
xor
mov
aam
int3
pop
push
pop
inc
mov
adc
mov
dec
lahf
push
mull
addb
and
ds
sbb
jo
mov
xchg
pop
pop
enter
repz
lcall
dec
aas
dec
sbb
jmp
sbb
or
sbb
inc
xchg
shrl
jmp
pop
mov
pop
out
cmp
or
cmp
pop
mov
xchg
push
filds
sbb
dec
jl
xchg
add
add
shll
dec
int3
inc
movsl
and
repnz
xchg
add
lea
jo
rclb
in
push
cltd
rolb
or
sub
mov
pusha
rclb
mov
inc
mov
repnz
icebp
out
sbb
xor
mov
aad
push
add
dec
mov
dec
inc
js
jnp
mov
faddl
imul
out
adc
add
addl
lret
add
or
sub
leave
xchg
push
push
add
aaa
xchg
cmp
shll
dec
jle
jb
add
cmp
je
stos
push
jecxz
and
pop
xchg
add
sbb
dec
mov
mov
xchg
push
pop
pop
jae
rclb
into
or
loop
push
add
sub
sbb
test
add
mov
adc
fs
or
cld
test
cmp
lock
mov
or
test
jp
cmp
mov
test
push
push
adc
xor
fildl
inc
iret
pop
mov
sbb
mov
addb
imul
incb
xor
sbb
push
jae
adc
adc
add
xor
cmc
test
mov
imul
call
gs
cmpl
pop
ret
or
loop
add
or
mov
aad
shlb
stc
jne
add
cmp
pop
stos
nop
shrb
adc
popa
xchg
sub
hlt
in
cwtl
fiadds
loope
pop
sub
inc
inc
add
mov
sarb
mov
test
add
test
je
or
jne
inc
add
aam
lcall
or
nop
add
sub
push
ljmp
xchg
arpl
add
das
jmp
fcomp
test
clc
add
cltd
mov
inc
xor
or
xorb
sbb
jo
add
je
pushl
or
push
rolb
inc
inc
mov
add
mov
xchg
mov
out
repnz
xchg
pop
mov
pusha
dec
jmp
pop
fcmovne
adc
mov
cmpsb
ret
sbb
sub
xlat
mov
in
add
cld
add
add
or
dec
xchg
pusha
add
or
or
inc
pop
or
adc
ret
add
dec
or
or
add
add
std
xor
rcr
adc
jmp
cli
mov
mov
add
nop
daa
ja
add
xchg
xlat
xchg
add
add
add
lret
or
adc
add
fsubrs
dec
cmpsb
leave
push
add
xlat
out
dec
mov
sbb
dec
adc
xchg
push
adc
adc
pop
andb
mov
into
inc
pop
jo
lcall
xchg
fsubrl
ret
xor
mov
fstpt
push
mov
lret
or
xchg
add
adc
or
iret
out
lock
mov
and
add
insb
dec
fs
stos
lock
ret
add
push
adc
push
cmp
pop
sti
add
into
repz
sub
add
cmp
add
mov
andb
incl
jns
gs
push
fnstcw
in
jl
aaa
xor
std
add
lods
jne
fcmovnb
dec
gs
add
or
and
lea
xchg
mov
or
add
pop
mov
pop
sbb
clc
test
push
add
rorb
add
and
out
in
lahf
and
add
stc
xchg
dec
sbb
divb
mov
insb
push
push
add
fisubrl
push
mov
dec
jmp
fcmove
mov
hlt
out
imul
mov
flds
nop
shlb
ret
and
inc
pop
add
jae
jmp
pusha
or
add
mov
clc
ds
cmp
push
les
loopne
sub
sub
xchg
xor
in
sbb
incl
mov
pop
xor
jae
pop
in
data16
sarl
add
adc
dec
push
pop
cld
in
mov
fdivrs
mov
add
cmp
push
jl
add
mov
rolb
or
adc
sbb
or
jl
addb
fmull
repz
call
loope
xor
add
fs
enter
lret
add
add
xor
adc
ds
add
inc
and
sbb
add
inc
rclb
test
fidivs
repz
mov
add
daa
js
jno
cmp
xchg
loop
xlat
jmp
fcomip
add
imul
push
jo
adc
jp
mov
mov
mov
sbb
sub
dec
sub
fcoml
fcoms
mov
pop
inc
push
out
negb
cmp
inc
aam
add
in
or
inc
or
add
dec
test
dec
adc
lods
xor
and
test
xchg
or
mov
cld
cmpb
cltd
jp
xchg
add
out
sub
dec
dec
add
mov
fdivrs
mov
fisubs
out
nop
cmpsl
cwtl
jnp
sub
fdivs
adc
add
call
outsb
hlt
mov
mov
inc
je
sub
es
or
sub
add
mov
jmp
push
xor
int3
ja
fs
xor
or
fadd
add
and
rcll
in
out
mov
enter
jecxz
movsl
jge
inc
call
and
push
add
or
pmullw
add
sahf
inc
dec
fisubs
filds
into
test
or
in
sub
xor
hlt
enter
push
pop
movsl
ja
add
mov
and
push
and
inc
and
sbb
push
cmp
inc
cmp
jne
rolb
and
call
add
test
incl
and
push
out
add
mov
jbe
add
lock
or
dec
mov
xchg
popa
jae
ja
jb
in
add
cld
mov
sub
insb
rorb
adc
jae
mov
mov
jb
out
daa
and
addr16
orl
repz
add
pop
faddl
test
aam
inc
adc
aad
cli
loop
add
mov
mov
pop
fiadds
xor
cwtl
rorl
outsl
pop
sbbb
cmp
rcll
xchg
sbb
add
dec
dec
add
mov
mov
fs
xchg
pop
je
dec
mov
cmpl
push
mov
adc
pop
sub
xchg
xchg
pop
add
inc
add
cmp
jno
add
adc
lods
and
dec
add
in
push
add
jne
cmpsb
adc
dec
nop
lods
dec
je
jo
add
lods
inc
push
pop
cltd
pop
dec
loopne
pop
add
xchg
icebp
mov
add
mov
rcrb
std
or
test
and
pusha
out
xor
xor
int
movsb
sbb
jecxz
push
sbb
adc
add
add
add
jo
pop
push
xor
add
int3
mov
shrb
or
rol
popa
mov
roll
dec
bound
pop
push
popa
dec
jb
add
in
call
aaa
push
adc
adcl
jo
dec
xchg
add
mulb
pop
daa
dec
and
sbb
pop
add
mov
out
mov
cltd
ror
xchg
and
xchg
and
outsl
int3
cmp
bound
mov
add
inc
pop
cs
push
add
mov
movb
xor
xor
mov
and
ror
fadds
jecxz
adc
add
addb
xor
dec
and
int3
xchg
cli
mov
pop
jne
dec
jmp
add
iret
cli
stc
in
add
scas
xchg
call
add
lcall
add
adc
arpl
inc
adc
jns
push
imul
push
mov
std
jns
insl
sbb
arpl
jmp
mov
fstps
sbb
inc
psubw
mov
mov
mov
daa
mov
sbb
sbb
leave
xor
sbb
ret
imul
loopne
in
cmp
fcmovbe
aaa
mov
jl
call
dec
sbb
push
test
stos
addb
adc
add
mov
jo,pt
iret
shl
out
hlt
enter
inc
or
lock
and
aas
inc
jne
lea
mov
adcb
jg
fmuls
imul
das
sbb
fstsw
cmp
test
and
add
cmp
adc
mov
shrb
clc
pop
ja
add
sub
dec
pop
fldt
adc
dec
jge
add
and
xchg
cs
sbb
cmpsb
ljmp
mov
and
xchg
xchg
call
aad
sbb
clc
xlat
mov
jl
inc
dec
jecxz
jle
mov
roll
bound
sbb
adc
inc
dec
jl
lahf
push
add
and
cld
test
add
dec
mov
add
movsl
movb
pop
jge
and
add
jbe
add
stos
imul
std
xor
dec
push
testb
rcrb
push
add
cmpsb
enter
adc
add
pop
dec
add
mov
add
pop
aam
pop
lcall
scas
jle
jno
adc
popf
jns
or
sbb
data16
outsb
and
sbb
cmp
inc
push
inc
mov
adc
ds
jge
mov
inc
mov
sub
push
fidivrl
subl
push
stc
jecxz
mov
sub
call
xchg
add
loopne
xor
or
and
mov
rorl
lahf
mov
pop
ljmp
popa
call
sarb
inc
call
addr16
adc
les
clc
or
ja
sbb
outsb
mov
mov
jl
mov
gs
movzwl
add
cmp
or
cmpl
pop
add
das
loopne
inc
xor
add
in
nop
xchg
shll
pop
lea
out
lret
push
jecxz
clc
mov
sbb
jmp
hlt
popl
sub
add
pop
test
fs
test
lods
call
mov
push
hlt
push
mov
jmp
into
or
jle
add
icebp
add
sbb
ret
sbb
add
cmpb
adc
or
mov
pop
inc
add
mov
mov
and
push
addb
or
jns
loope
xor
add
mov
cwtl
push
add
add
add
fmuls
xchg
adc
mov
add
popl
sub
adc
push
sbb
pusha
mov
inc
xchg
aaa
in
lcall
mov
push
decl
push
hlt
cwtl
daa
lcall
push
es
test
jo
orb
xchg
xor
inc
adc
add
adc
iret
add
push
cmp
movsl
pusha
mov
enter
js
xor
push
fsts
ret
add
adc
add
fcoml
push
xchg
sub
sbb
add
shrl
sub
sub
cmp
add
les
add
dec
add
in
fmuls
scas
fsub
faddl
fucom
shl
jecxz
fisubrs
in
pop
jmp
lods
adc
push
or
test
aad
pop
xor
aam
mov
jae
jns
ljmp
adc
add
pop
scas
dec
ljmp
xchg
stos
testb
aaa
sbb
push
add
iret
aam
ljmp
in
lock
daa
xchg
jmp
adc
xchg
andl
insl
add
push
outsl
fmul
xchg
rolb
in
add
call
and
int
cmp
call
insb
inc
stc
add
push
loopne
jno
add
out
mov
jo
mov
addb
testb
ljmp
pop
add
loop
scas
nopl
icebp
call
mov
jnp
pop
pcmpeqd
add
cmc
es
arpl
mov
add
mov
nop
inc
pop
jl
sbbb
insl
jo
adc
imul
push
add
adc
jmp
push
insb
imul
scas
sarb
xchg
ljmp
ret
in
push
stos
fmull
dec
cmp
push
jb
adc
mov
xchg
orb
cwtl
ljmp
mov
add
cmpsl
popf
pop
push
add
add
sbb
pop
or
pop
pop
push
sbb
aaa
push
push
out
add
jmp
daa
inc
add
test
xor
mov
popf
in
add
jno
movsb
jne
adc
add
shlb
mov
mov
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
in
iret
or
add
cmc
push
icebp
int
in
testl
data16
pop
add
cs
jmp
out
fisubl
push
push
mov
lahf
dec
fcmovnu
pop
add
add
std
xor
add
pop
movsl
cmpsb
outsb
push
mov
lods
pushf
mov
and
loopne
jmp
ljmp
add
je
jmp
mulb
dec
add
aaa
cmp
lock
mov
xor
ret
jmp
dec
mov
test
xor
xchg
jns,pt
les
shlb
mov
mov
mov
mov
xchg
sub
push
sbb
add
jo
push
in
loope
push
pop
push
popa
mov
push
mov
jno
xor
ds
pop
std
pop
xor
int
pop
lea
mov
xor
lcall
subl
inc
mov
sbb
add
mov
or
add
cmpb
mov
js
add
pop
cltd
push
pusha
pop
xor
jbe
stc
cmc
pop
mov
adc
fiadds
mov
add
sbb
cltd
mov
xchg
aas
mov
jmp
test
andb
fnstenv
in
adc
add
test
jns
jge
xchg
cwtl
xchg
test
xchg
xchg
push
pop
dec
dec
lods
push
pop
shr
mul
jl
add
xor
pop
test
sbb
jmp
jae
ror
push
mov
ficoms
xor
sbb
jecxz
pop
add
sbb
or
adc
jge
stos
pop
pushf
push
cwtl
lret
out
jo
outsb
fs
add
popf
adcb
cmpsl
pop
jmp
icebp
lock
mov
sbb
dec
inc
cmpl
popa
repnz
sahf
dec
add
cld
cmp
and
cmp
xor
dec
scas
jmp
out
jmp
jne
int
push
test
movsb
in
mov
es
ds
popf
addb
add
jmp
test
mov
cmp
cmp
shrb
add
xchg
fiadds
mov
mov
gs
imul
add
rclb
pop
sbb
or
cmpb
push
push
iret
flds
pop
test
sahf
lods
incb
lcall
fadd
lret
loop
movl
sahf
add
movsl
mov
add
daa
insb
jbe
adc
mov
mov
loop
gs
pop
add
fstl
mov
jl
nop
test
fsubl
add
adc
clc
xchg
xor
fwait
pushf
dec
push
test
add
jg
loope
add
loop
cld
push
arpl
mov
xchg
aad
pushf
rcl
inc
rol
les
jae
xor
mov
mov
add
mov
adc
out
pop
add
adc
ja
repz
rcrl
loop
add
add
mov
inc
add
pusha
psllw
enter
xchg
mov
into
addb
mov
stos
or
pusha
sub
pop
mov
call
rcl
aam
pop
aad
fdivrs
add
jecxz
mov
ret
dec
add
xchg
xchg
jne
sti
mov
cli
pusha
stc
or
clc
fs
cld
adc
fnstcw
jno
add
fadds
popa
xchg
sub
or
out
out
mov
leave
add
sub
xchg
or
xchg
daa
imul
or
mov
sbb
jbe
mov
xchg
add
leave
lret
mov
and
mov
add
inc
ja
js
dec
add
in
ret
or
mov
popa
add
lea
add
mov
in
out
fldl
adc
jmp
cmp
cmpsl
push
mov
mov
incb
pop
lret
or
cmp
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jge
add
cmp
add
pop
je
pushf
addb
sbb
inc
inc
add
mov
cmp
mov
adc
pop
add
mov
lods
out
ja
and
push
mov
mov
add
mov
jnp
add
mov
xor
mov
adc
mov
test
adc
loopne
sbb
xor
jbe
jp
jae
sub
or
cwtl
xor
sbb
push
add
jle
popf
mov
xor
fsubp
lcall
pop
add
cmpsl
call
ret
rolb
lea
loop
add
andb
cmp
fwait
add
mov
rorb
daa
or
xor
mov
jns
add
addr16
add
mov
cmovs
push
jbe
mov
add
fldt
jl
mov
sbb
div
test
xchg
int
mov
add
add
dec
xchg
add
mov
arpl
pusha
imul
insb
sub
in
sbb
push
call
repnz
sbb
pushf
cltd
add
mov
xor
stos
in
cmc
jne
push
mov
adc
ficoms
lods
add
jge
add
call
push
stos
cmp
stos
pushf
into
cmp
push
push
push
mov
xchg
cmp
cmpsb
lods
jo
add
xor
inc
push
mov
push
aaa
clc
lock
call
lcall
jo
add
lods
or
xor
xchg
icebp
in
ljmp
out
sub
adcl
cwtl
out
add
mov
ret
jno
fmuls
roll
stos
xor
mov
sbb
mov
cmp
movb
add
ljmp
ret
add
dec
gs
or
add
xchg
mov
movsb
add
mov
xchg
adc
pop
loopne
out
push
push
or
cwtl
add
pop
ja
sbb
fildl
scas
lods
scas
inc
dec
dec
jne
add
movsl
movl
ror
orb
add
xchg
mov
xchg
loopne
pop
mov
lcall
hlt
out
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
add
in
push
sub
inc
inc
sbb
inc
pushf
inc
add
addl
out
subb
add
push
jo
cmp
pop
pop
sbb
daa
xor
inc
dec
xchg
cs
xchg
xor
add
inc
inc
jne
fimuls
testb
jecxz
dec
test
lods
test
sbb
loopne
lahf
adc
push
cmp
dec
add
call
jbe
in
sub
fdiv
push
pop
sbb
outsb
jno
vpmulhuw
add
cmp
repnz
add
stos
stos
or
add
or
xchg
lea
dec
insl
dec
or
mov
je
and
lret
int3
sbbb
pop
add
pop
jg
jns
push
iret
out
gs
fdivrs
pushf
test
js
mov
push
mov
push
outsb
mov
orb
add
in
roll
imul
pop
jmp
inc
rol
and
idivb
inc
loopw
and
call
jo
dec
add
or
dec
add
push
int3
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
add
call
clc
jmp
pop
das
inc
dec
push
mov
test
scas
enter
add
jge
cmpsb
add
pop
add
sub
lods
sbb
fiaddl
shll
dec
xor
pop
push
cmp
gs
into
mov
push
add
push
aas
xor
and
mov
xchg
add
and
pushf
mov
call
rcl
test
lods
adc
pop
aas
cmpsl
ljmp
mov
lea
and
leave
mov
or
add
cmpsb
sbb
enter
push
clc
push
add
sbb
sub
ss
lcall
cltd
lods
mov
data16
jmp
sub
push
aaa
movsl
ficoml
and
mov
push
test
jb
pop
add
pushf
test
mov
ljmp
flds
xchg
adc
mov
mov
mov
add
adc
or
adc
jo
pushf
push
inc
sbb
sub
add
ret
popa
cwtl
outsb
sub
or
cwtl
jb
imul
ret
pop
addb
rcr
xor
and
jne
add
push
sbb
xchg
and
ja
jb
sub
cmp
add
and
shlb
push
add
dec
rcrl
add
add
cmpb
adc
xchg
and
sub
addb
aam
jb
cmc
mov
lret
cli
mov
add
fwait
daa
push
rclb
xor
xor
std
mov
mul
mov
sub
mov
or
std
rolb
sahf
jmp
add
dec
mov
adc
hlt
add
jno
imul
aam
inc
and
inc
addl
out
add
call
and
add
out
mov
add
inc
repz
sbb
psubsb
pop
out
pop
idivl
or
xchg
cmp
out
jl
jle
add
outsl
cmpl
and
cmpsl
sarl
sbb
mov
or
pop
push
push
add
fcoml
cmp
push
add
xchg
lock
jne
add
xchg
xchg
sub
addl
push
idivl
adcl
ss
xor
xchg
add
fs
out
push
mov
fdiv
jmp
mov
sub
adc
repz
add
or
call
out
movb
mov
add
hlt
add
sbb
add
jge
pop
lret
xchg
call
daa
clc
and
add
push
mov
add
pop
arpl
pushl
aad
add
inc
sbb
cmp
sub
cld
xorl
hlt
push
clc
fcoml
int
add
lods
pop
out
int3
shl
and
adc
xlat
add
imul
fiadds
insb
add
xchg
stc
xor
fcmovnu
or
call
jge
dec
aam
sub
adc
jne
adc
in
jo
xchg
add
mov
sbb
arpl
and
inc
sbb
adc
call
cmp
add
push
push
out
mov
and
pop
sub
add
and
mov
jmp
orb
xchg
adc
cld
rorb
dec
outsl
xchg
push
mov
mov
daa
add
xor
lds
jbe
push
xchg
add
insl
sub
aad
inc
add
and
shlb
or
inc
je
add
push
sub
sbb
ja
jecxz
cmpsb
outsl
into
adc
push
jecxz
mov
ds
add
xchg
adc
add
vphadduwd
or
mov
loop
pop
data16
add
lcall
add
or
repz
out
cli
jno
add
jne
dec
jle
les
add
cli
test
andb
sti
subb
xor
repz
int
cmpxchg
add
adc
push
or
and
ds
fadds
fidivl
add
pop
cli
mov
adc
jmp
out
mov
and
mov
mov
imul
mull
adc
sbb
push
cmp
ljmp
mov
sub
mov
aaa
test
lods
imul
push
cmp
cmc
or
clc
sbb
in
or
ret
dec
stos
fiaddl
nop
pop
test
rcrb
scas
add
bound
dec
mov
xchg
mov
inc
movsl
or
push
sahf
nop
mov
xor
add
xchg
sub
add
cmc
popf
das
addb
add
mov
pop
dec
rcl
cmp
add
subl
jmp
jo
cld
sbb
test
mov
aaa
xchg
push
adc
push
sbb
iret
add
mov
dec
test
outsl
inc
adc
cmpsl
aaa
xchg
fistl
outsb
test
inc
sbb
mov
aad
jmp
cwtl
sub
in
add
cld
subb
pop
data16
jns
pop
or
and
jmp
or
cmc
inc
sub
push
add
push
js
fwait
dec
out
mov
adc
daa
in
add
and
push
cmp
insb
mov
ljmp
out
cmpb
add
fnstsw
add
mov
push
mov
pop
shrb
jbe
fisubl
sbb
mov
dec
add
xor
add
and
xor
add
xor
cmp
inc
add
dec
insb
cli
xchg
in
push
idivl
mov
push
jge
add
scas
mov
fiadds
test
lock
fwait
jp,pn
outsb
or
cmpsl
cmpb
xor
icebp
sbb
mov
frstor
sbb
loopne
clc
xor
es
cwtl
movsl
lock
out
inc
movsb
push
in
pusha
or
clc
xchg
stc
adc
pop
mov
xchg
add
test
adc
sbb
mov
push
add
adc
cmp
scas
mov
shlb
ljmp
xchg
or
std
adc
test
mov
sti
repz
shrl
cmp
inc
or
add
in
add
add
xchg
sbb
cmpsb
cld
repz
addb
mov
push
ja
xchg
add
mov
cmp
movsl
jbe
push
shl
dec
or
popa
add
scas
fldl
in
ret
incb
inc
push
mov
movsb
and
lock
dec
or
scas
pop
jno
add
mov
jmp
movsb
test
lods
cli
push
pop
or
push
xor
lea
dec
aas
add
push
sub
out
xor
pushf
fwait
push
xor
mov
add
test
add
add
xor
mov
add
jp
clc
aas
nop
mov
in
je
and
pusha
push
push
add
shlb
movsb
jle
and
or
jmp
scas
xchg
stos
test
cs
mov
push
popa
add
cmp
pop
in
cmp
or
sbb
or
push
mov
fnstsw
add
mov
jbe
adc
inc
add
jg
dec
dec
data16
pop
add
hlt
ret
add
jne
sbb
xchg
gs
iret
push
push
rorb
movhps
and
xor
jl
and
add
mov
add
pop
jge
fs
movsb
cmp
cmp
jbe
gs
push
mov
add
jne
dec
inc
dec
add
xchg
arpl
add
fadds
or
lcall
xchg
sbb
cmp
aaa
nop
movsb
add
enter
sub
test
and
loope
lret
add
nop
mov
mov
or
mov
aaa
addr16
add
jl
cltd
cmc
mov
add
jmp
add
xchg
fstl
rolb
pop
cmp
out
and
ror
jmp
ret
add
scas
cmpsb
xchg
dec
lods
leave
adc
fs
mov
das
mov
push
idiv
andb
inc
add
jns
outsb
mov
dec
cmp
andb
cmpsb
xor
movsb
push
jae
mov
adcl
mov
pop
rclb
push
fiaddl
sar
loopne
sbb
dec
adc
testl
xor
ljmp
inc
add
or
rolb
pop
aas
inc
in
and
loopne
rcrb
add
adc
sub
inc
dec
pop
add
mov
add
loope
pop
pop
and
cmp
subb
hlt
add
add
pusha
jle
repnz
nop
insb
mov
enter
fisubrs
std
arpl
push
sub
xor
adc
push
mov
popf
aaa
dec
push
lock
je
and
xor
js
nop
icebp
add
adc
push
test
inc
jg
mov
addb
lds
xchg
js
icebp
cwtl
imul
push
ja
loope
arpl
cld
or
and
mov
adc
inc
insb
add
cpuid
dec
ds
dec
ds
push
mov
fnstcw
sbb
add
fwait
outsl
xor
push
jbe
add
pop
mov
push
movsb
rcrl
adc
aas
inc
add
outsb
arpl
and
sbb
dec
inc
lock
insl
add
adcb
lret
mov
roll
push
data16
sub
sbb
fmul
mov
incb
xchg
andb
mov
inc
mov
in
lds
les
sbb
int
loopne
xlat
cmp
dec
inc
and
mov
andl
cmp
sbb
push
push
out
addb
xchg
mov
xor
sbb
dec
dec
negl
sbb
das
inc
push
cltd
sar
pop
mov
mov
push
scas
or
or
add
inc
xchg
jns
loopne
adc
cmp
inc
push
inc
dec
in
or
jmp
es
fldcw
add
pop
les
lahf
mov
cmp
sbbb
call
add
mov
add
in
adc
cmp
popf
pusha
icebp
mov
add
and
push
cmp
mov
mov
mov
nop
aas
aaa
ret
sti
sub
or
jnp
push
sti
mov
bound
addb
inc
jp
sub
xor
rcll
popf
incl
call
es
adc
push
add
mov
inc
add
test
xchg
pushf
je
push
dec
push
cmc
pop
mov
or
add
sbb
int3
mov
hlt
ret
jg
clc
in
or
pop
adc
mov
out
int
lock
mov
or
and
add
sbb
jmp
leave
mov
or
incb
cmp
jne
test
add
bound
aad
lods
jae
jo
flds
push
add
sbb
pop
testb
add
xor
pop
add
ljmp
fs
mov
and
neg
sbb
rorb
roll
cmp
pop
mov
ds
add
rolb
mov
lret
add
das
xor
sbb
add
jg
or
movsb
pop
mov
lss
hlt
xchg
add
adc
rol
sbb
cs
fstl
mov
les
fistps
mov
repnz
jb
pop
and
mov
xor
sub
andps
inc
mov
cmp
add
jb
or
out
or
inc
add
push
loop
add
mov
rcrb
xchg
in
add
rcrb
push
repnz
and
add
fildll
xor
add
cwtl
test
pushf
push
cwtl
fdivs
fmulp
add
add
mov
loop
sbb
inc
das
adc
add
mov
inc
add
faddl
repz
ffree
push
loopne
or
adc
aas
rorb
cltd
xor
jmp
add
and
inc
mov
add
imul
add
inc
andl
mov
scas
xchg
mov
ja
fsubr
add
int
add
jae
incl
and
inc
aad
dec
out
clc
lea
mov
or
or
add
cli
xor
sbb
sub
imul
inc
dec
sbb
add
or
rclb
clc
lahf
sbb
and
mov
mov
outsb
add
jl
push
cmp
js
xor
add
enterw
in
add
aad
add
cmp
outsb
cmp
mov
add
insl
push
cli
push
arpl
add
add
and
xor
or
and
or
inc
xor
cmp
push
mov
adc
jp
pop
in
dec
adc
add
fldl
mov
pop
and
mov
rcrl
jne
daa
add
sub
je
pop
add
dec
xor
cli
mov
or
add
aas
jmp
insb
add
sbb
stos
mov
add
arpl
or
mov
cmp
mov
and
inc
xor
add
or
ret
pop
adc
daa
xchg
push
push
xchg
test
les
das
and
js
adc
fcoms
test
xchg
push
add
or
popa
xchg
add
or
cmp
adc
add
adc
mov
in
cmpl
mov
jecxz
cvtps2pi
push
loopne
xchg
test
jmp
test
jge
inc
add
push
or
ds
jb
jbe
sub
inc
movsl
lock
pop
push
movsb
dec
inc
int3
cmc
add
aam
add
jl
jno
pusha
push
stos
push
and
adc
mov
fidivrl
data16
mov
mov
pop
mov
pop
fs
adc
cmp
xchg
jg
cmpl
pop
mov
and
xor
pop
adc
sbb
jno
add
push
push
cmp
mov
add
cltd
addl
lock
push
or
and
fadds
fsubrl
pop
push
or
xor
movsl
ss
pop
cmp
jnp
jo
dec
xor
pop
push
ds
mov
sub
bnd
or
push
jb
aaa
rolb
imul
pop
inc
outsb
push
add
pop
xchg
push
cwtl
out
imul
xor
shr
dec
lock
push
inc
inc
mov
mov
insl
cwtl
jo
and
push
jo
lods
dec
xor
mov
out
pushf
loopne
adc
sub
sub
xchg
dec
push
xor
std
dec
int
dec
add
fisubrs
add
shrb
cmp
in
test
dec
inc
xchg
mov
or
rorb
xlat
loop
jb
jo
stos
pop
sub
adc
mov
mov
push
lea
pause
adc
loopne
jp
je
iret
or
add
repnz
test
cmp
mov
and
ret
mov
and
in
pop
add
mov
inc
add
xor
dec
dec
or
or
dec
push
xor
popa
inc
pop
add
xor
cmp
xor
mov
aam
pop
sbb
cld
inc
add
xchg
imul
adc
mov
sub
adc
test
dec
or
add
adc
pop
add
ljmp
add
jmp
js
nop
jp
lods
push
arpl
cwtl
pop
sub
rclb
addl
mov
adc
cltd
cmp
xchg
adc
push
orl
push
add
aam
jg
pop
loop
cmp
sub
jne
inc
insb
bswap
fs
pushf
xchg
nop
int3
fisubs
xor
lret
push
xchg
and
jns
pop
es
ret
inc
dec
inc
inc
lock
add
push
sub
cmp
in
sbb
push
sub
aam
mov
add
jno
pslld
add
in
das
xchg
icebp
xchg
sarl
lcall
out
bound
fnstenv
ret
sahf
imul
outsl
jne
imul
inc
insb
cmp
roll
jo
aas
aas
lods
add
sbb
clc
out
add
test
rol
add
push
jb
popa
outsb
jae
cmp
addr16
inc
add
jne
outsl
mov
fxch
adc
stos
xchg
push
mov
mov
enter
in
push
push
add
sti
mov
jo
outsl
mov
je
mov
js
mov
adc
nop
sub
jle
cmp
call
cmp
cltd
push
push
jbe
add
add
pop
inc
popa
je
sarb
inc
sbb
clc
mov
movsb
xchg
mov
dec
addb
outsb
add
sbb
std
imul
rorb
or
nop
jo
xchg
imul
je
cmpsl
adc
test
mov
jmp
mov
push
pop
xor
dec
js
and
xor
jo
dec
and
add
jmp
adcb
adc
push
jmp
ret
mov
add
mov
mov
addr16
add
das
dec
int3
mov
xchg
and
shl
xchg
xchg
mov
enter
add
inc
jae
aas
lock
adc
je
and
add
lcall
and
sub
in
mov
pop
sub
jg
xor
adc
add
add
pop
push
mov
shll
ljmp
mov
push
push
jne
lret
add
xor
add
in
and
sub
or
add
stc
test
sbb
or
loop
xchg
push
mov
ret
adc
cmpsl
add
dec
pop
test
pop
cmpsb
test
stos
or
subb
mov
mov
mov
add
and
ret
movb
and
add
xchg
push
dec
inc
rorw
jmp
xchg
add
hlt
mov
cmp
mov
mov
lcall
pop
jl
pop
ljmp
hlt
sub
loop
or
fiadds
mov
pop
pop
pop
jp
push
pop
int
fadds
push
mov
sub
lods
dec
ret
push
decb
loop
je
fwait
push
add
cld
jmp
dec
pop
test
adc
test
addl
mov
clc
pushf
adc
sbb
add
push
push
sub
and
inc
add
insb
dec
adc
push
sbb
cwtl
adc
enter
push
mov
add
and
cmp
fsqrt
lock
ss
push
pop
es
addr16
lret
xchg
push
lods
insb
sarb
notb
jle
sbb
jne
jb
jns
pop
xchg
and
outsb
adc
xchg
dec
les
add
cmp
or
push
sarb
sub
movsb
sahf
adc
lea
leave
mov
jle
pop
faddl
push
in
mov
jb
add
or
ret
jg
into
add
push
call
enter
out
add
or
pop
sbb
movsb
mov
jne
push
add
or
push
pop
subl
jo
xchg
and
fstl
add
out
dec
clc
cltd
add
sub
xchg
inc
sbb
sub
add
xor
insl
and
pop
sbb
fs
xchg
sub
or
test
push
add
nop
cmp
cmp
in
sub
in
add
pop
add
add
mov
push
dec
pop
lcall
pop
mov
jmp
test
push
sub
mov
inc
bound
das
mov
push
dec
xor
js
pusha
hlt
fs
sub
test
inc
pusha
add
pop
pop
pop
or
testl
and
sub
fidivrl
cmp
jo
cmp
lcall
add
add
add
adc
dec
mov
lret
nop
mov
out
add
pcmpeqw
jle
jns
sbb
jb
push
mov
pop
nop
cmp
add
data16
jae
mov
mov
or
stc
call
dec
mov
push
sbb
out
xchg
ljmp
inc
mov
cs
or
adc
mov
mov
jmp
mov
inc
sbb
sub
and
inc
aas
push
add
adc
outsl
roll
add
add
xor
add
pandn
add
call
push
add
jmp
and
add
jmp
sub
verw
jb
cli
or
adc
pop
out
mov
rcrb
jb
incb
call
inc
test
or
pop
js
lea
push
inc
inc
xor
add
xor
sbb
repz
push
or
out
add
adc
push
cwtl
lods
adc
loope
pop
mov
ljmp
dec
sbb
arpl
add
push
mov
cmp
add
mov
adc
push
pop
add
xchg
xchg
mov
jns
sub
addl
xor
ljmp
add
nop
outsb
pop
cli
sbb
jnp
iret
adc
lock
add
or
cmp
jecxz
rclb
add
lea
push
popf
push
sbb
push
xchg
in
mov
loop
push
cmpsl
js
lahf
add
cmp
sbb
add
inc
daa
xor
push
add
scas
fsubl
notb
add
jne
mov
popa
jb
cmp
lret
les
shll
mov
out
std
add
aad
adc
adc
roll
je
cmc
add
xchg
dec
sbb
sub
adc
notl
ljmp
repz
xor
aam
jp
jo
rcrb
push
push
or
stc
and
dec
and
or
call
test
pusha
fisttpl
ficoms
add
scas
leave
aas
and
popa
loopne
jnp
lods
gs
lea
arpl
lgs
or
xor
jle
xor
cmp
xchg
jle
and
jo
movsb
adc
add
xor
in
pop
jno
add
in
adc
add
inc
je
mov
loopne
pop
push
lock
adc
stos
cmpsl
daa
jne
add
xor
add
dec
or
addl
mov
add
and
push
or
jo
or
in
xchg
push
cld
mov
mov
dec
xchg
inc
in
jae
arpl
add
mov
cmpl
pop
and
mov
adc
notl
jns
les
mov
jge
add
or
test
sub
jb
rorb
lods
pop
fsubrl
cmp
push
push
cwtl
in
pop
gs
loope
jo
mov
sub
ss
movaps
lock
add
fsubrs
movsl
xor
pushf
jae
add
nop
dec
les
ficoms
hlt
daa
jbe
add
test
xchg
in
movsl
jns
rorb
and
jmp
mov
sbb
popa
xlat
add
xor
test
add
rcrl
in
xchg
js
repz
add
add
mov
add
mov
enter
xchg
sbb
repnz
pop
sbb
lock
lahf
mov
pop
pushf
out
adc
push
cmp
and
add
mov
jmp
clc
hlt
js
push
inc
nop
inc
push
add
cld
pusha
shl
repz
pop
xor
push
inc
xchg
test
test
jg
add
aas
shlb
add
lahf
aad
fsubrl
or
stos
mov
or
testb
mov
ljmp
xor
fisubs
xor
mov
sub
jg
add
add
jb
test
cmp
add
add
fwait
push
ret
cmc
add
insb
ss
xor
adc
add
inc
push
jnp
fdivrl
push
addb
dec
test
cmpsl
aam
sub
jg
add
movsb
fs
sbb
lahf
xchg
jg
add
das
jne
call
mov
sbb
loop
push
popa
aas
ret
or
jne
pop
pop
pop
add
add
and
ljmp
jae
pop
add
adc
pop
mov
pop
and
nop
and
and
rolb
add
or
lfs
cmc
repnz
pusha
or
sbb
enter
adc
adc
or
inc
pop
sub
xchg
rolb
adc
add
sbb
mov
shlb
add
mov
inc
or
add
pop
ret
repnz
push
je
mov
int
mov
cmp
hlt
inc
divb
cli
jne
push
or
jae
mov
adc
push
pop
mov
add
pop
add
fs
xchg
inc
inc
iret
fcmove
popf
inc
testb
jne
mov
orb
add
mov
push
call
pushl
mov
add
int
psadbw
test
add
and
mov
cwtl
aaa
cmp
movsb
cmpb
lahf
and
pop
sbbl
and
cld
mov
stos
mov
adc
cltd
cmp
mov
cmp
add
pop
or
ffree
mov
clc
clc
add
dec
cld
lret
inc
in
add
cmp
add
ret
push
je
test
pop
dec
xor
pop
xchg
sub
es
int3
cmp
hlt
pop
test
out
iret
inc
incl
cmpsl
jge
xchg
jecxz
ret
fcomip
int3
stos
adc
jmp
pop
rolb
pop
add
sub
add
add
xlat
or
cmp
mov
lock
mov
dec
lahf
sahf
icebp
or
sub
sub
push
daa
push
push
cmc
ds
add
in
fs
mov
add
movsb
jge
cmp
xchg
icebp
jne
or
ss
mov
add
inc
xor
add
pushf
jp
cmp
adc
pop
and
cwtl
inc
cmp
jbe
call
inc
addr16
xor
je
or
or
jo
cmp
test
fsubp
and
mov
add
es
enter
or
cmp
mov
sbb
mov
lock
push
adc
add
les
sbb
in
addr16
dec
inc
sbb
stos
leave
xor
jle
sub
sub
dec
aad
fidivs
scas
cmp
and
jp
add
scas
pop
add
or
mov
sub
popf
fistpll
adc
add
add
pop
icebp
add
add
into
or
cmp
andl
cmc
jp
inc
mov
pushl
sbb
jl
pop
pop
xor
add
rolb
ja
ljmp
sub
mov
add
call
fdivrs
xchg
loope
jmp
push
inc
mov
aas
add
andb
push
cmp
add
jne
add
push
mov
jle
or
add
xchg
add
jmp
xor
call
aam
push
and
sbb
mov
add
dec
jg
jg
setne
cmp
xor
pop
out
jl
nop
jns
mov
test
add
jmp
ret
cld
add
push
pusha
mov
adc
add
cmp
sti
mov
repnz
dec
mov
add
cmp
add
mov
insb
add
add
dec
pop
mov
outsl
popf
sbb
das
sub
and
mov
cli
add
or
xor
clc
dec
and
push
out
adc
in
or
or
jne
add
das
adc
adc
int3
daa
or
clc
dec
jg
add
out
mov
add
push
and
fildll
and
movsl
pop
pop
adc
xchg
test
daa
pop
inc
adc
loopne
ljmp
jo
rcrl
add
les
cmp
push
add
mov
xor
ja
add
adc
pop
jmp
add
shll
out
sub
sbb
or
scas
add
pop
push
and
rclb
aam
add
loopne
push
push
add
fwait
jno
cmp
aas
repz
add
jecxz
bound
jp
nop
add
mov
imul
sub
add
test
lahf
add
lock
outsl
mov
pop
sub
xchg
sub
aaa
and
clc
push
andb
jge
or
movd
loopne
pop
in
sub
popf
imul
push
ss
add
inc
cmp
call
loopne
bound
ljmp
add
jp
adc
and
aam
insl
sub
inc
shl
pop
xchg
sbb
int3
xlat
mov
test
enter
outsl
mov
les
inc
shlb
adc
mov
mov
stos
sbb
push
fimuls
or
ljmp
movsb
mov
mov
mov
cli
cmc
add
and
adc
xchg
jge
add
imul
and
enter
push
add
pusha
push
insb
push
subb
and
ja
dec
mov
sub
add
and
daa
xor
test
cmpsl
sbb
and
xchg
pop
xor
insb
add
push
dec
add
jnp
cmp
pop
jg
fs
mov
sub
loop
push
hlt
push
xchg
xor
and
lock
insb
sti
push
or
cmp
adc
jne
ljmp
std
and
or
daa
ds
fadds
clc
fidivl
xor
mov
verw
push
cmpsl
jmp
cmpsb
lods
cmp
add
inc
mov
bndstx
cmp
mov
or
mov
cmp
dec
jnp
bnd
pop
lds
pop
sbb
out
xor
in
fsub
je
or
sbb
imul
inc
test
add
push
dec
sub
jp
add
xor
add
and
sahf
add
xchg
mov
jle
sbb
loop
add
mov
repz
addb
inc
mov
fdivl
sub
sbbb
adc
cmp
das
testl
ss
test
add
or
std
cmp
add
test
jbe
mov
add
lds
addb
jl
ljmp
jne
incb
inc
hlt
jge
add
je
add
aas
sbb
loopne
addb
rol
jmp
add
movzbl
sub
jne
add
xor
dec
mov
cmpsl
out
sti
jno
add
mov
inc
incb
lret
mov
add
and
outsb
pop
xlat
inc
in
pushf
dec
sbb
sbb
lds
aaa
mov
daa
es
cwtl
sahf
jne
mov
jns
popw
andb
cmp
in
add
imul
or
push
pop
mov
das
add
push
cmp
jae
lret
decl
pop
cmpsb
sbb
inc
adc
push
negb
push
shlb
or
clc
xchg
cmpb
mov
mov
jle
add
test
rolb
push
push
aad
sbb
outsb
pop
dec
mov
add
and
aad
sub
mov
add
or
sbb
idivl
daa
jle
aad
mov
les
jnp
cmp
mov
mov
cmpl
outsb
popl
lret
lea
adcb
loop
add
or
cli
push
pusha
lahf
and
pusha
add
cmp
and
js
lock
loopne
imul
std
and
adc
xlat
push
jne
mov
movsb
or
sbb
sub
call
jns
add
mov
pop
and
rol
and
and
into
push
sahf
push
push
and
cmp
enter
call
mov
faddp
das
inc
mov
jne
sbb
or
inc
cmp
add
and
dec
aaa
or
adc
imul
pop
or
pop
pushl
cmp
cmp
sbb
pushf
aad
movsb
roll
out
and
lea
mov
iret
and
push
add
jp
fists
leave
ja
xor
mov
call
add
push
xchg
fs
lds
and
lahf
or
push
in
add
addr16
movsb
scas
pusha
aas
push
les
jbe
ret
int3
adc
ja
mov
jae
add
out
pop
mov
lock
es
and
scas
sub
ja
mov
mov
push
mov
pop
call
int3
jg
daa
pop
sarl
sbb
mov
or
je
add
mov
sub
xchg
stos
add
xchg
in
sub
adc
mov
sahf
imul
mov
sub
xor
pop
andb
std
hlt
jmp
pop
aas
test
mov
cmp
popf
adc
inc
cmp
pop
movsb
aas
mov
or
dec
hlt
push
jl
movsl
push
jmp
shlb
das
cwtl
xor
mov
data16
mov
popl
pop
sub
jle
mov
mov
sub
sbb
inc
mov
add
je
sbb
xchg
jg
or
sar
popf
fistps
mov
xlat
add
outsl
je
add
sub
or
mov
inc
push
dec
dec
and
add
cs
imul
xchg
mov
adc
scas
mov
lock
fistl
sahf
rclb
adc
fadd
xchg
xchg
nop
sarb
add
sbb
mul
inc
inc
xchg
mov
outsb
add
aad
sub
repz
cmp
pop
add
frstor
iret
cmp
add
pop
ret
into
mov
jl
stos
cmp
push
add
add
aad
mov
push
sbb
mov
ficoms
adcb
add
dec
and
dec
xchg
cmp
faddl
lock
adc
scas
and
pop
and
push
and
dec
add
push
xchg
cld
jg
sub
mov
mov
std
dec
xor
int
ds
jge
cltd
xchg
dec
add
mov
push
mov
xchg
lock
cmp
add
add
or
mov
or
adc
out
ja
dec
cli
iret
sbb
dec
pusha
or
hlt
lods
add
push
mov
cmp
hlt
add
push
inc
inc
push
jb
cltd
fadd
push
dec
inc
test
add
xchg
xchg
adcb
mov
jne
sub
lods
je
add
mov
jmp
stc
add
lahf
push
js
rcl
popa
imul
push
and
cmp
sub
cmp
and
pop
xchg
pcmpgtd
outsl
sub
inc
jne
mov
cmp
cmc
rcrb
imul
jae
and
add
push
out
and
adc
add
fdivs
cmovo
es
mov
xchg
cmp
ja
pusha
add
in
hlt
add
sbb
dec
loop,pn
loop
add
enter
call
cmpb
or
xchg
rcr
sub
psadbw
das
mov
jmp
add
data16
or
add
sti
cmp
roll
mov
add
call
dec
pop
divb
mov
mov
add
outsl
xorl
pop
and
test
lods
dec
imul
mov
adc
jno
add
push
jb
and
lock
mov
add
jne
imulb
xlat
push
fidivs
lods
pop
or
cs
inc
test
pop
cmpl
or
and
cmpb
cmp
stos
movsb
pushw
push
lea
test
cmpl
add
mov
sub
mov
sbb
in
jp
push
popf
add
mov
lds
lea
nop
xorb
shrb
movsb
aaa
mov
pop
jecxz
push
mov
jo
or
mov
lea
das
mov
add
dec
call
sub
mov
int3
enter
add
cmp
jle
das
xor
jns
xchg
nop
mov
rcrb
pusha
push
sub
addb
or
adc
and
add
dec
insb
cmpsl
add
sub
in
mov
cmp
lods
pop
popa
sti
mov
mov
inc
xlat
sti
mov
imul
aas
pusha
jne
mov
and
and
incl
adc
dec
inc
cmp
add
mov
add
mov
or
int3
fildl
cmovs
addl
add
int3
add
push
add
and
adc
aam
stc
ljmp
or
shl
adc
lahf
into
cs
mov
sub
pop
push
scas
or
inc
inc
dec
sub
lock
imul
jo
cmc
dec
add
xchg
call
inc
shlb
sti
push
add
aad
ret
fnstcw
or
ja
add
adc
jo
sub
add
pop
mov
addb
and
inc
cmc
push
jo
add
movsb
stos
mov
mov
inc
cmp
pop
jl
add
insl
out
repz
adc
and
add
or
sub
push
add
pop
mov
loopne
pusha
push
inc
outsb
and
push
add
jb
inc
pusha
push
add
insb
sub
dec
inc
push
cmp
mov
enter
push
mov
inc
add
ret
jg
imul
sub
add
sbbl
fsts
sbb
sbb
sbb
add
and
add
int3
add
dec
movsb
fs
popa
jmp
cld
fcoml
push
loopne
pushf
add
add
mov
in
add
out
mov
clc
mov
push
out
call
xchg
stos
pop
pop
insb
inc
push
std
or
add
jne
imul
nop
pop
repnz
jmp
or
arpl
adc
sbb
nop
adc
rorb
add
fcmovu
adc
and
inc
cwtl
jmp
add
xor
add
stos
bound
or
add
mov
add
sbb
push
add
fwait
sahf
dec
insl
fistpl
add
sbb
filds
pcmpeqb
outsb
push
add
in
sbbb
adc
dec
mov
mov
adc
add
jne
and
js
add
cmpsb
mov
push
sub
push
or
add
insl
jno
imul
add
mov
pop
xchg
sbb
or
mov
add
sub
test
xchg
add
loopne
jo
xor
pop
mov
or
aam
das
or
and
cmp
icebp
pop
mov
pop
shlb
add
inc
xorl
add
cwtl
xchg
cld
add
loopne
test
xchg
in
adc
clc
les
mov
xchg
mov
xchg
call
add
fisttpll
and
inc
add
test
inc
push
push
aaa
adc
shlb
aas
cs
jmp
enter
adc
nop
jge
sbb
loope
fsubl
imul
and
xor
push
out
adc
push
mov
adc
jbe
dec
out
push
sbb
xchg
xor
add
dec
popa
sbb
test
inc
aaa
sbbl
sbb
sbb
xor
clc
mov
mov
and
mov
mov
test
sbb
or
rorb
insl
mov
add
rcl
pop
filds
mov
stos
js
loop
mov
ja
add
add
add
cmpsl
xor
add
fistpl
mov
inc
cmpsb
xlat
xchg
xor
clc
add
mov
xchg
xor
add
fs
push
xchg
lods
jmp
decb
stc
fisubs
dec
inc
arpl
inc
cld
ja
push
cmpsl
push
inc
leave
fldl
pop
and
aas
decb
std
or
test
add
sub
repnz
push
hlt
aad
sub
push
jmp
insl
adc
dec
movsb
stos
cld
xor
add
mull
cwtl
in
dec
rolb
mov
notl
or
loop
xor
add
lret
xor
push
test
cmp
cmp
mov
cmp
xchg
xchg
pop
adc
mov
insl
inc
sub
push
inc
pop
jmp
push
jns
add
out
add
imul
fimuls
push
cmp
add
jl
andl
inc
add
pushf
sarb
jmp
dec
sub
xchg
cmc
ret
add
hlt
mov
add
out
xor
mov
pop
ds
lock
adcb
and
add
push
dec
in
add
and
push
imul
adc
push
in
imul
sub
cmp
xchg
inc
data16
daa
das
mov
push
repz
js
add
push
in
pop
adc
movd
xor
cmp
cmpsl
sub
add
sub
adc
add
je
addr16
cmp
bound
add
sub
add
xchg
test
jo
outsb
add
push
gs
inc
pop
jne
imul
add
push
mov
call
and
cwtl
lods
dec
cmpsl
sbb
mov
jmp
jmp
push
mov
mov
ljmp
push
push
jbe
pop
fidivrs
or
fs
jno
ja
jae
jbe
jne
add
jo
fwait
js
adc
fsubrs
loopne
imul
adc
sub
sub
lahf
enter
and
das
subl
add
call
movsl
jle
mov
mov
sub
leave
pop
dec
stc
popa
rolb
addb
push
add
add
fcomps
xchg
aas
dec
sbb
daa
push
pop
push
and
add
or
xor
jnp
or
adc
mov
call
js
adc
add
fstp
das
push
rolb
or
mov
push
lahf
rclb
je
dec
add
cmpsb
cmp
inc
or
jne
loopne
inc
or
out
daa
clc
fdivrl
lret
das
adc
nop
pusha
mov
add
inc
add
enter
pop
push
sub
sub
call
jae
add
mov
pop
mov
movsl
add
jb
jbe
push
jo
roll
adc
insb
jo
sbb
add
mov
dec
add
enter
or
sub
add
nop
mov
aad
jmp
or
je
add
ja
pop
mov
jo
pop
and
xchg
or
int3
adc
faddl
sbb
sbb
pushf
push
add
neg
pop
and
and
push
jne
sbbl
test
enter
inc
push
test
and
sbb
and
outsb
insl
ret
cld
add
mov
lock
adc
adc
xor
ret
mov
xchg
test
repnz
mov
add
fsubs
leave
sub
dec
lea
shrb
shlb
ret
mov
adc
add
pop
add
js
repnz
out
jo
add
repz
mov
and
adcl
clc
add
jb
dec
stos
push
loopne
push
je
jo
fdivrl
adc
das
xlat
inc
fs
jl
gs
nop
xchg
jecxz
jne
add
hlt
test
dec
mov
dec
ret
cmp
inc
mov
nop
sub
mov
push
roll
fstps
fsubl
add
inc
arpl
mov
push
cmp
cmpb
or
ror
push
jnp
push
dec
add
in
cmc
pop
dec
in
adc
dec
addr16
mov
lcall
push
xchg
adc
add
lock
or
addb
cmp
push
xchg
lds
out
pop
xor
dec
mov
mov
out
pop
push
push
std
sbb
sub
inc
filds
js
push
mov
outsl
sbb
add
jp
movb
sbb
daa
adc
jb
sub
ja
jno
fcmovnu
jno
enter
pop
mov
xor
lahf
dec
std
pop
jecxz
in
sub
inc
into
mov
ror
add
push
xor
cmovge
add
cwtl
mov
cmc
sub
push
dec
push
stc
movb
inc
xchg
scas
test
mov
add
rcll
idiv
pop
test
cs
xchg
fisttpll
push
push
lret
jge
clc
inc
add
and
jb
adc
adcb
xchg
jne
cmpsl
mov
jg
data16
jns
hlt
push
in
push
hlt
sbb
adc
or
es
lds
das
arpl
or
scas
sbb
aas
pop
push
cmc
push
add
adc
scas
jg
adc
addps
imulb
push
test
mov
mov
dec
add
addr16
dec
add
push
or
pop
mov
testb
xor
jl
out
sub
pop
popa
cmc
mov
pop
add
cmp
bswap
push
into
mov
xchg
add
inc
add
or
cld
sub
mov
and
sub
push
add
je
mov
mov
push
cmp
inc
mov
cmp
push
mov
add
add
stc
ret
pop
adc
xchg
call
add
mov
pop
stos
add
ret
dec
cmp
pop
fcomps
and
filds
popa
sahf
xchg
ja
xchg
pop
pop
cmp
mov
cs
test
mov
insb
mov
hlt
movsl
mov
sbb
mov
jge
mov
pusha
xchg
add
sarl
cli
push
add
pop
ja
or
imul
push
movsb
repz
loopne
dec
lock
adcb
aad
jl
or
add
jg
jmp
push
mov
dec
repz
add
jnp
xor
push
std
push
movsb
jno
and
leave
cmpsl
pushf
pusha
inc
add
lret
jns
sbb
clc
pop
ljmp
mov
ds
push
add
scas
iret
rolb
and
mov
mov
lahf
jl
add
lock
addl
shrl
push
rcrl
rolb
mov
sar
rclb
enter
hlt
mov
fdivrs
jmp
jns
lret
xchg
jne
inc
add
add
push
push
sti
cwtl
mov
add
pop
pop
xor
jae
pop
jecxz
shlb
imul
mov
out
test
and
and
clc
dec
add
cmp
cs
add
dec
add
mov
cmpsb
fdivrl
sub
inc
movsl
pop
aad
insb
mov
lods
shll
add
inc
and
xor
decb
and
add
sbb
jb
jno
pop
daa
pop
fldl
arpl
lahf
push
rolb
jb
shrl
cmp
adcb
shr
push
add
aaa
pop
mov
add
pop
xor
add
movsb
xor
sbb
inc
xor
and
cli
loopne
mov
cmpsl
cmp
push
gs
add
sbb
dec
daa
ret
cmp
shlb
inc
das
add
jmp
sub
add
lods
insb
sub
lret
push
and
int
aas
jge
psubb
pop
or
jb
dec
pop
out
cmpsl
adc
add
lock
jecxz
call
jl
jns
sbb
in
jo
inc
and
pop
rorb
cmp
and
jg
xchg
add
nop
rcl
cmpsl
add
or
fisubs
push
mov
add
js
add
daa
jge
sub
test
cltd
cmp
add
nop
add
push
add
rcll
add
addr16
mov
movsb
or
add
and
popa
pop
mov
xchg
clc
test
ja
mov
jnp
sub
or
add
xor
pop
jmp
rolb
movb
add
add
or
pop
and
push
push
sub
xchg
mov
cmpsl
mov
pop
and
add
outsl
dec
orb
adc
scas
sub
cli
aam
repz
mov
mov
add
push
add
pop
jge
add
jp
xchg
mov
and
dec
add
jns
add
cld
cmc
imul
fdivl
std
dec
leave
rolb
movb
inc
in
sbb
aas
pop
test
shrl
or
mov
incb
lds
cmp
rcrb
ljmp
add
addl
shlb
out
pop
inc
inc
add
xor
add
add
cmp
and
jbe
addb
leave
rolb
and
dec
mov
mov
add
fsubr
sbb
cld
xchg
dec
mov
add
pop
and
int
inc
sbb
into
enter
out
xor
adc
xchg
paddd
or
push
add
sbb
jbe
inc
add
shr
enter
mov
into
int3
push
or
ja
jno
js
jge
mov
sub
xor
adc
add
iret
les
imul
test
add
in
in
jmp
mov
jge
cmpsb
sbb
cmp
incb
inc
fcompl
mov
cmp
xchg
adc
pop
notb
adc
jge
cmp
dec
mov
loopne
int3
aam
notb
sbb
cmp
sub
cmp
inc
or
mov
jg
sarb
jecxz
push
stos
pusha
mov
lret
test
mov
fstpl
add
adcl
add
or
outsl
push
rorb
inc
fstpl
mov
dec
mov
test
mov
and
xor
repnz
xchg
dec
shlb
adc
push
or
pop
add
cmp
or
sbb
ret
add
jmp
sub
add
xlat
cmpb
jne
add
adc
je,pn
popf
add
jb
and
or
jmp
call
push
loop
in
push
mov
aam
mov
jne
pop
add
cmpsb
fistpll
or
clc
leave
or
adc
adc
cwtl
add
xor
mov
add
cltd
jle
sbb
or
les
xor
push
daa
pop
inc
int
imul
pop
dec
cld
je
cltd
ds
mov
xchg
add
nop
xor
fsubs
test
jmp
dec
jne
and
add
lahf
out
inc
add
cld
mov
movsl
add
cmpsl
jnp
or
mov
sub
pop
aaa
add
int
xor
sbb
mov
push
mov
push
cs
add
sub
lahf
aam
bound
jne
push
xchg
cmp
sub
cmp
jno
mov
xlat
adcl
pop
xchg
adc
mov
and
and
aas
jle
and
jmp
dec
dec
stos
add
je
or
leave
sbb
add
jmp
lods
cmp
pop
hlt
cmp
cmc
push
mov
dec
call
mov
mov
inc
arpl
xor
shlb
add
or
dec
adcl
add
lods
ret
jne
mov
out
xchg
push
cmp
je
dec
or
lock
repnz
leave
mov
inc
inc
ret
push
scas
out
add
iret
mov
das
mov
mov
pusha
idivb
xchg
cmp
pusha
mov
jl
in
push
dec
adc
inc
add
adc
mov
lcall
jnp
fistpll
or
add
adc
loopnew
cmp
inc
inc
push
cltd
shlb
mov
add
cmp
sbb
push
das
es
jnp
test
insl
cmp
add
inc
inc
adc
and
jne
lock
push
mov
lahf
sbb
in
cmc
jae
pop
ret
rolb
or
push
adc
out
push
sbb
subb
andb
jae
and
sbb
popl
adc
scas
pmaddwd
loopne
test
sti
sub
lods
push
lods
adc
or
pop
add
call
lret
xchg
test
add
jp
jo
mov
push
popa
jns
sbb
xorb
jne
pusha
inc
cmp
mov
add
dec
cmp
adc
add
fcompl
or
push
mov
xor
pop
add
sbb
add
sbb
lret
add
cmpl
ss
cmp
add
cmp
mov
xchg
mov
fdivl
sub
mov
adc
mov
lret
sti
and
inc
add
add
push
push
xlat
adc
add
jecxz
cmp
add
loope
push
sahf
insl
xchg
add
lods
adc
mov
push
push
notl
or
imul
or
adc
jecxz
into
push
mov
add
cmp
cmc
add
sub
mov
sub
add
sbb
cmp
add
or
arpl
sub
ds
push
sahf
push
loop
mov
addl
mov
xchg
pushf
roll
int
movsl
lret
fldl
scas
lahf
hlt
test
pop
mov
xlat
mov
leave
mov
xchg
or
in
lea
outsb
repnz
pusha
clc
test
les
das
stos
cmp
jecxz
xor
adcb
sub
add
je
add
fdiv
inc
add
cmp
add
test
bound
push
mov
fisttpl
or
xor
mov
push
jae
pusha
mov
mov
in
dec
daa
sbb
test
add
imull
push
add
jnp
cmpsb
pushf
dec
nop
add
push
rol
enter
add
mov
cmp
jl
cmp
pop
inc
sbb
add
adc
dec
ret
pop
pop
pusha
xchg
dec
adc
mov
jnp
mov
cmp
mov
loopne
lds
mov
push
mov
cld
cmp
xchg
call
xor
loopne
or
mov
pop
xchg
incl
sub
mov
sub
lds
mov
js
loope,pt
cmp
scas
fcompl
push
daa
push
fs
sbb
xor
jp
into
insb
cld
stos
rcr
jp
sti
std
add
mov
out
add
jns
insl
clc
mov
and
ss
push
dec
xchg
jp
pop
cmpsl
sahf
aad
mov
fs
add
adc
out
imul
jge
jmp
test
adc
push
dec
adc
hlt
sti
mov
jg
test
push
add
and
add
inc
sub
push
push
jnp
push
lods
jge
mov
adc
rcrb
sub
clc
cmp
iret
push
lods
fldenv
mov
jne
jle
sbb
push
sbb
dec
adc
pushl
add
xchg
adc
pusha
in
or
lods
adc
minps
and
add
ss
sbb
cmp
call
lea
and
cmpsb
sbb
movsl
cwtl
add
add
es
jmp
addb
and
add
jge
jl
sub
jns
jmp
add
push
fdivs
and
xor
add
cmp
add
je
cli
int3
lea
add
dec
lds
pop
or
add
sahf
mov
add
test
cmp
add
cbtw
mov
adc
add
shl
add
enter
pop
mov
popl
clc
lret
pop
mov
inc
jmp
mov
add
add
fnstcw
in
stc
test
popa
add
sbb
daa
fsubrs
cmp
lods
mov
stos
sub
stos
repz
sbb
test
dec
sahf
adc
inc
push
clc
push
add
pusha
sub
xlat
loopne
add
xor
dec
xor
add
xor
mov
out
cwtl
adc
cmpl
stc
imul
lret
lcall
xor
jmp
mov
add
push
mov
xor
sub
adc
inc
dec
cld
lods
or
test
dec
adc
push
push
sbb
or
add
rorb
add
add
aaa
jne
pop
push
cmp
push
push
out
and
subl
nop
cmp
stc
and
mov
mov
push
mov
arpl
xor
dec
leave
add
mov
test
add
movsb
mov
add
fnstsw
dec
sbb
mov
pushf
add
outsl
les
jno
bound
jl
loopne
sahf
aam
popf
add
fisubs
dec
nop
lods
lea
adc
neg
rcr
or
add
jbe
lods
mov
sub
add
lods
add
push
gs
shrb
add
cmp
or
adc
imul
imul
push
int
dec
fstps
insb
je
inc
push
xchg
jnp
push
or
pop
inc
or
mov
pop
in
sub
add
jmp
pop
mov
les
mov
sub
inc
add
mov
cmp
add
rol
add
inc
dec
add
lock
cmpl
cmp
stos
xchg
in
cwtl
xor
adc
jecxz
add
push
test
je
cmpsb
and
jg
or
fbstp
frstor
icebp
mov
pop
shrb
or
call
inc
dec
and
cmc
into
jae
ds
scas
add
dec
xchg
insb
push
out
add
cmc
sbb
ds
sub
cmpsl
xlat
xor
add
cmp
lock
dec
fiaddl
jbe
mov
in
in
add
push
and
or
jmp
aas
imul
sub
add
loop
movsb
jl
sbbb
mov
xchg
clc
add
inc
push
fsubl
adc
pusha
add
sarb
orb
shlb
loop
add
dec
lods
aad
pop
mov
add
push
add
inc
out
movb
jmp
push
cmpsl
sub
jmp
mov
cmpsb
add
inc
cld
mov
push
aas
and
out
jb
add
add
inc
adc
jle
add
hlt
cli
xchg
ret
mov
decl
xchg
xor
add
jae
gs
lcall
pop
xchg
lods
xor
cld
icebp
and
je
push
ds
out
add
sub
stc
inc
jo
lods
jo
add
or
add
ret
fcomps
je
add
fists
arpl
pop
jae
mov
or
mov
insl
je
add
jo
leave
and
lcall
add
inc
and
cs
mov
lods
lea
add
pushf
scas
add
sub
into
in
stc
pop
pop
push
test
and
repz
sbb
lock
add
dec
fdivs
push
inc
faddl
inc
add
enter
in
mov
popf
fisubrs
jle
gs
pop
and
push
lea
push
test
dec
cmp
mov
sbbb
add
mov
push
cmp
add
add
pop
mov
xor
scas
in
bsf
and
pop
stos
mov
add
dec
jo
xor
mov
push
mov
sahf
iret
xor
dec
xchg
das
xchg
filds
movsl
mov
cmp
loope
cmpsl
incb
cwtl
sbb
push
push
jne
xchg
pop
push
shlb
repnz
sub
cmpsb
or
cmp
push
or
xor
and
push
aam
push
lds
cs
inc
push
cmp
xor
xor
add
fs
or
pop
add
hlt
test
add
aas
xorb
popa
add
pop
and
arpl
push
loopne
mov
jo
push
stc
cs
mov
cwtl
int3
adc
mov
add
mov
cmp
data16
lock
fidivs
es
std
add
mov
fs
push
in
mov
cmpb
mov
pop
mov
in
fcoml
mov
sbb
pop
in
sbb
add
push
lds
xchg
add
fidivl
cmp
jo
filds
bound
daa
and
clc
in
in
push
sbb
pop
incb
stc
xor
icebp
mov
call
add
push
pop
or
xor
or
jg
or
lcall
mov
lea
add
xlat
mov
cwtl
add
out
xor
mov
push
inc
cmp
add
mov
vzeroupper
fs
pusha
add
xchg
adc
mov
push
out
es
adc
jp
mov
add
add
dec
jne
xor
cmp
ljmp
xchg
ret
inc
or
in
loopne
mov
cmp
cmpb
jp
jae
addr16
hlt
jne
mov
sbb
jge
or
add
xchg
xchg
ret
adcb
movsl
add
dec
cwtl
hlt
mov
orb
pusha
clc
add
and
mov
or
loopne
or
adc
lret
addb
out
jle
xchg
add
mov
icebp
add
sub
das
add
adc
pop
sbb
inc
add
loopne
int
jp
int
fmul
or
aaa
xchg
push
add
jo
mov
mov
adc
inc
pusha
lea
or
dec
and
imul
xchg
fs
clc
mov
je
sbb
cmpsb
add
arpl
jno
inc
add
push
adc
push
xlat
outsb
mov
inc
mov
movsl
daa
push
dec
mov
xchg
or
cmp
ljmp
mov
and
pop
pop
aaa
sub
push
nop
sahf
int3
gs
clc
mov
inc
or
je
rcrb
or
xchg
ret
pop
dec
js
add
jmp
lock
leave
sbb
movsl
sub
bound
inc
into
cmp
mov
inc
push
cmp
and
dec
stc
adc
add
push
pushf
fisttpl
or
add
jnp
xchg
mov
sbb
jmp
push
xor
inc
das
xor
push
addl
call
sub
add
add
addb
aad
dec
ret
lock
mov
add
popf
sub
notb
inc
adc
jp
movl
xor
fstps
cmp
adc
call
add
inc
xchg
stos
and
pop
add
dec
lcall
rcrb
cmp
jle
mov
push
xor
jo
dec
es
xlat
add
movsl
rorb
adc
mov
xchg
add
and
jle
push
gs
insb
add
add
jg
inc
leave
xor
add
mov
dec
mov
add
pop
lea
and
je
js
ficoms
dec
mov
andb
xlat
shlb
add
ror
pop
hlt
cmpsb
add
push
in
dec
push
dec
cld
testb
adc
loopne
add
jmp
enter
push
push
cmc
outsb
sbb
add
imul
jmpw
inc
test
bound
add
push
neg
mov
ret
pop
and
out
and
xorb
lret
adc
dec
ja
sbb
push
or
out
insb
out
add
sub
pusha
push
add
jmp
sbb
mov
inc
fisttps
or
adc
rolb
subb
cmpsl
add
xor
test
ror
shrb
insb
fnsave
call
pop
lods
sub
js
sbb
in
rcr
push
mov
aam
or
push
jp
insl
pop
xchg
mov
inc
mov
movsl
adc
inc
jae
xor
jnp
sub
xor
add
inc
scas
xchg
int3
sbb
add
ja
sti
dec
and
add
movsl
push
jb
add
xor
enter
mov
scas
enter
or
adc
add
dec
jo
add
push
ds
jge
adc
pop
in
or
push
mov
or
addl
imul
pop
les
mov
add
xor
fwait
mov
mov
inc
rolb
xor
int3
pop
or
sbb
or
dec
or
imul
stc
sub
insl
inc
in
jbe
mov
in
inc
xorb
add
cltd
inc
test
jl
pop
mov
mov
push
ja
pusha
push
mov
cmp
xorb
lock
lret
add
push
push
sub
mov
mov
mov
or
out
test
adc
add
addr16
or
sub
lock
imul
pusha
rolb
outsb
repnz
icebp
adc
sbb
pop
cmp
adcb
mov
sbb
sub
test
xchg
fadds
and
pop
jo
orb
loopne
add
add
or
out
dec
add
je
push
adc
or
cmp
fidivrs
hlt
cmp
out
and
sub
adc
jns
sbb
xor
leave
add
in
adc
jge
push
inc
add
xor
cmp
dec
mov
orl
xor
cs
jae
xorb
outsb
sub
gs
cmp
out
add
push
pop
rcr
adc
push
mov
test
lea
rcrl
push
cld
lock
push
jmp
dec
add
and
xor
add
or
inc
idivb
mov
mov
add
sbb
pop
adc
add
inc
clc
movb
mov
out
repnz
dec
dec
xchg
cmp
sub
sarl
ds
sbbb
xor
cmpsb
dec
dec
inc
xchg
add
cmpl
test
inc
adc
mov
and
jo
das
add
jmp
pmullw
test
test
ljmp
jge
mov
add
inc
xor
aad
adc
fistl
sti
sahf
mov
jb
inc
shl
xor
jmp
and
out
or
jp
add
mov
pop
mov
mov
xor
cmp
cmp
xor
out
add
push
dec
nop
add
and
push
sub
in
nop
add
sub
inc
xor
inc
add
jmp
repnz
add
and
jnp
push
ret
leave
add
sub
xchg
xor
push
and
inc
test
cmpl
dec
sub
or
pop
btsl
mov
push
jnp
mov
shlb
inc
push
push
cld
jg
testb
out
inc
lahf
add
popa
fs
xor
xorl
mov
lea
inc
mov
movsl
xchg
in
add
sub
clc
icebp
jp
add
shrl
and
iret
shl
pop
arpl
mov
sub
stos
add
or
aad
mov
add
add
add
add
and
hlt
dec
les
in
add
add
adc
mov
add
ja
pop
xchg
fistps
in
lods
push
lock
or
mov
cmc
ds
out
xchg
push
fists
dec
mov
sahf
leave
push
pop
jnp
inc
ja
jmp
mov
or
inc
aam
add
pop
jl
ds
int3
jae
rolb
in
sub
xchg
mov
enter
sarl
das
jge
push
push
mov
mov
lock
rsm
faddl
sbb
jmp
dec
pop
cli
jne
add
and
daa
add
aad
shll
loope
sub
clc
aad
jae
inc
add
dec
push
add
imul
mov
fsub
push
push
add
fsubrs
cwtl
nop
pop
pinsrw
xchg
shr
jge
stos
sub
push
stc
das
cs
add
pop
or
or
push
mov
xor
xor
dec
pop
mov
std
or
imul
adc
add
insl
orb
xchg
xor
mov
push
add
adc
pop
outsl
add
pop
nop
and
int3
xchg
pusha
or
inc
push
adc
bound
lock
call
subb
jmp
inc
arpl
sti
push
add
mov
mov
and
lods
scas
leave
push
xchg
sbb
push
and
add
cld
mov
sub
loopne
dec
push
xchg
pusha
int
scas
test
fucomi
cmp
das
cmp
in
xchg
dec
dec
lods
pop
divb
adcb
push
pop
and
jbe
test
imul
inc
ret
das
inc
add
inc
xchg
mov
add
add
popf
fmul
out
push
lock
and
ss
stc
inc
add
dec
pop
and
ds
xchg
nop
in
jnp
clc
push
inc
add
aad
inc
addl
jb
add
mov
mov
imul
pop
mov
fiadds
in
stos
add
lods
stos
cmp
mov
je
dec
push
in
inc
xchg
dec
aam
daa
add
sbb
cli
mov
mov
mov
mov
dec
mov
mov
xor
and
pop
add
xchg
mov
out
inc
jns
adc
xchg
sbb
test
jle
in
inc
lds
inc
jle
xchg
mov
icebp
mov
and
ja
add
cli
imull
in
add
sub
out
lcall
in
call
xor
mov
push
enter
andb
hlt
inc
push
sub
mov
sub
fimuls
cld
cwtl
push
mov
add
add
aam
and
leave
push
popa
popf
pop
sahf
mov
add
aaa
cmpsl
jae
jmp
faddp
scas
xchg
loopne
dec
inc
adc
sub
push
call
dec
mov
ret
call
ljmp
jl
xchg
adc
leave
add
addr16
nop
lret
mov
jmp
sub
push
pop
in
mov
jle
mov
cmc
add
pop
pusha
mov
push
call
dec
add
jmp
and
sub
xor
shlb
add
and
add
jmp
and
in
leave
mov
decb
add
adc
mov
or
adc
cmp
cmc
sbb
jb
das
lods
sbb
mov
shrl
jge
add
pop
mov
cmp
and
fidivs
and
lds
add
in
mov
add
jnp
lods
xor
test
inc
fcmovbe
sbb
add
rorb
xchg
add
adcl
add
cmp
ja
and
out
jae
inc
not
cmp
rcr
add
push
dec
data16
mov
jmp
cmpsb
and
jb
push
nop
icebp
add
push
cmpsl
and
jmp
add
ja
ror
mov
add
ret
mov
dec
add
dec
adc
push
jge
inc
pushf
nop
xchg
xor
add
mov
xchg
mov
add
inc
fsubr
mov
cwtl
addl
push
dec
jl
dec
fwait
mov
inc
in
insb
push
pop
inc
cmp
add
xor
mov
orb
push
mov
jmp
mov
sub
and
mov
xchg
sahf
imul
add
push
dec
and
iret
and
cli
test
pusha
push
ds
fs
cwtl
pop
add
dec
push
jmp
add
sub
sbb
rcl
add
jo
stc
clc
adc
add
cli
stc
jb
add
adc
pushf
vmovhps
mov
xchg
sar
push
sub
pusha
mov
add
ja
push
jae
add
mov
cmpsl
mov
or
sahf
push
inc
hlt
and
stc
adc
push
ja
or
add
add
add
jp
push
add
adc
add
clc
sarb
call
mov
pop
inc
xchg
push
icebp
sub
nop
inc
xchg
jbe
add
adc
test
add
jl
pop
sub
fiaddl
jne
add
and
add
arpl
add
call
add
mov
nopl
jno
and
mov
test
mov
insb
fs
mov
sub
mov
or
add
rep
push
xchg
fistps
int3
cmp
or
call
mov
mov
add
adc
adc
loopne
in
adc
dec
pusha
out
pushl
sbb
frstor
add
pop
and
stos
pop
xchg
xchg
dec
add
and
add
iret
dec
sbb
mov
int3
push
sbb
clc
orb
adc
cwtl
sub
jmp
movsb
add
hlt
enter
sub
jae
shlb
inc
imull
add
insb
movsb
xor
ljmp
add
stos
lea
pop
inc
lret
add
dec
out
adcb
add
daa
push
adc
jl
loopne
push
add
xlat
push
lea
inc
add
movsb
stos
xor
add
or
jmp
stos
sbb
out
and
idivb
cwtl
popa
add
lock
pop
lods
sub
push
mov
add
ret
cmpsb
add
xor
add
cwtl
dec
test
add
pop
jns
pop
mov
mov
jnp
addb
cwtl
call
add
lahf
loopne
adc
pop
ret
push
sub
add
sbb
ljmp
dec
add
xchg
mov
call
mov
add
out
mov
cmp
mov
jnp
loopne
xchg
or
push
dec
inc
jmp
cltd
xchg
sbb
inc
dec
pop
cmp
jne
lcall
xchg
mov
add
adc
push
and
int3
add
mov
add
clc
xchg
ljmp
mov
mov
repnz
leave
rolb
xchg
pop
mov
cmp
push
fmul
jg
sub
pop
jbe
add
pop
rcr
fdivs
dec
inc
or
dec
jns
add
fcmove
xchg
dec
shl
or
shl
mov
pop
xchg
cmpsl
add
insl
add
mov
dec
popl
xor
int3
lock
cmp
pop
xorl
pop
out
out
lret
test
add
jns
mov
sbb
hlt
je
sub
daa
jae
push
out
mov
push
dec
cmc
mov
jg
fsubrs
lahf
add
sub
aam
add
in
or
push
mov
mov
add
xchg
mov
iret
test
shr
lea
sbb
sbb
xor
lock
push
out
pop
xchg
cmpl
enter
push
push
mov
add
call
sbb
movsl
hlt
rcll
or
imul
andb
push
movsl
js
add
sbb
cld
adc
adc
rcl
jge
push
leave
scas
clc
xchg
rolb
leave
shrl
int3
add
and
rclb
push
push
add
pop
inc
roll
inc
fidivl
or
or
repnz
cmp
xor
pop
add
sbb
xchg
addb
cmpsb
jno
add
pop
clc
les
xor
mov
add
dec
jne
xchg
out
push
sete
or
xchg
fsubl
pop
push
out
jmp
pcmpeqb
add
clc
pop
mov
add
adc
js
add
pop
dec
cld
out
test
add
cwtl
movsb
andb
push
push
push
add
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
test
pmulhw
roll
jns
pusha
fnstcw
mov
push
data16
push
jno
add
xchg
repz
mov
inc
push
push
adc
repz
add
addr16
and
jle
dec
adc
add
cwtl
jae
scas
insb
sub
pop
adc
clc
popa
out
xchg
sbb
xor
dec
cwtl
add
ret
pop
xchg
jl
jl
add
inc
push
outsl
push
dec
jne
add
popa
and
push
add
inc
loopne
out
pop
add
test
pop
cmpsb
out
imul
aad
clc
ficoml
sub
sbb
leave
jne
cwtl
xlat
clc
add
and
jb
mov
sbb
push
nop
jge
ret
aas
int3
arpl
insb
lahf
and
je
sbb
nop
aam
shlb
fsubs
data16
add
push
cli
push
mov
cmp
add
scas
add
dec
jo
cmp
adc
push
cli
lock
pop
add
loop
cmp
pushf
pop
add
fisubrl
sbb
or
pop
mov
cmp
je
or
push
add
cli
stos
and
aam
jp
sbb
jo
inc
in
jecxz
loope
add
jg
pop
test
cmp
incb
add
mov
mov
ficoml
xchg
adc
push
pop
xor
mov
sti
js
add
add
out
mov
cli
xchg
xor
cmp
subb
add
jmp
add
stos
pop
idivb
add
dec
test
mov
aas
jo
dec
sbb
imul
adc
and
psllw
mov
dec
pop
jecxz
adc
cs
add
xlat
lcall
or
xchg
cmpb
push
inc
xchg
flds
in
cmp
lea
daa
xchg
fdivr
or
lcall
add
aas
jecxz
imul
add
dec
xchg
and
cwtl
add
adc
bound
mov
inc
std
cmp
je
pop
testl
xchg
aaa
and
aas
push
inc
ds
cmp
pop
mov
mov
or
or
adc
push
mov
in
lock
loop
add
aam
cmp
adc
in
mov
cld
sub
jp
pop
hlt
pop
dec
add
xor
jmp
movsb
jge
out
dec
inc
pop
add
push
cmpsl
jmp
pop
sub
pop
cmp
andl
push
enter
dec
inc
addb
icebp
mov
add
fsubr
adc
jnp
inc
enter
pop
sub
add
xchg
loope
test
inc
fistps
cmpsl
pop
add
push
cld
sbb
aas
xor
add
les
rcrl
xchg
xchg
out
jo
mov
in
das
test
pop
stc
jmp
jo
cmp
rcrl
pop
xchg
subb
fs
add
hlt
clc
jnp
mov
rcr
jle
add
stos
adc
mov
enter
leave
cli
add
jb
mov
mov
jno
sub
arpl
dec
add
or
mov
add
pusha
xlat
stc
jl
dec
mov
out
add
cli
cmp
add
sbbl
and
movsl
xchg
fprem
ds
lahf
inc
aad
jae
push
fs
push
fsub
and
sbb
insb
cmp
add
mov
sub
xor
cld
cli
popf
je
js
les
pusha
xor
add
ja
mov
sub
push
mov
mov
jl
les
es
cmp
enter
lahf
es
add
inc
pop
imul
shl
shlb
or
pop
push
add
inc
lock
mov
pushf
add
xor
test
repz
add
add
push
add
push
lret
daa
pop
in
add
push
cmp
jbe
cmp
lcall
add
dec
loopne
inc
cmpsl
loope
dec
cmp
cmp
addr16
mov
push
iret
fcoms
cmpsb
popa
adc
pop
loopne
cld
push
in
inc
cmpsb
mov
out
jg
sbb
mov
cmp
jl
mov
jg
add
es
aam
dec
sti
cld
movsl
or
mov
inc
rorb
aas
add
les
and
add
loop
sbb
mov
imul
push
sbb
lahf
rcrl
aam
shrl
loop
imul
ror
in
and
and
out
add
repnz
mov
mov
mov
js
rorb
push
add
imul
add
in
mov
sarb
cs
dec
pop
jno
push
mov
loop
out
loope
in
lahf
pusha
repnz
add
sbb
and
cld
cmp
ficomps
je
jno
push
inc
inc
adc
filds
jb
cmp
mov
popf
add
dec
mov
add
ljmp
sbb
mov
or
push
xchg
sub
frstpm(287
sub
inc
add
jecxz
nop
add
repz
mov
adc
jge
add
push
lods
pop
pop
addb
cld
scas
xchg
and
cmpsb
sbb
fmull
enter
push
cmp
loope
adc
out
add
test
loop
xor
clc
fadds
lahf
or
sbbb
add
adc
add
lea
jnp
inc
xor
xchg
outsb
xchg
push
rcrb
call
daa
add
fcoml
mov
in
add
xchg
or
jno
xchg
adc
inc
push
pop
and
test
or
jmp
mov
pop
mov
adc
push
repnz
add
imul
fstl
mov
sbb
mov
loopne
push
test
add
mov
je
pop
nop
mov
sub
addl
mov
push
les
addb
sbb
inc
pushf
or
fiadds
outsb
dec
jle
popf
pusha
aad
das
or
jnp
flds
andl
add
adc
xor
sbb
sub
cmp
aam
cwtl
sbb
xchg
jg
add
xchg
es
in
cmp
mov
xchg
xchg
sub
mov
dec
jmp
flds
sub
push
lds
decl
hlt
lahf
imul
cmp
dec
add
fdivl
add
sub
lahf
pop
mov
aam
fildll
jmp
mov
add
inc
inc
push
sbb
xlat
js
xchg
add
pop
xor
and
add
clc
sub
add
cld
pop
aam
push
push
adc
dec
adc
add
xchg
mov
int3
push
inc
add
pop
add
dec
add
in
sub
out
jg
ds
imul
and
lods
jne
sub
xor
or
rclb
mov
push
stos
and
add
lret
ss
jp
push
sub
add
inc
xorb
add
pop
cmp
pop
mov
adc
mov
add
mov
dec
add
jne
icebp
add
ss
add
cmpsl
testl
sub
hlt
add
pop
lds
mov
lock
push
push
mov
xchg
add
cmp
inc
dec
enter
and
xchg
test
add
out
push
int
mov
sub
add
xor
pop
dec
push
call
add
sbb
jmp
xlat
jb
lods
sti
arpl
push
jae
mov
sub
sub
add
jecxz
rorl
add
sub
pop
add
cmp
cmp
rclb
dec
add
mov
push
je
or
pop
adc
cli
cld
xor
mov
adc
sub
pusha
rorb
lock
sbb
cli
lds
jmp
mov
or
decl
rorb
cld
mov
ja
add
mov
adc
js
mov
xchg
xchg
xor
inc
mov
shlb
mov
add
fildll
jecxz
sub
lock
lock
mov
test
dec
push
xchg
pop
test
pop
out
add
pop
out
jl
pop
scas
lret
sti
fistl
push
adc
stos
stc
mov
or
jmp
pop
push
mov
dec
adc
sbb
xchg
lcall
add
pop
fsub
add
inc
scas
adc
mov
jnp
cld
leave
shlb
ja
inc
dec
adc
push
lods
pusha
and
or
gs
lea
jecxz
cmp
loopne
cld
dec
add
ss
sbb
popf
push
out
add
lods
loopne
repz
add
xchg
out
clc
cmp
loop
mov
xchg
daa
push
frndint
or
inc
mov
insl
jnp
jno
mov
push
daa
cmp
mov
loope
jle
dec
jbe
xor
cltd
jmp
fidivrs
jne
lds
insb
push
pop
pop
inc
pop
stos
and
sub
fwait
out
enter
aas
jne
lahf
aad
sbbb
enter
les
addb
add
inc
dec
jne
sahf
rcll
rclb
push
add
iret
inc
cmpsl
sbb
cmp
int
cmp
push
lea
or
mov
movsb
add
jo
add
mov
mov
int3
sbb
adc
and
out
add
add
push
add
jnp
fs
adc
add
and
leave
pusha
fcmovne
jae
add
loop
mov
mov
or
push
dec
in
mov
dec
add
mov
pminub
notl
mov
subb
sub
xor
or
or
lods
testl
cmpsb
cld
mov
mov
mov
dec
addr16
adc
stos
lods
adc
pop
mov
cmp
push
inc
adc
mov
xor
mov
add
jle
popl
and
sub
sub
mov
pop
cwtl
mov
fldl
cmpsl
jp
sub
xlat
dec
in
adc
mov
popf
jno
imul
push
adc
add
mov
mov
aaa
test
lret
mov
and
dec
push
adc
inc
mov
mov
pop
inc
test
jge
jb
inc
test
mov
mov
cmp
sub
lret
popa
mov
inc
or
insl
mov
addb
ret
inc
push
mov
mov
pusha
mov
ljmp
insl
adc
mov
xchg
pushf
add
xor
push
add
and
mov
ret
add
fdivrp
xor
add
xchg
adc
movb
push
data16
jge
sub
aaa
je
mov
clc
adc
nop
add
mov
mov
sbb
push
add
or
sbb
sub
add
dec
or
cld
jo
sub
xchg
jns
add
adc
fmuls
aad
add
pop
bound
push
mov
rcrl
push
sbb
sub
aaa
lea
add
mov
or
or
jecxz
mov
in
add
out
jo
push
stos
fldenv
in
rclb
push
je
mov
push
jae
je
add
adc
sub
test
lods
cmp
and
les
or
rcl
repnz
adc
inc
cltd
cmpb
mov
add
test
and
add
ljmp
add
les
add
xor
push
sub
popf
sbb
clc
add
imul
add
cmp
jp
pop
adc
cmp
inc
add
mov
cwtl
pop
add
loop
scas
push
xchg
mov
push
call
pop
or
rolb
cmp
rcll
jp
pop
pop
test
pop
push
sub
push
jmp
push
jl
mov
cmp
mov
call
ljmp
cmp
add
or
add
fs
jecxz
fsubr
push
add
das
pop
ret
xchg
inc
roll
or
mov
xor
pop
cli
shll
xor
cli
imul
pop
les
cmp
push
adcb
dec
dec
aaa
add
inc
jne
add
add
test
pop
xor
cwtl
jnp
jno
add
lcall
push
or
inc
inc
or
dec
sbb
or
adc
inc
add
xor
jnp
pushf
add
add
je
mov
mov
add
mov
xchg
roll
ljmp
lahf
mov
andl
pop
sub
lock
daa
jnp
add
mov
ja
adc
and
ds
ljmp
js
mov
xor
push
push
jl
int
pusha
push
adc
pop
mov
inc
stos
mov
mov
scas
mov
inc
jns
inc
dec
jg
notb
add
push
pop
lcall
pop
adc
fcompl
mov
mov
mov
add
add
add
push
addb
inc
add
push
sbb
repz
or
push
daa
add
lds
adc
lret
lea
push
fsubrl
les
idivl
imul
and
incl
cltd
dec
andl
add
pop
sbb
add
push
mov
scas
add
cmp
mull
jno
push
adc
in
sub
and
popf
add
jg
mov
push
ja
popf
adc
sbb
add
ret
push
pop
pop
adc
test
aas
pop
jecxz
sahf
push
mov
lods
aam
xlat
add
add
or
enter
loop
pop
mov
ficomps
inc
mov
inc
sub
add
fmuls
adc
inc
add
jge
dec
add
test
daa
and
sarl
add
adc
cmc
clc
adc
xor
cmpsl
scas
push
mov
push
dec
subb
sbb
add
test
pop
adc
aam
and
mov
mov
rclb
pop
mov
xlat
shlb
dec
stos
jg
test
mov
in
ja
add
pusha
das
pop
sbb
dec
and
adc
add
rcll
or
sbb
ljmp
add
and
adc
sar
sbb
std
pop
xorb
testl
xor
ret
syscall
mov
fildl
xor
into
push
add
push
adc
fwait
sbb
ljmp
and
sbb
add
pop
cltd
jg
aam
jb
insb
or
cli
cs
or
push
add
sti
ret
add
jns
jmp
add
out
and
mov
add
call
lcall
or
add
push
push
xorb
rcl
xor
push
and
sub
addb
addr16
lock
stc
repz
adc
cmc
pop
hlt
add
test
push
mov
cmpb
xchg
mov
mov
push
sar
movlps
icebp
pop
incl
sbb
add
or
add
sarb
xorb
mov
cld
add
mov
pop
ror
pop
add
cmc
xchg
pop
neg
add
mov
cmpsl
add
jecxz
divb
jo
sbb
loopne
sub
mov
stos
pop
add
mov
iret
cmp
and
adc
cmp
orb
rcrb
mov
std
push
jge
or
sbb
in
jle
cmp
pushf
dec
inc
es
add
mov
mov
adc
dec
mov
jb
cmp
push
adc
frstor
addr16
shll
push
push
add
mov
and
sub
lret
add
repnz
decb
add
xchg
lds
inc
add
mov
cwtl
fldl
xor
mov
lock
cmp
xor
iret
pop
addl
pop
xor
stc
cmp
or
sub
stos
sub
sbb
lea
ret
addl
add
lret
add
shl
and
incb
push
push
or
ds
jb
add
lea
dec
sub
xchg
add
add
rol
aam
push
sbbb
lcall
pop
js
popa
movsb
cmp
add
mov
xchg
add
pop
repz
pushf
subl
and
sub
xor
dec
add
xchg
add
cmpsl
out
add
pusha
adc
cmp
add
cmc
lea
add
addr16
or
add
sbb
adc
jmp
pusha
ret
js
dec
decb
add
mov
add
les
push
xor
push
add
add
sbb
sub
dec
push
shlb
jbe
mov
pushf
adc
sub
icebp
xor
paddsb
cwtl
inc
mov
add
mov
mov
cmp
or
add
rcrb
arpl
add
xor
add
stos
pop
push
cmp
pusha
addb
or
mov
daa
add
addr16
xor
mov
add
pop
and
mov
jl
ret
dec
andb
or
mov
push
fidivrl
add
push
sub
add
dec
or
or
pop
xchg
clc
mov
add
push
add
push
add
dec
fildl
pminsw
cmpb
add
sub
inc
push
dec
adc
or
and
xor
and
pop
ret
push
frstor
xor
jle
fcom
add
inc
xor
mov
shrl
add
xor
sbb
shrb
add
xchg
ja
and
add
dec
push
adc
lret
mov
adc
lods
xchg
aam
adc
add
adcl
add
cmp
add
xlat
push
xor
pop
add
daa
sbb
pop
xor
or
cmp
jecxz
sbb
dec
repz
or
loope
cmpsb
add
push
mov
repnz
add
cmpb
mov
out
ds
mov
add
xchg
add
or
mov
pop
push
lahf
xor
adc
in
mov
cs
xchg
sbb
mov
data16
dec
pop
sbb
and
or
out
loop
sbb
add
adc
mov
add
jo
add
cltd
or
add
cmp
add
and
jb
cmp
push
xor
enter
pop
inc
repz
or
loop
sbb
or
movsb
loopne
push
dec
cwtl
pop
jb
adc
out
jmp
dec
repnz
adc
inc
add
xchg
cli
mov
out
int3
das
lds
xchg
call
inc
and
out
cmpsb
in
daa
pusha
xor
jp
pop
or
mov
pop
dec
dec
jno
iret
mov
pop
fs
movsl
jnp
add
test
fcmovne
mov
and
add
movsl
lea
xchg
pop
xor
add
test
fiaddl
or
inc
lcall
sbb
in
jle
cs
sbb
ds
cltd
mov
aam
add
push
sub
pop
and
jb
add
pop
pop
add
mov
lcall
mov
pop
cmpl
cwtl
or
ljmp
pop
mov
add
or
out
inc
mov
mov
push
fwait
pop
xor
dec
adc
iret
or
sbb
add
inc
popf
xchg
push
push
adc
add
inc
add
jo
and
jno
add
sub
inc
add
ljmp
stos
adc
mov
mov
xlat
pop
test
add
push
fbld
jge
std
mov
sub
push
testb
push
cli
push
imul
sub
gs
ds
add
rcrb
mov
aas
mov
lcall
xor
and
sbb
mov
enter
cs
fdivrl
mov
or
outsl
les
nop
add
fisubrl
adc
repz
sbb
shll
mov
add
push
add
daa
clc
pop
xor
xchg
add
ret
pop
inc
fisttpl
dec
add
mov
sub
sbb
add
pop
test
pop
mov
fwait
mov
rcrb
mov
add
loop
xchg
je
inc
in
add
pop
mov
sub
mov
sbb
movsl
test
xor
sbb
pop
push
and
add
mov
rclb
aad
mov
xchg
lods
faddl
pop
ljmp
add
sbb
and
dec
add
ja
sub
xor
adc
and
adc
add
xchg
dec
inc
test
xor
cs
jle
push
inc
pop
xor
xchg
ljmp
mov
pop
dec
packsswb
push
loopne
xchg
mov
add
mov
ret
test
mov
cmp
cmc
jmp
pusha
push
test
add
aam
add
mov
mov
mov
and
push
jge
jl
popa
or
add
dec
push
sti
add
add
sbb
dec
in
repnz
pop
rcrb
pop
rolb
adc
into
or
out
xor
add
daa
insl
dec
mov
lds
push
dec
addr16
add
in
sbb
cmp
pop
add
or
sahf
push
stos
sbb
lret
ret
adc
aad
ds
sub
add
adc
cs
int3
mov
inc
jmp
add
add
xor
stc
pop
arpl
or
or
shr
mov
ja
push
add
dec
fsubrs
mov
sbb
ror
sbb
push
fs
mov
call
push
pop
add
pop
push
sub
js
inc
cmc
adc
clc
test
or
xor
out
lahf
adcb
jmp
jo
mov
rclb
jg
add
ja
out
add
sbb
mov
xchg
add
jmp
adc
sbb
or
mov
or
add
cld
dec
push
dec
add
jbe
lcall
lea
in
subb
daa
leave
andl
es
add
outsb
and
out
mov
pop
mov
xchg
add
shl
sbb
adc
hlt
in
fstpl
pop
adc
int3
push
jle
jnp
test
cmp
inc
pop
rolb
out
jg
add
push
xor
mov
add
adc
aad
xor
divb
rorb
push
subb
mov
hlt
popl
mov
test
cld
cs
stos
cmp
add
shll
pusha
mov
or
in
rolb
sub
loopne
movsb
or
xlat
nop
sub
inc
mov
pop
lock
adc
or
pop
rcrb
xlat
add
incb
icebp
push
jecxz
and
jnp
add
std
jmp
hlt
in
add
adc
add
lea
and
lock
fsts
inc
fs
or
iret
push
add
push
rcr
gs
mov
leave
add
fistpll
pop
add
lock
add
xchg
pop
clc
cmp
dec
xchg
test
mov
add
popa
inc
repnz
iret
call
sub
inc
shlb
int3
loopne
add
out
pusha
adc
int3
pop
cmpsb
add
mov
pop
push
add
mov
push
pop
add
ud2
leave
sbb
cmp
mov
jne
int
mov
mov
mov
adc
add
cmp
or
push
repz
pop
fsubr
loopne
aam
lcall
sub
movsb
push
dec
adc
mov
les
leave
repnz
ja
add
lret
sub
xor
cli
jne
mov
or
push
popl
loopne
dec
rorb
add
ds
and
ret
testl
cltd
bswap
les
mov
add
std
add
sbb
add
cld
add
mov
leave
enter
pop
xchg
and
add
add
das
inc
mov
mov
mov
adc
add
jbe
xor
dec
loop
xchg
or
push
sbb
pop
js
loopne
mov
clc
push
cwtl
or
sbb
add
sbb
divl
imul
movsb
orb
mov
xchg
push
jg
lock
in
add
imul
adc
cmpsl
add
push
mov
rolb
lea
push
stos
sub
push
and
movhps
rclb
add
xchg
add
scas
push
mov
jmp
dec
sub
mov
or
add
xor
jnp
sbb
out
sbb
in
clc
cmpsb
and
pusha
inc
cli
bound
dec
add
xor
or
je
cmp
aaa
add
cmpb
jne
inc
add
dec
loopne
jmp
or
mov
push
jo,pt
add
cmc
jne
add
loopne
sbbl
pop
add
out
add
pop
pop
push
adc
add
dec
xor
mov
test
repnz
or
cmp
dec
xorb
pop
addb
jne
push
xor
push
pusha
sub
pop
xlat
lea
adc
int3
pushl
add
push
mov
add
pop
mov
pop
xor
push
push
das
jmp
add
mov
mov
fists
adc
jmp
mov
add
xorl
stos
sbb
not
add
add
data16
jg
push
dec
add
mov
cmp
cmp
dec
and
mov
lods
push
push
mov
adc
fcmovbe
mov
enter
pop
call
gs
jae
pop
add
repnz
add
rol
add
pop
adc
out
fnstenv
xchg
in
int
mov
lds
or
sub
gs
push
inc
adc
mov
ud1
pusha
sub
loop
push
push
xor
ret
and
leave
xlat
sub
pop
sbb
jmp
es
roll
cmp
les
lret
pop
jl
je
add
cs
in
shl
pop
mov
cmp
xor
ja
add
mov
sbb
xor
jmp
lret
dec
cmpsl
push
out
adc
pop
cld
inc
jb
movsl
add
aam
call
or
pop
jns
adc
int3
movsl
push
add
xorb
popf
push
mov
add
test
sbb
ret
dec
vmovd
add
in
sub
push
cmpb
imul
cs
addr16
not
orb
inc
movsb
sbb
add
jecxz
movsl
and
push
xor
sub
out
ja
lret
testl
int
addl
adc
ret
loop
xchg
hlt
pop
pop
sahf
cld
adc
add
push
inc
cmp
add
test
cmp
inc
enter
stos
repz
xchg
pusha
daa
shlb
pop
in
pushf
add
or
and
pop
jb
cmp
cmp
subb
xorl
subl
sbb
add
push
and
sarb
cs
sldt
sub
ds
lahf
int3
and
sbbb
adc
popl
ret
inc
icebp
push
repnz
or
push
enter
in
iret
and
and
sub
roll
fisttps
jle
repz
push
add
pop
sar
aaa
add
and
icebp
faddl
xlat
xchg
mov
push
dec
push
push
xchg
data16
sbb
sub
cmp
mov
or
add
rclb
push
xchg
lods
insl
sbb
ficoms
add
mov
and
xor
adc
clc
popa
mov
out
loop
mov
jp
mov
inc
xorl
add
or
lea
mov
add
mov
push
mov
push
inc
mov
mov
add
hlt
and
out
jb
addr16
cli
orb
inc
xchg
cmc
adc
leave
pop
enter
dec
add
push
faddl
mov
sbbb
xchg
aad
in
fistpll
cmp
test
push
call
es
outsl
xchg
add
push
mov
out
bound
xchg
adc
aas
push
jne
xchg
cwtl
out
pop
adc
add
imul
pusha
push
popl
add
repnz
sbb
pop
fiaddl
lock
add
scas
out
mov
and
movsl
push
fs
adc
repnz
jbe
add
add
pop
ret
pop
iret
dec
dec
inc
push
mov
xchg
je
js
or
sub
xlat
jle
jg
add
sbb
roll
sbbl
adc
jbe
cmpb
popa
cwtl
cmp
mov
add
mov
test
add
pop
nop
mov
push
loope
icebp
shr
add
push
cli
mov
add
fisttpl
faddl
ret
sub
testb
add
mov
ret
adc
testb
pop
lds
flds
fstpl
testl
fiadds
xchg
and
aas
add
push
add
ja
mov
add
inc
xor
pop
clc
adc
loopne
lock
repz
fadds
adc
xlat
xchg
popa
enter
cmpsl
add
cmp
sbb
loopne
adc
inc
testl
inc
rolb
jnp
inc
xor
add
adc
decl
lock
add
hlt
daa
and
flds
add
dec
test
add
popf
outsl
adc
sbb
cmp
mov
mov
subl
data16
sub
jns
push
mov
cmp
sahf
shl
dec
xchg
fcos
call
and
insl
loopne
inc
hlt
push
pop
cmp
mov
add
pop
lahf
mov
adc
pop
add
mov
shrb
ja
iret
dec
add
cmp
in
sub
fiaddl
nop
jp
popa
sbb
add
rorb
xorl
roll
mov
add
lock
rol
aas
xchg
push
add
add
pop
out
test
add
scas
sub
leave
insb
inc
mov
shl
out
pop
pop
jmp
push
lods
add
jecxz
pushf
inc
cmp
mov
jmp
aam
test
jo
or
or
pop
push
or
xor
repnz
push
pop
in
xor
inc
in
pop
or
pop
sub
add
pushl
mov
cmp
xchg
imull
daa
add
ja
inc
add
std
call
add
inc
mov
pushf
fucomip
sub
add
mov
mov
push
xchg
aam
push
pusha
shlb
roll
jne
shrl
jl
xor
stc
and
xor
add
jge
pop
add
pop
loopne
sbb
xorb
add
pop
imul
ret
inc
mov
inc
mov
stc
in
add
cmp
test
ret
bnd
jecxz
pop
mov
xchg
fstl
and
ret
sahf
mov
add
inc
popf
movsb
into
xchg
leave
dec
and
xchg
outsb
pop
inc
cmp
jle
add
dec
lods
sub
test
sub
ror
inc
repz
fists
xchg
xchg
mov
add
das
lock
add
dec
mov
add
test
add
lds
sbb
xchg
mov
rcr
push
fwait
data16
mov
stos
dec
pusha
sub
add
out
mov
jne
lcall
jno
push
jbe
nop
jne
orb
clc
outsb
loopne
ja
subl
and
fcoms
lock
mov
mov
adc
push
add
push
adc
push
lea
add
add
out
dec
add
inc
loope
pop
mov
loopne
xchg
mov
pop
add
mov
addl
sub
dec
cmp
andb
push
pop
xor
pushf
and
dec
mov
or
inc
dec
jge
dec
mov
or
push
push
cmp
lcall
popa
je
stc
add
cwtl
clc
xchg
sbb
xchg
out
mov
popa
sub
mov
dec
pop
les
jb
outsb
mov
repz
test
add
pop
sub
pusha
add
sub
mov
jecxz
push
arpl
add
adc
test
dec
mov
dec
dec
imul
xchg
pop
sarl
incl
ret
mov
and
fadds
jo
ljmp
in
dec
lcall
nop
loopne
aam
ficoms
dec
adc
mov
adc
cs
in
sbb
into
mov
xchg
inc
adc
or
cmp
fdivl
add
and
test
add
rorl
mov
push
enter
out
dec
lods
mov
nop
xchg
push
jb
loop
jnp
in
shrb
in
mov
lea
add
mov
adc
cli
lret
add
pop
mov
lock
das
push
push
add
cmpsb
int3
mov
push
push
push
pop
adc
and
cmp
jb
pop
add
mov
fwait
mov
in
pop
jbe
addb
add
push
lea
add
adc
nop
lods
add
cs
and
add
push
jmp
js
and
mov
add
pop
cmp
sub
es
inc
insl
mov
add
adc
repnz
sarb
js
cld
aaa
orb
sbb
mov
jl
or
lea
cmp
sbb
lock
call
adc
in
stos
addl
rclb
pop
xor
push
fwait
jl
sub
sbb
jg
rolb
push
insb
loop
add
lea
pop
addb
xor
add
sbb
imul
jp
push
int
inc
add
inc
xchg
mov
rcl
lcall
ljmp
jp
sarb
rorb
cmp
xchg
icebp
sarb
mov
rolb
call
xor
fdivrp
mov
aas
add
or
popa
or
fs
dec
call
icebp
add
sbb
mov
pop
fnsave
mov
add
dec
jge
scas
xchg
sub
dec
sbb
inc
faddl
lret
popa
and
mov
lods
push
stos
or
add
and
xchg
adc
jns
or
mov
add
add
add
push
pusha
popa
xchg
pop
jbe
add
pushf
push
pop
jge
sub
lea
rclb
rolb
jg
sbb
mov
aad
bound
test
jmp
mov
jecxz
addr16
adc
fsubr
xchg
icebp
lea
jp
imul
movl
add
roll
roll
ret
stos
das
rolb
pop
aam
inc
and
dec
and
add
xor
cwtl
loop
aad
daa
mov
outsl
ja
mov
aaa
mov
hlt
push
in
mov
imul
add
add
sub
push
fistpll
repnz
testb
cmp
dec
inc
add
push
mov
mov
or
cmp
je
inc
leave
cs
xchg
pop
pusha
jg
test
jbe
add
xchg
lahf
or
outsb
push
dec
cli
test
add
aaa
pusha
sbb
add
test
add
add
sub
ss
xchg
in
out
mov
fidivrl
add
push
mov
cmp
xchg
add
mov
or
push
push
mov
cmpsl
pop
xchg
xchg
sub
dec
adc
aaa
movsl
pop
push
xor
cltd
dec
adc
fwait
dec
or
adc
add
xor
sub
movsl
push
push
icebp
add
cmpsl
outsb
or
cmp
add
cwtl
popf
add
push
loope
add
dec
push
jg
push
xchg
jns
jmp
inc
test
add
sbb
add
push
sbb
xor
add
movmskps
add
icebp
das
mov
gs
mov
pop
dec
add
inc
stc
fidivrl
pop
lahf
adc
nop
add
icebp
mov
add
or
add
negl
pop
push
jl
sarb
adc
xchg
inc
sub
cmp
lret
sahf
xchg
mov
adc
mov
inc
adc
add
sub
sub
pusha
dec
or
mov
ret
enter
pop
add
or
xor
shll
cli
add
push
ja
add
cmp
add
add
fiaddl
in
stc
cld
outsl
xor
adc
pop
test
xchg
mov
rorb
push
lret
inc
push
andb
je
or
ja
xorb
or
out
dec
adc
push
in
rcll
nop
loopne
popa
or
push
add
and
aad
jbe
push
add
sub
xlat
xor
repnz
dec
add
cmp
and
add
ficoml
aad
mov
and
test
pop
mov
add
hlt
fwait
push
dec
pop
add
pop
mov
add
jl
addb
sti
mov
sbb
cmp
fldt
dec
push
jecxz
ljmp
xchg
jo
adc
add
xor
mov
negb
dec
add
iret
mov
adc
out
add
cmp
xor
cmp
lods
loope
add
cltd
aad
push
pop
lds
inc
push
adc
cmp
xor
rorb
enter
cmp
sbb
push
leave
mov
dec
jmp
shrl
sub
mov
mov
jge
cmp
dec
std
addl
or
adc
loopne
adc
pandn
daa
mov
adc
rclb
repnz
xchg
or
add
and
pslld
and
jecxz
push
inc
sbb
punpckhbw
xchg
rcrl
cmp
neg
movsl
mov
mov
jmp
pop
lea
sbb
outsb
imul
or
mov
clc
lock
ror
add
mov
enter
filds
add
add
ret
cli
mov
pop
pop
push
pop
shlb
mov
bound
push
add
jmp
ds
dec
sbbb
aas
adc
add
push
lock
cmp
jmp
pop
pop
jns,pn
jl
add
or
scas
dec
inc
iret
push
add
and
push
adc
adc
mov
cld
adc
cwtl
sub
roll
lret
xlat
mov
repz
adc
mov
pop
pusha
cmp
je
add
add
and
sub
roll
pop
xlat
mov
fwait
jne
pusha
adcb
and
addb
cli
mov
jecxz
scas
inc
jge
or
mov
add
imul
ljmp
js
and
dec
unpcklps
subb
out
or
add
cmp
add
enter
xor
movsl
data16
mov
mov
out
jmp
repnz
jae
sbb
xchg
add
ret
add
dec
inc
push
pop
ret
mov
stc
add
arpl
sahf
mov
xor
repnz
and
dec
sti
lods
jp
xchg
je
popa
adc
lcall
add
clc
nop
add
mov
mov
or
lea
add
adcl
xchg
aad
jno
add
out
xor
sub
int3
add
or
xlat
xor
pop
fadds
nop
inc
movsl
inc
out
jmp
or
pop
push
dec
adc
cmp
inc
mov
int3
fcomip
psubd
and
add
or
adc
shlb
add
aaa
push
jae
cmpb
add
or
push
jl
call
push
mov
repnz
mov
add
add
and
test
stos
xchg
push
mov
sbb
push
add
add
inc
adcb
cwtl
popf
add
pxor
dec
jmp
shll
jl
add
mov
xor
jg
add
mov
push
rolb
popf
mov
add
and
pop
sub
and
cmp
clc
xorb
jl
xor
add
test
and
mov
pop
call
lret
pop
cmc
int3
ljmp
repz
pusha
int
in
add
push
ret
orb
mov
jmp
fisubl
sub
clc
repz
add
ljmp
stc
insl
add
cmp
push
mov
push
mov
inc
lods
add
pop
or
hlt
sub
push
and
loope
nop
arpl
xor
fstps
imul
jmp
outsb
push
jb
cld
push
add
or
adc
clc
repz
adcb
jle
add
sub
add
adc
shll
pop
pushf
jns
add
lcall
push
cmp
mov
insl
pop
adc
add
inc
fistl
imul
jo
test
aam
pusha
dec
inc
lea
dec
lret
xor
jmp
add
inc
stos
aam
les
add
roll
mov
cmp
mov
popl
push
or
lds
sbb
jnp
pop
sub
loop
jge
mov
jns
pop
shl
adc
sub
aas
xlat
jo
add
cld
loopne
push
push
jl
add
mov
xchg
ljmp
das
add
loopne
repz
push
aad
cli
mov
imul
movsb
push
jnp
mov
add
xor
add
rcl
ljmp
dec
add
jo
mov
not
push
push
idivb
shr
jb
xlat
add
and
pop
jbe
loopne
add
ret
cmpsb
mov
cmp
add
cltd
pop
loope
inc
sub
addl
je
movsb
inc
add
cmp
fidivrs
aad
cmp
sub
xlat
sub
add
adc
adc
sbb
pop
add
fldcw
jo
add
cmp
jb
push
daa
xor
lret
jo
xchg
inc
loopne
xor
push
xor
lds
lcall
shlb
mov
jo
add
mov
dec
sarb
test
lea
sti
inc
add
ret
scas
call
add
imul
mov
cmp
jae
push
add
cmpsb
jl
pushf
jb
cwtl
loope
paddw
add
ss
dec
cltd
sub
pop
jge
push
xor
add
lea
add
addb
push
dec
pop
and
ss
add
sub
ret
fwait
fs
ds
push
sub
outsl
add
icebp
or
and
pop
sbb
loopne
jo
stos
dec
dec
mov
aaa
inc
jnp
roll
dec
int
cmp
lock
xchg
loope
cmp
imul
call
dec
test
pop
and
add
aad
loope
out
fmul
bound
add
push
add
mov
data16
pop
adc
add
mov
inc
cmp
jp
add
and
push
cmp
rcrl
sbb
or
loope
cmp
outsl
ljmp
pop
xchg
lock
pushf
pop
jae
add
push
cmpb
add
shrb
lea
sub
outsb
xor
or
sub
sbb
sub
dec
push
icebp
in
pop
add
mov
add
jge
xor
nop
dec
sub
adc
add
cmc
push
sbb
mov
pushf
xchg
pop
clc
out
pop
add
and
cltd
sbb
mov
adc
pop
jae
lods
cmp
or
rolb
je
cmpb
add
pop
mov
or
add
push
in
push
ljmp
mov
jb
push
dec
sub
add
int
scas
sub
xchg
cmp
addl
jl
loopne
add
inc
jp
mov
rcrb
jg
cwtl
popl
fdivr
dec
or
add
and
call
out
add
fildl
clc
cmc
add
dec
inc
mov
mov
add
sub
add
sbb
imul
loope
addr16
ret
test
add
adc
mov
aam
inc
repz
dec
fcoms
mov
add
cwtl
jne
add
adc
pop
xchg
or
int3
add
popf
cmpsb
daa
add
or
roll
jbe
es
push
add
pop
sbb
je
mov
push
enter
in
imul
jno
in
ja
add
inc
js
les
aad
add
and
leave
jnp
lods
enter
push
in
test
inc
inc
loopne
push
lds
push
dec
stos
adcb
adc
adc
nop
mov
test
add
clc
xor
jg
push
adc
cmp
xor
push
fdivs
loope
sbb
sbb
mov
hlt
aad
std
inc
nopl
loopne
add
push
xor
xor
test
test
add
ret
lahf
add
mov
jg
sub
fwait
mov
mov
fs
jo
add
mov
or
mov
push
loop
jne
mov
add
mov
das
cmp
lcall
cwtl
add
loopne
les
add
jbe
or
ja
mov
cltd
jae
inc
or
pop
push
add
jecxz
lock
or
push
call
ljmp
sub
daa
sar
add
lcall
les
add
pop
xor
mov
cmp
dec
add
sbb
xor
jl
add
pop
loop
repnz
pop
pop
jg
add
jns
jne
cwtl
xchg
sbbl
mov
jne
sbb
test
ret
out
xor
pop
push
scas
add
add
pop
roll
leave
imul
dec
loopne
push
mov
scas
pop
loop
lcall
daa
inc
sub
test
jne
or
pop
mov
cmp
add
push
stos
or
call
bound
ret
pusha
adc
cmp
add
inc
repnz
cmp
mov
mov
adc
stos
cmp
pop
aas
add
add
push
inc
test
mov
cli
sbb
and
fcoml
dec
mov
push
dec
xchg
inc
jb
and
rolb
vmaskmovdqu
lfs
push
xorb
inc
jmp
orl
add
orb
test
test
add
outsb
cmp
out
pop
add
xor
and
ret
pop
add
cltd
daa
and
stc
sbb
sbb
jno
loope
xor
mov
push
inc
jo
add
mov
push
dec
cmp
and
fs
add
fiaddl
outsl
scas
adcb
sub
or
mov
insb
fcoms
stos
dec
add
sbb
mov
and
push
or
adc
mov
leave
add
test
je
daa
mov
mov
jae
add
lods
mov
loop
stc
xor
add
repz
loope
add
add
mov
clc
add
lret
or
add
push
sub
cmp
and
jo
sub
lock
test
add
in
or
call
js
mov
pop
in
cwtl
dec
add
hlt
out
sub
aam
fildll
loopne
pop
jo
add
mov
or
and
repnz
mov
lock
add
and
outsb
and
inc
mov
push
push
push
jmp
pushf
stos
enter
daa
pop
xor
rcrl
pop
adc
push
pop
cmc
lea
shrl
add
xor
enter
add
adc
adc
push
and
and
repnz
cmp
mov
inc
jne
test
shlb
movsl
pop
fmull
mov
lea
push
mov
cltd
mov
add
orl
andb
mov
inc
add
push
xchg
mov
popa
jo
mov
aas
add
gs
mov
flds
rcll
or
or
fiaddl
dec
addb
add
inc
adc
mov
test
scas
and
cli
or
movsb
jecxz
inc
inc
mov
add
mov
nop
push
add
mov
pusha
sbb
pop
jno
imul
movsl
add
gs
jecxz
arpl
mov
mov
add
shll
mov
add
sbb
pop
lret
nop
sbb
pop
add
dec
aas
jo
lea
add
mov
sbb
mov
mov
mov
and
add
test
and
mov
js
add
cmc
or
dec
lea
rolb
js
fldenv
sbb
call
in
or
pop
jle
add
bound
testl
adc
ljmp
andb
cmp
add
movsb
jmp
inc
mov
sbb
add
mov
mov
jno
gs
pushl
push
stos
add
out
mov
incb
jecxz
push
mov
lds
add
or
and
pop
leave
pop
jle
pop
shl
mov
add
push
add
pop
inc
adc
mov
movsl
addb
fnstsw
test
in
ds
and
cmp
adc
inc
cmp
shl
inc
dec
jne
cmp
push
call
sub
pop
test
sbb
cmpsb
jne
push
adc
call
ds
push
add
ret
dec
imul
and
mov
add
aas
xchg
xchg
enter
add
fimuls
or
js
push
roll
jae
add
scas
test
pop
ror
add
sbb
add
xchg
xor
adc
and
dec
add
mov
testb
adc
aam
push
mov
cmp
mov
jge
pusha
or
pop
call
jb
mov
and
dec
orb
push
jae
push
test
into
inc
add
sarb
bound
mov
outsb
mov
sbb
jge
push
jnp
in
add
call
mov
hlt
inc
pop
lock
pop
inc
clc
sub
shll
gs
pushf
aam
cmpsb
add
add
das
aas
adc
push
jbe
int
es
clc
in
add
add
int3
mov
dec
leave
adc
xor
fbld
fs
or
movsb
add
mov
std
pusha
xchg
mov
jbe
shlb
lock
pop
sub
xor
adc
mov
push
daa
dec
ljmp
cmp
add
push
pop
lahf
and
xchg
iret
dec
add
jmp
inc
repz
out
add
mov
mov
inc
mov
xlat
push
sub
in
mov
sbb
jge
jb
pushf
push
adc
pop
mov
push
xchg
cmp
and
dec
xchg
addl
mov
push
add
inc
das
int
pusha
into
push
adc
inc
shlb
lock
imul
jne
sub
add
mov
xorl
test
mov
into
add
out
mov
mov
shl
add
push
xlat
std
test
sub
cmp
xchg
add
clc
jae
jle
add
mov
jl
mov
jmp
add
js
mov
add
and
and
or
push
jb
lret
pop
bound
dec
ss
adc
add
xor
push
xor
jmp
leave
sub
pusha
dec
and
cmc
rolb
scas
add
popf
push
ds
ret
sbb
clc
fadds
add
or
enter
movsl
divl
mov
test
jmp
dec
add
les
push
xor
mov
adc
mov
leave
add
sub
xlat
pop
fcmovnbe
add
outsl
lea
out
test
add
xor
outsb
in
pop
or
pop
sub
fbstp
mov
inc
mov
jnp
push
adcb
lret
add
enter
stc
outsl
loop
movsl
push
pusha
out
sbb
push
repz
shlb
addr16
mov
mov
mov
add
lret
repz
mov
gs
mov
stos
cmp
call
cwtl
jno
add
lea
jo
stc
sbb
sub
call
jmp
aaa
add
fbld
mov
inc
movsl
push
cs
pop
mov
mov
ja
stos
or
inc
daa
je
rorl
rcrb
das
inc
fs
addr16
xor
jl
add
sbb
push
fwait
dec
pop
mov
stos
pop
xorb
mov
add
jle,pt
adc
popf
subb
mov
fmuls
add
movsb
jle
cld
repz
mov
jb
cltd
add
push
out
addb
inc
imul
pusha
fcomps
pop
xchg
enter
lods
push
andb
add
jg
xor
add
inc
out
testl
cmp
dec
jbe
add
scas
dec
adc
lret
nop
call
mov
jg
add
fbstp
rolb
mov
inc
sbb
adc
lcall
jge
insl
clc
ljmp
call
push
adc
add
push
pop
sbb
mov
sbb
add
in
sub
mov
mov
adc
arpl
cmpl
adc
push
ja
push
stos
sbb
filds
xlat
sub
cwtl
cltd
add
call
ljmp
mov
push
xchg
pop
add
add
mov
test
pause
les
cwtl
add
negl
dec
pop
in
mov
sbb
cltd
test
loopne
mov
pop
mov
pusha
cmpb
and
cmp
loop
xor
mov
repz
rorl
pop
inc
mov
inc
pop
lret
iret
push
add
add
xchg
and
fisttpll
add
inc
hlt
rcrl
clc
or
cmc
fnstenv
mov
mov
movsb
push
pop
loopne
push
add
pop
mov
cwtl
xor
mov
jmp
aad
cmp
das
xlat
mov
inc
mov
add
adc
xchg
pop
je
inc
pop
mov
mov
cmp
add
add
xchg
addr16
imul
add
xor
int3
test
mov
add
cmp
mov
cld
cmc
in
add
cmp
pusha
mov
push
push
scas
sub
das
adc
add
add
lret
inc
pop
test
push
popl
pop
sub
mov
jne
mov
ljmp
shrb
add
xchg
add
fs
jge
add
jbe
data16
sbb
or
pop
shr
add
lcall
neg
je
add
jmp
out
je
jne
dec
add
jns
aaa
dec
iret
test
pop
in
mov
aas
pusha
and
add
sbbb
push
in
push
xor
sahf
pop
mov
pop
or
out
add
mov
std
dec
mov
add
xchg
and
and
push
loopne
push
mov
cltd
or
add
inc
sub
add
add
sbb
pop
add
ss
sbb
cmpsl
dec
and
jbe
and
test
xchg
xor
in
pop
fninit
subb
sub
cmp
lahf
add
repnz
mov
loopne
add
imul
sarl
xor
lret
movsb
addr16
add
inc
jbe
in
jp
push
add
mov
xor
rorb
lcall
scas
sbb
xor
movsl
pmuludq
or
mov
in
jo
add
mov
xor
faddl
mov
mov
add
jmp
xor
rolb
adc
negb
jno
add
and
out
orl
loopne
outsl
jle
add
stos
mov
xor
cmp
hlt
cmp
fimull
add
mov
or
push
call
or
add
addr16
pop
cli
adc
adc
mov
mov
divb
sub
rorb
sbb
sbb
jl
add
or
jmp
adcb
add
nop
xor
push
dec
rorb
lds
sub
adc
inc
iret
cmp
mov
test
sub
sarb
inc
dec
push
and
in
roll
add
loopne
aaa
test
ss
jae
lcall
add
test
jo
aas
add
pop
lds
push
rorb
and
cmc
sbb
add
inc
lods
mov
jl
add
fdivrl
xchg
and
add
ret
or
or
gs
add
pop
frstor
mov
jns
es
cmpsb
push
inc
or
inc
pop
pop
push
inc
push
push
sub
lret
int
jo
pop
mov
stc
inc
iret
push
pop
and
add
add
bound
std
cmp
aam
repz
push
jbe
adc
filds
lods
mov
inc
fsubr
mov
ret
imul
push
loop
push
mov
and
mov
add
xor
hlt
jg
or
testl
cmp
mov
pop
sub
pushf
adc
adc
push
jg
add
cltd
and
push
imul
mov
dec
pop
cmpb
sbb
dec
add
push
jne
and
sub
lea
cwtl
movsl
enter
add
leave
pop
addb
push
stc
jmp
add
pop
loop
cltd
fwait
push
cmp
int3
and
add
inc
pop
call
inc
push
push
mov
cs
sbb
xchg
js
jle
cmp
add
or
mov
add
xchg
xchg
dec
push
lock
or
mov
mov
stc
hlt
ficomps
shr
subl
add
repz
adc
mov
or
pop
sahf
xchg
psrad
add
adc
mov
imul
mov
add
mov
sub
push
imul
add
sub
dec
nop
pop
pop
mov
add
lds
and
mov
jo
in
cmp
add
sub
pop
mov
das
and
pop
mov
lock
sti
loopne
mov
add
adc
xor
add
lea
call
adc
pop
mov
xchg
xor
cwtl
push
ror
dec
rorb
cmp
xlat
or
outsb
dec
dec
pop
lock
add
and
je
push
bound
jl
sar
sbb
repz
add
sbb
jae
add
xlat
push
dec
or
aad
std
pop
ja
adc
out
xor
add
addr16
xchg
bound
in
sbb
push
and
adc
cwtl
push
jne
adc
mov
or
loopne
ljmp
das
pop
icebp
je
and
add
add
cs
in
and
mov
jb
inc
cmp
mov
dec
push
and
xor
out
sub
xchg
push
mov
push
mov
add
add
scas
ret
sbb
into
add
int
rcl
fbld
add
xor
sbb
cmp
pop
cmp
clc
or
push
ret
pop
sbb
mov
daa
fcmovbe
aam
add
add
mov
ret
shr
cmpsl
lods
inc
or
or
inc
fists
shr
add
pop
je
push
adc
add
repnz
das
pop
cs
sbb
jno
hlt
sahf
ss
in
push
daa
mov
cmp
jo
add
shlb
aas
dec
cmp
add
fldt
int3
lock
xlat
and
enter
fsubl
out
add
movsl
loopne
push
das
add
shll
mov
lcall
jp
cmpsb
cmp
scas
lock
cwtl
arpl
sub
xor
xorb
inc
cmp
lea
test
fadds
rolb
jnp
xchg
and
outsb
pushf
cmpsb
out
pusha
add
adc
addl
and
add
and
add
inc
add
pop
jmp
ljmp
hlt
in
mov
jp
pop
and
or
aad
pop
fiadds
imul
pop
add
jl
push
cwtl
add
xchg
push
xor
xchg
aaa
pop
lret
add
push
mov
add
add
fwait
cld
lret
test
in
add
rcrb
xor
mov
push
mov
lds
push
xor
test
std
cmp
jo
add
jle
repz
cld
outsl
in
mov
inc
xchg
cmc
bound
add
dec
daa
jp
inc
ret
fidivrs
cli
ds
testb
test
or
adc
incb
movl
hlt
outsb
lock
add
sbb
cmp
call
lcall
out
cmc
subl
stos
out
xor
or
lock
adc
ret
jo
adc
inc
fidivrs
enter
add
test
in
or
jae
adc
ja
xor
cmp
aas
mov
or
jecxz
repnz
ret
loop
inc
xchg
jle
mov
inc
out
movsl
bsf
push
subl
das
cmp
push
pop
mov
icebp
add
lret
mov
mov
add
xchg
mov
push
mov
dec
adc
sub
xor
lret
mov
ds
mov
gs
adc
sub
or
and
xor
ss
push
prefetch
loopne
mov
pop
or
pop
add
and
clc
bound
pop
enter
sbb
mov
lock
rclb
and
or
fmul
rclb
or
mov
pop
and
jmp
mov
adc
jo
rolb
call
xor
inc
shrl
rcrl
jbe
add
inc
push
jle
test
inc
cmp
faddl
cmp
dec
sbb
jnp
sub
push
dec
bound
subl
cld
mov
cmp
jp
sbb
push
fcomps
adc
jbe
ds
enter
jbe
fs
or
mov
cmpl
nop
add
leave
or
pop
xlat
sub
and
or
inc
fsubrl
hlt
cld
push
sub
les
mov
add
adc
ficompl
inc
mov
mov
sub
sbb
pushf
adc
nop
aam
and
pop
loope
sub
mov
pop
xor
sub
inc
mov
adc
pushl
aad
add
test
shrb
or
add
in
mov
mov
mov
inc
or
sarl
mov
fcompl
or
pop
clc
inc
mov
pop
and
and
pop
nop
mov
mov
xchg
push
hlt
cmp
or
loope
mov
loopne
mov
inc
jae
sub
fcomps
cld
mov
adc
lea
and
in
pop
mov
rclb
and
mov
xor
add
inc
pop
mov
pop
pushf
cwtl
mov
mov
orl
das
test
xchg
js
add
mov
mov
mov
mov
imul
out
pop
add
loopne
push
lea
inc
adc
mov
add
xor
or
out
add
outsb
je
insl
add
in
loop
out
pop
addl
sub
cmp
sbb
xor
cmp
inc
push
and
add
or
fadd
in
pop
or
xchg
or
ds
cwtl
jo
nop
sbb
or
push
ljmp
add
clc
test
insb
jo
adc
clc
addl
or
dec
inc
pop
es
sub
lcall
xchg
mov
rorb
and
fcomip
sar
pop
shlb
adc
sub
xor
lock
pop
mulb
push
mov
fistps
or
mov
mov
add
inc
add
gs
push
add
mov
call
jmp
imul
sbb
les
je
sbb
cwtl
xor
js
cltd
add
xchg
mov
adc
push
test
dec
dec
pop
mov
push
add
push
push
pop
pop
push
sarb
add
xor
adc
jo
or
push
outsb
idivl
add
sub
and
popa
add
outsl
mov
rol
fmull
and
sub
hlt
in
test
or
cld
mov
push
imul
lock
nop
xor
fdiv
mov
es
and
inc
pushf
pusha
sarb
adc
clc
fcompl
add
adc
and
add
mov
inc
lcall
jl
lea
das
cmp
sbb
rclb
sbb
cmp
add
sbb
push
xchg
divl
test
loopne
add
rorb
into
or
add
cmc
push
int
adc
push
cli
faddl
push
add
outsb
sbb
test
jp
jge
nop
mov
dec
std
add
mov
test
xchg
in
dec
pop
lock
or
inc
add
andl
insb
add
out
inc
add
jecxz
cld
xor
sub
pop
cld
push
dec
dec
jl
mov
add
hlt
inc
cmp
or
rolb
add
movb
pop
lock
outsl
jno
pcmpeqb
dec
testl
or
push
and
popa
nop
shlb
and
cs
imul
mov
rolb
cwtl
push
push
pop
or
or
or
pop
xchg
int
mov
lea
fdivs
xchg
test
jns
add
xor
hlt
dec
inc
add
cmp
out
pop
lahf
enter
mov
push
test
xor
pop
sub
xor
push
mov
jo
mov
or
flds
add
nop
lahf
mov
and
test
paddb
inc
add
addb
mov
pusha
sub
faddl
cmp
and
cltd
int3
shrb
stc
jbe
sbb
sub
cmp
mov
xchg
ss
sub
lahf
xor
adc
or
cwtl
mov
sbb
and
pop
cltd
jno
xchg
insb
push
test
call
add
mov
adc
mov
pop
and
or
inc
ret
pop
sbb
loopne
sub
pop
call
jo
fldenv
test
mov
xorl
pop
cwtl
adc
sbb
fstl
dec
sub
pop
movsb
add
cmp
xor
and
xor
push
jns
xchg
xor
in
fdivs
sbb
fnop
push
mov
scas
sub
mov
cmp
lahf
jns
rclb
push
sarb
add
dec
popa
js
cwtl
or
and
sbb
and
rolb
aaa
cltd
inc
lods
pop
pop
aad
and
cli
and
adc
mov
adc
bound
movsb
loopne
test
adc
or
mov
pushf
mov
add
test
rolb
pop
mov
inc
or
mov
jmp
push
popa
pusha
out
sub
movsl
add
xchg
mov
or
xchg
and
adc
mov
cli
and
jl
inc
pop
mov
inc
mov
mov
mov
xor
mov
les
xchg
sbb
jp
add
fs
xchg
insb
lock
add
mov
cld
shlb
cld
and
xor
pop
mov
push
sahf
movsb
xchg
mov
mov
in
std
jo
mov
add
dec
cmp
outsb
pop
jl
mov
lcall
mul
lock
sbb
sub
cmp
dec
xchg
pop
and
cmp
adc
push
scas
adc
xchg
inc
fsubr
cmpsb
add
and
mov
push
or
mov
and
jbe
cmpsl
cwtl
xor
cmpsb
mov
lahf
js
add
xchg
sub
and
sbb
sub
ds
push
dec
bound
cwtl
mov
mov
adc
mov
clc
add
xor
dec
repz
repz
jp
mov
and
fdivr
lock
mov
and
je
mov
dec
lods
loope
int3
cld
loopne
add
or
jae
pusha
dec
stos
jo
test
movsb
mov
sbb
pop
adc
mov
mov
adc
xor
dec
cs
mov
nop
adc
xchg
rorb
and
and
imul
mov
add
cmp
dec
dec
push
add
and
daa
and
cmp
add
jge
mov
cmp
inc
adc
add
inc
cmp
fs
adc
add
jno
in
outsb
sub
out
add
xchg
inc
inc
fbstp
add
inc
arpl
mov
out
mov
add
dec
inc
jbe
pop
rorb
sbb
fldt
add
jp
push
jg
push
jb
jne
add
jecxz
push
sub
out
packsswb
push
inc
sbb
sbb
cmp
gs
add
push
add
pop
mov
xchg
fdiv
add
inc
jns
xor
add
cs
sub
add
fisubrl
inc
cmpsb
or
jbe
add
ret
sahf
jmp
cmp
bound
add
inc
js
je
cltd
sbb
xchg
add
fisttpll
jo
loop
outsw
inc
and
mov
jae
arpl
outsl
std
pop
xchg
les
or
cmpsl
add
inc
imul
push
cmp
push
rclb
cmp
sub
push
xchg
lcall
mov
fs
mov
push
adc
xor
jae
adc
stos
jge
pop
push
push
mov
mov
push
outsb
push
push
inc
cmp
xchg
je
or
or
shll
inc
pop
dec
add
cmp
addb
ja
or
pop
stos
sbb
sbb
push
add
or
push
sub
dec
inc
push
jns
movl
je
cmpsl
loop
jo
adc
jp
cmp
dec
adc
push
add
adc
jb
mov
dec
cltd
jns
and
xchg
lcall
test
add
inc
outsl
js
dec
call
nop
jbe
jo
cld
movsl
add
lret
pop
push
and
in
sub
fsubrl
pop
aaa
adc
mov
ret
rcrb
popa
add
xchg
inc
fidivl
xchg
aam
clc
testb
xchg
push
dec
outsl
push
cmp
add
int
es
dec
add
lods
pop
gs
fcoms
fdivs
dec
daa
push
fcomp
inc
push
int
and
dec
into
cmp
lods
fs
adc
xor
movsb
mov
stos
adc
inc
outsl
bound
adc
add
xorl
faddl
out
int
or
add
mov
or
add
imul
test
lods
push
shll
fldenv
lcall
push
rclb
aam
push
add
mov
adc
cs
sbb
andb
cmp
push
sbbb
push
lret
add
pop
stos
rclb
add
xchg
sbb
mov
xor
insl
enter
xchg
mov
push
or
and
cmp
push
mov
xor
push
mov
push
stc
dec
pop
adc
add
rcrb
adc
inc
add
arpl
les
imul
xorb
add
mov
pop
inc
loop
cmc
bound
add
nop
cmpsl
sti
add
jo
setle
insl
inc
add
pop
sbb
enter
or
in
movsb
sub
popl
inc
jbe
ds
repnz
cld
mov
sbb
push
dec
dec
dec
adcb
fs
and
add
jle
les
repnz
hlt
das
or
bound
sbbb
inc
dec
inc
adc
push
dec
jo
sahf
pop
enter
push
daa
movq
or
test
sahf
cwtl
inc
mov
add
stos
and
imul
movsb
es
data16
rcrb
push
pop
sub
add
xor
popf
divb
lcall
fldt
mov
gs
rolb
lcall
add
mov
or
leave
sbb
sbb
mov
or
push
xchg
roll
add
lds
xor
adc
mov
lock
les
xchg
pop
mov
cmpb
in
inc
add
sahf
ja
and
repz
sbb
xchg
push
push
inc
pusha
notb
fs
imul
lea
pop
push
jns
dec
popa
mov
faddl
dec
mov
or
outsb
and
int3
push
dec
add
ljmp
add
outsb
mov
adc
movsl
xchg
idivb
add
add
stos
loopne
adc
add
or
xor
add
cmp
xchg
pop
inc
dec
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rolb
ds
call
lock
sbbb
mov
shlb
int3
adc
inc
or
pop
dec
add
mov
mov
xor
pop
lret
xor
in
xor
js
jp
jl
sbb
xor
push
popf
sub
jp
pop
push
jl
aam
cmp
mov
aas
xlat
leave
loopne
out
add
push
add
cltd
imul
icebp
clc
incl
loope
ss
push
shrl
cmp
jmp
pop
fbstp
add
inc
push
dec
push
loopne
dec
aas
ret
xor
xchg
inc
mov
in
xor
inc
pop
cmp
push
jp
sub
je
jbe
js
sbb
pusha
cmp
sahf
add
lea
add
aas
inc
daa
add
push
or
push
cwtl
push
add
adc
dec
rol
loopne
js
xchg
add
cmp
xor
inc
dec
add
test
mov
fxch
loope
ljmp
je
jbe
js
jle
xor
cmp
popf
add
sbb
inc
lahf
add
push
xchg
push
dec
cmp
iret
jno
jns
cmpl
lea
xchg
aas
xchg
aas
fwait
add
out
pop
loopne
add
loope
cmp
mov
inc
add
xchg
push
repnz
popf
iret
sbb
or
push
adc
fstps
jae
push
icebp
cmp
cmpsl
int3
mov
aam
out
repz
cmpl
loope
jmp
shlb
cld
sbbb
jle
push
lcall
into
ret
mov
and
pop
cli
cmp
cmp
add
sbb
or
and
dec
xor
jle
inc
out
ljmp
push
jb
jp
cmp
fistpll
dec
mov
mov
lock
loop
ljmp
add
or
xchg
out
sbb
leave
inc
daa
and
pop
add
jb
repnz
in
cmpsl
push
testl
in
jb
dec
sbb
jbe
stc
jecxz
add
xchg
dec
dec
sub
pop
iret
pusha
xchg
jo
js
andb
lret
mov
out
dec
rorb
in
xchg
or
lock
testl
mov
adc
xlat
sti
daa
unpcklps
dec
incl
repz
and
jo
push
test
stc
mov
mov
ds
mov
aas
sarb
fdivrs
loopne
call
sbb
xor
leave
adc
sbb
fldenv
loope
jmp
stc
inc
sbb
jae
pop
inc
aas
push
mov
ret
mov
nop
jecxz
repz
cs
popf
fistpl
push
xor
push
sub
sub
adc
shll
cmp
pusha
gs
clc
inc
cld
dec
call
stos
xchg
inc
lods
loopne
leave
mov
out
push
mov
les
cmp
hlt
aas
clc
add
out
pop
xor
daa
or
inc
or
and
loop
push
add
xchg
andb
js
cld
xchg
js
movsb
add
mov
mov
mov
shrb
movsb
jmp
add
or
or
adc
loope
jmp
push
in
call
fs
pop
insb
mov
jle
daa
js
mov
pop
mov
mov
mov
jle
jle
jle
jle
jno
add
pop
or
cmp
cmp
add
and
sbb
lahf
cmp
into
push
iret
je
js
pop
lret
orb
iret
ror
iret
enter
ror
aam
fadd
fcompl
adc
sbb
sbb
and
and
pop
sub
sub
xor
xor
inc
xchg
jo
je
js
jl
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
movl
sub
xor
add
dec
aad
cmp
out
in
push
cmp
call
icebp
add
les
add
xor
add
inc
in
mov
in
jae
cwtl
aas
cmc
mov
push
outsb
xor
clc
lahf
std
rolb
popf
add
sbb
inc
xchg
add
dec
leave
xchg
push
daa
cmp
jnp
pushf
lcall
pop
test
ja
mov
icebp
in
rolb
add
or
or
adc
adc
cmc
dec
mov
cwtl
jle
ret
aas
pop
mov
ret
shrl
insb
bnd
outsb
aas
and
mov
fstps
loope
jmp
stc
sub
lods
pop
fisubrs
insb
clc
jo
jmp
fs
out
loopne
add
xchg
rcpps
lcall
dec
repnz
xor
xor
andl
jp
jb
mov
pop
xchg
cmp
xchg
aas
lcall
ss
and
push
mov
daa
add
push
lock
sbb
inc
je
push
jns
add
or
cltd
xor
jl
jmp
js
dec
addl
add
xor
in
cmc
flds
cmp
add
je
jbe
js
add
jl
jle
xchg
pop
mov
gs
imul
jne
cmpsb
add
or
cld
dec
cmpsl
push
sahf
add
mov
decb
inc
adc
mov
add
lcall
idiv
add
adc
sbb
dec
sbb
bound
addr16
inc
lods
imul
inc
andnps
xchg
pusha
cltd
test
add
cmp
and
and
xor
mov
nop
lods
cmp
push
mov
xor
gs
lock
inc
fnstsw
insl
icebp
jg
xchg
mov
ficoms
xor
pop
add
inc
jg
add
out
loope
adc
mov
scas
xchg
loope
ss
cmp
cmpsb
hlt
add
shlb
in
xchg
call
out
clc
push
cmp
cmp
es
test
dec
orb
enter
daa
xchg
pop
sarb
leave
fs
mov
inc
cmp
cmp
cmp
mov
pop
je
in
loope
rorb
sbb
out
cmp
jno
pushf
ds
aas
mov
dec
add
mov
shr
mov
jb
or
pop
loopne
cmpb
jbe
scas
js
mov
pmulhuw
mov
pop
lret
lcall
loope
out
in
add
daa
stc
adc
or
jno
xor
sbb
jmp
test
pop
lcall
mov
mov
jbe
js
jp
push
in
xchg
es
pusha
jo
mov
jb
loope
pop
leave
cmp
add
jns
push
sub
mov
cmp
mov
lds
add
pop
and
dec
hlt
popa
nop
fwait
lock
out
cmp
cmp
add
leave
dec
push
cmp
mov
and
adc
add
mov
sbb
pop
sahf
rclb
pop
xor
je
jae
addb
popf
pop
nop
adc
adc
push
pop
or
sub
or
jle,pt
in
adc
adc
push
in
and
clc
mov
sarl
and
xchg
and
xorb
sti
pop
push
add
aas
inc
dec
dec
mov
pop
cmp
sub
xor
add
mov
push
pop
xor
repz
gs
sub
xchg
xlat
inc
call
hlt
dec
xchg
push
adc
or
adc
movsb
add
and
sub
cmp
mov
jb
je
pop
pusha
popa
xlat
push
and
das
nop
lcall
je
lods
push
jb
ficomps
lahf
in
call
add
or
sbb
and
shll
sub
xor
addl
push
add
pop
in
psubsb
inc
nop
hlt
ret
imul
ja
add
cmp
cmp
orl
mov
cmp
adc
push
pop
inc
xor
xchg
push
pop
cmp
data16
jnp
xchg
in
mov
iret
lcall
negl
cmp
adc
xor
push
je
dec
gs
repz
sbb
adc
cmp
mov
sar
ja
add
sub
cmp
push
mov
push
daa
rolb
xor
jmp
jecxz
or
orl
xor
xor
mov
adc
pcmpeqb
add
xor
clc
add
cmp
cmpsb
cmp
cli
and
inc
pusha
rorl
nop
setp
ret
int
push
sbb
mov
loop
mov
pop
enter
add
jmp
mov
cmp
aam
daa
add
adc
mov
stos
je
adc
pop
loope
icebp
mov
pop
wrmsr
loop
out
ljmp
mov
mov
leave
hlt
sbb
xor
fisttpll
das
sbb
popf
add
add
xor
in
inc
add
frstor
add
cmpl
xor
add
in
xor
cmp
mov
cmp
and
aam
ret
leave
pop
in
sbb
clc
and
and
lret
adc
cs
xchg
inc
adc
mov
cld
cmp
xchg
dec
pop
mov
cwtl
sbbb
iret
lods
cmp
popa
repnz
je
int3
add
aam
ss
jb
xchg
je
push
neg
and
in
add
pop
and
mov
insb
add
xchg
outsb
add
mov
xor
mov
inc
cld
push
add
pop
shrb
pop
xor
xchg
adc
push
pop
out
add
mov
xor
add
cmp
add
pop
xchg
icebp
add
xchg
jo
jp
pop
add
test
cmp
add
daa
mov
cmp
aad
out
cli
lret
pop
add
dec
add
and
add
fs
pop
insb
inc
in
in
cmp
add
nop
ja
jg
jnp
jnp
mov
xlat
cs
add
sub
pop
mov
lock
add
roll
shlb
xor
mov
inc
dec
in
dec
leave
dec
insl
incb
cld
aas
aam
hlt
jl
add
fmull
adc
add
jb
fidivrl
add
lret
lock
cld
arpl
add
adc
or
xchg
out
and
jl
in
pop
rorl
add
and
int3
lret
dec
fmuls
paddw
xor
or
add
sbb
js
pop
es
xor
imul
xor
mov
movsb
push
sti
shrb
fnstcw
inc
adc
jno
jle
xorl
xchg
add
hlt
les
add
cmp
sbb
daa
in
call
add
lret
xchg
xor
add
pop
int3
mov
inc
dec
orb
rorb
sbb
cltd
xor
addr16
and
shr
mov
add
das
je
bound
add
mov
dec
iret
or
pop
add
inc
pop
pop
dec
outsl
jo
ret
push
add
push
push
cli
lret
movsb
lods
push
cvtpi2ps
call
std
xor
movsb
es
lods
cwtl
stos
js
jp
push
jl
jle
pop
rcr
aas
icebp
cmp
adc
pop
pop
pop
pushl
hlt
push
jns
mov
add
adc
sarb
add
jb
dec
jae
cmp
add
je
mov
pop
fwait
add
mov
fbstp
add
xchg
repnz
sbb
push
add
out
mov
in
andb
adcb
push
sbb
sbb
and
dec
outsb
popl
add
cmp
cmp
das
ds
test
push
lock
es
dec
add
sbbb
pop
xchg
fiadds
push
pop
xor
mov
add
testb
decb
pop
xchg
or
cmp
xor
xor
xchg
scas
mov
faddp
inc
ret
cmp
add
push
add
in
insl
fs
cmc
loopne
push
leave
cmp
add
inc
ret
mov
jge
or
mov
pop
inc
aas
das
inc
add
jns
rclb
mov
cmp
leave
add
cmp
sbb
pusha
xor
in
jmp
ja
jnp
pop
add
dec
mov
iret
push
rcrl
mov
nop
xchg
add
push
cs
pop
add
jb
add
movzbl
out
sbb
cwtl
push
push
xchg
add
pop
jg
fcompl
sbb
sub
in
sbb
push
das
mov
pop
xor
ljmp
pop
shrb
lret
clc
insl
sbb
pop
sbb
push
test
add
cmp
mov
add
xor
mov
out
adc
add
cmp
addl
xchg
lcall
cmpb
push
call
xchg
pop
rorb
and
aas
or
add
sbb
mov
pusha
xor
cld
enter
sbb
dec
add
sbb
add
push
push
xor
inc
lods
lret
ret
xor
loop
inc
sub
add
clc
mov
jp
pop
add
mov
nop
out
ret
or
ss
xchg
inc
mov
stos
rcl
add
mov
mov
loope
push
js
sub
lret
loopne
add
aaa
add
ret
jne
mov
adc
sub
add
push
jnp
mov
loopne
cmp
xchg
pop
push
inc
sub
push
subl
ret
lcall
hlt
add
sbb
cld
adc
and
sub
test
aas
cmp
lahf
xor
out
int
xor
sti
lock
mov
lret
dec
clc
ljmp
and
dec
das
addl
pop
cwtl
or
jle
cmp
ret
incb
pop
mov
in
mov
dec
pop
or
push
jl
inc
mov
leave
mov
nop
into
add
nop
mov
push
sbbb
xchg
mov
jmp
inc
push
bound
cmp
mov
add
addb
xor
daa
imul
mov
push
xchg
aaa
call
pop
or
sbb
jg
xchg
cli
and
ds
push
hlt
arpl
pop
outsb
push
enter
sarb
add
sub
mov
or
lock
or
es
aaa
add
ficompl
cmp
cmp
xchg
xchg
movl
cwtl
sub
sub
leave
add
jb
je
adc
adc
out
xor
fiaddl
inc
fsubrp
mov
and
jl
cmpsb
pusha
xchg
hlt
add
xchg
call
sbb
test
cs
sub
je
add
adc
je
xchg
mov
adc
mov
push
xor
movsb
sahf
popf
loopne
mov
add
inc
aas
dec
leave
push
shll
pmaxub
xacquire
lret
scas
shll
sbb
clc
cmp
mov
popa
or
xlat
cli
loope
inc
rolb
cwtl
cmp
movsl
das
stos
adcl
mov
shll
add
imul
pusha
sub
lcall
or
ret
sbbb
sbb
ds
into
add
lcall
add
mov
js
cmp
lds
add
push
cwtl
sbb
mov
jno
mov
and
fs
mov
dec
les
aas
xor
in
xlat
pcmpeqb
sti
add
cmp
addb
or
mov
iret
pop
pusha
sbb
push
fsubrs
dec
dec
pop
mov
ja
jge
aas
jb
je
add
and
bound
in
add
pop
cmp
jge
push
imul
inc
jae
ja
xchg
pop
cmp
sub
push
lods
leave
mov
jp
mov
add
pop
adc
test
pop
cmp
outsl
shll
mov
cmp
nop
adc
insb
adc
out
cmp
in
test
and
aad
jmp
lods
push
cmp
add
dec
daa
popa
inc
ret
or
or
rol
dec
enter
cwtl
cmpsb
sbb
and
rcl
cmp
mov
sbb
insl
pop
adc
cmpsb
mov
jb
and
setbe
pop
xchg
pop
iret
shll
in
cmc
fcoml
adc
sbb
ret
add
mov
mov
nop
das
mov
add
xor
fadd
rolb
pop
rolb
fcomi
and
jmp
repz
sbb
dec
lock
xchg
xchg
loope
cmp
insb
addb
jecxz
pop
cmp
jle
mov
mov
xorb
lret
mov
adc
pop
loop
imul
or
dec
xor
in
mov
addr16
adcl
or
add
mov
lods
and
adc
sbb
mov
xor
inc
hlt
xor
pop
jle
add
mov
add
popf
xchg
fimull
out
in
cmpsl
cmp
or
inc
jle
push
jo
add
mov
adc
enter
pop
xor
cmp
mov
je
leave
dec
fcoms
jb
add
test
or
mov
popa
or
imul
cmovno
add
cmc
xor
add
cmp
ret
mov
jbe
xchg
inc
sbb
add
pop
aas
dec
and
repnz
lods
cld
mov
jne
push
push
push
xor
jle
scas
iret
fidivrs
clc
xor
or
incb
xor
stc
pop
sbb
mov
shll
adc
movsl
js
push
ds
je
pop
xor
cld
fldl
stc
pushf
adc
xor
sbb
popf
dec
sbb
push
xchg
fwait
dec
xor
cmp
and
mul
loope
ss
leave
jp
sbb
add
rolb
orl
add
mov
ret
call
push
mov
outsl
shll
add
lahf
sti
test
cmp
loopne
mov
popf
hlt
mov
sbb
jp
mov
pop
xchg
lahf
cltd
pop
scas
inc
ficoms
jno
xchg
mov
rolb
xor
cs
popf
add
sbbb
push
push
sbb
push
adc
aas
out
cld
mov
add
or
xor
pop
out
loop
pop
cli
movb
loopne
jb
dec
sbb
push
scas
adc
test
mov
dec
sub
icebp
lds
pusha
add
push
cmp
xor
dec
dec
ret
les
add
aaa
lea
jle
fistl
sarb
sub
push
inc
xchg
cmp
and
push
call
shrw
sahf
push
or
jo
add
pop
cmc
psubb
inc
add
xchg
push
fdivr
dec
jp
add
pusha
xor
xchg
sti
add
add
mov
add
xchg
sub
sbb
call
mov
ret
hlt
add
clc
or
test
cld
ret
shlb
push
clc
js
mov
adc
push
lock
sub
xor
punpckhdq
push
js
jb
pop
mov
rcrl
shr
repnz
testb
test
sub
cmp
add
dec
jbe
sbb
xlat
aas
or
idiv
xchg
adc
add
scas
xchg
aas
les
andb
shlb
pusha
dec
movb
or
dec
add
push
push
les
jp
dec
ret
or
jle
add
push
push
leave
mov
add
cs
and
sub
jne
xorl
loope
sbb
add
ja
mov
in
mov
ret
aas
js
push
jbe
mov
mov
pop
fisttps
fdivrp
mov
xor
fcoml
adc
sbb
and
sbb
or
les
lret
jbe
pop
rolb
pop
mov
sbb
inc
adcl
aas
dec
xchg
call
fcoms
addb
pop
es
add
lock
and
sbb
daa
xor
sbb
pushf
mov
in
ss
mov
div
xorb
or
add
xchg
hlt
mov
jne
or
or
insl
cmpb
psubsb
std
cli
or
leave
and
inc
pusha
loope
cmp
cmc
dec
cld
dec
daa
add
sub
in
hlt
fcoms
add
movsb
pop
or
aam
pop
mov
loopne
xor
sbb
je
daa
jp
dec
push
ror
add
aas
mov
adc
push
pop
jns
sub
add
adc
lock
cmpl
xchg
cmp
push
lcall
mov
les
cmp
daa
inc
shll
push
jg
mov
xor
rclb
jo
add
pop
or
adc
sub
mov
sub
in
test
xchg
popf
or
add
in
xor
cmp
pusha
loopne
out
mov
mov
or
mov
add
jb
je
dec
sub
push
rcll
aad
mov
pop
add
jmp
push
sti
push
stc
cmp
add
add
mov
mov
xor
mov
test
loop
shrb
orb
lahf
pop
mov
adc
sbb
add
mov
enter
jecxz
ret
xchg
cmp
dec
add
iret
loopne
cmp
shrb
lret
sbb
cmp
nop
mov
cmp
fs
mov
andb
xor
add
sub
push
and
in
push
ljmp
rorl
jnp
add
sarb
push
outsb
jo
cwtl
cmp
jl
dec
add
mov
pop
add
cmp
test
daa
xor
cmp
cmpb
and
add
mov
cmp
sub
xchg
clc
pop
add
add
add
sbb
dec
sbb
add
adc
and
cld
in
adcl
cmp
mov
leave
sbb
or
into
jns
sbb
xchg
sub
enter
aam
popa
shrb
outsl
sub
add
pop
arpl
and
mov
test
xchg
add
inc
xor
inc
xchg
outsl
mov
add
pop
xor
and
inc
sbbb
push
push
jl
mov
pop
test
xchg
add
movsl
aaa
leave
lods
scas
insb
mov
pop
cmp
dec
xchg
ret
add
mov
jecxz
repnz
add
inc
cli
sahf
pop
pop
lahf
imul
inc
mov
adc
pop
mov
push
mov
cmp
enter
pop
add
in
xor
loope
jge
add
mov
sahf
leave
lods
rclb
dec
mov
fldenv
jo
adc
cmp
cwtl
push
add
in
dec
xchg
je
xchg
adcb
mov
xchg
cmpsl
pop
lock
negl
and
cmc
call
pop
sub
xchg
pop
xchg
loopne
sub
cld
into
cmp
jle
dec
ljmp
xor
or
ret
sbb
jle
orb
ret
subb
jae
inc
pop
xchg
movsb
mov
add
fstps
pop
in
add
mov
mov
in
add
mov
scas
fnstcw
mov
mov
add
fs
call
add
iret
jnp
cmp
cmp
push
dec
pop
in
or
add
inc
clc
sbb
xor
cmpsb
rcrb
ret
pop
push
jle
cmc
inc
or
in
in
add
out
cmp
cmp
fnstsw
and
mov
xchg
js
lcall
or
jle
mov
cmpb
push
loopne
pusha
mov
cltd
loopne
adcb
pop
jmp
flds
add
popa
das
imul
sub
int3
inc
ljmp
sahf
pushf
out
pop
ret
dec
pop
fstpl
loope
je
push
mov
sub
das
sub
xchg
jle
aaa
dec
ror
add
ficoml
outsl
mov
addb
pop
pop
xchg
xchg
lcall
xor
sub
cwtl
hlt
cmp
leave
inc
shr
outsl
stos
or
mov
addb
add
or
test
in
add
insb
in
add
mov
cld
jle
mov
enter
sarb
pop
push
pop
jnp
ret
dec
xchg
ret
sarb
add
or
adc
add
fnstenv
outsb
push
or
loopne
add
and
push
pop
xchg
sarb
out
add
in
mov
or
mov
push
int3
push
cmpsb
add
jo
loopne
ss
sbb
cs
cmp
dec
add
push
das
popa
inc
mov
stc
jg
pop
bswap
scas
iret
out
and
ret
add
pop
es
jmp
inc
clc
push
mov
dec
bound
add
shrb
aas
jbe
negb
adc
pop
xor
jo
lock
fadd
or
add
sahf
in
and
outsb
pushf
pop
adc
push
mov
rorb
mov
inc
mov
push
cmp
cmp
adc
adc
data16
or
mov
sbb
addb
cmpsl
mov
lcall
test
cli
pusha
sarb
or
sbbb
and
cli
add
pusha
jl
mov
stos
cmp
aas
daa
call
inc
pop
cmp
call
aas
sahf
inc
cmp
arpl
insl
addr16
mov
mov
sbb
push
icebp
cmp
mov
mov
mov
or
xor
cmp
xor
sub
das
add
fstpt
aas
in
jmp
sbb
jbe
dec
inc
add
les
lret
xchg
jnp
pop
es
iret
mov
mov
flds
fst
xor
fimuls
and
sbb
xchg
adc
fs
push
nop
or
push
pop
movsb
or
lods
orb
dec
mov
or
mov
int3
hlt
pusha
leave
adcb
cmp
add
je
or
adc
adc
sbb
add
ss
js
cmc
imul
leave
mov
mov
les
pop
cmc
aam
clc
cli
aam
add
cwtl
push
add
sbb
and
cmp
lds
push
in
xchg
pop
mov
repz
insb
call
xchg
mov
push
in
mov
movsb
test
push
daa
ljmp
cmpsb
push
nop
je
or
test
adcb
push
lcall
cmpsl
add
test
sub
ss
enter
push
add
mov
adc
test
and
sub
xor
mov
add
loop
pop
out
cmp
jl
fmull
add
mov
faddp
loope
sub
fwait
xchg
loope
pop
clc
insb
inc
add
je
ret
jo
add
cs
dec
movsb
mov
mov
pop
pop
insb
sub
mov
notb
add
xchg
faddl
sub
in
xchg
pop
mov
stos
fs
aaa
sub
sbb
enter
adc
loopne
xor
pop
cmp
loopne
test
mov
xchg
inc
cmpsb
fimull
xor
jo
inc
fimuls
adc
cld
inc
mov
mov
aas
aam
cmp
sbb
cmp
sub
xor
iret
mov
push
leave
jno
add
adc
mov
mov
nop
in
repnz
dec
aas
pushf
inc
mov
lods
in
mov
or
mov
std
into
adc
add
mov
in
nop
or
call
push
inc
adc
xchg
nop
das
push
add
lock
add
sub
mov
mov
push
nopl
fchs
andl
xor
mov
faddl
sbb
xor
push
sub
jns
cli
adc
and
mov
push
add
aaa
adc
ret
push
push
sbb
push
call
enter
mov
psllq
sbb
jecxz
push
lea
test
sub
pop
add
or
pushf
inc
and
add
and
mov
jo
push
add
adc
and
cmp
or
add
sub
jg
clc
mov
add
push
xchg
mov
adc
test
push
inc
push
pop
mov
add
push
ror
xor
or
add
push
add
cmp
mov
jne
mov
or
mov
je
sahf
push
pushl
movb
jne
cmp
mov
push
push
push
mov
push
sbb
mov
add
fisttpl
leave
je
adc
sbb
or
jmp
dec
jmp
sub
call
outsl
fwait
dec
mov
loopne
pop
pop
pop
push
bound
add
inc
sar
repz
mov
add
fwait
sub
inc
add
rcrl
add
add
and
dec
or
jbe
add
sbb
shlb
repnz
inc
test
mov
xor
push
add
addr16
mov
addl
rcrl
shr
outsb
lods
sub
mov
leave
add
pop
push
addl
sub
loopne
incl
bt
cmp
adc
push
push
xor
out
sahf
lret
mov
pop
add
add
test
pop
ret
fadd
adc
out
popa
es
add
push
lock
outsb
and
push
mov
or
xor
inc
xorl
adc
sbb
jle
cli
mov
adcl
xorb
add
add
push
mov
lods
mov
add
call
add
xor
cwtl
xchg
rorb
sub
mov
cltd
push
rorb
aas
fdivl
add
pop
roll
dec
shl
nop
arpl
cmp
jl
sbb
push
sbb
add
cmc
add
or
push
push
shll
mov
xorl
mov
dec
cwtl
adc
jmp
mov
pusha
cmp
inc
add
das
andb
or
or
cmc
add
shlb
loop
adc
mov
add
rcll
mov
add
and
and
daa
inc
xor
mov
cmp
rolb
add
pop
push
push
adc
add
testb
push
push
xchg
loop
pop
add
clc
mov
xchg
push
xlat
add
pop
mov
mov
xor
je
sbb
dec
add
mov
cmc
pop
fdivr
repz
push
sbb
add
iret
fwait
jae
movsb
roll
xorl
dec
xchg
test
lods
rcrb
add
mov
and
dec
imul
add
loope
into
mov
mov
cli
insb
inc
push
add
add
adc
dec
test
iret
add
insl
ret
add
enter
adcb
mov
adc
cld
imul
add
xlat
add
faddl
push
lcall
ret
inc
insb
lods
cs
add
pop
scas
das
cbtw
push
movsl
add
shll
mov
adc
xlat
sub
add
movsl
lcall
ficomps
jmp
lret
mov
add
loop
test
xchg
scas
nop
mov
xor
movsb
push
pminsw
clc
lcall
xchg
jnp
out
add
xchg
test
add
es
mov
or
add
mov
sbb
aam
rcl
add
inc
dec
scas
mov
into
adc
add
pusha
cmc
mov
negb
out
jo
add
inc
daa
cmp
lods
pop
add
cmpb
inc
movsl
andb
push
xchg
jecxz
daa
add
add
or
sbb
repnz
aam
dec
sbb
aam
insl
add
ror
pop
add
pop
xchg
mov
pop
push
add
roll
jne
jl
add
and
xor
mov
cmpsb
jg
pop
mov
cmp
ja
push
loopne
es
push
xor
nop
scas
test
mov
add
jmp
lds
mov
add
aad
push
andl
push
jb
jnp
push
addr16
inc
and
add
push
sub
cmpsl
push
test
add
add
mov
xlat
cmp
pop
xchg
stos
out
adcb
and
sarb
adc
pop
add
dec
lods
xlat
dec
push
fdivr
stos
mov
enter
lods
push
out
ljmp
pop
xor
bound
inc
xchg
jns
into
push
jle
add
aam
xlat
js
pop
add
push
jne
loope
iret
sbb
cmpsb
nop
add
mov
mov
jmp
subb
pushf
xchg
mov
inc
pusha
jns
jg
add
xlat
test
in
pushf
add
fwait
adc
push
ss
mov
jno
add
fsubl
mov
cmp
push
add
and
ds
je
int
sbb
add
cmp
jge
adc
daa
jge
add
in
jae
aad
push
clc
test
add
or
add
daa
aad
and
js
xchg
fcomps
mov
add
lods
pop
sub
and
in
dec
inc
dec
ret
push
imul
arpl
jne
mov
addb
push
inc
mov
inc
add
cmp
cmp
xchg
jae
or
or
lds
jno
adc
pop
or
je
push
sub
clc
pop
bound
jmp
ret
xorl
call
mov
inc
leave
xlat
add
sub
rep
or
jmp
adc
adc
cmp
jae
push
inc
add
inc
lock
mov
add
add
xor
shr
add
roll
push
mov
adc
cmp
mov
or
jns
pop
and
pop
or
les
jne
in
rclb
je
jne
mov
push
outsl
arpl
inc
in
gs
or
clc
outsl
out
stc
arpl
addb
call
scas
mov
inc
cmp
push
inc
dec
sub
popa
fidivl
loopne
divb
jb
outsb
je
adc
dec
dec
push
inc
inc
push
and
jmp
push
ds
mov
jns
push
clc
and
sahf
mov
lcall
push
cmp
jge
in
jecxz
insl
jecxz
data16
aas
bound
jne
push
push
outsl
jmp
push
sub
xchg
push
jne
scas
pop
nop
rorl
push
rorb
inc
in
sbb
icebp
jle
fidivl
outsl
sarl
pop
icebp
jns
inc
mov
daa
dec
outsl
out
xlat
dec
push
dec
repz
pop
mov
add
add
incb
add
adc
push
shl
xchg
aad
mov
mov
push
jnp
pop
jne
fmulp
dec
leave
xchg
sbb
jns
nop
and
iret
sub
and
lcall
hlt
into
pop
sbb
xchg
leave
and
mov
loop
add
in
jp
mov
add
icebp
sbb
movsl
pop
mov
dec
sub
out
add
mov
aaa
mov
sbb
stos
add
add
xchg
iret
mov
decb
sbb
lret
cmpb
pop
hlt
xor
mov
ret
or
sbb
fs
arpl
js
fmul
or
mov
insb
insl
sarb
fbstp
pop
mov
dec
pop
or
daa
mov
xchg
sub
stos
xchg
dec
jb
sbb
adc
push
mov
push
mov
pop
pop
push
ljmp
test
and
sub
or
mov
pop
push
xor
xor
aas
xor
mov
jmp
cwtl
jns
dec
sahf
jne
push
lret
loopne
and
cmp
loop
xchg
out
arpl
xor
xchg
sti
adc
nopl
rcrb
mov
mov
fsubr
mov
ret
nop
xor
mov
jo
inc
push
dec
mov
lcall
sub
sbb
sbb
cmpsl
jae
in
movsb
sub
xchg
jp
mov
mov
stc
call
and
add
fwait
dec
jl
inc
jle
lret
jge
or
js
mov
jecxz
cli
scas
adc
or
imul
lods
jno
sub
fcoml
pop
popf
mov
lret
jae
lret
or
pop
addr16
icebp
jmp
scas
adc
push
push
mov
outsb
add
stos
and
lahf
ds
outsb
jae
das
cmp
mov
pop
daa
mov
addr16
push
xchg
sbb
add
dec
jp
and
aam
xor
push
ljmp
mov
lea
xchg
fists
pop
mov
ljmp
inc
adc
popf
inc
push
sbb
mov
fadds
decl
lcall
out
lods
gs
pop
mov
and
ds
push
sahf
lock
data16
pop
sbb
fnstcw
lods
push
icebp
sbbb
cmpsb
and
in
push
cltd
or
mov
test
lods
jb
add
add
jg
jg
push
inc
mov
std
cli
or
ret
popf
xchg
mov
sbbb
mov
pop
rclb
test
in
jne
js
insb
sarl
cli
dec
lahf
mov
lret
out
test
loop
mov
inc
cmp
sbb
rorl
pushf
testl
fsubrl
mov
je
or
out
adc
fmull
mov
pop
xlat
enter
pop
mov
sbb
ljmp
inc
xchg
aad
sahf
mov
lods
bswap
subb
stos
lods
jo
dec
adc
lds
inc
shlb
mov
xor
hlt
sarl
int3
enter
or
mov
jg
xchg
hlt
out
divl
scas
insl
in
mov
adc
jae
out
push
int3
push
movsl
mov
xor
pop
test
sbb
sbb
adc
sbb
loope
and
fld
sub
xor
jne
jge
mov
jp
mov
or
cmp
ret
outsl
sbb
shlb
js
adc
cmp
cmpl
stos
push
rolb
test
cwtl
cmp
pop
push
fimuls
mov
push
mov
out
cmp
jns
mov
add
clc
xchg
pusha
dec
pop
fwait
jb
stos
xchg
pop
ja
xor
xchg
imul
out
jle
outsl
sbb
sbb
mov
mov
rorb
sub
adc
mov
ret
lahf
sub
bound
pop
xor
negb
sti
jbe
xchg
push
jo
fcomps
sub
pop
enter
daa
pop
das
add
loope
xchg
in
mov
inc
pop
and
js
popf
dec
lret
cmp
lds
pop
out
cs
mov
add
adc
imul
inc
out
sbb
nop
mov
lods
leave
dec
inc
testl
add
fwait
int3
loopw
popf
xor
mov
stc
xchg
scas
push
push
nop
and
mov
xchg
stos
sub
enter
pusha
icebp
mov
inc
clc
fcomip
lods
add
pop
je
jg
cltd
das
cltd
fidivl
mov
and
xchg
jl
dec
in
xor
dec
and
sub
sub
xchg
sbb
sahf
in
lods
das
jle
cmp
stc
shll
roll
repz
cmpsl
lret
push
xor
xlat
aas
out
gs
cmp
mov
xchg
shlb
popl
or
movsw
push
inc
mov
adc
adc
jle
pop
mov
inc
ffreep
scas
int
sti
sub
lret
adc
insb
mov
mov
popf
in
or
xchg
lock
jne
sub
sbb
mov
sarb
mull
sub
faddl
lret
test
pusha
psubq
mov
inc
lahf
fsubrl
je
out
cwtl
jmp
dec
jmp
push
mov
cmp
out
lret
sbb
arpl
dec
loop
jae
fidivl
out
nop
or
mov
mov
pop
sbb
adc
shlb
scas
cmp
jle
lcall
insb
xor
aaa
int
movsb
and
or
xchg
vprotw
shrb
imul
lds
jge
rcrl
sub
es
nop
fs
sahf
fsubl
sbb
add
je
push
jg
pop
pop
mov
jecxz
mov
sbb
das
aas
insb
push
movsb
iret
mov
xchg
es
inc
sahf
scas
adc
sahf
xor
mov
pop
push
or
or
mov
in
fcmovnu
xor
nop
cmp
addr16
repz
test
xchg
sub
ja
les
cld
jbe
xchg
inc
cmpsb
cmc
mov
out
lcall
add
push
clc
sbb
fs
adc
sbb
dec
aaa
cmp
and
lret
mov
and
inc
outsl
das
mov
sub
cmp
dec
shrl
adc
cmp
outsb
jle
fdiv
inc
pop
cli
add
test
stos
fwait
mov
ret
mov
mov
repnz
pop
jbe
data16
xchg
pop
mov
cmp
jg
add
addr16
or
ret
inc
popf
mov
out
pop
sub
ficoml
xchg
push
subb
pop
sbb
xchg
repz
fldenv
and
xchg
xlat
hlt
sahf
inc
cmp
inc
lea
testl
lahf
push
and
sbb
loope
jl
gs
push
inc
decl
std
popa
adc
mov
fcomi
sahf
dec
push
and
cmp
ret
mov
and
addr16
sbb
fidivs
jne
or
leave
jb
sub
and
ret
pop
adc
icebp
xchg
filds
sbb
test
mov
jo
addr16
inc
ret
adc
in
push
jne
push
lahf
imul
adc
aam
adc
int3
shll
adc
lods
daa
mov
inc
cmp
mov
cltd
inc
cli
mov
cmpsl
cs
scas
push
shll
cmc
pop
jge
pop
in
cld
and
sti
mov
fs
imul
inc
jno
push
adc
cmp
adc
test
adc
dec
sub
mov
push
test
ror
mov
lcall
and
idivl
pop
popa
xor
jp
aaa
xchg
mov
dec
lret
je
addr16
imul
lea
xor
sub
imul
jecxz
nop
sbb
sub
add
xor
mov
xchg
push
or
jbe
jmp
cmp
pop
xor
stos
icebp
cltd
pop
inc
dec
push
lret
fstpl
add
fsubl
jp
jb
jno
aas
sbb
cmp
iret
out
or
into
inc
xchg
xchg
jg
fistpl
subb
mov
subb
clc
xchg
mov
jecxz
or
aas
adc
inc
mov
add
mov
pop
out
ret
xor
gs
dec
ljmp
and
cli
mov
add
out
inc
shr
pop
jge
sub
fimull
inc
test
cld
mov
mov
js
xchg
dec
popl
mov
mov
push
push
jle
movsl
adc
jne
xchg
test
sti
sub
fwait
fs
loop
sbb
aas
sbb
sbb
cmpsl
adc
rorb
sbb
xor
cmp
xchg
xor
stos
sbb
pop
dec
xchg
mov
out
dec
jmp
or
mov
fiadds
repz
call
jne
adc
dec
mov
popa
cmp
lret
sub
and
inc
scas
jle
ret
dec
lods
push
pop
and
in
inc
mov
push
cs
nop
arpl
lock
cs
adc
push
xchg
test
mov
scas
ss
xor
daa
mov
jbe
inc
lds
in
je
subl
add
insl
ret
movsb
stos
push
jno
aam
pop
lret
loop
loope
fstpt
pop
sub
lahf
fimuls
in
dec
clc
jg
notl
mov
sub
xchg
inc
mov
mov
and
adc
and
mov
pop
arpl
data16
mov
lock
xchg
xor
mov
sahf
push
sti
aam
mov
lcall
push
aam
mov
push
mov
lods
or
lahf
in
mov
cld
aam
xlat
loope
xor
jne
or
iret
push
push
mov
sub
insb
je
outsl
cli
sti
push
pop
pop
out
pop
mov
ds
rolb
cld
xor
ror
in
fsubl
aam
dec
mov
add
clc
ss
xchg
pop
cmpsl
scas
cmpsb
das
sub
and
jl
aam
lds
or
lods
sbb
push
sarl
lods
mov
aaa
mov
lcall
mov
mov
pushf
es
cmp
xchg
pop
negb
je,pt
out
mov
dec
sbb
shlb
sahf
cmp
or
fcoml
out
adc
push
popa
nop
push
ret
cltd
dec
mov
hlt
outsb
adcb
add
cmp
inc
and
xchg
aad
mov
mov
jecxz
and
mov
ret
outsb
pop
popa
cmp
inc
pop
pop
xor
mov
mov
movsb
xchg
or
jnp
movsl
cmpsb
pop
and
in
adc
dec
dec
lods
je
sbb
subb
dec
mov
call
and
mov
mov
into
mov
push
and
sti
lods
cmp
xchg
lcall
mov
adc
cli
mov
rcrl
push
pop
adc
imul
nop
cmpsb
adc
lcall
mov
imul
orl
mov
jno
rcr
flds
out
cmp
mov
inc
sub
mov
mov
xchg
sbb
shr
or
jbe
leave
push
rclb
fidivs
movsb
add
negl
mov
xchg
sub
push
sti
jno
mov
jb
andb
pop
dec
or
dec
hlt
stos
add
push
sti
dec
sub
pop
xchg
hlt
xor
pop
sbb
fisubs
xchg
sub
icebp
lret
jbe
mov
adc
and
das
push
dec
push
in
repz
jbe
call
scas
pop
jbe
or
dec
dec
jbe
imulb
call
lock
out
mov
and
cmp
sbb
jnp
xor
pop
stc
test
jo
dec
jae
mov
cmpsl
jno
ja
ja
out
add
mov
xor
inc
insb
xchg
das
pop
sub
add
cmp
pop
jmp
aaa
mov
push
daa
mov
xchg
lods
pop
jo
shll
or
xchg
in
jns
xchg
inc
pop
lods
out
sub
pop
pop
mov
ljmp
xchg
rcrl
add
insb
mov
mov
xor
mov
cmp
scas
flds
push
mov
mov
into
pop
xor
cmpsl
pop
cltd
xor
dec
mov
out
mov
andb
ljmp
sub
cltd
push
mov
cmc
push
imul
push
jne
inc
cltd
and
out
mov
sub
std
lret
popa
pushf
push
adc
ds
psubusw
mov
mov
or
or
mov
xchg
and
dec
xlat
xchg
jl
mov
push
fs
shrl
mov
fimuls
pop
xchg
cs
dec
cmp
sbbb
mov
in
mov
cmc
and
jae
sarb
addr16
cmp
and
inc
cwtl
les
cs
out
mov
stos
imul
cmp
mov
adc
in
rcl
jge
mov
add
inc
push
into
test
enter
and
dec
les
pop
lcall
jbe
sbb
pop
imul
adc
adc
fldt
std
mul
clc
in
shrb
not
icebp
out
mov
jo
cmp
fsubl
ffree
das
mov
inc
stos
scas
mov
or
shr
decb
popf
pop
sub
into
xchg
inc
or
xor
mov
movsb
adc
xchg
dec
cmp
jb
add
inc
gs
lock
mov
loopne
stos
lods
filds
dec
or
es
inc
int
add
mov
cwtl
cs
cmp
inc
sti
adc
in
neg
pop
scas
outsb
mov
aas
push
mov
jp
int
data16
inc
push
push
sbb
or
pushf
mov
lret
cmp
scas
lret
jle
add
jp
in
inc
pop
movsl
std
je
jecxz
jg
dec
fsubrs
inc
mov
lret
xor
mov
mov
mov
and
inc
and
xor
stos
mov
or
loope
push
mulb
ret
fwait
loope
dec
aam
lret
mov
movsb
mov
add
loope
inc
cmp
out
faddl
or
mov
testb
mull
imul
pop
add
dec
lea
mov
xor
mov
out
int3
lahf
cmpsb
xlat
in
icebp
mov
push
mov
rcl
xor
cwtl
testl
dec
or
or
inc
mov
fwait
xor
mov
dec
out
imul
push
cld
add
inc
xor
pop
cmp
and
call
xor
into
lods
enter
outsl
ja
stos
sbb
arpl
jecxz
sbb
sub
jb
je
rorb
es
clc
jb
or
add
dec
bound
cli
dec
jae
push
pushf
pop
pusha
insb
movsb
test
xor
xchg
add
sub
adc
ja
cmp
dec
js
jae
dec
test
fmuls
or
leave
imul
or
and
fistpl
ds
dec
int
mov
popf
inc
fistpl
sub
mov
ret
orl
icebp
push
loopne
inc
lret
pop
xor
sub
lahf
shl
pop
cmc
xor
fidivrs
adc
xlat
lret
int
sub
jne
mov
mov
ja
and
clc
push
cmc
sbb
mov
in
xchg
cltd
repnz
inc
mov
testb
jae
dec
jle
pushf
cmovo
fildl
mov
shll
push
test
pop
aad
push
adc
fsubs
cs
enter
cmp
hlt
nop
push
test
test
enter
rcl
xor
sub
ret
dec
stc
out
int3
das
jbe
mov
cmp
adc
outsb
jnp
jle
and
mov
in
es
push
pop
push
insb
aaa
stos
xor
les
addr16
and
and
std
sbb
and
push
inc
popf
dec
or
adcl
sbb
push
mov
adc
sub
xor
lret
sub
pop
stc
mov
out
cmp
shrl
push
imul
arpl
sub
aad
push
movsb
in
adc
push
not
mov
lret
out
pushf
aaa
decl
not
call
vmovntps
das
mov
int3
pop
faddl
lods
cmp
lret
movsl
lds
xor
jmp
jbe
pop
xchg
ds
popa
adcb
or
hlt
cld
xchg
and
xor
sbb
adc
adc
daa
push
pop
mov
sbb
add
sbb
cmp
sub
xchg
enter
mov
cmpsl
xchg
imul
or
rolb
pusha
ret
jle
pop
mov
adc
call
inc
sub
xor
out
into
push
xchg
std
xor
sub
inc
xor
arpl
cmp
fidivs
xchg
mov
out
mov
sarl
scas
mov
lea
arpl
adcb
sub
scas
out
jle
fidivs
push
xchg
imul
out
xchg
mov
mov
xchg
mov
mov
jb
xor
xchg
jae
cld
jl
jmp
shl
std
push
mov
dec
pop
sub
push
or
addb
int3
loope
aaa
inc
cs
push
jne
lret
sahf
lods
xchg
sti
dec
fs
imul
push
fwait
repnz
inc
push
xchg
ret
stc
lods
cmpsb
jle
pop
jbe
or
cmpsb
pushf
push
jecxz
inc
rorl
lock
xor
sbb
out
push
lods
sahf
mov
mov
js
dec
in
adcb
dec
jbe
fldenv
ret
mov
sbb
mov
or
jmp
repz
dec
xchg
inc
sub
mov
pop
mov
add
adc
rolb
pusha
ja
sar
xchg
movsb
dec
mov
movsb
or
shlb
xchg
jle
sbb
mov
mov
enter
fsubrl
cmpsb
xchg
pushf
popf
inc
je
xor
ds
jo
mov
xchg
mov
xchg
inc
aad
popl
jp,pt
lcall
push
sbb
lds
fnstcw
lahf
jno
outsb
jmp
lods
add
lret
add
mov
int
add
fsubrs
and
pop
add
pop
outsb
adcb
xor
xchg
shll
cmp
in
adc
mov
or
aaa
push
sbb
lods
js
jge
data16
fdivrs
and
in
push
movsb
je
lds
leave
and
fisubrs
lds
xchg
popf
nop
jo
mov
mov
insb
xchg
mov
sbbl
les
aad
je
xchg
scas
adc
and
inc
filds
repz
fdivrp
and
rcl
jo
fadd
lock
add
int3
inc
sub
or
dec
pop
and
fs
loope
cli
cwtl
or
jp
sub
adc
loop
fldenv
sbb
mov
jae
jae
iret
xor
and
mov
and
inc
stos
sbb
fcompl
lret
pop
pushf
fisubrs
outsl
clc
shrl
pop
cmpsl
xor
lret
mov
or
fmul
movsl
mov
jnp
testb
cmpsb
dec
mov
addr16
fsubs
aaa
mov
sti
adc
iret
pop
or
push
mov
imul
push
mov
xor
dec
cmp
out
and
lock
arpl
or
push
jnp
sbb
dec
cmp
scas
mov
fs
add
insl
int
in
test
in
rclb
add
fisubl
ljmp
in
fldt
repz
sub
pop
jge
mov
dec
mov
dec
xchg
clc
ljmp
jae
fistps
out
mov
mov
fimuls
mov
xlat
aam
lcall
cltd
cltd
repnz
lds
sti
in
inc
pop
inc
adc
inc
outsb
mov
movsl
into
rolb
lret
mov
dec
aam
dec
orb
lret
jno
push
mov
mov
push
int
ror
jno
mov
sbb
xchg
or
mov
or
ss
jo
sub
test
inc
mov
test
cmp
add
out
sbb
jg
xchg
xor
lret
ljmp
cmpsl
pop
arpl
outsl
scas
push
inc
icebp
outsb
dec
mov
fnstsw
push
fwait
mov
mov
mov
dec
mov
pop
push
pop
jae
jb
jmp
dec
xchg
jno
test
aas
lcall
mov
sbb
xlat
loope
ljmp
pop
push
data16
inc
and
hlt
fmuls
imul
xor
or
cmc
scas
jge
rcr
xchg
dec
ja
xchg
in
mov
xor
bound
fcomp
pusha
mov
xor
mov
lcall
shl
sbb
mov
adc
ja
push
das
sarb
sub
cmc
add
pop
push
mov
int
and
mov
jae
adc
add
stos
mov
push
mov
cli
jo
jp
sbbl
and
jae
loop
ficomps
pop
cwtl
ja
push
jle
jb
ljmp
outsb
and
mov
mov
mov
lcall
pusha
int
ja
sub
dec
in
fcos
jns
cwtl
insl
mov
jg
add
es
aam
clc
stc
jecxz
sub
shlb
inc
lds
daa
out
cld
jle
pop
addr16
loope
into
cmc
mov
mov
and
addr16
jo
fiaddl
pop
fists
pop
cltd
jp
inc
mov
xchg
inc
stc
xchg
bound
cmc
cmp
lods
movsl
add
pop
pop
in
push
xchg
jns
cmp
or
cmp
sbb
sub
cld
dec
test
andl
jg
xchg
xor
pop
mov
test
out
cmp
hlt
int3
jbe
out
push
xchg
arpl
call
cmp
pushf
sub
xor
aaa
out
push
jg
hlt
leave
sbb
push
mov
ss
je
call
mulb
jl
js
pusha
push
into
aaa
mov
xchg
in
adc
in
xor
pop
mov
aas
xlat
cmp
pop
aam
xchg
fs
data16
xor
orb
push
xchg
into
out
lods
inc
pop
fsubp
std
mov
inc
pop
pop
sti
out
mov
outsb
rol
sahf
orl
insl
xchg
or
mov
lret
js
xchg
add
mov
shrb
out
or
xlat
out
sbb
pop
or
bound
test
inc
fmuls
stos
push
mov
sti
mov
fs
jp
cmpb
mov
or
add
in
jnp
ffree
outsb
outsl
ret
imul
je
movsb
loopne
cmpsb
push
shll
xor
mov
hlt
or
push
mov
sbb
mov
lock
in
xor
hlt
dec
shl
dec
sub
lea
mov
and
cmp
rorb
or
ficompl
cwtl
stos
jo
and
mov
cmp
arpl
out
mov
push
cmp
mov
mov
xor
pop
mov
ret
inc
push
cmp
mov
lcall
mov
jnp
mov
fcoms
rcrl
dec
cmpl
sbb
push
push
movsb
hlt
into
lret
das
dec
into
or
or
xchg
sub
sbb
push
daa
pop
fs
or
pop
dec
cmp
test
out
in
cltd
sub
mov
in
push
stc
clc
pop
push
mov
jecxz
xor
and
lahf
add
icebp
repnz
lods
cwtl
icebp
std
mov
cmp
sub
cmpsl
in
xchg
add
cltd
dec
ret
out
test
mov
dec
adc
imul
jb
mov
jecxz
add
adc
mov
or
daa
mov
pop
mov
mov
ret
imul
xor
dec
jp
lods
or
jbe
notb
lcall
inc
aad
fs
aad
sbb
ret
dec
sub
adc
testb
xor
testb
in
jo
dec
fs
int
cmp
scas
dec
ja
push
lods
hlt
out
xchg
imul
adc
lret
sbb
sti
imul
sbb
dec
test
outsb
dec
and
mull
pushf
dec
testb
fidivl
sbb
sbb
cmp
fidivs
and
scas
xchg
movsl
push
cmp
lods
cmpsl
xor
andb
int3
sahf
jne
mov
aas
ficoms
adc
aam
mov
gs
sub
fisubrl
jb
xor
je
int
push
jbe
stos
cmp
jg
cs
and
pop
std
gs
out
fwait
push
stc
call
popa
sub
jne
add
inc
or
shlb
icebp
push
cwtl
inc
movsb
daa
in
sbb
or
imul
insl
push
mov
or
in
jmp
push
xchg
mov
cwtl
pop
arpl
and
push
int
loop
cmc
mov
test
es
in
sub
in
jle
pop
and
inc
addl
xor
xor
lret
inc
xchg
xor
add
cmp
mov
xchg
xor
inc
ret
enter
xchg
pop
scas
xlat
jbe
lock
and
lahf
jno
push
xor
lds
adc
call
or
pop
neg
mov
xchg
sar
pop
mov
pushw
mov
ljmp
mov
push
add
dec
xor
fstps
mov
stc
movsb
into
and
mov
and
into
in
aaa
cmp
push
dec
andl
mov
mov
mov
insb
adc
loope
add
cmp
sbb
and
gs
push
jno
testb
xlat
mov
call
inc
inc
jg
icebp
test
jl
push
sbb
sbb
aam
dec
sbb
cmp
mov
add
dec
addb
int
cmp
push
xor
cli
ss
cmpsb
fildl
adc
mov
hlt
mov
and
or
ss
aam
adc
cmp
xor
fldt
dec
nop
insb
pop
pop
and
imulb
cmc
sbb
hlt
cmp
add
push
jnp
mov
jecxz
mov
addl
rclb
and
sub
sub
xchg
mull
jne
loopne
or
ret
loope
shll
leave
mov
pop
lods
movb
int
inc
outsl
std
sbb
and
std
lods
and
and
out
imul
lods
push
sbb
dec
dec
popa
lcall
xchg
adc
sbb
subb
and
pop
call
jno
testl
push
sbb
mov
xlat
inc
aad
mov
fdivr
jne
in
mov
ret
mov
or
pop
sbb
push
inc
in
lods
fs
inc
fisubrl
and
das
jae
movsl
sub
inc
lea
fdivrl
mov
sub
jge
dec
shrb
imul
subl
scas
repnz
pop
int3
fldcw
fisttpll
movsl
addb
inc
ja
data16
sub
int
repnz
jp
fdivs
cmp
or
fnstcw
push
mov
mov
add
cmp
cmpsb
shll
pop
ds
bound
push
xchg
cwtl
or
push
sahf
pop
es
cmpl
mov
dec
dec
bound
cmp
push
pop
sbb
jge
lret
lock
mov
dec
jmp
or
mov
nop
cmovbe
adc
dec
aas
and
out
test
adc
mov
xchg
imul
push
jecxz
mov
push
lea
jge
mov
fidivrs
insb
mov
jle
hlt
jl
xchg
rcl
cld
repnz
outsb
stos
out
add
into
mov
push
lret
testb
lods
mov
dec
inc
movsl
jae
sub
repnz
lahf
dec
or
insb
roll
adcl
and
bound
sub
cmp
add
xchg
mov
mov
mov
mov
popa
mov
sbb
mov
xchg
and
jg
mov
cmp
data16
mov
out
mov
mov
sarb
loop
sbb
jle
repz
rorl
inc
adc
stos
fs
dec
stc
orl
int
loop
cmp
std
popf
push
movsl
mov
pop
arpl
or
xchg
inc
faddp
mov
arpl
sub
test
sbb
lods
xchg
fwait
fwait
mov
push
push
lret
cmpl
lods
rolb
push
out
ljmp
push
dec
dec
jecxz
push
push
leave
jmp
cmp
test
fnstsw
frstor
adc
adcl
cwtl
mov
mov
sarb
out
xor
xchg
in
cmp
mov
in
cs
je
inc
ret
pop
imul
loop
pushf
repz
imul
push
iret
hlt
and
int
mov
rolb
pop
sbb
pusha
sub
pop
pop
std
lods
pop
std
mov
fdiv
stc
inc
imul
jle
xorb
cmp
hlt
pop
ljmp
mov
je
and
dec
aas
ja
or
stc
xor
cmp
pushf
sahf
jmp
adc
jb
in
pop
lds
popa
in
insb
mov
mov
xchg
push
xor
mov
mov
mov
pop
popa
mov
jecxz
xor
jbe,pn
sbb
push
lret
lds
sahf
mov
push
insb
adc
dec
xchg
popa
cltd
mulb
or
mov
adc
pop
ret
lds
not
bound
fsts
arpl
lods
and
mov
jmp
inc
aas
mov
pop
arpl
cmp
das
dec
dec
pop
gs
and
ljmp
out
adc
decb
mov
cmp
arpl
fwait
pop
mov
fs
pop
sbb
inc
lods
sbb
mov
or
push
cltd
dec
incl
lret
ret
add
xor
mov
sub
add
pop
fsub
dec
scas
mov
pushf
lcall
loopne
or
movsl
lahf
xchg
pop
xlat
mov
les
and
pop
imul
xor
movsb
insb
sub
iret
scas
sub
cmpsb
mov
and
roll
insb
xor
xor
cld
cmp
inc
add
sbb
jecxz
cmc
mov
rorb
jmp
add
xor
dec
test
stc
xchg
jmp
jg
shl
stos
pop
nop
xchg
rolb
call
out
mov
mov
scas
xchg
add
mov
arpl
hlt
push
and
push
pop
out
cs
outsb
iret
xor
mov
dec
or
push
cmpsb
xchg
dec
pop
sbb
aad
inc
ret
fcmovne
lret
sub
xchg
jmp
cld
ja
xchg
mov
lret
sub
pop
lahf
out
mov
cli
push
and
xchg
ss
push
lods
xchg
bound
cmpsb
das
adc
adc
out
cmp
aaa
mov
test
imul
jnp
cmp
jg
movsb
mov
test
rcrb
popa
jae
lret
dec
sbb
aas
nop
push
and
or
mov
cmpb
mov
mov
in
mull
repnz
or
dec
out
rolb
xor
sbb
and
push
mov
repz
push
mov
sar
jge
adc
dec
lods
and
and
shll
iret
mov
movsl
lods
fsubrl
sahf
dec
or
inc
jno
jg
jnp
sarl
lock
ret
enter
sbb
insb
test
icebp
jmp
sbb
addl
push
roll
out
mov
jns
push
outsl
jl
or
jno,pn
jbe
inc
pushf
push
jns
and
pop
idivb
int
or
ljmp
jno
repz
ja
loop
jae
mov
fadd
mov
mov
std
xchg
sub
clc
and
jae
and
cmp
in
scas
jns
out
xchg
sti
outsb
xchg
ja
push
adc
push
ds
in
imull
mov
adc
push
ret
cltd
mov
cmp
cmp
ja
int
jns
cwtl
lock
movsl
push
faddp
fcom
push
cwtl
and
jnp
gs
mov
push
cld
xor
cmp
int
xor
pusha
aas
pop
xchg
cmp
rep
cmp
mov
push
inc
mov
push
call
fadds
cmp
sbb
lods
adc
clc
jo
mov
out
jmp
imul
outsl
fadd
in
jmp
inc
in
bound
sti
mov
xlat
jmp
cmp
lods
push
out
inc
pushf
add
rcl
or
adc
leave
mov
stos
sub
inc
fneni(8087
jae
and
mov
jno
js
fisubs
ret
push
scas
mov
loope
mov
ret
xchg
test
dec
sub
mov
adc
push
cld
push
int3
sahf
fstl
xchg
loope,pn
jp
out
call
sbbl
cmp
pop
jge
in
jmp
leave
cli
xor
mov
dec
dec
scas
pop
lcall
std
mov
add
sub
dec
int3
ficoml
pushf
fsubl
movb
faddl
mulb
adc
xor
pop
pusha
dec
cwtl
lret
xor
mov
aad
stos
orb
cmp
lock
xor
cltd
addb
or
push
mov
sub
fdivrp
bound
dec
arpl
outsb
hlt
cmp
and
lods
daa
gs
dec
loop
sti
pop
mov
insb
andb
repnz
adc
mov
es
lret
fcmove
adc
and
addr16
xabort
cmp
in
aas
lret
cld
sub
mov
pop
rolb
sbb
push
push
outsb
xor
push
shll
shlb
cmpsl
mov
xchg
inc
lahf
jns
jb
inc
mov
sbb
mov
pop
inc
sbb
divb
jmp
std
stos
fs
loop
mov
clc
call
or
call
test
lret
add
dec
cli
mov
push
adc
insb
stos
mov
lret
std
mov
dec
ret
arpl
std
sub
push
adc
push
dec
shrd
push
in
insb
or
pop
xchg
insb
jb
xchg
mov
add
call
xchg
shlb
xlat
aad
insb
adc
inc
sub
sahf
sbb
jo
imul
xchg
in
xchg
and
pop
pop
sbb
push
and
mov
cmpsb
aad
movsb
inc
mov
cltd
sub
test
mov
aaa
aaa
cld
jae
and
gs
enter
enter
outsb
xchg
pop
and
xor
sub
jp
pusha
ret
mov
jno
fiadds
je
and
popl
mov
add
jp
jge
and
scas
mov
sahf
lea
pop
mov
rcrb
cmp
int
add
jnp
mov
scas
xchg
incl
idiv
adc
es
mov
subps
dec
and
cmp
push
push
push
add
and
lahf
movsb
xor
mov
jmp
outsl
ljmp
sbb
scas
je
sbb
ret
cld
xorb
inc
loop
xor
fdivr
push
push
sbb
pop
out
and
jle
inc
jecxz
mov
shll
jne
nop
rcl
repz
cmpsb
cmc
and
or
scas
push
vpunpckhbw
jno
loope
mov
mov
sti
stos
mov
idivb
pop
das
out
pop
imul
movsl
sbb
or
mov
or
movsb
xlat
and
xchg
rorl
shrb
push
loope
in
mov
xor
xor
jbe
mov
je
test
cmp
or
cs
sbb
fldt
and
stos
or
shlb
mov
ficoms
pusha
scas
pop
out
inc
in
jl
pop
ljmp
inc
and
in
cmc
add
and
std
cmpsb
outsb
fcmovu
mov
or
sbb
pushf
adc
cmc
pop
dec
dec
mov
arpl
push
adc
cmp
jecxz
push
ja
andb
jmp
sub
xchg
add
push
in
shll
popa
lcall
mov
sahf
cmc
je
je
or
cs
int
jg
bound
push
xchg
and
jmp
test
mov
add
fistps
lea
adc
sub
scas
push
mov
mov
jo
mov
ss
sbbb
pop
sub
roll
adc
cmp
ja
mov
mov
add
pop
mov
xor
pop
add
mov
cmc
mov
pop
inc
add
push
dec
add
add
jge
ss
add
imul
jmp
mov
ja
jo
lods
or
push
cmp
pop
mulb
imul
mov
sbb
xor
adc
xor
lods
mov
int
pop
fists
cmp
mov
icebp
mov
sbbl
fisttpll
scas
mov
aas
xchg
orl
out
aam
roll
jnp
fsubs
inc
insl
into
sub
testl
lods
cmpsl
jg
mov
movsb
jno
sbb
pop
jg
or
inc
add
pop
mov
int3
pop
std
mov
jp
cli
mov
sbb
out
in
adc
jl
pop
jno
jns
ljmp
fxam
push
out
dec
push
bound
xlat
loopne
inc
sahf
mov
test
ss
sbb
dec
mov
lods
fsubp
jns
in
das
push
lcall
ret
lahf
rcpps
mov
push
mov
push
inc
cmp
rep
or
js
xchg
insb
cli
dec
scas
or
dec
mov
jns
pop
push
fcoms
adc
in
inc
push
mov
into
notb
push
xor
in
icebp
lret
or
inc
in
cmpsl
std
ffree
and
adc
jp
mov
inc
mov
and
insb
rcrb
faddl
in
inc
xor
xor
call
sub
call
xchg
pop
cs
mov
outsb
jp
int
outsl
lcall
push
inc
ret
pop
jo
inc
sub
add
movsb
pop
lock
dec
insl
popf
adc
mov
ja
fisttps
iret
ret
inc
aam
xchg
push
mov
dec
sub
sbb
jl
inc
xor
out
cmp
push
and
fchs
mov
rcrl
pushf
bound
and
nop
mov
lock
stos
mov
out
push
enter
ficoms
xchg
xchg
add
xchg
xor
xchg
mov
dec
clc
movsl
popa
clc
cld
mov
cmp
adc
sbb
sbb
sahf
xchg
stos
xchg
int3
loope
lcall
mov
push
pop
loopne
lods
sub
js
cmp
push
scas
dec
les
xchg
mov
hlt
jge
mov
mov
sti
fdivp
inc
xchg
sti
push
adc
orb
call
cmp
mov
dec
pmulhuw
inc
add
push
loopne
dec
mov
inc
mov
mov
lahf
sbb
lods
mov
ret
sarb
dec
push
push
inc
ficompl
xchg
adc
cltd
je
mov
movzwl
adc
out
sub
pop
clc
lea
or
flds
sbb
mov
inc
mov
or
je
inc
cltd
or
jg
stos
in
dec
dec
outsb
cmpb
lods
lods
popf
loope
mov
ficoms
subl
xor
mov
lods
cmpsl
in
push
repz
andb
insb
std
fnstenv
repnz
leave
adc
shll
cmp
and
cwtl
push
jno
test
or
in
mov
mov
dec
add
ljmp
mov
loopne
loope
pop
ja
or
loop
ret
cltd
push
cmp
aas
push
repnz
outsl
sub
in
dec
or
testb
inc
popa
push
cmp
xchg
xchg
pop
mov
sbb
fisubl
jae
sbb
mov
fsubrs
insb
cmc
xor
push
call
aaa
pop
insl
loop
inc
popa
cmpsl
addr16
push
insl
int
adc
out
lods
out
loop
clc
add
lcall
aaa
ficoml
xor
add
test
cmpsl
call
shlb
dec
and
or
cs
movsb
dec
repnz
in
stos
jns
fld
outsl
push
jnp
addr16
fnstcw
pop
sahf
adc
pop
push
adc
mov
or
add
mov
or
jle
addl
es
hlt
outsb
es
lcall
push
leave
mov
outsl
fstl
je
push
sti
xchg
mov
push
stos
es
jmp
jbe
mov
sbb
lods
sub
pop
sub
xchg
pop
sub
aam
fdivs
adc
repz
push
testb
pop
adc
push
pop
dec
rcll
mov
out
decb
inc
mov
test
out
mov
pop
fcomip
test
pushf
xchg
xor
cmp
jle
insl
repnz
iret
imull
ja
out
and
in
shl
sbb
icebp
imul
ljmp
mov
out
push
imul
imul
ljmp
xchg
fcoms
je
sub
movsl
lret
cwtl
out
imul
test
rorl
or
dec
inc
jle
jno
stc
in
leave
loopne
inc
das
push
adc
inc
sbb
mov
sub
xlat
inc
push
daa
xchg
out
cmpsb
inc
mov
sti
mov
and
adc
movsl
adc
fcoms
lcall
lods
inc
fisubrl
mov
jg
pop
jnp
jp
fbld
test
jno
jno
lods
int
jae
aas
mov
xor
ret
cltd
icebp
ss
shll
ficomps
pop
popf
in
pop
mov
or
or
adc
push
push
je
mov
cmp
and
or
mov
inc
mov
in
pop
loop
call
mov
xchg
pop
push
xlat
pop
test
jge
mov
aaa
mov
ret
dec
aaa
loop
aad
daa
xor
push
xorl
push
in
adc
stos
test
xchg
fs
inc
fwait
mov
cmp
dec
movsb
outsl
mov
out
jae
je
adc
cmc
testb
out
pop
xchg
push
jbe
sub
mull
scas
xchg
testl
ficoml
jbe
ja
jg
mov
cmp
dec
mov
jmp
mov
int
andl
fprem
lods
sarl
cmp
lea
xchg
lods
gs
je
andb
add
dec
js
lahf
and
cli
inc
sbb
xor
dec
jl
out
sub
fsub
outsb
mov
push
jbe
pop
mov
cmp
dec
pusha
lcall
add
push
mov
mov
jge
jge
inc
push
mov
or
fnsave
mov
inc
fwait
cmp
and
sub
imulb
inc
xchg
jp
inc
push
fwait
mov
lods
push
cs
gs
repz
arpl
iret
test
hlt
das
dec
adc
aaa
mov
push
int
cwtl
out
mov
insb
aam
icebp
xlat
adc
jp
aas
insl
lods
pop
pusha
mov
adc
sbb
jmp
xchg
cltd
imul
sub
or
dec
jne
cld
mov
insb
xchg
lock
pop
movsb
stos
sbb
clc
int
fnsave
movsl
fists
sahf
xor
inc
inc
test
dec
outsb
rcrb
fnstsw
aam
mov
ljmp
shll
test
add
enter
or
pop
push
ss
pusha
xchg
js
mov
inc
sub
adc
jmp
das
cwtl
sub
rcl
push
mov
push
arpl
fildll
aad
out
inc
out
sbb
loopne
or
cmp
and
js
stos
setl
sub
in
inc
pusha
andl
push
adc
jl
mov
testb
out
dec
mov
ljmp
iret
mov
jg
mov
outsl
sarb
imul
cmp
jg
dec
test
push
add
daa
enter
dec
adcl
pushf
fidivrl
fldt
xchg
les
sub
pop
jo
adc
pop
fs
addr16
clc
dec
outsl
addb
mov
xchg
add
rorb
cld
mov
imul
mov
arpl
orb
ljmp
ljmp
pop
jbe
lds
cmp
sbb
cmp
adcl
inc
sbb
out
out
mov
push
sbb
push
cmc
enter
mov
pop
cmpsb
aad
dec
lods
add
mov
lods
lods
or
test
sub
dec
aas
sbb
jb
adc
mull
int3
push
cmpsb
in
shl
push
in
loopne
xor
lds
sbb
into
jo
out
outsb
push
cli
das
in
or
scas
cmp
xchg
mov
fistl
lret
ror
sub
mov
clc
xor
aas
sub
pop
lret
and
inc
test
orl
fwait
pop
mov
xor
jmp
sbb
gs
add
nop
cmc
dec
and
push
xor
jbe
xchg
xchg
in
dec
cwtl
mov
inc
jns
in
pop
pusha
adc
cmp
fucomi
mov
pushf
ret
stc
repz
jne
sti
dec
loope
cmp
mov
mov
leave
clc
mov
pop
lods
lret
adc
pop
shlb
xor
inc
shl
mov
lret
cmpsl
push
mov
mov
rcrb
shlb
in
icebp
dec
in
mov
cmc
inc
dec
mov
popf
ror
imul
movsb
and
xchg
pop
jbe
out
out
rcll
lret
outsb
call
lcall
lret
sub
pop
sbb
sub
int
push
pop
pop
inc
adc
push
cwtl
jmp
imul
daa
out
mov
out
xchg
mov
test
fwait
pop
dec
mov
pop
shll
mov
addr16
xor
aad
not
leave
jb
xchg
push
cmp
jae
fstpl
fcompl
dec
cmc
mov
adc
into
cmp
sbb
in
clc
outsl
mov
aas
lods
xor
pop
mov
loopne
loop
or
pop
arpl
jae
dec
xlat
imul
adc
xchg
dec
or
adc
int
xor
add
mov
cld
insb
adc
xorb
sti
push
imul
mov
test
divl
or
jno
rcrl
and
mov
loope
pusha
push
bound
push
and
jle
push
lods
xorb
cmc
aad
push
sbb
adc
ja
pop
pop
fldcw
add
cmp
imul
sbb
dec
adc
mov
pop
adc
mov
jne
pop
mov
pop
jge
ljmp
hlt
push
imul
dec
pushf
dec
das
adc
inc
mov
xchg
mov
sub
push
pushf
cmp
dec
mov
sbb
inc
add
jmp
push
aaa
cmc
sbb
cmp
movsl
int3
data16
cmpsb
and
ds
ret
int3
es
push
lret
mov
out
and
aad
xor
ljmp
fstpt
add
out
stos
lds
or
add
lcall
cmp
pop
mov
cmp
loopne
repz
repnz
cmp
lret
arpl
cmp
fsub
cmpsl
dec
cltd
leave
js
pop
int3
aas
not
mov
filds
cmp
rcll
lret
jecxz
pop
mov
xchg
out
adc
mov
sub
insb
and
mov
mov
fisubs
lods
test
sub
cmp
lds
and
roll
clc
sub
pop
cs
mov
rcr
inc
test
mov
cmp
leave
movsb
jo
mov
cmp
and
or
cmp
mov
push
insb
pusha
fdivr
in
sub
iret
push
test
int
and
mov
rorb
mov
arpl
test
lods
adc
leave
cmp
nop
sahf
mov
rcrl
sub
xchg
sub
aam
pop
repz
int
scas
inc
xchg
xor
repnz
pop
ljmpw
fidivs
cmp
addr16
push
scas
sbb
jo
add
jp
push
add
test
xlat
pop
hlt
push
cmp
stos
test
hlt
inc
ds
jmp
xchg
hlt
xchg
adc
mov
push
sub
pop
mov
js
xchg
incb
sbb
mov
loopne
add
fistpll
xchg
mov
push
jge
fadds
pop
pop
dec
nop
mov
sub
aaa
das
xchg
outsb
jb
sbb
jnp
mov
inc
cmp
nop
jecxz
mov
sbb
xor
lods
mov
or
xchg
jp
sub
mov
mov
inc
jp
cwtl
mov
xor
aad
out
test
stos
mov
xor
enter
in
insb
lret
push
sbb
mov
or
dec
cmc
inc
insb
lret
in
jbe
outsl
or
shlb
or
push
inc
dec
and
xchg
add
cmpsb
jno
xchg
xlat
call
push
popf
adc
stos
sub
ljmp
cmp
inc
ret
pop
pop
sahf
lods
loop
mov
scas
lods
bound
pop
lret
imul
dec
mov
aad
rcrl
add
flds
pop
jo
sahf
add
sub
movsl
popa
or
mov
xor
testl
xlat
mov
or
sahf
dec
xchg
dec
lahf
pop
fnstsw
pop
push
jae
and
js
jl
jne
pop
jne
sbb
jo
insl
data16
hlt
jecxz
cmp
push
cld
fiaddl
fldcw
adc
mov
insl
xor
insl
nop
jnp
stos
outsl
xor
adc
sub
mov
test
pop
pop
and
adcb
test
and
subb
dec
mov
cld
mov
leave
imul
pop
jns
stos
hlt
popl
xchg
jb
lahf
les
fdivr
jnp
xor
in
cmp
cmp
push
out
negb
xchg
jl
into
insb
test
xchg
pop
mov
cmp
or
addl
out
cmp
dec
lret
push
mov
jg
mov
inc
cmp
loope
or
orl
sub
rclb
sub
jl
cli
icebp
and
jne
sbb
or
js
cmp
ljmp
rcr
mov
pop
xchg
out
jl
cmp
xchg
imul
pop
cld
stos
xchg
popf
xchg
cmovo
gs
mov
aas
cwtl
aaa
push
insl
ds
adc
shlb
sub
setg
mov
jecxz
lret
shll
sbb
push
sub
jle
fldl2e
fwait
nop
loopne
addr16
pushf
lahf
adc
add
push
mov
jae
and
dec
dec
push
mov
cmp
sbb
cs
jno
sbb
sbb
das
stc
ss
mov
repnz
outsb
mov
shll
lcall
inc
pushf
pushf
lds
movsl
dec
xchg
mov
adc
mov
nop
pop
dec
adc
xor
inc
cmp
jle
sub
vpsubb
hlt
xchg
fildl
mov
jnp
subb
cmc
and
loope
sbb
sbb
adc
inc
pop
xchg
mov
nop
cmp
sbb
inc
cmpl
sub
clc
cld
aam
repnz
icebp
mov
mov
sub
or
sub
fs
dec
xor
add
test
adc
nop
shlb
mov
fisubrl
test
and
lret
pop
mov
or
cmp
scas
ret
cmc
aaa
mov
push
pusha
pop
mov
es
sbb
add
cmp
lcall
mov
ss
adc
mov
adc
icebp
dec
xchg
xor
cltd
sub
push
divl
and
sub
jbe
js
repz
jnp
adc
xor
fildll
inc
stc
cmp
and
enter
push
cmc
js
aaa
push
icebp
repz
popf
fldcw
sarl
insl
aad
ljmp
push
dec
jle
pop
aam
or
out
popf
pop
fldl
sbb
cmpsl
outsl
fucomip
pop
xchg
scas
push
aam
movsl
or
lcall
cmp
pop
jo
sub
mov
xchg
pop
aas
cld
and
imul
add
gs
dec
and
lret
enter
iret
push
jmp
stc
xchg
or
mov
cmp
and
or
cltd
jge
jb
or
push
mov
movsl
pop
pop
mov
and
adc
jl
lds
cmpsb
mov
adc
dec
in
mov
pop
outsb
mov
mov
ficompl
cli
mov
xchg
arpl
test
repz
dec
mov
xchg
insl
cwtl
xor
insb
adc
inc
in
sbb
sti
lea
fcmovu
dec
in
sbb
or
add
mov
es
iret
mov
aam
lock
cmp
cmpsb
push
daa
jae,pt
loopne
adc
xchg
cmc
pop
sbb
lret
dec
mov
cmpsl
loopne
jno
sub
mov
mov
pushl
outsl
shlb
fidivs
xchg
loop
out
xchg
jo
std
jmp
mulb
sahf
mov
xchg
dec
int
lcall
outsl
fdivrl
nop
out
rol
mov
orl
mov
es
fs
ret
ljmp
sarb
imul
out
xchg
pop
mov
icebp
bound
push
jnp
jbe
inc
pop
lahf
inc
jno
mov
adc
enter
push
push
les
jae
mov
fs
add
outsb
fcompl
cmp
push
rcrl
xchg
iret
into
aam
test
jl
fmulp
mov
aas
aad
and
rol
iret
and
xor
push
data16
push
mov
ljmp
subb
mov
pop
add
push
mov
pop
aaa
rcrb
jo
lea
and
or
push
fsts
and
xchg
pop
inc
popf
gs
mulb
pop
pop
jae
es
xchg
xchg
push
mov
mull
push
inc
cmp
shlb
cli
push
orb
pop
das
jl
rorl
mov
out
adc
data16
push
jne
xchg
int
cmp
in
inc
mov
int
sti
xchg
push
fwait
adc
mov
mov
push
xchg
xor
add
mov
mov
push
lcall
jo
xchg
push
mov
iret
sub
repz
pop
into
lcall
shrb
sub
cmpsb
xor
loop
and
adc
push
push
mov
sbb
aaa
lahf
int
clc
mov
cmc
or
xor
in
jmp
ret
fstp
pop
in
sbb
repz
repnz
jmp
adc
jg
push
stc
or
mov
inc
in
jbe
dec
inc
mov
dec
ja
xchg
xchg
lret
ja
cltd
sub
and
and
cltd
add
cmp
sbb
nop
jns
lcall
insl
jb
push
ss
inc
mov
cwtl
cmp
push
imul
mov
pop
cmp
aam
test
imul
push
inc
iret
mov
cmp
mov
dec
pushf
or
and
xor
icebp
add
xor
leave
lcall
pushf
incb
dec
xchg
clc
jle
minps
cs
sub
popf
jns
testl
fidivl
addr16
fistpll
data16
push
cs
inc
cwtl
xor
aad
and
add
dec
in
push
stos
mov
cs
dec
cs
pop
stc
pop
inc
lcall
decl
cmpps
fisubs
adc
add
testl
inc
hlt
pop
cld
movsl
add
jg
jo
xchg
ja
cld
and
sbb
jmp
inc
xchg
jb
hlt
push
orl
stos
mov
and
scas
push
stos
mov
sub
xchg
mov
in
sbb
cmp
pop
sarb
cli
mov
int3
mov
fistl
mov
stos
inc
cmpb
ficompl
jp
push
and
aaa
jmp
cmc
fdivrs
push
imul
mov
into
or
adc
test
and
jnp
and
in
orb
std
mov
fsubrl
xchg
das
push
je
in
adc
mov
push
pop
ljmp
add
sub
in
aad
pusha
cld
ret
push
mov
or
cli
push
sbb
out
xor
arpl
xor
push
ljmp
dec
cmp
fldt
lret
rcrl
mov
lcall
inc
test
adc
pop
mov
scas
test
mov
jo
in
dec
cli
outsl
xchg
sbb
mov
aaa
fldcw
jbe
mov
xor
cmp
filds
daa
cmpsw
iret
fisttps
sahf
mov
pop
cmp
fistl
jmp
xor
stc
imul
out
lret
pop
and
dec
rcrl
imul
int
sbb
xor
inc
add
lea
push
hlt
fstps
mov
pop
sub
xchg
and
sub
or
sbb
mov
int3
sbb
push
test
dec
aad
loope
insb
dec
cli
adc
add
mov
cs
mov
and
sub
imul
fmuls
xor
je
rcrb
in
test
mov
mov
stos
pop
fistps
xchg
clc
out
or
jmp
das
stos
out
push
mov
dec
sbb
xchg
aad
push
sub
push
mov
out
enter
ret
hlt
fisttpl
test
ds
cwtl
sbb
push
test
shl
add
dec
pop
sub
and
fnstcw
mul
test
pop
mov
int
std
dec
repz
jno
cltd
sti
pop
dec
imul
lcall
int3
out
and
and
and
mov
ror
add
sbb
scas
xor
roll
cmp
xlat
dec
aaa
lret
icebp
xchg
repz
movl
and
xchg
cli
roll
jmp
ja
imul
xor
adcl
adc
jmp
nop
pop
lret
jle
xchg
push
or
mov
int
pop
push
ret
clc
mov
mov
fcmovnu
repz
push
xchg
into
mov
xchg
and
or
jbe
icebp
adc
push
aam
push
sub
movsb
fsub
outsl
jmp
or
xchg
sbb
lds
push
aam
aad
cmpsb
pop
addr16
out
and
xchg
mov
lods
mov
repnz
mov
setl
push
jecxz
adc
mov
adc
popa
mov
test
push
xchg
jno
testb
mov
lcall
xchg
xlat
stc
arpl
gs
hlt
xorb
pop
fst
cmp
subl
push
push
sub
lock
addr16
push
jp
icebp
aaa
clc
mov
cld
inc
xor
cmpsb
jno
repnz
bound
incl
xchg
rol
jle
mov
mov
andl
lcall
arpl
imul
daa
jbe
jns
rcr
aaa
inc
std
inc
repz
aas
mov
or
shll
push
sbb
ret
into
imul
sarb
fs
inc
fwait
pop
cmp
in
xchg
xchg
outsl
inc
sbb
stos
mov
mov
adc
ret
pop
sbb
divb
mull
adc
mov
imul
loop
out
out
add
repz
mov
into
sbb
mov
movsb
shll
jae
ja
adc
outsb
cmp
aaa
push
push
int
push
fcmovnu
mov
aam
push
xor
ljmp
fbstp
ds
scas
in
sbb
mov
mov
in
lea
sub
fidivs
sbb
mov
movsl
arpl
push
lret
pop
popa
ret
lock
jbe
inc
jns
inc
addr16
mov
mov
cmpsb
out
aam
sbb
add
add
loopne
out
sbb
mov
jmp
test
cltd
mov
rcll
movb
ret
test
pop
mov
pushf
mov
aas
xchg
jb
jmp
push
fistps
and
sbb
inc
cmp
xchg
jb
imul
lahf
add
inc
push
or
mov
insl
mov
lcall
inc
cwtl
xor
pop
mov
mov
addr16
leave
hlt
mov
sti
adc
push
nop
cmp
popa
or
mov
in
jo
jbe
add
jge
pop
fstps
and
xor
cwtl
aam
cmp
jmp
mov
pop
mov
sub
cld
sub
fsubs
pop
ret
mov
test
pop
std
mov
jb
inc
aas
add
inc
jae
das
xchg
cmpsl
xchg
push
push
jecxz
iret
imul
ja
imull
les
inc
sbb
and
ja
out
sub
test
mov
loope
sbb
cmp
xchg
xchg
pop
dec
lea
pop
stos
push
scas
lret
add
