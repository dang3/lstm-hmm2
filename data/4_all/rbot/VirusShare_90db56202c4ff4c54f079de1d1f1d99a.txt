popa
adc
add
pop
add
adc
add
add
add
adc
add
add
adc
add
adc
add
add
addb
add
mov
pop
add
adc
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
je
arpl
add
jb
jne
insb
inc
jb
add
xor
xor
fs
insb
add
add
es
mov
add
mov
mov
add
loop
push
push
loopne
dec
mov
pop
insl
fisubrs
rcrb
and
bnd
jns
sarl
sub
cmp
push
and
test
addr16
repz
or
jge
cs
xlat
fdivl
movsl
aam
jb
mov
adc
sti
adc
sub
mov
cld
add
add
testb
pop
push
adc
push
stc
jnp
fnstsw
ret
lret
fwait
icebp
cmp
sbb
jbe
jns
inc
cmc
fstps
lahf
pop
sbb
fbstp
mov
sbb
xor
xor
gs
hlt
mov
and
or
fdivs
out
nop
push
jbe
cmp
sub
jb
sub
or
icebp
fwait
fwait
loope
mov
inc
and
pop
loop
jne
mov
cli
push
pop
aad
add
add
add
es
pop
sahf
cltd
mov
and
ss
fcmovnu
ds
push
xor
lret
pop
loop
push
jecxz
int3
xor
mov
movsl
dec
adc
xchg
das
lret
push
sbb
and
bound
dec
mov
mov
xchg
dec
mov
mov
lret
pop
rorl
mov
push
xchg
or
inc
popa
loopne
push
add
mov
mov
pop
adc
jne
cld
cltd
in
aad
mov
sub
addr16
mov
xor
xchg
sub
aas
dec
xchg
je
shr
dec
arpl
pop
lds
pop
in
scas
and
cmp
inc
mov
mov
dec
jnp
mov
xor
pop
dec
in
fwait
std
test
adc
xchg
pop
or
or
aaa
nop
sub
pusha
loopne
insl
lock
rcr
jmp
call
arpl
pushf
shl
xchg
push
or
cmp
cmp
dec
pop
push
mov
ss
pop
out
cmp
cld
cmp
repz
movb
and
xchg
xchg
mov
shlb
cld
mov
xrelease
xchg
movsb
loope
xor
pop
add
repnz
jns
aam
lea
lret
push
add
sbb
cli
test
rorb
push
jg
add
xor
loopne
pop
jecxz
and
rcrl
fs
jo
xor
adc
push
sbb
xchg
push
ds
paddb
cltd
adc
jle
xchg
mov
cltd
dec
insb
stc
cmpsb
mov
arpl
dec
or
imul
test
push
jge
add
stos
insl
aas
leave
push
lea
mov
es
inc
adc
call
xor
gs
in
fbstp
loope
cmpsl
or
mov
imul
pop
cmpsl
into
adc
xchg
sub
sarl
jo
mov
ret
in
int3
ret
xor
xchg
repz
stos
xchg
loopne
inc
out
jg
lock
pusha
inc
les
jg
insl
loopne
in
lcall
jecxz
cmp
cli
or
cwtl
mov
pop
loopne
mov
xor
ret
pop
repnz
xlat
ja
lods
push
dec
push
push
or
cmp
fld
testb
repnz
add
sbbb
mov
jp
sub
push
pop
imulb
into
icebp
ror
and
divl
pop
jb
test
cmp
out
adc
repz
test
push
add
adc
fsubl
adc
nop
in
jg
mov
fistps
dec
leave
push
lods
jmp
les
jmp
xchg
es
add
icebp
xchg
push
cmp
fstpt
ficompl
pop
or
dec
lock
orl
cmpsb
push
push
mov
lret
push
cmpsb
cmp
in
cld
inc
sub
dec
mov
add
cmp
fildll
mov
adc
das
jp
std
orb
xor
movsl
push
mov
sbb
pop
daa
add
loope
mov
jle
ret
pop
aam
jnp
ss
in
push
push
in
pop
repz
ret
jmp
mov
adc
and
sbb
lea
mov
rcrl
xlat
pop
gs
push
movsl
cli
scas
mov
push
jns
push
push
cli
xor
fs
lods
std
dec
and
xlat
in
xchg
cmp
idivl
jp
xchg
push
int
adc
daa
mov
shl
outsb
lock
pop
dec
movl
int3
popf
not
cmpsl
enter
stos
stc
sub
jae
add
inc
push
jle
jmp
push
ret
pop
sbb
jo
xchg
loopne
xor
test
push
mov
mov
pop
sbb
sub
jle
jmp
out
mov
shrl
das
insb
pop
lods
into
xchg
out
mov
xchg
sub
and
mov
pop
push
push
scas
pop
push
lcall
icebp
xorb
jbe
das
jecxz
jmp
sub
in
popf
stos
lcall
into
in
addb
testl
add
out
dec
fbld
inc
sub
sbb
sbb
sub
daa
inc
dec
jg
into
outsb
push
push
call
subl
sbb
cld
aas
xor
shlb
shr
sub
pand
pop
or
enter
push
push
dec
xor
inc
sub
xor
aad
sbb
in
nop
into
arpl
or
pushf
jecxz
test
lret
cmp
fildll
jns
pop
and
xor
mov
filds
aam
enter
jne
inc
xchg
push
pop
popa
test
fwait
scas
inc
nop
scas
negl
xlat
fisubrl
test
sbbl
sbb
cmp
cmp
arpl
xchg
jbe
mov
out
and
outsl
xor
xlat
and
dec
mov
mov
out
jne
sbb
adc
movsb
sbb
ror
sahf
mov
jns
xchg
xchg
add
inc
jecxz
insl
inc
lds
dec
mov
dec
xchg
mov
pop
xchg
shl
xchg
gs
stos
pushf
push
dec
cmc
out
stc
jg
mov
sbb
dec
cli
test
mov
es
roll
adc
filds
pushf
jno
inc
fs
cmc
nop
inc
sub
dec
xchg
lods
inc
mov
inc
jae
je
icebp
sbb
dec
stc
lock
dec
js
add
call
ficoms
pop
xchg
cld
and
mov
bnd
das
mov
ja
add
xor
dec
push
scas
mov
test
jae
add
sbb
and
jge
movb
stos
and
inc
ja
orb
inc
fadd
xor
pop
jl
push
jne
push
stc
ljmp
xchg
pop
ficomps
xchg
pop
sbb
stos
mov
aam
insb
ret
pop
insl
jne
shl
inc
daa
inc
fsubrl
mov
xor
inc
jecxz
testb
fisttps
sahf
inc
adc
fcoml
mov
push
aas
xchg
ret
popf
arpl
jne
push
xor
js
or
dec
or
or
add
rorl
lret
mov
adc
movsb
xor
adc
fiaddl
cmp
arpl
scas
mov
movsb
mov
jg
enter
cmp
cmpsb
int3
lds
ret
xchg
insl
aaa
lret
cmp
sti
xor
je
mov
scas
outsb
push
je
jnp
loope,pt
adc
mov
push
sbbb
aas
xchg
mov
xor
mov
daa
cld
subl
and
test
inc
inc
inc
mov
push
sarl
jb
push
mov
das
fmulp
mov
pop
adc
clc
inc
loopne
enter
sub
mov
and
addr16
inc
loop
in
push
inc
mov
xchg
mov
dec
pop
pop
scas
shlb
adc
xchg
idivb
sahf
loopne
loopne
push
into
std
inc
sbb
mov
inc
std
outsl
push
pop
aaa
in
sub
ret
or
pop
sbb
cld
fildll
out
popf
faddl
mov
jns
aad
mov
inc
xor
rol
lods
out
pop
outsb
aam
daa
cmp
and
push
leave
xor
bound
inc
mov
popf
stos
cmp
shlb
insl
outsl
fldl
mov
jo
std
xor
into
insl
jno
jb
jb
ret
es
xchg
jb
popa
mov
inc
sub
shr
popf
dec
push
clc
pop
outsb
out
out
ja
hlt
pop
movsb
or
inc
paddusb
scas
stos
iret
xchg
add
adc
lods
or
mov
pop
inc
in
movsl
mov
or
je
popl
ficoms
js,pn
ljmp
popa
pushf
sbb
scas
call
sbb
lcall
sbb
call
insb
daa
add
in
cmp
das
push
jle
sbb
je
shrl
jmp
pusha
add
sahf
cmp
or
in
and
pop
jnp
sahf
mov
js
aaa
fmuls
iret
js
in
or
mov
mov
jl
std
sbb
add
sti
cmp
xchg
mov
leave
sbb
cli
jb
add
mov
insb
cld
into
cmpsl
pushf
popf
xchg
repz
add
dec
insb
sbb
mov
mov
insb
cmp
jmp
decl
scas
incb
cltd
pop
mov
movsb
jp
rorl
adc
addl
dec
cmp
insb
lock
sbb
lret
cmc
ret
sbb
orb
es
push
jg
xchg
cmpsb
push
cli
sub
pusha
and
dec
jne
adc
sahf
test
lret
mov
lods
mov
movsl
jnp
in
pop
ljmp
and
inc
jmp
xor
rorb
sub
mov
xchg
ja
mov
pop
mov
outsb
pop
nop
pop
fsub
out
shlb
aad
push
and
sub
sub
jge
add
ljmp
adc
pop
cmp
mov
popa
mov
cmpl
and
jno
sub
rorl
and
ja
pop
sub
cmc
dec
sti
lcall
mov
int3
sub
ss
aad
jnp
ja
cld
add
sbb
mov
lret
sbb
popa
movsl
add
jns
and
sarb
insb
inc
jmp
mov
or
mov
lods
stc
out
dec
dec
mov
les
mov
bound
sub
in
dec
pushf
xchg
sti
cmp
mov
sub
sbb
mov
daa
lods
adc
nop
int
jnp
popf
inc
test
pop
mov
push
call
mov
jnp
push
lds
mov
mov
push
int
ret
sbb
mov
int3
icebp
addl
fnsave
ja
leave
push
fsts
pop
imul
mov
mov
mul
xchg
in
sarb
sbb
test
insb
push
cmp
jns
push
mov
mov
inc
daa
mov
out
cmp
in
test
ds
push
mov
mov
add
pop
sub
mov
shrb
and
dec
lock
jg
cmp
inc
and
adc
sbb
sub
icebp
mov
jecxz
stc
pop
sahf
mov
daa
mov
sti
iret
or
cmpsl
aad
ret
sahf
jge
push
es
pop
sbb
xchg
out
imul
test
adc
fistpll
insb
sub
sbb
pop
dec
push
pop
mov
negb
sub
push
xchg
leave
sbb
ja
cli
icebp
shlb
test
pop
xchg
mov
es
xor
pop
dec
xor
xchg
std
xchg
xor
dec
push
insb
push
push
call
xlat
dec
pop
mov
pop
gs
rorl
pop
mov
cltd
aas
ja
mov
ljmp
cmp
and
jbe
inc
icebp
jnp
mov
mov
cltd
dec
mov
fs
fsincos
js
mov
repnz
cld
push
xor
filds
sub
les
add
sub
mov
leave
pop
lock
pop
xchg
dec
xor
xor
out
dec
pop
xorb
pusha
in
add
mov
cli
in
dec
jp
add
pushl
aaa
je
sbb
rolb
xor
lock
popf
fildl
out
push
out
jne
cmpsb
jno
xor
rorl
and
test
cmp
cmp
adcl
lds
adc
jmp
xchg
or
and
mov
addl
fidivl
jl
mov
jns
push
sbb
push
repnz
testl
cmp
aam
push
shll
lds
insl
pop
dec
pushf
push
shlb
int3
scas
mov
add
cmp
test
addr16
shrl
lods
add
movsb
push
iret
dec
push
sub
into
aaa
pop
dec
pop
insb
nop
adc
jle
mov
cmp
adc
mov
loopne
leave
xchg
jge
add
pop
pusha
mov
nop
fldenv
adc
mov
pusha
dec
pushf
jecxz
addr16
jp
jno
lods
mov
inc
sbb
outsl
lahf
in
xchg
das
jne
fistl
jno
inc
loope
jo
sbb
adc
addr16
push
push
jl
jg
xchg
mov
lods
leave
xchg
mov
push
ja
neg
push
mov
mov
lcall
sub
addb
or
cmp
adc
andl
aam
arpl
jnp
add
ret
pop
push
js
adc
xchg
xchg
pop
and
xor
sti
ret
adc
nopl
mov
push
mov
lahf
pusha
mov
push
daa
ss
or
cmp
dec
aaa
mov
divb
stos
or
popa
add
mov
sti
lcall
sahf
and
sub
dec
jbe
dec
adc
cmpsl
xor
mov
push
mov
fidivs
call
stc
jp
mov
mov
or
in
call
push
shrb
clc
daa
pop
cmpb
push
adc
xor
inc
xorl
sub
shrl
push
fucomp
inc
sub
or
lea
jmp
out
mov
sbb
mov
test
push
jge
cmpsl
test
push
rcrb
mov
push
lret
sbb
and
pusha
mov
out
in
addl
popa
fldcw
movsb
out
inc
mov
stos
dec
imul
adc
mov
into
pop
dec
cltd
cli
in
dec
or
stc
jl
loop
mov
incl
xor
mulb
push
mov
arpl
pop
out
ret
icebp
xor
dec
in
adc
xchg
lret
sub
aaa
cmp
ljmp
lret
jp
dec
in
adc
or
sahf
aam
popf
rcr
pusha
fucom
sti
mov
cli
stc
cmp
cltd
ds
jle
jg
stc
xor
or
or
xchg
push
je
inc
pop
xor
iret
iret
stc
lret
jne
push
cltd
rolb
and
mov
sub
mov
sbb
sahf
out
lret
jl
sarb
sbb
mov
sar
scas
out
sub
add
jmp
or
sub
dec
add
add
add
adc
lock
adc
sarb
roll
mov
sub
pushf
paddsw
mov
test
jae
ss
xchg
loop
fisubrl
mov
iret
jnp
mov
xorb
flds
dec
xchg
xor
sti
xor
test
mov
cmpsb
push
in
fs
dec
adc
dec
leave
enter
les
xor
pop
popf
xor
dec
fnsave
or
fistpl
cmpsb
notl
movsb
sub
fsubl
jmp
mov
out
push
lahf
loopne
and
dec
jb
mov
pop
mov
into
repz
aad
aad
dec
popa
lock
out
mov
ds
in
mov
fists
popa
imul
mov
and
jmp
push
sub
push
mov
flds
xchg
and
mov
pop
outsb
mov
mov
inc
aaa
mull
in
cmp
add
xchg
or
lea
stc
add
jp
pop
test
inc
jne
xchg
pop
cld
inc
push
mov
shl
add
add
push
lods
mov
or
dec
inc
or
add
or
jle
mov
inc
jae
xor
outsl
and
xor
inc
pop
iret
mov
push
ret
xor
pusha
inc
lret
iret
shl
test
jno
clc
xor
add
cmp
ja
aam
js
pop
ljmp
outsb
pop
or
std
cmpsb
mov
lock
cmc
add
pop
pop
or
test
xor
xchg
pop
stos
sti
sub
mov
adc
add
fildl
mov
popl
jnp
sub
stos
jb
pop
jo
clc
jcxz
test
jl
fwait
jp
xchg
add
outsl
js
add
insb
push
or
or
dec
ljmp
jns
gs
push
lcall
dec
add
or
in
pushfw
sub
bound
push
or
negl
cmp
mov
dec
push
adc
ret
daa
adc
add
jbe
nop
stos
jmp
add
jl
lods
jmpw
sub
shlb
js
mov
ficoml
lret
shll
and
out
sub
dec
inc
add
jno
pop
xchg
jne
int3
insl
sbb
sub
movsl
xchg
dec
lcall
int3
jne
dec
cli
adc
and
adc
jle
mov
adc
hlt
jne
xchg
lahf
mov
dec
add
hlt
sahf
push
dec
les
inc
fdiv
and
outsl
pop
imul
sbb
call
icebp
mov
jne
addr16
stos
lcall
adc
notb
movsl
dec
int3
out
dec
dec
xor
sti
in
mov
sahf
imul
sahf
add
mov
sbb
daa
push
lods
xchg
mov
rorl
and
test
inc
and
inc
dec
dec
mov
dec
in
jae
enter
pop
jmp
adc
and
mov
mov
cmc
mov
jno
stos
xchg
xchg
mov
rorb
cmp
cmp
mov
leave
and
mov
stos
mov
ljmp
cmpsb
push
je
or
fidivs
jecxz
das
dec
test
pop
dec
mov
push
in
lahf
or
out
test
mov
mov
add
xchg
or
or
jecxz
sbb
jmp
fmul
push
inc
lds
mov
test
cmp
pop
pop
shl
mov
hlt
subl
int3
lcall
into
in
mov
cmc
inc
jg
dec
adc
or
sbb
rcr
test
ljmp
xchg
xchg
lahf
push
cli
std
sub
mov
cmp
jnp
jl
push
xor
nop
xchg
fisttpll
xchg
cltd
adc
jmp
push
pop
dec
sbb
repnz
test
jmp
jne
mov
cmp
pop
mov
adc
fs
ret
outsb
mov
mov
mov
pop
inc
inc
popa
aad
nop
into
loop,pt
lret
jecxz
les
adcb
dec
jl
inc
enter
cli
test
adc
and
fstpl
ljmp
xchg
or
and
push
arpl
mov
jmp
mov
xchg
inc
push
jg
xor
dec
mov
mov
add
loope
gs
lcall
scas
xor
clc
les
sub
xchg
popa
or
mov
enter
sti
xchg
pop
push
test
add
shrb
push
cmpsl
xor
fisttpll
or
sub
shrb
or
sbb
es
cld
mov
and
cmp
push
cmp
loope
and
sub
sub
mov
cmp
in
icebp
pop
jmp
movsb
enter
pop
adc
xor
inc
in
cmp
jmp
mov
cmp
inc
pop
push
dec
bound
xchg
pop
clc
mov
incl
dec
stos
int3
dec
int3
enter
mov
adc
pushf
jo
test
mov
push
mov
lods
jnp
js
int3
icebp
sbb
xchg
xor
sub
in
sahf
fsubrs
pop
pop
adc
lock
nop
mov
bound
mov
cmpsl
sbb
cmp
xchg
test
push
rcr
ret
mov
cmp
jnp
sub
dec
ret
sub
popa
xlat
insl
sbbl
jmp
call
adc
pop
lahf
push
out
out
out
repnz
jmp
push
addr16
inc
sub
and
push
inc
iret
js
sub
or
adc
mov
xchg
call
inc
mov
push
jb
daa
jle
push
jle
imul
push
mov
xchg
mov
sbb
or
or
aad
je
addr16
or
mov
lods
stc
jnp
mov
call
or
inc
call
pop
pop
aam
sub
mov
loopne
mov
adc
pop
xchg
mov
incl
repz
outsb
fs
and
cmp
push
ds
jb
sub
jp
fadd
into
out
add
divl
and
out
test
fisttps
fxch
in
jno
das
dec
gs
dec
sub
lret
xor
movsb
push
or
jmp
or
add
in
push
test
mov
ffree
mov
cmpb
ret
movsb
dec
fs
fstl
scas
in
test
push
in
add
pop
xchg
sub
stos
cmpl
loopne
js
pop
jg
mov
bound
add
out
add
es
push
cmp
sbb
movb
insb
mov
xchg
in
cs
pop
push
xchg
xor
mov
push
adc
cmp
or
dec
mov
int3
ja
xor
test
xchg
es
insl
mov
or
jge
imul
outsb
pop
pop
mov
mov
mov
cs
insl
lret
xchg
pop
cmp
pushf
mov
pop
fwait
outsw
repnz
out
pushf
and
outsl
jge
fsts
lret
mov
mov
pop
inc
stos
aaa
in
xchg
add
es
stc
cs
push
subl
enter
int
out
adc
sbb
inc
pop
or
adc
out
sarb
call
bound
dec
ret
scas
add
inc
dec
add
lret
adc
lods
mov
mov
nop
mov
sub
sbb
gs
sahf
ljmp
adcl
adc
cmpsb
es
hlt
pop
shll
in
es
mov
inc
inc
adc
and
jno
dec
shrb
xchg
jnp
mov
mov
or
cmp
and
dec
in
push
jo
jb
jno
cmpl
leave
dec
xor
mov
ficoml
in
out
jl
adc
jecxz
jge
lds
push
xor
testb
sub
mov
adc
mov
jnp
stos
jnp
adc
or
into
inc
sub
lret
jmp
gs
mov
jge
sub
loop
push
pushf
jb
fisubrs
aaa
inc
out
js
dec
cmp
clc
sahf
in
adc
cmpsb
outsl
jmp
scas
or
push
test
test
fisttpl
sbb
out
mov
inc
xchg
cmp
jp
add
decb
adc
gs
sarl
push
xchg
jg
and
mov
push
push
inc
and
cwtl
mov
jecxz
enter
test
in
cmp
jno
shll
mov
mov
movsl
mov
and
fdivl
xchg
pop
ffree
negl
xchg
arpl
pop
and
sbb
and
sbb
add
lcall
mov
fbld
movsl
xchg
in
dec
call
imul
sub
sub
mov
je
jnp
inc
emms
loop
out
lods
lret
lcall
std
mov
fldcw
xchg
sbb
cmc
cs
pop
pop
movsb
mull
ja
mov
cmpb
xor
xchg
jne
test
xchg
je
mov
mov
mov
mov
fwait
movsb
lea
outsl
sbb
test
pop
movsl
in
out
sbb
andl
dec
mov
add
insb
inc
ss
int3
cmp
jae
jmp
std
push
aaa
and
jb
mov
xor
fs
out
jns
mov
dec
dec
mov
add
loop
inc
xor
xor
testb
int
imul
clc
xchg
and
cmp
movsb
xchg
cmp
cs
punpckhdq
sbb
rorb
jns
cli
pop
arpl
mov
sub
ljmp
pop
inc
rorl
data16
or
cmpl
std
imul
clc
iret
adc
sub
pop
push
cmc
xorl
out
cmp
inc
int
outsl
push
cmp
inc
xchg
std
push
push
cs
rorl
gs
iret
mov
sarl
mov
mov
push
fisttps
stos
jl
jb
and
push
repnz
pop
inc
add
insl
push
sub
adc
dec
fnstcw
mov
imull
cli
in
ds
pop
test
inc
inc
fsubr
xchg
out
test
jnp
dec
mov
mov
dec
cmp
jle
mov
jecxz
inc
jne
pop
aam
mov
loope
pop
lea
mov
xchg
mov
shll
pop
or
insb
pop
lcall
jne
loopne
sub
mov
insl
pusha
xor
jmp
movsb
xlat
cmp
adc
sub
and
cmp
mov
call
mov
push
dec
and
mov
loopne
push
xor
cltd
loope
mov
jb
lock
test
out
adc
out
or
daa
pop
ja
xor
pop
negb
adc
lahf
jb
aad
add
sbb
mov
cmpsb
xchg
pop
int3
pop
rcl
add
es
mov
inc
mov
xchg
sub
adcb
push
loop
push
sub
inc
repnz
push
je
movsb
addr16
es
ret
sti
subl
mov
mov
ret
mov
lock
loope
repz
dec
mov
lea
pop
xor
fcmovnb
and
arpl
sbbl
test
and
adc
arpl
pop
and
call
mov
sti
outsl
fwait
and
loopne
scas
enter
lock
pusha
xchg
or
or
sahf
or
xchg
fsubrs
dec
and
rorl
cmp
rcll
lahf
stos
cltd
sti
mov
mov
push
arpl
jg
testl
xchg
popl
add
push
inc
xor
aam
lret
testb
fwait
xchg
or
and
lods
or
mov
cli
stos
dec
les
std
out
fldcw
mov
ret
std
push
push
add
mov
mov
lea
sbb
cmpsl
add
jae
les
out
xor
jecxz
and
mov
push
and
mov
lods
shrb
xor
aad
mov
xorl
aam
push
insb
jo
enter
ljmp
sbb
mov
inc
sub
lock
pop
fisttps
xlat
sbb
add
test
or
xor
mov
push
fisttps
call
fstpl
lcall
xor
subl
xor
jl
sti
xchg
pusha
clc
jnp
adc
in
out
dec
xor
iret
pushf
sub
xor
jne
imulb
add
fwait
push
inc
mov
imul
dec
or
push
shlb
insl
std
int3
cmp
push
mov
lahf
lea
in
test
mov
dec
das
cmpsl
pop
rcl
sti
pop
adc
mov
jg
mov
push
adc
mov
lea
les
loope
adc
scas
sarl
cmp
pop
mov
adc
dec
cmpsb
insl
xlat
fsubrl
hlt
outsb
leave
jae
sbb
xchg
mov
lock
jl
mov
xchg
or
je
ljmp
bound
rolb
sbb
push
pop
movsb
xlat
lods
push
js
popa
jp
xchg
aas
xorb
popf
push
or
xchg
and
push
call
xchg
data16
in
in
jns
stos
sub
mov
in
sahf
out
xchg
repnz
aaa
push
das
push
enter
test
xor
cmpsb
outsl
bound
add
pop
push
enter
cmp
dec
ljmp
negb
xchg
mov
fwait
ss
jecxz
jge
mov
lret
push
sub
add
push
sub
add
sub
jnp
test
scas
sbb
mov
xor
xchg
mov
jae
add
je
adc
popa
mov
out
xchg
mov
mov
outsl
push
mov
or
push
pop
rcrw
in
or
clc
sub
mov
adc
sub
xlat
push
add
jbe
inc
cmpsl
iret
mov
sbb
subl
clc
cmp
loop
lret
xor
push
sbb
add
mov
aas
jb
jnp
cmp
cltd
cltd
div
mov
leave
jle
pop
stc
outsl
adc
in
mov
movsl
jmp
inc
packssdw
push
cmc
and
and
pop
xor
push
aas
mov
jno
and
mov
jecxz
xor
fsubl
ret
cmp
gs
jge
sub
test
jns
cmpsl
jmp
lret
dec
jge
ljmp
sub
cwtl
adc
or
sahf
jnp
cmp
push
cmp
sbb
loopne
js
xchg
and
xchg
or
lock
sbb
icebp
mov
lcall
add
mov
mov
sbb
push
mov
jge
rorb
push
insb
filds
fidivl
cs
stos
in
mov
mov
dec
shlb
mov
inc
cmpsl
dec
mov
test
dec
jecxz
pop
out
clc
jbe
shl
adc
loop,pn
aaa
popf
in
adc
sarb
mov
or
js
push
pop
mov
out
call
xchg
mulb
or
js
sub
mov
sub
in
lahf
int
fidivrs
adc
das
aam
push
sbb
fisttps
xchg
sub
std
daa
mov
or
inc
movsb
hlt
mov
subb
bnd
or
rclb
adc
in
jge
fisttpll
lea
lods
insl
xor
jmp
or
jl
mov
leave
cmpl
loopne
mov
xchg
cmc
ljmp
cs
mov
and
ror
lods
push
lcall
iret
add
int3
mov
lods
ficompl
mov
xorl
jb
test
sub
pop
cmp
push
jnp
loopne
mov
and
jmp
shrb
adc
stos
lret
jae
push
push
adc
jns
pop
scas
jmp
bound
out
or
nop
cmp
jns
push
or
inc
add
fisttpll
scas
test
adc
fisubrs
xor
cwtl
shrl
sub
push
pop
lods
mov
mov
xchg
test
aas
cmp
and
sub
scas
inc
loope
in
idiv
lret
mov
jecxz
push
addr16
sbb
jge
cmp
repz
push
out
les
xchg
inc
pop
pop
lret
inc
gs
inc
inc
pop
push
ficoms
push
xor
or
stos
sbb
cmp
fisubrs
pop
adc
imul
pop
pop
adc
mov
sub
into
adc
mov
xchg
test
loopne
pop
cltd
stc
fcom
mov
mov
push
aas
push
jno
sbb
inc
add
push
fdivl
cmp
pop
mov
xor
stos
xchg
stos
add
cli
fisttpl
mov
jbe
xchg
dec
aad
jo
fisubs
shr
pop
pop
pop
lds
mov
xor
mov
test
insl
lods
dec
cmpsl
scas
rcrl
insb
pop
or
in
cmc
adcb
mov
mov
mov
push
mov
test
rolb
push
lds
dec
and
arpl
mov
je
and
jmp
sbb
ja
mov
xchg
push
dec
and
inc
pop
aaa
in
or
mov
jle
clc
pop
adc
xlat
stos
dec
xor
addb
repz
xchg
filds
xchg
push
lcall
push
push
lret
repz
test
cmp
jl
jle
pushf
adc
int3
sub
jb
add
mov
fwait
stos
cmp
sar
and
xchg
add
lret
xorl
iret
inc
jo
lret
testb
mov
test
xchg
cmp
adc
jge
stc
mov
subl
scas
xchg
fcoms
or
mov
int3
decl
ss
jge
sti
cmp
mov
das
xchg
pop
popf
cmc
leave
lods
rclb
mov
jo
in
scas
faddp
xchg
inc
in
test
cld
pushf
jb
lret
mov
aad
jo
sahf
sbb
dec
sub
and
nop
pop
push
xchg
shrl
rorl
cmp
push
sti
test
or
xor
scas
lds
push
dec
mov
int
stc
xchg
adc
and
outsb
jo
insl
imul
and
mov
and
outsb
subb
push
pop
jecxz
sbb
test
std
imul
lea
pop
inc
sti
inc
lret
push
insb
mov
aas
lods
ljmp
popf
add
mov
in
adc
mov
adc
pop
mov
les
popa
lds
imul
popa
movsb
push
aas
or
lock
movsl
enter
push
pop
add
adc
cmp
pop
bound
fimull
add
push
sbb
out
loop
inc
aam
and
ja
xor
outsb
int
leave
add
sub
dec
fcmovne
and
pop
std
sub
insl
inc
and
sarb
pop
dec
icebp
iret
jne
int3
js
repnz
mov
ljmp
mov
and
cs
fimull
stos
sti
mov
lcall
pop
or
test
pop
sarb
and
jns
mov
icebp
adc
dec
push
cltd
pop
fs
sbb
or
sbb
mov
inc
lods
rorb
push
dec
lock
mov
loope
sub
test
dec
call
push
mov
cmp
jo
test
scas
aam
cli
movsb
mov
jecxz
pop
inc
stos
mov
imul
ljmp
inc
jbe
sub
xor
mov
leave
arpl
fstl
xor
les
or
push
adc
mov
test
arpl
jle
mov
mov
test
inc
bound
out
sarb
fdivp
cmp
cmp
ffreep
mov
mov
scas
lock
repz
mov
fwait
pop
jb
repnz
pushf
addr16
fsub
mov
sbb
mov
pushf
push
dec
into
xor
xlat
xchg
mov
xor
mull
cmpsb
lods
jo
jne
out
sub
cmc
push
icebp
in
fcomps
and
jp
mov
lahf
jmp
xchg
jp
and
push
imul
hlt
mov
pop
jecxz
shll
das
sub
out
xor
cmp
mov
adc
pop
sti
mov
pop
sahf
mov
loop
movsl
push
outsl
mov
cld
sbb
jge
fisttpll
push
ss
cwtl
out
mov
cmpsb
xchg
rclb
adc
add
movl
sub
mov
xchg
cmp
call
jmp
fcomps
stc
lods
add
cmp
jmp
xchg
es
pop
popa
xor
add
xor
push
xchg
xor
loope
and
daa
xor
pop
js
sti
cmp
pusha
mov
inc
cwtl
jmp
jg
adc
mov
push
icebp
xor
xor
add
cmp
mov
imul
test
int
and
jne
dec
leave
clc
jns
pop
cmp
xchg
popf
xchg
or
insl
movb
xor
mov
cmc
imul
sbb
ret
test
cs
insl
xchg
pop
hlt
lahf
pop
out
notb
xchg
lcall
aas
popa
mov
dec
rcr
dec
dec
xor
daa
popf
into
sbbl
out
scas
jecxz
lret
push
fcmovnbe
cmp
out
mov
or
scas
push
lods
jle
pop
xor
sub
repnz
data16
cmpsb
repnz
dec
mov
push
shll
cmp
aas
mov
cmpsl
shlb
adc
enter
inc
scas
lret
popf
push
es
popl
fsubl
in
sub
jecxz
imull
sbb
adc
subl
int3
bts
loope
dec
aaa
mulb
ret
mov
xlat
xor
js
dec
out
adc
int3
stc
add
adc
pop
data16
cli
out
add
cld
les
inc
inc
jg
push
mov
pop
inc
insb
daa
outsl
push
mov
push
cmp
lods
jbe
pop
sbb
mov
mov
dec
fidivl
fwait
loop
xchg
jge
push
mov
sbb
or
push
pop
cltd
jecxz
cmp
cmpsl
icebp
inc
push
sub
pop
sbb
pop
pop
in
cwtl
pop
mov
nop
lods
mov
repz
aam
js
sti
inc
dec
push
jp
push
push
jmp
lahf
add
insb
inc
sbb
push
lods
jo
xchg
inc
shlw
jae
mov
push
xchg
bound
cmpsb
das
ret
dec
xchg
fimuls
jg
stos
xor
jno
bound
scas
jnp
enter
lret
test
xchg
cmc
mov
add
push
sbb
adc
out
sub
ror
pop
and
and
lds
adc
popa
ret
xchg
sub
insl
xchg
sub
mov
mov
inc
arpl
insb
lods
push
inc
pop
and
adc
aaa
stc
mov
xor
outsb
adc
xlat
cmp
dec
loop
jmp
and
movsb
mov
and
std
sahf
add
mov
rorb
dec
jl
nop
mov
dec
inc
outsb
mov
xor
push
or
mov
inc
or
push
mov
aas
xchg
inc
mov
cs
push
mov
hlt
hlt
pop
ljmp
sbb
push
icebp
add
cmc
pop
pop
push
and
xor
out
dec
sbbb
fidivs
jmp
mov
int
push
xor
lds
add
aaa
movsl
sbb
dec
jo
or
lds
mov
icebp
adc
dec
push
mov
xchg
xchg
pop
jge,pt
and
cwtl
xchg
mov
repnz
sub
ret
mov
mov
push
sar
in
mov
jecxz
lahf
nop
das
inc
notb
adc
sahf
inc
les
pop
or
mov
clc
cmp
lret
nop
out
fadd
scas
mov
ljmp
xor
adc
aad
adc
jbe
push
scas
jns
or
xor
sub
lahf
idivl
push
test
aam
mov
inc
sub
nop
leave
pop
scas
int3
arpl
or
inc
xorl
out
cmpsl
xor
dec
enter
negb
cli
xor
jp
pushf
or
in
add
stos
lret
aad
std
aas
xchg
jbe
mov
jmp
je
stos
adc
jmp
inc
test
fisubs
leave
jp
lahf
test
sbb
pop
pop
loop
mov
jae
sbb
push
jne
push
call
sbb
test
loopne
mov
fcmovbe
std
popa
rolb
in
int
dec
mov
add
subb
and
outsl
out
mov
fstpl
jl
lds
into
pop
xor
adc
lods
jecxz
adc
sbb
dec
aaa
jnp
xchg
out
fcmovnu
lret
stos
push
std
sub
inc
pop
sub
pushf
nop
scas
lret
imul
jns
les
cmpl
arpl
and
jne
jecxz
movb
insb
pop
filds
xchg
je
in
int
inc
dec
xchg
push
int3
mov
gs
arpl
or
add
sbb
cwtl
mov
add
test
lea
loopne
xor
cmp
out
cmp
aaa
scas
fldl2e
sahf
jae
jne
sbb
hlt
or
fs
frstor
mov
mov
lock
push
lcall
push
mov
mov
jns
shll
mov
mov
aam
pop
in
xchg
adc
mov
add
sbb
in
pop
pop
push
push
pop
jge
into
pushf
test
dec
sub
inc
pop
pop
jecxz
pop
lahf
xchg
jg
shll
imul
push
movsb
pop
inc
mov
out
shll
inc
pop
in
lea
sar
jmp
add
mov
xchg
imulb
and
sbb
add
pop
popf
test
loop
cmpsl
pop
jae
xchg
mov
sub
mov
stos
and
adc
je
in
inc
pop
ljmp
cmc
fsubl
lock
loope
push
xor
xchg
jo
sbb
ss
jp
sti
fildll
sbb
cwtl
ds
lea
adc
in
lahf
je
mov
inc
cld
dec
pop
pop
dec
arpl
aas
pushf
rcl
dec
aam
xchg
xor
int3
or
sub
push
jmp
cwtl
in
lahf
sahf
pop
mov
ljmp
add
push
sub
insb
xchg
aad
das
rcrb
dec
and
push
mov
cli
je
test
fldcw
jecxz
mov
popf
dec
test
fwait
push
mov
and
mov
adc
xchg
scas
loopne
adcl
int
imulb
call
andl
pop
in
outsb
fsubrl
movsl
popa
and
pop
in
fs
fmull
and
cmpsb
enter
stos
and
nop
loop
cmovo
inc
aam
ds
sub
fs
fistps
jmp
pminub
int
ret
aam
sbb
fucomi
push
fnsave
push
mov
mov
add
ss
addr16
and
pop
pop
dec
and
mov
inc
je
push
imul
ror
jle
js
mov
or
mov
les
jl
cmp
add
loope
lods
xor
xor
push
push
pop
lods
insb
scas
sti
mov
mov
pop
xor
push
icebp
or
push
pop
xchg
ret
mov
mov
in
pop
pop
pop
xor
pop
or
xor
stos
test
inc
les
or
adc
in
cmpsb
lods
shll
in
std
jbe
ret
arpl
ret
negl
xor
leave
fdivl
sub
ficompl
adc
std
xor
ret
and
loopne
push
and
mov
xchg
sbb
les
pop
and
aad
adc
mov
stos
mov
lret
in
push
xor
dec
dec
mov
es
popl
popa
lock
or
mov
stos
cmp
int
xor
lock
bound
pop
cmp
mov
cmp
sbb
jb
mov
pop
sbb
xchg
mov
aad
out
push
aad
jecxz
cmp
popw
js
addb
add
jle
pop
cmp
mulb
call
cmp
ucomiss
mov
jcxz
daa
push
iret
or
cmp
sub
mov
insb
int
stc
add
jle
mov
cwtl
and
push
inc
cld
sahf
imul
mov
push
cmpsl
lcall
xor
mov
es
pop
lret
scas
sarl
shr
ficoms
xor
sub
xchg
fiadds
pusha
daa
jle
sbb
jae
scas
mov
jns
xchg
xchg
hlt
icebp
and
aam
sub
iret
insl
mov
mov
add
loopne
sti
cmp
fs
cmp
inc
or
xchg
fldenv
movsb
out
xchg
xor
pop
in
pop
jbe
adc
das
icebp
mov
call
sub
cwtl
mov
sub
lea
xorl
jecxz
push
popa
je
addb
mov
loopne
or
pop
push
loope
in
inc
sarb
in
int
cmp
push
mov
and
je
scas
mov
mul
les
mov
arpl
xchg
loop
pop
xlat
mov
lds
xor
pushf
aad
outsl
push
sbb
add
mov
sbb
cmp
xor
adc
ja
mov
xchg
cmp
adc
je
call
cmp
lods
cmpb
mov
sbb
or
inc
loope
xchg
mov
call
push
outsb
dec
dec
into
data16
cs
cmpsb
popa
lret
fs
or
mov
mov
fwait
cld
pop
stc
int
inc
jecxz
push
loop
fists
mov
fsubl
jb
subl
xchg
mov
inc
sbb
sub
inc
shrl
xchg
stc
pop
fnstenv
pusha
lock
ficompl
add
mov
int
and
and
add
mov
roll
dec
mov
aad
ds
call
adc
scas
mov
mov
pusha
fcomps
xchg
or
mov
push
sub
lret
pop
mov
lahf
mov
mov
fidivl
lods
lret
mov
dec
insl
push
sbb
inc
add
jle
outsl
xlat
sbb
mov
out
mov
dec
jb
jbe
cmovns
pop
xlat
jmp
cmpsl
push
sub
sub
clc
addr16
mov
sbb
sbb
jbe
imul
cmp
mov
dec
test
sbb
fsubrl
insb
js
pop
dec
mov
insl
jbe
jnp
in
mov
pop
loop
imul
insl
inc
lea
shlb
pop
std
lea
pop
test
mov
mov
not
sbb
or
xor
js
jmp
rolb
push
ret
iret
leave
push
or
pop
aas
shll
mov
cmp
xor
cmpsb
cmp
add
push
mov
xchg
loopne
xchg
cmp
out
push
int3
mov
jle
xchg
jl
gs
xchg
in
bound
test
pop
jg
inc
or
xchg
xor
jmp
mov
popf
ficoms
scas
fists
inc
inc
loopne
push
sbb
into
ret
addr16
and
sub
and
popa
ret
mov
xor
jl
mov
fsubp
test
mov
cmp
push
mov
push
xor
pop
cld
jp
cli
scas
popf
insl
out
jnp
mov
icebp
or
inc
push
mov
pusha
scas
sub
test
sbb
repnz
sarl
fisubrl
xchg
dec
movsl
dec
addb
inc
mov
or
mov
call
and
push
mov
pop
jns
xorl
popa
sub
test
or
out
cmp
mov
dec
cmp
or
sbb
out
inc
dec
sub
flds
leave
aaa
lock
negl
outsb
pop
sbb
lds
imull
xor
in
jne
mov
mov
filds
lcall
gs
insl
ja
mov
fs
mov
insb
jbe
sbb
sub
cwtl
mov
push
rolb
loope
inc
pop
scas
fisttpll
pop
xchg
loop
data16
adc
push
inc
add
ss
popf
sbb
dec
pop
lods
add
add
dec
xchg
repnz
lock
inc
fdivrs
inc
stos
inc
ret
and
in
push
mov
je
add
jmp
adc
ret
clc
add
xchg
leave
mov
fisubl
or
dec
aad
hlt
mov
mov
mov
filds
fld
xchg
cltd
xlat
xchg
adc
inc
sub
movsb
sbb
jbe
push
pop
mov
mov
or
int
xchg
jp
sti
lret
jge
clc
mov
cmp
sub
xlat
sbb
dec
push
mov
aam
inc
cmp
flds
cmp
movsl
inc
por
and
sbb
mov
dec
xchg
mov
aad
aas
add
jne
inc
xchg
cli
pusha
fs
ljmp
mov
adc
mov
dec
push
cmp
dec
repz
jae
push
jl
push
xchg
cmp
imul
inc
cld
sub
movsb
jno
inc
lcall
lret
ja
and
imul
popa
lret
mov
call
int
adc
cli
add
addr16
rorl
sbbb
fnstsw
xor
clc
or
or
mov
cmp
xchg
rcll
movsb
push
sbbb
xor
repnz
adc
jge
out
lahf
mov
adc
xchg
jo
jae
cmp
repnz
mov
xor
jle
pop
sub
xchg
sub
pop
inc
fwait
inc
es
lock
lea
xor
jmp
mov
mov
ljmp
jp
les
in
jl
cmpl
add
adc
cmp
pusha
filds
jmp
hlt
cmp
push
mov
dec
pop
pop
fdivrl
mov
mov
daa
addb
lret
cwtl
push
mov
cltd
mov
ds
xor
mov
cmpsl
in
and
test
data16
call
cwtl
push
sub
aam
dec
lea
adcb
lret
xchg
xchg
mov
repnz
pand
cld
sub
push
lret
mov
movsb
clc
dec
fdivl
scas
pop
xor
add
or
insl
inc
cmp
add
ficomps
aad
dec
scas
inc
icebp
cmp
movsl
std
xchg
loope
sub
incl
out
loopne
fwait
out
mov
xor
pop
outsl
push
fsubrl
cld
sbb
mov
mov
rorl
jns
dec
outsl
adc
das
mov
ja
cmp
jae
testb
jmp
sub
call
pusha
mov
inc
or
data16
mov
add
xchg
aaa
dec
dec
mov
dec
dec
jo
inc
dec
xor
inc
fnstsw
cmp
in
inc
cltd
and
sub
pop
xchg
adc
jae
hlt
sub
xlat
icebp
insl
int
divb
shlb
hlt
mov
cltd
mov
pusha
mov
movsl
dec
xchg
in
cld
out
sbb
mov
mov
inc
dec
lcall
outsb
shll
popf
xchg
cmp
out
cmpsl
sub
mov
xchg
ret
sbb
mov
mov
inc
test
out
add
daa
mov
cmp
and
test
inc
sbbl
xchg
adc
push
jbe
shrb
adc
xor
mov
push
enter
dec
or
fcoms
popf
adc
add
xor
popf
lock
cwtl
sbb
xchg
notb
mov
mov
and
in
cmp
sbbl
xlat
pop
out
fwait
cmpb
and
mov
std
or
lret
imulb
shrb
xchg
test
or
mov
lock
in
jnp
and
pusha
out
mov
dec
pop
sub
insb
pop
jns
test
lret
ja
pop
inc
iret
lods
jg
push
gs
std
lahf
movsb
mov
pop
push
mov
cltd
ret
arpl
dec
xor
xchg
loopne
pop
xchg
cwtl
sbb
mov
imul
xchg
jecxz
mov
int3
leave
fs
arpl
add
andl
sub
jne
outsb
sub
test
sbb
sahf
xchg
lods
cmp
je
insl
pop
mov
cld
outsb
pop
xchg
push
ficomps
sub
es
data16
add
mov
cmp
push
add
lods
orb
mov
xchg
push
sbb
push
popa
pop
mov
imull
or
rol
scas
push
xchg
adc
out
pop
ret
xlat
out
sbb
inc
hlt
mov
mov
popf
pop
in
and
pop
movsb
push
mov
cltd
cmpb
xchg
je
rcr
out
jmp
dec
call
jno
ja
dec
cmp
xchg
loopne
out
clc
add
mov
mov
stc
gs
bound
add
mov
add
insb
test
adc
add
and
mov
out
xor
sarb
dec
xchg
rcr
cmpl
mov
inc
notb
pop
inc
cld
rorb
sysexit
pop
stc
pusha
sbb
cmp
in
loopne
les
mov
repz
push
jge
xor
xlat
xchg
xor
mov
adc
mov
inc
mov
sbb
mov
jbe
push
lods
or
addb
mov
dec
mov
pop
adc
pop
dec
adc
xlat
push
adc
mov
xchg
add
mov
fcoms
popa
and
movsl
mov
add
or
jmp
xor
cli
add
out
test
sahf
or
mov
jno
inc
push
test
outsl
dec
cmp
stos
loop
call
lahf
lods
lret
das
sarl
inc
xor
insb
sbb
or
inc
in
mov
mov
in
xor
ljmp
cli
inc
jne
dec
inc
sbb
sub
xor
mov
push
or
push
iret
ds
adc
xor
lret
loope
inc
lock
adc
in
test
jne
and
mov
loopne
sbb
hlt
sub
test
mov
xor
out
decl
in
inc
jge
cmp
aas
lds
xor
jmp
mov
test
test
pop
jb
sub
xlat
xchg
outsl
fsubrs
outsb
push
pusha
jne
mov
lcall
or
push
mov
push
xor
fsub
xchg
and
mov
aad
pop
push
or
mov
cmp
sbb
mov
aas
js
insb
inc
inc
dec
insl
jae
pop
leave
inc
movsl
fimuls
push
negb
cwtl
js
push
pop
fcmovnb
rcl
lcall
insb
sahf
addl
fst
cs
rorb
or
xchg
push
pop
imul
push
push
jecxz
rorb
das
nop
inc
mov
out
aam
push
call
push
dec
daa
inc
push
mov
inc
mov
jbe
push
orl
xor
pop
loopne
in
jge
pop
cwtl
push
aas
adc
pushf
adc
in
mov
sbb
je
test
inc
aaa
cmp
xchg
xchg
jle
iret
pop
movsb
ljmp
adc
rcr
xorl
sbb
mov
mov
outsb
sub
cmc
fnstcw
std
das
int
les
inc
push
xchg
int
adc
dec
jmp
add
adc
out
add
cli
les
mov
lock
or
inc
out
idiv
vcvtsi2ssl
test
sub
test
out
arpl
scas
sti
pop
push
inc
push
loope
lods
shlb
push
add
and
addl
hlt
xchg
xor
jno
jb
cmp
pop
enter
popf
push
add
js
sub
push
and
insb
movsl
insb
stos
push
push
fldt
jnp
lret
mov
sbbl
dec
das
jecxz
gs
and
imul
out
push
cmp
push
pop
push
jo
sub
sub
sbb
rolb
xchg
and
jmp
and
shrl
int
mov
pop
push
lods
andl
fisubrs
sti
add
xchg
or
std
sub
mov
adc
pop
xchg
push
rolb
imul
inc
or
fwait
cmc
xor
dec
inc
jbe
fisubs
cs
into
les
jge
test
mov
cmpl
adc
cmpsl
add
sub
andb
ds
dec
inc
adc
enter
ds
jbe
repnz
xchg
into
in
insl
orl
lahf
mov
scas
push
sbb
jbe
das
lret
into
pop
add
jno
jae
fnstsw
orb
cmpsb
lock
xor
sub
fsubs
pop
mov
stos
xlat
lret
repnz
xor
hlt
inc
les
dec
push
fisubl
insl
addr16
cs
and
lcall
subl
jp
fsubr
lods
and
sbb
pop
lret
imull
pop
or
adc
iret
pop
mov
cmp
ljmp
outsb
or
push
mov
xchg
inc
jle
lahf
jmp
jae
and
stc
and
out
scas
mov
cmp
dec
push
fstl
test
inc
xchg
roll
pop
loop
dec
dec
sub
add
xchg
aam
in
or
push
sbb
ficoms
jl
movsl
pop
sub
dec
inc
call
push
inc
out
clc
addr16
mov
imul
rcll
clc
fmul
psrad
inc
cmp
sti
out
dec
or
mov
cmp
mov
dec
stc
push
lcall
scas
mov
or
loope
mov
test
in
cld
mov
outsb
xor
imul
or
out
les
loopne
jb
mov
movsb
mov
dec
rolb
jo
shll
cmp
repz
mov
push
fstpt
xor
and
scas
fidivrs
pop
fcomip
inc
shlb
xchg
out
cli
cmp
adc
mov
jg
sbb
xchg
push
std
jmp
xchg
insl
cld
mov
cli
mov
and
sbb
adc
or
jo
sub
test
xor
stc
or
xchg
dec
jle
mov
xchg
cmp
mov
adcl
lock
and
in
jl
adc
jp
pop
jb
insb
cmp
stos
inc
push
lret
cmpl
mov
cmpl
adc
xlat
inc
pop
sub
cmp
sbb
cs
dec
jecxz
movsl
jg
fcmovnu
shrl
push
cs
stos
lods
les
pop
in
fucomp
jmp
sahf
cs
inc
dec
or
fdivrs
movsl
or
cmpsl
cmpsb
sub
inc
pop
shrb
jmp
xchg
js
aas
iret
dec
nop
xchg
test
mov
jle
rcrb
loop
sub
pop
sub
lahf
mov
adc
and
idivb
and
outsb
or
inc
dec
sub
and
xor
hlt
cmp
ret
pop
pop
push
mov
and
dec
xchg
rclb
loop
fs
and
loop
jnp
jg
mov
jmp
sti
pop
inc
jg
add
shlb
ljmp
or
cmp
push
push
adc
lcall
aas
in
add
or
mov
mov
add
lock
insb
adc
jge
enter
inc
inc
sbb
or
sub
loop
adc
rclb
jl
lock
shl
imul
inc
mov
push
pop
add
inc
rcrl
sub
cmpl
stos
out
popa
les
and
lds
scas
lods
xchg
pushf
jmp
cmc
movsb
out
xchg
push
push
nop
incb
cmp
lods
aam
test
push
add
cmp
jne
into
xor
or
imul
add
cmp
mov
ror
xor
mov
mov
into
pop
fidivrl
stos
adc
xchg
cli
cmp
lahf
or
lods
lret
adc
fs
sub
jmp
mov
ljmp
mov
cs
xchg
xchg
jecxz
pusha
cmpl
pop
iret
fmuls
mov
repnz
loop
push
pop
push
data16
mov
or
push
pop
push
cmp
mov
dec
cmc
jmp
adc
lahf
std
es
mov
repnz
push
fsub
in
adc
arpl
jo
iret
or
and
cmp
mov
adc
pop
mov
lahf
push
inc
shrb
les
sbbb
scas
cmp
and
inc
call
sub
repz
push
cmp
fiadds
dec
xor
or
aam
mov
jg
cwtl
adc
test
mov
mov
ljmp
adc
pushf
ljmp
adc
bound
lcall
daa
mov
sub
lea
stc
mov
pop
jae
sahf
test
fcompl
fsubrs
push
aaa
pop
outsb
jle
out
jns
stos
fwait
push
gs
and
adc
bound
mov
mov
test
pop
xor
aas
mov
mov
gs
push
jge
and
push
pop
fmull
jge
nop
rorl
mov
push
mov
in
in
sbb
push
imul
ja
xchg
jb
xchg
clc
popa
mov
in
cli
pop
add
jnp
int3
sarl
orl
out
icebp
mov
sbb
mov
mov
and
out
pop
repnz
jecxz
inc
pop
xor
or
cli
enter
adcb
cmpsl
das
xchg
push
mov
js
jmp
arpl
data16
inc
add
frstor
and
or
mov
fisttpll
cwtl
test
sbb
cltd
daa
into
sbb
and
jns
sbb
xor
icebp
lods
mov
pop
inc
and
out
cmp
sub
mov
push
out
and
jmp
mov
mov
or
xchg
dec
push
push
ja
xchg
or
xchg
cmp
sub
and
dec
and
push
shrl
pusha
xchg
fisubrl
inc
push
es
movsb
pop
ss
dec
nop
add
xor
xchg
stc
cmp
pop
mov
loopne
sub
rorl
pop
inc
jg
ret
in
popf
xchg
or
and
cld
push
cmpsb
mov
mov
sti
push
xchg
arpl
mov
or
std
hlt
and
cmpsl
lds
mov
aad
lds
repz
mov
cmp
mov
add
cmpsl
popf
xor
pop
lret
cmp
ret
xchg
adc
sti
rorb
and
cld
or
cmp
cmp
xchg
in
sub
adc
imul
punpckldq
mov
xchg
pop
pusha
mov
mov
shrb
enter
and
push
fdivs
pop
mov
cs
lods
mov
xchg
fs
adc
imul
add
outsl
push
and
jns
cwtl
cmpsb
shr
cwtl
out
cmpsb
insl
or
shr
shlb
mov
inc
lcall
sub
jns,pn
push
clc
sbb
adc
dec
push
dec
out
lock
adc
mov
cli
add
pop
out
mov
std
or
stc
dec
mov
mov
aam
and
js
adc
sub
inc
roll
sub
and
cmp
clc
dec
inc
pushf
inc
repz
jne
lea
int
insb
fildl
icebp
cmp
fldl
inc
mov
je
stc
and
jmp
mov
jp
add
jge
xorl
jg
mov
cmpsl
ret
push
pop
leave
clc
mov
mov
inc
cmpsb
popl
movsl
push
cmp
mov
ljmp
jl
mov
xlat
aas
pusha
push
rcl
outsb
pushf
stc
stos
adc
int3
scas
test
mov
mov
out
inc
dec
pop
push
fisttps
add
mov
les
shlb
jbe
pop
mov
mov
cmpb
pop
ljmp
sub
call
adc
mov
jno
sahf
sbb
sbb
sti
pop
push
add
daa
sub
ret
dec
cmp
into
sbb
movsl
cmpsb
pop
cmp
mov
pop
js
std
cmp
push
mov
mov
add
test
xchg
xor
pop
and
je
enter
xchg
mov
jl
mov
loope
test
ss
addr16
cs
fs
btc
pop
push
xchg
adc
cld
mov
dec
pop
mov
mov
stc
ficompl
pop
dec
mov
mov
fcmovnu
push
xchg
test
jge
dec
nop
cmc
dec
adc
sar
loop
shll
fldt
addl
inc
dec
sar
mov
fisttpll
div
in
jnp
fcomps
cwtl
lret
jnp
jae
mov
xor
adc
push
lahf
repz
jb
enter
mov
xor
mov
stos
mov
add
add
mulb
mov
sbb
cltd
sub
mov
and
xlat
push
fwait
add
xchg
mov
jbe
pop
daa
push
sub
idivb
or
mov
xlat
cmp
aaa
mov
arpl
stos
rorb
or
jae
and
test
xor
bound
pop
ret
das
imul
pusha
and
hlt
lock
dec
mov
inc
adc
jnp
aam
mov
loop
dec
pop
iret
sub
mov
add
mov
sub
sbbb
and
inc
divl
es
test
dec
xor
loopne
fstps
sbb
in
mov
int
mov
mov
mov
stc
movsl
stos
popf
fdivp
pop
popf
sbb
call
sbb
lods
xor
xchg
movsl
mov
sbb
loope
out
leave
fsubrl
cmpsl
and
popf
jp
out
cld
daa
dec
fwait
jne
insl
loope
stos
addr16
adc
inc
fiadds
lds
add
imul
adc
ret
push
shlb
les
push
sub
push
lret
lahf
pop
jne
or
mov
in
jno
push
mov
mov
divw
hlt
sti
in
stos
inc
mov
fcmovne
stos
aaa
loopne
dec
sbb
popa
scas
push
aaa
nop
push
sti
test
inc
jae
sub
mov
mov
mov
dec
pusha
mov
cltd
lret
sahf
cld
mov
fistl
mov
stc
popf
gs
mov
jp
ss
mov
fdivrl
cld
mov
shll
test
mov
mov
sub
push
shll
adc
lret
cmp
fmul
fldcw
and
mov
push
push
cmp
imul
jb
test
xchg
xor
ret
adc
xlat
testl
stos
fadds
cli
xchg
mov
and
pop
lahf
sbb
mov
push
mov
mov
pop
mov
mov
push
jmp
cmpsl
andb
mov
xrelease
xor
stos
pop
cmp
inc
dec
test
mov
outsl
pop
xchg
leave
sbb
mov
ja
or
les
subl
lock
sbb
pop
gs
out
pop
enter
add
in
jo
into
icebp
pop
pop
div
sub
sub
xchg
mov
xchg
or
inc
subb
pop
and
outsl
mov
jns
sbb
pop
rcll
dec
jne
loope
or
push
fdivs
jns
mov
mov
sbbb
movsb
mov
insl
cmp
sbb
addr16
push
push
mov
lcall
mov
mov
push
jle
xchg
in
into
adc
or
mov
inc
stos
mov
dec
pop
xchg
ss
scas
popl
outsb
push
adc
mov
arpl
xchg
out
add
outsl
mov
lods
cmpsl
shll
cmpsb
cld
ret
adc
stos
lret
mov
fcmovne
pop
nop
mov
xchg
loope
add
or
mov
insb
pop
add
aad
dec
sbb
test
mov
mov
out
adc
popf
and
cmc
in
pop
lods
pop
dec
shlb
shll
fnclex
stos
addb
ret
lods
lock
dec
fwait
gs
sarl
pushf
xorl
mov
bound
jmp
insb
testb
daa
mov
scas
daa
rcl
js
sbb
pop
pop
mov
pop
adc
int
pushf
adc
sub
fmull
pop
xchg
mov
cmp
mov
sbb
popf
aad
test
adc
mov
mov
lods
andl
pop
jecxz
out
lcall
enter
or
sbb
lea
jl
xchg
add
fbstp
sub
sbb
inc
aam
idivl
or
fisubs
xor
cmp
nop
jne
add
mov
inc
int
frstpm(287
popf
cs
fcoml
mov
push
std
lock
xlat
int3
aas
int3
inc
fcoms
mov
mov
movsl
ret
outsl
or
out
sub
movsl
xor
mov
jg
push
add
insl
outsl
xor
in
adc
jmp
and
sbb
lahf
loop
fwait
imul
out
push
fimull
xchg
jbe
push
add
shl
addr16
xchg
or
jmp
push
pop
fildl
and
mov
push
fimuls
mov
lret
mov
inc
out
jno
jns
test
imul
mov
cltd
dec
fdivl
movsb
or
mov
sbb
jne
pop
ror
mov
aaa
xchg
lcall
jmp
fs
jle
lret
aad
js
xor
movl
push
bound
add
and
in
push
sbb
push
adc
movsl
dec
imul
aas
inc
lret
cmp
imul
jae
xorb
lret
push
push
stc
ss
cmpsb
outsl
mov
ss
inc
popa
cwtl
hlt
jb
dec
loop
push
mov
and
add
lds
mov
notb
push
repnz
mov
outsb
mov
fstps
dec
je
add
jne
stos
push
insl
mov
cmpsl
pop
jnp
call
dec
loope
add
sbbb
mov
aad
pop
xchg
jns
fadds
add
imul
mull
jnp
stos
and
xchg
movsl
scas
aaa
addb
pop
sub
outsl
adc
add
shrl
cmp
sarl
pop
xor
jge
out
xorb
mulb
xchg
mov
gs
popf
sub
jg
sub
mov
dec
faddl
push
out
xor
pop
xor
push
dec
mov
xchg
fstl
fists
xor
test
inc
sub
loope
iret
das
int3
aas
push
fsubrs
ja
aaa
or
mov
mov
adc
std
cltd
add
xor
sbb
lret
cmpsb
cmp
pop
adc
cmp
sahf
scas
flds
mov
mov
cmc
loope
out
mov
cltd
aas
inc
pop
ds
mov
xchg
jns
sar
ret
sbb
scas
push
out
ds
ficompl
xchg
xlat
xchg
mov
xor
sbb
xor
push
pusha
fisubs
mov
xor
data16
fucomp
inc
xchg
lods
inc
fwait
xchg
outsl
icebp
jmp
lock
insl
fnstenv
dec
push
adc
imull
test
pop
mov
pop
addl
outsl
call
test
mov
loope
dec
out
sbb
iret
mov
lds
out
lds
lcall
pop
fcoms
or
repz
add
std
in
adc
test
push
pop
mov
mov
inc
int
jp
aaa
ds
push
enter
divb
xchg
aam
loope
or
jo
andl
pop
cld
mov
ljmp
test
cld
fistps
in
or
fidivrl
push
ss
jp
jle
into
sbb
bound
sti
aaa
or
mov
aad
insl
jecxz
nop
sahf
adc
xchg
or
or
xchg
fildl
js
cmp
stc
mov
addb
xchg
int3
aaa
lods
push
dec
lock
insl
mov
jb
orb
inc
orl
inc
out
scas
adc
fisubs
add
jno
jl
push
ljmp
stc
jle
xchg
push
insl
mov
js
imul
test
lcallw
sbb
repz
push
mov
movsl
ret
ret
and
xor
jo
sub
jmp
in
xor
popf
scas
in
jecxz
push
clc
add
push
mov
nop
and
fisttpll
loop
jmp
popa
repnz
and
or
xor
cs
sub
xchg
sarl
cmp
jns
cmp
stc
pop
mov
push
pusha
push
shl
test
sbb
adc
cmc
shll
fimuls
cld
popf
arpl
xchg
push
push
or
sbb
mov
adc
mov
cltd
test
dec
xlat
ss
int3
fidivrs
push
ja
or
mov
fs
loope
out
callw
pop
jg
daa
mov
inc
fbld
push
jno
leave
cmpsb
out
out
xor
int3
addb
pop
xchg
aam
dec
aad
cmc
jg
mov
mov
test
mov
out
jnp
or
add
arpl
pop
out
pop
mov
inc
mov
xor
test
sbb
outsb
push
cli
adc
sarb
cmp
ret
xor
scas
cmp
lret
scas
lret
dec
push
xor
mov
imul
push
mov
outsb
mov
add
adc
icebp
out
pop
adc
dec
rcll
aam
lcall
cmp
das
lds
xchg
movsb
xor
out
bound
lea
mov
dec
cmp
inc
mov
sbb
adc
loopne
fnstenv
scas
test
dec
add
loopne
xchg
scas
lret
adc
subb
sarl
push
cmp
xchg
push
shll
dec
or
ret
movsl
and
and
pop
push
mov
test
pop
pop
push
push
mov
xchg
mov
repnz
lds
cld
insw
movb
orb
push
mov
xchg
fdivrl
jg
sub
data16
dec
xchg
lret
mov
pop
sarb
mov
inc
dec
and
jl
orl
into
cmp
sbb
imull
lods
shrl
orb
popa
add
sub
mov
inc
add
inc
pop
lret
dec
hlt
iret
aad
inc
jae
inc
movsb
mov
pusha
xor
lods
add
push
je
or
in
cs
sub
popf
add
jge
and
inc
repz
push
inc
rcrb
rclb
push
pop
rol
inc
jmp
adc
dec
ret
sbb
pushf
inc
repnz
push
push
or
mov
adc
dec
xchg
shrl
cmp
jle
bound
mov
xor
rcrl
push
mov
mov
lcall
aaa
sahf
pop
inc
pusha
push
cmp
daa
jecxz
xchg
loopne
mov
scas
mov
popf
mov
inc
cmpsb
hlt
cli
mov
outsb
jo
popa
pop
and
test
jp
and
mov
cwtl
mov
lret
or
mov
mul
jmp
or
dec
sub
push
jbe
push
ss
and
jmp
jb
adc
loop
imul
call
sub
pop
out
mov
xor
or
cmpsb
xchg
sbb
popa
mov
jl
pop
outsl
sub
mov
ds
out
loope
jnp
push
add
xor
out
aad
ret
es
out
mov
out
or
pop
mov
flds
dec
ja
sub
stos
lods
pushf
xchg
fisubs
fsubs
aas
sub
sarb
xchg
ds
rclb
mov
loope
repz
jnp
mov
dec
xchg
xor
adc
jp
add
notl
pushw
mov
adcl
fsubs
pop
ror
mov
jne
mov
sbbb
lea
jl
add
adc
mov
inc
aaa
fcoms
add
xchg
fwait
pop
mov
dec
ret
xchg
jmp
push
cli
sbb
clc
shll
add
into
sbb
mov
or
adc
mov
xchg
lds
mov
repz
adc
adc
jle
call
icebp
mov
aam
icebp
pop
cltd
movsb
fstpl
aaa
out
aaa
dec
dec
push
mov
xchg
xor
mov
cmpsl
cmpsl
out
inc
dec
pop
mov
pop
adc
sub
daa
movhps
inc
push
icebp
mov
push
mov
jb
movsb
call
inc
hlt
arpl
dec
pop
addl
mov
repnz
insb
mov
xor
ficoml
jge
adc
fiaddl
jno
ss
xor
push
sub
enter
dec
push
sbb
adc
in
lret
sti
loope
inc
push
or
adc
mov
aas
adc
lock
mul
rcrb
aaa
pop
lret
lods
imul
xchg
dec
cmp
inc
mov
jmp
dec
and
add
mov
jecxz
inc
mov
sub
xchg
push
jnp
in
jl
cmpsb
dec
mov
mov
mov
lock
rcrl
mov
sub
in
mov
pop
inc
fildll
das
loop
adc
rcrb
mov
xchg
adc
push
inc
imul
sub
out
icebp
cwtl
shl
fucompp
popa
pushf
jns
mov
xor
jnp
sbb
add
popa
cmpb
es
ror
xchg
ficoml
cmp
mov
cmp
jle
dec
and
pop
das
push
lock
sbb
xchg
and
adc
sub
repnz
orb
mov
ja
dec
sti
xchg
adc
shl
mov
outsb
push
mov
hlt
aad
pop
lods
cmc
jno
ret
xchg
in
repz
or
mov
hlt
ret
fcomps
jl
xchg
sub
imulb
jne
dec
ss
xor
adc
push
dec
adc
aas
outsb
or
or
fsts
push
lcall
add
xchg
cmpb
aas
jge
popf
mov
dec
mov
jno
je
sti
rcll
dec
fs
cwtl
mov
push
xchg
rorb
mov
fmulp
mov
sahf
in
nop
idivb
add
jno
lods
jp
adc
ret
pop
jl
adc
scas
or
fsubrs
sbb
add
or
jno
and
xchg
add
dec
repnz
orb
fcmove
cld
sbb
push
dec
push
and
xchg
push
adc
xchg
testl
repz
add
push
test
movsb
loope
xchg
gs
mov
add
pop
pusha
loop
nop
fidivrl
fstp
jmp
stc
mov
aaa
mov
in
stc
test
in
iret
arpl
stos
dec
push
inc
xchg
lret
pop
push
pop
or
gs
mov
into
faddp
and
jns
fisubrs
adc
xchg
push
mov
mov
sbb
jmp
pop
hlt
fisttps
cmpsb
leave
jnp
loop,pt
int3
inc
ja
add
outsl
add
sbb
shlb
clc
inc
mov
lock
fdivl
lret
mull
rep
es
and
into
dec
fldenv
call
js
mov
cmp
sbb
or
arpl
rorl
xlat
sahf
sub
pop
js
or
in
add
cmp
out
and
fldenv
std
cmp
inc
divl
xchg
ds
std
inc
das
lret
pop
test
pusha
loope
cmpsb
pop
adc
adc
test
sbb
lock
xor
aaa
mulb
test
into
xchg
rorb
shlb
add
bound
std
sub
add
daa
out
in
mov
sti
jmp
push
xor
loope
push
lock
push
int
test
or
mov
roll
fadds
aad
aaa
test
orb
add
aad
mov
outsl
test
jle
cld
push
pusha
push
xchg
incl
cmp
aam
addb
push
das
imul
rorb
popl
std
push
xchg
aaa
sub
pop
inc
adc
ret
cmpsl
dec
leave
enter
push
sbb
cmpsl
xchg
adc
mov
sbb
dec
or
pop
scas
mov
mov
addr16
lret
pop
mov
pop
mov
or
andb
shll
xchg
add
int3
sbb
push
pop
je
cmc
in
jle
mov
mov
lods
pop
ret
mov
xor
push
fcmovbe
out
pop
ds
adc
imul
mulb
push
clc
cmp
add
loop
stos
aaa
mov
nop
hlt
sbb
ja
enter
fldcw
sar
negb
lcall
bnd
jae
iret
mov
xchg
imul
adc
pop
sub
int
mov
xor
imulb
push
push
hlt
cmp
out
in
hlt
jge
sti
pop
enter
imul
inc
push
mov
enter
pop
aam
icebp
stc
inc
fisubl
mov
mov
jmp
jge
mov
fldt
lcall
add
xchg
insb
pop
es
push
imul
xchg
adc
sub
mov
aaa
mov
sbb
xchg
xor
dec
andb
mov
jp
js
decl
cs
insl
sbb
in
mov
push
loop
cmp
cli
sub
aam
fidivl
int3
and
push
insl
lds
cmp
aad
jl
sub
out
and
cmp
jnp
stos
jg
bnd
out
lods
mov
out
inc
fistpl
into
fistpl
lret
pop
push
add
ss
movsb
mov
aam
test
add
lea
xchg
add
adc
mov
data16
rcll
stc
daa
xchg
lods
out
sti
mov
push
vpshufd
fwait
repz
mov
jle
adc
add
push
and
cmp
mov
dec
enter
mov
dec
push
fcmovbe
cs
dec
stos
adc
or
sub
popf
dec
imul
pushf
vmovntps
mov
jnp
mov
loop
outsb
inc
insb
lret
fisubl
or
xchg
xchg
add
jmp
inc
imul
lock
aaa
cmp
jo
mov
dec
fistps
mov
mov
cmp
repnz
leave
push
rolb
sub
cs
cld
xchg
stos
lret
sti
cmpsl
cmp
cwtl
cmp
pop
shl
rorl
sbb
cs
test
jnp
jb
mov
push
lds
add
xchg
cmp
mov
jo
mov
dec
cmpl
repz
mov
push
and
mov
imul
test
mov
jg
add
adc
sub
xlat
cmpsb
jp
xor
loop
js
add
mov
cmpsb
mov
aaa
aaa
sub
and
mov
xlat
fbld
mov
out
xor
jns
lods
leave
daa
dec
push
mov
mov
dec
stos
popa
cld
xor
push
add
jb
xor
inc
mov
mov
icebp
pop
xchg
fcoms
xor
ja
shll
and
ja
mov
sbb
push
xchg
stc
aaa
movsb
gs
lods
addr16
xor
fldl
cmpsb
xor
adc
sbb
dec
inc
sbb
orl
rorb
int
mov
rep
sbb
jge
das
pop
add
ja
je
lahf
jns
icebp
mov
rorl
sbb
add
and
sti
jg
xor
mov
sbb
xor
and
xchg
jo
in
mov
sub
pop
jo
mov
xchg
std
cmpsb
adc
mov
or
mov
rorl
shr
loope
shrl
cmpsl
push
shrb
rcr
sti
stc
jne
dec
jmp
lods
lods
jp
lcall
iret
add
inc
jo
jmp
mov
mov
sbb
sub
push
aas
push
cli
push
aas
dec
push
jmp
lret
fwait
mov
mov
pop
add
push
outsl
inc
enter
enter
popf
inc
fwait
aaa
pop
add
inc
test
jno
adc
fnstsw
cmpsb
and
jl
lods
dec
jge
xchg
xor
dec
dec
subl
imul
shll
out
mov
cmp
pop
lds
bound
add
daa
push
mov
addr16
je
cwtl
mov
test
push
sbb
lret
sbb
mov
mov
aad
mov
mov
push
adc
mov
jo
dec
xor
cmpsl
stc
adc
sub
adc
mov
sub
fdivs
je
xchg
pop
jns
mov
inc
loop
jle
test
dec
adcb
in
out
jns
sub
subb
push
jp
cmp
add
cmpsl
cld
pop
jecxz
xchg
adc
jnp
and
jmp
cwtl
cmp
repz
adc
test
jle
xchg
xor
dec
dec
pop
inc
cld
pop
out
inc
push
pop
cmp
jb
sbb
xor
or
pop
int
lods
pop
sub
dec
insb
ljmp
adc
mov
out
mov
out
or
sub
jp
pop
xchg
nop
stos
out
inc
es
inc
or
lahf
mov
mov
aas
gs
cwtl
lret
rcrl
adc
pushf
mov
inc
ficomps
decb
dec
add
rclb
enter
in
js
add
jg
mov
xchg
lods
into
xchg
xchg
iret
test
iret
repz
push
push
in
inc
les
or
pushl
nop
push
outsl
adc
out
repz
sbb
add
mov
aam
and
lret
push
dec
cmp
lret
lret
jmp
pop
xor
pop
in
add
aad
int
rcrb
int3
insb
xchg
xor
xor
pop
test
int
xor
mov
mov
cmp
js
sub
rorb
iret
mov
repnz
in
inc
mov
lods
cmpsb
xor
mov
rcr
cmpsb
rcrl
vmwrite
lods
jge
jno
jl
adc
lods
jb
mov
nop
jp
out
mov
ficompl
pop
sub
mov
xlat
sbb
add
mov
jg
mov
sub
aad
mov
addr16
rcll
pause
mov
and
fildll
addr16
jo
mov
cmp
jp
loope
cwtl
sub
rorl
fsubrl
sub
cltd
xchg
pushl
je
or
add
mov
stc
xlat
cmc
into
mov
lods
jnp
aam
xor
xchg
xor
clc
push
or
jno
jno
xchg
mov
or
jge
mov
clc
add
jmp
pusha
nop
adc
cmp
mov
xchg
xor
fcomip
sub
jo
cli
das
xor
push
pop
jmp
add
cmp
jb
test
pop
ds
mov
sbb
push
mov
push
sbb
mov
div
dec
and
test
and
sbb
dec
inc
addl
mull
push
into
out
in
mov
or
movsb
and
ss
cmpl
test
jno
inc
ja
pushf
das
popf
push
sbb
pop
mov
call
mov
popf
mov
or
inc
xchg
mov
add
dec
lcall
sub
mov
ret
pop
inc
cltd
xor
insl
adc
pop
push
fisubrl
dec
mov
mov
popw
cli
fcoml
ljmp
and
xchg
mov
mov
gs
daa
push
or
scas
cld
xchg
cmp
outsb
add
cwtl
pushf
inc
jne
or
add
lahf
push
ljmp
jae
lahf
test
aaa
mov
sub
jl
rorb
jns
xor
mov
into
add
fs
pop
xor
insb
repz
mov
lock
inc
push
dec
cmpsb
adc
cmp
insl
push
inc
dec
xchg
mov
pop
push
dec
fisubrs
ret
flds
rorl
ds
mov
scas
mov
lret
add
inc
imul
out
and
pushf
or
xchg
push
imul
shrl
iret
mov
dec
xchg
mov
mov
call
push
jg
sbb
pop
aad
xchg
sbb
movsl
pop
outsb
and
jl
and
pop
mov
xor
out
dec
andl
and
ret
xor
scas
push
adc
and
adc
insb
add
pop
out
lock
pop
out
shrl
mov
mov
and
int3
arpl
inc
add
out
pop
mov
loope
push
mov
cmpsl
push
mov
sub
mov
in
inc
mov
or
dec
es
fidivs
jge
xchg
out
mov
and
add
test
jno
sbb
insb
fldpi
push
jge
dec
gs
icebp
into
aaa
subb
mov
sub
inc
out
jne
xchg
jecxz
pop
shll
jns
pop
and
inc
int3
incl
pop
repnz
and
addl
in
aad
pop
fwait
xor
push
xorl
stc
shl
fstps
leave
fildl
les
icebp
orl
popf
sti
and
fbstp
enter
mov
nop
leave
les
cltd
xor
ss
push
mov
ror
call
jl
insb
lods
add
jnp
lods
push
dec
imul
sub
ret
push
push
and
popa
and
stos
sahf
call
jno
mov
loope
imul
rcrb
das
lock
dec
inc
xchg
hlt
xchg
lods
andb
xlat
xor
pop
incl
xor
jbe
and
fdivrl
pop
das
ss
imul
jge
leave
insb
rcll
int
add
jl
jnp
das
aaa
mov
lahf
cli
sub
mov
lret
leave
jl
outsb
pop
fwait
ret
mov
jae
loope
js
cmp
xchg
sub
cmp
jae
jne
push
dec
push
cmpsb
inc
addr16
add
jle
add
mov
lds
jle
jne
test
cltd
int3
enter
xor
mov
push
fcom
fldcw
std
push
inc
add
lcall
nop
mov
je
lret
sbb
inc
shrb
mov
pop
dec
gs
sbb
fwait
add
inc
pop
pushf
mov
inc
pop
dec
xor
outsb
aam
cwtl
or
je
nop
andl
sub
daa
shrb
leave
scas
rdtsc
pop
ss
enter
mov
sub
outsl
sbb
mov
sarl
pusha
js
push
gs
and
sbb
loope
cmp
jae
int
jne
js
stos
cs
xchg
push
sar
push
rorb
cmpb
mov
push
xchg
and
xchg
arpl
bound
mov
fidivrl
addr16
dec
mov
pusha
mov
cwtl
movsb
test
sub
mov
adc
das
idivl
arpl
cmp
lret
rclb
das
xchg
pop
jl
sbb
mov
cmp
clc
pop
mov
mov
lcall
mov
fwait
lods
ret
movsl
mov
shll
clc
in
xor
jns
leave
ljmp
pop
mov
inc
dec
sti
call
dec
pop
lds
push
xor
out
cmp
jmp
dec
imul
lahf
scas
stc
out
add
push
jl
push
pop
pop
xor
xor
pusha
cltd
push
aam
fwait
cmp
and
ss
in
xchg
jecxz
jnp
std
in
in
les
push
lds
daa
stos
pop
cs
xor
testl
add
loop
add
xor
jmp
mov
outsl
stos
insb
or
mov
call
outsb
stos
and
pop
sub
sahf
pop
push
nop
cmp
cmp
maskmovq
in
sbb
fwait
mov
call
xchg
dec
lret
mov
fisubrl
ja
inc
imul
lret
push
lds
scas
dec
mov
push
pop
outsl
xor
jecxz
sbb
push
mov
mov
cmc
cmpsb
lods
bound
lahf
movsb
push
and
fcomps
inc
mov
jg
adc
mov
mov
mov
sub
ret
sbb
out
nop
add
jns,pn
fnstcw
incb
insb
out
cltd
xchg
adc
scas
outsb
mov
jg
mov
lods
out
jecxz
test
into
out
pop
jbe
inc
xchg
fcmovbe
inc
clc
cltd
in
jle
mov
test
add
popf
psubw
push
ret
jl
icebp
sub
xor
hlt
and
and
cmp
and
cs
je
ret
mov
dec
testb
pusha
arpl
ficoms
out
xor
repnz
movsl
mov
leave
or
outsb
ret
mov
mov
cmp
sarl
sub
das
pop
out
cltd
adc
or
push
repz
mull
lods
das
jmp
dec
and
push
fs
enter
clc
add
repz
pop
xor
int3
lahf
ficomps
test
pop
sub
scas
cmp
sub
das
mov
jg
enter
enter
mov
add
push
mov
add
mov
jns
mov
push
xchg
ret
lret
aaa
dec
adc
push
and
cmp
xor
ret
push
adc
push
pop
xor
mov
dec
push
mov
pop
add
dec
je
push
movsb
lods
popf
pop
and
xorl
xchg
call
enter
fucomip
mov
std
int3
insb
mov
pop
cmp
fstl
arpl
nop
int
pushf
jbe
xchg
dec
add
mov
xor
sbb
xchg
out
or
aaa
lds
adc
mov
mov
xor
push
xchg
xlat
lock
push
test
xchg
negb
or
and
clc
dec
xchg
out
cmpsl
dec
xchg
fdivrp
and
lods
lods
test
mov
imul
out
lcall
jb
push
pop
sbb
rorb
and
scas
movsl
aad
mov
jnp
lret
ljmp
add
cs
shlb
jbe
je
mov
pop
in
out
sbb
shl
jp
mov
xchg
mov
sbb
and
js
sub
clc
outsb
xchg
jle
nop
mov
add
xchg
mov
cmp
ret
sub
add
xchg
mov
xchg
popl
jne
jo
aad
xchg
jne
aaa
sub
mov
lahf
incl
pop
and
adc
xchg
add
push
aad
jle
addr16
imul
sbb
push
jge
push
movsl
and
cld
pop
lods
arpl
outsb
aad
sub
aam
dec
cs
mov
cmp
aas
es
xor
add
rol
int
mov
mov
sub
sarl
xor
mov
jbe
cmp
out
cmpsb
ror
ffree
fstpt
imul
rcrb
sbb
rclb
out
hlt
movsb
jae
mov
negb
xor
add
jmp
jnp
and
cmp
leave
sub
inc
std
lret
orl
punpcklbw
lods
xchg
out
lds
mov
shl
ss
cmp
push
dec
sbb
add
outsl
mov
adc
daa
scas
loope
repnz
pop
mov
mov
in
das
loope
jl
sbb
or
cmc
sbb
mov
dec
out
sub
js
mov
fldenv
aas
cmp
lret
push
xor
push
and
clc
aam
cmp
popa
repnz
sub
mov
adc
mov
dec
test
iret
and
aam
pop
add
popf
dec
sahf
xor
lcall
call
inc
push
jge
sub
aad
cmc
repnz
add
int
clc
or
push
out
mov
mov
pop
ficompl
sub
mov
jp
clc
adc
rep
mov
mov
lret
loope
idivl
icebp
inc
stos
jbe
lcall
sbb
cmpsl
ret
lock
mov
adc
inc
add
rcl
jg
out
jmp
sbb
xchg
loope
cmc
mov
or
adc
repz
aaa
xchg
xchg
inc
dec
fists
cmpsb
mov
lahf
iret
sbb
aad
rclb
popa
jno
cmp
dec
aaa
mov
pop
hlt
les
push
cmp
sti
cmp
std
pop
sub
dec
test
add
mov
push
shlb
fwait
sgdtl
in
inc
or
popa
add
or
jb
dec
cmp
loop
pop
adc
cmp
ds
jl
mov
fwait
movl
mov
pusha
jae
pop
sbb
lret
dec
push
cmove
mov
xorb
pop
xor
jne,pt
xor
adc
fistl
mov
lea
inc
add
sub
repz
push
cld
idivb
cmpsb
jno
push
scas
and
aad
sbb
push
bound
dec
xor
sbb
sub
pushf
jle
cld
or
mov
xchg
enter
jle
ss
xor
scas
push
jb
je
xor
inc
push
and
repnz
adc
dec
pop
into
mov
test
mov
mov
sbb
mov
push
aas
xchg
fmull
sbbb
dec
adc
and
jg
aam
cmp
jbe
cmpsl
mov
mov
cmp
xor
fwait
scas
out
cld
repz
movsb
adc
popl
cmp
stos
adc
pop
test
or
lcall
sbb
push
pop
pop
sbb
movsb
mov
xlat
test
inc
sub
jb
fisubl
icebp
mov
push
loope
mov
in
scas
pop
cmpsb
lods
sahf
mov
or
xchg
cmp
ja
pop
mov
cmp
adc
cmpsb
or
or
jo
pop
cmp
insl
inc
push
jle
adc
pop
jne
mov
std
dec
inc
cmp
imul
push
pop
cmc
push
or
sub
addr16
mov
xor
pop
out
data16
sub
ficoml
mov
push
out
fcoms
insb
xor
jecxz
xchg
cltd
daa
outsl
ljmp
sub
jmp
ljmp
and
mov
sahf
cmp
data16
dec
cmp
pop
inc
outsl
adc
sbb
fucom
scas
popf
inc
enter
adc
mov
imul
jb
jne
mull
fwait
and
adc
aam
or
inc
push
jp
sarb
iret
push
mov
add
arpl
jns
jno
dec
inc
fmull
jne
mov
hlt
rorl
xchg
mov
mov
sub
pop
and
imul
sbb
pop
scas
testl
hlt
lret
pop
jmp
inc
cwtl
push
popf
out
xchg
jp
je
jl
cmp
movsl
sahf
test
fisubl
enter
mov
push
and
jb
mov
imul
lods
call
add
add
pusha
iret
fisttps
stc
es
sbb
pop
test
add
pusha
or
xchg
xchg
mov
aaa
int
cmp
out
jnp
sbb
in
insl
shrb
add
arpl
arpl
mov
xchg
insb
sbb
push
mov
cmp
insl
fadds
and
lcall
sbb
xchg
or
lcall
inc
mov
dec
jbe
lods
xor
sub
sbb
push
test
aas
mov
test
out
dec
pop
sbb
mov
xchg
insb
mov
jg
lea
icebp
lret
movsb
jnp
sub
pop
xor
xchg
and
xor
cmp
xchg
and
out
mov
sbb
icebp
sbb
shrb
lock
pop
add
pop
fucom
cmp
test
lods
mov
outsb
add
push
fs
in
pop
imul
jecxz
repz
and
mov
ja
lods
push
dec
push
xor
add
outsb
outsl
or
jno
insb
mov
fstl
inc
xchg
out
mov
xlat
mov
push
or
subl
inc
fsubrs
out
cmp
arpl
push
rolb
mov
mov
out
stc
int3
shrb
push
mov
jl
adc
rcll
popf
adc
sbb
dec
mov
insb
lods
and
adc
xchg
ret
mov
jecxz
push
adc
mov
hlt
out
xor
rcr
add
adc
add
int3
paddq
in
pop
enter
es
mov
mov
jl
orl
cmpb
sub
xor
sub
mov
ret
gs
mov
test
adcl
fs
or
mov
jno
mov
movsb
and
sub
pusha
fmuls
push
cli
das
sbb
test
sahf
pop
mov
sub
mulb
pop
cmpsl
xchg
iret
add
pushf
mov
mov
push
push
mov
stos
ljmp
rolb
mov
dec
adcl
clc
ljmp
jb
out
cwtl
sbb
daa
pop
or
aad
add
js
mov
les
dec
ret
jb
adc
push
out
cmpsl
cmp
add
stos
add
sbb
outsb
sbb
sub
sub
add
out
cmp
aam
in
mov
mov
jge
lds
sahf
pop
fmull
insl
mov
adcl
das
jle
dec
test
test
mov
les
test
xor
lret
xchg
cmp
xchg
hlt
ds
inc
adc
jl
mov
push
sub
pusha
sbb
lcall
inc
aas
ja
dec
into
imul
dec
mov
xlat
ljmp
fs
mov
lret
movsb
xlat
das
insl
push
mov
iret
into
rcl
ja
popa
mov
push
pop
mov
cmp
addr16
fwait
cmpsb
out
xlat
mov
stc
mov
adc
icebp
sahf
jmp
xchg
jo
movsb
inc
inc
mov
mov
inc
rorb
sahf
sbb
das
jmp
mov
xor
subl
push
or
or
mov
pop
mov
jbe
sbb
mov
sbb
pop
inc
pop
jmp
push
xor
clc
in
mov
adc
shrb
fs
shl
xor
shl
mov
mov
lret
pushf
pop
popf
repnz
int3
cmpsb
sbb
ja
rclb
std
outsl
addb
or
push
and
gs
sbb
jl
dec
rclb
clc
pop
je
inc
ret
andl
movsb
outsb
jb
nop
pop
sub
gs
push
mov
xor
and
pop
outsb
jecxz
fldcw
ret
xor
orb
movb
sarl
xor
jb
clc
ljmp
mov
sbb
sbb
loop
mov
pushf
loopne
sti
inc
movhps
xorl
lds
loop
rcrl
add
inc
pop
jg
je
mov
mov
or
inc
add
or
jl
xor
sub
aaa
ss
test
pop
push
inc
or
test
lcall
loope
fisubs
push
add
mov
test
inc
pop
mov
fs
fistps
int3
pop
inc
inc
xor
jnp
repnz
sbbb
into
sub
test
dec
pop
fdivrp
hlt
and
lods
jb
in
push
inc
popa
stos
mov
push
lahf
mov
inc
xchg
aam
dec
adc
jge
dec
or
mov
paddusw
push
jnp
aas
xchg
mov
ljmp
fs
out
sbb
lret
xor
mov
xchg
pop
rcr
mov
adc
ret
dec
xchg
add
adc
adc
dec
mov
add
lcall
mov
cmpsb
lea
popa
and
add
loopne
sub
stos
lea
jae
lea
sbb
pop
cmp
push
mov
dec
fdivl
arpl
stos
xchg
mov
lods
inc
test
sti
arpl
and
xor
mov
mov
lahf
inc
insb
and
dec
cltd
aaa
rorw
loopne
jge
inc
xchg
mov
jns
popa
mov
jne
icebp
push
or
pop
xor
jge
jl
add
mov
fadds
std
fmuls
sbb
fiaddl
lret
daa
pop
stc
pop
xchg
pop
jp
lcall
fwait
andl
js
mov
js
mov
rolb
push
test
mov
or
sub
push
or
cmpsb
sub
pop
imull
pop
loope
fwait
stos
jle
aam
and
or
mov
mov
mov
inc
aaa
gs
xor
fnstcw
divl
mov
xlat
push
sub
aaa
shr
call
popf
inc
and
push
xchg
ficompl
and
stos
dec
ds
dec
jnp
and
xor
jne
movsb
xlat
jo
push
mov
mov
jmp
cmpsb
lret
adc
mov
in
pop
inc
ljmp
je
rolb
filds
add
aas
adc
xor
frstor
test
pop
adc
std
iret
mov
add
push
sbb
aaa
jmp
pushw
outsb
xchg
data16
mov
mov
into
flds
ficomps
push
lds
mov
adc
outsl
jnp
mov
inc
or
jo
fldt
scas
out
sbb
call
jl
jno
fprem1
fnsave
daa
adc
xor
aaa
popf
stos
das
pop
lcall
rolb
and
lret
repnz
lods
jae
push
add
inc
ret
nop
sub
adc
daa
cmpsb
xor
mov
fs
xor
and
jne
mov
adc
call
rclb
mov
icebp
xchg
outsl
mov
add
add
out
push
addr16
jns
mov
mov
or
adc
pop
rclb
sbb
adc
es
dec
icebp
or
inc
mov
pop
mov
inc
sahf
and
test
add
sub
xchg
divb
leave
cld
xor
sub
imul
cli
fiaddl
xor
fcoms
xchg
lcall
push
out
mov
je
cmp
pop
add
inc
dec
sbb
addr16
dec
insb
xchg
push
popa
insl
pop
cld
ficoml
jnp
mov
loopne
push
dec
repz
push
or
or
mov
ss
push
popf
jmp
test
repz
lods
adc
test
pop
imul
sbb
cld
xorl
stc
xchg
pop
shr
fs
jne
and
stc
pop
or
xor
lock
mov
pusha
cs
mov
mov
cmp
mov
lods
cmp
lock
cmp
pop
ljmp
mov
sbb
xchg
loopne
mov
add
orb
inc
jns
add
cmp
fimuls
xlat
leave
xchg
add
clc
insl
inc
lds
xor
repz
jl
mov
in
movsb
std
je
cmp
xchg
sub
push
cmp
loopne
xchg
sub
cli
fs
mov
mov
ss
in
mov
inc
out
cwtl
imul
loop
jae
and
fildl
sbb
xor
pop
and
hlt
mov
ficoms
enter
mov
fwait
in
aaa
mov
jns
js
sub
std
mov
rorl
mov
cmp
push
add
lods
insl
ljmp
mov
sbbb
mov
les
mov
pushf
adc
aaa
sbb
addb
pop
cmpl
icebp
icebp
jo
xchg
stos
popf
out
xchg
lret
sbb
inc
ljmp
shrl
mov
es
lret
ret
jle
mov
nop
lcall
dec
stos
repz
test
dec
lods
pusha
push
xor
lahf
and
and
fnsave
jae
xor
fwait
push
xchg
jb
cmpsl
mov
sarl
mov
sub
xor
mov
mov
aaa
ja
or
loope
lds
sbb
xchg
pop
push
mov
jge
or
dec
jnp
jp
or
mov
pop
mov
adc
sub
push
faddl
pop
mov
lods
inc
jb
mov
sbb
leave
pop
cli
mov
mov
mov
mov
jl
test
je
fiadds
out
jmp
jno
mov
pop
jne
pop
cmp
lret
jb
mov
call
sub
dec
shl
dec
mov
loop
cmpsl
pop
add
mov
jbe
jb
sbb
lods
int3
cmpsl
sub
push
mov
imul
test
cli
push
xchg
dec
popa
iret
sub
popa
xchg
out
rcrl
and
and
imul
int3
jecxz
lcall
movsb
adcb
xchg
cld
or
int3
fcmovnb
xor
int3
rorl
dec
jge
in
fs
in
lret
xor
fwait
mov
int
stos
xchg
and
cmp
fwait
mov
adc
ret
and
pop
ret
int3
and
daa
push
fwait
xchg
insl
inc
es
popl
mov
push
icebp
jne
hlt
out
add
and
xchg
adc
sbb
imul
push
jo
sub
jmp
xor
jae,pt
xchg
xchg
enter
jp
jp
daa
fidivs
cmp
lret
notb
mov
mov
mov
adc
push
pop
cmp
repz
insl
jle
test
mov
pusha
test
jne
imul
adc
jae
push
daa
fwait
sub
mov
jle
test
mov
repnz
frstor
in
xchg
or
or
sbb
pop
aam
xchg
or
arpl
gs
or
ret
cmpsb
cmc
sar
xchg
lea
sbbl
mov
sub
in
mov
inc
push
adc
or
outsl
mov
and
sar
mov
aam
mov
mov
push
je
and
shlb
loop
dec
cmpsl
jns
cmp
mov
lret
jl
pusha
imul
cmp
add
push
sahf
insb
xor
pusha
arpl
movsb
mov
mov
mov
bnd
or
push
outsl
movl
bound
movsb
xchg
push
fisubrl
jg
jno
xchg
push
ss
notb
in
repnz
push
daa
int
out
cmc
in
orb
jnp
sub
adc
push
sub
xchg
pop
mov
bound
pushf
mov
jge
or
and
sub
push
mov
stc
mov
or
sbbb
imul
decl
adc
mov
mov
push
insl
mov
mov
adc
sub
xor
in
movsb
adc
imul
test
lods
daa
test
xchg
push
shll
daa
lods
dec
xchg
sub
push
mov
addb
dec
and
push
dec
dec
jg
pop
aad
push
inc
xchg
stos
cwtl
icebp
mov
mov
pop
imul
jp,pn
and
xchg
testb
sbb
scas
or
shlb
imul
and
fstp
icebp
nop
cmc
aaa
sbb
icebp
out
mov
cmp
lock
add
clc
jge
pop
test
loopne
mov
pusha
ja
add
push
stos
int3
lcall
test
xchg
shlb
pop
nop
pop
lcall
aas
xor
aam
adc
mov
adc
leave
in
out
sti
addr16
enter
push
inc
mov
pop
rcll
xchg
out
mov
adc
inc
insl
xchg
test
call
in
push
mul
aam
aaa
popa
jle
cltd
adc
jmp
in
sti
std
inc
or
add
dec
movsl
sbb
dec
std
lock
dec
dec
cmpsl
std
and
addb
call
in
call
daa
icebp
pop
and
mov
mov
aaa
test
test
daa
popl
jnp
iret
fwait
jnp
push
cs
aam
xchg
mov
daa
addb
push
inc
scas
lret
insl
pop
adc
push
mov
add
sub
mov
rorb
add
call
fwait
sub
mov
inc
jecxz
and
jge
sbb
imul
or
xchg
adc
or
shr
push
es
sbb
xor
sub
cmp
ds
mov
out
inc
xchg
and
mov
in
push
jmp
xor
daa
or
cli
fwait
inc
imul
cld
out
push
roll
mul
out
leave
sbb
push
movsl
or
adc
push
int
jno
cli
xchg
jl
and
jmp
cmpsl
ret
cmpl
fdivs
inc
ficoml
cli
push
dec
das
outsb
jbe
fbld
add
js
insb
mov
push
cmpsb
fldt
pushf
and
cmp
cs
fst
in
mov
inc
inc
jne
mov
out
sub
push
addr16
pop
sbb
add
xchg
pop
fists
in
xor
pop
sub
jb
stos
mov
xchg
or
mov
std
dec
mov
mov
testl
in
out
inc
in
jecxz
mov
xorl
sub
cmpsl
mov
add
loop
inc
cmp
xchg
and
push
inc
sub
or
je
cmp
stos
lock
fimuls
shll
mov
pop
ret
int3
fidivl
repz
or
mov
daa
test
loopne
fstps
mov
inc
inc
mulb
mov
call
mov
jp
inc
mov
imul
push
mov
je
scas
xchg
mov
shrb
dec
rol
clc
popf
and
pop
push
cmp
cmp
dec
lds
lahf
test
cmpsb
dec
ret
addb
mov
filds
xchg
popa
shrb
in
sbb
bound
mov
fcmovbe
pop
je
ret
scas
mov
pop
hlt
cld
inc
and
fs
int
and
mov
jp
sub
test
nop
sbb
into
dec
mov
jmp
sbb
and
jp
xor
cmp
xchg
pop
outsl
push
jecxz
bound
mov
lea
sbb
and
stc
mov
adc
push
ret
movsl
mov
and
fwait
gs
std
sub
sarl
iret
data16
cmc
add
add
xor
jmp
leave
dec
rcll
in
sub
and
hlt
aad
xor
arpl
cmpsl
push
fnstcw
fs
xlat
clc
sbb
jg
mov
cmpsl
mov
xor
push
pop
mov
iret
push
dec
sbb
xorl
xor
scas
test
push
mov
push
lcall
mov
xor
leave
push
fs
out
inc
adc
or
jle
pop
pop
sbb
insb
dec
mov
push
xor
lock
cmc
pop
or
inc
jg
loop
jne
push
adc
fwait
aas
pushf
stc
inc
add
pusha
push
fwait
pop
je
call
cmpsl
inc
mov
mov
cmpb
mov
and
add
into
or
jbe
aam
push
xchg
loopne
adc
mov
jno
cmpsb
pusha
xchg
leave
sub
jecxz
push
mov
ret
ret
inc
cmp
xchg
js
mov
imul
push
sbb
inc
lcall
sub
mov
sub
pop
mov
jge
or
adc
xchg
sub
or
icebp
cmpsl
push
sub
xor
cltd
sti
popa
inc
gs
int
add
stos
inc
dec
mov
aad
mov
xchg
jns
in
sbb
maxps
dec
int3
add
repnz
movsl
movsl
jge
mov
xor
xor
rolb
gs
lods
xchg
stos
arpl
pusha
and
ljmp
adc
aad
lret
xor
iret
inc
or
and
push
movsl
test
in
push
dec
rolb
scas
int3
dec
mov
pop
sbb
lahf
faddp
lret
loopne
rcl
clc
add
repnz
fists
cmp
jno
es
cli
sbb
pop
rcl
loopne
push
mov
lahf
jo
dec
jmp
pop
mov
sub
test
pop
mov
xlat
mov
repz
je
iret
sahf
xor
sbbl
divb
push
std
pusha
inc
pop
leave
roll
lds
inc
pop
sub
jecxz
push
mov
xchg
inc
inc
mov
out
mov
mov
jo
cmp
pop
adc
and
test
jl
jno
pop
xchg
ds
fstp
cmp
cli
jecxz
sbb
sub
lods
pop
dec
sahf
inc
in
mov
sbb
adc
cli
adc
push
test
mov
pop
out
sbb
jns
and
xlat
sti
and
data16
adc
lods
faddl
push
cmp
mov
lea
iret
rcr
or
mov
movsl
jns
add
mov
lods
xor
sbb
imul
sub
pusha
popa
idivl
data16
or
lods
ret
pop
ljmp
mov
daa
imul
dec
aam
shlb
xor
xor
insb
loop
arpl
inc
xchg
sti
mov
test
pop
pop
sarb
mov
sub
sub
xchg
jge
lock
fcomps
mov
outsl
ds
adc
ljmp
test
or
pushf
fwait
adc
fcomps
cwtl
cld
jnp
cmp
mov
add
or
clc
shrb
jmp
test
outsb
inc
sub
cmpsb
jne
pop
pop
into
xchg
cmc
movsb
hlt
icebp
mov
push
addr16
ret
fwait
icebp
cli
mov
outsb
std
push
jne
inc
push
loope
stos
xchg
movsb
cmp
push
pop
xchg
loope
and
cltd
xchg
add
stos
into
arpl
in
shrl
cli
cmp
push
lds
add
das
xlat
test
xchg
stos
iret
fldenv
fcomps
pop
push
fwait
repnz
jmp
icebp
or
bound
shl
pop
cmc
sbb
add
daa
into
pop
mov
sbb
sbb
pop
xlat
xor
fdiv
lods
int3
sbb
sub
dec
mov
or
aas
sarl
or
call
aam
dec
ss
xor
pop
ljmp
icebp
sbb
jbe
pop
adc
mov
jae
xlat
and
into
mov
jl
mov
push
sub
cmp
mov
outsb
int
add
pop
mov
fucomi
das
sub
movsl
inc
pop
mov
outsl
dec
jne
or
out
mov
or
sbb
xor
add
js
loope
or
repz
loop
adc
add
xchg
push
insl
inc
popf
mov
icebp
or
push
sub
push
dec
or
fisubl
pusha
push
or
dec
xchg
push
int
je
adc
mov
ficoml
icebp
pop
movsl
cwtl
push
xor
push
orb
aam
and
test
sarb
stos
push
call
sbb
aam
inc
daa
rorb
int3
inc
pop
adc
iret
adc
and
ja
lret
sbb
xchg
pop
andl
inc
xchg
jnp
inc
xor
or
out
rclb
sbb
insb
adc
addr16
adcl
jbe
in
dec
add
arpl
lret
popf
xchg
inc
jbe
push
fsubrl
jecxz
lahf
pop
cwtl
pop
lret
sarb
mov
movsb
mov
scas
push
and
mov
fdivp
mov
add
mov
and
into
addr16
popf
fidivrl
pop
mov
add
xchg
xor
push
xlat
xchg
inc
adc
jnp
rcrl
dec
inc
add
jp
mov
loopne
dec
ret
shlb
push
adc
fwait
cmp
lahf
rorl
mov
or
js
test
xor
dec
or
xor
pop
hlt
shlb
andb
adc
sub
test
lahf
pop
mov
mov
push
mov
xor
adc
sbb
popa
scas
dec
dec
stos
insb
fildl
mov
add
in
or
inc
add
mov
pop
sub
lods
pop
xchg
inc
test
dec
js
cltd
add
in
gs
lret
and
shll
mov
push
jnp
cmp
jne
xor
jp
pop
adc
pop
in
or
cmp
sar
in
fstpl
mov
inc
and
dec
and
dec
mov
inc
xor
mov
and
cmp
lahf
mov
or
cs
dec
out
iret
jo
lahf
push
jb
xchg
in
mov
mov
lock
lods
imul
and
gs
or
arpl
out
rorl
sbb
stc
test
push
xchg
mov
test
je
and
lods
pop
mov
cs
fisubs
fstpl
inc
xor
mull
outsw
pushf
xor
mov
popa
ljmp
mov
cmp
jle
cmpsl
cmp
sbb
inc
xchg
fmuls
in
mov
icebp
sbb
or
addr16
dec
fistpll
cmpsl
fcomps
ljmp
fsubr
push
xor
cld
decb
mov
popf
adc
adc
mov
lret
leave
rorb
pushf
mov
jmp
add
add
xor
mov
mov
sbb
ror
int
push
mov
xor
push
mov
lret
or
fnsave
lahf
pop
add
pop
push
xor
sub
cmp
cli
jl
push
and
dec
in
or
lret
fwait
push
stos
dec
sub
enter
sti
dec
loope
stc
popf
lods
inc
mov
shlb
cli
mov
cmp
repz
adc
enter
ret
jl
push
mov
and
jne
movsl
outsb
repnz
adc
mov
jo
mov
fnstsw
cmp
out
int3
jnp
mov
popa
out
lahf
arpl
les
lock
or
or
stos
nop
jno
pop
ljmp
xorb
mov
mov
xor
pop
into
xchg
mov
push
leave
out
dec
pop
xchg
loopne
arpl
adc
mov
imul
push
adc
xchg
cmp
push
lock
imul
bound
mov
negl
pusha
sub
stc
insb
jmp
inc
lret
mov
in
sub
repz
xor
inc
mov
repz
lods
cwtl
cmc
imul
aas
adc
cltd
test
xchg
or
adc
aas
sub
mov
std
das
arpl
xchg
pop
jecxz
mov
mov
outsb
pop
into
xor
roll
imul
add
mov
ret
sbb
mov
pop
outsb
jle
xor
dec
cmpsb
ss
sbb
jmp
mov
mov
jge
cmp
dec
fdivs
fdivs
xor
pushf
xchg
sub
dec
or
mov
out
mov
or
mov
cld
and
je
ror
aaa
inc
popa
frstor
dec
hlt
faddl
nop
loope
repnz
testl
pop
in
sbb
pop
lods
sub
cs
icebp
and
aad
mov
insb
jns
shlb
aaa
shlb
add
cmp
fistl
dec
jnp
les
push
fistps
dec
jo
jb
out
jno
fisttpll
or
icebp
pop
mov
loop
cmp
push
js
cld
dec
arpl
jmp
aad
pusha
inc
xchg
shlb
add
lret
out
call
popa
mov
jmp
lcall
push
fadd
pause
outsl
add
out
shl
mov
push
rcr
sub
lods
lods
mov
pushf
mov
sub
imul
cmp
nop
sbbb
mov
pop
jg
xor
mov
push
divl
cmp
or
cmp
movsl
arpl
scas
dec
fsts
sbb
push
xchg
pop
sbb
popf
inc
xchg
pop
lret
hlt
mov
sub
sahf
mov
movsl
cmp
pop
test
aaa
negb
sbb
icebp
jo
sti
xor
andb
pop
por
into
fmul
cmp
das
mov
add
push
ja
bound
cmp
inc
mov
lds
rolb
aam
inc
push
movl
sub
shlb
push
xchg
out
cmp
movsb
decl
cmp
test
roll
push
pop
andnps
sbb
mov
stc
inc
dec
std
adc
push
mov
and
sbb
ds
mov
ljmp
daa
sbb
or
xchg
adc
sub
push
lods
mov
or
sbb
outsb
inc
cmp
xchg
xor
and
insl
cmp
adc
addb
int
cmp
or
ja
adc
jg
daa
out
lea
popa
bound
xchg
popf
dec
out
mov
jne
jmp
adc
jge
push
xor
mov
outsb
and
js
subl
cwtl
inc
or
jns
dec
imul
sbb
sbb
jb
jecxz
push
das
lds
nop
or
dec
adc
repz
rolb
jecxz
jae
adc
inc
cmp
cmp
adc
xchg
sbb
cmp
sbb
push
mov
pop
movsb
andb
loopne
or
in
mov
ret
mov
sub
pusha
mov
mov
sbb
mov
in
xor
push
out
lret
mov
adc
sub
sbb
inc
popa
insl
addb
in
js
ljmp
or
jns
add
rcrl
mov
jg
data16
xchg
movd
dec
xor
push
fsubl
mov
insb
ret
pop
movsl
cmpb
cmp
adc
xchg
aam
fsubs
ss
inc
int
jae
fsubs
mov
push
push
ja
aad
ret
sbb
mov
inc
dec
jecxz
aas
stos
mov
or
repnz
fdivrs
dec
cmp
ja
idivb
mov
xor
jae
cmp
clc
adc
daa
shlb
xchg
mov
shll
mov
sbb
cmpsb
mov
sbb
mov
fnstsw
pop
and
xchg
lea
xchg
call
sub
sbb
or
xlat
lea
leave
mov
loopne
in
je
jnp
cmp
cli
outsl
and
out
ficomps
hlt
gs
mov
sub
das
cmp
sub
imul
test
scas
rorl
cmc
mov
test
scas
je
jge
lods
xchg
icebp
xchg
jmp
dec
sarl
adc
mov
call
andl
imul
cwtl
cltd
stos
mov
pop
sub
lods
popa
sub
xchg
andl
data16
mov
add
xchg
insl
ljmp
jge
push
repz
push
roll
in
fcompl
xchg
jecxz
jno
mov
out
loop
pop
jecxz
dec
add
test
insl
pop
and
fbstp
scas
leave
push
pop
xchg
mov
in
js
jge
and
xlat
add
xchg
aas
shr
adc
pop
push
sbb
leave
divl
shlb
adc
adc
xchg
dec
xchg
xchg
je
inc
hlt
jo
cmp
adc
add
cmpsb
lods
stos
or
int3
imul
call
adc
sub
jbe
divl
aaa
cmp
xor
lahf
cwtl
movsb
mov
pushf
out
dec
aas
fidivs
mov
bound
aas
cmp
sbb
sub
mov
incl
fwait
adc
mov
xchg
pop
loope
es
repnz
test
lds
sahf
xchg
xor
jg
push
xchg
aaa
std
push
sub
xor
sbb
lret
ret
gs
icebp
push
pop
scas
sub
ret
xchg
sub
xchg
pusha
int
into
outsb
dec
fisttps
popa
inc
fistpl
loope
cltd
and
sahf
dec
pop
jns
nop
xchg
sbb
dec
cmp
adc
sarl
adc
hlt
lods
jno
xor
xorb
scas
lahf
sub
add
pop
stc
xchg
sbb
cltd
in
orb
jmp
push
loopne
cwtl
add
sub
pop
adc
fs
push
mov
jb
inc
mov
jle
add
fwait
stos
jne
test
test
mov
jne
ljmp
fmuls
mov
xor
adc
movswl
pop
xchg
xor
mov
scas
sbb
imul
into
addl
adc
sarl
sub
leave
scas
imul
stc
jge
sbb
cld
lahf
pop
into
mov
fwait
out
xchg
lock
mov
sub
inc
cmc
jae
mov
dec
sbb
inc
nop
into
fnstcw
pop
mov
jo
test
mov
inc
inc
call
test
lahf
mov
add
into
jp
ljmp
movsb
dec
icebp
js
inc
hlt
into
out
mov
dec
outsb
pusha
sbb
inc
jbe
jle
push
dec
ljmp
leave
and
ds
add
stos
leave
add
in
xchg
clc
inc
push
or
push
mov
int3
cs
frstor
or
test
xor
stos
sub
mov
mov
cmc
test
int
rorl
sub
shl
cmpsl
jae
mov
jge
sub
pop
push
xor
sbb
out
push
cmpsl
outsl
aaa
jne
sub
leave
testb
stos
dec
cmp
in
push
sbb
mov
fcompl
xchg
ret
pusha
test
mov
outsb
xchg
jnp
adc
int3
push
mov
xchg
add
jno
jle
rcrl
lea
loopne
mov
daa
fcmovnb
aad
mov
sbb
stos
in
pop
sbb
icebp
insl
push
pushf
ja
enter
mov
mov
test
sbbl
in
and
xchg
sbb
std
jge
in
adc
mov
hlt
std
mov
jno
cltd
xor
mov
xor
xor
xchg
gs
jns
aad
outsl
test
insb
pop
xchg
leave
aam
xlat
das
and
pop
and
mov
inc
xor
push
int3
adc
mov
repnz
pusha
out
icebp
dec
and
push
adc
add
subb
mov
or
xor
mov
jge
outsb
pop
fstps
outsb
fs
std
fimuls
int
aas
outsb
xor
mov
lea
mov
cwtl
mov
fmulp
dec
test
pusha
es
aam
iret
cltd
imul
outsb
xor
pop
test
out
test
push
mov
mov
lret
movsl
mov
int3
stos
pop
push
mov
out
dec
fsubrp
popf
push
sub
arpl
stos
adc
xchg
push
jns
mov
jg
xchg
add
outsl
ret
jge
or
lahf
or
jbe
mov
mov
xchg
scas
adc
jle
out
in
icebp
test
pop
imul
pushf
push
out
adc
aas
push
pop
push
repz
mov
testb
jnp
xchg
test
mov
fsubs
push
mov
push
mov
push
xor
shlb
pop
pop
jo
mov
sbb
lret
mov
jno
or
dec
rorb
addb
and
push
pop
push
sub
push
mov
or
insl
inc
lret
mov
cmpsl
pop
lods
loop
dec
and
out
sbb
and
pushf
popa
xor
jg
jno
sub
jne
xchg
sub
sub
xor
loopne
inc
ret
mov
mov
pop
pop
mov
or
out
mov
stos
shlb
incb
popa
and
push
add
xchg
sar
push
je
add
call
inc
mov
filds
dec
bound
sub
sahf
push
push
and
mov
mov
cltd
mov
hlt
pop
and
in
jp
push
inc
aaa
sti
sub
inc
sarb
imul
pop
jnp
repz
flds
cmp
push
adc
jmp
push
out
xchg
mov
scas
imul
pusha
in
dec
sbb
stc
sub
fwait
xor
adc
xor
aam
aas
add
or
mov
jne
push
push
push
fsub
adc
shlb
pop
fadds
lods
test
jmp
popf
in
dec
test
jp
push
add
sti
adc
or
fucomip
into
xor
mov
or
jmp
xor
jne
mov
cmc
sub
mov
sbb
adc
inc
mov
cli
mov
cltd
push
ret
loop
jle
cld
mulb
adc
das
subb
or
fidivrl
popf
pop
movsl
popa
into
adc
push
aad
out
int
ljmp
test
sti
fldenv
pop
jbe,pn
fsts
in
scas
inc
dec
in
out
mov
adc
add
je
sub
test
mov
scas
cmp
fildl
lret
scas
insl
rorb
xorl
mov
mov
lods
and
int3
jnp
xchg
scas
ja
push
dec
cmc
xchg
or
hlt
push
and
xchg
repnz
arpl
pop
jns
add
xchg
loopne
scas
gs
push
or
xor
sbb
or
cmc
mov
dec
fstps
sarl
and
adc
jp
icebp
pop
stc
mov
daa
add
stc
xorl
loop
xchg
push
scas
cltd
test
jns
test
sub
fildl
popf
iret
adc
mov
into
xchg
mov
inc
out
jge
stc
xchg
shll
push
dec
and
jge
or
jmp
insb
inc
push
adc
jmp
lret
sub
sti
mov
scas
fwait
int3
add
jno
bswap
ljmp
bound
rcll
xchg
mov
inc
mov
ret
jno
scas
push
sbb
push
jl
push
and
or
push
push
loop
inc
add
fnstcw
iret
nop
scas
sub
jnp
jmp
pop
mov
out
push
aas
cmpsl
inc
xchg
dec
pop
mov
push
mov
jnp
bswap
xchg
sbb
aas
jp
add
sub
push
pop
fsubr
mov
mov
mov
pushf
das
cmovb
xchg
lret
inc
ret
cmp
jne
push
xor
sbb
sub
stos
js
add
push
pop
fisubl
gs
insb
xor
jle
mov
aas
arpl
add
out
pop
stc
cmpsl
mov
in
adc
ja
ficoml
repnz
mov
gs
and
fsubr
jg
dec
fidivl
arpl
push
jle
pop
xchg
popa
sub
jb
punpckldq
rep
jl
push
rcrl
jl
addl
std
add
gs
imul
add
jge
mov
cmc
call
push
leave
jge
cmp
aam
lret
ss
pop
xchg
and
mov
ret
orb
jl
mov
push
test
fs
inc
jo
sbb
rcr
push
push
insb
insl
in
outsb
aad
lods
push
or
shlb
mov
dec
mov
fstpt
cmp
ret
test
xor
mov
jp
js
mov
push
cmp
lods
repz
test
repz
adc
or
push
ja
sub
lods
push
jnp
nop
movsl
ds
outsl
cmp
psraw
ss
mov
ret
les
cwtl
mov
and
or
roll
cwtl
sbb
aad
ret
mov
pop
loope
ret
bound
sub
mov
fwait
mulb
out
cmpsl
sub
jae
ja
movsl
push
ja
mov
aam
sbb
fisubrs
xchg
fnstsw
pop
scas
mov
pop
fadds
cltd
xchg
xor
jmp
cwtl
in
fistps
es
cmpsl
fbstp
or
lea
loope
xchg
stos
gs
jo
jl
xor
nop
or
fistps
inc
xor
or
push
fistps
imull
stos
into
or
sbb
pop
pop
mov
loop
adc
sar
xchg
bound
lods
xor
test
mov
jno
repz
xlat
lret
add
fnstcw
jns
pop
lock
push
ja
rclb
cmp
push
inc
icebp
mov
pop
pop
jnp
cltd
inc
loopne
adc
xchg
sbb
mov
imul
jg
nop
mov
and
mov
sub
cmpb
cmp
dec
ss
aas
fbstp
dec
aad
dec
ja
insb
cmpsb
push
push
loopne
call
daa
fnstcw
in
daa
mov
jecxz
add
push
sbb
lods
xchg
xchg
sbb
pop
aam
push
cmp
lods
add
xchg
pop
ret
xchg
in
in
fnstenv
mov
enter
les
sub
sbb
pop
push
mov
push
pop
add
cmp
sti
shll
mov
cmp
mov
jle
add
xor
shrl
xchg
sub
stos
inc
je
lods
ljmp
test
mov
addr16
arpl
jmp
mov
sub
mov
cmp
sbb
in
cmp
and
inc
mov
negb
aaa
pop
ja
dec
xchg
jns
test
fmull
sub
clc
fwait
sbb
jg
mov
cmp
jb
popa
sub
pop
and
xor
std
pop
mov
fidivrl
xchg
mov
in
int3
out
push
movsb
test
inc
hlt
imul
imul
jae
popa
ret
cmp
into
call
mov
pop
push
cmp
int
sub
sub
pop
lret
jae
mov
std
cli
iret
lds
or
pop
push
pop
or
int
pop
and
push
pop
pop
adc
mov
or
icebp
movsl
mov
push
sub
inc
dec
xor
xchg
xchg
inc
push
jns
dec
mov
add
adc
test
mov
cli
enter
clc
daa
imul
sub
imul
pop
lahf
in
pop
and
ret
jge
mov
inc
rcr
aas
adc
push
adc
add
jecxz
mov
test
pop
mov
fsubs
iret
lret
cld
push
dec
cwtl
pop
dec
fs
jb
nop
aad
xchg
mov
out
std
push
sub
fidivl
adc
jp
cmpsb
sbb
mov
xchg
push
inc
dec
pop
fsubrl
test
pop
pusha
je
test
pop
jno
xchg
cmpsb
jge
or
cmc
jl
dec
push
stc
scas
mov
jno
cmp
fwait
aaa
arpl
mov
and
mov
cmp
aas
or
insb
test
lcall
popf
sub
sarb
jmp
cmp
repz
xor
out
stc
in
frstor
test
sbb
add
int
mov
sub
in
adc
push
adc
jne
fsubrl
pop
shl
adc
inc
je
imul
jne
jp
or
xchg
jmp
hlt
dec
add
enter
inc
and
jns
sub
xchg
xchg
sbb
in
pop
aad
repz
cmp
jg
push
pop
nop
rol
pushf
dec
and
cli
movsl
lret
xor
mov
imull
mov
cmp
lds
sbb
dec
fldenv
imul
adc
sub
lock
out
inc
not
aaa
jge
insl
orb
rcrb
popf
icebp
xchg
jp
icebp
sub
mov
insl
daa
or
xchg
xor
xchg
mov
xchg
sub
ret
sbb
mov
mov
inc
mov
cmp
nop
rcrl
and
out
xchg
loope
cmp
xor
test
jns
imul
or
sbb
cwtl
movsl
sub
dec
lods
xlat
adc
popf
and
mov
ss
xchg
arpl
and
imul
fistps
mov
out
dec
jl
addb
test
test
mov
cmp
shll
in
sbb
jecxz
adc
xlat
inc
fwait
aad
cmp
ja
ja
mov
lods
push
xchg
nop
insl
xchg
stos
loopne
inc
mov
or
cwtl
mov
stos
add
in
clc
sub
dec
idivb
xor
and
ret
js
in
or
out
pushf
jmp
push
icebp
shr
rcrb
test
das
xor
and
fnsave
inc
pop
or
mov
wbinvd
dec
xor
mov
daa
bound
push
pop
pop
ret
fcomip
sub
sub
sub
dec
push
stc
dec
sbb
es
jg
xchg
cmp
stc
dec
sahf
arpl
fs
fidivs
push
dec
or
mov
scas
push
mul
aaa
jmp
clc
jne
push
adc
pop
or
jecxz
lods
insl
push
je
out
lock
xchg
lahf
cmp
dec
jo
dec
int3
push
fldt
or
xor
xor
leave
imul
out
std
cs
loopne
in
pop
int3
cmp
cmp
sub
or
movsb
xchg
outsb
and
mov
out
mov
aas
leave
jecxz
adc
ds
popa
inc
scas
out
in
mov
sbb
cs
or
inc
xchg
cmp
inc
cmpsb
test
dec
fists
adc
xorl
push
lock
sbb
adc
jno
xchg
xchg
adc
out
mov
dec
sbb
push
xchg
mov
mov
imul
jg
xlat
int3
xchg
push
cmp
push
inc
out
xor
movsl
jp
test
outsl
inc
ljmp
rcl
lret
sub
jb,pt
push
sub
or
cvtpi2ps
shlb
sub
das
push
adc
xchg
xor
clc
imulb
out
out
rorl
xchg
aas
scas
jmp
and
xchg
sti
inc
xchg
sub
push
cmp
sub
dec
popf
dec
inc
cmp
sub
jno
add
test
in
and
les
imul
movsl
sbb
sbb
fwait
push
lcall
mov
push
rcll
rolb
icebp
stos
xchg
lea
jno
and
xor
nop
popf
out
movaps
mov
push
scas
aaa
sub
test
cs
push
movsb
push
xchg
jge
cmp
push
pop
fsubrs
jmp
cs
pop
jge
vpunpckhdq
mov
loope
mov
das
jo
loop
jns
test
andb
lret
ds
xchg
xlat
xchg
mov
divb
jge
cmpsb
inc
add
sbb
jle
int
int
push
insl
push
pop
daa
xchg
rcr
pushl
movsl
mov
jmp
lods
add
mov
or
cwtl
in
jo
lea
bound
dec
mov
sti
repnz
fmuls
mov
sahf
and
in
sub
push
out
inc
cwtl
cmp
xor
jbe
repz
iret
mov
xchg
lahf
mov
pusha
or
cmc
repz
in
or
pop
pop
mov
mov
mov
in
jb
inc
push
xchg
sub
movsl
mov
cmpsb
cmp
mov
mov
arpl
movsl
in
push
dec
inc
outsb
outsl
jg
xor
mov
test
mov
xchg
add
xchg
and
cwtl
adc
mov
enter
sub
movsb
push
in
daa
add
dec
fwait
mov
push
inc
icebp
mov
ja
mov
pop
test
stc
jae
enter
std
mov
push
sbb
cli
mov
and
mov
jg
pushf
and
mov
add
pop
mov
cmp
inc
loope
fs
add
mov
sub
hlt
psrad
add
mov
enter
gs
ret
jmp
push
in
js
lea
pop
or
sub
push
cwtl
jno
test
push
pop
std
or
shrl
inc
adc
add
push
orl
sub
mov
xor
sub
lret
xchg
scas
dec
dec
pop
pop
addb
stos
and
cmc
iret
xor
test
sbb
inc
jno
jg
int
cmp
pop
or
add
out
sub
add
hlt
movsb
and
stc
fnstcw
mov
test
mov
xchg
cld
and
jge
ret
hlt
outsl
mov
std
cmp
pop
rcr
jne
outsl
jge
inc
icebp
adc
das
mov
out
mov
insl
hlt
cmp
fcompl
gs
out
mov
pop
pop
das
xchg
cltd
out
iret
inc
sti
mov
push
push
inc
ljmp
lahf
add
inc
clc
adc
ds
xchg
dec
push
ret
mov
sbb
stc
aaa
dec
imul
inc
xorb
and
dec
fcmovb
fs
repnz
push
call
adc
in
add
nop
mov
sti
and
dec
sub
xor
pusha
shr
insl
jmp
mov
adc
cli
or
lcall
fstps
jb
fimuls
popf
mov
mov
ficoms
and
cmp
jle
xchg
lcall
push
lret
imul
or
cmpsl
popa
pushf
in
in
push
daa
fadd
inc
cltd
inc
mov
inc
pop
popf
int3
pop
jle
jno
imull
scas
mov
sbb
shrl
ja
and
cs
hlt
xchg
pushl
sbb
fsubrl
push
test
push
lds
loop,pn
sti
fnsave
jne
bound
iret
jg,pt
test
sub
xlat
ljmp
jmp
inc
les
sbb
add
fidivrl
jo
cmpsl
and
fildl
pop
and
pop
mov
add
data16
and
aas
xchg
out
aad
xchg
cmp
sub
or
push
dec
dec
xchg
subb
or
shll
mov
sti
idiv
mov
outsb
mov
in
jne
and
sbb
or
adc
mov
or
aad
cmpsl
adc
rol
mov
pop
insl
fcompl
enter
jp
push
cmp
dec
aad
je
cmp
pop
mov
lds
pop
hlt
fdiv
cld
mov
das
mov
cmpsl
fimuls
jo
jl
mov
mov
mov
out
das
popf
xor
mov
and
mov
dec
cmp
flds
outsl
jne
insl
add
scas
test
add
and
fidivrl
dec
leave
pop
sub
roll
jecxz
ret
scas
arpl
mov
leave
clc
mov
stos
cli
xor
cmp
out
add
adcb
and
push
xchg
mov
dec
rcrl
jb
mov
shrl
stos
mov
shlb
push
fucomi
push
int
dec
sub
sti
mov
popa
stos
ffreep
aam
jb
xor
jo
stos
add
ret
fnstenv
sahf
pop
dec
fxch
jmp
cli
mov
test
scas
add
xchg
xor
in
push
out
mov
mov
inc
shlb
loop
or
xchg
jl
mov
mov
mov
add
xchg
cmp
add
or
xchg
mov
int3
ret
in
or
imul
jnp
aas
aad
mov
xorl
loope
mov
inc
adc
adc
xor
cmp
into
fnstsw
xor
int3
lahf
idiv
and
sbb
pop
cmp
shl
add
jb
lock
or
rcrb
and
jmp
das
cmpsb
subb
cwtl
popf
cmp
rorl
xchg
jbe
nop
jp
dec
outsl
xor
dec
adc
movsb
lret
xor
pusha
xchg
dec
sub
lahf
aam
jo
add
pop
mov
add
push
in
ds
in
adc
cmp
lcall
xor
mov
lea
inc
xor
test
jp
xchg
push
push
jl
ficoms
push
or
data16
aas
push
lock
sub
out
sbb
sti
jecxz
lcall
jl
out
loop
dec
ror
inc
pop
out
stc
pop
repnz
aad
pop
sbb
inc
repz
leave
daa
outsl
cltd
sbb
mov
aas
out
jbe,pt
inc
stos
in
divb
inc
push
adc
mov
pushl
icebp
cmp
cmp
pop
sti
xchg
push
ficoms
pop
jge
and
or
imul
mov
movsb
ret
sbb
hlt
mov
and
stos
xchg
xchg
icebp
in
out
and
adc
fdivl
mov
clc
ljmp
jnp
xchg
jnp
test
add
cmp
in
add
adc
fadds
cmp
adc
or
das
pusha
jbe
sahf
mov
popa
mov
pop
ret
ficompl
test
jecxz
out
je
iret
lods
fimuls
sbb
jne
pop
scas
add
inc
sbb
cli
cli
out
dec
mov
pop
test
jle
jle
xchg
and
repnz
out
mov
insb
leave
and
dec
mov
or
mov
add
les
in
enter
cld
adc
cmp
or
sahf
mov
xchg
lret
daa
test
dec
xor
adc
test
cmp
sbb
push
ret
sub
xchg
xchg
mov
xchg
sbb
lock
fsubs
enter
mov
push
roll
cwtl
cltd
es
aas
lea
dec
xor
pop
lahf
aaa
fimull
push
sub
mov
movl
stos
push
sub
test
shrl
lret
mov
into
xor
es
pushf
xlat
sbb
mov
pop
hlt
mov
std
addl
mov
and
stc
and
adc
adc
pop
dec
jg
gs
in
mov
bound
faddl
pop
mov
sbb
das
shll
mov
mov
into
ja
divl
jne
fists
cs
inc
dec
inc
incb
add
in
lea
sbb
ljmp
sub
ss
jp
repz
dec
ret
or
in
pop
adc
mov
dec
or
loope
dec
inc
adc
ds
lret
sub
pop
outsb
bound
xchg
scas
xor
clc
inc
lock
push
popa
adc
pop
sub
jb
rolb
dec
inc
mov
and
jge
cmp
rolb
cmp
shl
pop
jecxz
lds
jbe
cwtl
int3
es
mov
movsb
xor
push
cld
push
add
outsl
xchg
ja
enter
sarb
mov
jne
cmp
stos
lods
rcrl
cwtl
inc
jp
pop
sbb
or
push
jle
mov
mov
out
dec
push
out
mov
xchg
push
cs
and
daa
jmp
int
fdivl
cltd
xchg
int
adc
mov
loopne
push
cs
in
sub
push
sti
mov
repnz
cmp
lret
add
leave
adc
or
mov
dec
icebp
pop
push
and
dec
inc
push
out
inc
pushf
adc
push
cmc
popf
ljmp
sbb
rclb
push
cltd
popa
adc
cmp
push
sbbb
shlb
mov
cmp
dec
fsubrl
inc
mov
mov
add
mov
ja
mov
sub
aad
push
xor
pop
idiv
loop
mulb
mov
push
sbb
dec
rcll
int
fmuls
frstor
aam
out
or
pop
pop
fsubs
adc
ficomps
add
cmp
jns
sbb
sub
aaa
mov
loop
in
mov
xor
std
lahf
shl
enter
jns
ret
mov
or
xor
lret
pop
outsb
je
in
stos
push
ljmp
movb
mov
pop
lods
das
pop
xchg
jl
pop
pop
or
dec
and
add
imul
xor
std
lcall
rcrl
or
adc
das
hlt
adcl
add
jg
add
sbb
aad
push
and
inc
arpl
adc
pop
xchg
jge
xor
jmp
xor
bound
xchg
xor
jecxz
fldz
mov
mov
loopne
rcrb
jl
dec
sbb
out
add
imul
mov
lea
outsb
mov
jg
outsb
sbb
lock
mov
add
js
std
sbb
lea
cmp
inc
test
xchg
mov
int
mov
jmp
and
mov
xor
adc
xchg
add
sbb
movsl
stc
enter
fldenv
dec
lods
jmp
scas
jle
jecxz
adc
inc
mov
push
cmp
divl
ja
push
jmp
hlt
std
or
mov
sti
int3
in
cmp
addr16
and
xlat
cmp
mov
imul
repz
mov
inc
sbb
sbb
jne
mov
xor
and
xchg
mov
push
test
je
pop
lcall
inc
xor
call
xchg
or
stos
pop
das
mov
in
and
std
cmpsb
filds
mov
xchg
mov
push
pop
fildl
aaa
jo
orb
fstpl
xor
adc
sbb
loop
loope
cwtl
movsb
inc
das
cmp
cltd
mov
in
pop
mov
jmp
std
jl
dec
push
cwtl
mov
scas
aaa
sbb
fcoml
mov
jne
xchg
mov
mov
sbb
mov
pop
leave
test
cmpsl
fs
adc
add
mov
adc
daa
xor
mov
dec
sti
clc
mov
out
insb
out
cli
adc
inc
mov
scas
shll
cmpsb
int
jno
pop
mov
fbld
stos
mov
xchg
jecxz
add
and
jne
mov
jno
loope
adc
and
jp
adc
mov
jbe
jae
xchg
sub
add
cmpb
clc
in
adc
push
inc
stos
aas
mov
jmp
dec
movb
movsl
and
gs
jmp
jecxz
into
outsl
inc
ljmp
int
mov
nop
push
mov
daa
jecxz
js
push
xlat
cld
pusha
dec
imul
leave
sbb
sbb
mov
mov
je
lret
sahf
fsubrl
mov
aaa
inc
ret
mov
fsubs
repz
pop
call
and
pop
adc
in
cmp
xor
sbb
out
adc
xchg
xor
enter
xor
or
mov
in
push
fs
inc
push
cltd
mov
sbbl
jbe
fwait
push
cs
mov
inc
xor
jg
loop
pop
lea
dec
ja
sahf
pop
fdivrl
imul
cmc
or
push
std
fldenv
enter
cwtl
addr16
push
sar
push
dec
inc
xor
loope
imul
je
cmp
cmp
mov
aas
lock
cmp
mov
repnz
mov
iret
call
iret
icebp
add
push
pop
push
shrl
jns
pop
add
adc
cmpsb
in
rcr
add
push
push
and
push
daa
sar
mov
push
aaa
mov
inc
test
rcr
pcmpgtd
lret
fwait
xchg
test
pushl
insl
insb
add
sarl
push
test
pop
sub
hlt
sbb
pop
outsl
mov
fs
incl
xchg
cli
or
std
adc
sti
xor
aas
out
scas
dec
imul
insl
adc
sti
jno
shll
in
das
cmpsb
int3
in
ljmp
dec
lock
mov
ljmp
xchg
les
push
mov
sub
clc
dec
jne
lods
xor
loopne
das
jle
out
jecxz
and
rolb
push
pop
mov
bound
lretw
inc
jmp
fldl
push
cmovge
into
pushf
inc
incb
icebp
clc
dec
jecxz
mov
aad
xchg
or
push
add
inc
or
inc
jle
xlat
ret
adc
mov
subb
adc
lret
or
outsl
inc
mov
push
int
bound
mov
cmp
fcomps
leave
outsb
hlt
inc
mov
add
inc
lock
hlt
sbb
pushf
sahf
stos
scas
xchg
jnp
in
andl
xchg
xorb
push
icebp
cmp
fisubl
mov
lret
cmpsb
jmp
pusha
ret
es
ja
sub
xchg
loope
inc
inc
mov
add
int
jle
jbe
sub
cmp
in
mov
cmc
insl
test
out
push
adc
xor
les
sbb
movsl
jmp
push
loopne
out
dec
mov
jp
mov
and
hlt
sbb
std
xchg
mov
imul
add
std
mov
mov
cmp
cmp
cmp
lods
pop
gs
and
cmp
pop
rcl
mov
xchg
fimuls
cmc
xor
in
xchg
mov
pop
cmp
test
or
mov
inc
mov
mov
mov
rorb
fs
add
sub
inc
mov
xchg
xor
aaa
pop
push
ret
mov
push
pop
push
sahf
push
ret
mov
jmp
or
ficomps
sub
bndstx
scas
add
sbb
cli
dec
pop
cmpsb
adc
jns
jno
mov
or
xchg
out
shlb
rolb
int3
push
stc
mov
stc
lods
imul
mov
mov
mov
or
ds
nop
mov
outsl
outsb
push
xlat
mov
insb
xor
mulb
fmull
mov
mov
sub
xchg
std
js
jae
push
popa
jb
out
add
negl
iret
jge
pusha
fcomps
pop
dec
insb
ljmp
insb
imul
cmp
enter
mov
add
ss
jno
in
mov
jmp
shr
cmpsl
pushf
xlat
cmpsb
mov
sub
sbb
stos
push
enter
aad
flds
push
or
fmuls
jl
dec
sub
mov
scas
xor
es
inc
inc
arpl
lahf
jbe
mov
xchg
jge
adc
jo
jo
mov
lahf
in
jbe
push
inc
lods
idivl
fdivrl
pop
mov
or
or
or
inc
loopne
icebp
daa
and
mov
push
gs
dec
ret
lcall
xor
xor
call
andl
pop
int
stos
add
int3
pop
ret
lret
xor
mov
cmpsb
and
jle
mov
dec
arpl
rcrl
adcb
jecxz
adc
sbb
dec
jp
jmp
fidivl
dec
jp,pt
jae
jb
mov
pusha
mov
call
adc
mov
sub
add
sub
add
jp
lahf
dec
in
mov
insl
xlat
imul
lock
test
js
sbb
sbb
adc
adc
mov
fidivs
mov
repz
and
ja
pop
pop
mov
daa
fcom
fistps
in
or
jns
insl
adc
inc
or
jg
mov
fst
xchg
mov
sub
pop
rorl
push
int3
sbb
dec
cmpsb
outsb
sbbl
sbb
adc
jbe
icebp
cld
jb
and
jae
and
mov
pop
sub
adcb
enter
lea
and
lcall
out
inc
xchg
jo
stos
call
ss
jno
push
mov
insl
sub
fadds
loope
fmull
fisubrl
addr16
insl
xlat
icebp
mov
mov
int3
pop
cltd
movsb
push
pop
das
sub
mov
mov
mov
pop
mov
dec
dec
fs
hlt
movsb
adc
sbb
scas
xor
lods
adc
sbb
dec
xor
and
mov
sbb
xacquire
popa
loop
movsb
jnp
int3
mov
jg
dec
sub
mov
or
and
inc
iret
loopne
or
inc
and
test
inc
inc
dec
loope
xchg
sbb
nop
pop
lret
iret
xor
ds
iret
mov
jno
subb
or
push
insl
pop
jmp
rep
int
test
mov
sbb
mov
xlat
mov
pushf
sub
aas
incl
ds
jns
ljmp
jg
pop
scas
push
test
and
pop
jg
lds
fisubrl
fsubrs
cmp
test
cmp
out
fldl
mov
mov
inc
fwait
sub
mov
mov
or
fs
je
mov
push
or
jae
movsb
nop
loopne
shll
push
adc
pop
xor
push
xchg
test
and
mov
shrb
pop
pop
sarl
inc
pop
cmp
neg
pop
test
sbb
je,pt
das
cli
cmp
xor
and
popa
cwtl
cltd
ja
popa
clc
inc
xchg
fiaddl
fsub
mov
out
mov
xchg
fnstsw
sbb
mov
jb
xor
jl
repnz
push
adc
or
es
mov
leave
aam
mov
lcall
icebp
dec
ja
stos
push
inc
sub
imul
in
dec
sbb
insw
sbbb
lcall
xor
pop
push
aaa
pop
mov
or
stc
shll
jnp
mov
xchg
les
je
mov
ljmp
mov
xchg
pop
mov
jae
add
pand
ret
mov
mov
mov
jp
shlb
ja
inc
test
out
roll
leave
add
push
push
xchg
divb
les
std
xchg
lret
add
clc
and
adc
pop
pusha
xor
repz
into
inc
and
pop
loopne
loop
jo
out
dec
out
push
and
roll
jns
push
addr16
pushf
in
sbb
cli
loop
cld
push
lods
cmc
xchg
mov
jl
push
mov
outsb
jno
inc
adc
xchg
daa
js
xchg
lock
mov
fadds
sub
push
movsl
xor
add
adc
lahf
push
dec
dec
mov
test
dec
sarb
fldcw
loop
inc
push
pop
mov
pop
loope
mov
insl
mov
mov
mov
cli
pop
push
push
push
mov
jmp
das
addr16
inc
pop
sub
sar
clc
jae
pop
subl
jp
and
adc
aad
inc
push
mov
iret
jo
push
std
cmp
stos
inc
subb
cmp
cmp
dec
or
lock
jle
test
sub
stos
ret
cmp
outsb
imul
aaa
iret
and
leave
jae
test
jno
fsubp
xchg
test
ret
cld
add
push
cmp
cmpsl
loope
imull
data16
pop
push
push
out
aaa
leave
mov
xor
rorl
add
in
adc
sbbb
cmp
push
add
shrb
jecxz
mov
jns
dec
sub
aaa
cmp
pop
sbb
rcrb
mov
fadds
pop
add
shl
dec
dec
out
int
adc
jmp
jns
jns
mov
lods
loop
cld
int3
add
push
pop
enter
int3
testb
cmpsl
stc
push
xchg
nop
dec
data16
nop
rorl
xlat
test
cmc
pop
and
movsl
pop
lret
xor
push
jne
xchg
adc
xchg
xchg
adc
sbb
idivl
fnsave
xchg
and
lea
das
sbb
cld
xchg
sub
arpl
in
sbb
aam
test
pop
sub
jecxz
add
cli
cltd
add
leave
andb
dec
in
int3
pop
rcrb
jl
and
sbb
cmc
in
int
test
cmc
xor
stos
sub
lahf
mov
or
add
popa
lock
iret
nop
inc
ds
loopne
dec
fs
icebp
xor
test
sahf
fsts
cmpsb
cmp
xor
insb
push
jecxz
lret
pop
cmp
add
cmc
fistpl
mov
ds
int
push
push
adc
fiaddl
push
inc
xchg
sahf
call
lods
cmp
inc
sbb
cmc
cld
xorl
dec
xchg
out
sbb
pop
xor
jmp
mov
inc
insb
dec
sbb
and
jl
add
push
out
xor
adc
dec
shl
or
stos
dec
pop
cmp
das
sub
or
inc
adc
mov
mov
out
cmpsb
fwait
aam
adc
gs
repz
sbb
lods
pop
pop
insb
jl
mov
ss
rorb
and
ds
orb
sbb
jecxz
lahf
insl
mov
mov
notl
jl
jae
and
mov
ja
mov
popf
xor
jbe
inc
arpl
mov
hlt
scas
aad
sbbb
fistl
or
repz
movsb
or
jmp
test
jns
cli
mov
inc
push
sbb
and
clc
inc
and
fs
test
mov
fcomp
clc
out
push
push
jle
out
adc
cmpsl
cmp
into
jbe
sbbb
scas
dec
aaa
add
cs
int3
test
cltd
add
or
bound
shlb
push
sti
cwtl
jns
mov
out
bound
cld
incb
jb
push
pop
ljmp
inc
out
add
sbb
clc
push
je
add
jnp
jmp
cltd
jb
scas
or
mov
sahf
push
pop
test
xor
iret
mov
hlt
xorb
mulb
jae
addr16
mov
mov
in
leave
les
jge
shll
or
pop
sbb
cld
and
lock
rcl
mov
testb
or
hlt
mov
or
jge
pop
jns
add
les
pop
inc
lahf
fldt
lds
stos
sbb
add
adc
jbe
movsl
mov
push
fmuls
add
call
push
icebp
movsl
scas
adc
mov
jb
mov
leave
loop
in
inc
push
sbb
in
lahf
lret
je
enter
or
repnz
mov
addr16
jne
mov
aaa
cli
xor
in
in
notb
imul
mov
lret
popa
insl
lds
push
pop
and
cld
rclb
pop
cwtl
add
cmpl
mov
sub
mov
aas
dec
push
fisubrs
int
ret
push
or
cmp
jne
cmc
je
adc
pusha
call
xlat
jne
repz
shll
outsb
das
xchg
or
pushf
ror
jmp
shrl
or
call
je
adc
jne
jo
aas
test
ja
cs
sbb
mov
leave
ljmp
ret
aaa
into
insb
sub
xor
xchg
adc
int3
xchg
add
and
mov
jne
jl
push
inc
dec
dec
mov
or
negl
pop
push
ds
lods
out
push
sbb
pushf
xor
shll
or
dec
inc
dec
or
add
divb
cltd
jb
ds
test
push
test
flds
ret
jecxz
sahf
mov
fbld
adc
dec
aam
into
mov
lods
inc
push
or
scas
clc
daa
push
sub
sub
sbb
xchg
inc
xor
pop
repz
mov
mov
enter
pop
jb
cltd
sarb
js
jp
and
dec
movsl
ljmp
mov
call
mov
movsb
add
cmpsl
loop
sbb
sbb
cmp
mov
fisubl
add
lcall
out
push
jecxz
lock
outsb
ja
push
pop
incl
movl
int
lahf
push
repnz
add
and
pop
stos
loopne
into
dec
xchg
push
movsb
sbb
in
sub
pop
outsb
fs
outsb
and
lods
or
std
fnstcw
jmp
and
into
lcall
pop
add
mov
int
je
sbb
mov
cmc
add
aas
jne
rcl
cmp
jecxz
neg
mov
mov
ds
movsb
dec
jp
push
loopne
imul
push
adc
add
rorb
sbb
gs
ret
loop
add
sbb
jl,pn
hlt
push
xchg
ja
pop
loope
mov
jnp
sahf
jecxz
xchg
decb
xor
arpl
add
ficompl
test
push
imul
sub
mov
arpl
in
dec
test
cmp
out
aad
or
sarb
sbb
cmp
sub
les
in
negb
hlt
add
mov
repz
inc
cmpsl
sub
in
stos
mulb
dec
mov
pop
mov
jl
inc
or
clc
adc
or
xchg
fisttpl
icebp
push
mov
or
fistpl
jns
jb
sub
or
pusha
sbbb
mov
mov
std
or
add
pop
repnz
shrb
sbb
sub
mov
mov
rolb
mov
aad
ljmp
inc
pusha
in
xor
inc
jle
adc
push
add
jnp
push
mov
imul
xlat
sub
cmpsl
arpl
sub
push
and
adc
mov
in
push
out
scas
sbbl
enter
loope
popf
packssdw
mov
inc
mov
fsts
in
mov
mov
jbe
hlt
sub
inc
dec
inc
fisubrl
push
aas
ljmp
out
jbe
call
adc
pop
jne
cwtl
mov
ljmp
push
xlat
call
push
cli
jge
adc
imul
sti
xchg
outsl
lods
jns
or
adc
inc
int3
iret
std
movsl
dec
scas
and
push
pop
insb
and
in
in
ljmp
dec
inc
xchg
in
jl
in
and
in
leave
mov
and
into
loope
jnp
mov
ljmp
cmpsb
es
clc
cwtl
mov
push
inc
sub
cltd
arpl
inc
stc
mov
in
mov
jg
sbb
adc
mov
jge
pop
pop
push
nop
sub
je
test
jnp
cmpsb
pop
cmp
rcll
sbb
xchg
sbb
dec
sahf
mov
or
mov
cmpsl
mov
popf
enter
cmp
stos
scas
ss
cmpl
push
pop
inc
push
adc
movsl
testb
inc
out
lret
cmp
stos
sbb
add
pop
add
popa
lods
ds
je
lcall
adc
jge
jge
push
sbb
mov
mov
in
movsb
add
pop
mov
jecxz
inc
fbstp
bnd
shll
jmp
jae
inc
test
dec
nop
xchg
push
call
inc
or
arpl
fisubrl
aad
push
mov
hlt
push
test
ss
push
xchg
flds
or
pop
lcall
leave
mov
xchg
inc
push
mov
xor
dec
cmpsb
mov
xor
push
das
pushf
jl
mov
or
aad
push
mov
mov
mov
aas
pop
jae
negl
aas
and
jg
pop
lods
or
push
cmp
fildl
xlat
iret
sub
lahf
aaa
pop
div
stos
cmc
aas
rorb
scas
fildl
pop
ficomps
fs
sti
push
mov
push
mov
stos
aam
mov
xlat
dec
sbb
xor
daa
xor
push
pop
les
push
jge
cld
and
arpl
cltd
cmpsl
jge
mov
aam
and
sub
jae
xor
mov
push
lret
scas
popa
jmp
inc
dec
bound
lret
mov
inc
inc
xchg
mov
bound
dec
pop
xor
add
das
xchg
sub
enter
jno
fisubs
stos
inc
sub
es
cmpsb
add
addr16
les
mov
push
push
and
cmc
push
xchg
rorl
cmpsb
leave
mov
xchg
add
lcall
cli
mov
or
mov
jmp
sub
push
jmp
xchg
test
int3
adc
xor
in
xchg
and
mov
xchg
jmp
aam
xchg
imull
pop
push
ret
shll
cld
mov
ja
fwait
lret
push
outsl
out
and
outsl
or
negl
xor
mov
mov
sub
add
shlb
cmc
sub
cmc
cld
mov
dec
xchg
aas
inc
call
jae
xlat
xchg
sbb
fs
mov
int
sub
jo
or
repnz
insl
pop
add
call
flds
std
cmp
or
loope
pop
push
outsl
pop
push
lods
test
mov
jge
sbb
sbb
jns
cmp
ror
fisubrs
call
movsb
movl
push
and
mov
shrb
icebp
fdivr
push
mov
xchg
jp
jne
sub
dec
add
popf
xchg
into
icebp
inc
lds
pop
aad
shr
test
lret
push
or
mov
mov
cmc
lods
sbb
dec
adc
adc
mov
shll
push
jmp
sbb
outsl
call
cltd
push
jb
idivl
jne
gs
cmpsl
movsb
mov
xchg
push
test
fisttps
push
push
pop
arpl
bound
and
xor
rcrl
push
inc
rclb
pusha
mov
xor
or
or
lret
insl
fstl
xor
mov
pop
mov
and
cmc
mov
aam
push
add
bound
test
or
insb
push
andl
or
loop
in
lret
ret
pusha
add
xchg
in
filds
adc
jmp
in
mov
cmp
mov
push
int3
out
pop
subl
icebp
ljmp
sbb
roll
dec
mov
mov
hlt
loope
xchg
es
in
mov
push
mov
shr
adc
scas
std
in
xchg
dec
jae
int
pop
cli
dec
xchg
loop
les
xchg
xchg
mov
cmpsl
mov
xor
fcompp
adc
or
jmp
test
push
mov
pop
test
xlat
repnz
cmpsl
aam
jb
jns
lahf
sbb
jge
test
int
stos
and
xor
push
lret
push
je
mov
mov
push
sub
sbb
pop
das
jb
fadds
xchg
bound
dec
or
enter
cmp
jo
test
inc
dec
leave
pop
xor
sbb
out
sti
cltd
sbb
mov
aam
dec
add
xor
rolb
aam
aam
test
lcall
xchg
mov
jle
xchg
cwtl
hlt
int3
and
jno
or
push
cmpsb
push
sub
fcomps
sar
outsl
sbb
in
sub
jns
fbld
jmp
or
pusha
cmp
xor
jg
ret
daa
adc
call
ljmp
insb
mov
test
mov
xchg
popf
je
test
xchg
imul
lea
das
ljmp
outsb
inc
lds
cmp
lds
pop
pop
cmp
int3
pop
xchg
pop
loop
push
adc
push
cld
push
mov
mov
cli
dec
pop
insb
sbb
fwait
sub
push
mov
and
adcb
imul
push
cmpb
pop
xor
out
icebp
inc
sbb
sbb
insb
out
mov
or
xchg
lds
hlt
inc
jmp
mov
int
arpl
push
cld
test
mov
stos
sbb
pusha
enter
push
pop
hlt
lods
loop
add
push
pop
ss
js
pop
ret
jge,pt
mov
rclb
ja
push
dec
sarl
xchg
dec
movsl
mov
neg
ret
xchg
and
push
pop
cmp
adc
popf
sbb
jne
psubsw
dec
rolb
adc
cs
xor
add
mov
rcl
ficoml
cmpsl
mov
add
pop
mov
push
cmp
insb
outsl
imul
out
inc
imul
imul
jns
sbb
mov
cmp
mov
cmpsl
push
nop
jl
sub
cmpb
jl
push
sub
mov
ret
adc
adc
repnz
outsb
daa
daa
cwtl
push
pop
xlat
popf
inc
and
pop
lcall
add
xor
ret
and
and
out
fisttps
mov
xchg
add
incb
cmp
mov
loope
andb
adc
in
je
push
test
add
or
lcall
xchg
jnp
or
adc
hlt
stos
sbb
mov
push
jo
lods
dec
cltd
xor
dec
push
pop
pop
add
sahf
pop
jns
ljmp
outsb
xor
aad
into
mov
or
dec
fdivrs
mov
adc
roll
dec
testl
sbb
shl
jmp
dec
sub
mov
xor
jnp
inc
loopne
jnp
push
subb
dec
stos
test
fidivrs
inc
mov
stc
clc
and
outsl
xchg
mov
sub
aad
cmp
popa
add
sub
and
enter
dec
scas
and
fs
sub
outsb
jne
xchg
in
sbb
aam
leave
add
mov
push
in
cmp
movsb
jnp
flds
inc
lahf
xchg
ja
and
hlt
adc
push
dec
stc
jmp
int3
mov
xchg
fwait
xchg
mov
pop
add
orl
testb
repnz
and
add
ret
daa
out
and
jp
sti
push
dec
push
fstpl
xor
xlat
cmp
test
add
addl
sbb
add
notb
pop
nop
out
sbb
das
loopne
inc
outsl
push
mov
test
xchg
scas
fildl
dec
rcll
int
sbb
sub
addb
xchg
pop
xchg
sub
mov
es
outsl
test
sbb
and
pop
and
sub
out
sub
push
cltd
lret
or
aas
and
adc
scas
jecxz
fs
mov
jae
ss
rorl
cmpb
xchg
sub
mov
hlt
xchg
cmp
or
inc
lret
mov
mov
push
sub
lods
add
daa
mov
sbb
movb
mov
add
aam
sbb
sub
imul
sbb
cs
dec
inc
ja
and
test
fiadds
fstpl
sti
dec
mov
mov
movsl
cpuid
xchg
test
mov
and
enter
loop
jno
jmp
cmp
push
push
cltd
lret
inc
xchg
movsl
or
in
mov
mov
aam
test
sub
lods
ds
bound
xor
push
push
cs
jl
in
mov
mov
lret
inc
outsl
adc
mov
cli
inc
xchg
int
mov
add
pop
in
add
pop
pop
jne
xchg
movsl
daa
shlb
shrb
xchg
dec
xchg
nop
and
hlt
in
cli
fisubl
and
adc
movsb
outsb
ja
or
push
rclb
add
ret
rcrb
add
mov
jge
stos
sbb
test
sbb
push
nop
jne
sbbl
xchg
das
or
xor
insb
xchg
nop
mov
jns
jb
ss
rcrl
cwtl
insb
xor
jg
xlat
inc
inc
lahf
js
jb
jb,pt
inc
or
jae
int3
pop
stos
dec
orb
xchg
sub
sbb
ljmp
iret
pusha
lcall
jl
xchg
sub
push
outsl
cmc
jns
div
cmp
xchg
out
por
ja
push
mov
lea
out
and
in
xchg
jmp
xor
and
sbb
mov
or
cli
pushl
push
mov
xlat
add
leave
xchg
iret
or
pop
xor
repz
hlt
loop
cmpsl
les
cmp
orb
jge
test
and
pop
mov
icebp
or
insl
test
inc
out
shrb
std
pop
cmp
xor
lret
rorb
fsubrs
adc
insl
jns
enter
mov
imul
add
sbb
sahf
cmp
jmp
fisubrs
xchg
dec
sub
mov
cwtl
scas
jae
sti
cmc
adc
inc
and
inc
jne
out
and
push
xor
sbb
not
cs
jo
sti
lds
sub
inc
mov
imul
nop
stos
clc
stos
jae
push
lods
mov
add
xor
int3
and
add
pop
jl
lock
cmpsl
scas
or
pop
jne
sbb
lret
mov
and
int
push
pop
pop
jp
jo
loope
stos
fcmovb
xchg
cmp
scas
and
bound
pop
mul
add
out
jnp
dec
es
push
es
dec
scas
jmp
jnp
aas
jae
xchg
pop
xchg
push
pop
into
pop
xchg
sub
push
mov
movsl
ljmp
adc
fs
cld
xor
add
pop
aad
pop
imul
nop
aas
cmp
cli
ljmp
jmp
outsl
sbb
adc
xchg
jge
jae
dec
or
mov
sub
sbb
out
movsb
xlat
call
or
ret
jne
rcrb
call
jp
ret
add
add
outsl
movsl
outsl
repnz
and
mov
xchg
jae
shlb
inc
push
daa
fwait
aaa
insl
lods
sub
hlt
stc
scas
pop
push
lret
xchg
stos
ror
and
fsubrl
sbb
dec
push
or
lcall
in
push
cmp
rdmsr
sarb
out
pop
push
es
fnsetpm(287
fnstsw
cmpl
sbb
pop
neg
adc
xor
fsubrs
lret
or
out
push
fucomip
arpl
jnp
xor
xchg
rclb
jbe
xor
mov
outsl
into
dec
push
outsl
fidivrl
flds
aad
mov
lea
in
sub
cli
and
fwait
int
cli
insb
mov
jb
cmp
lock
xchg
pop
in
aas
not
jmp
dec
add
ss
out
movsb
or
mov
outsb
mov
inc
mov
or
aas
lds
sbb
cmp
sbb
out
shlb
pop
sti
fs
xor
jge
or
xchg
lock
clc
push
lods
and
int3
fwait
and
dec
adc
xchg
stc
xor
addr16
xchg
cmp
popa
jmp
hlt
sti
jns
mov
sti
mov
test
std
lods
inc
popf
mov
test
push
repz
dec
sub
inc
mov
or
in
cs
pop
in
jecxz
in
out
stc
stos
adc
mov
loope
pop
popl
pushf
adc
pop
pop
movsb
pop
adc
das
lcall
push
jmp
ljmp
data16
push
add
push
lahf
xchg
dec
fldt
loop
and
adc
data16
mov
imul
and
fidivrs
movsl
add
jne
inc
insl
sbb
dec
mov
xor
ret
ljmp
sub
push
inc
push
xchg
push
testb
sbb
leave
pop
add
mov
mov
addr16
mul
mov
pop
das
or
inc
jnp
movsb
push
sub
xor
xchg
fiadds
dec
repz
and
mov
imul
mov
stos
jle
mov
out
jmp
testb
xchg
aaa
cmpsb
fisubrl
negl
movsb
stos
stos
clc
cmc
pop
sbb
dec
mov
into
sub
shrb
adc
xor
xor
mov
sub
and
neg
mov
std
es
fsubl
das
push
mov
ds
mov
repz
pop
jp
popf
test
lock
xor
sbb
adcb
mov
or
outsl
cs
jl
sbb
aam
xchg
push
and
xchg
fwait
pop
movsb
or
test
pushf
outsb
adc
fwait
ret
dec
bnd
or
jg
sbb
aas
cli
add
dec
and
pop
in
rcll
fbld
arpl
addr16
push
jb
jne
testl
lret
in
aas
hlt
adc
mov
inc
add
jo
bnd
andl
imul
dec
jp
inc
addr16
mov
lahf
and
push
js
das
mov
cmp
push
pop
adc
out
lret
dec
out
fldt
call
xor
imul
sti
mov
inc
sbb
or
lret
ljmp
ljmp
icebp
mov
aad
or
orb
push
das
ja
push
push
cmp
dec
sahf
adcl
int3
inc
sub
stc
jmp
mov
lds
fisubrl
fmuls
fs
mov
lahf
mov
jns
int3
xchg
not
lcall
adc
pop
pop
inc
lods
in
lods
ss
jb
dec
ret
int3
sub
jae
outsb
ret
std
scas
cmpsb
mov
or
sbb
mov
xchg
cmp
mov
scas
dec
scas
mov
clc
ret
xorl
push
subb
cmp
cmpsl
ret
pop
adc
test
inc
data16
movsl
jecxz
cltd
sub
jge
xor
sub
mov
pop
out
cmp
xchg
lock
aad
test
inc
mov
xlat
mov
mov
add
adc
rol
dec
mov
cmc
sbb
jno
cmp
push
loope
mov
push
mov
mov
ret
sub
cltd
mov
test
fnstsw
or
fbld
inc
sbb
test
gs
add
adc
pop
stos
data16
jp
sbb
jo
xchg
aam
repnz
loopne
das
adc
inc
enter
int
loope
mov
ret
pop
dec
sub
test
ficomps
movsl
mov
scas
xor
dec
jmp
aaa
enter
sub
ret
fsubrp
push
jmp
shrl
adc
adc
mov
and
sbb
enter
adc
xor
fsubrp
pusha
cmpl
test
cmp
push
pop
lds
scas
xchg
imul
pop
aam
fs
adcb
cmc
dec
pop
mov
pop
lods
sub
insb
jno
jb
fnstsw
inc
cmp
mov
mov
jge
aam
imul
sbb
push
pop
mov
sbb
adc
mov
mov
mov
mov
and
loope
pop
ljmp
mov
cmp
jl
jns
movsb
jae
mulb
push
lret
xor
push
xor
fwait
iret
lds
jns
xor
jb
xlat
fdivs
cmp
scas
pop
or
ljmp
sarl
sar
sahf
in
xchg
sbb
into
jmp
sbb
sub
lds
in
fimuls
lods
fs
pop
dec
lcall
in
mov
imul
es
jns
sbb
jmp
jne
stos
out
iret
les
out
rol
push
adc
repnz
mov
xchg
mov
bound
dec
xor
rcrl
jae
inc
inc
jno
stos
push
mov
fldenv
pop
je
addl
cli
aad
sbb
mov
pop
or
inc
mov
mov
cmp
xor
push
ss
dec
pushf
ja
ja
add
sub
addr16
fistpll
pop
or
iret
incl
xor
loope
leave
inc
mov
out
mov
loopne
mov
mov
dec
jmp
mov
pop
ja
jl
dec
int3
mov
ds
jo
addl
xor
and
orl
xchg
int
sub
adc
mov
shlb
jne
bound
add
push
push
mov
xor
cli
pop
xchg
stos
add
repz
mov
and
test
inc
loop
sub
popf
sti
pop
and
ret
lret
push
adc
inc
fidivs
fdivrl
aam
fs
int
sahf
iret
xlat
pop
loope
daa
jb
sbb
inc
sbb
sbb
sub
adc
sbb
cmp
frstor
xor
pop
clc
jo
insb
faddl
pop
ret
test
pusha
pop
fsubrl
xor
adc
adc
shlb
mov
mov
or
pushf
push
loopne
mov
shlb
mov
cmp
push
fstpt
add
add
push
pop
pop
nop
or
cltd
icebp
call
pushf
sbb
daa
xor
dec
insb
fldenv
jge
pop
jp
sub
repz
dec
jo
sbb
add
in
sbb
cmp
pop
pop
negb
insb
push
or
and
int
rcrb
xor
lods
pop
xor
hlt
cmc
inc
inc
dec
iret
into
loop
leave
xor
xor
ret
push
xchg
mov
out
inc
xchg
jl
jae
jmp
mov
lret
jnp
xchg
sti
lods
dec
jmp
inc
cmp
test
arpl
outsl
xor
pop
rorl
add
and
jo
pushf
js
call
subl
cmp
push
int
and
adc
mov
cld
dec
imul
inc
jmp
iret
scas
push
jo
cmpl
sar
sub
jle
sbb
lret
and
push
or
mov
push
mov
and
mov
adc
cmp
mov
dec
in
ret
add
aas
dec
mov
or
daa
sarl
xor
fldcw
fmuls
xchg
pusha
movsl
das
cmp
lods
inc
push
add
stos
mov
lahf
xor
push
pop
adc
testl
sub
loop
inc
into
sub
jle
test
dec
mov
adc
imul
jl
leave
push
mov
sub
mov
popf
ss
sub
push
jle
in
mov
jmp
and
int
cwtl
dec
mov
enter
sub
ret
push
ds
shlb
into
cwtl
fdivrs
mov
add
push
sbb
xor
inc
ja
out
stos
aaa
leave
lods
cmp
aam
shlb
xchg
movsb
mov
ss
dec
cld
jmp
cmp
inc
in
popf
mov
cmpl
push
test
test
ret
hlt
div
rclb
mov
repz
push
adc
mov
pop
shll
jg
into
mov
stos
repz
lret
adc
dec
add
subl
in
rorb
mov
adc
pop
cmpsb
popa
xchg
add
stos
xchg
mov
lret
shrl
pop
mov
into
imul
popf
inc
xchg
mov
dec
lahf
or
loopne
jns
cltd
inc
xchg
push
rcrb
icebp
jle
jmp
stos
jnp
pop
fadds
pop
mov
sbb
and
ljmp
fidivs
out
fcompl
std
push
xlat
rorl
and
push
loop
sbb
aam
mov
jp
mov
mov
xchg
jb
sub
enter
outsb
test
fidivl
push
in
aas
xchg
fs
sahf
xor
mov
insb
adc
sbb
pop
and
gs
inc
and
into
in
ret
jmp
xchg
mov
ret
mov
mov
fs
or
int3
sarl
aaa
stc
cmp
jecxz
cmp
add
iret
lock
jg
dec
and
cmpsl
js
stos
or
je
outsb
in
ja
lret
push
dec
pop
cmc
fmull
out
testl
cmp
test
aad
jecxz
dec
mov
mov
mov
arpl
lcall
dec
clc
outsb
mov
jns
rcl
push
xlat
popa
jle
cmp
fiadds
sbb
sbb
fwait
inc
sub
mov
add
bound
jne
aad
into
jne
loope
stc
dec
repnz
mov
jg
dec
mov
jnp
push
inc
addr16
xchg
pushf
jle
data16
repnz
dec
loope
cld
cmp
or
out
add
jo
mov
loope
dec
dec
aaa
subb
je
jns
insl
popf
test
add
or
push
dec
mov
dec
pushl
cltd
mov
cmpsl
inc
imul
jae
mov
movsb
lea
mov
pop
addl
pop
or
dec
divps
movsb
pop
das
outsb
fildl
cltd
pop
mov
jg
mov
loope
inc
scas
stos
mov
repz
and
ja
mov
inc
lods
or
pop
add
jae
inc
mov
push
lods
and
sub
jp
in
pusha
sti
mov
gs
adc
sbb
mov
add
add
push
cmp
aam
bound
daa
adc
aas
pop
imul
or
cld
sub
cs
push
fldt
adc
lods
popf
fdivs
xchg
push
pusha
addr16
call
mov
sahf
outsl
out
rclb
imul
decb
dec
data16
sbb
outsb
adc
in
lock
jb
lret
testb
shr
sahf
mov
outsb
pop
std
lock
gs
pop
popa
push
cmpsb
sahf
iret
cli
bound
iret
pop
test
pusha
dec
inc
inc
push
stos
mov
mov
cs
lods
mov
cmp
ret
sub
add
and
int3
add
dec
and
or
gs
outsb
mov
cwtl
cmpsb
jo
sub
mov
xchg
push
xchg
xor
test
rcll
mov
push
mov
out
sub
test
hlt
imul
std
xor
mov
test
ret
clc
add
repz
icebp
mov
jmp
shr
arpl
sub
mov
push
in
push
inc
in
push
shr
gs
ds
dec
add
outsb
test
in
cmp
shll
sbb
sbb
shll
insb
iret
sarl
stos
jne
jae
push
es
test
sbb
push
in
loope
mov
rorb
and
adc
or
stos
adc
clc
mov
hlt
out
ret
adc
mov
and
cmp
pop
fcompl
stos
pop
xchg
aam
mov
flds
int3
lcall
loop
inc
push
inc
out
dec
cmpsl
into
test
and
filds
xchg
mov
jnp
sbb
push
mov
std
testl
fdivs
aas
dec
inc
and
mov
loopne
test
mov
popf
mov
jb
fsubrl
cld
imul
inc
cmp
sbb
add
xchg
sbb
movsl
repnz
xchg
arpl
pop
push
inc
xchg
sub
mov
inc
dec
xchg
outsb
xchg
std
and
into
xorl
ja
pop
mov
pop
adc
lods
dec
lock
add
dec
pusha
repnz
std
xor
cmp
pop
adc
push
cmc
mov
mov
imul
push
cmp
rol
cmc
dec
aam
jge
sbb
dec
test
adc
mov
cmp
jns
mov
mov
push
push
cli
loopne
jmp
inc
bound
add
adc
in
in
or
mov
movsl
sbb
ss
push
xchg
call
stos
inc
inc
jns
mov
lret
je
sbb
clc
inc
mov
pusha
data16
adc
stc
negl
jne
or
mov
js
dec
lret
dec
paddb
cld
lds
adc
adc
cmpsb
insl
repnz
xor
mov
jo
imul
ror
jns
rol
jecxz
cmp
adc
std
xor
sbb
mov
push
pop
aaa
mov
push
mov
push
mov
xlat
xchg
cmp
sarb
sub
xor
sbb
std
cli
push
adc
subl
aas
xor
push
inc
ja
adc
push
push
jmp
jae
in
and
lock
fdivp
shl
xchg
shr
jno
push
insl
xor
push
mov
nop
and
xor
sbb
mov
aaa
xchg
add
sub
push
mov
pop
mov
xchg
sub
jo
cli
mov
loope
cmc
push
jle
pop
inc
cmpsl
push
js
pop
mov
mov
pop
call
push
mov
push
pop
adc
inc
xchg
cs
or
lcall
and
jne
mov
mov
repz
je
dec
mov
test
xchg
mov
fsub
push
int
push
add
fs
xchg
xorl
pop
mov
gs
inc
inc
popa
sbb
ret
lods
push
aaa
in
cmp
dec
iret
inc
cmp
int3
xor
bound
dec
mov
sbb
push
clc
xchg
cmc
or
and
movsb
pop
bound
icebp
in
mov
loop
add
push
inc
test
pop
mov
sbb
inc
xchg
cmpsl
in
mov
repnz
adc
loop
push
sbb
fnstsw
aad
idivb
and
xor
cmp
test
push
jmp
sbb
test
xchg
xor
scas
add
cmp
cmpsb
arpl
xchg
sbb
sti
sub
inc
add
out
or
mov
inc
std
pusha
push
pushf
xor
inc
fld
inc
xchg
jnp
scas
stos
in
cmpsb
jl
insb
and
in
cwtl
fildl
jle
clc
xchg
mov
test
mov
insb
jo
cmp
inc
lods
pushf
jne
testl
insl
psubd
out
adc
insl
cs
inc
dec
sbb
jo
das
push
jnp
stc
cmp
mov
jb
and
adc
and
inc
mov
daa
or
adc
imul
fistl
or
in
lea
and
mov
popf
sbbl
cmpsb
rorb
das
imul
mov
fcomps
sti
dec
pop
lods
dec
or
push
xchg
iret
jecxz
sbb
mov
pop
aam
mov
dec
imul
or
ret
jae
mov
add
or
add
mov
or
sub
cmp
icebp
movsl
sub
in
idivl
jns
stos
or
data16
or
or
cmp
push
shrb
xor
ret
dec
popa
aaa
nop
clc
bound
call
out
jo
push
scas
sub
add
xor
std
stos
mov
sahf
aad
rcll
mov
dec
mov
cmc
add
out
in
mov
pop
ret
pop
add
bound
repnz
rcr
loop
cmp
stos
dec
das
test
insb
lret
test
popa
mov
lock
dec
mov
push
pavgw
mov
lock
cltd
popf
jns
mov
xchg
cli
add
mov
mov
mov
mov
pop
fmulp
shll
mov
mov
sub
loop
mov
or
pop
jle
add
clc
stc
addr16
xor
stc
inc
add
and
pop
fstps
daa
enter
dec
movsb
pusha
pop
mov
add
rcrl
or
fistl
pop
xor
jo
loop
inc
sbb
mov
mov
xchg
lret
icebp
outsl
sbb
mov
data16
mov
push
notb
mov
inc
mov
xor
imul
push
loope
out
loopne
repnz
mov
mov
xchg
pop
push
mov
outsl
mov
push
inc
loope
pop
xchg
inc
lods
cmpb
test
xchg
loope
sbb
psraw
addr16
mov
mov
aaa
pusha
rclb
scas
lods
rcrb
inc
and
leave
lods
or
pushf
ja
push
mov
jno
outsl
jg
cld
pop
js
pop
mov
insb
outsb
pop
in
lret
in
rcrb
jo
mov
push
in
in
std
sti
pop
push
inc
lods
insl
add
cwtl
cs
outsl
lahf
out
jno
scas
pop
jne
scas
push
mov
cvtpi2ps
dec
jb
mov
cmp
adc
popf
idivb
dec
sarb
out
or
nop
xor
xchg
notb
inc
das
fldenv
mov
cmc
cmp
ss
pusha
adc
inc
sub
jo
adc
test
xor
inc
leave
cmpsb
enter
and
ffreep
push
out
push
adc
arpl
negb
sub
jnp
and
add
xchg
xor
aad
add
sub
inc
pop
push
jns
mov
rolb
sub
in
mov
push
stos
xchg
jnp
jle
stos
mov
cld
fistl
xor
ljmp
data16
shll
mov
das
sbb
iret
test
xchg
negl
aad
ror
cltd
mov
pushf
dec
fidivrs
push
mov
mov
mov
mov
inc
xor
stc
or
in
scas
cwtl
cmpl
pop
lret
popf
or
xor
aam
rol
dec
xor
sub
cld
popa
mov
lea
cmpsl
push
mov
xchg
test
xor
flds
or
lret
push
out
in
xchg
aad
fnstsw
fs
in
cld
xor
xor
xor
fdivrl
fnstsw
jnp
push
xor
jo
jb
dec
mov
negl
xchg
jecxz
scas
mov
jg
xor
jge
es
data16
test
add
imul
in
adc
mov
xor
mov
icebp
add
pop
fnsave
in
mov
inc
lret
or
xchg
rcrb
icebp
dec
xchg
clc
fs
lods
fsubr
sub
pusha
lret
inc
mov
xor
cmp
mov
outsl
sbb
jae
icebp
imul
jle
xor
mov
jbe
mov
cmp
mov
repnz
pop
dec
in
mov
push
ss
lret
jb
jns
bound
and
das
ja
daa
cmpsl
sbb
les
popf
mov
fnstcw
rorl
lds
insl
or
sahf
push
inc
movsb
shlb
je
push
push
jg
in
jle
push
cmp
lahf
xchg
ret
inc
lds
rol
rorl
dec
test
sub
stc
mulb
mov
or
out
inc
xor
jnp
rcll
stos
mov
jno
sub
js
cmp
xor
add
stc
xchg
test
icebp
bound
mov
js
push
adc
jns
xchg
push
rol
adc
addr16
adc
inc
add
fdivs
and
mov
jo
dec
test
scas
or
das
cltd
je
adc
je
and
mov
in
mov
push
mov
push
hlt
jl
pop
pop
adcl
sub
fcoms
inc
inc
dec
insb
mov
loop
scas
mov
jbe
aaa
js
jp
pop
xchg
jne
dec
mov
out
movsb
xchg
lods
dec
and
sbb
push
lds
or
fcompl
or
add
xchg
cmp
xor
cltd
lods
lods
sbb
daa
sbb
in
shll
push
jp
mov
dec
aaa
lret
mov
jecxz
nop
sbb
iret
pop
jo
push
push
mov
sarb
int
shlb
mov
gs
push
loop
sub
inc
sbb
notb
clc
mov
sub
xor
sbb
rcrl
cli
popl
dec
fisubl
push
add
loopne
fbstp
and
sahf
mov
insb
dec
xor
dec
sub
shr
pop
repnz
mov
mov
xor
into
pop
insb
and
shrd
movsb
pushf
add
sbb
cmp
mov
pusha
mov
lcall
adc
in
push
adc
pop
xchg
adc
xor
cs
push
mov
stos
and
in
cs
mov
icebp
xor
and
call
dec
je
adc
js
inc
jp
mov
pop
stos
sub
push
shl
fsubrl
fsubrp
adc
jmp
pop
mov
and
jns
xor
pop
in
cmp
sbb
sbb
cs
outsl
insb
test
xchg
cmp
shl
pop
cltd
mov
and
repnz
aas
and
jnp
and
stc
std
inc
pop
cmp
xchg
jbe
je
dec
push
pop
sbb
pop
je
sub
das
movsb
sub
movsl
jb
and
mov
adc
pop
insb
movsb
adc
jp
adc
sbb
dec
push
outsb
add
cmc
sbb
xor
sbb
lret
flds
mov
shlb
scas
in
je
xchg
adcl
adc
jmp
aam
cs
pop
dec
or
mov
stos
test
push
bound
mov
dec
dec
xlat
in
xchg
pop
and
fidivrs
mov
push
fmull
cmpsb
adc
sarb
mov
cmpl
push
cs
fwait
and
add
pop
inc
or
and
cmpl
or
pop
rcrb
cli
fcompl
mov
ss
mov
fcmove
cmp
xor
mov
cli
dec
sbb
stc
sbb
mov
js
add
inc
sbb
ljmp
xorb
mov
test
adc
jnp
fmull
xor
jecxz
xchg
shlb
pop
loopne
loope
add
js
mov
in
pushf
push
sahf
inc
inc
xchg
sarl
flds
pop
add
sub
adc
inc
int3
mov
or
mov
inc
in
inc
mov
jb
pushf
loopne
ljmp
rcrb
test
adc
rcrl
fistpll
stc
and
repz
fidivl
mov
mov
xchg
xor
mov
adc
jp
imul
jecxz
dec
xchg
repnz
aam
and
xor
out
call
or
outsl
fmull
aaa
dec
xchg
push
adc
or
test
shrl
cmp
adc
stos
lea
pop
loopne
std
repnz
pushf
xor
add
incl
pusha
pushf
mov
hlt
std
test
jmp
aaa
pop
lds
aad
into
out
sbb
and
lea
inc
add
das
cmp
push
in
xchg
mov
cmpsl
inc
lods
lds
scas
pop
add
pop
inc
mov
jecxz
addr16
lret
loop
dec
into
arpl
std
push
fbld
push
mov
cmp
xor
lods
in
sti
cmpsb
xor
dec
in
in
cwtl
mov
mov
fdivrs
scas
pop
pop
mov
dec
loopne
and
inc
add
faddp
push
push
mov
mov
scas
mov
cmc
jl
fxch
fistpll
jne
iret
push
loopne
or
pop
call
sbb
ss
inc
adc
cmp
mov
or
ret
stos
in
sub
mov
mov
sbb
ret
adc
ss
push
mov
xchg
push
jg
lcall
cs
mov
leave
stos
cld
push
jns
jo
xor
int
les
stos
and
lahf
inc
cmp
nop
in
fists
adc
int3
lcall
adc
or
leave
inc
popa
mov
je
dec
repz
push
pop
mov
ljmp
aad
push
jno
and
insl
xchg
sbbb
mov
lods
loope
sub
out
repnz
test
dec
adc
aaa
cmpsl
movsb
mov
lds
pop
aam
push
iret
sahf
ficoms
ds
mov
push
cmp
ret
faddl
push
cmp
stos
mov
push
xchg
cwtl
cmp
sub
in
or
jecxz
cmp
inc
mov
adc
std
bswap
jo
adc
cmp
jmp
and
call
sub
cltd
fld
aad
mov
movsb
pop
jmp
cmpsl
push
add
pop
jle
mov
cmp
mov
cld
xor
lds
test
cmp
outsb
out
jle
aaa
pushf
cld
divb
mov
and
mov
repnz
push
outsb
stc
sbb
cmp
and
xchg
xor
lahf
adc
inc
scas
cltd
int3
sub
jg
mov
in
and
and
fs
je
push
sti
test
push
incl
pop
xchg
cmpsb
pusha
sti
mov
and
pop
add
imull
ret
test
jb
mov
mov
jns
and
out
sub
in
scas
ss
cs
mov
sub
mov
in
outsl
cmp
jns
ljmp
mov
je
aam
mov
sbb
cwtl
out
inc
sbb
dec
je
cwtl
movsb
mov
stos
or
or
and
sbb
dec
test
lahf
mov
push
loopne
shll
loope
cmc
ret
andl
cmc
stos
jl
mov
movsb
lock
dec
lods
test
sub
lret
repz
xchg
and
cwtl
stc
dec
push
ljmp
mov
xor
cltd
or
scas
jge
dec
add
lret
es
push
mov
lret
dec
xchg
fimull
fisttpl
lods
pop
iret
repnz
test
sub
sbb
js
fistpl
fsubl
stos
inc
add
call
mov
loope
shrb
out
inc
mov
ret
hlt
pop
cmp
mull
shrl
test
mov
jnp
xchg
cmpsb
sbb
cmp
data16
cmpsl
jns
sub
jmp
mov
add
cwtl
fists
mov
cmp
pop
inc
cmp
bound
popa
mov
les
idivb
bound
mov
pop
jnp
lahf
mov
pop
aad
stc
test
cmp
xor
mov
dec
sbb
roll
popf
push
push
push
lock
jecxz
js
jmp
mov
lods
loope
push
into
or
subb
push
push
mov
and
xchg
fsts
or
mov
lods
xchg
cwtl
push
fstps
xchg
sbb
sbb
ficomps
repnz
popa
mov
add
outsl
pop
mov
adc
shl
sbb
add
push
mov
rcrb
jno
fildll
aam
xchg
fisubl
and
in
push
pushf
mov
xchg
outsb
mov
fs
rcl
lods
sub
adc
mov
ljmp
mov
inc
adc
jg
xor
out
jecxz
mov
mov
rorl
daa
fbstp
jp
inc
cmp
shll
xchg
mov
pop
xor
jo
push
xor
ror
aad
fisttpll
xchg
outsb
outsb
int
pop
mov
cli
or
int
sub
cmp
cmp
xchg
push
pcmpeqd
or
or
dec
push
ljmp
jne
cltd
loope
jle
jecxz
ss
ds
pop
sub
jbe
jbe
loope
mov
daa
sub
sub
xor
push
pushf
mov
xchg
inc
push
ret
cltd
add
mov
jecxz
mov
insl
cmc
xchg
cmpsb
imull
jnp
lock
sub
mov
cmp
pop
and
stos
xchg
rolb
rorl
jle
dec
dec
mov
push
sub
push
jle
ret
xor
test
add
je
mov
jp
mov
jg
fimull
loop
cmp
popa
adc
leave
adc
sbb
pop
lds
add
mov
or
fstpl
mov
mov
fsubrl
mov
push
lret
sbb
into
inc
jmp
popa
cmp
mov
leave
adc
pop
cld
in
adc
into
fldcw
out
xchg
add
in
mov
icebp
lret
dec
adc
aad
sub
jae
mov
lcall
in
and
mov
push
sahf
orl
outsb
nop
mov
xchg
pop
insl
sub
xchg
addr16
jbe
cs
xor
loopne
sbb
test
outsb
daa
push
lcall
sub
lret
in
lret
fld1
cmp
test
push
xor
dec
les
rorb
push
ja
sbb
dec
cwtl
scas
ret
or
jp
pop
push
fcomps
jecxz
or
push
dec
or
xabort
pop
rol
xor
fists
dec
adc
lock
mov
sbb
insl
push
jo
in
push
or
aam
lock
roll
inc
jmp
ds
xchg
sub
ret
pushf
mov
mov
bt
sub
mov
inc
jno
dec
sub
mov
icebp
push
or
jo
andl
jnp
xchg
xor
lcall
adc
jp
push
add
jbe
aam
out
push
js
jecxz
fnstcw
sbb
xchg
imul
sub
clc
push
xor
mov
mov
inc
inc
push
cld
or
sub
push
lods
xorl
push
pop
dec
xchg
pop
pop
cwtl
sbb
push
ljmp
dec
fisubl
pop
popa
sub
sub
cmp
js
adc
das
add
push
pop
xor
test
test
dec
cld
pop
add
xor
mov
jmp
dec
cwtl
dec
cmp
dec
pusha
jmp
inc
cmpsb
outsl
inc
outsb
bound
aaa
sub
int
lcall
popa
iret
cmp
call
sub
pusha
rcrl
fwait
dec
inc
mov
xor
and
jg
pop
out
mov
fwait
in
js
pop
test
or
ss
insb
ret
jb
add
mov
test
push
cmpsl
insl
aaa
push
repnz
and
repnz
inc
movsb
ret
popf
out
xlat
fdiv
mov
pop
sbb
stos
jns
leave
push
pop
test
daa
sub
rcrb
sbb
mov
xchg
sub
scas
cmp
in
dec
aam
pop
pop
mov
mov
imull
sub
push
ljmp
loopne
aaa
or
cmp
or
mov
aam
jne
inc
out
fildll
enter
repnz
sub
je
outsl
xor
les
mov
repnz
jle
sub
adc
mov
xchg
jecxz
std
test
pop
sub
outsl
cmp
cmp
int
imull
dec
ds
addr16
cmp
ja
fwait
cmp
fsubrl
add
inc
fimull
jle
xchg
cmpsb
shl
push
push
push
sbb
mov
mov
imul
jecxz
test
and
xchg
or
or
cmp
mov
fcmovnb
mov
dec
stos
mov
dec
cltd
ret
decb
inc
stc
jp
push
pusha
cltd
adcb
inc
and
pop
push
pushf
or
aam
fists
mov
in
in
xchg
jo
dec
ds
sarl
jnp
mov
lods
dec
push
jno
mov
cmp
jbe
ja
mov
cmp
rorb
in
mov
insl
lret
fcoms
les
fmul
dec
dec
lods
inc
bound
or
add
enter
and
jo
outsl
movsl
outsl
jecxz
mov
test
mov
inc
jb
jmp
outsl
push
fmulp
jnp
mov
cmpsl
sub
fdivrl
xor
cld
fwait
xlat
push
in
inc
xor
or
pop
mov
jnp
push
or
adc
xor
mov
or
xchg
jge
mov
and
cs
mov
push
inc
sbb
mov
jmp
dec
mov
scas
cmpsl
insl
test
outsl
movsl
and
or
aam
fistpll
nop/reserved
in
mov
es
insl
adc
out
xor
pop
xchg
push
fs
sbb
push
lods
iret
dec
xchg
add
test
ds
mov
push
jo
push
mov
mov
push
sarl
js
mov
dec
aas
and
loopne
add
hlt
push
jae
pop
push
xor
hlt
fcmovne
add
mov
ret
mov
fldcw
int3
fwait
and
andl
and
dec
test
leave
idivl
inc
imul
mov
int3
sub
xchg
ja
xchg
pop
adc
push
das
pop
mov
mov
enter
pop
pop
and
and
imul
pop
mov
mov
ficoms
leave
inc
dec
enter
test
subl
loope
jle
fldt
bound
mov
gs
sahf
or
cmc
repnz
add
xchg
testl
addr16
cmpsb
scas
adc
pushf
call
roll
addr16
negl
imul
mov
leave
jae
push
sar
icebp
push
inc
dec
dec
sarb
mov
jo
sub
mov
popf
lods
sub
mov
hlt
cmp
arpl
ficomps
scas
adc
mov
cmp
mov
jbe
adc
pop
out
mov
jle
dec
subl
insb
ja
hlt
jl
loopne
lret
or
cmp
jo
mov
pop
jg
addr16
cmp
pop
test
mov
dec
jl
mov
cmp
cltd
sar
cld
movsb
jg
fisubrs
adc
nop
outsl
fucomi
mov
push
ret
pop
stos
loop
dec
in
and
mov
fisttpl
cmpsl
mov
sbb
jnp
jb
mov
iret
and
out
mov
test
mov
mov
mov
xchg
daa
mov
idivb
mov
and
jbe
in
into
mov
dec
xor
ret
jb
scas
int
xchg
loopne
ss
inc
jge
aaa
sub
pop
dec
scas
adc
je
shl
fcomip
push
and
jl
or
cmp
push
mov
pop
enter
jl
xchg
in
ss
ss
push
jne
stos
bound
movsl
pushf
scas
pop
fildll
jne
pop
js
dec
mov
pop
push
push
pusha
dec
jmp
subb
push
in
mov
and
sbb
rep
xor
xor
in
repnz
mov
aaa
sub
insl
aas
fs
fwait
icebp
in
sahf
inc
sub
ja
or
jp
hlt
jecxz
std
pop
xchg
push
fldl
dec
mov
sbb
push
repz
cltd
out
sarb
xchg
mov
enter
stos
jae
mov
shrl
mov
ds
jo
push
aad
rorl
hlt
jnp
adc
push
pop
sub
xlat
push
cmp
mov
repz
dec
popf
out
jg
outsb
adcl
std
gs
push
mov
iret
jne
fisubl
jnp
test
pusha
movsb
push
dec
out
insb
mov
js
dec
sub
cmpsb
nop
int3
jl
or
adc
push
lea
sub
popf
push
sub
sbb
lds
mov
fsubp
stos
hlt
sbb
sub
dec
lcall
xor
push
xor
and
jg
adc
cmc
and
dec
sbb
stos
or
fistl
dec
pop
aad
adc
jg
popf
mov
or
test
lret
test
add
lahf
lcall
jmp
mov
in
xchg
dec
stos
js
nop
mov
stos
scas
push
push
pop
add
dec
push
push
int
pop
test
aad
popf
fsubp
cmp
adc
adc
out
jl
imul
pop
add
enter
sub
fldenv
and
into
xchg
mov
sahf
arpl
push
push
imul
mov
inc
dec
outsb
fadd
ljmp
adc
je
inc
das
push
jnp
enter
lds
jle
adc
push
push
and
push
cmpsl
test
fcoml
repz
mov
mov
out
je
pusha
fwait
mov
pop
ud2
rol
pop
jb
xor
lret
mov
in
cmp
lock
gs
inc
or
repnz
jns
dec
inc
fwait
or
iret
push
test
jbe
xor
add
mov
fs
lret
jp
mul
outsb
or
pop
cmc
aaa
mov
lret
ds
or
dec
or
daa
dec
or
out
mov
ds
pop
mov
jne
xchg
fldenv
jnp
loope
sarb
stos
fmuls
mov
push
xchg
and
lods
mov
scas
insb
push
jno
loop
cmp
xchg
mov
ljmp
mov
push
rcrl
mov
mov
xchg
add
sbb
pop
imul
push
lret
jp
or
pop
add
pop
add
ror
sub
mov
loope
or
ds
ds
pop
lret
mov
sub
mov
jbe
sub
xchg
xchg
cmp
cmp
sbb
aad
xor
xor
xchg
push
imul
and
inc
mov
inc
jecxz
push
iret
js
jno
sbb
dec
mov
adc
fisttpll
jo
ss
int
pop
test
pop
xchg
mov
mov
pop
cmp
fs
arpl
push
jle
xchg
jbe
popa
cmc
xchg
sbb
push
xchg
lds
hlt
lds
mov
fisttpl
xor
or
dec
hlt
pop
fnstsw
xchg
aam
push
inc
lock
stos
enter
dec
jnp
sub
outsl
push
xchg
enter
addr16
add
mov
mov
add
imul
scas
cmp
rcrb
jl
adc
jb
rcrb
xor
loopne
xor
xchg
pop
in
inc
fidivrl
test
dec
in
outsl
adc
mov
push
addl
mov
push
dec
in
push
cmpsb
into
inc
dec
xor
dec
mov
inc
pop
xor
dec
add
popa
mov
test
cmp
stc
sub
popa
repz
hlt
imul
adc
xchg
pop
inc
fdivl
je
and
hlt
in
mov
cmp
jmp
pop
arpl
xchg
mov
imul
xchg
jo
lea
pop
mov
xor
add
dec
sysret
mov
dec
cmp
int3
xchg
xor
addr16
lret
push
scas
loopne
sbb
dec
fwait
call
int3
out
inc
outsl
cld
mov
inc
es
out
adc
mov
jmp
push
sbb
xchg
xchg
and
lahf
dec
xor
es
stos
dec
xchg
out
mov
add
or
cli
inc
jae
leave
loopne
jle
ljmp
cwtl
or
mov
mov
pop
push
mov
and
mov
stc
out
sub
mov
push
cmpsb
push
in
cmp
push
dec
pop
jb
adc
mov
adc
arpl
adc
in
mov
dec
mov
pop
mov
out
lret
dec
stc
ret
push
stos
sub
fcmovu
ds
mov
lods
cmp
pop
lret
outsb
push
lret
pop
cmp
in
iret
inc
xor
rcll
neg
addr16
lahf
ljmp
cmp
mov
inc
inc
mov
or
xlat
call
mov
mov
cmp
cmp
scas
or
enter
sahf
sub
add
sbbl
pop
ret
push
mov
push
push
or
enter
jb
sub
mov
mov
mov
cmp
jb
mov
adc
push
xor
faddl
pusha
test
orl
in
sbb
dec
cwtl
sbb
sub
dec
int3
das
or
cld
clc
push
das
jmp
push
mov
testl
loope
ret
popf
jne
addr16
scas
sub
rclb
pop
fistl
and
push
mov
mov
in
test
fcomps
and
popf
push
arpl
mov
test
shrl
loopne
or
fldt
sbb
pop
xchg
push
and
inc
or
jge
add
jno
fimuls
out
repz
insl
mov
mov
sub
mov
cwtl
std
or
xor
adc
mov
outsl
mov
sbb
dec
cmp
cmp
inc
jae
dec
cmc
enter
or
lahf
push
fst
or
popa
lahf
testl
inc
rcrb
inc
gs
arpl
sub
std
mov
ljmp
or
loopne
mov
pop
mov
into
loop
loopne
push
jmp
push
dec
add
fsubrs
sti
rcrl
jno
or
ds
sbb
xlat
je
sahf
fistpl
xchg
jns
inc
adc
sbb
mov
sbb
nop
rclb
sti
cmpsb
push
popf
inc
xor
sub
aad
inc
filds
push
adc
add
je
add
enter
ret
cld
xchg
jno
lret
shrl
pop
cli
cmp
shrb
ret
mov
xor
jno
div
mov
sub
mov
jne
fdivrp
adc
add
mov
mov
inc
push
and
pop
and
and
pop
cmpsb
cmp
push
dec
sbb
lcall
stos
xor
xchg
ss
or
sub
shl
jl
in
pop
pop
xchg
repnz
sub
and
sub
inc
sub
adc
jp
dec
cmpsl
xor
mov
push
inc
push
pop
push
mov
or
or
sub
add
sub
sub
jae
loope
jmp
dec
xchg
js
push
ret
mov
lret
dec
xor
insl
popl
pop
xchg
data16
xor
xlat
loopne
jge
enter
pop
cltd
mov
shll
xor
mov
scas
inc
fmuls
inc
pushf
cmp
cmp
pushf
fdivrs
in
adc
loope
cmp
inc
mov
xor
sahf
pop
movsl
pushf
lods
outsb
mov
mov
mov
dec
mov
jb
xchg
test
jns
jb
mov
int
push
jg
dec
sti
movsb
cwtl
negl
shrl
sub
push
add
fcoml
les
xchg
push
inc
xor
les
pusha
xor
add
or
in
adc
or
roll
dec
imul
add
nop
stc
cs
inc
xchg
out
push
cmp
and
data16
cld
adc
push
outsl
mov
push
push
jle
in
gs
aas
or
sahf
mov
xlat
ss
pop
outsl
cmp
icebp
mov
jae
adc
int
jb
les
out
jmp
adc
mov
aaa
fmull
and
adc
push
hlt
adc
jl
jp
pop
js
pop
mov
lret
sub
mov
cmpl
xchg
popl
sub
push
push
outsl
loopne
sbb
push
inc
mov
sub
aas
sbb
mov
test
insb
pop
xchg
inc
pop
popf
lock
push
dec
andb
xchg
std
inc
add
or
inc
jb
cmp
xor
xchg
and
nop
lret
aas
xchg
testl
dec
sub
aam
mov
std
test
test
jno
pop
fwait
mov
mov
mov
jno
pusha
xchg
inc
or
inc
and
dec
dec
xchg
divb
add
sub
roll
mov
mov
and
mov
push
lret
and
je
xchg
cli
cmp
in
jg
out
and
cmp
sbb
int
pop
rolb
test
loope
clc
imul
je
sub
fld
mov
popa
test
loop
jl
test
scas
add
mov
in
mov
movsl
ja
mov
mov
jns
outsl
cmp
jnp
in
mov
adc
pop
sbb
adc
sub
mov
fdecstp
pusha
push
outsb
cmp
enter
addb
xchg
int3
push
jno
paddb
mov
filds
popf
leave
mov
test
pop
stc
insl
nop
test
loop
cltd
popa
mov
jmp
loop
hlt
inc
push
insl
dec
dec
data16
stos
das
sub
or
xorl
add
add
mov
add
add
sbb
add
add
add
pop
or
leave
adc
add
adc
add
push
add
add
incl
adc
add
add
pusha
pushf
pushfw
verr
verw
popf
popfw
pushfw
verw
popfw
mov
call
mov
and
shl
pop
add
lea
mov
call
mov
mov
call
mov
pop
add
cmp
push
mov
mov
pop
pusha
call
pop
add
call
pop
shr
xor
sub
mov
shl
mov
dec
jne
push
push
ret
pop
inc
popa
lods
push
push
mov
add
pop
push
inc
xor
pushf
pushfw
verr
verw
popf
popfw
pushfw
verw
popfw
pop
pop
inc
push
and
inc
shr
pop
stos
dec
jne
popa
call
call
pop
add
ret
jle
popf
mov
and
bound
in
fnstenv
jcxz
enter
jmp
adc
pop
iret
mov
lods
mov
fstps
stos
adc
or
cmp
je
sub
lods
mov
mov
arpl
iret
lods
pushf
lods
stos
adc
bound
add
inc
inc
cmp
mov
mov
subb
into
incl
inc
sub
add
push
and
insl
mov
insl
mov
jge
movsl
andl
cmp
or
or
jb
fsts
cs
aaa
cs
iret
bound
jmp
lods
stos
sub
sarl
gs
iret
ljmp
jno
jne
scas
add
add
mov
rorb
fidivrl
int
lods
data16
pop
into
push
sub
and
add
insl
cmpsb
pop
push
mov
lods
or
mov
pop
sbb
or
pop
or
fisubs
js
stos
out
and
cmc
test
push
lods
outsb
mov
mov
movsl
movsb
and
mov
icebp
jecxz
jmp
or
sbb
popa
xlat
iret
mov
popf
fstps
xor
jb
and
xor
arpl
push
fnstenv
sub
gs
and
or
or
jb
bound
es
jae
inc
xor
adc
popf
adc
or
loop
bound
popf
jae
stos
and
xor
adc
or
popf
adc
adc
mov
popa
and
jmp
xor
pushf
xchg
cmp
and
and
ja
fnstenv
es
jle
sub
out
pop
into
loope
jb
out
pop
repnz
xor
popf
fnstenv
lods
mov
and
mov
mov
bound
popa
es
jmp
scas
daa
fsubrp
jae
scas
aaa
fldpi
jae
scas
aaa
sub
out
popf
jg
push
lcall
out
cs
jmp
outsb
push
mov
xchg
lods
aaa
ss
popa
out
and
pop
bound
arpl
jmp
sub
jo
subl
in
mov
fsubrp
imul
lods
mov
mov
movsl
or
bound
fsubl
push
bound
popa
xlat
insl
nop
das
out
bound
bound
push
hlt
jmp
jmp
pop
xchg
and
stos
insb
jle
bound
insl
stos
std
bound
jmp
lret
push
aam
insb
scas
das
cli
mov
mov
pop
andb
sbb
bound
out
sub
out
test
jmp
mov
jne
aas
fsubrp
pop
outsb
sub
cmp
cltd
out
cs
arpl
das
jmp
sub
fistps
outsb
push
jge
movsl
cltd
bound
bound
dec
fbld
lods
das
repnz
hlt
out
jmp
insl
mov
mov
dec
pop
outsb
or
lea
dec
jmp
mov
insl
stos
ss
push
add
bound
out
push
popf
fstps
bound
jmp
mov
xor
push
lcall
out
cs
daa
fsubrp
imul
lods
xchg
out
sub
pop
sub
xor
loopne
es
bound
popa
xlat
jmp
popa
hlt
mov
push
outsb
or
mov
dec
call
jo
jecxz
bound
bound
push
mov
das
cs
arpl
scas
aaa
fldl2e
xor
imul
fcomps
sub
das
loope
xchg
and
popf
movsl
psrld
fcomps
lods
mov
mov
dec
in
jmp
sbb
bound
jmp
jmp
mov
and
jmp
sub
pop
out
cs
daa
fsubrp
imul
lods
lcall
pop
pop
sub
gs
bound
popa
pop
xchg
and
imul
xchg
mov
pop
and
inc
xchg
mov
movsl
arpl
lods
das
ss
stos
sub
mov
arpl
bound
pop
sub
jmp
or
bound
jmp
jmp
ss
lcall
jne
aaa
fsubrp
imul
xor
push
test
subb
arpl
sub
mulb
negl
outsb
sub
xchg
bound
dec
jmp
lods
das
shl
out
out
and
cmp
pop
jb
lods
cmpsl
cwtl
bound
arpl
adc
jmp
cs
sub
xor
push
test
daa
fsubrp
imul
lods
mov
mov
aaa
sub
sbb
push
xchg
lods
mov
es
mull
adc
gs
jne
aaa
cs
mov
imul
or
xchg
lods
outsb
sub
imul
sahf
fstps
in
mull
scas
insl
iret
andb
es
jae
or
mov
dec
in
pop
bound
arpl
jmp
lods
add
jmp
sub
pop
out
cs
daa
fsubrp
imul
lods
lcall
pop
pop
sub
xor
loope
es
bound
popa
fucomip
imul
pop
sub
jmp
or
bound
jmp
jmp
ss
mov
mov
bound
lods
pop
fsubrp
imul
sbb
out
cs
arpl
sub
fisubs
fistps
outsb
push
ja
movsl
cltd
bound
bound
dec
fbld
lods
das
into
jmp
mov
dec
pop
outsb
or
lea
dec
jmp
mov
mov
jae
lods
aaa
lret
xchg
loope
xchg
and
mov
movsl
mov
lods
das
ss
mov
bound
pop
bound
arpl
lods
pop
fsubrp
jae
sub
sbb
out
cs
arpl
aaa
jmp
sub
fcompl
outsb
push
jg
movsl
cltd
bound
bound
dec
fsubl
out
and
inc
mov
push
mov
pop
outsb
or
lea
dec
icebp
pop
bound
arpl
pop
fsubrp
jae
sub
sbb
out
cs
arpl
ja
lods
lcall
pop
pop
sub
or
push
bound
popa
fsubl
and
stos
push
cs
es
bound
movsl
arpl
int
nopl
jmp
or
xor
jecxz
push
bound
movsl
arpl
loope
push
bound
jmp
scas
aaa
repnz
bound
bound
adc
jmp
sub
push
out
cs
daa
fsubrp
jae
lods
jbe
jmp
sub
aam
push
outsb
push
ja
movsb
cwtl
bound
bound
dec
aam
enter
scas
push
mov
dec
push
outsb
or
mov
dec
lock
sti
stos
ds
pop
sub
adcb
shr
mov
movsl
pop
shlb
aas
imulb
mulb
bound
loope
xchg
and
frstor
lods
test
jg
push
jb
subl
lcall
daa
repnz
pop
bound
arpl
lods
pop
fsubrp
imul
adc
out
cs
arpl
sub
lods
xchg
out
sub
pop
sub
xor
loopne
es
bound
popa
xlat
jmp
cmc
and
pop
sub
jmp
or
out
jb
daa
popf
imul
loope
lods
cwtl
sub
bound
bound
test
sub
insb
scas
das
lret
mov
jmp
jae
stos
lods
fisubrs
mov
iret
sbb
bound
adc
jmp
sub
push
out
cs
daa
fsubrp
jae
testl
arpl
lods
daa
sub
lods
aas
ss
ljmp
loope
lret
bound
push
out
and
mov
daa
adc
jmp
sub
push
out
cs
daa
fsubrp
jae
lods
jbe
jmp
sub
aam
push
outsb
push
ja
movsb
cwtl
bound
bound
dec
aam
enter
scas
push
lods
popa
out
mov
dec
push
outsb
lods
aas
dec
loopne
aam
enter
sub
jmp
testl
push
popa
jmp
mov
lods
aas
imul
imul
das
cs
lods
pop
cs
daa
and
ljmp
ficomps
int
lods
daa
stos
in
es
