push
call
mov
add
jmp
push
mov
lods
or
imul
test
pop
addr16
sub
sbb
pop
and
fidivs
scas
or
imul
xlat
aam
pop
sbb
jnp
jg
and
lcall
push
cmc
pusha
jo
xchg
cld
movsl
mov
mov
cs
fdivp
rcl
popf
dec
or
push
ss
xlat
cmp
out
adc
push
fsubs
into
adc
scas
ficoms
adc
mov
fs
xchg
add
xchg
sbb
aad
lods
mov
sbb
inc
iret
and
lcall
jp
js
pop
dec
dec
push
adc
outsl
adc
jno
and
or
shll
outsl
add
lods
xchg
dec
fdivr
arpl
outsb
inc
stos
in
mov
mov
shl
xor
clc
and
fistpl
and
rol
jg
adc
rolb
shr
dec
xor
loopne
data16
mov
or
test
clc
js
call
scas
mov
hlt
jge
in
rolb
mov
push
mov
mov
cmpsb
sarl
aaa
enter
cmp
adc
lds
push
push
mov
push
mov
jge
pop
jo
das
push
mov
jge
sbb
and
cmpsb
sbb
flds
movsb
es
pop
les
add
mov
pop
push
mov
cwtl
xchg
xchg
mov
and
xor
inc
jle
jmp
fnstcw
or
add
and
dec
xor
inc
repnz
push
fidivrl
imul
jl
enter
fs
imull
inc
gs
fbld
mov
cmovns
xchg
jae
sub
int3
cli
mov
jo
mov
inc
sarl
adc
and
fcoml
push
inc
xlat
mov
imul
icebp
test
fs
and
fmull
sub
jo
pop
jle
bound
fnstcw
test
mov
es
or
fldcw
mov
dec
loope
mov
fisubrl
ss
push
in
adc
pop
insl
xor
adc
mov
addr16
lahf
lret
aam
add
mov
xor
mov
cld
jg
enter
and
je
jo
cmp
cmc
std
les
jbe,pt
iret
jns
data16
inc
xchg
jo
sbb
dec
fadds
out
pop
lock
xor
xchg
cmp
pop
xor
add
mov
pop
lahf
sbb
roll
cmpsl
enter
jno
bound
dec
mov
ficoml
pop
mov
jle
clc
inc
test
das
jmp
or
pushf
test
pop
and
les
mov
movsl
jb
das
iret
loope
dec
and
sbb
jae,pt
push
ja
movsl
jmp
jnp
mov
jle
and
stos
adcb
or
sub
hlt
adc
pop
das
cmp
ret
sbb
jo
aaa
mov
mov
adc
adc
adc
std
and
push
or
lds
add
mov
test
sbb
dec
popf
data16
fld
or
xor
adc
cld
fbstp
lea
fmuls
dec
xchg
test
fcmove
out
cld
pushf
xlat
insl
sbb
pop
movsl
xchg
xor
jl
and
cmpsl
mov
add
or
adc
mov
fs
xor
sub
sub
icebp
sbb
sbb
dec
cmpsl
aas
je
and
inc
das
cmpsl
pop
sarl
and
adc
and
cmp
outsl
pop
push
jns
cs
loope
pushf
into
add
cld
imul
mov
add
inc
cmp
adc
dec
or
je
or
ds
dec
pop
xchg
out
cmp
jmp
ljmp
or
or
mov
es
pop
jge
outsb
mov
and
test
iret
ljmp
movsl
dec
and
jns
lods
push
mov
add
test
jne
dec
and
mov
cmpsl
sub
bound
sub
cmp
dec
sbb
xor
mov
mov
mov
sub
add
mov
imul
jno
mov
enter
cld
outsl
xchg
lahf
ret
and
lds
not
or
addb
punpckhbw
push
or
jg
pushf
fnstcw
adc
js
pop
or
insb
jb
push
push
pop
mov
bound
mov
jns
pop
mov
jg
cmp
xchg
pop
sahf
mov
jp
add
jp
stc
mov
and
in
bnd
push
mov
cmp
iret
mov
inc
int
mov
mov
shll
scas
mov
movsb
dec
mov
inc
xlat
push
andb
arpl
xchg
push
push
sti
jne
sbb
jecxz
mov
add
rcl
psrlq
inc
dec
sub
loopne
or
pushf
push
test
inc
nop
iret
or
add
stos
push
pop
aam
sbb
or
pop
lret
or
dec
es
pushf
jp
je
daa
xchg
test
dec
fyl2x
mov
jbe
mov
cmc
pop
mov
adc
fsubrs
leave
push
mov
sbb
cli
mov
push
xchg
xchg
icebp
or
and
mov
in
jl
mov
pusha
jne
sbb
jle
add
fs
es
fldcw
jge
mov
pop
leave
xchg
or
inc
xor
mov
mov
hlt
push
out
dec
pusha
inc
movsb
push
pop
ds
imull
popf
bound
fnsave
outsl
lds
sub
and
jp
int
insl
xor
out
ds
add
and
mov
mov
movlps
jno
scas
dec
fsub
pop
rorb
fwait
mov
dec
ds
adc
cmpsl
pop
movsb
fisubs
add
mov
mov
xor
out
cmp
fs
xchg
xor
add
or
push
les
mov
hlt
xor
dec
das
fidivrl
or
jg
nop
sbb
ja
mov
jg
int
pushl
mov
fistpl
pop
xchg
xchg
cmp
movsl
dec
cmp
cmpsb
dec
insl
dec
cmp
xchg
cli
ficompl
jmp
xchg
lods
xor
adc
das
and
push
and
xchg
and
test
and
jbe
sbb
sbb
pop
leave
mov
pop
inc
xor
inc
jecxz
into
call
pop
fildll
push
inc
inc
stos
xchg
xchg
and
adc
cld
int3
fwait
loope
dec
fnstsw
add
xchg
xchg
movsb
inc
inc
dec
ljmp
and
xor
jge
insl
mov
fisttps
jno
mov
fistpl
sahf
scas
cmp
or
test
inc
cld
pop
xor
or
pop
fcompl
pop
or
jo
cli
dec
adc
pop
movsl
bound
jl
jae
das
cmpsb
cwtl
sub
scas
outsl
hlt
push
std
pop
in
push
xchg
mov
bound
jno
push
mov
xlat
dec
scas
push
mov
sbb
mov
push
dec
pop
push
mov
dec
lea
hlt
fstpt
aam
sub
jno
lret
inc
push
faddp
cltd
dec
add
insb
mov
push
add
sahf
ds
push
jne
jo
add
adc
into
popa
jnp
mov
in
pop
push
dec
insl
cmp
or
xor
rorl
es
dec
jmp
jp
push
xchg
shl
mov
jecxz
sahf
jno
mov
ficoml
fucomp
dec
popf
xor
cli
mov
iret
ss
mov
push
jp
xor
cmp
scas
push
cwtl
jns
push
bound
or
xchg
xor
aas
sti
cmp
mul
add
outsl
dec
push
aam
filds
stos
fs
mov
mov
outsl
jbe
add
or
inc
das
pop
or
imul
push
inc
sub
shll
pop
push
stos
dec
enter
adc
mov
mov
and
sbb
lahf
add
and
mov
test
fmul
mov
mov
leave
and
dec
sarl
sar
push
inc
sbb
jp
in
mov
in
push
jnp
in
xchg
and
xor
push
lock
dec
xchg
mov
inc
mov
xchg
lods
sti
sbb
push
pop
inc
add
mov
adc
inc
lds
cs
sub
lods
int3
jge
push
pop
loope
pop
aam
mov
cmp
cmpsl
ja
fdivr
mov
adc
inc
push
and
dec
movzbl
push
in
push
xchg
mov
pop
filds
outsl
cmp
inc
lods
bound
outsl
cmp
stc
dec
inc
push
scas
leave
icebp
negb
lods
and
ds
and
and
cmp
push
sbb
pushl
movl
mov
movsl
lds
ret
into
testl
push
test
das
gs
add
xor
push
mov
std
or
mov
sbb
arpl
mov
mov
inc
sbb
icebp
lods
mov
push
je
mov
dec
outsb
mov
pop
sbb
out
jge
push
adc
xor
sbb
gs
test
je
inc
sbb
jns
pop
mov
enter
out
add
pop
sub
dec
outsl
ret
lds
call
sahf
jl
or
test
pop
lods
lds
loop
add
shlb
add
mov
daa
and
js
aaa
das
dec
icebp
xor
mov
push
ret
addr16
cwtl
repz
iret
nop
mov
xchg
and
mov
and
jb
push
dec
jl
iret
ret
jo
xor
push
and
out
sahf
or
and
or
add
xor
adc
pop
cmpsb
add
dec
push
jle
stos
cwtl
add
xchg
leave
xor
or
nop
xor
dec
mov
xor
sub
daa
jno
fstps
lea
mov
cwtl
cmp
fldcw
ret
push
pusha
xchg
testl
cmpsl
xor
pop
xlat
cmp
call
jp
fnstcw
movsb
das
aad
add
mov
dec
cmp
and
enter
mov
pop
pushf
pop
aaa
adc
mov
arpl
jns
movsb
lcall
push
cmp
mov
js
push
fistl
arpl
jmp
inc
into
lea
ja
push
dec
xchg
imul
pusha
into
push
daa
push
dec
in
dec
xor
push
daa
mov
sbb
arpl
inc
push
cmpsl
sub
pushf
bound
cmp
mov
push
fisubrs
xor
add
xchg
push
mov
xchg
dec
inc
cmp
jo
sahf
inc
sbb
push
divl
sbb
fwait
jl
shll
or
dec
or
ds
arpl
enter
and
js
enter
js
fists
jne
dec
stos
mov
fdivl
das
in
outsb
sbb
movsb
aad
push
loopne
sahf
lods
call
mov
shr
sarl
and
mov
imul
jle
xchg
push
or
leave
add
xlat
push
pop
mov
and
sbb
dec
push
das
add
mov
lcall
xor
inc
jl
dec
push
sahf
jbe
out
dec
cmpsb
or
hlt
shl
inc
adc
gs
xchg
push
mov
ss
out
mov
xorl
adc
notb
pusha
sub
inc
loop
and
cmp
push
inc
mov
mov
stos
push
or
xor
dec
js
mov
cmp
sub
push
xchg
or
sarl
cmpb
mov
mov
sarb
and
jnp
fistpl
cmp
sub
jmp
jnp
lds
lock
mov
cmc
sbbl
inc
mov
xor
inc
and
adc
das
xor
and
dec
rorb
pop
cs
or
movsb
lea
sub
jo
push
jbe
sub
cli
mov
movsl
sbb
push
repnz
sub
jb
outsl
into
push
out
inc
xor
push
inc
xchg
inc
adc
xor
pop
jl
add
mov
add
iret
movsl
push
or
int3
cmp
adc
imul
out
sub
mov
rorl
jne
adc
sub
dec
push
cli
jle
or
cmp
test
add
or
sub
jge
dec
push
mov
jnp
inc
and
add
std
mov
or
adc
push
sub
add
lods
or
push
adc
ret
add
cmp
mov
dec
jae
adc
sub
or
and
jns
ret
pop
xor
mov
push
lods
jp
pop
js
nop
mov
lahf
cmp
push
rcrl
push
inc
pop
push
and
mov
jae
sub
jns
cmc
mov
and
lcall
adc
cmpsl
lahf
mov
push
stos
pop
xorl
cmp
push
add
icebp
cmp
popa
sbb
loopne
stos
call
adc
aaa
daa
xchg
add
loopne
loopne
dec
jo
xor
sub
int
or
xor
cmc
cwtl
mov
sub
xor
jecxz
jp
leave
sbb
call
inc
jmp
dec
and
scas
push
adc
push
fwait
loop
movsl
xor
sub
aaa
and
fadd
cmp
js
cmp
ljmp
push
add
sbb
and
add
pusha
xchg
jns
cltd
outsb
inc
popa
imulb
and
lea
mov
push
out
ljmp
in
jnp
lcall
xchg
dec
dec
outsl
lods
test
popa
pop
aad
jecxz
fiadds
dec
sub
incl
test
adc
outsl
loopne
mov
test
jle
inc
adc
xchg
rolb
fwait
dec
cmp
cmc
cmp
sbb
xchg
jg
push
add
ss
fnstsw
daa
xchg
sarl
outsl
pop
adc
mov
pop
push
jnp
hlt
dec
je
sub
mov
mov
repz
pop
popf
gs
cmp
lcall
inc
je
and
sti
inc
out
sub
aad
movsb
jp
addl
dec
push
pop
mov
outsb
xorl
stc
aam
cs
adc
ret
xor
in
lock
jno
cmpsl
cs
xor
cmp
aad
in
out
xor
xchg
pop
xchg
loop
das
sub
sbb
jno
mov
push
mov
push
mov
lods
scas
mov
inc
mov
jl
cmpsl
push
jg
jl
jecxz
jae
inc
push
inc
dec
pop
cmpsl
or
cmp
mov
cltd
jecxz
mov
and
addr16
in
xchg
add
cmpsl
push
xor
mov
in
mov
mov
add
rolb
dec
ss
mov
jl
or
dec
mov
fimull
jno
jg
sub
sbb
inc
es
dec
xchg
or
stc
mov
adc
or
fucomp
sbb
je
add
rcl
cmp
fwait
cmp
push
dec
sbb
jns
mov
popf
xchg
jg
jno
ss
gs
popa
jb
lahf
jbe
int3
std
int
mov
mov
imul
xor
push
daa
or
mov
jecxz
das
push
aam
call
stc
or
mov
push
pop
jne
mov
and
push
int
mov
mov
xor
push
cmpsb
mov
int
sub
cmp
fwait
sbb
xchg
inc
aad
shl
mov
xor
jo
in
dec
movsb
ret
sbb
popa
cmp
sbb
ret
mov
daa
and
loop
test
insb
xor
out
mov
inc
jb
jg
decb
cltd
push
cwtl
ja
ffreep
push
mov
push
sub
fwait
sub
mov
cmpl
sbb
dec
jge
jns
ds
pop
mov
pop
rolb
add
sbb
fwait
dec
inc
xor
and
stc
divb
shll
dec
sbb
cmp
or
ret
outsl
and
jle
and
std
push
mov
adc
inc
sub
add
test
jae
push
fnstcw
dec
dec
aam
inc
jo
add
mov
adc
sub
int3
cmp
fimull
aad
xor
and
cmc
adc
int3
out
jb
int
push
jg
cmp
les
test
sahf
jns
or
lea
add
mov
je
aaa
xor
pop
fsubrs
clc
jnp
stc
mov
insb
mov
jno
adc
jl
mov
sahf
sbb
cmp
stc
sub
ss
lea
shll
rcll
aaa
pop
cld
add
mov
adc
in
jl
das
add
cli
or
and
cmp
bound
sahf
mov
jge
fsubrs
dec
jns
ret
push
jns
sub
push
and
adc
mov
iret
adc
test
xor
fsubrl
sbb
add
aas
pushf
fldcw
je
cmp
pop
xor
cwtl
push
inc
dec
test
addr16
pusha
gs
sbb
bound
push
sub
adc
lret
xchg
adc
div
rcrl
js
mov
clc
fnsave
lds
push
das
dec
push
push
retw
lds
cmp
inc
cmp
xor
pop
jne
mov
mov
xchg
outsb
icebp
dec
mov
cwtl
hlt
jl
ret
adc
adc
int
xor
int
outsl
aaa
pop
subb
in
and
mov
movb
xchg
add
pop
sbb
cmp
fisttpll
lcall
cmp
int3
inc
loope
jle
mov
jo
inc
cmp
scas
jmp
adc
push
dec
fmuls
insl
push
push
addr16
xchg
jo
dec
fwait
mov
cmp
push
push
xor
sbb
sbb
xchg
outsl
pop
fnstcw
adc
mov
lods
scas
jne
ficoml
add
sbb
rorl
cmp
inc
push
addr16
icebp
jge
lcall
xlat
leave
sbb
pop
jb
push
add
mov
mov
inc
xor
negb
mov
mov
fcomps
negb
scas
pop
push
sarl
inc
or
cmpb
fwait
mov
rorl
push
lahf
ret
jg
rolb
add
pop
lea
jae
pop
in
or
ds
pushf
adc
jnp
pop
mov
adc
dec
out
jb
ds
jmp
or
or
add
loop
fisubrs
imul
xor
lcall
repnz
sbb
and
cld
cmp
adc
inc
insb
cwtl
iret
cltd
push
jae
mov
cmp
xor
inc
repnz
inc
aad
push
adc
insb
jae
cmp
pop
and
cmpsb
push
and
sbb
pop
iret
or
sti
fiadds
dec
dec
clc
jecxz
ret
pop
popf
dec
dec
and
jmp
and
fs
lret
clc
pop
jl,pn
inc
xlat
movsl
movsb
mov
cld
inc
mov
stos
push
add
cli
sub
adc
jp
pop
adc
stos
mov
push
cmp
rcll
xlat
xchg
out
mov
sub
lret
pusha
and
mov
xor
xchg
add
jb
bound
inc
adc
or
stos
mov
stos
push
pop
cli
push
ficoml
cld
cmp
jns
xchg
int3
fdivrs
insl
pop
adc
mov
add
xor
add
rol
mov
pop
out
inc
add
sbb
push
inc
pop
mov
fs
mov
mov
or
imul
sahf
dec
mov
mov
mov
jbe
jno
cs
stc
ds
insb
clc
addb
mov
adc
loop
mov
pop
and
dec
rorb
out
pop
aaa
or
xchg
push
push
adc
pop
fs
mov
mov
xor
adc
daa
adc
inc
pop
xor
imul
sbb
imul
subb
jno
out
clc
stos
jge
ret
aaa
and
js
sbb
and
mov
pop
xor
insb
insb
js
jecxz
inc
lds
sub
aas
ret
push
pushf
jg
push
fwait
aaa
or
inc
pop
dec
xor
incb
sti
dec
addb
pop
inc
pop
jno
sub
push
xorb
xchg
inc
push
pop
out
sbb
hlt
imul
mov
push
pop
push
jg
cs
push
jge
jne
cmp
das
mov
aam
sbb
and
ret
popa
aam
push
orb
mov
mov
shl
push
cmp
inc
lahf
mov
aaa
jne
lcall
out
mov
into
addr16
into
push
shlb
loope
es
pop
jbe
das
pop
push
imul
daa
add
paddsw
es
inc
mov
mov
push
cmp
mov
or
es
push
add
fwait
sub
push
nop
pop
mov
fistpl
pop
add
push
pop
aas
push
pop
add
popa
push
jns
dec
pop
int3
adc
push
fistpl
and
pop
jo
lar
sub
insl
inc
pop
xor
scas
sbb
sbb
cmpsb
mov
fidivrl
ja
xchg
and
jecxz
mov
aaa
push
inc
push
cmpsl
rorl
dec
leave
and
inc
sbb
lahf
in
sti
jg,pt
dec
aad
test
inc
push
fldt
and
dec
cmp
xchg
lea
popf
inc
sbb
xchg
jae
jge
inc
in
push
aaa
cmp
xchg
outsl
aam
sbb
or
movsb
pop
jnp
lret
push
push
dec
adc
adc
pop
data16
insl
loop
mov
jns
adc
push
adc
add
pop
xor
mov
inc
push
sub
cld
arpl
ds
jne
insl
cwtl
aad
push
sbb
jns
mov
inc
lods
push
sbb
cwtl
jne
js
xchg
adc
and
js
mov
es
sbb
data16
pop
adc
xor
fidivl
aad
jge
cmp
jp
push
aaa
cmp
and
cmp
fwait
pusha
outsl
leave
repnz
dec
call
lods
push
push
inc
pushf
dec
jecxz
inc
jl
ret
xchg
push
das
push
jnp
dec
mov
setge
push
push
insl
outsl
mov
dec
shrl
sbb
ret
adc
push
stos
add
insb
pop
jae
push
mov
adc
mov
sub
pop
rcll
je
xor
test
lods
cmp
mov
test
arpl
ds
xchg
pop
pop
cmp
out
insb
inc
jbe
cmp
or
or
fsubrs
push
inc
inc
sub
sub
addr16
or
pop
pop
adc
xor
add
inc
lods
scas
iret
test
sar
dec
das
xchg
xchg
pop
or
fstpt
fsubs
pop
xor
or
dec
push
sbb
adc
xchg
sbb
xchg
jmp
mov
int3
cltd
push
sbb
popa
jl
jae
std
inc
dec
ret
xor
mov
test
in
jae
sti
add
or
and
pop
jg
call
pop
in
pop
xorl
inc
ret
push
or
mov
hlt
lock
sub
dec
out
cli
inc
mov
push
mov
inc
rorb
push
mov
dec
add
int3
lods
adc
cmc
mov
xchg
int3
xchg
inc
divl
jno
scas
mov
fimuls
sbb
ss
push
cmpsb
test
push
sub
mov
dec
test
jecxz
out
outsl
adc
shrl
sub
dec
aaa
pop
inc
push
rorl
dec
inc
and
mov
mov
mov
jae
pop
pop
sbb
sbb
inc
je
adc
fs
and
cltd
pop
cmp
fxtract
jle
push
pop
cmpsl
or
pop
in
cmp
cmp
divb
xor
sti
inc
push
xchg
mov
adc
mov
push
nop
pop
inc
cmpl
shlb
rclb
mov
imul
test
std
xchg
daa
clc
pop
lods
imul
lds
sahf
pop
inc
pop
mov
cmove
add
push
daa
cmp
dec
mov
add
xor
sub
jno
lods
push
stos
lock
xor
pop
push
lods
inc
mov
mov
push
push
mov
lret
insl
dec
jle
in
mov
jl
mov
in
inc
push
pop
fcomps
jae
inc
dec
idivl
fwait
cmp
xor
inc
adc
ret
cmp
cmp
mov
lcall
push
sub
mov
pop
add
popa
dec
or
pop
dec
ja
adc
pop
mov
sahf
jmp
adc
cld
imul
int3
ds
push
aaa
sub
push
push
inc
insl
insl
cltd
dec
aaa
jmp
loope
sahf
mov
pop
adc
or
pop
or
or
andb
sbb
mov
or
pushw
xchg
pusha
lods
and
mov
dec
sahf
pop
ret
ljmp
jl
pop
xchg
dec
adc
mov
into
jae
mov
add
lahf
xchg
mov
add
adc
out
and
popf
xchg
xchg
jl
push
cs
fdivrp
and
cmpsb
outsl
pop
push
aam
jnp
jecxz
jo
iret
xor
xchg
lahf
mov
call
stos
inc
es
pop
adc
repnz
hlt
std
pop
movl
movl
push
lcall
inc
in
sub
cs
push
pop
jge
and
andb
stos
pop
and
sub
mov
in
jg
push
inc
dec
into
mov
cld
mov
iret
push
adcb
dec
push
daa
cltd
cmp
mov
es
mov
rcr
aam
rcrl
xor
subps
xchg
pop
stos
push
daa
out
cmp
into
aad
mov
sub
in
xchg
es
fldln2
dec
sbb
gs
mov
enter
xor
decl
inc
add
fadds
adc
data16
dec
fwait
cmp
inc
mov
shrl
aas
and
adc
add
pop
sbb
fwait
out
mov
sub
loope
addr16
mov
adc
cli
push
xchg
jnp
inc
pop
push
pusha
and
shll
pusha
movsl
mov
lods
push
aad
push
push
dec
lahf
adc
popf
jo
jae
testl
fwait
lods
mov
inc
and
in
lcall
add
push
mov
pop
popf
jle
stos
mov
fists
inc
fildl
and
mov
sbb
or
nop
imul
ss
pop
cmp
push
lret
sub
xchg
daa
sbb
and
test
push
pop
push
test
imul
xorl
loopne
jb
les
faddl
sub
sbb
scas
push
pusha
imul
or
jmp
xor
je
inc
hlt
add
add
mov
popa
ljmp
mov
sbb
push
sahf
xorb
outsb
adc
outsb
sub
rcll
subb
dec
xchg
mov
ja
ret
fimuls
jle
cmp
repnz
mov
inc
jl
push
inc
and
pop
sahf
ds
fiaddl
out
dec
and
inc
push
stos
enter
or
dec
aas
ror
neg
test
mov
or
in
cmp
push
add
push
push
cmp
movl
push
outsb
std
xor
inc
mov
jno
sbb
pop
addr16
jge
push
fldcw
xchg
mov
sub
xor
dec
and
es
jecxz
daa
pop
and
mov
movsb
addr16
fcomps
push
push
sbb
cli
ljmp
dec
xchg
out
pusha
iret
dec
xchg
test
cmp
push
je
inc
mov
addr16
mov
lahf
daa
xchg
sub
or
fldcw
in
inc
sahf
bound
adc
adc
jae
xchg
mov
movsl
insl
dec
bound
sub
inc
dec
aaa
xor
adc
jnp
xor
pusha
call
jl
leave
adc
xor
mov
outsb
xchg
sti
stos
movsb
mov
mov
inc
stc
add
loop
mov
or
adc
addr16
adc
push
gs
movsb
loopne
cmp
adc
loop
sbb
dec
roll
xor
xor
pop
pop
sarb
xchg
gs
mov
hlt
dec
or
outsl
pop
mov
inc
add
and
ds
mov
mov
in
xor
push
jo
mov
jecxz
push
mov
aad
adc
jns
shr
pop
lret
mov
clc
add
add
fdivp
push
inc
call
push
adc
mov
es
sarb
das
push
data16
pop
pop
fidivs
out
sbb
fdivrl
hlt
out
sbb
mov
cmpsb
sbb
in
jo
aad
or
popa
sbb
repz
pop
dec
dec
je
sub
jae
lret
lret
pop
sub
fidivs
add
xor
divw
xor
addr16
xchg
push
dec
xor
sub
andb
lds
into
and
lds
pushf
pop
push
movsb
aad
hlt
orb
test
push
stos
jmp
in
dec
push
mov
mov
sbb
sub
mov
push
lahf
jecxz
rcr
inc
mov
sbb
in
cmc
pop
nop
dec
sbb
test
adc
or
loope
inc
enter
je
dec
inc
or
fldl
addr16
sub
sbb
mov
repz
outsl
mov
sarl
push
aaa
int
shrb
int3
data16
mov
movsb
dec
xlat
mov
call
inc
xlat
push
rorb
jle
dec
sbb
inc
movsl
aad
js
icebp
xchg
aam
or
and
inc
dec
inc
adc
or
or
insb
push
xchg
ja
jle
push
sahf
gs
adc
ficompl
jmp
std
enter
js
sbb
sbb
push
jno
jg
in
test
jge
jns
inc
jmp
sbb
aam
mov
ret
rcrb
imulb
and
jns
mov
cwtl
sbb
sbb
mov
mov
cmp
dec
xor
scas
mov
inc
sub
je
sub
cmp
les
xchg
aad
arpl
jb
mov
push
push
stos
pop
xorl
pusha
or
mov
icebp
push
adc
dec
outsb
cmp
lock
dec
fistps
inc
push
and
inc
pop
stos
int3
add
inc
sahf
outsl
dec
inc
dec
push
fistl
sbb
push
imul
mov
aam
mov
push
xchg
neg
imul
cmpsb
loopne
inc
push
lahf
push
mov
jecxz
pop
adc
test
xchg
pop
adc
pop
lds
push
inc
das
pop
stos
mov
aam
and
sub
or
inc
sub
mov
dec
add
daa
notb
fiaddl
leave
inc
mov
mov
in
es
add
rorb
cmp
adc
into
fcomip
jae
or
mov
jle
mov
push
push
aad
and
test
adcb
mov
mov
flds
push
out
add
outsl
dec
cmp
sub
int3
inc
lock
xchg
inc
adc
or
pop
xchg
test
stc
cmp
nop
mov
test
xchg
or
pop
ffree
movsl
dec
inc
inc
jle
icebp
adc
lret
data16
xor
gs
cltd
pop
fwait
out
push
jo
imul
adc
test
or
add
cmp
sub
and
out
mov
mov
sub
xchg
adc
fdivr
rcl
and
and
sahf
fidivrs
leave
adc
in
sub
xlat
popf
ret
mov
xchg
movsl
int3
sub
xchg
adc
jne
inc
es
out
stos
aas
lret
addb
arpl
sahf
inc
xor
pop
mov
fildll
lea
jno
dec
and
sbb
outsl
add
and
jle
daa
fdivr
rcrb
stos
pop
jns
xchg
pop
dec
mov
dec
das
and
cmp
je
mov
in
and
arpl
pop
jo
adc
test
mov
pop
inc
push
cli
outsb
or
jl
jnp
inc
scas
pop
jnp
out
sbb
loopne
sbb
dec
xor
add
repz
mov
pop
mov
ret
pop
xchg
cmp
negl
jmp
in
rcl
movb
push
and
dec
ret
fistpl
insl
and
mov
shlb
dec
mov
ljmp
shr
out
sbb
dec
pcmpeqb
sbb
inc
aam
jg
lds
inc
loope
or
jg
inc
xchg
je
inc
lods
mov
pop
stc
jp
sahf
mov
sbb
bound
lret
mov
mov
push
out
fisttpll
imul
push
xchg
xor
data16
test
sub
cmc
sarl
loopne
or
push
mov
test
hlt
fldt
xchg
fmull
fcmovnu
imul
gs
jnp
sbb
scas
mov
pop
repnz
xor
pop
popf
mov
add
orb
and
popf
loop
dec
out
cmpsb
test
inc
stos
xor
inc
push
jo
cmpsl
ds
ds
mov
dec
lea
mov
lea
outsl
std
sub
repnz
mov
cmp
movb
cmp
inc
mov
je
push
test
adc
lahf
jg
adc
inc
sbb
inc
xor
into
sub
cmp
in
adc
push
xor
test
jg
jge
inc
insl
push
test
in
mov
dec
pcmpeqb
rcr
comiss
inc
lods
jle
test
insl
xor
int
test
outsb
sub
daa
jg
jnp
xadd
xor
dec
arpl
or
pop
mov
push
mov
pop
jns
lret
aad
pop
or
loope
addr16
sbb
lods
aam
dec
sub
sbb
out
scas
jns
movsl
push
ret
fisubs
lret
push
mov
shr
cmp
jnp
stos
dec
xor
pop
adc
cmp
mov
mov
lret
stos
or
xchg
fstl
sbb
push
ret
iret
jns
fidivl
mov
mov
aam
jge
jno
and
rcl
xchg
xchg
add
inc
int
xchg
je
adc
adc
loop
and
ja
rorb
push
sub
mov
mov
inc
dec
adc
adc
add
mov
or
inc
in
mov
rorb
xlat
in
pushf
mov
iret
adc
stos
or
int3
dec
pusha
fildl
cmp
in
pop
jno
push
into
in
into
push
sbb
jmp
fldl
adc
mov
inc
inc
and
gs
mov
and
mov
popa
and
adc
jp
and
adc
push
loopne
mov
movsb
sub
adc
popf
or
mov
int3
sti
iret
cltd
bound
loop
dec
mov
push
sbb
sbb
cmpsb
cmp
fstpt
fcoms
inc
sub
sti
into
popa
jge
xor
mov
adc
cmpsl
adc
adc
mov
add
outsl
stos
adc
add
int3
mov
rcll
hlt
adc
cmp
jns
add
mov
dec
int3
and
mov
xor
inc
cmp
jle
imul
inc
push
fwait
jmp
mov
adc
cmc
sbb
xchg
sub
aas
inc
adc
and
stos
push
inc
mov
shlb
mov
xor
inc
or
jle
cmp
xor
jmp
dec
inc
in
enter
mov
dec
nop
aaa
pop
xchg
dec
loopne
push
sbb
mov
adc
popa
into
repnz
mov
clc
mov
pop
cmp
cld
add
push
cmp
sbb
fistpl
into
mov
adc
xor
jge
xchg
inc
popf
into
mov
iret
xor
bound
popf
into
xor
into
insb
cmpsb
jnp
es
adc
ds
push
jne
leave
cltd
pop
jge
pop
das
movsb
mov
mov
pop
push
xor
xor
sub
test
sub
jne
inc
aas
push
fnsave
fmuls
leave
int3
lds
mov
inc
iret
and
std
jne
jno
fnsave
jle
dec
adc
iret
xor
iret
insb
idivl
adcb
and
shlb
inc
mov
push
adc
push
dec
mov
and
push
cmc
mov
cld
push
sub
mov
in
insl
adc
add
jns
dec
rcl
out
test
mov
cltd
jae
sbb
ss
push
xor
ss
sub
jbe
stc
dec
fistl
push
pop
jb
push
xchg
pop
jae
das
es
sbb
xchg
inc
adc
jns
stos
cmp
push
jl
scas
jbe
push
clc
lahf
pusha
test
adc
rcr
scas
add
inc
aaa
das
andb
sbb
jno
int3
imul
imul
fcmovbe
jl
or
ret
adc
in
mov
inc
dec
lahf
stos
rolb
push
xor
xchg
pop
data16
pop
sbb
bound
pushf
jle
pop
and
arpl
add
pop
dec
pusha
push
inc
dec
jp
or
sbb
imul
and
iret
hlt
cmp
mov
mov
mov
mov
xor
in
ds
js
loop
sub
mov
adcl
movsb
cli
pop
je
enter
mov
push
ficompl
or
lods
sub
sub
nop
dec
insb
jns
cmp
xchg
ja
jno
mov
or
pop
push
adc
daa
or
jg
or
fnstcw
push
jno
jl
add
cmp
inc
dec
inc
cwtl
popa
jns
mov
out
sbb
pushw
add
add
out
jbe
dec
ds
sti
push
or
add
mov
or
lea
inc
aad
ljmp
lahf
inc
and
cli
jl
subb
dec
clc
adc
cltd
adc
xchg
pop
fidivrl
push
dec
jae
pop
jns
dec
adc
jge
sub
out
jp
shlb
jb
mov
clc
cld
daa
cmpsl
sub
stc
mov
popa
jns
fadds
mov
adc
inc
sbb
pop
dec
popa
js
jae
sti
dec
and
jle,pn
test
pop
dec
jle
mov
clc
inc
cs
ja
fcomip
inc
xlat
push
push
repz
hlt
pop
idivl
push
add
push
xor
dec
fstl
jae
scas
bound
dec
iret
or
ds
inc
and
add
jle
in
mov
jle
mov
mov
sbb
shll
jp
jle
mov
dec
sub
cmpsb
lcall
mov
or
dec
lods
xchg
add
ljmp
sbb
xchg
or
insb
jle
xor
fnsave
fsubrs
mov
dec
aas
adc
std
cs
pop
out
sub
js
add
xchg
jle
in
mov
mov
ljmp
addr16
xchg
sbb
js
aad
shll
ss
int
aas
fcoms
hlt
lret
repnz
lahf
add
cld
mov
fidivrs
pusha
loopne
imul
addl
adc
imul
fwait
dec
arpl
in
nop
in
mov
mov
lahf
mov
nop
mov
aam
aad
dec
push
scas
loope
push
ljmp
mov
lahf
fimuls
je
jle
mov
pop
xor
mov
repnz
cmp
cmp
lea
dec
sbb
jbe
clc
fdivrl
xchg
add
sub
dec
mov
addr16
addr16
ss
xor
add
cmp
hlt
cmp
push
mov
xchg
push
gs
and
mov
inc
cwtl
imul
mov
sbb
cmp
test
xchg
insl
aas
cmp
js
fsubr
aas
sbb
xchg
sbb
or
or
push
xchg
mov
stc
adc
clc
sbb
xchg
sub
cmpsb
fistpl
adc
sar
jnp
push
xchg
popa
push
add
call
adc
aaa
ljmp
popa
dec
in
pop
or
sub
mov
dec
jle
cmpsb
adc
out
push
sarl
fmuls
fldl
xor
cmp
iret
lods
pop
daa
outsb
fisttps
mov
outsb
in
sbb
push
int3
cmp
mov
dec
jne
stc
stos
vcvttpd2dqx
mov
mov
sub
insb
sbb
jge
xchg
inc
lds
test
xor
sbb
push
push
in
adc
mov
cmp
int
jb
outsl
scas
push
pusha
test
loope
test
or
or
lcall
xchg
sbb
mov
pop
cld
stc
adc
mov
pop
inc
lret
jg
adc
push
testb
xor
loopne
cmpsb
jnp
out
ja
inc
add
or
sbb
hlt
mov
xor
imul
add
jp
int3
xchg
scas
pusha
jbe
sarl
dec
in
aad
push
xor
xchg
lret
cwtl
mov
dec
jle
or
and
and
cs
xor
or
pop
lods
scas
int
bound
pop
or
mov
movsl
roll
fmuls
mov
shrb
cltd
xchg
ret
clc
push
stos
dec
mov
push
es
ss
jl
cmp
pop
pop
adc
mov
jo
sarb
cmp
dec
sbb
inc
adc
cli
pushf
pusha
inc
adc
ret
mov
scas
cmp
sahf
popa
adc
js
dec
iret
cmp
jne
mov
jg
adc
jne
nop
cwtl
sub
lods
push
lcall
jnp
sbb
xor
xor
inc
mov
and
pop
shrb
sub
lcall
aaa
xchg
dec
sahf
outsb
xor
mov
out
xchg
mulb
sti
aam
mov
int3
cmp
out
sbb
xlat
push
xchg
aaa
lahf
cmp
rolb
mov
aaa
lret
add
test
pop
stos
dec
mov
lret
shlb
pop
cmp
movsl
sub
inc
sbb
fmuls
push
pop
iret
and
push
sarl
cltd
xor
mov
fnstenv
das
es
ljmp
rcrb
pop
in
pop
addr16
add
mov
inc
imul
daa
sub
pop
das
jp
mov
sub
pop
xchg
pop
sbb
xchg
sub
and
out
sbb
clc
ja
push
daa
jno
sbb
push
xlat
add
mov
or
out
and
jb
mov
aam
adc
ret
popl
out
pop
jns
int
add
push
in
data16
sub
test
aam
arpl
mov
pop
mov
inc
fxch
mov
in
xor
dec
stc
bound
mov
dec
xchg
jp
push
fs
scas
in
pop
lahf
pop
cmp
inc
in
jbe
aam
mov
push
or
jecxz
mov
insl
mov
arpl
fisttpll
xor
jns
aas
push
and
imul
int3
jo
mov
push
dec
xor
lods
jo
stos
xor
imul
outsb
mov
sti
scas
out
or
icebp
je
adc
adc
or
dec
js
pop
lds
mov
js
into
or
and
mov
cmc
push
add
mov
aaa
adc
inc
cld
test
add
ucomiss
xor
push
push
jo
pop
dec
cli
pop
imul
je
jae
jp
adc
ret
adc
das
popf
jno
push
fistpl
sub
into
mov
and
jg
cmp
sub
push
popl
imul
xor
in
cmc
jns
test
js
mov
cld
hlt
sbb
fistpll
ss
mov
data16
idivb
out
es
movsb
sub
push
ss
and
ss
sbb
adc
cmpsl
movl
mov
dec
in
cld
test
or
fwait
cmp
mov
cmc
or
jl
dec
dec
adc
loop
subl
push
xchg
push
les
pop
pop
push
xchg
jae
lods
push
add
dec
pop
movsl
btr
bound
loop
loope
sub
cmp
mov
lea
loope
jle
xchg
pop
and
cltd
jge
dec
cmp
imul
xchg
xor
mov
jno
std
xchg
pop
pop
ret
push
das
push
stos
stc
stos
jns
xor
gs
sub
xor
add
add
push
stos
bound
add
loop
out
mov
inc
dec
rcr
mov
jle
xchg
xor
mov
das
dec
inc
pushf
flds
mov
jle
xchg
je
dec
ret
popf
jnp
dec
test
std
mov
sub
mov
xchg
out
shlb
xchg
sbbl
sbb
xchg
adc
mov
jl
mov
das
cld
das
jo
fldenv
aad
arpl
rcrb
xor
jg
popa
imul
arpl
stos
imul
stos
dec
scas
shr
mov
mov
aaa
in
fwait
lret
and
jl
push
push
cmp
jmp
xor
dec
cmp
les
sub
loope
clc
adc
insb
stos
fnstenv
xor
inc
pusha
pop
les
cltd
int
mov
dec
test
push
enter
shlb
xor
dec
push
and
inc
insl
cmp
push
mov
arpl
sahf
cmp
mov
je
cmp
and
popf
insl
fidivrs
sub
out
adc
imul
jl
sti
sti
rcl
inc
xchg
gs
insl
mov
fs
sub
mov
mov
mov
dec
std
xor
ja
aam
and
pop
and
or
cmp
cmpsb
and
jg
or
xchg
jnp
shr
jno
mov
bound
lods
jge
imul
xlat
aam
inc
stos
add
xor
pop
mov
arpl
inc
xlat
icebp
mov
and
movsb
add
lahf
xchg
addr16
imul
inc
adc
xchg
addl
movsl
add
jo
jne
std
inc
std
lods
xchg
jge
bound
outsl
push
pop
mov
cmc
fildl
aaa
jb
or
mov
out
pop
dec
test
dec
jl
rolb
das
stos
out
dec
or
scas
dec
leave
cmpsb
xchg
adc
pop
cmp
scas
popa
pop
inc
inc
xchg
pushf
fistpl
aaa
das
add
movsb
ss
and
fprem
push
mov
cmp
jmp
or
hlt
sub
mov
arpl
push
call
gs
repz
mov
loop
int3
adc
or
fstpt
data16
mov
cmp
pop
jbe
mov
aad
adc
cmc
mov
lea
fs
rclb
sub
in
sub
repz
nop
mov
inc
fwait
jg
je
int
fbld
nop
xor
cli
xlat
xor
inc
jecxz
inc
jae
jae
mov
out
sbb
lds
bswap
mov
mov
xor
mov
add
lahf
insb
xor
dec
cmpsl
mov
outsb
int3
int3
push
ljmpw
int3
sahf
sahf
xor
push
push
rclb
inc
movsb
arpl
ret
inc
sahf
sbb
and
push
fnsave
xchg
dec
inc
cmp
jle
dec
adc
xor
cwtl
mov
testb
mov
add
pop
fcmovnu
aaa
add
jg
lods
xchg
in
das
mov
mov
sub
adc
or
jns
mov
mov
mov
xchg
mov
mov
xchg
add
int
pushf
repnz
shll
stos
insl
mov
push
add
add
std
aad
pop
push
sahf
mov
jb,pn
mov
fwait
mov
stos
dec
or
cwtl
push
cmpsb
int3
mov
aam
inc
mov
aaa
mov
dec
rcrl
shrb
ja
push
push
push
push
das
iret
xor
fucomp
mov
dec
ss
xchg
mov
clc
les
testl
dec
cmp
popa
int3
adc
mov
mov
lcall
push
sbb
int
pmaxub
aam
sahf
xchg
mov
nop
xchg
push
inc
push
and
jmp
call
sub
popf
icebp
lcall
sahf
push
jecxz
dec
jb
sbb
imul
cld
stos
pop
and
jle
cmp
push
dec
dec
sbb
aas
fstpt
lock
leave
pop
mov
subl
movsb
aam
mov
dec
nop
jb
inc
testl
mov
push
add
and
inc
cmp
popf
out
mov
pop
mov
push
push
mov
lods
aaa
movsb
fidivs
fiadds
push
sbbb
xchg
in
cld
loopne
pop
gs
jmp
and
fs
lret
cltd
flds
or
cmp
push
mov
and
mov
mov
pop
add
shrb
push
rclb
dec
sub
mov
mov
shlb
add
popa
lods
jnp
pop
in
jge
imul
clc
popa
into
jae
dec
adc
xchg
jnp
and
push
pslld
adc
repnz
imul
test
pop
mov
das
js
out
in
loop
dec
push
lds
aaa
test
pop
inc
add
cmpsl
iret
cmp
gs
push
jmp
rol
or
in
add
push
aad
sub
push
xor
fmull
lcall
mov
ja
cld
pop
gs
lret
jp
xor
iret
pop
push
js
test
ret
movsl
mov
pop
imul
call
nop
aad
das
jnp
ror
cmpb
das
pop
shll
sub
test
jne
adc
sub
ret
in
fistl
lock
jne
jb
stos
ret
arpl
daa
jmp
xorb
mov
and
int
or
or
mov
loopne
add
in
rcrl
fwait
outsb
xchg
push
stos
sub
pushf
xchg
jb
push
int
imul
aam
jecxz
mov
jecxz
or
pushf
into
test
imul
dec
push
cld
dec
mov
movsl
jge
insb
cwtl
sub
testb
push
test
push
shl
loope
xor
mov
es
mov
and
fisubl
inc
mov
adc
aam
repnz
add
cmc
adc
out
ss
inc
cwtl
xor
test
aam
loop
scas
jb
mov
push
cmp
mov
mov
or
sub
push
shrb
mov
imul
lcall
mov
add
jbe
xor
outsb
scas
sbb
rolb
xor
push
push
lea
adc
rcr
test
testl
mov
jo
aad
imull
shl
pop
xor
jl
lret
dec
repnz
jns
jbe
addr16
xor
insl
sbb
in
inc
pop
popa
cmpsl
rorl
outsb
jp
mov
xor
leave
ret
push
out
mov
sub
mov
xchg
movsb
std
dec
mov
ficompl
jmp
mov
jno,pn
cmp
push
ret
cmp
pop
push
xlat
push
pop
mov
cwtl
jnp
xchg
push
xlat
das
cmpsb
repz
je
cwtl
insl
sbb
int
cmpsl
out
and
mov
popf
or
stos
adc
cwtl
xchg
imul
add
addb
sub
scas
sbb
js
jbe
xor
push
mov
jne
fidivs
pop
dec
fiadds
loope
fbstp
ljmp
aaa
iretw
cwtl
adc
and
mov
subl
popa
mov
dec
inc
push
dec
jno
push
xor
mov
out
jne
daa
or
bswap
xchg
pop
push
aad
loope,pt
data16
out
jl
pop
insb
adc
arpl
shrl
push
divb
mov
xlat
and
movb
sbb
inc
sbb
testb
mov
nop
jge
fimuls
mov
add
js
hlt
movsb
jo
stos
add
pop
dec
test
lods
add
and
mov
ret
or
mov
sti
jp
scas
pop
ss
loope
jl
imul
pop
pop
insb
cwtl
aad
pop
pop
pop
push
sub
push
nop
jl
pop
stc
and
shlb
lods
push
aaa
daa
aad
jg
jns
xor
les
call
jecxz
push
pop
ljmp
popf
dec
sar
push
adc
cmpsb
xor
lds
in
scas
addr16
pusha
int3
pop
mov
or
xor
mov
js
xlat
xchg
xchg
jb
loop
add
ds
aas
xor
fwait
mov
mov
popa
mov
bound
adc
jae
rcrb
call
mov
mov
imul
mov
xchg
pushf
aaa
inc
fucom
fisttpl
dec
mov
pop
mov
adc
jge
add
push
push
pop
sub
and
sbb
movsl
jo
jo
movl
stos
sub
push
jns
inc
dec
insl
mov
xor
pop
xchg
gs
push
icebp
shrl
push
mov
dec
jnp
daa
sarl
adc
js
sbb
push
or
in
jae
rcrb
xor
sub
in
add
in
cmpb
jbe
adc
inc
or
sbb
add
xchg
push
cwtl
scas
imul
in
fnsave
sbb
mov
outsb
shrl
stos
xor
mov
sbbb
sub
popa
push
ja
or
aam
mov
mov
cli
shl
jnp
inc
test
push
rcll
je
aam
mov
push
sbb
jne
pop
popa
and
lret
push
mov
dec
test
dec
imul
out
std
jns
sbb
jmp
or
mov
les
add
dec
pop
cmp
mov
pushf
dec
pop
jns
push
dec
adc
movsb
xchg
scas
lods
push
repnz
ret
addl
data16
mov
aaa
inc
inc
stos
xchg
push
adc
add
addr16
cmp
cmp
add
jp
mov
es
mov
jl
movsb
pop
aad
int3
aaa
dec
xor
cli
fs
jno
pop
sub
adc
pushf
pop
clc
dec
mov
ljmp
cmp
and
jb
ss
popf
sub
jo
ss
gs
outsl
lret
das
scas
shlb
aad
iret
inc
dec
fnstcw
and
lds
pop
jnp
sbb
clc
stc
pusha
cwtl
push
jl
leave
and
pop
mov
jb
mov
or
les
xorb
in
bound
push
pop
push
mov
xchg
add
rol
cmp
sbb
inc
xlat
insb
insb
pop
and
xchg
sbbb
xchg
sbbb
fiaddl
aam
filds
add
mov
xchg
cmp
xor
pop
adc
sbb
mov
sbb
fstl
inc
pusha
inc
scas
cwtl
push
adc
pop
and
stos
xor
repnz
dec
daa
inc
pop
jmp
loope
fwait
inc
rcrl
jne
dec
sti
mov
mov
lahf
out
outsl
repnz
inc
loop
mov
add
lcall
jno
add
test
jns
sbbl
mov
stos
pop
xchg
ret
mov
pop
push
aad
sub
dec
lds
dec
cmp
push
shlb
xor
shll
jl
nop
sub
movsl
push
outsb
dec
mov
push
add
push
stos
jp
sub
pusha
test
lds
lahf
mov
inc
jno
cmp
int
mov
xchg
xchg
xor
insl
mov
jnp
fnsave
pop
adc
pop
jno
testl
insl
xchg
out
loopne
mov
sub
pop
push
dec
sub
push
leave
lock
test
push
stc
fisttpl
mov
das
and
stos
pop
in
cmp
cmpsl
lds
fcom
mov
stc
sub
leave
pop
mov
or
jle
xchg
and
or
pop
movl
mov
mov
push
or
add
adc
xchg
or
inc
or
ds
and
aaa
and
pop
adc
sbb
inc
or
outsb
push
and
cltd
adc
xchg
push
jns
adc
hlt
fistpl
push
fs
jo
in
dec
in
insb
and
popa
insl
inc
mov
mov
mov
sub
inc
and
sub
inc
fdivr
insl
mov
pop
bound
xor
rclw
inc
or
or
nop
push
ret
add
popa
jecxz
jno
cld
lcall
adc
or
stos
push
aaa
jle
dec
lods
loop
lahf
pop
pusha
push
shll
mov
inc
jbe
cmp
add
es
xor
jnp
sbb
or
push
and
inc
jne
fwait
scas
and
in
jge
sbb
add
jle
movsl
mov
xchg
xor
imul
push
in
push
lcall
jp
out
lods
jl
mov
push
js
adc
jg
push
sbb
or
xor
and
cmp
data16
xor
ds
adc
dec
aam
add
pop
dec
add
xchg
insl
inc
aam
sbb
push
jl
aas
inc
inc
cmp
cltd
mov
xchg
dec
jp
mov
inc
gs
pop
cwtl
and
daa
cmp
dec
push
cmp
pop
push
push
xchg
in
xor
adc
adc
leave
and
ret
mov
sub
cmp
bswap
hlt
insb
sbb
testl
dec
dec
adc
sub
imul
js
dec
daa
daa
adc
ret
xchg
mov
xlat
movsl
xchg
jns
out
out
adc
cmp
sub
pop
mov
cmpsl
or
mov
arpl
shll
rcrl
sti
test
mov
loop
cmp
or
das
sti
lcall
dec
data16
std
pop
int
add
data16
dec
shlb
out
xor
push
imul
sub
adc
adc
pop
push
scas
testb
or
repz
movsl
mov
mov
repz
sahf
mov
or
or
jbe
sub
xchg
xor
pushf
inc
pop
jl
jne
sub
adc
cmp
stos
imul
sub
pop
enter
outsb
or
cltd
shll
push
pop
push
adc
inc
out
sbb
in
push
hlt
stos
cltd
aad
mov
jo
clc
xor
add
cltd
mov
fidivl
dec
sub
stos
aam
stos
aam
jp
cmp
pop
ds
in
js
sarb
es
mov
jecxz
xor
rclb
clc
jo
push
jbe
sbb
cmp
adc
xchg
sbbb
stc
dec
cmp
push
sub
aam
or
inc
push
xor
push
cmp
push
mov
jge
imul
jmp
xchg
mov
int3
fmull
xor
add
lcall
adc
pop
scas
cli
addr16
clc
mov
js
cmp
lret
mov
push
dec
insb
movsb
dec
jne
sahf
aad
jg
inc
fdiv
pop
dec
pop
mov
push
cld
mov
push
xor
scas
sahf
add
out
pop
mov
icebp
cmpsb
jle
dec
or
dec
push
out
leave
cmpsb
sub
mov
out
inc
push
arpl
dec
aam
mov
jg
cmpsl
jp
mov
aam
popw
testb
or
dec
mov
pop
gs
outsb
push
imulb
pop
mov
xchg
nop
in
sub
sub
push
cmp
sbb
jae
pushl
push
mov
stos
nop
mov
cwtl
jecxz
jg
jno
dec
nop
sbb
xor
testb
dec
sub
insl
jnp
shlb
and
cmpsl
pop
adc
xor
fiaddl
mov
std
fisubrs
mov
mov
loope
cmp
cmp
das
pusha
sub
insl
imull
lods
sub
dec
jp
mov
loopne
outsb
popa
mov
pop
sub
call
inc
jo
add
mov
inc
and
rorl
cli
ja
je
stc
mov
dec
jae
les
push
push
fcmovne
sub
arpl
inc
push
and
jns
sub
sbb
stos
ret
out
lret
cmpl
add
fmulp
or
and
pusha
loop
lret
aam
inc
data16
sub
cld
jge
jp
and
dec
movsb
or
mov
jno
cwtl
sub
push
sbb
xlat
rcr
pop
mov
push
das
adc
gs
sub
cmpsl
mov
fwait
sub
jecxz
loope
dec
aas
xor
and
or
mov
cmp
adc
fs
mov
scas
inc
jbe
ja
mov
jp
filds
imul
dec
outsb
js
decb
mov
mov
insb
lea
push
jae
dec
dec
jl
jl
insb
jb
rolb
popa
in
rorl
pop
movsl
fisubs
push
sub
stc
xchg
adcb
scas
mov
push
sahf
mov
jge
and
push
pop
and
aam
push
dec
addr16
pop
stc
int
loope
jb
aam
cmpsl
cwtl
int
pop
cwtl
sub
bound
es
inc
add
dec
xor
movsb
pop
pushf
mov
sbb
jne
and
adc
mov
or
xor
jbe
int
fwait
xor
cmpsb
pop
sbb
pop
dec
mov
inc
pop
xchg
inc
fstp
iret
lds
push
cmp
adc
mov
ja
and
mov
sub
xor
out
inc
lret
mov
jp
xor
jbe
fs
jmp
push
inc
mov
lar
inc
mov
pop
jge
jae
int3
pusha
and
dec
adc
fnsave
push
inc
xor
bound
fs
adc
mov
pop
test
out
inc
pop
out
inc
cmc
cmp
stos
mov
fsubrl
pop
mov
lods
xor
popf
xchg
jbe
cmp
movsb
add
xchg
shrl
inc
lods
out
shrl
rclb
pop
lahf
daa
dec
lock
pop
or
daa
jge
xor
cmp
sbb
xor
mov
pop
les
test
movsb
pop
addr16
in
inc
cmp
dec
inc
sbb
movsb
xor
int
sbb
ja
mov
ret
push
aas
and
outsl
das
sub
push
xchg
sub
lds
sbbb
dec
hlt
sub
xchg
push
shll
sti
inc
and
repnz
pusha
mov
imull
xchg
add
pop
stos
xor
imul
aad
cwtl
ss
out
int
pop
adc
inc
outsl
mov
push
test
int3
push
xchg
mov
sbb
inc
and
lock
clc
push
xchg
push
mov
sbb
fbld
add
add
mov
gs
cmp
lods
lods
out
push
repz
stc
dec
cmp
imul
adc
push
jo
jae
push
mov
call
popa
add
fnstcw
lret
adc
imul
js
sti
dec
sahf
jnp
adc
daa
jb
dec
lea
adc
scas
mov
push
dec
mov
ja
aam
and
sbbb
test
fisubl
and
xlat
xchg
mov
outsb
int3
jnp
adc
cwtl
push
xchg
imul
inc
popa
outsl
les
je
fwait
rolb
inc
js
push
pop
je
add
mov
lret
xchg
add
pop
imul
sub
fistpl
mov
mov
cwtl
aad
pop
jns
fcomp
out
fldenv
cltd
rcrb
mov
push
testl
mov
stos
loope
out
ret
stos
jnp
add
inc
push
mov
outsb
stc
popa
xchg
fldl
sub
cmp
push
sbb
aam
test
pop
ret
or
jno
sti
cmp
push
sub
sahf
adc
pusha
jl
lcall
xchg
out
add
sbb
and
sub
cltd
adc
fstps
mov
pop
imul
frstor
push
shl
aaa
rorl
in
call
jg
add
and
mov
movsb
xor
in
jne
inc
imul
pop
xchg
pushf
sarl
testb
dec
cltd
cmp
mov
ja
jae
out
in
sub
mov
sti
mov
fsubrs
mov
ljmp
scas
xchg
sbb
je
pop
jae
xor
jecxz
inc
cltd
cmp
scas
sub
insb
lea
and
sarl
push
cli
add
lret
pusha
std
cld
aaa
stos
dec
pop
or
inc
mov
push
outsb
pop
aaa
inc
std
rcl
cmp
inc
mov
cli
fisubl
and
out
xchg
pop
push
stos
dec
lds
addr16
jg
jge
lods
lods
ret
gs
inc
movsb
testb
cmp
lea
and
fstpt
push
int
lock
mov
and
mov
push
cld
jb
adc
mov
sbb
out
leave
jno
aam
mov
adc
jae
mov
xchg
int
pusha
imul
daa
cmp
sub
xchg
inc
das
add
cmc
xchg
push
insb
stc
jnp
or
xchg
mov
mov
pop
mov
or
shll
push
int
ja
and
pop
leave
imul
push
leave
jmp
inc
mov
sub
icebp
mov
out
insb
jns
aad
mov
add
xor
sbb
and
daa
lea
mov
sbb
mov
cld
jae
pop
rcr
pop
mov
lret
cmp
sbb
lock
sub
or
jb
es
test
shll
lds
mull
fbstp
adc
gs
or
aas
pop
rclb
fsts
cli
icebp
dec
jnp
add
mul
cwtl
pop
pop
ljmp
sub
adc
mov
add
lea
mov
xchg
xchg
or
fwait
fs
repnz
dec
add
mov
push
xor
cmp
xlat
xor
mov
cmp
fstpl
cmp
test
mov
cld
pop
add
scas
adc
les
je
or
mov
push
push
cs
pop
es
and
inc
inc
in
clc
dec
pop
lock
ret
lock
xchg
mov
mov
dec
push
js
push
xor
and
icebp
pop
repnz
lea
pusha
sbb
push
loopne
rclb
push
push
cmp
sbb
lret
xlat
negl
push
pushf
cmp
xlat
sub
ret
adc
push
mov
mov
cmpsl
or
iret
cmp
mov
mov
in
sub
in
sbb
jl
int
cmp
out
gs
mov
and
mov
cld
xchg
in
das
fsub
enter
jbe
dec
data16
je
mov
int3
nop
in
dec
insl
in
cltd
push
cmpsb
xor
movsb
decb
sub
stos
inc
push
mov
aam
addr16
mov
cmp
sbb
test
pop
aam
cmc
mov
sahf
xchg
scas
mov
ss
pushf
popf
xor
data16
mov
pop
into
sub
incl
add
mov
mov
pop
jo
ret
repnz
outsb
inc
aaa
cmp
inc
pop
jg
les
or
into
push
addr16
orl
add
push
push
mov
pusha
jb
in
sub
add
mov
or
cli
sti
sarl
jne
mov
dec
aam
dec
jb
or
jmp
mulb
fs
jg
sbb
push
pushl
adc
call
xor
and
xor
pop
mov
fiadds
rcll
pop
or
das
mov
sarl
sahf
int
and
cmp
hlt
outsb
mov
jne
xchg
cmc
flds
lods
jmp
cwtl
repnz
or
and
push
sub
mov
push
in
arpl
mov
xor
call
xchg
jg
push
jp
pop
sub
cmpsl
jo
and
jb
ret
lret
cmpsb
outsb
out
outsl
mov
ds
mov
sbb
ret
adc
or
cmpsb
scas
mov
add
lret
cmc
sub
cld
mov
cmp
dec
or
sub
mov
mov
lods
cmovg
hlt
ss
mov
jne
scas
xor
and
movsl
sahf
push
push
mov
push
popa
dec
mov
jmp
in
push
pop
filds
das
fisubrl
fistpl
adc
aaa
ljmp
arpl
int3
aam
fdiv
addr16
js
pushf
int
je
xchg
push
or
out
scas
lock
in
js
pop
stos
jecxz
mov
or
int
dec
or
mov
or
test
and
mov
xchg
dec
mov
inc
mov
or
sub
mov
dec
mov
ud1
arpl
push
mov
mov
xchg
movsl
aam
adc
cmp
sbb
xchg
insb
xor
dec
cmpl
imul
mov
test
les
int3
jo
sbb
nop
or
pop
out
push
jmp
sub
outsl
inc
lcall
test
int
cmp
push
mov
mov
pop
xchg
outsb
pop
xchg
adc
jne
cwtl
xor
xchg
mov
sar
mov
mov
adc
mov
sbb
int
xlat
das
add
add
push
push
mov
sar
pop
mov
mov
ljmp
push
aad
jle
xlat
push
jne
jge
filds
push
imul
mov
hlt
mov
divb
aas
jl
mov
cmp
call
pop
les
lds
cmpsb
scas
add
jbe
cmp
pop
sub
out
add
in
inc
lahf
lret
xor
pop
jecxz
lods
cmp
cmp
into
jae
adc
cmp
mov
loop
fiaddl
or
push
sbb
dec
and
sbb
movsb
adc
out
adc
lsl
xor
pop
sub
cwtl
adc
repnz
dec
repz
daa
lcall
lret
popf
adc
aad
mov
lret
dec
add
jecxz
aaa
pop
mov
xor
fsubrs
stos
mov
inc
mov
ret
pop
or
inc
fcmovbe
adc
ss
jl
xchg
out
mov
je
test
outsl
mov
shrb
sbb
mov
nop
jnp
das
push
clc
or
push
int
dec
dec
ret
pop
xlat
cltd
aaa
or
inc
jl
hlt
mov
xor
sahf
push
mov
mov
pop
lret
out
add
shlb
in
or
fsubs
sbb
rcrb
arpl
pusha
out
test
shll
jnp
das
cltd
mov
in
pop
fwait
stc
push
cmp
pop
ds
je
jmp
sahf
test
fmuls
testb
sbb
rolb
and
divl
bound
sbb
dec
lahf
repnz
push
xor
lcall
jge
adc
dec
or
push
lods
fidivl
add
aam
push
dec
js
push
ss
adc
xor
movsl
mov
lcall
xor
inc
cs
lods
xchg
mov
mov
lods
shrd
adc
pop
cld
mov
mov
inc
dec
mov
cmp
xor
rcrl
xor
sub
scas
mov
inc
lahf
adc
pop
adc
mov
lahf
iret
ret
scas
popa
das
fidivrs
mov
scas
sarl
test
pop
pop
imul
adc
mov
les
loop
sub
pop
rorb
addr16
das
in
fisttpl
cmp
rolb
out
filds
xlat
repz
cmc
pop
cmpl
add
dec
mov
pop
cmp
jle
test
in
cmp
js
and
test
bound
scas
jbe
notl
insb
int3
stos
fsts
sub
pop
sub
pop
pop
into
mov
push
aam
ror
das
loop
dec
xor
fwait
ja
enter
xchg
lods
jo
popw
stc
int3
push
repz
sbb
sbb
push
lcall
mov
leave
mov
mov
stos
xlat
or
in
mov
or
pusha
mov
jne
push
dec
jno
adc
jns
lds
icebp
sub
sarb
cmp
aaa
jbe
in
and
pop
sub
push
xchg
jb
mov
inc
jmp
inc
or
insb
mov
adc
lcall
insl
jo
pop
rorb
call
rcll
and
movswl
cmpsb
int3
sub
xchg
inc
pop
sub
sub
sub
je
sub
loop
sbb
xor
adc
xchg
sbb
mov
es
mov
push
dec
mov
dec
push
repz
insb
sbb
dec
inc
insb
push
pop
popa
push
in
test
adc
xchg
sbbl
pop
lahf
out
push
cmp
mov
fcompl
cmp
mov
xor
das
add
fstpt
mov
scas
lcall
es
pop
daa
mov
cmp
pop
pop
leave
rorb
testb
ss
jnp
inc
data16
mov
dec
aam
fcoms
dec
fidivs
roll
sbb
cmp
jns
push
mov
loop
lea
jle
ficomps
dec
js
cmp
mov
adc
js
pop
outsb
in
adc
aaa
cmp
sub
idivb
stos
out
sbb
arpl
mov
dec
sti
ud1
idivb
mov
test
lods
xchg
popf
cmp
jno
outsb
sbb
push
mov
outsb
inc
movsl
dec
dec
out
std
pop
test
or
push
rol
int
pop
push
out
mov
xchg
push
stc
cmpsl
fcmovnb
adc
mov
or
rol
sbb
sub
stos
call
ja
dec
sbb
mov
test
scas
mov
xchg
insl
fiaddl
mov
cmpsl
xor
pop
mov
out
or
add
test
ss
cmp
xchg
or
repnz
mov
les
adc
das
dec
mov
fisubs
push
dec
add
mov
jg
xchg
sub
lds
mov
gs
push
out
and
add
adc
or
mov
das
fildl
test
add
pop
mov
dec
jne
add
jnp
push
jp
mov
sti
cltd
jbe
pop
cmp
jge
inc
popf
add
ret
in
push
or
cmp
push
inc
imul
icebp
sbb
mov
dec
data16
push
sub
xor
out
daa
and
into
jmp
pop
xchg
and
sub
int
pmullw
shlb
jnp
mov
fists
and
lret
xor
cmp
push
and
mov
xor
aad
add
push
cs
pushf
jo
leave
mov
inc
cmp
push
pop
iret
jns
sbb
aaa
int3
mov
cld
cld
cmp
ret
cld
add
rolb
jg
aam
and
js
sub
dec
pop
fiaddl
xchg
lret
in
in
pusha
pop
daa
stos
fdivr
inc
aas
aam
je
scas
fstpt
fsubs
ud2
xchg
cmp
fdivp
dec
adc
sbb
cs
push
push
out
cmp
push
in
mov
movb
aaa
xor
sbb
outsl
and
sub
cmp
xorl
and
enter
push
iret
lds
popf
pop
adc
negl
mov
xor
dec
jo
push
repz
dec
fnsave
cltd
nop
push
cmp
push
mov
std
iret
dec
jge
xor
mov
ds
mov
pop
movsl
lret
sub
inc
popf
xchg
or
cltd
sbb
shlb
mov
push
rorb
out
stc
or
cmp
xor
dec
pop
xchg
and
mov
and
repnz
in
fs
or
adc
sbb
sub
xorl
shlb
sbb
sbb
ret
inc
imul
push
cmp
fwait
cmpsl
jns
cmpsl
mov
pop
sti
dec
jae
add
adc
aaa
cmpsl
inc
mov
pushf
xchg
ja
sub
add
and
rorb
jnp
sub
lret
stc
pushf
repz
sbb
push
scas
xor
fmuls
pop
jl
jb
int
cmpsb
jge
add
cwtl
int
ds
cmpsl
cmp
and
call
popf
lea
cwtl
dec
ret
popf
or
mov
adc
fdivs
xchg
js
ja
into
jae
imul
or
jmp
fsubs
cli
aad
into
cmc
cmp
pop
cltd
imull
bound
xor
aas
orl
dec
cmp
mov
loope
div
addr16
jnp
cmp
cmp
scas
dec
sub
movsw
mov
dec
and
inc
leave
icebp
or
sbb
push
sti
mov
fstl
jg
add
jnp
imul
push
jmp
mov
push
dec
jne
push
lcall
mov
adc
cli
inc
xor
imul
fwait
dec
cmp
mov
dec
add
fisttps
sbb
movsl
dec
mov
pushf
push
or
jecxz
lahf
sbb
adc
fimull
add
push
cmp
mov
or
in
cltd
fnstsw
add
cltd
jl
mov
or
out
js
xor
jge
xor
and
dec
mov
shlb
push
fcomp
imul
into
mov
fs
xor
dec
add
test
out
hlt
roll
popl
fwait
cmpl
dec
das
pusha
movsb
and
js
push
les
neg
fcoms
jae
mov
les
outsb
xchg
faddp
sub
rolb
add
cli
js
imul
lret
mov
jg
mov
inc
mov
adc
mov
lock
outsb
mov
mov
inc
out
into
fdivrs
jo
mulb
sub
jnp
scas
xchg
sbb
cmp
stc
jl
push
in
les
or
jecxz
add
mov
addb
fsubrl
xchg
aad
dec
fcmovnu
mov
push
in
push
out
insb
rorb
dec
ret
push
mov
loopne
dec
daa
scas
mov
pusha
insb
shlb
add
sub
cmp
inc
int3
imul
add
mov
rorl
fcom
or
imul
xor
xor
add
mov
and
pusha
sbb
sbb
jns
mov
push
mov
repnz
lods
gs
jp
js
sahf
addr16
nop
sub
lahf
jns
mov
and
jno
ljmp
add
pop
dec
lahf
clc
aas
pop
push
outsl
inc
mov
lea
sbb
mov
pushf
pushf
leave
pusha
fimull
loop
sbb
or
hlt
xor
movsl
sbb
or
cltd
lods
cld
pop
mov
ret
cltd
dec
jle
xor
es
jge
cmp
sti
push
jnp
jnp
push
push
xor
inc
aam
jns
xor
jae
aam
xor
jne
ret
cmc
mov
push
push
insl
loope
xorl
lds
mov
add
adc
xchg
aas
cmp
shll
in
dec
shrb
add
and
xor
pop
mov
and
fcomps
push
cltd
rclb
pop
cmp
test
outsb
mov
add
push
loope
gs
cltd
rcll
arpl
inc
test
sbb
and
out
idiv
not
cmpsb
insl
mov
cmp
outsl
jge
outsb
dec
cmpsl
inc
cwtl
test
push
push
outsl
xchg
scas
loope
les
das
or
jo
push
subb
aaa
repnz
or
cmpl
stc
insl
imulb
mov
adc
inc
idivb
sub
movsb
ja
cltd
cld
jb
sub
shll
sbb
mov
std
adc
mov
push
sub
pushf
xchg
fdivr
in
cmp
dec
xor
push
pop
or
seto
ret
add
popf
fcmovnbe
xor
dec
xor
popf
lea
jg
adc
jno
int3
sub
cmp
or
sub
xchg
add
dec
repz
push
je
scas
mov
shrl
leave
inc
xchg
jge
or
jp
fsub
push
mov
mov
in
and
push
lock
pop
mov
push
mov
xlat
pop
or
pop
adc
int
dec
fcmovbe
adc
loope
cmpsb
in
scas
mov
leave
mov
imul
pop
lea
cwtl
in
out
or
push
je
aas
push
scas
data16
movsl
mov
cmp
int
inc
dec
imul
mov
pop
cmp
add
repz
cmp
aaa
scas
mov
adcl
pop
and
mov
sahf
push
sti
out
das
sbb
pop
add
test
mov
test
into
push
add
out
xor
xchg
inc
ljmp
pop
mov
nop
adc
shlb
xor
outsb
xor
pop
ja
je
fs
xchg
data16
cwtl
adc
mov
js
repnz
pop
fs
fstl
mov
jns
pushf
mov
imul
shll
pop
inc
sub
es
popa
sbb
jnp
fiadds
stos
or
jmp
cmp
pop
mov
nop
push
ja
fmull
icebp
jg
push
dec
insl
fcompp
dec
lar
gs
incb
cmp
inc
pop
jg
insb
xchg
dec
jmp
clc
dec
inc
lahf
mov
xor
out
outsb
xor
sbb
dec
xchg
inc
gs
nop
sbb
cmp
call
repnz
int
pop
cmc
xor
lock
mov
popa
cld
cld
pop
or
inc
ja
sbb
push
cwtl
or
mov
in
lock
cmp
sbb
push
gs
cmp
out
mov
rorl
cmp
jns
pop
jb
push
push
movsl
bound
jne
test
jo
dec
inc
cmp
lods
sbb
pop
cmp
pop
icebp
mov
addr16
mov
push
sarb
dec
je
pop
push
xor
mov
lahf
push
repnz
rcl
and
lods
iret
pop
lret
daa
push
nop
jl
inc
cmp
insl
jge
lret
aaa
push
sbb
mov
jp
ds
aaa
and
inc
dec
sub
lods
push
shll
xlat
xchg
dec
jnp
xchg
mov
sbb
mov
repnz
adc
adc
sub
push
in
insl
or
or
push
subb
fwait
mov
pop
in
sub
lret
lods
xor
inc
call
test
mov
sahf
popa
or
and
xor
cmpsb
push
stc
int3
leave
js
jo
dec
xor
pop
lods
int3
inc
xor
stos
scas
shlb
jns
repnz
push
cmpsl
push
sub
lahf
and
out
lahf
fadd
mov
xchg
fidivl
es
stos
cmpsb
sub
ret
push
pop
sub
rclb
stc
xchg
aam
dec
es
sbb
or
loopne
stc
mov
outsl
push
popa
dec
mov
stos
fldt
cltd
scas
jbe
push
dec
outsb
in
popa
pop
inc
and
sahf
je
mov
mov
jle
das
outsb
shll
adc
or
idivl
addr16
inc
xor
sub
adc
inc
stc
aaa
shl
push
pusha
aad
push
dec
sub
dec
pop
mov
arpl
sub
ret
add
iret
adc
data16
sbb
stc
je
adc
dec
lahf
add
clc
stos
imul
mulb
sbb
icebp
fisubl
stc
add
ret
sbb
cs
sub
mov
imul
frstor
dec
add
push
jnp
sbb
inc
inc
and
fdivrl
pop
sarb
pop
aas
test
pop
mov
js
cld
sti
mov
out
adc
jno
ficompl
pop
into
jecxz
cmp
lods
push
test
mov
das
int3
sbb
shll
pop
sub
cmp
mov
dec
push
add
sbb
push
xchg
jne
cmp
fbld
shrb
ds
adc
lret
mov
sub
icebp
push
sub
mov
push
iret
sub
pop
adc
out
mov
es
push
push
sbb
or
cltd
mov
add
or
fistpll
subl
fwait
in
sub
push
ja
inc
adc
insl
addl
inc
inc
test
aam
jae
orb
fstpt
ret
push
push
sub
adc
shlb
flds
icebp
out
fsub
dec
cld
jne
mov
mov
push
sub
jg
lcall
push
ret
xor
mov
ljmp
adc
es
js
fs
mov
adc
aam
jbe
jmp
pop
lea
ljmp
ret
enter
popf
mov
sbb
orb
add
aaa
cmp
sar
dec
cmc
fnstenv
ss
cwtl
sub
xchg
dec
movsl
xor
pop
test
lcall
adc
add
js
or
dec
cmp
in
cli
aaa
jbe
iret
out
lcall
test
ret
adc
call
out
dec
mov
lods
adc
shlb
adc
cs
inc
mov
pop
cli
sbb
jne
jl
adc
add
lret
dec
ss
sub
push
pop
jmp
pushf
in
shrl
clc
push
movsl
ss
ja
inc
out
pop
pop
je
lock
add
inc
push
leave
fimuls
cltd
adc
gs
aam
pop
dec
mov
cmp
pop
fdivr
and
xor
add
xchg
enter
pop
xchg
fs
sbb
or
incb
cmp
xchg
popa
popa
fdivrs
jne
cmc
sbb
dec
nop
jb
cmp
xchg
dec
inc
aad
cmp
popa
xor
pop
cmpsl
jb,pn
mov
mov
sarb
inc
adcb
call
pop
rcl
pop
cmpsb
fcoml
jmp
fldcw
bound
lcall
out
jns
loope
or
xor
jmp
jecxz,pt
adc
out
jo
mov
and
jae
inc
enter
adc
dec
cmp
push
jge
push
insl
cmp
pop
pop
into
rol
or
xchg
xlat
pop
daa
es
cmp
test
inc
enter
jo
jl
pop
jne
ss
dec
es
lea
or
inc
int
or
andb
sbb
pop
shlb
mov
sbb
add
cmc
scas
ja
jno
out
jo
mov
add
hlt
addr16
pop
mov
xor
rcll
mov
arpl
outsb
nop
shrb
fisttpll
inc
dec
push
aam
inc
pop
push
push
cli
mov
jge
mov
negb
outsl
mov
rcrl
mov
fcomp
in
mov
xlat
jecxz
xchg
out
inc
testb
sahf
sbbb
mov
int3
mov
xlat
cld
add
or
scas
and
int3
push
aad
ret
scas
xor
das
or
pop
cmc
sbb
lods
adc
push
scas
xor
push
push
outsb
pop
ret
sub
dec
outsl
sarl
sub
stc
out
inc
mov
xor
and
cmpsl
cmc
xor
movsb
rol
negl
pop
dec
xlat
cmpsb
mov
pop
fcompl
andb
lods
mov
loop
cmp
jo
pop
fistpl
jbe
or
pusha
mov
pusha
lcall
mov
pop
xor
mov
sub
scas
add
sbb
mov
pop
lods
pop
adc
ds
push
push
xor
jns
les
popf
sub
aad
call
mov
dec
xor
pop
sbb
push
stos
push
mov
push
xchg
inc
add
insb
cmp
jbe
push
jae
stos
fnsave
es
sub
sub
in
push
and
lods
int
rorb
nop
ret
stos
std
jo
dec
std
dec
pop
sub
lcall
in
pop
popa
mov
mov
mov
mov
add
xor
fnsave
repnz
lret
aaa
in
sbb
int
or
push
cmp
into
lcall
sbb
fwait
out
cmovl
sub
fadds
cmpsl
jne
push
dec
into
adc
push
jp
test
pushf
inc
and
test
mov
test
add
cmp
mov
int3
mov
push
icebp
outsl
je
repnz
into
mov
push
aas
idivl
ljmp
pop
stc
out
repz
fnstenv
or
data16
data16
sub
push
dec
fcompl
pop
pop
inc
aaa
popa
mov
frstor
inc
icebp
and
cwtl
mov
fnstcw
mov
ret
mov
lds
int
push
adc
push
leave
sbb
sbb
cmp
sub
arpl
xchg
lret
mov
scas
fcomps
fcoml
pop
cmp
mov
dec
shll
movsl
jge
icebp
mov
add
add
push
and
jno,pt
sub
jbe
mov
sahf
mov
xchg
inc
sarb
mov
cld
sub
icebp
jl
pop
jbe
xchg
roll
xchg
jp
mov
negb
xchg
jne
push
shlb
mov
push
imul
pop
mov
cmpsb
jno
sahf
sub
mov
fisubrs
jp
xlat
xlat
inc
hlt
adc
pop
pop
push
dec
jl
jge
dec
add
stos
pushf
pop
dec
scas
add
inc
xchg
mov
les
mov
mov
pop
cmpsl
mov
mov
aad
icebp
hlt
pcmpgtb
subl
test
mov
dec
and
sbb
int3
pop
jno
mov
sub
enter
ss
inc
shlb
dec
loopne
pop
mov
roll
cltd
jg
je
pop
mov
insb
mov
add
pop
ret
xor
imul
ja
and
int
jle
cmp
push
enter
jnp
loopne
jo
stos
in
mov
outsb
inc
insb
adc
push
jle
sahf
or
dec
dec
adc
ffreep
mov
cwtl
xchg
cmp
mov
adc
mov
pop
movd
in
shlb
cltd
mov
test
pop
cld
sbb
call
and
lods
jns
dec
or
fcomps
add
add
xor
dec
jns
dec
sbb
add
movl
inc
pop
dec
push
dec
dec
jg
mov
leave
imul
mov
lahf
mov
jno
mov
aaa
fs
stc
adcb
ss
pop
lds
inc
xchg
dec
and
mov
mov
xchg
xor
pop
sbb
or
cmpsb
dec
lods
xor
aam
mov
outsb
pushf
movsb
mov
ss
mov
jecxz
mov
push
push
out
xchg
or
adc
or
ffreep
or
sbb
push
mov
std
add
inc
test
arpl
pop
pushf
sub
repnz
push
fdivrs
jbe
outsl
hlt
cs
xor
pop
sarl
pop
mov
cmp
or
or
lock
jnp,pt
fwait
movsb
sti
xchg
jle
sub
dec
iret
rorb
lock
xchg
jo
aam
xlat
iret
test
lods
mov
mov
xchg
and
push
push
jnp
pop
sarb
cmp
ljmp
jle
sbb
sub
xor
inc
call
mov
ficompl
pop
pop
test
push
sub
pop
in
add
or
pop
adc
clc
ds
xchg
sbb
jge
push
int
dec
daa
sub
fsubs
gs
mov
xor
outsl
stos
insb
cmp
jbe
mov
push
sbb
sbb
mov
pop
inc
shl
imul
fistl
ljmp
xchg
popf
push
test
xchg
in
cmpsb
pop
addps
mov
imul
sahf
mov
fdivrs
repnz
jg
fistl
mov
lahf
fs
and
lahf
je
mov
stc
inc
test
std
push
pop
jns
push
shl
push
movsl
incb
fistpl
mov
mov
outsb
lret
das
xorb
dec
cmp
jbe
out
mov
push
inc
dec
xchg
cmp
mov
push
or
lods
mov
sub
shlb
lret
push
xlat
and
aas
in
push
je
push
rorb
mov
push
cmp
mov
and
jne
push
lods
imulb
push
push
add
das
inc
dec
push
ffree
mov
push
xor
fstp
adc
mov
lcall
adc
jb
and
jae
in
in
jecxz
cmp
les
sbb
dec
dec
mov
push
arpl
movsb
ja
leave
dec
dec
inc
pop
xchg
push
adc
iret
test
pop
dec
pop
test
and
adc
cmp
out
pop
push
call
es
gs
sahf
push
shlb
push
push
and
hlt
lret
mov
dec
push
lret
pop
enter
adc
ja
lods
scas
or
dec
inc
push
dec
xorl
dec
test
lea
sarb
repnz
test
pop
pop
pop
xchg
loope
mov
mov
hlt
int
cltd
push
lods
sbb
sbb
pop
outsb
popf
jmp
push
jo
add
lock
push
mov
xchg
pop
push
incb
jns
push
pop
cmpsb
leave
test
outsl
or
xchg
stos
into
rclb
js
sbb
xor
imul
nop
stc
pop
aas
rcll
add
push
pop
pusha
das
cmp
and
push
inc
fwait
pop
ss
and
clc
mov
fwait
jg
push
xor
xchg
sub
push
fbld
jg
adc
mov
movmskps
sub
sbb
dec
aas
je
sarb
sub
pushf
fs
daa
ss
in
dec
push
cmp
dec
in
dec
jg
enter
mov
test
imul
xchg
add
jnp
scas
push
sar
js
fwait
push
lret
idivb
aam
push
inc
add
cli
movsl
imul
lds
or
call
lahf
push
scas
insl
push
stos
popa
inc
and
push
dec
fld
or
mov
into
cmp
and
xchg
cmp
push
jo
pop
jecxz
sbb
push
xor
adc
xlat
outsb
inc
add
inc
repnz
sti
jge
jg
dec
push
xor
mov
cmp
xchg
pushf
fisubrs
inc
dec
sarb
xchg
aam
pop
push
pusha
push
jmp
inc
mov
sbb
inc
pop
dec
add
mov
add
cmp
sbb
push
push
shr
or
sbb
fldcw
dec
xor
testl
subl
fstpl
and
push
push
jp
movsl
fs
scas
insl
dec
fmull
pop
jg
pop
add
loop
scas
adc
inc
in
push
xchg
das
jno
lret
xchg
fptan
shlb
iret
fsts
pop
jb
lods
xor
push
jp
gs
cmp
in
inc
lods
int
fdivrs
xorb
cmp
stc
fadds
loopne
imul
push
loope
sub
addr16
xchg
inc
push
push
and
in
stos
cmp
lods
adc
adcb
ds
out
lods
mov
mov
push
aad
jge
inc
jp
sub
leave
dec
fs
inc
out
mov
inc
xchg
popf
jns
mov
ret
hlt
jo
arpl
sarb
cmp
push
aaa
movsl
xchg
cmp
xorl
fs
cmc
mov
sti
lahf
bnd
jge
outsb
data16
xor
xchg
jb
sbb
mov
jge
rcrb
add
scas
add
sub
mov
mov
movsl
test
int
lods
push
adc
in
jne
pop
push
and
jbe
ss
ror
fucomip
inc
repnz
push
and
inc
mov
and
mov
pop
ds
xor
addb
and
mov
sub
iret
jo
daa
mov
pop
push
cmpb
sbbl
add
mov
lcall
cwtl
stos
mov
push
xchg
ljmp
jbe
fstps
stos
xor
int3
sbb
insl
jns
add
xchg
and
mov
aam
daa
aad
call
adc
sub
xchg
mov
js
mov
mov
fmuls
call
lock
dec
mov
shlb
dec
sti
ret
xlat
cmpsb
adc
xlat
aas
addb
add
clc
fwait
sar
cmp
jle
mov
daa
loopne
or
jecxz
xchg
add
cmp
ret
das
lret
jmp
lods
mov
inc
shlb
aaa
push
dec
in
pop
jle
int3
inc
lret
jl
adc
idivl
loopne
lcall
icebp
insb
inc
loopne
scas
int
add
lds
sarb
ret
push
sbb
dec
push
shll
mov
mov
push
add
outsl
jns
mov
lds
adc
test
inc
mov
mov
dec
pop
imul
mov
adc
loope
mov
in
cwtl
dec
push
sbb
stc
dec
les
xchg
incb
int3
pop
xor
cmpsl
sub
cmp
imul
pop
repnz
sbb
mov
in
imul
push
popa
mov
sub
daa
add
pop
jl
dec
stc
ja
and
outsb
xchg
push
jne
fs
loope
sbb
daa
mov
es
out
xor
pop
dec
sub
mov
cmp
sub
incl
pop
mov
and
es
popa
lods
dec
or
inc
dec
inc
cmpsb
in
add
cmp
movsl
in
and
lret
aam
xchg
ds
jo
push
fwait
pop
sti
imul
shlb
lret
add
adc
outsb
or
jp
sub
call
int3
fucomi
or
jg
in
cltd
or
pop
out
lret
bound
cld
push
bndstx
pop
xorl
lds
push
sarb
gs
dec
inc
stos
daa
jns
stos
sbb
in
pop
movsb
outsb
lock
cmpsl
push
inc
repz
fildll
sbb
aaa
lea
push
xor
mov
shlb
movsl
test
lods
test
pop
test
adc
mov
mov
mov
mov
out
mov
jge
fdivs
pop
mov
mov
cmpsl
xor
mov
cmp
pop
jns
pop
lcall
cld
fmuls
sub
or
cmp
gs
or
sub
mov
or
xor
iret
out
ja
mov
mov
mov
repnz
xlat
add
push
mov
stc
je
mov
xorb
jge
inc
jae
inc
ret
xlat
outsb
loopne
inc
jge
mov
mov
insb
dec
test
js
push
popf
and
loope
cltd
mov
loopne
push
out
sbb
repnz
and
pop
loopne
ret
jg
pusha
push
cmpsb
cmc
in
addr16
jb
std
push
push
xorb
pop
push
or
cmp
scas
ret
xchg
ljmp
mov
cwtl
mov
and
insb
or
jge
lret
or
cmp
mov
mov
insb
push
hlt
cltd
loope
test
mov
test
xchg
xchg
movsl
pop
ss
dec
test
lods
testb
jns
test
cmp
stc
mov
addr16
mov
jle
dec
sbb
ljmp
xchg
sbb
cwtl
add
jne
inc
fcompl
add
fwait
jbe
add
fcmovnbe
lret
sub
pop
push
sbb
shll
jnp
sub
pop
scas
mov
add
daa
leave
in
subl
jne
sti
imul
pusha
pop
mov
insb
scas
sub
jnp
aam
ja
xor
imul
daa
xchg
sbb
inc
cmp
scas
adc
mov
mov
mov
pop
xchg
cmp
mov
jbe
fsubrl
pop
mov
pop
rorl
sub
mov
cmp
out
sub
xchg
add
xchg
pop
sbb
bnd
fcomi
in
mov
or
lcall
push
cmp
xchg
fisubrs
inc
mov
ljmp
xchg
mov
shll
test
dec
scas
add
jle
add
aad
es
ret
jae
pop
mov
jne
push
push
dec
loopne
jbe
add
cmovne
lods
lea
push
mov
or
dec
cmp
cmp
dec
sub
pop
or
dec
push
or
xor
std
lea
jg
jno
lods
lods
pop
mov
ja
inc
repz
dec
jno
addr16
sub
pushf
mov
adc
data16
clc
and
adc
xor
and
hlt
pusha
hlt
negb
ljmp
add
sub
mov
test
mov
sbb
cmpsb
push
aad
jno
or
testl
nop
and
pop
and
and
push
out
and
sbb
int3
sti
xchg
add
sbb
or
mov
sbb
mov
movsl
mov
xor
cmp
aam
hlt
jecxz
ljmp
rcll
fsubrs
in
movsb
pop
notl
adc
adc
pop
div
or
mov
test
call
std
fiadds
mov
popa
dec
lret
mov
jnp
fwait
es
mov
sbb
push
test
cmp
mov
pop
push
sub
in
push
std
jle
pop
jle
and
xorl
call
sti
negl
shrl
mov
daa
insl
dec
rclb
and
and
mov
sub
dec
xor
fnsave
push
push
pop
lret
repnz
push
popf
mov
push
adc
xchg
pop
xorb
pop
test
mov
lea
jg
repnz
sub
and
pop
sbb
cmp
ret
cmpsl
enter
lock
aad
mov
sub
mov
adc
fsubrs
fdivl
mov
xchg
push
pop
sti
sbb
and
inc
sbb
rcll
stc
shrl
inc
inc
int
imul
add
xor
mov
sub
in
mov
mov
fs
js
leave
mov
xchg
test
push
cs
scas
add
mov
hlt
mov
jnp
aad
mov
push
ror
pop
mov
enter
lret
or
pop
loop
lret
dec
sub
jae
lret
xchg
fbstp
sti
xchg
inc
push
jge
push
cli
jl
lea
xchg
inc
pusha
xchg
sbb
in
hlt
lock
and
aam
mov
add
mov
jnp
jp
mov
fiaddl
cld
xchg
in
and
sbb
mov
push
jns,pn
imul
inc
mov
popf
cmp
sbb
pop
mov
jae
dec
adc
cwtl
sub
add
pop
adc
cmp
sbb
cmp
pop
mov
lods
dec
and
add
gs
out
sbb
and
add
stos
ret
cwtl
push
sahf
push
inc
xor
xchg
sbb
inc
mov
inc
std
sub
cmpl
aam
pop
cmc
cltd
sarb
icebp
outsb
jno
sub
mov
nop
or
mov
stos
and
js
test
add
outsb
aaa
xchg
pop
adc
lea
and
lock
sub
fstpl
sti
fldcw
jg
xor
rolb
inc
add
dec
movsb
sti
jns
cli
sub
enter
leave
pop
std
mov
xor
shl
mov
lret
mov
inc
jne
jb
out
or
cmp
xor
push
stos
scas
cmp
jg
outsb
cs
push
or
pop
jb
mov
or
and
jae
jo
pop
mov
std
mov
outsb
negb
out
xor
or
mov
mov
dec
cmp
adc
mov
add
outsl
push
pop
push
cmp
imul
adc
xchg
aam
add
fisubs
in
faddp
pop
andl
jbe
negb
and
jae
pop
cmpsb
enter
stc
pop
cli
imul
and
mov
sahf
hlt
sub
adc
mov
rorb
and
adc
cmpsl
nop
xor
pop
or
mov
push
jbe
sbb
mov
jne
cmp
adc
bswap
hlt
sahf
and
call
xchg
sbb
fcoml
mov
inc
xchg
test
pop
loop
loop
sbb
ret
adc
leave
and
push
les
mov
xchg
sahf
push
sub
in
imul
mov
cmp
adc
aam
shl
cmp
mov
shlb
cmc
or
mov
adc
lds
jp
cmpsl
push
into
daa
sub
jg
loop
das
jne
push
mov
or
inc
pop
add
jne
insb
xor
cmp
ss
test
outsb
fstps
xor
mov
popf
pop
jb
mov
cmp
sbb
orl
sub
fstpt
stc
ds
jge
and
xor
push
loope
popa
cmp
xor
add
lea
imul
sub
sub
jg
sub
outsl
mov
scas
pop
or
inc
xchg
mov
mov
mov
repnz
pop
movsb
ficomps
in
fcompl
cmp
sub
adc
xor
inc
add
leave
mov
arpl
mov
insb
lods
jle
cmp
aaa
xchg
fnstsw
dec
cmp
mov
cmpsb
add
cmp
mov
sbb
sub
cmp
dec
mov
arpl
hlt
sbb
fdivrs
unpcklps
xlat
pop
pop
cvtps2pd
movsb
out
cmp
add
insb
cmpsl
notl
iret
pop
mov
jecxz
ja
adc
sar
cmp
mov
mov
in
mov
jb
mov
mov
repz
jnp
stc
insl
std
push
push
pop
inc
scas
imul
int
lret
shlb
dec
hlt
shlb
dec
je
jp
out
adc
xor
jg
mov
cmpb
sub
push
xor
jo
mov
data16
iret
fs
push
aam
pushf
jmp
ficompl
mov
loopne
nop
flds
push
inc
inc
xlat
sti
enter
sahf
xorps
and
mov
sbb
mov
cmpl
jb
cld
popf
sbb
cld
mov
in
inc
popf
push
int
dec
mov
adc
es
push
pop
sub
lods
clc
jns
inc
jbe
mov
mov
pop
fstpt
scas
mov
clc
dec
cmc
sbb
insb
pop
push
jbe
ds
outsl
aad
stos
rcr
pop
add
outsb
push
jo
push
push
xchg
pop
mov
inc
xor
cmp
sub
xchg
jns
jne
add
dec
fbstp
pop
test
repnz
aas
jns
pushf
idiv
and
pop
xor
mov
pop
mov
ret
popf
cmp
adc
jns
iret
cld
das
sbb
jnp
sahf
pop
add
and
pop
xchg
or
cmpsl
loop
pusha
mov
sbb
cs
es
mov
push
cmp
mov
fadds
fdivrs
inc
cld
les
in
cmp
and
jns
pushf
add
jmp
lret
lods
imul
ret
aad
je
cmp
jp
enter
or
or
sbbb
xchg
xchg
mov
push
mov
inc
test
js
shll
or
aaa
xor
cmp
pop
outsl
inc
jbe
mov
mov
dec
daa
scas
jne
pop
sub
call
call
fists
stos
movsb
ljmp
mov
inc
sti
out
bound
pop
ret
add
push
scas
jo
cmc
cltd
jb
outsb
vpunpckldq
cmpsb
adc
adc
ds
dec
ror
les
xchg
mov
pop
stos
fnstsw
nop
mov
das
jmp
pop
lahf
xchg
jo
mov
sub
int
daa
fnstenv
push
loopne
pop
test
cmp
int
dec
pop
cltd
sahf
js
insb
pop
js
arpl
xor
xlat
mov
out
dec
mov
cmp
enter
dec
push
xor
in
stos
pop
adcl
lods
lods
mov
lret
mov
lods
test
orb
jne
addr16
lea
xchg
cmp
push
aam
mov
dec
mov
cmc
mov
mov
outsl
mov
jp
jge
pop
or
sub
movsb
push
and
fwait
adc
push
xor
sub
imul
dec
lods
stos
sub
repz
jmp
lret
dec
push
adc
fstps
out
push
or
inc
stos
sbb
lods
dec
cmpsb
xchg
mov
xchg
mov
ficoml
mov
push
pop
dec
and
fdivrp
sub
mov
es
pop
jg
pop
aam
mov
aad
add
in
and
popf
mov
cmp
cmpsb
mov
in
jmp
das
js
jmp
add
int3
fsubrl
adc
adc
push
push
and
cmp
fidivrl
cs
hlt
add
cmpsl
inc
into
or
ret
mov
add
mov
insl
pop
inc
xor
ljmp
dec
les
ljmp
pop
pop
jbe
lods
jmp
aaa
cmp
pop
ret
fldl
xor
lcall
in
and
shrb
lds
and
scas
sub
mov
mov
or
mov
sub
dec
inc
xchg
rorb
test
mov
mov
jl
adc
jp
push
sub
lods
std
push
scas
dec
pop
imul
adc
outsl
ficoml
mov
outsb
jg
add
cld
adc
pusha
xchg
push
les
xlat
ja
mov
gs
insl
and
dec
or
shll
xchg
mov
cli
shrl
int
jmp
daa
jp
sub
lcall
or
je
cmp
repz
cmp
xor
sbb
or
pop
punpckhwd
cmovno
rolb
mov
aad
push
cmpsl
aam
rcll
jl
pop
jae
jbe
xchg
cmpsb
xchg
faddl
roll
push
test
pop
and
adc
stos
dec
cmp
cltd
es
jecxz
hlt
jg
daa
xchg
pop
aam
dec
add
add
jb
xor
rcrb
sti
mov
imul
rol
xor
sub
pop
sub
das
inc
xor
insl
shll
aaa
mov
dec
stc
inc
cmpsl
repz
fidivl
push
dec
std
mov
scas
dec
das
push
scas
push
jns
call
dec
xor
and
mov
filds
js
mov
jb
jp
pop
sub
dec
jg
incl
dec
lock
ds
sub
jns
pop
and
jno
mov
das
in
or
jle
scas
jg
and
pusha
fs
mov
scas
or
arpl
lods
pop
mov
xchg
int3
adc
cmp
pop
mov
mov
into
pop
pop
hlt
cmpsl
fcomip
mov
cmp
jge
out
or
mov
orb
jg
ret
pop
or
push
xchg
jge
and
inc
adc
popf
addl
sub
mov
pop
ss
test
jle
sub
or
pop
push
outsl
sub
shr
push
add
in
push
bound
push
xchg
push
push
das
lret
mov
xchg
sub
clc
jg
stos
in
addr16
insl
dec
adc
inc
enter
les
inc
out
and
stc
mov
in
fwait
das
lret
xor
es
stos
sbb
sahf
xor
adc
ret
test
and
fdivrl
loop
push
pop
ja
mov
push
rcll
jge
test
and
cmp
fwait
cmpsb
xchg
cmc
ret
das
mov
insl
dec
and
jb
mov
mov
mov
mov
mov
dec
add
pop
mov
insl
jge
repz
pushf
shll
mov
push
mov
mov
add
adc
xchg
adc
inc
iret
imul
add
dec
insb
imul
push
bound
in
or
pop
sub
es
xchg
xor
ljmp
lds
or
mov
dec
jl
pop
cmpsb
imul
or
cmp
sbb
imul
jae
jg
or
hlt
pop
fnstcw
pop
sub
lds
pop
ljmp
fcompl
sbb
repnz
jecxz
imul
add
icebp
sub
bound
xchg
mov
push
mov
add
lret
pop
mov
push
push
int3
out
test
jbe
xor
dec
sbbb
xchg
adc
fnstenv
jl
in
push
bound
cmpsl
icebp
xor
xchg
jno
pop
ja
idivl
xchg
mov
test
jno
imul
add
in
out
xchg
fnsave
cmp
cli
sahf
stos
mov
and
mov
out
adc
imul
push
cmpsb
stc
pushf
dec
dec
hlt
loope
dec
scas
push
jo
mov
andl
pop
sbb
or
cltd
les
mov
and
xchg
push
sbb
push
fiadds
pusha
enter
pop
fmuls
add
mov
sbb
stos
je
push
cmp
sbb
cmp
sbb
mov
mov
cmp
lods
lea
out
cmp
sub
mov
dec
lods
push
jo
or
mov
xor
jae
js
sbb
pop
sti
es
sbb
inc
fldt
aas
scas
push
mov
in
xchg
fisubs
lock
fstpl
fcompl
les
cmp
adc
sub
fiaddl
adc
popa
adc
push
cwtl
jae
scas
in
push
sbb
movsl
aam
dec
dec
leave
or
das
push
fldenv
lahf
rcr
aam
and
add
add
out
fdivrs
je
sbb
add
xchg
jno
lods
sub
int
mov
shlb
inc
add
push
jns
jle
cmp
nop
or
in
sbb
shlb
push
das
and
das
jbe
mov
jmp
cmp
or
adc
inc
pop
shl
cltd
sub
imul
and
xlat
ss
dec
dec
xchg
jg
pop
add
imul
jecxz
out
xchg
hlt
cwtl
dec
xchg
cmpsl
js
dec
inc
cmc
mov
faddl
xor
je
insb
in
xchg
mov
xchg
pop
roll
test
mov
pusha
enter
cld
outsb
imul
add
aad
popa
enter
mov
jno
push
divl
mov
shl
inc
loopne,pt
cmpsb
popa
mov
movsl
mov
les
sub
fisttpll
clc
mov
insl
pop
sbbl
jecxz
sti
or
aaa
dec
adc
sti
adc
cltd
stos
sub
xor
popa
add
jl
test
call
xor
jmp
sub
mov
xor
or
or
mov
or
sub
cmpsb
or
rcrb
xor
jno
mov
sub
rcl
add
xchg
rorb
push
stos
lds
ds
or
inc
lock
xchg
fwait
cmp
push
cwtl
outsl
add
jle
cmp
push
and
xchg
clc
push
or
ljmp
mov
mov
pop
xorb
jmp
jp
sub
add
jno
cmpsb
dec
push
dec
lds
jne
jge
cli
lods
cltd
out
mov
fwait
mov
mov
repz
popf
jne
shlb
and
or
mov
mov
lret
lcall
xchg
pop
and
push
ss
mov
push
in
and
pop
lods
adc
sub
ret
es
scas
es
insb
inc
sbb
int
inc
push
xor
xchg
push
adc
xchg
lock
fiadds
leave
and
stos
jmp
inc
mov
std
jecxz
cld
shlb
and
lods
push
sub
pop
stos
dec
cmp
neg
int3
addr16
jp
je
adc
sub
mov
or
or
or
mov
jno
lock
aam
dec
cmpsb
lfs
adc
dec
pop
pop
push
xor
mov
in
aad
jl
add
inc
subb
fcom
ds
mov
mov
or
dec
mov
add
or
jb
sub
add
jo
push
pop
push
adc
push
scas
dec
dec
dec
inc
lds
in
add
pop
in
imul
dec
aam
lods
lods
fcmovnu
cmpsl
push
xchg
mov
push
sbb
pop
fmul
enter
mov
mov
jle
cld
pop
or
cmp
push
jmp
fwait
inc
stos
insb
xor
test
cmp
add
or
fdivrl
sub
or
or
divl
lods
daa
clc
and
jge
xor
dec
sub
fs
cmp
mov
jle
xchg
mov
ret
inc
enter
add
push
jecxz
inc
push
shll
inc
roll
int3
into
idiv
leave
inc
mov
push
xchg
data16
out
ljmp
shr
xor
mov
inc
mov
push
mov
pop
mov
jno
call
fadd
fsubrl
dec
scas
mov
ja
call
sbb
jns
fstpt
imul
jne
in
xchg
std
sub
and
jb
push
lds
nop
sub
xchg
or
popf
testb
inc
aas
dec
les
adc
add
xor
and
sbb
push
in
mov
push
loope
aad
push
inc
cmc
stos
iret
xchg
jae
sbb
push
jge
out
jns
pop
sbb
inc
jno
mov
mov
js
lock
and
hlt
das
repz
inc
inc
jo
mov
xor
in
aam
sahf
cmp
push
sbb
popa
mov
inc
inc
je
pusha
jbe
test
test
fldt
cmp
sub
insb
mov
push
mov
mov
arpl
call
cmpsl
cs
mov
iret
scas
cmp
jge
stos
or
jne
add
out
ss
push
inc
push
pushf
cli
push
cmp
cwtl
jns
mov
xchg
xor
xchg
hlt
push
push
push
cwtl
xor
add
jle
ret
std
stos
mov
popl
and
shll
mov
je
insb
jl
sbb
jp
js
fwait
dec
in
dec
ss
sti
push
cld
mov
lret
and
int3
stos
popf
dec
cmp
inc
int3
repz
add
pop
js
ss
scas
sti
or
push
fs
sarl
jb
lahf
cltd
inc
sti
ret
jo
fldcw
xor
mov
sbb
sub
ljmp
mov
mov
jg
inc
xchg
mov
mov
call
lds
push
xchg
push
sub
lcall
cli
imul
jns
mov
out
out
insl
mov
ljmp
clc
inc
je
cli
stc
bound
shrb
cmpsw
jns
ja
pop
leave
xchg
pop
cmp
outsl
pop
xchg
aad
xlat
cltd
push
call
mov
sub
call
and
mov
and
sbb
mov
xor
ret
testb
jae
dec
test
shlb
adc
dec
jg
pop
sahf
xorl
dec
or
or
cmpl
lret
mov
std
je
shr
outsl
cmp
lods
pop
imul
aas
push
sbb
pop
add
cmp
push
neg
xorb
repz
xchg
add
add
nop
dec
outsl
popf
rcll
lock
repz
in
pop
repz
adc
fwait
adc
imul
stc
out
mov
jecxz
stos
fiaddl
sbb
fistl
fwait
rolb
pop
inc
sbb
push
xor
jne
into
cmp
jge
pop
fistps
cmpsb
cmp
loope
lds
xor
cmp
dec
shlb
adc
je
sbb
sbb
inc
subb
fcomps
push
mov
mov
push
int
dec
and
sbb
pop
or
sub
and
mov
test
lds
outsl
loop
out
out
jne
xor
gs
stos
mov
mulb
add
ja
imulb
or
and
cmp
mov
or
enter
xorl
paddusw
or
add
xlat
sub
lcall
add
stos
jae
add
cltd
xor
shrl
xor
sarb
mov
jmp
jg
push
sbb
jno
fwait
xchg
jmp
push
aam
cmp
jle
pop
cmp
dec
mov
mov
or
jb
cwtl
xlat
lret
dec
in
add
in
and
pusha
icebp
das
fwait
jns
popa
mov
mov
xchg
into
pusha
mov
ss
inc
dec
addr16
mov
nop
int
add
dec
or
dec
mov
cmp
or
stos
mov
pop
bound
mov
jge
sbb
pop
jecxz
fs
mov
dec
add
inc
cmp
xchg
rclb
pop
dec
shlb
dec
dec
test
mov
push
or
dec
cmc
mov
lret
xchg
xlat
das
add
adc
ja
push
das
inc
jl
daa
mov
cmp
inc
or
cmc
sahf
in
shlb
insb
jno
push
jo
out
aas
rcl
movsb
xor
jecxz
shll
iret
arpl
cmc
or
loop
cmp
out
cmpb
movsb
insb
je
lcall
mov
add
mov
xor
pop
in
mov
int3
sarl
add
lahf
movl
cmp
mulb
push
dec
and
pop
inc
sub
mov
call
xchg
sbb
movl
andb
aaa
imul
or
adc
icebp
sub
jmp
out
movsb
clc
dec
rcl
inc
and
xchg
push
adc
fwait
and
ss
insl
in
add
es
pop
insl
cmpl
test
jle
out
push
jge
into
xchg
mov
imul
push
cmp
loop
rcrb
xchg
bswap
mov
cwtl
cmpsb
imul
int3
jnp
xchg
fadds
jae
inc
xor
jb
mov
or
xor
mov
lods
inc
in
cmp
jne
daa
cmpb
pop
push
inc
add
push
ds
push
and
mov
add
and
push
and
mov
loop
cmp
jmp
arpl
imul
pop
lret
nop
daa
jge
js
sub
pop
mov
es
mov
mov
push
or
dec
pop
gs
insb
ljmp
test
or
pop
dec
cmp
dec
inc
aaa
mov
push
into
sub
jmp
cmp
sti
add
aaa
les
daa
jb
aad
out
adc
mov
fs
sbb
sbb
daa
mov
jmp
adcl
mov
and
or
fwait
stos
fildll
dec
fldenv
iret
pop
or
mov
andl
or
xchg
aam
sub
das
mov
sub
mov
movsl
mov
mov
push
push
push
jae
andl
inc
cmp
cmp
pop
xchg
or
xchg
sbb
mov
in
out
mov
sub
push
push
ljmp
hlt
mov
mull
lea
xchg
lods
mov
xor
xor
bound
cmp
fisttpll
sbb
int3
xchg
add
xlat
sbb
packsswb
in
imull
xchg
dec
decl
in
outsb
xchg
test
outsl
dec
mov
stc
inc
adc
ret
sub
inc
push
push
mov
sub
mov
mov
or
cmp
cmp
arpl
jns
jnp
bound
sarl
jle
rorb
fs
push
iret
jle
dec
add
addr16
mov
and
cmp
mov
jp
fstpt
fstpl
xlat
pop
sahf
add
daa
xchg
fnstcw
popa
add
stos
adc
mov
pop
pop
jns
andl
fmull
pop
push
push
fdivr
inc
and
dec
call
push
cmp
cmp
ljmp
xchg
xorl
es
shl
cmp
stos
repnz
push
das
jb
pushl
pop
rcrl
add
es
arpl
mov
add
push
sbb
jge
mov
insb
ds
pop
and
test
push
lahf
sub
or
shlb
leave
inc
call
pop
movsb
es
int3
les
lods
push
rcrl
cmp
data16
je
test
arpl
and
or
fwait
cmp
push
pop
mov
pop
aam
inc
data16
pop
jbe
sbb
outsl
mov
movsl
outsb
or
jae
jecxz
xor
sbb
mov
and
or
mov
xor
andl
inc
test
addr16
dec
lods
xor
and
jle
cli
pop
or
push
push
fs
hlt
mov
shlb
leave
pop
fnstcw
xchg
pop
add
sbb
nop
shll
mov
xchg
imul
les
push
ja
jno
dec
fcmovne
push
ds
pop
outsb
fwait
jl
adc
xchg
push
inc
ja
xor
js
mov
pushf
cmp
jns
push
jno
mov
aaa
sti
or
xor
fdivrs
fwait
inc
adc
arpl
loopne
cld
loope
imul
inc
fs
cmpsb
cmp
mull
sub
mov
add
cmpsl
pop
jge
lret
jle
inc
jbe
xchg
jp
mov
pop
cli
push
outsl
cmp
jl
data16
aam
push
pop
inc
addr16
out
cmc
pop
jno
movsb
push
or
icebp
mov
jg
subl
stos
test
jle
outsl
add
adc
aaa
stos
dec
dec
jge
aad
push
stos
dec
push
test
push
cmc
cmp
inc
inc
inc
fldl
or
pop
fistl
fs
loope
pusha
idivl
fs
cmp
cmp
xor
add
dec
sub
stos
fldcw
jmp
bound
push
push
movzbl
xchg
fldt
and
mov
gs
shlb
gs
data16
ret
rcrb
dec
jae
loope
sbb
cmpsl
cmpsb
or
add
and
push
pop
pop
mov
bound
divb
pop
mov
insl
loop
test
insl
je
hlt
iret
inc
sbb
adc
hlt
pop
ret
dec
cmp
out
test
int
cmp
pusha
cwtl
mov
cli
cmpsb
dec
je
repz
push
ds
test
sahf
das
and
add
push
or
and
or
mov
push
xchg
push
xchg
sub
jns
imul
mov
ret
stos
and
or
jnp
jp
std
mov
dec
mov
es
push
push
bound
scas
and
xor
idivb
sub
inc
test
sbb
jbe
xchg
cmp
rcl
ret
lods
test
sarb
js
pop
mov
pop
rcrl
arpl
out
and
mov
ret
fcomps
je
mov
das
cmpsb
test
sbb
stc
rcrl
mov
cltd
sbb
sar
mov
ss
outsl
jne
lret
xchg
jno
je
add
filds
gs
cmpsl
cmpsl
test
mov
mov
ret
sbb
mov
mov
rcrl
insl
sbb
mov
addr16
sub
push
mov
mov
lods
lods
sub
inc
hlt
sbb
inc
push
jecxz
jb
xchg
or
or
sub
mov
sar
sub
push
xor
push
cwtl
adcb
pusha
and
mov
fsubrs
push
test
push
pop
adc
push
push
xchg
push
mov
inc
cld
lahf
push
mov
aad
fs
out
push
fnstcw
mov
sti
popa
cmp
xchg
es
adc
add
sub
imul
int3
push
int
push
stos
cltd
lahf
mov
add
subl
cmc
testb
adc
jo
jo
cmp
mov
mov
jle
int
add
xchg
mov
pop
sti
ljmp
xchg
xchg
cmp
mov
outsb
imul
mov
addr16
movsb
xor
xchg
and
shr
xchg
mov
movsl
inc
mov
rolb
pushf
das
paddusw
cwtl
nop
pop
je
ljmp
daa
jnp
jnp
ficoml
jns
sub
imul
cmp
mov
push
ja
popa
call
mov
cmp
das
int3
push
cmp
les
pop
jnp
or
in
or
push
mov
adc
movsl
push
xor
push
add
dec
pop
inc
xor
add
mov
sbb
jnp
movsb
inc
int3
inc
pop
push
push
outsl
int3
pushf
inc
mov
inc
and
mov
inc
shll
mov
andb
sahf
fsubs
test
cmpsl
cmp
iret
cmpsb
ror
mov
mov
jne
loope
mov
mov
mov
pop
dec
sbb
sub
pop
insb
dec
sub
xchg
imul
jle
leave
mov
jnp
andb
add
sub
ficomps
jo
test
adc
mov
cmp
jge
int3
mov
jns
sbb
sti
adc
and
jno
test
icebp
jle
movsb
push
or
push
pop
cmpsb
sub
dec
dec
push
pop
adc
mov
inc
dec
pop
test
mov
lods
stos
jge
lret
mov
cli
sbb
pop
mov
aaa
push
lret
inc
inc
mov
cmpsl
push
push
sbb
mov
pop
inc
stos
sti
scas
mov
inc
sub
rolb
jbe
addr16
xor
sub
inc
push
fs
inc
lcall
mov
jno
xor
movsb
cmp
lret
jae
push
fdivs
movsl
in
mov
inc
cmp
cmp
push
fidivrl
jecxz
insb
sub
jecxz
fcomps
jle
add
gs
cmp
or
sbb
stc
arpl
xor
jle
jp
stos
xchg
inc
push
gs
mov
pop
dec
xchg
adc
jp
or
mov
outsb
scas
pop
dec
cmp
inc
cmp
pop
dec
and
jae
hlt
mov
jmp
adc
add
xor
and
pop
in
cmp
js
mov
pop
xchg
iret
cld
adc
int
or
addr16
movl
push
or
lcall
testl
cld
cmovs
push
in
cmp
push
jbe
dec
movsl
hlt
shrl
xchg
ret
dec
in
jne
imul
insl
mov
test
in
pushf
sbb
ret
pop
out
xchg
jmp
cmpb
dec
std
and
ds
mov
mov
adc
xchg
lods
lods
fld
push
neg
lock
cmp
test
cld
adc
mov
imul
js
xchg
and
loopne
sbb
dec
call
cwtl
inc
push
mov
mov
push
pop
adc
icebp
iret
iret
and
sarb
test
sahf
or
sub
push
pop
aam
add
or
push
js
call
daa
out
pop
fadd
stos
adc
and
aaa
aad
xor
fnstcw
jge
nop
mov
sub
mov
mov
addr16
sbb
inc
decl
xchg
sbb
xor
jae
ss
div
insb
jne
mov
dec
jae
fcmovnbe
orl
out
ficoml
push
popf
enter
mov
cld
inc
jne
and
sbb
lds
test
in
inc
jge
ficomps
int
das
inc
dec
pop
imul
and
test
test
jnp
or
adc
cli
xchg
cmp
cmp
imulb
clc
adc
aas
pop
lret
adc
fnstcw
fwait
add
cmpsl
andl
outsb
sub
and
jnp
jp
scas
pop
mov
loope
lds
fidivl
mov
je
pop
and
sbb
jno
cmp
mov
insb
jl
sub
sbb
lods
stc
fisttpl
pop
imul
dec
adc
and
adc
in
test
cmpsb
int
ja
xchg
sahf
sub
xor
mov
sub
xchg
or
sub
and
cmpsl
xor
dec
jp
mov
in
cmc
mov
push
lret
fisubs
ret
jne
jb
sbb
arpl
cmp
dec
jno
pop
bound
adc
xchg
iret
popa
arpl
lods
lret
in
add
dec
loope
jo
fcom
dec
inc
add
jbe
pop
jg
ret
jmp
jne
fwait
popa
mov
xchg
sbb
mov
dec
mov
mov
inc
or
mov
cmp
and
sub
mov
test
lret
insb
mov
cmp
mov
xchg
out
or
aad
sbb
loop
gs
or
decb
cmp
inc
dec
sub
push
stc
pop
cltd
push
cmpsb
shll
xrelease
into
mov
sub
mov
or
test
xchg
fwait
lods
std
xchg
mov
push
pop
pop
add
ljmp
push
mov
jl
cltd
pop
or
jb
ljmp
pop
pop
jbe
push
out
add
push
lret
and
pop
aad
add
lods
mov
arpl
sbb
cli
sti
add
pop
les
dec
dec
cmp
cmc
sti
jl
cmp
mov
popf
ror
rorb
push
inc
stos
mov
rclb
xor
and
test
xor
cmp
mov
push
mov
mov
jbe
ljmp
push
cmp
or
in
pop
sbb
inc
ret
ret
mov
inc
movsb
aad
sub
arpl
jl
or
mov
call
pop
mov
pushf
arpl
popf
fcompl
add
and
insl
xchg
pop
sti
add
cmp
aad
sarl
ret
inc
imul
or
aas
icebp
es
inc
or
sub
sub
mov
xchg
sbb
shlb
inc
aaa
push
imul
or
aam
push
mov
xchg
xchg
xlat
xchg
mov
inc
sarl
lret
das
lds
push
and
js
pop
inc
movsb
xchg
insb
popa
aam
fcmovb
push
mov
cld
sarb
fnstsw
jg
xchg
fcmovnb
jle
icebp
lds
scas
pop
imul
ds
pop
das
xchg
loope
insl
dec
les
aaa
lret
gs
sub
push
dec
push
rol
pop
jmp
xchg
push
jnp
xor
mov
faddl
xor
add
mov
out
mov
insb
and
vpmacsww
xlat
lahf
out
shrb
mov
imul
sar
insb
push
nop
lods
push
cmp
pop
cmpsb
enter
jo
fwait
aam
lret
shll
mov
inc
add
imul
push
adc
into
mov
xlat
jnp
xor
adc
aad
lods
pushl
jo
test
jo
fidivs
into
mov
mov
daa
inc
gs
cli
movsb
test
cmp
mov
ud1
xchg
cs
inc
cmpsl
data16
loop
lock
dec
daa
or
popf
mov
mov
jno
stos
xchg
add
ja
fs
xchg
pusha
movsl
add
jns
inc
inc
sbb
lcall
cmc
lret
pop
mov
imul
das
stos
pop
xor
or
fcom
js
lea
push
hlt
jmp
xchg
lcall
ja
push
mov
jl
fs
mov
imul
add
test
push
dec
jecxz
or
mov
or
dec
xor
mov
xchg
jmp
fiaddl
cli
aam
or
nop
mov
inc
dec
inc
clc
dec
pop
cwtl
cmp
addr16
xchg
jnp
xor
popa
jno
jmp
fstpt
out
cld
cli
xlat
in
xor
lcall
roll
cltd
xor
mov
lea
or
leave
insl
xor
call
inc
sub
das
sti
mov
push
push
xchg
outsb
sub
sub
sbb
jle
fcomps
mov
pusha
insl
icebp
notb
pop
xor
mov
dec
out
jo
or
imul
fninit
mov
dec
cmpsb
mov
fmuls
int3
dec
int
dec
sub
or
sbb
jno
xchg
insb
inc
dec
insl
jle
aad
sahf
push
xorps
jnp
flds
pop
shll
mov
cltd
mov
and
subl
sub
lds
lret
cltd
xlat
call
rclb
imul
or
lods
movl
push
mov
dec
jbe
sub
xchg
enter
test
clc
jno
push
xchg
call
inc
cs
pop
sub
push
into
test
adc
sbb
test
ds
mov
lret
adc
sub
daa
cmp
inc
lds
mov
lret
jb
testl
mov
sbb
out
ds
and
stos
rclb
cmp
inc
jle
enter
jo
clc
out
fidivl
aam
jnp
inc
xchg
or
sarb
lret
mov
inc
test
xor
orb
xor
sahf
or
cs
mov
jae
or
outsl
insl
imul
pop
fisubrl
dec
addr16
lea
icebp
je
mov
lds
inc
rolb
add
or
mov
jle
adc
scas
icebp
shlb
add
mov
mov
add
int3
adc
mov
xchg
test
sbb
sbb
pop
and
cltd
sbb
aad
push
dec
out
mov
pop
rorb
mov
repz
sahf
and
xchg
test
stos
sbb
mov
xor
sbb
dec
push
and
jmp
push
dec
outsb
mov
aas
aam
xchg
or
insb
push
fwait
jbe
push
sbb
jno
sahf
jg
xchg
out
icebp
mov
pop
gs
mov
mov
xlat
jg
sub
pop
fcomps
rorl
in
dec
mov
inc
cltd
pop
das
mov
mov
shll
push
jne
mov
pop
nop
dec
pop
add
push
hlt
dec
aaa
addb
sub
jmp
js
push
xchg
rolb
jp
test
movsb
xchg
xchg
sub
sub
pushf
jp
jp
ds
stc
cld
insb
mov
rolb
mov
xchg
dec
ret
es
mov
xor
rol
add
jo
imul
push
inc
dec
iret
js
inc
adc
sbb
into
fwait
adc
adc
jne
rorl
push
push
stos
dec
js
lret
cmpl
mov
in
jp
cmp
add
inc
sbb
stos
out
or
pushf
adc
fildll
adc
fldcw
pop
mov
les
iret
dec
mov
ja
cli
adc
cmp
nop
mov
lock
jl
es
scas
ljmp
mov
inc
arpl
repnz
mov
lfs
push
cmp
hlt
mov
leave
mov
rcll
inc
xchg
push
jns
imul
jno
add
fcmovu
jp
push
aam
mov
stc
aam
push
testl
adc
sahf
outsb
jne
mov
sub
mov
test
les
mov
jno
mov
scas
mov
cmp
cltd
jl
add
cmpl
push
pop
adc
and
sub
ret
cmp
cwtl
lret
mov
inc
mov
lcall
je
cltd
cmp
stos
pop
cmp
xchg
sbb
loopne
jle
ds
and
cmpsb
dec
shll
lahf
pop
int
and
push
cs
jns
lahf
adc
sahf
xlat
mov
decb
and
outsb
cmp
jae
decl
ficomps
and
pushf
ss
and
xchg
pop
pop
inc
adc
add
fstpl
or
or
shl
adc
mov
jle
out
add
cmp
mov
stos
js
cmp
fistl
lret
sub
xor
stc
dec
js
inc
pop
subb
scas
aaa
out
add
fimull
fdiv
adc
sub
movsl
fwait
mov
jo
xchg
mov
push
jns
scas
xor
filds
mov
jmp
and
cmp
test
ds
xor
mov
rorb
push
lret
push
int3
jl
loope
cwtl
pand
jno
adc
push
xlat
mov
sbb
mov
sahf
pop
andl
push
sbb
add
loope
mov
imul
inc
mov
inc
call
data16
inc
push
loopne
adc
push
adc
out
lods
cmp
and
in
inc
mov
insb
stc
dec
jns
in
dec
and
push
loopne
mov
aad
aad
fstpl
push
adc
cmpsb
add
sti
dec
nop
mov
or
testb
mov
fistpl
inc
cmpsb
in
jbe
loop
sbb
test
xchg
add
mov
cmp
xchg
fucom
jg
leave
cvtps2pd
or
cmp
cmp
lds
jge
sbb
out
mov
jne
cmp
mov
orl
mov
loope
hlt
cmpl
mov
adc
mov
or
aam
push
fbstp
dec
out
and
jge
jecxz
scas
into
xchg
jge
or
adc
das
loopne
ret
mov
subl
pop
pop
popa
mov
lcall
fsts
jbe
add
and
mov
jmp
add
mov
mov
push
mov
cmpsb
movsb
sub
insl
mov
pop
and
ret
jbe
lds
xor
mov
ds
clc
cmp
cmp
inc
addr16
pop
rorl
and
rcll
test
sub
and
xchg
ljmp
into
lock
lods
cmpsb
cld
loope
xchg
aad
mov
push
jb
sti
rcr
jl
or
les
xor
mov
jle
aaa
ljmp
stc
or
out
cli
rcrl
sbb
push
addb
adc
mov
and
pop
fwait
inc
ja
cmpb
and
push
xor
lods
das
xlat
or
sub
dec
jno
sbb
rcrl
push
je
call
int3
outsb
or
clc
loop
lods
stos
mulb
xchg
inc
loop
inc
push
popa
fildl
add
adc
aaa
hlt
movsl
adc
jecxz
sub
jnp
es
lahf
lcall
bound
inc
add
cmpsl
stc
dec
sbb
jl
shrl
cmp
pop
push
mov
rcl
xorb
lds
sub
sbb
popf
rcll
adc
xlat
jle
xchg
pop
je
imul
inc
inc
fisubl
pop
in
pop
out
in
stos
int3
mov
sub
add
push
in
insl
cwtl
lcall
daa
xchg
inc
sbb
xchg
pushf
cmp
pop
mov
mov
sbb
mov
lahf
movsb
leave
push
andl
daa
jmp
push
sub
in
mov
mov
cmpsb
shlb
inc
ret
xchg
das
add
fists
cmpsl
sub
xor
jnp
fsubrs
jb
fsave
pop
movsb
popa
orb
test
mov
sub
aas
lock
mov
rclb
pop
lret
repnz
iret
lods
icebp
mov
je
sub
cmp
dec
sub
cmpsl
or
aam
push
cltd
or
clc
lods
sahf
push
movsl
lret
jne
dec
dec
cmpsl
aad
or
cmp
push
xchg
ss
xchg
arpl
into
cmp
fwait
inc
lret
pop
dec
fsts
or
push
mov
sbb
lods
lcall
push
fadds
cs
dec
lock
jnp
and
call
mov
lret
in
pop
loopne
jne
cmc
fistps
add
test
add
lods
xor
or
inc
jne
push
add
repz
mov
aaa
das
ret
dec
lcall
popf
fnstcw
add
or
push
push
inc
push
add
fnstcw
pusha
lea
jne
dec
es
je
cld
imul
cmp
repnz
pop
lods
ss
gs
dec
adc
fists
jae
mov
add
xchg
jno
leave
fnsave
dec
inc
dec
sbb
sub
dec
mov
adc
mov
sub
fidivl
cmc
outsl
pop
lahf
xor
add
fs
sub
outsb
inc
rcrl
and
fldcw
xor
push
fldcw
mov
adc
inc
fdivs
stos
hlt
repz
or
popf
inc
inc
dec
cmpsb
fildl
sub
andb
pop
inc
cmpsb
pop
lcall
test
mov
fimuls
cmpsb
add
popf
pop
pop
inc
mov
add
and
push
leave
insl
insl
fs
daa
stc
push
cmc
jmp
sbbb
dec
sahf
testl
or
in
jb
mov
movsl
bnd
lock
inc
adc
ret
ja
sbb
and
rcrb
aam
repz
decl
xchg
lds
out
cmp
cmp
ljmp
xor
loop
lret
dec
add
mov
arpl
adc
cmp
sub
dec
inc
sub
inc
push
xchg
or
les
sbb
lods
lcall
jmp
dec
push
stos
out
stos
out
push
cmpsb
pop
xchg
inc
sub
in
fmulp
sbb
cmp
pushf
adc
lret
leave
add
dec
sub
mov
push
sub
jmp
jns
sub
dec
mov
cmp
aad
ljmp
stos
insl
or
inc
xchg
rorl
sub
mov
fisubrl
xchg
cltd
xchg
movsl
popa
in
mov
in
test
pop
in
dec
in
pop
cmp
nop
les
stos
jno
jecxz
cwtl
in
push
pushf
mov
stos
inc
lea
and
mov
insb
dec
push
jecxz
dec
pop
fistpll
jns
daa
lret
pop
xor
jne
ljmp
dec
das
lret
sbb
xchg
add
or
sub
pop
or
mov
je
mov
and
sbb
adc
stos
dec
in
jne
push
add
cmpsb
fucomip
sub
fnstenv
push
xor
out
add
mov
inc
inc
add
cmp
fsubrs
test
sub
xor
mov
loopne
movsl
dec
fwait
mov
or
mov
jo
mov
dec
ds
pop
pop
int
stos
dec
and
pusha
pusha
insl
mov
testb
sub
jp
lret
mov
cmp
fsts
aaa
pusha
cld
and
scas
and
push
outsb
mov
xlat
sub
ljmp
into
mov
mov
xchg
mov
adc
add
add
stc
rep
mov
xchg
mov
cli
sub
movsl
test
dec
sbb
and
push
mov
sbb
pushf
mov
and
or
cmp
dec
popf
and
xchg
fidivrs
fwait
stos
inc
repz
out
jecxz
adc
idivb
stc
fwait
cli
lea
cmp
sahf
leave
push
cmp
pushf
inc
sbb
pop
mov
dec
dec
add
or
sbb
mov
out
stc
add
lds
popa
aas
mov
cwtl
pop
mov
pop
std
test
push
add
loop
dec
lods
sub
icebp
xchg
int
scas
lcall
js
test
je
cmp
jp
xor
insl
inc
addb
sub
mov
adc
in
adc
and
jle
nop
or
scas
fcmovbe
xchg
inc
repz
filds
enter
testl
jno
jne
stos
popa
pop
sbb
xchg
lock
daa
mov
mov
inc
call
mov
sbb
test
adc
and
push
sarb
pop
enter
test
pop
and
lds
cmp
leave
add
jmp
lret
xor
pop
inc
push
mov
mov
enter
fwait
cltd
sbb
fcmovnb
pop
scas
bnd
loopne
mov
mov
mov
add
dec
sbbl
movsl
cmp
roll
jl
fidivs
sbb
mov
xchg
jp
or
mov
mov
mov
pusha
sub
lahf
outsl
imul
cltd
js
sub
and
add
jg
fdivrl
or
repz
stc
xchg
call
push
xchg
rolb
roll
cwtl
or
jl
jge,pn
xchg
jmp
or
cli
out
jp
hlt
pop
sub
jge
jns
and
adc
pop
in
add
cmpsl
out
lods
iret
sub
jge
inc
arpl
inc
inc
sub
and
inc
adc
xor
pushl
push
insb
fstpt
jp
ja
push
add
push
and
add
dec
ja
out
in
jge
pop
mov
push
fsubs
pop
nop
pop
das
pop
dec
push
outsb
mov
adc
push
push
pop
add
push
push
pushf
in
push
jnp
push
outsb
cmp
imul
push
in
mov
movsb
push
test
insb
aam
pop
notb
out
call
ss
or
ja
cwtl
shlb
das
jb
xchg
sub
add
mov
inc
cmp
push
repnz
and
sub
shl
and
xchg
int3
add
je
adc
shr
jbe
inc
mov
adc
sub
insb
int3
js
dec
or
ret
or
mov
and
lods
mov
mov
mov
push
add
pop
mov
inc
je
adc
or
lcall
aaa
lcall
loopne
test
popf
fs
xlat
ljmp
push
mov
mov
in
mov
pop
nop
sarl
xor
and
test
aas
fisubs
dec
push
jge
je
xchg
sti
push
loop
je
push
push
data16
mov
dec
sti
loopne
mov
pop
mov
stos
pop
test
ss
adc
lods
out
cmp
jns
shl
push
cmc
xchg
or
mov
push
lds
int3
les
mov
mov
lret
inc
and
testl
cmpsb
ljmp
loop
sub
jmp
fisubrs
popl
dec
pop
insb
dec
xchg
clc
mov
nop
or
pop
sub
xchg
int3
inc
push
les
movsl
daa
mov
data16
pop
hlt
sbb
test
sbb
or
mov
aaa
je
stos
sub
xchg
sbb
xchg
mov
push
xchg
push
test
xchg
jle
in
nop
pop
sti
jns
xchg
shl
out
add
out
pop
sub
mov
lea
pop
pop
outsl
shlb
scas
add
fs
inc
daa
fs
aaa
flds
lods
push
xlat
in
push
enter
into
sar
and
push
push
cmp
mov
pop
cmpsl
hlt
stos
sub
lahf
stc
lds
xor
dec
or
pop
ficomps
sbb
cli
mov
test
sub
mov
sbb
cmpsb
cmp
sbb
add
push
sbbb
test
sub
push
pop
pop
outsb
cmp
popf
fdivl
lods
fcoms
adc
push
add
push
jne
or
xor
int
jno
sbb
ret
mov
xor
jl
aam
cltd
cmp
pop
repz
shlb
push
jns
xor
ds
insl
and
or
cmp
adc
push
push
in
daa
enter
xchg
inc
xchg
push
pop
pop
or
adc
or
jge
inc
fidivrs
scas
jo
sbb
push
jecxz
jl
cmp
shll
add
inc
push
imul
pusha
jmp
dec
loope
mov
xlat
push
aaa
dec
and
test
xor
and
popf
sahf
adc
mov
push
pop
ja
mov
adc
dec
cli
pop
es
cmp
jae
rorb
push
addr16
sbb
pop
adc
insb
inc
rcrl
sub
cmp
push
inc
jge
jbe
mov
xor
lret
jns
inc
pushf
clc
gs
mov
pop
sub
sbb
or
sbb
dec
test
inc
push
jne
outsb
rorb
inc
repnz
lcall
xor
xor
add
xchg
int
add
add
mov
xor
outsl
xchg
inc
jecxz
outsb
pop
and
imul
gs
xchg
cmc
daa
or
dec
jbe
inc
int3
das
jns
insl
dec
xchg
xchg
xchg
pop
ss
sbb
adc
xchg
jne
shll
adc
pusha
stos
cmc
mov
mov
sub
sbb
test
mov
mov
sub
inc
pop
xchg
pop
adc
push
xor
outsl
xor
xchg
and
push
arpl
inc
xor
in
fisubrs
leave
lcall
adc
inc
in
ljmp
lods
xchg
pop
lds
lret
aam
sbb
jg
sbb
sbb
pop
aas
mov
imul
mull
jecxz
imul
loopne
loope
mov
inc
push
xchg
or
pop
mov
push
insb
xchg
test
out
fbld
rcll
sub
sub
adc
adc
and
jg
or
cmp
sub
push
jmp
dec
inc
ret
push
push
out
test
pop
cmpsl
loopne
fwait
lock
rcll
fistpll
or
mov
in
push
leave
inc
adc
and
pop
sub
adc
adc
fdivrs
xchg
mov
mov
iret
cmpsl
vpaddq
mov
and
pushf
or
pop
sti
inc
lods
rol
hlt
mov
lock
or
mov
iret
movsb
movsb
pop
sub
fstl
adc
or
sub
add
pop
sub
sbb
add
push
sub
cmp
stos
fs
fnstcw
lret
mov
lea
movsl
xor
scas
mov
or
lret
sub
sbb
or
cld
insl
outsl
outsb
dec
fmuls
addr16
je
adc
popa
fstpt
push
movsb
jle
push
jno
pop
pop
cld
add
or
pusha
scas
cmp
sbb
jge
movsl
cld
repnz
mov
les
or
or
jecxz
push
xchg
div
stos
jge
repnz
repz
xchg
cwtl
fdiv
xchg
imul
or
adc
xchg
jnp
das
int
mov
and
pop
outsb
bound
and
insl
jne
int3
lods
xchg
add
es
das
jne
and
ss
fldt
hlt
mov
imul
aad
pusha
sbb
fisttps
ret
icebp
pop
call
mov
xchg
int3
adc
call
or
push
mov
inc
xchg
or
add
inc
pop
ret
xor
push
dec
pop
imul
in
ss
push
jno
lods
shlb
andl
je
dec
mov
loop
jno
imulb
push
or
or
or
ficoml
fldl
mov
ret
es
cld
movsb
pop
mov
mov
push
adc
in
decl
jbe
rcrb
std
cld
sbb
or
cmp
jnp
jg
shr
pop
lret
jbe
add
cltd
xchg
or
ja
loop
add
cmp
jnp
sti
movsb
mov
shrb
mov
dec
add
mov
movsl
adc
lods
pop
mov
mov
jl
or
popf
pusha
sbb
dec
sub
jne
lds
dec
lcall
mov
mov
ja
roll
mov
or
add
insb
cmpsb
inc
out
fildll
popa
aam
inc
push
add
loop
pop
or
xchg
rol
push
ret
add
sub
mov
lock
movsb
mov
fiaddl
cmp
add
stos
bound
cli
inc
mov
stos
gs
es
xchg
mov
pusha
adc
cmpb
adc
cld
imul
inc
adc
jge
iret
jnp
xor
mov
push
ret
iret
fists
mov
xchg
inc
aaa
pop
mov
fstp
ds
testl
into
or
fwait
mov
fwait
or
daa
lds
insb
cld
aam
loop
mov
cmp
or
rdtsc
xchg
add
push
push
imul
mov
bound
es
stos
sbb
pusha
outsl
mov
xchg
std
imul
dec
fs
sub
lret
mov
xor
test
pop
out
cmp
push
pop
add
cmp
test
dec
cmp
hlt
mov
xlat
xor
and
ret
fwait
jnp
sub
data16
inc
mov
bnd
jge
aad
jg
movsl
xchg
jbe
xor
sbbb
or
jmp
sub
sub
adc
sar
subl
lcall
mov
daa
jle
xor
cmpsb
je,pt
xor
insb
xorb
test
ficompl
add
jbe
or
xor
negb
rorb
subb
lret
jno
sbb
jmp
add
fdivrl
pop
adc
das
mov
and
rclb
sarl
sbb
lods
inc
xchg
sub
jnp
push
and
js
mov
dec
shll
xchg
xchg
push
xchg
or
jno
cmp
lahf
jae
push
mov
xor
mov
lret
adc
pop
scas
lea
jecxz
or
and
jnp
xchg
adc
cli
cmp
out
scas
into
mov
cld
pop
push
sub
and
lods
test
notl
into
or
test
or
or
dec
int3
adc
stc
sbb
xchg
loopne
mov
repz
jno
mov
mov
sub
ret
loope
push
jne
popa
jae
and
mov
cld
clc
and
cmp
cwtl
push
mov
cmp
lds
xor
xor
test
add
std
pop
pop
xchg
repz
adc
xchg
std
pop
and
add
dec
shrb
aas
add
sub
ret
adc
lds
shrb
jle
xlat
jle
aad
sbb
loop
sub
orb
ret
shlb
xor
pop
fisubs
pop
gs
in
enter
or
outsb
pop
lahf
mov
pop
jb
cmp
cs
pop
popa
mov
pop
stos
stos
subb
lds
pop
xchg
adc
ficoml
xor
adc
sarb
loop
call
aaa
lretw
mov
xor
ja
jnp
aaa
pshufw
pop
pop
sbb
lds
out
out
cmp
sbb
testl
xlat
repz
test
sahf
mov
outsl
xor
aam
iret
shr
insl
daa
mov
xchg
fs
fadd
cmp
mov
lret
cmpl
dec
xchg
lret
or
ljmp
dec
push
repnz
je
xor
cmp
jnp
or
push
mov
pop
push
cmpsb
push
shll
fadds
sarl
inc
dec
or
jecxz
pop
cmp
jge
inc
mov
mov
xor
repz
jnp
cmp
es
cmp
lods
jle
ljmp
aam
sbb
in
addl
gs
xor
outsl
sub
pop
inc
scas
js
pop
inc
out
jecxz
dec
rorb
inc
xor
imul
outsl
inc
in
jne
call
jne
icebp
gs
shr
mov
and
jle
jo
pushf
cmovbe
cmpsb
sbb
or
dec
or
bound
cwtl
jo
sub
dec
test
test
jno
scas
aad
add
jl
aad
push
inc
jge
das
inc
lret
ds
push
es
aam
ljmp
rol
push
loop
cmp
enter
pop
fimull
mov
cmp
gs
cmpsl
sub
add
lds
cmp
adc
fld
sbb
jb
pop
movsb
pop
xchg
push
pop
pushf
sub
add
fsubs
sub
jmp
int3
and
ret
clc
push
in
xlat
cmp
and
in
sahf
jmp
sbb
outsb
inc
subb
inc
js
dec
mov
cmp
test
dec
data16
scas
lret
into
sbb
jp
fdivrl
cltd
jo
cltd
jge
loopne
sbb
cmpsl
pusha
cmp
dec
insb
sarb
subl
in
fdivrs
movsb
fisttps
adc
dec
movsb
mov
inc
loope
add
cs
jge
dec
divl
loopne
jecxz
jae
cmp
mov
sub
sbb
add
push
xchg
stos
cmp
sbb
test
sub
pop
aas
and
push
aam
sbb
addr16
and
mov
outsl
jp
ficoml
flds
jo
ficompl
lds
lods
pop
mov
aam
lds
jns
imul
dec
in
movsl
enter
int3
pop
adcb
mov
pop
cs
shlb
dec
and
outsl
outsb
push
jecxz
jbe
jge
cmp
xchg
clc
shll
push
add
jbe
push
jno
or
adc
inc
push
test
clc
test
xor
repz
ret
inc
dec
test
rcrl
into
icebp
sahf
xchg
xchg
ja
xor
std
and
popf
and
int
aas
lods
lcall
mov
jns
pop
notl
xchg
sbbb
push
iret
push
stos
mov
mov
dec
lock
aam
jmp
mov
lods
insl
shll
cmp
inc
adc
aam
jl
mov
pop
adc
inc
lea
push
fwait
or
into
xor
lret
das
push
mov
pop
mov
popa
aaa
mov
adc
push
mov
sbb
cmp
mov
test
jo
sbb
xchg
pop
sbb
cli
outsb
add
loopne
push
ret
mov
and
xor
add
inc
xor
xor
push
movq
xchg
ret
stos
notb
rolb
pop
rolb
loope
mov
sar
je
mov
inc
jb
sbb
test
mov
js
lret
adc
xor
sbb
repz
push
jp
fbstp
xchg
dec
sub
mov
cmpsl
push
dec
dec
dec
je
mov
jle
xchg
xchg
cmp
outsl
or
pop
in
pop
sarl
sbb
adc
sarb
adc
mov
fisubrs
movsl
sbb
outsl
insl
lea
xchg
daa
es
mov
call
add
sahf
xchg
sar
push
xchg
push
jge
pop
or
dec
mov
pop
push
xor
xor
push
jnp
aad
inc
mov
imul
std
lock
das
cmp
dec
fsubp
mov
out
cmp
mov
lods
mov
outsb
cmpsl
xchg
dec
mov
cmpsl
jnp
sbb
int3
pop
cmp
adc
push
mov
dec
test
xchg
loop
cli
adcl
or
jno
push
scas
aad
xor
leave
adc
aaa
and
orl
test
mov
gs
stos
stc
cmpsb
fistl
mov
jp
test
jl
repz
loop
jl
xor
lret
jge
pop
pop
std
push
sbb
sub
inc
sub
jle
and
dec
mov
clc
adc
cwtl
pop
adc
sub
testl
es
jne
mov
in
icebp
push
pop
pop
out
cmp
mov
jge
dec
push
and
lahf
dec
xchg
test
fsubp
imul
pop
sarb
jle
pop
pushf
dec
call
cmp
arpl
fcmovnu
jmp
jb
bswap
stc
jne
adc
bound
adc
inc
sahf
fldcw
ret
sahf
test
add
imulb
jl
adc
out
jl
sbb
adc
pop
pop
and
inc
movsl
add
jle
das
fsts
ret
or
cmp
dec
adc
add
push
stc
rep
jnp
mov
cmp
insb
push
pop
sbb
cmp
imul
xor
or
aam
push
fldenv
xor
imul
outsb
pop
dec
fs
in
fs
ret
or
jnp
or
fcoml
mov
ficomps
or
push
sbb
fnsave
or
jns
bound
or
je
cmp
aam
cltd
xchg
rol
out
or
out
scas
or
fcomps
jl
iret
sahf
sbb
icebp
sbb
adc
push
shrb
lds
add
test
xchg
dec
sub
add
mov
out
push
popa
nop
test
out
stc
xchg
out
ret
add
xchg
decb
xor
lods
or
je
xor
push
xlat
cmp
aam
mov
nop
mov
scas
sub
lds
mov
jnp
mov
sub
out
xor
sahf
sti
or
mov
adc
mov
mov
xlat
adc
dec
fcmovne
scas
xchg
ret
inc
push
mov
stos
push
jno
fcmovu
sbb
lcall
aad
out
sub
lods
cmp
insl
imul
xor
jns
loop
out
lods
mov
add
dec
loopne
dec
xchg
bound
inc
dec
pusha
scas
out
iret
test
pop
mov
loope
arpl
and
loope
push
sbb
adc
fildl
or
sysexit
incl
pop
stc
call
sbb
jg
sbb
outsl
mov
and
inc
xchg
repnz
xchg
jb
jp
in
mov
cmp
add
pop
mov
jp
pop
adc
mov
cs
and
mov
and
sti
jo
fsubl
arpl
scas
adc
xchg
xchg
mov
out
sti
sub
xor
cmpsl
dec
aaa
out
jne
mov
dec
jecxz
and
jmp
das
pop
rolb
imul
fsts
jne
setns
mov
lcall
imul
mov
pop
repz
scas
movsl
jp
inc
ffreep
idivb
das
xchg
aas
mov
push
add
sub
xor
cltd
xlat
mov
and
inc
and
sub
push
setnp
addr16
divb
jne
xor
fdivrl
lcall
dec
insb
stos
movsl
aaa
dec
and
jg
sbb
pop
ret
mov
inc
testl
mov
sbb
mov
out
sub
hlt
xor
lods
and
mov
inc
dec
and
xchg
and
shlb
rcl
cmp
and
mov
test
cmpsb
in
jbe
fs
xchg
cmp
ljmp
jle
xor
outsl
scas
inc
xor
cmpsl
jl
aas
adc
lds
push
leave
in
fldlg2
adc
ret
mov
sti
mov
repnz
jne
test
or
xor
lea
adc
xlat
repz
or
xchg
and
push
repnz
clc
sbb
push
scas
daa
mov
jmp
add
dec
ret
aaa
push
add
out
dec
aam
arpl
xchg
shrl
and
push
ss
stos
pop
dec
gs
divl
ljmp
rcrb
sbb
push
pop
jecxz
push
mov
sti
loop
popa
popa
lret
aaa
adc
dec
jne
popf
insb
jae
push
andb
cltd
xlat
lods
gs
push
rcll
mov
jmp
or
insb
fcomps
push
out
jno
and
pusha
ret
cltd
push
and
fbld
and
fdivrl
adc
pop
das
int3
movsb
sub
mov
jge
push
jne
fildll
nop
push
shrl
jl
aaa
inc
lods
mov
push
sub
mov
loope
jle
cwtl
aad
sub
sbb
aam
adc
mov
mov
fisubrl
mov
rclb
mov
dec
ljmp
add
jne
out
xchg
dec
sub
sub
push
sti
jns
cmp
or
stc
jl
lret
xor
cwtl
lret
xor
pextrw
dec
les
cmp
xchg
jp
and
ficoml
inc
lock
fwait
push
cmc
pop
push
or
pop
dec
add
or
xor
mov
pop
testb
lcall
sbb
aad
inc
xor
mov
addps
loopne
push
pop
dec
and
mov
test
sahf
push
mov
in
and
das
push
add
or
cli
mov
data16
js
aaa
cmp
add
push
mov
fstl
push
and
fbld
nop
mov
push
lret
mov
loop
lds
or
into
xor
xlat
test
or
inc
or
scas
jge
push
add
jecxz
pop
sub
imul
imul
xor
jl
in
scas
xor
dec
jg
pop
int3
cmp
push
adc
push
push
cmc
dec
test
pop
pop
dec
imul
add
xchg
ljmp
mov
scas
int
jl
jo
jo
in
stos
lods
xor
pusha
je
cmp
push
pop
imul
cld
mov
sbb
test
jmp
mov
das
sub
inc
add
xlat
add
xchg
cld
sub
mov
push
adc
jmp
hlt
mov
jnp
and
insb
mov
shlb
clc
mull
andb
push
negb
adc
and
js
scas
cmpl
movsl
test
andl
push
test
adc
inc
and
imul
pop
rolb
mov
and
push
dec
sub
and
outsl
push
notw
outsb
in
jns
adc
cmp
scas
insb
outsl
lcall
mov
ret
fmul
mov
pop
sub
and
cmpsb
test
and
pop
push
aas
lods
xchg
pop
jge
andb
fildll
or
scas
add
ja
mov
fistl
mov
dec
xchg
pop
jp
sti
rolb
aad
inc
xor
pop
icebp
imul
push
cld
xchg
cmp
add
flds
sbb
pop
fs
push
or
insb
sar
add
and
sub
push
sub
cwtl
in
or
mov
cmp
mov
movsb
mov
jno
jbe
dec
mov
clc
jno
scas
jge
push
sbb
repz
into
mov
pop
push
roll
scas
lret
orb
mov
iret
jnp
mov
mov
jnp
icebp
sbb
and
lods
sub
enter
adc
loopne
dec
cmpsl
add
cmp
xchg
pop
dec
sahf
pop
adc
test
cwtl
pushf
sub
cmp
mov
call
fcompl
fwait
add
ret
jle
mov
rorl
mov
pop
ffree
xor
cmp
sub
adc
cwtl
and
pushf
aaa
inc
lea
dec
push
adc
pop
push
push
mov
adc
mov
sbb
cmp
in
mov
jle
mov
scas
test
dec
fs
pop
mov
cmp
out
dec
nop
fldt
xchg
xor
dec
ja
jne
stc
jnp
int
ja
fcoml
pop
movsl
mov
aaa
jle
test
push
jg,pt
cmp
scas
xchg
add
push
imul
mov
and
nop
icebp
push
das
push
mov
das
cmp
cmp
pop
jl
in
add
mov
mov
xlat
push
pusha
js
xorl
pop
ret
ja
repnz
sti
dec
clc
dec
sti
pop
out
call
cmp
jo
mov
jbe
mov
jl
dec
jg
test
hlt
les
pop
fwait
aam
sub
pop
lret
cmp
clc
inc
cmp
inc
adc
cmpsb
je
int3
mov
mov
jp
xlat
mov
stos
mov
cmpsl
cld
and
sub
push
lret
lcall
mov
push
inc
mov
mov
mov
and
aad
and
enter
popa
or
adc
lret
jge
lods
cwtl
jmp
xor
movsb
ds
test
stos
xor
movhps
subb
dec
inc
push
sub
call
mov
rol
into
js
push
sti
sub
sub
push
imul
lods
cmp
lret
adcb
mov
jle
fcoms
insl
pusha
iret
rolb
sti
es
in
xchg
and
push
enter
jo
clc
icebp
add
xchg
or
out
pop
outsb
inc
hlt
mov
loop
pop
jge
dec
cmp
add
push
or
lret
pop
pop
mov
cmp
sbb
jle
sbb
jl
popf
dec
push
add
push
fidivrs
cmp
adc
les
insl
dec
loopne
mov
mov
ret
sub
or
add
pop
ret
pop
shl
xchg
or
cli
jecxz
out
dec
imul
jg
push
inc
and
jle
xchg
jecxz
jl
and
lds
gs
mov
loop
pop
fwait
jne
fwait
in
inc
adc
inc
pusha
in
xchg
std
cmp
inc
mov
add
jmp
push
fsubl
jb
stos
xchg
aaa
inc
jge
mov
mov
stc
into
pop
push
cmc
sbb
sbbl
or
mov
sarb
push
pop
sbb
sub
mov
and
scas
popa
and
sbb
ficomps
dec
scas
je
subl
scas
jl
inc
cmp
lret
mov
lret
cmp
sub
subb
push
xchg
ja
mov
cs
sub
daa
jg
imul
jmp
ret
add
mov
inc
push
jbe
frstor
add
fmuls
lret
mov
incb
clc
xor
fucom
inc
hlt
xor
daa
iret
mov
or
subl
js
or
outsb
js
cwtl
and
pop
call
and
imul
adc
ret
hlt
push
ret
jns
inc
in
fwait
push
mov
pop
outsb
cwtl
pushf
fldcw
mov
jne
xchg
cmp
inc
xor
mov
ja
mov
addr16
and
adc
inc
das
dec
mov
sarb
outsb
dec
pop
cld
xchg
rorb
inc
rolb
out
in
scas
sbb
add
xor
mov
popf
xor
mov
dec
hlt
mov
fnstenv
xchg
movsb
mov
pop
cmp
push
sub
and
push
sub
pop
or
push
dec
dec
iret
dec
mov
inc
mov
push
xchg
movsl
fiaddl
fbld
ss
fwait
sub
add
xor
mov
push
mov
cmpsl
shll
pop
push
neg
mov
adc
aaa
pop
pop
sbb
cmp
negl
mov
inc
inc
or
mov
inc
pop
movsb
push
dec
jge
xchg
loope
pop
loopne
mov
pop
jne
xchg
xor
and
pop
push
pop
mov
xchg
xor
cmp
popa
or
das
inc
jns
cwtl
xchg
in
dec
inc
and
addr16
enter
cs
xor
and
mov
sbb
xchg
mov
xor
mov
adc
rcl
push
xabort
and
cmp
pop
xchg
xlat
int
ror
shlb
or
jge
mov
cmp
mov
cld
dec
xor
push
add
jns
incl
sub
push
cmp
es
pop
addr16
cltd
mov
jmp
push
arpl
gs
pop
dec
adc
push
iret
cmp
mov
push
cmp
mov
ret
adc
aas
lods
cwtl
add
jo
jnp
repnz
mov
in
dec
movsl
push
push
aaa
data16
cmp
shll
or
aas
push
pop
push
cli
or
or
xchg
sub
pop
enter
mov
cmc
and
sub
add
int3
pop
add
add
inc
rcll
xchg
jns
push
pop
rcrl
insl
mov
dec
inc
mov
fdivs
add
or
jo
sub
stc
daa
ljmp
pushaw
loop
add
and
scas
loopne
cltd
push
mov
lods
sub
aaa
jno
sahf
add
pop
cli
fimull
dec
filds
lcall
add
cltd
arpl
pusha
shlb
clc
mov
pop
mov
sbb
nop
test
pop
popf
add
add
jp
repz
push
pop
jp
add
shrl
mov
js
sahf
mov
orb
leave
ss
mov
cmp
mov
jb
and
jo
fucom
jmp
or
jg
push
xchg
pop
fs
sahf
and
bound
ficomps
push
mov
cwtl
inc
jl
push
das
cmpsl
pop
and
rol
inc
pop
and
jg
mov
js
pop
rorb
fildl
push
in
outsb
add
xlat
lods
imul
push
ljmp
add
sahf
iret
in
fidivrs
mov
cmp
ds
jnp
cmp
jns
inc
nop
cmpsb
or
jne
jns
jno
addb
std
push
shlb
pop
stc
xchg
out
fimull
mov
jno
xchg
movsb
lret
lds
lahf
push
mov
outsb
fidivl
jecxz
addr16
dec
push
fcoms
mov
mov
in
in
jl
les
sarl
or
adc
dec
mov
in
xchg
jns
inc
mov
aas
pop
sub
cwtl
andl
jnp
xor
lods
mov
lods
mov
pop
sub
mov
pop
or
dec
inc
cmp
dec
addb
mov
add
push
stos
jns
dec
sbb
loope
add
stos
fsubrl
lret
cmp
sub
pop
jbe
pop
jbe
inc
nop
dec
data16
nop
adc
push
imul
jb
push
js
jb
pop
push
sub
xchg
cmp
sbb
pop
inc
or
jb
mov
movsl
aam
push
or
fisttpll
pop
add
sbb
in
push
lret
sti
push
or
out
or
adc
xchg
hlt
mov
cmpsl
scas
in
and
cmp
test
lods
cmp
mov
ljmp
xlat
or
cmp
inc
cli
les
xor
jl
fstps
lahf
pop
or
push
jno
dec
cmp
sbb
dec
insl
orl
mov
push
sbb
sbbb
mov
dec
add
jp
jo
daa
xchg
in
sub
dec
idivl
pop
stos
sub
arpl
pushf
fstpl
xor
push
add
push
pusha
inc
cmp
gs
mov
in
jae
dec
jmp
push
jnp
xchg
js
cmpsl
ljmp
popa
push
cwtl
dec
jnp
mov
mov
inc
or
cli
jle
xchg
xchg
scas
adc
inc
add
imul
push
fldl
imul
fistpl
jle
mov
rol
enter
int3
adc
fildl
or
adc
test
and
test
int
lea
std
mov
and
test
dec
inc
adc
or
cmp
icebp
jg
aas
mov
or
jne
xor
pushf
xchg
dec
ja
es
filds
sbb
cld
fists
aaa
ret
dec
fmul
pop
insb
pusha
adc
sahf
or
sti
out
or
in
push
or
push
dec
sub
stos
jae
add
inc
js
or
cmp
mov
push
dec
inc
bound
jnp
mov
jnp
imul
jmp
adc
cmp
sahf
aam
jp
jae
add
in
imul
or
out
mov
jnp
or
xor
in
mov
jl
push
jo
outsl
out
cwtl
test
pop
or
cwtl
leave
jg
sub
fs
sti
sbb
push
pop
bound
mov
call
mov
dec
or
addb
pop
pop
jne
js
scas
pushf
in
out
xor
daa
jp
imull
jne
and
pop
sub
jae
fwait
xchg
dec
aam
std
test
sub
xchg
add
dec
or
sub
add
ja
inc
pop
pop
and
cmp
bound
mov
sub
lahf
scas
push
push
in
jae
and
movsb
aad
rcrb
and
xchg
gs
sahf
xor
add
fmuls
dec
in
cs
dec
inc
call
sub
sub
jmp
sbb
das
mov
xor
jmp
clc
pop
pusha
test
sbb
jl
adc
dec
pop
addr16
jle
mov
cmp
and
dec
xchg
shlb
call
adc
and
les
and
je
inc
sub
pop
mov
test
push
push
das
push
sbb
sub
bound
out
js
xchg
mov
jns
push
and
inc
fildll
rcll
or
int
push
cli
adc
imul
push
push
cmp
pushf
rclb
cwtl
hlt
mov
in
mov
adc
jle
sti
in
lahf
jecxz
rcrb
shlb
pusha
fucomi
cmc
lea
lret
ja
lcall
iret
ffreep
jp
dec
inc
jge
push
xlat
subb
sbb
lea
pop
cltd
add
stos
jmp
lods
cmp
fstpt
cmp
les
or
or
push
enter
insl
jg,pt
jmp
int3
xor
sbb
imul
outsb
scas
mov
xor
pusha
loopne
aam
dec
cwtl
ja
shrl
mov
push
pop
dec
adc
loop
dec
cmp
stos
scas
call
insb
mov
repz
sbb
push
movsb
hlt
and
sbb
jnp
insb
cmpsb
in
jnp
cmp
xor
stos
push
jl
pop
cmpl
mov
je
dec
xor
mov
pop
cmp
cmp
add
shll
outsl
iret
xchg
ret
sbb
mov
sub
dec
inc
fstl
ss
ljmp
inc
cmp
rorb
jnp
pop
mov
andb
inc
daa
and
sbb
mov
dec
clc
pop
std
jb
dec
jae
out
fcomi
jb
add
and
pop
cmp
lret
in
ret
jmp
es
dec
xchg
mov
xlat
lock
inc
fst
arpl
adc
cmp
and
lcall
pop
mov
adcb
pop
push
add
pop
lret
pop
xchg
clc
pop
jne
int3
insl
fnstenv
in
das
mov
sub
cmp
hlt
mov
jbe
scas
aas
aaa
push
mov
cmp
sub
sti
std
rcrb
lds
int
jb
pop
adc
sub
movsb
sub
jbe
sbb
xor
pop
call
inc
idiv
jmp
sahf
cmp
mov
das
outsb
lock
fs
jo
in
test
pop
ja
xchg
in
jae
int3
sub
pop
int
fcom
cmp
inc
push
ss
aaa
inc
mov
push
stc
push
push
jo
xlat
push
mov
mov
jb
popa
rorb
mov
ret
mov
repnz
dec
push
out
xchg
sub
test
cmp
sub
addr16
and
mov
mov
mull
lds
sub
repz
das
pop
sub
imul
pop
mov
ret
xchg
movnti
pop
and
mov
arpl
ds
jno
daa
mov
push
popf
inc
sbb
nop
inc
dec
ja
xor
add
cmp
push
std
je
jns
jne
and
jle
jnp
or
push
scas
cmpsb
sarb
mov
cmp
outsb
fwait
cwtl
int
lods
add
mov
and
mov
lock
je
neg
bound
jg
pop
jno
jns
xchg
loop
pusha
test
fwait
cmpsb
push
mov
ja
sti
in
sbb
jns
test
mov
adc
mov
ja
cmp
add
lcall
cmp
aad
lret
mov
sbb
or
in
sbb
dec
mov
sbb
xchg
mov
push
mov
xchg
shr
cmp
mov
dec
push
pop
push
sub
pop
xchg
int
jae
aaa
mov
jmp
jl
mov
adc
add
jne
and
and
jg
pop
lahf
repnz
stos
fldcw
or
mov
cs
dec
pop
mov
daa
rclb
outsb
leave
jne
cld
cmp
jae
pop
push
mov
out
dec
add
mov
in
lret
dec
push
jge
sub
clc
pop
insl
mov
es
fwait
cmpl
bound
push
sbb
push
and
adc
sar
or
jae
rdtsc
pop
jne
mov
test
add
inc
and
fcom
inc
fsubp
je
idiv
aam
sbb
int3
cmp
mov
cmp
movsl
push
mov
addb
xor
xor
imul
or
pop
jns
fcmovne
xor
xor
aaa
bndldx
sarb
mov
xchg
dec
je
sbbl
movsl
ss
inc
test
or
pop
movsl
or
fisubs
andl
cmp
dec
cmp
test
js
int
lret
cli
pushf
pop
test
aaa
ja
fadd
push
fwait
and
or
insb
pop
mov
rcrb
mov
lock
mov
or
sub
bound
aaa
out
rcrl
jl
imul
cld
jg
lods
iret
leave
ja
pop
lods
sub
cmp
fsubrl
nop
scas
push
pop
pop
or
add
or
imul
enter
sbb
aam
pop
or
xor
xchg
ljmp
inc
movsl
xchg
push
cmp
jl
xlat
mov
int
dec
jl
inc
mull
ja
dec
aad
and
paddd
nop
adc
pushf
pop
cld
jge
mov
cmp
aad
push
cmovge
fs
jl
bound
mov
jnp
mov
ss
insb
insb
fwait
popa
loop
mulb
aam
adc
dec
repnz
cli
and
stos
cmp
into
add
pop
adc
push
sbb
push
inc
cmpxchg
in
push
popl
jp
popf
sub
fstl
adc
mov
or
test
pop
outsb
mov
jo
inc
and
inc
jne
sbb
xchg
or
fs
mov
out
leave
stos
inc
or
in
ss
jno
rep
lods
aam
sbb
sbb
mov
cmp
sbb
dec
cli
sub
mov
or
jle
hlt
xchg
pushf
mov
imul
adc
loopne
insl
push
cmp
lret
aas
in
mov
inc
pop
fcmovnb
xchg
lret
std
xchg
rclb
or
xchg
rorb
jno
lds
jmp
test
cmp
jae
jle
sub
add
mov
jp
add
int
pusha
nop
cmpsl
or
aad
in
pop
sub
mov
inc
mov
addl
cs
inc
push
test
stc
pop
and
fcomps
pop
bound
jns
pop
jns
xor
ficomps
mov
pop
repz
aad
pop
sbb
push
test
ret
inc
jg
inc
sbb
and
push
pop
adc
mov
ljmp
aam
data16
mov
adc
pop
scas
ret
mov
xor
mov
aaa
lods
sbb
pop
cltd
imul
testl
fnstsw
div
aas
jecxz
dec
mov
out
cmpsb
enter
mov
push
fwait
insl
inc
dec
xchg
xor
xor
xor
mov
xor
mov
and
out
sub
fucomip
test
jge
adc
sti
add
lods
gs
mov
stos
cs
and
xorl
popl
jo
lcall
pop
call
enter
cli
dec
js
and
jo
sub
and
xchg
lods
out
sbb
mov
push
push
in
mov
sub
les
jle
or
pop
out
idivb
cmpsl
cltd
outsl
jg
out
pop
repz
out
cmc
std
fadd
sub
add
nop
mulb
icebp
xlat
jp,pt
ds
dec
int3
xor
call
rclb
xchg
push
pop
out
cmpsl
stos
out
fmul
outsb
stc
and
lods
orb
add
and
add
fstpl
int3
cli
cmp
mov
inc
stos
stos
or
outsl
xchg
pop
bnd
rorl
mov
imul
push
inc
jo
cmpsl
lea
sbb
adc
lods
cmp
movsb
push
loope
aaa
and
getsec
sbb
pop
sti
pop
aaa
jl
mov
call
push
cmp
mov
pop
insl
and
adc
in
mov
popf
dec
or
add
dec
mov
add
stc
pushf
sbb
xor
pop
dec
jmp
pop
call
lret
push
in
iret
and
ret
aas
jbe
push
dec
sub
mov
push
gs
sbb
imul
mov
dec
jbe
push
jl
insb
dec
jg
push
pop
cs
dec
pop
out
sub
fidivrl
mov
outsb
jmp
incb
sub
mov
scas
into
fs
arpl
data16
mov
push
pop
pop
inc
ret
ds
mov
clc
sbbb
push
lds
testl
xlat
ss
inc
js
insl
insl
or
xchg
add
and
inc
pop
sub
mov
and
inc
mov
push
jp
xchg
les
shlb
pop
inc
js
sbb
push
adc
jbe
add
sti
sub
sbbb
fcom
or
stc
jp
fiadds
sub
xor
sahf
xchg
or
jp
sub
mov
mov
pushf
mov
andl
or
jnp
add
leave
mov
adc
dec
fcomps
popl
sub
mov
xor
adc
sahf
adc
xlat
sub
sarb
test
psubsw
dec
movsl
jo
icebp
xlat
cmpsl
xlat
inc
dec
insb
aam
fsubrl
mov
cmp
out
insb
clc
push
lea
gs
xchg
int3
mov
gs
mov
mov
xlat
jnp
bt
adc
mov
fmull
lock
ja
pop
mov
pop
outsl
mov
push
jecxz
scas
push
xor
insl
xor
fs
jbe
fstpt
mov
inc
dec
jle
clc
xor
in
stos
cmp
push
sub
mov
sarb
sbb
roll
movsb
cltd
lret
enter
xor
or
sbb
jl
dec
aad
cmc
stos
in
xor
pop
cld
xchg
gs
jne
dec
jle
shlb
call
mov
fs
fidivrs
shrb
inc
out
andb
gs
adc
cwtl
push
jo
mov
adc
inc
xlat
push
adc
pop
xchg
xchg
add
pop
aam
push
push
mov
sbb
mov
pop
sub
fists
xchg
std
xchg
sbb
jae
xchg
dec
cmp
dec
mov
das
mov
pop
sbbb
mov
xchg
sub
into
dec
sub
xor
mov
fistl
jl
xlat
inc
mov
adc
fwait
jg
jb
cmp
lock
sub
data16
sub
scas
movsl
fsubl
out
pop
mov
rcrl
lret
insb
cmpsl
cmp
addl
inc
rcll
jnp
pop
sub
push
aam
add
dec
sub
orb
jmp
out
test
loope
unpckhps
lahf
int
adc
push
in
mov
cmc
mov
out
js
fxch
cs
aam
jo
and
aaa
cwtl
push
add
mov
js
push
das
cmc
repnz
mov
pushf
push
push
sub
movsb
push
sbb
sub
pop
and
repz
ljmp
lods
sub
sub
sarl
push
shrl
xlat
jl
cmp
ja
sbb
push
sub
mov
inc
sub
dec
outsl
lock
xor
sub
jl
mov
cld
scas
out
push
or
push
inc
ds
fiadds
pop
scas
and
xor
sbb
mov
push
jmp
jmp
add
clc
mov
ljmp
int3
adc
mov
loope
bnd
ja
or
mov
pop
cmpl
pop
xor
mov
add
loope
jb
sub
mov
inc
mov
inc
adc
push
lods
pop
push
xor
and
adc
fsubp
aad
sbb
cmp
and
adc
in
sbb
or
mov
lods
dec
or
insb
mov
test
add
fs
sbb
dec
mov
xor
push
push
shrl
sbb
or
adc
adc
pushf
enter
stc
cmp
pop
int3
xor
arpl
movsb
dec
test
or
outsl
mov
sbb
push
or
jle
cmp
pop
push
jmp
dec
push
sub
dec
insl
pop
ds
fildl
mov
rcrb
push
imul
out
cld
add
sbb
push
cmc
test
inc
cmc
push
subl
adc
and
sbb
sarl
cmp
fwait
xchg
push
jbe
jp
pop
adc
mov
rolb
es
xchg
xchg
aaa
addr16
dec
add
scas
gs
or
pop
adc
add
je
adc
add
jne
xor
dec
cld
lods
pop
pop
stc
mov
pop
dec
pop
mov
popa
xchg
push
jns
mov
sarl
add
and
sti
push
int
mov
mov
daa
push
mov
nop
xor
lods
xor
adc
pmullw
aam
ja
jge
or
add
sub
mov
and
outsl
popf
rclb
stos
das
mov
ljmp
test
andb
push
mov
pop
sbb
push
sub
pop
lcall
adc
and
push
jge
ljmp
repnz
pusha
scas
lods
xchg
cmp
popa
pop
daa
and
mov
cld
push
push
or
or
and
lret
pop
xor
push
sub
jp
push
outsl
pusha
pop
fimuls
adc
push
cmp
testl
mov
repz
test
cli
add
shrl
in
movb
dec
es
push
inc
adc
adc
iret
push
mov
mov
xor
sbb
mov
ret
jnp
adc
jo
and
lock
adc
push
lods
xchg
inc
push
outsw
sub
jp
and
mov
pushl
cmp
das
loop
mov
push
mov
fcmovnbe
xchg
int
ljmp
fwait
push
pop
idiv
sbb
cs
stc
sub
or
mov
mov
xchg
out
pop
or
outsb
je
dec
sub
add
pop
std
mov
xor
and
fcoms
sub
jne
pop
mov
ret
inc
and
scas
inc
or
mov
js
jno
cld
xchg
or
push
add
jns
lods
pop
push
cmc
xchg
in
adc
cmp
adc
mov
pop
mov
popf
mov
mov
pop
into
or
movsb
xor
and
push
cmp
xlat
inc
fwait
jmp
push
and
dec
stos
jle
sub
int3
pop
dec
lds
dec
call
push
adc
bound
mov
repz
fwait
cwtl
adc
stos
push
mov
pop
pop
movsl
and
cld
and
add
jb
shl
lds
movsl
shll
xchg
fldcw
ss
aas
fiadds
loopne
mov
mov
sti
mov
mov
dec
dec
aam
sub
mov
mov
inc
jne
dec
push
imul
in
pushf
lods
out
bound
sbb
sub
jl
gs
push
aaa
lods
add
dec
pop
inc
mov
fdivrp
or
clc
sbb
jnp
or
ds
mov
pushf
int3
mov
sarb
mov
test
cmpsb
adc
jnp
wrmsr
cmp
pop
sub
sub
add
js
mov
sub
sbb
add
adc
mov
cmp
lahf
lahf
pop
push
lods
cmp
and
jmp
ja
mov
or
jmp
cmp
pcmpgtd
add
pop
aaa
mov
movsl
sbb
sarl
jecxz
jno
ljmp
outsb
ret
push
loop
fs
ds
aas
cmp
cmpsl
add
aam
icebp
leave
out
pusha
xchg
andl
adc
push
push
jge
push
lcall
aas
adc
jae
das
in
push
cmp
cmp
nop
push
mov
pop
mov
fwait
cli
dec
and
xchg
stos
jae
cs
lcall
jle
add
sbb
or
loopne
mov
les
shl
ja
imul
dec
outsl
je
xchg
fs
push
cld
lret
or
jae
cmp
jo
ds
in
imul
mov
add
cmc
bound
sbb
jp
in
mov
int3
mov
pop
inc
sahf
mov
jl
mov
int
fisttpl
es
push
sub
fidivrl
mov
push
movsb
mov
cltd
mov
cmp
mov
inc
js
aad
test
inc
imul
inc
lret
adc
pop
fnstsw
test
imul
dec
test
dec
test
fisttpll
ds
and
mov
aaa
inc
addr16
andl
add
loope
pushf
arpl
stc
lods
and
mov
enter
mov
and
call
pop
int
sub
mov
lods
movb
lods
add
inc
lods
sbb
mov
push
lea
dec
out
iret
leave
add
es
cmp
add
outsb
test
fdivrl
sbb
mov
ja
push
out
ljmp
pop
aam
cli
xor
pop
mov
es
daa
and
aam
fdiv
sub
jb
mov
fs
pop
mov
fwait
mov
outsb
sbb
int
call
dec
inc
sub
lcall
mov
inc
popa
sub
jge
xor
movsl
push
inc
in
out
outsl
inc
lret
arpl
or
mov
or
in
sti
pop
fs
and
add
cld
xchg
jmp
mov
fdiv
push
ja
lock
lret
stos
cld
sarl
and
push
xor
lods
sub
cmp
sbb
add
cmc
in
sar
nop
jl
pop
lahf
ret
and
out
mov
sahf
test
sbb
stc
fisubs
ficompl
and
in
es
jmp
and
pop
jle
jbe
adc
jecxz
jle
add
push
gs
bound
jl
popf
fwait
loop
jb
scas
imul
shl
rep
mov
loopne
pop
js
xchg
addr16
mov
sti
out
popa
cwtl
jns
imul
push
ret
mov
aad
jo
int
sub
xor
leave
aas
cli
mov
insb
cmp
sub
or
dec
inc
pushl
push
push
jb
ljmp
aam
cmp
push
and
inc
js
mov
gs
aam
insb
adc
push
nop
jge
enter
adc
dec
jae
dec
mov
cmpb
sbb
or
lcall
cmpsb
call
mov
outsb
loopne
jne
insl
ljmp
ret
aas
cmpsl
scas
pop
xor
out
pop
mov
dec
stos
push
addr16
mov
xor
mov
adc
ja
popf
dec
jle
pop
das
jg
dec
ret
mov
xor
adc
xor
inc
mov
test
test
les
mov
or
shll
sub
add
das
jl
xor
sbb
and
inc
gs
dec
div
push
cmp
movsb
mov
ja
jge
fidivrs
inc
out
sbb
iret
inc
cmp
leave
sub
mov
jl
xchg
sbb
jno
push
mov
ljmp
icebp
sbb
dec
sub
mov
aam
into
repz
mov
jle
dec
lret
dec
leave
jo
and
dec
inc
gs
jnp
pop
sub
lds
sti
cltd
clc
pop
jle
cmp
push
pusha
call
lods
stos
rol
aad
dec
add
xchg
inc
nop
cmp
pop
cmp
fists
pop
or
jo
fcomip
dec
pop
fs
jno
aam
dec
mov
xchg
inc
jae
test
negb
xor
xor
adc
mov
roll
ja
ja
sbb
push
pop
rcll
pop
and
adc
addr16
sub
ds
pop
pushf
frstor
fnstcw
insl
push
adc
insb
push
pop
mov
cmp
adc
pop
push
mov
ds
mull
je
dec
lahf
cmpsb
push
dec
movsl
ret
mov
jmp
pop
lret
scas
jge
bound
mov
adc
mov
jbe
add
iret
push
movsl
pop
xchg
pop
repnz
xchg
jmp
lcall
add
pusha
jle
adc
jb
insl
dec
mov
push
ss
lcall
jg
pop
cwtl
fdivrl
xchg
sbb
cmpsl
add
mov
jle
jbe
orb
lds
in
sbb
cmpsb
push
in
sti
cmpsb
dec
sbb
adc
mov
add
repnz
jo
test
imul
ret
movsl
sar
jl
mov
sub
arpl
testl
inc
dec
xchg
push
dec
and
scas
ss
mov
push
repz
aad
jl
push
push
xor
push
xchg
sbb
push
sub
push
inc
in
mov
add
std
lret
push
rcrl
outsl
jl
jge
pop
imul
pmaddwd
mov
fwait
xor
and
mov
dec
es
push
fidivrl
lock
lods
jns
enter
adc
add
push
xor
add
cwtl
inc
xor
jns
lahf
sub
out
jae
pop
fldt
inc
js
lds
cmp
pop
push
xor
or
cmp
adc
inc
mov
add
jg
xchg
mov
adc
mov
ret
testb
ficompl
clc
das
jg
xchg
push
test
loope
addr16
xor
ds
jo
and
js
movsb
and
jg
dec
push
fwait
sbb
mov
or
insl
push
das
cmpb
dec
ret
jp
push
xchg
lods
and
pop
not
pop
popa
lret
dec
jno
insb
mov
je
stos
insb
cltd
loope
mov
int
out
adc
dec
push
push
inc
mov
adc
int3
es
in
stc
insl
lret
sub
jo
jp
jo
out
pop
and
push
jns
jnp
sahf
lret
sub
xchg
in
aam
aam
int3
jae
int3
inc
cld
jecxz
sub
stos
dec
fistpl
fidivs
clc
pop
push
fisubs
or
pop
test
outsl
ret
xlat
jb
fcoms
adc
call
inc
rcrb
arpl
ljmp
add
fcompl
call
adc
inc
push
rcr
fsubr
mov
xor
cmpsb
adc
xlat
xor
loop
fildll
mov
pop
insl
jnp
imul
push
inc
jo
mov
cmpsb
jno
xchg
lods
xchg
adc
push
je
out
shrb
xchg
mov
loope
aad
mov
xor
cmc
int3
dec
push
mov
jne
cmpl
add
pop
jg
sbb
fstpt
jo
mov
ss
mov
jb
jbe
sub
les
mov
shlb
rclb
dec
sti
or
lods
and
and
test
sub
xchg
frstor
inc
repz
adc
cmp
rorb
aaa
push
dec
das
pop
push
les
jg
add
and
push
inc
and
ss
loopne
outsb
fisubs
push
mov
cmpsb
dec
ffreep
pop
jno
sub
jne
mov
xor
data16
cmp
cmp
leave
test
pop
mov
fildll
mov
cmp
adc
rorb
pop
mov
les
rclb
xor
mov
lret
cmc
pop
mov
mov
lds
pop
imul
mov
test
push
sahf
jbe
cli
cmpsb
testb
push
aam
mov
movsb
dec
mov
test
dec
add
or
outsl
popa
and
gs
or
pop
lahf
mov
xor
into
orb
pushf
test
sub
movsb
add
mov
jae
movsb
mov
test
out
int
inc
mov
loopne
es
or
je
mov
insl
jmp
es
cmp
jne,pn
add
dec
pushw
cld
mov
aas
or
jne
xchg
aaa
pop
in
cmp
pop
push
mov
scas
cmc
jne
out
hlt
sbb
or
dec
pop
jne
hlt
mov
aaa
mov
outsb
jl
les
mov
pop
test
test
les
fisubl
or
mov
dec
add
sub
add
pop
adc
aam
adc
vmovntdq
lods
mov
sub
daa
aaa
sub
sbb
addr16
setle
and
dec
jl
mov
lahf
sbbl
adc
stc
ret
add
mov
ret
jno
int
mov
loope
or
mov
mov
xchg
inc
sbb
jns
pusha
cmp
call
pop
mulb
push
mov
or
mov
jb
xor
jnp
jecxz
jae
jp
sub
or
imul
dec
hlt
xor
ljmp
sbb
rorl
out
scas
popa
test
mov
mov
or
pop
bnd
imul
ret
mov
inc
rcrb
add
je
arpl
andb
incb
sbb
dec
inc
idivl
pop
xor
lahf
jg
ljmp
mov
ffree
daa
mov
jb
mov
sub
call
jge
push
mov
push
aam
jnp
shl
pop
jo
and
sub
movsb
repnz
addr16
jecxz
sbb
dec
mov
popa
pop
jg
cld
push
dec
jle
xor
jnp
stc
ljmp
mov
popa
out
ret
push
ljmp
sub
popl
jp
adc
mov
or
push
push
loope
inc
push
fmul
sub
fs
cmp
popf
xor
clc
in
push
xchg
cld
aam
rorb
lret
add
adcb
bound
rorb
xchg
scas
mov
sbb
loop
or
inc
lods
xchg
shld
insl
push
add
fldl
and
mov
stc
sbb
in
fiaddl
mov
fwait
cvtps2pi
sbb
mov
hlt
pop
push
cmp
inc
jmp
mov
sbb
and
test
and
mov
popa
mov
test
gs
push
popa
push
popa
into
mull
or
cli
bound
imul
push
sub
mov
or
cmpl
xchg
movsl
cmp
push
inc
jmp
movsb
aam
mov
push
push
clc
sbb
test
adc
pop
in
popf
ljmp
mov
das
inc
mov
dec
fisttpll
ret
push
xorl
out
hlt
jo
mov
aam
jl
push
aas
fidivl
mov
cltd
int
aaa
es
push
cmpsl
adc
mov
jns
mov
ret
daa
add
in
pop
stos
dec
and
pop
mov
mov
outsb
shrb
pminub
mov
icebp
cmp
aam
push
data16
push
lds
popa
and
push
mov
or
xor
sbb
int3
jnp
adc
sahf
pop
fsts
data16
hlt
sub
sub
fists
popf
add
js
imul
inc
out
inc
cwtl
adc
sub
mov
rcll
loope
cmp
lea
ret
add
mov
mov
lret
imulb
mov
movsl
xchg
and
push
pop
sub
lds
loope
mov
push
adc
mov
rcrl
push
add
jae
in
jnp
dec
inc
js
lret
inc
pop
or
push
shll
add
inc
movsl
test
sbb
lea
cld
mov
adc
rcrb
pop
jge
push
js
or
or
sub
out
sbb
xchg
add
dec
imul
icebp
inc
lcall
push
add
scas
and
add
aam
aaa
jg
dec
std
xor
mov
dec
cmp
sarb
ds
jo
js
mov
das
movsb
mov
dec
push
sbb
ss
xor
dec
cmp
sbb
adc
fscale
movb
push
cld
pop
imul
adc
pop
or
ds
jg
push
dec
cmpsb
shrl
loop
dec
scas
and
jne
pushf
ds
xor
xor
incl
cmp
inc
gs
pop
call
sti
sbb
push
mov
mov
fs
sub
pop
cs
cmpsl
jns
push
xchg
jle
roll
mov
into
shl
dec
stc
cmp
dec
subb
mov
push
out
mov
in
into
jnp
imul
jg
push
cli
les
push
nop
repz
push
imul
adc
pop
or
pop
jmp
cmp
and
ja
out
and
pop
sub
fisttpl
push
pusha
test
mov
push
scas
mov
cmp
inc
push
or
push
pop
fistps
jnp
sub
mov
loopne
loope
pop
inc
ficompl
xchg
xor
sbb
xor
push
mov
push
jge
mov
loopne
mov
and
sub
aam
addr16
add
push
xor
or
push
int3
pop
fwait
jge
aad
fdivl
xchg
sbb
adc
idivb
shr
ret
jmp
rclb
outsb
adc
mov
int3
jne
xor
jns
or
add
dec
sub
repnz
cmp
jp
jp
mov
pop
jnp
pushf
imul
sbb
pop
pop
ja
xrelease
test
sbb
shrl
push
fcmove
stos
mov
push
xchg
adc
add
cmc
divl
pop
cmp
push
nop
js
mov
jnp
shl
jns
pop
clc
int3
ret
mov
repz
xchg
jp
cmpsb
sub
in
es
adc
jb
and
pop
fisttps
into
daa
or
adc
shll
not
jle
cmc
sbb
push
mov
mov
clc
dec
aam
les
rcrl
dec
xchg
dec
sub
mov
jl
arpl
add
add
enter
and
lea
sbb
jge
cs
push
sbb
mull
or
pop
outsl
popa
sub
imul
mov
pop
cmpsl
insb
add
rclb
mov
das
and
dec
xchg
int3
xchg
pop
jl
aad
aam
leave
cmp
jo
mov
pop
mov
mov
mov
rcrl
mov
jnp
loope
and
or
mov
cmp
adc
pusha
dec
aam
mov
movsl
cmp
xlat
add
rcrl
xor
xchg
dec
pop
or
sub
dec
mov
xor
call
or
sbb
sahf
push
cmpsb
pop
xchg
mov
or
jb
xchg
insb
xor
insl
mov
adc
xchg
jge
lods
stos
or
lahf
fcmovbe
sub
clc
sub
fs
inc
lock
pop
mov
mov
pop
inc
bnd
mov
inc
cmpsl
cmp
inc
cmp
adc
aaa
repz
int3
mull
and
sub
jns
push
aaa
or
movsl
inc
xchg
jl
or
mov
hlt
aaa
mov
push
push
push
je
push
xor
mov
adc
inc
dec
xor
jns
mov
daa
push
repz
movsl
lret
mov
aaa
lret
nop
cmp
dec
dec
faddl
jge
nop
dec
cmp
push
adc
xchg
pushf
adc
adc
psubsb
push
cmc
mov
and
lcall
int3
aaa
jp
and
sbb
orb
cmp
bound
xor
jnp
rol
pusha
fsubrs
dec
and
mov
ret
xchg
jns
dec
popa
inc
aam
into
and
fs
daa
and
or
xor
xlat
jge
sub
fs
ljmp
push
lods
mov
aaa
or
aam
ljmp
addr16
stc
push
das
sbb
and
and
faddl
push
fisttpll
bound
outsl
ja
lahf
or
xlat
xor
jb
jl
je
jne
push
leave
push
cmpsl
rclb
xor
jecxz
sbb
dec
pop
dec
jne
enter
fsubs
inc
and
add
inc
push
and
mov
dec
lods
aas
xor
imul
aad
xchg
sbb
mov
imul
push
sbb
cli
int
xchg
inc
imul
pop
mov
in
leave
cwtl
push
and
ror
fsubl
loope
lea
inc
mov
enter
popf
dec
fisubrl
scas
mov
rcll
ficoml
mov
pop
cmp
cmp
sbb
cmp
inc
out
push
jae
dec
mov
movsb
fnstcw
arpl
daa
hlt
fs
std
push
fldl
mov
push
out
adc
hlt
dec
sub
fnsave
cmpsl
mov
loopne
inc
or
aam
in
cmpsl
pop
divl
push
push
adc
jno
arpl
jae
and
xchg
push
push
xor
and
or
lods
sahf
xor
cmp
sub
ds
sub
or
cmp
fimuls
test
fs
push
fcoml
or
call
les
es
sarb
or
gs
sbb
outsl
mov
xor
stc
or
sub
pop
pop
pop
pop
mov
stos
cltd
dec
outsb
mov
push
shlb
xchg
mov
cmp
push
jno
hlt
sub
jns
rolb
aaa
mov
sbb
mov
pop
test
ss
mov
lods
gs
iretw
pop
push
mov
popa
fsubrs
xchg
mov
jp
out
loop
mov
je
out
add
sub
dec
ficoml
or
sbb
andl
jl
lods
xor
stos
pop
mov
sub
pop
insl
dec
loope
int
shll
popa
jle
pop
cli
inc
fldcw
ss
inc
pop
xchg
mov
inc
sbb
or
pop
sbb
cmp
cmc
mov
ret
imul
int3
pop
push
ja
ret
clc
sbb
je
addb
xchg
push
test
mov
adc
mov
push
adc
add
pop
dec
cltd
or
fistl
das
cmp
sbb
stc
adc
test
mov
fiaddl
movsl
lock
aaa
pop
jns
lcall
pop
cmp
out
xor
mov
mov
inc
xchg
setbe
rcrb
outsl
int
insb
insb
outsb
out
pop
lods
insl
ss
dec
jle
movsb
out
push
sub
pop
add
insl
cmp
ret
push
test
stos
fcmovbe
jbe
add
mulb
sbb
or
ja
push
sahf
jnp
xor
sbb
mov
aam
inc
mov
xor
mov
inc
rcr
pop
fldcw
mov
inc
mov
dec
rorl
roll
sbb
or
jns
jae
sarb
js
jb
test
xor
out
pop
xchg
sbb
add
scas
mov
stos
sti
sub
cltd
pop
addr16
push
mov
and
sbb
decl
and
lods
jg
sbb
in
lods
adc
pop
dec
and
data16
jg
pusha
add
lahf
movsl
je
cmp
addr16
pop
inc
push
mov
pop
sbb
test
cli
shl
push
mov
push
fcoml
adc
nop
hlt
icebp
pop
lcall
nop
in
push
pop
dec
jae
add
fcmovbe
and
daa
push
inc
xor
pop
dec
scas
xor
jp
jne
roll
dec
daa
cmp
int3
sub
dec
sub
push
dec
cmpsl
pop
dec
ja
push
sub
leave
push
addr16
cmp
pop
inc
rcrl
cmpsb
cli
dec
jo
jns
negb
call
jge
imul
mov
repz
addr16
iret
fnstsw
out
push
and
jge
xchg
fistpl
mov
cmc
data16
sub
jno
frstor
pop
hlt
mov
and
xor
sbb
mov
cmp
pop
decl
repz
mov
clc
lret
ficompl
add
aas
das
in
adc
mull
or
repnz
scas
jb
repnz
dec
pop
jae
int3
mov
in
popf
push
inc
pushl
test
dec
cmp
xor
lcall
sub
mov
fimuls
mov
frstor
push
push
jecxz
adc
jno
cmp
pop
push
sub
mov
inc
scas
movsl
cmp
pusha
in
js
jle
xor
xor
cmp
aam
movsb
dec
aaa
xchg
add
bound
adc
scas
and
jno
add
sub
scas
les
dec
pushf
sub
ficomps
mov
push
sahf
les
mov
and
dec
cli
das
inc
mov
pop
push
data16
adc
add
or
dec
imulb
fistl
adc
push
fidivs
dec
sahf
negb
mov
js
inc
fwait
add
fldl
hlt
aad
ja
jno
lods
in
sbb
cmp
imul
xchg
adcb
clc
xchg
sub
es
movsl
sbb
pop
jp
sub
les
movb
sub
nop
mov
in
cmc
stos
add
shlb
scas
jg
andb
out
jmp
cmp
dec
fimull
insl
lock
aam
push
add
subb
dec
mov
push
outsb
lods
insl
popf
lds
push
push
imul
fwait
cmp
inc
and
and
cmp
fiadds
add
cmpsb
shrb
test
ltr
cwtl
fucomi
insb
sti
fsubs
jg
push
xlat
cmc
adc
decb
mov
xchg
push
pop
pushf
fildll
ja
dec
cmpsl
sub
sub
imul
jae
mov
sub
test
inc
push
cld
je
cmp
insb
dec
pop
clc
dec
cli
and
mov
cmp
shrl
add
inc
cwtl
jns
sub
xor
out
pop
jne
fwait
sar
out
stos
imul
mov
scas
shrl
push
cmp
xor
mov
pop
mov
xchg
sarl
fnstsw
xor
jp
mov
fwait
lds
and
dec
or
mov
jbe
lods
inc
xor
fnstcw
in
sahf
inc
lock
setb
jae
cmp
neg
aad
fisubrs
int
stos
pop
fadds
sbb
add
pop
xor
mov
aam
cli
add
pop
repz
mov
scas
mov
or
push
dec
cmp
inc
adc
dec
in
jo
push
or
sub
jns
mov
xlat
test
sub
shll
or
and
sub
push
push
inc
mov
jo
into
ja
pop
fdivrs
jge
push
popa
push
out
inc
push
je
nop
jmp
aam
jo
out
scas
rep
movsl
push
or
jo
add
js
mov
xor
cld
aad
iret
aam
pop
adc
mov
cmp
adc
fisubl
call
mov
fcmove
test
mov
and
addb
push
rcl
cltd
imul
call
jle
jno
loope
aad
jno
imul
xlat
jg
dec
icebp
out
sub
cmp
xor
push
sub
fwait
and
mov
ror
lock
pop
dec
jg
or
sbb
add
xchg
outsb
icebp
cmp
inc
lods
xor
cltd
sbb
mov
jg
dec
add
rol
ja
dec
or
mov
mov
dec
lods
add
jnp
dec
mov
push
in
xchg
inc
nop
adc
mov
jle
sub
jge
push
mov
or
lods
mov
and
mov
popf
add
mov
imul
data16
adc
and
lahf
aam
push
mov
cwtl
gs
push
pop
js
popa
cmp
xchg
fcmovb
dec
mov
nop
jo
xchg
testb
jecxz
shlb
gs
sub
mov
jg
fwait
loop
leave
pop
mov
rcrl
cmp
dec
cmp
fisubs
enter
les
xchg
cli
fstpl
int3
addr16
dec
mov
xchg
pop
or
push
jbe
mov
and
inc
or
adc
int
ds
cld
jnp
push
add
and
push
pop
pop
das
sbb
pop
pop
repnz
data16
mov
je
mov
out
imul
cmp
jo
out
add
pushf
outsb
mov
dec
push
cmp
mov
mov
aad
pusha
pop
sbb
dec
push
outsl
das
mov
js
push
xchg
inc
and
adc
jno
xor
dec
cmpsb
mov
xor
sub
or
mov
push
imul
jge
pop
push
ljmp
mov
das
jbe
dec
lahf
pop
pop
push
out
pop
dec
dec
sub
sub
cwtl
sbb
adc
popa
sar
aam
sub
pop
xchg
leave
cld
in
jnp
push
cmp
pop
shll
adc
fnstcw
cld
gs
adc
or
xchg
pop
sub
adc
js
or
sbb
sahf
pop
into
insl
inc
andb
cmp
pop
mov
jle
ret
scas
jle
enter
aam
xor
adc
repz
pop
das
lods
dec
push
stos
push
mov
inc
or
xor
subl
fs
sub
xchg
push
mov
pop
ja
push
cmp
lds
add
sub
aaa
inc
jl
repz
ret
sub
fidivrs
inc
insl
adc
add
dec
sbb
int3
cltd
psrad
ss
fisubrl
pop
jp
pop
mov
sbb
arpl
adc
add
es
jg
or
repnz
repz
xchg
dec
addl
cmp
jge
adc
fbstp
add
xlat
dec
dec
and
jl
outsl
aaa
or
jg
lock
xchg
dec
test
dec
jae
inc
insb
lock
es
dec
sbb
cmp
shlb
or
dec
or
pop
data16
dec
or
sbb
jns
insb
pop
sahf
leave
push
xchg
cwtl
dec
jecxz
cmpl
push
imul
cltd
lahf
push
aaa
pop
adc
imul
dec
std
cmp
sub
pop
ret
or
jbe
inc
sub
stos
cmp
xchg
lock
in
ffree
add
cmp
das
fs
cmc
lcall
or
inc
pop
addb
cmp
icebp
adc
imul
inc
insl
add
movl
pusha
cmp
ss
lods
add
cmp
popf
sub
lea
test
adc
push
xor
push
pusha
add
sub
pop
push
push
icebp
xor
test
shlb
adc
or
das
ss
push
or
idivl
adc
xchg
mov
inc
add
pushf
cltd
cmp
push
bound
lcall
dec
inc
sbb
cmpsl
icebp
inc
jl
adc
stos
nop
mov
ret
addb
cmp
out
das
xchg
bound
pusha
fistl
fs
ljmp
dec
xor
pusha
xor
xchg
sub
dec
mov
adc
dec
pop
jmp
cli
ds
jl
pop
fcompl
loope
mov
ret
mov
rsqrtps
xor
sbb
cli
xor
push
into
rolb
fiaddl
push
js
insb
xor
cmp
stos
bound
adc
inc
out
or
movsl
adc
pop
and
jecxz
xchg
fadd
cmp
iret
stos
outsb
cwtl
sbb
sub
push
int3
negl
push
adc
push
cmpb
loop
movsb
movsb
jle
jecxz
fbld
mov
in
and
push
pusha
mov
mov
pop
jecxz
sbb
ds
dec
loop
stos
imul
dec
pop
jb
xchg
test
and
movsb
sti
ret
or
mov
mov
sbb
ret
jnp
xor
and
loope
xchg
std
mov
pop
push
sub
adc
adc
leave
sbb
mov
aas
pop
pushf
mov
xchg
mov
rcrb
test
mov
pop
push
cwtl
push
jo
cli
pop
mov
jge
cmp
rcrb
pop
and
pop
pop
pop
dec
rorl
push
lret
je
mov
inc
mov
and
jnp
pandn
lahf
mov
ljmp
fldt
lods
adc
cmp
lea
adc
mov
sbb
pushf
or
ret
lret
into
pop
hlt
mov
sub
mov
add
inc
jno
cmp
inc
cli
inc
out
sbb
xor
insl
in
mov
push
mov
test
push
dec
daa
jno
cmp
mov
xchg
xor
filds
dec
aad
cmp
pop
mov
or
clc
lods
sarb
dec
fs
or
xlat
sub
and
arpl
push
xor
es
lods
fidivrs
push
add
dec
loope
inc
das
fs
xor
sti
xchg
mov
jl
das
lret
push
xchg
js
cmovo
add
or
or
insb
mov
sbb
push
inc
mov
add
out
jl
jge
fs
lds
xchg
popa
movsl
mov
xorl
mov
sbb
in
ja
adc
sbb
xor
xchg
sbb
mov
je
xorl
jmp
sub
add
sbb
inc
addr16
pusha
outsl
es
lods
pop
mov
push
cs
mov
add
sbb
jge
test
dec
ficompl
int3
movsl
mov
xchg
or
adc
pop
adc
push
fwait
data16
pop
jno
test
insb
add
add
not
enter
mov
dec
xor
pop
push
mov
cwtl
dec
sub
cwtl
push
subl
testb
dec
cs
jecxz
hlt
fbld
pop
jecxz
pop
lods
push
or
aam
inc
imul
jmp
mov
aam
mov
mov
xor
int3
sbb
jl
dec
inc
sub
xor
or
xorl
jns
adc
ss
dec
imul
sub
call
xlat
cwtl
hlt
out
call
fcompp
add
pop
mov
push
dec
or
cmp
cmp
cld
push
das
push
cmp
pop
cmp
imul
mov
lret
add
movsb
je
lcall
push
popa
in
shll
rol
rcrl
or
sub
xor
push
pop
sbb
aas
dec
into
insl
aad
pop
mov
in
cwtl
sbb
mov
inc
js
mov
rcll
or
fcomps
push
jp
mov
xor
xor
insb
pushl
xchg
mov
repz
stc
jle
aad
push
je
mov
jae
xchg
push
rorb
addr16
mov
popa
jecxz
data16
inc
shr
sbb
sbb
ljmp
xchg
and
sub
xor
icebp
imul
dec
sti
sub
jl
jb
inc
lods
and
das
subl
dec
shrb
jl
jb
dec
out
lea
adc
push
pop
adc
lock
pop
inc
sti
cmp
sub
fdivrs
xchg
jns
arpl
sbb
rolb
jnp
punpcklbw
and
pop
fwait
push
or
les
rclb
jno
push
insb
sbb
mov
pop
loope
push
sahf
hlt
pushf
icebp
jns
dec
xchg
rcll
add
jge
mov
inc
cli
pop
adc
cmp
mov
aam
push
adcl
jl
aaa
push
divb
lods
aaa
push
ficomps
and
mov
push
std
xchg
cmpsb
test
cmp
jb
sbb
sti
fidivrl
add
adc
leave
in
xchg
jle
je
movsb
xlat
sbb
stc
mov
jecxz
test
mov
sub
push
es
movsb
std
pusha
inc
lret
push
insb
push
rol
and
sub
cmc
push
add
or
outsl
sbb
push
scas
fldl
movsb
js
add
mov
lret
data16
xor
sbb
or
or
shll
add
into
aam
sub
ja
xor
xchg
sbb
xor
cld
fsubrs
mov
pop
push
or
test
xchg
or
xlat
cmpl
std
and
ljmp
and
dec
cmp
popf
push
push
cmpsl
loopne
push
push
inc
sbb
sub
push
ret
xor
out
pop
dec
scas
ds
andb
dec
out
shll
daa
clc
and
jnp
cmp
dec
mov
ret
push
mov
sbb
xor
push
pop
and
add
jmp
cmp
mov
mov
leave
or
pop
int3
adc
mov
dec
mov
push
fisttpll
inc
lock
mov
or
or
sbb
jl
cmpsl
or
outsb
sahf
testl
push
xor
mov
mov
mov
das
mov
cmp
sub
lret
lods
fistpll
jnp
test
mov
sub
out
int
pop
add
push
push
aam
test
inc
call
push
mov
add
iret
fisubs
cli
imul
loop
mov
enter
dec
in
mov
push
mov
sti
cmp
popf
lds
cli
aam
movsl
mov
test
lret
and
inc
pop
js
lret
sub
lds
or
pop
test
pop
and
std
mov
hlt
and
fsubp
inc
test
pusha
mov
xchg
rclb
xchg
popf
pop
inc
shrb
cmp
arpl
cs
pop
lret
pop
loopne
and
dec
pusha
rcll
sub
rorb
xlat
insl
sub
stos
daa
cmp
out
cmp
cmp
je
ljmp
mov
in
pop
dec
fbstp
push
inc
gs
mov
pop
or
push
es
pushf
inc
ljmp
inc
push
movsl
loopne
jnp
sti
ds
das
push
add
inc
aad
dec
hlt
cmpsb
or
dec
aas
push
setne
dec
mov
popa
mov
push
ret
pop
js
mov
jno
xor
aad
jg
pop
lcall
jmp
pop
sarb
jmp
inc
test
lds
xor
inc
inc
sti
jp
sarb
xor
imul
pusha
jbe
inc
pop
and
scas
lds
mov
and
pop
call
idivb
loop
aaa
add
les
xor
push
lcall
in
imul
mov
outsb
xor
dec
cwtl
lods
and
and
fs
jns
xchg
in
xchg
jns
roll
push
andb
sub
push
ficomps
enter
gs
lds
sbb
xchg
push
pop
xor
cmp
add
sub
xor
and
subl
push
cmp
aad
in
or
fs
mov
cli
dec
jmp
stos
cmp
negb
mov
push
rcl
lds
sti
outsl
jns
add
in
das
xchg
push
jge
pop
jne
sbb
mov
pop
inc
out
aad
cmp
loopne
sbb
movsb
sbb
mov
push
outsb
lcall
inc
xor
out
mov
sbb
scas
mov
rcrl
cmp
hlt
roll
xor
fldl2t
sub
mov
sub
daa
jns
jo
gs
int3
cmp
insl
test
push
jge
cmc
or
push
push
xor
xchg
or
fisubs
mov
test
mov
pop
jae
aas
mov
and
adc
fdivrs
jnp
push
call
inc
mov
lcall
ljmp
and
jb
rcll
inc
testl
adc
outsl
pop
jnp
pushw
je
adc
or
not
xchg
sub
fistpll
out
pop
inc
ret
jp
pop
adc
add
insl
into
inc
jbe
jl
jle
aas
adc
ljmp
cmp
insl
or
jmp
inc
jl
xchg
test
sub
insb
dec
enter
push
sub
rolb
cmp
inc
inc
cmp
and
xchg
xor
movsl
dec
sub
lods
in
add
cmp
and
mov
cwtl
shlb
inc
lock
or
mov
imul
dec
aaa
push
push
pusha
das
dec
cwtd
inc
dec
daa
sub
rorb
add
sub
movsb
in
xchg
mov
pop
jno
and
outsl
or
pop
xor
imul
add
push
lds
mov
aam
push
leave
cmovs
pop
mov
jg
adc
cmp
pop
or
loope
add
lmsw
mov
push
xchg
jg
movsb
mov
sahf
jle
les
popa
js
das
jp
xchg
jne
xor
mov
inc
in
test
cmp
inc
nop
in
xor
enter
scas
inc
fwait
lds
outsb
sarl
sbb
cmp
test
cmp
sub
pusha
repz
jg
jo
insl
lea
scas
jae
repnz
xor
lds
jo
int
push
out
pop
es
aaa
mov
add
stc
xorl
xchg
loopne
jle
data16
and
imul
les
aaa
and
xchg
jne
imull
bound
jns
push
icebp
je
ss
out
inc
inc
dec
or
inc
rcrl
jnp
in
push
cltd
addb
push
arpl
jg
loope
mulb
mov
pop
mov
sahf
mov
call
mov
xlat
jle
pop
adc
mov
sub
shlb
sbb
loopne
pop
add
cmp
fdiv
cmp
scas
imul
or
je
adc
push
push
jg
cmp
femms
mov
dec
mov
jno
and
imul
xor
fwait
pop
int3
aaa
sarb
pop
xchg
mov
xchg
lods
cwtl
sub
adc
sub
mov
lret
or
pop
adc
in
xorb
inc
jae
add
jbe
or
pop
adc
jb
and
outsb
xor
cld
sub
in
and
imul
and
mov
mov
push
xor
bound
pushf
jl
mov
and
enter
aad
push
mov
gs
mov
imul
mov
sbb
dec
mov
inc
mov
cmp
popf
cld
divb
cmp
add
xor
cmp
add
pop
iret
popl
dec
xchg
xor
jl
add
hlt
sub
xchg
adc
add
or
pusha
hlt
mov
adc
or
aas
or
shrl
sbb
mov
aas
stos
mov
mov
adc
rorb
rcrl
aam
mov
or
out
daa
jae
mov
aas
inc
gs
pop
fstps
jno
dec
cmp
stos
xchg
add
adc
push
pop
fst
mov
add
ret
xchg
ficompl
mov
adc
imul
pop
pop
popa
addb
testl
out
repnz
xchg
inc
lea
xor
cmp
aam
push
xor
std
lods
or
and
ds
fldt
outsl
stos
js
aam
inc
pushf
or
aas
clc
xor
jl
adc
popa
add
pop
mov
xor
mov
gs
lods
pop
fiaddl
mov
stos
push
in
fs
movsl
test
push
mov
icebp
lods
push
xor
in
or
push
mov
lcall
mov
out
mov
lock
cmp
pop
enter
jnp
jb
xchg
push
iret
insb
mov
pop
cli
gs
adc
jno
jo
jg
mov
cmpl
inc
pop
push
lock
fcoms
mov
lods
or
sub
outsb
jnp
addb
leave
test
int
mov
rorl
fwait
pusha
sub
push
sbb
sub
or
lea
jbe
les
stc
inc
mov
test
xchg
dec
mov
fiaddl
test
leave
sbb
sbb
sbb
stos
test
add
mov
mov
adc
movsb
mov
outsb
data16
inc
mov
push
mov
jb
xor
pop
and
and
jg
sub
jle
jmp
sahf
mov
inc
lret
loope
fmul
test
mov
cmp
mov
jae
dec
cmpsl
adc
je
jge
xor
or
int
or
push
push
sti
ss
push
and
dec
adc
xchg
and
rorl
add
add
push
cmp
jbe
in
pop
outsb
xchg
cld
stos
pop
out
and
xchg
push
ret
repz
pop
cld
negb
inc
adc
inc
mov
add
xchg
xchg
pusha
int
jmp
xor
mov
int3
mov
in
push
xor
sti
scas
push
icebp
jp
inc
nop
dec
jns
push
xchg
nop
cmp
test
aaa
pusha
add
and
sub
loopne
ja
pop
popa
test
sbb
dec
pop
push
mov
std
inc
xlat
jle
cli
dec
pop
fs
clc
aam
enter
and
cmp
mov
sbb
and
push
sbb
dec
or
stos
push
stc
fsts
stos
mov
fiaddl
add
push
push
test
out
pop
adc
loop
inc
mov
in
sub
or
fst
das
inc
adc
mov
push
mov
xchg
pop
inc
fistpl
push
pushf
mov
lcall
ret
shlb
rolb
sti
xor
loop
inc
mov
jb
loopne
aad
lds
popf
and
and
insb
and
cmp
push
dec
outsl
sub
pop
js
ljmp
jno
mov
sub
mov
sbb
sbb
dec
aam
mov
adc
jg
fstl
cmpsb
fdivr
sub
pop
jecxz
mov
adc
pop
or
lds
jbe
out
cli
dec
cmp
adc
inc
mov
xor
sbb
popf
adc
mov
pusha
data16
sbb
cmp
inc
xchg
pusha
test
ficompl
je
add
adc
in
inc
or
xor
call
inc
jmp
pop
sbb
repz
test
sbb
imul
adc
ss
cwtl
cmp
outsl
outsl
test
jmp
lret
mov
add
pop
sub
mov
adc
mov
push
roll
ror
mov
sub
mov
push
iret
jmp
dec
cmp
or
push
repz
dec
jmp
cmpsl
cmp
mov
sub
shrl
aam
sbb
sub
insl
pusha
sub
xchg
adc
jge
daa
xchg
mov
inc
aaa
add
ja
or
xor
dec
cld
icebp
lcall
in
out
cmpsl
test
sub
xchg
aam
into
addr16
push
repz
and
imul
rclb
and
out
sbb
int3
daa
sbb
or
cld
sub
mov
cwtl
adc
push
mov
mov
inc
popf
xlat
call
rclb
aaa
pop
lea
mov
out
in
sahf
and
adc
jns
shll
xchg
test
aaa
push
outsl
push
mov
adc
xchg
and
push
xor
xor
adc
jle
adc
movl
inc
into
outsb
xchg
push
pop
xor
cmp
add
je
into
cmp
pop
insl
outsl
xchg
hlt
adc
push
pop
cmp
js
jae
clc
stos
rorl
lds
jns
xchg
and
insl
adc
movb
or
iret
sub
xor
jo
xor
cli
negb
test
lret
popa
adc
or
ss
cmp
adc
je
mov
cmp
jmp
push
jno
divl
ja
push
or
push
les
sbb
es
xor
rcrl
inc
jo
pop
pop
gs
jbe
add
mov
cld
cld
cmpsb
jno
jo
les
pop
mov
add
enter
cmp
stc
in
adc
mov
bound
mov
mov
push
inc
jmp
je
xchg
popa
inc
repnz
push
mov
mov
pop
push
sub
jmp
inc
or
rolw
jmp
mov
bound
mov
adc
arpl
dec
lret
test
push
std
stos
nop
xor
pusha
jg
jne
imul
mov
hlt
sub
gs
add
jp
ret
dec
dec
addr16
iret
ja
dec
leave
repnz
jle
es
pop
scas
ljmp
cmp
iret
sbb
sub
incb
pop
int3
sub
sbb
clc
push
sbb
mov
or
inc
mov
add
out
mov
sub
stos
fmull
mov
mov
mov
xor
xchg
aad
pushf
add
pop
call
ja
push
sti
jp
fsubrl
and
ja
test
mov
je
xchg
out
pop
ret
sbb
sbb
dec
sahf
daa
push
shrb
test
jae
mov
and
cwtl
adc
insb
push
inc
and
test
xlat
imul
cmpb
int3
aaa
out
jnp
out
add
xlat
push
adc
in
adc
and
bound
cmp
xor
or
adc
into
or
inc
mov
mov
pop
adc
cmp
cmp
out
sbb
mov
inc
lods
mov
sub
into
test
adc
js
shlb
orl
mov
mov
add
div
dec
arpl
xchg
enter
sbb
xor
dec
cli
mul
shr
pop
mov
adcl
in
cwtl
sbb
in
in
mov
cld
pop
fadd
out
ret
push
repnz
or
jo
arpl
cld
xlat
jp
scas
shlb
pop
pusha
jno
pop
jns
outsb
mov
pop
jb
mov
xchg
in
data16
stos
hlt
ds
inc
into
and
mov
inc
rcrl
sub
dec
in
lods
lahf
push
jp
jbe
mov
ss
roll
cmp
movb
mov
mov
or
xor
xor
dec
or
inc
dec
loope
add
sbb
or
ret
inc
dec
jne
inc
jbe
cltd
pop
cltd
das
lcall
cli
lods
cmpsl
mov
push
mov
mov
lods
insl
mov
cmp
pop
loop
mov
insl
es
and
mov
ljmp
xor
sub
sub
jb
pusha
test
fsubrs
shll
outsb
push
clc
hlt
adc
in
div
loopne
lret
pop
sub
and
sub
adc
pop
xlat
stos
out
lods
xor
sbb
xchg
push
sbb
add
sbb
mov
aaa
pop
inc
push
jge
inc
ret
jmp
sbb
addr16
lods
int
iret
jmp
xchg
outsl
adc
in
arpl
das
jp
cmc
cltd
daa
xchg
pop
shlb
dec
xor
cmpsb
pop
mov
movsl
mov
test
shl
pushl
add
jg
ret
mov
in
inc
gs
and
push
or
add
mov
or
mov
push
dec
inc
clc
inc
push
popf
xchg
mov
cmp
popa
dec
sbb
add
sbb
cltd
and
mov
sarl
and
popa
dec
ljmp
mov
fdivl
fldcw
mov
sar
xor
push
mov
cwtl
mov
jo
test
jbe
push
clc
lret
lret
adc
pusha
adc
adc
jecxz
and
mov
int3
test
cs
adc
dec
repz
sub
mov
aad
jbe
xor
dec
xchg
scas
repz
cli
xchg
out
pushf
mov
push
fstps
inc
stos
push
push
push
scas
mov
inc
fisubs
and
xchg
ds
lods
jmp
je
lret
push
jmp
mov
das
push
js
mov
inc
iret
push
lret
loope
add
test
fwait
leave
add
lahf
jl
dec
int
mov
addb
pop
fwait
add
shlb
sbb
loopne
add
dec
sub
das
mov
push
imul
push
push
cld
push
adc
ret
pop
shrl
ret
fimuls
pusha
int
in
cli
aam
outsb
test
insb
into
cmp
cmp
inc
and
cmp
adc
mov
insl
loopne
and
jge
push
sbb
mov
push
jmp
aad
cld
pop
aad
out
xchg
outsb
lret
push
push
sbb
jge
bound
jne
int
sbb
mov
out
mov
lahf
xchg
and
pop
es
aam
es
mov
clc
inc
test
out
je
loope
inc
imul
mov
xchg
sbb
cmpsl
dec
inc
add
jecxz
pop
xchg
push
or
into
jnp
stos
div
mov
sub
sub
mov
inc
test
pop
cmpsl
cmpsl
mov
loope
aaa
sbb
fwait
shll
je
shlb
push
rcrb
add
in
movsl
fidivrl
movsl
sbb
mov
mov
push
jne
xchg
adc
fldcw
or
stos
add
shlb
outsl
stos
xchg
icebp
jge
ds
mov
push
xchg
mov
ret
cmp
pop
imul
jnp
jns
mov
add
daa
cld
popa
jns
jns
movsl
pop
xchg
les
or
pop
imul
out
cmp
lods
aam
sysret
divb
ja
xlat
lahf
or
pop
jo
js
sbb
je
fdivr
aas
out
jo
cmp
testb
stos
or
fists
push
xor
pop
js
pop
xchg
adc
ds
outsb
pop
mov
add
jnp
push
fs
push
add
sub
cmp
push
push
je
xchg
fs
push
scas
dec
xor
outsl
jne
or
pop
aas
sub
lods
aam
dec
js
pop
add
mov
lods
rclb
pop
xchg
and
sarb
cmp
mov
mov
add
pop
lahf
jne
js
mov
pop
sbb
and
cmp
and
pop
xlat
shlb
in
cwtl
mov
ret
pop
fadds
stos
jge
mov
sub
jnp
jb
in
xchg
adc
mov
in
clc
mov
pop
xlat
subb
sbb
sbb
lods
stos
cmp
stos
jnp
fildl
pop
dec
mov
push
jne
mov
lods
das
mov
mov
push
cli
nop
nop
daa
or
enter
pop
fwait
rorb
in
paddsw
push
dec
out
mov
mov
dec
das
stos
fiadds
into
cmp
mov
mov
les
call
xchg
test
pop
dec
mov
imul
dec
out
cmp
stos
fidivrl
daa
shl
and
jp
pop
push
enter
adc
push
aam
adc
sbb
iret
js
lret
bound
scas
sub
inc
cs
jns
rcl
cmp
inc
aad
inc
aaa
and
push
inc
imul
sahf
inc
and
incw
pushf
aad
cmp
sbb
xchg
and
add
dec
push
sbb
xchg
outsb
imul
add
das
push
scas
ss
adc
por
jno
inc
movsb
icebp
cld
jnp
sub
jns
fnstenv
inc
jo
cmpsb
enter
out
jb
in
call
fwait
arpl
xchg
or
aam
add
jl
dec
sub
dec
mov
testb
aam
push
jae
xor
jne
mov
stos
ljmp
mov
mov
enter
push
call
pop
xchg
fsub
or
push
push
dec
xor
movsl
dec
inc
inc
adc
cs
push
sbb
mov
adc
pop
test
mov
imul
add
ret
pusha
fldl
jmp
in
into
cmpsl
pop
ds
mov
fidivrl
lret
out
cmp
lahf
mov
pop
inc
fstl
add
insb
out
jb
int3
push
and
cmc
add
fwait
sbb
cmp
pop
inc
jnp
lock
sbb
je
mov
fisttps
shl
mov
mov
call
add
pop
lret
push
or
cmp
in
xchg
dec
mov
adc
aas
iret
mov
jbe
std
sub
lds
push
inc
mov
sub
ret
aad
popf
les
cs
dec
stos
xchg
out
mov
cltd
rep
inc
fistpll
sub
mov
add
sub
sbb
pop
inc
push
daa
orb
add
dec
jne
xchg
icebp
jno
outsb
aad
fcmovu
or
imul
mov
fildl
sub
fucom
jae
mov
mov
or
dec
mov
add
ja
negl
mov
aas
sub
pop
enter
or
mov
je
stc
into
inc
pusha
rol
insb
cmp
jns
out
jmp
inc
xchg
push
push
sub
das
mov
mov
adc
push
sahf
add
push
movl
repz
inc
inc
imul
mov
xor
vmwrite
pusha
dec
mov
out
test
jle
dec
adc
mov
dec
jns
adc
popa
ss
fiaddl
lcall
mov
and
mov
push
sarl
cmp
into
sub
rclb
mov
shll
sbb
dec
jne
cmpsl
pop
aaa
push
decb
outsl
xchg
jne
addr16
lret
sbb
addr16
aad
fdivrl
jg
pop
jmp
scas
lahf
push
shlb
scas
jns
outsl
inc
add
les
push
dec
cli
daa
sub
ljmp
icebp
cmp
aam
dec
mov
fs
mov
mov
adc
ljmp
pop
enter
pop
frstor
pop
dec
mov
into
push
push
jnp
sub
ss
push
addb
aas
add
dec
adc
add
inc
jae
inc
inc
and
ret
dec
pop
xchg
mov
mov
mov
in
and
and
or
clc
xchg
pop
ret
or
pop
rcrl
add
jg
cmp
push
out
push
mov
stos
in
mov
cmp
or
rorl
pop
shll
mov
fdivs
sub
dec
or
test
mov
mov
xor
fcomps
mov
test
jns
cltd
mov
sub
and
sbb
das
int3
fidivl
cmp
cmpsb
add
aaa
or
dec
stos
push
das
mov
add
fldl
adc
dec
lahf
xor
je
js
hlt
pop
ds
ja
pop
adc
jl
out
leave
add
roll
fs
imul
mov
mov
add
push
mov
sub
das
fisubs
out
push
push
xchg
mov
cmp
addr16
mov
je
xchg
mov
stos
lahf
dec
adc
inc
dec
lods
mov
daa
mov
dec
out
aaa
inc
std
push
stos
dec
jp
pop
jns
jle
jbe
out
inc
mov
and
dec
pusha
inc
ljmp
inc
or
jbe
add
mov
lret
out
sub
mov
jne
or
and
je
mov
into
and
scas
cmp
ds
jg
loopne
ja
push
lods
mov
fbld
int3
mov
mov
lea
cmp
into
imul
push
and
mov
cmpsl
daa
test
mov
out
cmp
jle
sub
or
sbb
inc
push
ds
pop
cmc
xor
in
and
faddl
sub
decl
andl
mov
pop
sbb
sbb
rcrb
pop
fisubl
dec
cmp
lcall
and
sti
call
jne
or
and
pop
aaa
in
push
sbb
mov
scas
sub
je
xchg
mov
mov
xchg
jne
les
fstl
or
xchg
imul
js
das
int
adc
pop
add
outsb
adc
fsub
adc
sbb
add
notl
mov
aas
stos
fsubrl
cltd
imulb
mov
dec
jno
push
lcall
inc
and
mov
pop
sbb
lods
push
lahf
movl
stc
in
fwait
sahf
dec
jno
jg
and
xor
adc
lods
dec
popa
jg
mov
repz
jb
push
movsl
sub
pop
shl
in
aaa
mov
mov
sub
cmp
fdecstp
mov
xchg
jnp
out
fidivrl
adc
int3
movsl
add
popf
push
leave
push
sub
pop
cmp
pop
cmp
or
sub
pop
add
in
sti
out
mov
xchg
and
add
fwait
call
mov
loope
jl
jno
and
jo
mov
mov
ds
jmp
jbe
test
push
mov
out
jge
push
xor
imull
xor
nop
jge
sub
ret
rclb
mov
or
es
xchg
movsl
pop
xor
mov
mov
jb
inc
mov
inc
fistl
pop
das
lcall
or
mov
iret
cmc
mov
or
push
test
out
les
popf
mov
jne
cmp
jb,pt
xchg
ds
ds
int3
cld
sar
fdivl
in
jge
jns
dec
inc
mov
pop
xor
fxch
cmp
jnp
out
rcll
xor
sbb
sub
xor
pusha
orb
fsubs
outsl
xor
cmpsb
dec
lcall
mov
cmp
outsb
push
clc
pop
inc
lea
xor
sbb
sub
mov
push
mov
dec
popa
pusha
les
ss
cltd
in
or
inc
jmp
mov
je
push
les
mov
scas
sub
hlt
data16
out
mov
sbb
and
sbbl
lds
push
movaps
popa
or
xor
repnz
ss
lar
push
mov
cmc
inc
jg
js
dec
ja
insl
rorl
pop
adc
lahf
push
loop
lods
mov
mov
pusha
add
sbb
test
jbe
pop
ljmp
pop
fadds
jge
cli
pop
xor
stos
push
cli
add
mov
and
inc
push
dec
dec
repz
std
mov
sub
pop
jno
mov
pop
jae
int3
inc
jge
repz
in
xchg
add
push
jge
popf
addr16
and
enter
and
mov
test
mov
test
jne
imul
mov
mov
sub
ljmp
sbb
pushf
in
loopne
pop
in
clc
add
repz
test
into
xchg
movaps
inc
push
hlt
push
outsl
xchg
push
dec
sub
and
inc
jae
arpl
or
lahf
mov
push
js
jo
decb
ja
cli
jae
inc
mov
inc
push
pop
es
in
push
add
outsb
mov
xor
xchg
arpl
cmc
mov
outsl
cmp
mov
mov
or
sti
inc
insl
call
es
shlb
or
bound
loop
xchg
and
sahf
jp
jmp
dec
outsl
dec
adc
or
push
mov
aaa
ljmp
pop
sbb
sbb
fs
cmp
loop
pop
cmp
daa
xor
ret
jg
pop
fadds
outsb
ds
adc
sbb
sbb
dec
and
popl
adc
ja
and
inc
xchg
sub
pop
jge
xorb
jecxz
xlat
test
or
sub
push
outsl
xchg
push
push
cmp
xorl
int3
js
es
movsb
pop
add
mov
dec
pop
arpl
push
dec
ss
adc
shll
push
sub
data16
jp
xchg
xor
sbb
cmpsb
fildl
fimull
jp
lds
shrb
mov
sbb
ljmp
sub
or
hlt
lock
push
loope
cld
sti
je
jg
mov
jnp
iret
mov
mov
aaa
mov
sbb
andl
xor
inc
xchg
mov
mov
jae
push
mov
hlt
js
mov
int3
jb
ret
jp
fs
das
out
jno
jne
addl
sub
xchg
pop
and
adc
sbb
xchg
and
movsl
lock
stc
in
ds
xchg
xchg
clc
pop
cmp
dec
push
dec
dec
imul
aam
xor
xor
sbb
daa
mov
jbe
ljmp
std
push
es
mov
pop
sbbb
test
jae
xchg
xchg
xchg
dec
mov
aad
dec
sbbb
xchg
and
and
dec
dec
daa
inc
mov
xor
jbe
loopne
js
out
xchg
stc
push
sbb
cmp
pop
das
push
ljmp
pop
push
lds
sbb
arpl
gs
test
movsb
enter
xchg
jge
inc
push
mov
mov
orb
push
in
mov
push
push
aam
enter
jecxz
and
push
xchg
cltd
popf
xchg
adc
pusha
pop
lcall
sub
enter
std
mov
mov
add
int
add
push
cltd
xchg
mov
jg
push
rcrb
adc
cmp
xor
xor
mov
in
inc
aaa
sbb
or
icebp
sbb
cmc
mov
sub
test
pushf
jnp
jge
xchg
jg
sbb
aad
sahf
push
fcom
pop
xor
mov
aas
sti
cmpb
jmp
jl
das
call
inc
inc
roll
jb
movsl
stc
jne
xor
aad
out
xchg
lret
sbb
push
cmp
ljmp
out
push
and
sbb
bound
mov
cmp
inc
sbb
adc
nop
xor
mov
push
je
ret
push
pop
bound
dec
pop
sbb
dec
adc
movsb
push
and
fnsave
adc
jmp
and
mov
jp
fwait
add
cwtl
dec
imul
mov
jo
cmpsb
mov
inc
jmp
jae
shll
inc
cmp
sarl
mov
mov
enter
shlb
fs
mov
idiv
sub
in
jg
fsubrs
push
inc
dec
or
pop
testb
push
sub
or
xchg
add
pusha
into
and
test
mov
pop
call
sbb
cs
adc
cli
adc
ss
inc
cli
mov
push
add
pop
mov
je
scas
sub
je
adc
addps
int
add
pusha
pop
cmp
or
push
in
add
push
popf
fmuls
icebp
lcall
ds
inc
imul
jge
xchg
or
out
adc
inc
jbe
ss
sbb
fs
inc
jnp
and
pop
jle
xor
stos
lcall
cmc
jne
lds
enter
aaa
pop
jge
lods
pop
lret
xor
pusha
add
add
inc
mov
jne
mov
sub
pop
stc
fdivl
and
stc
dec
stos
cmp
mov
lret
cmp
mov
push
push
inc
enter
jns
sub
inc
mov
push
loope
inc
adc
shr
cmp
push
js
push
inc
and
sarb
jno
xchg
fdivs
mov
xchg
cmp
pop
aam
or
push
pop
bound
lcall
aam
mov
icebp
mov
sbb
fmuls
mov
fldl
jl
push
loopne
test
fmull
or
lds
dec
sbb
mov
leave
inc
out
mov
ss
sahf
jnp
cmpsb
mov
or
dec
push
cmp
xor
jb
or
insb
push
xor
das
pop
pop
pop
and
inc
dec
inc
shrl
lock
das
addr16
xor
shrl
dec
jge
pop
xchg
sbb
cwtl
imul
push
or
mov
das
stc
pop
imul
pushf
stos
push
pop
cmp
ljmp
and
jns
and
push
popf
into
pop
jno
jbe
adcb
mov
jp
add
mov
push
push
dec
cmpsb
dec
les
inc
jbe
sub
push
jg
xchg
pop
pop
push
jo
arpl
gs
adc
roll
and
mov
push
outsb
es
fdivrl
loop
push
cli
sub
subb
sti
sbb
bound
push
cmp
insb
ja
and
dec
or
or
add
movsb
adc
pop
fdivrs
inc
push
jo
leave
in
adc
insl
and
adc
or
or
aaa
pop
inc
pop
scas
mov
scas
push
fadds
ret
cli
pop
inc
outsl
cmc
and
jb
xlat
int3
clc
mov
pushf
fisttpll
mov
in
popa
push
negb
adc
fadds
sbb
cld
fldcw
pop
inc
cld
aaa
sbb
fistpl
cmp
push
sahf
addb
sahf
add
push
mov
pop
sahf
xor
aas
jno
test
divl
xor
lods
push
mov
enter
or
add
cmpsl
mov
in
loop
xchg
add
sti
mov
and
test
mov
mov
xchg
ror
std
test
dec
popf
mov
fcoms
fisttps
leave
call
shrb
push
in
scas
sub
mov
dec
loop
hlt
jb
rcrb
adc
fwait
into
fnsave
push
loopne
mov
cld
push
lea
inc
dec
or
push
movsl
xchg
pop
add
xor
je
mov
dec
sub
jne
sub
aam
pop
jl
xchg
push
and
pop
push
js
aam
add
pusha
gs
es
adc
jnp
out
add
imul
dec
ficoms
outsl
inc
popa
insl
mov
cmp
xchg
or
cmc
add
fst
std
loope,pt
sub
sub
in
jle
cmp
fiaddl
outsb
jle
andl
rorl
imul
in
int
fdivl
rcrl
movl
pop
mov
lret
out
loope
jne
jge
and
bound
sub
sbb
shrb
push
cs
rcr
notb
dec
mov
push
jecxz
and
push
push
aad
ja
push
movsb
ljmp
mov
jp
sbb
or
je
mov
jo
js
xor
repz
pop
fisttpl
aaa
mov
push
push
sbb
js
rcrl
negb
sub
fmul
adc
add
add
loop
clc
pop
test
sub
xchg
jle
mov
add
imul
add
mov
and
clc
sub
pop
mov
xchg
mov
out
outsl
and
daa
mov
push
aam
pop
cmovno
aad
mov
shlb
je
mov
sbb
sbb
sbb
cmpsb
call
push
push
add
jmp
scas
nop
mov
pop
mov
cmp
jae
jp
sub
mov
sbb
cmp
int
les
inc
cltd
jb
dec
fwait
dec
imul
arpl
add
jp
xchg
testl
rcll
popa
mov
cld
mov
cmpsb
cwtl
cwtl
daa
push
cmp
mov
cmp
and
push
nop
xor
push
sub
xor
mov
mov
subb
or
push
fs
cwtl
mov
and
loopne
xchg
adc
adc
movsb
fstpl
cmpsb
fcompl
outsl
fs
call
push
rcrb
inc
inc
pop
aam
pop
push
ss
add
mov
sbb
xor
das
sub
mov
or
mov
sub
mov
outsb
cmp
jnp
imul
and
push
mov
data16
mov
xlat
or
and
or
sahf
adc
or
test
and
lods
ret
dec
mov
leave
mov
repz
fidivrs
iret
and
push
mov
mov
sarl
sub
sbb
test
mov
outsb
pop
mov
inc
push
pop
mov
mov
enter
out
dec
ret
cmpsl
ljmp
xor
mov
xlat
mov
mov
cmc
das
outsl
and
add
pop
pop
dec
sbb
mov
mov
lds
and
in
ja
cmc
jg
sbb
adc
push
sbb
pop
into
shll
faddl
lcall
fwait
xchg
in
inc
pop
pop
pop
ja
mov
or
out
dec
out
jbe
xlat
adc
js
sub
mov
outsl
je
cmp
es
cmp
inc
cs
sbb
pop
fldenv
je
or
pop
jle
cmp
mov
and
sarb
gs
mov
ja
lcall
es
jle
pop
mov
insb
scas
sub
cmp
mov
sahf
mov
mov
sub
ss
sbb
xchg
adc
jb
mov
dec
sbb
add
inc
xchg
pop
std
jno
jnp,pn
repnz
jno
and
out
jae
pop
inc
jo
or
sbb
and
sub
sbb
mov
or
popf
subb
das
and
and
repz
dec
dec
push
xchg
mov
dec
test
or
or
dec
xchg
test
add
mov
xor
scas
pop
cli
and
pop
test
daa
cmp
fnsave
add
movsl
and
xor
inc
push
loopne
cmp
cmp
pusha
outsb
sub
movsb
add
inc
scas
adc
inc
or
out
xor
stc
cmp
mov
mov
dec
inc
sbb
adc
mov
stc
bound
xchg
and
pop
push
jo
mov
mov
sub
ja
into
notb
jle
imul
mov
xor
lock
inc
pop
mov
les
int3
push
inc
cmp
push
les
inc
sub
adc
roll
mov
aaa
sub
and
popl
aas
inc
clc
inc
aas
jne
ja,pt
das
lret
push
dec
or
rorl
jns
pop
out
push
push
sub
jb
jp
lods
imul
pop
mov
dec
fstp
ror
in
push
sti
ror
cltd
or
mov
roll
mov
out
push
push
test
outsb
std
sub
fisttpll
lods
addr16
repz
das
push
repz
fstps
je
insl
mov
stos
sar
addl
pop
mov
and
loopne
push
js
mov
scas
adc
sub
jne
inc
out
cmpb
jp
outsl
les
movsl
out
out
mov
pop
lds
pop
fcoms
add
or
in
push
test
in
cmc
mov
pushf
leave
fistl
loopne
jp
push
out
imul
pop
les
dec
mov
fsubs
popa
out
pop
mov
dec
inc
dec
mov
mov
pop
std
and
add
aad
mov
orb
jae
outsb
repz
aas
xchg
jp
mov
sbb
xchg
mov
sbb
scas
sub
xlat
je
scas
movb
mov
push
jns
sub
insl
mov
pop
loopne
sub
enter
mov
ja
add
lret
push
js
fdivrs
inc
dec
add
xlat
aam
sahf
xchg
imul
movd
push
or
js
stos
popa
and
push
pop
enter
push
jmp
mov
or
out
out
cmpsb
pop
shr
jmp
fmuls
dec
int3
push
aam
inc
popa
scas
sbb
xor
xchg
and
rolb
lods
into
das
xchg
mov
sbb
pop
icebp
inc
add
fwait
and
mov
jl
insb
push
and
inc
nop
push
movsb
jl
pop
jecxz
ret
aam
mov
mov
xor
outsl
push
pop
dec
dec
adc
adc
mov
and
push
aam
and
lret
ud2
leave
cmp
ret
ss
cmc
xor
mov
frstor
mov
daa
add
cmp
rcl
mov
repnz
loope
dec
jmp
and
add
xor
push
inc
daa
mov
repz
lcall
adc
leave
aam
jne
addr16
xchg
adc
pop
roll
ret
or
hlt
ja
jl
push
sbb
shlb
mov
std
push
push
stc
scas
gs
lds
jae
dec
inc
xchg
sbb
adc
and
xchg
daa
sahf
jnp
fidivl
mov
js
fxam
jmp
jo
or
aad
adc
stos
je
jp
dec
and
int
pop
mov
push
bound
mov
in
test
into
xchg
loope
jl
pop
js
mov
pop
mov
test
sarl
data16
bound
sarb
pop
loopne
int
xlat
mov
pushf
inc
xchg
xor
xor
pushf
add
jnp
adc
or
cmpsl
push
data16
push
outsl
in
flds
fs
aad
dec
mov
jnp
rcrl
in
push
sbb
mov
mov
xchg
imul
or
cmp
dec
pushf
loop
popl
dec
dec
sbb
je
std
js
sub
iret
imul
aam
pop
cld
ficomps
jle
lahf
sbb
icebp
sub
pop
lds
or
sub
movsl
lahf
dec
mov
ret
popf
leave
imul
testl
jnp
pushw
ds
push
test
jno
and
sub
jbe
xchg
ret
xchg
mov
icebp
enter
arpl
imul
cmp
sbb
test
inc
cwtl
ljmp
mov
cmp
jns
inc
inc
inc
sar
dec
aam
and
cltd
gs
pop
xchg
jg
lods
cmpsl
sti
js
jnp,pn
jb
and
xchg
std
rcrb
out
sbb
cmpsb
mov
pop
push
xor
dec
push
mov
sarl
fwait
cs
cmp
inc
fidivl
pop
jb
mov
arpl
leave
arpl
mov
or
jbe
jle
and
sahf
clc
lret
dec
adc
push
jbe
sbb
and
jbe
mov
das
outsl
outsb
jae
iret
mov
hlt
pop
in
dec
stos
add
inc
aam
cmc
pop
adc
je
fs
loope
push
les
xchg
bound
ss
aas
dec
sbb
mov
pop
pop
jo
les
jae
cmc
divl
hlt
mov
dec
push
sub
ja
addr16
inc
add
cmpsb
sub
cmp
adc
push
push
sbb
sysenter
push
push
jo
adc
push
or
mov
dec
mov
jge
in
cmpsb
fs
jnp
pop
je
sub
push
pop
mov
add
and
in
mov
pop
push
pop
mov
test
or
inc
das
jle
mov
jmp
pusha
add
jbe
sahf
stos
sbb
inc
xchg
add
negb
lret
pop
mov
mov
iret
repnz
pop
idivl
int3
adc
cmp
pop
push
sar
and
push
xchg
mov
ret
inc
addr16
fnstsw
mov
inc
sti
ss
loop
xchg
xchg
lahf
inc
mov
ss
jae
or
dec
sub
inc
pop
ret
lods
xchg
lret
mov
and
adc
add
lea
add
push
sbb
mov
lea
mov
cmpl
jl
jno
je
jb
mov
and
xor
or
out
cmpsb
sub
imul
pop
xor
inc
or
mov
mov
fs
xor
ja
jmp
jns
inc
ljmp
out
popf
ljmp
sub
enter
and
ja
outsb
arpl
loop
ds
xchg
loop
or
aad
hlt
jmp
add
cmp
je
testl
sub
jns
cmpsl
dec
pushf
dec
xor
fstl
or
inc
rcr
push
xchg
mov
daa
das
inc
stc
dec
insl
fwait
cmp
mov
test
testl
and
std
inc
and
insl
js
bsf
mov
and
sub
je
and
data16
push
scas
mov
nop
imul
adc
sub
and
inc
in
fmuls
jmp
ds
stos
sub
dec
cmp
dec
jne
fmuls
push
mov
scas
lret
xchg
sarl
jne
jae
push
mov
gs
cmp
or
pop
cmp
pop
sbb
push
imul
test
hlt
inc
add
pop
xchg
push
pop
inc
stc
outsb
push
cmpsb
fnstsw
cmp
imul
bound
addr16
jae
fildl
sub
lds
testb
sarl
jb
rcr
int
add
lds
insb
push
jno
fwait
dec
jne
sarl
mov
inc
inc
in
shlb
sbb
cmp
mov
or
pop
add
push
sti
orb
fbstp
testl
daa
xor
nop
cwtl
add
and
push
nop
pushf
inc
add
ficoml
add
shl
mov
daa
cwtl
pop
adc
fimull
fwait
inc
sbb
cltd
xchg
pop
fs
mul
fdivl
jnp
lea
push
pop
cmp
xchg
jo
out
adc
mov
add
xchg
movsl
icebp
xchg
inc
push
lods
push
xor
int
out
add
xor
inc
orb
inc
loop
mov
pusha
dec
mov
push
mov
sbb
cmp
iret
dec
mov
mov
loop
mov
dec
dec
cmpsl
xor
mov
movsb
lret
lds
inc
mov
xchg
xor
out
xor
and
sbb
sbb
cmp
repz
pop
sub
cmp
jb
pop
sub
pop
and
aam
hlt
jns
cmpsb
pop
lret
dec
loopne
lods
inc
jge
punpcklwd
cs
or
inc
xchg
rcl
das
push
pop
ss
push
aam
ret
push
lret
jmp
push
pop
mov
movsl
mov
mov
bound
jp
jo
cmpsl
push
inc
adc
inc
enter
out
inc
sahf
je
sti
mov
test
mov
stc
xchg
and
jl
mov
gs
adc
jp,pt
out
in
sub
repz
jns
scas
sbb
outsb
mov
xchg
ljmp
pop
push
pusha
mov
pop
fiadds
enter
sub
add
fidivrl
pop
push
push
cmp
inc
pop
sub
and
jmp
fistpll
iret
and
inc
in
push
mov
les
dec
push
cld
cmp
clc
mov
adc
mov
lods
mov
inc
addb
inc
mov
mov
jnp
testl
loope
inc
xor
cli
dec
inc
mov
ret
xchg
sub
adc
mov
xor
lock
and
xor
lret
xor
ja
lds
mov
imul
fwait
jbe
rcrb
clc
loopne
xchg
ret
mov
adc
xchg
mov
cmpsl
jo
or
loopne
sbb
rorl
push
and
call
mov
jge
sub
push
adc
pop
popf
aam
fstl
pusha
xchg
std
sbb
push
rclb
test
xlat
push
pop
fcoml
int3
and
les
jne
scas
lock
cmc
enter
mov
dec
iret
cmpsb
jp
push
push
shl
hlt
sub
shll
lahf
jns
daa
adc
shrl
imul
movsl
lcall
ss
pop
jnp
push
jge
loopne
sbb
adc
xor
xchg
mov
out
leave
jl
mov
movsb
test
sub
and
sbbb
mov
and
add
dec
divb
fdivrs
pusha
dec
xchg
xorb
hlt
or
in
add
mov
jle
dec
mov
into
fidivl
cmp
pop
and
sub
clc
lret
inc
sbb
out
mull
lret
cmp
les
push
shlb
in
insb
xchg
outsl
fcmovne
int
lcall
dec
js
call
shl
pushf
fisubl
jb
std
out
add
add
xchg
xor
adc
scas
adc
lds
insb
xlat
xor
cmp
add
mov
adc
pop
in
mov
lahf
pop
lods
mov
mov
rclb
push
xchg
adc
inc
dec
lret
jg
pop
sbb
mov
mov
pop
imul
inc
sbb
dec
xor
push
pop
aaa
xor
scas
lahf
aam
xor
leave
stos
cmp
rorl
fwait
outsl
lock
shlb
cmp
iret
fildll
testb
int3
mov
adc
sub
rol
lods
test
dec
xchg
lret
enter
shrb
push
insl
xchg
adc
in
jo
out
movsb
sahf
inc
dec
jl
lea
add
les
scas
std
outsl
repz
mov
pop
mov
pusha
arpl
les
mov
fsub
popl
ss
cmp
jns
dec
push
cmp
out
stos
cmove
jmp
xorw
jg
dec
pop
outsl
xchg
xor
mov
and
adc
jge
gs
jae
lock
xchg
lock
cmp
je
mov
pop
inc
in
mov
mov
std
add
dec
fwait
mov
pminsw
cmp
mov
inc
fldl
mov
jnp
jne
xchg
adc
jg
js
repnz
xchg
out
js
pop
cmp
inc
imul
pop
mov
lds
xchg
inc
adc
and
xchg
pop
out
test
test
push
jle
or
push
pop
mov
rol
shlb
loope
test
shl
jo
in
test
add
sub
leave
cmp
dec
fcom
mov
arpl
push
int3
lahf
bound
mov
xchg
pop
jo
mov
inc
push
adc
test
testl
stos
cmpsl
lret
das
stos
jge
nop
fs
lods
jne
push
jle
xorl
data16
pop
sub
stc
jge
jmp
iret
cmpsl
push
mov
xchg
jno
enter
jle
inc
adc
sbb
stos
push
push
sahf
fs
and
mov
inc
jae
fisttpl
jns
pop
rcl
pop
xlat
cmc
sahf
mov
jne
adc
sub
pushf
jp
out
outsl
adc
inc
push
mov
out
test
out
mull
int3
jl
dec
or
xchg
pop
push
push
push
imul
mov
push
pop
dec
sti
ss
and
mov
sub
jae
jle
push
xor
mov
cmc
sub
mov
cltd
pop
cwtl
jns
pop
push
inc
xor
cmc
pop
push
rclb
xchg
xorb
cmp
jge
cmpsl
fnsave
icebp
xor
and
mov
cld
int
insb
push
cmp
xor
dec
icebp
cmp
sub
addr16
jge
sahf
mov
mov
adc
imul
cmp
addr16
xor
mov
sub
sub
cmp
mov
rcrb
movsb
jns
push
lret
cwtl
dec
out
xchg
js
sub
in
and
lret
push
bnd
jmp
leave
les
inc
ds
inc
sbb
inc
mov
fmul
mov
push
or
insl
mov
pop
loopne
sbb
cmp
xchg
cltd
rcrl
adc
jnp
mov
mov
loop
jbe
scas
jns
jnp
xor
push
push
movswl
lea
mov
aaa
lock
testl
mov
stos
or
push
dec
sbb
inc
push
lcall
sbb
jnp
jp
mov
repnz
or
add
fcoml
pop
or
mov
pop
xchg
sub
hlt
cld
lock
fiaddl
fstps
ja
insb
push
sbbl
push
pop
xor
jg
aaa
mov
cli
outsb
outsb
ds
cmp
into
mov
push
mov
dec
inc
shrl
outsl
or
mov
mov
xor
lea
repnz
dec
int3
lds
loopne
scas
inc
dec
push
push
hlt
clc
out
icebp
xor
mov
lea
xor
or
adc
aad
inc
insl
jae
scas
cli
fsubs
jnp
adc
jl
stos
cwtl
cld
inc
sbb
jmp
mov
adc
call
xchg
pop
mov
or
loopne
sub
push
sbbb
push
adc
je
lret
inc
jp
jnp
cld
movsl
pop
add
jle
mov
sub
frstor
outsb
pop
fmuls
mov
or
insl
xor
sub
popf
aam
mov
xchg
cmp
cmpsl
mov
insl
rol
push
xor
fimuls
pop
dec
lock
pop
sbb
adc
cltd
incl
aaa
add
cmp
and
in
nop
stc
shlb
cwtl
mov
std
push
sbb
adc
adc
cltd
push
inc
mov
sbb
dec
int3
into
add
push
insb
and
outsb
mov
sub
into
sub
mov
or
mov
repnz
lea
push
mov
jle
sub
subl
imul
lret
add
aaa
mov
ja
mov
nop
ret
scas
andl
test
cmc
ss
mov
or
push
pusha
mov
js
mov
stos
mov
bswap
lahf
xor
mov
out
js
lcall
lret
insb
lcall
pop
andl
outsb
push
jle
dec
mov
push
cmp
jge,pn
sub
jecxz
mov
pop
cmp
enter
and
dec
cs
cmp
dec
lcall
leave
and
mov
and
mov
cmp
jmp
push
rorb
mov
ja
pop
pop
pop
push
sub
mov
test
inc
into
xchg
or
mov
ds
push
mov
pop
xchg
pushf
adc
loope
and
fs
lret
push
pusha
or
or
inc
fwait
and
insl
lods
bound
xorb
ret
xor
adc
xchg
sub
fldcw
sub
testb
sub
out
sub
or
push
pop
sti
call
and
scas
push
notb
or
and
in
jno
cmp
imul
cmp
push
pusha
pushf
sub
cmp
pusha
repnz
nop
jno
pop
pop
inc
xchg
pop
out
mov
xor
push
cmp
fcoms
repz
fstl
cmp
sub
xchg
ret
jge
jge
aam
lret
rcrb
lret
ljmp
jae
and
ret
es
lods
pop
js
orb
cld
out
iret
or
in
je
out
les
and
dec
and
mov
pop
add
in
sbb
mov
cltd
loop
imul
mov
sahf
dec
push
movsb
imul
mov
cmp
shrl
cld
push
bound
and
ss
mov
inc
pop
je
lods
outsl
cmc
xor
cmc
mov
push
or
xlat
lret
jle
inc
push
into
lret
into
in
xorb
mov
cli
push
rclb
add
add
movsb
jmp
ret
das
lret
sub
xchg
sbb
xor
xor
adc
out
jb
test
outsl
jo
cmp
add
addl
sub
pop
out
lret
insl
aad
xchg
sbb
ja
jl
cmp
push
fstl
fsts
js
cmp
jnp
bound
jle
inc
ds
test
jne
iret
mov
fnsave
xor
jo
jg
sbb
pop
fs
push
and
push
pop
dec
mov
push
cmp
mov
aad
aam
jle
mov
sub
adc
mov
cmpl
push
sub
sahf
data16
or
fsubr
ret
mov
cmp
sbb
ds
cli
sub
mov
lods
ljmp
in
cs
jecxz
lret
ret
jns
pop
out
ljmp
dec
adc
add
nop
add
xchg
sub
loope
in
jbe
cs
dec
lods
imul
push
mov
and
sub
push
es
inc
xchg
add
and
insl
dec
and
inc
adc
cmp
ficoms
in
sub
cmpsb
push
push
xchg
mov
nop
fcoms
repnz
out
inc
jge
repz
inc
icebp
sub
aam
jo
imul
mov
adc
ret
lods
aam
push
enter
inc
mov
adc
jb
mov
and
cmpsl
xchg
jp
cli
adc
jl
jge
mov
insl
rolb
push
in
int
inc
addr16
cs
sbb
sub
xchg
inc
sar
xor
add
cwtl
loope
add
push
je
imulb
mov
pusha
aaa
add
jp
mov
testb
data16
test
add
xor
sub
sbb
aam
leave
pop
outsl
pop
push
and
or
pop
jge
fdivs
xor
insl
sub
ljmp
std
fs
repz
sbb
aam
mov
cmp
fldenv
insb
push
mov
jae
fwait
mov
mov
icebp
cmp
and
imul
stos
insl
xlat
into
push
xor
rcrl
pusha
stos
push
mov
or
outsb
sub
xchg
loopne
fisubrs
ret
fwait
test
lods
mov
adcl
and
push
pusha
mov
mov
loop
in
jle
sbb
xor
pop
les
jle
sbb
dec
imul
xor
mov
ja
jne
pusha
mov
mov
mov
iret
ret
outsb
sbb
mov
fimuls
add
cmp
mov
bound
or
insl
sub
mov
fidivrs
loope
ss
sti
aas
iret
iret
lods
popf
gs
mov
add
and
lcall
lds
jnp
push
inc
out
imul
lea
scas
cmp
adcb
cmp
lcall
stc
inc
xchg
loope
lcall
lods
xor
mov
lcall
stos
pop
xchg
mov
lea
sar
sbb
test
movsb
mov
mov
add
iret
dec
jl
data16
scas
fcompl
out
push
inc
mov
je
daa
or
pushl
xor
fnstsw
add
and
je
and
sub
jp
dec
lcall
mov
das
lds
pop
and
mov
mov
stc
xchg
dec
test
jmp
dec
sbb
lock
lock
xchg
add
push
popa
pop
push
inc
mov
mov
pop
mov
adc
dec
jae
dec
stc
mov
mov
and
dec
xor
inc
aaa
imul
bound
out
dec
out
popa
push
not
inc
fistl
add
pop
sbb
cmpsb
imull
dec
jle
es
jge
mov
or
sbb
sbbl
mov
jge
lahf
and
fidivl
or
test
jo
into
xchg
cmp
fcmovu
adc
stos
jg
fadd
push
inc
mov
or
data16
movsl
pop
call
cmpsb
shll
inc
push
mov
push
call
dec
insl
loope
cmc
sbb
in
aaa
dec
inc
mov
push
cmp
xchg
inc
cmp
jp
sbb
push
push
and
out
dec
mov
push
mov
les
cmp
lds
or
inc
mov
cld
sarb
push
mov
cmp
pop
insb
pop
mov
les
or
insl
out
outsb
push
in
jecxz
faddl
popf
pushw
pop
add
sbb
mov
inc
pushf
jo
cmp
xchg
out
cmp
je
push
repnz
adc
cmpsb
xor
cli
shlb
mov
lods
and
or
jecxz
imul
or
icebp
sbb
sub
xor
add
lods
push
jno
pop
dec
add
sub
loop
xor
das
push
pop
adc
pushf
call
push
movsb
adc
int
jp
or
call
jg
jecxz
repnz
lret
insl
or
adc
mov
iret
sub
les
fisubrs
cmpl
push
xchg
cmp
xor
dec
enter
push
je
scas
insb
and
push
aam
insb
xlat
mov
shlb
jns
outsb
cmpsb
mov
outsb
sbb
xchg
push
out
add
into
and
cs
push
dec
push
cmp
mov
loopne
stos
push
out
push
mov
in
xor
cltd
fldl
pop
mov
sub
pmuludq
out
rep
nop
pop
push
in
leave
mov
ljmp
xchg
cmp
inc
sbb
dec
ljmp
test
pop
jo
inc
xor
xor
jp
sub
xor
test
cmp
imul
ds
cmp
ja
mov
lcall
es
fldt
xchg
pusha
loop
loop
cmp
test
inc
mov
in
pop
lret
push
test
clc
xor
or
daa
mov
lret
push
jmp
mov
ret
sbb
jns
mov
xchg
cmpsb
xchg
push
pop
repz
das
cmpsb
cmc
incl
push
push
pop
rcrb
in
xor
dec
call
adc
dec
and
push
lock
push
mov
shrl
movsb
jbe
les
jmp
mov
aaa
cld
sbb
sub
loop
mov
das
stc
mov
jle
mov
jno
aas
cld
cmp
cmpl
out
or
ss
out
mov
xchg
pop
mov
add
faddl
push
andl
je
imul
mov
push
out
in
popa
test
jecxz
iret
rorb
and
mov
mov
jo
daa
push
jl
ret
mov
dec
in
out
adc
insb
jno
push
fcmovb
dec
in
sub
adc
adc
jbe,pt
lods
iret
loop
gs
add
sbb
mov
dec
mov
sbb
imul
dec
pop
test
sub
enter
int3
ja
mov
fidivs
cli
jp
out
in
sbbl
cmp
mov
xor
je
outsl
inc
pop
fidivl
in
outsl
adc
rol
aam
dec
xor
jmp
lods
cli
cmpsl
cmp
pop
movsl
xor
jle
inc
push
xchg
mov
ss
jge
lods
jbe
push
add
xor
aam
cmc
shrb
mov
loope
or
jp
lods
xor
imul
jge
inc
mov
iret
les
outsl
cli
rorb
sbb
add
add
insl
mov
dec
cmp
shll
enter
or
repnz
sub
xchg
sbb
das
ret
daa
in
jo
jge
cmpb
xlat
adc
pop
shrb
sbb
mov
xchg
dec
addr16
mov
arpl
push
gs
pop
xorb
or
sub
test
imul
aam
mov
aaa
cmc
add
jle
cmpsl
jmp
cmp
ja
or
inc
arpl
lods
mov
popa
les
adc
pop
jb
mov
inc
and
xchg
fstps
aas
add
out
or
sub
and
xchg
inc
adc
lret
fstpt
fdiv
add
sbb
add
arpl
popa
sbb
mov
or
divl
dec
test
sahf
adc
test
pop
or
stc
or
jbe
cmc
aam
cmp
inc
cld
jle
sub
adc
jl
je
xor
add
push
fsts
dec
push
lahf
shrb
pop
pop
xor
pop
sbb
stc
stos
notl
add
stos
sub
in
xor
js
lret
scas
je
popf
dec
outsl
movsl
out
cmp
sbb
cmp
lahf
sub
cld
pushf
jp
enter
test
sahf
mov
inc
jns
rcrl
jge
aad
stos
out
adc
jg
mov
sti
xchg
push
push
and
pushf
pop
push
jle
cmp
scas
lea
cmpsb
fldl
aam
test
in
sub
pop
sbb
out
push
std
imul
adc
dec
adc
pop
dec
enter
or
das
mov
repnz
sbb
mov
cmp
addr16
push
mov
xchg
aaa
jno
das
imul
stc
or
das
add
iret
mov
ficoms
jbe
mov
inc
dec
push
andb
adc
fdivr
fiaddl
add
add
cmp
xchg
xchg
dec
cwtl
rorb
fidivrl
cld
add
icebp
inc
mov
pop
mov
pushf
sub
mov
mov
mov
push
push
fsubp
gs
cmpsb
out
jbe,pn
push
and
and
aad
fistl
mov
dec
dec
sub
mov
or
lock
inc
fs
test
push
mov
jo
arpl
cmp
or
addb
fldt
xor
mov
pop
mov
mov
xor
xchg
pop
shll
pop
jnp
sbb
cmp
xor
imul
add
es
inc
arpl
movsl
inc
push
push
fcmovnu
daa
mov
lret
mov
xchg
adc
mov
mov
data16
adc
jecxz
lds
jl
lods
jne
lea
fadds
or
jle
cmp
sti
out
push
imul
mov
stc
push
and
loop
lcall
push
or
rorb
and
aam
mov
test
add
or
or
mov
push
pop
cmp
stc
cmp
push
dec
fistps
data16
add
push
scas
push
jge
mov
adc
sbb
shlb
mov
mov
xchg
incb
or
in
xchg
dec
fs
xor
cld
or
cwtl
arpl
and
imul
lret
xchg
mov
jbe
push
mov
repz
cs
enter
add
lcall
xchg
and
and
imul
mov
shrb
or
sbb
jno
hlt
sbb
outsl
xlat
pusha
pop
add
cmp
clc
mov
sub
jg
push
jge
xor
adc
in
mov
sbb
mov
sbb
cmp
mov
arpl
jecxz
adc
cmp
popa
testb
sti
pop
cmpl
sbb
pop
cltd
icebp
cmc
push
dec
data16
pop
addr16
test
scas
inc
cvtps2pd
rcl
mov
in
xor
js
xchg
sub
xchg
cmpsl
mov
jae
dec
and
xor
push
cmp
push
push
mov
pop
fsts
mov
je
or
inc
sti
dec
imul
test
imul
pop
rolb
xor
jbe
push
jae
imul
or
shlb
cld
cmp
je
add
mov
lret
fcoml
inc
mov
push
testl
inc
dec
enter
jns
ret
sub
push
dec
ss
jle
mov
bound
sbb
cmp
dec
lods
sub
xchg
pop
mov
fdivs
mov
lahf
call
fstpl
sbb
jns
mov
mov
nop
push
push
out
push
push
stc
js
mov
inc
ds
lea
cmp
inc
sbb
push
xchg
dec
jge
out
fdivl
sub
or
cmpsl
int3
or
mov
je
insl
jne
cmp
test
and
push
rcl
or
xchg
out
dec
and
cmp
and
mov
adc
pop
insl
dec
mov
fdiv
rclb
xor
pop
sub
inc
ja
cmp
inc
mov
push
add
push
jl
mov
cmc
js
jno
xchg
sbb
scas
xchg
jne
add
mov
add
xchg
mov
negb
inc
mov
mov
push
dec
ljmp
in
jp
mov
push
mov
xorl
popf
mov
ss
cmp
cmp
lods
jle
adc
lods
jp
mov
fwait
push
dec
add
sbb
cwtl
push
fstpl
lret
push
cli
in
les
jecxz
loope
xlat
push
cmpsb
push
or
jne
jg
dec
addb
jae
cmp
inc
mov
or
or
sbb
movaps
push
in
lcall
sbb
pop
jo
jle
das
sbb
dec
lods
mov
dec
jp
mov
loope
pop
push
xor
sub
jbe
pop
or
and
mov
xchg
mov
jns
adc
and
rorb
rclb
push
sub
sbb
test
inc
jbe
setb
jnp
push
jnp
out
sarl
lods
ret
pusha
pop
out
outsl
aas
movsb
loop
sub
loopne
mov
js
cmc
xor
dec
dec
jns
adc
cmp
mov
jns
sub
xor
aas
mov
xchg
push
add
pop
cmpsb
adc
cmp
jne
fistps
ljmp
iret
sub
insl
int
pop
fisubl
or
std
lods
call
cmp
sar
mov
dec
aas
ds
cwtl
add
jbe
dec
jns
pop
ds
mov
enter
cmp
call
ss
dec
sbb
ss
mov
imul
sub
dec
ret
dec
xor
dec
jecxz
adc
adcb
scas
adc
rcll
cmpsb
xchg
sub
cmp
rorb
cltd
or
inc
in
push
push
xor
nop
sub
fstl
jnp
lahf
jae
repnz
sub
clc
mov
inc
sbb
int3
imul
lret
jecxz
lods
sahf
cmpsb
add
pop
fisttpll
mov
pop
mov
test
and
pop
test
test
cmpsl
cmp
jmp
xchg
add
pop
fisttpll
sarl
xchg
jne
rclb
sahf
ljmp
rcrb
movsl
repz
jo
je
rcll
xchg
add
popf
pop
pop
pop
cmpl
fwait
xor
dec
jb
push
shll
aaa
rcrb
xchg
jns
into
inc
adc
cwtl
jge
jb
xchg
mov
pop
lea
inc
or
mov
sarb
and
xchg
dec
xor
aad
mov
or
addl
lcall
xchg
es
dec
jp
insb
xchg
mov
jne
in
mov
aad
mov
fs
ljmp
push
dec
fnsave
aad
xchg
inc
mov
mov
jbe
or
add
jle
lret
push
jl
mov
push
rcl
dec
fbstp
add
sub
outsl
inc
mov
out
jo
lret
test
inc
lret
pop
insl
fsubrs
jp
mov
in
cmp
data16
lcall
ss
add
mov
add
dec
cmp
lods
out
movsb
pop
xchg
mov
push
adc
icebp
test
faddl
jb
sbb
mov
scas
add
pusha
cli
pop
jle
test
movhps
mov
xchg
ret
rclb
sti
sbb
adc
sahf
add
std
lds
pop
xor
xor
mov
push
sub
lds
dec
inc
cmp
jne
les
dec
stos
adc
or
test
or
rcll
addl
jecxz
and
je
scas
shlb
or
adc
mov
mov
arpl
lds
mov
and
jnp
jp
ja
jne
cmc
arpl
adc
dec
scas
popa
cmc
mov
in
cmp
ds
aad
lcall
dec
xchg
mov
sbbl
jg
repnz
frstor
adc
sbb
pop
cmp
jg
arpl
jmp
or
pop
jecxz
mov
mov
mov
xor
test
leave
or
dec
js
lahf
push
jae
cmpsb
add
mov
mov
scas
fnstenv
les
sarl
pop
mov
jae
sbb
out
or
pop
inc
sbb
pop
ja
push
test
sbb
pop
sbb
fistpll
mov
sub
popf
fnstsw
fadds
pusha
bnd
mov
shrb
test
fcmovbe
cmp
in
lock
cmc
loopne
dec
fnstenv
stos
dec
loop
sbb
dec
stos
and
inc
aad
ret
xchg
imul
cmp
pop
mov
cmc
adc
imul
jne
std
imull
push
sbb
push
lret
pop
imul
mov
aad
clc
pusha
data16
sub
cld
lahf
push
add
lods
ret
lcall
cmp
lock
ljmp
repnz
leave
cltd
addr16
loop
iret
scas
push
adc
sub
add
pop
mov
dec
push
inc
fdiv
bound
mov
gs
mov
jb
jno
mov
mov
aad
imul
mov
dec
fbld
stos
adc
mov
stc
out
jbe
js
fidivs
xor
xchg
fs
jno
stos
shll
push
dec
jg
out
ret
adc
pop
js
inc
lahf
sbb
fs
lock
gs
loop
add
xor
daa
jnp
pop
adc
cld
xchg
cmp
fs
cmp
mov
shll
test
outsb
inc
imull
stos
cld
ror
aaa
int
nop
faddp
or
or
dec
and
ret
sbb
aam
stc
pusha
lods
and
leave
mov
cmp
xchg
in
test
stos
jo
xor
mov
les
bound
mov
lock
add
gs
mov
adc
test
pop
adc
ret
push
jle
xor
in
xor
std
jbe
fstl
rcl
sbb
js
cmpb
sahf
xchg
or
adc
inc
pop
add
mulb
adcl
or
addr16
ret
cmp
mov
sti
jmp
jle
sbb
sub
or
xor
pop
cmp
in
or
fildl
bound
je
adc
aam
jns
sub
mov
mov
jbe
lods
sbb
xchg
in
adc
lds
mov
ret
pushf
sub
hlt
int
push
add
dec
jns
je
pop
aam
ljmp
mov
adc
inc
rcll
scas
lahf
roll
add
leave
loopne
loope
aaa
sub
movsb
jl
sbb
sub
add
jnp
insl
jge
jne
lods
mov
cwtl
icebp
stos
arpl
clc
ss
xchg
xor
mov
aad
sub
sbb
shlb
sar
mov
mov
loope
ja
lret
inc
mov
mov
dec
repz
loop
popf
aad
xor
cmp
cmpsb
ja
sarb
mov
inc
test
push
or
cld
loope
or
adc
sub
repz
jg
dec
rorl
aaa
jb
add
cli
pop
pop
sub
movl
ret
andl
movsb
jg
pusha
mov
mov
loop
cmp
jmp
imul
subb
and
mov
cmp
push
pop
and
leave
cmp
fstpl
inc
ficompl
fs
jge
movsb
xor
pop
mov
aam
ret
push
hlt
ror
sub
inc
lods
jge
fsqrt
mov
inc
mov
sbb
adc
cmp
xorl
sub
mov
mov
sub
sub
stos
into
gs
fs
addr16
jge
mov
clc
jnp
push
pop
cmp
arpl
pop
xchg
negl
int3
cltd
add
out
ja
pop
imul
dec
xchg
fcoms
inc
inc
jne
stos
shrb
or
lahf
inc
leave
dec
ror
ja
jecxz
shrb
cmpsb
jo
and
or
ret
cmpsb
mov
and
fidivrl
fistps
and
insl
pop
insb
pop
popf
test
test
push
or
cmp
icebp
les
jbe
dec
lods
sub
scas
shll
pusha
bound
mov
dec
out
roll
lods
jecxz
jle
dec
loopne
seto
fwait
sbb
mov
sub
fidivrs
fisubs
mov
and
call
xchg
jge
psubw
pop
pop
dec
or
test
mov
mov
mov
jo
stc
iret
cltd
cmp
cwtl
lock
rclb
dec
cmp
sbbb
mov
sub
ret
mov
rolb
mov
mov
adc
cld
sub
mov
jns
mov
or
pop
lcall
rcrb
dec
fs
adc
sub
mov
adc
and
push
mov
mov
test
jno
iret
inc
fcomip
mov
pop
or
jl
xor
pop
push
mov
inc
sub
cwtl
jecxz
xchg
sub
jg
sub
ja
movsb
xchg
mov
or
xchg
xchg
pop
mov
jl
push
addr16
mov
mov
sbb
cmpsl
enter
scas
xchg
fldl
dec
sub
aas
cmpsb
outsb
dec
sub
frstor
out
dec
sbb
push
ss
roll
daa
jae
fdivs
lock
orps
sti
push
adc
test
inc
js
xor
push
rcl
or
lret
cld
push
loopne
movsl
aas
and
icebp
in
adc
mov
cmp
dec
nop
sub
andb
jns
dec
cltd
sbb
in
addr16
jns
inc
std
sub
or
data16
daa
shrb
inc
mov
push
inc
or
mov
xchg
adc
push
cld
ss
mov
and
loopne
fwait
add
test
dec
cmp
inc
nop
popl
pop
int
jg
sub
inc
jnp
jmp
push
addr16
shll
mov
js
cmp
xor
or
ljmp
out
rcrb
pop
or
jo
mov
add
imul
sub
adc
jnp
cmp
pop
push
mov
dec
fstp
iret
adc
imulb
push
xchg
or
mov
mov
fdivr
clc
imulb
adc
jno
mov
fstpl
cmp
aad
inc
jb
adc
stos
test
lds
imul
insl
push
inc
push
push
mov
or
push
sbb
mov
or
inc
inc
jge
cli
mov
adc
loopne
xchg
mov
jns
js
mov
jno
out
pushl
daa
das
in
testb
cwtl
lods
dec
in
push
cmp
fcoms
ss
mov
mov
cmp
ficompl
pop
mov
mov
add
sub
dec
push
dec
gs
pushl
cmpsb
jl
aam
inc
dec
pop
jns
xor
lcall
ss
ja
cmp
fdivp
adc
jno
loop
add
mov
dec
loop
sbb
mov
jb
xchg
movsl
inc
ljmp
jge
pusha
inc
sbb
push
inc
mov
insl
push
cs
or
out
or
repz
clc
adc
jns
adc
test
jo
mov
cmp
mov
pop
add
xchg
cmp
xor
negb
or
aam
mov
inc
dec
stos
lds
or
test
jns
fs
in
imull
dec
pop
dec
sub
push
inc
inc
xor
push
push
xor
pop
push
xor
inc
jb
push
or
sbb
adc
mov
sbb
cmp
and
sbb
out
mov
pusha
mov
dec
or
jge
lods
sbb
insl
gs
and
xchg
es
fwait
sti
xor
inc
jo
jo
divb
or
inc
and
push
std
repz
or
and
pop
xchg
push
sbb
pop
js
cmp
push
xchg
lea
aam
and
mov
mov
and
sbb
push
in
lcall
mov
sub
aad
push
cmpsl
aad
and
cmc
push
pop
je
mov
jne
cmp
xor
push
lea
or
ds
or
or
or
adc
incb
jl
cmpsb
mov
scas
imul
push
dec
mov
sbb
mov
or
pop
pop
cwtl
test
xor
cmp
lea
inc
imul
bound
sbb
and
xchg
aas
arpl
sub
aad
and
pop
mov
cltd
push
lods
push
insb
dec
dec
jecxz
xchg
sub
imul
je
enter
inc
insl
hlt
jbe
rclb
dec
aam
les
inc
and
sub
movsl
inc
jg
movsb
mul
fidivs
xor
and
ficoml
and
pop
fistps
sbb
insl
sub
or
inc
in
filds
jge
cmp
dec
mov
sbb
cwtl
mov
push
scas
fsubs
or
xchg
jge
inc
mov
stc
imul
and
pusha
push
lods
pop
pop
mov
sub
hlt
adc
test
xor
in
sub
ret
jmp
stos
push
xor
xchg
aaa
test
dec
and
mov
jge
and
in
adc
pop
mov
rorb
pop
icebp
inc
in
inc
push
std
imul
scas
lret
cmpsl
iret
pop
xor
fdivrs
imul
push
and
ss
daa
mov
and
and
arpl
ljmp
das
push
pop
ljmp
mov
ds
pop
jmp
jmp
rorb
out
aaa
sub
cmp
or
test
insb
imul
sub
xchg
dec
jns
popf
push
lea
insb
aam
add
push
jg
jl
cmp
jl
neg
xor
inc
mov
sbb
hlt
sub
cmp
xor
lds
adc
arpl
bound
sub
push
div
xchg
pop
sub
lret
adc
daa
mov
xor
into
sbb
iret
rcrl
mov
or
xchg
or
inc
jmp
jns
cmp
xor
and
pop
enter
jge
and
test
xchg
dec
jnp
sub
dec
dec
cmp
jo
pop
imul
iret
push
and
dec
jnp
xchg
mov
jns
scas
cmpsl
mov
adc
in
add
aad
xchg
inc
cmp
enter
sbb
stos
or
shlb
leave
jno
add
call
jne
inc
mov
pushf
jne
fdivs
cs
test
mov
es
shrl
test
cs
adc
add
dec
sub
sbb
cmp
cmp
lods
xlat
dec
xor
push
add
outsb
in
push
jbe
inc
sub
push
inc
scas
inc
adc
stc
lret
xchg
loopne
enter
mov
rorb
mov
enter
call
push
inc
aam
cmp
je
adc
mov
adc
insb
iret
cld
or
ret
mov
insl
xchg
and
and
pop
ds
xchg
pop
mov
mov
shlb
movsb
popa
cmp
mov
add
addr16
mov
mov
mov
loopne
inc
cmp
insl
mov
push
xchg
das
cmpsb
out
mov
xchg
mov
xchg
sub
mov
jge
fwait
cmp
jl
sbb
sbb
and
mov
cmp
mov
or
jp
mov
pop
inc
test
test
sub
jecxz
inc
add
mov
mov
add
add
hlt
adc
out
fiaddl
mov
adc
jge
stos
and
dec
aad
test
inc
push
push
lret
subb
sub
xor
sub
jle
stc
out
lret
add
mov
sub
jns
cmpsl
insl
xchg
mov
dec
inc
je
mov
addr16
aaa
push
cmpsl
and
push
scas
int
rcrb
mov
bound
adcb
stc
iret
dec
in
mov
enter
mov
std
push
cltd
lds
mov
dec
pop
cmp
add
jge
dec
dec
popf
cmp
mov
adc
push
lds
mov
out
gs
frstor
sti
or
dec
add
hlt
test
jge
hlt
addl
mov
sbb
mov
pushf
out
push
out
int3
add
add
mov
icebp
lods
gs
rorl
jmp
bound
out
cmpsl
fxtract
adc
cld
mov
push
cs
adc
cli
jl
in
push
xor
inc
add
enter
in
mov
push
adc
std
and
pop
jns
add
mov
adc
call
sub
addr16
xchg
test
aaa
push
push
mov
mov
pushw
adc
mov
sub
rolb
dec
jnp
pop
cmp
push
xchg
outsb
xchg
ja
cmp
pop
adc
sub
sub
nop
sbb
or
inc
mov
jno
fs
cltd
pop
dec
dec
add
cmc
pop
and
xchg
dec
and
lret
fwait
les
mov
and
pushf
mov
mov
stos
inc
mov
aam
aam
scas
stc
insl
xor
or
mov
rcll
in
shrb
shll
xor
insl
dec
sbb
push
push
adc
loop
cmp
into
sete
aas
xchg
inc
mov
ficomps
fwait
and
sbb
dec
gs
xlat
mov
pop
add
sub
push
xor
in
leave
aam
pop
jg
push
adc
jne
push
or
sub
push
pop
add
shll
add
cs
jno
cs
inc
push
and
pop
jns,pn
stos
jno
mov
je
mov
push
or
mov
out
loopne
sub
lds
shlb
cmpsl
mov
fidivs
add
sub
shlb
das
mov
negb
pushf
inc
cmc
sbb
jmp
mov
popf
pop
push
mov
xchg
adcb
push
stos
jecxz
std
jmp
xchg
mov
das
mov
ret
and
mov
lret
loopne
xor
push
rclb
lret
out
sbb
fistl
addl
inc
jno
sub
add
sub
jno
mov
sub
ret
mov
inc
sbb
cmpsl
imul
mov
sbb
sbb
push
iret
mov
lods
sub
jp
imull
pop
fldl
pop
or
push
loope
lcall
pop
hlt
repz
jmp
shrl
lret
mov
pop
sbb
stos
sub
xor
push
stos
ljmp
insb
xchg
inc
jge
js
or
stc
aaa
pushf
jg
pop
push
jmp
push
sbb
mov
sbb
push
mov
xor
pop
lods
lret
mov
add
mov
pop
xchg
mov
je
js
add
data16
je
jnp
insb
das
ficomps
int3
push
mov
xor
dec
push
fsubrs
inc
mov
xchg
and
lods
jne
aam
mov
inc
lods
lea
stos
jae
rorl
mov
push
inc
icebp
mov
cmp
mov
xchg
shrb
pop
sbb
sbb
mov
sti
and
pop
mov
push
lret
in
add
xchg
pushl
jbe
cltd
add
sbb
mov
push
pop
ja
daa
sub
ror
or
jo
shlb
in
cwtl
sbb
xchg
jg
push
es
stos
jns
nop
enter
and
push
idiv
cmp
insb
jne
pusha
loop
sti
jp
lcall
jb
and
rcll
adc
add
movsl
xor
pusha
lds
cmpsb
jne
ja
ret
dec
ss
sbb
push
outsl
imul
push
das
cld
test
iretw
push
xchg
or
popa
push
sbb
cltd
and
test
jp
arpl
sub
movsb
jg
inc
addr16
mov
out
subb
in
out
lock
fwait
push
inc
mov
insb
fucomi
cmpsl
sar
and
sub
xor
add
push
in
jns
jae
int
xor
pop
jp
xchg
pop
fcompl
out
or
ret
mov
imulb
sbb
mov
fwait
loop
add
les
aaa
stos
sbb
jne
fiaddl
imul
cs
repz
adc
repz
fucomip
and
sub
bound
dec
lahf
add
push
sbb
mov
add
cmp
xor
shlb
or
cwtl
jns
xchg
pop
lock
inc
or
mov
dec
sbb
dec
sbb
js
xor
out
aaa
sbb
loop
ljmp
xchg
test
fisubrs
aaa
mov
aaa
pop
sahf
andl
add
data16
inc
movsl
and
icebp
in
idivl
test
add
sbb
imul
sbb
or
pop
rcrl
loopne
or
lcall
add
inc
dec
xchg
add
cs
sbb
adc
and
jnp
sub
sub
cmc
jle
movsb
testb
pop
xor
sbb
popl
cld
jl
jnp
push
adc
adc
and
ja
pop
shlb
popf
mov
sbb
mov
mov
and
fcmovu
std
dec
inc
fwait
test
pop
pop
fwait
jle
test
fwait
sbb
shlb
push
or
and
sahf
cmp
pop
aas
popa
push
sahf
outsl
jns
jg
push
add
push
out
in
jp
mov
push
adc
jge
cmp
sar
sub
cmc
pop
jmp
jo
sti
mov
jne
push
fisubs
aaa
outsb
aam
sub
cmc
lsl
or
leave
sahf
or
stos
add
fcmovne
out
fcompl
lret
gs
sub
or
xor
sar
sub
lods
stos
inc
adc
inc
sbb
in
es
sbbb
push
push
pop
loop
xchg
jnp
sub
lea
and
jne
popa
xchg
ja
notb
sbb
push
je
mov
xchg
enter
out
cmpsl
adc
lcall
jo
sbb
jecxz
pop
daa
add
test
and
pop
push
icebp
jae
arpl
mov
pop
daa
rolb
pop
pushf
fiadds
lods
adc
fists
cli
cmpsb
jnp
pop
cmp
iret
add
sub
and
aad
and
mov
mov
inc
or
outsb
xor
int
inc
add
stos
rcl
movsb
inc
out
mov
es
jo
add
inc
push
mov
xchg
xlat
cmpsb
add
cwtl
xchg
add
fs
insb
inc
pop
jg
outsb
add
and
pop
adc
imul
add
sub
or
js
jns
mov
lock
loopne
sub
push
or
jg
pop
fmull
sub
sub
test
cmp
inc
cmp
sbb
daa
fwait
dec
cmp
pushf
popa
hlt
add
loop
mov
adc
xchg
push
mull
push
inc
insb
cmc
or
ud2
or
stc
pop
cmc
xorb
cmp
jmp
out
out
cli
push
arpl
and
aad
leave
sbb
daa
out
dec
push
add
sub
lds
cmc
das
fs
sub
es
mov
imul
cmp
pop
fcomps
push
inc
enter
adc
push
mov
mov
sbb
cmp
xchg
cmpsl
cmp
mov
in
fimull
and
sub
jnp
xor
shll
mov
cwtl
ljmp
fists
adc
sub
stos
push
sub
sbbl
enter
lods
adc
cmp
mov
lods
rdpmc
xchg
bound
fnstsw
add
ja
adc
gs
adc
int
pop
xchg
aam
lea
mov
fstl
cmp
addr16
ret
pusha
leave
add
xchg
test
mov
mov
mov
inc
fs
sub
xlat
cmpsb
jle
sahf
aas
les
outsb
sub
sbb
fstpt
pop
xchg
dec
arpl
push
outsb
stos
jae
in
mov
shll
insl
lea
push
xlat
xor
and
xchg
popa
std
jge
pop
xlat
inc
and
cltd
xor
ret
divl
sbb
xchg
jnp
sub
push
lods
jl
inc
inc
push
mov
in
popf
jae
pop
adc
sub
adc
jns
and
lret
outsl
xchg
or
bswap
pop
sub
pop
cmpsl
pop
repz
sbb
inc
in
cmp
xor
aas
mov
ds
int3
pop
pop
jnp
jns
test
and
nop
jno
nop
jns
stos
loopne
jmp
xchg
push
sbb
hlt
out
or
int3
cltd
dec
adc
into
or
std
sub
or
and
lcall
jnp
push
push
js
fdivrs
das
dec
jp
dec
mov
ret
jg
push
jae
mov
lahf
sub
push
std
pop
je
adc
inc
push
sub
aam
pop
dec
xor
ja
sbb
inc
pusha
xchg
or
mov
mov
repz
daa
leave
aam
push
les
cli
dec
sub
push
inc
push
jp
movsb
mov
cli
shll
xor
fdiv
ljmp
add
jnp
mov
pop
pop
cmp
jle
cmp
clc
lret
loop
push
scas
mov
test
cltd
jge
test
aad
out
mov
clc
add
inc
out
cmp
jge
scas
mov
bound
adc
loope
sbb
pop
dec
push
sti
pop
jbe
pop
or
dec
sbb
push
cmp
jbe
adc
xor
or
adc
mov
mov
lcall
stos
jecxz
shrl
mov
dec
stc
ss
inc
xor
sbb
insb
cmp
mov
mov
push
cmpl
mov
dec
cmp
push
lahf
inc
int3
jge
mov
jb
pop
scas
sub
fildll
inc
filds
jle
cli
std
mov
dec
mov
mov
and
dec
adc
cmp
testl
jle
repnz
les
xor
adc
sti
mov
shlb
push
mov
ret
pushf
fstl
dec
jne
jb
fidivl
pop
cmp
jecxz
iretw
or
movsl
sub
popa
xchg
icebp
je
inc
lods
mov
divl
push
mov
sbb
xor
jno
andb
mov
test
add
mov
xchg
mov
push
adc
insb
call
or
push
aam
fcmovnb
roll
mov
push
in
push
test
jl
push
cmpsb
addr16
gs
and
lret
mov
push
pop
std
inc
inc
mov
mulps
mov
xlat
fildl
stos
aaa
mov
data16
adc
ret
scas
jg
jnp
in
jo
push
jbe
cmp
push
mov
shll
mov
idivb
push
xchg
ret
push
out
jno
cmp
out
and
pop
fidivl
pop
push
sbb
push
enter
lret
or
pusha
adc
jg
jns
hlt
xor
divb
sbb
xchg
sbb
push
iret
and
enter
jg
pop
outsb
cmpsl
push
in
mov
mov
xchg
hlt
sub
mov
or
lock
adc
fimuls
movsl
inc
mov
dec
pop
dec
mov
pop
push
shll
int
push
mov
sarb
pop
cmpsb
pop
aaa
push
pop
pushf
mov
pop
xor
pushf
in
add
mov
xchg
jo
leave
rorl
inc
push
jecxz
xlat
adc
lods
sbb
pop
clc
dec
mov
sub
vmwrite
stos
jne
mov
sbb
sbb
dec
xchg
adc
mov
adc
loopne
sti
pop
aas
stc
jle
filds
call
sub
inc
mov
sbb
or
push
pop
dec
and
lods
sar
push
in
pushaw
enter
add
inc
dec
cmove
imul
out
jl
sbbb
test
or
or
cltd
repz
das
inc
pop
sbb
jge
adc
jb
clc
pop
push
cs
into
sub
outsl
sbb
pop
lea
pop
mov
lret
test
push
and
rorl
inc
inc
cs
add
andl
cmp
loope
push
fs
stos
lret
jg
push
aad
mov
dec
or
mov
push
jbe
stos
lods
rcl
into
cs
mov
xor
out
inc
enter
xchg
xor
rolb
or
mov
mov
push
add
outsl
mov
xor
inc
push
cmp
push
push
push
pop
xchg
cmp
loopne
into
test
cli
lcall
and
jbe
pop
fidivrl
xchg
imul
shll
sub
dec
jno
push
clc
iret
insb
xor
icebp
icebp
lock
nop
out
adc
mov
mov
addb
xlat
pop
aas
icebp
rcrb
or
add
in
xchg
jge
jp
dec
and
data16
push
push
push
inc
test
xlat
sbb
sub
mov
ds
push
add
push
out
outsb
push
push
and
mov
rolb
sub
test
mov
scas
push
xchg
mov
aas
addr16
fistl
in
faddl
adc
popf
gs
or
cli
inc
adc
addl
pop
xor
mov
in
inc
mov
cld
por
test
push
sub
or
mov
sub
add
dec
xor
or
dec
sbb
mov
in
cmp
inc
dec
jp
sarb
mov
dec
add
lods
mov
mov
pusha
push
jmp
mov
test
js
mov
fldl
fwait
push
daa
sub
sbb
xlat
mov
push
jge
inc
push
inc
sti
adc
lcall
xchg
push
pop
mov
addl
js
pop
mov
lods
popa
fwait
rcrl
test
pusha
shrd
mov
mov
push
jp
cld
pop
cmp
daa
sub
mov
mov
inc
je
mov
pop
push
sub
outsl
shr
xchg
cmp
mov
mov
xor
xchg
ret
mov
jg
mov
scas
insb
sbb
mov
mov
add
clc
pushf
push
adc
orb
cmp
aam
hlt
addb
enter
cltd
mov
ja
aas
notl
fsubp
jg
push
ds
adcb
sub
dec
in
les
inc
xlat
test
jae
adc
mov
dec
or
outsb
and
clc
sbb
rcrb
aas
stos
rclb
push
mov
sbb
and
push
nop
add
repnz
and
adc
arpl
jns
xchg
jnp
testl
adc
adc
or
ror
push
jl
mov
cmp
aam
cmove
push
mov
inc
loopne
or
out
jle
adc
mov
pmulhw
fists
sbb
cltd
mov
pop
mov
adc
jg
mov
call
movsl
inc
cmp
cmp
clc
or
or
push
mov
sbb
sub
dec
push
cwtl
std
fistl
jle
das
push
sbb
and
insb
loopne
jb
push
mov
dec
lret
addb
cmp
jge
push
fs
scas
gs
divl
inc
imul
jo
adc
aas
jnp
pop
scas
jl
testl
shll
out
dec
adc
cwtl
gs
popa
mov
aas
push
loope
scas
pop
inc
mull
fwait
int
push
adc
push
add
jne
add
je
jo
jns
mov
cmp
pop
aas
pop
loope
scas
push
sbbl
and
and
add
sub
add
std
arpl
or
fnstcw
aaa
adc
mov
ror
xchg
fstpt
mov
xchg
mov
mov
inc
sbb
add
xor
fnstsw
data16
jns
inc
fldenv
adc
jp
or
pop
testl
or
or
inc
push
mov
stos
enter
fdivrs
sub
push
jp
insl
popf
sbb
and
jp
jg
adc
mov
cmpsb
add
jge
repnz
pop
stos
adc
adc
and
sub
inc
cmp
int
xchg
in
xchg
sbb
aad
mov
mov
ljmp
xor
enter
mov
loope
mov
lds
mov
sbbl
pushl
inc
xor
call
push
pop
lea
inc
xor
fistpll
movsl
pop
adc
jnp
pop
lods
mov
xchg
dec
mov
sbb
mov
push
xchg
popl
sub
pop
cwtl
fstpt
sub
out
loopne
sbb
std
jg
rcrl
sahf
sbbb
pop
push
push
inc
xchg
xor
rcrl
cmp
mov
sbb
hlt
jae
jbe
dec
sub
iret
add
sbb
scas
cli
aam
xchg
testl
mov
cmp
cmp
je
add
cmp
lods
pop
sub
imul
jne
lahf
not
lock
inc
fstpl
inc
cmp
sub
ret
inc
sbb
pop
sbb
jg
lret
cmp
mov
mov
movsl
adc
mov
jle
xor
xor
push
add
shlb
rsqrtps
pop
das
inc
sbb
loopne
push
testb
lahf
and
dec
mov
orb
and
std
jb
xchg
and
repz
sub
ret
lret
pushf
inc
dec
xchg
shlb
jne
cmp
adc
out
cwtl
mov
jns
loopne
jbe
or
or
adc
dec
or
mov
test
cwtl
je
dec
xchg
mov
xchg
adc
shl
mov
lds
shlb
cwtl
cmp
movsl
sub
lret
jle
or
pop
add
push
and
xor
jns
mov
adc
rcrl
ret
jns
jg
jne
xor
lahf
and
or
jp
int
pop
fnstsw
jg
pop
rcr
add
add
and
xchg
popf
outsl
add
push
cltd
jecxz
xchg
cmpsb
repz
mov
mov
dec
xor
hlt
pop
xchg
adc
pop
aaa
and
adc
sub
inc
aaa
gs
dec
push
jns
addr16
add
ret
push
push
jb
popa
out
popa
jmp
mov
lods
mov
pop
cmp
pop
mov
test
pop
adc
add
mov
xchg
add
mov
mov
mov
ffree
pusha
int
mov
or
xchg
ss
gs
mov
mov
xor
sub
add
jp
add
mov
in
mov
ret
add
mov
pop
rcl
inc
call
rcl
xchg
pusha
dec
cmp
popf
cmc
aam
add
das
adc
fimuls
rcr
iret
mov
adc
fwait
push
sbb
push
add
push
cmp
push
push
sbb
mov
push
out
fnstenv
jle
or
shrb
stos
mov
aam
jecxz
out
inc
outsl
andb
pop
mov
loopne
cmpsl
push
dec
xchg
push
incb
pop
aam
int
jl
mov
sbb
inc
inc
pop
sbb
dec
jne
or
or
pop
jo
pushf
push
cmpsb
fnstenv
in
icebp
mov
int
jge
shrb
or
sti
jle
fs
sbb
sub
scas
enter
int
mov
sbb
pop
jl
xor
popa
sahf
jnp
adc
xchg
andb
psubw
pushf
dec
stos
adcl
cs
push
mov
dec
xor
ljmp
mov
shrb
xor
jne
jnp
pushl
pop
mov
test
fcmovbe
push
clc
sub
in
pushf
pop
dec
fists
cmp
mov
addl
pushl
mov
mov
add
push
dec
jbe
pop
xor
test
lds
mov
cmp
pop
sbb
lea
int
xchg
pop
cmc
push
push
xchg
cld
add
enter
popa
int3
mov
add
in
das
jae
aam
push
daa
ret
cld
dec
xchg
add
insl
aam
xchg
stc
pop
jno
mov
jns
jns
lods
fsubl
pop
jg
push
pop
mov
aaa
jg
insb
xor
stc
cmp
push
decl
dec
fs
addr16
sub
jbe
insb
push
movsl
inc
xor
mov
jns
addr16
pop
mov
sbb
test
mov
push
cmpsl
popf
out
or
xor
je
sub
cmp
aaa
out
arpl
or
jae
sub
loope
fsubrs
push
mov
xor
repz
out
pop
push
xlat
adc
and
or
clc
pop
mov
imul
mov
test
fadd
cmpsb
out
sbb
add
mov
push
adc
in
shll
popf
jmp
or
aas
fstpl
data16
cwtl
or
inc
dec
cmp
ret
je
fldt
dec
push
movsl
xlat
jmp
pop
and
sbb
sbb
or
cmp
leave
jbe
ljmp
add
iret
dec
lret
shrl
push
test
movsl
pop
jns
mov
mov
inc
sub
pop
sub
fnstsw
ja
mov
adc
iretw
xchg
xorl
sub
les
mov
leave
insl
xor
mov
repz
cmp
sbb
lret
mov
out
fldcw
je
inc
xchg
mov
shrl
inc
subb
jno
or
fisttpl
ds
cmp
lock
mov
or
dec
shlb
mov
dec
sbb
mov
arpl
or
mov
into
inc
cmp
scas
cmp
push
dec
lea
sbb
cmp
int
dec
mov
add
sbb
out
pop
nop
pop
sahf
adc
jp
add
push
in
pop
aaa
out
push
in
push
jnp
seto
test
gs
je
jbe
fistpl
aam
and
ret
pop
or
sub
xlat
daa
pushf
hlt
cmp
movsl
add
dec
pop
push
xor
aaa
sub
aaa
jle
loope
push
lret
or
imul
in
jg
addl
adc
xlat
adc
dec
cmp
bound
mov
mov
cli
cs
inc
push
das
das
stc
jp
jnp
test
insb
push
push
jge
pop
gs
mov
in
sub
cmpsl
jns
mov
jecxz
sub
dec
daa
addr16
stc
aaa
dec
jns
pop
imul
jns
repz
arpl
stc
cltd
and
or
dec
xchg
or
cmp
xor
push
fisttps
xchg
lock
das
stc
and
mov
push
inc
sbb
pop
enter
ja
mov
imul
sub
sbb
int3
jo
add
cli
sub
pop
ds
fs
popa
cmpsb
test
int
adc
xchg
jae
mov
fwait
nop
fnstenv
push
push
cmp
outsb
cltd
movsb
stc
cmp
and
xlat
push
inc
aad
pop
adc
xchg
or
xchg
xchg
jg
add
sbb
repnz
jl
stc
sti
or
int3
xchg
cld
add
ret
pusha
cs
inc
aad
xor
push
dec
push
pop
or
pop
adc
lds
insb
scas
dec
incb
imul
mov
les
xor
mul
pop
icebp
shl
jp
sti
xor
mov
jnp
cli
ret
aas
jbe
pop
cmc
xchg
push
loop
push
bound
loopne
loopne
jne
stc
jmp
adc
out
bound
movl
xchg
mov
jp
add
dec
shll
push
cli
shll
fidivl
push
mov
andb
and
lcall
xor
pusha
pop
push
and
inc
js
sbb
or
mov
repnz
icebp
nop
xchg
sbb
sub
push
add
push
in
mov
or
or
adc
pusha
fs
stos
cmp
roll
mov
pop
mov
ret
push
in
shl
inc
cld
jae
lret
les
shrb
movsb
and
mov
mov
outsb
movsl
enter
pop
rclb
sub
imul
iret
adc
sbbb
inc
enter
repnz
push
inc
pusha
push
das
cmpsl
data16
arpl
xor
loopne
insl
ret
scas
jg
daa
loop
dec
cmp
stos
imul
push
mov
sbbb
into
push
nopl
hlt
fs
jae
scas
xor
push
dec
addb
adc
jno
lcall
cmpsl
cmp
cmp
or
mov
mov
lods
ds
out
fcomip
dec
pop
or
mov
icebp
mov
sbb
add
jno
dec
and
mov
repnz
fidivrs
add
jl
repz
cmp
aad
fldt
in
rol
sarb
xchg
sub
fdivr
pop
add
inc
push
xor
inc
and
std
cld
sub
negl
adc
mov
push
pop
aad
mov
and
xchg
aam
sti
shrl
mov
push
mov
pop
test
xchg
fwait
xchg
cmp
push
add
sbb
dec
testl
std
out
sbb
lods
mov
scas
sti
dec
or
int
test
lds
ret
fldt
ljmp
push
push
rcrb
cmp
out
stos
sahf
mov
cmc
sub
std
outsb
scas
insl
call
jnp
and
dec
das
xchg
into
test
xchg
lea
sbb
or
popa
xchg
mov
iret
xor
mov
push
addl
cmpsb
jne
and
mov
push
jmp
dec
adc
lret
push
jo
mov
jb
jg
mov
adc
xor
aad
mov
in
mov
loopne
lcall
enter
or
adc
mov
add
add
cmp
sub
mov
out
ljmp
imul
adc
adc
lahf
mov
loopne
out
push
ds
cmpsb
mov
inc
out
pop
mov
cmpsl
clc
pop
inc
jbe
dec
int3
mov
stos
sarl
fcoml
aaa
outsl
pusha
push
add
es
out
outsb
xchg
imul
inc
cmc
mov
es
sarb
mov
adc
cld
cmp
and
mov
movsl
hlt
pop
push
sbb
sbb
push
xor
xor
ljmp
mov
sahf
add
lcall
fst
jle
jnp
or
out
out
ljmp
push
mov
addr16
fcoms
sahf
mov
push
in
dec
adc
mov
or
add
dec
xor
cmp
arpl
push
mov
clc
or
jle
cld
pop
mov
xchg
mov
push
repz
fadd
or
jno
pop
adc
es
stos
les
mov
xor
mov
pop
or
push
cwtl
mov
insb
lock
inc
jae
inc
and
inc
bound
push
pop
addr16
pop
push
cmp
sar
add
jbe
lds
mov
inc
adc
push
add
cltd
dec
xchg
in
push
iret
sub
xor
les
and
push
cmpsl
push
lret
dec
shl
mov
lea
cmpb
jae
out
fisttpll
xor
mov
sbb
mov
sti
and
imul
mov
mov
leave
or
inc
jb
sbb
sub
imul
and
push
cltd
mov
fwait
jae
jge
aaa
inc
aad
sbb
mov
add
push
aam
out
int3
mov
inc
xor
push
shl
lcall
jno
lods
push
dec
push
fwait
je
sbb
cmp
xchg
sahf
inc
fstps
ret
bound
mov
in
clc
cmp
xchg
cmp
inc
mov
in
add
xor
xor
data16
add
movsl
daa
mov
push
fisubrs
sbb
fstpl
and
jbe
adc
jl
or
mov
rclb
aaa
scas
cli
jg
push
mov
movsb
jmp
cmp
pop
shll
lret
nop
jno
cli
xor
inc
xchg
js
outsb
xor
push
ss
inc
data16
jne
inc
mov
hlt
js
xchg
fnsave
pop
sub
aaa
rcrb
dec
adc
mov
jge
cld
fmull
jne
mov
iret
pop
dec
pop
lods
dec
add
insb
shrb
and
xor
pop
in
xor
mov
sub
pop
shll
out
ljmp
cmp
cmp
or
push
aad
ljmp
push
inc
int3
and
mov
jo
cmp
ljmp
inc
push
shr
push
xchg
lcall
sbb
hlt
jmp
es
xor
scas
jns
xor
fstpt
or
test
insb
inc
xor
loopne
sub
stos
sub
lea
sub
push
fldt
add
cld
aaa
ffree
inc
push
jbe
xor
adc
jae
bswap
lret
adc
inc
movsl
fwait
adc
ffree
ds
out
pusha
or
dec
push
or
adc
sarl
pop
jb
test
jae
inc
push
dec
sbb
lds
push
fldcw
nop
js
jns
xchg
mov
fstps
int3
or
mov
pop
loopne
sub
push
movsl
cli
inc
call
test
rclb
add
inc
fiaddl
cmpsl
adc
lcall
stos
outsl
dec
iret
or
push
adc
pop
jmp
jge
pop
or
or
xchg
mov
aas
mov
inc
add
push
mov
in
mov
scas
dec
lock
xchg
push
adc
sub
lret
sbb
insb
loopne
pusha
lret
xchg
mov
push
test
sub
scas
sar
sbb
jl
es
sub
mov
loop
pop
mov
lods
mov
xor
inc
mov
xlat
loop
cltd
adc
aam
stos
aas
sbb
inc
into
xchg
or
repz
test
dec
pusha
lahf
push
adcb
sti
jbe
mov
push
lock
or
xchg
or
pop
mov
mov
cltd
mov
sbb
subl
push
add
outsl
push
cmp
adc
imul
cmp
inc
inc
popa
lds
test
pop
xlat
jnp
cld
int3
inc
adc
mov
sti
lcall
inc
fmull
out
aam
rorl
mov
daa
jnp
sbb
repz
sub
pop
mov
and
mov
adc
cmp
pop
jmp
ds
dec
loopne
mov
pop
pop
jg
fisttpl
dec
fisttpl
and
and
imul
pop
xlat
int3
aaa
pushf
sbb
stos
dec
mov
adc
jb
addr16
clc
sub
out
mov
cmpsb
out
aas
inc
rcll
or
or
cmp
push
fsts
adc
aaa
push
sahf
mov
outsl
cmp
nop
jg
push
sub
rcrl
rcll
or
jl
inc
jns
dec
add
aam
movsl
jns
pusha
pushf
xchg
xor
cmpsb
adc
mov
xor
sub
cmpsb
cmp
leave
fs
jle
jno
jne
inc
mov
rcrb
add
inc
sbb
sbb
mov
movsb
cmpb
sub
js
fisttpl
je
out
ljmp
push
bound
aas
scas
pop
mov
xchg
gs
loopne
or
sbb
inc
add
inc
sub
mov
popa
lahf
cmc
out
pushl
inc
push
adc
mov
imul
push
add
aam
jecxz
arpl
popa
jle
push
xor
sbb
pushf
add
or
jmp
mov
sbb
or
or
mov
fadds
frstor
arpl
cmpsl
fidivs
xchg
out
inc
repz
adc
divb
xorb
push
je
pop
jae
push
push
int
scas
adc
xchg
out
test
mov
sub
sub
inc
aad
and
push
push
and
cmpsb
imul
push
lock
or
xchg
and
test
jge
jne
les
or
jb
and
les
and
and
cmpsb
mov
rcr
jp
shl
cs
pop
jge
mov
inc
cli
es
jbe
pop
cmp
xchg
lret
xchg
pop
cmc
mov
xchg
jmp
sbb
jb
ror
das
mov
xchg
jg
cli
les
daa
pusha
dec
inc
imul
push
mov
fs
test
in
sub
loop
stos
scas
mov
adc
ljmp
out
shrl
pop
cltd
aam
jb
movsl
out
mov
sub
mov
repz
xchg
cmpsl
decl
or
adc
mov
jmp
aad
aas
add
pop
inc
dec
push
sub
out
int
mov
negb
ljmp
int
lods
and
shrb
stc
outsb
pop
pop
adc
push
outsb
sub
test
inc
dec
adc
or
add
aam
dec
and
cmp
jge
movsb
cmc
add
pusha
hlt
sub
cs
ret
sub
dec
imul
push
insb
lret
gs
mov
fcoml
mov
sub
icebp
sub
and
hlt
and
mov
and
sub
mov
cltd
pop
negl
or
rorl
inc
xor
cmp
sbb
fidivs
ds
push
or
jge
or
in
mov
cmp
hlt
movl
stos
pushf
data16
and
fsubr
jno
lcall
into
faddl
stos
or
push
nop
test
jle
mov
jl
lahf
cmpsb
nop
sub
jnp
cltd
arpl
dec
mov
sbbl
push
lcall
rcl
pop
test
sbb
out
das
int3
mov
mov
cmp
mov
inc
xchg
ss
pop
add
add
push
daa
fwait
test
add
lods
jge
lods
iret
pop
inc
add
or
rolb
pop
jne
dec
or
push
movsb
jne
cltd
or
push
int
arpl
cld
mov
adc
outsl
xchg
stc
in
add
cmpsb
cmp
outsl
popf
push
repnz
sub
lods
push
cmpsl
std
lds
lods
xor
test
sbb
jp
in
sbb
inc
sbb
divb
cwtl
sub
clc
add
inc
popf
sbb
arpl
dec
mov
xlat
or
pusha
jne
cltd
je
push
jp
imul
fs
jne
imulb
pop
imul
dec
dec
push
stos
pop
or
ljmp
add
imul
sub
mov
fbstp
sbb
inc
cmp
cmpsl
sub
pop
pop
push
xchg
jle
divb
xchg
adc
das
xor
int3
sysret
fiadds
or
inc
cmpsb
sbb
add
adc
xor
push
lock
cmp
cld
stos
push
shlb
pop
insl
jae
and
sub
outsb
or
leave
push
scas
push
mov
cmp
mov
xchg
shll
addr16
jecxz
cmc
cmc
pop
or
mov
pop
pop
fldenv
mov
adc
push
add
lds
aam
push
adc
sbb
fbld
je
cld
push
push
xlat
and
aaa
or
add
mov
test
flds
insb
stc
add
push
scas
jp
mov
adc
dec
insl
cmp
sbbb
rol
mov
or
xor
test
cmpb
lcall
add
lcall
mov
xchg
es
xchg
arpl
pop
mov
bound
jnp
pop
inc
jns
lret
mov
cmp
lock
aad
jp
xchg
fdivrl
sub
in
fdiv
jmp
push
ret
pop
aaa
cmp
xlat
adc
js
test
cmp
call
cmp
mov
jmp
adc
fisubrl
or
add
gs
cmp
and
mov
sbb
fwait
mov
push
dec
and
std
sbb
xorl
addr16
pusha
insl
sbb
cmp
test
jecxz
stc
push
int3
cmpsl
push
dec
jecxz
mov
js
cmp
stos
pop
clc
xchg
clc
inc
fadd
aaa
pushf
test
mov
repz
mov
lds
inc
lea
es
test
push
jecxz
mov
mov
rcrb
mov
enter
pop
negl
xchg
mov
ds
mov
dec
pop
and
mov
mov
test
add
mov
and
push
pop
push
sbb
push
pop
aam
mov
repz
sbb
and
jb
pop
xor
imul
sbb
ret
call
movsb
push
sbb
push
aam
adc
pusha
arpl
mov
movsl
adc
jae
cmp
sbb
xorb
adc
xchg
mov
movsl
mov
mov
lret
outsb
pushl
mov
jnp
addl
cmpsb
add
out
xor
sub
and
sbb
adc
adc
pop
mov
sub
inc
sub
int
or
mov
push
or
sub
into
cmpsb
push
lahf
and
dec
and
out
loop
loope
inc
out
iret
mov
rcll
out
cmpb
pop
or
testb
add
vmwrite
xchg
aam
je
lahf
mov
push
enter
ljmp
mov
clc
pop
sub
jns
pushf
jg
or
movsb
test
movsl
inc
imulb
data16
outsb
pop
les
xchg
call
push
mov
and
ret
imul
notl
jge
mov
insb
xchg
and
cmp
ficoml
xor
push
or
mov
push
xor
jge
sti
mov
sub
ss
cld
hlt
mov
add
ss
jle
sub
loop
pop
mov
sub
push
add
imul
push
add
rcrl
popa
xorl
inc
mov
jae
jmp
xor
mov
sub
inc
dec
mov
xchg
repz
movsb
jb
popa
push
add
into
sub
xor
sub
mov
and
add
rcrb
into
sub
cltd
cmpsb
sbb
xor
sbbl
dec
sti
sub
xorb
jnp
inc
test
or
aad
pop
xchg
or
inc
aad
mov
int3
jae
sub
mov
cmpsl
xchg
sbb
aaa
xor
pop
int
add
dec
movsb
or
jge
mov
mov
ss
pushf
add
daa
outsb
sbb
sub
or
daa
mov
or
inc
sub
mov
outsl
das
push
cmc
cmp
pop
pop
lods
sub
push
ss
push
pop
sub
and
das
sub
sub
cmp
rcrl
bound
loop
lds
into
in
negl
roll
rorl
pop
cld
scas
into
daa
outsl
loopne
cld
add
mov
ljmp
jmp
sub
imul
xor
jmp
leave
inc
pushf
mov
dec
xlat
sbb
mov
sarl
or
mov
sbb
push
mov
push
jb
inc
aaa
sbb
movsl
push
dec
aam
je
cmp
bnd
fistpll
xchg
add
int
out
je
and
std
int3
mov
cmp
push
xor
sub
pop
mov
and
mov
leave
sbb
dec
jge
or
daa
dec
push
fistpll
inc
push
or
dec
bound
jge
sbb
pop
ljmp
mov
ja
hlt
ljmp
stc
mov
jb
inc
aam
jbe
xor
cmpsl
cmp
push
loop
loop
mov
stos
pop
push
subl
data16
iret
dec
adcl
xchg
jp
push
add
sbb
mov
lock
out
dec
pop
pop
lret
push
mov
cld
mov
adc
pop
push
inc
ret
sub
loope
sub
push
lods
out
negl
and
test
adc
add
cmp
sub
out
dec
ljmp
rdtsc
int
int
cs
aaa
push
sub
and
or
enter
mov
mov
cmp
int
sarl
test
iret
jmp
frstor
sub
cli
sahf
repz
call
lea
push
mov
xor
push
out
cmp
scas
int3
xchg
push
fisttpll
push
mov
or
xor
sub
pop
and
mov
dec
jecxz,pn
inc
add
sub
shll
test
add
addr16
bswap
dec
pushf
sub
or
lods
jno
or
inc
cmp
stc
fisttps
pop
inc
ss
push
add
subb
push
fwait
xor
jo
outsb
fistps
int
fcom
fistl
add
mov
leave
xor
aam
xchg
addb
aas
xorb
lock
test
scas
sub
stos
mov
pop
or
push
lret
stc
test
test
cwtl
fwait
add
cmp
push
andl
mov
sub
inc
outsl
fldt
mov
or
dec
push
xchg
mov
nop
mov
mov
lret
jne
in
mov
in
and
adc
popf
mov
into
cltd
aaa
or
cmp
test
sbb
fidivl
sti
je
jae
imul
and
pop
mov
add
pop
call
aas
push
push
cmp
ss
push
inc
mov
inc
adc
jnp
push
cwtl
pop
inc
in
mov
cmp
loopne
adc
pop
cmp
sar
ljmp
stos
push
loope
sub
imul
sub
aad
dec
mov
lret
dec
and
lea
xchg
sbb
mov
add
add
test
ss
movsl
xchg
inc
sti
negb
jno
xchg
add
mov
add
xor
adc
divl
sbb
sub
leave
lods
push
jl
lret
jle
sub
cwtl
mov
mov
stos
cmc
imul
imul
mov
jns,pt
and
dec
das
das
jb
arpl
push
test
popf
push
sbb
inc
inc
sub
dec
push
test
or
fwait
pop
sub
cmp
add
jp
rcrb
mov
adc
mov
dec
xlat
sub
cmp
imull
shrl
out
pop
outsb
xchg
add
nop
add
jl
xchg
adc
jl
jbe
je
scas
pop
test
mov
adcl
ret
lret
inc
insl
lock
jmp
cmp
add
icebp
push
mov
out
xor
cmpsb
inc
mov
push
sbb
ds
sub
dec
push
outsb
push
and
test
jne
out
cmp
cltd
aam
icebp
ss
inc
leave
mov
adc
sbb
mov
js
sbb
mov
mov
mov
jmp
orl
and
cmc
xchg
jmp
pcmpeqd
and
xchg
addr16
pop
fdivr
mov
jmp
mov
pop
mov
jb
jle
mov
cld
gs
mov
pop
aas
inc
mov
clc
sub
ret
pop
movsl
es
xor
xor
add
jmp
or
stos
xor
pop
xlat
test
stc
or
scas
fadd
dec
push
dec
dec
cmp
mov
dec
aad
aas
inc
push
jns
outsl
jle
dec
rolb
mov
mov
gs
pop
xlat
or
push
sub
loopne
mov
shl
pushf
call
das
stos
push
push
adc
gs
mov
inc
jnp
sarb
test
ret
xor
arpl
popf
and
fisubl
push
mov
movsl
mov
dec
push
push
pop
jp
cltd
rcrb
adc
xchg
lahf
outsb
in
rorb
add
rcl
inc
pusha
mov
rcrl
aas
push
xchg
sub
xor
and
inc
mov
vmovntps
in
lahf
out
jne
std
scas
pop
sub
test
pop
jg
push
pop
ret
in
push
ljmp
hlt
aad
adc
mov
mov
shlb
pop
xlat
repnz
outsl
cmp
sub
addr16
mov
mov
xrelease
stos
mov
idivl
lret
dec
cwtl
mov
sub
outsb
shll
ret
shlb
and
sbbl
mov
ficoms
mov
cmp
push
fistpl
scas
and
out
jle
add
cmpsl
pop
ret
or
mov
lds
jl
mov
dec
mov
or
aas
adc
sti
sbb
push
lds
repnz
test
in
sarb
scas
jne
push
movl
aam
call
test
pop
bound
scas
cmp
mov
scas
sub
vprotd
dec
push
pushf
push
mov
aaa
bound
cmp
ja
mov
xchg
fs
adc
cmp
rolb
xchg
push
stc
sbbb
aas
sarb
mov
jne
mov
or
mov
xor
ja
clc
mov
xor
inc
imul
mov
scas
mov
dec
jge
lahf
cltd
and
mov
cmp
ret
xchg
insb
cli
sbb
xor
and
popf
inc
or
push
fistps
clc
or
fistpl
sbb
out
add
js
xlat
mov
fistpll
pop
cmp
ret
and
jne
inc
sar
and
inc
popf
pushf
aaa
orl
lea
outsb
mov
lock
jbe
loop
adc
or
rcr
sub
btc
scas
fisttps
das
adc
outsl
adc
adc
in
out
sub
cmp
addr16
inc
lods
adc
cmp
insb
lcall
jmp
adcb
les
lods
dec
popa
cwtl
shrl
xchg
and
pop
js
gs
mov
or
sub
mov
mov
inc
je
int3
mulb
sub
push
inc
loop
push
adc
lcall
mov
mov
and
pushf
rcll
mov
mov
or
mov
pop
push
pop
inc
xchg
aad
ds
popa
xor
movsb
cmp
mov
es
mov
out
push
xchg
inc
add
cmp
test
loope
movsb
loopne
sbb
xorl
mov
imul
nop
sbb
and
xchg
inc
xchg
jbe
mov
js
jo
andb
shll
ljmp
jp
fiaddl
mov
ss
call
cmpl
jbe
ss
rcrb
sbb
jne
sub
out
gs
test
mov
inc
mov
cmpsb
dec
push
std
mov
cmpsl
sbb
sub
das
dec
cltd
jge
mov
xor
aas
rcl
in
mov
cmp
fwait
leave
sbb
test
pop
inc
out
mov
dec
push
xor
hlt
int
cmp
jmp
sub
adc
or
sbb
call
jne
bnd
clc
mov
sbb
lods
pop
fcmovbe
sbb
je
inc
pop
int3
or
arpl
sbb
test
pop
enter
test
cmpsl
jl
ljmp
out
jne
jno
popa
lcall
or
sub
xlat
sti
mov
cmp
xor
mov
stc
jo
testb
or
add
fisubrl
xchg
mov
dec
das
ficomps
mov
mov
lds
cmp
je
mov
pop
rcrb
and
outsl
leave
je
xor
jns
push
push
mov
push
bnd
xor
lods
gs
stc
aaa
adc
sbb
pop
cli
xlat
lods
mov
sar
jecxz
and
mov
mov
hlt
stc
lcall
cmp
in
pop
inc
testb
cmc
sarl
fcompl
push
mov
enterw
pop
and
cmp
rcr
jnp
xor
outsb
pop
loopne
jecxz
or
les
jne
mov
xchg
out
ret
xchg
test
nop
ja
rorb
aaa
icebp
ja
sbb
mov
ds
std
xlat
pop
adc
lcall
ret
ret
out
into
adc
inc
and
icebp
test
aam
lods
add
imul
daa
cmp
fisubl
ljmp
inc
sbb
rorb
pop
filds
add
cmp
mov
pop
push
in
mov
pop
push
mov
fstpl
or
mov
scas
cmp
dec
inc
scas
cld
stc
sbb
pop
adc
inc
in
adc
jp
iret
rcr
lods
cmpsb
imul
sub
adc
imul
dec
int3
scas
ds
sub
pop
sub
pop
mov
xchg
scas
jno
mov
test
outsl
outsl
sub
imul
hlt
jno
fs
sub
in
ss
dec
inc
pop
xchg
push
sti
sub
xor
movsb
jns
mov
mov
mov
mov
ds
sbb
push
mov
in
or
pop
dec
pop
add
sub
cmp
pop
ficomps
push
outsb
ja
imul
xchg
pusha
into
sub
add
das
mov
cld
lock
mov
add
paddusb
dec
pop
dec
data16
mov
pop
int
cwtl
mov
jp
dec
loop
inc
jg
rorb
jno
int3
xchg
pop
xchg
cmpl
jbe
cmc
mov
or
repz
mov
aaa
movsb
out
imul
add
mov
out
jle
mov
push
sti
cmc
or
inc
into
in
lea
das
repz
mov
cmpsb
sub
mov
push
jae
filds
add
movsl
popf
sbb
out
or
imul
pop
sbb
dec
push
add
ja
inc
add
in
pusha
bnd
jne
mov
add
pop
subl
enter
arpl
mov
pop
es
popa
pop
arpl
xchg
pop
sub
dec
jae
and
fcoml
sub
add
xor
jae
ja
lea
or
cmp
je
cwtl
in
pushl
mov
mov
adc
out
cli
mov
pusha
jecxz
popa
cmpsl
sbb
xchg
dec
xchg
cs
jb
sbb
sub
stos
jbe
inc
adc
or
lret
cmp
cmp
mov
into
cmp
sbb
je
sbb
or
and
mov
xor
push
sahf
outsl
and
pushf
pop
cmp
jnp
mov
cmc
or
jno
popf
insl
ja
hlt
data16
dec
dec
cltd
test
stos
mov
ficoml
jmp
into
mov
mov
push
inc
mov
sti
es
scas
icebp
icebp
mov
call
xchg
xchg
adcl
cmpsl
movsl
cli
or
aam
js
sub
push
fildll
fisttpl
imul
test
pop
rcrl
popa
repnz
movsl
and
push
push
cmpsb
cmp
lods
je
in
or
clc
inc
test
add
inc
call
cmp
mov
loopne
sub
sbb
xor
pop
aam
cltd
stc
jno
sbb
jno
cmp
xchg
imul
dec
jae
testb
inc
pop
inc
and
jbe
mov
int3
push
mov
inc
push
aam
insl
rclb
push
enter
arpl
lret
repnz
sbbl
iret
mov
je
popa
push
aaa
push
add
mov
mov
push
and
int
xchg
js
test
int
outsb
jmp
or
pop
ljmp
popf
mov
mov
mov
ret
and
pop
and
aaa
dec
lret
jecxz
movsb
sub
mov
and
cltd
test
cli
ror
repz
cwtl
push
js
pop
xor
imul
pop
sbb
mov
ds
jae
or
shrl
iret
lods
js
xor
jp
jno
rcrl
sarb
incb
ret
push
cmpsl
cmp
cmp
gs
mov
pop
test
gs
sahf
testl
jmp
inc
ljmp
leave
les
outsb
bndldx
aam
mov
jmp
push
xchg
xor
jne
cmp
push
lods
int
mov
fstpt
shrb
pop
mov
sub
movsb
data16
stos
jg
inc
or
add
test
mov
imul
jmp
jbe
clc
xchg
test
sub
addl
imul
imul
les
jns
xchg
xor
mov
popa
jnp
imul
or
les
sbb
fwait
test
hlt
shll
and
lahf
je
leave
das
cli
mov
insl
imul
inc
pushl
sar
mov
inc
mov
addb
xchg
inc
inc
out
inc
push
dec
adc
cld
cmpsb
cltd
xchg
or
test
in
shll
xchg
sub
adc
mov
add
in
mov
cli
mov
hlt
and
rcll
mov
pop
jle
jl
or
out
shlb
mov
test
pop
pop
xlat
xor
pop
sti
fmuls
ss
cld
xor
outsl
xchg
sarl
or
push
pop
pop
push
rol
push
lret
test
mov
lret
idiv
xor
or
lcall
mov
out
cmp
and
push
and
push
mov
mov
dec
rcr
mov
add
rorb
fstpt
loope
lcall
es
aam
inc
mov
xor
arpl
add
jae
adc
push
adc
imul
inc
fmuls
scas
xchg
pop
inc
xor
mov
mov
lods
ds
jnp
xor
mov
cs
mov
jp
test
push
adc
mov
and
inc
adc
cmp
dec
xlat
call
mov
loop
data16
pop
fnstenv
xchg
mov
push
out
fs
xor
jp
stc
dec
loop
mov
arpl
movsl
arpl
mov
test
call
pusha
lods
mov
punpckhbw
mov
ja
and
and
mov
fdivrl
call
test
lock
fxch
std
cwtl
sti
xor
popa
push
xor
lret
mov
sub
inc
dec
push
push
adcl
div
and
lcall
and
or
stos
loopne
inc
testb
ret
negl
or
add
jge
jae
movsl
pop
adc
out
cmp
pop
dec
push
out
lds
cmpsl
adc
pop
roll
dec
jmp
lods
sbb
xor
addr16
push
xchg
lds
sub
xchg
mov
bound
insb
xchg
adc
push
lods
inc
or
out
cmp
pop
cmp
pop
imul
adc
aam
in
jnp
jae
add
mov
dec
mov
loop
xor
loop
jle
jmp
dec
adc
cmp
cmpsl
dec
in
into
sub
out
pop
mov
shl
in
sbb
mov
lcall
inc
nop
push
mov
pop
test
es
jge
cmp
xchg
pop
js
or
sub
rolb
mov
xchg
call
or
ss
add
cmp
add
sbb
or
dec
shll
dec
jno
sbb
test
lock
xor
testb
test
das
push
add
popl
pop
mov
lret
push
movsl
sti
xchg
icebp
test
aas
cld
lds
stos
je
mov
cmpsb
sub
jo
push
mov
xchg
cmp
insl
mov
ljmp
movsl
jle
aam
adc
stos
mov
jl
fists
out
addr16
jno
in
lahf
das
mov
dec
xlat
jg
nop
cmc
nop
cltd
adc
fsts
pop
insb
inc
push
xchg
push
or
ljmp
fsts
jmp
movsb
jno,pt
popf
lcall
mov
sub
mov
sar
sbb
pop
clc
jo
gs
sbb
push
cmp
js
jae
ficomps
cwtl
or
loop
es
imul
pop
inc
pop
cmp
mov
test
fld
or
adc
ss
sbb
clc
popa
in
inc
ja
jb
data16
and
icebp
pop
xchg
aam
dec
loope
add
repnz
dec
ret
adc
sbb
or
push
aas
pusha
and
sbb
je
or
mov
push
pop
mov
outsl
call
xchg
pop
enter
insl
addr16
fstpt
outsl
mov
cmpsl
pop
sub
and
mov
cmp
sub
out
or
aaa
int
mov
stc
movsb
jbe
mov
out
mov
jl
mov
xchg
rolb
jne
mov
and
rcll
mov
test
xorb
popa
inc
push
mov
rorb
mov
cmp
xchg
push
shlb
fsubrp
dec
xchg
cmp
call
call
outsl
push
dec
sub
dec
test
or
pop
xchg
ror
pop
pop
and
shlb
inc
cs
xor
leave
in
rcrl
enter
lret
gs
fidivl
cmp
mov
xchg
mulb
mov
mov
xor
adc
js
out
dec
xchg
mov
push
jbe
mov
jbe
fstps
pusha
and
into
jmp
out
adc
loopne
add
adcb
fcompl
sub
aas
inc
and
sub
and
push
jo
outsb
popl
fldl
adc
adc
mov
mov
sbb
loopne
sbb
cltd
mov
icebp
notb
in
cld
add
xchg
das
je
xor
xchg
inc
ficompl
dec
and
out
xchg
xchg
in
inc
mov
test
and
xchg
inc
sti
and
add
xchg
bound
js
fwait
jo
lock
xor
dec
pop
push
call
fwait
xchg
lds
mov
ljmp
pop
out
mov
fbld
aam
adc
int3
int
mov
pop
push
ficomps
fs
addl
divb
rorl
daa
jmp
sub
jo
je
push
sahf
or
push
add
cmp
pop
pop
popa
push
roll
cwtl
jg
xchg
and
into
scas
xchg
sbb
sarb
daa
icebp
xchg
std
cmpsb
mov
das
and
or
mov
inc
inc
rol
push
int
loope
push
mov
xchg
scas
jne
mul
dec
and
inc
and
test
fdivl
enter
and
adc
mov
fcompl
and
clc
or
mov
cmp
scas
jle
lods
dec
js
fmul
adc
lds
arpl
cli
inc
adc
lods
call
xor
in
mov
jecxz
mov
cmp
outsl
aaa
lods
lods
jle
lods
jnp
push
fnstsw
mov
push
lcall
outsl
andb
test
enter
fnstsw
in
adc
adc
movl
push
add
inc
jns
test
in
rorb
popa
inc
sbb
cltd
sahf
push
pop
lods
jbe
xor
jge
in
mov
out
mov
lds
aas
loop
lods
mov
mov
in
cmp
xor
testb
mov
outsl
cmp
roll
fisttpll
or
fistpl
add
jne
stc
mov
loop
inc
mov
ja
xor
scas
jne
sbb
mov
push
mov
insb
subb
and
aas
enter
pop
gs
je
sbb
cwtl
xor
das
jecxz
and
data16
loop
cmp
sar
add
and
ja
out
adc
add
mov
mov
inc
cltd
mov
jmp
xchg
insb
push
or
fs
sub
addr16
and
loop
add
mov
push
inc
push
lock
cmp
int3
das
iret
inc
pop
jae
sub
test
push
sub
add
push
inc
mov
sbb
cmpsb
faddp
xor
jbe
inc
inc
xchg
mov
test
dec
add
stos
test
and
mov
pop
faddl
pop
pop
jbe,pt
lds
jecxz
rorb
repz
int
add
enter
mov
push
sets
into
sbb
mov
enter
and
push
shl
mov
movsb
cmpsb
lcall
movb
inc
sbbb
call
inc
aas
incb
aas
aad
lds
push
movzwl
ret
sbbl
adc
and
mov
pop
das
out
test
int
and
cmp
push
fnsave
outsb
out
andl
shrb
cmp
cmpsb
pop
lock
nop
out
shll
scas
xchg
test
stos
add
leave
push
test
inc
enter
lret
sub
jg
lret
fcompl
test
fs
cmpsl
jmp
mov
sub
jo
dec
mov
ljmp
movsb
daa
lods
fimuls
xchg
dec
and
loop
mov
aaa
lcall
clc
add
dec
push
jle
mov
mov
clc
int
bound
adc
cmp
fistl
jb
and
or
enter
sbb
and
outsb
pop
lea
call
fnsave
xchg
orb
rclb
or
lea
ret
insl
test
ror
jns
lret
imul
sub
jmp
pop
or
mov
outsl
xor
fisubs
cmp
daa
ja
add
ja
shrl
mov
add
pusha
jp
ljmp
xor
fidivl
or
into
or
lds
outsb
adc
xor
cmp
leave
xor
insb
adc
push
push
mov
mov
sbb
xchg
pop
addr16
jecxz
mov
dec
jl
testl
movsl
jp
test
pusha
loope
mov
jns
jbe
mov
gs
adc
lret
ljmp
loope
jb
jmp
add
loope
sbb
dec
mov
mov
ljmp
jmp
jbe
sbb
and
outsl
hlt
insl
xor
jp
inc
jmp
pusha
das
stos
dec
xor
jge
push
pop
cli
adc
mov
push
pop
shrb
aam
push
loop
sub
mov
cmpsl
in
iret
inc
sbb
inc
jb
ret
lret
cli
adc
or
in
sbb
ljmp
sub
inc
mov
andl
xchg
add
sub
insb
lods
fstpl
cmp
lods
lcall
cmp
mov
inc
mov
dec
lods
lock
push
fbstp
clc
dec
das
add
mov
jae
sub
fildll
fldl
jle
mov
sbb
sbb
mov
pusha
enter
mov
or
in
jno
aaa
inc
and
ja
movsl
addr16
jbe
lret
fnstcw
inc
jmp
sbb
sub
push
add
out
inc
adc
int3
mov
xor
xor
mov
push
mov
cwtl
dec
int3
xor
loop
jo
repnz
fimuls
in
sar
inc
shll
inc
and
outsb
mov
cld
rorl
stos
pop
ja
dec
pushl
lret
insl
jg
inc
jns
movl
lret
movsl
jg
inc
mov
jae
add
jnp
sbb
mov
add
mov
cmc
adc
xchg
and
pop
mov
lods
shll
mov
ss
popa
fbstp
lret
jo
mov
jl
repnz
inc
movsl
cmpsb
pop
cmc
leave
int3
jg
fisttpll
pop
sbb
xchg
mov
hlt
adc
jbe
lret
inc
jg
inc
push
stos
fists
test
and
cmpsb
das
cmc
test
cmpsb
mov
cmp
mov
sbb
addr16
add
jg
inc
and
and
les
in
pop
imul
push
fs
popa
daa
test
cwtl
add
sub
xlat
cld
test
dec
ret
lods
mov
or
push
xchg
es
lcall
addl
movsb
and
inc
xchg
incl
cld
add
xchg
jo
mov
mov
pusha
and
out
test
adc
lea
insl
dec
cmpsb
inc
add
dec
ds
mov
in
lahf
pop
imul
stc
loope
cmp
test
add
cli
mov
sub
push
call
mov
cltd
inc
lea
out
mov
out
loopne
fisubrl
add
mov
push
inc
or
imul
sub
mov
testl
into
test
push
xchg
and
push
xchg
mov
or
out
fcoms
pop
pop
xchg
sbb
inc
xchg
mov
or
loope
lea
jmp
movsl
inc
xchg
sub
pop
sub
push
aad
cmp
mov
fldt
nop
test
cmpsl
lods
rclb
in
mov
ja
clc
ljmp
add
dec
inc
les
lds
jle
adc
pusha
xchg
lock
insl
repz
push
imul
jb
push
loop
cmp
adc
vphaddbw
push
shlb
lret
pop
pop
mov
lcall
pop
jp
nopl
or
xchg
or
les
or
int3
sub
dec
icebp
dec
insb
jle
daa
ss
std
push
and
mov
jbe
hlt
imul
inc
jle,pn
mov
negl
push
jge
ss
sub
hlt
shl
add
in
cmpsl
xchg
jle
xchg
aad
mov
out
mov
mov
lret
fwait
jp
xchg
jbe
in
movsb
fisttpl
xchg
cmp
add
shr
aas
inc
imul
pop
rorl
xchg
jns
mov
fisubrl
jno
push
inc
xor
out
mov
push
xchg
push
in
xor
jge
cmp
mov
dec
add
inc
push
pop
sahf
in
push
dec
bswap
popl
jne
lea
adc
mov
inc
call
test
add
ficompl
outsb
sbb
jge
dec
aas
fstl
lret
dec
push
or
inc
jp
in
and
arpl
outsl
jno
shll
pop
sub
sahf
ret
dec
fstps
sbb
fisubs
js
or
pop
dec
lcall
iret
or
aas
popf
add
es
stos
pusha
xchg
movsb
mov
std
pop
aam
loopne
shl
scas
pop
jns
lahf
mov
das
push
jmp
adc
mov
add
in
push
cmpsw
mov
insl
push
rcrl
arpl
andl
test
js
fdivrl
pop
push
lea
cmp
shlb
je
popa
jns
mov
push
int3
push
sbb
jl
fisttpll
jbe
mov
scas
sbb
pop
incl
sbb
jp
inc
inc
not
sbb
or
in
dec
inc
ljmp
or
mov
or
sub
aam
jge
ljmp
fsubl
popl
dec
fldl
icebp
mov
jns
out
pop
push
mov
shll
or
push
popf
sbb
stos
cld
cli
gs
jae
pop
lock
dec
stc
movsb
and
xchg
add
sub
cmp
push
jl
and
cltd
dec
aaa
sarb
push
pop
fildl
ss
mov
adc
mov
and
adc
sbb
loope
leave
mov
mov
adc
rcrl
push
loopne
fs
or
enter
xor
movsb
popf
mov
push
sbb
cld
inc
mov
rcrl
std
sahf
data16
movsb
iret
sti
jnp
in
fisttps
dec
jmp
sti
push
shrb
adc
add
sub
call
sbb
sbb
pop
pushf
lods
mov
adc
rclb
sub
aam
nop
jno
mov
cmp
cmpsb
out
cmpsl
sub
jns
adc
sbb
mov
test
shlb
popf
pop
ret
lds
lahf
inc
sbb
inc
dec
add
mov
pop
adc
jg
push
outsb
and
roll
jecxz
jnp
bound
push
cmp
inc
je
jbe
lock
mov
dec
cld
jb
push
sub
or
add
lret
insb
xlat
leave
setns
scas
test
scas
lcall
repnz
dec
repnz
sub
mov
lret
cmpsl
jbe
andl
scas
fildll
icebp
mov
daa
insb
movsl
sbb
dec
iret
aam
jge
sbb
adc
push
orb
mov
push
test
pop
push
hlt
mov
lahf
roll
scas
lret
cmpb
jne
mov
ljmp
nop
cli
lods
test
pop
in
mov
push
movswl
mov
lret
cmp
shrl
bnd
loope
shrl
cli
cli
pop
adc
mov
out
inc
xchg
nop
popa
sub
jle
and
ret
adc
sub
inc
xor
dec
xchg
lahf
and
xor
mov
inc
lea
jmp
mov
mov
rep
jnp
in
lret
mov
sbb
push
mov
mov
or
sarl
xchg
cmp
xchg
imul
mov
in
inc
lret
and
sub
sbb
adc
sbb
sbb
ret
mov
into
int
mov
push
or
cmp
mov
pushf
mov
mov
cltd
xchg
adc
add
mov
fists
cmp
cmpsb
ss
mov
pop
add
mov
jg
cmp
daa
js
fwait
gs
in
icebp
push
test
and
sarl
inc
insb
enter
mov
push
sub
mov
ss
dec
daa
cmovno
xor
enter
imul
test
xor
dec
data16
dec
sub
cld
mov
pop
add
frstor
inc
fstpl
lods
or
lcall
fildl
shll
cltd
daa
sub
movb
inc
lret
std
popf
mov
cmp
in
jbe
adcb
std
outsb
mov
add
dec
inc
mov
sub
xchg
mov
mov
hlt
insb
dec
lcall
and
sbb
push
cmp
pop
fistpll
push
mov
repnz
cmc
ret
and
pop
or
rcl
insb
mov
xchg
movsl
cmpsl
lock
out
inc
xchg
dec
pusha
or
lret
call
jg
or
lcall
cld
das
sbb
dec
add
in
xchg
sbbl
sbb
addr16
jge
out
loopne
imul
dec
cmp
mov
mov
xlat
add
inc
adc
decb
stos
insl
incb
mov
lahf
inc
xchg
stos
mov
or
loop
pop
sbb
inc
jp
out
inc
iret
pop
jae
xor
inc
sub
jb
lcall
cmp
in
ljmp
test
outsb
shrb
aad
movsb
fcomi
popf
mov
or
xchg
or
ja
imul
jmp
xchg
inc
popf
in
sub
or
shll
fisubs
lods
jb
xchg
xlat
pop
jne
sbb
xchg
fimuls
pop
adcl
lock
mulb
das
mov
pop
das
mov
loopne
or
jns
inc
pop
pop
dec
hlt
idiv
mov
scas
test
sub
or
outsb
dec
sub
pusha
jmp
adc
call
fnstsw
add
sbb
movsb
and
mov
sbb
inc
or
ret
cmpsl
mov
sub
adc
push
pop
loop
dec
hlt
mov
inc
or
pop
mov
adc
call
cs
pop
mov
jge
stos
stos
icebp
lret
rorl
and
push
in
and
loop
jae
lds
adc
cmp
mov
das
cs
rorb
jns
cmp
xchg
mov
or
ret
xchg
lds
xchg
sbb
in
int
rorb
mov
cmpsb
sub
gs
jp
imul
mul
fcomps
test
pusha
sbb
popf
adc
sbb
enter
and
mov
enter
int3
or
mov
add
mov
lahf
mov
leave
in
js
or
pop
cmp
mov
stc
jo
ret
js
scas
rorb
ficomps
pop
loop
in
mov
mov
outsb
iret
jge
stos
mov
arpl
scas
ret
xor
inc
push
repnz
add
iret
loop
shlb
cmpsb
out
rcrb
jbe
rcrb
std
mov
xchg
jnp
cmp
dec
popf
fidivrs
sbb
push
fs
lea
mov
lods
daa
inc
xchg
mov
pop
sarb
cmp
adc
lahf
mov
out
stos
push
mov
imul
and
jnp
sarl
stc
outsl
cmp
bound
cmc
dec
and
mov
in
mov
daa
sub
dec
cmp
mov
pop
xchg
cli
add
sub
add
pop
lods
lock
xchg
fadds
ret
lock
cmp
mov
loope
std
add
xchg
sarb
push
inc
icebp
push
xchg
xchg
sahf
testb
movsl
sbb
std
outsb
ror
fidivs
xor
in
dec
cmpsl
lcall
mov
test
ftst
cmc
xchg
or
movl
sub
shlb
ret
mov
inc
mov
jo
mov
sbb
fnstcw
sarb
sbb
outsb
cmp
cmp
cmpsl
and
mov
sub
ja
mul
daa
imul
jnp
xchg
lds
lods
pushf
imul
fadd
mov
inc
xchg
xlat
rcll
insb
lods
ja
inc
or
pop
pop
shll
rol
movsl
dec
scas
jp
stc
add
leave
outsl
cmp
pop
mov
dec
je
pop
inc
pop
inc
inc
adc
or
xor
movsb
cs
lcall
mov
pop
inc
out
mov
ljmp
mov
test
xchg
jns
sbb
xor
idivb
add
cmp
sarl
sub
sub
dec
jnp
mov
sahf
popa
jo
andb
lret
shrb
decl
repz
fadds
stos
cwtl
lahf
addr16
pop
jnp
add
sti
push
dec
jp
fistl
and
in
mov
adc
shrl
cmpsl
or
and
pushf
gs
jnp
shlb
dec
inc
test
cli
imul
loop
and
mov
addr16
sbb
clc
fcmove
test
push
pusha
sub
xor
movsb
and
adc
inc
mov
mov
repz
mov
push
jae
mov
cmp
pop
stos
fldenv
xor
and
outsl
push
fldenv
push
adc
popa
adc
push
outsl
mov
sub
xor
mov
xchg
jns
mov
dec
mov
mov
movsl
ret
rorb
fs
mov
pop
js
xor
leave
movsl
addr16
cmp
mov
lcall
push
aaa
sub
adc
adc
and
fnstcw
xchg
decb
pop
dec
lds
js
lret
pop
enter
aad
hlt
mov
nop
and
push
xchg
mov
lret
pop
shrl
add
insb
add
mov
adc
test
pushf
cwtl
push
or
shr
cmpsl
mov
inc
xor
sahf
popf
icebp
outsl
mov
lahf
push
icebp
imul
cmp
jns
popa
adc
cmpsb
sbb
loop
add
outsl
nop
pusha
and
push
rorl
aaa
ds
xchg
iret
jo
into
ja
xchg
mov
ja
dec
or
push
mov
in
movsl
push
leave
cmpsl
mov
mov
cltd
xorl
mov
shlb
jae
fdivrl
pop
inc
add
adc
xchg
xor
jmp
xor
repnz
jl
or
aam
pop
lcall
andb
cmc
mov
fsubrs
sbb
sbb
pop
fwait
into
fiaddl
add
scas
jnp
pop
push
arpl
dec
mov
lret
fbld
inc
push
out
and
imulb
adc
ds
clc
inc
mov
mov
sbb
inc
sub
xchg
ja
push
cmpsb
sti
aad
mov
inc
or
lods
popf
sub
cmpsl
or
dec
pop
sbb
repnz
dec
mov
add
sub
xor
add
aaa
mov
cmp
popa
cli
xor
xchg
push
bt
push
mov
movsb
aaa
sti
stc
lds
inc
cmpb
daa
jae
cmp
jo
or
cltd
or
scas
out
shrl
fnstcw
or
stc
in
enter
jns
lods
sbb
add
mov
push
cmpb
ficompl
jl
push
sar
hlt
js
fdivp
test
jle
pop
psubusb
mov
jne
adc
divl
pop
pusha
lock
mov
mov
sbb
mov
icebp
dec
mov
push
push
push
js
xor
pop
adc
and
fildl
bsr
andl
jns
pop
aaa
mov
popa
cltd
popf
xchg
sahf
sub
std
loopne
int3
cmp
push
mov
imul
push
cmp
push
out
mov
sahf
push
xor
add
and
sbb
cltd
jae
mov
inc
ret
es
or
mov
sahf
je
cmp
add
push
sub
pusha
aas
rcrb
cwtl
in
cmp
jno
stc
inc
sub
stos
ss
in
sbb
add
testb
adc
fs
and
or
push
mov
mov
xlat
loopne
push
jl
mov
jno
repnz
mov
mov
fildl
pop
in
lds
jnp
adc
les
jno
in
js
insb
xchg
and
incb
dec
orl
movsl
fsub
xchg
jnp
jae
inc
dec
ret
fcoml
push
push
adc
jno
ror
push
dec
sub
pop
push
jmp
repz
push
and
stc
fidivs
lea
ret
and
and
sbb
xchg
xor
push
imul
fwait
pop
push
push
shlb
mov
fadd
or
mov
or
movsl
pop
dec
out
inc
pop
mov
jge,pt
popf
inc
cltd
out
mov
mov
mov
dec
mov
push
add
cmp
leave
dec
push
pop
cmpsb
lret
xor
rolb
pushf
shr
push
aad
pop
jne
fisubs
mov
jmp
add
push
movsb
lret
jmp
jp
adc
inc
pop
ret
mov
lods
jbe
sbb
mov
test
mov
dec
into
mov
xchg
xchg
dec
das
push
sbb
mov
cltd
orb
sbb
and
cld
sbb
mov
jmp
mov
mov
push
mov
shrb
mov
cmp
sbbb
ret
cld
sahf
mov
in
scas
fldl
mov
pop
aaa
ss
lahf
dec
arpl
push
jb
je
mov
scas
jo
pop
sub
lret
dec
mov
xchg
jbe
int
push
lods
in
pop
icebp
cs
jb
bound
mov
in
insl
push
test
jg
fadd
inc
nop
mov
ret
cltd
fcmove
js
push
rorb
dec
push
push
pop
sbb
idivb
jp
sar
pop
mov
mov
sbb
inc
dec
in
popa
into
xchg
cmp
cmpsl
std
faddl
push
xchg
data16
cmp
mov
loop
push
movsl
aam
setle
fimuls
and
xchg
sbb
jg
add
xchg
test
out
call
fnstsw
xor
push
lahf
cmc
add
rclb
or
js
inc
add
sbb
or
or
sub
out
aas
add
sti
pop
rol
rclb
jg
mov
je
shll
add
test
adc
lcall
nop
aad
jo
sub
dec
fnstenv
cs
pop
and
add
mov
mov
mov
fs
insb
inc
xor
xor
sbb
cmpsl
xchg
cvtpi2ps
sbb
mov
cmpl
jge
inc
addl
aam
lret
fs
inc
pushf
lea
sti
dec
lret
cmp
or
adc
dec
mov
inc
das
sti
mov
out
test
repz
gs
pusha
mov
mov
stos
addr16
inc
add
out
mov
jnp
test
insb
rcrb
mov
jo
mov
out
mov
pop
and
das
ret
jbe
out
outsb
and
add
sbb
fidivs
pop
cmc
mov
iret
mov
add
lock
cwtl
test
jge
test
ret
int
sahf
mov
out
push
and
push
push
cmpsl
jne
mov
xlat
int3
mov
mov
pusha
xor
jno
inc
push
mov
ret
add
cmpsl
repz
fdivrl
pusha
inc
js
aad
enter
ret
sbb
mov
mov
in
mov
scas
rcl
xchg
jle
lahf
jmp
sub
or
xchg
pop
push
mov
sbb
xor
xlat
dec
sbb
iret
fs
cmp
lret
xchg
inc
mov
pusha
sub
lock
dec
cs
sbb
xorl
mov
cwtl
inc
ficoml
cmpsl
adc
xor
or
fstpt
and
jp
les
mov
push
and
push
stos
movsl
xchg
mov
sti
lret
dec
pop
xor
test
xor
xor
mov
cwtl
ss
xchg
sub
pop
dec
xchg
inc
popf
test
dec
xor
xor
dec
adc
in
dec
idivl
cmpl
repz
test
ficompl
addr16
rolb
orl
jo
mov
push
pcmpeqw
push
dec
cltd
cmp
sbb
add
lods
popf
inc
cmpsl
sbb
fmul
pushf
push
cmp
xchg
shl
jmp
mov
fsub
xchg
mov
std
inc
sbb
mov
xor
mov
mov
ja
xor
into
lret
sbb
mov
aam
cs
arpl
mov
xor
int3
xchg
inc
adc
jne
or
cvtps2pi
mov
pop
clc
pushf
pop
sbb
sahf
adc
mov
jne
popf
lret
inc
cwtl
fiadds
inc
jne
add
xor
cmp
movl
jnp
sbb
adc
or
leave
cld
jnp
fldenv
pop
and
xchg
mov
clc
roll
stos
push
ja
inc
jcxz
push
lret
jns
lret
adc
cltd
cmp
cltd
cld
sub
cmpsb
add
mov
jae
sarl
adc
xchg
mov
lock
jbe
lret
dec
jg
inc
pop
stos
out
mov
push
and
int3
daa
and
scas
pop
sub
mov
ja
or
jbe
lret
and
stos
sti
mov
and
push
inc
or
aas
cmp
and
jnp
sbb
inc
in
or
mov
cmc
cmp
ds
add
mov
movsl
cmp
inc
fwait
pop
push
rcl
and
mov
pop
jbe
lret
or
stos
scas
int3
add
fsubrs
xor
or
in
jne
aaa
pop
xor
jbe
cmpsl
jg
out
stos
out
sbbl
sahf
ja
or
jbe
lret
sub
inc
cmp
and
mov
xor
sbb
adc
cmc
pop
mov
dec
sbb
adc
jnp
frndint
imul
inc
cmc
icebp
int3
mov
add
pop
pop
fadd
sub
andb
jae
xchg
cmp
adc
lret
mov
sbb
and
xchg
in
bound
enter
jbe
lret
imul
sbb
mov
sbb
sbb
stos
xrstor
mov
add
addb
cld
mov
add
int3
xchg
and
and
mov
xor
pushf
dec
xchg
xor
cli
jnp
sbb
adc
fimuls
in
leave
cld
jnp
fldenv
pop
and
xchg
mov
cld
shll
stos
pop
ja
dec
pushl
lret
jns
lret
sub
sbb
xchg
sbb
lret
sub
and
push
call
and
xchg
cmpsb
push
pop
int3
out
and
mov
pusha
or
das
cmc
lods
int3
add
mov
mov
cmp
mov
sbb
lret
and
stos
pushl
lods
add
sbb
and
int3
and
xchg
into
mov
pop
aad
ja
aad
push
jbe
lret
cmc
jg
inc
add
inc
and
lods
push
jnp
sbb
adc
jge
aaa
out
loop
jo
bnd
mov
lret
fnstsw
inc
in
stos
pop
sbb
and
lods
dec
jnp
sbb
fmul
es
push
cld
xlat
inc
cmpsb
lret
int3
adc
scas
lods
cmp
js
ja
mov
cmpsl
sub
jg
inc
jmp
xchg
and
sbb
lock
xchg
in
and
cmpsb
sti
cmc
pop
int3
jmp
imul
mov
test
inc
xchg
stos
pop
push
add
and
xchg
adc
xchg
mov
add
mov
cmc
and
andl
sub
add
mov
insb
add
and
jnp
sbb
adc
cld
pop
inc
std
cmpsb
mov
add
dec
mov
mov
stos
or
jge
iret
jne
imul
inc
sbb
adc
sar
inc
lds
pop
and
xchg
mov
hlt
shll
stos
inc
ja
xor
jbe
lret
push
jg
inc
jns
lret
pusha
out
in
out
sub
jg
push
add
jnp
sbb
mov
inc
sub
int3
repz
mov
mov
push
mov
test
ret
fwait
scas
pop
sub
mov
ja
icebp
addr16
add
jg
inc
cmp
and
add
nop
int
aaa
and
loop
jo
repnz
inc
rol
push
stos
rcl
jbe
lret
aad
pop
inc
std
stos
mov
add
les
adc
cld
fildl
cmpsb
iret
in
andl
inc
movsl
addr16
jbe
shlb
stos
cmp
mov
or
adc
int
scas
in
sub
cmpsb
repz
inc
int3
out
push
or
cwtl
iret
out
xchg
pusha
stc
jnp
int3
cmp
cmc
std
gs
cmp
mov
or
lcall
sbb
pop
mov
mov
mov
pushf
dec
arpl
js
lret
stos
fidivl
inc
lret
fnstsw
inc
loope
inc
adc
outsb
and
lods
jbe
rcrb
adc
int
in
pop
cld
out
inc
insl
cmpsb
cmc
jne
cmp
stos
ja
test
lret
sarl
aad
pop
adc
xchg
and
lods
jp
clc
sbb
aam
push
imul
pop
cld
jmp
imul
aas
jbe
lret
movsl
jg
inc
leave
stos
jnp
add
jnp
sbb
in
int
scas
in
and
addl
div
pop
int3
jmp
imul
adc
and
jg
inc
mov
cmpsb
and
lods
mov
add
sahf
adc
cld
xchg
inc
and
int3
sti
and
mov
pushf
aad
mov
lea
ret
cmp
sbb
dec
in
or
mov
cmc
sub
xchg
and
pop
mov
mov
stos
push
ja
jne
aaa
testb
and
bnd
sbb
adc
cld
jg
frstor
pop
and
push
call
roll
stos
ja,pn
pop
addr16
jbe
lret
xchg
jge
inc
xor
inc
movsl
or
jg
inc
shrl
and
lods
push
hlt
sbb
ror
xchg
xor
cmpsb
out
push
int3
jns
mov
jbe
lret
mov
stos
jae
add
jnp
sbb
mov
cmc
sub
push
mov
mov
stos
adc
pusha
sbb
aas
jo
repnz
ret
sbb
imul
cld
inc
inc
cmc
cmpsb
mov
and
inc
mov
mov
stos
xor
gs
jae
js
insb
sbb
adc
pop
in
mov
cmpsb
jnp
fxch
addr16
xchg
in
data16
int3
cmp
jbe
lret
pop
jg
inc
popa
stos
ret
cwtl
add
movsb
in
cld
sub
cmpsb
pop
cmc
mov
mov
add
andb
sbb
lret
cmp
stos
sti
mov
xor
subb
and
and
xchg
into
mov
pop
shll
or
addr16
jbe
lret
sbb
les
inc
and
lods
sub
sbb
adc
jge
iret
inc
lea
push
stos
ja
mov
jnp
fxch
imul
pop
inc
std
stos
dec
loopne
jle
cld
lods
dec
jnp
sbb
movsb
int
out
imul
lret
in
xorl
movsl
or
jg
inc
jmp
outsb
and
lods
jbe
les
inc
adc
int
repz
inc
cld
out
imul
aas
jbe
lret
test
stos
cvttps2pi
mov
jnp
sbb
mov
inc
cmp
jmp
pop
xor
nop
fcomi
test
lret
stos
fidivl
inc
lret
fnstsw
inc
loope
inc
sbb
push
call
int
xchg
xor
cmpsb
out
push
int3
xlat
and
mov
out
sub
ficoml
pop
aad
ja
frstor
jbe
lret
cmc
jg
inc
sbb
and
sbb
adc
pop
mov
dec
rcr
pop
stos
cmpsb
ja
shll
jbe
lret
icebp
jg
inc
add
inc
and
lods
push
jnp
sbb
adc
cld
iret
inc
lea
push
stos
lret
mov
jg
inc
aad
push
or
lcall
sbb
clc
int
lahf
in
cmp
cmpsb
sti
cmc
pop
int3
jmp
insl
add
pusha
sub
jb
and
test
call
xchg
xchg
test
fstl
add
mov
xchg
or
and
in
push
popf
arpl
mov
mov
pop
adc
sub
je
jge
mov
sub
or
push
xor
lcall
xor
xor
outsb
push
stos
sbb
sub
xor
lcall
cltd
les
lods
pop
push
pop
incb
or
fwait
inc
push
stc
adc
adc
daa
pop
sub
sbbl
inc
push
loopne
cltd
insb
lret
ds
call
xor
adc
xorl
push
loop
dec
js
pop
or
adc
add
sbb
pop
dec
or
lahf
imul
cwtl
push
lea
outsl
fidivrl
xor
and
call
jne
in
jge
xchg
into
push
movsw
adc
push
cltd
mov
add
cmpl
jne
imul
xor
lret
fcmovnu
loop
iret
pushf
dec
cmp
mov
sbb
push
cltd
cmp
fcoml
loopne
push
lret
push
push
out
addr16
cmp
fstps
push
add
xchg
insb
clc
lcall
pop
push
aas
xor
adc
jle
dec
xchg
jp
lods
lahf
adc
test
out
pop
insb
adc
scas
idiv
arpl
daa
clc
nop
fcom
mov
sub
pusha
lcall
sarl
inc
insb
faddl
mov
je
jp
test
in
add
pop
cmp
enter
jne
xchg
fnsave
and
pop
inc
in
xchg
add
loop
adc
and
or
inc
inc
rolb
xchg
cli
aas
lock
mov
push
pop
fsub
pop
pop
dec
rorl
int
ret
inc
scas
test
addr16
ret
jns
mov
cmpsl
je
push
aas
std
jbe
in
test
push
test
loope
mov
decb
lods
sahf
scas
dec
out
sbb
sbb
movsb
xor
sbb
sbb
mov
out
in
add
pop
jg
jns
xor
ret
inc
add
add
cmp
add
iret
rolb
mov
nop
lret
outsl
jnp
je
push
xor
shl
xchg
popa
dec
adc
inc
sbb
sub
push
insb
cwtl
xchg
in
pop
movb
mov
call
or
inc
cmp
leave
cmp
popf
xlat
cmpsl
sbb
xor
insb
xchg
mov
sbb
cli
dec
sub
pop
lds
in
aad
pop
lock
loopne
xchg
imul
cli
call
je
repnz
cmc
sbbl
adc
push
push
je
pushf
scas
sbb
adc
cmp
mov
cmp
and
push
cwtl
xchg
add
mov
lahf
sub
push
sbb
push
add
lcall
push
bound
and
xor
shrl
pop
jbe
xchg
lahf
mov
out
lea
loopne
in
adc
cwtl
adc
ljmp
cmp
jecxz
out
outsb
lcall
addl
mov
cltd
mov
pop
jo
jnp
inc
popf
push
add
and
aas
or
outsb
cli
je
mov
int3
cmpl
pop
test
xor
lret
pop
outsb
pop
popf
or
xor
addr16
shl
jmp
cmp
inc
cmp
add
ror
sbb
lret
addl
fs
xchg
xchg
leave
and
icebp
push
push
or
inc
loope
imul
je
xor
not
mov
stc
enter
imul
stos
pop
out
mov
mov
xor
loop
scas
jbe
sub
mov
push
outsl
inc
cmp
repz
add
inc
xchg
add
push
mov
sbbl
mov
ljmp
rorl
loopne
pop
inc
inc
sbb
into
xchg
aaa
lret
xor
lock
cwtl
push
mov
sub
cwtl
mov
mov
shll
push
add
or
shll
xchg
cs
fcoml
and
jo
in
int
out
xlat
ljmp
dec
lods
call
sub
lret
cltd
jnp
sbb
jp
and
lcall
xor
andl
inc
and
cltd
push
rcrb
out
jne
fbld
das
inc
dec
je
dec
push
out
xchg
out
pop
in
fwait
pop
cmp
sub
mov
add
mov
dec
adc
xchg
jle
scas
std
or
cs
in
push
push
xchg
dec
movsb
cmp
dec
cmp
imul
pop
lea
add
bound
lea
repnz
xor
pop
movsb
jae
lahf
sar
subb
inc
cmp
into
push
testl
inc
mov
and
pop
mov
std
in
inc
cmpsb
xchg
out
arpl
jne
pop
je
inc
inc
clc
out
aas
cli
cmpsb
lcall
ret
popa
stos
pop
mov
lea
pop
and
xchg
jns
xchg
mov
aas
mov
addl
and
addl
testb
stos
lret
add
leave
mov
push
andl
push
push
inc
xor
daa
fs
insb
movsb
jmp
xchg
push
movsb
cld
jle
test
inc
pop
nop
pushf
mov
sub
ljmp
and
loopne
icebp
or
mov
inc
cli
xchg
adc
sub
add
fcomps
lcall
cld
xchg
outsb
test
mov
lds
scas
jne
xchg
int3
movsl
lret
pushf
mov
pop
daa
movb
mov
and
dec
or
fsubr
sbb
imull
movsl
imul
fidivrs
aas
out
add
aas
ds
fstps
out
fwait
std
pop
pop
loopne
ret
xchg
sub
cli
push
add
scas
cmp
out
arpl
repz
jae
push
and
out
inc
loop
adc
inc
das
xor
and
mov
push
repz
lea
jne
sbb
stos
test
iret
and
daa
adc
iret
cmpsl
enter
les
cmp
adcl
inc
add
inc
sub
inc
or
loop
inc
mov
or
mov
jle
and
inc
data16
sbb
xor
mov
push
jl
cmp
loop
or
sbb
test
mov
lcall
cmc
cwtl
pop
rcr
loopne
gs
stos
jmp
adc
jge
repnz
je
shlb
cld
movsl
shlb
sti
data16
mov
shlb
xchg
sub
xchg
push
and
push
popa
add
mov
sub
out
std
and
xchg
fdivrl
cltd
je
xchg
stos
ds
repnz
repnz
push
loopne
xchg
jnp
test
fadd
andl
rorb
mov
cmp
std
imul
or
idivb
jo
ss
fstpl
and
cld
lea
push
out
push
jo
xchg
mov
mov
adc
adc
mov
pop
out
xchg
in
pop
mov
icebp
mov
xlat
pop
stc
inc
push
push
sbb
call
movsl
test
dec
pop
push
dec
cmp
push
inc
pop
into
mov
dec
sub
test
push
icebp
in
mov
xor
addr16
mov
out
inc
out
test
inc
negb
je
or
cli
loop
add
std
or
jbe
xchg
lahf
cmp
xor
jne
arpl
jne
jl
or
mov
pop
sbb
test
out
add
cmp
test
add
and
or
inc
js
mov
sub
lcall
jp
testl
test
leave
insb
vminpd
int3
mov
test
or
jl
js
jb
dec
addl
shl
outsb
jo
lret
ret
fdivrs
jb
popf
daa
in
mov
mov
repz
testl
xchg
mov
sub
push
mov
pop
nop
lea
lret
sti
or
in
pop
fistps
xchg
cmp
and
mov
bound
and
adc
xor
out
lea
loopne
pushf
push
scas
xchg
pop
test
incb
push
ds
adcl
hlt
cmpl
sub
push
inc
insb
insb
xchg
xor
cltd
cltd
push
sbb
fisttpl
sbb
xor
mov
push
insb
xlat
lcall
adc
push
aas
jp
fldl
fmuls
sahf
jnp
mov
dec
sub
out
and
mov
inc
mov
cmpsb
xor
movsb
idivb
loop
or
repz
sub
xor
shr
adc
je
int
xor
mov
insb
pop
shlb
sub
pop
xor
or
inc
jae
fidivrl
xor
sbb
addl
push
int
and
sub
pop
ss
insl
jno
out
faddl
push
push
aad
mov
xchg
push
jne
jne
out
add
jle
in
loope
sti
andb
stc
lret
inc
pushl
sub
mov
and
add
loop
inc
pop
testb
orl
es
inc
das
outsl
in
outsb
movb
das
inc
test
xor
mov
jne
xchg
mov
inc
jp
lock
cmpb
cmpsb
sbb
notb
out
push
or
dec
jmp
sbb
sub
xor
andl
or
inc
and
and
xchg
add
popf
je
fistpl
subl
push
ret
pop
je
mov
es
test
fdivr
out
xor
mov
scas
adc
enter
mov
ud2
pushfw
stc
jecxz
iret
lahf
fcomp
xchg
push
out
lret
cmpsl
daa
or
mov
add
fcomp
iret
sub
jmp
stos
insb
loop
orb
loop
popf
pop
xchg
in
enter
loope
lods
inc
outsl
jno
je
mov
je
xchg
xor
push
fs
push
cli
adc
inc
dec
je
insb
mov
xchg
sbb
cli
fisubrs
add
jbe
jb
sbb
or
stos
cmp
add
cmp
inc
mov
xchg
and
mov
inc
cmp
add
cmp
lret
pop
cmc
cmp
mov
cs
adc
jns
scas
and
or
lods
cwtl
test
in
adc
in
xorl
arpl
out
xchg
and
lock
into
mov
cwtl
or
adc
das
sub
orb
popf
sub
mov
cltd
mov
and
mov
loope
subl
pop
insl
and
insb
push
les
insb
ss
inc
fistpll
sub
or
pop
add
loop
push
das
loop
cwtl
mov
out
mov
jp
adc
add
bnd
cli
ret
into
jae
mov
cmp
xlat
push
jl
mov
loopne
push
gs
cltd
cltd
rcl
and
lods
dec
mov
adc
insb
cmp
xorb
xchg
cmp
mov
je
pushf
lea
xlat
cltd
lcall
xchg
inc
mov
insb
ljmp
push
fsub
pop
xchg
pop
push
jb
sub
fistl
test
out
pop
ss
cmp
adc
pop
jbe
and
pop
test
mov
pop
push
int
movl
mov
leave
xchg
pop
fwait
or
mov
push
mov
call
add
rcll
cmp
jmp
cmpsb
ss
loop
adc
mov
inc
ret
dec
sub
mov
dec
sub
popf
inc
fsave
mov
mov
dec
cli
rcrb
xor
fiadds
aam
movb
xor
je
lahf
orb
mov
sbb
mov
cwtl
cmp
gs
nop
lahf
pop
into
adcl
xchg
and
test
cltd
and
xchg
mov
cmpsb
jg
sub
adc
cltd
movsb
inc
xchg
arpl
das
adcl
ljmp
pop
loope
push
dec
inc
xchg
push
xor
jg
pop
gs
fists
fsubrs
jl
cmp
jns
inc
add
xchg
insb
out
mov
subl
loop
jl
cmpsb
fbstp
sbb
sub
pop
outsl
ficomps
lahf
addr16
xchg
sbbb
and
dec
jbe
cs
sti
xchg
mov
nop
sub
shll
jne
pop
in
adc
sub
cwtl
aaa
and
inc
or
mov
in
mov
les
idivb
rcl
sub
or
sbb
xchg
int3
inc
jg
push
cltd
icebp
vpsubw
cmp
lret
mov
add
mov
out
add
cmc
xchg
in
add
or
pop
test
cmp
dec
push
mov
cmp
and
ret
test
jge
shl
insb
stos
mov
shl
mov
fldt
cmp
stos
adcb
pop
pop
ljmp
push
stos
mov
cmp
cmp
sub
dec
insl
jne
jge
cmpsl
out
xchg
cmp
push
inc
out
inc
loop
xchg
pushw
pop
adc
mov
xchg
add
jge
cmpsl
arpl
pushf
mov
mov
xchg
mov
icebp
cmpsb
in
daa
or
adc
add
or
mov
xchg
inc
insl
sahf
jl
es
dec
in
inc
mov
add
je
notb
inc
and
test
jns
sahf
rol
loopne
cltd
inc
fldenv
lcall
lret
test
fistps
jne
out
xor
push
inc
ret
and
adc
pop
je
cmp
jl
lret
stc
fwait
gs
aad
fwait
insb
cmp
mov
std
mov
popf
dec
cmp
insl
add
and
test
into
std
mov
fisubl
into
popf
xchg
lahf
sub
popw
mov
nop
lret
xor
sahf
inc
iret
faddp
and
jmp
and
mov
xchg
cli
loopne
dec
cmpsl
push
and
sbbb
jmp
dec
sub
loopne
add
cwtl
adc
sbb
sbb
daa
je
andl
insb
lods
jge
insb
xlat
sbb
jmp
rcll
int3
adc
inc
cmp
and
and
cld
mov
fucom
out
cwtl
mov
pop
pop
sbb
jne
adcb
mov
pusha
je
sub
cwtl
subl
adc
xor
nop
lret
aas
aas
pushf
dec
jecxz
pop
insb
and
bound
cmp
pop
add
pop
sbb
xchg
andl
sbb
and
jl
movsb
aas
push
sbbl
dec
loope
inc
dec
ficoml
popf
lahf
mov
and
jecxz
out
fcomps
sbb
in
mov
fisttpl
into
test
popa
setns
push
dec
jl
shrb
xchg
jle
jne
sbb
cmp
movsl
jns
and
pop
les
xor
inc
lock
adc
lret
pop
cmp
adc
mov
test
mov
js
inc
mov
mov
sub
shlb
dec
in
jge
push
cltd
into
pop
pop
fwait
pusha
scas
dec
sti
inc
push
cltd
sbb
jecxz
push
adcl
mov
pop
ret
or
orl
stos
or
incb
les
pusha
adc
mov
xchg
pop
mov
ss
xchg
movsb
fisubl
sbb
adc
je
mov
mov
pop
pop
xor
addl
popa
mov
out
shl
stc
jbe
je
sbb
sbb
push
add
idiv
xchg
jl
sbb
mov
sub
out
adc
dec
pop
scas
or
enter
dec
dec
add
mov
pop
jle
rcrb
lods
push
cmp
idivb
dec
hlt
adc
fcoms
add
cmp
test
out
lds
repnz
xor
and
or
push
inc
ds
mov
hlt
in
pop
neg
fldt
xlat
mov
or
pop
fildl
cli
pop
dec
add
ds
int
hlt
daa
cli
cmp
jnp
mov
out
andl
call
adc
out
or
cmp
cmp
cli
fcmovnu
and
mov
sar
xchg
push
shl
inc
pusha
or
sti
lcall
testb
xlat
xor
xor
cwtl
pop
xor
and
or
out
mov
mov
loop
push
xor
jo
add
or
out
sarl
mov
gs
lods
inc
fnsave
cwtl
clc
arpl
sti
and
arpl
mov
cwtl
cmp
push
out
sbb
arpl
lahf
jle
mov
ja
add
cmp
add
sbb
pop
add
addl
stos
sbb
adc
addr16
cltd
jge
add
xor
lea
hlt
lods
push
pop
loopne
mov
popa
js
test
mov
movsb
cli
mov
fidivrl
mov
and
loope
and
loop
cmp
cld
cli
and
fst
cmp
cmp
add
arpl
mov
mov
notb
nop
mov
push
sub
cmc
sti
add
ja
or
jb
ja
xor
jp
ret
cld
xchg
lcall
out
add
inc
push
rol
out
inc
cmp
out
sub
inc
loope
xchg
xchg
std
xchg
adc
leave
jecxz
insl
insb
mov
xor
xor
add
icebp
test
inc
pop
aaa
test
lods
mov
lods
jne
ljmp
xchg
ret
loope
and
pop
pop
and
in
inc
push
xchg
jns
hlt
mov
adc
lds
js
or
lcall
jg
xchg
and
imul
rcl
cltd
jne
into
and
pop
or
aam
push
mov
idivl
shr
lcall
loopne
js
je
pushf
test
rcrb
pop
add
orb
cmp
enter
push
pop
jge
mov
and
test
clc
lahf
int3
pop
inc
mov
or
xchg
jl
andb
sub
push
out
jb
xor
pop
jbe
mov
loop
mov
fwait
inc
ret
mov
out
mov
xchg
mov
sbb
cmp
lret
jbe
insb
jnp
das
es
mov
push
jne
cmpsl
incb
mov
xor
subb
xchg
test
sub
jecxz
add
push
and
mov
push
dec
pop
mov
or
push
pop
mov
inc
xor
xchg
push
ljmp
out
or
stos
clc
pop
xor
ljmp
xchg
jno,pt
xchg
insb
in
mov
rcll
pop
mov
psllw
xor
std
ret
sbb
fwait
mov
adc
test
call
inc
das
fwait
inc
fisttps
mov
mov
das
xor
pushf
xchg
rclb
sbb
dec
arpl
ljmp
cmovge
push
mov
and
cmp
sbb
lock
cmp
add
test
in
aas
add
jmp
lods
mov
jo
lcall
pop
movb
inc
cmp
xor
ret
sahf
enter
aaa
pop
and
mov
test
jp
adc
xchg
xchg
xor
pop
pop
push
sbb
in
add
out
dec
fsts
mov
mov
adc
insb
push
in
insb
cs
pop
adc
and
mov
js
paddd
mov
pop
cmp
into
push
mov
inc
cmp
icebp
inc
dec
fimull
or
outsl
popa
ds
decl
fisubl
mov
lret
mov
jmp
and
pop
mov
in
add
push
andb
push
sbb
repnz
addr16
scas
aaa
loop
xor
ljmp
mov
sub
or
stos
xor
out
imul
rcrl
in
lea
mov
pop
lods
mov
push
add
lds
sti
popa
popa
fxch
fwait
mov
add
or
lret
ja
dec
test
mov
mov
fimuls
gs
stc
repnz
push
sbb
jmp
mov
and
sub
mov
xor
jg
shl
scas
loop
in
in
sbb
roll
mov
jle
sahf
aad
movsb
lea
lock
adc
int3
arpl
roll
jbe
aas
push
xor
das
adc
and
pop
repnz
dec
push
and
mov
inc
out
cmp
fisubs
sub
daa
out
mov
mov
xchg
and
andl
mov
sbb
ficoml
in
dec
jecxz
loope
sub
movsl
mov
aaa
mov
sbb
fcompl
sub
aas
pop
jle
in
movsb
sub
int3
push
bound
lret
bound
jno
loop
jl
addb
fs
mov
dec
ret
mov
xchg
xor
mov
stos
jo
into
pusha
jae
dec
mov
addb
and
cli
jg
leave
repnz
add
xor
mov
push
pop
dec
cmp
leave
data16
push
or
jl
jnp
int
jg
sti
scas
sarb
or
ret
xorb
push
daa
lret
imul
outsb
rcr
xor
dec
jno
sbb
or
and
push
lock
out
sub
sub
scas
repz
popf
insb
ds
int
xor
into
jbe
xchg
or
or
ds
adc
dec
jae
hlt
push
push
cs
mov
xchg
stos
xchg
and
or
or
mov
xor
jge
outsl
pusha
lods
fmul
xchg
outsl
sub
push
push
and
jae
lret
test
sub
mov
aad
or
jno
sub
rclb
jnp
adc
jl
aaa
add
cwtl
or
fbstp
call
nop
outsb
test
je
loope
into
cwtl
inc
arpl
repnz
jnp
and
gs
or
xchg
jge
jg
or
leave
iret
ss
scas
out
mov
es
cs
and
add
jecxz
into
and
pop
scas
out
xor
cltd
outsb
xchg
mov
cmpsl
and
lret
dec
mov
sbb
movsb
pop
and
sub
and
insl
push
adc
mov
in
push
mov
jecxz
jae
int
js
pop
sahf
mov
mov
and
mov
outsb
xor
sbb
inc
mov
or
lods
push
mov
xor
mov
jo
pop
dec
sahf
sub
inc
mov
add
mov
lds
adc
inc
add
pop
adc
frstor
fnstenv
inc
and
cmpsl
das
out
sub
jp
repz
mov
inc
cmc
mov
sub
adc
dec
adc
hlt
jbe
into
in
fsts
mov
sub
jmp
out
imul
and
ljmp
sub
insb
xor
adc
jp
stos
test
rolb
enter
in
ret
jne
dec
loopne
insl
cli
jns
aad
mov
push
jae
in
inc
mov
dec
in
imul
hlt
inc
mov
lret
je
repz
jmp
in
lds
or
bound
cli
stos
inc
in
out
add
mov
shll
adc
adc
and
add
or
pop
das
dec
and
cltd
xor
clc
mov
xor
mov
cmp
pop
xor
frndint
adc
pushf
or
xchg
xchg
jmp
push
int
push
or
ss
add
outsb
xor
call
sbb
sbb
lret
sahf
mov
ficoml
gs
jbe
mov
shl
jmp
pop
in
add
push
dec
lea
out
pop
movb
pop
xor
fldt
jne
divl
xor
ret
jns
roll
mov
sbb
setge
pop
fisttps
cmp
ficompl
add
xor
inc
pop
push
loop
pop
bound
adc
stos
and
jmp
lds
pop
xchg
xchg
dec
into
pop
fdivrl
lds
xchg
aas
je
in
xor
scas
insl
fnstcw
mov
mov
bound
frstor
shll
push
mov
cmpsb
xchg
repz
punpckldq
lods
pop
jnp
ljmp
or
mov
adc
sbb
out
xlat
bound
fisttps
sub
pop
out
inc
shlb
xchg
push
mov
sub
mov
movsb
mov
sub
sbb
push
lahf
fstp
or
shrl
pop
popa
fwait
outsb
fldenv
sahf
lods
aaa
pop
push
push
dec
hlt
jp
hlt
sub
mov
pop
je
imul
sbb
icebp
cld
dec
add
rorb
mov
lea
xchg
mov
rolb
or
popf
jae
rcrb
scas
dec
mov
or
shrb
cmpl
loop
aaa
cmp
sub
das
mov
dec
das
xor
push
psrlw
jb
mov
xor
adc
add
fcmovnb
and
push
mov
cmp
scas
xchg
in
inc
adc
xchg
jae
movsl
rolb
push
sbb
call
cld
cmp
ret
in
jle
push
sbb
in
addr16
mov
inc
adcb
inc
std
daa
les
popa
movsb
mov
jne
lea
xor
cwtl
jno
insb
mov
and
mov
shrb
add
sbbl
mov
into
test
mov
stc
out
out
lret
movsl
mov
mov
imul
xor
or
in
mov
dec
pop
fs
loop
dec
dec
scas
popa
es
mov
outsl
cltd
mov
xor
mov
aaa
dec
sub
out
mov
cmp
ficomps
dec
mov
lcall
popa
and
imul
ret
stos
ds
mov
dec
in
cmp
std
jnp
je
dec
or
popf
and
adc
arpl
and
lods
scas
jnp
sbb
mov
fsts
fwait
mov
outsb
mov
sub
lea
xor
in
decb
dec
dec
nop
loop
ret
inc
mov
cmp
int
push
add
iret
add
pushf
imul
push
lcall
call
int3
lret
in
dec
pop
or
sahf
shl
dec
stc
xor
loopne
adc
out
stc
fisttpll
or
xlat
ss
push
jnp
jmp
ss
leave
test
addr16
xchg
jne
adc
outsb
jp
roll
xchg
rorb
movsl
mov
sbb
outsl
popa
push
lret
mov
fisubrl
push
xchg
fsubrs
rorl
xorl
out
add
pushl
push
cmc
dec
add
cmp
ljmp
stc
pusha
inc
jle
test
into
sbb
out
mov
sub
insb
mov
pop
ljmp
outsl
xor
lcall
cwtl
imul
outsb
jb
cmpsl
std
data16
xchg
xor
mov
jp
push
xor
rorl
in
sub
insl
mov
sbb
aam
push
mov
jae
mov
xor
sbb
test
push
popa
push
lahf
adc
mov
ljmp
fs
jae
out
lods
out
mov
jae
insb
stos
adc
push
sarb
mov
push
mov
sbb
adc
in
inc
jno
into
jns
scas
dec
jns
repz
push
flds
sub
mov
mov
fs
push
negl
cmp
leave
loop
stos
dec
pop
imul
sub
push
xchg
adc
cli
dec
pop
sub
mov
inc
or
fldenv
incl
cmp
aas
or
pop
push
mov
fldl
add
add
lods
dec
mov
stos
cs
xchg
call
jae
shl
dec
xor
les
mov
sbb
test
mov
mov
out
push
test
ret
cli
gs
fldcw
adc
jae
sbb
add
in
clc
xor
fimuls
mov
add
loopne
sbb
in
xor
repz
mov
mov
xor
mov
ja
dec
out
pop
add
mov
mov
mov
sbb
arpl
cmp
popa
push
mov
pusha
adc
mov
cmp
mov
lods
icebp
mov
push
adc
xor
int3
out
and
out
pop
cltd
adc
mov
mov
xor
lds
enter
test
movsb
iret
mov
add
in
adc
hlt
pusha
fwait
pop
in
mov
in
mov
mov
lock
out
gs
pusha
mov
push
add
subb
or
add
iret
mov
pop
push
jecxz
and
fimuls
shrl
stos
mov
mov
mov
aas
lock
outsl
faddl
add
sar
xlat
fimuls
xor
icebp
mov
pop
cmpsl
or
std
ss
inc
inc
xchg
inc
ja
subb
jnp
andb
adc
jmp
jg
into
push
into
in
stos
enter
loop
mov
cmp
movsb
xlat
outsl
inc
push
hlt
cmp
insl
fldl
repnz
cld
mov
push
dec
lock
aam
pop
mov
out
cmc
ljmp
lret
mov
movsb
or
push
xcrypt-ctr
cmpsl
push
dec
addr16
in
add
xor
jmp
add
pop
fstp
cmpsb
fwait
leave
sub
jle
clc
fists
push
or
xor
repz
negb
rol
les
pop
xor
stos
inc
xchg
daa
cli
shlb
lcall
or
in
mov
inc
xor
push
out
sub
stc
repz
mov
pop
jnp
mov
pop
push
mov
stos
popf
jno
int
pusha
inc
jg
outsl
jp
adc
rcll
enter
jmp
nop
dec
sbb
push
add
rol
xor
mov
jns
pop
outsl
sub
fs
pop
in
mov
pop
xor
outsb
ja
cmp
js
movsb
sub
fwait
in
sub
sbb
insb
shll
jnp
cltd
test
push
mov
out
lock
data16
inc
int3
mov
scas
pusha
add
xor
jmp
cmp
xchg
cmc
or
subl
add
push
not
ss
daa
out
out
xor
sbb
jge
dec
std
mov
imul
ja
mov
fs
out
sub
fcomps
aas
fimuls
outsb
push
cli
pop
insb
mov
incl
ljmp
mov
and
scas
or
mov
ficompl
inc
xor
dec
ljmp
insb
adc
outsb
rcll
out
cmc
mov
lea
test
jb
dec
xchg
enter
nop
stos
push
mov
mov
cli
insl
mov
mov
imul
andl
xchg
jo
gs
outsb
cmpsb
add
pop
call
lret
mov
and
test
and
and
js
pop
pop
rol
jmp
mov
aad
sub
add
cld
inc
loopne
cmc
add
lods
lea
ret
std
push
stos
add
fs
fwait
divl
outsl
stos
mov
inc
scas
das
jno
aas
xchg
add
stc
dec
or
outsl
pop
pop
dec
inc
or
int3
int
fwait
pusha
popf
dec
mov
in
mov
dec
add
and
stos
daa
daa
pop
mov
sbb
fmul
and
addr16
scas
loope
jnp
test
xor
mov
addb
push
jmp
and
arpl
lods
movsl
inc
add
sub
jmp
jo,pn
sti
xchg
cmpsl
fwait
leave
mov
pop
jle
loope
ss
ss
lahf
mov
stc
in
cld
out
fadds
mov
mov
lret
mov
adc
xchg
add
push
insb
ret
outsb
cmp
sub
leave
fbstp
inc
cmp
inc
mov
or
xchg
or
cmp
cmp
mov
mov
idivl
jns
lods
xchg
ficompl
lock
mov
stc
pop
call
cmp
std
fistl
call
stos
imul
add
ljmp
adc
mov
inc
stos
addr16
mov
push
and
sub
rorl
mov
std
xchg
cli
insb
loop
jb
stc
js
push
test
xor
rcr
mov
dec
clc
add
test
xchg
lcall
mov
mov
or
cmpsb
xor
in
add
cmp
adc
jae
or
rcr
xor
pop
mov
cli
cltd
fsts
mov
jno
lret
mov
and
mov
adc
mov
cmp
lret
subl
xchg
inc
pushf
fs
sub
stos
mov
nop
test
insl
cmpsl
das
dec
mov
inc
std
push
aaa
ret
cmp
mov
out
aaa
ret
add
subl
push
adc
add
mov
xlat
push
es
dec
cs
xorl
sub
clc
and
push
out
pusha
push
in
in
lds
mov
sub
cld
mov
mov
and
insb
fdiv
dec
das
jg
xchg
shr
enter
and
xor
mov
jno
mov
fcoml
push
mov
mov
pop
jecxz
adc
movsb
std
ljmp
lds
nop
sub
lods
aas
andb
dec
loopne
dec
aas
jl
dec
jb
subb
nop
mov
icebp
lods
cli
jae
ljmp
and
dec
cmp
fbld
cwtl
icebp
mov
mov
ret
cmp
inc
cmpsb
ss
lcall
add
jo
rolb
test
push
int
rorl
fcmovne
push
jbe
into
push
fs
sub
push
fnstenv
adc
push
dec
loopne
daa
in
jnp
jae
jle
loopne
loope
or
push
adc
adc
test
orl
mov
xor
pushf
fstpl
mov
xchg
outsb
repz
xchg
rclb
es
lahf
cld
in
jl
xor
mov
and
fwait
xor
scas
push
fildl
jmp
out
fisubl
mov
pop
popf
cs
in
repnz
jbe
push
movsb
sahf
xchg
test
fsubs
ljmp
dec
int3
lret
pusha
add
mov
cwtl
sbb
stos
mov
mov
add
inc
insl
cmc
out
jmpw
addr16
adc
adc
loop
mov
je
mov
out
jb
in
push
cltd
in
stos
sahf
mov
lods
mov
mov
sar
xor
and
jne
decl
stos
add
in
inc
test
scas
xlat
jmp
in
xchg
push
add
ds
lds
mov
lret
inc
das
push
cmp
push
adc
dec
loopne
add
add
add
dec
xchg
rcll
inc
imul
xchg
xor
xor
add
or
stos
sar
push
mov
inc
in
adc
add
mov
imul
or
hlt
movsb
xor
lret
and
out
cmp
and
cld
outsl
cwtl
lock
cmp
out
dec
int3
cmp
mull
ljmp
add
xorl
jae
rcrl
test
fsubs
cmp
jle
dec
xor
addr16
popf
mov
jno
push
push
cmp
add
xor
test
add
mov
mov
inc
cmp
loop
repnz
mov
sbb
movb
lret
jne
jp
or
adc
and
cmpsb
mov
push
push
lods
fwait
jp
aam
mov
popa
gs
cmp
mov
inc
addb
fidivl
pushf
sbb
and
ret
pop
xor
cld
jae
enter
sub
or
aad
mov
sub
push
js
insb
sbb
out
cmpsl
jl
xchg
xchg
jb
repz
data16
cmp
imul
and
nop
push
ja
ret
inc
sbb
imul
xchg
fnstsw
imul
push
std
mov
xor
inc
aaa
mov
je
push
imull
aas
push
mov
pop
out
pop
dec
icebp
push
push
stc
xchg
mov
in
stos
nop
xchg
ret
pop
mov
fldenv
jg
xchg
in
stc
imul
daa
mov
jne
int3
dec
test
mov
subb
mov
inc
xor
in
mov
shll
sub
mov
data16
mov
rorl
push
add
sbbb
sub
or
adc
out
sbb
sbb
sbb
mov
test
popf
or
mov
add
sbb
pop
jge
test
test
scas
daa
adc
imul
push
push
icebp
pop
or
add
adc
mov
fstpl
fcomip
xor
in
pusha
bound
aas
or
jo
mov
ror
aas
add
int
out
mov
dec
out
or
iret
or
cmp
pusha
lods
insl
divl
xlat
dec
cmpsl
push
cmp
clc
mov
push
stos
jg
negb
mov
in
xchg
es
cltd
mov
mov
cmpsl
jmp
lea
add
pushf
hlt
jno
hlt
sbb
rol
popf
xchg
sub
lea
leave
mov
and
jg
and
ret
pmaddwd
je
mov
push
repnz
cmp
lock
pop
inc
cmp
addr16
sbb
int3
sar
xor
sub
into
repz
sub
jbe
cmpsb
cwtl
and
jmp
hlt
jge
or
lods
jne
test
inc
cmp
jbe
bnd
ffree
fucomi
push
sbb
dec
out
ficompl
leave
outsb
fstpl
outsl
jne
stc
sbb
data16
sbb
ja
loopne
jle
scas
stos
sub
xor
inc
push
ret
add
dec
mov
arpl
fidivs
lret
cmp
mov
xchg
gs
ffreep
add
add
mov
lcall
fst
push
cld
adc
lret
test
loopne
xchg
call
ss
mov
sub
push
jb
cld
rcl
jecxz
test
rcll
sar
jl
pop
lcall
lds
adcb
insb
lcall
rcrb
mov
das
and
dec
outsl
scas
into
fisubrl
rclb
fidivl
push
fwait
shll
or
in
lcall
les
mov
jge
ljmp
repz
aas
lahf
inc
in
aad
push
mov
mov
pushf
push
sbb
add
pop
sbb
nop
fcompl
das
cmp
lret
xchg
daa
xchg
fidivl
stos
mov
add
dec
int3
xchg
push
leave
shll
sub
hlt
xor
xchg
mov
pusha
idivb
fimull
and
pop
xor
adc
mov
inc
out
push
jne
sub
clc
inc
sub
rclb
mov
aas
push
lds
lods
inc
in
scas
mov
dec
and
pop
into
aam
or
xchg
adc
push
mov
les
daa
add
in
cmp
imul
and
cwtl
xor
mov
push
or
add
outsb
pop
sarl
andb
mov
cltd
or
lea
sub
mov
jle
pop
sbb
sbb
pop
insl
or
and
jbe
mov
xor
cmpsb
sub
out
cmp
in
repz
inc
mov
hlt
out
daa
cmpsb
add
mov
cmc
adc
and
mov
cmpsb
jmp
les
rcll
ds
ljmp
sbb
xor
stc
imul
push
dec
fsubs
shl
ret
mov
faddl
sbbl
add
mov
scas
imul
inc
add
testb
pusha
loope
cli
xchg
push
push
in
out
mov
or
pop
or
cwtl
inc
fisubs
daa
shl
mov
scas
inc
movsb
int
push
push
lahf
mov
fcoms
sbb
shll
std
enter
adc
stc
mov
jp
test
mov
out
dec
inc
sbb
jl
pop
sub
ljmp
imul
adc
insb
fwait
insb
sub
movsl
aad
daa
xlat
andl
mov
in
push
stc
cwtl
sbb
pop
lea
adc
and
mov
cmp
sbb
pop
jp
mov
mov
xchg
mov
fucomip
or
imul
cmp
sub
sub
push
out
push
leave
mov
fidivs
jle
scas
clc
clc
jg
stos
xor
aam
int
je
rcr
pop
pushf
je
push
mov
xchg
scas
out
mov
xor
int
jns
xchg
int3
int
orl
mov
lods
notb
sahf
adc
enter
push
mov
fwait
ret
mov
loope
inc
mov
sbb
movsb
pop
enter
xor
dec
inc
test
mov
mov
mov
js
pop
test
outsb
out
out
cwtl
pop
sub
inc
sbb
repnz
scas
je
dec
sub
xchg
fucomip
in
outsl
pop
jb
int3
imul
mov
sub
es
mov
shlb
xor
hlt
cmpsl
jmp
pushf
xor
push
mov
roll
jge
in
cmp
mov
into
das
lret
mov
xlat
mov
push
arpl
mov
hlt
or
adc
ljmp
fldt
push
pop
js
into
shll
lods
ret
mov
and
fs
mov
inc
xor
cmp
out
xor
das
xor
loope
lds
sub
jne
lahf
aas
xchg
mulb
or
ja
movsl
imul
and
add
setbe
pop
mov
xor
add
add
mov
addr16
outsl
cli
and
dec
out
lret
xor
aad
and
dec
jg
and
mov
jnp
push
or
sub
mov
pop
iret
or
ror
nop
push
jns
xchg
mov
fdivs
movsb
dec
mov
mov
sub
std
je
jle
xchg
sub
mov
add
rclb
sbb
jg
testb
push
fidivl
int3
and
xchg
or
inc
iret
sbb
lret
fs
cltd
mov
stc
xor
fadd
jno
xor
inc
mov
cmpsl
xchg
leave
or
xor
je
pop
imul
cmp
mov
div
rclb
nop
imul
out
fidivrs
movsb
and
inc
mov
mov
xor
jbe
fwait
mov
lcall
add
clc
pop
out
es
cmp
insb
xchg
in
aaa
xchg
popf
mov
roll
cmp
popf
add
and
fcmovu
inc
xor
and
in
mov
push
clc
lds
adc
adc
imul
cltd
in
jne
jbe,pt
lcall
mov
in
sub
test
jno
cmp
cwtl
pop
jmp
mov
imul
sub
out
loopne
adc
add
test
mov
imul
cmp
fsubl
dec
cmp
and
and
add
cld
xchg
add
pushf
out
inc
insb
icebp
repz
xchg
ss
mov
pop
mov
lcall
pop
gs
rcr
mov
xor
dec
xor
xchg
sti
adc
popf
push
pop
js
push
scas
xor
and
xor
add
sub
pop
inc
cmp
sub
scas
aas
push
fdivs
pop
mov
fwait
sub
stos
jbe
mov
inc
fs
xchg
dec
dec
or
cmp
imul
add
jle
enter
xor
adc
jge
dec
jp
imull
fisubrs
xchg
or
fmul
jns
out
int3
or
sbb
push
mov
pop
dec
mov
jle
push
pop
mov
lods
mov
mov
sub
imull
mov
fstps
and
cmp
mov
rcrb
aaa
pop
adc
mov
ss
dec
adc
negl
lret
aad
pop
enter
add
inc
lock
mov
fs
mov
es
push
movsb
mov
cwtl
in
or
xor
inc
push
out
mov
ss
fbld
mov
pop
push
outsl
scas
inc
scas
jge
xchg
loop
mov
xchg
xor
xor
cmpsl
adc
jl
add
mov
add
pop
pusha
into
out
or
mov
jne
xor
daa
sub
je
sbb
mov
dec
xchg
jne
shll
lods
test
jp
jmp
movsb
lea
dec
imul
cmpsb
imul
out
and
insl
jg
aam
fnstcw
je
subl
es
fucomip
adc
push
xor
push
inc
xchg
shrb
inc
mov
mov
and
xchg
movsb
pusha
sub
orb
inc
pushf
mov
mov
iret
sub
mov
xor
pushf
dec
mov
push
xor
pop
rdmsr
out
xchg
xchg
jecxz
mov
add
xor
xor
mov
cmp
stos
ljmp
test
adc
cmp
push
pop
sbb
adc
je
push
jecxz
repz
add
xor
dec
ljmp
cltd
sbb
xchg
lea
cmp
rorb
arpl
adc
mov
cwtl
aam
or
outsb
loope
movsb
cmp
cmpl
imul
cmp
pop
mov
mov
lds
loope
mov
jg
or
mov
inc
sbb
jne
clc
out
fwait
std
jbe
mov
add
adc
sbb
ja
cmp
adc
pop
jp
push
dec
pop
cltd
push
xchg
mov
insb
jo
out
cmpsl
ljmp
popf
cwtl
scas
mov
inc
push
ret
lea
movsl
out
adc
scas
cmp
les
mov
into
cltd
pop
mov
sbb
sub
mov
in
icebp
xchg
and
iret
bound
mov
push
daa
push
pop
add
xchg
test
push
cvtps2pi
mov
mov
inc
push
xchg
gs
ss
les
sbb
add
pusha
mov
dec
jle
cmpsb
sahf
mov
mov
and
out
je
loopne
mov
scas
add
cmc
push
pop
xchg
push
sub
pop
in
sarl
inc
in
xor
pushf
xchg
inc
icebp
sbbl
roll
pop
ret
xor
js
cmpsl
arpl
jge
int3
mov
xor
or
cmp
out
in
aaa
push
inc
testb
jg
fildll
or
into
enter
mov
mov
lods
xacquire
push
sbb
or
repz
xor
inc
test
xchg
rclb
rorl
mov
sub
pop
cmp
mov
mov
push
inc
mov
movsb
fistpll
cmc
mov
xchg
insl
add
sub
cmp
outsb
inc
push
leave
scas
and
push
shll
and
push
pop
in
or
out
popa
and
add
inc
arpl
aaa
xchg
xchg
fs
xchg
jp
in
xlat
outsl
outsb
xor
in
mov
lods
je
and
popf
or
push
cmp
out
iret
sbb
cs
dec
xchg
ss
gs
mov
cmp
xchg
fs
outsl
test
mov
loope
fcoms
in
out
popa
xor
mov
addr16
jmp
jp
mov
and
jecxz
and
push
pop
lret
mov
in
or
mov
es
call
inc
rcrl
inc
adc
cli
dec
xor
push
push
mov
sbb
sub
mov
in
inc
movsl
out
daa
cmp
jmp
xor
xor
sub
mov
dec
fchs
rorb
mov
les
mov
and
rcl
fldenv
mov
testl
ret
aam
pop
pop
jmp
fucom
dec
xchg
je
repnz
scas
addr16
xor
xchg
in
fdivs
pop
ds
lock
jnp
icebp
dec
cmp
ffreep
adc
neg
outsl
cmp
test
imul
sbb
loope
pop
xor
cmp
xlat
notb
ja
add
and
icebp
test
jne
and
outsl
add
jns
push
and
xorl
xorl
mov
mov
test
dec
xor
ret
mov
mov
shrl
orb
pop
inc
repnz
ljmp
sti
stos
insl
and
test
leave
pop
inc
idivb
mov
rclb
lahf
jne
push
inc
adc
jle
adc
push
and
or
push
adc
stos
xor
iret
nop
cmp
jge
adc
pop
mov
pop
ljmp
dec
and
pop
sbb
lods
jnp
pop
ficomps
lcall
stos
and
dec
lret
mov
clc
lods
jb
sbb
shll
out
add
mov
add
shll
cld
and
xchg
cmp
mov
data16
xchg
push
add
stos
out
out
es
mov
or
repz
ret
add
pop
sti
jle
push
xchg
in
mov
push
repz
leave
xchg
mov
aas
fs
aam
jmp
jns
xor
mov
inc
scas
sub
mov
insl
mov
lock
or
enter
xor
rolb
xlat
sbb
lret
jae
mov
popf
mov
mov
insl
push
mov
push
fwait
stos
push
push
jp
inc
mov
push
mov
xchg
mov
insl
xor
or
sbb
shr
out
es
arpl
xchg
out
mov
nop
fcmovbe
flds
push
ljmp
jl
imul
out
lret
dec
loop
sub
pop
mov
jmp
pop
enter
xor
add
or
int
jge
gs
sub
mov
out
or
sub
mov
sub
sti
repz
cld
xor
dec
and
cwtl
cmp
arpl
adc
or
sbb
xor
mov
lods
insb
mov
icebp
cmp
or
jmp
test
pop
in
js
add
xlat
roll
push
out
repz
int3
sub
xor
fisubrl
xor
adc
cmpb
sbb
mov
cmp
jg
xor
lret
lods
cmp
shll
scas
add
mov
mov
jne
lret
inc
and
andl
pop
lret
fwait
dec
cltd
push
mov
icebp
test
cmp
adcb
data16
inc
push
jg
enter
pop
xchg
inc
jne
cmp
dec
dec
jb
xor
and
lret
mov
gs
cmpb
mov
cmpsl
imul
dec
int
add
sbb
jmp
jmp
fimull
sbb
or
add
mov
ret
fwait
inc
or
iret
fwait
pop
push
addr16
stos
push
mov
insb
jnp
mov
ror
and
movsb
and
lods
jb
loope
loope
or
cmp
cltd
mov
sbb
aam
stos
cmp
inc
push
xchg
in
jno
jp
or
fs
sbb
lock
test
jns
stos
xchg
jo
inc
jbe
hlt
mov
cli
mov
daa
mov
mov
nop
lods
dec
sbb
xlat
imul
cmpl
sahf
jns
sbb
push
mov
loope
mov
insl
sti
mov
push
les
ljmp
mov
dec
sbb
in
shrb
jo
inc
dec
mov
jbe
lock
lods
add
jno
ds
stc
cli
fnsave
lds
mov
push
daa
mov
sbb
dec
mov
sub
xchg
mov
aaa
xchg
dec
repnz
fcmovb
cmpsb
lds
cmova
sbb
sbb
adc
jle
adcl
push
les
ljmp
mov
icebp
cmp
rclb
adc
mov
pushf
dec
es
pop
stos
or
stos
adcl
sub
lahf
sub
mov
mov
scas
inc
or
inc
dec
insl
mov
jne
sub
inc
stos
dec
and
stos
lds
cltd
stos
out
fistl
jae
gs
sti
fwait
xchg
aaa
std
or
stos
mov
mov
test
dec
test
cli
sub
out
orb
popf
jle
fdivrs
iret
push
sbb
xlat
lods
or
mov
fmull
andb
cmp
fcmovnb
push
sahf
jle
fdivs
incb
push
xor
and
dec
sbb
adc
mov
and
mov
mov
loop
dec
adc
push
pop
mull
sub
imull
mov
xorb
cltd
mov
xchg
add
mov
arpl
push
out
or
mov
fisttps
or
fldl
add
xlat
add
mov
add
cwtl
mov
iret
add
pop
imull
pop
nop
clc
inc
das
or
push
fsts
fimull
or
or
mov
test
push
sahf
jge
pop
cmc
iret
push
popf
in
loope
add
lods
push
xchg
in
icebp
mov
sub
adc
lock
lods
in
xor
jnp
add
in
push
push
jmp
in
xchg
push
jg
mov
and
sbb
push
sbb
ja
fimull
and
mov
test
cmpsl
icebp
repnz
add
mov
pop
add
mov
sbb
push
xchg
sub
es
mov
shlb
lcall
mov
fwait
dec
cld
xchg
je
push
add
sub
inc
jae
inc
daa
ror
mov
bound
clc
stos
sbb
jmp
sbb
push
arpl
xchg
sti
and
adc
daa
pop
gs
pop
mov
mov
pop
pop
les
sbb
mov
sarb
lret
imul
xor
scas
push
cwtl
out
sbb
leave
adc
pop
adc
and
mov
adc
out
jne
xor
adc
inc
push
push
inc
cli
mov
filds
imul
cmp
mov
cmp
cmp
sub
in
sbb
out
into
cmp
and
cmp
fldt
dec
adc
mov
sub
mov
push
push
test
jle
mov
int
add
loope
inc
mov
sahf
xor
adc
imul
lea
and
sahf
jg
xor
mov
jmp
push
in
cmp
sbb
sub
adc
ja
push
add
cmpsb
lret
ss
push
dec
rcl
cmp
pop
cmp
flds
sbb
and
add
outsl
movl
fisttpll
and
mov
jno
repz
rorb
int3
int
xchg
icebp
adc
lea
push
mov
cmc
jecxz
in
add
mov
addl
xstore-rng
cmpsl
les
mov
jo
jle
pop
shl
jge
dec
jl
das
cs
sub
or
dec
mov
add
mov
arpl
arpl
push
into
cmpsb
mov
cmp
nop
push
push
jp
pop
lds
movsl
sahf
test
cmc
popa
or
lahf
inc
mov
cmpsb
adc
xor
adc
or
mov
dec
adc
cmpsb
negb
sahf
std
cltd
gs
scas
aas
popf
test
and
jg
stos
test
push
popa
mov
pop
fwait
cmc
pop
ja
and
test
push
sub
jge
fisubrs
jbe
and
mov
mov
or
push
dec
jg
sbb
mov
sbb
push
inc
adc
test
ret
push
daa
scas
mov
in
xchg
shrl
popf
sbb
and
jge
fidivrs
popf
cmp
ret
es
loopne
mov
dec
xchg
cwtl
mov
scas
loopne
ja
mov
int
out
mov
test
cmp
mov
out
aad
and
pushf
inc
mov
or
jae
les
jbe
int
cmp
repz
sub
push
ret
rcrb
lcall
sub
and
sahf
add
movsb
test
and
scas
jno
test
and
inc
sti
ficomps
js
into
or
rcrb
push
jg
stos
mov
add
pusha
icebp
inc
cmp
push
jne
outsb
xlat
xchg
push
push
je
inc
clc
inc
xchg
mov
cmp
in
jnp
ss
cmp
aaa
fldcw
jnp
mov
xor
and
xchg
mul
int3
test
idiv
imul
js
sub
dec
pop
cmc
enter
cmpsl
mov
insb
enter
push
fs
dec
hlt
cmp
mov
jns
xchg
sarb
pop
push
ret
add
mov
xchg
decb
pop
sbb
sbb
xlat
inc
inc
or
pusha
inc
add
jle
scas
pop
lahf
dec
sbb
fisubs
shll
xor
xchg
inc
jg
adcl
add
mov
add
mov
push
loop
dec
lret
insl
jg
scas
test
iret
ja
push
adc
pop
sbb
mov
sub
ljmp
and
addl
adc
sbb
in
addr16
in
fwait
mov
mov
xor
mov
pop
xor
inc
cmp
ljmp
sahf
insb
cmpl
mov
fadds
cmp
test
popl
fidivrl
mov
adc
mov
inc
mov
mov
pop
pusha
mov
fisubrs
lret
jg
in
sbb
sbb
add
lods
inc
daa
xchg
lds
cmp
or
rcrl
sub
leave
call
lcall
adc
jo
lcall
daa
cli
enter
int
in
lods
pushf
fs
and
movsl
fs
scas
mulb
push
popf
dec
fsubl
push
inc
or
out
mov
pop
and
je
movsb
lods
js
pop
hlt
fcompl
outsb
xchg
pop
and
mov
fs
mov
xchg
lock
adc
xchg
sub
hlt
rclb
orb
push
ret
dec
mov
push
mov
pop
add
mov
or
fs
test
cltd
xchg
cmp
rol
or
mov
lcall
rcl
mov
jae
ja
daa
xor
shlb
aaa
mov
xchg
out
rol
addr16
cmpsb
mov
and
xchg
test
pop
test
sub
mov
push
xor
add
mov
sub
daa
and
mov
or
mov
inc
sar
or
xchg
movsb
jbe
cwtl
in
xchg
stos
sbb
mov
testb
jns
inc
dec
mul
push
subl
aad
push
adc
xchg
in
mov
add
push
add
bound
dec
sahf
dec
mov
jl
add
in
xchg
outsl
orl
aaa
mov
cmp
dec
mov
jg
mov
jno
lods
outsb
arpl
inc
and
sbb
jecxz
push
loopne
jns
and
dec
push
sub
add
dec
ds
push
jmp
sbb
xchg
imul
fsts
ret
test
jmp
sbb
xchg
or
mov
xor
xor
sbb
cli
or
stos
fmull
cmpsl
lods
cs
les
dec
test
in
adc
fdivl
paddw
out
jne
pop
mov
je
mov
push
push
adc
or
test
xor
or
xor
or
and
adc
fidivs
mov
xor
xor
orl
sbb
cmp
jmp
cmp
jmp
out
pop
add
rolb
jbe
fcomps
imul
adc
adcb
fucom
fldcw
out
mov
outsl
shr
fisubrs
inc
stc
or
out
or
fldcw
out
cmpsl
mov
jbe
xor
imul
incb
fcmove
xor
pop
add
push
mov
in
dec
push
outsl
insl
out
dec
cmp
pop
jbe
aaa
orl
addb
sbb
mov
xchg
outsl
mov
sbbb
mov
aad
jno
cli
mov
inc
fdivs
rcrl
int
inc
xor
outsl
push
cmpb
outsl
and
outsl
rorb
mov
mov
xchg
gs
out
or
out
cmc
adc
jo
push
add
or
or
sbb
mov
or
push
sub
mov
cmc
mov
jae
mov
stos
dec
mov
movsb
popa
jno
jmp
daa
jb
mov
imul
xchg
icebp
mov
push
xchg
push
xchg
push
jl,pt
xor
enter
fcoml
or
xor
sarl
daa
jmp
in
fwait
and
sbb
and
mov
push
lahf
and
sub
into
cmpsb
out
mov
dec
imul
jb
xor
mov
push
cwtl
mov
push
rcll
clc
or
add
and
or
pop
pop
rcrb
mov
add
inc
jmp
ret
ljmp
xchg
sub
push
stos
jns
push
js
in
or
push
xchg
or
out
inc
fcoms
sbb
ffree
xor
aas
cmp
pop
push
pop
xchg
imull
mov
cmp
push
cmp
data16
mov
sbb
mov
jo
pop
lock
pop
int3
cmp
adc
loope
or
movsl
testb
lods
imul
popf
scas
loope
dec
imull
mov
xorb
lods
jmp
into
sub
cmpsl
push
hlt
mov
stc
sti
int
aaa
adc
scas
dec
daa
lods
sbb
jnp
mov
inc
push
or
pop
test
lret
es
lret
pop
xchg
jle
cwtl
scas
imul
popf
test
mov
test
mov
subb
lods
mov
lds
cmpsb
adc
insl
rorl
inc
mov
negl
jnp
rcrb
jae
int
cli
cmpl
subb
leave
jmp
adc
leave
or
jl
lret
xchg
sbb
popf
lods
loope
inc
negl
std
mov
es
sbb
lret
roll
test
in
sub
sar
push
addb
dec
jnp
data16
mov
out
xchg
outsl
ja
addl
mov
jb
fdivrl
pushf
xchg
mov
sahf
push
sbb
mov
add
mov
cli
js
add
int3
outsb
add
outsl
int
out
pop
or
and
ret
es
sahf
addr16
pop
imul
in
ficomps
cmp
sbb
nop
pop
sbb
imul
adc
stos
pop
ljmp
aaa
test
inc
or
pop
lahf
inc
scas
pop
push
inc
out
ljmp
pop
gs
int
push
dec
aad
mov
or
jmp
jl
mov
inc
pop
loopne
jg
cmpsl
imul
sbb
icebp
inc
adc
aam
daa
xchg
loope
in
mov
cmp
jbe
lcall
les
out
leave
pop
or
sub
or
dec
sbb
aam
ljmp
adc
jbe
or
mov
jae
add
add
or
adc
in
mov
or
mov
les
or
dec
mov
pop
loopne
aam
stos
jg
ffreep
imul
mov
pop
sbbb
push
pop
mov
mov
push
mov
pop
lea
cmp
mov
addr16
insb
pop
lret
das
lret
movsl
sbb
das
push
cld
adc
inc
and
mov
hlt
inc
rolb
nop
jge
movsl
cmp
rorl
adc
jp
adcb
ds
push
pop
dec
loop
xor
sub
jnp
movsl
mov
add
jbe
mov
shlb
cmc
jbe
mov
stc
inc
rcll
fdiv
jp
cwtl
mov
dec
negl
lock
or
out
and
and
int3
xlat
dec
inc
into
jns
cmp
fwait
dec
cs
sahf
adc
xor
push
ret
movsl
jmp
cwtl
xchg
xchg
sbb
push
imul
jno
xor
ret
inc
pop
test
lcall
in
xchg
mov
mov
stos
jno
xchg
sub
mov
pop
sbb
add
cmp
test
outsb
dec
cmp
popa
xchg
repnz
out
rcr
fidivl
pop
fdivrl
mov
xor
cmp
push
jle
pop
scas
leave
daa
add
je
add
clc
dec
sub
inc
and
sbb
shrb
mov
sbb
cmp
fs
faddp
mov
data16
xchg
mov
pop
fisubl
insb
sbb
aam
movsl
jns
jle
pop
out
mov
jae
xor
inc
into
int
push
push
gs
shlb
dec
pop
jecxz
sbb
cmp
cmp
aam
dec
std
fcmovbe
pop
pushf
push
cmp
das
cmpsb
xor
mov
mov
jae
leave
loopne
test
and
xlat
xchg
add
add
jp
mov
les
mov
push
dec
stos
jmp
xor
out
lret
outsb
fsubrs
sbb
loop
inc
testb
cmp
cmp
sub
les
add
xchg
out
ja
fidivrl
jg
push
outsl
mov
cmpsl
stos
repnz
sbb
stos
cmp
iret
jmp
fisttps
sub
notb
mov
cmpb
jbe
shlb
cmp
push
adc
lcall
test
sbb
notb
shll
mov
add
inc
mov
scas
stos
inc
shl
push
aas
xchg
int3
dec
test
jge
shl
adc
add
add
shrb
add
xlat
pushf
sar
push
mov
cli
add
fwait
push
or
js
pop
sub
cld
push
jg
inc
lods
test
cmp
adc
dec
sbb
inc
mov
sahf
incl
out
leave
xchg
jg
push
mov
inc
jmp
inc
adc
xor
mov
scas
and
or
add
mov
pop
sub
jb
inc
and
lret
inc
fxch
pop
pop
dec
cmpsb
adc
icebp
out
jl
jb
fadd
sub
mov
dec
dec
dec
inc
iret
jg
fldl
cmc
icebp
int3
mov
cmc
xor
sti
sbbb
pop
xchg
mov
cmp
dec
fwait
jl
pop
jmp
insl
cld
lret
inc
adc
pop
insl
leave
cld
pop
inc
cmc
fsubrl
loopne
inc
jnp
sbb
adc
pop
ljmp
mov
mov
insw
test
ret
repnz
nop
xor
adc
cmp
dec
push
lcall
mov
jnp
int3
fwait
push
xor
adc
mov
loope
je
call
sub
mov
cld
adcl
mov
je
pop
dec
popf
sub
mov
pushf
ljmp
add
inc
sub
loop
dec
lds
movups
mov
jp
inc
mov
pop
in
test
fmull
movl
add
push
adc
inc
js
or
add
push
cmpsb
adc
sub
xchg
inc
lock
lret
push
pop
sub
pop
lahf
loopne
push
leave
xor
repz
cmpsl
jp
push
stos
outsl
sub
sti
xchg
add
or
addb
sarl
mov
dec
mov
fldcw
xchg
or
jle
imul
add
in
mov
lock
jo
or
shr
inc
mov
sbb
ret
in
lret
sub
fstl
pop
lea
aaa
xchg
das
mov
and
outsb
adc
dec
pop
stos
inc
push
ljmp
pop
lds
inc
sbb
jbe
jecxz
lods
mov
sbb
outsl
and
cmc
pop
out
dec
mov
mov
mov
add
pop
test
mov
push
push
jg
mov
or
sub
jmp
or
mov
xor
dec
pop
jmpw
dec
sub
pop
pop
mov
fcmovnu
ds
repnz
xchg
pushf
jns
sbb
push
push
aaa
loop
xchg
fildl
arpl
ja
pop
jmp
fbld
cwtl
cmp
mov
jle
testb
addb
fidivrl
mov
xchg
insl
sub
dec
mov
ss
mov
jo
movsb
cli
shll
adc
out
inc
inc
test
mov
cmpsb
sub
fsts
mov
jge
adc
jbe
sbb
jecxz
bsr
inc
cs
cli
dec
mov
fdiv
aad
adc
lret
loope
jno
pusha
imul
aad
inc
cmp
or
imul
insb
insl
mov
nop
dec
inc
or
mov
ret
outsb
xchg
adc
mov
push
dec
add
pushf
inc
shll
dec
inc
pop
movl
pop
mov
cmpsl
push
popa
cmpsl
mov
aam
scas
jmp
adcl
mov
mov
loopne
out
sub
cmpsb
sbb
lds
mov
jnp
pushf
fidivrl
loopne
test
scas
insl
pop
movsl
stos
cmp
jae
mov
mov
frstor
cmpsb
jg
cs
push
andl
xchg
and
rorb
add
push
pop
lods
add
dec
xchg
in
cs
and
fisubl
sarb
fbstp
xchg
jne
mov
cwtl
adc
fbld
dec
aad
push
xchg
fidivs
das
fwait
sub
fldl
add
cld
dec
in
rclb
or
mov
cltd
mov
adc
sbb
mov
lock
sbb
ja
xchg
dec
pop
dec
scas
inc
pop
stc
jp
mov
dec
xor
hlt
xchg
hlt
pop
in
adc
jns
es
pop
xchg
jnp
pop
bound
xor
sbb
sbb
hlt
repnz
lret
jb
pop
or
inc
xchg
aam
pop
adc
sarb
cli
jae
js
push
mov
shll
lock
fdivl
pop
popf
jg
outsl
js
addl
cmc
add
pop
inc
add
repz
lahf
shr
cwtl
adc
fldenv
xor
out
or
mov
mov
std
mov
sbb
mov
jp
pop
js
inc
cmc
ljmp
mov
pusha
add
dec
outsl
cmp
cld
loope
lods
add
mov
fwait
and
ror
rcrb
mov
cmp
sbb
fnsave
add
xor
mov
push
js
test
in
in
xchg
out
jle
xchg
pop
cmp
ficompl
lret
inc
adc
ret
mov
nop
pop
push
xlat
dec
pop
das
incl
ljmp
imul
inc
out
xlat
test
mov
repz
idivl
dec
imul
out
jl
fbld
insl
iret
lods
icebp
or
sbb
rcrl
mov
xchg
push
jle
int3
fs
pop
and
outsb
loopne
ds
int3
jo
sbb
xchg
aam
outsl
sub
adc
pop
call
movsb
mov
testb
fcmovnu
es
jecxz
mov
fst
and
jecxz
into
pop
ss
fincstp
push
ret
add
mov
addr16
mov
lahf
in
pusha
inc
dec
cmpsl
stc
fwait
xchg
jp
ss
sbb
and
int3
sub
inc
inc
sub
xchg
jae
fildll
bound
cld
xor
jns
jb
cwtl
pop
popf
mov
shrl
aad
pop
aas
shll
scas
jnp
inc
xchg
add
clc
mov
sbbl
arpl
push
sahf
inc
mov
mov
cmp
inc
dec
mov
loopne
mov
ja
inc
cld
pushf
xchg
xor
icebp
cmp
fiadds
sbb
insb
jecxz
repz
test
cmp
test
popf
mov
inc
out
or
pop
pop
aaa
inc
or
and
pop
sbb
in
icebp
inc
shlb
test
xchg
mov
xor
cmp
aam
cmp
mov
xor
fistpl
inc
cltd
ja
cli
lret
test
lods
fisttpl
mov
or
xchg
loopne
add
mov
dec
fs
mov
aas
das
std
add
imulb
sbb
or
mov
dec
sbb
xchg
mov
out
fcmovbe
test
push
mov
out
pop
popa
dec
in
fwait
push
cmp
fsub
pop
arpl
data16
cmp
xor
scas
mov
daa
mov
and
nop
jno
js
inc
push
leave
mov
cmp
int3
fldenv
xchg
sbb
pop
cld
test
test
repz
sbb
pushf
mov
sbb
int3
lahf
jb
cmpsb
and
inc
adc
dec
dec
mov
inc
mov
adc
sbb
scas
roll
aad
cs
dec
add
neg
aad
lods
orb
xor
movsb
cmp
mov
jbe
jle
das
push
enter
mov
call
nop
sub
scas
sbb
das
clc
out
js
mov
and
mov
nop
rcll
cwtl
stc
scas
js
add
and
jnp
sbb
adc
into
pop
in
mov
cmpsb
pop
cmc
mov
mov
stos
mov
xor
mov
ja
in
addr16
jbe
lret
std
jg
inc
cmc
stos
mov
add
call
sbb
clc
int
lahf
in
cmp
cmpsb
jecxz
push
int3
shll
popa
push
mov
or
xchg
jg
inc
lods
stos
pop
push
add
and
lods
mov
adc
cld
mov
cmc
and
andl
es
add
mov
test
mov
and
addr16
lret
std
jg
inc
or
jb
int3
lods
pop
jnp
sbb
adc
cld
movl
out
je
bnd
mov
lret
sarl
inc
in
dec
in
bound
lock
jb
int3
sbb
fmul
sub
in
pop
cld
xlat
inc
cmpsb
lret
jmp
xor
inc
int
add
mov
ja
lds
pop
and
outsb
mov
cld
shll
stos
pop
ja
dec
addr16
jbe
lret
imul
pusha
leave
mov
das
inc
lods
cmpsb
sbb
mov
mov
pop
adc
xchg
mov
clc
and
jbe
lret
dec
jg
inc
inc
stos
jecxz
add
and
into
bound
cmp
pop
dec
rcr
pop
stos
shlb
int
jnp
sub
jg
inc
aad
push
add
xchg
or
xchg
adc
int
mov
add
mov
cmc
adc
scas
and
pop
pop
rol
push
mov
test
addr16
jbe
lret
popa
jg
inc
jns
push
or
cmp
adc
insl
xchg
mov
adc
cmpsl
popa
add
adc
stos
sub
xlat
das
jne
addr16
std
add
push
iret
into
sub
popf
out
jge
decl
ja
int3
cmp
cld
push
inc
in
inc
cmc
cmc
int3
mov
or
dec
pop
int3
rcrl
pop
daa
adc
push
aaa
push
incl
lock
loopne
inc
cmc
call
mov
push
roll
sbb
addr16
jbe
lret
in
bound
stos
jbe
add
jnp
sbb
pusha
in
int
jne
into
cmpsb
jnp
ret
int3
js
lds
xor
lods
mov
aaa
movsl
scas
popa
mov
sbb
xor
or
sub
rorl
or
js
shlb
out
and
cltd
lret
sbb
int3
xor
lea
faddl
xor
pop
mov
sub
lock
pop
xor
pushf
adc
lock
inc
lea
jge
jo
xor
in
pushf
pop
or
dec
and
inc
jp
mov
inc
mov
insl
std
addr16
fwait
inc
push
or
out
cwtl
add
das
add
cmp
add
stos
inc
or
push
repnz
mov
sbb
stos
orl
ljmp
push
mov
jb
fdivr
fwait
out
dec
xor
jle
sbb
scas
mov
add
jne
dec
mov
cmp
cmpsb
jge
or
fucomip
cltd
adc
jge
or
out
in
pusha
sbb
inc
pop
hlt
sub
xchg
movsb
lods
jnp
mov
push
cmp
push
mov
or
pop
push
push
mov
fnstsw
movsb
stos
xlat
ss
mov
pop
or
movsl
insb
push
add
push
lret
push
mov
mov
xchg
stos
jbe
xchg
mov
adc
cwtl
jnp
xor
ds
iret
je
cmc
scas
sbb
xchg
test
call
xchg
mov
mov
pushf
stc
call
mov
mov
ret
and
jecxz
les
inc
sbb
sbb
inc
xor
or
mov
in
in
int3
lods
sbb
push
mov
mov
push
pop
adc
pop
jmp
push
dec
ljmp
or
pop
jge
into
fwait
orb
mov
sub
stos
mov
imul
mov
scas
and
loopne
jnp
add
ret
xchg
test
jp
mov
in
sub
in
cli
and
repz
pop
test
stos
inc
test
mov
cli
jne
push
ja
data16
shlb
mov
ja
xor
dec
repz
lret
int3
jo
add
jge
add
cmp
mov
mov
mov
orl
mov
inc
fildll
and
jae
xchg
mov
loopne
lea
insb
and
push
jne
or
inc
bound
pop
mov
add
rolb
enter
pop
push
add
cmp
les
xlat
pop
pusha
mov
sbb
mov
outsb
jbe
daa
pop
mov
push
pop
sti
sub
nop
stc
jg
int
jbe
push
in
outsl
pop
movsl
daa
inc
fwait
add
sub
repnz
xchg
dec
out
enter
mov
mull
shrb
in
gs
insl
test
add
call
lods
fcoms
add
inc
stos
ja
add
popa
adc
push
ja
pop
popaw
mov
mov
mov
arpl
mov
jne
add
in
sbb
shl
aaa
mov
cmp
add
mov
sub
je
adc
std
pop
jo
jne
jg
insb
xor
int
jl
sar
pop
sbb
addb
mov
js
movsl
ficoml
xchg
xchg
test
std
or
pop
flds
dec
stos
jo
ja
popf
inc
add
mov
xchg
jb
fnsave
add
cmp
jge
lods
inc
lods
movsb
mov
push
in
cli
mov
out
lea
fcom
or
sbb
cwtl
ret
push
fmul
stos
pop
cmp
mov
mov
adc
shlb
adc
dec
repnz
mov
add
xor
dec
lea
fwait
test
and
or
and
inc
pop
int3
test
push
xchg
das
out
mov
insl
stc
lods
mov
add
cld
jne
in
mov
push
aaa
sbb
test
push
push
mov
jge
sub
fld
add
mov
pop
repnz
sti
mov
inc
xlat
sbb
jmp
sbb
push
push
addl
aaa
dec
cmpb
flds
pop
jmp
jbe
jmp
movsb
dec
je
push
mov
jecxz
aas
inc
adc
outsb
cwtl
adc
jg
sbb
lods
sbb
in
stos
lea
mov
sbb
mov
inc
repnz
flds
mov
pop
and
push
pop
jmp
mov
fwait
repnz
shlb
lock
out
mov
and
sbb
and
jge
jne
mov
fmulp
xor
pop
xor
push
and
mov
lcall
imul
pop
data16
fptan
mov
push
std
sbb
add
leave
popf
mov
add
sbbl
ja
push
testb
mov
cmp
inc
or
clc
jo
mov
cld
jne
xor
dec
addb
jbe
in
into
imul
jbe
xorb
mov
jmp
rcrl
imul
sub
jmp
into
repnz
sbb
cltd
and
hlt
js
ret
xchg
lret
fistl
sub
adc
insl
mov
pop
leave
int
leave
push
ret
out
ficomps
cmp
loope
into
jbe
cmp
cli
adc
or
jae
xor
enter
imul
inc
neg
pop
mov
jns
leave
jne
in
push
and
cltd
aaa
xor
jg
inc
mov
and
jnp
pop
scas
push
push
lea
cmc
nop
sub
cltd
jne
sub
mov
fiaddl
call
fwait
add
push
daa
or
cmp
add
lods
cwtl
fcomp
pop
push
push
aad
push
mov
sub
and
mov
or
inc
push
mov
jnp
mov
pop
dec
cmpsb
xor
xacquire
sbb
in
and
xchg
imul
fisttpl
adc
mov
ret
call
mov
xor
adc
inc
mov
pop
dec
jl
fcomps
rep
dec
mov
pop
jo
insb
cld
push
cmp
loope
add
in
ds
gs
loopne
inc
adc
addr16
or
mov
hlt
pop
lcall
sbb
push
jno
pop
jp
xchg
sbb
mov
add
fdivrs
loop
and
inc
or
ficoms
inc
mov
pop
sbb
mov
jnp
and
jnp
lds
mov
lods
lret
into
and
ret
fiadds
pop
mov
xchg
inc
popf
nop
jl
xor
out
cmp
mov
mov
in
sahf
jp
jmp
pusha
dec
inc
bound
cld
mov
mov
sahf
mov
fdiv
jo
and
repnz
dec
mov
jmp
popf
mov
sahf
lea
icebp
adc
int
dec
insb
fadd
cmp
inc
loopne
imul
hlt
mov
iret
and
add
movsl
adc
ljmp
ror
jl
pop
mov
mov
fnstcw
push
jo
push
gs
lret
aad
jge
adc
push
inc
mov
jge
mov
inc
lds
jb
pop
cmp
shll
inc
push
push
add
push
add
adc
out
les
jmp
loop
sbb
out
mov
xchg
mov
jl
fwait
cmpsb
jl
jnp
add
in
inc
pusha
lods
jbe
subl
pop
add
pushf
xchg
push
jp
cmp
ljmp
movsb
sbb
sub
out
fwait
mov
jns
scas
xchg
push
lock
xor
sarl
movl
sar
aaa
sub
out
push
dec
mov
jnp
bound
popf
int3
jbe
cwtl
dec
or
pusha
mov
mov
faddl
sbb
jnp
icebp
jle
ss
ficompl
add
repz
sub
outsb
andps
inc
mov
jbe
adc
jo
sub
rolb
cmp
aas
into
inc
sub
flds
mov
adc
test
imul
addl
mov
pop
lods
xor
addr16
je
fidivrs
pop
mov
mov
daa
daa
and
in
roll
cli
inc
add
jo
push
add
and
cltd
lahf
push
into
cwtl
inc
sub
fwait
lcall
mov
inc
jge
pushf
dec
sub
mov
adc
lds
dec
pop
mov
or
push
jno,pn
sub
mov
orb
data16
mov
jmp
mov
gs
cmpsb
jb
stc
rol
mov
jl
lcall
add
sub
icebp
fcompl
enter
xchg
push
jnp
imul
fidivrl
or
cmpb
xor
shlb
dec
jb
mul
add
cmp
lcall
jae
jp
adc
dec
and
mov
inc
imul
push
jbe
in
ja
std
push
pop
dec
sahf
js
aaa
cmpsl
jp
ss
fsub
loopne
cmp
scas
jmp
ret
sbb
sbb
adc
hlt
sti
loope
pop
popf
cbtw
sub
iret
out
push
add
sub
pop
sbb
lret
mov
xorl
mov
das
jmp
stos
inc
pushf
sub
pop
push
dec
cld
sbb
cld
cmp
loopne
pop
push
arpl
dec
loop
sarl
ljmp
dec
mov
test
jb
xor
sub
ret
xorl
inc
je
jp
in
cmp
icebp
aad
test
outsl
out
dec
in
mov
repnz
cmp
das
hlt
push
stos
sahf
enter
fstpl
test
mov
cmp
jge
add
lret
mov
jnp
and
lods
inc
jnp
sbb
adc
pushl
add
mov
icebp
scas
js
adc
and
cli
mov
inc
pop
and
lret
and
jp
jmp
fdivs
dec
lcall
pop
jge
mov
decl
cli
pop
push
in
loopne
xchg
lea
sub
test
leave
hlt
arpl
cld
aad
xor
add
jbe
jmp
adc
jle
lret
push
jnp
fucom
inc
fidivrs
int
cli
stos
outsb
pop
repz
pop
adc
in
jns
mov
mov
sbb
xor
sbb
cmc
cli
inc
outsl
sub
push
daa
cmpsl
cwtl
dec
pop
mov
mov
int
mov
dec
jp
fwait
sub
or
push
lcall
mov
adc
in
sbb
es
loope
lods
cmp
jns
ds
insb
mov
fwait
hlt
es
inc
dec
push
xor
andl
imulb
xchg
jmp
aas
in
pop
jg
aaa
inc
add
sub
inc
cmpsb
cmp
or
sub
sbb
sbb
sbb
xor
mov
sub
cli
cwtl
xchg
mov
clc
les
jecxz
aad
or
mov
ja
cmp
arpl
call
xchg
js
das
into
jno
xchg
or
push
js
inc
stos
loopne
cmp
mov
jae
in
shll
xchg
jo
push
sbb
cld
add
mov
ret
bound
popa
shrb
mov
das
add
fisubl
cmp
mov
cvtps2pi
lea
popa
cmpsb
pop
mov
push
jecxz
leave
adc
xchg
or
iret
sbb
sub
xchg
and
and
popf
mov
fwait
sahf
xor
mov
mov
cmp
aam
push
les
xchg
adc
fcompl
xlat
scas
insl
xchg
out
pop
mov
adc
insb
mov
sub
mov
incb
lods
out
push
dec
jns
ss
pop
sub
ja
cmp
mov
dec
mov
jmp
mov
push
adc
pop
jns
icebp
rcrb
add
lahf
inc
loopne
out
push
xor
pop
jg
mov
and
push
sbb
or
fwait
cmpsl
inc
adc
repz
adc
jno
test
or
das
decb
cltd
mov
adc
mov
in
insl
mov
out
js
sbb
out
fsub
cmpsb
dec
out
push
inc
ret
stc
push
xchg
pop
push
ljmp
test
cmpsl
add
cltd
imul
push
lock
push
cli
xchg
das
ljmp
pop
push
pop
mov
ds
mov
pushl
sahf
fisttps
test
sahf
movzbl
jp
les
mov
dec
das
mov
or
int
in
inc
stos
js
stc
inc
xor
push
stos
out
scas
mov
inc
dec
fdivrl
out
fwait
pop
mov
pop
ret
mov
addb
adcb
in
test
outsb
mov
das
aam
mov
and
xchg
push
inc
pop
add
inc
in
xor
popa
jae
mov
cmpsb
dec
dec
stos
lds
xchg
or
mov
mov
outsb
daa
out
pop
test
rcr
cmp
iret
pop
pop
dec
cld
jle
test
es
mov
sub
push
out
out
mov
inc
test
pop
jg
mov
loop
inc
loopne
push
xor
lcall
gs
test
push
xor
lcall
push
sub
pop
and
scas
mov
add
cltd
pop
mov
cmp
rclb
test
cmpb
int3
push
xchg
jbe
sbb
mov
pop
pop
imul
dec
cmpsl
ficomps
pop
inc
ds
shll
or
xchg
mov
add
jl
in
into
mov
outsl
lods
sub
subb
lods
sahf
imul
inc
inc
jge
mov
ds
inc
jp
pop
mov
pop
jmp
cmp
adc
inc
daa
cmp
jno
imul
adc
notl
dec
add
and
mov
adc
cmp
addl
insl
and
popf
jl
pop
cmpsb
push
add
jle
cmp
pushf
mov
aad
int3
mov
xor
cmpsb
cmp
mov
loope
mov
mov
fcmovnu
scas
mov
outsl
jl
cmove
xchg
push
mov
xor
xor
ljmp
jmp
push
ret
cmp
sub
cmp
push
push
iret
and
and
cmpsl
lcall
add
enter
inc
dec
xlat
adcb
push
lds
xor
adcl
add
pop
out
mov
negl
push
call
lea
ds
int3
cmp
mov
aas
cs
stos
js
loope
jb
inc
cmp
xchg
and
ljmp
cltd
jg
lods
lret
push
mov
mov
pusha
cmp
sbb
out
mov
call
in
out
std
test
cmpsb
ja
mov
dec
popf
hlt
fimull
inc
jnp,pn
les
adc
pop
lahf
sub
loop
inc
add
cmp
xchg
cmp
and
shll
int3
sub
jge
mov
add
mov
mov
pushl
lret
xchg
inc
cltd
stos
xchg
inc
and
inc
jnp
sbb
inc
int
aas
in
adc
cmp
cmpsb
es
add
das
and
idivl
adc
mulb
add
imul
addr16
jg
inc
lods
stos
jg
mov
inc
sbb
int
fwait
addb
sub
pushl
add
sbb
jl
lea
out
shr
ja
popf
cld
inc
mov
fistl
je
sub
int3
notl
je
mov
imul
test
push
ds
pop
mov
movsb
orb
xchg
divl
push
pop
lock
andl
hlt
xchg
mov
jecxz
in
inc
or
and
xchg
lret
cld
cwtl
stos
cmp
add
sub
pop
ret
js
sbbb
inc
add
pop
fdiv
mov
add
ljmp
icebp
dec
mov
stc
jp
and
push
push
fwait
lcall
stos
mov
adc
xchg
js
std
xor
mov
fs
push
jg
cmc
sub
insb
xor
and
test
and
mov
cmp
xchg
int3
cmp
inc
out
cmc
in
pop
inc
mov
dec
adc
out
sub
ja
xor
stos
adcb
scas
jne
mov
mov
in
orb
scas
mov
outsb
call
sub
shlb
and
cmpsb
arpl
cmp
repz
mov
cmp
mov
sub
push
insb
icebp
ret
lret
lea
loopne
mov
pop
dec
js
sub
or
mov
cwtl
dec
dec
repz
in
int3
push
inc
fiaddl
cmp
shl
and
faddp
mov
xor
stos
xor
and
lret
dec
cmpsb
add
lret
jne
mov
mov
lock
test
mov
cmp
xor
mov
adc
stos
ja
int3
out
add
cwtl
mov
aaa
ret
test
and
jge
popf
jle
enter
aam
adc
jno
xor
aam
out
push
loopne
jb
sarl
pop
insb
into
push
out
shlb
sub
test
sarl
fwait
dec
push
mov
sub
lahf
daa
jbe
insb
pop
ret
sarb
imul
mov
push
xor
push
xor
add
cmp
mov
ds
xor
ret
stc
stos
jbe
push
mov
adc
addb
cmp
out
cmp
lods
cld
pop
push
shll
jecxz
xor
mov
pop
dec
xchg
subl
dec
rolb
int3
push
stos
pop
and
fcmovb
sub
cmp
ret
in
push
xor
xlat
push
cmp
xchg
cmpsl
xor
adc
sarl
and
dec
hlt
xlat
arpl
xchg
ds
loop
jmp
repz
jae
orb
into
and
pop
jmp
insb
ret
mov
cld
xchg
and
insb
in
lcall
cwtl
lret
popf
cli
outsl
je
mov
aaa
shl
inc
ret
jae
stos
fidivrl
adc
and
xchg
sub
dec
cltd
xor
inc
dec
mov
cltd
sbb
jl
and
xor
fs
subl
int
icebp
sbb
int3
ljmp
fwait
cmp
les
inc
out
jne
lahf
jnp
inc
inc
cmp
sbb
out
xor
testb
cltd
mov
popf
cmp
adc
add
sub
and
ret
jp
push
jno
out
xor
fdivs
hlt
leave
inc
cmp
mov
pop
jg
shrl
insb
inc
lret
cmp
mov
fists
sub
cmp
subl
add
cwtl
mov
int3
xchg
int
roll
movsl
mov
arpl
insl
sti
sub
cmp
ret
shr
cmp
dec
rclb
push
les
xor
sbb
fstpt
cmp
int
cmp
xchg
ficompl
aad
shrl
orl
sbb
pop
lret
ja
fadds
mov
cs
mov
xchg
push
adc
out
je
sbb
xor
js
mulb
jo
jnp
xor
fildll
push
jmp
inc
cld
sti
inc
dec
cmpsb
repz
xor
pop
mov
rol
mov
in
or
sub
mov
xor
mov
ja
movsl
addr16
jbe
lret
mov
testb
cwtl
jl
ja
dec
mov
imul
mov
and
test
and
loope
inc
jge
mov
or
jb
out
fdivs
div
pusha
ss
sub
fidivl
lds
mov
test
sahf
sbb
and
or
cmp
jle
loope
jge
insl
mov
pop
cmp
jmp
jo
xchg
arpl
add
cmpxchg
and
fwait
shl
push
jns
cmc
imul
testl
in
mov
imul
scas
lahf
bound
xchg
cmp
call
or
ja
cltd
stc
cltd
pop
jno
mov
dec
sub
movsb
bound
xchg
cld
sbb
test
xchg
cmpsb
stos
int3
mov
fs
jg
ret
sub
enter
or
adc
jnp
shrl
pop
mov
insb
xchg
adc
lods
jns
mov
movsb
das
push
xchg
inc
dec
mov
push
mov
imul
and
pushf
jp
mov
inc
push
out
in
out
jg
adc
out
mov
adc
and
pusha
sbb
enter
push
outsb
pop
dec
inc
jecxz
push
repz
aad
gs
arpl
dec
cmp
sarl
pop
loop
js
jecxz
stos
push
jg
inc
test
add
and
pop
pop
or
jmp
jnp
push
repz
sbb
sub
in
inc
mov
cwtl
cltd
dec
insl
cs
rorb
xor
dec
push
cmpsl
icebp
outsl
daa
ret
mov
jo
je
movsb
push
mov
leave
xchg
pop
cld
fisttpl
adc
mov
push
out
repz
aad
mov
repz
sarl
pushf
adc
xchg
lea
inc
sbb
insl
push
push
sbb
xor
and
fstpl
push
test
aam
jge
lea
daa
mov
iret
mov
repz
imul
in
shl
sub
push
shl
das
in
shll
mov
adc
fldl
pop
int
push
cmpsl
xor
rcl
xchg
jecxz
cs
dec
mov
sub
xchg
pop
xor
mov
and
jp
movsb
fadds
sub
mov
push
sub
lahf
popa
sub
fidivrs
fcmovnu
out
mov
xchg
mov
ret
jmp
inc
xor
fs
jno
mov
ljmp
icebp
iret
xor
or
or
fisttps
jecxz
clc
scas
xchg
jl
xor
nop
leave
scas
inc
adc
cmp
pop
cmp
adc
test
mov
add
cltd
sbb
in
stc
insb
sar
dec
add
pop
out
in
add
add
add
add
add
add
add
add
adc
les
adc
adc
adc
int3
add
add
add
add
add
add
add
add
add
add
adc
in
adc
aas
add
add
adc
pop
add
add
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
inc
push
outsl
arpl
je
add
add
in
ss
fmull
seto
add
fnstsw
add
repnz
mov
push
test
inc
pop
andb
pinsrw
dec
add
lds
in
pop
add
add
xchg
je
movsl
mov
or
sbb
push
xor
dec
aaa
jmp
push
adc
and
adc
daa
jns
mov
nop
int3
mov
cs
dec
movb
adc
shlb
pop
sbb
cmpl
std
data16
mov
push
mov
or
bound
aaa
xchg
addl
xor
dec
repz
subl
hlt
es
sub
mov
sahf
pop
push
mov
push
pushf
pop
pop
scas
jg
loop
or
and
fs
call
push
cmpl
nop
or
xchg
nop
add
mov
adc
push
sub
or
adc
dec
push
clc
or
adc
int3
mov
pop
cwtl
or
add
sub
inc
add
xor
push
add
and
dec
add
stc
popa
mov
add
enter
add
add
fldlg2
loop
jb
add
arpl
or
aam
pop
push
inc
daa
mov
dec
push
and
in
inc
jns
ret
add
and
dec
push
mov
xor
mov
adc
and
je
in
xchg
mov
in
cmc
mov
mov
jnp
jmp
push
movsb
inc
add
cmc
jo
mov
add
pop
adc
stc
scas
orb
cltd
mov
and
xchg
lret
add
popf
data16
inc
pop
clc
cmp
add
adc
sbb
jecxz
outsb
inc
adc
insl
xchg
out
xlat
add
xor
les
movsb
dec
repz
and
jns
add
loop
add
cmc
insb
subb
or
sub
mov
pop
nop
inc
cmp
lock
ficoml
enter
and
lock
cld
sub
mov
sbb
or
incb
inc
or
mov
xchg
sbb
mov
sbb
call
ficoml
rol
ss
add
icebp
sarb
adc
fwait
popa
sbb
and
add
add
mov
insb
inc
loopne
mov
test
add
push
test
sub
dec
stos
pop
pop
decl
testb
mov
adc
sbb
test
popl
cmp
push
mov
cwtl
mov
xchg
or
popf
inc
sarb
inc
or
sbb
and
inc
or
or
xchg
xor
insl
xor
inc
adc
jle
arpl
sbb
pop
into
dec
inc
adc
lret
sub
adc
and
cltd
lods
sub
subb
jp
sub
leave
mov
aam
movsb
sub
inc
adc
fldt
loopne
fistpll
jl
lret
test
cwtl
pushf
mov
or
cmp
push
sub
jne
add
xchg
outsb
fimuls
roll
push
bnd
adc
and
sbb
or
lods
xorl
dec
dec
xchg
push
add
rcrb
xor
jp
add
sub
test
out
scas
icebp
sub
jl
jnp
imul
pop
add
or
xchg
or
shlb
sub
int
in
add
xor
repz
enter
or
pushf
push
mov
into
add
and
mov
add
hlt
mov
orb
clc
je
push
inc
sub
push
add
rorb
push
or
adc
mov
add
lds
insb
outsl
test
xor
iret
xchg
fadds
or
push
adc
push
adc
pop
adc
and
shll
or
mov
ljmp
lahf
add
mov
cmp
add
mov
je
adc
adc
adc
fsubs
shlb
mov
inc
mov
push
pop
fwait
jp
das
fld
xor
xor
or
mov
ffree
and
lcall
push
fldl
lds
out
or
adc
cmp
dec
xchg
subb
lock
or
add
or
outsb
sub
jl
or
rorl
inc
ret
xchg
or
push
mov
addb
push
add
adc
lret
test
testb
cmp
out
in
es
xor
push
add
sub
repz
sub
syscall
pop
push
cmp
fs
sub
ficoml
test
adc
or
add
inc
xor
cmp
cmp
dec
sbb
lds
or
push
sub
pop
push
rcrl
and
xor
jecxz
movsb
mov
xchg
inc
jb
inc
jne
inc
jge
inc
jle
inc
test
inc
xchg
dec
inc
lea
mov
inc
xchg
xor
outsb
inc
xchg
push
inc
xchg
ds
xchg
aaa
inc
xchg
pop
inc
xchg
or
cwtl
xchg
sahf
inc
fwait
push
inc
pushf
cmc
inc
popf
icebp
sti
add
add
test
lds
inc
ret
add
add
add
and
add
aam
sbb
mov
add
add
out
sub
decl
jo
inc
or
inc
or
pushf
or
iret
adc
and
or
and
mov
sub
dec
cmp
adc
test
sbbl
ficoms
adc
dec
pop
add
add
add
fildl
faddl
add
testb
or
out
ds
or
xor
leave
leave
test
add
sbb
mov
or
push
mov
and
xorb
jne
pusha
add
sbb
adc
add
sbb
sbb
mov
sbb
inc
pop
xchg
enter
dec
and
cltd
adc
and
andl
sub
inc
cmp
cmp
inc
dec
into
inc
dec
pop
inc
push
int
push
pop
fs
sub
xlat
pop
push
fstps
inc
pop
xchg
test
jae
popa
popl
fiadds
mov
add
add
add
test
jbe
push
lea
push
mov
inc
xchg
add
xchg
add
add
add
add
xchg
add
xchg
add
add
add
popf
add
sahf
add
test
xor
dec
ret
add
xchg
lds
mov
dec
or
and
xchg
mov
inc
or
inc
or
or
or
dec
sbb
ret
adc
repnz
add
add
add
lds
hlt
pop
or
adc
lret
adc
push
insb
pop
inc
or
mov
into
pop
and
push
bound
std
push
xchg
inc
sbb
inc
daa
sub
inc
inc
das
orb
orb
and
and
cmp
adc
or
xchg
sahf
mov
loopne
inc
dec
loop
xchg
or
sub
add
mov
and
adc
add
shlb
test
sub
addr16
mov
and
cltd
push
cmpb
xchg
pusha
jo
pop
mov
sub
inc
aaa
stc
cmp
out
dec
add
add
nop
sub
movsl
pop
sbb
push
pop
add
add
pop
mov
add
jb
cltd
jae
xor
xchg
mov
push
stos
test
mov
inc
lea
xchg
or
inc
inc
xchg
sub
xchg
adc
xchg
or
or
xchg
add
cltd
add
fwait
add
popf
add
sahf
add
cmpsl
add
test
sbb
add
les
lds
add
iret
or
inc
push
adc
sub
orb
push
and
cmp
incl
jb
fistpll
movsb
cld
add
cmpsb
mov
sub
inc
test
int3
fnstenv
inc
lret
ds
and
xor
add
jp
pusha
dec
dec
bound
add
add
fadds
insb
fildl
inc
add
adc
xor
mov
dec
jns
mov
xchg
push
gs
xchg
cmp
push
or
aas
movlhps
sub
inc
dec
xor
pushf
xor
add
and
int
mov
out
arpl
mov
inc
inc
dec
mov
ficoms
pop
cmp
out
jg
jle
add
mov
sbb
adc
xor
dec
push
jp
cwtl
pop
xchg
or
leave
xchg
add
repnz
add
shlb
jmp
add
cmp
adc
testl
mov
push
add
push
out
aad
push
or
les
jb
xchg
mov
add
data16
mov
xor
pop
inc
mov
mov
addb
les
loopne
insl
or
xorb
jp
mov
and
andl
test
adc
inc
mov
mov
and
and
enter
inc
lock
outsb
movsb
cwtl
add
insl
fisubrs
je
add
addr16
and
les
addb
test
mov
fsubs
notb
iret
or
jle
sbb
push
add
shrl
xchg
sbbl
js
das
cmp
and
cwtl
push
sbbb
add
sbb
push
sti
pop
mov
pop
cmp
inc
xlat
jp
or
add
xchg
adc
cmpsl
lret
ret
add
data16
jb
pop
mov
adcb
and
mov
add
pop
call
loope
push
mov
out
test
je
dec
inc
mov
push
sbb
pop
xchg
inc
xor
jae
sbb
nop
mov
sbb
jns
push
outsb
rorb
lret
or
or
and
in
les
andb
xor
inc
xor
adc
xor
or
int
addr16
add
inc
or
mov
dec
or
push
or
xchg
adc
push
and
and
push
inc
cmpsl
mov
subb
aas
pop
sbbb
sub
mulb
xchg
pusha
add
add
add
add
bound
inc
outsl
add
inc
xorl
jno
das
jb
addr16
nop
je
movsb
jne
jns
aaa
jl
mov
or
and
js
and
xor
xchg
jmp
inc
pushf
subb
mov
out
mov
cmpsl
jmp
adcb
fldl
adc
loopne
jp
cwtl
xchg
push
add
sbb
cltd
add
js
fs
insb
jbe
cs
faddl
in
pop
xor
mov
lret
ss
xor
jo
add
sub
sahf
test
and
andb
xchg
adc
add
test
jae
or
jecxz
adc
xor
sbb
xchg
or
movsb
add
xor
andl
xor
jb
lahf
push
orb
ds
mov
add
popf
mov
fwait
mov
lcall
jo
int3
mov
in
add
adc
add
int3
mov
xor
outsb
arpl
aam
or
and
add
add
cmpsl
push
lret
add
aam
ret
sbb
les
add
or
or
call
cmc
hlt
js
inc
inc
xchg
mov
or
sbb
or
or
xor
mov
add
mov
dec
dec
mov
add
pusha
iret
testl
mov
cwtl
and
inc
fmuls
cmp
mov
dec
adc
push
pop
xchg
mov
push
pop
push
add
sub
icebp
xlat
add
fisubs
sub
arpl
xchg
mov
lahf
fs
and
and
fdivl
daa
pop
lcall
aas
sbb
ret
adc
stos
in
cmp
outsb
sbb
mov
jl
daa
cmpsb
push
add
mov
sbb
ret
sub
add
cmp
inc
or
inc
gs
push
aas
inc
pop
stc
pushf
xor
jne
popfw
subb
mov
scas
daa
stc
xor
into
mov
daa
xor
je
dec
inc
push
dec
pop
lcall
xchg
add
xor
or
int
aaa
push
arpl
imul
adc
xor
xor
call
add
stos
add
inc
mov
aam
inc
mull
or
mov
xchg
loop
cmpsb
and
lods
mov
sbb
and
pusha
and
and
pop
jnp
adc
adc
incl
xchg
mov
xor
shl
lods
inc
dec
mov
loopne
dec
and
mov
movsb
add
loope
add
loop
xor
sub
pusha
sbb
jo
fsts
imul
fsubrl
lock
mov
pop
and
pusha
cmpsb
mov
dec
dec
in
and
repz
add
cltd
nop
and
adc
or
cmc
shll
mov
enter
dec
pop
mov
arpl
loope
js
clc
add
adc
xchg
mov
xchg
jle
test
xor
sbbb
adc
dec
or
fs
inc
jo
add
adcb
jno
mov
add
mov
push
dec
sub
inc
cmp
inc
mov
test
pop
and
pop
dec
jge
add
cmp
push
add
and
and
add
jge
mov
popf
stc
xchg
popa
mov
pushf
scas
xchg
inc
fs
icebp
test
xor
push
inc
sub
inc
add
les
out
dec
adc
out
mov
xor
and
cld
mov
sub
in
pop
add
cmpsb
sahf
add
test
and
add
cli
add
cmp
pshufw
xor
pop
out
push
daa
sub
faddl
push
data16
test
and
mov
add
test
mov
cs
out
les
sbb
xor
push
mov
dec
popa
add
in
jecxz
add
stos
and
pop
dec
add
or
add
test
pop
fwait
imul
inc
mov
cmp
pusha
xlat
jmp
xchg
add
cld
jmp
sbb
loop
orl
mov
imul
jbe
cld
inc
ja
mov
push
lods
adc
pop
dec
add
movsl
jb
add
mov
and
shrl
sub
pusha
add
and
sti
xor
insb
or
inc
sub
in
xchg
gs
scas
and
or
push
jae
andb
pop
sbb
mov
xor
or
js
adc
imul
jo
pop
ja
pop
addb
xchg
pop
and
push
mov
and
dec
test
gs
insl
addr16
or
push
leave
jnp
sbb
lret
sub
fcmove
inc
test
cli
push
pop
adc
iret
or
sub
mov
dec
sbb
sahf
cmpsl
mov
add
inc
xor
jbe
les
shll
sub
and
adc
push
aas
pop
or
enter
adc
jne
movsb
and
dec
jo
mov
lock
les
rclb
fsubl
mov
xchg
ja
jbe
add
pusha
fmul
mov
fdivs
xchg
add
jl
loopne
add
mov
ja
aad
mov
addb
add
pop
pop
fs
xchg
sbb
adc
lock
jo
add
jge
cmc
sub
inc
ret
xchg
add
sbb
int3
add
outsb
and
adc
arpl
filds
pop
push
adc
test
adc
and
bnd
test
or
cvtps2pi
cmp
push
mov
aam
insl
cmpsb
sbbb
xor
mov
ljmp
sbb
jmp
test
sub
add
sbb
mov
imul
fldenv
mov
adc
add
pop
pushf
push
cmp
xchg
and
and
or
in
mov
enter
sbb
adc
test
outsb
lods
mov
cwtl
adc
and
pop
idiv
add
arpl
mov
call
cmp
in
xor
xchg
pop
mov
sub
jo
mov
adc
pop
pop
les
lret
push
or
orb
push
inc
dec
sarb
int
add
insl
ret
jl
add
inc
pop
inc
inc
inc
jle
sar
les
mov
push
sahf
and
ljmp
fsubrl
pusha
jge
or
stos
cmp
jo
in
sbb
fcomps
out
xchg
movsb
sub
push
xor
xorb
loop
xchg
inc
or
sub
out
fs
mov
mov
inc
call
loop
mov
dec
jecxz
and
mov
jns
stc
mov
adc
hlt
xor
out
inc
out
xor
inc
push
outsl
xor
pop
popa
cwtl
adc
xchg
loop
adc
push
adc
adc
pop
adc
mov
fcoms
pushf
sub
pop
or
xor
add
xchg
or
flds
inc
xor
or
clc
orl
add
icebp
mov
fisttps
mov
or
or
adc
xlat
push
xor
std
xor
sbb
cli
mov
dec
popf
add
inc
pop
push
add
mov
xlat
cwtl
sbb
cltd
lret
push
jmp
add
rcll
call
xorl
cmp
lea
or
test
push
frstor
cli
mov
or
andb
jne
shrl
data16
add
or
int
cld
je
es
sbb
dec
idivb
push
or
inc
sbb
subb
cmp
aam
rorb
lret
outsb
movsl
sub
pop
sbbl
sub
rcll
mov
add
and
push
or
or
jmp
push
clc
mov
add
pop
fs
xchg
adc
sub
add
pushf
adc
add
stc
pop
nop
ret
mov
mov
mov
sbbb
dec
add
cmp
adc
lret
adcw
xor
adc
xchg
adc
movsb
or
or
adc
orb
sti
cmp
push
or
es
sbb
push
cmp
xchg
cwtl
adc
xor
inc
xor
loop
or
jo
mov
inc
aaa
pusha
pcmpgtb
add
aam
jne
adc
ja
dec
js
dec
add
loop
ret
xlat
js
add
cwtl
daa
xchg
mov
scas
or
movsb
or
movsl
or
add
sbb
bound
inc
fmull
xchg
adc
push
add
stos
pop
jb
push
adc
mov
pop
test
jb
ret
iret
enter
xchg
addr16
pushf
shlb
xchg
mov
push
xchg
std
cmp
outsb
or
pop
mov
xchg
mov
inc
rcl
or
push
pop
push
jmp
ss
aas
xor
or
push
inc
dec
lock
adc
popa
popa
sub
test
xchg
arpl
mov
js
add
stos
fucomip
movsb
mov
movl
mull
lods
jle
pop
scas
and
test
push
cmpb
add
ss
dec
push
sub
add
loope
roll
nop
jae
int3
subb
addr16
adcl
aas
not
and
cmc
imul
xchg
cmp
incl
add
jo
ret
add
push
pop
mov
lahf
fninit
pop
add
test
mov
lret
mov
enter
and
sbb
addl
add
fdiv
mov
add
call
das
xchg
sub
sub
movzwl
jmp
jns
add
shr
push
push
shll
mov
shlb
rolb
jmp
jl
adc
fs
es
adc
push
jecxz
and
sub
not
call
pop
pop
mov
mov
pop
cmp
jmp
subb
adc
ss
pop
push
jmp
add
pop
test
pop
daa
and
neg
cmp
test
ss
jno
add
jmp
int3
push
pop
push
dec
fcoml
pusha
pop
pop
loop
cmp
cmpsb
rolb
fimuls
push
sub
fidivl
mov
in
sarl
add
jmp
fs
add
dec
push
inc
or
and
les
sahf
hlt
cmp
xchg
rcrb
pop
sub
or
push
pusha
aad
xchg
inc
xor
push
sub
lds
cwtl
push
jno
cwtl
popf
xchg
push
cmp
xor
add
add
lret
inc
and
sbb
cmp
or
mov
jge
and
call
ret
outsb
push
in
mov
pop
push
add
and
rcrl
xchg
mov
dec
test
jnp
and
adc
pop
adc
daa
adc
scas
stos
xchg
setns
cmp
test
push
add
test
not
mov
and
mov
fisttpll
add
popa
xor
not
jmp
mov
sub
lds
sbb
mov
setp
add
mov
hlt
shrb
or
push
inc
subb
repz
mov
cmp
jmp
mov
add
and
lock
mov
sbb
loop
not
jbe
movsb
iret
std
sbb
add
xor
inc
loop
dec
std
dec
jb
fdivrs
dec
call
sti
pushf
inc
fiadds
mov
add
into
arpl
add
jmp
or
cli
shlb
bnd
lret
nop
fdivr
lret
test
insl
cmp
add
cs
inc
sbb
iret
add
xor
add
xchg
ret
push
std
push
or
or
fwait
popa
mov
adc
push
int
loopne
in
rolb
scas
sub
int3
pusha
sbb
pop
lds
in
pop
add
push
and
fcmovne
sete
inc
hlt
add
push
pop
pop
not
mov
mov
cwtl
js
or
adc
mull
dec
sbb
add
aam
inc
sub
inc
dec
into
add
dec
cld
or
or
dec
stc
adcl
and
add
push
pop
pop
dec
and
ret
mov
inc
fsqrt
mulb
pusha
mov
xor
xorb
cmp
stos
stos
into
jg
or
pop
pushw
jle
push
xor
cmpl
les
inc
lods
test
sbbb
cmpsb
push
add
sbb
dec
sbb
cmp
and
es
adc
and
cmp
fstl
rcll
not
or
add
dec
shr
mov
add
mov
cmp
cmpsl
sub
out
xchg
test
lcall
jae
and
test
xor
pop
adc
xchg
aaa
cmp
pusha
pop
jb
xor
add
idivb
cmpsl
inc
dec
sub
add
in
sbb
out
inc
xchg
add
cmp
testb
stos
xor
sbb
imul
xorl
push
lret
aas
add
mov
mov
or
pop
and
or
daa
ss
jno
ss
adc
sub
mov
hlt
pusha
int3
arpl
dec
or
inc
xor
clc
nop
movsb
add
movsb
add
ljmp
out
push
sub
mov
pop
cmc
dec
test
jl
add
or
fisubl
mov
cmpsl
and
jg
stc
aas
sarl
xchg
scas
xchg
push
int3
scas
adc
xlat
xor
arpl
jne
push
cmp
add
adcb
test
stos
inc
imul
insb
xchg
and
add
add
push
fs
sbb
leave
sahf
rcrb
bnd
mov
cmp
pop
pop
push
aaa
or
pop
sti
test
cld
dec
mov
dec
add
imul
das
lods
sbb
mov
add
inc
loopne
push
pop
xchg
add
aam
and
icebp
jl
push
add
inc
xchg
cmpsl
popa
cmp
ret
push
cwtl
dec
add
sub
and
pusha
dec
or
test
sahf
out
cwtl
xchg
mov
inc
add
mov
enter
and
fmull
mov
in
aas
scas
pusha
mov
sub
mov
add
add
aaa
call
ja
jecxz
sahf
xchg
inc
test
mov
int3
pushw
inc
sub
add
aam
inc
xchg
arpl
push
dec
je
add
test
dec
sti
inc
sbb
adc
dec
dec
aam
in
inc
cmp
and
sub
mov
pusha
mov
rol
repz
inc
sbb
aaa
das
cmp
push
push
subl
test
cmpsb
pop
add
pop
pop
mov
xchg
popa
adcb
rcll
rclb
add
rolb
sbb
inc
out
cltd
pusha
inc
adc
inc
xchg
and
ret
into
xlat
les
int
aaa
inc
lahf
rclb
xor
xor
int3
cltd
or
fs
cwtl
sahf
push
nop
sub
pop
add
loop
fcoms
rcll
lret
stos
mov
push
adc
inc
rolb
test
cmp
lahf
out
mov
movsb
mov
mov
add
inc
insl
mov
daa
scas
adc
adc
dec
mov
popa
mov
popa
addr16
test
push
inc
push
call
fsubl
and
adc
hlt
xchg
faddl
cmpsb
push
inc
sbb
test
jmp
sub
push
shll
lret
push
inc
dec
stc
rorl
ljmp
jae
mov
cltd
insb
jecxz
jecxz
adc
and
xor
shll
pop
in
sbb
addb
cmpsb
in
inc
not
xchg
daa
andb
enter
dec
cmp
push
das
rorb
mov
in
sub
and
xchg
mov
jle
popa
dec
mov
cld
add
or
lock
popa
add
jnp
ljmp
cs
jae
lods
outsl
push
push
xchg
aad
mov
jnp
rorb
sub
loope
mov
sahf
dec
insl
mov
mov
pop
test
inc
andl
sbbb
dec
add
mov
lahf
mov
fisttps
cmp
jns
mov
sub
pminsw
faddl
stos
adc
shl
fistpl
pop
pop
inc
xor
add
inc
test
call
and
popa
add
sarb
cltd
pop
add
cltd
pusha
lods
inc
mov
xor
je
push
shr
adc
seta
inc
cmc
add
in
daa
jb
lret
pop
pop
dec
jno
das
inc
icebp
cmp
mov
add
shr
test
neg
dec
out
fisubl
or
testb
rcll
int
mov
ss
mov
outsl
movsb
outsl
xchg
enter
sub
daa
mov
xor
clc
cwtl
pop
es
adc
jecxz
adcb
sti
pusha
mov
cmpsl
add
stos
mov
sub
adc
mov
xchg
pop
test
xchg
pop
push
clc
add
lret
js
insl
push
cwtl
in
adc
add
enter
cmpsl
xchg
test
rolb
mov
sbb
ss
adc
sbb
not
dec
pusha
lcall
push
outsb
add
xor
mov
pop
add
pusha
fdivrp
mov
xor
dec
rorl
leave
dec
add
inc
cltd
iret
ficompl
dec
inc
sub
fs
mov
fwait
pop
adc
and
add
dec
push
stos
cmpsl
cmp
aad
and
rcr
cmpsb
jmp
in
or
mov
xchg
div
push
add
mov
inc
lea
in
idivl
cmpsl
add
aas
mov
adcb
loop
jns
in
outsb
and
sbb
shl
gs
xor
adc
int
pusha
jno
push
fwait
sub
mov
cmp
cmp
lds
push
adc
jecxz
mov
add
sarb
xor
push
push
pop
pop
mov
push
jb
add
movsl
imul
pop
iret
shlb
rol
cmpsb
test
outsl
inc
enter
pop
cvtps2pi
ret
jecxz
jo
sub
mov
neg
dec
cmpsb
mov
adc
fbstp
add
jg
mov
dec
inc
js
shll
movsl
inc
push
add
lods
das
mov
or
and
xchg
add
push
adc
jbe
outsl
cmp
ret
scas
daa
dec
push
mov
sub
xlat
outsb
loop
push
add
cld
cwtl
ljmp
pop
cmp
push
repnz
cltd
sar
adc
inc
lret
lds
cmp
xor
cmp
inc
sub
mov
pop
or
dec
popa
ljmp
add
ret
btr
and
stos
cmp
test
in
fnstcw
mov
adc
test
pusha
aas
sub
push
pop
pop
inc
xchg
insl
not
cwtl
popf
inc
inc
push
pop
lock
pop
and
clc
fs
inc
shr
inc
sub
xchg
xor
loopne
xor
xor
and
jge
add
aam
sbb
adc
jl
and
push
cmp
mov
icebp
fisttpll
push
sub
sub
and
ss
test
adc
inc
pop
mov
ss
add
jnp
xor
cmpsb
jmp
clc
adc
test
mov
pop
nop
dec
dec
mov
mov
push
inc
push
popa
insb
add
idivb
lret
or
xchg
ret
cmp
dec
and
jle
mov
inc
adc
int3
scas
push
cmp
outsb
shlb
add
loop
pop
push
rorb
rcll
out
mov
or
leave
xchg
jl
iret
inc
and
fidivrs
mov
inc
or
sti
lods
inc
es
test
and
shr
xchg
rorb
fucomi
bound
popf
stc
push
adc
pop
stos
push
add
pop
mov
dec
cmp
lods
test
xor
mov
push
adc
jp
out
mov
add
enter
push
xor
cltd
or
out
outsb
adc
or
jl
shr
cwtl
jae
xchg
inc
xchg
lret
dec
add
dec
mov
imull
sub
test
rclb
dec
roll
iret
sub
inc
loope
popa
addr16
add
pop
setge
xchg
pop
mov
pop
sbb
movsl
push
test
add
mov
bnd
mov
arpl
cmc
or
inc
lret
lahf
cmp
bswap
xor
adcb
loopne
daa
mov
sub
mov
out
not
mov
outsb
jmp
mov
mov
int3
dec
xchg
inc
adc
cmpsb
xchg
rolb
inc
push
pop
pop
neg
cwtl
fstl
lds
sahf
hlt
sub
or
and
sub
sub
xchg
cwtl
in
hlt
rorb
pop
push
sub
add
dec
or
jmp
rcrb
push
inc
mull
push
imul
mov
loop
fs
decb
stos
mov
mov
stos
mov
loop
mov
pop
or
insl
rol
fnstenv
sub
lret
sbb
daa
test
mov
icebp
mov
stc
cmpsb
repz
jns
and
pop
inc
push
and
and
or
xor
xorb
loop
fidivrl
add
neg
bound
loope
test
sub
stos
cmp
xor
decb
ret
or
push
dec
aas
loopne
jge
mov
bound
fsubrl
test
xchg
add
mov
inc
push
push
loope
imul
ljmp
daa
inc
stos
mov
sarl
jb
sub
roll
adc
push
rorb
or
test
andb
jecxz
adc
sub
dec
mov
or
lea
add
insl
cmp
fisubl
insb
cli
push
bound
cmp
sbb
push
push
das
dec
int
sbb
ss
dec
dec
xchg
adc
fld
adc
xchg
xchg
sub
rcr
loopne
xorb
fcoml
add
rclb
mov
sub
int3
mov
xor
push
es
loop
jnp
mov
loop
scas
rcr
stos
mov
xchg
push
lods
and
xor
pusha
xchg
cwtl
push
pusha
hlt
pop
sub
cmpsb
lahf
add
stos
inc
adc
icebp
xchg
jno
nop
lods
lcall
outsb
and
sub
dec
sub
xor
scas
pop
fwait
inc
mov
jle
aam
flds
inc
cli
jp
fidivrl
mov
mov
insb
movsb
js
pop
inc
pop
xor
or
aam
mov
pushf
xchg
test
into
xor
jae
mov
adc
pop
mov
dec
jns
stos
loopne
lea
xor
mov
or
mov
mov
ret
push
inc
adc
add
dec
mov
test
hlt
push
add
sbb
pop
jno
dec
xor
or
mov
cmp
and
jmp
mov
rcll
adcb
and
sti
add
jl
jbe
inc
xchg
sbb
dec
stos
rcrb
addr16
and
arpl
cmp
scas
es
clc
enter
or
gs
in
insb
add
cmp
ret
movsb
xchg
jbe
inc
aad
popf
data16
dec
pusha
test
dec
or
mov
sbb
or
popf
sub
dec
mov
sub
jns
cmp
and
xchg
mov
mov
xor
nop
lds
jo
or
daa
pop
js
jne
sarl
rolb
or
or
or
bound
sarb
dec
cmp
scas
push
push
sub
lods
shl
arpl
out
cmpsb
mov
xlat
dec
lods
or
enter
and
sbb
lds
dec
push
mov
and
pushf
aad
add
push
xchg
inc
mov
sub
fprem
mov
fiadds
rcll
cmp
sub
jnp
outsb
cs
mov
cli
inc
loope
test
cmp
call
jo
jnp
add
scas
push
lret
neg
dec
shl
pusha
out
jb
dec
daa
mov
bswap
pusha
inc
rolb
jnp
or
or
or
push
in
mov
add
leavew
ja
aaa
loope
mov
cmp
adc
cmp
xchg
mov
icebp
cmp
clc
push
repnz
out
cmpsb
mov
int3
add
jmp
cmp
mov
fsubrl
testb
xor
negb
add
fidivs
add
lret
icebp
inc
pop
inc
lahf
mov
mov
scas
pusha
xchg
mov
push
sbb
bound
addb
inc
sti
sub
test
filds
push
cmc
rcl
sbb
add
inc
push
cmp
jns
xchg
mov
xor
outsb
mov
out
add
test
pop
xlat
into
jl
mov
jle
jecxz
outsl
adc
mov
mov
add
and
or
push
aaa
not
xchg
sub
add
enter
andl
popl
cmp
adc
sub
test
pop
stc
add
sub
movsl
push
pop
jecxz
jo
and
or
sub
sbb
mov
cltd
popf
push
stc
pop
sbbb
xchg
pop
dec
inc
push
pop
mov
xchg
rcll
and
xor
xchg
das
adc
push
dec
add
je
add
out
inc
push
ja
pop
mov
test
or
push
lret
add
scas
shll
lods
outsb
inc
push
mov
or
push
xchg
out
push
xchg
in
add
inc
not
xchg
pop
mov
lods
push
and
xchg
movsl
and
int
out
push
push
push
imul
cld
push
int
and
xor
xchg
push
fldcw
pop
neg
inc
xchg
add
loop
adc
ficoml
lahf
lret
inc
in
xchg
notl
pusha
inc
ja
xchg
dec
or
test
cmp
mov
jbe
adc
adc
add
or
ljmp
jmp
shlb
outsl
jo
andb
and
adc
xorl
out
sbb
push
jno
aad
jle
jl
inc
icebp
xchg
sub
outsl
and
in
and
adc
movsb
inc
sub
add
imul
cmp
xchg
imulb
and
pop
pop
adc
adc
adcb
xchg
dec
mov
testl
mulb
repnz
push
rclb
loop
in
dec
and
xor
test
shr
jmp
inc
dec
push
add
neg
dec
push
jae
hlt
ljmp
xlat
aas
inc
loope
popaw
js
loopne
push
sbb
xchg
ljmp
sbb
mov
mov
popa
adc
add
xor
mov
cmpsl
dec
sbb
sub
inc
xor
dec
jle
xor
dec
cltd
pop
mov
cwtl
test
sbb
sbb
imulb
shr
dec
test
xor
cwtl
dec
sub
or
add
arpl
les
mov
ret
add
out
adc
lcall
mov
std
xor
adc
adc
stos
int
cmp
push
fnstenv
in
shl
repz
lret
jbe
xor
movsl
das
arpl
sub
push
push
mov
adc
xchg
xchg
das
xlat
push
mov
xor
inc
vpunpckldq
sub
or
dec
int3
mov
rsm
push
pop
pop
lahf
sub
mov
cli
inc
movsb
sub
inc
sets
ja
dec
mov
xchg
mov
clc
or
test
dec
jecxz
fs
xor
or
aad
and
shrl
dec
test
xor
cmp
int
test
cwtl
adc
mov
adc
push
add
add
movl
and
push
xor
adc
mov
pop
ja
ret
int3
pop
popf
adc
add
idivb
sbbb
adc
lock
ret
push
dec
outsb
clc
and
pop
adc
fiaddl
adc
dec
mov
dec
dec
pop
movl
cmp
mov
add
mov
adc
xchg
aas
add
cmp
mov
loope
sbb
cmpsb
and
pushf
dec
xchg
push
push
jb
add
sub
fwait
icebp
xor
inc
inc
test
in
testl
xor
inc
dec
aam
and
mov
jl
fldenv
xchg
jge
pop
pop
sub
stc
sbb
push
adc
dec
loop
xchg
test
and
push
push
cmpsb
lds
cld
jns
push
add
enter
xchg
sub
pop
dec
jae
test
inc
xchg
dec
outsb
test
inc
and
fst
fsubl
cmpsb
or
imul
je
or
shrb
and
sub
mov
sbb
sub
test
dec
testl
jge
int
mov
popa
inc
xchg
into
push
push
pusha
fcompl
sti
enter
push
jno
adc
jle
add
iret
xchg
roll
adc
cmp
xchg
repz
mov
add
cwtl
test
push
scas
xchg
pop
movsl
pop
ret
enter
int
insb
mov
loopne
sahf
add
xor
shl
les
test
xchg
roll
xor
and
dec
xor
inc
popf
jns
xor
cmp
jae
arpl
dec
in
adc
push
enter
sbb
adc
cmpsb
bound
popf
inc
sub
leave
adc
cmp
rolb
jae
sub
outsl
int
mov
push
fcmovne
lods
add
stc
mov
push
cmp
shl
arpl
out
push
adc
jg
in
addr16
push
sbb
icebp
fdivs
lods
or
xchg
lds
loop
insl
push
cmp
dec
test
mov
jmp
out
pop
add
sub
sub
lahf
sbb
xor
sub
dec
push
addb
jns
addb
icebp
dec
or
add
out
mov
and
lods
movsl
fwait
inc
or
dec
dec
sbb
inc
sbb
stc
ret
mov
dec
fdivrp
mov
jp
cli
xor
add
popf
imul
xor
adc
add
mov
add
addl
sub
inc
test
dec
mov
pop
xchg
xor
ja
sub
push
out
mov
sbb
insl
inc
hlt
push
xor
mov
mov
fisttpl
movsb
mov
aad
neg
add
xchg
sub
mov
pop
sub
pop
mov
pusha
repnz
mov
test
jge
ficompl
jmp
push
mov
hlt
movl
test
fs
add
in
leave
mov
add
adc
insb
push
arpl
cmc
or
outsb
cmp
pop
adc
in
pusha
aad
jb
addr16
add
aam
add
std
test
or
insb
cwtl
mov
add
leave
mov
lods
jge
add
xor
filds
or
cmp
sbb
cmp
ficoms
and
enter
sarb
and
add
iret
shld
sub
mov
or
and
or
das
adc
add
sub
inc
fdivl
jno
add
mov
adc
out
pop
mov
mov
movsl
in
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
fs
add
pop
arpl
hlt
push
imul
popa
cli
sbb
fdivs
test
inc
repnz
xchg
push
hlt
jnp
add
sbb
hlt
or
cmc
fnstenv
mov
ljmp
mov
bound
pop
ficoml
gs
aam
add
popa
mov
into
subl
mov
dec
sbb
xchg
fadd
roll
movsb
sti
hlt
shrl
imul
xor
mov
lods
sarb
add
inc
in
add
pop
dec
or
stos
leave
jl
fnstsw
add
add
adc
or
leave
and
test
or
aam
mov
push
add
ficomps
leave
fldcw
and
rolb
mov
test
pop
cmp
or
mov
mov
in
mov
mov
lcall
mov
cmp
inc
aad
scas
ja
popf
adc
adcl
jae
or
jecxz
cmp
push
sbb
jp
iret
push
in
decl
sbb
daa
scas
add
mov
pop
jge
hlt
lock
add
push
inc
push
imul
xorb
aas
sbb
subb
sbb
loopne
sub
mov
ficoml
int3
add
outsl
fistpll
cmp
aad
mov
call
add
fdivrs
push
add
fisttps
addr16
cmpsb
fldl
push
mov
dec
ss
fiaddl
sub
scas
idivb
dec
add
pusha
jp
inc
ret
out
fcomp
push
in
ja
add
imul
sbb
shrb
ss
push
xchg
add
int3
add
mov
and
es
mov
mov
pop
mov
sub
mov
cmpsl
call
add
xor
shlb
sub
scas
ficomps
lock
es
arpl
pushf
mov
xchg
insl
add
ss
add
test
jb
push
rolb
adc
mov
mov
cmp
mov
fwait
add
aad
mov
out
fdivrl
fisttpl
aam
rcrl
icebp
clc
mov
push
pop
int
mov
mov
outsl
int3
inc
mov
sbb
pop
add
push
dec
add
push
pop
or
adc
sahf
add
ror
imul
insb
add
js
or
xlat
push
addl
mov
add
popa
cmpsl
notl
pusha
add
dec
inc
imul
dec
push
scas
fcompl
add
or
inc
lock
aas
aaa
push
add
jg
iret
mov
jmp
cmp
mov
lret
mov
cmpsb
add
shr
mov
xlat
int
add
push
mov
add
mov
dec
popa
les
add
push
sub
add
or
cld
filds
add
popa
xchg
push
jb
cmpsl
or
cmp
sub
jge
sbb
inc
inc
push
and
leave
dec
xlat
mov
xor
xor
jae
cmp
and
jne
push
popa
std
cmp
popa
and
adc
jp
mov
nop
push
pop
mov
push
movsl
add
xor
cmc
ret
pushl
test
and
or
aaa
adc
pop
sbb
imul
adc
push
xor
or
data16
mov
jbe
mov
mov
push
cmp
stos
adc
imul
addr16
adc
push
push
sbb
insl
popa
data16
sbb
jecxz
inc
inc
sbb
out
sub
jns
mov
mov
dec
add
push
fs
jnp
sub
jo
or
push
imul
gs
jne
push
jns
xor
or
push
push
sub
jno
fbstp
dec
mov
mull
cltd
push
outsb
xchg
adc
lds
push
add
je
sbb
adc
scas
lds
sub
adc
inc
imul
mov
dec
movsl
fs
or
sbb
shlb
xchg
jl
xchg
sub
push
into
cmp
adc
xor
insb
jp
dec
cmp
add
inc
sub
outsb
or
stos
push
bound
jb
sbb
jns
loop
xchg
loope
mov
push
inc
pop
jmp
mov
outsb
aam
adc
or
es
cmp
push
dec
add
dec
jae
inc
cwtl
dec
dec
sbb
push
outsl
cwtl
inc
mov
iret
in
inc
nop
inc
in
insb
inc
inc
pusha
cmp
jecxz
out
mov
addr16
jmp
js
leave
sub
pushf
jmp
ret
aad
std
and
hlt
mov
pushf
pop
cmpsb
pop
loope
or
or
test
loopne
inc
dec
in
sbb
add
data16
push
lods
dec
cmc
test
and
scas
sub
inc
xor
xor
pop
inc
sbb
push
pop
sub
dec
dec
push
gs
inc
add
int
sub
gs
es
jno
arpl
cs
and
lret
xor
sub
test
cwtl
sub
lods
inc
jbe
xchg
or
xor
jmp
cmp
sub
popa
cli
cs
inc
mov
inc
clc
pop
inc
addr16
cmp
and
sub
dec
add
xchg
mov
mov
push
jne
std
xchg
lods
mov
push
dec
mov
sub
add
inc
inc
push
inc
fwait
inc
mov
and
mov
pushf
sub
sbb
dec
cs
insb
fdivr
cmpsb
inc
aaa
aaa
dec
mov
movsb
out
sub
xchg
js
ja
jg
jne
cmp
jl
int3
mov
jo
xchg
imul
arpl
sub
dec
bound
ret
jne
popa
cmp
outsl
or
out
xchg
imul
xchg
mov
rcl
les
js
arpl
es
imul
je
fstpl
jmp
inc
xchg
xor
cmp
leave
mov
dec
fsubs
pop
xchg
xchg
pop
cmp
and
jg
in
mov
cmp
jne
lcall
idivl
push
jno
jne
scas
cld
stos
jno
jb
pop
aad
outsb
fsubs
mov
and
psubsw
and
and
in
gs
pusha
stos
sub
pop
xor
sub
adc
pop
dec
push
adc
les
andb
pop
xchg
aaa
sub
inc
jl
je
xorl
rclw
movsb
xchg
adc
mov
sbb
mov
pop
jae
clc
xchg
or
pop
add
aas
pushf
or
test
sbb
cmp
and
xor
mov
push
popf
leave
pushw
and
jne
into
dec
xchg
ror
mov
int
inc
ljmp
mov
leave
adc
jo
pop
rcll
sub
mov
or
xchg
and
inc
push
int
cmpsb
fs
xchg
adc
mov
shll
push
push
xor
test
cmp
lcall
mov
push
mov
push
jmp
xor
xor
fs
cmp
or
imul
fwait
jp
cwtl
loopne
push
cmp
int3
nop
push
gs
mov
xchg
jns
adc
lcall
pop
lret
jecxz
add
sub
and
enter
mov
mov
sub
es
mov
dec
jne
cmpsl
es
sbb
mov
or
inc
js
mov
nop
push
and
inc
or
xchg
pop
push
sbb
loop
sbb
or
xchg
sbb
pop
je
dec
nop
dec
lock
sub
stos
push
test
lods
dec
or
pop
outsb
or
scas
sub
jo
pop
mov
jmp
popa
addr16
mov
mov
pop
insl
pop
lcall
sbb
fcmovu
int3
test
clc
and
movsb
adc
or
in
fs
rclb
pop
dec
sub
repz
and
xor
mov
push
add
add
adc
add
add
add
jo
mov
sub
sbb
pop
or
aaa
xor
push
ds
and
xchg
pop
jne
pusha
push
lret
add
inc
or
out
add
outsb
arpl
insb
push
ljmp
pop
pop
mov
sub
push
adc
bound
pop
jae
mov
dec
sahf
lcall
xor
or
js
es
push
pop
jns
xchg
or
push
les
inc
aad
inc
sbb
jns
dec
je
arpl
int3
jae
and
dec
and
es
loope
outsl
rcl
andnps
adc
movsb
test
aaa
ss
jb
adc
popa
sub
lcall
mov
dec
cltd
xor
dec
in
cs
das
or
xor
dec
or
aas
xor
ret
xchg
mov
dec
jae
mov
outsb
cmp
inc
fisttpl
cmpsb
pop
inc
xchg
leave
stos
rorb
push
dec
xchg
dec
xor
push
mov
not
or
movsb
adc
fsubrp
adc
push
or
cmp
repz
sub
sbb
cmp
hlt
loopne
push
or
loop
cmc
xor
inc
nop
mov
dec
dec
inc
or
adc
sbb
or
dec
mov
pop
mov
stos
sub
in
jmp
inc
push
std
push
or
xchg
sarb
lcall
mov
rolb
cmp
push
je
imul
outsl
insb
push
rorb
ret
or
or
or
and
outsb
pop
jbe
hlt
sbb
in
test
or
stos
dec
pop
ds
pop
and
xchg
mov
push
jecxz
adc
jb
mov
inc
es
adc
push
xor
cmp
pop
sub
and
leave
jne
clc
pop
imul
xor
aaa
and
jl
mov
and
mov
out
ja
sub
cmp
inc
xor
jbe
bound
cmpsb
arpl
ljmp
daa
pop
sbb
das
test
pop
jmp
push
pusha
adc
leave
stos
in
out
and
call
sbb
and
lcall
insl
adc
lods
jb
push
insb
mov
fwait
xor
aam
mov
stos
insl
mov
xor
xor
je
lods
add
push
sub
xor
sub
adc
sub
cmp
fnstcw
daa
stos
andb
push
loop
lcall
push
jno
cmp
jno
cli
int3
sbb
rcrl
inc
in
lods
test
jne
adc
adc
push
fs
mov
cmp
xor
data16
jp
push
les
add
xor
pop
inc
mov
xchg
pop
and
inc
pusha
rclb
out
inc
dec
pop
and
movsl
sbbb
xchg
push
stos
test
sbb
inc
push
in
test
repnz
push
imul
outsb
jo
bound
fiadds
fwait
iret
or
sti
dec
ds
insb
dec
push
add
add
scas
inc
addr16
cltd
dec
lret
push
pop
xchg
loopne
jnp
add
xor
jecxz
push
or
push
lret
cmpb
push
aam
out
jne
inc
iret
push
jle
or
inc
push
arpl
mov
and
mov
pop
dec
test
leave
sub
adc
adc
push
cmp
jp
adc
or
sahf
dec
lods
add
jne
mov
es
or
fdivrs
aad
mov
xchg
insl
push
adc
mov
cmp
push
push
inc
jp
shlb
jne
pusha
pop
push
pop
inc
and
xor
jo
or
push
rol
leave
popa
and
test
into
push
insb
xchg
and
pusha
cmp
dec
adc
and
jbe
inc
cmpsl
aas
addr16
xor
outsl
mov
cs
jl
lret
or
cmovns
mov
or
iret
xchg
mov
insl
cmp
push
stos
adc
vpunpckhbw
les
sahf
mov
xchg
les
pop
adc
push
nop
jae
lahf
test
test
jmp
push
stos
add
mov
inc
addb
push
test
jl
movsb
stos
push
jbe
bound
imulb
outsl
adc
dec
rcrl
popa
jp
gs
fists
aam
push
or
sbb
adc
dec
lret
xchg
nop
jmp
call
sbb
xchg
dec
push
and
fwait
mov
adc
add
subb
rcrb
popf
inc
out
dec
xor
sub
adc
frstor
and
stos
adc
fwait
subb
es
sub
insl
int
dec
adc
push
mov
inc
nop
iret
push
pop
loop
lods
stos
adc
ret
lret
and
sbb
adc
pop
sahf
adc
bound
jb
mov
fisttpll
sub
jb
adc
mov
adc
dec
int
pop
adc
mov
dec
shlb
aam
ret
ss
push
dec
outsb
cltd
in
mov
sbb
jns
jae
imul
imul
sub
sbb
and
popf
xchg
jb
jbe
add
in
adc
pop
mov
adc
stos
adc
in
push
sahf
mov
pushf
in
mov
insb
test
dec
jp
adc
leave
daa
dec
xor
bound
insb
lods
sub
movsl
or
inc
mov
lds
sbb
pusha
xchg
sbb
push
bound
push
imul
cmpsb
pop
stos
cmp
mov
and
sbb
sub
xchg
mov
adcl
je
jb
adc
dec
jg
xchg
stc
cmc
dec
sub
fcoms
sub
or
lock
stos
adc
or
or
pop
dec
add
into
push
je
rorl
push
jb
and
test
sbb
inc
push
sbb
pop
rolb
push
jl
sbb
push
and
inc
push
or
dec
cmp
and
sbb
dec
cmp
out
cwtl
add
inc
dec
xchg
jns
loope
das
jmp
pavgb
xchg
or
adc
pop
sub
ds
inc
or
pop
out
adc
dec
adc
jb
cmp
nop
or
loope
ret
in
pushf
mov
xorb
or
pusha
inc
pop
adc
dec
push
dec
inc
inc
jno
jns
inc
inc
adc
xor
dec
jmp
dec
adc
or
adc
ret
pop
outsb
popf
xor
cmp
push
adc
jne
push
cmp
cmp
sub
nop
jo
das
jo
mov
cmp
cld
dec
push
lret
and
aaa
movsl
cmp
mov
push
arpl
or
sub
add
add
or
arpl
jb
adc
aas
add
je
cmp
stos
adc
xor
add
pop
xor
out
inc
mov
jmp
xchg
jmp
mov
loope
or
jp
mov
or
mov
imul
mov
rcrb
int
fsubs
loope
add
enter
pop
shll
int
push
cs
add
inc
pusha
leave
cwtl
add
jae
loopne
push
push
add
and
and
popa
cmp
rorb
or
enter
xor
add
mov
add
call
push
clc
adc
lret
push
push
and
add
cmp
imul
sbb
outsl
and
add
jl
add
enter
mov
cmp
lock
inc
dec
les
add
cmp
lcall
aam
add
inc
xchg
adc
in
outsl
and
jno
mov
push
and
les
mov
push
inc
adc
cmp
or
cwtl
mov
add
jno
pop
add
cmp
test
jo
xor
adc
add
clc
adc
lock
test
mov
sub
enter
and
fmull
add
and
and
insb
dec
loopne
lods
loop
jo
loop
adc
repnz
xorb
add
in
cmp
roll
imul
add
bound
add
add
inc
int
add
imul
cmc
and
push
lock
insb
inc
push
mov
sar
andb
incl
ret
and
popl
ljmp
dec
in
mov
mov
inc
testb
jg
cli
adc
add
xchg
xchg
ljmp
push
jbe
mov
and
and
enter
inc
rorl
call
subl
inc
jbe
or
cmc
and
rclb
clc
mov
or
push
dec
xchg
pop
cli
inc
adc
outsb
adc
and
inc
aaa
cld
or
xchg
and
pop
incb
mov
jmp
jmp
push
inc
shlb
add
mov
frstor
inc
dec
add
push
xchg
sahf
and
adc
add
push
xchg
arpl
outsl
and
mov
mov
xchg
call
adc
mov
adc
ret
inc
or
or
mov
or
xor
mov
mov
mov
cli
and
add
inc
adc
or
push
ds
shrb
adc
and
xchg
dec
mov
sbb
ds
inc
push
and
pop
sbb
adc
or
inc
leave
pushf
inc
pop
movsl
mov
adc
and
pop
or
andl
and
jo
jns
inc
xor
mov
adc
and
add
inc
or
add
cmp
inc
or
call
mov
and
pop
jle
mov
adc
add
add
push
add
pop
add
and
dec
mov
pop
and
inc
push
insl
mov
pop
addl
dec
aad
hlt
jo
pop
pop
mov
adc
pop
dec
gs
andb
inc
pushf
mov
adc
and
inc
pop
pop
ror
insl
xchg
mov
mov
xlat
inc
arpl
xchg
and
dec
ficoml
rcll
xchg
and
and
inc
addl
xchg
mov
lcall
mov
adc
mov
aas
and
dec
insb
mov
or
int3
or
xlat
or
or
xchg
stos
fldl
add
xor
jnp
dec
loop
mov
add
add
lock
add
and
and
stc
and
mov
incb
call
or
add
nop
mov
and
inc
xchg
pop
or
xchg
out
adc
and
fs
outsb
sbb
mov
and
sbb
mov
and
and
xchg
add
dec
and
mov
insb
xor
xchg
adc
nop
test
sbb
pop
cltd
and
jbe
mov
inc
pop
inc
insb
bound
or
mov
xchg
les
pop
jbe
imul
and
inc
or
push
movsb
addl
add
scas
add
and
mov
inc
or
push
jno
test
inc
push
push
inc
mov
es
mov
mov
push
int3
and
inc
es
and
jns
cmpl
sub
or
enter
sub
or
jle
push
int3
inc
xchg
jp
test
dec
mov
and
rcll
or
add
sbbb
adc
and
je
xchg
and
jmp
pop
fildll
or
sbb
movsb
dec
cmp
inc
inc
mov
mov
mov
mov
mov
mov
mov
pop
and
shlb
pop
and
shlb
pop
and
shlb
push
cmp
or
pop
cs
and
js
xchg
and
xchg
and
jmp
and
jmp
or
mov
jmp
shrb
xchg
je
movsb
pop
and
adc
or
inc
or
mov
frstor
and
or
jne
in
mov
inc
lods
mov
mov
dec
aam
fsubl
in
in
hlt
mov
adc
mov
or
sbb
and
sub
xor
cmp
mov
and
dec
fs
loopne
mov
jnp
adc
mov
aam
fsubl
in
in
hlt
mov
adc
mov
xchg
je
movsb
pop
and
or
and
inc
hlt
cld
mov
jle
sub
dec
and
dec
js
andb
inc
lods
rorb
add
fs
or
dec
push
xchg
pop
and
mov
fsubs
push
adc
xor
xchg
pop
and
nop
mov
call
adc
cmp
mov
and
dec
mov
inc
lock
sbbb
adc
pop
dec
pusha
xchg
push
orb
dec
mov
inc
mov
shlb
dec
loopne
call
roll
sbb
xor
mov
dec
and
dec
pop
xchg
pusha
and
jo
mov
dec
cwtl
xchg
mov
mov
and
dec
fcoms
lock
mov
int
adcb
jmp
shrb
xchg
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
or
sbb
dec
and
sub
mov
cmp
dec
inc
xchg
inc
and
dec
push
mov
and
dec
pusha
xchg
and
insb
jo
je
js
jl
adcb
nop
mov
mov
inc
lods
mov
mov
mov
fmuls
mov
mov
cmp
addb
cmp
cmp
add
pop
sysret
lcall
mov
loopne
loope
mov
sbb
mov
mov
int
jge
addr16
or
jae
and
outsl
xor
daa
jne
je
bound
iret
push
outsb
cltd
push
fs
arpl
mov
or
sub
push
arpl
push
or
add
pop
inc
sub
loopne
mov
mov
add
adc
int3
mov
sbb
js
xchg
push
stos
or
cmp
xor
or
jo
or
push
arpl
or
push
or
dec
pusha
jno
xchg
mov
sbb
inc
dec
inc
inc
or
in
fsub
movsb
dec
add
shll
push
xchg
inc
inc
push
in
call
sbb
sbb
xor
mov
and
loopne
sbb
shrb
fs
je
test
adc
inc
adc
push
cmp
movsl
push
shrb
rclb
gs
and
nop
and
sub
and
push
shrb
jecxz
xchg
arpl
and
push
lock
sub
lret
cmc
aas
add
add
xchg
adc
add
nop
sbb
or
push
xor
addr16
sbb
adc
cmp
cmp
sbb
or
inc
inc
call
sub
pop
push
dec
bound
arpl
je
and
mov
xchg
adc
pushf
cmp
mov
and
enter
jb
cmp
mov
and
cmp
sbb
mov
and
or
cld
cld
inc
adc
hlt
or
push
add
and
or
test
nop
cmp
inc
and
sub
je
movzwl
mov
cmp
pop
mov
sub
xor
aam
enter
jb
cmp
add
mov
cmpl
jne
cmp
push
int3
push
mov
jecxz
mov
test
jne
xor
pop
lret
inc
cmp
add
rorb
inc
cmp
add
push
mov
inc
push
inc
cmp
jne,pt
js
adc
push
into
pop
nop
fcoms
out
inc
pop
inc
repnz
call
imul
or
push
add
or
into
adc
inc
push
add
iret
mov
push
push
adc
mov
push
push
pop
push
mov
into
adc
mov
xchg
add
push
pop
pop
nop
fnstcw
xchg
push
or
aaa
or
ret
and
call
inc
mov
sub
or
inc
add
jmp
add
cmp
ljmp
jne
jb
sbb
call
lahf
add
push
mov
inc
mov
cltd
push
cmp
jb
jecxz
add
insb
call
ja
and
sbb
mov
or
into
inc
cmp
dec
jmp
aas
pop
inc
jp
add
nop
pop
cmp
sub
or
sti
inc
scas
and
in
lock
jae
or
jb
js
or
or
cmp
out
sbb
pop
xchg
sub
or
cmp
push
mov
cs
out
adc
dec
lea
shlb
test
je
loopne
mov
xor
dec
addb
add
scas
dec
stos
stc
aad
fs
mov
xchg
mov
call
sbb
inc
or
xchg
push
sub
jns
push
xchg
and
loope
ja
sub
decb
xchg
in
jecxz
or
scas
push
push
add
add
out
cmp
dec
and
push
repz
jae
xchg
out
ja
mov
out
xor
push
push
or
sti
imul
mov
pop
lea
rorl
filds
cmpsl
cmc
cwtl
pusha
add
adc
adc
pcmpeqb
adc
sbb
adc
sub
hlt
mov
ljmp
add
and
dec
lock
or
outsb
ljmp
cmp
jle
add
adcl
clc
incl
lea
and
adc
and
push
pop
sub
test
dec
rcpps
or
pop
je
sub
or
fs
xor
sahf
jmp
cmp
aas
ret
clc
sub
push
sbb
outsl
or
out
hlt
lea
std
xor
addl
xchg
andl
cwtl
inc
call
add
out
rcrb
cwtl
cld
sub
sub
xchg
xlat
inc
pop
call
ja
jge
pop
inc
dec
frstor
mov
jg
pop
leave
stos
add
and
and
int3
mov
cmp
pop
movsl
pop
and
adc
push
or
pop
fwait
or
push
adc
cli
adc
xchg
in
add
xor
push
cmc
add
mov
lea
jno
push
lods
rcll
fisttps
gs
xorb
aaa
or
leave
push
xchg
inc
push
mov
cmpsb
mov
jmp
lds
inc
jne
dec
mov
test
rcrb
sbb
jp
dec
mov
test
adc
lea
or
pop
xor
aad
mov
stc
inc
lds
xchg
test
or
cmp
jae
testl
adc
mov
inc
dec
cmpsb
mov
test
je
dec
mov
ret
mov
cmp
movsl
adc
imulb
adc
sub
out
jmp
jnp
push
mov
pushf
cmp
dec
pushl
int3
mov
test
sub
ss
loopne
jle
or
and
push
or
and
cmp
dec
movaps
mov
cmp
pop
mov
add
rolb
xacquire
mov
jae
bound
xchg
add
mov
mov
push
xchg
pop
and
cs
les
inc
je
adc
sbb
jo
mov
lahf
inc
push
cmpsb
mov
hlt
xchg
adc
cmp
mov
dec
add
les
pop
push
xor
pop
or
or
sub
jbe
or
in
fistpl
loopne
cmp
or
adc
stc
lods
test
loopne
pop
add
rcrl
push
int
mov
jmp
pop
push
mov
sbb
sub
hlt
sub
mov
scas
or
and
cwtl
mov
dec
in
pop
shll
jbe
movd
adc
cmp
push
adc
test
mov
lcall
test
sbb
mov
adc
movl
shr
outsl
stos
xchg
popa
mov
xchg
leave
add
or
incl
rolb
loop
ret
in
or
add
adc
mov
or
jl
xchg
lret
sub
push
lret
cmc
sub
or
ret
and
lds
ss
xor
dec
or
je
sub
add
fcmovb
push
xchg
add
xor
test
and
and
cmpsl
add
sub
cmp
bound
push
and
pop
push
stc
add
adc
fs
fdivs
mov
addr16
and
pusha
fsubs
add
in
repz
stos
xor
andl
hlt
xchg
mov
push
or
jo
dec
imul
mov
stos
pop
mov
call
aaa
sub
dec
jg
push
clc
jae
mov
jge
xchg
fiadds
ljmp
and
sub
adc
push
call
mov
and
aad
fs
fwait
lods
mov
pop
add
lea
mov
xor
out
stos
xchg
fimull
xchg
dec
jo
repnz
fisttps
add
sub
cltd
inc
sbb
aaa
mov
test
dec
dec
ret
gs
xor
adc
mov
jmp
cmp
xor
adc
stos
ja
cld
sub
jg
or
push
daa
mov
mov
cltd
lret
test
test
adc
jle
and
xchg
sub
fwait
pop
adc
sub
cwtl
shll
adc
pop
xor
test
aam
es
xor
sbb
lea
movsl
jo
call
inc
or
cmp
sbb
pop
push
add
cmp
xorl
sub
add
int3
and
or
ljmp
pop
or
pop
insb
xchg
and
and
lods
lret
xchg
jno
js
outsl
imull
andl
and
adc
fxam
sahf
aam
icebp
adc
and
lea
dec
mov
sub
inc
add
pop
and
jecxz
bound
lea
nop
mov
mov
in
pusha
test
dec
add
pop
jg
push
aaa
je
push
addb
jne
or
ljmp
dec
mov
int3
stc
or
or
test
mov
jnp
xchg
sbb
xor
mov
jmp
pop
sub
je
hlt
es
push
in
shll
adc
aad
jne
sbb
pop
lcall
push
cmp
cmpl
arpl
loope
mov
add
icebp
cs
das
out
cmp
in
sub
dec
cmc
mov
es
sub
mov
xchg
cltd
gs
std
repnz
xor
pop
cltd
lods
scas
sbb
pop
mov
dec
push
into
xchg
das
shlb
arpl
mov
je
or
clc
and
jle
nop
mov
xchg
jp
leave
push
push
xor
ret
pop
popf
xor
ficompl
lea
jg
mov
lcall
movb
xchg
scas
inc
and
sub
sub
or
jl
pop
hlt
jmp
xchg
lret
mov
sbb
mov
fimull
or
pop
notl
mov
sbb
inc
cwtl
sarb
sbb
dec
sub
sub
add
sbb
xchg
lcall
call
pop
adc
inc
mov
mov
push
pop
mov
xor
sbb
loopne
sub
mov
adc
jp
jb
or
js
xor
or
test
jne
cmovae
or
jmp
sub
mov
inc
les
add
je
inc
mov
addb
ljmp
aas
nop
or
cmp
sbb
les
daa
loop
clc
cmp
sub
jno
push
adc
sbb
jle
xor
int
and
add
test
je
jae
or
add
cld
inc
or
aaa
orl
push
sub
sub
push
sub
or
loop
mov
mov
sub
mov
and
mov
scas
mov
or
nop
mov
add
scas
fcmovnb
fcomps
enter
pop
stc
add
insl
ffree
dec
adcl
sub
pop
call
cmp
or
sub
repz
add
xchg
push
cltd
pop
sub
cmp
add
ljmp
fists
mov
add
movsl
pop
xchg
mov
xor
mov
lret
test
inc
lahf
jno
jl
jns
push
push
sbb
sub
movsb
adc
add
add
aaa
and
shll
mov
stc
jmp
fbld
mov
dec
add
stos
dec
xchg
clts
pop
cmp
jl
in
sub
test
rcr
in
lods
shlb
clc
xor
dec
loop
push
jl
jb,pn
and
inc
or
lret
mov
dec
sti
and
or
jmp
or
sbb
mov
inc
repnz
xor
xor
and
add
adcl
lock
jmp
ss
dec
adc
clc
add
ret
push
fcoms
jge
cmp
inc
add
xchg
call
inc
fists
mov
lahf
or
test
jle
jb
jbe
dec
inc
xor
lods
jmp
add
out
pop
sub
je
cmp
rorb
test
leave
je
sbbb
push
cmp
pop
or
sbb
add
push
jmp
enter
jne
enter
adc
xchg
out
nop
fcoms
and
xor
cmp
sub
or
or
cmp
cmp
ja
jne
ret
xchg
cwtl
inc
test
or
pop
call
lods
andl
jg
jmp
push
push
push
cmp
pop
pop
jne
clc
xor
cwtl
imul
mov
imul
jns
add
mov
add
divl
je
pop
insl
vmread
rep
incb
and
je
xchg
sbb
jl
xchg
sbb
std
sbb
sbb
push
lcall
xor
add
xor
mov
pop
push
fsubrs
lods
or
sbb
fistl
fldcw
push
cmpsb
repnz
sub
or
outsb
jl
add
or
movups
and
in
aam
pop
pop
pop
mov
cmp
enter
cmovns
addl
mov
inc
jmp
fsubs
sbb
cmp
mov
loop
je
lret
loopne
es
and
loope
icebp
dec
add
in
mov
and
sub
push
jle
xor
mov
add
das
or
arpl
mov
mov
data16
jne
sbb
lock
and
and
je
in
test
jmp
or
sti
dec
loopne
or
push
fs
xchg
lods
movsb
dec
add
mov
add
loopne
mov
sarl
inc
or
stos
movsb
adc
stos
pop
rcr
or
fldt
adc
add
mov
dec
popf
xor
lea
dec
insb
nop
rol
dec
mov
mov
inc
sbbb
popf
push
sub
aad
add
js
pop
add
push
add
sub
or
pusha
call
or
and
or
cmp
inc
and
in
rcll
and
int
xor
aam
push
jmp
stc
addb
fdivrs
js
push
pop
sub
movb
inc
out
pushf
dec
mov
sub
test
add
or
adc
add
or
mov
jmp
add
mov
cmp
add
mov
sbb
pusha
js
loope
ljmp
adc
cmpsb
es
sub
jmp
dec
or
cmpl
test
or
lea
and
cmc
cld
xchg
fisttpl
push
fwait
sub
rol
pop
xchg
jns
push
pcmpeqb
sbb
shrl
add
fsubs
inc
addr16
sub
jmp
cld
mov
inc
inc
stc
pop
and
jae
sbb
pop
stc
jmp
push
fstp
dec
stos
xchg
imul
mov
out
enter
pop
or
or
aas
test
add
pushf
or
push
ret
nopl
hlt
adc
adcb
and
out
sbb
pusha
cmp
mov
mov
movsl
aam
xchg
pop
and
out
je
notl
xor
adc
mov
andb
xor
add
leave
sbb
cs
shll
or
shlb
call
mov
add
lods
inc
addb
xlat
fadds
lods
outsb
xor
js
xchg
mov
or
push
push
mov
ret
hlt
mov
popa
push
pop
into
push
ror
sbb
push
hlt
cmp
mov
daa
lret
into
pop
hlt
test
or
pop
hlt
in
or
mov
dec
addr16
leave
repnz
rclb
push
jl
cld
mov
test
lods
lds
iret
decl
pop
js
mov
add
stos
mov
cmp
jmp
xchg
test
stos
pop
add
jg
mov
add
daa
cmp
jl
xor
cmp
call
dec
mov
jle
push
inc
add
sarb
pop
jbe
int3
repnz
test
nop
fneni(8087
daa
cmp
clc
scas
adc
cli
add
mov
pop
mov
inc
aam
imul
loope
push
jp
iret
mov
mov
mov
xchg
push
cmpsb
scas
mov
adcl
int3
jbe
add
in
xchg
cmp
xor
push
in
cmp
sahf
add
and
push
shld
add
addr16
repz
mov
subb
xchg
and
pop
and
loopne
adc
cmp
das
and
jl
push
cwtl
dec
sbbl
clc
pop
jne,pt
sub
or
and
or
mov
aas
cs
scas
inc
nop
repnz
hlt
movzwl
inc
clc
int
push
push
xchg
sub
dec
or
repz
dec
xor
push
push
pushl
xor
hlt
xchg
sbb
push
aaa
or
push
mov
adc
push
jl
daa
and
pusha
adc
mov
call
mov
clc
mov
je
and
mov
or
push
cmovg
push
adcb
inc
outsl
pop
jb
popa
outsb
addl
push
push
dec
add
push
dec
popa
jae
je
adc
sbb
fwait
push
out
and
or
xor
mov
adc
movsb
xchg
les
inc
sbbl
mov
sbb
sub
sbb
sub
je
ret
mov
bswap
lret
or
popl
sub
sbb
sub
pop
mov
push
or
push
cld
sub
mov
fdivs
rclb
pop
insl
push
adc
popf
mov
fs
mov
push
and
add
sbb
in
cmp
jle
repnz
add
jae
sub
cmp
cmpl
xor
or
cmp
jecxz
jbe
scas
js
jb
icebp
out
fwait
jbe
jp
pop
mov
fadds
jge
adc
jmp
movsb
mov
add
add
test
mov
in
add
scas
loope
pop
inc
push
testb
ret
pop
add
sub
clc
je
jnp
fucomi
pop
cmpl
inc
mov
cwtl
repz
xchg
in
mov
cmp
and
xor
or
mov
push
outsb
call
mov
add
pop
jmp
pushf
xchg
sbb
test
push
push
xorl
hlt
ja
popf
add
adc
cmp
movl
mov
or
shr
fistpl
and
xor
mov
push
xchg
pop
dec
pop
jno
dec
addr16
adc
push
clc
mov
push
or
and
jg
js
mov
jnp
cmpb
jbe
push
scas
pusha
in
push
adc
adc
sbb
pop
pop
push
xchg
push
cmp
in
or
push
dec
sbb
add
pop
add
push
push
jmp
xchg
filds
sbb
jmp
jmp
or
outsb
mov
push
add
push
pushf
bound
imul
mov
pop
pop
lds
sub
adc
and
loop
pop
push
fistpl
mov
mov
jecxz
mov
enter
jae
lahf
mov
jl
or
cmp
inc
mov
push
sbb
cld
inc
inc
and
mov
adc
or
test
push
lcall
mov
dec
cmpl
push
je
call
inc
and
jbe
xchg
das
popf
ja
jmp
mov
xchg
js
adc
ret
lret
xor
dec
cmp
push
mov
adc
or
ja
cmp
lock
cli
add
push
sbb
dec
sbb
fldt
adc
jle
fstpl
adc
xchg
fs
mov
or
push
or
add
inc
out
push
push
or
stos
outsl
insb
xchg
sub
mov
jmp
add
sub
xlat
or
xor
je
pop
dec
lcall
push
push
and
call
mov
pop
mov
fcomps
das
call
push
push
push
es
push
inc
inc
pop
stos
adc
and
lret
xchg
mov
or
xchg
add
andl
mov
or
popf
cmp
pop
test
or
mov
jnp
lea
movsb
cmp
pop
fs
push
lahf
mov
loop
or
das
fs
int3
sub
lret
or
lea
cmp
sub
jns
push
mov
adc
add
mov
cmp
push
pusha
add
sub
cwtl
ss
xor
push
fstl
cmp
inc
adc
push
and
cmp
std
nop/reserved
push
mov
sub
enter
leave
cmp
ror
rcrl
popf
and
sbb
into
sbb
push
sbb
fstps
imul
push
movsb
leave
das
push
or
cltd
pop
ret
fwait
enter
es
push
repz
mov
jno
sub
and
out
xor
pop
imul
push
adc
inc
sbb
sti
push
cli
loopne
mov
std
out
sbb
jl
or
xchg
sub
or
inc
push
adc
outsb
adc
and
xor
cs
mov
add
or
test
jmp
push
pop
xchg
and
sbb
dec
cmp
jne
insb
sbb
jp
sbbl
pushl
add
cmp
mov
xor
xor
dec
mov
add
popa
inc
test
jle
ja
ret
xor
push
dec
lcall
outsb
adc
adc
xor
and
enter
ss
ret
nop
movsb
pusha
sub
xchg
xor
ss
add
repz
sbb
sbb
shrl
push
in
pusha
mov
xor
jge
mov
movsl
popl
dec
adc
sbb
jnp
adc
les
leave
cmpl
sbb
mov
and
inc
xlat
push
daa
int
mov
or
lods
aad
out
mov
mov
pop
enter
rclb
in
adc
push
and
xchg
mov
dec
xor
adc
cmp
cmpl
movb
cmp
dec
orps
outsb
mov
sbbb
mov
lea
in
inc
push
push
in
enter
sarl
dec
jne
pop
pop
pop
lea
iret
add
jbe
sbb
or
dec
and
fs
loope
outsl
ret
mov
idiv
add
xor
fs
sub
dec
das
sbb
xorb
shl
inc
mov
test
xchg
push
shr
jb
and
or
cmpb
adcl
aaa
sbb
sbb
outsl
adc
ja
sahf
push
and
jbe
pop
pop
leave
call
inc
loopne
add
adc
int
popa
adcl
jbe
mov
sbb
or
out
push
push
push
call
xor
add
and
inc
ret
pop
ret
adc
sub
sbb
dec
push
xchg
or
push
cmpsl
pop
pop
and
out
sub
mov
ret
push
cwtl
cmpb
jbe
cmpl
mov
shl
inc
mov
call
and
cmpsb
adc
popa
xor
pop
sub
stos
imul
or
jne
jle
cmpsl
and
lcall
int3
push
inc
dec
adc
add
mov
out
out
xor
push
test
xor
jne
mov
je
sbb
ret
cmpl
test
repnz
loopne
push
sbb
or
mov
stc
lock
sti
cmp
jmp
int3
add
ja
test
mov
mov
shrb
clc
dec
add
dec
jl
lock
mov
pop
and
or
mov
push
sbb
inc
add
push
or
mov
dec
cld
fcmove
xlat
nop
push
and
inc
inc
jg
js
pop
inc
stc
adc
sub
jnp
and
dec
popf
cmpsl
negb
jmp
gs
xchg
jl
dec
pop
test
scas
sub
call
and
andl
testl
xchg
push
rorb
mov
ret
pop
fwait
and
add
cmp
sub
cwtl
sbb
xchg
mov
dec
lock
outsb
in
fmuls
sub
imul
mov
and
xchg
add
les
cld
jne
cmp
mov
dec
sub
lea
subl
jge
dec
push
push
pop
xchg
mov
pop
and
call
cmp
xchg
nop
lret
call
xchg
lock
fcmovne
pop
sar
adc
dec
shrl
pop
xor
sbb
ret
xor
in
mov
loop
jmp
pop
nop
mov
push
cmp
push
pop
inc
dec
add
cmp
add
sub
test
inc
mov
pop
jae
imul
xor
bound
or
xchg
push
xchg
or
jmp
or
movsb
add
sub
orb
fiaddl
mov
nop
insl
daa
repnz
inc
or
shrl
add
lret
repnz
mov
std
nop
push
je
cmpsb
mov
ret
cmp
mov
mov
adc
pop
testb
mov
inc
jl
cmp
jecxz
mov
add
imul
sub
rorl
int
inc
cld
add
cltd
xchg
sti
adc
mov
fwait
movsl
cli
inc
arpl
push
and
pop
pop
and
mov
mov
jno
lret
or
push
sub
sbb
test
incl
xchg
adc
cli
je
cmp
xor
cld
adc
add
push
or
and
cmp
jne
arpl
call
cld
arpl
add
dec
sub
or
inc
cmp
or
add
xor
xchg
or
sub
xchg
dec
lds
xchg
pop
lea
decl
popf
inc
and
dec
rolb
daa
xlat
push
ljmp
ja
add
push
and
ljmp
pop
cmp
jne
dec
notb
lahf
sbb
inc
int
into
andl
pop
divl
sub
mov
pop
pop
ja
jbe
push
sbb
and
loope
push
jae
or
shr
popa
mov
pop
adc
pop
or
jmp
nop
sbb
aam
push
clc
inc
fdivs
add
cmpb
sub
out
ret
xor
std
into
cmp
pop
adc
ds
xlat
adc
js
inc
rclb
rcrb
mov
mov
in
cld
lods
jb
es
jl
cmp
jge
pop
sub
push
mov
add
std
or
jge
xor
push
in
fstps
pop
xchg
insb
lret
sub
call
lcall
sub
push
jle
sub
and
flds
mov
repnz
outsb
xor
adc
push
and
std
and
ss
push
dec
dec
stc
bound
xchg
test
cmpl
jne
fsubr
out
adc
loopne
arpl
jmp
fldl
out
cld
fmuls
jmp
int3
fwait
pushf
stos
xor
push
std
cmp
icebp
jl
dec
popf
movsb
sub
adc
mov
push
or
mov
xor
dec
or
shrb
mov
lret
mov
mov
sub
popa
mov
mov
push
push
dec
inc
mov
jge
cltd
and
rclb
dec
xchg
rorl
jl
push
sahf
pop
daa
jo
mov
imul
leave
or
shlb
sub
push
lret
jmp
cs
cmp
sbb
push
sbb
or
sbb
je
adc
sbb
imul
inc
jb
jp
enter
or
adc
out
jmp
jl
add
mov
orl
popa
rolb
cmpb
pushf
xor
sbb
push
lock
subb
mov
mov
inc
je
call
fld1
and
cmp
loope
loopne
movsl
loop
loopne
and
pop
mov
pop
jecxz
sbb
adc
rcl
sbb
iret
jmp
icebp
mov
dec
sbb
shr
lret
or
outsb
sub
sub
pop
repz
or
mov
inc
xor
push
xor
jmp
inc
add
cmp
cmp
adc
or
mov
cmp
sbb
add
loope
mov
add
outsl
cld
call
push
or
sarl
sbb
add
xchg
fisubl
or
sahf
add
and
movsb
or
sbb
popf
or
xor
or
adc
push
xchg
pop
mov
xor
cld
adc
jge
test
sub
adc
pop
les
xor
or
or
ret
inc
xor
sub
cmp
shll
push
mov
dec
sbb
pop
mov
movsb
adc
fbstp
movsl
lock
das
add
test
sbb
ljmp
inc
ds
adc
xchg
cld
test
adc
maskmovq
negl
or
inc
popa
and
xchg
mov
push
push
testb
add
scas
push
xor
icebp
jmp
and
push
decl
outsb
sub
data16
dec
inc
cltd
cmp
adc
ja
dec
incb
jb
gs
inc
ljmp
stc
rolb
add
sub
mov
cmp
loop
mov
push
adc
movsb
arpl
sub
inc
in
and
movsb
aaa
nop
cs
mov
inc
xor
mov
ds
sarl
add
fisubl
ret
dec
cmp
shlb
jne
xchg
pop
bound
mov
imul
add
and
mov
inc
cld
pop
pop
push
sbb
jae
cmp
or
mov
cltd
mov
and
aaa
push
cltd
pusha
lock
stc
call
sbb
sub
jmp
push
adc
push
call
xor
pop
adc
insl
call
mov
inc
or
fndisi(8087
std
cmp
and
xchg
add
jne
mov
mov
cmp
sbb
mov
scas
xchg
mov
sub
push
cmp
loopne
push
dec
in
fstpl
scas
ret
jmp
decl
pop
lods
mov
fmul
adc
lea
in
mov
outsb
sub
inc
sbb
mov
sbb
sbb
push
cs
adc
arpl
call
push
enter
scas
and
test
out
cmp
movl
mov
or
pop
push
aam
cmp
ret
push
pusha
cmpl
sub
int
or
or
add
jl
inc
outsb
sbb
and
lea
ret
or
inc
and
out
lret
mov
pop
fists
in
popf
push
andl
lret
or
push
inc
inc
xor
dec
clc
jne
sub
dec
cwtl
push
push
dec
adc
push
arpl
out
popa
loope
imul
and
pop
inc
and
xchg
pop
adc
adc
push
push
push
mov
and
pop
pop
pop
adc
lods
or
andl
adc
push
jmp
sbb
call
add
cmp
adc
push
mov
jne
jp
out
jae
int
or
clc
jge
adc
je
sbb
or
and
call
inc
adc
cld
jecxz
jmp
add
fwait
inc
mov
mov
cli
pop
jne
xor
xchg
jge
clc
adcl
in
or
add
push
push
clc
push
xchg
das
pop
lods
jmp
cmpsl
fs
repz
call
es
cmp
mov
jo
or
incl
call
orb
jb
xchg
lea
adc
in
mov
movb
fisubrs
mov
adc
push
push
cmp
mov
inc
sub
adc
cmp
lahf
or
dec
mov
xor
jle
dec
push
mov
je
or
mov
xor
in
and
test
sarb
jg
adc
test
sub
dec
xchg
movsl
dec
xor
inc
dec
inc
mov
mull
mov
mov
ret
imul
outsb
pop
insb
xor
cs
xor
addb
dec
outsl
push
outsb
addr16
popa
out
dec
inc
insl
aad
adc
mov
mov
lea
jecxz
jo
cltd
cmp
iret
push
jns
clc
sti
jne
add
pop
dec
rcll
enter
sbb
xchg
cmp
stc
adc
xchg
test
ret
insb
and
inc
push
enter
lods
jne
and
call
bound
push
jno
dec
lds
lds
and
fdiv
adc
bound
popa
inc
dec
je
int3
mov
scas
add
rcll
xor
adcb
xor
jge
xorl
or
and
sub
les
push
adc
push
xchg
add
cmp
push
push
adc
fdivs
or
mov
sub
fmuls
ret
movsl
rclb
test
xchg
jb
add
push
movsl
jne
add
sbb
repz
or
test
ss
xchg
push
sbb
push
outsl
data16
popa
jb
mov
ja
repz
jae
xor
pop
cld
clc
lret
test
sub
mov
sub
enter
or
dec
push
mov
clc
mov
add
mov
and
cmp
jne
fidivs
ret
in
ror
mov
push
iret
push
and
lods
rolb
into
out
add
mov
push
inc
jmp
pop
mov
push
mov
adc
push
cld
jne
pop
outsb
sub
shr
jb
ret
sti
pop
dec
leave
add
aas
fnstcw
sbb
je
and
jb
popl
leave
jne
mov
mov
je
movaps
jo
cld
jg
or
inc
mov
repz
out
add
ror
or
sbb
mov
mov
sub
aaa
test
mov
je
stos
or
push
lock
cmc
fiaddl
xchg
dec
inc
push
cld
cmc
push
adc
adc
fbstp
or
lds
mov
push
cld
shl
xchg
jo
inc
jae
test
popf
dec
push
gs
jmp
int3
int
movsb
jmp
adc
add
and
mov
sbb
loopne
ja
daa
or
dec
sub
clc
cmpsb
nop
adcl
add
push
lds
sahf
mov
divb
adc
adc
or
add
iret
pop
jmp
adcl
dec
sbb
mov
in
push
call
cmp
xchg
adc
pop
and
je
dec
adc
rcrb
cmp
jbe
or
mov
and
pop
out
jns,pt
adc
jmp
sub
das
fldlg2
mov
aas
fsts
int3
lods
mov
cli
add
cmpl
fstl
loop
scas
or
mov
movsl
adc
mov
out
cmp
xchg
call
sbb
pop
test
bt
js
pop
push
push
insl
jns
adc
cmp
sbb
jnp
xchg
sub
push
add
mov
sub
sbb
es
adcb
lcall
pop
adc
lret
stos
inc
test
or
lea
sub
sub
testb
xlat
cmc
sbb
ret
and
or
call
pushl
xor
inc
inc
dec
sub
shll
mov
inc
out
xchg
les
adc
imul
xchg
cmp
mov
push
inc
jo
fsubl
in
pop
xor
push
cmp
inc
mov
and
mov
push
mov
test
sbb
jo
push
xor
mov
sbb
adc
or
loop
adc
lock
or
mov
and
xchg
push
stos
js,pt
test
jg
xchg
repnz
pop
insl
cltd
adc
lahf
int3
insb
push
mov
std
addps
and
jno
or
adc
adc
sbb
xchg
and
and
sub
call
daa
inc
adc
cmp
cld
add
and
nop
outsb
nop
and
les
inc
push
mov
pop
lock
icebp
mov
and
xchg
hlt
enter
jb
cmp
sbb
mov
and
xchg
cld
enter
ja
in
jb
cmp
sbb
mov
and
mov
call
sub
ljmp
in
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
aad
in
jb
cmp
sbb
mov
and
xchg
fsubp
fbstp
cmp
sbb
mov
and
xchg
vshufps
jb
cmp
sbb
mov
and
xchg
int
into
in
jb
cmp
mov
mov
mov
mov
mov
mov
mov
and
mov
rorb
adc
or
push
gs
mov
jle
or
and
icebp
sub
or
or
pop
xor
or
js
gs
imul
mulb
lds
push
js
inc
dec
gs
jo
pop
nop
sub
push
pop
shlb
push
mov
cmpsl
xchg
mov
push
inc
dec
jne
pusha
dec
gs
outsl
daa
jb
add
and
xchg
and
inc
dec
outsb
fnstsw
in
pop
nop
in
adc
mov
data16
les
popa
insb
add
cmp
mov
ret
pop
nop
pop
loop
push
xchg
insb
lds
push
mov
gs
or
cmp
inc
icebp
adc
or
or
imul
outsl
adc
call
insb
sbb
rolb
outsb
xor
nop
movsb
stos
and
les
or
jbe
data16
outsl
ja
mov
scas
pop
dec
inc
daa
fs
and
js
cmpsb
mov
nop
pop
pop
fstps
mov
push
bnd
mov
imul
mov
inc
rclb
xchg
shlb
or
les
mov
insb
dec
popa
movsb
ret
mov
and
outsb
fs
pop
nop
push
mov
in
mov
mov
dec
punpcklbw
xchg
test
pop
pop
xchg
and
or
hlt
es
jo
cmpsl
pop
inc
push
jae
imul
push
adc
push
mov
int3
pop
pop
enter
notb
pop
adcl
mov
push
mov
mov
mov
cld
aad
pusha
in
cmc
mov
int3
les
sarl
gs
in
push
test
test
add
je
arpl
orl
inc
loopne
rorl
je
imul
cmp
xor
lahf
enter
cmp
dec
popa
or
xchg
pop
pop
enter
mov
xchg
enter
or
ret
popa
outsl
and
enter
in
hlt
test
nop
xchg
jo
inc
bound
jb
jae
mov
pop
rclb
in
imul
test
lods
test
push
adc
add
data16
add
cmp
rolb
pop
add
push
dec
cwtl
or
push
sbb
push
inc
insb
neg
aas
sub
lcall
dec
lcall
mov
adc
repz
pop
jbe
clc
add
push
adc
xchg
pop
mov
lret
jg
sub
and
xchg
imul
pop
and
loopne
lahf
sub
adc
insb
xlat
repnz
xchg
movsl
xchg
ds
out
test
xchg
std
pop
mov
jno
mov
add
jb
inc
pop
ja
add
mov
inc
xor
sub
dec
cmp
cwtl
cmp
lahf
loope
loop
movsb
test
add
repz
jne
mov
fldenv
inc
ret
or
rclb
rolb
push
neg
call
mov
inc
dec
adc
push
push
xor
div
ja
insb
popa
cli
cmp
xchg
pop
mov
push
add
pop
pop
sub
nop
lret
xsetbv
mov
add
jmp
mov
insb
inc
dec
xor
mov
jns
xor
xorl
sub
pop
or
inc
pusha
push
movb
sub
cmp
push
xchg
in
add
pop
pop
loopne
data16
fs
mov
inc
mov
arpl
adc
inc
fildll
cmpsb
pop
or
ret
xchg
adc
jmp
cmp
aaa
add
dec
aaa
clc
mov
fdivl
stc
mov
and
cmp
mov
cs
add
loope
sub
pop
add
ffree
cmp
cmp
adc
push
lret
inc
iret
cmp
clc
and
adc
mov
movsb
jp
mov
fmull
scas
ret
pop
cld
out
cwtl
cwtl
and
loopne
or
shll
arpl
add
ret
push
inc
daa
and
scas
cmpsl
jns
inc
sub
xchg
aad
clc
pusha
enter
add
push
jg
mov
pushl
lahf
push
popf
xchg
push
adc
jne
dec
sbb
jg
or
cmp
mov
add
jnp
cmp
sub
je
mov
mov
ficoms
push
pop
jne
push
rorl
mov
sti
jl
push
and
inc
addl
mov
cwtl
cs
clc
add
xor
dec
sub
into
push
in
push
lods
movsl
xchg
dec
mov
mov
cmp
add
push
lea
mov
mov
pop
cmp
fsts
fists
imul
add
lea
push
or
mov
adc
mov
out
clc
imull
shr
stos
data16
sbb
push
popf
jmp
jmp
je
pop
and
les
jne
ds
lock
sbb
xchg
pop
enter
rcll
xchg
mov
ja
adc
push
adc
enter
or
stos
dec
lea
outsl
adc
aam
push
push
mov
sub
jge
out
popa
pop
enter
jmp
inc
pusha
movsb
pop
pop
ret
lret
push
push
sbb
movsl
dec
push
pop
imul
aam
mov
filds
aad
bound
pop
xchg
xor
add
das
cmp
fs
subb
push
sti
popa
nop
fwait
sbb
or
xchg
add
and
shlb
inc
push
mov
or
inc
das
xchg
jecxz
inc
mov
mov
mov
add
xchg
mov
cmp
jmp
nop
daa
fcoms
inc
clc
nop
sti
pop
jbe
je
xchg
testb
dec
movsb
nop
xlat
and
xchg
dec
shrb
movb
cmp
pop
sarl
fmull
inc
push
lea
add
mov
pop
or
push
xor
or
in
subl
ficompl
call
pop
fnstsw
popf
inc
repz
xor
das
xchg
pop
cmpsb
sub
popf
loope
into
inc
ljmp
jge
or
in
mov
or
je
ja
nop
loop
cmp
shll
pusha
shl
nop
lahf
cmp
inc
jmp
das
repnz
inc
dec
mov
mov
call
sub
fsubrl
xor
or
hlt
andl
lods
jmp
adc
mov
mov
daa
mov
fcompl
pop
cltd
sbb
rorb
push
cmpb
xchg
or
dec
and
fstps
mov
and
push
cwtl
xor
jge
lock
shll
pop
mov
mov
sub
cmp
imul
gs
incl
add
cmpsb
push
in
xchg
cmp
push
jg
jmp
decb
nop
ret
add
es
je
push
lret
and
mov
mov
cmp
jne
lea
mov
pop
pushf
push
add
and
lds
push
or
or
mov
iret
or
nop
loop
and
dec
push
xor
mov
call
push
jo
movsl
fsubrs
gs
cld
sub
mov
add
jbe
xchg
add
addr16
dec
stc
dec
dec
and
bswap
into
push
adc
enter
sbb
mov
cmpsl
push
pop
enter
insb
stos
sbbl
inc
jmp
jle
test
cmp
dec
ret
setno
cmpw
jbe
movsl
mov
imul
inc
add
push
leave
and
inc
mov
dec
lods
adc
enter
js
inc
int3
ja
jbe
unpckhps
jne
and
and
lds
pop
jp
jle
or
mov
sti
add
jle
push
or
pop
jmp
mov
mov
jecxz
std
jle
or
sub
pop
inc
push
or
stos
test
push
mov
ret
and
jmp
int
inc
je
jmp
push
inc
ja
je
push
inc
out
adc
add
push
mov
mov
mov
cmp
ret
mov
jne
int3
adc
cwtl
and
cmp
xorl
xor
movsl
and
pop
cli
rol
xchg
ret
xor
pop
pop
dec
ret
rcl
push
mov
lcall
int
outsl
daa
movsl
or
and
sti
lret
push
or
adc
das
into
jo
or
call
add
aam
mov
sbb
push
mov
shr
and
xor
clc
sarb
mov
movsl
xchg
jno
imul
cltd
sar
dec
insb
dec
push
cld
lea
sbb
mov
notl
enter
ret
inc
jmp
push
mov
push
shll
test
pop
push
inc
push
cmp
loope
xchg
push
sub
xchg
push
in
and
mov
xor
stos
or
xchg
negb
jge
mov
idivl
in
or
movsl
add
mov
xor
mov
stos
repz
aas
mov
sub
in
inc
leave
jg
addb
add
pop
pop
jg
inc
aam
mov
xchg
jp
xchg
mov
mov
push
orb
and
mov
push
orl
dec
enter
repnz
js
xchg
sbbl
sbb
cwtl
or
daa
dec
jge
adc
jb
ljmp
pop
test
jge
xor
mov
sub
inc
jae
pusha
pop
call
add
dec
xor
enter
mov
jmp
ret
pusha
das
pop
adc
or
or
mov
jle
add
test
xor
or
shrl
gs
or
lret
dec
aaa
test
dec
imul
inc
and
js
mov
cmp
xor
stos
ljmp
xor
jg
cmp
jl
sbb
xor
dec
stos
cmpb
dec
cmp
fnstcw
sbb
push
jmp
xor
inc
pop
lea
loop
or
adc
stos
or
pop
inc
clc
adc
les
xchg
lods
xor
dec
loope
dec
push
push
jns
mov
xchg
mov
add
imul
adc
mov
add
sti
xor
incl
add
mov
jmp
sub
add
or
add
repz
inc
nop
push
dec
je
cmovnp
mov
cli
test
aas
in
pusha
ss
xor
sub
sahf
shll
stos
jecxz
sahf
jnp
inc
or
jne
xchg
das
out
test
lea
adc
or
icebp
add
lret
inc
cwtl
mov
and
imul
mov
push
push
gs
in
ret
orb
lods
ja
pusha
loopne
pop
pop
inc
loop
xchg
sub
cmpsb
xchg
add
icebp
and
inc
mov
sbb
pop
lahf
pop
cltd
sub
sub
sub
add
dec
sub
shll
mov
adc
adc
xor
popf
sub
pop
mov
insb
aam
loopne
mov
test
bound
adc
ss
and
inc
push
pop
or
push
xchg
add
ret
mov
cmp
divw
inc
push
fs
adc
jle
add
add
sbb
inc
mov
jmp
sub
rclb
dec
or
clc
mov
pop
or
and
call
repz
xlat
ljmp
lock
imul
popf
mov
je
fidivl
pop
fbstp
push
call
jnp
mov
cwtl
dec
add
call
add
cwtl
sub
sahf
or
xor
stos
mov
jae
adc
jns
add
mov
dec
or
daa
cmpb
icebp
and
push
dec
js
adc
in
jmp
data16
or
adc
sahf
xchg
and
xor
cld
push
or
test
ljmp
add
rorb
pop
fisubrl
or
adc
mov
sub
add
add
rorl
test
mov
xorl
or
rcl
mov
pop
mov
sub
add
repnz
add
and
cwtl
push
in
bound
cli
mov
or
fimull
mov
push
imul
add
dec
mov
sub
aam
jo
and
pcmpeqw
dec
adcl
xor
and
xor
add
lea
sub
push
pop
call
imull
jmp
cmp
call
mov
pop
loope
inc
loop
pop
loop
dec
xchg
sub
fistps
pop
call
mov
xor
or
add
mov
xchg
movsb
add
pop
dec
lods
mov
enter
and
clc
sub
and
bnd
mov
shl
testb
nop
add
icebp
add
stos
fcmovne
dec
test
mov
push
cli
popf
inc
cmp
cmpsb
std
xchg
mov
call
cmpsb
jg
add
cwtl
xor
fsubl
in
data16
incb
getsec
addb
daa
xor
incl
jb
js
or
lock
sbb
movl
dec
nop
pop
jle
xor
incb
or
sub
lock
sub
mov
aas
mov
mov
sub
test
stc
test
sub
fistl
fstpl
push
fwait
cmpsl
add
or
xchg
clc
repz
cmp
fsubrp
inc
mov
das
mov
sub
pusha
fldl
xchg
sarl
mov
lahf
dec
sub
pop
or
jne
push
dec
or
mov
enter
cs
test
sbb
cld
xor
ds
or
or
mov
xor
rolb
les
in
cmp
mov
mov
add
jl
add
pushf
dec
adc
gs
and
jge
xchg
ret
mov
mov
mov
pop
pop
xchg
add
ja
decl
subl
fs
xor
sub
pop
mov
dec
sub
loopne
mov
dec
int
xchg
push
pop
lods
xchg
dec
int
rcl
cld
push
and
sarb
push
int3
jp
mov
mov
arpl
cwtl
xchg
cmp
jb
fsts
jmp
aam
lcall
mov
or
add
insb
mull
push
hlt
mov
xchg
bound
and
cmp
push
or
jno
mov
es
pop
sahf
dec
clc
adc
push
cmpsl
and
push
mov
inc
dec
rorb
or
sub
push
fstpl
icebp
dec
fwait
daa
push
sbb
les
insl
add
cmp
and
or
xor
adc
int
adc
add
mov
mov
and
push
push
mov
and
add
add
popf
jnp
and
testb
xor
cmpsl
das
dec
arpl
xchg
or
mov
mov
push
fnsave
nop
jns
push
push
add
pop
jno
or
mov
movsb
push
push
cwtl
aam
push
push
or
testb
pop
rcll
dec
call
rcll
lcall
or
test
inc
xor
aad
xorb
scas
movsb
popa
clc
out
and
ss
es
fdivl
or
mov
in
mov
and
fptan
sub
jae
sub
sar
adc
jne
push
adc
push
push
out
lea
imul
xorl
and
or
mulb
jle
je
xchg
cmp
popf
dec
stos
nop
pop
dec
lock
push
or
mov
xchg
les
jns
xchg
pop
inc
leave
aam
repnz
fs
sub
movsb
dec
leave
sub
push
add
mov
pushf
rcll
mov
cld
jae
insl
in
jb
dec
aam
lock
leave
popa
push
sbb
mov
or
cmpsl
xor
outsl
xlat
mov
push
outsb
testl
dec
add
cmp
add
mov
mov
mov
push
lock
jne
push
lods
sub
xchg
stos
mov
jb
xchg
push
pop
mov
je,pt
clc
dec
jo
mov
push
sub
mov
sbb
std
xor
jg
push
loop
je
or
clc
xchg
ret
and
addb
inc
scas
popa
sbb
fimull
sub
adc
fdivrs
xor
inc
push
ljmp
rcrl
mov
fdivr
push
adc
call
into
loop
out
adc
cmp
jle
jmp
lods
aad
push
inc
and
adc
jae
out
mov
pop
or
mov
sub
push
imul
cmpl
call
jne
sbb
xor
subb
nop
mov
jmp
test
push
sub
cmc
test
add
jne
aaa
inc
mov
jmp
add
cmp
mov
jmp
ficomps
je
in
mov
in
addr16
dec
hlt
push
add
sbb
test
cmp
mov
cld
dec
mov
cltd
sub
sbb
inc
mov
ja
pusha
add
fdivr
fiaddl
test
mov
push
push
and
xor
xorl
popa
cwtl
out
std
adc
call
jne
sbb
mov
sbb
pusha
pushf
jmp
sub
popf
xor
pop
testl
dec
je
shlb
and
decb
add
add
test
push
add
jp
adc
iret
and
aaa
popf
scas
jo
mov
and
mov
sar
adc
ljmp
aad
mov
mov
and
dec
inc
add
xchg
popa
test
xchg
hlt
xchg
mov
iret
push
and
or
data16
or
es
mov
push
xchg
sbb
inc
mov
sub
push
cli
mov
adc
push
lea
outsb
mov
jbe
mov
fldenv
or
mov
dec
and
mov
testl
addb
aam
mov
pop
sbb
or
int
sub
push
sub
dec
pop
mov
hlt
pop
jae
popf
popf
jmp
pop
jae
or
mov
leave
cmp
add
aam
sub
push
je
adc
xchg
arpl
mov
stos
lods
test
xchg
shl
jmp
inc
out
inc
add
in
lods
or
test
jge
add
rclb
enter
ja
test
push
mov
or
push
daa
pop
jge
insl
cld
mov
ja
xchg
jle
cmp
push
mov
rcll
mov
je
imul
push
lret
push
leave
mov
js
clc
cs
into
jmp
js
mov
push
lea
or
enter
arpl
test
enter
call
pop
jmp
inc
sar
jg
cmp
jne
orl
clc
adc
push
adc
imul
sbb
test
jo
ljmp
mov
or
pop
xor
sub
push
orb
stc
jns
cmpl
dec
lret
xor
adc
add
push
jb
jmp
sar
sub
js
sub
xchg
and
aad
in
add
lds
dec
test
xchg
pop
xchg
ret
insb
or
ret
push
imul
jb
sub
dec
popl
leave
or
xor
and
sub
pop
mov
sahf
scas
push
cmp
in
std
or
divb
push
lock
and
dec
clc
nop
sub
dec
mov
loopne
cltd
mov
cli
dec
pop
and
inc
rorl
js
xchg
mov
leave
xor
in
mov
scas
xchg
mov
push
mov
xchg
shll
lcall
pop
int3
lret
push
pop
push
inc
jnp
insb
xchg
jnp
nop
pop
mov
cmp
xchg
jmp
jo
loopne
cld
aaa
cld
inc
test
xor
jmp
sbb
sbb
ret
insb
add
add
add
or
adc
and
or
nop
outsl
xor
repnz
test
nop
decb
jnp
out
mov
or
xchg
and
inc
fistpll
dec
xor
cld
adc
movups
mov
pop
jae
xchg
mov
pusha
sub
xchg
mov
jge
pop
scas
adc
dec
popa
xchg
push
cmpsb
dec
in
mov
test
cld
mov
and
xchg
or
popf
jns
push
mov
call
mov
les
or
dec
dec
enter
lahf
dec
mov
or
fs
icebp
mov
mov
mov
and
sbbb
mov
pop
xchg
fs
xor
xor
mov
and
inc
nop
and
nop
sub
out
adc
mov
xchg
dec
mov
mov
cmpsl
icebp
aad
out
cmpsb
mov
shlb
cld
push
rolb
ljmp
adc
or
cmp
push
push
das
outsl
lods
fs
xor
cmp
pop
fs
loope
lock
call
icebp
adc
mov
dec
subl
mov
insl
inc
push
idivb
or
ret
cmp
sbb
sbb
adc
pop
dec
pop
xchg
or
mov
mov
cmpb
mov
and
push
cwtl
or
inc
jl
pop
pop
adc
xor
je
and
aam
push
mov
sbb
sub
or
cmpsb
nop
enter
adc
mov
cmpsl
pushf
and
test
std
pop
or
adc
aad
adc
add
add
xchg
xchg
pop
push
push
call
push
inc
and
enter
jns
int3
or
mov
sbb
jne
mov
mov
or
push
or
adc
pop
xor
push
pusha
and
cli
clc
adc
cmp
ljmp
fwait
inc
das
mov
outsb
loopne
divl
out
int3
test
add
or
and
add
push
inc
sub
and
add
cmpb
or
inc
mov
push
add
adc
add
mov
cmp
or
leave
divps
dec
sarl
jg
mov
push
leave
push
sub
adc
inc
faddp
sub
mov
lock
add
ret
cmpsb
pop
dec
outsb
hlt
pop
movsl
push
adc
andb
push
xor
sub
aad
addl
dec
ret
xchg
cmp
sub
das
jae
sbb
loopne
adc
cmpsb
adc
sbb
mov
cmc
mov
mov
rcll
clc
inc
cmp
lret
push
mov
sub
adc
je
add
inc
jb
push
xor
mov
enter
mov
sbb
mov
inc
sbb
and
hlt
xor
push
or
pop
pop
out
mov
sub
dec
enter
mov
inc
out
push
je
sbb
sub
pop
mov
jb
inc
mov
out
js
xchg
movsb
push
stos
xor
jae
pop
lret
jne
cld
cmp
loopne
or
jmp
add
jg
addr16
cwtl
movsb
clc
pop
and
pop
icebp
mov
ret
xchg
shl
dec
jo
push
push
add
xor
adc
call
push
mov
sbb
cmp
mov
add
adc
rorl
sbb
mov
mov
iret
push
rep
pusha
or
jne
pop
jne
les
mov
pop
loope
push
dec
sub
jbe
or
adc
jne
mov
mov
and
sbb
setne
mov
or
pop
xor
xchg
adc
cmp
lea
push
and
add
mov
cmpl
cwtl
xchg
rorl
pop
inc
sbb
jmp
lock
adc
xchg
int
inc
sbb
dec
lea
pop
mov
pop
in
adc
stc
and
inc
adc
sub
mov
sti
pop
arpl
loop
popa
mov
daa
orb
lock
das
and
stos
or
sbb
fwait
mov
sub
sub
ljmp
loopne
dec
jmp
pop
mov
mov
fwait
sub
mov
dec
in
outsb
sbb
in
test
xchg
aaa
inc
test
fsubl
add
inc
pop
mov
bound
shl
mov
sub
adc
xlat
or
sub
push
movsl
insl
nop
nop
enter
mov
js
shrb
mov
or
inc
sub
and
hlt
or
enter
push
adc
xor
cmp
sub
rol
push
and
jmp
and
bound
mov
call
out
push
sbb
push
hlt
mov
inc
sub
enter
stc
or
push
dec
out
leave
loop
stos
nop
cltd
sahf
mov
stc
leave
enter
insl
das
fs
jne
or
insl
add
cmp
pushf
and
sub
or
jo
or
pop
out
les
push
lret
test
adc
and
into
test
sbb
push
mov
push
and
pop
or
aad
repnz
mov
pop
push
lods
imul
icebp
or
xchg
jns
xor
jl
push
xor
mov
adc
pop
cltd
xchg
jns
jo
imul
sbb
push
jo
arpl
pop
mov
lods
call
push
lock
adc
xchg
adc
int3
aam
enter
adc
xor
and
dec
jo
test
les
shll
cwtl
fsubl
nop
dec
hlt
adc
and
dec
js
nop
xorl
repnz
and
inc
pop
or
push
adc
and
dec
mov
inc
xor
xor
xor
dec
cmp
sbb
xor
or
imul
lcall
sbb
adc
push
call
sbb
ret
xchg
sbb
xchg
inc
enter
fucom
inc
mov
rclb
dec
and
inc
dec
and
loope
sbb
mov
or
mov
mov
mov
dec
or
mov
rorl
inc
test
and
xchg
mov
pushf
sub
xor
xchg
xchg
sub
cmpsb
pusha
inc
mov
cmpsb
sbb
cmpsb
cmp
test
cld
cltd
and
adc
or
adc
je
dec
xor
in
fs
dec
and
fs
fs
mov
pusha
dec
clc
in
dec
rcrb
inc
pop
and
scas
jae
sbb
hlt
adc
mov
pop
jnp
mov
dec
bound
sub
add
adc
mov
mov
push
adc
xor
add
sbb
sub
push
mov
and
pop
adc
sub
mov
insb
aas
and
adc
out
or
movsb
cmp
mov
or
cwtl
fs
sub
test
and
rolb
xor
lcall
mov
imul
subl
sbb
xchg
mov
pop
pop
loope
fidivl
inc
mov
xor
lods
push
icebp
or
jno
cwtl
lret
jb
stos
jp
adc
jae
add
add
in
outsl
int3
adc
mov
push
inc
push
inc
push
pop
cld
test
icebp
test
jbe
mov
add
sbb
clc
loopne
dec
xor
inc
adc
out
cld
inc
mov
jns
add
push
and
pop
xchg
mov
xchg
mov
ret
into
addl
mov
jg
loopne
dec
outsb
push
js
add
sbb
dec
daa
movsl
push
sub
scas
or
dec
ljmp
push
cli
sub
or
testl
scas
push
cs
mov
stos
test
push
aas
orb
scas
push
sub
xchg
clc
xchg
out
out
or
jne
sarl
je
daa
and
sub
and
sbb
popf
mov
in
pushf
xchg
stc
aam
inc
sbb
lods
mov
jge
imul
push
outsb
or
dec
push
adc
shl
movsl
jge
sub
mov
xchg
gs
mov
jbe
xlat
xlat
xor
clc
aam
test
enter
scas
pop
jo
pop
add
cs
lods
insl
imul
mov
pop
or
xchg
jne
sub
xchg
loopne
jmp
pop
jle
int3
roll
dec
mov
sbb
lret
scas
xor
dec
add
or
sbbl
jmp
xchg
dec
rorl
aas
notb
or
pop
cmc
inc
add
popa
mov
pop
cld
sub
cli
xor
shr
cwtl
mov
test
into
lea
outsb
in
inc
pusha
jae
rol
loop
xchg
adc
jmp
push
andb
cmp
jne
xchg
insb
or
shl
push
dec
cmp
push
sbb
or
loope
loopne
pop
and
fsubrs
mov
sbb
xchg
sbb
push
adc
enter
or
inc
push
mov
inc
push
jb
sbb
sbb
and
and
xchg
and
mov
sub
or
mov
push
jne
mov
mov
push
add
mov
fs
mov
das
rorl
sbb
imul
mov
and
and
mull
loopne
push
xor
sbb
sub
fsubl
mov
lea
mov
movl
mov
mov
xchg
cmp
sub
sub
push
dec
sub
cltd
and
fimull
sub
jb
and
sub
dec
sbb
pop
inc
jns
jb
push
xchg
jp
scas
jbe
adc
int
adcb
pop
je
sub
mov
cmp
fcomps
seta
fisubl
lret
cmp
xchg
rorb
fwait
push
lret
xchg
cmc
lret
jmp
adc
lret
xor
adc
jg
or
push
push
inc
lock
clc
adc
add
mov
inc
jp
mov
pushf
xchg
cwtl
push
int
shlb
dec
test
or
out
add
sub
sub
outsb
and
xlat
inc
in
mov
inc
add
sbbl
ret
pop
dec
and
add
dec
sbb
add
sti
push
cs
dec
dec
push
pop
mov
pop
adc
push
pop
and
dec
popa
xchg
mov
mov
and
push
mov
mov
cmp
js
or
popf
jno
arpl
test
pop
adc
cmpsb
mov
pop
gs
and
outsl
sub
xchg
cmp
arpl
std
pop
jo
adc
or
push
dec
jo
nop
push
in
cmp
mov
cltd
js
std
lahf
xchg
es
dec
aaa
xchg
xor
sbb
pop
and
movsb
pushf
fstl
int3
xchg
scas
sub
loopne
dec
outsl
xchg
mov
and
out
js
out
xchg
out
sbb
sub
mov
cmp
insb
dec
xchg
in
pop
icebp
pushf
out
jg
leave
inc
aas
xor
push
xor
and
xchg
pop
jo
adc
icebp
sbb
mov
adc
and
loop
les
out
adc
and
and
adc
lock
jb
cmp
cs
mov
cs
mov
enter
mov
sbb
mov
and
in
jb
cmp
pop
mov
and
inc
enter
jb
sbb
int3
mov
mov
das
ljmp
das
or
xchg
int3
sbb
pop
ret
push
xchg
xchg
scas
fsubl
jne
mov
push
inc
cltd
test
and
cmp
shl
fistl
test
cmpsb
pop
push
mov
mov
inc
sbb
sub
xor
cli
xor
fbld
call
lock
mov
and
cmp
daa
mov
dec
xchg
sbb
repz
loop
and
add
cmp
push
in
imul
repnz
adc
pop
int3
jne
or
inc
rclb
mov
mov
test
or
mov
test
inc
push
outsb
imul
jae
xchg
jo
pop
jae
fildll
test
mov
xchg
adc
shll
pop
cs
push
aam
in
ret
out
mov
cltd
push
and
cld
sub
out
add
inc
xor
jge
jge
cmp
clc
mov
add
jne
out
loopne
inc
lcall
lcall
dec
cmpb
je
sbb
cld
cmp
aas
add
or
mov
dec
push
clc
jbe
push
dec
call
jge
mov
ds
xlat
insb
repnz
scas
pushf
cwtl
mov
call
jge
ret
int
mov
icebp
gs
lea
or
fs
lret
sbb
xchg
inc
xchg
mov
fwait
inc
lahf
pop
mov
call
adc
adc
pusha
cs
jge
xor
dec
rolb
shlb
sbb
push
ds
movsl
sahf
or
stos
jle
jbe
mov
add
jmp
sub
mov
dec
out
pop
dec
jp
pop
push
sbb
sbb
int3
ljmp
popa
jno
push
pusha
aas
push
push
sbb
ja
push
inc
xor
scas
dec
nop
mov
lcall
orb
inc
psrld
adc
jae
sub
dec
sub
rorb
lods
push
unpckhps
rorb
je
push
push
sub
xchg
pop
mov
add
jbe
jb
mov
push
sub
mov
push
or
xchg
jmp
rorb
inc
mov
lds
cmp
sbb
push
inc
inc
inc
movb
mov
mov
subb
pop
or
mov
sbb
pop
sub
mov
sbb
cmp
mov
psubusw
aas
lret
xchg
xchg
adc
dec
inc
xor
push
add
addr16
adc
adc
cmp
adc
sub
cmpsl
dec
shl
bound
pop
sub
cmp
add
repz
nop
mov
sub
shlb
pop
mov
movsb
fcmovu
fcmovnu
loopne
adc
fs
dec
mov
dec
sarl
lcall
out
fistpll
pusha
and
inc
cmp
xchg
inc
lahf
xor
adc
out
inc
fwait
lock
sub
sub
dec
mov
xor
push
clc
xor
add
in
or
insl
dec
sub
cmp
cltd
dec
and
xorl
cmp
dec
adc
cmp
inc
or
inc
adcb
jb
mov
test
xchg
dec
loope
arpl
out
clc
data16
mov
leave
adc
or
xchg
int3
and
and
add
mov
inc
sub
adc
jl
xor
mov
pop
lahf
insl
mov
adc
inc
add
and
pop
push
inc
or
test
test
test
test
and
addl
and
jo
and
sbb
inc
sub
arpl
clc
jecxz
jl
mov
inc
jp
push
cmp
fs
addr16
xchg
xchg
xchg
sub
iret
jmp
dec
push
es
in
inc
shll
pop
mov
pop
push
adc
call
cmp
imul
cmpsb
push
pop
mov
fcoms
stos
inc
push
clc
mov
stos
orb
push
or
jae
adc
popf
jnp
mov
jl
jl
es
jmp
outsb
in
jns
lock
push
arpl
lret
mulb
and
sub
dec
incb
dec
xchg
loopne
dec
or
pop
jge
imul
sub
sbb
add
insb
jmp
sahf
call
and
mov
cmp
xchg
dec
add
popa
xor
dec
popa
std
pop
test
popa
push
mov
sub
sub
sub
test
lea
add
loope
mov
sbbb
ret
data16
or
mov
or
cmpsl
sti
insb
int3
mov
outsb
sub
jns
filds
adc
or
dec
add
jl
push
xchg
repz
lock
cltd
dec
mov
adc
pop
pop
sub
cmp
ret
nop
dec
or
push
adc
jg
jne
loopne
push
faddl
bound
push
test
add
loopne
mov
xor
and
push
and
sbb
push
fisubl
adc
add
jno
cmp
in
jae
outsb
popa
cmp
xchg
mov
cmp
lods
inc
pop
lcall
jb
lds
sbb
clc
ss
in
push
or
pop
fidivs
test
dec
or
adc
xchg
pop
pushf
shlb
mov
inc
test
loop
fwait
mov
gs
incl
popf
icebp
aas
andb
jmp
stc
or
dec
push
lahf
iret
mov
jmp
mov
cltd
out
inc
jmp
mov
xchg
loope
sbb
data16
sbb
repnz
xchg
leave
cmpsb
sahf
repnz
cmp
ds
bound
mov
jp
mov
aaa
jp
pop
add
add
out
lret
adc
mov
in
xor
inc
popa
and
add
out
jne
frstor
push
push
add
sub
jmp
inc
les
data16
and
jns
and
xchg
and
shlb
push
and
xor
adc
cltd
adc
dec
and
sbb
ljmp
fadd
and
mov
cld
inc
std
or
nop
sbb
add
jb
dec
cmp
pop
test
inc
scas
mov
mov
xchg
xchg
scas
mov
pop
inc
fsubs
test
jns
dec
or
orl
es
divb
fs
ss
lock
outsl
mov
mov
jns
pop
or
adc
loopne
jp
push
push
xchg
pushf
movsl
push
push
xor
sbb
je
or
jne
pusha
adc
push
add
aaa
push
mov
or
and
and
or
sub
and
sub
fisttps
cmpl
push
xchg
cmp
xchg
adc
jo
lods
xchg
mov
enter
das
or
push
mov
ret
or
sbb
int3
call
jnp
or
pusha
jb
sub
orb
cmpsl
sub
lret
lods
call
nop
add
sbb
lret
add
enter
and
sbb
sub
imul
mov
inc
repz
andb
ljmp
or
mov
mov
jbe
mov
add
les
mov
repnz
and
inc
mov
adc
sbb
orl
sbb
pop
sub
jbe
dec
push
ja
xor
cmpsb
dec
or
popa
outsb
jge
jbe
cmp
jne
push
nop
add
or
and
adc
jmp
mov
loop
pop
scas
add
clc
lods
or
jne
xor
es
cs
mov
sub
lret
aam
sub
cli
or
ja
mov
or
jmp
pop
sub
ja
mov
cmp
fadds
mov
cmp
xlat
out
xchg
sub
rcl
jbe
in
push
or
movb
pusha
ja
mov
orb
sbb
or
ret
mov
fwait
or
movsb
jne
and
push
cmp
adc
test
and
pop
test
push
les
fs
or
cmp
ja
sub
loope
add
pushf
xor
sub
mov
shr
sbb
loop
fisttps
sahf
xor
inc
nop
jge
cwtl
lcall
and
sub
insl
or
or
adc
sub
sub
or
mov
jae
sub
popf
sbb
jmp
xor
int3
jae
pop
inc
mov
adc
mov
xor
jg
and
mov
mov
and
dec
jbe
imul
cmp
sbb
or
and
cmp
adc
jmp
orl
test
dec
faddl
cwtl
imul
and
sub
push
jb
mov
in
cmpsb
call
lock
lretw
clc
enter
lcall
dec
scas
xor
or
ja
fldl
je
mov
inc
pushf
push
inc
adc
mov
ret
adc
insl
fistpl
fisttps
dec
mov
scas
insb
sub
inc
sub
jne
mov
add
inc
cld
jne
jmp
jno
xor
xlat
cld
sub
dec
xor
pop
sub
xor
insl
fs
add
enter
inc
sahf
fldl
lock
sbbl
cs
xor
pop
movb
sbb
xor
hlt
loop
fwait
or
lock
xor
popa
test
jne
mov
adc
xor
or
xor
push
and
sub
pusha
mov
xor
push
dec
adc
push
mov
pop
adc
mov
xor
sub
dec
xlat
sbb
adcb
dec
movsb
notb
sub
jecxz
sbb
xchg
adc
jl
fs
add
or
xor
xor
xchg
jmp
cmp
je
cmpsb
xor
xchg
adc
sbb
xchg
into
or
rcll
je
jl
jb
sbb
mov
jbe
nop
inc
mov
adc
sub
xor
mov
sub
aad
mov
hlt
sbb
sub
mov
mov
dec
and
push
popf
inc
jmp
inc
jb
xchg
xor
es
and
pop
sub
leave
cmp
or
add
xchg
xchg
sahf
cmp
gs
inc
inc
out
jo
cmp
lds
add
add
mov
or
or
int
cmpl
xor
fcomip
loop
and
or
lds
pop
inc
dec
cmp
sbb
mov
cmpxchg
fisttpl
test
or
mov
dec
roll
call
cmpsl
cli
loope
xchg
cmpsb
cmpsl
in
stc
adc
dec
xor
xor
ficomps
or
std
fbld
adc
adc
xor
mov
push
fwait
and
test
mov
xchg
jmp
mov
cmp
cmp
cmp
notb
and
add
adc
sub
sub
rolb
js
call
xlat
xchg
hlt
or
pop
dec
leave
adc
or
xorb
mov
ret
adc
mov
pop
sub
push
pushf
cmp
and
sahf
add
es
mov
sub
inc
fistl
mov
jmp
out
jae
cmp
push
fisttps
and
inc
call
adcl
xchg
dec
or
shrl
std
pop
add
pop
dec
test
sbb
sbb
dec
adc
int3
jb
sbbl
int
into
cmp
pop
orb
sbb
cli
push
cld
out
pop
push
dec
inc
lock
imul
add
test
int
add
cmp
add
js
xchg
push
mov
push
cmp
inc
and
pop
inc
lret
sub
jmp
push
icebp
xchg
add
ret
shll
daa
cmp
aaa
jp
js
fbstp
repz
int
cs
inc
movsl
imul
insb
cmp
pop
pop
sahf
jge
mov
pop
push
xchg
test
push
test
add
mov
inc
add
call
inc
add
xchg
mov
jle
je
xchg
xor
inc
dec
add
nop
push
push
sti
cli
mov
add
mov
jbe
aam
mov
cmp
xlat
cmp
and
inc
adc
and
je
mov
sub
jb
lds
dec
push
inc
jnp
mov
std
xchg
fcmovb
sbb
pop
mov
nop
sub
adc
xor
cmp
push
xor
sahf
mov
sti
inc
adc
sar
adc
mov
out
fldcw
mov
adc
push
punpcklbw
sarb
aam
inc
pop
push
repnz
inc
stos
adc
flds
repz
pusha
push
lea
push
sarb
shlb
popa
daa
cmp
nop
add
je
or
out
add
jo
adc
cmp
adc
and
jne
mov
jmp
jo
push
repnz
adc
or
adc
adc
cmp
cmp
clc
ja
pop
adc
jne
or
out
and
pop
sahf
mov
fbld
inc
clc
nop
sub
jmp
lods
movsb
mov
and
inc
mov
push
cld
inc
sbb
fdivs
dec
call
stos
cmp
and
adc
push
or
out
push
test
das
mov
or
dec
mov
push
shl
cmp
insb
icebp
mov
and
fsubs
xchg
addl
or
subl
adc
xchg
les
mov
and
nop
cs
cmp
jmp
shlb
sub
pop
outsl
lret
stos
sub
inc
add
sub
cs
xor
mov
inc
fisubrl
fiadds
pop
inc
and
nop
fmulp
loop
inc
out
jmp
dec
nop
jno
lcall
rorb
popa
stos
or
mov
mov
stc
aas
sub
pop
jmp
loope
mov
rclb
test
test
aas
fidivs
and
pusha
sti
jo
enter
or
insl
fs
enter
jecxz
and
out
enter
daa
mov
pop
les
adc
xchg
in
mov
adc
mov
and
pop
push
adc
jo
adc
js
xchg
xor
xor
and
add
pusha
inc
insb
add
xlat
mov
lods
sbb
aam
xor
and
fisttps
lds
add
unpckhps
xorb
and
mov
xor
inc
or
fstpt
jo
adc
imul
and
add
sarl
lock
adc
scas
inc
cmc
repnz
call
or
xchg
adc
test
sbb
adc
inc
xor
add
add
fcomps
sub
test
sbb
pop
jmp
xor
mov
add
aaa
cmpb
xchg
jno
std
js
add
cmpsb
fiadds
inc
add
mov
inc
out
pop
bound
test
xchg
test
imul
adc
mov
mov
out
push
pop
pop
es
out
ret
xchg
xor
call
les
das
push
test
subl
test
bound
add
and
roll
jae
sti
shl
mov
add
out
loope
pop
test
add
pop
aaa
std
js
out
testl
mov
cmpsb
jae
in
adc
inc
mov
movsb
out
cmp
outsb
test
add
js
push
je
add
flds
outsl
addr16
test
add
dec
sub
xchg
orb
push
add
movsb
fstl
jno
xchg
sub
popa
or
fwait
mov
ret
popf
jl
mov
or
mov
ret
iret
fimuls
shlb
test
mov
inc
or
mov
jp
jle
fwait
sub
ret
sub
cmp
cli
test
out
aam
std
popa
inc
les
hlt
sarb
aam
fnstcw
mov
cltd
fistl
jl
pop
jbe
xor
clc
adc
mov
xor
push
lods
les
not
es
je
fstpt
adc
sub
mov
mov
mov
decl
sub
or
inc
lds
nop
xlat
add
pxor
cwtl
push
adc
mov
test
mov
lods
test
add
int3
or
scas
test
bound
inc
fistpll
sub
incl
sub
dec
jle
test
test
imul
test
out
and
adc
inc
add
mov
test
jle
testl
loope
jnp
dec
out
add
outsl
test
xchg
roll
daa
and
xchg
cmp
cli
inc
outsb
push
or
push
test
xchg
les
shr
and
mov
movl
addr16
adc
mov
fdivrl
push
sub
adc
xchg
divb
or
or
je
negb
inc
adc
adc
sti
dec
cwtl
icebp
rol
sbb
fbstp
add
jl
iret
push
jbe
jmp
cli
mov
inc
mov
cmp
ja
mov
mov
fmuls
inc
lock
stos
xchg
repz
adc
xchg
in
loope
add
xor
lds
mov
movb
cmpl
jb
cmp
push
pop
xchg
push
int
inc
pop
add
fwait
pop
mov
sub
movsl
jo
mov
icebp
jnp
push
adc
inc
xchg
test
push
pop
pop
imul
cli
rorl
xor
push
fdivrl
mov
jl
xchg
stc
pop
adc
adcl
clc
inc
leave
inc
and
mov
pop
xor
mov
inc
bt
outsb
xchg
out
cli
inc
add
bnd
ljmp
dec
and
mov
movsl
icebp
repz
pop
in
inc
aad
in
jnp
jge
test
jl
inc
mov
dec
xor
cmp
js
jae
pop
jl
mov
xchg
call
testb
cmp
jl
cmp
mov
or
fdivrs
add
pop
xor
ret
mov
jo
add
xlat
mov
inc
incl
adc
mov
repnz
pop
add
sbb
pop
fnstenv
jl
shr
sub
mov
add
add
inc
inc
inc
add
inc
dec
dec
dec
dec
add
push
push
push
push
push
push
mov
pop
inc
pop
jo
loopne
add
mov
sbb
push
fwait
jecxz
fs
cmp
jae
mov
movsb
add
testl
fisttpl
jl
xchg
sbb
adc
xor
pop
cmp
or
and
or
dec
insb
ret
sbb
call
adc
movsb
ret
sahf
mov
push
xchg
lock
jl
mov
nop
jmp
fiadds
mov
mov
scas
int
ds
aam
push
mov
ret
orl
inc
nop
lret
xchg
xchg
push
push
pop
hlt
jns
pop
xchg
mov
xchg
mov
jo
shr
jb
stc
dec
test
lods
shrb
dec
call
jne
inc
inc
xchg
sbb
test
dec
and
fistps
xor
jl
jecxz
sbbl
test
jae
movsl
jbe
outsw
out
insl
jnp
dec
loop,pn
test
lds
pop
mov
inc
rol
adc
push
push
mov
daa
pop
adc
add
call
mov
push
and
je
xor
or
call
int3
push
adc
mov
push
dec
add
jae
pop
test
dec
xor
sub
xor
xor
pop
pop
dec
pop
lock
shlb
shrb
mov
bswap
arpl
or
rolb
repnz
or
or
pop
loope
xor
lods
xchg
dec
stos
ljmp
push
inc
or
pop
push
push
inc
xchg
xor
popa
push
ror
mull
xchg
mov
cmp
jae
inc
leave
push
stc
int3
or
loope
push
xorl
inc
jo
icebp
xor
jge
rcrl
cmp
mov
fstl
fists
or
adc
rep
mov
sbb
mov
xor
mov
leave
jl
sub
sub
or
les
movsl
adc
mov
add
and
push
mov
sub
jge
push
cmp
fiaddl
or
add
daa
sti
pop
jg
push
adc
cltd
sbb
adc
jbe
mov
inc
out
mov
leave
and
xrelease
jb
adc
jmp
lret
push
lea
clc
nop
rcll
mov
lret
mov
and
add
loopne
loopne
add
pop
jb
ja
push
inc
xchg
movl
cmp
repz
cld
pop
and
ja
ja
push
and
lret
dec
mov
xor
sbb
cmp
stos
repz
nop
cmp
jb
out
repz
ds
je
and
push
dec
dec
dec
adc
mov
xchg
sbb
and
mov
sub
or
push
push
fstl
loopne
jg,pt
dec
add
adc
or
out
dec
mov
scas
ret
jb
add
nop
jg
or
je
or
and
lea
jmp
and
movb
push
dec
sbb
cmpl
in
in
dec
nop
loop
aas
xor
mov
inc
int
and
iret
add
and
xor
push
hlt
or
add
push
orb
add
mov
xor
nop
je
xchg
jmp
cmp
sub
lea
out
dec
inc
icebp
in
mov
dec
data16
cmp
es
pusha
movsb
sbb
jns
movsl
imul
push
cmp
je
dec
add
pop
ja
enter
or
shl
mov
mov
ja
nop
ffreep
lcall
or
or
idiv
xor
cwtl
xchg
pusha
clc
in
add
jae
lcall
xor
and
int
ds
roll
mov
dec
ljmp
lret
inc
inc
pusha
or
or
jne
xchg
mov
add
std
sbb
xchg
xchg
mov
imul
inc
jae
inc
sbb
loop
dec
decb
adc
xlat
rorb
pop
adc
jge
testb
xor
pop
xlat
xor
add
jmp
jmp
or
insb
lea
clc
shl
xor
int3
lret
cli
pop
je
jle
inc
in
mov
dec
ds
inc
fisttps
sub
or
mov
or
pop
nop
inc
ljmp
iret
loop
pop
adc
jmp
sti
out
adc
xlat
xchg
nop
call
jmp
ljmp
or
loopne
stc
stc
cli
add
adc
inc
stos
les
jb
or
xchg
bnd
call
mov
mov
cltd
loop
adc
sbb
push
lcall
and
adc
loop
adc
and
push
sahf
mov
adc
sub
push
mov
insb
and
and
push
lods
dec
jmp
xor
inc
stos
les
jb
or
cmpsb
mov
inc
mov
test
mov
lahf
mov
stos
cs
mov
mov
pop
lods
rolb
fildl
outsl
shlb
incb
mov
inc
imul
or
cmp
rorb
popa
and
and
cmpb
mov
ret
lods
xor
popa
jne
fisubrl
mov
or
in
mov
inc
mov
mov
mov
dec
mov
push
jle
sub
cmp
test
stos
sbb
aad
add
sbb
and
sbb
adc
aad
and
daa
push
pop
pop
adc
mov
into
and
popf
stos
rorl
add
inc
ret
adc
jle
mov
cmp
mov
push
mov
out
nop
inc
xor
push
leave
mov
jbe
movsb
sbb
xor
pushf
mov
iret
push
sarb
push
iret
mov
and
dec
adc
push
mov
scas
mov
adc
bound
rorl
cltd
dec
lods
sub
mov
aad
or
adc
fstpt
and
cli
loop
adc
sub
push
fildl
xor
stos
fldl
shlb
push
jbe
test
je
or
push
loopne
adc
mov
rcrb
xorb
adcl
in
and
jbe
test
inc
mov
iret
jbe
test
cmp
jbe
test
and
mov
in
sub
xorb
test
and
pop
stos
out
jmp
or
int3
jmp
inc
push
cmp
and
sub
and
pop
push
leave
hlt
in
in
push
test
aam
xor
insb
lcall
adc
stos
out
stos
sbb
ret
lcall
popf
stos
icebp
mov
push
and
inc
or
mov
inc
mov
aad
sub
nop
add
aad
pop
mov
stc
push
mov
shlb
cmp
stos
sti
mov
inc
popf
aam
sbb
push
std
mov
popl
mov
inc
mov
daa
lret
mov
mov
push
sub
stc
add
int
or
in
dec
mov
add
mov
rcrl
jbe
nop
dec
xchg
pop
mov
stc
xor
das
add
mov
icebp
int3
sbb
adc
push
in
push
jmp
addb
or
jae
or
ret
inc
test
mov
out
fdivrs
loopne
dec
ret
push
xchg
jp
add
test
jbe
or
mov
aas
adc
loopne
xlat
ror
adc
jbe
dec
jne
jb
pop
ljmp
mov
in
mov
stc
dec
push
pop
jmp
mov
push
adc
push
adc
fst
or
rorb
stos
je
daa
mov
int
push
sti
leave
jae
jp
sbb
add
xor
lret
notl
mov
mov
mov
xlat
xchg
jae
xor
push
xor
inc
movsb
jne
mov
aam
add
aad
inc
fs
mov
frstor
bound
or
and
out
sub
mov
hlt
push
aam
inc
and
mov
dec
inc
mov
mov
adc
or
adc
out
std
fidivrl
adc
dec
mov
push
add
out
adc
push
push
push
push
xchg
xor
mov
ret
loopne
rol
sub
ficoml
or
adc
and
test
movb
cmpl
jne
scas
lahf
adc
push
movsl
test
pushf
inc
xor
pop
inc
xor
and
lret
pmullw
mov
add
sbb
lock
hlt
sub
mov
rorb
dec
sub
jb
jecxz
or
and
jae
cmpsb
push
push
mov
inc
sbb
iret
mov
jnp
or
xchg
pop
dec
lea
mov
clc
pusha
aad
fs
xor
cmp
pusha
jmp
jle
iret
xor
xor
pop
and
call
add
andb
sub
outsl
test
sub
push
mov
lock
or
int
daa
sub
and
imul
cmp
stc
push
adc
mov
sbbb
xorps
push
and
or
insl
pop
pop
cmp
jbe
jae
pop
cmp
sets
inc
mov
add
and
imul
pushl
lret
cmpsb
pop
sub
push
jle
jbe
into
push
adc
mov
sub
mov
sub
adc
sub
cmp
or
test
adc
enter
cli
push
push
loope
jmp
mov
jmp
mov
mov
sub
ret
movsb
test
adc
or
ret
add
mov
les
push
xor
cmp
jl
incl
xlat
pop
xor
inc
cwtl
fsts
test
push
fisttpl
sbb
and
fiaddl
add
hlt
lea
xor
decb
pop
dec
adc
xor
test
mov
xchg
or
push
sbb
mov
push
xchg
stc
lods
mov
movsb
shll
and
xchg
mov
mov
and
ljmp
movsb
push
sbb
call
test
jmp
fbstp
stos
aad
sbb
and
mov
adcb
mov
dec
and
and
or
test
inc
call
or
adc
rclb
jnp
adc
shl
mov
sarb
or
adc
xor
loop
or
js
or
push
xchg
scas
push
ljmp
loopne
lahf
cltd
repnz
js
mov
outsb
mov
fs
mov
ret
push
inc
jns
fists
adc
cmpsl
and
lcall
movsl
out
loopne
xchg
or
test
jo
loopne
mov
adc
push
mov
pop
test
mov
add
sub
adc
or
jmp
mov
pushf
je
and
shrl
jne
scas
ret
sbb
enter
cmp
into
jne
or
test
push
cmpb
je
add
ffree
adc
inc
ds
sbb
add
pop
adc
push
mov
fistl
sub
jbe
adc
cmp
mov
and
sbb
and
inc
xchg
cltd
and
and
or
repz
shl
mov
push
or
imul
aas
push
movhps
mov
sbb
inc
fs
pushf
cs
dec
push
stos
inc
shl
fnstsw
pop
adc
jno
push
push
push
pop
ret
adcl
dec
adc
mov
cmp
dec
out
adc
dec
sub
mov
movl
lds
cltd
push
in
or
js
adc
call
pop
fidivs
jmp
aaa
cltd
xor
inc
std
or
mov
pop
xor
sbb
ret
adc
mov
add
mov
mov
pop
mov
mov
push
add
ja
pop
pop
xlat
adc
xchg
push
inc
dec
filds
push
mov
adc
mulb
pop
sbb
mov
jle
pop
pushf
pop
inc
mov
push
loope
loopne
and
cmp
add
lock
pushfw
push
cltd
and
mov
cmp
fistpl
push
mov
sarl
ror
ret
mov
jge
or
dec
in
or
daa
shll
fsubrl
xlat
xchg
in
ret
pushf
jl
cwtl
jb
adc
mov
lods
or
xchg
lret
xor
ljmp
cwtl
incb
pop
loope
arpl
mov
jb
mov
arpl
lea
adc
sub
jmp
movsl
jnp
ret
icebp
inc
repnz
push
mov
mov
add
dec
add
mov
aam
cmp
mov
cmp
mov
cmp
cmpsl
sbb
adc
dec
outsb
xchg
inc
inc
and
cs
pop
outsl
jp
enter
inc
jmp
gs
push
cmp
fwait
jne
dec
xor
or
push
dec
outsl
popa
fs
push
inc
cwtl
sub
rcrb
movsl
sahf
call
mov
jecxz
jmp
jns
add
jo
clc
inc
or
bound
and
xor
push
add
jns
adc
pop
xchg
dec
test
jo
mov
ss
flds
hlt
dec
call
stos
scas
cmp
xchg
jg
or
mov
adc
and
mov
inc
ret
ja
movl
pusha
pop
xor
inc
and
ds
jle
and
fs
jne
aas
cs
push
hlt
and
xchg
mov
mov
enter
inc
loope
in
test
pushl
jecxz
lods
sub
out
gs
add
ret
xchg
je
sub
jmp
mov
call
xor
push
mov
movsb
push
pop
fbld
call
mov
fisubrl
inc
int
mov
movsl
fwait
xchg
jge
adc
push
add
xchg
push
pop
mov
test
test
and
call
out
inc
fmul
jmp
and
fsub
mov
fimull
iret
ret
iret
ds
mov
nop
jae
cmp
movsl
nop
fsub
lcall
xchg
idivb
sub
ret
aas
mov
rorl
adc
jle
jo
fildl
mov
in
inc
stos
test
lea
lods
inc
fldenv
shlb
adc
adc
fsub
push
in
add
call
jno
aas
mov
mov
and
mov
rorb
dec
fmuls
adc
mov
inc
sub
loopne
and
in
jne
test
leave
or
fcoml
inc
int3
adc
ds
jmp
or
int3
movsl
ljmp
pop
in
xchg
adc
icebp
adc
jmp
jne
inc
add
and
jl
ljmp
lahf
aam
fs
sbb
jmp
ret
rcrl
mov
ficomps
stc
add
loop
adc
add
sbb
in
mov
or
shll
addl
mov
repz
ud0
addb
ljmp
adc
mov
xchg
in
ljmp
jns
mov
push
mov
pop
orl
xchg
enter
mov
or
lea
pop
add
test
jne
leave
push
repnz
data16
or
ret
sti
or
adc
sub
push
pusha
loope
ret
and
in
leave
jge
inc
sbb
jo
test
inc
jmp
add
lock
loop
std
pusha
mov
adc
clc
data16
push
mov
mov
and
cli
lret
push
adc
push
fsubl
cli
mov
loop
jno
and
inc
call
add
add
cwtl
push
add
adc
cmp
push
lret
add
adc
mov
sbb
pop
dec
adc
stos
sub
and
sbb
pop
jecxz
and
lret
xor
jmp
mov
shlb
xor
shrb
loopne
ret
jno
mov
sbb
mov
inc
cwtl
xchg
in
mov
in
imul
and
and
push
xlat
lock
jb
xchg
mov
mov
push
or
and
cs
ds
xchg
leave
mov
call
adc
xchg
cmp
pop
jmp
pop
sbb
cmp
mov
imul
sub
mov
push
movsl
sbb
iret
neg
dec
les
loop
xor
outsl
jmp
pop
ja
pusha
push
push
mov
fldl
mov
mov
movsb
aaa
dec
std
mov
push
test
scas
loopne
iret
push
cmpsb
jo
test
cld
clc
push
xchg
push
xchg
clc
mov
xchg
dec
sub
jmp
aad
dec
dec
test
push
and
adc
out
test
outsb
test
sub
fiaddl
sub
dec
fdiv
sbb
jg
adc
pop
in
daa
loop
adc
adc
loope
shlb
iret
test
xor
or
repz
fiadds
sarb
inc
mov
mov
jo
sub
aaa
xchg
adc
sub
mov
or
push
jae
or
jecxz
push
inc
inc
mov
dec
pop
push
inc
loop
adc
mov
aad
fadds
or
push
jmp
imul
adc
lret
addb
jne
data16
push
dec
enter
scas
sub
push
and
lods
cmp
sub
ja
cmp
mov
or
fisttps
mov
lret
pop
mov
mov
pop
jg
clc
and
inc
lock
loope
fiadds
imul
sub
push
or
js
xor
mov
out
jns
mov
sbb
inc
pop
out
pop
mov
fsubs
bound
sub
cltd
es
movsb
jbe
xor
pop
push
xor
add
nop
adc
add
stos
fistpll
cmpsb
add
movsl
push
adc
or
mov
fimuls
lods
es
pop
add
dec
cltd
cld
popf
pop
es
imul
ficoms
out
lahf
mov
ret
test
or
and
into
mov
or
sbbl
cmp
int3
cmp
push
mov
push
sub
les
adc
ret
popa
cld
lock
ljmp
sub
add
ja
jmp
in
or
mov
hlt
orl
dec
loopne
mov
orb
push
inc
adc
xchg
push
xor
adc
or
adc
fnsetpm(287
xchg
inc
jecxz
and
inc
hlt
sahf
jecxz
shrb
xor
add
xor
or
adc
push
cmp
pop
data16
dec
cmp
jo
ja
sbb
nop
mov
push
xorb
mov
adc
int3
dec
push
or
movsb
das
mov
imul
cmc
dec
xorb
mov
loop
shr
add
adc
xor
jne
inc
pushf
lcall
dec
pop
mov
jle
mov
in
popa
add
nop
adc
test
push
dec
call
jmp
int3
clc
lahf
je
imul
pusha
add
inc
lds
sbb
and
pop
jmp
adc
inc
sti
dec
in
push
or
xchg
sbb
xchg
xor
mov
mov
sbb
jp
push
ds
cmp
xor
les
loop
cmp
lcall
mov
orb
sar
mov
inc
dec
call
inc
lea
lahf
adc
sbb
mov
jmp
addr16
daa
or
je
add
mov
incl
or
adc
je
rorb
xor
mov
and
or
leave
push
mov
cmc
bound
push
dec
call
sbb
sub
jmp
and
jg
jp
mov
mov
xchg
dec
lret
icebp
pushf
push
aas
data16
or
shr
jne
inc
movzwl
push
mov
add
filds
jl
push
inc
rolb
jge
lret
push
sbbb
pusha
sbb
push
jne
inc
add
cmp
jne
iret
ljmp
flds
inc
clc
mov
stos
mov
mov
scas
and
adc
jb
add
mov
shl
add
inc
xchg
add
cmp
jne
lahf
or
dec
or
call
ret
inc
test
xlat
enter
jle
and
ss
jge
or
push
sub
mov
pop
jae
push
lcall
jmp
push
push
pushl
and
cmpsl
mov
fcoml
and
mov
push
or
je
aad
orb
sub
dec
ds
xchg
and
jnp
or
jb
aas
and
sti
inc
inc
adc
loopne
push
scas
pop
mov
mov
adcb
jmp
inc
push
pop
mov
enter
jne
mov
lret
jge
in
or
mov
std
pop
sub
nop
testl
jne
and
cld
lcallw
pop
je
xchg
scas
mov
or
add
add
jne
cmp
data16
inc
jmp
mov
lret
outsl
test
sbb
jns
fcmovbe
loop
cmp
movswl
es
aaa
adc
sbb
sbb
adc
shrl
addr16
sti
push
push
and
sub
scas
inc
inc
mov
pop
gs
test
fucom
and
in
cmp
hlt
mov
hlt
repnz
fmuls
cmp
xor
xlat
or
lods
je
rorl
mov
inc
lcall
push
jae
jg
or
ds
add
push
enter
mov
pop
dec
gs
add
stc
xchg
and
or
xor
out
popa
add
mov
les
inc
mov
arpl
pop
push
push
push
pop
pusha
pusha
rorb
shlb
and
or
or
ds
add
add
xchg
pop
lret
push
mov
lahf
xor
cs
mov
xchg
jns
jge
fmuls
inc
dec
add
inc
decl
mov
ffreep
hlt
sub
add
test
jb
cmp
lret
and
das
or
push
pushl
cmpsl
or
insb
mov
mov
pop
mov
mov
sbb
leave
sti
sub
pop
pop
testl
mov
mov
jns
inc
cmp
std
inc
mov
call
sbb
add
addb
pushf
adc
mov
cmc
ds
movsl
and
cmp
out
push
xchg
clc
xor
sbb
push
sub
lock
and
xor
inc
pop
lds
repnz
xchg
orb
xchg
mov
mov
rep
stos
or
pop
and
rorl
sub
xor
lock
movsl
cli
jno
pop
icebp
pop
and
repnz
pop
ja
ss
sar
adc
adcl
inc
data16
xor
je
push
andl
mov
cmp
repnz
mov
mov
repnz
pop
inc
lret
jns
dec
push
sub
pop
insb
imul
mov
push
mov
lret
icebp
stos
pop
pop
jmp
scas
and
mov
inc
ja
and
and
jmp
or
inc
sbb
mov
sub
ret
into
outsl
gs
imul
or
outsl
icebp
pop
nop
dec
sti
xorb
jne
push
popf
in
lahf
popa
push
ret
cmp
lret
iret
fistl
hlt
mov
jae
xor
or
jno
xchg
fcomp
and
andb
xchg
mov
dec
js
xchg
cmp
xchg
xor
call
adc
repz
cmc
push
mov
js,pn
hlt
cmpsl
push
adc
sub
inc
push
repnz
mov
mov
lods
ja
xor
aas
sub
ret
lea
push
out
lret
jns
mov
and
cmc
aaa
push
push
pop
or
scas
and
imul
add
fcom
push
add
aad
jecxz
icebp
dec
out
inc
and
jne
arpl
jae
les
fs
imul
insb
cmpsb
das
cmp
ljmp
ret
stos
push
les
add
shl
fimull
mov
push
mov
mov
xlat
mov
sub
out
jb
push
push
sbb
ljmp
ret
add
mov
test
add
adc
lods
push
mov
jl
mov
cmp
jle
jns
mov
mov
adc
stos
out
mov
test
ret
call
xor
repz
mov
jecxz
jmp
adc
loopne
inc
jmp
or
test
pop
or
test
xor
jne
lea
add
fs
dec
xor
lock
sub
adcl
enter
loopne
xorb
call
das
cmp
shll
jmp
cmp
jne
ja
loope
dec
xchg
fistl
sbb
xchg
or
xor
aas
ret
jne
mov
sbb
sbb
call
fsubrl
sub
popf
add
add
stc
dec
pop
je
jne
dec
mov
xor
sarl
sub
add
dec
outsl
nop
rolb
pcmpeqw
and
xchg
insb
add
push
xchg
das
stc
or
push
jne
mov
cld
daa
lea
jo
dec
inc
fidivs
fsubp
jno
and
orl
pop
test
clc
stos
fldl
cmpsl
mov
cmpl
xchg
inc
jbe
sub
enter
pop
test
fnstsw
and
xchg
js
cli
lahf
mov
mov
cli
xor
jns
fistps
fbstp
jp
movsb
fistpll
jnp
out
dec
fistpll
pop
mov
jl
mov
daa
xor
jl
dec
pop
adc
clc
outsl
xchg
mov
outsl
lea
jle
xchg
xchg
inc
adc
mov
xchg
xchg
adc
mov
popl
pop
or
sbb
cmp
sub
popf
add
or
imul
pop
cmpl
add
lcall
cmp
cmpsl
dec
into
cmp
add
push
aaa
add
test
arpl
cmp
or
push
or
add
inc
ret
and
dec
fbstp
add
dec
jne
jne
js
lds
cmp
das
dec
test
or
xchg
rorl
fwait
cs
adc
stos
int3
bound
sbb
repnz
xorb
jl
mov
jne
outsb
aaa
inc
cmp
ret
xor
mov
js
nop
adc
mov
or
inc
hlt
xchg
sbb
add
sub
cmp
push
and
jne
push
sbb
cmp
cmp
mov
mov
and
jns
je
insl
add
sbb
fs
jb
jae
add
js
jo
out
mov
inc
or
xchg
or
adc
es
xor
call
test
cmp
repnz
scas
or
aam
adc
inc
ret
xor
lock
test
xlat
push
or
cmpsl
arpl
call
lock
movsl
aam
inc
clc
sub
out
into
sub
adc
mov
mov
fists
mov
loopne
and
pcmpeqw
push
jmp
into
hlt
or
pop
sbb
xor
adc
jae
add
push
and
xchg
mov
adc
inc
and
add
jne
mov
movsl
xor
cld
sbb
jae
xchg
repnz
in
adc
pop
rorl
or
mov
mov
push
clc
sbbl
sbb
ret
ljmp
fs
lods
sub
cmp
or
ja
jne
mov
sub
sbb
dec
je
add
dec
fs
sbb
adc
movsl
pop
jae
ljmp
jnp
adc
lret
jbe
dec
add
push
ficomps
fiadds
or
arpl
test
mov
mov
mov
leave
dec
mov
or
and
or
or
rclb
xchg
je
hlt
test
subb
dec
ret
scas
pop
and
push
nop
add
cli
dec
dec
push
daa
pop
and
out
xchg
and
dec
in
and
push
push
inc
or
xchg
dec
fs
adc
clc
adc
xchg
xchg
icebp
sbb
mov
and
mov
and
add
lds
leave
ja
dec
pop
jb
shll
fmull
and
aas
mov
and
mov
add
ret
adc
inc
add
loop
jb
fwait
cld
or
inc
mov
and
sbb
js
adc
xor
or
sub
or
test
sbb
jb
pop
sub
or
pop
shrl
xchg
lahf
add
gs
add
or
adc
inc
cmp
push
ret
xchg
js
xor
inc
push
mov
test
rcll
and
je
roll
cmp
aaa
or
and
sbb
adc
inc
ljmp
adc
sbb
sub
xor
inc
xchg
dec
sub
cltd
pop
adc
or
jle
mov
and
adc
and
mov
adc
and
adc
sbb
and
adc
or
and
dec
dec
xchg
push
sub
xchg
and
test
mov
dec
mov
inc
loope
nop
inc
push
add
out
mov
adc
and
push
or
inc
adc
mov
adc
and
dec
xor
inc
dec
push
mov
pop
and
dec
insl
xchg
je
jnp
orb
sahf
dec
movsl
xchg
lods
and
enter
dec
fisttpll
or
sub
or
sub
or
jg
and
sub
dec
aaa
mov
sbb
sbb
outsb
xchg
or
xchg
mov
dec
into
xchg
fisubrl
out
xchg
repnz
decb
or
sub
inc
adc
push
dec
push
xchg
pop
and
insb
jae
jp
andl
and
mov
mov
test
fs
fmull
xchg
ljmp
push
sbb
sbb
xchg
sub
xor
mov
dec
and
dec
fs
imul
inc
jle
mov
adc
mov
jecxz
cmp
inc
mov
int3
sub
shll
pop
ficoml
call
xchg
sub
xor
add
or
jmp
or
mov
and
add
fisubs
jg
fisubs
pop
mov
mov
dec
jp
lahf
in
sbb
cltd
xor
pop
dec
xor
mov
sbb
std
dec
or
daa
popf
stos
sub
sub
sub
cmpsl
pop
stc
add
test
into
sub
loop
dec
push
mov
pushf
shl
add
cmp
in
add
je
fadd
nop
rcll
xchg
xchg
cmp
fs
orb
mov
mov
mov
jg
je
jae
jns
ds
int
nop
push
inc
or
jmp
and
inc
addl
sub
adc
and
dec
sub
push
sbb
push
dec
or
sti
add
shl
cmp
cli
xor
or
aaa
jecxz
sub
shlb
popf
gs
test
sbb
adc
dec
scas
sub
leave
shrl
fmul
mov
cmpb
scas
fildl
cmp
inc
push
xorb
inc
inc
dec
aaa
push
or
jae
mov
mov
add
hlt
xor
popf
bound
inc
mov
push
gs
mov
mov
pop
sti
lock
shlb
addr16
jbe
xor
sbb
je
insb
inc
jo
sahf
outsb
imul
cmp
cmp
mov
das
ret
jne
cmpsb
ret
xor
repz
imul
jmp
jecxz
lret
aas
mov
iret
mov
sbb
in
test
push
rol
loopne
test
addb
jns,pt
ret
and
cmp
cmp
lock
cmpsb
inc
adc
or
sub
cmpsl
inc
test
mov
test
or
mov
sub
lds
inc
add
push
and
mov
test
push
cmp
pop
adc
adc
pcmpeqw
das
adc
jg
xchg
mov
pop
or
rcr
out
les
adc
loope
sub
inc
test
push
cmp
cli
or
ds
cmp
cltd
sub
fildl
ret
cmpsb
rolb
js
data16
popf
inc
dec
test
aas
shrl
inc
adc
cmpb
ds
mov
pop
and
or
or
push
and
or
inc
adc
cmp
and
adc
jae
inc
adc
bound
adc
outsb
repnz
cmp
outsb
repnz
cmp
outsb
repnz
cmp
ret
sbb
mov
push
cld
ret
jp
push
inc
push
add
pop
adc
and
sub
nop
or
push
cli
adc
pop
cmp
hlt
and
push
jo
lods
pop
cltd
and
sahf
push
cmp
daa
lds
daa
int3
cmpb
hlt
cmp
inc
cmpsl
jns
jo
and
and
les
and
out
pop
sbb
lods
pop
sbb
mov
pusha
cmp
mov
xchg
dec
adc
jne
lods
adc
mov
bound
test
stc
enter
sub
xchg
and
inc
or
adc
or
stos
or
pop
push
or
cld
dec
clc
test
mov
lcall
add
das
cmp
or
in
xchg
imul
mov
xchg
or
or
testl
ss
push
mov
pusha
mov
popa
xchg
push
sub
notl
pop
pop
pop
mov
or
out
aaa
and
loopne
movsb
std
cmp
stc
aaa
dec
je
add
call
and
les
cmp
dec
mov
jb
sbb
aam
in
repnz
push
sub
mov
xchg
xor
xor
push
jge
or
int3
in
pop
push
xchg
hlt
cmp
cmp
or
adc
cmpsb
pop
sub
mov
pop
aad
jg
or
mov
hlt
jbe
xchg
mov
xchg
mov
stos
lret
mov
mov
nop
and
je
push
scas
pop
scas
stos
mov
sub
enter
add
repnz
push
lock
push
jp
push
je
mov
stos
outsb
test
adc
xchg
arpl
add
adc
push
loop
push
mov
add
addr16
mov
or
fmuls
mov
inc
and
popa
and
add
pop
add
std
cli
cmp
adc
loop,pn
sahf
push
inc
xor
fistl
mov
jns
dec
push
sub
call
push
lret
jns
or
sahf
push
push
lret
sub
movsl
sbb
push
jno
dec
and
or
push
loop
sub
jns
pop
pop
jmp
scas
and
cmp
or
pop
lcall
in
dec
dec
shrl
pushf
mov
jnp
cmp
test
rcr
push
adc
cmpsl
shl
es
mov
imul
mov
mov
and
movsb
es
dec
fisttps
lea
movsw
and
cmp
fsubrs
rol
lds
adc
xchg
inc
dec
aas
push
pop
mov
jmp
pushf
pop
inc
or
inc
inc
dec
sbb
fnstcw
imul
xchg
lret
inc
por
mull
inc
lret
inc
and
mov
les
jle
pop
cwtl
mov
cmp
jae
movsb
xor
adc
add
sub
cmpsl
and
cmp
sbb
pop
mov
pmaxsw
inc
faddp
mov
push
fldcw
add
inc
jne
push
cmp
cmpsb
jp
mov
fstpl
inc
mov
dec
js
sbb
push
inc
pop
cmp
inc
repz
xchg
or
and
add
adc
cs
sbb
xor
jne
sub
cs
out
xchg
mov
andl
or
mov
movb
mov
rcrb
xchg
jnp
scas
fbld
or
leave
xor
jecxz
mov
int
in
cmp
rolb
xor
outsb
sbb
rorb
jns
cwtl
and
push
lea
add
push
or
dec
sbb
dec
sub
pusha
cmp
sete
push
js
adc
hlt
jmp
fisubrs
cltd
mov
push
mov
or
adc
push
sub
out
mov
adc
inc
das
fisttpll
add
mov
mov
push
adc
or
or
nop
cvtdq2ps
iret
mov
das
scas
mov
mov
jnp
icebp
mov
xchg
dec
sti
imul
inc
adc
pxor
and
stos
jne
inc
data16
xchg
or
and
je
sub
mov
arpl
nop
push
inc
dec
push
pop
inc
jne
and
je
jno
sahf
push
sti
aaa
pop
or
jae
mov
sbb
fisubl
dec
sbb
fistpl
dec
leave
cld
data16
jne
imul
fmuls
in
or
jmp
sub
and
xchg
mov
xchg
and
adc
adc
sbb
sbb
mov
add
add
mov
jl
or
sub
fwait
sub
lret
dec
cmpb
add
mov
mov
mov
call
loopne
ja
out
sahf
cmpb
jbe
push
jne
call
add
inc
or
jnp
out
mov
addl
push
sbb
inc
mov
int3
cmp
xchg
adc
mov
inc
sahf
pop
fs
scas
xor
fsts
mov
inc
sarl
sbb
sub
les
mov
ret
inc
push
pop
pop
mov
mov
mov
sti
aas
cli
xor
mov
popa
push
mov
mov
dec
push
dec
and
or
pop
ret
and
aas
aas
inc
dec
push
call
insl
push
repz
testb
sub
cmpsl
push
lret
fsubr
dec
and
dec
sub
xor
ljmp
and
push
pop
mov
enter
dec
inc
dec
cmp
push
cmpsl
push
xchg
push
pop
rolb
and
dec
dec
sbb
and
es
sub
sub
outsl
adc
xor
jmp
mov
sbb
add
and
popf
push
push
scas
ficomps
cs
inc
leave
xorb
or
xchg
xchg
nop
mov
mov
adc
sti
and
jne
out
fisubrs
outsb
or
fldl
or
pop
or
sub
push
jnp
gs
clc
clc
fwait
nop
inc
mov
aaa
adc
daa
push
ret
push
jns
adc
dec
inc
das
mov
inc
cwtl
xor
iret
and
loop
in
and
leavew
xor
jnp
push
sbb
pop
dec
cmp
test
repnz
js
aad
imulb
je
int
cmp
cmp
adc
xchg
xor
adc
adc
add
pop
push
repnz
rorb
call
call
and
movsl
or
add
call
or
stos
and
xchg
lahf
push
lock
cmp
in
or
dec
jae
jl
adc
ljmp
adc
mov
lods
js
sti
xor
push
sub
push
xchg
push
ja
push
mov
lret
dec
mov
sub
out
stc
mov
dec
out
mov
adc
movsb
out
addb
pop
inc
imul
es
and
mov
ja
test
fs
movsb
out
jmp
imul
jmp
add
pop
add
xor
icebp
pop
jmp
push
je
pop
movsb
xor
or
negl
xor
mov
popf
or
ja
xor
dec
or
add
adc
inc
leave
mov
out
call
sub
or
and
xorb
mov
or
pop
punpckhbw
cwtl
cmc
push
mov
popf
lret
xor
push
sbb
sbb
or
pushf
fisttps
inc
jecxz
and
rclb
je
sub
inc
push
or
pop
push
sub
test
mov
divl
push
mov
stos
push
xorl
fwait
cmp
je
add
nop
adc
call
sahf
scas
push
mov
jp
push
inc
or
or
popf
aam
mov
push
pop
mov
adc
xor
stos
shrb
inc
sti
fstl
pusha
mov
sbb
pop
inc
fildll
sub
hlt
or
mov
or
or
add
in
sub
popf
rcll
cmp
leave
sbb
xchg
sbb
push
andl
add
mov
and
movsb
das
inc
add
sub
out
xor
mov
add
or
sub
fs
adc
add
and
test
in
sbb
mov
and
ret
movsl
or
sti
lret
pop
or
pop
pop
and
aaa
pop
les
xchg
and
es
gs
sub
cltd
bound
xor
dec
stos
adc
cmp
cwtl
adc
push
adc
jae
pop
dec
push
insl
sub
push
mov
xchg
add
ror
xchg
mov
cmp
nop
dec
add
sbb
jne
mov
mov
scas
sub
adcl
lods
mov
mov
xor
sub
iret
sub
mov
cmp
xor
mov
aaa
jo
les
push
or
xchg
aaa
imul
mov
sti
pop
fs
aas
sub
inc
push
movsl
mov
cmp
int
aaa
mov
inc
test
push
lods
lea
or
push
inc
lods
xchg
push
adc
pop
pop
or
mov
sub
add
push
xchg
mov
add
push
adc
in
das
call
add
sub
pop
and
push
test
mov
push
gs
pop
mov
les
mov
xor
inc
imul
pushf
cmp
sahf
sbb
and
inc
add
mov
mov
sbb
scas
sbb
sbb
xchg
inc
aaa
jnp
adc
sub
inc
xor
jp
call
adc
adc
sub
inc
data16
call
push
inc
cltd
and
jae
sub
mov
sub
inc
push
push
loope
inc
jle
jl
test
ret
imul
orl
push
dec
inc
ja
lahf
jb
cld
jo
popa
jae
ja
push
fs
out
out
es
js
ja
dec
bnd
sbb
push
push
dec
dec
dec
adc
dec
pushf
and
inc
push
lds
mov
xlat
or
inc
movl
inc
add
pop
adc
sbb
and
lret
add
adc
dec
jg
fs
pop
push
sbb
sbb
pop
and
sub
sub
int3
jnp
movl
dec
fs
xor
add
sub
mov
push
sbb
or
mov
pop
push
mov
push
nop
mov
push
inc
enter
popf
or
loopne
shll
or
jmp
or
mov
fwait
lcall
push
in
and
lahf
rclb
push
push
fs
and
jp
dec
cmp
cmp
fs
mov
cmpsl
fistpll
aad
mov
sahf
cs
and
add
xor
pop
cld
push
jo
sbb
dec
push
cmp
inc
ja
mov
loope
pop
or
pop
sbb
push
lock
mov
mov
int
sub
fildll
mov
cmc
push
test
push
xchg
sub
lcall
dec
push
sub
popa
call
scas
sub
and
jns
pop
sub
jmp
dec
and
add
sub
jns
pop
pop
jmp
scas
and
into
xor
fadds
aas
lcall
or
pop
inc
sbb
repnz
and
bound
lret
xchg
scas
inc
ljmp
das
or
dec
add
dec
lock
inc
push
repnz
mov
adc
xor
lock
in
sub
xchg
dec
lret
jns
pop
sub
jmp
and
cmc
sahf
push
sub
xor
bound
inc
aaa
adc
and
lock
mov
mov
rclb
cmp
add
ja
clc
push
dec
outsb
arpl
loop
ljmp
rcll
aas
cmp
inc
xchg
mov
xor
mov
cmp
test
inc
cmp
dec
test
mov
inc
sub
xor
or
push
and
pop
outsl
test
out
xor
adc
mov
and
push
mov
or
jne
fcoms
or
sub
xor
popf
in
pop
imul
cmp
je
mov
mov
xchg
sub
cmpsl
rol
push
xchg
call
nop
inc
mov
sub
rorb
add
shr
inc
loop
inc
sarb
push
pop
mov
push
add
dec
or
add
inc
ret
and
stos
inc
mul
sub
sub
or
mov
sbb
mov
xchg
lds
arpl
jecxz
out
sub
pop
lods
cmp
movsl
or
ret
push
mov
jmp
inc
stos
mov
sub
cmc
pop
mov
mov
cli
rorb
pop
add
mov
add
push
cwtl
lea
cmpsb
shlb
pop
sub
cmp
cmp
add
push
dec
in
jmp
add
adc
les
enter
scas
xor
and
movb
push
pop
xor
or
je
pop
push
fcoml
incl
and
roll
jne
push
arpl
icebp
mov
test
inc
push
dec
sub
mov
sub
hlt
mov
shll
js
xor
xchg
and
inc
adc
das
and
push
sbb
add
add
sub
cmp
cmp
in
lods
inc
add
inc
pop
sub
pop
dec
or
mov
enter
add
scas
mov
ret
fucom
pop
test
inc
dec
push
xor
adc
jecxz
jo
and
dec
mov
push
inc
or
xor
jmp
xchg
mov
pop
js
repnz
jns
add
shll
pop
fs
int3
adc
repnz
test
cmp
lods
xor
stos
aam
aaa
mov
xor
mov
shlb
inc
add
mov
lock
xor
mov
data16
adc
cmp
xchg
rcrl
jmp
cmp
clc
xchg
movsb
and
gs
pop
xchg
in
jp
and
stos
inc
pop
sbb
mov
and
adc
lret
inc
dec
dec
or
jecxz
push
or
pop
or
mov
xchg
ret
inc
or
mov
clc
mov
xor
data16
sbb
dec
rcl
xchg
mov
cs
jae
sahf
adc
rcl
ja
add
sub
sbb
push
push
inc
leave
jne
outsb
xor
lcall
xchg
ds
imul
xchg
insb
gs
cld
stc
xchg
aas
adc
divb
in
jo
push
ljmp
and
cltd
push
or
xor
outsb
icebp
push
mov
inc
push
inc
mov
xor
and
mov
leave
dec
push
mov
sub
cmp
push
or
data16
adc
jb
test
mov
adc
stc
inc
lcall
shll
sub
aas
repz
mull
popa
or
mov
push
fs
mov
lods
je
jl
popa
add
mov
js
push
daa
fcmovu
inc
pop
add
add
xor
into
xor
std
mov
push
push
push
bound
mov
cs
push
les
or
inc
adc
loopne
push
cmp
ret
movl
cwtl
mov
xor
mov
adc
and
cmp
xorb
je
lahf
xor
push
lods
ss
inc
test
inc
adc
inc
add
push
int
imul
cmp
call
cmpsb
int3
sbb
pop
movsb
addl
adc
push
icebp
je
dec
and
call
aaa
pop
xor
pop
mov
in
mov
cmp
jno
lret
mov
or
or
fcoml
shlb
sbb
jae
les
and
sub
sub
jo
mov
call
test
xor
xor
or
cld
std
adc
push
push
and
cmp
cmp
clc
xor
sbb
clc
and
inc
mov
fs
cmp
xchg
and
enter
or
xchg
and
nop
shl
in
sbb
pop
mov
and
add
shlb
and
pusha
and
mov
roll
fs
loopne
and
cmp
xchg
and
enter
or
xchg
and
nop
loop
sbb
aam
xlat
aam
mov
mov
rolb
fs
xor
adc
enter
enter
and
nop
mov
xor
sbb
les
test
lods
xchg
and
or
leave
iret
xor
subb
pop
push
cmp
pop
mov
cmpsl
cs
cli
loopne
pushf
mov
and
cmc
sbb
xchg
sbb
push
mov
mov
pop
cmpb
pop
adc
xchg
test
xchg
push
sbb
xchg
js
pop
lret
pop
or
xor
fildl
xor
xchg
stos
std
sub
ficoml
cltd
add
and
push
ds
adc
xchg
lods
pop
pop
in
stos
adc
push
sub
fistpl
and
mov
xchg
les
push
test
xchg
movsb
lock
cmp
adc
out
mov
adc
add
incb
test
mov
sub
mov
sbb
in
mov
inc
mov
nop
lcall
and
inc
mov
cwtl
xchg
pushf
xchg
xor
push
lret
jno
movd
pop
dec
add
sbb
mov
dec
subb
pop
test
cmpb
fsubs
sub
mov
dec
ljmp
enterw
sub
movzwl
ret
inc
push
inc
insb
and
call
js
lahf
push
das
sub
out
mov
lea
aam
lock
popa
sbb
in
mov
xchg
xchg
enter
test
in
out
jno
pcmpgtb
cwtl
cmp
xchg
les
jb
dec
cmp
pop
xchg
xchg
jns
add
cmp
mov
xchg
mov
xor
push
addr16
or
adc
push
cmpsl
imul
sbb
inc
lret
mov
pop
data16
shlb
mov
push
outsb
add
dec
or
mov
mov
movsb
cmp
jne
push
add
je
mov
dec
loopne
es
sub
inc
mov
inc
inc
mov
pop
or
ficompl
push
pop
and
cmp
cmp
in
bound
xor
enter
push
and
or
sub
inc
sub
loop
pop
xchg
or
and
pop
or
test
or
add
sbb
movsl
pop
push
sbb
adc
and
adc
fs
stos
cmp
fucomi
fs
sub
or
testb
inc
je
mov
mov
mov
adc
inc
or
fwait
pop
adc
push
stos
add
sub
pop
fstps
je
ss
into
enter
or
and
jbe
or
mov
pop
mov
jnp
ljmp
jle
leave
jno
inc
out
sub
xchg
jmp
add
mov
insb
adc
test
mov
inc
xor
leave
mov
cmp
pop
mov
add
or
jne
pop
jbe
dec
cs
pop
imul
inc
iret
mov
mov
inc
push
imul
dec
outsl
fs
pop
test
sarl
dec
and
lock
mov
add
addr16
imul
adc
sbb
inc
outsl
jne
movsl
mov
sub
test
push
jo
arpl
callw
fwait
out
push
push
xchg
and
or
cmpsl
push
mov
push
inc
dec
push
pop
orb
inc
cmp
dec
inc
dec
cmp
in
sub
adc
xchg
adc
adc
hlt
dec
adc
imul
mov
scas
stos
data16
cwtl
jmp
push
pop
inc
inc
dec
sbb
dec
push
xor
xchg
out
ret
dec
inc
xor
imul
push
rcrb
divl
repnz
jp
and
mov
jmp
pop
fisttpll
lods
mov
dec
mov
jne
pop
hlt
insb
in
push
mov
and
and
out
lret
and
js
jnp
push
and
mov
jle,pt
mov
inc
imul
cmpsl
inc
movsl
ret
into
push
lret
pop
dec
push
cli
adc
fs
iret
pop
push
in
sub
mov
insl
xor
fsubs
stos
cmp
adc
dec
push
dec
andb
out
adc
gs
adcb
sub
stos
push
inc
fs
icebp
dec
arpl
sub
adc
mov
push
and
dec
or
lods
sbb
add
js
sub
sub
cltd
orb
pop
push
mov
sub
push
sub
mov
xchg
adc
sub
adc
and
cltd
fsubs
xor
xor
cmp
notb
inc
test
pop
sub
xor
loop
jnp
xor
push
pop
js
inc
test
xchg
adc
cltd
push
push
jg
loopne
adc
pusha
mov
mov
imul
sbb
sbb
daa
jne
nop
add
popf
leave
mov
loopne
push
jne
cld
adc
mov
js
dec
loopne
xor
cmp
jge
fcoms
add
mov
cmp
loopne
jnp
or
pop
sbbl
sahf
push
subl
mov
lea
fstpl
cmc
outsb
dec
jb
cmp
std
cmpsb
movsl
arpl
adc
cmpsb
sbb
add
mov
or
and
mov
dec
dec
or
pop
push
inc
mov
and
ffree
jnp
mov
or
fcom
je
test
sarb
data16
shr
adc
push
xor
test
and
xor
fisttpl
mov
push
sub
add
je
mov
roll
jne
dec
mov
pop
dec
adcb
cmpsb
jmp
adc
mov
inc
jne
out
gs
adc
push
push
sbb
mov
subl
ja
ja
pop
push
icebp
test
jns
or
ret
je
mov
pop
sti
sub
pop
or
jmp
scas
shll
mov
test
adc
mov
bound
sbb
insl
sub
repnz
xor
popf
push
xor
and
pop
cltd
xchg
arpl
cmp
cltd
xchg
and
mov
dec
cmp
scas
sbb
push
sub
mov
jle
mov
inc
push
adc
cmpsb
sbb
and
adc
shll
int3
push
cmp
pushf
push
xchg
lds
or
mov
mov
push
sbb
mov
inc
das
push
add
inc
adc
out
inc
ret
jb
ljmp
jne
inc
sub
jl
push
out
and
mov
push
sbbb
ret
nop
jl
inc
jmp
adc
mov
insb
sbb
mov
sbb
jmp
push
lods
lock
hlt
pop
rcl
scas
gs
add
or
pop
mov
repnz
add
mov
jns
aam
scas
into
xor
adc
loop
xor
push
bound
sub
mov
adc
or
aam
jno
sub
push
mov
leave
pop
push
gs
mov
pusha
adc
call
adc
cmpsb
push
cmp
and
jmp
and
add
insl
mov
mov
dec
xor
jmp
outsb
js
imul
sub
cmp
or
iret
adc
adc
call
aaa
clc
pop
movsl
xor
daa
push
and
cli
xor
ret
call
dec
cmp
movsl
or
lods
sbb
aad
inc
ret
fs
sub
hlt
mov
lret
push
or
clc
pop
mov
or
push
stc
xchg
add
cltd
xor
adc
mov
xchg
sbb
cmp
xlat
push
fistpll
push
lods
adc
rorl
popf
add
sub
xchg
pushf
sbb
and
add
xorb
dec
lret
jmp
mov
dec
add
cmp
xchg
sbb
and
xchg
mov
push
mov
jne
or
je
push
xlat
sbb
adc
pop
pop
mov
pop
inc
and
mov
fs
or
push
push
adc
sub
lock
xor
cmp
sbb
and
test
jecxz
aaa
jns
or
pop
lods
jl
aaa
mov
call
les
adc
xchg
cmp
xchg
or
test
and
icebp
mov
inc
clc
int3
outsl
call
rcrb
ljmp
sub
ja
adc
add
dec
pop
into
mov
sbb
test
xchg
push
push
or
mov
scas
mov
mov
pop
pop
sbb
push
loop
stos
mov
push
push
int3
test
sbb
pop
call
push
inc
adc
push
in
and
enter
in
cmp
pop
call
mov
jmp
push
lods
sub
mov
adc
test
xor
and
add
push
or
sub
inc
mov
mov
xlat
xchg
int3
mov
dec
sbb
adc
out
dec
in
push
lret
inc
mov
push
pop
movsl
sub
test
ffree
sbb
call
inc
xchg
push
mov
aaa
roll
popf
pushf
and
adc
xor
mov
mov
add
aad
xchg
xchg
or
jbe
push
push
int3
sub
mov
movsl
ret
rolb
cmp
stos
movsl
cmp
add
push
push
popa
cmp
lea
sub
push
test
and
imul
pop
dec
or
call
push
icebp
mov
mov
fbld
sbb
movsb
mov
pop
mov
rol
cwtl
stos
or
movb
call
bound
and
push
and
imul
nop
cs
cmp
popf
push
push
push
pop
sub
inc
push
sub
jb
xchg
es
dec
cmp
mov
push
bound
mov
push
pushf
push
push
mov
mov
loop
pop
and
sarl
adc
in
ret
pop
enter
cmc
push
mov
mov
movb
add
pop
add
pop
inc
insl
jmp
and
push
dec
mov
sbb
jl
lahf
movsb
sbb
cmc
inc
jne
dec
jmp
sbb
inc
add
xchg
clc
dec
xchg
or
push
add
lahf
out
jecxz
add
and
in
push
sub
ret
lret
mov
les
test
cmc
sbb
jnp
mov
pop
shl
pushf
sbb
mov
add
out
xchg
scas
test
or
add
pop
inc
cli
adc
sub
stc
push
sbb
and
add
arpl
in
mov
cmp
sbb
test
out
roll
mov
and
or
loope
out
jno
jle
andb
push
cmp
insb
mov
and
outsb
insl
das
notb
sbb
or
add
aam
je
pop
mov
out
pop
fsubrs
add
and
inc
mov
add
imul
and
inc
mov
and
cmpsb
jns
lods
sbb
out
push
mov
fcompl
push
lods
ja
aas
cmpb
add
les
pop
add
out
and
pop
clc
and
xchg
mov
iret
insl
inc
jbe
lods
mov
lea
in
sub
leave
add
push
sbb
jge
add
sahf
or
add
xorb
push
dec
pop
pop
pop
mov
and
pop
les
mov
add
cmp
pop
jle
push
add
inc
aam
cmp
jbe
hlt
int
xchg
icebp
mov
jb
repnz
rcr
ljmp
in
adcl
dec
je
stos
aaa
cmp
push
adc
cmpsb
test
inc
add
inc
xlat
or
add
xchg
ret
bound
jl
jg
add
mov
or
pop
add
push
xchg
fidivrl
mov
pop
jo
add
das
mov
pop
cmp
aaa
sbb
pop
fwait
jns
sub
mov
add
xchg
pop
inc
cltd
loopne
add
daa
jae
push
xchg
push
cmp
dec
fsubl
loope
cmp
xchg
or
test
add
ss
imul
movsl
icebp
adc
xor
idiv
adc
in
push
or
add
inc
mov
sub
add
push
ss
sub
fldl
or
popa
pop
inc
fcomp
mov
scas
je
das
mov
scas
loopne
in
jb
add
sarb
push
adc
add
add
mov
sbb
push
add
inc
int
add
bound
in
scas
jl
pop
inc
imul
jo
cmpb
sub
sub
dec
add
outsb
jno
ja
imul
push
pushf
movsb
movsl
push
add
sbb
mov
inc
ret
loope
jb
aas
icebp
filds
push
out
jmp
pushf
inc
inc
xor
add
adc
int
addl
and
arpl
sarb
notb
sahf
add
ja
sbb
mov
inc
hlt
mov
lds
mov
push
idiv
push
or
mov
jno
out
add
sub
test
je
test
xor
adc
imull
xchg
xor
pop
lods
js
add
out
cwtl
and
lock
add
lock
add
xchg
dec
xchg
insl
pop
or
repz
sbb
out
js
mov
clc
mov
pop
pop
xchg
scas
or
mov
jnp
popf
mov
imul
sub
and
push
jno
xchg
sbb
inc
testl
xchg
cltd
mov
dec
add
fadd
aaa
bound
mov
sub
inc
mov
mov
scas
out
pushf
mov
add
popf
cmpsl
jno
out
push
pop
push
xlat
inc
xchg
in
adc
adc
inc
roll
repnz
mov
xchg
push
cmp
mov
popf
mov
fsub
sub
lret
cmpl
pop
cmp
inc
out
xchg
dec
sub
sarl
out
test
push
mov
and
add
mov
jecxz
add
xchg
shlb
in
sub
pop
add
mov
or
bound
adc
cwtl
mov
add
mov
adc
sub
add
out
cmp
cli
dec
push
lea
lahf
scas
and
add
out
mov
lret
add
pop
negl
leave
scas
mov
lods
xor
add
xchg
add
and
cli
pusha
lret
rcll
fldt
cli
add
or
call
rol
subb
sbb
sbb
push
cltd
dec
fs
mov
xor
add
add
mov
add
mov
add
pushf
fdivrp
mov
sub
xchg
into
movsl
lea
dec
enter
mov
pop
shrl
push
add
dec
mov
pop
lret
jg
mull
incl
jo
pop
push
xchg
incb
cld
xchg
movsb
cmp
fwait
adcb
outsl
fildl
adc
cmp
xorl
cmp
adc
bound
adc
push
or
xor
loopne
and
and
jno
lds
dec
push
add
lods
movsb
popf
repz
insl
ret
push
xor
sub
fimull
enter
inc
xor
lahf
xor
incb
push
jne
aam
add
std
pop
inc
nop
test
add
pop
lds
mov
add
insl
cmp
add
mov
lcall
lea
jo
add
jecxz
add
pop
inc
push
push
lods
outsl
mov
ljmp
add
cmp
xchg
insl
push
cld
xor
add
repz
cli
inc
add
sbbb
push
jl
sbb
push
repz
add
lret
pusha
scas
pop
add
cs
and
jg
insb
xlat
outsb
cmp
or
push
movsl
and
adc
sub
push
lds
add
repz
cmp
dec
lods
adc
push
out
push
mov
outsb
aas
aam
fstpt
mov
ja
insl
push
pop
add
mov
add
mov
cmp
xor
mov
mov
add
push
mov
add
pop
mov
lock
add
test
cli
ljmp
test
sbb
pusha
fcom
lds
add
jo
mov
fs
sub
jp
inc
or
out
test
cmp
add
cmp
push
pop
and
cs
sub
mov
add
adc
xchg
jp
rorb
or
mulb
aad
mov
xlat
lds
push
add
pop
iret
add
fidivrs
add
jae
cli
inc
sbb
fsubs
add
filds
add
mov
and
push
add
pop
mov
movl
push
fcoml
pop
and
lcall
jg
fadd
dec
add
sti
clc
fildl
cwtd
mov
rcr
sahf
add
repnz
and
lret
xor
add
or
cmove
xchg
test
pop
add
xlat
loopne
lock
add
setbe
stos
fsubl
add
in
or
add
pop
test
ds
add
mov
ljmp
pop
cmp
mov
lret
outsb
dec
mov
movsb
jl
adc
jmp
js
sahf
roll
insl
dec
pop
fisttpll
push
add
jp
sub
loope
int
hlt
xor
out
and
arpl
mov
popl
cmp
std
pop
lret
dec
jnp
add
mov
adc
mov
mov
aas
addl
adc
aas
pop
inc
push
push
xor
add
lods
add
push
lret
cmp
push
stc
add
test
jl
lahf
cmc
cwtl
add
rcrb
add
or
lcall
fisubrs
filds
lock
mov
cmp
xor
mov
cld
movsb
jecxz
rcll
jg
mov
loope
adc
pop
insl
xor
lret
push
fcoml
mov
mov
hlt
ss
jb
stos
out
xchg
add
je
pop
add
or
push
test
mov
rolb
cmp
inc
outsl
in
sar
adc
sbb
pop
dec
rolb
adc
sub
dec
inc
add
sbb
xchg
push
ds
adc
add
mov
outsb
push
pop
push
fdivs
add
dec
mov
testb
xchg
jae
movsl
sbb
add
jge
jp
lret
pop
cld
or
adc
push
pop
leave
test
jge
dec
add
jle
xor
push
add
sbb
pusha
faddl
add
std
imull
xor
or
and
dec
filds
cmp
xor
pop
jbe
shll
idivl
xor
add
fisubl
clc
pop
fst
add
or
dec
xlat
jae
rolb
mov
xchg
enter
or
xor
out
sarb
push
out
popl
test
lock
and
addb
pushf
inc
jno
cmpsl
addr16
rorb
jb
loope
jno
shll
mov
sarl
aas
sbb
es
sub
add
int3
mov
pop
hlt
rolb
and
xor
pusha
and
push
fidivrl
les
mov
movsb
pop
pop
xchg
out
mov
in
sub
and
sub
mov
scas
add
or
out
sbb
add
mov
mov
xor
mov
les
sub
and
add
in
add
mov
pop
mov
add
mov
push
ret
mov
cmpsb
mov
xchg
add
pop
popf
and
cmp
cld
push
adc
rolb
pop
cmp
inc
jno
cmp
cli
fadd
repnz
loopne
pop
stos
mov
sub
fcmovnb
dec
mov
shlb
mov
cmp
and
push
add
xchg
jl
push
pop
les
fwait
stos
pop
aad
pop
jle
add
ss
mov
cmpsb
lret
pop
jecxz
jo
stos
jbe
pop
sub
cmpsl
pop
sub
jne
xor
and
mov
cmpsb
fldt
add
stos
stc
fldcw
lret
fstl
nop
cmpsl
jo
fwait
das
add
pop
and
out
add
out
xchg
jns
imul
pop
xor
and
sbb
push
jge
push
ljmp
sub
int3
sbb
mov
fcompl
dec
xlat
mov
loopne
loopne
ja
sub
popa
mov
das
sbb
inc
filds
jae
movsl
rolb
add
lret
dec
test
xor
cmpsb
shl
cmp
push
push
add
in
lods
fucomi
addl
ja
xor
insb
sarb
xor
pop
aad
xor
repz
mov
sar
add
in
loop
adc
pushf
cli
jno
add
jge
dec
insl
jne
aad
push
fidivs
in
lea
scas
mov
add
mov
mov
addr16
or
les
add
mov
mov
inc
nop
mov
pop
adc
push
push
cwtl
push
or
js
mov
xchg
fisubrs
jmp
xchg
push
push
cmpsb
and
sbb
cmp
out
mov
cld
and
cmp
repnz
sub
mov
js
add
push
js
xor
inc
insb
test
mov
xchg
rcrb
je
pop
or
xchg
dec
cmp
or
out
mov
inc
xchg
sub
cs
add
mov
repz
cmpsl
mov
cmp
call
out
adc
outsb
mov
cld
sub
inc
jns
dec
outsb
cmp
les
outsb
mov
mov
mov
push
lods
movb
loop
pop
sarb
jmp
nop
or
imull
pushf
jno
into
push
and
outsl
sarb
mov
hlt
and
outsb
mov
or
mov
jo
lea
notb
mov
pushf
and
jl
cld
sbb
fsubl
popf
sub
test
fwait
mov
dec
jle
or
inc
jo
mov
jo
xchg
fwait
repnz
xchg
and
cmp
fwait
loope
jo
test
jge
push
inc
jno
pusha
movsl
inc
adc
sub
adc
push
mov
jno
loopne
push
push
push
fwait
and
jb
sub
test
divps
or
js
jle
jno
dec
cmp
movsb
dec
inc
fwait
mov
sub
mov
jno
add
jl
adc
xor
decl
add
movb
mov
loope
adc
add
lea
jae
mov
pop
imul
adc
push
lea
jg
mov
pop
fwait
lea
mov
lret
push
fistl
jg
out
inc
jae
sti
xor
lea
pop
je
xor
xor
dec
je
mov
sbb
sbb
inc
cmp
adc
xchg
adc
pop
adc
ljmp
clc
cmp
adc
or
scas
adc
cld
push
test
or
les
jne
inc
jmp
les
addl
adc
pop
sub
fs
push
sub
sub
and
js
repnz
cmp
loope
orb
push
jbe
sub
inc
dec
cs
clc
mov
jbe
test
jbe
out
add
jbe
fdivs
mov
ja
les
das
adc
arpl
arpl
les
ja
lret
pop
shll
add
sub
push
cmp
mov
add
sbb
sub
clc
adc
push
aaa
pushl
or
or
adc
out
mov
adc
and
mov
popf
roll
lds
xchg
aam
add
out
inc
mov
mov
jmp
jns
xchg
out
jo
adc
push
jmp
pop
push
mov
inc
dec
or
add
lock
dec
push
adc
push
pop
and
pop
gs
push
aaa
sub
addb
jns
lock
mov
enter
popf
adc
and
jne
and
leave
jns
lock
decl
adc
push
adc
inc
pop
jp
xchg
decl
out
or
ja
nop
popf
xchg
lcall
mov
mov
rolb
leave
jp
lock
sarl
rolb
adc
mov
fdivrl
jge
test
test
inc
nop
enter
insb
jge
inc
mov
mov
adc
ds
sbb
xor
or
ret
sbb
and
sbb
fcomi
cmp
nopl
push
inc
lock
das
and
cmp
ds
mov
push
test
mov
push
test
xor
fimull
cmpsl
enter
ret
or
push
jge
cmp
lahf
arpl
loopne
sbb
jp
ret
push
jge
mov
loope
aam
gs
sbb
adc
cmp
mov
jge
jle
or
mov
mov
and
aaa
mov
mov
jle
mov
mov
jb
rclb
loope
mov
mov
sub
int
nop
mov
jo
mov
cmp
and
jg
sub
jmp
outsb
mov
pusha
jg
jb
mov
inc
les
cwtl
mov
test
dec
inc
mov
mov
movsl
es
pop
insb
or
inc
mov
clc
jg
inc
cmpb
or
cmp
pop
subb
pusha
in
or
int3
mov
lock
pop
out
fwait
fs
mov
sahf
inc
scas
call
pop
inc
inc
test
dec
push
and
mov
sbbw
out
fmuls
clc
sarb
pop
sbb
test
adc
adc
xchg
ret
inc
nop
push
call
adc
sbb
jmp
loop
cmpb
out
sbb
cmpsb
mov
mov
mov
lea
in
or
mov
std
sbbb
adc
pop
movsb
inc
or
test
mov
int3
jno
ja
or
adcl
nop
and
pop
insb
mov
scas
dec
cmpl
or
test
mov
test
pop
xor
sub
or
out
or
pop
sbb
inc
dec
mov
mov
test
mov
pop
test
int
fstpt
cmc
inc
test
test
rcrb
test
jnp
xchg
arpl
xchg
imul
jbe
inc
pop
and
arpl
push
cltd
mov
mov
test
xchg
push
ljmp
xchg
fdivl
int3
fwait
sub
xor
add
add
dec
and
call
shl
cmp
xchg
inc
xchg
push
cmc
inc
xchg
lock
xchg
adc
xchg
test
inc
xchg
mov
mov
nop
test
addl
xchg
pop
xchg
cmp
iret
xchg
in
inc
xchg
clc
jo
pop
xchg
or
or
xchg
sub
xor
push
mov
mov
cmp
adc
aam
sub
pop
xor
sub
cmp
fisttpl
xchg
cli
iret
pop
xor
enter
xor
in
inc
decb
inc
xchg
sbb
cli
mov
mov
xchg
loope
mov
jae
dec
inc
out
inc
mov
lock
mov
adc
xchg
test
inc
mov
mov
cli
xchg
nop
test
jnp
les
xchg
sub
inc
mov
push
xchg
cmp
leave
mov
out
mov
bnd
adc
xor
mov
cmp
xchg
sub
xor
dec
mov
cli
adc
xchg
les
sub
or
nop
movsb
dec
adc
cli
cld
xor
ror
mov
adc
out
dec
mov
lock
cwtl
sbb
repz
sbb
out
dec
stc
mov
cltd
add
dec
mov
lock
stos
lock
cwtl
push
adc
mov
sub
filds
adc
mov
mov
lock
lea
les
lea
push
lea
cwtl
adc
sbb
or
iret
inc
nop
in
mov
lea
cmp
cwtl
mov
or
cli
inc
xchg
loop
xchg
xor
or
daa
cwtl
sbb
inc
mov
jo
sbb
push
fwait
in
mov
jmp
mov
lcall
xor
xchg
mov
mov
push
out
xor
lods
in
and
repz
stc
mov
mov
loop
call
jge
jae
flds
xchg
cltd
jo
fwait
xchg
popl
js
repz
rcrl
test
adc
or
nop
push
sbb
test
mulb
inc
nop
aaa
popf
loopne
bound
and
inc
scas
nop
push
jnp
xchg
fldenv
loopne
sbb
dec
xor
in
in
xor
inc
fsts
adc
adc
xchg
clc
dec
pop
xchg
pop
dec
mov
mov
rolb
pop
push
aam
int3
pop
idiv
pop
stos
push
push
xor
cmpsl
lds
clc
or
inc
xchg
les
sahf
jae
int3
cs
out
popf
add
and
cli
loope
mov
or
adc
and
roll
popf
xchg
cmpsb
mov
pop
mov
sahf
ret
sbb
or
mov
xchg
test
pop
pop
test
inc
xchg
lods
sbb
loope
xchg
or
and
dec
xchg
outsl
adc
popf
mov
xchg
sbb
and
mov
rol
loopne
cs
popf
fsubrl
inc
repz
xchg
enter
xchg
lds
ret
cmp
xchg
xchg
dec
sbb
jne
jg
mov
sub
sub
and
and
inc
push
test
sub
ret
mov
jb
xchg
dec
jae
jl
mov
sub
jmp
std
sub
cvtps2pd
mov
das
stc
pop
xor
sub
dec
xchg
mov
mov
mov
stos
sbb
jb
pushf
push
loope
clc
mov
mov
out
or
xchg
repnz
lret
call
stc
js
xchg
lea
mov
ret
push
mov
or
mov
int3
pop
sbb
test
push
mov
xchg
fsubl
daa
xchg
inc
adc
mov
loop
mov
bound
xchg
hlt
and
jo
mov
sbb
dec
xor
in
lret
xor
inc
rclb
or
cs
mov
pop
inc
cwtl
notb
cmp
call
push
cmp
sbb
xchg
out
outsl
jns
fs
lahf
js
mov
aam
ret
push
mov
or
mov
adc
cmpsb
dec
mov
call
call
push
lock
movsb
push
adc
loope
movsb
wbinvd
call
adc
mov
lock
cltd
or
into
movsb
test
inc
cltd
lods
out
cltd
jecxz
fsubrl
icebp
inc
cmpsb
adc
movsb
adc
lcall
lcall
fdivrl
test
adc
scas
movsb
or
xor
enter
insb
scas
mov
or
aam
sbb
sbb
mov
cmp
or
test
dec
fwait
inc
popa
test
mov
jl
shrb
push
fwait
sbb
sbb
lret
scas
cmp
insb
sbb
cmp
out
sub
inc
push
push
cmp
sbb
loop
pushf
sbb
loopne
pop
mov
pushf
aad
push
dec
adc
mov
jecxz
les
adc
icebp
subb
inc
mov
popf
push
repnz
xchg
sub
mov
shr
arpl
push
mov
add
nop
pop
jmp
popa
test
sub
mov
mov
and
mov
mov
jmp
push
sbb
or
xor
cmp
stc
lret
push
cs
lock
push
adcl
sub
cmpsl
xlat
dec
cmp
xor
sahf
jo
lahf
push
lret
pop
xor
add
jb
xchg
mov
push
enter
cmpsl
xchg
sbb
xor
push
decl
jne
xor
add
xor
cmp
ja
xlat
outsb
mov
add
shrl
jae
dec
mov
shlb
nop
jno
add
xchg
push
scas
pop
movl
xchg
cmpsl
stc
sbb
add
or
in
cld
dec
mov
pop
add
push
fisttpll
lahf
lds
cmp
ja
in
and
stc
dec
lcall
or
or
shl
push
jg
jns
lods
ret
sbb
or
mov
ja
test
dec
int
or
mov
fsubl
xor
inc
and
dec
mov
pop
jno
lea
xchg
mov
mov
stos
pop
and
stos
xchg
out
mov
and
fbld
mov
lods
sbb
inc
mov
jl
pushf
inc
scas
mov
adc
andl
insl
scas
jo
mov
pop
fldl
sbb
push
adc
or
loop
scas
adc
pop
mov
repz
scas
cmp
xchg
mov
and
mov
jno
dec
xor
mov
adc
mov
addb
loop
mov
add
loop
jmp
inc
inc
xor
js
jns
cli
test
push
es
xchg
add
mov
jbe
pop
or
add
call
add
inc
add
pop
pop
sbb
mov
mov
movsl
adc
xchg
popa
xor
out
add
inc
fucomp
imul
mov
pop
xor
sbb
push
loopne
fistps
sub
into
xor
outsb
inc
and
push
sub
xchg
pushf
lcall
adc
sti
sub
mov
add
inc
dec
dec
inc
dec
inc
and
push
push
dec
push
outsb
inc
jge
cli
jb
cmp
jnp
inc
dec
push
and
push
inc
out
dec
mov
jge
mov
push
and
and
dec
and
push
pop
hlt
jae
scas
dec
daa
hlt
xchg
sbb
and
rorl
push
sbb
jae
push
lods
mov
push
dec
sub
dec
xor
xor
dec
scas
fdivs
dec
insl
push
jl
inc
jae
aam
insl
mov
mov
pop
outsb
dec
jl
push
cmp
push
push
add
pop
ja
pop
ljmp
push
sbb
jle
push
pop
mov
and
pop
bound
sub
popa
insb
and
pusha
mov
clc
dec
adc
or
and
and
push
add
loop
add
adc
mov
jo
adcl
push
lcall
mov
fdivl
mov
add
inc
loopne
or
mov
push
insb
aad
or
loope
loope
out
aam
inc
cmpsl
movsl
rolb
sub
dec
loope
mov
js
or
clc
out
or
and
cmp
inc
loopne
mov
add
or
pop
or
inc
sub
inc
daa
faddl
lods
mov
orl
dec
test
js
push
das
and
fdivs
sub
adc
mov
test
mov
arpl
sub
sub
add
pop
add
push
bound
xchg
arpl
xor
mov
adc
ljmp
test
add
adc
mov
inc
aam
dec
icebp
push
pop
mov
in
or
sub
int3
enter
iret
add
into
fcmovnu
fcmovu
lret
fstp
fnstsw
loope
lcall
rorl
imul
xor
je
pop
xor
test
lock
dec
subb
xchg
or
aam
loop
xchg
sbb
movsb
jo
xor
mov
test
cmp
imul
fsubrp
inc
int3
or
sbb
add
mov
enter
fsubs
inc
call
lret
cmp
push
or
adc
and
dec
and
cmp
and
dec
push
xchg
pop
and
push
andb
nop
xchg
cwtl
and
mov
dec
rclb
add
sub
or
fs
cmp
hlt
and
mov
movsb
jno
push
sbb
adc
adc
int3
cmp
mov
and
xchg
les
lods
mov
rcrl
and
pop
add
js
pop
orb
push
add
nop
adc
test
mov
dec
rclb
call
and
shrb
xchg
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
je
and
mov
rclb
fsubs
inc
call
mov
cs
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
test
test
shlb
adc
and
dec
fcoms
mov
xor
lret
mov
and
add
xchg
ds
clc
rep
adc
lea
into
out
rcll
pop
dec
invd
add
or
or
push
pmulhuw
adc
adc
sbb
sbb
fnsave
mov
mov
pop
mov
push
rolb
xor
ja
add
out
mov
les
hlt
push
xor
ss
data16
xor
mov
jbe
mov
xchg
sub
mov
pop
sub
sbb
mov
repnz
mov
add
in
push
insl
push
mov
hlt
movl
test
fs
stc
std
in
leave
mov
pop
add
insb
push
arpl
cmp
or
outsb
add
pop
adc
in
pusha
add
jb
addr16
add
add
add
std
test
or
insb
cwtl
mov
inc
leave
mov
lods
jecxz
fdivs
jne
filds
add
shrl
cmp
ficoms
nop
xlat
enter
sarb
and
les
iret
femms
movsl
mov
sub
mov
or
and
jo
popa
mov
adc
pop
stos
sbb
data16
add
jbe
jno
add
adc
out
mov
test
push
movsl
in
add
cmp
sbb
xor
pop
jle
cwtl
push
add
mov
cmp
insb
fs
add
hlt
cmp
roll
sbb
xor
dec
ret
shl
in
xchg
jge
add
add
shl
addb
les
cmc
fnstenv
xchg
ret
jmp
mov
mov
bound
dec
sub
rorl
pop
popa
mov
into
and
mov
aam
movsl
push
fisttps
xchg
fadd
add
shll
cmp
addb
fldcw
inc
mov
lods
sarb
add
inc
in
add
pop
dec
or
stos
leave
jl
fnstsw
add
add
adc
or
leave
and
test
or
aam
mov
push
add
ficomps
leave
fldcw
and
rolb
mov
test
pop
cmp
or
mov
mov
in
mov
mov
lcall
mov
cmp
inc
aad
scas
ja
popf
adc
adcl
jae
or
jecxz
cmp
push
sbb
jp
iret
push
in
decl
sbb
daa
scas
add
mov
pop
jge
hlt
lock
add
push
inc
push
imul
xorb
aas
sbb
subb
sbb
loopne
sub
mov
ficoml
int3
add
outsl
fistpll
cmp
aad
mov
call
jle
shll
push
add
fisttps
addr16
cmpsb
fldl
push
mov
dec
ss
fiaddl
sub
scas
idivb
dec
add
pusha
jp
inc
ret
out
fcomp
push
in
ja
add
imul
sbb
shrb
ss
push
xchg
add
int3
add
mov
and
es
mov
mov
pop
mov
sub
mov
cmpsl
call
add
xor
shlb
sub
scas
ficomps
lock
es
arpl
pushf
mov
xchg
insl
add
ss
add
test
jb
push
rolb
adc
mov
mov
cmp
mov
fwait
add
aad
mov
out
fdivrl
fisttpl
aam
rcrl
icebp
clc
mov
push
pop
int
mov
mov
outsl
int3
inc
mov
sbb
pop
add
push
dec
add
push
pop
or
adc
sahf
add
ror
imul
insb
add
js
or
xlat
push
addl
mov
add
popa
cmpsl
notl
pusha
add
dec
inc
imul
dec
push
scas
fcompl
add
or
inc
lock
aas
aaa
push
add
jg
iret
mov
jmp
cmp
mov
lret
mov
push
cmpsb
mov
sar
in
push
xlat
add
sub
push
mov
jp,pn
mov
dec
popa
add
add
push
add
aaa
mov
or
ret
add
add
sub
ss
xchg
stos
enter
jle
enter
clc
mov
nop
insl
stos
lret
movsb
fbld
fisttpl
lock
ficoms
mov
or
inc
pusha
mov
sub
mov
cmp
add
inc
dec
out
aam
call
das
add
jmp
inc
fcompl
push
rorb
cwtl
aad
les
push
lea
lret
fsubr
cld
std
mov
xchg
push
dec
sub
mov
and
cmp
mov
insb
or
mov
dec
mov
cmpsl
push
dec
adcb
and
or
in
shlb
inc
mov
xchg
mov
sbb
int3
mov
popf
mov
rclb
xor
cmp
cmp
push
icebp
ds
sub
popf
js
data16
call
loop
in
int3
xchg
stc
int3
xchg
or
sub
dec
movsb
mov
popa
xor
adc
jo
inc
cmp
fdivrl
mov
clc
or
xchg
jecxz
xor
clc
or
xchg
and
leave
mov
and
push
cmp
xchg
jp
mov
add
call
dec
jnp
sub
insb
sbbb
push
or
jl
pushaw
adc
or
pop
stc
cwtl
mov
mov
or
xchg
sbb
lds
xchg
sub
out
dec
shll
and
or
and
add
inc
mov
cld
cmp
sbb
adc
push
test
sbb
or
and
cwtl
or
dec
add
fs
nop
cmp
adc
mov
adc
repnz
jl
inc
pop
call
mov
sub
mov
adc
adc
push
sbb
lods
ds
insb
mov
mov
sbb
adc
lock
and
inc
dec
int3
push
or
and
pop
adc
add
jb
mov
mov
and
inc
hlt
rcll
cmp
jb
mov
dec
rclb
push
inc
push
and
dec
dec
pop
xchg
data16
xchg
mov
fmull
adc
add
push
sbb
inc
sub
inc
sub
push
or
js
xchg
sahf
dec
stos
xchg
mov
enter
and
ss
sbb
add
adc
bound
dec
adcb
mov
and
inc
or
or
xchg
sub
inc
inc
push
bound
sahf
dec
scas
xchg
mov
movsl
ret
add
adc
push
sbb
inc
and
mov
or
pop
or
mov
sahf
mov
fcoml
and
inc
and
mov
adc
dec
outsb
xchg
andb
inc
movsb
mov
enter
loop
ss
or
or
mov
js
mov
xchg
mov
add
lret
or
lock
add
mov
adc
dec
xchg
jp
mov
mov
repnz
adc
and
inc
push
mov
and
dec
mov
mov
ljmp
or
cmp
dec
and
dec
insb
xchg
jl
mov
mov
dec
testb
xor
mov
and
dec
xchg
xchg
stos
and
repnz
and
adc
dec
xor
movsb
mov
mov
push
mov
jb
xlat
xchg
arpl
push
jmp
mov
jle
jbe
mov
mov
dec
testl
int3
and
push
inc
inc
subb
cmp
sbb
sbb
pop
inc
inc
lcall
dec
adc
push
xor
jns
movsl
or
outsb
arpl
sti
cltd
or
test
dec
push
push
dec
xchg
pop
push
push
imul
outsl
dec
jne
pop
lcall
test
je
push
inc
adc
ret
jns
or
imul
js
sub
mov
inc
push
das
jne
das
jo
jle
dec
out
fidivrs
jae
ss
dec
stos
dec
sub
jmp
pop
stc
xor
xchg
dec
xchg
enter
jmp
mov
test
xchg
mov
sub
aam
divl
or
inc
pop
jae,pt
popl
mov
aad
mov
xchg
jo
push
sti
imulb
ja
or
popa
push
and
adc
mov
sbb
cmp
jne
jns
int3
jns
nop
cmp
jb
fdivr
movsb
inc
in
pop
mov
outsb
addr16
inc
dec
dec
mov
dec
inc
outsl
sbb
mov
divb
dec
jbe
jo
movsl
dec
das
fidivs
and
fs
xchg
push
xchg
jl
sub
cmpsb
outsb
rcrb
and
hlt
mov
popa
jne
inc
push
push
jns
jae
xchg
jns
adc
adc
nop
adc
sti
or
adc
fstpl
test
int3
aad
mov
push
and
dec
jnp
and
add
sub
ljmp
sbb
iret
test
lods
xor
xchg
pop
imul
dec
sahf
push
cmpsb
cmp
inc
mov
test
fldl2e
jns
inc
push
xorl
int
stos
loop
aam
jle
adc
outsb
shll
mov
adc
mov
aas
dec
pop
jle
sti
fs
jmp
enter
mov
pop
mov
fiaddl
or
inc
sbb
leave
outsb
add
insb
ret
test
ret
lea
sbb
mov
scas
cwtl
dec
push
mov
insb
sub
mov
pop
imul
xlat
mov
arpl
or
mov
imul
movsb
adc
push
cmp
repnz
popa
sub
and
fwait
inc
shrb
bound
push
dec
pop
lods
ja
xchg
push
adc
push
ds
cltd
or
jns
insb
insl
xchg
xchg
push
jo
insl
mov
pushf
and
mov
push
sbb
lret
or
lcall
dec
jmp
fisubs
stc
ficompl
push
in
sbb
jg
cmpl
into
adc
sbb
in
imul
shrb
rorb
idivb
add
les
mov
in
pop
cmp
and
dec
rol
push
fs
mov
popa
pop
dec
and
iret
push
push
mov
xchg
enter
jge
and
push
in
xchg
shl
push
lcall
pushf
inc
cltd
loopne
insl
sbb
push
popf
mov
push
movsl
cmp
dec
int
scas
enter
or
pop
lods
sub
jmp
adc
xchg
push
jge
cmp
cmc
mov
lods
lret
lret
flds
xchg
lods
arpl
push
mov
mov
das
dec
dec
fimull
clc
cmpsl
inc
adc
lods
adc
push
cmp
sub
mov
push
cmpsb
aam
mov
mov
mov
pop
jae
movsb
mov
ror
mov
xchg
push
mov
jecxz
cmc
out
lcall
scas
and
testl
push
mov
bound
push
insb
cmpsl
adc
adc
cmp
push
push
nop
inc
in
jae
sti
jbe
shll
cmp
mov
adc
int
test
xchg
sti
rcr
test
sub
addr16
add
xor
scas
add
sub
sub
out
pop
bound
add
sub
dec
leave
dec
or
and
add
hlt
adc
xor
in
xor
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
sbb
xor
pushf
adc
pushf
xor
pushf
push
pushf
pop
pushf
bound
pushf
cmpsb
pushf
scas
pushf
mov
mov
pushf
pushf
fbld
jo
ja
mov
leave
lret
leave
fmulp
push
xor
jg
outsb
sbb
dec
movl
xchg
jp
test
mov
xchg
xchg
aad
call
clc
push
push
cmp
adc
es
xor
dec
dec
dec
push
dec
pusha
dec
dec
jae
jns
xchg
dec
lcall
dec
les
dec
loopne
out
out
dec
clc
inc
xchg
cmp
mov
call
push
cmp
lahf
cmp
xchg
fists
pop
cmp
and
sub
cmp
inc
in
in
in
in
cmp
cmp
jb
fidivrs
in
hlt
cmp
push
inc
aas
dec
dec
popa
dec
xchg
dec
fwait
dec
into
dec
clc
pop
daa
js
inc
loopne
adc
jb
jb
jb
jb
dec
arpl
cmp
js
jle
xchg
jb
jb
jb
jb
jb
sbb
xor
pushf
sub
xor
dec
push
adc
push
mov
sbb
aam
fcmove
or
insl
jno
leave
pop
leave
fs
insb
leave
ror
fmul
in
jmp
sti
enter
push
jb
mov
jl
test
jb
jb
jb
sbb
xor
pushf
pushf
fwait
pushf
mov
xor
dec
daa
ja
nop
daa
test
daa
fsubl
cld
and
leave
fmulp
xor
into
add
inc
or
and
push
into
cmp
pushf
push
pushf
addr16
jle
xchg
cwtl
int
ds
cmp
push
cmp
in
in
in
in
in
in
in
in
or
push
pushf
vmread
jb
jb
push
outsl
fsubrs
in
cmp
cmp
mov
inc
add
and
pop
xchg
pusha
xchg
imul
or
and
leave
fs
push
jo
jbe
jnp
or
lahf
leave
movsb
leave
test
leave
leave
icebp
leave
cli
xor
jb
jb
jb
jb
jb
jb
jb
jb
sbb
setl
pushf
push
pushf
pop
pushf
bound
pushf
lods
pushf
roll
daa
bound
popf
cmp
cmp
ds
test
inc
add
push
push
mov
mov
pushf
mov
iret
xchg
cmp
enter
leave
das
xor
push
in
in
in
cmp
mov
stos
cmp
cld
test
and
sub
leave
sbb
sbb
and
sub
sub
leave
pop
leave
gs
outsl
leave
xchg
leave
stos
leave
mov
sub
leave
fmulp
out
out
leave
test
cmp
dec
jb
jb
jb
dec
mov
mov
cmp
cmp
cmp
push
or
dec
xor
dec
push
dec
addr16
jae
orb
lahf
dec
stos
dec
mov
dec
fimull
dec
ljmp
or
and
cmp
xchg
dec
xchg
push
xchg
pop
xchg
bound
leave
or
lret
lcall
daa
mov
daa
shlb
fisubl
loop
ljmp
or
adc
sbb
and
sub
xor
cmp
inc
xchg
lods
jb
jb
jb
jb
jb
jb
jb
jb
dec
xchg
mov
cmp
jo
push
and
das
cmp
cmp
dec
sub
les
orb
nop
dec
cwtl
dec
mov
cmpsl
sahf
shlb
daa
shlb
fsubs
loopne
call
clc
loopne
cwtl
test
adc
lods
cmp
jge
cmp
inc
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
ror
fmul
loopne
call
clc
xor
adc
sub
cmp
push
xchg
pop
xchg
pusha
xchg
push
or
leave
nop
leave
cwtl
leave
mov
leave
mov
leave
ror
fmul
loopne
out
xor
or
xor
cmp
cmp
inc
call
push
es
pop
xchg
pop
dec
pop
fs
push
test
mov
mov
mov
daa
les
enter
shlb
in
add
or
adc
adc
sbb
sbb
and
and
sub
sub
inc
leave
pusha
leave
push
je
js
jl
and
in
in
in
in
in
in
in
in
in
in
in
in
in
jl
sbb
sbb
and
and
sub
sub
xor
xor
cmp
rcrl
adcb
leave
fs
je
test
enter
aam
fdivs
in
call
outsb
pop
and
sub
mov
xchg
cmp
inc
xchg
inc
xchg
dec
xchg
pop
xchg
js
adcb
xchg
nop
xchg
xchg
xchg
cwtl
xchg
pushf
xchg
mov
xchg
fcoml
call
lock
cmp
cmp
push
or
sub
xor
stc
cmp
inc
cmp
cmp
cmp
cmp
xchg
cmp
cmp
mov
add
in
cmp
mov
xchg
clc
xchg
cld
xchg
add
add
adc
xor
cmp
inc
xchg
inc
xchg
dec
xchg
dec
xchg
push
xchg
push
xchg
pop
xchg
pop
xchg
insb
xchg
mov
pushf
xchg
mov
xchg
lods
xchg
mov
mov
enter
pusha
or
in
clc
in
in
cmp
or
pushf
inc
xchg
dec
dec
sub
dec
pop
inc
dec
fs
insb
in
in
in
in
in
in
xchg
push
sbb
xchg
rolb
or
or
adc
adc
sbb
sbb
and
and
sub
cmp
pop
daa
pusha
daa
fs
push
daa
je
js
jl
andb
daa
mov
mov
xchg
jl
xchg
rclb
fcoml
adc
andb
and
sub
xor
dec
xchg
push
xchg
js
jl
adcb
xchg
nop
xchg
test
enter
aam
fcoms
in
add
les
and
sub
xor
xor
notl
inc
movsb
cmp
cmp
cmp
cmp
test
scas
call
pushf
icebp
cwtl
stc
pop
cmp
ret
int
movsl
jno
inc
jb
sbb
xor
pushf
leave
pushf
int
rcrl
pushf
loope
in
jmp
fprem1
leave
stc
leave
std
enter
add
lcall
xchg
popa
xchg
imul
and
sub
sub
xor
insl
push
cmp
cmp
imul
in
in
sbb
mov
adc
addr16
xor
aas
daa
bound
daa
xchg
daa
scas
daa
shll
add
daa
outsl
daa
mov
stos
daa
mov
and
xor
leave
push
leave
leavew
mov
mov
lock
and
and
xor
fs
mov
lahf
xor
pop
cmp
cmp
cmp
push
push
cltd
push
andb
pushf
mov
pushf
testb
hlt
daa
pop
daa
addr16
jne
mov
aad
scas
setae
xchg
jbe
jge
push
jmp
enter
inc
jb
jb
jb
sbb
cmp
mov
into
dec
aad
fisttps
dec
in
dec
testb
add
push
xchg
or
adc
and
sub
inc
and
xor
outsl
xchg
jne
jge
xchg
mov
test
dec
in
dec
cmc
dec
incb
aas
adc
xchg
pop
pop
push
jb
jb
jb
dec
stc
dec
mov
or
add
and
gs
jp
xor
xchg
imul
je
in
in
inc
std
in
cmp
and
cmp
push
cmp
xchg
cmp
sbb
inc
ret
data16
xchg
xchg
popf
jmp
leave
out
add
adc
dec
pushf
adcb
rcll
jb
jb
jb
jb
jb
jb
dec
lahf
and
nop
xchg
ss
ret
in
in
mov
adc
aaa
and
cmp
jl
pop
jle
pop
pushf
pop
xchg
pusha
dec
test
insb
dec
jo
je
js
jl
andb
mov
mov
mov
les
enter
shlb
aam
fcoms
and
adc
sbb
int3
cmp
mov
lods
mov
mov
pusha
and
xchg
js
jl
test
xchg
mov
sbb
pushf
rcrb
fcomps
ljmp
adc
sbb
leave
xor
cmp
cmp
into
dec
xchg
je
js
into
test
dec
nop
dec
cwtl
dec
pushf
inc
and
arpl
pop
aam
push
ror
dec
aam
fsubs
fsub
daa
repz
jmp
sub
sub
xchg
and
in
in
in
lcall
dec
cmpsl
dec
mov
rol
daa
shll
out
lock
cli
and
loopne
sbb
and
inc
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
sbb
cmp
pushf
sbb
sub
mov
fsubrs
xchg
pusha
dec
stos
xchg
push
push
bound
loope
ret
leave
ror
fcmove
loop
ljmp
ss
jb
jb
jb
jb
jb
jb
jb
jb
jb
dec
pop
push
sub
jb
jp
orb
push
ficomps
and
mov
rclb
ljmp
aaa
or
adc
sbb
and
sub
xor
cmp
inc
in
in
in
sahf
pop
sub
sbb
pushf
jp
sbbb
mov
pushf
mov
pushf
rcrb
xchg
cmp
and
xchg
mov
sarb
in
in
aam
xchg
jb,pn
dec
daa
cmp
push
repnz
mov
adc
xor
or
push
out
repz
decl
cs
loop
xchg
and
xchg
shrl
or
xor
mov
xchg
add
cmp
sahf
les
ret
and
xchg
xchg
add
mov
xchg
push
test
daa
xchg
aam
ret
push
xchg
bswap
sub
mov
pop
fwait
cmp
jo
shr
icebp
sbb
xor
lods
inc
pop
mov
sub
gs
nop
jns
and
aas
cmp
pop
mov
push
lods
rorb
xor
xor
push
xchg
in
mov
inc
lock
sahf
ds
mov
pushf
fistps
xor
jb
jb
jb
jb
jb
jb
dec
data16
jb
lea
cltd
cmp
cmp
fcmovnbe
xor
adc
shlb
jmp
cmp
imul
ret
leave
loopne
repnz
cmpl
movsb
push
pushf
sub
jo
jnp
xchg
inc
and
aas
jb
mov
leave
mov
insb
movsb
cmp
cmp
inc
shl
lods
sub
push
pop
data16
out
and
in
sahf
lret
xorl
fs
leave
test
push
push
xor
daa
or
daa
lock
lock
mov
lret
push
mov
ret
loope
loop
sahf
ss
mov
leave
add
inc
leave
test
iret
push
or
dec
xchg
dec
fwait
dec
in
sbb
les
daa
insl
daa
je
jle
je
dec
outsb
stos
leave
mov
movsb
in
in
mov
jb
mov
push
fildl
mov
lock
daa
fsubs
fsubl
lock
cs
loope
jp
scas
cmp
daa
frstor
in
adc
nop
cmp
inc
xchg
push
lock
pop
jp
cmp
sub
inc
xchg
push
subb
daa
int3
and
hlt
out
cmp
fsubs
cmp
pushf
imul
or
daa
mov
mov
test
mov
cmp
in
in
cmp
mov
dec
pop
repnz
push
and
inc
test
and
xchg
movsb
dec
shl
daa
cmp
xchg
sti
xchg
sub
pop
pop
imul
daa
loop
out
ljmp
daa
cli
and
or
cmp
push
pushf
adc
pushf
and
xor
ds
inc
xchg
inc
xchg
dec
xchg
dec
xchg
push
xchg
push
fsubrs
cmp
outsb
cmp
jbe
js
sub
jp
pop
jl
mov
jle
push
push
adc
test
popa
mov
pop
mov
ret
push
nop
adc
mov
out
test
popa
cwtl
xor
push
xchg
test
popa
mov
es
movsb
dec
cs
push
test
ds
inc
xchg
test
inc
mov
push
cmpsb
dec
outsb
ret
mov
xchg
jp
jle
adcb
pushf
xchg
pushf
xchg
xchg
lcall
stos
lods
into
and
sub
rol
popa
mov
rcrb
cwtl
pop
jb
dec
loop
shr
dec
out
dec
repnz
test
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
loopne
ds
in
in
xchg
xchg
push
daa
push
and
lods
or
bound
and
shll
xchg
xchg
xchg
xchg
xchg
xchg
lcall
xchg
stos
imul
ret
lret
sbb
pushf
pushf
ficompl
mov
in
in
in
xchg
pop
movsb
push
daa
or
push
daa
adc
in
in
in
in
cwtl
out
in
mov
pop
sbb
pushf
dec
pushf
dec
pushf
push
pushf
push
pushf
pop
pushf
pop
pushf
bound
xchg
jb
js
xchg
jle
adcb
pushf
xchg
pushf
xchg
pushf
lcall
xchg
stos
ret
sahf
mov
mov
mov
xchg
leave
cmp
leave
sarb
cmp
cs
xchg
cmp
push
inc
pop
jb,pt
jb
jb
dec
out
cmp
jo
cmp
dec
jo
sbb
and
dec
insb
dec
jno
jbe
dec
mov
xchg
and
and
aaa
enter
dec
pop
fs
fcoms
daa
cmp
daa
hlt
sub
es
adc
dec
inc
xor
jbe
dec
cmp
cmpl
cmp
ljmp
mov
xchg
jl
mov
inc
add
dec
pop
insb
leave
jl
cmpsl
and
shl
in
xchg
add
xor
or
addr16
xchg
adc
push
lods
sub
jnp
incb
mov
and
insb
jg,pn
xchg
cwtl
enter
or
push
mov
or
sbb
push
jne
orl
lahf
loope
imull
cmp
cmp
cmp
and
leave
movsl
leave
fmul
aad
test
pushf
fiaddl
cmp
mov
mov
mov
jmp
cmc
leave
std
enter
push
jb
jb
std
leave
icebp
leave
stc
enter
sbb
push
cmp
push
leave
pusha
sub
sub
dec
mov
pop
es
aas
aaa
pushf
inc
xchg
push
mov
pusha
mov
xchg
and
xor
mov
pusha
pop
cmp
jge
mov
fwait
and
xchg
adc
mov
xor
jb
dec
xor
scas
and
leave
repz
pop
dec
adc
daa
cmp
pop
cld
pushf
outsb
xchg
mov
fadd
dec
out
testb
push
jb
pop
push
lcall
leave
leave
in
sysexit
dec
adc
xor
sbb
pop
xor
repnz
cmp
jae
jl
mov
leave
scas
leave
mov
sub
fnstsw
and
dec
loope
and
scas
in
mov
sbb
pushf
out
repz
arpl
xchg
popa
pop
mov
sub
xchg
ret
pushf
mov
pop
out
hlt
loope
pop
leave
bswap
sbb
rorb
add
pop
daa
jecxz
call
hlt
sbb
cmp
pushf
aas
xchg
dec
ret
clc
data16
jb
dec
xchg
push
bound
ret
lcall
xchg
hlt
mov
test
mov
push
in
nop
push
aas
pop
in
mov
add
adc
dec
push
and
mov
dec
in
repnz
jbe
je
mov
movsb
movsl
pusha
mov
cmc
nop
push
xor
setp
and
add
sub
cwtl
and
xchg
and
rcrb
adc
pop
cwtl
mul
inc
in
in
in
xchg
xchg
andl
cs
mov
jb
jb
dec
testl
xchg
aas
xchg
dec
xchg
push
xchg
popa
xchg
imul
mov
mov
ss
jl
adc
ret
out
xchg
dec
xchg
push
jo
dec
test
fmul
xchg
or
jb
jb
dec
cmp
xor
cmp
rol
adc
xchg
call
mov
cmp
popf
pop
lock
in
mov
roll
in
in
in
in
in
mov
dec
dec
push
insl
cmpsl
push
ja
jl
pop
cmp
das
jmp
mov
xchg
lret
jbe
mov
or
push
lcall
pusha
cmc
daa
andl
loopne
mov
jbe
jmp
jnp
movsb
adc
sbb
pop
mov
fsts
pop
xor
and
push
lret
in
pop
in
in
lcall
popf
add
orl
inc
add
setae
jbe,pn
sbb
xchg
jnp
sahf
pusha
xchg
lock
and
jb
jnp
sub
dec
push
out
ss
push
dec
arpl
dec
orb
mov
in
icebp
inc
add
sub
cld
insl
leave
jae
jnp
clc
mov
xchg
or
xor
sbb
and
daa
in
in
test
mov
movsl
in
fdiv
dec
hlt
in
daa
xor
or
leave
icebp
inc
mov
in
mov
xchg
jecxz
add
and
mov
lahf
test
fs
outsl
pop
jb
and
mov
xchg
leave
or
and
and
mov
pop
dec
cmpsl
fsubrs
scas
add
mov
mov
dec
ret
push
xchg
fs
inc
sbb
pushf
fistl
mov
sbb
pushf
fwait
xchg
scas
mov
cmc
in
daa
ds
push
pushf
in
in
lahf
test
std
popa
fucomp
and
xor
xor
aam
leave
fdivl
mov
dec
out
or
sub
cmp
es
cmp
addb
or
ljmp
cmpsl
xchg
in
inc
push
xor
clc
test
rolb
xchg
out
pop
sahf
dec
out
fs
stos
dec
lock
daa
cmp
ret
clc
adcb
cmp
mov
aas
pop
or
lret
push
jbe
rcll
gs
dec
jnp
push
dec
icebp
dec
adc
fs
jns
push
xchg
cmp
daa
pop
sub
dec
mov
sbb
pushf
test
xchg
mov
ret
ds
sub
dec
out
push
outsb
dec
add
xchg
cmp
cmp
cmp
and
call
daa
gs
mov
mov
mov
pop
inc
mov
jb
push
idiv
xor
or
push
popa
rorb
push
sbb
xchg
cmp
mov
mov
lcall
push
leave
scas
add
fmuls
jb
into
add
pop
pop
ss
stos
push
jo
dec
mov
mov
xor
fidivrl
push
dec
adc
imul
leave
loope
add
mov
scas
mov
aaa
mov
dec
xchg
xchg
mov
fidivl
insl
test
cmp
mov
pusha
push
and
cmpsb
dec
mov
pop
mov
push
test
nop
shrb
fdiv
jbe
cmp
cmp
subl
pop
sbb
and
in
jmp
hlt
pop
cmp
pushf
xchg
pushf
test
inc
pop
adcb
loopne
fsub
repz
cmp
inc
cmp
xor
popf
pushf
mov
mov
sub
xchg
cmp
xchg
nop
jmp
dec
xor
xchg
jmp
hlt
nop
inc
xor
dec
in
in
in
in
xchg
add
out
js
dec
add
fadds
xor
leave
xor
xchg
mov
sbb
xchg
cmp
inc
loope
dec
imul
push
js
dec
les
cmp
decl
adc
outsl
dec
jne
mov
adc
pop
jle
cmpsl
in
xchg
push
sbb
xchg
fiadds
dec
cmp
and
in
in
in
xchg
mov
test
flds
add
push
mov
xor
daa
add
pop
test
cmp
mov
and
cmp
or
bswap
popa
push
pop
leave
sbb
pop
cmp
and
inc
faddp
leave
and
aaa
cmp
cmp
cmp
cmp
or
pop
cmp
ja
cmp
dec
xor
push
mov
push
mov
jb
jb
jb
jb
jb
jb
jecxz
cld
data16
in
in
mov
mov
adc
sub
dec
mov
in
in
cmp
sbb
cmp
and
cld
clc
daa
add
cli
or
or
adc
jb
pop
popf
or
leave
xor
sub
mov
lods
xchg
pop
mov
cmp
add
lods
xlat
ss
jns
outsb
xchg
jo
jb
dec
or
ljmp
scas
cmp
xchg
sti
faddl
xor
push
dec
js
dec
sahf
dec
mov
cmp
ficompl
xchg
and
in
cmp
push
daa
and
test
lret
frstor
xchg
jle
test
sbb
daa
test
mov
mov
cmp
sub
mov
adc
movb
jb
pop
bound
mov
leave
adc
and
dec
and
popa
inc
or
loop
pop
popa
inc
gs
jg
lret
sub
cmp
adc
xchg
lods
dec
test
dec
sti
inc
or
xchg
inc
xchg
pop
xchg
jns
js
and
jmp
lock
in
mov
cmp
lock
jb
jb
pop
cs
xorb
imul
xchg
or
scas
daa
mov
rcl
mov
adc
xor
mov
mov
je
cmp
push
test
inc
xchg
lods
inc
sub
je
lods
xchg
jp
mov
dec
mov
ret
push
ficomps
ret
jbe
sbb
mov
push
bound
clc
leave
cld
lret
test
or
adc
adc
sbb
mov
mov
daa
cmp
aam
lods
js
insb
pushf
call
mov
sbb
xchg
mov
sbb
pushf
mov
lods
xchg
jno
leave
ror
scas
in
xor
cmp
mov
popa
mov
mov
pushf
cmp
mov
dec
fs
in
mov
push
jl
push
sub
outsb
or
jo
pop
pushf
sbbb
mov
mov
fs
jo
pop
int3
subb
and
faddl
cwtl
push
in
sub
xor
cld
cmp
pop
fs
dec
je
and
es
xchg
dec
and
les
aam
add
add
mov
push
mov
mov
clc
jb
jb
jb
loopne
mov
pop
or
add
pop
jl
cmp
leave
xchg
sub
cmp
cmp
leave
mov
mov
scas
cmp
xor
in
cmp
pop
inc
orl
dec
fmul
jb
jb
dec
pop
or
fs
jno
sub
sub
and
lock
test
pop
stos
mov
mov
and
mov
ds
mov
clc
and
mov
or
mov
inc
xchg
add
push
mov
push
pop
mov
shrb
insb
mov
outsb
lds
sbb
pushf
mov
mov
mov
sbbl
fiadds
cmp
jo
imul
clc
fbstp
orb
pusha
sub
rcll
jae
cld
adc
and
inc
enter
adc
dec
pop
clc
inc
flds
data16
sbb
sub
pusha
roll
push
push
movsl
jl
sbb
bnd
nop
cmp
xchg
mov
call
cmp
sbb
bound
sub
adc
arpl
cmp
mov
sbb
loope
fsubrl
mov
and
xor
xchg
inc
loopne
loopne
fsubrl
sbb
or
push
mov
sbb
daa
inc
pop
inc
pop
dec
pop
dec
pop
inc
add
push
pop
popa
pop
je
jne
jb
fs
xor
jne
cmp
cmp
gs
fs
sbb
insl
adc
inc
adc
adc
add
cltd
enter
shrl
enter
push
or
and
pop
push
adc
addr16
ljmp
inc
jae
adc
dec
dec
outsb
movsl
adc
or
jb
in
xor
mov
dec
mov
inc
mov
mov
dec
or
daa
add
scas
cli
popw
popa
popa
jno
jne
jb
mov
xor
scas
adc
int3
push
or
push
xchg
aad
sbb
add
jp
cltd
or
dec
jle
or
or
ljmp
rcll
imul
mov
aad
push
test
inc
insb
lret
sub
fmull
pop
push
mov
jbe
imul
jmp
push
out
outsl
stos
sub
mov
pop
inc
lret
xchg
jb
adc
xor
adc
sbb
adc
call
cmp
sub
xor
arpl
movsb
dec
enter
pushf
inc
test
stos
sub
sbb
call
and
jo
inc
dec
arpl
outsb
dec
je
jne,pt
test
xor
cld
insb
push
xchg
push
xchg
insb
in
xor
movsb
mov
or
adc
lods
imul
bound
loop
inc
lea
cmp
dec
sub
lret
mov
pop
xor
popf
add
jb
gs
cmpsb
mov
dec
mov
sahf
push
popf
inc
xchg
add
mov
loop
in
and
push
subb
cmp
xchg
jb
jne
sahf
xchg
xchg
test
cmc
sub
cmpsb
push
dec
jbe
push
mov
inc
cs
shlb
xchg
arpl
fs
lahf
pop
mov
inc
mov
push
adc
cli
mov
xchg
jbe
add
loopne
stos
es
cmpsb
cmp
jns
test
es
out
or
push
inc
jne
push
stos
shlb
xor
push
mov
stos
push
push
or
cltd
add
dec
push
arpl
xor
rol
add
dec
imul
jb
gs
jo
push
bound
push
sub
hlt
dec
push
loop
test
imul
add
push
adc
dec
test
and
add
dec
xor
jbe
mov
pop
mov
aam
mov
cmpsb
andb
jo
or
mov
clc
data16
das
inc
stos
xor
adc
jbe
sbb
xchg
inc
xchg
rclb
cs
adc
or
jo
sub
lret
inc
adc
dec
push
fs
sub
push
shlb
push
and
cmp
ljmp
or
inc
mov
mov
adc
mov
adc
jb
jb
loopne
pushf
adc
sub
loopne
cmp
xor
lret
gs
xor
rcll
addr16
sub
push
mov
adc
sahf
and
dec
pop
xchg
inc
ficoms
jbe
fs
inc
aam
test
cmp
xorb
repz
add
and
mov
daa
dec
stc
js
add
cmp
xor
pop
mov
jmp
add
inc
push
cmc
sub
adc
xor
daa
arpl
pop
inc
pop
jae
xor
sbb
push
push
or
cmpb
pop
popf
push
pop
pop
mov
push
dec
pop
push
sti
jp
lahf
pop
lods
pop
push
pop
imul
bound
xor
sbbb
or
sbb
pop
push
xor
adc
jns
test
cmpsl
in
out
jo
inc
flds
loopne
imul
inc
fucomip
popa
cltd
sbb
sqrtps
cs
js
int3
push
popa
adc
movsl
and
movsb
loop
scas
cld
lock
cli
mov
cltd
xor
cmovne
pop
and
cmovs
xor
loope
inc
iret
fdivr
mov
push
adc
inc
imul
cmp
insl
and
ljmp
cmp
addr16
sbb
inc
fstl
adc
and
jo
jge
mov
and
outsb
cmp
jo
jns
dec
jae
sbb
fimull
inc
or
xchg
jge
cmp
ret
pop
imul
nop
sub
cli
mov
dec
sbb
test
push
xor
pop
push
dec
push
push
dec
jns
sbb
nop
repnz
cmovg
push
pusha
add
or
add
add
hlt
pop
jmp
fucomp
mull
in
or
add
jmp
cmp
or
adc
neg
bsf
test
xor
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
imul
cmp
adc
or
and
shr
xor
call
lcall
mov
bts
btr
movsbl
dec
adc
or
not
bsf
call
lcall
add
not
bswap
shl
dec
btc
add
dec
and
adc
neg
call
lcall
add
shl
or
and
or
cmp
test
bts
call
lcall
popf
xchg
add
cmp
dec
not
test
or
dec
xor
dec
call
lcall
repz
xor
add
sub
adc
xor
inc
call
lcall
into
push
movswl
movsbl
sub
and
xor
mov
btr
call
lcall
or
and
test
shl
or
bt
btc
bts
call
lcall
inc
ficoml
jnp
add
movl
fabs
lret
xchg
jne
out
adc
mov
sbb
negb
dec
mov
les
and
pop
add
leave
xchg
mov
cmp
and
cmovno
adc
cmp
lea
lret
les
fisubs
clc
xchg
inc
icebp
loope
sahf
inc
fisubs
clc
xchg
inc
push
xchg
lret
cmove
xchg
adc
inc
and
and
lods
mov
sub
pop
inc
add
jp
cmp
cmp
pop
dec
cmp
les
mov
inc
and
xor
mov
xor
jo
xor
and
les
add
dec
shl
test
inc
push
fs
push
or
jnp
jecxz
add
add
jg
push
dec
sub
inc
xor
pop
xchg
loope
inc
add
cmp
or
sbb
inc
cmp
aam
inc
das
jmp
movsl
into
mov
inc
add
cmp
mov
inc
xor
mov
xor
xor
mov
mov
mov
add
movl
fabs
xor
cmp
jne
jg
jns
pop
inc
push
jo
popw
mov
out
cmp
les
and
pop
add
leave
xchg
mov
xchg
mov
mov
mov
lret
inc
mov
and
pop
inc
add
lods
lds
loope
mov
lds
mov
or
dec
lret
push
cli
setl
or
cmp
lcall
les
cmp
cmp
inc
cmp
lret
dec
cmp
lret
jbe
jg
cmp
add
push
add
inc
cmp
lret
sti
lret
xor
cmp
movsl
sub
cs
or
dec
and
hlt
add
cs
cmp
dec
add
inc
shl
cs
les
cmp
les
dec
in
or
dec
lds
dec
rol
vucomisd
add
popf
movsb
cs
sti
inc
add
dec
shl
inc
cs
cmp
mov
maxps
or
xor
bound
add
mov
les
pushf
inc
add
cmp
inc
sub
call
adc
push
and
mov
lret
inc
sub
imul
dec
shl
cmp
sub
enter
pop
sbb
cmp
cmp
mov
mov
pop
inc
add
lods
mov
jg
fbld
inc
xor
push
in
leave
xor
add
daa
mov
jg
dec
sub
pop
inc
add
lods
cmp
cmp
xor
lcall
shlb
adc
movsl
mov
mov
lret
cs
cmp
movsl
sub
cs
or
dec
and
hlt
add
cs
cmp
dec
add
inc
shl
cs
les
cmp
les
dec
in
or
dec
lds
dec
rol
vucomisd
add
popf
movsb
cs
sti
jmp
outsb
sbb
dec
xor
lret
out
outsb
and
add
xor
pop
inc
add
lods
cmp
dec
test
lret
addb
sbb
cmp
mov
les
in
cmp
or
mov
or
adc
adc
jg
test
ficoms
int
nop
leave
dec
mov
add
hlt
movl
cwtl
pop
leave
lds
loope
lret
stc
add
jg
jae
mov
inc
pop
daa
mov
push
int
jle
cs
cmp
movsl
sub
cs
or
dec
and
hlt
add
cs
cmp
dec
add
inc
shl
cs
les
cmp
les
dec
in
or
dec
lds
dec
rol
vucomisd
add
popf
movsb
cs
sti
lods
mov
xor
inc
and
mov
mov
inc
add
sub
mov
cmp
and
inc
adc
lret
mov
jge
add
pop
mov
aaa
jmp
mov
add
pop
mov
inc
cmp
and
pcmpeqw
ret
cmp
jg
scas
pop
aaa
inc
push
lods
pop
fcoml
pop
shlb
add
imul
cmp
movsl
sub
cs
or
dec
and
hlt
add
cs
cmp
dec
add
inc
shl
cs
les
cmp
les
dec
in
or
dec
lds
dec
rol
vucomisd
add
popf
movsb
cs
sti
sub
mov
mov
mov
lret
or
jbe
mov
sub
pop
inc
add
sub
dec
and
mov
cmp
mov
pop
inc
sub
mov
lret
sub
sub
iret
mov
mov
test
es
mov
les
rolb
cs
xchg
lret
add
inc
das
roll
cs
movsl
dec
mov
loope
cmp
dec
ret
orl
lds
mov
dec
roll
lds
mov
dec
roll
hlt
add
dec
roll
adc
pop
mov
dec
roll
lds
mov
dec
roll
lds
mov
dec
roll
lds
mov
dec
roll
mov
xchg
in
add
lcall
lds
mov
dec
roll
lds
mov
dec
roll
inc
sub
lds
mov
dec
roll
lds
mov
dec
roll
xchg
dec
cmp
sub
popa
fwait
sub
cmp
cmp
ret
orl
lds
mov
dec
roll
lds
mov
dec
roll
clc
lds
clc
lds
cmp
add
popa
fwait
sub
cmp
cmp
mov
xchg
dec
cmp
add
popa
fwait
sub
cmp
cmp
xor
adc
adc
dec
add
ss
fwait
sub
cmp
cmp
and
fldenv
loope
add
mov
xor
inc
fnsave
add
jge
or
jg
addr16
dec
dec
mov
icebp
loope
add
movb
into
push
lret
roll
shr
mov
mov
loopne
inc
or
shll
mov
jge
stc
aam
inc
adc
inc
adc
adc
movsb
lret
mov
or
jg
sbb
inc
inc
xor
addr16
pop
inc
add
les
es
pop
inc
cmp
lret
mov
mov
add
xor
lds
add
rcl
adc
push
aam
sub
out
lret
jne
jg
lods
inc
pop
ja
inc
xor
ja
inc
xor
bound
pop
inc
add
jl
aad
vmovdqu
cltd
xor
inc
setae
jg
enter
data16
call
addr16
sub
pop
inc
add
jg
pop
ret
cmp
mov
lret
aad
push
adc
cmp
cmp
inc
push
xchg
pop
inc
add
cmc
aad
sbb
add
mov
mov
inc
push
mov
dec
or
sbb
pop
inc
add
test
lret
inc
push
mov
inc
push
inc
sbb
push
mov
mov
sub
pop
inc
add
mov
jg
mov
dec
mov
add
mov
jne
mov
out
inc
push
sub
pop
inc
add
cs
in
mov
xor
mov
sete
lret
cmp
aad
push
mov
cmp
mov
cmp
aaa
aaa
lods
mov
xor
cmp
fbld
mov
and
cmp
int3
sbb
sti
push
fdivl
adc
aaa
aaa
aaa
aaa
enter
pop
mov
mov
aaa
aaa
aaa
xor
div
mov
aas
fdivl
push
fcompl
fstp
sbb
xor
xor
ss
push
neg
ss
enter
mov
mov
pop
mov
xor
aaa
aaa
aaa
fdivl
fdivl
or
push
mov
inc
and
ss
lock
cmp
jns
dec
push
cmp
fidivs
mov
cmp
push
cmp
cld
push
mov
pop
pop
mov
push
mov
sar
fdivl
lods
lds
xor
cld
push
fs
leave
cmc
cmp
xor
and
mov
xor
in
shl
mov
repz
pop
push
mov
cmpsb
push
mov
cmp
push
mov
mov
fbstp
aaa
aaa
aaa
lods
mov
xor
adc
cmp
mov
mov
mov
sub
mov
mov
push
not
xorl
fdivl
adc
aaa
aaa
aaa
aaa
enter
pop
mov
mov
aaa
aaa
aaa
xor
div
mov
aas
fdivl
push
fcompl
fstp
sbb
xor
xor
ss
push
neg
ss
enter
mov
mov
pop
mov
xor
aaa
aaa
aaa
fdivl
fdivl
or
rcll
aas
mov
test
shr
mov
incl
out
shr
mov
rclb
arpl
push
push
push
mov
mov
mov
xor
cmp
repz
xor
mov
aas
iret
push
in
mov
xchg
inc
dec
sub
test
mov
xor
call
jmp
cmp
sbb
not
inc
cmp
fistpll
aaa
aaa
aaa
jne
cmc
inc
int3
push
cmp
loopne
cmp
mov
lea
test
mov
enter
jbe
lds
out
fcomi
xlat
sub
not
cmp
cmp
icebp
cmp
cmp
aaa
aaa
aaa
lods
mov
xor
xor
decl
neg
pop
cmp
loop
push
mov
jl
shr
mov
xchg
insb
mov
xor
out
not
ljmp
jb
mov
mov
fsts
idivl
mov
shr
ss
aaa
aaa
lods
mov
xor
mov
shr
sti
shr
into
insb
popf
imul
rcrl
mov
add
adc
aaa
aaa
aaa
aaa
enter
pop
mov
mov
aaa
aaa
aaa
xor
div
mov
aas
fdivl
push
fcompl
fstp
sbb
xor
xor
ss
push
neg
ss
enter
mov
mov
pop
mov
xor
aaa
aaa
aaa
fdivl
fdivl
or
arpl
and
test
cmp
mov
pop
cmp
lods
push
cmp
lahf
fbstp
aaa
aaa
aaa
lods
mov
xor
neg
aam
fbld
fstl
xchg
push
mov
movsl
test
inc
and
cmp
test
mov
sub
out
mov
out
mov
pop
cltd
cmpsl
lret
push
mov
mov
xchg
push
neg
jns
push
mov
ljmp
inc
lea
adc
fnstcw
or
mov
xor
mov
mov
dec
ja
mov
int
push
not
push
cmp
rcll
pandn
aaa
aaa
aaa
lods
mov
xor
push
ja
xlat
pushf
add
mov
jmp
iret
jmp
cmp
mov
dec
mov
jne
cmc
ss
neg
mov
not
insb
mov
cld
push
sub
cmp
xor
xlat
cmp
cmp
cmp
mov
xor
out
pushf
iret
mov
sub
and
sahf
gs
shlb
mov
fbstp
aaa
aaa
aaa
lods
mov
xor
ljmp
lods
cmp
lock
sub
mov
not
push
cmp
daa
aaa
aaa
notb
adc
popf
fistpll
shll
std
xlat
cmp
cli
test
les
pop
aaa
aaa
xor
fidivrs
frstor
testb
testl
movsb
cmc
stos
mov
xor
arpl
cmp
jmp
add
leave
hlt
push
mov
popf
cmp
pop
xchg
aaa
daa
aaa
bound
xor
mov
xor
daa
cmp
ret
in
idivl
test
mov
lods
push
data16
xor
push
mov
sub
lock
das
mov
xchg
mov
mov
aad
push
mov
cltd
lea
rclb
dec
or
aad
ficoml
imull
mov
and
xchg
mov
and
outsb
cltd
fbstp
aaa
aaa
aaa
lods
mov
xor
aaa
push
mov
enter
xor
xor
push
mov
push
mov
mov
push
not
adc
mov
adc
in
outsl
bound
mov
jbe
sahf
sbb
les
pop
push
mov
jl
cmp
aaa
lods
mov
xor
cmc
mov
push
int
xchg
xchg
jl
out
mov
push
shl
add
fdivl
adc
aaa
aaa
aaa
aaa
enter
pop
mov
mov
aaa
aaa
aaa
xor
div
mov
aas
fdivl
push
fcompl
fstp
sbb
xor
xor
ss
push
neg
ss
enter
mov
mov
pop
mov
xor
aaa
aaa
aaa
fdivl
fdivl
or
aaa
push
jbe
out
out
cmp
push
cmp
push
mov
mov
mov
shll
aaa
push
mov
leave
lcall
mov
fucomip
js
push
mov
fbstp
aaa
aaa
aaa
lods
mov
xor
fdivr
mov
mov
jnp
shl
fwait
shr
mov
cwtl
lock
fnsave
xor
call
add
mov
repz
cmp
push
cmp
aaa
cmp
mov
mov
adc
in
not
sahf
fsubs
jecxz
loopne
xchg
dec
out
out
mov
cmc
cmpsl
lds
scas
cmp
mov
mov
lods
push
mov
mov
shl
xor
fbstp
aaa
aaa
aaa
lods
mov
xor
ss
neg
and
mov
mov
nop
in
rcll
jmp
push
sub
dec
xor
aad
jg
jecxz
mov
and
mov
cmp
ffreep
out
leave
call
mov
fbstp
aaa
aaa
aaa
lods
mov
xor
leave
enter
xor
ss
aaa
aaa
lods
mov
xor
mov
aaa
aaa
aaa
out
aad
mov
xor
xor
adc
aaa
aaa
aaa
aaa
enter
pop
mov
mov
aaa
aaa
aaa
xor
div
mov
aas
fdivl
push
fcompl
fstp
sbb
xor
xor
ss
push
neg
ss
enter
mov
mov
pop
mov
xor
aaa
aaa
aaa
fdivl
fdivl
or
aaa
aaa
lods
mov
xor
mov
aaa
aaa
fbstp
aaa
aaa
aaa
lods
mov
xor
sub
or
push
neg
xchg
or
iret
daa
mov
cmp
inc
xchg
shl
loope
sbb
enter
cmp
mov
xor
aad
ja
fistps
push
mov
push
shr
xor
enter
mov
in
ljmp
adc
pop
es
pushl
jecxz
xlat
push
mov
in
push
mov
add
leave
pushl
daa
push
push
mov
ret
mov
psubusb
sti
push
mov
mov
inc
bound
cmp
leave
enter
mov
jmp
mov
or
enter
lock
in
jae
rclb
jle
xor
xchg
bound
aaa
cmp
lock
jnp
mov
push
jbe
int3
faddp
call
and
ss
aaa
aaa
lods
mov
xor
fists
fadds
mov
mov
loopne
push
js
neg
ljmp
inc
fbstp
aaa
aaa
aaa
lods
mov
xor
xchg
and
aaa
push
not
aad
shr
in
push
shl
xchg
cmp
lahf
jmp
pop
push
mov
hlt
iret
jle
ss
aaa
aaa
lods
mov
xor
adc
mov
fstpl
mov
inc
dec
push
jne
shl
add
hlt
shrl
jmp
push
or
fbstp
aaa
aaa
aaa
lods
mov
xor
mov
push
mov
mov
push
mov
arpl
push
mov
ss
clc
xchg
mov
push
mov
orb
lods
mov
xor
daa
shr
fcoml
out
neg
or
hlt
pop
push
mov
dec
and
cmp
aaa
aaa
aaa
lods
mov
xor
shlb
and
push
shl
fcoml
mov
push
mov
fidivrl
shl
add
mov
ss
aaa
aaa
lods
mov
xor
popf
push
ja
mov
cmpsb
aas
cmp
ljmp
inc
insb
inc
push
mov
dec
inc
cmp
aaa
aaa
lods
mov
xor
xor
or
fildll
push
test
mov
loop
jecxz
xor
mov
cmp
out
addr16
movsb
les
call
push
aad
fucomip
fisttpl
pop
out
scas
inc
in
and
shlb
test
pop
pushf
aad
addb
inc
xchg
push
mov
jmp
mov
ljmp
sub
shlb
sbb
lea
mov
push
push
stos
mov
adc
xlat
aam
push
push
push
push
gs
xchg
xlat
xchg
pop
mov
nop
xor
jg
push
jo
mov
mov
fs
je
push
cltd
je
push
into
xor
push
push
push
push
push
mov
xor
sub
pop
shr
push
push
push
mov
into
xlat
nop
push
fists
pop
push
movsb
xlat
nop
test
push
jo
push
into
stos
sar
inc
push
xlat
lods
push
and
push
push
push
push
into
xlat
nop
push
fsts
pop
xlat
nop
test
push
jo
push
into
stos
shl
inc
push
mov
into
xlat
nop
push
xlat
imul
push
stos
popa
xor
jo
push
push
push
push
stos
mov
adc
xlat
aam
push
push
push
push
gs
xchg
xlat
xchg
pop
mov
nop
xor
jg
push
jo
mov
mov
fs
je
push
cltd
je
push
into
xor
push
push
push
push
push
mov
xor
sub
shlb
nop
test
js
add
stos
and
mov
push
into
xlat
nop
push
xlat
sub
rolb
sbb
test
push
jo
nop
test
inc
jo
popf
mov
into
xlat
nop
push
sub
fstpl
mov
push
mov
into
xlat
nop
push
xlat
mov
xlat
mov
mov
clc
push
inc
push
filds
xlat
nop
push
fstl
push
xchg
mov
mov
inc
mov
aad
stos
add
test
aad
pop
dec
fists
xlat
nop
push
xlat
xchg
push
mov
mov
push
push
stos
mov
adc
xlat
aam
push
push
push
push
gs
xchg
xlat
xchg
pop
mov
nop
xor
jg
push
jo
mov
mov
fs
je
push
cltd
je
push
into
xor
push
push
push
push
push
mov
xor
je
stos
stos
fistpll
xlat
nop
push
mov
into
xlat
nop
push
xlat
xchg
inc
mov
rcrb
push
cwtl
xor
call
lcall
les
xchg
mov
popa
push
push
push
push
cmp
add
pop
out
mov
jecxz
fcom
mov
pop
mov
pop
out
mov
xor
movsb
icebp
test
fnstsw
pop
out
mov
aad
shlb
pop
xor
jmp
xor
fwait
scas
std
xor
addl
push
int
in
fwait
push
loopne
mov
pusha
xor
mov
xchg
add
mov
into
xlat
nop
push
fists
push
sub
out
scas
jno
out
stos
or
aad
mull
test
mov
and
fsts
push
jl
pop
pop
out
scas
and
mov
aad
aas
leave
out
pop
out
mov
repz
push
push
xor
xor
fwait
xorb
and
xor
inc
call
pop
ljmp
mov
push
push
stos
mov
adc
xlat
aam
push
push
push
push
gs
xchg
xlat
xchg
pop
mov
nop
xor
jg
push
jo
mov
mov
fs
je
push
cltd
je
push
into
xor
push
push
push
push
push
mov
xor
push
push
push
push
into
xlat
nop
push
push
movsb
aad
fsubrp
inc
sti
mov
cld
pop
sahf
pop
out
movsl
stc
pop
ljmp
fwait
xor
adc
xlat
mov
pop
out
mov
aad
pusha
mov
adc
aad
sbb
jg
xor
lahf
icebp
fstpt
push
xor
test
mov
mov
mov
out
bound
out
pop
xchg
mov
xchg
out
mov
jecxz
pop
xchg
mov
inc
cltd
aad
xchg
dec
mov
ds
rcrl
pop
out
fwait
xor
sahf
fldl
xor
xor
xchg
std
add
cmpsl
cs
fwait
mov
into
xlat
nop
push
xlat
mov
xor
bound
test
movsb
pop
ljmp
xchg
xchg
sti
xchg
lcall
stos
popa
xor
jo
push
push
push
push
stos
mov
adc
xlat
aam
push
push
push
push
gs
xchg
xlat
xchg
pop
mov
nop
xor
jg
push
jo
mov
mov
fs
je
push
cltd
je
push
into
xor
push
push
push
push
push
mov
xor
adc
mov
out
mov
lods
aam
jge
lcall
addl
mov
into
xlat
nop
push
fists
push
jl
ljmp
jg
out
mov
adc
pop
out
cmpsl
mov
mov
jmp
pop
out
mov
popf
outsb
xchg
mov
and
test
mov
dec
xor
mov
push
push
push
into
xlat
nop
push
xlat
mov
aad
fwait
sbb
xchg
aad
push
and
aad
mov
aad
and
cltd
xor
xchg
dec
dec
mov
add
sbb
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
adc
add
cwtl
add
push
or
add
pop
loop
add
inc
sbb
xor
aaa
add
iret
or
add
add
cs
ds
loope
mov
lcall
xor
cmp
add
mov
add
ja
test
or
or
jb
mov
add
clc
jge
jle
add
xchg
jl
lods
mov
sbb
mov
jmp
in
clc
inc
jle
xor
sbb
adc
xor
insb
add
jnp
mov
aas
sahf
and
cmp
xchg
fsubrs
daa
add
outsb
pop
gs
or
mov
adc
stc
inc
ja
add
addr16
sbb
mov
adc
cmpsb
add
pusha
mov
arpl
sub
fdivr
icebp
call
mov
push
push
loope
add
adc
hlt
push
add
adc
pop
push
add
sbb
sbb
test
pop
add
push
add
xor
adc
or
add
dec
sub
inc
or
repnz
loopne
arpl
jbe
test
fists
jns
adc
add
incl
adc
push
add
dec
rcr
test
or
bound
push
jmp
cmp
mov
iret
jl
push
rcrb
add
or
lret
mov
and
cmp
cmp
popf
push
dec
push
ss
mov
push
cs
popl
pop
push
out
xor
das
dec
outsl
push
cmp
aaa
inc
inc
dec
inc
xor
cmp
pop
push
int3
dec
dec
in
push
repz
push
cmp
or
sbb
loopne
aaa
xor
fldl
push
push
dec
inc
enter
jns
cmp
xor
pop
out
into
adc
mov
push
push
pop
cmp
dec
inc
inc
cmp
int
and
xor
es
pop
inc
int
into
pop
cs
repnz
dec
stc
or
push
xor
addb
cmp
xlat
inc
push
inc
scas
pop
xor
inc
dec
popa
xchg
enter
pop
cmp
cli
sti
or
inc
nop
inc
addr16
outsb
pop
sbb
pop
pop
loop
xchg
add
bound
addr16
aaa
arpl
jg
outsl
outsb
jecxz,pt
imul
jne
and
mov
or
jns
arpl
fdivl
insb
imul
push
jl
dec
gs
push
out
je
cs
xchg
cmp
adc
push
inc
jb
in
fnstenv
sbb
and
sti
js
addr16
popa
cmp
mov
cmp
and
jl
jae
cmp
insl
sbb
cmpsb
stos
outsb
out
push
bound
inc
inc
xor
add
push
enter
mov
sub
jbe
dec
jne
data16
dec
outsb
test
imul
sbb
push
out
and
and
insb
jecxz
jl
imul
jmp
js
nop
pop
movb
pop
stos
xor
inc
jno
out
jns
sarl
jp
add
sarb
stc
xchg
add
mov
sub
stos
or
movsl
inc
xor
sub
jbe
jb
fucomp
push
jo
insb
jne
and
push
insb
imul
out
addr16
setp
movsb
cmp
popa
into
mov
jl
cmp
negb
add
sarl
lods
pop
add
mov
add
cmc
pop
in
pop
ret
jb
rolb
or
insl
add
fs
fstpt
js
popa
testl
cmp
rolb
and
add
pushf
ljmp
or
out
addr16
mov
push
clc
cli
outsl
add
movsb
and
mov
insb
ficoml
hlt
adc
push
xchg
dec
not
or
jo
jmp
inc
jmp
and
adc
xchg
mov
aas
lods
inc
mov
insl
xlat
shll
adc
adc
je
fcoml
mov
push
je
add
push
add
inc
push
inc
pop
sarl
xor
or
dec
inc
jp
lods
addb
