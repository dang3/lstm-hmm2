sbb
jbe
dec
hlt
aam
ja
aad
xchg
ret
hlt
xchg
sahf
cmpsl
inc
mov
bound
mov
inc
lret
sub
test
jae
das
jns
aaa
add
cli
mov
cmp
add
inc
cmpsb
fwait
add
sahf
lahf
into
lods
mov
sub
icebp
jns
jge
cmp
hlt
js
movsw
inc
pushf
cs
mov
pop
push
orb
mov
jae
imul
pop
das
and
in
testl
ret
sub
push
jbe
and
push
sarb
mov
out
add
popa
adc
data16
push
jle
jp
mov
mov
fwait
pop
sbb
sbb
mov
pusha
jle
call
mov
mov
stos
fbld
in
sbb
shll
pushf
dec
cmpsb
ret
clc
fdivrl
outsb
inc
and
push
js
mov
es
pop
repnz
inc
int
xchg
add
cmc
test
loope
jnp
inc
mov
jl
inc
pop
pop
xchg
lods
inc
push
push
mov
and
nop
rclb
dec
jnp
test
mov
es
dec
imul
mov
push
mov
cmp
push
xor
lods
test
lea
idiv
out
push
js
and
incl
addl
xchg
mov
mov
mull
icebp
dec
mov
sar
ret
loop
push
push
pop
cmp
push
out
push
iret
test
js
stos
and
cwtl
mov
arpl
std
inc
cmpsl
lods
popl
push
mov
ja
stc
in
xchg
or
xchg
mov
mov
jne
lods
dec
std
inc
ljmp
pop
lods
xorb
adcl
xchg
fldl
andl
sbb
flds
xor
jns
gs
dec
xchg
push
mov
jl
xor
dec
mov
mov
push
xor
pusha
push
popa
cmp
ret
fs
out
int3
mov
lock
fdivrl
push
jbe
fwait
or
mov
test
push
push
test
dec
cmc
scas
or
pop
push
cmpsl
mov
jecxz
jge
push
cmp
mov
jns
inc
call
push
mov
imul
fdivrs
ficoms
jbe
mov
lahf
imul
test
adc
sarl
test
cs
aam
dec
lcall
fwait
aas
xor
shrb
ljmp
inc
out
js
addl
leave
in
push
add
in
cs
aam
test
mov
push
pusha
imul
ret
dec
imul
push
or
int
call
lcall
push
int3
repnz
rorb
loopne
stos
mov
imul
stos
outsb
and
jl
or
ss
cs
xor
sub
lahf
movsl
cmovns
inc
repz
push
add
leave
loop
jle
rol
sub
jg
arpl
arpl
pop
imul
lea
xchg
or
sbb
pop
lret
mov
lcall
call
and
add
das
mov
hlt
jbe
test
add
addb
les
pop
inc
movsl
sbb
inc
and
mov
push
push
fs
adc
lahf
dec
adc
mov
icebp
fildll
cmp
pop
adc
add
rolb
test
sbb
pop
nop
pop
fistl
sbb
les
ret
popf
pusha
mov
es
pushf
das
mov
mov
mov
loopne
aam
shlb
push
hlt
fadd
inc
pop
xchg
stos
pop
cld
sbb
test
jmp
jle
std
notl
ds
push
pop
jg
shlb
loop
lret
pop
lock
fldenv
xchg
call
lods
or
scas
xchg
dec
int
in
sub
ss
pop
cmpsl
sbb
mov
cmpsl
in
cltd
or
sahf
lcall
scas
and
add
or
cmpsl
sub
and
fildl
inc
shlb
shl
imul
cli
ret
nop
data16
andl
into
rorb
push
loopne
dec
addr16
adc
mov
inc
jle
jbe
leave
mov
jo
mov
jle
fiadds
adc
xchg
sbb
cmc
aas
int
sbb
or
lret
sub
rorb
iret
aad
pop
xor
jl
sbb
mov
mov
out
sub
or
or
mov
mov
into
mov
js
and
aaa
outsl
adc
and
imul
jg
jae
sahf
rolb
pushf
cwtl
ds
pop
and
fs
leave
das
insl
cmp
adcb
lahf
je
push
das
xchg
xchg
iret
sbb
into
jno
addl
pop
fwait
mov
mov
outsb
jge
decb
cmp
mov
ret
xchg
jl
or
pop
xchg
pop
int
ljmp
sbb
mov
iret
push
std
or
jle
xor
or
lods
jg
movsl
xchg
push
mov
imul
and
popa
incb
pushf
mov
xchg
repnz
cmp
and
or
or
push
push
sbb
push
add
int
sbb
cmp
jle
and
dec
or
mov
push
test
clc
mov
xor
pop
int3
jl
xchg
lahf
push
sub
sub
lcall
and
mov
xchg
int
pushf
in
popf
pop
push
jg
cs
out
adc
imull
and
insl
dec
fisttpll
pop
xchg
aaa
test
xlat
pop
js
pusha
dec
push
jmp
movsb
in
sbb
mov
scas
hlt
rcrl
out
xchg
add
fiaddl
dec
or
mov
cmp
ja
dec
cmpsb
sub
xchg
sub
fstps
addr16
push
movb
movsb
daa
cs
jbe
sbb
push
sub
pushw
ss
mov
pop
test
lahf
push
cmp
jg
movsl
scas
dec
push
mov
loop
cld
xchg
push
inc
xchg
sbb
inc
push
loopne
mov
adc
fdivrs
mov
push
outsb
jp
cmpsl
dec
inc
fdivl
and
mov
lahf
inc
jl
inc
lock
imul
negb
mov
lock
icebp
push
lock
add
or
movsb
inc
pop
pop
mov
and
loopne,pn
out
fnsave
mov
test
roll
adc
add
sbb
lea
stc
xor
jnp
movaps
add
jo
mov
call
aas
stos
aas
jns
cmp
test
xor
lahf
lahf
pop
popa
pop
testb
jp
inc
das
sahf
bound
std
pop
dec
pop
sti
add
hlt
xchg
mulb
jno
pop
push
xor
lods
mov
cs
fdivl
into
cmpsb
xor
jo
inc
or
sbb
adc
jb
xchg
sti
sbb
orb
icebp
or
jb
sub
pusha
sbb
loope
xor
jnp
push
repnz
and
sahf
inc
mov
mov
es
shrd
repz
push
push
adc
lret
cltd
js
movsl
jge
mov
push
lea
sbb
mov
popa
add
adc
inc
cmp
stos
sub
lock
and
inc
daa
fcompl
pop
lret
mov
jnp
xor
adc
or
and
movsb
push
test
stos
mov
mov
fisubrl
mov
fisubrl
cmp
push
inc
scas
or
cmp
cwtl
icebp
out
xor
pusha
int
jns
fldcw
inc
iret
or
call
adc
js
scas
shll
mov
movsl
dec
xor
out
jg
stos
push
data16
inc
sbb
es
addr16
push
add
xor
adc
mov
inc
lea
cwtl
or
pop
inc
mov
lret
jecxz
aaa
push
iret
mov
pop
mov
mov
outsl
pop
cmp
imul
xchg
inc
lret
aaa
push
push
mov
jecxz
in
clc
dec
shlb
stos
cwtl
dec
addr16
js
in
sub
stos
rol
or
or
mov
pop
into
sti
mov
xor
cld
out
aas
cmp
xchg
mov
mov
inc
inc
or
addr16
sbb
or
insl
inc
mov
cld
jg
add
jno
mov
xchg
imul
lods
ss
mov
inc
cmp
test
mov
mov
xorb
icebp
mov
pop
push
inc
adc
loope
mov
xchg
in
gs
cwtl
cmp
and
scas
cmp
leave
mov
data16
add
inc
mov
das
test
sahf
push
stc
xchg
cmpsb
stos
leave
icebp
jae
aam
push
pop
add
loopne
mov
xchg
bound
xorl
cs
mov
aas
xor
outsb
mov
push
scas
mov
xlat
mov
movl
jne
icebp
push
adc
pop
cmp
andl
shrl
ret
insl
mov
inc
mov
pop
and
cld
jns
sbb
mov
or
pop
outsl
mov
lock
jbe
leave
orl
sub
jecxz
sub
mov
nop
xor
popa
iret
mov
pop
or
cmp
push
ret
iret
loop
outsl
mul
std
xor
fmull
jl
dec
sbb
movsb
pop
sbb
push
daa
cmp
mov
int
mov
mov
or
out
push
popf
iret
xchg
pop
lahf
prefetchnta
ret
stos
mov
and
mov
loopne
xor
imul
addr16
adc
lods
cli
sub
add
mov
and
ret
outsl
push
dec
pushf
jecxz
loop
pop
outsb
out
push
pop
mov
add
ja
mov
cmpsb
jg
push
stos
adc
addr16
popl
aam
js
sbb
pop
int3
add
ret
cli
test
pop
mov
cmp
outsl
sahf
push
cmpsb
in
adc
dec
sub
jae
mov
int3
xchg
xlat
xchg
sbb
push
nop
cwtl
hlt
add
je,pn
imul
ja
outsl
or
iret
in
aas
insl
push
pop
xchg
data16
rcll
xchg
je
loop
addr16
aam
and
ljmp
sub
xor
pop
cmpsb
stos
mov
sbb
push
aad
push
out
cld
imul
fidivrl
cmpsb
dec
add
lods
adc
pop
out
xchg
lods
adc
shr
into
out
negl
stos
xor
sub
jbe
or
inc
popf
mov
and
test
pusha
dec
push
es
div
add
imul
das
in
push
pushf
xor
test
jne
stos
fcoml
mov
push
mov
or
dec
cmpb
insb
cmpsl
aaa
mov
subb
push
pushf
jecxz
and
shlb
cmpsb
push
push
mov
xor
pushf
pusha
dec
cmp
xor
mov
iret
insb
mov
out
cmpl
pop
mov
mov
ja
icebp
xchg
mov
jae
dec
jne
jl
fdivs
imul
test
mov
xchg
pop
mov
inc
int
stc
push
lahf
or
mov
daa
adc
fadd
cmpsb
push
test
mov
stos
cwtl
ja
cmp
insb
mov
sbb
test
cmp
xor
sub
mov
add
mov
cld
aad
rorl
sbb
clc
mov
mov
push
inc
or
add
rolb
outsl
push
roll
sbb
inc
push
push
cld
dec
and
sub
cs
push
sarl
and
rcrb
int
jl
inc
mov
and
cmc
call
outsb
mov
jns
lods
lds
in
sbb
rcrl
rcrl
push
cs
pusha
ss
cmp
xor
jnp
lods
incl
daa
mov
sub
insl
addl
push
test
shll
adc
adc
notl
adc
xchg
add
mov
enter
xchg
jnp
in
jbe
push
test
mov
pop
cwtl
lret
dec
in
sub
testl
sub
frstor
fcmovne
mov
fs
dec
dec
test
ss
roll
les
inc
xchg
insl
xchg
mov
scas
adc
lock
adc
xchg
popa
bound
sbb
out
xchg
pop
daa
mov
inc
std
fwait
mov
inc
rorb
movsl
in
lcall
xor
push
inc
adc
ss
push
hlt
or
ljmp
adc
orb
js
in
xor
cwtl
push
rcl
cmp
in
int3
inc
dec
dec
addl
push
enter
in
loopne
aas
lcall
inc
lcall
pop
xchg
inc
lea
jno
call
and
pop
or
cmc
jno
fdivl
std
mov
mov
xor
test
mov
mov
aam
ds
lock
test
scas
lret
sub
push
std
adc
scas
sub
repz
jge
insb
push
mov
sub
clc
push
movsl
pushl
xchg
test
icebp
rcrb
pop
xchg
gs
push
test
pop
enter
adc
cwtl
mov
jb
repz
pusha
sbb
lahf
push
fcmovnbe
pop
cmp
mov
loope
jno
lahf
mov
mov
stos
push
add
cwtl
pop
aas
inc
cmp
mov
int
ret
sahf
call
pop
jae
stos
xor
in
sbb
sub
loopne
mov
mov
push
into
mov
or
rclb
hlt
cmp
jbe
pushf
cmpl
mov
dec
test
daa
adc
mov
test
add
daa
sbb
fnstsw
loopne
add
and
idivb
test
scas
mov
arpl
mov
js
dec
popf
jno
pushf
inc
pop
push
mov
dec
dec
dec
xchg
stos
icebp
push
lahf
mov
outsb
sbbl
jo
sub
scas
dec
mov
incb
dec
lcall
imul
pop
dec
mov
call
test
cwtl
mov
aam
inc
inc
xchg
or
cmp
xor
cltd
sub
pop
sbb
push
xchg
pop
mov
icebp
push
jl
inc
shr
mov
dec
fwait
cmc
pop
dec
mov
clc
in
out
shrl
jno
or
loopne
inc
in
fdivrl
adc
shr
or
cmpsb
mov
cmpsb
push
inc
adc
divl
xorb
ret
xchg
stos
xchg
orb
mov
scas
push
push
mov
pop
pop
jbe
cmp
pushf
lret
data16
xchg
imul
in
imul
push
pop
sub
jl
fists
dec
push
pop
push
hlt
imul
add
sub
jns
add
sbb
push
mov
in
rol
push
push
pop
jnp
mov
sub
cltd
dec
hlt
mov
loop
fcomi
out
roll
dec
add
add
mov
add
je
out
or
repz
clc
movl
inc
and
daa
fsubl
push
jae
xchg
mov
push
push
rcrl
addr16
sahf
xchg
stc
scas
test
jne
loope
dec
xchg
jae
in
ja
std
pop
notl
lcall
pop
les
fstp
das
mov
mov
mov
and
aam
stc
or
test
push
ljmp
or
ds
pop
and
lods
popl
xchg
jbe
icebp
or
testl
hlt
ds
out
mov
mov
jg
jae
mov
imul
out
xchg
popl
inc
ficompl
xchg
call
fistpl
inc
inc
call
dec
mov
add
mov
stc
fs
jp
pushf
jno
jp
movsb
incl
daa
inc
mov
dec
jnp
ja
incl
xchg
fisttpll
cmpsl
xor
pop
and
mov
xor
js
and
mov
jno
push
idivb
lcall
aas
jb
lret
pop
pop
push
mov
nop
cmpb
and
stos
jmp
push
sahf
and
jb
add
hlt
xor
cmp
in
int
pop
mov
pop
adcl
arpl
and
sbb
adc
addr16
cmp
icebp
and
pop
xor
sbbb
bswap
pop
pop
jmp
mov
inc
jno
in
inc
push
test
negb
outsl
push
push
scas
lock
mov
mov
dec
mov
dec
mov
push
xchg
jbe
jno
push
jb
cli
lret
testl
mov
push
push
inc
rclb
pop
js
or
iret
js
orl
pop
dec
push
pusha
out
inc
mov
mov
out
mov
mov
cltd
shll
mov
cld
scas
cwtl
fsubl
mov
arpl
push
jmp
jle
mov
jge
je
into
xchg
dec
xlat
mov
imul
mov
pop
push
xchg
icebp
or
testb
pop
push
sub
adc
mov
dec
dec
push
pop
mov
push
scas
fstl
pop
js
sbb
adc
jle
dec
aas
int
in
push
adc
rclb
fsubrs
xchg
iret
outsb
jb
push
imul
jle
and
xor
dec
lret
lods
rcll
sub
ret
cld
scas
push
jbe
ss
inc
inc
pusha
ljmp
xlat
stc
mov
push
or
hlt
xor
xchg
inc
fcoms
fisttpl
mov
mov
lock
dec
les
aam
push
loopw
pusha
jecxz
test
and
sub
es
lock
xor
insb
mov
pop
pop
and
out
stos
jle
test
cmp
bound
push
out
fildll
inc
mull
clc
add
mov
jns
icebp
and
cwtl
mov
pop
aam
in
hlt
fistpl
inc
or
cmp
in
imul
call
xchg
outsl
rcrl
mov
imulb
lret
fcmovnbe
cwtl
pusha
arpl
sti
push
inc
adc
or
pop
push
xor
cmp
jge
pop
out
lcall
pop
push
mov
jb
push
jb
es
aaa
shll
out
mov
or
sbb
out
pushf
inc
xchg
cmp
pop
adc
push
mov
leave
jle
xchg
lahf
pop
in
stos
sub
jae
push
or
cltd
pop
xchg
push
cwtl
or
test
hlt
pop
mov
jb
in
es
jp
int3
pop
jmp
mov
xor
dec
es
mov
pop
lock
sub
push
inc
adc
inc
push
rclb
sub
push
cmc
ret
divb
test
outsb
dec
mov
mov
fcompl
mov
daa
xchg
pop
mov
add
jne
cli
scas
out
out
adc
cmpl
test
or
sbb
push
js
sub
lahf
push
dec
add
loop
ss
in
cli
mov
pushf
movsl
push
push
dec
addr16
pushf
mov
cltd
jns
pop
outsl
lods
iret
pushf
inc
or
in
pop
popa
mov
pop
mov
mov
stc
mov
int3
cmp
fmuls
out
incl
jno
xchg
sub
arpl
mov
xchg
and
fdivl
jle
notb
mov
mov
or
fidivrs
inc
data16
int3
fstps
jl
insb
push
jp
xchg
out
sarl
mov
decl
jbe
cmp
cmp
sbb
add
inc
or
xchg
in
in
cmp
int
adcl
push
add
outsb
xor
xlat
pop
int
inc
add
xor
in
xchg
cs
mov
push
pushf
or
jae
lds
fildll
xchg
scas
pushf
and
icebp
jbe
fwait
and
scas
adc
cmpsl
mov
call
shlb
iret
push
push
sbb
outsl
push
xchg
adc
or
mov
and
xor
dec
std
jl
dec
pop
mov
inc
test
xor
inc
dec
repz
push
pop
or
shrl
call
mov
aaa
mov
hlt
mov
sub
in
sbb
enter
adc
or
add
sahf
decl
mov
mov
leave
test
lods
adc
fstpl
mov
add
hlt
add
mov
cwtl
inc
in
inc
call
sbbb
divl
mov
je
outsb
mov
pop
lret
jae
mov
jo
inc
rclb
pop
inc
cs
dec
out
test
jne
cld
sub
andl
mov
push
pop
je
sub
aam
test
cmpsl
push
int
push
push
ret
cli
clc
jne
imul
js
fld
xor
dec
test
pop
movsb
outsl
rorb
ficomps
test
pop
imul
sub
ss
mov
es
pop
iret
xchg
ret
xchg
loopne
insb
repz
sub
idivl
mov
or
or
cmpsl
cwtl
or
adc
out
xchg
pusha
es
mov
repnz
ss
lret
aam
cmp
adc
insl
roll
das
dec
ljmp
sti
frstor
sti
fistps
cmp
popf
add
xchg
pop
mov
adc
es
popf
inc
incb
outsl
ds
or
lret
add
jb
xchg
adc
fdivl
ljmp
in
cmovg
aaa
and
mov
data16
mov
inc
loope
into
jbe
fcoml
mov
adc
mov
inc
rorl
int
xor
sbb
fdivs
mov
aaa
into
in
rcrb
dec
mov
xor
cmp
pop
ljmp
lahf
sbb
adc
lock
and
and
xchg
sarb
cltd
cmpsl
mov
mov
inc
adc
mov
or
mov
sbb
cmpsl
mov
xorl
aam
and
xchg
shl
mov
cmpsb
push
xor
sbb
lcall
pop
adcb
or
in
push
es
xchg
xor
pop
hlt
inc
loopne
mov
aas
jbe
aad
inc
test
jo
adc
loop
pop
add
xchg
std
in
lcall
push
xchg
data16
out
int3
cli
jbe
push
jecxz
jl
sub
scas
call
pop
mov
mov
mov
fmul
mov
and
flds
pop
es
lods
inc
nop
inc
pop
cmp
push
xchg
pop
xchg
cmp
pop
inc
lods
jns
mov
jne
lock
pop
push
mov
scas
inc
int3
shlb
add
and
sbb
mov
cmc
loop
gs
out
orb
mov
mov
mov
and
mov
inc
dec
pop
shll
fs
sbb
pop
pop
outsb
push
add
sti
std
jo
scas
mov
lock
nop
cmp
adcl
dec
hlt
ret
mov
jo
mov
sahf
xchg
cs
cmpsl
jp
ljmp
sbb
cmpsb
pop
dec
ljmp
leave
mov
cmp
jmp
sbb
mov
cltd
pushf
mov
icebp
xchg
out
lret
shlb
enter
js
lds
xchg
nop
or
cmp
sti
dec
hlt
or
fidivrl
push
testb
cwtl
in
add
xor
or
sbb
fbstp
mov
pop
dec
mov
cmpsl
xorl
xor
or
push
outsb
aam
shl
test
push
mov
mov
inc
cmp
dec
push
sbb
aaa
add
jg
sbb
adc
sbb
ds
cld
pop
adc
and
out
jno
test
pop
push
xor
sbb
adc
testl
sub
push
mov
mov
mov
add
or
xor
push
add
ljmp
push
lods
ret
cmp
push
sbb
out
pop
dec
shrl
mov
push
cmpsb
adc
jne
xor
mov
cmc
rorl
xchg
add
pop
lea
out
pop
push
lods
das
cli
test
cld
je
fisttpl
cld
pop
jecxz
ds
mov
push
mov
es
insb
in
push
int
loopne
int3
sub
mov
jg
jle
outsl
lea
add
mov
dec
in
jg
ret
cmp
xor
int
out
sbb
xor
out
mov
mov
mov
or
imul
ja
addr16
insb
addl
mov
sub
daa
push
test
mov
outsb
mov
jle
scas
push
stos
les
xor
mov
loopne
lcall
arpl
pop
in
jle
sti
inc
shlb
adc
jge
lahf
mov
cli
jbe
int
or
dec
in
fs
sti
lods
lods
inc
loope
mov
mov
or
jnp
nop
push
pop
jl
lds
push
pop
jecxz
es
cmp
repz
lods
imul
loopne
jae
xchg
and
adc
lcall
subl
xchg
cmp
push
xchg
and
cld
inc
dec
int
mov
mov
push
mov
popf
push
decl
test
fiadds
test
aas
xchg
pop
and
dec
push
xor
cmpsl
in
les
xchg
xchg
inc
add
push
loopne
fstpt
add
add
icebp
movsl
mov
bound
mov
sub
outsl
movsl
push
push
jp
inc
in
mov
xlat
and
xlat
sbb
les
jbe
mov
hlt
inc
lods
ret
mul
mov
mov
xchg
xlat
push
sbb
sbb
push
sub
cmp
dec
js
aad
sub
enter
scas
stos
mov
lock
pop
xor
sbb
aad
movsb
into
leave
jbe
push
pop
out
and
int
mov
mov
cmp
mov
loope
mov
fst
mov
xor
cmp
xor
int
cmp
pop
pop
adc
jbe,pn
cmpsb
mov
cmp
pusha
imul
xor
jnp
ds
jmp
in
xchg
sub
imul
push
outsb
aaa
out
jo
inc
cmc
sarb
inc
mov
cwtl
daa
shlb
mov
mov
xchg
and
lds
in
daa
rcr
inc
pop
mov
cwtl
cmp
stos
cmp
xorl
ret
gs
jp
pop
popa
or
or
pop
xchg
mov
lock
lret
push
lcall
mov
fsubrs
testb
mov
adc
xchg
adc
push
sbb
rclb
mov
sub
mov
or
rolb
ljmp
push
cld
add
testl
lods
in
clc
xchg
jl
inc
xor
jae
push
outsl
cmpsb
fistl
fxch
inc
mov
lods
test
fstpt
sarl
mov
inc
fs
int
sbb
arpl
mov
jb
fists
sub
aas
sbb
mov
sti
pushf
fcoml
push
imul
hlt
outsb
or
cmpsb
cld
mov
jle
sti
cmpsb
mov
jno
test
mov
inc
xor
sahf
js
mov
jae
outsb
cmpsb
out
cmc
test
xor
cmpb
ss
sbb
stc
push
out
sbb
lods
test
cmp
loopne
mov
sub
adc
stos
ret
and
or
mov
sub
add
fidivs
adc
mov
rolb
and
pop
cmp
pushf
jns
ror
or
pop
sub
sub
leave
icebp
xchg
cmp
rclb
into
out
and
sub
dec
xor
mov
sub
sub
lds
sbb
cmpsl
pushf
mov
inc
cmp
cmp
daa
fistpl
jnp
jnp
xorb
mov
cmpsl
aad
pop
xchg
loopne
sbb
push
mov
test
adc
psubusw
xchg
pop
fldt
test
xchg
mov
sarl
add
ud0
add
add
je
mov
xor
sbb
gs
push
lret
add
mov
push
insl
dec
add
testb
int3
cld
or
and
ljmp
jl
jp
mov
jg
in
out
jp
dec
enter
std
lret
push
sbb
pop
xor
jge
subl
inc
arpl
aas
shlb
std
enter
push
je
fsin
jb
adc
xchg
pop
xchg
push
in
je
dec
cs
mov
shr
mov
rcl
call
push
adc
pusha
outsl
imul
dec
xor
mov
jecxz
push
addr16
call
mov
lret
adc
nop
jl
ret
cmpb
ror
cmp
lahf
mov
lea
daa
xchg
mov
aaa
ds
sub
inc
iret
inc
iret
insb
sbb
pop
sahf
fbstp
rcrb
ja
sbb
cmp
mov
mov
sahf
out
mov
loope
imul
sub
in
push
sbb
push
mov
mov
incb
jecxz
adc
mov
or
mov
add
inc
pop
jmp
push
sub
scas
sti
and
or
inc
and
call
cmp
loop
pop
push
mov
pusha
pop
testb
push
gs
fwait
cmpsb
push
cwtl
or
push
or
or
or
sbb
cmpsl
sub
loope
adc
mov
lret
cmp
push
jg
aaa
mov
jp
lock
xor
mov
add
pop
push
xor
cwtl
fildll
repnz
addr16
jecxz
adc
stc
test
and
dec
in
into
mov
jb
push
iret
rorb
push
scas
add
push
pop
pusha
mov
push
add
adc
pop
sbb
insb
mov
sbb
cmpl
lret
jp
xchg
jb
mov
enter
cmpsb
aam
sub
inc
cmp
ret
aam
mov
push
cmpl
jg
fbstp
push
xor
jl
in
int
movd
test
incl
fcmovb
movsb
inc
lret
popf
inc
out
mov
outsl
pop
inc
sub
nop
sbb
xchg
out
mov
stos
and
call
into
xchg
sbb
add
lcall
loope
ret
sbb
mov
sbb
test
notb
jo
push
xchg
lock
insl
mov
jno
cmp
or
push
mov
stos
pop
sbb
dec
in
lods
ljmp
pop
inc
les
mov
ljmp
pop
out
jno
jo
cld
push
jne
enter
cltd
inc
jp
inc
pop
mov
add
sub
out
add
cwtl
aam
imul
icebp
sub
shrb
es
and
lret
rclb
rcr
int3
lds
pop
mov
adc
idivb
mov
mov
in
sbb
xor
push
scas
push
pop
ss
mov
pop
movsl
jns
std
pop
cmpsb
mov
or
cs
outsl
pushf
test
push
pop
cmp
mov
pop
pop
sub
xor
jle
mov
idiv
mov
mov
sub
sarl
mov
loopne
dec
sub
movsl
mov
mov
dec
dec
add
push
scas
sahf
in
test
inc
shl
inc
or
or
or
in
fcom
sbb
adc
pop
scas
fidivs
notb
push
xor
je
pop
fwait
cmp
xchg
pop
mov
cmp
mov
int3
fisubl
imull
bound
mov
rcrl
mov
dec
mov
push
adc
outsb
ja
mov
xchg
mov
pop
aas
push
popf
fdiv
hlt
pop
inc
jp
movsl
jo
imul
mov
cmpsl
ljmp
lcall
shlb
mov
loopne
fistpl
xor
test
dec
notb
fisubl
out
pop
add
dec
mov
mov
xchg
daa
xchg
sub
jg
popf
sbb
call
push
stc
sbb
bound
xor
xchg
aaa
aam
mov
jb
and
fwait
stos
cmp
movb
arpl
std
out
icebp
push
push
in
mov
call
push
jnp
inc
adc
rcrb
stos
jns
mov
jle
sub
dec
nop
and
stos
mov
push
dec
fsubrs
fistpll
inc
xchg
push
jb
jne
lahf
lcall
ficoms
mov
cmpsb
xchg
sbb
imul
mov
cli
and
mov
stos
sub
clc
jl
xchg
pop
xchg
ss
pop
repnz
inc
dec
jne
pusha
lods
push
cmp
mov
lock
repnz
push
jle
sbb
mov
inc
pop
jae
jne
xchg
inc
addr16
cld
sbb
mov
jo
pusha
add
lods
add
push
pop
inc
mov
inc
push
lahf
push
lret
sbb
scas
test
les
nop
xor
xchg
dec
or
ljmp
push
mov
jbe
xchg
imul
fsin
sbb
pusha
pop
pusha
or
dec
pop
pop
jne
out
xchg
in
mov
movsb
mov
cmp
mov
cmpsb
scas
imul
and
xchg
dec
test
xchg
sub
mov
jmp
jp
hlt
mov
push
sbb
mov
pusha
jl
loopne
ffree
inc
mov
loop
test
ljmp
pop
mov
push
or
push
popa
pushf
xor
in
movl
lea
mov
aas
xlat
movsb
test
addr16
jo
outsb
ljmp
mov
addb
mov
test
mov
lret
hlt
dec
add
jp
mov
inc
pushf
aam
lahf
outsb
inc
mov
mov
or
jo
or
sub
shll
xor
pop
push
push
cmp
pushf
out
mov
pushf
outsb
jp
pop
sti
or
fwait
arpl
sub
aas
or
stc
iret
addr16
repz
in
pusha
mov
lret
or
pop
fs
xor
mov
xchg
push
and
dec
and
xor
cmpsb
aas
in
jns
or
aad
ja
mov
add
jl
add
mov
idivb
dec
rcrb
push
jno
inc
or
jne
or
and
rcrb
cmp
inc
jg
jno
or
jmp
repz
es
nop
and
sbb
sbb
xor
jecxz
add
in
dec
mov
add
adc
xchg
and
shufps
insb
ficoml
mov
pop
loop
inc
movsb
test
arpl
mov
jmp
pop
scas
mov
movsl
das
shll
mov
je
mov
cmpb
fwait
dec
lods
mov
stos
inc
cmpsb
mov
mov
into
ds
loope
mov
inc
mov
or
cmp
in
push
fidivl
mov
push
aas
lcall
xor
cwtl
insb
stos
xchg
insl
push
out
ljmp
mov
mov
rol
fcoms
nop
dec
std
mov
jp,pt
xchg
xchg
bound
xchg
int3
movb
mov
fucomip
js
ljmp
or
nop
shrl
add
mov
int
jne
scas
push
lahf
pop
fmulp
stc
in
out
int
arpl
rcl
or
int
mov
adc
test
call
fistps
inc
add
outsb
repnz
push
in
repz
fisubrl
es
mov
push
mov
mov
cmp
pop
test
xchg
lock
rolb
mov
lret
mov
fwait
imul
xchg
push
jl
xor
pop
stos
shl
mov
es
jb
inc
arpl
xor
pop
pusha
cld
jae
or
xlat
adc
pop
testl
xchg
out
sahf
sbb
push
scas
jns
cmp
fucomip
dec
stos
push
sub
outsl
cli
xor
add
xor
xchg
movsl
sti
sub
sti
stos
lock
cmc
sub
mov
jg
mov
jg
pop
enter
push
das
xor
mov
fdivrl
mov
xchg
mov
add
inc
or
cmp
pop
jg
xchg
lahf
xor
fildll
clc
or
loopne
or
repnz
push
cwtl
xchg
jns
gs
movsb
xchg
xchg
xchg
sub
loopne
mov
ss
jae
pop
out
shrb
cmp
aaa
push
mov
inc
xchg
cli
js
in
push
ds
cld
sub
cmp
decl
and
imul
sahf
outsl
adc
jbe
jb
shl
dec
cmpsb
xchg
outsw
pop
mov
xchg
jb
pop
stos
sub
inc
sbb
inc
iret
mov
dec
mov
shrb
outsl
cmp
outsb
push
sub
sahf
cmc
xor
addr16
ret
pop
pop
xchg
xchg
rolb
mov
enter
jo
insb
xchg
lret
lds
pop
inc
mov
xchg
mov
mov
stos
lret
ret
inc
movntq
push
sbbl
push
xchg
adc
lock
outsl
xchg
clc
add
out
push
xchg
out
call
sub
xchg
and
xchg
cmp
xchg
xor
mov
idivb
les
mov
and
mov
scas
push
andl
fs
das
repnz
mov
or
mov
fwait
xor
stos
push
inc
bound
lcall
and
insb
lahf
mov
inc
outsl
es
ret
pop
sahf
adc
popl
out
int
mulb
aas
push
mov
pop
add
inc
iret
ret
push
jne
lret
loope
dec
mov
mov
cltd
sbb
clc
dec
iret
push
xchg
mov
push
lret
pop
jmp
jge
dec
scas
inc
inc
inc
sub
hlt
lock
and
scas
xchg
add
loopne
std
push
cs
jb
cli
xchg
scas
mov
lods
sub
sbb
sbb
es
push
stos
inc
cmp
fwait
add
data16
push
jl
insb
lcall
aam
pop
push
std
pop
popf
loope
inc
inc
pop
mov
jecxz
aam
mov
cli
push
add
xchg
push
mov
popl
loopne
repnz
rcl
and
xchg
nop
lret
cmp
imul
popf
arpl
dec
cmp
enter
daa
shlb
mov
mov
and
add
mov
dec
out
jl
xchg
xor
and
mov
fiadds
scas
push
inc
xor
or
pop
mov
aas
mov
dec
insl
dec
push
push
adc
mov
aaa
out
xchg
xor
cmc
and
or
clc
test
sbb
shrb
push
xchg
loopne
stos
or
sub
mov
xchg
mov
cmp
mov
fdivs
sub
daa
fldl
stc
fbstp
faddp
pop
xchg
mov
add
jp
or
lahf
imulb
ret
sti
loop
inc
jg
icebp
xchg
jp
scas
divl
in
jle
ret
pop
mov
insb
in
js
or
jle
imull
andb
mov
test
mov
inc
jg
dec
lds
int3
cmpl
adc
mov
sahf
fsts
jge
je
pop
pop
fbld
push
push
out
pop
test
push
sbb
dec
pop
loopne
dec
mov
xchg
shrb
outsb
jle
data16
pusha
jg
js
jle
xchg
rolb
rclb
in
push
jbe
mov
dec
and
and
fwait
add
cmpsb
mov
cs
leave
or
jbe
sahf
fistpll
mov
pop
in
dec
jecxz
dec
fs
mov
in
rcll
lret
or
mov
mov
aaa
imul
or
mov
fisttpl
or
into
je
cs
cmc
add
inc
lea
mov
jp
jg
jae
popl
cmpsb
push
fwait
inc
xchg
aaa
jl
inc
call
push
lcall
jg
out
icebp
mov
icebp
xchg
mov
lock
cmp
pop
imul
ljmp
in
xor
mov
ror
sub
sbb
jge
xlat
addb
dec
pop
xorb
push
xor
mov
mov
mov
ret
mov
mov
jmp
js
mov
leave
inc
cs
add
and
add
cmpsb
fsubs
jnp
nop
lds
out
and
push
mov
data16
data16
dec
es
mov
popf
or
mov
mov
mov
insb
push
jae
js
mov
mov
jbe
idivl
cmp
xchg
jl
cmp
cmpb
push
mov
jns
or
pushf
lret
ds
ficoml
cmp
rorl
lret
jb
mov
and
iret
shrl
fs
lcall
xor
push
cmpsb
test
xchg
jecxz
je
enter
lea
fsubp
push
in
ret
enter
out
mov
les
cmp
push
jg
sbb
out
aaa
in
aam
std
xchg
pushf
mov
ds
pop
test
mov
add
lcall
mov
push
dec
xchg
ficoms
add
inc
push
adc
cmc
adc
out
jle
shrl
xchg
push
jmp
adc
pop
mov
mov
stos
cmp
mov
xor
jnp
xchg
movsl
shr
jnp
dec
cmpsb
add
icebp
inc
mov
icebp
push
jge
inc
fimuls
cmp
lgs
jp
pop
add
jmp
xchg
push
aaa
loope
jl
pop
pop
femms
addb
mov
sbb
add
insl
stc
bound
inc
addl
sahf
cmovle
inc
fimuls
das
jecxz
fcoml
lock
mov
test
xchg
add
movsl
fwait
mov
adc
pop
pop
test
dec
add
jg
mov
stos
add
xchg
pusha
mov
ja
push
cmp
cmp
jge
dec
shll
orl
cmpsb
inc
push
imul
insl
daa
gs
push
jo
xchg
jl
movsb
test
sbbl
in
push
pop
and
cmp
sbb
dec
and
dec
pop
arpl
insb
mov
pop
rcrb
int
pop
repnz
push
jl
ret
pop
fildl
xor
dec
jg
jecxz
lret
jp
pop
lcall
mov
xor
fstps
and
lcall
push
push
ret
jo
push
add
mov
test
jb
ja
sbb
call
imul
shr
mov
dec
add
cli
and
xor
sub
pusha
jb
test
cmp
in
mov
scas
je
xchg
scas
cmp
jns
lret
aaa
push
jl
xchg
repnz
icebp
mov
ss
sahf
lea
dec
mov
sbb
popa
ret
je
and
mov
test
mov
jne
pop
pop
lahf
loop
adc
insl
xor
je
push
das
cmp
lret
popf
icebp
out
and
cmpsb
subb
pop
loopne
ss
mov
xchg
lcall
in
push
push
loope
push
inc
scas
mov
lcall
je
jbe
mov
jno
das
std
aad
test
repz
push
push
lret
out
sbb
push
and
jle
cmc
lods
iret
leave
xor
xorl
fists
es
mov
repnz
mov
daa
or
inc
lods
idivl
fildl
xor
scas
fadds
or
cli
decb
xchg
lahf
ss
xchg
pop
push
cmpsb
sub
scas
xchg
clc
and
pushl
sub
negl
cmp
test
cmp
fwait
adc
and
adc
pop
iret
arpl
pusha
fiaddl
fisubl
jno
pop
les
jle
les
xor
into
adc
inc
jno
imul
xor
into
mov
mov
loope
inc
mov
out
push
xchg
imul
jle
divl
int3
pop
leave
lods
std
mov
rcl
mov
mov
les
xchg
fbld
push
mov
add
mov
mov
cs
xor
xor
pusha
icebp
fldt
cmp
lods
les
push
dec
cmpb
std
xor
inc
sti
in
push
push
inc
iret
adc
fsubl
loopne
mov
pop
das
mov
or
pop
fnstsw
daa
rclb
sbb
sub
fcoms
pop
adc
lret
cmp
rorb
xchg
push
pop
iret
pop
stos
stc
xor
adc
rorl
mov
xorl
jle
xor
pop
lock
je
pop
movsl
adc
fcomps
inc
jb
mov
js
push
imul
mov
inc
rcrl
clc
ds
dec
xor
sub
push
xchg
out
pop
dec
out
fwait
mov
roll
cmp
mov
add
jmp
enter
and
mov
push
and
cmc
dec
sbb
mov
inc
jmp
dec
into
mov
pusha
xor
add
hlt
not
daa
mov
xchg
xchg
pushf
pop
or
pop
inc
and
mov
jno
pop
or
scas
iret
xchg
stos
sti
xor
data16
and
pop
pushf
insl
imul
push
pop
divl
xchg
xchg
cld
inc
mov
orb
sahf
into
push
pop
adc
ret
mull
dec
inc
lcall
or
or
fldt
mov
jne
das
sub
ljmp
sbb
xor
jb
aad
sbb
adc
or
push
sti
loope
cmpsb
mov
ljmp
lahf
fxtract
imull
in
add
bound
add
in
imull
scas
into
dec
cltd
inc
jb
xor
rol
les
inc
jo
hlt
xchg
dec
push
psubusb
scas
int3
adc
xchg
imul
push
hlt
pushw
addr16
insl
movsl
and
inc
xor
icebp
cltd
cmp
xchg
pop
stos
and
cmp
and
lods
push
pop
push
idivb
inc
into
mov
ljmp
xchg
xor
stos
stos
shr
mov
cmpsb
ja
xchg
jl
mov
loope
xor
ret
mov
inc
jecxz
and
repnz
int
jbe
mov
lock
stos
xchg
fs
sbb
or
or
ret
movsl
add
push
push
lods
sbb
lret
popf
add
mov
or
push
aas
mov
movb
aam
cmp
repz
movsb
lods
mov
push
dec
out
stos
shrl
lret
xorb
mov
add
lcall
jno
test
fdivrl
push
es
aam
fdiv
mov
fcoms
sti
dec
sbb
xchg
test
mov
jle
shl
adc
or
sub
adc
pop
icebp
push
fisttpl
adc
jbe
repz
xor
mov
dec
sbb
jmp
mov
xorl
pusha
inc
pushf
mov
push
fs
add
repz
lock
nop
mov
jecxz
pop
fidivs
scas
aaa
cwtl
cmp
xor
or
in
xor
dec
nop
mov
sub
pop
cmp
mov
pop
sub
enter
mov
xlat
lods
std
push
out
scas
pop
loopne
andb
mulb
and
lods
gs
push
or
xor
pop
outsl
dec
mov
clc
pop
pop
and
int3
scas
sahf
mov
mov
lock
sub
int
into
enter
pop
adc
jbe
in
iret
adc
out
daa
ss
sub
adc
sbb
lret
or
imull
mov
test
add
shll
cmpsb
cmp
sbb
arpl
dec
nop
pop
cmpb
mov
mov
ljmp
add
jl
rclb
and
out
fcmovne
sti
cmp
pop
dec
ja
inc
xchg
xlat
jbe
fsts
mov
xchg
jne
pushf
mov
mov
movsb
das
xchg
push
in
jmp
sarl
imul
fmuls
mov
inc
rol
or
sbb
pop
nop
xor
inc
jg
out
jnp
in
lds
mov
bound
pop
aad
push
shlb
out
push
cltd
shlb
mov
loop
jecxz
sbb
jno
xchg
scas
repz
out
jmp
add
pop
cmp
jecxz
mov
and
mov
pop
add
fdivs
mov
xlat
push
stos
dec
jl
jbe
lods
inc
std
push
inc
shrb
or
adc
inc
stc
mov
inc
loope
cmc
and
outsb
repz
jp
divb
loopne
inc
icebp
lret
mov
mov
sahf
clc
add
mov
pop
mov
inc
sbbl
inc
push
stos
scas
pop
imul
push
arpl
inc
add
ss
orb
fiadds
push
pushf
ss
and
stc
ret
cmc
mov
gs
das
das
push
fcmovbe
xor
dec
arpl
mov
mov
jmp
cld
sahf
addr16
aas
xchg
mov
xor
lcall
mov
sbb
push
into
inc
adc
cmpb
add
and
sbb
icebp
jmp
xchg
inc
into
push
cmc
sbb
xor
fmulp
push
rcrl
out
je
shrb
pop
or
cld
imul
adc
les
negl
mul
fwait
xlat
mov
cli
sti
mov
fwait
arpl
out
mov
mov
es
clts
add
cs
inc
rorb
js
mov
aam
xchg
cmp
mov
add
mov
aad
out
ds
xchg
bound
mov
cmp
jnp
movsb
cmp
in
scas
test
aam
fcmovb
cli
pop
xchg
out
imull
adc
std
imul
call
xor
std
inc
int3
repnz
add
xchg
or
data16
jmp
cld
jbe
ljmp
push
push
in
mov
xchg
incl
sbbb
ja
int
in
xorb
jne
sub
mov
or
sub
into
sbb
jp
repnz
mov
leave
lret
mov
push
imul
arpl
jns
pop
pop
pop
mov
decb
jne
xchg
jl
ds
js
jmp
daa
imul
push
or
subl
dec
inc
and
inc
mov
jne
data16
jge
jge
pop
sarl
or
sbb
inc
adc
or
mov
mov
adc
pushf
mov
insb
pusha
mov
insb
xor
inc
fs
mov
push
push
xchg
mov
outsb
roll
sbb
aas
mov
xchg
pop
sbb
add
mov
int3
push
bound
sub
sub
cmp
cs
out
cmp
decb
cs
mov
adc
in
aaa
jo
xchg
mov
lret
lret
test
mov
cwtl
stos
dec
pusha
pusha
sbb
cmp
sub
stos
mov
inc
into
into
mov
jno
fsubs
xlat
cmp
cmp
jle
popa
rcrl
cld
cmp
mov
xor
and
dec
outsb
addr16
ret
sbb
popa
jmp
fldenv
push
ja
mov
push
mov
mov
inc
scas
jnp
fcmovnb
xchg
mov
dec
ss
addb
cmpsb
and
xchg
rep
xor
inc
sub
cmp
xlat
sub
fsubrl
scas
scas
add
clc
movsl
ret
xchg
lods
or
movsb
sbb
sahf
cmp
push
pop
std
push
aaa
xchg
loopne
adc
inc
mov
jno
es
es
shlb
adc
push
insb
repz
push
push
daa
cmp
cmp
and
lret
push
jo
mov
int
sub
movsb
xchg
in
and
jbe
loope
ljmp
movsb
xor
int3
inc
mov
dec
mov
add
data16
cmp
test
xor
sbb
mov
pop
add
mov
xchg
cs
and
sbb
fbld
and
cs
adc
pop
ljmp
popa
adc
adc
pusha
add
jge
sahf
jne
xchg
add
dec
mov
cmp
sub
lret
inc
and
sub
cmc
push
mov
inc
out
je
xchg
arpl
fsubs
in
mov
push
inc
push
push
mov
aad
repz
and
pop
test
pop
lret
testl
out
std
jne
test
scas
std
les
cli
gs
sbb
pop
rcll
outsl
pop
cmp
push
stos
xor
push
enter
xor
fldcw
cmp
sbb
lea
scas
jae
or
jo
push
fcoml
and
pop
adc
xor
add
out
push
lds
mov
insb
addr16
ljmp
mov
sbb
lds
in
imul
sub
pop
cmpsb
or
pop
pop
mov
cmpsb
jbe
stc
pop
orb
or
xchg
cmp
push
or
pusha
mov
inc
test
imul
inc
lods
jmp
mov
es
fists
sbb
sub
loopne
mov
dec
mov
pop
test
lock
cmp
lcall
mov
inc
bound
stos
and
xchg
fisubrl
sbb
divb
adc
leave
lds
cmpsb
or
adc
adc
repz
add
pushf
and
mov
in
mov
push
imul
cmp
mov
outsb
clc
lds
sbb
shl
cwtl
in
pop
out
sub
mov
push
xchg
stos
cmp
jmp
xchg
cmp
push
lahf
inc
loop
mov
jb
movsl
jp
mov
pop
and
imul
mov
xor
push
lahf
and
mulb
xor
orb
out
sbb
pop
and
aas
ds
test
jmp
ffree
jnp
insb
or
jge
dec
adc
sbb
loopne
jo
sti
or
xlat
daa
pop
pop
push
leave
out
fildl
push
pop
dec
or
inc
out
popf
and
lds
dec
ror
fisubrs
icebp
or
pop
mov
xor
int
cs
sub
loope
sub
jne
pop
movsb
hlt
jbe
scas
clc
cmp
lret
or
popa
push
inc
jg
es
sub
stos
nop
mov
dec
mov
lahf
pop
aas
add
mov
mov
mov
mov
or
inc
les
jbe
xchg
rolb
ljmp
xor
outsb
out
fnsave
xorb
pusha
cmp
push
mov
call
mov
mov
std
or
icebp
int
movsb
andl
cmpsl
sub
sbb
sub
mov
out
js
dec
mov
cmp
rorb
bound
arpl
in
xor
xchg
inc
loopne
sbb
inc
dec
in
adc
add
xchg
jmp
insb
mov
aam
xchg
cmc
jp
mov
inc
inc
int3
int
mov
pushf
repz
and
maxps
scas
pop
outsl
cltd
add
arpl
and
inc
lahf
pushf
add
cltd
or
mov
adc
icebp
fisubrs
jecxz
data16
mov
ljmp
mov
mov
out
and
fldl
imull
and
cld
sub
insb
js
into
popf
fsubr
or
into
jle
push
dec
sub
ret
scas
nop
mov
mov
addr16
cmp
pop
inc
xor
mov
or
pop
push
loopne
pop
adc
lock
inc
push
xchg
fnstsw
inc
mov
fadds
xor
stos
lcall
cmc
pop
xchg
sub
call
mov
sti
or
inc
add
add
dec
fistl
pushf
inc
cwtl
test
aas
pop
pop
fs
jle
movsb
xor
rclb
mov
dec
push
ljmp
sub
jns
xchg
mov
or
sub
aaa
cli
notl
or
fidivrl
fcoms
or
outsb
pop
xchg
pop
push
and
scas
dec
dec
mov
mov
adc
bound
xchg
mov
sbb
fistpll
or
jo
push
rsm
mov
test
shl
inc
lock
jo
inc
dec
repz
jno
xchg
jbe
push
push
push
pushf
push
icebp
inc
iret
lods
cltd
nop
and
mov
dec
aaa
mov
mov
fmulp
loop
pop
movsl
add
cmp
jecxz
dec
scas
mov
and
or
outsl
or
inc
push
sti
jp
cs
cltd
mov
push
ss
push
ljmp
fldl
cli
xchg
xchg
sbb
jmp
insb
subb
cmp
pop
inc
movsl
imul
data16
invd
dec
and
in
xor
test
fdivrs
jmp
jge
bound
jecxz
lock
dec
lret
lock
mov
sbb
xor
roll
dec
in
pusha
mov
movl
or
jbe
push
or
int
sbb
dec
stos
js
xorl
rolb
push
shll
dec
cmp
jp
mov
fcoms
out
pop
add
je
fldcw
into
rcr
iret
mov
mov
into
sahf
mov
les
pushf
loopne
xchg
jae
out
jbe
inc
pop
pop
iret
lret
push
mov
xor
jnp
fcmovb
push
rcll
mov
lods
aad
dec
xchg
loopne
test
inc
int
pop
mov
loop
pop
jmp
dec
add
pushf
iret
sbb
push
insb
add
mov
ja
aad
ja
mov
mov
add
mov
arpl
xchg
fistps
mov
and
pop
rcrl
jg
hlt
ds
into
dec
pop
and
push
sub
cli
push
mov
not
sub
cmp
cs
lods
mov
lock
fcomi
mov
loop
push
or
inc
adc
add
stos
je
fs
cld
jne
add
clc
sub
fs
xchg
cmp
ficoml
mov
xchg
dec
scas
fidivs
mov
push
orl
ja
mov
sub
orl
or
add
sti
outsb
add
mov
sbb
repz
or
mov
sbb
flds
cmc
sbb
pop
mov
xchg
sbb
fsubs
cmp
push
imul
rorb
in
cmp
push
fiaddl
call
cld
push
sub
mov
cld
adc
pop
sarb
insl
jo
out
popf
sti
and
pop
loopne
xor
xlat
mov
repnz
mov
shlb
repz
sbb
pop
pop
mov
mov
cmp
push
out
cmpb
cmpsb
outsb
sbb
mov
jbe
jnp
and
add
pop
mov
sub
xor
push
insl
sahf
dec
cmp
bound
out
jp
data16
cmpsl
push
std
pusha
pop
add
repz
out
jno
hlt
xchg
fwait
das
in
sub
xchg
mov
dec
stos
mov
ja
in
cmp
jge
and
repz
push
leave
mov
cs
cltd
hlt
dec
mov
in
cli
outsl
sti
pop
xchg
push
add
sar
dec
add
lret
idivl
xchg
fstpt
adc
sbb
bound
mov
sbb
push
icebp
aad
push
xor
push
cmp
sbb
out
xor
testl
pop
les
sbbl
dec
dec
cs
adc
pop
pop
mov
lock
xchg
push
std
mov
insb
rcrl
insb
pop
scas
pushf
push
pop
das
jle
xchg
jns
lock
mov
sub
xor
stos
xchg
push
mov
jo
mov
cwtl
sar
fistl
clc
aas
fisttpl
pop
jbe
or
push
arpl
icebp
into
popa
imul
ss
movups
lcall
jns
or
jne
jmp
mov
arpl
lcall
data16
jp
inc
jae
popa
pop
gs
mov
shll
js
sub
lcall
out
and
push
xchg
insl
ds
dec
sub
in
xor
mov
jno
mov
and
push
push
in
sahf
pushf
aaa
int3
arpl
push
in
shlb
mov
enter
mov
sarl
fldenv
mov
pop
mov
push
icebp
aas
xor
and
ss
xor
and
insb
pop
mov
mov
xchg
push
dec
or
push
testl
lods
push
xchg
inc
xor
mov
jne
loop
fwait
test
dec
cmp
cmp
lock
cli
add
adc
xchg
or
jb
sub
leave
or
sahf
sti
and
push
sbb
adc
cltd
add
push
sub
out
int3
outsb
sbbb
movsl
stos
pop
dec
addl
int3
add
or
cmpsl
mov
mov
sub
popf
adc
cmpsl
les
mov
cmp
cltd
adc
mov
js
ret
mov
lret
dec
jle
sub
push
or
data16
mov
fisubl
jno
stc
dec
xchg
jnp
dec
mov
mov
out
sti
xchg
pop
pop
aam
ljmp
mov
aam
ret
mov
push
loope
mov
jmp
lock
mov
aas
or
add
lcall
lea
dec
mov
loopne
cld
jae
repnz
and
adc
pop
mov
fwait
rcll
jmp
xchg
inc
fwait
or
inc
lods
or
push
push
xchg
in
inc
fisubrl
mov
jno
mov
push
xor
repnz
lea
dec
dec
or
and
push
adc
mov
mov
jl
or
push
pop
jbe
js
sub
and
fbstp
dec
and
add
adc
mov
adc
cwtl
mov
into
push
ss
add
push
jmp
xor
popa
cld
in
inc
pop
dec
xchg
mov
dec
mov
adc
mov
shlb
jo
cmp
push
or
sbb
push
ror
xchg
pop
and
pop
int3
mov
inc
jns
cmp
popa
pusha
data16
sbb
xor
icebp
call
lahf
nop
jl
aas
ljmp
test
mov
adc
in
pop
out
xchg
stos
push
jp
and
data16
les
out
push
and
xchg
nop
mov
pop
add
and
cwtl
movsl
arpl
adc
and
cli
pop
push
cmp
fnstsw
andb
lret
cmp
mov
imul
mov
outsl
mov
cmp
pop
dec
sbb
arpl
or
mov
mov
movsb
push
and
mov
adc
ja
outsb
adc
ss
jmp
mov
mov
mov
ds
ret
mov
loopne
repz
movsb
leave
mov
sbbb
mov
pop
xchg
push
push
icebp
sti
ret
scas
stos
sbbb
divl
mov
loope
push
and
lcall
int3
push
lods
push
add
xchg
pop
adc
mov
lret
xchg
mov
icebp
ljmp
jecxz
popf
jp
adc
nop
push
push
push
test
jmp
aad
pop
mov
lret
add
sar
xchg
jb
adc
or
inc
inc
jae
add
push
xchg
mov
and
inc
movsb
mov
mov
mov
popf
xchg
pop
inc
xlat
adc
loop
sbb
sbb
std
jae
jl
cld
pop
cmpsl
cmp
adc
add
dec
adc
add
int
push
lret
gs
and
and
push
idivb
addb
sarl
inc
dec
fidivs
push
fdiv
xor
mov
or
ljmp
cmp
cmpsb
mov
or
mov
add
push
mov
sbb
mov
inc
sub
xor
mov
jge
lock
push
lds
std
movsl
mov
sbb
out
imull
inc
pop
cmp
imul
stc
test
push
in
jg
andl
sti
iret
sub
fwait
jo
pushf
lds
shll
sub
mov
xchg
sbb
in
adc
movsl
dec
mov
push
push
mov
push
xchg
movsl
xor
mov
xchg
cmc
mov
mov
aam
pop
mov
push
inc
in
fwait
pop
pop
sbb
icebp
mov
lret
repz
icebp
gs
lods
jle
cmp
lcall
das
fstpl
stos
jg
mov
lods
repz
mov
mov
inc
cmp
cld
out
lods
lods
jmp
ret
filds
sub
jnp
in
inc
pop
std
aas
push
sub
cli
sub
test
sbb
insb
mov
dec
int3
pushf
imull
push
pop
test
mov
rcrb
xor
jno
pop
outsl
sub
dec
mov
adc
or
xor
pop
xchg
and
xchg
cs
out
rorl
jae
stc
shlb
adc
dec
arpl
jl
cmp
mov
xor
pop
jge
mov
test
sahf
xchg
push
int3
les
dec
loope
icebp
dec
stos
mov
adc
mov
xor
stos
mov
jbe
push
xor
stos
pop
lods
jle
jno
add
out
mulb
add
cmp
imul
pop
add
js
imul
mov
jg
pop
lock
or
jle
rcr
lcall
pop
mov
stos
xchg
push
stos
into
stc
jp
xor
jmp
repz
mov
jg
outsb
aam
ja
xor
aaa
xchg
push
jge
ja
imul
pop
pop
add
add
xlat
add
xor
or
div
lret
mov
adcl
int
inc
outsb
or
out
fimuls
outsl
jmp
pop
and
sbb
cwtl
jp
adc
lods
adc
cmp
out
mov
dec
es
jge
push
outsb
mov
test
dec
mov
mov
mov
outsl
jg
loopne
sub
iret
push
mov
into
scas
adc
pop
ljmp
hlt
inc
bound
rcll
pop
rcl
adc
lahf
std
pop
adc
mov
cmp
ficoms
rol
or
test
and
cmp
push
and
imul
push
or
dec
jns
adc
ss
fcompl
cli
push
push
inc
and
sub
nop
dec
pusha
mov
out
iret
push
adc
popf
push
shlb
and
pop
jecxz
sahf
dec
mov
in
xchg
jnp
dec
adc
fdivs
sbb
xchg
ficomps
rorl
mov
jnp
push
push
gs
or
cmp
cmp
sbb
leave
inc
push
dec
mov
iret
jae
bound
pop
int3
adcl
fimull
xor
adc
ficoml
js
outsl
outsl
cmp
iret
leave
mov
stc
sub
inc
push
adc
jne
iret
negb
push
movsb
sbb
push
add
lahf
xlat
or
fists
or
shll
or
dec
bound
mov
add
pop
incb
cmpsl
arpl
jle
xlat
push
test
xorb
cli
push
sahf
push
sbb
cld
imul
and
aas
sarb
popf
jo
add
jns
inc
mov
aas
les
cmp
orb
xlat
mov
ret
cwtl
es
int
mov
aaa
xlat
jecxz
xchg
pop
jne
lret
sbb
rorl
popf
mov
jg
mov
inc
out
sbb
jnp
inc
xchg
inc
idivl
cmpsb
addl
add
pop
insl
outsb
push
and
stc
arpl
dec
fsubrl
mov
pop
jp
cs
pop
int
adc
xor
inc
fnstenv
cs
pop
out
loop
test
pop
hlt
js
stos
mov
sbb
sub
rep
push
pop
movsb
rcrl
xchg
cmpsb
in
push
lahf
xchg
xchg
hlt
xchg
into
adc
popf
or
ss
call
push
jnp
jne
mov
dec
push
lret
lods
ja
adc
pop
sbb
inc
movsb
push
inc
fstpt
jl
out
inc
xor
pop
aad
sbb
pop
mov
adc
scas
add
mov
ret
xchg
in
jge
jne
out
insl
mov
in
testb
fcmovne
ljmp
xchg
into
ja
mov
int
pop
adc
negb
out
sub
lods
push
mull
mov
imul
fwait
adc
sbb
ss
testb
cld
cmpsb
push
arpl
std
mov
testb
push
sbb
adc
ss
subl
iret
jns
dec
xor
dec
mov
sbb
mov
mov
fistl
pop
mov
mov
call
mov
shl
adc
enter
inc
adc
xorl
ficoms
pop
adc
mov
cmpb
add
jle
repz
les
inc
inc
xor
sub
mov
stc
mov
cli
lods
or
dec
push
popa
test
push
pop
pop
iret
cmp
xorb
shll
imul
inc
push
pop
arpl
inc
mov
hlt
aas
insb
ret
and
int
jno
xlat
btrl
add
cltd
xor
dec
test
jl
in
dec
dec
testl
adc
dec
push
out
insl
mov
int3
ss
xor
rolb
or
js
insb
dec
add
sbb
pop
in
pusha
cwtl
mov
pop
cli
sub
call
das
aam
lcall
jecxz
or
mov
aaa
jp
movsl
sbb
mov
std
je
rolw
mov
test
add
adc
sub
and
fiadds
pop
cmp
sbb
add
rcrb
dec
mov
outsb
aad
or
stos
pop
jb
fsubl
sbb
inc
inc
cs
dec
mov
orl
push
jne
fwait
call
arpl
mov
fstpl
int
jp
movsl
mov
repz
decb
push
mov
orb
mov
repnz
xchg
arpl
xchg
add
inc
mov
dec
stc
arpl
pop
or
or
cld
call
shlb
int
out
or
mov
jle
arpl
mov
mov
ret
sbbb
lods
sub
rorb
push
pop
mov
cld
jb
adc
je
xchg
or
push
out
push
cmpsb
out
cmpsb
aad
shll
loopne
pop
inc
mov
adc
mov
movsb
mov
imul
pop
add
cld
jns
xor
mov
mov
fcompl
mov
imul
lods
imul
push
aaa
and
sub
jl
dec
jle
out
adc
dec
mov
xor
pop
aas
or
pushf
movsb
insl
add
xchg
pusha
add
repz
es
ds
jg
mov
add
mov
fistpll
lahf
cmp
push
in
cltd
and
sub
jns
mov
clc
stos
adc
add
push
adc
cwtl
int3
and
inc
in
jne
and
adc
xor
sti
xchg
orl
adc
mov
mov
pusha
out
jecxz
addr16
push
pop
leave
fcmovb
adc
call
cmpsb
pop
mov
push
push
xor
mov
cmp
add
rorb
repz
sub
pushf
or
in
and
jo
push
inc
clzero
bound
adcb
xor
push
mov
or
cmp
ror
loop
adc
or
test
xchg
xchg
cli
icebp
xchg
dec
ficomps
xor
xchg
cmp
mov
jo
cli
xor
push
daa
pusha
or
mov
sub
mov
sti
dec
outsb
lret
rcrl
or
adc
xor
jo
dec
sbb
dec
movsl
fsubl
push
xor
cmp
jb
push
xor
cltd
mov
dec
cmp
xchg
bound
mov
or
fwait
stos
dec
dec
mov
stc
or
jbe
mov
lcall
mov
adc
out
mov
or
nop
pop
sbb
loope
call
movsb
repnz
pop
lret
mov
mov
fldenv
jno
jno
pushf
iret
mov
xor
movsb
jecxz
add
mov
lock
adc
dec
sbb
lret
inc
scas
cmp
adc
cmp
addr16
jnp
mov
scas
testl
dec
pop
fistps
and
cmp
es
call
fisttpll
mov
mov
andl
in
jne
mov
inc
or
sbbl
into
stos
xchg
daa
in
mov
dec
test
aaa
cmp
xor
shll
dec
inc
jbe
jb
pushf
pop
pop
mov
or
pop
push
pusha
mov
jae
or
enter
sub
mov
pop
sub
gs
hlt
or
xorb
push
cmp
repz
shrl
mov
cli
jne
rcrb
aas
push
cmc
jae
dec
jbe
mov
roll
mov
rcr
sub
pop
aad
mov
push
inc
jp
push
push
sbb
and
push
sbb
jbe
clc
fldcw
cmp
xchg
ja
outsb
divl
pop
out
pushf
data16
ret
daa
pop
movsb
push
stc
cmp
pusha
cmp
push
jp
icebp
mov
sti
inc
cs
rol
ss
mov
and
xchg
andb
dec
mov
lods
in
mov
out
mov
and
gs
icebp
pop
cmc
sub
arpl
cmpsl
lret
dec
hlt
or
jo
xchg
xchg
outsl
fs
jne
push
jl
pop
xor
pop
sarb
mov
cltd
sub
cld
out
cmc
push
push
int
sbb
cmpsl
enter
cmp
pop
xchg
sti
cltd
imul
dec
cmpsb
mov
out
test
add
repz
sub
dec
or
mov
dec
orb
jbe
mov
xor
scas
xchg
push
mov
push
jae
mov
dec
adc
inc
mov
mov
lcall
je
pop
ja
out
testb
and
int
sub
jp
in
mov
mov
outsb
pop
add
out
out
xchg
loopne
stc
out
data16
in
jmp
push
push
mov
jb
fstpl
rcrb
arpl
out
loop
push
push
imul
adc
ds
or
push
xor
imul
sub
pop
sbb
xlat
adc
push
push
dec
xchg
cmpb
lods
les
shll
adc
add
pop
pop
pop
pop
mov
xchg
jbe
lock
in
jge
inc
jg
jge
push
mov
pop
push
mov
orl
lea
test
repz
sub
scas
movsl
xorl
push
insb
xor
cld
flds
test
push
in
mov
sub
leave
xchg
popf
xchg
js
xchg
aam
clc
or
push
xor
daa
cmpsb
push
enter
rorl
adc
pop
idivb
dec
movsl
lods
pop
lret
les
push
lock
lcall
pop
test
sub
repz
mov
push
or
jno
pop
push
mov
pop
pushf
les
pop
out
push
es
push
cmp
imul
or
or
scas
arpl
fidivrs
mov
decb
inc
push
adc
add
ss
push
lods
xchg
out
ficompl
nop
lods
aas
sub
lahf
in
loop
nop
and
fmull
push
mov
imul
jns
push
int
stos
xor
xchg
enter
std
lcall
std
ss
inc
inc
mov
fwait
loopne
aas
or
pop
pop
adc
fsincos
hlt
jp
dec
push
fcmove
mov
or
pop
repz
in
cmpsb
jle
add
jle
stos
into
dec
add
cld
sub
push
movsb
mov
movl
jp
sbb
int3
int3
mov
test
sarb
xchg
gs
test
adc
jge
jp
fcmovnbe
adcb
daa
jnp
xchg
inc
xchg
dec
and
out
js
jmp
jnp
mov
insl
into
pop
in
and
testb
sub
jne
out
jns
dec
popf
cmpb
mov
jmp
in
les
push
inc
fcoms
xchg
les
inc
push
or
sbb
cmp
inc
in
jp
imul
inc
mov
fs
cmp
add
cmp
xor
hlt
mov
cmpsl
cli
mov
add
xchg
fsubr
mov
adc
xchg
movsl
pop
ret
mov
xchg
cmpsb
pop
popf
xchg
cmpsl
cmp
mov
push
scas
add
mov
shrl
push
add
test
and
vmwrite
cmp
jp
xor
push
jnp
cli
push
xchg
pop
mov
sbb
popa
repnz
jmp
ja
cmc
mov
mov
cmpsl
push
dec
jle
imul
pushf
mov
inc
aam
pop
dec
mov
mov
xchg
movsb
ss
cmpb
sbb
sbb
or
jp
add
ss
mov
insb
xor
pop
or
mov
in
mov
xor
sub
add
lea
cmpsb
mov
lock
xchg
dec
sbb
push
cltd
cmp
inc
mov
mov
pop
jne
inc
inc
xchg
imull
int
sub
mov
decl
imul
ljmp
adc
cmpsb
fdiv
mov
scas
and
cwtl
inc
outsb
or
data16
out
imul
lret
aas
cmp
and
cmpsb
mull
xchg
push
mov
addb
cmpsb
push
cld
dec
loopne
add
out
pop
in
imull
test
pop
in
xchg
or
clc
mov
clc
cmp
cmpsl
mov
outsl
iret
fs
jbe
mov
pop
hlt
mov
ss
and
push
xchg
popa
adc
pop
mov
xor
xor
into
int
add
scas
dec
or
xchg
mov
push
ds
push
lods
out
inc
pop
rclb
sub
lret
lahf
stos
scas
xorb
push
inc
loope
pusha
fists
lds
cmp
pushf
ret
cmp
push
jg
into
mov
out
pop
inc
mov
or
pop
and
mov
scas
or
stos
cs
hlt
mov
xchg
mov
mov
push
mov
nop
mov
pshufw
dec
push
adc
notl
jge
test
call
adc
sbb
inc
aad
mov
mov
sarb
pop
js
mov
xor
mov
jge
jle
outsl
ja
push
dec
and
into
dec
jb
fdivp
jnp
push
stos
adc
or
xchg
lods
mov
mov
dec
push
test
scas
mov
jle
pop
cmp
pushf
in
xchg
loop
xor
leave
nop
outsb
ss
es
mov
mov
pop
sub
scas
pop
sbb
push
fmuls
jecxz
lcall
les
fimull
or
lea
ret
cmp
ss
loop
ss
out
ljmp
add
pusha
hlt
jecxz
ljmp
rolb
mov
sbb
pushf
rclb
pop
stos
lret
push
xchg
int3
clc
out
or
add
push
jne
idivb
dec
mov
repnz
push
mov
pop
push
dec
pop
outsl
lds
xlat
scas
xor
sbb
in
in
sub
mov
inc
sbb
iret
movl
fwait
aas
movsl
popf
adc
push
cmp
push
or
pop
stos
mov
std
stos
pushf
jb
roll
xchg
pop
movsl
test
or
inc
xor
xchg
lock
js
sub
mov
popa
nop
loopne
mov
cmp
fcomps
inc
je
push
scas
xchg
test
push
test
imul
in
stos
ret
stos
sub
int
scas
jne
faddp
mulb
sub
xchg
xor
and
test
adc
cmpsb
cmp
sahf
and
test
cli
mov
add
cmpsb
inc
jbe
mov
mov
stos
loop
roll
addr16
rclb
stc
paddusw
jb
inc
pusha
or
dec
mov
pop
lahf
dec
jno
sub
add
dec
and
call
repnz
rcll
imul
setp
and
out
scas
cmp
out
cwtl
sbb
test
daa
xchg
sub
push
inc
mov
mov
pop
xlat
aam
add
std
inc
sub
pop
jno
sbb
cmp
dec
lahf
jae
movsb
lret
in
rcrb
leave
pop
lods
adc
popa
rcl
mov
pop
sbb
int
mov
dec
mov
pop
mov
push
arpl
cli
sbb
mov
shlb
js
das
rclb
int3
hlt
mov
fimuls
mov
inc
mov
dec
cld
mov
xor
adc
pusha
or
or
or
into
push
lea
sbb
sub
mov
sub
stos
jl
and
xlat
mov
lea
js
jecxz
or
stos
jo
adcb
cmpsl
inc
and
add
cs
fildl
jl
jne
cmp
test
mov
add
jae
lahf
xchg
and
mulb
inc
frstor
jp
sub
int
mov
xor
iret
clc
subl
cmp
pusha
out
cltd
cmp
cli
fimull
andb
mov
testl
sub
pusha
and
cs
inc
filds
jb
mov
sbb
inc
add
or
int
out
out
imulb
mov
jge
scas
imul
and
xor
mov
xchg
outsl
mov
daa
stos
dec
xor
test
jno
adc
fidivs
lods
sub
add
fisubrs
push
mov
loope
sub
push
sub
mov
pop
fldl
push
cmp
mov
add
jl
adc
mov
or
xchg
pop
fnstenv
adc
ds
mov
pop
test
cmpsb
inc
lock
cs
jo
push
subl
xorl
xor
pop
lea
aaa
and
sub
and
push
mov
lret
arpl
mov
mov
lods
nop
and
imul
push
aas
jmp
lods
rorl
daa
jmp
outsb
mov
aam
cli
lea
cmp
jl
pop
mov
iret
fs
clc
sahf
into
imull
pushf
lret
or
cmp
inc
dec
mov
pop
loope
inc
push
stos
lock
pushf
lds
mov
lret
push
icebp
mov
jle
inc
fcmovne
sahf
les
cli
mov
imul
pop
dec
pop
fxch
xchg
shlb
or
pop
pop
fldlg2
cmpb
mov
idivl
mov
mov
inc
dec
adc
repz
add
inc
push
push
stos
stc
jp
or
adc
ror
lret
fcmovne
jo
test
lods
or
fcmovnbe
jo
dec
inc
adc
add
mov
mov
mov
or
cmp
and
inc
dec
xchg
shl
or
cmc
sbb
movsl
lods
and
xlat
dec
lcall
stos
mov
mov
idivl
shlb
scas
shl
xchg
jg
mov
or
xchg
int
adc
xchg
jb
xor
lret
mov
or
inc
outsl
decl
out
fiaddl
and
xchg
sub
mov
inc
loop
or
movups
or
fidivrl
pusha
mov
mov
lret
push
ret
test
in
xchg
mov
std
pop
mov
pop
mov
mov
scas
or
sub
cmp
push
dec
icebp
rolb
popa
sub
insb
add
mov
mov
push
fbld
repz
push
dec
sub
movsb
mov
jecxz
pop
adc
es
ss
insb
sbb
mov
adcl
or
xchg
subl
inc
mov
mov
sti
sub
adcb
pop
les
mov
mov
cmp
scas
jae
mov
cmpsb
add
je
aad
scas
addr16
and
mov
adc
and
popa
mov
jle
add
je
pop
cmp
das
sar
or
inc
mov
push
stos
out
mov
std
je
jle
cmp
adc
ret
stos
call
notb
xchg
jge
add
pop
imul
jmp
sbb
inc
inc
dec
dec
sbb
mov
xchg
mov
mov
dec
mov
repnz
push
lock
lods
mov
clc
and
pushl
sbb
cwtl
dec
divl
mov
sti
es
cmp
mov
dec
and
add
mov
add
loope
out
xchg
lods
mulb
mov
imull
pushf
test
jge
mov
adc
pop
jg
or
pop
xchg
popa
sub
inc
iret
insb
xchg
into
mov
nop
pop
jg
cmpsb
push
push
popa
push
inc
gs
stos
les
divl
lods
or
popa
inc
sti
mov
sub
jle
fadds
pop
dec
test
mov
push
pusha
leave
xor
gs
adc
shrb
outsb
leave
jno
shrb
or
mov
ljmp
sub
bound
scas
xchg
cltd
mov
mov
lods
add
fs
pop
cmpb
into
mov
ret
jbe
mov
jle
mov
fs
sbb
jg
mov
xor
dec
xchg
mov
imul
das
in
popf
inc
insl
sbb
scas
outsb
push
out
aaa
es
fisubs
data16
movsl
mov
push
mov
jo,pn
dec
test
call
mov
push
cmp
mov
movsl
xor
lret
mov
lcall
arpl
lret
mov
jo
arpl
cltd
dec
lcall
mov
in
sbb
test
pop
roll
imul
outsb
clc
sub
mov
mov
cmpsb
push
rcr
push
ja
inc
lods
adc
sarb
scas
adc
mov
sub
mov
xor
ja
test
pop
hlt
push
data16
xchg
cmp
cmp
aaa
mov
icebp
movsb
sub
sbb
aas
xor
push
cld
js
ja
shl
mov
cmp
fstps
dec
movsb
cmpsl
pushf
cs
pop
jg
lret
push
sub
push
mov
enter
xchg
xchg
hlt
mov
sub
inc
lcall
pop
mov
mov
mov
imul
push
sbb
adc
sub
test
and
sub
fwait
adc
inc
push
add
movsl
ljmp
cmp
sahf
pusha
dec
sbb
js
incl
fwait
add
xchg
and
add
negb
inc
jno
repz
dec
sbb
inc
sti
daa
loop
xchg
mov
cmpl
add
cs
jne
lcall
nop
sub
mov
cmpb
lods
sbb
add
imul
out
int
lds
scas
add
pushl
dec
xor
push
mov
scas
or
psubsb
fidivs
sahf
cmpsb
mov
andl
jbe
adc
push
stc
mov
pop
mov
shlb
stos
sub
push
pop
mov
pop
clc
adc
dec
mov
mov
outsb
nop
cmp
loopne
sub
xchg
out
lahf
lods
rorb
jge
in
fnsave
pop
inc
stos
or
cmpsl
test
jno
cmp
lods
cmp
jns
nop
push
mov
adc
call
imul
xchg
sahf
pop
cmp
jae
pushf
dec
in
aad
xor
lock
rcl
stos
xor
jecxz
xor
subl
cmp
lods
mov
movsb
outsb
ret
lahf
dec
mov
mov
hlt
mov
add
xchg
das
xchg
pop
nop
stos
jno
movsb
pop
mov
mov
inc
push
pop
shrl
aaa
movsb
repz
xor
pop
cld
lods
cmpsb
fs
movb
inc
inc
imul
pop
test
lahf
stos
shlb
jne
loop
rolb
sarb
aas
test
in
pop
add
pop
das
icebp
cltd
gs
lods
into
enter
mov
cmp
call
pop
orb
fildl
aas
js
das
inc
popf
mov
xor
jle
je
or
hlt
rcrb
icebp
push
xchg
test
movb
test
adc
mov
adc
lcall
repnz
mov
mov
dec
push
popa
mov
xchg
inc
pusha
fisttpll
xchg
inc
test
and
sbbb
loopw
adc
popf
gs
jg
lahf
iret
pushl
xchg
out
mov
jl
bound
roll
lods
andl
adc
inc
jo
gs
xor
mov
stos
sarl
push
dec
data16
sbb
sub
or
jecxz
mov
adc
mov
dec
xor
xor
push
movsb
movl
pusha
lahf
pop
sbb
cmpsl
vmread
arpl
xchg
inc
in
out
cli
and
arpl
movsb
mov
lretw
idivb
cmp
add
cmpsb
sbb
incb
sub
push
cmpsb
add
and
jne
adc
sarb
hlt
cmp
inc
inc
movsb
fists
pop
jo
loopne
mov
push
mov
pop
jl
or
lret
std
mov
fnstenv
mov
add
inc
jmp
idivb
sub
fs
das
inc
and
test
xchg
insb
inc
and
das
push
and
push
loopne
mov
mov
mov
mov
das
xchg
xchg
fiadds
inc
mov
stos
lds
shlb
inc
sbb
cmp
je
and
mov
dec
pop
test
xchg
icebp
cmp
sbb
inc
cmc
push
fistpl
repz
popa
mov
pushf
xchg
imul
dec
mov
mov
loopne
mov
ficomps
mov
jae
pop
lea
outsb
pop
pop
fildll
in
pushw
shl
adcb
jg
jnp
jno
out
cmp
fcmovnb
sub
scas
idivl
sub
lods
les
cmp
jl
mov
scas
push
push
fisttpll
out
or
dec
xor
stc
ljmp
bound
add
push
inc
mov
shl
jmp
pop
insb
lods
jg
insl
mov
sti
xchg
jns
mov
push
jle
push
jmp
js
scas
fwait
pop
sbbl
sub
pop
pop
mov
jno
push
mov
test
lret
push
mov
mov
pop
insb
push
loopne
pop
inc
add
inc
hlt
aam
aaa
mov
out
daa
add
jne
push
int
jl
xchg
adc
loope
or
push
test
inc
lods
addl
xlat
mov
cli
jo
add
jnp
fnstcw
das
movsl
iret
cwtl
test
add
ret
sub
popl
dec
pop
lahf
and
loop
les
sub
ficompl
aas
push
sbb
jmp
sarl
xchg
loop
mov
test
sub
mov
sub
inc
push
cmpsl
ss
jo
jle
int3
fnstsw
orb
call
jmp
mov
mov
and
push
mov
hlt
sub
imul
dec
mov
mov
xor
mov
mov
mov
dec
das
pop
lods
xchg
mov
or
pushf
jmp
mov
ljmp
push
and
xlat
scas
push
movl
divl
xchg
xlat
push
mov
mov
fdiv
cwtl
lods
mov
shlb
cmp
repnz
xor
shlb
mov
movl
dec
in
cmpsb
fs
js
sub
jno
mov
addr16
xor
int3
and
jbe
idiv
test
fldenv
popf
inc
inc
je
movsb
or
jnp
push
lods
push
test
lock
pop
xor
mov
push
and
enter
bound
notl
daa
mov
pop
imul
adc
shlb
insl
fs
fwait
rcll
mov
jg
sbbl
jbe
mov
pop
scas
mov
mov
and
jnp
add
pop
jbe
xor
dec
jg
mov
xchg
lahf
fwait
adc
add
movsb
push
push
inc
pushf
inc
aas
cmp
leave
pop
call
mov
in
jb
scas
lret
xchg
adc
pop
lock
push
mov
insb
iret
ss
push
pop
xor
mov
lahf
sbb
add
push
mov
sbb
push
dec
lods
mov
dec
jmp
or
xchg
es
jo
mov
mov
fcmovnu
fs
push
bound
mov
and
cli
mov
add
cli
repz
push
mov
inc
jo
jbe
shll
pop
dec
test
les
out
xor
dec
lahf
push
lods
add
xchg
dec
sti
cmpsb
mov
xor
inc
bound
dec
cmpsb
push
xor
push
and
add
lock
push
in
mov
push
movsl
cltd
int3
std
and
movsb
adc
sbb
sub
ja
lahf
dec
add
dec
jp
inc
mov
xchg
mull
loope
and
lret
push
mov
mov
jbe
stos
push
sbb
pop
xchg
mov
inc
imul
lock
aad
scas
call
dec
adc
cmpl
lcall
adc
and
fisttpll
outsb
int
mov
jecxz
dec
lcall
addl
cmpsb
and
test
stos
mov
xchg
mov
xor
mov
scas
xchg
inc
and
adc
cs
xchg
lock
sub
popa
xchg
sub
cmp
mov
test
inc
dec
cmp
mov
cld
xchg
xorl
ret
enter
cmpl
pushf
shll
loop
adc
decb
jmp
or
js
ret
xor
dec
cwtl
hlt
mov
push
and
sti
aam
inc
mov
bound
sub
js
shr
fnstenv
stos
xchg
pop
es
movsl
pop
lahf
xchg
subl
mov
ret
mov
xlat
fs
dec
test
sub
pop
mov
xor
cmp
jns
push
and
sbb
or
inc
mov
test
pop
fsubr
jb
mov
dec
mov
xor
stos
pop
lea
or
push
pop
fisubrs
push
fiaddl
xchg
jbe
out
lods
add
xchg
xor
cmp
aas
cmpsl
mov
testb
ret
in
das
mov
int3
jmp
push
add
xchg
mov
sub
mov
mov
ss
dec
mov
mov
enter
lret
movsl
js
sub
add
sub
jle
inc
and
push
popf
mov
fs
into
gs
add
jns
adc
in
cs
jg
inc
int
insl
mov
gs
sub
movsl
gs
sti
mov
imul
fmuls
sub
xchg
inc
cmpsl
jb
jmp
subb
push
into
hlt
je
sub
lods
jmp
rorl
ret
rcrl
cmpsb
dec
std
sub
xchg
or
jmp
incb
aam
sahf
mov
sahf
mov
dec
mov
xchg
aam
mov
xchg
je
pop
lcall
push
stos
adc
inc
scas
fwait
jne
inc
ret
jnp
pop
xor
push
add
xor
ret
orl
rolb
cs
pop
int
push
adc
inc
addr16
bound
fwait
movsb
call
add
icebp
cltd
add
push
sub
xchg
nop
and
dec
adc
pop
mov
loop
sbb
dec
xor
out
adc
outsl
ljmp
xor
inc
jae
ficoms
psrlq
test
addr16
aam
pop
cwtl
adc
push
sub
jnp
and
xor
shll
in
gs
int
arpl
rorl
push
mov
dec
dec
and
ja
sub
push
xor
jecxz
bound
ficomps
jb
dec
test
mov
loopne
nop
sbb
lock
dec
stos
aaa
popf
xchg
mov
in
mov
lods
shlb
add
jecxz
leave
xchg
pop
stc
mov
test
shll
mov
outsb
das
inc
xor
push
in
adc
push
daa
mov
mov
sub
push
aad
not
test
pop
lret
add
push
outsl
addr16
lods
subb
bound
mov
push
repz
aam
test
divl
mov
add
icebp
or
rcrl
insb
daa
cmpsb
push
sub
add
mov
cmp
mov
or
out
fisttpll
out
dec
arpl
fistpl
or
out
lds
ficoml
push
cmpsl
pop
and
mov
push
loopne
movsb
jns
xchg
pop
test
sub
test
push
pop
pop
cmp
xor
orl
adc
jae
add
mov
inc
pusha
mov
repnz
and
pop
pop
test
mov
pusha
mov
movsb
push
mov
repnz
imul
mov
cmp
pop
test
mov
or
mov
adc
pop
sub
jge
sub
cmp
mov
pop
xchg
icebp
xchg
add
dec
test
pop
mov
orb
mov
mov
mov
cs
dec
jg
idivl
int3
xchg
adc
movsl
sub
jbe
shlb
outsl
sti
cmp
mov
negl
pop
repz
mov
mov
xchg
jb
out
inc
pop
es
dec
push
mov
cs
dec
push
jbe
std
lods
and
pop
sbb
sti
jl
xchg
push
hlt
xchg
cli
call
xorb
cmpsl
outsb
pop
xchg
mov
mov
rcr
push
movsl
out
dec
cwtl
sbb
notb
and
add
push
and
jo
sbb
sbbl
xorl
mov
bound
push
mov
ret
push
hlt
scas
jecxz
cmp
lret
js
test
adc
mov
dec
mov
repnz
pushf
jecxz
sbb
jbe
repz
sub
jl
sub
xlat
pop
testl
or
outsb
aaa
sar
add
fwait
pop
imul
stos
int3
out
mov
dec
cmpsb
jge
leave
repz
or
cmp
in
push
sbb
cmp
ja
lahf
xor
nop
test
push
and
xor
jb
xchg
stos
or
mov
and
popl
ja
stos
mov
add
cmpsl
shll
in
sbb
inc
not
jl
jmp
xor
and
rol
jge
sub
mov
cmp
lods
sbb
push
daa
sti
cltd
sbb
xchg
adc
pop
nop
or
daa
shrl
xlat
mov
jecxz
xchg
scas
adc
mov
xchg
mov
inc
adc
mov
dec
shl
push
mov
int
lods
cmp
inc
xchg
mov
in
cwtl
out
jl
mov
loop
std
jae
mov
pop
xor
les
dec
and
fwait
add
mov
scas
xchg
mov
mov
jp
imul
mov
inc
bound
cmpsb
mov
cmp
iret
pop
dec
xchg
sbb
fwait
push
cmp
bound
sbb
push
sub
mov
or
xchg
add
xchg
addr16
mov
mov
movsl
dec
mov
and
mov
int
push
xchg
and
lret
jl
add
pop
lea
sbb
and
push
jge
mov
xchg
fimull
jle
sahf
sub
mov
mov
into
or
or
jns
xchg
adc
adc
mov
test
jg
movsb
lcall
pop
cs
jne
add
fwait
orb
negb
mov
mov
repnz
cmp
inc
mov
dec
movsb
push
xchg
or
push
in
lods
test
sub
jl
add
dec
xor
gs
push
sbb
insb
stos
subl
icebp
hlt
das
and
mov
mov
jnp
and
add
cmp
inc
jge
test
dec
and
jp
mov
insl
fidivrl
pop
inc
pop
fsubr
sbb
and
enter
add
cld
lret
dec
pop
cmp
aaa
jle
outsb
inc
push
nop
stos
mov
mov
in
xor
test
adc
mov
lcall
gs
mov
popa
cmp
fwait
inc
lock
or
or
add
jmp
stc
pop
pop
mov
enter
xchg
enter
bound
jg
lods
or
mov
jge
cmp
movsl
andl
jle
out
jge
xor
mov
sbb
pop
ds
stc
in
xchg
test
aas
cmpsl
std
inc
mov
ss
xchg
mov
dec
stos
jns
icebp
out
dec
shlb
and
clc
inc
xchg
push
adc
fildl
adc
fdivrs
adc
iret
inc
test
mov
adc
xchg
add
jle
std
mov
idivb
sbb
xchg
out
cmp
inc
js
push
xchg
pop
sbb
test
test
mov
flds
inc
lret
adc
inc
aad
aas
aas
dec
das
mov
mov
jbe
xchg
or
into
je
int3
sti
fmuls
in
push
ret
mov
enter
add
popl
test
pop
test
hlt
lret
ret
adc
push
fwait
xchg
cmpsb
pavgw
pop
cmc
dec
popf
loopne
test
push
mov
fstpt
pusha
ret
sub
insl
xchg
or
xchg
daa
push
and
xchg
jno
lock
pop
lds
dec
stos
xchg
imul
iret
pop
out
in
cmp
mov
stos
sub
sbb
and
shrl
hlt
cmp
adc
dec
jne
push
xchg
jl
fs
pop
sbb
fs
test
xchg
ds
and
test
xchg
sahf
inc
mov
pop
int
int
pop
pushf
push
sub
mov
dec
outsb
or
cli
adc
orb
cmpsl
ja
pop
mov
inc
push
jg
dec
cld
sub
sub
stos
inc
cmpl
sub
jne
push
shl
mov
push
shr
adc
call
mov
dec
fmuls
adc
xchg
xchg
pop
andb
call
pop
lea
cmp
xchg
ds
add
jo
mov
dec
popa
adc
add
jns
mov
inc
push
sti
add
dec
mov
into
nop
inc
xchg
test
cmpsb
adc
xchg
mov
xchg
cmp
call
mov
shrl
add
add
mov
in
pop
mov
imul
inc
lea
popf
mov
pop
sti
ret
es
mov
fiadds
add
sbb
imul
stc
je
xchg
xor
outsb
mov
neg
add
mov
mov
jecxz
jb
cmp
mov
or
cmp
repz
test
sub
stos
hlt
lahf
rorb
syscall
and
paddusb
jno
mov
fsubp
mov
xchg
dec
loopne
mov
in
arpl
mov
xchg
out
lret
adc
add
jmp
cmp
mov
sbb
orb
sbb
push
iret
mov
pushf
push
test
cmp
aam
pop
pop
jbe
add
out
push
fwait
lock
lock
rclb
jp
sbb
jne
imull
inc
mov
sub
mov
cmpb
jb
add
nop
inc
or
or
sub
in
sub
mov
aad
fsubrl
dec
stos
or
nop
cmp
mov
jmp
lahf
rol
jl
lret
es
fisubrs
xchg
sbb
dec
outsb
ja
movsb
mov
sti
loopne
cmp
push
loopne
imul
add
lds
push
negl
aaa
add
out
bound
push
in
loopne
subl
jg
in
sarb
mov
xchg
hlt
in
xlat
sbb
mov
ffreep
or
adc
in
rcrb
mov
xor
xor
pop
movsl
test
mov
scas
or
xor
ljmp
sbb
xor
or
lret
icebp
daa
jae
and
mov
cli
push
outsl
add
leave
cmpl
push
fcoms
push
dec
inc
icebp
xchg
fidivl
nop
insl
aas
rclb
bound
inc
fbld
adc
mov
es
rcrb
pop
dec
lods
xchg
jecxz
rcl
pop
rorl
and
pop
sbb
hlt
xor
mov
mov
mov
enter
add
imul
outsl
enter
pop
jo
push
lock
add
pop
outsl
in
cmp
pop
mov
jp
push
jecxz
adc
push
aam
push
out
fisubrl
stos
lods
mov
inc
adc
mov
mov
mull
mov
and
mov
xchg
pop
or
and
xchg
push
shrb
ljmp
mov
test
push
in
pop
xorl
dec
aam
incl
dec
mov
mov
add
inc
lods
add
mov
shll
or
mov
insl
xor
test
or
mov
or
insl
inc
ljmp
add
mov
or
cltd
mov
stc
movsl
mulb
push
arpl
push
out
jl
mov
and
and
fdivr
mov
mov
outsb
jno
push
stos
cltd
out
pushf
and
scas
or
lahf
dec
lcall
rolb
jbe
cmpl
dec
iret
push
pop
push
xchg
add
mov
push
sbb
sub
mov
and
addr16
testl
jne
mov
idivb
mov
push
aam
mov
sbb
and
call
lcall
rorb
cmpsl
mov
dec
sbbb
movsl
jo
push
addr16
loopne
js
xchg
xor
mov
pop
dec
std
ds
push
push
repnz
jns
imul
xor
push
test
sub
add
shrl
imul
xor
xor
and
sub
mov
sub
out
lds
mov
aas
or
mov
mov
push
cmpsb
xchg
pop
rclb
das
stc
xchg
pusha
pop
sub
imul
push
adc
inc
mov
addb
sub
testl
pop
dec
int
shll
push
nop
sarb
mov
xor
ror
push
sti
imul
in
dec
cmpsb
sbb
pop
xor
leave
fists
insb
push
imul
push
or
jp
data16
test
in
sbb
mov
mov
xchg
movsl
mov
aam
pop
or
mov
jp
jb
loopne
inc
mov
push
outsb
sarl
mov
xor
xchg
jp
inc
jmp
test
faddl
add
sbb
je
daa
add
xor
and
and
insb
cmp
je
mov
lea
push
icebp
adc
push
jbe
and
and
lds
shl
push
xor
sbb
movsb
cmp
leave
push
aam
mov
imul
into
fwait
sub
xchg
aaa
in
loope
mov
stos
inc
std
js
daa
push
testb
fmul
jno
pop
and
mov
dec
stos
sub
xchg
imull
fnstenv
xchg
mov
pusha
mov
insl
adc
jbe
cltd
out
xor
shlb
sub
mov
stos
jne
rorb
xor
or
push
bound
mov
sbb
cmp
out
int3
cltd
test
jp
mov
iret
xor
mov
dec
sbb
jns
sbb
pop
jge
ficomps
and
repnz
fucom
mov
je
testb
daa
fisttpl
mov
and
jecxz
adc
shrl
ficoml
inc
outsb
mov
dec
lea
outsl
adc
mov
fcomip
cs
adc
ret
xchg
sub
js
mov
shrb
mov
test
cwtl
cwtl
movsb
pop
mov
inc
xchg
push
test
daa
jns
jle
xchg
jle
fmuls
ficompl
cmp
push
stos
mov
pop
aam
xor
movsb
inc
and
pop
jno
rolb
fsubl
mov
scas
inc
add
and
out
stos
push
adc
mov
add
nop
xor
sub
inc
or
push
pop
mov
mov
pop
das
xorb
out
in
insb
lahf
jnp
xchg
ret
mov
xor
pop
mov
popa
sbb
push
cltd
inc
xor
ja
popf
and
xchg
mov
xchg
fisttpl
les
jae
add
lods
ljmp
lods
cmc
jle
pop
iret
jle
pop
cmp
dec
cwtl
mov
pop
paddw
dec
mov
ss
push
insl
out
lahf
cmp
or
fidivrl
mov
jns
ds
kunpckbw
and
mov
or
sub
dec
fisubrs
xchg
pop
xor
push
xlat
pop
cmpsb
xchg
pop
fistps
adc
scas
out
push
dec
push
jne
cmpsl
movsb
xchg
bound
bound
push
or
mov
into
adc
test
loop
cmp
sbb
cmp
mov
ret
sub
inc
repnz
mov
lcall
mov
test
mov
stc
repz
cmc
jne
les
jg
jb
dec
into
and
add
jne
dec
and
dec
fs
inc
dec
inc
jbe
inc
sbb
pop
out
jae
sub
xchg
mov
mov
dec
popf
call
arpl
and
pushf
std
rclb
pop
imul
rorl
or
mov
orb
hlt
push
lahf
dec
push
inc
mov
push
xchg
in
cmp
out
js
jae
push
imul
mov
xchg
xor
addr16
lods
xchg
adc
pop
je
andb
enter
int3
push
out
push
orb
sarb
adc
arpl
add
div
or
sti
add
test
loopne
stc
mov
push
xchg
sub
inc
mov
jns
pushf
or
cmp
xor
fcmovnbe
push
mov
push
jle
test
lea
adc
outsb
jp
inc
testb
aad
jg
test
lds
lret
stc
sub
dec
dec
mov
inc
popf
mov
addl
sub
mov
mov
mov
lret
or
imulb
les
mov
dec
mov
pop
cltd
jg
sub
lret
scas
xchg
dec
push
sbbb
xchg
out
imul
xchg
xorb
ret
lods
call
js
jecxz
sub
jl
mov
cmp
adc
sbb
mov
mov
jo
outsl
scas
push
pop
movsl
inc
mov
jne
jle
mov
fwait
dec
sbb
gs
cli
push
or
int
mov
xchg
cli
add
add
inc
sarl
mov
mov
outsb
xchg
nop
ljmp
sub
mov
mov
and
addb
xor
mov
xchg
xchg
mov
xor
mov
xor
es
push
push
mov
add
js
test
jbe
add
dec
popa
cmpsb
sahf
hlt
ja
mull
in
mov
das
out
mov
xchg
sub
call
adc
cli
jle
lea
push
push
sbb
mov
sub
pop
movsl
mov
cmp
mov
movsl
outsl
jg
xchg
or
scas
mov
dec
push
movsb
inc
inc
fisubrs
cmpsb
stc
rclb
dec
test
add
cwtl
push
jle
xchg
xor
sub
xor
mov
pop
ja
cmp
mov
repnz
push
inc
ret
and
and
adc
test
add
movsb
movsl
mov
mov
xchg
jo
shll
lcall
mov
sbb
inc
xchg
jl
ss
push
stos
jecxz
push
adcl
hlt
pusha
pop
lret
jo
fisttps
dec
inc
andl
push
mov
and
jmp
adc
inc
ret
test
pop
outsb
jmp
sbb
push
dec
sbb
pop
xor
lcall
std
xchg
in
das
ja
pop
popf
cmc
sbb
fcompl
outsl
dec
lock
movsb
idivl
inc
jno
xor
inc
xchg
out
or
push
pop
jb
sbb
outsb
xchg
fidivrl
ret
xchg
jae
movsb
cmp
pop
pop
or
pop
lcall
inc
pushf
lds
sbb
jbe
sub
and
dec
loope
push
subl
cmpsb
shll
lock
bound
adc
push
inc
outsb
inc
fmull
insl
push
push
and
adc
pop
push
scas
add
rorl
xchg
mov
mov
mov
cmp
xchg
or
in
jb
in
xchg
push
inc
mov
fldenv
push
inc
xchg
sub
cld
nop
scas
push
dec
mov
popl
cs
push
xor
outsb
inc
incl
cmp
xor
testl
insb
shl
push
push
leave
mov
sub
mov
aam
insl
aaa
mov
push
dec
dec
pop
inc
push
addr16
insl
insb
add
dec
lods
dec
or
popl
xlat
arpl
test
int
insl
mov
pop
push
ret
popf
dec
jne
jo
fildl
cmpsl
cmp
shrl
aaa
mov
push
or
sbbb
icebp
xchg
push
dec
pusha
xor
pushf
movsl
push
icebp
jmp
popa
or
fidivl
and
jp
fbld
dec
stos
jl
imul
mov
xor
pop
jb
dec
mov
lods
xor
jle
testl
mov
cmp
dec
add
movsl
mov
xchg
inc
jge
cmc
inc
ljmp
ljmp
imul
cmpsl
sbb
lods
adc
test
lahf
insb
xchg
stos
movsl
mov
push
stos
pop
outsb
popl
fmull
mov
test
mov
lods
mull
mov
es
aam
push
ret
mov
jl
ret
push
dec
test
dec
xchg
push
push
cwtl
stos
cmp
mov
lret
inc
cmp
pushf
hlt
dec
jmp
add
in
subl
dec
pop
or
jp
xchg
sbb
ds
add
xchg
jae
lds
jge
dec
cmp
insl
test
inc
movsb
or
xchg
out
mov
sti
daa
ret
ljmp
popf
mov
daa
ss
cmp
xchg
dec
mov
cwtl
cmpsl
ljmp
test
int
outsb
or
test
cmpsb
pop
mov
dec
ljmp
fadds
mov
cmc
mov
push
push
mov
popf
lds
aam
jp
test
andl
fwait
xchg
jno
arpl
fmulp
aas
cmc
jbe
dec
jbe
mov
cmc
in
push
xchg
xchg
hlt
jl
in
jp
inc
dec
xchg
pop
fisttpl
popf
clc
outsl
pop
pushf
fcmovbe
jno
mov
dec
insl
or
jl
out
add
or
mov
ljmp
repnz
xchg
enter
or
out
cmp
push
push
inc
pop
stos
adc
pop
ret
jg
sbbb
pop
in
ret
and
in
pop
inc
sahf
push
xchg
movsb
jne
pop
or
orb
std
inc
mov
ja
mov
pop
and
adc
iret
jbe
sbb
adc
push
lret
inc
scas
xlat
in
inc
es
mov
loop
jl
xchg
push
sti
sub
pop
gs
arpl
or
pop
pusha
and
xor
sahf
ja
ljmp
shlb
outsb
mov
lret
push
nop
push
push
mov
outsb
jns
xchg
xchg
cmpsb
mov
icebp
test
and
mov
fcmovnbe
imul
pop
mov
sub
xchg
mov
popf
mov
in
popa
xchg
mov
aas
lea
cmp
add
test
mov
xchg
loopne
stc
into
dec
int
lahf
pop
jno
fs
cli
jp
mov
insl
dec
pusha
dec
gs
sbb
inc
movb
out
pop
jge
jle
and
mov
fiaddl
push
std
sub
mov
mov
inc
int3
jae
hlt
bndstx
dec
inc
out
sub
mov
aam
push
std
add
mov
mov
jl
negl
mov
mov
jecxz
mov
testb
ljmp
js
mov
fsub
int3
pop
lods
xchg
mov
inc
bound
movsb
xor
test
push
push
dec
ljmp
aaa
sub
aad
fstpl
movsb
cmp
std
icebp
sub
xchg
stos
push
jbe
js
lods
add
dec
incl
bound
cwtl
jl
dec
rcll
icebp
cs
negb
cmp
jl
push
mov
fistpll
imul
push
push
inc
pop
push
sub
cmpl
mov
xor
fcoml
or
or
test
enter
ds
icebp
push
xchg
jg
pop
and
ret
jo
push
inc
hlt
lods
pop
pop
pop
xchg
xor
int3
out
add
nop
and
push
int3
outsl
pop
lret
lret
pop
add
lock
loopne
stos
xchg
mov
imul
mov
and
dec
popa
out
mov
mov
lret
fisttpl
push
ja
cmp
test
pop
dec
cmp
mov
adc
dec
fisubl
and
lods
mov
lret
test
pusha
mov
mov
add
add
imul
fnsave
cltd
orb
or
loope
bound
cvtps2pd
popa
and
in
stos
push
sub
push
sub
loope
mov
mov
adc
fldenv
mov
inc
popf
dec
ljmp
jbe
push
js
out
mov
pop
inc
inc
loop
cmp
push
adc
inc
xchg
pop
es
cmpsb
push
pop
out
mov
das
pop
bound
add
pop
xor
adc
outsl
icebp
jno
std
sub
push
mov
mov
stos
mov
mov
out
add
add
dec
push
push
push
cmp
movsl
cmc
mov
mov
xor
jl
insb
shll
pusha
int
ficomps
fmulp
ja
fistl
movsl
lahf
or
cmp
mov
out
adc
sub
out
and
pop
clc
aad
xor
xchg
aad
cltd
int
xchg
scas
jnp
inc
adc
fwait
cld
pusha
add
iret
or
adc
add
xchg
into
addr16
loope
fdivp
mov
fdivp
jmp
pop
nop
imul
or
xor
dec
xchg
xchg
inc
fiadds
in
scas
jns
xor
sbb
mov
push
cmp
jge
jle
adc
leave
repnz
out
adc
stos
out
mov
fcoms
push
push
imul
or
mov
sub
jle
loop
push
dec
das
bound
sbb
js
icebp
nop
rolb
pop
mov
cmp
test
dec
or
jg
jb
add
cld
lahf
mov
xchg
xchg
xor
orl
decb
jae
cmp
je
data16
pop
push
pop
lahf
dec
imul
jmp
mov
cmp
jae
call
xchg
enter
movsb
orl
push
hlt
into
lahf
pop
sub
and
je
jns
push
test
push
orb
bound
scas
jle
add
jge
xchg
mov
loop
lahf
lea
jl
xchg
iret
shl
mov
sti
rcl
mov
pusha
push
mov
repnz
push
aas
lcall
subb
insb
mov
daa
cmpsl
shrb
stos
dec
add
mov
xor
fs
loope
inc
inc
loop
pop
or
dec
sub
lret
push
repz
ja
add
xchg
movsb
mov
imul
stc
ror
add
mov
orb
mull
mov
icebp
cmpsb
mov
jl
jne
lock
dec
out
adc
orb
adc
bound
xor
and
push
push
mov
aam
push
dec
lock
jno
imul
iret
lahf
loope
and
les
iret
mov
pop
cmp
ds
mov
fnstsw
mov
leave
repnz
pusha
outsb
dec
popf
insb
xlat
mov
push
mov
nop
push
out
adc
sbb
add
xor
es
jb
cmpsb
stos
lcall
ror
scas
cmp
gs
and
fdiv
cwtl
aam
out
shr
and
inc
scas
mov
adc
outsl
out
lret
sahf
fwait
pop
cmp
aam
cwtl
pop
dec
cmp
lods
adc
les
sub
inc
and
push
jl
pusha
lahf
mov
jmp
aaa
das
mov
push
lock
mov
subb
pop
fnstsw
push
xchg
or
xor
stc
jo
shrb
aas
sbb
add
push
in
data16
lods
mov
fdivrs
fldcw
inc
insl
jle
fsub
cmp
sahf
mov
push
dec
xor
cmpb
jbe
movsl
xor
adc
hlt
mov
iret
sub
cmp
lahf
movsb
push
dec
repnz
shll
out
mov
dec
adc
ror
jbe
xchg
je,pn
inc
dec
sbb
test
mov
ljmp
push
mov
mov
repz
outsl
xchg
inc
insb
cmc
jge
mov
cmp
mov
or
push
cmpl
enter
add
mov
or
fcoml
arpl
xchg
jae
movsb
lret
lock
push
and
sti
add
xor
scas
int
rolb
or
pop
movsb
push
gs
mov
fnsave
in
sub
outsl
cmp
inc
mull
fadds
mov
xor
lods
test
orb
adc
push
xor
insl
inc
lods
mov
loopne
adc
xlat
or
add
divl
into
mov
sub
push
cmp
jge
aam
push
cmp
ja
orb
jae
xchg
push
sbb
lds
jb
inc
stos
ljmp
mov
jbe
mov
jb
cmc
and
mov
mov
jp
xor
mov
scas
out
inc
xor
jmp
icebp
int3
pop
add
add
repz
divl
inc
outsb
sarl
push
add
mov
ljmp
and
lret
push
push
movsb
aad
mov
std
lret
add
in
pop
sbb
inc
jne
fldl
xor
mov
pushf
loope
out
cmpsb
aad
insl
dec
decb
dec
outsb
jecxz
aam
cmpsl
subl
fsub
fwait
jg
jae
mov
jnp
notb
mov
adc
xchg
adc
xchg
mov
mov
jne
adc
push
cmp
cmp
xchg
mov
add
jne
dec
mov
adc
loopne
jg
rcll
jg,pn
inc
mov
and
clc
imul
loope
adc
and
fbld
xor
mov
divl
sarl
push
nop
pop
ja
push
add
mov
and
pop
lods
cmp
xchg
andl
mov
das
ss
cmp
mov
jns
jb
add
sub
pop
ror
popf
xlat
mov
bound
adc
xor
jno
scas
jecxz
lret
hlt
ds
nop
test
mov
cmp
pop
data16
mov
and
pop
push
test
jo
xchg
mov
cld
push
mov
sub
fwait
rcrb
les
rolb
pusha
xchg
pop
xor
sar
pop
xchg
lds
lds
or
icebp
imul
sbb
push
imul
ret
xchg
shrl
shl
sub
gs
in
rcl
inc
aaa
out
lret
xor
imul
lret
and
loopne
xor
mov
adc
add
out
cmp
xchg
sbb
push
xchg
inc
cmp
repz
push
cmp
xor
xchg
fs
jge
ds
add
loop
sbb
cmc
ret
adc
dec
bound
movsb
inc
jg
jne
jns
xchg
jp
insl
cmpsl
mov
adc
pop
popf
es
pop
cmp
or
mov
sub
cmp
cmp
fwait
pop
push
lret
cmpb
iret
pop
xchg
lcall
test
data16
fcomi
gs
jbe
jg
out
fwait
outsb
sahf
test
imul
inc
sti
cmp
inc
lahf
and
scas
out
or
shr
mov
incl
sub
idivl
jae
add
outsb
dec
push
mov
popa
dec
sbb
movb
sarl
dec
imul
movsl
cmp
pop
sbb
scas
imul
or
dec
loopne
add
subl
cmp
xchg
in
mov
xchg
cmpsl
pop
outsb
push
rorl
or
je
add
sbb
pop
or
jae
outsl
add
pop
inc
lds
push
adc
test
add
mov
in
cmp
cli
loopne
dec
add
fimuls
xchg
divl
or
xchg
icebp
mov
jle
pop
subb
in
or
shl
mov
testl
mov
pop
push
adc
int3
mov
xchg
cli
shlb
lods
push
push
inc
jecxz
mov
outsl
int
push
arpl
sub
dec
ds
dec
lea
jp
lret
fsub
sti
inc
cmpsb
movsl
divl
inc
test
ja
stos
test
inc
add
jnp
inc
xchg
in
faddp
ds
imul
pop
jl
outsl
cmova
or
dec
pusha
movl
icebp
rolb
sti
aam
mov
imul
or
add
aad
pop
add
cld
movsl
andb
add
push
dec
in
iret
sbb
lahf
pop
call
jecxz
addl
mov
sarb
dec
aam
inc
mov
orl
mov
rolb
ds
sbb
clc
js
add
rcr
push
pop
dec
xor
test
std
mov
xor
mov
sbb
nop
lods
fmull
push
jo
ret
jle
scas
adc
test
in
pop
push
adc
mov
cld
stos
jns
xchg
ret
data16
cmpsl
jbe
or
inc
ja
sub
cli
outsl
cmpsb
pop
mov
addr16
pop
cld
xchg
lahf
in
mov
sahf
addr16
sub
mov
pop
out
fcoml
fwait
repz
jle
xchg
mov
add
mov
mov
imul
inc
js
xchg
rdmsr
popf
insb
mov
sbb
lds
push
add
mov
jns
cmc
add
jae
inc
adc
jb
test
cli
pop
into
fiaddl
cwtl
repnz
pusha
or
ret
enter
sahf
cltd
int
sub
loop
inc
movsb
fiaddl
nop
cmp
pop
out
pop
in
lcall
pop
jne
bound
mov
lea
xchg
pop
std
mov
pmulhuw
inc
dec
ds
mov
in
test
in
ret
dec
and
in
xchg
cld
fmull
inc
test
bound
adc
pop
xchg
inc
sar
inc
lods
jmp
push
inc
mov
and
dec
cltd
lcall
xchg
mov
ret
fdivl
dec
add
arpl
or
packssdw
mov
sub
inc
cmp
out
jae
lcall
repnz
add
dec
mov
add
scas
and
rcr
pop
xchg
leave
push
mov
rol
shlb
pushl
fcompl
inc
les
stc
mov
jbe
clc
std
gs
pop
mov
cld
dec
lods
test
and
push
pop
shlb
jle
and
hlt
sbb
test
jae
cmpsl
pop
shl
jno
mov
push
imul
out
add
pop
scas
fwait
xor
das
and
pushl
sub
jnp
xchg
mov
pop
iret
adc
dec
mov
pop
test
xchg
push
pop
cli
inc
push
push
cmp
std
xchg
jp
sbb
mov
fwait
ds
xor
and
call
dec
adc
call
cltd
icebp
in
pop
aas
stc
xlat
mov
aas
pop
add
loop
mov
jne
pop
mov
stos
adc
imul
dec
les
lahf
push
sub
or
fs
pop
shll
stc
enter
inc
dec
pop
daa
lock
sub
movsb
xor
mov
jg
inc
inc
jg
mov
or
mov
add
fcmovu
les
mov
int
sub
mov
dec
xlat
popf
mov
das
cmpsl
into
scas
cmp
xchg
lret
scas
call
fs
loop
cmpsb
mov
or
scas
and
mov
mov
pusha
push
popa
mov
insb
or
and
sbb
hlt
mov
mov
add
mov
mov
xchg
test
je
icebp
jo
imul
mov
mov
mov
mov
jae
addl
push
popf
push
jae
jmp
outsb
rorb
inc
rclb
sahf
xchg
ret
dec
sbb
dec
out
pop
ja
cs
pop
scas
fs
pop
jge
adc
push
xchg
push
out
dec
jp
in
shll
push
jecxz
add
sub
cld
incl
std
scas
jne
dec
rolb
movsb
xchg
cmp
mov
test
push
add
das
dec
add
cmc
mov
fildll
mov
pusha
xor
mov
add
mov
lds
pop
cmp
push
pusha
mov
cmpl
addr16
jl
adc
and
mov
ja
imul
xchg
ljmp
mov
outsb
roll
into
scas
daa
filds
push
dec
add
imul
into
cmp
out
insl
in
je
cmpsl
cmp
dec
popa
lds
call
inc
aas
pop
pop
sarb
xchg
push
sbb
and
push
jnp
jo
dec
cltd
dec
dec
hlt
or
mov
scas
daa
mov
enter
pop
mov
in
xor
jge
pop
jb
xchg
gs
sub
movsb
xlat
pop
cwtl
gs
xchg
addr16
push
sub
xchg
sbb
test
aam
mov
and
sub
push
and
aas
scas
push
data16
das
sarl
dec
mov
mov
sbb
pop
mov
mov
mov
pop
sbb
sahf
clc
fisubrs
mov
or
icebp
dec
push
pop
ss
out
mov
dec
in
jmp
mov
mov
xchg
jecxz
out
sbb
add
mov
mov
lahf
sub
sub
mov
xchg
pop
repz
push
je
outsb
mov
jg
push
sub
sub
lcall
push
cmpsl
dec
sbb
fs
jp
cltd
imul
pop
sti
jne
and
fnstcw
adc
dec
sti
mov
mov
inc
rorb
cmpsb
add
xor
mov
sbb
loop
out
in
push
std
sbb
xor
lock
xchg
filds
cld
xor
rcl
arpl
inc
nop
imul
popa
aas
lock
test
test
or
mov
and
mov
cmp
sub
jae
test
insl
dec
xchg
lds
pop
adc
mov
fnstenv
das
xchg
ja
mov
add
imul
jbe
pop
call
test
jmp
xor
lcall
jnp
aas
cmpsl
scas
push
fwait
xchg
sub
cmpsl
int
out
rcl
sbb
mov
xor
sbb
dec
sbb
jle
jnp
pop
cmp
push
jecxz
ss
stc
adc
mov
or
fistps
cli
nop
stos
cmp
shrb
repz
dec
sub
hlt
out
outsl
dec
jg
fmull
lods
mov
xchg
out
orb
inc
xchg
aam
mov
xchg
in
js
pusha
xchg
mov
cmpl
hlt
scas
iret
aas
lea
addr16
and
std
cmp
dec
lods
or
dec
cmpsb
cmpsb
add
sbb
mov
dec
or
mov
ficomps
and
les
pop
mov
mov
push
mov
jne
call
unpcklps
outsl
mov
out
adc
dec
mov
push
loopne
das
dec
xchg
or
mov
xor
sahf
bound
inc
mov
int3
imul
cli
sub
sarl
fiaddl
mov
test
bound
jecxz
mov
imul
dec
fistpl
out
xchg
stos
ret
or
outsl
movsb
loope
mov
mov
daa
or
mov
xor
mov
mov
addb
mov
mov
sbb
jle
fs
cs
adc
jne
idivl
ds
sub
or
adc
mov
mov
pop
mov
sub
sbb
inc
data16
dec
fxch
aad
dec
test
les
and
mov
push
and
mov
push
pop
pop
cmp
push
in
outsb
pop
mov
fstps
sahf
ds
cmc
jecxz
inc
jge
and
ljmp
push
movsl
out
daa
lahf
lods
mov
or
or
mov
lock
adc
cmpsl
test
push
int
scas
jmp
jno
jecxz
mov
call
cmp
jae
sbb
pop
cs
mov
inc
mov
imull
pop
mov
mov
pause
idivb
add
add
sti
test
iret
fstps
sbb
dec
or
cwtl
mov
jno
cmp
out
push
movsl
jns
sub
push
out
stc
shr
jp
insb
add
mov
pop
sbb
hlt
inc
daa
xchg
cmp
mov
movsb
xor
shl
inc
ret
pop
jmp
pushf
xchg
pushf
sub
lods
rorb
xchg
ljmp
dec
js
je
popa
xchg
lods
insb
mov
ficoml
lahf
and
jle
xor
dec
movsb
mov
mov
stos
out
pop
dec
subl
out
and
negl
sbb
insl
mov
pop
sub
sub
repz
cmpsb
leave
mov
dec
js
dec
andb
or
push
in
addr16
xchg
mov
xchg
push
int
cwtl
mov
sub
sub
ljmp
adc
adc
push
sub
pushf
pop
jl
ret
jmp
negl
popa
test
jns
and
mov
call
or
or
jp
out
xchg
adc
sub
jg
das
xorb
mov
lret
daa
push
mov
outsl
insb
pop
jmp
lcall
jp
xor
ss
out
test
adc
shll
orb
xor
sub
std
sar
jo
dec
fsts
lds
out
jns
cmp
inc
int
dec
lods
out
jb
xchg
imul
outsb
push
leave
push
daa
dec
dec
inc
mov
mov
lods
inc
aad
mov
and
dec
ja
pusha
push
into
pop
sub
inc
mov
addb
jo
data16
add
movsl
dec
lcall
cmp
push
sub
or
das
rorb
out
hlt
outsl
jge
pop
out
incl
cmp
fcmovu
nop
lret
push
mov
mov
lock
jne
or
xchg
or
lret
mov
sub
aas
sub
loope
push
or
xor
mov
adc
or
mov
std
sub
rcl
dec
fwait
pop
mov
xchg
and
add
lret
mov
cmc
dec
psubsb
out
inc
sub
or
sub
rorb
rorl
je
jmp
lea
inc
push
pop
jns
in
dec
fistpl
daa
mov
out
and
push
fcmovne
push
movb
lods
adc
aas
aam
xor
or
sub
mov
gs
aam
call
mov
and
mov
fisubrs
shr
fildll
mov
xor
cmp
jge
dec
je
pop
mov
push
and
sti
pop
scas
sbb
scas
push
push
call
push
dec
cmp
pop
imull
imul
mov
mov
ja
das
lea
xchg
sub
jmp
fdivr
or
or
pop
out
popa
pushf
push
and
mov
xor
loop
cmpsb
inc
mov
or
dec
es
out
jge
imul
xchg
xchg
or
cmp
push
mov
mov
push
aaa
clc
cmp
pop
pop
push
test
dec
mov
mul
movsb
icebp
xchg
fstpt
dec
int
jecxz
xchg
mov
jg
out
sub
sbb
dec
into
push
sub
pusha
rorb
jnp
xchg
mov
xchg
arpl
xchg
or
pop
cmp
sub
stos
in
lock
outsb
ljmp
jg
push
jae
pushf
imul
roll
in
andb
cli
pushf
mov
mov
lret
lcall
mov
and
jecxz
inc
mov
jb
and
cli
or
dec
mov
ja
cmpsb
dec
add
ret
js
jg
xor
stos
jle
dec
fldt
jno
mov
sbb
inc
pop
test
stos
inc
adc
mov
scas
insb
push
xlat
mov
and
shll
mov
mov
std
and
pop
mov
insb
pop
inc
mov
outsl
adc
mov
mov
jmp
stos
clc
or
jge
les
shll
pushf
adc
mov
loop
jecxz
gs
orb
cld
jne
mov
pop
push
dec
lea
mov
sub
cwtl
notl
jbe
pop
cmp
mov
repnz
stc
inc
out
hlt
stc
jecxz
xchg
dec
dec
dec
ljmp
xchg
int
les
push
je
sub
jmp
cmp
jle
cmp
jb
or
pop
enter
sbb
into
mov
movsb
pushw
lods
aaa
mov
pop
shl
add
push
pushf
mov
xchg
mov
add
les
cs
mov
sub
mov
imul
mov
cmp
movsl
and
dec
inc
ficoml
add
cmp
aad
mov
mov
adc
jo
pop
dec
or
arpl
push
xorl
jmp
pop
jo
js
xorb
push
add
mov
xchg
push
pop
stos
sub
ja
cmpb
push
clc
lods
sub
lods
addr16
pop
ficompl
push
sahf
mov
adc
jecxz
sub
push
iret
xor
imull
lods
jne
divb
push
jns
rol
add
sub
mov
cmpsb
push
notl
or
adc
adc
rorb
dec
xor
jmp
xchg
xlat
adc
inc
xchg
adc
mov
insb
lretw
imul
fiadds
add
mov
pop
iret
mov
popa
xor
addb
andb
lock
lcall
and
in
jge
inc
enter
clc
or
mov
mov
lret
xchg
mov
insb
test
mov
jno
arpl
jmp
and
mov
pushf
jno
sbb
xchg
cmpsb
testb
iret
ja
mulb
jae
mov
mov
fs
add
mov
xor
aas
imul
daa
cmp
cmc
xor
fnstsw
roll
outsb
inc
jns
inc
and
sub
dec
stc
add
pop
adcb
pop
xor
mov
mov
mov
sbbl
in
fsubrl
mov
sbb
push
mov
mov
sub
cmp
sbb
pop
cmpsb
or
xor
stos
repnz
xchg
dec
mov
insl
data16
mov
stos
jl
loopne
xor
shll
mov
stc
xchg
into
jae
mov
adc
xchg
test
fs
and
jecxz
push
dec
and
ret
mov
sahf
xchg
std
pop
add
enter
mov
fidivrs
mov
insl
sub
push
xchg
dec
fidivrs
mov
in
add
test
cs
lahf
inc
sahf
lahf
sub
cli
pop
pop
adc
mov
add
xor
xor
in
in
roll
pop
mov
xchg
mov
rorb
loope
mov
rorb
stos
push
fdivrs
leave
cmp
sbbl
pop
cli
test
sub
xor
mov
aaa
cmpsb
jns
fdivs
jmp
mov
sbb
xor
neg
add
lret
mov
fistl
leave
cmp
icebp
inc
xchg
lock
stc
sbb
jecxz
clc
pusha
lds
push
bound
repnz
inc
testb
popa
jecxz
sahf
xchg
in
pop
call
das
and
mov
cli
fcmovu
pop
and
out
aad
cmp
pop
shrb
or
pusha
test
mov
stos
pop
pop
loop
sti
insb
sbb
mov
lcall
mov
pop
cmpl
push
ret
scas
sub
js
mov
in
testl
int3
aas
mov
lahf
pop
rcll
push
jmp
mov
and
jecxz
jl
lock
lods
clc
add
int
inc
dec
lahf
jnp
ljmp
mov
lahf
sub
dec
lds
shl
jg
movsb
popf
ja
pop
jnp
pop
mov
fdivrp
dec
ror
gs
jnp
and
ficoml
push
sti
mov
jne
int3
xchg
mov
mov
ret
inc
and
sub
pop
mov
jl
mov
add
data16
sub
fimull
inc
or
push
ds
adc
dec
push
xor
add
sub
xor
add
jo
imul
push
int3
js
movsb
sbb
stos
popa
pop
mov
dec
pop
add
and
insl
aas
insb
dec
adc
jns
mov
inc
or
rcrl
sbb
test
mov
push
pop
stos
cmpl
aam
test
insb
xchg
push
out
test
in
in
pop
add
mov
jne
out
mov
fstps
jns
and
lahf
ds
dec
aas
pop
xchg
jo
lcall
jae
jo
pop
nop
mov
xor
outsl
and
jle
sub
call
sub
xor
daa
mulb
nop
mov
cmpsl
jge
stos
xchg
xor
call
lock
add
and
pop
test
ljmp
js
mov
ja
sahf
xchg
add
push
mov
pushf
shlb
push
in
mov
fs
pop
adc
cmpsl
cltd
stos
cmpsb
dec
cmp
mov
pop
test
and
gs
add
xor
sbb
jb
mov
push
cmp
in
roll
cltd
dec
mov
dec
jno
icebp
aad
adc
lods
jl
or
and
mov
mov
mov
into
cmc
sti
repz
push
sub
fisubl
mov
mov
mov
inc
sub
lcall
lcall
sbb
int3
dec
lds
sbb
cwtl
or
insb
repnz
jne
push
xchg
jmp
scas
or
mov
or
insb
dec
dec
mov
dec
pop
adc
rcrl
stos
mov
jno
mov
push
pop
push
lret
jmp
push
rcrl
out
subb
mov
lcall
imul
push
dec
mov
cmp
sub
inc
data16
pop
mov
out
jle
dec
aas
enter
cmpl
test
cmp
cmp
pop
mov
jns
xchg
adc
mov
aas
fmul
and
pause
ds
outsb
cmp
addr16
testl
add
je
shlb
xor
cmpsb
repz
pop
das
xchg
mov
cmc
mov
inc
mov
ret
mov
dec
sarl
mov
mov
cmp
cmp
addb
data16
ret
mov
repnz
adc
stos
sbb
cltd
test
les
idivb
out
mov
jno
mov
cmpsb
jg
add
adc
movsl
jo
repz
pop
fnsave
adc
insb
jb
mov
nop
and
movsb
push
add
lcall
jbe
lcall
in
std
mov
fstps
out
add
into
fcmovnbe
jle
test
data16
mov
jb
xchg
dec
adc
pop
cltd
and
inc
and
dec
dec
and
and
sbb
push
mov
leave
aam
xlat
mov
mov
jno
push
xchg
mov
aas
out
fwait
pop
daa
xchg
rcll
xchg
imul
push
push
movsb
sbb
xor
mov
xor
ret
gs
ja
sub
pop
mov
jo
push
popa
mov
or
ret
stc
loop
jecxz
inc
bound
inc
dec
into
xchg
add
inc
fs
popf
xlat
or
pop
outsl
cmp
popf
mov
data16
xor
jno
dec
rcll
les
xor
fwait
xor
out
pop
jp
dec
mov
push
lcall
dec
add
mov
cmp
cli
xor
mov
dec
or
mov
sub
or
push
mov
pushf
pushf
ret
mov
ja
and
or
or
lods
cmovbe
test
das
test
add
or
and
inc
jmp
insb
adc
lods
icebp
inc
cmp
sbb
sub
mov
and
dec
dec
push
stos
mov
sti
mov
cltd
dec
jae
cwtl
lahf
out
hlt
lret
rclb
push
lret
pop
mov
popa
and
ret
mov
add
sub
pop
enter
inc
rcrl
in
out
in
xchg
cld
push
sbb
imul
outsb
outsl
iret
jle
xor
popf
dec
out
rorl
popa
std
xlat
in
cmp
lret
xchg
lock
lods
and
mov
in
pcmpeqb
icebp
or
fdivrs
pop
and
scas
sbb
decb
cmc
mov
mov
mov
cwtl
and
ror
adc
mov
shll
jne
dec
sbb
push
jb
mov
pop
lods
dec
dec
cmp
sbb
mov
popf
test
dec
ljmp
mov
stos
lret
iret
cli
add
or
lock
dec
fnsave
push
inc
pop
xchg
jne
xchg
repnz
rcrl
lahf
mov
std
sahf
jg
daa
enter
pushf
aaa
pop
jbe
aad
pop
fucomi
and
roll
xchg
jo
dec
mov
repz
test
pushf
add
inc
aas
mov
mov
jne
sbb
idivb
test
mov
mov
mov
dec
mulb
imulb
movsb
pusha
mov
in
mov
lret
cmp
jl
and
cmp
jle
sub
stos
arpl
daa
jnp
in
xchg
test
repz
sub
jno
mov
jg
mov
gs
call
and
rol
ljmp
pushf
inc
or
xchg
mov
cmp
popf
into
es
push
mov
sub
sub
fiaddl
jo
test
sti
aaa
pop
lods
pusha
and
mov
cmp
cmc
out
inc
or
imul
xchg
cltd
loopne
jae
fwait
push
push
rorl
push
cmp
lock
push
insb
insb
lret
sahf
push
lcall
mov
in
pop
popa
into
add
inc
sub
cs
mov
stos
das
pop
jb
sub
imul
xchg
and
std
jmp
pop
fisubl
pop
cmpsb
jnp
imul
iret
pop
int3
popf
mov
push
mov
fmul
shrl
and
pop
sbb
xor
dec
dec
test
fidivrl
add
cmp
lret
pop
inc
sub
lea
mov
adc
fwait
push
xchg
and
sub
lds
shlb
addr16
push
pushf
jge
push
or
jne
int3
push
sahf
inc
push
mov
xchg
mov
push
es
sbb
push
fadd
push
popa
dec
daa
mov
add
test
movsl
arpl
inc
push
fdivl
push
xlat
inc
js
pusha
push
subb
in
mov
ja
pusha
repnz
mov
mov
xchg
das
sub
stc
push
push
jp
imul
cmc
scas
xchg
jmp
fstps
adc
lret
stos
add
jle
movsl
out
mov
mov
sbb
inc
movsl
orb
das
movsb
test
xor
add
jle
in
xor
aad
or
sbb
pop
and
cltd
inc
ds
mov
inc
inc
lahf
aas
mov
sub
jl
aaa
addl
dec
imulb
xor
test
sbb
mov
adcl
imulb
popa
imul
mov
mov
mov
add
orb
push
adc
dec
subl
stc
or
imul
adc
fs
xor
pop
cwtl
arpl
xchg
jl
sub
int3
sub
into
das
dec
lret
lahf
xlat
test
lahf
data16
movsl
sub
idivl
stos
mov
inc
lods
mov
shll
int
pop
rolb
adc
shlb
sub
aas
pop
sub
mov
pushf
mov
fs
jg
pop
fs
ficomps
xchg
mov
xor
or
ja
mov
mov
fsubrs
mov
sub
into
adc
sub
push
cld
add
or
jb
xor
out
ljmp
sub
loopne
mov
fistps
loopne
cmpsb
xchg
ret
or
in
fisubl
pop
adcb
pushf
adc
inc
sbb
lcall
ds
xchg
xor
pop
mov
lods
jge
pop
xchg
pop
mov
sbb
in
andb
jg
je
inc
adc
mov
mov
cmp
test
scas
add
adc
dec
mov
and
int3
out
xchg
mov
daa
cld
scas
data16
dec
int3
sbb
jb
enter
cs
push
orl
xor
popf
pop
dec
js
push
popl
push
out
mov
dec
cmovge
pop
pop
xchg
js
jmp
lods
imul
test
test
ss
jbe
repnz
adc
mov
cmp
mov
lcall
mov
repz
incb
ficomps
jmp
out
jo
sti
or
dec
in
fcoml
aas
movsb
dec
xchg
mov
xchg
mov
add
daa
xchg
add
dec
stos
jbe
dec
pop
mov
cli
mov
xchg
xor
pop
lods
movsl
jle
xor
inc
cmp
jns
mov
mov
bound
mov
jecxz
les
test
push
push
cmc
addb
push
aam
inc
scas
push
push
push
shr
rorb
icebp
fwait
xchg
adc
test
test
test
mov
lods
xor
add
popf
les
pop
mov
repz
leave
inc
enter
test
cwtl
adc
xchg
push
mov
pop
sbb
dec
adc
imul
popf
jnp
fisubrl
daa
out
mov
push
cmpsb
ret
test
call
or
mov
cmp
jne
inc
xchg
nop
sub
xchg
mov
mov
ret
mov
inc
mov
inc
push
ja
in
jle
mov
add
lret
arpl
inc
out
and
in
mov
ret
scas
cmp
ljmp
ljmp
push
mov
sbb
inc
dec
mov
aad
jo
fs
cmpsb
inc
jb
and
mov
add
jb
xchg
lcall
and
mov
mov
dec
negl
push
jne
and
mov
dec
jnp
and
pop
imul
cltd
mov
mov
shlb
aad
inc
cmp
push
jp
pop
mov
xchg
test
es
inc
ljmp
ret
pushl
dec
push
cmp
and
adc
dec
and
and
rcrl
fidivrs
lahf
fmull
loop
push
add
xlat
les
negb
pop
stc
sub
mov
lret
mov
into
mov
andl
push
call
scas
push
lods
mov
pop
sub
push
xlat
mov
pop
leave
nop
jl
cmp
cmc
mov
mov
je
nop
dec
popf
mov
sub
jne
mov
insb
les
movsl
mov
mov
xchg
fisttpl
iret
mov
and
pop
imul
dec
jge
lahf
push
lods
pop
stc
pop
stos
nop
std
push
mov
adc
inc
lds
push
scas
pop
insl
mov
sbb
push
loopne
fwait
jp
shll
les
test
movsl
xor
mov
jg
cld
xchg
adc
stos
adc
sbb
in
test
inc
mov
into
inc
shlb
in
mov
mov
xlat
in
stos
sbb
jle
xorb
push
mov
inc
jmp
inc
mov
pop
dec
loope
push
adc
out
jbe
outsl
sbb
mov
mov
fisttps
cs
pusha
mov
mov
imul
add
roll
dec
dec
and
movsl
inc
sub
mov
dec
int
call
out
fs
xorl
xchg
cmpsl
mov
sbb
push
jnp
les
cmp
jae
mov
adc
pop
cltd
hlt
xor
or
dec
movsl
and
loope
lcall
rcrb
daa
out
mov
mov
or
js
test
pop
fwait
xor
mov
push
cwtl
addr16
xchg
add
mov
lods
test
insl
loope
xchg
aam
xchg
mov
sbb
mov
pop
int
push
xor
les
dec
test
xor
push
sub
rcll
cwtl
dec
xchg
lea
outsl
inc
mov
mov
insb
nop
xor
std
dec
subl
call
push
xor
dec
insb
aam
popf
or
sahf
jo
std
das
andb
adc
iret
dec
inc
lahf
push
in
and
xchg
xor
in
adc
je
pop
orl
out
jae
xchg
fldt
inc
cmovle
popa
vpavgb
add
daa
push
lret
loop
mov
mov
sub
fstl
push
gs
adc
popf
and
dec
fdivrl
inc
pop
fs
xchg
je
add
stos
loopne
cmc
aam
and
aam
jmp
xchg
mov
mov
ret
xor
testb
insb
jno
loop
jecxz
mov
xchg
jae
adc
xor
lea
lock
dec
int
mov
pop
pop
add
mov
stos
push
pop
mov
mov
cmp
push
jmp
mov
xchg
jne
nop
stc
fimuls
testb
cwtl
orl
or
add
pop
test
mov
popaw
xor
add
shll
into
hlt
jno
xchg
lahf
add
sbb
add
loope
xchg
movl
imul
add
pop
sbb
dec
and
adc
jg
nop
inc
test
into
nop
shll
les
idivb
pop
daa
push
int
lahf
jge
ja
dec
mov
mov
cmp
int3
cmpsl
das
or
imul
insb
jns
repnz
push
xorl
nop
std
cmp
scas
mov
mov
push
sbb
incb
js
push
mov
mov
into
ljmp
push
dec
or
cmp
fcmovu
cwtl
stos
dec
mov
add
lahf
mov
push
push
sbb
pop
xchg
ffreep
paddsb
cmp
sub
adc
aad
push
inc
hlt
sbb
xchg
pushf
pop
mov
inc
mov
jne
cmp
arpl
fimuls
and
fbstp
je
push
addr16
dec
dec
cmp
add
call
insl
popa
test
ljmp
or
cmpsb
sbb
mov
out
mov
mov
stos
dec
mov
notb
xchg
dec
xchg
sub
arpl
pop
xchg
jb
mov
mov
out
xor
jno
test
lret
test
or
lods
loopne
mov
cmp
fwait
adc
sti
xchg
pop
and
daa
push
mov
lret
mov
mov
in
mov
adc
dec
dec
es
into
outsl
push
addb
popa
lock
addr16
xlat
mov
mov
pop
xor
stos
fmull
adc
cmc
divl
adc
mov
mov
sub
jb
stos
inc
pushf
push
pushf
aaa
cmp
and
int3
or
pop
cmp
push
xor
mov
mov
enter
jbe
pop
xlat
xchg
lret
nop
aas
sbb
push
mov
les
scas
dec
movsb
xor
xor
rolb
in
inc
pop
push
cmp
outsb
mov
dec
fwait
xchg
add
inc
pop
in
inc
das
jg
fstl
xchg
mov
and
leave
call
push
sbb
in
shl
cmpsl
nop
mov
and
cmp
imul
add
fnstsw
jle
out
rclb
loop
scas
mov
ds
nop
jmp
pop
push
and
rolb
add
fwait
pop
lods
hlt
in
push
mov
sarl
leave
push
mov
lods
cli
popf
aaa
inc
test
inc
dec
fcomps
leave
inc
and
mov
pop
pushf
jmp
mov
xor
scas
lahf
add
in
icebp
cs
jl
add
jno
push
das
ljmp
add
push
lret
in
out
adcl
cmpsl
jle
sbb
mov
jne
add
loopne
cs
sarb
int3
je
jb
xlat
pusha
int3
loopne
popf
dec
out
out
xlat
insb
jns
fwait
shlb
push
imul
add
xchg
js
mov
xor
sub
leave
shll
cmp
xor
hlt
ljmp
push
mov
sub
xchg
inc
ja
fidivrl
push
pushf
jb
mov
pop
outsb
loop
dec
fs
fimull
xchg
jmp
dec
dec
dec
mov
and
xchg
inc
popa
out
pushl
or
or
add
cmp
in
mov
rcll
inc
inc
xchg
out
mov
push
in
lahf
nop
orb
sub
outsl
icebp
cld
mov
xor
out
testl
xor
jns
loope
and
das
lods
adc
cmp
or
bound
movsb
dec
fildl
ja
dec
insl
push
mov
mov
push
dec
dec
fistpl
mov
pop
negb
out
clc
loopne
out
nop
in
gs
idiv
mov
lret
out
in
cmp
mov
in
pop
mov
push
pusha
pop
shll
shrl
jmp
sub
mov
add
dec
mov
inc
arpl
mov
sbb
test
adc
xchg
test
lret
ret
dec
rorb
mov
add
out
sbb
and
adc
cmc
sbb
xchg
add
stos
js
jecxz
mov
cmpsb
cwtl
popf
mov
cmp
shlb
xor
dec
mov
xchg
mov
mov
negl
xchg
into
sub
shlb
mov
mov
xchg
addr16
hlt
aad
add
add
stos
iret
lock
loope
jmp
int3
cwtl
push
mov
data16
xchg
inc
jecxz
sub
arpl
loopne
popa
in
mov
ja
push
insl
clc
icebp
jmp
stos
sti
stc
scas
mov
xor
pop
popf
ret
subb
xchg
testl
jno
mov
add
pusha
cmp
mov
fmulp
rcrb
and
scas
push
mov
xor
xchg
and
cmpsb
or
push
and
mov
inc
int3
push
and
loop
push
pop
mov
cmpsb
and
aaa
mov
mov
mov
jnp
dec
rolb
push
shlb
mov
xlat
push
sbb
push
jnp
and
std
jp
mov
insl
and
lods
xor
fiadds
dec
in
in
xchg
dec
adc
or
mov
mov
popf
pop
dec
lods
imul
push
mov
lret
es
pop
mov
lods
or
fwait
pop
or
mov
outsl
nop
icebp
dec
and
or
cmp
xlat
ljmp
add
in
test
adc
stos
xchg
adc
imul
test
xchg
xor
jne
pop
fs
mov
inc
aad
xor
test
and
into
push
lret
ret
sahf
test
sarl
or
arpl
insl
sbb
inc
inc
movsl
pop
ret
pop
cmpsl
xchg
and
in
sbb
xchg
push
cmp
xlat
dec
repz
cmp
ljmp
scas
and
cmpsl
sti
pop
mov
sub
jno
ljmp
xchg
xchg
push
scas
or
pop
mov
in
vorps
mov
loope
lods
fstpl
imul
pop
bound
cs
add
aam
cmp
push
xor
arpl
mov
enter
xor
add
mov
fs
xor
outsl
es
xchg
mulb
push
in
scas
outsl
lret
sbb
insl
movsl
sub
movsb
xchg
pusha
popf
out
or
push
movsl
dec
rol
mov
xor
sbb
nop
cld
sub
push
pusha
popa
push
ret
testl
jne
sbb
repnz
es
xor
jo
xor
ds
cs
nop
sbb
dec
mov
or
lock
icebp
mov
adc
mov
and
mov
js
mov
or
add
mov
daa
pusha
shll
add
dec
mov
sub
scas
rclb
dec
ja
rolb
sub
inc
popf
push
mov
xchg
jnp
imul
popf
movsl
scas
cltd
popa
ficompl
mov
out
pop
sub
inc
scas
jp
mov
xor
popf
imul
or
jbe
mov
xor
cmp
test
xchg
scas
hlt
mov
icebp
sub
mov
pop
mov
orl
std
fs
cmc
jle
into
lea
lock
mov
push
jl
test
loop
stos
mov
dec
imul
punpckhwd
dec
pushl
jno
inc
cmc
xor
jge
pop
sbbl
ffree
mov
lahf
stc
shll
testb
inc
int
inc
adc
pop
push
sub
mov
mov
aas
nop
mov
pop
or
dec
jnp
xchg
inc
jae
movsb
outsb
inc
ret
inc
sub
push
cmp
and
orl
push
aas
cmpsl
jo
lods
repz
push
pop
and
sub
add
inc
sahf
std
jae
int3
imul
in
adc
loopne
push
mov
adc
arpl
negl
repnz
push
fildl
lods
push
imul
and
xchg
jb
fildl
aas
popa
lock
inc
test
sahf
bound
mov
sbb
sarl
or
pop
mov
pop
lods
loope
or
sub
addr16
sub
add
and
and
jmp
enter
outsl
pop
mov
aaa
pushf
stos
imul
xchg
mov
xchg
hlt
jno
lods
lock
arpl
shr
call
pop
in
ljmp
cmpsb
xchg
sub
stos
jno
out
jne
mov
inc
adc
and
mov
stc
mov
aas
rclb
push
lds
div
mov
pop
pop
cmpsb
xchg
popf
scas
push
insl
sub
test
xchg
leave
ja
adc
jge
sub
mov
xlat
add
lret
gs
lret
cmp
add
gs
add
movsl
ret
scas
push
jno
sub
orl
loope
sbbl
dec
or
loope
fisttpl
fmuls
stc
inc
out
xor
xchg
negb
jge
mov
inc
push
cmp
xchg
cmpsb
mov
jo
dec
and
pushf
mov
mov
mov
jae
scas
mov
add
pop
jmp
pop
add
push
ror
sbb
push
jge
jl
xor
jmp
movsb
add
xor
adc
fwait
sub
or
add
pop
xchg
cmpsl
add
insl
sub
mov
push
push
mov
cmc
xor
jl
pushf
dec
mov
push
movsl
pop
and
pop
out
bnd
xlat
pop
jmp
nop
fiaddl
adc
popf
add
in
lods
nop
or
arpl
inc
call
adc
scas
mov
pop
jae
and
cld
inc
icebp
fistl
orl
mov
xchg
pop
call
clc
cmp
dec
lahf
sub
movsl
xorb
movsb
dec
scas
pusha
add
ljmp
pop
xlat
cltd
jmp
popa
cmpl
popa
cs
adc
clc
xchg
xchg
lea
and
cmp
loop
adc
cmp
outsb
fnstenv
insb
js
scas
xchg
xor
cltd
or
pop
mov
jbe
adcl
and
jbe
nop
loop
pop
sub
stos
pop
sbb
mov
xor
roll
cmp
adc
imul
dec
dec
push
pusha
or
movsb
scas
imul
pop
mov
sahf
lea
mov
movsl
mov
mov
pushf
xor
dec
lret
push
lods
frstor
and
pusha
push
lds
inc
cmpsl
std
aaa
lock
shrl
or
cmp
xor
in
mov
mov
fwait
sti
inc
push
jnp
push
xlat
jns
add
xchg
movsl
loope
jecxz
mov
or
test
pop
es
outsb
inc
aaa
in
shll
lahf
sbb
test
stc
cli
ror
mov
jbe
mov
popf
iret
mov
push
mov
ret
inc
xor
insb
dec
inc
int3
sahf
mov
test
jmp
movsl
push
stc
inc
jmp
lahf
pop
xchg
or
jne
dec
and
mov
cmpsl
in
inc
sbb
jg
fstl
mov
add
pop
jge
cmp
mov
addr16
hlt
mov
lret
mov
sub
sbb
dec
fmuls
sbb
add
dec
lahf
hlt
pop
clc
add
cmp
jl
cwtl
mov
in
add
lock
xor
fistl
push
shrb
mov
stos
iret
inc
or
repz
lret
xchg
jno
lea
insb
pop
sbb
sti
rclb
jo
push
add
iret
cmpsl
lahf
jbe
daa
inc
inc
scas
xor
xor
xchg
dec
les
dec
sbb
dec
dec
das
addl
minps
lds
inc
ret
in
xchg
jle
mov
jno
mov
push
test
in
push
sub
cld
lret
repz
insb
dec
enter
mov
shlb
dec
adc
jecxz
cmp
mov
pop
scas
in
mov
fadds
int3
and
dec
inc
rorb
xor
aaa
push
push
jbe
rorl
push
adc
inc
and
jp
cli
clc
cmovs
jle
mov
jle
inc
cmpsb
jmp
inc
mov
add
inc
mov
cld
cmpsl
mov
lahf
ret
cmp
popa
test
fdivl
pushw
pushf
jnp
int3
sub
imul
add
fcmovnbe
mov
dec
ret
das
orl
pop
divb
js
push
stos
hlt
xor
jno
inc
xor
roll
fstl
cwtl
or
imul
cltd
and
fwait
mov
lods
mov
sbb
inc
mov
sub
and
lock
ljmp
mov
push
aaa
jbe
js
and
movsl
pop
adc
xlat
cmp
mov
push
jg
mov
cmpsl
lret
shll
xchg
orb
xorb
and
lds
jmp
jle
mov
mov
stos
push
stos
sbb
xlat
out
aam
js
mov
outsb
push
xlat
shll
inc
xor
jo
fiaddl
pop
xchg
bound
jmp
xorb
mov
testb
test
std
aad
shll
cmp
jecxz
xor
pop
sub
insl
xor
push
into
fld
lret
mov
jns
push
mov
mov
loop
mov
jno
out
cltd
mov
sahf
or
mov
call
insb
arpl
icebp
or
sub
into
outsl
ja
outsb
cmpsl
push
mov
or
xor
xchg
xchg
mov
cwtd
fldl
aam
imul
lea
mov
add
lahf
mov
push
in
ds
cmpsl
movsl
or
jbe
dec
dec
dec
pop
pushl
loopne
in
jg
adc
inc
mov
sub
push
sbb
mov
cmc
test
je
jge
cmpsb
sub
dec
dec
cmp
mov
mov
pop
or
push
leave
add
cmp
jae
push
cmc
cld
sub
cmpsl
mov
aam
jle
mov
jg
call
bound
std
das
pop
mov
sbb
popf
xchg
fisttps
and
dec
xor
lods
adc
in
jne
int
or
inc
lret
scas
pop
cld
or
sti
inc
sub
push
in
jae
int
push
aam
data16
in
inc
xchg
sub
divl
add
leave
pop
xchg
dec
cmpsl
pusha
mov
dec
sbb
addb
pop
scas
push
stos
subb
movsl
inc
es
xor
xchg
test
pop
sub
and
dec
sahf
and
in
sbb
sbb
mov
sub
or
dec
xor
movsb
cmp
cwtl
arpl
or
mov
lds
push
lret
dec
push
lods
mov
jnp
pop
fwait
sub
aaa
xchg
fidivs
aad
pop
or
jp
cmc
pop
mov
xchg
ret
pusha
ret
pop
jge
and
cmpsl
lods
inc
lods
test
int3
jbe
out
jb
mov
jne
xchg
in
jge
fucomp
push
cmp
out
mov
mov
imull
ljmp
hlt
cmp
mov
adc
mov
pop
xor
adc
popa
out
test
lds
push
pop
and
lea
lock
testl
xchg
notb
xor
iret
fwait
cmp
inc
pushf
sub
sbbb
dec
xchg
xor
xchg
std
pop
lea
aas
xchg
loopne
pop
adc
aad
out
incb
scas
std
cmpsl
adc
and
sub
divl
inc
std
cmc
and
fistpl
xchg
in
or
xchg
xor
mov
mov
data16
sub
decb
sub
lret
popa
dec
adc
test
mov
mov
xor
je
cwtl
lods
ss
push
shrl
sub
cmp
pop
sbbl
int
sbbb
fs
mov
test
mov
dec
push
sub
mov
pop
jl
cmpl
add
ja
into
das
lea
mov
inc
pop
dec
clc
divl
pop
test
in
or
icebp
jmp
outsl
and
mov
pusha
or
add
push
imul
jp
movsb
das
int3
imul
fmulp
cmpsb
ss
dec
xor
push
pop
notb
pushf
cmp
add
sbb
shrb
mov
movsl
aas
imul
mov
sub
add
in
movsl
fisubl
pushf
push
fs
jne
jne
cvtpi2ps
mov
loope
and
or
je
fiaddl
cmp
inc
dec
test
jmp
push
pop
jnp
scas
lds
ret
or
shll
fs
cmp
shl
repnz
mov
es
subb
inc
imul
incl
push
adc
mov
and
sti
jle
add
div
fdivrl
xchg
push
adc
ret
clc
popf
icebp
cmp
adc
call
push
add
or
add
add
jno
std
scas
subb
push
adcl
pop
lret
add
iret
jp
pop
mov
arpl
aad
and
or
lods
add
addr16
cmp
dec
das
mov
outsb
adc
dec
mov
mov
and
hlt
xchg
leave
scas
out
cmc
lea
fs
jae
push
and
hlt
xlat
jl
adc
jo
daa
sahf
add
repz
jns
fwait
shll
je
push
pop
dec
rol
mov
movsl
repnz
push
jnp
mov
dec
outsl
xchg
mull
mov
mov
mov
rorl
andb
sarb
shl
or
dec
out
mov
jp
mov
mov
loop
cmpsl
xor
jge
and
sbb
jmp
jb
mov
xchg
sub
add
fstpl
or
in
stc
aaa
and
mov
pop
pushf
lods
dec
xor
inc
sbb
sbb
cmp
push
leave
cmp
jne
xchg
inc
ret
xor
and
lods
mov
xchg
dec
sbb
add
sub
mov
je
push
xchg
enter
scas
or
repz
pop
scas
jae
push
mov
stos
int3
shr
je
js
cmp
mov
lock
cwtl
adc
mov
mov
jb
jp
xor
shlb
mov
pop
lret
adc
sub
stos
pushf
adc
jno
push
inc
sahf
push
push
xchg
in
ja
pop
xor
in
xor
and
rorb
popf
fldenv
fstpl
inc
rcll
lret
clc
aad
cmpb
mov
notl
movsb
jb
pushf
push
nop
inc
pop
shlb
mov
sahf
movl
push
cmp
mov
xor
jb
mov
inc
mov
inc
mov
dec
fadds
ja
cli
fistpll
cli
pop
adc
push
dec
je
sub
jmp
inc
ud0
orl
mov
dec
sub
movsl
cs
js
mov
aad
xchg
mov
loop
cmp
xchg
dec
lock
into
push
push
pop
test
sbb
or
xchg
jo
push
add
int3
outsb
loopne
sbb
or
rclb
dec
out
pop
das
xchg
lcall
mov
ret
adcb
sub
shl
call
mov
lods
mov
in
pop
cld
rcr
inc
dec
jno
sub
inc
fsubr
bound
lcall
push
arpl
aad
cs
mov
xchg
pop
and
push
fisttpll
and
jne
sti
sbb
dec
pop
div
lret
dec
hlt
test
fcmovnbe
or
sub
mov
adc
jo
or
add
insb
andb
push
aaa
jns
sbb
out
movsl
mov
out
mov
xor
ret
stos
loop
sbb
clc
mov
sub
clc
sub
jmp
loopne
adc
and
push
mov
std
in
adc
xchg
test
leave
clc
add
adc
cmp
out
shll
inc
movsb
or
incb
aam
leave
popa
add
mov
mulb
addr16
fisttpll
jb
pop
add
mov
add
dec
or
vmovdqu
enter
mov
mov
jo
mov
cld
xchg
das
daa
stos
leave
and
cmp
jmp
ja
movsb
add
add
sbb
or
stos
inc
aas
sub
test
push
lock
popf
popa
pop
xchg
shll
push
loopne
sarl
cmp
les
rcrb
mov
jmp
scas
repz
jmp
mov
adc
dec
dec
popa
das
rcr
data16
lret
or
sbb
pop
rolb
push
inc
mov
in
add
in
add
mov
call
lcall
jmp
mov
adc
jne
or
mov
jmp
pop
push
xor
or
ds
stos
and
aas
js
mov
xchg
lock
outsb
insb
dec
lds
mov
xchg
add
pop
xchg
sbb
mov
icebp
cmpl
in
push
sbb
xchg
push
cmp
in
mov
nop
jo
and
in
sub
mov
sbb
xchg
jne
mov
mov
xor
sbb
cmp
push
cld
cmp
adc
push
lock
in
and
jo
cwtl
mov
push
fcomi
cmpl
inc
inc
dec
add
inc
mov
rcll
add
mov
and
mov
adc
or
mov
and
pushf
ljmp
cli
outsl
xor
int3
imul
pop
pop
add
loopne
inc
es
mov
loopne
mov
pop
adc
fmull
js
das
mov
daa
mov
and
aas
repnz
sub
jmp
fs
mov
pop
pop
das
pop
cwtl
inc
cltd
add
lcall
and
popa
loop
in
subl
pop
sub
pop
adc
adc
mov
das
out
movsb
push
inc
loope
addr16
adcl
sbb
add
push
lcall
push
clc
adc
cmp
jbe
xorb
cld
fidivl
loopne
sbb
cmp
dec
add
lahf
xor
test
addr16
xchg
inc
sub
inc
jle
test
jle
adc
leave
adc
std
sbbl
ret
cwtl
adc
repnz
jp
outsl
bswap
pop
xor
xor
push
je
sbb
lcall
pop
in
das
push
shrl
lcall
in
insl
sub
sbb
test
rcrl
jne
push
sub
fadd
fadds
enter
dec
or
sbb
inc
jecxz
cltd
inc
sbb
xor
outsl
cltd
sub
jnp
adc
enter
xchg
inc
dec
xchg
push
jb
mov
out
cli
sub
jae
daa
sub
xor
xor
imul
insb
sbb
leave
xor
xchg
or
and
iret
push
outsb
sub
sbb
adc
jle
jmp
adc
in
movsb
popa
ds
fcmovu
add
clc
lret
stc
xor
pop
cltd
jbe
mov
fistl
pop
lods
adc
xor
ficoml
and
out
jne
es
xchg
mov
arpl
or
xor
adc
and
inc
subb
pop
inc
jge
mov
sti
add
fs
pop
in
cmpsl
cmp
mov
sbb
mov
or
jnp
sar
in
or
cli
mov
imul
lret
cs
xchg
mov
sub
fucomp
neg
and
jl
push
shl
push
dec
push
xor
mov
mov
inc
test
fbstp
aad
insl
stos
inc
and
mov
jbe
and
adcl
sbb
mov
push
bound
faddl
inc
and
dec
dec
cmp
aam
xor
fmull
fldl
lods
lds
dec
cmp
loop
inc
out
jo
push
push
dec
and
jbe
push
adc
ds
pop
fwait
push
mov
nop
mov
stos
pop
fwait
push
or
jmp
sub
in
jnp
aaa
repz
cmpsl
pushf
or
inc
out
pop
enter
mov
add
adc
inc
or
mov
out
ret
and
xor
std
and
cmp
out
repz
adc
mov
test
outsl
sub
adc
add
jmp
mov
jbe
push
fimuls
push
dec
xor
lock
imul
xchg
add
mov
add
add
pop
fistpll
xor
pop
sub
inc
out
and
sbb
dec
clc
daa
mov
mov
dec
sarb
cmp
je
jns
dec
fildl
mov
adc
ret
lods
pop
pushl
push
sti
addr16
pop
add
addps
stos
enter
xor
inc
pop
mov
testl
xor
test
cmp
add
cmp
fistl
inc
test
inc
push
jl
inc
cli
and
dec
xchg
and
jp
insb
insb
imul
sub
adcb
mov
sbb
pop
in
xchg
pop
inc
mov
push
mov
or
and
cwtl
daa
pop
leave
pushf
rcrl
push
outsb
iret
inc
mov
inc
jbe
stc
add
add
mov
cld
out
ljmp
and
inc
sub
adc
vpdpwssd
aaa
cmp
pusha
pop
sti
ljmp
mov
sbb
in
loopne
andb
leave
mov
pop
push
cmp
jle
arpl
stc
push
xchg
ljmp
xorb
add
mov
push
lss
adc
mov
addb
inc
inc
push
jbe
push
xor
xor
mov
add
popa
movsb
and
pusha
movsl
and
dec
mov
sub
inc
mov
and
adc
mov
cmp
jl
xor
mov
push
sbb
cs
dec
mov
xor
inc
pop
xor
dec
pop
cmp
push
inc
daa
sbb
sub
dec
lods
frstor
mov
adc
jb
pop
mov
sbb
add
mov
sbb
mov
cmp
sbb
bound
add
out
aad
cmp
call
push
addr16
sbb
das
dec
pop
ljmp
pop
adc
adc
icebp
mov
jne
xchg
das
and
dec
adc
sub
or
test
xchg
scas
mov
dec
dec
fcompl
loope
test
jnp
pushf
mov
mov
adc
test
sub
test
or
sbb
sub
daa
sub
shrl
mov
outsb
xor
pop
and
mov
push
or
fwait
cmovge
jnp
addl
mov
push
pop
mov
adc
into
js
cmpb
mov
xchg
das
and
mov
out
adc
das
xchg
es
adc
and
test
add
andb
shll
xor
push
movsl
xchg
ss
pop
or
push
adc
mov
pop
mov
daa
pop
jne
dec
add
cmp
ljmp
sbb
repnz
repz
lods
daa
dec
inc
mov
xchg
push
shr
and
jge
insb
mov
jg
or
jle
repz
mov
les
stos
or
inc
imul
adc
jp
fidivl
add
push
push
lods
out
aad
test
push
jecxz
sbb
push
sbb
into
jns
scas
aas
jp
xlat
cmp
popf
xchg
outsb
movsb
adc
sbb
cmp
sbb
in
dec
jge
rcrb
sbb
imul
sub
stos
lock
cli
cmp
xchg
xor
jns
ds
lds
sub
imul
and
jmp
js
or
mov
sbb
outsb
sub
adc
sahf
cmp
push
mov
xor
movsb
lock
push
xchg
popa
lds
xor
inc
mov
lea
or
cmpsl
adc
loope
imul
scas
inc
mov
nop
pop
cmp
jbe
xchg
test
dec
test
dec
mov
clc
out
dec
or
sub
pop
push
jmp
outsb
and
sbb
xor
fucomi
movsb
mov
int3
rcll
idivb
inc
fstpt
sub
lcall
push
xlat
movsl
fistl
in
push
idivl
movsl
push
jo
ss
imull
aad
repz
in
enter
in
dec
call
mov
xchg
jb
in
push
jg
lcall
out
mov
cwtl
push
rclb
mov
inc
xchg
sub
ret
and
push
add
push
push
fs
in
jo
inc
mov
rcll
lods
repnz
stc
sbb
or
xor
pop
push
call
fdiv
ja
sbb
or
sbb
push
stc
push
sbb
or
out
enter
outsb
push
inc
dec
mov
mov
sti
adc
mov
lods
xchg
jo
or
push
push
incb
pop
dec
dec
lahf
mov
dec
cmp
ss
add
gs
cmpsl
push
popf
fcmove
test
lret
add
imul
cmp
movsb
sub
inc
fldenv
inc
xchg
xor
xchg
inc
xlat
jbe
sbb
dec
pushf
push
mov
push
sub
jne
mov
lret
mov
in
inc
jp
mov
mov
jb
cmp
hlt
add
in
ljmp
ror
sbb
out
enter
daa
pushf
fcoml
pop
mov
inc
orb
dec
dec
or
loope
ljmp
lods
fwait
daa
jmp
aam
mov
sub
pop
mov
test
jmp
sahf
arpl
test
add
and
mov
das
cmp
pop
mov
push
mov
js
push
dec
mov
lahf
inc
pop
fwait
push
test
shlb
cltd
data16
imul
sbb
push
dec
fcom
inc
ficoml
push
in
aam
adc
call
sbb
adc
daa
loopne
sti
adc
sub
add
jne
pop
add
test
repnz
push
cltd
cs
lods
cmp
adc
imul
add
xor
mov
push
mov
shlb
mov
sub
sbb
int3
sbb
push
push
push
xchg
mov
dec
and
iret
aam
xor
inc
jg
insb
pop
jnp
sub
push
imul
ret
inc
popa
push
add
inc
stos
lahf
out
cli
bound
ficomps
adc
adc
cmp
add
lret
jge
jg
jo
add
or
mov
pop
jle
lret
inc
cmp
inc
push
sarl
mov
push
dec
or
jp
sbb
xor
push
data16
mov
push
inc
cmpsb
xchg
add
adc
dec
mov
icebp
cwtl
shrl
pop
or
cwtl
pop
ljmp
pop
xor
jae
aad
pop
push
inc
pusha
out
sbb
aaa
jne
or
push
adc
pusha
dec
adc
in
inc
and
push
sbb
aad
jno
rcrb
cs
inc
push
aaa
lret
dec
arpl
mov
das
ja
or
push
push
adc
jl
push
mov
enter
leave
inc
add
sub
lds
pop
xor
sbb
mov
clc
loopne
adc
loopne,pn
sub
addr16
mov
xor
inc
loop
enter
aaa
jb
mov
add
daa
in
xor
mov
dec
dec
aaa
lods
mov
out
cli
and
xor
jbe
dec
xor
cmp
cmp
fdivrl
mov
lcall
testb
shl
xchg
fmul
sub
add
cmp
inc
mov
xor
addr16
fs
fmuls
inc
in
fldenv
add
xor
enter
mov
test
dec
test
outsb
inc
pop
cmp
mov
jae
pop
imul
insl
xchg
mov
and
hlt
pop
mov
mov
adc
mov
fstps
adc
cs
sbb
inc
jb
lock
sub
sbb
push
xor
int
jg
sahf
fwait
mov
mov
cwtl
adc
mov
or
cs
ss
and
add
inc
add
test
sarb
adc
pop
cmp
jecxz
xor
mov
sub
stos
lods
mov
outsl
sub
inc
mov
inc
jae
push
insb
les
outsl
push
adc
jb
mov
adc
ret
es
sarb
sub
fs
mov
cmc
mov
mov
std
test
out
lret
loopne
xchg
inc
mov
ljmp
mov
jmp
inc
jge
xor
push
rcll
fmul
jno
fld
jb
shrl
sub
adc
pop
lcall
dec
cmp
and
fwait
fwait
push
pop
fldt
adc
leave
pop
outsb
push
fistl
ljmp
pop
cmp
jbe
fnstenv
movsl
sub
gs
or
mov
xor
lods
lret
dec
jbe
popf
xor
notb
sub
xchg
or
and
ror
adc
fsubl
adc
jb
jns
add
push
out
pop
sbb
repnz
xacquire
push
mov
jge
jno
stos
push
movsl
inc
jnp
pop
inc
mov
scas
or
and
and
dec
or
loopne
cmc
popf
movsl
pop
push
xor
mov
push
jbe
cmp
sbb
in
cmpsb
pop
mov
lret
jp
push
imul
in
xchg
inc
je
fstpt
and
pop
jge
pushf
pop
jge
arpl
jle
shll
ja
leave
cmp
addr16
into
dec
aam
inc
sub
inc
xor
or
bound
pop
pop
sarb
mov
ud0
outsl
cs
bound
pop
mov
inc
pop
dec
sbb
xchg
push
xor
xchg
hlt
push
adc
iret
inc
mov
sub
jp
cmc
int
dec
pop
and
sub
add
sbb
mov
lods
add
mov
jge
lea
std
fisubs
mov
inc
sahf
bound
dec
inc
cmp
imul
inc
pop
or
fldenv
jb
fmuls
fmuls
or
adc
lcallw
popa
hlt
jno
push
fwait
inc
jns
fsubr
pop
sti
fcomps
es
pop
push
aam
sbb
inc
cli
dec
popa
repz
jbe
enter
iret
push
jo
clc
jl
popa
inc
sbb
mov
loop
sub
add
inc
jge
in
or
jae
sbb
pop
iret
cmp
test
rcrb
dec
push
push
fisttps
or
out
and
pop
lods
stos
sarb
pop
out
push
nop
sbb
out
ss
pop
sbb
mov
mov
mov
and
out
pop
push
arpl
push
cmp
pop
jg
or
mov
adc
mov
shll
sbb
std
popa
dec
aad
sbb
push
sti
sub
push
adc
pop
stc
jae
popa
call
or
jbe
adc
outsb
push
push
mov
leave
inc
sub
daa
cmp
pop
sub
mov
add
out
push
xlat
adc
jbe
mov
pop
arpl
and
dec
and
movsb
add
sub
mov
jge
push
pop
cmp
push
hlt
js
fprem
es
pop
lahf
addr16
cld
jae
adc
outsl
dec
mov
nop
add
fstl
inc
js
leave
mov
sub
and
mov
fs
cmp
cmp
jne
push
leave
dec
sub
mov
jecxz
mov
cmp
aad
pop
jnp
and
ficoms
xchg
cwtl
jp
add
cld
xchg
pop
int
enter
adc
fistpl
jge
pop
jbe
fidivl
clc
sti
or
push
add
clc
jle
pop
dec
push
cmp
or
pop
js
enter
mov
xchg
jge
jns
and
fdivrp
add
pusha
fsts
sbb
lds
push
and
popl
adc
cmp
clc
sbb
fstpl
xor
out
add
movsb
sbb
jle
push
sbb
ja
popa
push
pop
mov
gs
sbb
pop
je
call
cli
scas
dec
outsl
test
dec
or
aad
add
sub
jae
jno
in
sarl
out
push
xor
mov
and
adc
rcrb
rcll
cltd
push
out
into
sub
pusha
sub
outsb
test
lret
inc
jle
mov
es
outsl
loope
sub
addr16
out
cmc
xor
cs
sbb
dec
xor
pusha
aaa
push
ss
stos
cmp
je
aam
xchg
out
sub
pop
cmp
fcomip
xchg
xor
out
pop
js
dec
fsubr
sbb
xchg
xchg
cmp
ds
sbb
in
loope
dec
call
ret
dec
in
and
inc
or
and
mov
mov
cmp
adc
xchg
jp
rol
adc
loopne
xchg
add
sub
arpl
xchg
xor
adcb
stos
cmp
clc
dec
push
fsubs
inc
gs
jp
rclb
ds
vshufps
push
mov
fdivrp
xor
cmpsb
push
leave
sub
outsb
dec
enter
gs
jp
shlb
pop
mov
add
mov
and
cmp
cwtl
bound
sub
cs
cmp
sub
mov
icebp
clc
xchg
mov
cmp
data16
jp
shl
adc
cld
add
inc
cli
lret
je
shlb
lret
adcb
hlt
dec
mov
sahf
outsb
pop
or
cwtl
push
add
mov
pop
mov
push
enter
gs
mov
add
scas
pop
ds
sahf
jbe
jns
mov
or
mov
mov
ficoml
push
mov
sbb
mov
jbe
sub
cwtl
jp
jge
add
gs
es
inc
stc
ret
loopne
rorb
xchg
cwtl
cli
push
stc
sub
cmpsb
xchg
enter
gs
push
rolb
es
inc
lods
rolb
push
or
cmpsb
arpl
jbe
aad
mov
push
and
push
xor
movsb
and
arpl
push
mov
rorb
orl
xchg
or
mov
inc
or
push
push
pop
sub
cli
fwait
test
loopne
pop
stc
adc
xchg
push
lcall
jbe
jge
push
or
es
dec
xor
fstl
adc
add
scas
xchg
jmp
sahf
mov
xor
mov
and
nop
mov
push
mov
pusha
mov
stos
or
mov
jbe
sub
cwtl
jp
jns
sbb
pop
clc
ds
jns
xchg
movsl
scas
out
mov
mov
sarl
mov
inc
or
mov
push
push
aaa
mov
mov
cmp
shrb
add
scas
mov
mov
sahf
bound
mov
push
add
sub
repnz
enter
gs
data16
adc
in
xchg
jge
add
gs
sub
arpl
cltd
xor
sahf
push
loope
mov
jp
call
jp
rcrb
pop
adcb
push
push
mov
mov
xor
push
or
lods
popa
arpl
mov
pop
je
or
dec
jg
inc
lahf
sub
add
sbb
add
inc
call
push
and
shrl
xchg
mov
push
and
and
daa
movsl
xor
mov
add
push
fcom
js
fistpl
pop
adc
into
imul
cmpsl
jl
adc
clc
sub
push
add
xchg
call
addr16
mov
sbb
aam
adc
imul
and
cmp
roll
iret
aad
fstl
bound
fists
out
xchg
adc
push
enter
idivb
adc
loop,pn
jge
push
mov
inc
or
rorl
nop
mov
nop
mov
mov
ljmp
jb
push
or
shrb
pop
pop
cmpsb
push
bound
roll
sbb
rcll
stos
jb
jnp
fistps
jo
lret
out
jo,pn
insl
sbb
mov
cmc
hlt
fnstsw
das
jbe
dec
jo
push
js
mov
into
pop
rorb
shrl
adc
add
inc
pop
lahf
aad
scas
cmp
stc
push
xchg
mov
jne
sarb
popa
rcrl
imul
pop
js
addr16
cmp
int3
gs
flds
pusha
mov
jle
jns
fisttpll
jo
adc
mov
jno
jmp
lock
insb
mov
inc
cs
sahf
push
cmp
mov
add
imul
cld
push
mov
aam
out
or
popf
popa
pop
xor
push
jnp
leave
inc
jmp
jp
inc
sub
cmp
mov
push
jle
cwtl
pop
push
push
xlat
and
jbe
std
xor
push
push
cwtl
push
xor
imul
iret
jl
lods
inc
mov
push
stc
pop
pavgb
add
imull
inc
pop
hlt
or
pop
test
jnp
out
jmp
push
adc
push
mov
mov
clc
int
movsb
insb
in
pop
cwtl
push
sbb
popf
cmpsl
ja
cmp
wrmsr
mov
lods
jnp
ja
mov
sub
add
sub
push
imul
je
rorb
xor
rolb
imul
pop
rcll
dec
sub
lods
cmp
gs
sbb
mov
ja
sub
add
mov
das
jnp
loope
ret
lds
mov
lock
cld
pusha
les
xlat
sub
or
fwait
pop
adc
das
mov
inc
movsl
jbe
dec
push
jbe
bound
and
jno
mov
sub
push
adc
scas
fsts
cmp
jne
loope
xor
inc
imul
sub
outsl
lods
incl
fs
push
mov
sub
loope
jo
rorl
movsb
ja
push
mov
sub
sub
pop
inc
and
xor
cmc
js
or
mov
xor
mov
xchg
mov
xchg
or
es
dec
cmp
nop
pop
push
scas
sub
arpl
mov
sbb
jnp
loope
dec
adc
push
pushf
pop
rcr
push
push
sbb
imul
inc
fwait
push
arpl
pop
gs
aas
pop
add
adc
pop
add
pop
jg
shl
iret
push
lret
xor
sbb
push
adc
fdivs
rclb
lea
pop
mov
dec
dec
pop
or
pop
cmp
pop
pop
cmp
pop
cs
xchg
inc
xor
mov
add
jae
or
xchg
scas
add
outsb
inc
sbb
sarl
pslld
data16
push
sbb
fwait
or
in
mov
pop
rclb
mov
pop
mov
xchg
pop
push
js
inc
xchg
ljmp
push
sub
inc
xchg
mov
sbb
gs
mov
arpl
xchg
and
sbb
and
clc
jle
js
mov
push
dec
or
ja
add
pop
push
jp
loop
sub
aas
std
lods
ss
test
xor
ss
ret
cwtl
inc
popa
mov
mov
jecxz
or
jns
push
daa
jl
adc
sti
xchg
or
xor
dec
push
aam
scas
inc
xor
cwtl
push
add
jbe
dec
jp
inc
xor
push
xchg
or
push
insb
sub
xchg
sub
xor
hlt
das
sbb
mov
mov
mov
pusha
mov
xor
pop
data16
or
jo
sub
outsb
xor
adc
imul
loope
cs
cmp
aam
adc
sbb
push
lcall
push
pop
jns
imul
push
enter
repz
sub
inc
push
sbb
je
imull
inc
jecxz
test
andl
dec
lret
push
pusha
xchg
push
or
ja
data16
push
cmp
xchg
fsubrs
js
out
dec
jmp
pushf
test
cmpb
mov
jnp
jbe
cltd
adc
sbb
add
inc
inc
sbb
fistl
push
push
fldl
and
shrb
fidivrs
mov
pop
mov
pop
das
sbb
int
dec
sub
mov
out
jl,pt
ds
jns
sub
push
xchg
hlt
xor
mov
jmp
inc
push
movsb
lcall
fistpl
pop
call
js
xchg
jmp
ret
scas
add
and
subl
xchg
lds
inc
push
sbbb
cwtl
push
add
xor
mov
je
dec
add
cmp
in
xor
cmpsb
das
push
dec
inc
imul
or
pusha
movsl
pop
stos
bound
rcll
lret
cmc
pop
sbb
xchg
imul
xor
xor
ljmp
sbb
test
fistpll
scas
jmp
int3
xchg
pop
add
mov
lods
push
or
inc
push
xor
add
push
scas
mov
or
mov
sbb
sbb
adc
add
bound
dec
xchg
div
clc
sub
xor
dec
mov
mov
xchg
mov
xor
sbb
push
lret
adc
push
jecxz
and
popl
xor
inc
std
les
adc
dec
in
and
pusha
jnp
push
jl
jne
xchg
insb
aam
cmp
imul
stos
lea
sar
andb
imul
sbb
es
jmp
call
js
pop
mov
out
shll
inc
jle
popa
pop
adc
aam
fldt
shlb
push
adcb
pop
dec
gs
pop
sbb
pusha
aas
pusha
or
add
es
sub
mov
test
cs
lahf
roll
rorl
or
cld
das
and
inc
mov
movsb
inc
inc
xor
push
pop
packsswb
jbe
stos
pop
xor
popf
adc
stc
pop
fstl
mov
add
fadds
push
sbb
fcomi
jae
inc
cmpsb
push
jg
adc
add
rclb
sahf
test
mov
xor
sub
sub
mov
pop
int
push
jb
aaa
gs
fcom
movsl
xor
jno
sbb
xchg
sub
pop
icebp
mov
push
aam
fadds
dec
and
and
push
xchg
mov
orb
pop
test
push
aas
jecxz
cmc
cmp
push
dec
push
movsb
fwait
out
cwtl
mov
pop
adc
jnp
lods
mov
or
pusha
pop
pop
stc
rorb
mov
adc
xchg
clc
cs
fiaddl
fsubs
fwait
mov
into
push
sbb
adc
into
mov
data16
insb
lock
sub
stc
sub
ds
push
adcl
mov
sbb
mov
xor
lods
lea
in
popa
sub
lcall
out
mov
xchg
jl
pop
push
aaa
bound
mov
jo
imul
pushf
or
icebp
mov
gs
xor
inc
dec
sbb
pop
or
inc
cmpsl
out
sar
rcll
popa
pop
push
clc
jle
adcb
push
inc
push
or
mov
pop
nop
ds
inc
daa
loopne
bound
sbb
dec
mov
cmp
mov
add
test
mov
add
mov
fdivl
xchg
jns
outsb
xchg
jmp
addb
cmp
sbb
mov
insb
push
add
ffreep
push
push
inc
test
negb
jmp
jne
adc
addb
jnp
ds
subb
sbb
xor
dec
pop
xchg
adc
fimull
ljmp
and
je
push
movsb
daa
jno
sub
or
and
dec
adc
dec
out
lods
and
jp
pop
shr
mov
xchg
mov
stc
sub
into
outsl
sub
stos
jae
and
loopne
add
pushf
dec
std
jo
mov
cmp
aas
or
cmpsl
sbb
adc
adc
pusha
test
adc
and
jl
cmc
pop
jl
mov
mov
out
jbe
lds
fildll
push
jne
rcll
fdivl
jns
jnp
push
stc
jae
cmp
sahf
aas
int3
in
and
fisubs
stc
jae
dec
movsb
lea
je
sbb
int
push
cmpsb
popf
push
inc
add
daa
pop
cwtl
add
mov
add
push
add
adc
ret
inc
push
mov
mov
test
call
ds
add
insb
push
mov
push
adc
mov
dec
fnsave
jne
mull
sbb
and
addb
xchg
imul
stc
test
fadds
pop
pusha
test
mov
push
xchg
sti
ret
pusha
jmp
cs
outsb
push
jns
incl
cmp
pusha
test
cmp
mov
push
jb
sub
fdivs
std
es
or
test
movsl
and
dec
gs
lea
xor
outsl
push
add
or
sbb
and
cmp
cs
adc
jbe
clc
jns
testl
fisubrs
sub
aas
and
rcrb
mov
mov
pause
mov
push
dec
andb
push
pop
and
lea
sub
inc
jl
rcrl
mov
scas
jns
mov
jae
ss
adc
sarb
sbb
fs
adc
add
mov
cli
call
fwait
jno
push
leave
push
cmc
mov
push
cli
jbe
sbb
cmp
pop
nop
mov
jge
shrb
ds
xlat
jb
ss
add
loop
adc
sbb
sub
push
dec
pop
inc
mov
cwtl
pusha
mov
push
jo
testb
aaa
push
setns
fldl
inc
cmp
inc
loop
bound
iret
in
stos
insl
adc
and
add
rcrb
int3
jp
cmc
loopne
insl
movsb
and
push
pop
cmp
jb,pn
je
test
or
scas
fs
inc
fwait
sub
xor
je
data16
add
fwait
jns
cmp
ds
daa
add
dec
sbb
dec
sbb
call
jge
mov
pusha
movsl
in
mov
hlt
lock
xorb
xsha1
cmpsb
dec
fldl
movsl
cmp
sub
mov
stc
xchg
adc
rcll
jne
pusha
fbld
push
mov
out
sub
sti
mov
ss
pop
inc
out
jle
lret
adc
cmp
rcrl
sarl
cmpsl
fsubrs
and
nop
xchg
stos
stos
adc
std
enter
setge
pop
cmp
and
and
je
iret
sbb
imul
out
pop
in
nop
pop
test
dec
mov
cmpsl
and
sbb
push
adc
lds
push
pop
xlat
or
xchg
popa
je
aam
lea
data16
jl
loopne
inc
enter
cwtd
inc
inc
push
or
movsb
xor
push
adc
jno
xor
adcb
std
push
imul
sub
hlt
xor
jnp
add
jge
lods
aas
adc
daa
cli
aam
and
fbld
sub
sub
lcall
fisttpl
xchg
out
mov
push
xchg
push
dec
and
arpl
mov
jmp
or
adc
jmp
dec
cltd
into
sub
mov
sbb
je
popa
cmp
enter
mov
pop
xor
mov
xchg
jnp
cmp
mov
imul
jl
xchg
fsubrs
sub
push
jge
jae
mov
dec
xor
cmp
add
mov
mov
icebp
xor
mov
scas
lahf
cs
enter
dec
pop
jmp
push
jb
push
inc
adc
or
lods
jg
push
test
add
call
in
sti
test
sbbb
mov
in
mov
push
mov
xchg
cltd
push
aad
push
sbb
out
aaa
stos
push
inc
mov
nopl
adc
imul
das
addl
cmp
push
inc
xor
nop
popa
mov
and
stos
inc
mov
sub
pop
mov
inc
test
mov
xor
outsl
ljmp
mov
xchg
jo
jg
adc
shll
mov
inc
mov
fisttpl
xchg
sub
push
fldenv
jl
iret
mov
jl
mov
or
jg
test
mov
sti
sub
or
cmp
jp
add
repz
sub
divl
mov
popa
pop
dec
xchg
sbb
mov
cmp
dec
lods
xchg
sub
sti
push
cmp
inc
rolb
ret
ret
jp
adc
xchg
dec
jp
xchg
or
mov
push
ror
cmp
pop
adc
dec
lods
fbld
push
scas
rclb
add
inc
cmpsl
or
jno
out
subl
jge
xor
cld
adc
nop
cmp
and
push
xchg
mov
fnsave
test
repnz
inc
out
movsl
sbb
imul
scas
adc
add
mov
fistpll
jae
xor
loop
pop
adc
jnp
push
icebp
popa
pop
test
dec
inc
add
es
pop
mov
divl
les
test
out
mov
inc
imul
in
sub
aaa
cs
cmp
sti
clc
cli
imul
mov
pop
movsb
add
mov
lods
jae
jo
or
lods
fsubrp
rcll
hlt
xor
and
mov
mov
or
jl
pop
or
mov
jp
jp
sahf
jns
xchg
das
daa
enter
xchg
ret
and
xchg
arpl
dec
dec
mov
inc
scas
enter
ret
mov
jno
jnp
inc
test
add
cmp
mov
dec
lret
fisttpl
std
push
push
and
mov
aas
jno
adc
and
jle
pop
xor
cmp
mov
icebp
cmp
or
sbb
add
mov
push
jne
imul
add
ja
outsl
mov
and
sbb
xor
mov
jge
sbb
jne
lcall
cmp
or
jle
cmpsw
mov
xor
fwait
dec
cmp
xchg
ljmp
popf
or
or
movsb
ja
div
jne
push
push
jns
xchg
adc
and
dec
xchg
mov
xchg
scas
mov
loop
clc
ja
pop
mov
xor
jp
ljmp
and
dec
test
les
movsb
js
lods
add
jne
out
out
cld
rcl
loope
mov
repz
inc
jle
ss
lock
sbb
out
mov
adc
mov
flds
pop
pop
pop
sub
sahf
inc
jae
or
gs
inc
mov
andb
sub
mov
jmp
test
in
cltd
mov
sti
inc
xchg
popf
jecxz
mov
mov
dec
pop
inc
xor
xbegin
loope
gs
xchg
push
cmp
orl
subb
jle
fisubrl
inc
es
mov
outsl
in
enter
in
pop
repnz
jmp
imul
xor
add
jae
mov
pop
push
call
fs
lods
cmc
arpl
xchg
and
adc
mov
mov
push
sub
sub
jo
clc
pop
fs
xchg
ja
pop
clc
pop
cli
in
xchg
or
cmp
fwait
lods
inc
lea
dec
jmp
xlat
ret
das
out
xchg
mov
fbstp
mov
cmpsl
push
cld
jecxz
dec
or
imul
jns
cmp
lcall
and
int
pushf
out
sub
add
out
and
mov
test
fwait
arpl
sub
ljmp
jp
dec
jmp
xor
into
cmpsl
and
or
jns
sbb
repz
adc
xchg
rcl
pop
push
mov
ja
xor
insb
push
cmp
test
pop
loop
xchg
push
sub
lods
pop
sub
test
sub
lock
cmpsb
dec
out
rolb
sub
pop
jge
push
jecxz
repnz
negl
sub
out
mov
gs
pop
idivb
jns
mov
push
mov
daa
jge
lret
repz
insb
mov
and
sbb
subb
xor
dec
imul
jb
adc
cmp
sub
cmp
xchg
mov
and
adc
mov
and
sub
lcall
icebp
int3
out
jg
push
xor
aaa
push
jp
test
cmp
pop
ret
mov
jle
in
xchg
loopne
aam
lea
push
daa
mov
sbb
and
mov
add
jle
sbb
mov
adc
mov
dec
jns
pop
dec
adc
std
pusha
fbld
mov
icebp
jno
gs
ret
pusha
mov
cmc
mov
leave
adc
and
jle
adc
gs
mov
lock
mov
loopne
test
xchg
lock
das
adc
in
push
mov
loopne
push
sarl
fsubrs
fmuls
adc
xor
adc
sarl
ja
addr16
cwtl
aam
push
cmp
ficompl
sub
jnp
and
jbe
jbe
ja
addr16
stc
inc
lahf
nop
enter
jo
lods
jge
xor
adc
push
xchg
lcall
inc
pop
add
scas
jge
sbb
das
cmp
push
das
and
cmp
int3
inc
sti
pop
cltd
dec
inc
gs
sahf
adc
sbb
jge
dec
icebp
push
adc
xchg
cmp
mov
es
jno
inc
loope
clc
ret
push
cmp
mov
or
adc
cmp
push
insl
add
je
cld
sbb
sub
push
pop
xchg
sub
and
mov
cmp
xchg
xchg
push
imul
pop
mov
push
mov
iret
fwait
es
dec
push
das
fisubrl
mov
xchg
xchg
sbb
xchg
fwait
sub
mov
jnp
cmp
xchg
cmp
arpl
fidivrs
inc
lcall
fmuls
aam
shl
add
addr16
insb
push
inc
je
push
outsl
scas
nop
fsubrs
imul
sbb
dec
xor
jbe
and
into
push
fdivs
jg
stos
popf
push
adc
fiaddl
rorl
shll
inc
cmpsb
sub
data16
clc
lahf
adcl
shrl
sub
mov
negb
mov
jnp
inc
sbb
and
inc
std
popa
mov
insb
scas
imul
add
into
inc
les
push
dec
pop
adc
fcompl
dec
sarb
inc
fcoms
in
fcoml
push
sbb
xor
pop
inc
pop
fstpt
fsubrs
push
fs
adc
mov
adc
fmulp
fwait
lea
out
pop
nop
sbb
lods
lods
enter
add
jno
or
gs
imul
jg
mov
push
mov
dec
insl
xor
push
pop
xchg
dec
dec
sub
jmp
in
lock
xor
cmpsl
jl
pop
or
out
rol
pop
dec
adc
movsl
fs
inc
mov
add
jne
push
mull
dec
out
addb
cmp
out
cltd
insb
add
out
inc
loope
popa
xchg
xchg
or
mov
cltd
xchg
xchg
enter
cmp
push
mov
adc
hlt
arpl
imul
or
shrb
shrb
andb
and
outsl
mov
test
imulb
mov
insb
fs
mov
push
mov
sti
out
add
ret
jge
mov
sbb
repz
aas
int3
dec
dec
push
inc
jne
dec
das
jmp
push
mov
pop
adc
xlat
mov
scas
repz
add
mov
pushf
mov
adc
in
imul
dec
push
mov
test
mov
bound
cmc
fisubrs
lea
shl
xchg
mov
inc
fisubrs
dec
paddb
adc
push
push
movsl
and
adc
cmp
or
sub
jb
jno
inc
sub
repnz
sti
jl
add
loop
mov
or
scas
sbb
into
movsb
pushf
add
adc
xor
adcl
dec
lock
adc
mov
push
jb
jne
push
mov
mov
dec
dec
mov
xor
aam
push
stos
xor
movsb
mov
fiaddl
icebp
popf
les
roll
jae
inc
dec
cli
loopne
xchg
fimull
xor
mov
aas
pop
fwait
test
mov
add
inc
popf
cmp
fstps
out
inc
adc
fimuls
and
lock
mov
cltd
dec
adc
shlb
xchg
push
sbb
popa
in
mov
repnz
pop
inc
mov
push
clc
mov
push
or
xor
xor
adc
orl
movsl
inc
orb
jo
pushf
xchg
fwait
out
adc
pop
and
sbb
popa
stc
inc
inc
pop
xor
ret
mov
int
daa
dec
or
sbb
dec
adc
gs
push
pushf
mov
push
mov
sub
and
gs
adc
add
scas
and
stc
hlt
adc
jmp
mov
orb
mov
xchg
pop
xor
mov
popa
sub
inc
adc
shlb
pcmpgtw
jp
shl
adc
add
scas
sub
add
sahf
and
sub
push
or
sbb
scas
lret
fisttpll
sub
je
cmp
or
sbb
push
lods
add
pop
sti
jae
pop
std
insl
cmp
js
push
push
mov
aas
inc
adc
jo
daa
pop
xor
imul
mov
cmc
sahf
pusha
fwait
inc
je
inc
call
mov
push
cmp
int3
cwtl
out
jmp
xchg
fldt
cmp
cmp
in
icebp
adc
ds
mov
adc
sbb
ficomps
add
jno
jno
push
fnclex
data16
cmp
sbb
xchg
adc
or
testb
jbe
mov
or
js
sbb
in
dec
mov
xchg
insl
repnz
lahf
subl
sub
ret
push
jl
sbbl
add
movsb
arpl
scas
cmp
iret
mov
xchg
movsl
sub
mov
sub
call
mov
mov
push
inc
cmp
popf
add
and
enter
popa
adc
jns
shl
rcrl
cmp
not
mulb
pop
test
jo
shl
mov
or
clc
sahf
dec
lds
into
mov
cwtl
repnz
dec
push
je
sub
or
clc
cmpsb
in
dec
lret
ljmp
aad
test
mov
xor
stc
sbb
push
lods
lcall
xchg
mov
frstor
sbb
mov
dec
inc
mov
push
sbb
rorl
or
fisubrl
xchg
outsb
in
mov
cmp
push
sahf
and
mov
popa
das
push
lahf
jae
add
cs
add
adc
imul
mov
sahf
cs
xor
sbb
sub
jg
mov
cltd
js
jle
shlb
and
xor
xchg
xor
sbb
aam
je
clc
pop
mov
inc
jbe
dec
ret
pop
push
adc
clc
jb
dec
push
sbb
insb
fwait
sbb
lods
inc
sahf
dec
mov
cmp
sub
scas
or
jmp
jno
jl
sub
push
or
cmpsb
insl
sbb
loope
lea
cmp
shrb
pop
sbb
dec
mov
adc
jne
push
dec
mov
push
out
add
and
inc
pushf
mov
lods
sub
jb
fcoms
dec
lods
scas
xor
scas
jae
insb
outsl
out
pop
sub
ret
mov
mov
ret
mov
and
cltd
and
inc
jae
push
pop
les
cs
mov
push
push
xor
sub
adc
push
shlb
xor
les
push
arpl
add
shlb
xchg
mov
addr16
sbb
push
mov
rcr
test
icebp
out
or
mov
rcll
sub
pop
and
fst
mov
mov
movsl
cmp
mov
pop
inc
sbb
pop
xchg
mov
or
stc
push
fisttps
insb
xlat
inc
jl
mul
lret
mov
inc
sarb
call
jecxz
lret
sbb
addr16
mov
sub
jmp
mov
mov
das
lock
adc
out
push
fisubs
loope
jo
push
inc
mov
cmp
imul
xor
xchg
push
int3
sub
aas
sbb
pop
xor
jmp
insb
cmp
add
idivl
not
xor
mov
ret
mov
out
push
std
jns
iret
lcall
cltd
movsw
mov
jg
ljmp
sub
mov
or
jno
out
rcrb
js
lahf
add
or
adc
mov
fnstsw
sbb
jge
stos
adc
and
scas
xchg
mov
add
push
rcrl
cmpsl
fwait
cmp
pop
cmp
xchg
std
mov
out
dec
jg
xor
jo
dec
ss
int
sarb
sub
cltd
xor
jl
es
xor
jne
stc
mov
xor
test
mov
jo
mull
sbb
jb
cs
lahf
xor
scas
cmc
mov
popf
jl
shl
sarb
sub
and
sbb
and
fs
sbb
push
adc
cld
jno
xor
inc
inc
sbb
les
jp
test
sub
adc
btr
and
xchg
out
mov
outsb
fidivs
sbb
mov
xchg
mov
mov
cltd
sti
aaa
shrb
pop
cmp
sub
push
push
adc
add
inc
je
andl
cmp
stos
cltd
pop
jg
xorb
mov
sub
imul
out
int
call
xchg
add
cltd
cmp
push
orb
aas
adc
add
pop
add
add
pop
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
in
adc
add
adc
add
adc
add
pop
add
pop
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
pop
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
add
fisubl
sbb
inc
pop
add
data16
xor
xchg
or
jbe
adc
rclb
cltd
push
andb
adc
loopne
inc
push
adcl
inc
lock
add
cmp
imul
push
xchg
or
push
push
call
and
cmp
sub
ja
push
in
sbb
mov
adc
divl
or
adc
lret
dec
dec
clc
inc
and
xchg
sub
push
adc
pop
push
and
das
cmpsb
jne
loopne
int3
sbb
popa
dec
les
push
and
leave
movsl
add
fcoms
stos
test
inc
push
jecxz
xorb
test
push
mov
rcr
mov
or
lret
add
das
or
or
fcompl
push
test
cwtl
enter
popa
incb
sub
push
adc
movsb
sarl
mov
add
orb
and
imul
and
pop
jg
and
push
mov
stos
bound
sub
add
lcall
jmp
add
lret
adc
mov
imul
outsl
aaa
and
sahf
dec
jo
push
push
leave
add
pop
jg
popa
int
fsubrl
test
aaa
ja
jb
lds
mov
outsb
cltd
push
and
and
pop
push
mov
sbb
adcl
shrb
into
popa
out
jmp
push
mov
icebp
mov
test
mov
add
sti
int
rol
into
iret
sbb
dec
push
mov
mov
jne
jbe
imul
add
sbb
mov
xor
dec
sbb
test
lods
xchg
mov
lret
pusha
imul
mov
add
sub
mov
add
inc
xor
add
test
push
add
or
adc
sbb
inc
sub
add
xor
pop
mov
ja
jg
nop
mov
pop
mov
add
mov
test
sarb
pop
je
mov
ret
add
sub
iret
enter
inc
mov
push
outsb
xor
xor
cmp
cld
rcrb
fsubrs
xchg
lock
mov
xchg
jle
cmp
inc
add
jge
adc
je
push
dec
cld
cmp
mov
jp
xor
ss
rcr
mov
inc
jecxz
xor
shl
sub
in
push
popa
inc
leave
mov
add
loopne
mov
lret
fisubrs
rol
imul
inc
or
mov
dec
lcall
add
gs
add
or
aam
test
xchg
xor
mov
in
add
loopne
outsl
or
cld
fs
dec
fs
or
out
inc
mull
push
jg
add
pop
int3
inc
cmpsb
or
add
xlat
xchg
iret
xchg
out
add
pop
or
pop
dec
xor
pop
or
xor
xchg
jecxz
or
inc
ss
jg
dec
jb
or
lret
xchg
out
dec
sub
or
add
outsl
sub
dec
mov
sbb
dec
inc
daa
imul
sbbb
adc
mov
add
inc
add
and
add
dec
add
add
inc
sub
stos
dec
add
push
add
imul
add
jp
adc
or
mov
jle
addr16
adc
or
xor
in
pushf
or
call
test
or
stos
or
or
scas
jno
add
add
add
add
mov
rorl
mov
jbe
xor
getsec
aam
mov
xchg
pop
push
lods
imul
js
in
mov
inc
mov
les
adc
mov
cmp
imul
push
pop
ffree
out
xorl
jae
xor
or
push
adc
mov
push
in
cmp
add
fwait
push
popf
pop
mov
mul
addb
scas
addr16
daa
sti
inc
pop
popa
dec
xchg
or
jae
lcall
cmp
sub
inc
push
xor
faddl
bound
cmp
jmp
jnp
mov
orl
adc
mov
jle
das
mov
xchg
movl
cmp
sbb
stc
adc
in
ja
or
loop
jo
in
push
cmp
add
xor
imul
adc
out
and
or
add
test
jno
xor
out
inc
jbe
inc
mov
pusha
mov
out
xchg
xlat
enter
repz
inc
sub
and
add
pop
push
fisttpl
and
pop
and
and
mov
repz
mov
add
and
andb
cmpsl
subb
add
add
daa
jns
shlb
pop
sub
pop
add
dec
add
add
sub
fcomip
insb
mov
testb
xchg
cmpsl
adc
sbb
xchg
icebp
and
xchg
inc
xchg
leave
mov
dec
and
inc
call
aas
js
add
jno
daa
pop
in
mov
dec
lea
mov
ljmp
dec
add
das
stos
insl
mov
cmpsl
mov
loopne
xor
inc
in
dec
and
add
hlt
loopne
add
add
or
loop
fcoml
or
push
jl
enter
js
mov
jae
pop
adc
dec
add
cmp
mov
and
les
cli
subb
cmpsb
dec
inc
add
sub
push
jl
jge
push
shlb
adc
adc
mov
jmp
sbb
xchg
sub
mov
inc
dec
add
inc
cmpl
xor
dec
jle
mov
jp
mov
add
insb
ja
idiv
in
loopne
mov
and
add
add
leave
ret
clc
lret
add
sti
inc
push
xchg
inc
out
xor
les
dec
or
mov
mov
or
or
ljmp
add
mov
cltd
lahf
mov
mov
inc
xchg
cld
and
aas
push
adcb
xchg
inc
pop
int
leave
dec
and
cmp
inc
stos
push
jbe
jp
in
add
jmp
das
and
pop
dec
add
repnz
jb
lret
jmp
dec
inc
cmp
or
daa
or
aaa
in
bound
test
pushf
jnp
dec
or
repnz
xorl
in
scas
push
add
and
call
xor
and
and
mov
cwtl
pusha
add
popa
add
bound
sub
jae
inc
out
inc
fs
push
inc
xchg
lock
cwtl
ja
add
test
test
pop
or
pop
xor
into
cmp
xor
ja
mov
sbb
in
inc
pop
repnz
adc
jl
inc
loope
loop
roll
inc
dec
cmpsb
imul
and
sbb
push
shl
push
setno
shrl
in
js
xor
sbb
or
sub
es
sbb
push
mov
adc
sub
add
aas
repz
xor
inc
or
sbb
xor
es
push
mov
add
inc
push
pop
roll
push
pop
lds
scas
pop
xor
push
dec
or
add
test
popa
jbe
adc
aad
sbbb
and
data16
mov
dec
add
add
jg,pn
add
pop
add
roll
testl
arpl
pop
inc
fisttps
es
mov
aaa
jno
cmpsb
xor
test
jl
movsb
mov
jo
outsb
push
std
call
xchg
push
std
aad
mov
shlb
mov
es
daa
add
jp
loope
leave
or
prefetch
or
jbe
pop
add
lock
mov
loop
in
shll
loop
or
mov
jecxz
fnstenv
stc
dec
scas
pop
aaa
mov
divb
add
xlat
inc
or
stos
or
cmp
mov
ret
movsb
aad
inc
dec
jnp
add
sti
test
sbb
pop
sbb
jns
push
mov
sbb
mov
xchg
call
popa
es
sub
insl
jo
sbb
jo
push
pop
fmuls
pop
cmc
in
sbb
jge
jno
scas
cli
fmull
jmp
cltd
and
jl
adc
aad
lea
cmp
jmp
jo
sbb
and
dec
inc
js
test
jg
data16
andb
lods
fadds
xor
push
add
lret
jbe
aas
cmc
dec
loop
ljmp
push
xor
shr
add
pop
and
test
movsb
mov
in
add
and
adc
imul
inc
mov
xchg
repnz
in
cmp
push
xchg
stos
ljmp
cmpsb
dec
pop
or
rclb
push
int3
or
or
shld
add
out
fcoml
sub
je
mov
pop
sar
in
decl
in
cmp
push
je
inc
mov
mov
or
dec
inc
mov
jg
rolb
fcmove
jne
mov
mov
and
add
repz
neg
mov
mov
sbb
cmp
popa
push
mov
scas
xor
repnz
sldt
or
les
and
es
movsb
daa
cmp
fistpll
sbb
xchg
xor
addb
push
std
dec
cli
sub
or
mov
out
adc
xchg
es
jecxz
or
push
cltd
ret
sub
enter
or
add
mov
push
icebp
adc
leave
and
push
push
les
aaa
sbb
adcb
and
andb
or
xor
pop
enter
pop
pushf
and
push
popf
movsl
and
or
ds
fstpt
sbb
dec
xor
push
pop
imul
mov
push
cltd
cld
fstpl
xor
dec
push
int3
cmp
and
fcompl
dec
sti
push
pop
repnz
rorl
sub
lcall
dec
mov
fs
push
or
iret
movsl
pop
daa
add
dec
mov
mov
xor
add
mov
mov
jb
and
sub
xchg
hlt
mov
mov
and
and
xlat
stc
push
or
das
sbb
add
add
dec
ret
incl
add
jo
rolb
or
not
jmp
or
add
lret
and
jbe
add
dec
jne
xor
jmp
xor
or
adc
fcomp
je
in
cld
or
fsubrp
push
and
mov
aad
out
xchg
push
mov
test
arpl
fucomi
add
add
or
icebp
pop
sbbb
mov
pop
adc
mov
add
and
shr
xorl
cmp
jmp
stc
inc
xor
stos
fadds
inc
jmp
jmp
adc
out
call
push
test
stos
or
lods
int
xor
neg
add
jns
rcrl
mov
flds
sbb
cmc
lds
imul
add
and
repz
sub
test
repz
sbb
iret
mov
or
fmuls
test
push
xor
xor
outsl
test
ret
sahf
dec
and
push
aas
xchg
pop
or
mov
repz
negb
call
inc
mov
pop
jmp
sbb
ds
and
adc
test
xor
test
aas
pop
jae
add
push
adc
sub
out
inc
or
test
dec
mov
popf
add
pop
pop
add
mov
loopne
scas
insl
push
and
and
add
jmp
aam
ret
jne
cmpsb
enter
adc
hlt
jge
push
add
or
mov
lcall
sarb
pop
pop
inc
in
test
mov
and
pop
dec
cmpsb
lods
ja
cmp
inc
or
movl
push
mov
push
sub
push
add
loop
inc
adcl
nop
addr16
dec
and
outsl
inc
inc
nop
rolb
lea
pop
not
adc
push
movsl
push
mov
mov
xchg
insb
cwtl
cmc
fs
sub
or
cmp
into
sbb
mov
inc
sbb
mov
in
fldenv
loop
add
mov
jl
aaa
rol
push
pop
nop
pop
push
xlat
adc
jle
ficoml
repnz
fisttpl
aaa
into
adc
jmp
popl
mov
xor
rcll
pop
xor
inc
setae
push
dec
push
or
pop
pop
std
jge
sub
fstpl
lods
mov
lcall
inc
adc
push
clc
sub
jmp
hlt
pop
cmp
neg
mov
stc
test
xor
push
add
lahf
push
inc
or
mulb
adc
pop
sahf
mov
sbb
jmp
cmc
int3
fstpt
data16
adc
shr
loopne
scas
mov
aam
cmp
cmp
xchg
inc
int3
lcall
cltd
adc
sub
push
xchg
jge
xor
icebp
test
adc
jg
js
cmp
test
btr
ss
jae
mov
inc
ljmp
arpl
loop
inc
insb
scas
icebp
nop
cs
xor
enter
pop
push
pop
pop
push
mov
push
pop
inc
jmp
int
adc
les
or
dec
inc
push
shl
mov
or
push
pop
pop
shl
xchg
sub
lock
in
xor
dec
loopne
pushf
and
repnz
adc
cwtl
fs
sbb
test
push
rcrl
les
out
dec
fsubr
bound
mov
cmp
pop
inc
shl
test
mov
add
test
fnstsw
test
pusha
pop
les
push
rcr
notl
mov
sbb
stos
jnp
int3
insb
loope
cwtl
mov
push
loopne
in
mulb
shlb
push
aas
mov
test
or
inc
es
out
dec
jp
push
aas
or
cmc
clc
das
adc
sbb
sbb
jl
xchg
sub
sahf
add
hlt
incl
cli
lcall
outsb
adc
inc
setb
arpl
add
rcll
pop
rorb
jp
push
pop
inc
xor
loope
mov
aas
jmp
neg
mov
inc
bsf
sbb
xor
and
rcr
xlat
push
adc
sub
mov
xor
insb
xor
pusha
scas
cltd
xor
push
mov
inc
add
shll
mov
enter
in
push
clc
cmc
or
hlt
cmp
test
xchg
add
inc
xchg
adc
orl
pop
cli
inc
pusha
or
je
inc
or
adc
pop
mov
fbstp
int
xor
adc
sub
and
xor
leave
or
add
and
test
frstor
push
ficoml
add
cmp
aad
pop
roll
push
pop
repnz
scas
int
sbb
cmpsb
cmp
dec
lock
jmp
stc
jge
mov
lods
repz
sub
rorb
ret
mov
movsb
or
cmpsb
inc
inc
jnp
add
mov
fsubrs
cmp
adc
inc
js
cmp
mov
mov
mov
add
test
xchg
add
jg
dec
push
or
cwtl
push
mov
aad
roll
push
mov
dec
aas
pop
outsl
add
jns
in
inc
neg
test
loope
dec
pusha
adc
in
popa
pop
sbbb
dec
shrl
push
iret
movl
xchg
jo
sub
in
int
sub
or
movsl
sub
jb
adc
xor
push
cmpsb
xchg
in
xor
mov
sub
pushf
adc
mov
std
adc
cmp
rorb
and
cmpsb
orl
in
lret
push
sub
in
adc
mov
popa
add
loope
inc
aas
xchg
fxch
es
fists
divl
mov
pushf
sbb
push
sub
pop
test
or
jo
mov
inc
pusha
and
push
mov
xchg
fldt
push
int
cmp
in
or
pusha
lds
pushf
call
mov
inc
jecxz
inc
outsl
notl
xor
repnz
adc
popa
mov
aam
stos
rorl
or
adc
aas
lods
stos
mov
dec
fcomi
js
and
and
shrb
fldcw
cld
jp
addl
stc
fdivs
in
jge
mov
pop
outsl
pusha
test
sub
leave
sbb
cli
push
xchg
addl
xor
push
pop
pop
or
cmc
and
dec
fadds
adc
inc
loopne
add
subb
sbb
xchg
fstpl
repz
jecxz
mov
add
pop
jno
mov
insb
imul
or
dec
mov
cmp
test
cmp
adcb
not
cltd
mov
and
add
out
neg
cwtl
call
dec
call
xor
fldl
cld
shlb
fldz
repz
push
ljmp
xor
negl
ret
icebp
mov
leave
inc
or
not
sbb
test
jg
add
out
rolb
dec
sbb
ljmp
or
lcall
fsubs
mov
mov
cmp
fcompl
xlat
clc
dec
loope
push
in
push
dec
or
sbb
mov
cwtl
int
aad
call
push
pop
pop
fstl
add
ja
jo
pop
push
pushf
mov
xchg
pusha
add
mov
xchg
sbb
in
push
dec
xchg
mov
fisttpll
addr16
or
pusha
jle
sub
nop
xlat
js
lock
mov
xchg
add
mov
cwtl
xchg
jp
or
push
xor
adc
sbb
adc
not
enter
lea
in
stos
es
cmp
cmp
push
sarb
ljmp
call
or
push
pop
int
iret
xchg
xchg
push
push
push
add
and
notl
xchg
add
dec
aam
sbb
adc
and
negb
dec
mov
shlb
mov
rcrb
jle
add
mov
pop
add
push
imul
ja
mov
lcall
shrl
or
insb
nop
jne
mov
adc
loopne
sbb
push
push
inc
inc
nop
pop
add
push
inc
xor
in
ret
dec
mov
sbb
cmc
call
inc
scas
and
cmp
mov
inc
or
add
std
icebp
fwait
sub
fstp
add
cltd
fldenv
push
loopne
mov
pop
or
pop
mov
inc
dec
push
dec
outsb
aam
ret
sub
loop
xlat
out
mov
in
dec
lret
dec
rcrb
lahf
aam
push
pop
filds
test
int3
test
add
aad
push
or
jae
sbb
cmp
mov
and
xor
aas
xor
mov
or
test
sub
adcl
int
xor
push
dec
addb
pop
mov
push
push
aaa
mov
inc
sbb
rorl
add
inc
sub
sub
or
pop
pop
jmp
jge
nop
and
inc
xor
filds
inc
inc
or
movsl
add
or
test
mov
pop
sub
sarb
jg
cs
mov
ds
movsl
fwait
dec
inc
jae
xor
push
adc
pushf
movsl
jne
add
out
or
cwtl
test
clc
push
inc
dec
pop
lret
and
add
pop
sub
into
inc
pop
add
and
cmpl
mov
je
mov
test
dec
xor
push
into
jmp
shrb
cwtl
in
jb
sub
mov
sbb
outsb
bsf
cmpsb
mov
test
and
popa
pop
cmp
sbbb
sub
mov
dec
clc
mov
js
sub
lret
addb
jo
push
shr
or
xor
js
mov
push
shl
shlb
jb
sub
sbb
pop
pusha
insl
mov
mov
add
dec
popa
xor
fidivrs
mov
adc
repz
iret
loopne
sbbl
lds
je
sub
clc
fsubrl
sbb
iret
mov
mov
push
pop
les
enter
testb
pop
out
xor
sahf
std
cmp
cmp
test
ljmp
mov
jo
push
pop
pop
and
and
fisubrs
dec
push
jg
popa
daa
jecxz
out
popa
insb
into
dec
mov
push
pop
pop
adc
jmp
mov
pusha
ret
inc
push
jne
aad
cmpsb
fadd
je
out
jns
add
xor
and
add
sarl
and
mov
loopne
lcall
xchg
aad
rorb
sbb
pop
sbb
jmp
inc
inc
sbb
into
add
sub
addr16
out
add
movsb
cmpsb
test
test
xor
ret
cwtl
in
dec
and
pop
mov
adc
mov
lret
sub
add
mov
add
cs
add
mov
push
sbb
pop
repnz
dec
popf
push
hlt
and
test
push
loopne
bswap
test
ret
push
cmp
xlat
fsubp
dec
push
test
aaa
adc
sub
lahf
sub
adc
fnsave
daa
stos
test
add
push
sbb
cltd
cld
xchg
dec
cmp
inc
add
stos
add
fstpt
call
sub
gs
adc
jg
fdivl
adcb
dec
into
add
out
insb
or
stos
das
pop
out
popa
dec
fstl
xor
inc
fcoms
or
push
movsl
nop
lret
mov
pop
dec
sarl
pop
or
test
leave
mov
inc
add
pop
mov
adc
fs
xchg
rorl
adc
int3
dec
mov
jae
int
adc
adc
dec
lcall
add
fmuls
xor
mov
out
movsl
andl
dec
fisttpl
cmp
loop
pop
xor
mov
sahf
mov
sahf
sub
sub
stc
lahf
addb
call
add
fbstp
stos
enter
roll
movzbl
or
xchg
addl
sbb
repnz
xor
nop
ret
mov
cwtl
imul
lods
sub
fiaddl
mov
sub
pop
push
or
jae
mov
cs
fcoms
fidivl
mov
test
dec
mov
or
frstor
adc
add
imul
xlat
lock
cmp
sub
shl
inc
sbb
adc
or
and
push
sbb
repz
xchg
cmp
dec
movsb
fldcw
bound
dec
xchg
loop
inc
pop
dec
jno
ret
loope
push
pop
lea
inc
adc
int3
jno
xchg
arpl
mov
mov
add
cwtl
mov
repnz
not
inc
pop
xor
cli
cs
movsb
dec
push
push
sar
or
push
push
adc
ds
rorb
add
int
inc
xchg
push
sub
sahf
sub
testl
mov
mov
xor
std
outsl
inc
pusha
sarb
pop
stc
fcompl
add
mov
sbb
xor
addb
dec
mov
mov
sarb
sub
test
loopne
popa
jo
mov
xchg
sub
aam
shl
scas
sar
test
in
imul
cmp
mov
test
pop
push
or
add
jecxz
mov
cmc
push
inc
ret
mov
mov
outsb
jp
dec
mov
pop
cmp
dec
xchg
mov
mov
or
aas
iret
and
add
popa
dec
cmc
add
inc
mov
xor
add
call
out
adc
repnz
movswl
xor
scas
or
cmp
pop
ljmp
or
cmpsl
into
inc
cmp
push
fnstcw
loop
push
xchg
sub
push
xor
inc
cmp
mov
test
iret
ret
xchg
pusha
jne
sub
dec
test
add
jae
ret
mov
insb
add
cmc
inc
or
pop
bound
pusha
cli
jns
testl
xchg
pop
or
mov
test
push
ret
mov
xchg
mov
mov
dec
xor
mov
dec
sbb
loop
add
lds
cli
adc
repz
std
xor
mov
push
xchg
xchg
jnp
xor
js
shlb
mov
mov
mov
jmp
ret
or
jb
stos
loop
push
das
mov
sbb
not
adc
pop
add
test
adc
add
iret
pop
push
pop
jo
lret
sahf
xchg
fimull
cmp
daa
insb
jbe
sbb
pop
mov
inc
and
sub
pop
lods
push
shrl
aas
push
aam
loopne
or
fdivrl
mov
add
mov
xor
enter
inc
jmp
call
xchg
xchg
data16
sbb
pusha
jno
cmp
dec
inc
fld
push
and
sbbb
push
push
jns
jb
dec
cs
inc
fwait
adc
add
lahf
xor
bt
xor
inc
sbb
sub
mov
fdivr
adc
fisttps
add
xor
adc
dec
xchg
dec
mov
test
xor
test
repz
cmp
movsl
into
loop
inc
dec
cmp
pop
sub
push
and
mov
add
arpl
movsb
imul
notb
adc
mov
test
dec
adcl
mov
in
dec
add
sbb
add
push
call
fistl
jbe
fiadds
pusha
and
in
cmp
inc
movsb
repz
cmp
popa
mov
lds
out
lods
bound
mov
pusha
clc
jg
repnz
mov
push
out
sub
sub
scas
ret
mov
mov
data16
ds
fs
mov
cmp
mov
cmp
push
sbb
inc
xchg
pusha
mov
push
and
adc
and
push
pop
cmpsl
sbb
pop
jmp
xor
cs
push
sbb
jb
packssdw
cmp
pushf
ljmp
int
fstl
insl
mov
rcrb
jge
sbb
inc
push
cmpsl
pop
pop
pop
add
mov
cli
push
stos
jmp
jg
jne
in
test
pop
mov
dec
mov
insb
clc
sbb
push
punpcklbw
je
testb
dec
or
test
imul
or
aaa
pop
xchg
xchg
dec
xchg
dec
add
add
lock
cld
jno
cld
std
test
dec
cmpsl
dec
sbb
mov
sahf
shlb
imul
jbe
lcall
mov
ret
loope
mov
mov
fsin
lock
mov
hlt
mov
sub
int
adc
sti
cli
sub
and
cmp
dec
dec
push
pusha
add
bound
clc
pop
shll
mov
fsubl
outsb
jecxz
mov
push
das
aad
or
or
adc
cld
mov
addr16
repnz
xchg
pusha
insl
movsb
sub
sub
fistl
shr
cmp
cltd
mov
leave
movsl
xor
or
jo
jle
stos
xchg
dec
test
subl
neg
mov
adc
xchg
add
lea
push
pop
pop
cmp
out
jmp
and
jne
mov
push
push
xchg
or
test
rcr
pop
and
pop
xor
subb
cwtl
in
add
adc
ja
or
jo
cmp
sub
das
xorl
push
scas
sub
lea
dec
divl
or
push
lahf
mov
pop
mov
mov
pop
icebp
add
hlt
mov
inc
adc
movsb
cmpsb
inc
jo
fstl
in
out
shlb
xchg
jg
fildll
or
or
xorl
inc
sub
dec
mov
xor
leave
cmpsl
fwait
mov
bound
push
cmc
cmovl
loop
xor
andb
testb
lcall
rcrb
aad
xor
lret
lcall
mov
xor
pop
test
xor
pusha
ret
adc
les
xor
in
aad
xchg
dec
not
and
adc
xor
push
or
xor
scas
dec
sbb
push
addb
mov
adc
dec
push
cmp
sete
sbb
shll
call
add
add
or
cmp
sub
mov
mov
and
shlb
dec
dec
add
ret
adc
push
push
dec
push
fcoms
pop
dec
inc
xlat
mov
in
and
mov
popf
fs
loope
inc
mov
sub
insb
out
dec
sbb
bound
pop
xor
sbb
outsb
sub
jle
loop
dec
cld
adc
mov
cmc
push
mov
inc
mov
mov
out
and
dec
clc
inc
push
jmp
or
neg
subb
add
inc
insl
shll
mov
add
xor
cwtl
stc
add
sub
cmp
inc
cmp
daa
ja
inc
xchg
inc
mov
pop
fisttps
clc
or
pusha
mov
adc
cli
sbb
jbe
sub
cmp
aas
adc
pusha
les
mov
mov
repz
xchg
jl
loop
mov
jns
adc
inc
lods
xor
push
dec
pop
and
adc
mov
aaa
out
or
daa
pop
dec
outsl
mov
fldl
int
sahf
dec
test
fsubr
jbe
mov
ljmp
add
repnz
std
mov
and
btr
dec
leave
addl
jae
push
xchg
sbb
int3
mov
inc
movsl
push
mov
cmp
sbb
mov
loope
mov
xor
adc
or
mov
stc
push
cs
xor
add
cmpsb
push
mov
mov
subl
cmpsb
jecxz
hlt
jecxz
sahf
add
ja
cmc
pushf
jo
subb
dec
les
pop
pop
ret
jb
push
ret
ret
and
pmaddwd
xor
pusha
mov
adc
mov
inc
or
mov
shrb
sub
sbb
and
lcall
shll
nop
jmp
inc
or
pop
push
cld
lods
incb
add
loope
loopne
aaa
jno
jp
cmp
or
xchg
or
pusha
cltd
mov
addr16
or
ss
push
adc
divl
test
jle
call
cmp
push
mov
loop
cmp
addb
cld
sub
push
dec
fldt
push
fmull
stc
hlt
fdivs
pop
and
add
mov
adc
cwtl
sub
negl
shrb
lods
inc
adc
mov
ljmp
cwtl
sub
inc
jmp
inc
gs
or
xor
int3
popf
adc
pop
cmp
sub
ret
sub
fiadds
iret
in
mul
popa
push
mov
inc
sub
jbe
or
mov
cmpb
lahf
inc
mov
inc
nop
icebp
or
lods
dec
push
ds
pop
test
or
int
push
iret
jae
push
push
sbb
inc
add
sar
dec
enter
je
xor
xor
push
cli
xchg
ret
cld
fwait
data16
cmpsb
dec
adc
xchg
inc
shld
sbb
popa
cli
rcrb
ret
push
adcb
js
push
mov
add
test
mov
cld
push
mov
lret
inc
mov
add
pop
jae
lods
ja
adc
test
xchg
jmp
mov
and
arpl
pop
aas
adc
sub
mov
clc
aam
inc
rcr
jp
and
ss
add
sub
leave
dec
inc
xor
fwait
lds
loope
dec
adc
popf
idivl
popa
jns
add
jmp
out
clc
rclb
mov
jb
bound
popf
sbb
pop
add
jnp
mov
inc
inc
pop
inc
or
pop
mov
jns
xchg
cli
dec
push
ss
outsb
xor
add
xchg
sarl
jae
ja
aaa
fistps
xor
bound
mov
mov
and
adc
inc
arpl
mov
jl
leave
test
pop
hlt
mov
add
jmp
sbb
inc
or
cmpsl
mov
add
sub
add
and
sti
fisubs
mov
mov
jae
ja
sub
or
xor
into
xor
std
sub
pop
das
mov
pop
add
jecxz
add
cmp
add
jle
sbb
test
mov
lcall
add
adc
or
pop
leave
pop
jge
arpl
or
ja
and
adc
xor
je
popw
lahf
adc
adc
jne
adc
sbb
dec
sub
push
sbb
or
pop
add
dec
inc
push
pop
add
lcall
sbb
es
pushf
mulb
unpcklps
nop
xchg
rorb
cmp
jb
and
sub
add
rorb
sbb
pop
jnp
jo
lahf
xor
jno
movsl
adc
xor
push
sub
lcall
mov
jl
es
adc
mulb
adc
push
push
rorb
adc
hlt
lcall
inc
shlb
inc
daa
das
dec
ss
mov
add
sbb
pop
hlt
dec
clc
outsb
adc
lods
cmp
in
jecxz
mov
sub
gs
sbb
mulb
scas
pop
sub
jae
outsb
jge
push
sub
pushf
push
jb
enter
pop
mov
add
inc
sbb
pusha
loopne
ds
jns
or
dec
or
push
push
jb
sub
xchg
dec
inc
mov
pop
or
ds
xchg
push
inc
cmp
push
pop
add
dec
push
data16
jo
and
jg
mov
pop
pushf
mov
mov
test
je
push
es
inc
int3
ss
jbe
cmp
pop
sub
ds
pop
enter
jb
cmp
xchg
je
jecxz
cli
sbb
les
push
xchg
dec
in
jp
push
and
bound
fs
pop
jl
popf
movl
lret
aam
or
mov
pop
mov
repnz
mov
push
jno
push
jl
icebp
xchg
pop
out
enter
jne
aaa
mov
fcoml
jnp
sbb
les
testl
bound
adc
cli
jb
xchg
repz
push
add
nop
rcll
add
pop
inc
cmp
or
sti
pop
dec
icebp
push
add
jle
pusha
or
adc
data16
iret
jl
pushf
push
sbb
jb
sbb
sub
cmpsl
cmp
aad
ljmp
adc
push
sub
mov
pop
xchg
mov
inc
or
out
idivb
or
pop
mov
sub
or
push
add
cmp
jno
pop
or
pusha
leave
aas
xchg
jne
out
inc
shr
push
sub
adcl
mov
and
out
mov
mov
jo
lret
pop
push
int
pop
jne
cmp
aas
mov
inc
sub
imul
sub
jp
ss
dec
cmp
xchg
sub
dec
or
insb
aam
ss
xorl
xchg
or
nop
push
xchg
or
or
or
into
pop
test
ljmp
test
test
dec
push
loop
lahf
mov
loop
adc
nop
jle
pop
insb
or
xor
nop
mov
orb
daa
jae
scas
loopne
dec
jb
imul
pop
sub
mov
test
adc
mov
dec
adc
push
pop
sub
push
das
push
shll
jns
into
dec
xchg
xor
in
sub
fcomp
jo
call
xor
roll
dec
data16
nop
inc
or
jle
sbb
jns
icebp
cs
or
xor
jae
nop
xchg
ja
inc
pop
adc
jns
mov
outsb
ja
lahf
or
adc
jge
andnps
dec
xchg
mov
test
xchg
jmp
push
arpl
xchg
adc
sbb
dec
or
ljmp
nop
add
hlt
dec
mov
nop
xor
pop
pusha
xchg
aam
jne
ss
clc
mov
sub
sarl
xor
iret
sub
and
sub
add
xor
jbe
push
or
leave
cld
xchg
mov
sub
fs
push
adc
sub
sub
mov
mov
and
jo
sbb
push
popa
lods
negl
pop
xchg
push
pop
and
dec
int
clc
and
jne
addb
jae
test
decl
xchg
inc
cmp
out
adc
mov
push
je
jmp
hlt
and
std
cmp
aaa
mov
xor
xchg
pop
xlat
ficomps
pcmpgtd
sub
cmp
call
and
int
stos
shr
add
mov
push
and
ror
cmp
xor
movsl
xor
push
jb
dec
negl
aaa
xor
xchg
add
aam
out
addb
sbb
sbb
popl
sbb
fidivrl
test
push
aas
in
movsl
cmpb
rolb
pop
cs
inc
pusha
dec
sub
insb
dec
popf
jmp
mov
push
pop
and
dec
loop
mov
ljmp
sti
rorl
out
or
pushf
data16
jno
and
andl
pop
push
pop
xorl
sub
loop
xchg
pop
scas
jae
inc
inc
push
adc
cli
imul
negl
lds
dec
add
mov
add
cli
lcall
cmpsl
jae
fimull
cmpb
fstpt
jo
mov
pop
mov
cmp
pop
or
lds
and
jmp
jg
stos
cwtl
xchg
mul
xchg
call
sbb
dec
push
cmp
ss
xor
mov
push
xchg
cmp
mov
into
add
add
gs
sub
push
mov
push
sbb
inc
push
xchg
adcb
int3
les
cmpsb
les
loop
inc
add
testb
scas
jmp
add
adc
add
mov
and
mov
jle
in
sub
in
jge
xor
lahf
push
mov
daa
movsb
shrb
dec
mov
pusha
setb
scas
nop
les
pusha
test
int3
add
xchg
mov
fs
cmpb
or
inc
inc
cwtl
movsl
mov
jns
xor
xor
adc
dec
xor
jne
or
cmp
mov
loopne
fisttpl
push
sbb
adc
add
std
sahf
lods
xor
add
jns
xlat
std
outsb
stc
adc
test
fisttpl
xchg
int3
push
bound
fmul
adcb
clc
popf
and
in
xlat
jbe
pop
adc
hlt
push
jne
sub
xchg
inc
jns
ret
les
stc
jmp
pop
test
add
xchg
outsl
dec
xchg
fimull
add
or
test
adc
repz
paddb
jmp
add
es
clc
sahf
sbb
jnp
inc
mov
adc
adc
cmp
push
jl
shlb
pusha
xchg
iret
lea
xchg
pop
mov
or
dec
enter
cmp
xchg
add
cmpsb
cmp
jle
int3
adc
fs
aam
and
cli
das
loop
cltd
sbb
loopne
test
inc
cmp
sarb
or
adc
addl
mov
xchg
jb
mov
add
fisubl
and
pop
std
cld
jmp
add
sbb
xor
inc
jb
adc
leave
mov
xchg
jae
cmc
pop
cld
dec
push
outsl
push
fsubrs
pop
and
xchg
push
sahf
mov
incl
scas
clc
in
push
or
push
jge
jns
fiadds
imul
pop
push
outsb
mov
ret
pop
insb
popf
es
in
cltd
fistpll
cmp
xor
sub
test
lea
or
sar
jmp
jne
xchg
push
ret
and
and
rorl
dec
xchg
fcomi
jae
push
jns
xchg
push
xchg
xchg
popl
arpl
mov
call
mov
ret
push
jae,pn
ljmp
lea
sbb
or
inc
in
adc
loop
jg
cmp
dec
sbb
loope
add
mov
pop
sub
adc
jp
or
or
jge
std
das
fildl
xchg
or
imul
push
or
xor
test
jl
in
sbb
mov
cld
repz
pop
es
ss
or
int3
jbe
out
add
into
xor
in
rolb
jns
in
push
and
dec
mov
xchg
adc
mov
test
add
jns
dec
dec
xchg
fldt
ds
sbb
pop
pusha
or
aam
inc
mov
xor
xchg
shr
cmp
jp
fadds
adc
and
and
add
outsb
clc
mov
mov
sub
loopne
cltd
and
mov
sub
cmp
push
push
mov
mov
jb
ljmp
lds
adc
bound
mov
mov
or
push
or
mov
dec
inc
push
pop
stc
movsl
mov
xor
or
arpl
sbb
sahf
mov
mov
pop
mov
pop
push
rcrl
cmc
addr16
aas
or
mov
xor
aas
cmc
or
outsl
jge
xlat
and
outsl
jmp
inc
cltd
inc
xor
fsts
adc
iret
xchg
add
arpl
mov
addr16
daa
sub
and
int3
das
adc
jae
jne
jmp
bound
adc
push
fildl
test
mov
jle
stos
and
pop
adc
xchg
data16
lods
sbb
and
cmc
xchg
test
cmp
je
xchg
scas
adc
pop
mov
pop
jno
dec
cmp
ja
jge
repz
lock
es
inc
push
mov
pop
xchg
not
adc
xor
stos
test
inc
lea
std
inc
addr16
iret
outsb
inc
mov
sbb
pop
sub
ja
dec
sbb
mov
das
mov
ss
dec
push
jl
mov
sbb
inc
xchg
lock
inc
pop
call
sub
add
xchg
out
inc
or
push
mov
jb
shlb
jl
push
popl
lret
jno
push
loopne
js
sbb
xor
sahf
dec
mov
push
add
rcl
push
jnp
push
push
icebp
xchg
push
ficoml
sar
push
loope
xchg
movsl
cli
dec
inc
or
aas
scas
inc
push
idivb
cmp
aam
jo
jmp
sub
cmpb
adc
jne
xchg
or
xchg
fdivs
mov
cmp
cmpsb
loopne
adc
ret
push
sbb
sbbb
or
xor
cmp
add
xchg
js
shlb
imul
and
pop
icebp
lahf
inc
mov
xlat
repnz
sahf
fstpt
xor
insl
pop
pushf
aam
mov
mov
test
jne
and
push
mov
cmp
mov
mov
push
pop
pop
out
pop
adc
add
lods
fdivr
sti
pop
add
jno
sbbl
lcall
add
out
pop
fisubrs
inc
popa
mov
push
enter
and
fisttpl
lods
popa
or
dec
sub
lahf
in
inc
outsb
push
mov
into
pop
rcll
test
arpl
inc
in
pop
jl
into
xchg
fwait
jle
outsl
testl
and
pop
aam
and
jg
push
or
xchg
pop
or
cmp
jne
std
xor
ret
xchg
push
fbld
cmp
sub
or
scas
hlt
fsubrp
loopne
loope
sub
lods
pop
xchg
mov
sbb
mov
ret
dec
stos
hlt
dec
cltd
push
hlt
sub
addl
xchg
sti
inc
jno
je
jae
jmp
std
push
arpl
pushf
test
add
ret
mov
adc
mov
push
test
xchg
lea
cld
std
xor
js
pop
mov
out
sub
push
fsubs
sub
and
cmp
and
push
inc
mov
add
sbb
filds
pop
repz
fwait
inc
xor
inc
push
adc
sti
ljmp
pcmpeqb
pushf
xlat
jmp
jns
into
mov
push
inc
cmp
or
jo
add
int3
sub
pop
jae
paddd
aad
xchg
and
xor
push
xor
push
add
popa
push
push
xor
rcll
xor
js
bound
or
int3
push
cs
sbb
stos
inc
or
jo
mov
add
bound
jno
ret
xor
push
repz
mov
orb
stc
loopne
jnp
sbb
mov
sub
aad
and
adc
ss
shll
lahf
push
and
sbb
and
ret
in
add
mov
add
jae
je
mov
js
mov
adc
inc
push
cmp
clc
addr16
sub
sub
stc
pusha
scas
sbb
jl
and
inc
les
popa
add
jp
adc
mov
jmp
add
ja
jge
and
or
push
or
or
xor
pop
aad
stc
in
sbb
jae
add
jo
ss
or
and
lahf
push
sub
pop
and
mov
push
jnp
cmp
int3
mov
xor
adc
sbb
cmp
pop
pop
mov
roll
fs
mov
jo
out
negb
loop
add
lods
arpl
loope
cmc
add
cli
mov
inc
or
sbb
sub
push
push
inc
jns
cmpsl
rorl
das
sub
sub
outsb
xor
jno
incl
nop
lock
orl
inc
out
push
mov
push
ret
pusha
ds
fwait
test
dec
shll
int
lds
shll
ja
in
push
pop
xchg
fmuls
jg
jmp
outsb
xor
inc
sbb
in
cmp
pop
push
vunpcklps
lock
pop
inc
addr16
ss
mov
or
je
jo
mov
jl
pop
or
cmp
sub
int3
pop
dec
push
inc
mov
add
or
cmpsb
xor
or
inc
cmp
or
adc
shlb
das
lcall
dec
aam
push
or
jmp
faddl
outsb
dec
and
enter
call
mov
push
sbb
popa
fs
jns
ss
push
sbb
or
mov
int
add
push
cmp
movl
mov
jbe
sti
loope
dec
push
repz
sub
ds
cltd
sbb
push
mov
test
jl
or
mov
inc
in
pusha
jg
lea
out
scas
notb
sbb
dec
fidivrl
add
jne
sbb
push
sub
inc
sbb
aad
dec
outsl
jge
inc
cwtl
stc
pop
pop
jmp
sbb
push
inc
std
xchg
push
lret
faddl
or
adc
bound
cwtl
enter
sbb
daa
js
sahf
int3
jg
in
or
out
mov
or
jne
xor
push
cwtl
add
bound
pop
outsl
xchg
sbb
add
ss
jo
mov
adc
cmp
in
fistpl
cs
test
lock
out
sub
add
xor
add
or
sbb
mov
pushf
jbe
adc
enter
repnz
pushf
cmp
bound
test
insl
mov
adc
fcoms
ljmp
inc
xor
insb
rorl
movsl
xchg
int3
adc
popa
ret
inc
jb
jbe
add
inc
jns
das
mov
adc
cmc
lret
fcomps
pop
nop
addb
cmp
lahf
or
mov
pop
mov
xor
adc
mov
in
sbb
mov
popa
jp
mov
shl
jg
scas
cmpsb
fsincos
xor
outsb
mov
loope
add
cmp
lcall
xchg
mov
jnp
add
outsl
das
daa
adc
in
shlb
int
add
sti
in
push
pushf
jecxz
mov
out
push
out
add
inc
inc
imulb
jl
es
and
int3
sub
push
pop
xchg
test
push
push
ljmp
aam
stos
out
pop
aam
cmc
sarl
push
in
daa
mov
ret
idiv
in
jp
lret
mov
cmpsb
jp
lret
mov
xchg
fsubrl
loop
je
arpl
xor
add
xchg
das
aas
dec
mov
repz
inc
lds
fs
sahf
test
add
movsl
pop
rolb
aaa
push
and
lahf
std
mov
push
test
test
andl
les
jno
aas
dec
sarl
pop
xor
lret
inc
stc
xor
jl
out
jl
or
pop
pop
xchg
add
pop
sub
addb
sub
mov
aas
movsl
add
ljmp
and
mov
mul
ljmp
pushf
cmp
in
xchg
sub
hlt
dec
and
sub
cmp
xor
mov
ret
aas
hlt
xchg
cmpsl
pusha
iret
push
jb
scas
insb
ds
aaa
sbb
mov
daa
inc
pusha
cmpsb
jmp
mov
sti
fimull
cmp
xchg
or
mov
sbb
xor
add
inc
jns
jne
ja
push
pop
push
popa
or
insl
cmpsb
push
inc
je
add
das
dec
ja
adc
push
mov
dec
push
pop
jb
roll
daa
int
push
push
daa
mov
pop
pop
adcb
addr16
add
icebp
adc
inc
arpl
ds
ss
jo
or
arpl
xchg
mov
add
add
jbe
mov
fiaddl
add
push
adc
test
push
xchg
mov
les
sar
inc
push
and
adc
int
mov
out
xor
sbb
jle
or
hlt
addr16
repnz
aad
or
dec
add
mov
add
or
cmp
mov
fbld
jb
mov
and
repz
bound
jmp
jg
test
inc
pop
mov
jp
test
add
in
jmp
jle
inc
pop
or
xchg
add
ret
cld
push
loopne
jns
dec
add
push
inc
ljmp
rclb
leave
inc
jo
loop
xchg
push
subb
sub
push
cmp
and
jae
lods
adc
mov
je
adc
in
and
mov
icebp
dec
sti
fwait
cmp
jl
push
inc
pop
dec
jl
in
hlt
daa
jmp
add
adc
mov
jb
push
add
cs
mov
or
stos
jmp
push
sub
push
xchg
mov
push
xor
xchg
addr16
push
mov
adc
push
out
adc
jbe
inc
mov
inc
add
aas
jnp
hlt
cli
cmp
pusha
cmp
push
stos
mov
pushl
adc
ja
mov
or
sub
push
adc
sub
jmp
adc
xor
in
sbb
sub
pop
add
push
ljmp
pop
pop
andb
sbb
cmp
xchg
cmp
jo
arpl
jne
imul
je
pop
jno
push
and
addr16
adc
pop
pop
fwait
test
mov
adc
loop
push
and
dec
sbb
movsl
inc
cltd
mov
in
cmp
in
push
setae
mov
ret
push
dec
outsb
je
push
inc
push
and
xor
adc
rcrb
icebp
fists
ror
int3
outsb
out
lahf
test
das
lret
sbb
aaa
incb
fbld
or
inc
das
popa
fisubs
popf
fmuls
xchg
pmaxsw
stos
pop
lea
or
xor
aam
nop
shrl
or
insl
adc
push
cli
add
or
test
add
insb
push
or
push
push
fcomi
in
xor
out
cmpsl
adc
pop
clc
dec
fstpl
aas
jmp
cmp
xchg
ficompl
cmp
sub
mov
test
cld
imul
xchg
adc
cmp
decl
subb
lods
dec
push
xor
je
shlb
lcall
test
jl
jb
add
or
fldt
iret
mov
mov
in
and
cltd
pop
or
sub
xchg
sub
mov
jo
mov
stc
xchg
mov
mov
sbb
in
adcb
adc
mov
push
in
out
mov
pop
pop
add
fildl
or
mov
push
lea
pop
sub
or
push
push
xchg
pushf
rcll
in
xchg
out
cmpb
fldcw
mov
and
mov
aam
push
xchg
push
inc
xchg
pop
incb
push
cwtl
or
push
add
mov
add
jbe
or
in
pushf
add
push
xchg
push
adc
cmp
xchg
sbb
push
inc
add
ds
or
or
enter
leave
pop
pop
outsb
int
jo
iret
jno
pop
sbb
cmp
adc
cmp
or
cmp
imul
push
fisttps
sub
popf
pop
aam
pop
enter
or
xor
bound
sub
shlb
lret
pop
xor
out
and
es
outsb
xor
push
sbb
scas
mov
xchg
jp
ds
lods
mov
pop
sub
and
sbb
flds
adcb
hlt
dec
xchg
push
dec
fadd
push
lock
jns
lahf
test
out
and
popf
cmpsl
dec
pop
or
push
ret
aaa
cmp
jno
insb
nop
pop
ljmp
jo
cmp
jno
into
xor
lods
mov
dec
push
push
test
or
dec
je
mov
daa
or
and
fbld
add
mov
push
fidivrl
pop
sahf
dec
shlb
jnp
cmp
xchg
adc
xor
adc
and
fwait
int3
jno
and
ret
xchg
mov
lahf
cmp
and
and
cmp
in
pop
sbb
add
inc
daa
lds
imul
sarb
dec
ret
sarb
neg
and
sub
sbb
mov
sub
or
dec
out
mov
push
sub
shrb
ja
adc
mov
imul
push
adc
jb
mov
ret
adc
push
xchg
mov
sub
rcll
cwtl
mov
aas
dec
dec
mov
xor
push
outsl
je
cmp
imul
adc
push
mov
xor
adc
cmp
push
xchg
cmp
xlat
shlb
xor
adc
fldl
js
cmp
push
pop
cmc
lahf
push
mov
xchg
add
mov
sbb
je
inc
inc
das
add
add
inc
mov
arpl
xchg
pop
dec
out
push
ds
lds
mov
js
add
or
dec
out
inc
push
jns
xor
imul
push
cli
ret
sti
rorl
outsb
push
ds
xor
fs
mov
movsl
jle
cmp
push
inc
sbb
shl
iret
test
push
xlat
in
int
xchg
mov
sbb
add
push
loope
add
pop
inc
dec
xchg
dec
outsl
add
or
xchg
and
sbb
inc
les
cmpsb
mov
sbb
dec
outsb
push
sub
cmpordps
add
sbb
push
jle
out
jecxz
or
sbb
add
insb
add
push
hlt
and
rol
push
nop
push
jno
dec
and
xor
clc
pop
mov
dec
and
orb
dec
xor
rcll
push
cmp
pusha
adc
aas
mov
imul
stos
js
jmp
inc
xor
xchg
add
add
pop
and
and
or
dec
sub
jne
pop
shr
mul
repz
pop
or
fdivrs
imull
or
gs
scas
inc
ret
cmp
add
mov
adc
arpl
xor
cli
test
dec
subl
lret
push
pusha
or
adc
out
hlt
call
pop
inc
push
push
in
push
mov
or
mov
out
es
bound
and
out
dec
jns
pop
js
lock
aas
testl
inc
cmpsb
sbb
ret
cmp
fimuls
pop
or
lret
clc
mov
and
inc
cmp
jl
pop
push
std
imul
ss
popf
mov
and
js
jo
add
test
mov
les
jnp
lcall
bound
push
or
mov
mov
and
push
cmp
sbbb
shlb
mov
mov
cmp
sub
xchg
add
push
xchg
push
add
xor
addb
push
add
les
clc
setns
cld
hlt
mov
pop
test
cmpl
jns
dec
inc
push
and
es
std
sub
aaa
inc
jl
mov
mov
inc
lret
test
mov
fstps
test
sarl
add
or
jge
aaa
out
pop
push
repnz
repz
mov
mov
adc
insl
inc
pop
add
js
sbb
xchg
add
in
shrb
lea
jmp
sub
sub
and
and
sbb
push
orb
xor
or
in
push
fiadds
mov
cs
xchg
or
nop
int3
inc
push
mov
xchg
pop
daa
in
cmp
xlat
lods
and
add
test
mov
xchg
jmp
jmp
cmove
add
cmp
adc
mov
xor
xor
pop
lea
rorb
mov
inc
push
js
cmp
out
mov
adc
xchg
out
cmp
xor
fildl
cmp
adc
xchg
adcl
lea
sub
sbb
or
mov
jne
lret
jno
sbb
dec
pop
sbb
test
sti
cmp
or
daa
cltd
dec
pop
out
inc
xchg
pop
out
js
adc
mov
cmp
jno
arpl
adc
cld
jne
inc
fsubr
xor
pop
sub
in
popf
inc
inc
pushf
push
and
xor
lret
pop
jno
aaa
addl
sbb
mov
lea
nop
test
cltd
cmp
insb
cmp
cmc
ljmp
adc
xchg
sub
mov
xlat
or
cmpsb
push
xchg
sbb
arpl
add
push
sbb
cmp
ror
sti
mov
add
or
dec
sub
jge
popa
stc
or
sbb
test
movsb
in
push
and
out
pop
popa
lods
mov
adc
outsl
pop
jne
push
sbb
xchg
fldt
nop
or
and
sarb
fsubs
push
mov
sti
popa
mov
lock
mov
into
sub
push
push
ds
shrl
adc
jb
outsb
pop
lahf
aam
adc
push
mov
mov
in
clc
jb
and
jl
cmp
push
rorl
mov
sbb
xchg
jo
pop
cmp
je
lahf
fucom
push
mov
adc
push
lret
ds
xchg
aaa
es
push
lcall
push
lea
pop
add
pop
sub
and
cmp
out
add
adc
pop
adc
and
cli
jmp
mov
dec
out
data16
jle
mov
js
mov
sbb
movsl
jae
cli
in
arpl
stos
lret
push
pushf
jo
ret
ds
push
int3
lea
cld
push
jmp
dec
icebp
push
xor
test
lcall
add
fwait
dec
cmp
push
mov
dec
xor
repnz
or
cmp
notb
inc
push
xor
pushf
fiadds
imul
cwtl
dec
xchg
divl
and
jl
add
pop
xor
in
or
jg
pushf
mov
popf
pop
fisttps
mov
adc
adc
xchg
add
xchg
inc
bound
or
sbb
or
addr16
or
rsm
jo
adc
push
lret
fiaddl
insb
jb
lcall
xor
adc
or
adc
out
std
ss
push
adc
icebp
push
cmp
sti
or
arpl
subb
xor
or
cmp
test
lock
inc
dec
clc
mov
push
jo
incl
inc
jae
cmpsb
fstl
stc
ds
loopne
mov
pop
and
inc
sub
jl
cmc
adc
push
aaa
test
jg
xchg
mov
decl
pop
sbb
insl
in
rol
std
jae
xor
ds
jle
pop
lods
pop
in
and
xor
mov
sub
inc
adc
xchg
sub
jle
mov
pop
icebp
std
movnti
push
decb
in
xor
push
xor
rcrb
add
xchg
loope
andb
jle
xlat
jp
mov
sbb
push
lods
push
inc
pop
mov
lock
mov
jo
xor
out
sbb
xor
or
andl
jle
inc
sbbb
icebp
adc
xor
pop
loopne
fdivr
add
pop
adc
inc
notl
cltd
aaa
pop
adc
mov
jb
push
jae
push
dec
xor
pop
dec
pop
ret
push
xor
sub
aas
pop
shll
sub
push
aaa
push
and
fstpt
add
hlt
jle
cmp
aaa
setae
mov
dec
push
nop
or
inc
inc
into
push
dec
insl
xchg
ljmp
pop
push
or
test
jge
xchg
fcomps
repnz
arpl
xchg
scas
inc
xor
jns
mov
insb
es
jmp
je
data16
xchg
xor
adc
add
jle
call
xor
ljmp
adc
sarl
jo
or
cwtl
mov
outsb
adc
addr16
add
and
mov
imul
lea
xor
push
xchg
add
jae
dec
lea
cld
pusha
outsl
jmp
in
pop
je
xchg
bound
outsl
cmp
add
rclb
addr16
ljmp
jae
cmp
ljmp
jb
imul
add
mov
sahf
das
shl
add
cmp
out
sub
mov
sbb
mov
rol
test
push
imul
adc
sub
rcrb
add
jp
loope
xchg
push
push
cmpsb
mov
inc
jae
int
xchg
xor
add
arpl
repz
idivb
inc
popa
xor
lods
stos
in
mov
cmp
xor
push
in
push
pop
loopne
fisttpll
stos
mov
pop
mov
adc
lahf
cmp
dec
or
inc
bound
mov
sbb
push
xchg
push
cmp
mov
std
sbb
int3
push
push
in
stos
pop
or
dec
or
roll
jnp
lcall
add
inc
rolb
cmp
aad
sbb
push
add
cmp
cmp
mov
mov
mov
subb
push
xor
out
iret
repz
push
xorl
mov
or
dec
mov
add
cmp
xor
inc
lea
sub
popa
negl
adc
xlat
sub
push
adc
push
and
adc
je
inc
mov
pop
clc
or
adc
test
mov
mov
pusha
ret
sub
xchg
dec
fwait
out
add
lock
cmp
pop
insb
push
mov
xor
js
pop
push
clc
imul
sub
xchg
je,pn
cs
addr16
jb
adc
in
and
xchg
pop
cs
sbb
jecxz
out
cs
pop
lahf
insb
mov
in
add
arpl
mov
adcb
xor
or
xchg
and
add
dec
or
adc
and
mov
addr16
push
sbb
movss
call
add
jecxz
fwait
test
fadds
mov
adc
popa
cmp
xchg
cmp
xor
ss
rclb
mov
lods
sar
ret
sub
adc
movsb
sub
sbb
inc
inc
add
push
clc
inc
cmp
mov
add
inc
sti
push
in
mov
icebp
inc
aas
push
sub
xor
push
xor
push
jmp
dec
jmp
hlt
mov
sbb
adc
add
cmp
rolb
sub
pop
sbbl
jbe
cmp
cmp
test
lock
jo
mov
jge
or
push
push
js
test
inc
mov
outsl
js
inc
push
ja
adc
imul
idiv
pop
xchg
mov
imul
jo
popa
push
ljmp
lret
js
ljmp
and
pop
and
pop
push
lock
mov
add
lcall
in
or
cmpsl
and
icebp
in
mov
adcl
mov
aad
lds
and
fadds
push
cmp
aam
dec
mov
adc
pop
outsb
test
add
mov
sub
loopne
movl
pop
repz
or
int3
pop
sarl
xchg
sub
pop
mov
jmp
dec
cli
cmp
gs
push
in
mov
fs
xor
sub
sub
je
mov
push
xchg
mov
inc
int3
jns
dec
jno
push
adc
fs
xchg
inc
mov
sbb
adc
decb
dec
rclb
sbb
js
bound
jb
clc
cmpsb
push
ja
sbb
fptan
or
sbb
repz
sub
push
movsb
push
xor
ret
inc
mov
jb
pop
repz
inc
icebp
pop
out
and
xor
inc
jo
lods
and
mov
arpl
add
sbb
xor
sbb
outsb
xor
push
mov
cmpsb
mov
pushf
inc
jg
loop
inc
pop
adc
das
push
fbstp
sub
sbb
xchg
add
push
xchg
pusha
adc
cwtl
add
cmp
cli
lret
sti
pop
inc
and
cmp
push
push
sbb
call
jle
fimuls
pusha
lock
test
ljmp
btr
mov
iret
sub
add
cmp
mov
adc
mov
pusha
das
dec
mov
lcall
ds
push
cmc
out
inc
dec
jmp
xor
cltd
shrl
orb
jl
div
jecxz
adc
adc
movsb
aad
mov
xor
push
lea
divl
jo
or
push
add
cmp
lock
dec
ss
jmp
push
ljmp
xchg
pop
mov
push
pop
outsb
push
movsb
push
imul
fnstenv
daa
sbb
out
jecxz
fcompl
cld
fcoml
pop
or
add
adc
mov
add
mov
or
mov
or
imul
push
dec
mov
sahf
pop
bound
outsb
jmp
mov
xor
cs
adc
push
sub
jo
stc
clc
adc
jp
mov
pop
xor
inc
jge
jmp
or
adcb
cmpsb
scas
std
mov
xchg
sbbb
loop
scas
or
lcall
andb
stc
cmp
jmp
dec
lcall
or
std
hlt
sub
stc
cmp
adc
or
pop
xlat
aaa
cmpsl
imul
xor
push
jp
lea
popa
and
and
adc
mov
scas
adc
insl
xchg
and
ss
adc
pop
int3
push
add
and
enter
add
and
jge
jg
mov
jae
fists
mov
outsb
mov
pop
jno
mov
pushf
jg
dec
dec
jns
in
pusha
lods
pop
scas
sbb
xchg
jbe
sbb
ljmp
mov
push
out
dec
movb
mov
pop
mov
cmpsb
jbe
loop
jle
dec
hlt
pushf
mov
pop
les
ja
lret
in
pop
jb
inc
loopne
jb
cmp
cwtl
jo
push
sbbb
lock
cli
int3
sahf
in
jbe
cmp
sbb
push
sub
jmp
fisttps
push
sbb
mov
shl
push
mov
subb
and
loopne
ds
push
sub
pop
sahf
std
or
mov
or
dec
lods
out
cld
bound
scas
inc
pop
xchg
push
pop
lret
or
inc
push
in
out
psllq
jp
lods
mov
pusha
mov
sbb
bound
dec
pop
xchg
xor
push
je
sub
leave
es
ds
jo
pop
ljmp
mov
inc
push
cmp
repz
decb
out
mov
in
mov
xchg
mov
repnz
or
das
jmp
cwtl
inc
xchg
call
xchg
fwait
enter
jb
cmp
cmp
inc
je
leave
xor
dec
jmp
or
in
xor
jmp
shlb
rorb
xlat
hlt
inc
ret
xchg
ror
in
jbe
cmp
sbb
fldl
les
shrl
retw
cwtl
inc
mov
enter
jb
cmp
cmp
into
fmulp
sahf
mov
mov
mov
mov
inc
mov
daa
int
scas
int3
ret
in
jbe
cmp
mov
aaa
rcl
sub
outsb
mov
inc
push
cmp
lock
ficoms
push
inc
inc
jbe
outsb
adc
ret
insb
dec
sbb
les
or
pop
jo
insl
adc
stc
cli
jmp
rclb
insb
ljmp
dec
pop
popa
data16
and
xchg
les
and
xor
pop
popa
pop
outsl
fs
dec
add
das
pop
ljmp
repz
ss
pop
push
mov
jp
and
fisttps
ret
gs
or
shlb
push
rolb
negb
cmp
cmp
pusha
js
lock
sbb
mov
repnz
and
insl
jo
push
jge
mov
insl
pop
pop
aam
inc
mov
js
pop
xchg
inc
and
xchg
dec
pusha
stos
js
jp
or
pop
fimuls
leave
adc
aaa
call
xchg
and
testb
mov
jbe
sbb
or
xor
or
fs
mov
pop
mov
nop
stos
pop
ljmp
push
out
hlt
lcall
pop
decb
lea
hlt
das
outsb
jb
and
push
and
out
testl
jb
out
dec
pusha
out
sbb
int3
jo
pop
cmp
gs
jo
cld
es
adc
sbb
inc
adc
fadds
push
and
mov
mov
inc
jo
addl
mov
loop
mov
hlt
dec
stos
xchg
into
pusha
cli
mov
push
ret
int3
add
push
jbe
mov
cmp
sub
pop
je
adc
popa
jne
mov
add
push
sahf
or
inc
push
cmpl
xchg
and
push
les
cmpsl
in
push
sbb
loope
mov
inc
inc
es
xchg
pop
enter
adc
and
adc
jl
mov
adc
xchg
dec
fldenv
lods
stos
das
ljmp
cld
dec
xchg
mov
pop
mov
xor
clc
cs
xchg
push
add
mov
cmc
dec
jnp
pop
pop
push
aaa
and
adc
dec
jb
push
push
add
push
cmp
dec
add
jo
and
or
jns
mov
int3
repnz
in
rclb
pop
cld
adc
mul
xlat
daa
or
pop
and
rcr
call
mov
inc
pop
pop
inc
cmp
add
xchg
std
xor
adc
push
xchg
push
xor
xor
adcb
shl
push
jl
repz
jge
pusha
aad
cmpsb
es
mov
add
shrb
fdivr
and
push
jl
push
inc
pop
or
movsb
mov
repz
stc
sbb
ret
in
or
sbb
pop
cld
pop
and
out
mov
push
add
jp
std
pop
repnz
push
xor
push
inc
notl
mov
idivw
lahf
in
sbb
xchg
out
sub
pop
sbb
cmc
sbb
cmp
cmp
mov
insb
mov
add
mov
sti
or
lds
cmp
movsb
test
daa
jne
push
dec
pusha
sub
jle
out
leave
push
jbe
aam
mov
add
sub
add
ret
xor
out
mov
xor
inc
xchg
add
push
loope
negb
jl
adc
inc
roll
and
add
lret
push
lret
inc
lret
jns
push
clc
xor
clc
jge
sub
lock
repz
push
movsb
testl
in
mov
pop
inc
adc
or
push
out
test
hlt
cmc
sub
dec
aad
or
loopne
adc
xor
popf
das
adc
test
clc
pop
pop
mov
push
lds
lcall
pop
out
into
inc
sub
imul
add
adc
aas
pop
int3
sbb
nop
ss
push
in
push
pop
hlt
add
fistpll
pop
sub
cmpsb
cmp
aaa
mov
cltd
mov
in
adc
fimull
or
fs
xchg
js
push
jmp
push
push
hlt
lcall
dec
cmp
leave
lods
push
cmpsb
push
cmp
fs
pop
mov
xchg
xchg
adc
push
sahf
fs
pushf
jnp
mov
jp
push
cli
jnp
movlps
push
ret
and
push
out
and
xor
push
inc
inc
or
adc
sti
les
out
je
jp
pop
add
inc
stc
pop
or
inc
cmp
inc
lock
pop
sub
fs
pop
out
dec
inc
cmp
shrl
adcb
ret
gs
out
notl
inc
add
dec
adc
cmp
cmp
lcall
add
sub
pop
clc
lcall
hlt
lea
cld
std
dec
xchg
in
jne
cli
leave
data16
add
lods
cld
rcrb
call
jae
jbe
out
jmp
push
hlt
sbb
lea
mov
adc
lea
and
jb
add
fs
ds
sub
jno
dec
dec
jns
loop
cmp
push
in
int3
xchg
jg
mov
xchg
sbb
test
mov
jl
scas
psrlw
ds
jnp
ret
push
iret
mov
jmp
sti
mov
ret
sub
loop
adc
adc
sub
jbe
push
loope
stc
cmp
adc
jmp
fisubl
push
inc
ja
xor
dec
dec
daa
pop
ficoms
cmp
mov
pop
aas
popf
enter
daa
pop
sbb
dec
xchg
dec
lahf
clc
xchg
push
mov
ret
xor
xor
push
pusha
aaa
dec
inc
popa
add
sub
gs
lea
jb
dec
sbb
je
test
push
inc
inc
cmp
push
jae
cmp
ds
sbb
push
sar
adc
mov
fldl
xor
mov
push
out
inc
sbbl
xchg
dec
stos
das
or
mov
out
ret
dec
xchg
lods
popa
dec
push
jp
adc
movsl
cmp
pop
sub
ss
mov
jg
add
cmp
and
push
iret
sub
push
ja
mov
push
xchg
das
or
or
sbb
adc
test
dec
mov
jp
popa
pop
or
cli
in
mov
fsubs
jns
inc
jns
push
sbb
test
bound
inc
movl
je
stos
add
psllq
in
sub
adc
cmp
imul
clc
mov
subb
test
rorl
mov
lods
push
loop
loop
mov
and
fwait
adc
loopne
nop
sub
push
sub
mov
cmpsb
popa
arpl
sub
sbb
xor
add
add
jge
lret
in
or
aad
je
subl
sbb
and
adc
jge
imull
inc
mov
jecxz
push
std
pop
popf
pop
in
push
mov
mov
cs
negb
xor
cmp
jg
adc
pinsrw
pop
cmp
aas
push
pop
je
test
jg
sti
mov
sbb
arpl
or
push
xchg
into
movsb
xorl
ja
push
fnstsw
popf
nop
inc
pop
cli
jne
mov
cli
add
and
inc
pop
nop
dec
pusha
lods
or
int3
jae
xchg
pop
movb
jnp
xor
or
adc
pop
ja
aaa
cmp
lds
sbb
out
adc
arpl
andb
xchg
push
sub
iret
cli
jmp
mov
js
sti
cld
push
pop
lcall
negb
std
mov
cmpsl
add
jo
dec
push
sub
insl
movsb
sbb
repz
sbb
cltd
das
add
sbb
xchg
pusha
repz
jmp
outsl
pop
mov
add
leave
aaa
mov
lods
cmp
add
int3
xchg
cmp
fcmovu
jg
into
xorl
aaa
dec
or
mov
jmp
jg,pn
stos
in
mov
les
pop
fsubs
movsb
dec
sbb
mov
out
and
cmc
and
leave
repnz
mov
in
jne
nop
or
add
push
out
mov
jo
fucomip
or
add
push
fbstp
repz
pusha
pushf
jnp
add
push
test
push
sub
pusha
and
xchg
aam
inc
jne
inc
mov
xchg
outsb
xor
xchg
lods
pop
cs
pop
mov
cmp
lea
inc
test
in
push
ss
movsb
scas
pusha
push
add
mov
xchg
mov
jbe
add
test
jno
sbb
loopne
pop
sti
outsb
inc
sub
je
jb
fsubr
jnp
shr
push
je
pop
add
out
in
inc
and
sub
in
rcrl
mov
daa
pop
xlat
scas
mov
into
lret
pop
rcrl
scas
mov
sub
int3
jns
mov
sub
aaa
cld
fwait
andl
push
sbb
and
add
xor
xorb
pushf
or
pop
cmpsb
adc
inc
mov
pop
out
xchg
fld1
mov
andl
and
fwait
pop
mov
scas
jb
add
push
adc
sub
push
loopne
movsl
pop
mov
jecxz
lea
mov
dec
dec
je
sti
test
unpckhps
and
mov
aam
mov
xchg
mov
pop
mov
hlt
xor
mov
push
je
movsb
addb
mov
xchg
pop
repnz
movsl
lahf
and
imul
dec
clc
mov
push
mov
bound
pop
jns
adc
jbe
ljmp
and
emms
mov
sub
xchg
ja
rclb
les
lea
pop
and
push
call
frstor
std
sub
roll
pop
push
test
add
jno
popa
or
inc
mov
push
leave
test
out
xor
sbb
dec
pop
cld
cmp
jmp
and
ds
xor
das
inc
push
add
jns
shll
sub
mov
les
or
push
addr16
push
sbb
pusha
xchg
cli
ds
and
test
push
lret
loop
inc
divl
cwtl
push
out
or
xor
inc
jbe
ds
subb
pop
pop
pushf
sub
sub
dec
jno
mov
mov
dec
pop
push
out
sbb
in
xchg
into
add
imul
aas
mov
xchg
mov
jg
sbb
inc
icebp
cld
sub
je
fs
pushf
cmp
adc
xor
jo
mov
dec
mov
mov
inc
das
sbbb
dec
arpl
in
xchg
mov
ss
in
lret
xor
sub
aaa
or
cmc
or
outsb
inc
arpl
push
lahf
sub
mov
fs
arpl
push
fwait
data16
or
cs
loop
sahf
and
add
daa
adc
scas
add
mov
cmp
push
and
lea
or
mov
sbb
cmp
leave
mov
setl
mov
sbb
cmp
mov
jno
ss
out
aas
push
push
sbb
cmp
push
sub
jg
aas
ds
cmp
cmp
adc
pop
flds
lea
arpl
shrl
ljmp
push
test
rolb
out
adc
in
int3
popa
inc
mov
sbb
sbb
xchg
push
repz
repz
lds
fiaddl
arpl
ja
loope
jl
jmp
add
sbbl
push
pushf
pusha
cmp
inc
sbb
aad
push
inc
dec
insl
mov
shr
cmp
mov
loopne
loope
test
call
fsts
and
popf
stos
ds
xchg
fdivrl
cmpsb
scas
jno
loope
jo
sub
mov
inc
jmp
in
scas
fistl
lahf
lock
cmp
loop
push
les
adc
cwtl
cmp
stos
pushf
cld
or
add
dec
xchg
cmc
scas
cmp
sbb
or
and
jl
sbb
xor
ds
testb
sbb
imul
adc
shll
outsb
push
test
sbb
mov
add
pop
xchg
enter
ret
push
js
pop
dec
xchg
imul
inc
push
pop
xor
dec
adc
test
mov
ror
push
aaa
test
or
lcall
dec
sub
mov
mov
mov
push
lcall
or
popa
inc
loopne
insl
pushf
or
repnz
fisubl
pop
pop
or
movsl
rorl
pop
sub
lret
pop
packsswb
gs
add
xchg
cmp
jle
test
popa
pop
and
xor
jp
pop
pop
jns
faddp
sub
incb
mov
pop
aas
fcompl
rcrb
cmp
cmp
lret
out
pop
push
scas
xor
mov
outsl
fwait
dec
pop
xchg
and
mov
insb
jmp
add
adc
add
lea
mov
enter
dec
cs
js
xchg
in
clc
adc
adc
idivb
xor
repz
scas
xchg
jnp
sbb
jle
mov
hlt
int3
insb
inc
out
das
cli
mov
adc
pop
sbb
jo
add
xchg
shll
imul
sete
insb
inc
xor
push
xor
jnp
outsb
or
or
pop
xorl
fidivrs
es
psubd
nop
push
bound
pop
cli
cmp
out
mov
pop
push
xor
in
fcoml
icebp
jnp
inc
mov
ljmp
out
loope
sub
fisubl
or
jno
fcmovnb
repnz
sub
fldenv
push
mov
loop
aam
mov
fcoms
iret
imul
sbb
andb
cmpsl
add
pop
and
sbb
in
out
mov
into
scas
daa
or
sti
movups
or
loopne
inc
mov
ficomps
in
dec
adcl
stc
out
dec
jb
nop
int
add
push
xchg
jbe
into
adc
je
sbb
adc
mov
inc
add
push
in
push
xor
in
xchg
imul
mov
mov
sub
lret
inc
cltd
jmp
ds
data16
xor
mov
mov
pop
iret
add
inc
lds
inc
inc
dec
pushf
sub
push
daa
pop
pushf
and
aam
movb
sbb
fisubs
int
jne
mov
sub
adc
xchg
inc
xchg
push
adc
clc
xchg
add
aas
hlt
into
and
or
das
push
or
test
lock
pop
and
jg
in
xor
mov
or
jo
test
fnstenv
sbb
dec
loope
inc
sbb
aaa
push
add
xchg
jle
fucomp
fwait
sbb
sub
aaa
jp
xor
dec
push
lea
popf
mov
mov
cmp
das
in
dec
shr
pop
inc
cs
mov
push
inc
mov
scas
pop
inc
add
pusha
js
dec
ljmp
std
mov
sub
and
jp
dec
sbb
stos
inc
repnz
sbb
nop
outsl
into
xor
pop
mov
jmp
mov
mov
mov
cmp
xor
pop
comiss
jno
jbe
pop
jmp
les
inc
or
call
loop
mov
shlb
js
add
aam
cs
imul
cli
jne
jno
movsb
ja
int
ss
pop
adc
cmpsb
mov
add
push
mov
mov
mov
mov
mov
repz
sub
jae
or
pushf
sub
jbe
call
popf
call
sti
leave
movsb
and
sbb
repnz
adc
ret
out
mov
shr
sbb
jb
fidivs
jp
popf
add
dec
pop
pop
push
dec
or
push
pusha
test
pop
stos
mov
add
cltd
out
aaa
push
or
ljmp
aam
hlt
or
push
xor
jo
mov
and
lods
sti
push
ret
sub
nop
pop
add
inc
es
adc
xor
rcrb
ret
xchg
js
push
jle
sbb
mov
sub
shlb
in
jle
pop
pusha
mov
hlt
jg
cmp
or
jno
dec
roll
pop
shr
jne,pt
subl
xor
arpl
sbb
cmp
or
adc
mov
rorb
xor
pushf
inc
fs
cmp
je
jo
dec
add
add
and
dec
into
hlt
jmp
adc
sub
mov
imul
movsl
cmp
sbb
or
popa
pusha
out
sub
jno
imul
xlat
push
out
ficompl
clc
xchg
cmpsl
xchg
mov
test
call
cmpsl
dec
sar
aaa
clc
paddw
adc
and
adc
stc
pmullw
xchg
push
stc
sbb
dec
cli
and
jbe
xor
popa
dec
jo
add
ljmp
call
jne
sbb
int
enter
ss
orb
sbb
out
jge
loope
popa
mov
ret
inc
sub
fs
addr16
ja
jg
push
cltd
xchg
loopne
test
std
fidivrs
or
sub
stc
dec
inc
pop
test
loopne
pop
push
push
arpl
sbb
out
scas
and
pop
sub
fstpt
test
ds
ret
add
mov
pop
xor
cmp
adcb
mov
test
adc
and
mov
scas
outsb
test
sbb
fdiv
mov
push
mov
and
fld
les
out
mov
sahf
dec
push
push
jle
dec
mov
push
lea
lret
pop
mov
sbb
sbb
add
xchg
mov
cmpsb
pusha
into
dec
adc
popa
and
out
or
enter
sub
mov
pop
lods
hlt
jb
and
mov
loope
sub
insl
push
or
add
dec
xor
test
push
mov
mov
xor
mov
add
aas
inc
and
push
sbb
push
aas
shlb
ss
dec
push
inc
addr16
dec
mov
call
inc
pop
std
jmp
repnz
pop
or
adc
mov
push
bound
lcall
daa
sbbl
test
les
adc
cmp
or
lods
fildll
dec
inc
or
xor
test
or
outsb
pop
pop
jb
xor
mov
sub
mov
imulb
cmp
fdivp
mov
aas
insb
test
lods
fbld
xor
mov
int
mov
loop
outsb
sti
mov
imul
or
jae
jae
jb
push
testb
incb
pop
sbb
xchg
add
addl
and
mov
sbb
icebp
or
cld
lock
movsb
push
or
sbb
xor
test
js
sbb
xchg
or
jbe
pop
pop
pop
lret
or
or
adc
or
dec
jnp
cld
adc
adc
sub
sti
xchg
push
pop
daa
adc
rcll
call
jp
lahf
cld
push
out
jge
push
push
xor
dec
add
sbb
sub
insl
push
scas
jg
daa
xlat
int
cmp
push
das
insl
jmp
movsb
fwait
mov
mov
mov
addr16
jne
or
hlt
in
ljmp
adc
sub
dec
iret
cli
pop
aam
sub
xchg
push
inc
insl
and
mov
push
loopne
mov
js
movsb
and
out
jle
jns
ficompl
mov
mov
xor
cmp
mov
and
sarb
data16
std
daa
std
cmp
aaa
popf
aaa
repnz
push
xor
add
push
les
pop
in
or
pop
mov
ja
adc
jg
adc
or
or
xchg
add
lret
call
rcrb
bound
sbb
jbe
and
arpl
adc
jle
cmp
pushf
add
cwtl
inc
dec
fisubs
cli
mov
enter
mov
mov
jns
push
movsl
adcb
filds
aam
xchg
test
sub
popf
fldz
xchg
cmp
ret
jb
jno
xor
mov
or
mov
mov
sub
adc
int3
imul
rcrb
push
scas
push
inc
pusha
add
sub
xor
xor
jb
jae
in
call
xor
mov
shlb
jbe
xchg
xchg
jb
push
mov
out
bound
push
sbb
rolb
loopew
cmc
shl
int3
iret
mov
leave
les
sti
lcall
cmp
addr16
push
push
push
jae
mov
das
hlt
mov
adc
xor
cmpl
fwait
add
movsl
mov
and
adc
cmp
fldcw
fs
les
lret
xor
mov
aad
ds
cmp
push
pop
push
jp
inc
mov
fisubl
pop
sbb
out
mov
pusha
mov
fimuls
sub
add
jge
test
ljmp
pop
inc
jno
push
adc
repz
lock
repnz
mov
push
mov
or
push
gs
xchg
push
inc
orb
mov
outsb
cmp
fs
fiadds
add
inc
ds
call
repnz
pop
adc
lods
push
call
scas
jae
adc
movsb
pusha
sub
bound
mov
push
and
or
sub
push
rcrl
stos
cmp
mov
pop
sub
or
mov
imul
mov
cmp
mov
in
mov
jo
inc
sahf
cld
push
sbb
adc
pop
or
dec
jno
imul
negl
add
xchg
repnz
adc
pop
inc
sbb
jmp
fsubs
jnp
xchg
jge
add
push
ljmp
add
dec
mov
pop
mov
sub
cli
cmp
sbb
fstpt
push
jb
and
push
outsb
mov
lcall
xchg
mov
push
ret
pop
pop
xor
lcall
adc
push
dec
call
adc
jb
pop
mov
sbb
xor
loopne
xchg
push
push
loop
fcoml
sbb
mov
roll
jl
daa
add
ds
negb
inc
xor
add
add
jle
push
ret
pop
dec
shll
fmull
in
lock
or
inc
jmp
and
and
cmp
sub
xor
and
cwtl
jne
stos
cmp
cmp
mov
aaa
or
pop
dec
add
loopne
push
mov
jl
dec
aam
sub
fmull
sbb
aas
jmp
push
jl
in
mov
stos
nop
icebp
ret
push
lahf
iret
pminsw
ret
push
mov
jo
cmp
jne
int3
shl
les
or
xchg
adc
shrb
jo
insb
mov
inc
sub
add
adc
or
adc
xchg
ret
jp
push
add
add
addr16
mov
clc
sub
mov
add
pop
add
lcall
adc
push
test
nop
sbb
shlb
jo
int3
je
push
in
adc
push
mov
mov
out
mov
cmp
js
add
sbb
sbb
xor
inc
test
push
js
push
cmp
inc
arpl
testl
data16
ficoml
and
and
xchg
ficompl
sbb
loope
xor
mov
add
hlt
test
xchg
mov
imul
pop
test
bound
xor
std
sub
xor
gs
inc
insb
gs
sbb
in
fs
mov
pop
int3
loop
cmp
ret
cmc
popa
daa
jb
sbb
mov
push
cmpsb
cli
sub
jmp
js
adc
mov
xlat
ret
in
pop
and
loop
lret
adc
mov
lock
je
xchg
lods
xor
pop
push
lea
loopne
test
mov
mov
xchg
int3
cmpsb
adc
push
adc
sub
mov
sarb
xor
dec
fs
jne
dec
divb
lods
sbb
xchg
stos
add
es
push
sbb
stos
mov
adc
sub
push
outsb
int3
scas
pushf
pop
mov
loop
mov
out
loopne
push
pop
inc
xchg
sub
nop
pusha
les
int3
pop
rcl
or
std
dec
pop
add
je
mov
call
jl
ljmp
mov
push
mov
jb
pop
movsb
into
xchg
out
or
mov
rcl
in
mov
push
stc
mov
xchg
jb
fnsave
pop
pop
ret
adc
in
out
adc
sbb
or
movsl
xor
pop
sbb
dec
sub
xor
js
ds
xchg
mov
aaa
sbb
cmp
ficompl
in
and
mov
push
mov
and
frstor
out
jbe
inc
in
shll
mov
adc
shl
dec
push
jo
inc
cmp
pop
fcomps
pusha
inc
add
or
jbe
adc
sbb
inc
xor
mov
or
out
lock
aas
fcoms
xchg
dec
test
stos
daa
pop
test
push
lods
insl
imul
ret
dec
lret
inc
rclb
outsb
imul
xchg
pop
dec
lods
imul
pop
jmp
and
sti
jo
pop
xor
mov
add
pop
pop
pop
les
lahf
xchg
jmp
pop
ss
adc
or
push
cmp
mov
push
cs
dec
bound
out
push
ret
dec
xchg
push
sahf
cmp
adc
add
sbb
xchg
mov
rcr
xor
shl
mulb
into
jae
push
arpl
pop
or
fcomps
lea
dec
xor
icebp
movsl
and
mov
ljmp
les
adc
test
and
sbb
ret
ss
xor
or
mov
lods
jmp
lret
out
sub
cmp
les
es
or
rep
pop
testb
pop
ss
xchg
lea
sbb
mov
dec
jbe
lahf
mov
push
dec
es
pushf
pop
or
mov
dec
pop
push
jb
inc
dec
xor
pop
push
mov
bound
loopne
cmp
sbb
clc
gs
lcall
dec
xor
adc
or
add
xchg
and
add
scas
xchg
sub
add
and
bound
inc
sub
lcall
inc
dec
es
push
xchg
adc
test
fstpl
add
inc
sbb
fidivs
and
mov
out
pop
lcall
fcoms
les
and
popf
fwait
ret
das
xlat
xlat
ss
test
lea
add
mov
add
int3
outsl
cmp
mov
shrb
dec
call
sbb
js
push
outsb
ja
pop
fwait
inc
fs
mov
mov
div
push
clc
mov
repnz
pusha
pop
push
ds
cmp
imul
mov
mov
scas
and
ror
mov
clc
clc
std
jnp
sbb
dec
arpl
inc
enter
add
pop
out
pop
mov
cmp
pop
adc
or
test
xchg
lahf
and
fildll
fistps
ret
push
hlt
inc
stc
xchg
jno
xchg
jge
xor
ret
mov
dec
cmp
add
mov
push
pop
push
in
mov
mov
jbe
and
hlt
dec
notl
dec
mov
test
ficoms
stos
sbb
xor
outsl
fwait
aad
test
cs
xlat
repnz
push
adc
xor
fdivrs
xchg
jb
fcompl
mov
lds
dec
jno
mov
push
out
add
xor
fcoms
lret
inc
aad
cld
jo
inc
mov
mov
push
push
lcall
out
mov
mov
leave
inc
push
or
push
clc
xor
and
loop
fisubs
js
xchg
cld
lock
and
out
orl
repz
push
add
or
dec
xor
jmp
arpl
adc
fwait
das
dec
rorb
je
dec
lret
fnstenv
loope
in
dec
repz
scas
arpl
sub
sbb
mov
movsl
daa
jne
push
mov
leave
sub
jbe
sub
scas
push
sbb
and
xor
test
inc
aas
pop
mov
adc
insb
leave
push
call
push
xlat
hlt
inc
mov
jae
aam
shl
fcomps
rcll
push
xor
incb
psrad
in
xchg
push
xchg
in
cmp
js
sbb
jmp
sbb
loop
push
dec
mov
sbb
xchg
sbb
and
imul
or
push
sbb
inc
mov
ss
sbb
sbb
xchg
cwtl
and
adc
mov
out
jno
push
cs
pop
add
cmp
inc
push
jae
sub
lock
pop
jno
xor
je
in
mov
hlt
je
insb
inc
outsb
decb
sbb
in
xchg
pop
cmp
shl
nop
or
fmuls
in
push
lcall
fcompl
jp
call
jnp
mov
xchg
inc
jnp,pn
xchg
lock
push
sub
movsb
movsl
mov
shrb
push
pop
dec
cmp
into
inc
fiadds
cmp
pop
inc
and
sbb
or
adc
mov
mov
cli
xor
je
push
insl
mov
fdivs
aaa
ss
or
push
pop
xor
fdivrp
fucomp
inc
jbe
rclb
jl
fmull
in
ret
mov
mov
ret
xor
jnp
das
call
shl
outsl
out
mov
ret
sbb
push
rorl
out
nop
into
mov
mov
arpl
arpl
in
mov
xchg
add
mov
insl
inc
iret
outsb
jb
xchg
sub
lods
pop
push
and
add
pop
sbb
add
sbb
add
fidivl
push
jo
daa
sbb
sbb
and
dec
adc
cmp
dec
or
cmp
adc
test
scas
mov
inc
mov
adc
mov
cmp
pop
cmp
push
insb
cltd
icebp
pop
or
pop
lods
clc
adc
inc
adc
ret
dec
mov
iret
sub
insb
mov
xchg
sbb
sbb
add
xchg
dec
mov
mov
sbb
nop
xorl
dec
in
mov
cmp
mov
pushf
cli
dec
cld
pop
or
scas
cmpsl
andb
popa
adc
test
push
mov
shrb
cmp
test
stc
jg
jmp
and
leave
mov
loop
xchg
sub
mov
std
mov
shll
inc
xor
outsb
xchg
xchg
imul
out
mov
addr16
scas
inc
stos
dec
pop
jns
dec
es
or
push
push
dec
insb
pop
push
dec
sbb
add
outsb
sbb
push
nop
inc
cmp
adc
adc
cwtl
inc
enter
adc
jmp
cmp
sbb
je
or
sbb
pop
push
push
mov
inc
dec
mulb
lds
in
jbe
cmp
and
xchg
repnz
sub
and
sbb
xor
lock
inc
xchg
and
xchg
mov
ja
loopne
scas
lock
dec
mov
jp
pop
jmp
sub
repz
push
out
out
les
xchg
adc
daa
movb
in
fnstenv
clc
sub
int3
adc
jbe
and
inc
sbb
mov
pop
cmp
and
mov
in
lods
das
in
pop
aaa
push
loopne
hlt
daa
mov
pop
lods
sub
sub
cmp
stos
xor
cmpb
adc
inc
stos
dec
cmp
dec
push
mov
push
xor
sub
dec
add
mov
dec
test
shlb
xchg
movlps
pop
call
cmp
sub
mov
pop
inc
and
loope
sub
nop
fbstp
add
sarl
fwait
jb
jns
call
push
mov
add
and
mov
test
aas
xor
movsl
add
pushw
scas
insl
xlat
or
mov
or
xchg
mov
jno
lock
pop
es
das
outsl
outsw
popa
ret
pop
dec
inc
cmp
adc
mov
js
gs
daa
outsb
and
adc
cli
and
out
fiaddl
movups
mov
inc
inc
ss
std
cmp
out
sub
pushf
push
idivb
dec
adc
imul
cli
imul
add
mov
js
pop
jno
push
mov
sub
xor
mov
pop
cwtl
dec
pusha
neg
xchg
dec
xchg
je
push
bound
jnp
or
push
lahf
cmp
sub
jmp
xchg
xor
jmp
mov
dec
adc
add
int3
xor
mov
mov
stos
out
stos
xchg
xor
or
dec
sbb
inc
not
leave
push
mov
sub
das
into
jge
add
jo
xchg
xchg
or
add
std
jecxz
xor
fs
push
rcll
test
fidivs
gs
bound
call
dec
lret
pusha
mov
add
or
jmp
sub
xorb
xchg
jae
fdiv
push
lcall
add
pop
mov
ja
jle
inc
fs
xor
lahf
mov
xchg
or
rolb
sbb
push
js
mov
inc
data16
inc
rorb
in
mov
jae
cvtpi2ps
push
mov
je
ret
aad
divb
push
aas
js
xor
pop
jmp
mov
or
push
mov
pop
aas
push
ret
and
adc
ljmp
jb
movsb
lea
sbb
or
fimuls
jg
add
cmp
ret
out
jnp
mov
add
flds
sarl
mov
xchg
adc
inc
sbb
push
jge
lea
and
and
ret
clc
inc
lods
int3
shrb
push
fwait
repnz
adc
test
dec
push
inc
fs
scas
add
scas
inc
push
add
repnz
mov
push
jbe
arpl
or
add
or
inc
inc
out
sub
pusha
xchg
cmp
jp
cli
ljmp
xchg
or
and
out
lods
dec
sbb
out
push
xchg
fiaddl
sbb
adc
add
out
fwait
or
inc
icebp
ficompl
fwait
or
bnd
adc
adc
add
pop
lret
add
scas
and
jo
adc
or
adc
add
dec
aam
dec
lods
or
lcall
rcrb
xchg
lds
and
sub
push
xor
adc
shr
into
lahf
clc
lahf
pushf
and
push
cmpb
mov
push
jecxz
push
aas
push
mov
sub
mov
out
mov
mov
mov
cmp
movsb
lahf
dec
and
adc
add
push
adc
enter
enter
adc
and
insl
lahf
jnp
test
xor
xor
fimull
subb
and
or
lcall
mov
fdivrs
ret
inc
adc
cmp
sbbl
push
add
repnz
xchg
jmp
xchg
dec
ljmp
pusha
cmp
repz
cmc
mov
mov
aas
mov
sbb
xor
mov
mov
inc
and
out
mov
push
fcomp
aam
repnz
jbe
adc
mov
sbb
fs
xor
je
into
jg
stc
push
cmp
adc
js
lcall
idivb
repnz
fs
and
mov
pop
xor
clc
push
data16
push
addb
xchg
cmpsl
jne
mov
add
rcll
cmc
xchg
dec
aaa
adc
aaa
lret
and
mov
jb
inc
jle
jg
inc
out
cli
pop
and
dec
push
or
sub
adc
sahf
ss
test
ret
adc
mov
stos
vmovhps
icebp
push
out
mov
jl
icebp
mov
adc
addb
orb
add
lods
dec
xorb
jnp
push
stc
imul
add
in
or
neg
lock
std
cmpl
ret
es
xlat
dec
mul
and
pop
adc
add
addr16
xchg
cwtl
push
push
cmp
add
jns
imul
push
add
mov
shl
xor
sbb
mov
or
mov
ljmp
mov
daa
fs
mov
push
dec
pop
pop
sub
mov
stos
loop
xchg
sub
pop
push
jmp
adc
inc
adc
call
mov
out
fcoml
enter
mov
stc
add
pop
outsl
jne
adc
popl
repz
sbb
mov
dec
or
jns
xor
addr16
out
lods
test
andb
lcall
jno
rcll
ja
dec
cmp
xor
inc
inc
cli
mov
sub
mov
sti
mulb
std
mov
dec
add
add
cltd
pop
mov
les
cmp
loope
into
add
rorl
mov
test
inc
jl
jg
xor
sahf
std
sub
push
sbb
repnz
jle
inc
jo
stos
mov
add
push
sbb
in
and
cld
js
push
jbe
ljmp
js
mov
out
sub
jle
sarb
shlb
in
das
mov
cmp
incb
jl
xor
add
les
mov
out
mov
or
inc
mov
xchg
jmp
push
int3
add
addb
push
nop
roll
and
orb
push
cwtl
inc
pop
inc
mov
xchg
rcr
jecxz
pop
and
adcb
cltd
stos
cmp
xchg
jnp
imul
decl
test
test
fbstp
test
add
test
adc
gs
popf
adc
add
mov
push
pop
orb
inc
repz
cmc
xchg
gs
repnz
movl
cs
jp
imul
test
add
sub
mov
dec
neg
daa
inc
or
push
mov
mov
pop
adc
lahf
push
ret
cmp
pop
sbb
inc
jno
outsb
mov
scas
mov
adc
test
lods
pushf
jp
pusha
push
dec
push
push
sub
hlt
std
add
add
fwait
mov
push
nop
mov
xchg
jne
cmc
mov
insb
mov
imul
pop
jnp
sub
sti
pop
cli
inc
cmpl
sahf
cmp
jae
mov
push
jns
mov
pop
cmp
cmp
subb
push
pop
pop
mov
dec
testb
mov
jne
mov
subl
jb
sahf
inc
xchg
mov
jle
add
lods
test
mov
mov
cmp
sbb
inc
mov
mov
lods
jne
fwait
dec
cmpb
sbb
push
add
aad
hlt
pop
and
pop
or
sahf
inc
xchg
mov
stos
or
mov
in
push
jnp
test
lret
adc
and
mov
shl
in
std
in
jbe
scas
dec
xchg
stos
sbb
inc
iret
mov
pushf
data16
inc
lahf
pop
jae
and
sbb
adc
xchg
mov
xor
pushf
jl
add
mov
dec
loop
loopne
jl
sub
test
mov
in
jg
repz
ret
lods
sbb
scas
out
fdivrs
es
les
push
test
addr16
mov
adc
mov
es
push
repz
and
test
shll
aaa
jp
and
dec
cmp
inc
cmp
push
inc
aas
inc
push
dec
xor
dec
aaa
dec
inc
push
sub
push
das
cli
dec
xor
pop
push
in
pop
mov
sbb
lahf
mov
pop
lea
lahf
fsub
pop
pusha
mov
add
pop
cld
lahf
mov
add
negl
pop
xchg
adc
mov
jecxz
inc
std
dec
or
pusha
mov
ds
adc
and
lcall
and
dec
jbe
pusha
sub
push
lods
xchg
push
adc
adc
add
push
leave
nop
xchg
call
dec
out
mov
push
nop
push
std
add
mov
mov
in
cltd
or
adc
shlb
out
xlat
sub
sub
test
icebp
jne
fnstsw
xor
call
push
out
sub
lods
cmp
jb
pop
mov
dec
push
sti
psrld
jmp
xchg
dec
gs
jge
pop
and
sbb
mov
cmpsl
shlb
and
or
sub
cmpsl
cmp
xchg
or
stos
or
sub
add
cs
dec
push
push
sub
jbe
daa
adc
outsb
jnp
add
pop
iret
xor
push
add
mov
lea
push
js
jne
fbstp
ficoml
or
sbb
pop
sbb
add
sbb
mov
rcll
pop
arpl
pop
jo
in
mov
adc
pop
dec
pop
sub
mov
mov
test
sbb
dec
pop
cmp
mov
jb,pt
sbb
or
push
and
mov
dec
out
mov
and
xor
out
push
scas
sub
addr16
push
rcl
ja
adc
fdivl
jge
add
jae
jbe
jle
ja
cmp
xchg
push
add
mov
dec
arpl
cmpsb
inc
lret
dec
mov
jns
shll
in
lahf
dec
inc
call
mov
test
push
inc
sahf
push
sbb
stos
mov
in
or
jno
shl
out
nop
pop
jns
lea
scas
ja
xchg
xor
ds
hlt
ss
xor
sbb
jns
sbb
and
sub
jns
inc
sbb
pusha
dec
js
cltd
int3
push
adc
icebp
inc
dec
mov
insb
push
aaa
sbb
sbb
push
sbb
fs
sub
mov
pop
xchg
mov
int3
sahf
leave
xor
jae
or
out
lret
or
stos
adc
or
add
ret
or
scas
insb
ret
jp
das
sbb
popaw
sbb
mov
outsl
pushf
jmp
leave
lea
ljmp
inc
inc
xchg
icebp
pop
push
mov
xor
jecxz
bsf
lea
cmpb
stc
pop
daa
sbb
xchg
stc
icebp
fwait
je
sbb
xchg
cwtl
xor
jl
pop
or
roll
xchg
cmpsl
lcall
pushf
sub
push
or
daa
dec
and
aas
mov
shll
addr16
mov
cltd
stos
adc
adc
aas
clc
pop
pop
pop
dec
pushf
fdivrl
rcrl
mov
es
lock
testl
inc
and
idivl
add
pop
xchg
pop
add
shlb
and
cmpsb
in
popf
int
jge
insb
dec
lcall
shl
push
push
insl
jbe
mov
lret
jnp
adc
mov
lds
mov
sub
fistps
stos
and
jo
gs
out
pop
cmc
das
push
push
sub
adc
repz
fldt
jne
inc
lahf
in
arpl
inc
bound
push
adc
les
lods
xor
cmp
inc
add
or
shl
imul
aaa
lcall
jb
int
sub
test
movsbl
push
xor
dec
clc
sti
add
dec
jp
lds
xor
push
outsb
and
imul
fdivs
mov
adc
inc
es
or
mov
dec
adc
and
push
xchg
iret
loop
xor
mov
or
mov
push
cmp
push
jmp
adc
mov
ret
adcb
adc
pop
sbb
pop
int3
sub
cli
jmp
in
andl
jecxz
pop
data16
add
sbb
inc
sub
out
or
pusha
xor
test
icebp
sti
sbb
movswl
push
inc
inc
pop
xchg
xor
inc
out
mov
mov
xor
cmp
jecxz
lcall
xlat
test
jmp
mov
enter
cmove
out
addr16
dec
cmp
andb
mov
imul
pop
mov
mov
pushf
sub
sbb
jbe
lods
testb
scas
jns
add
adc
and
jbe
lods
imul
addl
add
movsb
sub
mov
sub
jb
test
and
rcrb
inc
push
mov
repnz
out
jo
and
stos
enter
cmp
loope
loopne
and
popf
mov
xchg
mulb
cli
jge
add
test
shrb
adc
nop
sbb
roll
pusha
jg
and
or
pop
mov
mov
cmp
add
lret
xchg
inc
mov
sbb
adc
jbe
orl
mov
rorl
pop
xchg
xor
movsl
or
les
inc
mov
ret
mov
mov
sbb
hlt
mov
loop
aaa
in
cli
int
cmp
orb
out
mov
add
push
andl
pop
push
xchg
mulb
cmpl
add
jp
push
xchg
pop
and
scas
inc
and
add
sahf
push
testb
mov
mov
push
jb
sti
shrl
aaa
cmc
sbbl
mov
cltd
aaa
cld
mov
add
int
mov
xor
stc
in
mov
stos
mov
ret
jne
aam
iret
pop
mov
or
push
stos
mov
adc
xchg
scas
mov
cmp
leave
in
lret
insl
dec
pop
mov
in
ret
push
in
cltd
adc
mov
mov
pop
jle
test
inc
loopne
or
or
pop
fisubs
xchg
xor
lret
push
jo
popf
mov
out
sti
fisubrl
xorl
mov
push
xchg
mov
adc
out
adcl
and
ficomps
jl
xchg
mov
jl
jmp
add
adc
dec
scas
call
jp
cmp
stos
cld
cmpb
mov
shl
mov
scas
or
in
lods
lea
ror
and
jmp
mov
mov
mov
jo
add
mov
inc
jmp
pop
xor
adc
pop
push
adc
lcall
or
cmc
out
mov
repnz
inc
or
in
test
xchg
push
dec
ret
icebp
push
mov
inc
aam
and
lea
push
and
mov
dec
notb
jb
lret
xchg
call
mov
add
stos
addr16
jo
and
shrl
ds
cmp
sub
sarb
or
push
jg
mov
aad
pop
dec
mov
ljmp
shll
js
or
out
mov
xlat
loop
mov
or
pop
add
cmp
inc
xchg
or
pop
or
and
xor
mov
test
xchg
popa
insb
xor
cwtl
jb
and
push
push
addb
or
xchg
int3
cmp
sub
cmp
ja
into
adc
xchg
pop
pusha
inc
xor
mov
jmp
sub
and
movsb
andb
adc
mov
inc
or
add
in
jb
decb
ss
bound
sub
in
pusha
or
stos
cmp
adc
in
pop
inc
push
das
xchg
adc
pushf
sub
ds
sub
pop
cmpsl
mov
push
xchg
pop
sahf
mov
scas
ljmp
add
mov
das
loop
imul
mov
js
outsl
pushf
add
push
hlt
fdivr
sub
rcrb
xor
or
and
fisttpll
push
push
ljmp
lock
div
adc
jo
sbb
out
push
adc
add
mov
sti
cs
inc
call
push
adc
xor
or
movsl
xor
aad
mov
jnp
xchg
cld
jne
fwait
mov
or
mov
pusha
dec
add
mov
jmp
and
add
add
fdivs
pop
mov
hlt
and
dec
pop
dec
jge
cld
push
or
or
sbb
aam
adc
mov
mov
dec
push
dec
bswap
mov
push
dec
pop
fisttpll
push
inc
push
in
jbe
je
testb
jmp
mov
dec
enter
fdivl
out
or
mov
fs
les
jb
pop
call
sub
push
xchg
jae
movsb
sbb
adc
mov
xchg
mov
mov
ljmp
xchg
sahf
push
xor
hlt
pop
sbb
cmovs
or
sub
mov
mov
xchg
imul
lret
jle
and
push
or
jp
xorb
add
dec
sarl
imul
ds
xor
popf
push
das
mov
adc
or
sub
push
push
push
pop
fsubrs
xchg
mov
or
insb
push
sbb
daa
iret
call
orb
in
outsb
dec
mov
in
adc
inc
inc
sub
mov
je
xor
subl
inc
xchg
je
lcall
sbb
rclb
lock
dec
sub
xor
mov
push
mov
jo
push
inc
inc
xor
add
ret
mov
insb
or
data16
cmpsb
jae
imull
ficoml
out
test
fwait
cmp
cltd
sbb
cs
cld
inc
pop
aaa
sbbl
sysret
rolb
lret
jmp
xchg
insl
or
fidivrs
mov
jae
movsb
movsb
clc
push
jle
push
stos
mov
imul
pop
inc
sahf
dec
test
and
clc
fbstp
mov
lods
push
push
jns
inc
sti
push
add
inc
arpl
mov
xor
andl
mov
ret
int
inc
and
sahf
leave
dec
aaa
dec
mov
cltd
add
jo
xchg
xor
iret
repz
int
aas
pop
jbe
adc
mov
sub
mov
push
sub
popa
into
ja
mov
loop
in
lahf
mov
mov
and
mov
ret
dec
jge
mov
dec
cmp
mov
mov
into
and
loopne
test
repnz
dec
test
mov
dec
xchg
mov
popf
push
in
dec
lods
or
adc
xchg
sub
sbb
xchg
dec
adc
or
daa
hlt
mov
ja
pop
lret
xchg
dec
rorl
and
jno
ret
jnp
pop
cld
arpl
sub
cmpsb
jo
adc
inc
out
mov
imul
je
std
test
xchg
push
fwait
pop
ror
jle
dec
inc
lods
orb
pusha
loopne
sahf
cmp
pop
test
loop
inc
mov
adc
andl
push
hlt
and
movsb
cmp
jb
jae
xor
mov
jle
mov
or
dec
je
push
int3
sub
cmp
push
mov
lea
insb
cmp
pushf
cmp
stos
add
fisubrs
gs
xor
dec
gs
xchg
aad
inc
adc
dec
add
add
cmp
cmpsl
dec
lcall
mov
cs
aas
sbb
inc
movb
outsl
je
mov
or
clc
and
adc
in
mov
leave
mov
xor
in
push
leave
dec
cli
xor
push
push
rcrl
jbe
sbb
dec
adc
and
call
aad
xor
rorl
daa
stos
pushf
adc
in
jmp
pop
dec
ljmp
filds
lcall
push
loopne
ret
sbb
dec
inc
sbb
xor
mov
std
adc
xor
into
mov
or
jae
das
mov
inc
stos
shrl
mov
daa
icebp
daa
mov
incl
sbb
int3
shlb
push
and
adc
repnz
cmpsb
int
cmp
loop
loopne
or
mov
cli
sbb
jo
push
mov
addr16
or
fucom
dec
pop
loopne
mov
out
repnz
mov
pusha
push
pop
xorl
insl
cmp
int
xor
inc
lock
cmc
add
pop
add
mov
push
out
lahf
pop
cs
and
pop
dec
adc
cmp
rolb
cmpsb
jg
inc
rol
leave
inc
xlat
or
xor
mov
mov
inc
pop
cmpsl
push
daa
shll
adc
daa
enter
push
dec
adc
fisubrl
jbe
loope
ret
jns
xor
xchg
sbb
push
mov
sbb
jns
loope
dec
dec
sbb
aad
pop
mov
pop
mov
adc
mov
push
or
sbb
jl
aas
adc
xchg
mov
negb
adc
or
faddl
pop
sub
add
and
mov
push
xchg
xor
sti
aad
adc
xchg
xchg
xor
and
push
addr16
mov
sarl
or
dec
and
in
cwtl
push
pop
lret
adc
sub
test
cwtl
arpl
pusha
and
jae
loop
pop
popa
cltd
push
adc
jnp
jp
iret
ret
jmp
and
setae
hlt
test
jp
adc
pop
and
sub
xor
ja
fadds
xchg
inc
data16
adc
sbb
out
lds
iret
xor
and
fs
adc
stos
fadds
adc
mov
pop
cmpsb
fs
xchg
xchg
pop
daa
cmp
fcmovnu
sarb
cwtl
repnz
push
mov
aam
into
mov
cmp
fimuls
outsl
pop
push
inc
mov
rcrb
std
aam
mov
lock
and
bnd
xor
sub
mov
std
mov
loope
subb
mov
push
orb
mov
inc
push
xchg
test
cwtl
push
jge
cmpl
in
sbb
adc
pop
aad
add
mov
dec
adcb
mov
adc
outsb
mov
jbe
mov
mov
and
mov
das
cmp
push
xlat
sbb
aas
bsr
pop
xchg
jns
mov
xchg
jnp
insl
mov
enter
subl
fwait
inc
xchg
stos
orb
inc
leave
mov
rcll
out
les
xchg
push
inc
shl
xor
dec
movsl
sahf
or
ror
and
mov
push
popf
pop
enter
mov
out
add
sbb
incb
subb
dec
mov
mov
fs
test
jle
je
popa
inc
fsubrs
mov
mov
jae
mov
jo
jle
test
les
inc
adc
xlat
repnz
stc
lods
mov
test
push
sub
xor
lock
add
cltd
test
psubsb
fidivrl
xchg
rorb
pop
arpl
int3
repnz
push
enter
aam
out
cs
cmpsl
inc
lds
cmp
mov
mov
loop
dec
adc
dec
add
mov
add
adc
jmp
fisttpl
jnp
test
xor
je
jbe
jae
jne
mov
jmp
cmp
adc
xor
pop
and
lahf
outsl
add
cli
xor
add
or
xlat
adcb
jg
inc
mov
jb
xchg
fsubrs
popa
shl
push
dec
pushf
xor
test
mov
add
sbb
xor
cmp
or
testl
fidivrs
call
call
adc
insl
in
lret
ret
dec
adcl
decb
push
mov
jo
arpl
inc
mov
lock
sahf
xor
test
imul
jbe
push
mov
mov
shlb
out
push
sarl
scas
stc
mov
jo
xchg
scas
movsl
lods
adcl
and
add
xor
divl
cmp
dec
xchg
fisttpl
mov
inc
cmp
roll
lahf
adc
inc
in
in
aaa
and
in
mov
sbb
mov
bound
je
xchg
or
push
in
push
es
cli
dec
adc
cmp
cld
pop
mov
icebp
inc
mov
cltd
sbb
notl
dec
mov
adc
xor
and
stos
add
je
ss
shlb
scas
les
inc
cmp
aam
and
mov
dec
cltd
test
push
dec
cmp
sbb
dec
aas
sbb
pop
cwtl
das
xchg
xor
jb
xor
or
test
arpl
dec
es
jns
xchg
movsb
fs
lret
push
test
call
inc
sbb
xor
aaa
hlt
test
sbb
ret
nop
mov
jmp
jbe
dec
dec
sbb
lea
push
dec
wbinvd
hlt
in
dec
leave
int
adc
enter
pushf
adc
daa
rclb
dec
adc
mov
out
cmp
fmulp
add
cli
mov
xchg
jne
xor
movsb
mov
js
int3
cmpl
mov
je
push
cmp
xchg
add
movsl
icebp
cs
enter
clc
imul
int3
rorb
push
rclb
pop
stos
lret
jbe
cmpsb
imul
icebp
js
lret
jle
stos
inc
ret
add
sub
jmp
add
xchg
jecxz
push
in
in
lds
lds
push
je
mov
lods
js
push
push
sub
mov
test
or
mov
shll
pop
adc
sahf
xchg
int
mov
sub
in
mov
and
repz
xchg
shll
xor
ljmp
sbbl
shr
test
mov
pusha
push
insl
mov
loope
adc
push
setb
fwait
xchg
popa
movsb
jge
prefetcht2
sub
shlb
or
loope
jmp
mov
aam
testb
add
imul
inc
cmp
in
jmp
xor
das
push
cmp
dec
mov
popa
cltd
stc
mov
inc
sbb
maskmovq
divl
push
cmpsl
shrl
mov
sub
sub
popf
sbb
pop
jo
repnz
xor
mov
arpl
push
sbb
add
lock
and
push
cmp
andl
or
dec
pop
jo
or
ja
out
push
mov
movsb
ret
or
arpl
sub
dec
push
kmovb
sub
sub
pushf
test
adc
sub
adc
and
flds
pop
jno
neg
sub
ja
sub
adc
mov
xchg
andl
mov
cmp
aam
xchg
pop
mov
int
ds
fidivs
xchg
cmp
xchg
ror
cmp
xchg
pushf
outsl
jecxz
pop
pop
test
inc
jg
bound
mov
pop
cmp
push
xchg
mov
adc
add
mov
and
test
pop
bound
push
cmp
fidivs
idivl
sub
jns
orl
or
mov
jmp
jbe
and
dec
cmp
enter
adc
inc
sbb
xchg
jo
fs
es
and
in
inc
data16
pop
and
sti
push
inc
or
inc
xchg
push
data16
xor
fwait
sub
into
push
les
in
dec
add
lret
sub
fimull
out
push
push
or
mov
std
push
je
adc
mov
add
mov
ljmp
pop
sub
sub
inc
push
dec
dec
push
adc
cwtl
jns
sbb
push
and
or
push
sub
xchg
pusha
pop
sbb
add
orb
xor
mov
out
ss
aam
xchg
out
ss
inc
and
shlb
xor
sbb
pop
scas
xor
movsb
out
jae
pop
andl
ljmp
insl
xor
pop
je
push
cld
rcrb
movsl
orb
cs
je
mov
ljmp
clc
or
sub
loop
xor
insb
cmp
add
push
lcall
stos
jl
lret
mov
push
sub
push
push
mov
mov
dec
out
inc
add
sub
mov
cmp
cmc
and
dec
xlat
mov
pop
call
push
sub
adc
test
xchg
jp
hlt
adc
push
das
jo
pop
scas
out
adc
push
test
out
fisubrs
testb
call
or
rol
pop
mov
mov
scas
pop
into
sbb
outsb
lds
bound
insb
and
shrb
out
ret
std
mov
jo
or
aad
das
xor
imul
popa
je
pusha
mov
mov
mov
lods
shlb
sbb
mov
inc
adc
dec
push
add
mov
mov
sbb
ds
xor
insl
and
mov
add
mov
push
and
daa
inc
arpl
pop
gs
add
fs
insl
pop
insl
icebp
mov
push
testl
xchg
je
movsl
inc
test
pop
aaa
dec
add
negl
clc
mov
adc
setb
push
jge
sub
cmp
jb
mov
lcall
sar
shll
xor
jle
mov
test
push
cld
xchg
lret
push
fcoms
pusha
addl
bound
jo
xor
adc
out
sub
inc
push
and
sbb
mov
add
adcb
adc
in
cli
popf
lcall
sub
movsb
xor
xor
jnp
push
cmp
pop
shrb
add
pusha
jg
add
fistps
ret
push
mov
sub
xor
add
cli
jl
aaa
movhps
or
sahf
repz
out
imul
mov
test
jmp
adc
ret
das
stos
repnz
mov
jno
xchg
pop
loop
adc
sub
push
push
cld
sbb
mov
pusha
jl
cld
sbb
int3
push
inc
cmpb
loope
pop
pop
pop
dec
repz
mov
js
adc
sub
sub
nop
xchg
sbb
xchg
jns
xchg
sbb
cmp
or
test
and
mov
in
mov
pop
lahf
jbe
push
loope
jne
mov
insb
mov
je
imul
jb
or
ja
xor
jl
jo
dec
nop
sub
add
pop
sbb
xchg
xor
daa
clc
ss
popf
cmp
jno
push
xchg
push
mov
push
sub
xor
sahf
out
gs
push
aam
lods
mov
or
xchg
lret
adc
or
scas
clc
mov
rolb
out
les
inc
call
jl
fisttpl
sub
ss
out
movsb
mov
je
pop
cld
or
loop
pusha
aaa
dec
ror
or
pop
sbb
movups
cli
mov
insl
or
pusha
imul
sub
and
jl
es
xor
test
pop
test
cmpsb
mov
bound
rol
test
sub
bound
jb
cmp
clc
pop
fdiv
jecxz
add
mov
cmp
test
or
int3
pushf
stc
add
or
push
ds
sbb
sub
pop
pop
xor
je
sub
cs
inc
add
ja
push
outsl
push
push
mov
lret
inc
dec
sbb
xor
outsl
adc
dec
and
or
in
sub
cmp
sahf
adc
leave
mov
jg
cmpl
xchg
pop
outsb
or
dec
scas
push
mov
cmp
aam
into
subb
test
adc
xor
pop
or
iret
stos
gs
inc
and
daa
loopne
dec
sbb
xor
adc
and
dec
jbe
out
adc
cmp
inc
xor
fs
repnz
hlt
xchg
sub
cmp
dec
clc
mov
mov
pop
push
jge
xor
add
aam
sbb
fbld
leave
ss
mov
pop
je
or
adc
pop
push
add
sbb
daa
or
clc
jae
gs
enter
js
xor
adc
add
sbb
dec
push
or
adc
or
std
jmp
inc
sub
outsb
in
fimull
jne
push
lahf
adc
in
addr16
adc
jno
flds
inc
dec
cmp
push
jo
xorl
pop
inc
mov
movsb
aad
ret
sub
sahf
adc
notb
lock
popf
sbb
xor
out
std
cmpsl
inc
sti
mov
xor
xchg
pop
repz
mulb
sbb
jae
or
repz
or
pop
inc
mov
inc
xchg
and
push
jnp
dec
cmp
xchg
sbb
cmpsb
movsb
ret
dec
ss
in
hlt
pop
mull
push
adc
dec
adc
sbb
pop
xor
cmp
and
int3
pop
dec
jae
lahf
pushw
jle
xorl
xchg
loope
mov
leave
mov
lahf
shrb
xor
cmp
mov
repz
sbb
pop
dec
ds
push
and
inc
inc
inc
lahf
dec
push
pusha
xchg
outsb
push
jno
mov
dec
loop
mov
faddl
repz
scas
or
mov
pop
fidivs
xor
dec
inc
sti
lock
or
or
adc
fnsave
repz
pop
pop
pop
fs
je
jl
mov
xchg
mov
adc
aam
or
adc
in
ss
jb
jae
push
add
and
inc
pop
daa
lahf
sub
xor
xor
dec
pop
push
push
pop
and
and
dec
add
xchg
ret
and
rclb
and
and
inc
sahf
jmp
cwtl
xor
scas
bound
pop
pop
inc
je
lahf
sbb
xor
xor
xchg
dec
push
push
sbb
mov
call
xchg
mov
sub
push
stos
dec
inc
lret
mov
add
in
adc
lods
iret
mov
xchg
jge
loope
or
add
sub
cmc
mov
test
movsl
dec
jb
cmpsb
mov
jnp
mov
and
lds
and
and
jecxz
push
push
and
cmp
sub
dec
out
faddl
jge
mov
loope
outsb
adc
jg
xor
scas
cmpsl
pop
push
pop
mov
add
js
lds
mov
xchg
sub
in
mov
jl
xor
xchg
outsb
pop
sbb
pop
test
lock
movsl
jb
sub
and
sbb
pusha
adc
adc
or
mov
int3
jge
adc
push
ss
pop
push
ja
adc
in
inc
enter
ss
ds
pop
adc
fs
or
insb
and
je
lahf
add
adc
dec
in
push
lock
lock
cvtpi2ps
icebp
jmp
sub
add
pop
loopne
xlat
mul
loop
or
js
mov
push
xorb
out
data16
cmp
in
sbb
fdiv
mov
dec
cmpsb
mov
jg
fcmovb
jle
sbb
in
jecxz
stc
jo
cli
add
cmp
inc
je
sbb
imul
cmp
bound
inc
data16
jg
push
out
adc
lock
pop
push
dec
sahf
jle
pop
outsl
mov
addr16
hlt
pop
imul
or
and
add
fidivl
test
cmp
pop
stc
push
idivb
rol
das
and
loop
mov
fiadds
pop
jne
cmpl
pop
pop
sub
jb
jns
sub
sbb
or
aas
adc
inc
cld
and
push
or
push
fwait
inc
xor
mov
loop
lahf
jo
test
lods
push
push
out
or
pop
xchg
sub
push
pop
inc
or
aaa
or
push
dec
xor
inc
jb
xchg
shl
add
or
mov
pop
add
jae
or
dec
pop
sti
repnz
dec
sti
jmp
cmp
loope
out
mov
sub
je
dec
xchg
in
cltd
jb
cs
add
push
cmp
dec
lahf
aaa
mov
hlt
pop
popf
mov
dec
loop
jle
cmp
and
adc
cli
cmp
icebp
icebp
push
inc
add
push
inc
push
adc
jbe
push
ja
inc
sbb
push
mov
push
push
push
pop
xor
inc
inc
insl
dec
push
lea
imul
insl
pop
push
lea
imul
insl
push
push
lea
push
add
fsubs
mov
sub
xor
idivb
call
lds
add
and
adc
pusha
push
or
push
sbb
rcrl
sub
push
mov
repnz
add
test
pop
imul
inc
rclb
enter
sub
outsb
dec
pop
lds
test
roll
push
pop
lock
mov
scas
loop
dec
hlt
mov
push
cmp
mov
fxch
pop
ret
xchg
fdivrp
inc
sbb
ds
daa
xchg
mov
call
mulb
xor
fistps
aam
jecxz
cmp
inc
cld
ret
xor
adc
andb
jns
push
sub
addr16
test
aam
sbb
in
or
movsl
jle
popf
cld
and
or
pop
fidivs
lahf
xchg
push
repz
inc
daa
sub
pop
pop
js
lret
pcmpeqw
push
nop
clc
cmpsb
jno
sbb
jge
insb
jge
xchg
inc
sub
cmp
xor
jns
or
hlt
imul
mov
lods
inc
sbb
and
jmp
aad
add
cld
jmp
clc
fs
cmpsl
int3
dec
hlt
xchg
icebp
xchg
xlat
aam
cmp
fldl
and
sbb
test
xchg
jno
out
je
sbbb
sub
lret
cmp
pop
xor
mul
pop
jo,pt
xchg
aas
out
jno
rorb
pop
gs
stos
mov
mov
mov
lea
xchg
fists
jmp
pop
insw
mov
test
mov
mov
xchg
xor
sbb
jae
add
push
lahf
xchg
pop
xchg
and
push
orl
jo
movsl
popf
mov
add
bswap
insb
fnstsw
adc
jns
enter
pushf
pop
and
movsl
enter
cmp
inc
fldcw
mov
dec
cmp
jl
push
mov
mov
inc
inc
inc
cmp
push
xchg
pop
sbb
add
and
dec
sbb
sbb
push
jmp
sti
push
testl
cs
sbb
stc
and
std
jp
jno
ret
xchg
iret
test
push
lea
push
aad
push
pop
push
adc
clc
pop
lcall
or
adc
xchg
sub
test
adc
or
pop
add
insl
cmp
shrb
test
pop
fiaddl
stos
and
lea
nop
cmc
bswap
cs
leave
inc
add
orb
jb
in
lret
push
sti
dec
xchg
or
pop
lea
inc
adc
add
mov
push
imul
pop
bound
mov
out
push
jmp
sti
adc
data16
and
jle
sbb
lods
pop
inc
test
jge
loope
jno
jp
in
movsb
adc
ds
dec
sarl
add
cmp
or
mov
into
sbbb
nop
sbb
pop
or
jno
sbb
xchg
aad
out
dec
mov
sub
scas
xchg
sbb
lea
pop
pop
cmp
shrl
push
push
jns
std
pop
cpuid
mov
ret
es
jb
xchg
inc
or
stc
xorb
dec
jae
pop
mov
push
add
pop
push
jno
adc
push
cmp
lahf
es
jb
arpl
ja
and
or
fistpl
and
push
or
mov
jo
fwait
jl
rorl
sbb
rolb
fsubl
push
ret
xor
jnp
ret
xchg
jo
add
call
and
es
adc
fcompl
jg
test
dec
push
dec
js
pop
cmc
adc
push
xchg
cmpsl
scas
xor
lret
lods
xor
or
cmc
dec
adc
movsl
xchg
int
jmp
adc
call
scas
sbb
jo
push
sti
mov
aad
pop
neg
inc
inc
xor
sub
arpl
aas
push
jge
xor
leave
dec
inc
sbb
in
bound
mov
sbb
cmpb
andl
mov
sub
data16
pop
dec
mov
jnp
sub
mov
and
sub
stos
mov
xlat
scas
inc
in
in
xor
add
repnz
jl
add
sbb
in
stos
mov
or
cmp
leave
stos
popa
mov
jb
idivb
out
xor
xchg
xchg
jle
xchg
in
mov
dec
cmp
out
push
xchg
or
push
xor
in
dec
in
xor
push
fisttpll
subl
jb
xchg
push
idivb
mov
ss
pop
lods
fucom
mov
sub
movsl
loop
mov
xor
jge
mov
aas
sbb
push
or
push
xor
inc
and
push
divb
in
pop
mov
and
test
jecxz
push
mov
push
sub
pop
mov
ss
and
inc
push
cs
cmp
ret
pop
mov
mov
divb
xor
inc
enter
movsb
jae
loop
popf
in
jb
out
ds
out
mov
push
pop
lret
inc
fmull
xchg
mov
or
ljmp
repz
jbe
mov
cmp
jmp
dec
cmp
outsl
lock
call
inc
add
pusha
and
pop
sub
popa
sub
mov
jl
pop
mov
add
pop
jno
push
xor
jp
sub
repz
jno
push
xchg
andb
sar
mov
mov
mov
ret
mov
into
jge
adc
adc
push
or
pushf
add
inc
shr
sbb
inc
pop
fldenv
test
repz
jge
arpl
mov
jae
adc
shll
mov
mov
push
mov
test
lods
jl
fsubrs
hlt
push
sbb
clc
fidivl
sub
hlt
aam
mov
push
test
ds
imul
cmp
lret
bound
leave
xchg
mov
mov
mov
pusha
stos
push
xchg
iret
pusha
movsb
xchg
inc
mov
pop
nop
sub
nop
or
jle
pop
push
inc
inc
les
xchg
out
jmp
xchg
fwait
or
or
sub
lea
stos
mov
je
dec
mov
pop
adc
add
jae
hlt
xchg
mov
pop
out
aaa
or
jecxz
call
cmp
jmp
sbb
pop
lds
sbb
js
rclb
mov
cmpsl
jo
sub
and
jne
inc
or
inc
repnz
mov
push
outsl
icebp
adc
rcl
outsb
push
pop
mov
scas
hlt
sbb
cmp
jge
jo
daa
roll
sbb
clc
ja
in
outsb
mov
push
add
rolb
fstps
adc
lahf
adc
imul
xor
xchg
outsb
das
push
adc
icebp
inc
sbb
insl
fstl
sarl
adc
sbb
dec
and
nop
aam
mov
mov
into
jae
fcompl
xor
stos
hlt
sahf
fsubs
cmp
subl
bswap
cmpsl
adc
cld
adc
ljmp
adc
hlt
out
ljmp
out
push
dec
or
daa
pcmpeqb
or
sbb
jno
sub
insl
adc
push
xor
mov
adc
repz
pop
mov
push
add
jbe
xchg
dec
jb
daa
and
mov
push
aaa
sti
out
mov
sub
ja
xchg
inc
add
push
or
add
and
push
test
pop
bound
das
jmp
jecxz
xor
sub
push
in
pop
packssdw
jmp
jmp
mov
orl
arpl
fidivrs
add
cmp
or
and
inc
js
lds
es
out
add
dec
jle
or
bndldx
pop
and
out
adc
push
loopne
jne
jb
inc
inc
fs
mov
lds
fcomp
sbb
add
movsl
and
push
xchg
pop
sub
or
mov
mov
inc
aas
and
pop
pop
aas
push
rcrl
sbbl
cwtl
pop
jb
sbb
popf
sub
sbb
pusha
and
cs
ror
sbb
nop
cmp
int3
push
push
aam
mov
loopne
jo
or
or
sbb
dec
inc
xchg
or
fs
test
push
adc
jnp
sbb
mov
adc
xchg
adcl
nop
push
push
mov
mulb
mov
jl
sahf
or
mov
and
push
mov
in
xor
stos
xchg
sbb
jo
xchg
lods
jl
enter
enter
push
mov
jo
adc
push
and
jge
push
pop
popa
imul
inc
out
cmp
js
test
sbbl
xchg
push
aaa
cmp
rcll
or
adc
enter
cmp
jge
test
iret
or
in
rcrl
fistl
mov
adc
sbb
inc
push
jg
push
mov
mov
in
fs
push
push
xor
dec
jnp
cs
cs
pop
dec
test
ja
cmp
jbe
jno
or
inc
pop
dec
cmovne
mov
mov
gs
ficompl
inc
mov
lret
lods
dec
movsl
aaa
repz
push
add
sbb
loop
call
or
pop
adc
cmp
jg
leave
cltd
mov
sbb
and
and
cld
ret
fisubrl
mov
push
inc
mov
add
mov
jnp
pop
jl
push
inc
cmp
sbb
pop
add
das
mov
test
outsl
sub
test
iret
push
aaa
jo
js
outsb
data16
movsb
je
adc
test
pop
ficomps
sbb
daa
out
jbe
divl
lret
adc
mov
arpl
inc
in
in
sub
jae
add
sbb
cmp
mov
jns
sub
pop
neg
inc
push
imul
daa
xchg
out
mov
out
outsl
pop
or
std
pop
in
dec
out
fstpl
jle
add
jne
ds
pextrw
sub
ret
out
push
pop
out
int3
rcl
sbb
lock
and
pop
aaa
adc
inc
xchg
jnp
push
cmpsl
jl
outsl
mov
hlt
gs
stos
cs
je
out
ret
ret
sub
cmp
outsb
lods
sti
mov
mov
pop
mov
jl
in
jl
xchg
fwait
sahf
rcrb
es
lods
and
pop
and
pop
in
aam
inc
sti
pop
test
or
ljmp
adc
dec
dec
rorb
bound
adc
ret
xor
pop
lock
inc
insb
les
or
mov
sbb
xor
lock
or
sub
xor
out
inc
cmpsl
and
ss
mov
jle
lahf
jns
sub
lea
push
shll
mov
dec
sub
sbb
hlt
push
out
out
xor
xchg
hlt
mov
xor
push
test
movsl
fs
jmp
push
and
push
jp
add
rcrl
ret
adc
inc
mov
jmp
jle
call
push
add
in
cmp
add
add
in
xchg
dec
push
add
xchg
dec
sub
push
push
and
push
push
nopl
xchg
in
dec
loop
adc
ret
pop
adc
xor
mov
lcall
mov
dec
das
push
dec
lea
and
sub
insb
cmp
jo
fwait
push
psubd
mov
pop
test
xchg
scas
int3
lods
dec
rcll
pop
xchg
dec
xor
in
movsl
or
xchg
dec
mov
stos
ljmp
pop
cld
dec
fmuls
sub
pop
mov
lcall
mov
adc
ret
bound
scas
add
call
xor
pop
sbb
addb
into
in
sbb
or
sbb
jge
xor
les
jne
xchg
inc
rol
into
mov
and
xchg
sbb
jb
xchg
push
test
in
add
rcl
in
jno
adc
mov
inc
pop
or
xor
idivl
pushf
stos
mov
xchg
push
mov
add
push
popa
adc
loope
jmp
jg
scas
pop
push
adc
inc
inc
push
lea
push
mov
or
push
and
xor
push
push
loop
push
push
pop
and
cmovne
or
mov
bound
xorl
inc
fwait
sub
inc
call
push
push
fsubr
or
sbb
adc
xchg
fcompl
in
or
xchg
and
dec
and
or
js
mov
mov
outsl
add
loope
jbe
push
mov
cmp
xor
cmp
movsl
and
push
cltd
xchg
push
jp
xor
mov
jns
push
or
jb
jge
cltd
sub
int3
lods
out
cmp
ds
ja
mov
sub
mov
adc
or
add
pop
mov
leave
xor
scas
sub
loop
pop
pop
je
jnp
push
push
bnd
inc
mov
dec
daa
dec
or
pop
pop
stos
lret
jp
ljmp
ds
pop
pop
jno
incl
repnz
push
je
sub
push
mov
test
ja
xchg
or
inc
fwait
std
inc
insl
mov
push
ja
outsb
xor
and
inc
push
fucomp
nop
scas
jno
movsb
aaa
mov
shlb
sbb
cld
js
dec
outsb
jg
cwtl
cltd
call
xor
dec
fbld
aaa
aaa
push
ljmp
pop
ret
mov
sbb
and
daa
push
push
gs
cltd
ss
test
es
aas
subb
outsb
dec
pcmpeqw
popa
in
outsl
cmp
push
gs
in
testl
jle
dec
in
data16
lahf
nop
leave
cmp
jo
jmp
cmc
fs
push
shl
dec
jmp
leave
lods
dec
ss
push
mov
aaa
pop
cmp
shll
nop
bound
cmp
xchg
add
push
call
add
pusha
push
lds
adc
push
dec
test
loope
aam
cmp
inc
lret
or
imul
xchg
mov
je
fdiv
cmpl
mov
les
push
pop
aam
js
push
lods
pop
pop
cwtl
xchg
out
cmp
imul
mov
jl
jno
sub
pop
or
jmp
dec
and
jne
add
inc
test
aad
ret
sub
jae
fdivrs
je
ds
lret
into
loop
mov
aas
in
test
out
jmp
jl
xor
leave
adc
mov
sub
xor
xchg
and
xor
or
cmp
inc
sarb
push
push
jae
adc
int
insl
sahf
shlb
fs
adc
mov
push
imul
testl
bound
inc
sub
dec
cmpsl
lods
xor
xchg
loopne
icebp
test
add
je
out
xchg
add
repz
jb
data16
jno
push
fcomps
xchg
repnz
sbb
ja
xchg
push
and
adc
enter
es
arpl
lock
fwait
push
jle
cs
inc
es
inc
sbb
leave
mov
push
and
sub
xchg
repnz
jb
dec
inc
daa
lock
xchg
adc
enter
out
stos
push
aaa
hlt
ljmp
aad
inc
cli
and
xchg
in
add
fnsave
es
jbe
jmp
pushf
loopne
nop
sbb
push
mov
pop
aam
adc
enter
lret
push
aaa
fsubr
js
js
fsubs
inc
into
and
scas
sarl
push
mov
push
aam
fsubs
jbe
nop
inc
out
and
xchg
mov
or
mov
enter
enter
movsb
push
sar
int
mov
xor
inc
mov
mov
lret
pop
loop
sti
lret
xchg
xor
xchg
sbb
dec
stc
leave
xchg
jg
mov
imul
sub
pusha
xor
sbb
out
mov
mov
insb
cmp
and
daa
inc
or
scas
cltd
cs
xor
mov
lds
in
jmp
jno
inc
xchg
aaa
mov
jns
aam
mov
popf
jns
xor
mov
or
es
cmp
fisubrs
mov
adc
dec
test
lret
cmp
les
sub
push
mov
adc
push
jmp
xchg
add
inc
jne
or
xor
in
insb
sub
mov
daa
mov
xchg
push
mov
clc
mov
push
or
mov
lock
out
add
cmpb
aaa
push
repz
sub
inc
stc
or
pop
adc
jo
pop
xchg
aaa
test
mov
cmp
dec
push
push
subb
fcoml
xchg
jnp
lods
xchg
mov
ljmp
push
push
pop
addr16
jno
mov
inc
nop
ret
adc
sbb
pushf
cmpl
jnp
arpl
cltd
mov
test
add
lea
cli
div
pop
out
sbb
call
sub
js
xor
xor
loop
cli
out
sbb
mov
and
xchg
or
or
dec
mov
and
xchg
and
adc
jo
daa
push
das
int3
in
lods
inc
mov
fsubrl
push
leave
mov
sbb
dec
jne
and
mov
filds
push
cmp
adc
je
push
jne
idivb
mov
lock
push
sahf
dec
jnp
sub
gs
xor
dec
and
mov
jecxz
arpl
sub
adc
ret
pushf
sub
xchg
xchg
inc
jg
add
mov
xor
push
mov
cmp
cmp
xchg
cs
xchg
cmp
pop
lcall
sbb
mov
xor
int3
jb
cmp
adc
xchg
adc
mov
aaa
and
and
cmpsb
jno
cmpxchg
push
cmp
xchg
inc
and
pop
bound
rolb
dec
sub
mov
sub
ds
ja
scas
sbb
adc
call
fdivl
loopne
incb
sbb
dec
incb
mov
aaa
mov
add
outsl
sub
daa
cs
ss
aad
js
or
int3
imul
and
sbb
imul
jmp
icebp
pop
xorl
push
cmpb
adc
inc
movsl
test
mov
push
enter
ret
cltd
enter
add
mov
dec
shlb
les
or
scas
aas
inc
push
jns
sub
ret
mov
and
cwtl
lret
jnp
pushf
or
out
and
sbb
mov
mov
push
add
pusha
push
mov
inc
inc
mov
inc
les
push
jg
push
jne
gs
dec
jns
pop
fildll
xor
sbb
adc
es
cli
xor
arpl
mov
sub
popa
addr16
jg
push
and
push
jg
jnp
ja
or
imul
add
mov
andb
je
arpl
push
mov
jae
push
in
pusha
xor
sbb
insb
cld
andl
push
mov
aaa
push
dec
in
xor
push
cmp
cmp
sarb
inc
dec
cmp
mov
cs
add
fcompl
push
xor
push
xor
dec
imul
push
pop
or
jns
mov
mov
dec
loop
dec
jbe
inc
push
dec
pusha
test
pusha
outsl
push
push
dec
xor
nop
xchg
ret
pop
inc
dec
xchg
pop
testl
insb
ljmp
lds
aas
stos
jo
mov
mov
sbb
lods
jp
adc
enter
adc
add
aam
stos
mov
outsb
stos
xchg
dec
cmpsb
and
scas
pop
inc
imul
dec
mov
fistps
dec
not
dec
sbb
dec
or
push
jne
popf
and
mov
mov
scas
clc
stos
inc
test
mov
fsubrl
movsl
inc
sbb
sbb
andb
out
fs
popf
inc
push
subb
jae
xor
pop
shll
popf
gs
pop
push
ds
push
xchg
xor
cmp
or
das
xlat
insl
or
dec
xchg
and
jl
pop
jb,pt
jne
jbe
in
test
mov
shrl
dec
pop
push
mov
jg
pop
cwtl
adc
or
pop
xor
iret
mov
xor
daa
sub
test
mov
adc
cs
testl
out
sub
fadd
orl
dec
xor
push
daa
mov
xor
aad
adc
push
fwait
imul
mov
or
fidivrs
pop
setae
add
xchg
or
lods
adc
pop
movsb
outsb
inc
push
sbb
dec
lds
aad
gs
mov
push
add
cmp
adc
fldcw
inc
shlb
call
dec
or
jbe
cmp
inc
test
aas
ja
xchg
cmp
enter
mov
and
icebp
loopne
repz
cmp
or
xchg
cli
mov
or
movsb
and
mov
xchg
shll
jbe
and
cmpl
inc
jb
inc
or
dec
outsl
js
fsts
inc
sbb
push
xchg
xor
xlat
jle
bound
lods
adc
and
sub
cld
push
jp
jmp
jno
lock
inc
dec
jo
or
mov
inc
adc
sub
push
scas
mov
jmp
xchg
cmp
and
pusha
aad
or
sarl
js
mov
mov
mov
jno
loop
xchg
test
push
jb
clc
push
sbbb
cmc
mov
and
push
out
outsb
xchg
ficoms
test
pop
and
bound
jns
sarb
jl
push
in
push
aad
lea
adc
addr16
push
js
push
xor
add
fisubrs
add
adc
pusha
push
push
push
or
inc
add
incl
push
inc
adc
pop
add
jo
cmpb
aad
xor
cmpsl
icebp
push
push
jl
sub
dec
psubsw
dec
sub
and
dec
mov
mov
stos
je
cmp
mov
add
imul
test
js
sbb
push
stos
das
repnz
adc
gs
insl
add
cld
jnp
cmpsl
sub
pop
adc
sub
or
cmpps
xchg
pop
add
push
or
pop
clc
cs
cmp
in
jbe
xor
lods
icebp
push
aam
push
and
les
adc
sbb
lea
sbb
jl
pop
in
lahf
pop
inc
dec
hlt
inc
mov
inc
lock
push
or
test
adc
jle
xlat
adc
inc
mov
and
inc
fsubs
out
mov
push
inc
and
imul
insb
inc
inc
dec
add
sub
cmpsb
jmp
call
pop
jge
cmp
xor
add
push
pop
jne
stos
mov
or
push
or
or
sbb
mov
push
ret
pop
dec
add
cmp
or
gs
adc
out
and
adcl
loopne
mov
inc
insb
ljmp
mov
mov
out
mov
cmp
jne
mov
popa
flds
test
shll
and
mov
arpl
ljmp
cmp
sbb
jnp
mov
movsb
in
sbb
enter
mov
xchg
lea
std
push
pop
or
nop
notb
ja
push
xorb
pop
dec
cmp
mov
mov
or
mov
in
aas
mov
mov
inc
mov
movsl
cmp
mov
pop
push
sub
push
cmp
add
ret
pusha
sub
aaa
ret
sub
xchg
mov
rcr
add
daa
jl
dec
iret
mov
out
je
add
syscall
dec
daa
test
cmp
setno
mov
pop
in
sub
mov
mov
fdivrs
push
cmpsl
punpckhbw
jb
fisubrs
out
aaa
hlt
lods
call
in
inc
dec
ret
test
test
mov
mov
fs
mov
shll
jg
mov
enter
xchg
mov
xchg
scas
fadd
or
fisubrl
push
js
pop
and
push
jnp
adc
lds
cld
mov
or
scas
js
xor
sub
mov
adc
xor
lock
dec
mov
jecxz
pusha
adc
outsl
mov
cmp
pop
mov
lea
iret
xchg
xchg
inc
dec
scas
idiv
inc
decb
and
and
gs
inc
dec
jo
fimuls
inc
movsb
sbb
jmp
mov
push
xchg
jg
jmp
jno
stc
dec
push
jne
or
repnz
mov
mov
push
pop
lods
pop
fnsave
xchg
sbb
xchg
movsb
fbld
sti
xlat
cs
xor
xor
or
inc
xchg
popf
dec
adc
test
out
and
push
or
lcall
jg
jo
sub
jb
mov
inc
ret
xchg
cli
push
sub
sbb
push
cmp
leave
xchg
aaa
mov
cmp
lret
in
sbb
jg
adcl
sub
fists
adc
cmp
gs
xor
in
pop
pop
mov
ja
mov
scas
xchg
fsubl
inc
mov
aas
js
mov
rcll
cmp
and
and
push
cld
sub
ljmp
xor
nop
addr16
xchg
or
mov
push
mov
jmp
dec
sub
push
and
push
jmp
orl
and
cs
aaa
aaa
inc
adc
mov
adc
mov
mov
adc
mov
aad
mov
in
adc
arpl
add
xchg
and
xchg
mov
sub
out
push
push
jecxz
call
sub
mov
xor
out
test
mov
into
jp
xchg
outsl
out
add
movsl
xchg
repnz
jb
ds
cmpsl
inc
les
jae
test
inc
lea
jb
push
outsb
jl
jb
cmpsb
jge
cmp
test
pop
cmp
add
or
push
push
pop
xchg
fmull
mov
dec
pop
cwtl
dec
rorl
or
xor
cli
push
leave
dec
movsl
pop
pop
sbb
cmp
es
xor
xor
cmp
aas
ja
sbb
add
sub
push
mov
and
xlat
mov
xchg
shl
or
jne
test
je
fldcw
je
cmovg
lea
jl
xor
stc
and
xchg
outsb
inc
bound
adc
xchg
testb
or
jmp
ret
out
lcall
add
repz
or
mov
and
aaa
inc
add
arpl
mov
sub
hlt
dec
mov
clc
ss
xchg
sub
xorb
and
jno
fadds
and
inc
repz
and
sbb
dec
lea
push
push
add
sbb
xchg
out
pop
iret
jl
imul
popa
aam
out
and
xchg
jb
rorl
loopne
sahf
out
jle
jl
inc
push
inc
mov
jge
mov
ds
pop
dec
pop
add
mov
adc
enter
jb
jbe
add
xchg
int
cmp
bound
mov
or
adc
and
or
sti
jecxz
xor
addl
sub
lds
xchg
jo
mov
arpl
xor
into
add
mov
mov
shll
or
or
pop
cmpsb
jno
rorl
sbb
xor
sbb
enter
pusha
push
add
hlt
jne
push
mov
push
xor
mov
cmp
push
mov
fsubrs
inc
pop
ret
xchg
and
sbb
jle
inc
mov
xchg
push
cwtl
es
push
aaa
sbb
and
cmp
jo
mov
xchg
mov
sti
lcall
and
sub
repz
ret
jl
and
aas
mov
pop
mov
popf
fcoml
mov
sbb
mov
stc
test
xchg
adc
test
push
mov
lahf
push
aaa
cmp
call
push
push
mov
add
pop
negb
inc
adc
lcall
push
cmpsb
mov
cltd
gs
sti
popa
jecxz
scas
ja
sbb
insl
xchg
in
stos
clc
push
push
push
sub
pop
xor
daa
sbb
test
jecxz
xor
addr16
pusha
adc
inc
rcrb
or
jno
mov
add
cmpsb
pop
outsl
cmp
aaa
adcb
push
mov
push
sbb
out
push
inc
xchg
and
aaa
ret
imul
dec
loopne
mov
adc
fs
repz
push
push
mov
sahf
xchg
pop
mov
in
xlat
movsl
xor
scas
adcl
call
and
movsl
dec
and
push
dec
in
dec
mov
or
sets
adc
test
fucomip
push
mov
cmp
imul
xor
shll
sarl
seta
jg
pop
outsb
shlb
fcmovnb
push
js
push
ret
les
pop
pop
loope
sub
sbb
ja
mov
dec
add
xchg
pop
cwtl
push
push
xor
jae
or
xchg
sub
lods
dec
leave
arpl
mov
mov
roll
sbb
test
sbb
test
jns
in
xchg
adc
mov
shlb
sbb
mov
pop
xchg
cmpsl
adc
andl
pop
jmp
in
sub
or
mov
test
cmpsl
add
or
test
mov
push
adc
add
ss
push
lods
pop
mov
dec
xchg
imul
xchg
int
pop
mov
pop
sti
jmp
pushf
in
cwtl
adc
icebp
inc
cltd
sub
push
add
inc
fwait
sbbb
xchg
or
lahf
jne
nop
push
in
ja
mov
xchg
xor
push
pop
adc
and
insb
aam
call
add
cltd
jl
xchg
inc
cli
push
js
add
xor
jne
addr16
sbb
and
cmp
pop
and
nop
jno,pt
adc
cmc
or
les
clc
mov
dec
test
mov
adc
cld
adc
shll
xchg
pop
jae
push
sbb
idivl
push
add
movsb
lcall
push
cmp
scas
sub
test
push
ljmp
mov
mov
scas
fidivl
mov
mov
mov
fiadds
das
cmp
outsb
stos
or
and
push
cmc
outsl
inc
pushf
popf
cmp
cs
cmp
pusha
sbb
and
ljmp
mov
ficoml
cmp
sti
in
test
cmpsl
ret
shl
aas
call
push
loope
add
pusha
aaa
lds
movsb
mov
lcall
stc
xor
ss
pop
dec
xchg
stos
leave
cmp
push
xlat
repz
daa
pushf
pop
aad
in
outsb
sub
pusha
push
es
sub
fst
add
mov
push
outsb
outsb
pop
xor
lods
pusha
sub
xchg
mov
int
inc
sub
sbb
cmp
call
movaps
sbb
loopne
push
mov
lcall
insb
sub
call
add
or
xor
inc
insb
and
stos
loop
push
sbb
xchg
movsb
mov
imul
dec
push
lret
cmpsb
push
lea
imul
rorb
pop
shll
inc
mov
xor
pop
push
push
outsl
or
mov
inc
inc
cmp
mov
jp
shrl
lahf
mov
faddp
adcl
les
push
lret
jbe
adc
push
push
loop,pn
inc
shl
sub
adc
loop
xchg
pop
inc
xor
iret
push
xchg
insl
inc
lea
inc
fadd
add
adc
inc
cmc
inc
add
and
inc
scas
and
pop
cmp
aaa
inc
fwait
push
roll
andb
mov
cmp
aam
jne
into
push
xchg
sub
cmp
adc
inc
addr16
sub
add
jecxz
push
pop
insb
pop
push
into
adc
fbld
mov
mov
mov
push
pop
adcb
mov
in
inc
cmp
mov
push
pop
inc
ds
rcll
cmp
mov
imul
inc
test
fmull
int3
sbb
ror
cmp
mov
push
sbb
dec
inc
adc
push
cwtl
sub
mov
cmpsl
sti
aam
rorl
dec
pop
aam
cs
xor
sbb
pop
pop
out
or
sub
mov
mov
xchg
sahf
fldenv
mov
push
out
mov
xor
or
jo
ret
in
dec
or
test
push
adc
and
push
add
adc
push
xor
xor
push
in
jo
dec
cmc
xchg
mov
dec
int3
mov
sub
addr16
pop
push
fwait
inc
inc
packssdw
pop
ljmp
pop
sub
xchg
push
dec
fcmovne
inc
or
pop
out
imul
adc
dec
stos
pop
cmp
mov
dec
jmp
pop
insl
push
mov
ss
cs
jl
icebp
cwtl
push
je
cmpsl
cwtl
inc
inc
rcll
xor
arpl
xchg
lcall
jb
add
call
ss
add
test
arpl
inc
add
xchg
cmp
push
dec
in
dec
or
dec
cmpsl
jnp
adc
aad
flds
out
pop
add
pop
clc
push
mov
sahf
iret
and
leave
sub
icebp
pushf
fildll
out
inc
add
cmp
or
dec
into
inc
and
xor
jmp
push
lahf
dec
fwait
sub
jp
sbb
ror
jb
push
jp
repz
mov
dec
in
mov
jae
jp
dec
inc
pop
jmp
xor
push
addr16
dec
jl
pop
mov
adc
cmp
and
and
jnp
jnp
push
rorl
push
cmp
scas
and
pop
mov
xchg
sbb
push
mov
mov
sbb
push
adc
stc
daa
and
pop
gs
repnz
adc
and
test
inc
xchg
cwtl
int
dec
outsl
jo
or
lcall
jae
push
hlt
cmp
cmpsb
fs
cwtl
sub
push
cmp
lods
cmp
mov
mov
sub
in
inc
sarb
cmp
test
addr16
push
inc
jge
pushf
lods
pop
je
fdivp
pop
cltd
xor
popf
aam
pop
pushf
cwtl
lea
or
pop
imul
ds
and
inc
mov
xor
lretw
and
and
imul
push
negl
or
push
add
push
movsb
sub
add
and
int
mov
xor
push
xchg
cmc
aam
and
xor
pop
popa
mov
pop
inc
shlb
xchg
fiadds
shlb
fldt
cmova
xor
cmp
pop
fsubl
xchg
mov
rcl
push
cmp
ror
push
cmp
clc
add
pop
inc
mov
call
xor
ret
xchg
gs
imull
lock
mov
es
jl
jge
adcl
mov
pop
daa
out
test
xor
lods
sarl
adc
mov
pusha
mov
inc
inc
orb
mov
pop
dec
out
sub
pop
push
mov
push
sbb
jl
or
sbb
popa
pop
mull
and
aam
pop
mov
inc
dec
jae
or
in
inc
xchg
xchg
in
sub
daa
pop
adc
test
push
aaa
mov
stos
mov
mov
dec
and
xchg
in
sbb
push
leave
insb
adc
push
pop
mov
push
sbb
sbb
and
pop
push
or
push
cmpsl
movsb
sbb
testb
aaa
outsb
push
and
inc
sbb
mov
imul
push
or
shrb
adc
sub
and
dec
dec
push
and
sbb
push
enter
jg
pop
push
add
mov
mov
cbtw
push
jne
add
xchg
test
xchg
cltd
pop
lock
mov
cmpsl
and
and
jb
imul
pop
cld
cmp
cmp
nop
sub
les
addr16
sub
imul
sqrtps
or
push
xchg
pop
ja
fwait
push
pop
add
sbb
int
sbb
xor
je
lea
fdivl
adc
lock
sub
adc
pop
mov
data16
int
dec
ljmp
adc
movsb
rorb
dec
mov
inc
and
repnz
dec
js
pop
dec
inc
cmc
decl
or
and
icebp
fisubrl
mov
xlat
and
xchg
xchg
mov
xlat
fildl
pop
inc
push
aam
mov
arpl
pop
xchg
aad
cmp
ljmp
dec
push
sub
aam
fistpl
ret
pop
fcmovnb
adc
pop
mov
clc
aam
xor
sbb
call
out
pop
or
cmp
ja
stos
sub
lret
push
and
test
jae
sbb
xchg
or
gs
and
dec
mov
xor
jmp
fwait
lds
gs
leave
pop
mov
sbb
decl
xor
cmpsl
rcr
mov
jo
loope
pop
inc
ljmp
push
adc
imul
hlt
xor
cld
and
je
push
aaa
push
daa
inc
pushf
cld
sbb
pop
or
negb
data16
and
mov
rol
adc
loope
outsb
jns
test
popa
mov
pop
sub
flds
aas
push
pop
and
jae
inc
jbe
insb
fwait
jge
or
movsl
and
in
bnd
sbb
xor
fdivl
pushf
jle
outsb
pop
sub
test
aad
iret
add
sar
dec
push
mov
movsl
sbb
adc
insl
mov
inc
and
adc
sbb
leave
jge
ja
mov
out
out
out
sbb
mov
and
mov
xor
nop
push
cmpsb
call
cmp
xlat
or
ror
sbb
xchg
sbb
inc
in
fs
adc
shrb
js
pop
inc
ja
sbb
aas
push
dec
fwait
test
push
jnp
push
mov
jge
ja
std
or
xor
mov
repnz
mov
push
bound
out
pop
xchg
shll
popf
adc
jnp
test
jns
xor
lahf
outsb
push
mov
out
bound
and
adc
aaa
and
fs
mov
xchg
sbb
loope
jg
gs
jbe
addl
outsl
bound
mov
and
dec
xchg
ret
insb
and
sbb
pop
lds
jno
dec
punpcklbw
cmpsl
jg
or
jmp
les
push
push
loope
push
js
adc
sub
inc
pop
nop
inc
sbb
ja
shrl
js
std
inc
js
iret
dec
sub
sbb
leave
out
mov
add
mov
push
or
out
testl
popa
mov
mov
bound
dec
push
mov
jbe
inc
pop
lea
adc
movsb
pop
cltd
in
jb
jae
xchg
add
sbb
aaa
jp
out
fdiv
xor
adc
punpckhdq
bound
mov
jl
lcall
test
xor
mov
dec
jne
out
mov
bound
xchg
jae
jle
sbb
repz
push
into
hlt
xchg
push
arpl
jno
andb
and
out
xor
mov
jb
push
push
lcall
jno
adc
sbb
es
fcoms
xchg
jbe
daa
dec
pop
xlat
stos
inc
and
bound
sub
add
pop
push
arpl
push
dec
sub
xor
decb
cmpsb
push
jns
push
jae
insl
and
popf
jl
mov
inc
push
test
dec
fisubrl
sbb
xor
mov
jnp
mov
jbe
ljmp
mov
pop
scas
imul
push
xor
mov
jbe
mov
popf
xchg
pop
xor
mov
bound
dec
bound
fs
sub
lock
ljmp
cwtl
and
adc
xor
ljmp
pop
add
pop
pop
popa
lcall
pop
xchg
jae
xor
pop
adc
pop
das
lahf
inc
push
xchg
outsl
jecxz
imul
iret
in
push
aaa
pop
or
and
popf
jno
mov
inc
dec
test
inc
fisubrl
sbb
xor
mov
jo
mov
jns
icebp
pop
nop
pop
in
fldt
repnz
pop
mov
fwait
mov
ja
stc
fwait
gs
push
xor
mov
jbe
mov
popf
pop
or
in
aaa
popa
adc
popa
popa
aaa
sub
std
nop
es
sbb
and
pop
popa
cmp
popa
mov
insl
push
mov
ss
lcall
or
jp
or
insl
out
push
adc
sahf
adc
mov
add
rolb
adc
ss
jbe
je
add
mov
mov
filds
cwtl
cmpsb
xorl
in
or
outsb
into
filds
xchg
fsts
xor
cmc
xor
imul
je
add
cwtl
loop
jns
popf
loope
pop
pop
push
add
dec
inc
xchg
pop
setb
enter
sti
in
push
sbb
outsl
jp
and
outsb
jg
orb
fisubs
mov
and
pop
jo
popf
es
sbbl
pop
xchg
mov
or
xor
jg
mov
pop
clc
out
cmp
and
xor
push
pop
sub
dec
mov
aam
add
dec
dec
dec
and
inc
xor
inc
aaa
mov
mov
outsb
add
mov
jne
mov
or
test
clc
push
lret
and
mov
cltd
push
outsl
jbe
mov
pop
fs
imul
jp
lahf
es
mov
jns
movups
jnp
inc
push
dec
and
movsl
and
mov
test
cmp
jle
push
or
imul
inc
mov
lock
mov
mov
imul
ja
les
pop
icebp
cmpsb
xchg
sub
lds
adc
mov
inc
push
insl
xor
sbb
jo
jp
ja
sbbl
xchg
or
jle
and
dec
mov
xor
cltd
insb
mov
or
jle
jg
mov
jo
ret
outsb
popf
pop
mov
sub
sbb
mov
fisttpl
arpl
inc
and
mov
addb
setb
bswap
dec
sbb
jo
lods
push
xchg
pop
push
fwait
cmp
rcll
inc
psraw
test
repz
adc
xchg
sub
pop
decb
jle
jg
cmc
or
movsl
mov
or
mov
push
adc
dec
clc
dec
es
aam
sbb
push
sub
lds
inc
jnp
sub
cmpsl
sahf
lea
mov
data16
mov
and
jge
les
mov
dec
insb
mov
fwait
cmp
cli
push
out
icebp
xchg
push
dec
xchg
outsb
add
mov
push
adc
ss
sbb
adc
jae
into
cs
pop
daa
and
into
xchg
sbb
int3
add
ljmp
stc
repz
and
xor
data16
mov
add
sbb
bound
jae
cmpsl
movsb
sub
mov
lods
push
mov
lds
sub
adc
dec
stos
fcmovnb
push
mov
pop
xchg
cmp
ja
inc
add
pop
sub
adc
adc
push
jecxz
cmp
sbb
mov
jns
inc
lds
cmp
fwait
mov
mov
pop
xchg
pop
cmpsb
aam
add
aaa
cmp
lret
cmp
pop
push
jle
ret
xchg
cmp
or
test
mov
or
ret
and
inc
scas
insb
cs
out
dec
lea
nop
scas
pop
xor
js
push
xchg
mov
jnp
adc
test
mov
push
mov
in
mov
mov
inc
ds
imul
sahf
xorl
pop
pop
mov
mov
fs
test
sbb
fwait
push
mov
mov
cwtl
and
push
xchg
pop
daa
bnd
push
repnz
xor
ds
insb
and
lcall
xor
js
push
movsb
jb
dec
cmp
in
add
xor
int3
lcall
sahf
sub
sub
addr16
pop
or
and
test
inc
repz
jns
inc
xorl
mov
jge
jge
xchg
jg
fidivs
mov
cld
lds
inc
fldcw
cmp
repz
xlat
rcr
dec
mov
cwtl
add
cmp
sub
outsb
or
dec
push
cmp
jg
adc
test
jne
mov
adc
jae
jno
pusha
rcl
lea
sbb
push
repz
push
pop
and
jno
pop
mov
and
add
sbb
push
push
fs
gs
push
lods
aas
pop
xor
mov
pop
and
test
stc
cmp
sbb
sub
std
imul
adc
jl
mov
fnsave
sub
dec
cmp
or
repz
or
push
sti
mov
movsb
sub
es
mov
icebp
add
xchg
jle
push
sub
sub
test
pop
jae
push
fwait
xchg
push
push
les
mov
sbb
pop
mov
add
inc
lcall
mov
push
mov
jl
insb
test
mov
sbb
in
mov
scas
bound
or
jle
out
sbb
dec
clc
jnp
call
mov
mov
adc
dec
loopne
dec
pop
sbb
inc
mov
sahf
pop
je
ds
ljmp
int3
repnz
adc
sbb
xchg
push
xchg
lds
and
test
lock
or
loopne,pt
or
test
cmp
dec
test
fcompl
sub
insl
imul
fwait
inc
sub
test
js
jbe
dec
adc
or
mov
sbb
sbb
and
fs
push
lret
fcmove
mov
ror
int
fbld
fmul
fisubl
ds
insb
xlat
repnz
adc
ficoml
xor
je
pop
dec
stos
jg
inc
in
add
ss
or
int
add
sbb
sbb
sbb
jnp
mov
inc
push
mov
push
or
fwait
ds
push
addb
fimuls
pop
add
pop
or
sbb
jle
or
test
xor
test
mov
mov
push
mov
dec
mov
add
add
jae
inc
or
xchg
push
bound
repz
push
push
xor
ds
dec
lea
adc
js
movb
or
sbb
push
pusha
pop
xchg
jl
inc
arpl
or
cmp
xor
shr
mov
lods
add
test
add
fdivs
fmull
xor
int3
mov
ret
dec
fmuls
pop
xor
pop
mov
push
sub
arpl
subb
sbb
popf
imul
aam
fadds
shll
push
push
cwtl
iret
insl
jae
add
pop
and
jmp
xor
lahf
adc
sub
xchg
sbb
jle
or
test
xor
mov
dec
mov
xor
hlt
cwtl
xchg
jecxz
add
les
jmp
popf
mov
xor
bound
insl
dec
lods
inc
test
xchg
xor
int3
mov
test
push
pop
inc
mov
loop
xchg
pop
lcall
jp
adc
jle
adc
mov
push
add
ja
sbb
push
or
imul
sbb
addr16
or
cmpsl
rolb
adc
push
xchg
push
pop
iret
rolb
jns
add
out
lods
push
jae
insl
xchg
mov
arpl
in
mov
jo
dec
mov
add
fadds
mov
iret
jp
cmp
js
add
push
mov
sbb
and
mov
jge
shlb
insl
inc
jge
add
ret
call
xchg
push
loop
push
pop
mov
stc
je
xchg
fbld
dec
dec
add
jl
push
cmp
jecxz
ja
fwait
int3
pop
outsb
sub
dec
sahf
inc
jbe
or
addr16
shll
pop
inc
inc
ret
dec
jmp
ja
jge
jo
mov
rolb
push
jp
lods
fistpll
stc
stos
test
cli
into
add
jne
fstpt
iret
sbb
jp
dec
cmp
cmp
je,pt
inc
test
xlat
ficoms
sbb
push
mov
pop
les
mov
inc
mov
push
mov
movsb
add
or
and
jl
sub
jle
roll
or
cmp
push
inc
cmpsb
jbe
jne
add
cs
stc
lea
cmpsl
add
mov
add
in
add
xor
mov
inc
js
hlt
sets
loope
add
push
sub
push
xchg
jp
jb
jnp
jne
mov
inc
outsl
mov
fsubs
popa
decl
aam
in
cmpl
insl
mov
jb
push
push
mov
mov
add
jmp
test
jp
sahf
mov
sbb
pop
sub
mov
jnp
in
pop
sbb
sub
push
add
sarb
movsl
adc
xor
sbb
add
aad
sti
loop
test
into
jmp
adc
push
add
addr16
ja
sub
adc
push
ror
push
cmpsl
cmp
jne
push
push
inc
js
push
mov
nop
add
or
and
push
jns
jae
jo
in
ja
mov
out
fisubl
inc
sub
stos
mov
lods
lods
movl
test
cmp
es
lods
les
scas
add
loopne
hlt
fnstsw
les
scas
ljmp
pop
fistl
xchg
push
jp
jne
cmp
inc
pop
jl
ja
dec
push
add
sahf
popf
adc
jae
xor
jge
imul
out
xchg
insb
jp
pop
sbb
inc
data16
lret
jno
cli
jno
xor
sbb
in
outsb
pusha
pop
scas
add
in
rcrl
adc
dec
lret
arpl
push
stc
mov
insl
aad
mov
call
push
jae
add
push
mov
pop
cmc
sbb
mov
mov
add
fidivrl
push
jne
loopne
jns
jbe
jle
aad
xchg
cmp
push
addr16
jge
imul
iret
pusha
xorl
mov
hlt
insb
jp
xorl
adc
mov
pop
add
lods
rcll
mov
add
add
mov
cmpsl
push
sti
lods
ret
stos
mov
add
fnstcw
sbb
fimuls
xchg
pop
bnd
out
jl
test
test
push
xor
arpl
add
xchg
mov
push
out
sub
add
fwait
cwtl
call
in
jmp
jl
rcll
cld
leave
fstl
insb
adc
int3
sbb
pop
xor
or
inc
int
lock
mov
add
into
inc
push
jo
jno
outsl
adc
adc
jge
sbb
push
push
push
ja
inc
xchg
aam
leave
add
gs
addr16
jp
jbe
aaa
inc
jg
mov
dec
jl
aam
push
pop
lods
fnstenv
movsl
inc
out
inc
fsubs
push
mov
mov
movsb
inc
xchg
repz
or
in
pop
mov
mov
leave
push
mov
into
and
cmp
add
xlat
fldt
jp
iret
daa
push
jp
mov
add
add
das
adc
mov
sbb
or
les
add
jp
xor
jmp
mov
push
push
mov
cmp
test
loopne
sub
mov
and
or
inc
sahf
or
lret
dec
cmp
nop
pop
or
in
orl
aad
mov
fimuls
test
and
jle
jbe
test
adc
mov
adc
dec
call
test
inc
call
xchg
mulb
mov
mov
xchg
jbe
data16
adc
jl
test
push
inc
fnstsw
xchg
mov
add
dec
sbb
cmc
sbb
test
ds
sub
mov
push
movsb
arpl
adc
repz
sbb
dec
les
data16
mov
cwtl
push
hlt
mov
and
in
ds
aas
sbb
insl
enter
dec
add
adc
aaa
xchg
add
push
imul
dec
arpl
mov
nop
aad
arpl
shl
xor
out
bound
ljmp
icebp
scas
xor
mov
shlb
mov
pop
js
lds
and
and
sub
mov
push
popf
adc
pusha
mov
aaa
xorb
test
inc
xorb
or
pop
enter
adc
xor
int
out
dec
mov
fimuls
adc
inc
sub
adc
pop
pusha
dec
push
cwtl
cmpsb
insb
xor
movsb
fmulp
jae
inc
not
mov
push
sbb
fnstenv
pop
fs
push
dec
and
jge
aaa
punpckhdq
das
or
sbb
or
imul
xlat
add
adc
in
cwtl
inc
loope
adc
clc
and
sti
fmuls
es
sub
arpl
xor
fdivrl
sbb
loop
hlt
adc
cwtl
cmp
jmp
and
adc
rcrb
push
cmp
inc
inc
cltd
test
ljmp
sub
lock
clc
mov
sahf
or
lock
cwtl
or
xor
ds
add
lahf
xor
xor
pop
xchg
push
cwtl
enter
mov
lret
mov
xor
sbb
xchg
cli
and
push
add
imul
push
sub
push
enter
insb
fcoml
push
sub
sbb
lahf
shr
or
es
push
loopne
data16
mov
and
or
cmp
ret
jnp
nop
sbb
sbb
popf
pop
enter
in
repnz
inc
call
dec
out
repz
push
leave
js
pop
fstps
jl
jp
decb
push
mov
imul
loopne
jle
icebp
dec
add
or
and
dec
inc
xchg
pop
es
bound
pop
mov
xor
pop
or
inc
data16
push
xor
jo
mov
aam
xchg
add
pop
repnz
xor
or
adc
adc
xchg
repnz
int3
push
popf
ret
clc
jmp
push
pop
xor
cmp
dec
push
fwait
push
imul
pop
mov
xor
lock
pushf
cmpb
push
inc
or
pop
ds
int3
jae
xchg
mov
hlt
push
mov
adc
jle
pop
and
ss
ds
jp
cli
adc
xchg
mov
hlt
inc
orb
hlt
mov
xor
sub
or
mov
mov
enter
scas
in
imulb
out
insb
and
dec
inc
xchg
pop
es
bound
pop
mov
shr
sbb
sub
js
or
dec
inc
adc
mov
xor
adc
mov
cs
fbstp
inc
jns
addr16
push
jecxz
and
mov
dec
jne
sub
pop
xor
cmc
out
sbb
pop
scas
mov
mov
pop
mov
jbe
sbb
loopne
inc
nop
adc
jb
fistl
inc
out
imulb
jb
in
inc
outsb
jne
xchg
jnp
ss
cmp
mov
popa
das
pusha
xor
push
or
shlb
arpl
push
jo
mov
je
dec
mov
jne
add
sbb
jb
jge
inc
outsb
inc
hlt
movsl
inc
dec
aas
push
push
stos
shlb
pop
ljmp
and
mov
mov
cmp
inc
adc
pop
inc
dec
sub
insb
push
pop
jmp
mov
and
cld
or
jb
jb
shlb
ret
inc
sub
or
fwait
push
repz
out
sti
fcoml
mov
dec
fisubrs
lcall
notl
push
push
lret
jo
pop
jbe
iret
nop
cmp
jg
fs
test
notb
pop
cltd
aaa
test
push
imul
mov
dec
test
push
sbb
dec
or
insw
xor
call
or
or
aas
bound
lea
in
sbbl
ja
daa
test
adc
cs
mov
nop
je
enter
sbb
sbb
fwait
mov
push
into
jl
mov
mov
xchg
mov
mov
test
xchg
cli
mov
loope
xchg
fstpt
jns
bound
sti
ds
sub
fsub
in
cwtl
repz
insb
cmpsb
pop
in
adc
dec
ja
or
jo
add
pop
adc
repz
mov
arpl
jg
dec
and
mov
xor
mov
add
lret
push
pop
dec
je
mov
je
mov
sub
inc
pushf
mov
xor
pop
mov
int3
insb
test
pop
dec
test
push
shlb
dec
cmp
aad
push
imul
xchg
push
rcrl
push
dec
loop
mov
sub
ja
mov
cmc
fnstsw
call
cmp
dec
push
push
scas
ja
mov
push
sub
in
cmpsb
mov
inc
xlat
lret
jp
mov
xchg
aas
out
idivb
imul
xlat
pop
add
and
dec
mov
xchg
jno
mov
into
inc
insb
jg
shl
push
xor
inc
jbe
jae
stos
push
popf
clc
push
cld
mov
int
addr16
inc
pop
outsb
push
outsb
cs
push
loopne
repz
mov
or
inc
adc
sub
popa
or
inc
dec
xor
dec
dec
pop
jp
or
arpl
mov
push
js
sub
jns
out
xchg
dec
jmp
ljmp
movsl
bound
adc
imul
out
fstpl
pop
or
pop
je
cmp
xor
jo
popa
std
inc
or
sub
test
add
sub
xchg
cwtl
fimuls
stos
push
jecxz
dec
cmp
imul
repz
sarl
dec
xchg
jb
cmpl
out
dec
shlb
stos
jb
sub
adc
sub
pop
and
fisubrs
push
add
int
cmp
add
push
in
mov
loop
xchg
out
outsb
dec
push
dec
lcall
cs
jle
sbb
lret
push
sub
adc
and
dec
jo
test
pop
pusha
jne
cmp
xchg
mov
inc
cmp
inc
cmp
sahf
es
mov
gs
push
sub
sbb
sub
shlb
mov
inc
pushf
imul
lret
mov
lds
push
jb
cs
fists
cs
popa
cs
pop
pop
or
push
dec
pop
data16
pop
daa
stos
sbb
push
sahf
popf
sub
jne
or
push
mov
xor
cmp
fldl
fstpl
xchg
stc
xchg
add
out
insb
das
adc
test
inc
push
imul
ja
jo
push
std
inc
jno
mov
cltd
shrl
sbb
sbb
cld
and
mov
jg
push
xchg
adc
popa
sbb
xor
push
nop
cmc
insb
pop
jle
fisubl
xchg
outsb
or
pop
js
aas
lods
pop
popa
inc
subps
jle
add
push
and
xchg
sbb
sbb
and
inc
out
mov
pop
mov
pusha
mov
push
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
xchg
push
dec
or
push
pop
sbb
es
sub
ss
cmp
inc
pop
dec
xor
pop
xor
push
jbe
sahf
xor
pop
mov
xor
pop
fistpll
sbbl
ss
pushl
jbe
sbb
xor
pushf
iret
fwait
ja
mov
movl
sbbl
shl
sahf
aad
in
je
mov
add
cmp
pop
xchg
and
cmp
jbe
sbb
gs
add
mov
aam
scas
xchg
mov
xchg
lock
xchg
xchg
out
xchg
jne
or
inc
in
loopne
in
loopne
in
loopne
add
loop
push
sub
test
filds
add
repnz
sahf
and
das
sahf
cmp
inc
sahf
arpl
mov
inc
jno,pt
push
cmp
cmp
cmp
cmp
pop
dec
sbb
dec
jmp
dec
out
pop
pop
fadds
lcall
inc
or
pop
xor
cmp
add
xchg
jb
jbe
jb
jbe
sbb
xor
dec
xchg
pop
push
push
sbb
scas
leave
int3
int3
jbe
dec
xor
jb
pop
or
or
fmuls
in
out
or
or
dec
push
mov
mov
mov
out
mov
pop
xor
pop
add
btr
fisttps
ja
xchg
mov
fistpll
mov
fidivrs
lods
jb
aaa
dec
aaa
adc
jmp
or
daa
sahf
xor
push
sahf
push
adc
inc
or
xor
xor
xchg
xor
jb
sub
je
sub
xor
dec
std
inc
dec
das
jp
lcall
inc
xlat
pop
or
push
mov
out
subl
mov
or
jno
or
ss
xchg
cld
xchg
js
xor
and
jbe
adc
fimuls
dec
dec
or
or
jbe
jb
jbe
jb
jbe
jb
jbe
jb
jbe
jb
jbe
jb
jbe
jb
dec
subb
adc
cwtl
mov
pushf
jmp
jge
sbb
outsl
daa
xor
and
daa
je
sti
daa
nop
and
daa
mov
xor
inc
int
enter
repz
xchg
inc
lahf
pop
cwtl
cmp
mov
in
daa
mov
xor
sarl
sub
inc
jb
sub
inc
cmp
cmp
lahf
dec
rorl
dec
les
daa
xchg
xor
sti
out
sub
sbb
sbb
es
fildll
mov
fists
fbld
outsl
fists
mov
faddl
mov
fucomip
mov
ficomps
inc
jb
jbe
jb
jbe
dec
popf
xor
das
les
das
xlat
inc
in
das
clc
je
sub
xor
pop
push
xor
pop
ja
sbbb
lahf
pop
scas
xor
pop
into
xor
pop
fidivs
pop
out
xor
pop
cmp
sub
jmp
and
sbb
dec
jmp
bound
clc
leave
pushf
into
std
fmull
enter
mov
daa
int3
and
cli
xchg
inc
or
push
sahf
sbb
es
sub
ss
cmp
inc
call
pop
data16
jbe
jp
xchg
mov
cmp
out
mov
out
mov
out
mov
out
test
pop
xor
divb
sbb
lret
cmp
inc
cmp
mov
call
scas
and
or
sbb
push
pop
outsl
cmp
xor
inc
cmp
adc
cmp
xchg
cmp
loop
mov
sarb
cmpsb
sub
js
jbe
jb
jbe
jb
add
mov
adc
sbb
and
sub
or
push
or
and
cmp
repnz
cmp
ret
cmp
mov
mov
xor
xchg
push
xchg
bound
es
inc
xchg
push
mov
sbb
jbe
pop
xchg
push
sbb
daa
fisubs
stos
daa
ret
daa
lret
daa
repnz
icebp
mov
or
jg
push
mov
dec
cmp
push
je
pop
dec
sub
xor
pop
pushf
xor
xchg
cmpsb
xchg
into
xchg
ficoms
mov
cwtl
xchg
push
cwtl
jbe
push
cwtl
pop
pushf
push
cwtl
xor
sbb
pushf
dec
cwtl
sbb
mov
fisubl
mov
shlb
mov
and
daa
stos
and
adc
jle
push
and
push
and
push
and
addl
inc
and
daa
dec
and
daa
jb
adc
jp
or
bound
add
sahf
and
daa
cmpsb
and
daa
scas
and
daa
and
daa
and
daa
sbb
push
add
bound
or
pop
daa
xor
push
daa
sub
es
jb
adc
jp
or
bound
add
push
cli
daa
xchg
and
daa
mov
and
daa
and
nop
hlt
or
repnz
sbb
and
and
sub
sub
xor
add
inc
sahf
fs
sahf
js
js
xor
sahf
mov
mov
repnz
sahf
int3
repnz
aam
fcompl
in
lock
and
and
xor
pop
xor
sub
sub
dec
jo
jl
jl
test
mov
xchg
mov
fistps
aam
fdivl
in
in
pop
mov
xchg
sub
cmp
cmp
fs
inc
repnz
sahf
dec
repnz
sahf
push
repnz
sahf
cwtl
repnz
sahf
mov
repnz
mov
les
cmpsb
mov
mov
loop
orb
je
adc
daa
sahf
cmp
xor
pop
push
xor
pop
pop
xor
pop
pusha
xor
pop
nop
xor
dec
int3
fmulp
mov
int
leave
scas
pusha
out
lret
clc
mov
ret
add
or
adc
sbb
pop
out
mov
mov
mov
pop
mov
inc
divb
into
jb
jbe
jb
jbe
jb
xchg
addb
cmp
add
bound
or
pop
mov
cmc
fucomi
dec
test
pop
test
jns
test
rolb
jl
sbb
xor
pop
je
daa
jmp
mov
ret
jmp
inc
repnz
sahf
dec
repnz
sahf
push
repnz
sahf
pop
repnz
gs
sahf
insl
bnd
jne
jge
jge
test
add
xor
cmp
loopne
in
loopne
or
test
sub
and
inc
mov
aas
fimuls
jb
jbe
jb
sbb
ds
jl
insl
incb
repnz
aas
dec
xchg
data16
mov
mov
dec
adc
sub
push
mov
or
or
dec
sub
jle
stos
cmpb
xor
xchg
adc
mov
dec
sub
jns
lock
dec
xchg
dec
jb
jbe
jb
pop
je
or
fstpl
sub
push
pop
out
xor
xchg
xchg
cwtl
pop
clc
sbb
pushf
pusha
cwtl
hlt
xchg
adcl
mov
xor
pop
icebp
cmp
sub
mov
mov
mov
dec
ljmp
mov
dec
and
dec
mov
nop
fs
loopne
in
loopne
in
loopne
in
loopne
in
loopne
in
loopne
in
loopne
in
loopne
in
mov
mov
cmp
and
inc
add
add
pushf
add
inc
xchg
pop
jne
ds
in
loopne
in
loopne
in
loope
test
jb
jbe
pop
mov
cwtl
roll
aaa
xchg
and
inc
rclb
imul
andb
sbb
dec
aad
test
xor
xchg
xor
jbe
xchg
ret
mov
ficoms
dec
jb
jbe
jb
jbe
jb
jbe
jb
mov
mov
cld
sbb
sbb
cwtl
cmp
test
or
add
dec
or
pop
dec
push
dec
sub
mov
dec
inc
dec
and
dec
fimull
dec
rorb
dec
lret
dec
ret
icebp
push
in
clc
mov
fs
or
idivb
jae
push
in
sbb
inc
test
dec
test
outsb
inc
int
leave
dec
cmp
test
lds
push
dec
adc
int
xor
mov
mov
leave
mov
hlt
mov
ljmp
daa
add
and
ljmp
jbe
jb
pop
push
xchg
das
je
je
js
orb
xchg
scas
xchg
xchg
shlb
jbe
pop
lret
dec
mov
mov
rcrb
pop
sub
xchg
push
inc
mov
dec
leave
mov
fdivrl
gs
inc
cmp
cmp
cmpsl
cmp
cmp
std
pop
sub
pop
sbb
and
cmp
cmp
pusha
sbb
xchg
jo
loopne
pop
xorb
pushf
xor
mov
jmp
inc
orb
push
sbb
inc
sub
sbb
cwtl
out
pushf
mov
ficomps
xchg
into
and
ret
dec
roll
ljmp
mov
lahf
mov
out
mov
out
mov
out
mov
out
mov
std
add
push
push
pop
aam
pop
and
cs
dec
jp
inc
pop
das
inc
push
jbe
pop
xchg
and
daa
test
loopne
mov
shlb
movsb
and
daa
aam
mov
les
mov
repnz
ljmp
push
sahf
and
cs
push
ds
mov
push
test
push
jl
or
pushf
xchg
call
jb
jbe
jb
jbe
jb
jbe
pop
int3
pop
inc
ljmp
inc
or
xor
pop
dec
pop
js
and
leave
inc
int
leave
xchg
out
in
test
adc
push
repnz
pop
or
jl
adc
inc
stc
cmp
pop
pop
push
push
cmpb
fimull
or
es
je
adc
loopne
and
xor
add
mulb
sbb
xchg
add
test
pop
fadd
ds
add
aas
inc
inc
das
pop
pop
imul
lock
out
daa
stos
add
divb
pushf
outsb
pop
scas
subb
movsb
loopne
loop
int3
inc
aam
pop
mov
xchg
std
fisubs
push
jo
mov
loopne
in
cmp
cmp
inc
pop
xchg
mov
clc
bnd
jb
mov
jb
jbe
dec
add
call
mov
sbb
sbb
pusha
and
nop
repnz
int3
sbb
movsb
out
mov
out
sbb
xchg
xchg
in
je
pop
sbb
in
or
inc
mov
xor
and
mov
popf
repnz
es
faddl
aad
shl
mov
pop
sub
push
cwtl
fsts
push
cmovo
test
xchg
in
int
leave
xorb
das
aas
push
and
dec
mov
xchg
loop
sahf
stos
mov
and
loop
cltd
mov
xor
push
add
lret
sbb
nop
inc
add
xor
mov
loopne
in
dec
inc
jl
bound
iret
fildll
gs
mov
ljmp
mov
cmc
push
divl
sub
xchg
imul
dec
test
movsb
enter
and
mov
pushf
mov
xor
dec
out
jle
ss
sbb
xchg
das
andl
jmp
mov
out
inc
xor
sbb
mov
loope
mov
adc
pop
dec
push
cmc
adc
loopne
or
or
xchg
ret
jmp
sub
jmp
in
mov
jb
jbe
jb
sbb
add
jmp
in
sahf
jae
pop
and
lds
fildll
es
xchg
inc
sub
inc
add
xor
into
xor
loopne
in
loopne
in
loopne
and
andb
and
cmc
xchg
xchg
sbb
mov
sarb
data16
add
mov
ret
sahf
sbbl
sahf
and
push
mov
push
lret
leave
enter
into
mov
stos
enter
fdivrl
or
int3
outsb
jae
sub
jae
mov
cs
out
mov
jo
xchg
xchg
push
je
xchg
jbe
jb
dec
ljmp
les
cld
mov
mov
jb
jbe
dec
mulb
call
movsb
lock
xor
in
xchg
cli
dec
and
lock
in
add
or
repnz
cmp
dec
pushf
xor
xchg
cmpsb
jge
jno
sub
cmp
cmp
sarb
out
mov
sub
jb
jbe
sahf
loop
or
cmp
cmp
inc
xor
dec
inc
in
pop
fistps
pusha
fbld
push
cmp
xchg
push
jb
pop
mov
nop
xchg
mov
xchg
nopl
or
clc
cmp
pop
and
fbstp
jmp
mov
add
dec
push
dec
and
cmp
mov
insl
inc
enter
or
add
out
mov
jmp
cmp
insl
pop
push
fistpll
mov
mov
adc
or
mov
or
rcrb
jnp
add
xchg
pop
xchg
mov
aam
xchg
sbb
xchg
shlb
mov
adc
scas
xor
aas
aam
or
jo
mov
push
out
pop
hlt
cmp
cmc
and
bnd
sbb
cmp
xchg
dec
dec
pushf
lds
xor
pop
cmc
xor
push
or
jmp
jo
data16
loopne
in
dec
push
xor
stc
repnz
pushf
bound
in
add
add
das
cwtl
sbb
cwtl
loope
mov
xlat
pushf
aad
adc
popa
mov
in
adc
int
repz
ljmp
in
xor
test
xor
pop
repnz
and
pop
test
in
clc
aad
addr16
aas
xchg
inc
xchg
push
xchg
or
out
mov
nop
das
cmp
inc
lods
das
mov
dec
std
sub
xor
and
fbld
mov
in
sub
inc
xchg
and
cmpb
cmpsb
sub
fisubs
and
mov
call
sub
xor
sbb
stos
in
pop
pop
push
cmp
and
xor
repnz
decb
inc
ja
cmpsl
pop
scas
jb
or
or
inc
das
test
clc
adc
sbb
xchg
cli
mov
mov
sahf
or
es
and
bound
fwait
loopne
xchg
xchg
leave
fistpll
jae
int3
and
jmp
call
aas
pop
insb
sbb
loopne
in
loopne
in
cltd
jge
fisubl
mov
cmp
and
insb
inc
push
push
outsb
push
xor
pop
xor
push
jnp
jle
xchg
xchg
je
dec
sbb
cwtl
das
pushf
ja
sbb
arpl
push
stos
jbe
sbb
pop
jo
int
xchg
or
adc
push
test
inc
dec
push
dec
sub
xchg
add
pop
sahf
sahf
lods
repnz
pop
cmp
and
push
or
lock
filds
mov
rorb
or
and
inc
fs
daa
push
push
cmp
aam
or
jmp
inc
sub
sbb
sub
pop
fidivl
push
sahf
adc
adc
and
pop
testl
adc
push
add
les
lods
in
loopne
in
xchg
dec
sti
fisttps
push
fildll
orl
inc
pushf
cmpsb
cwtl
ret
cwtl
mov
lds
mov
popf
xchg
pusha
add
xchg
je
lahf
dec
cltd
pop
loopne
jno
push
dec
or
ja
xor
fwait
int
sub
sub
movsl
push
inc
jb
jbe
jb
jbe
jb
jbe
jb
sbb
xor
pop
and
in
push
cmp
and
insl
and
or
into
call
xchg
leave
fmul
pop
or
loopne
ja
jmp
ret
sbb
inc
push
xchg
xor
es
mov
xor
mov
test
xor
pop
xlat
nop
inc
cmp
mov
sbb
xchg
mov
fidivs
sahf
fdiv
lock
lret
or
jge
or
loopne
ret
mov
pop
shlb
xchg
jo
xor
inc
fs
or
jg
mov
pop
mov
mov
add
adc
aam
sbb
sbb
iret
leave
push
int
leave
imul
mov
pop
add
cmp
cld
mov
vdivps
pop
or
test
ds
aad
call
leave
fists
xor
or
lods
movsl
nop
pop
sub
push
cli
dec
loopne
in
cltd
jge
cmpsl
and
and
cld
xor
out
push
xor
xchg
xchg
mov
jb
jbe
dec
push
lods
inc
pop
das
insb
push
je
cwtl
repnz
into
or
mov
inc
into
adc
jg
fwait
xlat
push
push
repnz
into
cwtl
push
insb
test
xchg
adcl
nop
adc
jne
xor
dec
in
mov
call
push
repnz
push
loope
xchg
adc
xor
fwait
out
xchg
xor
popf
das
sbb
popl
shll
xchg
out
xor
icebp
jae,pt
aas
and
imul
mov
fwait
push
hlt
int
jl
dec
cmpsb
mov
adc
dec
jmp
mov
int
filds
pop
fstpt
xor
clc
sub
xchg
mov
push
jle
pop
cmp
insl
int
cmp
ds
in
pop
inc
mov
outsb
ret
xchg
mov
outsb
inc
or
inc
je
addr16
hlt
inc
jp
xchg
dec
xor
test
xor
mov
out
lock
imul
movsb
jb
jbe
dec
sahf
mov
test
call
aas
pop
and
jb
jbe
jb
jbe
adcl
insb
jmp
das
cld
push
das
repnz
mov
ss
xor
call
xchg
fxch
test
leave
pop
aas
je
jnp
push
pushf
mov
popa
xor
in
pushf
daa
push
inc
cmpsb
pop
jl
push
sbb
outsb
js
cmp
inc
pop
inc
jbe
jb
dec
cmc
test
pop
aaa
jg
out
mov
imul
loopne
in
xchg
xor
pop
mov
xchg
xor
les
add
xor
scas
lds
ss
cwtl
pop
xchg
imul
js
cmp
out
mov
cmc
jmp
mov
push
cwtl
inc
fcoms
push
dec
je
repz
pop
call
bound
jne
ret
xchg
and
cmp
dec
fs
cmp
mov
cmp
sbb
mov
subb
add
in
loopne
in
loopne
in
loopne
xchg
adc
daa
sub
push
xor
es
out
cmpl
inc
and
mov
daa
jbe
dec
and
cmpsb
bound
aam
in
repnz
or
pop
cmp
pop
subb
push
push
lods
jl
sbb
je
add
insb
leave
or
std
leave
mov
je
lods
dec
mov
cmpsl
cs
pop
je
test
xchg
xchg
cwtl
ret
and
orb
dec
sar
xchg
lret
xchg
fwait
call
movsl
xor
ss
rcrl
or
or
outsb
or
movsl
jae
lds
call
push
xor
push
cmpl
insb
jns
mov
nop
add
addr16
aas
mov
out
int
leave
fldt
fmull
pop
aas
xor
insb
das
mov
push
cmp
jb
mov
cwtl
pop
repnz
adc
jmp
xchg
rclb
lahf
mov
inc
sub
scas
xor
pop
loopne
in
loopne
in
loope
jo
xchg
dec
cmp
dec
or
cmp
lods
rcrb
mov
push
leave
xor
pop
jno
add
xchg
and
loopne
mov
lcall
push
inc
and
push
fbstp
xor
xchg
ljmp
dec
or
test
xchg
jle
xchg
out
test
xor
les
or
jl
jl
test
test
sub
enter
sbb
mov
fdivs
pop
das
int3
pop
loop
push
jmp
and
add
add
loopne
in
xchg
inc
pop
ret
or
popa
test
movsb
test
arpl
and
out
mov
cmp
xchg
lcall
stos
mov
fimuls
mov
daa
dec
aas
sar
mov
fistps
inc
push
pop
ss
leave
push
add
add
xor
fisubrs
daa
xchg
and
mov
sbbb
inc
divb
in
mov
sbb
xchg
mov
or
ds
or
xor
lahf
into
rolb
sar
or
cmp
xchg
cmpsb
add
bound
inc
jb
pop
push
ret
xor
jmp
mov
pop
nop
cli
sbb
in
pop
aad
gs
pop
pop
loopne
xchg
xchg
lods
test
je
add
inc
js
fistps
dec
bound
dec
outsb
out
mov
bnd
cmp
and
es
test
mov
mov
cmp
push
add
mov
jbe
test
adc
in
ljmp
push
inc
xchg
aaa
pop
inc
stc
js
xchg
mov
mov
or
out
test
sub
cli
mov
sbb
pushf
loope
xchg
push
and
mov
addr16
xchg
addl
shrb
xor
mov
xchg
lds
pop
aad
scas
aad
inc
xor
xor
inc
pop
sbb
and
mov
xchg
push
int
leave
dec
int
jl
sub
push
mov
data16
test
push
pop
repnz
and
aad
or
xchg
repnz
lahf
cmp
mov
mov
in
xchg
mov
inc
dec
sub
dec
mov
push
rorb
cld
add
xor
xchg
jl
pop
lcall
outsl
pop
add
js
pop
ret
movsb
or
mov
jle
clc
aam
or
adc
cmp
xor
pushf
push
cwtl
ss
inc
xchg
es
sub
pop
sbbb
nop
pop
pushf
xor
lcall
or
imul
fidivl
add
jbe
mov
adc
sub
push
dec
outsl
sbb
pop
ds
movsb
sbb
xchg
fs
jb
pop
insb
bnd
je
subl
jl
div
cmp
out
andb
jbe
and
xchg
test
call
int3
loopne
mov
dec
out
dec
xchg
pop
jle
push
dec
jbe
dec
adc
push
mov
xor
pop
sub
cmpsb
fldl
inc
daa
push
inc
pop
inc
lds
xchg
inc
xchg
cs
add
mov
bound
xchg
repnz
or
or
call
pop
jb
es
pushf
into
repnz
xchg
repz
mull
push
leave
jle
out
mov
xchg
ljmp
pushf
mov
mov
fmull
fsubl
in
in
inc
mov
push
loope
xchg
sbb
js
and
xor
mov
mov
cmp
call
xchg
cmpb
cli
ss
nop
cmp
ljmp
jmp
inc
mov
push
jl
sbb
mov
out
pop
bound
pushl
add
adc
and
notb
cmp
or
push
fmuls
jbe
jnp
adc
cmp
fs
data16
cli
xchg
xchg
inc
and
jne
in
and
jmp
cli
sub
fcoms
lods
je,pn
ss
pop
jns
push
fadds
cmpsb
in
mov
add
addr16
imul
push
in
loopne
in
loopne
lret
sbb
or
inc
cs
inc
dec
ds
int3
loopne
mov
sbb
in
loopne
in
leave
add
sbb
add
addr16
adc
jno
or
sbb
pop
pop
add
mov
jne
and
movsl
aad
outsb
cs
and
sub
insb
jle
push
fistpl
adc
jl
cs
std
pop
cmp
push
adc
push
or
adc
movsb
or
pop
fs
push
out
in
repnz
arpl
sub
leave
int3
dec
push
enter
add
mov
ja
mov
arpl
or
je
out
adc
add
push
sbb
lods
push
inc
jle
insb
push
pop
or
push
jb
cmp
dec
adc
push
push
or
jg
sbb
sbb
jo
ljmp
push
dec
adc
add
jno
xor
cmpsb
icebp
xor
adc
jb
insb
fwait
pop
les
pusha
cmpsl
xor
adc
xchg
jg
push
sbb
adc
adc
push
dec
and
clc
gs
outsl
aad
sbb
sub
push
adc
mov
scas
dec
sub
push
mov
cwtl
xchg
cs
mov
call
jo
dec
sbb
jne
mov
lahf
jo
and
add
push
cmp
jp
sub
push
loop
mov
pusha
mulb
push
popa
push
adc
mov
or
scas
je
js
fs
inc
push
xchg
int3
test
jne
add
dec
or
push
js
xor
cltd
mov
fs
mov
jnp
test
daa
lcall
dec
adc
mov
push
icebp
and
add
int3
and
rolb
jno
sbb
bnd
aaa
jne
das
xchg
and
xor
lret
add
arpl
shrl
lods
add
dec
xchg
dec
bnd
bound
in
clc
push
aas
adc
or
adc
aaa
push
inc
cmp
fnstenv
dec
adc
inc
pop
push
jbe
fcompl
hlt
pop
push
bnd
insb
ds
shrb
and
adc
fmull
jae
test
adc
xor
inc
mov
ss
lcall
insb
scas
inc
dec
sbb
push
sub
hlt
subl
sbbl
mov
mov
push
sub
mov
gs
adc
sub
xchg
out
add
push
push
and
add
dec
pop
push
mov
mov
push
pop
out
push
sub
clc
xchg
fs
shlb
test
jo
or
mov
mov
ret
das
ret
inc
dec
push
fcoms
cmp
pusha
xchg
les
cmp
pushf
aam
data16
mov
fdivrl
mov
outsl
adc
aas
push
adc
lahf
xor
jb
xor
aam
test
and
cmp
and
lret
cmp
xor
adc
arpl
xlat
cli
pop
inc
ss
xlat
sbb
inc
sbb
pop
je
mov
and
sub
loop
jle
cwtl
into
hlt
xchg
xor
push
mov
mov
stos
mov
rcrb
loope
les
or
jb
mov
add
movsb
sub
inc
dec
cs
scas
add
and
pop
insl
fwait
sub
pop
add
mov
rorb
iret
push
pop
ss
adc
lahf
xor
dec
push
sbb
mov
ds
dec
push
sbb
jp
jnp
inc
push
ss
jns
int
push
add
mov
adc
add
pop
jle
int
imul
cld
push
arpl
das
aam
movsb
in
ljmp
popf
dec
bound
bound
push
pushf
push
adc
aaa
out
inc
in
loope
dec
mov
xlat
mov
dec
xor
fs
enter
in
cmp
dec
das
pop
xor
jne
xor
adc
xor
cmp
mov
cmpsb
mov
sub
push
cmp
add
ds
inc
imul
and
push
push
xor
adc
repnz
fiaddl
push
aad
inc
add
aas
js
je
push
js
pushf
fnstenv
cld
cmp
sub
ljmp
xor
sahf
mov
xor
adcb
movsl
fs
lods
inc
inc
cwtl
mov
sbb
jg
dec
adc
jb
inc
dec
aas
inc
sub
xchg
push
je
cmp
sbb
daa
sti
xchg
xchg
insb
jnp
add
rolb
call
pop
sub
sub
movzbl
bsf
or
dec
test
test
test
or
bts
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
inc
shl
mov
btr
cmp
bt
sub
xor
jmp
lcall
ret
or
btc
xor
bswap
sub
xor
cmp
shl
jmp
lcall
xor
add
add
pop
xor
xchg
push
test
shr
bsf
shr
sub
test
bts
call
lcall
incl
ret
neg
sub
sub
bt
xor
or
adc
and
jmp
lcall
sub
add
btr
add
shr
shr
btc
mov
mov
xchg
push
push
xchg
dec
add
add
call
mov
sub
test
movzbl
bt
sub
shr
shl
add
mov
and
sub
adc
btr
test
mov
cmp
mov
shl
sub
xchg
mov
sub
dec
not
adc
bsf
neg
cmp
or
test
bt
jmp
lcall
ret
or
test
and
shl
and
bt
xor
call
lcall
add
xorl
pop
xor
xchg
push
test
xor
or
or
test
xor
dec
jmp
lcall
stc
add
xchg
ret
neg
sub
mov
and
test
adc
bsf
xor
bsf
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
xor
cmp
btr
adc
shl
btc
shl
btc
jmp
lcall
pop
add
adc
orb
repnz
mov
mov
jg
cmp
and
add
mov
movzbl
not
adc
not
and
bts
shl
movswl
bts
call
lcall
add
or
mov
btr
cmp
add
sub
sub
call
lcall
pop
add
into
sarl
xchg
in
test
bts
and
mov
sub
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
btr
add
add
cmp
cmp
sub
mov
call
lcall
push
add
leave
xor
not
or
btc
shl
bt
sub
and
bt
jmp
lcall
shl
shlb
cmp
mov
inc
sub
btc
mov
inc
mov
add
neg
movswl
and
cmp
sub
sub
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
shl
bt
and
test
movswl
adc
sub
not
push
cmp
or
cmp
test
or
add
xor
shr
and
add
inc
xor
and
xor
and
add
adc
add
mov
not
mov
sub
shr
and
bsf
bsf
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
cmp
mov
cmp
cmp
shr
test
xor
adc
bt
call
lcall
add
cmp
adc
bsf
and
bsf
and
movsbl
xor
inc
mov
add
mov
sub
bt
mov
test
cmp
xor
sub
mov
sub
add
xor
adc
cmp
sub
sub
call
lcall
mov
neg
test
bt
and
and
bsf
btr
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
bsf
adc
mov
sub
sub
shr
bsf
bsf
shr
test
cmp
xor
cmp
sub
movswl
shl
shr
shl
jmp
lcall
jecxz
bt
neg
bsf
sub
test
movswl
test
mov
add
dec
cmp
shr
mov
neg
inc
cmp
shr
call
lcall
add
xor
neg
cmp
shr
xor
add
or
shl
not
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
btr
sub
mov
test
test
shl
or
sub
mov
and
mov
movzbl
adc
bt
test
and
shr
movswl
test
cmp
adc
add
sub
movzwl
mov
add
sub
dec
btc
bt
shr
add
and
btc
lea
inc
cmp
jne
shr
or
mov
or
add
shl
neg
or
btr
add
cmp
test
adc
shr
btc
cmp
bsf
xor
call
lcall
je
or
bt
shr
neg
mov
btc
neg
sub
add
sub
mov
bswap
or
and
btc
or
add
btc
shr
call
lcall
mov
or
shr
add
cmp
bt
mov
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
test
mov
bsf
movzbl
test
bt
bswap
bsf
mov
call
lcall
neg
bt
sub
mov
test
xor
mov
add
shr
btr
neg
or
btc
bts
mov
cmp
jmp
lcall
add
bts
movswl
mov
neg
sub
adc
neg
mov
add
shr
and
shr
btr
cmp
test
xor
call
lcall
add
bsf
adc
mov
mov
and
xor
cmp
push
pop
inc
add
loop
sub
mov
or
shr
cmp
shl
add
neg
push
decl
mov
add
and
xor
add
cmp
test
add
sub
cmp
call
lcall
incl
fisttps
mov
add
int
rorl
mov
jge
add
add
shll
and
adc
btr
movsbl
inc
and
bsf
sub
mov
push
or
and
and
btc
test
shr
xor
shl
sub
mov
shl
btc
not
xor
sub
btr
add
sub
push
push
pop
add
add
call
add
sub
test
xor
shl
bt
xchg
test
or
shr
cmp
test
btr
btr
mov
and
btr
test
adc
and
btr
adc
bt
call
lcall
mov
add
xorl
loopne
bts
test
shr
shl
add
or
xor
sub
cmp
sub
shl
call
lcall
mov
mov
mov
add
inc
bts
add
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
or
btr
bts
sub
shl
shr
xor
btc
shl
shr
or
xor
add
dec
call
lcall
mov
inc
scas
and
btc
shl
bsf
cmp
cmp
mov
test
and
adc
adc
mov
add
cmp
je
test
test
xor
movzwl
not
add
and
test
dec
add
bts
add
cmp
test
sub
xor
shr
call
lcall
bsf
shl
bts
shl
shl
bsf
bts
shr
sub
bts
xor
neg
btr
adc
xor
test
adc
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
mov
cmp
and
mov
test
and
neg
or
test
dec
push
decl
mov
add
btr
test
bts
shl
bts
mov
xor
push
decl
mov
add
test
bt
movzbl
sub
mov
adc
test
cmp
add
sub
mov
test
btc
cmp
adc
movsbl
jmp
btc
or
or
and
or
shr
cmp
mov
cmp
bts
adc
bts
and
btc
or
xor
mov
and
shl
sub
neg
dec
cmp
bt
cmp
add
add
movsbl
adc
shl
xor
and
xor
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
bt
or
bts
bswap
adc
xor
xor
test
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
shr
shl
test
sub
mov
xor
or
shr
push
push
or
add
sub
and
add
not
test
dec
shr
push
sub
mov
btc
dec
shl
adc
xor
or
and
btc
mov
bts
test
test
and
cmp
bts
shr
call
lcall
js
rcrb
dec
and
adc
adc
bsf
inc
test
not
lea
movswl
xor
and
bswap
add
test
add
or
mov
sub
cmp
movzwl
not
cmp
btr
neg
cmp
shr
bt
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
out
test
ret
and
shr
shl
add
mov
xor
sub
mov
mov
bts
btr
neg
btc
bt
add
movzwl
push
adc
btr
mov
sub
shl
bts
test
and
push
mov
sub
bts
inc
sub
movsbl
or
shr
push
mov
cmp
xor
sub
sub
xor
dec
call
lcall
mov
bt
cmp
test
shr
xor
and
xor
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
test
sub
add
cmp
and
adc
call
lcall
sub
mov
not
xor
not
add
test
bsf
bt
add
or
test
bts
mov
bt
neg
sub
xor
inc
call
lcall
mov
or
btr
bts
and
sub
sub
neg
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
add
add
mov
add
or
add
add
dec
cmpsl
xorb
add
push
sbb
clc
add
rcl
and
inc
mov
sbb
add
popa
xor
int3
or
or
dec
push
sbb
incb
out
add
push
call
movb
xor
sub
mov
out
rcl
pop
stc
push
jge
addl
mov
add
push
xlat
ret
mov
inc
jmp
fldenv
in
lock
add
and
int3
cmp
mov
xchg
in
or
loope
add
push
pop
add
add
ret
and
xor
dec
es
sti
xor
cmpsb
movsb
movsl
aam
lock
daa
fbstp
fldt
nop
test
add
mov
push
out
adc
popf
inc
lds
mov
flds
jno
mov
and
dec
add
adc
add
xchg
or
add
or
movsl
add
lock
and
pop
or
add
dec
fisubs
fsubrl
sbb
iret
sbb
xor
add
adc
sbb
or
push
mov
add
lahf
jmp
and
aad
jp
call
pop
add
dec
inc
sbb
xor
inc
aaa
cmp
dec
push
popf
pushf
inc
popl
xor
push
push
dec
pop
notb
push
clc
dec
push
inc
xor
adcl
dec
sbb
pushf
cmp
push
xchg
cmp
adc
jbe
jne
aas
xor
outsl
jle
dec
push
add
ss
push
push
inc
jg
repnz
dec
inc
or
pop
fsubs
sub
cmc
and
inc
pop
or
test
rclb
inc
dec
inc
repnz
pop
dec
dec
push
cmp
push
cmpsl
xorl
ds
enter
inc
sub
push
inc
aad
cmp
pop
mov
push
pop
sbb
mov
cmpl
push
inc
lret
inc
cmpsl
aas
or
push
inc
push
xchg
add
hlt
ss
notb
inc
ret
jle
add
clc
cmp
inc
insb
outsl
jae
and
jne
addr16
je
in
je
xlat
fwait
cs
push
test
insl
shlb
jecxz
outsb
icebp
je
mov
push
sbb
cmp
or
push
inc
jo
and
icebp
inc
sti
or
div
dec
push
push
push
jae
je
lock
es
dec
stc
pop
push
gs
je
jo
icebp
arpl
out
outsl
outsb
out
pop
push
jne
out
xchg
mov
imul
je
in
addr16
mov
ret
test
addr16
ljmp
jb
add
and
mov
outsl
fs
pop
mov
dec
push
add
jmp
insl
sbb
data16
xchg
jmp
push
js
aaa
jne
adc
mov
cltd
add
add
aad
stc
jb
stos
test
and
push
je
or
popa
add
call
icebp
xor
hlt
iret
add
add
push
int3
fs
je
jae
popa
addr16
out
lock
nop
fcomps
jae
xchg
je
or
loope
mov
outsl
mov
xchg
or
jns
je
daa
dec
outsb
data16
outsl
bound
sub
call
insb
fidivs
push
push
cs
test
adc
popa
jns
xchg
adc
jecxz
or
leave
cmp
sti
test
push
push
dec
inc
add
push
inc
pop
push
xchg
dec
dec
mov
dec
inc
cmp
