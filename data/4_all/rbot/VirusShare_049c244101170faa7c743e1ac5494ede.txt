or
add
add
add
add
or
add
add
jp
or
add
add
xor
add
push
adc
add
add
add
add
add
or
and
or
xor
or
inc
and
add
add
or
add
add
or
add
cld
and
add
add
or
or
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
aas
add
pushf
pushf
dec
pop
mov
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
sbb
add
add
or
add
or
test
cmp
jb
dec
fwait
leave
ds
dec
subl
dec
cwtl
andb
cltd
xchg
mov
dec
mov
sbb
aaa
mov
xchg
in
out
jns
scas
icebp
pusha
je
inc
inc
or
jge
std
mov
data16
repnz
sbb
push
lock
push
sbb
lds
arpl
jmp
lds
addr16
sbb
dec
xchg
scas
neg
cmp
int
mov
jne
lcall
cli
inc
xor
loop
inc
push
dec
lahf
sub
jg
add
insb
sarb
xor
jl
aam
cwtl
lret
mov
and
jmp
add
pushf
mov
jp
add
ja
les
xchg
xchg
mov
adc
fwait
call
xor
push
mov
jo
xchg
ret
ret
outsl
outsl
jg
cmpsb
dec
divb
xlat
lock
mov
iret
ja
flds
inc
jb
sti
daa
jo
into
jle
xchg
vpcomq
ljmp
ds
fnstenv
push
or
push
lcall
mov
push
pop
adc
fwait
mov
lods
pop
pop
in
jmp
iret
dec
xorb
ljmp
cltd
call
jne
into
subb
push
lods
sub
or
ss
push
cmp
cmp
push
sub
jb
or
add
mov
jg
fcmovnbe
mov
cltd
int
fstl
or
pop
ja
mov
cmp
jb
jge
loopne
xor
fidivrl
stos
fcoml
pusha
pop
jbe
stos
cwtl
push
das
or
lds
call
push
mov
mov
stos
jne
sar
clc
fmuls
push
lahf
mov
cmc
pusha
mov
das
lret
stc
cmp
rcr
mov
aam
jne
arpl
data16
pop
nop
mov
or
test
dec
pop
xchg
iret
mov
dec
xchg
sbb
ror
push
pop
clc
jns
or
les
jo
adc
xor
xor
jae
movsl
jg
xchg
addr16
out
ret
xchg
mov
enter
lock
push
loope
dec
mov
and
dec
xchg
cmp
pop
popa
push
enter
sub
das
dec
movsb
mov
inc
push
inc
das
ja
xchg
inc
jmp
xchg
cmpsb
in
inc
ret
pop
or
shrb
out
cmp
mov
dec
jle
pop
cmp
cmp
mov
cmp
out
popf
aas
movsl
in
xchg
cmp
xchg
sti
iret
xor
and
xchg
fsts
ret
scas
cltd
cltd
mov
es
cltd
xor
xchg
clc
sbb
mov
das
je
xchg
scas
popf
mov
pushf
into
lret
jg
sarb
aas
xlat
std
scas
pop
popa
pop
scas
push
xchg
push
push
imul
iret
sarb
inc
rol
xchg
out
sbb
andl
xor
pusha
pop
aad
loope
cmp
jg
sbb
addr16
sti
xchg
xor
sbb
stc
stos
push
mov
xchg
popf
cmc
dec
push
inc
add
lods
jge
and
or
lods
mov
push
ljmp
pop
mov
incl
in
push
mov
mov
adc
testb
dec
fstl
aaa
push
imul
and
sbb
cli
dec
dec
data16
push
mov
or
lods
dec
clc
sub
fisttpll
negl
out
in
pop
in
mov
mov
out
push
mov
aam
xor
popl
jl
movsl
or
jbe
call
loop
scas
xchg
call
jp
bound
fcmovnb
jg
sbb
rcr
sub
mov
fisttpll
out
add
lahf
dec
or
in
out
xchg
xchg
cmp
popf
movsb
mov
lds
add
sbb
pop
in
pushf
push
imul
rcrb
and
sub
test
pop
add
into
or
jnp
scas
pop
push
jb
imul
fisubs
sub
mov
insl
ret
movsl
outsb
add
andb
dec
mov
adc
lods
lock
and
cmpsl
pop
lea
xchg
test
xchg
dec
pop
cmp
mov
push
fstpt
enter
pop
pop
inc
aad
or
mov
mov
jmp
dec
std
sub
aas
movsb
movsb
mov
adc
arpl
lret
gs
pushf
push
jecxz
xor
adc
cmpsb
mov
in
sti
xor
mov
push
mov
ret
mov
jns
outsb
jle
mov
ss
adcb
dec
mov
out
cli
cli
mov
jmp
pop
hlt
push
int
imul
aaa
addr16
mov
mov
jo
lea
daa
repnz
cwtl
imul
lods
lods
sbb
cmpsb
addl
adc
inc
mov
add
aaa
js
int
std
int
add
dec
out
insl
in
mov
aaa
insl
push
clc
outsl
push
imul
lret
lret
aam
add
jbe
dec
jae
insb
pop
sbb
dec
xchg
push
mov
addl
testl
jne
shrb
mov
out
sub
or
or
fisubrs
or
daa
rcll
test
jae
fisubl
xor
jg
test
fldl
pop
ffree
int3
mov
xor
insb
inc
add
int3
mov
out
push
rol
fs
ja
mov
test
and
cltd
mov
inc
or
jg
push
add
fsubs
leave
cmpl
ret
aam
jns
aas
xor
mov
pop
inc
adc
cmp
call
arpl
sbb
xor
loope
mov
jno
negb
test
shlb
cmp
fsubrs
sahf
push
push
push
xlat
test
mov
int3
pop
pop
out
out
mov
pop
pushf
jge
ret
sarl
mov
sahf
push
adc
rolb
push
je
mov
in
jge
addr16
movsl
add
sub
mov
jl
dec
out
or
js
pop
or
iret
sub
mov
cmp
divl
xor
sbb
mov
jno
adc
aas
pusha
xchg
ffree
xor
stc
call
out
push
in
test
ds
jecxz
sbb
add
movsb
mov
pop
xor
xlat
imul
test
test
ja
int
jnp
jmp
pushf
movl
shl
jo
cwtl
cmpsb
dec
es
hlt
push
push
data16
lds
inc
lcall
mov
mov
pop
scas
or
rorb
gs
cmp
pusha
sub
cmp
dec
mov
mov
mov
jmp
and
inc
ja
test
push
cmp
decl
mov
pusha
scas
push
shlb
lret
out
shll
mov
test
out
ds
fbld
not
andb
out
in
ret
fbld
inc
dec
mov
fildl
adc
pusha
mov
cmpsl
and
in
fdivrl
xor
aas
dec
notb
outsb
and
test
jmp
mov
mov
mov
int3
shll
xchg
jo
shl
stos
adc
push
mov
hlt
cmp
cmp
ljmp
mov
lea
push
dec
xor
and
dec
sub
gs
dec
mov
shlb
pop
jg
aas
je
add
push
or
push
int3
stc
vminpd
mov
cmp
sub
adc
mov
popa
mov
xor
inc
mov
or
inc
push
outsl
sub
lret
in
dec
cs
pop
aas
push
imul
mov
andb
jle
mov
sbb
pop
pusha
jns
mov
ds
outsb
xchg
xchg
mov
pop
lea
mov
leave
in
je
js
inc
jne
bound
add
inc
cli
or
sbb
es
mov
mov
mov
push
addr16
push
xchg
cmc
adc
idivl
ret
loop
leave
ja
and
lods
jp
in
inc
cmc
jae
lahf
dec
push
jb
dec
mov
imul
out
addr16
cwtl
pop
rol
ret
in
enter
mov
in
cmp
or
andb
ja
xor
rorl
jle
pop
sbbl
testb
dec
xor
jbe
adc
movsl
gs
and
pop
daa
rorb
dec
jle
jo
xchg
xchg
mov
lcall
enter
and
shrb
or
in
sub
shlb
xchg
fcoml
rorb
out
add
dec
cmp
addr16
mov
scas
cmp
xor
cmp
out
xlat
or
mov
mov
test
sbb
test
push
sti
adc
bound
nop
pop
aad
mov
jl
jbe
or
ljmp
test
test
pop
scas
mov
jae
aaa
pop
mov
push
cmp
push
mov
fisubl
mov
fs
dec
dec
fstpt
cmpsl
popf
dec
mov
aas
rcrl
mov
shl
loope
lods
test
mov
dec
ret
roll
cwtl
push
mov
lock
cmp
test
not
pop
mov
jnp
adc
shl
pop
int
sub
mov
lds
xchg
cmpsl
loope
inc
into
mov
jmp
imul
in
jecxz
mov
sbb
mul
repnz
orb
sub
cmpsl
jns
adc
jg
loope
test
sbb
xor
pop
xchg
dec
cmp
aaa
push
andb
jg
adc
push
adc
jp
adc
jae
rcrb
mov
adc
pop
cs
test
xor
das
mov
or
bound
ret
pop
or
jb
sub
adc
in
jl
in
pop
pusha
setg
out
xor
add
push
sub
mov
xchg
arpl
jno
pop
cmpsb
nop
push
roll
and
mov
pop
add
je
add
aam
andb
clc
jmp
dec
pop
dec
add
jmp
pop
in
mov
and
xchg
stc
pop
jecxz
cmp
mov
adc
cmpsl
stos
gs
bound
push
jg
mov
shl
cmp
xchg
movsl
adc
sbb
ficompl
addr16
fwait
or
cmp
xchg
or
test
rorl
push
xchg
icebp
mov
out
pop
stc
cmp
imull
mov
and
mov
into
lcall
js
adc
jnp
fnstenv
cmp
mov
ja
dec
adc
mov
dec
xchg
imull
mov
push
aad
pop
aam
mov
mov
fwait
sub
xchg
adc
outsl
fs
cwtl
cli
lds
xor
dec
repz
stos
jnp
xlat
arpl
push
decl
sub
jo
mov
adc
cmp
push
push
mov
pusha
adc
imul
jl
xor
or
iret
cmpsl
dec
rcrl
inc
fstps
clc
push
push
xor
jae
xor
mov
and
pop
dec
test
or
mov
hlt
jg
test
ljmp
jecxz
pop
stos
dec
popf
lret
repz
adc
pop
or
repz
xchg
cltd
out
sbb
lock
je
mov
jno
push
aas
sbb
add
xor
ljmp
push
pop
mov
fnstcw
nop
jno
sarb
and
cmp
sbbl
inc
or
and
mov
xor
dec
xchg
xor
scas
lock
dec
sub
gs
bound
test
lock
outsb
rcl
ljmp
jl
int
pop
pop
gs
ja
xchg
mov
out
xchg
dec
out
push
out
or
adc
test
jne
adc
cmpsl
decl
jo
es
faddl
movb
fcoml
shrl
jno
rcll
push
mov
loope
jp
push
xor
mov
push
lock
push
pop
and
adc
nop
push
xchg
jb
mov
leave
inc
in
flds
in
ss
bound
xchg
mov
lods
arpl
cs
aad
push
les
out
add
test
dec
stc
aaa
in
cli
sub
add
out
mov
xchg
pop
outsl
xchg
inc
push
movsb
inc
call
dec
dec
shrl
loope
mov
fwait
dec
inc
mov
mov
push
sub
pop
sbb
push
mov
add
rcll
sti
jmp
jp
ret
mov
cmpsb
sub
jae
add
jns
jns
sub
pop
cli
mov
loopne
sbb
cld
je
push
add
mov
rorl
cmc
inc
mov
xchg
jno
sahf
stc
int
mov
or
mov
iret
xor
jne
xor
mov
and
jno
sub
mov
cltd
xor
nop
cs
xchg
xchg
mov
push
scas
popf
dec
and
rcrb
jnp
xchg
sub
pop
lcall
dec
in
arpl
daa
mov
into
dec
lds
ljmp
push
pop
pop
jno
cwtl
jg
jecxz
adc
add
dec
iret
mov
cltd
orb
test
aad
dec
cmp
in
cmp
icebp
cmc
adc
out
lock
pop
call
insl
int3
push
jae
pop
xor
pop
dec
sbb
xchg
sub
in
sarl
add
and
inc
ss
cmpsl
and
xchg
add
repz
jecxz
xchg
addr16
jae
sub
leave
in
pusha
and
shrb
jb
pop
cmp
hlt
fildll
dec
movsb
imul
test
sub
ret
sbb
dec
pop
mov
xchg
cwtl
mov
pop
fistps
int3
stos
add
aad
idivb
cmpsl
dec
jbe
mov
call
dec
xor
lahf
ss
mov
xor
insb
adc
cmp
and
sbb
test
imul
push
or
mov
imul
fstl
pop
or
data16
clc
pop
mov
leave
add
fmul
mov
fisubrs
notl
adc
inc
pop
test
cmp
pop
dec
dec
cmp
dec
das
dec
dec
push
dec
mov
adc
jg
fistpl
add
add
jp
and
pop
fwait
movsb
xchg
xchg
dec
cmp
xchg
dec
add
scas
mov
pop
lret
daa
sbb
jmp
xor
ljmp
push
and
mov
test
push
xorl
addr16
lahf
xchg
andb
cmc
and
push
enter
in
jbe
jnp
inc
adc
ss
jl
jno
into
sbb
add
jg
sti
and
inc
jns
scas
sbb
mov
pop
sub
add
mov
mov
jbe
cmp
dec
lds
mov
push
xor
lret
mov
loopne
cvttps2pi
lretw
mov
mov
mov
mov
gs
dec
cmpsl
subw
shlb
sbb
and
out
sbb
aas
xor
push
and
imulb
pop
add
rclb
andl
inc
jae
aam
dec
sbb
add
pop
mov
cwtl
jo
and
jge
test
xlat
mov
xchg
pcmpeqd
dec
int
inc
rol
lods
sbb
int3
and
lods
in
pop
inc
pop
test
or
jne
mov
pop
sub
or
pop
test
mov
mov
and
xor
out
xchg
xchg
dec
arpl
ja
insl
push
cli
mov
cmp
shrl
leave
inc
loope
cwtl
inc
adc
mov
inc
jmp
bound
jmp
mov
or
or
and
test
rclb
data16
in
addr16
mov
sbb
sub
mov
hlt
leave
sbb
iret
sti
shl
clc
imul
pop
pop
fldenv
sarb
pop
xlat
mov
outsb
mov
bound
jae
mov
jns
stos
aaa
pop
shll
out
push
je
fisttps
sub
repnz
das
jnp
popf
pop
or
movsl
jnp
inc
adcb
inc
lret
movsl
jmp
xor
test
dec
inc
and
int3
fs
pop
xchg
rcrl
adc
push
mov
mov
mov
jmp
push
repnz
xchg
lock
in
movsl
jns
pop
add
jmp
mov
cmp
dec
dec
jl
dec
and
out
ret
xchg
mov
mov
sahf
in
sti
mov
sbbb
fldenv
pop
mov
pop
fsubrp
sbb
mov
loopne
jo
lahf
into
aad
movsb
arpl
cmp
xlat
and
mov
cmc
fisttpl
sar
repz
xchg
in
dec
mov
add
cmp
xor
dec
into
xlat
mov
pop
jl
daa
ror
jecxz
js
push
jb
sbb
iret
loop
jle
add
mov
int
stc
out
fisttps
add
movsl
mov
cmp
out
aas
jb
mov
insb
pop
call
sub
dec
push
mov
fdivs
push
dec
jae
lahf
cmp
mov
hlt
and
inc
fwait
or
mov
push
xchg
add
movsb
call
popa
or
not
rorl
cwtl
addb
push
insl
cmp
insb
jmp
jg
movsb
lds
sbb
push
lahf
inc
cs
jle
push
rclb
cmp
jnp
sbb
lea
repnz
cmpsl
jecxz
mov
add
out
or
repnz
scas
jbe
mov
call
cmpsb
outsl
xchg
cmpsb
mov
sub
insl
sbb
mov
stos
das
add
xor
mov
push
jp
xchg
nop
and
dec
jo
xchg
popf
adc
test
sbb
xor
push
jae
repnz
insl
test
jo
out
sub
mov
test
les
fwait
pop
mov
dec
mov
repz
xchg
js
mov
les
adc
test
push
add
addl
xchg
jae
dec
sbb
mov
mov
bound
outsb
sbbb
mov
btr
daa
test
push
iret
mov
in
add
mov
mov
es
pushf
push
xchg
scas
call
or
sbbb
std
or
jb
cmp
fidivl
cmc
lahf
test
add
cmp
jno
fcomi
or
pop
mov
test
inc
je
mov
jp
push
or
or
push
gs
insb
or
sub
addb
scas
or
das
lea
sbb
sbb
inc
add
stos
sbb
shlb
or
lock
xor
in
into
icebp
stos
dec
add
insl
cmpsb
int
sub
xchg
mov
leave
insb
xchg
ljmp
inc
sub
nop
push
dec
rcll
call
fsubrl
fprem1
dec
adc
cmp
stos
push
std
out
add
jne
add
add
cli
or
jl
mov
or
jle
fwait
popf
test
rcl
or
dec
add
fdivs
outsb
xor
cmp
push
in
sti
dec
or
push
mov
push
pop
imul
jmp
xchg
in
mov
fdivs
scas
sbb
insl
jne
flds
xor
pop
mov
add
xor
nop
jge
mov
push
fisubrl
mov
sbb
lock
sti
popa
inc
mov
add
push
inc
cwtl
pop
push
std
sbb
mov
cmp
cmpsl
call
pop
loop
das
es
xlat
mov
and
jmp
adcb
je
sub
test
xor
das
fidivrl
or
push
fisttpl
enter
sub
test
xor
lret
sbb
int
sbb
and
inc
pop
mov
ja
imul
mov
lret
push
shl
mov
faddl
mov
xor
addr16
iret
lods
sahf
jle
insl
cmc
scas
sub
jle
movsb
lret
push
rcrb
or
mov
out
cltd
mov
repnz
mov
mov
mov
xchg
pop
xchg
div
sbb
push
setg
mov
push
leave
push
pop
call
mov
push
popa
xchg
xchg
push
xlat
add
jns
les
insb
insb
and
sub
hlt
jge
pop
dec
mov
jmp
lds
mov
and
roll
int
in
jmp
and
xor
nop
push
outsb
xchg
jne
lahf
ds
ficoms
xor
push
aad
add
insb
loopne
and
xlat
push
roll
cwtl
inc
dec
pusha
addb
enter
inc
dec
out
leave
sub
bound
stc
imul
add
loope
xor
mov
push
mov
jo
and
sub
xchg
les
cs
xor
pop
stc
lahf
aad
sbb
jp
mov
mov
add
cmp
mov
outsl
lds
mov
sahf
mov
xchg
outsb
fs
or
add
pusha
cmc
jnp
inc
je
mov
dec
jbe
in
insb
mov
adc
xlat
gs
repnz
stos
sub
mov
mov
in
add
and
lea
pop
xor
xor
jecxz
or
ret
xchg
push
add
cmpsb
cwtl
sbb
das
int3
in
test
pushl
push
and
jl
xor
push
icebp
xchg
mov
movsb
add
iret
sub
mov
sarl
xlat
ficomps
cmp
mov
mov
jo
xor
scas
xor
scas
xor
add
insl
xchg
repnz
cmp
adc
xchg
lods
jns
adc
gs
cmp
fldcw
mov
lock
pop
loope
faddl
jae
push
xlat
sbb
pop
fldl
mov
adc
or
imul
xchg
xchg
adc
popf
popf
fldcw
int3
std
lea
xchg
mov
cmp
mov
lcall
jp
and
in
mov
in
les
jb
addr16
in
mov
push
in
imul
mov
dec
mov
jns
mov
clc
mov
inc
xchg
insb
sahf
jecxz
js
out
enter
insl
push
jae
daa
xchg
int
in
mov
int
jle
rclb
sub
dec
lods
leave
in
stos
xchg
push
cltd
jbe
push
adc
mov
fcmove
xor
pop
scas
sub
out
lret
arpl
adc
ds
xchg
xchg
lea
lahf
mov
or
nop
push
or
mov
es
push
fstl
aad
and
mov
push
jno
xor
in
push
std
fsubl
int
mov
sbb
rorb
mov
fs
pop
jmp
aaa
mov
gs
jb
dec
test
or
push
cmp
mov
mov
jg
dec
inc
sub
jmp
out
outsl
xor
pop
inc
fmull
mov
sub
fsubl
push
hlt
adc
iret
xor
daa
mov
ljmp
sahf
sub
mov
dec
mov
cltd
jg
mov
mov
cmp
out
or
jnp
fstps
pop
mov
adc
xchg
in
jae
cmpsb
cmp
push
sub
out
cmpsl
jne
mov
dec
mov
inc
das
add
sar
mov
sbb
rcl
sbb
fcmove
ret
mov
mov
call
push
jo
fcmovnu
daa
lcall
push
cmpsl
divb
xchg
sub
scas
insb
int3
jl
loopne
push
addr16
lret
int
lods
mov
mov
iret
sub
popf
dec
or
xchg
sbb
mov
adc
test
stos
pop
andb
fst
or
ret
pop
out
jmp
cmp
loope
leave
divl
jl
cmp
adc
in
insl
dec
sub
inc
popf
test
movsb
jmp
bound
sbb
mov
push
mov
and
mov
push
pop
rcll
cltd
cltd
insb
add
cli
inc
dec
adc
xor
ficoms
xchg
push
jbe
in
sbb
inc
sbb
and
mov
out
int
addr16
loope
dec
cpuid
in
xchg
inc
ss
sub
push
push
cmp
sti
out
insl
mov
cld
sbb
adc
push
scas
test
dec
xlat
and
jb
mov
mov
add
aad
rol
xchg
add
fdivrs
fbld
cmp
mov
push
not
mov
pop
sbb
fcomi
push
pusha
cli
out
mov
pop
inc
cli
out
or
add
gs
push
js
xchg
in
jl
push
rclb
sub
data16
iret
aad
inc
outsb
cmpsb
cwtl
out
repz
in
shl
dec
sbb
mov
movsl
clc
xchg
pop
pop
xchg
ja
push
shl
test
arpl
dec
imul
out
fcoml
aad
adc
inc
xor
cmc
icebp
fs
pop
int3
in
fistps
xor
or
std
popa
mov
enter
cmovge
dec
pushf
mov
adc
lods
add
mov
nop
cmp
sub
sub
push
push
dec
fisubrl
subl
loopne
mov
adc
xchg
mov
adc
ljmp
add
sub
stos
ret
sti
test
test
lods
xor
testb
xor
push
scas
cltd
mov
rcrb
add
dec
mov
or
sbb
addr16
test
lahf
add
jno
mov
mov
addr16
pop
ljmp
xlat
loop
xlat
xchg
ret
add
xor
cmovle
fists
sbbl
jne
mov
repz
pushf
adc
mov
sbb
cmp
gs
dec
das
dec
fnstcw
mov
dec
mov
rorb
and
into
dec
jmp
jg
add
out
stos
pushf
cmp
mov
fstps
negb
jp
test
push
or
add
xlat
cmp
dec
shlb
push
xor
inc
cmp
sbb
mov
adc
cmc
mov
cmp
push
jmp
or
xor
jno
cmpsl
fsub
shll
mov
loop
pop
negb
es
popa
je
pop
push
pusha
adc
and
loopne
mov
cmp
ret
adc
inc
jge
and
aam
daa
jge
mov
or
stos
and
pop
or
mov
dec
pop
clc
aas
sbb
test
lods
pop
push
ljmp
cmp
push
dec
mov
insl
adc
cmp
or
inc
rol
sbb
sub
clc
out
aad
sub
jp
inc
nop
movsl
mov
dec
lods
movsb
sub
jns
je
aam
pop
fimull
jo
and
stos
leave
jmp
pop
lcall
imul
inc
aam
aam
outsb
test
push
inc
push
aaa
lds
cmp
out
adc
sbb
mov
dec
mov
sbb
fsubrs
pop
lret
mov
cmp
mov
lock
xchg
in
pop
andl
into
mov
fwait
mov
cmp
jle
cmc
lods
or
push
adc
roll
rcl
sbbb
or
mov
es
inc
jmp
outsl
lods
adc
add
addr16
outsl
sbb
sub
popf
xchg
adc
xor
add
sahf
mov
filds
nop
cwtl
sub
outsl
js
dec
faddl
mov
movsb
push
hlt
mov
loopne
imul
movsl
xorb
out
sbb
inc
mov
or
lahf
lock
mov
xchg
inc
test
sub
mov
push
shrb
mov
push
loop
dec
push
sbb
sahf
sbb
push
paddusb
add
push
fmuls
lods
mov
sarb
jg
mov
shrl
dec
inc
add
and
jne
cld
or
mov
dec
xchg
pop
mov
mov
or
sub
cmp
mov
sub
sbb
pop
cmpsl
mov
jno
sahf
sbb
shr
xchg
movsl
push
insl
stc
loop
pop
aad
pop
fs
mov
mov
fstpt
or
repnz
cmpsl
int
rcrl
pop
andb
sub
dec
lods
push
fwait
insb
add
pop
into
dec
or
aas
divb
sub
mov
cli
mov
pusha
jle
les
subb
mov
pop
pop
fidivrs
enter
pusha
cld
inc
xor
addr16
outsb
cmpsb
rorl
sub
out
icebp
inc
mov
fcomi
leave
xor
mov
mov
popf
mov
lods
les
mov
shll
dec
das
dec
aam
xor
xchg
or
adc
aaa
sub
mov
inc
ret
loop
add
imul
ret
jp
pop
add
sbb
dec
insb
xor
sti
xor
pop
adc
xchg
sti
jle
insl
adc
shl
cmc
stos
dec
sbb
leave
cmpsb
js
ss
mov
mov
xor
insb
mov
cld
push
enter
sub
icebp
adcb
dec
mov
lds
je
sti
jno
push
ljmp
xchg
and
pop
loope
je
test
dec
sub
add
push
popf
addr16
push
fimuls
dec
pop
sub
lds
lock
dec
roll
in
addr16
mov
inc
fcomp
insl
mov
gs
adc
mov
shll
push
adc
lds
into
ret
sbb
xchg
sbb
inc
add
cwtl
xchg
and
shrd
addl
jnp
incl
inc
bound
pop
pop
test
xchg
push
hlt
sbb
inc
daa
mov
pop
loopne
sti
test
sub
dec
scas
xor
inc
push
incb
clc
inc
dec
mov
data16
add
shrb
or
push
cmp
cmc
inc
xor
inc
mov
jle
mov
js
outsb
jl
ret
mov
inc
repnz
and
loope
es
dec
push
push
xor
add
pop
ds
jp
push
data16
pop
out
pop
jmp
fsubrl
ret
les
sahf
xor
lock
mov
jbe
xchg
enter
mov
in
icebp
sub
add
sti
in
inc
sub
sahf
add
cmp
xor
inc
mov
addr16
mov
push
call
mov
test
xchg
fists
in
insl
repnz
xchg
pusha
xor
sub
mov
xchg
in
lock
enter
dec
jb
and
pusha
cmp
sbb
cs
int3
inc
or
cmp
mov
rolb
mov
sbb
daa
jbe
mov
in
sbb
imul
fstpl
outsb
xchg
dec
push
addr16
andb
rol
addr16
daa
mov
inc
incl
dec
jmp
dec
pop
add
seto
ret
pop
adc
into
jnp
les
or
loope
fbstp
push
mov
jmp
mov
insb
ljmp
psraw
mov
sub
push
stc
inc
lret
sti
mov
imul
xchg
popf
stos
pop
repnz
push
call
divb
shl
cmpsb
ret
addr16
mov
aas
fstps
and
jmp
ljmp
push
imul
call
add
inc
lea
lcall
jns
sbb
shl
fsts
push
pushf
rclb
std
mov
add
int
hlt
sbbl
lods
shr
ret
imul
ss
jp
adc
mov
sub
sub
xor
or
xchg
in
mov
mov
inc
imulb
subb
push
addr16
out
xchg
in
and
sbb
aaa
or
repnz
add
push
jno
mov
xchg
data16
push
inc
cmpsl
pop
adc
loop
mov
push
gs
lret
cltd
cmp
ja
add
cmc
test
sub
movsb
sub
subb
ljmp
add
push
inc
dec
scas
mov
cmp
sbb
shl
cmc
das
ret
popa
rolb
movsl
pop
call
fnstsw
xchg
test
or
into
and
cmp
mov
mov
cmpsb
xor
pop
xor
mov
mov
add
shlb
js
incl
rcrb
push
inc
and
arpl
fwait
inc
rorl
mov
in
arpl
xor
inc
testl
loope
jg
leave
lret
idivb
mov
mov
pop
lds
pop
jne
sbb
idivb
sbb
add
pop
cmpsl
shl
bound
xchg
mov
cmp
sub
and
pop
shrl
test
jne
fcmovbe
and
lret
mov
mov
data16
xor
jbe
mov
add
enter
add
lds
std
push
xor
cmp
clc
dec
popf
mov
inc
outsb
je
testb
push
fstp
xchg
inc
or
push
mov
push
push
sub
fwait
jno
xor
sub
mov
into
addr16
sub
sbb
pop
shlb
loope,pn
add
or
xchg
push
dec
mulb
lret
xor
sbbl
push
stos
push
push
sbb
jne
or
push
daa
mov
sbb
pop
ret
push
sbb
sub
popa
int
and
xor
push
in
out
or
push
pop
leave
dec
stos
popa
loopne
mov
gs
cmp
sbb
pop
pop
nop
mov
pusha
fcoms
ljmp
jns
xor
mov
addb
dec
jecxz
add
push
test
rorb
js
add
mov
add
inc
adc
or
sahf
dec
fs
in
xor
test
sub
and
add
adcb
test
add
sub
mov
xor
dec
cmpb
repnz
mov
or
or
ds
pop
jo
add
xor
or
mov
lods
xlat
stos
jmp
pop
xchg
jne
lcall
pop
sahf
sti
xor
notb
cltd
testb
inc
cmp
orb
pop
ja
jl
jne
sub
fisttps
mov
insb
sbb
and
push
lods
xchg
fcoml
fbstp
cltd
xor
pop
or
popl
and
sub
hlt
xchg
and
adc
add
or
insl
pop
stos
jne
cmc
cltd
jge
or
mov
sub
mov
or
lret
xchg
scas
adc
pop
test
sub
insl
jmp
xchg
cli
mov
arpl
cmpsb
pop
mov
mov
mov
pop
jmp
out
lahf
jg
sbb
es
and
mov
pushf
shrb
clc
mov
pop
aas
imul
jno
pop
test
sbb
sbb
ds
push
jne
push
imul
aas
push
imull
and
and
inc
mov
xchg
lock
mov
or
dec
inc
adc
adc
nop
push
mov
int
mov
or
sbb
lds
out
push
repz
std
jae
je
std
dec
fldt
pop
lcall
jp
nop
iret
adc
outsl
or
push
movsb
stos
dec
jns
sarb
lods
and
jne
adc
ss
sti
sub
sub
xchg
daa
fwait
cmp
fdivrs
push
jbe
and
cltd
test
shrb
cmp
or
jo
push
fisubrl
lret
imul
sub
and
pusha
popw
fucomi
loopne
dec
jns
mov
xor
cmp
jge
mov
inc
jno
icebp
lods
out
cmp
adc
les
int3
lock
inc
xor
iret
js
ljmp
mov
jno
rcrl
xor
dec
mov
inc
mov
movsb
in
pop
mov
jae
call
imul
jnp
add
jnp
adc
data16
mov
fisttpl
or
out
enter
int3
dec
aad
jbe
add
cltd
je
sub
adc
insl
notl
pop
and
orb
mov
fsubrs
and
lcall
rol
sbb
fcmovu
bound
imul
gs
sub
int
in
mov
xlat
stos
mov
out
hlt
fnstcw
mov
mov
out
psubsw
cld
adc
push
cld
enter
enter
push
filds
popf
xchg
adc
cwtl
jmp
cli
and
fwait
popa
sbb
cmpsl
push
xchg
fnstsw
xor
aaa
rorb
sub
adc
lcall
inc
jl
adc
cld
sti
pop
fnstsw
cmc
dec
xchg
movsl
adcl
pop
sub
scas
imul
gs
push
and
lods
jo
mov
jl
popf
mov
mov
dec
adc
and
dec
cmp
in
add
les
and
pop
sbb
push
inc
insl
mov
aaa
fsts
imul
repnz
push
cmp
in
xor
cmp
lods
dec
cmp
push
mov
arpl
push
aam
shll
into
rorb
mov
scas
jb
cld
cmp
xchg
xor
aas
add
mov
imul
jno
mov
cmpb
inc
mov
xor
lds
cmpsl
jg
inc
adc
xchg
gs
dec
fwait
andb
push
fsubl
or
popf
mov
jno
es
mov
sbb
jb
scas
rorl
mov
inc
pop
push
cmpsl
lods
mov
mov
les
cmp
repnz
fisttpl
push
or
cld
sub
xor
test
xchg
mov
lret
ss
movsb
mov
pop
push
xlat
pop
popf
in
sti
cmp
xchg
push
push
imul
addr16
daa
into
sbb
adc
mov
mov
mov
test
adc
stos
into
sbb
push
mov
adc
cmp
aas
lcall
push
popa
inc
mov
ja
in
push
mov
in
sub
dec
loop
inc
mov
mov
rcr
inc
retw
adc
arpl
pop
add
sbb
mov
loopne
jl
mov
aam
jl
sahf
adc
adc
cmp
inc
mov
jno
push
les
ja
jg
call
pusha
repz
push
iret
mov
ljmp
outsl
cmc
xlat
jne
jne
add
arpl
and
hlt
inc
es
push
jbe
inc
cmpsb
nop
adc
ds
ss
out
pop
jecxz
cs
inc
inc
dec
sbb
out
lods
jno
repz
out
mov
push
scas
push
pop
cmp
arpl
ret
push
dec
icebp
cltd
sub
jns
popa
int
ret
push
cli
repnz
pusha
and
jg
mov
push
popf
cmp
jnp
lcall
cmp
mov
mov
mov
cmp
std
repz
bound
lds
mov
and
and
ja
outsl
fstps
cli
push
add
xor
pop
flds
jg
outsl
inc
popf
gs
lock
push
cltd
cld
mov
imul
cmpsb
cli
ja
sti
pop
push
arpl
stc
bound
dec
sbb
cwtl
and
mov
call
dec
sti
push
jns
push
mov
mov
add
cmpsb
xlat
cs
cmpsl
xchg
out
imul
cmp
adc
add
dec
pop
dec
insl
and
es
enter
push
fiaddl
push
ret
dec
test
stos
sub
jl
adc
sub
rcrb
repnz
jl
inc
adc
inc
int
imul
nop
fwait
je
xor
popa
push
adc
dec
pop
andl
lret
and
xor
xor
popa
cld
add
std
or
pop
dec
pop
and
pop
pop
lahf
mov
loop
adc
mov
dec
sbb
nop
test
add
int
int
or
push
fcomps
mov
ror
dec
das
or
mov
dec
jnp
dec
and
push
xchg
dec
adcb
mov
mov
xchg
js
push
aas
ljmp
fdivrp
jecxz
and
arpl
xchg
or
push
out
mov
adc
jae
jg
mov
aam
mov
adcb
aaa
push
push
xchg
push
jg
out
add
xor
adc
faddl
aam
outsl
aas
jl,pt
sub
in
sarl
or
das
lret
xor
sahf
out
lahf
repz
push
cmc
mov
sahf
ds
push
fstps
icebp
jne
adc
pop
jne
fadds
xor
mov
in
push
jnp
jle
push
inc
mov
mov
or
stos
ss
iret
aam
push
xchg
push
cmp
jo
inc
ret
push
mov
mov
pop
repnz
movl
and
fiaddl
jo
pop
push
pop
enter
sub
repz
lret
loope
sbb
scas
dec
cmpsb
stc
or
xchg
or
fwait
inc
movsb
int
fadd
inc
clc
ds
les
sahf
js
inc
aad
sbb
or
jns
cmp
int3
xor
jmp
xchg
cld
mov
mov
js
icebp
xchg
add
sbb
xor
aaa
scas
mov
push
adc
cmp
add
jbe
insb
cmpsl
psrlq
and
scas
ja
add
imul
push
rclb
push
xchg
lret
out
or
mov
mov
ss
xchg
inc
push
jp
push
sbb
scas
mov
stos
mov
insl
mov
daa
das
pop
subl
addr16
sbb
inc
rorb
mov
mov
mov
inc
add
inc
pushl
jmp
mov
scas
out
adc
lret
sub
rol
xor
mov
es
inc
sarb
dec
loop
jns
movsb
pop
out
jae
lahf
std
cs
divb
loopne
pcmpgtb
mov
das
xchg
jbe
inc
movsb
fwait
jecxz
imul
popf
hlt
out
cmp
push
jo
mov
cmp
sti
movsb
fisubrl
sahf
xor
pop
adc
cwtl
mov
add
fnstcw
push
aaa
mov
jg
xchg
push
push
push
push
icebp
sub
pop
popa
jnp
mov
jle
jns
xor
adc
fwait
pop
clc
sarb
loope
lret
lcall
jecxz
xorl
rcrl
xchg
jle
mov
icebp
pusha
xchg
pop
out
in
sti
cmp
je
stos
pop
out
mov
adc
sub
inc
pushf
or
push
mov
jl
lcall
ja
loop
orl
inc
pop
test
das
mov
stos
inc
inc
mov
mov
and
sub
jp
jl
leave
xchg
inc
mov
mov
cmp
push
addb
lret
aad
xor
or
ficompl
cmp
stos
jle
pop
mov
popa
jo
icebp
ret
pop
sbbl
jne
cmp
adc
fwait
or
lock
std
iret
pusha
push
mov
xor
mov
jae
stos
or
lret
adc
sbb
xor
and
mov
cmp
pop
sti
sarb
mov
mov
inc
in
sarl
mov
push
xor
mov
cmpl
dec
pmuludq
adc
fldt
shlb
movsb
and
and
leave
mov
push
sti
add
mov
xor
jnp
push
xlat
jne
xor
dec
inc
xor
loopne
test
push
or
fld
xor
mov
ja
leave
pop
dec
es
and
test
xchg
sbb
sbb
push
sar
sarl
les
aas
aas
lea
ljmp
add
idivb
sbb
test
sub
add
ja
cld
mov
hlt
lods
and
xchg
xchg
and
in
push
dec
xor
out
negl
xchg
mov
iret
push
mov
pop
and
xchg
sahf
cmpb
jbe
lcall
dec
xor
xchg
jmp
add
mov
push
inc
punpcklbw
push
lret
cmp
inc
sbb
fadds
or
popf
rolb
jg
fs
pop
xor
repz
push
ficompl
fmuls
decb
xor
push
stos
xchg
sbb
push
dec
jnp
cmp
ds
out
mov
jp
cmp
int
loop
shrb
in
mov
rorl
fisttpll
fldl
inc
sahf
push
out
add
test
xlat
sbb
out
test
mov
movsl
arpl
pop
add
push
dec
and
lret
in
iret
fwait
jl
cltd
dec
ret
and
lcall
clc
sub
out
add
daa
sub
lods
inc
imul
xor
push
dec
xchg
push
inc
add
cmp
sbb
xor
adc
or
pop
jle
lret
mov
test
sub
inc
adc
es
sbb
dec
jecxz
sbb
xchg
fcompl
shll
and
pop
daa
xor
in
clc
mul
divl
mov
pushl
add
mov
mov
mov
lock
lret
jo
cmp
pop
std
data16
in
mov
jg
and
aad
pop
sbb
adc
mov
inc
mov
das
fcoml
addr16
push
rorl
popf
or
repz
sbb
fwait
lcall
sbb
fistps
or
mov
dec
lahf
inc
sub
mov
cld
mov
ret
pop
lea
lret
insb
ret
pop
xlat
jne
cmp
jnp
cmp
aam
into
dec
fadd
jo
dec
imul
mov
push
fnstenv
cs
mov
lea
scas
into
daa
fistps
mov
fists
push
std
out
cmpsl
shrl
in
push
cmc
adc
das
jnp
or
divl
pusha
int
aaa
or
fwait
cwtl
ja
add
js
sahf
out
push
pop
sbb
dec
pop
in
jp
dec
shlb
bound
shlb
addr16
pop
mov
out
fldl
inc
mov
cmc
repnz
mov
cmp
mov
xor
add
pop
sbb
inc
lcall
mov
xchg
inc
or
and
ja
movsl
popa
sub
test
add
dec
dec
xchg
pop
jno
adc
inc
sahf
mov
add
daa
push
add
ja
cmpsl
outsb
adcb
adc
xor
sub
xchg
xchg
flds
lds
pop
insl
push
pop
mov
ss
pop
rolb
out
lahf
xchg
inc
mov
jo
adc
sarb
or
inc
fisubl
mov
lret
push
fwait
lret
push
jle
add
movsl
xchg
lcall
cmpl
dec
lahf
xor
aam
dec
dec
insl
loope
xor
mov
popf
dec
insb
hlt
mov
int3
bound
mov
or
addb
addr16
outsb
mov
xchg
test
cmp
and
mov
mov
push
rorb
inc
adc
incb
inc
cld
jno
stos
sub
mov
xor
push
fiaddl
repz
sti
xchg
xchg
push
call
inc
sbb
std
add
inc
xor
lods
scas
xchg
adc
shrb
test
shl
jle
cmp
leave
inc
imul
inc
dec
fisubrl
mov
and
sub
jg
or
fucomp
lea
sub
sbb
push
inc
loopne
in
push
mov
addl
inc
xlat
push
ret
aad
fidivrs
pop
jg
rcl
push
repnz
xchg
sub
add
call
mov
outsb
xchg
arpl
js
fidivrl
inc
xorb
mov
pop
sub
js
dec
daa
pop
into
jg
xor
push
out
inc
aas
fs
out
ja
lock
xchg
adc
jb
mov
dec
dec
push
pop
pop
jne
jae
fldz
inc
test
push
cmp
add
xlat
and
int
add
test
or
imul
imul
inc
sbb
repnz
inc
lea
pop
test
mov
fdiv
or
or
iret
lret
cmpsb
add
jle
rcrb
cli
push
add
jmp
add
aas
xor
hlt
inc
push
test
mov
mov
fistpl
out
js
jbe
xchg
jb
push
push
arpl
and
ljmp
cmp
and
imulb
jb
test
int
push
test
xlat
js
aas
or
mov
rcr
in
sbb
xor
popf
pushf
dec
punpcklbw
mov
inc
push
adc
push
push
adcl
ja
push
rcr
sti
pop
adc
lahf
jge
add
adc
retw
pushf
add
faddp
lahf
cli
mov
mov
adc
out
scas
cmp
dec
mov
or
in
pushf
popa
into
pop
inc
je
xchg
subps
mov
inc
int3
std
cmp
jg
sub
push
jno
xor
and
pop
stos
outsl
insb
out
pushf
mov
adc
pop
push
cli
gs
sbb
dec
mov
inc
lods
je
push
shl
inc
popa
fistpll
cmp
in
or
fbld
leave
sub
mov
pop
pop
dec
fstl
bnd
fwait
pop
jge
and
mov
jmp
pop
mov
add
test
jne
int3
pop
ja
fidivrs
mov
cmp
or
pop
add
pop
jbe
mov
mov
adc
pop
sbb
mov
movsb
in
fcomps
push
imul
adc
push
fcmovbe
aaa
push
rcll
rcr
xchg
cmovg
xchg
sbb
sbb
sahf
cmp
adc
pop
pop
xor
clc
pop
add
subb
mov
sub
lea
mov
or
sbb
add
mov
push
loopne
or
cmp
fdiv
subb
outsl
bnd
adc
jge
jae
filds
fisubrs
jno
xor
jbe
or
cmp
mov
or
xchg
sar
lret
test
sti
repnz
jae
inc
dec
testl
jge,pn
popf
xor
outsb
mov
ret
cld
dec
push
ror
xchg
cvtdq2ps
imul
push
cs
jbe
ja
gs
dec
mov
sbb
pop
mov
xor
fs
cmp
xor
mov
loope
icebp
lock
jo
pushf
enter
jo
dec
roll
popa
arpl
insl
mov
add
jl
jmp
adc
inc
xor
fadd
mov
push
mov
cmp
mov
shrl
testl
cli
es
lods
mov
jge
lahf
pop
mov
jge
aad
cli
and
shrl
scas
mov
stc
div
jge
insb
add
std
push
stos
rcr
into
out
mov
add
and
data16
sbb
std
push
loop
sub
lcall
ss
jb
push
mov
sbb
mov
movsl
push
ljmp
or
push
std
jb
pop
pop
fisttpll
movsb
xchg
xor
jl
push
test
mov
ja
sbbl
aaa
daa
adc
jge
divl
loope
mov
push
stos
fxch
repnz
popf
shll
hlt
jmp
in
stc
je
fmuls
fcompl
insl
loopne
xor
pop
xchg
xchg
jo
jl
mov
repnz
cmp
inc
sbb
add
dec
or
in
inc
mov
sbb
fistps
mov
push
add
dec
push
cmpsb
insl
add
or
pushf
or
mov
pop
add
fwait
jp
mov
lock
jge
and
bound
or
xor
sub
mov
dec
xor
and
xchg
inc
pop
jl
je
or
insb
and
pop
jno
mov
push
pushf
jmp
cmpsl
adc
aaa
dec
ret
xchg
push
stc
mov
pusha
mov
push
insl
push
outsb
add
cs
push
jg
cmp
test
aaa
insb
jns
sub
mov
pop
dec
lock
sub
test
cmp
xor
negb
sbb
enter
movsl
cmpsb
lods
mov
lahf
out
xchg
xor
sar
cltd
sub
ljmp
cmp
loopne
test
cmp
cltd
xlat
fnstcw
stos
test
push
popa
loop
std
inc
in
xchg
mov
out
lock
mov
jl
push
inc
inc
jbe
xchg
iret
cmpsl
lods
mov
pop
movsl
jo
inc
xchg
adc
mov
aam
scas
lea
xor
sub
rorl
mov
into
inc
mov
xchg
jo
push
andl
mov
or
mov
cmpsl
das
movsb
push
pop
iret
inc
inc
xchg
lods
cs
xchg
mov
icebp
xor
js
pop
ffreep
fimuls
roll
out
inc
imul
fdivrl
orb
mov
add
pop
xor
repz
aaa
aaa
test
and
jge
push
jmp
pop
jno
arpl
rcrb
xchg
mov
lods
rcrb
out
xchg
and
nop
or
lahf
sahf
xor
sub
xchg
stos
xchg
push
jmp
enter
xchg
pop
or
or
push
mov
or
movsl
faddl
stos
cld
loope
xor
mov
in
lods
xor
cmp
mov
pop
inc
and
sub
xchg
pusha
dec
cli
mov
ficoms
push
adc
test
or
fwait
iret
lock
popf
pop
fists
xlat
movsb
stc
sahf
dec
fnsave
arpl
xchg
inc
ret
or
and
shr
dec
das
or
or
xchg
pop
add
mov
stos
jl
out
mov
cld
push
sub
and
leave
enter
dec
sub
movsl
sub
xor
leave
dec
inc
xchg
pushf
into
jbe
scas
cld
rcrb
jne
or
pop
mov
rcrb
xadd
xlat
into
and
xchg
into
pop
xor
inc
jmp
fists
jne
pop
fistpll
outsb
call
mov
test
sub
inc
mov
hlt
xor
dec
add
shr
pop
mov
xor
lret
loope
stos
popa
inc
getsec
repnz
popa
mov
insb
add
aad
mov
addr16
mov
xor
cs
cwtl
lcall
inc
jl
lret
arpl
sbb
or
test
sub
popa
test
inc
pop
inc
cwtl
jg
adc
xor
movsb
outsl
pop
inc
xchg
mov
lods
inc
sub
fst
clc
aad
out
test
nop
and
xor
mov
xchg
paddw
push
xlat
adc
dec
xor
or
loopne
roll
data16
insl
xchg
lock
mov
in
cli
mov
imul
mov
fildll
loope
pop
das
xchg
add
cmpsb
scas
aaa
xor
push
stc
stos
mov
dec
ss
popa
dec
das
out
jecxz
jl
inc
sbb
fs
cmc
mov
pop
daa
sbb
fdivrs
inc
orl
shr
inc
aam
int
cmp
jae
dec
add
adc
adc
ret
mov
push
pop
or
test
mov
cmp
repz
mov
out
add
jbe
int3
cli
or
sbb
les
jge
shll
icebp
jmp
push
sub
mov
sub
test
or
xchg
into
out
mov
dec
sbb
lods
movsb
movsl
sub
mov
jg
roll
xor
test
sub
and
mov
mov
xor
add
xor
pop
mov
sarl
adc
je
fstpl
mov
push
scas
fistl
cmp
and
std
outsb
xchg
inc
xor
testb
loopne
movl
push
ret
sbb
and
dec
int
push
iret
cmp
xor
lods
imul
mov
sub
movsb
jge
jmp
jno
dec
sub
sarb
xchg
sbb
or
stos
ljmp
ljmp
out
add
outsb
scas
and
ret
loopne
sub
mov
mov
and
jbe
mov
movsb
add
lods
pop
jge
or
test
or
test
mov
fsubr
fs
aas
push
fisubs
aad
mov
mov
add
rep
xor
xchg
pop
int
cmp
add
inc
push
inc
xor
fs
jne
ss
cwtl
sub
dec
and
sub
in
mov
sub
test
inc
repnz
and
sub
push
mov
add
and
pop
push
mov
and
adc
mov
pop
dec
pushf
mov
cmpsl
mov
adc
sbb
lods
mov
fimull
pop
push
adc
addr16
out
aam
mov
push
scas
test
xchg
mov
lods
out
jmp
xor
sub
cmpsl
mov
daa
sub
cli
push
mov
add
stc
mov
out
sbb
ficoml
mov
mov
jne
insl
daa
sti
mov
or
push
bound
mov
pop
sahf
in
movb
fprem
push
sti
dec
xor
lret
in
shll
mov
jmp
cmpsb
in
in
aam
ja
inc
push
lret
bound
mov
cmpsl
mov
adc
push
add
dec
leave
jne
xchg
stc
pop
lcall
inc
add
cmpsl
jecxz
sbbl
leave
cmc
fcomps
cmp
out
icebp
je
inc
loopne
add
push
popa
push
cs
mov
test
in
inc
or
aas
hlt
ljmp
mov
test
divl
sahf
sti
mov
mov
and
dec
aaa
into
and
mov
sahf
cs
repz
aas
push
repz
mov
outsb
or
sbb
sbbl
xchg
dec
cmp
das
add
xchg
xorb
push
aaa
adc
rcl
xor
fmuls
rcll
imul
add
loop
and
pop
jne
pop
out
xchg
div
cmpsb
xlat
or
in
pop
fs
push
stc
stc
jg
sahf
and
xchg
cmp
stc
repnz
mov
mov
scas
test
dec
sbb
xchg
xchg
test
jo
bound
outsl
int
cmc
aaa
xor
and
pop
xor
xchg
push
jnp
push
adc
push
fsubrp
jae
jnp
mov
xor
leave
xchg
cmpsb
adc
pop
leave
cmpsb
push
or
hlt
decl
ret
aas
dec
sbb
add
scas
xchg
xor
adc
add
push
and
sub
ds
leave
and
jle
cs
jno
hlt
decl
sbb
cmp
shlb
out
xchg
mov
out
jns
add
call
shl
mov
adc
je
scas
xchg
mul
inc
das
inc
icebp
sub
jae
dec
in
loopne
jle
pop
fsubrl
imul
ss
mov
ds
push
call
aas
pop
idivl
sbb
sub
jb
push
mov
push
xchg
int
ja
stc
mov
std
mov
dec
jl
push
mov
xchg
mov
fsub
adc
sti
mov
insb
mov
int3
sbb
or
hlt
popf
xchg
dec
sbb
arpl
push
in
cmp
inc
int3
xor
loope
xchg
aaa
cld
or
shlb
mov
sti
fstl
inc
movsl
mov
push
pop
out
das
mov
pop
rcrb
mov
add
outsl
jne
jae
in
in
sub
frstor
or
push
xlat
mov
int
push
dec
ja
into
jne
push
loopne
pop
dec
push
push
sub
gs
mov
mov
adc
push
mov
or
pop
arpl
adc
aas
aad
pop
pop
loopne
rcrb
into
stos
or
cld
jnp
adc
int3
lods
mov
mov
js
xchg
mov
mov
mov
adcb
ret
roll
adc
movsb
and
mov
cli
mov
cmp
sbb
dec
sbb
jmp
mov
jmp
push
add
jl
rorl
lods
loop
es
std
mov
push
mov
in
cmp
lods
in
fimuls
popf
pop
fldenv
bound
xchg
jmp
rcr
loopne
inc
jnp
sub
insb
adc
or
push
cltd
mov
in
xor
mov
mov
dec
popa
mov
mov
or
bound
mov
pop
adc
xchg
or
lret
adc
adc
xor
inc
inc
jns
arpl
daa
and
mov
lods
fidivl
push
cli
mov
xchg
xchg
add
dec
xchg
jge
test
cld
imul
mov
pusha
jp
fistl
push
iret
dec
shll
imul
sub
shll
cs
popf
shll
outsb
jne
es
shl
std
jecxz
sbb
mov
jno
out
sub
mov
push
fstpt
les
jle
aaa
data16
mov
dec
xchg
push
inc
in
pop
mov
test
dec
leave
mov
and
and
iret
sbb
aam
pop
inc
popf
test
sarl
push
adc
loope
inc
fmull
add
ret
push
data16
xor
je
xchg
push
push
jno
jle
int
jge
inc
mov
xchg
loope
in
pushf
xor
in
cwtl
mov
shll
pop
push
and
push
sarl
ss
int
repz
ss
imul
sbb
rorl
enter
mov
into
and
adc
jmp
fwait
xchg
lret
sbb
mov
adc
test
fcomp
outsl
push
test
movsb
aam
fs
test
icebp
inc
shr
lahf
cmp
push
arpl
leave
dec
testb
or
sub
mov
xor
test
imul
push
and
dec
aas
push
mov
sbb
or
xor
push
in
lcall
fwait
fwait
adc
test
in
xor
insl
repnz
pushf
pop
fcmovbe
in
ljmp
lcall
rorl
movsl
sub
fistl
mov
pop
lock
aas
jmp
inc
sbbl
xor
cmpsb
ret
mov
clc
push
xlat
pop
fldenv
negb
mov
in
jb
daa
sub
test
sbb
or
pop
movsl
test
cltd
fnstsw
stos
mov
sub
add
outsb
push
lea
lods
xchg
jns
mov
xchg
jp
ds
repz
add
popf
jb
or
flds
hlt
js
dec
pop
mov
sbb
popa
aas
pusha
fidivl
jmp
pop
push
xor
push
pushf
xor
sbb
scas
shlb
into
sbbb
pop
outsb
or
scas
ss
fldlg2
lock
or
ss
inc
adc
jmp
pop
aam
je
shrl
sbb
jecxz
hlt
sbb
push
test
push
inc
xchg
mov
roll
lods
jge
pop
or
sub
cwtl
inc
pushf
into
xchg
repnz
test
or
and
mov
push
sarb
in
pop
and
jae
add
outsl
xorb
jecxz
mov
scas
ret
rol
adc
jne
or
pop
aam
int
loop
fisttpll
xchg
inc
adc
add
jl
insl
andl
lods
lods
xchg
lcall
sub
repz
into
dec
sti
cmp
or
push
or
out
imul
sub
stos
test
fbld
gs
loope
arpl
fdivrl
nopl
lahf
mov
inc
movsl
gs
jmp
fldt
scas
add
loopne
frstor
mov
jg
pop
insb
ret
sub
push
pop
push
test
les
push
lea
jp
ljmp
pop
and
dec
popa
push
push
cmpsl
lret
scas
lret
dec
mov
test
or
stos
cmpsl
outsb
in
sub
scas
je
out
ja
sbb
shrb
mov
mov
xchg
call
jne
pop
mov
mov
call
out
jbe
fwait
outsl
lods
mov
mov
cmp
jne
fs
scas
repz
je
pop
xor
push
dec
fistps
and
int
jmp
lret
leave
cltd
pop
and
into
sbb
shr
ds
es
sub
out
in
jl
in
or
data16
dec
cmp
cld
sub
sbbl
inc
lret
iret
jp
outsb
aas
or
mov
lahf
je
std
mov
inc
push
jmp
dec
enter
daa
repnz
mov
cmp
pop
sub
sbb
test
xchg
vpsubsb
pop
and
xlat
test
jne
add
test
dec
aaa
into
lret
cltd
addr16
and
inc
stc
or
data16
scas
dec
test
iret
imul
mov
or
lods
in
sub
jb
cmp
xchg
bound
mov
mov
dec
mov
sbb
mov
push
cmpsb
mov
mov
nop
mov
and
stos
js
mov
cmpsb
sub
push
or
and
push
loop
xchg
cli
mov
push
in
ljmp
push
ss
aas
adc
ds
adc
out
push
mov
or
or
sub
and
sbbb
mov
jge
fcomi
aaa
addr16
movsb
mov
push
xchg
repz
dec
mov
out
mov
xor
push
inc
div
movsb
cmpsl
jecxz
push
jmp
test
jo
dec
mov
adc
bnd
and
xor
push
xchg
jno
notb
jl
sahf
or
cmc
mov
dec
hlt
rclb
mov
in
mov
arpl
pop
das
cwtl
mov
pop
js,pn
or
ds
flds
cmp
xlat
lahf
add
inc
push
lock
add
cmp
push
loopne
lret
mov
loopne
shll
pop
loope
or
rcll
dec
cmp
in
push
flds
inc
dec
aaa
adc
sub
cltd
mov
sub
test
dec
pushf
xor
divb
sub
inc
push
xlat
test
xchg
mov
mov
pop
and
push
dec
int3
cmpsl
out
or
add
daa
cmp
lods
loop
jne
jmp
sub
dec
mov
mov
sub
push
jecxz
cmp
popf
mov
mov
cltd
or
shl
insb
jle
cmp
movsb
or
pop
repnz
xor
and
in
mov
xchg
xor
push
scas
xor
jbe
loope
jnp
fwait
mov
mov
insb
jg
add
test
pop
repz
mov
sub
sub
and
and
jne
rorb
push
xor
imul
xchg
jae
mov
ret
push
mov
lahf
nop
int
sub
dec
and
insl
cmp
mov
jle
push
fisubrl
mov
scas
push
adc
adc
not
enter
cmpsl
sbb
shlb
sbb
mov
push
xchg
push
mov
ds
aad
test
or
xor
and
mov
inc
jmp
call
nop
ret
sub
lret
dec
pop
shlb
out
lahf
and
adc
aam
add
jle
add
cmpsl
inc
adc
loope
pop
push
push
loope
add
jmp
pushl
nop
cmp
dec
std
push
jno
mov
stos
std
mov
cmp
int3
mov
icebp
lahf
inc
sbb
int
dec
js,pn
cmp
or
mov
cmp
sbb
lcall
fldt
pop
push
mov
jl
cmp
movsb
push
cwtl
aaa
scas
outsb
dec
cmp
test
mov
adc
cli
or
mov
popa
cmp
subl
xor
cmpsb
push
sarl
add
sub
scas
pop
sub
xor
pop
fisubrs
movsl
out
adc
add
mov
test
sbb
sbb
sbb
fs
sahf
mov
arpl
in
mov
scas
enter
out
add
or
jl
sub
iret
and
enter
pusha
pusha
lret
inc
inc
inc
pop
mov
nop
sbb
mov
aas
push
movl
lcall
cmp
inc
xchg
dec
test
movsb
lcall
pop
pop
cs
dec
std
test
push
repz
sbb
or
addb
mov
jmp
daa
test
lahf
mov
dec
testb
or
xlat
jnp
repz
scas
and
and
xchg
fs
cmpsl
adc
inc
inc
fcomp
xchg
popa
dec
mov
cli
loop
jle
xchg
mov
mov
xchg
xorb
pop
mov
inc
xor
sub
repz
js
sbb
ljmp
mov
jmp
add
bound
xor
fimull
iret
loope
outsl
cmpsb
and
dec
into
sbb
nop
and
stos
es
pop
mov
xor
mov
mov
sbb
sti
fnstenv
inc
lock
out
je
dec
add
aam
xchg
cwtl
outsl
repnz
clc
mov
adcl
sbb
mov
xlat
lods
jg
mov
jmp
or
pop
std
mov
pushf
sub
jbe
sub
dec
sti
jo
mov
aas
dec
out
dec
popl
inc
faddp
dec
xchg
sub
cli
jo
outsl
push
jg
iret
mov
and
stos
mov
test
push
cwtl
ret
xlat
and
shrl
push
iret
mov
xor
popa
shll
or
mov
adc
loop
jmp
rol
jo
int
cmpsl
push
cmp
inc
dec
call
cltd
and
mov
push
xchg
pop
out
dec
cmp
loope
adc
xor
fistl
or
xor
sub
enter
cltd
push
mov
dec
mov
lea
mov
jg
jmp
aam
push
pop
sub
cmpl
pushf
mov
lret
jno
mov
out
dec
lret
test
sub
dec
adc
ror
mov
xchg
aad
pop
mov
scas
pop
nop
in
fcomi
pop
movsl
mov
imul
cmp
adc
xor
dec
les
addr16
sub
pop
sub
cmp
and
call
cmp
outsl
or
mulb
mov
add
push
rolb
adc
bound
and
popl
mov
int
jmp
jp
push
or
mov
or
iret
cmpsb
rolb
lcall
sarb
data16
push
add
imul
stos
loope
sub
mov
test
imul
mov
mov
sbb
xchg
inc
mov
pop
je
add
dec
jmp
jbe
scas
xchg
xchg
jo
mov
push
xrelease
add
outsl
sbb
jmp
stos
pop
fstps
push
stos
int
mov
xchg
out
sbb
or
or
push
cwtl
xor
movsl
jg
or
inc
jecxz
scas
pop
in
cwtl
stos
repz
inc
cmp
iret
and
jns
xchg
cmpsl
inc
pushf
int
in
mov
xchg
xchg
add
cmpsl
and
add
xchg
movsb
mov
imul
adc
iret
mov
or
das
rcl
in
push
ret
out
movsb
and
dec
push
sbb
jne
sub
js
je
mov
pop
adc
jge
pop
js
pop
mov
clc
pop
in
adc
xorl
adc
xor
pop
flds
iret
dec
out
hlt
jae
fsubrs
scas
out
jo
mov
cmp
push
xor
lret
repnz
xchg
add
sbb
or
pop
mov
insb
jmp
fcoms
cmpb
int3
das
daa
push
xchg
adcb
stos
push
cmp
aam
test
push
xchg
or
push
in
mov
xchg
jne
xor
cmp
pop
sbb
pusha
dec
jg
mov
sub
outsb
jo
and
lcall
insl
scas
les
bound
adc
inc
push
es
jne
repnz
add
loope
test
xchg
cld
pop
sbb
cmc
mov
cmp
sbbb
test
mov
sbb
or
pusha
xorb
mov
movl
mov
loopne
cmpsl
add
fidivrl
pop
mov
mov
mov
mov
cld
dec
lods
mov
ficompl
jl
leave
sbb
mov
stos
sarl
or
cmpsb
xchg
insl
rcll
out
push
dec
and
xor
loop
push
jb
test
call
pop
jge
fstpt
orb
dec
mov
ljmp
xchg
dec
push
test
push
pusha
mov
pushw
popa
jae
mov
ss
xchg
add
aad
mov
jmp
and
lods
mov
out
pop
je
add
out
jo
dec
movntq
out
jo
jns
int3
imul
cli
cmc
repz
add
push
jp
imulb
mov
repnz
fidivrl
pop
js
cmpsl
sahf
xor
mov
xchg
call
bnd
int3
je
addl
mov
mov
mov
addr16
stos
stos
icebp
add
xchg
jns
jmp
out
inc
jp
stc
bound
call
out
jae
ss
call
push
lock
adc
add
push
jne
int3
in
enter
cmpsb
addr16
xchg
mov
in
cmp
and
sub
lods
les
test
shlb
loope
ficoms
scas
jecxz
stc
xor
imul
out
adc
add
push
push
and
xchg
pop
js
jnp
pop
adc
sub
fidivrs
or
outsl
test
add
sbb
adc
and
push
sbb
ficoml
lods
push
leave
les
stos
sbb
in
dec
shr
and
mov
je
sbb
pop
xor
xchg
adc
clc
xchg
dec
repnz
push
and
xor
cmpsb
mov
xchg
into
pop
dec
jo
fiaddl
and
jae
jmp
sub
ret
add
shll
je
loope
dec
adc
pop
mov
inc
aas
pop
adc
shl
ficomps
xor
pusha
addr16
daa
jnp
jle
lea
mov
das
mov
cwtl
push
adc
cmp
mov
mov
add
pop
icebp
pop
mov
pop
stos
aam
mov
mov
xchg
gs
std
out
scas
push
jb
mov
ret
push
ret
je
and
adc
lods
repnz
mov
jns
inc
stos
nop
xchg
rcr
idivl
push
testl
pop
je
cmp
inc
lcall
or
xor
pushf
repnz
cmpsl
loopne
push
cmpsl
jge
or
test
mov
xor
xchg
fisubs
adc
je
stos
pop
ret
add
cwtl
cmpsl
xchg
push
mov
mov
jl
ret
test
push
sbb
cmp
aad
fsubl
js
nop
clc
movsl
lock
jecxz
mov
ds
cmp
and
sbb
shrb
mov
xor
mov
cmp
jnp
inc
leave
add
cmp
stos
into
jae
cmpb
cmc
fdivs
inc
test
shlb
dec
jo
lret
fiadds
jg
arpl
lcall
jp
fxch
ljmp
jg
mov
mov
adc
adc
mov
mov
mov
push
out
cmpsl
shlb
scas
pop
jge
jl
aad
mov
andl
pop
das
xchg
mov
push
rcrl
jmp
pop
bsr
xor
cmp
mov
frstpm(287
jle
xchg
test
mov
cmpsl
sub
jns
xchg
pop
pusha
sbb
fwait
mov
popa
loope
dec
add
and
test
clc
popl
jo
or
aam
rcrb
jb
je
leave
cli
adc
xor
repz
dec
fisttps
fs
cmp
imul
push
dec
add
inc
adc
popa
xchg
scas
call
cli
mov
fdivs
dec
cmp
pop
jnp
es
repnz
js
pop
adc
fidivrs
fdivl
lea
popf
out
jmp
pop
jbe
fcoml
lret
xor
es
call
lock
mov
mov
sti
sbb
inc
arpl
test
mov
cltd
dec
mov
jle
js
cmp
dec
mov
fildll
push
pusha
pop
adc
jmp
cmp
shll
pop
jns
mov
cmp
xchg
or
sbb
jecxz
bound
add
lods
mov
adc
pop
xchg
mulb
dec
insb
loope
pop
mov
fstp
xor
lds
adc
sbb
mov
mov
push
add
push
leave
push
push
xor
dec
and
stc
mov
ja
mov
push
jl
test
jae
fimuls
xchg
and
iret
jnp
cmc
mov
or
inc
out
sbb
push
enter
aam
pop
mov
sbb
pusha
sub
daa
lret
cmp
push
rcr
add
andl
pand
stos
and
icebp
lahf
push
sub
cmpl
adc
xlat
mov
mov
cwtl
nop
add
mov
xor
adc
mov
mov
pop
lret
sbb
mov
sbb
orb
mov
mov
xor
clc
xor
sub
push
cmp
push
test
jno
pusha
stc
loope
cmp
add
push
shll
add
mov
push
cmpsl
jl
push
js
mov
fcomps
movsl
es
pop
add
shrb
adc
pop
xchg
mov
imul
in
jle
sub
dec
imul
mov
movb
jmp
xchg
call
xchg
lock
sti
jno
data16
add
inc
nop
jg
imul
loop
cli
jle
loop
mov
cmpsl
das
aas
cmpsb
rclb
mov
int3
push
pop
clc
cmc
in
xchg
imul
mov
xchg
sbb
jo
pop
mov
fcomps
xlat
movsb
outsb
fisttpl
sub
push
cmp
push
pop
jbe
mov
lods
out
fnstenv
dec
push
lcall
ja
mov
icebp
dec
es
or
xor
jle
lods
lret
ret
cli
push
je
sub
add
adc
lahf
inc
dec
call
rorb
icebp
jnp
in
dec
loope
mov
mov
enter
jl
mov
sbb
dec
cmpsl
ror
jo
aad
jmp
pop
lock
adc
in
mov
in
ljmp
push
adc
add
jb
push
xchg
ret
mov
in
pop
nop
rol
into
push
mov
pop
adc
mov
sbb
add
and
push
xchg
movsl
jae
add
xchg
out
aas
and
pushf
mov
loop,pn
mov
pop
outsb
pop
jg
into
imulb
inc
mov
dec
cmp
or
inc
dec
outsb
out
pop
repz
rcrb
lcall
lods
pushf
and
je
sub
shlb
cltd
fwait
pushf
push
push
sub
movsb
push
push
pop
xlat
movsl
sub
or
xor
mov
lds
and
sbb
cmc
adc
mov
js
push
dec
xlat
jbe
xchg
add
or
pop
out
stos
je
mov
lret
fildl
int
jne
lcall
divb
test
dec
divb
pop
mov
aas
push
adc
shll
cmp
xorb
mov
sub
sub
les
pop
mov
into
cli
push
sbb
enter
call
push
adcl
in
mov
lret
pop
outsb
adc
in
and
stc
andb
mov
xor
sub
inc
sahf
or
sbb
jg
sub
mov
shll
adc
test
xor
aam
mov
xlat
xlat
push
mov
sub
sahf
lds
rcll
sub
rclb
add
add
mov
sbb
outsl
adc
jp
and
mov
dec
int3
xchg
je
out
jl
mov
mov
mov
mov
lcall
xchg
dec
shrl
adc
insb
sbb
pusha
or
shrb
adcb
or
push
pop
mov
xor
add
mov
mov
cltd
divb
fcom
adc
pop
lock
push
xor
stc
cmp
cmp
or
xchg
xchg
inc
inc
je
xlat
adc
test
ss
mov
sbb
sub
pop
clc
js
cwtl
test
mov
pop
jge
pop
dec
inc
outsb
jmp
mov
jb
xor
test
mov
cs
sub
push
mov
dec
jno
sub
insb
mov
cmp
pushf
ljmp
pop
mov
cmp
sub
jnp
mov
xchg
xlat
fsubs
pop
shlb
lds
add
lea
jge
mov
movsl
adc
fldt
ds
call
cli
out
pop
lret
mov
not
pop
xor
push
popa
mov
xchg
pop
xor
pop
xchg
pop
jo
inc
cmp
or
mov
add
iret
fdivl
stos
adc
lahf
mov
xchg
mov
ret
fadds
or
or
sti
push
mov
cmp
aas
ja
cmc
inc
xor
leave
sbb
mov
enter
sub
pop
or
cmp
inc
jecxz
dec
stos
mov
pop
xor
jbe
or
or
jb
mov
test
xchg
inc
mov
xchg
or
mov
movsl
and
dec
and
bound
push
or
fnstenv
xor
add
lahf
add
stc
jecxz
push
mulb
aas
enter
ficoml
mov
into
loope
or
push
xchg
mov
ds
call
out
out
xchg
int
inc
loopne
scas
cmpsl
sub
idiv
jmp
or
cli
xchg
in
jae
mov
jl
xor
fistps
mov
dec
push
stos
and
lcall
cld
jp
cmp
fwait
cli
out
popf
les
mov
cmpsl
mov
cwtl
pop
add
cmp
jns
ss
add
mov
or
lret
aad
jne
xchg
and
aaa
cwtl
push
pop
jmp
xor
or
pop
enter
insb
popa
outsl
push
mov
stos
movsb
and
mov
inc
les
jp
subb
mov
cli
inc
jp
pop
loop
lret
cmpsl
mov
pop
jp
xlat
sahf
jno
pop
pop
sarl
adc
jno
lods
jns
fcmovu
outsb
xchg
arpl
pop
arpl
fidivrl
addr16
push
cmp
pop
inc
mov
pop
ret
cmp
mov
into
push
scas
loopne
jbe
dec
mov
repz
jle
sub
dec
out
test
or
repnz
push
push
lods
inc
aam
dec
mov
out
aad
dec
adc
mov
sbb
lods
repz
cmp
sbb
stos
clc
mov
filds
aas
sbb
mov
scas
sub
push
xor
ds
jmp
mov
orl
test
ja
sbb
xorl
stc
stc
call
ds
cmp
cmp
mov
call
out
cmpsb
das
lahf
pusha
jg
jp
nop
in
push
inc
xchg
mov
xchg
sbb
cmp
aad
mov
sub
or
mov
sub
subl
jg
das
adc
les
xlat
fsubs
push
jmp
mov
pop
jl
mov
mov
test
mov
movsl
enter
mov
lret
ret
mov
mov
ret
xchg
out
or
sbb
add
sarl
and
dec
popl
rorl
jae
add
mov
sub
outsl
lods
pop
jb
enter
ja
sbb
out
hlt
adc
push
push
popf
pop
lcall
jae
fcmovnbe
incl
outsb
jg
xor
loop
gs
into
and
jno
cmp
inc
cmpsb
or
sahf
addr16
mov
or
repnz
testl
divb
xchg
mov
mov
lahf
arpl
loop
xor
sbb
fs
cli
push
sub
sarl
jmp
push
and
es
or
xchg
fbld
insl
test
cmp
or
mov
or
mov
imul
inc
inc
dec
sbb
and
sahf
mov
fsubrs
xchg
mov
push
fidivrl
sti
xchg
adc
jl
dec
xchg
mov
ljmp
mov
mov
repnz
pop
jo
ljmp
pop
out
xchg
add
inc
das
push
inc
mov
cmp
sbb
repnz
out
jp
xor
jae
sub
xor
mov
rcll
leave
cmpsl
add
pop
mov
adc
mov
lods
mov
arpl
xchg
jo
sub
mov
cmp
scas
xor
sahf
divb
mov
adc
js
xor
cmpsb
inc
cmp
inc
test
mov
dec
inc
add
out
sub
rcrl
pop
cmp
mov
push
ss
push
push
pushl
mov
mov
lds
push
stc
je
int3
roll
mov
add
push
mov
in
dec
mov
push
rolb
leave
dec
stos
mov
in
and
xor
mov
js
or
jae
or
xchg
sbb
cmp
cmp
push
jl
or
mov
lcall
mov
dec
loop
cmpsb
cs
jae
adc
filds
mov
fcomps
and
sub
mov
adc
movsb
jmp
pop
push
pushl
push
test
mov
xchg
push
ds
mov
fs
loop
stos
cmp
or
mov
dec
out
mov
cmp
xchg
push
std
rcrl
mov
or
fst
das
in
cmp
mov
and
add
pop
lods
pop
inc
lcall
push
out
and
mov
adc
mov
sub
inc
or
xchg
stos
jmp
cli
mov
leave
mov
mov
mov
pop
repz
jmp
and
aad
sub
adc
push
xchg
mov
cmpsl
mov
mov
fcomps
ret
adc
dec
repnz
mov
sub
stos
ja
push
jb
dec
imulb
jno
lods
and
cmp
inc
mov
xchg
and
pop
hlt
sbb
dec
mov
inc
rcl
pop
jnp
inc
daa
addl
shrl
or
cltd
popf
test
dec
push
inc
push
or
pop
aad
test
sahf
lds
imul
js
scas
xorl
rolb
or
mov
popf
or
std
lock
and
outsl
inc
push
lret
ljmp
pop
push
mov
sahf
ss
fldt
loopne
out
xchg
xor
pop
sub
push
jo
loope
ljmp
pop
add
sub
jns
pusha
mov
lock
aam
or
and
xchg
pusha
lret
ja
xchg
sub
shl
mov
xor
stos
idivb
popl
movsl
xor
jno
pop
fs
movsl
mov
arpl
rcll
pop
test
add
bound
scas
lods
fwait
lret
lods
add
mov
add
mov
jle
push
push
loope
jb
shll
sub
xchg
push
sahf
push
xchg
aad
sub
dec
pusha
js
fwait
mov
lret
popa
fistl
adc
lock
jmp
ljmp
ret
xchg
or
ffreep
ja
mov
pop
rcl
jg
or
pop
sub
movsl
scas
adc
fdivr
fdiv
inc
std
inc
icebp
push
dec
stos
inc
cli
dec
push
fwait
mov
pop
dec
cld
pop
test
mov
das
cmp
aad
pushf
adc
ljmp
les
jecxz
in
mov
jnp
test
sub
mulb
loop
or
or
out
mov
push
gs
dec
cs
inc
outsl
mov
or
pop
out
jae
add
cld
scas
xchg
dec
arpl
inc
lret
in
jne
fstpt
data16
pop
dec
sub
mov
daa
mov
jg
jo
sbb
ljmp
out
pusha
out
push
ljmp
inc
jnp
pop
pop
push
popa
cld
push
jmp
loope
xchg
lods
mov
mov
add
fdivs
int3
and
lds
fiaddl
test
mov
loope
aam
mov
rclb
jno
xor
xor
add
or
add
xor
into
jle
outsb
add
pop
loopne
xchg
clc
push
mov
and
cmp
sbb
popf
dec
test
aas
ret
fs
shll
scas
mov
stc
out
cmp
xor
mov
iret
pop
or
cmc
scas
inc
xchg
vrsqrtps
fcoms
loop
lret
movsl
scas
mov
pop
jb
push
cmpsl
inc
lock
inc
cmpsb
cmpsb
scas
je
ss
sbb
fsubl
movsl
pop
and
xchg
adc
lcall
in
sub
movsl
push
out
mov
adc
sbb
pop
into
adc
dec
sahf
addr16
stc
ja
leave
stc
pop
loopne
cli
dec
fdivl
rorl
push
stc
push
cmpsl
lcall
add
mov
movsb
in
ret
dec
lock
or
mov
fdivrp
xor
stc
dec
test
loopne
add
std
mov
sbb
and
sbb
or
sbb
mov
sub
fwait
data16
mul
addr16
rclb
inc
xchg
and
pop
int
dec
testb
enter
shll
movsl
dec
in
xchg
dec
cmpsl
push
cmp
pop
jbe
or
popa
push
popa
test
cmp
enter
pop
iret
mov
jmp
sub
repnz
iret
xor
xor
movsb
jecxz
push
int
inc
int
popf
jns
call
subl
sbb
movsb
cmpsb
fimuls
or
lret
loop
insl
inc
and
xchg
popa
test
dec
mov
xchg
cmpsb
mov
cmc
movsl
movb
lret
xor
cmp
cmc
mov
jmp
xor
test
xchg
in
push
add
cmpsb
xlat
jnp
test
lods
and
and
mov
dec
cmp
int3
cmp
movsb
sbb
movsl
imul
push
jl
clc
mov
addr16
and
dec
movsl
cmpsb
xor
mov
fcomps
dec
ja
push
pushf
mov
dec
or
scas
mov
cmp
rcrl
mov
outsl
hlt
sbb
movsl
je
cmp
movntps
add
lret
sub
sbb
mov
jmp
test
sarb
fsubrp
int
adc
mov
repz
push
lahf
and
mov
rorb
sti
loopne
add
aam
test
push
insl
cwtl
inc
aas
test
mov
lods
pop
hlt
insl
jle
sbb
cmp
jno
push
jb
inc
fmuls
rcll
out
imul
adc
mov
imul
adc
jb
cmp
pop
popa
jmp
bound
pop
xchg
ficoml
cmp
push
adc
pop
xchg
dec
sub
add
push
mov
repnz
pop
xor
cmp
inc
data16
xchg
aad
or
adc
arpl
loopne
daa
jbe
add
inc
xchg
lock
js
movsb
clc
push
jb
push
sahf
outsb
cmpsb
test
or
ja
sbbl
aam
subl
leave
scas
dec
push
cli
sbb
mov
jae
xchg
loop
popa
push
mov
or
test
sbb
into
xchg
mov
xor
xchg
mov
js
cmp
addb
loop
cmpl
adc
inc
hlt
in
mov
fs
mov
cmp
movsl
mov
jge
mov
in
es
outsb
lock
sbb
pop
daa
outsb
mov
roll
xchg
aaa
mov
pushf
outsl
scas
popf
popf
mov
jne
xor
adc
int
dec
pop
iret
mov
xor
jmp
addl
out
push
rcrb
aas
out
sub
cmp
sti
mov
gs
xchg
lret
jnp
jp
cmp
dec
dec
in
test
push
mov
push
insb
add
mov
adc
push
and
lea
sahf
push
sub
outsl
out
ret
sbb
add
push
negl
adc
or
inc
jmp
jbe
add
mov
out
inc
jmp
sahf
sbb
stc
iret
jmp
shl
aas
mov
out
mov
cmp
cld
sar
sbb
inc
xchg
outsl
clc
mov
rcrl
jmp
iret
shlb
cmp
push
and
aad
icebp
jl
push
xchg
xchg
clc
xchg
mov
mov
inc
jl
push
cmp
scas
push
inc
inc
mov
bound
or
add
int
pop
movsl
lods
ss
push
lret
mov
inc
lcall
out
push
push
adcl
mov
and
imul
sub
cmpl
std
movswl
xor
dec
pop
ja
loopne
subl
int
fwait
rcr
adc
popa
rcll
mov
loop
lret
pop
xchg
fistpll
mov
movsb
out
sbb
pop
jae
into
pslld
xchg
leave
movsl
cmp
fmull
push
dec
mov
pop
cld
sbb
ds
stc
sbb
mov
sub
mov
lret
and
in
iret
in
negb
fisttpll
clc
and
xchg
stc
mov
jno
mov
aad
and
out
sub
aad
lret
mov
inc
lock
insb
sub
cld
movsb
dec
mov
loopne
sbb
jbe
xlat
enter
cld
push
bound
rorl
xor
pop
jo
ret
sub
jnp
adc
loopne
daa
ds
adc
pop
add
outsl
stos
lods
add
or
in
or
in
mov
jo
sub
cmp
mov
lock
outsb
arpl
loope
add
sub
inc
cmpsl
xlat
iret
out
xor
sbb
fsubrl
pop
in
jae,pn
sub
pop
ret
inc
sub
mov
mov
gs
mov
jmp
adc
or
leave
outsb
out
inc
leave
shlb
dec
aas
pop
clc
ja
mov
pushf
shrb
xor
lods
dec
mov
es
jle
mov
sarl
pushf
jle
jae
or
ss
or
and
sub
out
test
rolb
mov
repz
leave
dec
or
in
sarb
lret
mov
in
xlat
arpl
push
shlb
xor
pop
push
cmc
aas
mov
cli
pop
sub
insl
sbb
lcall
mov
pop
sub
loope
or
insl
das
cs
cli
std
loope
arpl
xor
test
mov
lcall
or
xchg
and
mov
inc
push
iret
fstpl
inc
push
adc
push
mov
mov
in
inc
cmp
and
cmpsl
hlt
dec
xchg
push
cmp
lahf
xchg
push
sarl
data16
into
stos
pop
scas
push
jae
andl
xor
movzwl
cmp
fstp
insl
out
add
sbb
ds
pushw
in
mov
push
lahf
jge
or
mov
sbb
jbe
xor
or
cld
pop
out
scas
adc
enter
popa
mov
cmpsb
push
dec
sub
js
mov
insb
ret
pop
xor
jno
pop
sub
pop
xchg
jns
lds
daa
repz
adc
pop
or
mov
xor
sti
in
xor
mov
and
sub
popf
arpl
fidivrl
fwait
add
out
test
test
stos
test
push
arpl
xchg
inc
add
out
mov
jmp
pop
adc
mov
add
out
add
cmpsl
xor
mov
adc
imul
cmpsb
mov
mov
mov
sub
lods
stc
int3
adc
test
js
fabs
fiaddl
sbbb
mov
sbb
sbb
adc
push
mov
xchg
cmp
les
rolb
sub
and
data16
dec
adc
push
adc
xchg
lret
cltd
xchg
and
fcompl
mov
imul
outsb
clc
out
cmpsb
jecxz
pop
jmp
out
imul
lods
xchg
push
pop
mov
jecxz
pop
aam
mov
rcrb
add
lahf
pop
xor
fsubs
sbb
fbstp
arpl
add
mov
xor
bound
pop
stc
das
call
iret
repz
sbb
cmpsb
add
lea
lods
faddl
testb
mov
pop
push
sbb
lock
rcr
pushf
jo
orb
pop
stos
adc
lods
mov
test
xor
stos
test
mov
mov
jo
push
test
mov
push
ss
loop
fcompl
dec
std
mov
mov
mov
sti
jns
adc
into
push
test
idivl
pop
sbb
jle
mov
lret
psubq
mov
cmp
or
inc
cli
ljmp
or
xor
jl
mov
sub
ss
mov
aad
or
jle
mov
mov
lds
in
jne,pt
test
push
in
lcall
push
jecxz
enter
insl
pop
ljmp
out
sub
test
mov
pop
sbb
cmp
or
sarb
lock
cltd
pusha
fadd
push
pop
fsub
addr16
inc
pop
mov
jecxz
and
inc
or
sbb
out
xchg
inc
push
mov
popa
loop
mov
lea
arpl
testb
js,pn
inc
jecxz
cmpps
and
mov
js
sets
jg
pop
xchg
shufps
jo
loopne
lods
sbb
jg
jns
lcall
rolb
push
add
mov
in
jg
in
pop
jae
xchg
stos
inc
out
mov
movsb
inc
cs
lods
cwtl
insb
xchg
jg
roll
fdivl
add
jns
sbb
scas
aaa
push
jb
cltd
test
or
cwtl
sbb
add
sbb
inc
cmc
lret
lahf
mov
js
outsb
sbb
icebp
push
mov
fsubrs
cli
sahf
fwait
pop
cmpb
sbb
imul
imul
and
dec
pop
and
imul
adc
mov
xlat
push
push
lahf
movsb
pop
xorl
pop
xchg
xchg
pop
push
leave
cmp
mov
nop
addr16
pop
push
push
adc
jle
fs
xor
mov
cmp
cmpb
sbb
xchg
dec
mov
scas
adc
mov
test
pop
xor
cmpl
insb
in
cmp
add
xchg
js
lret
push
add
cmp
in
sub
cmpsb
jb
xorl
stos
mov
sbb
stos
sub
push
mov
jns
lahf
and
movsl
movsb
rdpmc
pop
mov
xchg
ljmp
int3
and
mov
sti
repz
xorb
pop
std
xor
mov
and
andl
mov
jbe
jne
std
pop
shr
dec
ss
push
pop
xor
cmc
cld
mov
xorb
testl
dec
sbb
pop
jecxz
cld
mov
es
nop
inc
rcrb
xchg
push
and
fiadds
jb
pop
push
sub
pop
adc
sbb
fcompp
rolb
cltd
sbb
push
xchg
call
mov
in
lcall
jb
fwait
pop
test
inc
adc
xor
stc
mov
repnz
adcl
cmp
out
xlat
daa
lret
jecxz
cmp
imul
addr16
stos
cmp
ret
jns
test
sbb
and
cmp
scas
inc
pop
cld
xchg
mov
orb
pop
int
cmpsb
jmp
dec
dec
xchg
cwtl
xor
insl
jbe
incb
ss
sti
test
inc
out
arpl
xor
int
mov
int3
push
dec
xorb
in
push
push
test
push
iret
push
jmp
cs
mov
mov
dec
adc
in
or
icebp
in
jo
in
pop
mov
jae
fs
inc
shll
cli
test
outsl
jp
sub
call
mov
pop
pop
sub
repz
xor
outsl
cmp
push
in
mov
xchg
fs
aad
insw
mov
add
jmp
inc
mov
inc
cmovb
scas
add
xor
push
hlt
cmp
jno
mov
pop
pop
sbb
fldenv
mov
cmc
mov
pop
imul
and
loop
fcompl
in
inc
and
jecxz
ret
jg
ret
in
pop
xchg
jnp
inc
aad
jb
mov
sub
shll
stc
xor
sub
movsl
push
insl
pusha
pusha
mov
push
out
aam
sbb
bound
fcomps
mov
test
inc
rcll
add
popa
dec
ss
movl
push
test
fists
adcl
jne
cmp
inc
popf
sub
dec
and
jns
mov
and
stos
dec
xchg
xchg
jns
fucomip
cltd
dec
pop
cmpsl
in
inc
fs
sarb
outsb
mov
mov
cwtl
clc
pop
stc
in
jo
mov
mov
or
out
fiadds
mov
leave
mov
fisttpl
call
out
loop
int
xchg
xorb
dec
stos
ds
scas
imul
xor
inc
cmp
bound
add
mov
or
daa
jbe
sbb
pop
and
jle
int3
add
pop
or
sahf
inc
dec
icebp
lods
xor
lock
sbb
sbb
xor
dec
pop
dec
dec
das
inc
and
fdivrl
inc
pop
out
dec
in
jns
jno
inc
inc
mov
mov
repz
inc
into
dec
repnz
hlt
xchg
arpl
sub
or
fisttps
cmp
mov
sub
mov
push
and
pop
test
scas
fwait
jle
mov
jnp
mov
icebp
xlat
fcmovbe
stos
cltd
aas
fistps
push
cmp
pushf
int
mov
xlat
adc
mov
push
mov
out
je
imul
and
jno
cltd
mov
xchg
adc
mov
dec
and
and
mov
into
or
adc
jbe
daa
sbb
adc
jecxz
push
xchg
mov
jl
stc
xor
das
adc
inc
js
sbb
int
jnp
lods
pop
in
cmp
insb
in
stos
mov
lahf
icebp
insl
jb
repz
arpl
add
add
sbb
iret
mov
cli
test
sub
inc
cmp
jb
mov
add
mov
adc
dec
xlat
sbb
mov
add
mov
mov
mov
rorl
fldt
mov
jnp
lahf
jnp
sub
xchg
xor
cmpsb
mov
push
pusha
xchg
aad
int3
pop
movsl
xchg
loopne
xchg
iret
pop
call
sti
jmp
jge
xor
and
pop
sub
out
repz
cmp
push
pushf
es
sbb
hlt
lret
pusha
cli
stos
xchg
decb
int
xchg
das
and
jo
aaa
xchg
sbb
test
pop
push
fstl
or
pop
push
dec
fildl
push
arpl
sub
shlb
aad
pop
aad
mov
add
loop
lcall
pop
fstps
movb
jg
add
sub
mov
push
ja
or
xchg
xchg
aam
sbb
imul
mov
pop
mov
jnp,pt
outsb
push
lock
mov
cli
imul
pop
push
mov
cli
jmp
adc
inc
bound
lret
mov
jecxz
int
or
mov
pop
inc
js
push
jno
jecxz
inc
lods
push
popa
rcr
inc
xchg
jmp
sbb
lcall
arpl
cmpsl
addl
mov
rol
nop
ja
pop
aaa
js
iret
fsts
leave
or
enter
dec
xchg
mov
mulb
add
loopne
bound
or
pop
fs
out
sbb
jo
push
test
gs
cmp
fmuls
jmp
stos
mov
stc
xor
add
test
pop
orb
fldcw
cmp
adcb
adc
xor
out
add
lret
mov
imul
fmulp
call
hlt
lods
push
into
push
pop
or
stos
lds
inc
push
add
int3
jb
rcll
imul
out
lret
jnp
mov
test
xchg
int
mov
fcompl
push
cld
ficomps
jl
mov
fs
xor
loope
popa
shrl
popf
add
jnp
es
or
mov
popa
or
out
xor
enter
jge
in
push
rorb
jb
adc
push
shll
sub
cmp
and
in
inc
xchg
pop
leave
fsubl
mov
mov
int
dec
mov
mov
pop
lret
jl
iret
sbbl
mov
inc
icebp
mov
sub
test
mov
mov
jl
jge
mov
mov
clc
pusha
data16
ss
in
dec
cmp
xlat
jmp
insl
arpl
mov
xor
sbb
ja
mov
aad
push
out
pop
add
and
jl
sbb
mov
jns
fisttps
in
sub
dec
sub
stos
sti
cltd
call
subl
fstp
jmp
pop
or
stos
loopne
xchg
insl
inc
xorl
mov
in
ljmp
cmp
movsb
mov
filds
icebp
sub
cs
pop
mov
push
pop
inc
fs
jge
stos
inc
das
cmp
mov
daa
dec
cli
out
das
sub
test
cmp
fnstcw
sbb
rcrl
add
sub
cmp
in
in
dec
add
lods
imul
lods
aaa
popf
push
jg
mov
add
in
cmp
rep
aad
mov
add
scas
xchg
int3
xlat
sbb
sbb
dec
mov
push
mulb
gs
nop
ss
and
xorb
mov
xchg
sub
mov
les
fsqrt
and
or
inc
jns
addr16
or
scas
enter
mov
add
mov
popa
adc
out
push
cltd
mov
movsl
lcall
jmp
iret
mov
inc
outsb
testl
xchg
popa
pushf
inc
xlat
pushf
push
push
push
push
jmp
jnp
sub
xlat
push
mov
scas
fisttps
dec
dec
or
and
cmpl
imul
sti
mov
mov
sarl
push
pop
movsl
aam
test
icebp
push
and
and
push
lods
mov
sbb
out
ja
adc
xchg
addr16
sub
adc
inc
call
cmp
xchg
in
cli
int3
pop
testb
pop
fnstenv
sub
fsubl
add
jns
dec
sub
fisubs
dec
pop
mov
xor
popa
popa
mov
int
push
dec
and
nop
fs
jne
sbb
dec
cmp
push
call
add
repnz
cmp
filds
xchg
sbbb
mov
sti
jle
mov
inc
jb
mov
jne
ds
loopne
cmp
jbe
dec
enter
xlat
daa
flds
das
adc
adc
lods
insl
lods
mov
jbe
in
xchg
lds
and
adc
repnz
scas
mov
aad
dec
lods
loope
jmp
data16
or
and
sti
inc
or
jo
or
adc
daa
lret
cmpsl
scas
popa
scas
fldcw
push
cmpsb
sbb
adcl
and
lods
sub
mov
rcrb
mov
fsubs
mov
push
and
test
in
jle
dec
iret
leave
lods
pop
shlb
push
dec
mov
out
aam
xlat
sub
test
xor
xchg
pop
dec
xchg
cltd
cwtl
jg
hlt
dec
sti
adc
and
loop
fwait
pop
shll
jmp
push
out
rolb
in
mov
lds
dec
lahf
push
sub
aas
mov
fwait
arpl
add
shr
sbb
mov
cmc
adc
xchg
jecxz
dec
dec
arpl
es
inc
cmp
jno
sub
enter
sub
pop
adc
sub
pop
outsb
notb
fstps
or
dec
mov
fbld
jmp
inc
mov
inc
pop
call
xor
or
push
jo
bound
jbe
int3
mov
icebp
sub
sarb
xor
in
scas
push
imul
mov
arpl
jne
daa
repnz
pop
jp
fwait
push
cmpps
lds
subb
clc
js
adc
push
decb
shlb
xchg
scas
add
imull
sbb
lcall
pop
je
ret
xchg
xchg
repz
push
stos
lock
pop
adcb
xor
mov
adc
das
adc
cmpl
cmpsl
xor
hlt
push
andb
xor
jns
aaa
sbb
pop
sbb
mov
cmp
push
adc
das
dec
adc
add
push
pusha
sub
and
xchg
sub
mov
ljmp
xchg
jbe
adc
stc
lcall
add
shll
sub
add
mov
nop
mov
aam
aad
mov
and
ljmp
int
jmp
push
cmpsl
xchg
imul
enter
xor
inc
scas
adc
jecxz
jle
add
push
repz
daa
pop
and
inc
test
pushf
scas
stc
sbb
lea
push
andb
adc
fwait
lods
cmpsl
insb
mov
jp
es
les
push
sbb
cmpsb
xor
aas
loope
dec
mov
push
in
test
inc
xorl
mov
movsl
in
pusha
or
sbb
dec
cmp
pop
sub
mov
dec
mov
fildll
pop
pop
test
sbbl
aam
out
mov
loop
dec
cmp
mov
push
xchg
cmp
push
inc
jae
das
sahf
mov
lret
iret
push
jo
mov
mov
jno
insb
xlat
jge
pop
nopl
in
cmp
and
push
orb
pop
cmp
cmp
xor
push
push
popf
or
push
in
ret
push
not
xchg
aad
or
mov
fistl
sbb
je
pop
pop
rcrb
sub
push
popa
fs
or
inc
sbb
jb
pop
roll
lock
outsb
inc
scas
cmpsb
push
test
es
dec
sbb
cld
cld
std
push
adc
push
or
add
int3
mov
loope
pop
in
lods
mov
mov
nop
add
incb
das
fldl
leave
cld
or
xlat
out
dec
mov
ret
pusha
scas
std
push
sub
subl
push
or
inc
lods
or
mov
xlat
and
xlat
gs
mov
xchg
jb
sbb
jg
sbb
pop
aam
add
pusha
sahf
hlt
ss
jbe
xchg
popf
jb
cltd
jmp
rcl
xlat
addr16
pushf
fwait
dec
test
inc
mov
je
xor
shll
ret
push
inc
jo
scas
jl
dec
mov
push
adc
or
into
cmpsb
out
ss
int
sub
popa
mov
adc
sahf
rcll
cmc
add
or
out
stc
rcrl
shlb
cmp
jge
fs
adc
pop
test
add
jp
cmpl
aad
cmpl
sti
jecxz
cmp
mov
mov
add
repnz
add
mov
jnp
push
fdivl
mov
les
jb
push
pop
jecxz
and
fxtract
cmp
cmp
cwtl
ja
lret
sbb
int3
ljmp
push
or
xchg
cld
adc
pop
imul
ljmp
sbb
mov
mov
aad
sar
add
dec
dec
dec
hlt
push
jp
xor
pushw
adc
or
mov
pop
lds
movsb
mov
idivl
ret
aaa
jnp
push
or
out
sbb
mov
out
xlat
decl
cmp
lds
mov
and
enter
fld
scas
jne
and
mov
sub
mov
icebp
out
shlb
cmp
dec
mov
pop
aas
les
movsb
aam
divl
mov
cli
sbb
outsl
jle
std
call
push
xlat
mov
adc
jns
sahf
jle
adc
push
jecxz
shll
push
xor
xchg
and
push
dec
sbb
shrl
insb
and
in
mov
fwait
fwait
mov
pop
or
and
push
jb
mov
pushf
lock
or
xchg
in
push
sbb
pop
xchg
jns
xchg
sub
lea
sub
cmp
xor
scas
scas
dec
shr
push
mov
in
xchg
xor
cmp
mov
sahf
pop
jbe
ljmp
push
hlt
xlat
inc
out
sbb
fnstsw
ret
xchg
inc
sbb
cmpl
cmc
cmpsb
dec
xchg
dec
mov
jle
dec
mov
insl
pop
lea
cs
cmp
jge
int3
sub
incl
mov
adc
inc
dec
jbe
inc
inc
scas
push
insl
sahf
jbe
xchg
jle
into
lret
movsb
jne
repnz
lock
jmp
fisubrs
lahf
mov
mov
mov
xchg
xor
loopne
jo
pushl
lret
xor
push
mov
xor
nop
mov
jmp
loopne
je
xor
inc
jp
xchg
mov
mov
push
loopne
sub
subb
cld
push
std
jg
ljmp
fcmovnb
cmc
inc
add
fnclex
sub
movsb
out
cmp
mov
mov
pop
adc
add
xor
in
push
decl
fwait
aas
lock
aam
push
mov
in
lea
or
es
or
stos
sbb
mov
js
xchg
popa
xor
mov
cmpsb
loop
inc
mov
jg
sbb
jns
lock
repz
inc
or
add
adc
push
loop
inc
fisubrs
sbb
movsl
jecxz
outsl
inc
lods
imul
pop
mov
pop
iret
lcall
scas
fldt
insb
mov
mov
xlat
out
movsl
push
sahf
lds
test
inc
imul
scas
mov
imulb
out
jb
mov
test
bound
mov
mov
dec
pop
jbe
loope
addb
push
mov
mov
ret
jns
neg
inc
ror
jne
mov
dec
lock
mov
mov
scas
movzwl
test
lcall
add
dec
icebp
push
mov
fdivrs
dec
mov
mov
test
fs
xchg
pop
dec
pop
test
mov
movsb
mov
cmp
js
repz
add
aas
mov
fsubs
xchg
xchg
in
mov
dec
jnp
nopl
cli
adc
pushf
mov
sbbb
pop
mov
fimuls
int3
add
inc
imul
orb
xor
mov
and
pop
arpl
hlt
repnz
adc
and
dec
ret
jg
pop
movsl
mov
cltd
mov
cmpl
mov
lret
cmp
lcall
sub
popa
loope
xor
es
xor
push
cli
or
push
leave
daa
sub
or
pop
xchg
add
mov
pop
or
push
jle
fildl
lcall
mov
test
pop
mov
nop
adc
cmp
in
mov
sbb
andb
lcall
lcall
and
inc
pop
es
sarl
stos
pop
cmpsb
inc
mov
add
cmp
jp
mov
jge
mov
les
mov
adc
xlat
jp
std
pop
scas
inc
leave
jle
leave
inc
sub
stos
mov
adc
and
les
xor
fdivs
pop
loope
xchg
mov
notb
xor
in
fdivrp
mov
add
and
lahf
pushf
cmp
rcl
test
imul
and
aaa
iret
inc
insb
cmp
repnz
mov
lods
push
sbb
cmp
rcll
data16
and
or
pop
lods
cmc
fmull
hlt
and
testl
cmp
sub
inc
scas
outsb
pop
mov
cs
in
sbb
jnp
out
imul
leave
enter
stos
roll
xor
or
pusha
jbe
clc
adc
inc
mov
in
dec
and
xchg
cli
mov
push
xor
jnp
inc
pop
pop
jecxz
cli
cmpsl
mov
shl
add
mov
push
testl
sahf
sbb
arpl
icebp
xchg
mov
outsb
icebp
les
pop
and
pop
push
enter
stos
jne
add
xor
jnp
or
mov
push
jnp
cs
in
scas
sub
lcall
addr16
outsl
lcall
loop
xchg
lock
mov
test
dec
mov
xlat
mov
add
rolb
vmovq
jno
mov
bound
xor
insb
test
mov
fidivs
inc
fwait
cmpsl
xchg
jl
sbb
imull
ret
sub
loope
add
sbb
mov
ss
mov
imul
ljmp
sub
insl
nop
fs
movb
jo
push
lret
jecxz
cld
mov
rcrl
outsl
cmp
test
idivb
lcall
mov
movsl
out
fstp
ja
adc
fwait
imul
ja
ret
adc
loop
test
in
inc
cld
aad
stos
inc
bsf
mov
push
outsb
inc
sub
sbbl
pop
push
call
lock
inc
cmc
jns
les
mov
jne
cmp
fstpl
jbe
loope
xchg
ja
sub
movsb
xorl
xor
jbe
inc
inc
fs
cli
stos
or
cmp
jns
cmpsb
fldt
stos
cld
clc
sbb
gs
and
cmp
dec
out
or
mov
pop
mov
fisubrs
loopne
pushf
int
or
pop
inc
int
or
jnp
cmpsl
dec
loope
es
std
mov
jmp
in
mov
push
flds
clc
sti
mov
das
sbbl
sti
mov
outsb
fsubrp
sbb
and
mov
adc
adc
movsl
aaa
push
mov
das
push
in
ret
repnz
fnsave
mov
or
push
test
lahf
negl
subl
add
sub
cmpsb
and
adc
lret
mov
jo
jae
lea
dec
or
mov
sub
sub
mov
subb
push
hlt
jns
pop
pop
adc
pop
cmp
cmpsl
pop
mov
push
ljmp
clc
and
push
pop
addr16
mov
and
jmp
mov
dec
inc
xor
mov
cmp
mov
xor
add
lahf
xchg
mov
int3
jo
xor
lods
repnz
bound
cmpsl
pop
or
xchg
mov
mov
aad
sahf
mov
jnp
jmp
mov
push
in
xchg
sub
fcmovnu
ds
fildl
insl
xchg
push
jp
push
mov
hlt
sbbl
cwtl
pop
sbb
jp
jno
imul
jmp
repz
mov
mov
ret
jo
push
es
pop
jecxz
mov
push
jbe
out
pushf
push
inc
xor
adc
pop
test
push
xchg
mov
push
out
stos
pop
xchg
cli
pusha
js
or
mov
loopne
cwtl
jmp
pop
push
fwait
and
out
cltd
ljmp
add
insb
inc
insl
fistl
into
or
pop
jbe
leave
xchg
mov
jmp
call
test
pop
pusha
out
test
or
ret
rorl
lcall
scas
xchg
shll
daa
xchg
jmp
jbe
sahf
jp
out
insb
test
and
and
mov
ficoms
cmpsl
ljmp
dec
mov
or
icebp
pop
dec
push
sub
lret
fs
push
das
pop
stos
bound
dec
imul
loopne
daa
mov
lods
ja
loope
pop
sub
jge
add
cli
stos
dec
outsl
mov
mov
jae
div
xor
mov
xchg
mov
and
adc
out
icebp
aaa
push
arpl
push
jge
rolb
jp
xchg
jg
and
mov
fidivrl
call
jo
add
cmp
data16
sub
addr16
adc
or
arpl
dec
xchg
xor
je
cmp
popa
es
lahf
mov
or
mov
in
cs
xor
es
enter
arpl
push
sub
test
sbb
mov
ret
insl
ret
popf
dec
jo
jmp
in
jl
adc
iret
inc
cld
fistl
mov
movsb
fst
fwait
ja
xchg
xor
mov
and
and
pop
pop
addb
int
pop
push
shll
sbb
and
das
in
cltd
pop
add
push
cltd
cs
rcrb
in
and
add
push
push
cmp
arpl
add
imulb
sar
xor
ds
je
into
nop
cmc
mov
aas
fdiv
mov
mov
addl
fldl
jp
repz
mov
lea
dec
call
xor
inc
pop
jle
or
jge
or
mov
ja
and
adc
lds
outsb
fs
xor
cmp
dec
xor
shr
xchg
inc
mov
mov
stos
push
pop
movsb
sbb
lcall
mov
xor
lods
add
test
mov
pop
cmpsb
mov
push
and
and
or
and
lahf
js
jmp
xor
mov
popf
stc
mov
fxch
mov
jnp
pop
fstpt
add
sbb
lock
aas
mov
stos
push
fildll
inc
stc
inc
sbb
or
xchg
outsl
mov
push
lds
pusha
int3
lea
jp
xchg
nop
loopnew
lret
aad
loopne
jb
cld
ss
mov
jns
mov
xor
jmp
shrl
pusha
fwait
outsl
outsl
divb
daa
out
mov
cmpsl
pop
insl
cltd
fildll
jnp
xorb
loop
jne
or
push
jge
sbb
dec
adc
pop
cmp
scas
clc
push
mov
aad
fwait
out
or
int
data16
loop
fcmovbe
jle
add
mov
push
jmp
sbbl
push
mov
dec
mov
mov
out
outsb
dec
sbb
mov
jmp
sbb
xchg
loop
adc
mov
pop
into
sub
test
xlat
lahf
xor
lcall
addr16
insl
push
inc
jg
popa
out
pop
out
push
xchg
cmp
sbb
mov
xchg
in
daa
rcrl
lea
cmpsl
jb
inc
ret
mov
mov
mov
push
adc
out
fldt
stc
inc
push
inc
xor
mov
mov
mov
outsl
fistpl
dec
or
mov
data16
cmp
mov
addr16
add
sbb
pop
out
pop
inc
sahf
xchg
pop
lods
cmpsl
aad
jo
push
fs
popa
popa
mov
mov
lock
lock
push
movsb
cmpsb
popa
loop
cmp
lcall
adc
fistpl
lods
das
mov
mov
xor
push
mov
aaa
mov
outsl
clc
mov
in
icebp
mov
aam
or
or
push
xchg
aaa
call
outsl
xor
imul
cld
aad
aas
cs
cmc
imul
addb
adc
sbb
in
adc
cmpsl
into
and
icebp
or
fwait
insl
jle
test
pop
mov
xor
xchg
pop
cwtl
mov
rcrl
rcll
xchg
stos
insb
js
sub
jns
mov
test
inc
arpl
dec
cmp
lret
push
leave
gs
test
mov
jne
hlt
ret
cmp
clc
mov
jbe
inc
dec
in
push
cmp
xor
xlat
or
stc
pop
pop
sbb
jb
jecxz
into
into
jmp
cli
fidivl
std
repnz
and
inc
dec
dec
loope
jns
ljmp
mov
test
mov
andl
mov
enter
lret
stos
jo
jmp
shl
or
mov
adc
adc
dec
mov
das
jo
jmp
popa
cltd
mov
dec
push
das
lahf
lret
xor
ficoml
mov
mov
les
mov
sbb
add
test
and
jb
rcl
mov
mov
mov
cmc
in
push
push
inc
adc
push
dec
inc
jmp
pop
setl
mov
adc
mov
mov
add
mov
int
int3
insl
out
pop
fldenv
mov
sub
enter
in
dec
mov
sbbb
imul
movsb
pop
int3
fisubl
in
push
push
cmp
stos
mov
fnsave
stos
out
adc
mov
adc
sub
xor
call
add
push
mov
loop
mov
xchg
and
repnz
jb
pop
insb
popf
insl
jb
cli
js
xor
lods
xchg
lea
pop
std
fdivl
xchg
inc
xchg
in
int
imul
leave
insb
cmp
shr
sbb
testb
aad
rcl
popw
xchg
cmpsl
xchg
lahf
mov
push
loope
leave
cld
and
loope
mov
sub
inc
pop
inc
xchg
pop
adc
sbb
push
cmp
mov
aaa
push
mov
xor
rorb
movsl
jle
xor
dec
mov
mov
mov
adc
aad
addr16
mov
jl
ss
mov
pop
or
outsl
jmp
fucompp
leave
jnp
sbbb
std
stos
xchg
scas
lret
dec
jae
stos
les
sub
lret
fadds
xor
loop
xchg
sti
shll
fnstenv
or
movsl
test
and
sahf
loop
add
mov
mov
lock
jp
outsb
mov
stos
ret
push
ss
push
cmp
xchg
outsl
por
jecxz
push
pushl
daa
sub
ffree
lcall
push
cmpsl
scas
sbb
aam
ss
enter
pop
cmp
and
pop
lcall
adc
and
arpl
lret
loope
adc
fnstenv
xchg
push
jmp
sub
jge
std
loop
inc
aaa
neg
test
std
xchg
or
testb
clc
pusha
adc
nop
loopne
inc
out
push
mov
lret
mov
loope
notb
mov
xor
aaa
aaa
add
lea
and
setae
rcrl
adc
or
xchg
icebp
xor
mov
sarl
jno
popa
data16
mov
shrl
xor
sub
test
fiaddl
push
nop
or
mov
add
in
imul
sub
bswap
jp
cwtl
cmc
adc
jl
sahf
dec
mov
call
dec
clc
cmp
inc
jb
ljmp
cmp
and
pop
cmp
inc
cmp
sbbl
push
aam
sub
jl
xchg
or
lret
and
mov
xor
xlat
pop
and
sti
pop
sbb
sarl
mov
sbb
cmpsl
jbe
fwait
ds
cmp
push
imul
fnstenv
inc
inc
jl
imul
in
and
dec
xchg
shll
cmp
jle
cli
or
icebp
dec
mov
test
arpl
jae
mov
xchg
imul
inc
xchg
lret
pushf
mov
inc
pop
mov
rolb
dec
ljmp
mov
jp
xchg
and
xchg
addb
pop
xchg
sahf
inc
inc
xchg
cs
or
ret
jns
jo
mov
outsl
and
stos
inc
fcmovb
lea
push
inc
fadds
xchg
pop
jmp
lea
push
shrl
das
or
mov
test
add
push
ljmp
push
adc
pop
mov
or
bts
lea
push
xor
mov
push
xor
xchg
dec
ret
shrb
sub
push
aaa
xchg
push
inc
test
fwait
xchg
shlb
cltd
outsl
jbe
or
frstor
testb
sti
or
xchg
add
cmp
inc
lret
pop
xor
in
cmp
adc
add
fisttpl
sub
movsl
int
shll
push
cmp
fimuls
dec
and
lock
lahf
mov
add
and
push
jb
lahf
pusha
inc
fwait
lea
dec
xchg
push
in
imul
dec
iret
xchg
inc
frstor
call
loope
lret
repnz
jmp
jns
pushf
in
mov
ret
mov
data16
in
sub
outsb
ljmp
ss
jo
jae
sbb
adc
sbb
test
mov
ret
add
enterw
mov
lods
cs
out
mov
push
shrb
cli
inc
stos
adc
add
insl
add
pusha
bound
xchg
jnp
or
enter
popf
test
add
dec
mov
lcall
int
out
aaa
adc
inc
test
jno
cmpsb
inc
shlb
inc
out
jmp
icebp
inc
fisubrs
nop
es
outsb
inc
mov
mov
adc
outsl
in
mov
mov
jmp
lds
push
repz
inc
and
cli
and
mov
push
cmc
out
pop
test
aaa
dec
xchg
sti
repnz
push
test
push
cmpsl
xchg
shll
shlb
adc
ljmp
cmp
push
negl
push
out
out
mov
int3
cmp
rorl
lock
mov
cmpsb
mov
and
ds
push
loop
push
jne
jg
sbb
mov
and
push
mov
mov
and
mov
mov
add
xlat
mov
lods
pop
or
movsb
add
fldt
lret
pusha
dec
dec
adc
in
pop
jge
mov
fistps
mov
insl
jae
push
sbb
adc
into
mov
add
xchg
js
fisubrs
fmull
mov
jo
scas
repnz
inc
mov
mov
fbstp
icebp
test
loopne
or
sub
lods
dec
xchg
pop
mov
popa
pop
adc
rcl
imul
out
loope
mov
ds
lret
sbb
icebp
jno
mov
nop
jg
enter
out
leave
test
and
mov
arpl
mov
pop
sbb
cltd
scas
aam
jns
lea
test
out
mov
cmp
push
lods
push
xchg
xlat
pusha
mov
test
and
sbb
sahf
xchg
into
flds
push
or
mov
or
arpl
or
pop
inc
insl
movsl
cmpsl
mov
sti
ret
jge
mov
test
inc
jge
fadds
or
out
push
xor
mov
test
loop
in
xchg
inc
lret
cmp
icebp
inc
jl
stos
mov
lret
aas
ds
mov
dec
aas
adc
movb
lret
popf
xchg
out
mov
sub
lret
inc
es
fisttpl
xchg
mov
fcmovnbe
sub
or
mov
out
imul
fistps
or
test
in
adc
xor
xchg
adc
inc
enter
xor
jb
mov
pop
xchg
jnp
fisubrs
xchg
inc
xor
adc
push
xorb
out
nop
popa
popa
pop
into
fisttpll
mov
daa
push
popa
fsubrl
mov
mov
add
inc
jmp
sub
dec
sbb
mov
xor
in
add
rcll
mov
fcmovnu
mov
icebp
sbb
adc
mov
into
movsl
insl
cmpsl
jb
fcmovnbe
or
push
mov
push
xor
stos
bnd
jbe
dec
sahf
adc
and
test
push
and
outsl
lock
ds
jb
mov
add
add
mov
fxch
add
mov
dec
gs
out
mov
push
xchg
jge
loope
inc
inc
mov
fisubl
loop
loope
mov
inc
inc
mov
lods
idivb
or
lcall
fstpt
fdiv
sub
cld
insb
ja
cmp
jne
das
adc
lahf
jecxz
outsl
outsb
sub
arpl
mov
adc
mov
out
test
fbstp
fistps
inc
test
sub
xchg
push
and
mov
adc
xchg
pop
enter
std
push
imul
add
mov
cmp
xchg
mov
stos
lds
lods
sbb
cltd
sbb
pop
cmp
decl
mov
pop
xorl
adc
adc
out
inc
xor
lock
sbb
int
or
xorl
cmpsb
iret
lds
dec
lret
pop
popf
scas
sti
mov
lods
cwtl
jecxz
push
mov
outsb
nop
stos
in
ret
mov
adc
movsl
push
push
adc
out
dec
rorl
idiv
inc
push
mov
aam
push
insb
sub
in
bound
jae
push
jns
fdivl
mov
repnz
adc
ljmp
jle
jge
clc
call
sub
ffree
cmp
push
lds
xchg
add
cmp
jmp
out
dec
icebp
shrb
test
sbb
clc
scas
jb
mov
mov
outsb
outsl
movsl
sti
enter
loope
ret
push
mov
adc
or
das
xchg
sub
js
test
and
mov
outsb
dec
sub
lods
mov
push
das
shl
xchg
push
xchg
or
lock
cmpsb
inc
fwait
jmp
test
outsb
rorb
test
cmp
icebp
movsb
fadd
out
jbe
mov
imul
aad
lea
popl
repnz
cld
jae
iret
fdivs
xchg
jbe
xor
pop
cmp
jno
jo
add
insl
aas
push
sub
mov
push
push
jb
sub
mov
repnz
pop
mov
add
mov
push
scas
test
push
xchg
ret
sbb
mov
dec
mov
add
stos
testl
jae
call
enter
test
sub
lea
dec
fisubrl
adc
jb
loope
sti
mov
in
stos
jge
xchg
or
cli
hlt
push
xchg
fsubs
push
dec
sub
push
outsl
arpl
jnp
nop
xchg
out
inc
fwait
jb
imul
xchg
xchg
and
adc
sub
pop
lea
dec
xlat
cwtl
dec
mov
std
shrb
movsb
xchg
movsb
add
sti
xchg
orl
inc
cmp
movsl
mov
fimuls
sbb
cmc
lds
jne
stc
push
sahf
into
scas
sbb
sbb
pop
pop
nop
andl
ss
int
sub
cmp
push
mov
inc
sub
xorb
sbb
mov
cmp
push
sbb
adc
xchg
jl
inc
iret
and
in
loop
outsb
das
aad
sbb
cli
or
in
push
adcb
int
andb
xor
movsl
sub
xor
ficompl
mov
stos
jbe
inc
push
movsb
push
repz
xchg
movsb
or
icebp
mov
popa
in
outsb
loope
dec
jno
mov
dec
push
out
push
add
sarl
dec
hlt
cwtl
clc
add
aaa
das
mov
shlb
in
movsl
sub
inc
test
inc
repz
push
pop
inc
imul
inc
adc
loopne
push
pop
lret
fcompl
add
shrl
out
in
mov
jo
jmp
fnsave
nop
mov
mov
mov
mov
xchg
sbb
mov
xchg
xchg
inc
out
test
loopne
pop
adc
outsl
and
stos
std
pop
jg
xchg
arpl
xor
scas
dec
nop
sub
fidivrl
scas
pop
mov
ffreep
outsb
popf
push
mov
sub
push
stos
mov
cld
mov
jnp
lcall
jne
cld
loopne
fcoml
repz
mov
mov
mov
loopne
pop
jb
outsl
dec
lock
cmpsb
adc
enter
imull
out
nop
das
cmp
outsl
adc
imul
iret
pop
outsl
lret
adc
or
hlt
adc
sbb
xor
repnz
clc
jae
jo
jmp
outsb
mov
jmp
rcr
jmp
and
or
inc
inc
push
je
mov
bound
mov
das
and
sbb
or
daa
es
out
push
mov
mov
into
cli
in
xchg
cli
nop
mov
ds
xchg
push
mov
outsl
in
pop
sbb
inc
or
out
dec
mov
cli
ret
aaa
cmp
inc
inc
mov
push
add
sbb
pop
rcr
rclb
enter
enter
out
jns
and
mov
bound
in
fcoml
cmpl
popa
ret
clc
bound
out
cmp
sub
sub
mov
punpckhbw
int3
cld
ds
movsb
call
jg
cmp
sbb
fs
lcall
int3
roll
sub
movsl
scas
cmp
fldcw
push
or
jo
stc
or
repz
inc
cmp
dec
xor
or
int
inc
mov
dec
sub
movsb
jnp
mov
sub
mov
test
cmp
mov
or
pop
or
mov
iret
push
cmp
mov
adc
mov
test
pop
std
xor
cmp
mov
ret
jmp
imul
test
jmp
mov
push
call
mov
movsl
addr16
push
jmp
sbb
mov
lahf
gs
negl
xlat
sub
pop
pop
add
jmp
mov
jb
cli
sub
outsb
add
pop
push
cli
sub
push
cmpsb
push
or
test
ret
out
mov
jo
push
ds
or
mov
jge
xchg
clc
fs
dec
out
dec
movsl
hlt
dec
fsub
pop
mov
xor
cmpsl
pop
dec
sti
sbb
lahf
hlt
pop
insb
hlt
sarb
sub
ret
cmp
mov
push
repz
fnstcw
pop
or
lcall
shlb
mov
pop
mov
dec
es
icebp
mov
jp
and
xlat
cli
repnz
jle
push
pushf
lea
lods
cmp
nop
repz
mov
mov
cmp
xchg
xlat
jmp
cmpsl
ja
cltd
adc
pushl
jmp
or
fwait
cmp
daa
and
das
lahf
lock
push
push
xchg
das
repz
icebp
movsb
outsl
sbb
push
push
and
into
sub
xor
fs
mov
xchg
mov
movsl
dec
orb
cvtdq2ps
je
arpl
test
cmp
lret
inc
push
icebp
scas
push
sub
xor
sbb
cmpsb
xchg
outsl
int
adc
add
testb
insl
pusha
pusha
or
pop
push
xchg
sub
add
leave
xchg
test
pop
pop
adc
push
cmc
nop
addb
dec
or
cmp
inc
or
test
xchg
xchg
cwtl
and
jb
mov
push
push
cmp
or
pop
push
cld
into
sbb
rcr
adc
fdivr
lcall
lods
push
ret
loopne
push
lods
and
and
loopne
inc
int
adc
sub
xorl
dec
cmp
add
pop
cld
fwait
sbb
xchg
xchg
cmpl
sbb
ret
aad
inc
jo
pop
shll
std
pop
inc
hlt
pop
lea
and
rcll
mov
jle
lock
fdivs
repz
frstor
lret
dec
sbb
pushl
adc
mov
mov
into
iret
negl
cmpsl
outsl
jbe
lods
push
xchg
aas
push
push
and
mov
jecxz
mov
sub
fmuls
or
dec
mov
shrb
mov
inc
mov
push
cli
jecxz
pop
jle
dec
inc
xor
pop
sti
cld
ret
or
and
pop
ljmp
pop
in
push
sub
xchg
cld
push
or
addr16
movsb
xor
test
pop
push
loopne
flds
stos
rcrb
insb
pop
mov
sbb
fwait
rolb
icebp
jl
pop
inc
js
fldcw
outsb
out
test
adc
in
dec
push
sti
ret
sahf
jp
in
sub
push
lea
adc
repz
xchg
fsubp
and
addr16
and
adc
xchg
ljmp
cmpsb
mov
jns
cli
std
imul
adc
cmp
rolb
lret
dec
ror
lods
adc
xlat
out
xchg
inc
pop
dec
loopne
jno
pop
sub
popa
out
xor
jo
aad
pop
test
movsl
adc
stos
popf
subb
xor
cwtl
jne
int3
cmc
sbb
jb
ror
xchg
jns
sbb
stc
cli
mov
sbb
popa
xchg
or
int
stc
cmc
adc
movsb
psubsw
jmp
loop
ss
subl
adc
inc
push
mov
fwait
mov
mov
cmp
jo
jnp
sbb
adc
dec
aas
ja
jo
sarl
test
in
add
out
insb
jns
loopne
jmp
bnd
test
shll
jp
or
insb
jno
ljmp
shll
outsl
inc
cs
mov
fdiv
repz
push
mov
nop
push
das
lea
push
pushf
loop
in
fadds
push
in
pop
inc
jg
sub
and
sub
mov
push
jnp
xor
push
lods
push
ljmp
inc
cmpsl
xor
xchg
call
inc
loopne
or
inc
xchg
jno
js
pop
fnstenv
lahf
adc
bnd
push
cmp
adc
int
lret
cmpsl
in
lods
mov
fcoms
aam
sub
aaa
paddw
and
add
jg
dec
dec
and
aaa
xchg
or
jnp
mov
pop
movsl
sbb
adc
cld
cmp
aas
ljmp
sbb
mov
add
scas
cmp
mov
pusha
sbb
shl
mov
sbb
cmp
fldcw
mov
addr16
add
push
lcall
xchg
movsl
mov
mov
imul
adc
sbb
das
sub
adc
lds
add
add
fdecstp
add
sub
rolb
repnz
stos
xchg
sarb
test
mov
insl
clc
shrb
insb
ret
movsl
mov
stos
hlt
dec
leave
and
mov
inc
push
xchg
adc
test
aaa
dec
inc
xchg
add
subb
xor
jae
imul
and
mov
inc
ljmp
int
das
dec
ficompl
push
xchg
push
and
movsl
add
in
out
mov
mov
lcall
vpsubsb
lcall
ret
mov
int3
in
dec
mov
addr16
adc
mov
and
push
pop
shl
or
jne
push
mov
outsl
mul
pop
jmp
pop
add
push
scas
movsl
mov
pop
pop
or
mov
cvtps2pd
lahf
aaa
jno
lea
pop
stc
shlb
jo
sub
jne
xor
jle
adc
jmp
pop
pop
js
sub
cld
insl
andl
dec
and
inc
ret
in
mov
sub
pop
pop
insb
push
mov
push
cmp
and
icebp
cmc
aas
ljmp
mov
sbb
mov
loop
sub
out
xchg
aam
cmpb
dec
ficoml
cmc
ret
cmp
push
mov
call
pop
sbb
or
jmp
std
test
cmpl
dec
cbtw
jl
jg
cld
push
pop
sbb
aam
stc
xchg
adc
push
mov
sbb
xchg
mov
sub
inc
fidivs
sbb
lods
inc
jne
sub
filds
mov
cli
mov
nop
xchg
dec
jmp
xor
mov
icebp
mulb
pop
pop
dec
test
inc
xor
mov
pop
add
mov
push
lcall
sub
inc
push
js
xchg
and
jmp
adc
xor
dec
push
fdivr
sub
imul
lahf
mov
out
mov
pop
inc
cmp
lahf
clc
fwait
push
xchg
sbb
xor
mull
and
push
or
or
fsubrl
inc
or
or
cltd
aas
dec
cmpsb
mov
pop
das
add
cmp
push
cltd
xchg
adc
leave
insb
mov
jae
cmp
in
shll
mov
push
icebp
roll
fidivs
int3
dec
or
and
sub
or
sub
xor
push
sbb
frstor
sub
cmp
dec
rorl
xchg
pop
adc
sbb
outsl
xlat
pop
out
mov
scas
pop
data16
add
and
ds
dec
pop
mov
int3
mov
out
out
mov
push
cmpsl
xchg
sub
add
add
xor
add
out
pop
cld
sbb
sub
sbb
into
sbb
cmp
cmp
sbbl
loop
push
jecxz
and
add
jl
add
hlt
outsl
inc
inc
lahf
sub
pop
lock
mov
mov
ror
cmpl
or
push
push
jg
sub
mov
add
arpl
xchg
je
stos
test
hlt
pop
mov
mov
das
sub
rcrl
sahf
sub
loopne
mov
jae
lret
fisubrs
xor
insb
imul
mov
mov
mov
push
popa
loopne
cli
out
clc
scas
xchg
rol
mov
adc
shll
out
test
stc
adc
or
in
adc
das
out
inc
movl
adc
je
test
stc
leave
xor
sbb
push
xor
mov
mov
inc
pop
mov
and
fdivrp
add
add
sub
xchg
out
aad
mov
cld
test
jge
cltd
stos
sub
ficoml
xchg
bound
cmp
xchg
ljmp
pop
stos
xchg
out
popa
call
enter
imul
test
pop
int3
cmp
flds
cmpsb
mov
push
loop
inc
pushl
push
ret
inc
push
das
cmp
andb
mov
aas
rolb
push
js
pop
pop
or
mov
sbb
cmp
incb
jecxz
testl
xchg
test
xchg
adc
xchg
push
cld
dec
mov
cmpsb
pop
jae
je
or
jne
push
fimuls
xchg
push
mov
sub
mov
xchg
push
fldcw
sbb
repz
pop
jg
gs
out
fstl
push
sub
enter
roll
pop
push
cmp
nop
inc
es
mov
ljmp
mov
test
imul
sub
negb
xchg
mov
fistps
fwait
lcall
lea
call
add
push
or
mov
lret
daa
cmpsl
ror
jge
sbb
icebp
push
sub
popa
out
in
mov
push
add
or
clc
popa
sub
push
xor
out
mov
lods
movd
dec
sbb
and
nop
dec
xchg
jb
je
in
add
sub
mov
xorb
cmpsb
cltd
stc
jne
xchg
dec
lods
leave
xchg
test
mov
push
xor
stos
push
and
incl
mov
mov
mov
mov
adc
or
sbb
push
pusha
mov
sub
ret
call
sbb
mov
dec
daa
cmp
and
xchg
pop
jnp
mov
call
mov
jle
sub
in
inc
sbb
out
lret
lock
mov
add
test
jge
pop
dec
inc
repnz
mov
shrl
fistl
in
dec
stos
out
mov
out
pop
sub
data16
sub
fdiv
test
mov
cmp
mov
mov
mov
and
addr16
sbb
popa
mov
out
sub
test
inc
cmp
xchg
cmpsl
mov
jge
in
cmp
xor
mov
push
fadds
push
fists
inc
outsl
xchg
dec
pop
and
jo
cwtl
nop
dec
push
pushf
clc
imul
mov
xchg
test
mov
mov
push
push
push
xchg
xchg
fiadds
sub
push
sahf
sti
xchg
lcall
fdivrs
imul
push
inc
xchg
xorb
xlat
jge
and
xchg
rcll
mov
inc
push
test
and
dec
mov
icebp
add
fstps
pop
stos
xlat
arpl
push
loope
je
cmp
out
das
je
sub
stos
or
add
testb
jle
test
mov
xchg
xlat
ficoml
daa
cmp
mov
loope
cld
cltd
push
das
xor
shlb
sbb
or
aaa
jmp
test
xchg
test
addr16
out
jbe
daa
testb
dec
push
into
pop
scas
std
mov
sub
add
in
sahf
mov
cltd
daa
mov
ret
leave
testb
jno
es
sub
inc
leave
pop
and
fwait
in
frstor
in
cmp
pop
cmp
enter
xchg
push
lcall
sbb
outsb
or
cmp
dec
enter
xchg
cmpsl
adc
mov
sti
lds
mov
fnstenv
lods
pop
rcrb
pusha
jae
jmp
pop
mov
imul
add
popa
out
out
push
sahf
push
mov
das
add
mov
iret
je
adc
aaa
mov
addr16
add
add
jp
lahf
and
and
mov
or
xor
and
es
loop
cmp
imul
ss
and
mov
mov
fnstsw
arpl
out
jp
paddusb
pop
incb
jo
jp
xchg
test
stos
or
insb
flds
ret
insb
hlt
mov
xchg
bound
mov
pusha
cwtl
incb
push
cli
imul
pop
push
ret
mov
in
faddl
int
xchg
adc
sbb
bswap
mov
mov
out
jecxz
pop
dec
clc
in
inc
repz
add
push
xchg
pop
popa
out
lea
inc
dec
push
mov
and
cmp
in
inc
mov
sahf
lods
mov
lods
in
xlat
gs
stos
mulb
xchg
xor
cltd
push
sbbl
cmp
icebp
sub
fs
popa
add
dec
sbb
xchg
and
dec
jp
lret
mov
mov
mov
lea
mov
cltd
adc
mov
data16
imul
adc
push
subb
sbb
fistps
aas
mov
xor
jae
xchg
or
shlb
popa
mov
sbb
xor
fldcw
gs
lds
sub
pop
mov
movsl
jnp
leave
mov
inc
jne
adc
push
js
cmc
inc
mov
jle
lret
xchg
mov
mov
sbb
inc
cmp
adc
stc
add
int
xchg
leave
loope
sbb
mov
es
xor
shrl
and
xor
sub
pop
jge
push
cld
jo
or
rcr
mov
ds
adc
adc
daa
enter
ffreep
int
push
rcrl
push
cmp
mov
cli
lret
jns
pop
pop
fs
pop
jo
dec
mov
mov
push
test
pop
mov
je
das
cmp
or
stos
cmp
popf
mov
pushf
mov
pop
xor
jbe
push
pop
mov
and
ljmp
jnp
shrb
mov
pop
jo
pop
jbe
enter
xchg
push
dec
add
rorl
and
arpl
test
xchg
jne
dec
ss
sbbl
xchg
outsb
iret
dec
bound
and
sar
push
lret
jo
repnz
arpl
inc
insl
shlb
sub
sbb
ja
mov
popa
jbe
add
dec
fisubs
ja
outsl
pop
ret
in
fs
lock
stos
or
outsb
shlb
cli
mov
scas
in
push
pop
push
sub
mov
out
and
lahf
fs
rcrl
sahf
adc
hlt
dec
daa
fistl
push
shll
pop
das
daa
pop
das
cmp
add
rcrb
mov
cwtl
mov
mov
out
ss
rcrl
pop
mov
mov
sub
gs
push
scas
inc
dec
push
mov
xchg
mov
mov
mov
outsb
add
icebp
pop
sti
jg
mov
and
iret
cld
or
pop
mov
cmpsl
mov
and
pop
fistpl
xor
outsb
or
mov
stc
cmp
cld
dec
jo
ffreep
lock
cmp
cmp
fistl
xchg
int
mov
push
mov
aas
idivb
int
pop
lods
jl
push
sbb
xchg
rol
je
xchg
decl
cmp
pop
subl
push
enter
loop
and
in
sbb
mov
stos
test
loopne
gs
aaa
outsl
mov
repz
add
sub
in
std
aam
mov
mov
or
or
mov
out
js
movsl
fidivrs
dec
adc
mov
inc
addr16
test
lahf
or
mov
mov
dec
andb
and
cld
pop
sub
rcrl
shlb
xchg
rep
cld
and
stos
xorb
jecxz
inc
add
inc
mov
push
fstpl
inc
int
lret
lods
mov
stc
test
test
lahf
mov
add
push
push
sbb
faddl
movsl
lahf
stos
or
sub
lock
lret
push
pushf
inc
in
mov
ficompl
aas
cltd
jmp
stos
and
dec
cld
int
cmc
das
leave
jb
cmp
pop
enter
push
sahf
int3
add
add
xchg
xor
test
sub
mov
repz
push
inc
loop
mov
cmp
cmp
call
ret
xchg
enter
inc
hlt
push
inc
xchg
inc
pop
sbb
out
mov
mov
stos
fs
push
dec
cmp
hlt
out
cmp
xor
push
and
movsb
xor
test
push
or
test
xchg
xchg
hlt
sbb
inc
pop
push
cmc
nop
js
movsb
cltd
idivb
dec
div
pop
ds
inc
mov
mov
cmc
cmpsb
jge
pop
add
xor
fldenv
adc
xchg
cmc
and
push
push
mov
test
pop
mov
fwait
xchg
aad
stos
push
mov
fstps
dec
repnz
xor
jp
mov
sbb
incb
imul
sti
mov
or
icebp
sub
test
pusha
inc
xchg
stc
aam
xor
and
iret
cmpsb
ja
or
cmpb
shlb
add
insb
mov
dec
aaa
fisubrs
pop
filds
daa
jl
inc
sbb
adc
sub
mov
cmpsl
xchg
shrb
popa
out
sbb
xor
lds
jmp
cltd
leave
dec
and
pushf
mov
xlat
fwait
add
sarl
out
mov
cltd
adc
push
in
scas
lea
xor
ja
into
lea
and
inc
jno
xchg
push
jno
jns
andb
adc
xchg
das
adc
and
daa
mov
xor
mov
into
dec
popa
stos
xor
cmp
xor
add
pop
int3
ficompl
xchg
cmpsl
jns
mov
push
bound
sub
cmpsb
test
sti
adc
mov
xor
inc
push
and
stos
xchg
rolb
add
test
and
sbb
mov
lret
dec
mov
mov
and
dec
or
inc
out
arpl
stc
outsl
addr16
mov
push
or
in
xor
sahf
push
cmp
loopne
lcall
aaa
xchg
cli
sub
lret
mov
dec
and
sbb
cmp
ds
leave
inc
inc
pop
call
sub
and
jnp
push
cmpsl
pop
xor
lret
xor
pop
sbb
and
cmp
adc
sbb
repnz
mov
rcrl
lahf
scas
mov
cli
jle
and
mov
fldz
or
xor
sub
das
das
mov
jb
pop
lret
adc
xchg
mov
fidivrl
xchg
sbb
arpl
inc
mov
sbb
dec
jl
pop
sbb
mov
es
mov
sbb
or
hlt
push
loop
scas
popa
cld
push
sub
or
dec
sub
and
lcall
test
out
cli
fdivrs
inc
fs
mov
in
ss
adc
lcall
out
jbe
popa
lcall
scas
bnd
xor
or
mov
cmp
sub
and
daa
fmull
stc
xchg
cs
xchg
inc
cli
ret
sub
inc
xor
arpl
in
iret
push
pushf
fistl
fistl
inc
movsb
mov
loopne
mov
sbb
mov
mov
jg
jno
enter
test
dec
out
xor
pop
jl
sbb
pop
push
mov
scas
insl
lds
aas
ret
mov
cmpsl
daa
loopne
xor
lcall
jbe
and
or
jl
pushf
bound
cmp
push
popf
hlt
popf
pop
inc
lret
adcb
sar
dec
int3
pop
add
mov
xchg
andl
mov
xor
mov
in
xchg
jmp
jns
push
xchg
mov
push
add
mov
mov
xchg
or
xlat
pop
clc
icebp
xchg
lret
adc
lret
jp
mov
jnp
mov
adcb
aad
xchg
enter
ret
mov
cmp
repz
jnp
aaa
sub
retw
and
sub
pushf
or
push
pop
lds
xchg
jl
and
in
or
mov
cwtl
inc
data16
adc
mov
outsl
fldt
mov
sub
xchg
jno
cmp
stos
pop
cmp
lcall
xchg
xlat
cmpsl
cmc
push
stos
inc
in
subb
sbb
jb
xchg
rcr
mov
imul
sub
fwait
dec
cmp
cmpsl
movsl
das
lods
cwtl
inc
cmp
rorl
test
mov
xor
enter
inc
mov
mov
ret
loope
clc
dec
iret
je
daa
popf
sbb
int
jp
jns
ror
icebp
out
and
inc
fs
pusha
add
dec
mov
push
test
out
mov
jne
fcomip
popa
push
pop
add
add
ror
mov
dec
bound
ja
push
cmpsl
data16
jg
adc
push
sahf
aam
and
mov
gs
scas
adc
push
or
adc
outsb
xor
pop
fisubrs
jo
xlat
xor
fcomip
mov
aaa
dec
mov
leave
inc
pop
std
cwtl
popa
shll
and
movsb
stc
mov
loope
mov
int3
sub
mov
push
pop
xor
or
std
imul
cwtl
push
or
adc
popa
lret
bound
cmpb
jge
jb
adc
shll
mov
adc
andb
lods
fwait
mov
mov
cwtl
push
xorl
mov
xchg
xchg
push
pop
rolb
fimuls
mov
hlt
jp
cmpsb
lret
stos
enter
mov
push
sbb
adc
add
int3
loopne
outsl
and
sub
daa
lods
in
xor
mov
xchg
sub
fwait
mov
ret
xchg
pop
lret
mov
addr16
subb
push
mov
cmp
repz
jnp
cmpsb
mov
imul
leave
in
xchg
push
xchg
leave
addb
repz
aas
sbb
xchg
jp
pushf
decl
test
push
ds
bound
adc
cs
pushf
call
ret
mov
idivl
jge
pop
out
dec
fcoms
outsb
dec
pop
lods
inc
inc
push
fsubr
or
pop
mov
mov
mov
fucom
mov
xor
test
inc
mov
in
enter
mov
lret
inc
add
pop
sahf
push
dec
ret
arpl
and
or
mov
out
or
jno
push
pop
movsl
cmpsb
aad
xor
and
sbb
inc
mov
push
xchg
xor
mov
jmp
ror
add
add
sub
call
push
push
mov
add
jae
arpl
dec
xor
in
pusha
loope
repz
add
pop
cltd
inc
mov
loopne
jmp
cwtl
aam
test
scas
push
mov
shrl
mov
mov
inc
mov
mov
adc
sub
add
jo
pop
cmp
adc
push
nop
or
mov
adc
or
mov
and
adcb
mov
daa
in
cmpsb
scas
push
cwtl
sbb
xchg
out
or
dec
in
push
scas
xchg
imul
push
jne
pop
jo
push
ljmp
xor
enter
mov
jnp
out
push
stos
adc
jno
les
outsl
inc
sub
shrb
sti
mulb
mov
insb
adc
dec
and
inc
repz
push
ja
jno
jmp
shll
mov
imul
xchg
incb
ret
mov
and
fnstsw
clc
leave
sbb
int3
dec
sbb
jecxz
mov
jecxz
lret
hlt
push
lret
sub
xchg
mov
xchg
jae
jge
cwtl
xchg
test
jle
and
fsubrs
addr16
dec
push
adc
lret
jmp
cmpsb
das
or
rcrl
in
fsubl
lret
test
pop
faddl
add
fucomip
xchg
movsb
test
std
inc
mov
ficoms
xor
add
xor
xor
test
cld
add
aas
jbe
xor
cmp
fs
fcmovb
enter
dec
and
cmpsb
jno
orl
sub
xor
mov
repz
xor
and
jl
lods
pop
testb
push
repnz
popa
cmp
lods
mov
repz
push
sbb
dec
pop
push
xchg
xchg
mov
dec
sbbb
int
rcl
rorl
nop
lock
jb
dec
cmpsl
sahf
sbb
pop
ret
cmp
push
mov
movsb
xor
es
pushw
add
or
rep
mov
lock
pop
lret
push
adc
shll
and
mov
lock
xor
rcl
jo
cmp
shrb
ja
jmp
jg
mov
repz
inc
stc
pop
mov
pop
sub
pop
xchg
insb
xor
jmp
repnz
out
adc
movsl
jp
pop
mov
xchg
loopne
pop
jl
popa
sbbl
loop
dec
inc
loop
mov
sbb
xor
xor
sub
or
inc
enter
in
call
fsubl
divl
or
shlb
adc
call
cltd
dec
icebp
push
fs
mov
in
xchg
into
std
fcom
jmp
shl
xchg
mov
lahf
dec
mov
jp
insb
dec
jnp
jmp
test
in
xchg
dec
pop
push
adc
push
pop
adc
movsb
movsb
and
stos
test
push
hlt
cmp
jae
dec
cmp
adc
lret
nop
in
das
add
jg
bound
fstl
inc
push
adc
mov
push
pop
mov
inc
xor
jl
nop
cld
fsubl
sub
cmp
lods
cmp
adc
pop
sbb
and
std
and
jmp
push
sarb
into
aam
enter
enter
idivl
cltd
push
push
ljmp
popf
jnp
ret
fidivl
ret
sub
sub
test
add
mov
mov
test
fcoms
lea
inc
dec
jno
stos
sbb
xlat
xor
fwait
icebp
int
push
xchg
add
in
push
lock
call
push
add
adc
cmc
sub
push
lret
xor
xchg
xor
repnz
push
add
xchg
rorb
mov
std
lcall
push
or
adc
cmp
mov
cmp
sbb
or
lret
add
mov
add
insb
lret
cmp
xlat
shll
jnp
dec
mov
popf
and
sub
lock
cli
repz
scas
xor
loope
sub
push
mov
mov
xchg
xlat
es
jmp
jb
mov
sbb
mov
dec
xchg
push
xor
xor
pop
hlt
pop
scas
mov
hlt
jns
xlat
aas
or
ja
lods
stos
inc
test
sub
fs
out
mov
and
leave
push
push
mov
xlat
sub
xor
incb
lret
dec
jb
flds
sub
movsl
mov
push
adc
xchg
imul
adc
cmp
sub
test
imul
sbb
pop
inc
fdivl
leave
loopne
sub
lea
jae
fisubrs
leave
lret
lds
dec
arpl
clc
out
shll
mov
popa
and
inc
je
insb
xor
stos
sub
pushl
popa
je
bound
das
pop
imul
mov
pop
mov
mov
orb
out
pusha
outsb
scas
out
adc
rolb
sub
push
lds
call
jl
jl
inc
addr16
push
ljmp
out
std
nop
push
call
sbb
add
add
dec
ret
enter
xchg
cmp
cmp
mov
bnd
xchg
mov
dec
sahf
lret
into
cmp
add
mov
lods
out
out
aaa
inc
mov
sahf
addr16
nop
test
jl
into
mov
sub
shl
jno
imul
pop
inc
mov
rorb
daa
mov
out
push
dec
addr16
add
outsl
out
sbb
jno
repnz
repnz
mov
xor
test
movsl
mov
inc
stos
enter
push
jnp
add
adc
ja
pop
jmp
mov
dec
cmp
ss
mov
cmp
sbb
mov
mov
outsl
push
cwtl
dec
sbb
push
mov
dec
xchg
pop
mov
out
mov
daa
pop
adc
stos
imul
jg
jle
cmc
pop
testl
mov
pusha
push
mov
mov
or
add
test
jmp
cmp
test
cwtl
xchg
pop
adc
xchg
cmp
test
sub
out
mov
dec
adc
cwtl
bound
lea
daa
cwtl
push
mov
fdivp
push
sbb
push
dec
add
aam
aas
out
sbb
xor
and
and
outsb
cmpsb
jge
lahf
outsb
sub
lds
fidivrl
addr16
loope
cmp
and
jne
xchg
pop
mov
inc
int
cmc
jo
cmpl
testl
mov
aad
ss
mov
dec
mulb
out
sbb
mov
mov
push
pop
les
movsl
es
jo
imul
mov
rolb
push
movsl
pop
filds
add
addr16
scas
mov
sbb
ss
xor
call
scas
or
mov
bound
add
lods
pop
js
cs
lret
mov
scas
push
xorl
es
aaa
pushf
data16
and
scas
lret
and
inc
add
fldl
push
aam
fldl
adc
cmpsb
out
inc
inc
bound
sub
mov
out
insb
bnd
popf
xlat
in
sub
in
xor
mov
cmpl
imul
push
in
sbb
cmp
je
hlt
mov
and
sub
xlat
cmpsl
aam
sahf
push
aam
jo
aad
mov
jg
xor
cwtl
or
mov
pusha
aas
shlb
xchg
mov
cli
lahf
lods
movsl
dec
dec
in
dec
jnp
adc
repnz
pop
mov
adc
adc
push
add
mov
stc
cmpsl
sbbl
push
fcmovnb
mov
inc
lahf
dec
stos
je
lret
inc
xchg
mov
imul
inc
fcmovne
ret
mov
lahf
or
iret
ljmp
call
fsubl
inc
data16
xchg
cmp
xchg
in
pusha
std
cmp
fistps
out
mov
outsl
jecxz
gs
lret
int3
gs
jg
fdiv
and
sti
xchg
xchg
fidivrs
ja
jns
xor
cli
push
dec
xchg
pop
pop
mov
bound
fabs
ljmp
mov
into
stos
dec
mov
or
aam
loop
aam
mov
or
xor
aas
mov
es
int3
push
negl
lock
xor
filds
das
jno
xor
shll
push
xchg
ljmp
movsb
inc
push
lea
add
and
adc
hlt
or
sbb
mov
stos
or
stos
divb
inc
movsb
imul
mov
testl
cli
mov
mov
shll
lock
fs
mov
cmpsl
adc
mov
dec
inc
loope
xchg
cmp
push
or
sub
cmp
fimull
ljmp
icebp
les
or
ret
repnz
dec
and
xor
sub
sub
jo
in
add
stc
scas
sti
aad
inc
bound
fistps
cli
push
inc
and
pop
xor
jecxz
add
pop
dec
mov
mov
adc
xor
scas
lds
divl
inc
hlt
jns
xchg
jnp
jno
or
mov
fisubl
rolb
jbe
jle
and
mov
scas
call
pop
adc
mov
sbb
sbb
dec
lcall
cmp
jb
cmp
mov
scas
push
dec
les
arpl
or
les
mov
sbb
sbb
mov
jae
rorb
jmp
push
lahf
mov
sub
xor
and
sub
inc
sub
rorl
mov
xor
fstps
mov
lret
and
pop
xlat
rep
and
mov
in
push
inc
insb
dec
or
pop
orb
and
int
dec
imull
leave
xor
pop
sub
push
jno
adc
dec
popf
and
pop
jl
addr16
xchg
or
jmp
cmp
rol
and
lods
sub
cmp
mov
mov
push
leave
fsts
mov
out
sbb
xor
int3
popf
or
xchg
or
call
mov
mov
and
shlb
mov
inc
xchg
iret
fs
mov
pop
mov
inc
std
or
int
push
movl
daa
mov
inc
xchg
bound
sbb
add
jmp
ss
sbb
sbb
mov
testl
pop
sbb
jno
jg
xlat
fs
sub
pop
pop
mov
loop
outsb
add
sub
mov
pop
imull
jbe
inc
dec
add
xchg
pop
xlat
lret
dec
bound
or
pushl
dec
into
pop
xchg
out
cmpsl
push
cltd
add
ja
jp
mov
mov
pop
movsl
sub
clc
std
aas
and
in
inc
maxps
ljmp
repz
in
int3
mov
adc
sti
adcb
mov
iret
pushf
dec
ljmp
jae
stc
sbb
movsb
xchg
push
mov
mov
movsl
int3
loope
daa
and
cmpsl
movsl
pop
xchg
stc
fistpll
scas
cmc
and
mov
pop
pop
decl
sub
nop
sub
cmc
loop
scas
js
jo
ret
aam
xlat
dec
in
ja
dec
fists
push
add
cmp
cmp
sbb
fcoms
outsb
xlat
fdivl
jg
xor
inc
fsubrl
imul
inc
aam
xchg
add
sub
sbb
pop
ret
push
or
daa
push
mov
adc
aam
aam
inc
xorl
cltd
bnd
in
push
clc
out
pop
cmpsb
inc
arpl
outsb
cltd
dec
sbb
insb
jae
aas
mov
lret
mov
dec
sub
ss
jmp
leave
insl
cmp
enter
fwait
out
mov
jle
push
int3
add
xchg
or
fs
int
pop
sub
sar
push
push
fisttps
push
ljmp
and
lret
sbb
lahf
in
or
jle
mov
insl
xlat
notl
push
rorb
pop
adc
scas
lcall
push
push
cmpsl
sbb
ret
or
xchg
sbb
jne
insl
xchg
mov
and
add
pop
cmp
jmp
lods
in
stos
ss
pusha
mov
fs
sub
int3
xchg
test
pop
iret
sbb
pushf
fildl
insl
mov
mov
icebp
mov
adc
xchg
pop
lds
fists
scas
push
sbb
inc
push
cmp
sub
xorb
cld
movsl
adc
cmc
jnp
jae
in
scas
mov
flds
jp
bound
cmp
test
mov
loop
jae
lahf
shrl
or
add
xor
je
sbb
mov
rclb
es
ja
xor
in
sub
insl
ret
aad
cmc
bound
loopne
enter
aam
xor
mov
jns
adcl
leave
mov
fldenv
or
popf
movsb
fdivrl
and
lods
stos
call
jmp
cld
push
jl
jecxz
lret
pop
push
pushf
xchg
lds
ss
repz
xchg
push
inc
or
outsb
push
mov
push
xchg
sbb
dec
xor
loope
add
jns
loopne
out
push
or
sub
shl
jmp
les
cld
or
mov
jno
pop
xchg
adc
adc
in
clc
into
jno
push
xchg
mov
mov
ficompl
mov
mov
scas
adc
fs
aad
dec
jl
sbbb
insb
aam
add
repz
xor
roll
mov
mov
ret
cli
mov
and
push
mov
cmp
mov
loopne
lret
push
daa
mov
movsl
push
out
sbb
lahf
pop
daa
leave
pop
mov
int
enter
dec
push
shlb
ds
mov
je
ljmp
mov
push
mov
fnstenv
cmp
mov
sbb
inc
sub
popa
nop
mov
int
mov
mov
sbb
push
repz
sub
insb
es
lock
xor
adc
lret
pop
movsl
ss
push
jl
aad
sub
jle
adc
aad
aam
icebp
insb
sub
out
jmp
cli
aad
outsl
mov
mov
mov
add
lcall
enter
jbe
icebp
daa
je
inc
scas
adc
push
jg
cmp
cmc
cmp
add
lock
orb
into
mov
out
mov
lods
bound
lods
or
clc
pop
sbb
inc
les
xor
push
lahf
nop
mov
outsb
cmc
int3
inc
inc
pop
push
jle
jb
push
lods
add
inc
je
imul
inc
popf
shrb
cmc
popf
ss
jno
mov
pop
test
mov
jae
xchg
sqrtps
push
mov
or
mov
mov
push
or
bound
ja
pusha
adc
aaa
or
gs
push
pop
sahf
stos
sti
pusha
add
stc
mov
and
into
push
mov
inc
sub
jp
loope
add
mov
push
pop
and
int3
pop
lahf
sbb
and
jae
inc
fcmovnbe
js
xor
fsts
cld
push
dec
mov
mov
mov
in
ret
sbb
pop
out
clc
pop
push
addl
mov
pop
or
aaa
lock
imul
scas
mov
out
mov
add
insb
xor
sbb
push
fcoml
mov
sub
jb
mov
jg
add
rorb
cmpsl
loopne
test
add
or
xchg
aaa
pop
cs
push
ret
mov
sahf
sub
mov
mov
loope
cmp
xchg
cmp
mov
inc
xchg
sub
xor
mov
mov
mov
adc
fadd
mov
inc
lea
dec
xchg
js
xlat
sbb
movsb
inc
push
cmpsl
push
and
ds
push
jg
idiv
leave
pusha
pop
cli
sub
jb
movsb
aaa
pop
cmp
jne
push
adc
dec
adc
gs
mov
mov
push
into
cmpsl
ret
fisubl
sti
mov
dec
mulb
enter
gs
sbb
mov
hlt
sbb
adcb
inc
cwtl
cmp
inc
jg
gs
cmp
dec
jg
aad
mov
adc
push
popa
loopne
out
adc
jnp
insb
sbbl
sahf
jne
sub
rorl
dec
test
cli
sub
gs
or
cltd
inc
mov
or
xor
in
aaa
out
xorb
sbb
imul
jb
dec
cmc
sbb
pop
ds
push
cmp
cmp
jo
mov
add
mov
sub
insl
mov
jge
sbb
sbb
adc
mov
xchg
cwtl
cmpsb
inc
cwtl
cltd
pop
jae
orl
data16
and
cmp
pop
leave
or
add
jo
sub
push
sub
sbb
dec
adc
test
jns
push
lea
inc
stos
mov
mov
pop
shl
mov
sbb
data16
jp
ret
dec
lock
data16
cmp
js
call
xchg
test
push
mov
adc
mov
add
inc
jo
ss
rcr
lea
inc
inc
xor
xchg
dec
push
jo
aaa
dec
and
mov
sub
xchg
xor
daa
xor
sub
xchg
dec
mov
loope
cmpl
pop
push
fsubl
stos
push
inc
mov
shlb
mov
inc
pop
pop
jns
repnz
outsb
pusha
dec
mov
mov
mov
imul
icebp
scas
lret
iret
fsubrl
hlt
fimuls
insb
pusha
jns
cs
in
xor
in
rcr
arpl
mov
arpl
nop
xor
imul
aas
pop
push
js
mov
inc
mov
adc
adc
pop
andl
push
push
fadd
push
cmc
push
fcomps
and
rolb
cmp
inc
inc
sbb
test
or
lods
dec
aad
call
rcrl
and
sub
insl
or
cwtl
push
jp
dec
adcb
pop
arpl
and
movsw
adc
mov
adc
inc
in
jns
enter
imul
bound
mov
or
jmp
pop
pushf
sbb
jns
or
jecxz
lret
in
pop
mov
int
call
icebp
cmp
and
pop
xor
leave
fld
lock
popf
cmpb
xchg
dec
mov
es
dec
mov
push
mov
js
jno
inc
loop
mov
mov
jnp
scas
cmp
pop
sbb
push
pop
cli
pop
xchg
push
aam
out
fs
mov
or
inc
jno
pop
repnz
adc
nop
cmp
cmp
push
int3
and
sbb
push
sahf
ss
jbe
sti
ret
and
xchg
pop
inc
sub
nop
popa
ds
pushf
dec
mov
movsb
in
es
mov
mov
in
mov
xor
cmpsb
add
lds
mov
lods
pusha
sub
xchg
pop
sbb
or
push
cmp
popa
testb
outsl
sarw
fucom
lret
mov
addr16
roll
ds
int3
aam
aad
mov
out
xchg
sub
ss
aad
adc
inc
push
shrb
sub
adc
mov
dec
cmp
cmc
push
pop
scas
push
or
or
push
pop
aad
idivb
push
cmpsb
inc
lods
movsl
das
cmp
cmp
negb
push
es
sub
pop
mov
mov
fst
cltd
test
in
nop
lahf
js
in
sub
or
andl
sbb
aaa
or
hlt
lret
pop
ja
push
cltd
jmp
sub
push
je
notb
in
sub
sub
and
lret
jo
mov
jae
mov
mov
xor
sub
or
outsl
sub
imul
out
fsts
mov
adc
roll
scas
rcll
fistl
fadd
xchg
xchg
adcl
std
dec
mov
test
fwait
mov
cmpsl
jmp
roll
jne
arpl
sub
daa
ret
jne
shl
into
sub
in
dec
fimuls
sub
pushf
xchg
rcrb
stos
cmpsb
pop
movsl
rorl
fwait
lahf
mov
mov
vmovsd
std
mov
fstl
push
xchg
mov
xchg
sub
mov
pop
fld
push
std
xchg
mov
movb
inc
dec
popa
sub
rcr
cmpsb
ljmp
out
jl
int3
xchg
data16
movsl
fucomp
mov
ret
pop
jmp
add
adc
add
jle
aaa
push
in
mov
int
popa
bound
insb
add
jmp
inc
mov
cltd
add
inc
push
ret
ret
dec
push
shl
mov
or
in
and
jo
xchg
adc
pop
pop
dec
ds
jae
sti
xor
cmpsl
cmpsl
cmp
lcall
mov
fistl
ljmp
sub
sub
sub
testl
jo
mov
mov
push
pop
cmc
addr16
test
push
test
inc
adc
push
adc
mov
in
lret
fnstcw
cvtps2pi
and
cld
jo
xchg
faddp
lahf
or
std
imul
jmp
movsb
into
mov
sar
dec
push
jmp
fdivl
cwtl
shr
cmp
stos
inc
and
dec
inc
inc
dec
jnp
stos
and
and
iret
cmp
jae
call
xor
add
ljmp
push
cld
or
fmull
dec
cmp
lret
jmp
hlt
ret
movsb
leave
gs
imul
xor
add
mov
xchg
adc
mov
lods
xchg
fbld
fsubrs
sub
lock
dec
push
push
pop
bswap
sub
adc
sbb
dec
bound
add
vmovupd
add
les
mov
js
fwait
xor
bound
cltd
ret
clc
cld
xor
mov
xchg
test
jle
xchg
out
test
loop
mov
cmp
inc
mov
jmp
xchg
loopne
sub
push
pushf
mov
inc
xchg
mov
ds
out
idivb
ret
shlb
sbbb
xor
xlat
jge
shrb
test
xchg
xchg
pop
push
mov
cmpsb
cltd
fnstenv
cmp
push
push
popf
cmp
inc
or
scas
cmp
in
xchg
pop
es
dec
stc
inc
dec
mov
jecxz
inc
xchg
mov
in
xor
sbb
jp
add
iret
repz
rcrl
sbb
bound
popf
dec
xor
xor
cli
dec
idivb
xchg
ljmp
lods
adc
inc
sub
xchg
stc
js
addr16
jle
outsl
icebp
pop
pop
or
jbe
cmp
lock
hlt
flds
lods
inc
mov
cli
pop
inc
fadd
sub
out
stc
lret
ja
dec
add
and
in
cli
outsl
xor
notl
int
adc
fisubs
mov
movsl
mov
mov
dec
mov
add
cmpsl
jge
adc
arpl
push
push
lock
addr16
mov
dec
or
imul
push
gs
popa
out
pop
shlb
or
xchg
bswap
cli
scas
dec
or
fs
mov
ret
lret
rcrb
pop
inc
das
or
sarb
lods
xor
push
and
fldt
rcrl
das
jg
fisttpll
ja
xchg
imul
push
dec
adc
repnz
dec
scas
iret
das
es
imul
mov
mov
add
rcrb
ds
push
push
test
pop
in
xchg
jnp
aaa
sub
dec
call
xchg
push
in
les
xchg
mov
add
xchg
xor
stos
fwait
shll
mov
jne
call
mov
cmp
push
jg
daa
ss
dec
xchg
mov
cs
dec
popf
lret
cmp
jns
iret
cmpsl
out
fdivs
inc
xchg
push
fs
xlat
fwait
loopne
in
imul
loop
pop
xchg
dec
jecxz
outsl
sub
jbe
xchg
add
dec
mov
loopne
dec
imul
cli
cmpsb
push
push
dec
jle
lea
hlt
pop
test
roll
imul
push
mov
sti
rcrl
cmp
test
ljmp
mov
imul
mov
xorb
hlt
jo
enter
cmp
or
gs
jp
jne
loopne
cmpsb
jae
popa
cs
lea
mov
in
ret
xchg
into
cwtl
je
scas
mov
hlt
insl
push
mov
push
test
xor
mov
or
pushf
mov
daa
xor
add
rolb
flds
stc
shlb
fwait
mov
sahf
sub
cld
and
adc
test
mov
pop
stc
dec
movl
and
ret
push
mov
shlb
push
sbb
jl
in
add
insl
dec
ret
mov
sti
mov
mov
ja,pt
inc
xor
dec
mov
xchg
outsb
sbb
and
dec
fldl
inc
mov
clc
in
add
aaa
push
add
movsb
test
inc
and
fnstsw
enter
ret
adc
push
jns
xchg
sub
mov
lret
push
lods
mov
lret
pop
in
add
mov
push
xacquire
fmulp
push
add
cmp
xchg
xchg
jne
mov
inc
js
push
sub
dec
insb
mov
out
adc
call
test
jae
ljmp
sub
loope
mov
lret
loopne
cltd
shlb
jnp
icebp
or
lahf
sbb
pop
in
and
scas
roll
sub
jg
aaa
jb
mov
dec
repz
addr16
out
or
ja
mov
xchg
std
sub
jne
loopne
rol
inc
dec
jns
xchg
test
sbb
pop
mul
in
sub
fnstsw
mov
rcrl
in
clc
notb
cmp
leave
jle
pop
mov
out
out
and
xchg
int3
mov
or
and
js
ss
adc
mov
imul
push
push
mov
lret
addr16
shl
adc
jb
mov
scas
hlt
add
mov
dec
test
xchg
mov
push
insb
jl
pop
repz
mov
push
ret
pop
or
or
jo
leave
cmp
sahf
aam
adc
mov
into
jmp
notl
aam
xchg
dec
push
jmp
xor
data16
mov
jae
loop
cmp
mov
dec
fsubrl
cmpsb
rolb
addr16
cli
mov
data16
mov
push
sarb
or
mov
cmp
movl
xchg
mov
xchg
leave
stos
inc
add
and
fmull
pop
xchg
or
xchg
push
push
xchg
mov
inc
dec
repz
pop
popl
xor
or
sahf
jle
lcall
fidivs
push
shlb
repz
popa
int3
test
in
in
loope
shlb
stos
and
jecxz
add
into
jne
ja
push
test
std
mov
cmpsl
pop
sti
out
jb
stc
jp
imul
jb
sti
cmp
xchg
je
rcrb
ds
or
clc
enter
cwtl
lea
add
sti
mov
notl
leave
xchg
lcall
hlt
jne
rcll
outsb
and
or
pop
jne
int3
cmp
mov
mov
lea
pop
scas
cmp
movsl
add
pushf
push
sub
ja
jno
dec
cmpsb
daa
cwtl
ficompl
andb
inc
cmpsb
dec
push
leave
std
push
pop
js
dec
jnp
sub
popa
jmp
in
shll
add
lret
loope
rcrl
push
and
or
mov
outsb
pop
imul
add
inc
sti
dec
cmp
mov
std
cli
cmc
xor
and
dec
sbb
inc
aaa
test
js
dec
inc
add
sbb
sbb
xchg
and
andb
jle
fdivl
adc
pop
xor
int3
jb
or
sahf
jo
imul
or
out
fnstsw
divl
repz
out
pop
bound
cli
adc
pop
inc
loop
daa
jbe
mov
pop
std
shll
rcr
sub
cmp
shrb
jns
fisubrl
fsubs
xchg
fadds
sahf
inc
adc
adc
orl
cmp
mov
popa
mov
adc
or
ljmp
inc
cmp
out
adc
pop
loop
stos
inc
mov
int
xchg
pushf
xor
mov
push
mov
ss
cwtl
or
mov
or
je
notl
jne
loope,pn
nop
sbb
sub
ret
lret
dec
scas
cld
jbe
std
rol
xor
jne
lods
cld
insb
or
sub
sarl
fiaddl
xchg
inc
sbbl
clc
addl
popf
fadd
pop
sbb
movq
ret
dec
fistl
imul
lret
sbb
mov
and
cltd
or
ljmp
testl
loopne,pt
mov
sti
xchg
les
push
hlt
xor
cmpsl
and
es
xor
call
mov
xor
push
xor
xchg
movsl
sub
xor
sub
mulb
adc
ss
sub
scas
and
cmp
sbb
lret
push
xor
jge
cmp
mov
and
sub
jle
cmpsb
lds
shl
mov
mov
ret
shl
sbb
xchg
pop
arpl
std
std
or
mov
inc
popa
add
rorl
mov
out
repz
ret
lahf
into
popf
adc
iret
lods
add
mov
shrl
ja
sub
pusha
les
shlb
jl
std
mov
mov
jae
xchg
mov
daa
cmpsl
push
push
sub
sbb
enter
emms
test
arpl
push
xlat
mul
inc
jbe
push
pop
push
aad
data16
mov
test
jg
or
cmp
mov
shlb
mov
jl
or
and
or
subl
ds
pop
repz
pop
xor
xchg
xchg
mov
add
push
addr16
ret
or
xchg
adc
aam
mov
js
sbb
mov
aaa
xchg
pusha
lret
mov
pop
ljmp
xchg
sbb
adc
into
sbb
hlt
mov
mov
ret
mov
mov
sub
and
push
or
shll
or
decl
adc
bound
sahf
dec
mov
aam
repnz
jno
add
fdiv
or
imul
push
sarl
scas
mov
out
push
xor
cmp
and
je
test
jbe
fdivrs
int3
push
pop
jb
jmp
mov
push
lret
add
enter
imul
popf
inc
fcmove
divb
or
push
fmul
dec
and
jl
add
mov
or
push
shl
mov
test
mov
mov
aas
xchg
pop
rcrb
xor
mov
push
je
les
in
icebp
testl
enter
push
popa
mov
arpl
enter
pop
xor
pop
and
mov
cmc
pushfw
mov
ss
imul
cmp
jb
mov
push
hlt
and
dec
mov
test
mov
in
insb
fistpll
inc
xchg
pop
aaa
repnz
xchg
push
enter
mov
add
pop
add
ja
mov
pop
mov
outsl
sub
cli
dec
push
xor
sarl
dec
in
cld
jl
inc
loop
pop
sub
shll
jo
insl
in
ds
pop
add
gs
pushf
sub
dec
dec
mov
int3
outsb
testl
mov
out
mov
repnz
jg
push
lock
jl
mov
test
xchg
icebp
es
aam
fildl
jb
xlat
js
into
rcrl
iret
sub
arpl
ja
sbb
and
pop
xchg
ret
es
push
inc
inc
fstl
pop
dec
das
out
cmp
push
xlat
dec
cmp
fs
xor
cmpsl
das
pushf
in
sub
fwait
mov
test
loope
sbb
ljmp
inc
in
or
inc
mov
jb
xor
dec
lds
loope
push
cwtl
aam
jnp
jnp
enter
mov
mov
fisubl
mov
dec
mov
jecxz
and
jmp
push
shll
fildll
pop
aad
and
aad
mov
mov
dec
cwtl
sub
shrl
loop
mov
mov
pop
adc
inc
outsb
add
mov
or
scas
mov
js
mov
pop
rclb
test
les
aas
cmp
inc
ret
scas
jmp
push
imul
adcb
xor
dec
arpl
xchg
ljmp
sti
sbb
or
fwait
and
sbb
xchg
test
das
pop
jnp
jno
cltd
jp
stos
pop
sbb
andl
std
xor
jo
sbb
xor
mov
movsb
add
stc
out
lods
rorl
hlt
loop
lcall
pop
call
xchg
mov
movl
dec
push
lods
sub
and
pop
ds
cmpsb
popa
cmp
mov
fldt
stc
fstps
daa
cltd
aaa
movaps
mov
aad
push
jae
fistl
lods
jge
mov
jle
add
cmp
add
mov
push
sbb
fnsave
push
pop
andl
mov
push
pusha
xor
sbb
dec
call
cs
push
cld
daa
rorl
adc
sub
leave
call
push
push
bound
mov
std
jne
xor
add
xchg
adc
pop
ljmp
adc
mov
and
lock
ret
push
sahf
dec
mov
mov
cmp
pop
fmull
dec
in
add
ja
xchg
mov
add
imul
fldt
jg
xor
sbb
pop
pop
rclb
inc
jmp
aad
or
les
clc
test
xor
add
cli
ret
bound
fcoms
sub
pop
cmpb
ja
cmp
popa
add
and
mov
imul
add
xchg
mov
les
negl
ljmp
push
or
cmpsb
pop
out
pop
xor
ds
jl
push
add
lods
sub
popf
mov
rorb
sarb
and
cltd
cmp
xchg
adc
pop
paddd
iret
push
pop
in
cltd
mov
jp
cld
or
mov
neg
test
dec
adc
or
and
loop,pt
arpl
ret
cld
fdivl
xchg
mov
mov
je
call
out
push
sbb
mov
dec
pop
test
cwtl
bound
dec
sti
pop
mov
loop
or
or
xor
adc
lock
ss
cmpsb
jmp
popa
insl
push
pop
mov
push
and
loope
mov
or
cmpsb
popa
dec
add
inc
leave
and
cwtl
insb
in
test
lock
xchg
sarb
jle
mov
sbb
andb
sahf
push
jmp
dec
iret
jp
jbe
rcrl
sub
mov
sub
mov
and
fs
mov
push
pop
xchg
sub
xchg
inc
mov
std
enter
xlat
mov
jns
loop
pop
or
push
mov
jecxz
xor
sbb
xchg
pop
js
and
pop
cld
in
sahf
mov
push
scas
jns
push
fadds
cmc
iret
xchg
cmp
addr16
xor
cmpsl
push
push
and
xor
jge
push
popf
jne
in
daa
orl
inc
cs
xor
xlat
xor
inc
gs
cmp
sarl
and
sbb
cmc
es
push
add
jecxz
push
in
mov
cmpsb
mov
mov
aam
add
sub
les
add
or
push
stc
cld
test
lret
dec
inc
dec
ja
out
dec
or
mov
dec
test
scas
lds
bound
push
mov
notl
leave
mov
outsb
in
popa
icebp
rorb
xchg
xor
ja
xchg
pop
push
add
inc
xor
cld
pop
test
aam
notb
dec
mov
xchg
sti
xchg
xchg
cmp
mov
ja
std
xchg
outsb
stos
fwait
push
inc
or
shrb
js
adc
in
sahf
jmp
leave
lods
dec
imul
mov
jmp
inc
xor
mov
and
arpl
outsl
pop
mov
lods
pop
adc
pop
cltd
and
xchg
test
push
imul
ror
and
loope
cld
aad
inc
or
inc
cmc
out
enter
mov
jne
test
mov
xchg
std
fmulp
sahf
push
xor
je
xchg
adc
stos
stc
lcall
addl
and
int3
enter
mov
lods
aas
cmpsl
ljmp
push
push
fmuls
sbb
sti
leave
jecxz
enter
dec
cmp
and
stos
in
lret
push
hlt
push
push
js
lods
mov
ds
lea
in
and
aas
loop
add
jne
xor
js
pop
lea
stos
lret
dec
xchg
add
cltd
lret
xor
add
adc
out
xlat
push
out
repz
push
pop
mov
dec
fmul
hlt
sbb
xor
cmp
sti
loope
cmp
mov
mov
jae
xchg
mov
push
mov
ss
fiaddl
in
and
xchg
mov
mov
fprem1
int3
add
mov
add
rcrb
sub
cmp
outsl
mov
test
or
xorl
lods
xlat
inc
clc
adc
imul
repnz
addr16
cmp
mov
jle
pop
ds
or
mov
pop
inc
fisttps
mov
push
mov
stos
jmp
ss
push
sbb
mov
push
dec
das
sub
jno
fldenv
cmp
cmc
in
adc
cmp
cmp
and
test
aad
movsl
cmpsl
xorb
add
xchg
cmp
adc
sbb
cld
fldcw
or
inc
test
rol
vprotb
ret
pop
sbb
push
or
xor
icebp
imul
dec
xchg
jecxz
xchg
daa
add
test
in
xorl
xor
dec
addr16
inc
fcmovnu
lea
push
xor
cmp
inc
xchg
clc
cltd
arpl
and
rcll
inc
mov
test
xor
xchg
cmpsb
push
sbb
fidivs
and
in
mov
push
add
mov
sub
imul
aas
add
arpl
ss
das
sbb
sub
std
and
in
mov
jnp
std
push
aas
cmc
xchg
lock
mov
mov
cmp
shll
pushf
dec
or
sbb
ja
cmp
pop
mov
push
mov
sahf
add
pop
insl
sub
pop
test
jecxz
lock
popf
shlb
xchg
std
test
sub
movsb
daa
subl
fstpt
jg
leave
and
imul
xchg
sarb
sti
pushf
mov
ljmp
mov
jne
lret
sbb
sahf
scas
flds
ljmp
outsl
movsb
adc
daa
cmp
and
mov
es
enter
fldenv
mov
testb
call
aad
scas
xor
and
mov
push
dec
pop
push
gs
pop
lds
and
rolb
mov
sbbl
repnz
enter
push
ret
js
sbb
add
push
push
jmp
jns
or
lods
xor
movsl
adc
rorb
ljmp
lods
jae
cmp
sarb
mov
mov
mov
mov
xchg
loop
inc
jo
mov
test
lds
add
lret
push
daa
shlb
insb
stos
cmp
repnz
or
xor
lret
xchg
arpl
cld
test
pushf
imul
cmpsb
loope
or
sarl
sbbl
in
imul
add
popf
push
jle
add
call
popf
or
pop
pusha
imul
adc
aaa
sub
popf
inc
add
ds
mov
out
adc
fwait
lds
inc
xor
hlt
outsb
sub
lds
mov
outsb
pop
aas
stc
sub
int3
xchg
outsl
sahf
mov
jp
pop
cmp
jg
call
push
fsqrt
and
mov
out
pop
idivl
inc
push
push
shll
bsr
or
fwait
inc
cmpsl
push
mov
xor
pop
adc
lahf
and
and
out
mov
in
jbe
mov
shlb
sbb
loopne
sahf
jne
stc
cwtl
sub
push
js
js
cmp
shlb
notl
jmp
cli
mov
fidivrs
and
rcll
jge
and
stos
pop
dec
cmp
sbb
cwtl
jmp
dec
ret
data16
sub
popl
rcrl
rcrl
fidivrl
or
or
xchg
sbb
lcall
movsb
mov
xor
xor
and
pminsw
xor
or
rorb
mov
addl
push
push
lahf
lds
shl
mov
mov
xor
ljmp
lea
orb
cmp
xchg
jo
push
and
cld
jb
cmpsl
cmp
dec
mov
add
nop
or
shll
ss
clc
jle
and
clc
hlt
inc
mov
ja
mov
push
adc
mov
test
cli
lock
inc
dec
pusha
inc
inc
roll
xor
out
mov
in
sub
mov
push
adc
pop
mov
pop
and
pop
mov
in
inc
mov
in
in
test
push
das
das
inc
divb
shl
mov
push
push
sub
cmp
mov
test
mov
cmp
mov
fsubs
arpl
sub
daa
rcrb
js
mov
mov
js
pop
test
sub
popf
sbb
lods
cmpsl
pop
stc
int
sub
je
stc
dec
pop
sti
push
dec
sub
cmpsl
mov
pop
pop
jo
or
out
cli
outsb
popa
inc
inc
cli
sub
jl
xchg
ret
out
mov
je
inc
sti
std
push
mov
insl
sbb
sahf
add
mov
inc
and
test
out
adc
or
cmp
add
sbb
push
int
rolb
mov
cmp
loopne
int3
xorl
jno
inc
fadds
xchg
jge
rclb
leave
push
js
add
mov
pop
int3
or
xchg
enter
xor
enter
add
mov
gs
sbb
sub
lcall
fstpt
jle
dec
mov
mov
xchg
adc
mov
inc
jb
jae
in
inc
mov
sti
cs
movsl
out
sahf
mov
jmp
scas
dec
das
pop
mov
jae
cmpsb
cld
add
xchg
sahf
enter
daa
imull
repz
push
leave
and
stos
xchg
mov
xlat
ss
mov
dec
xor
jg
cmp
test
jno
in
mov
sub
sub
dec
mov
js
call
cmp
dec
idivl
lret
arpl
pusha
ret
pop
or
ljmp
dec
push
int
mov
mov
cld
repz
jmp
scas
add
sub
stc
pop
rcrl
adc
pusha
lods
add
leave
push
lock
int3
in
aaa
loop
out
outsl
xchg
nop
in
mov
scas
and
mov
sbb
xchg
pushf
subl
repz
jo
inc
scas
mov
fldcw
loope
cwtl
and
or
xor
cmpsb
ja
adcb
call
add
mull
aad
mov
jbe
pop
repnz
push
xchg
shlb
mov
cltd
stc
fstpl
test
push
mov
out
arpl
aad
js
rclb
xor
mov
cmp
push
mov
dec
add
push
push
xchg
orl
mov
mov
rcrb
ds
lcall
adc
adc
xchg
in
xor
arpl
mov
popa
add
imul
inc
imul
dec
cmp
push
push
inc
pop
daa
dec
jmp
add
aam
movsb
cld
jmp
dec
sbb
leave
test
sub
mov
adc
int
inc
lret
and
adc
ja
or
cmp
hlt
and
rclb
shrl
or
adc
and
dec
pop
sbb
and
add
dec
and
pop
xor
mov
bound
pop
xchg
jg
arpl
bound
sub
and
dec
inc
test
adc
les
das
adc
nop
push
insl
or
cli
out
mov
call
xchg
cmpsb
lret
xlat
mov
mov
enter
pop
dec
mov
mov
les
pop
jecxz
inc
imul
std
fwait
cmpsb
jnp
outsl
testb
pop
adc
insb
pop
cmp
add
xor
hlt
idivl
jno
and
add
sub
add
shl
std
mov
dec
das
cwtl
or
add
inc
sahf
cmp
aad
mov
bound
into
sub
add
or
or
repnz
sbb
movsl
out
js
push
shlb
mov
sub
pop
aas
xor
subl
jo
sub
in
pop
mov
or
sub
mov
shrb
adc
test
or
into
mov
push
aad
insl
cmp
scas
aas
clc
mov
int3
cmp
lahf
mov
fcoms
jb
push
push
out
cmpsl
push
mov
std
pop
decl
imul
aas
cmp
cmp
inc
movsl
mov
mov
inc
les
mov
jg
cs
in
adc
push
fidivs
stos
inc
and
lret
scas
cltd
push
cmc
lahf
sub
cmpsb
rorb
gs
jno
out
adc
push
and
cmp
fcomps
gs
jle
fsts
dec
imul
inc
in
test
sub
les
xor
xor
jb
das
jl
jne
std
dec
sub
push
xchg
mov
addb
rcr
insb
push
cmp
scas
and
and
bound
mov
and
nop
sar
jno
test
fiaddl
mov
insb
cmp
mov
add
or
xchg
lret
dec
in
hlt
hlt
dec
mov
push
pop
inc
dec
xchg
jb
mov
xchg
jnp
clc
push
sbb
pop
in
imul
out
in
das
add
cmp
arpl
outsl
aaa
add
mov
or
push
mov
stc
popa
dec
loop
shrl
scas
add
lods
int3
add
cmpsb
mov
jl
push
dec
scas
pop
sbb
fisttpll
out
in
or
push
rcl
lock
or
sahf
or
addr16
mov
dec
std
jg
data16
mov
das
ja
xor
repnz
pop
push
or
pop
mov
adc
je
or
mov
adc
cltd
pusha
mov
call
inc
stc
pop
test
push
scas
lods
cmc
cvtps2pi
jmp
mov
push
sbb
sub
xchg
icebp
sti
jp
hlt
dec
in
push
cmp
sub
int3
movb
cs
imul
in
push
inc
jne
sbbl
imul
push
mov
test
vpaddsw
jbe
or
ficompl
ds
pushf
pop
sub
sbb
and
xor
mov
in
sti
inc
mov
sub
loope
ret
jle
dec
imul
xchg
lods
add
sbb
jne
sbb
test
imul
call
popa
sub
dec
cld
sub
mov
stc
mov
popf
mov
lcall
cmc
aam
sbb
aaa
out
inc
int
rorl
sarb
and
data16
pop
xchg
cmp
hlt
adc
and
adc
fucomi
jle
mov
in
pushf
push
xlat
sarl
pushl
and
mov
push
xchg
imul
mov
sahf
push
push
or
mov
rol
ja
shlb
pop
xchg
aam
ret
leave
push
cmp
push
mov
dec
ret
push
shrl
cld
dec
or
out
mov
inc
dec
jg
jns
jle
mov
jnp
pop
xor
cwtl
pop
cmpsl
lock
outsl
xchg
push
mov
and
and
lods
shll
lods
imul
cmp
outsl
stc
sbb
gs
push
pop
out
in
push
add
pop
jge
pusha
cmp
popf
addl
mov
pop
push
out
mov
sub
dec
mov
out
lea
sub
rclb
hlt
sbb
jl
cld
cmpsb
sub
adc
sbbl
test
pop
data16
iret
mov
cmpsl
stos
sbb
jl
mov
scas
mov
jne
dec
xchg
lcall
hlt
scas
andl
stos
cmp
sbb
scas
and
fmuls
sbb
bound
hlt
jp
xchg
push
mov
inc
sarb
orl
and
scas
loopne
std
pop
xchg
add
mov
lea
je
pop
cmp
jmp
xor
pushf
lahf
xchg
dec
dec
jl
jae
arpl
sbb
cs
les
cs
arpl
dec
cs
dec
pop
mov
out
cmpsb
je
sbb
movsl
sbbb
sub
aaa
xchg
mov
dec
add
xchg
mov
stc
inc
push
inc
sti
jno
add
int
mov
fcmovb
sahf
in
lea
cli
mov
lock
into
pop
or
cmp
fucomp
popa
mov
and
mov
sbb
out
jmp
aas
fistpll
addr16
or
int
xor
mov
fnstcw
sbb
mov
leave
fsubl
xchg
imul
add
dec
incb
pushf
pusha
jns
pop
or
call
dec
imul
add
inc
loopne
dec
add
mov
xchg
dec
xlat
shrl
gs
fisubrl
dec
loop
xchg
jle,pn
mov
adc
in
pop
dec
shr
jmp
jnp
sub
lea
movsl
dec
dec
lock
cli
jnp
xor
sub
jbe
push
jge
xchg
lret
sub
or
jo
decb
add
cmp
repnz
insb
inc
clc
out
imul
lods
jle
out
sahf
cmp
repz
aad
lahf
test
pop
xchg
and
in
lock
loopne
movsl
lahf
adc
shrb
ss
imulb
push
mov
or
and
scas
push
shl
in
mov
bnd
movsb
and
aaa
fistps
sbb
mov
lret
call
stc
roll
mov
xchg
insl
jmp
or
push
call
add
jo
or
sub
xor
sbb
push
pop
dec
loop
cmp
inc
ja,pn
xchg
pop
cmp
xchg
out
inc
pop
jno
leave
sbb
in
push
jmp
push
add
into
ljmp
mov
push
repz
cmp
movl
jnp
mov
outsb
js
pushf
sahf
push
and
cmp
push
enter
int
or
cltd
cli
je
aad
repnz
aas
cmpsb
xor
fildl
add
clc
repnz
les
mov
scas
aam
push
xchg
push
test
data16
adc
cwtl
ljmp
sub
cmpsl
sbb
lods
ret
inc
std
lds
out
subl
cmc
sub
mov
mov
push
sub
iret
jecxz
scas
sbbb
adc
mov
cmp
cmp
lret
dec
imul
add
jno
popf
sbb
lret
lret
push
outsb
sub
xor
push
dec
inc
xchg
insl
inc
mov
das
and
jle
movsl
inc
arpl
jg
repz
nop
insl
cmpsl
data16
jmp
push
ja
popf
in
ds
and
mov
mov
sub
xchg
call
cwtl
mov
out
jb
js
arpl
pop
insl
pop
inc
vmovd
sahf
jge
fsub
lods
xchg
test
iret
dec
sbb
std
and
cmpsb
sbb
pop
rcl
lock
adc
xor
inc
popa
ficoms
push
mov
or
adc
pop
sti
fs
dec
aad
inc
iret
das
int
enter
stos
jmp
xchg
loopne
jmp
adc
and
jns
add
mov
das
push
and
mov
push
fsubs
subl
addb
fsubs
loop
and
sbbb
ja
cwtl
aad
lea
fcomi
subb
sub
sbb
push
fisubrs
xchg
jle
mov
push
and
ja
jnp
cmp
daa
fidivrl
loop
ret
loope
fistps
ds
mov
scas
lcall
or
data16
xor
pop
jne
xor
mov
cwtl
fdivrp
mov
mov
cld
imull
cmp
fildll
notb
stos
ret
xor
ja
inc
adc
leave
scas
mov
ror
add
push
mov
cmp
dec
jmp
loope
clc
aaa
mov
xchg
sarb
ja
inc
lods
mov
mov
jmp
lock
jns
decl
mov
sub
xchg
push
loopne
lcall
popf
push
mov
mov
jns
jg
adc
cwtl
add
movsl
popa
xchg
or
outsl
lret
jmp
jne
cli
je
int
pop
push
dec
jle
in
shrl
xlat
xor
popf
inc
in
lds
pop
dec
push
add
popf
and
lahf
mov
mov
inc
xor
sub
fimuls
test
sbb
push
leave
xor
jns
add
pop
insb
cmp
hlt
pop
out
xchg
pop
out
icebp
rclb
xor
pop
stc
xchg
jp
pop
mov
xor
push
nop
dec
or
iret
add
into
xchg
xor
pop
pop
mov
loop
xchg
and
fmul
popa
mov
fucom
pop
sti
ja
push
fisubs
imul
push
ss
xchg
jo
lcall
mov
test
jnp
xchg
scas
sbb
outsl
es
enter
cmp
dec
mull
sub
ds
push
jb
das
push
sti
jo
add
stc
xchg
pop
lcall
out
mov
notb
adc
loope
push
es
in
aaa
sub
mov
shr
movsb
gs
rcll
sub
addr16
and
cmp
push
inc
jne
jne
dec
push
dec
notl
popa
push
push
fcomip
jo
jge
jmp
icebp
mov
mov
bound
xchg
push
neg
mov
mov
xor
jmp
test
nop
fs
fmulp
push
or
mov
pop
test
xchg
out
ljmp
mov
insl
stos
pusha
clc
cmpsb
or
jnp
repnz
mov
ja
dec
push
push
dec
jno
xchg
out
pop
gs
mov
cld
jle
lcall
cmp
dec
aad
mov
sub
in
pop
xor
les
dec
jbe
dec
stos
mov
int
inc
pusha
stos
xchg
sbb
mov
fsubrl
fldt
cmpsl
jge
outsl
enter
push
fmul
and
ja
mov
in
push
cmp
jne
cltd
loop
in
cmc
mov
clc
rcll
negb
cli
mov
adc
sub
push
les
pop
add
adc
inc
add
pop
test
xchg
cli
ljmp
mov
call
inc
cmp
mov
lock
lods
push
mov
push
popf
jne
pop
mov
mov
sahf
pop
inc
imul
hlt
iret
add
mov
jp
cmpb
push
jg
adc
in
sahf
add
mov
data16
test
shrb
cmp
or
js
andl
pushf
in
cmp
xor
pushf
dec
hlt
jp
jl
push
mov
jb
push
fstps
mov
pusha
xor
pop
int
roll
cltd
adc
jo
aaa
mov
cmpb
insb
dec
arpl
jge
aad
sbb
add
push
xor
mov
mov
mov
aaa
mov
fisttps
and
jb
jl
and
std
mov
mov
test
jns
nop
pusha
jmp
pop
cltd
les
leave
insb
cmpsb
sbbl
and
loopne
mov
inc
call
inc
and
inc
loop
jl
movsb
push
push
mov
scas
xor
ja
and
xor
scas
dec
pop
xchg
pop
insl
dec
std
dec
shrb
daa
mov
xor
rcrl
pushl
mov
inc
adc
add
in
pusha
cld
shrl
push
adc
nop
pushf
jle
fists
xor
add
inc
jmp
xchg
mov
add
ds
xor
xchg
clc
sbb
xchg
and
push
xchg
mov
ds
fnstcw
rclb
or
add
pop
sbb
xchg
in
and
push
cmp
xor
cmp
push
dec
fs
das
mov
or
outsb
xor
test
out
dec
imul
xor
dec
dec
mov
stos
fstps
or
xchg
pop
xorl
dec
aam
xchg
mov
push
xchg
xchg
push
push
lcall
and
xchg
shll
dec
call
push
cli
adc
lret
push
sbb
repz
ret
cmpsb
xchg
fstps
mov
fs
dec
xchg
outsl
cmpsl
jp
add
test
mov
or
mov
std
mov
mov
jne
dec
cmpsl
push
dec
sbb
xlat
xchg
dec
xor
loopne
mov
mov
test
sti
sti
aad
lods
into
cmp
cmp
les
cmp
xchg
jnp
cmp
jl
xor
inc
cmpl
loope
push
inc
push
loop
test
fnstcw
push
lods
enter
dec
dec
or
in
fbld
clc
mov
daa
mov
mov
fistl
adc
inc
in
adc
inc
sarl
shrb
repnz
mov
mov
iret
bound
adc
xchg
push
jmp
imul
jp
lcallw
les
xchg
xchg
jns
int
pop
mov
dec
rcll
hlt
ds
mov
sub
push
cmp
jnp
out
cmpsb
cmpsl
aam
xchg
mov
push
iret
movsb
pop
jb
add
rcll
inc
ret
fadd
outsl
imul
bound
jle
jnp
aad
inc
nop
out
mov
push
dec
jo
repz
mov
inc
rorb
pusha
push
test
je
sbb
rolb
scas
dec
popf
add
ret
mov
or
xchg
pop
loopne
and
jnp
aaa
pop
daa
add
push
bound
cmp
pusha
movsb
mov
fsubrs
in
xchg
pushf
sub
mov
push
bound
push
jb
sub
mov
mov
movsb
inc
in
push
sbb
cmpsb
dec
dec
ljmp
cmp
js
sub
aad
mov
and
clc
lock
test
cmpsb
xchg
push
xlat
push
push
inc
fdivrl
es
test
inc
rcl
mov
push
cmpl
adc
sbb
nop
jge
jnp
arpl
jge
pop
aaa
lret
shl
addr16
xchg
xor
or
jl
fwait
lret
sbb
insb
push
dec
stos
dec
orl
cmp
sahf
add
add
data16
cwtl
rolb
pop
cmpsl
lods
xor
inc
jl
mov
js
ret
mov
fistps
mov
adc
addr16
out
push
mov
mov
dec
rolb
push
in
or
sti
mov
js
out
xchg
add
or
push
sub
or
pop
mov
mov
mov
repnz
fwait
out
push
xor
lds
xchg
pop
test
fbld
adc
vpandn
jmp
cmp
aad
pushf
outsl
pop
lret
loope
addb
inc
mov
in
neg
cli
mov
adcl
ds
cs
jle
inc
cmpsb
pusha
jmp
in
mulb
jecxz
mov
adc
mov
test
dec
xlat
movsl
pop
mov
jo
push
leave
sub
aad
pop
fnsave
push
cs
sub
mov
out
adc
mov
sub
enter
xor
test
xor
jge
int3
test
mov
outsb
sub
xor
pop
repz
jp
xor
loope
jnp
inc
jg
fcmovbe
cltd
test
push
js
out
mov
mov
jae
ja
outsl
stos
ljmp
cmp
cmp
push
and
and
repnz
pop
sub
cmp
inc
mov
xchg
jg
popl
repnz
mov
sbb
xchg
stos
jae
mov
pop
mov
jmp
inc
inc
mov
pop
outsb
adc
iret
fisubrl
push
test
sbb
arpl
jbe
push
jmp
add
ret
mov
pop
lret
pop
xchg
in
cmp
lods
addr16
call
adc
mov
sub
add
outsl
insb
rclb
lods
hlt
pushf
leave
mov
je
mov
sahf
repnz
mov
sbb
sbb
dec
mov
imul
push
aaa
xlat
out
add
dec
push
push
dec
fs
jg
xchg
inc
mov
sahf
pop
xchg
inc
push
fiaddl
mov
daa
bound
fidivrl
dec
adc
rcl
insl
lret
lret
aad
fwait
aaa
push
cli
mov
pop
lcall
insb
rcrl
pop
push
inc
inc
bound
mov
cmpsl
call
out
data16
insb
popa
in
xchg
pop
arpl
pop
and
ret
pop
push
fwait
fwait
mov
mov
and
repnz
out
rcll
inc
lods
and
ret
pop
repnz
js
in
repz
dec
stos
add
ja
inc
dec
data16
xchg
in
dec
mov
loope
sub
cmp
push
lods
out
adc
popa
mov
sub
adc
mov
std
push
mov
clc
push
punpcklbw
mov
and
mov
mov
add
add
xlat
sti
cmp
ljmp
xlat
xchg
push
in
repnz
mov
mov
dec
cmp
mov
out
sbb
mov
or
mov
mov
stc
cmp
int3
gs
push
pop
cld
pop
mov
dec
xchg
pushf
push
jecxz
lret
xchg
inc
or
es
xchg
xchg
in
and
inc
les
sub
add
jp
test
sbb
leave
dec
dec
sbbb
fwait
repnz
inc
arpl
mov
sarb
sub
imul
setno
and
push
pop
or
loop
jb
loope
sub
ret
or
push
adc
dec
int
movl
adc
iret
cmp
add
jb
adc
cwtl
mov
push
add
hlt
fs
jbe
mov
addl
test
int
popa
dec
or
aaa
jns
push
adc
jne
sahf
adc
pop
sbb
int
imul
or
dec
or
lret
jo
fcomps
cli
dec
repz
jnp
mov
jbe
arpl
mov
jmp
dec
pop
cs
icebp
lds
cmp
rcll
inc
xor
mov
mov
mov
inc
leave
jno
or
xchg
inc
faddp
incl
cmp
fdivrp
dec
xchg
push
push
bnd
orl
xchg
imul
ret
mov
fcompl
mov
xchg
stos
cmp
leave
hlt
cmp
outsb
in
dec
cmp
sub
mov
in
jno
fsubl
enter
lret
pop
sbb
lock
mov
cmp
pop
ds
xor
rclb
mov
sbb
mov
repz
test
pushf
in
adc
pop
jg
pop
mov
arpl
aad
lds
jmp
add
xor
jb
cmp
test
cmp
mov
mov
in
pop
ljmp
movsb
push
cmp
outsl
sub
inc
pop
stos
ds
push
add
push
dec
iret
sub
imul
mov
icebp
addr16
fs
stc
mov
lcall
cmc
mov
push
mov
ja
push
pop
adc
push
inc
fdivrl
pop
pop
in
sbb
or
aam
pop
inc
add
or
out
jne
cli
hlt
loope
stos
mov
das
test
mov
addl
js
stc
jae
mov
in
loopne
push
es
add
mov
push
fwait
lds
cmp
das
ja
insb
inc
sbb
outsb
pop
sbb
movl
sub
push
adc
sub
dec
loope
je
pop
pop
dec
pop
sti
adc
fsub
insb
inc
mov
inc
xor
and
pop
sub
stos
sti
jecxz
mov
loop
or
mov
mov
shlb
bound
rcrl
jl
mov
repz
loope
pusha
ret
adc
out
into
jp
pop
testb
adc
sub
mov
or
fdivs
aaa
sahf
mov
stc
push
add
jb
fldenv
test
or
test
cmp
mov
out
xlat
cmp
jecxz
mov
daa
imul
mov
push
push
push
push
aad
fdivrl
stos
ds
jmp
add
sub
add
rol
xchg
push
int3
or
loopne
sub
lcall
enter
outsl
lock
pop
mov
and
and
int
clc
jle
loopne
movsb
cmp
outsb
xchg
mov
pop
sub
bound
xlat
sbb
fcomps
test
xchg
xor
lock
mov
hlt
dec
jmp
faddp
pop
jle
jle
shrb
test
stos
shrl
in
pushf
out
addr16
pop
mov
mov
rorl
jno
mov
pop
orps
call
mov
adc
xor
cs
lahf
jae
into
sub
or
dec
mov
and
xor
mov
fimull
pushl
mov
push
clc
xor
xor
iret
dec
std
jmp
dec
jno
push
sbb
and
dec
adc
mov
mov
or
or
xchg
push
fwait
pop
dec
or
push
pop
insb
in
jecxz
add
dec
in
push
fsubr
xchg
sti
notb
aaa
push
stc
inc
imul
pop
jns
mov
movsb
out
pop
daa
and
cli
popf
jecxz
xor
mov
cmpsb
sub
or
mov
lret
mov
out
dec
mov
pop
popl
jl
jb
ret
loope
push
les
in
fstpl
in
xchg
push
jnp
sarb
stc
rorl
or
lods
subb
roll
add
inc
cmc
loopne
xorb
fldt
adc
insb
cli
int
cmpsb
mov
pop
xor
das
test
in
mov
popf
fistpl
cmp
sbb
sti
outsl
int3
dec
loope
adc
or
fisubrl
js
and
aam
arpl
js
xor
push
fxch
leave
sub
mov
sbb
icebp
and
sub
mov
outsb
xchg
movsb
fists
fnsave
cs
push
stc
or
jbe
adc
add
into
aam
ja
cmc
dec
xor
popf
mov
mov
jne
fistpll
xchg
pop
test
xor
adc
enter
lret
mov
cmpsl
imulb
fcmovne
mov
pushf
or
push
xor
xor
xor
sbb
xchg
mov
xchg
jle
adc
cwtl
test
cwtl
pop
mov
xchg
cmpsb
and
jno
sbb
sub
lea
popa
sbb
mov
jnp
sbb
aaa
in
cmp
cmp
jle
sbb
sbb
mov
mov
arpl
jmp
push
and
clc
int
adc
and
je
fmulp
sbb
imul
push
inc
add
roll
cmpsb
add
mov
and
and
sarb
cmp
ret
adc
dec
adc
lcall
mov
ss
or
and
adc
fwait
xor
fisubs
cmp
adc
cld
cmp
cwtl
push
jl
or
call
je
mov
push
insl
adc
pushf
loop
pop
iret
jb
sar
jns
jl
push
in
push
lods
push
scas
xchg
mov
mov
mov
jne
fcmove
mov
adc
test
inc
orb
lret
or
sbb
je
inc
imul
mov
lret
or
mov
popa
roll
test
movsl
pop
mov
sbb
push
pop
fnstcw
aas
shl
fldenv
pop
and
and
stos
test
les
repnz
mov
testb
sbb
lcall
sti
daa
call
or
push
stos
jmp
add
out
jno
flds
sbb
mov
sub
incl
mov
add
fwait
aam
sbbb
out
icebp
add
mov
mov
rcrb
sub
mov
sub
popa
fildll
rcrb
or
enter
arpl
inc
jno
inc
xor
in
ret
ficoms
inc
test
popf
push
jl
xor
xor
jmp
lcall
hlt
pop
jmp
fcoml
aam
cmp
bound
sbb
lcall
fsubr
xchg
mov
pop
orb
mov
jl
ret
in
hlt
mov
push
adc
jbe
sbb
dec
mov
jecxz
dec
push
mov
dec
cmp
call
xlat
mov
stos
sbb
cmp
push
lea
ret
loopne
jge
sbb
cs
scas
and
xlat
pop
inc
lret
inc
scas
sbb
cmp
or
adc
mov
lahf
jne
lret
inc
xchg
std
mov
sub
pop
mov
in
pop
xchg
dec
jg
sbb
pusha
inc
jne
mov
mov
movsl
cmp
subb
push
mov
jmp
sub
fmuls
sti
mov
adc
orb
jb
lds
mov
sub
push
dec
and
mov
push
cld
cs
jno
pop
pop
push
mov
gs
xor
pop
push
cmp
inc
cs
insl
pop
mov
push
sbb
push
shll
notb
in
loopne
aam
xor
test
sub
sbb
popa
cmp
cwtl
push
add
jno
push
xchg
xchg
lret
cmp
mov
shll
or
cmp
ret
mov
cmp
call
sbb
ss
or
sub
mov
jb
pop
pop
insl
pop
cmp
lret
lahf
mov
scas
pop
pop
ret
dec
and
pop
int
aaa
orb
xor
std
inc
jecxz
pushf
and
jmp
fnstsw
roll
xchg
dec
cmpsl
nop
pop
daa
or
add
xor
mov
sbb
call
and
mov
mov
loop
sub
js
dec
call
icebp
fcompl
imul
mov
int
mov
jge
fimuls
mov
nop
scas
icebp
jl
imul
pop
xorl
dec
sahf
cmp
push
pop
push
cld
orb
xchg
mov
inc
sti
pinsrw
aam
add
adc
mov
mov
lret
hlt
or
pushf
addr16
fcmovb
adc
cmp
aas
and
xor
repnz
jmp
xchg
aas
mov
dec
pop
pop
add
aam
jle
push
jle
cmp
fs
js
pop
and
xchg
rcrl
andl
add
dec
inc
aam
fstpt
loopne
cmp
push
lods
jge
push
scas
cmpsl
lock
cld
pop
test
fsubl
leave
mov
and
and
cmc
adc
dec
loopne
mov
aam
pop
push
mov
outsb
fdivrl
sarl
cmpsb
ljmp
mov
mov
add
and
mov
adc
jmp
enter
sbbl
inc
mov
in
mov
xchg
or
filds
out
cmp
jo
cmp
pushf
add
and
sbb
fwait
inc
mov
mov
stos
movl
jmp
jp
call
adc
or
pusha
xor
mov
iret
pop
int3
test
push
pop
xor
mov
insl
cs
aad
sar
and
xor
or
push
dec
rorl
insl
pop
and
or
xlat
lcall
push
sbb
adc
jae
lods
or
clc
sub
ljmp
mov
adc
jne
xor
xchg
mov
shll
iret
adc
mov
bound
inc
sarb
adc
mov
xchg
lods
cmp
adc
xchg
loopne
lods
push
call
clc
aas
aaa
fildl
jno
aam
test
dec
xor
ljmp
jns
jnp
cltd
out
and
cmp
scas
mov
mov
add
push
sub
lock
adc
inc
cwtl
fwait
sbbb
and
or
push
sub
js
pop
sub
cwtl
aad
je
mov
ds
sub
lcall
inc
mov
pusha
sub
cmpps
add
dec
push
xchg
and
aad
sti
outsl
mov
jo
repz
sub
sahf
leave
cmp
push
add
in
sahf
into
sub
pop
in
pusha
or
fwait
sbbb
int
or
dec
adc
pop
push
loopne
push
add
xor
outsb
fisttps
push
cmp
mov
mov
inc
and
cltd
mov
lret
dec
je
or
mov
xchg
push
cmp
adc
fists
cli
movl
xor
pop
xchg
test
scas
xchg
mov
insl
push
cmpsl
push
scas
test
xlat
add
neg
fldt
cs
sbb
sub
sub
jl
ljmp
maxps
aam
mov
fwait
or
mov
jne
imul
jne
mov
jl
out
push
and
mov
pop
es
sub
inc
cmp
mov
jg
shll
mov
aas
jp
std
arpl
ret
push
lret
lcall
jne
xor
or
out
pushf
out
sbb
xchg
jnp
dec
popa
dec
pop
rcrb
add
push
mov
enter
aam
sub
jno
mov
push
push
mov
jle
mov
push
lret
xor
push
jae
pop
outsl
push
inc
ss
leave
sbb
mov
adc
dec
loopne
aas
add
fdivr
mov
push
adc
fcmovb
pop
sbb
ljmp
andl
aad
mov
jno
xchg
test
pop
push
pop
or
adc
cmp
xchg
aaa
pop
in
test
pop
sub
sahf
stc
adc
mov
jmp
inc
daa
in
pusha
out
lods
rol
mov
and
sbb
jl
or
mov
push
add
mov
mov
or
mov
adc
sarl
pop
or
push
mov
pop
jmp
xchg
push
inc
xchg
mov
xchg
xchg
stc
pushf
push
inc
stos
pop
insl
mov
pop
mov
stos
les
divl
out
outsb
mov
sub
pop
cmpl
subl
scas
clc
nop
test
jbe
out
test
mov
jns
rorl
and
pop
adc
push
insb
mov
sub
das
mov
loope
xchg
cmp
ret
push
das
pop
xlat
xchg
xor
in
pop
sub
jge
push
hlt
add
push
scas
lods
dec
sahf
pop
mov
mov
pop
or
and
add
stos
mov
sub
sahf
and
pop
jo
fwait
adc
mov
test
jae
cli
stos
cli
sub
filds
xchg
and
cmp
xchg
mov
nop
loop
pop
loopne
pop
loope
xchg
pop
hlt
cli
sbb
mov
mov
mov
push
daa
or
inc
pop
dec
fbstp
lods
mov
or
cmp
fimuls
inc
mov
xchg
outsb
shlb
xor
cmp
sbb
jg
adc
mov
nop
fsts
sbb
fwait
imulb
cmp
ret
jmp
enter
imul
mov
iret
cmc
shlb
stos
mov
ja
icebp
mov
pop
add
push
popf
decb
xchg
sub
xchg
fbld
inc
fcompl
ret
xor
out
sub
add
mov
xchg
xchg
or
fnstsw
enter
out
nop
mov
shll
or
mov
push
jle
int
mov
negl
pop
iret
xor
jns
ljmp
lahf
sbb
adc
cmp
pusha
fwait
jp
pop
push
addl
divl
test
pop
subb
inc
pop
mov
cmc
arpl
push
pusha
out
push
clc
push
xchg
notb
sub
or
insb
rcrl
mov
loope
shll
int
fwait
punpckhwd
orb
fwait
call
cmp
pusha
cld
pop
scas
cmp
cli
fstps
mov
sahf
inc
daa
insb
mov
roll
cli
xchg
push
sbb
cmp
daa
jl
mov
decb
add
int
stos
stos
int3
push
std
xchg
push
addb
dec
pop
jg
xchg
jp
dec
stc
call
and
mov
xor
scas
push
popf
and
cli
gs
call
rcrl
xor
mov
fcmovne
cmp
and
cmp
push
call
int3
jns
and
movsb
jecxz
mov
add
rorl
sbb
pop
bnd
lock
and
dec
les
mov
mov
mov
scas
or
cmp
lret
testl
xchg
mov
inc
pop
jp
and
jbe
fcmovne
mov
mov
aas
add
push
push
mov
jl
outsb
mov
add
xor
pop
fistpll
loopnew
in
enter
and
std
outsb
pop
pushf
mov
pushf
cmp
and
xor
nop
leave
push
xchg
add
sub
cmpsl
out
or
sub
add
outsl
roll
dec
pop
insb
jmp
jg
orl
push
adc
or
mov
pop
adc
adc
xchg
dec
pop
mov
sti
pop
sbb
xchg
mov
leave
mov
imul
push
mov
arpl
sbb
mov
inc
xchg
addb
add
pop
mov
repz
frstor
xchg
cmp
lahf
inc
adc
pop
push
imul
push
roll
fadds
and
ja
inc
imul
cmp
cmp
cs
xchg
mov
push
cs
mov
mov
xor
mov
loopne
out
add
sub
daa
mov
cmp
mov
outsb
inc
outsb
ret
andb
fisttpl
jne
push
jno
pushf
arpl
fists
test
out
dec
popa
cmp
xchg
sub
add
xchg
pop
cli
sar
mov
call
mov
push
decl
xchg
test
cs
adc
sahf
aas
mov
inc
into
out
movsl
push
lahf
or
mov
outsl
adc
xor
fistpl
out
dec
and
push
pusha
push
add
mov
scas
and
das
movsb
test
fdivrl
es
mov
adc
fwait
jae
xchg
jnp
lret
fistpl
xlat
cltd
scas
sarl
push
xor
sbbl
addr16
pop
hlt
and
in
in
pop
mov
repnz
cmpb
sbb
add
stos
pop
cmp
xchg
icebp
cmp
lea
pusha
cltd
cltd
cld
fistpl
push
fstl
xor
and
aaa
jg
mov
bound
out
add
xor
jecxz
push
mov
cmpsb
jp
xchg
push
mov
shrl
mov
int
mov
fwait
cmp
dec
push
adc
test
and
leave
movsl
sbb
ljmp
add
stos
sbb
add
adc
cltd
inc
loop
iret
and
aad
jne
cwtl
test
cltd
mov
fs
inc
pop
adc
repnz
cmpsl
fld
nop
mov
mov
add
gs
adc
pop
jmp
cwtl
lods
not
xchg
cs
cmpsb
push
jb
addb
mov
add
xor
mov
jo
int3
add
or
add
out
in
notl
sub
pop
add
jmp
mov
test
push
por
in
pop
mov
mov
popa
inc
sbb
pushf
ret
mov
scas
das
sub
adc
push
dec
pop
aas
sbb
jae
xchg
movsb
sbb
push
mov
push
clc
xchg
mov
push
jmp
adc
pop
xor
js
or
ret
pop
lea
ror
cmp
mov
nop
lahf
xchg
out
js
arpl
rorb
xor
negb
push
icebp
jp
out
push
add
daa
outsl
sub
mov
dec
int
ljmp
dec
cmpsb
cli
mov
inc
jbe
into
pop
pop
inc
mov
adc
mov
loope
lea
mov
or
and
xor
mov
jb
mov
out
add
fs
adc
inc
jne
fidivrl
cmp
rcll
out
nop
mov
push
mov
pop
or
and
adc
lock
dec
into
out
andl
cli
xor
cmpsl
lahf
cmp
or
mov
push
mov
pop
adc
arpl
sbb
repnz
add
lret
sub
scas
inc
fiaddl
cs
adc
cmpsb
fidivrl
repnz
cmp
push
dec
movsl
shll
lds
cld
jg
and
jmp
js
push
push
and
push
push
mov
mov
cmpsb
fidivl
pop
pop
test
aam
jg
out
push
xor
inc
fsubrl
shll
mov
inc
and
jg
lods
int
lods
inc
jle
mov
popl
xchg
sub
dec
stc
mov
jl
shll
pop
aam
and
pop
scas
sub
out
sub
loope
inc
dec
icebp
stc
dec
movsbl
push
mov
add
jns
jo
or
imul
imull
pop
sbb
jne
jmp
dec
mov
push
dec
xor
leave
hlt
jp
adc
jmp
data16
pop
ficoml
je
idivb
loopne
jno
fsts
jg
pop
lcall
mov
data16
mov
jne
push
cmpsl
sub
out
xor
xchg
inc
and
das
push
cmp
stos
aas
sbb
in
sti
pop
loopne
pushf
cld
fistl
data16
jl
std
fbstp
push
adc
pop
mov
mov
mov
jmp
mov
add
sbb
push
cmpsb
or
jne
int
cmpsb
call
lahf
outsb
dec
mov
or
jne
push
ljmp
rep
add
nop
lahf
dec
lcall
popf
inc
cltd
loopne
call
lock
add
fsubs
jmp
test
inc
leave
push
mov
sbb
jnp
or
repnz
icebp
jne
stos
mov
push
std
sbb
loop
mov
std
or
dec
pop
mov
or
imul
or
mov
inc
in
jle
iret
insl
arpl
insl
mov
sub
xchg
out
enter
mov
loop
aam
adc
jmp
out
int3
lcall
inc
dec
call
pop
jl
jp
subb
xchg
mov
cmpsl
out
and
mov
cmpb
call
sub
outsl
adc
ja
push
movsb
mov
push
and
cmp
pop
sub
ficoml
js
add
xchg
test
lea
mov
adc
sbb
cmp
push
inc
popf
cli
sub
push
inc
mov
cmp
mov
imul
inc
loop
imul
cmpsb
xchg
test
je
sbb
or
add
lret
cmp
shl
imul
mov
shlb
xor
inc
sbb
mov
jo
leave
std
popf
push
int
pushf
arpl
xor
loop
pop
cli
push
mov
lret
fwait
jb
pop
inc
cld
adc
sub
or
xchg
adc
rorb
je
xorl
push
pop
inc
xchg
outsb
dec
std
pop
inc
lret
loop
sbb
lahf
xorb
and
sbb
cmc
lods
lds
out
repnz
sbb
out
sub
and
adc
jmp
inc
jmp
adc
out
xor
nop
repz
jle
test
xchg
jl
shlb
outsb
and
pop
flds
ljmp
popf
lret
cmpsb
sbb
in
arpl
fisttpl
adcb
mov
ss
or
cmp
daa
sbb
push
out
or
out
test
push
outsb
or
fisubrs
outsl
or
lods
test
mov
xchg
int
scas
xchg
or
stc
jmp
pop
mov
mov
pop
sbb
pop
mov
sub
push
push
popf
jge
adcl
cmpsb
rcll
hlt
cmc
pop
xor
ret
xor
xlat
jl
pop
inc
lret
push
addr16
mull
test
cmp
je
mov
mov
loopne
cmp
or
cld
shrb
mov
mov
mov
scas
sbb
les
and
adc
ret
nop
lods
daa
aas
push
pop
daa
jae
rcl
psrad
loope
lock
out
aad
mov
repnz
jbe
aam
dec
xorl
xor
mov
fdiv
fisubl
or
dec
pop
and
aad
ret
aad
lcall
mov
mov
pusha
mov
cmp
cmpsl
fisubrl
xor
into
int
popa
sti
mov
lahf
sti
xchg
dec
jle
push
dec
mull
orl
push
loope
imul
scas
arpl
cld
mov
insb
jp
fcoml
pop
lock
in
outsb
pusha
cltd
out
data16
inc
popf
mov
dec
loop
cmp
ljmp
pop
push
out
popa
push
sub
cmpb
mov
sbb
daa
ret
idivl
lahf
xor
sub
adc
arpl
in
cmp
cmp
mov
les
and
enter
test
movsl
sahf
aas
movsb
ljmp
cmp
jl
in
loope
jnp
pop
fs
xor
cmp
andb
mov
mov
mov
in
mov
andb
xor
xchg
js
rep
lds
xor
out
rcll
sbb
sub
out
movsl
adc
mov
aam
cmpsb
dec
push
outsb
es
and
ret
ljmp
pop
jecxz
int
push
mov
push
test
fucom
rol
repnz
out
into
pop
mov
cmpsl
in
sbb
jne
jb
mov
shl
test
mov
jmp
mov
filds
divb
jne
ror
aas
fmulp
dec
jne
mov
mov
pop
int
push
xchg
mov
mov
ret
adc
in
sbb
inc
cmp
push
in
cmpsb
add
adc
push
in
insb
sbb
imul
mov
add
push
xchg
js
shlb
lcall
or
inc
mov
inc
or
aad
loop
jne
push
mov
rol
jge
sbb
aad
push
sub
jmp
iret
xchg
fwait
inc
je
cwtl
cmp
jnp
jmp
xor
dec
pop
fbstp
inc
cmp
data16
pop
sbb
lret
dec
lcall
popa
rclb
xchg
jmp
shlb
xor
xor
jge
lcall
mov
arpl
fisubs
rorb
fbld
cs
das
or
xchg
add
les
icebp
imul
clc
add
fdiv
into
dec
pop
jmp
xchg
fdivr
mov
stc
rol
pop
faddl
mov
mov
push
arpl
jl
mov
shlb
iret
pop
dec
lahf
adc
mov
adc
in
test
mov
mov
lret
jl
in
fsubrl
xor
shlb
cmp
negl
lret
mov
jae
fildll
sub
inc
cmp
subl
mov
mov
dec
adc
cmc
roll
outsb
insl
push
cmp
mov
adc
popf
in
orl
lea
ja
jg
sbb
jge
cmp
mov
jbe
cwtl
insb
mov
mov
mov
fs
lock
jl
rcrb
insl
mull
ret
or
out
mov
jae
sub
pop
repz
inc
adc
mov
data16
loope
sub
repz
aas
inc
mov
push
mov
js
gs
fcompl
mulb
je
cmp
push
adc
xchg
mov
adc
push
pop
mov
out
sub
cmp
lea
jno
xchg
or
mov
scas
loop
stos
sub
lahf
cmp
pop
mov
sbb
in
addr16
mov
rcl
jmp
and
pop
iret
arpl
cmpsb
mov
lea
pop
es
fsubr
cli
inc
xchg
jmp
sub
mov
jl
inc
adc
sub
lret
jge
movsl
mov
lods
jecxz
push
shll
sar
lds
test
pop
cmc
fisttpl
push
fists
int3
adc
popf
pushf
mov
dec
lea
pop
scas
push
int
sub
mov
scas
cmpsb
dec
sarl
mov
icebp
fidivrs
mov
bound
mov
lods
jmp
ret
mov
sarb
push
mov
push
in
mov
lds
int3
mov
adc
jae
mov
popf
pop
cmpsb
aam
or
popf
xchg
or
out
stc
mov
add
push
dec
cli
sub
hlt
jo
xchg
pop
movb
and
roll
push
mov
cwtl
push
outsl
push
jns
cmp
jne
mov
testl
pop
pusha
or
sbb
and
shrl
imul
mov
sub
jbe
sub
ljmp
cltd
hlt
push
push
lods
rdtsc
lock
jl
push
repnz
or
dec
ror
sbb
shlb
add
and
fiadds
jle
js
aam
out
mull
outsb
jp
pop
jno
sub
xchg
xchg
and
add
jae
push
cltd
xor
popl
inc
adc
cmp
in
cmp
test
sub
mov
push
iret
ret
inc
scas
popa
lcall
fcoml
sbb
ds
add
xor
movsl
outsb
jg
insb
sbb
movsl
push
test
push
in
cmp
mov
sbb
ret
mov
inc
ret
xchg
popf
sbb
lret
cmpb
inc
mov
mov
sbb
xlat
sub
xchg
out
dec
xchg
lcall
pop
cmp
sub
rcll
out
dec
mov
pusha
jle
or
pop
sbb
sbb
mov
adc
gs
mov
push
ss
mov
xlat
cmp
imul
jmp
pusha
xor
jnp
imul
into
xlat
loope
jno
leave
sbb
in
movsl
dec
das
fisttps
popf
daa
adc
sysret
push
pop
add
cmc
adc
iret
mov
outsl
pop
dec
into
js
out
gs
test
jns
pop
aaa
js
ret
arpl
ljmp
ret
in
cmp
xchg
mov
xchg
std
clc
bound
xor
ss
roll
sarl
cmp
ficoms
test
xchg
or
fidivl
dec
rol
rclb
adc
sbb
xor
frstor
icebp
icebp
dec
rolb
fdivl
popa
sbb
rclb
das
inc
jp
jnp
fwait
mov
aad
aam
sub
mov
sub
dec
shrb
cmpsl
ror
lods
cli
lea
add
into
mov
sub
jo
cmc
xchg
imul
rol
jge
or
add
mov
or
mov
jl
fildl
xchg
cmp
aad
js
enter
mov
shll
pop
je
and
pop
mov
sub
mov
arpl
dec
cwtl
aaa
sub
int
xor
jno
sbb
insl
aas
es
pop
ret
cmp
sub
jg
xchg
aaa
mov
push
dec
mov
sub
in
test
inc
fs
aad
sbb
xchg
mov
movb
cmp
and
notb
pop
movsl
stos
sub
testl
subl
icebp
lahf
sti
ficomps
or
aaa
mov
cwtl
mov
sarb
cmpsb
mov
push
mov
or
mov
aad
lret
xor
pop
ja
loope
inc
and
ljmp
daa
pop
inc
mov
pop
cmp
pop
cmp
jecxz
in
cmp
or
mov
stos
fisubrl
loop
and
cmp
dec
cmp
movsl
std
je
mov
test
aad
dec
inc
enter
jge
inc
cmp
enter
and
pop
and
jp
bound
lods
lcall
or
fdivrl
dec
fldl
mov
mov
add
sbb
addr16
inc
push
outsb
inc
jle
and
rclb
mov
movsl
outsl
ljmp
popf
ss
xor
xchg
add
imul
int3
jmp
icebp
jmp
push
jl
pop
lods
jle
sub
adc
pop
mov
push
cvtps2pi
inc
inc
in
imul
mov
testl
ljmp
ja
in
loop
sub
xor
popf
pop
dec
es
sub
jne
pop
inc
ljmp
jg
ficompl
cwtl
xor
repnz
sub
inc
sahf
in
frstor
loop
sub
cmpsb
and
in
lret
dec
push
mov
add
arpl
insb
xlat
in
daa
mov
in
clc
fs
data16
mov
cmp
dec
xchg
adcl
rcrb
mov
sub
popa
out
cmpsl
pop
pop
stc
shlb
add
fnstenv
idivb
insl
and
in
add
jmp
xor
adc
dec
jb
jp
mov
dec
fsub
or
outsb
xchg
test
insb
jno
mov
or
lods
mov
cld
or
mov
pop
and
fsubrl
push
pop
bound
roll
jle
fwait
sbb
and
pop
or
jnp
jecxz
mov
mov
sbb
lock
adc
ret
sub
dec
imul
push
sub
or
adc
les
mov
in
pop
imul
stos
mov
rorb
push
addr16
inc
call
sbb
insb
sub
pop
pop
shll
pop
arpl
sbb
lret
hlt
adc
popa
jp
lcall
int3
jo
ljmp
popa
or
fdivrl
ljmp
add
adc
xor
pop
push
adc
mov
sub
clc
shll
gs
push
xchg
and
sub
push
int3
ret
xor
cmp
nop
xchg
cmp
les
repnz
mov
or
outsl
es
mov
inc
mov
lret
mov
lds
dec
in
mov
jmp
mov
fildl
push
mov
add
lea
xchg
into
decl
arpl
lds
cmp
xchg
jp
mov
cwtl
ss
outsb
dec
xor
inc
ja
cmp
xchg
fisubrs
jecxz
push
jbe
cmp
shrb
jp
push
cmp
frstor
test
mov
shl
mov
sbb
mov
shlb
jp
jl
and
loopne
jmp
jecxz
xor
fsts
sbb
fcompl
sbb
lock
jle
xlat
push
imul
mov
sbb
pop
dec
and
sub
mov
mov
sub
sub
shll
mov
je
inc
out
scas
xchg
sbb
dec
cwtl
jbe
cltd
sbb
xchg
xchg
fucomi
adcb
xchg
imul
inc
and
fsts
mov
addr16
lods
daa
mov
push
dec
add
push
xchg
rorb
out
rolb
xor
push
push
test
lea
sub
cmc
or
push
push
bnd
imul
jno
int
scas
adc
les
repz
adc
jmp
sbb
sbb
mov
imul
jp
sub
not
adc
mov
push
aam
mov
xor
push
mov
in
sub
sbb
cmpsb
fdivs
mov
adc
pop
sub
and
and
or
sbb
cmpsl
mov
movsb
cltd
sbb
cmpsb
inc
mov
sbb
sbb
add
sbb
and
fmul
or
cld
push
mov
push
dec
inc
dec
or
mov
outsl
jnp
mov
sub
addl
ds
add
and
lock
or
jecxz
in
mov
popf
cmpsb
cmp
inc
lcall
xchg
in
mov
mov
inc
adc
cmp
mov
push
or
fwait
cmp
push
scas
push
jp
into
and
jnp
pop
inc
add
outsl
lds
cmp
jae
mov
xchg
popa
push
pushf
addr16
adc
xorb
dec
pop
adcb
mov
push
popa
lea
fistpll
pop
test
cmp
push
mov
sbb
movsb
push
cmpsl
jmp
push
jle
nop
jmp
inc
xor
out
movsl
sub
shr
push
pop
test
ret
test
loop
or
push
jle
cmpsl
xchg
dec
sbb
xor
and
mov
add
adc
fs
dec
xlat
adc
in
loopne
lods
pop
outsl
in
or
popa
loope
xor
aad
dec
mov
dec
fildl
jmp
fnstenv
mov
aas
adc
sub
or
leave
xchg
pop
loopne
sub
fcompl
cmpsb
adc
push
call
jnp
add
and
pop
clc
daa
mov
mov
rorb
ljmp
or
mov
movsb
pop
fsts
ds
es
hlt
push
inc
shll
xor
jns
adc
fs
xchg
lock
nop
push
xlat
inc
cmpsb
lock
push
push
mov
pop
inc
and
cltd
dec
das
bound
lret
pop
lea
jns
sub
js
sbb
mov
cmpsl
and
add
je
lcall
int3
pop
fsubr
outsb
fwait
jp
inc
out
xchg
cld
cmp
fdivrs
out
inc
or
cmp
pop
or
cmpsl
xor
sbbl
jg
dec
push
mov
adc
mov
sub
push
dec
out
cmpsl
xlat
xor
mov
aas
adc
jnp
push
fwait
pop
adcl
push
in
fstps
dec
aam
lahf
mov
mov
lret
mov
cs
sbb
jnp
lods
cmpsb
popa
adc
xlat
lods
into
push
cs
pop
xchg
repz
aad
inc
jae
sbb
popa
mov
lea
dec
push
enter
aas
test
shlb
lock
imul
mov
fimull
fimull
and
mov
mov
subb
xchg
jno
mov
mov
leave
add
and
cltd
dec
xlat
adc
fwait
mov
stos
ficoml
lret
pushf
dec
sbb
fwait
aam
test
sub
dec
fisubl
inc
xchg
mov
les
aas
cmp
pop
add
fiaddl
xchg
pop
test
cmp
inc
push
jbe
add
sbb
jl
shlb
pop
cmc
cmpsb
loop
cmp
cld
jl
test
cmpsl
arpl
out
sub
iret
xchg
nop
out
xchg
roll
push
dec
xchg
test
mov
sub
inc
aad
pop
fidivl
les
jo
aaa
dec
mov
jo
mov
and
mov
inc
push
jbe
jo
test
mov
les
push
mov
adc
out
stc
jge
xchg
cmp
push
fists
sbb
es
cmp
scas
mov
loopne
aas
out
mov
xchg
xchg
pusha
inc
stos
test
push
cmp
jl
push
loop
lea
adc
adc
lods
add
sbb
jbe
lahf
aad
lret
sub
xchg
or
out
xchg
test
test
jno
xchg
pop
stc
mov
fwait
pop
inc
xorl
fsts
adc
jbe
std
cwtl
and
or
push
fsubl
cld
dec
popf
lods
ficompl
fwait
sub
fucom
cld
test
hlt
lahf
jmp
jg
xorb
sbb
sub
scas
sub
jnp
popa
pop
xchg
mov
ss
out
xlat
rcll
je
and
push
push
sub
ret
dec
fbld
nop
les
nop
rcrb
loope
cli
ja
xor
dec
pusha
mov
or
dec
test
loopne
xchg
add
cs
pop
jbe
jp
and
add
test
aam
add
pop
int3
jb
enter
movsl
jecxz
xor
mov
insl
push
fstl
arpl
pop
mov
cwtl
out
fldl
sub
aaa
jne
mov
mov
repnz
push
xchg
adc
ss
pop
enter
pop
movsl
and
sub
and
rorl
shrl
jbe
in
inc
hlt
xor
imul
cmp
hlt
sub
lcall
in
scas
clc
xchg
inc
cmpsb
stc
mov
mov
sub
dec
jge
lcall
add
int
lcall
dec
or
cmp
and
mov
xor
mov
lea
divl
mov
out
mov
call
xlat
mov
lods
lret
xchg
pop
or
cmp
ret
sub
adc
dec
cmp
testb
mov
sub
jbe
sub
mov
or
fnstsw
and
jge
dec
insl
push
sub
mov
fdivl
jecxz
pop
movsl
insb
scas
fwait
jns
sar
fcoms
mov
ret
loop
lcall
or
mov
repnz
stos
and
adc
push
sub
xchg
pusha
cmp
jecxz
sbb
cmp
jo
mov
sbb
movsb
mov
pop
sbb
and
pop
ljmp
mov
fisubrl
push
or
sub
data16
and
clc
inc
pop
movsl
lock
lret
cmp
adc
xchg
ljmp
push
stc
push
jg
scas
insl
cli
das
dec
cmp
insl
addr16
jp
add
adc
shll
fildl
cmp
sub
repnz
xor
fcoml
add
push
and
mov
mov
fwait
cltd
pop
jae
sub
lret
cmp
mov
lods
icebp
aam
add
mov
cltd
aas
cmc
insb
mov
fwait
insb
ret
pop
test
push
in
je
push
in
outsl
xchg
leave
dec
das
add
add
in
movsl
les
sub
aas
fadds
dec
pop
je
out
out
nop
inc
mov
cmpsb
push
cltd
jp
imul
push
xchg
inc
mov
lods
adc
ret
filds
add
push
cwtl
rcll
pushf
mov
mov
jb
scas
push
jle
adc
jbe
sub
fsts
jmp
lock
jnp
cmp
pop
je
adc
loopne
xchg
xor
pop
int3
pop
js
popl
ljmp
loop
xchg
push
ljmp
mov
push
jge
push
xor
push
mov
adc
jb
xchg
imul
dec
push
gs
mov
dec
shrb
push
cld
stc
sbb
fisttps
out
int
cmp
mov
xchg
xchg
lret
push
sti
inc
pop
xchg
pop
cmp
lret
xor
cmp
xor
pop
sar
xchg
dec
movsb
lret
pop
ja
sarb
inc
mov
sahf
xlat
mov
mov
add
sahf
adc
inc
xchg
fwait
pop
test
std
jb
mov
xchg
jnp
mov
dec
inc
mov
pop
pop
rorb
dec
sarb
mov
in
push
sbb
dec
jecxz
xor
xchg
pushf
bnd
es
fwait
jmp
popa
sub
adc
mov
stos
loope
sbb
out
subb
mov
fldt
jno
in
mov
pushf
stc
xchg
in
or
jg
xchg
add
shlb
mov
mov
mov
cmp
add
cmp
push
jno
mov
fdivl
jg
jg
xor
add
lock
enter
and
cmpsl
jmp
lret
outsl
or
mov
and
imul
bound
repnz
in
sbb
jp
mov
sahf
and
add
aad
js
mov
push
fwait
test
or
out
mov
divb
mov
lcall
movsl
cmp
jb
mov
roll
or
cs
mov
add
fcoms
sub
fs
jge
dec
enter
jbe
ret
out
jecxz
mov
jecxz
sbb
loope
mov
in
imull
sbb
clc
sti
or
xchg
mov
add
mov
cmpsb
add
fs
inc
loopne
jl
push
cmpsb
xchg
lahf
pop
push
dec
insl
aad
fisubs
jg
and
push
jp
mov
ljmp
cmp
push
mov
mov
add
mov
inc
xchg
or
add
lret
stos
aam
mov
mov
push
iret
sub
mov
and
aaa
repnz
fmuls
mov
pop
cmp
and
sub
sahf
sub
enter
jbe
sbb
stos
xchg
xchg
xor
pop
mov
out
sbb
xchg
xor
cmp
lahf
xor
sbb
mov
mov
cmp
pop
mov
sti
jb
cmp
arpl
xor
pop
push
jp
cmp
test
popa
adc
data16
sarb
inc
or
fisubrl
arpl
test
push
xchg
add
push
push
shll
push
test
pop
sbb
and
into
stc
or
movsl
outsb
decb
mov
mov
imul
gs
lahf
imul
andb
iret
jmp
push
cmp
pop
mov
aad
jle
fidivs
xchg
push
inc
xor
push
int3
push
or
loopne
sbbb
call
push
into
xor
leave
ja
jo
jecxz
dec
fisubrs
inc
cmp
enter
cmp
fnstsw
jl
pop
and
mov
jecxz
imul
or
dec
aaa
fstpt
xchg
mov
mov
pop
xchg
cmpb
xorl
fstl
test
lock
xorb
jmp
movsl
imul
lock
data16
pop
pop
push
movsl
sub
scas
jnp
dec
hlt
cltd
sbb
mov
adc
flds
dec
hlt
nop
stc
lahf
jmp
icebp
ds
push
cmp
cmp
xor
call
repz
lds
xchg
push
mov
push
adc
and
jne
leave
inc
ds
roll
in
dec
lret
test
lock
push
repnz
inc
leave
gs
mov
in
jnp
daa
pusha
les
adc
sbb
or
mov
or
lods
ds
dec
je
pop
push
dec
pop
add
fisubrs
call
dec
ljmp
push
lret
rorl
fisttps
rcr
mov
fcmovb
dec
mov
sbb
dec
ss
loopne
bound
scas
fildl
mov
push
and
pop
xchg
mov
push
cmove
xor
outsl
push
iret
mov
andl
sub
das
mov
mov
rcll
js
movsl
push
xchg
inc
pop
loop
inc
xchg
pop
stc
mov
in
imul
or
mov
mov
insl
or
dec
jns
add
pop
arpl
shll
lret
adc
mov
test
pusha
loopne
cmp
xor
loop
repz
stc
ret
loopne
and
mov
repz
dec
dec
rclb
imul
ja
cs
jae
sete
mov
xor
mov
fs
adc
adc
lahf
adc
paddusw
add
aaa
aad
lock
inc
fdiv
aam
mov
adc
addr16
movsl
or
mov
or
sbb
sti
mov
or
and
fstpl
loope
sbb
lds
push
in
xchg
or
ret
call
pop
jns
dec
int3
test
xlat
popf
int
imul
xchg
mov
mov
cmp
adcl
rcll
push
imul
out
fsts
out
mov
dec
outsl
sub
out
aas
fstpl
imul
pop
lds
xchg
or
aad
test
or
push
pop
sub
dec
mov
enter
repz
xchg
xchg
das
mov
dec
ret
ret
mov
test
cwtl
xchg
aas
pushf
outsb
pop
adc
rorl
jmp
and
mov
mov
sub
dec
call
out
jo
aas
push
xchg
and
pusha
dec
ret
shll
repnz
insl
jae
ror
jmp
insb
pop
pop
mov
outsb
and
imul
sub
sub
mov
xchg
lea
dec
fwait
rorb
pop
mov
fwait
or
xchg
in
mov
sbb
clc
xchg
cs
cmpsb
pop
stos
fwait
jge
inc
test
ds
mov
sub
xchg
pop
dec
test
mov
cs
repz
out
call
mov
push
add
negl
imul
call
shll
adc
out
jmp
adc
cmpsb
mov
out
fs
inc
mov
sarl
mov
test
pushf
sbb
rcrl
stc
xor
movzbl
jle
lds
shll
xchg
mov
xor
jmp
scas
popa
lea
mov
in
push
bound
xchg
or
scas
mov
imul
out
stc
mov
and
xchg
mov
test
inc
mov
push
jns
fwait
and
push
outsl
es
shll
aaa
lods
les
mov
in
pop
sbb
or
gs
ds
popf
jb
lods
or
dec
scas
arpl
lahf
cmpl
je
mov
nop
lock
dec
leave
sbb
into
dec
cmp
data16
pop
and
adc
cmp
sub
cltd
lea
pop
push
enter
loop
push
adc
and
pop
adc
aaa
jbe
jmp
inc
cmp
sbb
addl
faddl
push
mov
popf
mov
out
fabs
shll
and
ror
scas
loop
in
and
iret
pop
jmp
fbstp
inc
mov
orl
adc
insl
xchg
adc
pop
in
repnz
inc
xchg
sub
lret
cwtl
fisttps
or
insl
cli
pop
and
shlb
call
out
dec
jb
sbb
cld
daa
mov
lods
push
test
cltd
xor
ds
das
pop
mov
repnz
ja
sahf
test
rolb
dec
jmp
outsl
cmp
add
adc
jno
ss
jmp
cli
jmp
addr16
ja
push
fwait
fwait
jbe
and
mov
insl
ja
std
add
jb
lock
pop
mov
mov
xchg
xchg
out
cwtl
mov
mov
inc
repz
sahf
xor
jle
repnz
mov
lea
stos
mov
push
mov
xor
mov
fidivrs
outsl
mov
inc
mov
mov
das
push
jo
int
cmp
fsubrl
inc
and
cmpsb
in
sbb
jp
dec
divl
mov
cmp
stos
outsl
pop
adc
add
lret
mov
cs
add
mov
sbb
movsb
and
es
xchg
pop
cmp
int
sar
adc
add
mov
jb
inc
ret
sub
stos
mov
and
push
fimuls
leave
adc
push
int
jo
or
cmp
jle
je
jmp
jle
sub
lahf
dec
test
push
xor
mov
adc
ret
pop
das
jmp
sbb
xor
xchg
lds
jb
jmp
mov
hlt
hlt
rol
cmp
in
cmpsl
mov
add
mov
and
jmp
out
rolb
jg
dec
sub
test
lea
lock
xor
cs
jne
aas
aad
or
jle
jmp
in
mov
jae
add
sbb
mov
mov
cmp
jg
sti
push
add
imul
dec
add
fidivrl
faddl
mov
fimull
daa
loopne
aad
jbe
xchg
push
dec
jno
pusha
out
xor
and
add
mov
ret
loope
pushf
add
cmp
ret
js
jb
sbb
jno
pop
inc
push
or
or
push
jae
jae
mov
jo
push
dec
cmp
jmp
leave
pop
insb
aam
mov
xchg
mov
xchg
cmp
lea
pop
ljmp
negl
inc
add
jns
cld
cmp
inc
jb
aad
xor
out
pop
mov
lcall
or
mov
push
dec
pop
in
sub
inc
jbe
test
mov
aad
test
jmp
cmc
pop
pop
xlat
cmpsb
scas
or
and
xchg
xchg
add
nop
fidivs
pusha
sbb
and
pop
fs
mov
add
cltd
aad
add
leave
jae
stc
add
cmpl
dec
outsl
loope
sbb
leave
call
sbb
imul
fisubl
rcll
or
xor
jl
jne
inc
mov
mov
adc
adc
mov
mov
les
negb
or
ds
int3
fdivrp
in
addr16
fcomps
mov
sub
or
cmp
movsb
stc
sti
movsl
jge
cmp
les
jae
xchg
mov
lahf
popa
sub
das
or
fidivrs
mov
and
dec
push
in
pop
movsl
dec
inc
in
cmp
pop
imul
mov
mov
dec
push
push
dec
push
pusha
fdivl
or
enter
push
dec
popl
jl
jb
imul
andb
mull
sub
pop
pop
mov
out
inc
sbb
sbb
cwtl
rcrb
mov
xchg
pop
popf
jbe
xor
add
test
sarb
shrb
mov
fidivl
mov
inc
cltd
std
aaa
sub
jecxz
scas
push
xor
pop
es
cmc
loopne
mov
in
inc
fdivrs
scas
mov
dec
add
adc
xlat
flds
sub
jbe
cmp
dec
lret
shlb
fs
push
cmp
js
lock
pushf
adcb
sub
inc
mov
push
inc
xlat
xchg
mov
inc
imul
dec
mov
pop
insl
jl
int3
stc
fisubrl
iret
or
adc
pop
xlat
lock
inc
sbb
loop
sub
add
pop
inc
push
ja
es
dec
mov
xchg
jp
int3
lock
mov
dec
sbb
aam
adc
popa
stc
inc
xchg
sub
aad
aaa
out
fs
xchg
loope
sub
or
adc
mov
insb
mov
push
xchg
xchg
adc
cmpsb
in
fldcw
mov
and
xchg
pop
jmp
push
mov
cmpsl
inc
loope
nop
pop
cmp
pop
aas
dec
add
ss
fs
mov
sbb
or
sbb
aam
mov
rorb
pop
daa
and
aas
or
out
cmp
call
fwait
pop
xchg
cld
and
shrb
lret
mov
push
mov
inc
ljmp
push
scas
dec
test
pop
lods
dec
or
test
sub
xor
pushf
inc
loope
xchg
xorl
js
ficomps
cmc
aad
add
dec
inc
sahf
pop
arpl
fdivrs
decl
xchg
rcl
sub
repnz
push
cmpsb
pop
int
mov
cwtl
gs
jge
enter
jecxz
pushf
dec
mov
jg
arpl
mov
pop
rcrl
adc
gs
mov
lods
cmp
int
sub
scas
add
and
pop
mov
and
push
add
cmp
cld
mov
sbb
adc
sub
sbb
push
aaa
pushf
imul
in
bound
call
popa
cld
mov
int3
nop
add
push
pop
leave
xchg
jne
cs
cli
aad
adc
push
fwait
loop
loopne
rclb
pop
lea
sub
mov
repnz
fnstcw
xor
dec
sbb
push
gs
sbb
mov
insl
addr16
xor
scas
sub
js
or
mov
shlb
mov
jne
popf
clc
sub
mov
jle
shrl
mov
sti
out
add
push
sbb
xchg
out
jl
out
loope
out
sbb
pushf
lahf
addl
dec
push
push
aas
pop
sub
dec
xchg
clc
enter
loop
or
test
mov
mov
cmp
xor
shlb
xchg
push
in
cld
loope
lret
out
imul
lds
add
outsb
sub
outsb
aad
pop
mov
add
xor
adc
imul
addr16
add
aam
inc
lahf
jle
sahf
push
cmc
rolb
push
outsb
mov
sbb
ret
ffreep
lock
js
out
cmpsb
ds
mov
in
push
pop
and
or
jp
xchg
out
cwtl
jbe
dec
popf
inc
cmp
aad
inc
repnz
mov
fistl
das
lock
push
dec
pop
jbe
push
jb
fcompl
jno
mov
iret
lcall
add
dec
xor
xchg
jle
xor
adc
int
lea
dec
movsb
les
mov
rolb
add
cli
xchg
js
repz
clc
repnz
cmp
mov
sub
inc
or
cld
stos
mov
shrl
lahf
sub
cmp
inc
leave
xchg
mov
and
out
push
pop
lods
cmp
adc
mov
shl
push
loopne
aaa
or
adc
xchg
hlt
mov
pop
shl
in
push
mov
es
mov
inc
out
push
loopne
test
dec
sbb
jle
jne
dec
jecxz
push
jge
mov
faddl
inc
leave
dec
lods
lret
xorb
mov
cli
cmp
cmpsl
sub
add
sub
mov
xchg
pop
sbb
push
icebp
icebp
and
mov
xor
inc
test
mov
xchg
std
pop
fdiv
fistpll
popa
sarl
xor
jle
je
aaa
stc
inc
sbb
push
dec
icebp
das
dec
neg
in
push
iret
lret
inc
mov
ja
and
movsb
test
jle
ret
cltd
and
movsl
pop
cmp
and
mov
scas
xchg
dec
pop
fxch
cmc
fdivr
add
xor
xlat
in
je
jne
idivb
int3
xchg
push
sarb
jmp
fidivrs
outsb
aad
xchg
dec
push
imul
and
jg
icebp
scas
lahf
lcall
ds
jns
add
jnp
in
je
mov
add
pop
mov
out
call
dec
add
sti
inc
lret
sbb
sbb
push
cmpsb
xor
sti
push
in
dec
push
mov
mov
jle
mov
in
or
push
es
hlt
fadd
addr16
call
or
cmpsb
dec
xchg
jo
mov
fcoms
mov
dec
daa
in
cmp
punpckldq
hlt
pop
lcall
adc
int3
shll
rolb
mov
cltd
bound
add
test
and
rcrb
jb
outsb
pushf
fucomp
jb
mov
cmc
std
test
sub
mov
call
idiv
xor
bound
pushf
ljmp
pop
test
inc
fwait
imul
inc
dec
jo
int3
xlat
adc
je
scas
imul
and
or
sbb
mov
xlat
aaa
jae
test
je
shll
and
cmp
mov
jae
stos
xchg
sahf
mov
or
pop
xchg
lret
cmp
sbb
movsl
int3
dec
call
ja
jle
dec
dec
scas
test
dec
mov
test
or
mov
mov
add
jp
mov
mov
jno
cmc
mov
push
add
cmp
mov
cltd
push
out
int
mov
fistps
sub
sub
mov
int
std
aaa
xor
test
aas
gs
cmp
cmp
push
ret
mov
mov
push
mov
xchg
mov
int3
push
sbb
add
add
pop
add
jle
dec
iret
vmaxss
push
pop
and
fiaddl
ss
out
out
jl
aad
lret
pop
fimull
mov
movsl
add
adc
jb
xchg
stc
xchg
add
into
sbb
sahf
dec
movsb
pop
xchg
or
fcomp
in
imul
insl
lds
js
lds
enter
mov
test
repz
leave
dec
inc
inc
ffreep
out
ss
add
fsubl
or
jb
cld
movsb
jo
lcall
data16
push
jae
fistpl
pop
dec
sbb
hlt
fidivrl
inc
sub
mov
mov
mov
out
sub
imul
jle
adc
fistl
popf
push
mov
jge
cmp
std
dec
movl
aas
push
imul
or
dec
fnstenv
aam
inc
sub
call
js
cltd
out
adc
pop
aad
xor
push
xorb
decl
mov
mov
push
sbb
aaa
cli
ficomps
dec
sbb
stos
aas
pusha
pushf
shll
pusha
and
cltd
aad
push
lret
popf
lock
and
push
clc
fsubl
outsb
jno
jecxz
jbe
int3
lcall
dec
clc
sbb
dec
adc
cltd
xchg
ror
push
lock
lods
lods
test
push
imul
jg
test
in
pop
shlb
adc
pop
icebp
cmpsl
adc
jb
daa
pusha
cmp
inc
leave
mov
mov
or
je
and
je
or
orl
mov
dec
ret
xchg
cltd
mov
insl
adc
negl
push
and
push
cmpl
cmp
mov
or
pop
push
lcall
lret
push
je
xor
push
in
in
pop
fwait
pop
or
adc
cmp
fcompl
add
push
repz
push
cmpsb
jno
sbb
mov
ljmp
adc
sbb
cld
and
mov
ficompl
xchg
xorl
scas
mov
testl
or
or
mov
jo
pop
add
cld
rcll
push
ljmp
xchg
fbstp
mov
mov
repz
pop
ret
sub
sbb
dec
jecxz
xchg
dec
loop
adc
adc
lcall
push
lcall
fsubrs
push
jge
or
adc
sar
mov
dec
pop
into
pop
xor
lcall
cli
dec
std
pop
call
and
outsb
inc
scas
push
inc
mul
fisttpl
pop
insb
jae
lret
in
out
xor
ljmp
fistpl
or
jge
fsubrs
pop
jb
es
arpl
dec
jns
pop
add
xor
aaa
and
inc
jbe
xrelease
mov
aaa
mov
test
fs
roll
fildl
mov
ret
outsb
stos
cmp
pop
popa
mov
fcmovne
mov
cmp
sbb
push
xchg
or
add
pushf
sti
push
imul
imul
clc
fistl
jno
add
test
and
in
fld
and
mov
mov
test
dec
les
mov
shlb
pop
xchg
shll
mov
popf
push
xchg
xorb
std
sahf
dec
out
clc
cs
fistl
fcoms
sbb
insb
jmp
or
ficoms
ja
cs
mov
mov
bound
xchg
mov
jge
jns
xchg
add
jl
nop
divl
fcmovnbe
clc
sub
pusha
and
out
adc
jns
fnstenv
cwtl
push
cmp
out
xor
sub
push
pop
nop
or
in
inc
hlt
shll
push
fdivrl
loop
sub
xorb
mov
inc
jb
pop
push
pop
mov
pop
paddsw
jnp
fnstenv
jne
out
or
nop
addr16
jle
out
out
lock
or
or
lret
mov
mov
lcall
xchg
and
mov
inc
in
ljmp
inc
loope
addr16
das
ds
mov
and
into
ss
out
sbb
subl
cmpsl
sub
stos
sti
inc
enter
dec
xor
std
cmp
cmp
cmp
imul
insl
ja
fbstp
xchg
sarb
data16
mov
add
cmp
das
fsts
pop
mov
xchg
mov
outsb
ja
mov
pop
and
add
or
aaa
xchg
cmovns
adc
fsts
push
sar
lods
mov
push
mov
fiadds
pop
jp
lods
aaa
es
out
fs
xchg
xchg
enter
or
xor
mov
push
cmp
or
sti
pop
in
and
pusha
cmc
leave
mov
xchg
fldl2t
jno
mov
adc
es
jmp
pop
icebp
ja
cmp
cmp
cld
xchg
outsl
dec
movsb
stos
aam
add
pop
bound
fimull
insb
jecxz
adc
cmp
fstps
mov
mov
cmp
call
mov
fldl
sbb
jge
push
cs
pop
pop
insb
das
lea
push
cmpsl
jnp
das
in
mov
scas
ljmp
in
repnz
push
out
mov
xchg
scas
pop
pop
sbb
divb
test
inc
inc
fs
xor
mov
repnz
and
cmpsl
insl
repz
mov
loopne
mov
adc
mov
and
xchg
repnz
call
mov
and
xlat
sub
dec
out
ljmp
shll
add
ss
popf
pusha
inc
xorl
fisttpll
stos
pop
repnz
stc
cmp
aad
adc
or
sar
scas
xchg
cmp
jp
mov
sub
es
jl
mov
lahf
pop
xor
xor
sub
in
cmp
dec
sub
xchg
cs
mov
mov
sub
inc
dec
xor
pop
stc
test
or
std
push
mov
xor
rclb
pop
add
ja
into
cwtl
pop
out
cmp
enter
roll
and
mov
loope
pop
cmovle
ret
sti
and
or
dec
inc
xchg
out
add
es
sub
in
test
sub
add
xorb
std
pop
fs
push
mov
loopne
sbb
imul
xorb
sbb
sbb
into
pushf
fistpl
inc
and
cli
push
sub
push
pop
rclb
push
das
mov
xor
pop
and
inc
inc
out
inc
mov
cmp
mov
std
scas
aad
mov
fdivrl
push
stc
mov
cltd
lcall
inc
jno
xchg
sbb
adc
lahf
rcrl
shlb
adc
push
mov
pushf
arpl
push
dec
stos
jle
xchg
iret
in
nop
or
fisubl
out
adc
pop
call
lods
shrl
loopne,pn
xchg
add
cld
or
ret
add
sbb
sbb
xorl
mov
fwait
xchg
mov
push
push
fbstp
or
xchg
push
movsb
inc
mov
testb
cmc
mov
jne
sub
push
jle
int
cmp
icebp
adc
out
fwait
negl
jns
adc
jg
inc
sbb
and
dec
pop
das
inc
and
lret
cmc
js
scas
sahf
movsb
testb
inc
lret
test
adcl
add
clc
lock
inc
jmp
lcall
dec
scas
movsb
sbb
lahf
movsl
cmc
jo
cmp
jmp
out
and
pop
cmpsb
push
std
mov
test
in
xchg
or
jg
xchg
add
in
les
adc
in
dec
pop
xorl
and
adc
mov
imul
push
imul
imul
lcall
sub
pop
pop
mov
jno
stc
ret
mov
test
push
xchg
pop
cmp
cmp
push
mov
add
sub
lods
sahf
in
or
shrl
mov
cmp
mov
push
test
addr16
lret
jl
stos
outsl
mov
nop
mov
pop
in
cmpsl
add
dec
popa
pop
in
mov
jne
add
cmpsb
mov
add
inc
dec
cmc
dec
lock
ljmp
mov
pushf
cli
loopne
sahf
mov
loop
mov
mov
mov
ja
addr16
adc
lods
jo
popf
call
push
jl
call
push
pop
lcall
fisttpll
lcall
inc
pop
jae
push
lahf
movsl
sti
dec
xlat
aam
xchg
daa
and
outsb
push
pop
xchg
jne
mov
sub
or
out
mov
cmp
aas
mov
test
lcall
lods
fistpl
jle
or
jne
in
or
mov
popa
sbbb
xchg
inc
es
test
jl
outsl
sub
push
mov
lock
cmp
insl
and
inc
lds
hlt
lods
xchg
mov
out
decb
adc
pop
nop
mov
loope
movsl
mov
jge
pop
xchg
sub
lcall
loope
xlat
gs
pop
mov
mov
mov
mov
mov
mov
push
dec
flds
rcll
mov
add
in
jl
inc
xchg
movsl
repnz
or
push
cwtl
xchg
in
in
pop
test
mov
loopne
shll
push
in
cltd
pop
stos
fucomp
xchg
into
clc
mov
jg
fcmovnu
mov
fsubs
into
jne
xor
rolb
fisubs
in
aam
rcl
xchg
push
mov
and
mov
mov
pop
add
mov
sbb
imul
dec
push
aaa
inc
xchg
sub
jl
out
add
mov
outsl
cmpsl
out
int3
movsb
mov
cwtl
std
xor
mov
loopne
pop
or
int3
out
ss
popf
add
mov
mov
dec
and
repnz
or
movsb
shrb
inc
sbb
das
sbb
xor
test
scas
jae
sub
sub
shrl
iret
mov
lods
pop
add
fldenv
pop
loopne
dec
lods
mov
cltd
cli
ljmp
mov
popf
aam
inc
ret
jbe
push
lock
cld
mov
dec
jge
pop
jecxz
shlb
mov
push
lock
mov
mov
fwait
popa
and
cmp
and
out
aas
clc
cmp
cmc
stos
mov
inc
out
mov
and
lret
inc
jp,pn
jbe
add
std
sub
int
movsb
ss
sbb
out
loop
sub
call
pushf
xchg
ds
sahf
out
movsb
cmp
aaa
repnz
aam
or
cmp
jns
jb
lret
inc
jecxz
iret
and
and
adc
jmp
mov
scas
int
loope
arpl
pop
add
mov
test
xchg
push
cmp
cmpl
sbb
shlb
xor
mov
mov
sbb
xor
sbb
add
pop
insb
leave
fxch
test
add
inc
fstpl
out
sub
and
lret
dec
adc
sbb
sbb
imul
nop
in
add
inc
inc
out
mov
in
scas
push
dec
push
ds
repnz
cmp
mov
mull
push
sbb
mov
xorb
dec
repz
daa
ja
shl
mov
mov
outsb
cmc
sub
adc
and
mov
stos
mov
leave
lods
pop
out
aaa
insb
movsl
es
in
or
outsl
cmc
fmull
adc
aaa
shl
and
rcll
or
mov
repz
mov
mov
adc
ds
dec
pop
push
lds
mov
jg
pop
std
fcompl
cmpb
push
popf
cmp
das
push
leave
inc
xor
adc
cmp
pop
mov
push
add
sub
jp
mov
int3
pusha
inc
mov
dec
cli
scas
mov
mov
test
sarw
sbb
xor
inc
imul
or
pop
jno
lds
cmp
xchg
xchg
aad
xchg
jp
sub
or
mov
cmp
and
pop
lea
mov
mov
test
push
es
and
cmpb
stos
lret
xchg
lahf
cld
and
adc
sbb
cmpsl
out
pop
icebp
scas
xchg
mov
xlat
aas
sub
xchg
push
pop
jg
btc
clc
mov
jp
aas
xor
movsb
xor
sub
bound
mov
popa
movsb
push
shrl
push
stos
sar
in
or
cmpsl
outsl
cmp
addl
push
into
jnp
popf
xor
outsb
ret
mov
cmc
and
idivb
repz
faddl
cmp
imul
sbb
idiv
sbb
xor
xchg
jp
pop
mov
pop
shll
sub
mov
test
shlb
fcmovb
push
into
popa
pop
stos
push
lahf
mov
sub
shlb
sub
push
out
into
dec
sbb
and
jo
out
and
sbb
xchg
or
dec
mov
inc
imul
call
pop
inc
rol
mov
stos
jl
mov
lret
stc
outsb
mov
daa
pop
mov
divl
repz
jl
loope
or
mov
test
dec
ret
addr16
testl
push
jo
add
dec
je
fidivrl
ret
inc
je
ret
subl
mov
je
leave
xor
leave
mov
xchg
sahf
pop
notb
out
out
test
pop
shrl
cmc
scas
mov
xchg
ret
test
outsl
fnstcw
cwtl
clc
xor
and
data16
mov
std
fidivs
push
loop
into
mov
jp
jno
adc
cs
push
push
pop
push
xor
mov
push
and
pusha
pop
mov
sbb
push
es
and
pop
push
jo
loop
dec
jge
xchg
je
pop
push
enter
clc
mov
fcoms
xchg
xchg
ficoms
or
movb
arpl
xchg
push
mov
mov
fistpll
cmp
xchg
dec
out
add
gs
add
insb
fstpl
fadd
xor
adc
lahf
mov
jae
scas
popf
push
jo
xor
xor
xchg
jp
in
or
mov
negb
pop
jg
add
add
popw
xor
mov
push
mov
fbld
aas
data16
outsl
stc
add
pop
jl
mov
jnp
pushf
add
in
sub
or
fsubp
cld
mov
add
int
das
jle
jo
inc
clc
fildll
push
and
and
jb
push
fstpt
mov
cltd
dec
roll
jae
adcl
sub
rorl
add
hlt
inc
push
jge
insb
cwtl
pop
aaa
nop
push
mov
out
mov
sub
and
jp
add
xchg
fwait
mov
enter
and
mov
fisubrs
inc
jmp
insl
in
fsubl
or
xchg
sub
imul
pop
loopne
out
push
and
shl
nop
mov
scas
fistl
ret
dec
aam
je
addr16
fsubrs
mov
lods
arpl
pop
dec
mov
sbbb
fisttpll
push
jle
add
sbb
jmp
loope
imul
xchg
jns
shl
mov
mov
xor
add
pop
push
cmp
stc
push
sub
push
sub
sti
mov
ficomps
or
dec
mov
push
and
xchg
or
scas
orl
in
sub
cmp
or
jecxz
repz
mov
jae
mov
jns
aad
clc
xchg
dec
adc
call
add
cmp
jbe
xchg
addr16
xchg
jnp
push
scas
or
push
fdivrp
sub
xor
mov
hlt
adc
ljmp
ljmp
jne
test
addr16
aaa
adc
push
sbb
cmpsl
into
adc
mov
jle
inc
lods
inc
dec
push
fstl
out
mov
cmpsl
adc
ljmp
jbe
dec
cmc
pop
addl
or
sub
sbb
lods
or
mov
int
in
mov
nop
int
pushl
xor
xchg
add
xchg
leave
mov
cltd
ss
decb
lret
mov
dec
cmpsl
push
stos
aaa
rolb
bound
shrb
mov
push
mov
jp
fsubl
xchg
ljmp
int3
push
pop
xchg
inc
cmp
out
adcb
push
dec
imul
xchg
sbb
pop
mov
sbb
xor
or
lds
sbb
test
mov
mov
jle
in
pop
xchg
loop
mov
cltd
jp
adcb
inc
xchg
lret
push
mov
xor
mov
lahf
sti
pop
pop
or
fptan
inc
pop
jnp
or
cmp
loop,pt
movsb
insl
and
ljmp
sbb
pop
and
shrl
out
adc
jecxz
sbb
sub
mov
scas
into
push
inc
mov
and
mov
das
outsl
mov
dec
rclb
fwait
xor
and
mov
aaa
cmc
pop
addr16
xchg
lods
or
mov
scas
push
cmp
and
mov
and
pop
push
in
push
stos
fld
xchg
fiaddl
lea
inc
ljmp
out
je
push
loop
mov
cli
lock
std
mov
rorl
xor
mov
mov
cmpsl
popf
mov
add
pushf
lcall
test
jg
jne
imul
cld
nop
xchg
hlt
dec
bound
and
sub
out
mov
mov
ret
and
insl
cwtl
test
sbb
rolb
mov
enter
xchg
push
cmp
popl
les
movsb
repz
imul
into
fmulp
es
pop
or
xor
stos
fstps
jo
dec
mov
xchg
mov
ret
popa
mov
ljmp
mov
in
mov
xchg
pop
mov
pop
sbb
inc
adc
ljmp
repz
mov
enter
pop
scas
push
mov
test
es
add
adc
mov
rorl
mov
push
fbld
aam
mov
or
popa
sbb
sub
xor
sbb
mov
leave
xchg
push
mov
adc
test
fwait
xchg
out
ret
into
subl
lahf
stos
dec
insb
adc
arpl
insb
ss
xchg
enter
out
not
imul
cwtl
xchg
rorl
push
or
pop
outsl
mov
data16
push
iret
mov
pop
mov
daa
lret
mov
inc
add
adc
stos
mov
ret
inc
and
push
subl
insb
sahf
mov
or
xor
sub
scas
aad
jb
adc
leave
mov
in
xlat
test
pop
pop
hlt
leave
ja
push
xor
out
cld
insb
sbb
lret
push
and
pop
sbb
xchg
push
mov
cmp
mov
call
cmp
int3
and
lret
fwait
mov
xor
pop
xchg
cmc
or
xor
movsb
push
popa
outsl
std
lea
jnp
dec
sub
xchg
mov
popf
fsubrl
xchg
cmpsl
sub
iret
pop
aam
es
jmp
movd
sub
es
hlt
out
cwtl
out
fcompl
lods
sub
push
mov
clc
mov
inc
fimull
sbb
mov
xor
adc
test
mov
mov
xchg
loope
lcall
out
adc
movb
test
mov
mov
push
jo
je
pop
int3
jbe
jnp
adc
dec
xchg
adcb
imul
js
cmc
ljmp
push
dec
pop
in
jnp
jmp
sub
pop
jns
test
ret
mov
xchg
outsl
fstpl
adc
or
mov
adc
loopne
shl
mov
dec
fidivs
push
jp
pushl
cli
test
lret
insl
pop
inc
lods
mov
es
mov
adc
mov
cmp
and
in
jnp
xor
nop
sub
data16
ljmp
sub
xchg
test
dec
jmp
out
cld
mov
in
jmp
push
jp,pn
ret
sahf
mov
lds
jge
dec
pop
lea
dec
scas
pop
les
hlt
mov
jl
cmp
addr16
test
lock
pop
mov
sub
arpl
inc
mov
mov
addr16
mov
pushf
adc
iret
pop
and
cmpsb
mov
out
test
rolb
fcoms
aam
lock
or
out
insl
das
arpl
cli
mov
add
xchg
mov
cld
add
inc
shll
jge
push
or
jnp
cld
iret
lods
cltd
mov
mov
enter
cmp
push
mov
jg
popf
hlt
push
mov
and
movsl
and
in
in
sub
ljmp
gs
mov
mov
xor
mov
fdivrl
mulb
xor
fsubl
popf
push
jmp
int
adc
sbb
mov
push
xchg
shll
popf
jnp
insl
cmp
pop
aad
loopne
scas
data16
loope
imul
sub
popa
roll
mov
dec
filds
das
ret
inc
jmp
pop
sub
test
cmp
dec
pop
test
imul
mov
pop
incl
enter
inc
cmpsl
icebp
push
xor
into
inc
mov
fstps
in
shlb
stos
ret
call
inc
mov
in
scas
test
sbb
mov
cld
ds
loope
mov
xor
xlat
cs
jns
mov
ljmp
sti
iret
cmp
mull
dec
adc
sub
rcr
push
subb
in
das
pop
fnsave
pusha
and
xor
xchg
pop
jmp
repnz
mov
inc
pop
scas
mov
push
xchg
aam
cmpsb
lret
fbstp
push
icebp
push
mov
xchg
xchg
mov
cmpsb
dec
pop
dec
inc
push
int
scas
loop
jge
cltd
test
sub
stos
pop
xlat
sub
inc
mov
jno
jb
ds
pop
test
jb
xchg
les
imul
into
and
scas
mov
movsl
sbb
pushf
fcoml
cld
and
xchg
nop
adc
push
jmp
nop
rcrl
xor
jp
repnz
sub
int
lea
sbb
xor
jmp
xchg
fstl
add
insl
out
andl
movsb
mov
data16
fidivrl
scas
mov
push
std
dec
dec
decl
sbb
insb
push
push
jo
add
sub
sbbb
adc
rcrl
xchg
je
insl
add
cwtl
out
lcall
mov
in
loopne
xor
fstl
repnz
sub
dec
cwtl
cmc
pop
inc
cld
popf
loopne
shll
int
inc
lods
out
negl
push
enter
popw
js
mov
hlt
enter
in
and
andb
negl
sbb
dec
mov
add
sub
je
xlat
xchg
mov
pop
mov
add
test
push
pop
mov
mov
lret
adc
pop
mov
mov
mov
imul
lds
adc
fistps
mov
dec
in
push
outsb
pop
mov
lahf
mov
rcrl
pushl
cli
add
fnstsw
inc
and
sbb
mov
lret
cmc
unpckhps
dec
mov
rcll
xchg
aaa
push
cmp
shr
pop
stc
push
inc
repnz
xor
lea
loope
in
outsb
adc
add
movsl
xor
insl
xchg
in
mov
int3
insb
test
insb
aam
imul
inc
inc
sbb
ffreep
adc
int3
or
push
stos
pop
xchg
xor
mov
xor
mov
imul
popa
jno
lret
cld
pop
rorb
mov
mov
ret
lret
dec
sti
sub
inc
and
and
jbe
cmpsl
mov
rcrb
and
sbb
mov
insb
jae
test
add
push
ret
mov
inc
xor
test
sub
call
or
jp
or
fadds
xchg
dec
adc
aad
pop
sub
jmp
jb
hlt
dec
movsl
scas
insl
or
jne,pt
subb
repz
add
add
inc
clc
dec
ret
add
or
and
cwtl
inc
dec
enter
jae
movsb
mov
push
faddl
fistps
pop
inc
add
mov
lds
mov
rcrb
lods
xchg
adc
jnp
sti
jb
mov
lods
jnp
test
pop
stos
mov
std
pop
and
jno
add
pop
rcll
jp
das
pop
mov
cmp
cmp
adc
bound
cltd
xchg
sbb
pop
push
aad
ret
push
and
mov
aam
out
jle
sarl
inc
in
push
in
dec
into
mov
fnstenv
add
cltd
push
ret
popa
scas
ret
jmp
adc
sti
pop
lea
or
dec
cltd
sub
and
xchg
mov
cmpl
dec
xchg
popf
repz
icebp
xor
in
scas
mov
addr16
je
ja
cmp
add
adc
sbb
fs
xchg
sbb
lea
or
xchg
mov
subl
in
xor
cld
in
test
or
aaa
adc
popw
mov
ljmp
pushf
add
test
push
cmp
and
jns
xchg
sbb
call
push
les
bound
cmp
xor
sub
xchg
shr
mov
xchg
push
cmp
cli
dec
int
fs
stos
stos
jns
jbe
lcall
mov
repnz
push
dec
lcall
or
call
int3
push
inc
dec
dec
dec
xchg
push
add
movsl
xor
in
or
sbb
data16
ljmp
insl
sub
adc
es
popa
loopne
cmp
xor
sbb
sbb
and
jbe
rclb
jb
int
repnz
stos
enter
and
dec
sti
push
lea
lret
ds
dec
cld
stc
testb
xor
dec
mov
dec
sbb
jae,pt
lock
pop
in
mov
mov
clc
cwtl
jmp
testb
movsb
mov
fstpl
sti
lcall
repz
clc
cmc
xchg
xor
shlb
pop
push
mov
ret
ljmp
adc
std
or
pop
adc
pop
int
stc
cmp
inc
pushf
repnz
dec
lds
push
and
sarl
pop
push
in
jnp
jle
clc
sbb
dec
shll
enter
pop
arpl
gs
sub
mov
cmpsl
xor
xchg
mov
test
sbb
ss
mov
les
push
cmp
jbe
ffreep
ficomps
jne
rcll
mov
lahf
push
incl
push
add
lret
fisubl
mov
mov
xor
xchg
std
mov
jle
sti
nop
mov
enter
push
jo
xchg
push
aad
repz
cmp
das
inc
mov
sbb
mov
add
imul
shrl
setae
mov
dec
test
movl
movl
call
popa
test
push
push
pop
add
pusha
int
clc
dec
jo
scas
mov
cmc
push
adc
in
mov
roll
je
clc
lea
mov
lret
sub
adc
shll
popa
dec
rorl
push
push
adc
pop
sbb
inc
lods
sub
sub
xor
test
or
leave
push
out
fcomps
icebp
mov
pop
jecxz
or
cmpsb
ss
scas
rolb
mov
xchg
orl
rcl
out
scas
push
mov
scas
jl
sub
in
xor
mov
aad
cwtl
popf
test
popa
adc
xor
int3
adc
rcll
jnp
enter
cli
clc
aas
outsb
orb
jbe
adc
push
mov
pop
jne
fistps
enter
cmp
mov
xchg
and
in
jmp
movsb
and
push
lret
in
leave
sub
fiadds
addr16
sub
jno
test
outsl
dec
les
sahf
dec
mov
mov
aaa
or
and
adc
out
popa
push
rolb
insb
xor
fsubr
or
xchg
test
inc
add
adc
add
or
out
outsb
cli
jl
js
mov
movb
xor
push
push
aas
fdivr
sub
pop
sub
out
dec
inc
cmp
fsubs
jmp
mov
sbbb
loopne
data16
xchg
loop
cld
mov
adc
mov
addl
cmp
shll
outsb
or
jnp
scas
ljmp
cmp
dec
ficompl
xor
dec
add
push
push
mov
clc
cmp
sub
mov
les
adcb
mov
jmp
xor
pop
rol
xor
notb
data16
mov
inc
cli
jb
jp
mov
xchg
pop
push
aaa
mov
fldenv
sbb
mov
sbb
sub
lods
stc
add
iret
pop
xorb
js
jno
mov
lds
lret
or
outsl
dec
pushf
roll
mov
sbb
or
gs
pop
idivl
xlat
sub
cmc
mov
cmp
in
mov
std
inc
mov
data16
cmp
imul
xor
mov
dec
inc
arpl
clc
dec
push
jmp
fmull
popa
jl
movsl
out
lret
je
add
dec
rorl
stos
jbe
sub
push
lret
arpl
push
jp
jae
inc
incl
jle
cmpsb
sbb
jg
mov
mov
int3
jle
or
leave
inc
add
dec
dec
push
push
stos
sbb
dec
inc
inc
xor
imul
movsb
inc
cmp
aad
popa
je
xchg
popf
insb
cmp
dec
xchg
test
xchg
push
adc
pop
inc
test
