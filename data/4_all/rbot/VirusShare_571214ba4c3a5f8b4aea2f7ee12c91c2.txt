int
inc
addr16
add
push
inc
jne
gs
dec
sub
hlt
lods
dec
inc
arpl
add
shl
and
mov
cmpsb
jns
scas
insb
int
out
adc
inc
and
add
and
mov
movsl
xor
mov
inc
cwtl
pushf
hlt
lods
mov
mov
decb
push
adc
jns
xchg
cld
stos
push
insb
sbb
push
fldcw
xor
pop
outsl
mov
or
out
dec
jl
and
sahf
sbbb
in
pop
in
add
jo
inc
imulb
leave
imul
gs
nop
in
mov
dec
sub
dec
sbb
push
add
cmp
xchg
and
imul
or
int3
add
gs
pop
rolb
in
sub
sub
test
fistpl
mov
cmpsl
loop
mov
out
mov
jae
fistps
aam
imul
outsb
lret
add
mov
xor
push
inc
lods
xor
xor
xchg
addr16
and
jnp
dec
and
or
mov
jl
aaa
add
sbb
mov
cli
add
adc
fisttpl
shlb
dec
push
mov
sbb
jno
dec
pop
mov
test
xor
fisubrl
mov
ret
xor
pushf
mov
cmp
into
xchg
js
scas
movsl
lahf
leave
push
xchg
push
dec
js
pusha
adcb
fsubs
inc
inc
and
imul
insb
jp
add
xor
sbb
mov
cltd
cmc
ljmp
xchg
enter
xor
shrl
sub
mov
xor
push
jp
or
pop
or
push
in
mov
xchg
mov
jl
xor
push
in
sbb
and
rclb
leave
sbb
jne
adc
mov
mov
xor
loope
pushf
cs
leave
push
in
mov
or
aam
lods
rcll
cmc
fldt
cs
loop
nop
sub
std
sub
mov
imul
je
addl
addl
jle
fs
sbb
sbb
xchg
out
sbb
ret
loop
jns
fwait
test
hlt
push
or
push
mov
jne
pop
push
test
fsts
jnp
dec
push
pop
enter
popa
dec
mov
lret
inc
xchg
lds
insl
je
imul
lods
jmp
jge
orb
fbstp
mov
subl
aam
or
cmpsl
std
outsl
mov
mov
or
mov
sti
call
sub
cs
and
pop
cmp
xchg
jno
into
stc
cmp
jmp
outsl
dec
push
insl
push
sbb
dec
sub
loope
insl
pop
jg
in
push
push
cmp
dec
sub
jns
scas
loopne
scas
xchg
mov
lret
out
jne
dec
push
mov
mov
mov
and
jl
lods
and
and
mov
sbb
inc
out
and
stos
mov
and
rcrb
pop
jns
lcall
dec
and
push
cmp
faddp
popa
mov
les
mov
lock
repz
push
jg
inc
leave
lret
test
inc
pop
rcrb
movsb
dec
mov
lea
fbld
popf
push
ret
mov
lods
sub
xchg
jmp
fisttpll
sub
cmp
shrl
jecxz
roll
mov
ds
dec
out
shl
dec
movsb
or
jg,pt
aam
dec
int3
testb
lcall
xchg
cmp
fwait
mov
cs
inc
xor
or
inc
dec
clc
cld
jne
daa
push
push
insl
push
mov
stos
popl
aas
repz
or
xchg
lock
pushf
jl,pn
aaa
pop
xor
loopne
xchg
mov
jb
rcll
jo
ds
mov
nop
gs
adc
dec
in
push
aas
push
jge
loop
push
xor
gs
xchg
sbb
popa
inc
add
and
sahf
movsl
mov
jecxz
lcall
adc
adc
les
dec
adc
pop
push
cmp
and
les
int
and
ret
mov
sbb
popf
sbb
lea
sbb
test
add
cmp
xor
mov
ja
pop
mov
adc
or
mov
jle
mov
mov
xor
pop
loopne
test
sti
ret
mov
orl
pop
push
dec
gs
xor
fs
std
popa
call
xchg
lahf
xor
and
test
or
ja
mov
das
jg
call
push
gs
mov
mov
popa
scas
sbb
aam
dec
stos
shlb
jo
aam
xor
sub
lods
data16
mov
inc
add
cli
xadd
outsl
push
stc
test
pop
sub
push
loopne
push
adc
dec
add
push
fdivr
fsubr
dec
je
dec
mov
jge
push
shr
lea
pusha
mov
sbb
jecxz
or
aaa
scas
data16
aam
jmp
leave
pop
dec
push
push
cmpsl
xor
out
inc
adc
mov
jge
loope
xchg
jmp
sbb
arpl
pop
jnp
jns
push
ret
xchg
or
std
mov
int
dec
arpl
lret
fisubrl
insl
iret
mov
repnz
xchg
movsb
sub
movsl
mov
in
pop
and
pop
jle
fwait
push
mov
enter
adc
mov
aad
add
test
pop
insl
imul
fnstcw
loope
cmp
lods
fsubrl
or
pusha
jnp
sub
int3
add
and
or
lock
lds
push
inc
push
bound
dec
pop
add
push
inc
mov
cmp
idivl
loopne
xor
minps
popa
mov
dec
cmp
adc
testl
cld
pusha
sub
cmp
scas
and
xchg
push
test
jnp
sub
cld
cmp
push
push
push
push
lea
push
push
push
push
not
not
nop
cld
or
stc
mov
xchg
or
jae
test
push
push
pop
pop
sub
add
or
cmc
cmc
mov
je
jg
test
test
nop
cmp
push
rol
pop
inc
dec
and
jmp
std
das
xor
and
mov
cs
lods
cmpsb
sti
pop
add
shr
jmp
call
cmc
test
push
jns
inc
dec
pop
cmc
and
shl
mov
add
jns
push
mov
pop
ror
push
add
push
pop
pop
push
cmp
pop
push
push
add
pop
jae
test
stc
cmc
cmc
inc
dec
push
pop
je
push
test
pop
rol
add
push
add
mov
pop
and
push
call
insb
ret
push
imul
xor
cli
adc
fldl
cmc
mov
nop
mov
mov
cmp
pop
loope
sub
sbb
adc
xor
dec
hlt
pop
pop
pushl
pop
push
call
dec
pop
jp
jno
xor
push
mov
push
cs
rcr
xchg
sub
lds
sub
mov
cwtl
ds
cmpsb
incb
in
cmpsl
pop
pop
mov
shr
test
je
clc
jnp
jp
je
shl
jmp
or
std
insb
ss
stos
int
call
in
dec
lret
sbbb
movsl
xchg
push
add
pop
push
call
jno
adc
dec
pop
lahf
fidivs
inc
mov
out
lods
dec
or
add
pop
xor
shr
clc
stc
mov
inc
inc
inc
inc
loop
jecxz
sub
add
out
or
scas
cmpsl
ss
clc
jp
push
pusha
mov
fisttps
out
loope
inc
loop
jecxz
jle
gs
inc
jle
push
xor
pop
and
push
add
pop
push
lea
pop
shl
jg
test
and
sub
sub
push
jl
sub
pop
ror
or
and
push
movzbl
and
or
jo
push
cmp
pop
cmc
loop
pop
lea
sub
clc
cmp
inc
dec
dec
jne
jmp
or
cs
shl
pop
mov
mov
pop
lods
or
adc
ss
xchg
sbb
out
in
or
daa
push
add
xorl
jmp
pop
fists
add
or
or
jno
je
jne
cmp
cmp
bound
mov
mov
push
ror
cmpsl
adc
push
jl
into
adc
or
lods
ja
pushf
mov
sub
pushl
push
movzbl
sub
jb
and
add
push
jp
push
add
pop
pop
push
push
and
pop
pop
stc
nop
loop
pop
loop
jecxz
and
nop
adc
cmp
inc
pop
ffree
inc
pop
dec
es
add
movzbl
cmc
nop
loop
pop
rol
sub
test
test
jle
push
and
pop
rol
nop
cmc
and
mov
fs
lods
pop
and
mov
in
sbb
int3
dec
inc
or
inc
add
loope
lock
sti
mov
jl
dec
test
aas
cli
aad
mov
push
pop
pop
and
mov
pop
push
aaa
push
loop
sub
icebp
xor
or
xlat
loop
pop
pop
mov
cmpsb
jmp
pop
popa
mov
cmp
les
sahf
dec
push
in
je
sub
gs
sub
mov
stos
jle
cmp
pop
jge
addps
dec
mov
stc
repnz
andl
fidivrl
xor
cmc
xchg
cmp
xor
sub
cmpb
lcall
insb
xchg
ret
adc
sub
cmpsl
popa
out
jecxz
scas
add
sub
divl
ret
add
mov
pusha
add
dec
stc
push
adc
xor
pusha
inc
es
sbbb
cmp
inc
les
int
jne
scas
xchg
pop
or
popa
add
xchg
in
dec
fwait
pop
scas
xchg
aam
sub
cld
sub
cmpl
sub
int
jns
icebp
ss
fiadds
sahf
arpl
jle
adc
and
push
and
imul
popa
adc
fmuls
icebp
xchg
out
and
or
mov
andb
test
push
in
out
popaw
lret
aam
add
push
push
sbb
cmp
dec
dec
lret
mov
fs
cmp
in
movsl
subl
stos
push
js
add
push
push
mov
std
and
or
mov
xchg
scas
ds
subl
sbb
adc
dec
sub
addr16
enter
dec
cwtl
inc
add
lret
aad
hlt
fiadds
sbb
mov
and
push
fcomip
int
add
pop
call
inc
push
jns
imul
xchg
xor
cmp
mov
test
cmpl
cli
push
push
loope
mov
clc
dec
mov
xor
mov
mov
pop
dec
lea
std
mov
nop
jns
adc
cmpsl
cmp
lcall
mov
push
adc
sbbl
adc
add
push
out
pop
pop
jmp
mov
add
adc
lahf
movsl
push
cli
sbb
fadd
icebp
pop
ljmp
movb
push
jmp
xchg
xor
lsl
call
lea
pop
in
and
pop
scas
leave
je
jge
sbb
sbb
in
out
xlat
sbb
das
dec
sub
clc
jecxz
in
int
jg
push
cmp
jbe
call
jns
jle
lcall
js
out
push
jle
cmp
es
jae
sub
leave
jp
mov
es
xlat
cs
mov
daa
adc
icebp
mov
out
loopne
js
dec
jmp
xchg
dec
adc
or
jl
mov
es
xor
xchg
mov
fxch
popf
pop
ja
cs
lahf
in
inc
arpl
and
or
jo
adc
imull
and
xchg
je
ss
mov
push
test
or
pop
jp
mov
fsubr
jg
mov
push
jp
pop
or
lret
or
and
sub
cli
out
pop
mov
les
jo
fdivrs
mov
jns
mov
push
std
pop
jecxz
aam
xchg
xor
loopne
stos
cmpsl
xchg
mov
inc
ds
lret
decb
test
clc
int
add
jle
pop
xchg
push
adc
or
mov
cmpb
test
lods
pop
fsubr
nop
roll
inc
or
movsb
and
cli
cmp
pop
sahf
lret
ror
mov
psubusw
inc
push
rolb
or
xchg
sub
aam
cli
into
cli
fstl
repnz
insb
mov
arpl
rcll
repnz
mov
subl
shlb
test
daa
nop
xchg
cli
push
adc
hlt
mov
int3
cmp
and
popf
cmp
popf
xchg
out
jo
aas
cmpsb
faddl
jae
jg
mov
pop
push
scas
sarb
stos
int
scas
fs
mov
pusha
and
ds
adc
dec
push
sbbl
xor
add
push
sarl
lds
inc
aas
es
add
outsl
decl
pop
jecxz
jo
arpl
mov
sub
push
leave
js
mov
out
lret
cmpsl
aad
cwtl
pop
pop
clc
out
inc
mov
fsubs
and
xor
aad
adc
lock
lret
add
push
ret
rcr
dec
je
rolb
cmp
inc
inc
orb
or
mov
test
mov
ret
ljmp
pop
aas
lcall
loop
loopne
test
outsb
push
fs
and
jmp
outsb
into
sub
jnp
adc
ja
or
lret
pop
insb
sahf
pop
or
lock
cmp
cmp
lock
sbb
cwtl
idivb
pushf
xor
xor
popf
cmp
pusha
shll
jecxz
pusha
cmp
push
mov
adc
insl
push
aad
mov
ret
adc
sub
cli
in
into
and
movsb
in
cmpsl
inc
mov
mov
ficoml
dec
jge
or
push
inc
fistpl
sbb
mov
stos
pop
inc
and
rcrl
or
pop
in
pop
mov
fdivrp
inc
cs
popf
inc
xor
imul
xchg
pop
push
add
mov
sti
shll
ja
jne
or
rcrb
fists
clc
inc
jae
in
or
and
das
mov
xor
cli
in
jecxz
xor
jp
mov
mov
sbb
in
add
lcall
sarl
js
pop
add
mov
cwtl
mov
mov
ja
incl
pop
call
movsl
aam
std
or
pop
sti
xchg
fstpl
stos
push
shl
mov
adc
jb
bound
adc
shlb
stos
adc
cmp
lods
dec
xchg
mov
jle
mov
lcall
inc
xor
flds
nop
fcomi
shl
sbb
add
or
sub
out
loope
mov
push
bound
jg
mov
lock
mov
mov
push
add
scas
add
push
push
fnsave
cwtl
xor
dec
adc
rcrl
xor
adc
adc
hlt
fists
lods
js
lcall
lret
add
stos
iret
jp
cmp
or
or
jae
push
insb
and
inc
inc
dec
fwait
or
or
fadds
icebp
cmp
call
add
dec
movsl
inc
cli
inc
add
push
aas
jbe
stos
ds
fs
in
out
stc
pop
pop
lret
in
inc
loope
int3
jp
cs
ret
add
mov
ror
lods
push
shlb
shlb
js
push
jns
arpl
les
stos
loop
sbb
or
in
ljmp
adc
ljmp
addr16
mov
cmp
fdivs
push
sub
sbb
adc
popa
aad
outsb
push
movsl
leave
icebp
mov
sub
cmpl
mov
sar
jmp
shll
into
icebp
in
lods
cmpsl
push
dec
push
fucomp
icebp
dec
scas
dec
sub
or
aaa
mov
mov
gs
rcll
sbb
in
add
adc
aam
pop
pop
mov
lcall
or
pop
xor
cli
add
jl
mov
push
sbb
push
pop
jae
push
je
xchg
pushf
imul
pop
cmp
fstps
leave
outsb
xor
push
stos
adc
lret
ja
dec
es
cs
push
cmp
sbb
inc
dec
and
and
jmp
aas
jg
sbb
insb
movsb
mov
push
sbb
mov
jne
sub
lods
pop
fimull
jae
flds
adc
inc
movsl
pop
pop
xchg
jg
addr16
cwtl
les
push
mov
sti
leave
jbe
pop
add
fs
cmp
gs
insb
jnp
xchg
imul
mov
lret
mov
nop
xchg
or
cmp
test
ja
mov
push
dec
xchg
mov
mov
jb
jne
lahf
inc
pop
mov
sub
mov
mov
loopne
enter
jl
daa
call
std
pop
xlat
sbb
dec
cmc
lcall
inc
mov
mov
es
ds
sub
xor
rcrl
fisttpll
inc
loope
cmp
in
mov
aam
ret
pop
rcrl
mov
ds
sarb
es
add
shrl
or
dec
in
sub
inc
mov
addr16
mov
inc
ja
outsl
push
jg
push
push
repz
arpl
gs
adc
jge
jnp
std
push
push
fisttpll
sar
clc
lcall
pop
mov
ss
fs
or
pop
stos
mov
push
bswap
out
or
rcll
pop
dec
or
aas
imul
xor
jbe
pop
or
fbld
push
test
jp
sbb
insb
adc
shll
pushf
xor
arpl
loopne
repnz
lock
dec
inc
xor
xchg
lret
jae
insl
and
cmp
mov
mov
cli
add
push
cmp
cmp
fnstsw
mov
xchg
hlt
xor
pop
cs
rolb
inc
push
xor
test
das
and
sbb
add
shlb
pop
cmpsl
and
jb
sub
dec
mov
je
loopne
les
adc
cld
jmp
dec
imul
loop
add
adc
mov
mov
push
mov
out
fst
or
sub
aas
mov
popf
adc
fs
push
and
lea
mov
fists
push
inc
mov
or
sbb
push
pop
or
adc
and
pop
addr16
mov
fst
xor
xchg
pusha
shlb
out
mov
in
fistps
add
and
cltd
inc
notl
decb
sub
sbb
in
call
fisttpl
outsb
lods
mov
loope
subb
rol
sub
cmp
cmp
outsl
push
push
lret
adc
sbbl
xchg
shlw
inc
lods
mov
in
mov
jg
scas
ret
testl
imul
xchg
loop
jne
mov
aaa
push
jmp
fbstp
sarb
std
cmp
mov
movsl
je
insl
sbb
fcom
rcrb
lods
push
movsl
mov
fnstenv
jbe
xchg
lahf
sarb
sarb
lret
cs
and
ret
push
sarb
test
xor
cmp
inc
cmp
push
cmc
stos
test
mov
test
orb
loop
cmpsb
mov
push
cli
daa
ret
xchg
movsl
and
insb
sub
dec
repnz
adc
aam
sti
lods
sarb
pop
cmpsb
testb
adc
pop
inc
xchg
fisttps
std
mov
push
mov
std
or
sahf
lods
inc
insb
hlt
jne
and
pop
cmp
push
fistpll
dec
imul
test
daa
ficoml
jp
push
push
mov
shll
fs
enter
pop
ja
clc
fisttpl
adc
sub
mov
cmp
xor
popa
push
sub
fldenv
enter
jle
jmp
xor
xchg
imul
cs
sub
push
lds
xchg
fwait
or
adc
insb
jo
cmp
pop
xor
fsubrl
das
cs
cli
cli
imulb
cmp
leave
adc
inc
pop
dec
lds
adc
out
sbb
lds
and
rcll
sbb
stc
lods
add
or
adc
lret
add
shr
aas
cmpsb
mov
dec
mov
xor
jbe
les
fcmovnbe
movsb
js
jne
add
mov
jno
fdivrs
out
out
push
jle
push
pop
testl
sti
popf
add
dec
int3
in
ret
shlb
push
cmpsl
mov
xchg
and
cmp
popf
scas
adc
add
mov
and
fildll
insb
cmc
stos
jnp
fldenv
pop
adc
jmp
or
mov
test
js
das
cli
insl
cmp
sarl
pop
add
dec
imul
xor
icebp
cmp
scas
push
jecxz
xor
aad
mov
enter
pop
xor
push
mov
call
adc
insl
adc
jmp
add
popf
add
dec
dec
pop
in
cwtl
xchg
mov
cmp
cmpsl
pop
hlt
xchg
jmp
iret
add
mov
push
scas
adc
movsl
ret
das
outsb
add
or
popf
xor
jmp
test
pop
cmp
loop
pusha
or
mov
ret
pop
inc
cli
jmp
jle
jbe
jg
adc
mov
lcall
stc
mov
gs
jmp
or
add
pop
inc
push
repnz
jo
lods
mov
pop
gs
jne
jle
jp
jg
xchg
cwtl
sbb
mov
scas
adc
outsb
fs
lahf
pop
iret
out
or
lcall
imul
mov
jo
scas
jmp
xchg
sbb
push
sbb
call
push
pusha
stc
mov
pop
dec
jle
stos
xchg
out
jle
sub
inc
inc
test
mov
aaa
or
icebp
inc
xor
xlat
push
inc
out
sbb
test
dec
scas
inc
ja
xchg
push
sub
mov
mov
pop
dec
jb
inc
sbb
ljmp
lcall
clc
xchg
rolb
outsb
xor
adc
sbb
fists
arpl
test
es
lret
aas
rcll
dec
sbbl
add
pop
stos
mov
out
call
shll
fmull
loopne
dec
sbb
orb
cmp
dec
shll
fcomi
addr16
popf
adcb
adc
jl
pop
imul
mov
jne
mov
ja
mov
push
js
je
je
scas
scas
jl
stos
or
mov
mov
addl
mov
idivl
cwtl
loopne
fisubrl
aas
push
insb
addr16
fldcw
leave
fwait
ret
jns
inc
mov
bound
xchg
jae
ficompl
outsb
mov
inc
bnd
out
ja
mov
int
lods
out
inc
data16
arpl
inc
mov
add
sub
jb
inc
sbb
fldcw
pop
fidivrs
inc
int
adc
adc
jmp
incl
out
aas
or
loop
cmp
ret
aad
cmp
cmpb
jmp
add
loop
xchg
push
shll
jbe
je
sbb
in
push
dec
movsl
dec
les
cmp
cmp
aas
push
mov
jb
loop
dec
xchg
lock
sub
dec
mov
add
ljmp
adc
push
push
and
int
add
cmc
loope
adc
das
out
cltd
push
sbbb
fs
sbb
outsb
ja
test
hlt
out
cmp
stc
add
mov
push
or
ss
loope
xor
push
les
adc
in
in
push
test
jbe
xchg
xchg
and
scas
fs
mov
mov
aam
hlt
je
push
inc
jns
mov
sbbl
inc
cmpsl
mov
out
mov
stc
lahf
clc
push
mov
sub
sub
adc
ja
push
sbb
sub
out
jno
aas
inc
insb
pop
inc
ljmp
pop
outsb
mov
sbbl
xchg
sbb
jnp
pop
jge
jl
scas
out
push
adc
xchg
lahf
pop
cltd
pop
sub
and
loop
andl
ss
subl
dec
and
sub
inc
flds
rclb
aas
cmp
fwait
lds
insb
int
mov
or
imulb
scas
xchg
pusha
push
mov
imul
xchg
cwtl
push
dec
push
xchg
pushf
lods
jo
xor
mov
inc
mov
mov
test
rclb
popa
call
jp
sbb
ja
mov
xchg
mov
sub
pusha
into
testl
mov
mov
add
adc
sub
test
sbb
js
adc
push
cmpsl
out
jae
inc
sbb
ficoml
loopne
fcompl
std
jo
push
sub
test
ja
add
sub
jns
shrl
repnz
jecxz
mull
int
or
xchg
arpl
pushf
xor
xor
hlt
push
pop
cmpsb
dec
push
or
int
cwtl
pop
jl
xchg
rorb
repnz
jle
mov
add
ret
sbb
lahf
out
cmp
push
cmp
push
xor
xchg
cli
add
and
push
test
testb
xchg
or
cltd
mov
inc
add
fimull
sub
pop
fldcw
iret
lods
and
xor
xor
ljmp
mov
push
xor
mov
jmp
out
adc
push
iret
inc
jmp
sub
cli
loop
push
jo
jmp
scas
into
stc
mov
imul
filds
dec
add
arpl
push
xor
push
test
cmp
jmp
and
xor
mov
repnz
adc
or
ret
or
or
mov
aam
repz
movsl
sbb
cwtl
dec
rorb
pop
jge
ja
fidivrl
call
pop
ret
ret
loopne
ret
push
outsl
jnp
out
mov
cmp
add
sub
dec
into
insb
enter
xchg
nop
in
test
sahf
pop
and
pop
nop
ficompl
scas
xchg
mov
xlat
in
sub
cmp
sbb
dec
loop
xor
adc
jno
add
xlat
negb
jo
pop
lds
push
ds
sbb
add
sub
jae
jb
xchg
ret
in
clc
fsubrs
pop
sub
rcrl
scas
sub
ret
fisttpll
fsubr
jns
jecxz
cmpsl
push
data16
push
lea
dec
aad
cmp
movsb
loope
les
inc
cmpsb
mov
mov
mov
aad
push
imul
fs
mov
fiadds
jae
lock
push
dec
gs
lds
stos
addr16
xchg
jb
dec
sub
sbb
das
mov
cld
pop
cmp
in
movsb
mov
mov
or
leave
mov
gs
ficoml
rcll
xchg
and
out
rcll
and
xchg
cwtl
in
test
adc
mov
insb
mov
dec
push
push
sarl
sub
out
cmp
push
lcall
cltd
loopne
xor
mov
jae
in
ljmp
xchg
test
enter
jbe
sahf
adc
sub
push
sbbl
adc
xchg
mov
ds
jmp
fildll
ds
outsb
fwait
jnp
ja
adc
push
lcall
jle
mov
out
inc
jecxz
add
mov
adc
or
mov
mov
outsb
jae
mov
dec
je
adc
aad
pop
inc
enter
scas
cmpsb
fidivs
andl
daa
out
fstpt
ds
xchg
hlt
sahf
stc
and
int
fdivl
loop
arpl
inc
jae
push
cmpsl
xor
adc
popa
xlat
out
out
int3
test
lock
jle
mov
data16
and
push
push
lea
cmp
jno
dec
inc
xchg
mov
mov
lret
jle
loopnew
out
imul
cmp
xchg
sbb
jns
jb
cltd
aaa
in
push
popa
and
test
dec
mov
fimull
call
outsb
mov
push
inc
xchg
and
es
and
lret
iret
mov
cltd
inc
lods
pop
movsl
sahf
push
xchg
xor
cmpsl
std
jne
pop
push
mov
xchg
mov
cld
or
dec
and
adc
fwait
mov
dec
ficomps
mov
aaa
in
dec
cltd
adc
and
xor
stos
aad
imul
xchg
push
mov
pop
shl
repnz
xchg
mov
negl
adc
int3
gs
test
push
mov
movsl
cmpl
dec
int3
add
push
inc
mov
jg
outsb
rclb
or
mov
leave
or
mov
int3
ja
lea
jb
mov
or
jmpw
insl
jecxz
mov
cmc
mov
jmp
push
add
pop
iret
sbb
pop
jmp
scas
fcmovnb
push
and
out
pop
xorb
dec
aas
ret
sbbl
inc
and
mov
xchg
out
xor
sub
fstpl
inc
sbb
xlat
push
cltd
popa
les
cmp
les
int
in
cmpsb
aas
out
out
sbb
push
push
fs
dec
xor
pop
jae
sbb
in
cmp
push
out
mov
push
cmpsb
pop
stos
jl
mov
dec
mov
pop
movsl
sbb
or
push
add
mov
mov
sub
jns
cmc
test
xchg
lret
fadd
or
jno
into
aad
cmp
xchg
pop
int
mov
imul
mov
movsl
xchg
je
cwtl
push
or
add
mov
iret
cs
dec
test
in
add
imulb
es
and
and
sbb
xchg
lcall
ret
add
xchg
push
mov
xchg
cmpsl
pop
cmpsl
sbb
aad
pop
cmp
das
or
pop
inc
sbb
mov
push
pushf
sarl
jg
dec
imul
lea
xor
mov
loope
je
cmc
mov
or
cmpsl
sarb
or
inc
movsb
sarb
mov
cmpsl
push
addr16
mov
dec
jno
mov
in
pop
adc
cs
scas
push
cli
insb
push
loop
sub
leave
mov
dec
pop
ja
or
xchg
sti
fdivrs
jbe
shrl
jbe
and
sar
cmc
pushf
mov
mov
mov
call
incb
pop
pop
xchg
addr16
sbb
lock
or
push
add
mov
and
sub
cmp
sti
cmp
xchg
jle
or
adc
decl
arpl
add
gs
outsl
xchg
pop
int3
adc
in
ss
xchg
gs
jp
subb
pop
in
pushw
dec
mov
xor
sbb
repz
in
sub
ja
arpl
outsl
dec
lret
je
gs
mov
inc
into
popa
xchg
insl
push
ret
stos
xchg
jb
test
and
ds
jp
shrb
pushf
rcrl
fstpt
jg
scas
adc
stos
cld
int
ret
iret
add
cmpsb
scas
jns
sub
push
dec
shrl
ret
mov
add
shrb
dec
xchg
mov
loopne
mov
mov
jno
popf
pop
jae
push
mov
push
dec
addl
jecxz
push
push
add
mov
adc
mov
dec
lock
cmp
xchg
xor
fdivrs
fs
enter
mov
jl
cs
or
jae
mov
dec
xchg
fdivr
xorb
inc
adc
jns
hlt
ret
bound
aam
shl
es
mov
push
daa
pop
xor
in
push
and
daa
dec
outsl
lods
push
js
or
dec
lods
test
jl
xchg
and
insl
cwtl
out
adc
int3
in
stos
in
jne
push
orl
pop
movsl
jecxz
inc
shll
or
daa
push
out
es
add
mov
fnstcw
push
add
or
aam
data16
fsubl
ret
xchg
and
mov
cmp
imul
hlt
pusha
pop
or
or
cmpsl
mov
xchg
jle
sbb
mov
in
in
sub
aas
jmp
push
push
shrl
lret
ret
fistpl
lock
enter
lods
fldenv
jno
xor
packssdw
sbb
mov
nop
fadds
add
mov
pop
fisubl
and
push
pop
aaa
add
arpl
enter
adc
int
xor
mov
sti
push
aad
pop
jae
jge
dec
jp
push
mov
sbbl
insl
inc
lods
inc
xchg
repz
lcall
mov
xchg
aam
fisubrs
cs
or
jnp
idivb
cld
cli
lahf
push
mov
add
sub
dec
lret
add
pusha
lods
mov
pop
mov
mov
mov
dec
jb
cs
sub
jnp
int
add
inc
mov
jmp
scas
ds
pop
inc
adc
hlt
jnp
push
jp
scas
and
test
shl
adc
jae
aaa
inc
rdpmc
jns
inc
push
cltd
ja
sarl
pop
addr16
scas
into
xchg
mov
roll
test
cmp
pop
js
clc
add
pushf
pushl
pop
pop
repz
cmp
pop
fldl
arpl
dec
test
push
es
inc
fucom
rcl
mov
or
and
pop
pop
or
push
iret
aas
inc
mov
lcall
sub
popa
adc
jo
pushw
call
pusha
pop
cmpl
pusha
mov
leave
adc
aaa
xor
push
test
mov
mov
xor
push
push
mov
cmp
push
mov
ljmp
lcall
cwtl
dec
test
mov
lcall
adc
jo
lcall
and
les
add
adc
js
inc
je
pop
add
aaa
mov
adc
adc
stos
je
xor
popa
xor
js
cli
push
fisubrs
cmpsl
sub
cmc
ret
adc
mov
mov
mov
jmp
popf
lods
inc
lock
outsl
pop
iret
mov
or
push
dec
sbb
and
imul
gs
and
addb
es
test
roll
jnp
inc
jg
dec
mov
aam
enter
cltd
xchg
jmp
scas
negb
cmp
nop
xor
xchg
aaa
jl
out
push
mov
add
mov
inc
loopne
cmp
add
sbbl
repnz
je
sbb
adc
ret
dec
flds
in
fldl
frstor
cltd
lock
adc
xor
in
sbb
testl
shrl
push
outsb
add
pop
add
pop
cld
jb
add
and
sub
sub
push
test
outsl
insb
repnz
mov
test
cmp
mov
fsubrs
cmp
dec
and
rcl
dec
mov
or
dec
sbb
mov
pushf
mov
dec
xchg
mov
sbb
add
inc
int
add
push
aad
sbb
fistpl
mov
mov
dec
mov
xor
iret
in
ljmp
push
dec
and
gs
popf
sbb
stos
xor
test
scas
out
add
xor
pop
pop
mov
std
push
sahf
imul
and
mov
clc
or
andb
hlt
jecxz
das
xorb
mov
cmpsl
addb
mov
add
xchg
dec
bnd
fwait
in
mov
leave
ljmp
push
ret
decb
and
insb
xor
push
jmp
loop
jns
es
into
aam
mov
mov
mov
jg
addb
popf
hlt
inc
pop
cltd
xlat
decb
arpl
bound
mov
adc
nop
dec
xor
dec
mov
push
adc
pop
lods
test
ret
ret
lock
ficoml
cmp
cmpsl
outsb
fistps
cltd
scas
into
gs
mov
fiaddl
jnp
test
mov
sbb
add
jp
dec
arpl
and
dec
fistpl
neg
call
rorb
rcrl
and
jb
daa
mov
or
in
mov
add
or
mov
shl
subb
filds
fdivrs
adc
xor
pusha
mov
call
push
pop
cmp
andl
out
int
fistpll
sti
fs
sub
loopne
push
or
gs
xchg
mov
xchg
stos
or
pop
pushf
pop
aaa
adc
mov
adc
xchg
pop
outsl
std
dec
push
iret
sub
lods
jl
or
shr
pop
jo
imul
test
mov
lods
loop
jns
aaa
and
lods
push
mov
pop
and
pop
enter
mov
sbb
mov
lods
fiaddl
filds
cmp
pop
rclb
rol
mov
sbb
adc
sar
lcall
fiaddl
jbe
mov
xlat
xor
sub
cmpsl
jmp
rclb
scas
xlat
jle
sbb
mov
mov
inc
test
sub
and
lcall
jb
cmc
cwtl
cmp
scas
shlb
push
push
sub
fmulp
push
inc
lods
scas
fnstenv
or
fs
lcall
jecxz
and
insb
pop
das
shlb
fdivr
dec
cmp
pop
outsb
ds
mov
jmp
movsl
push
dec
push
addr16
in
fidivl
sub
gs
jae
gs
pop
insb
and
mov
popa
push
add
in
aad
push
in
int3
mov
xchg
lcall
out
sbb
pop
push
shll
sbb
add
and
xchg
add
fidivrs
or
adc
rorl
jo
add
xchg
dec
scas
xchg
cmp
pop
jge
push
mov
repnz
leave
sub
push
mov
dec
ljmp
rcr
into
adc
xchg
xor
scas
jnp
aad
lcall
cmp
add
mov
pop
dec
mov
dec
mov
jno
shlb
test
jge
std
rcll
mov
ret
push
pop
and
inc
jmp
xchg
sub
jg
sub
mov
pushl
xchg
jle
and
sub
cli
ljmp
sbb
daa
adc
mov
stc
jg
ret
xor
xchg
inc
or
inc
int
mov
jge
lods
repz
outsl
adc
leave
inc
stos
mov
push
jbe
imul
dec
divb
clc
xor
pop
and
push
xor
fcoml
fs
xor
fs
fldl
scas
dec
sub
adc
gs
shl
cltd
mov
xchg
enter
es
loope
and
aam
popa
lahf
stos
icebp
ret
cltd
cmp
cmp
push
stc
jecxz
pushf
fsts
cmp
sub
dec
and
inc
sub
repnz
adc
cmpsb
shll
inc
int
cltd
sti
clc
push
das
pop
push
lret
mov
mov
push
and
test
insb
pop
adc
and
inc
inc
and
icebp
inc
dec
imul
fwait
mov
arpl
xchg
addr16
or
pop
push
inc
lds
sbb
in
sub
pop
jne
mov
mov
bound
and
cmp
mov
insl
roll
in
lea
dec
loopne
shlb
enter
decb
xor
xchg
test
das
sub
pop
aas
int
in
mov
dec
inc
incb
inc
dec
lds
adc
hlt
imul
js
adc
push
sub
or
dec
jg
inc
inc
sub
jmp
mull
repz
pop
movsb
bound
test
mov
cmp
call
mov
inc
faddl
addr16
push
imul
xor
mov
xor
daa
mov
mov
mov
jmp
dec
gs
push
cmp
xchg
mov
cmp
arpl
mov
repnz
cmp
fildl
pop
test
je
mov
aaa
mov
and
and
jns
jb
leave
and
or
cs
push
xor
sbb
mov
outsl
pushl
movsb
inc
cmpsl
jnp
ficoml
arpl
pop
mov
inc
insl
xchg
sbb
mov
movq
stc
loopne
in
fdivl
xchg
stc
sbb
aad
in
scas
jmp
in
xchg
nop
dec
in
mov
xor
jb
dec
jne
xchg
dec
data16
aad
adc
and
das
pop
stos
adc
jmp
dec
mov
push
pop
dec
mov
clc
or
and
in
sub
iret
and
dec
mov
xor
lds
lds
xchg
pop
repnz
pop
mov
jle
mov
jecxz
imul
shlb
fdivl
lds
cli
dec
jo
out
sub
leave
xlat
insb
push
push
xchg
push
arpl
sub
adcb
aad
dec
pop
movsb
int
mull
les
jno
adc
movl
lahf
cwtl
arpl
xorb
inc
mov
enter
leave
add
push
iret
test
push
mov
mov
sub
dec
fmuls
ds
mov
xor
and
add
or
jo
jno
mov
fbstp
pusha
data16
out
fcmovne
loope
lahf
pop
scas
xor
mov
out
out
or
lret
daa
lods
push
mov
jmp
sub
test
fs
aam
movl
sti
shll
add
sar
mov
pusha
hlt
mov
cmp
or
dec
loop
add
sti
jbe
mov
jae
jno
mov
out
cmpsb
jmp
mov
sub
fstpl
mov
dec
dec
push
pop
fstl
daa
out
fsubrp
jb
fwait
pop
sub
or
call
mov
xor
cwtl
jne
aas
jb
or
fbld
sti
and
mov
pop
sbb
aaa
addr16
or
lods
leave
add
xor
cli
aas
shlb
sbb
pop
adcb
mov
add
pop
rolb
imul
pop
add
push
pop
pop
jp
adcb
adc
cmpsl
test
fisttps
addr16
push
mov
jl
xor
popf
fcom
cs
jne
and
cltd
jg
or
fstpt
xchg
sub
pushf
mov
ds
clc
stos
and
std
outsl
xlat
or
aad
xchg
mov
outsb
push
push
mov
fistl
fisttpll
test
ljmp
in
push
jge
jbe
loope
pop
xlat
test
stos
je
sti
add
sub
dec
jnp
ss
pop
cmp
jl
dec
and
add
jle
lods
mov
cmp
pushf
inc
cwtl
outsb
mov
nop
inc
and
jne
pusha
imull
cli
add
sbb
or
sub
adc
into
add
or
mov
data16
push
inc
cli
loop
xor
ja
inc
cmp
ret
test
xor
sub
addr16
ret
push
test
outsl
imul
or
cld
cld
sub
cltd
divl
loope
clc
ret
dec
scas
int3
mov
mov
and
lods
shl
popf
mov
fistpl
loopne
into
nop
jbe
leavew
push
nop
adc
mov
pop
fwait
out
xchg
in
ja
fldcw
shll
outsb
dec
lret
sub
xlat
pop
add
lods
aaa
lds
and
sbb
rcrb
sbb
xchg
sub
xchg
repnz
push
mov
push
mov
int
add
mov
mov
ja
in
cmp
jl
insb
adc
cmp
sub
rcr
pop
aam
in
nop
dec
dec
xor
loop
sbb
ret
jp
jge
dec
stos
jmp
arpl
rclb
outsl
push
pop
bound
pop
bound
addb
jae
lret
js
inc
enter
lods
fiaddl
or
jle
jp
fwait
mov
fdiv
sub
lahf
inc
loope
jle
gs
jbe
mov
xchg
mov
hlt
sub
jo
out
cmp
jae
sbb
mov
addr16
mov
mov
fnsave
outsl
filds
or
inc
subl
lea
jns
pop
mov
sub
fincstp
or
stos
repnz
xchg
cli
pop
mov
mov
mov
xchg
sarw
cltd
mov
cld
out
xchg
or
inc
ficomps
outsb
cmpsb
push
jmp
arpl
inc
push
push
xor
jecxz
scas
xor
adc
jbe
sbbl
mov
xor
arpl
and
leave
loope
fisttps
sbb
jnp
and
es
stos
shlb
adc
mov
sbb
rorb
mov
out
sub
xor
mov
stos
lods
insb
scas
imul
in
mov
push
cmpsl
dec
ret
daa
in
lret
dec
jnp
or
or
cmpl
notl
sub
js
in
mov
test
jo
lret
cltd
push
ror
adc
cld
push
mov
loopne
sub
adc
pop
jmp
test
or
or
pop
mov
dec
xchg
loopne
jg
xor
aam
cmpsl
add
pop
add
dec
or
test
sbb
cmp
push
mov
ret
aas
dec
mov
pop
cmp
dec
arpl
fdivs
sub
notb
aaa
mov
pop
lret
sti
push
into
test
mov
fwait
clc
jmp
lcall
lods
cmp
loop
loopne
fsts
fwait
xor
notb
imul
sbb
notb
fdivrp
out
out
push
imul
mov
dec
jmp
aaa
cmp
or
adc
and
daa
aam
or
rcl
je
mov
nop
jmp
ficomps
mov
in
rcll
rcll
test
lock
push
adc
fisttpll
ds
xor
subb
insb
addr16
lcall
sahf
nop
out
dec
pushf
mov
js
aam
stos
jp
scas
mov
mov
mov
cwtl
pop
ss
xor
divl
jmp
mov
pop
jecxz
fstp
mov
dec
pop
lock
sbb
push
cmp
jle
push
loop
ficoml
iret
out
fdivrs
xor
mov
mov
mov
xchg
shl
or
shlb
mull
push
push
mov
ret
pop
int3
inc
sbb
mov
push
jbe,pt
nop
pop
add
xchg
ds
sub
sub
and
add
mov
or
dec
sahf
scas
lcall
out
cmpsl
in
test
cmp
xor
jp
outsb
dec
xor
pop
mov
loop
xchg
inc
mov
push
scas
or
xor
daa
mov
inc
push
xchg
popa
fadd
xlat
sbb
in
pushf
cwtl
sbb
mov
sti
mov
fbld
fdivrl
jmp
aad
mov
or
sysexit
cmp
fwait
xchg
dec
fldenv
imul
sub
jns
cmp
ja
ja
and
fwait
pop
not
inc
fstpt
xchg
into
lret
scas
imul
pop
add
aad
cmp
and
cmp
repnz
sub
push
out
mov
add
cmp
and
adc
cld
out
out
iret
push
xlat
mov
cltd
cmp
insl
shrl
fmul
cld
jbe
ss
jnp
insb
imul
fstps
orb
mov
clc
mov
ret
stos
ret
xchg
icebp
mov
adc
scas
xor
in
jmp
cmpsb
add
mull
jecxz
iret
sub
sarl
movsb
mov
call
shrb
in
mov
fistpll
adcb
adc
xor
out
inc
jecxz
pop
push
jge
sbb
outsl
aas
arpl
loopne
cmp
jae
push
and
add
shlb
cltd
imul
mov
repnz
enter
jae
clc
insl
mov
call
cs
cltd
call
pusha
mov
ficomps
addl
xchg
jbe
repnz
ljmp
shrl
mull
push
lcall
lahf
and
sar
and
jecxz
mov
fidivrs
cmpsl
es
iret
mov
or
push
into
add
enter
leave
jp
stc
popa
pop
sti
sahf
add
mov
loop
sbbl
mov
jb
test
lock
pop
test
out
repz
pop
or
lcall
ljmp
flds
pop
ds
mov
mov
dec
or
xor
fdivrl
cmpl
dec
xchg
xor
cli
mov
icebp
movsb
and
es
pop
jns
mov
push
adc
xchg
stc
scas
mov
pop
test
sbb
mov
jle
sub
lods
sbb
repz
cmpsl
aaa
das
pop
ljmp
sub
gs
xchg
fdivrs
fisttps
dec
les
fstpl
and
in
dec
adc
pop
jb
mov
popf
or
jae
jnp
outsl
add
cwtl
lcall
inc
cmp
cld
pushf
inc
push
loope
mov
es
jns
out
js
add
cmc
in
int
pop
xchg
and
or
push
xchg
add
jl
out
mov
sub
and
adc
fmuls
xor
fcmovnbe
xlat
pop
clc
mov
xchg
shlb
sbb
pop
xor
and
xchg
sarb
mov
movsl
arpl
enter
xchg
int3
negl
pop
pop
in
or
outsl
xchg
std
int
xor
push
push
mov
call
pop
cmpb
push
ss
mov
push
sub
nop
ja
std
hlt
add
or
ljmp
mov
xchg
mov
les
inc
cmp
jmp
push
xor
adc
mov
inc
jne
sub
add
mov
stc
aas
add
cmp
fs
leave
sbb
xchg
imul
or
cmp
call
mov
rcpps
cmp
jne
cli
mov
cmpsb
jp
sbb
add
mov
xchg
ret
je
repz
fbld
and
rcll
in
repz
cld
out
jmp
test
dec
pop
jl
shlb
sub
jmp
fs
pushf
es
ret
cmpsl
daa
cmp
outsb
pop
or
roll
xchg
xor
imul
and
xor
sub
push
xchg
lahf
or
xchg
jae
inc
fcmovnb
sbb
popl
cltd
lds
int
call
cltd
ret
xchg
shll
aas
push
pop
sbb
jecxz
lret
dec
sbbb
push
inc
mov
sub
pop
mov
insb
push
jo
sbb
xchg
and
aaa
aad
stc
and
in
icebp
sahf
sub
aad
and
test
stos
jmp
pop
pop
sbbb
shlb
sbb
sarl
jp
push
fcoml
mov
outsb
dec
mov
ljmp
xor
divl
in
sub
xchg
jge
iret
add
stc
xchg
repnz
and
imul
push
and
pop
data16
xor
cmp
addb
stos
icebp
and
push
or
xor
mov
shl
loopne
mov
faddl
mov
push
push
ficomps
xor
mov
les
sub
or
test
shlb
mov
xchg
test
mov
fstpl
jnp
imul
mov
int3
xor
leave
xchg
mov
idiv
cmp
mov
xchg
divb
push
shrl
imul
xchg
loop
push
push
cmpsb
mov
inc
in
pop
int
into
cmp
int3
pop
adc
inc
sub
cmp
shl
xchg
je
dec
movsb
jecxz
pop
es
inc
lahf
mov
pop
test
mov
adcl
testl
daa
mov
xchg
jno
xchg
imul
push
test
push
adc
xor
lahf
dec
add
sub
fwait
dec
imul
jecxz
or
and
and
mov
pop
mov
inc
repz
adc
int
sub
mov
and
lods
je
push
enter
or
xchg
xorb
xor
decl
lods
mov
xchg
lods
and
test
add
or
pop
daa
jg
in
call
lret
xchg
dec
jno
roll
add
fdivp
pop
cmpsl
mov
or
lock
shll
jae
jb
testb
ret
sbb
pop
inc
and
and
fcoms
dec
adc
push
adc
decb
cmp
pop
clc
jmp
cmp
and
push
xor
inc
enter
sbb
mov
fyl2xp1
in
dec
inc
xchg
fdivrs
mov
fnsave
jbe
in
ljmp
int3
sub
cmpsl
cltd
fcomps
fisubl
fisubs
jno
jns
push
rorl
dec
mov
cli
or
jb
sbb
testl
in
xchg
sbb
das
and
inc
xchg
rorl
jno
pusha
or
ds
xor
outsl
jg
stos
pop
loopne
bound
jo
das
jbe
shl
mov
jns
push
dec
pushf
into
push
dec
fistpll
out
mov
cltd
mov
add
popa
movb
addr16
add
rcr
push
cmpsb
sbb
or
jg
xchg
jg
pop
add
addl
dec
in
push
push
aam
insb
dec
sub
aas
inc
das
xorl
pop
repnz
adc
inc
mov
movsb
lods
imul
loopne
fnstenv
mov
and
pop
je
mov
cmp
push
fildl
loope
aas
mov
push
enter
mov
pop
mov
sbb
rolb
cmp
movsl
cld
jg
movups
ficoml
aas
testb
mov
pop
adc
mov
push
aad
or
mov
pop
rcrl
sub
dec
mov
sbb
xchg
idiv
add
dec
and
jle
jne
scas
repnz
lcall
push
bound
fisttpl
push
aam
sub
mov
mov
outsb
push
jo
sbb
addl
push
scas
into
sub
enter
movsl
sarb
sbbl
mov
fidivs
cmp
push
mov
divb
xchg
mov
fs
bound
data16
bound
xchg
xchg
in
mov
cli
xor
push
pop
ja
dec
hlt
jg
out
mov
repz
and
daa
mov
or
cwtl
ficoml
sub
nop
test
cmp
dec
mull
mov
adc
push
mov
ret
in
xchg
or
repnz
mov
xor
jg
xchg
and
rolb
push
add
or
popl
das
add
inc
sbb
push
pusha
jge
dec
fstp
xor
mov
daa
mov
movsb
fstl
xchg
jbe
jne
xor
xor
nop
adc
xor
adc
sbb
cmp
cmpsb
adc
pop
mov
mov
aas
inc
jle
sarl
jg
addr16
dec
js
rolb
push
outsl
dec
scas
jmp
jo
aas
lret
lods
pop
xchg
mov
add
fsubl
sbb
push
or
imul
sar
int
popa
push
xor
mov
data16
xchg
and
popa
ficoml
dec
jae
fisubl
mov
mov
in
fdivrp
cmc
mov
std
dec
insb
ss
vpsllq
dec
push
sbb
jp
std
cltd
hlt
call
shlb
push
cmpsl
mov
dec
jge
test
movups
mov
xlat
push
jns
push
adc
test
xchg
int3
jecxz
iret
xor
repz
cltd
pop
or
stos
int3
in
divl
mov
stos
mov
jge
cwtl
addr16
movsl
lcall
repnz
shrb
lods
lcall
scas
stos
ja
xchg
movsl
gs
mov
push
add
in
lcall
ret
mov
sarl
in
mov
ljmp
movq
push
loope
arpl
and
dec
xchg
lds
into
pop
push
fwait
icebp
cli
iret
popa
pop
and
movsl
xlat
popl
icebp
push
mov
jnp
lods
mov
scas
call
outsb
ret
fdivl
popf
mov
popf
lcall
into
mov
jmp
jns
add
mov
add
cld
inc
mov
dec
pushf
adc
sbb
adc
cli
gs
xchg
aas
pop
mov
mov
add
int3
cld
testb
out
fistps
adc
mov
jmp
lods
add
fwait
xlat
xchg
aaa
and
pop
daa
mov
fildll
loope
int3
cld
repz
stc
mov
sbb
fs
jg
test
sti
jb
mov
cli
jecxz
mov
mov
sub
jns
test
jne
bound
inc
test
mov
dec
jg
jge
clc
fistpll
mov
imulb
adc
or
aaa
call
enter
movups
stc
insb
push
rorl
mov
mov
fstpl
sbb
sub
pop
fsubrl
pop
int
es
mov
in
stc
mov
dec
dec
rorl
gs
cmpsb
in
and
or
jmp
lock
sbb
push
ljmp
sbb
idivl
insb
andl
loop
fadd
jbe
std
xor
push
lea
add
sub
and
imul
outsl
cmp
cltd
jecxz
mov
xor
cld
jmp
shl
dec
mov
enter
mov
cmp
sbb
test
popa
or
leave
pop
ss
clc
and
cld
lahf
mov
cwtl
int3
jmp
out
jno
xor
and
aas
add
jmp
mov
fisttpll
scas
push
call
cld
in
inc
dec
scas
in
inc
les
ret
test
scas
inc
imul
jb
addl
nop
leave
pop
sbb
test
push
or
xor
stos
aam
mov
mov
push
stos
dec
xchg
and
sbb
cmp
int3
popf
icebp
push
cmpsl
lods
popf
push
sbb
aad
mov
push
dec
dec
and
imul
jmp
jne
add
xor
or
cmpb
loope
or
push
sub
and
mov
xchg
rcrl
jg
jb
inc
std
pop
xor
les
sarl
lea
cmp
loop
in
fidivl
jo
shll
test
loope
add
pop
in
mov
mov
test
jno
insb
aaa
fidivrs
insl
out
inc
push
rorb
sbb
jmp
jo
movsb
inc
orl
in
pop
push
dec
cmp
cs
std
jle
jo
cwtl
xor
xor
and
push
adc
mov
xchg
add
mov
leave
mov
lods
lock
repnz
dec
xor
dec
divb
jmp
jle
add
int
insb
cmpsb
popf
jg
adcb
fldt
or
mov
pop
dec
adc
ror
lds
push
pop
or
adc
sti
leave
orl
push
loope
cmp
cmp
ss
sbb
jmp
sbb
repnz
push
dec
dec
jne
inc
jge
out
or
inc
dec
roll
loope
addb
movswl
inc
out
mov
and
js
mov
sbb
pop
adc
ds
ret
aas
adc
nop
cmc
sbbl
adc
cld
sbb
xlat
xchg
icebp
cmp
mov
or
mov
mov
push
ret
mov
int
push
das
jbe
xchg
cmc
repnz
or
ja
xchg
xchg
adc
inc
mov
ljmp
mov
rorb
jmp
dec
mov
lods
cmpsb
adc
movsb
pop
pop
ds
add
test
hlt
fxch
jnp
adc
pop
adc
sar
fcoms
cwtl
fimuls
mov
sub
mov
add
ja
aas
scas
lahf
rorl
jle
jmp
cmp
scas
icebp
jno
xchg
decl
add
call
fadds
inc
xor
fstl
ds
xchg
or
fsubl
cmp
bound
push
neg
inc
and
pop
xor
pop
jge
xchg
dec
adc
adc
pop
xor
fistpl
enter
sub
pop
xchg
cmp
pop
pop
add
pop
in
or
mov
popf
push
mov
cmpsl
imul
out
daa
sarl
cmp
jne
in
fldl
es
dec
lret
sbb
mov
mov
aam
test
inc
clc
aad
pop
cld
add
fabs
aas
daa
jno
add
sarb
insb
out
fxch
mov
out
cmc
xor
lret
imulb
aad
movb
nop
mov
push
fildl
test
bnd
pop
fst
xchg
sbb
push
adc
fwait
lock
out
shll
mov
push
leave
in
sbb
aam
xchg
push
out
fists
jmp
xchg
push
lock
pop
ja
cltd
xor
cmp
fildll
rorb
icebp
cld
ss
inc
lods
push
sbb
mov
pop
sbb
dec
jge
arpl
dec
inc
loope
and
adc
fimuls
fiaddl
mov
cmpsl
hlt
mov
mov
imull
loop,pt
push
xchg
jbe
mov
out
loope
xor
fwait
and
aas
or
sti
adc
out
int
leave
push
add
sub
adc
add
jns
out
loopne
mov
adc
fucom
mov
lods
je
mov
jle
mov
lret
xorb
or
xlat
jle
pop
les
aas
pop
ss
or
fidivrs
cmc
filds
pop
dec
dec
xlat
movsb
pusha
addb
in
push
movsb
pop
xor
or
shlb
adc
push
stc
mov
dec
lods
dec
and
sbb
loopne
pusha
xor
loopne
mov
lcall
fxch
outsl
pop
movsl
lods
addl
dec
fstps
cld
lahf
jl
push
xlat
inc
or
in
mov
and
sub
popa
inc
test
inc
sbb
mov
jns
and
dec
jge
xor
cmpsb
jnp
dec
sbb
adc
scas
cmp
data16
mov
push
sahf
iret
arpl
dec
bound
fcompl
lock
mov
ja
push
in
and
ret
fnstsw
in
cmpsl
add
arpl
or
sbb
mov
or
inc
mov
jno
int3
mov
cmp
mov
shrb
fisttpl
aas
shll
sbb
xchg
xchg
mov
mov
daa
out
lcall
call
pop
leave
fsts
sub
addl
in
bound
jo
xorb
mov
insb
and
int3
jmp
xor
add
xor
add
not
adc
out
cmp
leave
in
into
xorb
mov
push
sbb
ja
icebp
das
add
pop
push
or
clc
push
lcall
jns
dec
adc
jnp
mov
fisubrl
dec
rolb
filds
mov
cmp
nop
mov
mov
stc
sub
lea
cmovno
push
dec
cmp
mov
addr16
shlb
lea
or
mov
ss
sahf
leave
hlt
movsl
mov
fs
mov
xchg
mov
or
push
mov
popf
loop
popf
jmp
shll
hlt
call
pop
cmp
mov
addr16
into
cmp
pop
jmp
mov
ja
rorl
mov
jl
and
std
or
push
jbe
jle
adc
lds
iret
fmuls
lock
test
inc
rcr
jbe
shrb
pop
dec
push
pop
pop
inc
idivb
cmp
add
xor
bnd
mov
in
sub
mov
jmp
cmp
enter
mov
mov
xlat
scas
or
ds
adc
and
mov
es
dec
push
pop
xchg
push
jmp
jecxz
inc
push
inc
leave
mov
ret
sbb
push
pop
je
xor
cmp
das
mov
loopne
mov
xchg
push
add
sbb
call
scas
push
adc
ljmp
je
das
push
scas
ret
cmp
mov
aam
lea
clc
outsl
or
cli
int
dec
cmp
pop
jae
stos
sbb
test
aaa
add
adc
punpckhdq
push
dec
lock
hlt
mov
inc
fs
xor
stc
push
fldcw
push
arpl
inc
pusha
icebp
push
das
adc
stc
inc
pop
cmp
xchg
cld
xor
mov
cli
push
mov
stc
imul
dec
lea
inc
push
rorb
sbb
imul
jbe
mov
xor
nop
in
add
lock
aam
mov
lods
and
xchg
xor
adc
js
sub
sub
and
jb
in
sub
fstpl
inc
pushf
sbb
cmp
xchg
inc
mov
xchg
mov
push
push
jae
das
mov
popf
sti
xor
in
cmpsb
adc
negl
cmp
fdivrs
xor
jbe
stc
sti
add
mov
adc
dec
aaa
mov
aam
mov
repnz
and
xchg
sub
test
sbb
sub
sahf
push
lods
push
cmp
rorb
cmp
xchg
pop
mov
dec
ret
mov
in
push
mov
dec
mov
xchg
push
push
xor
dec
and
mov
push
sub
xor
test
loope
and
mov
cmpsl
mov
fs
cld
or
inc
out
inc
xchg
add
icebp
popa
mov
ret
sbb
shll
dec
fisubrs
push
mov
sbb
or
orl
imul
xor
lock
pop
fsubs
jne
mov
lods
int3
pop
inc
sbb
outsl
or
xor
and
dec
mov
sarl
nop
ds
inc
cmp
out
xor
es
orb
add
add
add
and
jmp
push
push
lods
cmp
gs
roll
fldt
lcall
xor
aam
jecxz
loop
push
add
xchg
jo
in
subb
popf
outsb
mov
sub
mov
xchg
mov
ret
sub
dec
fcmovb
sbb
and
into
xor
and
sbb
jnp
in
pop
shl
and
lahf
inc
push
sti
sub
int
or
fwait
es
lret
roll
sub
cs
sahf
pop
aas
rol
cli
xchg
cmc
fcomps
cli
xchg
jnp
fmul
and
or
mov
cltd
push
jp
add
lock
mov
icebp
push
lret
and
xor
pushf
cmp
out
movsl
push
xor
out
pop
ljmp
push
nop
lret
add
dec
test
into
out
in
fidivrl
fdivr
pop
cltd
lds
mov
cmp
xchg
pusha
into
inc
lds
ret
aaa
cltd
add
dec
loop
sti
xchg
ja
insb
sbb
jp
pop
stos
cmpb
sti
mov
stos
xor
sub
movsl
int
sub
fildl
test
push
dec
pop
fistps
test
cmp
xor
int3
stos
fidivrl
or
sub
cli
push
gs
dec
imulb
js
mov
inc
jmp
inc
xorl
or
in
test
nop
push
and
lahf
inc
stos
les
lds
xor
les
mov
mov
adc
lds
fnsave
mov
shr
jno
mov
sti
inc
or
or
loopne
pushf
ficoms
aad
sbbl
ret
jne
incb
mov
cld
lods
daa
inc
push
mov
lea
enter
sbb
stc
jmp
fdivp
fsts
les
enter
push
push
out
pop
adc
pop
daa
mov
gs
test
add
mov
aaa
lock
lcall
dec
mov
add
xlat
aam
push
xchg
xchg
jge
xor
xor
je
addl
pushf
sbb
add
push
rorl
popf
sbbl
jg
xchg
mov
mov
hlt
aam
fisubl
or
call
jl
out
loope
jno
push
mov
mov
jg
lahf
xor
hlt
pop
pushf
movsb
fdivr
aaa
push
or
arpl
out
rolb
mov
jno
incb
test
xchg
mov
das
fistpll
inc
mov
jbe
sub
xchg
cmp
mov
mov
outsb
sub
fdivl
pop
mov
lret
jge
out
mov
cwtl
add
fsubrl
xchg
mov
push
dec
shlb
xchg
jb
jmp
ljmp
xchg
ljmp
fidivrl
cmp
pop
dec
ficoms
and
fucomp
pop
and
loopne
xchg
shll
cmp
cmp
inc
out
repnz
add
mov
mov
push
xchg
and
mov
sti
mov
pop
sub
mov
out
sbb
clc
mov
xchg
jae
inc
dec
fwait
ljmp
push
flds
or
loope
sub
push
popf
xor
xchg
sbb
call
jae
inc
pusha
stos
cmp
xchg
add
and
pushf
sbb
je
adc
add
popl
sub
dec
test
mov
xchg
mov
sub
das
or
and
or
lea
xchg
loop
enter
mov
jnp
xchg
mov
and
mov
mov
xchg
inc
cmp
jmp
xchg
popa
rcr
insb
enter
lods
lret
test
aam
and
or
sub
lahf
std
cmovbe
push
test
lds
xchg
dec
bound
xlat
lret
add
add
cmp
int
lock
cmp
lret
arpl
mov
jecxz
int3
xchg
and
push
xchg
int
pop
and
mov
rcll
jg
cltd
div
out
push
inc
add
ss
pop
jge
jno
pushf
rcrb
push
lret
adcl
mov
sbb
cmpsl
insb
repnz
sti
jo
push
mov
or
std
ja
cmp
sub
pop
arpl
repnz
cmp
iret
mov
imul
inc
cltd
les
lea
test
out
mov
inc
int3
push
lds
sahf
shr
jno
push
cmp
test
mov
jmp
pop
iret
test
sub
inc
adc
jp
outsl
in
scas
push
add
sahf
shlb
dec
sbb
ljmp
subb
push
jbe
je
push
lahf
rcrb
subb
xchg
cmp
mov
xchg
lcall
pop
inc
adc
adc
xor
push
mov
sti
jp
and
pop
jge
add
je
push
lcall
push
pusha
call
fidivl
sbb
decb
das
and
ss
dec
pop
dec
fmul
mov
lret
pop
jmp
xchg
mov
lods
in
mov
pop
repz
mov
frstor
mov
push
jge
push
dec
aas
out
adc
cmp
xor
into
add
lods
into
loopne
out
xor
aam
sub
sub
cmp
repnz
pop
xor
dec
in
fcmovbe
int
and
pop
mov
xchg
mov
scas
aad
xor
pop
jnp
arpl
and
dec
in
mov
outsb
fimull
fldenv
cmp
xlat
push
outsb
lods
cli
push
test
adc
cmpl
xchg
adc
dec
pop
dec
roll
xor
pop
lods
arpl
dec
mov
test
or
xor
jns
adc
inc
push
or
aaa
or
dec
jnp
pop
xor
lds
imul
icebp
test
rol
pop
sub
and
scas
out
dec
dec
mov
add
cmp
fistps
xor
mov
push
lret
and
dec
mov
repnz
addr16
mov
sbb
repz
mov
mov
bound
jp
lret
stos
filds
sbb
xchg
cmpsl
jb
xchg
jne
xchg
xor
push
push
sub
mov
xlat
pusha
push
ret
inc
push
sub
in
lods
sbb
cmpsb
int3
add
jbe
lret
nop
or
push
sub
and
das
mov
jnp
push
add
add
sbb
into
adc
sub
jb
xchg
mov
mov
pop
dec
push
xchg
rcrb
test
rcrb
push
push
dec
sbbl
dec
dec
jmp
inc
fdivrl
aad
lcall
lock
out
cmp
cwtl
xchg
mov
sbb
sub
popaw
lock
add
mov
inc
lahf
out
add
cmp
sbb
addr16
or
ret
sub
out
test
push
sbb
loope
andb
adcl
cmp
lea
sbb
rcl
ljmp
sbb
imul
jo
ja
mov
or
or
and
out
mov
mov
leave
aaa
push
lret
call
and
or
jecxz
je
aas
cmpsl
push
test
iret
push
push
paddw
imul
pop
pop
inc
sarl
call
fsubl
mov
sub
sub
std
jns
into
push
imul
jbe
cmp
add
sbb
lea
fwait
mov
rcr
sbb
andl
mov
push
stc
sti
sub
cmp
jnp
imul
or
fsin
daa
mov
test
jne
mov
enter
mov
jg
mov
lea
cmp
scas
and
cwtl
and
clc
in
push
xchg
jg
repnz
cli
sbb
roll
cli
jg
inc
imul
mov
shll
faddp
or
clc
sub
cmp
mov
fiaddl
movsl
iret
je
testb
inc
inc
push
out
arpl
mov
loop
ror
mov
inc
cmp
fistps
out
pop
aaa
sbb
mov
fcompl
push
ret
pusha
add
push
out
inc
jmp
cmc
aas
pushl
daa
arpl
xor
lret
cmp
pop
xchg
cmc
out
insl
mov
fsubrp
add
in
cld
mov
jge
lods
fildl
adc
fidivs
scas
jns
mov
das
fldt
cmc
sbb
mov
xchg
or
sahf
cmp
loope
dec
xchg
movsb
sub
pop
sub
jbe
xor
ret
movsb
jecxz
inc
sti
les
mov
lds
sub
repnz
ret
push
add
ss
fsts
mov
push
lea
jae
dec
sub
repz
or
add
xchg
mov
mov
and
cmp
mov
or
push
xchg
movsb
fwait
addr16
sbb
cmp
in
pop
imul
push
xor
scas
lret
mov
sub
cld
fs
enter
stos
add
sahf
xchg
imul
dec
mov
rclb
inc
roll
mov
sahf
jne
popa
mov
xchg
lods
addr16
add
loopne
insb
int3
jg
jmp
sbb
adc
repz
add
sbb
xchg
sub
jo
test
add
or
addr16
sbb
stos
sbb
sahf
fildll
rcll
nop
insl
dec
loope
inc
aad
adcb
add
jne
jno
mov
scas
sub
xlat
repnz
lahf
lds
hlt
negb
and
push
iret
out
stos
test
jg
jg
cmp
jo
xor
arpl
jecxz
ret
xor
jmp
loopne
les
sub
sbb
dec
sbb
outsl
repz
mov
pushl
fwait
inc
mov
xchg
mov
xchg
mov
add
repnz
push
push
cmp
mov
xchg
xchg
jae
outsl
nop
dec
and
inc
ret
fs
and
pop
mov
jbe
test
rcrl
pop
mov
lods
mov
shlb
add
push
jp
pop
pop
popa
popl
jb
mov
dec
and
xor
pop
mov
add
xor
jbe
cli
ret
loop
int
add
xor
dec
sub
decl
mov
mov
pop
les
incb
mov
and
push
imull
dec
test
inc
nop
inc
cmc
shrb
xchg
mov
pop
rcll
dec
jmp
into
sub
xchg
std
je
flds
mov
add
icebp
sbb
test
mov
cmpsl
xor
insb
pop
mov
push
jno
gs
ret
out
and
pop
fldt
xchg
cmpsb
mov
ret
arpl
orl
jnp
push
mov
jns
sub
mov
and
rclb
xor
inc
rcrb
rol
push
ljmp
jb
icebp
mov
xor
adc
pop
out
aam
fwait
pop
mov
cmpsb
jp
movsb
xchg
xor
push
loopne
insl
push
add
xchg
in
lret
mov
dec
xchg
jne
bound
xor
fs
push
sbb
lret
rcrl
inc
add
add
imul
test
mov
test
pushf
shl
mov
jmp
mov
mov
into
sbb
mov
inc
push
mov
push
xchg
in
lahf
jno
lods
cli
test
xchg
cmp
loopne
lret
adc
pop
ret
outsb
adc
fstl
jmp
mov
aas
sub
pop
aaa
sbb
xor
xchg
cltd
js
mov
ja
sti
mov
test
push
out
mov
outsb
dec
fwait
out
scas
js
in
cmp
cmpsb
mov
shr
xchg
jb
subl
sub
aam
jae
cmp
pushf
rcrb
nop
fidivl
xor
jmp
test
or
leave
mov
xorb
jmp
cwtl
les
das
xor
dec
mov
pop
paddusb
cmpsl
fisubs
popa
pop
arpl
mov
imul
cmp
sbb
mov
jge
xorb
push
add
sbb
mov
pop
add
jb
les
std
aam
js
xchg
call
loopne
or
cmc
into
sub
pop
jbe
add
dec
sbb
andb
loop
mov
lcall
jbe
and
es
cmp
mov
flds
pop
icebp
adc
cmp
mov
arpl
push
push
scas
inc
pop
test
arpl
ret
ret
dec
push
mov
test
test
cld
cmpsb
test
mov
or
ds
adc
jnp
les
std
mov
jecxz
mov
push
stos
outsl
jo
jbe
nop
insb
mov
std
xchg
lahf
cli
jo
gs
ficoms
js
add
mov
jle
push
ds
scas
repnz
cmp
pusha
xchg
out
cld
pop
stos
test
mov
dec
push
adcl
sbb
cmpsb
notl
icebp
lea
pop
imul
aam
inc
mov
push
jnp
iret
inc
jno
lock
repnz
mov
icebp
add
dec
leave
or
mov
mov
sbb
jmp
mov
jmp
add
xchg
jecxz
stc
gs
outsb
icebp
inc
pop
rcl
enter
and
inc
arpl
xor
dec
sub
leave
cs
inc
mov
pop
mov
sub
ret
jecxz
and
ljmp
lds
push
scas
push
pop
je
pop
xchg
fxch
cs
sub
loopne
movsb
int3
add
mov
shlb
cld
jle
int3
fs
jl
daa
data16
imul
push
dec
loop
sbb
push
out
scas
xor
into
sub
sbb
in
test
sbb
pop
push
or
xchg
ljmp
in
cld
cmpsb
movsl
xchg
mov
xchg
sahf
jnp
vmovapd
mov
push
or
imul
jmp
movsl
test
jae
std
fwait
dec
movsl
adc
into
pop
cmp
ret
sbb
stc
inc
cld
int3
mov
clc
nop
and
adc
or
mov
sub
data16
fstpl
nop
enter
aas
mov
or
push
or
adc
mov
icebp
dec
or
xchg
inc
push
push
mov
push
cli
mov
dec
loopne
xor
dec
mov
icebp
inc
inc
pop
mov
add
pop
lock
sti
sub
flds
fdivrs
call
mov
or
pushf
aaa
and
ret
mov
call
mov
sbb
fidivrs
sar
mov
gs
bound
leave
add
ret
sbb
sbb
jbe
add
or
mov
popf
xor
inc
push
incb
pop
sbb
roll
jno
dec
dec
and
jle
mov
rcrl
cmp
ds
fstpl
ret
sti
sarb
jle
sti
insb
adc
out
xchg
xchg
push
imulb
mov
nop
or
push
mov
pop
jbe
ret
inc
fildl
in
enter
push
adc
inc
pop
loop
sub
pop
cmp
fidivrs
jecxz
clc
out
insl
dec
add
dec
mov
stos
adc
sbb
nop
jo
mov
add
in
mov
clc
fldt
inc
outsl
daa
popa
pop
mov
addr16
in
int3
jb
inc
in
in
lret
mov
lods
in
cmp
idivl
mov
pop
jns
adc
rorl
cld
fcmovb
inc
push
sub
jns
pop
push
jmp
xchg
jge
cs
fisubrs
jno
add
into
insb
mov
orl
mov
mov
and
fs
loope
sub
xor
push
sti
fwait
cltd
add
insb
or
mov
stc
push
loop
xor
and
pushf
mov
mov
imul
iret
gs
clc
ret
stos
outsl
pop
inc
std
sub
xchg
aad
fcmovnb
sub
add
sbb
or
mov
iret
mov
mov
js
jge
std
lret
test
movsl
xchg
cmpsl
dec
lods
loop
pop
mov
cmp
into
adc
or
je
cmp
and
cmpsl
pop
cld
cmpps
test
sbb
push
lods
sbbb
mov
jl
dec
out
push
aaa
stos
loopne
and
dec
push
mov
js
push
dec
jns
lea
add
into
and
fidivrl
push
mov
inc
dec
pop
add
stc
jecxz
push
repz
cs
movsl
int
or
pop
mov
jae
ja
repnz
or
xchg
pop
xor
mov
mov
repz
push
popa
jp
shlb
jmp
int
icebp
dec
test
cld
push
int3
ja
dec
lds
js
mov
jne
cli
mov
mov
add
addr16
int3
ja
fst
test
mov
inc
hlt
adc
call
dec
push
stos
insl
pop
lcall
into
mov
mov
sbb
fcoms
xor
loope
fldl
pop
test
in
inc
addr16
in
js
stos
jecxz
inc
mov
fiaddl
int3
jnp
stos
mov
int3
sbb
loopne
jb
inc
pop
dec
sub
or
inc
pusha
push
test
cmp
jge
mov
shrl
hlt
inc
push
mov
dec
cmp
fsubrs
adc
push
cmp
push
lret
pop
push
mov
repz
cmp
cmp
jmp
mov
xor
in
and
dec
adc
sub
dec
mov
mov
adc
xor
sbb
dec
gs
rcrl
mov
adc
xchg
das
push
shl
fwait
mov
ficompl
mov
fxch
inc
mov
loope
adc
inc
mov
and
mov
stos
cmp
cmp
sbb
das
notb
lcall
repz
dec
insl
mov
lcall
mov
lds
jbe
mov
inc
ja
ja
cmp
out
mov
fistpl
and
mov
pop
adc
fisttpll
xchg
in
dec
popa
cmp
ret
ret
enter
cmc
xchg
fdiv
cmpsl
pop
mov
shll
push
mov
adc
jmp
in
fistpll
dec
mov
lds
enter
jmp
mov
push
gs
adc
movsl
in
js
and
jecxz
imul
shll
clc
aam
rcrl
stos
adc
pusha
cmp
lret
daa
mov
or
iret
lret
jmp
ret
fcoml
fadds
ret
bound
inc
hlt
fcoml
xchg
mov
inc
mov
out
cmpb
dec
sti
movsl
ss
data16
scas
bound
call
inc
sub
pop
stos
mov
lahf
push
dec
dec
xchg
out
es
mov
arpl
das
adc
or
fildl
dec
cs
into
add
bound
icebp
repnz
pop
aaa
test
xlat
movsl
loope
mov
mov
cmpb
aaa
arpl
mov
sub
jb
shl
loope
mov
xchg
push
cli
enter
imull
and
outsl
call
or
dec
jmp
out
lds
fisttpll
int3
cs
aad
and
inc
adc
nop
gs
rorl
mov
sbb
js
inc
lret
nop
jo
mov
and
lods
test
mov
cmp
pop
dec
or
and
addl
in
mov
scas
mov
jb
pop
mov
bound
ja
or
jae
loope
sub
mov
pop
cmc
xchg
pop
or
ljmp
sbb
push
test
mov
movsl
ds
shrb
cli
bound
dec
cmc
jno
push
jb
into
dec
mov
add
stc
or
xchg
je
xchg
sbb
cld
lock
fcoms
jp
dec
ja
arpl
sub
or
or
fsubrl
jnp
push
inc
jns
fidivrs
jne
mov
xchg
lea
push
je
pop
mov
dec
cmp
pushf
mov
out
ret
push
inc
or
xchg
or
fwait
ret
and
mov
pop
subl
push
and
sbb
xchg
neg
stos
pop
xor
les
pusha
add
js
bound
test
inc
adc
mov
dec
push
cmc
xchg
mov
movsl
mov
push
mov
call
fnstsw
and
cld
cmc
and
sbb
add
dec
fmull
mov
imul
in
ljmp
cmpsb
jmp
sub
jge
or
stc
add
call
pop
lds
jne
out
pop
sbbb
mov
subl
mov
mov
or
bound
lods
jmp
mov
xchg
mull
cmp
sub
stos
jge
lods
and
icebp
dec
cmc
inc
mov
mov
mov
mov
fimull
int
aad
push
xor
adc
repz
out
dec
dec
cld
cld
out
pushf
xchg
fs
inc
and
cs
icebp
insl
out
push
cmpb
adc
xchg
or
nop
lret
das
sti
push
push
test
jb
sbbl
pop
adc
mov
cmp
dec
mov
adc
popa
jl
cmp
ficoms
mov
outsl
cmp
push
lods
xor
lcall
cwtl
lret
pop
imul
out
imul
mov
push
arpl
mov
mov
adc
xchg
test
mov
sti
lds
push
inc
mov
shll
in
jge
or
push
out
bound
test
pusha
icebp
shl
adc
addr16
cld
shrb
popa
dec
lahf
insb
je
test
add
aam
jl
inc
push
fmull
mov
scas
out
add
push
cld
xor
push
dec
sbb
aas
es
jl
arpl
push
dec
js
or
or
sbb
mov
testl
add
call
incb
xchg
bound
mov
jl
in
das
outsl
and
loop
jg
add
mov
lea
dec
shll
in
cmp
adc
dec
jne
push
jb
nop
pushf
sbb
out
xor
or
and
mov
push
cmpsl
cmc
arpl
cmc
xchg
dec
xchg
dec
mov
cld
movsb
dec
in
xor
mov
cmp
stos
push
add
sub
sbbl
jge
loop
stc
enter
mov
lahf
mov
leave
jmp
push
mov
ljmp
xchg
testl
jno
mov
nop
sbb
sub
pop
lcall
xlat
xchg
dec
popa
xor
pop
testb
cs
jmp
repnz
leave
push
mov
lret
out
and
jb
pushf
xlat
jae
insl
sbb
cld
icebp
loop
or
imul
mov
dec
or
xor
cs
xchg
es
sbb
in
push
xchg
jo
test
adc
pop
xor
or
pop
xchg
sbb
cwtl
das
fstpl
mov
and
ljmp
iret
rcr
enter
je
aaa
sub
enter
cltd
push
jmp
sub
push
xchg
lret
jb,pt
bt
mov
cltd
adc
and
stos
adc
xchg
pop
or
divb
lds
xchg
dec
xor
imul
add
mov
pop
xchg
mov
xchg
pop
movb
inc
push
jg
adc
lret
popf
pusha
daa
jg
mov
mov
add
cwtl
xor
inc
mov
fcompl
or
int3
jne
scas
out
inc
popa
das
pop
and
popf
sub
push
ja
inc
add
pop
adc
out
push
data16
jg
xchg
lret
jl
cwtl
dec
add
shr
cli
xchg
pushf
scas
fmul
fdivs
rorl
or
arpl
push
or
adc
pushf
jnp
ja
das
adc
jae
mov
or
sbb
sbb
mov
mov
sbb
leave
add
and
pop
int3
les
subl
scas
cmp
movzbl
test
das
fs
xlat
iret
es
mov
shlb
iret
pop
cli
lret
pushf
cltd
fdivs
pop
pusha
movsl
add
aas
adc
ret
xchg
pop
mov
daa
int3
sar
cld
xor
subb
in
andb
fisubl
lret
aam
mov
cmpsb
nop
and
fnstcw
lea
mov
or
stos
cmp
cmp
loop
gs
lcall
mov
lock
insl
inc
sti
xor
sti
xchg
mov
test
ljmp
js
aad
cmp
push
sub
and
or
push
mov
fs
addr16
sbb
push
dec
loop
pop
mov
add
inc
cmp
adc
clc
jne
and
std
and
adc
mov
sub
jg
or
pop
mov
dec
mov
jmp
shll
cmp
pop
cmp
inc
mov
sbb
addb
in
xchg
sti
push
mov
mov
jle
xlat
div
repz
pop
mov
sbb
or
mov
ds
decl
imul
sti
scas
je
decl
lret
mov
test
cmpsb
negb
and
push
mov
dec
stos
pop
add
push
jnp
mov
inc
aam
cmc
sarl
sbb
adc
sbb
int
fidivs
dec
push
dec
xchg
lea
cmp
pusha
mov
fst
jnp
push
mov
mov
adc
xchg
push
and
and
jl,pn
lret
adc
pop
or
mov
sbb
out
add
shll
arpl
inc
clc
stc
lds
jne
jne
push
mov
adc
das
aad
adc
sub
and
imul
sub
cmp
sbb
das
inc
notb
scas
inc
sarl
inc
aas
push
sub
shlb
or
aaa
push
push
or
pushf
mov
mov
pushw
xchg
std
jnp
jge
rol
fstl
fldl
push
aaa
arpl
js
sbb
int3
orl
je
or
in
pop
cmc
xchg
jnp
sbb
sti
test
lods
pop
pop
push
push
out
int
jecxz
popa
pop
sub
aam
imul
aam
clc
sbb
mov
roll
gs
add
sbb
sub
mov
sub
dec
ds
mov
or
pop
pushf
out
push
inc
testb
xor
popf
pop
pop
loopne
sti
psubw
repnz
sbb
and
jno
inc
push
ret
mov
cmp
xchg
push
mov
fwait
imul
movsl
push
xor
divl
cmp
nop
sbb
jecxz
fstpl
xchg
jne
or
xchg
sub
loop
popa
ficoml
sbb
popa
sbb
outsl
fidivs
int3
out
and
xchg
xchg
das
xchg
icebp
popf
fwait
scas
xor
js
xchg
mov
test
fisttpl
ss
loop
xchg
lea
into
movsl
push
lea
lods
dec
jae,pt
cmp
cld
sbb
pusha
fdivr
testl
ljmp
je
movsl
xor
xchg
sbb
fwait
int3
adc
jg
mov
scas
and
fnstsw
pop
and
mov
mov
scas
mov
adc
xor
out
xor
call
imul
fdivl
inc
inc
ljmp
mov
je
add
mov
dec
cltd
mov
aam
out
imul
adc
or
jl
xor
popl
icebp
cmp
sub
xchg
stos
imul
push
lock
add
insl
and
int3
push
jnp
fiaddl
rcrb
mov
cld
mov
mov
xor
pop
pop
dec
dec
loop
push
cmp
inc
movsl
inc
aam
add
and
test
adc
and
shlb
xor
fmul
lods
loope
mov
popa
xchg
ret
cmp
lret
inc
cmp
insl
xchg
test
sub
pop
fisttpll
xlat
in
out
cmc
shl
pop
sub
or
addr16
pop
cmp
rcrb
fstp
ljmp
or
insb
enter
test
pop
fcoms
nop
aad
jecxz
push
outsb
pop
add
xchg
rol
inc
push
and
push
lock
imul
aaa
jo
js
push
stc
pop
push
les
mov
jo
push
mov
mov
xor
or
dec
fs
or
movsl
fnstsw
push
test
aas
jge
sti
jl
inc
fcompl
out
fisttps
les
pop
popa
inc
mov
gs
out
dec
filds
pop
and
dec
sub
adc
in
stos
sbb
or
xor
dec
shl
mov
or
mov
pop
xchg
data16
stos
mov
clc
popa
cltd
pop
arpl
push
pop
in
push
out
mov
cmp
rcll
imul
int
loope
lcall
add
sub
or
aad
mov
mov
add
sbb
or
lea
mov
icebp
in
orb
jl
stos
shll
sbb
xor
stos
jecxz
mov
outsl
xor
mov
mov
pop
pop
clc
jle
sub
dec
std
add
inc
scas
into
inc
dec
sbb
out
jo
imul
pop
addr16
dec
push
popa
push
test
out
pop
jne
xor
mov
test
push
fdivrl
imul
jmp
jecxz
lods
jl
inc
and
inc
adc
sub
mov
ret
loope
ljmp
cwtl
jp
push
loope
mov
inc
ret
lcall
or
enter
inc
jmp
andb
jg
pop
not
rcrb
in
mov
xchg
mov
cs
stc
push
cmpl
mov
xor
adc
pop
dec
ss
xor
in
push
int
adc
sub
dec
pushf
out
push
add
aad
arpl
cmc
ss
cmp
mov
inc
xor
dec
lcall
mov
sbb
scas
movsb
cmp
xorb
aas
decl
out
es
jge
inc
incl
mov
sub
in
jle
mov
daa
mov
js
push
mov
pop
aam
out
adc
int
and
and
test
ret
push
inc
out
aas
adc
adc
mov
push
into
xlat
adc
adc
mov
sbb
or
dec
jae
jmp
inc
dec
js
loop
hlt
jb
lods
cmp
jnp
fldcw
fidivrs
xchg
xor
jae
lahf
ss
mov
in
std
das
xchg
push
xor
inc
dec
inc
das
cmp
rorb
or
movsl
jmp
jno
sti
mov
add
es
push
or
nop
scas
dec
repnz
stc
pop
cmp
pop
mov
xchg
xor
cmpsl
test
mov
ret
aad
push
movsl
into
popa
insl
lret
cmc
out
cltd
imul
fmull
jmp
cli
out
insl
xlat
push
xor
jns
jl
sub
icebp
add
push
ror
push
mov
mov
mov
jmp
repz
mov
jo
cmp
jmp
pmullw
jae
mov
jne
and
scas
movsb
rorl
adc
mov
cmp
loope
outsb
dec
cmp
mov
fwait
stos
ss
sti
cli
repnz
fimull
stos
jne
push
jns
stc
mov
mov
xlat
cmp
imul
aad
mov
or
mov
jle
cltd
test
outsb
test
lock
lret
lock
dec
hlt
fisttpll
fiaddl
mov
jae
sub
insl
mov
addr16
ja
pop
dec
add
ja
sbb
jae
in
mov
jp
push
inc
fidivrl
jb
push
pushf
es
push
or
js
jmp
jp
aas
dec
mov
repnz
or
mov
add
in
loopne
jbe
iret
cmp
mov
stc
roll
shlb
cmpsl
mov
and
jbe
dec
cmpsb
pop
sub
jno
push
sbb
addl
addr16
test
mov
inc
jl
pushfw
mov
push
clc
in
dec
xlat
addr16
cmpsb
pop
xor
lock
pop
outsb
sub
mov
jp
test
jne
pop
pop
lock
test
mov
push
out
push
int
sarb
andb
insl
daa
jmp
imul
ja
lcall
icebp
cmp
pop
rcl
jl
add
inc
and
aas
xor
stc
std
add
loop
hlt
xor
mov
insb
jns
cwtl
cmpsl
push
andl
and
cmp
cwtl
sub
sbb
stc
and
aaa
test
jbe
aam
xchg
std
pop
pop
push
mov
insb
addr16
jge
inc
enter
clc
jl
or
iret
mov
xor
fldl
cmp
hlt
xchg
pop
pusha
cmc
std
jp
and
shll
xchg
test
ss
out
ficoml
sbb
or
roll
inc
roll
shl
loopne
fwait
or
loop
sub
cmpsb
loop
addr16
insl
pop
jnp
adc
dec
add
aad
sbb
mov
rcrb
gs
ljmp
push
jno
cld
ljmp
add
cmp
sbb
ret
xor
repz
pop
mov
aas
popf
push
jp
xchg
inc
xchg
cmp
shrl
xor
jo
sbb
inc
dec
xchg
push
fdivl
xlat
push
or
rclb
icebp
fdiv
movsl
mov
push
popf
jmp
std
mov
addr16
push
sbbb
xor
adc
mov
xor
lods
fistps
and
ljmp
pushf
lahf
fidivl
xchg
sub
and
sbb
shll
inc
loop,pn
pop
out
push
imul
testl
dec
add
fs
push
rcll
sahf
hlt
push
outsl
enter
or
inc
pop
xorb
leave
xchg
repz
or
je
pop
add
iret
mov
and
jmp
mov
daa
pop
inc
dec
out
xchg
mov
in
mov
insb
adc
mov
push
xchg
push
test
ret
mov
mov
mov
fwait
into
add
mov
xorb
sub
jo
add
out
aam
popf
repz
dec
dec
int3
and
lea
mov
data16
mov
lcall
and
imul
and
inc
sub
mov
dec
sub
clc
into
in
pop
daa
js
fs
push
cmpb
in
es
loope
xchg
push
stos
push
push
fcoml
enter
lret
aam
sbb
sub
scas
rorb
cmpsl
std
xchg
lcall
pop
popa
xchg
mov
inc
and
adc
les
adc
mov
aam
xchg
xchg
popf
movsl
in
into
mov
push
mov
pop
dec
mov
lea
iret
mov
mov
out
or
lret
pop
test
mov
xor
push
mov
cmp
cmp
das
aad
mov
add
add
popf
ss
pop
sbb
shl
fldenv
ja
clc
sub
loope
sub
test
push
sub
inc
sbb
fmull
negl
loopne
jmp
fistl
daa
fnstenv
cbtw
inc
cmp
pop
or
pop
push
iret
or
xchg
pop
scas
rcrl
push
jnp
dec
ss
leave
lock
add
dec
push
mov
push
jbe
pop
mov
scas
aaa
adc
pop
sahf
cli
rclb
testb
adc
push
xor
mov
push
inc
adc
pmuludq
add
pushf
mov
iret
scas
dec
lds
fisubrl
stos
jmp
pop
mov
imul
jno
pop
xor
fdivrs
iret
or
xchg
cmp
jp
pop
cmp
out
addb
inc
fwait
add
pop
or
loopne
mov
pop
enter
sahf
call
mov
or
popl
sub
inc
arpl
lods
xchg
xor
mov
and
gs
mov
scas
mov
mov
stos
jnp
xor
rclb
pop
inc
scas
adc
out
andl
mov
je
mov
imul
pusha
test
cmpsl
dec
jg
outsb
or
push
fstpl
and
pop
and
add
jns
inc
or
aas
push
dec
addr16
jg
sub
sahf
mov
mov
leave
or
xchg
mov
out
lods
scas
sti
sub
inc
sub
lock
xchg
push
stc
sahf
fsubrl
iret
mov
pop
leave
rcrb
push
bound
sahf
pop
sub
pop
data16
push
jbe
sbb
out
pop
nop
mov
xor
mov
cmpsb
push
test
scas
loope
mov
fstpt
cmp
imul
inc
pusha
sbb
push
cmc
mov
in
xchg
add
repnz
sbb
repnz
lret
xlat
mov
lret
in
inc
insl
adcl
jbe
fnstenv
inc
xchg
ds
sbb
push
inc
xchg
std
jns
or
xchg
jge
das
stc
sbb
xor
push
mov
jnp
fstp
xor
movsl
inc
push
fimull
les
insl
push
stos
es
fsubrl
pop
inc
test
ds
push
and
xor
push
sub
mov
pop
clc
out
pop
cmp
das
cmp
adc
cmc
es
xchg
xor
pop
jmp
test
jecxz
stos
xlat
sbb
fwait
test
out
push
sub
ret
lret
xor
xor
lret
pusha
cwtl
inc
inc
dec
notl
push
push
mov
push
and
push
imul
adcl
or
mov
push
fdivrp
ds
or
sub
dec
ds
dec
mov
dec
test
insl
mov
cmpsb
sub
test
lds
movsb
sbb
addb
mov
and
inc
mov
ds
lret
cmpsl
fbstp
xchg
mov
aam
addb
frstor
bound
or
hlt
jle
inc
pop
mov
cmp
out
loop
push
jae
push
fbstp
push
andl
mov
jmp
inc
dec
test
mov
sbb
ljmp
add
lods
jmp
and
pop
xor
lea
outsb
dec
clc
hlt
and
in
mov
test
adc
les
ss
mov
cmpb
ret
pop
or
xchg
popf
jbe
fistps
test
xchg
jnp
mov
or
jp
adc
aas
int
push
cmc
test
xchg
push
iret
xor
mov
jo
repz
sub
repz
int3
insb
sarb
imul
sbb
testb
dec
fcompl
test
pushl
fucomp
subl
xchg
fcmovb
fidivs
push
and
and
xchg
insb
or
mov
lret
outsb
imul
jb
jb
stos
testb
sbb
decb
or
sbb
adc
lahf
std
inc
and
mov
mov
pop
arpl
rcrb
mov
mov
inc
dec
sbb
rcrb
mov
dec
inc
pop
shlb
and
std
sbb
xor
jb
xchg
repnz
addr16
popl
push
adc
push
inc
ret
pop
mov
call
or
fs
jne
ljmp
add
push
add
repz
lahf
out
dec
out
xlat
cmp
mov
and
adc
add
repz
test
push
mov
or
sbb
mov
adc
gs
cli
mov
xchg
mov
xchg
jecxz
jle
lea
enter
push
or
pop
clc
das
fmul
push
cmp
dec
jo
xor
mov
adc
in
test
movsl
and
pusha
jb
int
dec
out
aad
js
mov
nop
sub
mov
and
cmp
push
inc
lcall
hlt
imul
flds
and
inc
or
xor
push
clc
push
dec
fidivrs
jns
jle
pop
push
jmp
jne
sub
push
outsl
mov
out
xor
push
fndisi(8087
add
dec
cmpsl
jmp
xlat
sbbb
inc
fnstcw
in
mov
cmp
mov
or
pop
js
and
mov
mov
inc
add
lea
sbb
pop
or
inc
cmp
pop
jae
and
stos
out
adc
adc
std
jmp
fucomp
sti
xchg
mov
and
or
fbld
aam
mov
dec
stc
mov
inc
icebp
ljmp
jge
stos
clc
fnstsw
mov
pop
cltd
ficompl
or
dec
xchg
cmpsl
adc
and
in
inc
or
sub
addr16
cwtl
sti
test
adc
test
cmp
and
mov
xchg
ficompl
jecxz
int3
or
ds
pop
fadds
pop
sbb
mov
fstps
bound
stos
mov
inc
bound
mov
mov
jae
bnd
jns
or
imul
sub
fistpll
xor
xchg
xchg
mov
icebp
mov
add
xlat
out
sub
jle
fimull
mov
pop
cmpsl
push
fidivrs
mov
in
cmp
sbb
and
push
inc
cltd
jge
xorl
jecxz,pt
cmp
ljmp
jg
loope
test
cmp
sar
jge
xor
sbb
test
sbb
sti
fnsetpm(287
push
pop
xor
daa
cmp
pop
sarl
lea
ds
iret
inc
jecxz
pop
idivl
int3
mov
arpl
xor
jb
std
push
ljmp
les
insb
add
mov
or
and
pop
jae
sub
xchg
aam
dec
fcoml
jecxz
mov
push
mov
xchg
outsb
les
push
jnp
faddp
testb
jl
xchg
mov
sub
xor
cltd
bound
mov
xchg
rcl
popf
stc
mov
cmp
inc
pop
sub
push
sub
mov
push
mov
repnz
mov
in
pop
test
mov
inc
out
aad
imul
xchg
or
fdivs
sub
mov
cmc
push
and
push
test
jo
stos
push
fsubr
mov
inc
je
ljmp
jp
push
decb
dec
mov
lahf
xchg
and
cmp
outsl
xor
imul
aam
jbe
stos
aas
xchg
imul
movl
inc
stos
fidivrs
loope
sbb
mov
mov
add
xor
xor
and
sahf
cs
into
sub
out
sbb
adc
mov
es
push
dec
push
jl
jl
arpl
mov
push
gs
sbb
push
aaa
inc
jg
fsubrs
test
jge
test
sub
lret
xor
or
jl
cmpsb
add
rorb
sbb
ds
daa
mov
popf
int
jecxz
dec
mov
outsl
pushf
or
cmp
inc
fiaddl
aam
and
adc
mov
nop
and
and
lret
sub
test
out
add
cwtl
mov
flds
in
and
ljmp
sub
ja
cmp
call
ret
shrl
movsl
xor
shll
push
fs
cld
repz
dec
mov
test
pop
lret
or
xchg
vmovaps
cmp
es
test
mov
pop
cwtl
test
pop
andb
pop
aaa
bound
cld
adc
aaa
add
jmp
scas
dec
mov
push
les
dec
fmul
push
inc
adc
adc
add
rolb
outsb
sub
or
enter
gs
lret
xchg
jno
push
dec
lock
fidivrs
in
sub
stc
mov
ds
push
sbb
js
or
gs
mov
dec
dec
psubw
lcall
inc
fldt
pop
add
jno
sub
inc
mov
cmp
mov
nop
bndstx
pop
clc
pop
dec
aas
sbb
jb
jno
insb
push
in
and
xor
pop
dec
insl
scas
adc
sbb
dec
mov
push
pusha
outsl
lods
fidivrl
pop
cld
xchg
mov
shl
push
dec
ficomps
stc
ret
xchg
xchg
pop
outsl
add
pop
lods
mov
pusha
push
push
xchg
scas
ljmp
je
fbld
cmp
push
repz
xor
and
daa
push
int
icebp
popa
add
arpl
mov
cltd
rorl
test
and
in
pop
ja
xchg
and
cs
test
pop
xchg
adc
dec
fcomps
push
xchg
mov
jbe
jge
clc
fwait
dec
mov
fwait
mov
insb
cltd
les
mov
cmp
adc
int
sbb
sub
lcall
inc
movsl
scas
or
push
push
mov
push
fidivrs
mov
push
fucom
sub
jle
lret
jne
sbb
mov
out
out
push
mov
adc
movsl
sub
add
ds
cwtl
sub
dec
clc
pop
fdivr
shlb
insb
cwtl
push
cli
mov
in
push
xchg
cmc
data16
lds
and
into
fstl
ffreep
pop
dec
push
jae
add
subl
pop
sub
loopne
fistpll
fdivrs
lret
xor
xchg
nop
dec
hlt
addl
mov
pop
xor
std
mov
or
repz
test
cwtl
test
dec
imul
push
fsubrl
sbb
cwtl
and
mov
pop
out
jb
cmpsl
ja
xor
add
xlat
andb
mov
lret
jle
in
push
jmp
mov
in
daa
repnz
enter
or
lods
mov
cmpsb
or
ljmp
fs
scas
rcl
ret
jo
and
enter
push
jmp
xchg
jbe
and
mov
and
cmpsb
fdivl
gs
inc
mov
rcrl
mov
jecxz
test
fnsave
mov
fmul
dec
fbstp
dec
adc
or
dec
icebp
ljmp
test
aas
aas
popf
divl
mov
bound
add
mov
shlb
add
rcrb
push
adc
in
mov
jne
fldl
cs
xor
in
mov
popf
addl
xchg
rcrb
cmp
push
sub
ljmp
and
dec
mov
mov
and
enter
sub
and
out
das
sub
add
imul
es
rol
cmp
pop
imul
loop
daa
jle
sub
enter
adc
addr16
mov
xchg
push
enter
push
icebp
sub
mov
fildl
pop
xlat
xchg
or
icebp
stos
add
das
lcall
sub
loop
xlat
hlt
stos
sub
out
adc
icebp
fsubs
in
lcall
mov
bnd
cmpb
or
inc
xchg
shrb
cmp
push
xchg
imul
sbb
and
xor
pop
jns
or
stos
jl
jno
xor
xchg
adc
sbb
addr16
mov
loop
ss
adc
cld
pop
adc
clc
push
cmpb
ficomps
xlat
xchg
or
in
sub
inc
aas
pushf
stc
xor
inc
dec
sbb
and
and
test
fbld
sub
cmp
shrb
and
cmp
xchg
fwait
jo
xor
fnsave
jp
mov
sbb
cmp
pop
or
aam
sbb
gs
sarl
lods
out
mov
adc
push
jnp
cmp
aad
rclb
lret
push
ss
push
and
sar
getsec
sarb
repz
sbb
jns
mov
bound
in
inc
mov
mov
insb
add
cmp
push
aad
cli
es
jne
xchg
testb
push
push
lret
movsl
pop
xor
leave
lods
es
xchg
sahf
aad
bound
movsb
adc
sbb
je
pop
sti
int
jmp
dec
add
cwtl
xor
cmp
sub
mov
mov
push
cmp
int3
xchg
fwait
xchg
sbb
enter
jecxz
xlat
movsl
repz
into
push
adc
dec
popa
imul
xor
out
test
mov
cmp
bound
daa
aad
sub
cmc
mov
lahf
pop
jbe
cmp
mov
ss
mov
sub
iret
and
daa
sbb
mov
outsl
pop
std
and
fs
cmp
lods
fisubrs
popa
sub
out
mov
push
dec
sub
mov
xlat
leave
cmc
jl
mov
sbb
pusha
and
push
scas
xchg
jbe
mov
mov
mov
sbb
mov
outsl
mov
mov
outsb
repnz
daa
jg
cmpsl
mov
clc
mov
xor
repnz
cmp
aam
sbb
sarb
lret
ror
push
test
fwait
adc
in
out
test
stos
loop
test
std
nop
fbstp
nop
inc
cld
aas
xor
xchg
sbb
push
fldenv
push
nop
xor
xor
sbbb
movsb
icebp
or
mov
dec
mov
imul
fs
dec
mov
adc
sub
mov
pop
adc
sbb
jecxz
shll
cs
add
pop
popf
dec
clc
jnp
loopne
ja
push
pop
add
xor
mov
mov
add
and
mov
inc
outsb
inc
mov
sahf
inc
dec
jo
jno
jecxz
test
jp
dec
push
push
cmpsb
mov
mov
aad
sub
jns
dec
test
je
cwtl
and
dec
jmp
mov
mov
cwtl
and
sbb
aam
dec
xchg
pop
add
and
jo
and
inc
mov
mov
lret
sub
cmc
push
les
lods
inc
xor
enter
je
mov
imul
fsubl
shrb
hlt
xor
aas
jnp
loopne
int
jp
popa
mov
das
xchg
jnp
xchg
bound
lret
mov
pop
adc
std
mov
or
cmp
mov
jl
push
iret
lock
push
lret
push
sbb
ss
xor
cs
jp
imul
cmpsl
fnstcw
cmp
mov
loop
cld
jle
mov
je
sarb
ret
sub
clc
xchg
out
push
jl
jg
cmp
lahf
inc
add
mov
ljmp
and
mov
inc
jo
dec
sub
stos
dec
cmpsb
xchg
push
sub
xchg
movsb
sahf
rclb
std
inc
cmp
mov
outsl
lods
xor
mov
ds
jl
dec
adc
inc
xchg
hlt
sub
push
loopne
mov
repnz
dec
nop
fucomip
scas
xchg
and
jnp
xor
add
in
icebp
xchg
add
add
adc
shrl
std
or
jg
push
adc
sti
imul
or
ja
cld
insl
mov
and
xchg
clc
jbe
adc
mov
jge
dec
test
push
dec
or
shll
stos
push
test
push
das
insb
pushf
push
cltd
pop
or
shll
sbb
push
in
lahf
cli
xchg
out
mov
pop
lret
cmc
pop
add
js
aas
movsb
mov
cmpsl
and
mov
mov
ss
mov
or
pop
sbb
cmpl
das
mov
cmp
ds
outsb
movsl
xor
mov
jo
aad
and
jb
aaa
sub
jne
add
fldenv
orl
xchg
xchg
ds
jbe
jp
or
pop
cltd
fcompl
add
xchg
andb
pop
cwtl
ja
out
insb
rolb
xchg
mov
dec
fisubs
inc
les
dec
loope
cmpsb
call
out
and
push
mov
bound
xchg
test
pop
pusha
lods
test
popa
dec
dec
sub
dec
sbb
xchg
mov
fldcw
cmp
bound
dec
sub
mov
push
mov
xchg
sub
loope
enter
in
mov
mov
cwtl
rol
sti
jb
movsb
push
sti
mov
pop
add
ret
inc
cld
es
adc
dec
ror
test
insl
mov
pop
inc
mov
inc
mull
mov
popa
sarb
das
xchg
xchg
insl
sub
in
pusha
jmp
or
push
decb
cmp
es
lock
xchg
dec
test
loop
add
fcmovnbe
pop
push
fstl
or
pop
lcall
adc
mov
inc
xchg
nop
xor
std
xchg
jle
lahf
fsubl
sbb
stos
xchg
push
cmc
jbe
jo
inc
push
stos
cld
xor
xchg
sbb
xchg
enter
pop
movsb
inc
jge
sbb
ljmp
dec
in
loope
pusha
in
jp
xchg
cmc
mov
lods
std
mov
mov
cmpsb
mov
scas
mov
sti
out
push
add
pop
xchg
sub
in
or
xor
test
jp
lock
and
pop
sbb
mov
scas
jge
cmpsl
lret
lock
add
out
or
push
outsb
pop
sub
arpl
add
jmp
and
mov
xchg
aas
pop
fs
pusha
loope
fists
fsubs
leave
add
push
rcrl
fstl
loop
popf
out
cmp
ret
idiv
sti
dec
das
inc
imul
fcomps
pop
dec
mov
insl
addl
les
adc
cs
mov
inc
cmpsl
cmp
mov
cmp
push
add
aad
pop
outsl
mov
imul
dec
cmp
loope
cmc
lods
pop
outsl
inc
in
cmpsb
pusha
inc
xchg
gs
and
andb
xchg
jmp
sub
pop
lods
pop
xlat
cmpsb
pushf
jo
cli
and
add
fistl
adc
pop
in
into
adc
fiaddl
fidivl
ret
and
mov
jno
outsl
push
inc
mov
sbb
and
push
jns
in
movsb
std
nop
sbb
ret
cwtl
aam
insl
scas
jge
iret
sbb
mov
jmp
and
out
bound
sbb
jmp
outsl
les
fdivp
mov
out
and
loope
adc
ja
push
xor
pop
test
mov
pop
jp
mov
enter
cmpsb
popa
fisubrl
or
push
jo
clc
mov
shr
scas
popf
jmp
jle
imul
lcall
pop
inc
sub
inc
adc
push
js
cmp
ficoml
cmp
or
cs
xor
jg
testb
pop
push
xor
or
imulb
outsl
sbb
aaa
fwait
xor
sub
out
sbb
popf
adc
in
xchg
loopne
je
out
aaa
jnp
subl
and
mov
orb
or
lahf
or
pop
lds
mov
or
imul
xchg
inc
test
adc
ss
xor
mov
xchg
push
hlt
pop
movsb
fwait
xchg
sahf
xor
adc
mov
mov
enter
lods
jge
sbb
cmpsl
int
xchg
gs
fcoml
sbbl
dec
or
js
popa
xor
or
cmp
cli
mov
lods
mov
jbe
lret
xlat
inc
ds
test
es
dec
iret
sbb
mov
sub
daa
mov
jmp
fisubrs
inc
in
popf
in
mov
xchg
cmp
fwait
xchg
and
lock
mov
clc
pop
sub
loope
out
mov
in
dec
jbe
mov
mov
sahf
cmc
lea
pushf
or
mov
push
movsb
inc
sahf
insl
cmp
loopne
movaps
push
icebp
push
sbb
into
xchg
iret
rcrl
sub
dec
out
cmp
xlat
xor
iret
mov
fistpll
mov
jcxz
cmp
pop
negb
jnp
or
cmc
imul
mov
nop
and
dec
insb
hlt
push
testl
mov
mov
sub
mov
adc
test
insb
sbb
mov
jge
dec
sbb
std
or
adc
cli
xchg
add
push
repnz
xchg
push
adc
lret
loopne
push
fs
shll
cli
fdiv
dec
fistpll
repnz
jno
outsl
cmpsb
pop
mov
loope
or
ret
pop
and
loop
dec
mov
rol
movsb
push
mov
and
pusha
adc
data16
ss
pushfw
sbb
inc
dec
mov
xor
inc
xchg
pop
pop
out
daa
movsb
jge
shll
xor
xchg
jns
xor
into
int3
lods
jmp
jmp
pop
or
fmuls
inc
push
repz
pushf
jg
sub
ja
dec
test
pop
sbb
movsl
or
scas
add
xchg
push
cmp
les
jno
movsl
mov
add
gs
aaa
sub
js
xor
loopne
mov
cmp
mov
or
mov
and
insl
sti
add
dec
imul
orb
cmc
xor
pop
and
push
mov
in
lahf
in
inc
xor
lret
inc
xor
inc
addr16
outsb
sbb
outsb
or
ss
push
es
mov
or
cs
xor
mov
fxch
cmc
or
into
loopne
lret
inc
mov
ljmp
sub
push
outsb
das
mov
xchg
pop
lds
dec
mov
xchg
lea
loopne
sbb
xchg
addb
frstor
mov
pop
mov
enter
mov
adc
out
dec
clc
xor
or
push
out
in
xchg
mov
cmp
mov
nop
add
fiaddl
xchg
lret
into
ret
sub
insb
xor
fnstcw
cmpsl
std
mov
nop
das
inc
cmp
icebp
sub
pusha
pop
movsl
sbb
pusha
les
xchg
xorl
mov
outsb
fisttpl
sub
sbb
jmp
pushf
in
cld
repz
js
iret
divl
mov
push
push
xchg
xchg
jbe
in
cltd
mov
mov
into
dec
stos
je
mov
stc
dec
mov
jl
jge
fisubrs
lods
shlb
cmp
idivl
and
and
inc
cmp
test
adc
sub
pushf
test
pop
data16
mov
imull
rcrl
pop
outsl
repz
mov
in
cmp
sahf
popf
xchg
fwait
jne
iret
adc
mov
sete
popa
test
sbb
inc
jmp
negb
adc
adc
movsb
inc
push
or
mov
xor
jge
xchg
cli
pop
mov
dec
es
std
iret
pop
fidivrl
scas
xchg
lret
dec
repnz
mov
jge
cmc
xchg
pop
sub
movsb
pop
inc
aad
adc
fstps
add
push
mov
fchs
and
jo
mov
roll
ret
fs
ljmp
or
jno
push
in
sbb
fidivs
call
ljmp
fimuls
push
popa
add
outsl
mov
push
xchg
jg
stos
aas
sarl
or
mov
gs
cmp
jae
cmpsb
cld
xchg
es
std
lcall
xchg
popa
push
test
lret
fsubr
hlt
sahf
cmp
out
xchg
lahf
mov
dec
icebp
call
xchg
mov
cmp
fnstenv
nop
dec
pop
pushf
pop
mov
cmp
icebp
or
loop
push
outsb
xor
lahf
push
pop
sti
xor
or
dec
xor
int3
popf
jle
imul
pop
xchg
out
aam
aam
jno
and
xor
xor
pop
insb
pop
out
push
mov
outsb
push
pop
xor
iret
jmp
push
setno
add
jmp
xor
push
xchg
ljmp
mov
mov
pop
jne
jmp
cmpb
out
clc
ljmp
push
mov
sbb
cmp
inc
das
or
cs
push
test
out
xchg
or
inc
and
adc
ja
test
imul
pop
ret
adc
xor
fsubr
fisubrl
lods
mov
dec
xchg
pop
xchg
fildl
push
xchg
pushf
cmp
cmpsb
mov
out
lret
and
mov
mov
sbb
sbb
cmc
pop
adc
jnp
rcrl
jne
sub
sti
jmp
inc
dec
enter
in
or
or
add
or
leave
lahf
ja
nop
mov
push
and
cmpsb
or
pop
aad
or
sub
jg
rolb
loopne
or
xor
push
mov
into
jmp
sbb
xlat
aas
sbb
fyl2xp1
mov
jb
out
mov
jge
mov
fwait
not
gs
adc
ljmp
push
mov
cmc
pop
cmpsl
add
add
adc
stos
push
insb
mov
xlat
fisubrl
jmp
xor
mov
cld
sub
mov
and
movsl
jmp
sub
mov
xorb
and
iret
jb
lods
sub
daa
dec
xor
fdivrl
adc
add
dec
cmp
aad
pop
das
cmpb
jae
cld
jno
loop
pusha
cmp
adc
mov
pop
mov
roll
in
add
jle
aaa
push
insl
ds
js
jbe
cmpb
clc
in
mov
rcr
pop
xchg
mull
and
and
xchg
sbb
lcall
jle
and
lods
xchg
jg
push
xchg
ficompl
loop
cmp
pop
jne
xor
ss
in
or
jp
sarb
outsb
ret
lods
jb
hlt
dec
cld
outsb
movsl
pusha
inc
ds
rcl
and
pop
jb
xchg
je
imull
mov
and
sub
repnz
aad
dec
mov
xchg
sti
sbb
mov
std
adc
push
and
jmp
and
gs
mov
call
rcl
jne
cmp
jnp
loopne
mov
mov
divl
icebp
lahf
mov
xchg
hlt
lock
mov
add
pop
imul
dec
sub
jbe
test
popf
mov
mov
lea
filds
lret
push
inc
jle
jno
cmp
adc
xlat
rcrb
hlt
stos
add
dec
popa
rcl
insb
mov
xor
mov
out
lods
jno
pushf
mov
jecxz
lock
adcb
jae
and
imul
mov
sbb
mov
hlt
rorb
outsb
jg
mov
or
mov
pop
sti
shlb
jge
pop
jl
fmulp
pop
xor
in
mov
rclb
dec
push
je
fwait
sbb
mov
mov
in
fadd
push
mov
pop
pop
push
adc
fcoml
fwait
popa
clc
out
scas
mov
mov
push
push
mov
or
add
out
xor
mov
adc
insb
xchg
pop
adc
sahf
sub
je
outsl
or
mov
test
fldt
outsl
xor
push
outsl
add
scas
fsubrs
adc
nop
pusha
jge
popf
inc
daa
jb
xlat
dec
cmpsl
xor
outsb
sbb
xchg
xchg
push
xor
sbb
mov
hlt
or
lcall
mov
push
dec
push
bound
mov
and
cld
clc
xchg
pop
adc
inc
and
scas
jne
sbbb
out
jmp
sub
ret
inc
das
push
adc
mov
push
jns
push
mov
jne
arpl
mov
push
sbb
loop
jo
test
test
outsb
bound
cmpsb
inc
add
mov
imul
outsb
mov
pop
pop
leave
popa
inc
cmp
mov
add
push
loope
xor
mov
jl
xchg
imul
lods
inc
inc
dec
in
pop
popa
jle
iret
sbb
inc
test
aad
jmp
inc
cmpsb
adc
std
out
addr16
jns
adc
je
push
repz
push
mov
into
cli
call
aam
jnp
fsubrl
fildll
test
mov
push
cmp
repnz
out
xchg
adc
pop
es
adc
and
jae
jg
rorl
jnp
xor
and
jmp
xor
in
ljmp
cmp
ret
mov
xorl
pusha
pop
sbb
insb
outsb
mov
sub
ljmp
arpl
pop
lds
mov
dec
aas
ss
jle
sub
dec
leave
lcall
fsubs
les
sub
sti
mov
ret
xor
ret
insl
cmp
and
movsl
int
adc
mov
movsb
xchg
push
xchg
icebp
push
push
push
push
mov
xlat
out
enter
insb
ja
popf
es
shl
lock
roll
xchg
outsb
inc
mov
mov
insl
push
xchg
push
mov
insb
sarb
mov
sbb
filds
fbstp
clc
imul
sub
les
andl
sbb
fidivrs
dec
inc
out
bsr
pop
push
sub
mov
insb
sub
push
or
or
imulb
enter
sub
jae
les
and
fmul
fcoms
xchg
mov
fistps
and
loope
in
and
hlt
add
cs
dec
lea
inc
call
push
sbb
call
add
jmp
insl
jnp
dec
inc
ds
xchg
ret
add
divl
sub
inc
dec
jbe
cmc
adc
push
and
test
rcr
data16
ret
add
sbb
mov
pop
mov
ficoms
jle
cmp
fs
xlat
dec
fisubrl
jns
mov
aas
push
sbb
andl
inc
in
sbb
movb
inc
mov
fldenv
std
into
or
push
or
stos
mov
mov
pop
mov
and
imul
pop
cld
mov
jbe
sub
push
adc
inc
loope
xor
xor
scas
in
stos
dec
repnz
adc
jne
jo
subb
sarb
jno
popf
fisubrl
and
ja
jecxz
scas
aaa
pop
push
push
mov
sub
xchg
fstl
adc
in
test
ficoms
ja
mov
pop
and
cmpsl
cltd
dec
icebp
or
aam
dec
pop
mov
mov
xchg
ds
push
adc
mov
ret
inc
int3
loop
and
xchg
cmp
mov
mov
into
sbb
inc
subl
add
xor
jle
lcall
jp
push
xlat
dec
xchg
ret
insl
lds
or
push
inc
or
sti
xchg
cwtl
jbe
in
cmpsl
add
pushf
xchg
stos
xor
daa
ja
inc
shll
push
push
push
gs
mov
inc
jl
jae
shl
testb
mov
mulb
fidivrl
cmpsl
dec
in
fstpt
pop
out
push
leave
jne
test
push
ret
in
mov
cmp
lods
push
sti
les
push
dec
imul
popa
jbe
iret
sbb
cmp
out
loope
adc
jge
mov
into
jmp
cmp
rcll
insl
add
stos
push
in
inc
pop
cli
test
scas
fisttpl
mov
inc
push
xchg
adc
cmc
cli
lahf
dec
mov
xlat
ss
scas
adc
xcrypt-cbc
cmpsl
xchg
out
pop
xchg
or
insl
les
dec
ret
out
movsl
inc
push
push
bound
adc
cwtl
inc
xor
xlat
xchg
or
mov
mov
xlat
in
pop
cmp
adc
adc
and
lods
into
aad
std
out
mov
out
sub
pop
mov
lcall
gs
or
lcall
xchg
mov
ret
in
fisubl
ret
mov
mov
or
aam
push
lock
shr
int
sbb
sub
iret
dec
cli
push
inc
mov
dec
in
adc
scas
cmpsb
jmp
mov
popf
leave
jne
rorl
push
cmp
add
jg
cltd
add
add
outsl
mov
and
cmpsl
adc
push
pop
stos
push
mov
das
stc
cmp
lcall
sub
std
xor
pop
and
xlat
mov
jmp
fwait
sub
xor
jb
and
pop
std
jne
out
dec
repz
inc
inc
push
sti
push
scas
jo
aad
sub
nop
pusha
push
hlt
addl
enter
in
out
fstp
inc
sahf
into
lds
cmp
rclb
mov
pusha
cld
xor
push
lahf
push
sub
outsb
outsl
sub
frstor
sbb
das
pop
out
shll
cmc
sbb
adc
sbb
in
fsub
in
lods
add
push
xlat
and
or
adc
jg
pop
ja
ret
mov
leave
test
das
jbe
xchg
insb
cwtl
in
mov
out
jo
lret
adc
cs
sbb
arpl
scas
in
jo
push
cmpsb
dec
stos
mov
xchg
push
mov
shlb
sbb
dec
pusha
pushf
and
adc
jmp
push
repnz
repnz
sbb
jne
shrb
cmp
jecxz
insb
inc
mov
push
adc
xchg
fbld
dec
gs
push
xor
mov
pop
imul
push
jnp
test
jne
pop
push
sbb
testb
icebp
jle
mov
add
test
push
test
rcrl
mov
ret
xor
inc
cwtl
xchg
lds
inc
adc
in
pop
mov
cmp
pusha
cld
aas
arpl
fmul
push
mov
push
loopne
mov
outsb
imul
jge
adc
clc
mov
cmp
xchg
cmpsb
cmp
adc
nop
and
xlat
dec
aaa
outsl
dec
push
repnz
out
enter
stc
iret
js
movsb
mov
add
mov
or
jmp
cwtl
dec
f2xm1
and
inc
sub
pop
testl
mov
fadds
and
xchg
cli
or
shr
cmpsb
fldcw
inc
push
out
mov
arpl
hlt
xchg
rorl
add
inc
mov
mov
push
div
sub
pop
jne
mov
andb
mov
xchg
add
outsb
push
cmp
mov
test
inc
sub
outsb
pop
inc
cld
add
int3
dec
movsb
dec
add
sub
sub
shlb
add
or
adcl
test
std
lock
and
cmp
stc
pop
xor
adc
adc
and
push
icebp
or
loope
lods
xchg
inc
lods
gs
jb
mov
cltd
mov
out
xor
lcall
add
in
xorb
jle
mov
mov
repz
mov
add
mov
and
pop
pop
xchg
lods
sub
rclb
xchg
cmpsl
aad
pusha
xchg
mov
xchg
push
inc
mov
pop
xchg
push
int3
in
mov
call
das
xor
fsubs
rcrb
aas
pop
cmpsb
add
je
out
aad
je
flds
inc
pop
test
std
and
mov
insb
cmpsb
je
cmp
cld
and
sarb
jp
hlt
push
jmp
add
or
pop
popa
push
into
fisubl
mov
pop
and
fwait
jge
scas
adc
sbb
mov
dec
out
xor
out
jno
push
outsb
inc
lret
xchg
cld
cmovne
lcall
fidivrl
ret
pop
xor
add
rcr
out
je
add
jo
pop
inc
mov
and
push
xchg
dec
mov
outsb
lret
dec
and
xor
in
add
xlat
fwait
les
rcl
sub
xchg
cmp
jo
xlat
jo
dec
xor
sbb
mov
stos
adc
inc
sbb
rol
dec
cwtl
mov
cli
pop
or
and
add
test
shlb
mov
push
push
mov
lcall
aam
add
dec
jp
dec
xchg
pop
cmc
xor
or
push
cltd
dec
out
shrl
xchg
add
mov
and
pop
testb
shl
mov
dec
dec
sub
or
sbb
lcall
inc
lock
cld
mov
jmp
jo
pusha
pop
pop
in
ds
push
mov
xlat
mov
js
outsl
xchg
push
shlb
lret
dec
dec
xchg
push
rcll
and
ljmp
jg
pop
inc
jae
pop
cltd
xchg
mov
add
cltd
movsb
loope
or
push
stos
adc
enter
mov
or
scas
xor
clc
xchg
push
or
jl
ret
dec
jae
bound
jp
out
cld
xchg
xchg
push
jb
cltd
fst
mov
jno
xor
sub
aam
fisubrs
xchg
icebp
sti
movsl
cli
sub
negl
push
les
xchg
mov
sub
mov
subb
add
and
push
lgs
mov
push
pop
xchg
pop
push
in
sbb
fstpl
adc
jge
fisubs
fs
les
add
test
subb
mov
add
hlt
shrl
imul
dec
mov
or
stos
xchg
inc
sub
addb
adc
shl
shr
mov
push
mov
dec
mov
sbb
nop
pop
sub
add
pop
dec
jo
mov
push
lea
js
adc
mov
lock
shlb
popa
mov
pop
pop
xchg
repz
inc
divl
lcall
jo
insl
pop
mov
roll
push
and
lds
cmp
xchg
pop
cmp
or
leave
in
lods
aad
pop
mov
and
sub
out
fldt
mulb
shlb
pushl
xchg
mov
lret
or
or
adc
mov
jle
insb
addr16
insb
dec
jle
inc
in
cmp
pusha
cmp
aam
adc
cmc
repz
stos
cwtl
loopne
jbe
leave
es
js
dec
out
and
mov
dec
jb
mov
push
jnp
dec
pop
mov
ds
mov
stos
jmp
push
sbb
pop
int
idivb
daa
jnp
stos
sbb
xchg
xchg
clc
out
out
rcl
dec
aas
inc
mov
and
fcomps
ljmp
je
cltd
mov
lea
jne
imull
cli
mov
nop
jl
dec
xor
dec
rcrb
sub
jmp
std
xlat
cwtl
loop
out
pop
cmp
das
jge
or
or
adc
pop
jle
adc
inc
pop
gs
push
cmp
lods
loopne
adc
aam
mov
pop
fcmovnb
int3
and
mov
int3
addr16
je
jne
mov
clc
mov
loopne
pop
cmpsb
jl
out
mov
stc
pusha
mov
pop
sub
xor
mov
mov
mov
jl
xor
js
loope
add
aas
add
cmpsb
jns
push
js
mov
mov
mov
in
call
add
lods
outsb
adcb
sbb
mov
je
mov
adc
jle
fwait
jo
roll
cmpsb
sbb
mov
and
cmp
and
imul
xchg
sahf
sbb
mov
incb
jns
arpl
mov
adc
or
xchg
aaa
pop
mov
cmp
jne
jp
xor
sbb
popa
pop
call
scas
inc
movsl
inc
nop
cmc
scas
test
or
addb
jp
sbb
mov
cmp
insl
out
cmp
sub
fildl
sbb
pushf
scas
stc
push
adc
or
cmp
loopne
movmskps
add
jg
loopne
push
cmp
xchg
mov
push
mov
pop
sar
adc
pop
lods
lock
jbe
popf
cli
lods
in
pop
ror
iret
add
pop
adc
rcll
sub
pusha
sbb
pcmpeqb
xor
movsb
push
sbb
mov
mov
inc
push
jmp
andb
fidivl
mov
test
xchg
add
dec
aam
adc
lods
leave
lock
ss
mov
sti
jp
inc
push
sub
lcall
loope
lock
cmp
adc
mov
test
aad
rcrl
sub
int3
lods
sbb
jge
ljmp
imul
push
iret
mov
sahf
dec
or
lret
add
movsl
js
mov
std
int3
mov
repz
cmc
sbbb
fcoms
xor
in
int3
sbb
jnp
mov
sbb
dec
sub
mov
clc
mov
pop
xchg
adc
dec
test
ret
bnd
or
xor
in
sahf
arpl
push
mov
inc
pop
add
jecxz
pop
sub
xor
sub
and
shrl
mov
pop
fsub
fwait
testb
mov
mov
decl
js
pop
mov
dec
outsl
orl
xchg
jmp
adc
and
adc
sub
pop
add
mov
ljmp
push
inc
inc
lcall
push
dec
push
dec
pop
test
xor
jecxz
and
icebp
or
mov
cmpsl
and
cli
sbb
aaa
ret
or
push
shrl
xlat
mov
int3
mov
icebp
fidivrl
jo
rclb
andl
lahf
cmc
xchg
sub
fidivs
push
int3
ljmp
mov
adc
push
cmp
xchg
mov
pop
mov
lock
push
in
lods
aam
stc
bound
into
out
mov
outsl
nop
ss
lret
fnsave
mov
insb
das
pop
mov
xor
mov
cmp
mov
and
push
test
movsl
je
int
sbb
xchg
push
aas
lock
movsl
cmp
cmpsl
add
std
ret
test
rolb
mov
adc
push
fmull
shl
add
pop
xchg
cwtl
sub
out
cli
adc
sub
shlb
lret
mov
xchg
dec
lock
cs
in
push
fsubrs
vpshufhw
sbb
xchg
sbb
pop
mov
fcmovu
in
mov
mov
mov
aas
mov
test
pushf
sub
int3
test
sub
mov
xchg
push
scas
call
pop
cmpsl
xchg
add
xor
pop
push
and
sbb
and
cli
adc
add
jo
dec
xchg
dec
adc
loopne
hlt
hlt
dec
in
sbb
inc
je
mov
inc
out
push
or
pop
sub
xchg
or
and
fnstcw
cmp
xchg
notb
lret
xchg
int3
jbe
ja
orl
mov
neg
add
push
dec
cltd
repnz
and
sbb
add
jb
lcall
mov
cltd
jl
xor
fistl
push
dec
push
cli
into
imul
sbb
mov
lea
add
lahf
addr16
or
mov
mov
pop
xchg
xor
jg
adc
imul
lds
mov
mov
cwtl
xor
sbb
imul
jb
push
mov
cmp
fdiv
addr16
pop
jecxz
fwait
popf
mov
jle
pop
mov
sub
mov
mov
lahf
std
cmpsb
bts
pop
lret
ret
jnp
popf
pop
loope
pop
test
push
pushf
out
mov
stos
dec
pop
xchg
cmp
jmp
dec
pop
outsl
jg
movsb
ret
movsb
aaa
sbb
call
aad
sti
cld
cmp
and
out
test
stos
addr16
scas
jmp
dec
insb
cmpsl
adcl
inc
push
lea
sbb
sub
jecxz
dec
jae
lcall
adc
mov
stc
mov
push
sub
fildll
xor
iret
movsb
xchg
mov
shlb
loopne
dec
pop
out
cli
xchg
fstpl
and
scas
shll
mov
pop
xor
ret
out
mov
adc
out
ds
mov
mov
xor
pop
inc
mov
in
xchg
sbb
fs
mov
enter
aam
mov
aad
andl
mov
mov
xor
cs
push
pushf
inc
add
ret
ficoml
mov
or
aas
out
sub
shr
or
push
lsl
add
jmp
imul
dec
xor
mov
adc
cmpsb
mov
mov
clc
sub
and
or
sub
fldl
mov
loope
aam
lods
cmpsl
fidivrl
jge
or
loopne
cld
cmp
jg
sub
stc
std
xor
loopne
sbbl
or
jmp
repz
fcmovu
cmpsb
cmp
scas
mov
ret
lcall
xchg
lds
mov
mov
enter
jmp
xor
aad
popa
repz
add
mov
ljmp
sti
sub
fsubr
in
rcrl
mov
or
mov
mov
and
dec
xchg
mov
dec
pop
jge
sbb
sbb
and
inc
dec
aam
mov
mov
stos
pop
es
push
dec
lea
cmp
mov
fsubl
sub
fsubrp
pop
jno
dec
and
add
push
push
stos
out
fisttpll
rcll
mov
cmp
xchg
pop
and
xor
adc
sub
or
xchg
add
leave
nop
add
pop
sahf
cs
xlat
adcl
mov
fdivl
xchg
push
in
push
dec
fstl
xor
repz
sub
dec
ror
push
pop
maxps
cmc
faddp
sbb
gs
mov
in
aam
lcall
xchg
roll
test
in
scas
pop
or
lock
cld
call
enter
fldenv
push
pop
fidivrl
or
sahf
cld
inc
cld
xor
inc
mov
test
jg
mov
insl
adc
add
daa
jns
xor
lcall
mov
lock
ficoms
mov
mov
cmpb
pop
dec
pop
scas
dec
cmp
jns
xlat
aam
jp
and
gs
mov
pusha
and
xorb
mov
lret
adc
inc
or
ljmp
xor
call
mov
inc
mov
sbb
sub
cmc
fldz
mov
clc
xchg
subb
std
daa
sbb
mov
rorb
jns
sbb
sbb
push
cmp
dec
mov
icebp
nop
mov
dec
movsl
jno
pop
fistl
pop
mov
and
or
jle
fs
leave
pushf
and
mov
cmp
xchg
lds
rorl
idivl
stos
sub
out
mov
jnp
mov
push
ficoms
and
push
mov
stc
imul
xor
pop
mov
call
cmc
sub
jp
mov
clc
adc
mov
fsubs
faddl
cmp
xor
outsb
cwtl
arpl
ljmp
ret
dec
lahf
ja
int
pop
pusha
jbe
adc
push
cmp
mov
inc
dec
lds
imul
adc
js
out
mov
in
ja
insb
cli
cmpsb
pop
adc
adc
sti
cmp
decb
push
push
test
stos
out
pop
push
loopne
xor
shrb
icebp
std
and
loope
or
les
in
add
dec
mov
and
pop
rcll
inc
inc
cwtl
bnd
dec
in
int
sub
pop
fimuls
js
ds
mov
adc
push
or
pusha
out
pop
jmp
jmp
mov
push
or
sahf
xchg
lret
inc
sub
call
add
stos
push
stc
cmp
mov
xchg
shll
pop
or
jmp
ja
and
lds
out
push
pop
lods
movsb
xlat
cld
insl
cld
pop
lods
fsts
jnp
stos
jns
push
cmc
aaa
cmp
fiadds
lahf
mov
cmc
mov
xchg
inc
daa
dec
sub
mov
rorl
pop
or
imul
lret
mov
sub
mov
xchg
cmpl
sub
das
lods
out
push
inc
roll
in
mov
stos
cmp
and
cmp
mov
out
jne
movsl
adc
jbe
shl
xchg
jae
in
dec
xchg
lret
pop
test
int
ljmp
imul
fsts
loopne
je
inc
fldl2t
ja
loope
add
test
adc
negl
mov
add
jb
or
fwait
push
dec
popa
aaa
xchg
pop
addr16
or
jle
in
lock
inc
cmp
jno
out
out
mov
cltd
cmpsb
push
es
scas
inc
repnz
das
push
pop
mov
xchg
mov
dec
movsl
outsl
inc
mov
push
shrb
mov
inc
mov
lahf
sub
jne
imul
fisubl
je
mov
ret
pop
xchg
lock
xor
mov
out
aaa
pop
xchg
testb
clc
xor
cmc
data16
push
or
icebp
loopne
push
jecxz
les
xchg
iret
push
cmpsb
orl
and
jbe
xchg
mov
call
inc
mov
pop
and
andl
cmp
test
xchg
xor
dec
lds
rorb
and
jl
scas
iret
xchg
adc
xchg
out
enter
xlat
fwait
mov
pop
cltd
out
clc
sbb
imul
test
add
stos
into
push
mov
adc
mov
ljmp
cmp
testl
test
xchg
jmp
in
lods
sar
popf
lahf
dec
in
mov
jns
mov
xchg
add
adc
ror
js
imul
sarb
dec
jnp
mov
je
mov
pop
inc
jnp
push
pop
and
pushf
divl
mov
or
mov
sub
out
pop
fs
jno
stos
push
outsb
mov
insb
xchg
jae
incl
imull
adc
pop
add
hlt
mov
jge
cmp
inc
out
xchg
adc
sub
call
adc
mov
outsb
std
in
mov
or
fucomi
dec
cmpsl
fists
sahf
fidivrl
movsl
clc
loope
or
mov
pop
dec
pop
lods
xor
sub
nop
jns
dec
dec
fisttps
sub
sub
cmc
dec
jno
test
fisttps
mov
hlt
mov
gs
inc
js
ljmp
icebp
aaa
inc
inc
jb
mov
mov
push
and
int3
ror
movsb
add
fcoms
jecxz
pop
jge
rol
testl
cld
push
imul
popa
lret
mov
bound
xchg
jo
jecxz
lea
pop
pop
mov
inc
lds
lahf
push
inc
cld
fstl
fwait
pusha
fiaddl
in
sbb
cmpsb
les
aad
cmp
lods
xchg
add
shll
scas
into
or
scas
xor
jecxz
push
andb
icebp
in
sbb
insl
adc
int3
jmp
nop
xchg
arpl
pop
clc
mov
std
orl
cmpsl
mov
insb
push
sbb
mov
cmp
xor
call
call
filds
push
daa
cmp
pusha
add
stos
mov
mov
cmp
and
ja
je
xchg
inc
inc
mov
roll
test
popf
push
enter
lret
in
xchg
jb
imul
ret
pop
pusha
cld
popf
dec
mov
cmpsb
xor
fsubl
push
stc
jb
pop
sbb
mov
stos
icebp
aad
lahf
sub
and
or
pop
or
into
iret
ds
xor
cltd
mov
mov
and
fldt
mov
push
or
fcomps
icebp
jno
sbb
add
pushf
xchg
cld
ror
jb
and
sub
mov
not
fs
fcmovnbe
dec
push
nop
subl
or
insb
gs
repz
mov
outsb
icebp
push
push
test
fisttps
shrb
mull
and
pop
popf
sub
out
or
and
fs
mov
scas
jl
mov
scas
nop
mov
mov
or
shlb
in
mov
cmp
das
lcall
or
push
shrl
pushf
xchg
cmpsb
xchg
lahf
pop
and
xor
pop
mov
or
xchg
into
push
int3
subb
push
pop
dec
pop
pop
rcr
loop
jno
and
or
adc
xor
or
pop
fcoml
data16
cmp
test
or
mov
or
or
inc
outsl
jmp
sahf
pushf
shll
push
out
das
jge
adc
dec
inc
and
mov
push
scas
or
inc
outsb
fidivrs
call
mov
mov
sahf
movsb
push
aas
xor
cmpsl
mov
sar
fnstsw
cli
xorl
xchg
cmp
adc
cmp
add
inc
sub
xor
stc
mov
mov
aas
addr16
pop
jbe
xchg
add
sub
mov
movsl
adc
icebp
inc
mov
imul
jp
adc
push
pop
cmc
jb
insl
rcrl
aas
sbb
icebp
aas
popa
mov
in
jne
sbb
sub
sbb
push
insl
adc
jmp
and
add
pop
incb
cli
std
arpl
add
dec
mov
sub
xchg
sbb
lcall
arpl
rorb
mov
mov
add
es
mov
jne
push
js
dec
pop
xchg
popa
pushf
mov
sbb
adc
pop
push
xchg
or
cmp
insb
sbbb
mov
dec
push
jo
int
mov
pop
lds
sub
mov
nop
adc
icebp
loopne
mov
ja
mov
mov
lods
cltd
stos
jl
test
inc
shrb
fldenv
fcoml
add
mov
std
subl
mov
pop
adc
add
lret
sti
rclb
test
in
pop
push
mov
jecxz
jns
in
aam
fldcw
paddb
out
push
dec
iret
adc
sub
out
and
das
inc
push
cwtl
mov
outsb
lret
push
mov
enter
ret
inc
sbb
out
inc
add
or
jg
add
mov
pop
stc
cmp
aaa
cmc
cmpsl
add
stos
imul
out
int3
add
fs
xchg
cmp
les
add
dec
inc
insl
aad
repz
outsl
das
leave
xor
mov
adc
dec
and
and
call
push
stos
and
jmp
cmp
addr16
or
dec
push
push
push
sub
jb
xor
cmp
out
cmp
cmpsb
loop
jo
mov
int
outsb
mov
mov
mov
mov
cmp
mov
aad
mov
mov
mov
mov
in
popa
adcb
sarb
push
aam
stc
or
mov
push
add
xchg
rcrl
jb
sbb
push
stos
imul
or
inc
sub
insb
inc
mov
xor
add
lods
rcrl
mov
frstor
sbb
outsl
inc
loopne
adc
cmpsl
push
mov
xchg
adc
and
je
fidivrl
or
test
push
add
push
faddl
xchg
pop
mov
adc
xor
insb
loop
fdiv
popa
xchg
jns
jl
mov
jg
loope
aad
cltd
mov
rcr
lcall
es
sbb
xlat
xor
add
or
xchg
push
add
lahf
fsubrp
std
pop
dec
fcmovb
xlat
lds
xor
lret
sbb
inc
mov
lret
fmull
daa
mov
mov
test
push
iret
movsl
cmc
inc
scas
sub
push
xchg
fidivrl
lcall
lock
pop
mov
lock
mov
out
js
iret
jne
ficoml
mov
insb
jecxz
in
lea
loop
lcall
sbb
add
outsl
mov
arpl
mov
jb
loope
ror
jae
out
inc
and
xor
inc
pop
fstpl
aam
mov
mov
sub
xchg
lods
insl
sub
movsl
out
sub
out
jo
fldl
pop
aaa
fidivrl
and
bound
sbb
adc
int3
rcrl
mov
cmpsl
jne
jmp
sbb
rorb
push
mov
push
or
popa
mov
push
pop
mov
pop
mov
sub
adc
jl
add
inc
loopne
jnp
inc
insb
lods
mov
pusha
jne
xchg
sub
mov
or
ret
mov
std
scas
sbb
adc
push
sbbl
in
jp
pop
sub
fxam
fmuls
clc
jae
pop
mov
xor
xor
rcr
repz
cwtl
je
push
mov
mov
jp
push
sbb
push
jnp
mov
pop
mov
ljmp
pop
aad
adc
sbb
jp
idivl
push
dec
dec
icebp
test
xchg
testb
mov
add
cmp
or
lahf
lea
push
xor
jecxz
dec
inc
lods
jge
shl
pushf
out
popf
scas
dec
sub
xchg
inc
test
mov
fdivl
imul
and
dec
xchg
lds
and
adc
dec
jo
add
lods
js
fstl
or
sub
out
std
mov
enter
fiadds
je
pop
mov
cmp
ja
dec
add
repnz
fucomip
or
mov
and
sarl
test
adc
movsl
jp
roll
xor
and
data16
pop
imul
push
dec
and
xor
mov
pop
incb
mov
jecxz
das
shl
sub
idivl
mov
iret
push
adc
loopne
or
xlat
movsb
cltd
fisubrl
push
mov
movsb
xor
js
sub
into
cmp
adc
xor
jp
outsl
mov
pushf
mov
ss
sub
pop
jb
dec
arpl
test
mov
fiaddl
lds
stos
push
nop
jns
push
ja
cs
fdivl
or
add
cmc
push
jecxz
mov
mov
xchg
sub
add
and
shrl
cwtl
loope
lea
and
sti
test
aas
mov
ror
pop
jmp
jmp
mov
xchg
cs
mov
rcrb
out
cmpsb
leave
mov
add
cmpsl
in
lret
or
iret
push
inc
add
lret
nop
xor
mov
lea
sbb
aam
cmp
mov
pop
adc
lahf
and
lret
popa
repz
out
sub
adcb
cmpsb
sub
test
nop
jl
adc
inc
in
mov
pop
jmp
aas
aas
dec
shld
int3
cs
pop
lret
pop
ds
shll
les
test
sti
add
fstpt
clc
sti
xor
and
fdivrl
enter
add
jmp
mov
sbb
jge
or
dec
je
pop
imul
in
mov
pop
sub
aaa
cmp
pop
dec
jl
pop
call
aas
or
sti
popf
add
mull
jg
stc
stos
jns
dec
xor
xchg
and
daa
enter
lods
adc
rorl
jb
jns
movsl
add
enter
push
int
inc
sub
in
negl
push
das
xor
out
dec
scas
inc
cmp
rclb
xchg
pop
addr16
cmp
push
mov
mov
repz
mov
lock
ret
aad
fs
xor
ljmp
lea
push
das
in
inc
int3
or
addr16
out
imul
jmp
leave
mov
adc
xchg
cltd
daa
movsb
xchg
mov
xchg
jp
push
lock
mov
push
sub
gs
or
ret
cmp
mov
std
shr
dec
sub
add
push
test
xchg
js
or
xor
cmp
mov
enter
cmpsl
xor
idivb
iret
mov
fdivp
in
push
and
cmp
sbb
sbb
sub
mov
mov
xor
testl
unpcklps
lods
sbb
or
dec
orb
sbb
cs
scas
mov
sub
sbb
sbb
mov
mov
leave
sub
lods
add
sbb
jge
les
pop
test
adc
movsb
cmpsb
adcb
add
dec
or
xor
push
cmc
or
push
jne
adc
es
mov
xchg
jecxz
jmp
loopne
push
jl
pop
rorl
aas
sbb
mov
into
dec
or
fisubrs
dec
in
inc
cmp
inc
enter
mov
dec
dec
mov
jmp
pop
push
rcrb
push
push
icebp
cmc
pop
jbe
popa
minps
sub
bound
inc
dec
loopne
dec
add
mov
shlb
lods
mov
and
adc
lock
insb
mov
fisubs
fisttps
je
pop
gs
fidivrl
clc
xor
pop
push
jle
mov
lock
dec
push
xor
inc
movsb
sbb
stos
jns
xchg
inc
inc
cmp
vrcpps
lret
idiv
out
mov
mov
fbld
mov
xchg
loopne
sub
mov
pushf
test
cmc
sub
push
cmp
and
aas
fldcw
push
mov
out
inc
dec
push
popa
and
sub
xlat
sti
lret
push
call
jnp
test
cmp
mov
inc
xor
int
hlt
dec
lods
daa
adc
ss
aam
sub
add
in
int
bound
fs
aam
leave
dec
lret
dec
pop
imul
add
fs
xor
lods
xchg
cmp
cmp
mov
dec
xor
sub
pop
sbb
pop
push
int3
notb
sahf
jmp
mov
xor
adc
std
stc
mov
inc
mov
orl
mov
test
ljmp
lcall
hlt
jp
fiadds
bound
jb
mov
fs
sbb
clc
std
jg
fmulp
lods
push
inc
outsl
lcall
out
xor
mov
insb
outsb
shl
cltd
mov
insl
mov
mov
arpl
add
pop
and
xchg
lods
jno
pop
push
lahf
xor
inc
into
adc
cmpl
mov
pop
xchg
fbld
xor
ja
mov
pop
pop
adc
jo
push
shll
xlat
adcl
fldcw
cmc
and
test
xor
xchg
inc
dec
imul
rclb
ss
pusha
stos
push
mov
cmp
inc
out
cmp
int3
imul
movsb
pop
sbb
xchg
test
push
or
pop
das
neg
jl
dec
or
sub
push
sbbl
rcrb
mov
movsb
sbb
and
std
pop
outsl
mov
jns
jae
stc
mov
lea
sub
dec
xchg
shr
pop
dec
movsl
xchg
stos
xor
insb
out
push
jne
rcrb
inc
dec
fwait
sar
jge
lret
fcmove
in
je
test
lret
mov
or
shll
jmp
int3
push
loop
int
xchg
andb
cmc
fdivl
mov
out
dec
out
push
cs
inc
outsb
inc
subl
cmc
ficomps
mov
aas
fcmovne
arpl
sbb
out
aaa
leave
xor
pushf
cmp
mov
pushl
adc
repnz
jbe
int
and
lret
inc
jp
push
repz
dec
iret
test
inc
dec
mov
pop
xchg
mov
cli
out
inc
mov
popa
lret
rcr
jne
adc
shlb
movsl
aad
inc
dec
add
jo
or
xchg
movsl
mov
inc
mov
mov
push
std
push
loopne
jmp
rol
in
inc
addr16
adc
mov
cwtl
pop
pop
int
mov
jl
fwait
mov
sbb
cld
pushf
mulb
das
loop
in
sbb
jp
outsl
add
shlb
nop
fdivr
add
adc
xor
jne
jg
repnz
dec
out
sub
mov
cmp
in
mov
mov
sbb
sub
fs
pop
or
sbb
stc
aas
aam
das
add
in
jle
insl
stos
loope
in
sbb
mov
pop
popa
outsb
loope
jno
addr16
jecxz
xchg
nop
das
sub
es
sbb
cmp
mov
stos
or
jnp
out
js
movsl
push
mov
imul
enter
fimuls
cltd
rcll
stc
cwtl
aas
add
mov
insl
inc
sub
daa
push
pop
repnz
cmpsb
leave
mov
jb
lock
sub
out
stos
mov
add
imul
jmp
dec
or
loope
push
hlt
mov
incl
fstpl
or
jmp
cld
pop
scas
pop
xor
dec
out
push
cmpsl
inc
mov
inc
mov
cmp
ja
loopne
sbbl
iret
jae
int3
ss
mov
addb
mov
mov
je
hlt
std
sarb
ror
add
packsswb
mov
and
fcoms
push
mov
loope
out
xchg
rcl
xchg
push
pop
mov
repz
and
cmc
aaa
mov
push
ljmp
ficoms
mov
jns
dec
mov
pop
js
fs
xlat
push
xchg
push
inc
in
xchg
push
jl
jle
fs
cmc
lcall
xchg
add
aaa
dec
fcompl
jecxz
pop
push
ljmp
pop
test
or
fwait
cmpsb
cmp
sahf
lea
call
jl
mov
mov
cs
inc
inc
dec
add
sbbb
cmp
pop
in
sbb
mov
push
lret
in
xor
cwtl
ret
daa
or
test
mov
cmp
andb
push
mov
jle
bound
push
xchg
jnp
push
push
xchg
out
fadds
inc
pop
ret
bound
fidivrl
push
lahf
mov
adc
mov
sub
shr
xchg
or
mov
lea
outsl
dec
adc
mov
nop
push
std
or
sub
shll
test
nop
inc
ljmp
mov
mov
add
ja
mov
inc
cmc
add
test
jmp
add
sbb
mov
movsb
mov
jbe
jmp
hlt
mov
mov
int3
jno
sub
inc
jae
sbb
and
adc
gs
dec
jae
movsb
addr16
sahf
in
and
mov
sahf
aam
push
out
mov
test
lahf
ficoms
arpl
int
decb
cmp
lods
jno
and
lods
das
test
dec
call
xchg
sub
pop
imul
push
mov
mov
jmp
add
xor
insl
push
les
sarl
xchg
stos
mov
ficoml
jbe
pop
pop
rorl
in
jge
adc
mov
fdivs
dec
inc
data16
sub
xchg
xchg
or
push
das
inc
pop
cltd
ja
imul
cmpsl
or
mov
nop
mov
pushf
repnz
sbb
pop
stos
sub
les
xchg
mov
mov
pop
sbb
pop
rol
sti
sub
add
and
sbb
mov
sbb
cmp
rorb
pop
iretw
sbb
int
leave
xchg
inc
xchg
jmp
pop
loop
addr16
mov
int
sbb
iret
xchg
in
xor
fistpll
push
cmpsl
aad
inc
notl
in
mov
sti
cmpsb
mov
repnz
or
fistps
arpl
aaa
dec
adc
in
out
dec
mov
xchg
cmp
xor
pop
mov
mov
inc
stos
lea
repnz
pop
inc
xchg
mov
repnz
fsubrp
or
pop
push
inc
ret
aam
pop
es
or
jp
adc
lods
xchg
imul
mov
ds
addr16
and
sub
leave
mov
stc
shrb
jle
sub
and
sub
push
push
pop
in
loope
cld
xchg
imul
mov
xlat
cwtl
fstps
adc
or
push
popf
sarb
arpl
cmp
jecxz
or
mov
out
arpl
mov
push
stos
and
sub
icebp
mov
mov
pop
test
pop
cli
adc
or
in
sti
push
cmpsb
xchg
call
push
shrb
push
xchg
adc
and
fisubrl
test
dec
inc
sub
jl
push
cmc
rorl
loopne
and
mov
xchg
faddp
in
xor
xchg
lods
add
dec
pop
outsb
mov
in
or
mov
inc
mov
cltd
pop
pop
daa
andl
cltd
pop
inc
push
das
imul
test
mov
sub
adc
fwait
ja
jle
dec
pushf
or
stc
data16
mov
mov
mov
dec
push
loop
lods
push
movsb
jnp,pn
out
pop
or
pop
xor
lea
jae
lds
sbb
mov
jle
lods
es
lret
mov
enter
mov
mov
push
mov
xor
jmp
dec
push
aam
ret
push
fisttps
outsb
or
inc
add
sbb
xor
mov
jns
movsb
dec
push
mov
pop
pushf
push
les
add
notl
rclb
pop
js
movsl
and
inc
fwait
push
sbb
push
sub
aaa
es
xor
xchg
pop
and
and
fsubl
push
loope
pop
frstor
jns
push
cmp
pusha
sbb
scas
xchg
adc
jnp
std
pop
sub
cmpsl
cmpsb
cmpsl
jo
iret
les
mov
movsb
les
lods
mov
jl
ret
repz
fcomip
fwait
cmp
imul
ljmp
sbb
jl
out
jno
add
mov
add
jmp
inc
sub
mov
sarl
out
sbb
stc
es
shl
cmc
mov
or
repnz
or
sbb
push
jmp
push
dec
dec
jae
scas
lods
arpl
mov
mov
pop
int3
inc
jp
sahf
fmuls
jb
mov
inc
sub
pop
and
dec
jmp
and
pop
inc
dec
or
cmpsl
stos
push
add
push
mov
sub
lea
sub
sbb
cmc
sub
andps
pop
xor
js
out
adc
push
cltd
orb
and
cmp
sub
dec
std
mov
xchg
mov
mov
cmp
sub
pop
mov
adc
lahf
xchg
js,pn
outsl
loope
jp
loop
dec
dec
or
sub
mov
adc
dec
hlt
int
mov
lea
sbb
call
push
jnp
xchg
pop
jno
or
mov
sub
sbbl
cmp
or
shll
fldcw
insl
cmp
push
dec
jmp
jle
shlb
inc
xor
inc
in
adc
pop
cltd
sbb
mov
aas
outsl
and
les
das
insl
jbe
int
stc
imul
dec
sahf
mov
inc
scas
push
ret
les
imul
add
add
clc
jle
std
clc
inc
push
sub
call
jge
mov
xor
xor
in
inc
xchg
sti
or
out
lcall
data16
mov
cwtl
fbld
mov
jo
xor
push
fcomps
cld
inc
inc
stos
push
jmp
sub
out
stos
cli
shr
jno
andl
add
and
adc
jno
fldt
push
arpl
decb
dec
mov
insb
push
jne
push
es
or
cli
jno
jecxz
xor
scas
mov
adc
mov
or
das
outsl
mov
test
mov
in
and
xchg
out
dec
int3
push
rcrb
adc
call
mov
pop
in
pop
xorl
and
enter
sub
adc
pop
mov
mov
jl
add
sub
jne
fidivs
mov
and
mov
xor
repz
and
sti
imul
fwait
sub
fistpl
cmc
pusha
push
cmp
jb
push
mov
dec
mov
xor
stos
mov
insb
in
js
das
xchg
std
push
jg
xchg
movsl
jae
cs
cmp
xor
pop
int
fwait
adc
data16
shlb
jg
bound
or
aad
push
aas
dec
cmc
in
pop
add
xor
push
push
xor
andl
aam
repnz
xorb
cmp
les
xchg
orb
ds
mov
mov
test
push
pop
cwtl
xor
lds
xor
dec
inc
imul
sbb
sub
pop
test
fcomi
lea
cmpsb
cmc
pop
loop
jge
xchg
fstps
neg
xchg
or
xchg
and
daa
lods
scas
add
dec
cmc
in
jge
sbb
lods
popa
enter
int3
ret
mov
adcb
fimuls
pushf
movsl
hlt
xor
mov
lds
scas
cmp
dec
lret
adc
fsubrs
mov
push
jle
icebp
sub
mov
lea
rorb
out
insl
insl
sbb
jp
loopne
sub
jg
das
xor
sbb
dec
je
add
pop
out
scas
mov
xchg
mov
mov
jmp
push
mov
mov
nop
dec
xchg
pop
push
add
popa
ja
in
jg
push
adc
mov
mov
aad
std
jge
jecxz
mov
stos
add
jmp
cmp
inc
sub
daa
aaa
and
inc
repz
imul
mov
ljmp
cwtl
out
jle
enter
mulb
and
in
add
scas
arpl
mov
fs
jmp
lea
push
add
mov
pop
fwait
ja
into
test
mov
adcl
jecxz
ljmp
pop
inc
addr16
subl
adc
fstl
jg
sub
inc
xor
fdivrl
test
fildll
sub
mov
addb
mov
scas
scas
pushf
out
or
xchg
xchg
jg
jecxz
js
in
dec
and
and
loope
mov
pop
insb
lahf
ja
lahf
movsl
aad
sbb
cmp
rcrl
pop
add
push
mov
ret
in
lcall
mov
lods
pop
in
std
mov
push
aaa
shlb
es
gs
sub
es
inc
fisubrl
inc
mov
cvtdq2ps
shlb
mov
pop
mov
push
and
mov
incl
nop
leave
in
loop
pushf
push
cmp
mov
outsb
lods
popa
xor
or
mov
add
mov
ja
shrl
inc
or
cwtl
insb
fistps
mov
lahf
pusha
roll
mov
pushf
or
xor
int
dec
les
xchg
jl
sub
in
xor
repz
push
in
dec
push
ret
loope
movsl
cmp
dec
xlat
clc
pop
sub
lods
pop
aad
scas
ret
call
shr
ret
lahf
sbb
jg
sbb
enter
sub
popa
sub
roll
loopne
mov
std
notl
and
fwait
addr16
xor
inc
xor
call
xchg
aam
or
and
cld
or
shll
mov
or
mov
pop
jno
mov
or
inc
pop
rclb
mov
es
jmp
outsl
lock
pushf
pop
jmp
nop
daa
cmp
leave
insb
mov
sbb
mov
pop
jp
aad
xchg
jmp
mov
or
ret
pop
adc
ret
add
nop
push
adc
sbb
mov
dec
ret
adc
pusha
add
fnstsw
inc
adc
not
jno
popf
lahf
inc
inc
push
aas
ret
xor
into
int
mov
pop
mov
pushf
fs
out
test
pop
fstps
add
out
xor
ror
xlat
in
jl
mov
pushf
jp
out
loop
push
out
jp
movsb
xchg
imul
dec
push
jns
cmp
aam
sarl
daa
jle
adc
test
cs
mov
cmpsl
add
into
inc
lock
insl
jbe
aam
cmp
inc
inc
cmp
adc
cmp
and
mov
stos
sbb
aad
psrlw
cmpsb
loope
lcall
adc
sar
lock
mov
xchg
lret
xchg
scas
je
clc
call
xor
push
or
cmpsl
mov
mov
enter
mov
jmp
sahf
push
xchg
add
pop
jb
testb
fildl
mov
test
cmp
dec
shll
les
outsl
jne
lret
xchg
test
or
mov
repz
cmp
mov
daa
call
mov
cmp
out
pop
push
jecxz
in
inc
imul
enter
rorb
ljmp
out
mov
dec
xor
pop
jl
add
insb
push
pop
adc
lds
ss
mov
jno
shll
popf
push
sti
outsl
sbb
mov
dec
scas
mov
and
xchg
cmpsb
arpl
out
aaa
lret
cld
push
adc
adc
fsts
mov
adc
sbb
jb
int3
dec
push
rcll
sarb
jmp
js
or
mov
xor
lds
shr
inc
pushf
mov
aas
repnz
inc
movsb
push
jle
cmp
mov
addr16
out
int3
inc
mov
les
rcr
xchg
and
or
mov
lds
icebp
inc
fcmove
cmc
or
out
pop
loop
push
cs
lret
movsl
leave
lock
mov
mov
inc
add
inc
adc
adc
sbb
xor
repz
fdivrs
mov
data16
mov
jg
jae
cmp
add
pushf
mov
test
ret
add
test
push
lcall
lretw
jmp
jmp
mov
sub
es
mov
loope
sub
xor
call
sub
sub
xor
stos
jmp
lods
or
and
lret
imul
jnp
insb
xchg
add
pop
repnz
jecxz
mov
fcmovu
push
sti
les
pop
in
ret
xor
addb
ljmp
fs
sarb
pop
xchg
and
mov
shrl
inc
loopne
xchg
test
jp
jecxz
jle
mov
add
shll
fists
push
mov
fildll
movsb
popf
push
adc
pop
test
leave
sub
push
cmp
hlt
dec
xchg
fstpt
orl
leave
fadds
enter
loopne
inc
icebp
mov
sbb
jnp
mov
mov
imul
ds
mov
into
repnz
clc
scas
sbb
jmp
js
fwait
inc
sti
cld
jl
loope
push
fcoms
pop
jnp
pop
add
or
mov
push
mov
push
add
aam
out
jge
mov
pop
ss
mulb
jle
add
or
in
jo
ljmp
inc
dec
xchg
loop
mov
in
mov
shlb
push
add
es
inc
test
adc
cmpsb
movsb
arpl
movsl
pop
mov
sub
test
mov
xor
or
add
js
hlt
cmp
xor
sarb
xchg
mov
inc
adc
jo
xchg
popf
ljmp
out
pop
pop
adc
maxps
cli
repnz
jle
mul
jne
mov
stos
or
dec
mov
pop
cwtl
les
clc
ljmp
in
xor
pop
adc
add
mov
jp
icebp
sahf
mov
dec
das
jmp
sar
xchg
sti
add
in
lods
lds
ret
test
stos
mov
push
int3
mov
icebp
pop
jle
pop
notb
push
mov
or
enter
cs
ficomps
mov
scas
aad
sub
pop
pop
and
push
outsb
cwtl
es
dec
cmp
cmp
pop
push
std
lods
inc
leave
imul
xor
cmp
lcall
xlat
clc
jmp
sti
or
add
adc
and
xorl
mov
outsl
push
adc
push
filds
dec
mov
fcomp
inc
call
push
das
xor
pop
punpckhbw
pusha
pop
sub
dec
xchg
fildll
jmp
mov
mov
cld
insb
popf
icebp
cltd
adc
lods
jge
std
and
xchg
adc
bnd
sub
pop
js
stos
scas
cmp
sbb
fdivrs
adc
jle
movsl
lret
or
xor
push
test
sub
mov
cmpsl
jne
mov
rorb
popf
aad
loop
inc
rorl
mov
lock
aad
mov
outsb
add
cmp
andb
icebp
or
add
and
sti
clc
in
inc
pop
in
loop
std
fs
mov
mov
mov
fsubs
adc
jmp
xor
popf
inc
mov
cmp
dec
jle
jl
out
jmp
stc
cmp
out
sub
insl
mov
jg
imul
cmpsb
push
movsb
mov
push
ds
pop
dec
movsb
sub
push
and
mov
mov
mov
lahf
xchg
pop
clc
mov
xchg
sub
add
cltd
stos
xor
sarb
and
adc
xchg
leave
jp
lret
adc
mov
fstl
lds
xchg
loopne
and
xor
pop
adc
lret
and
out
push
mov
pop
clc
fucomip
dec
or
out
mov
add
fistpl
imul
roll
pop
fs
aam
pop
push
cmp
iret
mov
sti
pop
leave
adc
jmp
fidivrs
mov
movl
inc
ret
sbb
sbb
leave
nop
jo
lock
and
fdivp
jge
cwtl
outsb
inc
enter
mov
in
jno
sahf
cmp
pop
mov
sbb
jb
into
aaa
je
orl
lret
inc
fidivl
mov
dec
iret
mov
and
push
enter
and
pop
sub
cmp
mov
jne
cli
mov
or
orb
mov
and
out
inc
adc
push
je
xchg
jecxz
cmp
jno
loop
test
imull
mov
stc
dec
icebp
inc
icebp
push
or
adc
addr16
lcall
sbb
movb
lock
fdivr
lahf
data16
outsl
jb
add
jmp
cmp
dec
jecxz
test
xor
cld
ja
dec
push
and
mov
inc
jge
fwait
ss
mov
fucomip
inc
enter
stc
int3
and
xor
adc
mov
sbb
lods
push
cli
xor
out
sub
push
or
xchg
decb
xchg
push
mov
rep
jbe
sub
pop
xchg
push
jle
sarb
out
dec
shll
clc
cli
mov
adcb
ljmp
inc
push
jle
aad
mov
jge
push
mov
xchg
mov
bound
pop
and
and
aas
addr16
fisttpl
jg
mov
xor
xor
scas
push
jns
xor
dec
sahf
es
sbb
or
jg
addr16
inc
jle
aad
arpl
mov
jmp
sbb
mov
ret
das
mov
sbb
movsb
ret
mov
pop
cmp
pop
inc
cmpsl
inc
into
or
shl
push
insb
arpl
pop
outsl
lds
mov
pop
xor
pop
and
pop
mov
and
rclb
and
inc
sub
adc
ja
mov
outsb
je
andl
ret
push
mov
dec
sbb
sub
mov
add
nop
in
push
pop
pop
sub
xor
pop
cs
fsubrl
jo
mov
addr16
sub
arpl
pop
lds
cmc
cwtl
dec
push
out
daa
es
inc
fbstp
adc
or
movb
hlt
leave
push
cwtl
ret
repnz
inc
prefetch
mov
daa
insb
lahf
dec
icebp
lods
lea
loopne
xor
fcomp
mov
lcall
lret
scas
in
out
pop
lcall
es
push
testb
mov
jo
cmp
inc
inc
add
mov
leave
loopne
mov
push
mov
jo
and
mov
and
mov
cmp
pop
out
sub
pop
adc
loopne
into
fistpl
aaa
movsb
mov
pop
nop
imul
or
es
loopne
push
loope
pop
or
lcall
gs
popa
adc
jnp
test
shlb
fldl
fs
idiv
hlt
gs
cmpsb
ljmp
mov
and
or
mov
lcall
addr16
lcall
mov
push
inc
jmp
fnstcw
dec
ret
addr16
push
jg
jo
add
push
sub
add
popa
dec
inc
xorb
rcrl
insb
jns
jecxz
fwait
outsb
aam
ret
fldenv
xchg
out
adc
gs
xchg
push
loopne
push
hlt
shl
and
test
xchg
fwait
sbb
pop
sub
push
filds
push
inc
iret
or
pusha
pop
test
jnp
int3
insl
scas
jbe
loop
mov
or
jne
push
jne
shrl
std
cmp
dec
jbe
in
adc
mov
cmp
fs
push
call
cmpl
sbbl
ret
and
pusha
dec
cwtl
fistpll
push
mov
mov
mov
lret
mov
cltd
rcll
sbb
sub
jp
imul
jmp
daa
push
and
fmuls
mov
inc
imul
aas
movaps
sti
cwtl
ja
cmpsl
push
imul
cmc
out
mov
jmp
cmp
fnsave
fcomps
inc
pop
push
int
adc
adc
dec
cmp
mov
jbe
or
mov
add
sub
hlt
popa
push
mov
jg
sub
iret
idivl
pop
stos
mov
fildl
lret
or
movsl
mov
arpl
push
mov
sbb
jae
imul
test
push
add
xor
add
and
add
dec
cmp
jns
adc
dec
adc
fwait
je
cmpsl
xlat
sti
adc
mov
les
inc
insl
pusha
xchg
cld
dec
ja
dec
xor
in
stc
outsb
xchg
mov
jle
filds
jne
nop
add
cmovl
in
adcb
and
jno
pop
dec
inc
ljmp
add
inc
mov
data16
shrb
fsubl
shll
push
push
jle
nop
loop
xor
and
xor
mov
sub
out
or
pushf
xor
mov
jb
and
and
mov
hlt
negb
fisubs
ret
sahf
or
or
in
push
lock
xchg
fldt
scas
jno
push
mov
sbb
pop
frstor
jnp
stos
pop
mov
mov
test
mov
cmpsb
push
or
enter
jb
arpl
cmp
dec
sub
sub
mov
imul
rcll
leave
mov
ret
sbb
testb
shrb
pop
mov
jge
add
out
mov
das
filds
pop
pop
add
clc
lea
mov
mov
ret
and
xchg
cld
or
or
inc
cmc
mov
push
and
sbb
rorl
cmp
jae
gs
pop
cmovb
hlt
push
sub
lret
bound
mov
mov
xchg
inc
mov
mov
lahf
stos
out
scas
inc
push
inc
jb
inc
dec
test
cmp
mov
ljmp
adc
mov
ljmp
test
mov
xlat
sub
cwtl
clc
xor
jg
jae
pop
popa
sarb
inc
pop
mov
mov
stos
sahf
mov
mov
stos
inc
xchg
lea
ljmp
sub
jbe
nop
outsb
add
pop
in
sub
andb
mov
cltd
mov
ds
loopne
in
cmp
lods
and
js
sbb
xor
or
push
mov
aas
ss
outsb
adcl
and
fnstcw
jle
add
es
sbb
adc
rcrl
sahf
cltd
std
cmp
xchg
les
out
or
mov
iret
shlb
fimuls
cmp
add
push
fldcw
lods
movsl
dec
push
inc
ficoml
push
mov
xchg
scas
add
xor
hlt
cmpb
sti
add
dec
or
movsb
inc
lcall
xor
pop
stc
ret
push
adc
dec
rorb
iret
push
adc
and
lods
loopne
jb
cmp
xchg
push
pusha
cmp
xchg
sbb
enter
mov
rolb
lahf
sbb
iret
inc
ss
int
rorl
bound
mov
out
int
pop
cmp
clc
mov
cmc
mov
jne
and
sbb
out
loope
adc
addr16
or
add
xchg
call
fistpll
shrl
xchg
sarl
cmpsb
scas
and
je
scas
mov
or
dec
adc
jp
outsb
mov
cmpsb
repz
push
jmp
rorl
les
loop
ret
jmp
outsb
lock
test
push
fdivrs
push
arpl
jle
test
push
xchg
push
xchg
out
push
xchg
mov
scas
repnz
inc
mov
in
loop
push
cmp
imull
xor
hlt
xor
lea
xor
cmpsb
lahf
mov
push
xor
jle
daa
fnstenv
adc
mov
daa
enter
mov
adc
mov
dec
enter
pop
mov
imul
or
out
lahf
pop
add
lock
cmpsl
cmp
ret
dec
sbb
pop
pop
sbb
sub
lock
xchg
into
xor
call
loopne
jns
jecxz
lds
inc
jns
rclb
pop
mov
mov
pop
mov
jno
outsb
ja
enter
lds
mov
aam
sub
mov
out
decl
dec
fists
sbb
movsl
push
pop
shll
lock
pusha
mov
mov
dec
fcompl
push
mov
xchg
lock
mov
push
aas
lock
test
or
arpl
aaa
push
xor
or
ja
adc
ljmp
std
mov
mov
xor
loop
jp
jle
pusha
scas
sbbl
push
es
add
mov
xchg
cmpsl
loopne
fadd
jge
or
jl
sbbb
dec
mov
int
dec
arpl
pop
pop
jle
adcb
jns
loope
xchg
rcl
cmp
sbb
lock
jne
mov
push
mov
cmpsb
adc
je
sub
aad
dec
scas
mov
ss
scas
in
lods
pop
clc
andb
lods
push
idiv
xor
std
sbb
jnp
rcl
xor
adc
mov
fbld
lock
cmp
or
cmp
andb
rcr
adc
je
shl
sub
adcl
push
add
mov
inc
xor
fcoml
pop
loope
insl
add
stos
inc
in
push
mov
mov
push
sub
iret
sbb
stc
jp
and
add
cmpsb
sub
xor
xlat
add
mov
pop
adc
pop
lea
das
push
xor
xchg
mov
imul
or
test
cwtl
pop
sbb
jmp
push
shr
push
ficoml
mov
mov
test
pop
mov
in
movsl
or
fidivrl
add
add
xor
std
in
in
arpl
jb
fs
mov
sub
shrl
mov
cli
clc
lods
fstl
das
jmp
lret
rolb
cwtl
aad
shll
popa
or
mov
test
std
mov
mov
enter
pop
adc
addr16
lea
aaa
add
xchg
add
push
sarb
andb
nop
xor
out
cmpsl
cmp
cmc
negl
repnz
xchg
sti
inc
mov
push
iret
out
jmp
adcb
sub
test
sbb
push
dec
das
mov
sub
jg
mov
push
sub
adcl
pop
lods
inc
loop
loopne
mov
mov
mov
jae
dec
das
mov
sti
addr16
or
jae
out
aaa
xlat
mov
dec
and
repnz
insl
dec
jnp
std
pop
pop
loope
insl
push
sub
sarb
mov
inc
add
jg
clc
movnti
xacquire
or
rcr
mov
jle
dec
sbb
nop
or
mov
nop
incb
and
out
mov
mov
ret
dec
xchg
jecxz
mov
aad
imul
cmp
jae
or
xorb
cmp
in
dec
dec
push
in
lea
pop
leave
mov
je
or
cmp
daa
dec
test
mov
xor
jg
and
or
mov
xor
repnz
and
out
notl
pop
jp
sbb
mov
jb
mov
test
aas
adcb
call
sbb
mov
adc
bound
into
das
shl
aam
dec
icebp
in
lock
in
sti
adc
fs
es
or
cmpsl
mov
stos
adc
mov
frstor
rcrb
in
out
fidivl
popa
pop
jecxz
fidivs
fwait
push
push
mov
out
cli
loop
shl
push
fldt
fisttpl
inc
inc
add
mov
jg
or
lods
add
mov
cltd
fimull
pusha
push
int3
out
fnstcw
cmp
mov
push
sahf
pinsrw
adc
sahf
fwait
andb
push
xor
fs
inc
int
mov
imul
mov
imul
cmc
cli
xchg
jbe
jg
popf
push
push
pop
testl
daa
or
ss
jo
lock
shll
imul
fdivl
shrb
and
aad
inc
or
lcall
jmp
pop
push
cltd
lret
ficomps
test
rclb
popl
jns
push
xchg
cs
nop
and
stos
add
fldenv
arpl
aad
je
xchg
hlt
pop
int3
pusha
sub
orb
popa
mov
lods
xchg
iret
jns
call
imul
ss
xchg
int
loope
xor
xchg
mov
cli
fsubrl
xchg
scas
cmpsb
inc
mov
xchg
jbe
xchg
mov
in
sub
ret
fcoms
repnz
sub
movsb
fimuls
dec
pop
test
cltd
test
shrl
jo
inc
icebp
imul
loope,pn
shrb
and
cli
daa
jge
pop
and
scas
pop
pop
cmp
test
push
inc
mov
mov
mov
jl
outsb
aam
rol
out
clc
cmp
xor
fsubrl
pop
dec
pop
aas
lds
cmp
xor
fistpll
push
dec
jp
pop
aad
mov
mov
popf
mov
ljmp
fiadds
sub
add
lret
sbb
test
or
cmpsl
add
es
insb
mov
lret
mov
mov
repnz
int
daa
sub
xorl
arpl
lcall
lahf
loope
pop
adc
jecxz
sbb
mov
pop
pop
call
jge
pop
mov
adc
push
fdivs
pop
xchg
icebp
dec
loope
mov
xchg
dec
rorb
lcall
lea
inc
loopne
stc
and
pop
adc
lods
mov
pop
mov
xchg
jns
mov
or
or
push
or
cmp
in
xor
cmc
in
and
jae
sbb
popf
insl
sbb
or
sub
test
ret
shlb
mov
cmpsb
bnd
lahf
sbb
pusha
jp
push
aaa
movsb
or
into
mov
mov
jecxz
or
xchg
pop
lock
jnp
ds
or
repnz
mov
movsb
imull
add
pop
dec
pusha
fisubrs
jp
les
xchg
je
mov
mov
mov
fbld
clc
iret
mov
sbb
mov
sbb
insb
pop
bnd
mov
push
sar
cmp
dec
test
mov
into
aaa
jle
out
xor
lods
dec
andl
adc
push
inc
sti
inc
fst
rcll
outsl
dec
sub
dec
dec
test
mov
cmc
dec
popf
xchg
bound
in
mov
enter
cmp
cmp
inc
xchg
push
data16
sti
fs
mov
push
add
inc
or
xorl
mov
daa
pop
xlat
mov
add
and
push
mov
mov
or
pop
mov
push
out
mov
rcll
xor
loop
rorl
lods
xor
hlt
push
sub
aad
sbb
jo
jb
push
fidivrs
js
sub
in
push
xor
push
sub
push
xchg
sbb
loopne
mov
in
shlb
mov
lock
test
ja
mov
sti
inc
mov
xchg
push
imul
inc
out
mov
jo
stc
push
out
and
cwtl
add
mov
ss
dec
test
mov
out
fistps
cli
cmp
js
aam
jle
int
mov
xchg
lcall
xor
mov
call
xor
lret
mov
and
stos
push
jg
mov
lret
mov
imul
fs
add
addb
mov
arpl
test
and
add
movsl
mov
mov
stos
mov
addr16
add
mov
mov
std
jle
sbb
mov
adc
push
cs
xor
arpl
insb
pusha
inc
or
rcrl
shlb
int3
inc
xor
cmpsb
jb
aam
mov
setp
out
or
jle
stos
int
dec
xor
cli
cmp
sub
cmp
sub
xchg
xor
or
mov
mov
mov
cmc
daa
aas
dec
mov
pop
mov
xrstors
js
sub
jb
jl
lods
icebp
sbb
mov
imul
ror
lcall
cs
lods
fstps
inc
and
mov
and
test
jns
pop
scas
out
sbb
dec
sbb
sti
lahf
ret
pop
or
lahf
dec
fs
pop
iret
daa
nop
loop
mov
shrl
icebp
ljmp
or
cmp
lock
ficoms
sbb
sbb
mov
ss
in
or
xor
bound
test
push
mov
mov
insb
lret
xor
jge
xlat
jl
inc
mov
aas
sti
testl
sarb
dec
jo
push
lea
cmp
aad
lahf
mov
push
jle
or
std
mov
mov
in
xchg
or
cli
into
scas
or
or
addr16
data16
cltd
dec
jae
aas
add
or
jbe
es
jnp
mov
lods
mov
sbb
pop
mov
sub
fdivrl
dec
mov
stc
fucom
xor
pop
and
push
dec
dec
adc
sub
lock
jg
aas
push
int3
test
inc
out
add
orl
cmpsb
lods
cmp
insl
inc
ja
divl
dec
icebp
lds
addr16
push
dec
jno
push
xchg
push
xchg
cmp
cmpsb
popa
mov
pop
lock
cmpsl
mov
lea
jo
push
cmpsl
jbe
aas
push
andl
out
mov
mov
or
mov
cli
repnz
call
inc
aaa
inc
inc
fiaddl
mov
bnd
test
dec
sbb
cmp
das
inc
cmp
jne
stos
push
pop
lock
or
cld
sub
mov
in
push
sarb
pop
movl
shrl
imul
adc
xor
icebp
jne
xchg
and
psubq
push
add
xor
cmp
cli
adc
lret
adc
inc
mov
jns
dec
arpl
cli
jp
mov
adc
rep
cmp
jle,pn
xchg
dec
push
in
fwait
jb
adc
mov
inc
aam
cmp
fcomip
cld
call
cmp
add
sti
inc
out
cmp
mov
clc
inc
shlb
cmpsb
mov
sub
fwait
mov
subb
mov
loopne
push
dec
fcomi
mov
adc
push
adc
xchg
push
mov
push
dec
lods
scas
jne
fcmovu
cmp
loop
inc
std
and
sbb
cmpsl
out
lods
dec
gs
mov
push
lret
inc
push
push
push
std
push
mov
mov
mov
sbb
std
push
bound
sbb
and
mov
add
rorl
push
dec
inc
lods
stos
mov
scas
incb
push
sbb
mov
addl
sub
into
notb
jge
dec
call
cmp
xor
popa
jl
mov
mov
cwtl
add
inc
xor
xchg
test
dec
mov
mov
cli
scas
shl
add
stos
inc
call
xchg
push
pushf
dec
fidivl
fiadds
sbb
mov
mov
xchg
fwait
sbb
mov
xchg
stos
test
icebp
fwait
pop
xchg
dec
roll
jecxz
mov
pop
dec
and
movsb
xchg
xchg
lahf
insb
mov
stos
jg
in
mov
aad
or
jb
cmp
iret
cmpsl
scas
in
add
mov
pusha
les
adc
loope
push
add
enter
mov
adc
push
add
jl
sbb
dec
test
mov
clc
jp
icebp
movsb
fldenv
mov
jae
call
and
xchg
add
adc
push
cmc
dec
xor
push
fsubrs
xor
call
ror
insl
add
push
push
xchg
and
popl
add
push
inc
dec
dec
jno
fdivr
ret
mov
and
mov
test
jle
xor
mov
popa
das
and
or
and
cwtl
scas
call
pop
jmp
cmpsb
xchg
int
icebp
adc
ss
rcrl
dec
sbbb
out
mov
iret
pop
jne
cmpsb
add
mov
jnp
push
imul
je
push
add
xchg
inc
pop
mov
and
lea
pop
lods
sahf
ficomps
out
mov
std
pop
xchg
jns
xorb
dec
cmc
mov
push
mov
xchg
cs
adcl
cmovno
xchg
xchg
sahf
dec
mov
cli
ret
lods
push
mov
mov
mov
xchg
add
mov
ss
fidivl
mov
xchg
insb
fmull
aaa
outsl
mov
std
and
pushf
xchg
sbb
loopne
lock
sub
stc
mov
mov
mov
js
mov
sub
inc
incb
or
aad
std
adc
pop
imul
cmc
ljmp
subb
stc
cmp
les
scas
xor
movb
adc
out
ret
jp
outsb
mov
mov
data16
mov
clc
add
imul
lods
leave
int3
jp
cmp
adc
dec
movsl
pop
dec
xchg
xchg
jbe
into
stc
lret
sti
das
and
jb
add
lea
shll
fwait
or
test
pushf
jecxz
mov
out
pop
push
adc
int3
push
js,pt
int3
pop
shlb
push
pop
push
mov
mov
push
mov
mov
mov
xorl
dec
int
cmp
xlat
nop
mov
adc
jmp
push
or
ja
lahf
outsb
icebp
out
sub
lods
enter
sti
push
clc
sbb
fwait
cmp
sub
xor
sti
push
and
cmp
add
in
mov
cmp
xchg
pushf
xchg
xor
mov
adc
ret
jne
sbb
int3
shll
mov
jo
mov
fsub
pushf
adc
pop
fld
jo
movsl
loopne
pop
out
cmpsl
mov
xor
popf
xor
xchg
lods
cli
aaa
pop
mov
or
push
out
out
cwtl
cltd
add
or
push
adc
mov
sub
test
and
dec
aam
jne
pextrw
inc
int
mov
adc
gs
pop
or
or
arpl
daa
jmp
cmp
add
push
add
jae
stos
sub
or
jbe
scas
test
sbb
jne
insl
leave
movsl
sbb
add
dec
xchg
sti
push
notl
shll
cmp
out
push
sub
orl
and
mov
and
sbb
test
cmp
inc
shlb
mov
cmp
xchg
in
cwtl
insb
xchg
fildl
popa
mov
mov
outsb
insl
das
loop,pn
loopne
jns
mov
xchg
shr
fmuls
inc
jg
lods
push
and
repz
int3
mov
lea
inc
jmp
dec
fnstenv
push
mov
sbb
jecxz
insb
jge
mov
negb
fimuls
sbb
xor
mov
adc
outsb
andl
in
jno
lret
xor
incl
insb
and
mov
cmp
and
jecxz
push
adcb
add
das
mov
inc
inc
and
dec
jg
xor
add
jnp
cmp
xor
loopne
call
jg
imul
rcll
into
fstpl
movsb
xchg
pop
es
push
mov
out
xor
xor
outsb
cmp
cmpsb
mov
push
mov
lcall
mov
ds
inc
pop
das
leave
stos
jp
or
cwtl
loope
aam
icebp
or
in
inc
out
jns
pop
add
sbb
ds
ds
sbb
test
adc
ja
daa
ja
test
in
and
repnz
pusha
stc
jle
dec
inc
fnstenv
fisubrs
and
or
push
jmp
and
xchg
xor
mov
mov
add
fildll
xor
dec
sub
xor
inc
xor
fwait
inc
lret
fwait
xor
pusha
leave
push
pusha
mov
movsb
je
xor
je
xchg
dec
subl
pop
adc
push
inc
inc
mov
or
addr16
mov
sub
mov
inc
out
mov
or
adc
jae
adc
sub
sub
stos
xchg
sbb
cs
lods
mov
scas
mov
fistps
jne
jns
insl
pop
xchg
or
push
xor
leave
push
ja
xchg
clc
xchg
add
in
bound
adc
pop
pop
ljmp
jb
orb
popa
fidivrs
test
stos
ja
xchg
mov
or
xlat
jl
sarl
mov
popf
aad
mov
or
lods
mov
je
xchg
xchg
fcoml
add
dec
xor
bound
cs
inc
shll
adc
call
popf
xor
or
shlb
jae
movsb
mov
jl
adc
enter
xor
test
std
dec
imul
jo
lods
shlb
xchg
xchg
mov
and
cmc
pusha
pusha
lds
sbb
xor
fldenv
ret
pop
sub
mov
and
and
lods
in
dec
lret
mov
test
add
mov
insb
in
sub
add
sbb
cmp
addb
sbb
xor
jbe
arpl
notb
or
and
ljmp
stos
int3
in
fildl
imul
xchg
das
mov
imull
adc
lods
repz
adc
popf
cmpsb
adc
scas
rcll
cmc
loope
jmp
outsl
ja
pop
push
outsb
subb
xchg
aaa
cld
or
sbb
int3
pop
les
pop
cld
aas
cmpsl
mov
jnp
mov
enter
mov
das
movsb
adc
or
fld
pusha
clc
loope
xchg
stos
fldl2t
popf
cmp
mov
xor
mov
lahf
aad
repnz
push
push
dec
or
popa
cmp
out
jecxz
iret
sub
loop
adc
in
ds
js
bound
addb
push
popf
push
add
das
aaa
insl
inc
jmp
xchg
mov
or
adc
push
sbb
push
cmp
sbb
fildll
or
inc
or
pop
cld
push
fistl
add
leave
jmp
sbb
push
mov
das
pop
inc
in
scas
cltd
sti
ret
jl
stc
js
imul
add
shrb
and
divl
sti
cmp
in
call
inc
out
stos
cmpl
mov
leave
and
push
decl
arpl
pop
std
push
cmp
ret
inc
ret
lcall
push
xchg
bound
ret
push
push
or
in
fcoml
insl
jecxz
ja
mov
mov
dec
push
pushf
push
out
or
imul
mov
add
pop
push
mov
jno
gs
and
data16
xor
adc
xorl
dec
jno
sub
cmp
pop
sbb
add
cwtl
fimuls
adc
add
inc
inc
mov
subl
xor
xchg
fs
repz
fwait
xchg
cld
mov
or
dec
clc
jg
sub
or
jbe
add
fidivrs
stc
lcall
shl
or
push
fwait
cwtl
sub
inc
push
test
test
dec
adc
fwait
scas
call
xchg
mov
lds
dec
aad
xor
sbb
sbb
scas
ror
imul
mov
xchg
int
cmpsb
pop
mov
fwait
push
inc
mov
jbe
movsl
adc
mov
xor
mov
xchg
scas
push
xchg
xchg
sbbl
sbb
fstpt
push
xchg
pop
jmp
pop
test
jp
mov
push
pop
mov
inc
cmc
rcll
outsb
and
pop
movsl
outsb
jle
enter
jmp
jae
aam
or
hlt
and
mov
popf
pop
sbb
int3
xor
cmc
test
sub
fstl
push
cmpsb
loop
inc
lods
in
add
push
les
xchg
jo
fisubrl
xor
dec
push
mov
jns
xchg
mov
mov
sub
mov
push
adc
and
fdivl
sub
dec
sub
xor
push
push
xor
or
push
add
lds
sahf
jmp
stc
mov
cmpsl
dec
pop
mov
dec
stos
cmp
cmp
mov
pop
fwait
paddq
jle
ljmp
aas
pop
movsb
leave
dec
xchg
xor
pop
out
lret
push
push
jg
cmp
jns
mov
cmpsl
xor
ja
add
dec
jae
xchg
lret
jno
mov
loope
ljmp
adc
ret
sub
aam
xchg
mov
fisubs
shl
cmp
pop
inc
mov
lea
xor
lock
xchg
xchg
rcll
jg
and
or
and
mov
mov
push
jecxz
ja
xchg
jno
and
xchg
inc
enter
cwtl
aad
pusha
add
mov
pop
mov
jne
mov
cwtl
or
aas
sub
push
in
int
mov
dec
mov
cmp
imul
dec
cltd
in
jnp
fwait
mov
daa
xchg
jns
or
shlb
sub
sbb
cmpsl
lret
cmp
add
push
jmp
call
xchg
adc
lahf
cmc
jo
pusha
jo
xchg
cmp
jmp
fwait
cwtl
scas
ret
insb
sub
sarb
xor
pop
jns
addr16
aas
adcb
rcr
push
sub
push
rolb
inc
xor
sbb
cmp
imulb
pop
fldl
je
pop
mov
daa
mov
push
in
adc
sub
lea
cmp
adc
ss
push
jae
subb
call
sub
lods
mov
mov
and
movsl
jne
lahf
enter
pusha
push
scas
sbb
repz
shrl
or
mov
xor
jge
xchg
scas
clc
or
mov
jnp
dec
out
scas
push
enter
icebp
inc
out
pop
mov
ret
pop
fbld
aas
rclb
out
and
mov
ja
sahf
movsl
jp
stos
push
mov
movsl
outsl
popa
pop
xor
cwtl
rcrl
sbbl
sahf
adc
jmp
inc
subl
pusha
or
out
mov
insl
xchg
icebp
fwait
adc
push
add
jp
dec
mov
bound
sbb
mov
push
bound
cmp
in
push
jge
stos
and
cmc
xor
ljmp
test
fcoms
jecxz
ret
add
and
cmp
add
jno
jl
sub
sub
addr16
add
je
je
xor
mov
push
sub
je
movsb
ret
icebp
pop
push
subl
jne
pop
push
rol
scas
sub
mov
ret
idivb
sbb
out
movsb
cmp
mov
xchg
popa
insl
mov
and
cli
pop
ljmp
cld
pop
into
or
mov
repnz
lahf
pop
mov
adc
cmp
mov
xchg
outsl
adc
mov
popf
arpl
push
scas
mov
cmp
push
xor
push
mov
cs
cld
inc
sbb
push
shr
imul
insb
scas
int
adc
test
lahf
pushf
inc
cli
and
into
or
jne
inc
mov
test
or
hlt
push
xchg
test
dec
cmp
jge
movsl
lods
inc
xchg
inc
insb
inc
dec
add
rolb
inc
push
test
inc
out
pop
leave
hlt
out
outsb
sti
ds
sub
mov
stos
addr16
and
dec
cmp
std
orb
psubusw
cmp
das
sarb
pop
mov
and
jb
jle
push
xchg
cmc
loope
leave
imul
push
xchg
push
jbe
int
outsl
fistps
cltd
in
add
rorl
stos
dec
dec
clc
inc
insl
je
cli
arpl
jb
push
addr16
and
xchg
fwait
adc
xor
scas
inc
shl
and
movsb
imul
push
xor
push
xchg
and
arpl
jae
cmp
cmpsl
dec
gs
dec
push
mov
mov
dec
stc
push
sbb
mov
inc
jns
sbb
xor
rcrl
mov
sub
out
and
stos
call
loopne
sub
int
cmp
in
xor
bound
enter
adc
lahf
xchg
pop
push
in
test
and
dec
jp
sahf
bound
xor
pop
and
cltd
xchg
xchg
xchg
nop
cmpsl
stos
and
push
imul
aas
lret
jno
inc
cmp
cmp
cs
pop
xchg
sti
int
dec
lahf
cmp
and
jbe
lods
fwait
add
sbb
lods
push
out
sub
push
pop
push
jnp
addr16
inc
and
inc
mov
ret
inc
stos
loopne
out
gs
js
push
sub
loopne
mov
or
adc
push
imulb
int
or
adc
jae
outsb
loopne
jl
sub
jmp
mov
cli
sbb
lea
jno
popf
movsl
sarl
out
push
cmpsl
testb
cltd
push
daa
loope
filds
jmp
stos
xchg
dec
xchg
rolb
xchg
pop
jbe
xchg
cmpsb
jb
int
cltd
sbb
dec
and
in
fisubs
in
addr16
lds
inc
shll
imul
add
lret
adc
mov
sahf
xchg
mov
fnstsw
jp
out
pop
into
mov
push
ret
sahf
mov
ret
jg
mull
std
adc
outsb
ret
push
dec
mov
push
daa
das
cmpb
shrl
std
cwtl
mov
xor
mov
xchg
aaa
inc
outsl
xor
stc
test
push
icebp
sbb
dec
lret
cmp
push
mov
inc
nop
int3
xor
das
cmc
ljmp
repz
and
popf
out
push
and
add
mov
inc
inc
popf
fistpll
in
lcall
adc
jle
aaa
dec
cwtl
jp
ljmp
xchg
xor
cmp
testl
mov
sub
shll
dec
je
mov
popa
hlt
orl
pop
mov
aaa
sub
jge
insl
stc
pusha
xchg
cmp
cwtl
push
xor
gs
push
les
sbb
cld
jl
arpl
sub
loopne
pop
lret
jmp
in
movb
mov
sarb
inc
xor
jmp
fs
xor
sub
jle
lods
icebp
daa
rclb
push
frstor
faddl
mov
sub
pushf
shrb
cmpsl
cmc
mov
lods
push
sub
loopne
mov
outsb
inc
emms
and
push
cmp
ds
push
dec
mov
dec
mov
jg
mov
or
sub
stc
data16
arpl
mov
add
inc
fwait
push
outsl
and
lods
call
xchg
xor
icebp
push
cmpl
dec
push
push
cmpsb
outsb
shrb
lds
jae
adc
addr16
jg
cmpsl
loopne
lret
movsl
and
sub
push
shl
lods
xchg
stos
lods
loope
int
outsl
aas
movsb
fdivrl
push
or
inc
pop
fnstsw
xor
or
add
jge
fwait
jle
mov
addr16
sub
testl
repz
mov
add
pop
sbb
adc
xchg
mov
inc
inc
popf
xor
ja
gs
out
int
adc
push
mov
and
dec
mov
push
jnp
out
mov
into
aam
inc
sub
movsl
mov
sbb
and
inc
jl
and
fisttpll
mov
jmp
ljmp
xchg
mov
cmpl
pop
dec
clc
enter
cmp
lahf
push
fwait
leave
xlat
jno
aad
xor
adc
mov
xchg
fs
in
mov
outsl
pushf
dec
add
aad
sub
push
jl
sbb
sub
ret
imul
mov
push
jp
sahf
add
xor
dec
loope
js
push
jae
lds
xor
repnz
mov
test
lahf
or
cmpb
adc
fisttpl
out
mov
inc
stos
mov
inc
repnz
jb
pop
sbb
and
pop
cmp
outsl
loop
lcall
mov
cmpsl
sbb
icebp
mov
push
sbb
jp
in
fimuls
dec
lcall
or
es
scas
jecxz
daa
add
cmp
xchg
xchg
test
lods
pop
ja
test
push
dec
roll
dec
sub
sbb
mov
pushf
push
outsl
sahf
xor
mov
mov
mov
inc
out
push
aam
adc
addl
adc
push
test
js
int
shr
pop
mov
cmp
add
xchg
aas
jecxz
aas
or
rol
mov
and
aaa
pop
ficompl
repnz
aam
jmp
jb
movb
inc
loopne
xlat
dec
sbb
dec
xor
mov
enter
adc
sbb
mov
mov
bound
add
sbb
in
std
shll
adc
aam
or
lock
push
lcall
psrad
fwait
gs
mov
mov
cmp
icebp
cmp
jb
shrb
ret
sub
test
out
cmpsb
cmpl
fwait
sub
iret
cmp
fnstcw
sbb
mov
mov
rcr
loope
and
cmp
sbb
xchg
icebp
or
call
push
mov
xor
mov
fisubrl
mov
ljmp
test
pop
outsb
mov
mov
outsl
and
jmp
mov
sahf
fldl
cmp
dec
cmpsb
pop
arpl
and
xor
push
sbb
or
stos
dec
mov
stos
daa
lds
jmp
xchg
dec
loope
pop
loopne
mov
mov
cltd
jae
xor
inc
int
mov
mov
and
mov
sbb
idiv
add
push
adc
cmp
in
push
jmp
xchg
xor
lahf
xchg
push
mov
cmc
dec
lcall
and
pushf
mov
cli
mov
in
cmp
push
xchg
adc
daa
inc
movsl
mov
mov
lahf
push
xchg
popa
in
stc
ljmp
clc
and
subb
ret
inc
adc
sarb
dec
arpl
scas
sbb
adc
push
stc
lcall
and
les
or
jmp
fisubrl
pop
jle
cmp
xchg
add
mov
mov
dec
les
inc
sub
test
stos
stc
rorb
jo
insl
sarl
int
daa
outsl
mov
jo
stc
lods
adc
aaa
mov
push
and
insl
push
in
mov
adc
sbbb
lahf
or
push
in
outsl
lock
subb
movsl
pop
jne
aad
aam
test
push
adc
mov
movsl
lcall
out
sahf
dec
sarl
lock
cld
das
js
dec
jp
call
pusha
aas
push
test
xchg
mov
jo
xchg
mov
inc
pusha
mov
je
popa
fdivp
mov
dec
and
pop
pop
sbb
ja
leave
cmpsb
test
push
rcl
rol
shlb
loop
icebp
pop
push
push
je
adc
imul
xchg
mov
gs
pop
mov
insb
sub
sub
lea
out
or
adc
inc
add
lea
mov
scas
inc
xchg
insb
mov
and
mov
in
nop
imul
stc
mov
ret
aas
pop
or
out
out
cmp
add
pop
pop
mov
in
fbld
inc
cmpb
push
test
inc
ret
or
and
ja
jb
cmp
push
mov
andl
sub
cmpsb
jle
jp
jp
or
xchg
call
adc
scas
xchg
cmp
shlb
fistpl
sti
fistpl
sbb
mov
out
lods
movsb
jmp
jo
js
lea
push
addb
dec
xchg
mov
ret
xor
popf
xor
jecxz
cmp
xchg
fwait
pusha
sbb
push
sahf
jecxz
cmp
daa
xchg
xor
dec
xor
or
jmp
repz
push
in
push
mov
xor
call
jb
lods
sub
and
add
adc
mov
pop
push
in
daa
pop
adc
push
cmp
jae
pop
mov
test
adc
addl
mov
cmp
inc
ret
shrb
pop
and
test
or
push
loop
jo
cld
iret
popf
mov
pop
push
icebp
repnz
add
cmp
mov
sub
ljmp
dec
pop
lea
int3
push
push
dec
rcl
and
and
arpl
mov
int
clc
rolb
in
pusha
pop
jle
cs
aas
add
iret
push
or
cmp
mov
enter
mov
or
or
daa
pop
push
add
xor
clc
loop
push
jne
jmp
dec
mov
lcall
push
cs
adc
mov
pop
pop
gs
add
mov
addr16
lcall
leave
and
add
push
mov
rolb
std
add
jg
test
adc
out
mov
andl
mov
daa
loopne
mov
outsb
xchg
push
pop
sub
mov
pop
std
mov
mov
aaa
push
gs
int
dec
jge
ja
xor
pushf
aaa
out
ret
cmp
push
add
fldcw
or
sub
sbb
sbb
dec
dec
lahf
and
imul
pushl
dec
sahf
adcb
ror
sub
loop
addl
and
adc
xchg
pop
or
add
test
cmc
xor
mov
mov
xchg
jg
push
fidivrs
jl
fcmovbe
movsl
dec
out
fcoms
inc
sbbb
push
orl
sub
aas
jg
jg
movsl
cmp
push
mov
pop
dec
push
in
in
xchg
icebp
add
popa
xchg
bound
or
cmp
test
jecxz
sbb
imul
pop
jne
paddw
jmp
subb
cmpsb
sub
adc
sbb
jae
push
and
adc
mov
and
fbld
push
imul
pop
inc
fistpl
sbb
jg
push
popa
mov
fcmove
loopne
outsl
push
push
ja
scas
ret
lret
fidivs
arpl
std
sub
jmp
jo
add
sbb
sbb
pusha
enter
inc
mov
xlat
loop
sti
roll
or
jl
fstpl
push
and
cld
inc
cmp
xchg
push
fs
push
cmp
stos
push
xor
aaa
loope
rcrl
fistpl
push
xlat
repnz
lods
cli
pop
rcrb
shlb
aas
ja
lcall
inc
mov
cmp
stc
cmp
xchg
je
pop
jne
sbb
pop
xchg
jae
cmp
scas
cwtl
imul
or
arpl
sahf
scas
int
push
fnstenv
sbb
xchg
out
std
push
cwtl
and
mov
xchg
push
inc
cmpsb
push
mov
mov
mov
push
or
cltd
push
mov
adc
mov
adc
xchg
cmp
ljmp
cmp
shrl
jnp
sarl
mov
mov
fidivrl
aas
xchg
mov
mov
mov
push
inc
mov
dec
cmp
enter
jp
pop
insl
dec
xlat
loop
iret
push
mov
frstor
xor
clc
js
jae
xor
cltd
arpl
xor
dec
repnz
sbb
jecxz
imull
sti
dec
cld
rcll
xor
jb
or
roll
in
xchg
jg
pushf
cmp
mov
je
int
leave
fimull
es
inc
dec
out
dec
test
dec
std
arpl
add
les
ja
push
clc
data16
rep
jge
lea
scas
pusha
adc
scas
lock
cwtl
test
test
sub
xor
mov
mov
or
mov
subl
subl
daa
rol
jge
int
and
push
jecxz
jbe
ret
das
scas
out
fisubrs
outsb
addr16
js
out
add
call
mov
jbe
filds
insb
sbb
jns
imul
stos
xor
lea
xor
pop
add
push
cmpsl
into
pop
sbb
xor
xchg
movsb
fs
mov
mov
cmp
pop
fucom
inc
cmpsb
push
decl
cs
in
insb
data16
sti
dec
xchg
shrl
jno
mov
sub
jp
nop
push
ljmp
popf
in
scas
mulb
add
dec
lcall
xor
sbb
pop
mov
mov
push
jne
add
and
mov
mov
dec
jle
xchg
sbb
sbbl
mov
pop
add
das
lods
xlat
mov
fsubl
push
shrl
mov
int3
xor
pushf
pop
cltd
neg
fcmove
xor
xor
lds
cli
cld
mov
test
dec
and
std
mov
not
in
push
or
cmp
mov
addr16
inc
lahf
std
pop
mov
shrb
insl
bound
xor
arpl
popf
test
mov
cmc
push
popa
sub
mov
dec
out
or
std
movsl
add
push
cwtl
imul
or
out
lods
aas
push
loop
cmp
addr16
loopne
imul
test
aad
sbb
test
sbb
int
sub
cmp
and
insl
rcr
sub
dec
sbb
movsb
cltd
sub
dec
inc
rorl
cld
jae
add
ss
jnp
push
in
pop
data16
mov
mov
sub
js
call
xchg
push
lods
shrb
push
jle
xchg
pop
ja
add
imul
cli
shr
mov
cwtl
add
repz
xchg
dec
push
cmp
pushf
pop
or
xchg
ja
add
dec
subb
push
push
in
imul
jo
ds
or
mov
sbb
cmp
int
scas
adc
cmp
jg
cmc
call
sub
fld
pop
jmp
ss
mov
pop
aaa
shlb
xchg
cwtl
loop
xor
mov
lret
adc
mov
or
in
bound
mov
clc
adc
outsl
loop
negl
imul
out
je
jge
in
dec
sbb
adc
fnsave
and
lds
mov
xchg
jns
outsb
cmp
jno
and
mov
cmp
movsl
add
mov
push
sbb
in
mov
shr
subl
xchg
pop
push
push
in
test
inc
push
push
and
hlt
push
add
aaa
xchg
inc
inc
in
mov
cmp
push
adc
out
out
jmp
pop
lods
jecxz
mov
push
push
or
ds
lods
cmpsb
mov
cld
sbb
ficomps
inc
sub
mov
cmp
xlat
mov
jb
xchg
stos
js
sar
popa
adc
push
push
mov
cli
mov
adc
push
adc
adc
cmpsl
dec
mov
testl
sub
test
sub
pop
cwtl
mov
mov
inc
mov
rcrb
mov
mov
and
cmc
int3
ljmp
icebp
in
lret
nop
xchg
mov
pop
jmp
and
push
adc
xchg
insl
mov
inc
addl
sbb
pop
lods
mov
loop
dec
xchg
inc
or
adc
mov
pop
jae
xchg
or
iret
mov
dec
mov
pop
repz
mov
xlat
jp
in
lret
das
cmc
mov
adc
popf
enter
sbb
mov
aad
imul
pop
rolb
test
out
inc
push
fnsave
xchg
pop
xchg
lretw
add
and
jecxz
cwtl
push
inc
int
call
mulb
mov
xchg
sbb
sbb
mov
adc
iret
neg
loopne
and
xchg
js
pop
leave
push
movsb
daa
push
sti
sub
mov
mov
ds
sub
push
pop
aad
aas
dec
pop
inc
fs
xchg
jecxz
pop
xor
xchg
scas
mov
ror
mov
xor
lock
daa
lret
fadds
lods
icebp
movsb
cmp
and
in
dec
adc
dec
jmp
cmp
push
nop
movsb
inc
and
je
jo
fsubs
fcoml
arpl
mov
mov
inc
and
rcrl
cs
out
lds
mov
bound
mov
cltd
xchg
andb
sarl
mov
mov
push
push
sbb
or
mov
adc
popf
and
xchg
push
pushf
pop
std
loopne
mov
mov
stos
daa
movb
out
lods
adc
xor
inc
mov
push
dec
push
lret
push
popf
cltd
and
sbb
out
rcrb
inc
adc
movsl
pop
lret
sbb
dec
dec
and
enter
out
movsl
in
loope
loope
into
dec
out
lods
mov
push
popf
popf
jno
sbb
rcl
sbb
xchg
push
in
testl
dec
adc
sbb
test
mov
adc
mov
arpl
xchg
iret
xchg
insl
in
idivb
enter
scas
push
insb
idivb
sbb
or
mov
fcoml
insl
add
ja
xchg
aaa
sbb
and
push
loope
imul
cmp
imul
pop
enter
and
popf
fsubp
rolb
add
loope
fmuls
les
stos
test
mov
xchg
stos
imull
inc
inc
inc
sbb
mov
mov
lcall
movsl
cmp
cld
xchg
popw
mov
insl
and
movsb
pop
int
test
sub
sub
jns
push
icebp
subb
pop
xchg
fstpt
lret
xor
ds
xchg
shl
xchg
insb
pop
mov
xor
lds
ja
ss
stc
popf
out
nop
cwtl
out
xchg
xchg
add
sbb
sahf
or
xchg
les
sub
inc
push
cltd
repnz
cwtl
rcrb
imul
std
dec
inc
cmp
outsl
xchg
add
push
adc
push
jb
and
aam
dec
fidivrs
enter
imul
jo
test
inc
lods
xchg
iret
test
sub
mov
mov
ljmp
mov
and
mov
mov
mov
inc
cmp
fimuls
jne
jns
scas
cli
js
sub
movsb
jl
mov
cli
add
mov
push
daa
fldt
or
outsb
outsb
stc
lret
inc
sub
repnz
scas
sub
adc
pop
shrl
mov
mov
sub
push
fwait
insl
sbb
stc
ja
movsl
cmp
jne
or
push
pop
stc
filds
mov
cmp
pop
sbb
sahf
lret
repz
add
andl
push
jmp
pusha
xchg
mov
out
dec
jecxz
cwtl
dec
mov
outsb
test
inc
sbb
mov
adc
hlt
mov
popa
inc
sub
inc
dec
icebp
sarb
movsb
sbb
dec
pop
gs
fwait
das
test
test
sbbb
or
fwait
adc
push
pushf
movsl
dec
mov
xor
sbb
cmpsb
and
adc
sbb
and
stos
daa
xor
test
bound
mov
popa
decl
push
jecxz
xor
cmp
sbbb
movntq
rclb
addb
cmp
in
dec
mov
xchg
lcall
popa
pop
push
bound
repz
pop
data16
and
decb
sbb
out
stc
push
loope
sub
iret
or
sub
and
mov
sahf
aam
pop
sbb
jl
ljmp
jns
mov
in
inc
pmaxub
das
in
mov
adc
scas
xor
aad
add
or
arpl
inc
dec
mov
pop
dec
stos
jne
clc
and
aaa
mov
mov
daa
data16
inc
aam
mov
push
test
rcl
test
xor
xchg
fldenv
inc
out
inc
dec
mov
fistps
or
les
dec
ret
xor
inc
mov
in
push
push
sbb
rcl
repz
dec
dec
mov
arpl
ret
push
ja
xor
adc
sti
lods
and
rorl
repz
iret
cmp
decb
subl
pop
mov
cltd
cmpsb
loope
add
xchg
mov
rclb
in
sbb
orb
push
xor
subl
dec
scas
and
pushf
mov
shl
pinsrw
pop
je
jne
sub
sub
cltd
cltd
inc
imul
mulb
nop
jl
lock
ret
imul
sahf
pop
adc
clc
mov
push
pop
test
shrl
dec
jns
test
lret
aas
mov
mov
out
scas
into
lret
gs
dec
dec
adc
mov
inc
je
dec
lds
push
xchg
addb
scas
rcrb
xchg
movsl
cmp
mov
sbb
ja
sbb
cltd
movsl
xchg
outsb
or
xchg
sbb
or
leave
mov
push
scas
cmp
in
xor
push
lods
adc
xchg
push
lods
cwtl
test
add
mov
in
mov
int3
mov
cwtl
jge
adc
mov
jle
out
shr
jb
fsubs
stos
xchg
cmp
das
cmc
push
inc
cmpsb
inc
test
pop
arpl
add
outsb
dec
rcrb
lret
nop
cli
leave
int3
aas
mov
and
mov
movsl
test
ss
loope
call
ror
gs
les
dec
ljmp
mov
and
cmp
jne
sub
imul
cs
mov
inc
in
inc
inc
hlt
pop
push
mov
es
sub
mov
sbb
pop
mov
mov
or
sbbb
outsl
pusha
mov
mov
cmp
pop
ljmp
fwait
lods
stos
ljmp
cli
imul
cmpsl
repz
jbe
stos
xor
ret
call
rorl
popf
sbb
daa
jmp
lahf
les
or
pusha
mov
fsubr
mov
sub
add
cmp
mov
out
arpl
cmp
mov
cmpsl
sbb
sbbb
sti
mov
push
lds
aad
addl
pop
movsl
lods
adc
sahf
pushf
shll
ret
jb
fwait
jnp
cli
pop
and
adc
outsb
in
cwtl
pop
lahf
out
add
loop
gs
repz
nop
test
adc
sub
xchg
cwtl
fistpl
xchg
ss
fnsave
dec
cmp
mov
mov
in
sub
out
sbb
dec
loopne
pop
xor
xor
movsl
aad
sub
push
dec
add
and
add
and
jle
xor
dec
shll
mov
dec
aas
or
mov
lods
xchg
scas
jne
pop
mov
inc
dec
test
sub
rolb
testl
ja
fstl
xor
adc
pushf
jmp
or
cld
pop
or
movsl
stos
push
ret
in
vunpckhps
xor
dec
inc
sarb
mov
test
cmp
xor
lahf
lret
mov
mov
and
xorb
rclb
ss
mov
inc
arpl
movsl
jmp
dec
repz
lds
inc
mov
shl
add
stos
xor
sub
mov
dec
divb
inc
xchg
mov
pop
loop
cmp
cmc
dec
and
mov
fs
stos
in
movsl
sub
subl
lret
fwait
mov
pop
cld
mov
mov
cld
scas
mov
cli
in
add
outsl
mov
push
xor
mov
jne
dec
xor
cs
push
dec
lds
pop
icebp
adc
cwtl
and
inc
mov
cmp
jle
rcr
addr16
dec
rcrl
sub
jne
fnstsw
sub
mov
pop
mov
mov
jne
and
jmp
add
adc
aas
dec
dec
cmp
push
stc
push
push
push
add
lock
or
xlat
push
jg
sahf
mov
cmpsl
scas
add
lods
jb
sub
loopne
pop
mov
jle
mov
outsb
int3
xchg
outsl
stos
enter
popf
cmc
or
in
inc
stos
inc
xor
outsl
adc
lret
push
pop
xor
jb
inc
xchg
rcr
pop
push
push
push
sahf
call
cmpsb
cmp
mov
dec
sub
push
pop
sbb
sub
inc
push
and
in
imul
cmc
loop
xor
das
pusha
repz
cmp
adc
data16
xor
mov
popf
sbb
leave
xor
lds
pop
inc
pop
arpl
dec
adc
mov
addr16
or
push
xchg
lods
jmp
outsl
adc
dec
dec
stos
pop
push
jmp
nop
gs
call
adc
jns
fdivs
xchg
imul
adc
inc
notb
pop
fisubl
divb
inc
add
lods
ds
xchg
push
mov
push
or
les
pop
pop
into
cltd
ja
sbb
ss
fbstp
cld
data16
outsb
mov
insl
and
add
cmpsb
popf
sarl
push
or
jl
mov
movsb
fdiv
outsb
pop
dec
adc
fsubrl
jno
cmp
jge
adc
out
or
ret
mov
mov
lcall
cmp
sbb
mov
mov
cmp
and
lcall
mov
jmp
pop
sub
insl
pop
rcrb
lret
sub
stos
shrb
fmull
xor
lock
cmp
fs
add
fsubs
shrl
push
sub
and
testb
outsb
inc
aas
jmp
mov
sbb
out
test
jae
lock
mov
rcr
jae
adc
out
cmpsb
out
inc
mov
clc
mov
ja
and
fs
stc
sarl
cltd
mov
adc
cmp
mov
cltd
pop
icebp
sub
ja
cmc
scas
xor
orb
mov
imul
xchg
add
jo
sub
clc
or
rcl
push
js
insb
popf
mov
pusha
aas
adc
ffreep
int
je
mov
adc
repz
lahf
popa
sub
fisubl
xor
jae
pop
movsb
clc
fistps
cs
sahf
stc
push
mov
jns
mov
icebp
mov
aaa
and
jp
mov
inc
mov
std
lock
loope
ds
adc
push
lahf
leave
push
xchg
popa
das
fnsave
push
outsl
mov
pop
ret
incl
mov
jmp
jo
pop
aad
ret
push
cmpsb
pushf
push
lret
dec
mov
enter
scas
enter
and
aad
lods
ss
ret
jno
xor
mov
movsb
xchg
or
cmpsl
push
pop
and
push
ret
lret
xor
push
cmp
mov
dec
sbb
xor
xor
pop
mov
andl
xchg
xor
push
xor
pop
mov
and
clc
sti
icebp
int3
mov
mov
inc
clc
in
xor
loopne
fneni(8087
stc
aas
mov
xor
lcall
adc
fisubrs
pop
lea
ret
sub
pavgb
inc
movsl
aaa
in
push
inc
jo
adc
sub
adc
pop
push
jmp
mov
filds
push
rclb
mov
mov
sahf
out
or
inc
scas
jecxz
jg
int
rorl
sbb
inc
testb
insb
mov
jbe
and
mov
jb
push
sbb
ja
loope
int
outsb
movsl
xor
clc
int
pop
pmullw
hlt
icebp
aad
cli
cmp
loop
jb
mov
fcomps
pop
popf
ficomps
lock
inc
jp
fs
movsl
pushf
ret
lahf
push
mov
jl
int
dec
loope
push
push
fcoml
push
test
mov
or
je
dec
sbb
dec
les
inc
repz
shll
lds
icebp
jmp
out
out
outsl
aad
dec
loop
sub
mov
sub
jmp
test
jbe
out
cmpsb
fs
popf
addr16
movsl
and
xor
arpl
xchg
scas
mov
inc
adc
subb
pandn
sbb
jbe
andl
jp
leave
adc
dec
jp
loop
insl
lock
sub
in
aad
fsubl
add
mov
sub
out
cli
loopne
push
and
js
inc
pop
es
clc
imul
pusha
add
adc
mov
mov
push
arpl
ljmp
loope
cwtl
cmp
mov
mov
es
in
into
jmp
jp
pusha
rorl
sbb
ret
icebp
xchg
movsl
data16
fbld
adc
stos
add
pop
aas
push
jnp
int3
or
in
daa
in
popa
mov
cmc
mov
xchg
inc
daa
dec
loopne
xchg
pop
sti
popl
lcall
mov
inc
int3
lock
mov
mov
cmc
fs
push
pusha
jl
xor
or
jns
pop
pop
pop
pop
outsb
fcom
repnz
subl
fs
jl,pt
sub
int
in
loope
test
mov
enter
dec
push
stos
shr
test
loope
les
sti
sub
loop
mov
cmp
sub
repz
rolb
sub
bound
int
sub
fbld
and
fdivrs
sub
out
fbld
insl
mov
mov
push
mov
sub
mov
stos
xorl
pop
inc
jo
jns
popf
pop
jmp
out
js
loopne
xor
mov
into
inc
jne
jmp
push
pushf
bnd
xchg
dec
sub
icebp
je
fistpl
outsb
int3
es
cmc
cmpsb
dec
call
jae
and
stc
cmpsb
cwtl
loope
je
fadds
push
xchg
call
loopne
inc
int
xchg
frstor
out
mov
lret
sub
dec
or
jne
pushl
out
and
sub
mov
mov
xchg
lods
loope
mov
xchg
fdivrp
ja
push
mov
loope
setae
aas
push
inc
mov
jne
add
pmullw
xchg
mov
adc
sbb
test
sub
xchg
test
adc
fwait
roll
sbb
mov
xor
mov
or
mov
roll
mov
stos
mov
or
mov
xchg
cmpb
sahf
cmp
and
jnp
outsl
scas
incl
fcoms
dec
sub
sti
fwait
xor
jo
ret
mov
loopne
shl
pusha
cmp
push
movsb
pop
jae
scas
adc
pop
lcall
imul
jmp
mov
ret
mov
in
push
outsl
int3
jle
ret
scas
daa
int
inc
push
orb
xor
pop
add
xor
enter
iret
andb
pop
cmp
dec
push
push
mov
inc
inc
clc
xchg
fdivr
insl
repz
push
xor
adc
push
push
xchg
xchg
jbe
int
cmp
addl
xor
in
add
icebp
mov
enter
lret
fs
mov
inc
mov
or
lahf
in
neg
xchg
and
sub
testb
pop
ret
push
addr16
inc
pop
not
stc
fdivs
out
iret
adc
jecxz
sbb
fadd
out
into
xor
push
adc
frstor
and
or
int
add
pushf
xor
cmpl
out
xchg
test
sub
arpl
lock
cli
jge
test
pop
cmp
cmp
adc
fs
pop
dec
mov
add
and
data16
mov
rcr
sbb
rcl
in
sub
xchg
ret
outsb
mov
imul
movsl
scas
lea
xchg
test
mov
sbb
nop
xchg
and
jl
add
stos
lds
and
fsubl
btc
push
xor
aam
stos
enter
lcall
xchg
mov
popf
in
popa
push
int3
jle
movsl
mov
mov
adc
lcall
test
in
frstor
out
ljmp
clc
or
pop
mov
sub
pop
xchg
xor
dec
mov
jl
dec
les
and
dec
sub
xor
inc
add
sbb
sub
insl
mov
int
outsl
ret
sub
mov
aad
cld
pop
jbe
pop
mov
mov
mov
imul
inc
ret
sub
mov
jmp
jae,pn
push
je
arpl
or
repnz
push
xlat
daa
pushf
mov
movb
stc
lcall
and
push
xchg
fwait
ds
ss
jbe
sub
mov
push
cwtl
cmpsl
test
shll
fcomps
cmpsb
mov
add
sti
jnp
aad
movsb
pop
add
push
cli
pop
sbb
inc
sub
mov
out
in
pop
cmp
iret
hlt
fistpl
clc
popa
dec
dec
nop
add
dec
adc
jno
lcall
inc
adc
lret
scas
jb
or
add
dec
enter
jl
lcall
enter
pop
pop
fdivl
pop
fdivrs
mov
add
pop
lcall
jne
mov
icebp
or
add
cmp
mov
cwtl
adc
lods
in
icebp
and
in
jecxz
loopne
lret
sub
cmp
call
ja
sub
loopne
fwait
cmpb
fiaddl
scas
js
or
push
pushf
aad
push
aam
lahf
pop
cmp
popf
dec
inc
cltd
push
in
xlat
xchg
ret
xor
mov
adcl
mov
std
subl
fists
jae
cmpsl
out
or
add
rol
pop
add
jg
pop
jle
cmp
jae
test
xchg
cs
out
roll
popf
ds
jbe
ja
jecxz
mov
shll
mov
inc
aad
mov
fadds
ja
push
push
cld
ja
or
adc
insl
pop
or
sub
or
pop
enter
cltd
stos
rorb
mov
or
shl
mov
inc
aaa
dec
mov
xchg
insb
jp
mov
sub
xor
inc
inc
fsts
dec
adc
cs
xchg
aam
adc
push
sbb
bound
xchg
inc
push
xlat
push
xchg
ds
adc
int3
nop
dec
xchg
lock
mov
adc
jle
cs
add
inc
mov
test
popl
pop
mov
dec
jo
mov
mov
enter
iret
ss
ljmp
adc
or
dec
out
testb
adc
mov
cwtl
cmpsb
or
sub
in
roll
cmpsl
out
pop
mov
in
adc
scas
out
movd
sbb
call
cmp
out
in
push
mov
popa
xorl
and
scas
mov
stos
loopne
push
add
dec
and
and
xchg
shlb
sbbl
fistpll
daa
push
fdivs
sbb
inc
daa
in
or
mov
cs
fldenv
mov
jmp
pop
cmp
pop
xor
std
fildll
jbe
nop
mov
mov
xchg
xorl
movsl
ret
addr16
jmp
stos
int
lret
idivb
insl
mov
mov
sub
in
andl
leave
lret
jp
loop
movsb
sbb
subl
sahf
popa
jecxz
sub
ret
jle
fdivrl
and
sahf
add
imul
testl
dec
jno
inc
mov
sarb
jo
fs
mov
and
leave
jo
mov
adc
dec
xor
jle
fldenv
pop
repnz
dec
mov
mov
and
push
fmull
shrl
daa
pushf
icebp
dec
xchg
pop
adc
jmp
mov
jg
push
lret
push
cmp
jmp
int
test
aam
lret
xor
leave
xor
rclb
mov
and
in
subl
int
shlb
add
jne
in
cltd
jp
jns
lcall
pop
cmp
mov
cmc
dec
aas
iret
pop
addr16
stos
jle
aad
dec
lcall
mov
fwait
cwtl
dec
dec
repz
jg
pop
add
ret
xor
push
cmp
mov
loope
and
movsl
cli
es
adc
rcl
push
jp
roll
lods
adc
lods
subb
jno
push
shlb
jg
adc
pop
jbe
pop
cmp
xchg
sbb
and
and
ja
pop
mov
hlt
decl
add
inc
xchg
in
adc
cmpl
sub
scas
inc
js
aad
cmp
into
mov
out
pop
xor
jmp
jno
xchg
addr16
pop
std
or
xchg
fildll
pop
stc
stos
lret
insl
es
push
pop
in
or
adc
dec
mov
push
sbb
call
inc
push
xlat
cmp
mov
insb
sbb
inc
jbe
push
sbb
add
mov
fnstenv
fsts
sbbl
mov
scas
push
aam
push
push
inc
push
lea
jno
pop
insl
and
mov
pop
daa
mov
mov
cmp
xorb
pop
bound
inc
pop
inc
mov
aam
fsts
xchg
mov
hlt
push
pop
dec
pop
lods
xchg
inc
hlt
mov
jge
fnsave
mov
shll
repnz
jge
les
xor
repz
jne
adc
xchg
test
lret
push
xor
mov
iret
iret
inc
mov
jbe
xchg
pop
xchg
rcll
dec
xor
out
dec
rcrb
add
mov
push
jnp
jne
scas
mov
mov
mov
mov
or
jmp
jno
popa
lea
mov
outsb
add
xor
sub
xlat
roll
in
or
fdivs
enter
jl
sbb
cld
jmp
sbb
inc
imul
jne
xor
insb
aaa
dec
inc
les
aaa
movsl
sub
loope
inc
js
loopne
xor
inc
mov
pop
rorb
stos
push
sbbb
inc
dec
jmp
mov
ljmp
pop
sbb
mov
dec
jns
pop
fdivl
xor
mov
mov
mov
pop
hlt
push
mov
out
and
gs
subb
cmpsl
push
mov
dec
or
aaa
sbb
pop
dec
in
xor
or
mov
jns
xor
popa
test
lods
pop
xor
fistl
js
popf
mov
mov
int
aad
fsubp
and
lret
mov
add
lock
movsb
adc
movsl
cli
mov
cmc
data16
movsb
ret
sbb
cmp
and
hlt
mov
test
cltd
je
jmp
inc
jns
test
negl
mov
push
movl
nop
pop
push
pop
sub
fimuls
xor
jmp
out
inc
movsl
hlt
mov
fnstenv
and
sub
mov
lret
mov
orl
mov
jmp
cld
add
push
jl
negb
repz
lret
mov
xchg
cmpsl
pop
inc
leave
push
aas
sbb
cmpsb
mov
mov
adc
cltd
cmovs
icebp
in
test
jge
and
mov
test
sbb
xchg
mov
sbb
loop
lea
iret
scas
addr16
repz
insl
aas
test
push
out
adc
add
push
mov
xchg
sbb
sbb
push
xchg
test
movsb
pop
ficomps
jl
push
xchg
lods
or
jo
popf
adc
inc
add
xchg
push
and
fwait
inc
mov
aam
sbb
xor
or
pusha
leave
lods
inc
arpl
jae
adc
cmp
sahf
outsl
sahf
inc
test
push
mov
jnp
jge
lret
mov
jmp
jae
loop
mov
outsb
or
xor
jb
add
mov
daa
cmp
xchg
pop
push
or
and
pop
jmp
lret
lods
mov
daa
ja
les
mov
cwtl
sub
subb
mov
enter
je
aas
jle
xor
fs
test
sub
loop
lods
adc
lds
pop
pop
jle
push
mov
fildll
jo
pop
outsb
jge
sbb
or
mov
call
lock
cwtl
add
mov
test
psubsw
mov
jmp
rol
roll
ret
rorl
fmul
pop
xchg
push
test
inc
cli
mov
stc
pusha
enter
daa
add
xor
lock
adc
mov
aaa
cmpsb
cmp
dec
jmp
adc
test
or
jnp
shll
notl
jo
adc
cmp
mov
xchg
jl
je
adc
fsub
ficomps
push
es
cwtl
sarb
push
into
out
lods
pop
addr16
nop
iret
pop
in
hlt
push
outsb
xchg
xchg
out
mov
movsb
and
gs
js
iret
fstpt
adc
scas
mov
sbb
sbb
lock
pushf
xlat
sub
pop
mov
imul
subl
mov
outsb
xor
je
mov
fcmovnbe
repnz
push
dec
dec
lret
mov
aas
in
pop
cltd
clc
lcall
aam
arpl
ja
jle
test
pop
loope
push
adc
pushf
in
lods
mov
sti
fisttpl
xchg
aas
mov
scas
dec
push
adc
std
xchg
push
or
loop
pop
out
fildll
jp
xchg
loope
pop
sub
arpl
xor
std
aad
std
idivb
jle
hlt
movl
jmp
xchg
adc
add
push
xchg
cltd
sbb
test
mov
jg
dec
jae
jo
popa
push
or
in
dec
or
in
sub
mov
test
or
xchg
sbb
imul
arpl
lret
mov
push
xchg
lahf
cmp
dec
xor
sub
out
aas
das
in
sub
arpl
stc
scas
inc
repnz
mov
mov
add
mov
in
aas
jecxz
call
dec
iret
jbe
cmc
in
adc
fdivp
mov
out
and
xor
popf
fucomip
out
sbb
sub
insl
pop
stos
pop
cmp
or
mov
outsb
dec
enter
mov
mov
mov
mov
popa
cs
and
dec
stc
bound
cmp
shlb
sti
xor
cmpsl
into
cmpl
push
std
outsb
icebp
sub
pop
mov
adc
loop
out
aam
lcall
sar
add
repnz
popa
jbe
pushf
fcoms
or
pop
push
js
sbb
aam
arpl
xor
inc
rcll
jno
push
mov
xor
mov
xchg
or
or
js
push
repz
dec
pop
sub
es
movsb
mov
inc
pop
or
fmul
mov
mov
push
add
or
int
pushf
dec
popf
add
cmp
dec
iret
imul
mov
add
movsl
inc
mov
iret
js
adc
sub
mov
inc
adc
and
aam
in
test
ja
les
into
es
cmp
jmp
xor
iret
add
xchg
lock
jne
fstpt
ret
in
pop
xor
mov
movsl
ja
scas
mov
mov
and
inc
out
inc
push
inc
and
push
sti
and
jmp
fsts
jg
jmp
inc
and
test
dec
std
sub
xchg
mov
mov
lret
mov
push
lods
stc
aad
sbb
into
sahf
rcll
inc
or
in
push
sub
pop
icebp
fs
jne
dec
add
sbb
push
xor
add
clc
movsl
pop
push
dec
ja
outsb
negb
mov
sbb
call
addb
mov
imul
or
outsb
jecxz
rorl
or
cmp
inc
sub
pop
ret
sti
outsl
sbb
jge
mov
cmp
lods
cwtl
or
mov
pop
pop
call
inc
pop
and
and
ja
jp
fimuls
popa
inc
aad
mov
fdivl
inc
lock
mov
gs
inc
sahf
std
enter
lret
jnp
notb
cmp
jp
in
dec
add
push
std
xchg
dec
xchg
mov
repnz
push
lret
ret
push
movl
sarb
xchg
stos
pop
pop
push
aam
push
adc
xchg
int3
inc
jns
lret
cmpb
pop
cmp
push
inc
enter
pusha
cmpsl
jo
xchg
or
add
and
mov
mov
in
ret
mov
pop
xor
pushf
enter
pop
insl
loope
inc
push
lea
loope
sub
in
outsl
ficomps
pop
test
std
shlb
fwait
adc
pusha
aas
ret
sarl
xchg
and
aam
sub
pop
mov
pop
add
cmc
das
mov
pop
xchg
xlat
sub
inc
xlat
add
stc
mov
sbb
clc
or
hlt
jp
cwtl
xchg
xchg
popa
mov
ja
into
cltd
mov
cmpsb
test
add
es
adc
leave
pop
lock
dec
lods
lods
push
stos
cld
outsb
andl
in
mov
inc
pop
cmp
mov
push
enter
ss
xchg
dec
outsb
repz
out
dec
test
nop
fcomip
int3
cmpsl
xchg
movsl
std
mov
psubb
cmpsb
add
mov
std
xchg
test
add
jo
mov
pushf
fistps
mov
push
nop
ret
adc
sub
nop
in
adc
pop
je
js
xor
sbb
clc
cwtl
push
movsb
cmp
jae
push
loope
sub
and
push
cmp
pop
ficoms
out
adc
xor
lahf
push
push
insb
hlt
lea
xor
jo
xchg
jbe
das
lds
daa
add
scas
xor
subl
adc
and
lock
dec
cmpsb
inc
filds
aam
cmc
or
mov
das
mov
adc
cmp
push
push
mov
jb
jmp
adc
pop
arpl
in
movsl
adc
or
mov
push
repnz
push
add
mov
dec
cmpsb
mov
pop
cmp
xchg
or
pushf
or
xor
mov
sbb
rcr
imul
enter
and
mov
jmp
xor
jmp
inc
lret
ret
inc
cmpsl
adc
cltd
mov
fistl
xor
jl
adc
add
sub
mov
mov
loope
cmpsb
cwtl
jp
or
pop
inc
xchg
lds
enter
insl
data16
or
fisttpll
mov
test
mov
into
lea
jg
mov
ja
shlb
pop
ss
scas
and
xchg
mov
inc
mov
push
js
aam
xor
adc
ret
je
stos
sahf
das
adc
hlt
mov
and
icebp
push
inc
fistl
adc
and
mov
or
popl
movsl
es
jp
int3
sti
jmp
lret
aam
int
and
rorb
lret
pop
lahf
mov
sub
repz
mov
inc
jg
fs
jge
into
and
fidivrs
mov
pop
loope
sub
ret
iret
or
test
daa
aaa
or
lret
jns
sbb
jp
gs
push
push
xchg
insl
or
shrb
mov
aad
mov
mov
out
rcll
outsl
leave
ret
les
loope
xor
push
cmp
jns
pop
scas
enter
dec
add
ret
xor
cmp
shrb
sub
psadbw
pop
xchg
nop
cld
cltd
xor
sub
icebp
ret
popf
fcoml
in
test
adc
add
es
jp
and
stos
adc
mov
fs
call
jg
andb
push
push
add
mov
jb
pop
hlt
testl
ret
and
out
or
adc
cmp
mov
adc
out
pop
test
es
push
rcrl
xchg
push
pop
sbb
cmp
ds
or
aas
scas
sti
mov
add
sub
jo
aas
les
lods
ret
arpl
lods
adc
insb
push
lods
jecxz
mov
enter
cmp
es
mov
fwait
lret
ds
ret
inc
cmc
mov
ljmp
shll
inc
mov
call
sbb
dec
addr16
push
push
sbb
movsb
sti
lock
cmpsb
inc
cmpsl
int
xor
mov
scas
pop
jecxz
fildl
ja
inc
in
bound
sub
arpl
js
lret
fcmovnb
xor
dec
cmp
and
inc
sub
insl
dec
jno
xor
les
sub
mov
push
xchg
pushf
mov
dec
dec
int3
rcrl
call
lret
ret
mov
pushf
dec
adc
add
nop
inc
cwtl
icebp
xor
js
inc
rcr
mov
adcl
cmp
outsb
lods
dec
cld
xchg
fildl
ja
das
es
xchg
sti
sub
test
mov
ja
andl
mov
sub
mov
sahf
sub
mov
or
test
scas
add
sub
cs
jbe
or
lock
aad
movsl
std
mov
pop
lret
adc
xor
add
xor
popf
cmp
mov
add
and
mov
test
xchg
mov
cmp
pop
push
fiadds
fbstp
cli
arpl
jp
popf
ljmp
sub
into
loopne
negb
dec
pop
push
push
insl
jp
xchg
xor
cli
popa
or
sbb
lcall
dec
xchg
stos
std
sbb
or
cmp
enter
inc
clc
and
mov
daa
and
sub
sbb
cmp
mov
lret
insl
jo
lods
repz
adc
rcl
popf
movsb
sub
fwait
mov
xchg
aad
imul
orl
test
sbb
mov
loope
mov
inc
pop
leave
std
push
xchg
push
xchg
xor
lds
call
xchg
dec
fdivrs
stos
pop
lcall
push
xchg
ss
mov
inc
xchg
sbb
imul
cmpl
and
dec
repz
cmp
sbb
les
dec
adc
lret
stc
cli
and
fildl
dec
mov
jnp
repnz
jns
add
ljmp
ja
lock
cwtl
lret
stos
or
pop
cmp
test
mov
sbb
leave
hlt
into
movsl
sub
jge
mov
hlt
push
sub
popf
clc
pop
test
cmp
and
in
inc
inc
pushf
stc
daa
mov
jns
mov
inc
push
xor
rclb
into
or
ljmp
add
aad
add
dec
outsl
adc
mov
call
fcmovne
mov
cs
std
jnp
cwtl
pusha
xchg
inc
gs
mov
mov
pop
rorl
das
sub
cmp
insb
pushf
ret
sbb
cmp
mov
pop
aam
adc
lret
adc
mov
cmp
lcall
lds
sbb
sub
loope
call
fildll
xchg
pop
sbb
inc
jmp
push
shll
mov
lahf
xor
test
int3
outsl
call
xlat
cmp
jae
in
adc
dec
repnz
es
aad
sbb
mov
hlt
sub
jmp
mov
and
adc
inc
pusha
sarl
shrl
sbb
lahf
jbe
stos
popf
adc
out
mov
push
cmp
rcrb
dec
mov
add
sbb
sbb
mov
push
and
adc
or
and
dec
ja
pop
cmp
mov
sub
std
mov
mov
sti
adc
daa
out
scas
shll
mull
pushf
inc
xor
jns
jnp
ds
inc
pxor
sub
sbb
orb
leave
lods
data16
fisubs
aas
imul
jmp
or
aam
push
mov
repz
les
mov
jne
inc
fwait
mov
outsl
rcr
sbb
xor
aam
sub
and
adc
push
enter
loopne
lret
sub
addl
dec
lahf
mov
jns
jnp
cltd
xor
int3
sbb
fisttpl
cmp
lea
lock
pop
sti
push
xchg
dec
dec
mov
adc
fnstsw
js
inc
jle
and
pop
and
add
xor
adc
push
ja
push
js
sti
mulb
and
ljmp
pop
outsl
inc
fs
xchg
leave
cmp
imul
fistl
lods
sbb
ja
or
mov
hlt
and
cmp
ljmp
mov
dec
xchg
dec
add
pop
push
push
test
dec
mov
cmpl
int
jne
insb
jno
in
jno
cwtl
mov
inc
mov
inc
ds
inc
jg
aam
or
dec
mov
dec
push
sub
mov
in
sbb
lods
xchg
pushf
nop
andl
fidivrl
test
data16
mov
jmp
jne
sub
dec
ja
adc
and
mov
stos
jecxz
mov
cmp
add
mov
pop
insl
cs
jmp
fsubrl
lahf
jbe
add
and
lods
mov
xor
push
lret
jmp
adc
or
stc
rorl
into
scas
or
cltd
push
cmp
mov
rcll
add
cmpsl
fists
dec
mov
scas
push
lret
sbb
das
push
mov
fcoms
jl
mov
iret
popa
lret
mov
cmp
mov
arpl
stos
stos
xor
sbb
adc
int3
inc
add
aaa
mov
pop
mov
nop
push
jo
xor
js
mov
pop
fdivl
adc
push
cmpl
push
jg
adc
test
mov
mov
adc
push
inc
test
cmp
xlat
xchg
into
rep
push
jnp
dec
bound
lock
add
add
xchg
push
hlt
lcall
ret
adc
arpl
xor
out
out
jge
or
pop
aaa
jmp
jno
imul
adc
adc
testb
xor
popa
adc
in
bound
mov
nop
xor
xorl
in
enter
cmpb
enter
cs
jge
cltd
jns
push
sti
inc
jnp
pushf
sbb
stos
cmp
and
inc
repnz
icebp
mov
popa
fldcw
mov
sbb
mov
jecxz
adc
int
ficomps
push
dec
inc
adc
dec
mov
hlt
jns
pop
cmpsl
sub
out
push
cli
test
test
stos
xchg
adc
std
xor
push
imul
les
push
sub
xchg
jb
addr16
sub
insb
outsl
jnp
cmc
movsl
mov
sti
loopne,pn
insl
or
xor
add
shrl
and
lret
or
nop
iret
es
adc
pop
shrb
pop
jmp
adc
sti
in
or
repz
sub
sbb
cmp
jno
dec
mov
pop
stc
sbb
lcall
jne
xchg
and
sbb
sub
scas
xor
sbb
mov
movsl
call
divl
adc
and
cwtl
mov
pop
aaa
xor
sub
push
mov
dec
inc
fistpll
mov
adc
les
dec
fwait
xchg
lahf
xorb
jnp
int3
shr
jecxz
jcxz
test
dec
mov
sbb
pushf
xor
ret
add
aas
aad
xchg
sahf
fs
mov
lcall
dec
jne
jg
jae
jnp
ret
test
fwait
mov
leave
and
lea
mov
lock
enter
pushf
in
push
cmp
jp
aaa
mov
cmp
ljmp
dec
xchg
stos
je
fcomi
jmp
xor
pop
cmpsl
stos
inc
dec
cmp
xlat
and
push
jbe
mov
ljmp
mov
mov
adc
cli
ret
mov
cs
sti
add
xchg
jno
stc
in
jns
sahf
dec
xor
icebp
loopne
adcl
mov
push
inc
pop
add
lahf
jo
add
sarb
nop
mov
aas
andb
gs
in
cmp
cmp
ss
andb
ja
jmp
pop
and
stos
xorb
cmp
cwtl
dec
and
push
push
mov
jl
int
icebp
sbb
jae
and
or
fisttps
mov
or
xchg
cmpsb
jp
push
adc
repnz
aam
sbb
xchg
cld
movsl
and
imul
xchg
sbb
xchg
jns
loopne
jno
add
sarl
mov
sub
loop
enter
jae
sbb
mov
adc
xchg
daa
es
popl
jg
push
push
and
ret
xor
movsb
lds
into
stos
into
lret
call
dec
sbb
je
mov
dec
faddl
mov
push
or
enter
stc
cmp
bound
aad
cs
inc
lret
add
data16
movsb
into
jmp
mov
pop
bswap
movsl
add
sbb
out
loopne
mov
or
jo
pushf
push
or
call
sbb
clc
push
mul
lret
aaa
or
sub
mov
mov
pop
in
sbbl
decl
sahf
lret
mov
add
mov
and
dec
mov
lgs
shlb
popf
push
subb
xchg
ss
xor
cmp
dec
shll
fwait
jo
mov
add
xchg
jle
aam
movsl
fwait
imul
dec
gs
mov
mov
or
ret
adc
add
jl
inc
jne
cmp
divb
lods
add
movsl
and
xor
pop
in
int3
xor
xor
push
mov
or
jae
icebp
cmp
movsb
std
or
movsl
addr16
cmp
out
cltd
lcall
ds
fcmovu
cmp
fwait
in
jb
fsubs
test
mov
push
jge
mov
pushf
sub
pop
je
rolb
sbb
cmpsb
in
or
cltd
pop
jecxz
incb
fstpt
mov
push
icebp
xlat
sbb
jg
cmp
and
addb
jmp
or
fcomip
cmpsl
mov
sbb
cli
es
mov
ret
cmc
in
or
lahf
push
mov
add
les
neg
cmpsb
mov
pushf
mov
or
jns
jbe
out
les
mov
mov
jp
sarl
imul
cmp
imul
lods
sbb
xchg
bnd
jbe
into
mov
call
ljmp
sbb
cmpl
sahf
dec
sarl
pop
inc
adc
cmc
mov
sbb
lret
lret
ds
ficompl
sbb
dec
and
xchg
repz
xor
adc
mov
filds
xchg
xor
sbb
mov
sbb
push
push
cmp
inc
and
leave
or
jns
lahf
inc
and
js
cmp
shl
xorl
xor
adc
ds
fbld
sub
cmp
mov
and
daa
testb
jmp
andl
sbb
stos
inc
or
out
jno
int
sbb
sbb
sub
addl
fwait
sbb
idivl
mul
test
jp
xor
cltd
and
sbb
pop
loop
xor
cld
jo
mov
ja
adc
jge
int3
cs
outsl
hlt
lock
and
add
rol
jne
lret
icebp
pop
imul
pop
jb
lock
adc
aad
int
call
sbb
lahf
popf
sub
lds
mov
mov
mov
cmc
sbb
mov
xchg
lods
out
addl
sub
adc
fisttpl
ficompl
mov
cmp
fadd
dec
cltd
out
cmp
popf
ss
data16
inc
rolb
cmpsl
inc
adc
loopne
inc
xchg
and
mov
leave
dec
insb
pop
hlt
jo
lods
les
sub
sbb
cli
insl
pop
aaa
cmp
mov
rolb
rclb
movsl
in
js
or
les
lock
jle
cwtl
push
cmp
cmp
push
sub
xchg
and
inc
test
mov
sub
jb
cltd
sti
xchg
jns
shlw
jecxz
cli
and
shll
outsb
aad
xlat
pop
or
fcompl
aad
cmp
repz
jmp
push
jno
nop
sub
or
das
or
insl
xchg
cmc
adc
push
mov
or
popl
jae
lret
adcl
adc
mov
and
int3
mov
mov
stc
xchg
add
ror
sbb
mov
or
pop
hlt
fistpl
jno
int
lret
leave
dec
out
fistps
iret
jmp
mov
std
bound
mov
jmp
or
je
movsb
test
sbb
and
adc
adc
inc
dec
lea
mov
or
aaa
int3
mov
fists
mov
imul
stos
fstps
movsb
int
aad
lods
jmp
or
cmp
mov
iret
push
xchg
cmp
sub
dec
xor
clc
add
cmp
push
xchg
popf
cmp
insl
mov
cli
pop
mov
repnz
mov
or
cli
insb
stos
jbe
mov
lock
rcr
notl
fistps
lahf
pop
fimull
shlb
jmp
xor
loope
or
fnstenv
adc
or
inc
es
xor
mov
insb
push
push
mov
adcb
movsl
ss
cwtl
enter
adc
mov
xchg
or
in
and
push
pop
pushf
icebp
and
pushf
lret
out
call
daa
ret
stos
sbb
mov
xchg
mov
jge
push
jg
repz
mov
jno
sbb
cmp
rcll
stc
scas
int3
xchg
shll
lods
cmp
clc
arpl
cmc
cs
xchg
insl
or
xor
fcompl
loope
fisttps
ret
add
mov
sti
or
les
adc
aas
out
add
xchg
aaa
outsb
xor
negl
jns
lret
mov
add
pop
and
inc
adc
cmp
cmp
sbb
cltd
gs
nop
mov
and
inc
outsl
fadd
add
pop
pop
idivl
les
in
sarb
arpl
pop
imul
mov
movsl
cmp
jnp
iret
push
ja
jnp
and
mov
out
ljmp
mov
jl
mov
push
lods
mov
mov
sub
dec
inc
in
jge
pop
jle
push
pusha
mov
mov
push
mov
add
scas
sbb
les
enter
jno
push
cmp
xor
or
decl
dec
popf
push
add
cld
fidivrl
lcall
jo
or
xchg
hlt
in
pop
add
inc
push
mov
out
adc
js
mov
es
adc
nop
popf
push
test
or
mov
or
fwait
cmp
inc
sbb
push
push
lret
or
adc
insb
addr16
mulb
dec
mov
sbb
orl
add
sub
or
xor
pop
push
nop
and
cld
in
sarb
mov
scas
icebp
mov
int
hlt
test
out
scas
push
out
div
ja
fdivs
mov
fisttpll
dec
scas
frstor
dec
lock
mov
test
and
push
jge
scas
lock
inc
lret
xchg
sti
mov
fcomps
xchg
mov
add
pop
mov
cmpsl
clc
push
add
jno
scas
pushf
pop
cs
call
adc
xor
sbbl
clc
mov
xchg
push
cmp
loope
popa
inc
jmp
add
and
sbb
sbbl
jmp
mov
xchg
lret
pusha
sub
iret
scas
fcmove
mov
mov
mov
xor
imul
pop
cli
loope
clc
bound
imul
or
push
inc
mov
cmova
sub
xchg
loope
int3
mov
push
imull
andb
rorl
gs
cwtl
inc
out
inc
mov
out
adc
push
lods
or
inc
mov
dec
rcrl
jl
fnstsw
fcompl
arpl
sub
jmp
std
xchg
pop
sbb
jle
daa
test
pandn
or
jne
mov
jo
lcall
fistpll
aad
loop
cli
pop
inc
stos
inc
jle
das
std
mov
insl
das
hlt
and
mov
xlat
xor
sbb
mov
loope
test
push
mov
push
push
dec
fdivrl
inc
jg
insb
xorb
push
test
cmp
add
faddp
inc
addl
cmc
mov
push
lea
mov
mov
mov
sub
xlat
add
jb
call
push
cmp
pop
mov
inc
sbb
je
rclb
sbb
repz
xor
xchg
jb
lea
add
movsl
nop
pop
or
mov
call
cmp
sub
and
int
lret
stos
stc
in
ret
adc
mov
xor
cmpsl
pop
frstor
into
lahf
gs
adc
inc
xchg
es
popf
sahf
mov
sbb
imul
xor
fsubrl
dec
cmp
mov
outsb
or
mov
bound
sub
xchg
cmp
push
lret
lods
sahf
jmp
adc
sub
into
das
pop
inc
fildll
sti
jo
xor
jmp
push
pop
or
dec
mov
ret
pop
popf
gs
sarl
mov
in
lods
cwtl
ds
or
sub
gs
xchg
sub
test
shll
xchg
add
into
mov
loop
leave
or
push
pop
xorb
xlat
je
mov
inc
add
lea
xchg
loopne
adc
xor
mov
or
jb
gs
or
xor
scas
adc
adc
mov
cs
shl
les
xchg
rorl
enter
push
mov
sti
imul
std
stc
mov
adcl
sti
loope
cmovae
inc
cmp
xchg
xor
mov
jbe
inc
iret
cmp
fwait
cmp
dec
inc
in
popa
lcall
rorb
sub
loopne
mov
mov
fidivrl
pop
test
movsl
sub
add
dec
lret
mov
dec
dec
hlt
leave
pop
fs
scas
adc
xchg
sbb
bound
ret
int
or
ret
adc
push
clc
mov
adc
mov
adc
lcall
mov
xlat
add
repz
arpl
in
adc
add
xchg
ds
mov
call
xchg
adc
cld
jl
int
cltd
and
iret
bound
add
cltd
out
mov
mov
fwait
pushf
movsl
popa
addr16
and
int
jae
fstpl
mov
pop
jmp
ret
js
push
add
cmovl
sbb
adc
les
cmpsl
fs
add
in
and
daa
adc
mov
sbb
or
jae
dec
mov
mov
out
sub
push
aas
fwait
xor
inc
hlt
cli
pusha
lcall
mov
adc
in
lock
cmc
repz
test
dec
push
shrb
cltd
leave
fs
f2xm1
adc
mov
mov
push
sbb
xchg
lret
arpl
or
mov
je
std
adc
xchg
stos
sti
push
ficomps
and
cltd
push
push
or
jg
outsl
inc
jb
push
rcrl
cwtl
inc
fimull
mov
sub
jae
iret
in
test
fsub
je
inc
inc
stos
std
pop
call
inc
test
js
ret
add
sub
pushf
jl
sbb
icebp
push
int
mov
adc
xchg
jb
stos
jmp
mov
adc
push
cmpsl
je
mov
push
mov
repz
into
pop
dec
sub
fisttps
ds
stos
mov
bound
imul
in
add
movsl
mov
mov
xchg
rorl
jp
mov
mov
mov
adc
jae
scas
mov
int3
dec
repnz
daa
repnz
nop
jle
mov
call
cwtl
mov
and
or
ja
loop
xchg
cwtl
xchg
cwtl
ss
out
lcall
jge
pop
inc
jae
dec
adc
inc
mov
or
add
sti
xor
xor
imul
ss
dec
js
mov
lds
jp
testl
mov
dec
mov
shlb
jge
test
xchg
push
sbb
adc
add
push
cmpsb
sbbb
dec
sbb
aas
sub
xor
scas
sbb
rorl
into
mov
adc
rolb
pop
rorb
cs
orb
fistps
aaa
mov
out
inc
rorl
cwtl
adc
jge
out
jmp
lret
push
add
pop
iret
xor
loop
mov
lret
imul
daa
add
or
or
cmp
pop
pop
addr16
test
sub
lcall
dec
push
inc
jge
movsl
pop
and
add
inc
xchg
jbe
je
cld
insl
test
addb
lea
inc
mov
or
dec
xor
repz
or
jmp
xor
dec
mulb
lods
inc
xchg
out
rol
movsl
pop
lcall
xchg
icebp
adc
xchg
cmpsb
xor
in
popf
call
push
outsl
cmc
fidivs
outsl
pop
xchg
loope
rcr
bound
sti
loop
pop
inc
xchg
sbb
dec
xchg
lock
xchg
pop
hlt
adc
imul
xchg
ljmp
int
xor
mov
roll
negb
out
and
mov
outsl
jbe
int
inc
mov
lret
cmp
and
adc
sbb
mov
xchg
xor
cltd
and
mov
mov
and
xchg
pop
jbe
divb
inc
movsb
ja
adc
lea
cmp
push
pop
xchg
or
cmp
fdivp
shr
rcl
std
push
pusha
aas
inc
out
arpl
pop
mov
cmc
fdivr
mov
fwait
aad
rorl
stos
loope
mov
jg
sbb
mov
pusha
aas
inc
xchg
ret
mov
in
mov
loopne
mov
xchg
mov
pusha
ret
ljmp
dec
test
mov
mov
lret
jecxz
xor
pop
fwait
inc
push
push
adc
and
stos
push
mov
inc
dec
or
arpl
jp
xchg
add
outsb
cmp
divb
in
or
arpl
pop
addr16
insb
mov
mov
inc
stc
int3
frstor
or
xchg
jb
dec
stos
addb
add
xor
mov
xor
std
add
ljmp
cmp
fdivrl
imul
cld
cmp
xor
and
cli
leave
cmc
cmp
fisttpl
scas
into
js
cli
aad
imul
xchg
mov
sbbl
mov
repnz
out
xchg
add
aam
jge
jmp
add
pop
adc
mov
ljmp
neg
lods
cmp
std
bound
dec
push
and
in
xchg
add
xchg
sub
loopne
push
pushf
cmovs
xchg
data16
mov
pusha
push
dec
or
xchg
cs
add
inc
xor
scas
shr
fcomp
lods
arpl
add
idivb
stos
xor
loopne
mov
ret
jns
repnz
mov
adc
pop
inc
lret
pushf
pop
and
shr
call
aad
push
sahf
andl
push
xor
dec
test
cmp
dec
pop
xchg
mov
push
mov
push
mov
insb
lea
sub
dec
mov
leave
loopne
shlb
in
xor
pop
mov
fsubrs
cli
out
add
cmpsb
cli
mov
sub
dec
xchg
pop
xor
add
dec
daa
loopne
test
std
push
cwtl
btr
jo
pop
cmp
out
jne
jge
cmpsb
insb
filds
cmp
flds
sahf
inc
rcl
jns
pop
icebp
cwtl
rolb
sbb
xor
test
cmp
cmp
mov
cs
dec
adc
jle
push
inc
shll
out
fcomip
jae
and
jl
jne
dec
jge
adc
ljmp
ret
dec
rcll
cmp
mov
lods
cmp
std
mov
cwtl
iret
lock
sbb
fs
insb
in
fldl
je
mov
xchg
mov
and
nop
stc
push
loope
shl
pop
mov
inc
jmp
out
lea
xchg
jl
inc
movsb
cmp
aam
push
cld
fcoms
stos
lahf
mov
jbe
cmpps
jl
and
lcall
xchg
inc
mov
flds
test
in
xor
addr16
movl
add
pop
iret
shll
pop
pop
lret
repnz
out
inc
es
mov
sub
or
imul
fcoms
gs
adc
jg
jg
gs
dec
cmp
outsl
test
std
mov
faddp
arpl
iret
movsl
out
jno
cmp
leave
sti
adc
pop
fsts
lahf
mov
in
jnp
enter
gs
sbb
xchg
add
cld
xchg
mov
jmp
add
popa
jle
ret
or
add
out
movsl
cld
push
gs
lods
dec
jbe
in
out
cmp
mov
adc
inc
mov
jb
sub
xchg
xchg
scas
sub
enter
cmc
pop
inc
add
out
mov
cli
out
push
jg
das
cld
xlat
mov
in
in
js
dec
sahf
cltd
sub
es
fnstsw
rclb
rcrl
arpl
sbb
add
sbb
in
fisubl
push
jg
push
jne
mov
notl
ja
mov
mov
out
fsubr
jle
scas
int3
shl
and
mov
xchg
xchg
repz
xor
gs
cwtl
jno
mov
push
dec
push
out
iret
flds
cmp
xor
mov
bound
jp
movsb
fisubrl
shrl
gs
lahf
and
test
loope
dec
xlat
pop
jecxz
mov
dec
xor
or
mov
test
push
or
jb
pop
cmp
aaa
add
or
addr16
add
sbb
sar
iret
roll
xchg
aas
jo
xor
mov
push
popa
sub
fbstp
lock
xchg
and
lret
in
stos
mov
mov
lcall
and
inc
xchg
cli
mov
es
jle
pop
cmpsb
leave
dec
ss
or
fsubr
sub
adc
ret
orb
sbb
push
push
ljmp
dec
jae
or
or
push
outsl
cmpsb
lcallw
pop
in
pop
push
mov
shlb
cwtl
or
imul
call
rcll
pop
mov
or
shll
sahf
sbb
mov
imulb
loopne
xchg
or
cmp
inc
and
movsb
in
sub
iret
icebp
pop
int
call
adc
sub
jno
push
jmp
lds
push
pushf
inc
mov
arpl
out
das
jae
out
fs
mov
insb
mov
push
sub
test
sbb
cmp
lret
mov
dec
push
xchg
jle
adc
sub
loope
push
adc
xchg
ds
xlat
popf
sbb
out
cmpsl
inc
and
punpcklwd
sbb
test
push
pop
or
jp
daa
pop
or
pop
orl
mov
xchg
sub
mov
je
jge
int3
adc
fidivs
movl
dec
pop
mov
xchg
dec
sbb
push
fstpl
pop
lahf
movsl
inc
lahf
jge
aad
add
je
cmp
adc
and
out
clc
jecxz
fs
or
lods
push
iret
mov
jns
push
insb
push
ljmp
dec
push
ljmp
ffree
or
jnp
or
fistl
mov
out
gs
push
xchg
loop
and
aas
inc
dec
xchg
mov
sbb
ds
loopne
inc
loop
adc
sbb
rorb
push
data16
mov
mov
and
stc
mov
sahf
js
int3
and
ds
dec
loopne
incl
cmpsl
lahf
ss
add
ficoml
dec
xlat
fwait
repnz
mov
mov
xor
cmp
ljmp
and
cmp
aaa
aam
in
add
mov
into
adc
es
in
es
xchg
cmp
jmp
shll
sub
add
mov
jp
pop
dec
fisttpll
lock
idivl
mov
pop
or
arpl
das
and
jmp
add
xchg
nop
dec
sbb
mov
xchg
lret
xor
push
inc
dec
push
pop
push
jns
inc
jge
add
lods
pusha
lret
jle
mov
push
cmc
add
lods
iret
mov
pop
cld
pop
mov
stc
imul
jmp
sbb
mov
sub
test
xor
data16
int
mov
mov
repnz
test
mov
shr
jno
movl
inc
jmp
out
rol
sub
clc
mov
xor
push
jl
outsl
fidivrs
sarb
jnp
xlat
xor
inc
or
mov
aad
mov
es
push
sub
test
sub
test
cs
push
dec
cmp
notb
fld
or
pop
out
push
pop
cmp
test
jp
lds
and
inc
jne
and
pop
out
lods
pop
popa
pop
loope
test
xchg
negb
jbe
inc
pop
cmp
or
jp
xor
inc
in
mov
push
pop
fbld
sub
xchg
jl
loope
mov
and
es
popf
loop
sub
cmp
lods
sbb
xlat
in
pop
popa
popa
push
xchg
push
movsb
pop
mov
inc
or
push
push
in
jae
and
push
rcrb
je
idivb
ss
mov
inc
stc
cmpsl
repz
and
outsl
and
pop
xor
in
mov
clc
mov
insb
rclb
into
imull
pop
pop
je
and
sub
jo
mov
push
xorb
inc
arpl
lods
dec
xor
int
int3
popa
cmpsb
cmpsl
shll
psrad
add
lods
push
pop
sub
jne
mov
sbb
pop
mov
xchg
sbbb
mov
test
clc
cmc
push
mov
pusha
ret
lods
mov
xchg
pop
test
dec
mov
int
lcall
pop
mov
lret
add
cmp
sbbb
je
pop
sub
stos
xor
jo
sub
cwtl
nopl
popa
jb
pushaw
mov
and
lret
sub
loop
mov
hlt
mov
scas
loopne
mov
adc
pop
dec
insb
mov
cmpsb
add
test
xor
jle
lea
mov
inc
xor
pushf
out
and
or
xchg
lea
pop
imul
xchg
xchg
sub
xchg
dec
aad
data16
shlb
mov
shlb
das
imul
push
dec
fadds
mov
insb
mov
cmp
outsb
outsb
pop
loop
or
mov
lea
out
test
pop
fs
jge
bound
cmc
cmp
cs
lea
test
jl
cmpsl
sbb
sub
xchg
imul
push
xor
xchg
xor
and
push
popf
fistpl
mov
mov
ret
jge
cmpsl
lock
mov
fstps
sbb
imul
adc
xchg
fsub
pop
testl
mov
mov
fists
in
and
pop
jge
movsl
xchg
push
cmp
add
mov
test
or
jno
imul
xchg
mov
data16
xor
in
roll
and
std
mov
pop
push
push
and
dec
fisubl
test
push
repnz
add
daa
mov
push
push
jo
out
shrb
mov
subl
adc
pop
jbe
or
sbb
icebp
shr
pop
mov
cli
aaa
arpl
adcl
adc
push
ja
test
pop
fwait
adc
dec
xor
aas
aad
jp
xchg
or
push
cmp
mov
cmp
notb
mov
stos
ja
jns
movsb
pop
stos
lcall
sbb
jbe
mov
out
jno
daa
jno
adc
nop
out
movsb
fiaddl
cld
loopne
xlat
cmc
es
push
sub
js
push
cmc
daa
outsl
sbb
rdpmc
sarb
add
sbb
push
mov
pop
xor
xor
cltd
sub
xchg
xchg
mov
xor
dec
daa
push
test
in
add
add
or
adc
shlb
adc
popf
inc
dec
test
mov
ret
push
out
cli
push
xor
stos
mov
stc
rolb
mov
jnp
js
mov
cmp
or
aas
jne,pt
mov
clc
test
iret
dec
push
jne
mov
pop
insl
inc
repz
jno
fsts
hlt
fs
xor
mov
jne
outsl
push
inc
mov
inc
dec
iret
std
movsb
movsl
mov
pop
andb
movsl
add
add
add
inc
imul
push
xor
xchg
cltd
push
and
pop
sbb
mov
adc
arpl
sti
dec
and
mov
loopne
jo
sub
outsl
lods
pop
push
gs
movl
in
outsb
sbb
daa
xlat
les
sbb
scas
daa
hlt
das
pop
push
nop
dec
out
lret
mov
add
into
cs
cs
jb
cs
jmp
mov
sbb
cmp
out
daa
inc
xchg
or
push
cmpsb
cld
notl
clc
lds
mov
aas
cli
inc
dec
sbb
xor
scas
stc
loopne
orl
imul
pop
andb
aaa
rorl
cmp
jl
fldz
mov
js
mov
adc
fists
pop
xchg
fistpll
das
adc
pop
dec
test
popa
test
arpl
inc
inc
xlat
sub
cmp
pushf
hlt
mov
push
rcl
mov
add
lock
cmp
ds
imul
lods
fwait
and
out
sub
jp
inc
adc
testl
jae
out
and
and
jge
aad
cmp
rorl
pop
push
mov
popf
sti
in
push
call
add
outsl
shrb
mov
inc
inc
xor
jmp
std
into
fwait
mov
mov
jp
ss
cmc
lea
or
sub
lods
fwait
loop
scas
lea
or
jecxz
icebp
mov
xchg
jl
pop
lret
jmp
fcmovbe
pop
xor
out
sub
cmpsb
aam
fldcw
rorl
jp
dec
in
sub
clc
loopne
and
sub
stos
inc
mov
rcrl
hlt
xor
dec
push
jbe,pn
mov
shlb
iret
dec
mov
lea
loope
mov
stos
inc
push
vfmsub132sd
ret
fwait
jp
aas
hlt
leave
fsubrs
add
cli
fcmovnb
cmp
xor
pop
jbe
and
push
mulb
out
sub
or
ret
inc
shlb
or
scas
lods
inc
idivb
xchg
ja
inc
insb
stos
jno
sbb
mov
dec
iret
jecxz
insb
cmc
pop
and
addr16
sub
iret
aas
dec
test
jb
outsl
loop
sbb
lock
cs
dec
mov
fstl
scas
out
outsb
idivb
rorb
jmp
jbe
stos
and
sub
cmp
test
push
cmpsb
pop
jne
jo
ds
xchg
sub
push
sub
xchg
cmp
pop
sbb
testb
jbe
das
or
test
pop
pop
push
xor
in
mov
mov
out
or
enter
subb
inc
xchg
shl
outsb
sub
fs
cmpsl
lock
cmp
fscale
push
imul
pop
jb
or
nop
aad
or
imull
icebp
movsl
lret
pop
shll
decb
or
or
push
call
icebp
ljmp
adc
jae
xor
ficomps
sub
mov
adc
and
js
fcmovnu
push
jnp
ror
out
fidivrl
aas
xor
test
sub
cmp
mov
cmpb
jecxz
enter
mov
das
es
add
mov
xchg
and
jns
push
xor
ja
add
add
xor
xchg
je
cmp
push
inc
insl
mov
jp
lcall
adc
push
pop
in
popf
fcomps
hlt
in
pop
hlt
jmp
jo
dec
mov
cmc
adc
adc
inc
add
jle
xor
mov
jl
xor
lock
rcl
fldenv
inc
and
and
xor
sbb
push
loope
repnz
daa
addr16
jmp
and
test
lea
mov
mov
add
adc
imul
rclb
or
sar
xor
dec
data16
sub
mov
and
sbb
outsl
aas
xlat
and
inc
test
in
mov
inc
xchg
adc
sub
pop
xchg
jge
mov
loope
push
cmp
sub
stos
insb
addl
bound
aad
jnp
sbb
mov
push
insb
pop
ljmp
xor
ds
xor
xchg
test
imul
rclb
add
xlat
push
xor
cmpsl
xor
pop
dec
push
rclb
add
repnz
xchg
cmc
lods
cmp
dec
inc
pusha
sub
mov
lea
iret
mov
fcomi
cmc
faddl
push
pop
adc
ret
mov
mov
call
out
jge
ret
cmp
pop
jae
mov
fld
leave
stos
add
aam
ret
mov
test
adc
mov
lea
push
push
mov
mov
aas
cmp
xchg
jmp
adc
xchg
or
xor
ss
addr16
ret
dec
xchg
in
inc
mov
and
mov
xor
test
out
jecxz
insb
jl
push
mov
in
ja
add
mov
movsl
sub
dec
push
push
int3
ds
mov
dec
cltd
ds
mov
es
sbb
leave
jnp
out
ds
in
call
movsl
scas
xchg
pop
in
sbb
fstl
jmp
jnp
adc
js
inc
shlb
cmp
out
or
pop
jb
xchg
std
stos
xchg
lock
sti
data16
test
mov
daa
xchg
lahf
testl
fidivl
and
jmp
subb
mov
add
jg
push
or
cmpsb
adc
lret
mov
sbb
jg
jns
insb
or
and
and
xchg
lea
dec
fstpl
inc
setl
fidivs
ljmp
mov
ret
bound
in
pusha
int
test
repnz
pop
sub
rcrb
mov
hlt
fmuls
sbb
idivb
lcall
xor
gs
bound
push
ss
fildll
ja
adcl
jnp
shlb
cmp
test
cwtl
loopne
add
pop
sbb
mov
insl
inc
sub
mov
popf
cltd
xor
mov
lock
mov
xchg
popa
xor
scas
push
push
dec
push
pop
rcrb
pop
clc
arpl
push
jbe
aaa
ljmp
jmp
pop
test
hlt
rcrb
std
mov
ja
and
lods
movb
mov
sbb
adc
insb
insl
stos
dec
xchg
xlat
jg
push
sbb
mov
pop
movsl
lret
dec
mov
xlat
mov
mov
inc
dec
andl
cmp
cli
push
stos
nop
test
push
pop
enter
adc
cmp
and
inc
inc
adcb
ljmp
mov
daa
xchg
mov
adc
stos
and
fs
lods
mov
sub
inc
mov
xor
repnz
mov
movsl
mov
or
outsb
mov
or
cmp
leave
xchg
xchg
sub
mov
fsubrl
test
jb
addr16
pop
pushf
rorb
mov
ds
push
inc
push
out
aas
call
push
test
pop
cmpsb
subb
sti
cs
out
mov
jo
mov
mov
xor
fildl
mov
mov
or
dec
pop
pop
mov
stos
jge
into
out
aad
jnp
addr16
push
pop
into
cmp
xchg
rorl
mov
sub
inc
insb
in
cwtl
xor
lock
fstps
cmp
in
loope
mov
inc
test
cmpsb
call
addr16
mov
es
repz
fstl
fprem1
jb
cmc
dec
ds
iret
push
mov
call
inc
frstor
fdiv
mov
mov
into
rcrb
stos
daa
data16
mov
bound
push
inc
jnp
outsb
inc
cmc
lock
mov
sbb
lahf
inc
scas
std
mov
or
pop
sub
test
sbb
mov
popa
sub
jl
cmp
divl
and
ss
pop
add
mov
pop
xchg
jns
and
add
clts
xchg
aaa
outsb
or
les
jge
and
lods
enter
add
into
cmp
cmpb
sbb
test
aam
popf
lea
mov
jecxz
loopne
shll
cmp
sub
xchg
or
mov
mov
pop
bound
add
mov
adc
lret
pop
imul
pop
shlb
cwtl
push
jl
jbe
lret
les
faddl
xchg
adc
sbb
push
imulb
popl
jns
lret
xor
addb
lcall
mov
adc
loop
enterw
sbb
xchg
imul
jp
sub
pusha
dec
cli
popf
movsl
repnz
fsubs
mov
push
jmp
lea
pop
loope
xlat
add
popa
into
mov
jno
das
adc
and
pop
scas
sahf
push
mov
cmc
and
popf
fwait
mov
test
movsb
movsb
xchg
dec
and
adc
out
and
pop
vmovntps
cli
jecxz
repnz
lret
ss
jmp
ja
sub
inc
pop
cltd
dec
pop
or
sbb
rolb
in
sub
ret
ficoml
lea
jg
jno
pushf
test
inc
repnz
xchg
outsb
repnz
hlt
inc
lods
jne
and
inc
into
cmpsb
adc
imul
insb
jne
cld
jg
stos
or
jmp
ret
xor
jb
out
xchg
js
test
inc
dec
cmp
xlat
mov
call
or
inc
sbb
and
mov
push
pop
mov
shll
or
loop
cmp
lahf
adc
js
mov
cs
push
dec
clc
pop
decb
scas
xchg
repnz
stos
pusha
sbb
ret
mov
cltd
xor
mov
inc
dec
filds
repnz
push
mov
loop
jge
dec
imul
push
dec
into
sbb
out
mov
push
push
push
adc
xor
loope
clc
pop
pop
xchg
pop
lea
dec
inc
movsl
shlb
lret
shlb
incb
fimuls
push
imul
xorl
push
movsb
or
or
fnstsw
sbb
mov
lock
or
mov
add
outsb
jle
rclb
stos
ret
mov
adc
or
pushf
mov
or
jg
and
dec
cmp
lock
mov
or
push
mov
pop
add
jecxz
push
mov
fs
add
iret
inc
mov
les
mov
addr16
pop
add
fildl
stos
aaa
daa
inc
insb
jns
mov
mov
and
cmp
mov
jmp
cli
cmpb
lods
push
xchg
mov
add
outsl
aam
sbb
outsb
lods
push
loope
mov
jnp
jae
cs
xor
mov
imul
and
js
add
xor
ds
or
sub
lods
sub
je
lea
jae
or
je
testb
fstl
hlt
adc
jle
pop
loop
push
les
insb
push
adc
pop
fdivrl
push
aad
jae
dec
fistps
mov
xor
bound
jecxz
cmp
xor
inc
test
xchg
test
je
mov
loopne
dec
or
hlt
fwait
dec
nop
loopne
int3
out
lods
and
or
sub
clc
pop
fisubrs
push
sbb
inc
fcomps
xorb
push
jg
gs
out
cmpb
arpl
daa
jbe
mov
decb
hlt
push
inc
adc
jp
and
jno
std
xchg
xor
or
sahf
inc
xchg
jae
lock
sbbb
outsb
or
mov
icebp
dec
mov
push
inc
fsubrs
xor
pop
addr16
pop
loopne
lods
bound
mov
cmc
ljmp
mov
in
mov
cmpsl
mov
adc
adc
dec
push
mov
dec
adc
push
lds
sbb
mov
pusha
loop
mov
pop
add
mov
dec
cmc
cmp
scas
adc
sbb
ror
push
scas
adc
mov
cmp
cwtl
sub
jmp
mov
jno
sbb
cli
into
lret
aaa
inc
icebp
push
jae
outsl
mov
sub
mov
mov
cmp
sub
or
xchg
fdivrl
out
aad
dec
cmc
cmpl
adc
call
xor
add
addr16
adc
int3
les
push
or
push
cltd
or
xchg
or
xlat
scas
iret
mov
or
or
add
insl
mov
mov
cmp
jmp
inc
in
lea
xchg
aaa
xor
lea
dec
cmp
and
sbb
movsb
jge
sub
dec
notl
js
xor
xchg
outsb
push
out
lcall
fdivr
push
push
enter
popa
inc
dec
xchg
adc
and
mov
imull
hlt
shll
push
pop
fstpl
fiadds
and
addr16
insl
iret
pusha
dec
xchg
pop
mov
dec
les
jg
xor
xor
xchg
test
test
inc
xor
sub
ja
dec
popa
sbb
and
lock
sbb
dec
subl
pop
int
dec
ss
adc
dec
xchg
and
fsubrp
pop
add
push
push
mov
mov
pusha
in
adc
xor
outsb
jp
push
int3
scas
sub
add
xchg
adc
push
out
in
or
mov
ljmp
mov
lods
push
inc
inc
clc
fisttpll
adc
hlt
jbe
loope
jae
pop
insl
jle
mov
out
mov
xor
push
out
jmp
add
fs
test
imul
cwtl
pop
add
mov
mov
aas
mov
movsb
mov
in
pop
in
fwait
ja
adc
lds
cltd
xor
imulb
es
and
xor
aad
inc
int
sbb
xor
rcr
outsl
nop
adcb
popf
cmp
xchg
push
decb
rorl
adc
pusha
lods
aaa
lods
inc
push
cs
xor
test
mov
jge
loope
xchg
pop
xchg
rclb
shrb
or
mov
cs
mov
sbb
cmpsb
fs
cmp
imul
stos
cmpb
cmp
xchg
out
mov
and
arpl
lods
lcall
dec
jno
fadd
repnz
lods
aaa
cmp
stos
lahf
cmpsl
lret
sbb
icebp
push
pushaw
icebp
xor
dec
popf
xor
mov
jle
lock
jo
add
mov
xor
xchg
mov
xor
imul
mov
inc
pop
fisubs
or
addr16
loop
mov
pop
jmp
sub
icebp
mov
in
jecxz
es
xchg
xchg
ret
xchg
shll
cmp
xor
lock
hlt
pop
mov
movsl
sbb
adc
cmp
std
lock
adc
sub
jmp
jno
pop
scas
mov
mov
inc
fildl
repnz
mov
cwtl
sub
mov
adc
inc
aam
cmpb
ret
jl
mov
js
mov
pop
push
ss
fistpl
popa
clc
dec
push
fwait
xlat
cwtl
movsb
js
xchg
mov
jp
jae
lret
add
lods
sub
test
nop
push
push
add
test
scas
inc
mov
sbb
fwait
xchg
imul
fisttps
mov
jecxz
repnz
mov
mov
jo
mov
lret
lods
mov
shrl
int3
in
repnz
xor
jne
lcall
xchg
test
sahf
ret
pop
in
ds
cltd
adc
fwait
mov
mov
sbb
fwait
in
loope
not
ss
cs
jecxz
pop
stos
int3
idivb
push
dec
out
clc
mov
push
call
adc
push
pusha
jbe
push
cmp
inc
faddp
xor
clc
pop
jns
xor
cmp
aad
out
mov
mov
mov
fcompl
movsb
push
orb
outsl
std
dec
xor
pop
cwtl
into
shlb
sar
repz
andb
in
clc
pop
adc
not
out
pop
cmp
inc
rolb
jecxz
insl
mov
inc
dec
sub
rclb
scas
or
iret
rcrb
pop
int3
stc
pusha
xchg
push
inc
repnz
inc
movsl
push
cs
outsb
sub
xchg
pop
jbe
push
push
lock
cmpsb
mov
ret
pop
clc
add
and
xor
pop
push
adc
mov
lret
or
mov
push
loop
lds
mov
cmpsl
shll
sbb
repnz
jecxz
test
xor
mov
xor
es
pushf
lock
inc
mov
dec
pop
inc
or
aad
in
cmp
jb
jecxz
imul
shlb
sub
mov
push
mov
mov
fisttps
sahf
mov
in
xchg
es
lods
pop
cmp
rorl
pop
xor
adc
and
push
mov
jne
subb
pop
cmp
addb
out
ja
insl
repz
xor
push
fsubl
clc
cmp
xchg
push
lods
push
into
pop
js
cmp
adc
repnz
pop
cmp
lret
cld
push
dec
sbb
lcall
add
mov
push
test
xchg
daa
jmp
arpl
cmp
out
ljmp
test
js
pusha
fcmovnu
push
int3
xchg
mov
xor
insl
sub
pop
bswap
in
pop
in
mov
out
jecxz
sub
inc
mov
popf
les
pop
scas
sahf
or
cwtl
loope
enter
lock
add
cmp
repz
aaa
arpl
fsubrl
and
shll
add
adc
push
pop
cmc
add
sub
jnp
mov
mov
push
insb
xchg
shll
sbb
mov
int
mov
js
out
pop
push
out
rorl
xor
jmp
dec
xchg
imul
add
mov
in
and
movsb
aaa
inc
adc
test
movsb
jo
cli
sbb
sbb
mov
inc
int
popf
outsb
enter
mov
jg
aam
addl
gs
mov
enter
sub
pop
mull
icebp
pop
fstpl
rcrb
sub
negl
mov
js
pop
jp
xor
movsl
lret
in
push
nop
or
xlat
mov
xor
inc
xchg
jbe
mov
jg
mov
and
mov
shl
sahf
daa
or
out
mov
repnz
pop
movsb
add
adc
iret
inc
or
sbb
mov
adcl
pop
or
xor
ret
les
les
sub
jne
pop
inc
clc
sahf
out
les
stos
xchg
pusha
mov
popl
pusha
push
push
pop
or
test
cwtl
repnz
fxam
out
mov
pop
mov
jle
int3
es
js
std
iret
jo
and
mov
into
neg
inc
pushf
ljmp
push
or
rcrb
push
xchg
push
jl
dec
pop
push
and
insl
clc
icebp
pop
adc
mov
es
inc
das
dec
daa
mov
push
scas
test
pop
out
xor
lock
pop
xchg
jp
test
or
add
mov
ja
ror
inc
cmp
add
fstp
or
mov
adc
sub
sbb
jle
cmp
fldl
mov
mull
insb
add
mov
shll
xchg
popa
cmp
push
jne
xchg
mov
mov
lea
push
mov
push
mov
in
negb
mov
std
dec
cwtl
add
loop
mov
xchg
scas
test
pop
roll
insl
add
in
movsl
ds
push
inc
jecxz
push
cld
mov
sahf
dec
inc
repz
into
hlt
jae
jbe
adc
loope
lret
xchg
push
dec
mov
test
out
xorl
xchg
add
dec
inc
mov
xchg
idivl
stc
cli
sbb
mov
out
inc
pop
dec
ret
push
sbb
push
jne
cmpsb
adc
icebp
shl
xchg
ds
test
mov
pop
cmp
mov
sub
pushf
call
mov
subb
imul
adc
jae
stos
dec
inc
sbb
mov
mov
fcoml
jecxz
mov
push
xor
mov
cmp
jp
mov
sti
cmp
shll
sbb
cli
lods
cmp
and
pop
mov
mov
jne
mov
clc
mov
sbb
sbb
xchg
ret
adc
inc
ss
jnp
imul
rclb
push
loop
insl
jmp
and
adc
pop
mov
cmc
ret
std
mov
xor
pop
pop
jnp
xchg
xor
in
mov
push
daa
mov
xchg
gs
clc
insb
adc
arpl
jb
jg
fisubl
jp
pop
cmc
mov
call
scas
ds
xchg
xchg
fdivr
nop
cmp
ja
test
aas
daa
rorb
test
ret
sub
adc
pop
cld
adc
inc
and
mov
nop
jmp
sub
inc
jl
mov
das
inc
xor
dec
push
push
cmp
jae
ss
call
jne
xor
in
into
popa
out
icebp
aam
xchg
cwtl
push
sub
std
les
lods
repnz
pop
dec
shr
add
shrl
mov
mov
push
mov
add
add
sahf
lahf
push
mov
fisubrl
hlt
add
mov
and
xchg
jae
pop
push
icebp
aas
inc
fwait
cmp
lock
mov
test
rcl
and
loop
push
inc
pop
mov
jl
lret
out
adc
lds
test
dec
xchg
fstpl
mov
loope
clc
pop
popf
cmp
or
mov
inc
out
lock
loopne
imul
add
sbb
mov
call
add
push
iret
adc
das
bound
xor
sbb
mov
imul
mov
lahf
cmp
dec
xor
inc
popa
cmp
jb
stos
shll
roll
in
cmp
pusha
ret
pushf
test
cmp
sbb
xor
je
mov
stos
push
push
clc
repnz
jge
or
pop
test
sbb
cltd
or
cmpsl
xor
cmp
jp
pop
lea
and
add
and
jbe
mov
shll
je
fildl
or
dec
out
enter
sub
and
gs
sub
shlb
dec
lock
pop
fidivl
test
sahf
fildl
stc
adc
mov
adcb
mov
stos
enter
fsubrl
stos
in
xchg
fistl
in
scas
sbb
xchg
push
jbe
nop
dec
and
orb
pop
adc
jle
mov
push
mov
lahf
and
fldl
push
sbb
ljmp
inc
cld
xchg
inc
andb
je
xchg
or
loope
sub
and
loop
add
ficoms
jnp
rcll
mov
sar
ljmp
and
sbb
gs
js
pop
and
jbe
cmp
ljmp
mov
sub
sahf
jmp
loop
fnstsw
cmp
ficomps
pop
aad
mov
mov
mov
enter
add
out
leave
out
sbb
push
jne
push
inc
mov
mov
jecxz
int
jbe
inc
mov
popf
inc
mov
outsb
jp
call
push
pop
out
and
pusha
mov
call
mov
fldln2
jl
and
and
sub
sahf
push
ss
inc
mov
sbb
or
mov
xor
push
mov
mov
mov
outsb
iret
push
jno
insl
cs
lret
icebp
xor
push
jg
je
and
lcall
testl
das
inc
jns
xchg
cmp
push
dec
cmp
jb
xorl
add
mov
mov
lahf
push
cwtl
push
push
jbe
sub
in
jge
dec
or
repnz
mov
cwtl
push
inc
push
inc
inc
arpl
test
es
aam
mov
arpl
sbb
leave
int3
jecxz
popf
mov
movsb
xchg
mov
lods
mov
lcall
loop
xorps
rol
das
dec
inc
dec
cmp
arpl
push
out
mov
mov
or
insl
lcall
test
loop
and
addr16
movsb
mov
mov
stos
push
pop
dec
lea
fldenv
rclb
or
es
jge
and
pop
dec
mov
pop
lret
dec
fwait
mov
and
call
xchg
cmp
push
cmp
mov
push
mov
rorl
mov
pop
mov
or
push
xchg
sub
or
fisttpll
cli
xchg
mov
sub
or
test
add
sbb
xor
in
bound
loop
sbb
adc
data16
mov
adc
push
into
pop
and
pop
sbb
movl
pushf
lret
jns
sbb
outsb
fsts
movsb
loope
leave
jo
popf
jle
outsl
add
sbb
lods
cltd
es
mov
lds
jle
ret
dec
sbb
mov
jb
pop
fstps
jecxz
test
sub
rorb
sarl
cmp
ret
repnz
dec
data16
lret
add
and
sub
or
adc
xlat
out
push
fs
dec
jbe
subl
push
pop
ret
or
ss
stos
es
sub
sti
cld
mov
hlt
rol
dec
enter
pop
dec
ss
aas
push
xor
loopne
pop
adc
push
inc
push
mov
mov
sarl
add
pop
mov
stc
fists
or
js
out
sbb
nop
pop
lods
pop
lods
lds
or
push
sub
popa
mov
aaa
cmpsb
pop
into
xchg
nop
pop
add
pop
pop
pop
dec
mov
cmp
mov
cmc
pushf
sbb
and
fbld
mov
popf
fiaddl
push
outsb
cli
mov
insl
pop
pop
movsb
mov
xchg
and
leave
lcall
adc
movsb
pop
repnz
push
pusha
jb
leave
cmp
jne
and
loop
dec
xor
or
or
cmp
dec
out
push
in
jne
push
push
dec
xchg
daa
push
fistl
outsl
mov
scas
ss
adcb
cld
cmc
cs
push
inc
xchg
mov
inc
sti
or
dec
mov
push
adc
mov
lea
push
xchg
int3
inc
out
je
mov
push
dec
inc
sbb
mov
imul
jb
mov
mov
out
les
lahf
fisubrl
push
inc
pop
inc
pop
iret
sti
imul
data16
sbb
jmp
and
pop
jo
std
popa
push
pop
or
sbb
movsb
testl
pop
jg
ja
xlat
clc
pushl
imul
pushl
add
xchg
cli
add
xchg
cmp
jb
dec
fs
test
dec
pop
cmpsb
mov
mov
xlat
fidivs
test
and
jne
pop
int
in
sub
sub
pusha
pusha
lea
cmpsl
mov
icebp
add
in
sbb
in
ljmp
or
or
scas
xchg
sbb
je
pop
fildl
pop
mov
cmp
mov
adc
enter
sub
cmp
imul
cmovbe
shrb
cli
sbb
fcoml
aaa
popl
les
cmp
adc
std
movsl
pop
lret
sbb
and
or
pop
pop
sahf
cld
idiv
xchg
loop
xchg
cmp
rorb
movsb
and
imul
arpl
push
lret
lahf
or
jbe
sbb
xchg
dec
cmp
fcoms
sub
push
cmp
in
aam
nop
xchg
movsb
cmp
in
mov
out
push
aam
dec
mov
and
ja
cld
popf
movsl
mov
adc
lods
cmp
mov
jge
cwtl
ljmp
mov
inc
lea
je
mov
ljmp
js
dec
fwait
cld
xchg
ret
cli
sub
push
sahf
pop
enter
and
cmp
jge
stos
popa
and
pop
jbe
lea
mov
cld
mov
xchg
ret
popa
mov
push
je
repz
lahf
inc
ljmp
bound
in
fcomp
addl
mov
clc
push
fiadds
pop
ds
mov
movsb
add
jecxz
push
and
jnp
cmpsl
adc
dec
cmp
enter
pop
pop
ret
aas
cmpsb
shrl
xchg
xor
jecxz
incb
jge
or
dec
lea
pop
xlat
push
mov
push
add
addr16
notl
gs
xchg
cmpsb
mov
pop
sbb
loopne
fmull
jns
test
popa
dec
insl
pop
add
gs
sti
add
outsb
sub
adc
xor
pop
add
rcr
cmc
lea
xchg
cltd
movsl
mov
mov
cmpsb
mov
jge
ficompl
lods
cmp
pop
add
inc
out
push
jns
xchg
mov
push
iret
dec
lds
and
stos
and
in
iret
sub
call
or
adc
lret
ror
cld
cmp
mov
pop
jb
sub
sarl
std
dec
ds
pop
cmp
jne
cmp
jmp
jg
xchg
or
jmp
cwtl
push
inc
push
xchg
js
jecxz
loopne
sbb
ficomps
mov
add
popa
pop
mov
ja
sub
insl
es
cmp
xchg
mov
fcmovne
mov
stos
in
push
ljmp
nop
or
pop
call
inc
or
cmp
or
pop
mov
dec
xor
lahf
sbb
inc
gs
mov
leave
push
add
sti
and
mov
lods
xor
adc
pop
ret
shrl
xchg
lds
je
sbb
ljmp
and
or
loopne
sub
into
push
lret
mov
xor
add
nop
add
pushf
popf
jbe,pt
repnz
gs
call
movsl
cmp
adc
test
or
addr16
dec
inc
int3
inc
xlat
bound
xchg
rcrl
mov
bound
out
enter
and
cltd
in
fists
aad
imul
mov
inc
decl
inc
or
pop
daa
and
jmp
push
mov
add
scas
es
xlat
inc
rolb
rcrl
xchg
mov
dec
mov
movsl
test
and
aas
cwtl
inc
push
dec
popa
lret
imul
inc
fsubl
ret
data16
push
call
inc
mov
pop
cmpb
call
jmp
in
dec
aam
push
scas
das
orb
cmc
ljmp
repnz
inc
mov
push
int3
pop
lods
out
cmp
adc
jno
data16
bound
js
push
call
mov
loopne
add
mov
mov
iret
mov
movsb
sub
sub
pop
add
repz
push
dec
outsb
mov
cwtl
push
ss
insl
sbb
in
lret
rcll
int3
sub
push
push
pop
mov
push
sbb
or
pop
mov
lods
mov
dec
adc
mov
lds
mov
or
jbe
sub
stos
sub
or
mov
and
leave
or
aad
ss
fcomi
dec
dec
sub
xor
lcall
in
loopne
xor
add
ds
lds
mov
addr16
dec
mov
sub
mov
push
push
in
bound
lods
cmp
idivl
xlat
and
addr16
mov
js
mov
pop
notb
gs
or
sub
mov
pop
cmp
lods
inc
add
mov
xorl
imul
dec
push
xor
shrl
adc
cmp
iret
popf
add
or
mov
out
jae
leave
cli
int
inc
mov
test
notl
or
pop
push
rcll
jbe
push
mov
sbb
push
dec
das
pop
mov
dec
inc
xor
fbstp
iret
imul
xchg
cmc
or
xor
inc
aad
repnz
push
and
and
and
movsb
ficompl
sub
sub
push
shlb
jo
arpl
hlt
popf
jns
push
lahf
xor
shlb
pop
out
arpl
or
mov
in
roll
dec
rcrl
fcomp
sub
jbe
scas
ret
sub
mov
scas
lahf
jg,pt
scas
xchg
add
cmp
push
leave
jle
aam
add
mov
xchg
popa
xchg
mov
mov
mov
scas
lds
mov
push
sbb
inc
pop
and
std
imul
pop
test
mov
jle
mov
leave
arpl
xchg
xorl
dec
cmp
push
push
mov
xor
and
pop
jmp
or
test
loopne
push
cs
mov
dec
cmp
dec
test
cs
mov
xchg
mov
pop
ret
sbb
cmp
pop
dec
sbb
jle
dec
lods
pushf
ja
stos
insb
cmc
cmpsb
mov
lock
push
scas
lcall
sbb
lcall
std
mov
mov
adc
dec
add
jbe
xchg
dec
cld
cmpl
inc
insb
rep
xor
xchg
clc
in
aad
jb
push
mov
dec
mov
out
fmulp
or
dec
cmp
data16
cwtl
mov
or
or
cmc
jno
and
imul
or
jmp
push
jns
int
out
adc
inc
fsubr
jae
pop
mov
dec
aad
push
mov
ljmp
and
rcr
push
cmp
jle
lds
loope
sub
push
dec
cmc
jbe
ja
jae,pt
mov
aas
mov
sbb
adc
loop
frstpm(287
fadds
or
xlat
pop
push
in
pop
sbb
push
mov
push
ds
jno
push
push
mov
imul
lods
daa
rcll
das
dec
push
add
dec
cmc
cmp
adc
lahf
fistpl
sbb
loop
cmpsl
mov
shll
cli
jmp
xor
jecxz,pt
scas
fiaddl
in
out
insl
adc
lods
mov
mov
mov
hlt
inc
clc
mov
or
xchg
shl
pop
sbb
and
cmp
xor
xchg
mov
pop
push
cmp
fdivrp
cld
decl
icebp
jge
inc
mov
inc
lret
icebp
sub
push
push
inc
movsb
lahf
dec
cmpsl
mov
subb
push
loop
pop
cltd
ret
arpl
out
dec
cli
mov
sub
sbb
push
push
sahf
add
cli
icebp
dec
mov
lods
scas
inc
mov
jl
mov
stos
dec
jae
adc
subl
fildl
bnd
xchg
mov
push
mov
pop
add
pop
ror
icebp
addr16
adcl
xor
cli
or
jo,pt
iret
xchg
decl
lea
hlt
pop
faddl
fldt
es
mov
add
adc
jnp
dec
push
out
cmpsl
inc
dec
mov
sbb
push
push
jnp
gs
rcrb
fldcw
sarl
pop
inc
mov
pop
jbe
xor
and
sub
pop
push
dec
lahf
pop
mov
out
shll
hlt
mov
shl
imul
or
dec
pop
inc
jmp
subb
dec
mov
mov
out
or
push
inc
call
leave
sbb
bound
loopne
pop
or
cmpsb
cmc
leave
sahf
cmp
cmp
jmp
jo
sub
aad
aad
mov
inc
std
stos
or
dec
js
std
icebp
or
and
jmp
adc
mov
adc
and
popf
arpl
rcr
xor
xor
movsb
mov
mov
cmp
lahf
xlat
aad
shll
or
xor
mov
int3
pop
jns
push
xchg
das
mov
test
mov
xchg
fisttps
inc
sub
push
and
scas
dec
fdivrl
int3
push
mov
aad
xchg
movsb
dec
mov
js
rorb
sbb
das
add
es
mov
jb
mov
mov
adc
or
dec
dec
outsl
in
std
dec
ret
fsub
inc
jbe
inc
sub
je
sbb
pusha
mov
xor
or
loop
decb
mov
imul
adc
jo
push
and
jg
push
loopne
sbb
inc
mov
ficompl
imul
cmp
mov
push
shrl
pop
insb
test
out
in
or
stos
inc
mov
pop
in
mov
and
mov
mov
sbb
inc
inc
stos
test
xchg
int3
mov
dec
cmpsb
mov
imul
js
add
ds
lods
sti
add
sub
mov
cwtl
mov
bnd
xchg
xor
push
xor
hlt
xchg
xchg
or
cs
inc
dec
bound
sub
les
xor
bound
add
std
mov
sbb
cmpsl
push
dec
or
outsl
push
mov
test
leave
push
pop
cmp
iret
mov
ret
mov
jmp
jnp
rcrl
imul
movsl
jle
sub
dec
or
repz
mov
loope
mov
in
mov
out
out
dec
imul
mov
sbb
dec
mov
dec
jb
dec
loope,pt
shr
cmp
in
shl
xor
cmp
xchg
xor
data16
aas
je
inc
mov
dec
sub
adc
adc
xorl
ror
stc
movsl
mov
push
xorb
sbb
stos
cmp
ljmp
aad
aas
lods
loope
push
icebp
stos
push
cmp
les
outsl
imul
jg
mov
nop
sub
fs
js
pop
repz
dec
dec
cmpps
arpl
repnz
sti
pop
out
sub
mov
mov
in
or
sub
aaa
jmp
adc
cmp
pop
xlat
xchg
jp
scas
xor
push
mov
mov
jb
mov
ss
inc
or
pop
in
stos
hlt
inc
dec
scas
xchg
sub
push
bound
ss
pop
sub
cmp
or
enter
test
and
stos
loope
mov
dec
sbb
add
mov
xchg
pop
cs
inc
imul
icebp
std
and
dec
nop
jo
xor
outsb
adc
or
adc
icebp
sbb
and
or
jmp
pop
insb
jmp
ret
jmp
gs
cmp
pop
cs
sbb
push
shl
lret
fiaddl
std
sub
lods
dec
mov
cmpsl
testl
xchg
fldenv
adc
xor
xchg
xchg
sbb
pop
sbb
lock
fisubrl
test
lods
and
lcall
dec
jno
fmull
std
xor
cli
mov
loopne
and
inc
test
imul
pop
stc
in
push
jg
adc
stos
inc
imul
bound
movsl
andb
out
pandn
or
test
bound
jne
push
or
imul
fdivrl
fbld
sbb
push
bound
add
out
out
pop
stos
outsl
mov
out
sbb
mov
fwait
repz
test
push
mov
std
mov
mov
les
pop
add
xchg
stos
mov
inc
shll
pop
lock
fwait
add
pop
push
xchg
dec
neg
push
mov
fdivrl
enter
nop
and
test
fisttpll
das
xchg
repnz
test
fs
xchg
adc
pop
mov
fdivrl
or
or
lds
jmp
mov
dec
ret
fnstenv
mov
es
add
aas
inc
sahf
scas
dec
xchg
or
fldenv
pop
mov
gs
insl
mov
fbld
xchg
adc
dec
in
leave
mov
jbe
mov
pop
das
xchg
aam
pop
ss
xchg
movsb
lahf
shll
negb
popf
xlat
and
pop
pop
cli
or
ror
sub
fucomip
mov
das
push
testb
js
outsb
xchg
in
or
cmp
and
xchg
bound
dec
rcl
and
gs
inc
inc
out
into
dec
inc
and
out
dec
push
jmp
in
js
pop
popf
scas
adc
rorb
cmp
popf
inc
out
mov
inc
mov
push
cli
ja
ret
push
pop
pop
push
inc
jmp
mov
cmpsb
jge
mov
adc
xor
mov
fdivrs
cmpsl
or
dec
loopne
cmp
pop
jmp
fwait
push
push
frstor
sub
push
jmp
lcall
cs
mov
mov
enter
mov
adc
cmp
imull
xrelease
gs
rcrb
xchg
sbb
gs
stc
test
pop
add
out
pop
sbb
into
scas
xchg
clc
dec
daa
inc
std
lahf
jge
shll
jle
mov
xor
gs
inc
in
xor
jb
dec
mov
in
sub
xchg
subb
mov
aam
movsb
stos
sbb
repnz
mov
and
test
call
lret
or
int
aad
xchg
or
test
mov
jmp
or
cld
mov
mov
arpl
sti
pop
pop
mov
adc
adc
jns
jns
mov
mov
arpl
ja
js
or
inc
cmpsl
jmp
sub
or
icebp
test
mov
cmpsb
stos
scas
in
cld
cmpsl
pushf
jno
sub
xor
or
push
pop
in
push
loop
repz
push
test
xchg
movsb
and
adc
push
mov
idiv
ret
adc
jo
adc
add
mov
pop
and
cld
imul
push
pop
and
cld
in
ja
or
dec
push
push
dec
adc
mov
fimull
xor
mov
push
cwtl
cmp
sbb
add
jno
sbb
mov
jecxz
sbb
notl
pop
sbb
cmpsl
jmp
mov
adc
rclb
imul
mov
sarb
jo
mov
inc
mov
clc
jnp
sbb
adc
jle
cltd
ror
test
xchg
inc
dec
mov
xchg
cmp
xchg
imul
mov
data16
test
loop
roll
movsb
test
xchg
pop
jne
cmp
mov
cs
xchg
xchg
outsb
bound
xlat
pop
rcll
push
mov
xchg
bnd
dec
jo
or
mov
out
arpl
xchg
rcrl
cmp
jge
jle
xor
fists
aam
xchg
les
pop
dec
and
imul
mov
nop
push
scas
js
out
scas
lret
xchg
and
dec
imul
ljmp
cmp
popf
dec
sub
mov
mov
push
sub
cmpsb
pop
xchg
test
int3
xchg
cld
adc
hlt
jbe
imulb
cld
add
xchg
jnp
bt
bound
jo
cmc
sub
test
test
push
mov
loop
mov
dec
mov
mov
ret
les
pop
xchg
pusha
fcmove
sbb
pushf
push
insl
cld
lods
push
sbb
imull
lods
jne
das
stos
inc
push
xchg
outsw
pop
or
fldl
aam
mov
sbb
aad
hlt
mov
adc
ss
stos
mov
clc
out
add
loop
je
je
adc
add
cmp
testl
iret
add
test
sub
ljmp
fisttpll
xchg
adc
or
pop
and
and
or
xor
xor
dec
xchg
out
add
cs
lds
sub
pop
js
push
xchg
stos
iret
lret
add
cmp
outsl
repnz
sub
mov
xor
cli
or
test
mov
xchg
and
pop
inc
dec
sarb
fmul
mov
inc
ja
dec
pop
adc
popf
mov
mov
jl
int3
pushf
dec
push
jle
lea
negl
inc
inc
and
and
sub
cli
outsl
pop
test
xor
push
pusha
into
jg
mov
or
test
sub
mov
stc
jge
enter
inc
push
mov
dec
cmp
bound
ret
fidivrs
xor
sub
pop
call
sbb
pop
push
xlat
dec
sub
cmpsl
push
scas
div
div
mov
sub
enter
lret
pusha
das
xchg
dec
loop
jg
add
xchg
pop
mov
mov
pop
cmp
jnp
sbb
mov
or
mov
sbb
mov
jg
mov
pop
cmpsl
popa
pop
push
aas
add
nop
adc
or
sbbb
test
mov
lahf
in
jecxz
add
cmp
mul
mov
and
mov
or
loope
dec
and
or
in
pop
test
xor
pop
fs
jo
pusha
scas
test
movsb
xchg
movsb
and
addr16
xchg
xchg
stc
pop
test
testl
js
mov
rcrl
inc
sbb
int
icebp
mov
xor
test
test
insl
cmp
and
adc
push
int
add
adc
jns
sbb
mov
iret
dec
add
xor
dec
sbb
fisubl
mov
std
sub
lahf
je
mov
xchg
jl
insb
movsl
stos
inc
aas
lret
sub
imul
repnz
jmp
ljmp
stos
mov
mov
mov
cmp
sbb
push
ss
jno
scas
sahf
out
inc
mov
cs
test
or
or
mov
push
cmp
push
call
cmp
cmp
dec
aas
lea
pop
rcr
push
xchg
push
fisttps
pusha
in
aas
outsl
cmp
or
mov
xor
jnp
push
test
int3
xor
cmp
in
pop
int
into
push
in
mov
sub
push
subb
enter
sti
insb
fdivl
lock
push
mov
cld
jne
mov
push
dec
roll
push
xor
in
out
xor
fst
std
push
test
dec
daa
rorb
int3
cmp
mov
repz
jg
inc
lret
lcall
xchg
sbb
rorl
in
mov
cmp
pop
cli
inc
xor
xchg
cmp
je
sbb
mov
sbbl
out
test
stos
inc
aas
sub
fcompl
adc
xchg
in
jae
lds
xchg
mov
es
adc
cs
sub
mov
inc
shlb
cmp
mov
int
popa
push
sar
mov
decl
out
shlb
fadds
mov
addr16
push
push
pop
outsb
jno
dec
push
inc
push
adc
imul
loope
dec
sbb
sbbb
sbb
mov
inc
or
cld
sub
mov
jmp
adc
xor
stos
jb
ja
inc
and
mov
xchg
pusha
jo
push
mov
mov
pop
loopne
sarl
push
pop
aas
push
xchg
stos
dec
lods
mov
and
mov
icebp
cmp
sbb
ss
jmp
jns
mov
push
popa
sbb
sbb
push
xor
in
ret
push
addl
popl
adc
mov
leave
test
pusha
insb
add
or
call
adc
nop
int
sub
fiaddl
mov
rcll
xchg
mov
data16
xor
mov
dec
dec
jmp
mov
iret
data16
mov
jle
sub
pop
scas
pop
mov
pusha
jo
adc
sbb
daa
mov
cltd
pop
adc
test
mov
cmp
ret
sub
pop
fnstsw
mov
outsl
mov
dec
jnp
loope
inc
and
cmpl
cltd
mov
mul
sbb
mov
aas
xor
sbb
xchg
dec
push
pop
pop
mov
jle
push
xor
adc
and
or
shlb
std
shlb
ficoml
insb
int
lret
lahf
fnstsw
pop
enter
adc
enter
xor
mov
push
call
cmpsl
cmp
sarb
pop
loop
fs
lcall
stos
ds
loopne
inc
jb
xchg
or
and
push
mov
add
mov
ret
shll
cmp
pop
mov
ljmp
xchg
jae
dec
or
insb
push
jmp
xor
push
xor
dec
inc
adc
in
mov
push
les
or
lods
add
jle
insb
orb
mov
xlat
adc
fistpl
out
push
popa
out
sbb
pop
dec
sarl
test
shrb
xchg
cwtl
add
pop
fiadds
mov
call
mov
xchg
in
jg
or
push
bound
lahf
push
pop
sahf
lds
out
cmp
cwtl
pop
out
mov
push
ret
dec
out
enter
fs
mov
pop
inc
pop
pop
sbb
test
stc
jge
in
and
and
scas
test
movsl
sub
push
cs
test
scas
jl
stos
hlt
test
lret
stos
ja
add
jne
fsubrl
fisubrs
fisubs
cltd
outsl
push
sbb
ds
std
or
push
add
into
aam
sbb
add
outsl
mov
movsl
leave
sub
push
sbb
mov
xchg
add
pop
bound
in
stos
jb
mov
inc
cld
mov
lea
rcr
mov
cmp
cmpsb
icebp
jge
mov
cli
jmp
xor
xor
lods
add
add
cmp
mov
scas
sbb
adc
sbb
das
lcall
and
jne
push
cmp
jb
arpl
insb
subb
cltd
outsl
imul
inc
push
xchg
stc
stos
fcomps
sbb
jmp
push
mov
mov
xor
cmp
ret
push
add
xchg
sbb
bound
pop
jo
jl
cli
fmul
lcall
out
cmp
dec
rolb
mov
lret
jp
imul
push
push
out
jmp
mov
pop
xor
arpl
add
jne
push
nop
ljmp
cmpsl
jmp
cwtl
jo
add
sub
push
test
xchg
and
pop
inc
shr
mov
xor
shrb
mov
pop
xchg
gs
enter
pop
pop
stos
cltd
bound
gs
imul
icebp
push
mov
nop
ficompl
dec
cmc
xor
dec
mov
sti
shll
cmp
push
popf
and
xor
insl
leave
bound
ret
xorb
sahf
nop
sahf
rcrb
push
sub
mov
jb
stos
ret
cmp
cmp
push
dec
sbb
jnp
loopne
shll
jp
push
fsts
pusha
adc
jb
popf
loope
dec
sbb
aaa
or
and
dec
and
sbb
loopne
inc
mov
mov
dec
pop
fs
sbb
and
jnp
sub
mov
cmp
mov
dec
in
mov
jle
loop
stc
subb
out
cwtl
negl
push
enter
sbb
push
pusha
or
adc
mov
push
in
loope
outsl
pop
jbe
hlt
in
adc
stc
sti
pushf
mov
ret
test
lahf
pusha
ret
testb
test
push
push
or
sbb
cmp
push
iret
add
ret
iret
cltd
cmp
cmpl
pop
inc
fdiv
and
in
xchg
jge
jle
and
pushf
stos
and
mov
adc
or
fs
rclb
inc
gs
popf
sbb
fs
mov
loop
sbb
cli
push
fucomp
lret
shrb
lods
jmp
mov
jo
movsl
leave
fnsave
int3
out
test
ljmp
sarb
dec
adc
xor
imul
and
inc
push
pushf
sub
addr16
es
add
cli
xor
in
lods
ja
xchg
mov
push
push
scas
jp
in
dec
fnstcw
ljmp
pop
in
adc
aas
xchg
nop
fs
mov
jge
sar
or
das
xlat
in
push
out
mov
cmp
enter
sub
fbstp
xor
out
jno
ljmp
lds
cli
call
xchg
adc
xchg
xor
cmc
repnz
and
cmpsl
xlat
mov
lds
das
pop
xchg
scas
sub
sbb
clc
arpl
xchg
xor
js
shll
xchg
jb
dec
stos
int
push
ret
icebp
cmc
rolb
cld
addl
push
sbb
sbb
stc
jbe
inc
xchg
mov
xchg
cmc
and
xor
cmp
pop
inc
push
lahf
push
push
pusha
mov
ret
loope
sub
fcomps
std
sbb
pushf
cmpsl
xor
or
dec
mov
mov
cmc
hlt
inc
add
nop
cmc
in
adc
iret
and
adc
out
std
pop
test
jbe
xor
pop
inc
mov
dec
mov
jbe
or
fs
cmp
sti
cltd
mov
cmp
sarl
or
xchg
divl
mov
push
adc
jnp
jno
sub
xchg
leave
outsb
rorb
movsb
ss
stos
das
pop
xor
xchg
jbe
scas
dec
outsb
jo
aas
jg
push
call
jg
push
jmp
sub
xor
pushf
test
lahf
push
clc
ja
mov
hlt
xor
or
jne
movsb
daa
js
jg
pop
sbbb
push
out
pop
cltd
xchg
inc
xor
popa
adc
lea
cwtl
add
ja
and
mov
lock
mulb
pushf
or
jno
add
lds
dec
push
test
cmp
mov
inc
push
arpl
xchg
test
cmp
addb
and
daa
jmp
jne
scas
pop
int3
xchg
std
sub
je
mov
loope
nop
sysenter
adc
loopne
pop
add
imul
stos
push
ja
xor
testl
jnp
pop
xor
adc
mov
insb
arpl
pop
push
mov
inc
jb
dec
adc
push
pop
inc
and
inc
test
pop
mov
pusha
inc
push
sbb
cwtl
aas
mov
data16
push
push
js
or
js
sbb
push
xchg
adc
testb
pop
dec
lods
xor
outsl
jbe
xchg
pushf
cmp
inc
mov
stos
mov
mov
bound
push
add
add
jno
jno
aas
pop
addb
mov
lret
rol
gs
inc
pop
loopne
in
jmp
inc
movsl
out
inc
inc
inc
push
pop
loope
lahf
icebp
and
mov
or
pop
mov
fwait
adc
ja
into
adc
lods
das
rclb
enter
lea
lods
imul
sub
shlb
lcall
lods
insl
nop
jo
fnsave
insl
or
ret
out
sti
adc
lods
or
mov
and
fldenv
mov
ss
mov
sub
and
ret
xchg
stc
pop
add
mov
cmp
push
pop
sub
cli
adc
pop
clc
ret
mov
xlat
dec
in
adc
sub
mov
or
pop
sbb
cwtl
pop
jle
lret
out
adc
xchg
adc
xchg
xchg
out
adc
xchg
loop
sub
push
jg
arpl
scas
pop
gs
mov
xchg
arpl
fs
stc
lds
loopne
in
cmpsl
into
mov
push
lods
js
push
mov
xchg
ffreep
repnz
popf
outsb
pop
jmp
or
shlb
add
and
or
sub
dec
cli
shrb
mov
cmpsl
inc
clc
adc
rorl
dec
jb
cmc
ja
shl
xor
jns
mov
fimull
add
cmpsl
out
jb
mov
inc
lock
xchg
dec
lock
dec
inc
sbb
pop
out
dec
pmuludq
icebp
xor
in
cltd
test
outsl
sub
push
xchg
hlt
shlb
xor
push
insl
push
movsb
adc
mov
stos
pop
push
push
loop
mov
inc
iret
mov
inc
xor
sbb
or
rclb
js
sbb
cld
pop
lods
loopne
xor
int3
xchg
test
inc
ret
adc
shl
dec
enter
js,pn
movsb
inc
mov
repz
sub
jge
xorl
push
popa
pop
dec
insb
test
lea
adc
fwait
out
mov
sbb
pop
xor
jg
mov
push
pop
lods
cmp
mov
arpl
outsl
mov
jb
movsb
xlat
adc
mov
jge,pt
dec
js
stos
pop
out
das
pop
add
enter
add
bnd
scas
xchg
aaa
in
sti
std
push
push
insl
push
test
cli
cld
mov
fdivrl
dec
pop
mov
dec
cmpsl
mov
push
adcl
lods
push
ljmp
adc
cmp
or
push
nop
add
mov
pop
test
pop
addr16
pop
pop
xchg
jnp
ss
aad
in
stc
add
jl
push
cmp
ljmp
addb
subl
adc
shrl
mov
subl
cwtl
jo
aam
js
push
test
out
insb
enter
xor
lods
jno
mov
fildl
cmpsb
add
push
ljmp
cmp
outsl
add
adc
xor
cmpsb
loopne
pop
and
jg
in
sub
xor
xlat
jno
in
int3
cmpsl
mov
push
inc
mov
push
lods
aad
sahf
adc
xor
cltd
stc
mov
lods
mov
mov
jne
cmpsl
mov
iret
js
mov
divl
mov
shlb
sub
xor
cmp
jle
cmp
jb
and
ljmp
sbb
out
mov
or
pusha
lods
imul
popa
negl
mov
jne
or
or
adc
leave
and
testb
lds
push
push
in
mov
lahf
mov
lcall
ja
stc
scas
mov
loopne
movb
lds
imul
sbb
push
jne
adc
fbstp
rcll
inc
xor
xchg
data16
lahf
ds
xor
cs
jns
pop
adc
ds
repz
add
adc
out
je
jo
mov
cwtl
mov
xchg
xchg
mov
imulb
mov
js,pn
push
js
push
pusha
mov
adc
and
ja
pop
cmpsb
xchg
enter
mov
dec
jae
outsb
sub
jb
loope
jge
dec
addb
sbb
std
sbb
std
adc
outsb
push
je
push
je
aad
stc
sbb
cmp
xlat
sti
lock
mov
movsl
dec
lods
cmpsl
and
push
jo
inc
sbb
xchg
sbb
jge
or
sub
xchg
jmp
nop
ds
xor
hlt
jmp
inc
add
sbb
mov
xor
adc
lahf
dec
ja
add
or
xchg
fwait
adc
push
inc
inc
in
xor
bound
mov
imul
adc
lret
xchg
mov
jno
leave
dec
mov
stc
mov
push
mov
popa
cmp
imul
pop
fiaddl
nop
lahf
pop
xor
sbb
push
popf
cmp
jp
lahf
inc
jne
ja
popa
xchg
pusha
or
scas
scas
sahf
inc
cmpsb
add
fcomi
pop
dec
pop
shll
mov
pop
add
stc
repnz
and
aam
out
daa
mov
ljmp
test
xor
lahf
ret
jae
mov
inc
cmp
xor
push
pop
sub
jge
push
sub
lcall
mov
imul
stos
arpl
cmp
rorb
jl
sbb
mov
bnd
pop
and
xor
jle
fdivrl
loope
shll
pop
xchg
mov
dec
cli
pop
add
adc
mov
mov
out
out
fldenv
test
pop
fistps
lock
mov
ficoms
in
mov
adc
add
xchg
movsl
cltd
push
in
xchg
add
mov
in
xor
dec
jnp
jp
enter
jb
in
test
jne
test
xchg
lret
sbb
fildll
call
ds
hlt
pop
lahf
fs
fdiv
test
pop
sbb
das
pop
out
cli
cltd
pusha
fsubrl
subl
scas
xchg
lea
lock
dec
pusha
cmc
movsl
mov
das
addr16
outsb
sahf
xchg
in
pop
sarb
xor
mov
pop
pop
and
inc
pop
inc
jbe
inc
jae
leave
jmp
pop
sub
pop
fstps
xor
es
cs
adc
mov
in
sbb
bound
mov
fnstsw
outsl
test
cmpsl
addr16
pop
push
pop
push
fcomi
arpl
shrl
xchg
inc
aad
js
fistl
aaa
adc
loope
mov
xchg
arpl
mov
mov
ret
js
and
jmp
pop
cmpsl
sub
mov
jnp
sbb
orps
je
mov
inc
cmp
pop
adc
add
movsl
fnstcw
scas
and
pop
dec
test
push
add
jmp
pop
sahf
push
jl
mov
push
out
push
iret
out
mov
std
jmp
movsl
dec
mov
dec
pop
sti
addr16
inc
fprem
xchg
hlt
call
xchg
cltd
sbb
lret
fcomi
fs
push
sub
mov
sbb
sub
sub
aad
lds
dec
xorl
push
cmp
xrelease
xchg
dec
or
xchg
cwtl
jnp
sub
movsl
mov
pop
jmp
pushf
insb
jns
sub
jns
xor
dec
pop
mov
icebp
mov
stos
sbb
scas
push
mov
xlat
aam
sub
ljmp
xchg
aas
loopne
and
ja
pmuludq
lods
mov
pusha
inc
jb
add
cmp
xchg
adc
dec
arpl
pushf
test
shll
xlat
add
nop
pop
sub
pop
push
or
movsb
inc
adc
popf
in
stos
inc
imul
mov
mov
and
addr16
dec
out
mov
add
int
xor
fwait
popa
xor
loope
cs
aad
loope
aad
into
and
stos
ljmp
dec
cmc
mov
lret
jmp
xor
call
daa
nop
popf
adc
pop
jmp
sub
cmp
jno
push
pop
popf
rcll
adc
popf
push
xchg
inc
pop
sarb
add
jae
out
mov
movl
adc
sub
cmp
stos
hlt
popa
scas
cwtl
cmp
inc
cli
mov
fnsave
loope
les
nop
into
and
pinsrw
iret
out
pop
int3
xor
dec
sub
jmp
pusha
hlt
add
out
gs
jne
dec
sbb
stc
dec
scas
pop
popa
jnp,pt
xor
sub
sub
ja
mov
je
inc
rcr
arpl
mov
inc
pop
inc
sub
rcr
xchg
jnp
ret
mov
inc
cmp
test
pop
rol
data16
xchg
mov
jge
nop
scas
test
inc
imul
pop
push
rcll
hlt
lea
rorl
lock
jne
bound
dec
test
lahf
add
mov
inc
mov
andl
xchg
cli
dec
rcl
sub
outsl
sub
pop
sarb
popa
stos
push
scas
cld
pop
lret
pushf
testb
xchg
xchg
test
popf
lahf
jbe
int3
jg
lcall
cmp
or
jo
adc
rcrb
push
push
iret
ja
aad
mov
pandn
clc
xor
scas
sbb
ret
jmp
pusha
jae
jmp
push
lret
jae
into
and
es
mov
add
sub
das
test
pop
ss
popa
repz
jle
and
jne
testl
jae
xor
pop
sbb
push
cmpsl
and
stc
jne
adc
stos
inc
xchg
jecxz
sub
xchg
lods
adc
mov
pushf
adc
rorl
into
xor
push
inc
push
push
je
shll
mov
loopne
sbb
xor
push
lods
ror
aad
push
in
mov
inc
inc
clc
sub
jns
mov
sahf
lcall
xchg
xchg
call
imul
cmpb
add
xor
or
fwait
add
les
pop
push
xorb
pop
enter
stos
jns
pop
sub
cld
leave
and
enter
in
std
pusha
add
call
adcl
outsl
scas
leave
ret
ljmp
lock
xchg
jae
mov
mov
ljmp
aas
or
ds
jae
cld
lahf
sbb
mov
nop
mov
push
cmc
push
fistps
inc
and
add
pop
dec
push
scas
pop
xor
pmullw
xchg
pop
fs
add
jle
jg
inc
sbb
loope
into
cs
xchg
mov
push
jb
ret
arpl
cmp
and
jnp
pusha
bound
xchg
pop
jne
inc
mov
popl
push
jp
push
cwtl
loop
adc
push
pop
dec
aam
sbb
sbb
xlat
jg
ljmp
mov
push
dec
pop
pop
push
negl
rcll
in
dec
mov
bound
xchg
cmp
mov
pop
inc
subl
aas
or
repz
aam
shll
xlat
ss
iret
pop
cmp
push
fs
add
push
mov
mov
xchg
jle
aas
push
xor
ret
inc
sarl
call
jns
sbb
jmp
imul
push
dec
sub
jne
inc
popa
mov
lods
icebp
adc
repnz
cmp
fisttps
adc
aas
dec
xchg
push
and
inc
xor
les
iret
out
fdivrl
aaa
loopne
movsb
or
sbb
dec
sub
repnz
jnp,pt
mov
xchg
jmp
test
ret
lcall
dec
cmc
pop
lret
sbb
and
mov
cmc
add
xlat
mov
jnp
sbb
stc
jle
or
jns
repz
fisttps
xor
adc
mov
inc
jp
mov
sbb
cmp
push
outsb
out
mov
cmp
push
loope
cmp
xlat
out
xor
push
jecxz
adc
jmp
jne
push
dec
jle
jecxz
xchg
sbb
sub
jmp
jbe
stos
add
jno
jmp
xchg
test
mov
sbb
sub
sbbb
xchg
jno
add
fcmove
mov
adc
stos
out
sbb
inc
jne
mov
lcall
cmp
daa
popa
ret
in
addb
jl
xlat
test
int
cs
js
insl
fcomi
mov
out
jo
in
mov
call
lret
pop
mov
mov
fwait
scas
bound
jle
xor
negb
inc
in
dec
jmp
adc
jns
loop
xchg
xor
sub
and
push
jne
jmp
pop
leave
popf
cmp
das
sub
or
scas
in
rorb
je
cmp
sbb
and
movsl
aas
jg
xor
shrl
or
test
mov
pop
jecxz
jae
movsb
stc
fisubrs
pop
les
out
iret
add
mov
ss
inc
fwait
xchg
push
in
sub
loope
sti
xchg
pop
jg
xchg
dec
jbe
dec
jne
ret
jmp
add
or
mov
xchg
lret
ss
mov
out
decb
repnz
insb
dec
and
dec
mov
cmp
ds
or
mov
adcb
fucomp
push
jge
jnp
sub
fs
loop
or
icebp
adc
add
sbb
mov
imul
rorl
sub
loop
cmp
mov
sub
into
adc
push
pop
adc
push
push
sbb
add
pop
adc
xchg
adc
fcompl
push
mov
xor
inc
sbb
pop
push
movsl
mov
jge
and
iret
push
push
sbb
ret
mov
xchg
into
cmp
sub
xchg
fsubs
sbb
mov
clc
inc
mov
mov
pop
stos
scas
and
mov
movsb
pop
push
mov
mov
jle
xchg
mov
loop
stos
push
sahf
aam
div
lds
jae
ja
and
jle
mov
fmuls
das
fwait
cs
or
add
insb
mov
jecxz
lock
cmpsl
imul
pusha
shl
lods
mov
mov
aad
out
call
repz
inc
sbb
pusha
daa
fisubs
nop
adc
pop
dec
inc
lahf
cmp
ja
push
and
insl
xor
sbb
cmp
popa
jge
xchg
imul
test
inc
mov
hlt
lds
andl
shll
aas
push
xchg
mov
pop
mov
fsubrs
mov
push
lcall
mulb
inc
mov
push
inc
and
sub
mov
pop
push
jge
mov
cli
add
xchg
repnz
adc
push
xchg
cmp
sub
mov
pop
iret
jno
pop
pushl
add
inc
push
push
int3
inc
sti
or
add
sbb
cmp
addb
and
pop
add
mov
xor
jnp
mov
jno
loopne
mov
jle
mov
and
jg
sbb
and
cwtl
xor
mov
lods
mov
movswl
pop
movsl
push
dec
lret
iret
xor
sbb
lret
scas
push
fwait
imul
fsubs
sbb
and
adc
sub
or
xchg
jns
pop
xor
jg
les
mov
les
dec
hlt
aas
aad
out
mov
xlat
call
test
sbb
dec
adc
mov
mov
mov
inc
fwait
sbb
mov
insb
fists
push
mov
stc
scas
lret
ss
test
in
sbb
or
popa
out
add
movsb
cli
imul
cmp
inc
mov
repnz
les
dec
cmpsl
leave
shll
in
lret
fnstsw
or
outsl
mov
sub
out
sub
dec
push
mov
pavgb
lret
mov
mov
mov
mov
stos
insb
mov
clc
add
jg
pop
inc
inc
sbb
cmp
inc
loope
stc
or
les
mull
jnp
arpl
mov
test
insl
stos
leave
pusha
jmp
repz
sbb
daa
jmp
push
xchg
jecxz
adc
push
push
mov
push
mov
lret
jle
int
push
in
aaa
bswap
cmpsl
outsb
dec
sub
pop
dec
jne
div
push
xchg
adc
inc
mov
rol
movsb
popf
test
fistl
mov
mov
mov
orl
in
or
incb
and
mov
push
jle
lods
sub
dec
inc
dec
outsb
pop
sbb
notl
hlt
or
mov
or
js
lea
aam
pushf
pop
insb
fisubrs
mov
in
jmp
es
jmp
jecxz
std
rclb
cwtl
xor
into
jae
xchg
and
add
adc
stos
mov
xor
push
add
mov
sbb
sub
xchg
popa
shll
add
xchg
inc
fldcw
out
push
add
inc
add
and
jnp
push
loope
insl
add
cmp
cmp
mov
hlt
cmovbe
push
mov
fwait
sub
jno
adc
mov
add
mov
fnstcw
ss
fcoms
out
jb
mov
cwtl
or
mov
add
mov
ja
sub
inc
cli
push
cwtl
ja
sub
mov
nop
aad
orb
test
xor
inc
or
ss
xchg
dec
mov
jno
fldl
xchg
or
and
jne
test
rorb
stc
outsl
roll
mov
call
add
fs
scas
or
mov
pusha
les
jl
jo
rcrb
inc
xchg
ljmp
mov
inc
jecxz
icebp
adc
pop
andl
push
out
pop
ret
pop
xlat
in
sub
clc
xchg
in
out
loopne
add
push
pop
mov
xor
mov
fimuls
and
inc
push
push
imul
xor
in
in
addr16
fiaddl
sbb
ja
repz
repz
inc
sbb
cmp
out
inc
pop
pop
add
inc
dec
or
xor
out
push
sbb
into
lock
mov
lahf
push
push
sbb
in
or
loope
or
lahf
adcl
ret
popf
and
popf
cwtl
outsb
and
inc
mov
add
ss
aaa
xor
mov
mov
xor
aas
push
push
jae
aaa
stos
fidivrl
mov
js
mov
jl
ret
js
sbb
testl
ret
sbb
jnp
rol
mov
inc
ds
jns
jno
sbb
in
rcrb
dec
shll
sbbb
repz
xor
or
es
mov
cmp
sbb
push
cmp
mov
cwtl
mov
push
and
iret
dec
lahf
into
fiadds
ret
movsl
dec
mov
pop
retw
mov
mov
aaa
pop
jbe
das
rcrb
jl
repz
scas
into
cwtl
ficompl
stos
sub
cmp
pop
adc
adc
mov
insb
xchg
ret
xchg
pusha
das
in
pop
dec
inc
icebp
insb
push
mov
cmpsb
dec
cmc
jno
pop
lcall
movsb
in
add
push
sub
jecxz
inc
xor
mov
or
and
ret
imulb
maskmovq
idivl
shlb
popa
inc
sbb
jae
and
or
dec
adc
jmp
cmpsl
and
adc
leave
ljmp
or
ficompl
scas
push
hlt
cmpsb
jge
movsb
mov
loopne
and
fdivrs
cmpsl
jns
and
mov
jmp
lea
imul
xchg
pop
lods
jbe
sbb
pop
dec
lret
filds
into
testl
stos
mov
cwtl
fmul
dec
jl
adc
xchg
jecxz
insb
stos
jecxz
jno
jns
push
pop
lds
pop
js
or
dec
jle
push
rol
test
jl
inc
adc
lods
cmpl
arpl
push
push
cmp
mov
fwait
lahf
sbb
lock
and
push
dec
xor
sbb
push
jecxz
in
xchg
mov
cmpsl
sub
dec
cld
loope
push
dec
call
fnstenv
jecxz
fisttpll
lcall
mov
jmp
pop
push
mov
into
jbe
jno
pop
ljmp
lods
dec
pusha
pop
cmp
mov
xchg
insl
push
jo
or
xchg
outsb
lea
cli
pop
les
add
xchg
sbb
dec
or
int3
dec
and
sub
dec
and
lods
scas
jbe
inc
add
adc
inc
rcll
mov
lret
xchg
cli
lea
or
js
or
xchg
aam
sbb
pop
xlat
pop
push
inc
sub
jmp
push
popa
enter
lods
ret
in
lods
enter
mov
arpl
cmp
js
xchg
mov
rclb
add
enter
pop
outsl
loop
stos
jecxz
cltd
mov
es
cld
dec
es
cld
fidivrl
push
and
mov
cli
lea
rcrb
mov
add
ss
in
add
int3
sbb
mov
ja
xor
or
mov
popf
push
sbb
xchg
adc
mov
fisubs
xchg
adc
sti
or
gs
pusha
fisubs
xor
mov
adc
cmpsl
sub
adc
push
sbb
dec
cli
sub
cli
sbb
enter
pop
les
repnz
daa
or
jbe
push
jp
push
ficoms
in
jl
lods
mov
add
mov
clts
ss
push
sbb
push
and
in
jns
scas
mov
mov
vpextrw
lds
ds
int
lock
insl
icebp
fwait
sbb
adc
sbb
dec
push
mov
jle
pop
mov
and
mov
les
cltd
add
pop
and
leave
mov
cmpsb
cmc
cs
and
cmp
dec
imul
xchg
loop
sub
aas
mov
push
loop
lcall
lods
nop
push
lods
cld
int3
xor
xor
test
mov
fistpl
push
xchg
mov
mov
sub
inc
adc
push
in
mov
push
xorl
dec
cmp
adc
inc
js
frstpm(287
xor
cmp
and
aas
out
movsl
aaa
test
add
movsb
pop
mov
and
pop
add
repz
pushf
mov
xchg
mov
jmp
dec
sbb
mov
in
nopl
push
sub
xchg
mov
sub
xor
xlat
mov
sti
int3
mov
js
flds
repz
shr
jecxz
cmp
or
xchg
int3
gs
dec
sub
fwait
xchg
fs
lea
inc
xor
pop
pop
jle
xor
cltd
mov
insb
mov
mov
cmp
adc
loopne
test
inc
dec
mov
imul
push
and
mov
sub
out
pop
mov
neg
rclb
cmpb
lods
cmp
jmp
fldcw
repz
in
xbegin
bnd
pop
push
lods
sti
and
out
xor
ss
sti
push
into
mov
sub
dec
push
push
jbe
xchg
test
pop
pushf
shr
inc
adc
pop
scas
insl
mov
jo
pop
ds
sub
push
and
hlt
and
add
aam
or
shl
xchg
out
je
outsb
mov
stc
sahf
xorl
pushf
in
pop
adc
jae
mov
mov
push
xchg
mov
mov
mov
and
sub
lcall
push
xchg
lods
mov
call
sub
pop
pushl
dec
cmp
jge
adc
sarl
popf
pop
xchg
out
lock
cwtl
push
in
inc
xor
loope
icebp
lahf
lahf
sub
sarb
arpl
divb
outsb
jns
cmc
test
cmpsl
push
xor
inc
xchg
shl
or
inc
inc
mov
mov
loopne
push
pusha
iret
add
shll
pop
lds
mov
sub
mov
xor
cli
mov
lods
sahf
imul
push
adc
push
and
mov
push
shll
imull
pop
je
lahf
xor
insl
mov
jg
pop
movntps
punpckhdq
lods
je
pop
mov
dec
nop
mov
cmpsb
dec
mov
in
or
cltd
int3
decl
in
jp
push
cmp
cs
push
aam
mov
dec
gs
push
imul
out
out
and
dec
iret
sbb
mov
cmp
leave
ret
negb
mov
push
popaw
fs
xlat
mov
imul
cwtl
cs
and
push
xchg
cmpsl
jne
lods
cmp
lret
cwtl
lods
sbb
mov
mov
icebp
btr
mov
dec
outsl
dec
popf
repz
sub
pusha
xchg
jl
jge
cli
cs
lds
test
imul
lods
push
addr16
ja
cmpsl
ss
fldl
jp
fsubp
pop
sub
ret
sub
ljmp
jnp
out
jb
imul
movsl
push
test
push
cmp
into
test
aad
aas
sbb
out
or
push
jno
sub
and
lcall
xor
and
ror
shll
out
fs
mov
out
imul
pusha
sbb
orl
inc
jg
and
xchg
adc
adc
in
jns
inc
rorl
repz
xor
addb
testl
and
arpl
and
repz
leave
mov
dec
xchg
pop
movsl
fcompl
dec
sbb
pop
cld
fistps
sbb
icebp
mov
pop
dec
iret
lock
subl
or
or
iret
aaa
mov
sahf
or
loopne
icebp
xor
fcmovbe
inc
pop
adc
or
push
xor
xor
jmp
loope
pop
and
popa
mov
push
lret
push
cmp
xchg
les
mov
pop
sub
pop
mov
ret
stos
pop
mov
lahf
cmpsl
ja
call
pop
cwtl
dec
out
subb
lods
xchg
mov
push
fdivs
pop
test
or
xlat
daa
and
xchg
cmc
clc
dec
xlat
fidivrl
sub
jp
mov
or
iret
fcoml
mov
rcll
adc
in
or
ret
test
xorl
sbb
movsb
imul
adc
dec
mov
cmpsl
pop
icebp
xchg
mov
cld
orb
iret
push
mov
xor
lds
call
xchg
push
outsb
in
xchg
push
std
fs
add
divl
push
je
shrb
popa
stc
or
xchg
into
adc
push
test
lahf
push
lock
inc
sub
into
das
dec
push
adc
xchg
faddl
push
pop
xchg
ficoms
add
sub
inc
mov
cs
and
decl
pushf
stos
jo
mov
and
mov
ret
or
lock
inc
xor
int
in
xchg
mov
fadd
lea
pop
ror
or
and
inc
rcr
inc
mov
mov
jns
ret
or
sub
inc
sbb
test
sbb
xchg
cld
and
mov
fbstp
jle
jo
adc
cmp
push
gs
cld
inc
cmp
jne
cli
and
rorb
sub
or
inc
arpl
mov
push
xchg
lock
test
push
cmp
jne
hlt
mov
pop
ss
add
testb
cmp
cmpsb
sub
jmp
mov
sbb
aaa
xor
xchg
xlat
in
cmpsb
jmp
lods
ljmp
test
xchg
cs
ficoml
mov
test
loop
mov
jb
cmp
jecxz
hlt
jo
cmp
sahf
xor
push
mov
enter
je
jg
in
test
jne
pop
stos
mov
and
dec
sub
mov
scas
sbb
and
andl
pop
dec
pop
mov
xor
into
dec
ffreep
stc
addr16
stos
cmp
in
aad
hlt
cld
adc
sbb
decl
mov
mov
lods
and
lds
repnz
sbb
mov
jmp
push
mov
cmpsl
add
ret
adc
inc
aad
mov
pop
jp
adc
pop
mov
add
stos
adc
dec
jne
jbe
hlt
cwtl
adc
pop
leave
and
stc
ja
dec
shlb
lcall
cwtl
cmpsb
leave
aad
adc
scas
js
add
push
mov
cmp
cmp
repnz
cs
cmp
lahf
push
cld
cmp
scas
mov
xchg
push
ficoml
sahf
fdivrs
fiaddl
and
push
shrl
add
xchg
xchg
sbb
faddp
or
mov
lods
in
adc
fwait
mov
mov
lret
push
push
mov
bound
sbb
stos
fs
mov
cmp
aam
int
mov
out
xchg
ret
push
push
js
adc
cmp
iret
pop
push
lret
aas
in
sbb
or
push
add
insb
mov
xchg
dec
push
mov
stos
test
pushf
push
ret
es
push
lea
pop
mov
mov
jle
bound
out
or
stc
ror
pop
fisubrl
sbb
lock
rcrl
outsl
je
inc
lods
lahf
ret
mov
cmc
divb
dec
iret
dec
bound
daa
dec
fbld
fmull
sub
lahf
pop
adc
jb
dec
mov
push
adcl
add
and
mov
jae
lods
inc
sbb
lret
lds
push
push
adc
push
push
ror
sbb
test
xlat
jne
test
es
mov
or
mov
add
xor
pop
neg
jnp
je
cmpsb
stc
ficoms
outsb
xchg
into
je
jno
loopne
pop
dec
pop
adc
mov
movsl
mov
push
out
inc
ja
pop
ror
cs
and
repz
addr16
mov
stc
push
imul
cltd
and
adc
sbb
jmp
ljmp
sbb
pop
out
out
adc
xchg
or
movsl
enter
out
mov
je
daa
mov
mov
sub
mov
fistps
je
push
sub
jmp
popa
add
xor
popa
ret
inc
push
push
enter
pusha
loope
mov
scas
movl
sahf
adc
cld
or
and
in
mov
xchg
movsl
cmp
xchg
iret
and
sti
mov
call
scas
xchg
jae
loope
inc
mov
cmp
dec
sbbb
in
xchg
cmpsl
pop
pushl
cmp
pop
fildll
cmp
aad
inc
push
and
out
bnd
add
mov
pop
xor
fwait
pusha
repnz
hlt
or
cmp
mov
mov
leave
cld
cmpsb
outsl
jne
cmp
sub
sbb
bound
outsl
imul
popf
and
dec
inc
dec
js
stos
jbe
and
shrl
les
pop
jae
xor
loope
push
pusha
inc
sti
sti
push
mov
lret
mov
sbb
outsb
and
icebp
lods
fsubr
in
aam
neg
mov
shlb
cs
in
mov
xor
test
sbb
ror
adc
pop
mov
lahf
repnz
cmpb
faddl
ja
mov
push
mov
mov
das
dec
xlat
jae
jae
xlat
dec
jge
mov
mov
and
inc
xor
aas
and
adc
cli
ss
pop
bnd
movsl
adc
inc
frstor
dec
sbbl
push
ja
loopne
sub
mov
jnp
pop
sub
sub
pop
in
cmp
cmpsb
sbb
pushl
test
data16
jae
inc
test
sbb
aas
je
xchg
test
dec
xor
jns
subl
push
enter
into
jae
dec
mov
push
pop
sub
xchg
and
sub
test
cmp
rolb
addr16
stc
push
xchg
ss
pop
fisubrs
nop
pop
loop
jecxz
lods
shll
mov
or
arpl
add
jne
adc
push
cmp
xor
dec
addr16
mov
adc
cld
ret
out
cli
gs
mov
shll
es
test
sbb
cs
jle
mov
push
shrd
sub
cmp
xchg
lock
psubd
into
or
inc
push
leave
out
pop
or
jns
adcl
dec
lds
movsb
xor
ret
popf
aad
or
mul
roll
aaa
lcall
adc
cmpsb
ljmp
mov
int3
shrb
icebp
icebp
and
push
pop
mov
ret
or
scas
sbb
add
mov
lock
sub
cmc
mov
xor
fisttps
push
xor
std
aad
cmp
adc
clc
hlt
xor
mov
sti
cli
xor
sub
pusha
adc
jmp
pop
add
pop
in
push
or
mov
cmp
push
sub
push
adc
dec
dec
jmp
scas
movsl
jb
pop
jb
push
xor
lea
pop
psubusw
mov
pop
push
in
sarl
call
hlt
inc
ja
cmp
aaa
in
stos
dec
outsl
icebp
xor
jg
pop
inc
dec
in
or
das
xchg
cwtl
inc
stos
push
pop
cmpsl
shlb
push
cmp
fnstsw
xorb
and
cmp
dec
adc
xchg
js
dec
xor
ss
in
mov
insl
push
lds
cmpsb
sbb
mov
bound
push
jns
pop
pop
unpcklps
mov
add
addr16
sub
jp
or
loop
rolb
jg
push
push
mov
jg
test
shrl
shrb
fs
sbb
pushl
pop
cwtl
clc
sub
push
test
fcoml
cmp
pop
sahf
mov
daa
xor
xor
sbb
in
xchg
push
mov
mov
pop
ds
icebp
push
add
jl
dec
pop
hlt
xchg
push
ljmp
in
jl
in
pop
or
out
icebp
xor
push
dec
pop
nop
cwtl
cmp
sub
push
pop
pushf
movsl
mov
int3
aas
cwtl
sub
cli
sbb
xchg
leave
mov
scas
test
mov
ror
stos
addl
push
cmp
nop
and
cld
adc
pop
iret
jo
loope
loop
mov
lahf
xchg
mov
adc
cwtl
jno
fwait
jge
mov
test
mov
push
int
pop
cmp
hlt
mov
aaa
je
mov
sbb
pop
jbe
sahf
in
sbb
pop
mov
ficompl
push
je
fxch
push
loopne
sarb
jbe
push
push
ljmp
and
in
test
lcall
dec
fwait
fs
cmp
lods
cmp
cmpsb
ja
adc
inc
nop
dec
add
add
mov
xor
leave
push
int3
inc
jns
inc
xor
inc
fidivrs
jae
sbb
mov
insb
cld
adc
addb
sbb
stos
fdivs
ljmp
xchg
cmp
push
push
shr
dec
or
sahf
push
dec
lock
push
ret
data16
addr16
xchg
xor
jo
push
nop
mov
aas
les
test
inc
sar
stos
inc
jl
mov
xor
jmp
cmp
rorl
popf
cmp
frstor
mov
stc
and
push
mov
dec
cmpb
mov
shl
nop
mov
sbb
pop
sub
outsl
ljmp
sbb
and
cli
push
lock
decl
xchg
fildl
fcompl
ds
lret
add
pop
daa
cmpsl
push
cmp
xchg
fwait
adc
mov
xchg
sbb
call
sbb
outsb
inc
in
sbb
imulb
xchg
ss
hlt
ret
mov
out
cmpb
mov
push
lods
test
pop
inc
cwtl
lods
pushf
aaa
or
addr16
inc
aad
cs
stc
into
cmp
cmp
cmp
mov
xor
lods
stos
ss
mov
mov
sub
add
loope
mov
xor
push
push
dec
rorl
gs
or
xor
mov
pop
inc
cmp
imul
or
cmpsl
std
or
inc
sbb
push
sbb
mov
push
xchg
imulb
mull
fsts
inc
cwtl
int3
popf
std
mov
mov
push
cmp
mov
xchg
rolb
xlat
add
daa
dec
xorb
xchg
out
imul
add
mov
fld1
xchg
ljmp
push
clc
into
mov
adcl
pop
sbb
xor
sub
push
mov
xlat
add
and
icebp
lret
je
test
sbb
push
push
cmc
enter
out
enter
rolb
ret
aad
sub
lret
sahf
ret
dec
dec
ds
jne
inc
loope
push
clc
mov
into
ljmp
cmp
fcompl
jge
stos
hlt
loopne
les
inc
aad
mov
jo
jle
dec
cwtl
jne
aas
sub
sahf
and
aas
fnsave
inc
sub
call
insl
pop
push
jl
in
scas
sti
inc
scas
dec
lods
sahf
jmp
jae
addr16
or
std
outsb
or
push
in
xlat
ret
mov
dec
xchg
cmp
cmp
jno
inc
push
push
lods
pop
push
mov
pop
loopne
outsb
mov
xchg
sub
iret
jle
sub
dec
mov
out
cltd
rorb
cmp
mov
push
and
jl
insb
push
and
pop
lret
sbb
in
enter
movsl
test
sbbl
sysenter
inc
add
jb
or
scas
icebp
clc
cltd
mov
pop
das
int3
repz
sbb
push
test
pop
push
mov
cs
cmpsb
mov
fiadds
daa
aaa
andl
nop
jb
cmc
or
enter
lock
dec
sub
out
xchg
movb
push
jno
shll
sbb
shl
imulb
ja
push
scas
jo
fwait
mov
xchg
mov
mov
mov
add
xor
adc
nop
loope
ja
mov
repz
pop
mov
insl
xor
or
xchg
xchg
in
add
fs
loop
sub
cmp
test
insl
in
orb
enter
or
cmpsl
pop
cmpsb
inc
mov
push
xchg
push
add
adc
or
or
push
cmpsl
aas
xor
adc
jo
jge
in
add
dec
xchg
dec
stc
push
jmp
pop
sub
xchg
cmpsb
shl
jmp
fcomip
popl
pop
or
mov
ja
sub
out
and
arpl
nop
fisubrs
lret
insb
ljmp
jnp
mov
mov
mov
cli
cs
fwait
inc
xor
mov
add
in
test
mov
js
ds
shlb
sbbb
jnp
adc
cli
in
pop
fisttpll
add
or
leave
addr16
js
stc
aam
icebp
add
jae
insb
dec
aam
push
out
push
push
cmp
sbb
pop
or
sahf
aam
pop
adc
lods
icebp
scas
jae
mov
add
imul
fs
stos
loop
cmp
mov
push
lods
lds
gs
test
js
or
jecxz
orb
xchg
in
stc
int
add
push
mov
xchg
imul
dec
flds
mov
jbe
xor
insl
mov
dec
xor
sarl
ret
test
addl
dec
test
lret
adc
or
xlat
cmc
daa
ss
or
xor
jns
inc
pop
pop
das
jns
mov
sub
mov
jmp
fmull
sbb
mov
out
mov
pop
inc
jns
div
push
aad
push
xor
cmp
testl
and
jg
ljmp
mov
sbb
cmp
enter
push
sub
out
xchg
imul
mov
rcrb
test
xchg
outsb
cli
out
sbb
cmp
loopne
push
pop
jmp
pop
jle
into
mov
mov
and
mov
jecxz
int
sub
cmp
xchg
cmpsb
popf
dec
repnz
jmp
sti
add
and
orb
jle
push
sub
push
inc
mov
fcoms
icebp
xchg
push
jbe
hlt
jno
pushf
mov
jns
loop
sahf
xchg
rcl
es
jbe
dec
sbb
push
sbb
jne
ds
xor
in
stos
in
fidivrs
and
jnp
mov
pop
fcoms
popf
sub
dec
loopne
and
mov
repz
and
int3
das
xchg
shrl
test
jo
jae
pop
inc
xor
in
mov
mov
cmpsb
cmp
test
push
cld
xor
fdivrl
jnp
add
jo
fadd
xchg
mov
mov
sbb
popf
imul
xor
jae
pop
push
and
js
negb
add
mov
lock
int3
test
out
lret
aad
outsb
jb
rcl
mov
pop
mov
push
and
dec
jg
jo
sbb
stc
pushf
jb
mov
adc
roll
mov
lcall
rorb
push
mov
cli
and
ss
sbb
xchg
sbb
lahf
jo
enter
fbld
fcmovne
cld
fwait
inc
pop
jne
mov
lock
aas
and
pop
mov
dec
popa
int3
mov
xchg
jnp
push
lret
ja
pop
into
dec
out
push
leave
and
cmpsl
loopne
sub
mov
call
inc
xor
mov
sub
jb
cs
ss
jp
pop
lret
mov
adc
jle
push
popa
mov
mov
push
dec
shl
fiaddl
hlt
fwait
mov
imul
mov
xor
adcl
and
sbb
lods
test
loop
xchg
cmp
jbe
rorb
rclb
adc
mov
xor
adc
lock
daa
xor
push
lds
jecxz
stos
fimull
loope
fbld
test
out
jle
sbb
cmc
xchg
stos
mov
xchg
bound
jno
mov
out
rclb
xchg
push
sbb
mov
iret
mov
push
mov
and
add
loop
or
rorb
out
das
stc
cld
mov
in
or
in
mov
repnz
sub
sbb
mov
stos
mov
enter
inc
cli
cmc
ds
ljmp
cmpsl
insl
in
pop
mov
push
scas
ret
or
pushf
loopne
sarb
jns
sub
add
push
cmp
movsb
push
std
pusha
add
xlat
shlb
pop
inc
int3
xchg
clc
and
nop
jae
mov
sub
xlat
lods
or
cwtl
mov
mov
inc
ja
mov
cli
ret
lahf
xor
cmc
lock
mov
push
lods
data16
out
push
or
and
mov
xchg
jae
mov
pop
gs
adc
push
add
and
mov
inc
test
mov
adc
leave
xor
imul
pop
cs
out
sub
popa
out
fdivrl
sub
inc
mov
popa
rcrb
pop
pop
je
test
dec
fildl
mov
dec
xor
shrl
aam
test
pusha
outsl
ds
stos
jmp
fsubl
xor
sbb
sti
inc
add
xlat
push
mov
into
xlat
shll
ja
push
mov
jge
sbb
and
sahf
xchg
mov
fchs
mov
pop
or
and
in
jbe
inc
sahf
hlt
lret
and
sbb
fsts
sub
mov
loope
in
xor
mul
sub
jbe
push
adc
add
frstor
dec
mov
mov
sub
insl
sub
sub
xchg
xor
inc
mov
fildl
js
out
jb
push
sbb
jecxz
pop
xchg
sbb
sub
fs
inc
in
jmp
popa
push
pop
repz
mov
adc
dec
xor
pop
mov
xchg
sti
loopne
pop
sbb
fdivrl
les
imul
and
xor
cmp
jo
jbe
inc
or
es
ret
ret
adc
jmp
dec
clc
mov
or
nop
ljmp
js
push
or
xor
mov
das
xchg
xor
sub
jne
mov
out
lock
icebp
outsb
sarb
push
lods
pop
mov
cmp
sti
add
dec
adc
adc
lods
dec
data16
dec
inc
enter
push
bound
adc
lcall
pop
ljmp
icebp
iret
mov
cwtl
push
jecxz
xor
jnp
jno
lods
iret
hlt
sub
dec
pop
push
fidivs
jne
loopne
insl
add
stc
jp
push
test
sbb
ss
and
and
cmp
jne
std
add
cwtl
cmp
popf
mov
mov
bound
pop
sub
out
mov
push
mov
jmp
nop
sbb
inc
or
das
lods
xchg
lcall
adc
mov
mov
adc
and
in
movsb
testb
pop
mov
icebp
shll
bound
mov
adc
xlat
jg
cmpb
sub
dec
dec
cmp
leave
movsl
dec
int3
clc
sbb
xchg
inc
inc
lret
out
adc
inc
and
mov
ss
fdivp
shrl
jns
mov
cmpsb
jecxz
in
into
cmp
leave
inc
cmpb
sub
aas
jo
movsl
xlat
movsl
or
nop
pop
fistpll
lret
or
pop
jge
out
stc
pop
or
fdiv
pop
mov
ja
mov
add
jns
push
and
cmpsl
pop
push
dec
cmp
xchg
in
dec
sbb
add
movsb
sbb
std
pusha
in
push
jmp
fisubs
repnz
jmp
and
test
test
loop
pop
dec
mov
adc
xchg
iret
dec
and
call
pop
xchg
and
mov
fwait
gs
ljmp
mov
mov
scas
adc
sbb
mov
ljmp
adc
jmp
roll
nop
lods
scas
add
jp
mov
or
or
add
add
pop
frstor
cmpsb
test
or
mov
aam
jb
push
add
mov
jae
ljmp
gs
mov
xchg
fisubl
inc
lock
jns
mov
jle
adc
xchg
stos
mov
sbb
inc
imul
out
push
xor
adc
hlt
sarl
outsb
scas
mov
daa
adc
sbb
imul
out
ret
movsb
popf
lret
xchg
fistl
faddl
rolb
or
sub
adc
fwait
sbb
ret
mov
pop
ljmp
mov
fs
sete
sub
push
or
mov
mov
in
xchg
addr16
loope
cwtl
jecxz,pn
aad
pop
aam
jmp
idivb
mov
cmp
shll
es
cmp
mov
test
sbb
pop
xchg
js
add
js
movsb
mull
test
push
shlb
mov
test
inc
mov
pop
pop
or
xchg
cli
andl
dec
rcll
cmp
shll
cmpsl
and
sbb
call
sub
jp
fnstsw
xor
mov
pop
adc
repnz
sub
add
in
inc
pop
call
push
push
jo
pop
lcall
jg
inc
les
cmp
arpl
mov
cmp
pop
enter
jl
add
sbb
push
std
movsl
in
cmp
xor
cmp
test
xor
push
or
add
out
jge
cmpl
sub
add
ret
sbb
pop
sbb
xchg
mov
sti
push
adc
lcall
call
test
xor
aad
sub
andb
pop
and
imulb
push
sub
ret
inc
cltd
mov
rcr
ret
stos
imul
sub
inc
addr16
pop
enter
inc
add
stc
mov
xchg
lods
push
or
mov
jo
shr
outsb
lods
pop
pop
mov
popf
dec
inc
or
dec
nop
aam
scas
xchg
pop
mov
pushf
out
icebp
je
into
or
push
daa
xchg
jmp
repz
sub
push
push
call
iret
adc
jl
inc
adc
sub
and
int
mov
xor
inc
mov
test
in
daa
lea
cmp
sub
lret
iret
lds
pusha
jp
jnp
aaa
xchg
sub
shrb
adc
add
pop
jae
shr
gs
test
pop
xchg
js
fnstcw
fadds
mov
test
mov
cmp
fmuls
adc
popf
div
std
lret
out
adc
ret
test
cmc
sbb
int3
cmc
enter
pusha
imulb
sahf
loop
pop
pop
loope
inc
outsb
xor
popl
movsl
inc
push
sub
das
xchg
jnp
mov
fmuls
ljmp
xchg
xchg
lds
pop
ret
pushf
push
je
aam
ljmp
add
push
les
jo
xor
subb
insl
dec
inc
pop
addr16
or
ret
call
and
stos
cltd
int3
fwait
cltd
in
lods
or
push
addr16
sbb
pop
shrl
data16
dec
icebp
shr
shrb
push
icebp
and
inc
test
scas
cmpsl
dec
nop
lret
fimull
inc
adc
leave
xchg
inc
inc
pop
popf
mov
lret
mov
lahf
sbb
ret
insl
mov
fnstenv
inc
cmp
std
je
mov
inc
mov
push
outsl
in
mov
adc
test
out
rclb
and
sub
imul
lahf
insb
jl
add
mov
fwait
outsl
gs
daa
sub
lods
ja
jl
inc
es
adc
add
lret
or
pop
ljmp
jno
cld
pop
sarl
sub
gs
pop
push
cmpsb
push
xor
addr16
xchg
pushf
int3
std
or
aas
xchg
and
iret
jne
lahf
mov
xchg
stos
test
fldl
cmp
fnstsw
jg
sub
int
enter
push
inc
jb
filds
out
into
out
popf
jl
icebp
dec
je
jbe
movsl
push
sbb
fstpl
fldz
jae
outsb
mov
in
cmc
pop
aaa
lret
das
fisttpll
add
mov
lret
dec
je
push
pop
loopne
nopl
add
test
mov
mov
ret
aas
sub
xor
test
cli
stos
mov
jne
aam
mov
into
ret
out
mov
in
sti
xor
inc
in
jl
mov
test
lock
jb
jmp
sbb
loop
sti
push
mov
dec
xor
cltd
jo
setb
adc
enter
pop
jle
pop
xor
xchg
cwtl
fcomps
adc
movsb
idiv
dec
sbb
sub
nop
mov
out
pop
or
xchg
aaa
jge
sbb
fidivrl
lock
clc
and
mov
subl
jmp
dec
mov
xor
jecxz
call
push
or
adc
into
add
inc
daa
mov
movsl
insl
and
lret
pop
adc
movsb
xchg
in
sbb
mov
pop
popa
pop
cmp
jmp
push
clc
cmp
mov
jmp
and
into
dec
pop
and
pop
cmp
outsl
xchg
es
cmpsb
jae
pop
cmp
nop
sub
lods
xor
pop
xchg
pop
aas
push
dec
adc
and
xlat
fs
pushf
xchg
into
dec
hlt
repz
pop
xchg
fildl
pop
ret
xlat
mov
add
in
jg
insb
imul
sub
dec
add
mov
mov
add
mov
inc
lock
test
mov
add
test
aaa
adc
jae
lcall
clc
rclb
ds
lret
push
cmp
in
adc
jecxz
xchg
push
clc
lods
ret
inc
das
mov
mov
daa
add
xlat
xchg
aas
cmpsl
ret
and
inc
jne
fwait
jle
lods
cwtl
mov
loopne
sub
mov
movsb
xor
lret
loope
xchg
ret
mov
insb
or
push
mov
fstl
mov
enter
add
push
lods
js
andl
jbe
mov
repz
sub
cld
stos
aam
jl
int3
inc
inc
mov
addr16
shl
aaa
push
lahf
jp
mov
test
xorl
hlt
mov
popf
xchg
insb
sbb
fcomip
jb,pn
movsb
aam
add
sbb
lret
sbb
lock
xchg
and
xchg
lock
push
cmp
adc
mov
arpl
push
test
cmpsl
dec
test
pushf
add
pop
outsl
fdivs
loope
pop
aas
adc
stos
push
orb
fimuls
minps
int
fidivrs
sbb
nop
dec
ja
fldcw
mov
stc
mov
sub
mov
scas
push
or
mov
insl
xchg
mov
push
stos
stos
fsubs
jl
fsubs
add
inc
jecxz
sub
mov
xchg
test
mov
jbe,pt
gs
xchg
mov
pop
pop
sbb
inc
nop
popf
nop
enter
in
xchg
xchg
xchg
add
pop
je
arpl
mov
scas
subb
aaa
and
mov
popa
push
xlat
bound
lret
push
dec
imul
movsb
mov
mov
setnp
and
ss
scas
sahf
hlt
psubw
in
out
or
jne
cmp
iret
in
shlb
outsb
dec
or
pop
lret
lods
imul
add
adc
mov
add
daa
imul
test
fists
push
nop
sarb
cli
js
jns
push
push
dec
js
mov
nop
cli
sbbl
inc
test
sbb
jnp
inc
lock
adc
pusha
or
shll
sbb
daa
xor
scas
xlat
into
imul
mov
mov
xchg
jmp
insb
addr16
inc
mov
mov
dec
test
cmpsb
push
and
mov
jno
push
sub
lret
sbb
cmpsl
ret
mov
mov
jae
cli
insb
jle
cld
push
popl
mov
dec
jmp
mov
pop
cmp
fidivrl
jnp
les
shlb
mov
in
iret
sub
pushf
pop
rolb
cmc
dec
push
push
fldenv
inc
jmp
pushf
rorb
jbe
jnp
jns
popa
push
lds
push
pushf
sbb
jnp
aaa
enter
mov
data16
push
xlat
push
xchg
lds
inc
aas
movl
int
cltd
mov
je
mov
mov
sub
dec
pop
mov
test
insl
fstpt
daa
popf
in
fisubrs
or
pop
in
ret
aas
sub
lret
int
lret
mov
lcall
mov
stos
xchg
add
mov
loope
subb
nop
pop
arpl
call
mov
das
int
les
xchg
cmpsb
adcl
push
addr16
mov
ficoml
pop
jo
bound
ss
stc
lods
sbb
sub
insl
pop
cld
popf
adc
jmp
push
sbbl
sub
push
sbb
lcall
pop
or
cmp
insl
sti
inc
adc
xchg
shl
jg
inc
leave
ret
or
mov
sub
jo
inc
and
jmp
sbb
jns
jmp
ret
inc
push
jmp
ss
daa
pop
sub
adc
loope
fisubrs
mov
push
cmp
adc
es
pop
std
test
sbb
jno
lods
int3
jg
ja
les
cld
jmp
in
jne
push
mov
push
add
jmp
rcrl
fsubs
push
cmpsl
push
mov
fiaddl
pop
lcall
xchg
mov
xor
xor
out
pushf
cli
sub
popf
xchg
or
movsl
xchg
xor
popf
xor
int
jmp
pop
lahf
in
lret
or
addr16
int3
sbb
jle
lret
pop
fldlg2
pop
sub
je
pop
int
and
mov
int
out
mov
and
das
test
jp
push
leave
jne
dec
fs
daa
push
or
cmpsb
testl
xor
lahf
sar
scas
bound
sub
cmp
push
sbb
jo
add
sbb
jne
jp
movsb
mov
es
adc
and
pop
loop
out
std
lahf
aas
insb
cmp
mov
add
cmp
jle
es
cld
adc
mov
jle
popf
adc
hlt
gs
leave
sub
test
cmp
xor
ficoml
fsincos
xchg
ja
pop
fadds
mov
push
rep
jnp
push
cld
xor
mov
scas
outsl
sub
fdiv
push
jp
cld
push
inc
push
dec
fs
cmpl
jb
movsl
stos
fs
adc
xchg
pop
inc
push
aam
mov
pushf
lock
ret
mov
mov
mov
sub
xor
scas
mov
outsb
out
and
lods
adc
pop
pop
ret
mov
fisttps
xchg
and
mov
fnsave
fnstcw
popa
cmp
mov
pop
js
flds
pop
push
mov
icebp
dec
out
loope
mov
in
push
mov
shll
jl
sub
aas
or
ret
mov
dec
unpckhps
mov
jecxz
dec
xchg
pushf
mov
jp
add
mov
inc
enter
jnp
adc
push
fs
jbe
sbbb
ret
sub
and
sub
into
sbb
add
insb
pop
and
and
dec
adc
cltd
out
sbb
jb
ftst
mov
cmp
pop
ljmp
or
and
cmc
pop
dec
imul
shll
adc
leave
inc
jle
xor
cmp
xor
test
stc
imul
popa
outsl
push
addl
std
add
or
lods
std
mov
daa
rcrl
sbb
lcall
adc
mov
add
push
insb
xchg
je
jne
xchg
aas
out
ljmp
push
ljmp
or
idivb
mov
xchg
je
ret
mov
into
sub
push
or
cmp
mov
mov
ja
fstpt
jmp
adc
es
dec
mov
in
out
pop
dec
lods
shlb
dec
aaa
es
call
fbstp
xor
les
cmc
mov
into
and
stc
scas
out
cli
cmpsb
fldt
mov
clc
enter
cmpsb
lds
fiadds
ss
outsb
cmc
adc
test
xor
aas
dec
pop
lods
out
sbb
mov
js
enter
push
shl
out
push
das
xor
xchg
mov
xor
and
mov
cmp
mov
ljmp
pop
push
outsl
ljmp
xchg
adc
shll
xor
rcl
cltd
add
and
insb
xlat
loop
mov
dec
and
mov
sahf
fs
daa
xchg
and
mov
pop
fistpl
repnz
hlt
cwtl
jno
or
adc
jg
fwait
std
push
mov
cmp
xchg
add
sub
adc
push
jno
push
dec
sbb
xchg
xor
mov
jge
mov
imul
sub
push
dec
ficoms
out
push
hlt
nop
in
out
xchg
cmp
data16
xor
push
mov
or
fnstsw
or
or
mov
add
xchg
mov
fucom
pop
int3
pop
insb
lcall
aaa
arpl
cld
adc
cld
fistpl
mov
push
fstpl
pop
loope
jp
mov
adc
mov
iret
sti
cmp
inc
sbbb
push
dec
mov
out
pop
test
and
lahf
rclb
fcmovnb
test
adc
cli
lcall
jmp
pop
aas
jno
sub
add
jge
lret
pop
add
arpl
rcrl
hlt
mov
or
es
test
inc
jp
dec
mov
add
popa
xchg
adc
inc
push
mov
and
jb
xlat
or
jbe
pop
ret
jo
int3
mov
js
lock
mov
insb
cmp
imul
xor
xchg
nop
fs
fdivs
les
xchg
add
jne
out
mov
cli
pop
into
mov
cli
in
or
sub
sbbb
cmpsb
fwait
add
xor
or
fwait
mov
stos
call
push
sbb
icebp
lock
fcmovne
ss
mov
jno
pop
lea
jo
int3
xor
mov
lea
fwait
out
pop
dec
sti
std
sub
arpl
scas
cmpl
mov
xchg
adc
add
loop
lods
push
mov
ret
arpl
dec
inc
sbb
dec
pop
add
outsb
ja
mov
inc
cmp
mov
repnz
fwait
imul
adc
iret
or
imul
add
dec
jnp
pop
xor
shr
fisubl
dec
jecxz
das
xchg
neg
mov
push
faddl
popf
mov
fwait
inc
adc
mov
enter
dec
xchg
pop
xchg
dec
movsb
or
aad
je
imul
or
les
test
in
or
arpl
pop
jge
pop
inc
jl
mov
fst
cmp
nop
push
jno
rclb
addr16
into
mov
lahf
cmp
outsl
pop
daa
sub
mov
jne
cwtl
out
test
or
adc
xchg
mov
pop
mov
cmpsb
push
cmp
cli
xchg
push
ds
popa
mov
leave
insb
mov
mov
insl
fdivrl
cmp
lret
xor
scas
sbb
add
pop
ficoms
mov
or
push
jns
stos
mov
sbb
pusha
mov
test
xchg
xchg
inc
push
stc
nop
xor
mov
mov
push
or
stos
mov
pusha
std
int
jp
gs
xchg
aad
imul
jle
and
xor
sti
outsb
cmpsb
cwtl
pop
aaa
mov
pushf
add
lods
xchg
jp
inc
in
pop
jne
movsb
sbb
mov
pop
or
mov
lret
mov
out
ret
pushw
test
dec
mov
fnstcw
cmc
aas
subl
mov
xor
stos
push
cmp
fadds
dec
xor
xchg
push
lock
das
fildl
sbb
xchg
mov
call
aas
gs
call
stos
imul
pop
sbb
adc
outsl
push
mov
lret
shrl
sbb
sbb
enter
sub
out
imul
out
cwtl
outsb
fisubl
imul
fdivs
dec
inc
loop
lods
adc
mov
icebp
pushf
or
lea
test
cmc
xchg
xor
xchg
xor
and
aaa
xchg
fdivs
jnp
xchg
and
out
ret
fimull
js
insl
sahf
in
jne
fsubs
std
cmpsl
popa
fcomi
jnp
cmc
sub
mov
inc
dec
xchg
iret
lahf
mov
cmc
add
mov
scas
add
cmpsl
mov
hlt
jno
sar
xchg
nop
push
mov
subb
movsb
divl
mov
aaa
adc
stos
imulb
lea
pop
xchg
push
dec
int3
bound
push
add
arpl
pop
pushf
das
ljmp
lods
int3
lret
out
sub
ds
jle
nop
in
push
nop
vcvttps2dq
stos
lret
je
test
xor
ret
push
adc
mov
scas
add
les
ret
and
push
xor
jecxz
adc
fcomps
imul
in
mov
push
xchg
xor
das
loope
scas
jbe
push
mov
xchg
push
mov
inc
ja
dec
add
cld
stos
fisubrs
std
pop
or
icebp
out
orl
popa
and
sbb
jo
daa
xor
adc
xor
fsubrl
xchg
fwait
roll
pop
xchg
adc
dec
or
popa
pop
xchg
xchg
xlat
mov
lcall
add
xchg
inc
pop
add
inc
ret
arpl
jno
jp
jg
out
mov
fwait
nop
mov
mov
andl
ds
lods
sbb
push
loopne
rcrb
cld
mov
cli
icebp
cmp
data16
scas
sbb
ret
jo
dec
sarl
xchg
arpl
sbb
or
and
xchg
add
idivb
push
push
dec
call
jg
push
mov
loop
xor
mov
jb
into
or
add
gs
sbb
scas
in
je
dec
sbb
jne
mov
jae
mov
and
mov
xchg
fidivrs
repz
loope
das
ljmp
test
dec
ret
jae
nop
repz
mov
jp
pop
jnp
subb
popa
mov
ja
mov
sub
shll
pop
dec
xchg
xor
mov
mov
push
mov
xchg
test
mov
cld
push
push
lret
adc
std
adc
jnp
jb
fisubrl
out
add
mov
sbb
movsb
negb
lds
push
cwtl
lods
jge
add
js
jns
xchg
arpl
fstp
xchg
sub
inc
mov
dec
xor
dec
in
cmp
mov
cmp
cmpsb
mul
adc
push
sbb
icebp
dec
cmpsl
jge
push
or
pop
std
rcrb
and
xchg
outsl
inc
dec
add
adc
add
in
popf
out
inc
cmp
jae
insb
adc
fimuls
int
aam
pop
mov
into
lret
std
mov
sbb
fiaddl
add
loopne
jne
test
lret
cmpb
subl
add
into
push
clc
mov
pop
scas
and
sub
xchg
mov
enter
xor
sub
inc
sub
sub
js
xchg
lods
mov
div
dec
pop
push
jnp
pop
call
fwait
mov
pop
sti
xchg
fcmovnu
mov
lret
jb
fldenv
add
cmp
mov
divb
ja
xor
cmpsb
sti
cmp
push
stc
push
cmp
dec
es
leave
lret
push
jmp
aas
popa
test
out
out
outsl
int
cmp
std
xchg
pushf
inc
aad
ds
and
mov
xor
pop
adc
fdivr
adc
sbb
push
xor
pushf
subl
mov
cmc
lods
xor
cs
and
jle
inc
rorl
in
xchg
cmp
adc
jle
inc
shlb
pop
dec
mov
icebp
out
fbld
popa
inc
popf
fidivrl
mov
cmpsl
mov
cmc
jb
popf
movsl
pop
fdivs
mov
mov
pusha
iret
test
shl
dec
repnz
dec
mov
outsb
fisttpll
dec
push
pushf
pop
arpl
movsl
outsl
icebp
sbb
push
sbb
push
std
imul
inc
out
daa
cli
push
sub
ss
xchg
adc
add
push
filds
mov
sub
or
sub
xor
jp
mov
sbb
lret
testb
add
out
mov
loop
jmp
cmpsl
outsl
mov
inc
add
mov
test
ja
shlb
dec
nop
fimuls
pusha
jge
add
sbb
xor
lcall
nop
push
stc
inc
sbb
push
clc
imul
lahf
loop
jmp
testb
cmp
lahf
or
arpl
iret
gs
mov
mov
xchg
inc
adc
sbb
stos
cmpsl
xor
dec
jge
cwtl
mov
and
stos
aam
mov
jecxz
fs
adc
add
push
and
nop
popl
lret
call
daa
subb
adc
cmpsl
add
fildl
mov
rcll
loop
std
and
jle
or
cmp
lret
mov
mov
cmpb
mov
sub
push
or
jmp
jnp
movsl
roll
mov
xchg
stc
cmp
pop
jns
push
or
insb
pop
rcl
daa
pop
popa
dec
dec
mov
jl
hlt
bound
cmp
push
loop
lea
fiadds
adc
enter
cmp
mov
add
mov
inc
insl
xor
add
insl
nop
xchg
pop
and
push
gs
lahf
andl
inc
and
add
mov
ret
sarl
xlat
movsb
in
int3
cli
fucomp
sbbb
outsb
and
push
into
loope
pop
rorb
xchg
out
cmpsl
adc
cmp
out
test
out
pushl
jle
in
out
jne
adcl
pop
add
aaa
iret
add
or
pushf
testb
mov
icebp
imul
cmp
int3
cmp
add
or
xchg
insl
xchg
clc
jo
sub
ss
mov
rolb
xchg
in
idivb
in
lds
inc
sub
inc
addb
xchg
inc
insb
mov
insl
mov
mov
sti
fstps
imul
loop
subl
arpl
ret
pop
es
and
repnz
sbb
add
outsb
cmc
sbb
js
aaa
xchg
outsb
mov
out
pop
adc
repnz
or
or
xchg
add
int
xchg
and
int3
mov
sub
test
dec
sub
jp
fwait
hlt
mov
je
inc
ret
xchg
pop
adc
nop
arpl
out
jnp
addr16
sarb
cmp
and
xchg
adcl
pop
aaa
rcrb
int
and
insb
jnp
pop
ds
mov
add
cmpsb
jno
mov
jbe
mov
sub
aaa
mov
lret
int3
or
je
out
out
mov
xlat
mov
jmp
test
jp
add
cmp
imul
mov
lret
shl
mov
adc
adc
xchg
movsb
pushf
add
mov
or
fcoml
pusha
sub
jnp
int
mov
jns
cld
jmp
mov
jnp
dec
sbb
insb
fisttpll
fcmovne
push
rolb
test
dec
neg
shl
rclb
jb
ds
inc
mov
jmp
lods
sbb
mov
test
lds
icebp
sub
test
idivb
lcall
xor
xorb
leave
lret
mov
clc
xor
jne
movsb
orb
sti
xchg
imul
push
adc
mov
call
jns
adc
lock
cmp
lds
cmc
int
lods
push
lret
mov
int3
mov
adc
fwait
lock
inc
sub
in
lds
stos
scas
insl
subl
cmc
xchg
sti
dec
flds
test
cmp
dec
add
test
movsb
inc
call
pop
sub
sub
sbb
sbb
mov
outsb
and
dec
std
imul
pop
or
imul
ss
xchg
push
mov
pop
sbb
fldl
xchg
sahf
inc
out
add
int3
and
push
xor
cs
test
insl
aam
adc
call
jg
and
push
or
imul
ss
xchg
mov
jg
xchg
sub
push
outsl
sbb
sbb
add
insl
test
xchg
mov
int
in
sub
adc
cld
jb
sbb
pop
movb
sub
das
push
mov
xchg
or
leave
cmp
jecxz
fxch
test
jle
out
ljmp
fldt
push
jmp
lret
push
inc
sbb
cs
outsl
pop
sbb
xor
gs
and
push
enter
test
andl
pop
xor
leave
mov
inc
fcmovbe
flds
hlt
push
icebp
je
cli
mov
mov
iret
mov
mov
dec
out
sar
int
pushf
sti
mov
jge
sbb
add
jo
out
inc
push
cmpsb
mov
addr16
pop
xor
dec
subl
sub
lcall
adc
repz
xchg
push
cmc
rcrl
add
es
sub
cmp
xchg
dec
push
aaa
test
sub
dec
cld
mov
je
or
les
in
cmp
mov
mov
test
lcall
jbe
jns
fisttps
into
sti
push
rol
hlt
add
das
ds
sbb
fmulp
add
mov
xchg
iret
and
test
push
jle
cltd
mov
movsb
and
adc
xchg
push
sub
adc
fistps
fcompl
xchg
xor
sbb
rcrb
inc
xchg
outsb
xor
xor
mov
or
test
cld
in
add
jl
mov
lods
lcall
stc
insb
leave
jne
dec
pop
movsl
loopne
cmp
lock
stos
sahf
mov
cmp
js
jbe,pn
pusha
mov
xchg
shl
adc
or
pusha
xchg
push
pop
pop
sbb
cmp
cmp
ret
pop
push
sbb
jnp
fcmovnbe
test
icebp
sbb
imul
xchg
clc
hlt
and
out
data16
adc
inc
rcrb
inc
ljmp
mov
fs
push
inc
mov
jae
mov
lock
mov
lea
cmc
daa
xchg
sbb
push
mov
ja
test
scas
cmp
aad
inc
cwtl
popa
iret
cmc
jp
sub
pop
js
sub
sahf
icebp
sub
andb
data16
in
pop
dec
lock
imul
mulb
test
jo
int3
push
dec
adcl
pop
sub
mov
test
mov
and
and
pop
js
mov
insb
pop
and
sahf
mov
mov
in
push
rcr
rol
lahf
mov
push
in
sbb
ljmp
dec
aaa
cmc
lods
mov
stos
mov
rorl
mov
gs
mov
stos
adc
pop
dec
cmp
call
call
and
movsb
popa
pop
and
enter
sti
daa
aas
xchg
test
sahf
fcmove
out
rcll
rclb
mov
sbb
jp
xchg
lods
ss
rorb
stc
jmp
fucomp
dec
mov
es
jne
dec
add
adc
call
add
jnp
lea
mov
in
jecxz
pop
ret
jmp
std
lods
mov
nop
imul
xor
fs
aas
xchg
jmp
or
cli
and
inc
decb
and
in
inc
xchg
adc
sahf
xor
clc
and
outsb
inc
sub
push
test
sahf
sbb
aaa
add
adc
sub
push
jae
jnp
in
test
mul
leave
test
mov
add
pop
jge
pop
adc
fimuls
das
insb
fwait
mov
pushf
shll
sub
and
mov
shr
test
fdivrs
dec
out
test
pop
xor
adc
fnstenv
insb
adc
mov
sub
mov
ret
xor
pop
jb
imul
xlat
adc
or
push
push
sub
jbe
add
negl
sarl
cli
clc
adcb
or
fsubrs
gs
mov
lock
out
hlt
repz
push
mov
pop
aaa
xchg
popa
jo
test
lret
leave
out
sti
push
iret
pop
daa
iret
xlat
repz
fisubs
mov
xor
in
ret
push
loope
xlat
aam
xchg
das
adc
enter
data16
cmp
mov
icebp
pop
mov
lds
dec
test
imul
xor
sub
negl
add
out
push
xchg
repnz
out
jecxz
push
inc
xchg
sub
scas
cs
and
pop
clc
inc
fcoml
push
jl
shlb
aaa
addr16
ror
insb
dec
or
js
je
sub
xchg
jne
push
sub
je
jns
cmpsb
dec
icebp
pop
test
shrl
dec
repz
je
jmp
loope
add
sub
pop
mov
ficomps
fiaddl
loop
and
jmp
adc
cltd
cmp
xlat
int3
sbb
mov
jecxz
gs
jae
es
mov
clc
mov
and
mov
add
data16
mov
int
loopne
xor
mov
xchg
or
or
add
sbb
mov
outsl
in
pop
lods
inc
sbb
in
call
clc
loopne
aas
sub
stc
sti
movsl
pop
adc
adc
dec
shll
sub
mov
es
addl
lcall
repnz
push
adc
add
js
repz
lret
cmp
mov
mov
sub
pop
ja
stos
lahf
aas
mov
popa
icebp
fwait
or
xchg
movsl
mov
sbb
leave
and
inc
sbb
icebp
xor
js
xchg
fstpl
pushf
movsb
daa
xchg
test
cld
add
xor
sub
fwait
nop
mov
dec
add
insl
sbbl
adc
sbb
call
outsl
inc
mov
rcrl
and
sti
jmp
fwait
ja
test
cmpsl
dec
inc
shl
mov
mov
mov
movsl
shll
ds
xor
lock
loope
inc
ljmp
jbe
je
scas
cwtl
lea
mov
lods
xchg
or
push
jne
decb
pop
cli
das
andb
mov
pop
incb
lods
xchg
repnz
and
xchg
outsb
and
cmc
pop
leave
mov
pushf
cmpsl
or
cmc
pop
lret
insb
call
push
push
pop
imul
aam
pop
lea
pusha
mov
mov
scas
test
mov
scas
pop
fimull
aad
out
jmp
mov
mov
out
mov
xchg
loope
lods
mov
xchg
loop
xlat
sahf
test
out
push
sub
dec
call
mov
add
mov
and
lock
inc
mov
and
fildll
pop
mov
in
xor
mov
rorb
clc
ds
sub
inc
adc
push
ficompl
pop
push
ds
xchg
pop
in
mov
pop
pop
mov
lcall
insb
mov
ja
jmp
lahf
and
push
insb
mov
pop
inc
test
dec
imul
sub
repz
xchg
xchg
movb
xchg
icebp
xchg
add
jbe
adc
sub
mov
xor
dec
in
lock
xchg
popf
es
push
sbb
mov
ss
jge
pusha
jo
lea
add
push
pop
cmp
lods
pushf
in
sbb
push
fdivl
test
push
sarb
xchg
out
cmpsl
xchg
mov
or
push
cmpsb
loopne
jg
std
popf
out
jp
stc
rcrb
repnz
add
cmp
addr16
sbb
sahf
imul
and
dec
cmp
mov
dec
sub
inc
imul
jmp
rcpps
sarl
inc
or
call
shl
cld
stos
fnsave
or
inc
pop
and
xchg
mov
das
push
out
inc
add
icebp
idivl
xchg
ds
cmp
out
pop
adc
sbb
inc
pop
cs
lds
mov
xlat
aad
mov
xchg
mov
inc
lods
mov
xchg
popa
dec
lock
sub
insb
or
mov
mull
mov
xchg
ja
sbb
push
adcl
jg
jmp
mov
xor
inc
pop
jg
mov
lea
xchg
add
mov
divl
in
ret
mov
js
xchg
dec
inc
and
lret
stos
cmp
sbb
lret
xchg
daa
andb
add
add
jp
xor
rclb
dec
loopne
jl
mov
xchg
imul
sub
jecxz
insl
xchg
test
jge
add
xorb
shll
cmc
xor
jp
call
addl
jae
push
jnp
add
nop
rorl
or
loopne
mov
je
push
ja
fucomip
add
das
jp
jecxz
fmull
mov
jl
shl
xor
int3
ret
and
into
scas
jmp
lcall
mov
ljmp
mov
andb
ss
push
jnp
xchg
adc
mov
dec
jg
jp
jmp
push
jp
scas
jl
into
iret
dec
or
push
jmp
popf
ret
xchg
fs
out
push
xchg
and
mov
adc
scas
mov
fsubrs
in
daa
pop
push
data16
jns
adc
sbb
sbb
push
int3
nop
sub
dec
push
fbld
mov
js
xlat
and
jge
dec
call
xor
pop
mov
cmc
or
xchg
ret
repz
or
std
stos
mov
adc
fbstp
jne
inc
aaa
es
fldcw
ljmp
pop
add
mov
outsb
cmp
jg
sub
xor
sbb
mov
mov
xchg
test
mov
dec
gs
xor
mov
cmp
xchg
mov
and
sub
xchg
inc
dec
pop
addr16
sbb
jae
enter
sbb
out
adc
fcmovbe
rcrl
in
sbb
xchg
push
es
dec
mov
add
aam
cmp
mov
inc
cmp
jb
jl
stos
into
adc
int
cmp
mov
mov
lret
and
mov
loope
out
aaa
mov
add
pop
sub
cwtl
and
jle
in
pop
and
scas
and
call
and
lea
fdivrs
fbld
andb
mov
push
loope
lods
aaa
stos
cmp
cli
lock
mov
in
scas
xchg
call
pop
sub
lods
xchg
lds
stos
or
lock
xor
xchg
adc
int
inc
int3
push
loope
xor
in
popl
sub
dec
pop
and
imul
and
out
sub
jbe
into
in
xchg
cmpsb
or
mov
mov
mov
sbb
lock
pop
adc
push
stos
jg
ljmp
inc
cmp
sbb
sete
jno
xchg
cmpsb
shrl
pop
sub
push
in
lods
xchg
mov
in
push
pushf
inc
lock
fistpl
cmp
and
fistps
add
loop
hlt
mov
add
dec
loope
std
test
add
outsb
fcomp
inc
into
xchg
pusha
ret
iret
test
lret
test
xchg
inc
sub
mov
pop
xchg
mov
push
sub
fdivs
xorb
sti
loope
adc
adcl
xor
sti
ja
test
scas
mov
xchg
xchg
and
push
mov
lods
cmp
mov
movsl
push
mov
movsl
test
push
stc
cld
ret
bndldx
in
cwtl
dec
inc
sbb
push
sbb
iret
movsl
xchg
js
rolb
std
or
push
push
sub
sub
mov
mov
push
pushf
mov
jle
lods
stos
or
fidivrs
fs
out
inc
push
adc
lods
mov
add
add
jae
outsl
loope
in
xchg
loop
dec
fistps
cmp
and
mov
int
out
daa
fcmovnu
dec
mov
push
in
and
xor
or
mov
sub
add
xchg
push
xor
sbb
pop
jae
jmp
cmp
aaa
fdivl
and
or
in
fimull
mov
into
fidivrl
jo
rcrb
sti
js
inc
stos
push
and
inc
cmpsb
addr16
mov
jg
bound
xchg
mov
adc
mov
in
outsl
and
or
mov
fucom
and
adc
aam
sub
movsl
sub
out
mov
fisubl
call
cmp
dec
adc
sti
pop
cwtl
cmpl
dec
mov
or
aas
sub
loopne
iret
push
into
imul
adc
cmp
mov
sti
push
push
sti
aas
popf
loop
sbbb
cmp
inc
std
popf
sub
inc
aaa
xchg
stos
and
fisubl
pop
mul
addl
divb
adc
jns
mov
xor
sub
xor
daa
ss
sbb
outsl
pop
sub
mov
sub
int3
gs
scas
idivb
je
or
lcall
or
mov
jl
xor
and
loope
inc
xor
popf
std
or
ss
out
fcomps
roll
push
dec
add
cltd
cli
daa
mov
push
push
fstpt
lret
pop
push
movsl
hlt
pop
enter
in
mov
test
pushf
sbbl
adc
jno
inc
mov
nop
pop
or
neg
lods
movb
andps
cli
mov
popa
or
sbb
fimuls
int3
jno
pop
daa
adc
mov
fdivs
data16
pusha
adc
dec
mov
aaa
push
mov
sti
fimuls
push
xchg
les
dec
cmpsl
jno
xlat
and
mov
cmpsl
dec
iret
jmp
in
enter
insb
push
mov
adc
lods
add
pop
es
and
es
mov
fwait
mov
iret
push
sahf
fwait
in
mov
xor
adc
rorb
pop
loop
fcomip
add
jo
test
aam
adc
and
or
xchg
aas
mov
daa
jp
adc
xor
push
push
sub
lahf
mov
sub
cmc
aad
call
iret
mov
xchg
icebp
xchg
mov
cmc
jb
mov
testb
and
xchg
scas
push
leave
mov
pop
daa
insb
pop
cli
jae
or
lods
or
gs
repnz
fcmovne
xor
in
add
dec
jbe
sub
fnstsw
test
or
mov
cld
movsb
push
sar
mov
and
push
or
insl
jne
out
cmp
ret
jo
adc
push
push
fdiv
or
mov
ds
jbe
jae
mov
clc
and
testl
int3
test
push
imul
repnz
shll
xchg
sub
dec
push
out
ljmp
mov
or
adc
push
pop
mov
mov
xor
and
fidivl
mov
sbb
push
mov
sbb
and
jne
adc
testl
dec
std
mov
jnp
sbb
sbb
lret
mov
arpl
pop
mov
cmpsl
add
xchg
xchg
daa
cli
fsubr
cwtl
jns
daa
arpl
xchg
xchg
setb
insb
xor
mov
outsb
mov
pop
sub
cld
mov
push
fiadds
rcr
pop
sub
aam
test
push
mov
arpl
jmp
into
pop
ss
jne
lret
rcr
leave
insb
pop
ret
pop
add
sub
es
minps
and
mov
lds
mov
shr
subl
push
stc
and
xor
dec
lds
mov
add
daa
imul
adc
movb
push
lods
mov
mov
movsb
xor
mov
cwtl
xchg
rorl
stos
cwtl
lret
out
lods
test
lea
addb
sbb
pop
adc
and
testl
cmp
mov
fs
mov
popf
sub
hlt
lods
push
adc
push
cltd
push
lock
dec
loopne
fldenv
push
leave
addl
lods
jns
or
and
loopne
mov
sbb
pusha
inc
mov
mov
lods
notl
dec
clc
fisttpll
loope
mov
mov
lret
fldcw
inc
or
sub
fildll
xchg
dec
jmp
cmc
xchg
sahf
cld
out
push
inc
sbb
xlat
mov
xchg
sbbb
inc
gs
out
ljmp
dec
add
pop
jb
lods
fwait
dec
testl
aas
fsubl
jns
sbb
test
mov
mov
add
je
jge
adc
mov
pop
nop
mov
in
cmpb
movsl
int3
and
push
mov
lea
mov
and
ss
lods
fs
filds
es
aad
pop
lock
insl
icebp
and
xchg
cmp
cmc
out
push
jae
pop
push
pop
bound
xchg
cmp
in
outsl
cltd
adc
xor
aas
enter
push
pushf
mov
cmp
jno
stc
inc
hlt
aaa
jae
repnz
icebp
mov
addb
pop
jne
rcll
xchg
in
imul
jnp
hlt
cmp
pop
push
mov
bound
cmp
xchg
push
adcl
mov
pop
mov
cmc
decb
int3
xchg
dec
sbb
mov
xor
dec
and
loopne
jns
sub
sbb
in
js
inc
pusha
out
sti
daa
aas
xchg
fisttpl
push
or
mov
push
dec
push
cmp
imul
lock
add
es
shl
push
xlat
xchg
aaa
lahf
iret
jle
into
cmc
into
dec
push
shl
repnz
cmp
sub
hlt
ljmp
ja
push
dec
mov
mov
pushf
xor
and
or
fsubl
sbb
jae
jmp
push
stc
gs
loope
aad
mov
lcall
or
leave
mov
mov
rcrb
lcall
scas
mov
inc
push
cmp
mov
cmp
lods
push
mov
xor
das
movsl
fmul
out
loope
mov
bound
add
ss
pop
out
aad
and
add
imul
add
sub
dec
mov
inc
and
or
stos
iret
nop
mov
lea
aas
fwait
insb
xor
js
or
xchg
cwtl
pop
mov
add
subl
fstps
dec
jmp
daa
inc
stc
pushf
sbbl
into
lret
cmp
fs
mov
add
ljmp
mov
loop
movsl
push
arpl
ret
push
in
dec
sbb
jg
push
push
loop
dec
cmp
inc
outsb
test
lahf
jl
and
add
push
les
or
xlat
mov
fwait
cmp
rcrb
nop
jae
sbb
jns
sbb
mov
sbb
sub
or
pop
lods
lea
loop
mov
cmp
icebp
or
adc
xor
push
int
mov
daa
andl
dec
arpl
mov
mov
pop
xchg
in
fdivs
pop
ret
aas
dec
in
mov
push
in
pushf
scas
dec
mov
cltd
psrlq
sbb
cmc
mov
pop
in
mov
push
loop
jecxz
xorb
adc
cmp
sahf
shll
mov
test
push
lods
dec
sti
push
scas
add
pop
into
pop
into
mov
pop
xor
ret
cmp
cli
outsb
cmp
sbb
jl
mov
sub
and
push
iret
loope
push
repz
cwtl
je
xchg
stos
add
bound
mulb
out
movsl
cmc
lret
enter
mov
je
mov
cmp
pop
pusha
outsb
pop
ror
xor
scas
adc
insl
xorl
inc
jb
add
lret
inc
subb
fwait
bound
in
xlat
dec
inc
inc
push
inc
cltd
jbe
xor
mov
inc
add
jle
cmpb
outsb
push
pop
push
cmc
inc
jno
nop
imul
repz
or
cmpsb
in
mov
adcl
repnz
or
subl
push
leave
push
cmp
push
push
adc
pop
stc
xor
neg
mov
adc
in
mov
xchg
cltd
cmp
add
decb
cmc
test
or
mov
and
jle
sbb
je
xor
lret
jae
sbb
popf
jb
lock
inc
pop
stc
loopne
jg
cmp
pop
jo
dec
mov
xor
outsb
sbb
cmp
test
cs
xchg
cmp
andl
jnp
sti
xchg
inc
jge
loop
loopne
sub
xchg
insl
and
mov
mov
aad
adc
out
int3
insb
jns
sub
cmc
mov
push
out
nop
jmp
out
mov
cmc
icebp
jmp
mov
fstpt
jge
aam
les
and
mov
test
xlat
pop
pop
sub
adc
stc
xchg
std
out
sahf
cmpb
out
push
mov
int3
mov
mov
int
pop
pop
cmp
jno
movsb
test
xchg
inc
lea
jle
scas
inc
lahf
xchg
mov
lds
stos
rolb
mov
xor
xchg
stc
in
lcall
and
imul
out
pop
xlat
ret
outsl
cltd
push
sub
xor
test
push
in
push
js
cmpsl
in
dec
push
sub
sbb
sub
push
out
mov
mov
jge
cmp
es
xor
fs
pushf
jg
clc
and
xchg
mov
int
push
lea
add
out
xor
jnp
mov
pop
xchg
pop
in
movsb
cwtl
cmp
mov
xor
lods
sarl
jp
shlb
negl
pushf
jno
js
mov
add
scas
xchg
imul
dec
jl
dec
inc
adc
cs
xchg
xorl
adc
clc
pop
jnp
push
test
push
jnp
sub
cwtl
repnz
jmp
mov
ss
xor
mov
adc
nop
mov
cmp
cs
jp
push
lods
add
mov
lods
lea
jp
icebp
js
adc
outsb
pop
dec
xor
outsb
add
movb
hlt
xor
mov
outsl
jle
data16
adc
test
push
adc
nop
adc
or
aam
cmpsb
rcr
or
clc
push
push
cmp
imul
mov
push
jno
add
lea
inc
lds
jmp
out
pop
cmp
adc
lock
jno
std
sub
jns
repnz
data16
fucomi
xor
add
push
and
andb
dec
jecxz
sbb
push
or
jle
ret
and
roll
push
push
xchg
push
std
jno
test
pop
cwtl
lret
push
stos
lret
or
mov
cltd
mov
fstps
xchg
test
inc
mov
fdiv
or
mov
inc
cmp
shrb
or
pop
xorl
cmp
ds
inc
pusha
adc
gs
rcl
fucom
je
sbb
dec
incl
cld
jne
pop
xchg
je
pop
movsb
pop
push
mov
enter
rcrl
xchg
sti
ficompl
xor
test
in
push
leave
ret
push
out
mov
inc
and
iret
push
mov
jno
adc
insl
lret
cmpsl
scas
or
dec
mov
dec
dec
mov
cmpsb
xor
dec
pop
push
push
test
push
inc
cmc
inc
js
mov
enter
ds
sub
cmpsb
push
fidivl
loopne
push
push
sbb
repnz
mov
imul
lret
jae
xchg
jp
mov
push
xor
jae
sti
popf
outsb
push
daa
ret
sub
mov
out
xor
lahf
lods
pop
movb
fstl
mov
xor
or
xor
popa
clc
icebp
sbb
vcvtss2sd
lea
hlt
pop
mov
nop
mov
xchg
pop
test
add
inc
dec
dec
sbb
sub
and
push
and
aad
dec
adc
pop
jae
imul
out
mov
dec
xchg
in
clc
cmp
sub
je
mov
pop
pop
pop
add
insb
or
popa
dec
mov
movsl
mov
nop
stc
pusha
popa
dec
inc
andb
das
ret
mov
hlt
icebp
sbb
sbb
jno
xchg
xor
push
xor
stc
mov
mov
paddusb
push
rol
ret
ficomps
dec
and
xlat
out
cmc
stc
cmpb
mov
insb
xchg
pop
idivb
push
loop
xchg
xchg
shlb
dec
mov
xchg
lods
add
rcr
sub
cmp
push
and
pop
pop
xchg
dec
negl
add
adc
jmp
mov
sub
sbb
ficoml
imul
pop
nop
mov
xor
push
shll
or
adc
xor
mov
dec
daa
jo
push
add
sub
int
jp
scas
dec
and
ss
mov
cli
imulb
push
in
inc
test
js
repz
fnstsw
jl
mov
sub
mov
fidivrs
and
shrb
mov
mov
mov
insb
mov
push
test
insb
mov
jecxz
or
mov
loope
push
adc
jp
jnp
dec
mov
push
inc
or
xchg
hlt
lock
movsl
pop
dec
pop
shlb
jno
fwait
lret
xchg
cmp
jge
sti
xorb
inc
sbb
cmp
rol
ljmp
push
pop
and
push
mov
jns
imul
cwtl
xor
mov
or
mov
arpl
imulb
mov
lock
jns
lcall
lods
std
movsb
adc
pop
xchg
pop
mov
mov
mov
add
icebp
dec
mov
or
and
popf
mov
jge
xor
pop
pop
movb
sub
push
mov
mov
movsl
movsl
adc
lret
push
jle
popf
jg
inc
xchg
adc
jp
jg
repnz
dec
sbb
fsubs
inc
xchg
rcr
mov
rcrl
or
cmpb
push
and
pop
call
add
enter
mov
or
push
aaa
xorl
inc
jne
jecxz
dec
dec
or
sub
mov
sahf
inc
cmpl
lock
out
ja
inc
mov
lea
mov
pop
dec
in
jle
fistl
dec
xor
popl
push
loope,pt
shl
inc
cmp
cmpsb
sub
inc
jp
or
mov
mul
mov
adc
repz
mov
adc
js
pop
sarl
adc
in
lods
push
pusha
mov
testl
adc
js
testl
in
das
in
push
mov
stc
in
clc
push
pop
push
lahf
xlat
dec
add
pop
xchg
test
ret
push
call
mov
jb
lcall
xchg
iret
pop
cli
mov
fstps
inc
xor
mov
and
push
imul
or
ss
dec
nop
inc
sahf
xchg
mov
adc
add
lods
lahf
mov
cmovl
xor
sub
cmp
xchg
or
int3
sub
inc
daa
push
mov
subb
sahf
pushl
out
in
sti
clc
xor
pop
mov
lea
sbb
and
repnz
fwait
pushf
jmp
dec
jae
xchg
leave
mov
jge
call
es
jge
out
movsl
add
js
mov
pushf
cmpsb
sub
mov
andb
data16
mov
repnz
push
mov
vmwrite
ret
out
jne
addb
cmp
jmp
mov
mov
bound
mov
data16
pop
ret
mov
sarb
mov
sahf
cli
scas
inc
cmc
into
cmp
xchg
adc
mov
cmpsl
dec
mov
mov
out
aas
cmc
jle
mov
pop
lea
das
mov
pushf
jmp
stc
xor
push
mov
out
sub
dec
ja
jne
mov
loope
test
insb
cld
dec
jbe
sub
cli
mov
xlat
pop
divl
sub
test
mov
mov
jecxz
ret
and
adc
stc
mov
addb
xor
or
pop
stos
jb
rolb
dec
icebp
jg
insl
or
xor
inc
xchg
sbb
xchg
inc
add
xchg
movb
fcoms
rcrb
rcrl
aam
adcb
inc
cmp
sub
jmp
jb
mov
mov
imul
cld
ljmp
ds
pusha
sub
mov
and
dec
clc
mov
aad
orb
fwait
test
scas
xor
mov
ret
push
mov
cmp
test
add
pop
xchg
pop
sub
in
cmp
or
pusha
imul
mov
add
add
or
mov
mov
ja
gs
push
adc
pop
inc
mov
ficompl
pop
outsb
inc
fisubrs
push
or
push
icebp
xor
mov
xchg
imul
aas
sub
sub
cmpsl
push
push
sub
cwtl
mov
jge
mov
push
adc
or
jmp
pop
jo
fsubl
shrb
lock
xor
adc
cmp
adc
imul
aaa
ds
and
call
or
jp
xlat
insb
xchg
mov
ret
fbstp
enter
jbe
out
inc
inc
cmp
or
addb
rorl
dec
sub
fsubs
adc
dec
cltd
pop
fstpt
es
aam
jge
mov
cmp
dec
pop
dec
test
xlat
mov
jae
fsubrs
dec
sbb
loopne
add
leave
stos
rcll
jmp
cmpsl
stos
jns
sbb
xchg
aam
jbe
adc
out
push
xchg
mov
ret
bswap
nop
es
sahf
mov
xchg
mov
xchg
mov
insb
ja
in
push
dec
icebp
add
cmc
jnp
push
pop
sub
arpl
adc
cmp
or
fiadds
jae
les
push
adc
and
push
loope
xor
jecxz
test
pop
pushf
movsb
push
mov
in
popl
scas
fwait
add
test
jge,pt
popf
ds
mov
filds
fnop
push
outsb
push
mov
xchg
lahf
mov
fwait
dec
and
xchg
test
call
sub
int
dec
xor
shlb
stc
mov
mov
ficoml
mov
pop
arpl
lock
xchg
lods
pop
icebp
fs
mov
int
ret
xchg
loop
jne
rcll
mov
mov
add
call
insl
popf
mov
xchg
js
pop
sub
outsb
and
fcmovnb
xor
in
arpl
ja
mov
add
lret
xor
shlb
icebp
or
dec
and
push
popf
movsl
std
std
sarl
enter
repnz
aas
push
lea
or
sbb
ficoml
xor
jne
insl
sar
sub
dec
push
test
dec
xor
pop
adc
mov
cmp
lea
loopne
int3
orb
mov
xor
pop
ficompl
inc
and
pop
pushl
scas
outsl
test
fs
jb
xchg
cwtl
cmpsb
or
nop
pop
pushf
ss
cmpsb
mov
aam
jbe
pop
cltd
cmp
and
in
dec
movsl
mov
jg
mov
rorb
bound
and
jns
and
fldl2t
subl
sub
insb
xchg
xchg
vshufps
fcoml
jns
dec
mov
sub
out
pop
ss
inc
sahf
movsl
xor
shl
push
mov
cli
and
inc
icebp
jno
loope
outsl
aad
mov
hlt
sbb
or
xchg
mov
orb
rclb
dec
clc
shll
and
ficompl
sarl
fstps
jg
dec
xchg
sub
xchg
test
xor
pop
lods
call
sub
iret
dec
push
and
into
in
dec
mov
rolb
in
aad
inc
push
es
push
inc
imul
pop
and
fwait
dec
mov
fsubs
pop
push
pusha
lahf
jbe
mov
xchg
add
sbb
loope
mov
xor
mov
test
repnz
pop
pop
fs
mov
jecxz
push
clc
mov
mov
popl
mov
rcll
adc
mov
mov
mov
cmp
cli
dec
pop
cmpsb
adc
sub
jle
mov
jecxz
ss
rolb
dec
mov
inc
mov
jecxz
mov
cmc
jnp
inc
mov
pop
xchg
lea
lcall
and
add
outsb
ficoms
push
ja
xchg
lret
test
fisubrl
in
push
loopne
xchg
and
cmp
xor
inc
add
push
lock
dec
jbe
add
ret
out
or
je
mov
nop
jb
dec
xor
mov
cwtl
movsb
dec
shrb
add
add
test
inc
dec
lds
adc
inc
push
adc
add
pushf
jo
jp
xor
inc
pop
fsubl
mov
cmp
mov
push
mov
mov
fcomps
push
push
stc
stos
cmp
push
lock
jp
jae
jae
imul
lret
andl
movb
in
test
push
mov
push
or
movsb
push
lods
pop
mov
mov
popf
and
jae
and
mov
lods
stc
mov
inc
sub
mov
pusha
add
outsl
or
cltd
xor
sub
mov
in
pop
bound
add
lock
testb
or
xchg
arpl
cltd
cwtl
cmpsl
push
push
sbb
out
ret
jns
mov
rcrb
addr16
dec
in
push
push
in
mov
pop
clc
and
dec
jmp
xor
jb
lea
push
adc
clc
in
js
add
movsl
xchg
dec
sub
and
jmp
push
pop
int3
xor
sti
les
clc
lahf
mov
push
and
incb
sbb
loope
repz
and
xchg
test
rcrb
fdivs
xchg
testl
insb
mov
inc
push
jnp
out
cmp
js
mov
adc
sub
loop
test
pop
and
mov
mov
mov
test
test
xchg
and
mulb
and
jae
jb
mov
out
xchg
push
adc
in
xchg
lcall
jl
lret
xchg
fdiv
outsb
mov
dec
icebp
aaa
mov
jle
mov
jnp
jae
and
xchg
test
mov
mov
addr16
jg
jg
xchg
fmull
xor
mov
mov
adc
mov
push
xchg
inc
xchg
rolb
sbb
xchg
lcall
movl
and
mov
rolb
icebp
xor
aam
inc
pop
xor
addr16
push
xlat
push
add
cmp
mov
adc
and
mov
mov
mov
cwtl
add
out
and
push
das
jb
les
shll
fsubr
pushf
mov
adc
stc
inc
xor
lock
enter
push
inc
aaa
rolb
mov
cmpsb
or
inc
mov
lock
shlb
imul
sub
lock
out
cmpsl
push
add
lcall
repnz
insl
in
lahf
pop
in
cmp
shr
sub
pushf
repnz
mulb
pusha
pop
jns
out
pop
int3
pop
test
mov
pop
out
popf
into
adc
jb
jecxz
ja
aaa
fstpt
stos
push
in
xchg
dec
inc
ret
push
add
sbb
jae
push
sbb
push
loopne
xchg
fs
subl
cmp
mov
out
inc
data16
stos
adc
push
xor
outsl
cmpsb
sbb
cwtl
enter
sub
push
iret
pop
or
xchg
test
or
mov
ret
mov
out
sub
int
incb
xchg
sub
pop
fsub
fwait
lret
roll
xor
add
mov
sub
mov
addr16
pop
add
repz
and
jne
ror
push
cld
shrl
std
cmc
inc
xchg
lret
clc
loopne
aaa
pop
mov
pop
loope
mov
aaa
mov
lds
or
push
xchg
pop
fsubrl
mov
sbbb
pop
or
test
pushf
jecxz
data16
mov
mov
pop
jne
inc
cmpl
cmp
pop
sub
inc
mov
pop
or
add
test
cld
das
add
fadd
and
jge
cmpsl
fsubl
jle
inc
cli
xchg
fucom
dec
bound
stc
sbb
adc
lods
out
shrb
ljmp
das
js
push
insb
sbb
ret
pop
add
pushf
in
fsubs
rcrl
and
fisubrs
or
lret
mov
push
push
jb
mov
push
cmpsb
jne
mov
mov
adc
sbb
call
cs
in
dec
cmp
outsb
ljmp
lea
dec
cltd
mov
ja
jae
mov
cmc
pop
mov
and
imul
xor
mov
pusha
mov
lods
xchg
push
repz
in
or
in
dec
ljmp
idiv
ds
outsl
insb
and
loop
and
and
sbb
jae
add
loopne
les
daa
fidivl
mov
call
fimull
into
push
data16
jg
cmc
or
mov
pop
fiadds
cli
pop
add
sbb
jmp
mov
ja
cld
pop
cltd
jge
aaa
mov
adc
mov
jnp
lret
adc
lret
fbstp
and
adc
cld
xor
push
lods
inc
xlat
cmpsl
dec
mov
in
xchg
xor
mov
cmpsb
or
mov
mov
andb
int3
int3
inc
jp
pop
inc
shll
sub
push
mov
inc
xchg
cmp
lahf
and
out
daa
mov
lds
or
jo
xor
out
call
lds
sbb
ja
sub
or
push
or
push
xchg
orb
inc
es
out
mov
and
popf
inc
sbb
inc
xchg
test
cmp
rolb
inc
push
inc
sbb
dec
out
mov
mov
xchg
dec
mov
dec
daa
add
leave
push
jl
inc
leave
push
mov
pop
loope
sbb
or
addr16
xorl
dec
xchg
test
icebp
xor
dec
aam
push
sarl
pop
cs
es
cmp
or
popa
lods
test
out
or
andb
nop
clc
jecxz
imul
mov
adc
call
xor
cmp
jle
stc
xor
jne
xchg
insb
inc
test
jo
ss
dec
jne
xchg
jae
jmp
mov
jge
push
cs
mov
xchg
mov
cwtl
pop
hlt
cmp
cltd
sarl
ud2
xor
lock
dec
jge
inc
ret
stc
cmp
cmpb
adc
dec
clc
test
rcll
adc
dec
xchg
xchg
stos
cmp
nop
adc
lret
and
mov
dec
adc
xor
xchg
inc
mov
lock
mov
aaa
sub
mov
pop
xrelease
repz
jmp
dec
xchg
adc
call
pop
fdivrs
add
scas
cmp
inc
movsb
dec
hlt
sub
sbb
cs
push
aaa
jae
jge
pop
xorl
lea
add
dec
dec
push
cld
dec
push
jne
insb
pop
push
jle
push
jmp
ret
pop
cmp
jnp
adc
fldl
mov
xchg
push
shr
jbe
data16
or
jp
cmp
ss
inc
xor
dec
sti
mov
addr16
mov
mov
inc
loope
or
pop
pushf
jecxz
aas
ja
pop
inc
mov
sbb
add
into
adc
xorb
pop
push
bound
stc
xor
popa
out
icebp
mov
ret
cmc
iret
mov
sbb
cmp
adc
xor
fs
jmp
inc
mov
sbb
int3
add
testb
imul
jecxz
call
sub
push
pop
push
xor
push
add
insb
enter
aad
dec
stc
add
dec
loopne
pop
mov
orb
movsl
push
xchg
inc
inc
add
push
gs
sub
stc
loope
xor
push
dec
push
add
jg
push
outsb
mov
mov
clc
adc
mov
aad
pusha
clc
call
shlb
shll
test
lret
lock
xor
inc
sbb
cmp
xchg
cmc
daa
ds
stos
pop
stc
add
test
push
add
cmp
cmc
inc
insb
adc
data16
sbb
mov
mov
int
dec
push
mov
addr16
add
pop
add
mov
icebp
xor
repnz
dec
lahf
xchg
dec
mov
std
test
mov
push
fstpl
xor
push
pop
jp
sbb
xchg
int
dec
scas
push
pop
ljmp
or
push
cmpb
popa
xor
push
mov
pop
das
jno
inc
dec
sub
xor
sbb
das
add
xchg
mov
mov
loope
fsubrl
push
add
inc
add
pop
and
xchg
mov
fwait
and
cmp
int3
mov
mov
adc
and
or
cmp
test
daa
sbb
mov
daa
clc
pop
fdivs
inc
add
stos
into
dec
xchg
subl
insl
dec
push
rorb
sub
bound
push
and
mov
cmp
pop
inc
aas
es
mov
popa
pop
xor
jne
ss
test
lret
out
stc
jae
push
cmp
push
and
ret
xchg
mov
adc
bnd
repz
and
xor
dec
adc
lahf
push
stc
add
fimull
sbb
sbb
fsubl
test
cmpl
call
test
call
sub
pop
push
lret
xchg
xor
aam
movsl
mov
scas
cmpsb
add
test
cld
sbb
mov
mov
sub
mov
add
jge
dec
mov
jecxz
std
lret
out
jle
loopne
push
das
fisubs
jecxz
call
jmp
repz
push
test
add
test
frstor
pop
mov
aaa
test
mov
movsl
xchg
pop
jge
inc
lock
mov
push
mov
mov
push
loope
dec
cli
ret
pop
sbb
sbb
cmp
or
int3
push
mov
pushf
jae
cld
sub
pop
jae,pn
sbb
cmp
addl
jno
into
ljmp
lock
push
cmpsl
inc
mov
sarb
outsb
ss
push
xor
pop
add
adc
pop
mov
jnp
xchg
test
flds
mov
push
xchg
aaa
pop
jge
cmp
jle
mov
xor
mov
lock
jmp
je
lea
adc
pushf
into
subb
test
in
sub
pop
sbb
mov
dec
mov
fcomps
dec
mov
cmp
jmp
movsb
fcmovb
jbe
orl
faddp
xorl
xor
arpl
loopne
mov
das
aad
sub
std
call
fwait
or
mov
mov
aam
repnz
call
cltd
mov
out
push
xor
shl
aam
xchg
fists
divl
and
jge,pt
mov
cmp
xchg
test
xor
inc
clc
pop
add
jmp
lahf
int
jmp
inc
pop
jb
jge
roll
fs
mov
mov
jp
std
push
sbb
popa
sub
inc
mov
dec
pop
sub
jg
dec
add
or
add
js
ja
mov
xor
dec
bnd
push
int
mov
cmp
in
roll
jecxz
jmp
lret
orb
cltd
popa
fstpt
stos
pop
jp
inc
in
into
outsl
jmp
push
out
les
stos
fcmovb
dec
fcomps
test
cmp
pop
mov
movsl
inc
cmpsl
cltd
mov
push
dec
cmp
call
cwtl
pop
in
jg
cs
outsl
jl
adcb
test
in
or
adc
mov
add
push
lods
pop
fildll
jmp
out
insl
nop
inc
dec
mov
jl
insl
jne
lcall
js
repnz
inc
dec
and
jmp
and
arpl
ret
cmc
inc
scas
jp
or
ljmp
sbb
das
push
xor
lods
stos
rcll
adc
add
mov
lods
sbb
lret
cld
xchg
dec
ret
mov
scas
adc
jns
test
movsl
fmull
jo
stos
sub
lcall
cmp
pop
cld
ret
adc
shrl
adc
in
or
cmp
add
xchg
jp
jnp
adc
insl
mov
test
iret
sbb
jg
pop
lcall
shll
bound
out
or
clc
fwait
jg
xlat
sub
fidivs
xlat
mov
lahf
cmp
sub
mov
or
rorb
lret
fisttpl
dec
out
mov
push
rclb
outsb
sti
popf
movsl
movsl
lods
adc
cli
sbb
hlt
loope
or
cmpsl
repnz
lret
cli
pop
aas
js
addr16
or
push
in
cmp
push
in
lods
sub
test
shlb
dec
dec
push
sub
scas
sbb
lret
sub
mov
iret
stc
or
and
xchg
sbb
mov
repnz
mov
cmp
cmp
aaa
nop
jae
cmp
inc
cmp
pop
rolb
mov
js
lret
mov
jle
cmpsl
fisttpl
inc
out
jb
mov
mov
push
fists
push
xchg
pop
fs
popa
jg
out
into
fsubrs
out
jge
jp
lret
test
push
mov
pop
dec
and
xchg
jae
dec
or
inc
rcrl
rol
inc
fdivl
movsl
add
fmul
jle
fs
jbe
mov
adc
sahf
mov
mov
sbb
out
cmp
jmp
pop
movsb
mov
shll
pushf
fbstp
pop
cmp
jae
add
scas
lods
nop
or
ds
inc
lahf
jecxz
xchg
dec
hlt
movsl
or
das
mov
enter
test
shll
mov
xchg
lret
arpl
jae
mov
cmpsl
mov
stos
shll
inc
dec
inc
loopne
cmp
mov
sbb
jecxz
orl
lods
sub
mov
sbb
or
popf
inc
gs
mov
aad
mov
mov
or
mov
fnsave
addb
mov
and
push
add
xor
mov
sbb
test
repz
sbb
imul
dec
pop
sub
sub
push
mov
shrb
xchg
fistpll
fsubrp
add
mov
mov
mov
mulb
mov
jae
adc
mov
lcall
adc
pop
and
notl
pop
adc
test
loopne
cmp
xchg
lret
lret
pop
stos
stc
mov
sti
out
fimuls
cld
enter
loopne
xchg
xchg
dec
pop
pop
add
popf
lcall
sbb
mov
test
ficomps
jns
sub
cmp
mull
dec
imul
adc
rcrl
pusha
sub
clc
xorl
xchg
jmp
adc
pop
push
mov
dec
vpsllw
xor
mov
push
jne
and
xor
popf
adc
lea
sub
adc
call
loop
dec
mov
or
or
bound
adc
cmpb
nop
imul
sbb
add
out
insb
js
test
dec
mov
gs
rcrl
add
sbb
dec
sbb
out
adc
add
add
jmp
mov
xor
dec
frstor
jle
push
sbb
mov
xor
push
pop
jecxz
pop
std
mov
pop
mov
test
inc
xor
cmpl
jp
inc
imulb
dec
pop
push
push
scas
js
dec
sahf
out
push
es
mov
into
sarb
jle
push
lahf
sbb
add
mov
cmp
imul
mov
mov
xlat
inc
sub
dec
inc
in
dec
and
scas
jecxz
out
xchg
push
mov
pop
cwtl
sbb
xchg
insl
xchg
repnz
lods
jmp
lret
xchg
iret
push
iret
pop
push
xor
mov
or
test
negb
aaa
sbb
dec
or
add
push
pop
fwait
adc
mov
push
xchg
jle
inc
mov
dec
xor
lret
jns
mov
and
insl
push
xchg
dec
icebp
loope
sarb
xchg
adc
mov
jns
subl
mov
lcall
mov
das
lods
fbld
andb
mov
ja
addr16
dec
shlb
push
sbb
sub
fwait
pushf
daa
inc
fisubs
shlb
int3
adc
mov
test
popa
xor
mov
jns
jge
mov
jns
or
cmp
and
mov
sbb
mov
and
pop
lea
pop
stos
mov
ret
cmc
xchg
mov
inc
sub
mov
sbb
push
clc
pop
sbb
hlt
addb
popf
cmp
les
popf
fisttps
ret
sbb
lods
jo
cmc
in
xchg
lods
hlt
or
dec
inc
rcr
lret
mov
sbb
jmp
xor
or
ss
scas
in
cmp
movsl
mov
ret
xchg
dec
mov
jl
mov
out
and
xlat
cmpsl
sbb
inc
mov
ret
or
in
push
into
rorl
xchg
xchg
imul
cli
sub
mov
fisubrs
sub
xchg
mov
clc
mov
cmp
jecxz
mov
mov
stc
cmpsl
inc
jp
jbe
cwtl
sti
ds
pop
and
push
push
aad
sarb
mov
aam
addl
add
pop
adc
popf
add
lods
mov
sbb
or
add
fwait
aas
mov
jecxz
push
sub
mov
les
std
sub
hlt
jp
repz
sbb
call
pusha
and
inc
mov
int3
jmp
jp
adc
dec
adc
inc
adc
xor
jl
int3
sahf
cmp
ss
sbb
pop
fmulp
adcl
imul
push
jle
jno
fcomi
push
dec
mov
push
out
xlat
lods
xlat
pop
mov
jo
clc
shll
decb
jns
arpl
mov
add
pop
rolb
and
mov
push
in
sub
xlat
lret
and
es
or
insl
bound
out
ficomps
scas
jne
pop
pop
mulb
xchg
push
mov
adc
cwtl
pop
ss
pop
xor
jmp
dec
xor
inc
loop
fcomps
mov
dec
sti
in
movsl
daa
cmc
dec
insb
mov
jae
jo
pop
dec
and
xchg
subl
divb
leave
push
es
push
add
sbb
mov
sub
insl
outsb
xor
dec
bound
in
push
int3
inc
sub
jecxz
stc
add
xchg
jp
sbb
sbb
iret
movsb
dec
cmp
inc
cmp
xchg
repz
into
xchg
hlt
fisubl
mov
std
pusha
movsb
shll
inc
pop
mov
jne
mov
loope
pop
mov
pop
ss
fs
or
jl
scas
cmp
cmp
flds
or
ljmp
ljmp
jo
stos
jge
mov
enter
mov
test
jne
nop
mov
in
adc
cmp
dec
jg
sbb
mov
fsubs
xor
mov
push
aas
sahf
xor
aad
sub
fdivrs
fdivr
mov
bound
mov
les
jns
data16
test
sbb
out
and
dec
cmp
daa
xor
cmpsb
imul
sub
cmp
dec
sbb
arpl
xlat
jno
jecxz
insl
lret
movb
mov
mov
in
jecxz
dec
mov
mov
xor
jae
stos
lea
scas
cmpsb
subb
jno
paddb
cmp
xchg
sti
rcrb
mov
mov
inc
jle
sbb
inc
jmp
and
cltd
cs
mov
ja
mov
mov
jl
cmp
notl
jle
xor
mov
in
cmp
dec
out
push
lcall
adc
xor
rcpps
sbb
mov
repnz
adc
or
dec
loopne
mov
nop
icebp
stos
or
cmp
and
inc
push
lods
movsb
sbb
ret
aas
or
shlb
mov
adc
xchg
test
and
cmp
mov
pop
das
or
imul
je
mov
or
sbb
jecxz
pop
jmp
jecxz,pn
je
push
mov
mov
xchg
out
mov
mov
aaa
xchg
aaa
or
frstor
jae
mov
cmpsb
movsl
inc
inc
std
je
mov
movsl
mov
scas
clc
xchg
xchg
notl
mov
addr16
sbb
fistl
test
xor
xchg
xchg
fistpll
ret
aas
cmpsb
imulb
adc
xchg
dec
jmp
add
push
jmp
mov
jbe
andw
jo
inc
scas
pusha
repnz
lds
das
mov
jb
jae
adc
mov
stos
inc
and
push
inc
dec
adc
cmp
test
fisubl
test
test
fcomp
shrl
fimull
insb
clc
fucomi
das
jb
dec
imull
out
cmc
push
jge
pop
adc
insb
or
mov
inc
lods
push
pop
out
dec
mov
ss
add
addr16
lahf
mov
add
inc
or
ret
mov
adc
cld
sahf
fwait
sub
out
aad
jae
aas
popa
pop
inc
in
xor
xchg
jne
pop
push
cltd
out
dec
data16
add
sti
xchg
xor
hlt
mov
or
cmc
cmpsb
aad
in
xor
pop
mov
fstps
out
cmp
mov
jge
adc
inc
sbbb
inc
pop
inc
cmpsb
icebp
mov
ljmp
push
leave
aaa
fcoms
sti
popf
in
jns
in
repz
mov
lock
pop
ds
dec
jl
cmp
mov
in
imull
je
les
les
and
and
dec
and
xchg
dec
fists
mov
push
inc
mov
call
out
in
dec
push
inc
mov
mov
int
lcall
cld
shll
test
test
icebp
call
and
jae
sub
das
arpl
cwtl
pop
mov
cltd
mov
lds
icebp
mov
inc
pusha
in
repnz
in
mov
push
daa
jp
call
push
adc
bnd
in
imul
mov
mov
fnsave
jecxz
daa
sar
push
mov
js
dec
sub
mov
xchg
je
jno
fisubs
jmp
dec
int3
je
lret
sti
mov
and
sbb
ljmp
lods
imul
sbb
xor
ds
addr16
inc
imulb
add
push
in
mov
test
out
test
popf
lods
repz
lret
cs
in
sub
push
lock
in
adc
mov
mov
or
or
sbb
enter
pusha
mov
or
pushf
stc
push
jecxz
add
cmp
and
adc
mov
pop
cmp
cmpsl
movsl
pop
jmp
sub
sub
sub
push
sbb
popl
repnz
mov
imul
lcall
mov
gs
hlt
jecxz
mov
jp
in
int
xchg
xchg
and
int3
aad
push
add
mov
popf
sar
jno
or
les
xor
iret
subb
push
cltd
xchg
pusha
sbb
xchg
fisttpll
stos
inc
nop
push
fdivrl
jb
cmp
pop
jge
xchg
adc
cmp
les
notl
adc
loopne
mov
jg
add
inc
test
ljmp
dec
and
mov
dec
pop
and
loopne
shlb
xchg
pop
in
lcall
adc
pop
pop
cmp
dec
pusha
lahf
dec
fnstsw
aam
cld
inc
test
outsb
out
cmpsb
sub
ret
insb
mov
orb
pop
mov
push
aaa
mov
mov
pop
or
or
jecxz
sbb
dec
fsts
cwtl
out
xor
stos
mov
test
or
out
rolb
mov
jns
testl
mov
gs
mov
adc
repnz
pusha
mov
push
lcall
or
outsb
int
pop
mov
sbb
mov
lcall
jmp
test
nop
scas
fdivrl
push
repnz
jae
inc
and
lret
adc
sarb
movsl
jge
jbe
pop
lds
and
ret
push
cmp
or
pop
adc
xor
sub
sbb
or
mov
movsb
mov
xchg
jnp
xchg
jae
xlat
xor
into
push
ljmp
aaa
or
repz
add
inc
and
data16
andb
mov
int
lret
push
sbb
add
cmp
out
and
fcoms
rorl
aas
ficomps
fs
cmp
xor
mov
xchg
adc
push
jg
mov
and
out
push
std
pop
popa
bound
mov
or
fwait
cs
jg
sub
aam
int3
fs
ss
inc
nop
xorl
dec
inc
push
in
nop
int
das
xor
mov
popf
adc
mov
movsl
outsl
xchg
or
ficompl
loopne
js
lret
sub
sub
and
mov
cld
mov
mov
andl
in
inc
inc
mov
cmpsl
out
lods
icebp
sti
ja
movsl
mov
xchg
sbb
xchg
fisttpl
and
jnp
push
es
cmp
pop
cli
arpl
clc
loope
imul
xchg
scas
push
jo
cwtl
std
add
pop
movsb
or
push
inc
pop
push
add
sbb
jge
in
test
mov
push
loop
add
or
add
cmpb
decl
fsts
pop
int
mov
popf
xorl
mov
cli
inc
lahf
xchg
test
imul
xorl
shlb
nop
sahf
fs
xchg
xor
ret
and
sbbl
sti
dec
popf
lods
dec
mov
js
add
xchg
mov
push
mov
mov
add
in
test
dec
es
lds
mov
out
inc
orl
out
pop
les
pop
lods
sub
add
iret
lar
dec
je
or
les
cld
add
testl
add
lcall
or
mov
mov
bound
sti
mov
subl
mov
adc
pop
leave
cmp
sbbb
jg
test
adc
cmp
pop
sub
and
imul
dec
das
das
xchg
int3
das
dec
jmp
jl
iret
cmpsl
pop
dec
test
inc
jecxz
lods
xchg
add
iret
in
je
mov
push
add
jbe
mov
popf
int
jg
push
lds
push
pushf
xchg
pushf
inc
mov
clc
mov
je
outsl
mov
cld
lea
sbb
mov
xchg
cmpsb
test
and
and
mov
jbe
xchg
cwtl
in
xchg
jnp
jl
mov
fsts
test
fstl
clc
dec
mov
arpl
hlt
dec
mov
fwait
add
pusha
cmp
lret
movsl
mov
dec
daa
cmp
sti
mov
jl
mov
pop
xor
lret
lds
add
or
lds
mov
add
dec
jo
sub
cmpsb
mov
lret
cs
ret
int3
ftst
iret
sub
pop
in
adc
push
aam
dec
cmpb
addl
mov
cmp
xchg
mov
mov
jb
shll
mov
setb
sub
inc
mov
lods
sub
pop
imul
incb
push
ljmp
mov
pop
xchg
cmc
adc
push
and
mov
dec
in
test
push
xor
add
mov
dec
nop
jp
lea
push
test
sub
call
jmp
sub
sbbl
test
add
dec
leave
out
jl
inc
test
and
sub
or
cmpsb
fsubl
xor
and
ja
stos
or
sbb
testl
call
cmpb
push
sub
xchg
pop
cwtl
inc
jne
addb
sbb
xchg
xchg
fcmovb
enter
mov
rclb
pop
jg
xchg
jle
pop
lahf
fisttpll
xor
addb
loop
or
lds
or
mov
push
push
stos
test
lea
dec
popa
cwtl
inc
ficoms
sub
mov
fnstcw
into
scas
or
add
mov
sbb
daa
test
fsubs
jne
cwtl
push
js
inc
mov
inc
pop
ret
pop
inc
mov
negl
mov
add
cmp
and
fcoml
movsb
mov
mov
loope
stc
xchg
jle
insl
add
mov
jns
or
fsubrs
add
mov
loope
adc
pop
out
cmpsl
push
inc
cmpsb
mov
rol
bound
insl
jae
aas
push
inc
mov
xchg
sbb
or
pop
push
ds
mov
cmpl
push
cmp
push
mov
sbb
push
mov
movsb
imulb
sub
xchg
js
pop
adc
mov
popf
inc
xor
call
sub
dec
mov
jo
mov
or
cld
inc
sub
inc
mov
xlat
ret
xor
adc
das
dec
jo
sub
dec
cmp
loop
les
jp
fsubrl
out
ficoms
xchg
jmp
fwait
pusha
shlb
mov
push
mov
cmc
iret
arpl
mov
std
cmp
cmpsl
mov
xor
sub
add
mov
dec
dec
nop
xor
adc
xor
mov
or
jge
sub
and
in
stos
inc
mov
out
das
stos
add
testl
xor
mov
jp
hlt
aam
push
jp
fidivl
jecxz
xor
pop
into
xor
cwtl
inc
addr16
enter
dec
xor
inc
sbb
test
dec
call
cmpl
lods
pop
inc
sahf
pop
xor
jno
push
scas
adc
mov
je
in
clc
repnz
jns
scas
in
hlt
loop
dec
loopne
out
shll
je
shlb
jl
mov
push
xlat
aas
pop
insl
sbbb
sub
mov
jle
jbe
sti
fwait
or
jne
jp
xchg
lock
fcomps
lahf
mov
mov
iret
pop
addr16
push
addb
lds
jp
pop
dec
inc
sbb
mov
test
daa
fstpt
fidivs
loope
loop
fiadds
notb
rcr
push
xor
in
dec
push
scas
inc
cs
push
arpl
dec
pusha
xchg
pop
inc
jae
and
cli
ficompl
jg
cmc
imul
jne
mov
cmp
mov
and
pop
add
pop
shlb
or
nop
imul
insb
int3
push
or
setl
lods
loop
outsl
je
mov
shll
inc
repz
inc
cmp
les
mov
inc
push
push
mov
movsl
fsubp
enter
and
push
jge
pop
movb
outsl
mov
mov
lcall
jbe
xor
in
or
or
outsb
lds
mov
push
movsb
ret
cmp
mov
push
push
mov
inc
outsl
jns
mov
out
js
dec
pushf
xor
cmp
rol
mov
xchg
adc
je
xor
dec
in
in
movmskpd
xorw
inc
cmovp
out
cmp
cli
aas
icebp
daa
loopne
sbb
sub
divps
in
outsl
sub
mov
sbb
andb
add
arpl
aaa
pop
xor
sbb
dec
mov
or
pop
sub
mov
push
push
popf
aam
jmp
daa
add
or
gs
or
or
cmpsl
cmpsl
jno
outsl
inc
pop
mov
mov
pop
jmp
adc
inc
daa
incl
mov
out
inc
push
push
mov
add
sub
xchg
push
leave
outsl
pop
arpl
pop
sbb
mov
sub
cmp
hlt
test
pusha
test
sub
fdivl
mov
push
xor
fs
mov
pop
fdivs
fld
in
adc
dec
fisttps
std
push
std
fstl
or
xchg
movsb
xor
mov
fldenv
jmp
xor
lcall
in
sbb
push
orb
push
xor
js
pop
cmp
xor
ss
xchg
pop
imul
cli
scas
mov
jg
mov
jle
in
in
lret
mov
jns
and
clc
call
lea
fcoms
fcomps
stc
xor
pop
cmp
sbb
push
dec
mov
mov
add
std
fcompl
stos
jo
jmp
jne
cmpsl
inc
mov
repnz
in
into
rcll
pop
or
inc
fcmove
mov
inc
jo
push
cmp
or
pop
or
iret
shll
mov
push
lock
push
push
jb
jo
dec
js
lret
jecxz
in
lahf
ja
inc
ljmp
mov
repnz
add
adc
in
sbb
and
jae
mov
xchg
xchg
mov
aad
insl
scas
cmp
adc
clc
and
mov
push
lods
enter
adc
es
imul
or
cmp
adc
aad
lock
xor
scas
mov
sti
cwtl
xchg
and
or
out
lcall
push
and
inc
jns
push
ja
cmp
in
mov
or
jge
aas
stc
test
xorl
mov
mov
add
cmc
call
out
test
leave
xorb
test
push
sbb
sarl
aaa
dec
cmp
jne
or
jge
mov
xchg
push
aam
xchg
iret
mov
xor
aaa
rcl
and
jne
negl
mov
loope
pop
ficoms
aam
sub
jns
dec
pop
loopne
shll
fdivrl
scas
add
test
rcrl
fcmovnbe
or
shll
mov
in
rolb
popa
icebp
pop
notl
sarb
scas
mov
push
dec
dec
lods
xchg
rcl
dec
dec
or
cmp
rcl
lds
loop
jnp
mov
fs
popf
dec
xchg
xchg
scas
mov
push
popa
mov
repz
dec
aam
xchg
mov
ja
iret
fldl
nop
dec
cmp
aas
mov
stos
mov
cwtl
jecxz
cli
sahf
test
lock
sub
fldt
das
scas
mov
sarl
xchg
or
fmull
add
fdivrs
push
cwtl
dec
xorb
xchg
arpl
add
pop
cmp
sti
mov
sub
inc
cmpsl
mov
mov
jl
movsb
dec
loopne
int3
lock
mov
test
sbb
ret
decl
jle
sub
mov
push
dec
stc
push
push
sub
push
out
ret
xor
lret
into
xlat
dec
add
jne
je
mov
dec
fstps
jns
jle
rcrb
add
fs
mov
mov
dec
mov
and
push
push
mov
xor
lods
or
and
imul
jo,pt
or
xchg
lret
in
xchg
mov
inc
lods
lahf
pusha
jecxz
push
testl
xlat
dec
rclb
or
call
loop
dec
mov
jle
lret
cltd
push
stos
test
in
addb
sub
cmp
insl
bound
sbb
bound
test
and
pop
outsb
lret
mov
mov
push
lods
cmp
jns
loopne
loopne
sub
add
and
dec
out
cmp
daa
adc
subb
fisubrs
iret
add
ljmp
inc
xchg
ss
imul
xor
add
pusha
jns
imul
pop
jle
jle
xor
nop
push
iret
xchg
es
mov
pop
or
mov
ja
xchg
mov
aaa
loopne
ret
mov
in
bound
stos
out
imul
pusha
sahf
mov
xchg
push
xlat
cmpl
and
pop
add
adc
fstps
call
in
es
cmp
add
xlat
push
dec
lea
mov
rol
adc
mov
sub
int3
fdivrl
xchg
or
lods
dec
fistl
das
sarl
fdivs
xchg
mov
bound
sti
mov
out
popf
inc
fwait
inc
rcrb
mov
lahf
incb
push
pop
add
fistpl
cmp
or
fs
inc
fwait
or
enter
push
mov
push
testl
xchg
xor
arpl
cmp
jecxz
xchg
xchg
jbe
mov
in
fildll
cmpl
inc
and
daa
inc
sbb
ja
sub
add
or
xor
or
dec
pusha
or
pop
pusha
or
add
add
dec
pusha
or
pop
pusha
or
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
