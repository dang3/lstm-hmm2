dec
inc
adc
add
jle
aad
movsb
cmp
int3
xor
mov
scas
pop
inc
pop
inc
xchg
sarb
in
jg
clc
mov
test
mov
inc
sub
push
and
aas
ffree
dec
pop
je
test
jge
sbb
sbb
divb
mov
les
fistpl
xor
dec
loopne
mov
add
pop
pop
rolb
fadds
jo
push
inc
or
stos
int
and
scas
adc
mov
lcall
cmp
xchg
lods
fistl
inc
pushf
pop
cmp
sahf
cwtl
lods
aam
das
inc
dec
and
sbb
xchg
addr16
dec
or
jg
adc
jp
call
jo
push
lods
xor
andb
clc
pop
inc
and
mov
clc
loopne
sbb
xor
test
aaa
add
in
cmp
insb
push
pop
out
bound
mov
lcall
sub
ret
sub
addb
mov
dec
xor
cmp
add
mov
jp,pt
sti
and
popa
jb
push
stc
out
sub
fnstenv
test
add
andl
pop
pop
inc
mov
add
int
rolb
aas
push
jl
push
pop
mov
psrlw
push
xchg
mov
cwtl
outsl
jo
xchg
mov
sbb
or
mov
popf
stos
and
mov
push
orl
sbb
add
cmpsb
push
pop
nop
daa
add
inc
add
sbb
mov
loop
or
leave
movsl
movsb
sbb
pop
jo
push
popf
nop
push
push
jno
ret
mov
mov
inc
add
push
leave
test
jmp
push
push
cmp
mov
xor
push
sbb
aas
add
cmp
jb
mov
int3
cwtl
add
and
mov
add
mov
or
add
rcll
loope
dec
lcall
xor
rcrl
push
mov
pop
aaa
add
push
adc
push
cwtl
push
icebp
rcll
dec
lea
dec
adc
push
inc
add
dec
sub
xor
sbb
sub
inc
inc
sub
hlt
add
xchg
jb
dec
xor
icebp
pop
enter
cmp
loopne
jo
push
push
sbb
push
loop
hlt
sub
xchg
outsl
std
cmp
sub
sub
mov
adc
push
inc
and
push
mov
xchg
push
sbb
cmp
pop
mov
xchg
das
mov
sbb
add
inc
add
or
push
popa
push
jbe
xor
push
add
xchg
push
ljmp
push
xchg
jo
xchg
test
andb
aas
and
sub
adc
jne
cmpsb
rolb
ljmp
sbb
stos
xlat
scas
jns
and
push
adc
jb
aad
mov
jecxz
xor
mov
arpl
sbb
jns
in
sqrtps
fsubs
sub
pusha
cmp
mov
idivl
cltd
sbbb
rcl
stos
add
int3
sbb
xchg
jnp
jle
int3
dec
push
jge
mov
xchg
ds
jp
pop
stos
cltd
push
xchg
mov
xor
mov
jno
leave
daa
push
xchg
jg
mov
push
fimull
add
std
into
mov
fbld
jb
jp
mov
push
push
pop
xor
inc
fildl
xor
xor
icebp
addl
cmp
cs
fisubrl
cmp
inc
mov
sahf
add
or
dec
xchg
scas
movsb
sbb
inc
cmp
dec
mov
rclb
mov
sub
xor
cmc
adc
sbb
sub
xor
add
adc
pop
push
jnp
inc
ja
push
outsl
mov
mov
addr16
xchg
inc
test
cltd
and
test
call
popf
xorb
leave
inc
dec
stos
jb
cltd
inc
pop
in
fildll
nop
ret
xor
sub
fisubrl
ds
sarb
cmp
jg
loope
jecxz
mov
xchg
add
xchg
or
and
lock
cli
or
mov
adc
adc
lea
nop
lds
aas
cltd
imul
cld
xor
xchg
push
push
jne
sbb
inc
hlt
pusha
push
jae
sbb
or
repz
imul
mov
shl
xchg
loope
adc
int3
dec
adc
mov
xor
subl
test
inc
cmpsl
imul
xlat
into
fistps
and
pop
test
xor
adc
jae
bound
inc
icebp
adc
ss
subb
mov
lock
mov
sarb
inc
pop
aam
in
adc
mov
loop
leave
add
mov
adc
mov
push
mov
fimuls
pop
cmp
mov
push
les
cmp
mov
les
or
mov
mov
dec
repz
push
pop
gs
mov
scas
orb
rcr
in
sub
fidivrl
popf
scas
arpl
addr16
fwait
aam
mov
mov
std
xchg
icebp
popf
cld
aaa
inc
cs
mov
push
les
and
cmp
fbld
cli
xchg
outsb
les
inc
std
sbb
mov
mov
dec
cmp
stos
mov
fldt
pusha
ret
jae
inc
pop
out
js
hlt
jo
stos
jno
pop
xor
fnsave
std
shrb
xchg
daa
mov
lods
popf
cmp
pop
aad
adc
mov
mov
cli
cmp
mov
xchg
xchg
sub
mov
arpl
mov
xchg
test
xor
enter
leave
mov
js
push
jg
mov
push
inc
movsb
lea
data16
out
ret
sbb
loopne
sahf
push
jb
lcall
cmovne
adc
jno
mov
xchg
add
jecxz
inc
fcoms
cmpsl
xchg
xchg
push
mov
or
aas
or
data16
fsubr
inc
push
pop
fidivrl
xchg
je
adc
das
cli
jl
sub
addr16
lea
cmpsb
rorl
inc
mov
loopne
int
jp
stos
fisttps
loopne
adc
stc
repnz
in
xlat
or
pusha
jo
push
mov
call
add
repnz
fdivr
add
test
mov
inc
lock
and
sbbb
call
js
xchg
and
push
add
mov
mov
sub
aas
cli
sbb
outsb
imulb
or
or
out
mov
add
or
in
inc
inc
arpl
mov
add
adc
mov
add
out
or
xor
push
adc
cmp
lds
inc
pop
mov
mov
outsb
inc
mov
les
mov
mov
add
scas
mov
insb
cmp
sub
xchg
loopne
push
jae
adc
out
pop
push
adc
imul
inc
out
nop
clc
rcll
cmovne
std
std
mov
es
mov
mov
test
push
js
aad
inc
mov
dec
pushf
and
mov
rclb
popa
add
xchg
fs
add
mov
bound
jle
push
or
in
xchg
rol
mov
inc
loopne
loope
stc
inc
testb
mov
or
or
movsl
xchg
sub
sbb
cld
repz
xchg
and
pushf
sbb
cmp
inc
inc
sbb
lret
cld
sbb
push
jb
rorb
fisttpl
add
fsubl
lret
push
xchg
pusha
stos
and
in
cli
nop
and
push
test
into
pop
push
adc
das
add
push
out
cmpsb
pop
sub
push
imul
mov
or
adc
add
pop
push
jbe
push
dec
sub
xchg
mov
push
dec
pop
adcl
inc
push
stc
and
rcl
push
push
mov
daa
rcrb
adc
push
xor
jno
test
dec
xchg
push
aad
nop
dec
rcr
or
mov
mov
out
dec
loope
mov
or
mov
adc
mov
jecxz
sti
outsb
or
jle
pop
sub
call
mov
xchg
dec
mov
dec
xor
sub
push
pusha
cs
inc
xchg
repz
enter
fisubs
inc
cwtl
rcr
rorb
imul
stos
movsb
pop
mov
mov
mov
movl
dec
xor
inc
or
movsb
or
dec
enter
push
test
mov
jp
test
je
mov
movsb
add
or
xlat
subl
push
pop
push
rolb
sub
shlb
xor
nop
mov
lahf
leave
clc
loopne
sbb
xor
inc
pop
pop
add
mov
les
or
jmp
push
ljmp
fstpl
pusha
add
add
and
lahf
xchg
push
ret
sub
mov
push
adc
out
fdiv
inc
scas
pop
mov
lods
mov
xor
pop
sti
inc
inc
in
sar
mov
xor
mov
pop
es
or
jne
dec
jecxz
mov
or
xor
lret
and
call
lret
lods
sbb
mov
shll
cmpsb
mov
mov
fcmovnb
cmp
adc
xchg
in
cmp
cwtl
pushf
lahf
je
dec
lds
scas
push
add
push
lcall
pop
es
loopne
mov
adc
adc
addl
fldl
xchg
mov
notl
fcompl
mov
push
xor
ret
in
ss
adc
popf
add
push
jnp
mov
xor
mov
dec
adc
jmp
mov
and
mov
push
inc
das
aas
xchg
push
shr
inc
jns
sbb
movsb
popa
or
xchg
gs
push
push
aaa
cmp
add
add
hlt
call
nop
and
fnsave
sub
test
cs
insl
lcall
and
lea
mov
xchg
and
pushf
pop
movsb
clc
lods
cmp
sbb
push
fistpl
cmp
adc
push
or
shll
xor
mov
cmp
sub
das
mov
jno
cmpsb
cmp
mov
and
icebp
push
fwait
dec
xchg
jl
inc
mov
xchg
ret
popf
dec
dec
xor
mov
inc
jb
rcrl
xor
fcomps
sbb
add
cli
in
andb
xchg
pop
fs
xchg
cs
push
call
bound
push
add
and
imul
xchg
or
sub
mov
fstpt
jno
int
int
lea
mov
xchg
mov
jbe
in
jg
loop
mov
push
int
inc
andb
arpl
sbb
mov
cli
cmc
mov
cli
push
jl
outsb
imul
cwtl
add
leave
jo
call
dec
loop
call
jp
fcoms
mov
adc
pusha
das
pusha
leave
jo
or
xchg
test
push
mov
inc
xchg
pop
mov
cmovo
adc
or
aas
scas
adc
add
mov
cmc
inc
test
sub
xchg
or
iret
xor
ja
ds
cli
movsb
dec
clc
bound
mov
cli
cmp
inc
jbe
xchg
mov
push
sbb
and
jbe
xor
fwait
mov
adc
bound
and
and
iret
adc
mov
push
push
pusha
mov
push
imul
daa
ja
mov
push
mov
add
shl
cld
rclb
scas
or
mov
lea
je
mov
or
subb
mov
push
add
lahf
loopne
mov
mov
add
adc
xchg
andl
fsubrs
shll
pop
mov
ss
jae
lea
push
mov
cmp
mov
adc
lret
mov
orb
jle
adcl
lods
scas
pop
xchg
mov
and
pushf
stos
add
push
stos
in
pop
movsb
cmc
call
jo
shlb
orl
dec
jns
mov
es
mov
push
xchg
inc
dec
adc
sarb
mov
aaa
sub
jg
test
and
out
add
push
enter
sub
out
sub
mov
adc
jge
or
das
or
pusha
adc
push
lock
outsl
mov
icebp
in
sbb
shll
cli
stos
lret
push
xchg
pop
roll
cmp
or
shll
test
jo
mov
repnz
pop
fsubs
add
mov
lahf
xor
loop
mov
int3
adc
or
pop
insl
mov
xchg
shl
mov
and
arpl
movsl
stos
movsb
in
push
or
aam
sbb
packssdw
or
out
mov
xor
sbb
inc
inc
xchg
aad
lock
inc
adc
sbb
cmpsb
dec
cli
dec
push
dec
fsubl
cmovne
mov
aaa
lods
mov
push
mov
xchg
sub
or
dec
cwtl
add
dec
icebp
jl
mov
js
jmp
and
xchg
and
pop
xor
xchg
push
cmc
push
cs
push
ret
pop
lds
out
hlt
adc
xchg
xor
cmpsl
or
mov
mov
mov
sub
stc
popf
adc
sub
jp
out
lret
jb
xchg
cli
cmpsb
xchg
pop
mov
cwtl
jge
fcom
dec
mov
mov
add
cmp
mov
jbe
push
adc
pop
pop
leave
or
stos
jp
fs
out
inc
xor
mov
insb
push
adc
mov
mov
hlt
add
sub
push
xchg
adc
or
call
inc
sub
mov
cmp
dec
lods
dec
jecxz
xor
or
inc
sbb
cmp
ljmp
jmp
sub
push
pusha
in
dec
cmp
push
les
fs
push
push
jae
movsl
pop
sub
xchg
or
fildll
rorb
sub
shrl
cld
pop
dec
and
lods
addb
js
rorl
hlt
push
xchg
mov
cltd
jbe
sub
push
jb
xor
adc
je
and
add
ret
dec
xchg
inc
mov
add
inc
ret
fsubs
and
mov
adc
js
pop
inc
mov
scas
adcb
jecxz
or
fidivl
dec
push
xor
xchg
jno
rorb
sub
adc
sub
xchg
mov
movsl
mov
dec
push
xchg
xor
xor
test
push
sub
bound
mov
dec
lds
inc
rolb
sub
xchg
pop
pop
adc
lcall
mov
fxch
jo
sbb
test
fisubs
pop
sbb
dec
pushf
jo
dec
push
xchg
push
adc
mov
mov
pop
inc
rolb
jg
and
xchg
sub
lds
cmp
push
adc
in
dec
mov
xlat
cmp
jg
daa
and
iret
shll
leave
call
adc
inc
or
test
mov
andl
scas
jbe
add
jae
dec
xor
ja
jae
out
test
add
ljmp
adc
cmp
jb
xchg
mov
pop
clc
xor
mov
mov
jl
out
xchg
push
stos
outsl
repz
stos
sub
push
das
test
popf
inc
lahf
add
mov
dec
xchg
xor
cmp
jp
cmp
xchg
or
pop
fstpt
mov
lods
lret
orb
loop
fdivp
orb
push
mov
mov
ret
sub
int
arpl
jle
test
pop
xor
push
add
popa
jae
out
cmpsb
out
push
fbld
jge
outsl
cmpsb
adc
sbbl
repz
inc
cmc
mov
pop
repnz
sub
cmpsl
test
adc
lock
jge
adcb
xchg
test
sub
fisttpl
push
jne
push
or
rcrl
dec
and
cmp
sub
add
and
fimull
xor
add
fwait
popf
hlt
inc
cmp
pop
cmpsb
pop
xchg
jl
mov
pop
insb
pop
push
dec
cltd
adc
fiadds
mov
enter
lret
rorb
cmpl
scas
pop
push
pop
add
lds
sub
jmp
adc
push
jle
pushf
inc
call
adc
movsl
ret
in
in
mov
cld
sti
adc
pop
sub
sub
repnz
gs
sub
dec
bound
fnstenv
jge
mov
add
and
scas
fimull
out
es
or
inc
dec
in
aas
ss
add
aas
movsb
mov
mov
or
nop
es
cmp
xchg
pop
dec
push
cmp
inc
adc
mov
test
inc
loope
lret
push
gs
dec
sub
in
sub
sub
stos
dec
cs
pop
test
jae
into
or
dec
jb
pop
and
adc
push
add
sub
cmpsb
xor
pop
mov
out
and
fmuls
sub
adc
push
jp
sbb
out
inc
mov
jbe
pop
add
cmpsb
loopne
push
add
jge
xor
lret
setne
dec
pop
push
iret
lds
or
push
imul
clc
mov
mov
mov
rorb
sbb
push
pushl
sbbb
adc
or
cmp
clc
xchg
test
js
mov
icebp
xlat
inc
lods
es
pop
xchg
add
pusha
inc
pop
cmp
or
mov
roll
js
ror
jne
xor
sbb
lahf
clc
cli
xor
hlt
push
sub
xchg
test
pop
pop
imul
pop
xor
xchg
sub
movsl
lahf
mov
add
daa
cmpsl
aam
push
and
aam
shll
call
lods
jns
das
mov
pop
das
cmpsl
jae
push
sbb
jbe
lods
ja
cmp
icebp
inc
xchg
adc
mov
ficoms
fldl2e
dec
jp
bound
sbbl
jae
mov
push
in
jmp
push
dec
loopne
add
nop
inc
xor
add
xor
cld
ret
sub
jle
les
or
pop
test
fidivrs
xchg
and
cld
and
dec
mov
inc
les
lock
ret
outsb
cmpsb
push
or
cmp
pusha
into
cmpl
jb,pt
enter
test
aaa
or
dec
mov
cli
test
movsb
bnd
sbb
mov
and
lock
add
clc
push
cmpsl
imul
jmp
xor
add
aaa
inc
rcrb
push
mov
inc
jns
sti
pop
je
add
shlb
test
xchg
cli
loope
punpckhdq
add
hlt
sbb
xchg
add
imul
leave
mov
cmpsl
lcall
inc
xor
sbb
out
or
enter
clc
mov
inc
mov
jae
cmpsl
mov
cmp
loopne
shrl
dec
sub
inc
pop
insl
pop
cli
jge
fsubs
std
stos
mov
mov
mov
mov
mov
xor
ret
fisubrl
rcrl
or
add
lret
push
setbe
ret
mov
sub
in
push
test
or
sub
call
pop
dec
or
std
hlt
xor
clc
xor
sbb
jle
pop
and
imul
lea
jne
push
popa
fidivrs
cld
add
out
xor
add
sub
add
repz
clc
sbb
jmp
push
xor
xlat
shld
mov
gs
add
jnp
leave
leave
and
mov
dec
test
hlt
rorl
in
or
and
insb
outsl
adc
push
rclb
inc
outsl
xchg
inc
xchg
adc
sarb
jb
shll
inc
jmp
push
push
xchg
movsb
sub
sbb
rorl
movsl
mov
adc
shrb
inc
xor
push
mov
or
push
mov
subb
inc
sub
iret
test
sbb
xchg
cli
mov
xchg
mov
insl
rcrl
out
subb
xchg
mov
xchg
mov
inc
idivb
xlat
mov
pop
dec
ljmp
bound
imul
jmp
cmpsb
mov
out
mov
rcrb
dec
cmpsb
pop
test
cmp
aas
or
add
mov
push
pop
mov
and
inc
sahf
mov
sub
push
and
adc
fimull
ljmp
jecxz
mov
cmp
ja
inc
pop
or
addr16
add
inc
cmp
sub
or
adc
je
inc
in
mov
jge
inc
mov
out
std
dec
imul
stc
mov
push
mov
fmul
mov
pop
sub
sbb
icebp
lods
mov
sub
jg
push
das
inc
push
lret
cmc
xchg
es
mov
ret
dec
push
pop
push
cmp
jb
in
cmp
jo
xchg
jmp
stos
add
push
push
and
xor
mov
jp
xchg
sbb
and
test
adcl
je
loop
or
rcrl
inc
sbb
lds
loopne
mov
scas
cmp
cltd
add
xchg
mov
dec
xchg
bound
xor
notl
jne
xor
jmp
aas
adc
enter
inc
or
sub
and
rclb
cmpsl
repnz
jp
jne
popf
inc
sub
cmp
out
jle
xchg
cmc
lods
fdiv
cltd
jns
and
aad
sahf
push
cmp
popa
addr16
fldenv
jbe
lahf
xor
add
nop
xor
inc
mov
out
cmp
clc
loope
ret
mov
mov
jmp
mov
add
rcr
inc
inc
mov
push
mov
lret
shlb
daa
lcall
jl
fldt
std
adcl
jbe
or
mov
aad
adc
dec
push
push
dec
xor
ljmp
sub
leave
cmp
xor
pop
or
roll
mov
movsb
push
lock
gs
mov
pop
rcrl
jmp
movsb
mov
inc
lds
ficoml
mov
scas
adc
jle
xchg
sub
sub
xlat
xor
lods
inc
mov
setno
clc
aam
jmp
sahf
sub
xor
repz
pop
inc
add
popl
daa
push
dec
lock
pop
cmp
xorl
fiaddl
cmp
mov
icebp
cmp
lret
sub
inc
fists
sbb
sbbb
sahf
test
subl
mov
inc
dec
fiaddl
or
pop
and
and
sub
push
mov
push
or
push
add
push
cmp
cli
stc
enter
in
loop
in
xor
xchg
pop
add
inc
mov
push
dec
popa
dec
xor
mov
inc
cmp
cld
xor
cmp
adc
insl
mov
daa
pop
push
mov
inc
fdivs
mov
cmc
inc
addl
sbb
push
jae
movsb
lahf
rcrb
mov
pushf
cmp
out
lods
adc
scas
and
sub
xor
test
mov
push
mov
xor
sub
mov
sub
negb
pop
aad
sub
xchg
stc
shrb
insb
shlb
adc
out
inc
push
fisttps
and
inc
std
sti
sub
push
andnps
scas
test
mov
fs
pop
lea
fcmovnbe
jle
xchg
sub
lods
cli
jecxz
insl
les
js
xchg
cmp
cltd
jmp
shlb
in
shll
add
outsb
mov
jmp
sbb
test
inc
adc
push
inc
filds
dec
das
or
mov
pop
push
repz
lock
iret
jno
shlb
mov
add
fcmovb
mov
and
mov
jecxz
fwait
cmp
enter
add
or
xor
add
jl
jo
jle
mov
lds
fistpl
jno
inc
sub
ljmp
mov
mov
loop
out
sbb
lcall
xchg
sub
test
jp
inc
adc
cmp
pop
and
incb
pop
pusha
popa
and
decb
cltd
sbbb
stos
cld
jo
scas
int3
je
addl
push
in
jb
and
add
imul
mov
sbb
or
push
sbb
repnz
pop
pop
xchg
stos
loopne
pop
push
mov
bound
dec
mov
ja
lret
jmp
add
lret
pop
aam
xor
xor
xchg
lods
insb
aam
rclb
rolb
jno
dec
and
sbb
push
dec
pop
and
or
sti
std
pop
fistpll
mov
test
lcall
in
xchg
or
xchg
outsb
cmp
sub
mov
adc
orb
fisttpl
add
sub
ficompl
push
dec
icebp
les
cmp
lods
jmp
bnd
fwait
cltd
pop
movsl
or
rolb
mov
add
out
int
mov
ret
stc
daa
and
mov
pushf
push
ja
xchg
mov
cmpsl
sti
cmp
push
ss
mov
test
addb
sbb
xchg
lds
mov
or
je
mov
inc
mov
imul
mov
clc
clc
mov
sub
inc
insl
add
adc
cwtl
ret
jb
jno
and
jl
xlat
inc
mov
fdivs
lahf
push
cmp
hlt
ja
cmp
rolb
in
imul
test
aas
add
out
pushf
enter
sub
aad
dec
xchg
push
adc
jne
mov
inc
jl
stos
pop
adc
and
hlt
aas
int3
addb
jo
inc
or
pop
push
mov
xor
push
sbb
mov
in
pop
push
mov
dec
aad
jb
roll
mov
jb
out
mov
lcall
and
cmpsl
mov
mov
sbb
sbb
xor
stos
cld
insb
dec
or
xchg
mov
jne
mov
clc
pop
testl
and
cmp
lahf
adcl
and
or
and
push
jmp
rclb
sub
movsl
add
push
adc
inc
adc
jg
inc
inc
inc
fistl
sbb
ja
out
cmpsl
stos
loop
add
mov
inc
addr16
mov
inc
xchg
push
pop
jmp
xchg
mov
adc
mov
inc
push
and
shll
gs
lea
cmp
push
int3
dec
xchg
jae
inc
xchg
sahf
lcall
mov
ljmp
mov
mov
enter
xor
test
insb
imulb
aad
or
jecxz
mov
inc
sbb
cmp
xor
orb
pusha
push
ret
dec
shl
out
adcl
xchg
test
mov
cmp
add
inc
lock
mov
lcall
xchg
repz
aam
fsts
push
addr16
dec
or
pop
mov
leave
pop
cwtl
bound
sti
inc
cld
scas
pop
mov
sub
mov
pminub
push
push
add
rcrb
inc
icebp
xchg
push
pop
or
cwtl
xorb
push
adc
lods
mov
rcl
fidivrl
cmc
hlt
sub
sahf
in
icebp
aaa
inc
push
push
inc
adc
int3
mov
scas
mov
xor
mov
pop
fnsave
sub
aam
aas
gs
jno
ja
pop
imul
adc
lea
jo
sahf
cmpsl
xchg
cmp
mov
lods
lock
jo
dec
adc
pusha
sub
shrl
sbb
xchg
mov
fsubrl
sbb
les
mov
repz
test
cs
clc
fwait
dec
popa
push
stos
and
inc
mov
data16
divl
mov
push
jo
sub
lcall
fimuls
push
adc
mov
shl
lea
pop
add
sbb
cmp
add
xchg
clc
scas
ficompl
push
fdivrs
clc
mov
push
test
sarl
xchg
in
pop
sub
jno
mov
insb
jl
in
je
push
dec
mov
pop
mov
lahf
aas
popa
push
push
mov
cmp
movsl
or
pop
out
or
cmp
jg
hlt
dec
or
mov
pop
lahf
cltd
push
inc
mov
hlt
mov
cmp
pop
pushf
dec
movsb
add
imul
or
cli
or
mov
dec
mov
mov
dec
xlat
ljmp
in
pop
pop
es
jp
cmc
inc
xlat
and
bound
fnsave
add
mov
push
lahf
cmpl
clc
push
out
mov
mov
mov
inc
pop
ret
jo
cli
sti
cmp
outsl
mov
test
inc
les
push
addb
pusha
mov
and
in
shl
stos
stos
pop
lahf
push
mov
pop
shrl
and
jmp
addb
cmp
adc
fsubs
aad
sub
pop
pop
xchg
inc
xchg
lods
scas
inc
push
adc
icebp
or
jl
pop
jns
mov
outsl
repz
add
adc
test
stos
shlb
out
sbb
sub
jnp
outsb
pop
clc
dec
std
orl
lock
jmp
popf
or
stc
jno
push
mov
pop
dec
push
pop
mov
mov
aam
push
or
add
mov
mov
shll
mov
idivb
jle
pop
jge
jl
and
push
dec
xlat
imulb
loopne
jl
sarl
leave
sub
scas
fsubrp
mov
push
sub
out
in
btc
mov
rcrl
dec
rcrl
push
mov
jb
fsubr
add
mov
sub
test
mov
in
sbb
cmp
jnp
into
in
outsl
jbe
and
movsb
hlt
ds
or
daa
fst
cmp
or
repnz
arpl
jmp
mov
cmp
add
iret
pop
jae
cli
popa
xor
rolb
jecxz
xchg
or
mov
mov
fs
and
cmp
pop
testb
adc
popa
jp
cmp
mov
jne
dec
loopne
test
cmp
pcmpeqw
pop
adc
les
sub
xor
sub
sub
xor
je
test
cmp
pop
aad
int
orb
xor
jbe
dec
mov
loope
pop
inc
push
les
adc
or
hlt
insl
popf
jnp
insl
sbb
xchg
push
sbb
cli
in
fidivs
mov
push
pop
push
mov
adc
pop
mov
in
push
add
das
pop
sbb
pop
pop
lds
cmp
cmpsb
iret
or
mov
xor
addr16
cmp
lods
cmp
xor
hlt
cmp
adc
sbb
sub
push
sarb
adc
mov
scas
adc
cld
orb
in
test
loopne
sbb
or
dec
add
andb
pushf
add
cltd
nop
add
loopne
sbb
enter
sub
sahf
pop
fbld
jle
les
push
addb
stos
mov
out
movsb
fisubs
inc
nop
mov
push
rcll
mov
ja
rol
popa
jne
pop
add
lods
push
inc
push
xchg
cmp
jns
cltd
jo
jmp
rcr
xor
xchg
mov
xchg
out
push
pop
ds
lret
flds
cmpsb
mov
insl
ss
xchg
mov
cmp
test
sub
push
and
out
mov
pop
or
sub
pop
sbb
inc
imul
sbb
cmp
mov
lea
xor
xchg
fildll
cwtl
xchg
pop
repz
mov
mov
mov
pop
inc
lods
adc
scas
push
cmp
fs
or
popf
push
idivl
push
pop
cmp
dec
mov
mov
pop
lahf
hlt
pushf
out
mov
inc
mov
jne
in
ljmp
xchg
cmp
div
mov
mov
mov
jp
jecxz
pop
into
ret
push
adcb
stos
push
int3
cmp
mov
sub
mov
rorl
add
push
mov
push
mov
stos
enter
sub
stc
mov
out
add
pusha
and
inc
mov
and
push
xor
pop
xchg
pop
inc
jmp
addb
test
sbb
cld
dec
arpl
push
push
push
and
cmp
xor
das
push
mov
bound
mov
cmp
or
cmp
das
lret
and
movsb
loop
loop
mov
aam
jns
xchg
mov
std
mov
in
cmp
push
sbb
js
pop
or
lock
data16
loop
and
adc
or
pusha
out
jecxz
incl
sbb
sar
xor
pushf
ja
test
out
leave
and
adc
lods
aam
jns
dec
sub
stc
sarl
pop
or
cld
lcall
push
xchg
xor
sbb
mov
test
mov
movsb
push
aam
jb
mov
in
sbbb
lret
xchg
push
mov
inc
gs
jae
das
and
mov
add
adc
sysenter
fbld
jno
out
xchg
inc
xchg
call
mov
inc
inc
les
jmp
xchg
shlb
add
mov
insl
push
adc
aad
test
cmpb
xchg
rol
sahf
and
mov
les
ss
jp
vdivsd
aam
movsb
inc
xchg
jb
test
ljmp
inc
int
xorl
sub
pop
mov
mov
dec
fcmovbe
adc
add
dec
scas
sti
jp
movsb
mov
mov
or
and
inc
mov
inc
push
and
mov
orl
add
pxor
and
or
fnstsw
inc
cld
mov
or
cmc
mov
test
jle
mov
sub
mov
call
subl
sbbb
inc
sbb
ficompl
mov
mov
int
pop
sarb
adc
clc
dec
subb
lahf
daa
mov
pop
pop
push
mov
add
movsb
lahf
mov
jne
mov
jge
mov
bound
jne
pop
ja
add
punpcklbw
repz
jmp
jg
dec
cmp
jb
iret
dec
in
mov
push
cwtl
cli
ret
cmp
rcr
add
mov
popf
lret
ds
mov
std
cmp
stos
add
out
adc
jg
jl
jp
out
add
add
xchg
push
mov
imull
push
jnp
lods
ficomps
push
fwait
sub
or
sub
jnp
or
jns
adc
adc
lcall
movsl
enter
xchg
cli
sar
mov
stos
mov
pop
sub
sbb
jge
xor
or
ficompl
ljmp
shr
inc
inc
mov
sub
cmp
dec
push
rclb
jnp
orb
fisttpll
inc
add
or
inc
insl
xchg
incb
pop
add
jnp
sbb
sahf
jnp
mov
jnp
push
cmpsl
add
xor
add
pop
adc
leave
xchg
jge
das
aam
mov
iret
int
mull
out
andb
lcall
dec
adc
inc
or
dec
mov
dec
inc
and
sub
xor
in
add
xchg
nop
jmp
out
pop
nop
sbb
sub
ja
and
xor
jg
jae
loopne
cmp
sub
insl
sub
shll
or
adc
inc
mov
push
xor
inc
outsl
mov
adc
shrl
mov
mov
popa
mov
and
and
subl
aaa
pop
mov
insl
stos
cmpsl
addl
xor
push
xchg
xor
cmp
rolb
nop
add
mov
je
jecxz
ljmp
adc
xor
jle
cmp
rcrl
repnz
mov
sub
data16
and
dec
sbb
add
sbb
push
fcoms
push
jno
dec
mov
inc
xchg
mov
sub
dec
dec
dec
jns
lea
cli
pop
xchg
push
fimuls
loop
cmc
push
ret
xadd
adc
pop
mov
push
push
orb
or
jecxz
cmpsl
lret
lahf
or
out
repnz
int3
mov
and
jnp
or
jmp
lods
pop
push
push
and
cmpsb
mov
jb
push
imul
add
cltd
inc
sub
pop
leave
pop
call
push
hlt
aam
sub
dec
jle
aam
sub
dec
sub
lods
lods
inc
and
loop
mov
icebp
push
pop
cmp
scas
sub
mov
shrb
pushf
lret
mov
jg
dec
pop
and
sub
stos
push
mov
push
les
dec
ja
sub
sub
dec
push
test
adc
sub
stos
mov
cmpsl
dec
and
push
test
push
loope
push
shrl
arpl
adc
jg
je
add
gs
cmpsl
sbb
and
loop
test
push
dec
ret
jo
mov
rcrl
fstps
jne
call
mov
loop
dec
jge
sbb
ds
call
cmp
push
arpl
sub
mov
mov
test
icebp
notb
iret
int
cwtl
push
inc
xchg
add
mov
xchg
stos
jl
or
dec
sbbb
dec
pop
inc
out
cs
inc
movsl
out
stos
or
pushf
std
mov
pushf
cmp
nop
pop
test
mov
add
or
leave
cwtl
sbb
loope
push
mov
outsb
add
xor
dec
int3
pushf
in
push
shll
lcall
nop
loop
lods
mov
fcomps
jae
movsl
cmp
mov
push
test
in
imul
clc
sbb
jge
jecxz
iret
push
mov
push
inc
in
cwtl
xor
addr16
and
push
mov
inc
ficoms
push
addr16
test
loop
and
pop
push
das
dec
dec
or
xchg
xchg
dec
lock
lahf
stos
xchg
std
mov
popa
ja
xchg
test
ret
repnz
inc
xchg
jb
push
jle
shll
xchg
les
mov
es
mov
call
lret
mov
dec
mov
mov
pop
stos
pop
flds
sbb
imul
mov
xchg
fwait
mov
push
out
imul
fimull
inc
xchg
sar
iret
mov
sti
adc
setle
jae
adc
and
pop
loope
pop
or
es
cmp
cmp
sub
mov
pop
insl
mov
inc
push
imul
adc
mov
add
bound
xchg
and
aaa
and
stos
or
psubusb
outsb
insb
jbe
sbb
std
loopne
pop
insb
push
jne
in
pop
das
inc
insl
test
dec
mov
add
mov
cmc
std
js
int
rcr
or
sbb
movsl
testl
pushf
scas
push
push
loopne
xor
roll
mov
or
imul
or
mov
pop
adc
mov
lret
inc
add
movsl
imul
jecxz
lcall
int
jge
shr
xor
add
sbbb
sub
xchg
lods
mov
sbb
mov
sahf
add
addr16
aad
or
xchg
xchg
dec
lods
mov
mov
call
shrl
dec
sbb
push
jns
lds
xchg
mov
cmpsb
jo
jp
mov
sarl
lods
sub
or
inc
mov
ds
mov
lret
fsubrl
sbb
cmp
inc
inc
inc
sub
mov
pop
aaa
enter
xchg
daa
loope
lcall
xor
in
sub
push
and
lods
test
xor
sub
scas
loopne
dec
fcmovu
movsl
cmp
mov
out
pop
cmp
cmp
jno
mov
push
push
sub
lret
mov
push
jnp
shrb
mov
data16
jle
loop
sbb
add
jae
je
mov
and
aam
or
cs
pop
push
dec
or
jl
or
lahf
inc
inc
sub
pop
cmc
fldenv
es
out
aaa
mov
pop
jp
popa
mov
in
sub
push
ds
jge
cltd
popa
movsl
add
insl
push
cwtl
jg
stos
push
rclb
mov
jne
leave
enter
lahf
inc
sbb
jle
or
pop
call
addr16
mov
sub
pop
fsub
cld
out
movsb
lret
les
xor
sub
or
dec
or
inc
adc
call
ret
test
loop
mov
adc
add
cmp
xchg
mov
lock
clc
sub
pop
add
outsb
stc
loopne
inc
mov
arpl
fs
mov
in
sbb
jp
sub
mov
fs
pusha
sub
into
pop
ja
enter
or
xchg
rorb
mov
dec
andb
out
nop
push
jne
sub
adc
xchg
dec
xlat
sti
into
mov
js
push
mov
push
or
add
mov
outsb
jne
es
push
mov
rcrl
lahf
ja
dec
pushf
push
mov
add
fidivl
adc
cmc
or
or
pusha
imul
scas
ljmp
and
rorl
andb
mov
sbb
push
icebp
or
xlat
inc
test
call
mov
shrb
and
rclb
mov
adcb
inc
cmpsb
mov
mov
int
pop
jle
add
pusha
adc
or
movsl
inc
call
push
mov
mov
lea
cwtl
mov
stos
mov
xor
cmpsl
mov
dec
push
pop
mov
cltd
stos
cs
mov
add
sarb
xchg
loop
pop
push
inc
fucomi
cs
sub
jmp
enter
adc
xchg
sbb
cmp
icebp
adc
lret
push
lods
jae
mov
cmp
pop
stc
fildl
fnsave
push
icebp
and
or
xor
ret
adcb
lcall
out
movsb
aad
fsubrs
out
rorl
and
fsubrl
or
arpl
rcl
xor
mov
jae
cld
mov
xchg
mov
xchg
rolb
popf
adc
sbb
add
and
adc
add
xchg
addb
xchg
or
xlat
push
inc
aad
push
dec
mov
push
push
sahf
cwtl
mov
rcrl
adc
sti
mov
inc
cbtw
dec
cld
dec
push
mov
or
mov
lea
jl
dec
adc
in
jle
jb
mov
mov
dec
cwtl
cmp
jb
lds
mov
xorl
insl
jb
rcrl
imul
mov
jl
xchg
mov
xchg
dec
lds
mov
pop
xor
jno
push
pop
mov
fstpl
inc
mov
js
pop
pop
push
inc
ljmp
in
arpl
pop
test
mov
mov
push
push
fldl
dec
sub
pop
pop
stos
push
call
mov
pop
xchg
push
shlb
hlt
sbb
xor
stos
incl
fists
mov
lea
dec
xchg
adc
aam
xor
ret
and
je
imulb
and
inc
mov
jne
xchg
or
lret
adc
das
jp
inc
xchg
pop
shrl
popf
cmp
mov
add
jge
cmp
enter
call
cmp
pop
pop
or
push
scas
iret
mov
cmc
test
xchg
outsb
and
arpl
cli
add
sub
cltd
fcmovb
lea
pop
cld
in
and
clc
push
or
ja
jg
fcoms
xchg
add
adc
cmp
push
cltd
ret
loopne
push
cmpsl
xchg
mov
pop
mov
inc
mov
ret
test
dec
mov
insl
mov
mov
incl
adc
mov
jno
push
push
ja
xor
daa
lahf
cmp
dec
loope
fs
nop
mov
and
push
scas
cmp
inc
pushf
push
and
sbb
dec
std
rorl
adcl
push
out
push
clc
mov
cmpsb
inc
push
pop
mov
cmp
and
cwtl
jle
stos
daa
adc
mov
lea
inc
outsb
mov
outsb
mov
jle
addr16
loop
cmpsb
clc
mov
fdivs
mov
stos
pop
inc
test
xor
bnd
popf
xor
std
mov
fiadds
jne
xchg
add
and
pop
dec
lea
adc
mov
test
mov
adc
mov
push
mov
enter
cmp
push
push
xor
repz
push
outsl
out
push
sbb
test
cld
push
xlat
pop
mov
ret
movsb
mov
dec
sub
stos
cwtl
or
mov
mov
push
rcrb
adc
inc
out
scas
sub
inc
inc
cld
cmc
nop
push
lods
inc
or
push
addr16
and
adc
rorl
mov
push
xchg
rcrb
jle
mov
incl
mov
enter
jmp
inc
push
cltd
xor
add
or
add
pop
test
shlb
inc
cwtl
push
xlat
mov
mov
pop
mov
push
and
test
xchg
push
cld
sti
push
fimuls
mov
adcl
mov
mov
mov
sbb
push
cmp
mov
jns
insb
push
jmp
xlat
outsb
mov
je
xchg
xchg
cltd
int3
sbb
xchg
jno
bound
sub
or
pop
sbb
mov
xchg
cmp
sub
out
movsl
xor
cmc
out
sub
jns
clc
jne
fs
push
sub
xor
xchg
dec
sub
xor
pop
xchg
sub
sti
shll
sub
push
adc
adc
mov
cmp
les
or
mov
movsb
enter
and
in
cs
pop
pop
lcall
aam
or
pusha
or
insl
loopne
sub
jge
mov
imul
inc
mov
lock
in
mov
pusha
sub
mov
sub
push
test
mov
loop
add
movsl
rcrb
inc
sbb
ret
lea
stos
add
test
movsl
jmp
test
push
scas
subl
or
in
arpl
loopne
test
lock
jbe
and
std
mov
imul
std
ss
or
lods
stos
fisttpll
inc
insb
or
xor
add
mov
jmp
mov
inc
dec
xchg
cltd
clc
rolb
and
mov
inc
rorb
jb
dec
js
out
cmpsb
push
insl
sar
pop
lock
adc
pop
xor
pop
jmp
mov
cli
add
ja
out
loope
scas
mov
pusha
es
out
jge
rol
and
push
clc
and
dec
cld
mov
popa
stos
ret
add
in
nopl
in
pop
sub
in
addr16
add
adc
inc
in
rorb
lods
mov
or
inc
outsl
push
push
push
mov
lahf
add
or
adc
cs
inc
test
push
jmp
stos
xchg
stos
je
inc
outsl
sbb
sar
in
jo
push
pop
cmp
sub
fiadds
pop
jae
lock
fisubrs
jge
adc
adc
sub
pusha
scas
push
addr16
mov
mov
out
mov
cmp
incl
push
mov
je
xchg
mov
mov
xor
push
fisubl
mov
js
cmp
mov
dec
pop
xchg
leave
jae
inc
jne
scas
ss
jne
push
jecxz
push
xchg
add
pop
or
mov
rcl
add
xlat
shlb
popf
sbb
rorl
scas
daa
or
or
stos
test
push
and
scas
mov
daa
hlt
xchg
cld
movsl
mov
fs
dec
sbb
adc
cmp
dec
fld
mov
in
mov
fcoms
xor
int3
sub
fdivrs
mov
mov
call
mov
inc
int
jp
pop
push
outsb
mov
shlb
pusha
dec
lea
dec
dec
clc
inc
icebp
pop
add
ds
pop
sbb
xchg
enter
mov
daa
aaa
and
dec
add
adc
sub
mov
and
mov
mov
pop
in
iret
lret
sbb
pop
pop
and
clc
insl
fs
nop
add
push
push
sahf
mov
pop
mov
ds
out
mov
jb
sub
mov
sbb
jb
xchg
shl
stos
call
je
mov
cmc
fsubl
inc
inc
sbb
iret
sbb
outsb
fwait
stc
mov
mov
jo
dec
ja
push
push
inc
ljmp
test
adc
fidivs
dec
dec
add
cmp
adc
mov
cld
xchg
push
rorb
mov
xor
or
in
dec
adc
push
shrb
sbbb
outsl
popf
rcll
dec
cmp
fwait
mov
sbb
hlt
sbb
cmp
xor
mov
fadd
dec
xor
dec
xor
test
pop
shrb
stos
cmp
in
xor
sub
mov
sbb
rolb
cltd
in
or
test
mov
and
jo
xor
shrl
mov
adc
mov
cmpsl
add
sub
sbb
cltd
mov
mov
jb
loopne
push
mov
jo
pusha
cltd
or
cwtl
xchg
mov
adc
cli
mov
mov
mov
loopne
add
or
mov
test
push
lcall
fisubs
inc
scas
xchg
pop
aam
sub
adc
push
adc
imul
je
sar
cs
sbb
sbb
adc
cmpsb
inc
fisttpl
leave
pop
shrl
inc
lock
adc
push
inc
lock
adc
outsl
testb
or
add
shll
rolb
sbbb
aaa
ljmp
pusha
nop
xor
and
mov
jbe
push
fistpl
jne
push
insb
es
cltd
ljmp
or
xor
out
xor
lea
cmpsb
adc
in
and
jnp
cltd
xor
cmpsb
or
lds
inc
nop
movsl
or
push
xor
cmpsb
or
subb
xchg
arpl
xchg
movsb
sub
sub
imul
inc
xchg
ds
adc
add
adc
or
or
inc
test
repz
gs
sub
jb
je
inc
cwtl
jg
je
movsl
cmp
mov
inc
flds
pusha
aaa
pop
dec
xchg
arpl
pop
cmpsb
inc
inc
mov
mov
push
and
add
inc
sbb
xor
push
fimull
xor
aas
xor
pushf
arpl
xor
xchg
mov
xor
sbb
and
inc
mov
inc
addl
inc
and
mov
pop
imul
mov
mov
in
pop
adc
push
addr16
out
mov
fisttpl
int3
dec
mov
and
push
and
xchg
aaa
sarb
pop
pushf
mov
or
mov
push
cwtl
inc
and
and
jno
sbb
dec
adc
pushf
es
cwtl
push
xchg
and
imul
into
cwtl
daa
mov
adc
xchg
lret
lahf
mov
xor
lea
push
mov
mov
add
or
inc
popa
data16
into
mov
sbb
adc
repnz
sbb
add
adc
adc
pusha
mov
fs
lods
xor
mov
ror
repnz
mov
add
movsl
lea
aam
mov
je
mov
or
adc
mov
ror
add
mov
sbb
dec
movsb
popf
sbb
dec
sbb
movsb
dec
movsb
lods
push
inc
lret
xchg
pop
loop
or
pop
stc
cwtl
xchg
or
mov
push
and
es
bound
sbbb
xor
and
mov
adc
xor
pushl
lea
pop
insl
or
jo
mov
push
or
in
enter
xor
mov
sahf
pop
pop
in
fisttpll
sub
xor
mov
xor
jmp
pop
dec
mov
mov
aam
lods
sub
enter
jmp
pop
repnz
hlt
xor
xorl
mov
popl
xchg
mov
inc
pop
push
add
mov
jno
arpl
test
fmull
cmpsl
repz
xchg
mov
testl
fisttps
xor
out
test
aaa
adc
inc
rorb
push
mul
lret
pop
sub
and
inc
popf
shll
or
push
mov
lret
inc
adc
mov
dec
lea
pop
in
mov
aaa
mov
push
push
adc
and
adc
mov
adc
pop
movsl
icebp
hlt
test
mov
push
mov
mov
dec
hlt
xchg
testb
mov
into
inc
bound
cltd
mov
leave
adc
dec
daa
mov
mov
adc
sub
int
subb
xchg
mov
inc
mov
jno
lret
adc
and
bound
push
xchg
arpl
jbe
bound
and
iret
rcrb
stos
push
jns
in
cmc
cmp
mov
repz
or
enter
and
fnstcw
and
cli
inc
sbb
sahf
push
addr16
inc
push
jbe
adc
scas
es
cmc
pop
push
mov
orl
daa
lret
lcall
test
cmp
jo
dec
mov
add
mov
and
push
je
cmp
dec
test
loop
test
movsl
inc
aam
adc
mov
adc
rcrb
loop
cmpsb
push
cmp
mov
in
add
xlat
inc
mov
adc
mov
adc
fsubr
xor
mov
out
inc
lea
inc
and
dec
enter
xchg
dec
rcrl
sbb
ja
mov
inc
test
cmp
jp
inc
and
dec
loopne
mov
adc
in
mov
adc
mov
mov
ror
mov
sub
push
xor
fldl
inc
leave
sbb
stos
mov
or
je
out
mov
nop
scas
xchg
or
adc
adc
cmpsb
in
sti
sbb
fisttpl
addr16
cwtl
push
push
inc
pushf
aaa
inc
mov
cmc
clc
lret
dec
mov
add
pop
inc
pusha
xchg
add
call
pop
movsl
sub
inc
mov
inc
lea
dec
addb
add
les
cmp
adc
pop
or
adc
aas
jmp
loope
pop
push
push
sub
inc
mov
imul
pop
push
clc
mov
jb
test
stos
mov
or
scas
out
fwait
mov
aam
push
push
pop
roll
andb
nop
scas
js
fldl
cmc
jl
out
or
int3
cmovle
int3
push
pop
cwtl
pusha
mov
jmp
jg
outsb
fcoms
shlb
cmp
xchg
cli
fcomp
mov
mov
lock
jp
sub
in
and
sub
push
lahf
imul
fistl
aas
fimuls
enter
fists
push
or
xchg
push
or
cmpsb
mov
dec
cmp
ret
loope
mov
add
imull
dec
pop
mov
in
mov
loopne
pop
sub
rol
add
cmc
pinsrw
stc
loop
mov
xor
inc
mov
cltd
mov
sub
movsl
or
iret
sub
cmpsb
in
imul
andl
lods
or
enter
inc
jb
xchg
push
mov
popa
push
dec
jne
inc
cmp
mov
lea
jb
test
push
iret
or
jge
clc
pop
or
ss
nop
not
fs
and
sbb
push
mov
or
shrl
push
mov
andb
or
xor
jle
not
inc
jmp
push
dec
pushf
mull
cmpsl
adc
pop
xlat
in
and
jg
sub
in
out
mov
cmpb
cmc
and
jae
lea
or
mov
xchg
jmp
jns
repz
outsl
test
test
mov
xchg
mov
mov
or
xchg
test
push
lret
cmp
lret
cld
xor
rolb
mov
push
jae
jle
adc
push
fstpt
cmp
jp
or
popf
call
scas
and
push
inc
dec
mov
mov
inc
jge
ja
push
test
fdivl
cli
xchg
pop
mov
sub
rorl
faddl
cmpl
push
fwait
call
jmp
stos
cmp
cltd
aaa
pop
mov
and
xor
pop
push
jae
fistl
xchg
push
pop
test
enter
pop
jnp
ret
into
mov
out
clc
jmp
fistpl
or
repz
jmp
rcr
add
lock
sbb
inc
stos
inc
inc
mov
jnp
cmpsb
mov
je
inc
scas
or
fstl
add
mov
bound
shl
and
pop
jns
in
mov
or
popf
mov
inc
lds
popa
dec
pushf
push
movsb
mov
add
test
cmp
out
mov
or
cs
shr
xchg
inc
movsb
lods
mov
enter
push
add
pusha
inc
or
adc
std
pop
mov
lcall
xlat
aad
out
xchg
icebp
test
add
inc
pop
push
hlt
xor
mov
lcall
sbb
push
xor
xchg
into
add
mov
cmp
in
cs
scas
popa
adc
in
outsb
push
and
scas
sbb
jmp
or
lret
sbb
pop
inc
mov
adc
push
add
dec
sub
add
mov
cmp
mov
aam
hlt
dec
dec
pushf
and
aaa
or
push
jae
in
imul
popa
loopne
call
dec
or
cmpsb
push
push
stos
xorb
inc
xchg
sub
in
fildl
pop
pushf
xlat
sbb
int3
xchg
out
repz
cmpsb
pop
xchg
add
sahf
adc
repnz
mov
cmp
loope
ret
fisubrl
add
fldt
rcrb
lcall
divl
cmpsb
xchg
mov
outsl
xlat
cmp
imul
fisubl
jno
loopne
in
fcoml
in
enter
sub
leave
and
jo
dec
and
push
or
and
fs
imul
lods
repnz
cmp
and
or
mov
test
mov
insl
pop
mov
ss
rorb
add
js
ret
sub
and
inc
mov
xchg
incl
jg
ds
push
lcall
enter
mov
les
jle
mov
jmp
push
cs
or
scas
call
inc
xchg
sub
mov
mov
adc
pop
cmp
or
std
or
and
leave
mov
sub
in
fistps
fldenv
xor
sub
pop
jmp
shll
divl
xor
fildll
and
roll
mov
mov
shlb
cmp
aam
jnp
sti
aam
nop
call
inc
insl
shl
and
sarl
filds
out
dec
out
mov
cmp
pop
or
test
xor
addl
adc
int
inc
lret
inc
fidivs
arpl
and
add
or
sti
andb
dec
inc
and
cmp
mov
scas
mov
pop
mov
insb
push
inc
xchg
mov
in
adc
pop
fs
ret
ficoml
rorb
test
bound
dec
mov
xor
std
xor
movsl
mov
push
fwait
punpcklbw
pushf
std
cmpsb
iret
gs
int3
in
jge
ja
imul
lds
sub
xor
test
push
int
sbb
jp
rorb
pushf
mov
daa
push
xor
iret
subb
cltd
stos
cwtl
push
lret
add
sarl
inc
cwtl
mov
lea
dec
adc
or
scas
push
jbe
xlat
ret
xchg
add
inc
mov
in
adc
adc
jbe
int3
push
inc
das
xlat
das
push
adc
fsubrp
xchg
xor
xchg
lcall
nop
sbb
mov
add
push
or
sub
sub
sti
xchg
pop
push
fs
push
or
negl
sbb
mov
ja
sub
pop
cmp
jae
mov
mov
bound
mov
xchg
jbe
bound
lcall
fisubs
ret
inc
call
test
insb
sub
cmpsb
mov
pushf
and
add
pop
fidivrs
xchg
inc
dec
in
pop
adc
inc
jecxz
pop
pop
fsubl
add
jb
and
dec
pushf
inc
push
inc
mov
xchg
xor
vmovupd
xlat
xchg
sbbl
mov
repz
pop
popf
inc
mov
push
jge
mov
mov
jmp
sub
mov
mov
push
mov
mov
test
pusha
dec
lcall
aas
and
mov
and
scas
xchg
jne
inc
call
xor
xor
sbb
fcoml
inc
add
addr16
adc
push
mov
movsl
dec
subl
xor
ds
lret
js
ret
dec
icebp
cmp
xor
ret
mov
sbb
test
jbe
sti
pop
push
pop
inc
adc
add
xchg
xchg
dec
xchg
inc
mov
stc
push
test
mov
mov
inc
adc
scas
push
push
ss
outsl
xor
pop
out
lods
cmpsl
inc
or
mov
fwait
adc
cmp
add
sub
fdivrs
xchg
mov
or
loopne
ja
pop
call
ret
je
cltd
pop
push
loope
and
sub
mov
jl
rorb
or
jge
inc
inc
push
test
mov
xor
insb
cmp
lds
movsl
scas
cwtl
xor
sbb
stos
outsb
cwtl
sub
mov
sbb
loop
pop
sbb
sub
or
inc
cmp
push
ds
pop
adc
cld
sub
push
pop
add
int
mov
mov
sbb
sub
fidivrs
or
mulb
aad
add
out
cli
lahf
jecxz
or
ficoms
test
cltd
rorl
ret
mov
jg
fdivs
rclb
cmp
pop
mov
jge
and
pop
pop
push
push
mov
cltd
cmpsb
loop
stos
push
mov
mov
jno
push
mov
je
push
xor
cmpb
fs
xor
lock
xor
push
stos
lods
and
mov
js
mov
mov
adc
shll
dec
rorl
dec
mov
adc
jmp
aaa
sub
add
cmp
add
and
add
inc
rolb
sub
shll
push
movsl
inc
sub
push
dec
dec
inc
jo
clc
or
sub
adcb
or
xchg
mov
pop
fs
in
rcr
pop
out
repnz
fdivrs
sub
and
dec
xor
popf
mov
lahf
enter
testb
dec
push
out
cmc
inc
mov
jbe
sbb
inc
fistps
mov
mov
push
out
mov
movsl
mov
or
rcll
adc
dec
cmpsb
je
xor
and
enter
sub
adc
sub
jl
hlt
lea
lahf
cmp
sub
adc
leave
in
iret
mov
js
dec
mov
aaa
out
mov
inc
cmp
addl
cli
add
inc
and
repnz
inc
stos
mov
jp
xchg
and
inc
xor
mov
mov
or
xchg
jmp
inc
and
xchg
jne
add
popf
movsb
jmp
andb
xor
adcl
add
add
adc
fwait
leave
cld
push
sbb
xchg
fsubrl
mov
push
push
or
push
adc
stos
push
mov
lahf
pusha
cmp
in
jp
inc
cmc
and
and
add
jae
inc
xchg
mov
adc
fwait
xor
xchg
add
addr16
push
not
lds
fs
dec
xchg
std
and
lret
adcb
push
xchg
movb
inc
inc
lods
mov
cwtl
fs
test
sub
aam
rolb
xor
orl
lahf
mov
push
sub
xor
push
in
jne
insl
mov
hlt
cmp
aad
scas
mov
adc
adc
mov
cmpsl
cli
jmp
ljmp
mov
jbe
or
push
jl
xchg
and
stos
xchg
popf
out
repz
adc
sub
cltd
in
int
jno
mov
mov
mov
inc
mov
push
aas
push
push
or
fcoms
fisubrl
and
and
inc
mov
sbb
cmc
inc
mov
test
lods
or
jle
and
rorb
mov
movsl
sbb
stc
out
jb
add
xchg
sbb
push
hlt
roll
mov
and
push
pop
lret
adc
jp
aad
sub
ret
inc
mov
lods
jo
shr
lcall
lock
mov
pushf
sbb
mov
in
xchg
jb
pop
pop
mov
rorl
mov
sahf
out
aad
pop
sub
xor
call
mov
fidivrs
adc
shrb
hlt
sbb
xlat
jge
push
xchg
scas
icebp
pushf
mov
loope
inc
mov
sbb
jo
call
lahf
add
mov
call
add
xor
push
mov
mov
insl
sub
ret
insb
jb
pop
rcr
push
jne
fidivl
aas
popa
call
jg
rcr
mov
inc
dec
aas
dec
dec
xor
fistps
jb
movsl
loope
push
sbb
mov
jne
and
mov
hlt
add
mov
fwait
jmp
out
adc
and
and
cmp
cmp
pop
push
stc
xchg
js
test
aad
push
xchg
jne
adc
ret
stos
sbbb
xchg
jns
xchg
add
ficoml
fmuls
push
pop
jne
movsl
stos
mov
bound
add
hlt
cs
cmp
cmp
xchg
fcmovnu
and
idiv
stc
jg
inc
addr16
mov
cmc
fbstp
cmp
sahf
popa
loopne
mov
inc
pop
ds
add
add
clc
add
outsl
sub
sbb
xor
sub
pop
pop
xchg
mov
ret
mov
inc
test
adc
ja
cltd
imul
sbb
add
enter
mov
lret
std
sub
test
xor
cmp
xchg
ja
testb
xchg
stos
test
stc
sbb
add
mov
pop
mov
pop
dec
xor
cmp
pop
out
cmpsb
or
add
fildl
test
adc
ficompl
sub
mov
cltd
xor
mov
imul
test
imul
arpl
and
fstpl
bound
nop
dec
es
or
call
ja
bound
mov
jge
push
nop
jmp
add
and
push
test
jmp
jae
xor
and
out
loope
test
mov
or
xor
imul
add
inc
mov
xor
test
jb
adc
or
jns
into
out
imul
mov
sahf
add
pop
pop
inc
repz
insb
stos
sbb
xor
mov
leave
divb
add
fxtract
sbb
xchg
lret
push
es
test
scas
mov
sbb
xlat
xor
sub
inc
mov
or
jne
test
mov
pop
in
mov
mov
loopne
aas
rorl
add
mov
xor
sub
lock
imul
or
in
cwtl
ret
cmp
data16
into
cmpb
lret
add
push
xor
je
test
mov
lds
pop
jmp
lahf
sbb
out
sub
shr
xchg
jmp
lods
pop
imul
jbe
lods
fistpl
mov
test
int3
std
pop
hlt
lock
jle
mov
ja
jno
and
mov
sub
popl
call
aad
mov
sub
adc
or
icebp
inc
scas
inc
in
pop
lods
call
iret
dec
push
inc
out
out
pop
imul
mov
jne
cmpsl
mov
jns
xor
call
aas
aam
aam
mov
sar
hlt
insb
xlat
stos
mov
lret
imul
aaa
cmc
loop
aaa
pop
inc
sbb
inc
or
mov
xor
sbb
daa
jge
in
lds
adc
fmull
xchg
inc
jmp
ret
out
sti
xchg
insb
pop
mov
mov
jne
lahf
jge
sbb
xor
or
loopne
and
out
movsl
sbb
push
pop
pop
sub
lock
push
sub
jmp
imul
repnz
insb
pop
gs
cmpsb
or
pop
push
insb
pop
test
mov
gs
mov
call
adc
add
loop
jns
fisubrs
pop
cs
and
divl
lret
and
shlb
lret
sub
cwtl
call
pop
lds
mov
xchg
insl
std
jns
outsl
xlat
test
shlb
add
sbb
hlt
cmp
ds
pop
pop
dec
mov
add
bound
stos
mov
jp
add
mov
shrb
pop
stos
ds
cmp
cmp
cmc
mov
aam
adc
mov
cmp
mov
test
sub
je
dec
jbe
loope
pop
mov
call
mov
or
push
insl
sarl
cld
cld
sbb
add
add
test
sub
cmp
outsb
aaa
push
incb
ja
popf
aad
jg
inc
inc
cmpsb
cmp
push
mov
and
xchg
and
add
test
adc
push
xchg
filds
rcrb
push
push
add
sub
pusha
adc
movsl
dec
pop
dec
lahf
and
loop
push
inc
or
int3
cmpsb
mov
test
sub
sbb
xchg
xor
popa
push
cmp
les
inc
in
lods
pusha
pop
loope
pop
test
sarb
lods
sbb
and
sbb
lret
lahf
cmp
rcll
jmp
add
sub
mov
mov
fcoml
nop
nop
ds
fsubp
int3
fiaddl
ja
dec
mov
sbb
jg
sbb
das
inc
mov
mov
in
shll
xchg
scas
sbb
popf
push
les
clc
loope
scas
adc
test
ret
mov
mov
xor
loope
hlt
xorl
mov
test
pushf
shl
mov
vsqrtss
add
push
shlb
imul
xlat
popf
add
imul
call
lcall
icebp
inc
xor
fxtract
inc
cmp
cmp
rcrb
push
jbe
hlt
dec
inc
jns
shr
adc
push
les
add
addr16
mov
fcoms
pop
mov
icebp
ja
mov
inc
mov
out
adc
or
call
adc
mov
cmp
adc
xchg
inc
sub
fcoms
sar
add
mov
lods
mov
mov
xor
rcll
sarb
gs
cmp
add
test
xor
lock
ja
call
cmp
int
cwtl
xlat
jnp
pop
mov
cltd
data16
decb
cwtl
jmp
ret
or
scas
js
inc
add
or
cwtl
stos
and
sub
dec
je
hlt
in
sub
aam
jecxz
mov
and
cli
xor
das
pop
addr16
dec
movsl
add
leave
push
and
cli
fdivs
mov
imul
inc
sub
addb
aaa
andb
and
in
popa
pop
popa
insb
out
or
call
inc
xor
fildll
jle
and
mov
mov
dec
es
mov
adc
cs
jl,pn
or
jo
xor
xchg
dec
xor
mov
add
shrl
daa
inc
xor
outsb
or
jo
ret
mov
jb
fldcw
jle
adc
ds
test
jp
rorl
jge
pushf
adc
adc
loope
or
xor
imul
fwait
repz
sarl
push
mov
mov
into
fucomp
xchg
push
sahf
scas
int
mov
xor
pop
xchg
xchg
mov
das
xchg
sub
loop
cld
iret
and
add
pop
push
push
subb
xchg
xchg
loope
inc
stos
lahf
cmpsl
push
inc
mov
cmp
adc
inc
jle
movsl
subb
cld
and
xor
fisubrl
and
add
inc
outsb
jns
add
xchg
adc
push
out
nop
inc
shl
lret
push
popa
mov
sub
xchg
in
sbb
iret
sub
ret
fbld
in
xchg
push
xor
push
lahf
and
and
push
mov
inc
push
gs
scas
ret
pop
cmp
ja
call
and
fstl
push
mov
leave
and
sti
mov
dec
sti
das
lret
test
xchg
mov
shl
lret
xor
stc
mov
das
jg
test
xchg
fs
cmp
lods
loope
and
daa
imul
mov
cmpsb
cmpl
gs
xlat
loope
pop
rcr
test
dec
sbb
rep
xlat
int
xchg
je
into
loopne
xchg
cld
aaa
jns
xlat
add
nop
mov
cmp
stc
ds
stos
jb
or
daa
xchg
call
test
pop
sub
push
adc
mov
add
push
divps
mov
out
jns
cs
cmc
aaa
mov
iret
adc
mov
and
inc
enter
mov
in
or
jbe
lahf
outsl
xchg
add
call
js
xchg
shll
pop
dec
outsl
cltd
jno,pn
cmp
inc
dec
xchg
scas
inc
push
sub
push
mov
push
aaa
sbb
testb
insl
mov
aam
bound
mov
test
pushf
aad
xchg
pop
pop
jmp
cmp
cs
sub
mov
outsl
fcmovu
cld
mov
push
xlat
imul
xchg
lds
add
mov
inc
dec
or
cmp
loope
cwtl
in
mov
mov
inc
shrb
or
mov
add
pop
orb
jg
aas
and
aas
and
push
add
jmp
mov
xor
out
inc
fcompl
out
inc
int3
adc
xor
xchg
push
int3
sub
test
hlt
xchg
sbb
mov
cltd
jbe
jns
sbb
clc
inc
jbe
cmpsl
dec
call
adc
pop
sub
push
inc
jo
int3
fistpll
lods
kmovb
or
dec
mov
push
xchg
sbb
cwtl
shrb
adc
jecxz
clc
daa
xchg
dec
push
pop
mov
sub
cmp
int3
lods
es
xchg
repz
pusha
pop
sbb
sub
stos
inc
sbb
outsl
inc
in
or
jne
push
xchg
mov
mov
sbb
add
pusha
int3
scas
cmp
cmpl
nop
inc
and
xor
lock
mov
ret
sub
mov
pusha
sub
mov
bound
sub
sub
leave
test
inc
push
sub
imul
cmp
subl
fldcw
xlat
ret
scas
in
jmp
int3
lea
inc
mov
fistpl
stc
mov
or
mov
push
and
xchg
lods
xchg
aad
mov
xor
sbbl
hlt
push
fsub
mov
imull
aaa
das
sahf
mov
ds
dec
xchg
mov
cmpsb
sbb
push
push
test
lret
imul
push
lods
lret
aaa
stos
push
ret
xor
in
or
push
stc
inc
jl
scas
push
lods
sbb
add
push
push
adc
lods
jmp
sub
dec
sub
pop
push
add
lock
cmp
jns
dec
sbbb
xor
lcall
addr16
nop
lcall
mov
push
sbb
hlt
xor
sub
dec
pop
dec
xlat
cli
mov
dec
out
invd
fwait
es
scas
lock
xchg
and
imull
push
stos
nop
push
popa
dec
lea
xchg
jb
and
pop
cmp
jecxz
test
push
mov
push
mov
or
and
fildll
pushf
cs
inc
adc
add
in
in
loop
stos
push
mov
cmp
jp
hlt
popf
add
push
out
ret
cmp
xchg
jo
rcrb
adc
and
jl
int3
jne
cmp
xchg
addb
mov
sub
mov
adc
xor
ss
shll
mov
sub
sbb
cli
dec
mov
sbbl
ljmp
add
sahf
xor
gs
in
mov
fistpl
movsl
rcrl
mov
mov
sbb
dec
inc
jnp
call
test
and
pop
push
inc
lods
push
pusha
mov
push
test
ja
xchg
mov
add
subl
mov
and
add
int
inc
or
sub
jge
xchg
stos
iret
cmp
cltd
ljmp
sbb
addb
rcr
notb
fmul
rcl
mov
jno
mov
test
mov
repz
mov
movsb
in
movsb
xor
sbb
mov
cmc
pushl
add
pop
cwtl
out
and
outsl
lcall
out
mov
ljmp
adc
push
aad
stc
mov
pop
stos
pushf
cmc
ljmp
pop
mov
arpl
dec
sbb
cltd
push
add
jmp
dec
nop
add
ja
cld
imul
lahf
adc
pop
popa
and
pop
jbe
mov
loopne
and
push
pop
sbb
or
add
enter
add
in
aaa
movsl
push
fildll
xor
sub
pop
outsl
mov
pop
popf
movsb
mov
sbb
dec
xchg
testb
mov
aas
and
add
out
or
inc
inc
push
loopne
pop
int
in
and
inc
fwait
or
shll
bound
mov
adc
mov
mov
insb
mov
xor
cmc
sub
add
in
jp
xor
jae
movsb
ret
mov
xchg
outsb
fstpt
stc
mov
cli
push
sahf
fsubs
mov
jmp
add
ja
xchg
dec
leave
sub
adc
xor
mov
and
cwtl
call
aad
iret
or
pop
sbb
xchg
adc
loope
rolb
xchg
testb
lods
add
movsl
sahf
rorb
mov
push
inc
or
adc
xor
sub
push
enter
xor
stos
inc
mov
push
dec
bound
je
adc
shrl
mov
adc
push
adc
into
sti
push
push
lods
in
pop
add
add
cmp
sub
ss
cmpsb
mov
dec
insb
dec
jge
xchg
outsb
pop
cmpsb
mov
insb
cs
arpl
outsb
and
mov
dec
les
sahf
sub
adc
loopne
add
mov
add
inc
sbb
and
mov
mov
xchg
pop
fdivr
pop
clc
fistpl
cmp
lret
and
mov
sbb
xchg
xor
cmp
stos
xlat
jecxz
xor
clc
mov
outsb
sub
inc
stos
fucomi
test
in
dec
sub
mov
jp
mov
out
and
or
imul
outsl
sub
inc
in
cmp
sbb
adc
mov
sub
adc
mov
pusha
ffreep
or
gs
imul
out
pop
pop
adc
jmp
mov
cmp
add
inc
lock
sbb
xchg
repnz
iret
push
scas
jecxz
scas
mov
jae
enter
fldenv
pop
insl
and
or
or
and
sub
inc
mov
in
cmpsl
or
inc
lret
insb
mov
adc
sbb
mov
scas
adc
popf
fldl
push
push
aaa
clc
pop
add
add
das
xor
inc
mov
js
sub
xchg
or
out
repnz
cmp
das
lods
jbe
aad
inc
mov
push
mov
push
sahf
dec
xchg
aam
pushf
or
fimull
sar
ss
test
jmp
shll
aad
stos
xabort
repnz
roll
cmp
push
push
addr16
lahf
scas
inc
addr16
adc
test
dec
and
dec
xchg
jge
lock
add
sub
roll
inc
mov
xchg
fsubrs
stc
pop
ja
dec
das
pop
clc
notb
test
clc
dec
adc
pop
in
test
movsb
subb
negl
xchg
scas
int3
call
fcmovbe
outsl
jno
pop
push
cmc
stc
sbbb
xor
adc
scas
xchg
xor
cld
dec
jne
xlat
mov
jb
mov
test
inc
mov
or
mov
adc
sbb
and
jo
outsl
mov
cmpsl
mov
mov
fildl
incb
xor
lock
push
inc
ret
push
push
push
mov
or
sub
out
lcall
inc
xchg
dec
mov
xor
ficoml
mov
inc
insb
in
push
ds
inc
repnz
pop
jb,pn
xorb
or
insl
das
fadd
cmc
inc
push
rclb
mov
out
bound
inc
cltd
and
push
setb
pop
insb
decl
jecxz
dec
cmp
mov
and
out
or
sbb
arpl
jl
aaa
mov
les
xchg
jno
mov
jno
adcl
cmpsl
add
pop
jns
iret
push
jg
ficomps
lods
inc
inc
lahf
add
mov
mov
test
addr16
pushf
mov
pop
inc
and
in
inc
and
rcrl
xor
sub
bound
repnz
movsb
push
pop
cld
leave
fsubrl
leave
mov
ja
or
mov
add
mov
xchg
mov
pop
add
pop
cmp
loop
mov
fwait
sbb
xchg
aas
cmpsb
lea
aaa
xor
enter
sbb
add
inc
dec
lahf
and
loop
bound
add
andb
jne
pop
xor
or
fldl
call
add
jg
in
cmp
cmp
rorl
push
cwtl
lods
jle
push
cmp
xor
push
sub
cltd
pop
outsb
inc
rorb
popf
ds
mov
push
cmp
hlt
push
and
adc
inc
les
lods
adc
call
xchg
mov
in
inc
test
adc
hlt
daa
fmull
fiaddl
popf
shr
xchg
arpl
push
bound
mov
adc
test
mov
add
mov
cmc
pop
mov
lret
les
cmp
inc
aaa
and
mov
out
es
call
stos
mov
aad
shll
stc
popf
push
dec
and
pop
arpl
or
sbbl
pop
int
sub
call
xor
jge
icebp
mov
leave
xchg
test
push
lret
xchg
lods
jle
lahf
gs
pusha
and
mov
and
aaa
dec
sub
aas
pusha
shll
cmc
lret
fisubl
clc
mov
ljmp
hlt
data16
inc
lock
ja
lds
pop
mov
pop
sbb
loop
mov
lods
push
cmc
int
mov
inc
mov
jae
pop
mov
adc
mov
mov
and
pop
shl
mov
xchg
lahf
mov
aas
adc
outsb
mov
dec
inc
or
push
push
dec
or
stos
push
test
dec
aam
adc
adc
aaa
std
es
dec
mov
xor
push
rolb
shlb
inc
pop
xchg
sbb
push
js
push
jp
pop
adc
test
and
sub
add
xchg
push
inc
out
lds
cs
mov
ljmp
xchg
and
or
daa
adc
in
cmp
push
fdivp
cmpsb
mov
dec
pop
add
pop
cs
push
xchg
into
adc
mov
and
jp
imul
pop
or
mov
cmpsb
jp
jmp
daa
pop
pop
shrb
mov
mov
je
stos
mov
pop
rorb
loop
and
inc
jmp
negl
incl
cmp
fcomps
xor
mov
push
xchg
aam
xor
cmpsb
push
adc
icebp
imul
adc
incl
enter
in
pushf
test
ja
jmp
mov
dec
aas
call
xor
dec
addl
icebp
incl
and
and
out
xchg
sbb
inc
cld
dec
pop
je
imul
sti
fadds
shll
mov
ja
push
lcall
sti
dec
stos
xchg
cmpsl
mov
cmp
mov
aas
test
bound
adc
sub
push
xchg
adc
in
lahf
mov
dec
and
ucomiss
aad
faddl
aad
xor
notb
sub
push
jmp
xchg
jg
xor
inc
rcr
sbb
loope
and
pushl
fsubrl
and
sarb
rorb
aad
fnsave
ss
or
mov
sub
sub
nop
mov
jb
mov
xlat
daa
add
sbb
xchg
sti
mov
dec
ficoms
fcmovbe
filds
outsb
or
sbb
push
xchg
sarl
jb
or
scas
jl
inc
sbb
add
inc
rorb
push
sub
xchg
mov
jmp
lods
xor
xchg
mov
clc
and
ret
rcrb
sahf
scas
das
jp
shlb
push
shlb
fs
sbb
popa
clc
or
push
scas
rolb
pop
mov
shl
loop
aam
out
stos
xor
mov
push
xchg
xor
or
mov
std
loopne
inc
sub
pop
push
push
cmp
push
push
and
out
scas
inc
xor
call
aad
mov
sbb
in
imul
and
xchg
adc
jb
or
enter
add
jns
leave
les
sarl
fistpl
dec
or
and
leave
pop
sbb
popa
mov
aam
pop
es
or
sub
dec
push
dec
xchg
mov
push
mov
mov
frstor
stos
jecxz
add
test
andl
lods
xchg
and
jne
xchg
cltd
sbb
cmpsl
push
scas
sub
repnz
adc
and
jb
add
jmp
sbb
dec
add
scas
lret
out
jbe
pop
adc
scas
jmp
insb
xor
pop
arpl
call
shrl
stc
push
mov
mov
movsl
xchg
jg
mov
add
loope
inc
pop
imul
pop
decl
adc
jmp
stc
or
jge
or
jg
xor
add
jp
enter
dec
in
adc
je
pop
nop
lods
jb
inc
scas
into
movsb
cwtl
cmp
and
loopne
pushw
lods
cmp
mov
mov
aad
lds
pop
rcr
dec
adc
stc
cmp
jno
jne
and
push
xchg
push
inc
or
inc
int
stos
stos
dec
xchg
sbb
test
and
addb
jbe
shl
roll
mov
sub
stos
test
shlb
div
rcrl
clc
xchg
mov
add
leave
pushf
pop
cmp
ret
in
mov
subb
cmp
dec
pop
imul
adc
cmpb
fdivrl
mov
sti
lods
popa
in
sub
or
mov
push
and
cmp
xor
lcall
jo
xchg
cmpsb
add
fwait
lret
xchg
add
pusha
daa
mov
pop
or
pop
or
hlt
pop
loopne
push
stc
sbb
in
add
call
mov
cmpb
mov
push
sbb
inc
push
adc
adc
call
pop
subb
addl
lods
cli
mov
stos
sbb
pop
jecxz
loopne
cwtl
lret
pop
push
mov
shll
mov
inc
arpl
or
mov
jle
cmp
shld
pop
decb
xor
sub
hlt
mov
add
mov
dec
jecxz
xor
cmpsb
pop
cltd
sahf
lret
xchg
inc
push
mov
mov
mov
pop
pusha
out
and
xchg
adc
adc
xor
in
dec
sub
pop
push
stos
pusha
jp
stc
lds
or
repz
mov
and
imul
cmpsb
andb
lds
mov
mov
leave
stc
xchg
jo
leave
std
jno
ret
sub
add
add
nop
mov
imul
pop
add
gs
jmp
add
dec
lret
sbb
lds
jb
mov
mov
clc
stos
push
sub
and
or
sti
pusha
daa
hlt
ds
in
lods
imul
test
push
jge
fimull
mov
mov
dec
mov
scas
and
mov
pop
lret
rcrb
arpl
pop
adc
pop
fs
popf
pop
or
sbb
stos
loope
pop
mov
mov
loope
cltd
adc
lock
or
test
rorb
mov
adc
in
sub
xor
into
jne
adc
test
aaa
sti
lods
dec
pusha
sub
pop
mov
jp
pop
dec
or
push
cs
insl
pop
add
xor
lock
sub
push
mov
jcxz
xor
mov
mov
jmp
and
iret
adc
cs
jns
cli
pop
rcrb
enter
das
mov
aam
mov
out
sbb
inc
sar
rorb
sbbl
stos
pop
pop
imul
imul
jo
cmc
push
shr
out
jg
test
push
sbb
shlb
inc
lock
push
cmp
mov
leave
cmc
mov
inc
jg
xor
and
xor
scas
push
inc
loope
lea
pusha
xlat
inc
push
das
or
inc
scas
cld
add
xor
pop
ret
inc
std
or
rcl
sbb
xor
repnz
test
addr16
fimull
jbe
inc
xchg
jae
lcall
inc
fwait
jb
stos
and
test
xchg
insl
jnp
inc
push
call
mov
jg
loopne
jle
icebp
add
shll
in
sub
mov
test
dec
inc
gs
cmpl
cmc
xchg
xchg
shlb
lods
and
sti
cmp
jge
xchg
jb
mov
xchg
aas
stos
xor
pop
orb
mov
mov
mov
mov
gs
cld
push
jge
insb
cmp
mov
xor
or
pop
add
in
xchg
or
daa
pop
cmp
clc
sti
loop
and
int
jg
movsb
sbb
cmp
pop
dec
mov
adc
js
fsubs
jp
jnp
inc
dec
and
lret
cmp
js
int
mov
xchg
inc
cmpsl
pop
enter
sbb
mov
sub
mov
jge
cmpsl
and
loop
mov
dec
jno
lea
and
ret
mov
fmull
mov
sbb
imul
mov
sbb
mov
fidivl
sub
mov
insb
mov
push
inc
and
setnp
sub
adc
mov
test
cwtl
mov
aas
mov
inc
xchg
cmp
leave
ds
mov
fadds
cmp
mov
xchg
test
mov
pop
push
daa
shlb
adc
mov
jp
imul
mov
dec
push
ret
jno
jecxz
pop
pop
lret
inc
xchg
cld
iret
xrelease
popa
mov
loope
roll
xchg
inc
lcall
jge
popf
aaa
lock
in
sbb
cmpsb
cmpsb
movsb
pop
push
sub
not
aas
mov
fdivp
push
add
aaa
insl
jp
mov
ret
cwtl
adc
aaa
mov
add
les
inc
push
shr
outsl
or
dec
and
inc
pop
add
movsb
jecxz
std
rorb
lds
fs
rol
data16
and
and
xlat
pushf
lods
mov
out
sbb
dec
pop
loop
mov
mov
pop
mov
dec
sti
sbb
fwait
dec
mull
and
and
pop
ss
stc
or
cmp
inc
cmp
fwait
movsl
inc
mov
lock
adc
lds
fildl
mov
stc
push
pop
int
lret
cmp
xchg
inc
sahf
pop
leave
dec
clc
ret
cmpsb
popf
mov
cli
pop
pop
sbbl
push
call
jne
lea
leave
mov
pop
pop
sbb
pop
cmpsb
mov
lods
and
pushf
sub
xor
jecxz
xor
and
or
mov
jne
mov
insl
mov
lcall
mov
sbb
ret
enter
outsb
sub
sub
sbb
lahf
dec
mov
push
inc
xchg
aaa
sahf
sahf
push
mov
xchg
call
inc
xor
les
sbb
shrb
xor
cmc
gs
scas
mov
ror
fdivp
mov
mov
or
add
es
mov
push
notl
mov
scas
sub
xorb
pusha
mov
xlat
stos
leave
add
adc
outsl
cmc
fs
jecxz
inc
lcall
inc
push
inc
test
mov
or
pop
sub
jg
lahf
mov
mov
das
push
pop
sub
in
mov
sub
xchg
add
xor
notb
jmp
fcmove
iret
mov
add
decb
pop
inc
sbb
leave
mov
test
mov
shll
inc
xor
mov
loopne
pop
sub
push
in
out
push
sbb
pop
cmpsb
mov
push
xor
btrl
imul
sub
int
loop
sub
imul
dec
pusha
movsb
add
cmp
lds
push
sub
xorb
adc
or
adc
xchg
lds
or
int3
rcrl
xchg
call
fcmovnbe
fsubr
pop
fs
sar
lcall
add
or
sbb
inc
ret
hlt
push
iret
out
pushf
and
add
sub
mov
pusha
and
sbb
dec
cmp
incb
es
and
js
cmp
sub
inc
inc
jmp
mov
sahf
popa
xor
pushf
sahf
mov
dec
push
and
sub
pushf
mov
aad
mov
mov
pop
inc
fsts
cmp
jl
sub
sub
push
adc
jne
in
or
mov
sub
mov
xor
lcall
dec
aaa
stos
in
or
jno
add
mov
push
lods
jge
or
mov
cwtl
loope
cwtl
pop
outsb
and
dec
fcoml
mov
stos
cli
je
adc
subb
inc
hlt
pop
stos
lcall
loope
inc
mov
sbb
add
push
jne
out
jae
add
cmp
mov
aam
jl
xor
call
sub
stos
shrb
cmp
out
or
cmp
push
xchg
xchg
imul
adc
shrb
jno
mov
jns
sub
inc
jo
adc
ljmp
sbb
mov
or
jge
xchg
cmp
dec
outsb
lret
cmp
inc
mov
gs
les
push
adc
test
mov
pop
sbb
dec
fstp
mov
lret
enter
adc
sub
add
inc
mov
add
push
sbb
or
and
fists
add
inc
lock
ljmp
into
sub
and
scas
xchg
and
xchg
popa
in
stos
adc
mov
popa
repnz
ljmp
rorb
loope
mov
jno
packsswb
mov
mov
pop
pop
in
sti
in
add
sub
fcoml
or
lea
std
mov
ja
imul
jne
dec
xchg
add
mov
cmpsb
push
out
pop
lret
lock
and
sub
shlb
sub
loope
daa
xor
fmuls
pop
adc
xlat
push
sbb
inc
pop
outsb
popa
dec
inc
out
and
test
fistps
mov
xorb
int3
out
xorl
jno
imul
mov
shrb
in
stos
and
jecxz
sbb
imul
fisubrl
xchg
dec
dec
push
sub
idivl
test
add
and
mov
xor
in
out
std
sub
push
in
cmpsl
xchg
outsb
inc
loope
setne
rolb
jle
aaa
xor
icebp
or
push
sub
outsb
sbb
push
into
aaa
ret
jge
imul
pop
inc
push
xchg
out
inc
push
cmp
mov
dec
ds
and
lahf
shll
adc
lock
inc
ja
adc
repz
daa
mov
push
inc
fwait
or
rorl
roll
imul
pushf
or
mov
xor
mov
mov
aam
lahf
sub
sub
mov
pop
inc
in
mov
push
sub
pop
out
ret
xor
ss
add
xchg
cld
adc
cmpsl
sub
xchg
inc
mov
adc
lcall
rorl
inc
rolb
pop
rcll
mov
push
fs
adc
mov
lods
sahf
mov
adc
and
push
mov
adc
out
mov
cmp
dec
fiaddl
mov
adc
mov
dec
xor
lods
pop
leave
ret
pop
mov
mov
or
push
mov
push
mov
fimull
movsl
fldt
add
mov
popl
jno
fiaddl
shufps
sub
sbb
cltd
mov
mov
lcall
xchg
xchg
gs
sub
and
sbb
cld
inc
insl
adc
xor
fsubs
mov
add
dec
arpl
enter
sub
dec
aam
inc
add
bound
push
loopne
popf
or
xchg
and
inc
add
bound
movsl
loop
sarb
outsb
dec
fdivl
fsubr
icebp
aad
lods
mov
adc
mov
ljmp
xchg
adc
jp
rclb
outsl
addr16
pop
adc
test
mov
jbe
pop
in
test
insb
in
mov
test
bound
movb
push
jb
adc
ss
dec
mov
lcall
shll
mov
bound
scas
rorl
cmpsb
inc
insb
dec
bound
pop
je
xchg
inc
pusha
call
dec
les
enter
dec
sbb
pop
add
into
push
and
aam
push
outsb
sub
loope
or
arpl
cmpsb
mov
sub
xchg
inc
xor
imul
or
jbe
fimull
and
lods
dec
aas
fiaddl
pushf
xchg
push
in
xchg
adc
ds
push
pop
fildl
clc
lahf
push
adc
mov
repz
sbb
mov
sub
insl
daa
adc
add
pop
inc
shlb
bound
arpl
mov
mov
adc
pushf
in
dec
adc
lods
pop
adc
or
push
mov
and
sbb
stos
push
shll
xchg
inc
and
imul
push
xor
lods
sub
js
mov
xor
pushf
adc
test
dec
sub
movsb
inc
adc
imul
dec
inc
shll
popf
es
dec
sbb
ja
push
mov
xor
mov
mov
xchg
fsubrs
xchg
dec
mov
lods
mov
adc
or
in
pop
cmp
xor
lods
mov
cld
mov
mov
movsl
loope
scas
shlb
and
cwtl
xchg
insb
stos
pusha
pop
pop
xor
bound
inc
xchg
mov
add
or
and
dec
push
ljmp
ja
xchg
inc
mov
xchg
mov
dec
xor
outsb
xchg
inc
and
xor
cs
push
rcrl
jmp
scas
or
push
add
xchg
pusha
mov
mov
adc
fcoms
mov
adc
fs
movsb
mov
in
fs
push
mov
pop
adc
adc
pop
pop
mov
push
popf
xchg
xor
inc
xlat
add
push
sub
es
into
mov
xor
mov
cmp
mov
add
xchg
cmp
xlat
pop
in
and
xchg
push
ljmp
sub
adc
jp
pop
mov
dec
add
leave
ret
push
jmp
hlt
shlb
adc
mov
test
inc
cmp
adc
fs
add
or
fbld
pop
sbb
adc
jl
mov
or
dec
or
fistpl
mov
lds
jmp
cmp
test
dec
jp
push
in
in
pushf
fdivrs
and
push
xor
dec
aam
nop
add
scas
les
stos
push
fldcw
pop
insb
mov
mov
mov
das
jecxz
mov
xchg
inc
adc
dec
paddusw
icebp
adc
sbb
push
mov
setge
lcall
push
dec
ret
and
cmp
jo
out
cltd
fldln2
push
xchg
cmpsb
mov
insb
pop
inc
jmp
mov
nop
scas
or
cmpsb
divb
mov
sbb
adc
stos
aam
jo
adc
jns
pop
push
jo
sbb
dec
xchg
cli
lea
push
add
add
mov
push
fldt
fistl
inc
mov
mov
cmpsb
adc
lret
mov
lahf
mov
ljmp
sub
lods
test
je
and
inc
shr
enter
les
jbe
out
mov
and
pop
lcall
dec
jo
fcoms
or
sbb
inc
sub
es
dec
lods
sbb
scas
mov
pop
and
cmpsl
and
jne
fsubrl
test
jbe
lcall
xor
in
or
stos
aas
xor
or
enter
add
mov
adc
pop
das
mov
push
mov
gs
or
push
repnz
int3
ret
ja
sbb
addb
movsb
sub
mov
insb
xor
mov
xchg
inc
das
fisubl
mov
dec
and
cli
adc
rcr
push
dec
aad
scas
movsb
cmp
aam
aam
push
or
sub
sub
adc
jns
hlt
push
push
jmp
push
and
scas
mov
jl
popf
shll
push
jp
adcl
cltd
stc
mov
arpl
fwait
scas
test
sbb
mov
lret
test
dec
push
out
fs
dec
scas
xorb
arpl
loop
int3
daa
mov
and
shl
pop
and
mov
inc
mov
adc
movsb
mov
lret
mov
push
pusha
cmp
and
cmpsb
mov
sbb
pop
cmp
cmp
xchg
and
cltd
sub
out
dec
and
push
mov
push
jns
sub
ret
and
and
and
jmp
push
fsubs
ret
sbb
and
and
inc
mov
es
shll
pop
mov
movsb
xchg
or
rcrl
shlb
sbb
mov
push
popf
cld
pop
push
and
ret
fildll
xor
in
and
les
cmp
pop
cltd
cmp
mov
aad
je
jmp
fldcw
inc
adc
jmp
aam
push
cltd
and
out
hlt
xchg
mov
outsb
test
and
jo
inc
movsb
nop
or
rcl
stc
inc
xor
dec
inc
fmull
lods
pusha
adc
push
mov
leave
test
mov
gs
adcb
add
add
jmp
dec
push
and
cmp
mov
test
cmpsb
mov
pop
nop
xchg
je
inc
call
push
mov
and
out
inc
lahf
out
xlat
mov
stos
jbe
insb
mov
rol
jl
hlt
cltd
les
out
je
and
mov
push
std
jbe
mov
cmp
mov
inc
jne
into
add
insb
adc
adc
ja
or
sub
adc
rclb
aad
adc
leave
and
orb
fmuls
sub
inc
int
push
mov
adc
sbb
push
fwait
shlb
mov
cmp
pop
dec
add
dec
jge
or
fmuls
inc
insl
sub
rorb
imul
or
pop
cmpsl
test
or
adc
add
lods
pusha
popf
push
fldenv
aad
mov
push
dec
xchg
or
rcrl
mov
dec
pop
mov
js
scas
sarl
into
adcb
loopne
test
cmp
xor
sub
inc
sub
fbstp
lds
mov
add
popl
cmc
jns
fsub
sub
fnsave
jne
stc
into
xor
push
adc
ret
sarb
push
shl
mov
movsl
push
imul
jae
sbb
cltd
add
outsl
cld
push
aad
xor
std
cmpsb
fadds
and
mov
sbbl
pop
popa
inc
or
ret
shrb
nop
lods
ret
pop
outsl
mov
stos
fcmovbe
or
mov
mov
sbb
inc
mov
aaa
aam
fwait
jb
movsb
cmc
mov
dec
add
xor
shr
adc
shrl
adc
and
adc
stos
stos
or
cs
push
inc
rcrb
cli
mov
movsb
ds
frstor
xor
pop
shrl
pop
leave
xor
ja
testl
adc
pop
scas
imul
add
sub
xchg
nop
and
sbb
inc
xchg
rorb
dec
pop
add
popa
leave
push
test
ret
push
push
inc
and
in
stos
push
jns
push
jns
add
push
xchg
xchg
rclb
jp
dec
xor
sub
mov
jle
enter
testl
fucomip
repnz
and
ficompl
lea
cmpsl
imul
aam
rcll
lods
or
or
aad
adc
jno
in
push
pop
xchg
jmp
mov
stos
cmp
mov
mov
shl
inc
dec
push
sbb
push
lret
stc
nop
cmp
sbb
addb
adc
xchg
and
shlb
dec
jbe
pop
stc
and
mov
push
cltd
cmp
push
pop
mov
push
test
ljmp
fdivl
add
sub
add
xchg
xchg
mov
repnz
lcall
dec
rclb
test
add
jo
push
jae
jnp
ficoms
push
jge
icebp
out
lcall
movsl
or
movsl
add
xchg
sti
insl
outsl
testb
hlt
iret
jg
jae
add
pop
sar
mov
ror
mov
cs
mov
int
adc
inc
or
popa
cmp
pop
nop
inc
sbb
stos
std
mov
ret
push
and
aas
push
jo
les
mov
imul
dec
bound
cmp
shrl
push
sub
in
cmp
mov
hlt
push
test
xor
jbe
ljmp
jno
xchg
imul
movsb
pop
lods
adc
aaa
add
insb
orl
rcll
mov
cli
xor
add
dec
xchg
push
scas
in
lahf
cmc
mov
dec
mov
leave
jp
fimuls
sub
sub
loopne
inc
ljmp
test
stos
pop
jne
mov
add
nop
mov
aaa
mov
das
adcb
ljmp
mov
test
jle
clc
rolb
jnp
mov
hlt
sbb
pop
mov
cmc
leave
mov
adc
inc
inc
pushf
das
cmp
jmp
mov
mov
sbb
lcall
jg
data16
and
pushf
jmp
pushl
aam
rcr
cmp
outsb
aad
flds
data16
push
pop
push
outsb
cmp
rcr
xchg
sarl
pop
inc
xchg
pop
sub
add
ds
sub
inc
mov
sahf
dec
xor
sbb
and
pushl
add
lods
inc
pop
loope
push
lea
add
lret
popf
mov
iret
cmp
gs
or
imul
push
cmp
xchg
sahf
jb
test
dec
movsb
mov
xlat
ret
into
or
dec
and
popa
scas
or
xchg
adc
ljmp
pop
mov
in
mov
sub
push
or
sub
notl
mov
aam
clc
fcoml
inc
cmc
je
inc
add
aad
bound
push
pusha
dec
sub
data16
dec
movsb
fists
data16
fimull
sub
incl
and
in
fistpll
ljmp
xor
dec
jl
scas
and
pushf
sbb
mov
lahf
mov
inc
notb
mov
insl
mov
push
jns
leave
repnz
filds
xor
mov
hlt
sarb
ljmp
inc
pop
mov
cmp
xor
xchg
push
pop
dec
arpl
add
pop
scas
adc
lcall
mov
popa
and
adc
in
add
xchg
mov
sub
fcmovb
outsb
pushf
xchg
xchg
ficompl
cmp
popa
mov
stos
popa
dec
aam
jmp
push
lret
lods
pop
sbb
cmp
xor
and
and
insl
lods
mov
adc
inc
mov
aas
dec
inc
sbb
out
push
adc
xor
mov
dec
inc
pop
add
int
and
inc
sbb
outsb
popf
xchg
stos
mov
and
pop
sbb
mov
leave
cmp
push
int3
push
into
movsl
cmp
add
pop
pop
lods
dec
adc
lret
int
lds
popf
lcall
shll
imul
dec
push
adc
gs
mov
rcl
mov
xchg
push
xor
xchg
push
inc
addr16
mov
mov
movsb
xor
inc
add
sbb
popf
out
or
fs
inc
call
push
aam
mov
pusha
push
sub
daa
cmc
sbb
sbb
push
or
pop
scas
mov
pop
mov
in
push
adc
jmp
rcr
sarb
clc
test
ficoms
cmpsl
adc
lret
lods
clc
ss
xchg
add
dec
daa
pusha
cmp
les
shrb
push
ljmp
fcomi
mov
in
shll
inc
fistps
aam
cmp
pop
inc
nop
sarb
mov
lahf
jnp
sbb
les
or
ds
out
cmp
mov
add
out
mov
stos
fisttpll
dec
xchg
inc
inc
pop
mov
outsl
and
adc
aam
int3
pavgw
xchg
jecxz
jmp
lods
xor
fstpl
repnz
or
dec
mov
iret
adc
cmp
stc
add
loopne
les
xchg
push
push
enter
ds
sub
jp
int3
lods
mov
sarl
jmp
push
int
ds
stos
xchg
inc
dec
jne
inc
dec
nop
add
insb
scas
xchg
xor
outsb
repnz
lock
sbb
adc
sahf
out
adc
sbbb
clc
adc
addr16
push
rorb
sbb
inc
or
ja
add
fsubp
mov
test
adc
inc
int
sbb
ljmp
adc
popf
xchg
or
push
sahf
and
cwtl
iret
fwait
ret
fwait
lea
ljmp
adc
push
jb
andl
addr16
jp
in
addl
lcall
sbb
rcrb
das
sub
mov
inc
loopne
xlat
adc
fisubrs
dec
cmp
arpl
andl
cwtl
jns
dec
int3
out
sbb
push
insl
adc
xchg
pop
push
rcll
sub
ror
mov
sbb
ljmpw
les
jge
mov
cmp
cmpsl
ds
mov
dec
jmp
push
test
xchg
xor
rcrl
ja
push
adc
or
xlat
repnz
fcmovne
push
pop
adc
jp
cmc
push
add
pop
loopne
or
inc
jnp
xchg
out
jl
or
xchg
and
dec
mov
jbe
push
cmp
bound
fwait
dec
loopne
outsb
repz
data16
mov
pop
ss
mov
and
lock
hlt
lods
fsubrs
aas
fxtract
gs
sar
int
hlt
inc
jmp
mov
push
fcomps
mov
leave
out
clc
mov
xor
mov
and
setae
and
ja
jns
xchg
sub
arpl
addr16
test
mov
xchg
call
sub
add
dec
lcall
jge
les
lcall
sub
and
and
pop
xchg
sub
jne
cmpsb
outsb
push
gs
dec
sbbb
subb
jg
pop
inc
loopne
daa
mov
cmp
mov
xchg
mov
dec
xchg
mov
add
in
fiadds
cs
mov
arpl
inc
and
sahf
mov
bound
aad
je
test
nop
add
mov
lods
data16
xchg
and
cmp
mov
rcll
jle
arpl
arpl
enter
cltd
mov
hlt
pop
lods
loopne
push
push
ja
mov
mov
xor
sub
enter
xor
xchg
mov
hlt
and
out
mov
aas
mov
dec
test
ret
imul
rorb
fucomip
fstps
call
push
mov
aaa
mov
cli
dec
mov
cwtl
and
bound
push
mov
push
ja
fsubp
cmp
xor
jb
dec
sbb
sbb
pop
repz
cli
sbb
or
ljmp
cmp
cltd
repnz
pushf
push
sti
lret
mov
and
fcompl
mov
adc
fimuls
jae
xchg
jecxz
dec
mov
mov
dec
xchg
cmc
add
ja
mov
cli
dec
add
mov
loope
jl
inc
jecxz
movsb
add
and
mov
rcrl
jecxz
stos
pop
inc
icebp
movsb
pop
dec
test
hlt
or
cld
iret
pop
cmpsl
ja
movsl
add
adc
mov
leave
or
xor
enter
and
pop
inc
xchg
fbld
adc
inc
push
cmp
call
push
inc
cmp
data16
mov
shlb
sub
cmp
std
push
fiadds
push
or
push
inc
add
mov
and
dec
pushf
jge
sbb
sbb
les
in
mov
in
roll
lret
lea
jecxz
and
mov
push
mov
mov
cmpl
lods
adc
repnz
movsb
and
adc
lahf
mov
cld
pushf
and
loopne
adc
bound
movsb
and
cmp
lahf
lods
loopne
sub
add
mov
enter
mov
lahf
int
cmp
inc
add
xor
roll
or
rclb
push
and
cmp
stos
rorl
cltd
and
pop
mov
arpl
dec
cmpsb
push
inc
test
imull
lea
mov
inc
insl
insl
push
out
push
dec
fdiv
sub
cmp
cmc
jp
loope
inc
push
or
xchg
adc
xchg
aad
sub
or
out
dec
je
dec
fimuls
test
sub
leave
pop
cmp
xchg
jb
jb
scas
outsl
int3
add
aas
and
or
js
pop
cld
lock
fcmovbe
mov
sbb
adc
mov
mov
inc
lcall
gs
test
mov
xor
and
clc
inc
jg
and
mov
scas
jecxz
stos
xchg
push
loop
mov
inc
mov
fimull
notb
movsb
iret
movsb
and
lds
in
push
pop
pop
sub
movsl
mov
std
pusha
pop
dec
in
popf
xchg
and
cli
xchg
dec
ror
sub
and
in
test
sbb
ds
pop
and
sub
adc
mov
popf
add
and
mov
push
sahf
andl
cmpsl
xchg
test
mov
mov
lods
mov
mov
jne
sbb
imul
movsl
cwtl
and
test
push
stc
or
sbb
push
xor
dec
lret
sti
je
iret
push
inc
sbb
aad
pop
xchg
adcb
push
ret
shrl
dec
cmc
inc
je
shll
or
mov
ja
inc
cltd
dec
loop
xor
and
xchg
xchg
sub
lahf
dec
mov
xchg
inc
mov
dec
insb
pop
rol
arpl
or
and
mov
mov
push
or
lret
test
and
dec
jae
jp
pushf
mov
mov
dec
mov
dec
ss
ljmp
push
movsb
mov
std
js
insb
cmpsb
lock
cltd
shrl
jp
pop
cltd
inc
hlt
lods
xor
hlt
and
and
inc
cmp
mov
and
sub
loope
outsb
mov
bound
aaa
xor
jle
push
dec
or
lea
outsb
loopne
insl
std
add
fstpt
lret
push
in
xchg
es
jp
xchg
scas
into
loopne
insl
popa
movsb
shrl
nop
inc
sbb
mov
inc
xor
mov
daa
loope
cmpsb
xchg
push
jmp
mov
xchg
sub
fcomi
push
push
dec
testb
ror
adc
mov
add
sub
xchg
pop
sarb
push
mov
push
sti
bound
gs
jbe
sub
push
inc
mov
bound
lcall
mov
out
adc
pusha
jecxz
rolb
jae
adc
out
ljmp
js
iret
mov
push
gs
and
cmp
stos
fisttpl
sub
jle
iret
das
xor
push
je
daa
inc
pop
roll
loopne
xor
stc
nop
cltd
push
push
test
clc
inc
mov
imul
loop
data16
mov
stc
add
fcoms
cltd
jb
mov
cmp
lds
gs
mov
div
std
pop
inc
nop
in
or
mov
sub
mov
aad
sub
xchg
jns
xchg
test
scas
jle
push
repz
jp
push
and
push
stos
cltd
fsubs
or
stc
xchg
push
repnz
testl
cmpsb
xchg
jge
cs
inc
outsb
test
jmp
fcompp
xchg
orb
lods
pop
jecxz
bound
inc
pop
xor
or
add
xor
lods
pop
lahf
cmc
xor
lea
das
mov
xchg
lds
jmp
push
pop
js
stos
add
cmp
insl
xchg
lret
decb
call
es
xor
and
fwait
jmp
ss
inc
jnp
dec
inc
mov
jl
mov
mov
or
shrl
and
mov
sub
nop
lock
cmp
lock
shll
add
pop
movsb
aam
xor
pop
into
mov
sub
fs
mov
dec
push
out
mov
sbb
insl
or
jl
sub
jno
call
loope
add
mov
xchg
sbb
sti
ret
xorb
orl
ret
adc
stos
adc
and
data16
push
sbb
xchg
mov
std
jmp
xchg
imul
mov
rcrb
mov
mov
jno
push
and
sbb
les
dec
push
insl
inc
and
rclb
mov
mov
mov
pop
dec
mov
cltd
ss
ds
sbb
pusha
clc
jmp
pop
lret
add
popf
and
data16
pushf
sbb
shr
adc
ljmp
pop
rcrb
dec
adc
sub
mov
xchg
pop
popf
and
aad
scas
and
push
add
ret
jne
lea
push
lret
fldenv
inc
sub
mov
jmp
and
enter
popf
rol
sbb
lret
fiadds
stos
loopne
push
aam
xchg
mov
mov
push
xor
mov
pushf
outsl
nop
stos
popa
mov
movsl
ja
sbb
test
or
sub
pop
inc
adc
ds
sub
sbb
hlt
cltd
scas
sti
xor
push
pop
cmc
out
flds
inc
push
sub
ret
roll
sub
ljmp
xchg
push
das
adc
stos
fiaddl
inc
sbb
dec
push
push
xor
add
clc
pop
cltd
or
push
mov
pop
std
mov
push
xor
pop
int
call
sub
sbb
stc
pop
rcll
stos
pop
adc
test
push
jle
push
stc
pop
movsb
xchg
cmp
test
mov
out
bound
loop
add
xor
fucom
sahf
push
insl
mov
cmc
in
hlt
add
sub
loope
mov
dec
mov
dec
push
inc
push
lods
mov
sub
jno
pop
shrb
pop
dec
test
xor
paddusb
stos
fstcw
out
dec
cmp
sarl
adc
mov
hlt
repz
add
loopne
mov
mov
dec
stos
mov
mov
pop
mov
in
xor
scas
cltd
xchg
add
enter
xchg
adc
mov
hlt
jb
or
pop
jnp
sbb
jmp
cltd
shrl
loope
clc
clc
nop
cmp
scas
cmc
loopne
jns
lods
movsl
push
repz
jb
pop
stc
push
ds
pop
lret
jp
lea
in
cmp
mov
cmp
aam
mov
test
and
scas
xlat
dec
inc
jp
out
or
ljmp
push
jle
xchg
popf
mov
xor
incl
pop
push
dec
imul
outsl
and
jae
mov
add
ucomiss
sbb
test
repnz
mov
jg
add
xorb
shlb
mov
mov
mov
cltd
scas
ja
and
stos
in
pop
movsl
push
and
lret
cwtl
or
cltd
xchg
sub
dec
xor
mov
sub
leave
movsb
mov
push
add
sub
fldt
and
add
repz
scas
mov
imul
lods
inc
mov
adc
fcoml
mov
cmpsl
mov
xchg
push
xor
mov
pop
cs
push
xor
mov
rcrl
push
int
or
loopne
xchg
pusha
ret
and
repz
cmc
or
jb
mov
fs
and
adc
out
push
add
jge
xor
xor
movsl
jne
lcall
jmp
roll
clc
es
lds
push
mov
pop
cmpsl
push
and
xor
cmpsl
or
sub
stc
push
pop
and
jb
in
adcl
xor
loope
popa
nop
arpl
push
sub
or
add
jge
and
push
pop
orb
sub
xor
data16
xchg
arpl
jecxz
gs
test
insl
cmpsb
adc
cwtd
sub
xchg
dec
xor
scas
push
inc
or
fdivl
xchg
aam
xchg
inc
xchg
shlb
jne
jbe
ljmp
pop
xchg
mov
pop
sbb
out
gs
pop
gs
pop
inc
or
fiadds
shl
daa
orb
xor
push
ljmp
fdivrs
outsb
lret
shlb
sbbb
jmp
mov
pop
cmpsl
cmpsl
repnz
test
lea
gs
aaa
adc
inc
lods
and
and
int3
mov
lods
sub
test
pop
push
lcall
rorb
jmp
jmp
push
aam
loopne
jno
xchg
dec
jl
or
mov
add
cwtl
rcrl
loop
lahf
and
aam
in
add
js
daa
repnz
and
mov
sbb
fwait
sti
das
push
decl
cmp
rorl
cmp
push
rcll
call
in
dec
or
push
push
xchg
daa
mov
mov
insb
jne
aam
xchg
in
pop
out
xor
dec
xchg
mov
enter
shrb
scas
cmp
xchg
mov
je
adc
sub
inc
adc
dec
mov
es
mov
add
rcl
cmp
push
jl
push
and
pop
jmp
dec
adc
imull
jae
lret
sbb
jnp
lods
iret
xchg
or
icebp
and
outsb
sub
movsl
jb
lods
fs
mov
xlat
mov
inc
push
fs
cmp
mov
dec
rol
xchg
sbbl
out
daa
push
stos
pop
lret
out
clc
sbb
and
sub
mov
mov
popf
notb
jo
lea
push
xchg
add
in
hlt
int
sarl
cwtl
push
lret
das
adc
outsb
and
mov
pop
push
imul
sbb
andl
pop
cmp
push
pop
outsl
adc
aas
fildll
nop
cltd
push
leave
lcall
mov
sub
pop
lods
cmpsb
movups
mov
mov
scas
adc
jne
mov
push
inc
and
or
xchg
sarb
push
or
aad
mov
add
inc
mov
outsb
push
jg
or
and
loop
daa
and
xor
adcl
jg
sub
inc
jmp
add
stos
pusha
adc
add
je
push
push
fldt
lds
push
cmpsl
es
inc
sub
inc
adc
xor
push
sub
push
sbb
nop
push
dec
pop
sti
outsb
jne
jl
arpl
sbb
idivl
lret
add
mov
mov
sahf
xor
pop
cmp
jo
inc
outsl
push
ja
sbb
pop
mov
mov
xchg
test
jg
inc
lret
xor
mov
movsl
leave
scas
xorl
and
scas
sub
fwait
les
outsl
sbb
icebp
jmp
push
ret
mov
pushf
daa
cwtl
insl
inc
cmp
mov
and
mov
int
testl
clc
push
jno
sbb
fucomp
addr16
pop
xor
pusha
js
add
leave
mov
fldenv
inc
shrb
add
mulps
int
inc
dec
add
movb
cmc
mov
and
dec
jne
xchg
push
adc
and
inc
xlat
out
das
inc
xor
rorb
mov
dec
mov
mov
mov
hlt
andl
lret
adc
cltd
xor
inc
popa
push
int3
xchg
test
lods
cld
movsl
mov
data16
inc
daa
push
sti
lea
jle
adc
ljmp
dec
and
fdivrs
dec
pop
inc
jo
xlat
int3
mov
xchg
inc
iret
inc
mov
test
je
pusha
stc
arpl
sub
movsb
fmul
xor
loop
ljmp
push
mov
data16
pop
rcll
jmp
mov
jnp
mov
insb
sub
dec
mov
cltd
ja
jns
test
out
xchg
xor
insl
sub
sti
dec
movsl
add
shr
and
scas
enter
scas
mov
sub
fistps
test
sbbl
mov
mov
dec
adc
xor
enter
scas
orl
repnz
mov
bound
jmp
push
add
mov
int3
or
sub
cmpsb
test
adc
leave
and
pop
mov
rolb
mov
je
xor
mov
subl
mov
aad
inc
shll
mov
imul
ljmp
ret
insb
mov
inc
cli
cmp
fists
or
lret
sub
das
dec
scas
or
fldt
sbb
nop
ficomps
or
push
sub
adc
in
mov
fildll
mov
mov
shll
cld
add
add
adc
enter
and
xchg
mov
pop
imul
arpl
test
jl
in
mov
lahf
push
mov
jo
jle
or
mul
xor
push
cmpsl
xlat
cmp
out
int3
imul
div
push
dec
jmp
sbb
cmpl
and
or
mov
js
adc
dec
adc
mov
sbb
in
add
rcrb
mov
insb
sub
jmp
mov
jae
int
jbe
cld
out
mov
mov
mov
or
and
stos
in
fadds
or
stos
sbb
push
subb
cmc
inc
and
jbe
pusha
hlt
adc
repnz
ljmp
rcrb
sahf
pop
push
pop
inc
or
dec
lcall
in
jecxz
psubb
mov
dec
jge
mov
cmp
std
mov
sub
popa
and
mov
adc
mov
sbb
and
or
adc
imul
adc
cli
mov
mov
cmp
sahf
out
pop
add
popf
fimuls
es
push
mov
stos
xor
fistps
fcoms
rorb
sbb
fxch
jmp
call
or
push
push
cli
cwtl
jnp
jmp
andl
push
lds
sbb
mov
fdivp
mov
mov
and
sahf
push
sbb
fisttpll
add
push
mov
adc
pop
xor
stos
mov
jne
and
cmpsb
mov
test
push
pop
testb
stos
sub
or
cld
jo
cmp
repnz
int3
imul
testl
les
mov
sub
mov
xchg
insl
ljmp
mov
stc
inc
ss
xor
xchg
jno
jp
sub
pop
sub
dec
xor
lock
rcll
and
mov
clc
sbb
pop
xchg
scas
push
and
imul
push
mov
jo
ret
lds
fisubs
mov
fwait
ss
iret
or
mov
fisttps
stos
hlt
mov
insb
mov
xchg
push
jmp
sub
or
decl
in
hlt
imul
jge
fsqrt
adc
insb
jmp
out
nop
in
out
push
adc
repz
scas
push
out
sub
scas
add
lea
adc
push
mov
in
movsb
mov
pop
movsl
pusha
sarb
adc
rcrb
jnp
cmp
mov
mov
cmp
pop
gs
pusha
lods
xchg
icebp
mov
fisubs
jbe
pop
and
in
push
xor
pop
call
int
inc
leave
idivl
adc
cmp
mov
cmp
sahf
lahf
mov
cs
jmp
ds
or
aad
dec
and
pop
adc
mov
adc
enter
xor
adc
popa
arpl
sub
jno
sbb
shlb
inc
pop
pop
in
mov
movsl
ds
popa
pop
je
or
test
mov
call
mov
xchg
stos
cmp
pop
imul
adc
cmp
jae
jbe
imul
stos
sub
fldl
aam
dec
and
pop
and
pop
fisttps
jmp
xchg
pop
in
test
pop
inc
xchg
sub
fisubs
dec
inc
or
dec
mov
jecxz
int3
xchg
adc
or
rcrl
mov
das
movsb
mov
push
mov
out
mov
lds
pop
jle
mov
test
bound
stos
popa
ss
xchg
sbb
mov
movsl
lahf
loopne
je
aam
dec
or
or
movsb
popa
daa
sbb
scas
mov
das
lods
movl
aad
lahf
xchg
mov
jnp
clc
stos
sub
dec
pop
xor
lds
push
insb
cs
lock
mov
push
cmpsb
lret
mov
mov
je
ljmp
js
push
mov
push
inc
dec
xchg
mov
dec
daa
xchg
lods
mov
cld
add
push
xor
push
push
cwtl
das
mov
jge
jnp
mov
ds
cmpsb
sar
push
iret
mov
divl
inc
cmp
dec
jl
mov
addb
nop
xchg
push
shl
leave
cwtl
mov
lods
test
sbb
jnp
loopne
fsub
mov
arpl
cmp
sti
pop
outsl
ret
jg
sbb
fldenv
stos
mov
sbb
cmp
inc
adc
mov
cmp
mov
mov
dec
rclb
insb
mov
mov
rcrb
std
dec
dec
shl
scas
imul
popa
negl
xlat
inc
xchg
int3
or
add
push
sbb
aas
jl
daa
sbb
or
pusha
das
push
lcall
das
cwtl
inc
fwait
popf
or
push
call
rorb
aas
sub
inc
inc
mov
stos
or
adc
and
jnp
inc
mov
add
or
lahf
fbld
jne
mov
adc
cmp
lcall
adc
jmp
out
xchg
shr
jne
xchg
lret
movsb
scas
out
test
add
nop
sub
leave
and
jae
push
mov
repnz
cmp
mov
mov
movsb
dec
or
dec
mov
and
pop
mov
mov
jge
filds
mov
idivl
jge
lret
sub
fcoml
push
jmp
mov
dec
fiaddl
scas
jg
push
push
adc
aad
mov
repz
push
mov
pushf
rep
push
adc
push
mov
jbe
jecxz
lock
imulb
sub
push
jp
addr16
xchg
add
or
pop
pop
cltd
ljmp
ffreep
jmp
and
fs
insl
cmp
cmp
sbb
lahf
and
inc
iret
xor
leave
push
test
mov
shll
or
mov
mov
mov
xchg
mov
adcb
sub
aam
adc
add
mov
push
pop
sahf
add
or
scas
lret
sti
dec
outsb
push
sub
adc
inc
push
test
lret
les
js
lcall
test
xor
sarb
fimuls
insb
add
cmpsl
test
xchg
fs
stos
sub
dec
fisttpl
sbb
mov
aas
lret
inc
jge
pop
jecxz
movsb
push
scas
es
jg
insl
pushl
test
mov
sub
inc
in
rclb
and
in
iret
scas
jbe
aad
or
negb
mov
inc
push
fs
or
lock
js
xor
insb
ret
jae
mov
push
ror
idivl
stos
cmp
lock
xchg
push
movl
and
sbb
jge
mov
pop
loop
lahf
repnz
cmp
ljmp
xor
fwait
cltd
leave
or
lea
fdivrl
psubw
inc
and
pop
adc
or
adc
mov
mov
xor
insb
push
push
sahf
sbb
leave
sbb
cmp
sbb
popa
pop
lret
fidivl
adc
rcrl
push
push
mov
lock
adc
mov
inc
cs
inc
mov
rorb
call
mov
push
dec
cmp
pop
mov
cmpsl
testl
andl
pusha
add
or
dec
cltd
xorb
call
inc
adc
or
negb
mov
inc
mov
sub
bound
ja
mov
sub
mov
xchg
mov
or
pop
jmp
jp
or
add
push
test
shll
xor
es
dec
outsl
xchg
lds
sub
inc
gs
imul
cmp
inc
cltd
loopne
stos
sbb
push
aas
aaa
jg
push
roll
gs
inc
data16
or
lret
mov
fsubrl
inc
pop
pop
imul
movd
and
sti
das
nop
jmp
hlt
inc
out
clc
push
xchg
push
test
sbb
cmp
adc
ljmp
sub
pop
pop
mov
int3
inc
cmp
sbb
inc
std
je
xor
fcoml
push
cmpsl
out
or
leave
adc
lret
xor
das
adc
ss
out
and
sbb
xor
stos
xchg
push
loop
jne
sub
jne
out
xchg
mov
scas
mov
jmp
out
or
je
add
push
out
lcall
test
insb
pop
push
mov
cmp
cli
pusha
jmp
jb
mov
xor
outsl
in
pop
data16
add
xor
mov
in
push
push
das
adc
sbb
cmc
mov
mov
adc
mov
jmp
or
pop
inc
les
lahf
data16
xchg
cmpsb
inc
adc
mov
inc
or
and
scas
mov
aas
arpl
leave
lds
push
packuswb
push
push
ret
adc
ss
push
inc
or
add
int3
or
fistpl
pop
mov
xchg
mov
pop
jmp
cld
int3
cltd
bound
xchg
inc
mov
pop
cmp
mov
cld
subl
mov
sbb
mov
xchg
inc
jnp
cmp
mov
loope
and
push
idiv
jo
stc
add
push
dec
jbe
add
iret
or
mov
pop
int3
mov
ror
jge
cmpsl
mov
test
jle
pop
das
push
and
add
movsb
pop
ret
jg
mov
insl
scas
aaa
test
loop
xor
jne
xchg
cmp
sbb
dec
or
and
enter
fistpll
jno
cmpsl
es
add
and
and
xchg
push
pop
lahf
inc
inc
or
pop
or
insb
js
push
cmpsl
and
xchg
adc
dec
or
jb
mov
adc
mov
ficoms
cwtl
sbb
sbb
dec
cmp
in
push
xchg
and
mov
aam
jo
insb
fdivr
inc
je
lock
inc
repz
push
push
push
xor
popl
cmc
repnz
inc
pop
and
pop
add
xchg
in
cmp
icebp
shll
shlb
bound
je
rolb
cmp
adc
jae
fldl
xlat
inc
dec
subb
movsl
andl
add
loopne
dec
cmp
pop
mov
push
mov
rcll
xor
add
or
mov
outsl
mov
bound
adc
movsb
in
cmpsl
sub
xor
xchg
ret
mov
mov
jns
sub
inc
xlat
xchg
cmp
pop
stos
pusha
ss
mov
loopne
cld
cltd
rcll
jmp
loopne
outsb
push
push
jns
lcall
popf
mov
enter
jb
mov
cmc
loopne
sub
jg
inc
add
popf
shlb
nop
dec
divb
mov
test
scas
mov
imul
mov
bound
mov
jo
inc
dec
loopne
adc
ja
adc
orl
xor
cmpsl
xchg
lds
adc
ficompl
in
dec
das
or
inc
lds
sbb
xor
imul
loope
mov
ret
push
test
nop
mov
mov
mov
push
push
scas
scas
push
inc
mov
xor
mov
mov
sub
mov
ret
xchg
es
xor
or
shlb
leave
test
repz
lods
pop
aad
aad
mov
push
outsb
pop
movsb
fcomps
mov
xchg
push
cld
hlt
fdiv
xchg
popf
testb
sbb
and
add
pop
roll
imul
mov
pop
mul
ret
adc
cmpsl
push
mov
pop
lret
xchg
mov
pop
jmp
outsb
adc
push
jecxz
dec
and
jl
cmp
nop
hlt
jge
dec
xchg
inc
xor
push
push
push
pop
pop
mov
jne
pop
shll
mov
cld
arpl
push
cmp
inc
inc
adc
lahf
insb
lahf
sub
mov
pop
mov
jge
cmp
sub
lods
fdivr
outsb
push
into
frstor
mull
pusha
dec
pop
hlt
addr16
push
mov
mov
push
adc
ret
adc
or
in
pushf
inc
or
cmc
xlat
pop
sub
inc
nop
mov
xlat
loop
roll
and
inc
cli
mov
inc
add
popw
sahf
sbb
lret
xor
sub
push
test
lods
mov
imul
inc
nop
mov
lcall
jae
xchg
cmpsb
jmp
fnsave
xor
adc
ror
stc
das
sahf
pop
movsb
xlat
add
pusha
es
into
cwtl
mov
and
and
testl
rolb
mov
fiadds
push
ljmp
cmc
sub
adc
popa
repz
sbb
mov
or
loope
pcmpgtd
inc
jl
dec
push
xchg
mov
xchg
test
ror
bound
movsl
inc
rdpmc
xchg
xorb
insb
les
bound
and
xor
push
or
and
mov
mov
ret
ja
unpcklps
bound
push
rclb
xorb
xor
jle
add
sub
sbb
lret
pop
inc
pushf
repnz
out
ds
sub
inc
dec
add
inc
adc
mov
adc
out
fwait
dec
mov
pop
lock
test
adc
mov
add
xlat
sub
std
cmpsl
mov
dec
cmp
xor
push
dec
pop
pop
pop
arpl
out
movsl
nop
xor
scas
sub
xlat
std
xorb
bound
add
pusha
fadd
sub
dec
stos
cmp
xlat
imul
rorl
sub
pushf
adc
das
testb
leave
dec
or
jmp
inc
je
mov
jmp
mov
mov
decb
aam
loopne
and
insb
mov
push
mov
jg
ds
mov
aas
pusha
sub
inc
and
rol
mov
sub
stos
dec
sbb
imul
mov
sub
popf
scas
shll
sbb
push
lret
dec
mov
cmc
mul
lahf
pop
call
push
mov
or
or
roll
add
stos
and
sbbl
or
mov
addb
push
cld
xor
pop
notb
mov
jne
notb
xchg
inc
cmp
lret
push
cmp
fs
insb
mov
fwait
enter
add
pusha
lock
jo
inc
pop
rcrl
repnz
mov
andl
dec
roll
mov
jl
cs
cmp
mov
mov
or
xor
loopne
out
mov
dec
and
and
inc
mov
dec
jg
movsb
ds
cmc
mov
mov
or
hlt
sbb
sahf
outsl
nop
scas
test
lods
std
and
lea
in
sub
mov
jp,pt
dec
push
sti
xchg
test
out
loopne
xor
lahf
add
or
adc
test
sub
sub
or
mov
fstpl
loop
rclb
xor
and
add
lea
add
pushf
sub
mov
mov
test
mov
sbb
xchg
ss
mov
int3
ret
pop
call
add
nop
xor
push
inc
mov
shlb
sub
xchg
sub
xor
or
and
and
bound
push
push
and
push
push
inc
mov
cld
mov
inc
loop
xor
lahf
rcrb
sbb
loope
pop
mov
xchg
fadds
cmc
push
and
inc
xor
repnz
add
jge
push
dec
push
adc
jae
lea
repnz
jb
mov
pop
add
push
pop
mov
or
sub
hlt
inc
clc
and
adcb
sbb
outsb
inc
add
pop
cmp
pop
cmp
imul
add
mov
and
roll
inc
pop
xchg
add
mov
and
mov
push
mov
pop
or
mov
inc
test
sub
adc
and
and
inc
sbb
xchg
ret
mov
inc
mov
pop
out
lock
xchg
fldt
dec
add
shlb
loope
adc
cmpsl
mov
je
sub
sbb
call
mov
mov
or
and
push
pop
cld
sbb
push
imul
imul
call
push
dec
xlat
aas
xchg
inc
add
pop
adc
push
adc
rolb
movsb
pop
xchg
adc
icebp
jp
sub
dec
pushf
test
add
test
test
data16
mov
adc
testb
dec
nop
int
add
push
push
lods
cmpsl
addr16
ljmp
push
jg
cli
or
dec
push
out
jge
addr16
dec
fbstp
unpckhps
lret
test
add
cltd
or
add
jmp
xor
mov
pop
adc
and
pop
ja
insb
sti
dec
arpl
ret
or
test
push
pop
add
sub
repz
loope
sarl
pop
pusha
lds
aaa
scas
lods
lods
andb
jg
xor
sub
into
or
mov
dec
mov
cmpsl
pop
test
push
inc
lds
mov
jge
imul
mov
nop
push
inc
push
cs
nop
mov
mov
pop
out
subl
popa
andl
cmp
pop
lock
xor
test
mov
mov
add
mov
ret
rorl
push
ss
test
decl
and
jb
adc
inc
mov
out
shr
xor
lea
rolb
sbb
mov
push
xlat
sbb
testb
mov
dec
loopne
loop
cmp
inc
jl
sub
cli
outsl
fst
jmp
scas
test
xchg
aad
push
or
rcll
dec
pop
popa
negl
xchg
ss
ret
jmp
fldt
dec
add
std
int3
and
in
lock
add
loop
sbb
jbe
inc
dec
mov
idivl
xlat
jle
lock
jle
cmp
inc
clc
jne
pusha
scas
cmp
loop
xchg
clc
push
pop
inc
imull
loope
xor
sub
inc
incb
mov
sbb
push
cmp
addb
int
or
ss
fimuls
sub
dec
add
lds
sbb
sub
rep
addb
mov
xorl
adc
push
icebp
sbb
mov
mov
loop
or
xor
in
pushf
add
push
xchg
sbb
mov
xorl
decl
push
add
daa
shlb
sub
mov
sbb
fs
fnstenv
ljmp
mov
push
in
hlt
subl
andl
sti
mov
adc
clc
or
loop
inc
push
pop
in
adc
ficoms
add
sub
dec
test
inc
lret
in
pop
lcall
in
lcall
jmp
ret
xchg
ja
ret
loope
subl
movsl
std
adc
add
sti
pop
cltd
dec
repnz
push
fdivp
xor
jne
cwtl
push
lcall
call
xlat
cs
and
mov
jne
js
adc
arpl
loopne
pop
scas
adc
and
shll
jo
int
fsub
fwait
inc
scas
pop
or
repnz
jnp
dec
ja
or
dec
xlat
add
inc
mov
pop
push
cwtl
add
add
ffree
jbe
int3
enter
addl
dec
fdivrs
xlat
dec
fs
sub
das
mov
rorl
dec
cld
dec
gs
pop
gs
push
daa
inc
out
movsb
and
adc
dec
dec
aad
jnp
inc
adc
cmpsb
add
insl
cld
fwait
push
jne
cmp
push
mov
shl
sub
rcl
sbb
add
adc
adc
adcl
in
xchg
xor
imul
aam
jp
sub
xchg
inc
setle
pop
xchg
jl
lods
xchg
mov
adc
sbbb
andl
inc
push
lods
and
es
leave
cwtl
mov
incb
stc
cwtl
xor
sub
mov
adc
sbb
std
mov
pusha
cmpsb
push
pop
push
in
push
or
pop
stos
scas
pop
aad
fistpl
dec
and
mov
jge
pop
mov
out
movsb
or
sub
xchg
cwtl
jo
inc
and
mov
jg
add
xor
add
push
adc
xor
or
stos
pop
push
shlb
add
add
add
xor
loope
adc
add
aaa
jns
int
mov
pop
mov
lods
mov
sub
rolb
sub
pop
pop
mov
and
inc
add
outsb
cld
adc
inc
push
add
jge
pop
or
sbb
test
mov
stc
lods
mov
unpcklps
jno
sub
test
push
dec
mov
mov
movsl
subb
push
in
dec
or
into
mov
add
rcrl
dec
inc
pop
add
enter
dec
mov
xchg
dec
and
inc
push
shl
sbb
push
pop
adc
cmc
dec
insl
hlt
mov
and
shlb
adc
das
cmp
rolb
and
call
mov
and
and
add
mov
bound
mov
outsl
in
dec
stos
loopne
or
xchg
decl
mov
scas
aam
fiadds
adc
and
pushf
imul
or
lret
or
lock
sub
mov
int
inc
push
icebp
push
add
push
add
insb
push
inc
fdivs
and
add
or
push
dec
xlat
xchg
inc
fmull
push
test
xchg
rol
aas
test
push
push
inc
outsl
pop
cmpsb
pop
mov
mov
sbb
sbb
inc
je
les
jmp
push
fs
and
and
outsl
adc
pop
and
lret
sub
loop
out
push
outsl
sub
cmp
cld
inc
mov
cmp
ljmp
int
int
test
fs
xchg
out
cmp
cli
inc
loopne
adc
sub
mov
mov
xor
inc
lds
lock
inc
lods
test
dec
daa
push
icebp
inc
testl
inc
mov
and
mov
add
ret
aas
sbb
or
das
es
pop
dec
addr16
and
xor
jl
push
leave
cmp
fistpl
push
stos
jp
fcoms
outsl
sbb
jl
lods
test
pop
adc
inc
fwait
inc
dec
mov
jp
or
jo
loopne
test
cmp
fstpl
and
leave
push
push
addl
test
mov
insb
fldenv
std
mov
arpl
rclb
scas
arpl
fs
ficomps
pop
jecxz
cltd
sbb
inc
pop
add
mov
xor
push
sbb
sbbl
sub
cmp
push
bound
lods
inc
xchg
mov
scas
cmc
int3
cmp
das
in
mov
lds
js
jnp
pop
push
xor
stos
loope
add
cmp
arpl
rcr
push
push
pop
inc
push
xchg
aam
mov
mov
jno
pop
inc
mov
scas
xor
inc
add
or
aad
sar
xor
shlb
ret
subl
pop
loopne
inc
fcmovu
jb
in
fsubp
js
jb
fidivrs
jge
and
mov
mov
mov
cs
sbb
pop
mov
hlt
sti
jns
lods
mov
sbb
push
push
mov
gs
jmp
sbb
cmp
adc
out
cmpb
adcl
lods
lods
cmp
adc
cmpsb
sbb
jae
out
pop
adcb
pusha
outsl
es
or
sahf
xor
xchg
xlat
es
inc
and
lods
pusha
add
loope
lea
xchg
subb
or
inc
xchg
fisubl
mov
push
add
orb
rcrb
adc
mov
leave
and
loop
push
adc
iret
inc
ja
out
mov
stos
dec
mov
jg
or
fisubrs
push
ret
insb
xor
dec
jp
xchg
jp
adc
sbb
mov
xchg
das
insb
iret
sti
loope
mov
lock
adc
xlat
jb
fildl
out
adc
clc
in
loope
mov
addr16
push
xchg
pop
mov
dec
cmp
sbb
sbbl
dec
pop
cmp
cmp
and
cmp
jne
mov
cmp
decl
or
mov
stos
es
sar
ss
push
and
sti
mov
or
pop
mov
cmp
lahf
xor
xchg
fwait
loop
inc
inc
jl
rcr
mov
xor
dec
dec
cmp
aaa
or
cmpsb
mov
call
lret
fs
pop
sahf
jbe
xor
mov
shlb
jle
sbb
adc
push
mov
push
pop
xor
sub
filds
std
scas
aad
andl
clc
ret
cld
xlat
pop
or
nop
mov
push
rolb
jp
xor
xor
jge
ror
mov
data16
jl
cmp
cmp
cmp
xor
cmp
pushf
cmc
aad
mov
push
push
lea
lea
rorb
sub
test
add
ljmp
std
int
call
aam
pop
lret
jecxz
xchg
mov
pop
jp
orb
in
and
mov
inc
inc
bound
rolb
cmc
pop
adc
ret
mov
out
mov
push
inc
sbb
rcr
jle
hlt
data16
imul
jp
sbb
std
xor
sub
push
dec
xchg
push
push
les
into
test
lods
jae
cmpsl
sbb
xor
add
and
rolb
add
dec
mov
in
mov
jg
jle
jnp
cmp
xchg
sbb
mov
jbe
test
inc
js
pushf
fsubrs
popf
adc
dec
lret
adc
or
mov
sbb
nop
popa
add
and
cmp
cmc
roll
roll
pop
ror
ds
inc
xchg
loopne
orl
inc
or
sbb
cmp
or
mov
mov
das
loopne
jb
push
out
push
loope
fistl
inc
lock
imul
push
or
ret
fldcw
enter
jl
sub
in
fst
cmpsb
repnz
mov
add
imul
cld
cmpb
push
pop
jmp
add
jge
sub
jmp
xor
adc
sti
arpl
inc
rcll
imull
jmp
cli
in
mov
aam
push
js
scas
push
xchg
ss
nop
mov
mov
and
cmp
out
lret
xchg
xchg
insb
ljmp
arpl
adc
xor
cmc
and
xor
and
ds
ljmp
xor
lret
pop
xchg
sub
adc
invd
push
or
push
or
jns
ret
scas
fsubp
imul
and
cmpsl
hlt
push
mov
and
mov
adc
jno
sahf
add
push
xchg
gs
xor
mov
rcrb
jmp
arpl
fisttpl
pop
mov
mov
ja
shr
mov
pop
outsb
push
mov
inc
cltd
icebp
data16
scas
jecxz
push
dec
mov
or
push
xchg
cmp
pop
push
inc
xchg
pop
fldcw
pop
dec
sbb
scas
dec
add
or
mov
sbb
sahf
xor
inc
xor
out
mov
mov
inc
jp
hlt
pop
add
sbb
push
iret
jns
pusha
lock
push
push
stos
mov
jae
addl
push
push
loopne
or
inc
mov
test
aad
mov
inc
lcall
into
cmpsb
xor
imul
inc
popa
popf
adc
test
sti
push
push
aad
pop
jno
xor
int3
std
shrb
mov
xchg
xor
pop
stos
jns
rorl
jle
xchg
fs
dec
mov
push
inc
insb
test
inc
out
repz
cmpsb
movhps
mov
cwtl
jns
dec
pop
or
dec
out
mov
aad
pop
sbb
rolw
xchg
inc
or
adc
cwtl
mov
lock
fldenv
out
xchg
dec
andl
adc
mov
mov
add
and
ss
imul
out
call
pushf
lcall
sahf
mov
nop
ror
push
loop
dec
adc
outsb
dec
jmp
jno
xchg
hlt
scas
fsubrl
cs
icebp
test
jb
aas
add
iret
push
mov
adc
dec
jp
dec
mov
divb
stc
loop
outsb
lds
rclb
add
mov
fs
jecxz
ret
lock
lock
test
pop
dec
pop
jne
mov
sub
insb
xchg
les
fnsave
xor
insb
cmp
add
and
adcl
add
or
dec
mov
gs
test
pop
push
sbb
pushf
test
and
decl
into
jle
mov
adc
test
popa
inc
add
jp
test
xor
lcall
xlat
add
xchg
mov
mov
repz
xorl
fmull
shrl
sbb
and
and
xchg
mov
or
push
loop
scas
jge
ds
sbb
loop
shll
mov
sub
jecxz
inc
cmp
les
stos
push
ffree
add
leave
aaa
pop
aam
inc
push
pop
jmp
mov
notb
and
add
shr
movsl
test
jb
adc
test
aad
push
add
fs
sub
in
cld
xchg
sbb
fs
mov
mov
add
add
clc
mov
jge
adc
dec
sub
es
in
pop
sbb
jecxz
loopne
out
xor
test
xor
dec
or
cmp
addr16
insb
jl
push
and
insl
sub
popl
mov
scas
mov
adc
cld
roll
dec
xchg
stos
call
into
cmp
lcall
add
lret
or
pop
dec
lret
inc
xchg
lret
dec
pop
mov
add
and
orl
mov
jnp
cmpsb
push
sub
push
adc
push
inc
jo
mov
inc
push
dec
push
das
cmp
pop
inc
sub
rol
outsl
sub
adc
out
and
add
jmp
mov
pop
clc
xchg
pop
in
mov
xlat
jmp
mov
dec
mov
and
or
mov
cmpsb
imul
nop
push
and
aaa
shll
fimuls
add
ret
xor
mov
lahf
std
mov
arpl
jle
fiaddl
add
add
pop
or
jne
int3
cmp
clc
add
fdivr
es
stos
mov
inc
inc
repnz
mov
add
pushf
jno
cltd
repz
leave
xchg
lret
out
xchg
mov
mov
shlb
adc
imull
push
out
mov
sbb
loope
add
xchg
or
decl
sub
and
iret
jne
sbb
pop
dec
les
push
xchg
inc
shlb
fnstsw
and
mov
jne
in
jecxz
lds
nop
bound
cmpsl
iret
jg
pop
imul
idiv
push
cld
lahf
or
loopne
mov
cs
adcl
or
repz
dec
inc
arpl
ja
cmp
fldcw
inc
or
gs
dec
and
push
push
sub
and
loope
and
nop
cmp
dec
lock
mov
and
and
dec
adc
jo
fstpl
in
push
inc
jb
mov
je
adc
sbb
mov
inc
mov
push
mov
sahf
push
xor
mov
mov
inc
add
push
push
orl
sti
mov
ret
stos
nop
imul
cmp
aad
repnz
ss
aad
and
mov
xchg
adcb
aam
dec
pushf
jo
test
xor
pop
hlt
cmp
add
xor
xchg
mov
imul
adc
popf
cmpsb
ljmp
push
sub
xor
leave
pop
adc
movsb
xchg
sub
jp
popf
jne
shrl
test
inc
xor
adc
mov
shlb
dec
adc
testb
loopne
and
inc
gs
xchg
mull
xchg
aam
add
mov
add
jmp
mov
outsb
mov
stos
add
push
sahf
sub
inc
or
dec
jnp
clc
push
push
mov
je
and
and
push
dec
adc
cltd
scas
cmpsl
loopne
sbb
sti
data16
fldenv
mov
clc
jb
or
sub
adc
pop
xor
loopne
in
call
aam
fs
or
shlb
imul
mov
xor
imul
loope
out
push
dec
in
pop
sub
sbb
inc
mov
jno
push
inc
iret
test
sub
inc
aas
hlt
sbb
cmpb
push
sbb
shlb
imul
fsts
mov
ja
seto
add
lahf
ret
mov
adc
push
sbb
lea
push
add
sub
sub
push
fs
inc
repz
or
add
inc
adc
into
add
mov
push
jp
adc
adc
outsl
cmp
mov
test
lret
or
push
lret
add
imul
xor
adcb
and
or
notl
mov
mov
add
js
sbb
jge
ret
movsb
pop
das
pop
push
fdivl
dec
xchg
add
sub
pop
fs
mov
in
xchg
insl
and
wrmsr
and
inc
or
dec
inc
sbb
push
mov
mov
loopne
insb
and
gs
push
mov
jmp
push
push
jae
subl
cld
or
sub
int
test
pop
mov
insb
lcall
insl
jno
jge
jge
mov
clc
insb
lret
test
xchg
lret
shll
fs
xor
add
jecxz
or
mov
xchg
data16
lods
xchg
bound
push
scas
outsb
lods
pop
add
and
pop
sbb
inc
aaa
or
fiadds
cs
xchg
pusha
adcb
clc
repz
inc
enter
out
fs
lahf
adc
test
pop
add
jecxz
fwait
adc
and
xchg
dec
das
in
aam
mov
and
or
xchg
jp
push
dec
int3
adc
cld
in
rolb
or
ja
ja
into
sub
lock
inc
jp
jmp
fs
mov
sbb
inc
iret
or
lcall
adc
xor
mov
or
rolb
imul
scas
xor
pop
testl
or
outsl
pop
mov
inc
mov
pop
inc
push
sbb
js
nop
mov
and
call
gs
test
cmp
xchg
nop
inc
inc
pop
icebp
pop
sub
jne
shr
adc
mov
ret
lahf
aas
inc
loopne,pt
or
and
rol
call
cmp
into
movsl
sbb
jno
loope
int3
dec
sub
add
rcll
or
shll
dec
movsl
pop
xor
mov
pop
or
lods
push
cmp
mov
pop
inc
in
cs
push
pop
mov
adc
dec
repnz
cmc
add
movsb
adc
lahf
pop
and
and
mov
in
mov
mov
test
repnz
cli
repz
mov
add
loop
cld
outsl
js
out
inc
add
push
xchg
push
xchg
scas
add
pop
test
add
add
stos
cmpsl
xchg
inc
subb
and
push
jmp
cmp
mov
sti
xor
test
popa
fbstp
and
adc
add
imul
call
sti
ja
dec
jmp
cmpsb
inc
rcl
xchg
inc
sysret
pop
js
sbb
mov
loopne
sub
pushf
into
in
push
mov
cmp
stos
push
shlb
pushf
insl
movsb
push
jl
decb
cmp
xlat
lahf
and
pop
push
cmp
inc
into
nopl
push
push
jg,pt
das
xor
and
mov
inc
mov
test
shl
aad
test
sub
mov
push
add
aad
jo
jno
rolb
and
push
out
dec
adc
cmc
scas
xchg
in
xor
inc
les
xor
test
sbb
xchg
shl
or
rcrb
adc
inc
jecxz
xchg
leave
fisubrl
or
std
idiv
rcrl
xchg
dec
mov
ret
push
jge
pop
sbb
inc
jno
cmp
pop
push
jb
inc
repnz
xchg
clc
mov
gs
nop
inc
push
mov
push
mov
mov
fildl
push
ljmp
addb
xor
adc
and
sub
and
adcb
loope
je
fimuls
cmp
call
icebp
divl
fs
mov
ret
mov
sahf
push
pop
mov
mov
mov
cmp
xsha256
cmpsb
push
inc
xchg
mov
cli
cmp
addr16
stc
daa
xchg
mov
mov
push
pop
add
inc
js
mov
movsl
out
xchg
push
adc
dec
dec
push
and
jmp
aad
or
sub
and
call
or
dec
and
adc
mov
jne
hlt
imul
fs
mov
jl
lods
mov
gs
bound
or
xchg
sbbl
sti
and
insb
mov
call
hlt
rcrl
push
fisttps
adc
ds
lods
or
push
inc
sbb
or
xchg
mov
clc
inc
test
add
mov
pop
inc
frstpm(287
inc
in
loope
dec
lock
ja
scas
add
pmaxsw
add
cld
xchg
test
dec
adc
mov
popa
sbbl
sbbl
enter
cmp
mov
pop
mov
cmp
mov
add
inc
fistpll
sahf
cmp
jno
fcoms
fdivrl
lcall
aas
outsl
add
push
or
cmp
imul
cli
stos
xchg
jnp
movsb
mov
lds
cmp
pop
loopne
push
xchg
pop
clc
into
lods
and
cmp
dec
or
popa
cli
mov
mov
xchg
xchg
push
xorb
mov
nop
outsb
jnp
cmc
mov
push
pop
push
add
inc
lods
pop
and
dec
cmpsb
pop
dec
push
inc
lret
aad
inc
ja
call
lcall
jbe
bound
xor
adc
cmp
mov
jbe
mov
add
sub
add
add
arpl
or
loop
inc
aaa
lock
push
jno
pop
cmp
xor
pop
jle
pushf
dec
ror
cmp
cwtl
or
mov
mov
aam
sub
mov
sbb
cmp
dec
push
jg
cmc
jnp
and
push
sbb
es
mov
cmp
mov
cmp
in
xchg
adc
sub
mov
or
rolb
and
stos
mov
pop
and
or
in
add
bound
imul
jle
inc
mov
and
les
xorb
test
mov
and
jmp
sbb
or
mov
call
pop
adc
cld
das
inc
pop
adc
pop
push
adc
out
mov
inc
xorl
pop
sub
mov
add
in
and
xor
test
jle
adc
es
inc
xorl
aad
in
sbb
pop
imul
mov
dec
fsubrs
fsts
xor
adc
mov
xchg
xchg
xor
adc
xchg
insl
or
mov
sub
and
addr16
sbb
sbbl
xchg
shlb
xchg
test
xchg
mov
cvtpi2ps
and
mov
fistpl
outsb
mov
xor
out
pop
or
in
push
sbb
inc
adc
dec
je
fmuls
push
cld
movsb
mov
stc
loope
xchg
xchg
call
mov
adcl
and
imul
pop
xlat
inc
movsb
leave
inc
mov
fistpll
sbbl
repz
add
mov
jae
faddl
int
mov
imul
xchg
fwait
cmp
enter
mov
aad
sti
inc
jmp
cmpsl
add
push
add
dec
out
xchg
push
outsl
ds
cmp
or
xor
dec
outsl
or
mov
pop
scas
movsb
iret
movsb
or
nop
push
in
sub
pop
test
lret
sbb
aam
push
jg
jmp
mov
cwtl
xor
pop
lods
ds
dec
loope
jno
stc
movsl
ret
push
pop
in
addr16
push
cmpsl
cmpsl
jecxz
scas
jle
shrl
stos
out
pop
dec
push
and
pop
push
xor
push
inc
adc
loop
jmp
dec
or
or
femms
push
inc
sahf
mov
pusha
cmp
jmp
or
andb
jne
sub
push
scas
js
sbb
pop
adc
sbb
adc
push
mov
sbb
cmpsl
mov
dec
sahf
dec
pop
fs
dec
pop
sub
inc
les
test
and
push
adc
mov
rolb
stos
push
jge
jno
jge
ret
in
sub
mov
movsl
sbb
in
jne
dec
filds
scas
inc
dec
push
pop
mov
push
roll
xor
addr16
shrb
xchg
adc
stos
ret
iret
orb
or
aad
push
bound
shrb
in
inc
out
mov
xchg
inc
das
and
mov
je
sbb
mov
nop
mov
pop
popf
inc
popa
outsl
lods
add
add
das
sub
lods
aas
inc
lock
mov
out
ds
mov
rcll
dec
push
imul
iret
mov
lods
subl
inc
cld
add
ss
jmp
gs
lret
dec
and
iret
jl
jnp
jns
or
sub
hlt
ss
fs
shrl
sbb
push
adc
push
popf
rcrl
jle
hlt
ljmp
ljmp
movsl
int3
out
adc
test
pop
jb
int3
add
ret
add
out
push
mov
cmp
call
and
or
xchg
adc
loopne
xchg
add
inc
jg
push
pop
in
inc
cmc
adc
data16
pop
cli
pop
jno
mov
mov
fdivrs
cmp
repnz
ret
test
pop
arpl
shlb
mov
dec
dec
pop
push
out
lea
pop
aad
adc
lret
stos
xchg
lock
and
or
ret
scas
js
pmaxsw
jbe
fstpl
movsb
in
in
sub
dec
jmp
cmp
mov
mov
mov
adc
decb
fldl
icebp
addr16
mov
and
cli
xchg
xchg
sbb
push
adc
cmp
adc
push
lods
mov
imul
in
xchg
inc
adc
or
and
and
xchg
add
jl
sar
xor
adc
pop
sub
scas
jp
and
test
ja
push
sti
movsl
xchg
jo
sbb
xchg
lds
repnz
cmpsl
das
aaa
aaa
movsb
cmc
sti
enter
es
sbb
xor
push
pop
and
mov
pop
inc
fldt
mov
and
push
mov
test
scas
xor
cli
mov
push
xlat
adc
mov
xchg
dec
pusha
and
loopne
add
xor
ss
or
decl
fwait
and
orb
dec
adc
lods
gs
inc
pop
sbb
and
adc
sbbb
sbb
push
add
or
pop
les
push
pop
cwtl
inc
popf
xchg
cmp
inc
inc
and
mov
xorb
cwtl
imul
jl
sub
and
push
cmpsl
dec
fadds
cmc
ljmp
pop
jnp
pop
adc
adc
push
or
and
std
pop
jae
sub
cmp
adc
jbe
or
roll
or
push
or
andb
adc
imulb
mov
dec
jo
add
cmp
or
add
mov
mov
je
fadds
stos
out
addr16
pushl
adc
sub
mov
push
hlt
jecxz
mov
xchg
push
call
jb
push
cmpsl
cmp
adcb
jle
inc
pushf
pop
sti
subb
pop
or
lock
outsb
in
cmp
das
ljmp
mov
ja
pop
out
fistpll
jp
push
sbb
gs
das
or
pop
pusha
dec
fucom
fisttpll
clc
mov
clc
ja
adc
das
sarl
rorb
add
jmp
sbbb
fmull
test
daa
test
adc
sbb
scas
dec
sbb
push
out
xchg
pushf
call
mov
jnp
std
push
mov
out
mov
leave
sub
dec
pop
add
jne
pop
loope
jns
cmpsl
lahf
pop
mov
cld
inc
xor
xor
imul
out
xlat
loope
into
pop
dec
xchg
clc
loop
xchg
add
mov
mov
mov
xchg
sahf
out
cmc
xchg
push
push
xor
cmpsl
rorl
push
dec
pop
into
idivb
pop
push
sub
int
repnz
pop
clc
shl
rorl
pop
jl
std
rcrb
inc
rol
das
jp
add
jecxz
stc
std
pop
sbb
cmp
or
dec
movsl
fdivrs
jg
sub
rcll
mov
mov
in
mov
xlat
xchg
and
inc
or
xchg
inc
pop
sbb
jge
stos
dec
cmp
roll
and
aam
cltd
lods
pop
enter
mov
pop
ror
add
or
add
jae
adc
dec
stos
mov
dec
lds
inc
test
cmpsb
mov
cmpsl
cld
mov
filds
es
or
mov
mov
shlb
jle
fs
repz
dec
popa
das
add
mov
in
dec
test
lea
xor
ss
clc
mov
adc
mov
adc
sub
popf
and
and
jp
xor
inc
sbb
pop
lahf
inc
mov
mov
fadds
sub
xchg
add
dec
pushf
add
addb
and
out
and
or
cmpsl
sbb
cs
push
xchg
pop
jne
je
out
hlt
insl
loop
insb
bt
mov
mov
popa
orb
subl
jno
inc
mov
pusha
addr16
mov
clc
jbe
jae
lret
xchg
div
hlt
push
push
subl
fdivl
cmovb
js
adcb
cmp
test
cmpsl
ja
xchg
ret
sbbl
or
imul
aam
stos
and
push
xor
aaa
lret
push
and
and
and
repz
cwtl
ja
ret
sub
lahf
arpl
mov
cs
pop
fwait
out
test
inc
sbb
mov
fs
testb
arpl
jg
jp
addb
test
or
adc
mov
sbb
cwtl
imul
loop
pop
movsl
je
push
push
sub
add
cs
jp
or
fwait
and
nop
push
xchg
jo
xor
push
lods
cmpb
addr16
pushf
aam
shr
cmp
fsubp
mov
mov
mov
jne
inc
jnp
push
cmp
xor
bnd
and
or
mov
xchg
mov
popa
or
hlt
icebp
data16
flds
push
ret
dec
mov
jbe
adc
mov
xchg
popf
lret
inc
or
dec
jge
xor
lahf
xor
out
inc
mov
add
sub
pop
cltd
mov
lret
push
mov
xchg
movsl
xor
addl
add
cmp
push
mov
shll
add
xor
sbb
rcll
mov
rclb
pusha
add
cmp
push
rclb
mov
adc
cltd
jb
les
sahf
ss
push
jb
jae
sub
xchg
lret
shlb
iret
jecxz
push
or
push
dec
es
adc
insb
ret
rol
cmp
mov
movsb
jmp
jp
sbb
into
sbb
in
cmpb
xchg
or
xchg
inc
lcall
xor
adc
jbe
mov
pop
jmp
lods
dec
cmp
jno
mov
pop
lods
movsb
sub
ja
dec
scas
sbb
xor
adcl
je,pn
add
or
sbb
fcompl
sub
fcompl
jns
in
mov
sbbb
into
out
pop
dec
mov
adc
mov
mov
mov
jb
push
or
pop
sbb
mov
push
pop
push
in
pop
push
and
mov
clc
idivb
cld
sarb
imul
pop
cwtl
test
push
test
push
inc
or
and
adcb
xchg
pop
cmp
jg
pop
add
lods
mov
cmp
add
sub
sbbl
xorl
icebp
inc
mov
xor
cmpl
add
dec
fs
inc
mov
pop
push
sub
inc
dec
push
mov
add
pop
lcall
ret
test
pop
push
ja
push
ret
mov
sbb
mov
and
add
or
pop
int3
popf
repnz
lods
aas
or
call
je
jmp
jg,pn
int3
ficomps
inc
cs
add
xchg
cmp
bnd
xor
sub
xor
or
stos
ja
push
xor
pop
loope
push
or
imul
out
mov
inc
loope
mov
push
push
adc
sub
fs
jo
aad
fstl
jne
or
outsb
scas
mov
sbb
or
cmp
cli
rorb
fucomip
test
out
or
cmc
xchg
gs
repz
shlb
sbb
dec
sub
stos
or
testl
mov
add
push
cmp
xchg
cmpl
cli
pop
or
xor
sbbb
mov
stos
or
mov
jo
xchg
fwait
je
sbb
jge
cmp
pop
mov
in
scas
cld
popf
jl
out
add
mov
clc
dec
imul
js
clc
xor
insl
adcb
dec
dec
dec
stc
out
push
adc
pushf
or
out
pop
rolb
popa
cld
sbbb
xchg
xor
push
cmpsl
pop
xchg
cs
iret
or
mov
xchg
pop
adc
pop
dec
cld
pushf
int
rclb
mov
pop
call
mov
add
hlt
orl
lock
push
xchg
jg
mov
add
test
or
and
aam
mov
xchg
cmp
ret
add
jbe
out
cmp
int
xchg
adc
filds
es
mov
sub
cld
test
adc
es
or
insl
lock
sti
out
mov
mov
push
xchg
scas
or
pop
sub
or
lods
xchg
imul
xchg
pusha
nop
cld
and
cli
cmc
shlb
loope
push
int
adc
sti
sub
fwait
inc
out
pushl
shr
add
mov
cmc
jnp
xlat
sti
out
out
push
mov
int3
sub
sbb
das
push
adc
test
pop
xchg
out
push
rcrb
sub
xor
cs
add
add
orb
mov
sub
insb
or
and
mov
loopne
pop
scas
lret
inc
sub
adc
in
jo
out
fisttps
jb
lret
push
adc
loop
cld
out
jne
rorb
push
outsl
cmp
add
sbb
xor
cmp
std
adc
sub
repz
push
sbb
push
hlt
fildl
add
or
movsb
and
repnz
mov
lret
push
inc
rorl
out
mov
jbe
sbb
cmp
out
fidivl
addl
adc
mov
pusha
bound
sub
aad
jle
movl
repz
mov
push
xor
outsb
push
or
jb
dec
popf
jp
inc
or
loop
push
loopne
jp
fsub
xchg
loopne
jmp
repz
xor
and
fdivr
les
outsb
add
ss
adc
andl
xchg
pop
cltd
adc
mov
sub
or
ret
adc
sub
fildll
mov
scas
xlat
arpl
adc
mov
data16
outsb
mov
cmp
xchg
insb
jle
icebp
and
lods
inc
mov
repz
nop
and
enter
adc
outsl
arpl
pushf
sbb
and
sbb
xchg
in
lret
inc
cmpsb
sbb
test
pusha
lcall
and
pop
cmpsl
jo
jecxz
sub
push
push
dec
or
repz
ret
mov
pop
adc
outsb
les
int3
mov
mov
pusha
sbb
leave
lea
adc
inc
dec
and
stc
xchg
call
mov
xchg
sbb
adc
dec
mov
pop
mov
lret
or
cmpsl
aas
cmp
popf
sbb
ja
jb
inc
imul
and
test
je
fcompl
icebp
inc
test
ja
lcall
mov
jns
les
mov
sub
call
fiaddl
xchg
inc
or
jns
stos
dec
out
and
notb
dec
repnz
pop
jns
mov
sahf
mov
stos
shlb
call
adc
adcl
mov
and
add
enter
fdivrs
hlt
or
ret
adc
and
in
int3
lods
push
cmpb
mov
aam
jge
sbb
fwait
add
mov
addb
push
and
incb
sbb
mov
fnstsw
mov
cmp
push
aam
add
or
movsb
jg
cs
lret
lock
das
pusha
or
leave
mov
cwtl
cmpsb
inc
xor
xor
pusha
call
mov
and
and
sub
and
jmp
insb
pop
pop
inc
push
xor
imul
sub
sbb
dec
clc
mov
mov
pop
jne
loope
and
lcall
test
pop
mov
push
pushf
loopne
ljmp
xchg
sbb
add
jl
inc
mov
xchg
cmp
aad
adc
negb
cmp
dec
add
imul
js
repz
arpl
mov
dec
mov
scas
testl
enter
setno
clc
add
out
fstps
fnsave
and
push
ss
add
inc
enter
fs
xor
pusha
stc
and
push
es
cmp
push
scas
subb
mov
dec
add
rolb
adc
ljmp
ljmp
inc
ret
into
test
push
adc
adc
hlt
dec
inc
lret
test
add
push
lods
imul
pop
hlt
loop
jle
inc
add
bound
test
in
jo
ret
jae
gs
pop
scas
xchg
ret
les
and
add
push
rcll
fbstp
and
cmp
divb
gs
xchg
push
xchg
add
mov
ret
outsb
pop
pop
xorl
jb
fwait
push
mov
lds
movsb
test
inc
push
pusha
bnd
push
mov
xchg
inc
cmp
pop
adc
xchg
test
movsb
mov
arpl
push
rclb
or
hlt
xor
test
push
cltd
mov
push
repz
jl
sub
addr16
inc
xchg
push
dec
les
lcall
inc
cmp
hlt
mov
push
cmpsb
movsl
fwait
mov
jo
pop
rol
shlb
add
or
fwait
stos
xchg
or
hlt
sarl
pushf
adc
divl
jmp
arpl
pop
push
fwait
repz
or
jl
or
sti
add
and
push
sbb
addr16
adc
mov
sub
mov
add
fbstp
push
push
add
add
adcl
jecxz
pop
jo
pop
dec
out
cmc
dec
repz
adcb
cwtl
push
imul
pop
adc
or
push
lods
push
cpuid
cmp
dec
push
cmc
pop
jge
pushf
adc
imulb
push
mov
fnstsw
int3
mov
cmp
push
cmp
cmp
std
dec
test
jnp
stos
inc
and
dec
and
into
lea
xor
push
or
jp
nop
into
dec
sub
jl
xchg
das
ss
test
testb
data16
ljmp
mov
or
hlt
add
inc
popa
xor
sarl
mov
push
outsl
adc
push
ljmpw
in
orl
movsb
repnz
inc
inc
gs
mov
push
mov
mov
push
popa
inc
imul
cltd
mov
sar
into
or
mov
arpl
and
loop
sbb
mov
or
fldt
add
dec
cmp
shlb
pop
adc
imul
movsb
adc
push
aam
xor
in
imul
pop
add
xchg
pop
jg
adc
and
addr16
sbb
push
jbe
dec
pop
add
xchg
xchg
mov
pop
push
data16
mov
xor
dec
cwtl
ret
push
adc
cs
mov
mov
out
fsubl
ja
xchg
adc
and
push
repz
inc
jb
dec
roll
and
mov
push
sub
mov
aad
mov
sub
inc
test
addl
popf
ljmp
icebp
xchg
jnp
rcll
xchg
call
and
lods
pushf
inc
adc
addr16
cld
cwtl
dec
or
pop
cltd
cmp
pop
gs
and
dec
rcl
pusha
mov
dec
push
inc
cmpsl
cmpsl
add
mov
xchg
insb
push
mov
xor
dec
movsb
nop
enter
addr16
iret
cmc
leave
inc
dec
push
dec
in
sbb
ja
xchg
inc
xor
gs
arpl
xchg
cmp
outsl
inc
lods
mov
push
xchg
mov
pop
dec
mov
outsb
pop
bound
mov
movsl
lods
lret
inc
add
jne
jns
lret
in
sahf
roll
cmc
lods
mov
pop
mov
flds
lds
inc
sahf
aam
inc
movswl
adc
test
fstpt
in
imulb
scas
stos
or
sub
adc
insl
test
inc
sbbl
inc
ljmp
or
imul
loopne
mov
or
and
mov
mov
fnstcw
outsl
push
pop
xor
movl
out
adc
jo
fildll
mov
ror
shlb
arpl
pop
mov
lcall
hlt
sbb
lock
outsl
cmc
inc
rcll
arpl
pop
fldl
shrl
jmp
mov
and
fildll
lock
cli
sbb
jp
mov
mov
cli
outsb
popf
jnp
popf
loopne
mov
cmp
out
sahf
cmc
cwtl
lods
fidivl
inc
jb
jbe
pusha
ds
negl
lea
ja
inc
inc
testb
cmpsb
dec
and
fs
test
mov
cld
jp
add
mov
in
addr16
add
movd
add
arpl
jo
add
add
pop
push
cmpsb
mov
jo
add
cmp
sbbb
enter
mov
and
out
sbbb
mov
mov
lret
xchg
sbb
push
or
cmp
imull
push
xchg
push
xchg
outsl
pop
ret
sbb
rcll
popa
jmp
xchg
add
inc
lcall
jg
clc
mov
enter
xchg
das
mov
cwtl
adc
pop
mov
jne
mov
aas
pop
dec
add
pop
adc
mov
out
sbb
aam
cwtl
call
jl
mov
lock
jle
cmp
xchg
push
ss
pop
cmp
cmp
mov
inc
add
push
fdivs
jg
ret
xchg
nop
cmp
pushf
or
int
jno
insl
push
lcall
fldt
fstpt
ja
stos
add
aad
mov
lock
xchg
std
arpl
xchg
fnstenv
out
or
xchg
inc
add
and
rorl
fwait
mov
pop
sub
pop
add
or
test
jl
mov
imul
mov
push
imul
paddw
mov
fstpt
fcmovnbe
clc
ret
addr16
stos
mov
jecxz
lcall
cltd
in
xchg
adc
leave
ds
xor
test
mov
dec
daa
and
lods
stos
lock
xlat
dec
sbb
icebp
jle
add
ficoms
mov
nop
pusha
mov
mov
mov
jns
popa
inc
jb
sub
std
aas
dec
sub
into
movsl
cwtl
in
xor
xor
dec
loopne
andl
jp
mov
cmp
jae
test
mov
sub
int3
push
add
jno
ljmp
xor
movsb
loope
jo
inc
pop
mov
ds
pop
movsb
mov
filds
mov
icebp
xorl
cmp
test
call
adc
call
shll
mov
adc
mov
xor
mov
repnz
cmp
jnp
sub
daa
sarl
sub
inc
lods
pop
scas
leave
lock
and
sahf
scas
xchg
mov
out
stos
or
pop
pop
xchg
and
ds
sub
push
sub
addr16
out
fisubs
sub
cmp
fisubs
outsl
adc
jge
orb
rcrl
test
jbe
jne
adc
mov
add
sbb
xor
mov
out
test
mov
out
js
inc
push
cltd
add
test
sarl
sub
jb
hlt
popf
mov
push
and
mov
adc
push
and
cmp
mov
and
cmp
clc
cmpb
or
aam
loopne
mov
pop
shrl
and
inc
aad
subl
and
jno
jno
hlt
jg
testl
pop
or
inc
pop
ja
dec
imul
nop
add
mov
sub
pop
push
rolb
push
mov
jp
or
sahf
out
sub
sbb
inc
ret
xchg
adc
out
jle
push
orb
rorb
add
mov
clc
mov
scas
jge
cmp
cmpsl
outsb
das
loop
sbb
scas
mov
cmpsb
inc
and
sbb
xchg
sbb
or
xchg
and
mov
adc
mov
xchg
mov
in
sti
cmp
hlt
popf
xlat
jecxz
and
imulb
jg
bound
fwait
std
xor
in
cs
das
ret
inc
xchg
movsb
fwait
icebp
mov
popa
fdivs
hlt
push
mov
mov
cli
lea
scas
fptan
shll
sbb
mov
gs
jno
loop
bound
or
andl
mov
lods
cmpsb
xor
sub
push
jae
ret
pop
cmp
add
and
int
dec
mov
push
jmp
iret
xor
ret
repz
mov
in
xor
dec
mov
adc
mov
repnz
xor
jno
dec
mov
imul
jle
imul
mov
sbb
xor
sub
rcll
push
and
ret
test
sbb
ja
pop
call
mov
addr16
push
ret
loope
scas
std
jge
push
cli
or
add
int3
pushf
xorb
lea
pop
xchg
jmp
rorb
je
stos
ss
add
psubb
mov
adc
sbb
pop
ret
testl
adc
sti
sub
and
pop
fucomip
addl
pop
paddq
js
mov
jl
hlt
sarl
xor
push
int3
xchg
out
xchg
add
aas
scas
and
dec
std
or
mov
lds
or
add
cmc
or
pop
fildll
mov
add
push
in
pushf
loopne
or
adc
scas
ss
sbb
sbb
xor
push
fistl
sub
sbb
into
adc
arpl
iret
pop
mov
ds
mov
add
jl
into
hlt
sarl
push
adc
add
cmc
add
jp
xor
jmp
das
hlt
push
add
push
icebp
icebp
insb
dec
jbe
xlat
mov
sbbb
cltd
nop
add
xor
xchg
mov
jp
pop
or
pusha
icebp
loop
mov
pusha
xchg
je
pop
fldl
gs
movsb
and
mov
adc
test
test
mov
push
sbb
fidivl
out
dec
or
imul
sbb
mov
pop
push
nop
add
in
test
xchg
inc
ret
mov
mov
adc
pop
add
stos
test
adc
in
ljmp
add
inc
xchg
and
inc
and
push
xor
pop
sub
mov
cmc
push
ror
push
push
and
push
xor
lret
into
ljmp
stc
popf
in
sbbl
cmpsl
xchg
and
mov
movl
mov
and
cmpsl
inc
pop
insb
mov
sbb
out
aaa
gs
lods
or
popl
jp
inc
movsb
dec
pop
adc
jge
mov
adc
mov
mov
add
js
sub
adc
dec
cmp
or
jecxz
rolb
ja
push
jecxz
cmp
shrb
push
imull
mov
outsb
mov
filds
std
sub
sbb
fistps
jmp
jg
repnz
mov
cmc
inc
jmp
push
cmp
cmpsb
insb
lahf
push
pop
xor
xor
adc
add
je
mov
pop
mov
in
mov
adc
cmp
pop
add
sub
rcrb
cld
andb
push
jle
sub
stos
imull
out
loopne
xor
cs
or
mov
int
iret
add
mov
add
out
mov
sbb
mov
add
or
push
cmp
and
sub
pop
cmp
xchg
jecxz
mov
push
bound
and
in
adc
lock
adc
rolb
sub
jb
aam
in
pop
jo
and
hlt
jnp
jle
sub
int
fnstsw
iret
sbb
pushf
in
add
add
sub
and
loope
movl
mov
test
arpl
mov
pop
loopne
sarb
ss
in
data16
lret
sbb
movsl
cltd
popa
cmpsl
xlat
jecxz
push
outsb
and
pop
outsl
test
jb
inc
add
dec
jle
cmp
lcall
sbb
pop
mov
pusha
add
cmp
out
enter
loopne
mov
ja
loopne
test
subl
sbb
add
mov
clc
pop
jbe
pop
jle
cmp
inc
mov
mov
dec
call
mov
sarl
mov
mov
push
fcomps
sub
jmp
aaa
imul
lock
jle
shlb
shll
mov
gs
xor
pop
or
aam
shrl
dec
dec
pop
orl
out
push
push
hlt
sbb
jb
cmpsb
mov
rorb
cli
jns
and
or
pop
push
jecxz
sub
es
or
pop
mov
addb
add
out
mov
jne
fmul
xor
sub
filds
ljmp
push
mov
jl
out
subl
xchg
sbb
jle
inc
jg
aas
movsl
daa
pusha
cli
xchg
sbb
adc
je
ds
cmc
dec
xchg
cld
repz
in
pusha
adc
sbb
adc
insb
cmp
into
mov
fidivrl
int
aad
leave
mov
icebp
lret
pushf
pop
push
mov
dec
pusha
and
aam
mov
out
push
add
push
lret
and
mov
lea
andb
mov
mov
les
pusha
pushf
mov
roll
addr16
pop
push
mov
xchg
dec
nop
xchg
ja
xchg
aas
sub
gs
sbb
sub
imul
cmp
mov
out
pop
imul
stc
xchg
fnstsw
pop
out
jnp
push
add
jo
lds
pop
push
xor
shrl
sbb
push
mov
pop
mov
testb
mov
shrb
mov
mov
int3
xchg
cmc
mov
push
xchg
mov
addl
movsb
or
jg
mov
add
insl
or
cmp
scas
sub
pop
mov
inc
jecxz
mov
lock
sbbb
lahf
mov
sbb
lret
mov
inc
mov
std
out
fs
add
dec
mov
cmpsb
push
mov
and
push
sub
out
out
pushf
mov
push
pop
inc
gs
adc
inc
lds
test
xchg
sbb
adc
ficoms
icebp
mov
push
push
inc
dec
or
fiaddl
jge
cmp
mov
gs
mov
push
lods
enter
imul
jl
xchg
sbb
mov
inc
divl
into
shlb
xchg
sahf
rorb
data16
mov
xchg
inc
dec
repz
or
test
dec
push
test
mov
mov
loop
mov
rcr
add
mov
mov
idivb
roll
gs
lea
dec
mov
push
sub
sub
cld
dec
mov
lret
cmc
mov
add
xchg
cmp
ret
add
js
dec
or
push
cmpl
dec
xchg
je
push
inc
sub
jo
test
cltd
jmp
sub
jle
jae
inc
mov
sarb
xchg
jmp
push
mov
lock
rorl
shlb
push
jg
jnp
les
iret
mov
stos
roll
rclw
dec
movsl
fstps
dec
pusha
xchg
pop
push
sub
loop
sub
iret
pop
sarb
ret
pusha
lahf
pusha
nop
fdivl
cmp
movsl
outsl
adc
cmp
xchg
popa
push
xchg
fdivl
and
sub
sbb
cmp
mov
iret
inc
jae
dec
push
jbe
into
movsb
call
push
sbb
adc
push
shrb
xor
jb
sbb
out
mov
shrb
xchg
push
dec
and
add
iret
mov
and
stos
pop
pop
xlat
pop
xchg
sbb
mov
sub
and
pop
cld
dec
sbb
mov
leave
push
and
pusha
or
add
jmp
pop
add
inc
jg
mov
lret
sub
cld
push
into
adc
ja
repnz
jp
xchg
mov
sti
pop
pop
out
nop
shrl
js
lods
or
lcall
lcall
dec
xchg
adc
lds
inc
iret
push
mov
mov
xchg
dec
and
adc
dec
push
xchg
sub
xor
push
mov
jno
dec
lret
outsl
hlt
jg
test
or
mov
shlb
jno
scas
push
das
xor
xlat
insl
gs
das
arpl
push
jge
mov
add
pop
movsl
or
movsb
rolb
dec
mov
cmp
pop
loopne
or
lret
lcall
ss
xor
dec
xor
mov
or
pop
inc
xor
shlb
jge
adcl
mov
mov
push
bound
insb
cltd
fsubrp
outsl
jo
les
or
test
ss
sbb
and
mov
add
inc
mov
imul
sbb
push
jl
push
cmc
sub
and
xchg
jo
mov
dec
add
loopne
jbe
mov
fs
sub
pop
pop
xchg
inc
add
bound
pop
addr16
in
inc
jge
sbb
ret
imul
push
adc
clc
adc
push
mov
stos
cmpsb
jnp
add
adc
aas
test
test
xchg
push
sarb
aas
jne
imul
fs
das
inc
and
xor
inc
out
or
loope
pop
bound
rcll
scas
jne
pop
stos
sub
sbbl
mov
xlat
sub
xor
daa
sub
push
jo
sbb
pop
int3
rcrl
movsb
call
subb
mov
cmpsb
xor
cmpsb
pop
pop
jecxz
les
push
jo
xchg
push
jl
call
test
imull
jb
xchg
mov
jge
orl
mov
inc
out
loope
jo
ljmp
pop
out
std
mov
inc
or
sbb
dec
cmp
add
xor
fcompl
dec
inc
add
pop
mov
je
dec
push
push
xor
add
jg
and
inc
mov
xlat
sub
xchg
dec
mov
movsl
adcl
xchg
cltd
and
fdivrp
xchg
sbb
fidivrs
add
fs
adcl
je
pop
out
sbb
loopne
iret
dec
sti
push
pushf
rcrl
out
call
jecxz
pop
mov
scas
shrl
into
push
and
fdivrl
gs
cli
lret
dec
inc
scas
add
mov
cltd
adc
ret
int
lods
push
aam
out
mov
int
push
xor
push
cmp
push
inc
xchg
orl
push
cltd
scas
adc
bound
mov
addr16
or
fistpl
cmpsb
or
jo
inc
jno
adc
mov
xchg
ficoml
inc
dec
adc
nop
or
mov
sar
jno
xor
mov
xlat
ret
lds
pop
rcll
jbe
inc
mov
mov
mov
insb
push
pusha
jle
mov
flds
pop
cmp
scas
sahf
dec
icebp
ret
call
sbb
mov
mov
mov
daa
jmp
push
dec
xor
mov
mov
xchg
enter
jge
xchg
lahf
clc
mov
sbb
pop
mov
push
and
lahf
mov
mov
test
sbb
and
push
dec
shll
mull
in
fisubl
faddl
movsb
xchg
jecxz
loope
add
shlb
ljmp
nop
ljmp
call
pop
clc
inc
mov
fcomp
mov
les
xchg
xorb
jmp
pop
ljmp
decb
adcb
adc
stos
mov
inc
in
je
into
push
push
add
and
insb
push
dec
sub
and
mov
cmovge
mov
stos
lock
loope
imul
repnz
mov
sub
outsl
pusha
jb
jbe
inc
test
xchg
pushf
adc
fs
xor
dec
cmp
sbb
push
scas
pop
or
mov
loopne
push
push
or
jo
cmpl
and
sub
je
push
in
sbb
sahf
std
pop
push
or
xor
add
pop
je
and
nop
mov
or
daa
ficomps
andl
fisubrs
stos
in
push
test
repz
loope
test
les
or
xchg
movsl
or
mov
in
adc
les
jbe
cltd
cmp
test
cmp
push
or
dec
pop
adc
mov
sbbb
or
inc
sbb
push
xor
or
insl
dec
lea
hlt
std
rcrb
push
add
and
lds
push
sub
add
push
xchg
adc
dec
inc
mov
hlt
cmpsl
sbbl
out
add
mov
rolb
lcall
cwtl
dec
mov
mov
lsl
jno
fcompl
pop
xor
call
fiaddl
imul
hlt
gs
jp
mov
add
sub
xchg
add
sub
stos
or
mov
mov
test
out
adc
sbb
adc
fs
push
xchg
mov
and
adc
movsb
mov
bound
push
add
fnstsw
push
or
push
mov
push
inc
pop
sub
popa
ss
cli
push
jne
adc
mov
inc
push
hlt
aas
and
adc
mov
jo
pop
cmp
imul
cmp
loop
cmp
mov
push
adc
jp,pt
dec
cmp
icebp
cwtl
fmuls
adc
pop
cli
mov
test
inc
inc
adc
call
lods
add
pop
adc
std
push
cmc
sbb
stos
mov
and
dec
lds
les
and
push
push
mov
lret
mov
pop
test
scas
mov
iret
xchg
xchg
popa
sub
mov
and
jg,pn
xlat
sub
scas
push
and
jg
shl
pop
dec
mov
push
xor
and
pusha
mov
inc
aas
fsubrl
cwtl
pop
cmp
dec
pop
nop
inc
inc
lods
xor
jo
addr16
cmpsl
stos
inc
mov
inc
addl
int
mov
push
push
sub
sbb
movsl
loop
repz
mov
inc
call
mov
insb
jae
inc
ret
iret
xchg
das
xchg
stc
mov
test
inc
xor
push
ds
inc
or
xchg
add
leave
sbb
sbb
fs
and
mov
adc
mov
dec
jo
fwait
out
test
pusha
push
mov
sbb
jnp
out
sbb
bnd
push
adc
bnd
adc
dec
sbb
inc
lahf
outsl
sub
pop
cmp
mov
rorb
mov
add
dec
ffreep
cmc
inc
fdiv
pushf
cmpsb
sub
lcall
pusha
int3
sub
cwtl
add
inc
std
lods
inc
ret
dec
cwtl
xchg
insl
int3
movsl
icebp
cmpsb
std
call
fcoms
shl
pop
jb
jae
test
push
push
sbb
fs
mov
addr16
loope
pop
inc
stos
xchg
mov
and
pop
test
inc
outsl
imul
popa
mull
mov
cli
inc
js
pop
inc
sbbb
stos
xchg
movsb
enter
sub
movsb
into
data16
lret
test
ja
sub
sbb
or
adc
adc
fisubrl
sahf
inc
add
in
mov
cs
or
dec
mov
fstl
adc
fsubl
in
pop
outsb
mov
sahf
dec
xor
insb
sbb
mov
fs
mov
add
push
mov
inc
push
and
or
jbe
scas
jno
leave
ds
shrl
inc
cmp
inc
stos
xor
dec
cmc
dec
sub
cli
in
xchg
and
loop
test
add
and
jecxz
sbb
add
push
outsb
push
test
mov
fsts
inc
loop
mov
push
stos
mov
mov
movsl
bnd
mov
mov
adc
adcb
push
sub
sub
repnz
loope
lea
adc
lods
cmp
push
mov
in
dec
xor
jp
and
mov
add
rorl
lcall
mov
add
jmp
les
clc
jbe
sbb
fs
jb
enter
and
xor
aam
in
jmp
cmpsl
lret
jns
repz
pusha
pop
pop
movl
loope
or
sarb
outsb
mov
dec
inc
mov
sub
fmuls
sub
rorb
cmp
sarl
cmp
add
scas
cmp
lock
das
sub
or
push
xor
and
fisubrl
or
pop
mov
add
and
add
mov
dec
shlb
or
dec
lret
repz
insl
stc
fdivrp
repz
shl
imul
jne
dec
subb
outsb
push
cmc
and
ss
popa
repz
dec
mov
sub
jmp
test
jno
mov
jns
jmp
mov
in
stc
pushf
pop
sub
ret
test
fstpt
nop
cs
and
test
leave
mulb
push
outsb
sub
orl
das
xchg
sbbl
mov
jae
mov
jo
icebp
je
fnstsw
pop
in
xchg
mov
pop
sbb
sbb
and
push
xlat
pop
and
imul
ja
aas
test
loope
cmp
or
in
inc
in
mov
nop
jbe
xchg
arpl
xor
push
xchg
lods
cltd
xchg
mov
adc
addb
call
add
mov
sbb
cmp
mov
and
test
fdivl
stos
xor
adc
push
loop
add
call
int
dec
sbb
push
sbb
mov
mov
hlt
xor
repz
les
xor
pop
repz
sbb
push
and
xchg
call
sub
imul
sbb
in
add
popa
sub
push
cmp
lret
jecxz
and
stc
in
in
lcall
cmpsl
sub
adc
sti
xor
aad
pop
push
mov
push
fstps
add
test
fwait
pop
adc
cmp
shrb
xchg
jl
push
das
stc
int3
add
adc
mov
jne
add
dec
test
inc
scas
cmp
push
fucom
dec
jle
cmpsb
imul
mov
rclb
inc
dec
mov
testl
push
std
and
rcrb
or
pop
pop
cli
mov
js
mov
dec
cld
out
fsubl
shlb
pop
inc
pop
fdiv
vprotd
and
adcb
xor
mov
aam
pop
out
inc
cmpsl
dec
adcl
and
mov
std
xchg
and
xor
aas
cld
push
add
inc
xor
jno
add
les
pop
mov
testl
stos
out
rorb
mov
aas
or
ljmp
sub
rorl
xchg
mov
jne
hlt
adc
pop
lret
mov
sarl
nop
filds
jge
and
xor
mov
dec
mov
andl
mov
lods
lods
push
dec
push
not
movb
inc
sahf
mov
call
cmp
clc
dec
mov
mov
xlat
stos
test
push
fisttpll
xor
sti
lods
or
loopne
mov
aaa
jmp
mov
push
fst
orb
xchg
or
lret
pusha
add
and
ret
inc
addb
lock
push
rcrb
mov
lret
hlt
or
aam
jnp
dec
push
mov
cwtl
adc
stos
push
int3
repnz
push
inc
jp
pusha
or
pop
ss
adc
xor
cmc
mov
mov
pop
mov
push
sub
dec
xor
pop
fsubr
xchg
xchg
pop
pusha
inc
inc
push
mov
outsl
stos
push
dec
pop
sbb
pushf
insl
sti
in
aaa
pop
add
in
out
jo
cld
fwait
xor
jmp
push
lods
jmp
xchg
enter
push
pop
clc
or
ret
and
stc
mov
hlt
fisttps
cwtl
sbb
or
fldenv
lret
gs
pop
cmp
fwait
int3
shrl
cmpsb
sub
call
in
xchg
adc
push
lods
ja
je
inc
pop
daa
inc
mov
jo
add
popa
mov
aaa
xchg
sbb
sti
pusha
ss
add
fcoml
adc
add
dec
js
je
dec
rcll
mov
push
mov
loop
pusha
add
test
sbb
sbb
sub
xor
inc
outsb
inc
pusha
jo
and
gs
or
cmpsb
sub
std
dec
pop
sbb
xchg
push
jmp
add
movsl
sti
jp
mov
mov
pop
das
adc
or
xor
adc
cmp
mov
adc
pop
addr16
addr16
add
nop
daa
dec
arpl
pop
adc
stc
jg
rolb
push
push
fwait
add
cmpsb
push
inc
mov
idivb
add
pop
repnz
mov
je
pop
es
add
cmp
sar
aas
mov
push
inc
push
mov
sbb
push
and
movsl
in
pusha
pop
pop
data16
pop
mov
aad
dec
rol
shrl
xchg
sahf
and
jae
movd
pushl
aas
sbb
rorl
dec
ljmp
sarb
push
and
in
call
cwtl
cld
adc
push
jne
loope
enter
sub
jmp
insl
mov
push
or
or
inc
cli
jne
std
shl
into
inc
mov
cltd
test
xchg
and
sbb
das
xchg
and
xchg
mov
push
shll
xor
sti
sbb
shll
dec
adc
pop
icebp
cmpsb
sbb
adc
add
dec
je
pop
jg
loope
mov
dec
adc
movsl
mov
sbb
mov
popf
and
sub
cmp
pop
pushf
stc
add
mov
int
xor
pop
dec
test
xor
call
adc
into
inc
mov
mov
push
data16
mov
add
test
adc
sub
addl
lret
aad
loop
mov
movsb
ljmp
mov
aaa
jmp
mov
push
mov
inc
out
pop
cmc
cli
jl
fwait
out
in
lret
jne
add
mov
pop
and
mov
lock
out
popa
xchg
xchg
xchg
sub
or
sub
rsqrtps
sub
pop
xchg
pop
mov
push
pop
loop
and
add
mov
shl
add
sbb
inc
xorl
mov
js
sub
adc
push
lods
stc
js
scas
les
sub
popa
orl
aas
std
jmp
adc
mov
sub
inc
in
cmp
cmp
loopne
and
xchg
xchg
leave
out
mov
mov
inc
stc
sub
adc
xor
pop
jle
push
movsb
jg
int3
push
clc
adc
cmpsb
sub
cmp
or
dec
sub
cs
sub
jmp
ret
pop
dec
mov
je
inc
lock
sbb
lret
add
sub
scas
nop
sbb
loopne
sbb
in
jno
inc
xchg
push
cmp
out
mov
scas
push
sbb
mov
mov
push
and
add
sub
sub
push
xor
dec
mov
aaa
je
adc
pop
push
add
imul
push
shrl
in
in
xorb
pop
movsl
sbb
iret
lea
stos
in
xchg
inc
scas
stc
mov
dec
iret
mov
rcr
push
popa
into
pop
outsl
inc
push
pop
out
push
xchg
cwtl
cmp
xor
add
jmp
xor
dec
fldt
push
rcrw
cmpl
cli
jo
xlat
in
add
pop
mov
push
pop
adc
sti
dec
lcall
aad
scas
lods
mov
or
dec
add
sbb
or
fnstenv
ret
pusha
push
push
aas
and
pop
js
ja
push
or
xor
add
dec
add
cmp
js
std
aas
data16
cli
fsub
inc
pmullw
loop
push
sbb
lret
jge
cli
or
xchg
and
cmpsb
lret
dec
or
mov
stos
cmpsb
test
ret
pop
add
notb
inc
mov
adc
xor
popf
add
scas
lret
pop
movsl
aam
jge
iret
cmc
push
cld
mov
push
ret
movl
dec
jbe
out
cli
cmp
testl
xor
shlb
lcall
lock
test
out
out
shll
and
xchg
lcall
jg
xchg
ror
pop
test
cmp
inc
loope
test
and
sti
jge
push
xchg
dec
mov
jmp
mov
mov
pop
into
or
or
add
add
xchg
or
pop
xor
push
pop
push
mov
xchg
pusha
or
daa
mov
test
shll
bound
xlat
inc
mov
and
imull
out
loopne
jmp
jo
icebp
push
mov
psubsb
inc
int
into
inc
fdivs
int3
jle
nop
scas
xlat
pop
mov
sub
add
jno
and
jne
xchg
enter
aam
mov
cwtl
inc
pop
cli
jmp
adc
lods
sahf
mov
push
bound
les
loopne
leave
lods
scas
into
addr16
push
out
fs
sub
push
fcmove
cmpsb
out
js
or
inc
sub
add
mov
pop
or
add
or
xor
pop
or
out
add
mov
add
and
rcrb
cmp
push
mov
fs
sub
lahf
loope
dec
push
adc
sti
in
xchg
pushf
lods
bound
mov
dec
addr16
sub
ss
dec
mov
test
sub
pop
push
sub
sub
jp
push
les
sub
add
popa
stc
bound
lock
test
fwait
pop
loop
sub
cmp
and
mov
xchg
bsf
cmc
shll
call
cmp
es
sti
cmp
xlat
das
pop
stc
inc
daa
push
test
loop
jno
aas
fsubr
sbbb
or
sub
clc
cld
mov
rclb
das
jne
pusha
mov
mov
xor
mov
lea
push
nop
jge
inc
dec
jle
mov
and
sub
scas
lcall
cltd
dec
adc
test
ror
push
shlb
adc
xchg
adc
cltd
mov
or
push
cmpsb
push
and
jno
dec
or
jne
pusha
lods
mov
int3
loope
outsl
xor
jmp
and
nop
jae
push
mov
cli
sub
pop
mov
ret
push
cmp
cmpsb
mov
loope
or
add
and
je
pop
std
dec
sub
imul
jae
test
mov
addr16
push
gs
das
push
hlt
pop
xchg
mov
pop
outsl
aad
aad
xchg
mov
add
inc
jne
mov
int3
sbb
je
mov
mov
mov
jl
ret
lahf
test
sbb
push
ds
dec
mov
nop
jg
shrl
shl
imul
inc
adc
insl
ja
and
push
aas
enter
push
test
cmp
shll
xchg
jne
mov
mov
add
mov
mov
cmpsb
add
lds
cmp
das
insl
xchg
xor
pop
cld
cmp
movsb
dec
cmpsl
cmp
movsb
jg
sbb
inc
aaa
mov
into
jae
popa
fldl
cmp
jb
dec
stc
in
or
sbb
add
sbb
idiv
mov
adc
mov
sbb
clc
insb
popf
and
loope
not
cmp
and
or
sub
sbb
popw
sbb
mov
cmp
hlt
pop
sub
mov
mov
push
or
push
inc
jmp
cli
sti
push
sub
cs
or
jo
jl
cwtl
or
jne
loop
imul
xchg
or
aad
and
sbb
xchg
pop
arpl
mov
jl
int3
dec
mov
ficompl
sbb
push
jl
dec
push
fnsave
scas
mov
aad
mov
hlt
outsb
mov
inc
sarl
mov
mov
ret
push
inc
pop
xor
cmc
sarb
add
aas
loopne
imul
and
jo
pop
cmpsl
push
cmc
push
cmpb
add
cli
stos
jae
int
enter
out
out
das
dec
dec
pop
cwtl
add
inc
out
cmc
xchg
adc
pusha
test
pop
pop
daa
cmp
fwait
jns
jns
test
test
or
jo
sub
scas
inc
mov
out
movsb
xor
mov
mov
jg
push
pop
adc
sbb
cmp
das
stos
push
std
push
int3
scas
jge
icebp
pop
js
adc
jno
addr16
add
or
scas
shlb
lock
or
push
sbb
cmp
jecxz
cmp
sbb
jl
cltd
and
xchg
fsubs
stos
call
xchg
cmp
int3
dec
mov
push
scas
inc
testb
ljmp
xor
jp
lcall
mov
add
inc
sbb
or
sub
and
inc
pop
sub
mov
mov
or
lds
adc
ja
out
push
repnz
jecxz
std
andb
rclb
cmp
xor
push
mov
jge
ficompl
mov
mov
xchg
xchg
pop
push
fs
insb
jp
push
jb
push
jl
loope
ret
inc
lock
es
inc
mov
add
scas
and
inc
adc
pusha
inc
mov
push
test
mov
fimull
xchg
xor
mov
cmpsl
aaa
test
loopne
xchg
adc
fldcw
test
out
pop
mov
add
jo
into
cld
or
ret
inc
in
mov
pop
and
cmp
sub
sub
or
mov
repnz
sbb
imul
xor
xor
jbe
xchg
in
cmp
or
pop
cmp
das
enter
fcompl
mov
sub
xchg
jae
insb
loop
dec
popf
ja
inc
xor
and
rcl
dec
and
movsl
andb
mov
or
sbbl
xor
lea
call
gs
dec
sbb
imul
dec
add
gs
insb
push
sti
xor
repnz
mov
jnp
notb
jb
jl
test
clc
push
jmp
mov
ja
pop
dec
aam
andb
pop
ljmp
adc
mov
fisubrl
rcll
inc
push
sbbl
push
cld
xorl
add
roll
loope
jbe
imul
inc
push
int3
insl
cmp
sbb
ss
bound
jmp
mov
push
bound
repnz
push
sbb
xorb
pop
inc
jo
mov
pop
sbb
add
insl
in
movsl
cs
push
dec
in
jl
sub
lcall
repnz
sub
xchg
sti
and
fidivl
js
mov
adc
das
mov
add
push
add
ret
arpl
cli
and
scas
pusha
adc
dec
pop
xor
sub
xor
adc
xor
xlat
dec
add
or
sahf
pop
dec
mov
orb
icebp
jb
push
lds
inc
and
mov
jb,pt
sbb
mov
adc
inc
out
push
sbb
mov
mov
push
and
xor
and
sub
loopne
stc
dec
mov
dec
dec
sub
test
mov
clc
push
add
push
push
push
sahf
outsb
cmp
sbb
sub
mov
pop
aam
xor
repz
jns
rorb
movsl
pop
das
test
pop
jnp
mov
out
rolb
or
mov
scas
xrelease
cli
sti
xor
rcll
inc
add
sbb
add
and
add
mov
xchg
sbb
mov
ds
negl
lcall
rcrl
xor
jmp
xchg
adc
add
in
ret
inc
xor
push
enter
xor
fucom
pop
add
cmpsl
pop
add
push
ret
lock
cmp
out
mov
shll
mov
adc
xor
stos
js
imul
add
movsl
inc
pop
add
in
adc
xchg
adc
testl
adc
arpl
test
add
inc
movsb
cmp
push
in
dec
outsl
pop
icebp
shll
or
xlat
or
shrb
and
pop
push
add
scas
mov
dec
out
mov
nopl
jb
xor
pop
mov
sub
xlat
int
adc
scas
mov
mov
fiadds
sbb
xchg
push
lock
insl
test
leave
and
lds
pop
add
imul
inc
in
adc
cld
leave
sarb
mov
pop
gs
sarl
outsb
inc
les
fcmovbe
gs
data16
xchg
adc
lock
xor
insb
cmc
push
outsb
xchg
dec
push
lds
orw
inc
jl
cmp
push
inc
mov
cmp
xchg
loopne
jne
and
rclb
add
loopne
shlb
adc
scas
mov
sub
jns
jne
mov
pusha
stos
sbb
das
push
fwait
mov
cmp
push
pusha
pop
push
pushl
cld
cmpsb
incb
aaa
pop
shl
xchg
xchg
cmp
mov
dec
xlat
and
pop
test
jecxz
icebp
mov
out
popf
lods
filds
inc
mov
lahf
roll
jg
xor
fisttps
pop
andl
lahf
rep
lds
repnz
or
pop
pushf
shl
stos
out
cld
aam
push
xor
sbb
pop
stos
jb
or
aad
and
js,pt
adc
sub
jno
ficompl
imull
mov
pop
mov
sbb
jge
stos
mov
outsb
in
rorb
inc
loope
cmp
js
es
cmp
inc
mov
adc
and
in
jl
in
xor
sub
xor
or
loopne
push
pop
out
cli
lea
popa
into
jbe
out
sarl
dec
movb
push
and
les
cmp
mov
xchg
in
xor
push
mov
adc
enter
ljmp
mov
mov
mov
jnp
movsb
jno
bound
scas
and
inc
clc
xchg
mov
scas
or
mov
cmc
dec
or
mov
mov
les
push
push
and
sbb
sar
and
ds
adcl
xchg
or
mov
mov
add
fwait
outsb
sub
add
mov
int
and
mov
movsl
push
aas
testb
xor
out
sub
mov
or
pop
mov
jle
xchg
nop
pop
adc
xchg
lds
xchg
loope
xadd
xor
daa
test
mov
mov
roll
add
mov
adc
push
iret
sub
lcall
cs
inc
dec
cmp
sub
aam
sarl
adc
xor
xlat
inc
dec
push
sub
adc
push
mov
inc
mov
xor
in
fldcw
loopne
add
xchg
xor
aaa
push
mov
scas
lock
mov
cwtl
cltd
hlt
and
and
fwait
notl
sub
jl
cmp
lret
or
jb
sub
xor
orb
mov
insb
add
stos
mov
or
xchg
xor
jb
loope
cwtl
ljmp
jb
mov
inc
or
sub
jmp
pop
scas
and
mov
cli
adc
jle
ret
das
jle
test
out
stos
inc
jmp
sbb
std
xor
mov
pop
xor
and
xor
xor
push
aas
xchg
mov
hlt
cmp
fidivrs
inc
dec
mov
pop
in
jbe
dec
push
mov
stos
mov
jmp
jp
imul
push
fldt
push
scas
mov
dec
scas
pop
adcb
inc
test
mov
jnp
and
pop
movb
sbbl
cli
jp
mov
jne
out
mov
mov
cmp
inc
dec
int3
or
fcmovu
rcrb
movsb
pop
add
and
push
popf
clc
testl
icebp
push
dec
inc
push
cs
mov
stos
mov
jmp
stos
xor
cmp
and
cltd
cmp
dec
mov
xor
sbb
clc
imul
inc
xchg
rcr
stos
adc
sub
pop
pushf
cld
sahf
pop
fisubs
movsb
rorb
ret
lds
add
push
mov
call
movsb
leave
lock
pop
adc
stos
mov
adc
pop
jb
xchg
aam
shrb
mov
dec
cmp
push
outsl
lods
sub
jbe
mov
xlat
jmp
push
stos
sub
sub
mov
jmp
add
adc
xorl
and
incb
inc
sbb
pop
sbb
mov
sbb
cli
pusha
bound
loopne
push
sti
mov
cmc
push
jmp
mov
daa
push
mov
movsb
xor
jae
and
push
add
lret
mov
pusha
xor
aad
mov
add
sahf
xchg
mov
and
negl
dec
and
mov
popa
andl
jo
out
je
xorl
mov
mov
and
mov
sub
mov
lods
ja
pop
pmulhw
repnz
out
cltd
loopne
insb
jl
push
cli
mov
mov
mov
mov
mov
lock
adc
push
cmpl
int
out
inc
push
jne
inc
data16
mov
adc
test
jge
sub
mov
mov
movsb
nop
aad
pop
sub
xor
and
stc
call
add
cli
rcrl
sbb
subb
push
jecxz
sti
inc
in
lret
adc
push
xchg
inc
inc
outsl
sub
aas
push
mov
and
test
lcall
mov
orb
imul
pop
xchg
push
repnz
add
mov
xchg
std
fdivs
mov
xchg
sbb
nop
sub
inc
jne
cli
lods
adc
cmp
test
es
loop
push
out
fmuls
daa
pop
mov
push
mov
mov
pop
imul
scas
adc
cmc
mov
push
test
cmp
adc
mov
ds
mov
loopne
jecxz
cld
xchg
loope
int
sbb
adc
inc
adc
adc
mov
adc
mov
sub
or
in
inc
int
jge
push
inc
lret
mov
data16
sub
pusha
fwait
sbb
inc
xchg
inc
push
stc
xchg
and
xor
fldenv
sbb
push
aas
cwtl
lcall
or
rcr
xchg
and
mov
nop
shlb
mov
add
popf
pop
mov
aam
cwtl
pop
shlb
inc
adc
sarb
lods
hlt
sub
and
sub
ja
add
add
rcll
iret
idivb
sbb
pop
loop
cmc
cmpb
call
push
inc
addl
adc
stos
mov
sahf
mull
xchg
xchg
pushl
out
xchg
lcall
das
pusha
int
and
and
sbb
push
mov
sarl
test
and
aad
inc
enter
stos
loopne
nop
add
lea
jae
pop
daa
lock
sbb
jp
movsl
pop
pop
adc
and
call
cmp
jb
icebp
adc
mov
mov
in
pop
mov
cmp
cmp
lods
lds
mov
rcrl
out
gs
sbb
scas
sbb
insb
shll
mov
das
or
fcoml
in
cmp
dec
test
out
fnstenv
cmp
movsl
jmp
adc
or
jecxz
sbb
addb
jl
xorb
inc
stos
xchg
mov
jb
out
sub
rcll
push
mov
cld
in
cmpl
jo
sub
ss
add
mov
add
notb
add
mov
stos
fildl
shrl
jge
xor
adc
push
lds
shrl
andb
xor
loopne
dec
jg
out
mov
push
fs
std
or
sbb
xchg
leave
adc
test
scas
jb
inc
lock
cmc
and
dec
or
addr16
jbe
fists
sbb
mov
lea
test
test
scas
test
jl
sbb
cli
lret
sub
xor
push
test
xor
inc
sbb
fcomps
insl
inc
sub
mov
dec
jnp
pushf
push
push
adc
insb
mov
addr16
clc
sub
dec
scas
add
out
in
or
scas
and
mov
mov
sub
xor
xchg
inc
pop
scas
adc
add
adc
add
adc
add
out
adc
add
adc
add
adc
add
adc
add
adc
add
add
lcall
add
adc
add
add
push
or
add
outsb
or
add
movsb
or
add
lret
add
or
add
hlt
or
add
push
push
add
and
add
xor
add
inc
push
add
pop
push
add
push
add
jp
add
mov
add
cwtl
push
add
scas
push
add
mov
push
add
in
push
add
cld
push
add
push
lar
and
add
cmp
add
push
lar
js
add
nop
lar
sahf
lar
mov
lar
fimull
add
out
add
repnz
add
add
push
adc
add
adc
add
adc
add
add
pop
adc
add
add
jle
add
mov
add
sahf
adc
add
add
add
rclb
add
loopne
add
repnz
add
adc
add
add
xor
add
dec
adc
add
add
insb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xor
add
inc
adc
add
add
add
add
push
adc
add
add
mov
add
int3
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
insb
adc
add
add
mov
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
xorb
addb
xorb
or
add
adc
add
orb
add
xchg
add
adcb
add
add
add
adc
add
add
add
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movsl
fisttps
xchg
fdivrs
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
or
lret
pop
or
adc
sahf
gs
clc
sar
imul
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
add
push
aas
add
add
add
add
adc
add
jbe
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
sub
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
jo
js
js
or
or
add
add
or
add
or
or
pop
or
add
sub
outsb
add
insb
add
add
add
add
outsb
jne
insb
sub
add
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
pop
pop
dec
push
push
inc
push
push
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
mov
stos
inc
add
pushl
inc
add
add
add
add
add
aas
add
add
jle
push
inc
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
dec
inc
push
dec
inc
dec
xor
sub
xor
add
add
outsb
je
insl
and
jb
jb
add
push
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
jmp
inc
add
outsb
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
and
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
ljmp
add
lcall
inc
add
inc
add
inc
repnz
add
repnz
add
incl
inc
add
add
cmp
inc
add
call
cmc
inc
add
or
add
add
add
inc
or
add
inc
or
add
add
scas
adc
add
adc
add
adc
add
out
adc
add
adc
add
adc
add
adc
add
adc
add
add
lcall
add
adc
add
add
push
or
add
outsb
or
add
movsb
or
add
lret
add
or
add
hlt
or
add
push
push
add
and
add
xor
add
inc
push
add
pop
push
add
push
add
jp
add
mov
add
cwtl
push
add
scas
push
add
mov
push
add
in
push
add
cld
push
add
push
lar
and
add
cmp
add
push
lar
js
add
nop
lar
sahf
lar
mov
lar
fimull
add
out
add
repnz
add
add
push
adc
add
adc
add
adc
add
add
pop
adc
add
add
jle
add
mov
add
sahf
adc
add
add
add
rclb
add
loopne
add
repnz
add
adc
add
add
xor
add
dec
adc
add
add
insb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xor
add
inc
adc
add
add
add
add
push
adc
add
add
mov
add
int3
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
insb
adc
add
add
mov
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
xorb
addb
xorb
or
add
adc
add
orb
add
xchg
add
adcb
add
add
add
adc
add
ljmp
mov
add
or
add
aad
call
insb
insl
push
add
cltd
add
scas
lods
dec
das
or
sub
insb
lods
push
lods
dec
add
dec
das
or
sub
insb
lods
enter
scas
lods
int
das
add
push
outsb
mov
insb
mov
dec
das
sub
imul
lods
mov
mov
dec
add
lods
lods
push
add
test
dec
das
mov
lods
push
stos
add
sub
enter
add
add
in
outsb
lods
or
xchg
add
dec
sub
lea
sub
outsb
sub
mov
sub
lods
mov
sub
add
lods
sub
lods
enter
sub
jne
call
mov
lea
add
add
lods
mov
in
dec
lods
sub
sub
add
add
lods
mov
in
dec
lods
sub
sub
add
call
outsb
mov
add
imul
mov
mov
add
call
lea
push
add
lods
mov
sub
mov
dec
scas
mov
add
sub
in
outsb
lods
add
mov
push
outsb
mov
add
mov
lods
mov
mov
insb
sub
enter
mov
add
sub
jle
sub
leave
add
sub
dec
outsb
mov
sub
add
add
mov
sub
sub
add
inc
add
push
insb
sub
push
insb
mov
popl
test
mov
sub
lods
insb
mov
sbb
sub
sub
sub
sub
lea
insb
mov
mov
sub
int
add
mov
dec
sub
lea
insb
mov
add
dec
lods
lods
mov
das
add
call
into
sub
lods
int
lret
sub
ljmp
or
insb
sub
add
dec
add
sub
das
sub
add
or
lods
add
push
add
lods
sub
sub
fwait
add
lods
mov
dec
in
insb
lods
outsb
outsb
or
add
sub
lea
scas
lods
dec
das
test
add
scas
add
sub
or
insb
lods
outsb
outsb
test
das
add
push
outsb
mov
add
push
lods
int
dec
in
insb
lods
outsb
outsb
add
call
mov
int
lea
enter
sub
test
in
lods
sub
add
add
in
dec
sub
stos
int
in
insb
insl
add
stc
add
in
dec
sub
mov
insb
insl
add
add
lret
out
jmp
lods
add
test
lods
out
jmp
lods
add
push
lods
enter
test
int
sub
add
push
mov
sub
lods
lods
add
call
lea
pusha
add
lods
sub
lods
or
insb
lods
outsb
outsb
sub
add
sub
mov
in
int
lods
int
push
dec
sub
add
add
mov
sub
mov
dec
scas
mov
add
lods
mov
sub
or
add
lods
mov
in
mov
outsb
outsb
add
xchg
or
lods
mov
sub
add
insb
sub
lods
or
cmp
call
dec
dec
lods
int
or
insb
lods
outsb
outsb
add
push
lods
or
filds
call
dec
outsb
sub
sub
cli
add
in
dec
sub
test
das
push
sub
scas
outsb
add
scas
add
dec
in
insb
lods
outsb
outsb
add
lods
push
in
test
dec
das
mov
mov
lods
push
scas
mov
sub
add
mov
mov
outsb
outsb
add
jl
mov
sub
cmp
call
dec
dec
lods
int
or
insb
lods
outsb
outsb
sub
push
das
enter
sub
test
ljmp
push
int
lea
mov
pop
add
lods
sub
lods
test
sub
add
mov
mov
mov
add
sub
jecxz
push
mov
int
in
lea
sub
mov
add
lods
mov
lods
sub
int3
in
sub
add
call
in
sub
dec
sub
add
mov
in
dec
test
push
lea
mov
add
add
lods
int
dec
sub
lods
push
lea
into
lods
int
add
fadds
call
lods
lods
dec
in
int
sub
int3
in
dec
lods
sub
sub
mov
push
outsb
mov
add
add
lods
sub
dec
lods
sub
scas
add
lods
mov
sub
mov
in
sub
or
call
lods
lods
sub
mov
add
add
lods
mov
lods
dec
outsb
sub
push
add
lods
mov
in
int
lods
int
lret
sub
sub
or
or
mov
das
add
add
lods
sub
push
lods
add
js
lret
mov
lods
lods
add
lret
mov
in
insb
add
cmp
mov
sub
push
dec
sub
add
add
push
dec
sub
add
add
lods
mov
sub
int3
in
add
add
lods
mov
push
add
lods
mov
test
push
add
mov
insb
lods
push
mov
lea
in
add
dec
lods
lods
test
into
sub
lods
int
push
dec
sub
add
add
dec
lods
lods
test
into
sub
lods
int
push
dec
sub
add
call
into
sub
lods
int
push
dec
sub
dec
add
lods
mov
in
int
lods
int
push
dec
sub
add
sbb
push
mov
sub
mov
int
add
mov
call
mov
sub
mov
add
lods
mov
sub
push
lods
add
add
lea
mov
mov
call
dec
sub
push
lods
sub
add
push
dec
sub
push
lods
ljmp
mov
mov
sub
mov
add
lea
lea
dec
outsb
add
add
test
mov
int3
enter
add
xor
push
dec
lods
push
dec
sub
add
push
sub
lods
push
dec
sub
add
add
mov
in
int
lods
int
lret
sub
sub
imul
.byte
lea
dec
inc
add
add
lods
adc
and
call
dec
sub
adc
ret
data16
dec
mov
into
scas
push
mov
xor
outsb
fidivrl
xchg
inc
push
ret
sub
pop
xor
fdivs
push
enter
icebp
dec
in
dec
sahf
xor
ret
cltd
sti
xchg
pop
sbb
or
mov
cmp
test
inc
xor
das
push
push
dec
fwait
adc
fwait
cmp
mov
push
xor
push
xchg
xor
jo
adc
mov
js
xlat
sbb
mov
dec
cmc
rep
imul
mov
add
adc
and
imul
push
mov
add
scas
enter
or
xchg
orb
ss
ret
xchg
xor
stc
mov
shrl
xchg
rorb
jmp
call
mov
adc
and
sbb
sbb
xlat
sbb
inc
shll
loope
push
mov
bound
or
sub
add
push
sbb
xorl
fcomps
add
int3
sbb
int3
xor
push
jae
orb
mov
rolb
aam
add
loopne
jns
fiadds
add
cmpl
clc
rcrb
aaa
jo
and
or
cwtl
daa
mov
sarb
adc
xchg
add
push
or
fisttpl
push
int3
and
add
or
xchg
lea
sbb
mov
add
cmp
mov
int
add
xor
add
inc
dec
push
add
mov
pop
add
fadd
jmp
inc
add
popf
and
cmpsb
push
mov
jbe
push
push
lods
dec
imul
push
or
or
loopne
cmp
sub
pop
int3
push
pop
gs
orb
and
test
cmc
add
cmp
xchg
lods
stos
pop
loopne
pop
int3
inc
insl
add
cmp
jnp
add
add
add
rorl
cmc
mov
test
ret
xorb
xor
addb
add
mov
cmp
add
fcomp
add
xchg
add
andb
pusha
pusha
jp
mov
add
daa
or
dec
and
jmp
push
cmc
add
xor
xchg
orb
xadd
inc
in
sub
add
add
add
out
test
sarl
jl
dec
cmpsb
xchg
rol
fucomp
cmpsl
ret
stos
stos
adc
sub
cmp
pop
cltd
aad
ret
push
lods
jecxz
jmp
icebp
orl
or
pop
shlb
fs
xchg
sub
dec
mov
int3
mov
loopne
sub
pusha
popf
test
sub
hlt
sub
sub
sbb
btr
lods
ret
mov
mov
iret
push
and
mov
xor
out
dec
xor
xchg
test
xor
add
xchg
jns
ret
add
sub
cmp
cwtl
push
lahf
adc
inc
or
adc
mov
cmp
sub
cmpsl
imul
inc
sbb
int3
lods
sub
sub
mov
push
cmpsl
push
sbb
xchg
pop
mov
lea
xor
xor
xor
mov
mov
jno
pop
test
push
pop
push
shll
stos
inc
dec
mov
jmp
or
push
fadds
mov
add
dec
and
push
lods
sub
xchg
xchg
cwtl
popa
mov
es
mov
out
imulb
sbb
ret
shl
xorb
lock
andb
pop
ljmp
add
or
pop
ljmp
hlt
and
test
aas
xor
inc
pop
cli
xchg
dec
or
les
popf
jle
jmp
hlt
jmp
xchg
inc
fidivrs
mov
and
aam
std
mov
add
vpmacssdqh
std
enter
rorl
rorl
std
test
std
call
popl
mov
aas
hlt
aas
add
mov
hlt
and
and
xor
push
aas
jp
mov
icebp
mov
push
add
sti
shll
enter
lret
mov
mov
popl
stos
pop
std
pop
and
movb
or
add
cmc
mov
aas
push
aas
add
aas
and
mov
mov
aam
inc
xchg
leave
xchg
mov
mov
mov
xor
shlb
popf
lds
lahf
xchg
jmp
popf
fstpt
ret
sarb
fisttpll
loopne
adc
cmp
adc
and
mov
pop
jg
ret
push
shr
adc
or
data16
js
bound
data16
sahf
pop
lcall
or
mov
cmp
cmpsb
jne
mov
cmp
bound
push
int3
or
dec
push
mov
popf
jmp
mov
cli
mov
int3
mov
icebp
fsubs
sbbb
cmp
addb
adc
or
insl
insl
jge
cmp
icebp
out
imul
and
jmp
cs
push
pop
cs
in
push
add
add
push
adc
xor
call
sbb
adcb
iret
adc
jno
add
add
inc
inc
add
minps
sbb
xchg
and
sbb
andb
mov
dec
push
push
mov
cltd
out
push
pop
jbe
sub
mov
shlb
or
or
add
mov
pop
into
fwait
stos
xchg
inc
lods
jmp
fs
push
insl
sbb
mov
aam
addb
fs
add
jge,pt
adc
gs
in
inc
xor
jae
or
sub
sbb
out
inc
sub
inc
lcall
addr16
xchg
imul
in
hlt
dec
mov
sub
mov
adc
and
fisttpl
add
mov
dec
xor
movsb
es
ret
mov
sbb
shll
loope
cli
ror
jge
dec
sbb
xchg
sub
shrb
shlb
adc
or
jge
into
xor
lds
dec
out
adc
jecxz
xor
out
pop
test
jb
pop
pop
roll
lea
in
fidivl
stos
test
cmp
mov
mov
mov
adc
mov
jge
lret
jae
adc
mov
aam
mov
es
mov
jne
scas
enter
ss
pop
or
sahf
loopne
repz
sub
cmpsl
inc
insl
xor
loopne
mov
mov
xor
xor
cmpb
push
cltd
ja
shrb
cwtl
cltd
jl
in
mov
outsb
dec
insb
loope
adc
cmp
test
lret
arpl
or
out
sbb
mov
sub
inc
inc
xor
lods
dec
sub
add
cmc
in
lahf
mov
int
dec
adc
cli
lds
add
scas
inc
adc
or
in
adc
mov
jp
mov
inc
cmp
ja
add
testl
inc
mov
fsubrl
jno
jmp
xor
pop
add
or
pop
loop
dec
cld
fsubrl
add
cwtl
add
xchg
insb
rorl
out
in
push
xorl
xlat
pop
jg
mov
cmc
jg
sub
scas
pushf
icebp
cld
fmulp
out
xchg
or
lcall
sub
and
sub
dec
repz
aaa
or
push
and
cmpb
loope
aaa
cmpsl
cmp
notb
push
int
sbb
sbb
sbb
xchg
fstpt
xchg
mov
jnp
jno
stc
dec
aam
or
adcb
test
jno
movsb
mov
push
scas
scas
jnp
int
sub
mov
out
fcom
inc
push
push
es
enter
pop
xchg
pop
sar
mov
movsl
pop
add
test
sbb
pop
fsts
lock
cmpsb
jle
sub
in
cld
inc
icebp
jne
pop
aas
cmpsl
stos
mov
iret
pop
sbb
dec
mov
das
sub
push
lea
rcr
mov
dec
sti
lods
loopne
stos
movsl
inc
mov
adc
add
mov
adc
and
or
aad
xchg
imul
push
sarb
mov
pop
sub
in
ja
pop
push
jae
test
push
imul
rolb
mov
ds
popf
and
xchg
fimuls
fldenv
xlat
jns
mov
inc
jmp
dec
js
mov
incb
inc
add
xchg
mov
mov
pop
add
test
cmp
das
inc
add
cmpsb
mov
adc
repz
fucomi
pop
mov
sbb
jnp
xor
sbb
rorb
cmp
in
push
out
decb
add
daa
xchg
into
adc
fldenv
mov
andb
ret
push
aam
ljmp
icebp
inc
in
xlat
mov
addl
cmp
cmc
jg
add
pop
adcl
inc
lods
popf
sbbb
push
stos
inc
xchg
pop
sub
lret
test
imul
push
or
xorb
mov
lret
adc
fdivrl
repnz
adc
push
xchg
rolb
ljmp
jmp
ret
lcall
xor
xchg
and
mov
ja
or
cwtl
add
subb
or
gs
pop
movsl
inc
mov
sub
dec
dec
push
in
add
add
dec
lock
sbb
popf
add
jp
divb
dec
iret
push
pop
cmc
outsl
xor
mov
cmp
inc
inc
adc
mov
adc
shll
and
sbb
repnz
xchg
pop
mov
int3
insl
ljmp
imul
push
pop
add
orl
mov
adc
andb
enter
je
add
xchg
les
push
or
flds
push
loope
push
add
or
and
ret
insb
add
sbb
xchg
adc
into
fmull
stos
xor
inc
xchg
loop
mov
sub
lods
mov
pusha
shrb
stc
sbb
shrl
mov
xchg
xor
sbb
jp
add
fsts
cmpb
andb
lret
mov
insb
or
pusha
adc
mov
insb
stc
xor
jno
sbb
adc
sub
je
sbb
pop
sbb
pop
outsl
pop
sbb
dec
cmpsb
test
and
cmpl
dec
dec
lret
sbb
les
add
inc
call
xchg
mov
pop
xor
ret
aam
jg
push
pop
enter
orb
les
movsb
mov
cltd
mov
and
mov
ret
mov
xor
mov
addb
sbb
ret
jp
mov
mov
test
add
sbb
int
scas
and
mov
mov
or
nop
adc
cwtl
sarb
int
mov
mov
loopne
sbb
adc
push
xchg
and
jmp
mov
rorl
nop
outsl
cwtl
mov
movsl
jecxz
es
push
mov
rcrb
jns
push
clc
movsb
lea
out
rolb
test
or
subb
fsubs
mov
aaa
insl
mov
je
out
or
imul
ds
push
sbb
rcr
mov
pusha
lahf
push
js
shl
dec
loope
and
mov
mov
jbe
jl
test
push
xor
loopne
push
cmp
dec
mov
inc
cwtl
inc
fcoms
movlhps
mov
mov
in
nop
in
and
xchg
sbb
jno
xchg
addr16
js
test
mov
test
lock
jp
stos
pop
test
aam
push
dec
fstp
mov
pop
dec
mov
test
add
xchg
add
adc
jl
ljmp
adc
call
jg
sbb
xchg
lret
sub
mov
xor
sub
or
imul
sub
lods
mov
dec
outsb
mov
movsl
rol
dec
roll
in
add
aas
mov
mov
fmuls
pusha
shrb
in
push
cmpsl
dec
test
and
je
push
test
rolb
push
cmpsb
push
into
push
test
inc
and
mov
jecxz
fwait
cmp
cwtl
ret
add
or
movsl
jb
adc
push
shlb
pop
in
ror
pop
mov
push
push
push
xchg
and
popa
cltd
lret
mov
push
es
mov
decb
std
xchg
packuswb
lcall
mov
aad
test
stos
push
xchg
cmp
out
dec
pop
mov
fdivrs
and
jns
lods
shl
adc
dec
dec
aam
or
add
repnz
aad
xchg
mov
pop
inc
lret
fidivl
add
call
lret
fcoml
add
jb
sub
sbb
cmp
add
sub
push
stos
inc
movsb
into
inc
mov
lea
push
pop
sub
cmp
add
cmp
push
testl
test
iret
mov
mov
cmpsl
icebp
xchg
jp
movsl
push
xchg
mov
push
or
sti
xlat
mov
fcompp
add
test
dec
inc
loop
and
das
add
adc
dec
xor
jae
xor
and
test
setbe
adc
or
xchg
test
mov
subb
fstl
xor
mov
add
pop
xor
sahf
imul
aas
adc
sub
mov
jo
cmp
cmp
aad
jno
mov
jl
xchg
shlb
sti
ret
adc
push
jmp
rclb
push
movsl
jne
loop
mov
jecxz
insb
inc
out
cmp
pop
push
mov
mov
and
xacquire
shrl
test
sbb
cmc
inc
andb
jge
int
pop
fcompl
or
inc
cwtl
imul
out
xchg
push
jns
lods
add
and
xor
cmc
or
cwtl
pushf
outsb
mov
aad
sub
sbb
add
shlb
out
ljmp
into
adc
xchg
movsl
popf
movsb
movsl
adc
inc
add
sbbl
pop
add
lock
jno
aad
in
sbb
cltd
or
xchg
andl
mov
lcall
inc
jle
gs
cltd
jno
mov
mov
daa
addb
add
bound
insl
mov
cmp
mov
clc
fidivrl
mov
sbb
push
mov
stos
sbb
mov
loop
fwait
or
mov
cmc
das
insb
add
imul
fstpl
insb
mov
ret
mov
cwtl
sub
test
ds
xchg
movd
jo
sub
cmpsl
or
cwtl
push
add
or
add
mov
fimuls
jl
or
xchg
addr16
xor
xchg
mov
or
jno
mov
test
or
stos
pop
lret
hlt
outsb
gs
call
aam
lods
dec
cmpsl
sub
inc
int
cmc
bound
cmp
jo
add
stos
or
lret
adc
or
and
mov
mov
mov
adc
ret
cmp
xor
js
mov
mov
adc
xor
cwtl
inc
ljmp
add
rol
nop
ljmp
xchg
ret
xor
mov
ss
jecxz
sbb
and
dec
pop
sub
xor
and
inc
mov
mov
sub
cld
mov
mov
and
arpl
add
stos
add
sub
inc
rcrb
sub
add
sub
outsl
stos
cwtl
xor
dec
mov
inc
nop
jno
jae
clc
pop
add
cmpsb
out
sarl
cmp
push
sti
dec
lcall
dec
imul
in
imul
int
push
sbb
cmpsl
mov
int
dec
pop
pmaxsw
adc
or
jo
jne
test
cmova
dec
adc
test
cmp
and
mov
jge
cmpl
mov
xorb
cmp
cmc
dec
pop
mov
cs
flds
stc
push
jo
subl
pop
popa
jmp
cmp
xor
push
loopne
test
mov
xor
ror
sub
pusha
rolb
mov
add
jno
out
clts
push
xchg
cmp
mov
insl
out
inc
loope
dec
sti
mov
repz
cmp
mov
ds
sub
stos
test
orl
adc
lds
leave
bound
cmpsb
cmpsl
cwtl
inc
add
dec
sbb
addl
fnstenv
int3
add
push
sub
mov
pop
inc
push
mov
test
fprem1
insl
stos
or
and
test
cmpsb
and
lods
fistpl
xchg
add
mov
cwtl
out
inc
stos
sub
mov
aam
lret
push
xor
inc
cld
push
cmp
pushf
bound
roll
shrb
dec
mov
and
inc
and
rcr
mov
lds
xchg
mov
push
xchg
addr16
fs
jl
jns
push
jo
mov
stos
mov
xor
mov
add
icebp
insl
inc
inc
and
movsl
cmp
fcomps
outsb
lret
iret
enter
sub
lret
vmwrite
jnp
imul
xorl
add
testl
pusha
mov
xorl
cmp
jmp
pop
cmpsb
mov
roll
lea
mov
je
test
int3
or
sbb
add
test
or
test
loop
jno
loopne
cmp
cmp
and
add
and
fadds
ret
inc
lret
fisubs
sub
or
cmp
out
adc
imul
xor
sbb
jmp
in
cltd
cmpsl
or
jge
in
test
test
data16
mov
jge
call
rolb
call
stos
les
andb
mov
xor
inc
int3
popf
pusha
cli
inc
push
mov
iret
adc
popf
pusha
repz
or
inc
push
mov
into
add
pusha
sub
xchg
add
ror
pop
inc
add
repz
adc
sub
fxch
dec
je
sbb
xor
jp
jge
sub
les
scas
les
sbb
add
scas
push
inc
sub
mov
cmp
shlb
or
daa
push
jl
addr16
enter
add
and
pop
sbb
xchg
and
loope
arpl
lods
push
ret
mov
xlat
xor
adc
inc
sbb
rcll
mov
jo
dec
sbb
push
cltd
mov
addb
xchg
scas
gs
jecxz
adc
add
scas
mov
lods
int
xchg
adc
lret
fmuls
fcompl
or
jae
les
add
insb
inc
sub
mov
dec
test
mov
adc
push
test
outsb
xchg
lret
push
sub
inc
mov
filds
and
lods
and
fwait
xchg
orl
orl
pop
rorb
or
inc
cmp
xchg
sub
rclb
push
xor
scas
aad
mov
mov
roll
nop
test
xchg
mov
adc
push
hlt
je
add
xor
mov
add
dec
fcomps
dec
sub
add
je
pop
jno
repz
aaa
xchg
sub
pop
outsl
adc
mov
inc
xor
and
mov
lret
aad
inc
mov
and
stc
mov
jno
jnp
movsl
cltd
data16
mov
mov
pusha
subb
sub
mov
ja
clc
pop
xorb
or
xchg
jp
js
pusha
rcr
leave
add
dec
jno
arpl
mov
mov
adc
mov
nop
jmp
mov
and
xor
mov
or
mov
dec
gs
bound
pop
add
or
in
fcmovnu
js
xchg
pushf
push
arpl
xor
xchg
loopne
ljmp
sbb
inc
movsl
xchg
leave
call
push
stos
push
das
pop
cmpsl
sbb
jns
push
aad
js
xchg
push
popw
fwait
push
adc
sbb
or
loop
test
cmpsb
imul
dec
test
sbb
sub
and
cwtl
leave
pop
xchg
sahf
iret
add
das
dec
bound
push
or
add
stos
mov
and
adc
lret
enter
insb
pop
es
mov
stos
mov
in
sub
arpl
cltd
xor
xchg
push
les
es
xchg
inc
mulb
jecxz
xchg
in
ja
nop
icebp
inc
sbb
fs
lea
pop
inc
test
jo
js
out
cltd
adc
xor
lods
enter
and
jns
inc
add
inc
xchg
lods
mov
roll
fs
out
cltd
xchg
ds
je,pn
xchg
xor
scas
push
pop
shll
sahf
andb
xchg
pop
push
dec
sub
or
testl
dec
xlat
popa
inc
jmp
adc
inc
rorb
or
lret
mov
stc
and
inc
test
sbb
mov
mov
and
in
mov
xchg
cmpsb
xor
lret
mov
cmp
sbb
or
leave
xor
jae
inc
sub
int3
popa
mov
mov
pop
cmc
mov
inc
fwait
loope
mov
rclb
push
shll
xor
pop
fistpl
stos
xor
sub
or
sbb
aad
repnz
pop
mov
loopne
push
sbb
scas
cmp
fsub
int3
shlb
jbe
call
insb
sub
mov
xor
scas
sub
jae
cmpsb
ret
lods
and
adc
ss
or
mov
push
in
mov
dec
sbb
lods
stos
je
in
push
mov
lds
int3
rcrl
sub
mov
out
xchg
stos
jae
imul
push
and
fiaddl
popa
xorb
repz
sub
clc
add
xor
test
push
and
xchg
idivl
and
inc
adcb
push
mov
imul
xchg
or
shll
push
test
aad
push
sahf
push
and
mov
dec
mov
pop
int3
pop
jecxz
xchg
es
xor
sub
push
sbb
jo
lahf
inc
stos
jmp
test
mov
repnz
int
inc
lods
inc
clc
mov
loope
arpl
mov
js
xor
das
jmp
jno
aaa
pop
or
aad
xorl
jp
add
add
pop
adc
mov
xor
add
loopne
pop
dec
inc
sbb
cmp
jl
ret
and
nop
enter
stos
outsb
push
bound
mov
pushf
test
out
jnp
scas
cmp
dec
mov
xor
sarl
fcoms
imul
push
test
xchg
mov
jg
andb
mov
inc
aaa
stos
xchg
outsl
int3
hlt
cmp
sbb
or
push
mov
lret
cmpb
inc
push
pushf
cmpb
mov
cmp
push
mov
mov
loopne
popa
and
pop
test
cmp
mov
ret
mov
cmp
adc
test
xchg
adc
or
cmp
adc
jmp
sub
push
sub
or
pop
jl
jo
add
pop
pop
cli
add
adc
mov
lahf
mov
mov
leave
leave
ss
sub
loop
pop
lods
shlb
xchg
mov
pop
data16
flds
popa
adc
jo
sbbb
fldenv
pop
mov
push
pop
inc
cltd
mov
mov
and
dec
jb
inc
stos
pop
test
int3
adc
mov
pushf
dec
popa
fwait
jge
push
jge
inc
xor
mov
xlat
sub
stos
cmp
pop
dec
ret
adc
test
lock
xchg
xor
inc
nop
push
lock
popf
shlb
push
lea
push
pop
mov
push
add
adc
push
mov
cltd
xchg
orb
mov
jp
pop
or
in
inc
sub
xor
or
arpl
addb
in
mov
fimull
push
stos
icebp
ret
mov
lcall
data16
movsl
xor
sub
xchg
ret
lcall
in
clc
ret
pusha
sbb
xor
pushf
push
andl
dec
in
and
addr16
stos
push
sbb
cmpxchg
add
push
rcll
ror
pop
xchg
and
repnz
in
and
aas
enter
cmp
xor
sub
int3
xchg
pop
pop
pop
dec
popa
mov
adc
pop
adc
andb
int3
shll
dec
adcl
arpl
push
mulb
xchg
adc
jno
ss
sbb
ss
ds
mov
hlt
inc
sub
xchg
and
inc
xchg
add
fld
adc
outsb
cmp
xor
or
mov
add
enter
dec
sbb
mov
orb
add
shll
in
cltd
enter
dec
mov
int3
sbb
and
es
loopne
testb
or
repz
lcall
cmp
or
data16
xor
scas
sbb
test
xchg
rcrl
repnz
ret
gs
sbb
ret
cmp
and
loop
push
ret
cli
pop
sub
push
jb
lea
test
test
sbb
adc
lcall
dec
cmpl
jno
sub
movsl
mov
pusha
sub
mov
inc
pop
js
lds
jne
sub
xchg
and
rep
cmp
test
jmp
cmpsb
repz
pop
cwtl
shl
lods
xor
test
or
pop
inc
sub
mov
sub
jg
pop
inc
xchg
inc
sbb
sub
push
repnz
shll
xor
addl
test
loop
sbb
enter
push
js
mov
in
rcrb
je
test
addb
xor
mov
cmp
mov
pop
push
push
rorb
xchg
adc
cwtl
and
adc
push
or
add
xchg
mov
xchg
into
sub
mov
ja
popa
push
fadds
dec
inc
add
lcall
push
add
mov
int
test
scas
cmpsl
adc
lea
sub
cmp
sub
cmp
and
or
jns
adc
sbb
stos
jp
pop
repnz
lock
push
dec
inc
dec
pop
lds
adc
fdivs
pop
inc
inc
out
push
dec
push
pop
xchg
sub
push
inc
cmp
test
inc
mov
and
cmpb
daa
fnsave
jae
js
outsb
adc
hlt
cmp
sbb
pop
ja
or
test
sub
mov
mov
dec
stos
loop
jp
stos
sub
sbb
sub
movsb
mov
dec
ret
scas
xor
popf
mov
shll
cmpsb
xor
xchg
add
sbb
push
test
xlat
insb
lds
popa
adc
sub
mov
xor
sub
repz
test
dec
stos
push
or
lds
test
mov
push
push
pop
mov
arpl
push
and
xchg
outsb
cs
mov
lock
repnz
nop
rclb
inc
add
push
test
inc
push
sbb
or
inc
add
mov
test
pop
xlat
fsubs
scas
outsl
repnz
and
pop
cmpsb
dec
in
mov
arpl
push
pop
and
sub
enter
enter
mov
sub
adc
out
ljmp
lahf
sti
jle
mov
cwtl
fcompl
adc
jp
push
popf
lcall
adc
mov
negl
jmp
inc
ficoms
push
jecxz
inc
mov
jl
lahf
pop
push
ret
repz
jecxz
outsb
push
fs
mov
sub
add
push
lahf
adc
push
push
mov
mov
mov
push
mov
cmc
cmp
mov
scas
test
jbe
ljmp
lods
mov
mov
push
mov
mov
xchg
lea
and
fstl
and
test
inc
cltd
pop
sub
rcrl
fdivl
jb
in
sbb
dec
sbb
pop
test
push
andb
mov
sarb
mov
push
sbb
fmull
shl
scas
scas
repnz
xor
outsb
sbb
cmp
push
mov
stos
push
enter
mov
pop
and
lret
xor
add
in
xor
int
mov
push
sbb
out
andb
sub
test
mov
adc
push
push
xor
lcall
mov
ss
inc
lods
and
adc
adc
inc
inc
push
jmp
inc
cmp
outsl
jns
xor
lods
xchg
frstor
hlt
vpsubq
push
xchg
sbb
pop
int3
and
push
das
mov
xchg
pop
xchg
lods
mov
pop
xor
mov
sub
push
dec
adc
pop
stos
or
daa
lods
ja
fucomi
sub
inc
mov
hlt
or
xchg
je
xlat
arpl
xor
pusha
shll
test
push
call
jl
jns
scas
dec
scas
repnz
cwtl
xor
sti
mov
lret
and
popf
mov
sbb
or
pop
sub
xchg
mov
and
jo
loopne
lret
xor
aaa
add
push
mov
cltd
repz
sbbb
jl
xor
or
cmp
cmp
mov
int3
mov
loopne
or
or
adc
ret
xorl
loopne
sub
out
ret
adc
pop
push
sbb
add
sbb
xchg
aaa
sbb
stos
sbb
mov
mov
mov
cmp
inc
pop
bound
pushf
int
sub
mov
es
fsubs
sub
adc
lfs
lcall
test
test
stos
push
mov
xchg
sub
cltd
xor
cltd
scas
or
or
mov
lds
jmp
pop
jno
inc
gs
mov
ljmp
push
cmp
out
jge
inc
incl
scas
lret
sub
jmp
mov
lods
and
mov
and
jecxz
dec
inc
pop
imul
and
xor
cmpsl
cwtl
dec
pop
fs
scas
xchg
mov
sbb
mov
dec
vcvtsi2sd
arpl
lods
cmpsl
push
mov
push
adc
push
int3
dec
enter
mov
add
je
sbb
inc
enter
jle
cmc
push
hlt
dec
or
pop
ds
jo
movsl
xor
cmp
mov
and
xor
sbb
push
popa
jo
outsl
rcrb
push
cld
sbb
adc
jge
cwtl
cmp
popa
add
pop
xchg
sbb
inc
call
sbb
push
sub
insl
mov
lock
out
push
cmp
cld
xchg
cmp
jb
cmp
dec
adc
add
pushf
orl
adc
das
ds
ja
mov
adc
xchg
cwtl
dec
inc
pop
add
push
out
mov
sbbl
push
in
xchg
push
inc
and
dec
loopne
and
repnz
sub
inc
adc
popa
mov
mov
call
or
and
mov
ds
add
pop
ds
jo
pop
into
mov
add
dec
add
sahf
out
test
shll
lods
push
fisttpll
daa
add
cmpsb
lret
cld
es
or
out
leave
out
sbb
and
negl
push
pop
aad
adc
or
xlat
insl
or
imul
sbb
push
movsb
imulb
les
into
mov
mov
sbb
mov
mov
pop
push
lds
xor
pop
mov
in
sub
adcl
lahf
and
cwtl
scas
hlt
addr16
sbb
mov
xor
sub
xor
ds
repz
pop
push
jbe
les
mov
xchg
adcl
dec
add
sub
inc
stc
int3
leave
cmp
jmp
test
aaa
mov
iret
fimull
cli
imul
push
push
push
cs
adc
in
outsl
cmpsb
mov
sub
push
mov
pop
push
push
loopne
xchg
adcl
and
andl
mov
lock
cmp
stos
mov
push
or
cmc
push
stc
loop
cltd
inc
sbb
cld
and
stos
sub
cmpb
bound
mov
das
pushf
shrl
jne
push
mov
sbb
bnd
mov
cmp
test
jle
mov
dec
or
inc
inc
test
ss
inc
jg
das
lret
lcall
mov
mov
ret
sub
rcll
data16
push
dec
test
mull
sub
rorl
inc
mov
addb
sub
xor
or
adc
jno
sub
mov
cmp
pop
lds
mov
lahf
xchg
lret
xor
mov
movsb
xor
aas
daa
dec
sbb
push
add
xchg
sbb
les
mov
sbbb
out
fmull
leave
push
add
mov
push
sti
outsl
pop
inc
orl
lods
stos
orb
push
sbb
aam
mov
pop
dec
test
jl
data16
mov
jns
xchg
push
int3
popa
push
inc
push
pop
clc
pop
pop
pop
jmp
mov
roll
jo
les
inc
lret
pop
mov
inc
jne,pn
mov
sti
dec
or
and
adc
jne
push
or
push
jmp
sub
lcall
and
fwait
stos
xchg
ret
xor
adc
push
rclb
sahf
cmc
dec
and
push
mov
or
inc
popa
push
mov
mov
inc
cmp
testl
stc
push
int3
mov
lock
dec
add
lret
mov
mov
cs
mov
leavew
addb
data16
cmpsb
add
pop
mov
pusha
or
push
mov
gs
adc
pop
sbb
iret
pop
push
pop
cltd
arpl
inc
push
shrl
leave
insb
out
aad
xor
dec
in
and
nop
pop
dec
jge
ret
push
push
xchg
mov
push
inc
in
dec
ret
xor
movb
stos
inc
js
lods
jno
call
push
sahf
mov
std
mov
cmp
push
inc
or
cmpl
fsub
scas
xor
sub
sbb
mov
jb
dec
ret
pushf
dec
enter
pop
ss
div
dec
mov
stc
pop
mov
inc
loope
and
lcall
jno
sub
push
fs
pop
mov
inc
push
add
xor
movsb
pop
adc
lret
pop
mov
adc
int
fstpl
out
nop
pop
push
push
sbb
stc
adc
push
jbe
push
jne
and
sub
cmp
imul
lret
add
cmpsl
push
in
lock
call
lock
sbb
mov
outsb
jmp
mov
mov
xchg
mov
sbb
loopne
stos
push
xor
fcoml
ret
inc
in
fstps
adc
and
push
xchg
outsb
call
xor
mov
or
sbb
aam
pop
std
push
add
push
push
or
sbb
dec
xor
sbb
pop
adc
roll
mov
push
fstps
jb
xor
xchg
in
movsl
aad
sub
sub
mov
add
inc
mov
pop
xchg
inc
sbb
ret
roll
pop
in
jne
add
and
pusha
subl
rcrl
cmpsl
cltd
push
popa
dec
mov
int3
popa
pop
ja
in
bound
les
addb
mov
mov
lea
in
pop
lods
sbb
add
test
lods
mov
mov
punpcklwd
cmp
mov
dec
sub
test
or
add
push
and
adc
xchg
xchg
les
mov
dec
or
inc
and
orb
sbb
test
scas
test
and
cmp
nop
xchg
jl
imul
or
push
cltd
mov
or
sbb
dec
in
sbb
xchg
pop
inc
shll
stos
sub
imul
sbb
or
mov
push
subl
adc
xchg
js
inc
rolb
or
sub
cltd
mov
ds
fsubl
mov
lret
in
inc
popf
sub
test
int3
adc
and
and
mov
adc
nop
dec
push
push
ret
aam
movsb
add
inc
add
and
movsb
in
cltd
aad
aam
xchg
xor
adc
into
xchg
cwtl
inc
add
adc
mov
nop
and
or
push
ret
push
mov
icebp
xchg
mov
adc
cmp
and
movsl
mov
xchg
xchg
rorb
pop
add
jae
mov
adc
xchg
jo
add
sub
loop
sbbb
mov
dec
les
adc
test
xor
sahf
sub
push
ret
popa
pop
not
gs
jno,pn
add
int3
push
test
adc
stos
inc
mov
add
sbb
and
rorb
push
loop
adc
test
int3
inc
push
pusha
and
xchg
scas
push
mov
mov
rcl
clc
fnstcw
add
mov
scas
or
scas
orb
mov
pop
pop
sub
pop
or
enter
push
cwtl
inc
cwtl
sub
mov
mov
scas
mov
push
not
test
loopne
jnp
sbb
xor
add
add
adc
stos
xchg
out
sub
xorl
add
data16
and
inc
cmp
sahf
mov
add
dec
sub
scas
fsts
and
jmp
sbb
and
ret
push
loopne
fisubrs
repnz
fcomi
ja
ret
push
xchg
or
cs
push
or
test
inc
sbb
add
xorl
mov
dec
stos
rorb
jo
filds
add
mov
xor
cmp
sbb
mov
xor
scas
mov
sbb
dec
insl
sub
push
push
xor
mov
test
rorb
adc
inc
add
popa
pop
adc
lcall
add
push
lret
mov
clc
sub
mov
xor
cmp
inc
add
or
test
mov
xor
fs
cmpsl
mov
loop
mov
rorl
add
aad
sarb
or
les
dec
hlt
cli
push
cmpps
xchg
or
test
jns
pop
int3
sbb
xchg
int3
dec
int3
xor
test
adc
inc
adc
or
cmc
cli
imul
repz
adc
adc
orl
lds
les
push
add
mov
cmc
sbb
pushf
push
sbb
lds
xchg
xchg
pop
je
xchg
add
mov
cmpsb
and
add
mov
cmp
inc
int3
test
adc
push
sbb
pop
sub
jns
aad
mov
cmp
pop
jo
push
push
jno
sbb
xchg
add
mov
cmp
xchg
lahf
mov
pusha
pop
ja
leave
in
xor
jbe
aaa
push
push
add
adc
fstps
and
sub
push
sub
lcall
mov
rorl
xor
cmp
cmp
push
shlb
cli
xor
sbb
lods
push
mov
lea
loope
adc
mov
pushf
inc
inc
add
mov
mov
and
mov
insl
mov
repnz
nop
daa
lcall
aaa
dec
mov
add
dec
ljmp
fiaddl
jbe,pt
mov
sbb
lock
ret
or
and
std
ds
test
adc
sbbb
mov
adc
lods
adc
inc
push
dec
cmpsb
or
mov
cmp
test
test
shll
cmp
add
mov
dec
mov
jno
jns
shll
ret
clc
sahf
test
cmp
or
les
push
xchg
sub
push
sub
pop
test
test
stos
and
mov
push
arpl
ljmp
xchg
sub
pop
adc
inc
icebp
adc
gs
xor
adc
dec
mov
jns
push
cs
stos
xor
push
lret
out
push
dec
push
inc
and
push
aad
loop
or
pop
popa
notb
cmpsl
sbb
xchg
lds
stc
cs
int
adc
adcb
jl
and
adc
add
push
rorb
movsl
les
sub
pop
mov
push
sub
mov
cli
dec
cmpl
add
push
mov
jbe
cmp
mov
hlt
rcl
shlb
mov
sarb
loop
jo
repnz
and
push
aad
js
cwtl
jg
push
pop
cmc
jae
inc
add
sbb
dec
pop
imul
mov
test
xchg
push
push
sbb
add
in
lock
roll
cwtl
adc
add
imul
lods
sbb
test
jb
fsubs
jl
inc
aaa
lret
inc
sbb
push
or
inc
dec
ret
fadds
xor
xor
xor
or
and
adc
mov
cs
dec
xor
push
loope
xchg
jle
inc
dec
xchg
push
lds
xchg
fsubs
shrl
or
push
xchg
mov
xor
insl
pop
cs
mov
mov
call
in
push
pop
and
sbb
leave
or
lret
leave
inc
dec
pop
fidivrl
jp
add
pushf
loopne
dec
scas
push
push
push
dec
push
push
gs
pop
cmp
add
lds
inc
mov
cli
xchg
je
lret
popf
addr16
mov
push
rolb
arpl
insb
pop
xchg
inc
ja
test
sbb
adc
ret
stos
jns
xor
sbb
dec
or
xor
jge
nopl
sub
mov
and
cmp
inc
cmpl
shlb
loopne
sbb
cmp
adc
dec
push
cld
mov
or
add
leave
loopne
test
lcall
sub
sbb
movsb
push
mov
jecxz
xor
add
mov
fistl
push
sbb
out
ljmp
out
push
out
mov
and
xchg
aad
or
sahf
push
iret
pop
cwtl
xchg
jae
sub
xchg
popf
pop
imulb
rcll
cmp
adc
test
add
mov
cmpsb
sbb
and
cmp
pop
test
fisttpl
lret
pushf
aad
mov
lods
xchg
cwtl
jp
jbe
dec
cs
xchg
cs
inc
ss
popa
sbb
cmpsb
cmc
xchg
jne
lret
sbb
repnz
sub
test
int
aad
loopne
clc
xchg
sub
push
dec
or
sub
lock
cmp
rorl
call
sub
jl
adc
movsl
mov
data16
inc
inc
push
jbe
xchg
jno
mov
xor
push
sbb
jns
negl
push
add
sub
mov
mov
pop
pop
sbb
inc
mov
and
cmp
jns
fidivrl
jge
jnp
lcall
pusha
push
fnstcw
xchg
sub
mov
pop
dec
xchg
pusha
stc
cli
inc
push
test
xchg
mov
pop
sub
sbb
jo
xchg
negb
adc
aaa
sub
add
jmp
out
xchg
ret
mov
jl
int
fwait
call
stc
xchg
dec
xor
adc
and
xchg
mov
rol
bound
mulb
or
out
dec
out
or
xor
repz
pushf
nop
cmp
cmpsl
and
stos
cli
dec
icebp
int3
cltd
mov
push
int3
test
mov
xor
pushf
or
jb
cmp
mov
xchg
jo
in
repz
sbb
sub
int3
sub
scas
xchg
call
sbb
repz
call
scas
mov
sub
xor
adc
shlb
inc
call
pop
outsb
popa
jp
rcrl
popa
fcmovb
add
pop
mov
sbb
jno
stc
xchg
sub
pop
pop
pushf
jae
xchg
rcl
jo
push
cmp
lret
push
mov
shll
dec
sub
int3
pop
mov
ss
push
xchg
xor
push
mov
jb
jo
mulb
dec
xchg
and
negb
and
out
jns
xchg
flds
dec
fldcw
cmc
dec
icebp
push
xchg
sbb
xchg
mov
jecxz
int3
loopne
iret
sbb
mov
movsl
mov
push
push
mov
or
in
popf
int
jne
inc
mov
test
pop
aam
ja
jne
inc
inc
lds
pop
xor
ja
lahf
adc
ffreep
mov
cwtl
push
jle
push
and
cmpl
cltd
xlat
xor
out
fiadds
mov
data16
mov
loop
push
test
pushf
add
cltd
popa
cwtl
adc
aas
xor
cmp
pop
lods
mov
jb
addr16
aaa
pop
mov
and
xchg
sbb
jno
sbb
jmp
dec
pop
dec
mov
pop
mov
adc
add
sar
and
or
dec
bound
sub
imul
ss
mov
mov
push
aam
roll
mov
sub
or
sbb
cmp
push
or
insb
addl
lret
lds
hlt
insl
rolb
in
add
pop
sbb
pop
fnstenv
mov
sub
stos
add
mov
test
out
mov
pop
mov
std
lds
push
xchg
mov
dec
xor
in
into
xchg
sbb
lret
int3
xchg
sub
popf
push
or
jl
lret
mov
adc
jmp
pop
stos
sub
and
ror
loop
sti
lock
cmp
stos
xorb
dec
rorl
test
push
inc
xor
clc
lds
sbb
in
pop
inc
pop
cld
inc
nop
sub
mov
movsb
icebp
stos
and
sbb
inc
cmp
jecxz
xor
test
sub
mov
lret
loopne
cmp
popl
pop
mov
test
gs
pop
icebp
sub
pop
sbb
pop
addr16
jbe
vmovapd
pop
mov
bound
pop
aad
lahf
and
or
imul
sbb
pop
xorl
lret
lahf
pop
roll
jb
ss
scas
ret
sbb
call
push
loope
mov
cmp
mov
enter
movsb
sub
xor
lock
sub
roll
xchg
int
mov
push
lcall
push
jl
pop
flds
inc
and
inc
inc
pop
push
push
cmpsb
xchg
jo
fnstcw
addr16
cmp
cmp
sti
mov
into
push
push
jns
inc
arpl
and
mov
xchg
fwait
movsl
xor
sbb
fiadds
ret
rcrb
push
and
push
mov
jl
lret
fstpl
data16
ret
out
fucomp
mov
popa
cmpsb
int3
loopne
mov
dec
cmp
cmp
mov
jle
xchg
xchg
pop
mov
mov
ret
lods
hlt
xor
mov
inc
mov
mov
and
int
xor
icebp
enter
movsb
and
movsb
shlb
stos
je
or
cmp
mov
mov
xor
push
jl
inc
mov
dec
cli
push
fbstp
test
test
repz
xor
mov
push
cmc
mov
sub
push
add
cs
cld
outsb
mov
ljmp
aas
sbb
sub
sti
pushf
shrb
sbb
mov
vpackssdw
cltd
mov
cli
mov
push
mov
jmp
in
out
mov
stc
in
sub
outsl
dec
adc
mov
in
out
push
test
push
fnsetpm(287
fadds
fsubr
xor
aam
in
andl
ds
and
lea
ds
mov
jbe
jne
stc
jg
rcrl
xor
mov
mov
mov
add
enter
jnp
stos
lods
inc
scas
cmp
pop
test
cli
jno
xchg
jmp
nop
mov
dec
adc
xchg
movb
movsl
or
xor
test
enter
ss
test
mov
out
sub
imul
das
lret
in
ss
or
stos
or
xchg
frstor
mov
dec
aas
lret
or
aam
scas
sub
shll
xor
xlat
pop
push
lds
push
sub
je
push
jns
int
cmp
out
push
sarl
lcall
rcrb
nop
jne
arpl
lea
icebp
js
xchg
push
int
mov
into
or
rolb
push
add
push
fwait
mov
xchg
in
fisubrs
sub
icebp
int3
movsl
test
mov
mov
mov
xlat
addr16
std
adc
add
testl
push
pop
mov
push
cmp
divb
mov
pop
std
dec
cwtl
cmp
mov
pop
mov
xlat
mov
push
xchg
cmp
adc
arpl
sahf
mov
movsb
into
and
cwtl
inc
dec
jnp
and
insl
add
and
cmp
dec
scas
ret
adc
xchg
or
or
inc
out
fldl2t
xlat
jb
jp
push
push
and
in
sub
mov
popa
shlb
rol
mov
mov
jo
xchg
inc
xchg
adc
jl
add
fldcw
test
mov
inc
jne
inc
dec
add
leave
add
xchg
in
imul
loope
mov
pop
test
dec
inc
push
push
fcoms
mulb
add
addb
add
add
lcall
pusha
pop
rolb
and
or
cli
xor
shrb
xchg
pop
push
adc
inc
adc
mov
sbb
or
fucomi
xor
in
add
imul
sti
adc
mov
pushf
inc
bound
xchg
jge
mov
inc
mov
sbb
enter
mov
pop
sbb
jno
lahf
xor
and
int3
adc
adc
test
fbstp
jne
cwtl
and
push
cld
lea
je
or
pop
xchg
pop
in
cmp
cmpsb
notb
pop
iret
sbb
fcomps
pop
mov
int3
popa
push
andb
push
fbld
push
or
in
push
in
inc
icebp
dec
pop
outsl
arpl
mov
stos
fildl
add
inc
sbbl
les
mov
sbb
dec
in
in
sbb
rcrl
xor
lds
push
adc
sub
add
lret
ret
push
iret
add
mov
testb
mov
add
add
fsubrl
cli
mov
pop
push
and
sub
sbb
into
pop
or
cmpsb
and
insl
inc
add
or
dec
in
xchg
adc
or
sub
dec
inc
xchg
dec
or
test
xor
notb
out
pushf
inc
pusha
sbb
push
push
rol
push
push
rcll
xchg
xchg
adc
xchg
xor
pop
jae
andb
scas
stos
adc
and
ds
dec
gs
cmp
adc
jns
subb
sub
dec
add
fisttps
mov
rorl
push
out
mov
mov
mov
pushf
adc
ss
stos
push
dec
into
ds
add
or
cmp
arpl
or
fldcw
mov
sub
adc
inc
loopne
pop
dec
sub
icebp
into
out
mov
aad
lea
sub
ficoml
add
and
rorb
add
repnz
mov
fwait
add
jnp
loopne
fs
dec
cs
add
xchg
enter
adc
cmp
fs
sub
mov
fildll
stos
dec
or
lret
scas
jo
pop
jno
sub
call
dec
mov
sub
cli
mov
adc
cwtl
cs
sbb
push
arpl
cwtl
xchg
adc
fwait
and
push
mov
or
bound
mov
and
xorb
ret
lret
mov
popaw
int3
push
inc
hlt
jbe
pusha
jmp
popf
mov
andb
cmc
ret
mov
xor
insb
cmp
das
or
test
test
cmp
mov
sub
bound
jmp
xor
jl
mov
sub
scas
cld
add
inc
xor
into
or
jo
les
aad
push
insb
xchg
mov
xor
or
imull
leave
jge
addb
mov
testb
jae
ljmp
jae
and
imul
xor
aam
or
adc
das
ret
lcall
xchg
mov
sbb
ret
cmc
add
test
mov
fldl
jns
pop
adc
adc
push
daa
std
sub
icebp
adc
mov
pusha
sarl
imul
aam
add
pop
mov
in
cmp
xor
push
lcall
insb
daa
push
adc
pop
data16
mov
les
and
lret
movsb
subb
test
and
add
aad
mov
dec
stc
mov
sub
int3
pusha
adc
stc
xor
mov
cmp
rorb
add
inc
xor
mov
and
sbb
ficoms
pop
hlt
mov
push
and
xchg
xor
push
push
aaa
pusha
cmp
pop
xchg
out
enter
mov
mov
faddl
mov
rol
xlat
hlt
xchg
mov
xor
aam
push
mov
jno
xchg
mov
adcl
fstl
adc
ljmp
leave
cmp
mov
inc
sti
ss
stos
je
lods
sbb
pushf
popf
cmp
ljmp
in
mov
mov
sti
call
das
mov
insl
sbb
cmp
out
sub
push
fmuls
int3
out
cld
pusha
jmp
sub
mov
les
repnz
stos
cli
mov
test
sub
sar
iret
mov
mov
sub
mov
movsl
mov
xchg
ret
push
pop
pop
sub
mov
stos
mov
nop
xchg
daa
rclb
inc
stc
loop
add
roll
mov
pop
lock
fprem
jno
jg
sti
in
ret
and
iret
pop
cltd
mov
test
sbb
add
inc
push
inc
and
jno
test
push
xor
adc
orb
pop
cmp
adc
xchg
xchg
inc
ja
add
sbb
push
test
mov
and
clc
xor
mov
fdivl
cmpsb
loop
icebp
dec
xchg
rolb
sahf
out
pop
pop
jle
loopne
or
js
jb
push
rclb
jge
sti
push
aam
adc
pop
push
scas
mov
xor
mov
fcmovbe
test
jecxz
cmp
fists
mov
ficoml
adc
jl
je
push
outsl
imul
mov
xor
mov
push
movsl
and
mov
mov
sbb
xchg
sbb
mov
inc
daa
push
popf
pusha
cltd
sbb
push
xor
xchg
and
xchg
jp
pop
adc
cltd
aam
insb
inc
fld
outsl
push
inc
in
fchs
mov
dec
xor
enter
cmovnp
notb
xchg
cmp
pop
mov
xor
and
pop
lcall
lods
add
dec
lcall
loop,pn
shrl
fcoml
jae
dec
push
xchg
loope
call
dec
ret
inc
jg
repnz
adc
xchg
fmull
sbb
sub
out
pop
jle
inc
sub
insl
popa
adc
shlb
adc
add
xor
adc
jo
inc
push
arpl
pop
dec
add
pop
add
mov
inc
data16
inc
lcall
std
leave
adc
orl
push
cmp
repz
fldl
ret
sub
pop
sti
test
in
cmp
pop
aad
xor
push
adc
das
dec
fcmovb
enter
or
mov
mov
inc
pop
jbe
shll
lods
ret
mov
or
das
out
test
movsb
stc
jp
jne
push
adc
push
loopne
movsl
pop
test
fdivr
inc
or
mov
xchg
sub
mov
sub
mov
lea
sub
in
int3
or
movsl
add
inc
inc
test
inc
scas
aas
add
dec
add
inc
imul
sub
mov
inc
inc
cwtl
dec
rcr
mov
add
rcrl
hlt
pop
and
and
rorb
mov
sbb
push
adc
arpl
jl
in
addb
add
jg
loopne
push
and
push
loopne
sub
push
xlat
addb
mov
add
mov
dec
pop
neg
xor
sub
pop
data16
push
and
inc
insl
add
jge
lock
inc
imulb
dec
incb
sti
fisubl
xor
out
insl
cmpsl
jecxz
mov
inc
lods
imul
leave
or
sbb
les
add
jnp
jle,pt
inc
stc
in
iret
shll
or
mov
push
scas
scas
ret
mov
mov
notb
and
xchg
mov
xor
push
xlat
cli
push
cmp
in
push
push
sub
mov
mov
shll
mov
arpl
scas
push
mov
mov
test
mov
mov
movsl
mov
xchg
sbb
sub
mov
add
sub
rolb
out
stos
fmuls
pop
or
mov
popf
xorb
push
and
jmp
enter
pop
or
push
cmp
cmp
adc
call
push
inc
idivb
fldenv
mov
shlb
pop
sbb
mov
or
dec
or
or
adc
mov
adc
adc
inc
add
test
sub
lea
sbbb
adc
xchg
xor
push
subb
pop
or
icebp
xchg
cmp
and
mov
ljmp
movsl
mov
pop
xor
add
pop
add
rcl
ret
sub
jmp
sbb
inc
mov
push
ficompl
sbb
test
andb
ja
gs
cmpsl
aad
jno
or
sbb
xor
or
popa
xchg
frstor
xchg
ficoml
mov
and
push
rorl
js
imul
xchg
je
dec
js
nop
add
mov
add
mov
mov
pusha
xchg
or
aaa
push
or
lods
mov
jo
push
jmp
xor
adc
les
outsl
nop
jmp
enter
sbb
or
cmp
cmp
mov
addr16
pop
mov
into
sub
mov
cmpsl
mov
mov
xchg
pop
popf
mov
inc
out
js
jnp
mov
jo
in
dec
dec
push
out
arpl
dec
cmp
xor
js
outsl
es
pushf
sahf
ljmp
sub
jle
ja
repnz
pop
mov
push
sti
outsl
xlat
jl
sub
xor
xor
loope
and
aad
pop
jl
lds
stc
aam
push
imul
bnd
gs
icebp
sbb
rcl
call
in
sub
xchg
dec
xchg
pop
mov
mov
lea
xchg
loop
stos
fs
mov
repz
rolb
xchg
jno
stos
sti
inc
in
adc
dec
stos
iret
outsb
iret
jb
dec
nop
mov
jge
cmpb
add
pop
test
or
cwtl
aaa
sti
jae
add
adc
fs
lock
jmp
mov
sbbl
hlt
pop
mov
iret
daa
jle
fistpl
stc
adc
sbb
lods
insl
sbb
scas
fldenv
sbbb
testl
pop
dec
and
loope
enter
lods
dec
pop
jbe
mov
push
negb
leave
popf
in
out
into
test
mov
frstor
insb
pop
xor
xor
arpl
and
test
ret
lods
push
sub
mov
jmp
scas
ss
movsl
mov
call
dec
scas
cli
xchg
xchg
mov
inc
mov
xchg
das
pop
fisubrs
fidivs
fsub
incl
jo
data16
out
xchg
arpl
fs
inc
mov
testl
adc
jecxz
fdivrs
mov
data16
mov
je
std
je
jno
pop
data16
mov
dec
ljmp
or
mov
mov
xchg
lea
ror
push
mov
js
dec
repnz
dec
jge
shll
into
pop
dec
pusha
pushf
jnp
dec
lcall
sarl
stos
pop
adc
sbb
xchg
pushf
jmp
mov
mov
out
dec
adc
and
mov
and
pop
pusha
jno
clc
jmp
js
call
ljmp
add
aad
call
jmp
pop
je
sbb
call
ljmp
rcr
call
jbe
les
std
stc
xchg
mov
push
call
jne
pop
rcr
test
test
test
mov
mov
xor
jb
jae
jle
mov
mov
movsl
push
aam
mov
xor
jmp
jb
sbb
test
mov
jbe
ja
jle
add
add
cld
mov
inc
sub
call
jb
les
add
or
clc
ror
push
call
lcall
cld
sub
sub
push
call
jl
pop
jne
dec
mov
jmp
inc
mov
js
jns
jbe
add
add
mov
jb
inc
xchg
sub
call
jmp
shr
or
add
and
adc
sub
call
jl
add
push
ret
jl
or
mov
dec
jne
call
jmp
test
add
add
loop
cmp
clc
xor
stos
xchg
xlat
sbb
imul
inc
xchg
jle
inc
mov
mov
push
leave
add
and
add
lds
insl
xor
push
jne
adcl
mov
stc
test
xchg
xchg
sub
rcll
dec
jno
aas
les
mov
add
cmp
and
dec
sub
sub
sbb
cmp
fistpll
lods
dec
nop
xchg
inc
mov
inc
out
out
sbb
xorl
dec
ret
pop
mov
cs
add
pop
sbb
or
dec
in
xor
pop
pop
pop
mov
imul
mov
movsl
test
jns
shll
jg
roll
popa
and
out
addl
add
pop
outsl
mov
mov
pop
or
pusha
jae,pt
cmc
jnp
mov
fst
mov
stc
je
stc
push
sub
xor
mov
mov
jge
cltd
push
scas
dec
jg
inc
popa
dec
sub
sub
pop
call
imul
lods
mov
jmp
push
dec
inc
popf
shll
sar
test
setge
add
add
insl
or
cmp
std
jbe
shr
jecxz
xchg
cmp
ljmp
test
in
adc
popf
jle
jnp
adc
jo
add
pop
add
je
fucomip
ss
adc
sahf
cmp
lea
push
outsl
imul
int
filds
loope
lret
pop
sub
jle
aaa
in
stc
stc
dec
lods
jae
insb
sbb
in
jno
imul
test
or
data16
push
aas
jnp
test
pop
push
push
outsb
and
sbb
jo
jle
arpl
mov
add
adc
mov
icebp
aaa
cmp
push
adc
and
in
in
aas
inc
fsubs
mov
and
into
sub
fisubl
add
hlt
dec
cwtl
cmp
sub
popa
lea
mov
pop
cs
push
lods
clc
mov
fmuls
outsb
jge
jl
fwait
enter
data16
das
sub
xor
les
mov
dec
enter
decb
je
cmp
das
xchg
jo
fnstsw
cs
cltd
inc
fiaddl
adc
push
add
add
test
mov
mov
rol
outsb
cmc
lock
sbb
xor
sbb
cmp
repz
sbb
shll
sbb
dec
xlat
pop
loope
mov
icebp
es
xchg
dec
stc
jns
adc
out
call
inc
dec
jp
mov
and
and
lret
or
pop
movsb
in
jecxz
filds
adc
lahf
loopne
jno
or
and
mov
push
xchg
addr16
pop
mov
clc
call
pop
adc
fxam
adc
inc
in
stc
fsts
jne
daa
rcrb
dec
js
mov
sbbl
xchg
cmp
lods
push
ret
mov
dec
inc
mull
mov
out
les
sti
adc
xor
loop
lahf
ja
sub
add
inc
push
cltd
push
inc
popf
out
mov
mov
add
push
pop
add
lods
dec
xchg
pushf
nop
sahf
cmp
lods
or
popf
inc
sbb
dec
xchg
rcrl
popa
cltd
fsub
icebp
push
jg
enter
add
mov
hlt
xchg
fcompl
add
add
xchg
cmp
or
sbb
aas
lea
lretw
push
aad
rcr
icebp
push
mov
iret
jp
fisubs
adc
testb
addr16
dec
out
dec
dec
cmp
loopne
sub
jg
jp
insb
xor
mov
xor
call
testl
das
mov
or
std
sbb
mov
movsl
mov
xchg
inc
nop
aam
cmp
dec
decl
stc
add
movsb
lret
mov
push
out
jb
scas
xor
sbb
sub
orl
jae
stos
or
push
cwtl
cmpsl
xchg
pop
push
sub
mov
fsubrs
adc
in
xchg
lods
push
pop
pop
test
xor
lods
rol
stc
loopne
into
pop
adcl
xchg
cmpsl
dec
cmp
mov
jbe
xchg
pop
xor
mov
loopne
and
sbbl
sarl
jbe
cmp
cmp
xchg
es
jb
test
scas
adc
idivb
hlt
add
mov
mul
sub
cwtl
mov
mov
mov
inc
ficoms
lea
es
clc
mov
and
inc
pop
pop
jnp
inc
nop
lcall
daa
leave
stos
sahf
cs
outsl
push
mov
jecxz
lods
fadd
pusha
jne
mov
mov
lods
jmp
add
popf
push
inc
insl
push
mov
pop
jg
mul
shrl
lahf
mov
dec
call
mov
or
aam
xchg
call
jns
fsubs
push
lcall
sti
aad
push
and
cwtl
adc
pop
in
dec
aas
pop
xchg
aas
cmc
xchg
mov
push
xchg
inc
fidivrl
dec
fiaddl
cmp
divb
dec
and
mov
mov
inc
jo
adc
in
jle
inc
sbb
mov
jae
dec
fwait
xchg
mov
cmp
mov
lcall
xchg
ss
dec
stos
pusha
test
cmp
sub
jg
sbb
sbb
notb
xchg
and
add
sub
fwait
mov
pop
xchg
pop
mov
rcll
xchg
nop
jmp
test
out
out
and
mov
push
pop
mov
test
call
fwait
loope
ret
and
imul
inc
in
imul
xor
cmp
lret
xchg
or
test
sub
int3
sub
xor
add
push
add
stc
dec
lds
mov
sub
mov
inc
out
lea
sti
incb
or
enter
leave
dec
scas
lahf
leave
sar
and
mov
hlt
and
add
cs
mov
mov
into
push
mov
inc
test
fiaddl
xchg
mov
fnsave
ja
stos
xchg
test
pop
fmulp
imul
aam
rorb
inc
jo
dec
dec
push
fnstenv
hlt
into
mov
rclb
aaa
and
pushf
out
jnp
fidivrs
into
mov
pushf
pop
rep
adc
jnp
sbb
cmp
test
mov
js
inc
xchg
and
sbbb
jg
pop
sub
mov
dec
mov
mov
mov
mov
fsub
push
sti
or
aad
push
mov
mov
sub
ficoms
and
xor
push
jmp
scas
cmp
pushf
lods
xchg
or
bswap
and
sub
cmp
jbe
sub
add
std
ret
mov
dec
lret
push
rcl
dec
add
sub
aaa
or
add
push
lock
cmp
aaa
jno
lods
add
test
pushf
cwtl
adc
jno
lods
hlt
aas
fnstsw
aam
clc
xchg
test
fistpl
xlat
pop
xor
pop
inc
push
add
mov
imull
mov
or
fidivrs
sub
jge
sub
push
les
adc
mov
or
dec
stos
lods
push
idiv
sub
clc
sbb
or
mov
pop
mov
and
data16
addr16
adc
push
jl
adc
lcall
hlt
fnstsw
jnp
mov
jno
add
mov
fwait
adc
jle
mov
iret
insb
jns
aam
fwait
jbe
mov
push
push
mov
mov
scas
or
movb
jnp
and
in
and
jl
iret
lahf
adc
sarb
jecxz
sarb
push
xchg
mov
repz
frstor
lea
out
enter
sub
testb
aas
dec
enter
pushl
shll
mov
cltd
jl
ret
pop
inc
hlt
in
pop
fadds
jb
pop
mov
mov
inc
dec
xor
or
add
push
bound
push
push
pop
fcompl
and
inc
and
jo
cli
mov
hlt
lret
inc
mov
xchg
stos
jecxz
test
dec
or
sbb
inc
and
sbb
iret
inc
dec
add
mov
sbb
sahf
pop
outsl
mov
mov
cmpb
repz
pop
insl
xchg
sbb
adc
xor
out
jno
xchg
inc
and
aam
dec
mov
imul
add
mov
xor
les
lock
test
mov
xchg
cwtl
dec
ficoms
push
or
push
mov
mov
mov
pop
movsl
mov
jg
cmpsb
lods
jmp
fimull
pop
out
jno
sbb
push
push
cwtl
int
idiv
insl
shl
adc
shrb
addl
subl
aad
lods
das
xor
xor
mov
outsb
popf
adc
cmp
ss
sub
sub
mov
sar
jae
ret
lea
jns
stc
dec
mov
dec
mov
fcompl
dec
movsl
add
mov
xor
fcoms
xchg
lods
mov
mov
cmp
icebp
sub
dec
dec
inc
fs
lods
repnz
jb
aad
push
adc
fsubs
popa
push
lret
mov
xor
popa
pop
mov
add
add
cld
mov
pop
mov
xchg
mov
test
scas
add
fisttpl
pushf
loope
dec
adc
fwait
shrl
push
leave
push
mov
push
jp
dec
ret
fildll
lock
aad
bound
inc
add
push
test
ljmp
lret
mov
cld
jge
lock
insl
ret
push
cmp
ja
pop
push
scas
mov
fbstp
ljmp
inc
aad
sub
add
lods
adc
or
in
into
sub
out
pop
sub
mov
outsl
nop
sub
sti
jl
push
fcom
movsb
fldt
lods
iret
cmc
mov
lea
push
or
or
mov
sbb
xor
xlat
xchg
ljmp
mov
mov
sbb
cmp
add
mov
add
sub
hlt
xorl
mov
push
pop
sbb
rorl
xor
jp
movsb
pop
pusha
pop
pop
inc
fsubs
sbb
jae
clc
cld
and
mov
jmp
out
fs
test
test
mov
pop
mov
or
xor
data16
mov
push
pop
js
mov
enter
cltd
in
adc
dec
jns
lods
repnz
pop
enter
dec
movsb
mov
mov
mov
mov
clc
sbb
mov
xchg
jle
mov
test
out
pop
adc
dec
xorb
fimuls
dec
push
xchg
push
pushaw
movsl
dec
jl
cmp
lahf
sbb
push
or
xchg
mov
or
jnp
mov
loope
sahf
sbb
bnd
test
mov
xchg
dec
add
in
lcall
push
scas
mov
ss
fcoms
dec
rclb
dec
ret
xor
mov
mov
xor
xchg
mov
pop
cmc
cwtl
jno
rorl
cmp
cmp
int3
daa
hlt
xor
popf
inc
xor
mov
rcl
mov
std
mov
jns
sbb
ret
ss
xsavec
dec
sti
iret
imul
add
add
lods
mov
pop
mov
mov
clc
ret
jae
lea
cmpsl
dec
stos
roll
pop
and
adc
sbb
leave
and
fsubrl
and
mov
and
xchg
mov
xchg
adc
jo
push
xor
xchg
mov
adc
and
rorb
daa
adc
mov
sti
pop
xlat
rcrl
jle
pop
sub
orl
orl
les
ja
addr16
or
push
adc
sarb
adc
add
mov
inc
rolb
dec
loop
das
jns
add
das
imulb
cmp
cmpb
jl
mov
orl
cld
call
xchg
std
cmpsb
insb
loope
popa
inc
inc
ficoms
orb
gs
dec
push
inc
xor
decb
or
fdiv
cmp
sarb
inc
jge
sub
shll
subps
ja
dec
push
dec
add
clc
fwait
stc
shr
in
or
data16
inc
movsb
clc
push
andl
rcl
jne
clc
movsl
in
push
outsl
push
les
ficoml
mov
jmp
pop
sbb
xlat
aas
lds
das
fisubrs
sbb
shrb
in
aaa
jnp
cmp
dec
stc
ss
mov
es
and
jno
xor
test
dec
add
pop
fmull
xor
mov
add
pop
scas
mov
jb
dec
pop
mov
lret
aam
push
loopne
lock
adc
addr16
pushf
jp
adc
stos
jl
push
idiv
jns
cmc
inc
nop
pop
or
loop
sub
icebp
hlt
mov
aaa
fmuls
xchg
int3
data16
ljmp
dec
mov
jno
jns
mov
fdivrl
inc
sub
cmp
and
mov
jl
cmc
fcompl
mov
xor
jp
dec
sti
cmpsl
scas
in
mov
pop
inc
in
adc
and
adc
cmp
cli
imul
mov
add
std
sub
popf
dec
into
or
add
jno
push
loope
push
int3
lahf
pop
das
and
addl
loop
insb
les
pop
or
mov
jl
mov
xor
jg
cmp
xchg
addr16
and
mov
adc
inc
dec
in
outsl
insb
lods
push
inc
mov
dec
push
dec
jge
jmp
jnp
lods
or
dec
aaa
ss
outsl
popa
pop
lret
dec
xchg
roll
sbb
outsb
push
aaa
mov
sub
dec
imul
aad
push
rcr
push
ret
jecxz
dec
pushf
es
pop
xchg
daa
sub
sti
or
mov
push
push
jo
lahf
gs
sub
mov
xchg
lea
sti
in
and
pop
dec
fldenv
sub
rcrb
insl
out
push
std
outsl
repnz
add
out
cmp
subl
xchg
cmp
pusha
popf
lock
xchg
dec
dec
pop
jmp
cvtpi2ps
fmull
sarl
adc
mov
repnz
roll
mov
mov
js
xor
pop
hlt
out
or
mov
add
jnp
inc
ja
and
bound
or
fsubrs
fildl
push
cmpsb
jp
inc
mov
fdivr
xchg
mov
dec
and
add
xchg
bound
mov
or
pop
add
fiaddl
pop
jbe
and
pop
mov
mov
loopne
ljmp
into
mov
aaa
mov
add
inc
lods
push
push
sbb
xchg
outsl
mov
iret
sub
xchg
out
mov
out
ss
outsl
sbbb
and
into
inc
dec
sahf
lahf
xor
dec
ds
inc
movsl
mov
jp
test
ja
arpl
xchg
xor
sub
es
bndstx
xchg
in
rol
mov
push
idivb
test
mov
data16
cmp
push
adc
inc
xchg
arpl
mov
add
mov
sbb
std
inc
aas
ljmp
js
cmp
xchg
mov
mov
out
or
dec
repz
add
sub
jns
jae
ret
push
mov
loop
mov
out
push
int
xchg
je
aaa
dec
sbb
mov
data16
lret
adc
xchg
pop
xlat
movsb
fcomps
dec
insl
fcmovu
add
lods
pop
pop
andl
mov
xor
sub
repz
sub
loop
ret
scas
mov
out
cmpsb
mov
mov
and
or
cltd
rcrb
pushf
ret
ret
mov
fisubl
mov
xchg
xchg
pop
jl
sti
dec
jae
out
sub
cmovs
push
or
sbb
mov
mov
addr16
shl
fnstsw
xor
out
pop
or
insb
imul
std
cld
sbbb
cld
adc
fstpl
push
incb
fbstp
sti
jp
inc
and
xlat
in
mov
lds
popf
ljmp
or
add
cld
nop
aas
mov
push
pusha
mov
jb
sbb
cmp
fistpl
scas
pop
test
push
xchg
fld
loopew
add
and
subb
cmpb
repnz
or
xor
xchg
lahf
les
mov
into
popf
loope
inc
mov
sub
shl
push
xor
ficomps
shl
movl
ljmp
mov
add
sti
mov
mov
fldl
aaa
mov
push
fisttpl
sub
sbbb
aad
inc
pop
push
ljmp
sub
pop
push
mov
cmp
clc
mov
pop
push
add
lahf
popf
add
add
xchg
test
dec
push
pop
xor
int3
in
gs
and
ret
xchg
addr16
cli
or
jno
mov
cwtl
sub
sti
and
push
lods
jg
push
adc
pop
cmpsb
leave
adc
insl
sahf
xlat
cld
stc
mov
bound
pop
popf
fdivl
push
idivl
cmp
test
jge
adc
inc
push
mov
mov
and
adc
dec
sbb
mov
int3
sub
pushf
lea
or
mov
ljmp
push
xor
int
je
dec
mov
std
inc
mov
loop
fdivrl
loopne
daa
add
mov
xchg
leave
aas
in
push
sbb
push
pop
ja
aas
test
dec
xor
orb
cmp
jp
dec
sbb
cmpsl
jmp
lcall
test
push
dec
pop
xor
lea
jns
mov
inc
and
fsts
clc
push
sbb
es
inc
or
mov
mov
fcoms
inc
xor
inc
adc
lret
data16
in
adc
dec
inc
inc
cmp
bound
push
dec
lret
xchg
xchg
xchg
fwait
mov
pop
sub
push
cwtl
test
fucomi
gs
popa
mov
mov
in
in
ds
jns
and
jle
push
out
mov
pusha
insl
cmp
add
repz
mov
lods
fmuls
int
or
repnz
outsl
lcall
and
or
cmpsb
aam
xor
fsubr
ja
or
and
mov
aaa
mov
cmc
aam
push
push
xchg
cwtl
mov
or
or
sbbl
ja
into
push
pop
pop
arpl
lods
pop
cli
stc
stos
push
outsl
or
es
hlt
sahf
and
sub
shrl
loopne
jae
xchg
or
jae
das
pop
flds
ret
daa
out
dec
cmp
idivl
fwait
loopne
or
out
loopne
xchg
add
gs
fwait
mov
pop
test
dec
xchg
sti
jb
gs
and
push
std
xchg
cmp
ljmp
xor
addr16
lea
xchg
popa
sti
cs
inc
movsb
rorl
cmpb
or
jl
lds
cmp
es
push
lahf
subl
outsl
std
lea
aam
cmpsl
sbb
stos
mov
sti
push
pop
inc
loop
xchg
nop
lahf
cs
je
mov
adc
pop
mov
mov
mov
outsl
sbb
jle
and
jo
xchg
aam
adc
mov
mov
pop
in
bound
cltd
xor
xchg
shll
call
add
aad
rorl
push
and
adc
or
sub
cmp
lds
mov
aad
inc
test
outsb
pop
add
mov
cwtl
sarl
push
mov
btr
inc
arpl
enter
add
add
jno
das
addr16
sub
sub
sbb
cmp
mull
sub
or
add
dec
push
in
cmpsb
inc
inc
xchg
jp
ss
addr16
fcompl
dec
in
push
cmpsl
dec
sbb
repz
gs
std
inc
and
pop
push
mov
sub
inc
bound
pop
and
aam
mov
and
into
sahf
stos
mov
outsl
outsl
jmp
mov
push
jo
push
sbb
jae
mov
jae
arpl
inc
mov
hlt
ret
call
xchg
outsb
inc
mov
cmc
xchg
sub
push
fdivl
adc
mov
cmpsb
push
add
cltd
lcall
imul
je
mov
mov
or
cmp
pop
stos
cmp
les
int
sub
pop
ljmp
lea
test
mov
movsb
adcb
mov
jge
sub
xor
repnz
pop
dec
inc
sbb
xchg
or
repnz
push
adc
cmp
mov
loopne
jp
ja
leave
mov
shll
push
pop
sub
shr
add
out
xor
inc
in
add
mov
addr16
sbb
iret
cmpsb
xor
and
mov
mov
lea
cmpsl
mov
cmp
repnz
jl
repz
dec
dec
mov
mov
jg
xchg
les
pop
mov
lret
lods
sbb
cmp
xorps
inc
add
fs
add
and
or
jge
dec
inc
jne
jnp
xor
xor
call
jle
mov
add
or
lds
mov
jmp
fisubs
jae
sbb
jecxz
cmpsb
jp
push
mov
sub
push
adc
pop
rcrl
jmp
movsl
pushf
push
mov
ret
bnd
sub
mov
xor
mov
push
pushf
stos
ret
push
dec
aad
mov
inc
imul
les
push
push
push
inc
scas
popa
in
test
cs
or
icebp
pop
mov
mov
jnp
adc
sub
jo
outsl
mov
sbb
cmp
cmpsb
fldt
jl
pop
std
xchg
xchg
cli
jle
jge
loop
fcmovnu
pop
insb
arpl
lcall
sub
lods
addr16
mov
pop
out
pop
pop
or
in
mov
mov
cwtl
push
gs
jno
dec
stos
mov
sti
jae
push
mov
dec
ds
push
jmp
jo
lock
cmpb
stc
mov
es
jmp
jbe
call
movsb
xchg
jns
nop
sub
inc
insl
jl
leave
hlt
jae
popf
mov
jns
sbb
pop
lods
insl
mov
mov
and
dec
pop
int
jecxz
aad
leave
ret
cltd
cli
xchg
cmp
test
add
rorl
scas
dec
pop
adc
lock
xchg
push
jne
scas
adc
pop
xor
rcrl
popf
xchg
push
test
test
mov
rol
out
aad
jno
adcl
mov
aam
jno
xor
shlb
outsl
add
popf
jbe
cmc
leave
push
ljmp
cltd
jge
test
dec
testl
in
popf
dec
pop
and
sbb
arpl
inc
fstl
sti
mov
gs
in
out
addl
inc
adc
xchg
mov
imul
or
out
fwait
push
faddl
mov
xchg
test
jae
daa
jae
fsubs
jmp
and
inc
xor
dec
xor
jo
xchg
bnd
sbb
pop
les
ret
jmp
cmp
popf
pop
dec
loopne
sbb
into
fdivs
dec
push
popa
scas
int3
or
fdivp
cmpsb
lods
adc
xchg
mov
stos
dec
sahf
pusha
ss
or
je
jo,pt
jg
mov
outsl
mov
lret
mov
jp
mov
or
adc
sti
fs
mov
hlt
rcrb
es
sub
lods
adc
sbb
stc
mov
inc
cmp
xlat
pop
outsl
sbb
sbb
cltd
mov
pop
jb
or
xor
shll
test
push
pop
pop
shlb
lahf
mov
xlat
jl
mov
sbb
mov
fsubrs
mov
ret
adc
pusha
testl
push
xchg
sub
xchg
inc
jl
ficoms
add
insb
dec
notb
pushf
sti
push
mov
mov
mov
dec
call
lret
loopne
in
cmp
mov
pop
jne
mov
in
imul
pop
xchg
sbb
shll
push
pusha
pop
out
ret
out
dec
test
out
and
mov
fwait
pusha
cmp
push
or
notb
inc
cmp
and
mov
mov
lock
mov
mov
adc
jp
jb
lcall
stos
mov
push
push
fisubl
aad
inc
lret
and
mov
mov
test
popa
push
sub
or
sub
movsb
ljmp
adc
lds
sbb
xchg
ja
hlt
int
pushf
cmpl
mov
sub
roll
std
in
jns
pop
dec
push
push
cli
setle
stos
std
mov
add
jmp
lods
pop
pushf
inc
ret
sbbb
outsl
outsb
mov
jp
xchg
dec
jle
sti
imul
push
mov
int3
mov
imul
push
fisttpll
imul
or
push
cmpsb
in
jne
movsl
inc
inc
mov
leave
fucomi
stos
xchg
popf
fcomps
adc
dec
pop
lods
lahf
cmp
mov
mov
cmc
xlat
pop
sbb
daa
mov
jle
test
inc
xor
push
dec
mov
lods
push
cmc
inc
and
jne
mov
repnz
setns
je
and
ljmp
mov
in
popa
int
adc
cmp
cmp
scas
es
paddusw
push
adc
dec
aam
int3
jmp
or
orb
in
setbe
jno
mov
movsl
xchg
cmp
cmp
rcl
sbb
pop
call
push
cmp
jle
and
jge
push
push
or
cmp
or
cmp
and
js
cmp
addr16
inc
push
mov
push
stc
mov
mov
arpl
iret
add
ret
mov
sub
cmp
xchg
das
sbb
pop
push
in
ss
mov
lods
lret
push
xor
push
jmp
mov
sar
outsb
lods
out
mov
lods
lahf
cmpsb
mov
push
adc
gs
sbb
jo
ret
xchg
addl
lea
mov
xchg
or
mov
sub
mov
jecxz
push
inc
cmp
jle
iret
mov
jns
popf
and
or
insb
lret
cmp
in
sub
sub
das
pop
test
xorl
loopne
bound
testb
imul
pshufw
inc
ljmp
popa
jmp
xchg
mov
lret
sbb
ret
arpl
daa
in
sub
fidivl
push
shll
mov
push
dec
por
xor
or
add
mov
push
dec
inc
int
movsb
aad
leave
mov
and
inc
fcmovnb
int3
rclb
bound
pop
aad
imul
inc
sub
cmpsl
test
push
ds
mov
sub
adcl
cmp
lret
outsb
and
mov
cmc
std
rcll
cmc
cltd
mov
xlat
and
push
mov
test
xor
xchg
cmc
pop
add
arpl
xrelease
test
xchg
das
je
sub
mov
mov
xchg
mov
decb
mov
jo
ret
fxch
ret
mov
cli
aam
bound
add
sub
repz
adc
shl
rcl
es
dec
cwtl
mov
loop
xchg
dec
scas
or
fcompl
lret
jg
testl
das
fidivrl
incl
mov
das
dec
scas
pusha
stos
pop
sarl
addr16
cmpsl
in
pop
or
in
lcall
ss
sub
inc
dec
mov
ja
sub
out
mov
dec
lahf
aad
inc
stc
cmp
out
loope
and
mov
cltd
nop
inc
sti
cwtl
sub
sbb
cmp
scas
out
jp
rorl
outsb
inc
mov
jo
aad
fucomi
mov
jmp
test
adc
ja
rorl
xor
daa
lock
imull
mov
jnp
jnp
add
cmp
fcomip
sbbb
add
call
into
and
leave
mov
rclb
aas
in
lock
enter
inc
adc
out
js
or
pop
lret
mov
icebp
lock
nop
mov
outsl
iret
jg
pop
push
cld
lods
xlat
cmp
push
arpl
aad
and
mov
stos
or
iret
repnz
pop
rorb
or
xchg
mov
dec
stc
xchg
xor
cli
jne
push
push
adc
xchg
dec
mov
jle
mov
mov
push
lods
jb
std
mov
aas
push
jno
cmpsb
cmc
arpl
loopne
fnstsw
shrl
xor
or
pop
cmp
mov
outsb
faddl
and
hlt
scas
sub
and
xor
das
push
loop
adc
and
jl
mov
mov
sub
cmpsb
fnstsw
ret
mov
mov
xor
inc
filds
mov
mov
daa
scas
xchg
in
mov
ror
je
lods
jnp
pop
js
leave
xor
xchg
inc
popa
ficomps
mov
mov
mov
pop
push
jmp
add
sbb
fwait
sbb
cmp
popa
je
jae
adc
arpl
dec
pop
ja
shlb
and
cmc
or
and
xchg
outsb
mov
xchg
lds
cltd
mov
xor
and
lods
mov
xchg
dec
stc
daa
repz
jno
pop
jo
push
shll
cmp
pop
or
fsubrp
stos
test
mov
call
loope
imul
mov
jb
out
jne
jns
jp
test
lock
ds
ljmp
cld
aas
shll
or
cmp
mov
mov
jg
cmp
and
mov
test
in
sarb
inc
jae
popa
aas
pop
je
add
and
mov
scas
dec
xor
outsl
cmp
sbb
adc
ret
push
add
push
mov
mov
or
pushf
pusha
cltd
sub
lods
xor
cmp
out
mov
arpl
sbb
xchg
aad
cmpsl
push
jo
push
loope
pop
jns
sahf
scas
pusha
fs
push
mov
push
mov
push
adcb
pop
popa
xchg
jp
xcrypt-ecb
cmpsl
or
xor
mov
dec
lds
xchg
or
int
sbb
add
rcl
cwtl
lcall
movsl
bound
mov
adc
das
lock
and
lret
xchg
push
pop
outsl
imul
jnp
push
outsl
dec
xor
in
clc
adc
add
sbb
adc
mov
add
jmp
xor
cli
jl
and
add
mov
fbstp
je
aam
stos
mov
fistpll
adc
push
xchg
sbb
pop
data16
jg
dec
rolb
mov
not
cld
popa
movb
jge
or
cmpl
and
push
test
pushf
stos
jl
imul
ja
inc
and
xchg
addr16
sbb
or
test
jmp
mov
sub
xchg
cld
add
out
and
repnz
outsl
push
pushf
xor
scas
and
lds
sub
pop
or
add
xchg
push
pop
xor
xchg
dec
fimull
pushf
stos
sar
mov
cli
jg
fisttpll
add
les
jno
int
lock
sub
jp
sbb
xchg
sub
es
es
mov
test
filds
imul
aad
push
adc
mov
and
xor
and
adc
jae
mov
xlat
xor
orl
loop
xchg
mov
mov
ja
jae
sbb
movl
stos
adc
cmp
insl
test
and
jo
push
mov
push
ret
repz
add
jno
add
aaa
into
cmc
into
loop
hlt
jb,pt
mov
mov
mov
ficoml
sub
and
and
push
les
imul
xchg
jp
adc
aas
mov
fiaddl
or
outsl
ja
pop
adc
fidivl
sub
mov
jno
or
sti
int3
dec
fldenv
cmp
cmp
test
dec
out
push
mov
int
pop
test
pop
dec
adc
or
and
ret
psadbw
mov
ficompl
arpl
imul
fwait
outsl
mov
xlat
xchg
out
scas
aam
aas
jp
add
outsl
add
mov
out
arpl
push
daa
add
or
fst
in
mov
bound
shll
out
push
mov
arpl
sbb
push
dec
or
pop
hlt
sbb
xchg
sbb
subb
addr16
inc
cmp
push
mov
xchg
add
add
ret
mov
adc
push
add
lret
sbb
xchg
mov
int
data16
push
lods
xchg
sti
pop
into
cmp
int
std
lret
cltd
push
pop
das
into
repz
outsb
test
xchg
imul
push
in
mov
mov
ret
cli
mov
pop
sub
lds
vphsubdq
mov
inc
pop
adc
jl
push
mov
dec
jmp
adc
mov
inc
loopne
xchg
loopne
or
aad
mov
fistpll
out
nop
je
and
jae,pt
out
push
mov
cmpsl
lock
pop
fdivl
movsb
jae
adc
cs
pop
sub
xor
dec
cld
cmp
push
popa
clc
push
fdivrs
xor
loop
lock
mov
add
mov
je
fstpl
jne
mov
adc
push
cmp
adc
dec
mov
mov
jo
bound
and
mov
shlb
jmp
mov
test
loop
push
cmpsb
iret
sbb
add
mov
mov
mov
movsl
sbb
cld
je
mov
aad
sub
into
divb
ret
outsl
stos
push
jge
fidivl
sahf
sub
cmp
mov
mov
mov
gs
or
hlt
push
cmp
adc
xchg
into
pop
cwtl
ja
xor
lods
fdivrs
push
cmp
mov
lret
jbe
rcr
sbb
cld
movsb
cmp
push
aam
sub
movsl
popf
cwtl
sbb
stos
int
sti
mov
mov
inc
sub
loope
jb
jbe
pop
lds
lcall
mov
dec
mov
shll
jp
loop
aas
and
es
insb
sbb
inc
or
out
xor
xor
pushf
jns
pop
out
inc
in
int
ljmp
dec
pop
nop
mov
daa
inc
roll
xchg
jg
jp
mov
mov
outsl
test
notb
pop
into
mov
fistps
jne
mov
and
popf
jnp
mov
loop
cmp
pop
pop
xchg
jne
ficoml
jp
rolb
movsl
dec
adc
test
in
add
fs
leave
out
and
lock
pop
inc
nop
out
inc
jg
test
xchg
movsl
and
pop
mov
cmp
and
or
add
xchg
std
jl
subb
test
out
lock
and
data16
iret
je
mov
pop
scas
mov
addr16
inc
push
pop
loop
mov
sbb
ljmp
call
or
aam
jbe
flds
push
jne
xlat
lods
jne
dec
les
add
mov
rorb
repz
mull
clc
enter
test
mov
cld
cld
adc
and
out
leave
cltd
stos
repz
ja
lock
les
pop
xchg
xchg
loope
cmpsl
sub
ficoms
jle
fs
sbb
rolb
or
mov
cli
mov
sbb
sbb
cmp
push
xor
push
and
jne
pop
cmp
daa
div
fs
cltd
es
jno
push
pop
test
add
xchg
mov
movsl
in
movsl
fildll
data16
lock
cmpsl
fdivl
and
hlt
ret
xchg
popf
imul
ljmp
pop
in
lds
nop
push
stos
lahf
mov
out
jl
push
xor
adc
adc
js
jno
out
inc
and
pop
adc
js
orl
add
movsb
frndint
rol
xor
mov
sbb
mov
inc
ss
movsl
cmp
inc
lret
mov
mov
push
pop
outsb
popf
inc
lcall
pushf
daa
mov
cmp
fmull
xchg
and
xlat
fwait
out
jp
xchg
jmp
imul
sub
lret
lret
or
xlat
lock
jnp
inc
and
dec
imul
and
mov
jo
inc
mov
push
cmpsl
rorb
aas
stos
in
and
mov
or
push
adc
push
and
rclb
adc
das
dec
aam
pop
jne
push
scas
jno
xchg
addb
mov
sbb
cs
lea
mov
add
mov
xchg
cmpsl
pop
imul
jnp
cltd
int
xchg
mov
xchg
ret
xor
or
aas
mov
adc
mov
pop
jo
xor
cmp
cmp
sbb
jmp
movsl
imul
push
clc
jecxz
sahf
into
mov
mov
mov
pop
xor
cwtl
dec
cmp
or
pop
into
je
push
movsb
sbb
push
sbb
std
iret
iret
shrl
dec
lock
mov
sbb
xchg
repnz
nop
sbb
daa
cs
jo
push
int3
xor
in
dec
mov
cmp
and
dec
enter
lock
add
dec
movsb
push
lock
dec
insl
mov
insl
enter
or
sar
decl
mulb
ja
fdivrl
out
pop
outsb
stos
xchg
lods
insl
sbb
push
mov
ja
xor
es
jp
mov
inc
mov
push
jnp
aaa
sub
pshufw
test
push
sub
push
js
lcall
adc
movsl
jnp
loopne
sbb
pop
inc
jmp
out
jmp
sbb
je
pop
push
lea
fsubr
dec
pop
push
mov
mov
xor
je
or
in
push
in
popf
mov
cmpsb
dec
add
xchg
subb
dec
lcall
mov
ret
inc
mov
rorl
shrb
sbb
outsb
jg
sbb
jmp
jbe
or
rcr
adc
test
xchg
imul
bound
push
mov
leave
dec
negl
inc
sub
clc
inc
loope
xchg
fnstenv
stos
bound
daa
cmc
imul
dec
lds
jne
push
in
mov
push
pop
xchg
xchg
push
cmp
add
test
lock
lret
cmp
dec
pop
jg
jecxz
icebp
rcl
push
add
aad
mov
xchg
adc
lea
test
push
cltd
stos
jmp
imul
mov
mov
cli
pop
adc
aas
add
aas
test
leave
stc
add
sbb
and
nop
clc
mov
and
es
mov
xchg
lock
sti
dec
stos
notl
in
jmp
push
cmp
jp
xchg
jo
sti
in
inc
dec
push
pop
sbb
jnp
sbb
loop
lret
je
mov
scas
sub
ret
mov
and
pusha
fidivs
pop
movsl
sbbl
ss
push
mov
mov
ret
mov
lods
cmp
push
loopne
out
insb
push
ljmp
sub
adc
in
sub
sbb
and
imul
icebp
fists
enter
js
adc
pop
or
nop
stc
ss
shlb
stos
pop
cmp
cwtl
scas
fcomps
sub
sub
adc
mov
cmp
jnp
mov
enter
dec
data16
pop
cmp
cltd
sub
adc
or
jp
fs
aad
js
mov
shrl
mov
push
sbb
aaa
mov
add
or
je
push
add
inc
or
push
fwait
rcrl
divl
das
pop
mov
or
gs
stos
or
ficomps
sahf
push
es
insb
movl
cmp
jae
bound
gs
pop
outsl
push
int
mov
cmp
in
push
mov
stc
pop
fsts
lcall
ret
xlat
adc
jbe
loope
enter
imul
xchg
adc
lds
push
ljmp
xchg
push
sub
and
mov
test
jns
xchg
repnz
aas
outsb
scas
cld
rclb
rorb
pop
jl,pn
aad
push
lds
movsl
pop
add
push
mov
cld
sub
fs
shll
xchg
adc
in
xchg
sub
or
loop
jle
js
movsb
sbb
dec
clc
and
addr16
xor
in
cmp
lcall
jbe
adc
add
sbb
mov
lock
jne
in
mov
addr16
pusha
sbbl
mov
repz
or
nop
in
orl
mov
dec
js
in
inc
iret
sub
popf
mov
lret
repnz
pop
sbb
jecxz
adc
adc
cmc
or
dec
fnstsw
stos
sub
push
mov
pop
xor
into
lea
fwait
shll
add
xlat
movsl
xchg
inc
fs
in
fildll
ret
pop
mov
pop
mov
in
pop
adc
out
dec
sbb
or
pop
mov
jmp
imul
imul
loopne
repz
xchg
xor
out
and
test
test
adc
pop
test
repnz
inc
adc
push
inc
xchg
adc
sub
pop
testb
movsl
cmpsl
das
push
mov
xor
dec
xor
jl
jge
xor
test
jno
xchg
inc
or
rol
xchg
jmp
xlat
sbb
pop
inc
les
xchg
and
mov
jecxz
jp
jnp
out
test
in
jge
in
in
inc
sub
jecxz
loop
push
xchg
fwait
jns
int3
lcall
pop
mov
out
push
cmp
sub
cmp
mov
cmp
lock
insb
es
push
xlat
inc
or
lods
lahf
es
push
xor
mov
enter
sub
fidivs
pop
pop
test
test
sub
inc
shl
cld
jl
jmp
imul
fidivl
popa
inc
ljmp
push
movsb
out
adc
sbb
ret
jecxz
lahf
xor
scas
test
push
sti
xor
mov
xor
xor
push
ret
verw
arpl
mov
aad
cli
pop
cwtl
ljmp
cmp
push
or
js
nop
fs
and
or
mov
call
cwtl
idivb
jb
scas
mov
xchg
mov
xchg
js
rcll
adc
ja
or
mov
xlat
inc
jno
push
pop
fcmovne
inc
pop
leave
gs
sbb
and
fnstenv
dec
icebp
cmp
lret
lods
adc
adc
mov
aad
pop
js
inc
and
adcl
int
loop
jbe
call
in
popf
mov
pusha
sbb
testl
test
mov
mov
adc
je
leave
pop
pop
imul
jnp
mov
pop
xchg
cmp
jnp
ret
cmp
fistpl
subl
aaa
xchg
pop
sub
mov
adc
jl
jmp
es
lret
xchg
adc
xor
sub
addb
mov
outsl
movsl
adc
repz
not
mov
aad
pop
push
lcall
cmp
pop
out
loopne
pushf
je
sub
ja
ss
push
pop
pop
pop
aam
jo
test
push
and
mov
fstps
cmp
xchg
movb
xor
jns
inc
loopne
add
dec
jg
cmp
xchg
aaa
popf
mov
push
rcl
loop
xor
jle
adc
pushf
and
in
xorb
pusha
addr16
jle
xor
dec
add
pop
pushf
mov
sbb
or
push
and
int
rclb
xchg
cmp
call
fwait
gs
push
popf
inc
add
inc
mov
mov
jo
pop
idiv
dec
fisubl
pop
add
cmp
cmp
and
dec
jecxz
fs
popa
sbb
out
cltd
je
clc
cs
idiv
and
inc
mov
bound
sbb
push
or
push
xchg
popf
mov
fildl
stc
into
div
adc
lods
pop
mov
loope
pop
jp
rorl
addr16
dec
xchg
cmp
mov
push
pop
int
pop
sbb
cs
movsl
push
jnp
jl
es
lods
roll
addr16
push
jp
fdivrs
repz
xchg
arpl
bound
lret
test
mov
enter
xor
pop
pop
pop
and
sub
fisttpl
stc
stos
rcrl
inc
lcall
jns
int
fs
popa
or
pop
std
rcrb
pop
adc
sub
xlat
or
pushf
hlt
js
clc
hlt
bound
aaa
ds
xlat
jl
rcr
loope
sbb
add
adc
adc
cmp
push
and
dec
aam
fwait
sbb
popa
cmc
mov
sbb
pop
loop
loop
in
push
adc
outsl
and
and
dec
lret
fsubrs
inc
dec
in
xor
cmp
push
and
fcmove
outsl
movsb
fstpt
sbb
xchg
stc
and
sbb
or
iret
jno
clc
lret
loop
or
push
pop
xchg
add
ret
movsb
mov
call
sbb
aaa
push
nop
sub
jae
sub
pop
sarb
repz
out
and
push
fidivrl
mov
push
or
test
cmp
ret
mov
movsb
pop
inc
sub
xchg
sub
addr16
push
inc
cmp
movaps
xchg
stos
les
jne
int
ja
cmpsb
jmp
sbb
sbb
cmp
aam
jmp
push
aam
jne
outsl
out
iret
ss
aad
das
mov
inc
add
xor
mov
call
outsl
cli
rorb
xor
or
jl
xchg
shrl
fadd
add
imul
mov
in
test
sarl
jg
jl
cli
fwait
das
fildll
in
fcomip
movsb
scas
pop
mov
ret
mov
out
test
lods
fldcw
pcmpeqd
cmpsb
pop
cmpsl
cmp
dec
mov
insl
xchg
dec
repz
sti
adc
out
xchg
leave
push
lds
shlb
add
insb
mov
leave
jbe
cmp
push
out
cmp
int
ret
nop
mov
dec
iret
inc
dec
sub
pop
sub
xlat
cmp
inc
mov
jb
es
std
cmp
pop
stos
shl
insl
and
arpl
adc
sub
sbb
push
adcb
shll
mov
and
dec
mov
dec
adc
std
shrb
mov
enter
mov
lods
inc
test
push
xor
and
outsb
push
out
addr16
movsb
out
pop
mov
dec
aad
aad
cmp
lahf
arpl
mov
mov
mov
xor
sarb
xorb
cwtl
cli
rclb
pop
ds
data16
out
call
or
jmp
stos
repnz
roll
push
movsb
jl
imul
fstl
add
xchg
or
push
pop
inc
dec
xor
repnz
pop
pop
mov
cltd
sub
shll
in
mov
mov
outsb
push
loope
out
test
inc
aas
outsl
inc
mov
cmp
jns
mov
mov
dec
mov
imul
sbb
pop
pusha
sahf
aaa
lahf
xchg
mov
and
fiadds
pop
jae
push
xlat
add
inc
adc
in
sbb
sub
mov
test
nop
cld
scas
addr16
push
shll
mov
out
xchg
mov
cmp
jnp
sbb
mov
jl
xor
roll
pop
pop
mov
dec
addr16
mov
jg
lea
mov
mov
add
ja
nop
dec
xor
xor
add
pop
lds
pop
or
rcrb
cld
dec
cmpsl
sbbl
push
inc
and
or
add
int
dec
dec
mov
sbb
ret
pusha
nop
in
sarb
test
imul
mov
pop
and
add
jae
hlt
negl
clc
add
xor
imul
xor
negl
out
into
mov
mov
jl
mulb
mov
push
mov
xchg
mov
inc
or
cltd
sub
mov
xchg
mov
rol
xor
push
jecxz
ffree
push
fldt
jnp
fwait
iret
sub
std
pushf
sub
sub
mov
inc
adc
jnp
out
jo
jecxz
sub
repz
les
inc
ss
out
pop
std
enter
add
push
shlb
into
inc
sub
mov
sti
lahf
pusha
or
fdivrp
inc
icebp
add
pslld
mov
cmp
enter
stos
push
aad
stc
mov
ud1
mov
and
iret
loop
lds
jae
mov
scas
mov
push
stos
adc
lahf
lea
xlat
add
out
mov
loopne
or
cmpb
lret
in
or
std
loope
fwait
xor
subb
or
inc
out
int
xor
jge
or
jns
iret
inc
in
insb
xchg
mov
enter
adc
testb
and
sbb
aas
add
ds
xorb
lcall
xchg
imul
mov
repz
in
xor
cmp
sub
lret
xchg
adc
cmp
ds
jno
mov
lcall
hlt
or
cmp
lret
out
and
sahf
ljmp
adc
mov
fwait
pop
mov
jbe
cli
push
and
popa
and
push
push
loope
jns
cwtl
mov
mov
add
loopne
and
imul
sub
pop
lcall
add
out
jno
sbb
sub
xchg
filds
push
fsubl
cmpb
sub
pop
inc
lods
dec
adc
push
loope
fcomps
loopne
dec
ret
inc
xor
out
pop
cwtl
mov
dec
mov
pop
xorb
adc
mov
rcrb
pop
inc
imul
insb
inc
in
lret
mov
je
push
sub
mov
aaa
xchg
arpl
dec
rcrl
mov
imul
dec
insl
ljmp
mov
dec
sub
xchg
out
xchg
cmp
cmp
adc
mov
iret
and
loop
fldt
push
in
push
fucomp
bnd
and
xchg
pop
in
shr
or
sub
ljmp
jecxz
push
clc
lcall
sub
adc
aas
push
imul
adcl
addr16
mov
test
adc
push
jb
cs
push
les
dec
icebp
mov
or
test
pop
add
mov
xchg
addb
mov
xor
push
xchg
mov
repnz
sbb
cltd
imul
std
insb
out
shll
jg
push
cld
cmpb
mov
outsb
add
in
mov
add
sub
aaa
mov
aam
mov
mov
mov
gs
loop
cmpsl
mov
pop
pop
sbb
int
cs
mov
enter
js
mov
cli
data16
jle
cltd
lds
insb
pop
xlat
lods
subb
pusha
sbb
mov
jle
mov
scas
add
aaa
xor
andb
leave
in
shrb
jle
inc
lahf
outsb
add
test
push
leave
nop
mov
inc
adc
or
cmp
lcall
pop
push
add
out
jg
movsl
cmp
dec
add
or
jmp
out
icebp
xchg
rcl
dec
fildl
sbb
das
push
adc
pushf
xchg
movsb
pop
inc
jp
lock
scas
ss
das
inc
sbbb
xchg
jo
in
push
cld
jp
aam
std
mov
in
fstpl
mov
subl
scas
xchg
fs
xchg
or
jl
test
add
int3
arpl
imul
jns
stc
jmp
mov
xor
sub
jl
fdivp
es
add
add
jo
push
inc
orl
lahf
push
push
pop
or
push
or
xor
mov
push
mov
or
dec
push
mov
push
cli
jae
xor
mov
jg
fisubrs
aaa
jecxz
inc
adc
iret
adc
mov
xor
inc
test
adc
popa
jb
push
jle
subl
lret
scas
scas
fiaddl
xor
jne
sub
sub
pop
jo
stos
xchg
dec
mov
dec
push
cmp
cmp
pop
inc
push
insb
stos
fcomp
dec
or
inc
fisubl
aad
ds
jbe
dec
clc
xchg
xor
sub
pop
push
xchg
pop
arpl
hlt
jo
mov
push
add
test
pop
imul
mov
push
and
loop
inc
inc
scas
mov
lcall
push
sbb
pop
dec
push
lds
sbb
lods
push
ja
add
mov
xor
out
sub
cmc
dec
dec
fisubrl
jb
fwait
loopne
inc
push
dec
jmp
mov
xor
int3
push
push
pop
inc
sbb
push
mov
pop
ret
xor
lret
imul
add
into
mov
mov
cmp
push
push
sbb
shl
sub
mov
in
das
sub
dec
dec
jmp
lret
je
inc
cmp
push
xor
sti
xor
xchg
in
push
xchg
jno
daa
out
pushf
cld
int3
and
test
inc
xchg
icebp
add
sti
or
inc
push
popf
arpl
sbb
es
loopne
inc
push
cmpsl
push
xchg
icebp
push
adc
inc
test
jmp
mov
inc
ret
pop
xor
mov
lahf
or
pop
into
scas
stos
movsl
aam
mov
sbb
shl
mov
add
aaa
dec
xor
push
jge
jmp
fs
jb
and
orb
scas
mov
mov
cmc
jl
roll
lahf
call
pop
jmp
movsb
fdiv
rcr
hlt
xchg
sub
dec
inc
mov
add
aad
push
add
pop
nop
pop
jecxz
xor
inc
jo
adc
in
aas
xor
iret
sub
sbb
mov
or
test
cmc
add
aam
in
xor
in
inc
aas
sbb
ljmp
sbb
jo
sbb
je
pop
outsb
push
lds
ret
add
popa
sahf
xchg
push
sbb
aas
mov
cmp
aad
add
xchg
ret
mov
or
add
cmp
or
data16
push
sbb
mov
pop
lds
xchg
nop
mov
mov
sbb
movsb
out
push
aas
ja
mov
dec
inc
pop
xchg
jb
dec
arpl
mov
mov
mov
inc
hlt
test
mov
push
popa
imul
xor
xor
sbb
aad
loop
and
das
loopne
es
fistps
mov
lods
inc
fistpll
xchg
pop
or
push
add
mov
cmpb
cmc
popa
push
push
push
call
cmp
std
mov
and
sti
push
cli
inc
inc
int3
pop
or
nop
dec
mov
and
mov
lahf
dec
in
fists
adc
and
mov
dec
negb
fcoms
dec
sahf
lahf
cmpsb
inc
in
xchg
shl
add
sbb
ljmp
or
adc
jg
inc
fidivl
stos
mov
jmp
jo
decl
xor
out
das
push
clc
dec
mov
sti
mov
add
mov
mov
dec
push
into
fsubrp
imul
test
jno
xchg
scas
and
lahf
je
enter
test
outsb
ss
mov
jae
repnz
ljmp
in
or
and
cwtl
stc
out
pop
in
fcomps
inc
jg
sub
movsl
es
push
jbe
js
addb
mov
mov
test
loope
adc
sub
std
outsl
push
dec
bound
inc
cmp
sbb
testl
xor
das
lods
out
repnz
lcall
mov
mov
les
cmpsb
xchg
and
shl
jo
out
pop
clc
push
daa
lods
cmp
pop
xchg
lret
or
push
and
or
stc
or
xor
imul
lret
and
inc
in
and
push
fstpt
cmpsb
mov
aaa
push
sbbb
and
shrl
pop
enter
dec
loope
in
scas
lret
lret
xchg
pop
ja
fdiv
paddq
push
movsb
arpl
stos
fs
mov
loope
fmull
inc
mov
push
mov
pusha
or
sbb
sub
or
push
ret
sub
imul
cwtl
sbb
gs
or
in
fisttps
dec
icebp
call
lcall
sahf
sub
jg
es
pop
mov
sbb
and
jge
jmp
sbb
and
mov
aad
popa
adc
mov
mov
inc
repnz
cmpl
test
dec
jae
jle
sbb
scas
mov
mov
xchg
pop
jae
pop
das
mov
push
test
mov
jecxz
dec
shll
inc
jbe
and
fs
lods
rclb
imul
push
jnp
orl
jl
push
xor
mov
push
sub
popa
cmpsb
rcrb
mov
jae
and
loop
inc
imul
mov
orb
ja
inc
push
rcl
or
popa
mov
cmpsl
iret
sarl
and
insb
pop
cld
sub
data16
mov
scas
lcall
loopne
push
test
adc
subl
lods
lea
pop
pop
inc
jns
pop
pushf
or
mov
pop
xchg
loopne
ja
call
daa
nop
jbe
dec
jbe
mov
and
push
jge
adc
pop
lods
cmp
mov
inc
sar
stos
lods
adc
inc
scas
pop
rolb
cmp
adc
ret
push
fsts
icebp
negl
sarl
out
jecxz
dec
push
sbb
jl
aas
fisubs
lock
xor
mov
stos
mov
sub
fucom
test
scas
repnz
push
and
lret
insb
lock
into
dec
outsl
out
lods
lcall
mov
mov
inc
lret
push
loop
adc
dec
and
cmp
inc
pop
sbbl
fst
inc
out
imul
sbb
adc
les
scas
test
int3
sub
xor
mov
rorb
xor
sub
xchg
dec
xchg
dec
push
roll
jbe
mov
mov
inc
nop
xchg
lea
cmc
stc
mov
pop
sub
icebp
cld
xor
into
xchg
inc
pop
out
dec
in
jge
mov
dec
jnp
rclb
and
inc
push
push
movsb
pop
rcrb
in
add
mov
xchg
aas
inc
sbb
push
je
repnz
cmpsb
add
lock
pushf
rclb
and
dec
cs
push
xor
pop
jp
aad
jb
outsb
and
std
push
icebp
pop
pop
or
ret
andps
sti
mov
xor
and
dec
loope
mov
add
lods
dec
dec
xchg
imul
dec
and
and
stos
int
mov
jae
and
push
mov
inc
jb
jo
cmp
outsb
mov
faddl
and
xchg
into
mov
inc
das
ret
stos
cmc
js
mov
lea
sbb
and
xchg
sbb
xor
sub
cltd
mov
vsqrtss
fsubrl
inc
iret
popf
jbe
ret
dec
or
xor
insl
clc
dec
arpl
adc
add
sub
std
inc
dec
sahf
inc
stos
test
std
out
loopne
fisttpll
sbbb
outsl
and
cmpsb
loop
les
stc
insb
rorb
stos
dec
dec
cli
sbb
clc
and
xchg
sub
test
pop
push
cltd
adcl
in
popf
xchg
xor
inc
adc
cltd
xchg
pop
and
ja
pop
sub
test
mov
bound
sub
push
adc
ljmp
sub
mov
insl
xor
mov
data16
shlb
std
aad
adc
inc
sub
dec
hlt
jl
dec
lds
pop
jmp
xchg
mov
inc
mov
xor
jge
mov
cmpsb
cmp
sub
push
pop
cmp
fst
bound
pusha
sub
xor
jo
movsl
xchg
mov
jb
mov
mov
mov
xchg
jecxz
cwtl
xlat
mov
call
xor
loopne
lret
mov
dec
inc
out
or
mov
outsb
pop
scas
mov
das
loope
scas
js
xchg
add
out
pop
push
iret
or
jns
xchg
dec
mov
cmp
push
loope
xchg
into
ljmp
fmull
jp
xor
xchg
inc
cmpsl
lret
sbb
add
aad
mov
ja
lods
stos
jo
mov
adc
loopne
xchg
out
cmc
gs
fsubs
add
and
lret
in
pop
notl
roll
fistpl
bound
push
or
f2xm1
subl
cli
es
ds
xor
cmpsl
dec
and
xchg
push
repz
fildl
lea
fldt
sbb
addr16
sbb
push
push
cmc
inc
lea
and
fwait
scas
repz
pushf
addr16
push
icebp
movsl
push
shll
test
ljmp
xchg
cmp
push
mov
pop
add
sahf
in
pop
test
sub
push
imull
cld
or
hlt
outsl
inc
data16
xor
add
push
sbb
xchg
pop
push
mov
pop
add
cli
rorb
shlb
add
or
js
leave
push
enter
sub
ljmp
sub
outsl
push
xchg
adcl
inc
pop
testb
add
push
cmp
out
fucomp
call
xor
inc
sahf
mov
or
cli
lock
xchg
inc
fld
cmp
mov
sbb
mov
or
push
cmp
pop
adc
mov
les
pop
dec
or
jnp
fldcw
cmc
or
xlat
xchg
inc
es
adc
adc
adc
call
sub
jle
repz
mov
cwtl
and
rorl
pop
test
mov
mov
adc
sti
and
cmp
mov
popa
sbb
jecxz
mov
mov
dec
xor
or
imul
cmp
inc
or
xor
cmp
andb
popa
fs
rcrb
inc
fmuls
inc
jecxz
aad
xchg
in
dec
pop
movsl
jae
inc
aad
adc
pop
mov
lods
mov
fisubl
inc
inc
xchg
lods
jb
scas
lcall
mov
push
pop
jno
repz
and
nop
xor
cmp
leave
or
mov
call
dec
in
xor
lret
out
lret
add
adc
rorl
push
xor
or
pop
fsubs
mov
les
loopne,pt
les
mul
iret
shrb
ja
das
outsl
icebp
cmpsl
aad
ror
out
aas
loopne
cmc
ja
gs
jecxz
in
or
mov
insl
jns
jp
and
inc
mov
lret
daa
sahf
push
push
mov
mov
rcrb
sub
xor
xor
jge
jmp
mov
arpl
mov
shrb
inc
inc
psadbw
inc
pop
hlt
lods
icebp
xor
inc
cmp
into
and
pop
or
adc
inc
arpl
mov
xchg
test
ror
pushf
or
dec
jne
icebp
jne
and
ficompl
jg
daa
mov
leave
mov
cmp
ss
inc
jnp
popf
movsl
pop
xor
stos
cltd
mov
test
shl
jp
mov
pop
mov
popf
push
repz
adc
insl
jmp
sbb
popa
push
lds
mov
push
clc
push
sbb
jo
and
jmp
gs
sbb
jl
xchg
loope
mov
pop
jmp
dec
sbb
xlat
dec
mov
aaa
test
pop
or
outsl
lods
sub
or
test
idiv
icebp
imul
clc
mov
cmc
scas
xchg
cwtl
pop
jp
cmpsb
imul
pop
mov
adc
dec
inc
stos
inc
ds
test
or
pushf
push
pusha
lods
fsts
dec
int3
and
mov
fdivs
mov
sub
pusha
mov
test
add
lret
adc
repnz
mov
pause
cld
xor
push
arpl
inc
imul
incb
mov
add
int
lea
fdiv
repz
pop
push
outsb
xchg
ret
and
xchg
xchg
pop
sbb
mov
push
push
inc
stos
mov
divl
lea
movsl
add
and
dec
cmp
sbb
dec
mov
inc
or
sbb
nop
mov
dec
adc
xor
mov
in
sbb
daa
push
enter
das
and
ret
mov
cmp
mov
mov
addr16
notl
dec
mov
lock
xchg
jl
sti
lods
dec
mov
mov
cwtl
movsb
xchg
sarb
out
add
add
mov
cltd
pop
mov
loop
push
outsb
jno
hlt
ror
add
dec
or
sub
icebp
adc
pop
and
jne
xchg
andb
adc
mov
loop
outsb
call
jg
sbb
xor
movsb
sub
sub
sub
mov
inc
ljmp
mov
lret
movsl
inc
push
cmp
cli
rcrl
bound
fimull
push
push
sbb
imulb
mov
dec
insb
fucomp
loope
xor
push
xchg
push
push
cld
jl
add
mov
fcomp
std
repz
lcall
inc
vpperm
out
xlat
iret
mov
xchg
negb
pusha
lret
push
dec
ds
mov
xor
pop
stc
pop
mov
xchg
popa
shrl
setg
aaa
mov
call
mov
sbb
mov
repnz
dec
fdivp
ficoms
cli
mov
dec
jmp
jb
pop
xor
pop
movsl
jg
mov
cmpsl
das
mov
add
jne
popf
adc
add
push
movsl
rorl
arpl
jo
xor
jbe
popf
js
sbb
inc
inc
xchg
iret
jns
sub
cmp
mov
jae
adc
xorb
cmp
dec
std
jo
fnstcw
mov
stos
enter
test
flds
rolb
cmc
insb
adc
mov
in
jae
out
or
mov
pusha
fdiv
fwait
insb
test
ljmp
jp
pop
cmpb
lea
jmp
fldcw
or
mov
push
adc
int
mov
shl
std
stos
mov
dec
mov
pop
sti
sbb
fistps
int3
cmc
pop
or
mov
fstpl
dec
xor
clc
aam
repz
mov
adc
lock
in
jl
arpl
pop
stos
insl
sub
mov
shrl
sbb
cmc
xor
sbb
js
fwait
push
xchg
int3
cmp
push
in
ret
xchg
mov
jo
jo
pop
adc
test
stos
sub
mov
fcompl
imul
xchg
sbb
adc
jne
dec
and
cmp
or
ja
push
sbb
mov
jnp
mov
push
push
add
scas
std
shlb
cld
pop
and
repnz
ds
mov
or
adc
das
ficoms
insl
nop
jns
mov
mov
loopne
and
xchg
mov
aas
lcall
jo
pushf
jmp
mov
mov
call
lea
add
and
fld
mov
fstpl
lods
sbb
adc
je
ljmp
or
push
inc
les
mov
xor
inc
xchg
adc
mov
sub
cmp
ss
cmp
mov
adc
push
or
pop
jne
push
fiaddl
lods
inc
fidivl
push
pop
pop
in
orl
int
nop
cli
cmpsb
cmp
pop
sbb
std
mov
mov
std
fildl
cs
out
mov
std
push
lret
xor
add
pop
stos
lds
test
pop
int3
je
pushf
and
std
mov
pop
push
insb
add
dec
icebp
out
shll
ret
rorb
push
xlat
pusha
cmp
aad
popf
inc
jb
mov
mov
sub
push
jo
js
xchg
cld
push
int
sub
jge
and
pop
add
mov
or
imul
xor
aas
cmp
push
xorl
adc
add
addr16
loopne
xchg
fwait
fcoml
cld
xlat
ror
lahf
shrb
mov
mov
mov
fidivrl
movsb
addr16
int3
sub
pop
outsb
lret
and
cmp
aam
popf
shl
mov
push
ret
push
or
stc
sub
test
cwtl
aam
clc
cmp
insl
out
push
ret
insb
cs
sub
fdivrs
mov
jne
mov
mov
js
ret
repz
aam
or
xor
and
ret
ss
jnp
mov
call
int3
enter
xor
popa
add
inc
pusha
xchg
and
adc
ret
pop
pushf
das
mov
inc
iret
loope
sbb
inc
and
cmc
out
sub
mov
mov
jae
push
xchg
sti
add
aaa
jecxz
rcll
pop
imul
mov
outsb
mov
cmc
mov
imull
test
cs
imul
push
pop
roll
xlat
fwait
push
imull
cli
lret
xlat
scas
nop
jne
pusha
cmp
fnsave
movsb
adc
cmpsb
jno
xchg
sub
mov
icebp
mov
mov
shr
popa
les
mov
lahf
add
ror
enter
pusha
das
mov
out
sub
xlat
pusha
inc
rcrl
sub
bound
pop
push
lcall
fnstenv
test
mov
inc
not
sti
mov
cld
repnz
aam
adc
adc
or
addr16
dec
fdivl
jg
shll
add
cwtl
int
lea
push
pushl
push
pop
jle
mov
je
mov
lock
nop
int
mov
dec
xchg
out
pop
jle
dec
in
and
cmp
fists
or
pop
xchg
sahf
imul
sahf
inc
fcoms
in
pop
pushf
mov
xchg
lods
inc
xlat
notl
jnp
mov
aas
sahf
outsl
push
and
out
or
fstpt
test
mov
xor
cltd
inc
jmp
shll
test
into
hlt
mov
mov
lods
inc
cmpsl
push
out
call
add
pop
outsl
adc
or
flds
add
insl
leave
jbe
fwait
lds
outsl
xor
test
loopne
lahf
push
jg
out
jne
sbbl
jl
and
fucomip
movsb
push
xor
jno
cmp
dec
dec
inc
pop
push
sbb
lods
xchg
xor
fbstp
popa
or
sbb
jns
fs
push
fildll
sbb
inc
add
les
fidivrs
cmp
fisubl
xor
xchg
aam
xor
jmp
inc
cmpl
mov
mov
mov
cli
pop
movsb
dec
popf
sbb
in
lods
fsts
rcl
pop
mov
sbb
mov
pop
push
enter
and
pop
push
mov
pop
js
and
dec
jle
mov
daa
sub
in
adc
xchg
and
push
sbb
inc
pop
add
sahf
adc
sbb
sub
adc
fucomp
sub
xchg
sbb
xchg
sub
outsl
xchg
into
xchg
xchg
push
pop
cld
scas
lock
sbb
adc
sbb
mov
xchg
scas
sti
push
sub
sub
xchg
cli
cmpsl
or
cmp
into
sbb
jp
repnz
in
push
xchg
and
jmp
cmp
lret
enter
dec
jbe
mov
jnp
jae
xor
push
fstpt
cwtl
ds
cld
xorb
lcall
xchg
fcoms
sub
mov
mov
out
mov
mov
pop
mov
push
cmp
stos
and
add
jp
cmp
ljmp
and
sbb
mov
inc
pop
aad
addr16
inc
aad
leave
mov
dec
cmp
scas
cmc
dec
test
imul
xchg
ds
mov
andl
aas
daa
dec
enter
or
scas
pushf
lcall
repnz
aam
mov
lock
add
mov
xlat
adc
mov
icebp
loop
xor
pop
push
fwait
out
xor
popa
jo
jbe
sbb
lea
mov
cmp
jmp
sti
leave
mov
dec
mov
repz
mov
negl
int3
and
push
inc
cmp
cwtl
imul
mov
je
push
mov
or
cld
sar
in
dec
notl
mov
es
imul
adc
imulb
mov
sarb
int3
sahf
mov
pop
push
popa
lcall
dec
rcr
icebp
clc
sti
sub
aad
sbb
pop
aam
xor
sbbl
fsubl
aas
jne
out
nop
imul
mov
xchg
mov
sub
cmp
ror
adc
inc
into
cli
jmp
call
hlt
les
mov
jmp
cwtl
add
pushf
mov
fldt
jp
inc
jno
cwtl
jns
jns
ljmp
decb
js
fistl
xchg
inc
mov
inc
imul
ljmp
mov
push
pop
mov
jmp
pop
mov
lret
or
lret
arpl
mov
xlat
xor
lods
adc
or
and
imul
xor
xchg
xchg
push
sub
lods
adc
or
cs
pusha
divl
xchg
sti
mov
insb
scas
das
fld
pop
xchg
arpl
es
adc
cld
test
pop
inc
fmull
iret
rolb
mov
inc
fmull
dec
mov
repz
shrl
addb
fsub
pop
push
xchg
ret
lcall
sbb
loopne
lods
sub
push
inc
sti
cld
in
mov
mov
adc
sub
fsubrp
or
out
adc
vmread
sub
add
div
jne
scas
ja
sub
inc
sub
pop
std
lret
jb
dec
cmc
sub
test
mov
xchg
mov
std
test
push
imul
lea
xorl
jmp
mov
jno
push
iret
ss
mov
xchg
jge
sbb
mov
sub
mov
std
xchg
add
scas
adc
movsb
testl
shll
mov
sub
mov
repz
add
xor
cmc
xchg
bndldx
loopne
xor
jge
leave
pop
mov
jns
push
mov
pushf
inc
stos
repz
iret
cmc
in
sbbb
scas
mov
add
bound
pop
out
xor
js
popf
sahf
xchg
repz
lahf
mov
push
es
loop
sti
add
dec
aaa
cmpsb
dec
mov
fiadds
adc
bound
inc
add
or
mov
jp
jb
hlt
mov
test
scas
cmpsl
jle
orb
test
insb
adc
inc
call
test
test
jecxz
mov
push
js
mov
pop
popf
cmpsl
je
lret
and
outsb
ljmp
mov
add
mov
pop
outsb
cmpsl
fmul
ds
xchg
jge
pop
cmp
subb
imul
sbb
push
cmp
add
ret
mov
jp
out
xchg
por
fnstenv
fnop
je
push
or
add
push
cwtl
sbb
test
lods
lahf
inc
insl
jnp
mov
pop
fadd
ljmp
push
outsb
mov
mov
clc
xchg
add
cli
in
dec
fldcw
les
or
out
enter
arpl
ret
adc
sbb
xlat
or
push
mov
mov
mov
pop
addr16
pop
jbe
adcb
test
sbb
add
pushf
cmp
mov
adc
or
arpl
mov
leave
jo
lret
mov
test
mov
push
rorb
mov
call
pusha
or
into
mov
mov
mov
jns
mov
sub
enter
sahf
rcrl
jnp
test
inc
add
dec
and
push
dec
mov
cli
mov
cmp
popf
push
inc
inc
mov
andb
mov
mov
lods
mov
bnd
push
scas
push
sub
add
dec
jnp
xchg
dec
movsl
pop
outsl
outsb
incl
mov
fcompl
out
fwait
arpl
and
test
lds
iret
sub
das
aam
pop
imulb
out
mov
fucomp
flds
dec
cmpsb
adc
testl
push
ret
mov
pop
jbe
fadds
mov
or
dec
stos
mov
test
jmp
or
in
lods
or
jae
ds
push
mov
loopne
inc
testb
testl
mov
push
in
dec
push
and
lds
cli
jno
std
adc
mov
lret
pop
aam
pop
icebp
aam
and
loope
scas
ja
in
icebp
xor
add
loop
js
sub
lods
xor
xor
repz
movsb
jae
xchg
lahf
repnz
cmpsl
sbb
bound
mov
pop
out
xor
fcmovne
in
adc
push
sbb
ja
xor
jp
jne,pt
int
out
xor
loop
cmc
mov
pop
jnp
jge
aaa
cmp
fisubl
jmp
jle
push
mov
add
test
in
mov
fsubrl
fs
lds
lds
pop
rcrl
lea
xlat
sub
mov
mov
movsl
sahf
je
addr16
out
imul
movsl
push
in
mov
mov
stc
push
scas
sbb
ja
dec
xchg
push
xchg
mov
in
fxch
sti
add
cltd
imul
arpl
mov
mov
insl
imull
mov
inc
daa
xchg
fwait
enter
ret
outsb
pop
mov
push
mov
out
in
sub
into
in
int
dec
sub
shlb
inc
push
es
lahf
push
into
ljmp
jge
inc
ret
sbb
addb
orl
dec
xlat
daa
pop
ret
ljmp
iret
rcrb
and
cmp
add
mov
and
jl
test
dec
push
pop
cmp
arpl
ret
adc
pop
sub
scas
mov
sub
jecxz
movsb
outsl
lods
push
outsl
or
adc
scas
adc
imul
cmp
xor
int
aad
jnp
mov
mov
adc
push
pop
scas
jns
mov
and
adc
mov
fnstcw
mov
mov
xchg
xchg
xchg
xchg
sub
outsl
test
cmpsb
test
pop
negb
mov
movsb
jae
test
xor
pushf
mov
mov
mov
mov
fldl
mov
lret
hlt
fadds
pop
or
fistps
jno
xchg
addr16
in
mov
and
sahf
dec
sub
mov
adc
mov
pmaxsw
aad
mov
mov
in
daa
pop
xorb
jecxz
dec
outsl
fildl
shr
inc
aas
jnp
lahf
hlt
jmp
or
sbbb
je
clc
shrl
loop
mov
jnp
es
or
call
xchg
repnz
dec
mov
mov
mov
xchg
sahf
pop
imul
cmp
stos
dec
mov
lret
inc
inc
sub
movsb
jno
adc
cmp
int
cwtl
out
into
cld
add
cld
cmp
and
rcll
mov
push
mov
jp
pop
cli
iret
test
stc
and
jne
sub
lock
aad
lds
dec
std
aaa
xchg
push
push
inc
out
cmpsl
and
push
inc
mov
rcll
dec
imul
push
loopne
icebp
and
decl
or
cltd
out
and
push
inc
push
sub
loop
jge
in
es
stos
mov
mov
inc
mov
imul
cs
jp
mov
arpl
fnsave
mov
leave
sub
jl
jne
push
pop
insb
mov
mov
mov
ja
fs
es
mov
cmp
inc
das
push
add
in
outsb
test
inc
out
fmull
stos
push
mov
push
mov
sti
insb
sbb
add
push
inc
add
sub
fsts
daa
mov
adc
rol
das
popa
cld
mov
dec
dec
jo
xor
inc
fs
clc
xchg
mov
xchg
fimuls
movsl
sub
push
scas
push
jbe
test
lods
xchg
mov
add
cmp
sub
mov
test
cmp
cmp
enter
or
repz
push
mov
ficoml
mov
stc
scas
int
hlt
out
mov
xchg
inc
inc
test
cmpsl
jecxz
bound
cmc
in
or
ret
aaa
adc
jae
mov
test
inc
stos
or
lea
cmp
inc
clc
sbb
dec
enter
mov
sub
mov
mov
int
das
in
dec
pop
mov
inc
dec
pop
js
jmp
mov
mov
fs
imul
cmpsl
pop
jmp
mov
mov
sbb
mov
fisubrl
mov
fs
inc
mov
jns
mov
or
jl
adc
cmp
in
jge
addr16
mov
add
imul
out
sub
push
dec
in
jge
lcall
int3
xchg
test
cmp
pop
loope
cwtl
jb
fbld
sbb
add
outsb
mov
push
out
imul
icebp
mov
xchg
jns
fildl
fistpl
push
xor
add
add
xor
or
popa
int
clc
mov
pushaw
inc
jbe
xchg
push
pop
xor
adc
add
sub
xor
subl
cmp
out
test
mov
pop
nop
dec
out
sbb
into
aaa
push
sbb
pop
push
out
xchg
outsl
mov
sub
inc
popa
sub
inc
sti
pop
fnstsw
xchg
mov
in
stos
icebp
cs
popa
fildl
xchg
js
dec
cmp
push
pop
cmp
dec
loope
xchg
xchg
jl
add
dec
loopne
xchg
incb
fsubrl
cli
add
arpl
xchg
inc
xor
nop
cmp
std
cmp
enter
and
lock
and
das
dec
js
cmp
in
push
xchg
adc
sbb
dec
dec
add
inc
loop
push
hlt
mov
adc
es
jae
daa
push
xchg
and
mov
jp
sub
or
scas
mov
and
enter
test
or
popf
cmp
lods
xchg
sub
loope
repz
cmp
lahf
adc
outsl
xchg
addb
and
jae
mov
jmp
jne
jge
data16
scas
add
lods
cli
push
je
sbb
cmpsl
jmp
insl
sbb
les
shlb
movsl
sub
add
cmpsb
aam
std
int
stc
jle
xchg
addr16
mov
pop
and
dec
fidivrs
mov
sti
les
sbb
mov
call
or
adc
add
sub
jo
and
jnp
out
dec
mov
cmpl
bound
xchg
fbld
cmp
jg,pn
out
jmp
mov
cmp
lahf
push
dec
rcrl
in
mov
xchg
shrl
mov
adc
jbe
test
mov
fadd
rolb
fstpt
jns
out
or
test
orb
pushl
iret
xchg
dec
aam
aas
mov
push
mov
arpl
jnp
inc
mov
xchg
pushf
push
mov
fistpll
mov
mov
shl
sbb
fisttps
mov
das
sahf
xchg
ljmp
mov
pop
cli
movsb
mov
sub
shll
xchg
lods
sbb
imul
push
pusha
test
sbb
fs
pop
add
leave
cmpsl
js
push
dec
push
dec
fiaddl
sti
dec
xchg
adc
push
insb
cmpb
xlat
shlb
negl
icebp
stos
sbb
pop
fistpl
mov
jmp
aam
stc
insb
shrl
insb
popf
jne
scas
adc
jb
mov
nop
push
dec
mov
xor
testl
sub
mov
jb
mov
or
dec
scas
loop
rclb
mov
sub
and
lcall
in
mov
add
les
sbb
pop
jnp
mov
dec
data16
idivb
xchg
xchg
out
mov
divl
sub
xchg
fists
test
insl
mov
mov
adcl
xchg
iret
ljmp
pop
push
icebp
dec
push
loope
outsl
cs
lods
or
out
out
popa
sarb
mov
fwait
push
clc
add
jmp
fiaddl
adc
xchg
inc
lahf
cwtl
xchg
cli
std
dec
call
lea
lahf
cmpsb
pop
outsb
inc
aas
mov
scas
push
jg,pn
out
cld
rolb
jp
out
fdivp
add
sub
jp
mov
jno
test
js
push
jbe
insl
cld
call
sbb
push
xchg
repz
mov
mov
shll
sub
inc
mov
sbb
in
icebp
int
dec
or
test
out
pop
andb
fisubs
push
aaa
shrl
adc
mov
popa
repnz
dec
xchg
xlat
iret
movsb
mov
or
stos
mov
inc
xchg
adc
popa
testb
repz
push
daa
mov
lods
mov
mov
pusha
mov
mov
xlat
mov
add
movsl
sti
xor
sbb
push
sti
mov
movhps
cmpb
rcl
iret
adc
cmp
mov
mov
mulb
je
add
shll
addr16
jle
jecxz
add
out
lods
push
push
jne
fdivrl
add
cwtl
lds
cmpsl
jl
aaa
addr16
bound
mov
outsb
fbstp
cmp
jne
gs
pusha
cmp
mov
push
aaa
bound
jl
pop
mov
ret
jl
lock
add
sbb
lahf
xchg
mov
cmp
imul
or
inc
loopne
test
lds
mov
fdivrs
push
lret
lret
adc
mov
sub
add
je
test
dec
nop
in
lcallw
xchg
jg
jp
lret
mov
lock
or
and
push
fldt
lds
into
adc
lret
aas
test
pop
out
shlb
mov
stc
mov
add
jne
mov
or
popl
and
stos
push
cwtl
jp
ret
or
push
popa
loop
cmp
mov
or
ror
add
in
cli
test
sbb
xchg
cli
fcoml
push
inc
jnp
jne
pop
cmp
data16
push
add
sbb
mov
or
mov
jbe
inc
outsb
out
or
cmp
subl
push
pusha
mov
lret
loopne
enter
jae
xchg
mov
jno
mov
xchg
in
popf
in
out
imul
mov
pop
loopne
cmpsb
loopne
add
push
ret
xor
enter
xor
jne
xor
mov
loope
sahf
sti
divl
xor
lock
idivb
je
inc
loope
fnstenv
jne
cli
orl
repnz
adc
push
lret
stos
stc
xor
test
lret
ljmp
dec
jno
push
inc
jnp
cmp
popa
mov
leave
inc
js
fnstenv
sahf
add
mov
or
pop
in
flds
xor
loope
out
cmp
mov
out
adc
js
out
std
rorb
xor
shll
sahf
and
xor
mov
pop
loope
jg
out
repz
mov
push
fisubs
roll
mov
pop
gs
lahf
insl
insl
cmpb
insb
dec
hlt
sub
arpl
enter
int3
add
push
mov
movsl
push
adc
mov
sbb
cmpsb
xchg
cmp
or
inc
aas
mov
mov
jne
scas
sub
mov
call
inc
jmp
cmp
sbb
pop
pop
sbb
cli
fprem1
movsl
mov
rol
into
lahf
sbb
in
mov
mov
mov
jp
scas
pop
pop
cs
dec
ja
ss
mull
push
in
pop
scas
jnp
popf
or
das
or
es
mov
fwait
push
cmp
mov
and
iret
and
pop
addr16
mov
in
and
orl
add
mov
dec
sub
cmp
dec
into
sbb
popf
sahf
loopne
gs
sbb
xchg
test
inc
pushf
dec
rcrb
cmp
ds
mov
sub
xlat
mov
mov
clc
mov
adc
test
and
icebp
popa
lcall
fs
scas
jmp
sub
inc
push
xor
sbb
bound
jp
sti
and
cmp
push
jo
xchg
ljmp
pushf
imul
push
cmp
cmovnp
mov
jle
es
addr16
imul
cmp
and
movsl
stc
pushf
mov
cmc
insb
fisubrl
xchg
lahf
adcb
mov
bound
data16
mov
mov
dec
fisubl
shll
or
add
inc
outsb
and
subb
outsb
jns
iret
fcoms
mov
ret
mov
push
loope
jge
jecxz
sqrtps
xlat
add
add
inc
and
mov
push
mov
adc
cmpsb
popa
aaa
stos
adc
mov
sti
jg
fldl
cmp
jns
pop
std
pop
inc
aad
jge
call
xchg
add
scas
insl
in
insl
push
xor
jmp
fwait
push
push
bsf
popa
int
push
cmp
hlt
fs
jo
fcomps
out
sub
pushf
dec
out
mov
mov
aam
cmp
ret
cmp
outsl
insb
out
cld
movsb
pop
jmp
int
ficoml
cmpb
sub
mov
and
lods
mov
and
out
gs
movsb
and
jge
and
sahf
cwtl
imul
outsb
jmp
xchg
das
pop
outsb
push
je
fstl
mov
cmp
jno
imul
nop
inc
aaa
push
xchg
test
xchg
pusha
cmpsl
insb
pop
sbb
stc
testb
and
xchg
jmp
iret
ficoms
es
jbe
fcmovne
popf
mov
xor
xchg
and
jae
mov
fisttpl
push
insb
or
icebp
jb
jmp
add
pop
leave
xorb
test
dec
rcll
loope
jge
lcall
dec
cltd
jb
pusha
sub
sub
sbb
lret
hlt
imul
inc
loope
stos
imul
dec
pop
daa
sbb
test
pop
cmp
hlt
sbb
or
jns
push
push
mov
or
jns
mov
xchg
mov
adc
jcxz
testb
mov
jae
adc
cmp
jecxz
mov
mov
mov
insl
inc
add
je
cmpb
push
addr16
mov
jl
cltd
andb
addl
nop
lcall
stos
fdivrs
pop
iret
repnz
fs
enter
inc
xchg
stos
mov
push
and
mov
jnp
pusha
pop
insb
aad
lods
or
shrb
repnz
xchg
jmp
fildll
dec
fnsave
cmc
jae
in
ficompl
mov
and
decl
imul
dec
fimuls
loopne
mov
add
hlt
cmc
sbb
mov
push
cld
xchg
mov
mov
fs
rol
ja
ret
cmpsb
xor
add
push
sbbb
into
popa
mov
into
cli
and
cmc
adc
adc
cwtl
fbstp
test
push
and
jae
mov
mov
movsb
inc
mov
outsb
mov
ja
fbstp
pop
test
inc
cmc
dec
arpl
jne
xor
and
movsb
inc
insl
mov
inc
or
mov
int3
fisubrl
idivb
lods
jle
imul
sbb
xor
sbb
push
outsl
lock
fdiv
notb
push
pushf
inc
sbb
outsl
gs
ret
sub
mov
bound
jo
jns
sbb
jbe
lret
jp
cld
pop
call
pusha
ljmp
int3
push
inc
xor
pop
cmp
sbb
shrl
xchg
mov
lret
clc
push
je
insl
add
mov
jne
mov
outsb
xchg
jge
mov
into
mov
cmp
lea
not
push
mov
mov
sub
adc
repz
adc
shr
fsubs
jmp
xor
xchg
jmp
les
add
mov
xchg
adc
xlat
xchg
push
inc
repz
les
cwtl
repnz
stc
rcrb
ds
mov
push
dec
test
sbb
cmp
mov
lcall
dec
inc
into
dec
and
popw
test
lea
cmc
outsl
xlat
pop
xor
popa
fsubl
jmp
out
int
adc
shr
pop
loop
mov
fsts
inc
pop
sbb
les
rorl
fildl
cmc
ljmp
test
lcall
fwait
push
push
inc
scas
inc
adc
push
ds
popa
adc
fnstenv
xchg
nop
ljmp
lods
push
inc
jmp
lcall
mov
bound
jne
and
xchg
inc
and
dec
pusha
ss
xchg
mov
in
in
push
pop
fnsave
cmp
bound
push
xchg
subb
iret
fwait
xchg
mov
stos
sti
int3
test
notb
cmp
mov
mov
mov
mull
stos
test
divb
lea
push
fstps
ljmp
fnstsw
sbb
jecxz
roll
aam
lcall
sbb
sub
xchg
std
sub
lods
sub
popf
ds
mov
mov
and
rcrl
pusha
cmp
mov
divb
test
clc
fmuls
in
mov
dec
adc
or
into
mov
in
sar
xchg
in
xchg
jb
mov
in
cli
add
icebp
jp
nop
mov
push
push
sub
sbb
iret
lret
and
pop
ss
popa
movsb
gs
push
aaa
inc
mov
add
sub
adc
sbb
outsb
push
lcall
or
adc
add
out
inc
cmp
mov
repz
repnz
jp
scas
data16
mov
add
ds
lods
push
lds
sub
add
xor
and
fcoml
shl
stos
shlb
jecxz
cli
subl
adc
push
repnz
lret
ja
jmp
cmp
or
and
out
xor
pop
dec
icebp
add
aad
aaa
mov
mov
lock
outsl
data16
mov
mov
xor
mov
sub
imul
mulb
fsubp
cwtl
mov
jecxz
leave
stos
cwtl
adc
cmp
cmc
mov
push
rcll
call
jle
cmp
jg
js
es
out
stc
sbb
mov
cmc
sahf
rorb
idivb
divl
bound
stos
add
movsb
cwtl
adc
mov
fnstenv
fcom
jns
push
cmpsb
inc
movsb
xchg
cmp
stos
mov
mov
lods
out
push
in
pusha
data16
inc
mov
dec
pusha
jge
inc
orb
add
scas
scas
addb
dec
mov
pop
leave
and
mov
mov
int3
test
jp
jle
mov
inc
cmpsl
arpl
cmp
hlt
and
inc
add
lods
fidivrs
mov
gs
in
dec
and
add
jecxz
adc
jg
lds
adc
push
jle
pop
adc
fwait
and
repnz
add
loopne
in
add
mov
or
jl
and
fucom
pop
sub
imul
mov
fbstp
sbbl
loope
add
dec
stc
mov
adc
jl
xchg
cmpsl
mov
and
push
cltd
sub
cltd
mov
sub
enter
mov
mov
jne
into
sub
inc
cmpsl
inc
mov
sahf
mov
jl
add
add
outsl
xchg
pop
jg
xchg
dec
cmp
push
scas
xor
out
inc
add
repnz
or
inc
jo
fsts
jp
loop
cmp
fstl
jecxz
push
xor
addr16
jecxz
add
or
jg
push
lods
outsb
jge
in
push
aad
out
push
cmp
lret
movsl
or
and
xchg
loope
jmp
loope
js
pop
repnz
or
pop
scas
mov
loope
je
push
js
and
mov
and
xchg
ja
sbb
std
cmp
xor
push
sbb
out
sbb
das
bound
cmpsl
mov
push
mov
stc
pop
and
sub
mov
rclb
in
mov
push
movsb
or
test
push
fidivrs
pusha
mov
fwait
push
js
test
out
cmp
pop
xlat
pop
xchg
loopne
inc
add
cmpb
scas
lret
adc
rorb
imul
imulb
xchg
call
sbb
cmp
lcall
gs
call
pop
jl
add
rcll
nop
in
jns
cmpsb
xchg
out
pcmpgtw
nop
clc
xchg
dec
inc
xor
fsubs
adc
fidivrl
push
or
cmc
mov
test
pop
adcb
dec
xchg
pop
jle
daa
cmpsb
and
bound
sub
js
popf
and
enter
cmp
dec
aas
mov
outsl
mov
xchg
outsb
jb
dec
or
stos
xchg
jb
pop
sbb
sub
jb
lcall
or
fiaddl
mov
mov
mov
jl
stc
arpl
rorl
int
mov
sbb
add
push
outsl
pushf
mov
mov
xchg
adc
fildll
orl
sbb
sub
or
jns
push
ds
popf
cmp
push
or
sbb
pop
hlt
cmpsl
stos
mov
popa
mov
jno
fstpl
insl
push
out
xchg
push
lcall
mov
fimull
mov
loop
or
daa
ds
adc
xchg
jp
ret
jge
jp
dec
sub
notb
mov
add
bound
decl
shr
xor
fwait
out
inc
fldl
xchg
in
scas
pop
push
pop
les
test
rolb
inc
cmc
pop
push
and
jbe
mov
outsb
js
push
mov
shl
in
jo
mov
and
aaa
test
int3
lcall
and
mov
pop
jecxz
cmp
push
mov
rolb
loope
fld
imul
out
add
push
mov
test
pop
pop
pop
aad
es
aam
pop
inc
popa
sbb
fs
sub
aaa
nop
mov
outsb
xor
pop
lds
mov
mov
sub
pop
cwtl
inc
mov
inc
fiaddl
dec
stos
roll
out
int
leave
sub
mov
ja
lahf
sub
addb
fdivrs
mov
push
cmp
push
dec
out
jg
test
test
bound
push
sub
cwtl
push
mov
insl
fucomip
adcb
stos
cmp
int3
in
loop
popa
enter
les
cmp
or
push
repz
roll
ja
push
addr16
xchg
pusha
push
rcrl
jae
push
inc
push
aas
mov
mov
cltd
jle
aaa
mov
jnp
jle
shrb
mov
cmpsb
ret
lods
adc
mov
push
sahf
mov
push
jp
and
stc
mov
js
xchg
add
rcrl
test
push
xor
sub
lret
bound
cs
jne
mov
andl
cmp
inc
loop
loopne
dec
das
push
lea
xor
mov
pusha
lret
mov
mov
aas
fisubrs
fcomps
push
xchg
push
xchg
xor
dec
insb
arpl
loope
jp
jl
das
in
xor
std
xor
rorb
jg
push
mov
pop
imul
std
sbb
ret
xchg
test
sti
mov
movsl
mov
or
push
rcrb
icebp
mov
imul
lcall
pop
mov
push
iret
inc
aad
fldenv
dec
mov
push
dec
cmp
imul
pop
mov
pop
dec
nop
lret
loopne
pop
cld
and
push
cmp
mov
addr16
loopne
jmp
mov
add
repz
sub
aad
shlb
xchg
pop
xlat
lahf
gs
out
aam
mov
mov
xlat
mov
bsf
fsubrs
and
and
stc
lret
fs
fldcw
add
adc
scas
mov
push
das
loopne
stc
loopne
outsb
jmp
es
fcompl
pop
mov
xchg
into
fsubrl
add
push
mov
lcall
adc
fs
daa
leave
pop
mov
daa
xor
popa
adc
loop
mov
stc
lea
xchg
and
jnp
clc
mov
ja
push
jnp
scas
xchg
lods
mov
adc
imul
stc
les
out
lods
sbb
mov
in
pop
ss
mov
pop
mov
mov
push
dec
sub
mov
pop
xor
inc
flds
je
cmp
jo
jb
rorl
rcrb
add
es
outsl
pop
imul
sar
or
or
repnz
mov
dec
fldt
add
subb
jg
mul
jno
pop
imul
les
mov
dec
and
stos
jnp
mov
nop
fsubrl
hlt
fsub
ljmp
jmp
pop
xor
into
adc
or
rorl
sub
pop
popa
stos
xor
stos
insb
rcl
jb
stos
xor
inc
mulb
outsl
xor
repnz
lret
xchg
sbb
push
push
pop
mov
xor
adc
inc
sbb
pop
mov
xor
cmp
aas
daa
or
cmp
cmp
jmp
mov
add
cmc
mov
lea
cmp
outsb
adc
add
and
outsl
lods
lods
push
sub
stc
shrl
add
js
fldenv
adc
or
or
xchg
xor
rcl
push
mov
jae
in
loopne
jnp
sub
mov
jecxz
stos
insl
xchg
mov
cmc
jnp
cmpsb
lock
inc
jge
jmp
or
xchg
ret
inc
pushf
sbb
decb
pushf
sub
sub
xchg
cmc
cmp
adc
mov
pop
lock
aas
cmc
adc
xchg
call
mov
fstps
enter
sbb
sbb
dec
sub
mov
xor
into
cmp
or
cmc
cmp
fisubs
adc
sub
and
add
test
fildll
call
mov
inc
mov
mov
inc
pop
add
xor
aad
xchg
xchg
fisubl
and
shll
add
outsb
push
das
out
cmpsb
jb
imul
fdivrs
xor
pop
sub
push
test
push
cmp
inc
nop
xchg
ret
lds
xor
loope
jbe
shrb
je
xlat
cltd
mov
mov
es
pushf
adc
and
adc
push
decb
das
addl
stc
fs
mov
adc
insl
pop
adc
or
cmp
mov
loope
sbb
popa
fstl
add
movsb
xor
test
inc
imul
ds
xor
mov
hlt
aaa
and
inc
sbbb
jae
movl
sub
jg
xlat
movsl
xchg
push
rolb
push
outsl
dec
std
xchg
mov
mov
adc
in
sub
xor
jne
push
push
xor
je
inc
int
imul
pushf
mov
jecxz
es
cmpsl
stos
mov
popf
mov
aaa
jecxz
pop
mov
popa
cmpl
jg
sub
pop
lret
bound
and
sub
lods
push
push
add
sbb
dec
xor
ds
mov
in
add
fwait
addr16
les
mov
outsl
js
cmp
stos
call
mov
add
test
push
stos
into
adc
ret
mov
add
cli
mov
fsubrl
psubb
adc
icebp
addr16
fisttpl
negl
cmp
ss
mov
addl
pop
sbb
pusha
cmp
pop
jno
mov
xchg
jne
inc
mov
cwtl
ds
and
add
sbb
movsb
out
lea
xchg
xor
push
aaa
in
hlt
cmpsl
dec
sahf
jge
cs
cli
cmp
sbb
stos
or
out
xchg
lods
pop
mov
mov
int3
stos
popa
dec
aad
gs
cmp
dec
or
xchg
mov
pop
dec
lcall
adc
test
in
iret
sti
cld
adc
gs
lods
sbb
aas
jo
leave
jmp
cltd
mov
and
push
inc
xor
jecxz
xchg
test
nop
mov
or
jl
incb
cs
cmpsb
daa
cmp
in
mov
dec
std
sub
cmpsb
inc
xchg
dec
int
repz
xor
pop
or
arpl
jno
push
jmp
in
jno
insl
dec
arpl
adc
repnz
dec
arpl
add
mov
out
sub
xor
cmp
inc
dec
testb
stc
xchg
push
mov
sahf
xor
xor
aad
bound
std
into
mov
in
mov
pop
fcompl
xor
sbb
mov
adc
call
xor
push
cmp
les
gs
icebp
testb
push
mov
bound
sub
into
rclb
shl
fbstp
mov
dec
mov
xchg
push
ret
in
ss
pop
pop
cld
aad
out
inc
cmp
fs
jno
shrb
push
ficomps
xor
bound
pop
mov
sub
sbb
mov
or
imul
mov
sbb
jp
dec
mov
mov
jl
int
call
addr16
pop
push
pusha
stc
arpl
cmp
fdivl
pop
je
test
dec
cmp
cld
imul
dec
repz
sub
push
mov
nop
add
mov
ficompl
aad
fucomip
cmp
lcall
mov
mov
jle
cld
sarb
movsb
in
fsubl
gs
movsb
mov
push
fiaddl
lods
and
mov
xor
mov
imul
push
sbb
movsb
js
rolb
mov
mov
jle
imul
mov
sbb
addr16
inc
fs
mul
xchg
lock
xorb
in
insl
xchg
sub
mov
and
les
cmp
lods
imul
push
pop
add
cmp
push
ret
repnz
or
xchg
dec
ss
adc
lcall
adc
lea
and
aas
mov
push
sbb
pop
xrelease
jmp
cld
mov
jl
push
xchg
jae
jnp
inc
clc
or
push
std
jb
dec
stc
movsb
lea
pop
pop
mov
lea
popa
hlt
cmp
test
or
ret
in
fisubl
test
xchg
sub
idivb
bound
mov
leave
mov
jg
sahf
and
mov
mov
cwtl
xchg
sahf
mov
jge
cmp
cmp
loop
pop
rolb
add
pop
mov
cltd
mul
mov
push
pop
sub
lret
rcl
adc
push
lret
fcoml
lea
jnp
std
and
xchg
cmpsb
and
add
jle
sub
xchg
ret
popf
loopne
xchg
int3
mov
lods
dec
loope
data16
jo
cmp
sub
adc
fsubr
rolb
mov
mov
incl
int
jae
sbb
nop
mov
xor
clc
icebp
stos
aad
mov
in
cmp
divl
sbb
push
dec
mov
imul
xor
movsl
cmp
nop
sub
inc
mov
mov
push
jne
lcall
pushl
pop
push
ss
cmp
adc
mov
pushf
xor
mov
mov
or
cmpsb
jecxz
mov
addr16
push
push
aad
popa
fstp
dec
xor
dec
adcb
pop
into
mov
jg
pop
hlt
xor
jbe
mov
setbe
in
and
fildll
popf
push
sub
xchg
sbb
clc
repnz
sbb
xchg
inc
jmp
push
mov
inc
mov
mov
dec
aaa
jae
cmp
imul
jmp
imul
mov
mov
mov
sub
mov
dec
repz
repz
test
cmp
xorl
cmp
xor
addl
lret
mov
mov
inc
scas
fsubs
adc
adc
out
into
cmpsb
push
imul
aaa
dec
sarb
sbb
daa
push
pushf
adc
in
scas
ret
adc
add
pushf
dec
inc
sbb
pop
popa
fstps
movsl
mov
push
lret
xchg
jmp
mov
repz
mov
out
test
jp
mov
adc
mov
sbbb
sahf
cmp
mov
lock
data16
int3
pop
inc
mov
out
fsubs
dec
push
jns
mov
stos
lcall
xor
jo
push
pop
test
pop
pop
out
popa
cmp
mov
push
mov
rcr
dec
inc
mov
push
push
sub
dec
test
mov
popa
test
xchg
fs
ss
sbb
outsb
fisttpll
in
dec
mov
call
neg
jno
in
push
lret
movb
out
sub
jns
idivb
pop
popa
sti
dec
lods
dec
pop
fidivl
adc
imul
sbb
pop
das
and
cli
iret
pop
mov
sub
ss
int3
imul
cmp
mul
cld
scas
fs
sbb
push
cmp
icebp
sub
inc
cmp
jns
andb
std
out
jb
clc
jg
push
push
fimuls
test
insl
adc
push
lea
add
sbb
jnp
inc
cmp
xchg
cmpsl
xchg
lret
cmc
mov
mov
jno
xor
cmp
sbb
es
loopne
jg
jp
inc
incb
sbb
int
leave
jnp
loop
enter
mov
pop
mov
pop
jnp
scas
int
gs
push
imul
xor
mov
loopne
subl
outsb
sub
push
fdivrl
dec
mov
xor
cld
or
je
sub
jmp
les
cltd
in
into
rclb
and
jo
add
outsb
lods
adc
in
out
adc
jecxz
jl
lret
mov
mov
icebp
int
test
dec
push
inc
imul
scas
je
xchg
insl
cwtl
mov
push
sbb
pop
cmp
pop
xor
scas
ss
sub
mov
sarb
adc
fwait
or
and
lea
lea
icebp
sbb
pop
test
mov
pusha
xchg
cmpsb
shrb
mulb
icebp
add
inc
imul
sub
icebp
or
sub
mov
and
mov
loope
jbe
pop
setno
push
out
xlat
mov
xchg
lahf
dec
jmp
push
stos
push
out
bound
stos
jmp
xchg
push
add
nop
cwtl
rol
push
rcl
repnz
daa
stos
push
test
mov
nop
push
push
cli
lock
xor
inc
pop
roll
sbb
and
sub
sbb
add
hlt
nop
cmc
mov
adc
in
push
stos
cmp
cmp
inc
mov
or
add
adc
xor
or
inc
or
aaa
orb
mov
mov
clc
pushf
fwait
adc
sbb
dec
dec
sbb
iret
xchg
xchg
sbb
add
imul
add
pop
sbb
pop
inc
ds
sub
lods
in
ret
mov
out
cmp
cmp
jne
outsl
sub
pop
add
out
adc
pop
xor
mov
dec
sar
cwtl
incb
mov
and
movsb
dec
repnz
cli
divb
std
xchg
shrl
adc
stos
out
cmpsl
pop
stos
xchg
mov
sub
repnz
rcrl
cmc
xchg
or
call
loopne
jbe
pop
push
pushf
sbb
jl
dec
adc
mov
cmp
mov
xchg
gs
inc
or
loopne
dec
pushf
int3
cmp
negb
pop
jnp
jg
inc
int
adc
sub
lods
out
sub
movsl
divps
cmp
dec
and
pusha
xchg
mov
shrl
mov
and
push
mov
fidivs
aam
push
push
aaa
xchg
push
pop
push
rolb
lock
fcoms
jbe
call
scas
inc
pop
adc
ss
sub
mov
loop
enter
repz
xchg
in
dec
arpl
and
dec
ja
dec
adc
mov
pusha
cli
call
add
and
fdivrl
pop
push
and
shrl
imul
ret
repnz
push
cltd
lods
ror
pop
pop
movb
and
call
int
les
mov
pop
inc
test
mov
xchg
and
mov
je
jno
outsl
js
lahf
or
pop
pop
out
dec
out
out
bound
and
cmp
repz
cmpsb
data16
cmpsb
in
fdivrl
loope
inc
mov
insl
and
cmp
jns
cmp
mov
sub
pop
es
ja
sbb
xchg
mov
popf
sub
jge
adc
push
sbb
or
add
adc
bound
push
sub
mov
mov
cmp
or
add
bound
lock
inc
mov
pop
bound
aam
xor
inc
shrd
mov
or
lret
mov
inc
aam
lock
lods
adc
inc
pop
mov
mov
cmpsl
jl
clc
pop
mov
call
scas
xchg
ficoml
dec
shrl
aas
orl
xor
adc
lods
jl
mov
test
inc
add
adc
in
sarb
inc
aam
sub
pop
push
mov
xor
out
sub
imul
lcall
popa
cmpsb
sbb
sbb
inc
or
push
pop
pusha
or
cmp
sub
jmp
imul
xor
jns
push
in
pop
jp
aaa
inc
cmp
jnp
adc
nop
cs
lock
pop
popf
jl
in
imul
aam
push
movsb
mov
jno
call
xchg
sub
push
outsl
frstor
addr16
or
add
push
xor
push
adc
icebp
ja
or
enter
xor
ret
xor
xchg
push
jecxz
sahf
mov
or
cmp
jmp
imul
std
push
push
mov
mov
push
stos
mov
jb
jnp
mov
subb
int3
xchg
jns
jne
mov
lret
sub
lea
pop
neg
xchg
ljmp
or
pop
popa
pop
mov
xor
cld
fnstcw
mov
or
scas
add
mov
fidivl
cmc
xor
cwtl
aam
test
out
sbb
inc
sub
push
insl
or
imul
aam
mov
mov
ret
cmpsl
outsb
cli
mov
loope
sub
pop
jo
push
mov
scas
cmp
push
out
cmp
cmp
add
mov
push
int
sbbb
adc
stc
cltd
push
jg
popf
mov
pop
cmp
andl
push
lret
push
stc
adc
cmp
or
clc
mov
jns
stos
xorl
cld
mov
inc
and
pop
mul
jne
jmp
and
or
ja
jmp
inc
cli
pop
sub
adc
and
int
mov
add
bound
ss
ret
adc
repz
loop
sahf
sub
xor
ja
mov
in
jle
andb
cmp
cmp
mov
xchg
daa
push
cli
mov
mov
mov
sbb
sub
sbb
mov
test
adc
pusha
int
adc
lcall
call
adcl
imul
push
hlt
mov
push
pushl
loopne
insl
js
out
mov
jle
xchg
shr
push
aaa
push
imul
fnstenv
dec
push
int3
inc
cmpsl
cmp
cmc
scas
push
or
or
sub
cs
dec
out
cmpsb
dec
xchg
or
dec
mull
cmp
mov
repz
adc
adc
arpl
sbb
out
ror
sbb
jne
fadds
push
pop
mov
sbb
movsb
sbb
add
and
fnstenv
insb
inc
mov
pop
lods
into
call
sbb
fdivr
pushf
push
sub
dec
jecxz
mov
jb
testl
add
add
mov
sbb
ret
cmp
xor
movd
bnd
push
mov
or
or
mov
and
mov
arpl
adc
lahf
and
adc
cmp
shl
dec
dec
fs
fiaddl
arpl
fwait
push
aam
xchg
pop
sbb
mov
popf
inc
pop
enter
fists
enter
rorb
scas
xchg
test
cmp
mov
sbbb
ja
nop
adc
mull
rol
movsl
sahf
add
icebp
out
xchg
les
sbb
popa
in
mov
outsb
stos
jp
pop
jl
mov
dec
jbe
lock
adc
push
xchg
push
mov
test
and
pop
sub
arpl
stc
fmull
out
sahf
jle
and
aam
int3
fisubs
out
lahf
cmp
mov
stos
in
jecxz
aad
xchg
inc
and
in
pop
loopne
pop
push
roll
out
add
sub
push
mov
dec
scas
dec
sahf
or
xchg
sub
adc
sub
or
mov
dec
insb
lea
pop
mov
xlat
pusha
jbe
insl
test
rolw
xchg
jbe
xchg
push
in
jbe
shrb
outsl
ja
and
push
jbe
les
dec
and
cmp
enter
clc
add
pusha
lret
mov
cltd
mov
jecxz
clc
cltd
or
faddl
mov
stos
xchg
test
loop
pop
lret
and
and
push
push
insb
mov
mov
sbb
in
adc
add
xor
pop
icebp
pop
js
fidivs
imul
mov
jle
stc
lea
cmpsl
call
cmp
ret
sub
or
pop
fdivrl
xchg
xchg
nop
movsb
into
out
popa
push
pop
rdmsr
frstor
mov
clc
out
or
adc
lret
and
push
lods
fwait
daa
push
fucomp
ja
sbb
jne
lcall
stos
test
popa
addr16
test
icebp
notl
mov
cltd
das
fwait
mov
subb
cmp
sub
dec
or
mov
inc
rol
push
dec
fidivs
rcll
insl
bound
add
sahf
jp
outsl
repz
dec
addb
fucom
fdivl
sti
push
test
and
frstor
ja
out
cmp
add
sbb
xchg
cwtl
es
inc
xor
and
and
aam
ljmp
mov
add
std
pop
mov
rol
jp
dec
ds
mov
int3
dec
mov
daa
pop
xlat
push
xchg
cld
sbb
rcl
fistpl
aas
inc
sub
vandnpd
inc
int3
cmp
jge
mov
push
mov
cli
stos
cmc
mov
pop
pop
jp
sbb
sahf
data16
clc
lret
and
in
mov
xchg
cmpsl
jne
ss
test
ss
jg
cli
int3
fidivrl
or
add
cmp
push
adc
aas
scas
out
cmovp
jge
pop
pop
insl
test
lea
sub
xchg
mov
insb
and
gs
dec
les
out
lods
dec
repnz
mov
ret
rol
xor
ds
sub
std
push
xchg
and
or
push
cltd
adc
jae
mov
loopne
icebp
jb
cmp
std
pop
and
lock
ja
adcb
cmp
dec
fwait
xchg
sbb
mov
sub
push
mov
push
aas
movsl
gs
ds
dec
dec
dec
xchg
xor
dec
imul
dec
mov
inc
jo
mov
dec
jmp
test
mov
mov
imul
xchg
mov
lret
mov
push
mov
dec
or
cli
xchg
in
ljmp
sub
insb
int
and
push
inc
xchg
pop
int
mov
pop
cli
aad
js
lret
rcll
in
mov
test
sbb
cld
jecxz
sbb
shlb
or
jnp
inc
jmp
jo
ja
jae
pop
cmp
leave
mov
push
cwtl
aas
lcall
inc
fldenv
clc
jb
inc
xor
adc
rorb
icebp
add
jno
fwait
mov
xchg
faddl
cli
fldpi
pop
and
movsb
aaa
sti
dec
fabs
loopne
lea
xchg
or
clc
loop
test
shll
cmp
cmp
fistps
cmpsb
pusha
push
cld
imul
cmc
lds
aam
xchg
test
xchg
mov
jecxz
mov
cld
sub
popf
sarl
dec
adc
inc
inc
push
ret
sbb
mov
cwtl
dec
fwait
push
call
imul
add
push
aaa
or
in
js
ds
mov
jae
and
movsb
nop
adcl
add
and
in
adc
mov
nop
xchg
add
iret
inc
les
mov
and
fsubrs
xorl
es
sbb
sbb
and
ret
push
stc
shll
sbb
lahf
iret
jge
sbb
pop
adc
stc
cmp
pop
cmc
shlb
or
mov
add
pop
push
outsl
bnd
call
mov
push
js
mov
push
cmpsl
push
rorb
stos
inc
fadd
push
adc
push
inc
test
dec
and
xchg
subl
push
lret
mov
jmp
pop
in
rcll
les
lods
scas
aad
xorl
sbb
movsb
cli
inc
inc
pop
enter
cld
inc
mov
sahf
out
mov
xor
sbb
outsb
push
xor
inc
adc
pop
mov
push
sbb
dec
adc
inc
pop
xor
pop
sbb
mov
clc
imul
mov
fidivs
fisubrl
cmp
pop
jecxz
xchg
clc
adc
sbb
aas
fidivs
shrb
ja
rorl
lahf
pop
jbe
addr16
xchg
jns
into
push
cmpsb
sub
hlt
sbb
or
sti
add
adc
inc
sarl
cmpl
call
mov
inc
leave
movsb
push
inc
fwait
lds
stc
push
mov
fwait
out
scas
push
pushf
push
aad
jne
pushf
push
outsl
je
push
test
shrl
mov
test
mov
out
gs
ja
mov
ret
xchg
lret
ret
gs
insb
es
inc
outsb
daa
clc
imul
dec
jmp
sub
pop
jmp
js
sub
ja
jae
xor
cmp
pusha
xchg
inc
ja
mov
xchg
jg
gs
fs
orl
hlt
scas
mov
xchg
insb
push
mov
cmp
test
daa
xchg
xchg
mov
sub
cmpsl
jl
jecxz
cmp
mov
leave
cmp
out
sbb
xor
dec
cwtl
out
sahf
sub
aad
jmp
pop
pop
cmp
roll
mov
in
push
aam
pushl
jmp
aam
xchg
hlt
mov
xor
cmp
arpl
ljmp
xchg
xchg
inc
inc
pusha
push
pop
add
jg
jge
fsubp
mov
dec
fidivrs
cmp
xchg
inc
stos
test
cmp
stos
dec
jae
or
sbbl
dec
cltd
mov
xchg
sbb
and
lret
lds
addl
fs
and
icebp
push
or
push
pusha
mov
clc
xchg
rcrl
mov
pop
jb
mov
call
pusha
ror
add
cld
stc
push
call
ljmp
addr16
jp
mov
je
jne
jp
mov
call
jg
les
add
jle
jg
jmp
inc
call
lcall
and
add
add
addl
ret
sar
call
jmp
ret
jge
mov
push
call
ljmp
mov
call
ljmp
call
ljmp
into
outsl
jmp
jmp
mov
cltd
divl
jae
jl
notl
add
add
je
pop
js
mov
call
je
les
sbb
jl
fbld
add
sbbl
jns
add
push
ret
clc
call
jl
les
mov
add
add
lcall
add
jle
add
push
ret
inc
push
call
jbe
pop
rcl
jp
jnp
jl
sti
jb
jae
jnp
push
call
call
jb
jae
jg
je
mov
inc
push
xchg
pop
push
call
jae
pop
test
jmp
jns
mov
jns
and
mov
call
jnp
add
push
ret
jmp
cld
stc
jmp
xchg
mov
sar
add
push
call
jnp
pop
jmp
xchg
jb
dec
xchg
mov
call
jmp
les
add
mov
add
add
shr
inc
sub
call
jns
add
push
ret
jmp
add
rcr
dec
ror
jmp
jp
sub
inc
sub
xor
add
call
jmp
ret
sbb
adc
mov
jne
mov
mov
push
call
jmp
pop
jmp
inc
jmp
mov
xchg
xor
call
js
les
pop
add
add
shll
ds
add
push
call
jnp
pop
jmp
rcl
ja
mov
mov
test
add
jne
call
jmp
or
mov
add
add
add
add
mov
cmp
push
jo
leave
or
scas
pop
mov
adc
imul
movsl
or
inc
push
xchg
push
stos
dec
pop
jne
ss
sbb
aaa
pop
lret
jns
dec
sbb
divb
mov
add
es
repnz
and
mov
inc
ljmp
or
pusha
adcl
jle
dec
lcall
mov
cmpsl
and
mov
jns
mov
jns
cmpsl
xor
xchg
adc
lret
das
xor
push
mov
hlt
les
int
inc
adc
and
loope
lea
adc
xchg
adc
add
or
pop
and
cmp
lods
xor
adc
testb
movsl
or
jle
cli
repz
mov
shrl
lcall
xlat
push
lock
enter
push
xchg
sub
mov
adcl
push
nop
add
xor
cmpsl
push
addr16
mov
sbb
cmp
xchg
mov
dec
imul
add
xchg
test
add
imul
sbb
pop
adc
mov
sahf
leave
loopne
shrl
jmp
pop
mov
mov
gs
cmp
xor
mov
xchg
cmp
testb
mov
ljmp
cmc
dec
add
cmpsl
sbb
je
inc
lcall
in
push
shlb
inc
movsl
cmp
xor
pop
test
test
cli
mov
lods
dec
js
adc
adc
sahf
ret
add
pop
xor
shll
mov
pop
jl
sub
movsb
das
push
push
js
repz
or
dec
ja
xor
and
jecxz
mov
add
xchg
jne
das
lods
rol
push
in
mov
outsl
imul
test
fs
imul
pusha
mov
cmp
stos
jno
jno
into
adc
incl
repz
jmp
adc
mov
sub
ss
mov
and
cmpsb
jno
cmpsl
xchg
xchg
popa
test
pusha
pop
pop
push
jp
dec
gs
jg
stc
sub
nop
ret
fldt
dec
in
xchg
push
lods
dec
adc
cmp
cmp
pop
jg
mov
mov
jp
dec
mov
pusha
stos
mov
add
dec
cltd
cltd
aas
adc
andb
add
xchg
mov
outsl
cmp
jbe
in
not
aad
cmc
insb
iret
scas
inc
mov
rcrl
mov
push
pop
pop
cmpsb
jg
clc
pop
cmp
mov
mov
cmc
ja
xlat
gs
mov
mov
repz
movsb
cmp
out
adc
daa
int
jae
jmp
stos
xor
in
jnp
bound
loope
sbb
enter
inc
cmp
adc
cmp
mulb
leave
test
and
sub
movsb
fnstcw
sbb
stos
jnp
and
gs
sub
enter
cmp
out
roll
fs
xchg
repz
int
cmp
subb
adc
mov
cmp
popf
sarb
xor
xchg
stc
add
or
fildl
sbb
mov
scas
sub
adc
fs
sbb
mov
pop
add
ljmp
fimull
pcmpgtb
mov
adc
pop
inc
mov
xor
aad
xchg
mov
stos
cmpsb
mulb
inc
sti
push
loop
xchg
negb
pushf
in
add
dec
rol
inc
mov
movsl
dec
stos
and
imul
cmp
and
gs
scas
add
rclb
jl
pop
and
pop
inc
js
insl
fstpl
sbb
es
jb
xchg
add
xchg
lods
cltd
cmp
ljmp
jl
std
mov
or
fwait
ret
mov
int
push
jb
inc
ss
mov
in
fcomps
dec
in
test
cmpb
jmp
mov
sbb
push
jae
out
jmp
and
pop
adc
int3
pop
loope
or
pop
xchg
or
ret
or
test
xchg
ret
ffree
cmp
int3
cld
mov
sbb
out
jl
push
das
inc
xchg
cmp
mov
dec
sti
cmp
jecxz
adc
mov
and
scas
cwtd
mov
mov
pop
inc
pop
mov
popa
jle
rolb
loopne
xor
jmp
fdivrs
sub
jle
or
mov
mov
mov
fiadds
pop
stos
test
es
sarb
out
fimull
ss
fs
add
and
mov
ds
jmp
push
insb
mov
rcrl
add
add
sar
mov
add
xor
outsb
sbb
pop
mov
enter
mov
xorl
lahf
sbb
pop
push
out
push
pop
mov
shrb
loopne
jae
and
popa
xor
lock
xchg
scas
cmp
sub
xor
pop
cmp
jge
fcompl
sahf
fbstp
lock
cmp
aad
outsb
inc
push
cmp
pop
movsl
addr16
cmp
das
loope
sar
adc
adc
jmp
aad
push
cmc
cmpsl
and
lret
popf
pop
repnz
mov
and
or
xchg
or
js
push
cmp
pop
mov
mov
xor
imul
inc
add
pop
sbb
push
sbb
sub
dec
imul
xor
jbe
push
fidivrs
or
jp
gs
into
mov
pop
push
add
mov
xchg
or
mov
stos
mov
inc
jle
jbe
rcl
icebp
cmp
jne
adcb
js
push
inc
pop
jge
paddsw
push
mov
cmp
adc
pop
push
test
fdivrl
imul
ror
cld
cld
outsb
insl
fsubrs
lret
in
cli
cmc
cmpb
or
lret
mov
mov
mov
mov
jo
sub
dec
cwtl
call
fnstsw
inc
pop
outsb
xchg
and
ret
jmp
pop
in
lods
add
out
cli
aam
jmp
adc
xlat
shlb
adcb
xchg
sub
lods
out
in
add
iret
mov
pop
mov
in
iret
jp
mov
sbb
scas
pop
add
ret
cmp
sbb
xchg
and
mov
movsb
mov
xchg
std
sub
sub
or
push
inc
testl
dec
stc
enter
mov
decl
xchg
pop
imulb
inc
idivl
jnp
fdiv
dec
ret
fldt
mov
mov
fidivrs
add
and
pushf
les
jmp
loope
dec
mov
mov
mov
shr
pmaxub
inc
mov
pop
sti
incl
aaa
fistpl
jl
sub
imul
fstpt
pusha
sbb
jecxz
aad
push
fdivl
cmp
inc
mov
out
dec
fisttps
push
jmp
int
mov
inc
inc
in
cmp
jb
dec
and
inc
lret
mov
lret
xchg
adc
and
push
loop
scas
lret
aas
sub
lds
mov
push
cmp
pop
sbb
xchg
rorb
stos
jbe
xchg
xor
cmpb
call
mov
or
push
xor
sbb
fldt
call
inc
and
das
and
xchg
aas
cmp
cmpb
add
dec
loopne
inc
enter
shlb
cmp
jmp
stos
jae
mov
xorb
jmp
rep
xchg
fldl
or
fs
or
adc
ret
add
jnp
mov
pop
mov
iret
add
insl
cmc
inc
test
mov
hlt
jns
jne
jecxz
pop
mov
repz
ficomps
pop
and
addr16
mov
adc
cltd
das
addr16
addr16
sub
xchg
into
sahf
sub
push
jmp
es
jle
cmp
bound
orl
lea
add
add
aad
jmp
imul
shll
stc
cltd
rcll
leave
shll
sbb
in
mov
mov
fmuls
xchg
lds
imul
cltd
jecxz
sub
rorb
push
mov
ffree
mov
bnd
sub
repnz
mov
loopne
lock
fisubl
shrl
and
dec
pop
fwait
xor
jb
or
mov
mov
add
jnp
inc
enter
adc
xor
mov
stos
enter
cmp
popa
lahf
sbb
mov
inc
in
clts
inc
les
shlb
push
mov
icebp
pop
jl
mov
mov
cltd
lahf
mov
xor
insb
movsl
pop
sbb
leave
xor
push
xchg
aaa
hlt
dec
daa
bound
shll
sub
ss
sbb
daa
mov
lods
iret
adc
adc
cmp
sbb
mov
bound
pusha
rclb
ds
ret
mov
stos
cmpsl
push
outsb
stos
imulb
jne
fldz
cmc
jbe
adc
inc
gs
shrl
mov
movsl
data16
add
mov
mov
mull
enter
and
mov
cmp
and
arpl
js
cli
adc
out
inc
int
jmp
adc
sub
cs
js
sub
aad
xchg
fdivr
mov
in
cmp
push
xor
out
add
pop
popf
or
sbb
push
dec
scas
cs
fs
pop
dec
inc
fisttpl
cmpsb
and
shlb
inc
cmpsl
pop
loopne
sbb
fcom
xor
mov
adc
inc
xor
ret
fnstenv
and
inc
nop
pop
stos
and
cmp
sub
movsb
push
in
pusha
ret
mov
pop
mov
cltd
xorb
fndisi(8087
and
testb
fistpl
clc
xor
inc
les
std
divb
sbb
movsb
outsl
jb
setns
xor
mov
add
std
push
add
jg
call
jge
pushf
addr16
arpl
ror
jns
test
mov
inc
jne
or
push
sbbb
push
xchg
out
mov
adc
in
dec
push
test
sub
shl
mov
or
js,pt
add
mov
push
push
adc
inc
stc
mov
sub
cmp
inc
fs
fists
repnz
xor
mov
adc
sbb
add
mov
sbb
inc
push
ret
movsl
and
ljmp
mov
jge
pop
inc
daa
jecxz
mov
inc
xor
jle
xchg
inc
shll
mov
and
xchg
loope
xorps
lahf
sbb
imul
ret
fcoml
es
add
adc
inc
fisubrs
pop
imul
in
cmp
push
push
push
call
mov
bound
test
add
add
arpl
sarl
outsl
popf
add
sbb
cmp
mov
sub
sahf
dec
jnp
xchg
outsl
adcb
jbe
cmc
fcomps
and
jl
sub
in
xor
inc
inc
pusha
jp
into
fmuls
add
mov
lods
jecxz
sahf
inc
hlt
test
test
out
rcll
mov
inc
addr16
movsl
xchg
std
int3
fs
inc
jo
sbb
pop
bound
inc
sbb
icebp
inc
xor
ret
gs
lahf
sbb
and
lods
pop
jmp
or
mov
bound
test
cmc
insl
outsb
pushf
xchg
cmp
rolb
dec
lret
icebp
icebp
mov
lret
or
sbb
xor
xor
or
push
pop
fdivrl
add
dec
fidivrl
pop
xor
fcmove
mov
jmp
fs
fyl2x
orl
sub
ds
andl
cld
jbe
popf
roll
scas
test
xor
sbb
jne
rcll
push
test
lahf
stos
cmp
xchg
mov
and
adc
lock
push
mov
xchg
jmp
or
pop
pusha
repz
mov
add
shl
or
xor
icebp
jo
push
mov
mov
roll
es
insb
or
inc
mov
fisttpll
dec
xor
cmp
push
cwtl
jl
lods
mov
inc
xlat
repnz
push
lods
loope
addr16
pop
dec
lds
or
cmpsb
add
xor
sbb
or
es
push
cld
lea
or
adc
daa
imulb
xchg
mov
xchg
xchg
xlat
xor
mov
insl
mov
mov
fisubl
push
pop
xchg
sbb
xchg
pushf
pop
inc
xor
in
xchg
jp
into
mov
movsl
or
out
jns
fildl
scas
adc
mov
jp
out
push
scas
sub
jno
mov
mov
rclb
push
jo
addb
dec
js
push
push
dec
mov
mov
mov
add
fdivrl
xor
shl
movl
iret
push
test
outsb
ret
xchg
cmp
push
mov
cmp
xor
ret
pop
data16
pop
sbb
orl
add
add
mov
fstps
cmpl
inc
add
arpl
xor
sbb
push
cmc
adc
xor
adc
lret
bound
into
push
out
sbb
data16
lret
arpl
mov
push
cmp
in
ficoms
mov
lret
xor
jg
repz
daa
cmp
rcrb
sbb
cmpsb
lea
mov
repz
sbbl
lret
out
inc
and
stc
mov
cmp
leave
fdivl
pop
mov
mov
and
dec
jg
icebp
mov
repnz
pop
sbb
loop
cmp
lea
jp
fidivrl
cmp
daa
call
push
or
mov
adcl
out
popl
movsb
test
push
mov
aam
inc
push
or
aad
mov
loopne
xor
or
sub
push
cli
int
jp
call
js
loopne
fadd
mov
test
sbb
xchg
loop
and
adc
mov
push
repnz
jecxz
jbe
scas
adc
insl
mov
cmp
sbb
jmp
mov
mov
mov
cmpsl
jmp
sub
xchg
fiaddl
add
stc
mov
and
push
adc
cltd
mov
or
cmp
ficomps
mov
repnz
gs
xlat
in
mov
jns
cmc
shll
mov
lahf
mov
jb
mov
add
mov
iret
push
sbb
pop
add
push
sahf
pxor
add
jge
jp
or
in
stc
popf
sbb
addr16
adc
in
push
sarl
sub
pusha
leave
mov
add
and
xchg
xor
movsb
sub
call
mov
insl
push
and
and
lock
fsub
stc
rcll
cmpsl
or
insl
decb
mov
push
fyl2xp1
fdivs
jo
popa
mov
sbb
xor
mov
xor
pop
fnsave
aam
int
pusha
fadds
ja
and
dec
lods
add
imul
lea
mov
xchg
jmp
das
mov
xchg
cmp
sbb
add
xchg
in
in
xchg
cmp
popf
sbb
pop
leave
add
and
lcall
pop
scas
cltd
in
fstpt
mov
dec
aad
sbb
cld
pop
sbb
xchg
jl
in
mov
sbb
fcmovnb
popa
push
xlat
lods
rcrb
out
cwtl
in
out
mov
jnp
sub
mov
iret
das
mov
inc
mov
fsubrs
cld
ja
ja
xchg
add
icebp
mov
fiaddl
add
push
jp
ds
outsb
ss
adcb
mov
lods
add
mov
push
or
inc
or
fimuls
sbb
add
sub
push
push
xchg
clc
xchg
repz
subb
pushl
mov
pop
jne
aaa
pop
dec
daa
inc
les
movsb
lock
jg
movsl
aas
push
mov
inc
xchg
cli
and
xchg
mov
and
or
mov
enter
jmp
xor
js
jge
jae
rclb
cmp
inc
or
mov
sub
aam
sbb
insl
jmp
push
mov
shl
adc
bound
sbb
pop
add
jge
dec
test
outsb
repnz
lock
dec
enter
mov
adc
or
xchg
jae
lret
aam
inc
cmp
and
fwait
cli
pop
loope
jnp
je
sub
js
adc
vcvtsd2si
aad
ret
mov
movsl
test
xchg
mov
add
lret
add
xchg
lret
adc
sub
ds
mov
lds
nop
xor
jp
push
std
test
xchg
stos
ret
dec
jg
xor
filds
add
dec
lds
jnp
cmpsb
sarb
inc
lds
xchg
jecxz
call
pushf
xchg
inc
loopne
lock
out
xchg
or
sti
mov
jbe
xor
insl
mov
xor
dec
rolb
add
fs
jecxz
cmp
iret
sbb
adc
add
pop
jecxz
sub
mov
popf
and
dec
mov
sti
cmp
mov
jbe
cld
stc
sub
sahf
or
test
out
adc
out
mov
or
in
push
call
mov
outsl
icebp
outsl
scas
shll
push
inc
jmp
fistpll
jecxz
cli
mov
outsb
test
cltd
xlat
sbb
ffreep
pop
xor
push
jb
pusha
test
adc
enter
les
xor
arpl
push
mov
hlt
nop
into
cmc
bound
insb
roll
xchg
daa
lods
stc
xor
int3
cmp
mov
in
js
sbb
pop
and
movsb
cmpsl
repz
fs
pop
out
ret
shrb
cwtl
fisubs
test
cmp
add
jno
sbbl
add
pop
push
lret
dec
ljmp
mov
mov
inc
pusha
adc
insl
jb
data16
lret
icebp
nop
in
mov
aam
push
inc
rorb
dec
lea
adc
aas
xchg
pop
insl
jns
cmp
lahf
add
shl
into
xor
fstpl
imul
arpl
mov
add
test
mov
cmp
call
pop
xor
sub
push
mov
das
sub
ret
dec
add
test
fcomi
xchg
insb
lea
dec
adc
lea
test
mov
std
xchg
scas
pusha
pop
inc
in
push
test
outsl
xor
cmp
stos
mov
or
mov
rorl
mov
cmp
fsubl
pop
inc
sti
stos
les
in
lds
mov
sarb
imul
add
popa
push
sbb
sub
jg
xlat
mov
pop
xchg
pop
int3
movsb
mov
sbb
pop
in
sbb
pop
inc
fisttpll
add
nop
jb
fiaddl
lock
jnp
mov
and
in
std
add
push
pop
jae
lock
shr
or
push
aaa
sub
aas
cmp
push
enter
add
xchg
mov
cs
fucomi
sub
loopne
inc
xor
pop
sbb
bound
mov
sbb
dec
pop
mov
rol
xchg
stc
and
xor
int3
shl
outsl
xchg
mov
loopne
sbb
mov
sbb
aaa
popf
mov
pop
mov
push
or
cld
out
ljmp
icebp
fs
out
cmc
xchg
inc
fadds
and
mov
addb
add
test
ret
sub
outsb
jle
fisubrl
jge
mov
jecxz
mov
cld
inc
dec
jnp
mov
test
sar
and
sbb
dec
popf
sub
pop
pop
mov
int
out
out
shl
sub
mov
mov
push
pop
jno
roll
out
cmp
jmp
xor
lock
push
and
mov
push
scas
dec
and
notl
xchg
adc
adc
aaa
iret
mov
and
lahf
or
ret
push
push
mov
cmp
out
test
push
lods
call
xchg
inc
stc
mov
xchg
loope
cmp
mov
jne
ss
nop
aad
loope
xchg
sbb
out
addr16
and
jp
jmp
int
inc
rcl
lock
mov
mov
pop
sbbl
es
pop
xchg
mov
aam
add
mov
mov
jp
stos
lods
lods
lea
rolb
repnz
cmp
das
scas
inc
push
and
mov
cmp
sbb
push
je
imul
jbe
dec
adc
shlb
xchg
ret
addr16
jnp
lock
roll
cmpsl
jb
sbb
mov
inc
repz
pop
add
ja
in
mov
inc
jns
clc
insb
out
jmp
lock
inc
ret
popf
adcb
mov
jns
movsb
jg
mov
push
jno
repnz
mov
mov
in
adc
cli
sbb
and
push
out
xchg
mov
sbb
test
aad
fwait
in
out
jge
pop
or
cwtl
mov
leave
test
test
scas
and
das
insb
xchg
xor
je
test
mov
jle
pusha
imul
inc
mov
jne
or
aaa
mov
adc
jb
call
xchg
mov
mov
shll
xchg
xchg
das
aad
imul
int3
pop
dec
fidivrl
out
cld
mov
in
in
mov
mov
loop
dec
movsb
jecxz
add
enter
out
cmp
jae
in
mov
arpl
or
cwtl
xchg
or
testl
data16
xchg
inc
sbb
mov
xchg
cmpsb
mov
insb
leave
sti
clc
sub
pop
sub
cltd
mov
rcrl
add
lret
filds
xchg
das
adc
enter
sti
pop
mov
dec
jnp
add
pop
std
and
adc
orb
enter
insb
stc
mov
and
xor
loope
pushf
testb
inc
gs
push
stos
pcmpgtb
dec
mov
push
mov
dec
inc
sbb
pop
or
dec
nop
push
mov
cli
outsb
les
cmp
andl
adc
cs
imul
mov
fldt
outsl
xorb
jne
dec
mov
dec
sub
call
cmp
fs
cld
in
mov
pop
ret
mov
cmpsb
cli
push
push
adc
xor
fmulp
data16
ret
pusha
push
loop
mov
rcrb
outsl
adc
push
pop
sbb
int
sub
dec
mov
imul
sbb
cld
sub
insl
test
xchg
lahf
jecxz
iret
mov
pushf
mov
pushf
push
loope
mov
stos
mov
sbb
in
pop
or
cmp
adc
insb
aam
dec
idiv
cmp
je
sbb
jl
mov
or
ds
call
stc
pop
ja
xchg
aaa
icebp
pop
pop
stos
sub
call
cli
push
pop
out
lahf
iret
xor
lcall
xchg
andb
imul
sbb
nop
xchg
push
rcl
testl
mov
int3
push
popf
and
aas
lock
inc
test
xchg
fs
adc
hlt
mov
jmp
enter
mov
jg
gs
mov
cmc
data16
test
dec
lret
insb
mov
shl
xchg
jmp
sub
cltd
das
out
lahf
cmp
repnz
sub
cmp
in
adc
adc
cmpsl
arpl
das
and
mov
movsb
scas
xchg
sbb
pusha
mov
sub
inc
addb
int3
pop
fwait
push
icebp
outsb
inc
dec
or
sbb
jmp
test
int3
pop
jge
pop
aam
test
pop
mov
dec
and
or
in
jecxz
inc
js
stc
inc
push
push
scas
out
mov
mov
push
lret
sbb
lea
and
and
aaa
sub
sub
pop
bound
pop
cwtl
xor
or
add
pop
das
xchg
push
jns
adc
lcall
jmp
sub
fs
lock
sbb
sub
rcll
in
mov
test
iret
lds
outsb
jle
cwtl
cmp
cmp
lret
sub
in
add
push
xchg
out
inc
mov
push
sbb
daa
mov
mov
push
add
test
bound
xor
push
or
adc
mov
xchg
mov
imul
mov
addr16
jge
jmp
int
cmp
cmpsl
ret
popa
mov
xchg
sub
and
mov
mov
fistpll
mov
out
pop
fmuls
stc
repz
out
outsl
insl
inc
add
out
rolb
xor
xchg
in
aaa
xor
xor
jb
loope
inc
mov
or
jmp
mov
jae
je
or
mov
sbb
mov
mov
or
dec
or
movsl
add
aas
push
in
sub
jle
loope
testl
sub
xchg
xchg
std
xor
jne
leave
lcall
inc
rcpps
inc
sbb
pop
pusha
sub
push
push
popl
mov
btc
in
add
decb
in
mov
testl
sti
push
out
cmpsl
std
lods
dec
push
aas
repz
xchg
jmp
push
mov
daa
out
sbb
mov
shlb
jns
jns
outsb
and
sbb
loop
push
add
pop
jns
andb
jg
lahf
pop
movl
inc
pop
adc
jl
or
pop
mov
insl
out
sbb
les
sub
inc
ja
adc
sub
jnp
shl
inc
int
cmpsb
adc
lret
aad
sbb
mov
fcomi
shrb
jae
cmp
jl
out
add
xchg
ss
or
out
jmp
aam
or
mov
cmc
sbbb
into
decl
push
repz
shrb
imul
jbe
pop
xor
outsb
lea
fsubrp
sub
xchg
arpl
add
aas
cmp
rcr
pop
cmp
mov
push
adcl
aad
mov
cs
popa
into
xor
ds
imul
xor
mov
jb
sti
dec
cmpsl
mov
xchg
fidivrl
lea
sbb
or
or
push
xchg
nop
or
shr
iret
test
dec
push
in
mov
add
inc
mov
adc
mov
pop
or
shrb
imul
push
dec
test
outsl
mov
jns
sub
cmp
push
sti
divb
outsb
jge
and
mov
jecxz
mov
inc
push
lret
and
rclb
scas
mov
mov
fcoms
nop
movsb
jne
enter
jmp
xchg
xchg
push
data16
addr16
mov
and
and
sub
push
sub
mov
mov
mov
or
fldt
stos
mov
add
cmp
push
addl
in
fcomi
cld
and
fwait
leave
cmp
dec
data16
cwtl
dec
icebp
fistl
cld
push
mov
stos
jo
inc
pop
popf
cmpsb
sarl
jbe
inc
imul
mov
je
js
jo
imul
shlb
sahf
inc
ss
inc
pop
jb
fdiv
mov
or
mov
aad
cwtl
mov
repz
loop
push
and
cmp
xor
inc
and
lret
ljmp
push
es
lret
push
stos
aaa
roll
out
je
xor
leave
push
jae
xchg
xor
cli
loopne
iret
ja
scas
inc
lods
test
notl
clc
push
nop
cmp
pop
in
lahf
loop
cs
mov
outsb
adc
shlb
sti
test
xchg
pop
adc
xor
sub
pop
ret
sbb
xor
pop
sbbb
lods
mov
not
cmp
iret
std
xchg
mov
js
lods
and
mov
ss
test
adc
push
adc
or
fistpl
xchg
mov
loopne
popf
dec
in
inc
sub
mov
scas
adc
jecxz
orl
test
mov
iret
cmp
adc
stos
test
push
ja
mov
andl
jle
xchg
pop
jne
call
cmpsb
mov
fsubrl
and
test
lret
mov
sbb
in
xchg
push
adc
test
lods
jns
and
cmpsb
mov
mov
mov
pop
mov
mov
or
push
push
push
cmp
jg
xchg
xor
or
add
ss
out
inc
inc
sbb
push
dec
das
mov
mov
ficoml
aam
lret
out
jne
mov
rolb
push
gs
test
jmp
cmp
xor
jno
sarb
movsb
testb
xor
lods
push
pushf
lods
jmp
cmp
loope
jmp
fadds
roll
inc
push
ret
lahf
cmpb
or
lsl
int3
mov
xchg
mov
or
jmp
out
add
cltd
call
js
jmp
sahf
or
push
imul
push
nop
mov
add
decl
jmp
pop
or
out
ret
push
iret
inc
cmpsb
inc
sub
aaa
mov
dec
ret
fwait
out
ds
push
lcall
leave
fimull
enter
fdivs
mov
ret
mov
insl
es
imul
mov
mov
xchg
outsl
fs
pop
pop
lock
jl
add
dec
sub
es
lahf
add
add
mov
cwtl
mov
jmp
xor
test
fwait
dec
xchg
arpl
pop
fndisi(8087
int3
add
lret
cmp
jae
sbb
sub
mov
repnz
call
leave
ret
shrl
jno
xchg
jne
sbb
xchg
lahf
cltd
arpl
xchg
mov
fisubrl
cmp
andl
dec
ficoml
es
lcall
add
test
jnp
divl
sub
fidivs
lds
mov
jo
fwait
imull
leave
xchg
stos
movsb
aaa
dec
mov
je
out
int3
fistps
int3
mov
stos
push
add
push
mov
push
xchg
mov
in
dec
aam
jmp
inc
pop
cli
js
sahf
pop
insb
pop
push
test
jl
sub
dec
xchg
outsl
dec
iret
int3
jge
add
jecxz
sbb
xlat
jecxz
pop
sub
dec
enter
push
arpl
or
stos
or
sub
push
js
jl
jg
outsl
xchg
orb
out
dec
push
cmp
fistl
jge
or
jecxz
clc
shl
push
pop
and
inc
in
jo
sbb
and
xchg
jp
int3
lret
bound
notb
hlt
add
pop
cmc
mov
int
and
fcomps
daa
inc
and
adc
andl
add
faddp
jbe
imul
push
or
shl
rolb
scas
mov
mov
scas
in
or
in
icebp
mov
leave
xchg
jle
loopne
push
and
push
outsl
mov
lret
loop
jmp
int
fisubrl
xor
pop
mov
push
pop
lcall
ja
lds
jno
mov
shl
movsl
shrl
data16
mov
xchg
add
jne
mov
sbb
lahf
push
inc
adc
cmp
sub
cvtps2pd
lret
mov
std
mov
ret
pop
and
mov
add
pusha
or
in
sbb
sub
pusha
or
mov
sbb
inc
movsl
add
arpl
sbb
add
lods
testl
mov
ret
mov
ror
shl
or
test
fld
push
push
stos
test
inc
inc
pusha
pop
jnp
insl
jo
out
dec
insl
imul
xchg
dec
repz
pop
or
lret
xor
imul
shrb
fdivrs
dec
pop
dec
js
shrb
popa
scas
jo
inc
test
or
aas
cwtl
xlat
rcl
mov
jmp
cld
xchg
dec
loop
lret
loop
inc
xor
lods
sub
nop
cltd
rclb
cli
sub
aam
sub
inc
cltd
or
mov
stos
lret
pop
stos
test
ffreep
cmp
fadd
add
out
mov
lret
xchg
shl
mov
das
jbe
fldt
loop
stos
sub
or
ja
mov
adc
adc
icebp
jl
mov
cld
icebp
fdivl
gs
push
mov
inc
mov
lret
leave
or
xchg
jp
mov
addl
or
outsl
jo
mov
inc
repz
sub
div
mov
xchg
xor
jb
movsb
out
into
data16
sti
mov
lea
xchg
ja
mov
filds
sub
or
jo
out
test
out
aam
xchg
movb
shl
fimuls
push
lcall
mov
jl
sbb
faddl
or
mov
dec
push
add
ja
mov
in
sbb
inc
pop
movsl
xchg
std
fmul
xchg
out
xchg
add
icebp
or
xchg
sti
aaa
icebp
out
ds
dec
stos
add
ret
rol
in
pushf
jb
bound
dec
in
jae
adc
popf
mov
jmp
sbbb
push
xchg
sbb
cmp
dec
lcall
rcrl
testl
test
gs
add
mov
int
adc
sbb
mov
les
dec
rcrb
jbe
hlt
pusha
jle
push
shll
xchg
jns
inc
sbbl
push
cltd
shrl
pop
sub
push
dec
rcrl
sub
push
xchg
cltd
repnz
divb
es
adc
lret
pushl
or
aad
adc
std
push
push
fcompl
add
js
jl
jp
stos
push
out
or
stos
outsl
clc
ss
mov
mov
gs
mov
icebp
mov
ret
loop
inc
xchg
mov
sti
pop
pusha
xor
mov
cwtl
xchg
fidivs
scas
sbb
xchg
in
xor
sub
fldcw
adc
xlat
adcl
push
adc
sbb
mov
out
jmp
sahf
aas
or
push
ret
jno
je
jns
mov
mov
test
push
jne
mov
es
mov
push
icebp
nop
xchg
or
pop
jle
inc
in
movsl
outsl
xchg
mov
cli
cmp
mov
push
sub
pusha
adc
sub
pop
int
pop
ret
mov
push
push
repz
jle
push
dec
gs
sub
add
mov
nop
push
mov
fs
sti
cmp
sahf
add
cmpsb
add
dec
iret
jge
mov
dec
divl
jo
movb
adc
sbb
call
mov
inc
sbb
pop
mov
mov
inc
sub
dec
sbb
pop
mov
and
and
pusha
popa
and
mov
dec
sbb
outsl
je
loopne
and
enter
add
jae
xchg
aad
dec
pop
jno
push
lret
jle
movsl
xor
ficoml
lcall
test
int3
repz
daa
xchg
hlt
or
sbb
cmp
repnz
xchg
ret
xorl
mov
jno
fcompl
fwait
mov
xchg
lret
imul
stos
mov
pop
add
inc
inc
cld
inc
loope
loop
and
outsl
pop
loope
or
icebp
jnp
in
jecxz
pop
xchg
fldenv
adc
fwait
daa
std
subl
outsb
and
fdivp
mov
mov
inc
push
or
xchg
xchg
in
iret
dec
mov
inc
adc
xor
pop
and
dec
pushf
pop
js
andps
and
mov
and
mov
repz
add
in
cmpsb
xchg
std
jbe
movsl
mov
negl
lcall
pop
sbb
mov
dec
lock
int
inc
adc
mov
add
nop
in
dec
jne
stc
pop
jp,pt
test
test
shr
movsl
sub
das
mov
adc
ljmp
hlt
mov
jmp
push
dec
jecxz
gs
cmp
sub
mov
mov
daa
iret
aas
and
mov
es
jnp
sbb
inc
or
sti
xor
jno
sub
adc
push
cmp
fidivl
and
loopne
je
dec
aad
data16
pop
xchg
jo
mov
pop
sub
add
add
mov
adc
ja
imul
sahf
mov
fstps
loop
fmuls
xchg
gs
clc
pop
xchg
mov
pop
sub
ficompl
push
ficoml
rcrb
jp
xchg
cmp
jle
gs
das
aad
push
lea
add
dec
add
cmpsb
aam
fucomp
inc
inc
mov
scas
in
scas
cmp
pop
lret
daa
lock
dec
adc
add
ret
pop
push
push
and
cmp
loopne
repz
sub
mov
push
dec
pusha
cmp
in
icebp
je
jae
jb
dec
push
xchg
loope
mov
or
pop
cmpsb
add
loop
shll
in
movsl
lret
xor
jmp
adc
out
and
push
lea
push
adc
repz
movsb
xchg
testl
lds
xorb
and
jno
jno
mov
push
push
nop
xor
aam
inc
xchg
les
nop
daa
mov
call
int
adc
repz
repz
push
ljmp
pop
pop
add
pop
data16
cmpsl
xor
test
sub
mov
push
dec
and
into
push
fidivrl
lea
ss
sbb
inc
jbe
sub
push
scas
pop
push
adc
nop
mov
mov
inc
sbb
imull
sbb
or
xor
xchg
jmp
xchg
sarl
ret
cmpsl
mov
push
out
xor
pop
cld
push
in
mov
jg
mov
sbb
sub
dec
mov
sti
pusha
jbe
stos
mov
cs
and
sub
jge
shrl
insl
cs
icebp
mov
xchg
pushf
adc
push
pop
fiadds
fiaddl
cmp
or
cmpsb
push
dec
sub
cmpsl
loope
jno
sub
inc
pop
push
sub
jecxz
ss
test
movsb
inc
sbb
adc
leave
into
popa
cmpsb
xchg
or
xchg
mov
loopne
je
std
dec
cmp
imul
iret
das
fstp
and
mov
mov
into
mov
xchg
int3
testb
push
push
xchg
cmp
cld
adc
outsl
es
inc
jno
xchg
cmp
pop
test
pop
test
add
ret
push
popa
sbb
ret
xchg
jbe
pop
xchg
mov
dec
adc
dec
mov
cwtl
and
push
push
mov
xlat
fsubrp
jo
movsl
xchg
ss
sbb
cmc
inc
test
lret
fucomip
iret
and
cli
adcl
js
xor
push
dec
incb
inc
push
cmpsb
mov
push
out
das
out
lock
out
icebp
js
and
repnz
neg
xchg
fsubl
pop
aad
daa
imul
sbb
adc
inc
in
addl
pop
add
shll
lahf
mov
fstps
mov
mov
movsb
or
sbb
ret
inc
out
mov
pop
cmpsl
cmc
sub
and
mov
mov
jnp
daa
cli
shrb
cmp
sarb
mul
pop
stos
jecxz
cmp
movsb
sbb
outsb
daa
out
jno
in
aad
jne
fwait
repz
dec
in
jb
mov
loope,pn
lahf
jg
and
mov
pusha
test
stc
sub
push
fisubrs
and
stc
jmp
mov
pop
scas
out
mov
push
inc
dec
mov
pop
adc
sbb
pushf
hlt
imul
xchg
in
push
addl
cld
xchg
scas
aaa
mov
push
or
test
movsl
sbb
ds
pop
push
int3
cmp
scas
jo
stc
and
pop
rcr
pusha
mov
xor
or
push
fwait
jmp
push
and
lret
dec
cmp
cmp
dec
mov
xor
pop
in
icebp
push
cs
stc
inc
enter
mov
mov
scas
xchg
je
popa
cmp
cmc
pop
xchg
dec
push
adc
add
imul
pop
dec
fdivrs
or
outsl
inc
push
out
orb
arpl
push
jb
or
outsl
add
cmp
push
pop
inc
xorl
xor
je
scas
clc
xor
lods
cmpsb
stos
dec
scas
orl
or
jmp
bound
mov
jmp
into
sti
je
cmpsl
sbb
jmp
cmp
and
cltd
sbb
sbbl
out
gs
stos
cmp
call
lock
inc
mov
push
pop
pop
arpl
inc
mov
jnp,pt
or
cmc
push
out
jg
cmp
notb
flds
sub
aas
sub
inc
hlt
push
fisubs
hlt
dec
or
xor
mov
sub
jecxz
sub
repnz
test
pushf
adc
ss
add
add
stc
inc
push
incb
and
mov
je
ja
xchg
pushf
xchg
sbbl
int
cli
xor
push
jno
fs
pcmpgtw
scas
xchg
in
mov
mov
cmp
dec
xchg
jne
aad
aas
popf
call
adc
cmpb
mov
mov
mov
arpl
es
cmp
mov
stc
add
outsl
or
mov
mov
inc
mov
loopne
jp
vpor
in
mov
imul
rclb
jo
xchg
pop
sub
mov
inc
daa
sub
inc
hlt
xor
outsb
iret
cmp
push
cmpsb
pop
aam
ds
sbb
cmp
or
or
pop
mov
mov
mov
xchg
test
rclb
jb
stc
mov
dec
stc
mov
in
fbstp
xor
out
and
dec
into
sbb
rorb
xchg
inc
xchg
sbbl
aam
mov
cmc
adc
push
dec
xor
sub
test
ds
rcl
mov
repz
cmpsb
divl
int
enter
js
or
cwtl
sub
push
jg
aas
xchg
add
cmpsl
in
cmpsb
push
cmp
xor
ret
loope
les
dec
add
ret
cmp
mov
in
js
in
add
sub
and
dec
fimuls
fiaddl
mov
pushf
inc
pop
cmp
jecxz
mov
fadds
mov
int
sub
dec
shr
mov
lds
cld
movsb
sbb
addr16
sahf
adc
repz
push
or
mov
mov
xchg
imul
les
jae
pop
das
test
mov
loop
cmc
push
or
in
inc
add
lahf
aas
push
inc
cmp
mov
mov
xlat
inc
or
mov
lods
push
adcl
in
sbb
mov
pop
pushf
fdivrs
xor
sbb
rcrl
cmp
push
ret
test
xchg
xchg
pop
sbb
or
aaa
jnp
dec
push
xor
or
lahf
jp
imul
imul
rcrl
push
into
sarb
pop
out
jo
out
jp
hlt
daa
andl
stos
jmp
repz
lods
sub
subl
cmpsl
mov
aad
ret
jns
add
mov
adc
frstor
xchg
incl
in
dec
cmp
mov
aas
mov
and
ret
stos
in
aad
shrb
mov
push
mov
test
jbe
or
daa
xchg
jmp
or
push
xchg
pop
adc
and
ja
inc
pop
lea
int
jecxz
in
testl
jns
scas
inc
push
push
aaa
pop
pop
jo
sbb
std
inc
inc
int3
inc
mov
xchg
dec
ds
jo
insb
orb
and
xchg
repnz
clc
lea
add
add
pop
adc
fs
lds
inc
jno
mov
mov
movsl
sub
add
sub
es
mov
xchg
idivl
stc
loope
mov
cmp
or
or
shr
dec
inc
dec
and
jae
inc
sub
sti
xchg
or
popf
sbb
sbb
jno
pop
sub
jg
mov
push
mov
int3
addr16
fbld
pop
mov
imul
adc
push
push
ljmp
ret
int3
call
or
icebp
pop
pop
xchg
icebp
out
inc
sub
int
mov
in
loopne
add
rol
loopne
fdivrs
cmp
sub
adc
sub
ljmp
push
in
iret
shl
push
aam
mov
iret
jbe
jecxz
cmc
inc
dec
inc
or
jge
dec
cmc
lea
push
ds
jl
xchg
adc
mov
add
bound
loope
jnp
xor
repz
test
outsl
out
insl
imul
mov
push
adc
fldcw
stc
lea
out
sbb
add
in
xchg
sbb
scas
sti
lcall
shl
mov
mov
orl
rolb
enter
sbb
in
adc
aam
push
xchg
in
push
jp
xchg
ja
add
pop
and
int
sbb
mov
cmp
inc
add
pop
xor
xor
into
sub
xlat
rol
leave
fwait
hlt
and
sti
int
rol
into
lahf
adc
inc
insb
mov
pop
cltd
arpl
pop
shll
push
xor
jl
push
loop
sub
movsl
call
mov
mov
mov
fidivl
insb
cld
sbb
orb
add
pop
test
xchg
lock
ret
xchg
inc
mov
mov
lret
test
push
jnp
xor
mov
and
ljmp
push
mov
pop
sbb
adc
dec
xchg
int
mov
popa
js
jge
in
or
xor
ret
rcll
gs
mov
push
stos
ds
xchg
mov
xor
and
outsb
cmp
cwtl
iret
mov
adc
mov
sahf
dec
xchg
je
or
pop
jmp
enter
aas
xor
jnp
in
jns
jo
and
ja
testl
loop
cwtl
push
or
push
idivb
rcll
enter
outsl
aas
sbb
xlat
adc
pop
into
and
stos
stos
insl
popa
insb
iret
xchg
inc
orb
cmp
int
cmpsb
xchg
cld
jnp
xchg
and
or
jno
sbb
sub
mov
xlat
sub
cltd
or
fists
aaa
mov
std
ja
adc
sub
add
pusha
lcall
mov
add
clc
pop
je
push
adcl
aas
outsb
repz
arpl
or
cmp
adc
jns
in
sub
inc
jns
dec
adc
jg
addl
pushf
cmpsb
adc
fchs
inc
fnsave
gs
stos
and
pop
pop
ret
jmp
inc
lcall
sbb
out
lods
mov
inc
sbb
es
into
std
dec
out
push
mov
dec
imul
popl
pop
and
jne
lock
fisttpll
xlat
mov
inc
adc
push
repnz
mov
stos
bound
mov
sbb
adc
je
jnp
je
cmp
push
mov
adc
sub
popa
stos
xor
mov
lcall
jne
pop
jl
add
mov
mov
jl
xlat
mov
xor
cmp
mov
dec
or
scas
jecxz
xor
lahf
dec
sbb
cs
jp
mov
cwtl
fdivl
lret
je
mov
lock
fisubrl
mov
ja
sarl
rolb
mov
scas
jns
xor
sbb
mov
clc
in
mov
push
enter
mov
mov
push
push
inc
jp
fs
mov
cs
outsb
lods
sbb
pop
mov
cwtl
daa
mov
sahf
and
aam
dec
sub
add
out
les
mov
push
cmp
sbb
std
inc
aad
movb
mov
pop
aam
add
and
cli
in
mov
popf
das
je
push
into
shll
add
mov
adc
je
push
jge
jge
push
mov
jle
push
sbb
sti
rclb
xchg
xchg
lcall
push
mov
dec
rolb
and
add
cmp
aaa
cwtl
xchg
cmp
xor
or
mov
out
xchg
pop
sti
push
inc
xchg
inc
mov
mov
sbb
fisttps
sbb
add
xchg
sahf
nop
mov
add
add
adc
cmp
cltd
push
outsl
addr16
loopne
repz
inc
cltd
jo
or
pop
and
add
call
jns
aas
das
or
loop
pop
test
repz
movsl
and
sub
ja
adc
add
lret
add
add
rclb
mov
mov
das
fmull
shrl
push
inc
add
cmpb
imul
mov
shrl
imul
sbb
imul
mov
ret
call
dec
pop
pop
cmp
icebp
mov
dec
xchg
loop
stos
jecxz
loope
nop
jecxz
call
jle
or
add
imul
lret
jb
pop
inc
cwtl
adc
push
je
cmp
add
mov
push
cld
or
test
out
sar
mov
gs
dec
sar
dec
fdivl
cmc
sbb
sub
pop
std
add
in
xchg
movsb
inc
scas
mov
js
insl
jns
xchg
cmp
mov
mov
inc
aad
sahf
or
pop
pop
or
std
scas
mov
inc
jns
mov
jno
or
scas
push
push
int3
ss
mov
outsb
mov
push
sar
aam
and
movsl
fildl
enter
sub
xor
mov
mov
push
jns
sbb
aam
iret
sbb
setl
cmp
add
add
dec
cmpb
fwait
add
jge
jbe
mull
out
push
add
test
pop
sti
cmpsl
pop
repz
pop
push
out
add
out
inc
or
pop
push
mov
push
dec
jmp
jecxz
sarb
in
sbb
imul
pop
lods
sar
movsb
mov
ret
mov
shlb
add
iret
or
in
ja
cmp
pop
adc
add
push
or
outsb
cltd
xchg
push
bound
push
cmp
xchg
add
stos
sti
outsl
adc
stos
outsb
pusha
xchg
dec
inc
pop
popa
jmp
rclb
adc
lea
and
shll
mov
adc
mov
cmovns
ror
dec
mov
icebp
or
xchg
test
into
adc
or
addr16
sbb
add
lret
push
dec
stos
xchg
stc
mov
leave
push
xor
pop
pop
jecxz
and
lahf
mov
pop
sbb
enter
cmp
sbb
movsb
jge
fidivs
mov
add
pop
adc
sub
scas
sub
pop
mov
test
js
inc
pop
hlt
gs
push
lahf
lds
inc
lock
das
lret
pop
inc
cld
mov
bound
icebp
push
jo
insl
cmpsl
fisttpl
add
insb
mov
mov
imul
je
inc
insl
in
in
ret
mov
add
gs
mov
jns
or
cld
mov
push
pop
aad
jno
pop
xchg
ret
testb
and
adcb
in
push
jle
xchg
adc
pop
or
fdivr
mov
pop
cmp
and
cmpsb
jnp
jecxz
dec
lods
aad
dec
pop
pop
xor
pop
les
sub
test
xchg
mov
pop
pop
insb
or
sbb
push
and
fisubrs
in
and
into
fistpll
xchg
pusha
int
outsl
mov
xchg
stos
mov
les
push
adc
and
mov
stos
cmp
das
divb
cmp
popf
mov
loop
jl
xchg
xor
les
incb
shlb
push
rcr
into
and
iret
insl
sbb
xchg
xchg
out
sub
mov
push
mov
cmc
nop
sub
mov
xchg
inc
aaa
mov
outsl
add
jmp
ds
xor
mov
cmpsb
push
lcall
pop
jle
cli
rcrb
repz
test
or
and
movsl
call
cmp
imul
loop
addr16
mov
mov
xchg
and
lea
cs
push
test
shrl
into
jecxz
cmp
sub
and
arpl
and
shll
hlt
xchg
mov
int
or
inc
stc
ja
out
mov
cmc
fimuls
sbb
roll
mov
pop
xchg
sti
addb
loope
mov
ret
out
or
mov
into
xor
out
int
imul
inc
dec
rclb
clc
daa
enter
inc
fcomi
bound
cmp
js
cli
je
jmp
addr16
leave
push
mov
sub
sub
sub
fsubl
mov
mov
test
dec
fadds
in
mov
xor
outsl
sub
jo
loope
and
dec
test
icebp
pop
or
std
jle
iret
lret
xchg
inc
push
mov
mov
fnstenv
popf
sbb
cmp
dec
mov
inc
ret
loope
test
test
jge
pop
orb
les
stc
add
aaa
pop
inc
aad
je
cltd
add
addb
add
add
ds
or
sub
add
push
xchg
ljmp
sbb
cmp
adc
cli
inc
out
pusha
add
push
push
repnz
adc
mov
int3
adc
rcrb
mov
xor
daa
fsubrs
es
adc
out
les
inc
insb
add
adc
sbb
sbbb
das
in
ljmp
ret
loope
sub
xchg
repz
sahf
xchg
pop
ljmp
pop
imul
cwtl
mov
cmpsl
insl
stos
divl
int3
arpl
mov
mov
jmp
pushf
or
fsubs
out
test
sub
ja
insl
aaa
pop
mov
iret
mov
xchg
xor
repz
dec
leave
cmc
testl
sbb
and
sbb
push
xlat
aad
mov
outsb
addr16
into
inc
or
mov
push
loop
xchg
dec
pop
stos
add
sbb
fwait
add
sbb
or
add
movsl
test
pop
or
int
fsubrp
sbb
cmp
lods
cmpb
mov
jne
fildll
rcll
frstor
outsb
into
fwait
int3
pop
shrd
add
pop
push
xor
inc
lds
mov
aas
jg,pn
stc
mov
pop
cwtd
lret
or
cld
jl
mov
ret
jg
push
ss
xchg
incb
xor
jl
movsb
mov
insl
rclb
outsb
dec
jb
loop
xor
repz
sbb
mov
sbb
xchg
filds
lods
fcoml
inc
imul
fmuls
mov
lcall
mov
jnp
xchg
pop
shrl
outsl
ror
inc
outsb
adc
pop
cmp
pop
cmpsb
push
add
pop
mov
cltd
je
cli
popa
xchg
lods
lea
daa
fbld
fucom
push
lock
push
repz
gs
mov
sti
outsb
jmp
insl
push
and
enter
mov
ret
sub
pop
xor
fisttpl
sub
pop
adcl
or
mul
sahf
sbb
ret
xchg
or
aad
lahf
sti
lods
scas
xchg
mov
stos
sqrtps
fisubrl
add
add
test
mov
xor
jnp
lods
das
cld
rcrl
insl
outsl
xor
cs
pop
jns
in
mov
and
orl
add
popa
add
or
push
pop
or
push
cmpl
cmpsl
jnp
nop
and
mov
mov
and
in
dec
insl
cmp
dec
sub
jl
shl
outsl
sahf
dec
jmp
inc
pop
push
cmpsl
ja
call
and
push
fisubl
sahf
fs
popf
ss
push
icebp
adc
cli
gs
into
and
push
jne
lret
push
jl
loope
add
pop
adc
cltd
test
mov
pop
cmp
out
cwtl
in
add
jmp
or
xchg
sbb
in
call
add
cmp
jne
cltd
jmp
push
sub
mov
fnstcw
dec
rcr
lret
outsl
incl
insl
cmp
in
pop
inc
test
hlt
adc
icebp
int
iret
xor
mov
lret
and
adc
cmp
mov
idivl
and
jb
mov
cmp
dec
clc
push
mov
outsb
lret
xchg
push
popf
ret
xor
out
arpl
add
aad
out
xlat
pop
inc
lcall
dec
insb
popf
aaa
fs
mov
aaa
incl
dec
ret
pop
icebp
scas
xor
jne
push
mov
adc
lret
lods
fs
and
push
lahf
and
jae
imul
bound
and
mov
ss
sbb
push
or
push
add
push
xlat
rdtsc
ret
mov
xchg
shrl
add
xchg
adc
loopne
sub
rcrb
jle
cmpsb
loope
cs
lods
mov
jnp
mov
sbb
vpsllq
repnz
dec
push
rclb
jno
xor
add
sub
ret
inc
cwtl
jb
cltd
mov
jo
repz
pop
mov
mov
pushf
fldln2
jmp
loope
mov
decb
and
aad
cld
ja
jge
arpl
popa
mov
es
stos
push
add
loopne
or
mov
sub
iret
lods
cs
push
push
hlt
nop
or
or
test
push
rolb
inc
cmp
xor
sub
mov
or
add
push
pop
outsl
ss
cmp
pushf
fcomps
push
cmpsl
jae
rorb
insl
sbb
icebp
stc
enter
sbb
rcr
popf
lahf
loopne
popa
insb
clc
test
rorl
clc
jns
jge
add
xorl
scas
ficomps
insb
leave
push
mov
adc
xor
inc
xor
mov
mov
imulb
aam
add
aaa
outsb
cmp
outsb
xchg
add
jp
or
or
cmp
lea
clc
jp
arpl
lods
clc
out
out
mov
inc
and
push
mov
mov
dec
xchg
out
xchg
xchg
aaa
outsl
sbb
or
and
divb
mov
out
mov
sub
imul
pop
test
xchg
fistpll
cmp
sub
test
shlb
jno
adc
jno
push
ds
dec
lcall
adc
mov
xchg
cmpsb
cwtl
pop
in
mov
call
sub
addr16
dec
stos
cmc
or
mov
daa
pop
dec
cmp
call
dec
mov
aas
inc
and
sahf
pop
mov
loopne
daa
jnp
push
mov
js
push
movsb
mov
pop
pop
clc
dec
dec
in
push
mov
repz
jmp
jbe
leave
out
jmp
clc
pop
aam
xor
xchg
sbb
sbb
mov
cmpl
adc
fwait
jg
stos
xchg
sbb
adc
std
push
leave
xchg
mov
mov
shrl
test
pusha
aas
adc
ds
add
sbb
insb
cmp
enter
jns
int
scas
cmp
jbe
int3
dec
out
xchg
xor
cmc
push
cmc
dec
jae
frstor
add
xchg
add
sbb
aas
int
les
and
mov
lcall
cld
pusha
mov
xchg
jle
movsb
scas
cmp
and
cmp
int
ljmp
add
ljmp
call
mov
inc
les
xchg
fwait
mov
pop
test
add
test
push
shl
sbb
icebp
xchg
dec
jo
cmpsb
mulb
out
sahf
stos
cmpsl
movsl
pushf
dec
stos
dec
sbb
push
and
andb
dec
pop
sbb
leave
mov
inc
cli
lods
outsl
adc
mov
bound
ret
aam
fildl
xchg
add
add
lock
and
scas
pop
dec
pop
pop
popf
sub
jl
xchg
out
daa
cmp
cltd
or
mov
and
fnstcw
icebp
and
adc
xchg
adc
adc
mov
stc
push
xchg
push
pop
push
cmp
mov
xor
jmp
clc
cmpxchg
add
mov
jbe
aad
lret
mov
push
push
mov
add
mov
pop
sub
ds
jns
push
mov
ret
stc
imul
push
mov
jnp
or
popf
cli
repz
scas
inc
add
cmpsl
mov
inc
add
mov
mulb
pushf
cmp
imul
push
ret
xchg
arpl
jnp
pushl
jne
fwait
shr
xchg
ret
rorl
ds
mov
sbb
in
faddl
scas
xor
es
frstor
insb
andl
loop
imul
movsl
scas
mov
movsb
lods
popf
sahf
int3
rorb
pushf
push
sbbl
and
ror
stc
stos
pop
data16
inc
loopne
aad
out
cmp
inc
fists
push
cs
adc
addr16
pop
mov
rolb
outsb
popa
mov
cmp
dec
test
fbld
mov
adc
sbb
scas
inc
pop
test
scas
sahf
push
mov
dec
mov
imul
sbb
xchg
insl
pop
inc
pop
jl
cmpsl
add
xchg
into
mov
mov
es
cmp
cli
jg
std
xor
inc
vmwrite
mov
neg
sbb
xor
inc
fcmovu
stos
push
hlt
pushf
cmp
cmc
jl
loope
pop
out
inc
jle
lret
insb
mov
dec
bound
shlb
mov
imul
aad
xrelease
or
stos
out
push
notb
shl
xlat
or
dec
nop
mov
fstps
loop
gs
mov
inc
fdivr
sbb
lcall
mov
adc
or
cmpsl
or
cmp
ret
dec
out
icebp
sahf
in
push
sbb
sbb
jp
xchg
addl
lahf
xchg
cmp
jbe
pop
mov
aam
pop
xchg
sbb
cmp
outsl
push
or
add
mov
jb
shrl
loope
adc
out
imul
mov
push
mov
arpl
add
xor
sbb
jns
ljmp
adc
std
js
sbb
iret
and
push
and
stc
or
cmp
mov
and
insl
int
push
sbb
push
int
imul
adc
push
sti
push
test
lret
inc
cmp
push
jecxz
or
push
test
add
add
and
inc
inc
push
fwait
jno
push
adc
scas
mov
ja
sbb
jbe
dec
xorl
ret
popa
repnz
stos
push
xchg
mov
and
and
call
inc
inc
enter
cmc
xor
cmp
xor
stc
pop
loope
sub
mov
loope
add
inc
movups
xchg
add
xchg
xchg
jecxz
test
roll
inc
jnp
enter
ret
lret
mov
push
ret
popa
adc
sbb
fs
test
mov
mov
lea
sub
in
xchg
iret
xchg
icebp
pusha
adcl
jb
sbb
adc
int3
addr16
call
pop
cltd
sub
ds
cld
push
lret
int
and
push
push
push
mov
sbb
rcr
dec
shlb
xchg
xchg
fsubl
xchg
jl
dec
mov
jns
jle
mov
gs
sbb
ucomiss
jmp
mov
cmpsb
mov
cmpsb
xchg
cmpsb
cwtl
xchg
mov
call
mov
jnp
inc
clc
and
mov
lods
movsl
cli
jl
test
movsb
outsl
push
js
iret
leave
cld
mov
stos
mov
repnz
iret
and
rcrl
in
ds
cmpb
test
pmovmskb
insb
xchg
andl
pop
dec
lods
dec
adc
push
scas
cmp
addr16
mov
loope
xchg
mov
stc
lahf
pop
iret
fs
mov
in
add
fimuls
lea
sub
jp,pt
mov
lcall
mov
push
pop
pop
jb
push
enter
aas
test
inc
jno
je
mov
shll
movsl
cmp
test
sub
sarl
test
push
push
add
xor
dec
mov
mov
test
lods
sub
cmp
xchg
lea
push
dec
icebp
sarl
pushf
sbb
mov
jmp
add
std
mov
mov
pop
rolb
mov
in
sbb
popf
jae
xor
sbb
pop
lds
dec
pushf
enter
pop
fidivl
sub
mov
jecxz
popa
mov
push
sbb
xchg
sbbb
push
ss
stc
cmpsb
or
nop
in
push
test
push
mov
pop
test
dec
enter
les
lret
push
cmpsb
dec
cmpsl
xchg
sbb
xchg
mov
pushf
addr16
das
es
jg
test
push
pop
dec
lret
cmp
stos
jl
jmp
mov
cmp
call
in
stos
xor
daa
jne
push
xchg
jo
rorb
and
sub
pop
fsubl
aam
fdivl
mov
addl
mov
lods
cmpsb
add
xchg
add
cltd
or
cld
jmp
xchg
out
popf
mov
popf
cmpsb
mov
cmpsb
adc
jecxz
cmc
dec
mov
xchg
cmp
clc
je
jno
xchg
xlat
bound
out
sbb
arpl
sub
out
test
jmp
adc
xchg
mov
xchg
sbb
dec
fisttpll
pop
mov
sbb
leave
mov
jnp
dec
lds
sti
cmpsb
dec
daa
xchg
dec
mov
jbe
mov
mov
adc
into
lcall
adc
mov
inc
movsl
aas
jo
dec
fdivl
inc
mov
and
inc
ror
and
xor
shlb
inc
fwait
sbb
xchg
fwait
sbb
push
push
test
repnz
and
add
mov
mov
inc
sahf
add
cmp
roll
bound
insb
fbstp
dec
or
movsb
dec
mov
jp
or
inc
movsb
stos
fidivrl
xor
mov
or
out
mov
mov
je
loopne
mov
xchg
nop
cmp
pop
pop
nop
jb
jns
xor
test
cmc
pop
shlb
repnz
mov
cmp
cmp
inc
push
mov
rcl
or
jns
clc
loop
cmpsb
jl
hlt
add
packuswb
inc
mov
outsb
xchg
loope
push
cmpsb
jne
xchg
ret
mov
mov
int
rcrl
cmp
sub
pushf
sbb
test
cmp
lock
cs
push
mov
inc
fnstsw
popf
adc
adcb
aaa
add
insb
sub
mov
sbb
cmp
hlt
jmp
cmc
jne
repz
push
xor
in
addr16
insb
test
adc
and
out
pushf
add
and
lahf
insb
ljmp
arpl
rcll
cmp
inc
sub
lock
pop
cmpsl
scas
mov
cwtl
mov
popa
mov
and
cmpsl
lds
inc
lock
nop
mov
inc
jl
jle
jle
aas
addr16
out
xor
fcmovbe
sub
ja
jp
sub
mov
aaa
xchg
insl
fs
loope
dec
jl
push
data16
int
rclb
sub
lods
fidivrl
stos
mov
add
loop
stos
out
rol
gs
pop
cmp
sbb
cmpl
inc
xchg
mov
sti
mov
dec
xchg
int3
js
mov
mov
cmp
ret
xchg
lret
out
inc
push
das
imul
dec
jge
inc
xchg
arpl
jne
cmp
xor
pop
scas
and
movsb
xchg
jo
inc
fnsave
imul
shl
push
leave
cmp
jne
mov
fdivs
ja
std
and
adc
mov
iret
inc
xor
mov
in
mov
xor
adc
xor
push
mov
mov
pop
rcrl
sub
add
pop
or
sar
xor
add
xchg
pop
mov
mov
shll
imulb
lcall
pushf
test
aaa
adc
daa
sbb
adc
sub
cmpsl
push
shll
jnp
data16
add
pop
inc
jne
gs
dec
sub
jge
fists
outsl
mov
mov
lret
sbb
in
mov
or
test
gs
mov
push
push
dec
fdivrs
aaa
jo
push
sbb
mov
aad
and
dec
bsf
sub
mov
add
inc
fdivs
aas
xchg
sub
js
test
inc
adc
inc
jb
dec
jo
lea
outsb
adc
test
shlb
addl
mov
in
ja
ds
mov
xbegin
pop
stc
sbb
mov
insl
int3
add
addb
out
ds
adc
xchg
mov
pop
ss
imulb
push
inc
push
fnstcw
push
imul
or
gs
jno
adc
mov
int3
cmp
push
cmp
adc
dec
leave
jmp
cli
or
out
mov
fwait
sub
sti
movsl
sbb
out
call
lcall
arpl
pop
cs
icebp
int
adc
or
repz
push
jno
pushf
ds
or
xor
enter
arpl
decb
or
pusha
jb
and
cmp
adc
mov
and
in
jp
rorb
or
shll
dec
mov
pop
and
dec
push
pop
stc
test
jo
jg
mov
jno
push
popa
inc
in
mov
loop
repnz
cwtl
and
sbb
test
pop
pop
cmp
sbb
cli
roll
popf
outsb
xchg
xlat
mov
inc
xor
xchg
adc
pop
loop
loope
shrl
leave
popf
sahf
jo
pop
add
xlat
push
jbe
mov
jnp
imull
test
mov
lock
lds
xor
cmp
popf
xchg
xor
mov
andl
in
ret
dec
push
inc
mov
ret
ljmp
xchg
xor
negb
sbbb
fstps
cli
vmovaps
in
push
popa
cmpsb
addb
orl
popf
dec
in
cld
pop
inc
or
mov
cmp
ror
xor
xchg
push
repz
ret
dec
jp
push
adc
mov
pop
enter
clc
jmp
add
dec
lock
test
jl
icebp
inc
push
sub
sub
sbbb
popf
mov
jl
and
or
adc
jne
and
mov
aas
enter
daa
push
iret
pusha
jmp
mov
push
aam
es
int
je
jo
sbb
and
jne
jne
ret
lock
pop
cmp
mov
repz
aad
fnstcw
imul
lret
fidivrs
inc
pop
xchg
mov
cmp
push
mov
pop
mov
or
push
push
xchg
push
mov
pop
lcall
ret
sub
add
imul
cmp
xor
sbb
dec
and
jo
cmpsb
add
repz
jmp
sub
fists
imul
aad
ljmp
sbb
or
cmp
cwtl
cmp
js
inc
xchg
sbb
push
push
pop
adc
leave
lret
jecxz
in
jmp
pop
xor
sahf
and
inc
xchg
pusha
xchg
ss
and
cmpl
lock
clc
aas
enter
jne
jg
repz
les
pop
arpl
out
int
jno
cmpsl
xchg
roll
out
pushf
push
dec
sub
jns
clc
aas
xor
mov
xor
or
mov
dec
sbb
mov
lock
xchg
pop
pop
jne
movsb
jmp
icebp
jno
out
xchg
jle
int3
es
lods
mov
adc
adc
sbb
test
lahf
pop
insl
mov
dec
nop
or
std
sub
sbb
pusha
sti
in
jmp
xchg
jge
ds
xchg
icebp
imull
push
mov
stos
or
insl
xchg
dec
pushf
or
addr16
push
mov
lea
mov
fs
in
xchg
lock
adc
add
imul
jp
ret
add
ja
aaa
or
push
xchg
data16
mov
iret
cltd
les
inc
jle
adc
push
fisubrs
imul
test
and
push
fbld
dec
and
adc
sbb
lds
mov
lock
in
lock
aam
mov
or
sbb
pop
mov
jl
test
push
mov
lods
mov
sbb
mov
push
fistpll
cs
adc
or
es
mov
test
or
pop
cmp
add
ja
mov
aam
mov
add
adcb
nop
fnstsw
jecxz
out
pusha
ss
movsl
jge
fdivs
inc
lock
sbb
popa
add
mov
xor
inc
push
lock
xchg
out
push
or
out
add
lock
inc
mov
xor
push
gs
mov
mov
test
ja
push
mov
cmpsb
sarb
into
and
call
sbb
inc
xor
arpl
xchg
adc
pop
ss
rclb
pusha
pop
add
and
adc
jbe
cmp
sbb
je
mov
jl
lods
arpl
lahf
mov
mov
cltd
in
xor
cmp
in
and
cmp
fs
sahf
pop
fcomp
push
test
inc
jns
rorl
es
lret
fimull
dec
cmpsb
mov
out
arpl
les
cmc
sub
dec
mov
popf
daa
mull
mov
fldenv
and
mov
sbb
lods
jmp
cmp
ret
jo
xchg
inc
dec
shrl
sbb
cmp
xor
out
add
pop
in
lahf
sbbl
mov
pop
insb
cmpsb
mov
push
pop
push
pop
mov
pop
push
or
mov
dec
fnstenv
push
cli
and
cmpsb
fiadds
add
int
or
inc
rcrb
scas
push
and
dec
pop
daa
out
push
or
stc
push
clc
jns
nop
clc
out
cmp
pop
xchg
imul
xchg
fwait
push
add
dec
ficomps
leave
iret
dec
je
in
pop
jmp
int
push
fisubl
mov
or
dec
popf
or
sbb
cs
mov
aad
out
sub
dec
add
and
cmp
pop
mov
movsb
mov
lds
cmp
rcrb
mov
dec
subb
jg
insb
add
hlt
cmp
bound
mov
dec
lcall
sahf
pop
or
ljmp
mov
movsb
sbb
es
test
jecxz
and
mov
jmp
add
push
jle
loope
mov
jns
xchg
repz
ret
mov
insl
mov
out
dec
xchg
push
jns
ss
inc
jo
mov
loope
jg
test
push
aas
or
jge
pop
lahf
adc
mov
mov
adc
push
test
jge
dec
aas
xchg
adc
pop
xor
inc
fldl2e
cmp
or
dec
mov
cmp
bound
sahf
cmp
cld
out
sbb
jmp
jp
xchg
mov
imulb
mov
mov
mov
or
cmpsb
push
pushf
movsl
push
xchg
mov
mov
out
incl
jecxz
mov
in
cld
sub
jle
add
loope
stc
inc
mov
test
pop
clc
adc
mov
stc
mov
sahf
inc
dec
andl
out
xor
out
call
lahf
dec
sub
dec
and
adc
cmp
imul
adc
ljmp
mov
cmpsb
or
inc
xlat
ljmp
mov
fidivrs
ja
sub
rcrl
add
ror
shrb
jbe
sbb
loop
sar
decl
js
dec
jne
xor
mov
stc
popa
inc
cmpsb
ret
jo
aaa
stos
jg
outsl
mov
and
cltd
push
mov
push
sub
mov
jne
out
mov
loop
int
jmp
lret
fisubrs
std
dec
scas
xchg
push
ret
push
cltd
and
xor
out
sbb
xchg
pop
mov
lock
xor
je
aam
jle
sub
sub
push
push
lcall
sub
sbb
jns
xor
add
xor
mov
or
mov
jno
fucomi
pusha
movsb
aam
mov
jl
and
loopne
fdivl
dec
js
add
sub
aad
or
sahf
pop
lds
pop
cmp
cmp
scas
into
adcl
cli
mov
cmp
inc
pop
repnz
and
jp
fsubl
add
adc
ficompl
aam
fs
adc
or
call
mov
jle
inc
into
test
nop
jmp
stc
sub
test
scas
mov
stos
imul
faddp
notl
lock
fmul
pop
sub
fisubrl
js
cmp
iret
dec
sbb
dec
add
loop
xchg
sub
and
test
fisttpll
mov
adc
cmpsb
repz
xchg
dec
xor
pop
out
and
sub
dec
cs
jle
sti
pusha
je
popa
mov
mov
lock
icebp
nop
adc
xchg
jbe
xchg
aaa
popa
or
jmp
ljmp
jbe
sar
lds
cmpsb
mov
push
cmc
fidivrs
mov
jnp
push
int3
or
adc
mov
aad
arpl
fimull
inc
popf
inc
add
fcomi
inc
ja
pop
push
pop
ret
sub
loopne
shlb
or
xchg
add
arpl
xchg
inc
loope
pop
shr
lahf
pushl
imul
inc
popa
jno
in
jb
pop
test
mov
dec
mov
or
pushf
mov
dec
cmovg
xlat
loop
push
imul
push
pop
pop
xchg
mov
sub
lods
xorl
adc
fmulp
jecxz
aaa
mov
mov
arpl
pop
jnp
test
xchg
stc
pop
xchg
sbb
push
push
pop
std
test
mov
xor
addr16
rclb
adc
pop
std
inc
int
out
xchg
lock
mov
inc
fidivl
insl
xchg
vaddsubps
jns
xchg
sbb
popf
xchg
push
mov
std
sti
xchg
dec
test
pop
sarl
xor
jg
mov
shlb
push
out
leave
jmp
repz
adc
push
sbb
shlb
mov
addr16
pop
sub
aas
mov
into
cmp
jp
in
pop
cs
stos
call
call
ficompl
inc
fcoms
mov
mul
mov
scas
movsl
fst
inc
adc
xchg
fwait
stos
data16
testl
lret
das
mov
sub
lahf
cld
cli
push
test
gs
lock
cs
pop
repnz
inc
mov
ds
xchg
stos
pop
lods
sbb
out
pop
popf
push
pop
sbb
fcompl
sbb
jle
adc
mov
push
push
cltd
popf
hlt
pop
push
and
sarb
mov
data16
dec
mov
jl
jle
jg
xchg
loop
in
stos
hlt
out
popf
repz
lahf
add
inc
shl
xlat
mov
shll
jo
mov
ret
pushf
shlb
jae
inc
mov
xor
push
mov
popa
movsb
cmpsb
sahf
inc
mov
in
or
push
lods
dec
imul
fwait
push
inc
negb
movsl
inc
adc
mov
repz
pop
fcomip
jmp
adc
imul
dec
cs
jb
sti
js
sbb
mov
and
xchg
jne
clc
jle
xchg
test
lret
pop
rep
mov
js
adc
fcompl
incl
hlt
xor
repnz
push
add
mov
ret
bound
cmpsl
add
jecxz
sub
add
icebp
imul
mov
add
mov
ret
xchg
jno
aaa
rcrl
popa
jbe
or
pop
mov
sbb
cmpsb
clc
xlat
je
or
cmp
test
dec
or
cmp
ds
jmp
hlt
jnp
popf
mov
mov
out
sbb
enter
xchg
sbb
out
out
jo
mov
hlt
adc
je
and
loop
test
push
mov
mov
pop
sbb
dec
xlat
add
and
xchg
fadds
stc
loope
out
ror
clc
mov
add
movsb
scas
or
lock
ret
test
xchg
fimull
mov
rclb
jg
stos
push
mov
scas
jle
cmpsb
and
lret
ljmp
pop
jbe
popa
mov
push
int
xchg
pushf
cmp
int
data16
hlt
push
stos
add
pushf
imul
mov
pusha
push
test
hlt
dec
js
pop
sbb
pop
pop
or
mov
mov
pop
jae
js
sbb
and
dec
jl
addr16
add
aaa
mov
inc
cmp
adc
xlat
leave
push
mov
loop
test
jno
or
fsubr
dec
sbb
shll
xchg
ret
push
jno
add
xchg
mov
punpckhbw
xor
cs
and
jb
rclb
enter
mov
mov
out
nop
jb
cltd
in
xchg
jns
jbe
imulb
cmp
xchg
xchg
shl
scas
fsub
insl
sarb
inc
and
cmc
pushf
clc
and
push
dec
dec
mov
cmpsl
sub
pop
push
push
jb
mov
adc
pop
aas
or
inc
mov
jnp
repz
or
xor
xchg
insb
fs
loop
xchg
add
or
mov
outsb
add
pop
inc
mov
es
clc
or
add
add
faddp
popa
inc
ret
ss
popa
cmp
mov
clc
xchg
mov
scas
jecxz
inc
movsb
pop
es
cmpsb
fdivrl
cmp
leave
in
or
ja
and
add
nop
adc
mov
adc
mov
scas
and
pop
out
jno,pt
xchg
mov
xlat
xor
and
push
pop
call
xchg
xor
repnz
mov
dec
jecxz
jg
lods
fnstsw
lcall
sbb
mov
pop
aas
add
lea
push
iret
faddl
outsl
push
shlb
cmpsb
lock
ds
stc
and
xchg
out
outsb
shrl
xor
mov
jb
jge
out
xchg
fadd
inc
js
jmp
add
ror
jmp
adc
jnp
mov
les
std
imul
pop
andl
sbb
popf
in
out
add
rcl
mov
adc
xor
mov
movb
shrl
sub
psubq
push
ret
ret
mov
xchg
decb
stc
fisubrl
int3
jae
mov
mov
cli
addr16
shll
sti
hlt
out
popa
in
sbb
xchg
or
addb
jmp
shrl
jno
loop
xchg
mov
lcall
pop
jmp
mov
fistps
les
add
popf
or
or
repz
cld
aas
push
rorl
mov
outsb
lret
sbb
sbb
adc
gs
stc
jbe
or
roll
insb
leave
out
test
fs
pop
cmp
push
cmc
test
adc
pop
imul
xchg
pop
mov
push
push
jge
jmp
jp
push
out
je
jo
xchg
leave
mov
push
lea
imul
jecxz
les
xlat
pop
int3
sbb
inc
dec
daa
in
mov
mov
out
sub
fwait
test
js
loope
jl
add
pop
sub
cltd
fs
pushf
and
mov
mov
fiadds
sbb
mov
jno
xor
push
dec
insl
inc
sub
add
add
mov
outsb
sbb
out
lahf
stc
iret
lcall
jp
xchg
jle
lcall
jno
cmp
ljmp
aam
jge
cmc
mov
xor
outsb
ret
cmpb
out
sbb
inc
push
lea
push
pop
imul
mov
test
negb
or
xor
and
comiss
push
xor
jnp
call
pop
lds
loope
call
mov
mov
xchg
rcrb
xchg
sbb
mov
pusha
adc
mov
pop
or
mov
cmc
sub
es
sbb
pop
xchg
or
dec
out
adc
mov
jle
or
pop
fadds
cld
int
jp
aad
cmp
jl
jge
pop
call
push
lea
sahf
add
or
repnz
jecxz
lahf
mov
adc
mov
mov
sti
das
pop
icebp
popf
xchg
shll
lahf
out
das
xchg
inc
cmp
push
add
les
sbb
mov
ret
push
out
rcl
jne
sub
mov
or
xor
push
push
dec
outsb
inc
or
inc
jmp
inc
xchg
push
mov
lret
add
or
jo
mov
scas
and
add
hlt
pop
ja
xor
je
fsubrs
aaa
push
movsl
mov
jge
cwtl
mov
pop
mov
in
push
pop
mov
sub
sbb
cli
popa
rcrl
jae
mov
lret
nop
pop
mov
lret
mov
lods
and
sbb
repz
aas
pusha
js
movsl
xchg
sub
cmp
int3
jp
and
xor
pop
shll
jp
cwtl
out
cltd
push
sbb
sub
inc
fcmovu
and
jge
movsb
cmp
lds
dec
xchg
lea
call
dec
roll
mov
xor
ss
add
dec
cmp
and
call
daa
aam
fsubrl
js
stc
inc
cld
or
lods
xchg
rclb
mov
add
jg
dec
mov
dec
outsb
ss
out
dec
xor
divl
or
jae
sub
lods
out
loop
cmp
cmpsl
jmp
and
mov
loope
addr16
mov
jg
adc
js
jle
xchg
adc
and
xor
out
movsb
lea
and
push
rep
aas
mov
jnp
mov
test
cmp
iret
xchg
pop
mov
es
inc
ret
mov
and
hlt
dec
data16
add
std
xorl
mov
call
add
pop
icebp
pop
push
out
lahf
push
inc
out
andb
jmp
jmp
ljmp
fldcw
insl
jg
aas
cmp
sbb
nop
push
pop
sahf
jbe
loope
mov
pushf
filds
jnp
repz
mov
std
jecxz
mov
and
sub
icebp
add
mov
data16
pop
mov
js
insb
addr16
sbb
ja
and
mov
lret
mov
pop
jmp
jg
push
push
sub
fstl
mov
lods
adc
push
out
mov
xor
mov
sbb
adc
pop
fadds
sub
sub
mov
adc
pushf
cld
cwtl
lods
scas
mov
das
shlb
inc
sahf
icebp
jp
or
inc
sbb
daa
jmp
ja
dec
mov
cmpsb
int
loope
dec
mov
stos
cld
sub
lods
push
clc
sbb
sub
out
lods
fisttpl
in
enter
icebp
mov
call
xor
xchg
add
push
repnz
mov
stos
fwait
test
and
and
mov
jmp
jle
les
or
xchg
mov
sub
ds
jle
mov
dec
mov
xor
ret
outsl
jae
fistpl
fnstenv
ja
sbb
gs
inc
dec
in
incb
inc
sar
jo
out
and
dec
sar
sub
mov
aad
adc
and
int3
mov
push
cmp
mov
fnstcw
xlat
shlb
and
mov
xorb
sub
rorb
mov
pushf
pushf
jmp
mov
mov
not
xor
push
jne
xchg
xor
loopne
fildl
add
cli
adc
add
add
stc
aad
lcall
mov
divb
adc
jo
nop
or
negl
lods
inc
or
or
into
movsb
pop
mov
adc
outsb
arpl
pop
xchg
fmull
adc
enter
stos
bound
stc
push
push
scas
sub
sti
xlat
cmp
movsl
or
cld
popf
aas
out
cld
repnz
ret
dec
adc
dec
add
mov
and
mov
and
lock
sti
add
test
es
fwait
add
cld
ss
leave
in
xor
scas
jl
pop
add
test
cmp
cmp
add
loop
cmp
lea
mov
push
fistpl
out
mov
and
dec
test
fsubl
fstp
icebp
lret
into
rcll
xor
in
ja
inc
insb
icebp
adc
pop
pop
mov
and
push
or
js
or
clc
and
pushf
movsl
cmp
subl
xor
pop
ljmp
nop
pop
cld
jge
js
dec
pop
sbb
inc
daa
insb
ret
add
adc
push
cmp
sarb
fldl
mov
adc
inc
out
in
xor
mov
ja
mov
sbb
pop
inc
shr
shr
sbbb
mov
ret
fbstp
mov
out
mov
ret
add
mov
clc
sbb
sbb
lock
fcmovnb
or
into
and
jnp
mov
sbb
push
dec
fwait
lea
ja
or
and
mov
push
pop
into
cs
fs
jae
pop
sbb
iret
add
mov
aam
out
lods
xchg
cmpsl
int3
rorb
int
ficoms
cmp
xchg
xchg
mov
and
sbb
rcll
push
and
dec
jne
adc
or
jnp
inc
sbb
inc
cmpsl
mov
call
clc
jo
inc
inc
fbld
cld
xchg
sbb
jns
mov
rcr
int3
mov
cmp
mov
pushf
fbstp
lods
in
mov
sbb
fnstenv
mov
enter
repz
and
sbb
sub
add
sub
mov
add
add
inc
add
push
imul
inc
mov
and
inc
mov
inc
push
mov
add
test
xor
sub
sub
sbb
fbstp
pop
xchg
ret
out
push
dec
mov
and
or
push
jnp
dec
sbb
xchg
je
xchg
xchg
icebp
ret
sbb
xchg
mov
xor
and
mov
xchg
in
ja
xchg
dec
shll
mov
sub
fucomi
or
es
mov
out
in
pop
pusha
mov
xor
jb
pop
dec
and
xor
jge
sub
out
pusha
xor
push
sbb
push
pop
clc
loopne
cmp
inc
imul
mov
in
xchg
aam
sbb
adc
mov
movsb
jg
std
sub
push
mov
cltd
mov
pushl
imul
sub
or
adc
subb
mov
les
sbb
dec
and
out
pushf
xor
cmc
int3
aam
dec
add
dec
jns
nop
movsb
xchg
adc
bound
dec
test
or
ret
dec
imul
mov
add
and
shl
jb
testl
fadd
dec
es
sbb
sbb
push
es
fldl
cmc
lea
sub
jge
cltd
inc
movsb
sub
push
shlb
xor
push
jno
lods
or
lahf
dec
jp
sub
cmpsl
push
insl
cmp
jae
pushf
push
push
mov
bound
xchg
xchg
jbe
int3
stc
xor
push
leave
ficomps
mov
cmp
stc
mov
xor
xchg
repnz
data16
clc
inc
lds
sbb
jns
fnstenv
dec
stos
shll
leavew
mov
call
fwait
outsl
mov
push
xchg
mov
mov
cmpsl
push
cmp
push
insb
add
mov
sbb
inc
push
mov
icebp
and
fucom
movb
int3
bound
js
lods
and
lcall
adc
dec
add
aas
lahf
fsubrp
orb
dec
outsb
clc
stos
push
lahf
pop
inc
clc
fs
add
das
mov
insb
sahf
dec
mov
jge
sub
mov
shl
sahf
xchg
lea
jp
lret
into
mov
mov
dec
les
sbb
cmp
push
xor
or
sbb
jbe
dec
cmc
sbb
jmp
insl
adc
mov
sbb
pop
pop
stos
out
sub
or
cltd
das
cltd
add
lret
loopnew
nop
loop
aad
add
int3
adc
or
dec
aas
sbbl
cs
pop
adc
lcall
ja
sbb
aad
mov
dec
int3
lret
add
mov
daa
rolb
into
push
inc
pop
sub
mov
loope
xor
jg
in
test
cmc
loopne
adc
test
mov
push
sub
stos
int3
call
imul
inc
fisttpl
es
jns,pn
mov
fidivs
xchg
in
ljmp
movsb
and
pop
scas
push
xchg
int
popf
call
ret
in
mov
xlat
sub
push
pop
xor
fistpl
popf
sub
pop
enter
and
lret
cld
fists
mov
add
iretw
call
imul
push
xor
pop
jno
jcxz
es
stos
popf
insb
xchg
and
inc
scas
add
dec
mov
stc
sbb
bound
lods
loop
fwait
sbb
rolb
insb
jge
shlb
mov
mov
iret
or
out
xor
call
fsubl
sbb
push
cmp
les
mov
and
inc
push
cmp
out
ss
cmpsl
jp
stos
sti
call
cltd
xor
lea
lret
fs
pushf
dec
repz
mov
sbb
jmp
xchg
fwait
mov
sub
sub
push
push
inc
inc
lock
dec
fs
hlt
and
adc
pusha
push
or
jmp
mov
xor
test
pop
fsubrl
pop
sbb
and
xor
and
jbe
inc
into
mov
popf
ficomps
int
or
xlat
into
sbb
scas
test
adc
push
fstpl
adc
mov
sub
lret
flds
insl
push
jne
aaa
ficoml
pop
dec
iret
loope
adc
mull
add
sub
pminsw
or
je
lock
push
push
insb
add
in
rorl
pop
push
shrb
mov
fdivr
cltd
sbb
xor
cmp
mov
lods
insb
adc
jmp
jecxz
sahf
and
jae
test
dec
inc
enter
cmc
les
das
test
or
adc
jge
out
push
sahf
mov
jb
jo
xchg
pop
cmp
cmp
sbb
inc
mov
mov
cltd
fdiv
jecxz
xchg
ja
in
mov
and
xchg
or
lret
pop
xchg
aam
jge
mov
or
cmp
aas
pop
jecxz
aam
test
sub
jle
ss
divb
rorb
inc
int3
std
mov
arpl
and
xor
nop
jno
push
imulb
adcl
add
mov
rclb
jne
adc
jne
and
xchg
mov
movl
lods
popa
ret
daa
les
jae
aaa
pop
adc
icebp
sbb
mov
push
jmp
mull
cwtl
cmpsb
cmp
dec
jecxz
xchg
fistl
lea
jmp
add
jb
or
and
cmp
xchg
les
xor
das
push
pop
dec
dec
outsb
out
xorb
divb
int3
icebp
push
push
and
scas
mov
fnsave
jmp
and
movsl
push
cld
pop
or
int3
push
sub
subl
movsb
outsl
pop
cmp
les
adc
sbb
mov
mov
aas
inc
cmp
and
in
sbb
mov
add
ja
or
repz
xchg
jno
cld
jo
imull
pop
xchg
adc
scas
add
xor
inc
ret
sub
int3
popf
sbb
sbb
std
out
add
idiv
jno
out
mov
shr
inc
and
inc
bound
and
push
stc
mov
cmc
jecxz
loope
lods
sbb
mov
and
out
xor
cmp
insl
jno
push
je
mov
das
pop
xor
jnp
popf
mov
jae
dec
sub
nop
jnp
mov
mov
mov
nopl
push
mov
sub
xor
dec
pop
adc
outsb
push
dec
fbld
dec
aaa
xchg
adc
inc
movsb
mov
cmp
jae
roll
sbb
push
mov
cltd
add
es
jp
inc
pop
ret
adc
cld
ret
pop
and
and
lahf
rcr
push
push
adcl
es
mov
aam
test
andl
inc
xor
cmpsl
push
xchg
sbb
js
mov
xor
push
sbb
aam
or
dec
and
fs
cmpsb
xlat
nop
nop
fs
mov
aam
cmp
push
add
mov
cmp
sbb
nop
leave
in
repz
and
xchg
movsl
jge
movsb
dec
mov
mov
or
sub
cmpsb
xor
je
mov
sub
add
das
aam
sti
inc
xor
shll
punpckldq
test
xchg
or
xor
movsb
sub
in
cmp
cmove
or
roll
xor
sub
enter
sub
les
jbe
push
iret
sub
jle
or
sti
cltd
pusha
cld
iret
call
xor
ficoms
test
push
fwait
gs
rol
pop
gs
movsb
stos
push
outsb
jl
sbb
or
aaa
bound
mov
pop
push
xor
xchg
mov
adc
sub
mov
call
xchg
js
andb
push
push
out
xchg
cmp
sar
and
fcmovbe
sarl
fiadds
fldl
push
fstpt
xor
rclb
add
dec
adc
xorb
cmpsb
insb
dec
sbbb
mov
push
xchg
inc
test
or
xchg
xchg
rclb
shrb
mov
sbb
fndisi(8087
adc
or
cs
xor
and
pop
aas
inc
cmpsl
mov
int
test
repnz
popa
rorl
scas
aad
outsl
mov
out
lahf
push
and
addb
aas
iret
mov
push
test
sbb
xchg
clc
mov
jecxz
pop
packuswb
arpl
jbe
add
xlat
jmp
out
pop
cmp
sbb
mov
pop
cltd
push
pop
sbb
or
and
sbb
mov
out
pop
int
in
cs
out
cmp
aas
adc
sbb
pushf
adc
sub
mov
jo
mov
ss
and
out
lock
imul
xchg
adc
push
cmp
sub
xor
js
dec
inc
xor
jmp
ret
mov
dec
lahf
pop
outsl
mulb
mov
jb
mov
addl
repnz
cs
addr16
cmpsb
cli
push
ljmp
aas
pop
movsl
sub
sbbl
test
xlat
adc
lahf
mov
scas
inc
pop
and
inc
mov
addl
out
in
loop
arpl
cmpsl
pop
xor
std
dec
lcall
sbbl
inc
retw
xor
sbbl
push
or
adc
enter
and
jnp
add
add
xor
insb
jecxz
pop
add
xchg
xorb
lret
sbb
add
dec
ja
pop
pushl
push
push
mov
ljmp
test
dec
loopne
adc
movsb
mov
xchg
cmp
mov
ja
push
push
jbe
adc
bound
push
out
in
xchg
in
in
jno
fimull
lret
stos
cmc
aad
jle
jno
or
mov
daa
sub
xorb
dec
shrb
xchg
clc
cmp
and
jae
data16
les
mov
inc
filds
inc
xor
sub
dec
pop
lret
inc
sub
leave
dec
or
ds
mov
push
sub
jmp
xchg
cmp
fwait
ds
cmc
jns
mov
into
inc
cmp
push
mov
mov
push
jl
xchg
mov
xor
sbb
mov
add
adc
sti
inc
mulb
mov
dec
jo
ds
mov
leave
jg
mov
fs
and
das
repnz
dec
mov
adc
cli
into
arpl
and
push
inc
mov
movsl
ja
mov
fidivl
rdpmc
or
enter
cmp
stos
in
out
push
into
andb
jge
nop
sbb
imul
xchg
mov
dec
ss
fisubrs
testl
incb
pop
insb
mov
ds
xor
xor
mov
frstor
jo
pusha
out
sub
push
add
dec
fsubrs
xchg
out
lods
loop
mov
aaa
sbb
cwtl
cmp
mov
push
in
shl
jmp
std
loop
sbb
pop
jecxz
mov
push
jp
inc
sub
push
xchg
sarl
push
pushf
push
pop
push
pusha
daa
lds
or
jae
mov
ficompl
rclb
jecxz
xchg
adc
push
sbb
adc
int
movsl
cwtl
dec
sbb
sbb
dec
pop
mov
or
repnz
or
fdivrl
xchg
fs
cmp
mov
out
pop
imull
and
fwait
mov
jnp
fmuls
mov
jb
icebp
xchg
pop
cs
ficompl
jle
sbb
shlb
aaa
in
fcmovne
mov
xchg
inc
jp
mov
and
cmp
jne
rep
add
xchg
enter
push
sarl
jbe
xchg
jo
xor
sub
cmpsb
jl
push
or
or
adc
inc
outsl
fwait
adc
mov
adc
addb
inc
dec
dec
in
xchg
or
xlat
sbb
js
sbb
sbbb
mov
movsl
cmp
push
mov
lret
or
js
stc
and
dec
test
sub
iret
sbb
cld
lahf
sbbb
xchg
daa
cli
xchg
imul
icebp
leave
arpl
or
cmpsl
xchg
and
adc
cmp
mov
mov
jbe
pop
ret
and
out
jns
mov
int
push
add
fs
test
imul
fisubl
push
lea
add
in
push
outsb
ljmp
pop
sub
pop
xchg
push
outsb
shll
pop
adc
or
sub
sbb
cmpsb
fdivp
jecxz
orb
ljmp
inc
lock
push
icebp
xchg
lahf
push
mov
lea
add
pop
cs
cld
stos
add
mov
mov
cmp
mov
fldl
test
daa
sub
push
ds
or
inc
sbb
add
add
adc
pop
jnp
dec
push
and
xchg
lock
cld
mov
mov
dec
mov
leave
daa
mov
mov
sbb
dec
jmp
push
in
adc
pop
daa
clc
inc
popa
test
xor
scas
jmp
add
cli
cld
jo
inc
inc
ljmp
jo
cmp
aad
dec
fstpt
xor
pop
mov
ret
mov
mov
xchg
out
ljmp
movsb
xchg
xlat
lea
jne
and
add
xchg
movsl
jmp
jne
push
pop
mov
push
dec
inc
cmp
nop
cmovne
push
sbbb
rcrb
jae
pop
icebp
xor
dec
inc
mov
mov
iret
mov
sbb
nop
adcl
in
scas
mov
or
jns
xlat
jnp
test
addr16
in
lds
sub
mov
call
jge
cmp
and
or
or
ret
jo
aas
ret
shrl
adc
dec
in
cli
sbb
or
int
in
pop
daa
xorps
lods
arpl
xor
xchg
mov
mov
mov
fstps
sbb
sub
das
jmp
add
pop
or
mov
jle
iret
push
rcpps
ret
jnp
xor
jp
sbb
outsl
jmp
pop
pusha
and
pop
jne
push
in
mov
into
pop
aam
mov
lret
enter
adc
outsb
adc
sahf
dec
adc
sub
sbbl
mov
arpl
sbb
add
clc
test
and
sub
push
push
leave
cli
xor
xchg
stos
cld
out
mov
and
push
fadds
add
mov
pop
xor
scas
jno
adc
fidivrs
xchg
out
pop
jl
xor
push
je
repz
mov
mov
push
push
inc
jns
mov
jp
dec
les
mov
fisubrl
pop
sbb
imul
sbb
push
test
or
adc
push
jmp
in
pusha
lods
jo
out
xchg
outsb
push
mov
adc
and
fidivrl
fs
ffree
ljmp
test
fldcw
roll
cmp
mov
jp
or
adcl
push
lods
inc
xchg
fnsetpm(287
call
sub
insl
out
cmp
gs
pop
fists
lods
xor
pop
movsl
movsl
jmp
cli
mov
daa
xor
push
dec
inc
jnp
sbb
lcall
rolb
push
stos
test
mov
daa
push
jne
cmp
icebp
xor
hlt
xchg
test
lods
sbb
sahf
in
mov
in
xchg
ret
lods
pusha
mov
clc
lods
push
xchg
mov
fildll
xor
mov
push
stc
push
inc
movsb
fs
aad
cmpsl
shlb
jecxz,pn
mov
int3
sbb
inc
fstps
add
lcall
cltd
popf
out
or
push
push
scas
bound
pushl
xchg
decb
sub
or
pop
loop
jbe
push
sub
adc
mov
pop
std
int
scas
pop
bound
daa
fsubl
push
sub
imul
dec
sbb
int3
xchg
stc
clc
fidivrl
loope
aaa
aad
pop
movsb
lock
out
mov
movlps
sti
cmpb
rcr
dec
repnz
mov
pop
mov
jp
scas
ja
jg
adc
pushf
lahf
in
stos
mov
cmpsl
or
gs
inc
hlt
dec
iret
lret
pop
movsl
call
or
pop
xchg
sub
adc
cmp
fistpl
loop
in
fldt
cmp
ret
and
push
aad
dec
test
bound
lods
lds
insl
adc
iret
jecxz
inc
jb
sub
add
push
dec
or
pop
dec
int3
in
push
mov
xor
scas
fmul
mov
aam
ret
popa
shr
clc
jno
test
jp
imul
test
cwtl
repz
daa
adc
les
xor
aad
repz
fcmovb
fsubrl
and
out
xchg
and
cmc
xor
jae
pop
adc
dec
xchg
mov
inc
xchg
mov
pop
mov
ljmp
and
into
mov
vmaxps
sbb
sub
jns
insb
jnp
xchg
je
dec
int3
push
add
jmp
push
add
sti
pop
adc
add
jae
into
push
push
es
mov
inc
fs
movsl
icebp
scas
pop
outsl
int3
mov
sub
mov
push
mov
test
scas
dec
push
and
mov
inc
mov
popa
adc
je
std
pop
insl
push
test
mov
shlb
imul
rep
lea
arpl
int3
dec
mov
xchg
lock
mov
push
aad
leave
sbb
std
sub
jmp
fcom
cli
pop
jge
stos
mov
cmp
sbb
dec
out
mov
loop
dec
addb
push
sti
xchg
xchg
adc
ret
ret
jl
push
mov
dec
sar
pop
mov
jno
inc
adcl
pop
imul
stos
dec
lret
push
pop
jae
and
sub
mov
inc
jb
inc
mov
jo
arpl
jb
mov
jge
repz
stos
je
or
inc
test
leave
lods
in
or
adc
and
aad
pop
pop
ja
int3
push
lea
dec
outsb
addr16
jle
inc
nop
pop
movsl
lret
xchg
pop
inc
push
notl
push
mov
bound
ret
cmp
adc
push
mov
xchg
xor
mov
out
jg
push
scas
push
sahf
outsb
push
mov
pop
xchg
jmp
xor
decb
pop
sahf
fcomp
popa
das
inc
mov
push
mov
or
adc
cmp
pop
mov
fadd
outsb
lods
call
push
mov
subb
insl
push
filds
loope
jne
cli
add
cmp
movsb
ficompl
push
and
xchg
add
shlb
subl
rcll
mov
jns
mov
add
rcrb
es
test
dec
out
aam
xchg
pop
cli
sbb
and
mull
fidivl
push
and
icebp
test
ljmp
mov
adc
cmp
xlat
fisttpl
or
jmp
adcl
add
sti
add
enter
inc
icebp
jl
mov
or
add
jae
test
test
adc
shr
mov
stos
shrl
pop
and
mov
cmp
xchg
pushf
push
aam
push
and
das
hlt
cmpsl
fildll
mov
sahf
cltd
sbb
cmp
out
sbb
lret
ss
pop
stc
aaa
imulb
mov
loopne
mov
outsl
das
jmp
add
add
aam
imul
roll
sbb
dec
jecxz
push
fcomi
inc
int3
mov
and
fisubs
mov
sahf
in
xchg
imul
sar
arpl
nop
data16
or
hlt
testb
shlb
rorb
iret
add
sub
out
or
fidivl
xor
or
mov
pop
stc
inc
add
jg
addl
push
je
mov
xor
dec
mov
jne
lock
mov
push
dec
sti
repnz
std
popf
mov
and
into
lea
sub
mulb
or
lods
push
adc
jbe
mov
jp
sub
aam
xchg
ret
aam
imul
push
xchg
out
loop
fwait
add
cmp
mov
cs
imul
add
add
and
mov
lock
xchg
cs
sbb
adc
inc
adc
fnstenv
mov
js
sarb
xchg
jge
out
xlat
in
repz
fdivrl
adc
jb
jbe
dec
push
xchg
jge
int3
inc
call
ret
sub
fisubrs
mov
inc
int
int
mov
adc
adc
add
pop
fcmove
push
out
inc
outsl
stos
sbb
or
mov
int
aaa
mov
mov
das
ja
test
ret
std
test
enter
add
fdivl
aaa
adc
cmp
xchg
fbld
mov
push
jbe
or
enter
jo
jnp
movsl
js
call
push
dec
push
fsubr
fiaddl
test
sub
add
sub
jns
leave
sbb
data16
jae
lahf
shl
sbb
imul
inc
and
lldt
rcl
sbb
loopne
jb
mov
mov
call
mov
call
mov
mov
sahf
pop
pop
sbb
xor
pop
pusha
sarl
sbb
jmp
shrl
sub
xor
lods
dec
jne
das
mov
push
xor
add
add
cmp
mov
push
inc
xchg
mov
rep
stc
xchg
mov
sub
pop
push
push
insl
add
cltd
popf
inc
out
lahf
jb
jo
cmpsb
adc
insl
sub
jnp
arpl
cltd
add
fwait
inc
pop
iret
push
fs
push
repnz
imul
paddusb
pop
cli
fildl
jnp
jl
imul
jle
icebp
push
sub
sub
mov
mov
push
jno
jge
add
in
aaa
shrl
dec
sub
fsubrl
cmp
mov
test
mov
jno
scas
insb
jg
cli
les
aad
mov
imul
sub
std
cmp
push
push
and
dec
sbb
aad
lret
mov
idivl
std
ret
into
loop
int
inc
fcmovnbe
lret
jmp
ss
mov
fcompl
mov
repnz
je
aas
jge
push
push
mov
into
push
nop
loop
jns
imul
push
cmp
xchg
inc
or
fisubl
cmp
push
push
xchg
xor
xor
xchg
xchg
jl
aas
push
mov
mov
mov
inc
cmp
jb
and
enter
cwtl
fldl
xor
sbb
jg
xor
ja
push
in
sub
jo
xor
push
lods
pusha
and
out
xchg
or
loop
jmp
fidivs
stos
push
mov
mov
fdiv
cli
popa
in
fwait
mov
push
xor
adc
ds
jb
dec
xchg
xchg
incb
add
jne
sbb
pop
jl
push
aam
add
push
les
lock
jmp
mov
xor
and
movsl
sub
cmpsb
fimuls
pushf
add
xor
imul
ficomps
jns
ret
scas
mov
negb
and
dec
push
imul
stc
jecxz
push
jno
xchg
outsl
jle
pop
popf
mov
xchg
pusha
int
add
outsl
jge
sbb
xchg
pop
mov
inc
fs
push
lret
cmp
ret
leave
inc
dec
cmpsb
mov
pusha
dec
ljmp
cld
andl
xor
icebp
add
sti
ret
mov
gs
ljmp
hlt
xor
inc
xchg
insl
mov
stos
mov
and
pop
push
jnp
scas
es
and
std
call
call
mov
aam
stos
push
jle
xor
ret
sub
push
into
insb
leave
xor
or
adc
sbb
lods
xlat
stos
ja
popf
fistps
outsb
iret
pop
fwait
sub
and
mov
fistpl
push
xchg
and
scas
dec
add
insb
jl
lret
cmp
insb
or
sti
push
cs
lret
pusha
rcr
adc
lods
insl
aas
out
shll
fsub
mov
inc
test
mov
ds
imul
push
sub
adc
rcll
mov
mulb
mov
inc
or
test
int3
bound
push
push
pop
in
sbb
jg
std
ds
or
cld
testb
xchg
mov
push
clc
xchg
shlb
repnz
mov
cli
jno
std
pop
dec
sub
pop
arpl
lcall
adc
cli
cwtl
sub
jbe
pop
sub
clc
and
stos
xor
push
dec
xchg
int
pop
ret
and
inc
jmp
stc
lds
xchg
inc
xchg
sbb
jnp
or
out
mov
mov
cltd
cmpsl
popf
sub
fisttpl
in
sti
adc
insb
nop
xor
mov
into
rcrb
cmpsb
daa
pop
mov
dec
adc
mov
rorl
sub
pop
push
aas
movl
lods
movsl
and
pusha
in
dec
sbb
imul
mov
in
jge
fisttps
jg
push
jo
pop
push
dec
jb
sbb
mov
jmp
idivl
inc
dec
lea
fwait
pop
neg
clc
sub
add
aam
push
mov
dec
mov
jae
xchg
flds
sub
out
cld
mov
jle
sub
pop
mov
inc
jp
lea
adc
mov
gs
imul
pop
lahf
sahf
test
mov
inc
push
jno
cmp
js
inc
lods
cltd
clc
sub
loopne
int3
aaa
ja
imul
dec
push
xchg
mov
add
mov
pushf
push
mov
jmp
dec
or
adc
decb
je
icebp
xchg
mov
dec
or
add
out
test
or
insl
int
iret
js
sbb
das
add
fs
shrl
popa
sti
xor
mov
mov
or
es
out
inc
lcall
sbb
adcl
push
fs
in
push
mov
xchg
xchg
inc
std
mov
out
cmpl
cmpsl
or
mov
xor
loopne
jno
jmp
mov
adc
dec
clc
mov
mov
dec
push
dec
cmp
lock
adc
out
push
repnz
scas
adc
or
add
faddl
insb
mov
jo
enter
mov
mov
push
lock
shl
sbb
mov
or
sbb
shrb
dec
shll
dec
aaa
mov
fiadds
sti
xchg
xchg
inc
sahf
int
and
adc
mov
call
cli
shll
xchg
sahf
in
dec
mov
mov
mov
mov
push
xor
insb
lods
push
les
jbe
mov
dec
xchg
push
ret
jmp
sub
ds
jnp
dec
mov
lcall
int
xchg
lds
push
or
and
sbb
rol
shr
pushf
dec
sub
or
jmp
mov
jnp
mov
call
call
iret
in
jge
add
jo
inc
dec
sub
jge
push
mov
inc
mov
or
and
push
rorb
sbb
lret
sti
xlat
mov
mov
sbb
pop
jbe
adc
and
jbe
lret
or
sahf
jg
das
in
ja
movsb
mov
popf
pop
enter
inc
push
mov
jo
push
cmp
sbb
clc
pop
xor
xchg
inc
inc
in
cli
scas
cwtl
sti
imul
arpl
jmp
or
lds
mov
test
sub
cmp
les
out
xchg
sar
sub
dec
or
jb
mov
pop
push
xchg
sub
faddl
out
cmp
xchg
cmpl
sub
dec
ja
xor
inc
and
dec
push
sarl
xor
in
test
ljmp
punpckhbw
pop
clc
pop
arpl
fisubrl
mov
iret
movsb
lods
xchg
in
repnz
inc
pop
add
scas
into
insb
rorl
mov
or
cmp
inc
push
cmpsl
xor
jns
loope
pop
iret
pop
jno
loopne
sbb
rclb
push
dec
xchg
es
cmp
mov
mov
mov
jg
dec
jmp
or
mov
adc
outsl
inc
adc
in
loope
cwtl
ret
lahf
mov
cli
lret
mov
test
pop
bound
xor
in
and
stos
add
dec
push
in
cmp
inc
or
or
adc
cltd
loop
fdivr
jp
jge
sbb
ss
loope
pop
jnp
pop
add
movsl
push
xchg
rcl
and
clc
pusha
inc
icebp
pop
mov
or
sub
inc
sbb
loop
aad
add
imul
in
cs
mov
loop
inc
arpl
aas
es
mov
outsb
ja
call
add
aad
aad
adc
push
mov
fs
sub
scas
outsl
or
xor
jecxz
arpl
loop
loope
cli
and
push
aad
ljmp
rep
cli
or
jb
dec
stc
ficoml
aam
arpl
repz
fwait
mov
pop
add
adc
stc
xor
lock
ja
and
jae
mov
inc
scas
or
setnp
insl
arpl
iret
add
add
lods
mov
idivb
push
xchg
cmp
mov
rol
pop
lock
icebp
mov
es
adc
ljmp
xchg
mov
mov
push
sbb
mov
fdiv
in
xchg
push
mov
rcll
dec
cvtdq2ps
lahf
inc
sbb
stos
sub
or
jmp
mov
loop
vpavgb
mov
add
sbb
mov
rclb
jecxz
xchg
mov
sub
pushf
js
fwait
clc
ret
or
jg
ds
cli
dec
inc
add
xor
imul
add
lds
push
test
inc
mov
cmp
stc
loop
and
into
pop
orl
cmp
jmp
mov
inc
pop
loopne
decl
jno
call
jo
js
sbb
outsl
gs
sar
push
add
out
mov
push
xchg
movsl
mov
pop
insl
popa
xrelease
mov
movzbl
jmp
cmpsl
loop
ds
inc
push
sub
je
rcll
shr
sbb
arpl
cmp
decl
mov
rclb
cli
pop
outsb
je
pop
les
scas
rcrl
xor
outsl
mov
jg
mov
xlat
les
or
loop
adc
mov
fstpl
dec
pop
insl
in
fs
push
add
pop
add
and
mov
je
sub
cmp
sub
sarl
shrb
punpcklbw
outsb
shl
or
sbb
lcall
mov
mov
cwtl
sbb
aad
inc
pop
stos
int
mov
lods
cs
outsl
jbe
jae
jns
sub
in
pop
push
getsec
cmpsb
add
add
push
sbb
xchg
inc
in
fadds
mov
mov
sub
and
pop
jo
mov
imull
mov
mov
jnp
into
gs
aad
mov
cli
or
std
fs
push
stc
push
test
push
test
orb
popf
test
sbb
daa
cmp
mov
jne
or
adc
data16
xchg
mov
fildll
arpl
jge
inc
mov
leave
mov
mov
xchg
lret
lods
add
stc
jns
lret
stos
push
jo
leave
rorb
and
test
movb
add
popf
outsb
jp
clc
push
ret
les
xor
out
pop
push
out
repz
sbbb
in
ret
leave
push
dec
dec
jb
dec
ret
loop
add
jg
out
sbb
clc
pop
jnp
dec
add
xlat
sub
inc
sub
ret
and
or
fcoms
mov
psubw
imul
test
cs
lds
mov
rcll
data16
and
negb
inc
test
xchg
adc
add
mov
pop
pop
jge
rolb
cmpsl
nop
jbe
dec
in
out
or
outsb
inc
aaa
dec
jecxz
into
out
loop
mov
and
inc
je
cmp
stos
push
inc
enter
lods
sbb
bound
divl
repz
movsl
je
sub
das
xor
add
cltd
loop
push
xchg
lea
sti
add
hlt
outsb
repnz
test
dec
xlat
rorl
jb
out
dec
dec
push
mov
roll
pop
cwtl
mov
fidivrs
in
xor
std
fsubrl
cwtl
cmp
xor
ds
fwait
testb
pop
mov
icebp
xor
xlat
and
xchg
fdiv
inc
aaa
outsb
xor
testb
dec
scas
daa
outsb
adc
stc
decb
mov
in
inc
and
out
xor
or
add
jnp
and
rcll
and
mov
out
mov
cmc
in
jo
leave
out
dec
jb
stos
rcrl
lea
out
hlt
jbe
add
cli
mov
adc
por
xchg
xlat
shll
and
mov
inc
hlt
xchg
sahf
mov
jns
inc
lds
popa
push
mov
sti
sbb
lods
push
cmc
xchg
pop
aaa
add
shlb
and
fdivrs
addl
gs
dec
jno
cs
mov
push
mov
xor
sub
and
xor
and
xchg
adc
fdivrs
mov
push
add
data16
dec
mov
pop
jg
je
fsubrl
cmp
cli
push
ret
out
and
sbb
sub
jns
dec
cmp
inc
mov
push
pop
mov
test
sbb
dec
jns
jae
scas
pop
adc
push
adc
xchg
inc
mov
ret
lea
jmp
sub
mov
and
mov
cmp
inc
pop
lods
mov
xlat
pop
insb
arpl
xor
ss
jae
lahf
test
mov
push
adc
jle
stos
jp
xor
mov
int3
mov
cmp
push
lcall
xchg
fildll
and
xchg
jns
jo
stos
movl
scas
scas
std
sbb
dec
and
gs
xchg
bound
pop
aam
scas
enter
rcll
jnp
dec
scas
mov
dec
sbb
ss
sahf
cmp
out
mov
ds
cmpsb
add
cs
push
sub
scas
gs
xchg
adc
mov
adc
or
and
lret
les
shll
adc
mov
cmpsl
xchg
repnz
cltd
pop
in
rorb
add
push
add
and
or
xor
out
xor
orb
outsb
insl
inc
jmp
mov
lret
mov
dec
xlat
ljmp
int3
int
dec
pop
pop
adc
mov
dec
xlat
adc
stos
cltd
repz
jns
fldl
dec
pushf
test
cmpsl
inc
mov
inc
data16
aad
je,pn
mov
push
lods
stos
stc
xchg
jle
scas
xchg
adc
lret
scas
insb
mov
inc
fisttpl
mov
push
push
jp
mov
mov
fldenv
js
movsl
or
repnz
pop
icebp
mov
sbb
xchg
mov
push
movsb
outsb
push
imul
adc
xchg
sti
mov
lret
push
sti
outsb
sub
ljmp
aam
loope
insb
mov
in
sub
mov
mov
outsb
out
push
fwait
inc
fs
sbb
data16
cmpsl
rcrb
push
int
in
hlt
int
jle
xchg
push
lea
mov
or
testl
sub
mov
fstpt
shr
xchg
jge
shl
jp
inc
jb
mov
adc
sbb
sbbl
je
jne
stos
inc
sarb
sub
dec
jmp
negb
in
pop
add
out
ja
cltd
pop
icebp
pop
imul
ljmp
jae
mov
xchg
xor
pop
add
scas
xchg
sbb
cmp
dec
mov
clc
jg
movsb
or
dec
or
jmp
jmp
mov
dec
repz
jb
imul
movsl
xor
pop
movsl
insl
lcall
clc
cld
lds
test
and
test
mov
in
mov
fcmovnu
in
push
in
aas
jmp
insb
sar
dec
test
mov
add
adc
sbb
test
xor
adc
pop
stos
or
lret
fbstp
dec
daa
mov
push
ss
dec
sbb
inc
push
and
xor
sbbl
adc
inc
nop
add
push
out
add
fidivs
cltd
call
insl
insl
fistl
test
cmp
in
push
femms
cwtl
lods
jp
or
push
cmp
aad
int
inc
jg
xor
out
pushf
aas
loope
or
fadds
or
outsl
dec
lea
iret
mov
imul
inc
hlt
gs
mov
mov
jno
jae
aam
andb
imul
arpl
dec
xchg
sbb
cmpsl
mov
add
mov
mov
xlat
outsb
in
jnp
out
insb
arpl
aas
loopne
sahf
cmc
mov
into
sub
mov
mov
jmp
fwait
insb
int
cmp
cmp
mov
xchg
pop
ljmp
dec
scas
mov
test
sbb
and
and
add
cmp
pop
push
lahf
roll
fidivl
or
jecxz
pusha
sti
clc
loop
lcall
inc
mov
test
push
mov
xchg
mov
pop
adc
inc
pop
test
js
mov
mov
iret
add
pop
cmpsb
cltd
idivb
aam
into
mov
cmp
cmp
mov
lea
iret
ret
push
sbbl
fisubrl
int
push
pop
mov
xchg
pop
divb
sub
test
pop
push
lret
dec
sub
inc
ficompl
insb
aaa
xchg
jo
mov
cmp
mov
add
iret
and
cmp
pop
push
movsb
sbb
scas
into
into
cltd
loop
js
cmc
xchg
xchg
add
xor
mov
push
pushf
inc
pop
jmp
adc
cmp
imul
and
pop
nop
adc
sbb
inc
jmp
lods
mov
enter
jle
mov
adc
fs
sub
sub
fidivs
das
cmpsb
clc
xor
fwait
xchg
sbb
push
dec
push
mov
inc
pop
lret
and
mov
insl
out
lods
leave
cmc
sub
daa
pusha
vpsubusb
fcmove
xchg
inc
out
test
out
inc
push
mov
push
pop
test
js,pt
xor
inc
nop
mov
jbe
aad
xchg
xchg
xchg
popf
mov
pop
dec
in
mov
add
js
in
sub
dec
cmpsb
mov
sbb
pop
shrb
jge
push
or
pop
addr16
lret
ja
sub
lcall
mov
stc
aaa
lock
mov
pop
repz
enter
pushf
mov
mov
iret
push
outsl
shll
add
imul
mov
xchg
test
xor
mov
fwait
mov
insb
subb
mov
dec
inc
test
push
out
iret
sbb
cmp
rorl
les
rcrb
mov
or
xchg
das
xchg
jl
lahf
lret
cmpsb
mov
inc
pop
or
cltd
inc
out
js
mov
lock
clc
inc
mov
ja
cmp
pushf
repz
sbb
mov
shlb
daa
or
push
xchg
and
lcall
into
incl
iret
ficomps
cmp
adc
lock
or
sub
call
cmpsl
push
mov
test
pop
mov
addb
xor
repnz
or
popf
push
jl
jmp
pop
jg
xor
aas
sub
sub
imul
mov
jle
mov
cmp
ret
dec
fwait
in
sti
sbb
shll
test
dec
mov
dec
int
adc
adc
test
dec
push
adc
xchg
xchg
jp
ficompl
nop
out
insb
add
outsl
push
push
into
lods
ja
xchg
lahf
popa
pop
or
mov
sub
stc
movsl
pop
inc
xchg
lahf
xchg
adc
sub
dec
add
in
adc
test
stc
es
xor
roll
sbb
push
testb
sti
xlat
sbb
mov
or
mov
jae
inc
fstpl
jb
inc
add
mov
and
ret
pushf
mov
xchg
movsb
repnz
arpl
xchg
dec
mov
cmp
push
jle
jmp
mov
push
inc
jge
xchg
loope
popa
cwtl
shlb
call
inc
loope
fs
les
popa
adc
imul
data16
mov
aam
pop
add
in
movsl
and
repnz
in
ss
divl
mov
xchg
fidivs
stc
int
lcall
xor
sbb
aaa
scas
test
push
int3
fdivrl
call
jno
pop
or
lods
cmpl
fs
mov
jo
push
pop
dec
lahf
jns
dec
xor
sarl
pop
ljmp
jno
in
js
xor
divl
cmpsb
outsl
cli
lret
cmc
stc
or
mov
popf
test
mov
divb
add
das
lods
xchg
out
movsl
dec
xchg
or
aas
add
add
dec
xor
leave
cmp
data16
out
push
std
push
pop
test
imul
push
inc
pop
pop
in
dec
test
push
inc
bound
pusha
sbb
push
xlat
add
rorb
lret
cmp
push
aad
pop
sub
add
or
lods
scas
imul
ret
sbb
push
inc
cmp
add
rcrb
inc
dec
cmc
gs
xchg
mov
cli
or
pushf
cs
mov
lea
fisubs
jp
gs
adc
or
daa
les
adc
push
sbb
cwtl
and
lock
stos
mov
scas
push
add
mov
jbe
ss
xchg
xchg
add
ss
pop
rcrl
std
ja
jnp
pop
mov
test
or
aaa
inc
insl
rcrl
jb
lods
inc
lret
mov
sub
sub
test
sbb
insl
js
js
xchg
clc
cmc
inc
adc
mov
addr16
ret
pop
out
cmpsb
clc
mov
mov
mov
jae
loop
hlt
jmp
xchg
pop
das
add
leave
pop
repnz
add
mov
add
stc
sar
stos
and
jbe
mov
out
fs
gs
pavgb
jbe
lods
pushf
scas
into
test
xchg
xor
jno
popa
stc
and
out
add
popa
pop
dec
sbb
std
xchg
cmpsl
imul
and
int
leave
gs
inc
or
imul
adc
pop
fistpl
add
mov
sub
pop
and
adcb
mov
lahf
out
call
adc
mov
rcrl
pop
sbb
pushf
cmpsl
push
pop
je
pusha
xlat
daa
sub
mov
jnp
int
and
mov
ficoml
jne
lret
and
push
adc
test
pop
adc
rcll
xor
adc
dec
pop
cwtl
dec
adc
mov
les
mov
call
das
and
clc
out
inc
rcl
mov
ss
cmp
add
push
cmp
in
push
fistl
daa
push
adc
pusha
pop
mov
cld
js
push
shlb
xchg
in
das
sahf
push
roll
std
push
or
fucom
popa
insl
inc
jns
mov
adc
divb
adc
cmp
dec
cmp
shlb
sbb
mov
sbb
adc
mov
mov
outsb
iret
and
lcall
ljmp
xor
xor
shll
flds
orl
inc
push
jle
adc
int3
adc
push
xchg
fs
shlb
jns
adc
mov
lahf
incb
dec
push
xlat
mov
cmp
aaa
loop
int
pusha
mov
xchg
mov
jo
dec
xchg
mov
ljmp
cmp
push
inc
in
loopne
aaa
in
jbe
jge
adc
pop
imul
mov
bound
push
mov
insl
aaa
scas
and
cltd
ljmp
mov
in
and
cs
and
bswap
pop
in
rolb
inc
mov
leave
pusha
decl
cmp
pop
loop
xchg
and
gs
test
loop
push
testl
xchg
jl
test
pop
xor
fisubrl
leave
movsl
lods
xchg
pop
dec
fildll
stos
sarb
ss
test
lret
rclb
cmc
mov
lock
mov
loop
jns
addr16
or
and
and
push
mov
cld
push
push
stos
dec
xlat
cmp
mov
push
xchg
lds
repz
pop
or
xchg
cmp
push
lret
test
scas
xchg
pop
jmp
popl
adc
fldl
inc
psllw
clc
lock
sbb
xchg
mov
push
shll
sub
sahf
and
xchg
adc
lods
fs
dec
insb
mov
subl
or
fidivrs
outsl
cmc
xor
push
mov
push
movb
sbb
fcoms
pop
mov
xchg
dec
fldl2e
outsb
dec
iret
test
cld
stos
in
jae
mov
int
cwtl
fidivrl
mov
sbb
sbb
mov
xchg
sub
ret
cld
rol
inc
stos
add
jle
into
loopne
iret
mov
ret
mov
lods
inc
inc
arpl
sub
test
jnp
dec
lahf
push
inc
push
push
xchg
stos
sub
xchg
loope
cli
xchg
xor
jae
or
in
sti
cltd
mov
shlb
sub
aaa
inc
arpl
mov
push
inc
sbb
jmp
cmp
je
mov
jle
lock
mov
rcrb
mov
repnz
fcomps
enter
jbe
stos
pop
sub
aam
pop
shrb
mov
or
roll
fdivrs
push
and
pop
data16
dec
xchg
sub
scas
dec
add
popf
in
bound
xor
mov
addb
cmpsb
hlt
sub
aam
xchg
xor
enter
sahf
xor
aam
add
fwait
lds
jle
call
mov
out
out
jnp
es
lods
adc
sahf
pop
pop
int
cmp
pop
mov
cmp
insl
out
aam
xchg
inc
shlb
pop
notl
dec
push
iret
mov
shlb
cs
ret
xor
add
sbb
xor
pushl
clc
add
dec
clc
jne
outsl
mov
pop
sub
dec
int3
push
push
test
jns
mov
outsl
mov
pop
fs
outsl
data16
mov
sub
jno
sub
jl
xchg
lret
jp
movsb
arpl
pusha
mov
push
xchg
dec
bound
inc
int
or
int3
pop
xchg
jb
push
adc
les
mov
daa
aas
mov
xcrypt-ofb
cmpsl
push
and
mov
inc
xchg
xor
jl
xchg
cmpl
add
mov
jne
orl
inc
test
hlt
lock
iret
ljmp
es
cltd
xor
jne
mov
mov
notl
xchg
lret
scas
push
mov
test
out
mov
pop
sahf
xchg
cmp
pop
adc
in
and
lea
mov
lds
sbbb
inc
sub
jl,pt
aas
imull
outsl
lret
cs
sarl
mov
and
sbb
pop
add
mov
iret
mov
cmpsl
xchg
jp
sarl
mov
loopne
es
pop
rcll
add
mov
pop
pop
pop
mov
push
jle
or
fisttpll
mov
enter
xor
cld
inc
lahf
or
fldt
add
int
aas
mov
lock
arpl
stc
xor
mov
popa
int
sub
sbb
push
vcvtdq2ps
adc
ror
movb
inc
dec
lcall
lret
jp
jno
out
fiadds
inc
lea
jl
out
mov
jo
adc
and
lcall
mov
inc
repnz
repnz
jbe
cs
loopne
lods
jbe
xchg
xchg
fcomp
jne
popa
and
notb
adc
inc
sub
lea
pop
jl
jno
loope
dec
rcll
pop
inc
or
push
xchg
lcall
adc
ljmp
jmp
mov
adc
pusha
jne
add
cmc
fnstsw
jno
xchg
push
sbb
pop
xor
mov
insl
or
cmp
inc
fsubrs
push
mov
faddl
add
rcl
adcb
call
lods
and
sub
addr16
repz
stos
jp
fldenv
in
xchg
xchg
push
xchg
push
mov
xchg
xor
enter
adc
inc
inc
adc
sub
sub
sub
push
repz
insb
and
pop
mov
lock
scas
insb
out
lcall
mov
test
xor
lahf
xor
pushf
aam
fbstp
cmp
and
in
out
inc
cs
repz
es
push
dec
popf
inc
push
lods
inc
imul
ficompl
movb
mov
test
xchg
xor
adc
lock
mov
pop
bound
push
mov
and
stc
je
movsb
lahf
clc
jge
adc
xchg
cmp
rcrl
testb
mov
add
daa
jae
jmp
gs
aas
push
add
jle
icebp
in
pop
jecxz
loope
or
pop
int3
sub
ficoms
cld
dec
leave
push
lea
sub
inc
add
fcom
cs
in
mov
bound
aad
hlt
fs
inc
icebp
rorb
mov
pop
pop
jae
add
fbstp
aas
aam
jb
and
adc
loopne
cmp
or
push
and
je
mov
pushf
jecxz
aaa
sbb
sub
in
icebp
test
push
out
arpl
fcoms
fbstp
lea
pop
cmpsl
xchg
gs
lds
mov
pop
loop
cmpsl
dec
mov
outsb
fnsave
aam
fdivrl
cmp
sbb
mov
addb
insb
out
outsb
jb
mov
lock
push
les
pop
rsm
aam
xor
cmp
dec
lods
pop
jle
mov
hlt
bound
add
movsb
inc
mov
arpl
inc
sub
fidivrl
fmuls
or
mov
test
xor
cli
mov
sub
mov
push
and
sub
repnz
push
sbb
std
mov
lock
cld
repnz
aam
adcl
lea
add
pop
in
ja
mov
mov
pusha
imul
add
das
push
repz
clc
push
mov
or
pusha
cmpsl
and
pop
mov
push
gs
jecxz
sub
push
push
inc
icebp
adc
insb
lock
pop
gs
fsubl
mov
jp
pop
jns
mov
mov
call
enter
dec
push
jns
fs
out
xchg
add
or
sub
and
mov
push
adc
vpaddusb
sbb
loopne
loop
loop
std
scas
mov
scas
mov
daa
xchg
jo
enter
add
ss
sbb
mov
jg
cmc
inc
cmp
inc
xor
sbb
or
sub
xor
shll
lods
add
pop
imul
dec
mov
lods
mov
insl
xchg
mov
outsl
adc
inc
clc
jp
inc
cmp
xchg
mov
mov
dec
inc
lods
mov
xchg
xchg
add
out
sbb
add
sbb
pop
pop
cmp
dec
adc
mov
sbb
lret
xor
sub
cli
cmp
cmpsb
pop
mov
mov
popf
sub
scas
jne
lcall
stc
inc
mov
dec
adc
add
push
rolb
imul
sub
sbb
push
pop
fcomps
in
push
mov
push
les
or
jne
inc
add
cmp
inc
dec
inc
mov
cmpsl
adc
dec
rcl
inc
pop
dec
pusha
dec
loope
std
mov
xor
imul
movb
pop
dec
mov
and
das
pop
inc
xchg
lahf
push
cld
in
or
mov
mov
mulb
pop
repnz
cmc
cmp
fs
iret
pop
inc
mov
aas
push
pop
xor
fistpll
out
sahf
mov
adc
insb
and
sahf
cli
cmp
addr16
add
icebp
in
push
adc
sbb
imul
inc
out
int3
fcmovbe
cmp
cmc
loope
add
lds
idivl
mov
push
pop
sbbl
dec
xor
cmp
jp
test
and
sar
xchg
adc
mov
in
jno
fnstsw
dec
dec
adc
jo
mov
aas
es
or
lret
and
aad
rorb
mov
test
push
dec
push
in
sbb
insl
mov
or
fmul
test
push
mov
mov
jo
pop
cmpsb
mov
mov
mov
sub
addr16
fwait
pop
lahf
sti
insl
add
aas
gs
stc
test
out
cmp
clc
leave
out
add
push
inc
mov
ja
push
mov
xor
sbb
mov
shll
mov
pop
pop
cwtl
fdivl
xor
bound
push
add
xchg
cs
es
fisubl
aaa
rcll
sub
test
jae
imul
fsubrl
adc
pop
mov
fisubs
aaa
or
xor
push
out
rcrb
adc
call
jg
int
cmp
jb
or
push
mov
or
jmp
fsubrs
pusha
gs
into
xor
inc
into
out
je
loope
lret
aas
in
pop
rorb
push
lret
bnd
shl
cld
clc
adc
jecxz
dec
in
jl
push
pusha
jb
lock
das
xchg
hlt
test
pop
shr
jb
imul
xchg
out
lds
ret
stos
jns
adc
movups
mov
adc
popa
jp
lods
arpl
push
nop
jnp
or
mov
fcmovu
mov
add
xchg
fcoms
fbstp
loope
testb
mov
xchg
mov
add
fwait
xor
sbb
in
aas
xlat
pmulhuw
mov
in
enter
cmc
xchg
and
push
push
movsl
push
aas
inc
add
dec
ds
loop
xchg
call
xor
cmpsb
aam
jmp
imul
mov
sbbl
fs
mov
repnz
sbb
rclb
xor
idiv
add
jne
sbb
rorb
repz
aaa
jb
lock
push
test
rol
mov
xor
inc
hlt
jp
lret
mulb
mov
int
jns
push
mov
imul
pusha
test
xchg
xchg
mov
jecxz
je
sub
lcall
mov
add
jo
mov
cmp
pusha
mov
and
adc
xor
add
orb
das
pop
or
push
lea
ljmp
pop
mov
ja
pop
mov
divl
sahf
or
sub
stc
and
inc
sub
sbb
imul
pop
dec
jl
shlb
dec
sub
pop
pop
int
mov
sbb
sub
inc
andl
test
sbb
dec
sarb
lret
sbb
push
sub
dec
sub
push
mov
xor
loop
mov
bound
sub
xor
push
adc
repz
lahf
repz
pop
lock
push
push
aas
repz
push
fs
sbb
scas
lock
pop
adc
fwait
push
in
aam
jg
jns,pn
leave
push
notb
sub
mov
fiadds
stc
pop
mov
out
aas
inc
adc
jl
add
mov
mov
push
sahf
push
xchg
adcb
stos
cs
cmp
xchg
adc
mov
out
ljmp
pop
fistpll
jns
xorb
jge
fdivl
fsubl
inc
outsb
and
lret
stos
in
enter
ja
fstl
pop
xchg
pop
call
xchg
xor
add
add
cld
inc
repz
into
lock
inc
push
mov
loop
shrb
test
test
ja
cmp
ret
sub
ss
xchg
xchg
pusha
mov
std
loopne
sub
fcompl
js
xchg
cltd
xor
mov
cld
xor
xchg
adc
jae
mov
mov
add
inc
or
outsl
sub
fcmovb
push
jecxz
xor
inc
push
lods
mov
fbstp
push
icebp
test
mov
lea
int3
call
jnp
inc
inc
gs
and
mov
in
cmp
push
jecxz
lods
xchg
dec
insl
xlat
divb
fldcw
dec
xor
mov
mov
mov
and
xor
dec
fimuls
jo
icebp
mov
repz
popf
pop
fcmovb
aas
push
clc
jg
into
mov
mov
cmc
cmpb
mov
mov
xchg
in
cmp
or
stos
mov
aaa
xor
mov
and
std
xchg
xor
lea
dec
mull
pushf
jecxz
dec
lret
fsubrs
mov
scas
xor
fdivrs
in
pop
sub
sub
repnz
sbb
dec
xlat
push
repz
add
cmpsb
push
lds
ljmp
fdivs
cmp
pop
xor
jge
fbld
mov
fidivs
jnp
shl
jo
mov
sub
mov
insl
aad
sbb
cs
push
daa
outsl
push
int
sbb
arpl
mov
and
sub
mov
xchg
adc
enter
sahf
imul
pop
mov
nop
movsl
ret
aad
inc
sbb
std
xor
fistpl
aas
mov
int3
or
sahf
cli
test
sub
and
xchg
lret
iret
jg
push
dec
xor
fcompl
sub
addl
jb
sub
ljmp
mov
addr16
pusha
fcmove
mov
xchg
push
insl
aad
pop
cmc
pop
pcmpeqd
jns
enter
and
adc
mov
movsb
dec
adc
outsb
mov
stc
xor
inc
adc
fsubrl
mov
inc
aad
mov
cli
int3
mov
aad
out
mov
insl
movsb
or
scas
leave
adc
adc
loope
lcall
loope
fwait
dec
cmp
fwait
leave
iret
icebp
inc
mov
mov
jno
push
pop
fisubs
add
gs
dec
cli
or
cmp
jnp
jle
push
jp
xor
xor
rolb
in
lock
sub
lods
je
ds
jne
pushf
or
ret
gs
cli
add
adc
jne
pop
pop
add
lds
data16
mov
push
dec
test
cld
mul
xchg
out
xchg
sbb
mov
sbb
cmc
sub
insb
xor
cmp
into
shrl
cmc
daa
sti
mov
and
and
pop
jbe
std
fidivs
xchg
cmp
pop
call
jo
add
pusha
dec
inc
inc
imul
movsl
cmpsl
stos
adcl
stos
mov
adc
pop
mov
cmp
outsb
push
inc
lea
pushf
cmpsb
ss
jo
std
aaa
insl
xor
jae
pop
js
and
aas
adc
lcall
lods
or
imul
fcmovnu
lret
add
icebp
lds
sbb
mov
ljmp
inc
xchg
subb
sub
testb
je
and
ja
mov
fdivp
sbb
add
inc
fstps
fisubl
je
shlb
xchg
mov
xchg
pop
or
fmul
mov
imul
or
mov
leave
sbb
stc
and
test
dec
add
ja
addr16
stos
and
pop
cwtl
inc
push
xor
mov
xor
fsubr
xchg
mov
xchg
popf
xor
shrb
imul
orb
sahf
sub
scas
add
pop
adc
inc
jl
fcoml
inc
into
push
xor
fnstcw
mov
xchg
popf
lods
xor
fimull
lea
cmp
int3
fisttpl
sbb
xlat
mov
in
stc
jns
push
pop
sub
mov
fdivr
cs
fstps
cmovl
aad
mov
arpl
int3
sbb
mov
cmp
in
addr16
pop
cltd
out
test
stos
mov
cli
iret
loop
stos
enter
xchg
pop
ss
fistps
xor
xor
xchg
inc
sub
jne
pushf
fidivrs
cli
fdivrp
loope
sub
sarl
loopne
ret
loope
nop
pop
dec
jae
xor
filds
mov
xchg
cs
test
sub
lock
xchg
rcrb
mov
daa
cld
mov
add
add
inc
cltd
or
ret
pop
jns
imul
dec
cmc
inc
fidivs
cltd
orb
xor
mov
imulb
xchg
mov
mov
inc
jbe
popl
sub
jbe
movsb
xchg
mov
gs
imul
sbb
hlt
add
frstor
mov
adc
call
mov
je
push
mov
loopne
mov
ds
inc
and
mov
mov
insb
sub
inc
cmpsl
jnp
inc
cli
push
adc
jne
xchg
cmc
push
jo
dec
int
cmp
mov
fcompl
cwtl
scas
mov
push
xchg
push
sti
pusha
jg
test
xchg
pop
mov
test
and
mov
push
cwtl
jge
push
test
inc
clc
shll
xor
or
movsb
div
push
jp
mov
jl
aaa
sub
movsl
in
js
notb
in
movsl
rorb
lcall
shrl
push
inc
jnp
mov
js
shlb
mov
test
and
xchg
movsb
mov
jno
movsb
out
cmc
test
insb
jg
lcall
sbb
or
inc
cmp
jecxz
xchg
inc
mov
push
pop
popa
jb
inc
mov
jbe
inc
xor
and
pop
andb
fcmovu
jnp
xchg
pop
les
inc
jnp
movsb
pop
pop
lods
fninit
sahf
mov
xor
pop
mov
cmp
enter
cmp
push
xchg
pop
sub
loope
gs
fidivrl
add
pop
push
mov
dec
addr16
jmp
fidivs
ss
repz
repz
int3
jnp
mov
mov
movsb
enter
cs
push
cmp
adc
jns
scas
movsl
cld
pop
jae
mov
into
mov
andb
jg
and
notl
jle
xchg
xlat
xchg
pop
repz
loope
loope,pn
lcall
mov
mov
cwtl
jbe
ss
mov
pop
dec
scas
in
pop
hlt
pop
mov
or
fcomp
cs
xchg
inc
cmp
xor
leave
faddl
stos
sbb
pop
or
mov
pop
cmp
out
loopne
xor
sbb
dec
mov
mov
jmp
jno
dec
decb
ljmp
int3
jmp
adc
jmp
jbe
stos
lcall
sbb
hlt
movsl
pop
xchg
loope
add
push
es
mov
lahf
popa
push
scas
xlat
jmp
mov
loopne
ja
push
je
xchg
inc
scas
dec
in
fiadds
dec
ret
dec
sbb
decl
cmp
sub
rcr
push
push
cld
inc
lret
sub
insl
push
jg,pt
or
and
mov
mov
outsb
rorb
lret
les
cmp
push
dec
loop
lea
clc
cmc
dec
or
call
pop
cmpb
push
add
mov
pop
flds
cmp
das
lret
cmp
pop
iret
testl
scas
jb
adc
ja
or
or
xor
into
push
mov
and
jo
mov
xor
hlt
inc
ds
clc
lods
mov
push
sahf
push
adc
mov
xchg
stos
fidivs
popf
repnz
ss
adc
dec
subb
scas
sbb
test
push
outsl
mov
bound
jns
cmovle
fisubl
test
cli
inc
push
fcoml
xchg
or
sahf
cli
lcall
pop
fcompl
cmpsb
mov
mov
fwait
and
adc
dec
mov
and
inc
icebp
mov
outsl
push
adc
xchg
sti
hlt
cmp
xchg
jecxz
inc
push
testb
add
cld
rcr
adc
mov
das
push
jb
ss
sahf
cmp
jg
pop
adc
loopne
and
mov
ffreep
js
sarl
add
addr16
sub
mov
cmpsb
push
mov
pusha
sub
cmpsb
jle
lods
fistpll
bound
js
mov
xchg
fwait
popf
stc
in
out
push
and
les
mov
rol
fmuls
jne
sbb
lods
jecxz
pop
xchg
aaa
mov
les
into
mov
sarl
mov
in
jo
cmp
jmp
cmp
add
mov
and
fsub
jp
in
dec
inc
pop
in
dec
icebp
std
and
imul
mov
loopne
fistpl
adc
popf
xor
enter
popa
aad
test
out
test
mov
testl
sbb
push
ljmp
in
gs
fidivl
and
into
or
or
mov
push
fs
fwait
xchg
popf
in
leave
dec
jbe
xorps
in
cli
stos
aaa
mov
sub
movsl
add
dec
dec
xchg
dec
arpl
filds
mov
pop
repz
out
bound
jno
dec
repz
inc
addr16
lahf
leave
iret
fdiv
jp
mov
aad
add
mov
xor
xchg
cmp
or
pusha
xchg
sub
test
mov
mov
xor
pop
xor
xchg
push
icebp
cmpsb
sbb
xchg
cwtl
jmp
arpl
xchg
add
xor
fistps
jae
xchg
fbstp
pop
and
iret
imul
xchg
lock
bound
sub
push
inc
out
sub
rorl
stc
enter
cmp
gs
stc
int
mov
cmp
filds
mov
cs
insl
fwait
push
stos
mov
inc
add
cmp
push
push
or
mov
in
cs
pop
push
in
inc
inc
lods
xchg
fld
bound
icebp
ret
xchg
loope
jge
insl
push
xchg
jle
xchg
pop
lods
outsb
jno
shlb
mov
sahf
lcall
dec
add
cmc
aad
lcall
movsb
sbb
xchg
repz
ror
fwait
movsl
insb
lcall
insl
mov
xchg
gs
xchg
iret
dec
mov
or
jl
mov
or
in
int
add
dec
inc
lods
adc
push
pushf
stos
and
ljmp
xor
xchg
out
jmp
clc
sub
leave
aad
mov
xchg
imul
xchg
jnp
fisttpll
inc
leavew
scas
int3
shl
js
jb
filds
pop
inc
lods
or
dec
or
xlat
adc
cmpsl
jb
fistpl
xlat
scas
cmp
dec
xchg
ds
push
jno
pop
push
mov
xor
xor
scas
dec
leave
mov
xor
mov
aad
lret
js
pop
dec
dec
icebp
mov
mov
xor
mov
lea
adc
arpl
and
mov
sti
pop
dec
sub
iret
lret
outsb
fistpl
pop
lahf
and
pop
fcoml
pusha
xor
bound
or
jp
dec
inc
cmp
jns
pop
arpl
cli
pop
sub
out
stc
mov
mov
fs
or
jmp
out
lock
rorl
outsb
fidivrl
mov
adc
push
pop
icebp
and
loopne
in
popf
sti
out
dec
mov
in
or
or
cmp
add
out
loope
sbb
mov
add
stos
addr16
stos
adc
int
movsl
and
iret
movsl
push
dec
sbb
lcall
adc
fdivs
jno
pop
xorl
test
mov
in
in
in
cltd
lods
dec
cld
sub
outsl
sbb
dec
jb
push
fists
add
push
mov
mov
in
dec
mov
and
add
ljmp
or
pop
xchg
pop
popa
or
int3
gs
xchg
or
and
mov
jno
jg
je
inc
cltd
cmpsb
popl
jmp
mov
pop
bound
inc
pop
int
jl
add
mov
xchg
int
repnz
cwtl
and
ret
pop
lret
cmpsl
loop
test
cli
jnp
shl
add
outsl
std
cmp
push
push
and
roll
xor
sub
outsl
mov
xor
inc
in
ret
push
xlat
mov
push
out
adc
fiadds
mul
adc
ret
cmpsl
daa
dec
mov
cmp
add
enter
stos
or
dec
sahf
xchg
mov
lods
insl
lret
push
mov
xor
push
fnsave
push
adc
sbb
jge
cmpsb
jb
mov
jne
mov
mov
dec
fldenv
scas
add
test
mov
setnp
add
sub
hlt
mov
pop
fnsave
lahf
les
mov
js
xlat
cmp
add
add
lret
pop
loope
out
push
mov
iret
arpl
iret
add
sbb
out
cmp
xlat
lcall
mov
pop
shrb
dec
popw
sti
cmp
and
mov
movsb
mov
lods
push
ja
or
pop
mov
add
sub
call
xchg
mov
call
iret
add
push
add
inc
add
xor
mov
lcall
mov
push
nop
aam
test
stos
xchg
mov
and
or
insw
mov
push
push
daa
mov
lods
adc
repnz
pop
arpl
push
popf
xchg
ficompl
insb
mov
loopne
div
jge
xorb
inc
cs
dec
xchg
mov
rorb
pushf
jo
inc
xchg
mov
pop
jnp,pt
outsb
jae
dec
sbb
mov
and
adc
in
mov
or
or
cmp
lret
jmp
mov
and
add
mov
or
add
add
xor
mov
hlt
shrb
je
sbb
out
jge
add
mov
imul
push
pop
jmp
dec
nop
add
mov
scas
jmp
ja
mov
adc
sub
cltd
and
cmpsb
je
push
aad
fadds
cmp
sub
mov
add
ja
sarl
lods
push
jp
fsubrl
insb
xorl
stos
scas
add
lahf
fldt
lods
dec
int3
mov
sub
stc
cld
sti
sbb
mov
and
imulb
push
pushf
pop
repnz
insb
xor
std
repz
fsts
call
inc
mov
add
shll
call
pushf
in
sbb
scas
sbb
and
sbb
stos
push
test
insl
xlat
and
push
push
adc
ret
cmp
sub
int3
out
loopne
movsb
and
sti
fbld
push
cltd
sub
cmpsl
dec
lods
addl
es
mov
stos
out
xorl
ret
out
test
scas
lahf
int3
adc
scas
jecxz
or
jecxz
outsl
pop
cmp
push
adc
roll
lods
xchg
dec
mov
push
loop
cmp
ja
imul
xor
add
das
dec
sbb
cmp
outsl
lret
cld
cmpb
ficompl
or
inc
xchg
jae
ja
push
xor
insl
push
out
push
adc
es
mov
jp
dec
sbb
fstp
cmp
cld
sbb
call
loope
mov
rol
xor
jno
aaa
rol
daa
test
sbb
fs
xor
mov
and
cli
dec
fisttpll
and
sahf
fs
rclb
fldt
mov
xchg
jne
lods
mov
cmc
aaa
pop
cmpsb
pop
in
pop
cli
gs
lret
repnz
in
leave
cmc
sub
adc
push
aam
or
xchg
hlt
fisubs
sub
dec
xorb
dec
out
repnz
xor
movsb
insb
or
je
add
jecxz
ja
xchg
dec
xor
fdiv
insb
repnz
and
adc
sub
pop
add
rorb
dec
scas
in
mov
mov
out
mov
and
test
xchg
xor
call
inc
fldenv
jle
jns
out
psrad
push
lock
lcall
scas
xchg
dec
sub
in
xor
lods
cli
pop
cmp
sub
test
pop
sbb
loopne
lret
popa
sub
aam
addr16
mov
or
pop
jp
mov
into
fistpll
into
and
je
das
jno
pop
and
push
pop
imul
mov
or
aad
pop
cmp
sahf
mov
ja
repnz
mov
jbe
cmp
mov
inc
cmp
mov
loope
mov
jp
dec
dec
push
and
xchg
jg
and
xor
cmpsw
jmp
aas
xchg
cmpsb
in
sbb
pop
test
daa
mov
hlt
scas
rcr
in
pop
fldcw
call
adc
int3
filds
xchg
adc
subb
lret
dec
mov
jecxz
stc
mov
dec
jno
sub
jo
out
adc
mov
stc
add
mov
pusha
sub
fsubl
fwait
mov
mov
aad
cmp
icebp
sub
in
lods
fs
pop
xorb
mov
lods
out
xlat
mov
xchg
mov
push
pop
add
stc
mov
push
mov
test
xor
les
fldenv
xlat
rorl
mov
cmp
mov
std
imul
xor
aad
dec
mov
addl
shrb
ret
jo
int
sub
cmpsl
sete
push
icebp
mov
shrl
or
mov
cwtl
fistpl
mov
out
mov
stc
cmpsb
pushf
pop
popf
in
dec
sub
out
xor
dec
invd
mov
ds
add
mov
sahf
dec
loope
adc
hlt
mov
jl
and
in
into
hlt
fstl
iret
push
into
or
mov
jbe
fbld
and
jg
test
xor
adc
je
inc
pop
test
out
mov
inc
sub
adc
and
cmp
test
mov
popw
add
clc
shrl
lock
movsl
loopne
adc
xchg
xor
aam
xchg
es
mov
sbb
aas
sub
movb
push
test
push
adc
pop
lods
adc
mov
xchg
mov
dec
mov
pop
ja
jecxz
add
pop
loopne
adc
add
mov
dec
or
test
add
mov
push
mov
stos
dec
xor
add
sbb
test
dec
movsb
add
lods
mov
pusha
testb
jmp
jl
mov
stc
ret
jecxz
mov
jns
hlt
dec
push
out
sub
pop
cmp
xchg
sub
popf
aad
insl
test
sub
imul
mov
add
push
bound
pop
or
mov
and
popf
fcmovbe
fistpll
mulb
and
fs
xor
xor
je
jecxz
cld
xor
in
xchg
sbb
sub
push
pop
add
dec
mov
cwtl
ret
adc
repz
gs
dec
mov
and
es
gs
std
pop
pop
out
pop
dec
aam
lds
lret
mov
fwait
jmp
cwtl
js
mov
daa
add
psadbw
in
addr16
mov
loopne
imull
mov
add
adc
dec
rcr
jns
sbb
stc
outsl
std
imul
pop
push
push
mov
decl
jne
pop
mov
and
cmp
mov
pop
faddl
call
xor
jecxz
adc
inc
popf
std
rolb
mov
fdiv
sub
dec
cltd
mov
dec
icebp
sub
lods
jns
dec
ja
jnp
bound
aam
in
fnsave
xchg
leave
ja
and
inc
jl
or
rcrb
dec
pop
dec
shll
nop
jnp
mov
and
imul
or
ljmp
mov
psubd
pop
std
fdiv
lea
pusha
cmp
aaa
fnstsw
outsl
enter
loope
es
stos
sub
mov
xorl
pusha
ljmp
pop
dec
repz
dec
stos
sbb
rcll
xor
push
sbb
mov
mov
xchg
sbb
push
rorl
jl
adc
iret
jns
leave
fwait
and
imulw
sub
sbb
mov
add
sub
mov
jbe
rol
fsts
in
nop
add
xor
mov
pop
push
mov
sbb
mov
divl
xchg
decb
or
sub
pop
add
insl
rorl
rcr
dec
enter
dec
push
and
adc
push
jnp
testl
ljmp
push
lods
sarb
faddl
mov
xchg
and
sbb
inc
lahf
jmp
mov
lea
lret
cmpl
int3
out
lret
lret
bound
int3
pusha
out
in
enter
adc
fisubl
lods
mov
icebp
je
mov
ret
mov
jmp
lret
fs
or
jle
scas
inc
loop
addb
jnp
inc
pushf
or
push
push
dec
adc
and
add
cltd
test
jecxz
sbb
jnp
jno
dec
adc
xor
jmp
insb
push
dec
jae
out
frstor
int3
mov
xor
mov
sahf
insb
test
imul
cmpsb
dec
shl
imul
rclb
mov
sbb
mov
enter
cmp
ss
push
mov
inc
add
cld
dec
sahf
cmp
popa
je
ja
push
mov
cmpsl
mov
pop
push
bound
repz
sbb
lret
adcb
pop
or
les
add
flds
out
cmp
mov
gs
in
push
mov
push
inc
into
mov
in
mov
mov
fcoms
fimull
pop
sub
dec
std
movsl
lods
icebp
sbbl
shll
pushf
test
jg
mov
jo
addr16
add
cmpsl
insl
sahf
xchg
imul
dec
or
lock
sub
push
cmp
inc
andb
push
fdivr
or
ret
mov
out
lea
adcl
or
cld
xor
inc
pop
pop
sahf
push
push
inc
movsb
add
jbe
sti
or
xchg
ficompl
insl
pusha
mov
cmp
leave
outsl
jne
adc
adc
xor
outsb
icebp
mov
js
fildll
icebp
xor
out
sti
inc
ja,pt
sbb
mov
or
sahf
ja
mov
sbb
test
add
jg
mov
lahf
jnp
mov
sub
gs
jae
push
mov
jnp
bound
bound
xor
pop
daa
xchg
jge
lret
push
fmull
mov
jnp
js
loopne
imul
push
jo
in
cmp
aaa
xor
push
cmp
add
jp
mov
fldcw
nop
push
cmp
and
mov
stos
and
movsb
loopne
xchg
popf
add
xor
ret
push
lcall
shrl
sbb
iret
lahf
emms
pop
mov
cmpsl
nop
mov
out
xor
lcall
xchg
pop
mov
in
add
scas
in
icebp
jns
jo
out
mov
addr16
sbb
and
gs
mov
sub
fsincos
repz
cmp
int3
mov
arpl
cmp
sarb
pop
aam
push
inc
outsl
cmp
mov
jae
fs
jns
mov
xor
fnsave
xor
mov
repz
cmp
xor
fcoml
outsl
lods
xor
int
shrl
xchg
mov
loop
aas
mov
stos
cld
dec
xchg
xchg
outsl
xor
push
jecxz
les
push
sbb
jmp
xchg
dec
and
sbb
xor
sub
push
repz
movsl
mov
aad
shrl
xchg
pop
mov
jo
and
pop
outsb
scas
test
mov
stos
jns
adc
pop
loopne
mov
outsl
jge
shll
mov
adc
mov
andb
call
jo
inc
and
jg
xchg
ja
push
cmp
xor
andl
ds
inc
loopne
and
xor
and
jle
data16
mov
ds
lds
out
jge
pop
test
test
push
or
stos
pop
test
xchg
out
jns
xlat
mov
mov
mov
adc
mov
sub
jmp
mov
imul
xlat
rorl
mov
fiadds
iret
enter
or
sbb
sub
push
add
xor
aaa
lahf
mov
movsl
jnp
cld
sub
mov
inc
pop
in
and
mov
lock
xor
cmpb
fmulp
out
pushf
insb
push
daa
or
pop
dec
std
pop
or
lods
decl
jne
test
dec
repnz
push
mov
sub
movsl
push
in
jae
icebp
fiadds
scas
sbb
add
out
rorb
xchg
fdivrs
inc
lcall
mov
jl
das
mov
dec
and
rclb
mov
mov
popf
fistpl
adcl
cmp
jl
push
inc
jg
pushf
xlat
adc
mov
psllq
pop
mov
pop
add
cwtl
roll
push
pmullw
push
scas
loop
mov
int
sbb
mov
addr16
bound
popa
jo
data16
push
pop
pop
or
movsl
cs
insb
lahf
xchg
leave
fildl
popa
inc
and
mov
movsb
ja
loope
int3
sbb
pop
mov
inc
mov
xchg
inc
fs
push
cvtdq2ps
in
mov
xchg
xchg
jnp
mov
xchg
dec
scas
or
aaa
push
fimull
push
inc
pop
fidivrl
push
imul
icebp
dec
pop
xorl
add
xor
test
push
pop
popa
ljmp
js
cmc
sub
dec
loopne
popf
mov
or
orb
jae
lret
dec
mov
xlat
jecxz
test
jmp
mov
cmp
lds
lock
add
add
jecxz
add
sbb
lods
das
jmp
inc
int
in
push
dec
aam
mov
shr
mov
dec
int3
lock
cwtl
inc
pop
or
rorb
sbb
adc
jle
sbb
std
inc
xchg
xlat
mov
xor
out
inc
jle
cmc
add
ficoml
jo
arpl
cs
stc
lock
fiaddl
cwtl
fimull
lret
call
out
nop
mov
dec
lods
xchg
pusha
mov
pop
push
bound
rcll
in
jge
insb
pop
mov
mov
imul
push
push
fldt
add
xlat
sub
mov
jmp
shll
push
fs
test
lods
daa
sub
jae
push
loop
push
sahf
pop
or
push
fsts
movsl
pop
andb
repz
mov
test
insl
cmc
sarl
sub
inc
mov
cs
sbb
and
pop
sbb
outsl
testb
out
in
mov
sub
sbb
mov
cmp
pop
push
xor
outsb
pop
fidivs
ret
add
mov
fiadds
outsl
cmp
ja
add
test
fucomp
cld
inc
sub
imul
shr
sub
in
std
out
push
arpl
in
mov
mov
addr16
xor
insb
xlat
mov
mov
cli
dec
jge
jns
sbb
outsb
pop
test
push
inc
ss
push
jns
in
xor
dec
les
pop
imul
lahf
test
inc
inc
add
dec
xchg
dec
icebp
sbb
pop
inc
scas
inc
and
sarb
nop
xor
dec
or
mov
and
mov
shl
in
xor
xchg
repnz
mov
sub
sbb
or
fs
inc
in
push
adc
sbb
xchg
cmpsl
push
outsl
jg
xchg
push
push
dec
xchg
in
dec
addr16
mov
hlt
fwait
mov
jle
test
data16
jae
push
sbb
rcrl
dec
xor
jl
jp
sub
nop
out
repnz
lahf
clc
insb
adc
stc
out
jge
pushf
xchg
mov
adc
pop
mov
rcrb
cwtl
movsb
jg
xor
inc
out
js
inc
push
add
mov
xchg
aad
pop
in
mov
add
movsl
pop
fsubrl
sbb
decl
cmp
mov
psubd
shl
pop
cmp
sbb
mov
out
mov
in
lahf
pop
rcrl
xchg
lcall
xchg
sbb
stc
std
sub
leave
add
mov
ljmp
or
outsl
pop
jle
stos
and
mov
jge
xor
das
xor
clc
jle
mov
lret
imul
cmp
mov
add
push
ret
jmp
sub
jecxz
pop
cwtl
pop
sbb
aaa
cli
jg
mov
and
stc
jmp
dec
inc
fnstsw
mov
push
pop
add
les
push
out
mov
cmpsl
pusha
enter
jb
outsl
dec
adc
das
lods
inc
cwtl
jb
adc
call
xchg
ret
cmpsb
popa
pop
inc
pop
notb
xor
mov
stc
out
and
xor
pop
jns
adc
add
pushf
repnz
lds
inc
call
cmp
cld
loopne
js
add
add
mov
jne
test
in
pop
cmpsb
out
or
adc
xor
pop
dec
ret
xor
inc
lods
das
jmp
jecxz
jge
mov
test
rolb
loopne
add
std
push
nop
push
jae
pop
push
ret
je
push
arpl
test
ljmp
mov
sarl
aad
gs
imul
jbe
push
rcl
or
xchg
add
xor
pop
xchg
rol
mov
addb
dec
xchg
pop
or
and
sub
cmp
sti
jle
sahf
lahf
cmp
ja
std
add
push
and
stos
xor
arpl
xchg
lret
enter
ret
pop
jne
es
inc
daa
inc
inc
cmp
push
rolb
fdivs
stc
aad
sbb
and
addb
jne
loope
add
cwtl
es
shl
and
jle
xor
je
adc
jnp
and
jbe
pop
and
int3
lds
fwait
in
std
stc
or
or
jp
adc
fistl
lods
les
testb
inc
sahf
repnz
mov
fcompl
cli
lods
xchg
dec
das
outsb
ror
and
fwait
shr
test
sub
in
test
aam
cmp
mov
pop
xchg
inc
jne
das
sub
and
inc
loope
jbe,pn
xchg
decb
roll
rcll
mov
jo
xchg
push
out
push
addl
sbb
pop
adc
dec
addr16
out
add
cmp
popf
cmp
in
in
or
cmpsb
and
insb
repnz
push
mov
or
pop
pop
lods
insb
xchg
xor
or
scas
mov
xor
ljmp
loop
and
jnp
pop
fisubs
loop
xchg
and
dec
push
inc
xchg
mov
xchg
daa
mov
or
lods
xor
rorb
les
lods
mov
sub
nop
push
dec
pop
loopne
mov
jl
js
dec
inc
cmpsl
pusha
fwait
mov
push
arpl
cld
cmp
out
pop
inc
jle
mov
mov
dec
daa
pop
mulb
stc
pop
pop
and
leave
and
mov
add
shlb
add
push
ret
inc
inc
dec
stc
cmp
leave
mov
js
jp
lock
sub
in
cmpsb
stos
jb
aam
pop
pushf
xor
imul
shlb
xchg
cmp
sarl
repz
out
push
lods
or
aas
negb
scas
jle
in
subb
cmc
data16
pop
in
xchg
das
dec
mov
cs
and
pop
cli
xchg
insb
rcl
out
int
lock
jecxz
cmp
sub
iret
hlt
pop
inc
mov
push
push
or
xchg
subl
iret
add
ret
inc
cwtl
in
scas
ss
mov
push
xor
fcomps
pop
outsl
pop
xchg
pushf
push
mov
xor
mov
or
jl
xor
cmc
lahf
test
mov
dec
rolb
shrb
arpl
cmp
push
ja
jl
lcall
outsl
inc
outsb
xor
dec
inc
rorl
xor
pop
mov
sub
jne
rcr
repnz
inc
or
lods
cltd
inc
fadds
ret
rcr
stc
dec
mulb
ljmp
pop
lret
push
and
lcall
out
pop
fdivrl
aam
inc
jmp
mov
push
test
or
dec
clc
mov
sbb
jne
lea
ds
hlt
mull
dec
or
dec
adc
cmp
sbb
enter
sahf
cs
or
jecxz
mov
dec
cmp
addr16
xlat
into
add
sbb
mov
fmull
mov
ja
pop
es
ds
xchg
and
xor
sbb
icebp
shl
pop
xor
idivl
fs
in
pop
jae
cmp
out
sub
xchg
jbe
inc
mov
scas
xor
aam
outsl
sahf
mov
inc
and
fildll
jbe
inc
in
icebp
jl
lods
push
mov
enter
pop
pop
insl
notl
test
xchg
and
push
xchg
mull
push
mov
lret
rolb
mov
stos
pop
lds
popf
rcll
push
mov
xor
xchg
idivb
xor
cmp
xchg
fsub
call
adcl
and
mov
clc
je
imul
add
shrl
jge
enter
jp
fidivl
jl
gs
loop
adc
mov
inc
push
out
add
loop
leave
dec
xor
push
jns
jo
mov
xchg
cmpl
jecxz
and
pop
mov
dec
shld
mov
aas
or
loope
lock
xchg
ret
push
rorl
aas
xlat
sarl
add
dec
push
push
mov
mov
push
cmpl
imul
sahf
jbe
nop
pop
sub
nop
shlb
aad
jmp
xchg
pop
cs
push
xchg
xchg
in
adc
push
fwait
mov
pop
xchg
lea
and
sub
lods
sbb
and
inc
or
stos
insl
data16
mov
pusha
ss
fildl
cwtl
mov
stos
pop
inc
xor
or
mov
inc
jl
sbb
and
mov
sub
dec
mov
mov
bound
dec
fs
jbe
lret
mov
mov
ds
dec
int3
jne
int3
jp
xchg
cwtl
arpl
mov
rcll
lahf
js
fwait
fnstenv
nopl
shr
fstpt
jbe
cmp
sbb
xchg
ret
sub
pop
je
mov
cwtl
sahf
dec
ss
ficomps
push
sbb
mov
les
jecxz
or
nop
push
lods
jle
lea
adc
mov
cmp
xor
xor
push
movsl
or
sbb
adc
out
icebp
mov
in
call
outsb
xchg
cwtl
aam
adc
or
push
jae
scas
sbb
mov
jg
rcrl
mov
adc
xchg
std
push
push
push
sahf
add
test
out
das
idivb
xchg
mov
push
xor
ftst
les
dec
out
aas
dec
sbb
mov
jb
sub
ficoms
push
or
mov
int3
inc
int
or
mov
xor
push
pop
gs
and
xchg
sub
pop
xchg
mov
pusha
stos
shl
and
enter
es
js
inc
sub
lcall
jnp
mov
jo
shll
lods
inc
jl
mov
popa
mov
icebp
stos
mov
lcall
mov
repz
lret
bound
inc
shrl
or
add
xchg
xchg
lock
jmp
movsl
xchg
fcomi
xor
pop
mov
movsb
mov
mov
std
icebp
jno
jb
outsl
nop
sbb
fisubl
jle
inc
movsb
xor
bts
iret
adc
pop
repnz
shll
xchg
insb
inc
add
mov
mov
pusha
and
jmp
xlat
mov
cmovo
inc
shlb
lods
das
xchg
pushf
sub
inc
xor
out
cwtl
dec
mov
xchg
mov
sbb
pop
bound
out
mov
mov
dec
push
add
jmp
aas
shll
cmp
pop
imul
idiv
icebp
in
pop
loope
inc
stos
or
cs
aas
cld
in
ss
mov
mov
pop
xor
jg
jmp
pop
mull
aaa
test
cmp
jb
iret
mov
jnp
aas
ret
add
mov
mov
jle
xchg
stc
cld
shl
inc
or
aad
sbb
in
pop
push
push
nop
cs
lock
imul
jb
nop
bound
push
jmp
push
jmp
add
xor
or
jp
push
insl
adc
in
call
das
push
mov
pop
ds
cmpsb
inc
or
sarl
loope
out
cmp
xchg
adc
in
jo
cli
mov
stos
in
xchg
jecxz
cltd
mov
adc
or
mov
pushf
movswl
psubusw
std
adc
fnsave
stc
jo
scas
lret
jbe
and
ret
mov
sbb
rorb
dec
in
shlb
xchg
aaa
dec
cli
inc
dec
xchg
popf
lock
pop
inc
aas
mov
call
insb
xchg
xor
lods
lods
push
addl
push
and
pop
addr16
jb
loopne
and
lahf
mov
cmp
mov
in
outsb
idivl
ljmp
scas
add
mov
push
push
sbb
pop
rcpps
pop
cmp
jbe
sahf
adc
and
arpl
sbb
sti
mov
xchg
gs
test
sub
outsb
pop
test
gs
sub
fstp
jae
sub
xchg
pop
jmp
jo
xchg
adc
and
fnstsw
jecxz
icebp
scas
jno
idiv
mov
cltd
mov
mov
mov
add
mov
lret
mov
or
cmp
cli
xchg
jle
or
mov
das
test
or
sbb
movsb
lds
shrl
mov
scas
pop
and
jne
das
jbe
insl
push
mov
dec
dec
pop
jno
mov
add
cwtl
ljmp
faddp
mov
cmp
xchg
dec
addr16
push
add
loop
pop
cmc
pop
imul
push
cmp
ja
cwtl
movsl
js
std
and
cmp
mov
popa
and
fstpt
test
xchg
pop
jge
mov
mov
push
pop
enter
push
fistl
dec
outsb
or
jb
adc
push
add
aaa
lahf
out
loope
loope
in
fwait
add
cmp
lods
insl
push
jmp
add
loope
addl
push
test
shrl
adc
sbb
out
in
lods
jp
aas
inc
aad
into
aaa
push
lahf
lcall
mov
test
clc
sub
fs
mov
pop
cld
outsb
sarl
aad
sbb
popa
je
jnp
mov
rorl
xchg
enter
jnp
push
jp
sbb
rorl
icebp
sub
pop
mov
xor
mov
pop
movsl
push
testb
call
sbb
imul
cld
fstpl
pop
lcall
sub
dec
aam
add
decb
sbb
hlt
dec
sub
ret
push
fists
stos
ljmp
cmpsl
test
std
ss
bound
sub
repnz
imul
dec
dec
lcall
inc
in
add
int
lea
pushf
xchg
repnz
out
sub
hlt
mov
mov
inc
fcompl
inc
push
out
testl
lds
xchg
sbb
xor
or
movsl
jle
mov
sub
cmpsb
test
push
ljmp
push
adc
enter
fucomip
and
mov
xorl
cld
inc
out
pop
cmp
insb
rolb
mov
mov
mov
mov
addr16
cmpxchg
lcall
loopne
sbb
iret
dec
or
ljmp
rcrl
lahf
dec
push
in
repnz
sbb
jle
push
sahf
jg
scas
sbb
adcb
xchg
lret
and
cmp
mov
xchg
pop
mull
movl
mov
imul
ret
inc
std
in
imul
pop
jl
test
bound
repz
imul
outsb
xlat
xor
mov
dec
fdivrl
shll
jo
outsb
adc
inc
rcrl
rcr
shrl
sbb
arpl
addr16
stos
cmp
mov
adc
mov
rcrl
xchg
rolb
xchg
imul
add
lcall
lret
ds
lods
out
fdivl
stc
mov
sub
enter
leave
sbb
mov
imul
ret
pop
loope
pop
lds
push
sbb
fstpl
xor
jecxz
mov
cmp
inc
or
mov
xchg
xchg
mov
mov
and
sub
outsl
xchg
mov
out
mov
mov
test
mov
add
pop
push
sbb
fcmovne
mov
fdivrl
dec
sbb
stos
mov
xor
inc
add
fisubrl
out
push
push
adc
fnstenv
xchg
jno
or
shlb
xor
daa
cmc
sbb
lds
in
jg
xchg
xchg
xor
inc
sub
mov
mov
shlb
and
mov
arpl
inc
jb
cmpsl
xchg
ja
dec
mov
sub
cmp
or
cmp
mov
in
adc
cmp
movsb
stc
jb
push
sub
jmp
scas
shlb
loope
call
xchg
mov
sbb
fs
xchg
sub
fstpl
es
or
ret
sbb
push
or
inc
test
sar
sub
js
fs
icebp
nop
lds
out
dec
imul
xchg
jmp
ja
repz
xorl
test
orb
lock
add
mov
sub
popa
stos
out
loope
repz
mov
jle
add
stc
fwait
xchg
repz
adc
mov
pop
add
cmp
repnz
mov
mov
lret
lods
sbb
mov
repnz
hlt
adc
in
or
xchg
movsb
pop
gs
repz
dec
nop
loope
xchg
imul
add
inc
out
sub
cmp
cmp
inc
inc
inc
mov
sbbl
jecxz
jp
leave
or
clc
stos
mov
mov
out
test
movsb
xor
sbb
dec
inc
icebp
test
cwtl
lret
xor
sub
sub
xchg
fwait
clc
fistpll
or
nop
xor
cmp
js
mov
inc
mov
pop
adc
or
pop
out
sahf
xor
jle
mov
test
or
sbb
sbb
aas
les
bound
insl
fidivrs
xor
xor
inc
cmp
mov
cmp
movsb
in
jnp
and
jns
mov
aad
push
pop
push
push
and
loopne
xchg
iret
pop
mov
and
inc
pop
sub
mov
pop
test
je
jl
mov
inc
loopne
adc
jge
shlb
jmp
and
fisttpl
ret
mov
cld
out
and
push
call
popa
int
or
les
xor
lea
mov
subl
add
cmp
mov
sbb
jo
movsl
cmp
jae
or
mov
enter
and
jecxz
outsb
add
add
pop
xchg
sub
mov
je
out
cmp
sbb
cmc
xchg
iret
jmp
jmp
mov
pop
hlt
mulb
mov
idiv
pop
add
sbb
xchg
or
loope
cltd
gs
cmp
addr16
test
lahf
push
dec
imull
shrb
xor
mov
lahf
inc
negb
lock
lcall
decl
add
jg
mov
icebp
ret
push
add
dec
jb
inc
shlb
rorl
cmp
rol
les
cld
cmc
test
sub
jg
jno
jg
fsubrl
add
or
push
xchg
add
rcrb
dec
cmpsb
icebp
inc
push
push
dec
xchg
xchg
mov
pusha
int3
inc
lods
mov
leave
and
xchg
flds
cmpsl
xchg
sbb
mov
lret
sahf
icebp
mov
jae
pop
and
mov
iret
push
mov
mov
ljmp
lods
shll
sbb
into
cmp
dec
fistpl
jb
icebp
dec
pop
pop
movsl
and
ret
adc
ss
cmp
shrb
stos
stos
push
xor
sub
mov
std
sbb
mov
out
gs
sarb
pushf
imul
pop
push
in
and
xor
ljmp
inc
jae
dec
xlat
add
iret
fmul
imul
enter
stc
out
fs
jl
dec
mov
jnp
stos
ljmp
jae
dec
fmuls
pushl
dec
xor
lds
dec
jne
call
lock
jge
and
mov
jno
or
add
jae
jns
jnp
xor
mov
into
xor
mov
jmp
dec
ja
mov
enter
andb
mov
sbb
mov
shrb
jae
out
add
lret
cmp
cmc
inc
or
outsb
cmp
mov
pushf
lock
mov
loope
cmp
jbe
push
adc
loopne
mov
leave
mov
test
insb
rcll
in
repz
cmp
adc
pushf
popf
rol
lods
lea
loopne
jae
enter
lcall
add
inc
int3
test
add
call
sbb
and
inc
lea
in
ficompl
stc
push
pop
lods
xor
std
xchg
xor
dec
dec
or
sub
push
mov
cmpsb
leave
jl
jg
int
mov
adc
xchg
fdivl
mov
xchg
cs
aaa
xchg
xchg
push
incl
clc
movsl
jmp
sahf
sbb
repnz
mov
mov
roll
imul
scas
cld
inc
add
test
ss
adc
pop
fdivrl
xlat
imul
add
pop
pusha
pusha
pop
ds
out
adc
or
inc
ja
lcall
movsl
sub
ret
dec
in
xchg
push
xor
insb
call
mov
pop
daa
or
pop
add
add
inc
mov
fisubrl
push
adc
ljmp
add
xor
loop
jns
cmpsl
xchg
mov
inc
call
pop
js
pop
loop
mov
mov
mov
xor
mov
push
movsb
es
pusha
inc
lock
inc
dec
cmp
daa
sbb
cmp
sbb
out
push
fbstp
in
fisubrl
ret
push
sti
es
cwtl
sbb
test
jno
cmpsl
xor
mov
sarl
mov
icebp
fidivs
ljmp
or
loop
add
xchg
sbb
xchg
inc
arpl
pop
mov
sub
int
lret
fptan
xchg
mov
movsl
jp
mov
inc
loopne
mov
add
xchg
lret
lea
pop
divb
je
ss
push
pop
pop
cmp
mov
test
outsb
pusha
push
iret
in
mov
in
pop
icebp
rorb
popa
negb
mov
dec
sub
fs
cwtl
enter
xchg
lods
or
mov
mov
add
add
ret
ret
testl
cmp
jg
outsb
mov
lea
pop
jl
mov
insl
pop
pop
mov
xchg
xor
enter
out
jmp
mov
sub
add
add
sub
xchg
xor
popf
sub
lds
adc
jle
sub
rolb
inc
jno
ret
xchg
ja
inc
sbb
jne
shr
sub
enter
rolb
add
idivb
in
push
mov
mov
loop
xchg
pop
movsl
mov
popf
xor
pop
mov
sub
mov
js
imul
test
popl
insl
rorb
lock
mov
je
dec
insb
mov
fidivs
add
icebp
sub
psubb
in
pcmpeqd
pop
xlat
xchg
or
add
loopne
lret
insw
inc
pop
int3
inc
lock
pushf
mov
add
jmp
or
and
sbb
cmp
push
test
mov
jle
add
push
iret
cmp
shl
dec
push
dec
mov
imul
cmp
push
add
sbb
add
stc
imul
xor
test
lret
and
dec
outsb
sub
mov
add
pop
fsub
imul
fldl
out
adcb
pop
imul
clc
jns
out
dec
in
mov
ss
in
xchg
aaa
loopne
add
rcr
icebp
push
push
mov
pop
jno
xchg
fstl
sub
mov
test
imul
sub
jne
cmp
xor
scas
out
push
aad
jecxz
lahf
push
icebp
dec
push
inc
out
mov
insb
movq
mov
fwait
stc
inc
pop
mov
jp
sbb
aas
push
scas
and
stos
iret
in
loope
lahf
cli
cmp
add
dec
test
push
jns
fmull
fstl
push
xchg
and
fdivp
roll
lahf
ja
lcall
insl
xchg
ja
sbb
pop
adc
shlb
jp
push
in
test
xchg
leave
outsb
gs
jp
js
ss
test
lea
inc
flds
test
inc
add
lock
fmull
in
and
shlb
stc
push
push
adc
rorb
outsb
mov
mov
add
test
adc
mov
loop
in
mov
and
jge
xchg
pop
insl
cs
sub
sbb
dec
or
pop
sbb
frstor
js
dec
xlat
out
jno
sub
aam
scas
fcomps
or
sub
sbb
outsb
daa
rcl
mov
ret
daa
sub
test
inc
adc
loope
push
and
hlt
cli
leave
mov
ja
or
and
xchg
lods
repz
into
jnp
cwtl
out
jecxz
and
mov
and
stc
pop
mov
lret
inc
clc
das
lahf
xchg
lods
dec
lret
outsl
lock
adc
testb
cmp
cmp
cli
sub
mov
lock
and
lods
xor
xor
scas
push
mov
sbb
xor
cmpsl
pop
adc
jp
das
rorl
les
cmpsl
int
rclb
ss
mov
cmp
add
enter
add
inc
adc
cmp
scas
dec
outsl
punpckhwd
dec
mov
pop
aaa
leave
and
mov
mov
dec
adcl
mov
in
add
call
dec
adc
js
push
subl
or
sti
mov
sbb
add
dec
mov
xor
dec
sub
jb
lock
mov
pop
test
mov
popa
mov
mov
xor
out
jp
iret
pop
mov
add
mov
imul
mov
out
popf
std
leave
xlat
xor
mov
mov
mov
cwtl
inc
xchg
rolb
aad
lock
int3
clc
outsl
loop
sahf
ljmp
sbb
divb
pop
inc
xchg
mov
je
icebp
dec
xlat
insl
xchg
in
dec
or
mov
out
iret
out
cmp
andb
pop
ja
or
add
push
dec
sbb
daa
popf
jmp
adc
adc
inc
add
cwtl
adc
pop
dec
mov
dec
repnz
and
call
lcall
rcr
movl
ret
ret
adc
xchg
outsl
push
mov
stos
outsb
ja
mov
jecxz
sub
jne
inc
xchg
add
hlt
sub
xchg
push
in
adc
pop
adc
mov
push
xchg
inc
jg
xchg
jae
cmp
inc
stos
add
jbe
out
int3
jl
jp
mov
hlt
mov
in
adc
and
xlat
cmpsl
lods
pop
add
arpl
ret
ja
test
leave
jbe
loopne
ret
mov
push
lods
push
pusha
jb
std
fs
jmp
sub
mov
out
cs
loopne
jns
out
test
push
add
repnz
cmp
sub
mov
sbb
inc
dec
sbb
dec
cmp
cmp
out
shrl
inc
pop
lods
mov
mov
inc
sbb
push
push
inc
test
mov
pop
pop
or
cwtl
icebp
fmuls
scas
lahf
jge
pop
orb
push
fisubl
rorl
sub
cmp
lock
add
add
jle
push
hlt
add
dec
not
arpl
stc
or
push
in
mov
mov
cmp
je
aaa
adc
add
lds
or
popa
outsb
push
jecxz
inc
sbbl
inc
sub
popa
dec
mov
ret
aad
rorl
push
or
jb
bound
mov
adc
jmp
sti
xor
xchg
push
rclb
test
test
stos
sbb
into
fdivl
jne
nop
push
cwtl
mov
shlb
mov
std
push
inc
cwtl
movl
cmp
sub
inc
movsl
sub
lcall
inc
dec
pop
pop
stos
sbb
adc
lret
mov
ja
cmp
loopne
jle
in
mov
add
adc
fmul
sbb
sbb
idiv
mov
push
in
and
fs
dec
cwtl
sbb
icebp
or
push
pop
fs
xchg
add
sub
les
xor
add
cmp
push
push
stos
mov
jp
mov
pop
jae
sbb
test
idivl
mov
pop
pop
or
hlt
mov
add
rorb
sub
push
ljmp
adc
mov
int3
sub
mov
ljmp
add
add
fistpll
sub
and
xchg
lret
outsb
inc
inc
aam
enter
lcall
bound
lret
and
mov
sub
les
pusha
adc
fadds
aaa
mov
ret
clc
fistps
int
pop
repz
mov
filds
xor
pop
pop
mov
add
in
or
stos
into
repnz
jle
jle
jmp
popa
adc
in
sbb
cmpb
sahf
dec
mov
outsl
orb
pop
mov
mov
scas
mov
dec
and
jmp
xor
in
fsubrs
mov
stos
movsb
subl
push
xchg
imul
insb
into
xor
inc
cwtl
xchg
sub
or
mov
push
and
push
es
es
loope
inc
pop
imul
scas
sub
cli
sbb
sbb
test
pop
aad
jl
push
cmp
sub
lcall
movsb
std
fcmovb
outsl
lcall
jno
nop
cltd
je
rorl
in
xorl
negl
cld
pop
idivb
xchg
adc
fst
aam
movsb
dec
lds
push
adc
cmc
adc
cli
sbbb
mov
mul
mov
mov
adc
jno
hlt
cli
inc
testl
icebp
jae
in
imul
stos
mov
loopne
sahf
cltd
jne
nop
mull
in
push
aas
pop
push
and
or
roll
dec
push
in
sbb
add
cmp
jle
mov
mov
cltd
cmp
into
adc
lods
cltd
ror
push
aam
fistps
aam
lods
mov
lret
inc
adc
sub
cmpl
push
mov
les
fwait
and
clc
into
adc
sub
sar
inc
test
mov
lea
aas
fcompl
repnz
outsl
loop
mov
pop
mov
lret
in
frstor
repnz
mov
sbb
clc
cmp
mov
enter
inc
mov
cli
bound
dec
je
test
pop
jecxz
mov
xor
int
aaa
mov
imul
inc
cs
pop
mov
cmp
xlat
inc
or
xchg
push
test
sahf
sar
stos
xchg
mov
rorl
out
fiadds
push
jmp
or
mov
add
add
adc
call
int
imul
pop
xchg
iret
inc
icebp
adc
cli
testb
imul
and
xchg
iret
push
stos
sbb
imulb
xorb
push
mov
loop
loop
std
jg
cltd
dec
jae
cmp
loopne
jbe
aad
and
inc
jp
push
push
aam
nop
or
mov
mov
inc
cli
das
inc
dec
lret
int3
std
cmp
mov
arpl
mov
jecxz
jbe
jp
mov
jnp
xchg
cld
fcom
rorl
leave
push
adc
fsubr
out
pop
dec
xlat
rolb
loope
dec
subb
mov
xchg
outsl
je
sti
push
cltd
push
or
lret
inc
popa
out
rep
mov
stc
pop
mov
add
pop
outsb
push
xchg
decb
sub
mov
mov
mov
ret
int
out
mov
hlt
in
inc
xor
lds
imul
mov
mov
mov
pop
sbb
mov
clc
movb
sbbb
push
sbb
and
or
into
gs
movsb
cmpsb
ror
mov
stc
test
int3
push
shl
push
enter
xchg
sbbb
cmp
and
cmp
jmp
shl
stc
and
ljmp
sub
scas
and
iret
dec
scas
cmp
loop
inc
ss
push
xor
lods
inc
test
dec
or
mov
mov
push
popf
push
test
out
pop
and
or
aaa
cmpsb
mov
adcb
mov
mov
dec
pop
push
outsb
and
leave
pop
inc
lahf
ss
push
loopne
jmp
jl
xlat
ret
mov
mov
jno
dec
adc
in
stos
jge
rorl
and
push
mov
lahf
pop
aad
nop
into
inc
jecxz
push
pop
mov
add
mov
pop
jnp
pop
hlt
loop
movd
push
popf
popf
xor
pop
scas
lea
dec
mov
mov
add
dec
sub
test
adc
sub
mov
pop
in
cmp
sbb
push
or
inc
mov
xchg
outsb
cmp
repnz
arpl
into
mov
mov
sbb
or
outsl
inc
mov
cmp
push
mov
mov
mov
sbb
nop
push
stos
sub
xchg
inc
repz
add
rol
cld
fdivr
das
pop
arpl
sub
jbe
inc
mov
push
pop
cmp
bound
test
cwtl
lret
mov
pop
movsl
pop
insl
dec
mov
rcll
test
cli
daa
pop
test
and
sbb
bound
and
dec
popa
jle
fsubp
inc
pop
cmc
sahf
cmp
inc
mov
mov
jle
push
and
pop
jbe
sub
stos
movsb
enter
mov
sbb
lock
cli
les
mov
in
mov
iret
or
push
sahf
inc
leave
mov
leave
pop
mov
ja
cmp
xor
in
fnstsw
push
inc
repz
pop
inc
jne
and
pop
aas
jecxz
out
jno
mov
into
bound
ja
inc
fsubr
add
scas
jae
in
mov
test
int3
loope
das
or
je
or
pop
add
inc
inc
inc
repz
push
pause
les
mov
test
loopne
aaa
in
dec
add
subb
mov
jae
cmpsb
mov
sahf
push
es
out
sbb
ds
push
sub
adc
cmpsb
inc
out
sbb
mov
mov
lods
jae
mov
or
ret
aaa
repz
in
clc
and
inc
pop
sbb
cmp
aad
aas
and
ds
dec
les
outsb
and
push
jo
jbe
sub
jmp
dec
in
xor
pop
testl
jge
pop
loop
fisubs
mov
jp
cmpsl
call
ja
scas
rol
pop
mov
adc
fnstsw
aaa
cmp
jae
add
sub
add
xchg
int
xchg
sbb
pop
or
xchg
cwtl
sbb
aad
xor
int
bound
pusha
pop
idivl
icebp
bound
clc
adc
data16
cmc
subb
sbb
cld
dec
scas
pop
and
xchg
pop
and
leave
aas
sahf
in
js
jns
mov
fcmove
xchg
jp
dec
push
dec
sub
or
sub
call
mov
fwait
mov
add
fidivrs
mov
jge
mull
mov
push
or
out
insb
subb
sub
hlt
iret
pop
lock
mov
popf
pushf
push
dec
dec
cmp
adc
mov
subb
inc
dec
sbb
add
dec
sub
lods
push
test
cmp
cld
lock
cltd
pop
into
and
cmp
nop
push
fldcw
movzbl
sub
add
lahf
cmc
pop
inc
std
aad
dec
std
sub
gs
xor
and
sub
mov
nop
outsb
scas
out
sbb
test
xchg
push
lret
jecxz
ds
xor
cltd
cli
shrb
fcmovnu
push
xor
jae
sub
pop
dec
inc
lods
in
ljmp
rcl
test
mov
decl
inc
jl
rclb
pop
fwait
sub
cmpsb
fmuls
sub
addb
cmp
nop
jne
sub
hlt
hlt
stos
sarb
in
imul
arpl
mov
std
pop
jns
xchg
mov
pop
and
add
pushf
pop
jmp
xchg
int
push
mov
lret
dec
push
mov
pusha
mov
cmpsl
sub
sbb
jae
cmpsl
aam
mov
jge
push
int3
jp
fucom
movsb
subb
pusha
inc
ja
lds
sub
xchg
add
lods
xchg
roll
mov
in
jmp
clc
or
pop
hlt
dec
pop
xlat
xchg
inc
jge
sbb
xchg
sbb
pop
sbb
xlat
jo
and
adc
xchg
in
fistpl
fcomps
cmpl
or
mov
jno
or
das
dec
cltd
jne
or
jbe
jmp
lock
cmp
mov
push
push
cmp
clc
mov
cltd
cmc
push
and
mov
subl
and
jge
mov
fs
in
lret
pop
and
xor
fisttpll
xor
cmpsb
out
push
pop
out
cmp
jbe
loop
loop
push
frstor
mov
icebp
cltd
test
jb
ret
sbb
xor
and
add
lret
jg
xor
shll
mov
cmpsl
imul
sbb
lea
xor
repnz
xor
mov
add
add
jo
mov
and
out
mov
dec
adc
jecxz
popa
push
cmp
fistpl
hlt
sub
push
rclb
cld
add
or
in
fsub
adc
mov
inc
imul
xchg
out
test
jg
sbb
shr
enter
sub
mov
lahf
xchg
shlb
dec
mov
push
push
dec
shrb
enter
imul
cmpsb
ljmp
stos
insl
lods
jp
lea
mov
cltd
mov
jmp
mov
xor
xor
insl
test
pop
pop
xor
pop
adc
adc
or
je
jnp
cmp
clc
mov
cli
dec
xchg
or
mov
out
faddl
sti
popa
lods
pop
mov
mov
pop
xchg
xchg
jl
loope
out
xchg
mov
test
dec
xor
inc
stos
inc
mov
dec
fisttpl
clc
and
sti
push
enter
outsb
push
mov
jge
xchg
pop
es
repz
aad
leave
xchg
push
jne
pop
addr16
mov
push
sti
add
and
je
xchg
jge
sbb
inc
adc
mov
adc
pop
cmp
call
imul
cld
out
fs
sbb
mov
push
pusha
nop
inc
mov
das
add
xor
mov
test
xor
xchg
pop
adc
push
jno
loope
adc
mov
mov
aas
std
mov
add
jle
test
shl
add
cmp
popa
cmp
outsl
mov
call
test
rcrb
mull
hlt
mov
sbb
cmp
pop
repnz
test
adc
sbb
fwait
cld
mov
xor
cmpsb
add
push
dec
cmpsb
and
cwtl
movsb
js
popf
mov
mov
cmpsl
jmp
push
and
mov
mov
cmpsb
shlb
dec
xorb
mov
jle
dec
fstp
xchg
jmp
add
lods
iret
filds
mov
add
sti
shll
pop
adc
sbb
cld
popa
rol
cmp
lret
inc
and
cmp
sub
jbe
xchg
filds
loope
sbb
imul
xchg
aaa
mov
test
stc
add
push
mov
xor
test
sahf
ds
repnz
js
stc
push
mov
xor
mov
imul
add
je
push
jl
scas
push
or
sbb
cmp
jne
jg
cmp
enter
sbb
imulb
loope
imul
leave
call
add
std
mov
cli
scas
imul
ret
int3
insl
cmp
pop
fwait
cmc
pop
or
inc
and
xchg
mov
mov
loopne
out
call
rol
and
rorl
bnd
int3
sbb
in
cmpb
cmpsl
push
stos
adc
or
xchg
daa
loop
push
cmpl
fldt
into
adc
aam
pop
daa
or
cli
and
sbb
icebp
lret
std
xor
mov
stos
mov
loope
out
push
arpl
add
rolb
stos
filds
cld
stos
pushf
and
js
data16
pop
mov
inc
add
in
cmp
sarb
ja
mov
adc
repz
mov
ficomps
or
push
pop
mov
xor
aam
mov
inc
mov
pusha
mov
rolb
mov
adc
sub
clc
or
daa
dec
jno
aam
pop
jl
shlb
daa
mov
fs
mulb
stos
sbb
inc
mov
imul
jp
push
inc
arpl
xor
mov
push
push
push
mov
fists
movsb
rorl
bnd
fldcw
pop
or
cmc
xor
es
mov
inc
idivb
repz
mov
int3
aaa
cs
xchg
std
pop
pusha
sti
xchg
fistl
jecxz
fdiv
mov
dec
mov
cli
push
pusha
pop
dec
pop
and
lcall
dec
add
jnp
and
dec
cmc
div
inc
sub
dec
jne
adc
inc
popa
fcmovnu
outsb
sbb
xor
push
xor
imul
repz
scas
lret
dec
rol
movsb
add
aaa
and
adc
cld
push
lods
shl
jp
dec
inc
inc
pop
and
je
aas
loope
ffreep
adc
adc
add
xchg
jmp
fistps
mov
and
lret
loope
insb
sub
out
movsb
and
test
sub
sbb
mov
repnz
fsubrs
pusha
push
in
lcall
push
arpl
adc
push
fs
lcall
sub
scas
inc
xchg
mov
ljmp
push
cwtl
mov
fsubrs
test
int3
in
rorb
pop
mov
fs
dec
insl
fisttpll
jne
adc
lret
aaa
push
mov
mov
sub
imul
or
int3
ss
sub
cmp
add
add
pop
mov
int3
xor
pop
xchg
in
mov
sbb
addr16
out
mov
cmpsb
adc
test
dec
cmp
cmp
out
movsl
mov
loop
test
mov
negl
mov
push
sub
filds
rcrb
nop
xchg
imul
push
ret
lret
popa
push
push
insl
sarl
and
in
test
cmp
xor
mov
stos
cs
cs
fcomi
iret
add
sti
xchg
test
xor
subb
pop
pop
mov
sbb
scas
inc
sub
mov
mov
xor
mov
inc
cmpsb
xchg
ret
outsb
or
push
cltd
shrb
daa
imulb
gs
cld
sub
add
hlt
jne
mov
nop
jle
movsb
xchg
sahf
jbe
dec
rclb
clc
decb
roll
jns
scas
outsb
jl
xchg
or
xor
aaa
push
icebp
jo
mov
mov
int
add
mov
mov
sbb
pop
ret
mov
pusha
jns
pop
out
dec
nop
push
nop
loope
add
ret
les
ds
leave
sbb
add
add
inc
stc
adc
ja
test
and
sbb
aam
xchg
cmp
pusha
add
mov
stos
rcrl
fisttpl
pop
sarl
rcr
fsubl
popf
aaa
jecxz
outsl
ret
adc
pop
loope
pusha
pop
int
inc
mov
imul
test
xor
sbb
sbb
mov
jp
rcr
sbb
mov
jo
pop
inc
mov
adc
xor
in
arpl
dec
out
clc
mov
aas
call
push
mov
push
sbb
inc
jns
aas
std
test
mov
lcall
inc
add
arpl
lcall
lret
fs
test
dec
add
sahf
sarb
sub
sbb
mov
xchg
pop
jb
sub
cmp
cli
js
sbb
mov
inc
das
insb
into
mov
loopne
adc
push
mov
mov
ss
mov
pop
nop
lea
dec
xchg
and
iret
push
cmp
cld
xchg
clc
test
addr16
xchg
jg
icebp
mov
xor
movsb
jecxz
push
cs
and
pop
out
dec
stos
loopnew
push
test
push
setle
addl
jno
dec
pushf
xchg
psrlq
cmc
je
ret
lret
popa
pop
pop
lock
out
adcl
rorl
lret
mov
insb
test
dec
arpl
lods
pop
jle
xor
add
lea
add
testl
mov
xchg
push
inc
jle
testl
lret
lret
icebp
jae
mov
test
push
cli
daa
hlt
mov
lods
movsl
pusha
enter
adc
testl
jle
inc
cli
and
sbb
rcr
mov
dec
lock
jnp
dec
mov
repnz
rclb
dec
sbb
gs
jl
adc
js
movsl
add
insl
push
mov
push
push
daa
dec
stos
xchg
outsl
xor
outsb
sbb
xlat
mov
mov
mov
and
mov
jne
test
mov
fistpll
dec
add
dec
inc
adc
in
fcoml
repz
xor
bound
cmp
aas
pop
jbe
xchg
stc
bound
mov
pop
sahf
icebp
outsl
inc
mov
push
stos
out
jl
or
lods
repnz
inc
inc
nop
jno
inc
jge
ror
sbbl
or
mov
fdivrl
cwtl
stos
jp
push
sti
push
popf
pusha
imul
inc
push
sahf
mov
jb
jae
xor
cmp
pop
or
xor
jb
cli
lcall
and
dec
or
xchg
push
faddl
add
sub
mov
repnz
jmp
sbb
sbb
xlat
outsl
arpl
add
aas
or
aas
jmp
sub
add
push
insl
xchg
and
pop
adc
add
sub
mov
or
push
arpl
sub
outsl
test
push
xchg
push
insb
mov
inc
rcrb
dec
and
jge
cmp
sub
add
loopne
call
cld
clc
xchg
adc
inc
in
jp
adc
dec
push
and
adc
adc
dec
mov
test
jb
test
inc
xchg
stos
es
mov
cmp
add
ret
xor
iret
in
or
fadds
inc
rcl
pop
pop
test
shl
mov
mov
inc
jmp
popf
ret
ror
xchg
rorl
sbbb
jge
into
sbb
rcrb
push
mov
cltd
pop
aam
push
jo
cmpb
mov
out
inc
icebp
rclb
add
inc
jle
push
and
push
repnz
adc
mov
in
clc
cmp
jmp
jl
pop
xchg
mov
pop
lahf
mov
lods
dec
pop
pop
dec
xlat
adc
aas
test
iret
psraw
xchg
mov
and
test
int
mov
xor
stos
cmpsb
out
pop
push
mov
mov
mov
cmpsb
cmp
xor
dec
dec
mov
dec
and
insb
sbb
incl
pop
in
pop
xchg
mov
out
adc
add
fucom
fisttpl
mov
or
mov
xchg
xchg
push
dec
stos
inc
fs
cmp
push
adc
jmp
xlat
cmp
stos
mov
add
and
stc
add
hlt
stc
push
mul
pop
test
cltd
xor
imul
mov
cmpsb
stos
outsl
and
mov
test
and
adc
std
dec
icebp
adc
faddl
popf
cmp
pop
and
mov
sbb
mov
dec
inc
call
shrl
mov
bound
mov
sub
loopne
out
std
jb
jae
repnz
pop
fs
loopne
or
adc
add
sub
insb
loope
out
call
test
outsb
clc
adc
ret
cmp
aas
and
lahf
stos
cmc
aas
mov
mov
sbb
es
xor
mov
fmull
pop
jmp
sub
cmp
lods
push
sbb
or
sub
popf
js
or
test
mov
insl
push
int
fs
adc
imul
cmpsl
sbb
add
bound
pop
out
lret
cmpsl
and
mov
lret
and
stos
mov
mov
or
loopne
cmp
sub
gs
mov
mov
mov
mov
cmp
in
pop
sbbl
popl
mov
and
popa
iret
test
and
sub
pop
xchg
jbe
push
repnz
add
pop
pop
push
ret
dec
cld
jp
xchg
and
xchg
std
fildll
xchg
addr16
sub
cmpsl
pop
sub
sbbl
leave
sbb
push
xor
xor
pop
aas
xor
and
inc
repz
xchg
mov
lods
daa
outsb
cmp
pusha
dec
adc
test
outsb
cmpsb
adc
jae
js
cmpsl
movsb
jae
lock
into
gs
loop
mov
test
jnp
scas
xor
sub
ss
fwait
movsl
ret
sarb
imul
inc
xchg
mov
icebp
outsb
jae
clc
daa
in
std
mov
out
sbb
in
xor
stos
enter
jge
stos
fildl
dec
xor
shlb
test
out
adcb
ret
test
inc
add
or
les
sub
orl
xor
int3
adc
jo
pushf
xchg
or
pop
cli
outsb
pop
sub
mov
call
sbb
add
xor
cmp
mov
clc
mov
lret
push
push
out
mov
mov
adc
fcomps
btsl
jle
cmp
sub
aad
xchg
adc
inc
fcoml
sub
inc
and
les
sub
sub
aaa
push
mov
std
dec
xor
dec
mov
fs
xor
add
add
int3
xlat
loopne
cmp
pop
add
mov
jl
leave
or
pop
xor
cmpb
inc
cmp
pop
adc
push
cmp
sbb
or
test
adc
mov
push
pushf
push
and
push
and
lret
arpl
jle
push
push
pusha
ret
xor
mov
cmp
dec
jmp
xor
scas
mov
leave
mov
and
cld
repnz
pop
mov
push
mov
shlb
sbb
add
xor
or
mov
rcll
inc
xor
call
mov
outsl
sti
inc
mov
mov
pmuludq
dec
popf
out
pop
cmp
pushf
arpl
and
ret
inc
add
cmp
ljmp
ja
out
imul
outsb
mov
aam
push
xchg
shlb
or
push
in
xchg
sbb
popf
and
mov
cli
sti
in
add
inc
and
test
stc
push
ja
out
fimuls
es
loop
jp
movsl
mov
fdivrl
ja
sbb
iret
je
rol
cmpsl
test
xor
mov
sub
mov
aas
fildl
dec
sub
js
cld
cmp
nop
xchg
inc
arpl
add
pop
loop
jle
mov
stos
or
jmp
jbe
in
popa
push
dec
pushf
mov
mov
insb
and
xchg
mov
rcr
dec
fwait
add
push
xchg
in
sub
mov
cs
ds
adc
sbb
sub
mov
cltd
add
out
inc
es
pop
jne
into
movsb
dec
mov
pop
cmp
sbb
fisubrs
push
addr16
out
mov
aas
inc
mov
and
cwtl
push
ret
mov
ret
add
or
add
pop
pop
pop
ja
shrb
mov
lds
adc
das
jnp
sub
outsb
shrb
fwait
dec
mov
std
ds
pop
add
arpl
xor
les
sbb
aam
mov
cmc
je
cmp
sahf
fsts
fcmovbe
mov
test
mov
popf
add
data16
xchg
dec
adc
xor
sbb
nop
push
dec
mov
movsl
repnz
adc
mov
sub
cmp
pop
das
sarb
into
and
je
or
sub
cmp
mov
jle
and
xchg
repnz
jmp
shll
ss
movl
adc
lds
mov
push
and
fwait
and
pop
shr
roll
repnz
jp
out
push
jo
pop
sti
test
test
stos
adc
mov
outsl
xchg
mov
jecxz
shll
mov
mov
bswap
mov
or
aad
xchg
int
and
xor
push
mov
mov
mulb
xchg
mov
pop
pop
mov
or
jnp
xorb
push
adc
test
sbbl
adcl
js
adc
in
pop
adc
and
js
mov
nop
sbb
in
inc
addb
sub
xchg
push
push
or
push
adc
je
push
repz
adc
push
hlt
sub
loope
repnz
icebp
pop
cs
push
outsl
inc
mov
into
xor
inc
filds
mov
sahf
mov
adc
mov
fldcw
add
add
lret
insb
fiaddl
mov
xor
cli
mov
loope
xchg
cmove
push
mov
jno
xor
mov
xor
lea
add
push
fs
mov
sbb
push
sahf
insl
and
mov
push
push
and
xor
stos
cmp
sbb
popa
sbb
test
xchg
mov
pushf
and
aad
fdivs
mov
jb
mov
fs
jb
cmp
fwait
scas
and
xchg
mov
imul
dec
cmp
jg
lret
enter
movsb
je
mov
pop
push
add
sub
subl
jl
wbinvd
lret
dec
jae
sub
sub
cmpsl
out
clc
outsl
inc
in
lds
or
mov
inc
mov
jne
add
sbbb
mov
clc
aas
sub
testb
xlat
cmp
add
test
mov
xor
setl
xchg
int
fdiv
pushf
orb
add
jbe
and
mov
shll
xchg
aad
es
fwait
or
xor
pop
jecxz
mov
xor
xor
mov
mov
je
push
int
sub
scas
adc
popa
cmp
sub
mov
lret
pusha
sti
std
out
mov
cmp
jle
jl
mov
pushf
xor
cli
ret
xchg
fs
lock
sub
enter
jle
jb
ljmp
or
jns
jo
hlt
scas
lret
sahf
push
loop
jge
or
test
cmp
rcrb
clc
mov
push
les
mov
inc
rcrb
movsl
out
push
push
xchg
leave
xchg
mov
or
cli
push
inc
push
ret
mov
jns
insl
pop
dec
cmc
ffreep
outsb
pushf
xchg
pop
cmc
mov
sbb
imul
or
xor
sub
jp
push
xchg
dec
cmp
sub
in
inc
push
std
mov
cwtl
xor
lret
jg
mov
stos
mov
mov
push
cmc
jcxz
lods
test
insb
xlat
xchg
mov
jne
push
mov
pop
sub
cmpsb
sahf
mov
hlt
add
cmp
scas
addr16
or
in
mov
mov
cmp
xor
and
xchg
xchg
dec
cmpsb
xchg
mov
ja
leave
jb
or
and
push
add
sub
inc
jle
xor
cwtl
and
mov
movsl
inc
loopne
xchg
mov
xor
popf
push
into
shll
repnz
aam
mov
push
lret
adc
insl
dec
gs
in
hlt
stc
fwait
jae
cmp
arpl
aas
in
xor
pcmpeqd
outsl
cli
mov
jb
mov
xor
xchg
push
lret
add
mov
fdivl
push
dec
xor
sub
and
pop
adc
js
ljmp
jae
mov
hlt
mov
and
jnp
test
or
sub
dec
dec
popf
and
fnstcw
lahf
repnz
iret
jne
push
divl
insb
notl
sbb
dec
sbb
jnp
dec
cmp
xor
rcrb
add
lret
lret
in
inc
pop
outsl
jne
sub
cmp
movsb
inc
xor
sbb
enter
cmp
jl
and
sbb
xchg
adcb
cmp
testl
xor
xor
daa
cwtl
push
lret
stos
pop
rcrb
mov
in
push
insb
sbb
fimuls
es
pusha
in
adc
cltd
mov
mov
push
xchg
movsl
xor
ficompl
enter
stc
mov
inc
cmpsb
mov
or
sub
sbb
sub
test
lret
fs
ja
out
mov
jb
loop
pushf
andl
adc
mov
mov
adc
push
push
push
inc
push
pop
lock
and
data16
les
or
shlb
xchg
cmpsb
vmulps
adc
inc
cld
sub
mov
loope
sbb
sbb
repnz
inc
stc
pop
ss
ret
jmp
insl
xchg
jne
add
mov
pop
xor
dec
pushf
mov
outsb
xchg
xchg
xor
mov
sbb
shrb
sbb
and
sbb
mov
and
ss
sub
dec
or
imul
push
pop
jne
gs
cmpsl
xchg
std
ret
test
xor
daa
scas
cmp
scas
jb
pop
aam
and
out
xchg
jp
sbb
jns
les
movsb
pop
inc
mov
jmp
cwtl
xchg
mov
push
in
jl
pushf
loope
mov
cltd
adc
mov
daa
mov
cmpsl
imul
ljmp
pop
xor
addl
test
xor
aad
scas
imul
addr16
lahf
cmp
push
add
pop
imul
movsb
mov
xor
push
adc
mov
push
cltd
loope
aas
jbe
jl
mov
lods
stos
fiaddl
sub
jne
xor
stos
ljmp
repnz
dec
fldenv
mov
scas
insb
scas
push
mov
daa
addb
dec
fcompl
adc
fidivs
mov
cmp
or
adc
xor
movsb
rcl
stc
add
push
sti
fcomps
xchg
pop
arpl
push
lea
fdivrp
je
popa
pop
cmp
adc
pop
mov
lcall
or
or
jl
dec
aas
jp
xchg
mov
mov
add
add
inc
lahf
gs
lret
popa
in
in
mov
cli
lcall
test
icebp
push
dec
mov
call
rorl
cmpsl
jb
rcll
or
lcall
inc
cli
repz
inc
lcall
jle
sub
mov
add
scas
flds
fisubl
sbb
jl
jo
jg
cld
pusha
pop
movsb
iret
dec
mov
sub
add
negl
xor
movsb
mov
xchg
dec
pop
xlat
add
mov
mov
shlb
adc
adc
adc
mov
iret
xor
adc
aad
sub
outsl
cltd
mov
dec
xchg
out
loopne
or
scas
js
fisubrl
push
clc
inc
add
fcoms
cmpsl
pushf
sarl
or
fwait
mov
out
push
dec
test
dec
push
lahf
dec
inc
jmp
sub
and
push
push
cmp
pop
fucomi
adc
mov
outsl
pop
sbb
and
pushf
pop
jno
add
ret
mov
add
add
rcr
xchg
pushf
mov
jecxz
into
pop
sbb
outsb
mov
test
push
push
sbb
mov
push
sub
and
sub
or
and
decl
dec
int3
or
fs
cmpsb
adc
push
sub
cld
adc
popf
jl
pushf
orl
adc
xorb
scas
addl
push
add
aam
xchg
push
ljmp
jle
or
out
and
or
mov
cmp
nop
adc
out
inc
ficomps
scas
test
scas
or
xchg
sbbl
out
je
mov
cmp
lahf
icebp
ret
xchg
mov
fistpll
mov
or
inc
leave
push
pop
or
jg
pop
nop
pushf
dec
xchg
out
hlt
stc
mov
jp
mov
mov
int
push
movsl
dec
push
stos
dec
xor
fnstenv
add
cli
pop
out
or
inc
sti
stos
sub
jg
lcall
cwtl
cs
cmp
push
cmp
sub
push
push
cmpsl
insl
in
adc
sar
test
mov
mov
je
add
cmp
xchg
or
inc
mov
sahf
lds
cmp
jle
inc
xlat
cld
sahf
out
push
lock
xchg
sub
stc
sbb
or
jbe
xor
fildll
lret
xchg
in
sub
jmp
std
mov
dec
xor
mov
sbb
cmc
or
mov
inc
sbb
push
dec
mov
jp
adc
push
fwait
mov
stos
jle
popa
push
sarb
push
add
xlat
dec
sub
sub
iret
fimuls
cld
fs
mov
js
mov
xor
cmpsl
cmp
mov
rorb
jecxz
test
or
jl
repnz
andl
pop
inc
adc
inc
adc
push
loop
pusha
xor
sub
jg
jbe
decb
pop
adc
adc
sahf
xlat
xor
push
aaa
mov
into
xchg
das
ret
cli
mov
adc
jecxz
pop
in
cli
xchg
and
fs
mov
movsb
stos
paddusb
ljmp
add
mov
push
sarb
andb
push
ds
jmp
test
cmc
fs
xchg
pop
and
lds
mov
jb
test
mov
jnp
popf
xor
mov
movsl
inc
data16
sbb
mov
pop
mov
mov
int
adc
sbb
jmp
push
in
in
dec
test
push
cmp
lcall
data16
mov
sbb
xchg
mov
scas
cmp
in
js
test
and
data16
pop
arpl
add
mov
in
scas
cmpb
notl
pop
pop
es
hlt
shr
outsl
inc
cltd
into
push
xchg
sbb
sbb
dec
pop
push
cmp
out
clc
subl
lods
xor
in
push
mov
cmc
inc
dec
and
jb
xor
xchg
xchg
adc
add
gs
add
pop
cmpl
dec
pop
inc
push
mov
ds
fdivrs
out
lods
jne
adc
inc
inc
xchg
outsl
push
aaa
adc
sbb
mov
cmpsl
ffreep
cld
cld
ret
test
stos
into
ficomps
jo
cs
cmpsl
and
dec
loopne
jb
push
pop
jge
aaa
cltd
scas
jns
and
fcomp
jle
sub
add
xchg
movsb
arpl
cmpsb
je
sbb
jbe
gs
out
pop
fmul
imul
push
cmpsb
sbb
mov
enter
repnz
incl
xor
je
leave
out
inc
out
outsb
es
rcrb
pop
sbb
lret
push
sub
pop
aam
jb
pop
mov
jne
adc
in
lahf
int3
test
push
enter
fs
ret
pop
popa
push
pop
cmp
ret
dec
sub
xchg
lods
out
dec
sahf
rcr
scas
ljmp
repz
pushf
outsb
mov
dec
pop
int3
inc
shrl
incb
idivl
cmp
pop
xchg
pop
push
or
je
sbb
out
cwtl
flds
fwait
stos
inc
ss
fldl
int
sbb
fwait
adc
sahf
and
lret
jno
jp
aad
je
mov
lcall
sub
push
test
jmp
rolb
rorl
inc
lock
mov
dec
xor
fwait
mov
mov
or
mov
xchg
xor
dec
data16
aaa
adc
test
int
orl
jo
fmull
or
shll
int
es
repz
and
popf
cld
icebp
xchg
aas
bound
in
pushf
imul
mov
ss
cmp
push
add
mov
rcrb
or
jae
sub
insl
jae
popa
xor
adc
push
push
imul
cmp
xor
add
mov
test
inc
fistps
fwait
inc
int3
movsl
jge
lea
ljmp
aaa
push
pop
dec
inc
out
fdivr
sub
pop
cwtl
add
push
mov
inc
cmp
sarb
leave
iret
stos
call
mov
dec
int
xor
xor
call
sbb
add
ret
fwait
mov
push
push
pop
and
cwtl
scas
sti
dec
or
ljmp
jle
add
loopne
cmpsl
xchg
jge
stc
pop
cmp
push
push
lods
pop
lods
dec
sbb
int3
mov
cs
mov
cmpsl
push
or
push
lock
dec
xchg
mov
or
addr16
jge
lret
pop
and
out
pop
jl
mov
dec
scas
pop
inc
xchg
and
xchg
jmp
jbe
jno
dec
out
and
popf
pop
adc
pop
mov
daa
loopne
inc
push
ds
clc
push
mov
adc
add
out
in
inc
mov
test
mov
loopne
in
mov
ret
data16
lahf
ret
mov
jbe
jb
push
popa
and
jge
in
sub
fsub
add
sub
out
adc
fwait
iret
xlat
add
test
subb
dec
push
call
repnz
sbb
push
sbb
or
scas
fwait
out
ficoml
dec
and
and
adc
xchg
imul
int
dec
xor
add
mov
fcmovbe
lcall
imull
xor
xlat
test
loope
push
push
cli
cmp
imul
pop
xchg
faddl
shr
add
inc
add
in
sub
insb
stos
faddl
repnz
mov
pop
pop
push
jns
addr16
mov
andl
aas
fstps
lahf
add
mov
mov
lea
inc
fnstcw
sub
mov
or
mov
mov
jmp
jns
fistpl
outsb
sub
hlt
xor
adc
sbb
xchg
stc
fldl
cs
or
jnp
fcoms
sbb
imull
or
adc
inc
je
movsb
ljmp
add
call
mov
xor
and
pop
inc
push
sub
ficoml
xchg
rorl
addl
out
cmc
pop
lcall
inc
mov
sub
cltd
sahf
iret
pop
iret
pop
adc
and
int3
or
sub
xchg
push
lret
inc
jb
adc
mov
pop
dec
aam
test
aas
outsb
rorl
shlb
mov
gs
scas
adc
add
jnp
inc
cmp
pop
rcrb
sub
stos
dec
push
dec
rolb
movlps
xor
enter
adc
incl
insb
cld
mov
int
es
outsl
call
mov
and
sbb
popf
iret
cmpl
cmp
pop
fisubl
or
xchg
shll
xor
arpl
sbb
andb
in
mov
jns
add
cwtl
adc
in
sbb
push
and
fwait
mov
and
pop
stos
lcall
or
push
jmp
sbb
mov
out
push
xorl
mov
adc
push
bound
pushf
mov
daa
dec
roll
jp
pop
cmpsl
je
pop
iret
mov
add
add
inc
inc
enter
mov
or
je
nop
nop
nop
nop
cmpw
jne
nop
nop
nop
nop
mov
leave
ret
xor
leave
ret
enter
cld
push
push
push
mov
mov
cmpw
jne
add
xor
mov
movl
inc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jae
nop
nop
nop
nop
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
add
mov
inc
jmp
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jae
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
dec
je
jns
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jae
nop
nop
nop
nop
mov
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
inc
dec
jne
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
jmp
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
add
mov
movb
cmp
je
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
jmp
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
mov
add
test
je
nop
nop
nop
nop
mov
jmp
cmp
je
inc
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
jmp
mov
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
dec
dec
jne
nop
nop
nop
nop
mov
mov
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
jmp
dec
mov
mov
mov
xor
shl
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
or
mov
mov
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
cmp
jae
nop
nop
nop
nop
cmp
jae
nop
nop
nop
nop
cmp
jae
nop
nop
nop
nop
cmp
ja
nop
nop
nop
nop
inc
inc
inc
inc
mov
mov
sub
rep
mov
jmp
mov
sub
lea
pop
pop
pop
leave
ret
nop
jge
or
jo
or
movsb
scas
or
pushf
scas
or
xchg
scas
or
mov
or
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
or
loopne
or
out
scas
or
add
add
push
push
inc
push
xor
cs
dec
dec
add
scas
or
add
add
xor
or
xor
or
xor
or
xor
or
xor
or
add
add
add
inc
gs
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
imul
jae
add
dec
gs
popa
addr16
outsl
js
add
dec
insl
jo
jb
pop
inc
outsb
fs
