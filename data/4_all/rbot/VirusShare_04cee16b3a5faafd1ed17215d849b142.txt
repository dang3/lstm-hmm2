push
mov
sub
push
push
push
mov
lea
mov
movsl
movsl
movsl
mov
lea
movsl
movsw
xor
lea
xchg
dec
add
scas
fistl
outsb
mov
rorb
xchg
sub
jnp
jp
js
ja
jno
js
insl
xchg
cwtl
test
pusha
pusha
pop
scas
jmp
or
pop
test
jge
push
push
fists
clc
inc
dec
dec
cwtl
das
pop
movsl
inc
inc
int
dec
int3
ret
jmp
cld
inc
mov
jae
test
xorl
and
sahf
adc
rcr
sbb
roll
or
xchg
push
je
cmp
jo
sub
sub
inc
js
insb
cmp
cmp
imul
jg
xchg
sub
aam
jge
into
int
xor
push
enter
test
jae
mov
gs
arpl
dec
divl
lods
lods
stos
fisubrs
test
mov
inc
inc
es
mov
cli
mov
mov
adc
pop
jle
jge
or
es
jbe
pop
mov
mov
mov
addr16
cltd
ret
jecxz
outsb
dec
addr16
sub
push
push
push
adcl
dec
dec
lahf
cwtl
inc
pop
jno
xchg
add
cld
ret
cmp
xor
fsts
xchg
push
add
and
and
xchg
and
or
push
adc
or
or
or
push
out
shrb
add
cmp
div
inc
scas
outsb
inc
xor
pop
sbb
out
cmp
loopne
imul
inc
addr16
pop
push
lret
lret
push
dec
cltd
movsl
ret
ret
mov
jb
mov
aas
sub
test
sti
imull
sbb
lahf
hlt
sub
jp
xchg
add
in
add
xchg
nop
sbb
mov
mov
fcoms
mov
shlb
fdivrl
pop
in
mov
stc
cmp
jg
fs
fs
sbb
and
arpl
pusha
shll
sbb
pop
pop
pop
pop
lret
adc
push
push
dec
dec
cmp
pop
adc
inc
dec
mov
fwait
xchg
jg
es
mov
jbe
mov
sub
adc
jmp
nopl
sbb
arpl
pop
outsl
adc
ja
cwtl
gs
push
add
add
aaa
pop
std
sti
xchg
cmc
hlt
dec
inc
jg
pop
loop
in
cmp
cmovs
out
mov
dec
sbb
xor
rol
rcl
and
dec
xchg
push
xor
das
push
sbb
ret
dec
inc
std
mov
mov
inc
jp
jns
dec
fidivl
movsb
lods
das
add
sub
xchg
mov
mov
mov
sbb
adc
int3
mov
push
or
add
insb
jp
push
mov
out
bound
cli
repz
pop
push
imulb
push
pusha
pop
ljmp
pushf
xchg
flds
inc
push
dec
fcmovbe
add
dec
mov
into
leave
divl
inc
aas
lret
sub
cmp
jl
sub
das
mov
sub
fwait
and
stos
movsl
cmpsl
nopl
add
pop
cltd
fsts
addr16
popa
cmc
repz
add
add
pop
push
push
out
pop
std
sti
test
div
cmc
ja
or
jp
dec
dec
dec
mov
cmp
mul
loope
cmp
pop
xchg
sbb
rcl
and
fstl
int3
lret
or
adc
test
mov
jns
cmp
mov
mov
cmc
mov
cmpsb
test
pslld
out
repnz
lahf
popf
pop
pop
cmpsb
int3
jae
sbb
xchg
xchg
in
jle
fdiv
mov
test
ret
jnp
mov
add
push
call
push
pusha
addr16
mov
dec
lret
pop
pop
mov
into
pusha
mov
push
movsb
loopne
inc
mov
dec
dec
mov
mov
sub
ds
cmp
jb
mov
out
iret
mov
sub
adc
sub
mov
jp
ja
sbb
sbb
fisubrs
movsl
pop
or
and
adc
arpl
arpl
jb
pop
dec
push
add
incl
push
inc
das
inc
std
jl
cld
add
loopne
inc
lock
in
pop
in
cld
and
push
add
xlat
dec
into
mov
sub
int
enter
clc
or
push
or
stos
movswl
or
sub
icebp
scas
lods
and
push
cmpsb
movsb
stc
mov
add
setne
xchg
pop
pushf
fbstp
xchg
fists
push
pop
mov
pop
jbe
jno
cli
pop
out
imul
arpl
pop
pop
outsl
lds
push
fmuls
xchg
dec
pop
shrb
dec
dec
mov
aam
and
inc
rolb
mov
xor
xor
sub
sub
push
dec
or
sbb
pop
or
sahf
test
stc
enter
jb
pop
nop
add
cmpsl
jmp
xchg
jnp
shl
cmc
das
out
callw
in
popa
out
popa
jae
loop
sub
jo
sbb
dec
xlat
sub
xor
pop
fildl
mov
ret
mov
lret
or
jl
mov
push
incl
in
test
movsl
sbb
sahf
mov
mov
lcall
or
adc
mov
xlat
fldl
jle
jne
jae
out
mov
aam
jae
enter
pop
scas
imul
fs
outsb
shlb
mov
jo
dec
fwait
push
jecxz
pusha
mov
dec
dec
mov
mov
popf
mov
dec
jno
leave
rolb
aaa
xchg
mov
xchg
sub
and
and
sbb
cwtl
stc
add
gs
cwtl
ret
vmwrite
dec
adc
dec
pop
push
xchg
mov
incl
jmp
push
ds
dec
loope
push
div
ja
add
lea
pop
cmp
insb
mov
jecxz
loope
cwtl
pop
cmc
sub
dec
fnstsw
xchg
loope
push
xchg
mov
push
lods
or
ret
inc
outsb
mov
js
inc
xor
scas
scas
loope
in
or
add
push
xor
lahf
xchg
out
out
and
mov
scas
stc
lea
or
addl
cmp
loop
loopne
fidivs
xchg
pop
mov
mull
push
arpl
jo
mov
inc
mov
pop
mov
xchg
cmp
dec
push
dec
inc
inc
inc
pop
das
xor
enter
ss
popa
and
cltd
pop
or
sub
popf
das
push
es
pop
cs
add
adc
call
rcrb
xchg
dec
add
adc
inc
add
add
cld
sti
bound
cmp
cmpb
lock
inc
ds
por
jae
dec
inc
out
loop
gs
mov
xor
xlat
es
pop
push
mov
sbb
mov
mov
xor
mov
add
rorb
add
sub
sbbl
imul
rcrl
mov
lock
in
test
push
flds
jp
sti
cmp
jo
jo
rcrl
and
jae
out
dec
pop
pop
pop
loopne
inc
push
push
push
fcmovb
inc
push
push
push
aam
cmp
dec
into
call
enter
ds
ret
cmp
cmp
jbe
jg
sub
mov
push
and
es
jle
stc
jo
arpl
insb
adc
dec
add
xchg
add
xchg
mov
rolb
add
push
adc
jmp
cli
jns
in
hlt
repz
inc
jl
ljmp
and
and
push
xchg
cs
les
shl
sarl
mov
mov
sbb
iret
rcl
lods
add
jg
mov
mov
mov
movsb
movsl
movsb
or
clc
jecxz
out
xchg
pushf
lcall
sbb
mov
jne
int3
mov
xchg
jmp
xchg
cmpb
lods
stos
mov
jnp
push
pop
mov
mov
push
push
scas
ljmp
pop
stos
xchg
push
mov
dec
iret
cvtps2pd
inc
mov
sub
cmp
cmp
lock
ss
subb
xor
sub
push
push
pop
push
outsb
add
mov
adc
rorb
lea
or
pop
cmp
inc
in
inc
add
push
mov
dec
push
push
jns
mov
hlt
repz
clc
mov
xchg
in
jmp
cmpsb
jmp
cmp
fst
test
cmp
fcmovnu
inc
pop
fs
iret
into
mov
lret
lret
push
or
mov
stos
mov
xorb
mov
sub
loopne
jmp
pop
jno
stc
sti
sti
xor
lds
fwait
lcall
xchg
sbb
in
xchg
and
sub
or
jnp
sarb
sti
lcall
outsl
outsb
clc
push
dec
cltd
insb
fs
and
loope
iret
pop
fstl
lret
adc
mov
lahf
enter
inc
inc
into
mov
add
cmp
cmp
xor
sub
rcll
xchg
push
mov
sub
jmp
sbb
mov
push
mov
jbe
or
or
pop
mov
test
cmp
sarb
inc
jo
test
pop
out
lods
push
jecxz
loope
in
fldl
xor
jnp
lahf
jmp
sarl
pop
inc
aam
xchg
dec
jo
mov
enter
mov
pop
mov
xor
scas
xor
test
pop
lods
sub
arpl
add
push
jmp
out
out
and
pushf
adc
dec
nop
mov
mov
test
mov
or
and
jns
loope
add
jnp
cmp
pop
outsb
insl
insb
imulb
push
push
pop
dec
mov
pop
pop
mov
into
pusha
mov
push
push
push
or
inc
rorl
jns
inc
inc
roll
cmp
lods
inc
mov
jbe
mov
mov
scas
jb
jbe
or
sbb
sbb
mov
adc
xchg
add
stos
in
or
sub
sarb
cmc
hlt
mov
icebp
lock
jbe
out
mov
sub
adc
out
movsb
popa
sbb
fcoms
pop
adc
xchg
enter
add
mov
aaa
mov
sub
cmp
in
out
or
xor
sub
hlt
div
rcll
mov
out
add
xchg
xchg
adc
sbb
xchg
lock
int
mov
outsl
ret
shrl
mov
jb
pop
pop
mov
ret
insb
aam
into
lock
push
arpl
push
mov
push
pop
push
push
loopne
inc
mov
pusha
fidivs
mov
cmp
inc
aas
ds
leave
rcrb
cmp
xor
sbb
out
add
and
sub
sbb
test
push
adc
push
setnp
pop
push
out
lock
add
test
pop
mov
testl
dec
aas
jnp
dec
jmp
in
and
and
push
and
fcmovu
xlat
aad
add
adc
es
push
xor
sub
adc
inc
or
sbb
add
add
movsl
movsl
movsb
hlt
mulb
popf
pop
xchg
cltd
push
pushf
leave
push
xorb
mov
xchg
fadds
jg
jl
ljmp
js
ja
ror
cmp
hlt
push
push
dec
mov
leave
mov
dec
sti
push
ficomps
pop
movsl
popf
fsts
mov
sub
add
adc
cmp
mov
sub
and
cmpsl
sbb
or
sbb
pop
jg
js
adc
pop
arpl
or
lock
push
add
ret
test
sti
sti
cli
dec
xchg
cmc
hlt
repz
ficompl
mov
ja
lods
push
out
dec
jae
and
xor
daa
xor
pop
sbb
aam
shlb
mov
pop
adc
mov
fsubrl
rol
inc
add
inc
cmp
mov
mov
xchg
xchg
add
testl
mov
and
sbb
nop
mov
jne
fimuls
in
movb
xchg
push
adc
jne
fnsave
imul
cltd
enter
add
push
stc
and
pop
data16
push
push
adc
pop
dec
dec
fnop
xchg
inc
popf
lods
aam
inc
inc
nop
daa
push
nop
cmp
aaa
ss
insb
mov
sub
test
outsl
push
jne
sbb
xlat
cwtl
jbe
adc
adc
pop
lcall
push
in
inc
push
add
push
mov
pusha
dec
pop
aaa
hlt
inc
ficompl
lock
inc
out
in
iret
xor
sti
xor
fstpl
sbb
rcrb
aam
pop
push
xor
int
and
mov
sbb
dec
mov
cmc
orl
mov
insb
mov
cmp
stos
jmp
jo
lea
mov
adc
fwait
icebp
add
call
xchg
xchg
sbb
jae
fisttpl
cmpsl
sbb
fs
jp
cli
cmp
ja
outsb
cli
icebp
push
pop
push
arpl
pop
sbb
mov
adc
fst
fidivrl
dec
dec
mov
inc
inc
rolb
xchg
cmp
daa
xchg
mov
jg
xchg
jle
sub
test
push
stos
movsl
mov
sbb
addl
pop
mov
adc
pop
cmc
repz
or
pop
lds
pop
movb
incl
std
dec
inc
cmpl
icebp
lock
inc
in
add
fisubrl
pop
jmp
mov
fstpl
sub
nop
lret
rcl
es
and
or
sbb
sub
rclb
sar
stos
std
mov
test
aas
ss
cmpsl
lods
lods
add
add
movsb
testb
mov
fcompl
adc
adc
mov
fistps
cmovne
fiaddl
jge
sbb
js
test
push
jae
jno
xlat
sti
repnz
aaa
lret
cmpsl
fs
std
mov
pop
ljmp
mov
push
push
mov
dec
dec
fwait
xor
cltd
dec
inc
scas
mov
xlat
ds
cmp
xor
sub
mov
sub
stos
mov
pop
ja
sbb
pop
push
mov
emms
jae
or
dec
pop
pop
add
test
cld
sti
dec
cmc
or
testb
pop
sub
in
stc
insl
jmp
jo
popf
fcomp
fnsave
sub
fldz
fadd
sbb
daa
cmp
push
lock
leave
enter
inc
push
dec
sbb
std
mov
mov
inc
aaa
popf
mov
mov
test
ja
mov
sahf
pushf
add
cltd
cwtl
xchg
and
cmp
nop
clc
repz
mov
jb
fmuls
or
iret
pop
jge
or
rorb
leave
jno
insl
subb
gs
fbld
pop
mov
pop
pop
outsb
mov
push
push
push
dec
fcmovnb
push
mov
mov
sub
cmp
aas
rolb
cmp
cmp
xchg
xchg
cli
repz
xor
daa
jns
jnp
and
jae
mov
fs
pushf
push
sbb
dec
cmc
or
push
add
das
icebp
inc
add
mov
cld
sti
cli
cmpb
xor
out
push
in
push
jb
aad
cli
push
shlb
fcomp
ljmp
sbb
int
pusha
mov
dec
ret
push
es
mov
sbb
mov
mov
in
lahf
repnz
xor
lods
movsl
movsb
cli
das
es
xchg
popf
pushf
bnd
cwtl
lods
fwait
test
xchg
ljmp
xor
int3
mov
xchg
add
jle
ret
rorl
jmp
jno
je
mov
ret
rorl
push
movsl
bound
pop
fstl
lret
jne
loope
decb
dec
movsb
popf
lahf
dec
pop
dec
aaa
mov
add
xor
aas
shll
ds
xor
jge
adc
es
mov
test
push
mov
adc
xlat
adc
setb
subl
mov
sub
xchg
in
popf
fistpll
repz
mov
out
in
jo
pop
lock
sub
out
jecxz
xor
hlt
int3
pop
fistpl
aam
dec
cmp
fisubs
pop
push
jle
int3
lret
xor
and
les
cmpsb
mov
mov
mov
mov
add
adc
mov
pop
mov
loopne
jmp
jl
xchg
xchg
sbb
mov
jno
mov
xor
test
cmp
mov
jno
mov
xor
sub
lds
in
pusha
and
scas
scas
stos
loope
cmp
lahf
push
push
fiaddl
rorl
gs
mov
pushf
sub
nop
inc
inc
xchg
cmp
and
testl
mov
mov
jns
push
lods
sub
cmc
cmpsb
addr16
sbb
cli
inc
pop
adc
cwtl
cld
fs
jl
pop
outsl
add
ljmp
pop
stc
outsb
add
and
add
clc
out
mov
pop
divl
int
xor
loope
mov
arpl
bound
loope
and
dec
mov
push
lods
xor
rcrl
and
mov
jp
or
movsb
or
mov
lods
stos
stos
stos
es
fiaddl
arpl
mov
orb
xchg
push
mov
adc
dec
jne
adc
mov
xlat
xlat
lret
std
cmp
jmp
divl
mov
push
jle
outsb
call
pop
push
mov
jecxz
push
push
enter
sahf
xor
lret
or
jp
cs
inc
aas
aas
fwait
inc
xchg
ret
ja
cmp
mov
mov
xorl
and
add
push
push
adc
push
push
pop
dec
pop
lock
push
add
cli
pop
test
jae
cs
repnz
fdivrs
icebp
in
out
loop
sub
loope
fsubrs
cmc
sub
ficompl
popa
mov
iret
pop
adc
pop
sbb
or
dec
or
stos
mov
mov
sbb
push
add
and
cmp
mov
sbb
mov
sahf
popf
sub
popa
xchg
xchg
xchg
and
mov
sbb
mov
rcll
dec
mov
hlt
mov
jnp
rol
add
out
jge
and
imul
insl
push
test
add
sbb
pop
lods
loope
movsl
movsb
test
inc
aaa
loop
dec
dec
into
or
cmp
jne
movsb
fwait
scas
jnp
pop
inc
xor
xor
sub
mov
and
lods
push
out
jno
or
mov
and
xchg
sbb
or
aam
lods
add
add
push
std
push
xchg
jp
dec
cmc
hlt
inc
dec
jle
cmpsl
outsb
jmp
jmp
in
pusha
repnz
add
fstp
data16
icebp
gs
adc
iret
into
and
lcall
adc
mov
add
mov
inc
add
lods
cmp
push
in
movsl
movsb
xor
push
aam
popf
pushf
sub
jb
les
test
rorl
push
xchg
jle
ret
lret
cmp
jbe
ret
scas
outsl
outsl
outsb
sti
mov
addr16
insb
arpl
in
push
pop
pop
mov
fwait
test
xchg
pop
fcompl
xor
inc
inc
inc
xchg
int3
mov
mov
xor
xor
mov
push
jns
lods
into
sbb
and
test
cli
add
adc
adc
fwait
xchg
pushf
pop
mov
pop
xchg
push
mov
sar
add
push
mov
bound
inc
ffree
cmp
cli
jp
xchg
loope
out
xor
loopne
pop
fcomp
fldenv
jg
je
rcl
rolb
pop
sbb
jno
outsl
imul
scas
mov
push
testb
cmp
scas
lods
das
outsl
mov
sub
call
mov
lahf
add
loope
jp
lea
pop
jo
sti
xchg
insb
dec
jg
jg
sti
lea
add
jo
jbe
ret
ret
insb
insl
insb
stc
mov
gs
dec
out
lods
pop
pop
rolb
push
push
push
push
lret
lahf
adc
xor
aad
push
sub
int
es
lds
xor
movsb
adc
or
loope
and
and
sbb
adc
sahf
pop
xlat
or
push
pop
push
xchg
push
int3
jmp
decb
cmc
div
addl
adc
out
out
jnp
lods
roll
in
out
jb
mov
loopne
dec
pop
sub
fcomps
loope
pop
jp
iret
into
pop
sbb
push
lods
int3
rol
dec
or
movsl
inc
mov
mov
sub
mov
std
xchg
test
jae
bnd
pop
imul
rcll
pop
js
mov
mov
iret
jns
xchg
jns
jnp
out
push
add
dec
pop
ja
outsb
insl
cli
mov
data16
dec
out
pop
pop
pop
pushf
pop
in
dec
cmp
dec
les
cltd
inc
dec
mov
inc
inc
iret
mov
daa
ret
cmp
xchg
pop
cltd
xor
xor
mov
and
and
outsb
adc
xchg
adc
pop
movsb
arpl
setl
hlt
inc
add
jns
add
stc
sti
cli
stc
outsb
in
test
repz
in
in
jns
loop
push
loop
in
xor
leave
in
fcmovu
faddl
sbb
and
iret
into
inc
leave
pop
sbb
pop
rol
dec
or
mov
mov
or
mov
cli
push
push
xor
lahf
sahf
repz
adc
in
sbb
repnz
test
iret
or
jge
lret
outsl
je
jae
das
outsb
outsb
insl
mulb
pop
addr16
popa
bound
movsl
push
push
outsb
cmp
cwtl
push
sbb
fst
inc
dec
dec
dec
lcall
enter
jb
sub
dec
aaa
lods
inc
xor
aas
mov
inc
xor
bnd
mov
jne
xchg
xor
xor
or
mov
mov
pusha
push
adcl
pop
mov
or
xor
enter
cli
outsl
or
insb
add
imul
xor
pop
xor
loopne
add
insb
int3
pusha
lret
fcmovnu
sub
cs
push
in
xor
and
leave
mov
adc
enter
dec
mov
cmpsl
outsb
mov
mov
popf
inc
cli
mov
sbb
push
cmp
nop
mov
cmpsb
movsb
or
push
pop
or
and
jl
fsts
mov
xchg
out
adc
xlat
imul
cmpl
xchg
or
and
insl
insb
imul
fldcw
dec
xchg
pop
pop
pop
loopne
mov
mov
aas
xchg
adc
dec
dec
mov
fmul
inc
inc
inc
inc
pushf
xchg
inc
mov
sub
cmp
cmp
scas
xor
sbb
xor
das
mov
dec
mov
sahf
sti
xchg
daa
mov
and
and
ja
sbb
pop
pop
push
cltd
fldenv
adc
enter
fs
int3
addr16
into
pop
in
sub
addr16
gs
popa
enter
repz
pop
das
in
outsb
loop
pop
add
ret
das
fstl
ret
or
xlat
pop
cltd
in
lret
aad
dec
lods
dec
ds
xchg
shlb
mov
sarb
fwait
aaa
lock
or
cmpsb
sub
cwtl
jle
xchg
js
ror
ficoml
xchg
adc
mov
testb
pop
mov
xchg
sahf
popa
dec
ret
push
xor
lret
push
push
mov
imul
or
test
fmul
xor
xchg
popa
movsb
fstps
cs
dec
inc
inc
inc
mov
jno
jg
xchg
xor
xor
mov
ja
adc
sub
test
sub
jae
xchg
nop
and
adc
adc
sbb
jp
insl
add
repz
jo
sub
cmp
int3
jl
int
pop
ds
sub
ret
lret
loopne
ss
xlat
adc
pop
inc
fsts
push
lcall
mov
dec
mov
mov
inc
add
test
sub
icebp
xchg
bound
popf
clc
cmpsb
pop
jp
cwtl
pop
push
call
sbb
jle
orl
xchg
add
mov
cmp
add
fs
gs
scas
stos
xor
mov
dec
je
cmpsl
xchg
dec
in
lods
es
jnp
fwait
pop
cmpsl
rclb
push
push
push
xchg
mov
xor
mov
sub
xchg
cmp
mov
test
xor
xor
das
mov
adc
xchg
or
mov
test
sbb
adc
lea
sbb
or
loop
nop
jns
mov
push
mov
test
loop
std
div
pop
repz
inc
aas
jns
aam
in
jmp
fs
fsubp
xor
lret
fsubs
leave
pop
cltd
xor
sub
push
fcmove
lret
lret
mov
out
ret
movswl
push
push
push
leave
dec
divb
and
movsl
sbb
sahf
popf
sub
mov
out
pop
fistl
in
cmp
mov
cltd
mov
pop
imul
shrb
jae
aaa
cmpsl
lret
insl
hlt
lods
jg
mov
push
xchg
mov
sahf
movsb
pop
pop
fistpl
push
stos
stos
push
pop
dec
arpl
push
mov
inc
hlt
inc
xchg
es
cmp
xchg
mov
xor
jle
pop
jo
sub
lods
jbe
es
es
or
sbb
mov
pushf
pop
adc
femms
iret
pusha
xchg
cmc
mov
or
andb
dec
push
push
mov
div
hlt
es
lods
shl
in
jmp
jns
call
mov
fildl
dec
sbb
es
push
xchg
fiaddl
sbb
lds
int3
stos
pusha
inc
sarb
sti
mov
mov
sbb
xchg
cmp
test
mov
jle
fwait
lcall
and
mov
clc
add
fdivl
addb
scas
mov
scas
cmp
jns
jbe
jmp
hlt
insb
insl
insb
imul
shrb
arpl
xchg
mov
push
pop
push
push
xchg
fmulp
xor
dec
dec
dec
repnz
stos
out
test
ds
daa
sub
mov
cmp
sbb
mov
btr
lea
jno
push
xor
adc
and
adc
or
dec
xchg
mov
add
add
pusha
fisubl
add
cli
hlt
lock
jnp
clc
cmp
cmp
xor
daa
in
xor
lds
fcmovu
xlat
dec
rcl
dec
lret
and
int3
dec
out
std
dec
subl
ret
mov
das
mov
sub
or
imul
movsl
movsb
sbb
xchg
out
orb
sbb
mov
mov
or
imul
lods
mov
stc
repnz
insl
insl
insb
stc
mov
gs
movsb
push
out
or
push
rcll
dec
sahf
mov
mov
es
inc
inc
stos
inc
inc
aas
lea
cmpl
mov
jecxz,pn
sub
sub
insb
inc
jne
cwtl
sub
xchg
jae
sbb
pop
push
data16
stos
cmp
mov
int
jb
inc
xchg
adcl
std
std
xchg
pop
push
push
sarb
lock
mov
ja
inc
je
push
in
push
sub
sbb
push
loope
lahf
rcr
pop
push
dec
push
pop
dec
aaa
int3
into
inc
rcll
sbb
roll
lret
jns
lds
stc
mov
divb
stos
test
push
pop
ret
es
clc
div
pop
popf
xchg
call
jg
push
mov
mov
pop
lret
xchg
data16
clc
xchg
stos
add
jl
jb
in
jnp
cmp
push
bound
addr16
ljmp
int
cmpsb
cmp
fistl
rol
push
push
inc
into
or
cmp
lds
mov
mov
popf
adc
es
sub
inc
or
daa
mov
lahf
mov
dec
or
pop
xchg
out
mov
or
jae
div
loopne
js
addr16
sub
bound
jbe
in
insl
cmpsl
pop
ljmp
push
dec
add
bound
rcrl
rclb
inc
iret
adcl
or
dec
or
inc
or
inc
add
mov
mov
ljmp
loop
test
sub
into
sub
mov
push
xlat
xchg
push
fistps
mov
mov
movl
hlt
test
sahf
jg
add
xor
mul
mov
pop
jmp
dec
stos
inc
pop
pop
out
pop
mov
xchg
sbb
jae
lcall
inc
dec
mov
adc
nop
and
push
and
cmpsl
dec
push
xor
pop
in
or
push
sti
push
insb
cmp
mov
sahf
pop
sbb
adc
jl
jno
nop
shr
sbb
add
jmp
insb
add
repnz
lock
out
dec
dec
lods
bnd
in
insl
rclb
and
pusha
lcall
pushf
inc
ficoml
int
ror
shlb
and
ret
sbb
mov
push
push
cmp
sarb
xchg
mov
adc
test
or
jl
rcll
cmovg
test
inc
test
add
fwait
or
insb
stos
call
out
push
imul
dec
outsl
arpl
cmpsl
addr16
pop
xchg
sbb
push
fildll
xlat
sub
sbb
dec
push
xchg
rorl
xchg
xchg
sub
mov
cmp
cld
inc
popa
sub
pop
ljmp
xor
sub
loop
ja
fstps
adc
adc
addr16
or
pop
pop
pop
popl
mov
jg
testl
insl
divl
call
insb
cmpsb
out
mov
xor
push
loopne
sti
pusha
sbb
pop
push
mov
mov
sti
xchg
lods
cmp
ret
rorl
push
je
in
stc
mov
ds
cltd
cmp
mov
insb
and
in
sbb
sub
mov
cwtl
xchg
sbb
sbb
sbb
sub
mov
or
test
fidivrs
pop
add
sub
ljmp
mov
cli
mov
jmp
ret
outsb
pusha
pop
pop
pop
mov
sbb
pop
lods
lods
loopne
fmulp
push
aad
ret
xchg
dec
int
mov
pop
stos
inc
daa
nop
cmp
cmp
xor
call
test
sub
mov
jae
and
xchg
es
sub
sbb
add
adc
inc
dec
push
cmc
inc
pop
or
popa
lret
out
sub
or
cmp
dec
jle
repz
and
ds
push
in
mov
mov
stos
daa
mov
push
and
mov
sbb
pop
xor
sub
push
sub
or
sub
xor
mov
mov
sub
icebp
lods
adc
push
scas
fisubl
ljmp
repz
lcall
add
aad
notb
add
mov
fmuls
mov
add
push
mov
cli
int
jge
dec
insb
push
and
inc
cmpsl
fs
push
out
lods
pop
scas
pop
mov
lahf
push
push
xchg
lcall
dec
popf
fnop
sbb
inc
inc
scas
jge
test
sub
push
lds
test
mov
and
sub
sub
stos
cmc
sbb
and
test
push
popf
out
adc
arpl
test
or
or
leave
jns
imul
gs
cli
stc
test
mov
or
roll
out
jb
shll
loopne
rorl
fcomi
dec
sbb
xchg
add
inc
mov
inc
lret
pop
push
dec
xchg
mov
xor
mov
mov
aas
subb
test
xchg
movsl
mov
push
and
lods
and
push
test
xchg
xchg
push
test
enter
pop
roll
pop
decb
jne
fcoml
push
in
lods
insb
push
sub
cltd
pop
icebp
call
scas
inc
sbb
scas
leave
imul
and
dec
mov
fwait
dec
mov
xor
mov
movsb
ret
dec
cmp
ss
lods
sti
sbb
outsb
adc
imul
and
and
push
mov
movsb
pop
unpckhps
pop
push
adc
mov
or
mov
ret
ds
sub
std
dec
arpl
jp
lock
lock
out
lock
in
cmp
mov
test
sbb
fstl
sub
aam
rolb
sbb
cmp
lods
fcoml
ret
adc
inc
mov
in
fdivs
scas
lods
lods
add
imul
out
mov
fwait
mov
xchg
xchg
xchg
or
jge
mov
ljmp
test
jns
or
jne
xchg
mov
jne
jne
jae
data16
xorl
push
fcoml
bound
dec
mov
mov
sbb
push
push
dec
mov
mov
aam
cmc
fwait
xchg
sub
inc
rolb
lds
mov
je
cs
sub
popf
das
scas
mov
pop
xchg
sub
xor
aad
and
and
cmp
or
push
xchg
mov
incl
jmp
cld
sti
dec
arpl
dec
dec
dec
mov
xor
mov
rcl
pop
sub
lods
sub
mov
and
mov
sbb
lahf
sbb
movsl
dec
adc
int
clc
sti
or
push
or
adc
mov
fildll
les
js
mov
call
data16
test
das
and
lahf
sub
cwtl
icebp
cltd
or
inc
xchg
xchg
nop
popl
cmc
push
add
mov
outsl
pop
ret
test
add
jp
jns
enter
shlb
dec
loope
imul
pop
addr16
mov
jecxz
pop
pop
pop
mov
aas
stos
lahf
push
push
stos
adc
mov
mov
ficomps
jmp
cmp
mov
adc
jno
xor
sub
subb
scas
cmpsb
int3
sbb
sbb
fs
pop
adc
test
or
add
add
add
je
cld
jno
stc
push
je
cmp
repz
lock
in
daa
sbb
dec
hlt
fcmovbe
adc
or
hlt
xchg
jp
fcom
push
adc
mov
jno
lret
mov
inc
test
dec
inc
shlb
sbb
add
lods
add
add
movsl
xor
mov
lahf
sahf
daa
loop
sub
jns
and
gs
pop
lods
lea
divb
xchg
inc
xchg
or
addl
sbbl
je
lret
and
fsubrl
stos
jo
in
cmpsb
pop
pop
shll
iret
fistpll
push
push
mov
pop
push
jne
mov
scas
lds
pop
cmp
mov
xchg
mov
dec
jmpw
sub
pushf
inc
jl
test
sbb
push
sbb
sbb
pop
cmp
clc
jb
or
xchg
mov
add
add
andb
std
xchg
dec
pusha
mov
jg
inc
dec
xor
jmp
sbb
dec
in
push
icebp
fcomip
xor
pop
aaa
xor
punpcklwd
and
cmp
push
ret
dec
cltd
inc
stos
jp
mov
mov
or
stos
lods
popa
sarb
test
aam
push
lds
popf
test
xchg
cwtl
xchg
sbb
xchg
xchg
xchg
adc
nop
add
mov
addb
or
mov
out
das
stos
ss
into
xor
fs
ljmp
mov
lods
jmp
mov
mov
stos
cmp
cmpsl
sub
fwait
jg
inc
ret
add
rorl
cmp
lahf
push
cmp
cmpb
jle
sub
mov
icebp
test
mov
jle
mov
popa
cltd
insb
ficoml
inc
or
xchg
mov
add
incl
mov
cmc
inc
inc
inc
jle
lahf
ds
add
sub
insb
cmpsb
pop
sti
dec
jecxz
gs
fldt
sub
in
sub
sbb
push
xchg
mov
pop
adc
adc
dec
add
daa
mov
cmp
scas
mov
add
fwait
out
stos
xor
pushf
adc
mov
mov
mov
cwtl
shl
mov
pushf
adc
test
lea
rorl
jb
hlt
mov
jb
roll
mov
vcmpsd
sub
push
fs
pusha
pop
mov
pop
jo
mov
push
push
push
fstl
js
rolb
ror
ds
ds
mov
popf
aaa
aaa
ss
clc
xor
xor
scas
outsl
sbb
imul
or
lea
mov
adc
mov
push
seta
mov
add
aaa
pop
clc
outsl
add
insl
repz
or
xor
repnz
and
sub
sub
pop
push
lcall
rcrl
xchg
xlat
aad
dec
fidivrl
ljmp
pop
leave
mov
sbb
cmc
lods
scas
mov
cmpl
stos
xor
mov
repnz
in
push
jne
in
add
push
hlt
sub
cwtl
xchg
jmp
sti
mov
mov
shufps
leave
ja
mov
mov
aad
pop
jecxz
push
addr16
push
cmpsl
arpl
ret
in
dec
pop
insl
ret
inc
cwtl
push
fiadds
dec
dec
pop
rcrl
dec
dec
dec
aad
ss
push
xchg
cwtl
inc
push
shrl
cmp
xor
inc
mov
in
xor
test
es
jp
aaa
and
jns
sbb
mov
sub
or
or
pmaxsw
jbe
add
std
cld
dec
jmp
jns
lock
inc
ds
and
cli
jb
inc
loopne
fisttps
sub
fdivs
bound
rcl
iret
pop
and
loope
mov
les
or
mov
mov
ljmp
mov
jmp
xor
test
cmpsl
testb
arpl
cwtl
xchg
add
xchg
nop
call
mov
cltd
mov
jbe
icebp
jg
cmp
loopne
add
shrb
outsb
sarl
stos
mov
out
mov
mov
loope
aad
bound
dec
mov
mov
jne
inc
int3
xor
xor
dec
enter
ss
std
gs
mov
leave
jmp
sub
xchg
aaa
lea
xor
mov
cs
pop
sbb
fwait
push
sbb
cwtl
dec
std
pop
out
inc
cmp
ljmp
insb
add
sti
pop
jp
repz
mov
fldl2e
out
jle
jecxz
loopne
stos
nop
inc
arpl
lret
lds
jecxz
sub
in
decb
lret
dec
mov
dec
insl
adc
mov
mov
sti
mov
in
mov
xchg
mov
lods
stos
mov
es
pop
mov
movsl
push
lret
xchg
mov
jge
nop
xchg
nop
adc
lea
mov
push
lds
jp
js
ss
popf
shlb
lods
push
in
push
arpl
bound
pop
scas
inc
sahf
xchg
pop
pop
ret
fiaddl
push
dec
add
dec
dec
dec
lcall
dec
sub
xchg
ds
aaa
cmp
xchg
in
push
xor
mov
sub
out
push
xchg
out
mov
jae
and
push
or
ljmp
out
dec
or
lret
iret
enter
push
and
je
push
xchg
or
repz
outsb
into
sti
stos
shr
push
imul
push
push
cs
in
mov
xchg
sub
and
dec
dec
cld
lret
sbb
inc
adc
ret
lods
les
and
mov
cld
loop
dec
in
jns
ret
cs
mov
cmpsl
xor
mov
sub
mov
lods
add
mull
push
sarb
cltd
aam
jge
push
mov
jl
cmp
add
pop
in
je
loope
ret
hlt
pusha
pop
or
loope
in
test
stos
inc
jmp
push
push
xlat
pop
pop
ficoms
dec
mov
inc
mov
outsl
cmpb
lods
ds
mov
call
sub
xchg
inc
mov
dec
std
sbb
inc
sbb
push
jp
addr16
or
jg
sti
lods
out
xor
add
test
sub
ljmp
mov
mov
out
out
aad
and
jmp
cmp
outsl
es
fcmovu
xor
fsubrs
iret
into
xor
cmp
lods
fs
rcrl
dec
inc
sub
mov
sub
outsb
mov
cwtl
mov
in
movsb
lahf
sahf
add
and
xchg
in
js
rorb
xchg
or
adc
data16
jl
loope
xchg
jbe
add
fidivrl
outsl
outsb
sarl
iret
adc
arpl
out
dec
pop
pop
pushf
stos
inc
mov
pop
mov
mov
ret
ror
sbb
iret
adc
ds
and
and
jle,pn
xchg
pop
sub
xchg
data16
in
and
mov
add
sbb
cwtl
fcomps
xchg
jl
or
jne
push
add
jmp
mov
inc
fstl
repz
inc
jl
pop
in
jmp
fsub
loop
leave
sti
adc
inc
rcl
es
push
xchg
out
push
push
stc
test
sarb
lds
mov
std
pop
test
scas
scas
pop
xchg
cmp
mov
out
das
or
mov
adc
xchg
xchg
push
adc
repz
or
mov
jg
pop
mov
xchg
mov
pop
cmp
insb
out
cs
in
daa
fisubrl
enter
pop
call
push
mov
mov
dec
mov
aad
mov
inc
inc
xchg
xchg
sub
ds
mov
mov
mov
inc
ret
jge
js
stos
xchg
and
and
xor
or
sbb
dec
sahf
push
adc
or
sub
pop
push
in
out
cmp
add
arpl
pop
testl
in
sub
jmp
in
fndisi(8087
push
xlat
in
popa
pop
fstp
flds
arpl
push
dec
int
fistl
dec
and
push
pop
cmovnp
jo
fiaddl
mov
jnp
dec
mov
adc
inc
icebp
test
das
add
pop
inc
push
data16
push
stos
add
cmp
cmp
add
cmp
cmp
aas
mov
jg
jg
rolb
xchg
cmp
in
push
adc
mov
test
movsb
repnz
movsb
stos
pop
into
push
push
imul
les
inc
dec
pop
xorb
sub
int3
ret
movsl
push
cmp
xor
jbe
inc
mov
xor
imul
push
push
mov
mov
cltd
pop
sbb
lahf
xchg
js
or
dec
or
pop
nop
push
or
cmp
std
outsb
repz
std
sub
into
imul
stos
out
aam
ljmp
loopne
addr16
xor
pusha
dec
leave
dec
pop
roll
and
xor
cs
cmp
ret
mov
aas
and
mov
add
mov
aaa
or
stos
xor
or
mov
lods
jmp
sub
sbb
rclb
mov
or
sub
mov
mov
call
aad
insb
cs
out
frstor
mov
fistps
data16
mov
fisttpll
inc
xchg
mov
pushf
jo
movb
cli
inc
rolb
das
cs
jl
adc
sub
mov
mov
and
outsl
push
jge
sbb
movsb
adc
push
adc
jle
dec
scas
or
mov
push
add
dec
dec
loop
es
testb
jb
cmc
and
popa
sub
pop
ljmp
movsl
loope
inc
lock
ror
add
std
arpl
es
mov
mov
push
lea
pop
test
xchg
mov
pop
sub
nop
and
pop
fdivl
in
pop
xlat
jno
mov
sub
loop
or
imul
and
jb
jne
cmp
data16
push
mov
fsts
insb
xchg
pusha
pop
mov
scas
pop
into
fcoml
test
adc
into
dec
dec
dec
dec
pop
xorb
inc
mov
aas
cmp
lods
mov
jne
mov
mov
sub
daa
xchg
in
sub
pop
outsb
test
jno
sbb
adc
adc
push
pop
hlt
cld
cmp
or
mov
add
mov
std
cld
sti
dec
xchg
fidivl
xor
out
jp
pop
out
out
into
dec
cli
jecxz
insb
gs
fcompl
add
push
and
adc
into
into
add
mov
sbb
dec
xor
js
mov
inc
mov
mov
push
xchg
arpl
lods
xor
leave
jo
mov
int3
cmc
es
add
lea
lea
or
xchg
fdivrs
into
rcl
add
pop
jno,pn
outsl
fcomps
pop
or
pop
popa
pusha
jecxz
ljmp
loope
mov
mov
fwait
inc
inc
inc
or
inc
inc
inc
rcll
cmp
divl
xchg
mov
xchg
das
sub
mov
jnp,pn
fadd
and
pop
test
push
pop
push
or
adc
prefetchw
or
pusha
aaa
dec
add
add
mov
dec
test
repz
inc
jge
loop
jmp
cmp
pop
jecxz
jecxz
lret
sub
xlat
and
shlb
mov
inc
dec
mov
cmp
sub
lods
pop
inc
cmp
scas
arpl
test
in
movsl
daa
addr16
and
jmp
mov
xchg
xchg
xchg
dec
add
lea
xchg
loopne
aam
imul
ja
int3
fiadds
cs
sub
add
or
or
jmp
push
cmpsb
mov
dec
fs
dec
iret
or
inc
inc
inc
jb
test
aaa
ss
das
inc
mov
and
mov
add
and
je
imul
sbb
pushf
rorl
and
sti
dec
or
jle
add
add
les
cld
stc
testl
data16
pop
push
push
jne
xchg
jb
xchg
lods
sub
int
fstp
push
out
aas
popa
sbb
cmp
mov
xchg
adc
int3
sub
cwtl
dec
xor
test
sti
mov
mov
gs
inc
fs
lods
test
popf
sahf
mulb
sahf
add
and
adcl
int
adc
ja
cli
xchg
imul
jg
add
out
addb
push
mov
xlat
push
imull
dec
inc
lahf
arpl
in
dec
pop
popf
push
inc
mov
dec
ret
jae
add
mov
sub
cmp
mov
pusha
xor
xchg
les
aas
mulb
cmpsb
jb
sbbl
sbb
fcompl
arpl
es
std
push
or
xchg
dec
mov
decl
pop
sub
clc
test
flds
dec
and
out
in
popa
cmpsl
jne
add
xor
sub
fbld
mov
sub
xchg
xor
mov
test
sarb
mov
leave
lahf
mov
repnz
xchg
xchg
fsubrs
mov
popf
cmpsl
xchg
icebp
cwtl
lods
addl
aam
sbb
xchg
mov
xchg
xlat
test
or
push
or
push
rolb
mov
cmp
pop
pop
scas
push
icebp
lods
clc
lock
in
mov
out
mov
cmp
jp
dec
ficoml
int3
mov
inc
inc
xchg
sub
rolb
test
cltd
cwtl
xor
xchg
mov
daa
mov
hlt
jge
mov
outsl
and
pop
outsl
push
jne
sbb
cmpsb
pop
add
cwtl
jb
femms
pop
cmc
push
xor
xchg
mov
add
push
dec
out
and
cmp
lock
pop
ds
push
ljmp
sub
sub
fcmovu
sub
jmp
xchg
in
adc
aaa
fcompl
sbb
adc
or
mov
repz
sarb
cld
stos
mov
xor
mov
out
push
mov
sub
cwtl
xchg
and
jns
fcoms
adc
mov
cld
data16
fnstsw
enter
add
aad
cmp
pop
mov
mov
data16
in
movsb
popa
mov
iret
mov
out
fs
push
push
movsb
cmp
bound
rcll
pop
or
push
sub
aas
ds
pop
push
les
pop
xchg
jo
xor
movsl
push
push
mov
sub
mov
or
mov
sbb
adc
mov
aas
lahf
xchg
inc
prefetchw
pusha
icebp
lea
add
xchg
je
cmp
clc
imul
out
ljmp
ja
imul
ljmp
ss
inc
movzbl
fs
rcl
sarl
iret
iret
into
int
xor
enter
ret
rol
shrl
stos
mov
cli
mov
adc
lods
sti
aaa
cs
mov
sub
dec
enter
xchg
sbb
int
outsb
push
mov
sbb
rolb
pop
aad
or
cmpb
jl
mov
inc
scas
je
cmc
xor
push
push
jbe
fs
xlat
sub
pop
pop
pop
mov
mov
insb
stos
test
mov
mov
lahf
xchg
iret
mov
cmpb
xor
scas
xchg
aaa
dec
mov
ja
cmpb
xchg
xchg
mov
daa
jbe
pop
dec
and
mov
testl
adc
push
or
pop
push
add
add
push
cmp
cld
jle
or
repz
fldenv
out
in
jmp
mov
dec
loop
in
cmp
loopne
xor
pop
fsubrl
and
aad
shr
inc
adc
push
pop
push
dec
or
dec
add
mov
push
or
xor
test
xor
sub
mov
push
loope
lcall
pop
push
cmpsb
push
adc
cwtl
xchg
cmpl
jns
int3
cmpsl
mov
mov
mov
imul
test
arpl
pop
jb
dec
popf
pop
mov
fcomps
dec
popa
ja
mov
jnp
je
inc
lret
mov
jge
pop
push
xor
xor
sub
imul
and
movups
fwait
icebp
cmpb
sahf
xor
cmpsl
push
adc
dec
cmp
ss
xchg
inc
cld
popa
xorl
mov
cmc
push
lock
js
lods
int
rorb
adc
in
mov
sti
or
fcmovu
mov
mov
rcl
shlb
or
cli
mov
jbe
mov
sbb
mov
fbld
inc
out
stos
xor
cmp
mov
sahf
ss
fwait
fwait
cltd
cwtl
mov
aam
ja
mov
mov
or
fs
movsl
jp
adc
gs
jb
jo
outsb
insl
arpl
movsl
movsl
sti
test
leave
jmp
mov
shl
cwtl
in
cltd
push
cmp
jge
push
call
dec
inc
inc
cltd
scas
mov
xchg
pop
gs
cmp
jge
mov
dec
xor
cs
push
shrb
pushf
and
jae
and
mov
pop
sbb
call
cmc
ud2
or
testl
std
std
cld
sti
jo
clc
or
jle
stc
and
pop
lods
sub
stos
shl
fstpl
movsb
lret
cmc
xor
imul
xlat
dec
fisubs
iret
into
push
pop
push
shufps
das
push
push
ret
adc
aas
jg
repnz
inc
aaa
cmc
lods
scas
lods
lods
and
movsl
movsb
mov
popf
popf
pushf
test
pop
test
mov
jne
cltd
mov
xchg
aad
xchg
iret
stos
mov
jae
mulb
outsl
insl
sub
lods
imul
scas
lds
lcall
dec
dec
popf
xor
je
dec
lret
jge
push
mov
xchg
lret
ret
cmp
aaa
lods
push
test
mov
jle
loope
sub
daa
push
pop
and
movsl
in
lods
mov
imul
adc
or
pop
sbb
xor
in
mov
add
sti
loop
and
testb
pop
aaa
js
inc
ja
movsb
in
in
mov
std
fstp
fcmovu
in
dec
les
aam
pop
fstps
push
int3
lret
lret
mov
les
hlt
fwait
bnd
mov
cmp
mov
mov
mov
pop
popf
lock
out
sbb
mov
fistps
push
push
xchg
xchg
xchg
cld
xchg
sub
dec
xchg
mov
aam
add
jns
jp
out
dec
movl
jo
outsb
and
push
imul
daa
jbe
in
pop
pop
pop
stos
inc
xor
push
push
push
leave
and
and
dec
cmpsb
movsl
mov
mov
push
mov
lret
jg
enter
ret
and
mov
mov
adc
jno
and
cld
push
push
sbb
pop
fistl
xlat
mov
xchg
mov
cmp
inc
arpl
subb
jbe
mov
popw
dec
dec
test
repnz
data16
in
call
cld
not
daa
jecxz
sbb
lahf
pop
mov
push
loop
in
ja
sbb
pusha
push
adc
into
int
pop
push
xchg
mov
ret
xchg
in
mov
adc
sub
push
aas
ss
stos
lods
lods
stos
and
xor
mov
pushf
pushf
fwait
orl
test
pop
dec
mov
xchg
mov
test
sbb
sarb
into
test
pusha
sub
push
xchg
insb
push
lods
outsl
mov
in
push
mov
pop
pop
dec
cld
mov
faddl
jno
dec
dec
dec
popa
mov
shrl
stos
push
test
cmpsb
cmp
jns
mov
aas
mov
adc
dec
daa
and
movsl
outsl
sbb
pop
or
push
adc
add
xchg
add
jge
xchg
mov
add
adc
ds
xor
insb
push
cmpb
lock
aas
jnp
mov
daa
jb
in
lret
loopne
pusha
mov
dec
imulb
pop
sahf
int
into
int
mov
push
dec
cwtl
adc
ja
mov
lock
inc
cmp
mov
call
test
xchg
cli
stc
cmc
popf
mov
lret
fcompl
xchg
jle
push
aad
sbb
int
sti
xchg
insb
inc
test
pop
jnp
jp
jno
enter
out
outsl
test
scas
imul
push
loopne
ljmp
pop
xchg
popf
xor
pop
fstpl
mov
inc
add
mov
leave
mov
jo
je
or
pop
xor
lret
cs
arpl
sbb
pop
jno
callw
jae
pop
add
pop
gs
pop
xor
or
lahf
pop
sti
cld
lea
sub
dec
mov
inc
dec
repz
xor
in
ljmp
pop
mov
pop
mov
add
fnstenv
mov
aam
leave
lret
int
mov
push
or
gs
or
cmp
mov
pop
cmp
stos
cli
xchg
arpl
cmpsl
movsl
daa
scas
ficompl
sub
gs
xchg
xchg
xchg
or
push
adc
fisttpl
test
addl
jbe
pop
push
jb
outsl
in
push
push
pop
push
rol
fs
xchg
mov
fldl
pop
pop
push
loope
pop
test
dec
dec
xlat
cmp
push
xor
inc
inc
aaa
call
ds
lds
mov
sub
scas
sbb
and
pop
outsb
stos
mov
jg
mov
xor
or
and
std
jns
pop
mov
cli
outsl
in
dec
test
repz
inc
out
movsb
jmp
shlb
sbb
out
test
outsl
data16
fcmovu
fsubrl
ss
xlat
aad
les
daa
es
fistps
and
dec
lods
inc
stos
inc
mov
and
jmp
ds
cld
lods
lods
stos
xor
cmpsl
cmpsb
movsl
cwtl
dec
or
sub
lcall
xchg
test
jg
adc
xchg
mov
test
shl
jnp
jp
loop
loopne
jae
add
outsl
icebp
gs
pop
ja
andl
daa
enter
pop
lods
test
rcrl
xchg
dec
roll
pop
into
cmp
push
rolb
push
pop
cmp
mov
jns
xor
das
movsb
ds
pop
sbb
fwait
sub
shll
stc
pop
push
sub
add
adc
in
jo
test
insb
mov
enter
les
add
push
loope
push
repnz
fstp
xor
push
in
sub
jmp
insl
inc
mov
and
mov
fsubr
ret
les
aam
pop
push
stos
pop
adc
cmpsb
push
and
ret
fsubs
icebp
add
mov
mov
sub
cmc
ret
inc
lods
and
stc
nop
mov
out
sub
filds
and
jno
addr16
nop
sub
mov
insl
xchg
push
mov
inc
pop
sub
xor
push
pop
mov
jb
mov
mov
in
sub
pushf
bound
mov
nop
dec
mov
rorb
mov
lcall
dec
and
jbe
xchg
mov
pop
mov
mov
imul
imul
aaa
sbb
mov
popf
xchg
jp
or
pop
icebp
dec
es
add
push
push
clc
negl
iret
jg
rolb
jp
aaa
jmp
add
and
pusha
cmp
xlat
es
cmp
pop
push
inc
lret
sbb
scas
gs
ret
add
or
push
popf
popf
push
mov
push
cmp
xchg
cmp
mov
clc
xor
icebp
mov
jns
sahf
pushf
push
pop
lods
and
jecxz
push
adc
cmc
mov
xchg
jp
cltd
shll
addb
jl
mov
mov
int
mov
clc
mov
movsl
das
out
jne
sub
popa
pusha
jmp
push
cwtl
mov
push
push
push
fbstp
dec
sarb
lea
inc
pop
xchg
xor
cltd
push
cmp
es
test
mov
xchg
mov
insl
sub
popa
dec
es
cmpsl
sub
add
and
sbb
gs
xorb
repz
or
add
icebp
call
cli
outsb
sbb
adc
repz
jnp
sbb
in
ljmp
cmp
fidivl
insb
bound
fcmovu
sub
rcll
push
lea
or
scas
leave
mov
sbb
jle
inc
movsb
cmp
cmp
mov
add
adc
xor
mov
rcll
jae
inc
xor
dec
sbb
mov
test
sub
or
jbe
lds
jb
enter
imul
shrl
jns
push
movsb
pusha
loop
pop
in
push
into
mov
xchg
push
mov
dec
dec
mov
aad
inc
xchg
sub
arpl
ret
jne
xchg
cmp
ss
pop
xchg
mov
sub
sub
sub
ja
stos
call
push
rcr
sbb
sbb
test
adc
xchg
iret
or
pop
repnz
or
inc
add
jmp
jnp
cld
sti
push
push
dec
testb
and
bnd
mov
in
cmp
jo
mov
clc
scas
iret
and
popa
aad
push
inc
fsubr
push
les
aam
pop
push
nop
lret
xor
push
or
pop
scas
popf
in
ret
lret
negl
mov
or
jae
mov
scas
arpl
stos
stos
test
mov
push
pop
fwait
pushf
fwait
orl
test
pop
push
mov
cmp
addl
jge
aam
js
lret
cmpsb
mov
add
xor
imul
pop
arpl
shr
pop
pop
pop
pop
ret
scas
out
push
cmpsb
cmp
mov
cmpsb
dec
dec
dec
mov
ror
add
xchg
cmp
cmp
xor
xorb
out
sub
adc
jmp
sbb
sbb
sbb
push
lret
pop
adc
adc
lahf
decb
or
sbb
insl
adc
in
adc
add
aaa
lods
repnz
inc
in
add
fsubrs
dec
outsl
sub
sub
sbb
pop
sbb
push
adc
xor
mov
xchg
push
mov
mov
mov
sbb
xchg
cmp
test
xor
subl
and
push
sub
jnp
enter
cwtl
xchg
and
scas
mov
outsb
dec
movsb
test
test
jp
jp
jmp
pop
test
addr16
arpl
dec
lahf
pop
jecxz
cmp
fwait
adc
dec
dec
xlat
xchg
xor
pop
xor
addr16
inc
inc
inc
inc
aas
xor
cmp
jg
xor
xor
push
jb
xchg
mov
adc
xchg
inc
daa
and
and
adc
add
mov
and
push
cmc
or
repnz
xchg
std
gs
mov
dec
fbld
and
repz
jbe
dec
divb
fisubrl
inc
jo
and
sub
fldcw
mov
sub
sub
push
sub
mov
push
inc
add
add
mov
mov
or
jo
and
xchg
xchg
leave
stos
test
test
sub
popl
add
mov
pshufw
out
xchg
je
jge
push
add
cli
mov
stc
mov
aad
iret
icebp
les
in
rcrb
jmp
mov
pop
push
imul
push
mov
xchg
hlt
ficoml
aam
movsl
inc
inc
inc
xchg
sub
jg
mov
mov
sbb
mov
sub
es
pop
je
jns
and
test
in
subl
adc
push
pop
cmc
push
and
out
outsl
sbb
xchg
cld
dec
jecxz
adc
mull
cmpl
mov
in
jmp
lods
sub
imul
loope
or
out
xor
fidivrl
popa
sbb
bound
cmpsl
cmp
and
lret
lret
mov
loopne
les
aad
add
daa
int3
or
mov
sbb
stos
lods
sar
in
test
sahf
movsb
mov
push
mov
movsb
lcall
xchg
xchg
xchg
les
jg
adc
mov
addl
mov
test
fidivs
lods
sti
aaa
das
push
jbe
pop
mov
gs
ja
mov
in
pop
pop
pop
pop
into
pusha
cmpsl
jecxz
cwtl
push
push
push
mov
dec
dec
mov
rorl
pop
inc
aas
roll
je
xchg
aaa
ss
mov
sub
sub
es
test
outsl
sbb
sbb
addb
xchg
and
or
pop
icebp
xchg
or
add
out
call
dec
cmc
or
xor
out
fs
out
shlb
loop
insl
mov
dec
loopne
jge,pt
adc
leave
int3
lret
xor
lret
enter
outsb
loopne
roll
negb
mov
or
jb
scas
scas
lods
bound
stos
test
imul
lcall
pop
cmpsl
pop
push
push
mov
mov
addb
jl
ror
ja
lret
jae
cld
pop
shl
push
pop
pusha
test
and
popa
pusha
pop
ficomps
int
lods
cmp
test
pop
dec
mov
movb
test
sbb
xor
xor
xor
and
insl
sub
daa
cmp
pop
xchg
es
icebp
inc
sbb
jg
adc
and
push
or
lock
xor
add
and
ds
push
test
mov
jl
jo
in
out
jmp
aas
aas
push
out
pop
repz
shrl
fcoml
mov
push
xchg
in
int
lds
cmp
push
or
adc
cld
mov
mov
sbb
xchg
cmp
stos
test
cmpsl
xor
mov
adc
xchg
or
jge
mov
mov
mov
mov
cmp
ds
add
cli
bound
pusha
mov
stos
push
arpl
loope
pop
pop
sbb
push
leave
mov
ror
dec
dec
dec
sahf
lcall
pop
dec
insb
pop
jp
mov
xor
stos
cmp
sub
in
and
fildll
xor
addr16
jo
aad
push
imul
push
or
setno
xor
push
nop
lock
addl
pop
dec
xchg
pop
jb
lock
ds
adc
xor
loope
fbld
icebp
movsl
sahf
xchg
sub
or
iret
into
int
sbb
adc
rclb
jle
dec
mov
sub
leave
or
and
les
sub
stc
mov
lahf
sahf
popf
idiv
pop
lock
call
rcll
mov
loope
or
xchg
notb
jnp
cli
jbe
dec
mov
xor
xor
mov
jg
popa
pusha
ljmp
mov
inc
loop
aaa
push
push
dec
andb
icebp
jle
adc
inc
mov
das
xchg
cmp
repnz
cmp
ss
push
test
sub
mov
push
add
mov
sbb
jnp
adc
jb
or
push
push
in
xor
add
test
outsb
cld
cmpl
scas
inc
mov
in
ja
repnz
fbld
fs
push
sbb
fwait
inc
fcmovnu
dec
lock
push
rcl
inc
in
push
ss
lret
lret
mov
add
les
sbbl
inc
mov
sub
xchg
lods
lods
stos
xchg
test
test
sub
mov
push
popf
pushf
fwait
sbb
adc
pop
push
je
lea
xlat
outsb
sbb
jbe
mov
insb
aam
cltd
into
add
pop
jo
jno
in
mov
push
dec
popa
popa
pusha
dec
adc
insl
in
cmp
push
mov
dec
dec
shlb
comiss
popf
pushf
cwtl
inc
push
xchg
outsb
jg
lcall
pushf
pop
insl
ja
pop
test
sub
and
mov
popl
xchg
cmp
adc
test
jbe
je
or
or
add
dec
sub
std
jg
push
clc
sub
sbb
out
inc
mov
and
subb
into
inc
push
in
cmp
xor
or
or
pop
scas
adc
pop
adc
and
and
pop
aad
sbb
sbb
jbe
dec
mov
stc
mov
leave
push
mov
mov
test
mov
lahf
adc
pop
popf
repnz
cwtl
or
adc
jnp
loope
add
leave
test
inc
insb
sarb
sti
jne
out
rcl
int3
cmp
insl
loope
outsl
push
out
addr16
mov
jb
mov
inc
aam
aad
dec
dec
mov
sahf
popf
pushf
lods
mov
push
push
sub
lds
jae
mov
cmp
das
cs
xor
sub
sbb
imul
adc
pop
sbb
pop
adc
add
push
or
dec
idivl
outsb
sbb
adc
mov
cli
clc
mul
mull
into
dec
lock
es
sub
in
loope
and
xor
pop
fs
cmp
shlb
mov
pop
push
dec
inc
ret
sub
push
adc
inc
ss
mov
sbb
aaa
scas
lods
xor
aaa
das
sbb
sub
cmp
cld
cmp
stc
cmp
xchg
iret
pop
sbb
je
adc
lea
addb
inc
mov
sarb
cli
outsb
je
imull
lea
mov
pop
xlat
pop
mov
pop
rcrb
outsl
lea
push
ficoml
insb
push
dec
dec
mov
mov
inc
inc
inc
xchg
xchg
xchg
aas
mov
cmp
push
sub
push
shlb
mov
jl
adc
jecxz
and
sbb
sbb
inc
jp
xchg
push
out
dec
std
pop
pop
outsb
add
jne
xchg
popa
test
call
xor
push
jbe
rcll
mov
loop
loopne
sub
cmp
sbb
inc
mov
mov
mov
mov
mov
mov
sti
mov
pushf
add
adc
stc
mull
mov
in
sub
inc
add
xchg
cmpsb
int3
mov
mov
aam
pop
std
jnp
jge
icebp
jae
js
jg
mov
mov
ret
mov
data16
js
xchg
mov
pop
outsl
xchg
mov
push
xor
arpl
mov
xor
xchg
cmp
es
sar
inc
mov
inc
jecxz
jo
sub
adc
push
loope
jge
out
jo
add
push
or
inc
jmp
loop
pop
jo
insb
mov
push
gs
sti
cli
cmp
test
hlt
repnz
xor
in
in
gs
in
outsl
test
fidivs
lock
sbb
pop
xchg
dec
in
rolb
xlat
ror
lret
fmull
mov
ret
lods
ret
repz
xorb
inc
xchg
mov
or
lods
xor
mov
push
iret
or
fwait
mov
mov
xchg
iret
bnd
imul
iret
mov
dec
inc
mov
test
jge
js
pop
addr16
pop
je
int3
jp
loope
push
bnd
data16
pop
roll
pop
shll
shrb
push
loopne
lods
lea
subl
dec
inc
inc
mov
cmpb
cld
scas
dec
cmp
mov
cmpsb
sub
inc
jne
outsb
sub
popf
xor
jge
and
test
sub
xchg
sbb
xchg
adc
setns
inc
int
or
add
jbe
mov
inc
add
cmp
push
add
dec
or
or
lods
sub
in
imul
arpl
add
add
jmp
push
mov
aad
les
iret
sbb
xor
stos
std
mov
leave
aas
mov
and
cmpsb
movsl
mov
out
loopne
lcall
xlat
xchg
pop
push
add
lea
xchg
fdivp
mov
stc
jg
xchg
enter
jnp
jbe
lea
fs
subb
imul
shlb
fs
push
movsb
pusha
pop
rcll
pusha
outsb
pop
pop
lods
ds
addr16
push
stos
test
pusha
aaa
mov
add
test
inc
cmp
aaa
dec
jle
ja
xor
sbb
mov
xchg
or
or
outsb
dec
or
pop
inc
in
cmove
dec
or
cmpsl
push
add
add
cmp
clc
testb
loop
bnd
sub
in
out
cmp
imull
and
bound
loop
rcl
daa
into
jecxz
mov
cli
xchg
xchg
leave
dec
sahf
test
mov
int
movsb
clc
mov
jb
lds
sbb
adc
push
mov
mov
out
fistps
push
xchg
test
jg
adc
sahf
fstp
lock
test
sarl
xchg
roll
add
insl
cmpsl
cs
repnz
arpl
or
outsb
dec
loopne
pop
pop
out
mov
dec
int3
pop
mov
xchg
cmp
dec
pusha
aaa
mov
add
cmp
mov
movsb
cmp
mov
xor
movsb
cmp
daa
adcb
ss
and
in
pop
call
sbb
push
mov
adc
bound
or
adc
xchg
test
adcl
mov
je
adc
adc
push
imul
hlt
push
pop
fistpl
dec
out
aam
fistpll
aam
into
and
loopne
mov
add
inc
jle
into
dec
call
and
sbb
pop
scas
ret
cmc
fwait
out
stos
add
add
add
push
loopne
lcall
xchg
xchg
nop
push
shrb
cmc
mov
jb
addb
pause
or
pop
lret
fbstp
jo
mov
mov
ret
hlt
push
test
jno
aam
mov
outsl
pop
pop
pop
scas
push
push
inc
xchg
push
cmpsl
dec
arpl
cmp
push
cwtl
xchg
stos
addb
xchg
cmp
subl
cmp
jne
mov
mov
sub
and
js
xor
or
sbb
mov
es
and
or
sbb
mov
jne
push
push
gs
cli
stc
dec
testb
jecxz
repnz
out
add
fsubrl
jmp
lods
inc
inc
inc
scas
cmpsl
cmp
popa
lret
shl
sub
popa
bound
dec
int
lret
enter
sbb
dec
add
mov
mov
ljmp
scas
stos
std
test
cmpsb
sbb
mov
lahf
sub
nop
jmp
push
test
xchg
xchg
in
in
push
xchg
xorl
pop
scas
cmpl
mov
pop
jbe
je
push
subb
mov
data16
add
pop
pop
out
fs
push
push
mov
lahf
ss
insl
dec
dec
int3
or
orl
les
ds
aaa
lods
cmp
jns
sbbb
dec
das
sub
pushf
ds
mov
subl
aas
sbb
lcall
dec
or
pslld
mov
pop
mov
jb
fs
lcall
hlt
repnz
nop
xor
aas
shll
jb
repz
push
fnstenv
sub
pop
cwtl
repz
lret
ds
sbb
ret
or
dec
aas
leave
mov
mov
sub
add
mov
test
test
xor
mov
mov
xchg
fwait
lcall
jl
mov
nop
call
lcall
xchg
jg
jg
hlt
jns
lret
bound
add
subb
insl
loop
mov
fldt
sbb
insl
pop
pop
pop
test
push
push
jns
les
popa
adc
mov
or
rorl
ret
ret
cmp
cmp
mov
xchg
mull
lods
and
and
pop
jno
push
cmpsb
clc
cmp
cmp
dec
xlat
aam
sbb
dec
or
dec
push
jp
pop
pop
test
mov
dec
dec
fisttpll
repz
mov
adc
pop
or
jo
lret
in
add
fildll
xor
std
or
es
icebp
int
push
mov
cmp
add
mov
or
mov
ss
cmpsb
idivb
cld
decb
clc
sub
xchg
lods
popf
fwait
icebp
subl
out
in
call
or
fcmovnu
in
sub
jmp
imul
into
fdivrs
mov
shrl
dec
movsl
outsl
fs
in
imul
mov
int3
bound
inc
xchg
push
dec
ret
push
mov
cmp
jb
xchg
pop
mov
cmp
test
hlt
cmpsl
push
mov
mov
mov
sbb
imul
xor
or
push
fisttps
xchg
add
aam
push
xchg
shrl
ror
pop
out
mov
in
or
stc
cmpl
dec
dec
pop
pop
jnp
inc
jp
aaa
call
in
iret
adc
fstp
fisubl
sub
aam
and
pop
movsb
and
and
pop
push
dec
push
scas
mov
std
mov
mov
out
or
sub
push
and
add
sub
mov
and
fwait
lcall
xchg
xchg
adc
fnstcw
mov
jo
jns
addl
jge
aam
iret
ja
lret
jae
test
xor
imul
xlat
mov
pop
pop
ret
cltd
push
movsl
cmp
pusha
push
push
orb
enter
bound
inc
aas
ds
mov
mov
test
das
mov
inc
mov
and
and
js
sbb
lahf
or
mov
adc
or
pop
cmp
jno
add
xor
inc
add
std
mov
dec
test
loop
icebp
dec
inc
xlat
mov
in
jmp
lods
hlt
je
xor
loop
cmp
das
xor
icebp
sbb
pop
xchg
push
or
push
sbb
les
leave
sbb
dec
inc
or
mov
jae
mov
jns
cmp
les
adc
adc
and
sub
in
xchg
xchg
std
pop
xor
xchg
loopne
das
lcall
lahf
fimull
push
int3
insl
jge
jnp
outsb
leave
add
jb
les
mov
out
jge,pn
in
mov
arpl
dec
inc
push
pop
pop
mov
pop
outsb
faddl
push
push
enter
sub
movsl
mov
mov
into
cs
dec
cmp
mov
and
sub
sbb
sbb
jne
and
sbb
or
cld
dec
or
mov
das
mov
cli
clc
mull
cmpl
mov
in
jmp
lods
hlt
dec
lods
sub
lret
fildl
sbb
cmp
inc
mov
or
dec
test
int
int
add
mov
stc
xchg
ret
scas
cmp
jnp
add
mov
mov
mov
lcall
xchg
xchg
nop
loopne
add
mov
adc
mov
jge
mov
into
pusha
ja
xor
clc
repz
gs
imul
xchg
movsb
mov
lods
addr16
and
popf
pop
scas
lret
and
cmp
mov
xchg
inc
inc
aas
ds
xchg
movsl
cmp
push
xor
xor
jl
aas
insl
pop
imul
data16
sbb
in
push
adc
and
xchg
dec
adc
mov
mov
std
std
cld
in
ds
clc
push
inc
hlt
or
loope
lock
in
add
fldcw
add
insl
fs
fcmovnu
inc
mov
sbb
and
shlb
leave
enter
dec
call
mov
mov
mov
ja
ds
ja
bnd
stos
test
hlt
stc
das
mov
jmp
and
xchg
xchg
xchg
sbb
xchg
mov
js
mov
add
push
movsb
jle
jl
lock
sbb
jne
outsb
insl
push
sub
push
push
mov
lock
dec
daa
movsb
dec
insl
pop
pop
pop
test
stos
push
sarl
xchg
dec
rolb
into
push
inc
inc
inc
mov
cmpl
cmp
xchg
jge
xor
mov
sub
push
das
mov
fstps
sbb
push
mov
or
aad
sete
pop
xchg
mov
stc
add
push
push
out
add
sti
test
add
add
lret
pop
repz
aas
in
in
call
sub
jb
ret
cmp
insl
fs
fcmovnu
daa
aad
int3
shl
add
pop
push
mov
rclb
jbe
mov
imulb
mov
dec
mov
lahf
cmp
test
test
pop
lods
mov
xchg
pushf
mov
mov
cwtl
rcrb
and
xchg
xchg
nop
sbb
mov
dec
cltd
adc
lods
enter
in
jl
push
mull
in
outsb
je
stos
mov
popa
imul
push
jnp
gs
out
in
pop
pop
pop
stos
pop
into
adc
imul
xchg
push
mov
dec
dec
mov
jmp
cltd
dec
inc
inc
ret
jne
ljmp
das
xor
das
movsb
fidivrl
mov
sub
es
fldenv
and
pop
pop
nop
xor
sub
fwait
sbb
adc
popa
clc
mov
or
push
pop
add
xchg
inc
add
mov
cli
cli
stc
clc
or
repnz
fcomps
in
in
inc
inc
call
in
mov
fcoml
addr16
cld
aad
sub
roll
mov
loop
enter
mov
roll
jb
mov
cmp
xchg
fildl
cmpsl
mov
imull
push
bound
mov
fwait
in
out
sti
sbb
inc
enter
ja
mov
mov
in
jl
jns
daa
es
jae
imulb
popa
addr16
xchg
cmpsb
arpl
out
pop
pop
pop
lods
call
push
movsl
loope
mov
dec
mov
out
lea
xor
push
push
int
jp
cmp
lea
sahf
xor
cs
insb
push
push
xchg
daa
xchg
mov
push
push
adc
or
stos
dec
pop
push
in
xor
add
rcll
imulb
pop
cmpsb
xchg
repz
out
fs
jp
xor
call
fucom
loope
arpl
fnsave
gs
dec
lock
data16
rcrl
or
int
sbb
cmpsl
ror
pop
push
lods
mov
mov
inc
cmp
push
add
das
outsl
mov
sub
idiv
icebp
lahf
adc
pushf
mov
mov
cwtl
and
sub
mov
mov
or
call
cltd
jns
ja
insb
divb
subl
pop
lods
push
lock
push
lret
pop
shll
outsb
xchg
inc
cltd
push
aas
jmp
mov
dec
mov
jmp
dec
xchg
cs
dec
inc
inc
xchg
int
jp
cmp
cmp
xchg
xor
xor
sub
adc
pop
sbb
push
outsb
add
pop
mov
std
mov
shll
or
adc
push
mov
dec
add
jg
std
push
gs
clc
or
jle
jmp
xor
jmp
loop
loope
insl
fs
fisubrl
pop
adc
aam
cmp
jae
iret
push
mov
ror
leave
dec
mov
and
inc
stc
mov
mov
inc
cmp
mov
scas
ljmp
test
mov
data16
and
cwtl
fwait
lcall
int
mov
add
lea
mov
mov
loope
clc
mov
xchg
imul
enter
mov
icebp
push
in
jb
pusha
pop
jmp
mov
add
push
fiadds
or
ds
jl
jp
mov
aas
ds
xchg
enter
ss
int
jb
sub
daa
pop
insb
sub
scas
imul
push
sbb
outsb
insl
mov
adc
push
or
dec
aaa
dec
add
loopne
pop
mov
inc
cmpl
icebp
lock
mov
shl
out
call
sbb
push
xor
lret
aad
test
pop
push
or
int
sbb
jg
lods
ret
adc
inc
stos
mov
mov
sahf
in
lahf
mov
mov
addr16
flds
std
movsl
mov
rcrl
fcompl
xchg
sbb
jecxz
cmp
lea
out
test
outsl
js
jnp
lret
jns
jne
aaa
jle
mov
mov
push
arpl
jb
dec
popf
pop
xchg
int3
and
gs
pop
fst
ds
dec
dec
lcall
pushf
iret
xchg
xor
aaa
ss
cmp
das
inc
push
outsb
sub
fwait
dec
mov
dec
ljmp
popa
and
popf
pop
adc
arpl
pop
hlt
push
or
or
or
jne
jb
aaa
js
jo
cmpb
jne
jmp
jmp
jne
mov
jecxz
out
in
fstpl
xchg
fimull
push
js
sarb
lret
sbb
inc
xchg
cli
xor
mov
jp
stc
lahf
mov
mov
and
out
outsb
sbb
xor
xchg
fwait
lahf
sahf
daa
adc
fsts
xchg
nop
in
adc
mov
or
jl
scas
ja
ja
inc
mov
mulb
insl
insb
mov
jmpw
bound
nop
mov
lea
adc
pop
push
push
push
xor
sbbl
mov
aaa
rcrb
push
jns
cmpl
sbb
cmp
outsb
test
mov
sub
dec
sbb
pop
addr16
xchg
jecxz
mov
mov
adc
mov
or
repnz
xchg
mov
sti
std
jb
dec
xchg
hlt
cmc
hlt
inc
repnz
and
sub
ljmp
loop
leave
inc
enter
lahf
add
dec
ret
in
add
rcl
push
dec
mov
sbb
mov
roll
rol
inc
sbb
scas
xor
mov
xchg
lret
test
pushf
repz
lcall
jno
mov
pop
xor
fdivl
lea
mov
aam
add
js
jbe
dec
les
imull
imul
data16
push
jbe
in
jae
loop
push
pop
pop
test
cs
adc
pop
shl
dec
dec
dec
mov
fwait
ror
cli
aas
aas
ds
lea
xor
xor
cmp
mov
sub
mov
frstor
and
jno
movsb
push
pop
sbb
add
pop
push
gs
cmp
adc
gs
xchg
cld
add
ficoml
mov
decb
mov
idiv
neg
inc
pop
hlt
repz
loopne
in
in
cmp
push
shl
out
test
loopne
addr16
fs
aad
inc
into
pop
push
lret
pop
inc
int3
stos
fistpl
in
movsl
xor
scas
mov
mov
clc
mov
iret
sbb
push
lock
cld
xchg
lods
test
fcoml
jno
mov
xchg
cwtl
xchg
xchg
or
and
leave
lea
mov
pop
xchg
addl
insb
jne
js
pop
outsb
pop
jae
faddl
mov
shrb
push
pop
pop
pop
mov
lea
push
fcomps
outsl
fists
dec
dec
dec
jl
xchg
ror
xor
inc
inc
nop
xchg
xchg
cmpsl
fs
nop
mov
mov
xchg
mov
sub
sub
loope
pop
and
test
sbb
sub
inc
push
adc
test
or
or
fldcw
add
je
inc
std
mov
inc
pop
sub
xor
jnp
movsb
call
testb
fsubrl
fcmovnu
xlat
pop
cltd
loopne
inc
mov
push
mov
cmp
mov
jo
mov
mov
mov
je
cmp
pushf
movsl
test
mov
xchg
cltd
xchg
or
jge
gs
xchg
jmp
mov
stos
mov
xchg
lea
nop
es
mov
mov
mov
das
push
lea
fimull
popa
pop
mov
and
push
push
data16
fists
cmp
pushf
pushf
scas
jne
xchg
sbb
and
aaa
rclb
mov
xor
pushf
xor
loope
and
mov
xchg
sbb
sbb
cli
dec
sub
push
cwtl
in
int3
xchg
pop
adc
add
imul
inc
stc
push
xchg
icebp
bnd
imul
mov
mov
lock
jo
xor
stos
sbb
push
rcrl
aaa
xor
inc
cmc
aam
jecxz
mov
cmp
or
in
or
xor
add
ljmp
mov
mov
lods
push
in
stos
insb
pusha
lahf
dec
out
pop
xchg
inc
loope
pusha
push
cmpl
cwtl
pop
dec
jne
aad
push
dec
addr16
mov
adc
or
pop
dec
orl
push
mov
sti
mov
adc
scas
imul
fdivrl
mov
mov
scas
pop
mov
stos
inc
lods
pop
into
fs
es
pop
test
mov
xor
inc
cmp
movsl
mov
sub
sub
cmp
ss
inc
sarl
sbb
sub
sbb
sub
lds
push
pushf
adc
and
adc
decl
pushf
add
add
jle
clc
pop
jnp
cmc
hlt
repz
lods
lock
in
push
jmp
call
int3
lret
loope
xor
xlat
xchg
out
push
shll
push
iret
into
int
pop
dec
xor
mov
adc
push
sarl
or
sub
mov
mov
scas
cld
xchg
jmp
xor
mov
test
lcall
in
add
jae
mov
insb
mov
cmpb
or
jecxz
js
int
pop
into
je
jno
xor
jno
test
pusha
pusha
pop
mov
inc
lret
pop
pop
pop
in
ds
push
push
test
cmp
iret
mov
inc
inc
fwait
xchg
sub
add
inc
mov
fwait
xor
das
mov
mov
jmp
mov
movsl
mov
and
jno
jns
jo
movsl
pushf
push
adc
adc
clc
fmuls
or
xchg
clc
pusha
xchg
ret
add
rep
push
div
testb
jae
lock
jl
insl
push
repz
sub
fimull
loop
bound
std
sub
mov
sub
aaa
push
jb
lret
push
dec
enter
sub
cmpsb
pusha
mov
lret
mov
scas
scas
scas
cmp
stos
test
ljmp
fwait
pushf
fwait
hlt
ljmp
sbb
lea
hlt
xchg
ljmp
js
in
xchg
jae
jle
in
push
jns,pn
push
in
addr16
arpl
pop
loopne
jae
mov
and
stos
fistpll
movsl
test
mov
mov
inc
mov
es
cmp
cmp
mov
sbb
mov
sub
push
and
jp
pop
jne
sbb
jbe
pop
pop
dec
xor
or
dec
or
repnz
or
pop
mov
pop
jne
push
std
jb
cli
outsl
add
mov
mov
inc
aam
jmp
jmp
cmp
call
xor
fnstenv
ss
xor
mov
sbb
push
lret
push
sarl
mov
mov
jmp
stc
lcall
out
or
popf
pop
lods
sub
mov
out
add
aam
sarl
ljmp
test
sub
cmpb
cld
sbb
jb
shll
addl
aas
addr16
ljmp
pushf
pop
in
push
push
push
test
cmpsl
dec
arpl
jl
dec
lea
xchg
rorb
jecxz
cmp
mov
mov
mov
test
sub
mov
in
mov
movsl
dec
push
inc
pop
adc
add
in
push
sbb
mov
faddl
mov
and
sti
cli
stc
clc
jp
std
dec
repnz
and
out
dec
dec
inc
aas
je
push
loop
and
xchg
sbb
popa
nop
ss
iret
into
shll
lret
enter
lods
mov
fbstp
xor
mov
scas
scas
lods
or
xchg
movsb
movsb
mov
lahf
sahf
mulb
lahf
test
jnp
nop
fcomip
cmp
or
jmp
addl
jp
sti
cmp
xchg
ret
cld
repz
imul
lret
pop
pusha
pop
scas
pop
adc
pop
pop
pop
inc
add
push
push
gs
cmp
dec
popf
cltd
aad
cs
inc
inc
xchg
into
lds
scas
sub
xor
xor
mov
cs
and
and
and
dec
sbb
popf
fnstsw
jae
mov
gs
xchg
jae
or
or
pop
xchg
mov
add
push
pushl
inc
add
idivb
pop
jg
push
ljmp
out
in
aam
inc
lods
loopne
aaa
ss
sub
xor
daa
pop
mov
lret
lret
push
test
vcmpsd
xlat
dec
inc
je
mov
divl
scas
lods
aaa
call
sub
xor
pop
sahf
sahf
popf
in
sub
push
xchg
xchg
xchg
out
imul
nop
sbb
mov
sub
mov
clc
jl
inc
addl
js
movsl
jmp
hlt
xor
outsl
outsb
outsb
loope
jmp
push
data16
fcomps
pop
lods
call
push
push
leave
imul
dec
dec
dec
mov
inc
inc
inc
xchg
aas
mov
cmp
dec
cmp
sbb
xor
das
mov
pop
mov
inc
mov
jecxz
and
jae
xchg
sbb
xor
fmuls
es
aas
push
or
lea
ja
push
push
dec
in
idiv
stc
jnp
or
out
aas
jnp
movsb
call
mov
loopne
imul
xlat
sbb
and
iret
into
int
in
sahf
outsb
or
cs
ret
fs
inc
cmp
mov
roll
and
movsb
mov
movsl
daa
addr16
pop
pushf
pushf
fwait
jmp
cwtl
lods
sbb
xlat
xchg
sbb
inc
in
mov
adc
mov
inc
aad
push
push
add
xchg
leave
cli
pop
cli
sub
imul
test
pop
pop
inc
pop
sbb
pop
xchg
sbb
cltd
dec
pusha
roll
rcll
lock
test
inc
xchg
test
in
cmp
stc
insl
cmp
mov
push
xor
sub
push
and
and
sbb
push
adc
fwait
mov
push
in
je
dec
or
mov
xlat
push
push
popf
mov
cmp
hlt
lret
cwtl
xor
inc
nop
mov
sub
cmc
mov
leave
and
fidivl
aad
hlt
rcl
rclb
adc
mov
icebp
add
mov
mov
push
sbb
addb
cmp
xchg
mov
xchg
fwait
add
fsts
xchg
ja
mov
mov
fpatan
rolb
pop
addr16
lret
js
repz
imul
int3
arpl
scas
inc
mov
sbb
inc
mov
rorb
dec
les
push
xor
sub
inc
inc
inc
cwtl
mov
dec
mov
and
pushf
dec
fdivs
mov
sub
popa
and
and
add
insl
adc
cmp
sbb
stos
inc
add
cld
dec
jecxz
repz
testl
loopne
push
inc
jns
dec
out
out
pop
shlb
outsl
dec
fsubrl
cmp
cld
fcmovnbe
rcll
loop
push
das
enter
or
ret
xor
mov
mov
or
hlt
mov
or
push
int
cmpsl
sub
enter
cmc
cmc
sub
inc
lret
fcompl
xchg
ljmp
leave
sub
pop
packssdw
lds
mov
adc
je
fdivl
inc
mov
stos
push
int
pusha
ss
pop
xor
inc
in
jl
jecxz
js
fistl
mov
jecxz
mov
mov
lret
pop
cld
and
test
gs
mov
mov
dec
cmp
sub
xchg
outsl
mov
test
pop
adc
adc
adcl
dec
pop
mov
jns
lea
addr16
movsl
ds
cmpl
repz
inc
xlat
mov
cmp
or
out
cmp
mov
fisttpl
xor
in
outsb
rclb
pop
adc
fmul
push
in
fadds
or
aam
pop
hlt
mov
xchg
or
mov
jns
push
or
xor
insl
sub
lret
mov
shll
lcall
adc
mov
stos
lea
test
test
push
xchg
cmpb
arpl
jg
ja
cli
xor
out
fcomps
scas
insb
push
lea
js
arpl
pop
pop
mov
sbb
push
fistl
jo
aad
insb
pop
orl
xchg
cmp
and
shlb
sub
popf
daa
es
or
sbb
insb
jge
pop
adc
mov
cmp
xchg
dec
add
ss
add
std
xchg
dec
dec
andb
cmp
push
das
in
ljmp
sbb
out
mov
pop
jns
sbb
and
enter
cld
or
into
les
arpl
sub
scas
mov
mov
mov
mov
lods
cmp
push
divl
ljmp
lcall
sbb
movsb
sbb
fistpl
mov
rorb
cmpb
rcll
std
dec
jbe
je
out
fidivl
inc
mov
hlt
stos
pop
mov
cmpsl
imul
mov
enter
push
push
and
hlt
dec
dec
dec
mov
inc
sub
inc
aas
xchg
ret
scas
push
lds
sbbb
cmp
stos
in
xchg
xor
bound
xchg
incb
lcall
or
lods
das
inc
std
cmpl
fiadds
add
sbb
pop
divl
adc
loop
imul
les
pop
popa
fsub
mov
rcl
jb
mov
rorb
ret
call
call
lock
mov
xor
in
scas
scas
push
push
cwtl
in
test
out
mov
pushf
jb
cltd
scas
xor
fcoms
add
mov
dec
loopne
dec
inc
or
imul
ja
test
jb
test
sahf
scas
insb
lock
lods
outsl
es
cmpsb
insb
mov
mov
jnp
out
or
xchg
push
fisubrl
test
rorb
inc
inc
aas
leave
jp
imul
push
lahf
push
addl
fcompl
sub
js
lods
insl
add
sbb
adc
in
jecxz
jnp
push
sti
push
subl
push
add
mov
in
mov
dec
jnp
out
cmc
repz
arpl
jmp
sahf
sbb
out
movsl
pop
or
mov
popf
jne
fdivs
pop
xchg
sub
iret
ror
int3
xor
or
push
lods
outsl
pop
ret
rcrl
jle
xor
adc
mov
enter
scas
cltd
mov
lock
in
mov
call
fwait
lcall
test
sbb
out
dec
or
lea
jle
scas
inc
add
pop
pop
pop
mov
cmpsl
jbe
jno
mov
fsubrl
movsl
movsb
jecxz
popa
aad
jmp
lahf
loope
inc
adc
lock
jmp
xchg
dec
inc
int3
cmpb
popf
mov
icebp
sbbb
ds
scas
xor
push
arpl
cmpsl
bound
push
jecxz
pop
dec
ret
adc
pop
add
or
dec
call
mov
inc
add
adc
insl
repz
fbstp
repnz
or
in
push
jnp
sub
out
in
dec
repz
loopne
xor
xchg
int3
aad
xchg
out
rolb
cmp
lret
mov
testb
dec
mov
push
mov
movsl
rcrb
mov
pop
cmp
lods
cmp
stos
stos
push
xor
mov
mov
fcoms
rcl
adc
jg
adc
jae
adc
addb
mov
mov
jne
shrb
pop
scas
push
fstl
add
and
jmp
inc
stos
pop
into
dec
push
imul
xchg
push
repnz
cmp
dec
iret
mov
dec
rcll
inc
inc
aas
ret
std
mov
mov
test
test
sub
pushf
xor
and
pushf
cwtl
sbb
or
push
push
andps
inc
push
sti
jl
mov
jbe
addr16
aas
sti
dec
clc
insl
lcall
pushf
xor
ret
jmp
lods
add
decb
mov
push
in
inc
sbbb
cs
mov
rcl
push
xchg
out
adc
mov
rorb
mov
cmpsl
and
mov
pop
in
mov
mov
dec
fsubrp
lods
ss
push
add
stc
cs
imull
sbb
lods
sbb
adc
aam
nop
push
mov
cltd
fsubrs
xchg
test
ds
xchg
mov
hlt
pop
test
rcl
iret
xor
jo
gs
and
gs
inc
push
popa
pusha
ljmp
test
adc
dec
mov
pop
dec
inc
inc
mov
das
cmpb
and
and
cmp
dec
icebp
mov
xor
push
xchg
xor
cmp
push
mov
mov
inc
in
jp
fwait
push
cld
pop
pop
icebp
jmp
push
add
movl
clc
div
or
loope
icebp
out
notb
xor
rcrl
daa
aad
and
inc
in
sub
fsubr
imul
aam
cltd
loopne
mov
int
push
xor
xor
rcl
scas
add
pop
mov
mov
mov
mov
add
xor
movsl
sbb
loop
fsubs
push
pop
cwtl
xchg
xchg
adc
fwait
add
fcomip
mov
test
mov
inc
in
loopne
add
fs
jno
mov
jg
push
stos
lock
sahf
pop
aad
fistps
dec
cmp
pop
int
shlb
sti
xchg
push
cmp
cwtl
das
in
inc
inc
lds
dec
mov
ss
shl
jne
push
cltd
ds
jo
insb
sub
and
or
fisubrs
push
out
xor
xchg
repz
sbb
and
enter
push
mov
jl
stc
cli
div
cmpb
inc
jle
out
in
in
jmp
pop
cmc
push
out
in
xor
jnp
loopne
pusha
mov
aad
aam
shll
mov
and
adc
aaa
leave
mov
mov
mov
push
mov
cltd
cmp
jae
std
xor
mov
pushf
out
lock
add
fcoms
cmp
mov
je
jnp
mov
addl
insb
jp
ja
xchg
insb
outsb
insl
aad
stc
lods
imul
pop
pop
pop
pop
stos
out
pop
push
push
push
push
enter
cmpsl
testl
or
movb
cmp
cmp
xor
xor
lahf
xor
cmp
adc
and
sbb
sbb
or
adc
adc
insb
push
sysret
push
add
xor
inc
add
rcll
jnp
or
div
cmpl
add
sub
in
jecxz
out
loopne
cs
dec
or
fsubs
rcl
sarl
loopne
adc
sbb
iret
ror
push
dec
mov
rol
negl
lods
mov
lahf
mov
scas
pop
cmp
stos
cli
xchg
jns
cmpsl
movsl
das
xchg
and
adc
dec
fistl
lahf
inc
roll
adc
cmp
jae
nop
aaa
les
xor
and
sub
insl
ret
push
addr16
stc
pusha
pop
pop
pop
rcll
fildl
push
push
mov
mov
dec
dec
dec
xchg
jo,pn
inc
inc
stos
inc
int3
ret
sub
cmp
cmp
lret
ss
inc
jg
mov
daa
es
jg
loop
test
pushf
push
cmc
and
push
mov
addr16
mov
add
or
jb
mov
add
lock
in
popf
mov
repnz
out
cmpsb
jmp
ljmp
loopne
mov
repnz
leave
sbb
aas
adc
pop
adc
mov
enter
lret
out
out
mov
cli
mov
stc
stos
es
cld
cli
xor
lahf
movsl
mov
sub
and
and
mov
nop
test
jno
jbe
test
jg
xor
cld
lcall
cli
push
pop
adc
data16
test
sbbl
lds
inc
mov
push
aam
cmc
push
dec
dec
fcmovbe
outsl
inc
dec
inc
lcall
inc
aas
roll
add
mov
js
sahf
inc
xor
sbb
sub
insl
das
mov
and
fmuls
xchg
xchg
subb
sub
add
jbe
into
subl
and
test
pop
jnp
ret
jg
sbb
hlt
repz
in
push
jmp
in
push
aam
or
sbb
pop
aam
push
loop
push
mov
lret
lret
enter
vcmpsd
into
test
fidivs
mov
fwait
out
scas
scas
je
push
stos
movsl
movsb
mov
sahf
sub
pop
mov
lds
mov
lea
stos
mov
or
shrl
outsb
jg
add
shr
test
sbb
jo
jo
pop
pusha
insl
insb
imul
mov
aad
mov
les
faddl
push
fstl
inc
inc
inc
xchg
lods
insb
hlt
test
add
dec
dec
mov
ret
das
xor
jg
lds
sub
scas
call
and
and
xor
or
cmpsl
data16
daa
cltd
push
push
lcall
add
push
push
mov
decb
testl
jb
jae
in
in
js
or
imul
add
xlat
sub
jge
stos
rcl
rcrb
int3
and
lock
push
lods
arpl
mov
fdivl
mov
cwtl
cmp
mov
aad
mov
sahf
mov
pushf
or
or
xchg
sbb
xchg
or
or
addr16
cmpl
jle
cmc
lock
and
push
popa
fs
sti
pop
pop
pop
pop
adc
sub
push
push
stos
mov
jl
dec
pushf
popf
shlb
je
inc
xchg
xchg
cmpsl
push
idivl
cmp
ret
insb
lret
xor
sub
scas
daa
sub
daa
mov
fisubs
js
cmc
xchg
mov
adc
jns
enter
scas
push
clc
dec
pop
add
inc
add
in
ljmp
scas
ss
xchg
cld
fnsave
in
jmp
push
lea
fwait
iret
and
fidivs
das
jp
ret
shll
int3
and
mov
mov
sub
jp
mov
std
mov
insl
cmc
mov
push
push
popf
lock
stos
adcb
pusha
call
jecxz
popf
jae
mov
cmp
aam
stos
cltd
jnp
mov
shlb
mov
fwait
mov
jp
movsb
mov
pop
popa
mov
in
test
leave
pop
scas
push
test
aad
cwtl
jnp
dec
sahf
pop
int
nop
jae
inc
xchg
push
lds
ret
dec
icebp
aaa
mov
inc
inc
inc
test
xchg
cmp
je
ficompl
ja
cmpsb
dec
lcall
sub
into
adc
in
les
pop
sbb
pop
push
adc
adc
and
add
adc
add
add
addr16
mov
sti
push
clc
into
pop
repnz
ss
xchg
cmp
xor
jmp
push
fldenv
fcmovnbe
and
fidivs
das
jp
ret
pop
rcl
cmpsl
cmp
insl
gs
mov
sub
add
std
mov
insb
cmc
mov
push
mov
inc
pop
call
nop
jecxz
popf
jae
mov
cmp
adc
add
jp
mov
mov
mov
cmc
movsb
mov
jp
xchg
mov
xor
jb
test
push
je
andl
lcall
inc
lcall
fadds
nop
dec
mov
decl
das
cmpl
adc
flds
and
xor
xchg
xchg
outsb
sub
and
fmuls
or
aaa
dec
xor
call
daa
inc
sub
pop
inc
js
in
or
adc
cmp
cmp
mov
out
out
in
in
jmp
xor
outsb
ficompl
out
bound
fcmovnu
inc
adc
test
clc
xchg
int
outsb
es
sub
jp
rclb
pop
stos
mov
insl
divb
icebp
lods
stos
adcl
cld
inc
fwait
in
sahf
je
test
cltd
out
cmp
adc
xchg
addr16
lods
ljmp
lret
test
lahf
and
jle
cwtl
mov
mov
jbe
mov
loope
movsb
xchg
push
stos
data16
and
adc
pop
push
push
mov
cmpsl
dec
and
or
mov
ljmp
test
cmc
jg
xchg
fucom
es
xor
insb
dec
add
jb
rolb
pop
inc
int3
adc
xchg
and
xchg
and
pop
adc
js
lds
bound
fbstp
mov
loope
inc
cld
shlb
mov
testl
out
lds
mov
ret
shrl
in
mov
fnsave
jle
sbb
aad
cmp
mov
shlb
jno
mov
das
bnd
ret
sbb
add
outsl
stc
mov
push
pop
mov
out
mov
xchg
out
push
aad
mov
push
jb
xlat
xchg
push
mov
lods
lret
mov
movsl
shll
mov
jnp
test
jae
jne
xor
ja
jo
pop
stos
addr16
popa
pop
mov
xchg
sbb
das
inc
cwtl
push
enter
dec
arpl
add
mov
dec
cli
xor
cmp
xor
mov
mov
sub
sub
jnp
clc
mov
aad
sbb
pop
pop
adc
push
adc
cmp
fisubrs
mov
cmp
inc
std
sti
shll
scas
cmp
dec
xchg
out
xor
out
les
mov
add
daa
jecxz
mov
arpl
lds
aam
cmp
adc
and
leave
popf
cs
arpl
add
movsb
clc
mov
add
in
ficompl
ffree
ficoml
aad
mov
int
scas
jg
popl
mov
test
jbe
xchg
cmpsb
mov
jg
xchg
mov
cs
xchg
jp
xorb
test
sub
dec
mov
pop
in
out
xchg
xchg
dec
dec
and
inc
test
jmp
inc
inc
stos
xchg
testb
jge
jns
mov
xchg
and
add
pusha
loope
sub
mov
and
testl
pop
push
adc
jnp
push
pcmpgtw
pop
mov
xchg
in
inc
cld
cli
shlb
lods
cmp
dec
xchg
jb
xor
in
ret
push
fistps
xor
es
mov
xchg
push
jl
sbb
shrl
into
and
push
mov
sub
pop
bound
mov
imul
or
lahf
repnz
lods
adcb
pop
ljmp
mov
push
fstpl
fcoms
rorb
lret
xchg
ret
adc
movsl
push
jp
dec
fists
sub
pop
mov
imul
sbb
lahf
push
movsb
pusha
pop
xor
in
adc
xchg
push
push
daa
mov
mov
inc
inc
sbb
push
das
cmpl
mov
aaa
or
xor
sub
add
jnp
testb
pop
sbb
pop
sbb
sub
push
adc
out
retw
popa
lods
mov
dec
add
mov
push
lahf
call
pop
xor
xor
inc
xchg
jle
das
jmp
mov
in
test
iret
and
fdivl
xlat
sub
ror
movsl
ss
or
mov
enter
adc
cmpsl
sti
mov
mov
rclb
lahf
repz
push
xor
mov
mov
lods
and
mov
adc
mov
mov
cmpsl
and
xchg
mov
jp
cld
pop
jbe
je
mov
lock
push
push
cmpsb
bound
sub
pop
xchg
ja
inc
lcall
push
mov
cmp
inc
inc
inc
jl
mov
shl
cmp
jo
popa
and
inc
mov
cs
push
push
xor
mov
and
pop
cmp
pushf
cwtl
push
adc
push
push
addl
cmp
push
out
inc
jno
xor
std
out
imulb
sub
mov
xor
popa
inc
and
add
sub
pop
xor
and
push
and
sbb
dec
adc
adc
inc
add
or
cmp
cld
fists
add
mov
aad
iret
and
in
dec
xchg
ljmp
mov
test
fistpl
xchg
pop
xchg
pop
jle
lea
cmpl
test
jns
add
jns
fists
mov
leave
jo
xlat
xor
scas
imul
cwtl
push
test
adc
pop
mov
pop
inc
pushf
pop
push
sub
lock
xchg
push
cmpsl
repnz
dec
dec
pop
mov
cli
xchg
test
adc
fdiv
and
das
add
sub
and
clc
mov
pusha
sbb
pop
pop
adc
push
adc
add
dec
or
fisubrs
mov
add
inc
std
sti
shll
push
sub
cmp
jg
jbe
xor
xchg
or
sub
add
sbb
sti
xchg
lret
dec
or
repz
clc
or
lea
add
mov
shl
xlat
lods
movsl
cli
mov
shr
mov
repnz
and
outsb
stos
jne
out
mov
addr16
in
jmp
jmp
xchg
pusha
leave
push
das
daa
js
mov
mov
leave
mov
jle
push
push
jns
jl
fs
jae
jo
testl
bound
in
pop
lcall
lcall
add
dec
movsl
lock
lea
sbb
inc
cwtl
jecxz
sub
jb
scas
and
xor
inc
pop
jae
mov
sbb
lcall
sub
sbb
ficoml
jmp
or
or
mov
stc
cmp
or
stc
pusha
stos
test
pop
xchg
mov
aad
sub
in
dec
jp
and
xor
lods
ds
xchg
mov
xor
jp
lds
cs
add
insl
sti
mov
divb
pusha
out
stos
add
jmp
jmp
aas
imul
rolb
xchg
out
dec
jp
mov
movl
mov
ja
sbb
inc
cmpsl
mov
lods
imul
xlat
mov
mov
jne
inc
cwtl
push
fwait
mov
cmp
dec
mov
xor
jp
arpl
cmp
imul
and
cmpsl
pop
push
out
sbb
lahf
dec
bound
adc
and
cmp
arpl
push
fisttpl
pop
inc
push
push
mov
cli
dec
or
or
hlt
inc
add
add
jmp
scas
cmp
out
xor
sbb
mov
rclb
sub
cmp
fnsave
sbb
jns
ret
inc
loope
xchg
inc
jecxz
aad
fisttpll
testb
data16
mov
mov
std
mov
sbb
fs
cmpl
out
sbb
out
stc
mov
ficomps
fsts
clc
jle
lea
out
jns
mov
xchg
rolb
insb
mov
lds
mov
pusha
mov
outsl
insl
insb
imul
sbb
pop
pushf
pop
shll
pop
scas
push
sub
rolb
cmp
dec
dec
pop
mov
clc
xchg
int
cmpb
adc
fmuls
add
insl
sub
push
adc
and
inc
pop
cmp
xor
imul
roll
push
cmp
test
repnz
add
add
in
aas
sti
sti
stc
clc
negl
cmpsb
xor
out
out
adc
cltd
sub
cmp
mov
fnsave
jle
sbb
aad
or
iret
jno
mov
add
rcl
out
mov
mov
mov
mov
scas
lods
adc
pop
jmp
cmpsb
jnp
pushf
ficomps
dec
ficomps
jbe
xchg
jmp
lea
leave
xchg
daa
divl
cmpb
cmp
mov
arpl
pop
pop
scas
insb
ret
push
stos
data16
add
mov
dec
popf
pop
push
sub
xchg
push
repz
cmp
dec
mov
xor
jp
out
sub
cmp
pop
jb
cmpsl
and
xor
dec
push
aaa
sbb
fs
cmp
imul
pop
sbb
sbb
add
adc
jbe
mov
xchg
incb
ja
imul
shlb
test
cmc
dec
xchg
fbstp
out
in
ret
and
out
add
es
icebp
sbb
fsubr
pop
push
pop
aam
out
adc
xchg
rcr
mov
mov
testb
adc
cmp
cmp
mov
jmp
std
xor
mov
int
aam
mov
fwait
daa
push
cwtl
xchg
xchg
xchg
cld
and
nop
fbstp
insb
mov
addl
repz
js
cli
cmp
mov
loop
imul
ljmp
sbb
cmp
stos
loope
push
dec
dec
dec
movsl
popf
lahf
dec
mov
inc
inc
movb
jns
imulb
cmp
and
xor
sub
xchg
imul
push
pop
add
and
movsb
push
sbb
sbb
imul
sbb
setb
sub
dec
pop
jp
add
lock
decl
clc
pusha
cmp
cmc
shr
out
inc
jns
ljmp
loop
jmp
fistpl
stc
adc
les
roll
iret
add
mov
enter
sub
jge
rorb
lea
cmp
mov
mov
add
scas
and
cmpsl
sub
fstp
jb
jecxz
adc
fwait
shrb
fistl
xchg
nop
clc
lahf
dec
iret
mov
jb
xchg
or
int
jp
andl
ss
test
imul
addr16
inc
push
cmpsl
arpl
out
pop
pop
pop
les
fwait
pop
cmpsl
ds
fst
dec
dec
dec
dec
mov
dec
sub
das
inc
aas
ret
jne
sbb
jnp
stos
popa
xor
and
mov
sub
jae
push
lcall
push
jae
mov
insl
adc
jb
or
mov
sub
out
hlt
inc
add
pushl
in
aas
sti
xchg
cmc
cmc
hlt
pop
mov
xor
aas
in
lret
jmp
aas
jne
out
jecxz
cmp
xor
push
in
or
fcom
pop
lcall
iret
inc
stc
lret
add
dec
sub
mov
mov
or
mov
scas
scas
add
mov
mov
rcr
xchg
mov
fwait
push
lds
xchg
pop
push
nop
lea
lret
mov
outsb
sbb
or
jp
leave
lret
jbe
jge
cmp
outsl
repnz
stos
ficoml
push
mov
pop
pop
pop
ror
xchg
push
mov
dec
mov
inc
inc
popf
xchg
xchg
inc
mov
sub
sub
mov
ds
das
cmp
sub
fsubl
outsl
push
dec
cli
sbb
outsl
movsl
pushf
push
adc
adc
arpl
adcl
mov
and
inc
pushl
sti
xor
jmp
hlt
icebp
icebp
lock
das
test
in
cmp
in
out
cmp
loop
xor
loope
add
aam
push
xchg
icebp
pop
push
into
lret
lret
lret
orb
adc
sar
rcll
inc
cmp
add
lods
and
sub
xor
mov
test
cmc
repz
pop
push
out
jnp
in
or
stc
add
lea
lock
jmp
ffreep
enter
outsb
insb
testb
inc
fidivrl
dec
stc
dec
pop
pop
out
mov
dec
scas
leave
xchg
jle
mov
cmp
dec
mov
or
gs
es
cmp
mov
lods
inc
mov
sub
xor
mov
sub
sub
jne
or
and
jno
add
push
sbb
lcall
lret
or
repz
lds
pop
les
ljmp
dec
dec
dec
daa
into
pop
shl
out
jp
sbb
call
mov
push
out
les
mov
fmuls
aad
cwtl
jecxz
or
dec
rcll
lret
sti
nop
add
mov
iret
jmp
mov
sub
mov
lret
out
and
addr16
fnstcw
int3
lcall
xchg
adc
xchg
std
pop
mov
pop
test
jne
faddl
jno
mov
cmovno
jmp
sarb
jle
scas
scas
loope
js
or
dec
dec
addb
rolb
shlb
pop
lret
dec
lds
aas
mov
dec
xor
mov
inc
stos
je
push
movsb
or
and
frstor
and
jo
pop
push
push
jne
mov
mov
mov
addr16
cmp
push
mov
mov
or
shl
testb
icebp
data16
xlat
inc
leave
in
jmp
pop
hlt
jo
loope
xor
push
iret
leave
fcom
daa
sub
dec
fistps
les
dec
fcoml
dec
push
int3
into
jl
ret
mov
mov
inc
mov
idivl
cld
xchg
xchg
mov
addr16
push
out
sub
cmpsb
daa
mov
xchg
xchg
xchg
pop
call
cmpb
adc
mov
rorb
inc
xorb
ja
scas
add
das
je
mov
imul
cmpsl
pop
dec
cld
push
pop
pop
mov
in
dec
xchg
push
leave
add
int
xlat
nop
push
dec
movsb
mov
sub
xchg
enter
cmp
aaa
mov
dec
jp
jb
mov
scas
sub
and
and
outsl
xchg
adcb
adc
and
cwtl
add
and
jle
add
call
jg
lock
in
in
daa
lods
pop
cmc
jb
data16
push
int
flds
pop
ret
imul
and
ror
inc
aad
ja
or
das
mov
ret
sbb
aas
jg
inc
jle
jg
or
pushf
lock
xor
rclb
cmpsl
movsb
mov
sub
lock
xchg
stos
popa
aad
out
xchg
mov
orl
cmp
cmp
imul
sub
insb
andl
mov
mov
pop
insl
pop
pop
mov
pop
lods
rclb
adcl
inc
push
inc
fwait
inc
push
adc
mov
dec
les
mov
jge
xor
mov
repz
jl
cmp
and
pop
test
pop
sbb
insl
push
sub
push
adc
fidivrs
sbb
ss
ljmp
mov
fisttps
repnz
inc
inc
pop
loope
jbe
lret
in
jecxz
xor
loopne
fnsave
inc
mov
aam
ja
adc
push
mov
mov
enter
cs
sbb
out
mov
fwait
mov
mov
mov
mov
lods
xorb
sub
cmpsb
sbb
xor
mov
sub
loopne
jmp
aad
in
lods
mov
repnz
out
xchg
sub
out
jge
mov
dec
add
jo
test
mov
mov
rep
push
mov
pusha
jne
mov
mov
mov
pop
mov
nop
dec
xor
pop
dec
dec
mov
inc
inc
stos
inc
cmp
cmp
sqrtps
sub
cmc
xchg
xor
sub
sbb
pop
lret
arpl
jbe
sub
push
rorb
pop
pop
mov
sti
inc
rorl
push
addr16
inc
mov
or
add
add
std
sti
adc
sub
testl
jmp
mov
xlat
mov
call
aad
sub
into
int
or
enter
pop
les
cld
mov
mov
mov
mov
aas
ss
cmpsl
lods
lods
adc
data16
testl
loop
icebp
ljmp
jecxz
lea
mov
fcompl
addb
mov
jnp
mov
mov
mov
mov
insb
imul
cmc
lods
push
les
xor
fistps
jb
aad
adc
repz
dec
dec
mov
cli
pop
flds
aas
cmp
lods
sysexit
dec
hlt
arpl
cs
test
lods
lret
and
and
ss
pusha
sbb
sub
jns
femms
or
cmp
xchg
mov
mov
dec
test
in
repnz
pop
fsubrl
out
call
jo
jge
xor
push
aad
shr
mov
adc
pop
adc
pop
sbb
sub
add
shrb
adc
push
mov
mov
add
loopne
scas
or
je
xor
lret
stos
sti
sti
cs
lds
sub
flds
xchg
push
jnp
std
xchg
nop
inc
out
dec
iret
mov
fidivl
xchg
push
inc
hlt
lcall
ja
pop
insb
mov
sub
insl
ret
inc
push
dec
pushf
mov
cmp
pop
stos
mov
inc
dec
cltd
push
mov
movsl
lods
and
int3
or
xor
inc
cmp
aaa
cmpl
push
lock
xchg
outsl
add
sub
test
mov
dec
hlt
adcb
adc
adc
xchg
add
adc
dec
xor
mov
call
stc
push
div
imul
in
jbe
and
pop
lock
sub
and
push
enter
loope
iret
xlat
dec
call
aam
out
add
ret
rorb
push
or
push
mov
mov
int
sub
pop
scas
les
mov
cmpsb
mov
es
adc
pushf
mov
lret
and
xchg
test
jle
in
mov
in
dec
jecxz
dec
inc
or
mov
jns
mov
test
pop
jb
jo
repnz
imul
bound
scas
jmp
loope
pop
iret
xchg
mov
enter
mov
outsl
pop
into
aaa
inc
inc
inc
lods
dec
add
inc
sub
adc
add
xor
cwtl
repz
outsl
sub
in
sub
daa
mov
fstps
push
sbb
sbb
lds
rcll
divb
iret
xchg
and
add
je
inc
jno
inc
outsb
or
jnp
hlt
repz
in
xor
aad
ljmp
jecxz
pop
dec
inc
sahf
pop
fadd
push
inc
lock
sbb
mov
adc
mov
enter
cmp
sbb
pushf
mov
leave
cs
les
outsl
push
lock
lods
sarl
inc
dec
jmp
out
fimuls
pop
pop
fistps
fcoms
dec
rorl
inc
lret
cmpsb
in
sti
inc
ret
subb
enter
arpl
jb
jl
sub
mov
fs
jp
mov
pop
pop
mov
inc
imul
dec
xor
or
pop
xor
jp
jle
jbe
shll
xchg
iret
outsb
sub
pusha
and
bound
je
pop
sbb
xchg
mov
adc
adc
pop
adc
adc
mov
sub
sti
cli
dec
dec
dec
sub
pop
xor
add
inc
inc
jbe
jecxz
dec
aad
in
insb
daa
aad
push
out
inc
js
sbb
xlat
dec
loop
dec
fstpt
push
nop
fists
rclb
or
adc
pushf
cmovnp
mov
mov
mov
sbb
sbb
lods
and
ljmp
mov
into
fistps
movsl
sbb
xchg
xchg
ret
mov
ljmp
xchg
cmp
addb
out
rol
mov
jmp
mov
jg
imulb
repz
pusha
dec
nop
pushf
pop
inc
cmpb
jno
mov
arpl
cs
test
daa
inc
mov
and
fwait
outsb
repz
mov
gs
daa
es
push
sbb
sahf
mov
adc
push
adc
sub
or
add
dec
cld
jno
stc
outsb
add
inc
xlat
repz
sbb
jno
adc
addr16
jae
in
loop
ds
arpl
fcmovnu
dec
lret
aad
rclb
adc
sub
xchg
dec
lods
adc
aas
mov
mov
cmp
xor
add
push
mov
sahf
div
xchg
sbb
cmpsl
xchg
or
std
mov
js
je
mov
cmovns
cld
mov
fcmovnu
shrb
mov
int3
or
iret
xor
jno
cmc
sub
stos
addr16
popa
jecxz
jbe
scas
pop
iret
imul
adc
or
adc
dec
mov
test
jae
cltd
clc
jge
mov
mov
ja
xor
mov
cmp
dec
mov
das
in
sbb
scas
and
sbb
pop
sbb
xlat
push
adc
xor
push
or
into
data16
pop
xor
add
push
mov
dec
inc
jnp
ds
out
out
in
loope
add
xor
sbb
aad
mov
lods
ret
lret
adc
rcrb
xor
push
or
ljmp
lods
and
sar
jmp
out
add
cli
cld
pusha
icebp
xchg
mov
xchg
or
mov
flds
or
pop
jge
mov
pop
js
jne
test
mov
out
outsl
outsb
insl
arpl
sub
int3
dec
gs
push
pusha
jecxz
push
pop
sbbl
cmp
push
push
push
rclb
popa
aad
inc
int3
lods
inc
inc
rorb
pop
mov
and
jns
xchg
cld
cmc
xchg
jmp
adc
jns
push
dec
dec
pusha
sbb
pop
insb
adcb
adc
pushf
or
ret
push
pop
fistpl
push
push
addr16
gs
clc
into
push
cmpl
hlt
rcrl
pop
or
insl
ror
mov
xor
inc
fsubs
sub
jmp
sub
dec
mov
leave
mov
sbb
shlb
mov
test
scas
and
and
push
push
lods
sahf
adc
xchg
sbb
and
and
aam
fstpl
rcrb
out
adc
ja
jg
jl
outsl
jns
mov
mov
dec
in
out
push
fcompl
popa
pusha
mov
push
pop
push
mov
mov
dec
mov
inc
inc
inc
mov
dec
cmp
sbb
ss
fs
jbe
stos
inc
popf
xchg
and
or
lahf
fnop
pop
fsts
mov
leave
push
rclb
pop
cwtl
stc
add
add
pushl
sub
inc
hlt
repz
bnd
fsubrp
jmp
jmp
pop
lock
jmp
fistpl
add
movmskps
inc
jl
int3
inc
leave
fiadds
lds
lods
rol
int
loopne
mov
xchg
adc
roll
ja
add
xchg
cld
xor
sti
sti
mov
cs
fwait
lcall
pop
push
mov
add
movsb
xchg
popf
cmp
aam
addr16
jle
jnp
cmp
lret
pop
pop
jno
outsl
mov
js
jne
fnstenv
mov
pop
ficomps
gs
pop
shrb
push
ret
lahf
or
aas
mov
jns
lahf
incb
jle
nop
and
testl
xor
sub
sub
and
push
mov
and
push
adc
cli
xor
shlb
cmc
sub
stc
inc
add
adcb
negl
mov
repnz
fdiv
mov
cmc
jae
inc
inc
aas
inc
movsl
ss
leave
add
aad
cs
fdivrl
int
fcoms
mov
cmp
dec
add
mov
cmp
mov
scas
xor
movsb
stos
aaa
mulb
repz
jnp
out
in
repnz
sbbb
xchg
xchg
xchg
xchg
movsb
pop
jp
mov
push
dec
fldl
int
jle
jl
lahf
mov
pop
mov
jae
lret
lret
insl
subb
imul
in
bound
loopne
push
pop
scas
push
int3
pop
cmp
dec
les
cmp
pop
inc
inc
inc
lahf
sahf
rcll
mov
jnp
mov
inc
mov
xor
lods
out
test
jae
sbb
push
pop
push
jle
fsts
popa
clc
xor
or
xchg
test
nop
popa
adc
test
cli
sti
cli
push
dec
dec
dec
fidivrs
shl
icebp
jl
jmp
pop
clc
js
in
out
dec
jl
and
xor
iret
stos
inc
fisubl
rcl
rcl
sub
daa
and
push
or
ret
dec
inc
mov
cmp
pushf
jns
mov
sbb
test
std
idiv
testl
or
xchg
xchg
cli
or
mov
je
pop
mov
jg
cmpb
aam
arpl
ja
add
sti
scas
jle
push
imul
mov
ja
fsubrs
cmp
pop
dec
outsl
adc
push
lcall
xchg
push
cmp
movsb
adc
inc
inc
inc
test
mov
xchg
cmp
mov
cs
test
jle
cmpsb
add
and
xchg
xor
mov
orl
fists
vmread
cltd
nop
push
push
pop
push
pop
push
pop
push
ljmp
idivl
cmp
adc
out
push
or
shl
mov
in
jecxz
gs
xor
xor
mov
pop
push
int3
into
ds
pop
push
mov
cs
add
mov
cmp
or
or
xchg
mov
stos
stos
xor
in
adc
pushf
fwait
add
jge
pusha
xchg
xchg
cli
nop
sbb
mov
fstp
insb
pop
pop
cmpb
jns
jmp
push
std
jae
je
fistl
mov
mov
imul
pusha
popa
pusha
mov
mov
inc
or
push
xlat
pop
xchg
push
sarb
dec
dec
dec
dec
mov
or
or
enter
ss
sbb
sub
and
and
imul
in
push
jg
mov
or
icebp
fs
add
dec
incb
mov
cmc
div
pop
mov
xlat
out
mov
jne
loop
jecxz
cmp
aaa
xor
push
mov
fldenv
aad
or
int
into
int
fs
or
sbb
sub
dec
inc
mov
or
or
cmp
stos
xor
stos
sbb
xor
mov
sahf
in
test
cltd
cwtl
add
nop
in
in
jae
arpl
xor
or
jp
jmp
pop
stc
jno,pt
fldcw
icebp
addr16
mov
sbb
pop
pop
jmp
cltd
push
mov
push
dec
mov
adc
adc
scas
inc
iret
cmp
cmp
mov
ret
xor
outsb
mov
daa
outsb
jmp
push
jmp
sbb
adc
adc
fs
jb
or
xchg
dec
add
je
popl
fs
mov
std
shl
pop
icebp
jl
jmp
cmp
cmp
sbb
loope
arpl
push
sub
rcl
rcl
cmp
xchg
adc
sbb
enter
dec
mov
xor
or
das
int
sub
popf
mov
jae
xor
cmpsl
stos
sbb
mov
lahf
sub
movsb
stc
arpl
adcb
stos
xchg
xchg
nop
loop
in
orl
cmpb
ret
out
mov
in
mov
jmp
xlat
mov
scas
imul
pusha
data16
fsubrs
adc
pop
pop
fistps
jb
popf
inc
cmpsb
loop
cmp
ficoml
mov
fwait
inc
mov
sub
cmp
add
jge
stos
jno
sbb
arpl
adc
sub
daa
jg
mov
or
pop
push
xchg
loope
sbb
inc
loope
adc
lahf
xchg
clc
or
or
sbbb
pop
jl
add
or
push
fsin
std
add
in
xorl
outsl
and
sub
bound
out
insb
into
loop
loop
push
fists
inc
shll
shll
push
mov
int3
lret
lret
sbb
cmp
ret
cmp
test
aas
jg
cmp
mov
in
push
les
jno
rclb
jbe
ljmp
mov
cltd
lcall
or
jo
mov
add
xlat
jle
stc
imul
jno
lock
jo
outsb
jl
jns
push
imul
pop
pop
rclb
fnstsw
push
push
push
mov
sahf
xor
sahf
aam
sub
mov
mov
inc
cmp
xor
mov
push
out
mov
mov
lods
gs
and
jne
sbb
push
fldenv
popf
mov
adc
and
add
sti
pop
jne
xor
jo
jge
sub
js
sub
jae
inc
cld
jno
ljmp
jecxz
mov
mov
stos
aad
cmp
xchg
int3
lret
lret
add
shlb
test
mov
mov
sub
hlt
mov
pop
scas
lods
lods
cs
and
stos
mov
adc
clc
pop
fcoms
nop
test
push
mov
les
inc
mov
ds
jae
loope
xor
insl
insb
cmpsb
sub
cwtl
fisttpl
popa
aam
cmpsb
movsl
shlb
int
lahf
sahf
lret
lret
dec
cmp
dec
xor
inc
sub
adc
outsl
add
mov
inc
mov
pushf
cmp
mov
in
sbb
ficomps
add
jnp
xlat
push
psubw
je
rorb
repnz
leave
inc
add
repnz
cld
jecxz
ret
dec
lods
je
xor
js
insb
add
out
cmp
loope
ficoms
imul
mov
push
xchg
ficompl
rorl
adc
mov
ret
mov
mov
cmp
std
cmp
xchg
movsl
cmpsl
cmpsb
testb
and
xchg
fwait
lcall
pop
push
mov
adc
mov
adc
insl
addb
jge
nop
jbe
mov
xchg
jmp
pushf
xor
imul
mov
ljmp
jecxz
push
push
push
mov
dec
dec
mov
inc
xchg
stos
dec
or
add
cmp
xchg
sti
hlt
das
mov
push
sbb
test
and
or
mov
xchg
ficoml
rcrl
xchg
or
xchg
adc
repnz
add
test
jno
cli
fstpt
jnp
icebp
lock
and
inc
cs
jbe
fistps
in
xor
adc
push
fsubr
aas
lds
aam
lcall
std
mov
xor
xor
or
das
mov
mov
jle
repnz
xchg
imul
sub
nop
add
dec
push
lahf
mov
fwait
adc
xchg
xchg
or
jne
dec
mov
jnp
stos
push
lds
int
jp
loope
mov
sub
lret
push
fs
in
js
pushf
iret
dec
inc
jge
fsubs
cwtl
push
loope
lret
dec
sahf
xor
mov
inc
inc
inc
leave
mov
in
aaa
nop
mov
mov
mov
out
and
mov
sub
pop
adc
push
cld
jns
pop
hlt
icebp
int3
or
mov
adc
inc
ljmp
xchg
cmp
add
aad
cs
cltd
daa
shlb
out
xchg
and
sub
mov
mov
xchg
in
xchg
sub
int3
notb
fisttpl
mov
mov
cmp
iret
mov
pop
in
jl
jmp
mov
sbb
dec
cwtl
xchg
pusha
sbb
outsb
mov
xchg
xchg
or
inc
lea
jno
cmp
add
pop
xchg
mov
mov
imul
pop
jecxz
rcrl
sbb
pushf
inc
stos
movsb
xchg
lds
dec
popa
repz
jl
dec
pop
test
ds
cmp
ss
ss
daa
sub
jle
jl
cltd
pop
and
js
popa
sbb
adc
sub
push
adc
xchg
testb
push
pop
pop
push
xor
push
cs
cmp
subb
mov
xchg
sahf
insb
jecxz
loope
pushf
xchg
fisubl
mov
aad
jle
push
jg
into
int
call
aad
addr16
fmul
stos
mov
mov
push
mov
pop
push
icebp
scas
xchg
stc
btr
sahf
sub
xchg
movsb
sbb
xchg
xchg
nop
sbb
popa
mov
test
iret
aad
xchg
imul
add
divb
jle
cmpsl
insl
imul
cmp
mov
pusha
jne
dec
mov
fdivrl
push
push
fisubrs
adcb
popa
mov
or
cmp
cmp
ja
mov
cmc
xor
adc
and
cld
sbb
sbbb
ss
adc
sahf
or
or
or
pop
add
add
sti
cli
stc
dec
test
fwait
repz
sub
jno
ljmp
addr16
loopne
fstl
inc
ljmp
ljmp
ret
xor
dec
inc
insb
mov
mov
insb
mov
mov
sbb
xor
je
mov
push
js
cltd
cwtl
and
xchg
loop
adc
repz
push
lret
insl
sbb
addl
sub
loope
je
add
in
insl
loop
push
sub
addr16
dec
enter
pop
shlb
fists
push
push
movsl
cmp
and
test
or
int
inc
inc
inc
xchg
inc
mov
ds
dec
sub
mov
xor
xor
mov
xchg
aam
push
and
js
push
fdivrl
je
ficoml
adc
jbe
sbb
or
fildl
jnp
sti
add
push
push
cld
adc
sub
clc
jl
push
dec
icebp
fcmovnb
and
jae
sarl
loop
imul
xor
xor
arpl
cmp
lcall
pop
mov
dec
inc
and
mov
out
or
and
push
and
add
sub
mov
and
fwait
lcall
xchg
xchg
jp
popa
mov
js
or
addl
jno
jp
loope
jbe
pop
fdivs
jo
xor
shll
fisubrl
dec
sub
pop
dec
les
and
mov
lds
cmpsb
shrl
int
inc
inc
inc
inc
mov
nop
int3
ret
test
aaa
in
sahf
xor
xor
mov
cs
scas
nop
and
and
or
enter
xchg
or
mov
sbb
outsl
outsb
push
daa
gs
push
push
insb
push
popa
or
cmp
dec
insb
add
or
mov
cmp
and
call
inc
jmp
loop
sub
imul
fdivp
adc
lahf
ss
sub
enter
and
and
mov
mov
mov
shl
mov
mov
cli
mov
cwtl
or
sahf
imul
test
cli
cli
or
shll
sub
xchg
xlat
mov
push
lea
fcmovnbe
or
insl
push
ds
ds
jo
pop
pop
mov
push
lods
addr16
in
test
dec
pushf
pop
pop
pop
mov
pop
outsb
test
push
stos
mov
xchg
sub
mov
cmp
mov
push
mov
ret
das
xor
xchg
orb
sub
arpl
es
xchg
out
xchg
cmp
adc
fbld
xchg
push
or
mov
in
pop
rolb
incl
ds
testb
cltd
icebp
lock
fs
push
jl
jmp
stc
aaa
adc
loopne
and
or
aad
mov
adc
pop
adc
fbstp
shlb
std
mov
mov
mov
aam
lock
cld
xchg
addr16
cmpsl
sub
fcoml
jno
mov
xchg
cwtl
xchg
xchg
or
and
inc
into
mov
addb
sarb
enter
jae
lret
enter
pop
scas
imul
dec
dec
cmc
arpl
lea
das
lods
movsl
stos
test
push
popf
mov
dec
dec
loopne
inc
pop
fdivl
test
aaa
cmp
mov
sarl
sbb
adc
and
pop
xchg
out
xchg
cmp
cmpsl
sahf
pop
adc
adc
mov
popa
popf
xchg
push
or
or
mov
jmp
sar
incb
cmp
fsubrl
lock
dec
inc
in
add
sub
out
lods
int3
inc
jb
loopne
xor
icebp
das
or
fsubrs
xchg
aam
rcl
and
push
adc
lret
sbb
inc
xchg
dec
inc
add
or
mov
mov
cmpsl
lods
mov
test
arpl
mov
insb
sub
in
cwtl
cwtl
cwtl
sbb
xchg
xchg
stos
sbb
sbbl
loopne
mov
adc
in
jge
jge
pusha
push
mov
inc
je
lret
divb
enter
push
scas
jo
xor
pop
aam
ljmp
ds
push
push
stos
aad
cmpsl
ret
popl
lret
pop
mov
mov
cmp
adc
mov
pop
xchg
xor
xor
sub
fiadds
cmp
arpl
sub
mov
push
sub
pinsrw
or
push
xor
dec
add
pushl
adc
cmp
inc
cmp
jle
mov
mov
outsl
adc
fnstsw
filds
mov
fcmovbe
and
rclb
icebp
add
xor
push
dec
pop
mov
mov
aas
add
push
xchg
scas
jp
test
sub
mov
inc
js
fwait
cmpb
xchg
xchg
and
xlat
nop
fbstp
xor
outsl
int
addb
jl
loop
push
mov
outsl
jo
xlat
outsb
outsl
insb
imul
out
jb
aad
mov
ficomps
push
mov
dec
dec
lcall
sub
push
aas
roll
enter
ss
xor
mov
insb
sub
fwait
in
or
mov
and
sbb
outsl
dec
pop
sbb
xchg
lcall
inc
out
popa
xchg
decl
cmc
pushl
std
sti
jo
pop
imull
cmc
hlt
repz
jp
out
out
in
in
jbe
inc
sbb
out
mov
loop
fst
int3
jge
adc
mov
es
outsl
enter
xchg
ret
ret
mov
mov
mov
jo
hlt
mov
add
test
aad
mov
popf
adc
or
xchg
pop
push
or
mov
call
inc
pop
ret
decl
jge
jbe
xor
imul
jo
imul
popa
insl
loop
pusha
pop
pop
push
pop
push
push
push
loopne
pop
dec
dec
dec
mov
js
inc
ror
push
aas
inc
aas
xchg
mov
jp
xchg
scas
bound
mov
sub
lods
cs
and
jb
lods
movsb
sbb
sbb
add
adc
or
or
add
push
push
insl
or
inc
add
cli
push
dec
loopne
mov
hlt
xorb
out
in
cmp
out
ss
scas
loop
arpl
pop
sbb
push
icebp
ja
adc
cli
stos
push
lret
ds
push
cli
lds
inc
cmpsl
ret
fisubs
pop
into
dec
or
or
jmp
pusha
mov
cmc
xchg
or
sbb
loopne
adc
xor
enter
pop
cmpb
mov
decl
jae
pop
mov
imul
imul
jnp
fs
loop
pusha
pop
scas
pop
jno
mov
test
jo
popa
xchg
jp
dec
addb
cmp
inc
shll
lahf
into
outsl
xor
jns
inc
pop
pop
outsl
sub
scas
cmp
je
cmpsl
xor
icebp
lahf
adc
pusha
mull
lock
arpl
add
push
call
sub
test
dec
inc
fstpt
xor
add
out
inc
cmp
xor
popf
cwtl
xchg
repz
xlat
or
sbb
ljmp
fistps
enter
ret
ret
dec
pop
push
mov
shr
mov
or
mov
mov
test
xor
lock
mov
lcall
xchg
xchg
cli
jne
rorl
mov
enter
add
jl
jp
push
std
xorl
ret
vpsubd
fbld
addr16
pusha
pusha
pop
scas
pop
jb
mov
mov
dec
arpl
lea
mov
jae
inc
aas
adc
adc
dec
andl
xchg
inc
movsb
pop
jo
scas
push
sub
popw
sbb
jecxz
pop
outsl
mov
sbb
dec
or
sbb
movsb
push
dec
inc
pushl
push
add
adc
div
repz
and
out
ljmp
adc
loope
cld
xchg
adc
mov
pop
roll
pop
push
enter
mov
imul
sbb
mov
jg
mov
add
lods
stos
cli
xchg
mov
sub
mov
mov
pop
mov
mov
inc
mov
addl
int
or
cli
shlb
jo
jo
push
inc
repnz
jmp
sahf
lock
out
xchg
popa
xchg
mov
stos
lods
stos
mov
movsl
movsb
dec
and
dec
dec
orl
int3
rorb
inc
mov
cmp
cmp
xor
cltd
mov
adc
sub
test
jge
push
sbb
sbb
movsb
fwait
jno
adc
fcoms
push
repz
or
and
push
add
std
addr16
dec
loop
jg
idivb
pop
jge
jge
out
aas
ds
jns
sub
cmp
loop
dec
fists
loopne
fcoml
popf
bound
ficomps
aam
in
shl
pop
decb
int3
sbb
and
shrl
lea
mov
cmp
mov
mov
xchg
fimuls
aaa
cs
movsl
movsb
imul
in
test
cltd
cwtl
ljmp
cli
nop
fidivs
adc
adc
jns
or
test
jns
enter
mov
inc
xlat
insb
mov
sub
in
lock
movsb
mov
push
push
push
mov
pushf
xor
or
popf
aas
ds
cmp
pop
lods
lock
pushf
mov
pop
or
xchg
scas
arpl
leave
adc
and
sti
out
sbb
sbb
pop
adc
ljmp
dec
push
in
ret
lret
add
push
mov
popa
in
sarl
cmc
dec
fistpl
mov
je
shll
out
inc
fistps
mov
and
push
icebp
addr16
les
es
add
adc
push
mov
xor
ds
sub
cld
pop
rorb
testl
mov
aaa
stos
mov
cmc
mov
stos
test
ljmp
add
xchg
lods
mov
xchg
xchg
mov
or
add
sbb
insl
lock
push
mov
fcomi
stos
mov
push
xchg
xor
push
lock
test
into
mov
pop
mov
das
xchg
lahf
pop
aas
addr16
mov
mov
inc
enter
sahf
xor
xchg
cmp
cmp
cmp
xor
das
cs
lods
xchg
sub
imul
stos
pop
push
or
out
push
mov
adcb
icebp
push
adc
jecxz
push
or
iret
rorb
pop
jo
insb
and
inc
add
mov
sti
cli
jl
sbb
icebp
lock
in
jmp
sar
outsl
out
in
das
shlb
ds
pushf
mov
pusha
rclb
iret
into
pop
adc
and
xor
pop
push
mov
jg
mov
cmpb
mov
mov
sbb
cmp
popf
push
stos
cli
xchg
sub
movsl
daa
scas
pop
addr16
lahf
pushf
lcall
xlat
xchg
clc
sbb
sbbl
mov
outsl
fdivs
addb
ret
jno
jl
js
loopne
add
push
mov
imul
hlt
stos
cmp
sbb
adc
pushf
pop
test
pop
push
push
fisttpll
xchg
sbb
dec
mov
dec
aam
xchg
es
cld
pop
mov
xor
inc
lcall
insb
repnz
push
and
and
and
movsb
pop
add
movsb
std
push
or
and
add
add
repz
cld
sti
arpl
add
div
or
xor
fldcw
in
in
jmp
outsl
pop
out
in
dec
ror
and
mov
fcmovnu
fs
dec
rcl
shll
pop
push
inc
int3
lret
lret
dec
sti
ret
mov
dec
aas
lods
mov
mov
or
xor
mov
xchg
out
daa
mov
fwait
lcall
xor
lahf
xchg
jnp
adc
xchg
addl
rcr
xlat
inc
cmp
cmpsl
xor
vcvtss2sd
push
dec
sbb
fs
cmp
jl
cwtl
mov
mov
xor
dec
ret
arpl
mov
sub
dec
sub
cmp
dec
ret
test
lcall
mov
andb
push
sbb
add
data16
cmp
adc
popf
xchg
outsb
or
or
lock
sbb
sti
cli
dec
dec
loopne
lods
cmc
hlt
dec
inc
jle
dec
in
in
jmp
jmp
and
es
fcomp
push
clc
fistl
fsubr
pop
lds
aam
pop
in
iret
int
cld
sti
or
sti
xchg
jg
iret
mov
lahf
mov
or
add
aas
arpl
cmp
sbb
repz
mov
pop
adc
mov
cld
jno
mov
outsl
or
sbb
inc
fadds
ret
xlat
jne
sub
sub
imul
insl
push
push
stos
add
fs
xchg
movsl
push
mov
jmp
push
cmpsb
loop
xor
dec
lahf
dec
ret
mov
inc
mov
je,pt
mov
cmp
mov
sub
scas
cmp
std
xor
sub
cmp
push
movsb
pop
sbb
inc
lahf
sbb
lea
adc
adc
push
or
or
dec
idivl
jmp
cs
hlt
repz
hlt
dec
fsts
aad
push
push
in
lret
aas
xchg
loopne
xor
lcall
mov
pusha
push
stc
int
int
sbb
dec
or
sbb
mov
scas
adc
lods
lods
xchg
xor
test
shll
push
popf
mov
in
sub
cwtl
xchg
sbb
int3
out
cltd
lahf
adc
nop
mov
arpl
xor
lret
or
jne
jae
jp
pop
cltd
xor
clc
out
stc
inc
data16
outsl
movsl
popa
mov
mull
pop
pop
jecxz
dec
in
in
push
push
cmpsl
mov
dec
dec
cltd
xor
inc
inc
add
cmpl
ret
cmp
mov
xor
repnz
mov
xchg
sub
es
jnp
or
mov
pop
pop
outsl
cwtl
adc
imul
or
inc
sti
push
mov
pop
add
cmp
or
sti
div
pop
hlt
hlt
repnz
jge
push
loop
ljmp
in
cmpsb
in
dec
cmp
jo
fcom
popa
setbe
push
pop
sti
inc
lock
lret
cmp
les
xchg
in
mov
mov
mov
mov
leave
cmp
scas
xor
jb
movsl
in
faddl
xchg
lahf
sahf
adc
xor
pop
cwtl
sbb
xchg
or
mov
ss
jle
int
mov
jns
add
jbe
mov
cmc
fwait
insl
insb
imul
bnd
mov
pop
stos
inc
sbbl
pop
nop
dec
xor
or
lahf
lret
mov
aas
hlt
scas
cmp
cmp
jg
xchg
xor
sub
mov
dec
test
xor
sbb
jge
pop
push
adc
test
cmc
push
int
or
add
add
cli
push
popa
add
cmp
fsubl
icebp
lock
jae
inc
cli
outsb
popl
out
dec
out
and
aaa
pushf
xor
xor
pop
gs
es
into
lret
mov
xchg
push
dec
sbbl
ljmp
outsb
xor
jae
mov
jmp
jmp
movsb
repz
pop
pushf
fwait
sbb
jmp
mov
dec
mov
sti
mov
xorb
mov
push
mov
pop
xchg
fidivs
outsb
jecxz
aam
jne
push
les
pusha
pop
loop
jns
and
pop
push
push
loopne
jae
add
dec
dec
pushf
mov
inc
sahf
leave
add
test
cmp
cmp
aaa
ss
xor
das
test
adc
in
and
das
movsb
int
sbb
push
cmp
movb
push
gs
hlt
ror
or
mov
adc
jb
sti
mov
clc
div
cmpl
icebp
lock
xlat
push
stos
in
jmp
outsb
test
pop
sub
push
loopne
fisubs
sub
pop
add
aad
pushf
ficoms
jg
lret
push
dec
lock
vunpcklps
in
mov
jae
cld
mov
fs
scas
cmp
aad
stos
test
movsb
mov
push
push
pushf
fwait
lcall
xchg
xchg
jmp
push
call
mov
leave
stos
xor
mov
sbbb
jno
pop
jg
insl
insb
rcl
jae
dec
inc
and
mov
loopne
pop
pop
push
loope
enter
fnstsw
cmp
inc
xchg
popf
into
mov
aas
ds
sar
scas
imul
jmp
push
jg
in
sub
andb
scas
imul
pop
jae
loope
push
add
adc
xchg
adc
rorl
or
jbe
pushl
andl
fisubs
repz
jne
inc
bound
push
stc
aas
out
dec
andl
adc
cltd
pusha
push
repz
loopne
push
jle
mov
jg
rcrb
jge
das
enter
ss
mov
scas
mov
mov
lcall
int
lahf
sahf
not
pop
repz
lahf
or
popl
lea
mov
cmp
add
std
xlat
hlt
sbb
cmpl
lahf
jne
nop
xlat
push
js
imul
jecxz
data16
out
pop
pop
pop
mov
pop
iret
imul
push
push
rcll
jb
mov
dec
dec
sahf
scas
out
xchg
std
cld
aas
ds
sar
lods
dec
lea
sbb
jmp
sub
popf
push
pop
sbb
xor
nop
sub
adc
int
packuswb
mov
add
add
std
jns
cli
scas
imul
xor
in
in
inc
outsl
test
in
loop
xchg
pop
fstp
fcmovnu
dec
jmp
aam
push
xchg
sub
adc
xchg
leave
leave
mov
sarb
mov
mov
cmp
mov
scas
cmp
shll
lods
or
lods
in
out
es
cwtl
xchg
and
mov
ja
and
xchg
les
jnp
cmp
stc
add
repz
imul
arpl
mov
pop
imul
les
push
btr
dec
mov
inc
sahf
add
xchg
mov
cmp
test
xor
in
xor
xchg
daa
fcoml
jne
bound
add
jno
outsb
and
inc
sub
inc
pop
add
add
push
jecxz
mov
testl
push
lock
in
jmp
pop
call
inc
sahf
loop
cmp
jmp
daa
fcmovu
xlat
popa
pop
dec
rcl
ror
push
dec
int3
lret
lret
or
ret
ret
inc
xor
mov
mov
mov
push
sbb
testb
in
test
sbb
out
mov
lea
sti
mov
movl
rorl
je
ud1
insl
jl
xchg
data16
pop
mov
lahf
pop
call
push
lods
movsb
cmp
add
aam
fnstsw
inc
inc
cwtl
nop
daa
in
cmp
cmp
insl
mov
xor
sbb
mov
and
sub
mov
and
lods
mov
adcl
adc
pusha
not
lret
xchg
dec
add
mov
inc
testl
in
repz
jle
fwait
in
jmp
ja
adc
in
dec
sti
in
and
das
int
fcmovnu
sub
pop
rcl
sarb
and
dec
lea
dec
stc
mov
scas
push
dec
inc
dec
mov
mov
push
sbb
add
lods
ret
in
test
mov
mov
and
and
ficoml
nop
ja
lea
test
jg
add
shr
jg
mov
jno
or
insb
imul
out
arpl
int3
ret
mov
pop
pop
pop
inc
jmp
push
push
lods
fcoms
stos
les
dec
mov
inc
inc
inc
int3
mov
ds
cmp
inc
mov
xor
lahf
pusha
bound
test
sbb
push
outsb
add
push
adc
adc
xchg
sub
enter
sbb
jg
div
cmc
loopne
jle
xor
in
shr
jae
and
loop
sbb
out
fcmovu
das
inc
jecxz
sbb
mov
daa
push
mov
dec
rol
push
sarb
pop
movsb
repnz
mov
mov
cmp
pop
mov
stc
setbe
fwait
sahf
popf
repz
movsb
fcompl
xchg
jmp
push
call
mov
addl
cmp
jp
add
jmp
je
rep
xchg
jg
push
push
push
mov
fs
dec
pop
pop
pop
enter
mov
xchg
dec
push
push
les
cmp
shlb
inc
inc
xchg
ror
imul
aas
bnd
cmp
cmp
sbbl
cs
cmp
outsb
adc
aad
sbb
and
movsl
int3
adc
push
iret
addr16
or
or
dec
add
add
test
std
cld
gs
fwait
jb
cmc
jns
dec
add
out
in
in
ljmp
jno
jp
inc
xor
fisubrl
rol
aad
rolb
int3
mov
test
enter
mov
lret
inc
inc
dec
mov
mov
mov
sbb
add
pop
movsb
stos
test
movsl
movsb
cs
sub
xchg
fwait
lcall
lea
lea
test
les
jnp
int3
add
jb
add
inc
in
imul
pushf
lock
pop
bound
movsl
dec
scas
ljmp
cmpsb
mov
mov
jl
dec
rcl
jp
inc
inc
stos
or
cmp
les
jp
test
pop
jo
jl
bound
imul
sbb
push
push
xor
pop
sbb
push
unpcklps
xchg
cli
repnz
or
push
push
insl
adc
das
std
cld
mov
div
cmc
inc
pop
iret
sti
xor
fsubrs
cs
je
out
jecxz
out
mov
jmp
aam
adc
cmp
mov
int
dec
fidivl
sbb
inc
mov
and
loope
mov
or
insl
add
cmpsl
cmpsb
fiadds
mov
pushf
push
or
mov
inc
mov
adc
cwtl
or
mov
xor
jl
lods
js
xchg
ss
mov
cmp
xor
fnstenvs
mov
adc
ficomps
mov
push
cwtl
jp
push
dec
dec
xchg
xchg
ret
mov
jbe
jg
cmp
xor
mov
cmp
sub
and
sbb
and
fwait
pop
adc
sahf
push
or
jb
or
push
mov
pop
push
push
call
mov
js
mov
in
in
je
adc
sbb
gs
inc
stos
loop
xlat
es
pop
push
sbb
lret
lret
cmp
ret
ret
roll
xor
repz
mov
fcompl
scas
repnz
push
mov
jge
lahf
sahf
not
pop
repz
loopne
xchg
nop
loopne
add
xchg
dec
xchg
outsl
mov
mov
enter
loop
movb
pop
ret
sub
stc
mov
icebp
lds
bnd
scas
pop
shlb
and
insb
push
lahf
popa
sarl
push
xchg
inc
inc
inc
roll
dec
dec
cmp
cmp
xor
stos
inc
sarl
stc
xor
popa
shlb
pop
push
sbb
add
push
adc
rolb
int
sbb
mov
add
push
jae
in
xabort
jp
add
inc
add
daa
dec
cld
push
mov
pmulhw
jecxz
loop
loopne
bound
dec
fcmovu
fsubs
pusha
in
loopne
lods
adc
inc
flds
aad
movsb
vfnmsub231sd
dec
cmp
and
pushf
sarl
scas
cmp
fldcw
scas
call
insb
sahf
popf
pushf
push
setns
xlat
xchg
jmp
mov
ficoms
push
aam
test
loope
jge
jecxz
cmpb
jno
repz
or
dec
xor
data16
pop
mov
int
ds
push
push
aam
arpl
xor
mov
ret
cli
inc
inc
leave
test
cld
inc
movsb
cmp
xor
xor
sub
scas
jne
es
and
or
fnsave
shll
adc
inc
mov
mov
pop
or
or
sbb
pop
nop
xchg
std
gs
add
stc
dec
fbld
mov
jl
cmp
ljmp
in
mov
bound
fcmovu
fsubrs
mov
sub
mov
je
enter
sbb
filds
test
aas
add
adc
scas
lods
xor
xor
icebp
mov
xchg
inc
pushf
fwait
and
fwait
in
pop
fisttpll
mov
xchg
or
jp
js
jg
push
jb,pt
enter
push
adc
push
jmp
xchg
ljmp
pop
sbb
pop
pop
pop
in
out
push
push
test
xor
aad
and
cltd
xchg
int
into
sbb
cmp
xor
xor
cmpb
fisubs
movsl
in
test
mov
sbb
loopne
das
pop
adc
clc
out
or
push
pop
add
sbb
mov
clc
je
cmpl
icebp
lock
jp
sub
out
push
imul
inc
push
push
out
and
mov
fisttpl
push
enter
dec
int3
add
mov
adc
cmp
mov
or
xor
pop
test
ljmp
fs
mov
add
sahf
popf
repz
ficoml
xchg
ljmp
xlat
mov
movb
aad
cmp
xchg
adc
je
leave
fld1
js
insl
push
push
sbb
push
jb
out
pop
pop
mov
lret
arpl
push
stos
adc
dec
dec
lahf
scas
mov
xchg
std
repnz
ds
sar
dec
mov
mov
adc
subl
test
sbb
test
xchg
shrl
xchg
xor
or
pop
cmovs
jg
add
push
cmpb
cmc
dec
pop
ds
xor
push
sahf
jmp
inc
insl
cmpsl
aas
hlt
push
ss
and
push
fcmovb
sub
xchg
sub
push
xchg
push
int3
lret
and
or
or
lods
add
sbb
adc
mov
or
out
hlt
mov
xlat
pop
lods
stos
add
push
push
xlat
adc
add
mov
popf
xchg
jp
fmuls
xchg
lret
xchg
addl
xchg
jp
scas
call
js
popf
jns
outsb
aad
je
imul
lret
mov
pop
pop
mov
push
scas
leave
imul
mov
dec
mov
push
mov
aaa
dec
test
push
xchg
xchg
mov
sbb
jecxz
xor
inc
sub
pop
xchg
and
and
sbb
repnz
incl
js
push
push
or
mov
les
pushl
stc
arpl
pop
scas
std
aaa
repz
popf
clc
xor
mov
ljmp
jecxz
cmp
popa
fwait
xor
mov
inc
rcl
sarb
fdivs
popa
aam
lret
iret
or
lods
popa
or
rclb
inc
mov
mov
cmp
and
sbb
or
or
cmpsb
loopne
test
loope
xchg
in
std
cld
fwait
aad
js
aas
lea
sahf
test
mov
call
mov
mov
pop
mov
aam
jb
push
arpl
jne
jg
mov
xchg
dec
mov
push
mov
imul
dec
cmpl
cmc
in
cmp
xchg
mov
xor
data16
das
xchg
push
xor
lea
and
sbb
sbb
subb
pop
push
std
mov
xchg
into
sbb
pop
insl
or
inc
add
jns
std
cld
push
jg
push
push
jp
cmp
repnz
pop
jmp
xor
rorl
call
cmp
gs
xor
loopne
xlat
mov
sub
daa
fcoml
adc
enter
lret
push
ret
outsl
mov
adc
and
adc
adc
call
mov
mov
inc
xchg
xchg
in
pop
push
jmp
sar
xchg
mov
and
test
ja
int3
fcompl
jns
jo
push
sbb
imul
sub
fstpt
pop
xchg
rcrl
pop
arpl
cli
pusha
fwait
push
mov
cmp
dec
dec
mov
inc
cs
dec
rclb
cmp
mov
sbb
fisubrs
sub
aaa
stos
out
and
jns
cwtl
es
sbb
sbb
aad
and
fs
stos
dec
or
xchg
pop
or
stc
dec
pop
cld
aaa
repz
out
out
inc
jno
inc
clc
insb
and
dec
dec
out
faddp
xor
xchg
jecxz,pn
sti
pop
ror
and
leave
mov
jne
les
sbbl
mov
mov
pusha
mov
pop
xor
sub
sti
or
test
lahf
xchg
sbb
not
xchg
nop
out
fstl
xchg
popl
int3
ret
shl
les
jne
popa
and
enter
jp
imul
imul
mov
flds
push
push
cmpsl
mov
push
dec
xor
leave
add
push
cmp
mov
js
test
jmp
jl
scas
push
and
pop
lds
and
mov
pop
mov
gs
xchg
femms
or
mov
and
idiv
push
gs
add
cmc
hlt
dec
ja
dec
jb
das
jmp
inc
push
fucomi
sub
lret
aas
loopne
aaa
bound
aad
cmp
adc
dec
xchg
aam
push
add
movsl
ret
mov
or
xor
lock
stos
add
mov
push
mov
cmc
stos
push
fcmovnu
xchg
xchg
in
cld
jae
aam
ja
cmp
xchg
or
out
cmpl
jbe
stc
xor
xor
scas
insl
insb
ret
outsb
stos
dec
inc
adc
mov
filds
pop
push
lods
mov
cmp
sti
dec
dec
movsb
iret
or
inc
inc
cwtl
test
inc
cmpb
out
aaa
mov
mov
cs
imul
and
fbstp
mov
outsb
jle
sbb
stc
fwait
mov
lret
mov
add
pop
imul
push
jnp
dec
add
xor
out
inc
push
xchg
lock
iret
inc
xchg
in
cmp
cmp
popa
mov
aas
jp
pop
sarl
es
mov
fmuls
sub
add
mov
ret
aaa
sub
mov
add
test
movsb
cld
daa
popa
stc
scas
and
fistpl
sub
xchg
jnp
ds
out
dec
in
or
fucomi
push
xchg
jg
jne
jnp
sar
aaa
iret
test
cld
mov
jo
cmc
jb
push
dec
adc
mov
jecxz
fwait
pop
pop
mov
aam
cltd
push
cmp
push
push
test
or
xchg
pushf
lods
mov
imul
cmp
xchg
mov
popa
jno
xor
sub
int
daa
es
jecxz
xor
addb
mov
into
sbb
pop
insl
or
call
push
jg
push
push
jp
xor
repnz
pop
inc
hlt
xor
rorl
call
cmp
gs
sbb
fnsave
inc
sub
sbb
mov
sub
daa
inc
in
jle
cmp
vucomiss
sub
movb
and
mov
or
in
repnz
xchg
rcll
test
sbb
cwtl
adc
lock
adc
xchg
xchg
dec
push
nop
mov
aaa
xchg
mov
mov
jge
jne
push
cwtl
insb
insl
insb
aam
jo
push
arpl
popa
in
jecxz
pop
pop
pop
pop
int
cmpsb
push
or
push
push
dec
dec
ret
pop
xor
clc
dec
inc
scas
cmp
inc
sub
jge
ds
movsb
daa
aas
jl
pop
out
xor
mov
mov
sub
jg
push
sub
or
mov
xchg
adc
jp
adc
mov
or
pop
adc
push
rolb
cmp
cmc
hlt
dec
ja
dec
jb
sub
ljmp
lret
aas
mov
fbstp
bound
aad
cmp
adc
dec
xchg
aam
cmp
rclb
jno
mov
mov
cmp
mov
stos
add
pop
lods
jmp
mov
cmc
stos
push
cmc
rcll
xchg
aam
ja
cmp
xchg
or
addb
jnp
insl
and
into
stc
xor
xor
cmpsl
insl
insb
ret
insl
stos
dec
inc
or
push
mov
fbld
mov
cmp
clc
dec
dec
movsb
iret
or
inc
inc
cwtl
test
inc
cmpb
jecxz
aaa
mov
sbb
sub
imul
and
fbstp
mov
outsb
jle
sbb
stc
fwait
mov
lret
pop
xchg
mov
add
push
dec
loop
xchg
div
cs
jmp
dec
or
jno
out
out
pop
loope
loop
push
fstp
push
out
push
test
aad
cwtl
out
push
clc
int3
int
sbb
push
dec
mov
movl
mov
lahf
and
mov
or
repz
lods
xchg
iret
push
test
ljmp
fs
mov
push
aam
popf
repz
sahf
fistl
xchg
ljmp
mov
mov
mov
addr16
ja
xchg
lods
js
jno
pop
pop
insl
insb
out
sub
jbe
mov
aad
xchg
popa
sahf
pop
inc
sub
push
push
lods
fcoms
stos
pop
rorl
mov
xchg
std
jmp
sti
xchg
dec
mov
xor
jo
adc
shrb
daa
jg
in
xor
sbb
pop
adc
adc
int
sbb
add
adc
add
movsb
cli
stc
push
jl
dec
add
and
cld
push
add
sub
into
inc
jecxz
cmp
aaa
in
pusha
aas
push
dec
in
ja
adc
mov
jbe
lret
and
and
dec
adc
ret
xor
and
mov
or
jno
mov
stos
test
mov
lods
test
dec
sahf
popf
cmc
and
cmpsl
sbb
push
mov
mov
xor
fistl
jl
out
mov
jae
mov
jo
repnz
jns
cltd
data16
jb
push
arpl
pop
pop
mov
adc
orb
rcrl
dec
mov
add
inc
inc
cltd
xchg
dec
mov
xor
xor
aam
sub
test
push
and
push
xchg
sub
sbb
cmpsl
mov
shrb
xchg
out
or
pop
jl
insl
enter
call
push
jg
push
push
jp
and
call
lock
push
pusha
push
aas
pop
mov
js
into
es
mov
fmuls
vcmpps
sub
out
popa
mov
or
xor
stos
and
movsl
mov
dec
mov
cmc
stos
push
push
enter
or
mov
xor
ficoms
jg
repnz
cmp
ja
sbb
lret
jl
lret
push
pop
data16
pusha
inc
aaa
add
pop
mov
sbb
push
push
dec
les
add
dec
xor
in
inc
inc
pushf
movl
imul
cmp
jbe
sbb
cs
aaa
stos
in
and
and
pop
sbb
lods
mov
shrl
xchg
cmpb
jo
or
jmp
test
call
mov
es
repz
xor
aam
xchg
jmp
cmp
fcoml
inc
jne
sbb
mov
sub
fisttpl
test
sub
add
mov
les
int
mov
scas
and
test
dec
movsb
mov
lods
and
or
std
sbb
aad
js
xor
dec
loope
or
cmc
out
cmpb
jne
clc
xor
jg
push
cltd
insb
imul
iret
loop
cmpsl
arpl
push
pop
pop
mov
sbb
push
push
push
popa
mov
xor
out
dec
inc
lahf
lret
push
lds
mov
mov
sbb
fdivs
xor
scas
add
cltd
xor
add
jno
outsb
and
or
or
stos
add
pop
test
and
add
lock
push
xchg
in
jmp
outsb
test
cmc
imul
push
out
inc
xor
sbb
aad
sub
xchg
sub
push
add
lret
lret
pop
lret
stos
jmp
mov
leave
mov
lret
sbb
sub
movsb
mov
mov
lahf
sub
test
dec
into
or
xchg
xchg
sbb
mov
rorb
xchg
je
add
jp
jp
xchg
ss
mov
fildl
push
push
adc
shr
mov
aam
pop
pop
mov
push
push
push
mov
mov
dec
xlat
into
jo
inc
inc
lods
dec
inc
test
es
cmp
mov
mov
pushf
dec
adcb
xchg
sub
lods
in
dec
mov
sub
movd
pop
push
jge
push
adc
or
or
add
xor
std
aaa
mov
cmp
imul
in
cmp
mov
mov
jecxz
dec
adc
repz
jne
rcl
roll
mov
and
xchg
int3
or
scas
add
inc
jg
int3
inc
pusha
leave
mov
pushf
les
mov
or
jo
sub
call
mov
ficomps
xchg
xchg
or
lea
mov
xchg
pop
out
cmpl
mov
je
lret
divb
enter
rol
insb
stos
addr16
inc
or
mov
xchg
mov
and
and
push
push
test
sarb
dec
inc
cltd
scas
pop
sub
test
aas
xchg
js
xchg
mov
cmp
sbb
xor
cs
sub
xor
or
xchg
sbb
and
pop
push
adc
push
femms
cwtl
push
pop
popa
xchg
lea
inc
std
push
test
cmc
div
frstor
repnz
dec
je
inc
popa
divl
in
jecxz
loope
call
pop
jmp
mov
inc
ror
into
or
inc
out
cmp
fcomps
rcll
mull
mov
sub
scas
scas
add
xor
cmpsb
test
movsl
movsb
mov
sahf
popf
sub
ret
xchg
push
xchg
xchg
loope
xor
lea
test
jecxz
jge
aas
lcall
add
icebp
push
iret
sbb
movsb
arpl
mov
push
push
push
mov
dec
mov
aad
push
mov
insl
inc
pop
mov
aas
mov
lds
sbb
cs
cmp
and
push
dec
pusha
sbb
pop
push
mov
adc
sbbl
out
xchg
rcrb
std
cli
stc
xor
in
repz
or
fsubrl
jmp
repz
aaa
call
jecxz
fists
cmp
ljmp
pop
or
iret
into
push
sub
push
lea
fistpll
rcll
aaa
mov
mov
inc
inc
adc
mov
fsts
lods
add
imul
mov
cmpsb
pop
lahf
addl
sbb
loop
into
mov
jno
push
xchg
sbb
jbe
sub
jb
jge
fdivs
insb
imul
jne
daa
repz
movb
pop
push
push
mov
cmp
dec
dec
dec
mov
inc
sub
in
inc
cwtl
ret
std
xchg
mov
cmp
lret
sub
jno
adc
int3
sub
subb
xchg
daa
mov
add
outsb
jle
adc
mov
or
jge
add
ljmp
mov
gs
repz
jne
inc
imul
pop
icebp
push
call
loope
dec
fbld
fadd
das
jnp
xlat
das
pop
xchg
sub
inc
or
inc
push
add
mov
push
shll
sub
out
xor
lret
cwtl
jo
stos
sti
aaa
shlb
jecxz
out
xchg
fwait
lcall
xchg
xchg
in
add
mov
mov
insb
xor
inc
lea
cmp
mov
jge
cmp
outsb
push
bound
imul
dec
dec
popa
pusha
pop
mov
js
pushf
pop
inc
sub
push
push
lods
xlat
adc
dec
dec
aam
pop
orl
cmp
fcmovnbe
xor
cmp
in
stos
xor
cmp
xchg
sub
cmp
and
and
and
outsb
add
pop
cld
jbe
adc
pop
fwait
xchg
xor
or
jo
xchg
inc
add
ljmp
pop
jecxz
add
testb
out
lock
arpl
in
jmp
pop
cmc
shlb
mov
jecxz
cmpsb
icebp
gs
imul
dec
fidivrs
gs
sarb
lret
mov
pop
das
data16
ret
stos
std
popa
mov
adc
repnz
sub
mov
lods
scas
arpl
stos
stos
test
sbb
out
sub
ret
xchg
cwtl
xchg
ljmp
and
lea
dec
cmpsb
jb
mov
les
jl
jns
cld
sahf
jb
jb
pop
repz
insl
vrcpps
outsl
fnstenvs
xchg
popa
mov
pop
pop
mov
push
scas
arpl
jbe
push
dec
dec
ret
jp
mov
add
dec
rorb
cmp
stos
inc
pushf
pop
xor
xlat
int
sub
test
pop
xchg
test
pop
sbb
test
xchg
shrl
xchg
push
or
xchg
mov
add
add
or
adc
imul
xlat
push
in
jmp
outsb
test
cmc
imul
out
inc
lock
aad
sub
xchg
sub
push
dec
in
lret
lret
xlat
cs
push
ret
pop
mov
adc
cmp
mov
mov
rclb
scas
out
stos
xchg
int
cmpsl
cmpsb
sub
mov
popf
mov
test
xchg
jnp
xor
in
or
cmp
jmp
fs
jns
sar
xor
nop
outsl
outsb
insb
loope
rcrb
stos
dec
inc
add
mov
fistpll
js
push
push
lret
inc
push
xchg
dec
ss
int
lahf
push
enter
inc
ds
movsb
and
jl
pop
out
xor
mov
lods
dec
sub
daa
pushf
lea
and
or
lahf
fnstenv
lcall
pop
jbe
or
or
mov
ret
and
cld
sti
stc
outsb
or
cmc
aaa
repz
out
out
inc
jno
inc
clc
insb
mov
in
loop
icebp
dec
scas
fisubs
fadd
das
js
xlat
das
pop
xchg
sub
push
pop
in
into
int
inc
fidivl
xchg
or
lods
add
rcrb
jge
lret
mov
mov
ret
sbb
repnz
xchg
rorl
test
mov
cmp
adc
jle
xor
out
adc
cmpsl
mov
cmp
sbb
cmp
test
mov
in
aad
imul
fs
loop
jns
pop
pop
int
mov
cmp
in
dec
dec
movsl
rorb
mov
inc
inc
inc
mov
cmpsl
out
jg
and
aaa
mov
rorl
sub
lahf
cmp
or
mov
fnsave
push
adc
lods
sqrtps
or
lds
xchg
jno
bound
arpl
scas
inc
sti
outsl
out
call
dec
jb
and
xor
pop
xchg
das
in
mov
inc
fnsave
lret
scas
pop
arpl
ret
sbb
sbb
inc
or
sub
sbb
cwtl
add
imul
mov
push
sbb
stos
xor
push
ljmp
mov
cwtl
out
add
sbb
cmp
mov
ljmp
fcomp
outsb
mov
push
dec
push
push
mov
pop
pop
pop
shrb
les
push
cmp
out
push
push
test
or
pop
inc
inc
inc
mov
cmpb
repz
cmp
mov
inc
xor
sub
sub
push
and
fbstp
mov
push
mov
adc
xchg
stos
or
arpl
lods
sbb
add
je
gs
sti
cmp
cmc
hlt
dec
ja
dec
jb
add
ljmp
loop
movsb
imul
fcom
dec
in
pop
rclb
mov
push
lret
and
and
dec
inc
xlat
ret
xor
and
mov
or
jno
mov
stos
test
mov
dec
cs
mov
and
cmpsl
sbb
test
xchg
xchg
push
mov
mov
and
inc
fistl
jl
out
mov
add
mov
pop
pop
or
sub
jns
jp
data16
jb
cwtl
pop
mov
pop
pop
mov
adc
bound
dec
rcrl
aad
inc
sub
cltd
xchg
dec
mov
xor
xor
push
aad
sub
subb
xor
and
xchg
sub
sbb
cmpsl
mov
adc
shrb
xchg
sahf
sbb
or
jl
insl
and
inc
add
jns
std
cld
push
jg
push
push
jp
add
bnd
in
cs
push
dec
in
aas
out
pop
sarl
es
mov
fmuls
vcmpps
sub
mov
push
mov
or
xor
stos
and
movsl
mov
mov
cmc
stos
push
clc
movsl
xchg
xchg
xchg
or
mov
daa
mov
xchg
pop
lret
jg
repnz
data16
ja
gs
jb
cmc
das
jl
mov
push
dec
popa
mov
pop
pop
mov
sbb
push
push
fcmovnbe
or
dec
dec
test
rorb
pop
aas
ds
cmp
push
in
xor
mov
scas
xor
sub
fwait
xor
and
mov
sbb
jae
fdivs
cltd
sbbl
push
jne
or
mov
rcrl
xor
sti
cli
clc
insl
pop
pop
shl
repnz
out
in
inc
jo
inc
imull
in
in
loope
lock
cmpsb
fcompl
fcmovnb
sub
pop
xchg
sub
push
fcom
int
lret
xor
lcall
pop
inc
jl
leave
cmp
mov
ret
scas
lock
xchg
roll
test
sub
mov
push
movsl
lahf
sahf
pushf
adc
xchg
jge
cs
xchg
jmp
movaps
xchg
jmp
add
data16
jnp
sar
aaa
iret
test
cmp
jo
jecxz
aam
imul
and
pop
pop
push
int3
mov
xchg
push
cmp
call
or
inc
inc
into
lds
mov
fsave
xor
mov
cs
insl
aas
mov
mov
and
jo
addr16
sbb
sbb
cld
adc
popa
clc
dec
mov
or
ds
add
add
in
lods
stc
clc
dec
test
aam
icebp
inc
fmuls
xchg
in
in
outsb
scas
sbb
es
jecxz
xor
loopne
fstp
lock
sbb
arpl
leave
rcl
and
jecxz
mov
xor
das
dec
mov
add
sbb
cmp
scas
mov
mov
cmp
mov
test
shlb
mov
fwait
add
sbb
and
and
fstpl
adc
push
or
bound
push
arpl
enter
push
jb
sar
incb
shlb
dec
f2xm1
popa
pusha
loop
jns
loopne
push
push
push
shlb
push
data16
xchg
dec
or
dec
dec
lcall
xchg
xchg
cmp
aas
sub
mov
test
sub
cld
and
jb
pop
xor
or
sbb
popf
stos
notl
push
addr16
adc
dec
or
sbb
add
dec
out
inc
decb
testl
jle
pop
jmp
jmp
shl
jne
out
test
sbb
fcoms
imul
dec
shlb
roll
lret
inc
mov
arpl
les
dec
xor
mov
out
daa
mov
or
cwtl
jle
stos
stos
test
movsb
out
mov
and
test
push
xchg
xchg
xchg
xchg
pop
mov
mov
and
fcoml
jge
out
scas
stc
mov
test
pop
dec
jno
outsl
in
aad
push
imul
out
mov
pop
pop
ret
pop
lods
ds
push
push
stos
aad
cmpsl
ret
mov
inc
mov
leave
imul
aas
es
leave
cmp
mov
sub
dec
test
sub
sahf
and
and
and
xchg
sub
fldt
mov
maxps
pushf
jge
or
cmp
add
inc
decl
das
mov
stc
push
fildll
cli
mov
out
rcll
dec
jge
xor
std
imul
jae
mov
int3
pop
push
pusha
mov
int3
push
sbb
cwtl
scas
mov
cmpsb
lea
mov
mov
sbb
aas
repnz
xchg
addl
loopne
sub
int
and
fwait
lcall
pushf
xchg
pop
test
into
mov
jno
and
test
sbb
jge
add
ja
movb
mov
jo
xlat
and
imul
out
mov
in
push
pop
pop
scas
lods
test
push
mov
mov
mov
pushf
lret
dec
test
daa
inc
mov
sbb
mov
cmp
and
dec
and
and
xchg
sbb
rorl
mov
cld
jp
adc
xchg
shlb
cltd
nop
xor
pop
push
push
in
mov
add
or
clc
dec
mov
rcl
in
push
out
cmp
popa
jo
in
cmpsl
out
data16
mov
fcom
dec
or
dec
repnz
int
in
mov
adc
mov
das
mov
rcrl
fisubrs
cmpsb
cld
xor
mov
lahf
sahf
hlt
in
test
cltd
cwtl
and
test
clc
fistps
iret
mov
and
or
mov
jp
leave
loopne
add
jo
repnz
fimuls
arpl
leave
movsb
in
mov
pop
pop
mov
adc
test
dec
xor
inc
mov
inc
inc
jp
xchg
vorps
aaa
ss
ret
aas
xor
xor
sub
jg
rdmsr
mov
and
xchg
cmp
outsl
push
adc
xchg
testl
and
add
sahf
mov
mov
clc
div
add
adc
out
in
js
divl
js
in
jno
jbe
xor
les
rcll
cli
or
ret
int3
lret
push
dec
in
mov
mov
mov
sti
mov
mov
mov
and
lods
and
testb
and
lcall
xchg
in
or
xchg
nop
loop
adc
insl
jno
addb
outsl
js
add
les
testl
mov
addr16
xchg
mov
push
pop
pop
shll
push
push
push
lea
rcr
push
nop
dec
mov
jne
inc
xchg
test
and
mov
bound
push
sub
mov
and
sbb
inc
mov
dec
outsb
or
xchg
in
call
mov
add
add
jbe
dec
std
mov
cli
stc
clc
imull
cmp
icebp
lock
add
stos
jmp
aam
jecxz
push
in
out
arpl
fisubl
inc
push
pop
pop
jle
iret
into
pop
adc
push
dec
jno
mov
dec
xlat
mov
movsl
xor
mov
xchg
dec
mov
scas
and
xor
movsl
test
jbe
movsb
mov
and
pop
cs
xchg
adc
push
sub
lea
xchg
or
jge
adc
mov
jl
jns
adc
jne
add
xchg
mull
cld
imul
bound
pop
pop
pop
paddsw
push
mov
mov
dec
popf
int
inc
inc
inc
lods
dec
xchg
sub
xchg
cmp
sarl
and
mov
and
mov
jo
and
xor
movsl
mov
fildl
femms
dec
iret
xchg
mov
sbb
inc
decb
maskmovq
idivl
clc
loopne
add
repz
and
add
sbb
cwtl
loop
in
ror
pop
jmp
fiadds
fldenv
rcl
sarb
int
adc
sbb
enter
vperm2f128
mov
mov
sti
mov
cmp
scas
scas
cmp
shlb
add
adc
fwait
lcall
mov
lea
push
addb
jle
lock
cld
cmp
mov
std
clc
push
insb
outsl
outsb
loop
ret
ljmp
mov
pusha
pop
dec
fs
sti
push
pop
push
rcl
dec
push
dec
dec
add
dec
dec
dec
cltd
xor
inc
inc
inc
neg
cmp
cmp
mov
mov
cs
sub
stos
dec
and
and
aad
sbb
adc
pop
pop
data16
cmp
xchg
xor
push
push
out
jae
add
test
das
xchg
test
inc
cmpl
cmp
call
jecxz
and
push
adc
or
aad
push
xchg
pop
push
pop
adc
inc
jecxz
fisttpll
testb
adc
inc
mov
lds
lret
hlt
mov
dec
pop
test
stos
push
cltd
xchg
in
movsl
movsb
or
sahf
popf
fwait
adc
push
sub
out
leave
push
mov
stc
xchg
clts
test
jge
in
jbe
js
pop
std
sti
jae
std
hlt
xchg
push
push
fisubs
sbb
bound
pop
aam
inc
or
pop
pop
inc
pop
push
push
stos
cmp
in
dec
dec
shll
mov
mov
inc
inc
ds
xor
ss
xchg
leave
xor
mov
cmp
test
es
jns
movsb
jp
sbb
test
push
xlat
mov
pushf
lahf
insl
or
or
cmp
pop
push
mov
mov
and
sti
xor
icebp
cmc
hlt
dec
imul
in
jmp
ja
loop
in
sbb
fbld
hlt
dec
push
mov
pop
rcrl
cld
es
lea
push
dec
sbbl
rolb
jmp
inc
cld
loop
int3
sub
lds
jae
cs
movsl
movsb
fisubrs
out
loopne
and
icebp
xchg
xchg
xchg
into
xor
mov
movsb
xchg
mov
addb
jns
stc
xchg
out
test
lahf
lret
mov
insl
insb
jnp
push
mov
data16
fstpt
pop
fistps
outsb
push
xor
dec
sub
xlat
aad
dec
dec
and
dec
and
cmp
mov
js
shlb
cmp
scas
dec
jo
fsubrs
xor
cmpsl
cmp
adc
and
mov
sub
sbb
sbb
xchg
push
adc
pop
adc
mov
nop
fwait
incb
push
pop
sti
fcompl
ret
incl
sti
cli
cli
stc
sbb
repz
cmpsb
or
in
in
jmp
fsubrs
out
jb
daa
fneni(8087
fildll
jne
fcmovnu
pop
pushf
jecxz
jb
enter
and
lea
pop
mov
rcrl
add
dec
mov
inc
pushl
and
jmp
pop
xor
jecxz
sbb
push
sbb
and
add
ds
xchg
xchg
xlat
shr
popf
dec
fnstcw
dec
or
jge
addb
add
cld
jno
je
mov
insl
insb
imul
mov
test
pop
pop
pop
out
push
loop
xlat
push
push
push
adc
push
push
dec
fcmovnbe
mov
xchg
jo,pn
inc
inc
int3
mov
ret
inc
jne
lods
dec
mov
mov
xchg
ds
sub
scas
cmp
xchg
and
sbb
hlt
sarb
push
adc
mov
mov
ret
movl
out
rep
shr
xor
mov
in
push
fucom
loopne
insb
and
fcmovnu
rorl
int
and
leave
enter
dec
in
rol
sub
mov
test
mov
inc
cmp
scas
scas
scas
sbb
cmpsl
sub
sub
add
loope
ljmp
out
stc
and
iret
mov
movups
jnp
jle
inc
mov
jp
mov
push
add
jno
mov
mov
lods
imul
pop
pop
mov
mov
fisttpl
ret
ds
lahf
das
mov
inc
inc
stos
add
cmp
inc
jnp
inc
mov
push
mov
daa
and
movsl
and
jne
or
lahf
popf
sbb
adc
stc
mov
decb
jge
xchg
dec
xor
push
jmp
xchg
xchg
hlt
cmc
hlt
dec
pop
push
in
xor
ds
outsb
ljmp
repnz
or
fidivs
loopne
pop
xchg
jecxz,pn
ror
and
leave
add
sbb
dec
mov
mov
loope
mov
or
daa
leave
pop
xchg
xchg
lods
stos
adc
test
push
and
mov
cwtl
out
jg
es
xchg
sti
push
les
mov
leave
test
xchg
push
ss
jge
shlb
or
fidivs
je
jo
jae
je
push
fdivrl
sbbb
in
in
pop
pop
pop
stos
inc
ret
ficoml
cmpsl
loopne
jns
dec
dec
dec
roll
std
mov
mov
sub
iret
cmp
and
pop
cmp
lea
cltd
out
bound
sub
andl
imul
push
push
jns
sub
adc
push
or
jnp
push
add
lock
cmp
std
ds
imulb
xorl
pop
jle
jmp
fldcw
cli
and
repnz
or
fidivs
loopne
pop
xchg
jecxz,pn
ror
and
leave
add
sbb
dec
mov
mov
mov
xchg
inc
mov
sbb
scas
lods
stos
add
movsb
mov
test
lcall
xchg
adc
add
xchg
or
lods
test
push
jge
in
lods
jp
jbe
jns
jp
jo
insl
loop
shll
stos
addr16
data16
mov
lahf
pop
pop
into
jo
fstpt
lret
dec
dec
rclb
mov
scas
roll
leave
mov
movsl
mov
xor
mov
sub
sub
mov
std
pop
and
jno
stc
scas
sbb
mov
or
or
shrb
push
add
pushl
scas
pusha
repz
hlt
repz
xor
jp,pt
adc
call
es
leave
shll
push
aad
mov
push
nop
jmp
dec
sub
vsqrtps
mov
dec
inc
xchg
mov
and
mov
add
out
lods
ss
or
insl
xlat
movsb
mov
sbb
or
xchg
test
fcomip
lds
movsb
xchg
mov
sarb
bnd
jbe
gs
jns
jno
push
add
imul
lock
push
bound
aad
jmp
inc
dec
pop
pop
test
addr16
push
push
pop
aaa
fmull
mov
mov
sub
cmp
mov
popf
mov
xor
cmpb
adc
test
sbb
movsb
lahf
adc
push
adc
adc
pushf
xchg
icebp
stc
or
xchg
add
push
add
push
jecxz
mov
testb
js
out
out
out
push
mov
sub
in
outsl
data16
fstp
inc
ljmp
push
xchg
negb
mov
ud1
push
dec
mov
adc
xchg
mov
mov
divb
lods
lods
adc
cmpsl
loope
sub
lahf
adc
ficoml
aam
jns
stos
lea
mov
test
icebp
insb
xchg
je
jb
cmc
lcall
imul
push
mov
data16
bound
pusha
in
jecxz
dec
pop
pop
pop
int
cmpsb
cmp
dec
les
jmp
das
mov
inc
inc
lret
fdivs
cmp
mov
ss
hlt
movsb
inc
cwtl
cmp
lret
test
das
stos
cmpsb
rclb
sbb
and
adc
xchg
dec
add
xchg
or
pop
mov
ljmp
testl
icebp
lock
cli
push
imul
pop
out
in
imul
fldenv
jecxz
aam
and
pop
adc
leave
loopne,pt
dec
jno
ret
add
lods
mov
fnsave
test
sub
xor
lret
lahf
mov
test
pop
mov
mov
sarb
push
xchg
ja
test
shr
jmp
mov
jns
mov
fs
fdivs
mov
sub
out
insb
cmpsl
jns
jae
mov
dec
xchg
push
cmp
push
push
dec
mov
jns
inc
jg
hlt
xor
daa
adc
les
popl
mov
stos
rorl
and
and
test
sbb
fwait
inc
cli
adc
adc
cwtl
or
pop
xchg
mov
mov
std
cld
sti
dec
loop
test
testb
jp
stc
jne
sbb
out
jno
fsub
push
stc
imul
add
aad
sub
sahf
lret
push
push
xor
lahf
inc
add
inc
in
mov
push
popf
sar
mov
xor
ss
xchg
test
xor
xchg
hlt
xor
leave
test
or
fcoms
xchg
ret
sbb
mov
push
mov
inc
or
or
ja
mov
push
push
push
xchg
xchg
mov
inc
pop
pop
int
inc
inc
push
push
push
mov
das
dec
dec
test
lahf
xchg
cs
roll
xchg
int
pop
and
cmp
scas
push
xchg
and
mov
sub
sahf
xor
add
lods
movsb
cmp
sbb
sbb
mov
adc
popf
adc
js
cltd
nop
cmpsb
in
pop
push
add
mov
inc
idiv
outsb
add
push
out
out
jns
in
pop
add
push
lret
outsl
data16
fstp
xor
rcrb
xlat
es
mov
ror
mov
dec
int3
lret
dec
lea
push
dec
in
rol
adc
enter
add
ret
dec
xchg
mov
cmp
popf
cld
cmp
cmp
hlt
or
loopne
icebp
lock
mov
lret
and
sub
xchg
nop
stc
pop
ret
mov
dec
adc
adc
jg
lods
mov
jo
jne
clc
lcall
call
jb
rcrl
xchg
das
pop
pop
scas
pop
iret
push
inc
dec
outsb
push
push
mov
jle
dec
test
insl
sub
cs
stos
mov
cmp
nop
mov
daa
shlb
cmpsb
dec
pop
xchg
mov
dec
adc
and
xchg
sub
imul
sahf
movb
or
inc
sti
jnp
outsl
inc
nop
xchg
dec
jecxz
test
idivl
add
in
mov
pop
aad
out
out
in
outsl
mov
nop
add
xlat
bound
iret
ror
aaa
fcmovb
push
lret
sbb
pop
push
inc
jmp
rorb
mov
cmp
cmp
loopne
lods
lods
cmp
lcall
mov
pop
fstpl
xlat
xchg
push
pop
sarl
notb
mov
add
hlt
xchg
jl
ret
stos
mov
insb
mov
pop
jmp
insl
insb
popf
imul
add
dec
inc
rorb
push
push
lret
insl
cmp
fcoml
mov
cmpsb
aad
jp
inc
inc
push
rcrl
mov
mov
mov
cs
in
arpl
lret
sbb
xchg
and
pop
cs
movsl
mov
mov
mov
push
or
or
pop
push
in
out
jg
add
adc
hlt
jg
ljmp
inc
push
xchg
loopne
out
imul
sub
xchg
push
aad
pusha
push
stc
int
int
fcomps
mov
adc
dec
mov
dec
inc
call
add
lods
mov
add
in
lods
std
test
cmpsl
xlat
out
cs
leave
cltd
sahf
popf
push
gs
pushf
cltd
cwtl
rcrb
adc
add
mov
xlat
out
std
jl
subb
jge
out
jns
test
mov
push
outsb
loop
push
rcrb
iret
stos
pop
cmpsb
arpl
push
pop
pop
pop
shll
pop
insl
outsl
xchg
outsl
dec
ret
gs
jb
inc
inc
popf
lods
push
aas
inc
cmp
mov
ss
daa
dec
xor
cwtl
dec
outsl
sub
adc
daa
es
test
xchg
pop
sbb
push
push
xchg
push
adc
or
or
int
push
add
add
loop
cld
sti
jge
add
push
jmp
or
arpl
aam
jae
call
push
icebp
xor
cmpsb
leave
fcmovnu
sub
ret
push
aad
sub
xchg
int3
pop
push
push
mov
cs
test
cmp
inc
cmp
mov
lods
cmp
jge
stos
test
sub
mov
mov
pop
adcl
mov
mov
adc
out
jle
iret
or
mov
mov
pop
dec
mov
outsb
lock
gs
test
mov
in
dec
pop
pop
lods
test
push
cmpsb
movsl
push
gs
jg
dec
xlat
adc
or
jp
mov
lods
pop
xor
jnp
jae
jg
in
insl
sub
and
push
lcall
add
push
adc
inc
inc
push
push
inc
test
jnp
out
fcmove
add
push
mov
push
dec
dec
inc
fadd
addr16
lock
shr
jmp
outsb
cltd
jecxz
loopne
inc
addr16
fcomp
fadd
fcomps
aam
xchg
loope
xchg
inc
xor
cld
pop
mov
inc
xchg
test
mov
sub
mov
cmpsb
push
out
add
mov
sahf
popf
in
sub
outsb
xchg
xchg
xchg
out
out
mov
loopne
mov
or
or
xchg
adc
js
jbe
jae
leave
f2xm1
data16
push
out
push
int3
pop
mov
pop
pop
mov
sbb
push
push
fst
mov
dec
lcall
pop
xor
aas
cmpsb
cmp
cmp
mov
mov
sub
daa
es
pop
push
and
jo
mov
imul
push
push
pop
hlt
sub
cmp
add
ret
ljmp
jp
xchg
in
jmp
push
clc
cmp
int
jle
loope
mov
int3
fcom
ret
jno
ror
pop
addb
lret
add
scas
inc
sarb
mov
push
dec
movsb
mov
mov
test
mov
push
adc
and
mov
test
jle
mov
jb
ja
add
push
mov
addr16
push
cwtl
insb
insl
insb
aam
popa
stos
push
arpl
in
in
pop
pop
pop
les
aas
adc
adc
ds
dec
lea
xchg
ror
dec
xor
xchg
mov
mov
je
mov
sub
and
lods
daa
bound
pusha
inc
pop
adc
push
maskmovq
mull
cmp
sbb
popf
scas
lock
sti
outsl
ljmp
ret
call
iret
jmp
jmp
in
aaa
in
and
aaa
pusha
xor
xor
pop
cwtl
rcl
or
fcoml
cmp
ret
cmp
mov
mov
mov
imul
arpl
pop
adc
xchg
loop
out
test
lcall
xchg
cli
nop
xchg
mov
mov
xchg
jno
or
cs
cmpb
lods
add
testl
jno
insb
les
cmpsl
fs
push
push
mov
pop
pop
in
subl
dec
dec
add
pushf
push
mov
add
inc
inc
cwtl
ret
std
xchg
dec
mov
outsb
xchg
daa
inc
mov
dec
cs
popf
sbb
test
stos
arpl
pop
pop
data16
mov
rcrl
xchg
int3
popa
xchg
mov
add
add
jb
mov
std
cld
sti
mov
clc
div
cmc
stos
pusha
repnz
lock
stos
in
in
cmp
in
out
jb
or
loopne
inc
fstp
sub
dec
fistpll
daa
pop
push
test
lret
mov
cltd
cmp
rorb
mov
adc
scas
scas
xor
das
imul
and
repnz
xchg
ja
xchg
mov
or
je
jl
bound
pop
adc
jno
repnz
sub
push
andl
dec
out
in
pop
fwait
pop
pop
pop
pop
mov
in
jno
push
js
dec
dec
pushf
mov
mov
inc
popf
sub
test
cmp
jns
sbb
das
cs
add
fcompl
and
scas
cmpsb
dec
sbb
sbb
nop
xor
fs
aaa
xchg
pcmpgtw
inc
lret
sbb
fwait
add
lea
inc
out
cmp
inc
fdivr
push
add
jmp
insb
lods
imull
repz
std
loopne
xor
fsts
sub
pop
jmp
int
push
repnz
push
sub
pop
cmpsl
cmpsb
inc
mov
mov
bound
push
cs
cld
or
cwtl
jecxz
xchg
negl
xchg
xchg
into
icebp
xchg
lea
jnp
inc
pop
addl
aad
iret
add
jb
popf
data16
mov
push
dec
out
in
pop
jecxz
mov
call
lods
cmp
aad
push
mov
dec
dec
mov
inc
inc
rol
imul
mov
xchg
mov
xor
sub
sub
lods
das
push
or
movsl
and
jne
test
adc
mov
add
or
or
push
jnp
in
inc
test
add
push
or
cmc
hlt
dec
fimull
out
out
jb
inc
stc
ja
add
in
lret
out
fs
sbb
fstp
fidivl
out
loop
aam
sub
or
adc
and
das
test
sbb
mov
mov
or
lods
movsl
icebp
scas
xchg
mov
test
mov
jl
mov
nop
subl
xchg
and
lahf
adc
mov
enter
mov
add
shl
push
outsb
mov
jae
jo
fildll
imul
je
addr16
inc
jecxz
bound
loopne
sbb
push
push
lret
insl
mov
dec
ret
pop
xor
int3
dec
inc
sahf
cs
inc
inc
stos
add
inc
cmp
mov
dec
gs
xor
cmpsb
sub
sub
sahf
inc
xor
and
xchg
sub
cmp
or
imul
stc
sub
or
pop
mov
add
pop
jmp
sti
jo
test
fists
hlt
repz
ss
arpl
cmp
pop
addr16
insl
shll
out
sbb
ljmp
popa
pop
cli
into
iret
into
ss
or
cmp
les
dec
inc
call
or
mov
ss
pop
pop
pop
push
mov
add
mov
lahf
sahf
stc
mov
xchg
jmp
popl
lea
pushf
push
jp
jnp
xchg
cmc
xchg
or
lods
jge
popa
sub
jbe
jmp
xor
lock
imul
xlat
insl
dec
adc
pop
pop
mov
shl
cwtl
push
cmp
stos
push
dec
rclb
insl
xor
andb
aas
ds
sub
xor
insl
hlt
mov
mov
in
sub
jns
jnp
and
movsl
inc
sbb
addl
cmp
and
fdivp
or
pop
push
jnp
in
inc
addl
pop
cmpl
div
subb
sub
pusha
fs
call
gs
insb
sarb
sbb
xor
aad
and
roll
lret
cmpb
mov
rol
jnp
mov
mov
inc
cmp
scas
mov
pop
lods
scas
lods
stos
cli
test
scas
mov
imull
lds
mov
xchg
in
aaa
add
mov
mov
ja
test
into
gs
jp
rcl
pop
push
ja
jb
std
hlt
xchg
push
push
fisubs
jno
fadds
pop
pop
ficomps
gs
or
push
push
push
push
lds
out
int3
dec
dec
mov
inc
rol
imul
pop
push
test
xor
xor
xchg
and
or
lahf
and
js
fnsave
insb
push
mov
mov
adc
orl
pusha
add
pop
lea
adc
stos
sub
repnz
pop
cmp
out
call
into
cld
dec
mov
and
out
dec
int3
sbb
bound
iret
ror
pop
mov
cmp
das
cs
sti
cmp
mov
cmp
mov
mov
push
enter
mov
test
movsl
hlt
xor
in
sahf
popf
add
call
test
adc
adc
leave
pop
push
int3
jle
test
adc
lds
jge
or
or
jbe
ljmp
mov
imul
pop
scas
pop
adc
pop
pop
push
push
lret
popa
cmp
rcll
rclb
jne
nop
int3
lds
rcr
imul
pop
jg
xor
mov
sub
adc
movsb
daa
es
jecxz
xor
push
mov
mov
adc
lods
inc
xchg
inc
movsb
cmp
add
add
mov
jge
mov
push
je
repz
inc
out
mov
jmp
in
xor
xchg
adc
ret
ficomps
xlat
das
and
iret
into
int
jns
leave
enter
dec
test
jmp
sarl
mov
sbb
movsl
repz
xchg
insl
sbb
stos
sub
mov
mov
mov
mov
cltd
and
xchg
loop
xor
mov
jnp
xchg
insb
cmp
cmp
jns
jbe
clc
test
jo
outsb
test
js
in
data16
out
fcomps
pop
xchg
push
jecxz
pusha
lret
int
fmuls
mov
aad
push
mov
ret
jle
mov
lret
shlb
xchg
lea
xchg
mov
xor
stos
sub
cmpb
inc
or
mov
sbb
and
pop
xchg
pop
push
outsb
adc
or
mov
sbb
sub
add
jne
std
jb
arpl
cmp
inc
arpl
icebp
jae
cli
and
ljmp
int3
add
loopne
inc
ror
fisubl
call
aam
mov
ss
or
inc
mov
sti
mov
xor
jbe
mov
cmp
scas
mov
add
xchg
lahf
sub
mov
iret
or
fwait
pushf
fwait
lcall
xchg
xchg
xchg
nop
add
mov
addb
add
ds
std
aaa
jmp
lret
icebp
jo
xchg
addr16
cmpsb
arpl
pop
fistps
push
jmp
push
push
stos
mov
aaa
movsl
sub
cmp
mov
ds
and
mov
cmp
mov
mov
xchg
inc
sub
push
jl
subl
cmp
popf
frstor
mov
je
dec
or
push
pop
insl
insb
cmc
inc
add
cld
sti
jge
add
pop
cs
out
jne
add
in
inc
ljmp
in
sbb
lock
fcmovnu
sub
xor
rcrl
sub
test
lret
xor
mov
sub
mov
mov
mov
adc
xor
test
test
sbb
cmc
mov
sahf
popf
adc
xchg
sbb
and
mov
je
fisttpll
cwtl
addl
arpl
ror
pop
cmpsl
bnd
std
and
imul
jne
pop
fidivl
loop
out
inc
pop
pop
mov
inc
insl
aad
push
fcomps
pop
mov
xor
mov
sub
mov
dec
xchg
ret
mov
mov
repz
sub
mov
and
and
scas
cmpsb
dec
sbb
sbb
cmp
sbb
cmp
popf
xchg
or
or
out
jne
add
test
and
cmpl
out
cmpb
lock
inc
ds
jge
sub
cmp
in
in
and
imul
fiaddl
or
aad
xchg
pop
push
pop
xlat
adc
inc
repz
ficoms
testl
mov
mov
mov
and
xchg
mov
mov
fstpt
insb
xchg
insl
ja
xchg
call
mov
inc
roll
jae
subb
jnp
in
add
jb
rcrl
insl
insb
ret
adc
gs
mov
mov
leave
pop
pop
in
arpl
dec
push
push
fst
jp
dec
dec
lcall
stos
ret
aas
mov
ret
jl
mov
das
mov
data16
es
aam
and
jo
mov
imul
push
push
pop
hlt
sub
or
mov
add
push
dec
in
xor
stc
jnp
ss
daa
jmp
out
jl
fnstsw
outsl
jns
out
cmp
outsl
dec
and
xor
fcomi
fimull
sbb
popa
bound
int3
rcl
cmp
add
int
ret
aaa
fidivrl
mov
clc
mov
cmp
rcr
jmp
loopne
in
mov
push
pop
fwait
lcall
xchg
sbb
cwtl
out
in
jge
mov
mov
rclb
jge
or
mov
jne
jae
rcrl
insl
insb
out
jns,pn
call
dec
in
ficompl
lods
inc
cmpsl
add
mov
lods
lea
cmpsl
jne
dec
dec
mov
xchg
inc
test
das
jg
mov
test
imul
sub
jl
lods
dec
and
and
xchg
sbb
sbb
sbb
mov
std
jl
adc
xchg
shll
notb
or
pop
pop
pop
add
call
jne
out
mov
vmwrite
cmc
dec
addr16
pop
out
das
in
aam
out
dec
mov
and
fstp
xor
out
add
int3
rcrb
fadds
aaa
into
pop
psrlw
lret
push
fldenv
add
cli
xorl
inc
cmp
mov
mov
mov
imul
mov
pushf
pop
or
pop
xchg
xchg
rorl
fidivl
push
jne
subl
jle
out
sarb
xchg
pop
cmpsl
out
je
leave
cmc
xchg
imul
pop
stos
addr16
fcmovne
bound
and
mov
pop
test
hlt
xchg
dec
mov
mov
push
pushf
mov
cmpl
cmp
sbb
push
das
cs
imul
in
je
adc
pop
out
sbb
jo
pop
adc
pop
popf
push
push
or
popa
icebp
cmp
add
add
mov
or
stc
dec
dec
cmpl
icebp
lock
icebp
ds
push
ljmp
loop
dec
sub
and
sub
movl
mov
and
leave
dec
xchg
aam
movsl
jp
mov
mov
mov
or
scas
lods
adc
decl
or
mov
dec
sbb
or
orl
fisubrl
clc
jg
out
scas
jl
js
jne
clc
jnp
jno
test
pop
scas
imul
mov
lret
pusha
pop
pop
mov
or
pop
lcall
dec
movsl
xor
mov
jp
inc
inc
cltd
lret
inc
cmpl
lahf
cmc
push
mov
sub
insl
fisubs
jp
sbb
popa
push
add
jno
outsb
mov
cli
dec
dec
femms
dec
iret
mov
inc
add
mov
lods
jmp
cli
loop
std
div
jg
ss
out
jnp
in
push
je
pushf
push
in
loop
fsubr
arpl
xchg
fcmovnu
xor
fimull
aad
mov
daa
es
mov
push
dec
out
ret
sub
add
cmpsl
stc
mov
pushf
jns
mov
xor
in
mov
sub
mov
lcall
xchg
xchg
or
mov
push
mov
xchg
cmpb
add
in
or
sub
gs
adc
shrl
dec
add
push
mov
fsubrp
addr16
push
stos
mov
dec
ret
pop
xor
rorl
scas
xchg
xor
cmpsb
or
jge
cmp
xor
mov
push
pop
sub
pop
lcall
sub
sbb
adc
add
divl
or
pusha
jo
adc
add
call
push
jmp
fiadds
lock
add
push
cli
ljmp
loop
data16
fstp
inc
pop
fcmovu
fsubs
mov
pop
adc
or
dec
pop
mov
add
cmp
mov
mov
mov
scas
lods
cld
xchg
cmp
test
stc
xor
lret
lahf
mov
test
pop
mov
aad
ficomps
adc
mov
aad
ret
sarb
jl
mov
fidivrs
stos
xor
in
divl
push
stos
xchg
mov
dec
popf
pop
inc
addl
mov
jg
dec
test
pop
add
lods
inc
sub
je
cmp
cli
xchg
mov
sahf
lods
and
sbb
pop
cltd
daa
es
and
xchg
xor
push
add
adc
jns
setno
sbb
sbb
add
push
call
sub
sub
cs
cmc
lods
sbb
cs
jbe
daa
shl
jecxz
xor
cmpsb
inc
jge
mov
fadds
aam
inc
rcl
iret
pop
push
sbb
rorl
or
rol
inc
imulb
or
daa
mov
cmp
test
das
jns
cmpsb
movsl
xor
fwait
sub
je
popf
pushf
sub
fiaddl
sbb
jge
fistps
adc
shlb
sub
outsb
sarl
or
jns
lret
pushf
jo
jo
jae
push
inc
sahf
push
jmp
sahf
out
jmp
in
mov
xchg
inc
push
push
test
mov
mov
jp
inc
rcl
mov
inc
inc
test
cmp
sarl
dec
das
inc
jbe
outsb
sub
xor
lock
mov
xor
pop
sbb
in
add
adc
or
xchg
lds
ds
jne
push
out
jno
cli
jle
push
push
dec
fisttpl
lock
inc
fdiv
mov
cltd
sbb
loopne
push
imul
push
jb
mov
push
mov
mov
and
filds
icebp
cmpsb
scas
lods
adc
clc
cmpsb
mov
hlt
repz
mov
call
xchg
xchg
loope
pop
adc
adc
adc
imul
jge
aaa
jg
imul
cmc
lcall
imul
mov
push
pop
pop
pop
adc
pop
pop
push
loop
popa
loope
pop
inc
dec
dec
xlat
add
dec
dec
mov
inc
inc
inc
xchg
sub
aas
ds
mov
mov
and
cs
sub
and
aad
adc
jno
push
mov
adc
cmp
clc
dec
or
pop
imul
mov
gs
dec
loopne
sub
hlt
jbe
adc
mov
jmp
ja
fdivs
jae
call
das
inc
test
jmp
add
imul
lret
xor
std
lret
add
add
add
stc
mov
sbb
lahf
repz
loopne
lods
stos
adc
cmpsl
mov
fstpt
push
xchg
popf
pushf
adc
xchg
and
add
add
xchg
mov
data16
jnp
shlb
pop
adc
jb
cmc
andl
imul
sahf
fsubl
fs
xlat
addr16
in
pop
pop
pop
stos
out
sub
push
mov
mov
dec
jle
inc
inc
inc
movl
inc
sti
push
sarb
mov
mov
cltd
xor
cs
sub
and
and
sbb
gs
or
adc
lcall
test
mov
sbb
xchg
cmc
std
mov
inc
jg
inc
out
lock
movsb
add
jmp
jae
or
in
cmp
mov
sub
xlat
ds
mov
push
push
dec
lock
vucomiss
adc
aas
jg
inc
cmp
inc
mull
lahf
stos
test
int
mov
sahf
into
ficomps
xchg
xchg
std
pop
xchg
nop
or
xchg
int3
xchg
movb
into
in
push
sahf
jb
jb
pop
repz
out
das
jbe
lds
ljmp
jmp
test
pop
test
or
push
push
push
cmpsl
cmp
jl
pop
ja
xchg
insl
xor
es
in
insb
cmpsb
xor
xor
movsb
aaa
test
adc
nop
sub
adc
pop
loope
sub
data16
movups
test
or
icebp
dec
pop
push
add
add
xor
lds
jg
sbb
in
in
pusha
repnz
icebp
aad
out
or
ret
incb
sbb
fs
std
rcl
sarl
lret
push
dec
out
ret
ss
sub
mov
mov
popf
dec
pop
mov
cltd
jne
lods
stos
adc
xchg
ljmp
push
mov
add
test
xchg
xchg
dec
or
lcall
dec
lcall
pop
jge
int3
jp
in
ja
jne
jmp
outsb
insl
aad
push
lods
imul
push
pop
loope
mov
pop
mov
cmp
dec
dec
dec
dec
mov
inc
inc
fwait
les
ds
mov
mov
and
pushf
nopl
mov
sub
popa
mov
push
hlt
sbb
sbb
adc
adc
test
cmc
pop
lea
or
scas
or
jo
std
cld
sti
jo
clc
lods
imul
repz
fadds
jne
call
loop
cmp
and
adc
xlat
int
pop
xchg
inc
iret
into
int
mov
rcrb
sbb
dec
add
in
mov
pop
mov
stos
mov
xor
scas
cmpsb
movsl
testl
xchg
cwtl
xchg
lcall
xchg
loop
xor
mov
test
rolb
jnp
out
test
out
jae
negl
push
pop
mov
addr16
pusha
pop
rcrl
adc
pop
push
push
push
lret
mov
shlb
dec
mov
xor
mov
dec
and
xor
popa
xor
mov
test
xor
and
xchg
sbb
lret
mov
adc
adc
or
mov
sbb
sub
std
cld
sti
mov
hlt
div
pop
je
repnz
inc
xlat
ret
jmp
cs
jb
sbb
loopne
fs
fisubl
aam
pop
loope
rcl
pop
adc
push
mov
leave
mov
adc
inc
mov
and
push
and
movsl
movsb
movsl
mov
lcall
xchg
in
cmp
xchg
nop
loop
adc
insl
jno
addb
jg
js
add
les
div
insb
outsb
insl
sarb
mov
mov
pop
pop
pop
shll
push
push
push
lea
rcr
push
nop
dec
mov
jne
inc
xchg
into
lds
cmp
mov
xchg
mov
cmp
aas
ljmp
sub
push
and
xor
sbb
mov
add
outsl
or
pop
jb
repz
push
add
ja
add
jae
in
imul
fdiv
cmp
out
out
arpl
jmp
outsb
fsubrs
out
cli
xor
and
cs
dec
pop
sbb
daa
pusha
push
stc
int
int
inc
leave
ds
scas
jns
ret
ret
bsr
mov
ret
and
out
lods
xchg
xlat
cld
xor
mov
adc
adc
xchg
xchg
push
push
popf
loopne
inc
add
xchg
outsb
pop
repnz
fs
js
cli
cmp
jo
jecxz
imul
push
arpl
insl
dec
loopne
pop
pop
ficomps
imul
scas
inc
fsubr
add
dec
mov
mov
inc
inc
jl
mov
xchg
cmp
ss
movsb
dec
jle
cmpb
sbb
and
insl
add
jnp
sbb
xchg
femms
fwait
xchg
inc
add
or
push
add
pusha
decb
loop
idivb
and
lock
jp
jmp
out
jno
fsubrl
xlat
push
add
fcom
daa
mov
and
push
test
lret
sbb
inc
test
dec
inc
icebp
mov
mov
inc
cmp
test
scas
add
adc
sti
cli
movsl
mov
sub
xchg
fwait
lcall
iret
push
sbb
sbb
rorb
shlb
sub
jg
stos
cmpl
stos
jbe
movsl
movsb
mov
stos
or
fistps
out
adc
fs
pop
pusha
adc
pop
iret
gs
mov
out
xchg
dec
ss
dec
dec
int3
or
das
rorb
inc
cmc
mov
cmp
enter
ss
xor
sub
pop
xchg
and
and
sbb
mov
adc
pushf
push
pop
xchg
rcrl
inc
std
xchg
lea
add
ja
imul
imul
int
mov
xor
jae
call
jo
push
loopne
loope
gs
fcmovnu
fildl
ret
sbb
es
and
leave
lret
out
scas
repz
ret
ret
roll
sub
cmpsb
add
scas
scas
add
adc
in
ljmp
shl
mov
lcall
xchg
into
push
sbb
sbb
mov
shr
mov
imul
test
mov
test
push
pop
push
or
fs
push
cmp
test
pop
sarb
push
mov
dec
mov
inc
inc
inc
mov
mov
cmp
and
mov
push
sbb
pusha
mov
cltd
dec
and
jno
movsb
inc
sbb
sbb
gs
cmp
adc
xchg
xor
or
pop
jl
push
add
std
jb
jecxz
gs
jns
sbb
pop
shr
jns
and
call
or
aad
adc
push
iret
ret
xlat
setbe
inc
repnz
shll
scas
mov
ret
test
test
sti
mov
fs
pop
stos
add
or
lahf
adc
test
push
cltd
cwtl
add
xlat
xchg
jnp
rorl
push
push
mov
xor
jg
repnz
in
jbe
or
jb
bound
jbe
sub
adc
popa
pop
pop
adc
pop
pop
pop
pop
int
ds
mov
pop
aaa
rorb
dec
dec
cld
jl
inc
inc
inc
lods
pop
test
daa
jg
mov
and
out
mov
inc
xchg
lcall
and
xchg
pop
sbb
lea
push
adc
adc
push
nop
shrb
repz
cmp
cmp
jo
push
loope
div
jns
dec
gs
inc
add
jmp
inc
shr
xchg
and
push
fisubl
cmp
aad
shufps
pop
push
and
lret
fcoms
scas
jo
ret
ret
lret
test
scas
mov
sub
scas
scas
cwtl
mov
inc
std
movsb
cmpsb
movsl
xor
lahf
mov
pushf
daa
adc
xchg
xchg
push
xlat
mov
jle
std
test
jge
jg
pop
xor
js
aam
jne
divb
jge
and
imul
gs
pop
pop
pop
les
ds
fst
jbe
dec
dec
mov
cwtl
das
cmc
insl
inc
inc
lds
cmp
cmp
jge
xchg
mov
cmpb
test
jnp
and
and
sbb
adc
pushf
pop
push
or
push
aaa
dec
add
inc
jmp
stos
sti
cli
arpl
testb
and
repnz
pop
fcmovbe
out
xchg
in
cmp
ljmp
fidivl
pop
xchg
das
dec
jmp
cmp
fsts
into
mov
xor
leave
and
int
ret
sbbb
movl
mov
data16
lods
lods
cmp
movsl
cmpsl
cmpsb
push
and
mov
popf
pushf
fbld
xor
adc
int
nop
addb
add
jb
mov
out
sub
scas
insb
mov
bnd
pusha
pop
pop
pop
pop
pop
stos
inc
xchg
mov
push
cmpsl
loopne
jns
dec
dec
mov
fwait
xor
outsl
inc
inc
enter
movb
leave
subb
lds
sbbl
daa
push
addr16
scas
and
in
sbb
sbb
sahf
xchg
lahf
sbb
test
or
push
cmp
push
outsb
adc
rcr
std
cld
sub
sub
cmp
sub
out
fst
test
call
es
lods
enter
ret
cmpsl
arpl
rorl
inc
pop
and
mov
inc
incb
sarl
adc
inc
cmpl
ljmp
sti
aaa
shlb
in
out
xchg
fwait
lcall
xchg
loop
xor
rorb
xchg
out
add
push
inc
jge
pop
clc
lcall
jb
enter
insl
insb
out
sub
in
loop
pusha
pop
loope
pop
xlat
cmp
lcall
adc
push
imul
inc
xchg
lods
or
inc
sub
cmp
cmp
test
xor
je
pop
xlat
xchg
sub
subl
push
arpl
pop
pop
push
sbb
adc
inc
orb
or
lret
inc
cmpsb
test
add
push
lea
lods
sarl
cmc
inc
fistl
jb
out
call
daa
jecxz
push
in
mov
pop
mov
aad
and
cs
or
leave
dec
mov
push
or
lods
cmpsb
push
icebp
sub
sub
lods
lods
in
repnz
cmpsb
mov
addr16
mov
loopne
lcall
stc
xchg
xchg
sbb
lods
and
mov
into
outsl
test
jle
fs
in
js
jmp
ljmp
inc
dec
mov
push
push
iret
push
jmp
xchg
and
lods
out
in
pop
pop
pop
mov
out
adcl
mov
dec
dec
rcll
scas
inc
inc
ror
outsl
inc
inc
aas
cmpsb
inc
and
cmp
lods
inc
push
push
xchg
mov
push
and
and
or
and
mov
les
push
lahf
jb
sahf
push
cmp
jmp
xor
add
jne
addl
sti
push
lock
out
inc
cmp
out
ss
cwtl
lret
fists
mov
gs
add
rcl
and
aam
adc
lret
inc
mov
sub
sub
add
fldpi
lods
out
aam
mov
mov
stos
xchg
int
cmpsl
cmpsb
sub
adc
sbb
lcall
jl
aaa
mov
xchg
mov
test
addl
mov
jnp
cld
cmp
scas
shrb
les
push
fcoml
imul
popa
insb
inc
adc
pop
pop
fstpl
push
push
push
mov
dec
xor
sahf
sub
ds
movsb
jg
jnp
ss
inc
sbb
cwtl
xor
xchg
mov
outsb
sub
sahf
inc
pop
or
and
xchg
sub
cmp
sub
mov
adc
sbbl
adc
or
mov
xor
jmp
lcall
ja
inc
div
icebp
jnp
testb
xor
jae
jae
xchg
loope
loopne
out
roll
aam
rolb
es
adc
sbb
lds
into
daa
xchg
mov
mov
mov
mov
mov
scas
adc
xchg
xor
and
loope
pop
xchg
cltd
and
lahf
movsl
sbb
fmull
hlt
push
mov
test
pop
incb
cmpl
mov
pushl
loope
imul
and
cs
pop
pop
gs
into
pusha
push
imul
push
adc
or
lea
rorb
inc
cmp
cmp
das
mov
inc
out
or
jmp
out
and
bnd
xchg
cli
sbb
xchg
or
mov
adc
sbb
pop
repnz
xchg
mov
or
jecxz
sbb
idivl
mov
out
out
js
stos
insl
lods
or
popa
in
daa
loop
and
mov
fcom
sub
adc
es
or
push
adc
cs
test
inc
cmp
sub
mov
sti
loop
mov
push
jmp
inc
loop
movsb
std
cld
lea
int3
lret
fcompl
xchg
mov
or
leave
test
add
jl
out
cmp
fwait
jne
int3
enter
sahf
scas
insb
lret
repz
push
test
cmp
lods
scas
scas
rcrb
or
ds
aam
pop
jns
test
mov
rcll
xor
sub
mov
cs
cmp
and
mov
stos
popa
add
add
addr16
jbe
push
cmc
push
or
jle
push
sbb
repnz
add
inc
call
clc
testl
icebp
jae
in
jbe
jecxz
clc
jne
stos
jecxz
loop
loopne
dec
int
fadd
call
int
xlat
and
in
mov
fmuls
add
sub
dec
mov
movsb
inc
sti
popf
add
mov
inc
popf
icebp
lods
das
mov
cmpsb
movsl
movsb
mov
out
sahf
adc
sbb
xchg
or
xchg
test
fistps
adc
mov
test
push
aad
jle
or
ss
jbe
test
pop
dec
xchg
jo
xlat
dec
mov
lods
ss
and
fs
pusha
ljmp
pushf
push
rcrb
push
rcll
outsb
fcomps
rcl
push
mov
mov
xchg
into
cmp
xchg
mov
mov
jo
mov
cli
xchg
icebp
pop
sub
mov
nop
data16
arpl
sbb
push
cmc
push
inc
or
popa
pusha
xchg
dec
add
add
cld
lods
jg
cmp
jecxz
repnz
add
sub
int
pop
loop
cmp
xor
sbb
aaa
xor
out
add
into
push
dec
stos
ds
les
dec
inc
jl
mov
dec
or
aas
ss
fwait
lods
lods
add
cli
test
cmpsb
mov
fsubl
xor
push
test
lcall
push
orb
addb
lea
popa
imul
jne
mov
mov
es
gs
or
dec
fiadds
pop
push
push
mov
push
push
dec
pop
dec
dec
mov
inc
inc
lods
inc
xchg
sub
cmp
lds
xor
xor
daa
cmp
adc
and
sbb
push
push
adc
sbb
and
dec
or
add
cld
adc
cmp
imulb
fsubl
icebp
lock
pop
in
jmp
sbb
out
inc
test
sbb
adc
sbb
pop
iret
aad
xlat
and
cmpsl
jno
or
int3
dec
ret
lret
lcall
mov
das
mov
js
ds
add
ljmp
mov
mov
mov
fcoml
rorb
jb
xchg
inc
mov
mov
data16
fs
jne
fildl
loop
push
dec
push
mov
gs
pop
pop
outsl
mov
arpl
push
dec
dec
dec
dec
rclb
push
mov
sub
add
cmp
xor
xor
jnp
gs
es
das
scas
cmpsb
and
push
fwait
push
adc
adc
jg
pop
sbb
hlt
inc
add
adc
cli
stc
sub
sarb
cld
icebp
out
in
aas
inc
inc
cmpsl
call
loop
loope
and
into
xlat
sub
rcl
push
xchg
fstps
and
pop
push
dec
mov
bsr
mov
add
divb
dec
lods
lods
stos
jecxz
movsb
sbb
xor
fwait
repnz
pushf
lcall
push
pop
lahf
adc
mov
test
lea
jge
sbb
jmp
repz
insb
insl
insb
jbe
mov
xlat
push
in
xlat
pop
mov
jecxz
pop
pop
pop
mov
aas
xchg
pop
fcoml
mov
inc
inc
inc
xchg
aas
je
js
cmp
dec
insb
addr16
mov
mov
sub
sub
daa
pop
pop
popa
push
or
push
push
sbb
push
pop
push
adc
cld
mov
or
cmp
jmp
std
jb
jecxz
sbb
idivl
add
repz
shr
out
out
pop
icebp
es
fists
sbb
fcmovnb
xor
aad
dec
fstpt
push
nop
enter
pop
les
or
add
idiv
mov
mov
es
stos
sub
mov
cmc
sub
cltd
cwtl
ljmp
pop
test
adc
mov
mov
mov
sbb
je
xor
insb
clc
scas
dec
rep
mov
in
movsb
push
nop
aaa
stos
out
dec
lcall
push
dec
xlat
stos
cmp
mov
add
inc
aas
lret
andb
mov
jge
xchg
jns
xorb
mov
cmp
lods
sub
sub
and
adc
pusha
sbb
out
data16
or
call
cmp
jnp
outsl
adc
inc
aad
dec
out
dec
sti
cli
arpl
cmp
fdivrs
das
in
stos
outsb
sub
and
sbb
and
pop
pop
and
and
and
push
inc
dec
mov
cmp
mov
cmp
insl
scas
les
fucomp
stos
das
imul
lahf
popf
adc
fsts
orl
int3
jle
cmpb
and
jns
dec
add
adc
outsl
push
mov
bound
lods
pop
pop
mov
lods
rcrb
pop
xchg
push
aaa
add
inc
rcll
inc
inc
ret
inc
jl
ret
addb
sbbl
daa
push
addr16
call
popa
sbb
inc
sbb
arpl
or
iret
pop
dec
or
sbb
test
loop
sub
cmc
js
add
mov
inc
jne
imul
insl
es
push
or
bound
adc
jb
arpl
dec
mov
add
es
mov
cmp
repz
xor
xor
sahf
popf
and
fisttpl
pushf
lea
mov
or
cwtl
jle
jl
ljmp
js
jmp
pop
gs
jno
enter
mov
rep
sub
jae
dec
sahf
pop
out
sub
movsb
push
mov
mov
dec
dec
fsts
inc
jnp
pushf
inc
inc
inc
int3
ret
dec
cmp
cmp
sbb
xor
xor
es
and
and
add
push
sbb
popa
push
pop
push
lcall
cld
push
or
jb
push
dec
push
in
add
pushl
ja
cli
stc
jnp
add
inc
and
out
pop
out
jns
rclb
aaa
in
mov
and
cmc
fistl
fsubr
dec
lds
aam
pop
push
and
int
sbb
cmpsl
pop
enter
ret
repz
inc
adc
lahf
push
mov
push
sbb
inc
repnz
lods
loop
mov
fsubp
out
adc
pushf
adc
xchg
xchg
in
pop
loope
mov
fnstenv
xchg
add
in
loope
test
xchg
imul
fsubrs
aas
jl
pop
mov
pop
outsb
lods
xchg
push
dec
dec
sahf
ficoml
push
mov
jl
inc
aas
ds
and
dec
cmp
mov
cmpsl
push
das
inc
jbe
outsb
sub
insb
xor
push
and
push
xchg
and
sbb
daa
gs
push
push
lcall
xchg
dec
fcoms
sbb
out
sub
frstor
repnz
jae
incb
sbb
out
jo
cmp
in
dec
fisubrs
ljmp
shr
rclb
push
ljmp
ret
xor
inc
jge
xchg
in
jns
adc
shl
xchg
push
fildll
xchg
xchg
movsb
sbb
cmpsb
mov
mov
lcall
stos
xchg
add
mov
bnd
lret
mov
addb
mov
mov
hlt
pop
adc
mov
rol
fistpll
dec
pop
pop
pop
push
add
xor
push
lods
dec
dec
dec
pushf
mov
dec
dec
inc
inc
pop
test
test
xor
mov
sbb
xor
mov
sub
stos
ljmp
popa
push
je
repz
pop
sbb
sub
push
adc
and
dec
or
adc
divb
std
cld
push
push
stc
push
inc
in
cmc
repz
out
in
inc
inc
jmp
in
dec
repnz
and
xchg
and
fcomps
loope
lcall
jl
fbstp
lret
ret
es
add
int
movsl
clc
mov
mov
scas
mov
test
mov
aad
lahf
sahf
es
mov
jne
out
cmpsb
test
rorl
sahf
mov
cmp
jge
nop
push
jns
aaa
test
jbe
jb
fadds
mov
xor
gs
fcoms
aad
inc
cmp
pop
pop
mov
aam
loop
dec
sbb
dec
fwait
xlat
mov
cltd
inc
pop
ret
xor
cmp
add
ss
jne
jle
xor
sub
sub
jge
cmp
adc
push
sbb
loopne
rcrb
adc
fldenv
sbb
and
xchg
mov
std
add
addr16
or
sti
dec
loope
inc
div
cmpl
aad
sbb
call
loope
in
and
fcmovnu
bound
aad
rcrl
adcb
push
push
inc
iret
or
push
or
mov
and
mull
lods
fsubr
test
insl
xlat
movsb
mov
sbb
or
xchg
test
fcomip
jmp
push
mov
test
fsubrl
ljmp
jns
in
ds
outsl
outsb
stc
ljmp
data16
call
movb
shll
mov
adc
insb
mov
inc
inc
inc
mov
cmp
cmp
xor
sbb
icebp
inc
mov
and
and
js
sbb
lahf
or
adc
adc
and
sti
dec
or
jle
out
mov
add
pop
push
call
sub
mov
add
in
add
sub
aaa
into
add
jecxz
leave
add
shrd
int3
lds
cmc
loopne
add
fisttpl
pop
les
or
jl
out
ljmp
xchg
fwait
imull
lcall
in
loope
push
mov
adcl
push
cmpsb
xlat
lret
les
imul
dec
in
inc
adcb
bound
ret
ja
add
xchg
cmpb
xchg
push
test
imul
imulb
dec
test
pop
pop
nop
push
ficomps
imul
fistps
loop
ds
xchg
fwait
stos
mov
xchg
and
cmp
mov
data16
jo
test
mov
xchg
and
js
pusha
sbb
sbb
outsl
std
imul
imul
push
std
decb
fildl
xor
inc
cmc
hlt
pop
or
dec
out
insl
scas
dec
jb
pop
cs
pusha
int
add
lahf
cmp
sub
cltd
push
int3
iret
iret
int
lret
clc
or
adc
rcrb
add
mov
or
scas
cmp
mov
adc
decl
aad
and
rorl
fistpl
fstl
out
test
loopne
iret
ror
test
sahf
fsubrs
enter
lea
mov
in
dec
cli
xor
mov
jo
mov
lahf
pop
stos
inc
jmp
loope
inc
mov
mov
push
dec
dec
inc
pop
jne
test
mov
mov
lahf
push
mov
dec
jp
cs
and
add
mov
sbb
jno
packuswb
pop
pop
push
vmread
arpl
cli
push
or
mov
sbb
ss
inc
std
js
test
push
push
mov
jb
sub
in
inc
ja
push
out
in
xor
movsb
popa
inc
xlat
imul
aam
out
add
into
int3
loope
cli
or
pop
scas
rorl
mov
cs
cmp
mov
mov
and
stos
test
arpl
lock
and
fwait
lcall
xlat
xchg
jge
adc
mov
cli
rol
subl
cmp
jl
jp
out
mov
out
mov
pop
lods
repz
insb
imul
xchg
ljmp
aad
sbb
test
ficoml
leave
push
push
push
push
lds
mov
mov
pop
lret
inc
inc
inc
inc
mov
aas
negl
mov
xchg
xchg
inc
adcb
outsl
and
in
push
push
int3
negl
cmp
adc
test
add
pop
popa
jno
push
dec
add
out
std
jg
push
aas
xor
shll
rep
lret
jnp
dec
dec
mov
aas
je
push
add
loop
cmp
and
adc
fmul
sarl
xchg
mov
into
pop
mov
or
dec
ret
out
jg
inc
or
mov
dec
divl
sti
lock
cmp
lea
ret
testb
arpl
push
and
fsts
and
shrb
jo
int
test
fisttpl
lds
gs
jp
sar
outsb
ja
jmp
mov
imul
mov
lock
inc
lret
pop
shll
insl
scas
push
push
fcomps
imul
pop
sbb
mov
jnp
jns
mov
lret
ret
mov
jge
mov
stos
dec
sbb
test
xor
push
xchg
subl
mov
test
and
pop
push
sub
and
or
sbb
jge
xchg
or
add
xchg
jle
or
push
push
imul
lock
in
jmp
inc
lods
jae
out
inc
cmpsl
cmp
popa
lret
jbe
gs
loopne
sub
rcrl
int3
lret
lret
daa
and
aas
mov
xchg
push
mov
mov
inc
cmp
mov
scas
scas
and
cmpsl
cmpsb
movsl
sbb
lahf
mov
cwtl
sbb
xchg
or
lahf
movsl
mov
popf
insl
add
jg
jnp
shrb
bound
outsb
insb
imul
fs
mov
jg
pusha
pop
mov
pop
aaa
lcall
xchg
push
aam
ret
jmp
cwtl
mov
int
cmp
test
mov
xchg
xchg
jp
sbbl
sub
sahf
and
cmp
loopne
mov
lea
jg
fs
adc
push
js
pop
push
or
repnz
pop
add
call
jmp
sti
in
test
repz
cmpl
jmp
aas
push
popa
notl
dec
loopne
enter
xlat
dec
out
rorl
rolb
mov
and
leave
dec
mov
push
dec
mov
rol
cmpsl
out
mov
push
sbb
pop
pop
mov
stos
add
movsb
sub
out
jecxz
push
lahf
ljmp
xchg
nop
add
mov
xchg
jae
addb
or
imul
mov
jbe
cmpl
lods
addr16
xlat
pop
pop
je
dec
lahf
pop
inc
jae
xor
add
ss
inc
inc
xchg
sub
cltd
cwtl
ja
push
mov
mov
xor
xor
movsl
aas
jle
mov
push
js
and
or
sbb
imul
dec
dec
icebp
call
sbb
pop
mov
mov
mov
dec
test
inc
cmpl
out
jmp
push
fucomip
out
cmp
clc
sbb
and
sbb
adc
aad
roll
add
int
pop
sbb
aaa
ret
ret
mov
mov
mov
mov
lods
xchg
scas
adc
cmc
jmp
mov
loope
lcall
or
mov
test
popl
iret
jnp
std
cmp
jno
jno
pop
pusha
xchg
insb
imul
jno
ljmp
pusha
pop
pop
call
fwait
nop
mov
arpl
rclb
dec
dec
inc
lods
enter
gs
mov
xchg
and
stos
cmp
xchg
xor
mov
cmp
popa
scas
jmp
and
xchg
sub
push
pop
cmpl
adc
adc
add
or
add
push
mov
imull
repz
cs
shl
loope
xor
ds
sahf
lcall
adc
iret
dec
push
add
int
lret
mov
movb
lods
rol
int
js
mov
mov
mov
lods
std
repnz
std
xchg
imul
add
pushf
popf
pushf
add
out
cwtl
out
cmp
jmp
movsb
loope
or
xor
sarb
mov
andb
jne
divl
xchg
cmc
pop
imul
push
gs
shll
inc
fildl
pop
push
push
cmpsl
xchg
nop
dec
mov
inc
inc
rorl
ds
cmp
mov
xchg
inc
mov
outsb
sub
lds
and
pop
adc
xchg
pop
adc
imul
or
or
jno
push
dec
add
adc
cmpb
repz
pop
and
xor
xlat
lock
add
int3
fldenv
loopne
aaa
fcoml
fldz
mov
out
push
mov
int
xor
sbb
pop
scas
popf
push
ret
ret
clc
sbb
xor
and
inc
cmp
mov
mov
es
and
mov
data16
and
lcall
xchg
xchg
in
and
loopne
int
fwait
mov
icebp
mov
adcb
cmp
mov
jns
fnsave
fsubr
mov
gs
les
jns
push
movsb
pusha
in
ljmp
pop
mov
cmp
pushf
mov
xor
fwait
inc
mov
cmp
cmp
push
sahf
test
xor
sub
and
or
and
ja
push
js
mov
adcl
adc
push
sbbl
jl
in
pop
push
add
add
mov
inc
fisubrs
icebp
sub
inc
stc
outsb
inc
call
fsubs
fistl
aad
and
cmp
lret
aam
jl
adc
ret
dec
inc
popf
mov
pop
push
add
sbb
lock
add
xchg
ss
mov
std
mov
mov
pushf
daa
push
js
xchg
xchg
xchg
or
mov
xchg
jb
xlat
xchg
push
pusha
jl
jl
arpl
ja
stc
cmp
outsl
and
insb
andl
adc
pop
pop
pop
in
push
fidivl
push
nop
push
popa
repz
dec
dec
int3
inc
mov
loope
inc
inc
push
add
cmpsl
outsb
lea
jle
mov
je
xor
sub
je
sub
pop
mov
stc
push
push
adc
push
ljmp
add
bound
std
add
jg
test
inc
cmpl
hlt
push
inc
cmp
shr
dec
sbb
and
mov
pushf
out
push
call
rcrb
lods
enter
cmp
adc
xor
mov
inc
cmp
stos
stos
add
mov
out
lahf
sahf
sub
jl
cltd
cwtl
add
jp
rorb
jecxz
jae
adc
addb
jl
bound
int
iret
test
mov
cli
icebp
dec
addr16
mov
xlat
insl
pop
aam
inc
or
pop
pop
fistpl
push
fnstenv
dec
push
dec
lahf
ss
dec
dec
mov
lahf
or
stos
inc
test
cmp
jmp
testl
sub
aas
pop
pop
imul
or
jb
movsl
xchg
and
pop
adc
inc
adc
jecxz
lea
inc
repz
cld
sti
adcl
push
icebp
jge
jl
out
pop
das
in
inc
ja
lock
cmp
dec
mov
and
das
sub
mov
lcall
in
decb
int3
sbb
push
sbb
lods
jle
rol
or
jp
cwtl
mov
mov
clc
mov
and
in
stos
ss
fwait
stc
cmc
mov
in
adc
lcall
cld
sbb
aam
ja
mov
mov
or
xchg
test
xlat
cmp
jg
xchg
scas
mov
pop
jbe
je
mov
mov
divb
lock
imul
push
in
mov
pop
push
insb
xchg
xchg
test
pop
inc
pop
mov
inc
xchg
test
and
pop
cmp
nop
and
outsl
inc
popa
jno
subb
ds
jp
fwait
xor
stc
or
jb
xchg
sub
push
insb
pop
lea
adc
daa
inc
push
adc
or
adc
push
add
dec
add
cmp
cli
sar
outsb
or
int3
repz
in
ret
ljmp
lock
gs
and
xor
pusha
sbb
fmuls
xchg
adc
cltd
xchg
and
dec
mov
sbb
fimull
mov
xchg
repnz
out
test
lods
lods
ss
rcr
jmp
stc
icebp
sub
jmp
pop
pushf
in
pop
fiaddl
sbb
jge
sarb
mov
mov
add
mov
mov
ficompl
mov
scas
push
shlb
repnz
addr16
movsl
pop
scas
pop
das
loopne
into
insb
push
imul
aas
lahf
nop
dec
xor
xor
mov
aas
mov
cmp
aaa
and
clc
aas
mov
sub
add
sahf
and
std
test
sub
xchg
pop
xchg
outsb
pop
sbb
mov
push
adc
push
adc
orb
loope
test
push
jns
add
call
mov
cmpl
ja
fs
ret
inc
sarb
out
pop
mov
ljmp
mov
push
mov
ss
mov
sbb
dec
xor
mov
sti
mov
jmp
mov
push
mov
push
sub
xchg
sbb
cltd
enter
xchg
cld
xchg
loopne
add
adc
aaa
psubd
testl
xor
add
dec
ljmp
mov
insl
insb
push
icebp
les
cmp
pop
jb
mov
loope
cli
mov
dec
mov
mov
inc
push
mov
cld
scas
pop
les
roll
das
cs
sbb
movsl
sub
and
xor
push
xor
sub
arpl
bound
cmc
push
sub
add
mov
pusha
pop
pop
mov
in
div
hlt
inc
jge
and
xor
inc
inc
jne
lock
sbb
and
push
add
aad
rcll
fildl
dec
fnstcw
rorl
ret
ret
dec
dec
ret
or
incb
lock
cmp
sti
test
cmpsl
mull
fisttpll
sbb
in
pop
leave
mov
mov
xchg
negb
or
js
cli
outsb
loop
xorb
xlat
adc
mov
mov
sub
mov
dec
faddl
pop
push
push
test
xchg
addb
cmp
and
lahf
xor
and
cmp
aaa
sarb
lock
mov
sub
lods
shlb
es
adc
jne
fwait
insl
push
sbb
push
inc
push
push
clc
js
pop
jle
cmp
lret
dec
sti
and
inc
clc
push
ret
inc
cmc
push
mov
cmp
pushl
repnz
and
outsl
push
or
loope
and
ljmp
pop
or
rcl
rcr
xchg
adc
adc
mov
add
add
mov
jg
mov
pop
mov
add
std
stos
and
call
cmc
sub
test
test
iret
and
and
mov
mov
lea
addl
hlt
mov
jae
xchg
mov
insb
in
jg
mov
outsl
pop
ja
mov
jae
addr16
rcll
movsl
push
pop
lods
pop
shll
insb
pop
inc
xchg
push
xlat
adc
push
dec
dec
dec
test
fwait
inc
mov
dec
sub
jns
cmp
scas
pop
dec
ret
shrl
xor
sub
sub
and
add
sbb
push
push
pop
and
push
or
pop
pop
pop
add
adc
insl
cmp
cld
jno
test
loopne
xor
hlt
jle
jl
negl
jns
and
mov
sub
jo
loop
je
and
push
sub
aam
cmp
sti
xchg
fstpl
push
lret
push
or
stos
mov
dec
ljmp
mov
movsl
ljmp
mov
das
std
in
test
stos
ret
hlt
mov
mov
repnz
push
lods
and
mov
jnp
nop
xchg
test
fwait
repnz
lret
mov
jle
aas
mov
add
jno
test
push
pop
rcrl
mov
pop
mov
repz
pop
pop
jecxz
push
fcomps
imul
shrb
mov
inc
inc
inc
nop
daa
scas
cmp
inc
cli
mov
and
mov
adc
es
jp
xchg
and
sbb
pop
push
or
or
or
pop
push
push
in
es
add
add
xchg
push
dec
dec
dec
fisubs
dec
aas
inc
aad
jmp
in
lock
jmp
fdivl
gs
pop
pmullw
push
xchg
cmc
pop
xchg
sub
daa
sub
dec
lea
ret
add
mov
aam
cmp
mov
jb
cmp
daa
mov
fwait
lods
adc
popf
sbb
or
out
lea
movsl
adc
imul
mov
xorb
call
outsl
insl
insb
hlt
mov
arpl
cmpsb
insb
mov
popa
xchg
push
push
push
push
lret
adc
ljmp
mov
cltd
int3
mov
push
les
inc
outsl
cmp
cmp
mov
sub
jmp
jmp
add
movsb
cmp
pop
pop
lea
jle
jp
bound
or
adc
add
inc
jmp
xor
mov
adc
or
inc
xor
ljmp
ss
std
shlb
and
ret
out
push
fcom
pop
cltd
loopne
jmp
adc
inc
ficoms
push
stc
aad
into
stc
repnz
ret
dec
sub
or
js
add
stos
mov
fdivs
mov
insl
push
sbb
cwtl
xchg
push
movsb
mov
in
mov
jns
dec
adc
push
js
or
ds
dec
jo
int3
faddl
mov
sub
aam
mov
arpl
and
mov
fadds
push
push
push
mov
lcall
inc
inc
aad
aas
ds
outsl
imul
imulb
das
cs
ficomps
movsl
ficomps
sbb
aam
adc
adc
push
inc
add
testl
add
js
imul
xor
notl
and
or
in
in
icebp
pusha
or
popf
pop
in
jecxz
ret
push
fstp
fcmovnu
dec
fldl
shl
nop
inc
ror
into
rolb
xor
and
xchg
sbb
jg
add
mov
mov
cmp
fucomp
stos
mov
movsl
mov
xchg
pushf
fwait
and
mov
push
xchg
lret
outsb
add
in
outsb
movsl
aad
orb
loop
dec
push
jb
inc
iret
in
shl
js
jo
loop
xlat
mov
cmp
in
xor
mov
push
arpl
sahf
mov
frstor
int
pop
aad
xchg
push
mov
jle
mov
mov
lds
mov
cmpsl
pop
outsb
or
mov
cmp
xchg
inc
pop
cld
subl
xchg
and
dec
in
inc
fbstp
out
and
bound
adc
add
xor
std
cld
push
dec
sarl
or
and
in
jmp
call
in
mov
fisttps
adc
rcl
inc
notl
adc
lret
lret
iret
mov
roll
roll
mov
cmp
jp
lods
sub
icebp
lods
xchg
sbb
movsb
scas
sbb
ljmp
rclb
push
rorl
jae
or
addb
sbb
jg
mov
outsl
pop
xchg
out
sub
fisubrl
cmpsl
pop
enter
inc
jb
push
xchg
push
push
push
push
sbb
dec
rclb
inc
cmpsl
xchg
mov
test
ds
xorb
xor
pop
mov
sub
mov
and
or
insl
add
push
sbb
movsb
fwait
sub
aam
xchg
push
or
or
inc
imul
xchg
out
push
fwait
nop
fisubrl
jmp
loopne,pn
out
in
movsl
push
in
insb
sub
sub
aad
shll
js
lret
lret
fdiv
mov
ret
dec
push
mov
rorb
and
or
mov
jae
mov
fcoml
jmp
popf
lahf
sahf
out
test
lcall
xchg
xchg
ljmp
mov
adc
outsb
jg
jle
ret
int3
jecxz
int
ja
xor
jb
ret
lds
mov
in
or
int3
cmpsl
mov
push
mov
pop
lods
lods
scas
push
imul
fcoml
insl
jns
inc
enter
xchg
cmp
cmp
xchg
sub
jnp
mov
mov
or
movsl
mov
sbb
imul
dec
push
adc
push
int3
es
jb
xchg
mov
pop
mov
in
popf
dec
fidivrs
lock
je
jp
aaa
jae
shl
loope
xor
fldcw
xlat
dec
loop
test
shrb
pop
pop
push
call
push
dec
fnstsw
inc
mov
mov
mov
mov
out
mov
scas
lods
in
test
cmc
xor
cmp
loope
pop
andl
call
dec
jno
fcmovbe
insl
mov
addl
lret
push
mov
fnstenv
outsb
insl
imul
push
mov
gs
test
in
scas
mov
scas
jecxz
xlat
inc
loopne
push
push
cmpsb
or
mov
inc
inc
lods
inc
xchg
sub
cmp
mov
xor
cmpsb
jp
cs
daa
jge
mov
pop
jb
xor
mov
fwait
mov
adc
jns
fs
or
or
pop
pop
cli
dec
testb
inc
divb
arpl
dec
cmp
inc
daa
repnz
dec
dec
fsts
push
pop
aas
sub
rcl
mov
insl
and
xor
or
xlat
arpl
rcl
shlb
pop
mov
dec
lret
xlat
lds
rol
aaa
shrl
adc
inc
cmp
add
imulb
out
stos
adc
sbb
popf
daa
loopne
sbb
mov
pop
push
ljmp
mov
ret
xchg
mov
mov
imull
ret
int
insb
jae
outsl
insb
insl
imul
mov
ljmp
jne
pop
pop
in
jnp
fdivr
iret
pop
xchg
push
dec
shl
int3
push
mov
ror
mov
test
rolb
mov
xor
cmp
mov
mov
cmpsb
adc
arpl
jno
push
mov
lar
mov
add
lea
outsb
in
inc
cmc
stos
pop
repnz
lock
in
in
ljmp
in
cmpsb
cmc
dec
repnz
sbb
aaa
xor
mov
and
xor
cs
xor
mov
cmp
out
outsl
sub
stos
sbb
movsb
sbb
popf
pushf
fwait
shufps
and
xchg
xchg
xchg
nop
clc
mov
jb
mov
adc
cmpl
lret
xorl
pop
cmp
nop
in
xor
in
ficompl
mov
lods
lods
loopne
ja
test
cmpb
aas
leave
mov
inc
inc
shrb
cmp
test
jns
xor
inc
inc
pop
outsl
sub
dec
popf
sub
mov
mov
mov
mov
adc
adc
repz
mov
nop
rolb
jae
cmp
cld
aaa
repnz
out
add
cs
insb
add
push
fdivp
popa
lret
push
fisubl
ss
lcall
and
xchg
or
inc
add
xor
mov
adc
mov
xor
in
scas
scas
hlt
sub
cmpsl
and
sti
sub
jb
and
lahf
sbb
mov
xchg
rorb
lret
stc
popf
pop
cmp
mov
lock
pop
in
test
pop
mov
jo
das
loope
push
gs
arpl
mov
popf
push
mov
scas
sbb
test
or
push
nop
dec
aad
sbbl
ret
inc
cmp
je
ss
mulb
arpl
out
xor
sub
pop
popa
cltd
dec
sub
pop
sbb
pop
lcall
sti
outsl
rcrl
xchg
cmc
mov
push
pop
add
xor
jno
cli
outsl
sbb
hlt
dec
inc
lock
cmp
ljmp
add
outsl
data16
fstp
fistl
fmuls
ds
sub
shlb
mov
dec
mov
mov
lds
loopne
inc
sarl
and
or
jns
mov
xor
das
sub
movsl
xor
mov
adc
or
adc
sbb
mov
mov
inc
or
lahf
jle
inc
loopne
test
clc
sti
jbe
insb
hlt
repnz
stos
data16
in
fildll
pusha
call
pop
loop
fistpl
push
fstps
dec
aad
ret
push
lea
into
aad
xchg
xchg
lret
sub
jnp
xchg
push
xchg
es
push
sbb
mov
dec
mulb
adc
push
push
or
std
xchg
fs
dec
sti
pop
push
inc
jmp
aad
sti
cli
push
test
repz
inc
fdivrs
ja
and
in
aaa
xor
popf
or
fiadds
fldenv
jp
rcl
and
int
xor
and
pop
jmp
mov
jo
xor
sub
cmp
stos
std
stc
xor
sbb
cmpsl
int
fwait
repz
xchg
xchg
loop
movsl
cmpl
adc
or
xchg
notb
xor
jne
jmp
lods
outsb
insl
out
das
jbe
lds
jne
fnstenv
fdivs
aam
ljmp
lret
sub
rcll
pop
test
mov
aas
ds
and
je
xor
lea
movsb
inc
sub
pop
and
and
pop
sbb
popf
frstor
imul
cltd
nop
inc
pop
pop
push
push
xchg
mov
dec
cld
xor
or
loopne
loope
dec
ja,pt
loopne
out
in
xor
pop
fcmovnu
fldt
addr16
jl
aad
daa
and
mov
push
or
cmp
adc
shlb
std
mov
pop
lods
mov
and
push
icebp
add
stos
xchg
xlat
sti
out
leave
sub
lcall
jl
rclb
mov
xchg
jmp
ret
jg
add
jne
js
pop
jmp
pushf
insl
insl
insb
mov
bound
adc
stos
out
add
movsb
push
pop
cmc
dec
dec
dec
xor
lret
or
leave
out
inc
aas
es
dec
cmp
xchg
mov
dec
push
and
xor
sbb
daa
fmull
and
or
sbb
sbb
insl
dec
pop
push
je
outsb
addr16
cld
inc
into
arpl
pop
mov
add
or
push
js
and
jae
xor
out
pop
negb
and
es
lret
and
and
gs
and
push
iret
into
int
inc
shlb
push
pop
leave
adc
inc
rolb
mov
and
mov
lahf
cmpsl
sbb
jmp
fadd
adc
test
fstps
cwtl
or
mov
mov
inc
rorl
push
jg
test
cmpsb
xor
jp
jmp
lods
jmp
mov
lods
fisubrl
jmp
pop
call
fs
xlat
push
mov
pop
mov
dec
rolb
shll
inc
jbe
mov
je
stos
dec
insl
mov
cmpsb
inc
mov
mov
bound
mov
xor
pusha
movsb
sbb
mov
inc
adc
adc
leave
dec
repnz
dec
sti
pusha
pop
jne
mov
daa
lret
xor
imul
cmp
lock
dec
mov
aas
je
cmp
cmp
ljmp
xlat
fcmovnu
fcom
aad
pop
scas
mov
or
aam
ret
faddl
ss
add
mov
mov
popf
mov
cmp
xor
pop
mov
mov
mov
shrb
sahf
int3
stos
pop
xchg
ret
dec
into
js
jno
test
mov
gs
jo
jmp
jge
divl
hlt
jns
jo
das
jns
jo
pop
xchg
inc
sahf
push
push
push
dec
sub
nop
cmp
test
or
pop
mov
leave
inc
je
scas
inc
jl
ss
xor
hlt
in
jle
adc
adc
mov
pusha
and
iret
add
adc
or
cmp
cli
stos
cmp
insl
adc
mov
xchg
mov
mov
push
mov
ret
call
repnz
sub
pop
scas
pop
sub
int3
loope
mov
dec
ret
ret
mov
mov
mov
mov
ret
jecxz
lods
lods
xor
sub
jmp
mov
mov
fwait
sbb
ret
xchg
xchg
xchg
stc
mov
popf
ja
xchg
jl
xchg
add
or
leavew
loopne
fdivrl
lret
clc
pop
mov
out
arpl
in
imul
cmp
in
xor
push
dec
mov
fiaddl
and
inc
xchg
xchg
xchg
ror
push
cmp
ds
xorl
xor
subl
sub
fisubs
and
push
pop
test
and
pop
push
data16
adc
idiv
push
setae
sbb
inc
cmp
push
inc
lock
stc
clc
inc
cmpl
icebp
lock
out
arpl
jmp
push
sub
imul
loop
ficoms
movsl
pusha
mov
out
pop
bound
aam
or
cmp
dec
mov
inc
dec
cltd
mov
mov
mov
cmp
lods
lods
lods
out
cmpsb
mov
movsb
sub
popf
mov
lcall
push
nop
out
mov
je
mov
mov
adc
xchg
push
sub
into
shll
mov
stc
orl
fldcw
mov
push
test
lods
mov
jae
dec
sahf
pop
mov
fdivl
fisubl
or
sub
dec
mov
mov
sub
inc
ds
ss
das
das
cs
sub
jno
pop
in
add
sbb
sbb
scas
sbb
adc
adc
push
lcall
push
in
jecxz
add
lea
clc
dec
fists
hlt
repz
add
jb
jmp
call
mov
popaw
adc
rcr
out
gs
rorb
pop
push
fidivl
lods
sar
rcrb
jge
das
add
popf
mov
add
xor
fidivl
sub
lcall
xchg
in
jmp
js
lds
jo
roll
jl
jl
arpl
mov
test
cmc
jg
insb
imul
mov
inc
xchg
bound
in
mov
nop
ret
push
push
loop
arpl
push
dec
mov
outsl
dec
dec
lret
adc
lds
cmp
orb
xor
sub
sub
adc
sub
es
in
std
xchg
push
stos
stos
mov
push
fs
mov
push
dec
aam
stc
xor
push
add
decb
clc
cmp
aad
js
jmp
in
xor
sub
int3
push
aad
mov
sarb
lret
pop
cmp
inc
daa
mov
dec
add
mov
mov
cmp
push
cmpsl
test
xor
imul
jmp
push
cmp
pop
cltd
js
nop
lea
test
mov
jle
stc
add
cmc
jae
bnd
clc
ret
insl
push
subb
repz
cwtl
aas
bound
dec
mov
push
push
push
mov
mov
dec
into
push
push
and
mov
xchg
int3
ret
dec
xor
cmp
in
out
xor
cmpl
jl
fistpll
pushf
pop
and
mov
sub
sbb
addr16
lods
and
adc
push
and
mov
jmp
clc
push
push
sti
adc
cmp
push
push
dec
dec
jge
test
add
in
rorl
call
cmp
lcall
addr16
mov
aad
js
push
jl
into
int
lret
lret
dec
inc
ret
ret
inc
outsl
mov
test
mov
inc
cmp
scas
mov
cmp
pop
movsb
test
int3
movsb
mov
scas
pop
negl
stc
xchg
xchg
xchg
add
iret
mov
lock
fmulp
test
push
cmpsl
jg
or
adc
cmpb
fnstsw
mov
ret
addr16
xchg
cmpsb
arpl
cmpsb
inc
leave
jl
les
scas
pushf
pop
scas
lods
stos
push
push
fistl
inc
inc
inc
inc
xchg
rolb
sbb
mov
jnp
test
ja
cmpb
aas
ja
stos
rorb
and
imul
aas
pop
push
cwtl
fdivs
std
sub
les
or
pop
xchg
lea
mov
in
and
stc
jnp
push
cmpb
lock
inc
ds
adc
jmp
nop
int3
loope
xor
xchg
xchg
xlat
fcmovu
fsubr
adc
sbb
or
sub
loop
dec
jns
mov
ret
js
mov
lds
roll
pop
stos
mov
incl
test
xor
push
sahf
mov
mov
test
xchg
xchg
xchg
cmpsb
adc
rorl
xchg
sbb
lods
mov
add
pop
ss
outsl
rol
sahf
imul
icebp
call
mov
in
push
inc
mov
push
fistps
into
test
mov
mov
pop
inc
fwait
cmpsb
xchg
lret
mov
sbbl
push
das
cs
aaa
mov
sbb
and
cld
jo
cmpsl
inc
sbb
lahf
fnstenv
fcompl
adc
adc
fwait
xchg
add
or
pop
out
ja
add
cmp
pop
jno
jl
das
in
div
cmc
sbb
jb
and
sbb
sbb
loop
loope
push
out
and
pusha
clc
lret
negb
push
sbb
sarl
mov
cmc
cmp
sub
int
jl
ds
test
mov
inc
cmp
lods
icebp
mov
int3
movsl
movsb
ficoms
and
sbb
add
int
fnstenv
stos
test
jge
je
mov
lods
je
cmc
xor
push
jl
xchg
cmpsb
arpl
insl
shlb
push
push
int3
pop
push
leave
pop
cmp
int
push
mov
cmp
mov
xor
sub
gs
popf
jge
stos
adc
and
mov
js
sbb
sbb
mov
adc
xchg
int
or
pop
lock
add
std
std
dec
in
add
clc
test
icebp
repnz
inc
jge
mov
jmp
cmp
jecxz
out
cmpsl
fs
scas
fcmovu
fcmovnu
arpl
mov
push
mov
leave
enter
cs
sbb
dec
inc
stos
mov
mov
enter
scas
cmp
fdivs
xchg
mov
and
xchg
fwait
lcall
in
sbb
jne
mov
sahf
hlt
mov
test
or
push
jl
jge
xchg
mov
mov
add
scas
push
dec
ret
lods
imul
fwait
push
pop
pop
lds
inc
pop
inc
push
push
and
or
dec
dec
dec
lret
int
mov
xorb
mov
mov
test
imul
and
mov
push
push
sbb
push
fbld
adc
nop
cli
dec
or
sbb
xor
test
cmc
cld
sti
arpl
pop
repnz
jge
sub
jmp
cmp
push
out
in
cmpsl
repnz
adc
in
push
add
mov
mov
mov
mov
mov
out
xchg
and
cmp
lods
mov
add
or
daa
les
xchg
cmp
add
xchg
xchg
pop
push
cmpsb
lret
in
scas
mov
cltd
inc
xchg
cmp
jge
in
mov
rcrb
adcl
imul
jnp
jmp
dec
sub
xchg
push
scas
adc
push
push
push
mov
fnop
add
inc
pushf
xchg
sub
inc
inc
ret
leave
shl
aaa
mov
xor
daa
sub
ja
lcall
push
je
pop
jbe
sbb
addr16
testl
int
xchg
mov
push
out
and
sti
push
dec
test
repz
lock
in
add
fisubrl
or
jecxz
sbb
fsubl
mov
xor
into
pop
push
add
sbb
ret
sbb
inc
jae
mov
rcl
mov
or
cmp
fs
test
cmpsb
sbb
jecxz
push
int
ficomps
xchg
xchg
jmp
mov
mov
sub
fadd
jle
add
ja
ja
pop
into
xchg
jb
repz
icebp
and
addr16
bound
scas
jmp
adc
pop
pop
test
lret
popa
push
push
xchg
mov
inc
inc
les
inc
xchg
mov
cmp
xor
mov
stos
xor
sub
popa
jo
mov
sbb
inc
adc
popf
xchg
jp
or
pop
jno
bound
xchg
mov
dec
in
sbb
clc
jp
adc
out
inc
cmp
call
fstsw
fildll
fstl
adc
pop
dec
into
ror
pop
and
or
push
push
cmp
add
sarb
jmp
ret
aaa
xorb
stos
loop
pop
mov
dec
mov
aas
xchg
cwtl
xchg
lcall
xlat
xchg
loop
fwait
mov
dec
loop
or
mov
jge
in
add
js
pop
mov
das
jl
fsubrl
push
lock
pop
pop
pop
lods
pop
jo
mov
mov
dec
hlt
jnp
dec
scas
rorb
test
jnp
cmp
rol
aaa
ss
lock
aas
out
jle
loop
sbb
xor
xor
fs
sub
pop
add
pop
int
scas
insl
push
adc
sub
int3
daa
cld
mov
add
push
addb
out
das
push
add
inc
jle
xchg
ljmp
sub
jb
push
fucom
filds
fldt
rcll
mov
pop
push
ds
push
dec
jg
shrl
aaa
sbb
mov
fdivs
lcall
push
nop
mov
sbb
mov
and
lcall
sti
ljmp
mov
lock
addl
xor
jns
lret
pop
push
xchg
jae
lret
repz
fdivl
jns
push
movsb
pusha
in
jecxz
pop
pop
pop
test
push
push
push
fs
test
dec
mov
inc
inc
movb
int
idivb
cmp
lea
xor
cmpb
jnp
sahf
xor
cmp
data16
sbb
popf
cmp
push
cwtl
or
imul
pop
xchg
mov
add
add
or
pop
inc
call
cmp
dec
inc
fmul
adc
lock
std
jns
mov
xor
loopne
cs
xchg
xlat
fcom
daa
aad
loopne
out
mov
xorl
ret
sub
add
mov
mov
mov
sbb
lock
cmp
sbb
movsb
mov
mov
push
out
sbb
xchg
nop
loopne
cs
mov
push
inc
test
call
inc
lahf
arpl
jns
jbe
mov
jecxz
shrb
gs
jne
bound
in
movsb
push
lods
jmp
push
cmpsb
push
leave
arpl
cmp
lret
cmp
daa
inc
aas
movsl
xchg
xchg
jge
lds
sbbl
scas
out
cmp
and
or
push
popf
iret
adc
arpl
xchg
and
dec
or
add
xchg
jo
popa
add
fcmove
pxor
jo
pushl
mov
xor
sub
sub
pop
xchg
aad
aad
rorl
shl
or
insl
mov
lods
icebp
loope
rolb
adc
mov
add
scas
scas
and
adc
add
test
stos
or
imul
xchg
mov
cmpsl
and
dec
nop
xchg
nop
jecxz
jbe
stos
mov
cmp
jg
mov
imul
jns
cli
mov
aam
mov
arpl
cmp
adc
push
scas
cmpsb
cmp
rcll
push
jb
jmp
inc
inc
inc
rorb
jecxz
cmp
mov
mov
mov
jle
ds
sub
stos
jmp
mov
fistpl
and
jb
add
jno
mov
adc
sbbl
and
dec
pop
aas
bound
or
std
sti
adc
sub
testl
cmc
jmp
outsb
sbb
out
movsl
repz
fstl
pop
or
push
xor
inc
push
pop
adc
pushw
sbb
push
sbb
pop
adc
mov
syscall
inc
cmp
scas
scas
lods
and
testb
arpl
lods
and
xchg
push
mov
mov
jb
movsl
xchg
xor
jge
js
xchg
sarb
nop
jb
repz
icebp
and
addr16
bound
scas
jmp
adc
pop
pop
test
lret
popa
push
push
lods
stos
jg
movsl
adc
pushf
shll
lds
inc
inc
inc
aas
xchg
xchg
outsl
xor
mov
das
scas
sub
aaa
jmp
scas
cltd
pop
and
fs
pusha
sbb
pop
es
push
and
dec
or
dec
adc
push
add
decb
testl
icebp
jae
cli
sub
pusha
in
jae
bnd
out
dec
jecxz
mov
sub
or
bound
iret
sub
pop
push
lret
lret
sbb
hlt
add
mov
or
out
mov
lods
and
jmp
mov
pop
fbld
test
out
in
call
adc
stos
xchg
mov
fldcw
fwait
jle
add
shr
mov
mov
shr
jbe
je
popf
les
addr16
aad
in
daa
mov
inc
fiaddl
push
push
cmpsb
mov
dec
dec
mov
inc
inc
inc
pop
cmpsl
xor
movsl
cmp
dec
mov
or
ds
adc
ds
xchg
arpl
xor
sub
add
adc
std
repnz
add
mov
push
push
mov
cmp
ja
icebp
gs
jp
adc
mov
cmp
fcoml
sub
aam
rcl
inc
cmc
iret
inc
out
xor
push
pop
scas
jo
ret
ret
fisttpl
lods
mov
sahf
aad
mov
or
cmp
popf
stos
stos
test
loope
out
imull
lcall
xchg
push
push
popf
sbb
mov
fiaddl
sbb
push
jns
mov
arpl
insl
insl
insb
mov
data16
fnstcw
pusha
cwtl
mov
jb
in
inc
push
push
push
push
lds
dec
rcll
push
das
loopne
inc
inc
lds
call
push
aaa
xor
mov
test
mov
dec
and
and
jne
mov
pop
addr16
lret
femms
lcall
sbb
add
or
sti
stc
outsb
mov
or
loop
repnz
testb
push
je
xlat
jno
in
dec
shll
push
push
or
aad
pop
mov
adc
pop
adc
fidivs
inc
loopne
mov
mov
leave
mov
mov
stos
test
arpl
mov
fwait
hlt
ljmp
sti
sarb
fidivs
movsl
mov
stc
dec
mull
jns
jns
in
aas
movb
lahf
jno
outsl
mov
imul
out
jne
in
pop
pop
pop
stos
inc
xor
push
lods
loopne
dec
mov
mov
mov
mov
dec
hlt
adcl
inc
test
mov
mov
data16
push
cmp
movsl
pushf
adc
adc
clc
xchg
or
xchg
dec
int
cmp
add
lea
add
test
cmpl
inc
jg
sbb
in
in
inc
cmp
inc
sub
cmp
loop
loope
and
push
or
aad
cltd
pop
push
pop
xlat
adc
inc
repz
ficoms
testl
jmp
lods
sbb
mov
mov
xor
lods
stos
stos
adc
cmpsl
mov
fistl
je
xchg
xchg
lcall
adc
nop
add
mov
enter
adc
inc
xchg
lret
add
lcall
mov
gs
pop
mov
pop
inc
or
pop
pop
fistpl
push
fnstcw
push
dec
lahf
ss
dec
dec
dec
mov
inc
inc
lcall
jl
xchg
xchg
xchg
mov
xor
sub
jle
nop
push
scas
adc
fstl
sbb
push
mov
adc
mov
jp
inc
adc
mov
dec
add
add
xor
xchg
sarl
cld
div
hlt
jl
and
out
in
jp
jecxz
cmp
insb
adc
jecxz
xor
fldenv
push
rcl
aad
test
adc
in
add
fimuls
lret
cmpsl
mov
into
or
clc
mov
inc
aaa
loope
scas
lods
adc
clc
cmpsb
fsubl
and
sbb
lcall
xchg
xchg
pop
cltd
js
jbe
mov
fisttpll
test
aas
mov
jle
orl
outsb
jno
jno
repz
insl
imul
and
fdiv
test
mov
in
pop
pop
pop
stos
inc
sub
push
lods
fcoms
stos
les
xlat
into
addb
xchg
stos
es
cmpl
jo
cmp
mov
sarl
jge
enter
es
stos
push
push
and
jge
pop
xor
popf
fnsave
movsb
fwait
inc
movlps
fs
pop
or
or
inc
testl
test
inc
cld
jno
loop
fcomip
cmc
dec
inc
repnz
inc
and
out
push
cld
js
sarl
aaa
into
movsl
mul
loop
imul
ficompl
in
pop
sbb
into
int
shlb
xor
mov
lods
mov
push
lods
mov
mov
mov
adc
lods
cld
adc
jmp
mov
mov
sahf
popf
sub
rclb
xor
mov
xchg
cwtl
test
add
loop
je
jb
lods
pop
mov
insb
mov
stos
data16
inc
inc
pop
pop
mov
pop
outsl
lods
mov
mov
loopne
lea
aas
inc
mov
cmpb
movsb
mov
bound
xor
lcall
arpl
lods
rcll
pop
in
dec
pop
sbb
je
or
adc
popf
xchg
or
or
adc
cmp
sbb
lock
std
xor
adc
cmp
cmc
push
out
out
inc
inc
jmp
sbb
out
in
jecxz
outsb
gs
fldt
sub
pop
rcl
rcrl
int
mov
fmul
enter
push
dec
repnz
les
mov
movsb
divl
out
lods
stos
add
jmp
mov
and
lahf
jle
jp
xchg
ljmp
mov
jae
addb
jp
ror
jbe
leave
movsb
mov
sti
pop
out
pop
jo
push
mov
mov
bound
mov
loop
push
push
push
push
xchg
test
dec
dec
dec
dec
aad
push
sbb
inc
inc
inc
inc
mov
jle
std
lods
sub
inc
mov
das
divb
sub
daa
es
test
sbb
push
jne
add
sub
sbb
push
femms
gs
or
nop
xchg
std
dec
dec
cli
paddusw
cmp
jp
addr16
dec
jge
ljmp
out
jmp
fcomp
push
cmp
sub
aam
aad
and
inc
fxch
in
mov
cmp
push
dec
mov
mov
popf
movsl
cli
mov
je
add
xor
cmc
mov
mov
xchg
cwtl
or
in
in
sbb
loopne
mov
or
xchg
pop
mov
fcmovbe
inc
cmp
add
pusha
idivl
jo
test
test
push
movb
sbb
add
push
loopne
loopne
aad
dec
dec
mov
in
inc
lret
flds
inc
stos
inc
enter
mov
xor
xor
mov
sbb
and
and
sbb
cltd
push
pop
push
mov
push
jbe
imul
lock
add
cmp
sbb
test
in
repnz
lock
or
in
jmp
ja
test
in
xor
xchg
gs
ffree
or
pop
fwait
ljmp
pop
mov
enter
movsl
mov
mov
mov
cmp
mov
sbb
test
sub
pop
in
test
stos
cltd
cwtl
sbb
cli
pop
xlat
dec
xchg
lea
mov
jae
sub
lds
mov
iret
add
xor
mov
icebp
gs
shl
jp
arpl
xchg
mov
pop
pop
pop
push
int3
pop
adc
push
fst
dec
dec
dec
mov
call
scas
inc
inc
cwtl
jns
xchg
les
lods
fwait
sahf
lds
pop
pop
outsl
sub
scas
mov
es
sbb
push
xchg
jnp
sbb
inc
sub
nop
pop
or
or
push
push
xchg
mov
std
mov
idiv
clc
loopne
sbb
repz
out
in
cmp
out
fwait
jne
loop
leave
aas
ret
pop
lahf
add
in
sub
ror
into
pop
adc
add
leave
mov
inc
lods
ret
sarb
mov
mov
aas
fsubrs
jno
je
cmpsb
movsl
movsb
push
jno
mov
popf
arpl
push
nop
xchg
xchg
xchg
xchg
xchg
xchg
jp
lahf
mov
push
xchg
pop
into
push
xlat
fsts
or
jns
jg
into
sarb
dec
addr16
add
jae
outsl
push
addl
out
jmp
pop
bound
and
sbb
push
pop
pop
and
push
inc
cld
mov
clc
fmul
cmp
mov
mov
xchg
xchg
into
lds
cmp
mov
xchg
das
sub
sbb
and
gs
outsb
add
push
mov
adc
adc
pop
xchg
and
or
mov
xor
add
pop
add
decb
testl
jle
hlt
sbb
jmp
jae
aam
imul
loope
enter
fsubrl
addr16
add
aad
and
push
pop
int
int
mov
dec
enter
dec
adc
xchg
mov
sahf
or
add
notb
outsl
fisubrs
sub
and
out
in
cwtl
or
xchg
xchg
nop
add
test
jg
orb
jns
jl
shl
jp
call
imull
jno
cmc
repnz
jo
addr16
out
scas
xor
mov
pop
int
cmpsl
test
loopne
rorl
dec
popf
mov
mov
leave
lret
ds
aas
lret
and
mov
ret
sub
das
jg
insl
sub
lods
in
aaa
pop
ret
and
xchg
inc
jno
mov
push
lret
xor
adc
popa
popf
xchg
stos
or
or
mov
jmp
and
incb
jns
div
inc
fsubrl
out
out
dec
xlat
imul
jmp
call
mov
inc
pop
cmp
fsubr
daa
lds
aam
push
pop
int
int
pop
adc
push
dec
out
sbb
movsb
mov
mov
mov
mov
cwtl
loopne
stos
stos
outsb
mov
movsb
and
lahf
sahf
popf
mov
cwtl
xchg
and
mov
adc
mov
mov
jle
addl
jle
test
test
cld
adc
imul
jne
sub
imul
popa
gs
call
mov
adc
imul
push
adc
xor
adc
dec
rolb
jnp
inc
inc
mov
cmp
xchg
movsb
cmp
xor
mov
sbb
fwait
and
and
pushf
adc
mov
push
cmovns
xorl
add
test
aas
sti
jecxz
div
cmc
hlt
imul
inc
push
cmc
push
or
out
in
xor
and
sbb
shll
lret
fst
aam
sub
out
mov
ret
jmp
lret
push
mov
push
pop
mov
mov
inc
lods
lods
lods
xchg
aad
test
add
movsb
mov
pop
xchg
enter
ljmp
jmp
push
dec
lea
outsl
addb
add
ja
fnstenv
push
in
jl
push
test
mov
pop
rcrb
push
fistps
sub
fmul
dec
inc
inc
inc
lods
mov
daa
dec
cmp
mov
mov
sub
push
sub
test
cmp
xchg
loope
sbb
push
pop
adc
jae
femms
pop
pusha
cltd
nop
or
imul
std
cld
mov
hlt
div
dec
inc
xorb
out
in
cmp
call
jecxz
loopne
ficoms
sub
dec
in
dec
fidivrs
pop
push
into
lret
lret
lret
adc
cli
and
mov
movsl
mov
mov
lods
xor
shlb
in
mov
fucom
lahf
popf
mov
mov
cltd
call
xchg
xchg
stc
xor
rorl
mov
xchg
push
add
jecxz
fidivrs
xorb
enter
lock
data16
popa
insb
pop
shll
or
push
in
push
push
push
push
mov
dec
into
push
popa
adc
fwait
shlb
les
inc
inc
aas
ds
cmp
mov
mov
xor
sub
add
jns
data16
movsb
inc
pop
sbb
fcomi
adc
and
lods
sahf
in
pop
pop
les
dec
add
std
cld
push
dec
pushf
push
inc
cmp
jge
dec
cmp
out
in
add
sub
push
ljmp
filds
mov
imul
jmp
nop
xlat
add
mov
pop
rorb
mov
pop
xchg
cli
mov
lret
cmp
or
out
test
pop
ret
imul
subl
xchg
loopne
out
xlat
rorb
xchg
mov
add
or
jbe
ja
int3
int3
jae
into
mov
pop
lods
push
push
loope
gs
out
pop
pop
pop
pop
stos
inc
sbb
push
push
xlat
pop
jb
movsb
cltd
xchg
dec
fsts
mov
mov
cmp
imul
ja
mov
sub
scas
cmpsb
mov
and
dec
pop
sbb
jp
adc
pop
adc
push
ja
or
cmp
dec
push
ds
dec
inc
add
out
cld
cli
stc
xor
add
lock
in
push
out
sarb
out
push
cmp
rcr
lcall
aam
sub
in
std
push
lret
xor
push
scas
inc
cmc
sbbl
mov
xchg
stc
mov
shr
cli
divl
stos
aaa
out
shl
inc
call
lods
sahf
popf
daa
and
out
aaa
sub
xlat
nop
sbb
int
mov
int
orl
mov
les
or
incb
push
mov
mov
arpl
xor
pop
lods
inc
leave
addr16
pop
stos
jecxz
push
push
push
push
mov
and
dec
lret
or
je
mov
test
lea
aaa
sahf
fnstsw
xor
insl
sub
mov
push
and
push
pop
fbld
mov
daa
pop
inc
push
push
pop
je
outsl
dec
or
push
call
jle
add
repz
fldenv
in
in
inc
dec
inc
mov
push
sbb
stc
adc
and
sbb
and
fimull
ret
pop
mov
cmp
pop
decl
push
or
sbb
test
mov
mov
mov
hlt
mov
ss
mov
mov
sub
cmpsl
or
mov
push
push
popf
out
in
push
loop
ja
jne
fisttpll
push
addl
push
icebp
jae
out
je
jmp
pop
push
jle
jo
data16
loope
pushf
sub
repnz
pop
scas
ljmp
cmpsb
mov
dec
les
ja
dec
dec
lret
or
mov
mov
jg
jno
cs
cmp
movsl
xor
mov
and
lahf
and
xor
and
or
loopne
sbb
adc
icebp
sbb
push
or
wbinvd
dec
cld
vphaddsw
mov
test
js
cmp
push
mov
outsl
ljmp
push
mov
fbld
fsubr
inc
lds
aam
ret
into
inc
sar
mov
les
iret
sub
inc
add
clc
mov
cmp
xchg
cmp
test
lods
daa
cld
movsb
mov
sub
addl
lods
sub
mov
sarb
int
adc
arpl
ror
add
pop
jbe
jne
xor
jo
outsb
addl
push
repz
gs
push
movsl
popa
xchg
pop
cltd
pop
imul
mov
test
fistl
dec
push
fwait
popf
popf
scas
xchg
into
xor
cmp
sub
cld
mov
xor
xor
cs
mov
and
js
pusha
sbb
sbb
mov
inc
adc
push
divb
test
add
test
loop
div
cmc
dec
fimull
out
out
in
inc
ja
jmp
popa
in
daa
loop
push
mov
leave
sbb
daa
arpl
rcl
sarb
or
int3
sbb
push
dec
aaa
mov
inc
xor
mov
mov
mov
js
and
xchg
pop
cmpsl
cmpsl
cmpsb
sub
es
fwait
sbb
adc
adc
xlat
nop
mov
mov
dec
fldl
iret
or
lock
js
fdivrl
jp
outsb
lock
out
fistl
mov
pop
pop
iret
inc
in
lret
push
mov
dec
dec
rclb
pop
inc
inc
inc
xchg
inc
mov
daa
rclb
cmp
test
sbb
sbb
sub
cs
test
insb
and
bound
pop
enter
jo
sub
add
adc
xchg
pop
or
pop
repnz
dec
jecxz
sarl
pop
aas
sti
dec
xchg
hlt
hlt
repz
cli
out
out
jo
sti
push
sub
in
in
addr16
push
loop
pop
cltd
aad
popa
pop
fcmove
iret
into
push
mov
aam
leave
push
or
push
dec
dec
mov
mov
inc
aas
pop
mov
mov
stc
lahf
cmp
pop
lods
lods
lods
aaa
lock
xor
cs
stc
sub
cmp
rcll
adcl
mov
test
or
jb
jl
fidivrl
aaa
jno,pn
outsl
cmp
jge
xchg
cmpsl
fs
in
push
and
xchg
sahf
push
push
fstps
sbb
dec
mov
cwtl
jae
inc
xchg
lret
sub
cmp
cmp
jnp
xchg
or
fsubl
stos
mov
test
int
push
adc
add
cltd
pop
loopne
notb
pop
push
xchg
mov
imul
testl
xchg
call
sarb
out
data16
jecxz
loopne
mov
sbb
jmp
aaa
into
ror
dec
and
fstpl
testl
or
mov
stc
mov
fwait
ja
mov
loope
add
sbb
clc
xor
lahf
lahf
sahf
popf
adc
xchg
xchg
xchg
in
pop
push
js
movsb
mov
or
addl
jl
aad
fsubrs
jae
mov
cli
mov
hlt
arpl
subb
lahf
test
xchg
cmp
fidivrl
imul
stos
loopne
add
rcrl
and
mov
jne
ds
cmp
xor
sub
xchg
xor
mov
and
lods
addr16
mov
push
pop
sbb
movsl
data16
lcall
push
setnp
pop
pop
push
insl
subl
adc
sub
stc
addl
daa
hlt
icebp
lock
sub
stc
sub
and
das
imul
inc
cmpl
and
pop
push
dec
enter
or
rol
test
sub
mov
xchg
lds
adc
jle
int3
ss
jns
addr16
movsb
mov
mov
shl
xchg
or
mov
ret
dec
or
leave
addb
push
mov
add
repnz
mov
mov
lods
push
popa
popa
pusha
enter
pop
stos
inc
lds
push
fcomps
mov
imul
inc
inc
mov
add
cmp
std
and
dec
xor
mov
inc
mov
sub
rclb
and
scas
push
sub
mov
pop
adc
call
loop
or
adc
inc
add
adc
cmp
fisubrs
repnz
dec
inc
out
add
sub
rcrl
loope
and
xor
inc
add
arpl
arpl
cmp
shll
xor
push
push
jbe
add
mov
ret
clc
mov
jns
rclb
jmp
or
mov
xchg
sbb
adc
js
xchg
aad
adcb
leave
dec
jecxz
lods
jns
jne
imul
repz
insb
fildll
fidivrl
ja
dec
mov
movsb
lahf
pop
mov
test
dec
mov
xlat
into
xchg
inc
inc
inc
inc
mov
repz
cmp
and
dec
xor
sbb
cs
push
subl
and
jmp
cmpsb
push
lcall
popf
outsb
sbb
ja
xchg
std
bound
add
cmpsb
mov
sub
cwtl
div
cmc
cmc
repz
and
in
shr
leave
out
pop
aam
jecxz
outsb
gs
fildl
inc
sbb
es
pop
push
sahf
lret
lret
lret
leave
mov
sub
shlb
cld
mov
popf
and
mov
xor
cmp
mov
movsl
movsb
mov
or
cltd
scas
cwtl
enter
pop
sbb
mov
cltd
js
cmc
mov
jns
jp
idivb
mov
mov
jbe
je
sub
insb
inc
clc
scas
dec
shrb
repnz
pusha
pop
pop
fistps
pop
int
push
push
inc
xchg
push
nop
lahf
xlat
xchg
push
dec
pop
xor
mov
mov
xchg
inc
leave
sbbb
and
idivb
sub
out
mov
pusha
pop
sbbl
push
sbb
js
inc
jne
ds
dec
dec
dec
outsb
mov
jp
popa
lds
pop
decb
addb
fs
pop
jp
xor
push
jno
pop
repz
jb
dec
insl
stc
sub
lret
into
cmp
fistl
cs
xlat
aad
clc
fstpt
es
lret
cmpsb
cmp
ret
les
aas
jns
sub
out
clc
xlat
mov
shll
cmpsl
sub
sbb
inc
loope
out
and
mov
push
movsl
lret
out
rorl
in
addl
fidivrl
std
jno
in
mov
divb
jecxz
cli
fdivrl
dec
pop
push
imul
push
out
pop
sarl
pop
sbb
pop
movsl
cmp
mov
aam
cmpsb
shrl
int
mov
les
dec
shll
xchg
movsb
cmp
insb
xchg
jp
xor
pop
jo
mov
div
hlt
repz
lock
out
lods
je
sub
ljmp
xor
popl
fisttps
sub
xchg
inc
outsl
repz
jl
mov
std
out
lods
jne
imul
cmpsb
int
push
out
mov
push
loope
loopne
and
pop
pop
neg
das
xchg
pop
adc
iret
lea
nop
mov
dec
stos
adc
inc
add
jae,pt
xorl
sub
addr16
pushf
adc
ja
push
mov
mov
xchg
dec
cmp
add
in
xchg
pop
jp
cmp
loop
outsb
insb
nop
clc
rcr
test
lock
shll
pushf
pop
add
xchg
push
je
fsts
aad
dec
rorb
add
inc
movl
cs
and
cs
ret
imul
jo
dec
cmc
lods
sub
fldl
mov
push
xchg
fsts
xchg
or
jg
scas
or
pop
js
add
test
inc
mov
out
cld
gs
xchg
out
adc
jne
out
push
and
sbb
dec
sbb
add
inc
adc
in
inc
adc
loope
or
aad
or
push
or
dec
add
mov
inc
cld
inc
sahf
inc
clc
inc
sahf
cmp
ds
ss
xor
xor
sub
sub
and
and
sbb
xchg
movsl
adc
push
jns
jmp
jbe
out
jb
jecxz
outsb
std
fildll
les
out
call
and
out
pop
fistpl
xchg
push
xchg
dec
push
cmpsb
cmpsb
invd
rorl
movl
jp
mov
cmc
out
mov
mov
pop
push
sbb
and
sbb
add
cltd
notl
xchg
or
sbbb
mov
or
add
add
fsin
and
test
cmpb
jno
lock
imulb
adc
push
and
faddl
push
data16
sar
inc
adc
sbb
push
lret
dec
or
jno
mov
sub
test
inc
mov
hlt
stos
xor
stos
leave
jbe
ljmp
sahf
and
fwait
sbb
adc
mov
xchg
lds
mov
add
std
mov
cmc
mov
in
push
imul
push
loop
pop
pop
pop
pop
dec
push
push
jp
inc
xchg
push
fstpl
dec
cmc
mov
test
mov
add
js
or
jo
mov
insb
mov
mov
mov
stos
fs
ss
test
sub
push
sahf
push
cwtl
push
cltd
push
xchg
dec
xchg
adc
inc
mov
mov
incb
clc
xor
lock
icebp
fucomp
jecxz
or
in
loope
push
and
in
sbb
icebp
dec
sbb
add
rcrb
sub
xchg
mov
push
lret
dec
pop
leave
push
push
xchg
mov
clc
mov
divb
or
ss
ljmp
lahf
and
pushf
and
cwtl
push
fcoml
out
push
push
pop
push
push
push
push
push
push
push
push
dec
dec
sarb
or
popf
sub
negb
xorb
outsb
jge
imul
movsl
addr16
fs
dec
mov
ljmp
pusha
loop
pop
movsb
push
cmpsl
fdivrl
movsb
fadd
push
iret
aas
mov
mov
cmp
push
xchg
and
pusha
cmp
mov
adcb
push
sub
addl
cwtl
dec
scas
gs
outsb
stos
popa
pop
push
add
dec
adc
xchg
iret
sbbb
or
pop
jl
in
inc
cmp
add
push
fs
imull
push
cmp
icebp
push
mov
xor
dec
mov
jae,pt
imul
ss
mov
sbb
adc
pop
adc
stos
adc
jle,pt
mov
lcall
cs
xchg
mov
in
xchg
shld
mulb
popa
clc
bound
bound
pop
pop
sbb
mov
test
mov
test
push
inc
hlt
mov
jp
in
push
jb
jno
insl
imul
cmp
push
gs
es
or
pop
inc
in
push
ficoml
les
dec
dec
dec
dec
mov
inc
inc
mov
sub
jle
movb
shll
push
xor
out
mov
and
dec
jecxz
lods
pusha
sbb
imul
push
push
arpl
out
dec
adc
inc
in
inc
std
test
xchg
shl
data16
inc
and
repz
enter
call
sti
fcmovb
in
sbb
repz
into
int
and
es
mov
out
fs
add
sti
mov
jne
divb
shrl
addr16
mov
mov
repnz
xchg
ljmp
xchg
out
les
hlt
iret
mov
roll
fisttpl
or
mov
int3
loopne
push
arpl
dec
mov
mov
push
loope
in
popa
fdivl
push
pop
into
jnp
fwait
pop
cmpsl
movsb
mov
pop
xor
mov
lret
das
mov
xchg
sub
xchg
xchg
nop
and
xor
jle
jp
inc
dec
add
jae
std
cmp
daa
test
add
call
adc
out
outsb
or
push
add
popa
out
mov
call
fdivrs
icebp
push
push
loope
ljmp
in
cmp
movb
sub
xor
mov
inc
jmp
ja
xlat
pop
cwtl
out
xor
xchg
mov
int3
lret
lret
adc
lds
push
pop
shlb
fwait
jnp
outsb
fstpt
mov
mov
aaa
lock
imul
dec
mov
cmpsb
shrb
popf
mov
pushf
mov
push
rorl
int
xchg
dec
movl
pop
addr16
cmp
jb
fdivr
mov
out
cmp
repz
fs
shll
loopne
cmp
pop
jmp
push
and
stos
loopne
movsb
mov
dec
dec
dec
mov
mov
mov
sbb
ret
jl
mov
adcb
pushf
jnp
stos
imul
jbe
dec
popf
adc
xchg
xor
in
push
push
pusha
pop
pop
out
sub
adc
jp
add
add
call
mov
div
sarl
cli
dec
dec
ficoml
xor
out
inc
sbb
xor
in
sub
fstpt
int
test
shll
sbb
lahf
lahf
pop
xor
adc
mov
clc
stos
or
lcall
test
sahf
clc
cmc
hlt
jg
les
in
in
ja
mov
jnp
rclb
jmp
adc
fcomp
or
mov
cmp
add
je
jb
sti
jb
adc
imul
outsl
in
les
pop
pop
cmp
pop
push
stos
stos
fcoms
sub
insb
inc
es
xchg
mov
cmp
jnp
sti
js
in
jo
xchg
sub
lahf
xor
cltd
sub
mov
pop
push
test
daa
movsl
pop
sbb
adc
adc
scas
or
decl
add
pop
pop
push
ret
mov
loopne
fdivp
inc
inc
inc
jmp
test
ss
push
repz
fimull
xlat
dec
fidivrs
push
xchg
out
push
adc
sub
and
pop
test
iret
inc
inc
cmp
mov
cmp
mov
out
cwtl
or
out
jecxz
out
cwtl
sub
cltd
add
cltd
cwtl
xchg
pop
fiaddl
mov
mov
xor
push
push
inc
add
arpl
sbb
jno
xor
xor
notb
rep
jb
fs
shll
into
gs
pop
pop
into
push
enter
lcall
or
xchg
xchg
xchg
shll
jne
jbe
mov
push
mov
or
imul
or
sahf
jg
sbb
ja
adc
dec
stc
sbb
testb
sti
cli
stc
cmpl
lock
push
xchg
in
in
jmp
mov
mov
in
jecxz
es
and
bound
and
fmul
dec
loope
pop
bswap
and
dec
sub
mov
mov
mov
push
mov
mov
xor
cmpsl
xchg
scas
das
call
sahf
popf
pushf
fbld
cmc
icebp
pop
push
call
in
pop
rclb
gs
mov
sahf
jp
ja
fbstp
pop
mov
js
fidivrl
lods
jb
aam
in
cmpsb
insb
pop
into
gs
pop
pop
into
push
ret
pop
push
lds
popa
xchg
dec
dec
int3
or
rorl
inc
mov
cmp
inc
cmp
xor
mov
dec
mov
dec
sub
addb
or
fwait
xchg
and
fwait
xchg
cwtl
imul
iret
xchg
jl
mov
jle
cmp
jb
jecxz
dec
clc
testl
jo
js
insb
gs
and
push
jmp
and
pop
inc
fsts
fcmove
dec
xchg
push
push
les
dec
repz
or
add
xor
roll
mov
cmp
lods
sub
outsb
outsl
outsb
imulb
mov
repz
add
xchg
nop
add
mov
adc
inc
or
mov
cmpb
jbe,pn
jae
in
cli
mov
je
mov
sbb
and
jle
test
push
mov
mov
orl
dec
lods
shrl
inc
inc
int
fs
leave
xchg
inc
stos
inc
mov
outsb
cmpsb
push
push
mov
mov
push
mov
nop
sub
sbb
push
adc
clc
dec
push
or
adc
leave
imul
pop
pop
push
mov
add
icebp
lock
outsl
lock
call
out
insl
xor
sbb
in
loopne
fcmovu
xlat
cwtl
daa
and
xorl
push
sbb
adc
dec
or
inc
add
inc
and
mov
scas
call
dec
lods
stos
stos
test
mov
sub
mov
pop
mov
mov
mov
jbe
test
push
push
push
dec
dec
or
roll
lock
xor
inc
jb
test
loope
movsb
pusha
jbe
frstor
bound
bound
pop
shrb
inc
pop
fnstenv
push
dec
pop
ret
repnz
outsl
mov
or
inc
inc
inc
aas
shll
lods
inc
mov
xor
loope
jo
sub
mov
mov
dec
mov
lahf
popa
pop
scas
fstpl
pop
push
and
loope
adc
adc
pop
ljmp
std
jl
cli
jns
cld
gs
addb
or
imul
pop
fcomps
push
cltd
rcll
aas
jb
outsl
enter
inc
add
dec
les
add
mov
and
rolb
sub
test
and
mov
adc
fcompl
stc
adc
xchg
in
push
rorb
aad
enter
adc
les
bound
rorb
add
pop
cli
mov
pop
clc
mov
pop
repnz
notb
test
push
ljmp
push
loop
out
loopne
loope
ficoml
dec
dec
dec
inc
dec
xor
aad
mov
loope
js
in
je
in
scas
jo
std
stos
insb
sub
out
stos
cmpsl
and
js
fisubl
fwait
push
adc
adc
iret
enter
mov
xchg
inc
stc
cmpl
xor
scas
jp
pop
sbb
jb
sbb
fsubs
push
lcall
lret
flds
lret
shlb
in
pop
testl
cltd
mov
sti
mov
jnp
mov
mov
xor
mov
daa
fstps
loopne
pushf
shrb
sbb
xchg
fstl
aam
stc
mov
into
mov
iret
inc
push
sub
je
sbb
xchg
push
mov
mov
repz
push
ss
stos
gs
popa
pop
inc
pop
jecxz
pop
fildl
fadds
aad
pop
rcr
aas
lock
dec
insb
fdivl
test
lret
xchg
push
les
mov
xor
sbb
mov
sub
pop
sub
sub
mov
sbb
stos
inc
xchg
push
adc
dec
or
xchg
stc
addl
inc
incb
jl
cli
add
je
repnz
out
js
jns
jb
jbe
jo
jno
push
outsb
imulb
imul
pusha
sbb
pop
adc
ficomps
pop
push
or
rclb
push
lret
dec
dec
add
inc
cld
inc
mov
mov
scas
mov
scas
mov
es
mov
in
fcompl
add
xchg
sbb
xchg
in
in
push
dec
sbb
into
mov
int3
xchg
mov
fiadds
or
jp
mov
std
mov
clc
mov
enter
imul
stos
ljmpw
pop
in
pop
jecxz
pop
ficomps
scas
pop
adc
dec
cs
cltd
add
cmp
das
xorb
inc
call
mov
fisttpll
dec
adc
out
pop
jecxz
mov
icebp
arpl
pusha
push
inc
lds
or
xchg
adc
add
shlb
or
add
push
xor
lods
jecxz
jne
outsb
outsb
icebp
xchg
inc
daa
loopne
and
loopne
fistpl
cmp
aam
xchg
rolb
mov
lret
mov
mov
ds
cmpsl
mov
cmp
imul
adc
cmpsb
movsl
inc
pop
add
mov
cmp
sti
ficoms
xchg
push
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
dec
dec
or
mov
xorb
jbe
je
scas
cld
jb
outsl
loop
jne
fisttpll
mov
jl
inc
insb
xchg
fwait
pop
int
pusha
adc
push
les
or
push
sub
add
into
pop
cld
or
jns
ret
divb
xor
mov
sub
xchg
add
loop
push
sbb
mov
dec
adc
inc
imul
rclb
jmp
add
mov
jo
clc
or
jbe
lock
add
sub
cmp
lock
jecxz
fs
mov
iret
sbb
dec
jmp
adc
fxch
lret
int3
adc
ret
mov
out
jnp
inc
add
mov
ds
mov
mov
ss
ja
cltd
int
jno
out
icebp
xchg
mov
push
lret
gs
adc
mov
adcl
mov
jno
idivl
outsl
outsb
insl
idivl
jne
xchg
leave
jmp
loopne
pop
insb
loopne
pop
pop
pop
xchg
cwtl
xchg
sbb
xor
dec
cmpsl
push
sarl
xchg
xchg
stos
ds
cmpsl
inc
cmp
test
xor
mov
cs
pop
imul
xor
and
imul
cltd
fstl
incb
rclb
mov
jns
mov
mov
inc
decb
lock
cmc
xor
cld
das
in
cmp
jo
pop
adc
xor
fcoml
jae
pop
fcom
lods
pop
xchg
dec
add
adc
ds
cmp
lods
icebp
mov
mov
adc
mov
ret
mov
dec
std
cmc
scas
lods
rcl
jmp
loop
sbb
jmp
sti
cld
popa
imul
bound
pop
pop
sbb
mov
sbb
scas
lcall
clc
mov
mov
mov
outsb
push
add
xchg
js
rclb
lods
mov
inc
xor
outsl
pop
mov
mov
in
jnp
fcoms
push
int3
pop
pop
add
push
xchg
cs
cltd
sub
repnz
lds
sarl
aaa
jae
adc
mov
mov
fcompl
and
or
inc
mov
int3
dec
pop
inc
in
xchg
dec
lret
lcall
or
dec
add
pop
pop
jmp
cmp
cmp
jbe
arpl
jp
xchg
cs
fwait
sbb
int
arpl
or
push
mov
xor
das
xchg
roll
shll
and
mov
adc
adc
xor
lds
test
sbb
and
xor
xor
leave
mov
outsl
adc
and
pushf
adc
out
mov
lret
mov
std
jge
fnstsw
pop
in
lahf
add
cmp
in
imull
jg
lret
arpl
and
aas
sarb
or
sbb
cmp
push
push
dec
fistl
rorb
int3
mov
xchg
roll
mov
push
inc
daa
cmc
xor
dec
aaa
fwait
sub
or
xchg
and
and
mov
cwtl
roll
or
xchg
loopne
out
push
js
test
add
xchg
inc
cmp
and
adc
inc
dec
dec
stos
fisubrs
push
repnz
and
xlat
int3
fwait
rcl
rolb
movsl
mov
int3
or
aaa
mov
loopne
sbb
cmp
es
push
lods
stos
sub
mov
js
xchg
movsb
xlat
gs
inc
pushf
pushf
fwait
sbb
push
xchg
mov
test
pop
xchg
addr16
sti
pop
ja
jbe
std
mov
icebp
push
insl
insl
insb
imul
push
imul
fs
push
cmpsb
shlb
sbb
pop
fstps
pushf
dec
shll
push
ret
mov
mov
int
ret
sub
addl
jp
mov
cmp
cmp
add
and
push
insl
add
inc
sbb
lcall
add
mov
or
adc
add
dec
es
sti
push
push
cmpl
cmp
out
jae
popa
in
lods
cmp
pop
or
jecxz
push
icebp
fists
in
les
lcall
repz
inc
out
mov
mov
inc
xchg
test
dec
xor
les
rorl
or
jb
xchg
iret
stos
stos
test
test
bound
xchg
or
xchg
xchg
xchg
jmp
dec
dec
mov
fimull
mulb
pop
roll
hlt
insb
je
cmpsl
aad
jne
fistps
mov
fiadds
push
out
mov
pop
mov
les
push
repnz
mov
mov
inc
ret
pop
mov
ds
mov
xchg
sub
sub
jae
jne
adc
dec
pop
push
dec
xchg
jbe
adc
push
or
jns
mov
test
jno
jle
sbb
inc
lock
out
jno
jmp
pop
push
sub
add
pop
repnz
repnz
fimuls
sub
ljmp
sub
les
add
lds
inc
cmp
jg
mov
adc
cmp
and
xor
lahf
adc
pushf
adc
xchg
xchg
or
dec
fimull
dec
in
loopne
xlat
or
mov
js
mov
ja
cmp
cmpsl
adc
ficomps
arpl
in
pop
inc
fisubrs
push
push
aad
pop
aam
lret
sbb
pop
rorl
dec
es
cmp
mov
mov
das
lea
stos
adc
jp
xchg
sub
fdivl
clc
or
jg
jb
daa
ret
adc
sub
enter
out
inc
add
jg
outsb
fldl
idivl
out
xor
je
push
call
mov
add
frstor
or
pop
lods
inc
fsts
inc
rorl
mov
push
mov
cmp
shll
dec
mov
mov
xchg
ja
mov
out
xor
scas
in
xchg
mov
leave
cmpsb
out
add
std
xchg
jne
pop
and
mov
in
pop
push
pop
pop
pop
pop
push
push
push
push
push
push
push
push
dec
dec
push
ret
inc
or
sahf
jns
ja
add
xchg
jb
xor
mov
je
cmc
inc
sub
lock
bound
pop
iret
insl
jecxz
cltd
mov
enter
les
dec
dec
mov
into
add
dec
adc
inc
clc
aaa
xor
mov
sbb
daa
stos
push
and
repnz
out
loope
sahf
std
sbb
sbb
adc
xchg
test
xor
adc
xorb
pop
pop
das
mov
cs
sub
fisubs
leave
pusha
adc
pop
into
cmpsl
int
sbb
push
mov
pop
mov
das
das
pop
adc
daa
mov
and
add
push
push
sbb
pop
adc
aas
lahf
xor
cmp
mov
xor
es
fsubs
mov
es
xchg
in
or
inc
nop
iret
push
lcall
test
xchg
add
in
jl
ret
dec
icebp
xchg
outsl
stc
xor
lret
sub
xchg
cmp
dec
mov
dec
lods
lods
scas
scas
loop
popa
arpl
iret
popa
fldt
rol
inc
iret
xchg
dec
mov
out
cmp
lds
inc
aas
xor
mov
ds
out
imul
xor
and
and
pop
and
pop
mov
sahf
pop
adc
inc
rcll
std
pop
add
push
call
and
add
jne
divb
jbe
std
repz
jns
call
sti
pop
adc
mul
imul
dec
in
bound
rolb
mov
sbb
lret
rorl
cmp
inc
mov
add
mov
popf
mov
mov
xor
xor
lock
sub
mov
sbb
xchg
xchg
pop
fsubs
push
psubusw
rcll
push
test
test
lret
add
cmc
out
js
rol
loopne
push
dec
bound
dec
fbld
pop
out
fisttpll
arpl
pop
cmp
dec
dec
movsl
xor
dec
dec
inc
out
cmpsb
mov
cmp
ret
cmp
imul
xor
mov
sub
xor
fnstcw
daa
es
jl
cld
das
mov
push
dec
mov
pop
adc
sbb
pusha
hlt
cmpsb
and
or
ja
push
out
adc
sti
test
push
jl
imul
xor
xor
jae
cmp
lret
dec
xor
aas
in
fcmovu
xlat
dec
fisubs
es
push
nop
jecxz
enter
mov
push
inc
test
aas
mov
mov
push
adc
dec
fucomp
stos
xor
das
lock
sub
fwait
out
bound
out
jl
js
mov
xchg
fbstp
fwait
mov
pop
mulb
in
xlat
sti
cmp
enter
fsubrs
mov
gs
xchg
movsb
popa
jmp
jecxz
sarl
xchg
lods
movsb
pushf
push
push
cmpsw
cmp
pop
dec
dec
rorb
mov
inc
inc
sub
add
sub
xor
cs
or
sub
push
wbinvd
and
lcall
adc
fwait
push
sbb
dec
add
add
pop
add
mov
jg
push
jle
push
jp
hlt
repz
jecxz
xor
pop
inc
je
test
jmp
in
ficoms
les
pop
lcall
dec
mov
out
push
mov
in
int
mov
jge
mov
jns
mov
mov
xchg
xchg
nop
test
mov
sbb
popf
pop
pop
mov
xchg
cmpsb
sbb
xchg
xchg
xchg
out
ret
rorb
movb
rorb
mov
out
std
aaa
shrb
ret
push
cmovle
mov
pop
inc
cmc
jnp
pop
fstpl
push
enter
dec
sub
xchg
dec
dec
pop
stos
ja
inc
into
cmp
aas
dec
ret
cmp
cmp
mov
xor
inc
mov
sub
cmpsb
aaa
sub
stos
in
xor
or
ficompl
or
nop
rcrb
out
clc
pop
add
add
cli
minps
cmp
jp
push
cmp
in
jmp
idivb
iret
push
repz
addr16
mov
xor
lcall
pop
dec
repnz
xor
mov
dec
rorl
adc
jl
mov
ds
xor
insl
scas
stos
test
movsl
pop
mov
insl
pop
mov
cltd
cmp
add
int
push
dec
cld
stos
or
popf
sub
mov
jns
jbe
ja
inc
ljmp
push
jno
loopne
push
lock
stos
subb
pop
pop
pop
push
lret
fs
aad
ret
mov
arpl
inc
inc
mov
push
roll
cmp
ss
ss
add
mov
shll
daa
movsl
xchg
add
adc
push
adc
xchg
rorb
push
or
iret
nop
sbb
pusha
ret
xchg
aas
push
add
mov
jp
jp
adc
dec
lods
jno
jb
or
inc
movsl
ss
xor
xor
in
test
pop
pop
fstps
lret
push
psrlw
cmp
testl
and
sub
repz
mov
movsb
lock
and
push
ret
lcall
sbb
loopne
cld
mov
jle
sti
cmpb
andl
mov
lret
sbb
jb
dec
aas
pop
popa
pusha
in
mov
aad
xlat
insl
pop
lret
arpl
pop
xchg
lds
dec
ja
xor
inc
mov
daa
mov
std
inc
mov
xor
pop
push
push
movsl
and
dec
scas
push
push
insl
add
cmp
sbb
or
andps
cwtl
push
and
dec
sbb
inc
adc
std
cld
adc
jge
cmc
hlt
repz
add
dec
mov
outsb
cmp
or
loope
in
test
mov
out
mov
lahf
sahf
and
pop
adc
in
mov
loopne
adc
fmuls
in
repnz
mov
inc
xchg
inc
cld
fcmovnb
lods
movsl
test
iret
mov
xor
scas
jb
jo
outsb
xchg
popa
or
mov
mov
sbb
lods
pushf
jle
mov
nop
mov
test
xorl
xor
push
xor
xor
xor
cs
mov
iret
jno
mov
jbe
andl
xlat
outsb
push
aas
cmp
pop
ja
sub
cltd
pusha
dec
lds
pop
cmp
sbb
or
pop
std
add
sbb
xor
sbb
mov
push
sbbl
adc
dec
sub
push
and
add
dec
sbb
int3
jbe
icebp
dec
mov
in
mov
mov
mov
scas
scas
cmp
xor
fsubl
in
jecxz
push
jmp
loopne
cmpsb
les
or
out
dec
add
fld
jnp
int
inc
or
int3
stos
mov
xor
sti
lret
arpl
mov
daa
fistpll
xchg
imul
pop
pop
jne
adc
shrl
xchg
or
mov
push
inc
pop
inc
dec
jge
in
gs
negl
int
xor
out
cmpsl
xchg
inc
popa
cs
imul
xchg
je
les
jle
aam
xchg
mov
sbb
sbb
cwtl
lcall
and
das
andl
and
lods
lock
ss
fwait
movsl
and
adc
pop
xchg
or
nop
adc
adc
lock
add
push
data16
mov
hlt
imul
ss
in
jbe
insb
lods
pop
and
pop
sbb
leave
loopne
fstp
pop
sahf
xor
rorl
ds
sub
cmp
int3
inc
shll
enter
or
stos
mov
sbb
mov
mov
sub
lods
add
testb
clc
std
sti
mull
arpl
pusha
pop
pop
sbb
mov
adc
adc
stos
mov
fisttpl
je
cld
mov
pop
jl
test
jb
jnp
jl
jnp
mov
sub
in
js
xor
mov
scas
pop
mov
leave
mov
sbb
adc
iret
xor
cmpsb
movsb
or
or
and
daa
aas
mov
sub
xorl
mov
and
out
xor
xchg
and
aam
sbb
sbb
je
jmp
outsl
rcll
xchg
pop
aas
sarb
dec
jbe
cmp
jae
inc
outsl
or
div
hlt
hlt
je
icebp
lock
out
sub
inc
test
insb
sub
ljmp
xlat
aad
dec
neg
es
xchg
ror
lret
lret
push
int3
or
xor
mov
inc
mov
das
mov
xor
outsl
stos
dec
movsl
movsl
movsb
and
and
mov
cmp
add
mov
push
aad
xchg
push
jno
imul
cld
addr16
jmp
jae
outsb
insl
loope
cmc
inc
sub
fidivl
movsl
loop
rorb
lret
sbb
push
dec
ret
cmp
and
xor
jbe
shufps
mov
enter
push
cmpb
mov
jo
xor
push
jle
cmpsb
xor
out
adc
adc
sti
or
xchg
sbb
lret
add
add
fidivrl
insl
enter
push
ljmp
loop
jmp
stos
insb
stc
insb
and
out
cmp
cmp
cmpsl
pop
pop
mul
pop
shrb
sub
lea
push
ficoms
call
adcb
test
cmp
mov
push
or
and
mov
movsl
movsb
mov
sub
sbb
mov
cs
xchg
xchg
sbb
xchg
dec
lea
ret
add
sarl
ror
pusha
jns
jne
int3
lret
pop
jp
push
imull
mov
and
data16
and
call
pop
loop
push
dec
pop
popa
pop
sbb
xchg
dec
lret
mov
inc
scas
inc
lret
fwait
inc
xchg
es
mov
xchg
cmp
mov
jns
mov
sub
jns
push
cmpsl
imul
push
pop
sbb
cltd
fnstenv
rolb
adc
rorb
adc
dec
call
mov
cli
mov
push
push
push
mov
fdivrs
in
inc
inc
shlb
out
jo
jo
add
add
xor
sbb
aad
sub
mov
dec
mov
push
mov
popa
daa
add
mov
divb
scas
xchg
jp
stos
test
movsb
or
pop
pushf
fwait
lcall
std
xchg
nop
add
lcall
dec
xchg
dec
out
sub
jg
mov
jns
cli
cmp
iret
test
mov
mov
fidivrs
fimull
nop
mov
push
mov
pop
push
movsb
fldt
mov
adcb
cmc
sahf
cmpl
rolb
ja
test
fwait
cmp
and
lock
sarb
pop
mov
jb
inc
popa
push
pcmpeqd
xor
push
add
push
inc
xor
stc
loopne
div
hlt
dec
dec
jbe
dec
arpl
jmp
push
icebp
jno
sub
sub
loope
push
mov
cmp
ficoms
dec
neg
inc
fstpl
push
mov
int3
enter
leave
scas
mov
test
and
mov
lret
nop
lods
lods
das
mov
and
adc
and
ljmp
adc
or
lret
jb
adc
popl
inc
hlt
cmp
jl
filds
pushl
xor
outsl
outsb
divb
outsl
jne
xor
movsl
pop
popa
rcrb
inc
jb
dec
test
dec
lods
ret
pop
int
jns
push
rorl
inc
leave
mov
mov
ret
mov
mov
sub
and
jno
xchg
sub
jge
pop
push
mov
sbb
xor
xchg
dec
adc
mov
test
jb
jl
cli
test
jnp
push
aaa
jno
add
pop
or
loop
jecxz
in
fbstp
xor
push
lock
jmp
fcom
popa
sbb
push
xchg
fstl
aad
push
adc
push
inc
fisttps
cmp
in
push
mov
inc
stos
movzwl
or
mov
mov
xor
sub
call
and
lret
bound
pushf
and
in
jmp
xchg
nop
adc
or
enter
sahf
or
add
inc
cmp
cltd
test
xchg
subb
jl
outsb
imul
mov
dec
loop
imul
pop
fdivl
dec
roll
add
mov
rcll
add
jno
aaa
mov
inc
mov
sub
sub
test
xchg
and
jmp
adc
mov
xchg
pop
and
stc
adc
and
lea
mov
cmpl
idivl
cmc
add
icebp
out
out
jo
psubw
call
addr16
add
or
lahf
sbb
rcl
mov
inc
aas
xlat
add
or
lret
mov
lret
sub
xor
loop
ret
jmp
add
das
add
and
imul
xchg
xchg
sbb
adcb
inc
push
int3
mov
mov
test
test
adcl
cli
jae
lock
outsl
out
sub
outsl
jne
das
out
xchg
dec
xchg
loope
sbb
popf
pop
pop
aad
lods
stos
cmp
mov
cmpsl
cmpsb
aaa
push
jmp
rorb
mov
pop
mov
dec
clc
cld
mov
inc
jge
xor
fs
pushf
pop
mov
sbb
pop
xchg
adc
loopne
dec
out
mov
dec
fiaddl
push
hlt
adc
mov
adc
repz
mov
cli
aas
cmc
orb
pop
repz
jl
add
cmp
jbe
cmc
fisubrs
mov
out
and
gs
pop
cmp
leave
xchg
aad
into
int
dec
inc
out
mov
cmp
inc
movsb
les
mov
sarb
sub
jmp
test
aad
icebp
mov
bnd
lds
and
xchg
cltd
test
je
xchg
push
test
push
adc
jg
push
clc
mov
jae
jl
addb
insl
imul
push
jbe
scas
je
fldenv
lcall
push
les
lret
jp
push
jbe
dec
ret
jb
xor
inc
dec
inc
lret
pop
femms
xchg
lret
sub
stc
mov
je
or
jae
sub
lcall
out
jl
ficomps
lea
adc
adc
and
dec
pop
icebp
pop
aaa
ret
xchg
je
dec
in
xor
stc
push
jp
hlt
mov
mov
mov
mov
mov
mov
mov
scas
scas
ss
xor
data16
jmp
pop
push
ficompl
mov
xchg
push
les
iret
mov
dec
add
add
std
cld
test
or
je
pushl
sbb
lods
sti
cs
or
pop
mov
lahf
pop
xchg
xchg
add
add
scas
js
xchg
mov
addr16
les
mov
jae
pop
pop
pop
outsb
insl
clc
mov
ret
adc
fldt
pusha
in
test
dec
jae
pop
shrb
popa
int3
arpl
enter
addr16
dec
dec
dec
mov
inc
mov
aas
rolb
insl
add
hlt
jnp
icebp
sbb
hlt
xor
jbe
sub
ljmp
pop
popf
add
fistpl
pop
adc
push
pop
xchg
push
repnz
dec
out
jne
add
mov
mov
dec
xchg
fdiv
imul
lock
jno
cld
mov
jae,pt
push
in
inc
sbb
loopne
mov
jp
xlat
aad
aaa
pop
not
iret
into
int
mov
sbb
push
dec
sub
mov
inc
int
add
mov
jp
xchg
scas
scas
lods
lods
xor
mov
test
stos
ljmp
sahf
loop
xchg
lds
mov
mov
mov
jg
push
icebp
ja
dec
shlb
je
fbld
iret
mov
push
clc
mov
mov
popa
dec
xchg
mov
pop
inc
aam
pop
push
ds
push
push
fcmovb
pop
fistl
mov
mov
dec
xchg
inc
inc
enter
orb
lods
cmp
sbb
jge
mov
cmp
push
and
and
sbb
movsb
pop
mov
adc
popf
push
cld
lcall
pop
pop
out
dec
push
add
pop
pop
ret
in
outsl
xchg
loopne
out
hlt
repz
inc
cmp
lock
pop
pop
out
fdivrl
inc
fcmovu
jmp
cmp
shrb
sub
adc
leave
cmp
lods
imul
shll
mov
mov
mov
and
out
lods
outsb
dec
add
in
cmpsb
sub
mov
insb
and
or
add
push
in
add
lods
xchg
in
mov
aad
lea
mov
jg
xor
mov
hlt
jns
test
ret
in
dec
pop
mov
pop
inc
sub
fnstcw
sahf
adc
mov
dec
inc
fildl
inc
inc
push
jne
cmpl
mov
xor
lcall
xchg
daa
jge
and
mov
subl
prefetch
cmpb
adc
add
fimull
clc
xor
add
lock
repz
adc
stc
push
lret
push
scas
fcom
inc
in
and
shlb
dec
aam
xchg
int3
push
inc
xchg
lods
mov
aas
sbb
mov
add
test
mov
popf
popf
pushf
adc
adc
mov
ret
mov
jmp
or
jp
popa
sub
je
int3
lods
xor
lods
fcomps
addr16
mov
es
je
push
pop
fsubrl
xchg
xchg
ds
pushf
cwtl
das
inc
inc
lds
mov
mov
mov
mov
ret
sub
daa
cmpsl
mov
loope
fbld
js
fimuls
adcb
pop
cmp
jp
and
push
sbb
lret
pop
or
mov
movsb
mov
xor
mov
div
js
notb
stc
push
loop
call
jecxz
cmp
jmp
repnz
aad
xchg
inc
loopne
add
das
adc
leave
fiadds
or
testl
mov
ljmp
dec
fucomp
stos
das
imul
mov
mov
ficoms
hlt
xlat
nop
clc
mov
pop
in
iret
mov
xchg
and
leave
orb
loopne
jl
jp
js
cmp
or
mov
push
add
mov
cmc
jae
mov
mov
bound
pop
push
push
pop
aad
cmp
orb
aam
lret
iret
nop
dec
xchg
xchg
lret
jl
nop
ret
xor
stos
cmp
sti
xchg
repz
mov
data16
pop
cmpsl
push
cmpsb
sub
fcoms
sahf
popa
mov
notb
push
or
and
pop
clc
mov
mov
push
out
lock
imul
out
popa
in
push
daa
inc
jno
call
sub
cld
dec
clc
xchg
fcom
push
pop
popf
movsl
mov
ret
sahf
jmp
orb
into
cmp
dec
push
enter
fisttpll
cltd
jae
mov
xor
popf
ds
mov
movsb
jg
inc
popa
insb
cmpsl
cmpsb
movsl
mov
in
cmpsb
mov
xchg
and
mov
mov
loope
pop
out
mov
jnp
fisttps
int3
jp
jg
lret
addb
jge
inc
xor
mov
insl
shll
out
jmp
out
pop
pop
pop
or
fbstp
mov
xchg
cmpsb
andb
into
and
leave
push
lds
xorb
xor
push
push
mov
mov
sub
sub
nop
cmp
sbb
sbb
or
xor
or
push
or
xor
pop
mov
mov
lret
lret
test
ljmp
xor
add
in
sub
push
fsubl
fstps
ficomps
pop
push
aam
sbb
push
cmp
mov
dec
pop
leave
inc
cmp
mov
cmp
mov
mov
mov
cmp
cs
sub
movsb
sub
mov
out
shl
pushf
or
sbb
xchg
xchg
adc
test
rolb
sti
mov
xor
ja
cmc
cmp
jbe
test
push
push
dec
out
movsl
sbb
fcmovbe
addr16
lret
gs
xor
dec
dec
int
ss
push
push
lahf
dec
rorl
ds
lock
ss
jne
mov
mov
pop
and
sub
cmpsl
sbb
pop
push
mov
popf
xlat
and
adc
or
add
dec
or
popa
clc
aaa
div
inc
inc
icebp
jnp
jbe
xor
mov
sub
loop
mov
out
in
push
push
xlat
popa
loop
xor
ficoms
push
mov
enter
push
and
into
mov
sbb
mov
cld
ret
xor
repz
and
dec
aaa
or
movsb
sbb
push
fwait
cltd
or
fcoms
mov
xchg
and
ffreep
jnp
mov
fnstcw
push
jno
xor
push
je
mov
cmpsl
jb
lods
inc
das
xor
pop
push
pop
dec
pop
loop
xchg
dec
test
test
lds
sahf
cmpl
xor
insl
mov
jae
into
mov
cmpl
jbe
or
jnp
pop
mov
adc
fwait
adc
dec
or
dec
push
sbb
mov
in
adc
jb
in
mov
out
pop
fmul
repnz
push
shrb
sbb
jb
xor
push
and
cmp
dec
or
or
sarl
in
push
lods
cmp
mov
xchg
in
movsb
sbb
xor
jp
std
cmpsl
adc
sarl
popf
pusha
add
jbe
les
ffreep
loope
cmc
xchg
add
xchg
cmp
mov
sarl
pusha
lods
into
insb
in
clc
inc
cmpsb
inc
repnz
jb
fisubrs
aad
loope
jo
dec
xchg
xor
fs
shrl
aad
push
mov
inc
inc
inc
lcall
jge
mov
data16
xor
sub
outsb
daa
mov
xor
xor
movsb
movsb
cmpsl
ficoml
mov
or
jl
nop
xchg
movl
inc
pop
push
repnz
jmp
pop
lock
xor
les
fistps
jae
push
in
loope
faddl
xor
pop
pushf
fisubs
pavgb
lret
pop
xchg
dec
xor
push
dec
ret
add
or
flds
inc
jae
lods
lods
adc
add
jb
out
xchg
daa
call
lcall
adcb
test
or
fidivrs
jnp
js
sarb
jp
shl
insl
jmp
addr16
xor
dec
in
lods
pop
jmp
xchg
pop
push
sub
mov
js
fistl
dec
pop
rolb
xor
jno
lea
mov
das
mov
mov
sub
stc
inc
cmp
or
movsb
add
pusha
sbb
adc
push
adc
test
lea
dec
add
add
jnp
cmc
hlt
repz
in
push
lock
fidivl
ljmp
push
loope
sub
fs
adc
fmull
pop
sbb
rclb
jmp
push
roll
test
int3
rolb
shlb
js
mov
xor
mov
stos
sub
jp
xor
lahf
stos
sbb
lcall
loope
xchg
pop
sahf
sbb
mov
add
cmp
inc
jl
jp
push
xor
je
repnz
pop
js
clc
mov
jb
outsl
in
scas
jae
dec
jmp
dec
pop
sub
mov
pushf
orl
int
sarl
pop
jp
int
cmpl
xor
mov
xor
push
mov
mov
pop
stos
sub
jbe
fdivrl
sahf
pop
xchg
jb
push
arpl
or
ss
dec
mov
loopne
dec
cld
xor
cmc
sub
push
push
cs
mov
dec
imul
lock
fstpt
cmp
xor
shlb
xchg
push
int3
lret
xor
push
lret
inc
stc
arpl
rorb
rcrb
cli
mov
jl
stc
ret
sbb
test
movsb
cli
mov
popf
xlat
bound
fbld
jmp
rorl
xchg
into
xchg
mov
jl
xlat
mov
bnd
divl
leave
sub
imul
mov
ficoml
push
and
xchg
cmp
mov
mov
dec
inc
inc
inc
pushf
into
les
ds
ret
jle
shlb
jae
mov
aaa
js
and
or
mov
das
push
sbb
sbb
sub
iret
adcl
pop
push
add
add
cmp
jae
xchg
jp
in
repz
out
out
in
jns
out
call
shl
loope
push
leave
fcom
pusha
push
fstps
iret
mov
leave
fadd
push
or
std
mov
xchg
mov
scas
mov
mov
mov
cmp
mov
in
mov
repz
out
lods
sub
cmp
cmp
xchg
xchg
pop
fcmovbe
sbb
mov
dec
pop
rclb
mov
jg
std
pop
inc
dec
arpl
xchg
lds
ror
lret
shl
in
push
jae
mov
out
cmpsl
jno
mov
call
in
insl
andb
xor
or
mov
dec
inc
inc
inc
into
int3
inc
cmpb
cmp
xchg
test
jge
and
gs
mov
popa
and
andb
push
adc
sbb
sahf
sbb
in
dec
add
sahf
push
push
or
xchg
push
add
decl
dec
xchg
inc
mov
add
push
addl
clc
fs
or
mov
mov
insb
sub
lods
stc
xor
rcr
inc
cld
pop
sbb
out
in
out
dec
mov
inc
xchg
stos
dec
or
scas
mov
push
inc
ja
mov
lods
mov
mov
divl
rep
sub
mov
pop
lahf
pop
push
pushf
push
fbld
mov
pop
test
addl
mov
jge
add
cmpsb
jo
jno
out
fsubrs
andl
jae
mov
out
push
mov
fbld
fstps
test
nop
dec
inc
les
pop
mov
sti
roll
inc
xor
test
scas
jo
sub
lods
bound
sbb
xchg
mov
jae
les
pop
push
test
out
lea
or
mov
mov
inc
shrl
hlt
cli
je
repz
loopne
es
push
loope
sbb
pop
adc
push
adc
ret
mov
leave
mov
ret
int
idivb
fisubrs
ret
aas
pushl
pop
frstor
add
daa
call
push
lcall
xchg
sahf
adc
mov
inc
orl
and
jl
lds
mov
mov
insb
imul
xor
push
mov
int
loope
pop
je
cmp
fcompl
enter
nop
dec
inc
cmp
pusha
fcmove
add
cmp
ss
stos
cmp
xor
xor
daa
lods
jo
stos
xchg
and
lea
sbb
rorl
dec
jg
jno
arpl
lock
cld
addb
dec
idivb
ja
hlt
jbe
in
and
out
pop
inc
insl
cs
fdivr
fs
xlat
cltd
pop
and
fadds
push
dec
fmulp
inc
fimull
push
xchg
xchg
mov
push
enter
add
jae
mov
xor
xor
testl
in
cmpsb
cmpsb
adc
pop
xchg
xchg
xchg
and
jno
mov
cwtl
adc
xchg
or
jnp
jle
fcmovu
aam
cmp
mov
fidivl
ret
ret
loopne
daa
cmp
test
addl
popf
push
push
imul
rolb
into
push
dec
inc
inc
shlb
jae
inc
test
cmp
mov
popf
xor
add
cmp
and
pop
xchg
outsl
push
jmp
aam
xchg
rclb
push
dec
or
jnp
xchg
push
add
jns
enter
lock
sar
outsl
jmp
mov
and
push
scas
inc
sbb
popa
sbb
pop
add
iret
into
or
enter
or
dec
pop
fmuls
leave
inc
cmp
inc
mov
mov
mov
xorb
mov
leave
jbe
call
mov
xchg
cwtl
fwait
xchg
xchg
adc
sti
nop
out
cmc
push
mov
lret
xchg
xchg
js
cltd
std
or
jns
jbe
mov
mov
pop
insl
insb
imul
push
aas
in
daa
dec
xchg
pop
fcompl
ret
pop
scas
push
push
test
dec
mov
inc
jns
movsb
xchg
push
fldcw
insb
clc
xchg
xchg
xchg
testb
sub
sub
xchg
daa
and
mov
push
or
mov
xchg
push
push
mov
or
nop
dec
pop
lea
push
imul
test
jg
clc
repnz
xchg
push
xor
sbb
call
ret
dec
and
fidivrs
xor
sub
sub
adc
fimull
enter
sub
fidivrs
divl
mov
and
stos
ljmp
mov
popf
mov
int3
fcompl
pop
mov
fcmovnbe
mov
rclb
mov
std
mov
jns
sub
negb
xorb
pop
jne
inc
out
jmp
bound
xor
xlat
rorl
into
jle
push
loop
jae
aam
dec
ret
pop
mov
or
inc
inc
dec
inc
inc
mov
inc
cmp
scas
inc
mov
ss
xor
jo
lahf
xor
movsl
das
es
jae
and
jle
js
fisubs
in
push
adc
sbb
cmove
js
or
lret
je
jmp
sub
repz
out
std
in
in
fcompl
jb
or
insb
lock
push
add
push
fadd
add
cs
rcrl
rcl
mov
xchg
xchg
in
dec
or
out
leave
jns
ret
jnp
cmp
sarl
mov
fcoml
fisubs
or
loopne
xchg
adc
ljmp
icebp
xchg
insl
sub
rorl
push
add
enter
lock
in
pop
addr16
loope
out
out
ja
pop
pop
out
test
fidivrl
insl
adc
pop
push
ja
mov
lahf
dec
jnp
mov
scas
dec
mov
xor
mov
cmp
insb
and
sub
push
sbb
push
adc
or
clc
setbe
xchg
dec
push
nop
push
adc
cmc
aaa
repz
sub
or
dec
icebp
cmp
int
in
loope
mov
add
fistl
rcl
loop
rclb
aad
dec
ret
mov
push
and
dec
idiv
hlt
scas
inc
mov
mov
mov
out
aaa
repnz
lret
xor
mov
iret
cmpsl
movsl
movsb
pop
jb
jecxz
sub
or
sbb
xchg
pop
popf
sbb
leave
test
xchg
psrad
or
cmp
lea
jnp
in
out
movsl
push
pusha
jae
insb
jecxz
pop
mov
lret
inc
loopne
dec
mov
mov
pop
dec
dec
cwtl
popf
iret
mov
push
lds
js,pt
dec
mov
lahf
xor
cmpsl
sub
sub
xor
dec
stos
arpl
movsb
outsl
adc
adc
adc
or
cli
or
pop
adc
add
std
cld
add
or
idivl
cld
repnz
in
lds
fdivl
jmp
in
sbb
push
fisttpl
pop
cltd
ffreep
setnp
xchg
pause
push
adc
push
psrlw
into
dec
and
jmp
jmp
rol
ds
mov
cmp
pushf
in
loop
stos
stos
das
imul
sti
test
aas
mov
fcompl
xchg
xchg
xchg
mov
lcall
add
push
mov
fcmovu
aam
cmp
add
std
mov
mov
mov
pop
popa
pusha
pop
cltd
dec
in
push
in
loopne
pop
je
push
xlat
mov
mov
xchg
dec
das
dec
lds
inc
les
jg
pop
add
xor
scas
insb
sub
mov
ss
pop
xchg
gs
cmp
sbb
dec
adc
add
std
jge
inc
dec
add
mov
jmp
daa
jb
xor
add
hlt
repz
in
jp
fdiv
cli
mov
sbb
push
push
jmp
in
rorl
fiaddl
aam
mov
xor
push
and
sbb
std
shll
inc
aad
repnz
cmp
aaa
push
mov
mov
or
sub
sub
rcl
pop
or
out
add
sbb
cmp
outsl
sub
popf
xchg
mov
movsl
cmp
nop
pushl
shll
cli
lods
jae
push
jge
stos
insb
into
sub
aas
bound
sbb
cmpsl
fdivrl
fldenv
push
popf
push
sti
dec
lcall
cmp
std
fs
imull
mov
cmp
out
lods
es
call
sbb
add
pop
sub
push
or
jp
xchg
or
jg
std
jno
cmp
in
xor
js
jns
daa
mov
pop
or
data16
loopne
sbb
dec
out
or
fisttpl
adc
aad
inc
lds
mov
dec
sub
ret
dec
add
dec
shr
iret
mov
mov
mov
cmp
stos
or
xor
scas
sub
stos
sub
lods
inc
sbb
sbb
xchg
xchg
xchg
cmp
mov
mov
mov
sahf
or
mov
jle
jl
enter
incl
mov
icebp
shll
in
into
je
mov
enter
out
push
aas
loop
push
pop
rorb
fistl
xor
inc
inc
enter
inc
xchg
and
xchg
popf
sub
mov
push
lods
xor
sbb
imul
push
adc
push
hlt
cmp
les
jle
sbb
cmp
jle
mov
repnz
ret
jp
call
push
out
dec
loop
fidivs
les
pop
lcall
xlat
push
aad
fbstp
push
or
and
adc
mov
std
ret
out
xor
adc
mov
std
mov
out
mov
movsl
movsl
movsb
mov
daa
jecxz
push
bound
jmp
xlat
nop
lea
xchg
mov
add
pop
bnd
out
gs
addb
mov
jno
mov
lock
xchg
xor
aaa
pusha
pop
pop
xlat
push
jne
data16
pop
pop
or
aam
les
inc
and
inc
jb
dec
cli
mov
imulb
mov
aaa
mov
les
sub
and
bound
mov
outsl
in
insb
out
sahf
imul
arpl
xchg
pusha
out
orb
test
pop
jb
jg
std
insl
and
adc
cmp
aad
cli
outsl
inc
out
out
push
xor
pop
sub
ffree
push
aam
pop
int
mov
dec
push
les
cli
lret
inc
or
sarl
xlat
inc
test
lods
stos
das
imul
xor
cwtl
lahf
xchg
jno
fdivl
cwtl
cltd
xchg
xchg
sbb
outsb
pushf
dec
push
pop
lea
adc
push
outsb
imul
outsl
addr16
jnp
stc
jae
jmp
add
je
insb
lock
icebp
lods
push
je
ss
pusha
loop
dec
pop
inc
and
pop
push
jecxz
frstor
sbb
xchg
sbb
add
les
mov
mov
mov
mov
stos
inc
mov
xor
sub
adc
outsl
sbb
sbb
popf
data16
lcall
dec
inc
andl
mov
cmp
test
orl
dec
movb
js
leave
sti
mov
out
pop
cld
outsl
es
das
fstl
ljmp
aam
pop
lock
xchg
ficoml
mov
les
lret
sarl
and
mov
lahf
fidivrl
jb
movsl
adc
cmpsb
sub
sahf
popf
pop
xchg
repnz
adcb
xchg
mov
je
cltd
or
int3
lret
div
enter
jmp
mov
pusha
jns
je
imul
jo
fistl
popa
popa
gs
out
push
push
push
mov
xchg
dec
pop
push
movsb
aad
rcll
inc
inc
les
mov
movb
jp
mov
or
cs
jne
divl
cmpsl
mulb
and
test
loop
push
adc
xlat
push
fimull
or
or
add
mov
aaa
lds
hlt
repz
in
jmp
mov
fldt
ficoms
call
fsub
aas
iret
sbb
in
pusha
pop
loope
inc
or
sbb
rol
adc
jle,pt
inc
cld
stos
cmp
js
xchg
shrb
popl
sbb
mov
and
sahf
cwtl
xchg
xchg
jp
xchg
mov
adc
inc
xchg
test
xor
mov
jae
mov
mov
imul
out
stos
gs
rorb
int3
outsb
gs
and
ficompl
adc
inc
sub
ret
cmp
xchg
inc
divb
push
xlat
xor
mov
sub
outsl
and
mov
and
xchg
sub
and
pop
or
pop
push
adc
test
xchg
int
xchg
dec
sbb
jl
nop
dec
sti
mov
mov
stc
test
or
stos
out
lock
aas
jnp
movsb
cmp
incb
jo
in
pop
fisubs
pop
ret
pop
fcmovnu
push
roll
pop
push
xchg
lret
lret
fucomp
dec
or
sbb
mov
mov
enter
mov
mov
mov
int3
cmp
lods
add
cmpsb
movsl
rcrb
mov
out
popf
mov
cltd
cwtl
and
in
jl
push
nop
lea
xchg
or
addb
sbb
js
test
clc
jae
jno
jecxz
lock
outsb
jns
gs
stos
jno
adc
pop
filds
push
push
sbb
dec
aaa
xchg
sbb
das
stc
inc
inc
inc
or
jl
rolb
jle
add
pushf
sub
adc
and
sbb
sbb
push
fcompl
sbb
adc
add
or
push
add
inc
rol
inc
out
decb
cmp
div
repz
fcmovu
xor
scas
sub
in
in
loop
sbb
fcmovu
pcmpgtd
rcl
adc
in
and
adc
sub
lods
dec
or
inc
les
mov
popf
mov
mov
sti
test
mov
cmpsb
movsl
lcall
loop
jmp
xchg
aam
mov
xchg
adc
jg
mov
cmp
arpl
lret
cs
pop
popa
scas
gs
stos
jne
xlat
push
pop
popa
pop
pop
mov
cmp
pop
push
push
lods
xchg
xchg
dec
mov
rcrb
enter
lret
push
cmp
ret
sub
adc
sub
mov
test
and
lahf
adc
pushf
daa
in
or
sbb
pop
add
xchg
js
or
jge
dec
mov
inc
out
cld
dec
jmp
mov
mov
loop
cmp
jno
cmpsb
outsb
cmp
fstp
push
lahf
gs
lcall
mov
dec
lds
push
mov
mov
xchg
dec
add
shlb
test
rep
mov
in
lcall
fmul
adc
xchg
jecxz
aam
fisttps
sarl
push
pusha
xchg
orl
mov
ja
jp
mov
popf
pop
andb
fisubrs
lods
push
nop
dec
insb
pop
and
shrl
mov
cmp
push
push
ffree
xor
xor
ds
or
push
rorl
inc
xchg
cmpsb
pop
and
aaa
ss
sbb
mov
xor
pushf
or
push
and
and
and
mov
or
cmp
in
push
add
cmpl
cmp
jbe
divl
cmp
jl
out
gs
jne
sub
jae
lods
xor
fnsave
or
shlb
fcomps
pop
adc
dec
mov
dec
mov
inc
jle
mov
push
mov
mov
and
test
push
lcall
loop
jmp
push
mov
add
xchg
nop
adc
pop
or
pusha
or
xchg
ja
jnp
mov
ds
dec
and
insb
cmp
stos
push
mov
mov
pop
call
or
fistpl
push
rcrl
mov
inc
inc
dec
hlt
std
daa
inc
mov
lods
aas
push
mov
mov
cmp
and
je
cmpsl
xchg
sub
xchg
xor
jg
and
jnp
sbb
scas
add
incl
stc
insl
incl
jno
dec
dec
mov
ja
push
cmc
jae
xor
cmp
pop
push
push
add
dec
std
call
sbb
inc
hlt
jmp
mov
lret
dec
mov
dec
add
ss
inc
jl
pushf
sbb
adc
clc
xlat
mov
mov
cmp
xor
lret
mov
fists
and
mov
sbb
cmc
sbb
mov
adc
or
cmc
adc
test
repnz
pop
mov
xchg
cwtl
dec
mov
mov
fsubrs
popa
inc
jecxz
pop
pop
fstpl
push
push
push
push
pop
push
dec
cltd
xchg
dec
imul
inc
mov
inc
aas
sbb
sti
mov
and
dec
mov
sahf
xor
pop
sub
movsl
in
movsb
ficoms
fwait
jl
adc
and
push
sub
jge
push
xchg
dec
stos
push
jmp
jg
adc
insl
fsubp
stc
repz
pop
jg
in
jmp
pop
adc
cmpsb
pop
or
push
add
mov
scas
ret
mov
imulb
test
rcll
lods
scas
mov
xchg
mov
jl
xlat
mov
mov
lods
and
xchg
out
mov
cmpsl
sub
cld
sti
push
hlt
sub
pop
ljmp
cwtl
out
mov
loope
lds
aas
lock
test
jae
xor
jb
sub
lods
outsb
sub
jae
popa
pusha
pop
loope
pusha
pop
fisubs
gs
pop
sbb
or
or
push
into
xchg
test
cmp
cli
mov
cmc
cmp
hlt
jno
mov
insl
sub
lods
xchg
sub
arpl
mov
fstl
push
aam
xchg
dec
push
nop
adc
mov
jle
std
leave
fdivrs
jmp
mov
sti
ja
repnz
jb
in
mov
gs
rcr
movsl
arpl
loopne
in
sbb
leave
mov
mov
in
cwtl
dec
test
or
dec
int
add
mov
inc
or
jge
xchg
lods
mov
xchg
int
cmpsb
movsl
sub
test
in
cmpsb
and
cmpsl
stos
inc
pushf
or
ficompl
adc
xchg
mov
xchg
cmc
xchg
lret
test
jmp
add
cli
je
insb
ja
imul
sarl
pop
arpl
int3
arpl
xchg
pop
rclb
aaa
imul
push
rorb
and
dec
leave
addb
sbb
add
je
mov
daa
mov
loope
sub
inc
pop
push
pop
sbb
mov
lahf
pop
sbb
push
adc
int3
push
in
or
jge
jecxz
mov
ss
jp
add
jmp
cmc
movsl
out
ret
fcmovnu
out
loopne
sbb
repnz
adc
dec
stos
lods
rcll
pop
fstps
cwtl
adc
inc
cld
mov
idivb
mov
shrl
jnp
jns
fiaddl
and
lcall
fwait
mov
bswap
mov
xchg
ja
mov
jge
jbe
xchg
imul
jo
insl
in
mov
movsl
insb
gs
fs
dec
loope
arpl
pop
fstpt
loopne
or
shrl
dec
into
xor
insb
mov
mov
and
ret
sbb
mov
cmp
ss
test
sub
ss
fiadds
lcall
pop
pop
andl
and
sbb
rolb
pop
mov
jnp
cld
addl
dec
mov
jbe
insb
aam
jno
in
cmp
kxnorw
and
dec
ljmp
mov
ror
lret
and
scas
pop
ret
ret
xor
mov
lret
mov
popf
and
xor
test
sub
mov
movsb
stos
push
popa
cwtl
xchg
xchg
lcall
out
mov
xchg
test
xchg
push
or
jnp
jns
jmp
imulb
jp
jo
xchg
test
jp
stc
push
outsl
aas
bound
push
xchg
sahf
pop
aaa
pop
inc
fistps
enter
sub
xor
sbb
je
cmp
sbb
lods
adc
or
or
adc
add
or
daa
negl
hlt
xor
dec
push
adc
icebp
scas
test
ljmp
push
loop
fisttpl
ficompl
xlat
ds
loop
addb
repnz
or
and
jmp
out
shrb
ret
ret
sbbb
mov
push
int3
mov
pop
mov
iret
into
jne
fimull
enter
or
rcl
inc
cmpl
pusha
sub
mov
lahf
xchg
pushf
add
frstpm(287
mov
and
fwait
lcall
loop
loope
stos
mov
rorb
pop
inc
mov
jae
add
stc
jo
jo
jb
jp
pop
stc
pusha
dec
enter
inc
stos
pop
inc
andb
mov
into
pop
in
inc
pop
mov
fstl
pop
pop
mov
mov
dec
inc
inc
inc
jge
mov
cwtl
lods
ds
and
mov
cs
xchg
sbb
add
or
or
push
add
and
or
sti
mov
arpl
insb
adc
mov
jge
cmc
in
cmp
add
add
xor
push
or
jmp
leave
rclb
lahf
arpl
cmp
jmp
sub
push
mov
mov
lret
dec
xchg
dec
or
int
inc
jmp
stc
lahf
cmp
mov
lock
mov
daa
loop
fistpll
rorl
mov
gs
inc
mov
mov
cmp
jg
pop
cltd
je
jb
dec
mov
lret
xor
data16
popa
pop
pop
pop
shll
popa
pop
push
push
xor
sbb
fcoms
dec
mov
cmp
push
add
aaa
xchg
pop
ss
sub
je
dec
sub
sub
pop
out
frstor
and
pop
mov
fwait
xlat
push
push
push
jmp
push
adc
xchg
or
add
mov
add
jecxz
sahf
std
push
std
xchg
icebp
pusha
out
push
jmp
in
mov
pop
out
in
mov
mov
sub
and
lods
adc
cmpsb
enter
movsl
or
mov
adc
int3
inc
pop
xchg
cld
mov
mov
xor
mov
or
out
jl
xchg
gs
out
and
lret
adc
add
sahf
icebp
xchg
add
lea
test
fbstp
pushf
cld
mov
imul
int
sub
dec
jbe
ficoms
fxch
imul
push
push
pop
push
lds
push
mov
mov
add
lret
lea
jg
adc
imulb
mov
adc
mov
pop
add
and
and
test
sub
cwtl
lea
and
adc
adc
pusha
in
push
loope
ret
cmp
mov
xchg
push
pop
cmc
dec
and
pop
cld
mov
out
bound
bound
jmp
es
push
cmp
ror
popl
dec
pop
fmuls
or
adc
jecxz
mov
mov
cmp
sahf
std
mov
int
xchg
and
jp
xchg
pop
sbbl
mov
cwtl
fs
jge
mov
dec
inc
aam
imul
xchg
sti
pop
mov
dec
ja
stos
arpl
mov
fsts
sahf
fs
js
pop
dec
and
dec
pop
adc
xchg
push
and
or
xchg
leave
sub
sub
or
sub
push
call
add
sti
dec
push
cmpsb
pop
sbb
jbe
mov
hlt
hlt
or
and
dec
or
fs
mov
or
in
in
jmp
rclb
clc
lret
dec
in
mov
push
call
jecxz
loop
xor
xor
mov
add
shll
lahf
push
mov
add
add
nop
setns
add
jmp
xchg
mov
pop
fs
add
push
rcl
adc
mov
xchg
sbbl
cmp
ja
cmp
jb
jo
cli
loop
je
sub
dec
or
arpl
pop
lds
xchg
adc
shlb
orps
push
dec
dec
mov
add
dec
out
jg
les
mov
cmp
mov
mov
insb
scas
xor
sub
mov
fisubl
rcrb
mov
jl
inc
iret
js
mov
aas
add
out
test
cmp
imul
arpl
insl
in
pop
icebp
push
and
into
imul
rcll
out
sbb
jecxz
adc
push
faddl
mov
ljmp
testb
fwait
fwait
pop
sub
jb
add
cs
mov
cmpsb
sbb
cwtl
out
xchg
fwait
lcall
loopne
sbb
rorl
xchg
aam
insl
mov
mov
roll
ss
cld
pop
out
stos
sarl
mov
jb
shrb
fnsave
gs
adc
xchg
loopne
dec
xchg
push
cwtl
cs
inc
inc
lcall
mov
pop
sbb
xor
mov
jg
jl
mov
and
push
loopne
pop
dec
sub
icebp
and
aam
loope
fstps
scas
inc
or
mov
sbb
or
add
cld
sub
jle
jne
jg
hlt
dec
jle
lock
jbe
stos
jne
out
lods
inc
imul
test
fistl
out
and
aad
addr16
aam
rcrb
enter
fld
sbb
dec
mov
roll
clc
ss
in
out
cmp
mov
es
test
aam
sub
bound
add
cwtl
and
mov
mov
icebp
nop
push
loop
addb
jns
push
js
ja
mov
xor
stos
sarb
mov
mov
rorl
pop
jecxz
jp
fisttps
mov
rcll
push
fadds
incb
cmp
cwtl
cmp
and
push
inc
cmpb
or
adc
and
inc
stos
push
jae
popa
push
sbb
addr16
aad
push
aas
and
stos
inc
or
mov
sbb
jae
ret
test
cmp
ja
outsl
lcall
inc
shll
call
adc
sub
loope
aad
mov
sbb
sub
shll
pop
adc
and
rclb
lret
dec
mov
and
add
xchg
lahf
mov
sub
nop
lock
movsl
movsb
testb
xchg
dec
fwait
lcall
repnz
push
in
jp
loop
adc
bound
or
mov
mov
jnp
mov
ljmp
and
imul
push
push
cmc
mov
xchg
push
rclb
popa
xlat
xchg
dec
xchg
adcl
add
dec
test
js
jle
sub
aad
jge
cs
inc
stos
out
cltd
lods
sub
fists
insb
pop
mov
insb
cld
push
adc
adc
or
pop
add
or
incb
push
push
mov
mov
push
cmp
in
in
jmp
pop
or
loope
add
movb
pop
std
cmp
sbb
rcll
loopne
int
lock
nop
into
sub
or
in
mov
add
sbb
clc
mov
xor
outsl
add
or
aad
push
mov
adc
pop
sbb
or
add
jne
mov
loop
xor
jg
xchg
jl
xchg
sbbb
jae
pop
subb
insb
loope
imul
dec
push
pop
pusha
pop
loop
insl
mov
jnp
ficoml
insb
cmpsl
fcmovnb
jb
mov
inc
xchg
sub
cmc
cmp
mov
stc
mov
inc
test
dec
xor
sub
sub
and
push
jg
ss
xchg
sbb
xchg
xorl
add
jmp
jg
or
dec
jp
add
addr16
jb
push
popa
pop
int3
pusha
push
and
pop
or
sub
insb
sub
arpl
sub
repz
and
aas
fld
cmp
adc
loopne
fnstsw
mov
mov
lds
mov
xchg
mov
cmpsb
movsl
daa
addr16
idiv
sti
stc
pop
out
and
sbb
adc
jnp
sbb
xchg
or
jne
mov
cmp
ja
enter
jns
shl
fimull
mov
jg
xorb
popa
pop
pop
loopne
imul
nop
aam
leave
movsb
aad
insb
dec
ret
cwtl
xlat
cmpb
push
pop
inc
inc
aas
fbstp
cmp
ja
xor
lock
subl
mov
and
pop
cmp
mov
lcall
mov
sbbl
mov
or
out
ja
add
cmp
push
sbb
sti
cli
jl
pop
stc
add
repnz
lock
jo
jmp
aam
daa
leave
xor
sub
dec
in
mov
push
xchg
loope
mov
or
sarb
xor
ss
idivb
imul
pushf
and
sub
mov
and
mov
mov
or
xchg
jae
mov
or
lcall
mov
outsl
cmc
push
jae
data16
mov
jle
jmp
push
mov
popa
test
jge
pop
xchg
pop
int
push
lret
gs
les
rcll
push
dec
inc
inc
movl
cmp
dec
and
scas
dec
xor
adc
jge
cmpb
lcall
cmp
xor
xchg
push
andl
pop
add
or
incb
loope
cld
cmc
hlt
dec
jge
inc
inc
jno
cmp
jmp
add
push
fcoml
dec
in
dec
inc
xlat
mov
jle
leave
dec
mov
dec
test
ss
fmull
or
pushl
aam
daa
leave
cwtl
cmp
lods
stos
outsb
mov
mov
out
sbb
aad
pushf
push
aam
ficompl
outsb
xchg
dec
adc
stc
mov
sti
mov
cmp
in
lcall
mov
fistpll
fdivl
fldcw
push
pop
fstpl
xlat
sbb
stc
scas
lods
push
pop
mov
rorb
mov
mov
ja
test
inc
mov
mov
js
or
jns
fidivs
cmp
sbb
sbb
xchg
fwait
push
xor
xchg
or
or
ja
test
add
outsl
std
sub
dec
push
dec
mov
js
push
jmp
in
ret
and
inc
jg
fisubrl
cmp
sti
aad
rcl
push
mov
push
das
mov
and
push
aaa
lret
dec
movsb
dec
cmp
divl
into
sub
xor
mov
lds
mov
sub
mov
add
jecxz
in
xchg
mov
flds
sti
jno
mov
addl
jbe
repnz
iret
jns
in
clc
mov
cmc
popf
pop
lock
or
aam
ljmp
pop
push
push
mov
scas
sbb
xchg
jb
xlat
dec
lret
subl
sub
les
mov
xor
mov
mov
daa
pushf
inc
js
and
sbb
fwait
xchg
inc
adc
adc
adc
xorb
mov
add
js
add
jae
sti
jo
push
loopne
cmc
hlt
repz
cmc
pop
out
out
in
in
ljmp
jecxz
out
loopne
neg
push
in
xor
dec
loopne
jmp
xchg
cld
push
mov
and
mov
jbe
les
and
test
lock
mov
xchg
cmpsl
repz
push
scas
lods
lods
stos
cli
or
movsb
mov
hlt
hlt
and
scas
pop
fisubrl
insl
sbb
imul
cwtl
push
fadds
xchg
repz
movl
ja
ret
out
jns
lods
fidivrs
js
jae
mov
ljmp
pop
pop
pop
push
lret
jne
enter
les
xor
stc
dec
inc
lret
int
push
lret
rorl
aaa
sarb
jle
xchg
mov
sub
sub
xchg
xchg
or
sbb
frstor
adc
push
pop
hlt
mov
or
pusha
pop
cmp
out
shll
mov
xchg
test
jle
aad
pop
cmp
in
jbe
leave
mov
sub
and
mov
jmp
push
out
arpl
inc
in
sub
cltd
cmp
stos
xchg
mov
mov
ja
not
mov
scas
cs
sbb
sub
movsl
push
mov
push
mov
mov
sbb
cli
nop
out
mov
jae
test
mov
ret
and
jno
jnp
sbb
jbe
xlat
sti
xchg
jo
outsb
insl
out
push
jbe
mov
out
scas
jno
mov
fmulp
pop
push
push
aad
pop
push
pusha
aam
dec
dec
dec
mov
pop
push
leave
movsb
inc
inc
inc
lret
xchg
dec
lret
inc
mov
xor
movsb
ss
sub
loop
and
loopne
mov
sbbl
fiaddl
adc
xchg
into
sbb
sub
or
xchg
dec
sbb
adc
mov
nop
stc
div
dec
dec
jl
lock
in
ja
fucomip
call
ljmp
dec
or
pop
xchg
loop
mov
iret
into
aaa
int
mov
sti
mov
rolb
mov
mov
into
or
loope
mov
xor
das
sub
movsl
movsb
mov
lods
and
lcall
sub
ljmp
sti
mov
sbb
add
incb
jne
pop
xchg
mov
lock
out
fdivrl
sub
pop
shlb
push
pop
pop
pop
mov
cmpsb
lods
cmp
add
rclb
pop
aaa
mov
es
inc
sahf
popf
enter
test
insb
cmp
nop
mov
cmpsb
inc
push
es
sub
subb
es
cmp
pop
stos
bound
push
mov
dec
adc
adc
pop
or
ret
add
or
jno
in
cli
stc
clc
push
dec
inc
repz
in
jmp
out
sarl
xor
loopne
sub
inc
gs
xor
cmp
daa
xchg
pop
xor
sbb
sub
sub
idiv
mov
mov
push
mov
mov
add
aaa
shrb
stc
sti
sti
sub
mov
in
and
and
mov
ficomps
adc
mov
mov
addl
lret
add
rcl
int
xor
jns
sub
icebp
lret
pop
jmp
in
jnp
loopne
fisubs
pop
enter
jp
dec
iret
dec
push
inc
or
fwait
incl
push
add
add
incb
xor
mov
xor
sbb
sbb
mov
rorb
fs
imul
adc
jmp
idiv
std
sti
cli
outsb
std
mov
cmc
hlt
repz
sahf
in
in
dec
inc
inc
mov
repz
outsl
iret
dec
loopne
das
push
pop
faddl
int
xlat
cmp
rcl
shll
xor
int3
lret
lret
sbb
sbb
dec
daa
test
pop
aaa
pop
mov
jp
lods
mov
scas
lods
stos
jnp
mov
test
push
add
xchg
cltd
sbbl
in
jns
mov
icebp
ror
in
fs
and
jnp
fldl
pushf
jbe
je
ret
ret
push
in
into
fs
test
and
je
mov
push
push
and
test
fnstenv
dec
lret
inc
sub
inc
aas
daa
xchg
cmp
cmp
aad
xchg
ja
test
mov
das
jl
iret
icebp
and
movsl
fbstp
and
pusha
adc
dec
imul
subb
dec
add
push
add
call
jle
add
add
fsin
jmp
repnz
call
sub
loopne
outsl
nop
cmp
flds
movsl
pop
sbb
int
adc
enter
in
or
cld
outsb
inc
mov
leave
daa
shll
stos
aad
jne
test
lock
cmpsb
jbe
sub
popf
aas
xchg
out
cwtl
pop
pop
mov
xchg
xchg
add
mov
lret
addl
ja
jne
jae
sti
pop
mov
mov
call
fsubrs
or
cvtdq2ps
cmpsl
fildl
inc
push
push
cld
push
cmp
mov
mov
test
mov
sbb
scas
xchg
sub
mov
and
daa
jge
jo
mov
mov
xchg
push
pop
adc
adc
setno
sub
leave
adc
dec
or
inc
or
rclb
dec
dec
dec
dec
subb
inc
aaa
lock
jns
clc
push
lds
fildll
loopne
jmp
sbb
jmp
not
rcl
mov
ror
int
xlat
std
xchg
dec
xchg
mov
jl
ret
inc
mov
mov
out
jbe
xor
out
mov
movsl
mov
bound
repz
add
lods
push
adc
add
xchg
nop
add
inc
mov
jne
cmp
pop
daa
test
imul
sub
popa
pusha
loop
insl
inc
std
push
sbb
xchg
cmp
ret
sub
sub
ret
xadd
ds
dec
aaa
ss
clc
sbb
adc
push
movsl
or
xchg
xor
push
mov
fists
bound
add
int
cld
add
add
and
mov
div
hlt
sub
mov
in
jmp
jmp
in
lret
push
fst
mov
test
rcll
dec
mov
lret
lret
insb
enter
cmp
adc
jmp
mov
out
jge
mov
outsb
cwtl
ss
mov
ljmp
mov
mov
push
pop
mov
fidivl
ds
add
insb
sti
jle
cmp
andb
ljmp
fwait
and
dec
inc
lcall
dec
mov
ss
rcll
mov
inc
dec
loopne
popl
jb
test
and
cmp
mov
sub
sub
cmpsb
loopne
jbe
jno
lahf
push
ss
push
or
xchg
iret
xchg
aad
cld
pop
test
push
mov
mov
dec
aas
clc
in
cmp
clc
hlt
pushw
inc
xlat
pop
and
jmp
cmp
cld
jp
es
mov
and
sbb
ret
xchg
pop
xchg
inc
jecxz
iret
sbb
int3
xchg
iret
lds
ret
mov
cmp
aas
add
std
repnz
add
mov
pop
cmpsb
movsb
mov
pop
xchg
mov
mov
aad
fsts
nop
push
iret
mov
or
test
cli
mov
jno
hlt
ljmpw
jo
insl
adc
fidivs
imul
imul
xchg
pop
aad
xlat
adc
dec
fsts
rorl
daa
aas
ds
aaa
roll
jl
mov
daa
insb
and
xchg
es
es
lahf
push
push
lahf
fistpl
or
aad
add
or
add
lea
icebp
test
pop
hlt
inc
jg
fsubr
in
in
inc
cmp
out
push
in
pop
adc
loopne
sahf
push
pop
popw
int
sbb
adc
lret
stc
adc
push
psubusw
push
stc
les
mov
dec
mov
mov
or
cmc
mov
stc
jae
cmpsb
cmc
out
cmpsl
scas
movsl
movsb
mov
sahf
xchg
lcall
xchg
sbb
cwtl
jp
sbb
jg
fiaddl
popl
lods
mov
addb
push
mov
pop
adc
mov
test
dec
std
pop
aam
inc
fcoml
pop
mov
xchg
loopne
dec
xchg
adcl
leave
andb
adc
inc
pop
inc
cmp
cmp
mov
xor
inc
pop
jb
push
lods
dec
daa
jae
and
jmp
sbb
fists
aam
jo
or
je
fs
mov
jmp
add
cmp
pop
hlt
aas
lcall
cmp
in
mov
loope
mulps
sbb
rcl
sub
pop
adc
dec
mov
cmp
das
fisubrs
pop
lock
inc
sti
mov
lret
clc
mov
mov
xor
push
in
xor
mov
push
jne
ficomps
push
mov
xchg
adc
fcmovbe
mov
mov
jl
testb
test
cmp
pushl
push
cmpsl
sbb
out
mov
shll
sub
leave
js
push
pusha
aaa
dec
jo
dec
iret
or
sub
test
inc
jo
es
mov
xor
xchg
fwait
xor
jo
mov
insb
xor
and
jae
pop
mov
sbb
mov
push
adc
push
sbb
pop
out
sub
add
xchg
pop
mov
or
cld
jl
dec
jns
push
jbe
out
aad
jae
outsl
inc
cld
insb
pusha
jmp
loopne
pop
daa
in
out
aad
xor
xchg
add
in
lret
sbb
in
xor
leave
lret
loop,pn
lahf
jecxz
mov
xor
mov
stos
sub
lods
movsb
cld
add
ret
jge
inc
xchg
nop
jmp
loope
adc
stos
lcall
mov
add
add
add
insb
js
push
cld
mov
lods
mov
imul
fs
rol
mov
aaa
mov
lods
rorl
rcll
dec
mov
or
inc
test
imull
aaa
jo
mov
pop
sub
cmpl
pop
push
and
xor
sbb
add
sub
push
or
insb
aaa
or
push
out
idiv
cli
push
in
sub
icebp
cmp
lock
cs
in
jecxz
test
aaa
sahf
xor
fisubs
fistpll
inc
in
jbe
inc
in
aas
shrb
sub
lret
mov
out
jnp
inc
mov
stc
mov
jae
cmp
shlb
sub
inc
fisubrs
aas
cwtl
or
fwait
ja
mov
das
xchg
test
cmc
mov
gs
jp
shll
add
in
insb
loop
imul
fs
and
loope
into
push
leave
mov
adc
ret
cwtl
pop
lahf
lret
mov
ds
rcrb
test
shrb
xor
add
ja
test
mov
cmp
sub
test
cltd
pop
sbb
lret
adc
lret
or
inc
pop
decb
inc
cmpb
test
dec
mov
ret
add
push
in
bound
pop
mov
pusha
rclb
and
add
xchg
sarb
jp
mov
into
ss
hlt
lods
aaa
scas
das
jmp
push
repnz
xchg
popa
lahf
lods
and
fwait
cltd
cwtl
sbb
lea
sahf
lea
pop
lock
mov
out
inc
leave
hlt
pushf
or
mov
test
jp
je
mov
imul
sub
xchg
push
enter
pop
pop
int
cmpsl
push
mov
nop
dec
rorl
mov
jne
inc
lods
inc
cltd
jp
mov
add
xor
xor
xor
sub
push
sbb
loopne
push
push
sbb
push
push
push
adc
adc
setns
xchg
pusha
decb
pop
call
inc
xor
cmpsb
jge
jg
stc
clc
idivl
push
fs
lock
in
or
sub
insl
fsubrs
in
fbld
into
in
sahf
rcl
rcrb
fstl
push
jecxz
dec
je
xor
inc
les
mov
mov
mov
jmp
shlb
cmp
mov
sbb
mov
movsb
test
orb
flds
rcrl
mov
adc
xchg
mov
mov
xorb
movsb
mov
divb
in
lock
repnz
jb
mov
outsl
sbb
cltd
fsts
push
mov
dec
mov
push
inc
dec
sub
mov
sbb
cmp
xor
sub
pushf
sub
sub
push
outsb
sbb
sub
pop
push
add
inc
adc
or
das
orb
jge
mov
out
jl
testl
in
cmp
imul
movsb
xor
inc
bound
sbb
ds
adc
xor
int3
sbb
push
in
mov
fstl
adc
in
mov
cli
mov
testl
adc
loopne
cmpsb
arpl
popf
mov
int3
fcompl
sbb
jns
jecxz
test
leave
test
fiaddl
jge
cmp
jne
js
mov
insb
imul
fnstenv
jo
cld
pop
pop
pop
mov
loope
push
add
push
ret
mov
inc
mov
ds
cmp
addr16
sbb
xor
das
mov
sub
daa
es
mov
mov
arpl
pop
cmp
adc
and
es
cmovbe
js
add
xchg
adcb
aam
ja
icebp
lock
ja
call
cmpsl
jmp
jl
fisubs
les
bound
sarb
nop
push
xor
mov
dec
sbb
idivb
xchg
cs
or
mov
mov
lret
rcl
out
sub
in
div
lock
adc
or
xchg
cmpsl
sub
jl
jmp
jle
mov
enter
mov
sub
jbe
jmp
in
insb
loope
mov
fidivl
xlat
imul
fistps
addr16
push
push
push
test
fnsave
rclb
inc
inc
inc
mov
add
cmp
les
imul
xlat
sub
mov
adc
movsl
outsb
sbb
or
xchg
fsubl
inc
in
xchg
pop
or
call
add
add
std
jb
cli
outsl
add
or
es
mov
push
inc
inc
pop
in
ds
std
fists
das
inc
cli
fcmovnu
xlat
aad
hlt
shl
and
adc
pop
mov
cmp
stos
sub
mov
roll
mov
cli
scas
and
mov
xor
xchg
pop
popf
cli
adc
pop
pop
push
push
out
jnp
jns
fsubp
loopne
cld
mov
test
mov
js
jmp
xor
jb
outsl
mov
in
mov
xor
pop
xchg
mov
int3
fcompl
xchg
push
int3
inc
fistl
pop
out
xchg
inc
dec
les
cmp
movsb
jns
testl
cs
outsb
jns
daa
sbb
into
lods
aas
test
push
sub
or
sbb
xchg
xchg
add
xchg
int3
adc
push
lcall
adc
add
mov
cld
or
jge
hlt
repz
push
aas
xor
out
sub
push
sbb
xchg
sub
rclb
outsb
das
pop
adc
dec
add
icebp
dec
adc
inc
xchg
xor
int3
jb
leave
outsl
mov
jge
enter
cmp
cmp
stos
mov
or
in
movsl
in
imul
aad
xchg
fcoml
push
mov
xchg
push
jecxz
lret
test
ror
jp
ja,pt
jne
sub
add
mov
push
or
test
lahf
sahf
pop
pop
fcompl
push
mov
scas
popf
xchg
dec
push
mov
xor
cmp
xor
jbe
das
sub
mov
xorb
push
loope
outsl
outsb
arpl
and
xor
pusha
pop
adc
or
mov
ret
in
add
std
pop
pop
push
ret
mov
ja
mov
jo
jmp
xchg
xor
jecxz
loope
add
rorl
lcall
int3
lret
lret
imul
les
mov
or
mov
sti
mov
mov
mov
cmp
shrb
cmpsb
sbb
mov
test
lcall
nop
push
inc
sahf
aas
mov
xchg
cmpl
shl
mov
aam
mov
mov
scas
or
bound
scas
movsb
pop
mov
add
mov
cmpsl
fdivrl
cmp
dec
dec
lea
pushf
xchg
inc
js
xchg
xchg
cmp
cmp
dec
xor
xor
jmp
sub
sub
and
popa
pop
in
adc
add
adc
xchg
roll
std
sbb
ds
js
sub
mov
divb
lods
adc
adc
jnp
scas
out
ficoms
call
push
frstor
push
stos
cmp
inc
bound
int3
ror
into
add
push
adc
enter
or
adc
lods
mov
and
mov
sbb
stos
lods
stos
stos
fucomip
clc
in
cmpsb
sti
hlt
xor
lea
icebp
cltd
into
cld
jmp
mov
adc
mov
leave
adc
or
imul
jbe
je
jno
aam
mov
push
repnz
xchg
and
out
dec
pop
pop
pop
ret
dec
sbb
imul
mov
xchg
dec
pop
xlat
loopne
ss
inc
inc
into
aad
xchg
mov
pop
xor
ds
dec
mov
xor
mov
sub
push
or
imul
bound
in
fildl
arpl
push
push
adc
xchg
or
daa
nop
add
sbbl
enter
test
loope
ja
push
arpl
jb
addr16
push
dec
cmp
leave
dec
mov
push
xlat
adc
cs
xchg
push
or
bswap
cmp
shrb
add
sbb
mov
mov
mov
push
cmp
lock
lods
sub
test
lods
lcall
xchg
xchg
adc
sbb
fwait
loopne
pop
sti
ret
adc
or
lret
insl
jb
fcmovne
mov
out
mov
test
imul
and
jne
movsl
sahf
loopne
into
imul
pop
sarb
int3
mov
dec
rorl
nop
lret
mov
int
aas
jo
or
and
sub
mov
and
mov
jmp
mov
jne
pop
test
outsl
nop
aaa
movsb
pop
pop
cltd
or
adc
push
nop
add
sbb
xchg
and
sahf
std
xchg
jp
div
cmc
hlt
jo
je
stos
jp
in
in
push
int
shl
loopne
cmp
call
fsubs
sub
nop
inc
rcrb
mov
push
fnsave
or
dec
test
test
sub
xor
mov
xor
xchg
mov
or
or
add
in
push
aad
fdivp
mov
push
ror
subl
jle
add
cmp
and
insl
jne
js
es
pop
jns
and
pusha
and
imul
sahf
jge
stos
xchg
pop
xchg
mov
rol
adc
cmp
inc
dec
enter
jge
jg
cmpl
cmp
inc
sub
gs
xor
push
sub
lods
and
jg
xor
daa
sbb
sbb
sbb
push
mov
sub
adc
test
sub
and
dec
pop
xchg
fldl
adc
cmp
mov
mov
sti
inc
fadds
fsubr
jmp
aad
jae
dec
adc
fildll
psrad
out
pop
std
xlat
and
aam
cltd
int3
sbb
dec
pop
and
push
test
dec
stos
inc
test
inc
xor
call
jmp
lahf
daa
lods
xor
stos
shld
clc
mov
sahf
popf
pushf
pop
pop
cmpsb
aam
and
xchg
adc
sbb
dec
xchg
mov
xchg
mov
mov
test
int3
test
push
movsb
push
insl
cmp
shrb
cltd
cli
inc
clc
dec
sub
outsb
jmp
test
js
mov
mov
and
nop
and
je
mov
push
dec
nop
inc
mov
cmp
les
mov
cmp
xor
xor
xor
and
pop
sub
sub
mov
insl
sbb
fs
negb
enter
dec
or
loope
xchg
ss
cmp
mov
repz
jecxz
icebp
out
imul
push
aam
pop
fcmovnu
ficompl
in
sbb
dec
lock
sbb
pop
sbb
iret
xchg
add
std
into
cmp
rolb
add
fsubs
daa
lods
scas
and
xchg
stc
test
test
movsb
lods
ftst
cmpsb
adc
es
or
xchg
sbb
movsb
adc
xchg
adc
xchg
cmpl
pop
rolb
insb
mov
lret
xor
mov
sub
loopne
dec
pop
scas
mov
into
mov
lods
ficomps
scas
dec
rorl
test
push
inc
inc
iret
rorb
lret
outsl
push
mov
xor
out
cwtl
xor
daa
es
rdmsr
lods
shrb
fisubl
sbb
aad
inc
push
pop
or
dec
add
push
add
pop
pop
dec
out
push
sti
cli
or
lock
jno
clc
jo
pop
div
pushf
sub
sub
leave
push
add
fnsave
cld
in
lods
fcmovnbe
rcll
cltd
int
xor
lds
roll
mov
jmp
sbb
cmp
lea
lcall
mov
fcompl
dec
push
sti
xchg
fbstp
js
mov
loope
xchg
adc
mov
push
jg
cld
pop
jnp
xor
outsb
mov
stc
outsl
ljmp
push
dec
jecxz
lods
fcompl
or
lds
int
xchg
mov
sub
jae
addr16
jnp
test
xor
mov
add
lods
mov
mov
cmovp
data16
inc
mov
fwait
adc
mov
sbb
dec
cli
add
out
or
dec
repnz
dec
idivl
ljmp
icebp
jno
loope
jbe
negl
jae
imulb
lahf
mov
addr16
bound
rcll
lret
iret
inc
loope
roll
sbb
roll
or
leave
inc
push
mov
add
les
xor
sbb
sub
sbb
lods
pushf
adc
jle
pushf
xchg
xchg
ljmp
iret
test
mov
insb
mov
mov
pop
out
xorb
jns
jo
insb
fdivrl
enter
jne
outsb
push
shrl
pop
pop
ficoml
xlat
dec
push
push
dec
pop
inc
lods
ret
jl
inc
stos
mov
sarl
dec
mov
mov
and
cmp
sub
dec
sub
jg
jl
mov
xchg
sbb
adc
stc
mov
or
xchg
mov
test
sub
aaa
clc
clc
testl
sbb
jne
lock
sub
cmp
lods
in
fsubl
xor
ret
pop
dec
fsts
scas
int
aam
inc
mov
inc
leave
mov
mov
stc
mov
xor
in
stos
test
inc
push
sub
mulb
jl
pop
pop
or
and
mov
add
int
lret
push
xchg
or
bound
lods
xchg
xor
mov
in
clc
mov
imul
mov
stos
fs
pop
in
clc
pop
loop
push
fistpl
fldcw
aad
inc
inc
ret
push
lods
inc
xchg
sub
daa
cmp
xchg
xchg
and
fsub
mov
mov
sahf
dec
mov
sbb
pop
cmpsl
loope
ss
pop
pop
pop
adc
sbb
adc
div
ret
mov
popl
incb
jnp
cmp
jae
icebp
lock
loope
cmp
outsb
test
pop
stos
ljmp
lds
scas
das
pop
iret
add
mov
adc
cmp
dec
pop
mov
or
inc
jl
mov
les
dec
mov
lods
addb
add
sub
pop
cs
mov
in
cmpl
aas
sbb
mov
mov
inc
notl
jo
cmp
xorb
cld
xchg
mov
imul
addr16
bound
popa
pop
pop
dec
push
fldenv
xchg
sbb
jno
int
inc
inc
inc
xchg
push
incl
orl
xor
idivb
sub
outsl
or
ljmp
pushf
cwtl
adc
pop
adc
pop
mov
or
or
adc
and
or
div
cmc
cmp
add
icebp
out
in
outsl
shr
clc
insb
stos
jecxz
jecxz
lret
add
xchg
fists
pop
vsubsd
push
mov
fimull
int3
mov
push
shrb
cmp
mov
xor
jp
pushf
mov
sub
hlt
xor
add
mov
adc
cwtl
xchg
sbb
fldl
push
cld
lea
test
jg
xchg
add
into
pop
repnz
insb
bound
pop
pop
out
mov
push
into
fidivs
dec
cmpsb
shll
rorl
sub
inc
inc
mov
test
cmp
cmp
stos
cmp
sbb
sub
pop
orb
and
daa
sbb
push
sbb
outsl
mov
jp
stc
fmull
int3
dec
out
add
inc
nop
inc
jge
jecxz
arpl
test
xchg
pop
repz
fnstcw
scas
imulb
popa
pop
repnz
ds
call
pop
cmp
fstps
sahf
pop
fmuls
inc
sub
pop
idivl
or
cmp
dec
roll
sbb
repz
mov
inc
ja
mov
jmp
pusha
jnp
pop
xchg
rclb
popa
and
dec
fwait
pop
sbbb
sub
add
pop
jae
xchg
cmp
or
add
das
jl
popa
jnp
pop
add
pop
or
stos
imul
imul
loopne
out
push
int3
sub
test
ret
popf
dec
dec
inc
lahf
sahf
mov
leave
xorb
xchg
shlb
xor
das
je
test
push
and
lods
addr16
xchg
shll
in
fwait
xlat
iret
push
nop
push
adc
aam
popa
cmpb
dec
jp
loop
push
jg
mov
xor
daa
out
push
out
loopne
fnstenv
pop
sbb
adc
pop
adc
scas
push
loope
ret
add
inc
add
inc
mov
cmp
xchg
adc
jbe
add
lcall
xchg
out
out
int
bound
mov
pop
jnp
xchg
or
addl
inc
fimuls
jne
lock
jno
mov
loope
shr
mov
addr16
andl
and
inc
dec
jle
push
adc
xor
inc
jno
inc
xor
sbb
scas
aas
jl
ss
inc
xor
adc
sub
std
lods
orb
popf
out
push
sub
sub
sbb
xchg
xchg
push
adc
xchg
hlt
adc
push
nop
or
ret
add
jg
addr16
cld
sti
dec
loope
fdiv
hlt
dec
dec
xchg
lahf
js
in
jne
inc
or
push
fsubl
mov
sub
aas
fsubrs
pop
in
iret
into
and
mov
inc
mov
dec
cwtl
sbb
test
or
clc
mov
xor
jecxz
test
mov
push
sub
mov
jnp
push
pop
or
sbb
mov
or
push
iret
popa
adc
out
xchg
push
popf
jg
push
xorb
jae
dec
pop
dec
pop
insl
insb
cmc
mov
repnz
lock
xor
pusha
mov
aaa
push
leave
pop
push
lahf
inc
les
ret
popl
jge
inc
inc
into
sbb
cmp
cmp
lods
ds
das
test
imul
stos
cmpsb
adc
xor
and
notl
icebp
fwait
call
or
cltd
pop
ljmp
test
add
add
cmp
mulb
das
ja
scas
jge
out
out
imul
out
cmp
pop
lret
cmp
int3
jmp
mov
pop
mov
pop
xchg
inc
inc
push
int
inc
dec
lds
inc
xor
dec
cld
jle
movsb
cmpsl
repz
mov
xor
sbb
scas
scas
lods
call
decb
loop
daa
mov
xchg
xchg
sbb
in
jbe
jne
mov
push
loope
add
jl
negb
shll
outsl
in
insb
mov
push
shrl
lock
jmp
dec
dec
mov
into
pusha
push
mov
push
push
dec
cmpsl
cmpsb
int3
enter
dec
cmp
mov
ret
cmp
mov
cmp
add
xor
push
sub
stos
movsb
mulb
hlt
stos
imul
and
sbb
and
push
loopne
push
xchg
inc
repnz
cmp
inc
jmp
inc
or
idivb
icebp
dec
fcmovnbe
icebp
lock
jns
inc
cli
mov
outsb
inc
iret
imul
xor
mov
out
cwtl
lret
rclb
out
adc
and
sbb
cli
xchg
das
divl
lahf
mov
shrb
shlb
clc
xor
cmpsb
adc
out
nop
sub
mov
pop
cltd
fmull
mov
imul
addr16
jns
je
pop
icebp
jae
jno
mov
addr16
dec
pop
aam
call
int
mov
sbb
push
xlat
nop
push
test
mov
dec
cmpl
xchg
mov
aas
mov
adc
xchg
dec
das
aad
data16
and
cld
hlt
xchg
add
pushf
insl
rcrl
push
or
or
xchg
mov
div
dec
mov
outsb
adc
jmp
push
icebp
out
or
int3
mov
aaa
mov
loopne
aad
clc
jecxz
xlat
mov
push
ret
pop
loopne
les
sbbl
sbb
jl
inc
mov
cltd
in
scas
lods
xor
mov
movsb
cs
test
mov
lcall
push
repnz
nop
stc
in
cwtl
mov
xchg
pop
js
cmpb
xor
sarb
jle
sarl
and
mov
divl
jne
sub
bound
insb
es
lahf
pop
in
and
cltd
push
push
and
mov
int3
arpl
adcb
aam
inc
les
roll
test
push
ret
jne
insl
mov
ss
cmpsb
and
and
mov
sbb
mov
push
or
or
jp
lret
nop
inc
incb
inc
xor
cmc
hlt
mov
std
mov
ret
jmp
jmp
and
loope
push
ljmp
pop
aad
mov
into
lea
xchg
into
pushf
push
or
dec
ret
ret
sar
dec
mov
jle
mov
cmp
jg
in
test
scas
movsb
ja
sub
je
loope
cmc
stc
test
in
gs
rorb
lea
sub
cmp
lret
jg
add
cli
lods
push
cmpsb
aad
in
xchg
cmpsb
jmp
lcall
ret
push
xchg
inc
xlat
push
xchg
movsl
rcll
xchg
rolb
je
lods
cmp
clc
mov
loop
jbe
mov
daa
es
pop
lret
test
test
aas
mov
xchg
xchg
rolb
pop
icebp
pop
and
add
out
jmp
outsb
add
adc
outsl
sub
arpl
je
insb
cmpsl
pop
jmp
imul
adc
xchg
sbb
sub
inc
aad
lret
mov
adc
vcmpsd
xor
clc
clc
cs
cmp
mov
xchg
xchg
aaa
lods
gs
cmpsb
movsl
movsb
repz
sahf
popf
sub
mov
cltd
cli
cwtl
jbe
aaa
mov
ror
cmpl
fs
add
add
mov
xchg
ret
push
clc
in
imul
fsubrs
imul
mov
lea
aad
push
push
stos
rcll
subb
mov
xchg
es
xchg
ret
cmpl
push
nop
mov
xor
mov
sub
daa
es
lods
or
notl
jp
push
imul
stc
dec
decb
dec
or
push
add
pop
push
call
sub
pop
cmp
aas
aaa
lock
and
loopne
sub
xor
daa
fnsave
xor
xor
sub
bound
int
and
pop
aam
push
mov
dec
leave
enter
mov
mov
enter
andl
lods
add
imull
cmp
mov
fwait
and
jecxz
into
mov
fcoml
fst
mov
push
dec
fists
adc
popf
bswap
xchg
aam
add
rolb
hlt
cmpb
jb
jo
mov
icebp
push
jno
sahf
jmp
insl
loopne
adc
in
pop
cwtl
xlat
push
ja
jl
and
je
add
inc
int3
stos
cltd
lea
mov
xor
ret
ja
ss
aas
mov
jb
clc
sub
lods
sbb
sub
push
aas
xchg
popa
pop
add
push
pop
lcall
and
xchg
sbb
mov
push
dec
add
or
std
xor
std
orl
jno
punpckldq
jo
pop
repnz
addr16
jecxz
leave
in
rorl
pop
cmp
ljmp
stos
lret
push
inc
mov
mov
movsl
stos
cmp
mov
cmp
mov
xor
and
das
and
mov
lcall
out
pop
xchg
rcl
jns
or
lods
mov
dec
xchg
test
cmpb
bnd
add
jbe
ja
xor
imul
je
out
fwait
cmp
and
mov
cs
out
movsb
lret
fmuls
push
adc
dec
xchg
mov
adc
push
cmp
pop
stos
jne
cs
imul
scas
pop
pushf
inc
xor
xorb
and
push
adc
daa
push
cli
sbb
mov
dec
add
incl
std
cmp
push
clc
div
jnp
push
xor
jmp
pop
out
or
imul
cmp
xor
and
shlb
and
xchg
or
sbb
mov
xor
mov
test
insl
cmc
scas
scas
lods
stos
stos
xchg
shlb
mov
lods
and
fwait
push
loop
xchg
xchg
nop
mov
mov
xchg
or
addl
mov
test
xor
cmpsl
mov
xor
ja
cmpsl
int3
sahf
jl
pop
mov
rorl
pop
jecxz
cmpsb
test
mov
mov
imul
sub
mov
xor
jne
aas
mov
jns
fwait
dec
dec
jp
jne
mull
cmp
adc
imul
das
sbb
sbb
ss
add
cmc
jo
xor
insb
add
or
out
out
and
jb
pop
out
and
stc
push
ficompl
adc
lahf
pop
popa
mov
iret
into
pop
mov
int3
cli
mov
pop
test
cmp
mov
mov
gs
mov
jbe
mov
insb
or
push
add
ljmp
out
cmc
cmc
cmc
add
orb
xchg
push
sub
test
xchg
mulb
test
or
jg
cmpb
jne
stc
jb
jo
test
iret
insb
addr16
pushw
sahf
lods
mov
pop
push
push
push
push
cmp
pop
pushf
dec
pop
mov
mov
mov
ret
cmp
les
mov
xor
cs
loopne
cs
cmp
lcall
addr16
adc
pop
push
push
jne
or
or
addl
ret
aaa
addl
sbb
repz
lock
in
call
and
jmp
out
popa
popf
in
xlat
sarb
push
sbb
mov
push
cli
add
or
repz
inc
mov
ljmp
and
mov
mulb
and
adc
pop
mov
xchg
adc
mov
lea
xchg
push
mov
add
cmp
das
cmpsl
dec
adc
test
imul
jmp
loopne
push
mov
sbb
rorl
inc
popf
dec
pusha
outsb
jns
inc
sarl
push
xchg
cmp
cmp
xor
xor
mov
lahf
das
test
sub
xor
popf
push
and
xchg
sbb
test
dec
or
sbb
pop
pop
pop
add
mov
dec
aaa
and
inc
jnp
jno
hlt
ds
inc
cmp
outsb
daa
jmp
pop
pop
aad
pop
pop
leave
pop
adc
push
adc
push
push
rclb
dec
ss
dec
cmp
inc
mov
les
mov
cmc
add
test
add
add
adc
jmp
xchg
xchg
xchg
adc
popf
loop
jb
jbe
jge
rorb
popa
and
jne
pushl
cli
mov
insl
sar
cmc
in
hlt
jb
out
xchg
icebp
dec
add
pop
pop
pop
pop
inc
jne
pop
push
push
push
cmpsb
fnstsw
xor
into
inc
inc
enter
stc
inc
aas
ds
ret
sbb
clc
mov
push
mov
imul
and
mov
pop
sbb
xchg
or
test
mov
outsl
dec
push
push
jns
push
add
in
sti
cli
stc
cltd
mov
cmp
dec
ja
fs
in
mov
call
jecxz
movsb
xor
jg
bound
fldl
pushf
mov
fdivrl
aad
mov
pop
add
add
dec
lods
jl
mov
divl
scas
lods
dec
sti
imul
test
sahf
cmpsb
mov
mov
adc
fsts
nop
mov
xchg
or
addl
jnp
jle
js
fbstp
in
mov
loopne
imul
ret
fs
pushf
mov
icebp
pop
pop
mov
jecxz
mov
push
push
cmpsl
lahf
fisttpl
test
dec
dec
xor
lds
fwait
les
jnp
leavew
rclb
shll
mov
sub
sbb
jae
out
cmpsb
pop
push
cltd
fldenv
xchg
jno
push
or
or
aaa
fwait
add
popl
push
dec
loop
mov
cmc
cmpb
lock
push
sub
jmp
rorl
jge
in
cltd
jno
fildll
cmp
sub
cmp
lock
pop
push
sub
enter
add
ret
adc
aas
jg
sbb
inc
push
pop
lods
sti
test
movsb
mov
or
fistpl
ret
aam
out
pop
push
mov
out
xchg
stc
jle
pop
sahf
jge
aaa
pushl
mov
subl
addr16
jbe
lods
outsb
gs
mov
and
push
ficoms
dec
aad
or
orb
xchg
inc
jo
inc
add
cmp
jae
mov
ljmp
lods
or
fcoml
push
popf
popa
pop
adc
test
je
pop
pop
jo
add
push
jl
insl
add
mov
jl
push
inc
pop
repz
lods
jnp
in
cmp
das
cmc
push
call
loop
fists
sub
fcmovnu
out
sub
sbb
pop
xchg
inc
xlat
push
dec
int
fcoms
ret
xchg
jl
inc
mov
lods
scas
and
test
xchg
xor
scas
cltd
jno
mov
in
jge
xchg
xchg
xchg
jmp
notl
inc
push
movsl
mov
js
fwait
jle
sub
jno
leave
enter
mov
daa
mov
aad
leave
outsb
mov
push
pop
int
arpl
pop
pop
push
pop
push
inc
adc
push
dec
cmp
dec
inc
add
inc
dec
cmp
inc
aaa
inc
in
decl
cmp
sub
dec
sti
loope
and
and
push
sbb
mov
xchg
push
adc
adc
adcl
loop
adc
adc
out
add
int3
pop
outsl
add
add
repz
fcomi
sti
in
in
in
ljmp
push
out
loopne
loop
lahf
cs
sub
xchg
loope
sarb
into
and
sarl
ror
mov
lret
mov
mov
lods
js
daa
mov
shlb
stos
sbb
outsl
pop
mov
addr16
fwait
pushf
cltd
cwtl
or
xchg
nop
add
les
xchg
add
add
push
add
push
je
jne
in
out
data16
imul
insl
jno
dec
gs
and
pop
pop
mov
pop
and
xchg
je
movsb
mov
in
inc
inc
mov
shlb
xchg
fdivs
pop
inc
bound
mov
daa
add
outsl
stos
and
shll
popa
popf
fstps
adc
nop
add
roll
imul
pop
pop
pop
insb
and
push
icebp
repnz
cmp
pop
mov
jmp
push
or
call
ret
push
int
fcmovnu
pop
pushf
jecxz
dec
lock
push
test
inc
loop
xor
lahf
rol
ret
inc
test
or
mov
lahf
push
adc
ja
cmp
repnz
pop
movsl
pinsrw
push
pushf
lahf
sub
popf
add
das
mov
sbb
orl
xchg
pop
pop
ret
insb
roll
inc
dec
push
stc
and
mov
insl
loop
push
jle
addr16
mov
shll
test
fistps
pop
rcrb
dec
xlat
sbb
push
into
xchg
cmpb
dec
popl
inc
jno
data16
mov
test
jmp
push
sub
outsb
inc
and
mov
inc
jecxz
movsb
dec
mov
push
pop
test
shlb
xchg
scas
scas
popa
les
les
clc
insb
add
ja
divb
push
push
in
inc
lods
sbb
gs
push
jmp
clc
bound
das
push
mov
xchg
adc
int
enter
dec
or
mov
ds
lds
fimuls
je
js
cmc
lahf
xor
mov
sub
xchg
and
push
sbb
lcall
mov
adc
mov
inc
cmpb
jg
ss
cmp
jne
clc
jb
push
jb
scas
jo
mov
scas
in
fdivrs
mov
lods
loop
fadds
fstl
pop
add
es
ret
inc
inc
leave
mov
test
xchg
jle
inc
ljmp
sub
and
outsb
sbb
sub
pop
push
lahf
pop
adc
inc
add
or
push
mov
pop
adc
mov
dec
loope
cmc
cmc
hlt
dec
pop
hlt
dec
fnstenv
das
fnstsw
je
int
lret
cltd
push
in
pop
int
mov
push
xchg
loopne
mov
push
push
adc
push
mov
adc
std
lcall
mov
push
lahf
out
in
mov
out
fnstenv
fwait
aaa
out
nop
divl
ljmp
popf
sub
lock
xchg
xchg
or
je
xchg
rorl
je
adc
jns
cmp
test
jo
stos
jmp
mov
bound
insb
fildll
dec
test
ret
push
push
push
rclb
pop
dec
xorb
inc
mov
mov
jge
xchg
daa
sbb
das
xchg
adcl
hlt
push
stos
imul
clc
push
adc
sbb
push
xchg
push
adc
add
psubsb
jle
sbb
addl
dec
mov
push
arpl
call
loop
add
fcmovnu
pop
popf
in
ds
rcl
inc
repz
inc
out
mov
inc
xchg
test
in
jns
pop
push
add
cmc
mov
cli
xchg
add
cmpsb
movsl
mov
xchg
out
test
cltd
cwtl
sbb
pop
push
call
lcall
xchg
xchg
adc
mov
or
stos
xchg
jbe
jge
mov
insl
insb
imul
lea
sub
jno
ljmp
jecxz
bound
jg
sub
adc
push
pop
int
lds
mov
dec
cli
or
data16
mov
aaa
mov
test
mov
fwait
sub
push
push
mov
or
adc
or
sbb
jae
add
inc
dec
push
push
in
jns
idivl
add
mov
jns
outsl
xlat
idivb
jne
out
cmp
jo
aad
sub
dec
lret
das
cmp
cmp
cmp
dec
mov
push
les
imul
mov
jae
jge
divl
stos
or
ljmp
mov
arpl
fistl
in
push
dec
loopne
jne
adc
xchg
xlat
out
roll
aas
fwait
jne
jae
xor
xchg
cmp
mov
hlt
stos
imul
jae
cmp
pusha
pop
pop
fldl
fdivl
fmulp
dec
mov
ret
add
test
xor
inc
roll
pop
jo
jbe
scas
dec
jb
stos
inc
mov
xor
xor
jno
frstor
and
test
sbb
fdiv
and
fistpl
or
in
adc
adc
mov
add
xchg
mov
addb
jnp
jns
repnz
mov
jmp
rol
outsb
das
in
jmp
inc
data16
cmp
xor
lods
insb
iret
into
daa
nop
and
in
rclb
inc
cld
es
inc
xor
mov
leave
aam
inc
lret
xchg
jno
stos
test
movsl
sub
mov
xchg
popf
pushf
fwait
pop
pop
icebp
or
jns
mov
xchg
mov
fwait
scas
mov
mov
imul
jo
orl
shll
arpl
xchg
roll
mov
push
test
adc
dec
cmpsl
inc
mov
dec
aas
push
outsb
jle
mov
sub
cltd
das
mov
lahf
dec
xor
cmp
push
and
adc
and
inc
or
adc
divl
or
arpl
or
sbbb
push
cmp
pop
jmp
lock
out
in
cmp
jae
call
iret
cli
xor
ss
les
push
xlat
or
pop
adc
sbb
xor
pop
les
rcl
out
add
inc
jge
rolb
xchg
add
pop
into
inc
out
stos
add
cmpsl
mov
daa
popa
scas
and
fwait
add
lock
mov
cmpsl
lds
daa
or
cmc
xchg
jge
mov
test
jle
jae
andb
imul
push
bound
mov
repnz
sahf
push
fistps
lds
ret
popa
add
nop
ds
cmp
imul
cmc
movsl
xchg
mov
sub
pop
or
addl
repnz
addr16
nop
rclb
cmc
adc
or
hlt
orb
xor
imul
imul
in
clc
push
jmp
pop
jmp
cli
adc
and
sbb
out
sub
dec
fst
call
mov
cs
push
adc
sarb
jl
inc
mov
mov
mov
jmp
mov
mov
adc
fcoml
testb
mov
test
je
mov
fwait
lds
mov
imulb
mov
stos
aad
cmpsl
shlb
pusha
push
movsl
sahf
push
insb
push
push
push
fldt
pushf
xchg
dec
xor
push
mov
inc
inc
inc
add
dec
add
cmp
cmp
xor
scas
mov
cmp
cmp
adc
shll
fsts
adc
or
dec
testl
add
pop
out
mov
add
stc
mov
cli
cmc
hlt
push
mov
in
daa
mov
push
pop
adc
sbb
fcmovu
dec
adc
aam
rcl
fists
lret
lret
ror
stc
mov
mov
scas
mov
mov
scas
and
sub
test
lods
fisubrs
mov
pushf
fwait
lcall
xchg
jle
pop
aad
lea
push
test
or
outsl
dec
cltd
ret
xor
in
fsubrs
adc
gs
lods
push
pop
push
and
pop
arpl
jne
pop
rcrl
push
dec
dec
push
aaa
push
repnz
mov
inc
inc
push
sub
cmp
pop
ss
test
jl
sub
je
es
pop
mov
jae
nop
adc
mov
adc
or
dec
cmp
xchg
cmc
aas
cli
jbe
push
adc
mov
or
and
out
in
add
sub
cmp
lock
loop
insb
cmpsl
enter
fistpl
fimull
and
adc
iret
dec
push
iret
sbb
lods
sbb
rol
dec
add
add
jne
mov
xchg
into
ss
out
call
mov
test
and
lret
push
cmp
aad
nop
add
cmc
mov
xchg
outsb
stos
popa
addb
jnp
mov
mov
sarb
loopne
push
test
int3
jns
icebp
test
lret
popa
scas
mov
fisubrs
pop
pop
fistpl
ficoml
push
ret
mov
push
inc
inc
fwait
les
ds
mov
movsl
cmp
adc
xor
mov
mull
jl
jmp
cltd
sbb
sbb
sbb
cmp
cmp
xchg
enter
lret
push
push
jg
stc
sub
sub
scas
xor
cmp
jnp
jae
pusha
and
call
movsl
push
std
pop
loop
push
loopne
cltd
loopne
pop
std
rclb
push
mov
sbb
or
fidivrs
mov
or
mov
jno
mov
scas
add
js
test
sbb
cmpsl
loope
in
mov
out
xchg
and
xchg
xchg
nop
sbb
or
mov
roll
cmpb
ss
js
push
iret
cli
xor
cs
lods
mov
mov
pusha
mov
scas
out
in
sbb
fdivrs
jb
fisttpll
xor
leave
xorl
add
xchg
pop
dec
test
mov
jb
cmp
sbb
sub
adc
adc
and
adc
inc
inc
into
push
or
add
pop
std
dec
inc
incb
cld
sti
cli
jl
notb
mov
ds
sub
xor
aas
pop
cmp
outsb
shll
sti
push
sbb
xchg
mov
xchg
ret
or
lret
cmp
cmp
inc
incb
fldlg2
js
jle
cld
es
push
lahf
xchg
mov
adc
xchg
lahf
mov
int
fwait
and
xchg
push
jge
adc
push
lea
addb
fnstcw
mov
mov
mov
loop
clc
xor
dec
mov
pusha
imul
lock
mov
pop
sbb
pop
fists
aam
dec
fwait
xchg
dec
dec
adc
xchg
mov
inc
inc
inc
ret
pop
cmp
pop
lods
ds
jecxz
ds
jne
lods
sbb
andb
sbb
mov
push
adc
xchg
dec
adc
mov
cs
out
xchg
cli
stc
test
push
jnp
imul
lock
es
out
imulb
mov
ss
arpl
das
pop
rorl
daa
cmp
int
insb
sub
data16
push
ret
dec
mov
aas
clc
push
push
mov
sub
or
xor
ret
movsl
sbb
or
pop
cmc
repz
push
call
js
loope
repz
add
jg
rcrl
jp
stc
xor
mov
loopne
mov
fs
popa
mov
pop
outsl
jo
mov
xchg
cmp
dec
dec
in
mov
mov
enter
xchg
mov
cmc
ret
xchg
xchg
testl
add
pop
xorl
pop
loopne
sub
mov
jns
sub
insb
push
nop
push
dec
add
or
leave
jno
popa
or
pop
hlt
dec
jp
popf
jbe
ljmp
in
push
sub
fistpl
fsts
push
sbb
dec
add
cwtl
pop
sub
ficompl
sbb
cmp
adc
sub
mov
mov
clc
mov
jae
insl
cmp
scas
and
out
mov
movsl
sbb
jecxz
lds
xchg
jg
lds
in
xchg
pushf
and
mov
lock
in
mov
jl
movsl
test
jbe
xor
imul
outsl
outsb
insl
pop
ss
cmpsl
and
loop
int3
imul
and
mov
sbb
xchg
jbe
fistpl
dec
aam
mov
es
pop
femms
sarl
mov
mov
inc
fcomi
pop
adc
mov
or
pop
out
mul
jne
jl
mov
pop
mov
pop
sbb
mov
jle
mov
jnp
xchg
push
in
ljmp
cmp
addr16
jae
repnz
popa
ljmp
jb
and
repz
push
adc
popa
fstpl
shll
sub
rcll
paddq
or
call
add
mov
xchg
push
mov
mov
and
mov
test
push
addr16
in
mov
push
and
call
adc
add
inc
adc
test
xorb
cmp
jbe
lds
mov
mov
jl
movsb
popa
pop
je
lea
push
lret
mov
adcl
sbb
xchg
xchg
mov
ss
shrb
xor
sub
dec
xor
and
sub
pop
mov
jmp
mov
mov
pop
push
push
xchg
int3
jg
pop
pop
xlat
xchg
fldl
ja
sbb
jae
adc
dec
testb
inc
cmp
push
dec
dec
mov
lods
loop
cmp
ljmp
lahf
imul
push
movsb
dec
fcoml
movsb
dec
xlat
cmp
repnz
push
aam
push
push
cmp
int3
sbb
in
adc
repz
mov
aaa
ja
ss
lds
repnz
cli
adc
mov
stos
and
cwtl
ficomps
xchg
or
mov
inc
testl
lock
sti
jb
jo
xor
lret
lods
mov
mov
fs
mov
inc
fcompl
mov
pop
es
or
pushf
add
jg
cmp
cmp
jp
mov
adc
adc
hlt
scas
insb
daa
lods
sub
push
cmp
and
jbe
gs
sbb
fs
stc
negl
xchg
dec
adc
popa
adc
les
dec
cmp
idivl
jge
idivb
mull
je
stc
jae
jae
aam
xchg
fisubrl
aam
sbb
and
mov
int3
lret
lret
and
or
inc
and
mov
enter
cli
movsb
inc
mull
stos
stos
test
ljmp
shrl
aam
mov
cwtl
push
push
push
js
pop
rclb
je
inc
fs
mov
pop
std
shlb
ja
out
sti
je
inc
sub
in
imul
outsl
dec
push
pop
pop
pop
fbld
pop
mov
inc
mov
mov
nop
push
cmpsb
adc
lahf
xchg
xchg
xchg
lret
leave
sbb
cmp
jnp
repz
mov
adc
outsl
and
imul
arpl
movsl
pusha
ljmp
pushf
push
std
cltd
mov
xchg
sbb
xchg
or
or
jl
pop
outsb
sti
loope,pt
pop
notl
jno
idiv
jno
ljmp
lock
pop
fmuls
adc
ds
mov
pop
jmp
cmp
das
leave
lods
or
sarb
in
aad
std
sub
xor
subl
movsl
imul
pushf
repz
cld
outsb
xchg
xchg
ljmp
loopne
add
add
mov
jge
pushl
jns
ja
jo
out
icebp
imul
mov
icebp
jmp
pusha
pop
ficomps
fldcw
mov
push
push
rorb
pop
fstpt
dec
cs
inc
inc
cld
cmp
cmp
mov
push
mov
fs
call
cmpsl
jnp
pop
push
sahf
sbb
into
sbb
push
mov
femms
xchg
cld
inc
pop
lds
mov
test
popa
testl
jns
in
sti
mov
or
arpl
dec
jmp
push
int3
sbb
push
mov
push
in
into
leave
push
rclb
scas
jp
fiadds
and
mov
ss
lods
mov
add
mov
mov
out
cwtl
sub
scas
push
and
xchg
adc
jne
dec
mov
fisubrs
or
das
or
jl
xor
jnp
cwtl
cmp
xor
mov
jmp
test
jnp
lods
pop
gs
pusha
jecxz
xchg
pop
movsb
push
pop
test
jbe
inc
or
rcrl
dec
dec
lret
push
lret
inc
inc
sub
push
test
aaa
mov
inc
out
test
loope
sub
cmpb
jge
das
stos
sub
cmpsl
pop
sbb
iret
xchg
rcrl
xchg
mov
iret
repz
xchg
push
add
push
jns
jnp
xor
add
sbb
arpl
xor
jmp
imul
jecxz
dec
call
mov
fistpl
sbb
fcompl
lret
inc
sar
push
stos
rol
test
xor
xor
gs
xlat
sbb
fs
stos
pop
pop
es
sbb
sbb
mov
fwait
adc
mov
sub
fsubrs
jp
jp
adc
divl
jb
jnp
icebp
gs
out
push
pusha
popa
pusha
jmp
outsb
inc
in
pop
pop
pop
pushf
ss
push
push
push
test
mov
fmuls
push
sti
pop
lods
inc
xchg
sub
cmp
xchg
xchg
and
ret
mov
repnz
sub
xor
in
scas
and
stos
xchg
pop
jmp
pop
push
sbb
pop
pop
or
xchg
jl
mov
mov
jl
or
fidivs
repnz
dec
dec
js
fwait
je
call
out
fs
popf
push
loopne
clc
pop
ret
mov
adc
push
dec
mov
dec
sahf
fcoms
testl
xor
mov
insb
cmp
stos
cmp
lahf
repnz
lahf
xchg
test
call
sahf
lods
and
cltd
cwtl
fists
int
or
rolb
adc
daa
xor
ja
jns
mov
aaa
jle
mov
inc
insl
scas
pusha
mov
cmpsb
js
stos
cmp
pop
test
push
push
rolb
dec
dec
dec
aam
push
sarl
lret
xchg
dec
sarb
adc
xor
cs
insl
adc
and
pop
iret
or
cwtl
and
pop
out
adc
je
lret
decb
rorl
test
ret
add
test
ret
and
aad
sbb
adc
loope
fcmovnu
in
pop
push
movsl
aam
loope
mov
movsl
nop
or
ret
dec
push
enter
sbb
inc
adc
cmp
fwait
or
xor
lcall
mov
pop
movsl
fistpl
sub
iret
mov
xchg
movl
xchg
negl
cld
mov
sar
xchg
hlt
xor
jecxz
pusha
fistps
jg
rcr
scas
sbb
cmp
sbb
xor
adc
sub
or
es
add
add
jp
clc
jbe
sti
hlt
jb
lock
pop
in
push
and
and
stos
out
xchg
and
pop
sbb
sbb
push
adc
je
fiadds
and
orl
and
ret
sbb
mulb
fldln2
out
in
in
push
and
in
jecxz
inc
cmpsl
loop
fstl
rorl
pop
push
dec
loop
cwtl
ror
into
or
add
mov
sub
xor
aas
mov
sub
mov
fistps
mov
out
lods
xchg
mov
sub
stos
mov
fcomp
fwait
daa
fcompl
xchg
ljmp
out
test
sub
mov
jg
popa
sbb
jne
int
mov
jbe
pop
dec
jnp
sub
aaa
repnz
es
jnp
and
pop
pop
sbb
mov
fistps
mov
mov
rol
cmp
clc
inc
dec
cs
sub
addb
sarl
stc
sub
cmpb
sub
test
sahf
sbb
pop
sub
pop
std
pop
addr16
arpl
repnz
push
add
or
cmp
lea
push
mov
clc
ja
repnz
jl
add
add
push
std
inc
cmc
pushf
pop
frstor
ficomps
inc
pop
aas
rcr
sahf
sbb
rcl
pop
adc
sbb
mov
mov
mov
aad
lcall
xor
inc
mull
stos
stos
clc
add
xor
movsl
and
sbb
and
stos
and
test
setns
fldt
jno
jg
test
enter
nop
jbe
jnp
mov
les
push
pop
mov
gs
test
ffreep
pop
pop
ficomps
insl
pop
xchg
jo
lahf
fcoms
add
nop
rclw
cmp
into
mov
insl
ja
lods
dec
mov
stc
xor
sbb
push
mov
sub
and
in
and
ficompl
lahf
pop
push
jo
push
rolb
jl
mov
ss
dec
in
cmc
cmp
jno
bound
stc
mov
ss
repnz
push
insl
dec
lock
outsb
into
aaa
aaa
push
in
mov
push
sbb
aam
mov
ds
out
inc
stos
xor
push
xor
cmpb
ds
push
scas
gs
cli
lock
mov
mov
jecxz
xchg
and
mov
fistl
jns
jecxz
pop
mov
push
inc
mov
push
or
das
xchg
mov
in
mov
push
push
fs
fistps
les
xchg
dec
leave
pop
push
pop
les
push
shlb
sti
xchg
mov
cmc
lea
scas
jge
dec
or
ja
stc
ss
jno
mov
jl
adc
scas
jg
pop
sbb
pop
sbb
adc
dec
iret
mov
cwtl
push
dec
xor
xchg
sbb
andb
jg
push
inc
insl
out
loope
ja
repnz
fs
in
and
out
in
cmp
int3
out
fnsave
dec
fcompl
fmuls
push
iret
xlat
push
ljmp
push
or
xchg
push
add
sbb
jnp
or
mov
repnz
out
cmp
test
pop
cmc
xor
mov
out
iret
dec
jmp
push
lahf
int
add
push
xchg
shl
adc
jg
ds
xorb
xor
cld
pop
daa
outsb
jge
imul
gs
push
xchg
push
cltd
jp
stos
mov
push
push
push
fstl
sbb
inc
push
into
sub
dec
lret
test
pop
inc
ds
mov
mov
add
cs
and
mov
sub
and
mov
jb
add
in
adc
or
push
xchg
jecxz
or
pusha
xchg
test
xor
mov
jg
decb
cld
sti
xchg
out
hlt
dec
inc
fidivrl
in
imul
cmp
cmp
in
movsl
hlt
push
ljmp
pop
cltd
and
into
mov
mov
test
ret
inc
xchg
inc
mov
xor
out
ds
into
mov
std
cmc
scas
mov
mov
scas
movsb
repz
movsl
mov
mov
pushf
adc
xchg
xchg
in
in
jge
or
add
test
jle
add
lret
jnp
mov
bound
mov
mov
jnp
imul
pop
pop
pop
outsl
mov
push
mov
dec
ret
xor
adc
enter
pop
lahf
sub
inc
aaa
xchg
inc
ss
mov
push
lods
adc
jns
subl
test
outsl
mov
out
lcall
xchg
dec
adc
add
xor
and
clc
ja
cmc
pop
xor
jo
add
jbe
repz
insb
mov
fs
pop
out
popa
mov
fcmovnu
aas
pop
rcl
xchg
jecxz
je
ror
xor
mov
inc
int3
cli
xchg
jp
mov
mov
mov
call
jecxz
sbb
mov
fldenv
mov
jmp
aam
add
popl
xchg
adc
bswap
mov
push
cmpb
shrb
push
mov
jne
outsb
insl
divl
jecxz
fs
fs
test
in
arpl
mov
fistl
add
std
dec
push
repnz
lea
sar
mov
sub
xor
mov
mov
es
sbb
lea
and
add
pop
adc
adc
xchg
mov
or
pop
les
add
jl
std
jp
lock
or
fdivs
in
jmp
das
icebp
out
out
cmp
fistps
inc
pop
push
loope
push
orps
fcmovnbe
rcl
iret
xor
dec
ror
inc
repz
test
int3
mov
dec
xchg
mov
xchg
mov
mov
xchg
sbb
stos
stos
cmc
add
mov
jp
add
jne
pop
or
mov
mov
mov
popa
xor
jl
negl
in
xchg
clc
fsts
xlat
icebp
in
push
insb
imul
push
test
insl
les
inc
popa
push
pushf
cmp
push
xchg
das
fistl
mov
and
cmpsl
leave
dec
leave
mov
mov
ret
test
mov
jbe
sbb
and
inc
daa
stos
mov
and
or
and
sahf
sahf
jecxz
lcall
xchg
sbb
push
shlb
testb
inc
add
enter
xor
add
jg
lods
add
jae
hlt
push
inc
sbb
push
in
fs
and
sub
fcoml
and
cmpsl
int
test
jmp
ds
ds
daa
rolb
push
push
push
lods
stc
mov
movsl
sbb
div
iret
fs
movsb
or
hlt
repnz
pop
push
sbb
mov
loop
xchg
fimuls
dec
add
sahf
aas
jbe
push
xchg
mov
xor
mov
imul
icebp
daa
and
popa
test
pop
pop
pop
xchg
into
jge
int3
pop
aad
sarb
pop
dec
mov
mov
cmp
pop
add
dec
mov
xchg
stc
cld
cmp
jle
xor
sub
sub
sub
and
mov
out
in
loop
loopne
fmulp
int3
xor
hlt
popa
outsl
or
mov
xor
push
mov
cmpl
loopne
adc
repz
sub
out
inc
aad
dec
jmp
jb
ret
lret
fstp
pusha
inc
xlat
fisubl
mov
bound
xchg
mov
pop
adc
adc
sti
add
mov
divb
lods
std
incb
ss
xchg
std
xor
data16
mov
fstpl
xchg
push
out
cltd
adc
mov
mov
mov
push
or
jl
mov
mov
ja
inc
fidivs
pop
mov
mov
mov
sarb
pop
pop
pop
and
pop
push
ficoms
push
add
jl
dec
or
pop
xchg
int3
mov
and
cmp
cmp
jnp
pushf
sti
jno
xor
jecxz
sub
loope
dec
push
and
jo
test
movsb
es
push
adc
push
cltd
pop
push
icebp
and
add
xchg
add
sti
cli
test
push
pop
jge
repnz
lock
mov
inc
jbe
shll
daa
push
jmp
les
ds
xor
xor
lock
mov
sub
dec
and
pop
pop
dec
scas
adc
stos
mov
idivb
xor
aaa
daa
mov
cmpsb
xor
test
pushf
fwait
shlb
fs
xchg
in
loope
mov
xchg
ret
push
dec
loopne
push
mov
jns
inc
cmp
sub
mov
push
and
mov
push
sub
fwait
mov
pop
ret
mov
dec
dec
rcrl
xor
dec
inc
inc
into
xor
cmp
cmp
add
mov
and
jnp
adc
sub
sub
arpl
outsl
push
ret
pop
sbb
outsl
mov
adc
pop
push
xor
push
adcb
icebp
jp
add
pop
ret
push
xchg
stc
insl
sbb
ficoms
repz
mov
in
jbe
inc
stos
jmp
popf
add
and
enter
fistpl
or
leave
sub
rcrl
mov
adc
movl
mov
inc
add
mov
xor
stos
scas
cmp
mov
ss
imul
in
push
sbb
pop
fcompl
rcl
xchg
jns
xchg
mov
lret
push
out
adc
icebp
imul
mov
jne
fsubrs
fidivl
mov
data16
in
das
dec
repz
pop
pop
out
dec
mov
fbld
push
push
push
sbb
mov
gs
aam
sub
andl
mov
push
repz
xchg
sub
pop
insb
dec
cs
sub
stos
sbbl
imul
testb
or
push
sub
add
enter
repz
dec
aas
clc
clc
imul
add
inc
ss
out
aad
jmp
jmp
sub
jecxz
out
jmp
ds
fcmovb
jecxz
aad
cmp
lds
lret
mov
xchg
clc
add
stos
lods
and
mov
mov
fsts
jecxz
mov
jp
js
jbe
je
jb
jo
outsb
imulb
mov
repz
shld
adc
and
adc
xchg
mov
lds
xchg
test
xchg
or
mov
cmp
push
jo
jo
lock
xchg
test
jg
sub
inc
andb
popf
xchg
cmp
sub
jno
bound
adc
addl
dec
dec
dec
jl
rolb
add
imul
xorl
sub
xor
mov
adc
jmp
cli
cmp
mov
ja
fstps
adc
popa
orb
sub
or
lea
data16
jae
pusha
jl
cmp
ja
adc
icebp
push
sub
popa
repnz
and
in
out
mov
push
inc
pop
mov
push
cmp
lods
inc
mov
inc
lock
and
fisubrl
dec
leave
or
push
cmpsl
aas
mov
push
inc
mov
and
adc
test
sbb
or
jl
jle
scas
push
gs
push
pop
les
pop
jmp
pop
mov
adc
jae
loop
xchg
aad
es
cmpb
cmp
enter
jae
lret
lret
mov
hlt
pop
dec
add
arpl
test
shll
inc
sbb
push
push
scas
fistps
mov
push
dec
movsb
movsb
xlat
outsb
push
sarl
or
inc
aas
jbe
in
cmp
jns
pop
sbb
xor
mov
test
push
jne
and
jp
out
and
mov
pop
adc
lcall
push
push
inc
inc
add
dec
or
outsl
pop
clc
outsl
sti
ficoms
repnz
xor
mov
ljmp
cmp
jecxz
xor
rcr
sbb
pop
push
rcrl
sub
mov
enter
les
mov
mov
mov
jne
icebp
mov
insl
and
cmpsb
push
loop
sub
mov
call
xchg
ljmp
mov
mov
fdivrl
roll
aad
jns
enter
pop
mov
mov
rol
outsl
mov
popa
in
fdivrl
push
add
lahf
push
jecxz
ficomps
lahf
dec
ret
mov
inc
pop
iret
jae
inc
sahf
pushf
push
incb
mov
and
outsb
das
mov
bnd
arpl
xchg
xor
jle
jo
mov
shll
fcom
jae
or
jl
jno
push
in
ja
add
pop
cmpl
cmp
mov
xor
js
icebp
push
call
loop
fists
sub
fcmovnb
ljmp
push
xchg
ss
adc
inc
iret
xor
scas
sub
mov
mov
push
mov
mov
call
shrl
xchg
shl
stc
sub
rol
call
ljmp
or
mov
adcl
add
xchg
mov
aad
add
jp
xchg
movsb
popa
in
insl
loope
pop
pop
pop
pop
pop
jle
lcall
ret
pop
dec
mov
sub
inc
inc
aas
xchg
xchg
lds
jl
mov
xor
sub
and
sub
xor
pop
push
adc
xchg
or
push
xchg
inc
or
daa
jnp
movsl
fwait
dec
inc
add
push
dec
imull
imul
out
in
popa
or
cmp
sub
insl
sub
sbb
out
out
fcmovnu
bound
pop
xchg
xlat
test
int3
push
xor
test
sbb
mov
sub
mov
es
mov
stos
cmpsb
sbb
adc
add
or
mov
dec
lcall
fiaddl
bound
jns
xorb
movsl
mov
cld
push
imul
sub
pop
loopne
pop
jle
inc
sub
cmp
sub
stos
sub
xchg
inc
inc
xor
inc
fwait
add
xor
mov
mov
outsb
adc
mov
es
xor
cwtl
sub
xor
mov
pop
and
xchg
pushf
push
sub
addb
test
xchg
int3
push
push
add
out
popa
sti
cli
jge
add
sbb
imul
fpatan
jmp
push
call
dec
in
push
add
repz
aam
fcomps
mov
xor
dec
rol
ret
ret
sbb
push
ffree
inc
cli
fnstcw
stc
lods
and
sbb
ljmp
rcrb
fdivs
sbb
loopne
jne
in
pop
add
cli
test
in
mov
jg
cli
mov
shl
outsl
stos
push
mov
repnz
popa
mov
mov
ret
pop
aas
outsl
push
push
push
aad
push
jle
adc
rorb
dec
dec
idiv
pusha
std
add
mov
and
jae
xchg
push
and
mov
sub
es
and
push
sbb
outsb
outsb
lahf
jp
mov
pusha
push
cmovno
sarb
xchg
dec
ljmp
jg
aas
cld
push
stc
push
add
cmp
jns
data16
jnp
jns
into
cmp
dec
push
jp
jecxz
cmp
hlt
out
or
out
and
aam
cmp
sub
sbb
lret
dec
ror
ffree
cmp
shll
mov
ret
ret
out
mov
fidivl
scas
mov
cmpsb
fisubs
mov
jmp
pushf
and
mov
out
in
in
xchg
or
lods
mov
test
or
repnz
mov
mov
bound
je
out
insl
repz
jno
push
out
lret
es
fstps
pusha
lahf
dec
dec
cmp
dec
mov
jns
int
push
les
adc
or
mov
mov
sub
lea
and
xchg
ss
imul
pushf
and
lcall
or
dec
cmp
xchg
add
push
sti
cli
sbbl
sarb
iret
pop
lock
mov
push
rcrb
sbb
push
mov
notl
pop
and
rcrb
pop
or
pop
call
ret
sub
mov
xor
sub
lock
xor
and
mov
pushf
adc
stos
jge
out
xchg
nop
adc
sbb
imul
inc
adc
dec
push
iret
jno
or
fcom
sarb
cmp
ds
mov
imul
gs
pop
pop
pop
out
popa
inc
mov
push
push
push
or
sahf
mov
adc
xchg
push
sub
mov
and
xor
je
sbb
sub
mul
hlt
gs
and
jmp
stos
imul
adc
adc
and
or
xlat
xchg
push
repz
aas
incb
add
in
push
clc
test
fistl
ljmp
jmp
jecxz
scas
insb
sub
fcmovu
xchg
fcoms
sbb
mov
fwait
lcall
mov
in
add
test
xchg
jno
mov
imul
add
icebp
xchg
mov
sahf
popf
push
push
fcmovnu
cltd
.byte
xor
xchg
xchg
