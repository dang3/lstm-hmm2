push
call
ret
ret
mov
out
cmp
adc
jp
and
aas
fildll
mov
mov
inc
out
or
cmpsb
pop
ljmp
xlat
pop
sarb
pop
jge
add
je
or
xchg
and
cwtl
fldt
pop
cmp
lret
gs
iret
fwait
mov
or
test
sub
arpl
hlt
xchg
sbb
scas
popf
test
out
dec
push
pop
sub
sbb
iret
loope
mov
inc
pop
aam
inc
push
cmp
mov
push
xor
mov
lods
pop
test
rorl
aam
xlat
out
jg
push
js
push
aaa
mov
fimuls
mov
mov
pop
in
mov
inc
scas
loopne
call
lods
pop
and
push
and
sub
scas
icebp
cmp
fs
add
cmp
aas
mov
loope
repnz
imul
mov
mov
xor
jno
scas
sbb
sbb
jne
add
or
or
leave
adc
xor
mov
sbb
push
cmovp
test
mov
adc
dec
dec
dec
fisubl
loop
sahf
filds
dec
icebp
andl
add
loope
mov
mov
sbb
clc
dec
cli
repz
lea
decl
mov
sbb
dec
push
popf
cmpsl
push
scas
cs
or
insl
jo
insl
and
int
neg
cmp
add
xor
pop
cmp
insb
sbb
inc
pop
fistl
test
or
cli
lcall
jne
xchg
int3
test
dec
iret
and
jl
jbe
outsl
xchg
xchg
outsl
ja
cltd
mov
push
sbb
int
or
sub
pop
cmp
addb
ret
test
mov
inc
xor
imul
mov
dec
xor
pop
and
and
adc
mov
pop
add
push
mov
add
insl
sub
push
xor
cmp
pop
xor
mov
pop
xor
out
mov
call
jnp
push
mov
sub
imull
pop
pop
add
push
pop
sbb
in
push
jmp
jecxz
cld
and
jge
push
das
test
rcll
popa
testb
test
mov
jg
push
scas
push
out
jp
mov
push
in
jne
jl
iret
jb
ljmp
mov
ret
clc
mov
jmp
in
jle
imul
sbb
mov
mov
into
cmp
push
inc
fidivl
inc
fadds
mov
ljmp
pop
lods
jne
clc
scas
push
mov
stc
inc
in
and
scas
decl
mov
mov
ret
xorl
ret
clc
lds
fyl2xp1
ret
or
aaa
xor
and
inc
cmpsl
pop
in
and
nop
dec
jns
xor
lret
add
movb
rcrb
and
hlt
hlt
and
rol
sbb
fistps
add
lcall
xor
ljmp
cmp
lcall
mov
inc
cmpsb
rcll
jp
lahf
cmp
sarl
pop
or
fbld
mov
push
xadd
push
jbe
aad
inc
sub
and
xchg
add
out
pop
loope
ja
or
adc
stc
sbbb
cld
and
add
ja
jmp
lods
or
inc
and
mov
outsb
pop
pusha
and
call
mov
or
movsl
fistpl
push
or
jb
ja
push
xor
sub
inc
jne
add
insb
jl
jbe
push
sub
inc
adc
sub
or
insb
loope
adc
sub
sub
and
out
sub
ljmp
fwait
push
popl
das
ret
mov
jno
push
ja
mov
push
or
insb
js
mov
nop
xor
mov
cs
lea
pop
daa
push
mov
dec
jbe
mov
xor
leavew
mov
in
out
roll
hlt
sahf
into
add
pop
cmpb
jp
pop
and
and
sub
or
mov
jns
or
xchg
ds
push
or
sub
pop
test
popf
inc
lods
loopne
test
lock
dec
lods
dec
scas
jb
jle
dec
push
push
nop
adc
mov
dec
jmp
xchg
push
push
add
jge
std
aad
mov
push
inc
cwtl
adc
xchg
dec
mov
push
adc
jg
testb
in
arpl
lret
inc
sahf
push
jge
ret
xchg
inc
dec
cmpsb
xchg
leave
add
add
mov
ja
xor
xlat
mov
repnz
or
fsubl
shrb
push
shrl
push
int
lahf
push
mov
and
pop
int
shrl
sbb
rorb
insl
into
push
sub
outsb
lds
pop
shrb
xor
and
ret
and
mov
jns
in
insb
dec
jnp
inc
test
inc
arpl
sub
sbb
sbb
call
lret
mull
and
pop
inc
icebp
nop
fadds
xor
mov
int
pop
sti
jle
lock
sti
mov
aam
jg
shrl
pop
inc
cmp
insb
dec
les
cmp
andb
push
stos
mov
es
in
xchg
or
jae
outsl
in
pop
mov
sti
bnd
dec
ss
into
ljmp
dec
out
pop
push
cmpsl
adc
repz
mov
sbbl
dec
mov
cmp
sarb
cmp
mov
jne
and
and
pop
cmp
daa
les
sub
sbb
call
push
test
pop
mov
divb
jne
jb
mov
sub
push
repz
fsubrs
xchg
lret
stc
jne
fdivrp
add
dec
add
adc
fcmovb
mov
inc
cli
add
mov
sbb
popa
dec
and
out
movsb
sub
xchg
xchg
mov
mov
es
aam
dec
xchg
add
xchg
mov
leave
add
ds
xchg
adc
or
pop
cmp
sbb
dec
aam
xchg
popf
lret
xlat
add
add
popa
ss
popa
sarl
and
shr
xor
jge
jno
pop
xor
jl
add
jbe
mov
xchg
jge
xchg
gs
and
jmp
push
push
inc
and
je
jle
sbbb
jge
inc
mov
pop
icebp
and
flds
into
ret
sti
xlat
dec
sub
mov
xchg
inc
sarl
in
out
das
inc
aad
xchg
cmp
add
mov
fbstp
mov
add
daa
je
push
cmc
je
push
cs
push
fldl
imul
popa
lds
js
lea
pop
cltd
std
adc
push
imul
sbb
adcb
repnz
jp
out
and
rorl
jno
popa
push
xchg
push
mov
and
jg
adcb
fwait
cwtl
xor
pop
hlt
or
imul
xchg
icebp
jae
dec
loopne
test
ljmp
and
lds
roll
xor
imul
test
dec
xchg
pop
inc
push
pop
pop
pop
arpl
ja
orl
pop
loope
add
cwtl
enter
add
fisttpll
jge
out
arpl
pusha
mov
jecxz
lcall
addr16
sar
outsl
addl
pop
out
add
sbb
or
je
lds
outsl
push
xchg
cmp
adc
dec
cmc
jns
bound
cmc
sti
mov
jns
cmc
push
mov
fsubp
lret
mov
sub
sbbl
gs
mov
mov
popa
xorl
ljmp
jecxz
lods
jbe
cmpsl
int3
mov
shll
out
hlt
std
mov
iret
mov
xor
mov
imull
push
test
xchg
inc
xor
mov
scas
lret
test
repnz
mov
aad
jmp
sub
xchg
out
daa
jle
mov
inc
jp
gs
pushf
mov
scas
xchg
dec
out
in
out
idivb
and
jne
js
mov
aam
inc
clc
or
cmovae
in
mov
pxor
mov
cwtl
dec
jge
xor
and
nop
pop
out
cltd
jne
xor
xor
pusha
mov
pop
pop
add
xchg
daa
fbstp
into
jne
aad
push
inc
mov
xor
insb
add
sub
sub
push
xor
jae
cmp
and
mov
bound
xor
xchg
xchg
mov
ret
movsl
pop
xchg
jno
mov
arpl
sti
ds
in
cmp
scas
bound
aas
pop
subl
pop
insl
add
jne
es
sub
cmc
mov
dec
or
mov
cmc
shr
add
jle
dec
shrb
mov
ljmp
ffreep
pop
in
les
jge
je
ja
andb
or
push
fsubrl
int3
xor
mov
je
jmp
in
cmp
jecxz
xor
pop
add
repz
dec
test
cmp
in
or
inc
sub
aam
xchg
mov
inc
inc
dec
das
pop
mov
fnstcw
xor
push
aad
fmull
lahf
addl
push
daa
stos
sbb
push
push
gs
call
dec
add
enter
sti
js
cld
push
cmc
scas
cmc
push
aaa
cmp
push
stos
jae
sub
test
addr16
sub
xlat
mov
jnp
push
in
ss
dec
pop
jmp
adc
inc
lock
and
sub
sbb
push
inc
mov
in
cs
cmp
sub
add
inc
insl
jg
pop
pop
cmp
mov
sbb
mov
out
out
cwtl
lcall
movsb
jo
pushf
push
subl
mov
sub
push
inc
add
pop
ret
xor
aam
daa
or
outsl
daa
jge
mov
lock
cmp
mov
ds
and
inc
jmp
xor
push
enter
mov
mov
push
mov
dec
add
int
rol
roll
int
pushf
je
les
daa
enter
mov
mov
mov
cli
shl
cmp
vmwrite
mov
adc
jp
push
or
addr16
ss
lock
inc
outsb
mov
iret
dec
mov
movsl
mov
mov
dec
scas
arpl
or
mov
jbe
mov
clc
xchg
xor
and
mov
cld
pop
icebp
add
addb
sbb
and
xor
and
pop
popa
mov
push
inc
imul
add
clc
xor
daa
mov
je
jl
pop
lret
adc
fsubl
dec
xor
mov
hlt
insl
in
pop
nop
outsb
out
dec
mov
ja
addr16
or
lods
jg
jg
inc
xor
dec
mov
fs
adc
sbb
ficoml
mov
rcrb
inc
jge
fstl
mov
mov
or
push
ror
push
mov
sbb
mov
das
stc
push
push
push
mov
mov
sbb
mov
dec
xchg
xchg
stc
and
cmpsb
fdivl
sahf
cmp
adc
das
enter
cwtl
fildl
push
and
int
cmp
adc
lock
imul
push
cmpsb
jle
mov
lods
movsl
jmp
mov
movsl
pop
push
sbb
mov
jp
shr
and
xor
adc
add
jbe
in
mov
pop
xchg
cmp
adc
lock
inc
fs
push
xchg
mov
fbstp
push
mov
pop
cmpsb
aaa
and
adc
xchg
pop
out
xor
add
sub
inc
inc
mov
jecxz
pop
mov
jbe
int3
push
aad
mov
daa
push
cmc
shr
and
push
add
add
mov
ja
xchg
iret
mov
gs
push
ret
insl
jge
lcall
inc
mov
xor
dec
add
sti
fisttps
fnstsw
lahf
into
cmp
daa
test
mov
je
pushf
push
insb
cmp
das
stos
dec
pop
jecxz
in
or
and
aaa
enter
sbb
pop
imul
mov
popa
push
inc
test
mov
fstpt
cmp
pop
inc
add
mov
jp
loope
xchg
daa
mov
xchg
out
jne
stos
insb
mov
imul
mov
pop
lds
outsl
cmp
dec
aad
inc
cmpsl
bound
hlt
adc
xchg
and
mov
les
push
sbb
ret
jmp
cmpsl
mov
inc
nop
mov
jecxz
hlt
push
dec
in
fnsave
repz
add
je
sbb
pushf
fsts
sub
out
addr16
rcl
add
adc
cmp
imul
sbb
xchg
ret
add
insl
mov
and
in
mov
pushf
and
sbb
sub
push
mov
testb
push
fs
fwait
cmpsl
test
xor
fnsave
sbb
pop
and
inc
sub
rorl
xchg
push
addr16
push
and
sahf
push
jmp
movsl
xorl
loop
ljmp
jecxz
subb
jno
and
xor
dec
rcrb
xchg
xor
outsl
fcom
cli
cmpsl
and
aaa
push
sbb
pop
mov
aaa
shlb
in
add
outsb
pop
int3
cwtl
sbb
loope
ds
mov
sub
jne
push
popa
jnp
push
adc
jg
inc
lods
push
sbb
jl
push
jo
xchg
lods
int3
cmp
pop
rol
or
comiss
dec
andl
cmc
inc
andl
push
fsub
xor
xchg
lret
xor
mov
fidivrl
in
je
mov
es
jne
negb
adc
sbb
stos
popa
popa
test
mov
dec
cmpsl
push
sbbl
cmp
fnstenv
jns
fsts
outsb
sbb
pop
mov
lcall
lcall
aaa
jb
out
jp
fwait
sbb
rcrb
mov
push
insl
lods
outsl
mov
and
imul
shrb
clc
mov
jo
jp
add
or
mov
repnz
jp
rorb
xor
pop
cli
sbb
fcomip
jno
sbb
xchg
mov
xchg
dec
sar
cltd
imul
mov
inc
shrb
inc
test
pop
pop
add
xchg
pop
xchg
mov
inc
add
and
dec
aas
ret
mov
jnp
sub
nop
push
ja
push
sbb
dec
mov
not
insb
xchg
xor
sbb
cmp
fmuls
push
cmpsb
mov
fcmovb
or
mov
add
xchg
lea
lods
fninit
push
xor
dec
mov
mov
push
or
push
pop
inc
mov
dec
test
sub
and
cld
lea
or
sbb
imul
mov
dec
mov
data16
mov
adcb
mov
int3
add
push
add
dec
ret
jb
inc
mov
in
insb
and
mov
jbe
xchg
push
gs
mov
lret
adc
xchg
out
dec
push
sahf
xchg
jno
out
push
hlt
rcrl
add
pushf
mov
inc
and
ficompl
scas
mov
mov
inc
pop
xlat
mov
imul
loopne
mov
cmpl
cli
sub
fstps
rcll
xchg
lret
mov
movsl
shlb
sbb
jno
lds
or
fstpl
cmpsl
jns
inc
ret
add
push
pusha
mov
sub
scas
sbb
movsl
and
lock
mov
mov
shlb
mov
lahf
cwtl
inc
push
fldenv
or
xor
fwait
call
mov
inc
cmpsl
ja
sub
ja
dec
sub
out
pop
stos
leave
mov
xor
lds
jp
xchg
shlb
cltd
cwtl
movsb
jge
add
fistl
cmp
add
lods
add
push
aad
cmp
int3
dec
orl
lret
xor
or
imul
push
outsb
push
mov
xchg
fcomps
lods
or
and
je
xchg
push
sbb
and
popa
or
mov
mov
fnstcw
lret
sub
scas
les
xor
ret
inc
jg
xor
jecxz
mov
aam
add
adc
push
jg
scas
inc
test
jp
lods
xor
pop
jp
inc
repnz
jmp
mov
sahf
xor
cltd
pop
push
jmp
rcr
rclb
jo
dec
dec
and
js
cmp
sub
in
rclb
ret
les
jle
lcall
test
enterw
mov
or
mov
aas
cltd
insl
cmp
mov
mov
call
dec
lds
inc
nop
xor
movsl
inc
fidivrs
lcall
lock
in
aad
push
or
jmp
shr
sbb
and
mov
fnsave
ds
daa
sbb
mov
xchg
in
jnp
aaa
nop
idiv
sbb
movl
fdivrl
out
lret
imulb
lock
nop
sub
hlt
js
xor
mov
pop
dec
stc
andb
dec
in
mov
jle
bound
aad
inc
pop
hlt
pop
xor
and
sub
bound
nop
inc
scas
inc
outsb
gs
movsl
sbb
push
cmp
pusha
mov
fwait
sti
mov
xor
out
push
jnp
push
xchg
imulb
cld
and
addr16
sarb
push
mov
mov
pop
mov
and
pop
push
inc
mov
jle
jecxz
xorl
lock
jbe
xorb
mov
out
mov
xor
sub
loop
out
pop
test
insl
ljmp
adc
add
mov
in
jae
fucomi
mov
sbbl
cmp
inc
repnz
insb
mov
xchg
sub
rcl
or
mov
shrb
xor
fsubrp
in
inc
dec
inc
or
xchg
pop
sbb
movnti
sub
xchg
cmpl
in
sti
jecxz
movsl
out
pop
push
xchg
loopne
xchg
aam
arpl
adc
out
pop
clc
movsl
inc
xchg
lret
adc
jge
jo
js
inc
mov
jo
adc
stos
push
cmp
sub
jmp
or
mov
in
inc
stc
movsl
jns
xchg
cmpsb
lahf
mov
jmp
daa
pop
jno
inc
push
pop
ds
ret
sbb
mov
cmpsb
lret
cmp
pop
push
mov
xchg
adc
sbb
sarb
inc
adc
add
xlat
jne
mov
mov
movb
add
dec
sbb
mov
mov
cli
mov
push
popa
aas
ja
cmpsb
push
repz
fiadds
cld
sti
shlb
cmp
gs
push
jo
push
cmp
jl
out
push
pmaxub
arpl
rcr
fstpt
stos
adc
lock
test
call
lcall
adc
ja
ds
xchg
xor
pushf
test
sbb
data16
lahf
ret
mov
cmpsb
loope
mov
mov
pop
jle
push
dec
in
sarl
dec
sbb
jae
aam
movsb
ret
dec
loope
lock
enter
orb
mov
sbb
stos
popf
fmull
mov
inc
orl
xchg
mov
loop
or
dec
filds
jmp
ret
jge
pop
mov
dec
cmp
nop
scas
imul
sub
push
sub
das
jns
imul
sbb
jo
pusha
and
aad
mov
in
mov
rcrb
lahf
push
add
gs
or
gs
js
pop
and
cmpsl
cs
or
les
outsb
push
out
push
std
dec
xor
into
fwait
cmpsb
je
movsb
dec
das
and
xchg
xchg
cmpsl
cmp
popa
mov
push
popa
push
cli
pop
jno
xchg
push
and
xchg
scas
aaa
mov
lcall
out
jnp
je
xchg
xchg
dec
insl
aad
sbb
pop
aaa
cs
bound
sub
enter
or
in
test
mov
lds
mov
movb
cmp
testb
fildl
out
push
inc
imul
pop
xchg
mov
push
shll
dec
roll
pop
sbb
data16
push
into
pusha
nop
xchg
inc
fldl
hlt
cs
lea
les
mov
dec
es
adc
ret
jg
push
enter
push
fldcw
jmp
mov
sbb
mov
jp
in
imul
into
inc
repnz
push
inc
add
sbb
hlt
stos
push
insl
in
add
fcoms
push
lret
inc
daa
arpl
cmpsl
popa
jo
std
fmuls
pop
sbb
lds
mov
ret
sub
pop
pop
subl
pop
push
fwait
test
mov
flds
mov
shlb
cmp
push
push
adc
add
ss
fwait
inc
xor
fidivrs
out
xor
repnz
daa
sbb
outsb
mov
mov
xor
in
js
pop
icebp
outsb
rcrb
lods
or
es
inc
mov
popa
mov
dec
je
push
push
insl
mov
ret
xchg
lret
cmpb
xor
fistl
loope
aam
inc
rolb
push
imul
int
in
dec
stc
add
mov
scas
outsl
and
ljmp
cmp
sub
mov
jbe
scas
push
test
pslld
push
jnp
add
pop
inc
lea
sub
mov
fwait
and
cmpsl
cld
jne
ret
test
mov
roll
out
cmp
inc
rolb
dec
popf
inc
xchg
add
push
jmp
push
daa
cmp
gs
fucomip
push
xor
loop
fiaddl
dec
jp
leave
jb
inc
rclb
into
push
out
sub
dec
and
into
call
mov
shr
in
outsl
ret
cmc
hlt
cmpsl
jg
out
pop
pushf
pop
shll
jp
mov
jnp
dec
rcr
enter
paddb
cmp
std
jge
ss
jle
sbb
and
sub
repnz
cmp
rcr
adc
mov
push
mov
and
ds
xchg
sub
fisttps
mov
push
mov
adc
mov
popf
xchg
popa
xor
cmp
iret
imul
jge
arpl
in
aam
jno
call
xchg
adcb
repnz
out
xor
mov
mov
inc
lcall
aaa
test
in
jb
fst
arpl
and
pop
xchg
dec
pop
cmp
dec
or
addl
inc
mov
push
rcr
fimuls
cmc
pop
mov
mov
cli
and
out
mov
in
mov
fucom
test
and
mov
stos
pushf
dec
cld
lock
pop
ljmp
inc
rorl
lea
leave
lods
sbb
scas
loopne
push
mov
ret
cmpsb
lods
xor
aas
shll
movsl
push
bound
jg
push
daa
or
jae
ljmp
inc
add
test
cs
dec
inc
loopne
xor
pop
sahf
mov
insb
dec
push
mov
xchg
push
add
imul
pop
imull
fimull
sbb
push
arpl
mov
xlat
popa
push
pushf
in
push
xor
scas
dec
add
mov
dec
and
push
add
les
pop
aam
pusha
cmc
out
add
jbe
shll
mov
jo
stc
shll
aad
fnstcw
fdivs
cmp
call
fmuls
pop
dec
lahf
dec
hlt
jb
fmul
outsl
pop
ss
push
insb
sub
jge
jg
xchg
lahf
popa
cmp
lea
subl
js
dec
shll
mov
sbb
pop
mov
xor
test
cmp
arpl
sbb
cltd
in
add
out
mov
mov
jl
icebp
cltd
in
or
jb
xchg
mov
adcl
cmpsb
jl
dec
mov
and
xor
in
movsb
lock
testb
mov
popl
popa
mov
in
lea
daa
outsl
add
and
add
imul
jp,pt
rclb
out
shlb
ss
jns
int3
xlat
dec
pop
out
or
cwtl
cld
mov
popa
call
clc
xlat
push
pop
ljmp
fcoml
shl
in
gs
inc
mov
jge
mov
push
dec
and
fsubrl
int
pop
jl
mov
mov
or
pop
xchg
fisubrs
push
not
dec
cwtl
sub
shll
sbb
insl
insl
xchg
or
xchg
subb
sub
jne
pop
sbbb
add
jge
sbb
dec
add
into
xor
cmp
dec
shr
lds
cmpsb
cmc
mov
data16
shlb
inc
dec
mov
adc
out
and
jl
cmpsl
add
insb
fdivl
adc
rorl
cld
inc
sarl
inc
and
repnz
je
cli
mov
mov
push
jmp
sub
lahf
sbb
std
pop
stos
push
jl
mov
or
or
jb
dec
lahf
mov
adc
js
cs
inc
mov
jne
cmp
lds
out
push
je
bound
and
out
or
sbb
push
cmpsl
or
rcl
jge
pushf
int3
or
cmp
adc
test
mov
lock
jle
iret
ret
aam
aas
or
dec
das
pop
mov
push
sahf
daa
out
int3
cwtl
dec
test
shl
int3
cmp
xor
test
call
mov
cmpl
fndisi(8087
aaa
or
in
js
or
dec
mov
push
ds
and
out
sub
ljmp
add
xor
js
sub
imul
adc
stos
and
shr
cmp
sbb
inc
movsb
outsl
xor
dec
mov
mov
daa
das
cmp
lret
or
or
add
mov
out
jg
ja
add
xor
scas
orb
add
outsl
in
testb
mov
lds
or
rcr
pop
adc
cmp
mov
fnstsw
test
lret
and
jge
push
lea
mov
jbe
mov
shr
icebp
fldcw
inc
push
lcall
pop
les
pop
jp
cmp
or
jae
ret
stos
fsubrs
aam
pop
add
sub
ja
cs
or
fdivs
lret
imul
sbb
aaa
je
mov
dec
mov
push
adc
fcompl
cmp
push
dec
mov
jg
fidivs
sbb
cs
les
adc
mov
jb
push
je
mov
scas
loope
cmovae
aad
sbb
sti
addr16
mov
mov
fstpt
cmpsb
xor
mov
lea
nop
movsb
nop
movsl
addl
inc
sub
lahf
ja
mov
test
cltd
imul
xchg
inc
adc
or
add
cwtl
icebp
sbb
or
clc
popa
xchg
call
je,pt
cld
dec
ja
jae
push
subb
mov
xchg
sarb
pop
in
or
packuswb
arpl
inc
dec
out
and
push
data16
cmpsl
cli
mov
jp
faddp
jnp
or
clc
mov
test
xor
push
mov
and
rcrb
nop
pop
btc
bound
push
dec
cmp
fistps
ret
shl
das
dec
leave
adc
adcb
scas
jnp
pop
jg
lahf
int
adc
dec
fnstenv
pop
jmp
and
loope
pavgw
lock
xchg
sbb
sub
or
jp
mov
lret
les
mov
mov
add
cmp
push
sub
sub
or
pop
mov
xchg
stc
mov
pop
into
inc
insb
sbb
lea
aaa
sarl
aam
push
lods
cltd
mov
aam
push
mov
data16
es
outsb
push
std
xlat
cmpsb
jmp
stc
outsb
stc
lods
scas
jns
aas
jno
and
push
jg
ss
pop
cwtl
fnsave
ficompl
cmp
pop
cmc
xlat
xchg
or
cmc
xor
mov
cmpsl
dec
das
jo
push
xor
repz
decl
fiadds
orb
add
scas
pop
test
lods
lods
fwait
dec
cmp
xor
fnstsw
fisttps
adc
movsl
in
cmpb
push
ja
aaa
mov
ret
sub
jbe
in
mov
shrb
mov
cli
or
mov
call
xchg
je
loope
fdivl
cmp
movsl
mov
xchg
fstps
in
jge
pushf
fdiv
lds
lcall
mov
shll
xchg
in
in
mov
lds
xchg
add
enter
test
mulb
popa
dec
xor
xchg
sub
mov
fisubs
call
mov
addr16
ds
lret
fldl
pushf
mov
dec
add
movsb
fmul
or
jl
movd
mov
sub
push
aaa
push
adc
add
jae
stos
andb
cmpsl
pushf
ficompl
fidivrs
mov
nop
es
scas
icebp
xchg
sub
jo
dec
xchg
ja
sub
jae
pop
imul
mov
into
mov
add
je
shl
sar
jno
bound
pop
jl
mov
xor
int3
push
cmpsl
fst
in
rcrl
int3
xchg
dec
jge
sar
testb
inc
nopl
jno
push
inc
arpl
sub
sbb
jb
stos
inc
loope
addl
jl
jne
ret
daa
mov
inc
repnz
aas
mov
jle
jb
adc
je
push
inc
andb
arpl
cmpl
fwait
jb
imull
jg
sub
fwait
test
jge
jbe
xor
mov
mov
dec
stos
and
mov
fwait
sbb
pop
or
or
negb
inc
decl
mov
std
dec
sbb
cs
and
xor
pop
insb
jo
jmp
movsb
popa
mov
add
and
scas
dec
cmp
dec
add
cs
sub
dec
movsl
mov
dec
sbb
dec
xorb
and
pushf
icebp
ret
sub
xor
push
insb
sub
daa
enter
dec
loope
ret
mov
fistpll
js
adc
adc
and
mov
iret
out
adc
adc
mov
cmp
js
fbstp
js
or
add
lods
lods
and
cli
insb
inc
rorb
sub
loopne
popa
iret
cmpsl
sub
dec
lahf
les
ljmp
mov
pop
lret
push
lret
xchg
clc
ret
cmc
sbb
data16
data16
ds
fistl
and
das
pop
cmpsl
cld
test
pop
cmpsb
mov
jecxz
jbe
aaa
stos
test
into
in
mov
lcall
jbe
rorb
jae
mov
je
sub
adc
push
or
int3
jno
mov
mov
cmp
adc
mov
dec
cmc
mov
nop
and
rclb
sbbb
mov
and
xchg
xor
aaa
out
lcall
fsts
add
push
pop
mov
imul
test
xor
aas
loope
je
movsb
rcl
lahf
mov
sub
mov
int3
and
movsl
dec
and
sbb
mov
xchg
decb
mov
ret
out
out
sub
push
das
shll
xor
stc
pop
or
stos
sbb
stos
test
push
lods
int3
or
jo
loope
dec
sub
and
cwtl
into
or
mov
pop
mov
mov
loope,pn
sbb
mov
xor
sub
add
jecxz
push
jge
xlat
adc
push
push
sbb
sub
cli
mov
dec
add
jnp
adc
jecxz
in
rcll
xchg
push
addl
adc
mov
cmp
fidivrl
lock
mov
pop
dec
mov
insb
cwtl
add
inc
rorb
cmp
jge
pop
std
stos
cli
dec
mov
jno
jmp
xchg
cmp
jge
and
jg
call
pusha
sub
adc
adcl
push
mov
jmp
cmp
ljmp
inc
or
sub
mov
add
insl
test
inc
dec
mov
ret
nop
sbb
loop
test
add
addl
psubq
lret
insl
notl
xchg
out
push
cmp
cmp
jg
mov
sbb
and
dec
lock
mov
sbb
pop
lods
dec
adc
mov
cmp
loopne
int3
shrb
jmp
int
xor
jmp
jl
repnz
mov
stc
inc
and
es
jmp
leave
ljmp
shr
addr16
push
sahf
popf
mov
sub
cs
jne
int
rclb
push
or
dec
and
fucomi
push
xor
xlat
loope
jb
sub
dec
std
aaa
lea
rolb
xchg
sbb
mov
push
mov
movsl
leave
pop
stos
adc
jge
scas
mov
push
dec
ss
mov
imul
jne
lock
loope
dec
mov
shl
inc
and
mov
aam
dec
sub
cmpsb
and
fsubrs
jo
pop
sbb
jp
andl
ficomps
cltd
mov
je
imul
push
fs
mov
mov
shl
loope
lret
dec
mov
les
loope
xor
stos
mov
push
cmc
cmp
push
push
out
fdiv
add
fcmovne
or
add
popf
inc
in
ret
insl
sbb
jmp
out
mov
rcrl
roll
xor
push
div
sbb
fidivrs
inc
cwtl
divb
test
adc
push
push
ficomps
arpl
test
pop
les
mov
ror
lods
mov
xchg
in
sbb
aaa
lea
dec
inc
je
mov
popa
pop
mov
insb
jp
push
gs
aas
cmp
not
repz
and
xor
test
pop
lods
scas
ljmp
add
fs
mov
mov
scas
movsl
push
or
cmpsb
int3
mov
xor
mov
push
mov
or
jl
hlt
and
stos
test
mov
jle
int3
sbbb
sub
std
in
jmp
sub
scas
dec
ficoms
sbb
pop
push
rcr
dec
dec
or
aad
cmp
pop
and
jg
lods
jle
mov
je
ret
dec
setnp
pop
add
jne
adc
pop
fsubs
sub
arpl
pop
mov
std
xchg
sbb
shr
repz
mov
mov
mov
dec
aad
shl
fadd
jle
mov
inc
or
ret
out
shrl
roll
mov
popa
cmp
ret
mov
cmp
leave
dec
xchg
cmp
inc
xchg
in
mov
je
jno
cmp
adc
imul
pop
jle
les
xchg
xor
and
push
pop
sub
cwtl
cmp
shll
aaa
sbb
xor
jge
sbb
mov
sbb
xchg
mov
xchg
fcomp
int
and
roll
add
lcall
xor
enter
and
add
sahf
cmovnp
sub
dec
push
sahf
push
in
xchg
mov
mull
scas
inc
addr16
push
lds
mov
jo
or
stc
stos
cmpsl
subb
pop
aad
js
jne
aas
ds
in
in
inc
sbb
mov
mov
sarl
mull
jnp
imul
lods
xchg
pop
mov
je
dec
or
mov
and
ds
punpcklwd
jp
push
loop
stos
ss
fimull
dec
arpl
and
push
mov
orl
loope
out
sub
xchg
mov
cld
cmp
push
mov
sbb
ret
test
or
jno
adc
test
mov
adcb
jl
mov
icebp
jbe
mov
xchg
ficompl
jnp
push
inc
imulb
jnp
je
push
sti
lret
test
jne
rorb
out
mov
jmp
xorl
sbbb
and
aam
mov
arpl
outsb
fsts
mov
lret
or
xchg
mov
cmp
loope
int3
and
jo
jg
lea
pushf
push
xchg
scas
pop
imul
sbb
mov
push
xchg
pop
dec
dec
cltd
hlt
js
popa
in
lock
cmp
sbb
or
mov
cld
xor
jl
pop
fsubl
and
in
pop
dec
add
dec
sbb
pop
ret
mov
stos
mov
movsb
cs
addr16
push
pop
stos
inc
pop
jle
lret
inc
sub
cmp
hlt
test
mov
lods
in
imul
test
fs
ret
or
jb
das
sarl
std
cmp
push
js
stos
ja
pusha
data16
cmp
aam
cmp
sti
sarb
loopne
jmp
je
xchg
leave
mov
mov
je
mov
xchg
inc
addr16
jg
jno
fidivs
push
sbb
ret
fistpl
or
lret
pop
push
sub
dec
pushf
mov
sub
stos
js
arpl
cmpsl
pop
cmp
cld
inc
jmp
and
xchg
outsb
adc
loope
sub
xor
jno
sub
pop
mov
xor
pop
icebp
mov
inc
mov
daa
inc
adc
xchg
mov
push
mov
negl
jne
cmp
jno
icebp
ret
rorb
jo
js
pop
aaa
sbbb
jp
mov
cmp
or
pop
push
cmp
cmp
mov
or
scas
fistpl
dec
repz
add
cmc
lret
mov
mov
jno
xchg
in
fstpt
and
dec
or
cmp
push
aam
cmpsl
mov
xor
xor
and
subl
mov
dec
test
test
loop
sti
sbb
fidivrs
add
fbstp
decb
pop
ss
dec
sub
sub
ret
test
xchg
ja
scas
leave
cld
rolb
mov
incl
adc
sub
icebp
push
fdecstp
jge
and
and
cmc
push
xor
mov
outsb
fsts
xor
fdivr
adc
cmc
sub
mov
test
xchg
mov
xor
addl
leave
mov
fistl
or
dec
cltd
std
mov
lcall
sbb
sahf
imul
inc
in
stos
push
std
jecxz
pop
mov
sbb
imul
scas
mov
inc
xchg
dec
sbb
jnp
into
push
add
inc
jmp
cmp
sbb
sbb
les
sbb
cs
imul
outsb
push
dec
popa
mov
repnz
and
jg
sbbl
mov
cmp
sti
testl
cmp
mov
das
or
or
or
xlat
pop
cmp
std
adc
bound
push
fcompl
mov
jbe
jnp
or
rorl
jo
xor
jo
push
push
loopne
or
or
ror
xchg
xchg
and
mov
cs
inc
pop
std
lods
adc
adc
in
or
and
cmp
adc
push
sbb
fnstenv
pop
sbb
in
iret
mov
fwait
cmove
mov
cmpsl
pop
xorl
xchg
adc
sbb
mov
fisubl
jge
mov
xchg
and
pop
pop
ljmp
popa
es
jmp
jl
int3
addl
mov
shll
lahf
mov
push
jbe
add
xchg
or
mov
lods
mov
add
out
jb
dec
sbb
ljmp
add
pop
sbb
daa
pop
inc
sbb
mov
fcomps
fnstenv
cmpsb
jno
cld
gs
pushf
cmp
cmp
jb
jle
pop
leave
add
dec
mov
adc
inc
pop
xorb
fs
or
mov
pop
cld
jge
mov
or
fisttpl
mov
incb
adc
sub
vmulss
arpl
mov
adc
xlat
jae
jno
fwait
mov
and
mov
mov
sub
into
pop
movsb
xor
xchg
cmp
sbb
fiaddl
lods
jl,pn
adc
add
cmpsl
pop
pop
xor
inc
lock
xchg
fwait
add
mov
inc
mov
add
jl
ja
arpl
out
popf
add
in
cmp
inc
fwait
je
xchg
jp
adc
bound
push
insb
sub
xor
jns
out
shlb
sbb
push
cwtl
stos
adc
ja
stos
loope
std
ds
adc
cltd
jmp
cmp
and
ljmp
out
andb
pop
jnp
pop
sbb
xchg
xchg
lahf
mov
outsb
ds
icebp
mov
dec
pusha
add
ret
cmp
and
int3
cs
mov
into
mov
mov
mov
push
and
fldl2e
mov
test
mov
sub
jo
push
sub
pop
inc
push
mov
sahf
xor
insl
cli
adc
sub
in
dec
inc
inc
call
dec
mov
pop
jb
or
stc
sbb
jno
out
lock
addb
dec
repz
mov
test
insl
loope
or
pop
and
repnz
ret
cmpsb
cmpsl
add
add
cmc
sti
push
and
jg
sbb
cmp
mov
or
jae
int
sarl
fcompl
adc
imul
xor
pop
aas
iret
xchg
xor
pop
pop
loopne
mov
lcall
sbbl
mov
cli
lcall
xor
stc
xchg
jp
push
repz
je
inc
mov
sti
popa
shlb
push
inc
add
sahf
movsl
jo
shr
ror
test
gs
lods
cmpsl
mov
fidivs
je
out
mov
cmp
mov
ret
push
out
fnstcw
shl
pop
out
pop
xor
inc
or
aaa
cwtl
testb
dec
fs
inc
jmp
and
sub
shl
xchg
pop
xor
addr16
push
inc
pop
mov
fldenv
push
jbe
fiaddl
xor
push
icebp
sub
mov
sbb
test
fdivr
or
xor
outsb
mov
pop
ficomps
fadd
daa
inc
mov
or
mov
jnp
adc
out
fs
mov
movsb
lcall
enter
loopne
mov
jge
mov
xchg
cmp
or
pushf
lods
bound
les
fwait
in
aas
cmpsl
xchg
fidivs
pop
mov
lret
fistpll
mov
push
ss
andl
xchg
inc
lret
push
xchg
xchg
jmp
sub
orb
and
add
icebp
jmp
mov
pop
jle
fmull
add
aad
pop
and
dec
outsb
cmp
xchg
xchg
jg
es
aas
fcompl
cli
push
scas
sub
xchg
rol
ljmp
mov
add
cltd
scas
sub
mov
sbb
jecxz
mov
add
pop
jg
push
push
add
xchg
sete
xchg
cmp
dec
xchg
inc
dec
jno
scas
jno
pusha
imul
push
nop
into
fiadds
and
imull
pop
jge
dec
stos
into
dec
aam
push
cmpsl
loope
sbb
out
leave
sbb
cmp
fbld
and
push
js
out
mov
pop
je
test
adc
xchg
outsb
mov
push
and
mov
fucomi
cwtl
jmp
mov
out
mov
lret
lret
mov
cmp
popa
jb
or
or
sbb
inc
ss
mov
push
push
push
push
out
lea
jp,pn
cmp
push
cli
stos
jge
ret
push
sub
mov
push
ret
movsl
sub
jge
roll
jp
inc
xchg
hlt
sbb
or
adc
sub
cmp
ljmp
jo
jmp
or
add
mov
sub
mov
mov
or
inc
mov
aad
dec
xchg
xchg
jnp
push
mov
ss
in
jl
outsl
rcrb
cmp
mov
mov
push
xchg
mov
mov
inc
add
mov
pop
jmp
sub
cmp
fcmovu
pusha
popa
cmp
lahf
and
and
mov
test
jmp
dec
lods
lods
mov
dec
lcall
jo
mov
dec
sbb
or
push
lea
sbb
rorb
mov
cmpsl
in
mov
js
or
insb
push
ja
outsb
js
ss
repnz
fidivrs
jmp
cmpsb
jo
push
dec
jmp
jnp
cmc
repnz
call
cltd
mov
sahf
ljmp
pop
cmp
repz
arpl
ret
inc
test
jge
sti
mov
jo
ss
and
arpl
test
pushf
adc
mov
scas
movsl
cld
ja
pop
xorl
movsl
rcrl
sub
jne
cmp
jno
xchg
xor
call
xorb
mov
fcoml
pop
imul
shlb
sub
shrl
js
jg
leave
cmpsl
fs
xor
jmp
mulb
cmpsb
pusha
adc
shlb
push
arpl
mov
jp
jge
insb
adc
out
sub
jp
xor
or
or
fs
movsl
fisubl
jle
sahf
cli
add
add
lcall
mov
int3
cli
pop
mov
sbb
mov
int
je
outsb
add
jne
pop
lds
fs
pop
add
arpl
dec
sti
ret
adc
repz
sbb
xor
inc
lret
xchg
mulb
xor
jg
std
pop
xor
adc
xor
mov
cmpsb
inc
sub
ret
adc
dec
movsl
leave
es
mov
mov
mov
xlat
imul
or
adc
icebp
cmp
push
push
sub
cld
rorl
sbb
iret
in
sbb
enter
inc
mov
ficomps
cmp
popf
int3
pop
addb
std
xorb
mov
std
addl
xchg
jb
push
pop
inc
mov
lcall
mov
inc
xchg
lods
inc
dec
sub
je
and
into
repz
loope
mov
inc
daa
js
imul
out
mov
xor
and
xlat
ret
sub
dec
lcall
mov
mov
gs
call
enter
scas
mov
out
add
fisttpll
ret
aam
or
out
cmovo
pop
add
jns
jp
jo
mov
mov
mov
ret
jnp
lds
out
pop
pop
push
adc
mov
sub
int
insb
inc
sub
cmp
sub
push
sub
rcrb
add
mov
movsl
or
in
mov
lahf
sub
adc
jmp
clc
cmp
cmpsl
in
cli
mov
cmpsb
outsl
xchg
aaa
imul
stos
and
mov
cmp
call
cwtl
nop
addr16
pop
cmpsl
xor
orl
mov
in
cwtl
mov
sahf
loop
js
stos
cld
dec
mov
cli
push
mov
adc
jb
mov
add
push
lret
push
jl
aaa
lcall
xchg
and
push
cld
clc
pop
repz
or
jp
icebp
and
sub
inc
int3
fisttpl
xchg
int3
mov
pop
lret
pop
or
jae
jae
xchg
push
add
pop
inc
into
lods
movb
mov
xchg
inc
mov
insl
sti
mov
cmp
insb
add
mov
add
xchg
pop
mov
pop
ror
rclb
enter
sarl
aas
pop
or
mov
les
sub
and
xchg
sbb
cmp
repnz
loop
lods
xchg
xlat
loopne
dec
aam
enter
add
inc
jo
outsb
stos
jbe
pop
adc
mov
sub
cmp
pop
ljmp
loopne
inc
fildll
pop
xchg
pusha
in
sub
xchg
loope
repz
pop
jecxz
push
mov
sub
mov
cmpsb
lds
dec
pop
sub
ss
inc
adc
dec
push
movsb
das
inc
daa
loopne
push
filds
add
xor
call
jmp
sbb
xchg
aad
and
push
xor
les
popf
sarl
in
ljmp
push
sbb
ja
sub
sbb
adc
test
xchg
inc
push
stos
add
stc
int3
cld
sar
loope
jmp
mov
xor
in
daa
out
or
mov
int
je
arpl
sub
sahf
decb
push
cmp
cmp
inc
xchg
iret
or
xlat
shlb
loopne
xchg
push
ja
mov
cmp
mov
pop
je
bsr
pop
inc
jmp
ja
cmpsl
cmpb
mov
and
push
jae
push
mov
shlb
ljmp
arpl
rcll
mov
fcoms
mov
shlb
and
dec
stos
fldt
jle
cwtl
xchg
xor
call
out
out
insl
andb
stos
inc
and
dec
jne
mov
mov
das
out
sbb
mov
ret
mov
xor
fdivrs
lock
inc
xor
sub
xor
xchg
push
jae
lods
movntq
inc
js
sti
stos
adc
cmp
lods
insl
std
sbb
jns
or
ror
or
mov
add
cmpsb
sub
xchg
fwait
loopne
pushf
push
mov
xchg
inc
mov
loopne
and
xor
arpl
movsl
push
in
mov
mov
lret
xchg
bound
pop
loope
pushf
fisttpl
mov
ret
jle
mov
xchg
lock
imul
movsb
xchg
adc
aad
lret
push
pop
lods
outsl
js
in
lods
fdivrl
mov
adc
and
pop
ret
pop
flds
test
cltd
ficoml
fstps
cltd
stos
inc
mov
jg
es
jecxz
add
ret
mov
cltd
mov
sahf
add
sarb
test
pop
xor
fstpl
aas
jmp
jae
pop
mov
push
data16
sbb
push
dec
cmc
xor
cmp
xor
fdivs
or
shl
sbb
pop
jae
add
jnp
adc
push
test
shrl
xlat
cld
iret
lods
and
movq
adc
arpl
sub
rclb
cmp
aam
popf
out
jle
and
fs
loope
sbb
cmpb
inc
lock
xchg
adc
jmp
lahf
pushf
pop
cmp
and
pushf
repz
repz
adc
add
pop
jecxz
ret
pop
adc
dec
xchg
sub
push
jbe
jl
pop
adc
and
clc
std
inc
inc
jge
jge
push
in
movl
dec
push
push
test
pop
dec
gs
cmp
pop
xchg
pop
sbbb
or
fdivs
dec
sbb
nop
add
push
and
and
jns
add
inc
inc
and
cltd
mov
loopne
stc
call
xor
sbb
jg
in
fidivl
enter
rcrb
xchg
addl
add
jecxz
and
mov
imul
call
xor
outsb
jae
jmp
cmp
arpl
inc
push
daa
test
add
push
pushf
mov
cmpsb
leave
push
fisttpll
shlb
cld
push
add
imul
lret
push
pop
fcompl
in
fdivrp
aaa
dec
or
movsl
lret
in
mov
or
add
mov
push
cmp
aam
out
xor
test
xchg
push
jl
mov
not
xchg
jbe
lea
clc
mov
ja
inc
xchg
in
jmp
dec
xchg
pop
sbb
iret
in
js
adc
sbb
pop
ja
js
lret
loop
loop
inc
jb
push
mov
icebp
inc
xor
daa
addr16
out
mov
jp
ret
fcompl
rcrb
add
out
in
mov
repnz
mov
xchg
or
cs
insb
lret
sub
hlt
sub
lods
rol
lret
mov
sbb
adc
imul
dec
mov
or
ret
pop
push
sub
mov
push
pop
adc
pop
xchg
push
pop
stos
movsb
subb
sbb
test
jl
int3
jbe
pop
mov
ret
adc
aad
fcmovnb
adc
xor
aas
xor
pop
jg
adc
sub
sub
das
ljmp
lcall
test
pop
inc
test
leave
loope
jnp
loope
pop
cmp
and
sahf
sbb
mov
fdivrl
enter
hlt
in
dec
mov
fwait
gs
xchg
sub
adc
int
or
mov
mov
es
mov
inc
sub
in
insl
push
and
mov
mov
fs
ja
lret
gs
push
nop
push
addr16
xor
adc
enter
xchg
xchg
sub
repnz
pop
mov
repz
pop
or
divb
jno
or
adc
ja
popa
orb
mov
fsubrp
lods
outsb
aaa
xchg
test
or
and
loop
cmp
les
inc
ret
call
lock
loopne
or
mov
call
movd
ja
jp
outsl
and
mov
hlt
xlat
push
pop
mov
sbb
dec
fistpll
sub
xlat
push
lock
jne
aas
xor
testb
repnz
dec
nop
xchg
cwtl
cmc
pop
xchg
inc
jo
testb
pop
aam
or
or
stos
nop
mov
lahf
movsb
aaa
je
nop
arpl
fwait
stc
mov
xchg
iret
xchg
gs
pop
int
pop
pop
add
gs
sarb
jge
js
repnz
outsl
dec
xchg
dec
add
xor
imul
stos
or
xor
add
and
inc
mov
or
insb
mov
cmp
cwtl
aad
lahf
pop
push
inc
popa
sub
cmp
push
popf
mov
iret
insl
cltd
fwait
jbe
outsl
movsl
jno
and
je
pop
fwait
or
mov
push
scas
mov
mov
pop
add
mov
test
push
insl
jnp
push
insb
rcrl
das
icebp
shl
or
aam
lock
dec
adc
das
loope
sub
inc
cmp
popa
push
or
add
jle
out
or
clc
dec
and
jae
popa
inc
enter
pop
lret
dec
les
dec
into
pop
ljmp
aam
mov
or
scas
mov
inc
dec
or
jmp
cmp
mov
add
test
jg
incb
xchg
in
movsb
pop
pop
cwtl
mov
push
push
sbb
fbstp
mov
mov
xchg
pop
pop
mov
fwait
lahf
lds
mov
insl
sub
int3
dec
xor
repz
inc
adcl
mov
mov
fs
pop
outsb
ja
repz
lods
gs
mov
inc
push
sub
addr16
movsl
xchg
fs
xchg
xchg
leave
mov
jp
pop
pop
jno
dec
xchg
jo,pn
xrelease
mov
sub
push
shrb
cmp
fisubs
ds
test
lcall
popa
cmpsl
adc
sbb
aad
sub
ret
sbb
mov
push
xchg
pop
inc
mov
sub
shll
std
mov
dec
lea
push
pop
adc
xor
sbbl
out
or
add
int3
lods
sbb
sub
cvttps2pi
scas
hlt
mov
in
push
pop
and
dec
cld
xchg
aad
mov
push
mov
addr16
shl
pop
jl
sbb
jg
sub
cmpsl
pop
pop
sbb
rcrl
lods
inc
fcmovnb
push
movsl
pop
aas
adc
test
or
clc
xchg
xchg
std
push
inc
xchg
pop
jp
cmc
sbb
or
rol
lock
aam
xchg
jp
scas
enter
repnz
xchg
out
inc
inc
mov
rorl
jmp
mov
dec
jae
lock
das
jb
in
add
notb
enter
out
and
inc
in
cmp
lret
xchg
xchg
push
pop
xchg
loope
add
sbb
pop
call
push
andl
imul
adc
adc
lods
mov
cmpsb
dec
jecxz
ds
push
lcall
aaa
xor
icebp
cmovb
or
cmc
cmc
decb
nop
mov
xchg
leave
lea
stc
pop
inc
mov
sbb
scas
rorl
stc
inc
xchg
and
stos
inc
into
mov
add
sbb
fs
jb
adc
sbb
xor
jo
adc
dec
clc
ret
popa
jl
movntq
out
add
out
shrb
leave
sbb
sub
and
pop
xchg
mov
sub
xchg
xchg
mov
in
dec
xchg
call
es
idiv
adc
sti
rcll
xchg
aaa
test
mov
negb
out
imul
aad
inc
scas
jns
xchg
test
jecxz
or
addl
jb
dec
xchg
pop
bound
or
in
int
xlat
xchg
xor
je
xchg
movsl
orb
dec
sbb
stos
mov
sbb
xor
or
add
add
js
xchg
adc
jg
adc
stc
mov
or
shll
fwait
test
fcoms
push
jmp
push
cmp
jbe
and
xor
xchg
bound
add
sbb
data16
pop
mov
std
jae
jl
fidivrl
adc
clc
je
push
inc
add
jmp
xor
shrl
jbe
sbb
mov
popa
or
out
ret
push
pop
das
sbb
call
xchg
out
mov
jecxz
cmp
push
fildl
jge
dec
cmc
bnd
lcall
add
lods
sarl
mov
jne
or
lods
aaa
jl
or
mov
push
test
fistps
roll
pusha
add
repnz
jle
or
xchg
mov
cmc
sbb
xchg
das
xor
pop
push
js
jnp
push
and
outsl
popa
cmc
push
mov
int3
je
mov
add
xchg
lods
cmpsl
push
pop
push
xchg
hlt
mov
lock
andb
fstps
inc
xchg
imul
push
adc
outsl
mov
pop
adc
push
jmp
mov
ds
fs
mov
lea
xchg
sbbl
xchg
andb
test
adc
leave
push
jmp
scas
pop
and
inc
mov
dec
xor
jp
jae
mov
out
sbb
pusha
inc
and
push
int
in
gs
sub
add
adc
cmc
xor
dec
xchg
mov
imul
lea
jp
fiadds
mov
jmp
in
pop
push
sti
jecxz
movsb
sarl
mov
cmp
xor
add
xorl
inc
ret
test
add
bound
cwtl
scas
ret
nop
pop
push
scas
scas
into
push
pushf
mull
orb
push
lods
mov
mov
outsl
ror
adcl
in
mov
shlb
frstor
insl
cmp
nop
sub
movsb
arpl
xchg
cmpb
std
and
push
lret
cmp
push
adc
cmp
popf
mov
pushl
ss
add
push
sbb
gs
dec
stc
xchg
adc
add
push
sbb
jge
movl
cltd
les
dec
shlb
lahf
sub
jnp
dec
push
or
cs
dec
inc
dec
xor
xor
cs
adc
aas
sbb
data16
movb
stc
shlb
add
mov
lret
add
clc
mov
hlt
xchg
xor
push
negb
xor
xor
test
sbb
adc
pop
data16
sysexit
xchg
and
adc
fildl
int3
xchg
lahf
cs
mov
xchg
in
add
in
lret
cmc
in
inc
jb
jge
in
testb
fcmovbe
ds
gs
push
ljmp
xchg
in
pop
xor
lock
mov
lret
inc
dec
int3
push
rcrb
adc
insl
push
cmp
test
push
and
test
mov
enter
xor
xchg
pop
sbb
movsl
add
repnz
cwtl
fld
das
jle
add
negl
dec
iret
pushf
stc
popa
fbstp
add
sub
push
daa
fbstp
in
sub
push
out
xchg
icebp
imul
sub
popf
fdiv
gs
sbb
pop
jbe
test
js
lcall
cltd
mov
dec
and
fdivr
adc
hlt
stos
cli
push
cld
xlat
into
pop
push
ljmp
mov
mov
loope
leave
fisttpll
sub
fiaddl
cmp
or
incl
push
fiadds
xlat
mov
cmpsb
leave
inc
mov
out
das
sub
leave
aam
cltd
mov
xor
xchg
fcomp
mov
mov
add
or
ret
xchg
mov
xlat
cmc
inc
test
je
adc
jo
sti
cmp
cld
cmpsb
push
popa
sahf
mov
fwait
cmpl
xchg
pop
add
rcll
das
or
and
test
xchg
sub
ljmp
cmpsb
inc
je
mov
int3
dec
inc
or
out
outsl
mov
out
cs
inc
mov
cld
mov
mov
and
or
add
lret
add
scas
imul
dec
daa
add
or
sbb
push
add
arpl
nop
mov
cmp
stos
mov
cmpsb
inc
lcall
pop
out
and
cmp
fisttpl
or
xlat
cmp
inc
adc
adc
xor
pop
fisubrs
push
push
nop
out
mov
mov
leave
push
pop
pop
lds
addb
xchg
jle
xor
and
mov
in
aam
faddl
fistpll
mov
jbe
pop
mov
jmp
jmp
push
test
mov
and
das
pop
in
sub
mov
or
mov
sarl
cli
xor
jg
sub
roll
xor
ljmp
roll
aas
or
fadds
xor
fcomps
mov
adc
loop
xor
stos
bound
jns
pop
cmp
fsubrs
xchg
or
push
ja
das
xor
dec
inc
loop
lods
dec
cmp
js
mov
inc
add
lret
clc
data16
mov
and
sbb
cmpsb
xchg
stos
add
out
aam
lret
leave
fsubp
repz
bound
xchg
bound
and
xchg
adc
and
ret
adc
call
xchg
pop
int
fsts
mov
movsb
cltd
std
sbb
dec
mov
ret
addl
add
imul
sub
incb
pop
mov
into
adcl
shl
lods
xor
mov
inc
push
insb
adc
lock
popf
jb
push
adc
adc
cld
lods
out
mov
add
pop
lods
jle
fwait
je
neg
adc
fcmovbe
jns
jno
lea
je
xchg
cli
popf
nop
xchg
jp
sbb
fsubrs
push
imul
std
adc
lods
shll
mov
add
cltd
cmp
jp
inc
ret
push
test
mov
pop
inc
movsb
mov
mov
repz
out
push
bound
les
dec
xchg
sbb
xor
aas
sahf
mov
pop
mov
cmp
in
jmp
call
call
mov
jae
cld
scas
sbb
inc
in
xorl
xchg
loopne
cmpsl
push
lods
bound
jbe
xchg
mov
xchg
adc
sarl
add
repnz
jae
mov
std
mov
sbb
lret
push
lea
pusha
push
cmp
sub
push
gs
push
stc
das
mov
movsb
cmp
lock
lahf
pop
icebp
inc
lea
sarl
lcall
jecxz
cmpsl
jne
inc
daa
clc
shlb
repnz
filds
iret
adc
rcrb
rorl
pop
bound
lcall
lret
pop
sbb
cli
cmp
rolb
int3
subl
test
mov
jg
loopne
push
stc
push
daa
inc
sbb
xor
cs
adc
inc
out
inc
sbb
sti
xchg
cmp
loop
push
push
mov
adc
dec
push
insb
incb
and
in
mov
int
gs
or
or
lds
les
testl
inc
jbe
mov
pop
mov
add
das
popa
or
xchg
or
shlb
jmp
push
sub
inc
pushf
lahf
lret
movsb
mov
gs
cmpsb
sarl
adc
mov
repz
je
fidivrs
clc
fcompl
push
cmp
pop
cmc
sbb
push
mov
gs
jecxz
stc
xor
adc
xchg
insl
cmp
mul
sbb
push
test
jae
pop
imul
lds
and
push
inc
andb
sarb
popf
fwait
dec
in
rcr
pop
sbb
xchg
in
lock
inc
cmp
mov
ljmp
mov
add
insb
adc
dec
add
fbld
jno
dec
xchg
shrb
mov
outsl
xor
pop
stos
shll
stos
pop
scas
mov
pop
push
lret
push
idivl
inc
sub
jno
pop
test
rcl
sbb
test
cli
cmp
cmp
jge
cmc
inc
out
sub
stos
jl
lahf
loopne
je
jmp
and
inc
jo
nop
or
std
cmp
lea
sbb
inc
sahf
les
mov
mov
xchg
and
imul
jg
adc
es
lods
and
dec
or
ja
mov
sub
cmp
xchg
in
inc
movl
mov
sbb
mov
incb
mov
pusha
clc
lea
dec
movl
dec
sar
mov
pop
mov
rol
xchg
cmp
mov
add
dec
mov
ret
icebp
mov
push
mov
xchg
sahf
jmp
mov
hlt
clc
sbb
ret
dec
out
iret
fdivrp
jecxz
ja
lcall
cld
cmp
rorl
and
movsb
mov
leave
ss
pop
add
push
and
push
sbb
gs
fstl
adc
notl
iret
pop
or
mov
mov
jbe
movsb
sbb
jno
subl
cmp
push
push
cwtl
xchg
adc
jb
mov
mov
lds
lahf
inc
mov
sarb
cwtl
mov
sbb
repz
mov
xchg
into
sub
daa
jns
and
fs
dec
insb
sar
mov
add
mov
into
fmull
daa
test
ljmp
jb
jno
cmp
push
ficompl
add
sub
mov
and
dec
cmp
imul
sarb
cli
fcomip
mov
arpl
shrl
icebp
in
inc
mov
pop
dec
in
gs
mov
cmp
ljmp
divl
imul
ss
dec
mov
xor
xchg
das
adc
xlat
shll
push
push
xchg
sti
clc
rcll
test
repnz
jnp
in
rcrb
cld
repnz
loope
xor
insl
gs
aas
in
clc
dec
cld
loop
mov
in
testl
or
int3
xor
add
cmp
jno
aas
gs
jns
bound
xor
ljmp
rcrb
lds
push
loope
sub
insb
push
xor
inc
sub
je
cltd
dec
lds
mov
out
int3
inc
test
jge
dec
cmp
mov
xchg
into
xchg
and
pop
push
fstpl
into
fwait
and
xor
inc
add
xor
mov
and
adc
push
or
shll
push
push
mov
fnstcw
fs
fs
fisubl
fxch
adc
call
or
rolb
mov
xchg
in
push
inc
out
repnz
gs
mov
insb
mov
iret
pop
and
testb
xor
mov
outsb
sub
sbb
out
jmp
das
xchg
js
std
push
int3
orl
ret
sbb
das
insl
insb
lcall
mov
pop
out
xchg
bound
ds
pop
pusha
dec
mov
bound
cmp
lock
mov
mov
xchg
lds
aam
loopne
dec
push
push
xor
mov
into
adc
shr
scas
dec
lcall
mov
ss
sub
dec
aad
sti
stos
mov
and
jnp
in
stos
jecxz
cmc
xchg
insl
jp
lret
xchg
sub
mov
fldl
xchg
ret
hlt
pop
dec
in
mov
or
mov
xor
pop
dec
stos
cli
fists
into
adc
hlt
lcall
mov
pushf
pop
jg
or
imul
loope
aam
loope
mov
and
push
push
xchg
imul
shrb
rcrl
jg
inc
repz
testl
inc
subb
jnp
popf
fcmovbe
outsb
out
popf
push
adcb
lods
mov
xor
push
push
xor
pop
cmp
adc
adc
ret
push
mov
sti
mov
adc
adc
push
add
push
call
sahf
add
in
iret
adc
ja
xchg
sub
or
out
dec
cmp
mov
aas
rcrb
arpl
adc
xor
lret
add
pop
dec
xchg
hlt
mov
fadd
pusha
shll
int
dec
test
push
sub
lcall
jecxz
and
xchg
and
mov
out
orb
and
or
cltd
or
lahf
into
mov
mov
andl
mov
stos
adc
inc
dec
lods
lcall
nop
popa
mov
aam
and
inc
push
mov
fnsave
pushf
flds
sub
out
fstpt
dec
lret
je
adc
jl
push
mov
cmp
cmpsb
pop
inc
or
mov
orb
mov
xchg
xchg
pop
cmp
xor
fdivr
movsb
mov
sub
fcmovnb
mov
mov
pop
or
fst
inc
ror
dec
sub
cmp
enter
inc
fbstp
sbb
mov
int3
xlat
mov
arpl
and
mov
add
sbb
out
pop
jl
or
cmp
mov
dec
dec
insl
ljmp
xchg
loop
lods
aaa
lods
mov
add
les
mov
pushf
lret
sbb
adc
mov
cld
jb
pop
daa
shll
bound
inc
jmp
or
jmp
in
enter
insl
dec
ret
xlat
xchg
leave
pop
scas
jae
sbb
cmp
mov
jb
or
xlat
xlat
daa
mov
and
into
in
push
mov
push
adc
push
int
icebp
movsb
dec
mov
mov
leave
add
sbb
push
std
rclb
insb
cmp
adc
or
fcmovnbe
push
push
mov
jmp
push
jmp
xchg
sub
ljmp
xorl
cmp
repz
jp
sbb
repnz
mov
aaa
dec
push
adc
mov
xor
in
mov
and
push
xchg
fidivrl
dec
sarl
dec
inc
add
insb
adc
and
sbb
cs
rclb
aas
and
jp
int3
push
or
dec
cmp
push
or
or
imul
aas
clc
scas
xchg
clc
adc
pop
out
jg
mov
fidivs
xchg
mov
insb
bound
pop
xchg
push
fcmove
outsb
or
sti
add
jecxz
xchg
push
popf
scas
xor
pop
sbb
sbb
jno
pop
add
stc
fistpl
or
xchg
dec
loopne
mov
pop
lcall
mov
jge
fs
in
mov
jno
or
imul
jno
ret
mov
adc
lret
into
in
sbb
jo
outsl
sub
data16
sbb
inc
loope
int
pop
out
add
icebp
les
in
outsl
jo,pt
stos
xchg
sbb
lret
xchg
mov
adc
cwtl
pop
xchg
adc
push
in
adc
cmpsl
bnd
dec
dec
icebp
ror
sti
sti
fwait
mov
or
dec
mov
scas
mov
xchg
cld
and
sub
xlat
mov
scas
or
jne
gs
ja
pop
in
add
scas
out
inc
mov
sbb
lods
lds
loop
xchg
ret
mov
das
repz
sbbl
fcmovbe
or
mov
sub
testb
lds
xchg
int3
and
ret
push
xchg
jbe
nop
sbb
xchg
xchg
call
imul
ss
sub
xor
fsubrl
addr16
das
addr16
and
shll
cmp
push
mov
xor
std
arpl
and
push
or
sub
mov
stc
jmp
xor
cmp
pop
inc
dec
icebp
lock
pop
int3
ret
mov
int
cmpsl
mov
cli
jmp
sbb
jnp
nop
add
sbbl
fdivrl
fcmovnb
sbb
mov
jne
fwait
addr16
dec
shrl
mov
sub
fdivr
mov
fbld
jl
push
xchg
repz
jno
lcall
pushf
mov
sub
data16
sahf
cltd
xor
push
jb
sarl
jnp
out
add
push
fdivp
lds
mov
lea
jp
push
fstl
in
adc
sub
mov
in
jg
pop
outsl
adc
orb
sub
xchg
test
pop
fwait
or
xchg
pop
push
std
dec
fdiv
xlat
sub
popa
lret
mov
outsl
out
sub
sbb
aaa
jb
cvtdq2ps
jl
js
pop
scas
icebp
pextrw
or
in
cmp
cwtl
shll
jle
add
fadds
cmpb
das
gs
sbb
xor
mov
bound
int
inc
sbb
pop
jle
sub
mov
or
add
push
mov
xchg
cltd
pop
xor
lret
mov
and
inc
mov
enter
pop
xchg
fiadds
sub
loope
jo
into
inc
add
push
inc
cmc
insb
adc
es
adc
sub
nop
loop
cmc
push
mov
add
fimuls
jecxz
repz
jmp
mov
dec
jo
mov
inc
outsb
pop
push
inc
mov
sub
in
gs
and
bound
leave
sbb
pushf
push
xabort
clc
or
mov
aaa
testb
fisubl
mov
jno
test
and
and
pop
test
add
into
ficomps
xchg
xchg
push
or
inc
xor
xor
ja
xor
inc
jge
xor
push
add
sbb
in
dec
insb
stos
int3
std
fisttps
add
push
je
mov
testl
xchg
lds
stos
int3
pop
pop
mov
sub
std
ret
pop
dec
nop
jp
inc
fsubrl
pop
mov
frstor
sti
fbstp
push
adc
mov
fs
pop
ret
sbb
xchg
or
imul
fisttpll
scas
cltd
test
addr16
lods
jo
push
scas
out
xlat
fisubrl
xor
inc
int
sub
xor
bound
fucomp
dec
adc
xchg
sub
add
inc
stc
or
sub
arpl
xor
and
popf
test
test
xchg
int
jp
mov
sub
and
dec
dec
jnp
pop
dec
stc
mov
test
cmp
cmp
sub
stos
loop
shl
adc
push
shlb
adc
pop
imul
mov
cmpsb
stos
mov
outsl
fdivl
pop
out
call
ss
fmuls
jg
popf
sub
sbb
ror
sbb
or
test
pop
adc
dec
pop
pop
sahf
pop
lea
adc
mov
in
sbb
arpl
scas
out
adc
out
and
sub
xor
jp
cmpsl
jmp
stc
call
prefetchw
or
adc
addb
ret
mov
dec
mov
fisttps
in
dec
push
adc
mov
lret
mov
test
jo
mov
int
dec
enter
addl
fsubrp
jns
jo
adc
sahf
mov
and
sti
jp
jge
push
jo
ljmp
dec
scas
and
das
in
lds
nop
jns
push
mov
sbb
cmp
sbb
daa
xchg
mov
xchg
dec
insl
je
mov
loopne
es
xor
rcll
sub
pop
leavew
fistpl
and
xchg
push
popa
lret
push
and
push
in
mov
jle
mov
xchg
popf
dec
jmp
push
dec
fs
cli
cmp
inc
cmp
outsl
dec
mov
lcall
cmp
push
pop
out
mov
into
lods
shrb
gs
scas
pushf
lahf
dec
rcrb
mov
xchg
push
cmp
mov
pop
lods
arpl
cld
mov
adc
outsl
xor
and
scas
cmp
dec
fnstenv
xor
loopne
push
repnz
movsl
xor
adc
jmp
neg
enter
adc
sbb
mov
daa
mov
insb
insl
gs
mov
xor
orl
xchg
clc
jle
rcrb
mov
pop
mov
scas
jg
xor
sub
in
sbb
cmc
je
xlat
pop
jae
xor
cld
mov
out
cli
cli
jmp
loope
mov
cmc
push
jno
sbb
push
arpl
adc
sub
mov
fidivrs
pop
adc
sub
sbb
push
or
adc
xchg
mov
pusha
xchg
sub
pop
xchg
repnz
mov
jmp
imul
pop
inc
mov
or
scas
fdivl
jae
fwait
adc
lock
push
stc
dec
sub
and
push
call
xlat
clc
adc
sub
orl
roll
push
cltd
gs
out
fwait
lcall
nop
pop
pushf
add
dec
sbb
inc
add
dec
mov
movsl
jns
loop
in
xchg
rclb
in
shlb
aaa
sub
stc
lret
js
jne
loopew
stos
xchg
stc
popa
or
insl
adc
mov
aas
add
ss
push
xor
dec
adc
jmp
outsb
inc
mov
adc
add
dec
jecxz
push
jno
pop
xchg
sub
cwtl
ds
sub
sahf
les
movsl
int3
adcl
cltd
jl
jecxz
test
aas
enter
call
lea
out
xor
inc
ret
jbe
lea
les
test
sub
inc
add
sbb
outsl
pop
int
cmp
dec
jle
mov
arpl
and
push
pop
js
lods
lock
pop
cmpsl
pop
jne
xor
push
call
lret
or
mov
mov
push
sbb
ret
dec
mov
ds
imul
js
pop
pop
sub
ljmp
jns
cmp
push
stos
cmp
xchg
jp
pop
xor
dec
fidivrs
repnz
idivb
cltd
sbb
int3
xlat
popf
test
int3
stos
sbb
mov
push
stos
adcl
hlt
jecxz
fs
add
pop
or
mov
add
xor
fstpl
sahf
dec
mov
ret
imul
ja
push
xchg
fwait
jbe
xor
lock
pusha
lahf
xchg
inc
xchg
fbld
lds
es
test
mov
sahf
test
mov
pop
ja
pop
inc
jns
push
divl
mov
xchg
nop
mov
int3
push
mov
pop
out
xor
and
loop
out
ljmp
loope
stos
enter
mov
cmp
enter
adc
sub
es
cmp
mov
fstpl
sub
lea
lahf
fnstsw
dec
dec
or
arpl
jg
xchg
jbe
mov
fisubl
mov
icebp
test
or
xor
push
adc
idivb
sti
insb
sub
cmpsl
mov
test
mov
cmp
sub
sub
push
aam
leave
stos
add
pop
sti
dec
out
dec
sub
sbb
les
or
mov
xchg
bound
cs
dec
dec
xchg
aad
cmp
xchg
and
dec
bound
mov
mov
mov
scas
pushf
mov
pop
dec
mov
inc
in
arpl
or
inc
das
push
gs
out
lock
lds
repz
test
jno
ss
loope
ja
jnp
scas
bound
push
jg
xchg
jle
shl
jg
imul
and
aam
pop
fdivl
pop
das
push
push
inc
in
mov
inc
pop
adc
popf
in
mov
cmc
testl
imul
mov
xchg
pop
out
push
pop
outsb
in
add
xor
cmp
ljmp
divb
mov
notl
cmp
scas
sub
jnp
xchg
jmp
mov
fwait
sbb
mov
call
push
xchg
push
scas
jg
jb
mov
aaa
stc
push
push
out
ret
lods
mov
adc
adc
mov
push
mov
call
jae
pop
test
xchg
or
loop
add
sbb
push
inc
pop
xchg
pop
scas
fst
pop
movsl
xchg
adc
mov
or
ret
adc
aas
xchg
out
mov
fsubrl
sub
jl
in
movsb
test
add
pop
in
aam
pop
out
sub
mov
inc
rclb
fcomip
cwtl
lahf
push
jbe
call
fmul
add
ljmp
sub
testl
jo
loop
test
fists
jge
mov
sbbb
lahf
cs
call
push
jge
addr16
xchg
outsb
xchg
pop
sbbb
adc
test
pop
ds
test
mov
and
int3
loop
adc
mov
mov
iret
arpl
mov
push
jmp
sbb
xor
or
or
pop
cs
xchg
xchg
xchg
call
in
dec
fcmovnbe
test
hlt
insl
mov
push
div
add
pop
pushf
pop
cmpsl
jmp
mov
ds
hlt
mov
movsb
test
lcall
mov
push
add
int3
xchg
inc
ss
xchg
clc
ret
adc
jne
test
cmpsb
sbb
xor
test
push
loop
jns
cld
jl
inc
mov
out
dec
js
mov
cltd
aam
bswap
push
and
call
mov
fcmovnbe
inc
pop
pxor
sbb
aas
cmp
mull
icebp
jo
ret
andb
pop
aam
cmp
int3
daa
data16
fadds
aaa
in
mov
addr16
mov
imul
sub
call
or
setns
lret
inc
xchg
pushf
iret
std
dec
xchg
mov
das
xor
jl
mov
cmpsb
out
imul
pop
and
xchg
pop
es
cmp
loopne
subl
mov
shl
test
call
pop
daa
loop
outsb
pop
xor
gs
arpl
dec
test
mov
ret
out
jle
jmp
or
aaa
cmpsl
mov
lahf
gs
ret
pop
xor
sbb
mov
stc
cli
outsl
pop
leave
lcall
test
insb
pop
sbb
cmp
adc
inc
enter
adcl
fmull
jno
ror
adc
in
leave
mov
test
push
pushf
sbb
and
pop
int3
daa
pop
lods
xor
clc
iret
cld
cmpsl
hlt
jl
fwait
jo
adc
mov
mov
sub
cmp
and
sub
out
jns
aaa
cmp
cmp
repz
push
adc
add
cmp
mov
insb
mov
and
mov
clc
dec
dec
aaa
push
mov
aaa
inc
js
xchg
pop
mov
ffree
sarl
dec
or
fstps
mov
and
clc
jo
jl
ds
xorl
lea
aas
repnz
jle
clc
mov
test
adc
jg
aam
sbbl
cmpsl
or
stc
jl
mov
push
or
xor
push
or
mov
shr
push
pop
mov
lods
jnp
cli
addr16
ja
adc
push
pop
mov
jmp
jb
jp
into
mov
xchg
addl
imul
jo
mov
jge
cs
sub
cmp
loopne
arpl
adc
jno
mov
dec
sbb
adc
sub
pop
xchg
push
and
enter
shlb
cld
ljmp
mov
ss
push
jb
daa
jg
adc
bound
push
mov
lock
mov
jno
lahf
ret
je
data16
dec
cmpsb
mov
and
test
pop
scas
and
out
pop
adc
pop
in
add
mov
cmp
mov
pop
jnp
mov
and
enter
mov
loopne
aad
add
and
call
adc
sbb
test
std
jae
pop
out
mov
inc
mov
bswap
call
outsl
add
mov
mov
js
sbb
or
mov
fwait
lret
arpl
addb
es
push
loop
push
mov
xor
dec
sub
aaa
or
fbstp
inc
ljmp
clc
jnp
sarl
inc
add
lret
push
xor
leave
dec
pop
aas
jb
mov
insb
push
mov
mov
loope
mov
cmp
ja
mov
or
cmc
movsb
sub
pop
sti
sbb
inc
out
jnp
inc
das
inc
push
hlt
std
nop
mov
push
cmp
in
daa
cmp
jne
push
decb
xchg
jl
add
mov
scas
push
stos
dec
call
fidivs
cwtl
stos
iret
jecxz
das
adc
push
push
mov
fisubrl
xor
rol
outsb
mov
dec
jmp
inc
movsb
adcl
cmp
stos
enter
in
in
sbb
mov
sbbb
push
inc
push
lahf
test
jecxz
xchg
xor
pop
ja
sub
pop
push
pop
fwait
stc
out
loope
jb
test
mov
lods
xor
inc
cmpsw
imul
pop
cmc
movsb
stc
loope
mov
ss
es
jl
outsb
bound
fidivrl
or
lret
cmp
push
xor
fwait
add
inc
out
nop
mov
cmp
mov
sbbl
cwtl
sbbb
in
test
mov
cmpsb
pushf
cmp
inc
mov
add
aaa
sbb
jns
sub
inc
repnz
les
sub
fs
jae
xchg
mov
leave
xor
adc
sub
out
mov
jmp
movsb
mov
and
ljmp
dec
push
fstp
push
int3
mov
into
push
pusha
imul
dec
fidivrs
mov
fnsave
mov
fldl
xor
jle
mov
xchg
push
cs
pop
cli
mov
mov
nop
sbb
add
jmp
pop
movsl
mov
jg
fidivrl
inc
sbb
jo
lret
insl
fnstenv
cmp
sub
daa
jl
mov
adc
and
mov
das
cld
fsubrl
leave
jbe
int3
xchg
int3
pop
mov
incb
das
lea
notb
jno
test
mov
dec
fisubl
inc
mov
cmp
scas
push
sbb
mov
int
out
jb
cld
testb
adc
push
je
mov
sub
cld
mov
pushf
sub
scas
imul
adc
push
xchg
loope
mov
mov
mov
push
sahf
cmp
inc
outsb
fcompl
dec
pop
mov
jno
shll
sub
sbb
es
push
pop
iret
mov
dec
neg
out
adc
jbe
jns
andb
xor
jae
test
idivb
jne
mov
adc
or
loop
enter
sub
add
cmp
jb
in
sbb
inc
dec
push
add
mov
sbb
jns
mov
push
xor
and
data16
adc
mov
and
cmpsb
lret
mov
jle
pop
mov
xchg
sbb
rclw
clc
rcll
cld
add
xchg
inc
xchg
cmp
push
mov
rcrb
ret
mov
shlb
xchg
cwtl
int3
push
loope
rcr
test
pusha
out
add
dec
les
leave
cmpsl
imul
or
mov
aam
popa
dec
sahf
shl
into
dec
and
cwtl
pop
scas
sbb
ficomps
ficoms
out
fwait
repz
jmp
cld
add
notl
repz
decb
imul
mov
test
adc
call
das
loopne
test
stc
xor
icebp
fisubrs
fildl
mov
push
aas
loope
and
cld
aam
or
lods
jbe
out
pop
sub
shlb
insb
stos
cltd
jl
mov
mov
adc
sub
xor
adc
divb
test
pop
ss
xchg
jg
add
add
xlat
in
pop
push
sbb
and
add
or
pop
sti
movsl
mov
push
or
iret
sarb
jo
mov
push
int
cmpl
adc
loope
pop
out
sti
mov
or
arpl
pop
push
imul
loop
and
add
rcll
xchg
push
das
sub
and
dec
jle
std
leave
lds
mov
iret
jb
or
sbb
cltd
mov
xchg
out
adc
jl
mov
ret
imul
ss
pop
and
adc
out
mov
repnz
faddl
sub
or
loopne
sarl
add
incl
sti
lock
dec
inc
iret
nop
sbb
popf
les
sub
ret
xchg
stos
inc
jle
cmpsl
sbb
sbb
daa
add
pop
xor
dec
dec
jno
int3
and
mov
dec
xchg
or
in
push
jns
sti
dec
insl
mulb
fildl
in
fdiv
cmp
fwait
jae
xchg
fstpt
scas
jecxz
or
test
push
fs
das
adc
data16
jg
lret
shlb
adc
adc
or
cmpsl
adc
inc
mov
add
adc
pop
and
adc
repz
mov
enter
xorl
adc
les
cmpsl
fadds
mov
mov
aam
xchg
mov
jnp
shlb
enter
aad
mov
mov
mov
push
div
ljmp
sub
imul
sub
mov
mov
ljmp
dec
je
mov
push
mov
push
push
ror
int3
adc
push
stc
cwtl
jns
fs
push
mov
mov
pop
cs
jg
push
loope
push
movsb
mov
push
jne
mov
lahf
shrl
test
sar
push
scas
cli
sub
ljmp
loopne
push
negb
cmp
fwait
mov
enter
loop
or
and
pusha
aaa
imul
out
add
adc
imul
adc
incl
adc
daa
fistl
test
inc
test
fwait
sti
addb
or
push
nop
jp
scas
push
xchg
pop
gs
fildll
lret
adc
adcb
xor
xor
arpl
and
fnstcw
inc
pushf
shll
daa
jo
lock
nop
or
dec
ljmp
out
sub
push
or
testb
dec
pop
into
sub
jnp
or
ret
pop
lock
insb
mov
lret
push
pushf
push
mov
add
es
mov
xor
mov
int3
push
lods
lock
mov
daa
sub
inc
cmp
nop
push
dec
jmp
out
adc
sbb
in
cmp
cs
push
mov
mov
sbbl
sub
aad
dec
in
hlt
adc
xor
jmp
stos
nop
out
rcrl
jg
lret
and
lds
add
mov
mov
jge
insb
fistps
inc
jge
enter
mov
mov
inc
lods
leave
cmp
dec
out
xchg
or
sub
fisubrs
in
clc
jno
jecxz
repz
xchg
cmc
and
andl
mov
adc
sub
inc
mov
cmp
ficoml
inc
xchg
jge
sub
js
and
and
pop
shll
pop
cmp
enter
dec
inc
xor
pusha
ljmp
mov
pop
clc
stos
sbb
mov
adc
dec
or
imul
fdivrl
sbb
sub
xchg
mov
mov
repz
loop
jp
push
pop
jae
lods
scas
ss
jmp
fs
adc
and
mov
addr16
bound
push
test
iret
adc
sbb
sbb
les
dec
fs
xlat
adc
out
repz
dec
ror
ss
das
cltd
cmpsl
loopne
mov
fsubs
jl
cmp
push
mul
in
icebp
xchg
sbb
mov
test
jno
jge
enter
pusha
inc
push
push
inc
jo
xlat
mull
scas
push
inc
sub
js
dec
lods
pop
sub
mov
orb
insb
fistpll
jp
adcb
std
mov
daa
movsl
lcall
jge
mov
jno
mov
into
cmp
inc
mov
jle
loop
inc
nop
arpl
rorb
jnp
ss
sub
xchg
in
aaa
cmpsl
adcb
call
les
popf
push
mov
push
or
in
cmp
ds
inc
push
in
and
das
out
mov
sbb
sub
arpl
inc
fucomip
cmpsb
ljmp
ret
mov
lret
lret
push
pop
clc
lds
mov
jmp
xchg
mov
xchg
mov
push
mov
test
rorb
sub
ljmp
add
test
js
jmp
fcmovnbe
in
stos
shll
cmp
push
mov
aad
xchg
std
mov
mov
inc
dec
mov
dec
push
or
add
cmp
pop
mov
inc
mov
add
cmp
in
pop
faddp
pop
xchg
jecxz
xchg
and
test
xor
gs
pop
popa
loope
jecxz
add
cs
adc
js
xchg
mov
and
jle
mov
ljmp
mov
mov
lock
cmc
fcompl
xchg
dec
stc
push
jg
out
mov
rclb
nop
fistpl
mov
ds
push
rcl
jle
mov
out
inc
mov
xlat
xor
cld
sub
out
mov
mov
sub
sbb
imull
sub
dec
jne
std
orb
mov
push
ja
pushf
jle
fnsave
xor
ffreep
inc
jb
push
mov
jg
das
mov
xchg
rolb
out
sbb
dec
rcrb
les
ret
push
add
icebp
sbb
or
insl
adc
and
cmp
and
arpl
in
add
outsb
popf
outsb
sbb
pushf
int
js
push
lods
test
cmp
insb
fistps
mov
pop
inc
push
sbbb
cmp
and
cmp
ljmp
mov
cltd
insl
mov
out
pop
movsb
mov
sub
cmp
pop
out
cmp
popf
sub
inc
sbb
fisubrs
aaa
xchg
pop
mov
out
pop
xchg
adc
add
icebp
stos
xor
repz
mov
adc
mov
xlat
or
fcoml
inc
into
aad
out
pop
cmp
ffreep
hlt
mov
push
hlt
movsb
dec
testl
adc
aam
flds
ret
mov
cwtl
fxch
sbb
add
mov
in
mov
scas
sbb
pop
andb
jnp
out
jle
iret
cld
shlb
xchg
push
sub
fmul
pop
fmuls
int
arpl
data16
push
and
cmp
js
xor
xchg
in
cmovb
cwtl
or
pusha
lea
and
sub
loopne
mov
push
addr16
mov
dec
mov
pop
dec
sbb
mov
pop
movsb
scas
cmpsb
pushf
mov
mov
rcll
mov
mov
xor
sbb
sub
cld
inc
imul
outsb
xorb
fs
dec
add
add
aam
das
aas
call
je
jp
call
leave
push
cmc
sub
jmp
scas
mov
dec
fcoml
das
popa
es
lds
movsl
pop
pand
mov
inc
outsb
sbb
daa
jp
add
and
pop
sub
mov
mov
sahf
addr16
and
mov
cmpsb
outsl
outsl
xchg
in
movsl
adc
and
ret
cmpsl
sbb
sahf
sbb
and
inc
lret
loop
cltd
ds
retw
inc
push
cli
and
roll
scas
cmc
dec
jb
negl
xchg
pop
dec
cli
pop
sbb
in
inc
inc
xor
push
fsts
imul
lds
jb
jne
jno
scas
inc
dec
or
js
cmp
mov
stos
pop
inc
sbb
sbb
adc
jae
pop
loop
dec
mov
out
jecxz
mov
cmpsb
std
sbb
xchg
das
outsb
add
mov
dec
and
sbb
jl
sahf
adc
shrb
inc
scas
cs
cmpsl
or
popl
cmp
xchg
xchg
xchg
sbb
loope
inc
lods
fbld
mov
inc
pop
lds
xor
pop
mov
pop
div
cmp
fwait
push
int
jge
push
add
data16
and
mov
push
imul
hlt
mov
cmp
or
inc
jo
jl
inc
lds
es
lods
xchg
test
push
sti
movsl
xor
push
push
sub
inc
xor
lods
cwtl
stc
das
xor
movsl
bound
push
repz
insl
out
gs
ret
ret
loope
pop
xor
push
into
mov
lea
fistl
mov
ljmp
jbe
cmp
push
push
vcvtps2dq
int3
das
mov
xchg
xor
mov
pusha
jmp
xor
push
or
push
xor
scas
and
mov
sub
pop
neg
fstl
fidivs
aas
adc
fistl
sbb
movsb
mov
sbb
xchg
dec
mov
rorl
ds
insl
outsl
insb
std
rcrb
push
adcl
movsl
jg
out
cmp
lods
testl
push
outsl
and
push
aad
pop
dec
jmp
in
mov
imulb
clc
mov
push
add
push
filds
push
or
mov
fistpl
pop
xor
hlt
ljmp
fldt
mov
cmpsl
mov
sbb
dec
lods
adc
outsb
and
or
pusha
sub
mov
sbb
mov
cmp
and
add
out
jg
sub
stos
cltd
pop
movsb
pop
scas
cmp
adc
mov
inc
test
and
add
lds
das
loopne
xchg
ds
mov
push
push
mov
dec
push
fucompp
daa
inc
mov
imul
lods
push
jnp
sub
push
outsb
dec
sub
xlat
inc
cwtl
xchg
cld
cltd
cli
test
jb
iret
fistps
jmp
and
push
gs
rorl
mov
lds
test
cltd
mov
in
or
test
or
xlat
adc
xchg
mov
out
inc
jg
add
rcr
aad
lret
fs
fdivs
inc
adc
imul
add
test
push
pop
shlb
xor
xor
xor
and
scas
push
xchg
jge,pt
les
pop
nop
and
out
pop
lahf
jp
nop
fnstsw
lahf
sub
ljmp
adc
add
inc
sub
sbb
jbe
add
imull
dec
xlat
xchg
scas
ret
lahf
inc
mov
mov
xchg
push
in
aam
into
jne
sub
mov
jl
lock
in
sbb
sbb
jl
push
dec
mov
push
or
jns
fstpt
sbb
and
pop
imul
bound
fdiv
outsb
lods
or
cmp
xor
daa
lcall
adc
popa
mov
dec
jno
std
push
in
testl
loope
xlat
push
sbb
shlb
push
out
mov
push
pop
jle
mov
lcall
jbe
push
adc
sbb
push
pop
loope
add
push
es
sbb
notl
lahf
mov
sbb
inc
shll
test
and
sbb
push
das
mov
mov
int3
pop
push
sbb
pushf
test
outsb
out
mov
fldt
xlat
add
or
mov
xor
add
add
or
aad
mov
xorl
mov
jmp
out
mov
xor
shlb
mov
jl
shrl
and
push
jl
xor
or
ja
ja
push
shl
sub
sarl
lods
ljmp
xchg
lcall
fmul
sbb
aas
cmp
lcall
fbstp
or
pop
stc
movsb
int
xchg
sub
cltd
mov
push
clc
ss
aad
adc
jmp
adc
ret
xor
cmpsl
inc
scas
jle
test
je
cmp
adc
lcall
frstor
and
mov
cmp
adc
and
xorl
mov
xor
aas
mov
out
inc
mov
and
lahf
dec
ret
daa
pop
mulw
cmp
push
iret
jecxz
mov
bound
insb
xchg
ja
mov
xchg
sub
cmp
or
jp
xchg
jl
inc
rorl
mov
std
push
xchg
push
xchg
dec
adc
pop
repz
loop
outsl
adcl
pushf
pop
jnp
stos
sbb
cltd
jg
pop
stos
pop
mov
leave
addl
pop
mov
dec
cmp
mov
xor
das
jmp
jmp
mov
push
cmp
mov
jge
adc
mov
je
sbb
in
inc
and
push
mov
insl
std
mov
cmp
push
ficomps
and
andl
flds
sub
sarl
outsl
dec
xlat
inc
inc
dec
fcmove
repz
mull
pop
in
sbb
and
mov
xchg
lods
mov
sub
arpl
dec
neg
inc
cmp
and
std
sub
mov
pusha
cld
stc
sahf
lock
dec
ljmp
push
aam
loopne
aam
jl
repz
lcall
push
lret
adc
mov
pop
adc
push
sbb
push
xor
addr16
imul
mov
mov
sbb
int
push
xchg
repz
ret
imul
mov
pop
mov
orb
repz
pop
mov
mov
dec
dec
adc
and
sub
rol
loopne
hlt
xchg
sub
mov
mov
mov
outsl
int
jl
rolb
fdiv
add
icebp
cmp
ja
test
sub
fmul
push
xor
mov
out
and
inc
inc
mov
stc
lahf
xchg
inc
in
jmp
mov
xchg
adc
pop
jmp
inc
cmp
cmp
nop
xor
lahf
cmp
lds
and
mov
loope
push
popf
jle
sahf
mov
sub
imul
add
orb
loop
cmp
into
jmp
push
scas
dec
pop
ret
insl
jp
and
fs
mov
push
mov
into
into
ja
xchg
mov
xor
cltd
imull
ret
xchg
fstps
test
cmp
les
mov
adc
push
add
xchg
mov
sbb
das
ret
daa
add
dec
sub
cmp
scas
mov
fldcw
sub
xchg
cmp
mov
addl
push
fwait
push
push
mov
push
fstpt
push
cld
inc
arpl
push
popf
mov
je
movsl
adc
cmp
into
sbb
sub
cltd
inc
mov
add
es
sbb
sysexit
jns
cmp
dec
test
push
push
xor
lock
cmp
ret
mov
jmp
cmpl
sbb
int
rorb
out
sub
and
pminsw
mov
mov
mov
push
jnp
xchg
mov
jnp
xchg
jecxz
mov
outsl
inc
sub
xlat
mov
scas
dec
add
dec
and
cmp
scas
loop
leave
dec
jnp
add
icebp
in
cmp
std
das
push
mov
ret
jl
flds
mov
idivl
filds
jnp
xchg
adc
sbb
mov
xor
cld
xor
outsb
sahf
incl
dec
add
icebp
in
stc
sbb
sbb
or
scas
mov
ja
fstpt
inc
xchg
jecxz
repz
je
call
jo
movsl
xchg
xchg
push
pop
xor
push
mov
sub
fcmovbe
into
mov
ret
mov
lret
adc
fcmovu
pop
repnz
adc
xlat
cmp
idivb
test
xlat
push
add
test
mov
pushf
icebp
mov
arpl
cld
call
inc
fs
fcmovnu
ljmp
fisubs
imul
add
xlat
push
push
sbb
mov
pusha
mov
adc
clc
pop
aam
jne
lods
pop
and
out
mov
xlat
xor
cvtdq2ps
xor
dec
fwait
sub
movsb
cmp
xor
lea
xlat
outsl
push
lret
and
out
and
and
add
rcll
rcrl
xor
popf
fldenv
cmp
repz
loope
dec
and
call
xor
lock
adcl
out
cmp
cld
fcmovbe
cmp
dec
mov
mov
push
dec
aas
lods
fwait
mov
and
add
push
std
push
inc
dec
sub
stos
cmc
cmpsb
push
dec
in
mov
cld
mov
pop
pop
aad
mov
push
bnd
movsb
cmp
out
cmp
cld
inc
mov
frstor
lods
sub
lret
jp
outsb
int
jle
pop
shrd
lods
and
lret
or
xor
push
dec
addr16
fcoml
dec
push
or
or
xchg
jl
jno
daa
sbb
jmp
mov
xchg
sub
and
outsb
dec
outsl
shll
rcll
dec
jne
dec
fnstcw
repz
xchg
imul
mov
push
mov
mov
pop
mov
andb
fxch
fisubrl
scas
adc
ret
lret
jb
gs
sbb
clc
or
mov
and
sbbl
je
push
sbb
sub
cmp
add
mov
adc
mov
pop
fnstsw
rcr
int3
popf
add
mov
sub
repnz
jmp
add
jle
inc
cmp
cmp
pusha
popf
or
mov
jmp
std
mov
xchg
out
xchg
dec
inc
mov
in
cltd
mov
sub
add
int3
pop
push
dec
add
out
pop
pop
int3
pop
fcompl
outsl
fs
lea
push
repnz
aas
push
mov
scas
insl
sub
lahf
push
repnz
out
xchg
dec
pop
std
into
test
or
jb
mov
test
cmp
xchg
pop
arpl
jmp
sub
gs
imul
sbb
cmp
mov
imul
cld
sub
in
cmpsb
sub
push
outsb
dec
gs
cld
push
push
pop
push
movb
add
inc
aad
pop
test
arpl
xchg
fisubrl
lods
jbe
dec
rcrl
jbe
xchg
fnstenv
push
sub
mov
push
jnp
test
aam
clc
add
iret
popa
pop
int3
ficompl
rcrb
mov
add
push
fistps
aas
cld
pop
je
xchg
inc
idiv
sbb
inc
or
popa
jnp
les
das
popf
lds
shlb
rolb
call
cmp
push
aam
xor
aad
fmuls
lock
lcall
fs
inc
cmp
jle
aaa
dec
stos
ja
mov
fisttpl
movsb
xchg
adc
push
add
fs
adc
sbb
cmpsl
test
inc
xchg
inc
adcl
outsb
xorl
cs
adc
jo
sbb
dec
call
insl
imul
lea
cmp
ret
in
xor
pop
cmp
out
test
das
in
frstor
fcomi
and
imul
popa
call
adc
insb
int
add
and
out
push
je
fistpl
faddp
pop
loop
jmp
dec
mov
sbb
push
dec
or
ficoml
push
js
xchg
mov
gs
sub
mov
and
xchg
ret
fildl
jb
sbb
faddl
lahf
mov
mov
insl
adc
clc
cld
sub
std
adc
jge
sub
mov
lods
pop
add
fwait
push
bnd
cmpsl
mov
imul
mov
sahf
call
mov
lret
sub
aam
loop
and
insb
pop
sbb
rolb
mov
popa
out
popa
pop
mov
xor
and
or
jnp
xlat
idiv
cmp
hlt
jle
pop
or
fidivs
sbb
jbe
jbe
int3
lods
jbe
les
sbb
push
dec
inc
rclb
outsb
xor
jbe
sbb
adc
aad
addr16
or
ss
scas
jo
aaa
out
jecxz
scas
pop
jl
fisubrs
push
mov
daa
sub
and
cmp
sbb
jbe
fucomp
sbb
xchg
mov
les
push
lret
mov
and
dec
gs
pop
dec
mov
dec
inc
scas
pop
inc
jmp
mov
push
ret
fwait
jnp
es
in
outsl
mov
xlat
sbb
int
lret
cwtl
push
push
jnp
mov
les
and
mov
adc
nop
nopl
xor
mov
sub
mov
mov
fucomp
push
pop
xor
or
push
int3
aam
dec
cmpsb
cmp
xor
movsb
and
es
mov
or
add
test
dec
jbe
and
stos
dec
popl
lcall
add
ss
xchg
popa
es
fsubp
loop,pn
lret
xchg
jbe
mov
rcll
xor
not
jl
push
mov
or
cmp
mov
push
in
mov
stc
sbb
push
pop
mov
and
cmpsb
mov
icebp
or
aam
arpl
mov
jg
add
nop
or
push
shll
adc
inc
cmp
shl
cltd
fmuls
jge
test
shlb
dec
sarl
sbb
mov
lret
add
cmc
test
add
xor
ret
pop
std
out
pop
das
sbb
data16
mov
mov
daa
inc
adc
test
mov
movsl
mov
call
imul
mov
aad
and
dec
push
test
mov
xchg
mov
mov
incl
rcrl
push
aas
dec
mov
test
lock
or
fldenv
add
in
mov
inc
das
lcall
stos
mov
dec
ds
mov
pop
cmp
fstpl
sbb
pop
sub
aam
cld
hlt
ljmp
test
push
les
mov
or
jne
dec
dec
pop
std
lds
cmpsb
repz
xchg
sar
test
pop
sbb
or
xchg
cmpsl
cmp
test
stos
andl
xchg
sbb
ffree
push
mov
or
push
int
jae
lret
pop
mov
jecxz
out
push
enter
out
mov
pop
in
stos
sbb
movsb
and
lock
adc
je
mov
ss
movsb
xchg
mov
sbb
repnz
imul
sub
and
lret
orb
push
repz
fistps
push
xrelease
in
dec
push
cmpsl
sub
inc
mov
out
pop
push
xor
dec
add
scas
out
ljmp
xchg
out
out
dec
mov
shrb
cmp
dec
xor
pop
mov
faddp
mov
fdivs
dec
dec
data16
mov
ja
and
addr16
rol
jnp
nop
mov
cltd
clc
jno
mov
frstor
cmp
mov
xor
leave
adc
cmp
mov
fldl
jbe
movsb
mov
fmuls
sbb
cwtl
mov
push
mov
test
sahf
mov
mov
loope
sbb
lcall
jbe
cld
rcr
pop
imul
nop
adc
mov
pop
pop
fcoml
out
imul
or
or
sbb
xchg
aas
ret
sarb
hlt
ret
dec
cmp
ljmp
jnp
jmp
cmp
shll
xor
mov
adc
dec
mov
jns
or
or
sbb
aas
xchg
xor
push
mov
cmpsb
dec
popa
test
push
sbb
xor
xor
push
mov
inc
pop
out
test
sbb
pop
xor
mov
dec
pop
loope
mov
into
rolb
sbb
ss
sbb
mov
inc
cmp
push
mov
in
dec
and
lret
hlt
mov
push
sbb
ljmp
outsb
push
subb
js
loopne
jno
cltd
lea
std
les
rep
mov
xchg
push
xchg
enter
push
push
push
inc
mov
out
mov
mov
add
xor
aas
push
xor
pop
xchg
scas
leave
cwtl
sbb
sbb
insl
fs
repnz
pop
notl
lret
sarb
scas
sahf
pushl
sub
sbbl
fcoml
imul
jo
cmp
sbb
push
sbb
push
sbb
cmpsl
into
or
cs
xor
int
or
jmp
jge
push
fs
sbb
popa
das
outsl
nop
lahf
iret
nop
push
pop
adc
stc
xor
or
mov
clc
sub
adc
pop
jno
and
mov
int3
pop
and
inc
pop
ret
lods
adc
in
lea
push
add
jnp
aad
fistl
stos
fldl
inc
inc
mov
inc
jp
hlt
inc
adc
mov
push
insl
mov
popa
dec
dec
cmpsb
cmpsb
or
inc
int3
int
std
out
or
lret
dec
push
shll
imul
outsl
fidivrl
sti
repnz
jae
jae
cmp
popf
je
loop
xor
dec
outsb
push
xor
add
jb
xor
and
xlat
push
pushl
mov
mov
push
sbb
cmp
pop
int
mov
inc
mov
testb
out
scas
pop
adc
jmp
pushf
and
pop
or
pop
xor
and
mov
lods
sub
lods
pop
sbb
popf
jmp
stos
jo
mov
cli
ljmp
icebp
cs
popa
xchg
popa
inc
popf
and
mov
lds
pop
pusha
lds
stc
fistpl
orl
sub
je
shll
repnz
loop
pop
push
inc
mov
dec
lods
in
push
mov
and
pop
decl
icebp
adc
mov
inc
arpl
jae
add
daa
cmc
sub
adc
adc
or
bound
data16
jle
aam
punpckhdq
scas
inc
aam
insl
scas
and
add
push
add
outsb
mov
pop
fwait
or
call
mov
xor
push
sbb
or
fidivs
xchg
shll
and
jecxz
sub
addr16
out
mov
das
push
jb
shr
mov
xchg
ljmp
addr16
out
les
cltd
mov
rclb
notb
ds
subl
sbb
cmp
xor
pop
sub
mov
push
loope
mov
jg
jge
mov
or
fsts
add
push
lahf
clc
insl
lahf
xlat
push
inc
sub
mov
sub
int3
cmpsb
mov
xor
js
mov
mov
mov
cmp
and
xchg
adc
push
jg
nop
adc
lock
pop
arpl
cmp
dec
cmpsl
mov
sub
add
into
add
dec
fnstcw
aaa
sarb
or
xchg
cs
and
jmp
loope
xchg
int3
mov
xchg
in
jecxz
xchg
in
imul
xor
push
nop
dec
add
pop
dec
dec
sbb
pusha
xlat
incl
sbb
jbe
jecxz
ret
mov
aad
push
pop
fsubrl
pop
std
es
loopne
fcmovnbe
fbld
sub
mov
leave
mov
push
test
out
inc
cmp
mov
adcl
das
dec
adc
ljmp
or
jmp
outsl
push
sbb
mov
ljmp
repnz
cmpsb
add
xlat
fld
push
inc
xchg
mov
lahf
call
int3
xchg
loopne
iret
dec
fcompl
stc
fldt
popf
rclb
fabs
cmp
inc
xchg
sub
cmpsl
ss
sub
or
clc
aaa
mov
adc
jge
push
push
aas
inc
es
sti
repz
sbb
xchg
add
mov
clc
add
mov
mov
gs
cmp
cmp
pop
das
pop
mov
lock
outsb
jle
bound
and
cmp
dec
pop
pop
mov
and
pop
std
dec
cli
shll
fdivs
xor
hlt
cmp
repz
jp
mov
cmp
mov
add
jl
sbbl
or
mov
mov
sub
lret
flds
cli
jnp
pop
jo
repnz
bound
js
les
std
es
cld
test
or
cli
add
push
xchg
and
ja
jmp
cwtl
adc
cmp
into
pop
roll
lahf
js
leave
jp
xchg
push
pop
in
in
adc
in
pop
add
inc
push
mov
out
test
js
inc
hlt
inc
sub
jl
jg
aam
or
cmp
jb
sbbl
cmpsb
repnz
cld
fdivr
fidivl
shlb
inc
aad
push
push
daa
mov
jecxz
push
mov
nop
mov
aaa
inc
aad
mov
stc
fchs
adc
loope
aad
rolb
pop
loop
cld
icebp
enter
jge
xchg
sub
shlb
sub
xchg
adc
xor
movsl
mov
xor
dec
repnz
sub
mov
xchg
popf
sub
pop
je
scas
rcl
lahf
rclb
inc
cmp
and
aad
xchg
les
lret
pop
loope
mov
cmp
push
bnd
idivb
lret
jnp
lds
mov
fisubrl
add
adc
fsts
mov
ss
subl
xchg
push
rcrb
or
push
loope
mov
js
andl
lcall
or
in
out
into
test
pop
mov
hlt
push
cmp
lea
xor
pop
ret
and
in
ss
jmp
push
cmp
movsl
aas
in
jo
push
sbb
int3
and
fistl
pop
mov
sahf
add
cmp
aad
xchg
stos
mov
lods
adc
ret
mov
mov
xchg
or
je
and
das
add
pop
mov
loop
jne
push
fildl
push
push
sub
mov
or
insl
add
adc
sbb
out
ljmp
mov
xor
clc
inc
or
out
push
stc
insl
jno
lea
dec
inc
rorb
push
out
jecxz
dec
mov
xor
das
mov
and
push
movsl
xchg
enter
pop
sbb
lods
or
pop
cmpsb
sbb
ret
aad
cli
xlat
jp
push
jno
ret
xchg
popa
fildll
pop
jg
cli
jl
mov
xchg
push
mov
jmp
add
subb
push
mov
mov
in
in
add
in
pop
xor
xor
aad
loopne
out
sub
adc
sbb
mov
push
pusha
enter
push
sbb
icebp
jmp
iret
or
inc
push
jg
sarb
mov
mov
mov
or
mov
push
insb
pop
dec
sub
ja
push
mov
mov
pop
lea
push
shll
mov
dec
xor
sub
icebp
adc
push
les
rcr
ja
dec
push
pop
jle
lods
shlb
pop
fidivrs
dec
mov
cmpb
movzwl
xor
andl
dec
enter
mov
xor
pushf
lret
sti
test
out
push
outsb
or
cmp
cmp
push
ljmp
lds
xor
push
jae
or
mov
stos
or
jp
fnstcw
dec
inc
or
xor
mov
xchg
in
idivb
mov
outsl
add
jns
aad
cmp
and
hlt
mov
cmp
nop
push
aam
xchg
jo
cmc
in
mov
fwait
mov
lret
ja
dec
cmp
inc
test
fisubs
negb
xlat
mov
fcmovne
rorl
and
ljmp
mov
mov
xor
mov
les
sub
jle
add
pop
rcll
std
int3
dec
xchg
icebp
xor
jnp
jecxz
outsl
or
outsb
test
xchg
jecxz
cmp
or
jnp
jns
add
sub
data16
stos
insl
mov
scas
lahf
sub
pop
daa
pop
aad
mov
sub
loopne
rcl
xor
lcall
dec
sub
outsb
jmp
mov
in
inc
mov
sub
lret
mov
xchg
outsl
icebp
cmove
inc
aaa
enter
dec
fistpll
push
in
sti
mov
dec
fisttps
jle
scas
outsl
cld
leave
lea
push
aas
loop
jb
mov
ja
and
gs
sbb
ret
xor
sbb
and
pop
push
imul
xlat
sti
fs
sub
pop
popa
je
pop
leave
jne
or
sbb
xor
adc
xchg
xchg
in
inc
push
movsl
xorl
int
insb
dec
icebp
dec
mov
xor
mov
stc
xchg
jg
dec
xor
repnz
fucomi
fimuls
daa
out
in
push
mov
hlt
sub
dec
mov
arpl
cmpsl
je
lea
mov
fcoms
ljmp
dec
mov
icebp
scas
mov
lahf
cmc
shll
mov
repz
mov
addb
jmp
adc
iret
add
cmp
cwtl
push
push
ljmp
inc
add
lock
jnp
push
rol
test
xchg
addr16
mov
jo
jecxz
adc
push
sbb
mov
aaa
ret
pop
popf
xor
pop
lock
add
leave
jp
adc
lret
popa
roll
adc
dec
push
idivl
push
jmp
xchg
lea
dec
outsb
jmp
sbb
dec
mov
or
ja
or
popf
add
mov
scas
xchg
cmp
frstor
gs
daa
pop
fidivl
jmp
add
or
les
in
in
lea
loope
lcall
or
shl
test
xchg
test
jle
lods
int3
fnsave
add
es
jg
repz
xor
and
dec
xchg
sbb
mov
mov
icebp
pusha
xor
and
mov
pop
push
cld
push
scas
repnz
mov
xchg
push
sbb
pop
add
mov
lds
movsb
rorl
repz
xbegin
mov
insl
mov
fwait
daa
fists
dec
rcrl
cs
ret
xor
and
cmc
or
add
mov
mov
loopne
bound
ja
push
enter
sbb
mov
jne
cmp
and
fwait
stc
les
sbb
pop
jbe
lods
shl
aam
pop
cmp
mov
add
mov
jb
xor
mov
mov
push
xor
mov
lcall
or
sub
xor
add
rcr
fstpl
push
das
jno
pop
pop
loope
loope
inc
add
jno
mov
cmp
cmp
mov
insl
jge
adcl
and
mov
or
push
pop
stc
gs
shr
mov
xchg
sub
xor
add
jbe
stc
sub
adc
popa
and
data16
inc
out
jb
in
and
lods
arpl
push
insb
sbb
ret
jecxz
repz
popf
jg
add
mov
cli
xchg
mov
mov
pop
leave
push
nop
mov
sbb
aam
push
dec
lahf
push
xor
loope
decb
pushf
cld
mov
jl
ljmp
pop
dec
cmp
ror
iret
cwtl
jp
xlat
sbb
loop
sahf
dec
leave
push
jnp
jne
xchg
adc
in
jp
pop
mov
ret
imul
or
das
push
ja
xor
outsl
repnz
sbb
pop
mov
cmp
out
mov
and
mov
enter
inc
mov
fnsave
pop
int3
xchg
cmp
lret
adc
rorl
pop
andb
pop
mov
jae
movsb
scas
test
sbb
ss
or
add
pop
sbb
fsubrp
mov
and
js
cmp
mov
cmp
rsqrtps
movsb
jge
pushf
sbb
xchg
loop
adc
fidivs
sbb
addl
xchg
mov
sbb
mov
xchg
inc
popa
movsb
loope
rolb
dec
dec
push
ja
roll
xor
shrd
sub
pop
jl
insb
dec
mov
repz
sets
lret
call
mov
inc
cmp
xchg
inc
sub
mov
stos
andb
jbe
lahf
fcmovnu
aad
fstpl
pop
ja
fnop
and
enter
sub
xchg
lods
cmp
decl
cmc
adc
and
movsl
iret
scas
add
push
ret
sahf
push
std
orl
ficompl
cmpsl
call
cwtl
mov
movsb
pop
idivl
push
mov
cmpsb
adc
sub
mov
mov
data16
lea
stos
jae
es
cltd
scas
dec
aaa
aaa
and
dec
stos
imul
and
lcall
aaa
xor
inc
adc
stos
mov
mov
cmp
pop
xchg
xor
adc
mov
popa
sub
add
inc
fstps
sub
jno
aas
cmp
jae
sub
in
test
dec
mov
sbb
push
fmuls
fwait
mov
test
fstpt
sbb
leave
xorb
mov
int
jl
mov
cmpsl
clc
or
pop
lock
enter
in
push
in
pop
cmp
xorb
in
pop
jnp
loop
jb
push
jmp
jno
es
xchg
xor
rcrl
popa
mov
ficoml
inc
push
out
ss
push
jae
inc
test
into
xor
pop
pop
dec
sbb
and
add
gs
sbb
adc
or
xchg
sbb
mov
enter
jge
test
adc
test
not
psllq
mov
scas
sbb
std
cmpsb
jo
pop
push
pop
mov
cltd
mov
rcll
or
mov
jns
insl
out
add
fdivrl
sti
xor
mov
xchg
fidivrl
sbb
push
pop
les
mov
subb
in
sbb
push
sbb
rorb
aad
test
repz
lea
inc
push
cmp
in
mov
adc
push
mov
mov
sub
icebp
call
hlt
or
fdivrs
les
jae
xor
jne
hlt
aas
inc
mov
or
inc
sbb
in
sub
pop
dec
test
shr
cmp
or
push
mov
push
jo
repz
jb
add
daa
inc
das
xchg
cmpsl
xchg
mov
popa
dec
jge
shll
push
jb
sub
push
mov
in
dec
cli
jne
jne
mov
test
xchg
fsts
cmp
scas
adc
lea
icebp
pop
mov
inc
mov
pop
sbb
movsl
dec
or
xchg
inc
rorl
imul
out
leave
gs
xor
xor
or
int3
jae
fcmovu
inc
data16
mov
mov
mov
add
cwtl
dec
arpl
cmp
fwait
js
dec
inc
fldl
dec
repnz
xor
out
mov
lahf
orb
outsl
xlat
sub
scas
jle
sub
push
cmp
jl
adc
or
jb
daa
cld
jnp
mov
pusha
icebp
scas
jmp
not
dec
out
xchg
movsb
leave
pop
xchg
jb
inc
inc
and
dec
mov
mov
or
sub
add
push
or
xchg
sub
mov
movsl
add
jo
adc
arpl
and
mov
cltd
decl
les
xor
xor
mov
adc
jl
int3
jle
ficompl
mov
outsl
xchg
add
xchg
or
cmp
mov
cmp
jne
loop
cmp
mov
xor
or
mov
cmp
push
icebp
add
cmp
cltd
pop
cltd
adc
fistpll
scas
mov
fisttps
add
xor
xor
mov
cs
mov
sbb
jmp
subl
btc
jns
fcmovb
pop
daa
fildl
mov
cltd
fldcw
addr16
xchg
sti
fcomip
cltd
out
lods
mov
cmp
daa
leave
sti
sbbb
insb
scas
ja
aaa
aad
push
fdivl
les
lods
add
fisubl
xchg
sbbl
adc
jmp
pop
lret
pop
int
dec
sub
je
push
inc
cmc
loopne
sub
pop
pop
pop
and
incb
mov
xor
rcrb
movsb
and
push
push
mov
ficoml
bound
and
inc
out
ret
pop
fs
add
test
xor
add
mov
mov
cmc
mov
cmp
add
or
mov
cltd
int3
addr16
lods
cmpsb
mov
xor
pop
lret
fldcw
test
mov
xlat
lret
and
rcrb
mov
xchg
nop
enter
fnsave
mov
dec
cmp
movsl
movsb
or
cmpsl
inc
les
stos
in
cld
cmp
aas
lock
mov
and
jl
adcb
ret
movb
pop
push
mov
mov
mov
icebp
mov
sub
xchg
push
clc
shll
and
inc
sti
in
push
xor
test
cwtl
jbe
ret
scas
andb
pop
xor
xchg
inc
pusha
xchg
lahf
lahf
test
in
mov
push
cwtl
or
in
fwait
movsb
out
push
lret
decl
daa
lret
inc
fucomp
xchg
test
xor
jl
insb
mov
idiv
stc
lret
sti
iret
rol
or
int
sbb
cmp
enter
aas
cmpsl
jno
dec
inc
mov
fidivl
loop
adcb
pushf
adc
cmp
jle
cld
sub
mov
dec
les
pushf
mov
xchg
push
gs
jp
scas
push
add
jnp
scas
inc
and
mov
mov
and
in
pop
test
inc
adc
mov
add
push
pop
out
cmp
rcr
jae
jbe
pop
sbbb
inc
push
sahf
adc
leave
in
hlt
test
push
and
imul
xor
sbb
fisubrs
inc
jbe
das
ficoms
add
sbb
mov
outsl
jl
sub
scas
cltd
mov
or
and
pop
xchg
and
sbb
adc
mov
sbb
sti
outsl
push
movl
aaa
and
scas
loope
test
rcr
stc
aam
push
sub
add
mov
addr16
or
into
pop
sub
ret
xlat
lods
xchg
loopne
pushl
arpl
leave
mov
cmp
pop
pop
mov
push
sbb
jne
sahf
decb
shrl
and
adc
adc
rcrb
iret
ja
pop
or
ror
inc
es
cmpsl
jge
fstpl
mov
cltd
insb
jp
dec
cmpsb
daa
aaa
clc
add
repnz
mov
dec
fiadds
adc
clc
push
xchg
add
adc
xor
push
js
adc
push
adc
dec
lret
and
aas
mov
ljmp
fisttps
fldcw
jg
or
push
adc
add
dec
shrb
jl
in
shll
in
fsubrl
pop
aaa
fisubrl
add
sarb
movl
sahf
pushf
jbe
jno
push
push
sbb
xor
cwtl
cwtl
fcoms
mov
xor
lahf
hlt
out
lret
faddp
mov
xlat
and
pushf
insl
aad
mov
fnstcw
cltd
mov
popf
es
sub
mov
inc
std
fs
sub
jl
mov
std
and
repnz
or
inc
sbbb
jae
push
xchg
and
fcoms
jmp
mov
arpl
pop
or
movsl
nop
in
jl
or
mov
in
fimull
movsl
push
outsl
xchg
aas
std
and
mov
and
insl
inc
clc
mov
and
jp
leave
pop
pop
push
divb
test
mov
fnstcw
ret
insl
popf
adc
dec
pop
xor
fisttpl
sub
cmp
inc
in
xchg
out
sub
out
dec
push
xor
push
sub
jl
ljmp
dec
cli
lret
or
pop
xchg
mov
lock
mov
hlt
inc
sub
in
jg
or
mov
insb
push
loopew
jne
xor
clc
lcall
adc
insl
cmp
sub
sbb
lcall
mov
push
adc
popf
rorb
fiadds
arpl
mov
adc
push
sub
push
pop
pop
push
push
xchg
sub
push
pop
notb
ljmp
ja
sub
xchg
cmp
sub
leave
cmc
fisubs
popa
aad
dec
lahf
ja
pop
jns
movsb
aad
movsl
in
dec
cli
outsl
push
cli
std
jg
add
cmpb
mov
or
inc
cmc
jb
jle
jnp
adcb
mov
push
pop
pop
mov
mov
stc
test
shld
dec
in
popa
mov
cld
fmull
xchg
jne
data16
lds
dec
aaa
jae
ljmp
xor
jecxz
arpl
dec
sub
or
lret
leave
mov
mov
rcrb
xor
xor
ffreep
add
mov
orb
adc
adc
mov
sub
sub
push
mov
jne
rcrl
rol
mov
cmp
pop
xchg
jbe
repnz
shlb
cmp
out
sbb
mov
xchg
lods
xchg
push
adc
enter
push
xchg
test
jl
sub
sub
lcall
shl
add
jno
mov
arpl
xor
push
cs
sbbl
dec
mov
adc
xor
sti
mov
out
push
jecxz
pop
jbe
add
add
jg
movsl
data16
les
aam
adc
lret
mov
and
rorb
ss
inc
shl
xlat
ret
jge
sub
xchg
xchg
lds
les
mov
sbb
add
jmp
jns
imul
test
adc
andb
inc
movsl
mov
add
mov
or
xlat
nop
or
outsb
pop
insl
push
xor
hlt
xchg
pop
mov
sub
push
mov
sbb
pop
pop
mov
mov
xchg
cmp
jo
sub
jno
das
and
pop
ret
adc
push
cs
int3
das
inc
mov
push
cli
loop
pop
lock
mov
aas
pop
mov
inc
in
repnz
ja
jae
and
lret
out
ret
lds
icebp
mov
sub
cmp
imul
stc
add
aas
sarl
fidivl
lret
inc
jno
repz
sub
leave
inc
mov
andb
adc
scas
push
inc
push
leave
mov
push
adc
mov
int
pop
mov
sub
jbe
adc
iret
mov
sarb
outsl
pop
cmp
cmp
jb
xor
jb
mov
mov
loope
or
insb
into
adc
xchg
cwtl
fcmove
in
aam
add
and
lock
mov
idivl
test
push
push
push
add
mov
mov
sub
mov
inc
fnstcw
or
lds
inc
sub
iret
mov
das
imul
add
cmpsl
and
es
xchg
xchg
outsl
adc
jnp
scas
or
xorb
ds
leave
xchg
adc
ljmp
push
pop
pushf
dec
xchg
sbb
sbb
sbb
sbb
pop
or
push
sbb
xor
add
mov
pop
aas
mov
hlt
pop
or
xor
or
pop
sbb
test
sbb
sub
mov
daa
mov
in
loopne
clc
sbb
sbb
stos
xor
cltd
dec
sbb
mov
sbb
cmpsb
bound
mov
lret
and
fdivrs
mov
lods
mov
inc
arpl
scas
dec
mulb
mov
mov
daa
push
ficomps
enter
shll
addb
in
cmc
dec
dec
icebp
pusha
mov
xor
xor
movsb
and
sub
popl
mov
ja
push
dec
pop
dec
xchg
leave
adc
sbb
ret
sbb
or
push
or
jl
fistpl
xor
mov
repnz
cmp
aam
test
clc
ljmp
xor
aam
add
lea
pop
cmp
cmp
test
dec
and
sahf
inc
arpl
icebp
sub
add
xchg
inc
xchg
insb
xor
ficoms
divb
es
push
test
sti
stc
mov
xchg
iret
and
lea
decl
lret
add
cmp
jbe
pop
or
inc
jp
pop
ds
jo
pop
bound
dec
xchg
xchg
ljmp
loop
scas
sbb
daa
cmp
scas
push
sub
sub
xor
push
jbe
mov
outsb
fnsave
xor
shl
push
scas
push
in
dec
mov
xor
cmp
out
daa
push
out
push
sub
cmc
hlt
clc
sbb
mov
aad
mov
jns
aad
push
or
push
movsl
sub
rclb
jbe
fdivp
dec
ja
loop
jle
push
mov
mov
cld
jp
fmuls
out
or
push
pop
mov
inc
mov
xor
jne
adc
fiaddl
push
popf
cmp
or
iret
dec
mov
cmpsb
lcall
pop
sbb
dec
imull
add
std
inc
pop
push
sub
addb
xor
fldt
adc
nop
sbb
add
pushf
iret
repz
xchg
pop
loope
mov
ret
mov
and
and
and
imul
push
mov
mov
jb
mov
rcr
stc
imul
pushf
xchg
dec
aam
mov
adc
in
int
aad
ret
ret
mov
vunpcklps
iret
fildll
or
cltd
incl
shll
dec
push
jecxz
mov
iret
sbb
lahf
cmp
in
in
outsb
pop
les
lahf
dec
test
jmp
aas
cmpsb
pop
xor
pop
push
mov
lea
push
sub
xchg
push
adc
lea
inc
mov
xor
movsl
xor
add
andl
push
xchg
in
mov
sub
je
xor
fdivl
mov
pop
pop
sub
cmp
xor
insl
test
movl
movsb
jecxz
imul
popf
les
sub
frstor
sub
jmp
jg
je
add
into
xchg
pop
xlat
pop
jmp
xchg
and
sub
ja
pop
and
xchg
cltd
push
jne
or
ss
jne
sbb
daa
sbb
xchg
push
shrb
pop
dec
inc
mov
cs
outsb
mov
jge
aad
pop
xchg
inc
pop
aam
enter
sarl
cmp
addr16
xchg
pop
jp
ljmp
jle
dec
cltd
xor
rcrb
movsl
ja
fdivs
mov
adc
cld
je
in
mov
inc
out
das
test
hlt
or
cmp
xor
mov
push
rorl
icebp
out
fcmovne
mov
inc
loopnew
adc
sbb
push
dec
or
cmp
push
movsb
mov
mov
addr16
add
iret
imul
sub
dec
scas
imul
xlat
adc
aaa
inc
sub
jno
dec
jno
stc
call
mov
cmp
jbe
mov
cld
mov
fs
xchg
push
inc
les
sar
xchg
push
lock
ret
xchg
repnz
or
aad
xor
cwtl
movsl
cmc
add
fistpll
jg
or
call
and
arpl
sti
test
pop
mov
scas
sub
out
movsb
cld
sub
mov
jo
pop
push
dec
xchg
adcb
dec
ja
sub
popf
mov
negl
add
dec
mov
pusha
xchg
dec
cld
insl
mov
mov
test
data16
mov
or
sub
decl
test
insl
xor
and
je
jmp
inc
pop
imul
mov
stc
rcrl
sbb
ds
dec
adc
mov
faddl
or
xchg
dec
mov
loope
and
in
fdivl
sbb
jp
cmp
fcmovbe
pop
xor
sbb
dec
andl
sbb
push
add
in
enter
mov
inc
mov
jbe
mov
sub
push
movsl
jbe
mov
clc
inc
xor
stos
push
adc
aas
vpcmpgtb
push
nop
or
pop
sbb
jae
pop
jb
test
shlb
jle
jne
dec
push
push
or
movaps
add
mov
xchg
xor
and
outsl
push
cmp
aas
jnp
hlt
pop
push
jno
push
sbb
xchg
mov
jnp
xchg
push
jge
add
aad
sti
in
or
xor
in
pminsw
subl
aad
add
push
cmpsb
arpl
bound
xor
lock
fistl
cmp
sub
push
jg
or
adc
or
dec
mov
mov
icebp
xchg
inc
xor
repz
and
push
sbb
mov
test
add
push
add
insb
fildll
push
add
sbb
xor
addr16
js
aam
inc
jl
mov
xchg
ret
repnz
fistpl
push
lea
push
dec
add
mov
jbe
cmp
insl
mov
scas
aaa
add
lret
scas
loopne
nop
jae
lret
dec
inc
decl
cmpsb
xchg
pop
push
inc
shrb
das
out
mov
sub
pop
fs
into
jne
mov
mov
insb
mov
in
ret
les
daa
lea
sbb
mov
arpl
lcall
stos
lods
hlt
in
adc
cld
inc
mov
xorb
or
or
cmc
mov
pop
inc
push
pushf
adcb
xor
ss
fsincos
mov
sarb
xor
cmp
cmp
popa
xor
es
lock
mov
jae
jle
es
mov
dec
aas
pop
or
or
pop
jb
hlt
add
and
pusha
gs
roll
inc
cmp
push
cld
mov
xchg
aaa
loop
mov
dec
inc
sahf
push
add
jo
insb
cmp
push
xor
call
push
vpaddsw
outsb
jl
mov
scas
jbe
push
pushf
inc
fmul
xor
jns
fwait
scas
sbb
pop
mov
addb
or
xlat
fincstp
jmp
mov
pop
int3
mov
mov
pop
fadds
adc
out
repz
mov
movsb
loop
je
mov
mov
xorb
adc
pop
dec
mov
insl
mov
int3
cmp
sbb
cmc
add
fstpl
insl
ret
inc
loope
lcall
cmpsb
lods
push
sbb
pop
push
sbb
filds
stos
lahf
loopne
lods
mov
adc
loop
arpl
push
insl
cmp
mov
mov
dec
arpl
mov
cmp
outsb
adc
icebp
sbb
inc
bound
inc
mov
dec
and
into
xor
jmp
or
insb
jmp
xchg
adc
xor
and
dec
jne
sbb
shlb
shl
sbb
jle
ss
jo
cmpsb
sarl
xchg
add
xchg
es
int3
push
addr16
dec
add
or
je
push
int
xor
xlat
orl
and
loope
loope
mov
daa
xor
mov
sbbl
mov
lcall
cmp
mov
hlt
inc
mov
sub
ret
and
lret
stos
dec
jnp
xor
mov
inc
jb
loope
stos
inc
stos
cmp
mov
nop
jl
dec
or
int
fcoms
pop
in
xchg
mov
xchg
leave
les
out
lods
xchg
pop
sarl
add
fstps
cli
pop
rclb
mov
lret
add
cmpsb
jp
push
push
fimuls
xor
scas
push
clc
sbb
cltd
daa
insl
std
fldenv
push
imul
faddl
mov
mov
lret
sbb
aam
pop
int
mov
cmp
mov
push
orb
pop
xchg
or
pop
xor
sbbl
xchg
inc
arpl
jle
add
push
mov
and
sub
mov
sub
fmuls
lods
lods
test
movsb
dec
mov
push
xchg
mov
out
lea
jecxz
mov
es
adcl
cld
and
and
popa
lcall
push
mov
rol
mov
int
push
or
mov
xor
jmp
stos
loope
jo
aad
sub
psadbw
pop
xor
loopne
icebp
xor
stos
aad
mov
shrb
and
jl
fstp
fistpll
les
in
mov
ljmp
push
shlb
aas
iret
xchg
sbb
fadds
fdivs
cwtl
cmp
sti
push
push
inc
mov
or
adc
xor
and
mov
mov
mov
sbb
jge
adc
lret
mov
mov
adc
mov
stos
lock
cmpsb
jp
cli
out
mov
xchg
push
pusha
imul
mov
sbbl
test
rcll
xchg
ret
repnz
jb
outsl
mov
mov
dec
imul
xor
mov
popa
mov
pop
loope
das
mov
xor
push
jmp
sub
lods
lahf
fnstenv
mov
cmp
and
stos
mov
sti
pop
or
dec
and
icebp
or
in
orb
stos
mov
inc
or
rcr
test
inc
hlt
jb
xlat
or
lds
sbb
nop
arpl
pop
rorb
jg
fisttpl
clc
push
test
ret
stos
dec
or
or
rorl
ud1
push
loop
or
mov
xchg
xchg
ljmp
inc
dec
xor
mov
adc
aam
push
popl
push
iret
sbbl
pushf
ret
adc
or
jns
add
cld
aas
cmpb
sahf
orl
out
mov
sbb
cld
call
jmp
mov
sub
bound
mov
mov
inc
enter
mov
fldcw
xchg
or
push
mov
mov
mov
mov
xchg
outsl
dec
sbb
adc
xor
cwtl
adc
lahf
les
gs
mov
lahf
adc
in
outsl
leave
jns
or
push
push
pop
cmc
cmpsl
xor
cld
loopne
test
dec
inc
fld
jl
adc
add
xor
mov
outsb
dec
or
shll
cmp
pop
addr16
fsubrl
lods
shlb
cwtl
aam
jg
mov
pop
and
sbb
mov
add
mov
push
sbb
jmp
mov
cmp
in
mov
sbb
aas
stc
push
or
fcoms
scas
in
mov
xor
ss
aam
mov
mov
test
leave
scas
addl
cmp
fstl
sub
pusha
sub
add
mov
pushf
fistps
xor
fwait
test
xor
cs
adc
cwtl
push
pop
xchg
cmp
stos
daa
in
add
cmc
add
sbb
xchg
fwait
push
ret
sub
adc
adc
out
cwtl
stos
cwtl
stos
sub
adc
jae
popf
cmp
stos
or
fst
or
jg
in
int
shlb
insb
fbld
call
popl
mov
jle
stc
jae
and
test
fdivl
fcomp
xor
push
or
and
push
or
cld
ljmp
outsb
ds
xchg
iret
add
cmp
xchg
cmp
jno
jnp
inc
push
cmp
ret
movsl
and
adc
xor
xor
jg
es
loopne
ret
shr
fcmovnbe
xrelease
xchg
ds
sbb
pop
push
inc
or
mov
fmul
popf
or
jno
dec
mov
jns
cmp
shll
inc
mov
xor
sbb
loope
and
jl
sbb
shll
sub
fptan
fnstenv
jmp
mov
jmp
jp
cld
mov
xchg
out
inc
bound
mov
mov
int3
fisubrl
sti
fcomps
push
insb
test
mov
mov
cltd
mov
fsub
push
pushf
lcall
sbb
xor
pop
dec
and
stos
xchg
jbe
sahf
adc
hlt
mul
xor
hlt
jb
out
pop
in
cmp
lret
xlat
pop
insb
push
in
loopne
jno
insw
aad
mov
cld
enter
mov
dec
sub
movsb
jecxz
add
mov
or
fldt
adc
and
push
add
mov
aaa
adc
pop
dec
ljmp
test
lret
sub
lcall
fs
adc
rcrl
hlt
and
jne
movsb
dec
lods
inc
jo
or
adcl
mov
inc
sbb
test
stos
sub
push
imul
into
push
jl
xor
dec
bnd
jb
fcmove
xchg
shll
sbb
movsl
jo
adc
mov
aas
inc
dec
orl
sbb
cmc
pop
dec
mov
push
test
stos
pop
sar
xor
xchg
mov
mov
adc
or
mov
lods
pshufw
cltd
xor
test
mov
inc
mov
lea
adc
adc
das
dec
lock
imul
pop
fs
push
mov
mov
or
imul
bound
fcoms
jp
or
or
mov
mov
sub
jp
push
inc
adc
stc
mov
xchg
test
mov
lock
in
leave
push
sbb
jno
cmp
sbb
rcrb
int3
mov
mov
cmp
lods
jae
cmp
clc
and
repz
das
into
or
daa
dec
aaa
js
mov
dec
dec
jbe
in
into
sbb
sahf
scas
fld
fisubs
aam
xchg
fidivrl
cld
and
insb
sub
mov
mov
sub
push
xchg
jb
jmp
cltd
lock
xchg
xchg
pop
lahf
mov
push
push
or
movsl
arpl
mov
test
sub
popl
push
cmp
rcll
clc
pop
xchg
push
inc
pop
add
int
pushf
shlb
popf
cmp
xchg
jbe
jl
adc
cltd
cmc
push
jnp
sti
in
leave
xlat
lea
je,pn
push
push
rcrl
movsl
xor
jns
sbb
jns
stc
scas
add
add
dec
cs
or
cmpsl
dec
inc
sbb
sbb
dec
inc
adc
fisubs
sahf
leave
outsl
sahf
mov
add
ljmp
push
rdpmc
cmp
fmull
xchg
sub
fcoms
enter
cltd
and
add
pop
jb
loop
int
jmp
push
add
imul
and
cmp
inc
or
lret
mov
fsts
inc
loopne
cmovns
and
out
dec
xor
cmp
out
dec
test
mov
and
add
xor
push
repz
add
xor
sub
test
imul
add
mov
jle
push
xchg
or
push
lahf
adc
cmc
push
mov
mov
out
add
mov
xchg
repz
inc
adc
sbb
mov
cmc
lcall
lret
fdiv
out
mov
imul
sbb
mov
cmpsb
pop
adc
popf
nop
cld
cmpsb
and
aas
or
rcrl
lds
jl
adc
rolb
movsl
sbb
cmpsl
sub
xchg
xor
pushf
fildll
rolb
mov
inc
int3
ds
shrl
mov
pop
and
sti
mov
mov
add
pop
jge
rclb
push
sbbb
dec
or
in
rorb
repnz
pop
dec
stos
das
inc
test
js
xchg
sub
daa
pop
xorb
leave
xchg
mov
inc
sahf
setns
lahf
mov
push
add
jnp
lea
pop
push
and
jle
sbb
mov
lcall
inc
and
pop
jle
jbe
ret
add
or
xchg
xchg
sbb
out
fstl
movsl
cmp
arpl
fbstp
push
or
icebp
pop
sbb
add
dec
push
int3
push
cmp
add
pop
daa
cmpb
sub
adc
cs
cld
mov
cmp
int3
push
mov
orl
shlb
mov
mov
and
push
nop
xor
push
dec
imulb
inc
ljmp
cli
popf
jnp
or
inc
divl
cmc
test
mov
iret
cmp
clc
aaa
and
sti
and
mov
cmp
outsl
test
push
icebp
cmp
push
int
jbe
and
inc
jns
xchg
inc
pop
daa
pushf
mov
lods
cmp
bound
lods
mov
sub
orl
movsb
xchg
mov
xor
outsl
add
sbb
inc
dec
lock
sbb
jne
xor
das
mov
imul
movsb
leave
mov
lahf
into
cmpsb
xor
loop
data16
mov
cltd
enter
xchg
xlat
push
mov
les
imul
out
fs
push
fs
pushf
xchg
add
push
inc
xchg
popl
cwtl
fwait
and
sbbl
cmp
movsl
scas
xchg
cmpsb
out
subb
ljmp
lret
stos
mov
or
adcb
pop
popa
stos
jae
push
xchg
jbe
andl
aas
lea
repz
sub
fisubs
pop
pop
lods
out
pop
sbb
and
jbe
lds
test
mov
pop
cmp
in
push
into
adc
mov
js,pn
dec
sub
cmp
lods
je
addl
dec
imul
je
in
divb
xchg
dec
add
je
sub
in
loope
and
int3
and
shl
inc
pop
push
in
jne
popa
mov
pop
lds
stc
aas
inc
or
push
dec
inc
sahf
cli
cmp
cld
loope,pn
lret
add
mov
jmp
jecxz
scas
pop
arpl
hlt
pand
sbb
shlb
lcall
lcall
pop
sahf
cmp
cs
movsb
lods
shrl
xchg
test
mov
shll
jbe
fcoms
mov
arpl
fs
shll
mov
into
adc
dec
mov
sbb
imul
roll
aad
pop
sub
mov
repz
mov
and
push
and
pushf
into
pop
les
lret
loopne
loop
pop
pop
add
decb
sub
sub
dec
inc
popa
mov
sti
push
in
test
or
and
test
das
cltd
shlb
push
loop
cmpb
mov
jp
out
clc
int
and
orb
push
int
aad
test
nop
and
inc
into
imul
mov
jp
pushf
and
sub
ss
and
xlat
in
jae
out
out
mov
outsl
scas
imul
sbb
fisubl
mov
repz
aas
push
in
mov
mov
pop
sbb
rorl
ss
fidivrs
mov
std
pop
dec
mov
ret
and
lret
sbb
out
roll
out
ja
mov
jnp
jnp
pop
outsb
sub
pop
cmpsb
mov
jecxz
test
xchg
lret
pop
int
test
ja
mov
or
mov
or
cmc
movsb
cltd
out
add
adc
js
or
mov
cmp
jl
outsl
and
out
cltd
rorb
icebp
sub
mov
pop
jne
add
push
mov
mov
xchg
inc
xchg
lds
mov
add
add
jbe
ret
int3
mov
add
adcl
xor
sub
testl
xchg
add
aas
inc
inc
ror
rclb
add
mov
repz
cmpsb
cs
add
inc
pop
pop
xchg
ljmp
aaa
ret
mov
outsl
loope
ss
or
insb
rorb
sbb
call
pop
push
xchg
fcmovne
dec
imul
xchg
inc
or
dec
pop
clc
fisubrs
es
adc
enter
xor
roll
push
pop
test
push
movsl
in
pop
outsl
add
xchg
lahf
xchg
or
popf
loopne
add
mov
roll
lahf
aas
add
mov
movsl
test
rclb
je
mov
adc
roll
mov
and
pop
xlat
and
xchg
sarb
add
into
pop
mov
cmp
push
mov
push
xchg
push
mov
xchg
jecxz
push
dec
das
mov
sbb
fcmovnb
push
push
lea
xlat
xor
mov
inc
pushf
sub
popf
arpl
inc
icebp
sti
mov
inc
scas
cmp
les
sbb
cld
push
lcall
adc
andb
out
in
dec
push
shlb
xchg
mov
jecxz
fldenv
xchg
in
adc
cmp
xchg
inc
and
into
clc
lahf
add
sarl
popf
cmp
or
dec
loope
repz
call
mov
dec
orb
mov
pop
movsb
ret
mov
xlat
lret
out
repnz
jnp
mov
or
adc
mov
pop
fcmovu
jbe
cpuid
stos
sti
adc
fisttpll
pop
mov
push
cli
cmpsl
push
cmpsb
int
mov
ss
xor
les
adc
rcrb
shrb
arpl
cs
pop
push
sbb
push
shrl
test
jae
jns
ds
mov
add
lods
sahf
and
jno
or
daa
fdivs
pop
dec
xor
stos
pushf
inc
xchg
lcall
cmp
fstp
test
mov
dec
push
add
inc
dec
pushf
ss
movsb
jns
pushf
or
jne
mov
cmp
cli
dec
push
rol
nop
dec
mov
andl
xchg
and
js
mov
pop
add
inc
mov
test
mov
sbb
xchg
pop
sbb
adc
nop
jecxz
pop
or
jns
das
xor
test
xchg
cmp
mov
push
inc
mov
xor
sub
mov
push
mov
cmp
out
adc
bound
ret
mov
ficoms
in
mov
pushf
je
arpl
lcall
out
je
lds
xor
cwtl
lcall
xor
xor
pop
lods
fidivrl
in
lds
or
cmp
push
cltd
rcrl
xchg
pop
in
sbb
sbb
negl
mov
sub
sbb
fcmovb
or
or
popf
fcoml
pop
pop
cmc
and
mov
mov
sets
pop
mov
fistps
pop
test
icebp
icebp
daa
mov
aam
and
adcl
sub
or
mov
push
push
adc
adc
cmp
mov
orl
cmp
lahf
jnp
or
sbb
imul
inc
jp
lods
xor
inc
adc
sar
dec
popf
or
ljmp
add
push
push
jne
lea
mov
push
popf
jmp
sbb
jo
in
push
pop
in
movsl
leave
sbb
fadds
lods
or
mov
cmpsb
popa
jg
iret
mov
inc
and
movsb
inc
dec
xchg
dec
lret
cmc
xchg
mov
inc
xchg
dec
cmp
inc
or
jo
pusha
aam
gs
pop
iret
jns
lret
sub
xlat
push
insb
fwait
add
cs
xchg
push
xor
dec
pop
pop
push
pop
lock
add
lret
mov
jmp
push
mov
jg
and
jns
cmpsl
aas
and
lods
aaa
mov
leave
sub
cltd
fstpl
ljmp
sahf
mov
xchg
arpl
cmp
jecxz
pop
jg
sub
and
lahf
mov
or
out
lods
inc
push
adc
and
imul
pop
mov
sub
popf
adc
pusha
adc
jp
jns
cwtl
and
xchg
mov
fmul
popa
xchg
add
pusha
and
mov
sbb
mov
mov
clc
aam
arpl
aam
inc
das
push
mov
lret
out
call
lea
push
hlt
addl
cmp
push
add
and
pop
add
mov
cmp
jne
inc
jl
lods
stos
or
pop
dec
sahf
imul
adc
loop
in
sub
es
iret
mov
test
ds
dec
adc
jo
xchg
shrb
xchg
rolb
lea
sub
popa
jmp
or
push
push
jecxz
lret
popf
pop
mov
ss
dec
in
adc
das
push
dec
outsb
inc
sub
mov
shll
int
out
adc
mov
mov
sahf
push
xchg
inc
iret
xor
cmpsb
mov
fsts
xchg
test
call
add
jno
std
loop
push
jns
es
or
sbb
std
pop
pop
pusha
xor
mov
mov
repnz
push
dec
mov
in
pusha
xor
bound
inc
sub
test
ret
iret
es
dec
push
adc
aaa
jmp
iret
cmp
loop
and
inc
mov
xlat
les
out
pop
push
aam
pop
mov
or
and
add
rorl
mov
and
or
pushf
pop
dec
and
inc
in
inc
hlt
inc
icebp
dec
mov
dec
subl
push
clc
jb
daa
mov
sub
jb
pop
or
xor
xchg
aas
or
xchg
adc
popa
sub
mov
rcrw
cmp
dec
jns
mov
testl
lahf
and
leave
xor
cmpb
cltd
pop
daa
sub
fildll
je
pop
fs
cmp
inc
scas
xchg
in
jnp
or
inc
add
jnp
lea
inc
lret
out
rcr
es
cmpsl
dec
ja
lret
out
ja
lahf
jle
mov
cmp
fs
scas
mov
stos
mov
clc
jge
popf
jge
cmp
pop
xlat
lret
testb
fimuls
dec
in
pop
sahf
xchg
bound
leave
add
jb
inc
ds
push
cmp
pop
gs
push
shl
sbb
lret
cmp
fidivl
add
jmp
jg
loop
cmp
xor
ss
aaa
mov
leave
lcall
mov
stos
cli
or
mov
xchg
fsubrl
or
mov
jle
sbb
dec
sbb
subl
mov
adc
test
jge
lock
jmp
pop
mov
insb
cmpsl
icebp
fcoml
pusha
call
loopne
or
lcall
nop
test
xor
xor
in
imul
clc
push
loope
fists
pop
inc
loop
pop
jbe
filds
pop
and
cmpsl
push
cmp
clc
mov
mov
add
hlt
xchg
xor
cmp
cmpsb
popf
sbb
pop
cmp
xchg
jns
adc
lods
jle
push
dec
jne
and
cmp
sbb
in
lods
xchg
movsl
mov
les
push
jae
movsl
adc
mov
sub
and
jmp
mov
lods
push
stos
push
pop
cmp
mov
inc
adc
test
mov
dec
lock
inc
imul
pusha
adc
addr16
out
clc
mov
clc
mov
shlb
cmc
insl
add
daa
jo
data16
jmp
mov
pop
shll
inc
in
xor
sbb
mov
or
lods
mov
enter
mov
and
data16
cmpsb
imulb
lcall
sahf
push
cli
hlt
dec
push
or
movsb
mov
sub
out
popf
iret
sub
stos
push
lea
lcall
mov
jbe
addr16
inc
push
push
icebp
int
mov
and
dec
and
in
shlb
push
pop
mov
sbb
dec
jne
ljmp
fadds
faddl
pop
xor
mov
pushf
xchg
xor
std
dec
andb
mov
cmp
test
add
sbb
call
xor
and
fistpll
clc
sub
dec
and
inc
or
insb
ret
sarb
je
push
insl
repnz
cltd
mov
or
inc
lret
adcb
sbb
icebp
fs
and
jae
xchg
mov
mov
pop
dec
xlat
popa
out
cmp
pusha
stos
fsubr
fs
in
xor
test
scas
cmpsb
int
iret
push
push
mov
call
gs
xor
xchg
call
xchg
jle
gs
negl
nop
int3
incl
xor
add
mov
mov
in
adcl
push
push
arpl
scas
pusha
mov
jo
pop
cwtl
push
out
cmpsl
jnp
dec
mov
cmc
xchg
in
or
je
call
pop
jne
xchg
mov
jle
loope
mov
push
sahf
addb
or
fs
cmp
mov
cmpb
mov
gs
mov
jecxz
xchg
ret
sbb
cmpl
je
inc
cwtl
mov
jl
outsb
addr16
aas
sub
ds
mov
loope
pop
mov
int
push
das
dec
xchg
push
in
in
les
lock
xor
jmp
cmp
pushf
int
push
jbe
out
mov
push
lret
xchg
xchg
loop
fwait
int3
mov
cmpsb
pop
sub
loopne
cmp
push
into
cli
stc
std
jmp
fidivs
jbe
pop
mov
mov
addr16
adc
dec
test
imul
xchg
inc
cmp
mov
or
mov
adc
out
add
ljmp
sbb
pushf
into
cmpb
add
dec
decl
jbe
mov
dec
dec
jmp
xchg
popf
enter
and
ficoml
movsb
xchg
sti
fists
iret
xchg
outsl
je
in
or
in
mov
enter
or
pop
fldenv
cld
and
out
enter
mov
in
aam
mov
mov
lock
cwtl
jno
inc
fcoml
dec
int
xchg
or
jb
mov
mov
xbegin
sbb
dec
rcrb
lods
dec
inc
ljmp
jmp
adc
aas
fildl
ds
add
cmp
sub
sbb
add
gs
cmp
mov
stc
pop
jb
daa
mov
adc
xchg
pop
mov
add
mov
mov
stc
je
xchg
ljmp
pop
mov
sub
sbbl
mov
xchg
enter
or
adc
mov
dec
stos
inc
pop
mov
adc
jp
cli
sbbb
push
adc
mov
mov
and
or
or
outsl
daa
mull
mov
repnz
hlt
cmp
rorb
je
push
dec
xor
int3
sub
sub
dec
push
into
cmpsl
fsubs
popf
push
push
jns
aam
or
push
push
mov
loope
or
xchg
cmp
lea
adc
mov
push
shrl
add
mov
inc
aaa
scas
into
and
movsb
inc
or
push
fs
dec
xlat
in
ljmp
jo,pn
in
rclb
mov
dec
arpl
gs
test
add
push
push
fldenv
orb
pop
xor
insl
jmp
mov
inc
inc
sub
sbb
jae
daa
sahf
aas
into
inc
shll
jmp
int
aam
add
cmpsb
cld
test
adc
stos
xchg
imul
aas
loop
push
sbb
lahf
std
cld
sbb
clc
les
or
loop
inc
scas
xlat
add
xor
inc
jbe
jne
xchg
or
ret
or
inc
mov
fistpll
scas
nop
cmp
ret
add
mov
or
push
inc
xor
aas
mov
add
lahf
test
pushf
xor
jbe
or
insb
out
pop
jecxz
dec
jo
inc
adc
jp
inc
add
inc
push
push
cmp
or
scas
in
test
xor
rol
sti
cmpsl
fbstp
cmp
je
mov
add
cmp
xor
js
fdivrl
clc
mov
inc
ffreep
xchg
stos
pushf
adc
sbbl
daa
pop
inc
mov
pop
adc
xlat
cmp
arpl
xor
sub
push
sti
aas
in
xor
mov
sub
adc
inc
sub
cmp
xor
shll
stos
push
cmp
mov
mov
std
push
push
cwtl
out
dec
cli
jmp
push
cli
dec
ja
pusha
lods
fisubrs
rcrl
es
sbb
push
cmc
and
out
fstl
jno
xor
cmp
sub
and
dec
int3
fs
leave
jne
pop
aas
mov
add
push
xchg
mov
dec
cwtl
sbb
and
cltd
xchg
dec
jbe
and
push
jo
cwtl
into
add
adc
insl
xchg
pop
fsubr
int3
les
std
push
inc
pop
push
sbb
leave
hlt
cmp
cmp
jecxz
fildl
leave
sub
out
push
out
movsl
or
imul
ja
insl
aam
insb
inc
push
and
xchg
adc
loop
popf
loopne
dec
cmp
dec
arpl
xor
push
stos
lret
add
in
enter
fadds
pop
mov
xchg
dec
or
loope
out
enter
lahf
mov
add
ss
decb
ds
sub
inc
xor
dec
add
or
mov
sub
cmp
adcl
sarl
addr16
sbb
loop
lods
loopne
jnp
mov
out
cmp
xor
out
dec
xchg
imul
mov
mov
call
add
ljmp
push
lods
push
mov
pop
fstl
jbe
out
rcl
sbb
jg
jecxz
mov
mov
lods
xchg
push
and
jnp
sbb
cmp
out
jle
bound
leave
sub
cmp
int
and
sahf
dec
adc
mov
stos
jmp
sub
es
add
and
nop
sub
inc
inc
add
add
loop
jg
mov
test
clc
test
call
inc
jb
std
shrl
fwait
sbb
cmpb
mov
sbb
push
mov
ret
push
add
lcall
icebp
loope
jne
xor
push
insb
rcll
xor
fcmove
test
test
lret
dec
and
daa
fisubl
adc
outsb
cmp
insl
testb
xor
push
jnp
shrb
push
out
mov
xchg
ret
iret
mov
fisttps
push
xchg
push
and
jnp
jno
jb
scas
pop
sub
pop
lcall
rcl
lds
fdivrl
push
push
xor
popa
inc
daa
repnz
add
sbb
push
fimull
ss
adcl
inc
inc
push
std
mov
pop
lret
dec
imul
test
loopne
mov
xchg
lret
data16
dec
push
sahf
sbb
or
jns,pt
add
jge
cli
in
lahf
loopne
sbb
mov
and
cmp
loopne
das
sbb
cltd
imul
insl
adc
movsb
ret
push
rcr
xchg
push
lea
ja
jmp
jns
cmp
loop
inc
insb
imul
fsubl
icebp
movsb
gs
in
xor
movsl
push
je
mov
push
jae
in
mov
inc
fists
push
and
sahf
je
xor
je
je
adc
orl
cli
xchg
insl
push
pop
dec
mov
mov
in
das
jbe
and
push
pop
aas
lret
repz
or
adc
or
fstpt
jne
popf
cmpsb
inc
loope
push
cmp
xchg
pusha
mov
jnp
jp
jl
jno
lret
cvttps2pi
pop
sbb
push
inc
movlps
pop
je
mov
aas
pop
add
lahf
fdivrl
add
test
mov
das
add
pop
cs
jmp
push
cmp
cmpsb
out
mov
cmpsl
jecxz
fwait
sahf
sub
pop
gs
sub
bound
mov
std
lahf
pop
int
scas
ret
out
cltd
lcall
lret
fwait
or
jg
pop
sbb
cmp
scas
and
mov
mov
data16
xor
and
sahf
cmp
add
in
pop
xchg
jo
out
inc
adc
imul
icebp
xlat
mov
lods
add
push
xor
inc
push
in
mov
fildl
push
cmpsb
stos
hlt
mov
std
repnz
mov
and
mov
or
push
mov
cmp
sbb
into
enter
lods
fnsave
sahf
xor
push
pop
mov
cmp
lock
arpl
push
add
sub
pusha
jecxz
sub
push
mov
pop
in
arpl
jae
fcmovbe
push
xchg
xchg
outsl
sub
in
notl
in
push
xor
and
and
xchg
inc
out
mov
pop
xor
or
mov
loope
outsb
lds
stc
gs
aam
add
js
xor
out
lret
repz
inc
std
push
lock
mov
imul
xchg
add
push
in
xor
jb
sbb
out
xor
rcrb
xor
jge
addb
lods
inc
adc
pop
jne
xchg
jnp
pop
adc
fwait
hlt
jo
push
mov
addr16
push
adc
stos
test
stos
mov
gs
add
lods
test
in
in
sbb
cmp
cmp
cltd
dec
loope
aam
mov
xchg
and
xor
psrad
inc
pop
lea
les
ret
sbb
xchg
sbb
push
lods
add
pop
jl
adc
mov
popa
aas
push
jno
sbb
je
pop
xor
adc
clc
mov
lret
and
loopne
arpl
xor
sbb
call
add
mov
dec
jb
aam
movsl
mov
pop
ret
lock
lods
and
lret
dec
imul
lods
ret
pop
pop
lret
je
xchg
xor
ljmp
dec
xchg
sub
es
lahf
mov
jno
dec
add
daa
mov
sub
pop
dec
adc
dec
sub
and
jl
and
test
push
and
lods
mov
dec
pop
lds
jg
or
out
inc
aas
xor
cli
lds
adc
sub
pop
jbe
subb
into
adc
daa
push
call
pop
insb
cmc
enter
push
adc
fnstsw
push
and
push
out
add
lcall
mov
cmp
iret
and
mov
in
xlat
xchg
js
daa
push
push
scas
jp
xor
daa
fcomps
pop
cmp
andl
in
inc
sub
add
test
jecxz
out
mov
cmp
cmp
mov
shll
sbb
rcrl
add
fmuls
dec
scas
repz
push
lret
add
or
xor
push
inc
mov
test
adc
ja
push
jbe,pn
jnp
mov
jne
lret
aas
pop
xlat
out
mov
and
testb
mov
cmp
dec
gs
or
aam
push
rclb
xchg
shrl
popf
jbe
and
and
leave
mov
std
aad
mov
mov
data16
call
jns
je
push
test
cmp
xor
fcomip
mov
loop
scas
push
jg
scas
cmpsb
adc
add
xor
xorb
fbld
js
repnz
les
sub
in
fstpt
cld
outsl
enter
inc
and
call
ja
dec
xor
sahf
mov
inc
jo
jo
xor
adc
xor
jmp
sti
or
out
mov
rcll
leave
xor
in
clc
cmp
xor
rcl
mov
das
push
dec
mov
lods
arpl
xchg
sti
xchg
cltd
repz
mov
lret
or
out
movsl
mov
add
gs
xchg
sub
xchg
jle
loope
stos
mov
mov
int3
mov
scas
lahf
jo
repnz
mov
add
sbb
testb
ss
sub
or
jae
cli
lods
mov
or
mov
add
lret
bound
or
mov
outsb
adcb
sti
ret
fnstsw
adc
andl
add
leave
xchg
imul
fadds
imul
pop
mov
mov
cmp
mov
inc
mov
hlt
aam
adc
xorl
sub
lods
push
das
adc
lock
leave
in
mov
sbb
adc
push
adc
add
add
aad
cs
stc
sub
out
or
cmpl
jo
pop
dec
xor
xchg
cmp
das
inc
imul
fucom
xchg
jle
mov
mov
mov
and
jb
add
pop
mov
mov
cs
test
shlb
dec
inc
xchg
call
mov
imul
pop
pop
movsl
cmp
les
lds
inc
jne
and
dec
mov
or
lahf
in
lds
std
adc
or
sub
mov
mov
pop
jecxz
fstl
rcrl
push
mov
cs
mov
out
popf
sbb
shrb
sub
das
push
xchg
cli
adc
pop
ds
push
lods
cwtl
insb
gs
arpl
in
dec
sahf
adc
popl
out
sti
mov
js
psubb
mov
cli
jge
dec
or
es
js
dec
inc
sbb
jo
sub
leave
adc
adc
test
push
sub
push
aam
pop
cmpsl
mov
xchg
add
fldcw
call
in
inc
mov
push
movups
aaa
in
adcl
xor
fs
inc
popf
lret
dec
mov
add
xor
xor
inc
outsl
push
lock
bound
mov
cmpsb
mov
test
or
cmp
adcl
mov
sub
cmp
ret
aad
dec
nop
out
adc
add
test
xchg
daa
adc
push
test
rolb
addr16
punpcklwd
sub
or
inc
xchg
pop
repnz
or
inc
popa
lds
lea
popl
inc
std
and
pop
pop
push
or
mov
addb
inc
xchg
cmp
add
mov
test
pop
mov
shr
icebp
xchg
pop
lahf
rcll
into
pop
jbe
scas
push
xlat
outsb
hlt
pop
jp
imul
push
popa
mov
jle
mov
sub
jnp
or
fadds
push
ret
mov
xor
addr16
addr16
outsl
movl
mov
dec
mov
rcrl
aas
adc
mov
jae
enter
push
das
aas
add
or
cmp
fcomi
xchg
mov
dec
push
pop
mov
ss
xchg
sbb
sub
enter
pop
pop
cmp
popa
bound
sar
sub
stos
xchg
mov
daa
out
fistpll
scas
sbb
inc
inc
pusha
test
xor
fs
mov
push
mov
jo
leave
out
icebp
test
cmc
nop
jg
jge
fwait
loopne
scas
stc
stos
in
lea
lret
and
icebp
flds
cmpsb
inc
jmp
jb
or
rcrl
pop
movl
push
aad
cmp
adcl
add
mov
fs
jne
dec
mov
cmp
jl
fwait
xchg
cwtl
mov
cmp
xor
shr
or
insl
push
inc
xchg
xchg
out
mov
mov
jne
mov
fistl
cltd
ret
cmpsb
and
inc
inc
imul
fdivrl
cli
sbb
je
jnp
loopne
aas
cwtl
push
in
xchg
stos
sub
call
aaa
xchg
adc
and
ss
lods
dec
add
push
inc
sub
repnz
sbb
cmp
mov
sbb
ja
and
jbe
decb
adc
xchg
jge
es
cmp
sbb
addr16
pusha
add
xchg
iret
leave
adc
jecxz
out
jbe
sarl
xor
and
ds
sbb
xchg
xor
inc
out
pop
jg
push
out
in
hlt
push
out
xchg
mov
jmp
jo
imul
sti
xor
movsl
mov
mov
std
sbb
jnp
adc
add
sbb
imul
stc
mov
ret
jb
mov
and
imul
aad
or
inc
xchg
fmuls
push
ret
je
out
push
popa
jge
xchg
or
stos
cmp
popa
push
pop
adc
mov
or
ret
adc
fnstcw
out
out
loop
ret
push
mov
mov
repz
mov
iret
push
cmp
orl
dec
dec
ror
fdivrs
sar
sub
xchg
add
dec
into
lcall
jb
int
int
cmp
xlat
fbstp
daa
cmpsl
inc
jecxz
lea
popa
into
out
aad
stos
popf
inc
out
jae
jns
fsubl
xchg
cs
sub
lahf
cs
lds
xchg
test
cmp
ret
outsb
sub
lcall
clc
pop
cmp
jmp
dec
pusha
xor
loopne
mov
xor
mov
or
into
jmp
bound
pop
fdivrs
cmp
stos
dec
jg
rcrl
mov
xor
sti
mov
pop
sbb
or
lock
stos
add
lock
pop
pop
mov
push
dec
shlb
lock
pop
cltd
adc
insl
outsl
mov
outsl
dec
das
sub
push
push
lret
nop
dec
clc
into
loope
adc
xlat
jg
mov
leave
int
mov
jae
lcall
daa
jno
jb
adc
sub
mov
and
jae
xchg
fcmovu
pop
add
and
add
jno
insl
mov
fcoms
push
and
es
sbb
sti
xchg
cmp
in
or
sub
xchg
dec
ja
mov
xchg
push
clc
xchg
mov
push
push
arpl
inc
and
lret
push
dec
push
mov
shll
xor
aam
adc
dec
mov
mov
mov
addl
iret
mov
test
push
test
or
repz
and
repnz
push
mov
sbb
or
popa
int3
mov
lret
es
or
icebp
in
xchg
mov
incb
push
mov
cmc
mov
jno
jl
cld
jmp
popa
sub
mov
dec
pop
inc
mov
mov
xchg
and
ljmp
push
call
addr16
negl
mov
sbb
xchg
xor
push
inc
je
mov
cmp
fwait
jo
xor
call
adcl
notb
xchg
mov
mov
fnstsw
mov
pop
mov
sub
inc
mov
mov
test
mov
inc
or
push
icebp
jns
fcoms
push
jbe
outsb
jmp
fdivl
cmp
in
push
test
xor
cmp
adc
dec
xor
adc
outsl
lea
jae
gs
lea
cmp
ljmp
xchg
push
fbld
cmpsb
stos
jno
leave
mov
mov
xchg
jecxz
jge
cmpsb
jo
push
dec
mov
mov
inc
stc
add
pop
and
pop
lods
shll
popa
push
shlb
pop
pop
jb
pop
fdivr
repz
sahf
scas
jb
out
popa
cmp
sub
and
iret
mov
imul
lock
out
jae
jno
lea
adc
arpl
popa
mov
xchg
cmp
lcall
dec
das
rolb
cli
adc
xchg
mov
popf
loope
pop
xchg
icebp
xor
fmuls
movsb
and
fiaddl
fstl
xorb
push
jns
je
dec
xchg
inc
pusha
add
push
or
scas
out
inc
fisubrl
mov
and
in
sbb
les
push
test
add
sub
fwait
xchg
out
inc
mov
das
hlt
scas
mov
fcmovbe
push
xchg
pusha
int
mov
lcall
and
mov
shl
mov
dec
clc
jnp
mov
pop
xchg
in
jns
inc
test
mov
jbe
popf
mov
jb
inc
je
std
mov
or
xlat
cmp
push
cmpb
and
movsb
adc
xor
or
insl
lahf
inc
dec
movsl
mov
test
imull
mov
sbb
cmp
cmp
ficoms
dec
inc
sub
int
inc
xchg
in
shlb
xchg
pop
in
rolb
xchg
sub
movsl
cmc
jbe
out
cmp
daa
mov
test
pop
fnstcw
insl
xchg
mov
mov
aad
jge
jne
int
adc
xchg
test
xchg
into
int
insb
xchg
mov
xor
icebp
push
jle
adc
lods
mov
adc
jne
leave
mov
es
int
dec
cld
or
push
imul
jbe
repnz
pop
jne
repnz
push
stos
cmp
dec
popf
xor
add
imul
dec
inc
ja
xor
lods
sbb
jg
mov
sub
movsb
mov
dec
xor
inc
xchg
das
sahf
call
stos
mov
rcll
sbb
into
aad
xor
roll
and
fdivs
xchg
mov
scas
cmp
jo
add
fsubrl
shlb
repz
push
xchg
mov
out
dec
cmp
lcall
movsb
aas
jle
stos
ret
inc
lods
int3
push
add
push
mov
dec
rorb
cs
mov
cmp
mov
dec
iret
and
loopne
and
adc
mov
loope
or
add
or
pop
jle
int3
cmp
xor
stos
or
rcrl
xor
xchg
movsb
sbb
imul
test
sbb
lea
and
or
movsb
stos
xor
push
fiadds
in
ret
rcrb
adc
xchg
cltd
loop
add
mov
xor
arpl
push
xchg
sbb
pop
loope
mov
repnz
cli
lahf
dec
call
mov
dec
sbbl
fadds
out
sbb
mov
push
loopne
dec
adc
in
movsb
and
cmp
pop
and
sub
lds
mov
nop
lcall
sar
cs
movsl
bound
sub
sbb
aas
mov
sbb
std
in
xlat
xchg
jp
push
enter
mov
xor
adc
leave
jp
xor
mov
mov
ljmp
mov
xchg
xor
mov
imul
cld
xchg
add
out
dec
cmpsl
stos
daa
popa
ds
daa
sub
jle
sahf
stc
int3
jge
add
imul
lret
xchg
mov
dec
fildll
pop
in
addr16
pop
xchg
mov
mov
icebp
out
hlt
inc
pop
icebp
sarl
adc
mov
dec
push
jmp
dec
cld
scas
sbb
xchg
cs
fisttpl
fcoml
das
outsl
scas
sub
sub
insb
jbe
jo
mov
jp
fwait
mov
push
cmc
push
cltd
adc
dec
xorb
lret
push
push
add
mov
inc
and
xchg
sbb
mov
adc
mov
and
ljmp
push
sbb
lahf
mov
ljmp
and
cmp
mov
pop
mov
jbe
mov
ljmp
mov
push
or
cli
inc
movzbl
fdivs
int
add
push
mov
dec
mov
iret
sub
xor
inc
dec
mov
rorl
mov
add
adc
mov
aam
jae
es
pop
ret
imul
out
popf
out
add
sub
ljmp
add
sbb
enter
in
lahf
scas
lods
jp
inc
mov
jl
enter
ret
sbb
xor
jge
stos
push
ss
stos
mov
stos
outsl
push
mov
push
ljmp
lods
jb
cmp
scas
mov
pop
movsl
jnp
adc
push
inc
mov
dec
sub
out
addr16
test
and
adc
test
mov
insb
loop
push
je
xchg
dec
xor
aaa
test
mov
or
test
aad
dec
xchg
cmpsb
xchg
aas
imul
and
pop
xchg
movsl
push
test
nop
fcompp
sbb
jno
mov
jg
pushf
cld
mov
sbb
out
push
rcll
push
xor
inc
lret
fistpll
pop
movsb
lret
or
je
jg
dec
lret
push
std
hlt
push
inc
sti
dec
inc
dec
movsl
into
inc
sub
mov
jle
push
in
idivl
adc
sub
push
xchg
adc
add
lahf
push
outsb
push
xlat
sbb
mov
adc
xchg
sbb
adc
sbb
lock
pop
xchg
scas
subb
and
pop
aas
mov
gs
xchg
lea
in
loope
icebp
add
cld
test
jmp
loope
mov
insb
dec
aam
pop
fdivl
popa
xor
loop
xchg
jne
mov
jp
rcr
and
adc
lahf
pop
sti
lods
daa
cmp
repz
mov
lahf
cltd
popa
cmp
push
fstl
iret
mov
sbb
pop
inc
mov
sub
cltd
scas
mov
sub
add
jge
mov
cld
mov
je
mov
push
fimuls
xchg
dec
in
sbb
jne
dec
lahf
scas
mov
call
xor
push
pop
scas
dec
out
jle
mov
xlat
repz
push
mov
daa
add
jo
call
push
es
daa
add
pop
outsl
mov
xor
jb
mov
popf
xchg
shlb
inc
lret
xchg
int3
inc
cmpsb
bound
stos
cld
ja
std
adcb
pop
aas
add
pusha
sbb
arpl
mov
or
and
sbb
push
mov
xor
adc
mov
adc
or
mov
adc
jl
lret
cli
push
xor
cwtl
push
pop
movsb
loopne
shll
xor
mov
xchg
outsl
cld
rcl
dec
out
std
in
jle
pushf
stos
mov
jge
shl
lock
jns
mov
pop
adc
lods
aam
or
xchg
mov
lret
add
or
out
hlt
das
pushf
aaa
sub
stc
adcb
in
sbb
mov
shll
sahf
test
xchg
xlat
inc
pop
pop
std
repz
inc
add
inc
leave
push
inc
aaa
aad
cltd
pop
or
and
or
dec
je
push
or
cmp
sub
pop
xchg
shr
jmp
adc
inc
sbb
cld
add
stos
repz
xchg
subb
jo
dec
int3
sub
sbb
xor
dec
neg
ljmp
jns
mov
data16
xor
repz
and
adc
das
cmc
jno
push
xbegin
out
in
cmp
add
int
or
std
daa
cmp
mov
test
add
mov
mov
test
push
outsb
sub
inc
iret
scas
mov
imul
stos
xorb
out
shrl
fdiv
js
dec
xor
fidivl
cmp
mov
push
imul
hlt
jge
lock
shrb
jp
sbb
inc
adc
or
mov
mov
fadds
daa
mov
xorb
adc
int3
arpl
aad
mov
mov
or
cmp
popa
mov
iret
popf
mov
fcomip
pop
mov
in
jae
xchg
jnp
movsb
shll
sub
sbbb
jo
mov
inc
xchg
xchg
pushf
into
jle
and
daa
negl
push
xor
pushl
add
jge
push
push
xchg
cmpsl
inc
inc
mov
lods
dec
push
sbb
ret
fimuls
sub
test
repnz
ficomps
adc
jg
sub
sbb
out
movsb
cmpsl
inc
rolb
test
fsub
imul
insl
scas
ja
sub
clc
push
and
mov
insl
fisubs
xchg
xlat
cli
andl
xor
dec
ss
fcoms
rcr
push
lcall
addr16
cmpsb
fnstcw
mulb
push
notl
insl
mov
jle
cmpsb
mov
test
pop
inc
pop
test
sbb
sub
fsubl
repnz
nop
aaa
adc
jae
jns
xchg
orl
lods
dec
pusha
mov
aam
mov
arpl
cltd
lock
or
sub
shrb
jae
and
sub
mov
push
or
adc
repz
and
sbb
pop
fistps
push
shlb
jno
mov
sub
mov
dec
mov
loop
and
movsl
push
push
xor
js
inc
js
sbb
adc
mov
cwtl
out
xchg
add
mov
pop
shl
shll
cli
lea
imul
mov
mov
cmp
es
ja
mov
inc
sub
scas
cmc
jb
popa
push
xor
std
adc
sbb
out
jae
arpl
dec
cmp
addr16
jb
inc
pusha
std
mov
push
inc
filds
cltd
or
cwtl
call
adc
mov
xorb
dec
lcall
out
ljmp
sub
push
addr16
mov
inc
mov
jne
daa
movsb
icebp
sbb
cld
and
and
stos
rorl
inc
sbb
cmp
in
arpl
stos
adc
mov
mov
std
push
int
or
pop
cmpsl
cmp
push
adcb
mov
jl
loope
iret
mov
xchg
stos
test
lcall
jb
push
mov
rcr
adc
xchg
aam
sub
lret
push
lahf
popa
test
push
jge
mov
std
inc
push
lret
sub
mov
mov
aaa
into
push
out
inc
lods
test
scas
out
pop
xor
push
push
push
es
scas
setb
inc
test
xchg
sbb
pop
mov
dec
int
push
sbb
cmp
ja
clc
mov
push
mov
push
mov
loope
bound
call
push
orb
add
xchg
outsl
repz
cmp
call
pop
jbe
ret
mov
notl
loopne
xor
cmpsb
lret
adc
ja
cmp
sub
and
push
xchg
lret
xor
mov
fidivrl
outsb
jg
stos
cmp
jmp
int3
daa
notb
add
pop
jle
out
fidivrl
mov
xchg
movsb
jno
aam
fwait
ja
mov
xor
xor
mov
xchg
inc
mov
adc
xor
out
popf
nop
cmc
lods
fiaddl
mov
mov
fwait
jp
loope
sbb
mov
mov
into
bnd
xor
xchg
dec
mov
dec
aas
addr16
loopne
cld
sub
mov
xchg
dec
dec
clc
stos
jno
rorl
bound
xchg
mov
sbb
lret
sbb
das
jnp
mov
loope
jnp
pop
gs
aam
or
push
push
pushf
mov
sub
out
lahf
cmpsl
aad
movsb
dec
jno
in
push
mov
lcall
mov
inc
jno
mov
jne
movsl
pop
xor
aad
lods
mov
fmul
or
les
adc
cmp
push
jno
movsb
shrl
clc
arpl
cmp
or
xor
cmp
xor
dec
cmp
iret
mov
shl
ds
mov
in
mov
icebp
mov
aas
cmpsl
jo
outsb
or
xlat
out
stc
xchg
shl
imul
repnz
dec
mov
fistpl
inc
out
lods
dec
jecxz
stos
leave
push
imul
nop
xor
arpl
frstor
loope
incl
add
imul
movsl
mov
dec
mov
pop
out
xor
subb
orl
jns
nopl
sub
hlt
cmp
adc
movsl
mov
aaa
mov
sbbb
cwtl
fisttps
push
imul
ror
test
andb
icebp
mov
ret
adc
sbb
pop
lea
add
jae
and
out
xchg
fstl
adc
inc
and
popf
shlb
push
std
nop
fiaddl
xchg
lock
aaa
lock
dec
fcoml
test
rolb
and
or
stos
lahf
ret
adc
add
mov
jl
jl
testb
insl
rorb
repnz
xlat
jecxz
add
adc
insb
xchg
test
and
xchg
movsl
nop
mov
or
jp
xchg
repnz
das
sbb
test
sarl
jg
dec
aad
or
rcl
lods
jb
in
jo
add
ss
dec
pop
mov
add
xchg
iret
pusha
shl
ljmp
add
jo
sbb
jmp
cli
add
mov
adc
mov
out
and
push
movsl
in
enter
mov
dec
dec
xchg
xchg
dec
loop
mov
pop
out
push
adc
add
xchg
inc
sbb
sbb
pop
xor
stos
add
inc
xchg
mov
out
mov
lock
les
jg
cwtl
fnsave
lret
push
pop
ds
movsl
xor
call
in
xor
hlt
sbb
pop
pop
enter
or
mov
icebp
incb
mov
cmovo
iret
imul
xchg
push
rorl
in
jg
lahf
cwtl
push
mov
inc
and
sub
int3
and
arpl
test
cwtl
cmp
cwtl
xor
inc
or
sahf
imul
scas
sub
in
xor
mov
mov
ss
push
mov
xor
loop
push
mov
sbbl
bound
in
cmp
cld
lcall
pop
cmpsb
enter
aas
or
bound
mov
aam
adc
sub
movsb
or
xor
cltd
and
jl
mov
in
xor
movsb
rclb
jbe
xchg
in
cmpsb
aad
add
push
jge
jecxz
jp
mov
sahf
add
mov
scas
pusha
cmpsb
popf
lahf
add
not
ret
cmp
pop
dec
aas
std
mov
lret
sub
mov
mov
push
mov
clc
in
push
testl
daa
lods
xor
insb
setb
sub
push
les
subl
iret
pop
jno
out
xchg
dec
cwtl
dec
or
lcall
jo
movsl
and
inc
int
sub
dec
iret
mov
dec
loopne
mov
or
mov
add
ror
shrb
imul
aad
jae
jno
stos
int
movsb
xchg
push
pop
mov
movsb
je
or
jbe
mov
pop
aam
mov
rcl
and
mov
mov
mov
ljmp
in
addr16
push
mov
xchg
pop
and
out
cli
cltd
roll
xor
dec
fcmovu
sbb
cmp
movsl
insb
inc
ret
and
ja
js
aam
mov
seto
adc
inc
scas
inc
andl
adc
aaa
mov
jecxz
cmp
into
in
aad
mov
dec
ljmp
arpl
iret
ljmp
fsts
fucomip
rolb
xchg
push
loop
clc
mov
mov
push
pop
popf
lods
shlb
sub
xor
mov
push
cmp
pop
pop
ja
push
movsl
shll
add
xchg
pop
and
adc
push
repnz
sarl
in
and
cmp
clc
popf
sbb
sub
cmp
popf
leave
les
outsb
mov
inc
dec
shlb
cwtl
mov
fiadds
stos
inc
xchg
jo
push
shrb
pusha
div
pop
in
jae
lods
jae
int3
sub
add
pop
sbb
push
ds
int
push
test
fdivs
test
out
outsl
inc
or
fmuls
adc
cmp
adc
or
mov
mov
add
or
xor
inc
pop
xor
add
mov
sub
adc
cmpsb
popf
add
adc
fsub
pop
adc
jg
bound
push
int
adc
xlat
jmp
mov
inc
pushaw
pop
aam
stos
pop
fs
pop
pop
add
lds
xorl
add
or
cmp
or
movsl
push
xchg
aaa
jecxz
test
aas
insl
mov
dec
jb
push
xor
pop
mov
mov
das
adc
dec
rolb
cli
xor
addr16
jge
rcrl
lds
mov
test
scas
sub
ret
inc
sub
in
neg
insl
jnp
sub
sti
sahf
push
les
in
inc
std
ss
inc
imul
or
push
movsb
xor
aaa
in
push
inc
xchg
aaa
lret
sbb
fisttpl
fsub
pop
inc
mov
jne
loope
int3
push
popa
mov
or
fs
mov
jp
dec
pop
push
jp
mov
fimuls
lock
cmpsb
pusha
test
xor
mov
loopne
and
dec
fdivrs
adcb
mov
stos
inc
xlat
add
xchg
mov
push
outsb
or
imul
jns
mov
incl
pop
fcmovnbe
gs
ljmp
xor
pop
ror
pusha
lret
adc
inc
adc
cwtl
pop
lods
cmp
cmp
adc
xor
pop
push
shrl
and
xor
leave
aaa
arpl
lods
xchg
push
jge
xlat
testb
popa
push
or
mov
xlat
inc
mov
rclb
fdivrp
xlat
pushf
lds
mov
ja
or
in
sbb
roll
and
hlt
mov
inc
or
sbb
mov
mov
mulb
inc
lods
dec
rol
inc
push
popl
cwtl
addr16
test
cmp
out
pop
out
push
jg
and
xchg
xchg
mov
jle
xchg
mov
scas
jne
ret
xchg
adc
push
fistl
jecxz
push
test
jae
hlt
inc
stos
sub
cmp
repnz
sub
hlt
xchg
xchg
push
roll
aas
loop
mov
xor
out
pop
pop
pop
test
iret
fildll
leave
cmp
ss
repnz
xor
xchg
mov
cmc
adc
cwtl
leave
and
mov
sbb
arpl
lahf
in
stos
cwtl
lock
dec
lds
xchg
in
adc
xor
sbb
ss
sbb
jnp
push
enter
cmc
lcall
das
ds
int3
popa
mov
jg
int3
mov
push
xor
inc
test
sub
mov
fisubl
push
lahf
mov
insb
lock
roll
mov
adc
out
or
or
test
daa
das
mov
pop
shl
add
mov
mov
mov
dec
push
scas
shlb
mov
inc
xchg
pop
mov
scas
psrlw
int3
jbe
std
add
cmpsb
ljmp
sti
fs
or
cmp
push
rcll
mov
inc
sbb
push
test
pop
xor
xchg
fdivs
js
pop
mov
pop
js
test
xchg
shlb
cmp
aad
pop
shl
gs
fdivr
ret
pop
pop
add
cmp
or
push
mov
xor
stos
fwait
sbb
js
leave
mov
mov
inc
mov
and
xchg
sub
test
lahf
pop
cmp
je
sbb
cmp
je
adc
adc
adc
aam
pop
shll
push
dec
mov
cmp
psubusw
sub
sbb
pop
ja
addr16
sbb
pop
imul
push
fistps
ljmp
sbb
shrl
cmp
lahf
lods
loope
mov
push
out
cld
pushw
pop
jns
cwtl
add
inc
nop
fistl
int3
lcall
xchg
setne
adc
xor
insl
add
jb
or
js
mov
sub
movsb
and
xchg
or
jge
iret
cmc
cs
mov
lock
out
dec
xor
out
stos
inc
iret
push
arpl
sti
imulb
daa
lahf
xor
lods
movsl
and
cltd
push
arpl
sbb
clc
clc
or
add
push
jae
lret
push
mov
xor
std
test
xor
int
loopne
add
jne
jge
pop
jbe
pop
shrb
cmpsl
test
idivb
lret
aad
jecxz
sahf
sbb
cmp
sbb
inc
mov
loop
or
dec
fstpt
sbb
push
sbb
shr
xchg
iret
sbb
cmpsl
dec
iret
mov
sbb
dec
sub
sub
fnstcw
add
test
push
jae,pn
adc
push
fbstp
xor
sub
mov
pop
into
dec
in
imul
sub
pop
scas
mov
inc
ds
jge
shrl
sub
adc
cwtl
xchg
push
lds
push
enter
pusha
shll
lcall
inc
shlb
push
in
add
pop
jmp
jmp
ss
into
addr16
aam
pop
sub
mov
add
repnz
movsl
or
pop
loope
and
inc
leave
mov
in
or
pushf
jg
mov
mov
rol
mov
add
pop
fadds
inc
or
cmp
or
push
lret
dec
push
insl
push
fs
lahf
xchg
fstpl
and
sub
push
xor
pop
sbbb
add
pop
pop
stos
cmp
outsb
jp
rcrl
je
pop
push
cmp
popa
imul
sets
dec
leave
in
sbb
cmp
xlat
pop
cmp
test
gs
sbb
mov
xor
decl
gs
cmp
mov
inc
andb
test
loopne
inc
xor
sbb
and
seta
es
mov
sub
or
inc
mov
xor
pop
dec
and
movsl
jge
mov
rolb
fwait
shlb
or
nopl
dec
pop
out
jns
stos
aam
lea
sbb
or
rol
shrb
pop
mov
mov
sub
add
mov
dec
test
sbb
mov
addr16
mov
loope
xchg
cmp
fdivs
iret
add
bound
add
mov
inc
adc
add
mov
inc
mov
dec
sahf
test
in
mov
mov
jl
xlat
push
pop
mov
push
cli
cmp
xchg
sbb
shl
lcall
add
mov
adc
mov
or
inc
in
sarl
sbb
mov
jge
popf
das
mov
mov
cmp
lds
mov
addb
pushf
lret
xor
shll
cwtl
in
pop
pop
add
or
ljmp
cmp
scas
dec
jnp
mov
push
adc
fmul
mov
xor
add
xorl
mov
pop
mov
jmp
mov
and
movsb
cmc
xchg
push
push
sarb
aad
push
mov
pop
loope
out
jnp
jle
sub
gs
testb
jge
mov
push
lret
sahf
adc
fs
sahf
mov
xor
repz
pop
cli
rcll
ds
lock
push
jae
hlt
lods
fnstenv
pop
addr16
cltd
push
sti
iret
icebp
dec
cmpsb
stos
jmp
xchg
xchg
outsb
imul
inc
pop
sub
shlb
cmpl
jbe
test
and
mov
lock
add
xor
xchg
xchg
arpl
inc
and
sti
push
fimull
jmp
aam
fnstcw
inc
pop
outsl
popf
push
lods
inc
xchg
and
lds
xor
jge
inc
adc
fwait
xchg
inc
sbb
movsl
mov
dec
insb
cmp
mov
pop
dec
ret
cmc
mov
and
pusha
les
add
mov
bound
sbb
hlt
add
adc
xchg
push
in
push
and
jle
loopne
sub
lahf
adc
aaa
xlat
je
add
mov
lret
loop
aad
in
adcl
dec
bound
mov
mov
jno
test
mov
out
pop
pop
ds
popf
or
rcrb
dec
push
aaa
cmp
js
data16
sbbl
out
les
xor
xor
ret
push
jmp
insl
incb
idivl
addr16
movsb
aad
or
pop
imul
pop
pop
bound
dec
inc
shl
adcb
xor
je
fcompl
test
pushf
imul
mov
addb
jl
xlat
push
clc
shll
jne
jmp
pop
xor
insb
pop
push
jb
les
mov
hlt
mov
xor
jnp
out
rorl
sub
push
loop
jl
sahf
mov
sahf
scas
jp
push
or
sub
fistps
dec
daa
ret
xchg
mov
cltd
jo
std
inc
into
pop
mov
or
aaa
cld
pop
call
dec
adcb
xlat
outsb
jne
inc
in
ds
mov
repnz
insb
in
and
sbb
push
mov
xchg
and
dec
mov
loope
pop
mov
mov
mov
xchg
jae
sub
lods
push
jecxz
or
stos
add
push
inc
jg
jmp
pop
or
pop
xchg
in
mov
sub
mov
pop
jns
push
xor
daa
adc
imul
adcb
out
hlt
adc
frstor
jmp
imul
sub
int3
outsl
insb
add
lods
out
inc
mov
sub
aam
js
jb
sbb
movsl
push
scas
dec
mov
jecxz
ret
push
jae
xchg
mov
int
sbb
mov
xorb
aaa
xlat
mov
cs
xor
pop
scas
imul
adc
scas
loopnew
xchg
sti
cmp
jbe
call
pop
test
push
call
movsl
cmp
jg
aaa
add
inc
in
dec
xchg
jo
divb
imul
cs
inc
ja
imul
push
and
sub
mov
and
lods
in
testb
aad
in
jle
sbb
push
ficoms
cmpsb
sub
mov
dec
push
lret
lods
fisubrs
int
in
pop
xlat
scas
mov
cmpsw
pop
xlat
or
cld
cmc
push
cmc
xor
shlb
inc
js
les
test
and
in
pop
push
xchg
bound
pusha
xchg
mov
lret
jmp
cmp
repnz
fisubl
jl
fwait
adc
ds
sub
inc
cmpl
sub
dec
scas
std
adc
aad
lock
daa
mov
es
and
pop
xchg
xchg
fnsave
pop
inc
addr16
xor
iret
movsb
pop
enter
push
pop
lea
sbb
nop
jle
aam
inc
lods
int
into
pop
sub
add
mov
ljmp
divl
jne
das
mov
jb
loope
pop
jmp
lcall
and
daa
and
enter
sbb
loope
add
ffreep
pop
add
push
xor
loop
mov
adc
out
popf
push
gs
fldt
fisubl
or
js
cs
lock
out
outsb
add
pushf
movsl
jmp
jnp
pop
lods
mov
and
pop
push
and
push
sar
dec
push
call
lcall
xchg
add
rcr
loop
mov
cmp
add
or
bound
sub
xor
or
sbb
icebp
imul
data16
cli
repz
xchg
and
dec
rcr
sub
mov
nop
movb
jo
mov
push
push
mov
clc
lret
or
pop
lods
mov
fisubl
add
or
rcrl
mov
adcb
in
test
mov
lret
aam
lock
adc
push
add
dec
pop
jg
lret
inc
xchg
jns
mov
ret
cwtl
lods
mov
add
aam
gs
jns
jecxz
sbb
cli
push
and
mov
sbb
jo
fdivl
mov
rorb
mov
cmp
pop
sub
pop
pusha
outsb
imul
scas
shlb
jo
push
fdivl
inc
jge
jb
stc
sarl
mov
ljmp
mov
xchg
out
maxps
dec
mov
nop
mov
xor
inc
rorb
loopne
fsubl
outsb
in
nop
imul
cmp
cs
mov
cmp
and
loopne
lret
in
or
pop
imul
clc
rclb
inc
cmpl
in
cltd
jl
pop
or
adc
daa
jmp
loopne
adc
mov
mull
fistl
push
push
sbb
pop
cwtl
xchg
inc
mov
fiadds
xchg
adc
xor
pop
or
ja
mov
sbb
or
mov
ret
aad
scas
and
leave
cli
out
cmp
inc
sub
adc
jns
adc
pop
pop
pop
js
data16
mov
out
push
in
mov
add
and
add
or
inc
dec
fstpl
mov
sub
sbb
loope
ret
xor
call
jbe
shlb
adc
mov
pop
push
mov
or
fbld
xor
daa
adc
pop
jecxz
into
fldenv
xchg
out
in
sbbl
xor
inc
fbld
inc
popf
in
imul
xchg
rorb
shll
movsb
jp
in
pop
jge
fwait
mov
add
or
mov
mov
mov
lds
popa
mov
inc
hlt
or
out
loope
mov
sti
jle
aas
les
adc
mov
sub
scas
xor
imul
or
gs
cltd
xchg
push
ds
adc
jmp
sub
mov
mov
xor
mov
jle
loope
or
adc
lods
push
popa
repnz
aaa
or
inc
push
push
fcoms
xchg
push
dec
rcll
stos
dec
in
mov
lds
xchg
inc
sbb
inc
push
movsl
sub
sbb
adc
mov
rorl
jne
gs
sub
and
sbb
das
lock
in
imul
mov
adc
sarb
sarb
hlt
cmp
pop
pop
xor
inc
aad
cmp
lret
repz
stc
fs
imul
fs
inc
cmpsb
jg
push
mov
and
jnp
add
cld
in
sub
fisttpl
push
call
mov
fisttps
pushf
and
dec
xor
cmp
xor
lds
mov
push
ss
cmpsb
jmp
sub
push
inc
push
cmc
mov
mov
xor
jnp
push
bound
subb
mov
jg
pop
loope
clc
scas
add
jmp
ja
sub
adc
adc
mov
or
push
mov
adc
cmp
push
movl
inc
mov
cs
je
inc
dec
sub
repnz
aaa
outsb
shl
adc
sbb
mov
cwtl
xor
xor
or
imul
stos
fimuls
scas
xchg
inc
fucomi
roll
std
xchg
lret
sbb
xchg
fadds
mov
add
fs
pop
sbb
inc
mov
jb
pop
roll
and
shll
inc
xor
mov
mov
lods
cmpsb
shlb
outsl
lods
ds
adc
adcl
xchg
pop
add
push
mov
mov
jmp
das
sbb
mov
adc
test
in
or
lods
mov
rcll
psrld
inc
xchg
insl
fs
popa
or
cmp
pop
fbstp
test
mov
add
and
mov
outsw
fwait
ljmp
ja
add
mov
lods
and
test
pop
push
inc
dec
sub
pop
cmp
lahf
push
js
mov
dec
imul
sbb
lea
inc
cmp
mov
xor
xor
push
inc
arpl
loop
jns
fsubrs
dec
testb
test
stc
mov
out
xchg
dec
adc
out
jle
cwtl
xchg
and
push
orl
popa
ljmp
shlb
dec
add
or
mov
dec
daa
lcall
fcmovnb
add
dec
add
arpl
and
mov
or
fildll
testb
fnstenv
aad
dec
mov
adc
dec
pop
xor
jg
rcrl
mov
loopne
or
xlat
mov
fwait
or
mov
data16
inc
sub
dec
mov
lds
sub
push
test
mov
push
xor
lcall
testl
loopne
pop
and
test
mov
test
cltd
stc
repnz
fcompl
daa
or
xor
pop
pushf
mov
sbb
rclb
ret
scas
out
rcll
push
sub
mov
dec
sub
repnz
xchg
pop
mov
out
push
pusha
inc
cmpsb
inc
push
xchg
adc
xchg
cmpsb
push
mov
int
dec
popa
aaa
and
loope
les
popa
mov
add
mov
push
loopne
call
stos
add
xor
lret
sub
xlat
cmp
aas
mov
jno
xor
rcll
jp
mov
pop
test
aam
cmp
stos
outsb
fsubs
stos
pop
push
mov
leave
pop
testb
pop
inc
jo
scas
xor
jne
sbb
imul
or
push
and
push
add
pop
pop
mov
sub
dec
daa
xlat
lods
mov
dec
jo
inc
sub
lret
mov
mov
push
ret
dec
adc
jb
mov
and
sub
mov
jge
xor
xchg
jecxz
inc
pop
pop
push
jmp
dec
andl
inc
sahf
pop
jg
mov
add
adc
xor
pop
mov
adc
shr
pop
cs
insb
rorl
in
sbb
inc
or
imul
sbb
push
jae
cmc
call
shrl
push
fbstp
or
dec
adcl
and
dec
push
pop
push
shl
outsb
notl
push
pop
loop
mov
fmuls
ret
outsl
hlt
rol
and
push
push
jmp
jle
dec
scas
sbb
mov
or
mov
rol
mov
mov
fisubl
push
xlat
jns
push
jbe
popf
adc
inc
pop
inc
ja
fwait
mov
in
in
mov
inc
fdivs
ds
int
mov
adc
call
inc
xchg
rorb
je
fsubrl
das
movsb
xchg
push
shll
or
cltd
mov
inc
movsb
sbb
jno
cmpsb
sbb
push
mov
pop
jp
push
inc
cmc
xchg
repnz
orb
imul
sti
iret
adc
mov
pop
adc
aam
xchg
and
dec
lret
lods
inc
cmp
add
gs
and
jge
cli
lcall
mov
inc
cltd
iret
adc
jnp
mov
xchg
arpl
xor
fcoml
or
insl
leave
jnp
loop
rclb
jl
addr16
jge
enter
pop
fimuls
in
call
xor
or
inc
loop
das
adc
arpl
mov
in
shll
outsb
outsl
fbld
je
out
pop
mov
adc
arpl
aad
xlat
enter
fmul
sbb
stos
xchg
pop
push
dec
iret
sbb
call
xchg
stos
and
add
arpl
cwtl
push
leave
fsts
stos
lret
jbe
pop
push
pusha
fwait
mov
mov
and
dec
mov
enter
xchg
lcall
outsl
pop
push
jle
inc
out
pop
cmp
addb
mov
mov
loopne
test
call
jbe
mov
enter
call
add
jp
xchg
sbbb
cmpl
addr16
or
sub
decb
lahf
mov
mov
clc
sub
xchg
dec
out
in
cli
mov
and
jne
jae
and
outsl
lods
das
lcall
sub
jno
mov
cmp
stos
xchg
fsubrs
mov
lret
cmp
jmp
popa
loope
ljmp
call
popl
sub
fistps
xchg
aam
cld
sarl
stc
push
push
imul
stos
inc
sbb
adc
cmc
jnp
arpl
ret
lea
inc
gs
sub
xlat
adc
test
pop
jns
lahf
je
aam
adc
ret
jp
inc
fsubl
dec
mov
incb
push
push
mov
add
pop
inc
adc
add
xchg
xchg
ss
inc
es
push
in
imul
dec
add
sbb
les
add
jge
push
rol
in
test
adc
add
mov
xor
into
lcall
and
cmp
xor
pop
jp
push
pop
into
in
push
shll
lahf
mov
sub
pop
fsubr
test
popfw
inc
test
not
jl
push
icebp
add
jbe
jge
mov
rclb
pop
enter
lods
in
dec
mov
jo
cmpsb
xchg
and
xor
mov
enter
dec
out
ljmp
xchg
cmp
mov
lret
aas
dec
push
mov
negl
inc
lods
ret
add
xor
mov
and
jne
std
jno
pop
and
mov
call
mov
stos
jle
mov
xor
mov
out
xchg
cwtl
sbb
mov
lea
std
xor
jmp
xchg
mov
or
loope
outsb
jge
xor
dec
in
pop
je
mov
addr16
packsswb
xlat
lods
stos
lods
lea
sbb
inc
mov
xchg
inc
or
xor
fnsave
mov
cmp
inc
mov
ds
adc
test
inc
pop
mov
xchg
add
lods
lods
and
jl
loopne
xchg
sub
push
jge
lock
pop
and
in
push
test
jno
out
dec
push
icebp
jg
loopne
push
xchg
ja
add
xchg
cltd
maskmovq
nop
mov
daa
fxch
mov
sbb
dec
and
mov
mov
out
dec
inc
adc
dec
sub
sarb
pop
jo
movsl
mov
jnp
add
int
cmp
xchg
jns
lret
dec
aas
cmp
adcb
gs
in
mov
mov
push
loope
push
mov
adc
movd
add
into
movsl
push
cld
ret
in
pushf
stc
inc
fiaddl
cld
or
js
mov
in
sbb
push
push
fstl
mov
jbe
xor
sub
xchg
lods
jmp
stos
add
outsl
aaa
push
mov
push
push
sahf
mov
cwtl
jns
add
inc
iret
jbe
negb
dec
out
jne
jge
shr
xchg
and
call
add
and
dec
adc
js
std
out
sbb
xor
popa
mov
push
fisttpl
xchg
mov
fucomi
mov
mov
adc
push
jmp
mov
mov
or
or
aas
stos
add
mov
daa
out
sub
and
movsl
lcall
mov
push
lcall
jmp
arpl
enter
add
ljmp
loopne
jl
filds
ljmp
jnp
and
and
mov
aaa
push
lock
cli
out
test
pop
lret
mov
mov
lock
mov
xchg
leave
andb
inc
pusha
out
movsb
jg
fs
mov
jle
in
and
or
ret
out
xchg
out
sbb
push
and
push
sbbl
xlat
sbb
xor
mov
pop
pop
add
mov
xchg
inc
nop
push
inc
push
xor
pop
ret
mov
clc
adc
insb
xor
leave
adc
fwait
jne
in
scas
mov
icebp
dec
dec
cld
pusha
mov
inc
sbb
mov
adc
mov
jns
mov
add
dec
daa
xor
jp
or
pop
and
cmp
cmpsl
inc
out
and
test
das
sti
mov
pop
sbb
add
es
sti
xchg
push
lods
mov
push
or
or
insb
sahf
cmp
jno
pop
push
leave
jmp
out
inc
addb
adc
jmp
flds
lret
adc
lock
in
adc
and
adc
sub
pop
shl
or
or
mov
xor
and
movsb
jae
and
jge
jo
cmp
mov
aam
cmpsb
lock
cmovl
sti
ja
orl
xchg
shl
fimuls
xchg
pop
outsb
sub
xlat
shrl
rcrb
xchg
jo
xchg
in
dec
hlt
pop
insb
pop
int
imull
dec
jl
push
ficoms
cmp
outsl
lret
repnz
in
hlt
pop
mov
test
jmp
push
or
decl
std
shrl
cwtl
imul
sbbb
test
xor
stos
outsb
scas
sbb
fbld
test
mov
int3
outsl
dec
nop
sbb
cmp
andb
int3
inc
inc
stc
leave
jb
and
pop
and
fs
pop
xchg
or
fsubr
mov
sti
icebp
push
stc
jl
ljmp
mov
cmpsb
std
loope
push
data16
mov
adc
or
mull
lret
cli
gs
adc
mov
fimuls
xchg
ds
imul
push
and
jg
add
push
pop
push
and
imul
xchg
shlb
ret
mov
in
insb
mov
stc
arpl
fcompl
dec
aam
adcb
lods
add
sbb
adc
adc
jnp
test
jmp
cli
push
enter
in
cmc
enter
mov
mov
sete
stc
mov
addr16
cmpsl
and
inc
daa
xor
mov
dec
lret
and
inc
enter
out
sysexit
insl
in
cmp
mov
out
ret
fimull
jmp
xor
mov
mov
in
inc
sbb
push
push
and
add
add
xor
pop
repz
in
data16
aad
addr16
test
out
or
inc
or
pop
jecxz
mov
mov
in
aad
add
int3
aam
out
ret
repz
inc
cld
fdivrl
sub
shll
pop
cmp
pop
lahf
sti
jno
and
cmc
inc
stos
popf
and
jl
test
push
jbe
xchg
or
ss
xchg
sbb
inc
xchg
add
icebp
mov
arpl
sbb
bound
push
out
cwtl
jg
imul
hlt
into
jecxz
mov
and
pop
fldenv
sbb
fsts
icebp
in
and
leave
mov
ret
sbb
pop
push
insl
iret
into
pop
stc
cld
test
pop
mul
or
xchg
mov
insb
jg
push
jle,pt
fs
leave
push
addl
cmp
outsl
dec
fimull
lahf
mov
fwait
into
adc
and
fwait
shlb
inc
inc
imul
fldcw
add
das
in
insb
jbe
cmpsl
aad
dec
mov
inc
mov
stos
adc
ds
pop
pop
push
sub
cmp
scas
cmpl
jns
and
xchg
jecxz
jp
xchg
sarl
sub
inc
mov
jmp
or
push
xor
movsb
jl
pop
int3
je
jge
jnp
lock
push
cmp
push
in
push
mov
ficomps
stos
push
popf
scas
das
jbe
mov
cvtps2pd
das
push
jecxz
fsubrl
sub
lcall
out
repnz
je
push
pop
iret
push
stos
cltd
dec
ret
cmp
ds
sar
call
or
shlb
add
fidivrl
adc
pop
lds
xlat
jg
cwtl
sbb
jp
popa
lret
dec
push
enter
fs
jle
dec
lods
daa
mov
jl
and
sub
pop
pop
cli
inc
push
pop
jb
dec
and
mov
xchg
pop
dec
push
fcmovnb
jge
test
out
aaa
add
inc
xchg
jnp
call
xor
dec
pop
insb
push
negb
ss
mov
dec
test
and
or
inc
mov
xchg
add
scas
mov
test
sbb
and
inc
sub
lret
sbb
cmpsl
jns
ss
mov
xor
jmp
jno
jecxz
fadds
stos
repz
push
fildll
xchg
mov
and
out
mov
dec
push
sbb
pop
jecxz
pop
aaa
xor
mov
xor
mov
or
jg
mov
imul
add
pop
sbb
stc
lea
mov
pop
lock
sbb
cmp
outsl
xlat
mov
add
adc
inc
add
mov
cwtl
pop
mov
loope
test
sub
cli
xchg
push
adcb
and
jl
arpl
inc
jns
in
fldt
imul
inc
adc
inc
push
nop
and
push
jge
ret
rolb
sbb
sbb
add
setae
popa
fcoml
gs
push
xchg
scas
mov
sti
in
sbb
test
xchg
into
mov
test
and
leave
ds
push
jo
and
inc
add
mov
sub
jl
rorb
cmp
jg
pop
push
xchg
rorl
push
inc
jle
jnp
test
push
push
hlt
and
lret
test
xchg
sbb
xor
bound
xchg
or
mov
pop
mov
cmp
testl
xchg
mov
push
jnp
lret
lahf
pop
cmpsl
js
aaa
int3
lods
cs
divb
fs
sahf
test
ja
jecxz
mov
or
jmp
xchg
scas
ja
fcmove
scas
outsb
dec
loop
flds
fdivp
sub
mov
fisttpll
mov
sbb
pusha
js
lret
outsl
inc
add
inc
sub
aam
or
iret
mov
scas
lret
popa
sahf
jbe
test
in
leave
lahf
mov
mov
mov
xchg
jl
mov
xor
and
and
push
clc
std
fcomp
arpl
aam
push
fisubs
notb
inc
lods
nop
pop
fprem
sbb
sub
iret
mov
popa
lret
jmp
add
jo
dec
outsl
sbb
iret
add
or
xchg
jmp
inc
dec
imul
loope
xchg
ret
mov
sub
pop
or
and
push
sti
insl
test
cs
daa
push
push
aam
jl
cld
jne
fimull
sbb
nop
sti
stos
sbb
loope
into
and
xchg
pusha
xchg
ja
movsb
dec
push
lods
aaa
sbbb
sar
mov
mov
cmpw
sbb
mov
pop
cli
pop
pop
lea
mov
mov
and
test
pop
movsl
inc
jno
mov
movsl
imul
lds
call
les
scas
push
fistps
dec
cmpl
out
mov
movsl
sub
sbb
int
sahf
pop
sub
push
jae
pop
out
jns
fidivs
sub
cmpsl
push
lods
or
aas
pop
test
add
mov
mov
sub
pushf
jns
mov
dec
mov
mov
xchg
mov
cmpsb
ds
mov
pop
js
mov
mov
mov
jecxz
pop
add
daa
imul
mov
out
inc
sub
outsl
add
cmp
punpckhbw
sub
pop
inc
pop
mov
push
pusha
loopne
shlb
jae
inc
orb
inc
add
ret
mov
filds
add
mov
push
adc
mov
jno
and
test
mov
cmpsb
pop
adc
pop
in
cmpsb
xchg
jne
js
loopne
dec
mov
in
pop
ficoms
xor
out
movsl
xor
adc
mov
or
and
out
mov
mov
into
pushf
cmp
cs
data16
clc
push
repz
inc
lret
iret
xor
add
daa
test
test
loop
inc
pop
pop
xchg
xchg
mov
and
xchg
mov
pop
in
push
and
adc
call
xchg
lret
test
cli
shll
or
sub
lret
test
negl
jo
bound
movsl
mov
cmp
ljmp
pop
fiaddl
cmpsb
push
cmp
cmp
in
rol
mov
cli
sbb
pop
and
fcmovu
and
mov
dec
shrl
lods
lods
pop
xchg
mov
popf
pop
sbb
xor
loopne
mov
mov
and
mov
pop
xor
mov
stc
loope
stos
pop
pop
add
jle
pop
inc
shl
rolb
adcb
rorl
cs
popf
arpl
pop
cld
xor
fbld
or
es
mov
xor
jb
loopne
push
jge
sub
push
cmpsl
stos
lods
or
dec
lret
push
pusha
lea
add
mull
inc
idivl
or
lret
adc
sub
repnz
add
or
pusha
lcall
jns
mov
hlt
dec
jg
in
mov
cwtl
mov
shrl
fsts
mov
adc
enter
adc
or
repz
pop
sub
dec
mov
andl
mov
jl
scas
es
cmp
pop
mov
push
addr16
xchg
clc
sub
xchg
dec
mov
out
int3
aas
mov
jae
push
ja
dec
js
aam
sti
sbb
or
lea
sbb
mov
xchg
fnstsw
sub
lcall
std
adc
es
xorb
hlt
mov
fildl
fdivrs
cmp
int
scas
push
iret
inc
xchg
sti
mov
pop
mov
push
dec
and
inc
shll
and
stc
imull
dec
pop
pop
push
mov
icebp
or
pop
aad
fistl
sub
outsl
ret
pop
rcll
xor
out
jno
jl
out
loope
jno
cld
int
fistl
push
gs
je
bound
lock
sarl
inc
xchg
push
xlat
shll
cwtl
scas
dec
test
cs
ja
push
mov
sbb
scas
fidivrs
jmp
test
aad
mov
popf
loopne
sti
aas
push
and
hlt
scas
subl
pop
add
push
mov
add
in
jns
xor
sti
mov
mov
movsbl
jnp
push
or
xchg
fwait
pop
das
fxch
loopne
mov
push
add
add
rclb
std
mov
push
adc
mov
ja
sahf
test
and
inc
sahf
loope
and
mov
subb
mov
std
pop
sahf
xor
dec
jnp
mov
push
sbb
ss
sub
mov
lret
fwait
jb
xlat
inc
shll
sahf
loop
lcall
out
xchg
sbb
je
es
inc
sar
mov
shrl
dec
mov
imul
jne
sahf
mov
add
test
sub
pop
xor
adc
adc
mov
test
ror
iret
repz
stos
xchg
dec
add
mov
and
mov
push
jl
sbb
sahf
dec
sahf
push
mov
or
jb
sub
mov
iret
aas
dec
and
arpl
mov
xchg
in
aaa
repz
shrl
lock
dec
sahf
pop
xchg
repz
loope
jecxz
pop
xchg
xchg
pop
cld
sbb
mov
or
jecxz
sbb
inc
push
push
fcmovbe
shlb
inc
sub
test
call
and
jmp
into
ss
jp
mov
cmpsb
lock
xorl
mov
xchg
lods
mov
cli
jmp
cmpl
lea
fwait
test
and
mov
adc
xor
sbb
cs
dec
into
mov
adc
outsl
dec
xor
sub
notl
aaa
in
adc
test
das
loopne
cmp
out
push
mov
aam
fidivrl
bswap
sub
push
rol
repnz
mov
test
pop
dec
ss
xlat
push
xor
pop
lea
repz
cmp
aad
inc
jno
sbb
addr16
sti
sub
push
xchg
jbe
push
pop
icebp
mov
add
addr16
jge
int3
pop
adc
jge
adc
jae
ffreep
sub
data16
mov
scas
mov
cmp
ror
add
add
data16
and
sbb
mov
out
push
cmpsb
out
repnz
xor
stc
xchg
xchg
loope
adc
pop
sub
nop
call
mov
xor
cmpsb
cmp
sarb
lock
mov
adc
inc
and
cmp
mov
dec
or
outsb
dec
jo
or
das
outsb
out
ret
adc
push
roll
mov
lret
mov
xchg
xchg
in
cli
leave
popl
or
inc
rcrl
dec
push
clc
ret
xor
mov
sbb
ret
push
dec
hlt
pop
adc
add
jl
mov
movsl
adc
or
lcall
es
lds
fiadds
push
inc
push
mov
mov
pushf
in
out
jp
rcrb
movsl
movzbl
push
outsb
sbb
test
and
cmova
push
cmpl
inc
dec
adc
data16
or
xchg
pusha
cwtl
ret
popa
lods
mov
faddp
mov
pop
outsb
in
push
icebp
mov
and
adc
insb
test
xor
in
idiv
mov
push
stos
rclb
mov
cmc
ja
jmp
push
je
aam
out
add
movsb
imul
daa
repnz
shrb
movsl
ja
aas
test
jmp
mov
and
cmp
repnz
mov
imulb
fimuls
imul
movsl
sub
fldt
push
mov
pusha
xchg
mov
and
mov
rcrb
mov
cmpsb
jno
cwtl
pushl
cs
inc
movsb
adc
shll
fsubl
mov
enter
divl
mov
stos
dec
addb
test
or
or
or
out
nop
cmp
add
xor
cmp
enter
movsl
mov
inc
jbe
adc
push
inc
mov
jle
mov
leave
int
aaa
fstps
in
sbb
cmp
sbb
dec
sahf
out
pusha
adc
jo
fcoms
imul
data16
inc
inc
lret
scas
push
mov
lea
pop
push
mov
int3
cmp
inc
call
pop
mov
xor
sbb
dec
cmp
movsl
loopne
mov
mov
mov
sbb
pop
jmp
xchg
rorb
xchg
ror
jg
ret
dec
pop
dec
lock
push
mov
push
mov
out
pushf
fnstsw
rcrl
pop
subb
jl
xor
rcrl
leave
add
push
divl
por
fistl
mov
add
mov
je
jnp
fimull
popf
mov
hlt
adc
xor
jl
push
ljmp
xchg
mov
hlt
inc
xacquire
dec
mov
cmpsb
cmpsb
mov
leave
mov
mov
int
pop
loop
xor
mov
sahf
xor
sbb
insl
mov
movsb
stos
cmpsb
sbb
cli
adc
fs
fsubs
sahf
in
insb
lea
repnz
pop
mov
testb
ds
cmpsl
jns
sbb
push
inc
aad
and
fs
inc
add
leave
dec
lock
mov
sub
scas
or
pop
dec
rep
jge
in
mov
fidivrs
cli
sbb
into
push
js
mov
ds
mov
or
ja
cmpl
push
mov
xchg
bound
xchg
push
daa
inc
and
jne
out
inc
push
sbb
lcall
mov
lahf
in
and
xor
lds
out
xchg
shl
xchg
sbb
scas
jmp
movsb
scas
xlat
mov
jo
pusha
shll
cmp
cwtl
shrb
mov
jb
pop
gs
cmc
push
addr16
or
or
rorl
mov
in
cwtl
icebp
sti
rorb
dec
push
pop
cli
and
iret
xorb
ds
xlat
dec
stos
rorb
fstpl
xchg
frstor
push
push
nop
aas
bswap
adc
push
into
lahf
mov
pop
dec
sti
dec
pop
push
dec
xchg
push
jmp
cmp
push
or
xor
jb
int3
adc
popf
push
roll
or
cmp
fsub
jnp
pop
leave
adc
sarb
cltd
push
sub
or
dec
lret
mov
lds
dec
insl
sbb
test
imul
sbb
mov
xchg
and
add
cld
mov
mov
shlb
adc
int3
xor
jns
cmp
mov
mov
and
arpl
mov
fstps
push
test
es
adc
inc
or
stos
push
loope
pop
test
stc
xor
sbb
fsubl
mov
ror
mov
xor
xor
movsl
jmp
xor
cmpsl
or
ret
clc
and
xchg
adc
pop
mov
jmp
jp
loope
xchg
dec
popa
scas
pop
int
add
repz
and
xchg
and
cmovp
and
call
ljmp
inc
clc
inc
dec
sub
pop
sbb
sub
rolb
aas
jle
adc
xchg
push
mov
jb
movntq
mov
loopne
jns
lcall
adc
fstpt
ljmp
and
arpl
repz
jns
loope
or
dec
es
stc
dec
aas
mov
movsl
imul
jl
jle
add
sbb
mov
mov
push
mov
rclb
sti
ret
push
imul
pop
xorb
cmc
sub
push
cmc
bound
fucomi
jno
fs
jb,pt
xchg
cmpsb
iret
jecxz
into
lea
sbb
push
mov
popf
movsb
into
xchg
rcrl
scas
hlt
or
dec
ja
adc
leave
sub
popa
outsb
cmp
add
mov
lods
fimuls
mov
lds
lret
sub
cli
js
lea
andl
sbb
adc
mov
inc
add
cmpb
or
lock
lods
lret
mov
loop
insb
inc
clc
cwtl
push
out
or
cld
xchg
dec
push
push
daa
push
pop
mov
sbb
or
inc
loope
das
xchg
mov
xor
or
inc
pop
xchg
lds
pop
sbb
enter
inc
and
icebp
mov
cs
cmc
mov
pop
xchg
and
add
in
xchg
outsb
pop
outsb
js
jle
stc
not
aam
adc
mov
mov
test
movsl
push
adc
pop
jl
outsl
outsl
outsl
inc
push
int3
hlt
nop
pop
in
sbb
stc
push
rorl
push
mov
pop
in
cmp
test
cs
xor
std
sub
or
cld
stos
mov
mov
mov
cmpb
jbe
insl
mov
xchg
cmpl
mov
fs
jl
cmc
sub
or
mov
sti
or
mov
mov
adc
mov
dec
ud2
pusha
xorps
hlt
test
or
aas
fs
imul
lcall
adc
lret
push
in
mov
fnsave
mov
push
imul
in
mov
stos
adc
cmpsb
or
mov
mov
les
stos
cmpb
aas
pushl
fmuls
scas
insl
dec
data16
mov
mov
xor
mov
out
stc
inc
and
stc
arpl
sub
fisubs
adc
notl
sub
test
fnstcw
pop
cmp
loopne
in
jecxz
lea
sub
or
push
dec
inc
add
nop
leave
sbb
mov
dec
sbb
xchg
mov
jg
and
cmp
sub
cmpsl
pop
inc
jge
xchg
mov
ja
testb
out
outsb
sbb
mov
xchg
mov
notb
inc
jnp
jnp
stc
xchg
xchg
ret
lret
and
xchg
je
jl
add
ljmp
pusha
int
pushf
or
hlt
pop
jecxz
and
scas
arpl
sbb
repz
inc
mov
or
ret
jb
push
ja
mov
push
lods
sbb
or
sub
das
ljmp
jg
fcomp
mov
jge
push
movsl
lds
add
les
js
push
aas
push
jb
data16
cmp
dec
frstor
out
sbbb
cli
out
dec
in
loopne
jbe
and
icebp
fildll
mov
jne
sub
mov
repnz
add
ss
popf
cmp
sub
add
jbe
sub
jle
push
pop
adc
ja
je
enter
add
shlb
pop
roll
dec
ret
mov
mov
mov
cltd
xor
out
mov
stc
mov
add
into
sti
cmpl
pop
popf
pop
loopne
jle
sarl
push
mov
test
imul
js
jnp
push
stos
mov
fbld
fiadds
stos
pop
test
mov
push
fwait
insl
pusha
imul
adc
jbe
out
mov
and
out
clc
aas
test
mov
mov
push
leave
xchg
sbb
and
in
insb
sub
loope
ss
xlat
sti
fbld
pop
xor
or
pop
xor
mov
xor
cmp
fstpl
cwtl
mov
sbb
lods
ss
rclb
or
or
xor
rolb
sub
sarl
outsl
das
add
adc
jns
xor
xor
adc
popa
outsl
aam
dec
inc
in
jo
sbb
jmp
push
popf
test
stc
out
popa
pop
add
pop
pop
push
leave
mov
jo
bound
movsl
fisubl
imul
sbb
mov
inc
mov
mov
mov
sub
push
jecxz
xchg
shlb
ss
stos
mov
or
sub
std
jge
out
xor
mov
dec
daa
lods
test
pop
sbb
in
push
pop
fldt
xchg
loop
std
add
or
dec
mov
notl
pop
or
pop
shll
in
ja
push
and
repz
mov
or
sti
sub
movsb
jae
lds
inc
xorb
push
bound
inc
popf
adc
mov
pop
test
cmp
addr16
test
jns
cli
dec
xor
mov
push
out
jne
cmpl
stos
or
mov
clc
fwait
scas
or
and
add
into
enter
popa
ja
mulb
push
dec
jnp
loope
in
arpl
in
nop
into
sbb
lds
jle
mov
and
jbe
sub
pop
mov
hlt
sbb
outsb
mov
movsb
cmp
sarl
test
bsr
adc
int
xlat
testl
and
mov
pop
dec
stos
test
jl
dec
pop
popf
test
sub
add
mov
jg
and
gs
movsb
outsl
jb
and
push
mov
cwtl
rcl
shll
cmp
sub
dec
add
jmp
fmull
mov
mov
roll
mov
jb
sub
sahf
lret
sti
std
cmpsl
add
dec
pusha
jns
mov
cmpsb
inc
pusha
sbb
arpl
aas
dec
jmp
sub
mov
mov
lcall
fsubl
or
push
dec
and
enter
addr16
xor
imul
or
jo
dec
push
or
cli
jge
lds
daa
mov
sbb
jmp
in
les
aam
repnz
mov
lods
sbb
mov
fwait
mov
nop
dec
cwtl
jo,pt
addr16
imul
arpl
xchg
dec
rcr
ret
test
loopne
dec
add
notl
repnz
add
mov
mov
cmp
imul
mov
push
lret
and
stos
popa
imul
xchg
lret
add
clc
pop
mov
ja
xlat
push
push
lods
fiadds
push
inc
imul
sahf
cmp
loope
sbb
cli
add
cmp
jae
push
leave
push
pop
xchg
hlt
adc
cltd
jecxz
add
out
addr16
imul
push
rclb
dec
and
adc
sbbl
sbb
and
mov
mov
imul
jno
dec
push
ja
arpl
shlb
sub
mov
sub
test
add
dec
imull
fisttpll
sahf
fdivrs
lods
push
in
cmp
push
jp
dec
and
add
popf
push
cmp
cmp
incb
sbb
mov
out
lea
lock
xor
mov
inc
mov
out
jns
bnd
cmp
insl
dec
inc
and
adc
inc
test
in
das
hlt
fsubp
dec
and
js
mov
sub
sarl
mov
fldenv
out
cmp
sbb
mov
and
arpl
mov
sbb
repnz
dec
rorw
lods
and
sbb
lcall
out
mov
add
ds
dec
sub
mov
jo
jnp
mov
mov
push
mov
je
daa
jo
sahf
xor
xchg
fadd
cmpsb
shlb
and
pop
cmp
add
mov
fnstenv
mov
int
jno
mov
add
xor
pop
jmp
lds
out
mov
and
sbb
int
and
cld
mov
add
jne
xchg
cmovno
aad
ret
fwait
mov
mov
pop
xor
es
mov
incl
jmp
ss
addr16
arpl
or
lods
push
shl
xchg
aad
xchg
ja
cmp
stc
cltd
jg
and
jo
mov
test
out
dec
inc
daa
xor
add
cmp
and
js
es
aad
mov
and
sbb
add
or
sbb
mov
repz
aas
pop
icebp
sbb
inc
lret
sub
out
mov
gs
loop
mov
cmp
repz
push
pop
test
es
aam
mov
repz
dec
test
xchg
fnstenv
loop
mov
push
sbb
and
mov
sbb
cmpsl
xchg
pop
push
movsl
inc
jb
cmpsb
or
icebp
insl
or
lds
sub
lds
fwait
cli
cs
dec
shr
cld
sbb
sbb
loope
in
outsb
xchg
sub
cmpxchg
mov
mov
adc
fmuls
pop
imul
shrl
mov
rcll
mov
stos
dec
adc
iret
push
pop
scas
sbb
pop
negb
sbb
mov
fcmovu
mov
sub
sbbb
je
mov
mov
cmp
push
xor
clc
stos
out
sbb
fadds
mov
cltd
leave
mov
outsl
daa
mov
fldl
jg
dec
push
push
jns
bound
outsl
sbb
inc
aad
lret
mov
call
add
sub
dec
icebp
sbb
xchg
icebp
test
dec
rcll
bound
insb
pusha
loop
mov
and
jp
lret
popf
xor
out
jg
dec
jns
lret
pop
inc
je
out
dec
xor
imul
push
loopne
xchg
jp
scas
or
fidivrl
adc
pop
pop
mov
cmp
rolb
daa
sti
xchg
push
inc
push
fildll
adc
je
xlat
dec
adc
pushf
test
cmp
cmp
aas
movsl
and
fistpll
push
sub
fldenv
pushf
sbb
fmull
xor
cmp
dec
xchg
imul
xor
dec
mov
cmp
push
xor
roll
inc
rolb
sbb
ljmp
cwtl
push
daa
push
sahf
sbb
xchg
fldln2
sbb
xchg
into
xor
xchg
xor
aas
cltd
cmp
sbb
cmpl
jecxz
popf
mov
dec
lahf
enter
sbb
iret
xor
add
or
enter
dec
lods
xor
jb
push
pusha
pop
in
es
test
sub
ret
and
test
or
mov
ss
or
push
dec
aam
add
mov
push
cmpsb
sbb
adc
add
sbb
loop
sbb
sub
ljmp
enter
ss
subb
or
xor
and
gs
pop
ljmp
adc
inc
xor
xlat
and
test
mov
jl
int
xor
mov
cmp
push
and
dec
aam
add
pop
dec
insb
gs
mov
std
inc
in
mov
push
ss
jns
les
push
mov
cwtl
or
push
sbb
mov
ficompl
pop
add
lret
mov
iret
push
ja
or
xchg
cmp
mov
ret
jl
pusha
add
mov
jb
shll
sub
sbb
xlat
lret
dec
je
test
cld
icebp
es
fbstp
insb
or
js
push
xchg
pop
inc
loopne
xchg
scas
xor
adc
cmc
lds
xchg
and
das
imul
pop
sahf
cmp
prefetchwt1
or
inc
cmc
pop
push
lods
push
imul
pushf
sub
push
js
and
mov
stos
mov
mov
insl
cmpsb
pop
fucomi
dec
nop
out
das
int3
cwtl
pop
ss
push
jb
add
pop
xor
das
cmp
int
into
cmp
and
and
sbb
repz
loopne
push
push
dec
shlb
stos
js
mov
mov
jl
dec
sbb
and
sti
popf
das
add
ljmp
aas
push
inc
push
in
insl
cmpl
hlt
add
mov
xchg
movsb
test
in
lds
ljmp
and
enter
dec
addl
popa
mov
pop
hlt
popa
insl
and
cmp
mov
outsl
ljmp
jns
push
xchg
mov
mov
imul
xor
xlat
mov
insl
subl
mov
cli
leave
bound
aam
sahf
test
or
sub
lahf
sub
rorb
shll
xchg
mov
push
and
mov
mov
add
sbb
sbb
mov
sti
mov
pop
lds
and
data16
out
insb
pop
add
addl
lea
jns
movl
sarl
fsubrl
inc
push
scas
daa
mov
notb
mov
push
lods
mov
sbb
dec
ds
fsubrs
sbbl
adc
and
lcall
xor
add
cmp
jo
pop
sahf
sbb
push
jb
push
xchg
shlb
je
and
inc
jae
loope
rolb
in
or
inc
aaa
or
cmp
fldt
iret
out
rorb
lcall
add
adc
stos
repz
sub
xchg
les
inc
in
add
subb
jmp
adc
mov
dec
dec
int
push
fcomps
mov
loop
push
movsb
push
dec
cmp
adc
jae
or
push
mov
or
rcll
or
addr16
cmp
and
adc
xchg
push
cli
sub
xchg
pop
loope
xchg
pop
inc
sahf
sti
pushf
out
mov
lret
sub
loopne
mov
add
mov
and
push
out
xchg
dec
push
sbb
dec
aas
loop
cld
stos
add
je
sub
loopne
dec
out
das
test
lods
adc
outsb
fiadds
jge
fcom
outsl
pusha
mov
ficoms
push
test
dec
xchg
and
jg
mov
movsl
addr16
repz
xor
fstps
flds
mov
test
repz
bt
add
sbb
arpl
mov
mov
adc
mov
ljmp
ficoms
adc
test
dec
push
add
add
mov
mov
pushf
jp
scas
std
jp
sub
push
inc
mov
scas
mov
push
xor
mov
lods
rcrb
xchg
push
faddl
add
push
mov
pop
mov
xchg
inc
sub
sti
sar
sti
add
mov
dec
rcrb
aam
mov
adc
and
sub
rcl
mov
inc
cmp
push
cli
ja
xor
arpl
mov
jns
adc
adc
xchg
add
jmp
mov
cld
push
outsl
jno
dec
scas
lcall
xor
shl
jp
jmp
ljmp
nop
sub
mov
mov
mov
divl
cmp
pop
cmc
das
test
in
pushf
xchg
loopne
mov
push
add
dec
push
cwtl
pop
xor
jno
mov
mov
shll
incb
rolb
rclb
test
out
insl
aas
cli
mov
xor
dec
and
and
nop
mov
and
rorl
push
leave
test
cmp
aad
or
sarb
iret
inc
mov
femms
mov
imul
mov
dec
in
sarb
xor
and
rcll
sbb
sti
inc
test
dec
insl
hlt
mov
ret
dec
fiaddl
fistps
int3
dec
rorb
xchg
testb
jge
icebp
and
rcrl
cmp
aam
je
dec
jl
aam
dec
push
xor
inc
xchg
lds
subl
mov
fidivl
push
mov
les
add
lahf
mov
sbb
jmp
sbb
sub
or
int
std
push
call
mov
push
rcl
dec
dec
inc
mov
out
adc
adc
movsb
test
cwtl
sub
stos
fwait
or
shll
testb
fists
arpl
popa
push
inc
xchg
inc
outsb
jne
out
fildl
xchg
ret
mov
sbbl
pusha
jb
rol
jecxz
dec
insl
movsb
xchg
dec
cmp
dec
push
and
inc
popa
mov
xor
movsb
aaa
ljmp
or
xor
jne
lods
push
iret
jne
test
cmp
dec
int
jecxz
jne
ja
push
mov
pop
out
xchg
sbb
testl
pop
test
movsl
inc
mov
xchg
fcoml
repz
fists
inc
and
popfw
aaa
sar
dec
cmp
xor
stos
xchg
add
nop
aad
int3
data16
stos
imul
xchg
xchg
jecxz
xlat
pop
neg
das
leave
jmp
mov
call
xchg
mov
adc
das
mov
pop
imulb
pop
mull
lods
pop
aad
sbb
mov
xor
xchg
test
jnp
jl
decl
inc
fidivrl
jge
mov
outsl
jge
and
cld
push
movb
movsb
dec
int
mov
mov
mov
lret
mov
imul
pop
clc
sbb
test
loop
jbe
adc
or
mov
lock
mov
push
adcl
enter
or
test
adc
outsl
sbb
cmpsb
pop
sub
or
add
and
or
sbb
loope
stos
dec
arpl
call
in
sub
adc
jne
out
and
xlat
pop
es
scas
cmp
cltd
xor
iret
lcall
mov
int3
push
das
mov
or
xor
aaa
ds
lahf
push
cmp
mov
xor
xor
pop
loopne
jo
push
cmp
in
or
aad
sbb
jmp
scas
mov
cld
fadd
imul
and
xor
adc
add
test
xlat
mov
xchg
jno
ficompl
pusha
rcrb
cmp
pushf
xchg
push
icebp
sub
movsl
negl
int
lahf
pushf
std
lods
xchg
popf
or
sahf
mov
and
or
lcall
jno,pn
push
mov
loopne
fcoms
repz
shll
jmp
push
push
dec
out
sahf
xchg
mov
mov
sarb
or
mov
xchg
cmpsl
or
dec
push
xchg
clc
aad
fnstcw
sub
jp
bound
mov
cmp
aad
cmpsb
lea
sub
add
jbe
das
sub
lods
or
sub
and
add
sbb
ret
sub
cli
cld
mov
dec
js
xchg
jnp
xchg
inc
fwait
adc
pop
data16
add
fcmovb
xchg
mov
push
mov
fidivrl
mov
jb
pop
rolb
int3
push
daa
cmp
cmp
xchg
mov
loopne
adc
push
mov
enter
sub
neg
mov
push
out
je
orb
in
insl
and
gs
cmp
stos
jl
movsb
cltd
fisttpl
in
fdivs
iret
mov
cmpsl
testb
adc
push
pushf
rcrl
jo
ss
mov
mov
sub
out
adc
xchg
push
lahf
mov
out
lock
stc
cwtl
inc
stos
xchg
and
dec
insl
xchg
mov
ss
xchg
aam
repnz
div
das
jp
arpl
add
sbbb
cs
xchg
popa
jno
lahf
sbb
jbe
cmp
add
repz
or
mov
loope
inc
out
out
in
lcall
xchg
adc
xchg
push
daa
inc
inc
les
cli
mov
sub
fnstcw
call
dec
xchg
adc
mov
aaa
mov
leave
xor
lret
push
inc
cs
or
ret
enter
loope
mov
jo
push
adc
fstl
inc
hlt
js
aas
data16
insl
mov
add
fldl
add
mov
ror
icebp
hlt
stos
xor
xchg
sub
mov
repnz
push
push
xchg
loope
adc
lret
jl
or
push
push
sarl
cmp
out
pop
xchg
les
inc
mov
outsb
xchg
lea
test
fs
je
aaa
aad
pop
pop
jae
fcompl
gs
jle
or
mov
add
sarb
std
test
outsl
add
scas
fisttps
test
sbb
clc
lods
xchg
sti
in
xchg
adc
add
enter
gs
mov
hlt
pop
insb
pop
das
aaa
xchg
loopne
pop
xlat
pop
pushf
inc
cmp
popf
sar
xchg
jbe
aaa
mov
shll
insl
sbb
pop
mov
lods
dec
pop
or
dec
dec
mov
jle
scas
sbb
and
add
adc
test
out
outsl
cmc
or
mov
mov
mov
imul
jno
sbb
jae
jle
pop
mov
insl
iret
mov
mov
inc
xchg
sbb
gs
lcall
mov
xlat
or
out
out
outsb
cmp
fwait
leave
mov
mov
cmp
cmpsl
fisubrl
pop
adc
test
jns,pn
sbb
inc
rcrb
data16
cmp
outsb
test
test
push
outsb
cmpsl
jbe
xchg
test
icebp
add
fdivl
jbe
pop
dec
jl
add
fildl
mov
or
frstor
popf
lock
xchg
jbe
add
or
sub
pop
jmp
fistps
jmp
mov
fwait
cmp
mov
std
repz
enter
pop
inc
daa
mov
mov
subb
adc
sub
ficompl
fisubl
push
cld
insl
mov
outsb
iret
push
leave
incl
sbb
addr16
int3
adc
insl
push
cli
xchg
in
repz
push
push
insb
loope
test
mov
cmpsl
add
in
ret
mov
jno
int
shl
mov
insb
pop
sti
adc
mov
lret
xchg
enter
repz
cmp
cltd
ss
ja
dec
pushf
pushf
mov
scas
push
cli
scas
pop
sub
xor
pop
lcall
dec
mov
cld
push
jbe
jp
xchg
pushf
jne
sti
cld
fbstp
loop
out
or
cmp
sub
int3
aas
movl
into
push
insl
xchg
cmp
dec
shl
testb
mov
test
mov
sbb
pop
jecxz
shrl
les
adc
iret
sub
pop
lods
mov
inc
push
sub
and
in
cmp
ret
cmp
jns
mov
dec
inc
popl
pop
inc
fmull
orl
dec
jmp
fnstcw
push
and
clc
enter
jno
ds
sub
mov
sbb
mov
pop
xchg
movsl
xchg
mov
in
mov
or
shll
les
mov
notb
cld
cmp
mov
movsl
sbb
int3
fistpl
xor
arpl
repz
push
inc
mov
orb
filds
out
movb
mov
sub
jae
xor
jbe
insb
lock
push
sar
jg
dec
pop
outsl
mov
in
mov
pusha
or
rcrb
scas
or
dec
fidivs
lret
mov
into
test
fdivrl
cmp
inc
popa
rcrb
xchg
jge
mov
ds
sbb
stos
int
adc
mov
mov
idiv
int3
sub
mov
out
or
lods
cmpsb
push
jae
sub
stos
cmc
pop
mov
lock
je
cmp
cld
cmpsl
lret
ljmp
dec
insl
leave
mov
in
pop
xchg
or
or
lods
pop
xor
into
mov
mov
mov
sbb
or
xorl
push
pop
mov
clc
mov
sub
gs
out
fcomip
xchg
bound
cmpsb
cwtl
jnp
int3
xor
inc
mov
stc
cmp
sbb
sbb
js
mov
xchg
inc
repnz
aam
out
lods
jp
mov
mov
or
arpl
jo
shl
test
dec
push
cmc
xchg
inc
or
rclb
push
nop
test
pushf
inc
cmc
movsb
or
cli
mov
addl
or
das
push
push
insl
pop
mov
and
lahf
in
xor
xchg
decb
lret
jb
stc
cmp
movsl
shrl
xchg
aaa
sarb
pusha
jns
cmpsl
es
lret
mov
rcll
imul
adc
inc
sub
pop
or
nop
xchg
jge
int3
push
jae
mov
das
jns
xor
outsl
or
xorl
pop
mov
sub
xor
ds
mov
jno
loop
int3
jl
mov
insl
cmp
add
xchg
testb
xchg
push
ficomps
and
dec
inc
jle
lds
and
pcmpeqd
cmpsb
lock
jl
jp
cmp
fsubr
jae
nop
jmp
add
or
lds
and
lret
fcoms
out
mov
cmpsb
mov
out
pop
jmp
xlat
fsubrl
xchg
cmc
cmp
scas
mov
jp
xchg
stos
stc
cmpsb
jecxz
fwait
xor
push
pushf
mov
sub
mov
jmp
mov
cmp
cmpsb
push
cltd
mov
pop
jl,pt
in
nop
or
push
xor
leave
enter
aas
ljmp
sub
jb
ret
xor
iret
xchg
pop
xchg
dec
push
clc
pusha
loope
push
pusha
div
pop
jns
fildll
loope
lcall
jo
into
lahf
hlt
pop
xchg
int3
scas
dec
push
out
pop
std
sbb
mov
or
and
fs
cmp
sbb
out
and
sbb
subb
popf
ljmp
test
dec
xor
and
dec
dec
add
lcall
sahf
and
leave
aad
hlt
xor
mov
push
or
in
or
cmp
cmp
push
mov
xor
cmpsl
out
sbbb
push
push
push
fnstcw
out
pop
push
jge
lret
pusha
out
pop
dec
dec
mov
add
cmp
dec
rcll
jno
data16
stos
clc
mov
sbb
loopne
lret
lret
push
icebp
or
xchg
sbb
ja
cli
fimull
in
lret
push
sbbb
xor
lods
sbb
push
mov
mov
pop
test
or
lcall
nop
adc
dec
out
mov
inc
movsb
mov
loopne
jno
adcl
push
es
mov
leave
cld
adc
sub
fwait
mov
mov
shll
fdivs
pop
call
xchg
cmovs
dec
sub
mov
iret
lods
or
cmp
pop
xor
adc
popf
fmull
jecxz
gs
fabs
scas
fwait
mov
jo
mov
xchg
xchg
mov
or
jg
enter
sbb
push
dec
sbb
rorb
ret
sub
mov
sete
dec
jb
adc
and
sub
jmp
mov
sbb
stos
sbb
int
pop
cli
xor
outsb
outsb
in
mov
subl
mov
fisttpl
jp
mov
add
daa
push
adc
loope
xchg
xchg
push
inc
xor
adcb
lahf
pusha
adc
dec
jno
imul
je
repnz
lods
std
adc
and
jb
mov
mov
pop
push
in
dec
xor
jle
and
outsl
xchg
add
push
jecxz
sub
cmp
divb
stos
or
shl
or
or
movsl
fiaddl
shlb
repnz
push
sbb
imul
mov
in
mov
push
imul
movsl
outsb
mov
mov
bound
fcomip
into
push
daa
out
or
nop
or
jmp
mov
xor
and
jle
leave
mov
rclb
hlt
das
mov
cmpsb
or
stc
add
add
out
or
sbb
outsb
xlat
xchg
jae
lea
fists
in
lcall
fidivs
notl
fcmovnb
mov
push
sub
sub
push
adc
je
aaa
loop
imul
cltd
and
sub
xlat
xor
insb
outsl
or
fdivp
shrb
cli
jae
mov
test
je
jecxz
lea
mov
shll
dec
repz
lahf
fisttpll
adc
or
mov
adc
jg
dec
jno
outsb
rclb
mov
mov
jp
push
xor
jge
dec
xor
lea
push
idivb
outsb
outsb
add
lcall
dec
sub
popf
lods
mov
pushf
out
mov
sub
inc
dec
ss
fcomps
in
aam
les
adc
sub
sbb
insb
das
scas
pop
and
pop
je
push
rorb
jg
scas
jle
lock
lods
mov
ret
ljmp
movsb
push
dec
inc
aaa
adc
aas
ss
loope
sub
dec
jae
xor
nop
inc
movsl
add
das
clc
std
mov
outsb
loope
mov
mov
loope
pop
jge
stos
shl
rolb
lahf
pop
push
out
jnp
pop
push
jl
mov
cmpsb
pop
jno
push
daa
lock
push
lcall
mov
push
add
xchg
mov
aad
imul
add
jne
cmp
cmpsl
pop
xor
cmpsb
dec
mov
loopne
cmpsl
push
pusha
orl
xor
pop
dec
mov
xchg
int
sarb
jg
and
in
mov
stos
pop
insl
add
mov
iret
cltd
stos
pop
nop
push
adc
es
sti
enter
and
subl
lods
add
push
jnp
fildl
sub
xchg
in
and
inc
dec
sbb
push
scas
clc
iret
jo
jmp
xchg
inc
or
adc
add
inc
xchg
xor
jns
dec
pusha
mov
pop
push
sbb
insb
ret
and
pop
or
out
stos
xor
inc
push
pusha
imul
in
jmp
dec
inc
cmpsb
sub
push
or
fisubs
sbb
jmp
imul
xchg
mov
push
cmp
data16
shlb
lock
xor
push
xchg
xlat
mov
inc
inc
pop
jmp
lea
jno
sahf
in
jns
sbb
das
cmp
push
imul
adc
pop
xchg
jnp
aad
sbb
jle
mov
loopne
add
inc
rcrl
and
sub
int
jg
arpl
adc
imul
dec
cltd
mov
fldt
filds
mov
and
xchg
jl
pusha
pop
cmpsb
sbb
xchg
pop
stos
or
pop
or
sbb
lods
mov
and
dec
mov
loopne
dec
das
leave
cltd
pop
je
das
dec
jno
cwtl
jno
mov
into
pop
xor
stos
sbb
dec
push
and
dec
sub
data16
cmp
sub
fdivrp
lret
imul
sub
inc
jmp
aad
cmp
pop
repz
xor
push
mov
add
mov
xchg
or
xchg
pusha
data16
nop
push
test
inc
sbb
repz
add
add
out
jp
insb
push
jno
or
fwait
push
std
out
out
fildll
data16
rclb
adc
scas
in
jo
cmp
dec
mov
push
lock
std
inc
jo
js
fincstp
sbb
out
add
popf
cld
int3
pop
and
push
into
push
int3
push
mov
add
scas
imul
out
aam
cld
pop
mov
mov
fwait
mov
cwtl
jmp
mov
lea
repz
jae
push
movsb
sbb
jb
out
and
fadds
jle
int
mov
adc
pop
in
orb
push
dec
mov
test
in
mov
or
lret
popf
dec
xlat
lret
subl
mov
hlt
lret
insl
jge
jb
jl
out
push
jae
fs
mov
lods
test
lds
xchg
aas
push
push
in
icebp
cmpsl
pop
test
add
push
xor
into
or
mov
xchg
pop
lock
fsts
inc
lcall
adc
xchg
sbb
out
movsl
aaa
aaa
aam
lcall
ss
inc
jmp
push
cmp
push
xchg
dec
in
push
pop
cmp
in
les
hlt
ja
inc
xor
pusha
mov
clc
inc
xor
jb
lds
je
loopne
scas
xchg
out
rcrb
les
push
xchg
rcr
aam
cmp
push
sbb
jb
mov
inc
cld
mov
sbb
testl
xchg
sub
adc
mov
iret
sub
test
rcll
aad
mov
mov
inc
cmp
xchg
mov
rclb
inc
mov
jae
js
out
in
movsb
mov
jns
notb
push
push
and
pop
push
or
sbb
mov
bound
mov
xchg
or
dec
pop
cld
add
xchg
xor
mov
inc
lret
aad
or
xor
out
mov
push
cmpsl
movsl
or
mov
add
mov
cs
sub
fldcw
mov
pop
rolb
nop
push
test
fisttps
pop
push
xlat
stc
mov
jno
sahf
xor
loop
adc
and
pop
inc
je
ret
js
loopne
sbb
pop
pop
inc
test
sahf
jmp
and
mov
in
shll
dec
pusha
xlat
popa
sti
push
mov
scas
add
mov
sub
rorl
push
jecxz
and
aas
fcomi
jbe
sahf
jge
sub
cld
mov
mov
out
out
jae,pn
sub
ja
aad
out
fwait
icebp
mov
inc
push
xor
lea
loope
movsb
or
mov
pusha
xor
or
adc
rcrb
mov
mov
xchg
mov
lret
fisubrl
pop
xchg
leave
ljmp
mov
sahf
jo
dec
lret
dec
arpl
lds
cltd
in
sub
cmp
hlt
cs
insl
inc
lret
ss
add
sar
sbb
lahf
in
mov
lods
mov
icebp
ret
inc
mov
mov
dec
aad
xchg
sbb
data16
pop
mov
sub
cmpsb
fs
and
adc
stos
das
xor
adc
or
xor
push
iret
repz
push
push
dec
mov
fildl
aad
lahf
fmull
add
pop
mov
mov
in
and
sbb
into
rcll
movsl
cmc
rcrl
lods
loopew
mov
push
xchg
push
jl
pop
frstor
shll
cmp
call
cmp
lret
outsl
lods
jmp
jne
lea
aaa
cli
pop
dec
and
ss
jno
dec
mov
in
push
mov
stos
xor
in
sub
cmp
out
dec
lods
mov
mov
fists
out
out
pop
lods
dec
push
cmpsb
inc
insb
cwtl
or
dec
jp
fisttpl
xchg
imul
test
mov
mov
and
js
pushf
bound
out
or
ficomps
jecxz
xor
fwait
push
test
cltd
or
lds
lock
jbe
inc
or
fimuls
nop
cltd
cmp
adc
rolb
sbb
bound
enter
clc
add
mov
and
popf
aaa
add
jbe
dec
mov
or
push
pusha
mov
pop
loopne
in
in
rcrb
fucomp
and
lahf
pop
jecxz
adc
ret
jp
test
xchg
es
xchg
pop
movsl
fnstcw
jecxz
sbb
or
pop
aaa
inc
inc
incb
xor
lret
int
cmp
dec
xchg
push
call
inc
mov
cmp
sub
and
xchg
and
xchg
and
xchg
jmp
add
xchg
xor
leave
outsl
xchg
loope
outsl
sbbb
jmp
loop
mov
sub
mov
mov
cltd
shlb
icebp
sbb
setge
mov
fnsetpm(287
jge
mov
pop
cmpsb
cmp
inc
ja
add
enter
lods
and
sub
fsubl
sub
mov
mov
icebp
sub
out
push
out
xor
neg
sbbl
inc
lock
cmc
test
sub
jmp
shrb
fs
ret
outsb
loop
or
xorl
adc
in
mov
jbe
dec
outsb
ret
pusha
push
xor
mov
push
cwtl
pusha
cmpb
or
sbb
je
jecxz
sub
bound
sti
cwtl
fcomi
pop
or
out
sti
push
sub
repz
xchg
adc
popa
mov
leave
jmp
inc
inc
cmpsb
jecxz
pop
scas
mov
or
stos
and
xchg
adc
lock
aad
add
xchg
and
shll
int3
xlat
xor
cmc
incl
shl
xor
xchg
mov
cli
inc
jne
xchg
jg
and
or
sub
add
into
icebp
cs
inc
lahf
and
je
and
ret
stos
pushf
jne
js
sub
xchg
stos
pusha
insb
sbb
or
pop
enter
out
lahf
addb
lret
sti
stc
push
es
sahf
in
repz
pop
notl
push
mov
cwtl
out
movsl
mov
das
fs
xor
nop
or
pusha
std
sbb
cmp
popa
scas
xor
in
stos
xchg
cmp
pop
sarb
test
lods
aaa
rcrb
mov
pop
test
out
stos
inc
test
into
inc
pop
mov
in
out
cmp
into
pop
push
popf
test
stc
sub
and
ljmp
aaa
cld
data16
xor
lds
insl
inc
out
pusha
adc
ss
mov
add
sub
pop
ss
pop
sub
roll
lock
adc
out
or
xchg
int
mov
aad
push
ret
mov
xor
clc
ljmp
jbe
push
pop
mov
and
nop
jmp
lods
aam
aam
das
enter
divl
leave
loopne
xchg
nop
je
adc
pop
sti
and
clc
ror
subl
adc
dec
aad
mov
cmpsb
ficomps
jl
ljmp
dec
cmc
incb
aam
imul
inc
outsl
sub
outsl
out
add
neg
pop
leave
sub
mov
scas
mov
adc
aam
push
int
and
ss
push
in
pop
testb
or
imul
arpl
inc
inc
sbb
rolb
mov
inc
arpl
jae
lcall
test
in
sbb
or
push
aas
movsl
sub
fistpl
aaa
jle
inc
cli
xor
sub
mov
adc
rcrb
xchg
xchg
adc
jo
jne,pn
pop
xchg
mov
inc
pop
pop
out
inc
mov
bound
out
mov
jp
add
int3
pop
jecxz
mov
mov
ds
jno
mov
or
cmpsl
arpl
xchg
in
lods
in
xor
insl
aam
jmp
shr
mov
hlt
fsts
fistl
loope
dec
and
aam
jno
outsl
mov
fcoms
xor
push
stos
jne
test
inc
sbb
leave
in
pop
gs
test
psraw
sbb
mov
sbb
pop
notl
ret
mov
les
lock
push
icebp
xchg
ja
call
fdivr
pop
mov
adc
dec
dec
je
mov
std
add
jp
pop
inc
dec
in
dec
adc
xchg
cmp
cmpsb
cmpsl
push
mov
clc
or
cmp
jp
cmp
fs
inc
imul
shlb
mov
data16
jge
hlt
arpl
jmp
or
js
dec
test
lret
scas
insl
arpl
mov
jnp
inc
xchg
inc
in
push
test
lret
insb
mov
sub
not
test
lds
jae
pop
push
int3
push
aam
mov
jle
into
and
out
jne
dec
scas
gs
xchg
mov
fistpl
mov
ja
ret
lods
test
adc
ret
pop
scas
push
daa
lock
cmc
cmpsb
cmp
in
out
test
xor
or
loope
lods
cli
dec
addr16
pop
pop
sub
popf
mov
data16
test
sbb
loope
pop
icebp
sbb
fmuls
sub
stc
ja
jns
aas
mov
push
mov
cli
mov
popa
outsb
bound
and
mov
mov
test
out
adc
lods
mov
xchg
and
shll
dec
sbbb
shl
sub
push
jge
xchg
shll
clc
jo
jp
mov
inc
int3
imul
nop
ljmp
xchg
mov
mov
dec
adc
sub
fisubrs
lcall
push
jb
lea
xlat
lcall
scas
rcll
movsb
inc
ret
sbb
pop
jmp
cmpsb
adc
add
cmpsl
xor
test
outsl
mov
add
sbb
cltd
cmp
mov
push
add
add
cmp
add
sub
iret
insl
inc
pop
push
push
mov
jle
mov
dec
inc
sub
fisttpl
lock
imul
jae
in
xor
faddl
loop
loope
push
mov
insl
and
dec
push
inc
aam
cmc
pop
push
push
fldl
das
pop
pop
adc
xor
leave
add
dec
push
mov
mov
in
fs
jecxz
sub
sbb
adc
aad
movsb
dec
rorl
cli
push
xor
test
dec
inc
mov
push
pop
stos
pop
or
cmpsb
movsl
mov
sti
sub
cmp
subb
mov
faddl
arpl
add
fdivrl
js
hlt
jo
fdiv
push
dec
insl
lcall
adc
lock
dec
clc
in
movsl
lds
and
lcall
mov
mov
mov
mov
lods
xchg
lds
jnp
out
xor
inc
shrb
pop
imul
inc
repz
add
scas
insl
jle
jae
sbb
jae
iret
xor
lock
cwtl
mov
jae
mov
cltd
fmuls
dec
and
out
mov
mov
push
movsb
test
add
jmp
or
push
push
lods
dec
inc
sti
jnp
xor
sub
scas
xor
lret
pop
imul
jne
hlt
addl
pop
imul
aaa
lock
test
mov
inc
xor
js
int
fnstenv
xchg
dec
mov
int3
nop
mov
xchg
lea
fisttpl
fxch
std
gs
xchg
sub
xlat
in
sub
xchg
stos
push
adc
inc
mov
jmp
fcom
mov
ftst
scas
loopne
mov
mov
jl
nop
incb
add
mov
mov
push
cpuid
cwtl
jnp
fldz
das
adc
cli
lock
rol
adc
xchg
push
shrl
pop
ds
pop
sbb
stc
mov
lret
rcll
xor
fwait
push
inc
add
and
lods
and
xor
aas
adc
ljmp
cltd
repnz
xchg
stc
xchg
mov
xor
xchg
xlat
shlb
mov
xsha256
fmull
and
xor
xchg
push
mov
inc
add
adcb
enter
test
orl
jl
xor
add
shll
nop
mov
mov
ljmp
divl
call
xchg
mov
pop
pop
pop
arpl
pop
fwait
icebp
jno
xchg
loope
mov
scas
push
push
or
sti
xchg
or
mov
lea
pop
ja
inc
pushl
lea
mov
sub
lock
cmp
sbb
or
outsb
sarl
popa
push
adc
stc
addr16
scas
pusha
fnstenv
lods
xchg
out
or
or
pop
push
xor
push
jb
daa
push
add
and
cltd
pop
in
xor
js
dec
fisttps
aam
add
out
cmpsb
or
ljmp
adc
mov
xor
or
into
sti
push
xchg
mov
mov
jae
aad
shr
cmp
jne
xor
push
mov
pusha
xlat
in
inc
pusha
jne
push
inc
fsubrp
inc
jnp
loop
cmp
pop
or
xor
test
inc
outsb
mov
ret
mov
mov
movl
ds
sbb
icebp
mov
push
pusha
jle
ss
ret
inc
mov
test
repnz
iret
ja
lea
mov
mov
fmulp
sti
fs
xchg
jmp
mov
arpl
add
das
pop
les
ja
out
add
dec
jmp
sub
mov
xor
pusha
icebp
lea
cli
out
inc
cmp
gs
cli
insl
loope
lret
mov
xchg
scas
test
stos
jo
imul
mov
mov
mov
popa
dec
mov
cli
push
jmp
cwtl
mov
sbb
xchg
cmp
pop
int3
and
jle
mov
and
push
out
daa
lock
addb
mov
push
add
enter
sub
mov
lods
adc
or
sti
mov
xchg
cs
js
sarb
pushf
leave
imul
out
les
add
add
cwtl
and
fs
push
xchg
daa
xchg
pop
call
adc
lcall
ret
mov
notl
lods
out
and
dec
xor
and
rolb
in
sbb
cmpsl
or
dec
jne
cmpsb
sahf
iret
outsb
aad
sub
bound
movsl
xchg
sbb
inc
ret
sub
leave
or
mov
ljmp
xchg
nop
loop
jmp
or
cmp
mov
cmp
xor
stos
test
sub
notl
push
inc
dec
pop
cli
dec
sarl
add
enter
lcall
psubw
add
sbb
push
inc
aam
xor
xchg
shl
mov
mov
mov
cmp
dec
push
lds
inc
mov
pop
loope
mov
mov
sti
push
jp
lcall
push
xor
jp
fisttpl
xor
push
lea
js
fldenv
movsb
sub
sbb
push
test
add
push
loopne
sub
jb
cmpsb
ja
pop
daa
push
pop
jbe
push
lcall
xchg
xchg
les
sub
rclb
adc
pop
or
mov
loop
sub
in
jns
fldl
xor
pusha
bnd
sti
inc
sub
inc
insb
repz
pop
decb
aad
lds
sub
jmp
test
rol
xor
pop
mov
or
aam
jp,pt
xchg
cmp
imul
xor
ja
loope
mov
mov
or
fdivrl
xor
ret
scas
mov
scas
ds
ss
push
movsb
jo
sub
stos
movsb
fsubr
mov
outsb
push
mov
xor
scas
mov
cli
fstl
int
push
xlat
cmpsl
clc
data16
push
sbb
push
xchg
xchg
add
xchg
popf
testl
jbe
popf
pop
out
xor
out
mov
and
out
je
pop
call
cmp
push
pop
dec
xchg
loop
push
loope
lods
mov
ret
roll
dec
cltd
jno
jp
sub
lds
test
sub
enter
push
rorb
mov
xchg
push
shlb
das
cmpsb
push
or
mov
cwtl
scas
mov
fsts
je
mov
fldl
mov
xchg
pop
dec
or
popf
cmp
sbb
mov
lcall
idivb
sarl
or
cmc
and
sahf
add
inc
lret
sarl
jno
in
icebp
dec
sub
cmp
inc
mov
stos
adc
and
inc
mov
fisubs
aad
dec
rcr
les
xor
es
add
or
cmp
sahf
pushf
cmc
push
push
iret
fldt
fbld
pop
dec
xchg
jge
jbe
cmc
loopne
inc
sbb
sub
ds
insb
push
push
and
outsl
repnz
pop
insl
push
and
cs
fs
cmp
stos
fcomi
adc
data16
inc
jp
and
jp
dec
sbb
xor
dec
jo
iret
dec
dec
nop
test
std
int
lcall
mov
out
mov
imul
and
xor
jl
inc
or
push
clc
sbb
shl
cwtl
mov
mov
xlat
mov
sub
push
xor
negl
push
adc
leave
xchg
xor
xchg
add
testl
xor
stos
negb
and
pop
mov
hlt
hlt
outsb
ss
dec
insb
in
add
lods
lcall
icebp
xchg
fiaddl
fwait
lahf
jmp
xchg
stos
sbb
jmp
ja
cmp
outsl
jae
xchg
aaa
mov
inc
xchg
mov
add
pop
lock
mov
inc
jmp
mov
sahf
pushf
adc
push
jecxz
fwait
insb
xchg
jo
jb
rcrb
sub
out
push
les
test
jnp
test
mov
aad
lcall
add
dec
ret
xchg
ljmp
cwtl
ja
mov
add
enter
iret
jnp
mov
and
sub
jo
push
pop
pop
pop
pushl
dec
jl
aad
inc
mov
sti
inc
ds
pop
fstpl
orl
mov
loop
in
lret
cltd
sub
fld
repz
orl
jo
pop
and
int
sbb
jge
dec
sahf
push
cwtl
lahf
out
dec
add
jns
fdivs
or
fiadds
xchg
sti
push
fildl
xor
or
stc
imul
add
mov
cmp
add
nop
mov
rcrl
mov
dec
aas
and
lods
movsb
mov
arpl
test
out
sti
add
adc
test
cmpsl
ss
push
xor
cmp
xor
sbb
mov
add
cmp
inc
int
fs
mov
insl
xchg
sub
xchg
aaa
sbb
mov
inc
mov
lods
nop
hlt
xchg
inc
or
out
push
movsb
inc
dec
aam
mov
cmc
add
xchg
std
xlat
jnp
iret
loopne
es
mov
sbb
les
add
xchg
cmpsb
fs
mov
xchg
adc
add
lret
jno
dec
dec
je
sub
inc
lock
mov
dec
loope
jmp
fiadds
scas
xchg
lods
adc
mov
push
mov
fcoml
mov
or
cld
in
xor
mov
bound
and
test
cld
and
push
and
sub
xchg
stc
enter
jge
test
adc
cld
mov
push
or
dec
cltd
out
sarb
mov
mov
insl
pop
int
cwtl
jle
sbb
stos
and
bnd
outsl
ret
mov
cltd
repnz
jle
in
test
adc
lcall
sub
jne
dec
xor
cld
cltd
movsl
enter
sub
scas
inc
mov
cld
out
je
jbe
cmpsl
nop
mov
les
add
xchg
push
jg
and
arpl
pop
lret
fidivrl
inc
or
lcall
cmpsb
adc
cmpsl
ret
out
ja
pop
and
mov
fsts
mov
ss
jmp
clc
leave
inc
cli
or
sub
jecxz
testl
out
std
cmc
xchg
add
cmp
popf
test
xchg
mov
mov
cltd
push
scas
xor
fisubl
movsl
int3
pop
lods
pop
sub
pop
out
dec
jecxz
push
push
push
rcll
in
xchg
push
lods
testb
mov
in
cmc
xchg
adc
sbbb
mov
jmp
cmp
outsb
xlat
leave
cmp
sbb
xchg
mov
stos
stos
rorl
sarl
push
repz
sub
inc
out
pop
dec
or
out
cmpsl
pop
andb
and
movsl
sub
pop
xor
lock
dec
daa
pop
pop
es
jno,pt
rclb
popa
push
mov
jns
andl
mov
jle
mov
sbb
pushf
or
mov
shlb
in
movsb
inc
sbb
sbb
cmp
dec
cmp
add
mov
xchg
mov
push
stos
loope
call
sub
xchg
cmp
and
insb
repnz
fiadds
pop
std
je
aad
pop
vcmpss
loop
int
inc
sbb
rorb
jl
into
movsb
sahf
cmp
ffree
aad
cmp
jno
cmp
xchg
xor
movb
int3
adc
inc
ret
outsl
popa
movsb
lock
pop
xor
lcall
jge
arpl
or
mov
roll
les
insb
inc
pop
add
push
rol
xor
inc
jecxz
mov
dec
in
or
mov
shrl
pusha
sbb
cmp
stos
ucomiss
loop
repz
ret
mov
or
ss
xchg
loope
pusha
add
movsb
xchg
mov
mov
nop
mov
jne
addr16
push
mov
inc
push
shlb
mov
or
inc
mov
jge
mov
hlt
enter
rclb
mov
frstor
addr16
push
or
inc
call
mov
jmp
add
mov
xor
pop
sbb
xchg
adc
aad
fs
sub
push
xchg
mov
aad
mov
repz
or
fwait
ret
enter
test
popf
addl
pop
cmp
cld
jo
in
mov
and
sbb
inc
jmp
ds
mov
loope
loop
cld
call
jns
inc
pushf
jp
fucomi
call
out
movsb
lea
sub
dec
sbb
movsl
fcompl
xchg
pop
inc
push
ret
test
sbb
in
push
shrl
push
pop
cwtl
xchg
daa
movsb
dec
aad
in
fcmovnu
stos
xor
pop
aam
inc
daa
subb
push
scas
movsl
leave
cmp
inc
sbb
popa
cmp
loopne
pop
lret
fsubrs
cli
lcall
loopne
xor
mov
add
fnsave
call
lret
sbb
aad
add
daa
push
mov
push
xchg
push
jle
add
sbb
pop
iret
mov
inc
sub
int3
mov
fnstcw
lods
cmp
jne,pn
or
xor
gs
mov
pop
mov
std
iret
rclb
inc
ret
mov
push
jp
outsb
xchg
test
push
sbb
insl
and
repz
push
jne
sub
push
inc
lahf
adc
cli
test
call
lods
dec
mov
pop
out
inc
cmpsb
push
sahf
imul
int
aas
push
xchg
cmp
cmp
mov
ljmp
int3
or
fidivrs
aaa
aam
xor
negl
test
es
lret
popl
push
xchg
sub
mov
invd
dec
pop
mov
lock
and
lea
sbb
ret
ss
scas
in
orl
mov
imulb
push
jmp
ljmp
sti
mov
ret
data16
mov
cmc
subb
test
sub
sub
sahf
cmp
js
and
lods
cltd
daa
cmp
out
rcl
cmp
imulb
fmulp
loope
mov
jmp
dec
stos
in
into
pop
lock
adcb
xor
popa
dec
pop
mov
scas
repz
sub
xchg
xor
mov
xor
outsb
shl
int
push
jb
mov
inc
dec
jmp
fwait
rcll
cli
xchg
pop
jecxz
outsl
pop
inc
pushf
or
loop
pop
and
cld
mov
pop
lcall
lcall
ja
incl
std
aam
mov
jg
jecxz
xor
leave
repnz
xorb
mov
sbb
jae
lock
inc
pop
ret
mov
jnp
fmull
ret
ret
icebp
aaa
rcrb
mov
mov
push
pop
call
pop
xor
leave
add
mov
cmpl
xchg
imul
jecxz
add
pop
push
mov
mov
mov
push
mulb
mov
andb
or
mov
notl
jb
divl
andb
mov
mov
adc
mov
scas
or
jb
repz
pop
mov
jb
jne
fs
mov
pushl
mov
push
dec
adc
negb
mov
push
sub
jge
adc
inc
mov
repnz
js
sub
dec
insl
push
sub
fwait
xor
or
inc
lea
xor
es
inc
scas
dec
outsb
cmp
ljmp
clc
sub
mov
dec
jp
add
inc
ljmp
mov
test
mov
or
cmpsl
inc
or
stos
inc
cmp
cmp
out
pop
cmp
mov
cmp
mov
call
xor
pop
jge
xchg
sbb
test
xor
in
mov
fsub
cmp
mov
cmp
enter
sub
sub
sbb
inc
pop
inc
mov
pushl
adc
and
inc
bound
xor
and
mov
jmp
jae
cmp
lods
sub
lods
inc
cmpsb
fldlg2
ljmp
sbb
mov
es
pop
push
sbb
adc
mov
cmp
xor
fwait
lret
xadd
mov
cmc
mov
std
ljmp
jmp
dec
mov
pop
cmp
pop
fstpt
xchg
jg
sub
dec
dec
xchg
push
iret
loope
push
gs
aam
fistl
mov
mov
insl
lahf
jne
shl
aad
pop
loopne
lahf
iret
movsl
xchg
sub
sbb
es
jne
add
xchg
inc
mov
mov
incb
fwait
in
pop
iret
pop
push
mov
data16
adc
imul
dec
iret
scas
nop
mov
mov
lret
enter
popf
idivl
xor
stos
xchg
and
mov
mov
push
mov
sub
mov
push
xor
mov
mov
cwtl
sti
sub
push
jl
call
loopne
cmpsl
push
pop
or
push
xor
jae
imul
pop
repnz
aam
shrl
int3
js
mov
jp
lahf
enter
test
xor
cmp
mov
cmp
pop
nop
or
xchg
loopne
sub
addr16
fildll
jge
popf
add
pop
jmp
pop
cltd
cmpsl
adc
cmp
add
into
push
mov
test
push
xor
inc
ja
dec
sbb
div
pop
and
cld
sbb
fs
xchg
testb
mov
fbld
into
leave
sbb
shlb
leave
rcll
in
ret
or
pop
mov
and
data16
sbb
cmpsb
shrl
gs
mov
mov
add
jb
cmp
inc
push
scas
dec
aaa
rcrb
or
test
sar
jb
out
xor
sbb
adc
add
lahf
push
movsb
out
testl
or
incb
push
mov
inc
test
fisubs
and
xchg
stc
cwtl
cmpsb
mov
jg
cmp
ja
mov
fisttpl
add
in
ja
dec
xchg
push
jle
push
addb
jns
mov
fcmovnu
loopne
icebp
or
aaa
adc
pop
mov
xchg
mov
sbb
fs
fadd
adc
fstpl
cmp
cmp
mov
xor
push
mov
js
xchg
sbb
dec
adc
mov
mov
push
dec
jno
outsb
mov
jb
xchg
gs
sub
lods
ret
addr16
or
push
sub
or
nop
roll
stc
clc
cmp
add
mov
jae
jl
mov
xchg
mov
fsub
imul
jae
cmp
inc
iret
push
mov
xchg
inc
xor
mov
mov
das
xchg
ljmp
push
inc
xchg
and
imul
outsb
test
hlt
fs
lods
mov
inc
roll
scas
fmulp
das
sbb
jbe
and
push
and
jecxz
into
outsl
and
cltd
call
jge
sub
push
sbb
scas
jl
jnp
dec
mov
or
cmpsl
fcomps
sbb
icebp
int3
testl
roll
cwtl
icebp
pushw
cmpsb
das
pusha
fstpl
sub
cld
pop
sti
xor
sarb
add
pop
mov
stos
xchg
fst
xor
xchg
xchg
sbb
cmp
and
mov
lods
push
inc
hlt
lods
hlt
xor
fneni(8087
pop
addb
xorb
movsb
adc
hlt
icebp
cs
and
push
fyl2x
insb
add
pop
fsts
or
and
faddp
scas
cmpl
mov
out
push
insb
xor
cmp
mov
rcll
dec
adc
sub
mov
out
jle
cli
mov
jae
inc
loopne
xor
sarb
or
add
popa
pushf
iret
or
enter
mov
loopne
and
stos
mov
jl
dec
addb
lcall
aas
mov
insl
and
cmp
outsl
out
in
mov
mov
mov
inc
test
push
mov
mov
pop
fildll
mov
fwait
jb
cs
xchg
add
lret
dec
aad
outsb
or
xchg
fimull
sbbl
add
pop
jmp
sbb
test
inc
or
mov
cwtl
push
mov
push
mov
jns
mov
js
cltd
out
push
xorb
lods
pushf
sbb
loope
adc
and
loop
fs
out
lret
push
mov
jb
adc
adc
cmpsb
pop
add
xorb
imul
xchg
adc
lds
cmpsl
imul
xchg
dec
xlat
cwtl
outsl
adc
push
mov
outsb
stc
add
fs
cmp
notb
cmp
stos
dec
lret
ret
cmp
xor
cmpsb
fisubs
inc
mov
outsb
insb
insb
dec
jle
clc
and
xor
push
mov
addr16
out
pop
mov
mov
cwtl
cld
scas
in
mov
add
mov
mov
ret
push
pop
bound
pop
inc
jns
movsb
cmp
and
jnp
inc
xchg
sub
mov
inc
jne
lcall
fsubs
push
maxps
mov
inc
cmp
pop
push
in
repz
pop
xchg
cmpsb
mov
add
and
popf
mov
mov
sbb
ds
testb
popf
sahf
dec
xchg
and
jp
ja
cmpl
ret
inc
shrl
add
sbb
ja
xor
je
lods
lods
add
push
or
xchg
in
lds
fists
dec
stos
iret
imul
subl
repnz
test
or
cmp
adc
mov
cld
pop
and
nop
xchg
ret
in
xlat
mov
inc
ror
jge
andl
ret
xchg
push
push
aam
popf
jmp
mov
inc
mov
lods
mov
and
fwait
mov
push
xchg
push
movb
mov
add
xchg
rorb
adc
test
call
inc
lret
xchg
mov
add
cld
dec
cmp
call
inc
cmpsb
sub
out
rclb
push
jl
bound
cli
rcr
jb
mov
sub
fnsave
add
inc
push
mov
and
push
sub
fmull
pop
fs
dec
jmp
fprem1
jp
repnz
jbe
mov
inc
shld
aad
mov
dec
push
das
mov
dec
outsl
fidivl
sbb
ljmp
scas
push
popf
rolb
mov
jno
add
int
sub
sbb
jl
add
xor
and
fldenv
pop
sbb
out
jno
mov
stos
jnp
mov
mov
push
sub
xor
push
jecxz
ficoml
inc
nop
adc
add
fucomip
aas
addr16
fcom
ss
adc
sti
insl
testl
mov
sub
push
nop
fdivrs
ret
jnp
or
push
or
lcall
push
cmpl
fstl
cmp
and
sarl
lahf
daa
std
jb
leave
push
push
sub
popf
movsb
sbb
fs
and
lret
out
leave
jnp
adc
movsl
dec
pushf
mov
repz
jecxz
dec
pop
dec
mov
push
movsb
pop
add
pushl
nop
sbbb
dec
add
and
sub
lahf
mov
dec
xor
add
enter
insl
ja
aas
and
mov
jae
add
push
loope
sub
cmp
ficoms
test
add
sub
outsl
pop
add
or
mov
call
movsl
ja
push
mov
or
xor
inc
scas
jns
sbb
movsb
rolb
clc
xchg
add
cmpsb
push
lea
jno
xchg
insb
pop
or
aas
pop
test
push
mov
cld
pop
pop
pop
dec
insl
dec
mov
adc
mov
mov
cmp
ja
mov
adc
out
or
jl
sbb
pop
sub
lods
int3
jne
out
and
aas
add
push
adc
push
inc
cli
iret
mov
pop
mov
imul
pop
call
daa
inc
cmp
dec
out
add
flds
das
inc
pop
cs
ss
call
push
andl
mov
imul
pop
lock
arpl
enter
les
sub
cmp
test
xor
xlat
add
cltd
xlat
add
and
gs
dec
addl
cmp
mov
fsubrl
insl
repnz
sbb
enter
push
inc
loopne
ja
jge
mov
ss
shr
jnp
inc
push
lods
mov
mov
daa
dec
iret
fs
inc
int3
add
mov
mov
mov
xor
mov
sub
cs
mov
jp
mov
repz
test
inc
mov
push
xor
cmpsb
pop
sti
xchg
ja
js
pop
adc
cmp
cmp
dec
push
bound
dec
mov
push
into
cltd
aaa
adc
mov
sbb
into
adc
insb
mov
mov
pop
mov
pop
mov
xchg
insb
out
adc
inc
shlb
or
int
test
cmpsb
daa
cli
lahf
shlb
cmpsl
or
and
rcr
in
addb
hlt
aas
testl
cwtl
mov
insb
faddp
mov
dec
fstps
inc
js
xor
xchg
ja
clc
mov
add
adc
sbb
or
pop
fucompp
push
sub
fiadds
gs
shlb
sub
int3
outsb
int
dec
outsb
cmp
mov
leave
fistl
cld
addl
pop
mov
push
outsb
lea
sbb
mov
and
jg
iret
mov
jle
fbld
jl
adc
mov
cmpsb
dec
push
or
mov
out
rclb
cmp
pop
pushf
inc
stc
pop
mov
out
scas
dec
add
mov
push
mov
ffreep
push
mov
fcoml
sbbl
rorb
les
dec
std
xor
test
test
jmp
sarb
subl
or
std
lret
push
push
in
addl
lcall
out
push
call
out
in
xlat
jp
hlt
xchg
sahf
sub
imul
int
xchg
int
addr16
mov
cmp
push
mov
dec
dec
shlb
repnz
scas
inc
sbb
xchg
cmp
rcr
je
inc
fbstp
push
pop
nop
push
dec
mov
lret
xchg
mov
inc
mov
push
and
std
aaa
out
fldenv
cltd
enter
cli
push
aaa
movsl
data16
fdivrs
or
mov
lahf
sub
movsl
xor
bound
int3
sub
lret
fisubrl
push
std
mov
cmovne
cld
mov
sub
clc
xor
cld
push
nop
scas
push
rcr
pop
das
adc
repz
and
add
clc
imul
leave
pop
xchg
cwtl
roll
pop
fimull
int3
repz
cltd
outsl
lods
mov
jle
cmp
mov
mov
inc
mov
dec
jo
jge
repnz
sarl
inc
sti
dec
push
inc
cltd
mov
dec
and
add
scas
inc
hlt
xchg
push
sub
clc
testl
fcom
filds
das
les
sti
rcr
shrb
push
cmp
lods
or
push
push
pop
sub
mov
xchg
jne
inc
or
xor
es
pop
xor
mov
scas
dec
movsl
enter
mov
int3
dec
jg
push
xor
dec
mov
test
mov
inc
xchg
pop
xchg
jno
scas
mov
mov
lods
and
xlat
xor
pop
sbb
pop
sbb
pop
mov
sti
int
jle
push
xchg
int3
add
push
xor
dec
push
jg
push
pop
mov
inc
mov
adc
jb
ja
dec
in
lret
dec
movsl
and
outsb
push
pop
lahf
sbb
mov
xchg
cmpb
cmp
ret
repz
test
push
ss
sahf
push
xor
xor
cmp
je
daa
lds
push
mov
out
ret
lcall
sub
pop
je
cs
lods
fsts
mov
scas
popa
sbb
inc
daa
pop
push
inc
xor
pop
add
rcr
mov
out
mov
inc
pop
fisubs
push
xchg
cmpsl
pusha
push
fbld
push
adc
imul
lahf
fs
nop
ret
mov
mov
push
jecxz
arpl
cmpsl
sbb
push
je
imul
xor
cmp
fstpl
cmpsl
cmc
adc
mov
mov
mulb
xchg
je
sub
cmp
imul
mov
push
movsl
icebp
mov
iret
inc
cmp
cmp
lds
cmp
mov
cmp
add
and
mov
sbb
cltd
xchg
mov
xor
xchg
push
outsb
or
add
adc
loopne
and
jmp
gs
add
add
and
fcoms
mov
cmp
mov
nop
leave
add
cmc
imulb
cmpsb
ret
and
dec
fsubs
stos
imul
andb
jne
push
scas
push
push
pop
mov
lds
cwtl
xlat
push
add
int
ja
push
jb
mov
icebp
icebp
or
mov
hlt
jnp
aad
icebp
cmp
ds
add
jbe
lds
lds
mov
ret
test
movsl
dec
mov
mov
sub
neg
cli
scas
aaa
jo
fcomip
cmp
jns
mov
mull
mov
lea
xchg
inc
out
mov
push
out
aas
out
test
push
jecxz
imul
fldt
pop
push
roll
inc
xchg
mov
inc
or
sub
mov
insl
sbb
xchg
sbb
xchg
mov
sbb
cmp
std
cmpl
iret
jbe
std
fstl
inc
mov
dec
adc
cmpsl
pusha
pop
aaa
xchg
scas
push
lret
mov
sub
mov
in
hlt
push
bound
push
mov
stc
add
pop
xchg
sub
insb
aam
mov
mov
mov
int3
ret
jb
mov
adc
lret
lea
xchg
arpl
repnz
mov
cmp
pop
int
xor
imul
xchg
jb
in
xchg
jb
sbb
dec
das
fistpll
inc
jge
lods
jo
mov
aaa
push
hlt
add
mov
mov
cmpsb
bound
stos
divb
lcall
testl
movaps
pop
cmp
cwtl
xor
and
sub
push
pop
test
stos
jnp
sti
xor
dec
icebp
loope
inc
xchg
ret
in
xchg
mov
filds
pushl
dec
push
xor
jo
add
mov
xchg
and
lea
jnp
sti
push
pop
fimull
loopne
mov
clc
adc
sub
xchg
push
call
fsubrs
rcrl
popf
xor
nop
cmp
or
or
add
popa
mov
shl
outsl
adc
cmp
jb
arpl
shrb
mov
clc
sarl
flds
clc
push
popf
rolb
fld
push
insb
sti
test
push
xchg
roll
pop
sub
push
xchg
lods
jno
mov
xlat
adc
fisubrs
mov
cwtl
and
xor
xlat
add
sahf
and
add
xorb
push
sub
jbe
add
dec
push
cmp
insl
add
jge
and
or
cmp
adc
push
cmc
pusha
out
adc
xchg
jb
mov
das
rorl
adc
and
rcrl
inc
fisubs
mov
or
js
addr16
xchg
fnstcw
lods
aad
mov
fmull
add
int3
fxam
mull
pop
add
int
fs
dec
push
lcall
mov
xlat
and
sub
mov
xchg
jnp
inc
jnp
dec
or
iret
jne
mov
add
aas
jb
repnz
dec
les
xor
inc
and
sub
in
cmp
mov
lret
gs
or
push
cmp
push
imul
mov
inc
adc
adc
inc
push
lcall
cmp
mull
push
imul
cli
sub
es
cmc
xor
ret
jne
mov
push
shll
test
mov
and
in
in
lret
mov
mov
js
nop
pop
add
or
imul
hlt
jmp
cmp
ja
ljmp
jp
xor
mul
mov
pusha
imul
cmp
or
jb
mov
push
sub
fdivrs
pop
mov
hlt
movsb
fists
mov
jle
in
sbb
adc
sub
mov
adc
cmp
adc
into
enter
lods
stos
push
stos
andl
insl
cwtl
adc
stos
xchg
inc
inc
xchg
inc
aas
xchg
sti
xor
add
cmp
gs
pusha
into
aam
aam
dec
xchg
stos
mov
cmp
lods
xchg
cmp
std
inc
xchg
push
clc
mov
sub
icebp
jle
jle
pop
xlat
or
mov
dec
dec
lret
in
repz
cmp
cmp
sub
into
or
push
icebp
push
in
xor
shlb
push
mov
pushf
clc
fldt
add
jge
jmp
mov
mov
jp
mov
out
dec
xor
rcrl
and
push
mov
mov
push
sub
and
pushf
mov
scas
std
in
in
into
pop
cmp
mov
pop
je
mov
shl
push
mov
pushf
dec
xor
mov
pop
je
popf
xor
mov
shl
loop
fisttpll
lock
andl
mov
xchg
shl
test
cmpsb
jb
mov
orl
ror
mov
arpl
jno
data16
cmp
cld
dec
xchg
adc
cmp
in
in
int
sti
xor
insl
mov
jg
jnp
es
adc
mov
xchg
dec
test
cltd
loop
jl
jl
add
movsl
lock
pop
mov
push
mov
lea
rcr
inc
push
pop
les
movsb
mov
sahf
jl
mov
inc
dec
xchg
jbe
int3
in
dec
daa
hlt
gs
int3
push
pop
stos
loopne
adc
fists
add
fwait
pop
dec
pop
cmp
cmp
xchg
imull
cmp
in
decl
cltd
jg
inc
es
mov
mov
inc
jne
lret
inc
cmpsl
inc
xchg
imul
jge
sub
mov
aas
fldcw
insb
xor
daa
mov
outsb
mov
pop
stc
xor
test
dec
mov
mov
aad
or
insb
rcrl
fiadds
scas
xor
notb
shrb
lret
pop
or
push
int
enter
inc
dec
mov
jb
in
mov
mov
mov
icebp
sub
xor
xor
loopne
movsl
ljmp
fs
push
icebp
push
sub
cltd
inc
jecxz
sbb
stos
mov
mov
push
popf
rcll
iret
sub
mov
fldl
dec
imul
out
inc
push
mov
xor
fwait
pop
repz
neg
add
arpl
cmc
aas
mov
popf
xchg
in
jmp
in
or
or
dec
je
add
jb
push
popf
loopne
orl
xor
idivb
bound
aas
cld
sar
jg
sbb
mov
stos
mov
cmp
lret
mov
mov
in
insb
push
mov
movsl
mov
and
inc
aas
in
mov
sbb
mov
cs
mov
xor
xchg
dec
aaa
int
mov
add
sub
stos
fstpl
add
lret
roll
js
and
add
pop
push
loopne
mov
call
sbb
mov
scas
cmp
ljmp
push
fs
or
popf
mov
sbb
mov
enter
push
adc
push
cmp
jne
fs
mov
sub
loope
ret
je
ds
daa
pop
xchg
call
es
dec
sbb
std
cld
imul
pop
int
loop
mov
add
add
test
les
push
ret
fsubl
hlt
sbb
outsb
mov
xor
fwait
pop
pop
pop
lds
push
add
jbe
popf
sbb
mov
imul
xchg
jnp
push
int3
adc
or
mov
dec
cmpsl
and
mov
bound
rolb
push
adc
dec
pop
sbb
out
xor
mov
mov
pop
xor
jae
andb
jle
dec
icebp
mov
je
dec
or
jne
clc
test
or
fcompl
jo
ja
mov
jmp
sbb
push
sti
aaa
xchg
repz
das
loopne
fdivs
aam
push
lock
filds
fnstcw
out
push
fsubrs
xor
mov
cli
mov
pusha
sbb
mov
push
cmp
aam
fcmovb
lret
sub
popf
sahf
adc
xor
aad
pop
xlat
sbb
xchg
xlat
mov
cmpsl
incb
out
daa
pop
jno
hlt
lds
pop
stc
jbe
addr16
and
xchg
and
arpl
mov
in
xchg
mov
dec
imul
aam
push
mov
mov
jmp
and
ja
add
negl
adcb
movsb
ret
xlat
and
push
dec
push
icebp
and
cmpsl
sub
push
repz
arpl
xchg
mov
stos
jmp
in
dec
jae
imul
add
add
test
mov
loop
scas
stos
sti
bswap
inc
int
pop
pop
bound
and
mov
mov
xlat
mov
mov
subb
cmpsl
inc
and
les
jg
pushf
xlat
loopne
loopne
xchg
test
push
jp
mov
pop
mov
cmp
mov
insb
push
cmp
push
nop
or
rolb
push
in
cli
mov
std
mov
mov
call
mov
sti
test
into
aad
mov
push
pop
movsl
push
inc
push
in
mov
ficomps
push
push
mov
mov
pushf
test
insl
sbb
add
adc
mov
lahf
xchg
loope
cmc
lahf
dec
popl
push
test
add
data16
mov
add
es
aad
fldl
lcall
sub
test
sub
mov
ret
pop
mov
scas
mov
jp
inc
pop
jl
fwait
mov
orb
mov
adc
inc
ror
mov
ja
leave
push
xor
fs
dec
mov
std
and
mov
cli
in
xchg
hlt
rcr
mov
fsubrl
jmp
xor
push
inc
mov
mov
and
fs
sbb
dec
scas
add
add
sahf
push
iret
inc
jb
jae
addr16
mov
sub
pop
xchg
lock
push
sbb
or
xlat
xor
push
ljmp
out
fucomi
daa
mov
adc
mov
test
inc
aas
pop
lcall
jle
in
xor
pop
fldcw
mov
add
pop
mov
xor
leave
aam
out
push
outsl
faddl
mov
shll
xchg
xor
pop
pop
lahf
stos
sbb
out
ror
jecxz
fildll
arpl
aad
mov
jae
leave
loop
jae
call
xchg
das
xchg
insb
mull
pop
xor
or
outsb
pop
sub
out
iret
or
iret
adc
mov
pushf
bound
xchg
jmp
out
push
push
test
and
cmp
jle
insl
repnz
xchg
mov
add
ja
int3
push
sub
dec
lds
pop
outsl
xor
and
dec
bound
pop
hlt
pop
inc
xchg
pop
jg
adc
das
inc
rclb
pusha
dec
push
pop
or
ficoml
shlb
sub
dec
sahf
andl
or
std
xor
lret
dec
leave
clc
add
dec
in
add
xchg
sti
ja
mov
lretw
jnp
pop
xchg
mov
mov
add
pop
mov
fisttpll
and
mov
add
mov
jbe
in
add
adcb
notl
and
movsl
cmpsb
es
loop
jge
hlt
call
data16
enter
movsl
mov
rorl
push
push
lcall
out
mov
and
push
cmp
push
mulb
mov
push
sahf
mov
loopne
pop
cmc
mov
incl
test
jecxz
leave
add
push
pop
test
and
xchg
jl
sub
adc
idivl
adc
lret
in
or
xchg
repz
mov
bound
int
xor
mov
mov
paddw
mov
pop
fisttpll
mov
inc
and
fisttps
or
pop
ret
ja
or
xor
mov
fisubrl
int
xchg
test
dec
popa
ljmp
loop
pop
mov
rclb
push
mov
dec
cld
push
test
addl
mov
sub
fs
sub
fcmovu
ljmp
addl
ss
or
inc
movsl
shl
cmp
adc
fstl
and
or
in
cmpsl
mov
into
push
negl
std
daa
adc
xchg
pop
leave
repz
ljmp
das
popf
loop
sub
mov
insl
xchg
mov
mov
pop
pop
sbb
push
push
rolb
mov
jb
lds
jl
call
pop
iret
push
mov
cmp
inc
xor
xchg
mov
pop
mov
popf
ja
loopne
dec
mov
aad
arpl
or
jmp
xorl
adcb
push
pop
fld
imul
jle
dec
sarb
mov
sbb
cmpsb
into
fildl
pop
mov
aam
jl
mov
cmc
ja
daa
inc
in
mov
add
roll
or
mov
movsl
or
mov
mov
push
sub
sbb
icebp
idivb
mov
push
and
xchg
push
aaa
pop
push
mov
push
sbb
add
mov
dec
je
fdivrl
adc
pop
sbb
es
dec
adc
stos
xchg
push
sti
lock
cmp
mov
and
xor
inc
cmp
or
lods
cld
pop
test
loopne
sub
push
mov
mov
push
int
xchg
add
add
shr
call
aam
das
arpl
mov
cmp
aad
fs
pop
add
js
xchg
aas
inc
add
add
movsl
pop
mov
mov
sbb
out
ret
jp
sub
in
test
into
loop
loopne
mov
mov
pop
jg
push
pop
cmp
pop
dec
push
push
iret
mov
jns
cwtl
loopne
mov
sub
dec
xor
cmc
stc
test
in
push
jnp
adc
push
or
jno
mov
pop
jg
outsl
insb
push
sbb
movsb
fists
dec
outsb
pop
fistps
bound
fnsave
call
cmp
cli
movd
add
mov
xchg
inc
jge
in
not
scas
stc
out
jmp
icebp
adc
pop
xchg
push
std
jl
cmp
pop
push
xchg
je
mov
adc
cmp
movnti
xor
dec
and
xor
pop
imul
lahf
enter
movb
inc
cmpsl
out
mov
cli
add
and
mov
test
cli
jmp
xchg
mov
adc
cmpsb
inc
mov
xor
adcb
fwait
rcrl
jns
je
scas
andl
push
incb
cmp
repnz
or
movsl
cltd
push
jb
pop
mov
lcall
mov
test
or
cmpsb
xchg
or
sbb
notb
xor
mov
inc
sti
shll
jns
and
aam
or
lods
inc
xchg
lock
rorb
mov
pop
xchg
imul
xchg
pop
lcall
repnz
pop
xchg
outsl
pop
jno
nop
jmp
adc
ljmp
and
insb
test
frstor
sbb
cwtl
lret
ja
jbe
pop
sub
lea
and
sub
into
jne
arpl
add
lods
outsl
lods
xor
lea
lods
inc
cmp
sub
dec
sbb
incl
pop
repz
mov
fwait
dec
repz
repnz
add
popf
and
test
fs
ljmp
aaa
push
mov
xor
jnp
sbb
movsb
lods
xchg
jecxz
mov
pushf
test
and
cmpsb
push
sbb
decb
push
aam
xlat
sub
stos
cmp
mov
in
sub
jmp
pop
xchg
ret
jp
les
ljmp
push
dec
pop
add
imul
insl
fiadds
adc
aad
push
inc
pushl
and
in
fadd
icebp
dec
push
push
jae
or
int3
sti
in
mov
aas
or
jno
into
jb
inc
cmpsl
outsl
cli
push
pextrw
sub
fmull
jge
xchg
shrl
xlat
jo
mov
movsl
rcrl
mov
inc
cli
orb
mov
pusha
or
jbe
cmp
mov
cld
push
adc
scas
sub
push
ss
leave
inc
add
cwtl
or
inc
mov
sub
std
mov
fidivrl
mov
dec
ret
movsl
rclb
into
mov
iret
mov
scas
xor
cld
stc
pop
xor
inc
cli
loop
cmpsb
pop
lret
ret
sbb
push
sbb
bound
sub
inc
outsl
aas
in
int3
and
dec
xchg
out
sbb
jle
mov
inc
lret
mov
std
jno
iret
inc
ret
jno
test
or
pusha
cmpsb
out
into
add
gs
sub
mov
stos
push
dec
add
mov
pop
adc
adc
iret
and
pop
repz
call
and
jg
push
mulb
lods
clc
mov
gs
insb
inc
lock
fistl
incl
or
insl
loope
std
data16
xor
cmovp
adc
enter
mov
lods
dec
aam
insl
ja
mov
cmp
jle
mov
pop
sar
shl
cwtl
mov
loop
mov
dec
xchg
jo
pushf
out
ficoml
add
sarl
and
jne
adcl
xlat
pushf
dec
int
in
sub
mov
cs
mov
movsb
mov
repnz
in
push
jp
out
cmpsl
adc
push
push
jmp
mov
fiaddl
sti
popf
cltd
push
mov
pop
pop
daa
aaa
mov
jp
add
ja
cmp
sti
bt
gs
and
xchg
ja
inc
fildll
into
loop
lcall
mov
cmp
jecxz
fiadds
mov
into
mov
mov
dec
sub
dec
mov
fists
jns,pt
mov
pop
movsl
mov
dec
push
aam
adc
pusha
rcrb
pop
push
add
dec
or
sub
mov
or
lret
lea
sbb
push
cwtl
xor
add
stc
clc
mov
jnp
sub
stos
cmp
pushl
rclb
out
inc
xchg
fisttps
roll
adc
push
insb
fcoml
cli
mov
add
sub
js
push
mov
xor
cmpsb
push
pushl
fsubrl
cmp
sbb
fcmovne
jns
imul
push
jp
stos
xor
sbb
inc
sub
or
xchg
push
mov
out
mov
into
add
out
or
add
rcrb
xchg
sbb
mov
and
mov
addr16
mov
xchg
mov
dec
int3
cs
enter
insb
into
jae
sub
mov
les
loop
in
xchg
jmp
loope,pt
and
out
mov
sbb
fs
xchg
dec
pop
mov
adc
fcomi
ja
rcl
dec
lahf
mov
mov
mov
and
cmp
push
push
dec
xor
xchg
sarl
movsl
cmpl
mov
mov
jle
nop
or
lret
into
loop
aad
cmp
ret
xchg
adc
faddl
jecxz
add
xchg
sbb
and
add
popa
push
scas
pusha
adc
push
test
and
xchg
pop
shlb
xor
data16
pop
adc
pop
in
jo
xchg
lods
jmp
mov
mov
or
aad
and
jecxz
data16
aam
jbe
adc
mov
daa
push
pushl
ret
imul
or
cld
fmull
pusha
inc
jl
je
add
in
pop
mov
jae
inc
add
aaa
push
nop
lret
sbbl
cld
and
add
push
xchg
enter
in
inc
xchg
out
mov
fadd
aas
ficompl
rolb
add
jno
xchg
daa
add
divb
call
or
adc
test
sarl
and
jmp
lock
dec
in
andb
adc
xor
loopne
dec
and
daa
xorb
sti
lods
int
outsb
mov
pop
test
test
cmp
cmc
sub
movsb
add
push
push
or
push
rcll
in
aam
repnz
sub
decl
sub
xor
xorl
or
mov
lds
mov
icebp
cmpsl
rclb
dec
sbbb
or
pop
push
mov
pushf
adc
int
cmp
repz
xor
jne
pop
push
leave
ja
inc
cmp
mov
into
adc
push
lcall
nop
mov
iret
cmpsl
jo
sub
jnp
scas
cmp
int3
hlt
add
mov
movsb
xor
addr16
cmc
stc
lcall
xlat
cmp
jmp
addr16
pop
mov
sub
and
stos
in
dec
clc
inc
popa
sbb
roll
pop
cwtl
xchg
insl
pop
gs
lock
lds
mov
mov
jb
ret
lea
inc
dec
mov
test
pop
pop
std
stc
cmpsl
xor
lret
aad
pop
in
fsubs
pushf
push
mov
add
pop
fists
sub
aas
jle
outsb
adc
xchg
xchg
mov
pop
stos
push
push
mov
or
or
xor
or
out
inc
pop
xlat
lahf
dec
jno
xlat
out
gs
xorl
movsl
fucomp
mov
lea
push
in
dec
stc
fnstcw
fs
inc
mov
stos
outsb
jl
pop
sub
fcoml
push
jg
daa
or
mov
ja
lds
xchg
dec
cmp
and
cmc
cmp
inc
mov
dec
dec
and
mov
dec
xchg
sub
inc
outsb
inc
xor
pop
mov
mov
mov
and
mov
sbb
rol
ss
mov
add
lret
inc
gs
lcall
push
jmp
jbe
inc
jg
into
enter
cmp
mov
inc
mov
lea
dec
push
jecxz
cltd
les
adc
sbb
sti
out
add
adc
and
cmp
lods
push
pop
sub
sub
stos
lret
push
sbbl
call
mov
in
clc
and
dec
xchg
faddl
lds
out
sub
mov
push
dec
sahf
mov
mov
addr16
push
xlat
xor
xor
les
notb
aad
lods
pop
pop
xor
mov
nop
adc
mov
lods
shl
sbb
pop
mov
jae
mov
sti
dec
lea
and
insb
xor
scas
mov
inc
shll
ljmp
adc
cltd
fs
rorb
movsb
cld
stos
or
add
mov
int
add
leave
fistps
pop
lods
sub
jne
inc
or
mov
enter
mov
xlat
dec
lret
xchg
inc
dec
lock
or
cmpsb
and
and
in
dec
ror
je
mov
dec
mov
aas
jecxz
xor
in
push
xchg
jbe
adc
cmp
push
jns
int3
es
mov
ss
mov
add
jo
cwtl
jge
jl
addr16
xchg
out
pusha
jmp
sub
sbb
and
jnp
inc
sub
sbb
jne
and
or
dec
movsb
cmpb
in
cwtl
cmp
in
cmp
push
cltd
dec
lods
mov
loop
loopne
cmp
testb
xor
mov
lds
cld
cmp
jb
ffree
loopne
dec
mov
push
xor
bound
inc
stos
daa
cmovno
cli
std
ljmp
or
call
aas
les
js
gs
lret
lcall
test
rclb
call
sub
mov
in
aam
xor
in
jecxz
test
xor
mov
leave
mov
push
pop
daa
in
xchg
pop
sbbl
jae
iret
adc
add
cs
jle
sbb
icebp
jbe
mov
rcrb
jp
mov
ja
xor
pop
rcrb
popf
outsb
subb
xchg
mov
std
cmp
ret
out
sbb
jnp
icebp
and
add
pop
outsl
dec
push
or
lds
aaa
mov
sarb
mov
mov
dec
push
adc
inc
cvtdq2ps
testl
loopne
aas
stos
inc
push
loop
pop
icebp
call
jl
push
out
pop
lods
fadd
pop
jp
cli
icebp
fdivl
mov
idivl
pushf
repnz
ljmp
push
mov
xchg
int3
and
adc
xor
mov
push
out
mov
fcoml
fdivrs
jmp
inc
cmc
sub
mov
cmp
xchg
es
pop
and
mov
sbb
cli
sbb
xor
fsubs
sub
jno
mov
add
insb
or
dec
orl
aad
push
movsl
push
addr16
fistpll
mov
sahf
dec
push
jecxz
and
dec
lret
addr16
imul
mov
in
add
leave
fmuls
mov
aad
add
sub
xchg
xchg
and
stc
std
call
rcrb
fisttpll
test
stos
loopne
and
mov
mov
add
addb
out
mov
adcb
mov
mov
stc
xchg
cltd
std
stc
loope
je
loope
arpl
sbb
test
or
in
cmp
addl
jmp
dec
inc
sarl
adc
movl
fiadds
cmp
mov
inc
mov
cltd
pop
pop
in
fs
mov
popa
inc
sub
fcomi
bound
shrb
push
sbb
xor
mov
pop
add
sub
into
or
mov
xchg
inc
insb
mov
mov
movsl
dec
and
rorb
ret
in
loopne
stc
jb
adc
ret
xchg
test
lcall
pop
adc
inc
or
pop
bound
fisubl
pop
sbb
mov
pushf
int
sbb
dec
ret
add
jmp
mov
call
jns
pushf
mov
xor
mov
imul
add
adc
jp
repz
push
mov
test
sub
jge
lods
popf
mov
imul
test
fsubrs
jo
dec
pushf
or
mov
test
and
mov
and
dec
jno
mov
xchg
fsubrp
jae
addr16
pop
mov
jno
fldt
clc
xchg
xchg
ret
lahf
add
adc
xchg
pop
aad
dec
dec
dec
call
xchg
sarl
adcb
pop
insl
test
mov
pop
pop
mov
es
or
xchg
mov
xchg
xchg
cmpsb
ds
dec
mov
div
ds
mov
cmpl
inc
adc
push
or
pop
adc
sub
xor
mov
fadds
insl
inc
cmp
ja
jmp
dec
mov
vcmppd
and
aam
lods
fmulp
mov
nop
out
ja
dec
fsubl
push
push
ret
loope
push
pop
or
cli
sub
lods
mov
mov
shl
dec
movb
cld
imul
shll
cld
sub
add
ds
f2xm1
lcall
mov
test
push
imull
lock
sbb
jg
sbb
dec
inc
inc
dec
mov
push
addl
pop
ja
loope
adc
arpl
ret
lock
jecxz
jge
xor
imul
pop
sbb
fnsave
and
xchg
out
cmpsb
int
and
into
js
adc
adc
loop
or
cmp
test
sahf
mov
mov
xchg
mov
add
loope
iret
insl
jno
fsubrl
out
inc
pop
inc
lock
insl
xor
dec
xchg
ret
xchg
push
bound
mov
js
inc
dec
call
subb
or
sahf
push
fabs
das
sbbb
popf
adc
fcomps
in
mov
jbe
mov
push
aam
mov
lods
and
loopne
gs
pop
fs
fsubrs
pop
xorl
js
insl
mov
cld
adc
cmp
jg
add
xor
xlat
jmp
fstl
mov
xor
mov
sti
cltd
mov
test
movsb
xchg
test
test
fsubs
leave
push
or
mov
cmc
push
shrb
jns
cmpsl
movb
mov
jns
out
cmp
pop
pop
cmpsl
xchg
mov
or
mov
int
adc
in
aaa
add
sbb
lahf
fst
bnd
in
jns
xor
sahf
xor
sub
div
lds
loopne
fwait
push
cmp
xchg
imul
out
cmp
hlt
xor
test
ja
test
addl
inc
fdivs
mov
or
pop
cltd
into
cmpsb
adc
testb
mov
rclb
dec
out
daa
dec
adc
ss
imulb
mov
stos
pop
fcompl
and
push
mov
insl
add
loope
xchg
pop
bound
popf
jno
dec
in
je
ret
jo
xor
push
pop
push
ds
popf
pop
jge
into
mov
test
dec
mov
test
or
cmp
inc
call
xchg
mov
pop
sbb
movsl
fsubrs
pop
inc
lods
adc
jg
jge
ret
movsl
call
int
jae
pop
push
notl
stos
and
xor
clc
xor
sbb
push
cs
repnz
pop
shlb
cmp
mov
or
jo
lcall
in
lret
jns
cmp
push
jns
js
xor
rorb
fwait
mov
dec
std
ja
xchg
int3
pop
mov
aaa
adcb
es
clc
shlb
repnz
pop
enter
out
cwtl
sub
and
out
dec
xor
pop
pop
outsb
inc
xor
subl
inc
add
idivb
inc
or
das
stos
int3
testl
xor
sbb
add
pop
loopne
dec
in
push
out
xorb
sub
mov
sbb
push
leave
imul
jmp
mov
inc
ss
push
jnp
pop
push
inc
jg
jbe
popf
scas
scas
icebp
sbb
test
outsl
les
repz
mov
jp
in
sbb
mov
popf
dec
jmp
lret
pop
scas
sub
ret
dec
ret
je
shr
hlt
add
push
push
fbstp
pop
lcall
jp
fdivs
mov
movsl
xchg
insb
cs
pop
push
xchg
add
push
clc
int3
loop
pop
mov
and
push
fcomps
lods
sbb
lret
sbb
imul
adc
inc
in
xchg
mov
mov
into
mov
enter
jg
std
ret
sub
inc
int3
xchg
popf
mov
push
sub
mov
fs
mov
xchg
arpl
enter
cmp
daa
add
clc
inc
cmp
inc
cmp
adc
popf
imul
int3
mov
ljmp
divl
cli
mov
cwtl
mov
mov
test
pop
and
insb
js
rol
mov
fs
mov
test
jle
aas
sarl
outsb
xor
popa
rcrl
pop
nop
mov
arpl
and
mov
cmp
xlat
and
pop
push
xor
fstpt
adcl
pop
fstpl
popa
adc
es
jmp
je
xchg
popa
pop
movsb
xchg
fisttps
addr16
sbb
cmp
add
push
jne
adc
add
inc
popf
push
xor
rorl
push
mov
sbbb
loope
lods
jne
push
push
dec
scas
pop
inc
std
ficoml
pop
div
call
xchg
adc
mov
dec
out
mov
xor
xchg
xchg
test
shrl
jbe
push
mov
xor
xor
lret
aaa
cmpsb
bound
ss
adc
ret
and
push
jle
jmp
dec
pop
lea
js
sbb
fcompl
stos
and
sbb
push
and
dec
mov
and
sub
outsl
jmp
mov
jmp
cmp
mov
xor
ja
inc
jns
adcl
lret
in
xor
inc
jae
popa
mov
mov
jb
cmp
loopne
xchg
out
xchg
pop
xchg
pop
mov
cmp
arpl
push
xchg
out
das
adc
inc
mov
jmp
and
imul
scas
das
dec
dec
lret
adc
inc
lahf
sub
imul
mov
out
mov
jg
shl
leave
sbb
dec
xchg
fs
push
sbb
xchg
orb
int
xorl
pop
loopne
mov
sahf
in
add
int3
mov
xchg
inc
cmp
xchg
add
leave
fldt
leave
je
pop
cmc
xor
adc
mov
inc
fs
sbb
std
stc
or
inc
inc
fadd
loop
mov
lret
mov
mov
cmc
and
lock
and
ja
hlt
mov
nop
aam
add
inc
cmc
inc
lock
scas
and
dec
test
stos
dec
sub
xor
cmpb
mov
pop
cmpb
stos
push
stos
into
and
arpl
cmp
and
scas
incb
lds
add
inc
mov
pop
ffree
mov
mov
mov
inc
fcomps
mov
loope
add
add
repnz
aas
ret
add
andl
sub
mov
test
or
stc
push
mov
mov
out
push
mov
ret
fwait
inc
mov
adc
xor
jp
push
clc
insl
cmp
add
pop
mov
add
or
xor
shlb
jp
ja
std
sbb
imul
lds
push
xchg
insb
rcrl
insl
push
xor
mov
inc
lahf
movsb
popf
jp
ret
mov
dec
shlb
rcl
fdivrs
or
sub
daa
push
pop
fwait
movsb
sbb
adc
jp
pushf
inc
jne
stc
test
mov
xchg
lea
je
cmpsb
or
pop
dec
bound
adc
enter
cwtl
ret
xchg
lret
cmp
adc
je
pusha
ljmp
outsb
sbb
fstpt
std
pop
imul
push
and
mov
ror
clc
inc
xchg
adc
lret
jl
mov
mov
cld
nop
sarb
adc
int3
pop
inc
or
ficompl
push
in
cli
add
pop
sub
adc
xchg
mov
mov
xchg
pop
out
daa
imul
loopne
cmp
fcompl
incb
repz
push
push
enter
pop
mov
and
test
ss
mov
jns
lods
dec
xchg
mov
cmp
shll
sub
push
and
push
pop
int3
rorl
adc
mov
mov
add
and
xor
mov
sub
push
lock
xchg
add
es
je
dec
popa
in
loop
sahf
add
lret
jmp
adc
scas
fs
xchg
insb
xchg
inc
addr16
rclb
or
mov
xchg
pop
ja
adc
cmpsl
in
cld
frstor
or
test
cmpl
out
addl
pop
and
adc
pop
adc
in
das
mov
and
fcomi
jnp
push
push
xor
xor
xchg
fisubs
mov
ret
int3
or
rcrb
insb
fs
movsb
dec
push
lret
ret
pop
cmpsl
mov
stos
sub
enter
std
aas
int
xchg
adc
lcall
push
or
dec
popa
add
xchg
jae
fcom
mov
pop
sbb
sub
inc
aaa
push
inc
push
ds
bound
ljmp
cmp
or
xlat
add
sbb
fistps
pop
in
sarb
imul
cmpsl
out
int
xchg
push
jae
jbe
push
aas
push
mov
jno
hlt
jge
push
mov
ss
jae
and
jmp
inc
cwtl
mov
stc
add
mov
loopne
call
scas
mov
mov
sarb
sub
inc
cwtl
cwtl
add
mov
push
push
sbb
cwtl
pop
mov
cmp
jge
aas
and
je
mov
cwtl
mov
xlat
xor
inc
xlat
jae
add
imul
push
pop
sub
es
jbe
cmp
xor
popf
inc
mov
inc
pop
int
ss
add
mov
stos
push
adc
out
insl
sbb
xchg
mov
xor
lcall
pop
std
jmp
and
test
fsubp
xchg
stos
cwtl
pop
or
sarl
insb
int
sbb
add
jb
mov
call
repnz
xchg
lds
je
mov
sahf
dec
adc
mov
add
jecxz
fdivrl
aam
ljmp
notl
stos
orb
mov
mov
dec
testl
sbb
cwtl
cli
add
pusha
and
shrb
push
aad
mov
in
fcmovnu
out
out
ljmp
or
jae
loopne
dec
das
jecxz
les
outsl
push
add
or
push
inc
jno
pop
loope
mov
lods
jbe
mov
int3
rcll
inc
inc
or
xor
stc
sub
shll
imul
movsb
insl
jp
mov
iret
dec
jecxz
outsb
jmp
fldcw
test
pop
popa
pop
leave
mov
ficoms
repnz
pusha
out
dec
fadds
enter
mov
aad
je
stos
cmp
xchg
mov
xchg
sbb
sarb
jae
lods
neg
andb
fnstsw
stos
ret
cwtl
ds
icebp
lock
gs
dec
fstpt
adc
mov
dec
mov
les
adc
mov
add
xchg
aaa
xchg
pop
mov
enter
pop
fiadds
dec
cltd
daa
jne
test
and
fucomi
xchg
mov
or
leave
mov
dec
cmpsb
and
loope
jmp
sahf
xor
dec
dec
lea
aas
lahf
ss
jp
dec
sub
dec
pop
push
and
xor
and
leave
push
loop
cmp
xchg
popa
push
hlt
push
xchg
mov
popf
fdivrl
dec
pusha
in
stos
mov
pop
pushf
cmpsb
jae
addr16
repz
jecxz
inc
inc
sti
pop
es
pushf
xchg
fbstp
jle
xchg
ret
xchg
jmp
lock
jl
xchg
jp
shr
sbbb
jbe
push
cwtl
iret
sub
dec
pop
push
aas
mov
and
adc
add
xor
and
jbe
fsubrs
cmp
cmp
subl
sub
fs
inc
movsb
fmuls
xor
loopne
shll
and
outsl
push
mov
ljmp
aas
xchg
mov
push
cwtl
adc
test
cmp
jmp
jbe
bound
aas
les
push
cmpsl
or
add
cs
push
xor
dec
dec
cs
dec
rcrl
out
aad
xlat
in
mov
inc
out
sub
push
shll
inc
push
jno
imulb
fs
pop
push
in
std
nop
movl
jns
adc
cmpsl
sub
outsl
inc
inc
cmp
jns
std
popa
push
or
negb
pop
ror
pop
imul
arpl
mov
dec
cmc
shll
into
pop
jae
cmc
dec
dec
lcall
fwait
or
pop
sbb
adc
mov
sbb
xchg
and
push
cmc
outsl
mov
sub
fsts
aam
sar
mov
mov
enter
cmp
and
outsb
jne
testb
push
frstor
out
mov
lahf
fs
jbe
jl
icebp
pop
shr
jns
repz
push
dec
mov
rcl
out
fs
in
pop
pop
out
popa
imul
lock
fisttpll
push
and
pop
adc
sbb
add
pop
xchg
fimuls
xchg
push
adc
sbb
aas
outsb
mov
dec
int3
cmc
popf
jno
xchg
mov
aad
xchg
fnstsw
fildll
and
mov
aad
inc
push
pop
insl
movsl
lahf
cmc
call
sbb
pusha
das
jge
jmp
imul
loopne
jns
cmp
loop
adc
xchg
add
fxch
push
sbbb
sarl
cmpsl
dec
xchg
mov
cmp
loop
push
jge
insl
mov
adc
or
stc
mov
mov
mov
xchg
cwtl
pop
pop
repnz
movsl
rcrb
mov
push
les
ljmp
cmp
adc
jp
xchg
dec
xlat
call
xchg
int
push
sbb
popa
fisubrl
dec
xor
cmp
sub
mov
mov
xchg
push
pop
aaa
dec
mov
inc
nop
sub
and
js
and
shlb
out
mov
mov
js
mov
cmp
pushf
dec
mov
adc
in
lret
popf
xchg
dec
inc
pop
mov
mov
pop
cltd
sub
push
js
or
or
adc
jb
cmp
jns
pop
jmp
je
inc
test
mov
rcl
mov
loop
push
fnsave
adc
jmp
or
mov
testb
or
orl
fiadds
ja
mulb
cld
adc
cmp
lret
mov
mov
add
jns
mov
or
into
and
dec
pusha
test
jl
rcr
add
rcll
fidivrs
sub
ljmp
pushf
adc
int3
push
bound
dec
lods
adc
ja
filds
push
negb
jbe
into
lret
iret
jne
mov
aad
mov
push
push
fs
xor
cmp
sbb
adc
mov
inc
mulb
out
inc
sbb
orb
mov
call
inc
jne
sahf
rcrb
cmp
ss
das
dec
push
jne
scas
cmc
and
lcall
push
inc
mov
fisubs
add
imul
adc
dec
test
jo
sarl
inc
adc
pop
push
xor
in
addl
mov
inc
loop
mov
shl
lcall
sahf
movsl
test
jb
fmul
sub
xchg
sub
xchg
adc
lods
push
mov
adc
inc
popw
shlb
pop
sar
pop
sub
cmp
call
sarb
inc
mov
add
jns
repnz
cmp
pop
adc
out
sar
shll
mov
and
mov
orl
insb
fmull
pop
cmp
add
cmp
loopne
je
adc
and
jl
fcompl
push
fisubs
jle
std
mov
mov
aam
xchg
orb
cs
mov
subl
cld
xchg
sbb
add
add
push
xchg
push
mov
xlat
jmp
int3
mov
mov
mov
ss
push
xorb
inc
imul
cmp
push
je
mov
outsl
or
mov
cmp
loope
notl
rcll
mov
fucomi
icebp
and
std
mov
in
pop
mov
jmp
adc
shl
movsb
in
add
sub
push
xchg
pop
or
sar
loope
test
pop
cld
insl
xor
ss
and
mov
movsl
cmc
sbb
and
inc
fnstsw
adc
jns
inc
xlat
js
cmp
inc
dec
pop
lea
filds
and
and
mov
push
ret
popa
add
hlt
clc
push
mov
xor
xchg
jmp
adc
add
xchg
iret
movsl
cmp
or
in
jmp
xchg
fwait
lret
in
add
xor
mov
jbe
push
ret
leave
sub
test
add
add
jmp
push
scas
push
fldenv
sub
sub
repz
out
lcall
or
movsb
lahf
rcrb
pop
mov
mov
out
push
xor
imul
sub
daa
adc
scas
xor
cmc
enter
scas
sub
pushf
or
pop
stos
jae
ret
or
inc
cs
movsb
sbb
imul
in
mov
push
inc
ret
inc
pop
sbb
mov
dec
or
pop
lods
adc
mov
clc
push
cmp
push
mov
into
pop
sbb
test
stos
pop
lret
test
mov
and
lods
dec
lahf
mov
and
insl
mov
add
add
fs
out
cwtl
sbb
jg
nop
mov
xlat
push
pushf
popf
mov
je
push
mov
sbb
cs
mov
mov
pop
sub
in
shll
shrb
xchg
shl
call
pop
xchg
inc
arpl
fs
leave
pop
cmpsl
std
or
mov
rorl
push
dec
xor
imul
add
xchg
fwait
add
sbb
nop
mov
mov
mov
imul
pop
pop
or
int
xchg
cmpsb
addb
push
xchg
popa
jmp
sub
fsubl
mov
je
fdivrs
loope
and
in
cmp
bound
or
xchg
inc
sub
xchg
inc
outsl
jns
cmc
test
mov
sub
hlt
lret
mov
xor
arpl
sahf
push
cli
mov
fsub
dec
out
jns
xchg
popa
pop
dec
xchg
outsb
pop
cld
or
gs
add
or
adc
jne
cmp
mov
mov
mov
adc
xchg
dec
adc
xchg
mov
stos
add
es
dec
inc
xor
inc
imul
lret
in
pushf
xchg
js
dec
adc
sub
fs
jge
bound
and
sub
dec
imul
mov
push
in
stos
jle
sbb
xchg
mov
test
mov
adc
bound
xor
mov
cmp
lea
xchg
out
popf
mov
dec
imull
push
orl
sub
out
outsb
outsb
mov
hlt
sbb
insb
xchg
test
pop
imul
jae
imul
imul
mov
js
das
leave
xchg
fsubl
xchg
and
movsb
lds
inc
pop
cltd
pop
and
out
insl
sbb
aaa
sbb
scas
sub
and
rorl
out
popf
push
xchg
xor
mov
incb
pop
jb
cwtl
and
mov
scas
shlb
push
ljmp
cmp
roll
mov
inc
stc
rorb
jb
push
or
cmp
xor
jns
subl
cmpsl
movsl
mov
adc
mov
mov
test
adc
ss
imul
pushf
mov
scas
arpl
jo
mov
cmc
repz
jecxz
and
insb
imul
mov
mov
mov
adc
sub
xchg
das
in
sti
add
repz
pusha
fs
aam
mov
movsl
jnp
jecxz
daa
add
add
add
and
add
xor
add
nop
add
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jmp
mov
lea
nop
mov
sldt
add
test
cmpsw
push
std
repnz
sar
lahf
in
mov
xchg
pop
movzwl
add
and
mov
sub
mov
mov
mov
add
call
jbe
in
add
push
call
pop
mov
es
mov
pop
pop
pop
xor
movzwl
sub
mov
push
mov
popl
mov
sub
mov
add
sbb
sub
jne
add
jmp
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
fsubr
jne
in
and
pushf
movsl
negl
push
push
mov
lcall
in
loopne
mov
mov
insl
dec
out
sti
xchg
repnz
jo
cmpsb
mov
sbb
dec
out
pop
push
mov
sbb
push
enter
push
jo
out
sti
int3
fs
push
int3
and
aad
dec
jb
mov
cld
inc
enter
dec
out
sti
inc
pusha
sbb
inc
dec
int
jo
push
xor
mov
out
sub
mov
mov
mov
icebp
aas
test
push
mov
test
pop
cmp
rorl
dec
fistps
lahf
xchg
pop
add
sti
inc
or
fdivl
push
add
loope
es
jecxz
inc
push
outsl
push
out
sti
or
push
mov
cld
inc
dec
adc
push
test
xchg
div
jnp
ljmp
lods
mov
and
sti
pop
jnp
add
inc
hlt
lret
les
add
xchg
movsb
dec
inc
out
adc
and
or
mov
cld
inc
hlt
adc
ds
cs
and
shlb
sbb
mov
dec
das
jge
push
inc
push
push
jnp
cwtl
mov
aas
push
and
mov
mov
cmp
adc
sub
cld
inc
mov
and
add
pop
cmp
test
aaa
or
mov
mull
fmul
js
clc
xchg
jge
hlt
cmp
dec
mov
sub
icebp
lret
xchg
jns
hlt
cmp
sub
inc
gs
add
subl
out
ds
insl
mov
testl
mov
xchg
sub
lds
imulb
addb
test
push
add
push
loopne
add
cld
xor
dec
xor
and
or
sbb
arpl
mov
cmc
mov
ficompl
or
repz
mov
push
stos
loopne
call
pop
out
add
inc
jp
in
fsubr
push
in
sbbl
push
or
ljmp
icebp
sub
outsb
mov
xor
int
int3
pop
mov
das
mov
jb
scas
cs
pushf
mov
mov
fisubrs
adc
dec
cmp
adc
out
xor
das
xchg
cltd
push
popf
clc
mov
sub
push
xchg
aas
pusha
loope
pop
cmc
stos
mov
bound
cwtl
inc
jo
xchg
mov
sub
loope
pop
cmc
stos
rcrl
pop
jb
mov
sahf
inc
xor
cmp
jle
fisubrs
repz
ljmp
ret
loop
scas
divl
in
filds
pop
cwtl
sarl
pop
jb
outsl
cmp
scas
pop
jno
mov
jb
popf
adc
pop
sbb
cmp
or
fidivrs
pop
mov
fisubrs
pop
jno
mov
xchg
scas
pop
test
mov
sub
pop
pop
popa
loop
jb
cmp
push
ja
adc
ss
jne
scas
jl
push
inc
xchg
and
scas
pop
pop
fiadds
mov
scas
pop
pop
push
mov
repz
pop
jb
outsl
inc
push
push
mov
repz
mov
add
pop
sbb
cmp
inc
mov
xchg
in
pop
or
jmp
int
mov
mov
fiadds
clc
sbb
and
push
clc
sub
cmp
pop
mov
fisubrs
leave
push
popa
adc
jb
cmp
or
fidivrs
pop
jne
ss
jbe
scas
lcall
mov
leave
pushf
fbstp
scas
jl
push
inc
xchg
leave
in
pop
pop
push
mov
pop
jb
popf
adc
bound
cmp
scas
pop
test
mov
fs
mov
pop
jb
clc
adc
scas
pop
jb
scas
inc
or
popl
jno
jl
jecxz
in
xchg
mov
adc
jo
cltd
in
out
mov
add
cmp
stos
dec
xor
mov
in
vpsrad
jb
mov
add
cmp
or
pushf
leave
push
or
jne
cmpsb
adc
pop
sbb
sbb
jo
cltd
in
vcvttpd2dqx
cmpsl
jl
dec
aaa
pop
dec
std
dec
ljmp
cmpsb
adc
pop
sbb
sbb
jo
cltd
in
idivb
mov
jo
scas
pop
jo
cmpsb
adc
pop
sbb
sbb
jo
cltd
in
testb
rcll
dec
jo
mov
mov
mov
mov
jb
add
push
or
jne
cmpsb
adc
pop
jne
dec
jno
scas
pop
add
fisubrs
sbbl
sbb
jo
mov
lcall
inc
or
loopne
xchg
mov
or
lahf
pop
adc
push
cmp
jne
pop
or
mov
pop
sbb
decb
sahf
mov
jb
scas
pop
or
pop
outsl
pop
jb
scas
xor
sbb
cltd
repz
pop
jb
incl
je
daa
cltd
fistpl
mov
mov
mov
popf
test
ret
jae
pop
jb
rclb
fisubs
mov
cmp
jnp
xor
scas
pop
or
in
jb
hlt
test
cmp
dec
enter
scas
jmp
mov
aam
sbb
mov
rclb
in
addl
dec
in
xchg
dec
fimuls
into
pop
sbb
std
push
sub
mov
add
and
lahf
add
and
pop
jo
aas
or
clc
mov
adc
scas
pop
jb
scas
pop
jb
scas
pop
jb
scas
pop
jb
scas
pop
jb
scas
pop
jb
scas
pop
outsb
in
repz
in
pop
inc
ljmp
jb
outsl
adc
scas
pop
jb
scas
pop
jb
scas
pop
xchg
out
mov
jb
scas
pop
jb
scas
pop
jb
scas
pop
jb
scas
pop
jb
scas
pop
jb
mov
ret
sbb
mull
mov
rolb
enter
fwait
push
test
cmp
int3
cli
inc
jnp
sbb
lods
in
pushf
movsl
jmp
in
sbb
adc
sub
cmpsb
divl
fdivr
stc
jns
lret
adc
jge
cs
nop
jl
repz
lahf
int3
jnp
int3
in
mov
add
or
emms
stos
sub
cmpsl
mov
aad
jecxz
lcall
into
das
push
sub
bound
inc
sbb
cs
sub
push
jns
xchg
stos
insl
loopne,pn
and
pop
xor
dec
push
popf
aas
stos
mov
lock
shll
mov
out
add
inc
xlat
out
stos
jbe
ljmp
dec
nop
frstors
addr16
int
cmpsb
in
call
mov
mov
in
dec
rcrl
je
pop
mov
add
add
add
or
add
sbb
pop
or
inc
pop
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
or
cld
pop
or
mov
or
fstps
add
pop
or
int3
pop
or
jmp
add
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
addb
add
icebp
pop
or
add
add
pop
pop
or
add
add
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
adc
sub
add
lahf
add
add
push
pop
cmp
add
stos
mov
sbb
dec
and
jg
js
and
and
enter
jl
sub
inc
addb
mov
rorb
sub
adc
mov
xor
mov
fwait
or
adc
adc
mov
cmp
inc
or
push
push
je
imul
movsl
add
testb
int3
and
rolb
mov
sub
sbb
push
add
push
arpl
je
add
mov
xchg
add
mov
mov
lods
jb
add
movsb
sbb
mov
and
cwtl
xchg
xchg
enter
jb
mov
int3
sbb
and
and
js
mov
or
insb
sbb
and
pusha
xchg
pop
enter
add
cmp
dec
add
inc
xchg
add
enter
jb
cmp
cmp
cld
add
and
xchg
lock
call
test
add
or
mov
cltd
push
call
testb
and
fdivl
mov
push
xor
pop
jmp
sub
cltd
cmp
dec
or
mov
xchg
and
and
jl
add
mov
addl
shlb
push
push
call
enter
jne
xor
rcrb
mov
add
cwtl
jge
rorb
mov
add
out
lea
mov
sbb
inc
cmp
ds
jne
js
adc
push
into
pop
nop
add
push
inc
add
inc
pop
enter
call
xchg
test
mov
ljmp
mov
mov
add
add
mov
sbb
add
or
or
push
push
add
xchg
gs
nop
push
andnps
mov
out
jbe
add
bound
xchg
add
sbb
push
scas
nop
cli
cmp
lock
push
add
adc
sbb
scas
fldl
push
daa
xchg
orl
add
mov
cmp
jne
push
or
fucomip
pop
jmp
mull
call
mov
push
pop
pop
mov
je
add
clc
mov
add
mov
hlt
into
sbb
add
xchg
int
pop
push
and
sbb
sarb
mov
stos
cmpl
inc
inc
gs
cmp
xchg
cmp
into
sarl
xor
sub
ss
sub
stc
pop
jl
xchg
adc
shr
clc
mov
sahf
test
or
or
cmp
stc
clc
xchg
pop
sbb
xchg
mov
inc
add
cmp
jge
pop
mov
decl
fmuls
adc
push
push
push
xchg
rolb
clc
mov
test
add
shll
push
dec
add
andb
cmp
mov
call
ljmp
aas
mov
add
push
popa
cmp
hlt
push
cmp
clc
add
jns
mov
sahf
addl
pop
dec
add
dec
and
and
add
cwtl
jecxz
or
add
data16
add
sbb
pop
pop
fisubrs
jnp
push
rorb
push
add
and
nop
pop
out
ja
push
xchg
movb
fiadds
xor
push
push
add
pop
jbe
imul
jae
xchg
add
add
or
sti
pop
push
jne
cmpsl
mov
add
in
lock
rcrb
sete
or
add
rcrl
lods
adc
push
les
hlt
je
test
ljmp
mov
add
dec
mov
loop
mov
push
mov
mov
lds
push
xor
jae
add
or
sti
pop
nop
jbe
add
decb
arpl
ret
pop
inc
adc
sub
push
dec
push
pop
mov
mov
adc
cwtl
mov
or
xchg
mov
mov
es
adc
adc
or
add
sahf
jmp
jne
aas
add
cmovno
test
sbb
sbb
fimuls
sbb
push
std
sub
add
and
sub
inc
adc
mov
test
das
bsr
adcb
out
mov
aam
cmp
dec
add
xlat
nop
push
call
ja
pop
lldt
inc
aaa
dec
push
sub
iret
lahf
frstor
call
das
and
int3
mov
mov
cmp
pop
movsl
xlat
cmp
inc
addb
cmpsl
lods
int
out
ret
adc
je
cli
or
xchg
jbe
cmp
add
mov
push
mov
xchg
loopne
fimull
push
test
pushf
push
sarl
xor
aaa
or
sub
xchg
repz
push
mov
pusha
mov
aam
sar
insl
pop
and
cwtl
mov
xor
test
ljmp
repnz
sbb
cmc
add
pop
pop
fsubs
and
sub
testb
cmp
adc
movl
and
lea
sbb
jecxz
pop
add
lock
add
cmp
add
std
iret
and
add
mov
add
jne
add
test
sub
je
mov
ret
and
inc
mov
lret
testb
adc
repnz
add
add
push
jp
pop
mov
jo
in
add
sbb
pushl
iret
mov
push
xor
sbb
leave
cmpb
jle
or
and
ja
adc
and
xor
add
test
add
leave
add
hlt
add
push
add
mov
out
bound
jl
movb
sbb
pop
push
jne
add
mov
mov
and
enter
cs
loopne
push
jl
dec
stc
adc
test
aam
jne
pop
push
sbb
dec
enter
adc
sub
andb
out
push
push
lock
hlt
in
adc
xor
adc
mov
lock
sub
or
shll
arpl
jmp
fidivrl
pop
add
adc
pop
loopne
push
nop
pushl
jl
add
adcl
dec
pop
or
jg
pop
insl
punpcklbw
add
out
stc
add
mov
pop
push
or
cs
lods
or
movb
mov
xor
dec
in
pop
shll
jbe
or
jle
adc
cmp
call
add
mov
lcall
clc
xchg
sbb
sbb
cld
pop
add
popa
or
add
jl
inc
orl
or
adc
add
sub
add
stos
loop
xchg
jg
adc
add
or
jl
xchg
lret
pop
sub
or
push
dec
or
movsl
ret
or
mov
dec
mov
xor
xchg
adc
push
pop
and
lock
sub
testl
lods
and
xor
add
cli
mov
or
cmp
jo
pop
push
push
mov
pop
mov
add
add
or
fs
pop
mov
enter
pop
ds
test
add
adc
push
movb
cld
inc
or
jp
dec
sub
clc
xchg
add
mov
mov
out
pop
pop
fsubl
lea
sub
push
psllq
leave
pusha
pushf
fs
cli
lds
sti
jecxz
jge
sub
in
add
add
paddd
inc
out
adc
add
in
jns
push
xor
aad
inc
mov
or
push
or
call
sahf
out
sub
pusha
add
dec
jmp
fisttps
add
movb
push
cmp
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
andb
pop
adcb
jle
xchg
or
addl
jmp
mov
add
mov
mov
lret
scas
orb
rolb
push
addr16
lea
movsl
push
xbegin
or
mov
rolb
push
adc
push
fadds
es
sub
add
add
add
and
aas
add
adcl
aam
test
in
xor
insl
add
pop
outsl
cmc
xor
ds
andl
xchg
adc
popf
xchg
insb
leave
iret
aam
icebp
add
call
cwtl
add
mov
xchg
jnp
lret
and
nop
pop
cmp
and
mov
loope
push
and
aam
pusha
and
adc
and
lods
add
push
sub
push
addb
stos
shlb
sub
ljmp
push
mov
addb
loope
sub
ja
mov
pop
test
mov
les
jle
or
xlat
xor
mov
fldl
cli
adc
arpl
or
push
mov
add
enter
add
sub
cmp
movsb
sub
or
pop
test
add
mov
xor
add
fnstenv
jle
out
enter
add
dec
cmc
sub
leave
fdivrl
add
xchg
out
dec
pop
push
sub
mov
jne
hlt
cmp
imul
leave
pop
insb
aam
push
mov
mov
mov
rolb
push
or
sub
or
xlat
jb
mov
and
icebp
or
adcl
gs
add
mov
add
xchg
insb
pop
int
push
test
jge
je
nop
rol
add
add
shlb
sub
jns
or
mov
jl
xor
lahf
les
cmp
or
dec
add
imul
add
out
push
mov
sbb
sub
push
rclb
cmp
and
jg
dec
sub
les
push
push
arpl
xchg
bound
sbb
pop
push
add
push
xor
push
sbb
inc
jno
inc
xchg
cmp
xorb
test
and
push
mov
sub
sub
add
push
in
add
test
adc
cmc
test
xchg
pop
icebp
test
xchg
inc
or
add
js
jns
or
ret
and
cmp
cs
icebp
pop
je
mov
adc
pushf
push
or
xlat
addr16
test
dec
aas
or
add
aad
sbb
add
add
cmpsb
imul
or
cmp
add
subb
add
leave
inc
or
mov
imul
add
test
add
call
hlt
mov
cmp
add
mov
mov
jmp
inc
jg
add
xor
push
or
add
adc
add
sub
mov
cmp
and
xchg
mov
dec
in
and
inc
mov
call
js
dec
push
test
lds
movl
mov
sub
hlt
add
lds
mov
sub
push
flds
mov
addr16
lock
and
sbb
testl
xor
testb
add
jae
push
aam
sti
inc
rcrl
sbb
jo
pop
add
jns
sarb
popf
cmc
add
dec
cmp
test
stos
test
add
and
ret
cmp
push
sbb
add
xor
adc
add
xchg
sbb
adc
mov
xlat
add
jnp
push
xchg
aas
fbstp
ret
jge
in
push
cmp
lcall
inc
in
jmp
sahf
sbb
dec
rorl
xchg
inc
mov
xlat
dec
arpl
cmp
xor
aad
loop
sub
cs
leave
pop
or
sub
mov
adc
inc
ja
push
add
cltd
dec
or
sbb
mov
outsb
je
add
adc
and
inc
xorl
mov
jmp
shrl
seto
clc
pop
dec
sbb
repnz
sub
out
rorl
jge
movsl
cmp
clc
adc
loopne
add
xchg
call
rcl
add
or
pop
cs
or
adc
xlat
bound
ret
dec
test
cmp
mov
faddl
dec
add
mov
pop
test
and
sbb
jno
add
cltd
pop
jne
idivb
adc
cmpsb
int3
adc
adc
out
add
loopne
lock
scas
add
pop
call
dec
add
jns
call
mov
jp
adc
jmp
int3
enter
iret
ror
into
add
fmul
flds
fcmovu
fstp
push
fnstsw
loope
jecxz
in
nop
pop
push
push
add
cmpl
add
shlb
push
add
popl
push
adc
lock
mov
enter
lret
pop
fadds
xlat
push
cmp
or
je
das
pusha
sub
aas
rep
add
sbb
movsb
sbb
xor
cmp
jl
push
sbb
add
sbb
pushw
and
imul
inc
les
or
jmp
aas
loope
add
incb
jbe
add
cmpb
jne
push
jnp
add
add
out
pop
and
sbb
inc
roll
mov
test
lock
pop
hlt
or
add
pop
cmp
fadds
pop
dec
into
cmc
adc
lock
mov
clc
lock
mov
push
push
lea
lods
and
shlb
enter
mov
repz
xchg
push
cwtl
call
inc
jl
dec
jmp
jmp
arpl
push
shrb
and
nop
movzwl
lock
cmp
add
xacquire
in
push
xor
shrb
call
sbb
testb
mov
sub
sub
fisttps
cmc
insb
add
or
fnstcw
dec
std
and
push
add
pop
sbb
cmp
push
xor
adc
shlb
lock
nop
jb
add
fimull
shlb
cmp
aas
ja
add
pop
inc
add
xlat
and
pcmpeqd
dec
pusha
aam
call
mov
or
jmp
add
cmpsb
push
test
cmpsl
into
mov
add
cwtl
ret
sbb
cmp
jne
dec
mov
add
pop
cmpb
cmp
add
cmp
mov
jmp
add
fwait
pop
clc
out
add
mov
cmp
jne
xor
or
jle
add
ror
xor
push
repz
into
jp
popl
std
int3
or
movsl
hlt
jmp
pop
nop
sbb
inc
mov
xchg
adc
or
add
xor
or
stos
adc
dec
pusha
insl
pop
add
adc
test
cs
mov
add
loop
push
dec
int3
add
xor
adc
iret
mov
add
mov
fistl
xchg
dec
xor
sbb
pop
mov
add
cli
mov
hlt
inc
mov
xchg
add
call
sub
in
sbb
call
mov
inc
sbb
nop
sub
imul
leave
sbb
sbb
inc
andb
xlat
out
or
and
mov
or
push
inc
addb
and
je
mov
push
sub
add
mov
and
js
add
pop
rcrb
out
sub
enter
dec
test
add
jmp
add
xor
in
add
and
push
ja
cmp
add
add
leave
add
mov
xor
out
pop
jo
add
jl
pop
xor
shlb
jae
nop
nop
add
fdivrs
cmp
sub
in
inc
push
repnz
cmp
mov
or
popa
jb
mov
add
adc
add
ret
or
mov
pusha
pop
pmullw
test
jmp
in
je
inc
add
jne
pop
and
in
xor
cli
cmp
jae
dec
add
add
inc
add
ss
fadds
push
aas
dec
or
and
add
mov
cld
or
nop
jl
or
lret
dec
pop
or
sar
push
push
add
lcall
add
fisubrs
xor
enter
pop
sbbl
jne
mov
add
push
cwtl
jl
ds
add
mov
hlt
push
sbb
adc
roll
dec
clc
int3
cld
push
fsubrs
xchg
mov
pusha
rorb
int3
xchg
dec
mov
jne
add
xor
mov
movl
mov
or
lret
add
imul
cmpsl
addr16
mov
arpl
cld
or
data16
pushl
pop
and
ud2
add
in
mov
rclb
inc
push
push
inc
push
inc
sbbb
jb
popa
outsb
fs
ja
gs
jo
imul
add
push
dec
push
popa
jae
add
insb
jne
push
imul
inc
data16
cmp
add
xor
mov
inc
xchg
add
je
fcmovu
call
mov
pop
jmp
mov
lock
jecxz
rolb
jbe
pop
push
or
sub
or
add
mov
js
testb
or
pop
xor
or
es
sbb
popl
lock
stc
jns
xchg
mov
mov
add
xor
dec
mov
push
lret
xlat
stos
mov
fadds
call
gs
jp
xchg
mov
add
sub
pop
insb
cmp
push
and
pop
jmp
sbb
in
call
sbb
jg
sbbb
idivb
mov
xchg
xor
and
dec
jne
fnstsw
push
jecxz
jo
leave
add
outsb
add
fsts
repz
mov
les
push
cltd
or
push
add
add
fs
repnz
or
cmp
enter
cld
ficoms
add
add
nop
pop
jae
push
or
icebp
jl
movaps
xchg
shr
cmp
xchg
jp
movhlps
pop
incl
popa
in
lock
push
sub
orl
hlt
add
push
je
outsb
cmp
or
cmc
add
add
nop
sti
or
or
pop
add
arpl
add
sbb
lods
and
add
mov
lea
xor
pop
and
call
clc
push
inc
or
push
in
mov
jg
aam
mov
shll
cmpb
jbe
adc
cwtl
imul
test
push
cltd
cld
and
add
dec
fistpl
push
push
bound
push
push
add
mov
cltd
shl
dec
adc
add
lods
push
mov
mov
jmp
or
pop
push
adc
cwtl
leave
outsl
add
cmp
xor
or
jne
pop
push
movsbl
clc
and
add
sbb
std
add
imul
outsb
orb
pop
mov
rcll
and
rcr
lock
mov
addps
lea
sbb
inc
cmp
repz
mov
adc
xor
fisubrs
out
add
outsb
cld
call
dec
cmp
mov
lock
add
jmp
and
pop
mov
add
into
cli
out
push
je
aaa
stos
mov
loopne
or
cmpsb
ja
imul
push
ret
gs
add
and
mov
mov
or
sub
test
push
push
push
adc
or
icebp
cld
je
rorl
add
fstpt
sbb
fs
call
das
add
and
fwait
movsb
lcall
cmp
mov
insl
jno
add
mov
aad
pop
add
movl
pusha
push
lret
add
lods
sbb
adc
cmp
nopl
mov
sub
jae
je
pop
mov
add
mov
dec
and
or
inc
cmp
add
or
add
pop
aas
xchg
mov
inc
add
cmp
add
jne
fs
push
ljmp
inc
inc
call
je
mov
dec
imul
inc
or
sarb
push
daa
add
inc
add
inc
mov
jmp
xchg
pop
mov
mov
push
mov
insb
addl
push
lock
add
xor
call
cwtl
push
add
dec
mov
test
popl
mov
rclb
add
ret
add
mov
xchg
lahf
fdivrp
adcb
and
cmp
mov
add
push
push
hlt
push
les
enter
push
das
jnp
sub
mov
xor
jne
and
or
add
cmp
std
pushf
lock
push
xchg
jne
add
pop
and
push
adc
adc
push
lea
and
pop
add
fs
dec
je
les
add
daa
and
jmp
pushf
add
xor
add
je
add
fldcw
cmpsl
inc
add
sar
dec
cwtl
adcb
and
mov
sub
push
sub
mov
pop
sarl
pusha
add
les
orl
add
ss
xor
push
cmp
adc
sub
cs
adc
pop
and
cmp
aam
wrmsr
das
push
mov
add
cld
sub
enter
sbb
icebp
jmp
int
and
iret
inc
push
and
out
ljmp
fdivr
push
or
frndint
push
or
lret
xorb
orb
and
adc
add
and
sub
es
push
cmc
loop
add
je
inc
lock
cmp
adc
inc
movsl
in
mov
cmp
push
pusha
popl
add
jno
jl
pop
add
insb
sbb
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
dec
or
and
sahf
push
push
and
adc
scas
pop
xorb
mov
jmp
add
xchg
pop
subb
jne
jo
fcoms
or
je
cmp
loop
cmp
inc
mov
push
xchg
orl
hlt
inc
dec
add
add
femms
fstpt
cmp
inc
fisubrs
add
xchg
sbb
and
out
add
pop
mov
mov
test
stos
loop,pt
pop
nop
pusha
mov
rclb
fistl
pop
inc
inc
xor
cmp
jle
add
add
mov
push
daa
shrl
jg
pusha
pop
bound
push
mov
jge
add
movsl
popl
add
mov
adc
adc
incb
or
cmpl
mov
mov
and
leave
add
push
mov
add
mov
je
add
call
add
add
cmp
pop
jne
movb
add
call
ss
xor
inc
call
push
inc
lea
mov
inc
leave
push
dec
loopne
add
and
dec
add
adc
sbb
dec
dec
test
add
nop
test
in
mov
mov
sbb
mov
add
inc
adcb
dec
push
or
repnz
mov
out
in
sub
in
rolb
inc
pop
jo
addb
mov
fwait
push
pop
add
call
shrl
add
mov
sbb
add
and
aaa
dec
ds
push
add
idivl
pop
leave
sbbl
bound
or
push
addl
pop
fiaddl
push
add
call
jne
out
and
cmp
push
je
lock
and
mov
push
or
sbb
add
ds
mov
add
pushf
iret
sbb
lods
sbb
add
shl
outsl
and
cmp
add
hlt
adc
sbb
sub
jbe
xchg
mov
add
pop
sub
and
int3
add
repnz
add
jmp
outsl
cmpsb
sub
adc
sub
add
mov
pusha
lret
mov
add
jnp
mov
cmp
jmp
mov
push
outsl
jb
imul
inc
cli
aas
addr16
arpl
xorl
sub
scas
lret
int3
insl
add
xchg
xor
cmc
and
jl
fildl
mov
adc
sbb
and
jl
lock
add
push
lea
nop
scas
adc
mov
adc
test
movl
push
or
pop
pminsw
add
insb
xor
or
cmp
xor
jo
mov
daa
pop
es
sbb
pop
imul
outsb
xchg
dec
mov
adc
sub
sbbb
push
or
sbb
popa
adc
pop
mov
cld
jo
outsl
clc
xchg
pop
xchg
add
inc
mov
xor
pop
in
adc
stc
jmp
rcll
lock
subb
cmp
rorl
imul
aas
fstps
jg
hlt
test
ds
add
sub
add
sbb
or
push
push
push
adcl
jnp
add
test
je
add
xchg
into
mov
fwait
in
push
add
aam
dec
cwtl
push
cli
inc
push
push
and
mov
orb
rol
mov
mov
add
adc
sbb
add
icebp
inc
xor
lahf
lock
rorb
es
and
add
imul
rcrl
into
inc
in
loop
push
xor
sub
bound
mov
or
dec
or
push
add
xchg
add
xchg
cmp
sti
and
movaps
dec
nop
push
pop
push
adc
xlat
fiadds
not
pop
mov
add
test
dec
add
adc
ljmp
mov
mov
and
je
add
mov
out
cwtl
pop
add
cmp
mov
and
sub
jp
push
sbb
adc
fmuls
pop
cmpsb
testl
popa
ds
mov
inc
adc
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
cmpsb
mov
jne
mov
lods
dec
xor
pop
ret
pop
xchg
enter
add
or
clc
lret
add
push
inc
or
jns
add
add
push
shr
dec
cmp
cmp
pop
add
inc
dec
pop
test
pop
dec
add
mov
fwait
pop
pop
ljmp
add
sub
cmp
pop
or
add
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
push
jb
add
inc
js
or
pop
add
add
mov
sub
les
mov
arpl
xchg
add
adc
add
lods
push
out
inc
int3
pop
mov
scas
or
sub
sbb
es
jne
add
fimull
jge
sub
js
repz
sbb
push
insb
xchg
xchg
pop
mov
in
flds
icebp
out
adc
insb
pop
sub
mov
pop
sub
xor
cld
dec
jl
sub
rol
sub
add
lock
add
add
xor
xchg
pop
sti
push
xchg
xor
jns
add
dec
xor
cld
rolb
add
jle
hlt
aad
add
repz
pusha
cmp
mov
dec
stc
add
or
cli
cwtl
out
pop
cmp
or
lcall
or
outsl
xor
cli
dec
fsubs
ret
sbb
loopne
ja
push
xlat
mov
cld
inc
scas
xor
fsubrl
orb
stos
xor
jp
add
mov
addb
mov
adc
xchg
sub
add
fistl
ret
enter
repz
loopne
add
roll
cmp
pushf
cmpb
add
icebp
mov
call
pop
lock
sub
inc
lea
lock
push
test
pop
xchg
cmp
or
xor
je
iret
dec
test
pop
adc
into
add
cltd
or
add
dec
sbb
adc
loopne
sarb
hlt
sbb
call
lods
adcb
decl
cwtl
sub
pop
push
push
dec
xchg
mov
add
cltd
and
sbb
mov
icebp
rcll
jl
mov
add
inc
push
mov
hlt
inc
test
lea
daa
push
mov
cwtl
fcoml
and
add
call
mov
hlt
ljmp
jb
movsb
pop
mov
and
cli
add
orb
or
or
inc
add
pop
add
or
shr
aam
mov
adc
mov
add
jg
or
and
jmp
enter
daa
jmp
js
jo
jge
sub
push
and
popa
aam
lcall
adc
lahf
add
add
or
lret
add
mov
rcll
add
sbb
pop
add
cmpsl
push
push
lock
jmp
push
inc
adc
mov
push
inc
setb
repnz
icebp
and
add
dec
xchg
add
lock
test
push
pop
rorb
test
and
inc
adc
dec
jo
inc
mov
imul
jmp
mov
outsb
pop
test
inc
jns
add
adc
cmp
xchg
cmp
jb
xchg
popa
pop
add
movsb
mov
cmp
stos
shrb
mov
cmp
adc
lea
sti
sbb
out
mov
or
add
stos
rolb
fiaddl
push
leave
jbe
adc
addb
cmp
push
cmp
test
shlb
repnz
add
out
mov
mov
pop
adc
nop
add
loop
fldenv
lock
adc
inc
arpl
mov
push
xor
inc
inc
xchg
add
lds
or
cltd
pop
add
adc
bound
xor
push
loop
nop
sbb
and
aas
ds
adc
sbb
mov
dec
add
sbb
test
and
pop
test
add
out
cmp
iret
subb
verr
push
inc
popa
add
jge
xchg
or
pushf
leave
jl
add
dec
mulb
out
jne
out
jmp
addl
adc
jp
cmpsb
add
add
sbb
push
lar
pushl
incb
movl
fsubr
jmp
push
sbb
and
adc
cmp
adc
add
or
cmp
jmp
sub
add
arpl
sub
add
and
mov
nop
int3
les
icebp
leave
fimull
jne
sbb
popa
mov
pop
and
fnstenv
add
test
clc
ror
call
stos
pop
inc
das
rorb
sbb
push
mov
and
lds
or
mov
into
test
pop
add
and
lds
pop
sub
cmp
stos
ja
cli
push
bound
jp
adc
xor
push
sbb
clc
or
fs
in
push
push
add
aaa
arpl
or
jno
insb
push
sub
ficoms
add
xchg
in
in
test
jne
add
add
outsb
push
adc
icebp
add
jmp
out
pop
mov
orb
or
cmpsb
shll
add
push
push
aam
sbb
xchg
xchg
mov
add
inc
jmp
call
dec
mov
sti
pop
add
pusha
cmp
lret
in
cmp
push
dec
or
ret
cltd
jo
jg
adc
movd
add
popl
call
fidivrl
push
or
jne
les
pop
aas
shrb
sbb
fdiv
xor
lock
daa
add
jge
push
mov
pop
pop
push
add
mov
push
add
inc
stos
in
sub
push
sub
add
push
push
cmp
fwait
add
pop
testb
pop
add
push
mov
call
stc
and
nop
jno
add
pop
pop
repnz
add
xor
or
ror
call
push
add
mov
adc
push
sbb
and
add
sbb
mov
or
push
inc
pop
or
or
adc
jmp
dec
aam
jge
push
daa
push
mov
push
in
add
pop
mov
or
push
std
fisubl
cmp
icebp
out
adc
cmp
add
xor
test
pop
xor
add
dec
daa
xor
les
ss
inc
pop
inc
dec
add
fldcw
add
jmp
pop
cmp
add
or
pop
test
sub
add
push
adc
mov
dec
sub
lret
daa
xchg
test
popa
pop
adc
push
pop
xchg
push
shrb
test
clc
pop
inc
dec
pop
sbb
add
mov
cmpsb
dec
ret
inc
inc
pmullw
in
add
mov
pop
and
xorl
movsb
je
clc
add
call
cmp
add
and
pop
push
pop
sahf
pop
cltd
inc
pusha
sar
jo
fiadds
push
and
xor
adc
mov
lea
pop
push
out
dec
xchg
popf
daa
andb
nop
xor
les
xor
push
or
cmpsl
pop
test
pop
add
sbb
test
jg
or
add
out
jp
dec
fbstp
jmp
or
lock
or
movsl
insb
sbb
sub
mov
inc
aas
cmc
popa
add
jge
insb
arpl
xor
jmp
xor
add
add
loopne
in
mov
cmp
cmpsb
dec
push
bound
and
popl
lcall
add
jnp
jp
sbb
sbb
sub
xchg
shrb
add
mov
loopne
push
add
and
jmp
cmp
dec
test
push
dec
imul
push
rolb
arpl
popf
add
leave
rcrl
push
cs
adc
arpl
lods
jmp
push
enter
call
ret
lahf
clc
dec
and
ret
cmpsl
dec
add
push
push
sbb
sub
jge
cmp
ret
push
pusha
jp
add
add
jle
int
or
add
dec
aaa
add
and
stos
sbb
inc
xchg
dec
fcomp
push
cld
gs
add
add
out
jmp
dec
add
out
mov
int3
push
push
mov
mov
jmp
call
or
jecxz
pop
add
dec
clc
inc
fisttpll
pop
push
or
lret
xor
inc
pop
xor
and
and
pop
clc
add
dec
sub
xor
push
shrb
add
inc
int3
mov
pop
jl
adc
xchg
sbb
pop
and
sub
in
sbb
ljmp
cmpl
add
imul
ret
pusha
loopne
fistpll
xor
cmp
inc
add
or
or
add
nop
sbb
adc
adc
jmp
pop
cmpsb
and
jne
pop
popa
out
mov
xor
repz
popl
push
test
add
xor
mov
loope
jns
or
dec
jo
cmp
hlt
inc
push
lahf
add
add
ja
insl
add
mov
adc
call
cmp
cltd
mov
into
sbbl
js
inc
jne
or
or
call
cmpb
lea
add
cld
dec
in
addb
repz
lea
push
inc
jns
pop
cmp
int3
mov
xchg
rolb
or
movsb
clc
or
mov
push
and
add
dec
xor
loopne
dec
add
loope
je
lret
test
and
iret
aam
sub
push
addl
inc
cmp
or
test
inc
inc
dec
cmp
or
test
cmp
movl
adc
cmpsb
mov
add
insb
xor
jne,pn
jle
add
ds
xorb
add
popa
out
jno
shrl
cmc
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
stc
jmp
or
inc
out
leave
add
jle
icebp
loopne
shrb
sbb
add
lret
push
adc
push
mov
aam
push
and
enter
and
call
ds
les
outsl
or
dec
sub
lds
pop
add
and
inc
push
cmp
loopne
push
xchg
js
pop
movsb
int
and
inc
mov
add
xchg
repz
cli
sub
bndstx
les
mov
dec
or
scas
mov
stc
jecxz
out
into
clc
lahf
adc
sub
mov
add
add
sub
add
sub
and
or
je
inc
mov
dec
scas
adc
jne
loope
pmulhuw
std
push
fiadds
testl
push
and
dec
loopne
push
outsl
pop
data16
adc
gs
fisubs
lahf
jmp
add
dec
js
and
xchg
inc
cli
mov
cmp
fmuls
sarl
adc
daa
pusha
lods
push
dec
add
sub
or
into
mov
jne
lahf
in
inc
mov
mov
push
xlat
iret
add
lods
cmc
cwtl
addl
rorl
je
rclb
cltd
xchg
inc
add
jmp
mov
je
or
push
cld
add
sub
xchg
mov
cmp
out
sub
ret
cltd
sbb
fisubl
cld
pop
ret
add
add
add
loop
mov
or
js
pop
fs
mov
mov
adc
shl
lock
sub
sbb
dec
fwait
add
add
add
push
test
add
add
add
add
xor
mov
imul
out
ret
push
or
add
inc
pop
dec
xor
and
ret
clc
sti
mov
push
repz
sbbl
rorb
pop
push
rolb
xchg
xor
dec
add
imul
lock
aas
mov
xchg
call
push
add
jbe
mov
inc
dec
mov
inc
or
push
adc
movsb
sub
or
and
cs
gs
sarl
imul
movl
lds
jmp
add
sbb
adc
adc
rsm
sub
in
add
and
xchg
and
loop
sbb
lods
mov
adc
pop
cwtl
push
inc
rclb
cmp
jmp
mov
or
mov
incl
dec
sti
mov
jnp
je
inc
leave
and
pop
mov
cmp
cmp
lea
or
sbb
jnp
call
mov
mov
sbb
inc
jno
and
add
ret
ret
sub
pop
pop
jmp
movsb
pop
mov
nop
pop
sbb
push
add
call
les
add
pop
outsl
imul
jle
adc
add
add
mov
ret
clc
sbb
jl
and
les
add
xchg
xchg
and
cld
fildl
sub
adc
dec
aam
cmp
lret
int3
adc
sbb
jno
call
xchg
movsl
pusha
dec
and
jp
add
sbb
add
nop
sbb
adc
dec
sbbb
ret
sub
sbb
cmpb
add
push
and
mov
loop
in
and
pop
fsubs
add
adc
ja
sbb
mov
loope
dec
and
in
test
es
dec
in
push
adc
add
rolb
sbb
movsb
mov
cmpsl
mov
jmp
cmp
addl
xor
movsb
xor
or
inc
mov
sbb
adc
inc
shlb
ficoms
jbe
push
pop
add
mov
movb
sbb
inc
stc
stos
sbbw
adc
fiaddl
add
pop
mov
out
int3
dec
dec
pop
out
inc
sar
popf
icebp
pop
cli
add
shlb
add
dec
adc
sub
add
and
jl
pop
mov
sub
fwait
je
adc
stos
or
add
sub
mov
pop
pop
push
into
leave
push
mov
aam
push
test
int
ret
or
sub
iret
jge
punpckhwd
push
adc
movl
or
add
or
push
insb
inc
lock
mov
pop
or
add
mov
add
push
sbb
imul
data16
icebp
mov
mov
add
push
fadds
add
cmp
adc
add
jo
sub
jg
add
inc
vpsubsb
add
rcrb
jmp
fiaddl
les
and
add
or
push
lahf
push
add
rcrb
pop
pop
dec
mov
je
mov
ja
call
mov
cmp
test
and
jmp
out
add
mov
dec
mov
add
mov
incl
add
jae
pop
xor
in
sub
and
jle
mov
xchg
ljmp
dec
sbb
mov
ret
add
in
push
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
repz
sub
test
cmp
pusha
clc
pop
push
sbb
pop
add
adc
jp
jnp
add
movb
push
fsubl
pusha
add
decb
repz
jg
mov
or
adc
sub
stos
in
cmp
pop
sub
pop
or
lea
orb
cmpb
and
cmpl
push
es
addb
xchg
xchg
xor
jp
sub
addr16
inc
push
add
pop
dec
add
js
inc
ret
adc
jb
cmp
or
pusha
fsubs
add
push
pop
lea
hlt
add
sarb
xor
movsl
adc
push
ret
pop
pushl
ds
push
add
aaa
cmp
rcrl
mov
pop
dec
lock
call
and
add
aas
xor
push
push
pop
dec
ja
push
adc
adc
jns
pop
mov
sub
sbb
divb
or
add
dec
sbb
mov
xor
sub
xor
rol
nop
push
outsb
xor
cmpsl
pop
mov
inc
and
mov
das
mov
cmp
mov
push
stos
or
fsub
mov
adc
and
pushf
add
push
mov
call
add
jnp
add
adc
mov
jne
cmp
push
daa
popf
mov
mov
mov
push
cmp
in
repnz
mov
push
or
inc
call
jecxz
xor
mov
and
hlt
xor
add
add
mov
or
pusha
jmp
lock
inc
in
cmp
or
cmp
xor
and
xchg
sub
sub
and
jl
inc
movhps
clc
jb
hlt
cmp
sbb
rclb
insb
xchg
cmp
in
gs
fdivrl
adc
sbb
add
int3
in
jb
jg
call
xor
xchg
nop
add
cwtl
xor
and
mov
test
xorb
cmp
je
jo
mov
enter
jb
cmp
sbb
and
dec
add
bound
cmp
or
sbb
push
cmp
addb
xchg
cmp
cmp
xor
add
cmp
sub
movzwl
rol
cwtl
loop
or
ret
call
mov
ds
and
add
sbb
out
pop
in
pop
dec
push
or
inc
imul
cmc
jae
orl
jnp
arpl
xchg
fcoml
adc
in
sbb
inc
jbe
jns
add
lock
adc
enter
repz
xor
fdivp
and
inc
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
and
out
call
add
repz
sbb
cltd
or
xor
dec
xchg
push
add
in
jb
cmp
mov
sbb
add
and
xchg
fcmove
fnsetpm(287
nop
pop
add
cmp
sbb
add
and
xchg
ret
ret
in
jb
cmp
and
clc
and
push
jne
lret
in
jb
cmp
sbb
iret
inc
xorb
in
mov
mov
and
enter
mov
sbb
andb
enter
jb
movsl
sub
add
das
cmp
mov
pop
jae
icebp
loopne
lahf
ds
mov
in
pop
sub
adc
push
test
add
rolb
add
dec
mov
insb
push
add
adc
and
fcomps
jo
pop
pop
nop
sub
fs
add
mov
mov
dec
jne
pusha
dec
gs
add
jb
inc
sarb
cltd
call
and
orl
mov
mov
and
nop
orw
rolb
add
gs
xchg
mov
xchg
inc
adc
cmp
pusha
andb
xor
push
test
mov
or
inc
imul
subb
scas
pop
notl
add
outsb
addr16
and
push
repnz
add
sub
scas
or
data16
outsl
add
and
movsb
mov
pop
dec
icebp
add
lods
dec
addr16
or
movsb
data16
mov
xor
sbb
fs
jo
mov
ret
xchg
mov
rcrb
aas
cmpsb
cwtl
js
popa
dec
loope
push
inc
std
add
push
outsb
push
fs
adc
in
orb
pusha
add
xchg
test
aad
pop
add
or
xor
jmp
cmp
xchg
jae
dec
jo
lret
test
mov
outsl
add
push
loope
mov
sub
inc
inc
arpl
adcb
insb
popa
and
cmp
jle
inc
pop
sub
add
push
in
sub
push
lock
rcpps
inc
popa
arpl
add
popf
pop
fadd
inc
jo
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
test
xchg
enter
fists
xchg
outsl
dec
fs
sub
mov
ret
inc
jae
mov
insb
pop
mov
mov
cmp
inc
sbb
jg
add
ret
jo
pushl
add
and
mov
shr
div
cli
pop
add
cld
add
push
adc
add
lret
jg
pop
sub
add
call
push
dec
and
pop
and
ret
add
and
add
fisttps
or
dec
lods
adcb
lret
xor
scas
les
adc
scas
mov
aas
mov
cmp
dec
sub
add
cli
rcr
sbb
cmc
add
sub
dec
add
cmp
push
jp
pop
add
mov
add
jne
lods
push
mov
and
add
jbe
pop
push
movsb
fmull
mov
jnp
out
ror
rsqrtps
mov
pop
cmp
jbe
jecxz
mov
repz
add
sub
jno
add
cli
pop
mov
and
test
jb
fdivrs
sti
add
mov
roll
add
rcrb
lods
int3
and
dec
popl
out
adc
adc
loopne
adc
add
or
pop
push
dec
movsb
add
ljmp
int
jp
cmp
ror
test
mov
lds
cmp
repz
andb
jmp
jbe
rcll
or
mov
aas
int3
xchg
pop
fs
add
aaa
dec
clc
insb
into
adc
add
inc
cmc
addr16
cltd
incb
inc
pop
pop
pop
test
es
lods
push
rol
mov
daa
lret
sbb
jbe
add
into
or
subl
mov
loop
mov
cld
xor
fldt
lock
sub
add
adc
movl
aad
and
adc
sub
mov
xchg
aas
add
inc
in
hlt
sbb
mov
stos
jl
jns
in
sbb
dec
jmp
imul
rorl
cmp
xor
lods
test
mov
test
jmp
int3
add
bound
push
push
jb
stos
xor
pop
fchs
xchg
xor
mov
add
aas
xor
call
test
dec
xor
and
cmp
inc
fdivrl
add
jnp
cli
sub
push
mov
and
push
int3
pop
mov
mov
pop
sarb
jmp
xchg
add
jecxz
xchg
arpl
enter
les
inc
jl
ljmp
in
mov
dec
repz
xor
stos
and
adc
pop
inc
test
enter
lea
and
jg
inc
sbb
fwait
dec
cmpsb
sbb
aad
ret
imul
xorb
pusha
loopne
add
xchg
rcrb
clc
out
jbe
iret
lock
sub
mov
xor
paddq
inc
push
rorb
mov
mov
pusha
xchg
sbb
jne
push
dec
dec
lock
xchg
lcall
mov
rcll
mov
out
pusha
dec
lock
add
std
cmp
test
sub
stc
jo
movsl
xor
mov
adc
mov
push
orb
call
pusha
jmp
rorl
and
dec
cld
and
lcall
lock
dec
add
data16
xor
sbb
adcb
push
cmc
jbe
sbb
adc
in
rorb
add
ds
xor
push
rclb
mov
cpuid
test
loope
dec
add
cld
mov
sub
mov
rolb
cmp
xor
lret
and
je
pop
shr
dec
push
cmpsb
hlt
shl
mov
and
negb
mov
mov
out
popf
cmp
nop
dec
outsb
xor
aas
lds
cs
stos
sbb
out
fwait
add
nop
andb
or
mov
push
add
add
imulb
pop
pop
mov
sti
lea
xor
rorb
ret
xchg
adc
faddl
dec
stos
push
mov
clc
dec
rolb
and
inc
jns
add
pop
inc
call
add
or
adc
and
and
gs
or
xor
sub
jg
add
lods
mov
push
pop
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
sub
and
inc
push
add
cs
add
icebp
xor
sbb
inc
sbb
enter
pop
in
add
add
adc
dec
call
mov
into
pop
cld
out
mov
sbb
xor
or
call
add
lods
lcall
jge
clc
in
pop
sbb
es
rorl
sbb
add
add
jo
lret
add
divb
inc
bound
loope
adc
add
dec
and
add
add
mov
add
pushf
sub
push
outsl
cmpsl
shrb
daa
repz
mov
push
mov
and
sub
movsl
add
sbb
add
add
dec
and
push
adcb
and
adc
add
addl
je
xor
ret
pop
sbb
sbb
inc
jmp
sub
xor
lods
call
mov
cmp
or
xor
scas
enter
fists
mov
xorl
cmp
xchg
jne
push
push
sbb
pop
mov
hlt
jae
push
add
xorb
jmp
or
pop
lret
add
mov
adc
add
movsl
xchg
push
add
inc
loop
push
rolb
lods
movb
jmp
clc
sub
or
and
sarl
ja
imul
pusha
cmp
je
mov
add
xorb
add
pop
jmp
loope
cmp
add
adc
adc
orb
add
cmp
sbb
je
add
dec
fsubrl
rcrl
int
cmp
push
xchg
jne
lea
mov
and
repnz
add
or
and
dec
ja
or
jge
in
or
inc
int
inc
jbe
mov
mov
testb
dec
pop
cmpsb
sbb
xchg
adc
push
add
call
add
sub
stos
and
or
cltd
adc
call
stc
inc
add
ret
enter
add
sarb
testl
adc
jo
pop
enter
xchg
mov
inc
or
mov
ret
pop
adc
jne
scas
jg
add
mov
popf
jmp
xchg
dec
cmp
pop
add
push
sarb
sub
push
push
orb
daa
mov
jne
lea
ret
test
jbe
inc
cmp
stos
or
mov
xor
aas
cli
rorb
and
mov
add
jns
testl
xchg
add
mov
xor
jne
into
sarb
mov
add
pop
mov
or
adc
jnp
xchg
xchg
sub
xor
movsb
and
inc
mov
dec
add
mov
mov
add
push
add
xchg
adc
jno
mov
push
pop
lret
pop
add
divb
stos
sbb
dec
loopne
ja
xchg
pusha
pop
add
pop
xor
mov
sub
mov
pop
inc
push
or
inc
test
inc
loopne
mov
add
mov
add
mov
faddl
add
jmp
push
inc
ja
in
sldt
adc
add
dec
mov
cmc
dec
add
inc
mov
mov
cmpl
mov
jne
add
xchg
mov
cmp
out
sub
mov
sbb
repnz
sahf
leave
dec
shll
cld
add
push
stos
fcos
sbb
int
jne
sub
mov
test
arpl
sub
sbb
lret
into
cmpl
fs
add
gs
xor
incb
and
xchg
xchg
cmp
sub
dec
xchg
xchg
movsb
mov
cli
popf
loopne
add
adc
dec
add
add
scas
roll
sub
cmp
sbb
clc
add
dec
outsb
loopne
lea
cwtl
inc
jnp
or
jne
leave
rolb
clc
xor
das
add
jae
xor
push
dec
movsl
test
sub
xchg
fadds
adcb
mov
add
mov
in
or
sub
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
push
iret
pop
pop
or
aam
xchg
xchg
fsubrl
mov
or
fldt
push
popf
jno
cmp
fmuls
ja
jle
scas
pusha
and
sbb
xor
jmp
and
mov
add
pusha
mov
add
pop
push
jl
movb
cmp
or
cli
jbe
inc
inc
stc
addl
add
cmp
sbb
sub
xor
ror
and
stos
add
push
inc
pop
sarl
xchg
push
or
add
push
fdivs
dec
sbb
fnsave
sbb
xchg
inc
pop
cwtl
movb
jo
frstor
adc
sub
add
daa
jecxz
iret
cli
enter
inc
push
jne
addb
mov
push
repz
imul
rcrl
jo
jnp
test
rolb
clc
pop
es
xchg
addl
dec
sub
jne
movb
xor
int3
decb
mov
mov
adc
aad
add
cmp
sbb
fs
daa
cld
test
icebp
inc
negl
test
enter
loopne
pop
add
mov
cs
popf
rcll
call
add
psllw
pop
cld
sbb
enter
cli
clc
sbb
orl
xorb
jbe
imul
lea
addr16
vmovntps
pusha
or
and
xchg
mov
jle
and
jb
js
or
lock
sbb
insb
aas
cld
movl
dec
nop
add
jle
xor
add
aas
incb
jne
push
sub
dec
sub
mov
mov
imul
pop
add
out
repnz
push
test
stc
test
or
xchg
loope
add
push
std
pop
dec
pop
dec
imul
or
jl
inc
roll
mov
xor
add
pop
and
call
hlt
or
clc
and
or
push
push
std
in
in
push
test
jg
add
pop
mov
pop
aad
or
and
scas
jp
loopne
xor
inc
outsb
and
pop
push
xchg
sbb
cmp
add
jl
or
add
jno
imul
adc
add
mov
or
lods
add
lcall
decl
push
cmp
fisubrs
cltd
imul
and
scas
jg
aaa
add
mov
movsb
sub
add
add
dec
mov
add
sub
push
pop
ret
sbb
adc
cmp
add
mov
imul
add
adc
inc
add
fistps
xor
sbb
add
insl
add
es
push
add
dec
mov
lahf
add
iret
dec
xor
push
pusha
in
push
add
insl
sub
mov
faddl
mov
clc
addr16
fwait
cmp
add
mov
or
add
frstor
dec
loopne
or
xchg
push
or
cmp
push
add
sub
and
add
lret
lds
add
pop
and
cmp
call
adc
fstpl
add
and
insl
pop
mov
lock
dec
popa
and
lret
mov
push
test
sub
cltd
cld
jbe
xchg
and
or
ficompl
cli
add
or
xchg
inc
adc
adc
jmp
orb
cwtl
sbb
in
out
rcrb
mov
pcmpeqb
lods
and
sti
inc
outsb
pop
je
add
es
add
idiv
popa
in
in
add
call
in
pusha
sub
inc
jo
bound
lock
data16
add
mov
add
jmp
cmp
or
je
add
mov
hlt
lods
js
push
andb
mov
mov
lea
inc
push
push
lock
add
mov
xor
movb
in
push
je
xor
adc
add
out
call
pmaxub
imul
jecxz
sahf
incl
or
loopne
push
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
sub
bound
stos
inc
cwtl
add
adc
xor
sti
add
cmp
sbb
dec
dec
add
adc
sub
cwtl
and
orb
xor
mov
inc
inc
sbb
sub
in
or
add
mov
inc
jno
enter
and
cmp
imul
les
inc
xchg
pop
cmc
adc
pop
aas
fildll
les
cmp
out
loop,pn
sbb
call
push
mov
inc
add
sbb
mov
jge
pop
add
lods
inc
adcl
aas
js
in
cmp
and
popa
movsb
inc
jecxz
dec
jne
add
subb
jg
in
and
mov
imul
or
and
test
dec
xor
jne
push
and
push
cmpb
in
push
mov
inc
adc
dec
and
add
xchg
add
bound
scas
add
pushf
jns
lds
add
adc
dec
fadds
sti
in
fsubrl
pop
or
addb
xchg
sti
push
inc
add
cli
mov
fsubr
jmp
adc
addb
push
jle
add
jecxz
loop
adc
lahf
add
mov
or
and
orl
movsl
pop
add
call
pusha
inc
aad
sub
pop
add
int3
ljmp
or
inc
add
pop
cmp
add
add
lods
xor
cmp
ja
mov
push
out
sbb
repnz
or
test
or
add
cmp
pop
sbb
inc
or
add
mov
testb
mov
add
cmpl
xchg
dec
orb
imul
push
movsl
adc
pop
pop
push
xlat
adc
into
rclb
and
mov
dec
mov
mov
mov
sub
cmpsb
outsb
add
sub
dec
rorb
xchg
cmp
stos
adc
xchg
aas
jp
sub
jno
xchg
mov
mov
je
jmp
xor
xchg
mov
stc
mov
xchg
les
sbb
jns
lret
jne
add
jecxz
and
add
jns
jnp
ja
add
dec
or
call
mov
mov
test
jo
clc
bound
jb
ss
cld
xchg
sub
cmovne
jo
mov
rorb
push
jnp
sbb
inc
inc
cmpb
scas
pop
mov
call
sbbb
jge
add
adc
enter
add
jne
inc
pop
and
push
sbb
jno
pop
or
pusha
add
cmpb
push
dec
dec
mov
add
sqrtps
test
shlb
adc
inc
and
and
jne
enter
pop
add
sbb
or
inc
mov
test
cld
mov
ljmp
push
push
incl
shll
call
add
mov
jp
add
push
or
loopne
insb
lret
jl
xorl
pusha
popf
add
addr16
cmpb
fadds
xor
or
aam
adc
jg
inc
xchg
movl
jns
mov
mov
push
stos
sub
add
insb
icebp
jne
push
or
pop
sub
sub
daa
rcr
jo
pop
fsubs
jp
add
and
je
add
and
adc
mov
shl
insb
xchg
add
xchg
sub
faddp
xor
cmpsb
cli
mov
pop
inc
rorb
ljmp
fwait
mov
ljmp
mov
pop
int
movsb
cmp
dec
aam
xor
call
add
mov
dec
mov
lds
dec
mov
shl
or
cmc
inc
inc
shr
jne
push
add
lock
add
leave
or
pop
les
inc
add
jne
add
push
cmp
inc
pop
jmp
adc
in
add
aas
ljmp
data16
test
cmc
into
movhps
cmp
sbb
add
add
push
iret
js
fimull
sbb
lods
or
test
add
pop
inc
in
xor
ja
or
adc
cs
mov
and
jmp
or
mov
pop
mov
in
mov
jns
jmp
inc
pop
xchg
add
and
adc
pop
jp
aas
sbb
inc
xchg
add
mov
pop
jg
pop
jnp
lock
fsubs
push
add
je
in
mov
ja
add
mov
lret
lock
cmp
mov
sub
pop
mov
rolb
popa
or
push
pop
ds
add
ljmp
mov
add
sub
add
jae
hlt
out
and
add
mov
mov
adc
pop
pop
int3
loopne
add
jne
add
loope
sbb
out
add
movsl
imul
and
into
add
or
rolb
sbb
mov
xchg
lcall
cmpsb
pop
jns
push
add
imul
lock
add
or
and
push
mov
out
or
adc
and
sub
outsl
leave
or
fcoml
adc
adc
xchg
dec
mov
jl
or
cmp
add
mov
mov
js
add
sub
cli
js
add
push
jmp
sub
add
enter
ja
arpl
jecxz
loopne
loopne
cmp
or
dec
push
les
outsl
js
push
inc
pusha
pop
clc
add
aad
mov
fsubs
add
adc
imul
inc
sti
mov
xor
rcl
gs
sar
into
call
mov
add
mov
mov
jge
mov
or
cmpsl
pop
lahf
bound
pop
mov
mov
fs
or
mov
sbb
sub
push
lock
adc
cmp
sti
arpl
add
out
ja
cmp
cld
cltd
xor
ret
add
sbb
mov
imul
repz
fadds
cld
loopne
push
adc
negl
incb
decl
add
test
ret
cltd
xchg
insb
add
dec
cld
fidivs
push
faddl
loopne
in
sahf
into
fisubl
pop
mov
add
out
pop
add
sbb
xor
adc
int3
inc
inc
pop
mov
jl
add
adc
jne
mov
shlb
mov
hlt
or
xchg
adc
fwait
sub
lea
push
in
dec
pop
sbb
movsb
cwtl
cmpl
sbb
mov
mov
jmp
outsb
sub
push
and
add
jno
xor
rcl
mov
sbb
push
pop
inc
ljmp
into
loope
jmp
dec
lock
add
push
cmpsb
jb
adc
dec
add
ja
mov
jge
sub
call
pop
adc
add
in
jmp
cmpsb
sbb
insl
jp
add
inc
loop
or
call
sbb
lock
add
sub
movsl
push
jbe
es
lret
clc
jmp
and
loopne
imulb
mov
sub
push
add
sub
mov
add
clc
lcall
cmp
add
jle
ja
xchg
jne
das
and
adc
dec
xchg
and
mov
add
into
jnp
cmpb
es
and
add
fildll
dec
xor
sbb
sub
adc
add
xor
or
jne
add
je
mov
in
cmp
push
nop
cmp
gs
sbbb
sub
push
hlt
xchg
add
in
pop
xor
fcomps
loope
mov
test
add
cli
pop
push
out
adc
loop
dec
subb
nop
cmp
adcb
sub
and
loope
add
or
xlat
orb
lock
ljmp
test
and
jnp
aas
and
adc
inc
js
adc
add
jmp
sub
or
pop
mov
or
cmp
lock
pop
lds
popf
add
mov
mov
add
nop
push
loope
pop
dec
fistl
or
add
sbb
outsb
mov
fnstsw
test
xor
ljmp
cwtl
ret
jge
sbbb
or
data16
sbb
sub
adc
jne
cmpsl
cmp
std
sub
movsb
into
pop
pop
jl
lock
add
lahf
adc
adc
sbb
dec
pop
aam
clc
cmpsl
add
pop
roll
xchg
add
jns
mov
or
lret
add
int3
notb
sub
cwtl
fs
inc
add
cli
and
bound
fldl
lea
enter
jl
add
ss
nop
fsub
mov
sbb
sbb
cwtl
adc
scas
lods
adc
mov
jl
loop
adcl
testl
cmp
add
add
push
mov
loop
int
and
loope
add
popf
sbb
pushf
adc
dec
icebp
clc
insl
mov
or
sti
dec
loope
jle
cmp
push
rcrb
pusha
pusha
cmp
and
inc
test
pop
mov
pop
fsts
clc
push
xchg
add
inc
mov
js
add
pop
adc
fcom
mov
pop
dec
ljmp
mov
add
mov
inc
add
jbe
out
mov
add
nop
jns
sbb
xchg
xchg
sub
mov
dec
add
sbb
je
add
inc
mov
xchg
add
call
cmp
les
lock
movsb
sub
test
inc
sbb
fcomps
or
popa
je
nop
mov
loopne
mov
push
add
push
adc
pop
add
dec
sub
jno
dec
mov
mov
dec
rolb
jmp
scas
jae
or
pushf
mov
out
xchg
mov
xchg
arpl
mov
les
cmpsb
jmp
push
xchg
je
xchg
and
pop
pop
inc
inc
addr16
or
into
dec
or
mov
insl
jp
les
nop
add
cltd
xchg
sub
dec
and
sub
shlb
out
cld
lods
add
scas
mov
add
mov
mov
clc
sti
add
mov
das
pop
add
sbb
lock
inc
xchg
add
mov
mov
pop
add
xlat
mov
dec
push
cmp
std
and
stc
or
adcb
xchg
jle
fsts
push
mov
pop
insb
push
add
sub
jne
push
popa
sub
nopl
adc
fidivrs
and
pushf
lods
add
test
mov
add
or
cmp
cmp
xor
loopne
xchg
ret
xchg
cmpb
es
insb
xor
repz
adc
stc
cli
outsb
roll
adc
nopl
ljmp
dec
sbb
mov
clc
call
adc
cmpl
dec
mov
push
push
add
and
into
add
adc
mov
hlt
add
aad
dec
jmp
mov
ja
sub
bsr
cmovl
fsubr
jle
stos
dec
sbb
add
adc
mov
pusha
dec
dec
mov
insb
jno
dec
pusha
pop
and
add
aaa
js
push
loopne
lock
mov
push
dec
call
cltd
xor
add
add
jmp
sahf
jl
jl
sbb
cwtl
gs
lods
sub
adc
cmp
rcl
sub
push
test
les
cmc
jne
loopne
test
add
and
dec
jmp
mov
aas
pop
lods
popf
out
std
mov
call
add
sbb
push
dec
andl
ret
and
mov
xor
mov
mov
call
inc
rolb
and
decb
and
add
and
jb
or
jae
pop
jo
and
add
pop
int3
fdivs
into
dec
lock
add
ljmp
lods
sub
outsl
jno
xor
mov
pop
add
xchg
and
pop
dec
pop
outsl
xchg
hlt
mov
add
sub
or
shufps
sub
cmp
add
jge
fildl
sarb
add
dec
or
mov
and
loopne
xchg
xchg
cld
iret
lods
mov
xchg
push
dec
add
dec
add
test
adc
xchg
dec
nop
and
call
mov
inc
pop
sub
pusha
inc
ret
fldl
inc
daa
mov
inc
shrl
stos
int3
repnz
xchg
push
mov
leave
or
xlat
mov
outsb
inc
add
xchg
xor
cmpsl
hlt
mov
add
xchg
dec
mov
scas
sub
imul
add
inc
pop
jb
pushf
inc
sub
movsb
add
add
popf
inc
shrb
ret
add
test
add
pop
je
lret
addb
mov
dec
mov
movsl
incb
jae
cmp
mov
sbb
clc
cmp
cmpsl
bound
push
shrl
add
jmp
int
push
or
imul
arpl
or
xchg
repnz
pop
int3
add
xor
call
dec
je
add
sti
push
jg
cld
xor
add
or
clc
adc
icebp
push
add
adc
mov
stc
fmul
pop
add
jmp
mov
xlat
push
add
mov
pop
adc
mov
add
inc
mov
es
or
and
rorb
or
add
adc
and
mov
and
inc
pop
shlb
lds
sti
ljmp
xchg
dec
sub
xlat
xchg
nop
jmp
clc
inc
add
mov
das
pop
add
daa
rcll
ror
fists
add
sub
mov
sbb
or
pop
jbe
push
lock
add
jge
dec
clc
adcb
je
add
cmp
pop
dec
add
cld
imul
sub
add
and
insl
inc
ds
push
pusha
mov
cmp
decl
or
add
arpl
rolb
sub
cmp
rolb
daa
lcall
add
mov
cwtl
imul
test
mov
ret
les
add
dec
jmp
into
clc
sysenter
iret
add
enter
sbb
xchg
adc
jmp
mov
push
orl
and
add
or
or
or
or
add
test
das
mov
jns
mov
nop
inc
pop
xchg
sbb
or
or
push
lods
xchg
imul
xchg
cwtl
jl
pop
je
cmpl
jg
mov
movsl
fs
cmp
mov
sbb
push
inc
int3
cmp
or
xor
jge
sub
test
pop
je
rcrb
cmpsb
dec
in
aas
ret
xchg
xchg
movsb
fs
mov
push
rclb
dec
cmpsl
outsl
sub
xchg
mov
xchg
add
shlb
movsb
ror
rcr
daa
fdivs
jg
push
adc
add
enter
xchg
mov
push
add
imul
xchg
adcb
and
and
movsb
xchg
test
repz
mov
and
push
dec
shlb
add
mov
sbb
push
aad
incb
enter
mov
scas
arpl
shlb
out
dec
cld
shl
add
daa
or
movsl
sbb
jae
add
pop
test
cmp
pop
out
popl
pop
rclb
xor
mov
mov
mov
loopne
add
pop
adc
xchg
pop
push
aas
repz
pop
sub
add
sahf
jno
call
mov
call
add
inc
mov
pushf
pop
cmp
mov
fsubs
bound
pop
push
fldcw
jo
mov
push
or
pop
movsb
cmpsl
add
in
mov
lahf
sti
add
sub
push
aaa
add
sahf
mov
testl
pop
aam
in
cmp
or
push
or
es
add
mov
mov
mov
xor
test
lock
movsb
or
in
add
jb
aaa
xor
mov
addb
in
inc
mov
dec
popa
mov
loop
add
xor
sahf
push
aam
add
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
test
xchg
dec
xchg
dec
subb
jg
jne
add
cwtl
test
jl
adc
loope
and
jmp
es
add
or
mov
add
add
cmp
ret
pop
mov
and
add
inc
dec
push
add
nop
xor
add
clc
out
sub
sarl
mov
add
outsl
xchg
enter
dec
and
mul
lcall
mov
push
repz
ds
sub
sbb
pop
ljmp
add
movl
xor
jge
mov
jo
jne
add
rol
dec
faddl
repz
pop
orb
dec
and
add
and
mov
imul
or
jne
sbb
sbb
xchg
pop
mov
fwait
jae
add
mulb
std
push
leave
dec
in
bound
pop
aas
xorl
adc
cs
repnz
shll
sarb
cmp
sub
lock
add
pop
inc
inc
jmp
lcall
sub
cmp
mov
or
add
sbb
adc
push
lret
cli
cmc
sbb
dec
jnp
insb
pop
rclb
jmp
in
add
orb
sub
add
jne
mov
loop
jnp
test
add
bound
in
inc
js
xchg
jge
lea
mov
add
jmp
pusha
aad
sub
xchg
arpl
stc
aas
mov
add
mov
daa
and
pop
add
mov
mov
push
jecxz
sub
daa
sbb
mov
pop
inc
and
popf
test
sub
sarb
pop
cli
jbe
cmp
movsb
nop
xor
mov
sub
add
adc
rolb
adc
inc
pushf
jns
loope
push
fiadds
pusha
gs
push
clc
lock
pop
mov
dec
loopne
shll
add
flds
and
bound
fcoml
sub
call
xchg
mov
lods
ror
push
or
call
loop
xchg
roll
add
paddusb
addb
stc
push
add
shlb
mov
pop
dec
push
add
dec
jno
sbb
cmp
mov
or
sub
iret
ret
in
pop
or
inc
push
lock
mov
add
call
add
fdivs
inc
mov
fs
cmp
mov
out
jo
sbb
aam
dec
or
inc
jmp
stos
sbb
test
mov
aas
icebp
dec
cmp
sub
adc
aaa
xchg
xchg
jle
iret
add
cmpsl
xchg
test
scas
enter
jle
add
in
add
sbb
inc
daa
or
xlat
mov
fwait
mov
sub
add
or
dec
or
push
aad
sbb
fsubr
push
add
sub
icebp
inc
add
sbb
dec
mov
push
lret
xchg
in
sbb
or
hlt
ss
add
faddl
lea
loopne
in
push
xchg
xchg
rol
mov
sbb
inc
sbbb
js
mov
cmp
in
inc
adc
rclb
or
roll
lock
int3
pop
push
adc
sub
cmp
mov
xor
enter
sbb
arpl
mov
xor
push
sub
sbb
les
aas
and
into
mov
cmp
adcl
nop
repnz
cmp
loopne
sti
add
and
adc
hlt
mov
push
pmulhuw
adc
aad
stc
or
and
popf
jno
push
nop
pop
dec
cltd
mov
fistpl
cmp
aas
das
fs
cmpsl
test
add
pushf
add
mov
add
popa
call
jo
dec
push
pop
mov
xchg
mov
xadd
nop
add
aam
test
jecxz
adc
add
pop
jp
add
movsb
sub
mov
inc
imul
or
mov
inc
or
loop
cmp
xor
and
sub
mov
push
sbbl
inc
dec
adc
push
movsl
scas
cs
add
jae
inc
jb
enter
popa
jle
sbb
inc
mov
add
ret
xchg
xor
add
lock
mov
dec
fbstp
adc
and
ret
mov
enter
xor
adc
mov
cmp
es
adc
ret
cwtl
mov
sub
and
mov
mov
push
es
inc
sahf
jo
enter
push
xor
pusha
adc
and
sbb
push
dec
inc
stc
aas
pusha
xor
inc
rcr
icebp
loop
mov
loopne
je
sub
mov
xchg
inc
and
cmp
sbb
mulb
inc
adc
add
or
sub
add
sbb
and
add
aaa
or
sbb
stc
adc
in
cmp
add
dec
adc
call
xchg
dec
or
fbstp
sub
xchg
add
insb
cwtl
fcompl
call
xor
cmc
pop
aam
pushf
into
xor
scas
cld
inc
cmp
cmpsb
fcoml
enter
les
xor
repz
aas
sbb
rorb
sbb
out
dec
enter
lods
in
cmp
test
cmpsb
inc
inc
movsb
sub
push
mov
pushf
mov
cwtl
aad
sahf
push
xchg
cltd
mov
mov
or
dec
mov
and
xor
xchg
sbb
js
mull
je
sti
sbb
xchg
and
cmp
or
test
call
daa
lock
add
jo
aas
adc
dec
add
inc
pop
pop
es
sbb
stc
mov
adc
jns
lock
cmp
jmp
push
shlb
loopne
jp
mov
add
push
repnz
xchg
cmpb
jb
add
mov
mov
fadd
test
push
xor
enter
lahf
sbb
scas
cmp
jmp
shll
orl
pop
adc
ret
or
or
repz
add
adc
mov
push
inc
mov
add
mov
adc
mov
xchg
jb
and
lock
mov
popl
adc
stos
push
insl
fs
dec
pop
mov
cmp
or
jg
cmp
std
jl
or
gs
dec
stos
movsb
test
mov
flds
and
mov
sbb
mov
je
loop
clc
orl
push
and
pusha
movsl
pop
aas
sub
sub
xor
push
add
sub
add
sub
dec
add
movb
add
add
add
mov
out
push
in
add
add
xchg
add
clc
nop
jge
mov
cmc
repz
xorb
add
fdivl
divl
pop
clc
iret
addb
test
in
inc
add
stos
cmp
fcoml
pop
jae
andb
cli
adc
push
loop
outsl
dec
mov
add
sub
dec
fcmovnu
jnp
lock
add
add
repz
faddl
mov
dec
je
add
hlt
mov
push
xor
ljmp
or
aas
jae
or
jo
daa
add
iret
es
pusha
pop
xor
and
and
jo
add
fnstenv
add
int3
fldl
lea
pushf
fwait
push
mov
mov
rorl
cmp
push
push
add
cmp
add
les
and
inc
loop
scas
push
ret
rolb
das
test
add
pop
dec
jl
divps
sbb
or
and
sub
sbb
in
inc
add
dec
out
loope
sbb
in
mov
cli
add
push
cmp
call
xor
add
xlat
jne
cltd
rclb
pop
fnstcw
add
pop
or
fldl
xchg
decb
sub
or
jmp
add
dec
cmc
sub
clc
dec
call
pushf
add
mov
jg
divb
mov
mov
shrb
data16
call
je
sbb
in
inc
mov
jne
and
lds
sbb
add
ficoms
xor
mov
and
pop
push
sbb
xlat
je
cmp
lock
addr16
adc
clc
jo
add
jecxz
lods
cmp
cmp
and
and
and
out
add
in
xor
or
test
pusha
shrb
sbb
imul
out
pushl
test
orl
pop
mov
push
clc
xor
and
call
cs
sub
lret
jecxz
pop
and
xor
inc
cmp
outsl
ss
add
inc
inc
add
sar
neg
jns
lret
fadds
pop
adc
ja
add
mov
and
jno
sbb
cmp
in
pop
add
jo
sti
jmp
int3
pop
call
mov
fdiv
sub
shl
movsb
jp
add
or
inc
pop
ret
add
sub
jmp
incb
cmpsb
mov
bound
sub
je
xor
faddl
lock
pop
nop
pop
add
sub
cld
out
clc
add
repz
add
xchg
push
and
inc
enter
add
les
mov
es
add
aas
hlt
push
es
inc
or
add
lods
sbb
movsb
stc
mov
add
push
mov
out
push
iret
lea
pop
cs
gs
or
mov
sbb
add
decl
jne
add
or
xor
add
in
adc
inc
pusha
jo
xchg
nopl
or
push
loopne
xor
cwtl
data16
or
cwtl
sahf
mov
and
adcl
add
mov
leave
repnz
lea
mov
add
sbb
mov
dec
add
shll
movsl
arpl
add
lcall
dec
and
cmp
add
lcall
sbb
orl
add
adc
inc
fcomi
jmp
cs
imul
sar
lret
inc
lock
test
loope
dec
xchg
shll
cld
fildl
sub
dec
fldl
push
sbbl
add
jae
push
out
clc
loopne
dec
jne
add
mov
in
frstor
call
sbb
add
bound
jmp
xor
mov
jns
xchg
add
sub
pusha
add
cmp
jae
pop
in
pop
sbb
and
dec
sbb
or
cmp
add
adc
data16
cmpsb
sub
add
pop
push
mov
sbb
and
push
xorl
xor
ljmp
push
data16
into
add
enter
test
mov
test
jns
popf
or
popa
add
sarl
pusha
testb
mov
sbb
or
add
mov
loopne
jae
repnz
push
and
and
adc
lock
fildll
xlat
mov
ret
fidivl
test
add
lods
repnz
fwait
test
adc
sbb
or
pop
ret
les
jne
mov
pusha
lret
jmp
test
adc
xor
add
mov
ljmp
pop
add
adc
pop
aad
cmpb
shrl
idivl
seta
sti
push
aad
pop
dec
push
inc
lock
rcrl
cmp
out
mov
out
call
sarl
jmp
lds
add
xchg
cmp
sbb
add
sub
adc
cmp
add
je
sub
fbld
add
inc
sbb
pop
sub
rclb
inc
cmp
pop
cld
adc
ret
or
pop
jl
add
push
add
fchs
movsb
jbe
add
fistpll
jmp
fistpl
test
sahf
jo,pn
pop
or
add
adc
test
ret
lods
xor
dec
mov
cmp
or
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
fistpll
adc
mov
aas
or
addl
call
aas
addb
xor
sbb
push
add
adc
jp
and
or
and
mov
in
aam
insl
orb
scas
add
pop
out
or
lock
dec
adc
inc
inc
and
adc
vmwrite
or
test
inc
add
clc
fs
sub
loopne
xor
add
mov
cmp
mov
lea
add
enter
sbb
pop
and
ror
test
xor
jno
jo
cwtl
add
cmp
add
aas
mov
xchg
mov
mov
test
cmp
inc
into
push
ret
adc
fidivrs
and
inc
mov
pop
push
or
sti
sub
ljmp
mov
hlt
xor
fninit
push
imull
rorb
sarl
roll
loopne
add
jno
fucomi
cmpsl
add
loop
cmp
popa
sub
lods
pop
add
fcomip
sarl
mov
cwtl
in
xor
or
xor
mov
jne
dec
iret
fdivr
imul
pop
repnz
divb
arpl
sub
roll
sbb
add
push
dec
addb
jp
add
clc
cmp
ja
and
add
adc
cli
add
jl
push
shl
lock
push
dec
and
jmp
and
setle
jns
add
int3
add
add
mov
or
dec
cs
roll
outsl
movsl
fisubs
mov
push
add
xlat
or
gs
push
ret
sub
jmp
mov
add
pop
push
mov
lea
loopne
add
jmp
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
rolb
jmp
stos
sub
cmp
dec
jne
movsl
push
rclb
push
jecxz
jbe
push
pop
stos
loope
inc
mov
mov
mov
mov
imul
test
sub
clc
dec
add
pop
adc
shrb
or
and
push
mov
daa
lret
loopne
fsubrl
fsubr
js
push
push
enter
sub
aam
sbb
mov
dec
ret
mov
mov
popa
pop
inc
add
jle
testl
or
add
cmp
xor
add
idivb
xor
cmp
add
dec
jne
add
data16
mov
hlt
add
bound
testl
mov
mov
xor
dec
push
jbe
pop
movsl
das
popf
orb
and
dec
aaa
add
inc
pop
and
int3
xchg
fptan
adc
jp
push
loop
icebp
sbb
add
push
mov
adc
cmpsl
lock
cmc
mov
and
and
add
cmp
add
shll
sub
bnd
pop
movsb
xor
sbb
sub
in
add
sti
bound
iret
pop
dec
in
lret
sbb
jl
mov
add
mov
and
test
xchg
push
scas
jb
pop
pop
xchg
pop
sub
pusha
cmp
aaa
shrb
push
fisttpll
xchg
and
jb
sahf
nop
mov
daa
pop
cvtpi2ps
in
addb
jg
jp
cmp
xchg
stc
repz
xor
scas
jge
test
daa
inc
clc
add
jno
aas
jmp
add
inc
adc
add
push
outsl
add
out
ljmp
inc
jnp
cmpb
and
mov
test
xor
add
loopne
in
mov
gs
push
mov
pop
mov
out
jl
inc
inc
mov
in
hlt
pop
cmp
and
mov
sub
int
xor
movsl
and
ror
sbb
mov
jl
mov
push
sub
popf
movsl
mov
adc
jl
in
punpckldq
fisttpll
add
dec
add
mov
jle
add
ret
fimuls
std
sahf
call
inc
outsl
dec
adc
and
lock
mov
ret
add
add
inc
or
sbb
dec
jne
daa
inc
xchg
mov
add
add
cmpsb
shlb
jmp
iret
push
add
mov
movsb
add
add
mov
add
inc
cmpsb
push
push
adc
add
or
sbbb
cs
stos
js
daa
jge
test
adc
add
push
pop
leave
jl
adc
add
roll
mov
xchg
adc
insb
mov
enter
ss
mov
add
inc
cld
std
xlat
add
push
lds
add
dec
mov
jb
add
movsl
iret
mov
adc
add
jle
andb
cmp
scas
das
loope
pop
xor
mov
pusha
test
pop
and
add
call
jp
jno
add
mov
jns
call
add
jecxz
pop
push
sub
in
cmpsl
lret
push
push
inc
lods
aam
jno
ret
adc
mov
add
mov
popf
jb
add
cld
xor
dec
add
push
add
xor
mov
jmp
mov
sbb
add
push
fdivs
or
xor
xor
push
add
xor
inc
fimull
pop
aad
not
popf
pusha
push
jge
dec
and
cli
rolb
or
push
repnz
addl
cmpsl
aam
and
sub
pop
jg
pusha
adc
push
xlat
mov
inc
jo
xchg
sub
add
push
rol
add
jl
jg
mov
or
push
add
inc
mov
adc
cmp
sub
lds
rclb
shr
ja
in
cmp
pop
inc
out
stos
rorb
hlt
sub
in
sbb
xchg
or
sbb
adc
ret
jmp
sub
stos
add
push
pop
shrb
idivb
add
ror
pop
inc
add
cmp
xchg
pop
rcrl
inc
push
fistps
mov
shl
mov
in
push
push
cmpsl
mov
mov
andb
faddp
lret
add
test
mov
xchg
rclb
or
add
mov
jecxz
ret
add
mov
inc
pop
mov
add
and
cmpsl
xchg
pop
add
test
fldl
les
imul
jl
clc
divb
add
ret
xchg
stos
lcall
les
mov
jae
setne
mov
call
lahf
inc
mov
incb
inc
dec
inc
cwtl
repz
xchg
das
jge
into
and
jbe
dec
negl
movsb
cmp
pushf
pop
push
and
daa
lds
pop
add
lods
and
or
int3
and
pop
add
repz
inc
addr16
cmp
sbb
lds
push
cmp
das
repnz
rorb
decb
sbb
lds
mov
jo
inc
add
xor
and
sbb
stos
mov
movsb
and
dec
pop
xor
in
mov
add
test
adc
adc
dec
pop
cltd
add
mov
mov
or
repz
vpsrld
jb
push
and
push
cld
jge,pt
les
push
mov
mov
lret
push
xchg
int3
dec
xor
aam
neg
and
fsubl
mov
cmp
dec
loopne
pop
popf
or
add
imul
ja
fstpl
jbe
sbb
f2xm1
movsl
data16
mov
int3
add
cld
cmp
rcrb
jg
je
jp
mov
mov
add
pop
dec
jle
mov
sub
jb
add
dec
adc
cmc
jmp
clc
xor
pop
mov
ret
mov
fdivl
addr16
mov
xchg
push
xor
mov
jp
xchg
roll
xchg
xor
orl
dec
jb
repnz
fisubrs
imul
sbb
push
inc
popf
push
mov
std
jmp
jo
or
popa
stc
pop
add
mov
xchg
js
and
or
and
and
loopne
stos
add
inc
sub
lret
enter
mov
add
fimull
test
add
xchg
mov
dec
stos
repnz
add
xor
pushf
sbb
test
push
xor
cwtl
outsl
shll
aas
add
mov
stos
add
in
xor
cmp
add
add
mov
sub
clc
push
dec
jge
test
and
dec
adc
push
jb
mov
das
and
adc
and
fcmovne
add
jnp
hlt
pop
or
sub
pushl
add
push
lret
jecxz
aad
and
add
into
mov
sbb
cltd
xor
xor
in
lock
fcoml
or
mov
inc
or
je
add
leave
mov
sbb
lahf
mov
add
jnp
pop
sub
lahf
imul
or
add
add
mov
mov
cmpl
lock
test
inc
sbb
clc
aad
jl
loope
leave
pop
pop
imul
shl
adc
ret
inc
or
pop
movsl
lock
jle
add
icebp
or
ud2
dec
or
add
mov
js
add
pop
pop
loop
ficoms
icebp
fsubr
fs
lret
mov
xchg
push
add
std
scas
mov
pop
xchg
imul
add
push
cmp
dec
jae
sarb
das
cld
add
adc
mov
inc
je
jg
push
leave
adc
pusha
push
jns
xchg
imul
push
jne
mov
add
in
jbe
jns
add
sbb
xor
add
sbb
mov
mov
sbb
or
or
aas
push
mov
test
add
dec
int3
push
sarb
inc
loopne
dec
push
sbb
test
pop
sub
pop
je
nop
cld
movsl
jo
mov
add
jne
sbb
setb
push
outsb
adc
int
or
inc
ljmp
sub
fcomp
and
clc
pop
add
or
jo
xor
cld
out
pop
test
arpl
out
add
pop
cli
mov
add
sub
jae
sub
sbb
mov
or
xchg
loope
mov
adcb
pushf
dec
mov
sti
adc
into
cmp
mov
pop
adc
mov
mov
rcrl
jecxz
into
sbb
xor
mov
addb
pop
add
jno
push
push
mov
test
pop
movsb
mov
pop
cld
cmp
hlt
or
add
test
push
cs
pop
cli
ret
add
xchg
add
xlat
dec
or
sbb
aas
dec
and
das
adc
ss
mov
xor
or
dec
xor
mov
sub
pushf
lea
ret
and
inc
cwtl
add
and
mov
add
mov
les
add
lods
dec
mov
add
ret
int3
inc
add
push
cld
lret
xchg
pop
push
jo
inc
lcall
mov
fwait
es
iret
pop
push
add
sahf
bound
jmp
jno
movsb
mov
clc
hlt
insb
add
pmuludq
test
pop
int3
dec
rolb
mov
xor
movsl
out
cs
rcrb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
testb
cltd
mov
mov
xor
push
add
dec
mov
and
push
ss
sub
inc
pop
add
inc
xor
je
add
add
or
cmpsb
push
xchg
add
pop
mov
bound
xchg
push
mov
mov
add
mov
sub
cmp
add
or
cmp
rolb
imul
sbb
dec
and
ficomps
xchg
push
scas
pop
push
sti
js
pop
nop
push
aad
jp
add
cmp
cmp
subb
sbb
shlb
out
and
incb
cmp
mov
loopne
jl
mov
cmpsl
aam
shlb
xchg
sub
pop
add
mov
loop
repnz
jnp
inc
add
jge
dec
cltd
ss
add
mov
dec
mov
fsubs
incb
jnp
inc
pop
gs
clc
cld
pop
inc
add
mov
and
in
dec
ret
push
lret
add
cmp
clc
add
and
arpl
fneni(8087
or
scas
add
cmp
hlt
add
add
fsubrl
mov
sarb
cwtl
lods
add
mov
and
addr16
lods
or
fiaddl
mov
int3
sub
xchg
clc
enter
lea
add
loop
fildll
adc
mov
testl
and
push
lea
sub
pusha
add
aam
loope
scas
and
in
mov
jne
aad
mov
cmp
mov
sub
mov
sub
adc
pop
adcb
push
std
sub
push
sub
mov
add
lret
add
sbb
push
rcl
pop
data16
jne
mov
les
mov
mov
in
ror
cmpsb
adc
sahf
lods
ljmp
adc
xchg
cmp
and
mov
cwtl
fstl
adc
pop
pop
add
icebp
popf
xchg
es
popl
movsl
jg
xchg
sub
movsb
lods
adc
push
add
jbe
enter
popa
lock
xor
sbb
add
mov
sbb
push
in
adc
pop
clc
jno
add
sbb
lock
add
mov
rcrb
xchg
clc
add
inc
mov
imul
repnz
add
push
push
cmpsb
add
pop
insl
push
mov
mov
sub
pushf
sbb
cvtps2pi
fcomp
test
jns
and
lock
mov
fsubs
mov
add
addr16
push
std
ret
ficomps
sbb
add
test
cmp
mov
icebp
add
add
pop
repz
pop
movb
add
cmp
add
jb
loop
hlt
add
cmp
cwtl
js
clc
xor
cmp
fiaddl
pop
cmp
pop
aas
hlt
mov
pop
mov
call
test
pop
add
adc
aad
mov
pop
add
lea
addr16
add
mov
outsb
mov
xchg
iret
push
add
fmull
sahf
in
int3
nop
adc
mov
dec
lock
push
cli
cs
add
cmpsb
sbb
xchg
mov
rolb
add
push
push
dec
and
add
mov
sbb
or
imul
add
std
cli
or
addr16
push
push
or
cmovae
and
ret
jmp
inc
push
mov
bound
mov
adc
orb
stos
add
ja
fisttpll
call
shlb
push
add
mov
pop
les
stos
add
add
mov
add
les
add
iret
pusha
test
xchg
add
jg
add
jbe
cmp
je
or
adc
mov
cmp
mov
push
adc
push
rcrb
pop
sub
cmp
or
inc
or
mov
adc
add
mov
lret
inc
faddl
add
out
cs
sbb
or
pop
jne
in
shll
cmp
jge
add
incb
sub
sub
or
add
xchg
mov
ljmp
icebp
pop
push
cmp
or
inc
push
cmp
xchg
test
fildl
jmp
in
ffreep
ss
cld
pop
sbb
mov
inc
leave
xchg
aas
mulb
sbb
fistl
data16
pminub
xchg
lock
jb
xor
jae
mov
jbe
mov
cmp
lods
add
ja
dec
push
test
imul
add
push
pushf
adc
out
xchg
add
push
add
cwtl
ret
mov
ds
les
add
push
push
and
mov
and
xor
sub
or
or
ja
out
outsl
sbbl
dec
int
and
sub
xchg
push
add
repnz
cmp
jb
imul
dec
add
rolb
or
pop
or
je
mov
sbb
xchg
mov
dec
scas
dec
add
or
icebp
stos
pusha
aaa
inc
add
push
xor
add
fwait
jbe
mov
adc
aaa
movb
adcb
orb
test
dec
jle
add
popf
sbb
loope
fwait
add
xchg
pop
adc
pusha
ja
or
adc
sbb
push
and
test
add
jge
xchg
push
adc
into
stos
mov
sbb
push
rclb
shl
sbb
add
dec
scas
std
sub
jg
or
test
mov
pop
clc
test
sbb
push
ds
fbld
or
mov
lods
inc
mov
mov
adc
mov
cmp
sub
test
sbb
add
and
xor
adc
hlt
les
pop
enter
pop
sub
or
cmp
push
jne
inc
xor
sbb
sbb
pop
add
ret
notb
mov
push
cmp
cwtl
ror
orl
push
pusha
rolb
add
inc
cmpsl
fldl
adc
push
cmc
or
xchg
adc
jo
sub
add
push
adc
test
mov
inc
push
add
daa
adc
pop
test
push
fidivrs
add
adc
scas
mov
dec
mov
pop
push
fiadds
repz
fcoms
mov
jno
add
xchg
nop
fisubrs
js
imul
push
jp
pop
mov
inc
test
xor
sub
sub
adc
daa
nop
add
loopne
jl
jno
clc
aaa
push
or
add
jecxz
or
in
mov
cmp
or
aam
lock
push
inc
add
je
insl
add
imul
mov
or
call
mov
sub
out
fistps
cwtl
jno
rclb
mov
test
mov
pop
add
add
push
or
add
inc
jmp
ljmp
add
rorb
cmp
jle
cli
sub
sbb
jg
cmp
in
add
jb
jne
push
cld
notl
arpl
sar
cmpsl
pop
outsl
add
fcoms
addb
flds
repnz
mov
loope
adc
ljmp
loop
sbb
add
mov
add
lods
sbb
cltd
adc
mov
aas
mov
or
subb
sbb
add
jg
adc
insl
push
test
sbb
fwait
mov
in
add
addr16
rcrb
scas
add
add
jle
shl
out
mov
mov
pop
sarl
add
mov
add
jb
iret
sbb
add
das
in
mov
add
inc
jbe
mov
cmp
pop
pusha
les
lock
push
add
mov
std
add
in
mov
or
sbb
in
lds
pop
test
daa
andl
les
add
xchg
fstpl
fwait
cmp
mov
inc
pop
and
push
out
loop
xchg
lds
jns
cmp
aad
popf
movsl
loope
jo
in
data16
ljmp
or
sbb
pop
sub
inc
xchg
and
aam
and
out
addb
cmp
pop
mov
add
xor
incb
les
jae
popl
fsubrl
xchg
mov
push
mov
sub
jp
fsubl
lcall
xchg
pusha
adc
mov
cli
aas
out
add
call
outsl
icebp
add
inc
inc
mov
pop
pop
out
mov
stos
cmp
mov
cld
jmp
add
mov
or
jge
test
sbb
pop
push
cwtl
pop
add
mov
sbb
adc
dec
es
or
pop
add
and
test
hlt
movsl
push
pop
dec
push
dec
and
jmp
test
jp
add
aam
dec
movaps
std
rclb
pop
add
stos
push
insl
add
push
add
jle
add
in
xchg
adc
cld
fcompl
add
mov
push
add
cmp
es
jmp
inc
xchg
push
add
dec
add
inc
inc
scas
sbb
mov
rcrb
pop
call
adc
daa
push
dec
mov
inc
movb
sbb
add
push
clc
add
pop
xchg
arpl
rclb
cmp
add
jns
pop
lock
inc
add
add
add
mov
add
inc
push
fstps
cmp
daa
pop
sbb
js
jmp
ds
idiv
add
or
xchg
icebp
shlb
add
xchg
decl
stos
and
jmp
cmpsb
or
movl
ret
mov
rcl
jge
mov
push
cmp
add
or
stos
jns
add
adc
add
leave
cmpsb
movsl
cwtl
and
or
enter
pop
fcoms
outsb
loope
std
jl
xor
ljmp
js
pop
out
movsl
add
add
jg
test
mov
sarb
mov
sbb
repz
and
inc
add
sub
loopne
stc
sbb
mov
out
xor
loopne
addl
je
fs
add
ljmp
shl
sbb
fld
or
ja
jne
add
nop
roll
adc
fdivr
add
mov
in
add
dec
test
inc
in
aas
cmp
pop
pop
pop
mov
inc
jo
jmp
xchg
les
and
test
xchg
xor
inc
sub
jl
test
xor
adc
pop
sub
inc
or
mov
xor
int
mov
xor
enter
or
pusha
pop
pop
dec
jle
push
dec
ss
subb
sbb
inc
in
icebp
imul
xchg
mov
inc
pop
jno
push
push
je
xor
jb
loopne
xchg
add
sbb
addps
jo
cmp
sub
lahf
xchg
mov
xchg
sbb
rol
stos
mov
add
pop
in
add
dec
fld
bswap
movsb
pusha
lahf
push
add
mov
jg
adc
pop
dec
push
outsb
sahf
in
rolb
xor
pop
out
mov
or
add
lcall
add
test
jle
xor
inc
add
in
lea
cwtl
mov
daa
jo
fs
lock
mov
and
push
cmovo
pop
sti
call
mov
add
cmp
add
loopne
shl
int
add
xchg
mov
fdivr
and
push
or
jo
add
add
scas
mov
cmp
xor
movsb
jmp
stc
cmp
cld
jmp
loop
push
neg
xchg
add
xor
adc
sbb
das
icebp
lods
cmp
ret
addb
fists
jmp
or
push
add
cmp
je
inc
push
in
adc
loopne
ljmp
sbb
add
and
jae
or
adc
popf
mov
jne
inc
sub
push
movl
int3
jb
push
add
xchg
jmp
and
fldl
lock
dec
lret
xor
add
add
pop
add
stos
jg
data16
popa
cmp
xchg
int
push
adc
add
ret
mov
or
jmp
sub
push
sub
leave
je
iret
enter
xor
mov
popf
repnz
and
or
add
push
jle
in
loop
ficoms
inc
cmp
xor
mov
and
insl
dec
iret
xor
jae
add
call
jge
pop
mov
push
inc
scas
push
test
enter
or
mov
dec
push
pop
push
shlb
add
cmp
adc
xor
les
cmp
cld
fisttps
mov
cld
cs
jbe
inc
jl
adc
call
and
dec
addl
fldcw
xor
fistl
add
lahf
cld
lods
mov
sub
mov
jmp
popl
and
imul
test
psubsw
lret
xor
jmp
mov
shll
add
adc
inc
loopne
dec
addr16
add
sbb
lods
xchg
popa
lret
or
mov
mov
or
rclb
sub
mov
test
or
and
cmp
bound
sbb
or
xchg
adc
or
movsb
rcll
inc
mov
pop
add
xor
enter
xlat
mov
add
jl
sub
add
add
dec
adc
push
test
sbb
inc
lock
imul
imul
sti
jl
dec
mov
das
add
mov
pop
movl
inc
orl
add
fsubl
outsb
cwtl
pop
cmp
xor
add
loope
rol
pop
pop
mov
pusha
pop
cwtl
mov
shlb
stos
inc
mov
addr16
and
bound
nopl
rolb
dec
lock
inc
loopne
aas
add
inc
add
cmpb
testl
outsl
sub
add
and
dec
jns
push
ljmp
push
adc
xchg
add
xor
call
fildll
mov
pop
mov
add
dec
inc
adc
rorl
xor
pusha
mov
and
das
add
cmp
xchg
add
in
add
pop
in
add
mov
call
push
jle
add
test
mov
adc
inc
sub
sub
cmp
pop
sub
add
popf
loope
pop
je
add
dec
sbb
jmp
push
add
jge
dec
xor
pop
push
ret
adc
roll
sub
lcall
roll
lret
lahf
add
nop
cmc
jl
std
xor
add
and
xor
shrl
iret
aam
dec
mov
bsr
pop
and
aas
pop
add
and
imul
dec
adc
clc
iret
shll
stos
shl
mov
add
int
out
xor
add
push
inc
or
jl
std
mov
push
add
test
shrb
repnz
adc
sub
xchg
add
mov
and
repnz
sbb
inc
xor
jno
jo
add
popf
xor
jmp
call
imul
inc
mov
adc
scas
add
inc
test
out
repnz
inc
sub
xor
stc
jo
adc
sub
sar
xor
and
adc
add
les
popa
jge
xchg
jno
cwtl
std
mov
loop
icebp
cmp
rorb
adc
and
or
mov
in
mov
sub
imulb
add
nop
adc
adc
add
inc
mov
rolb
in
xor
add
pop
add
push
shll
dec
hlt
rolb
cltd
mov
add
cmp
rsm
enter
xchg
adc
iret
inc
mov
add
sti
inc
adc
movsl
mov
add
adc
test
add
inc
hlt
and
or
adc
add
lods
xchg
and
stos
and
out
mov
dec
jg
sbb
enter
sti
shl
add
add
and
or
jmp
add
add
loope
xor
sbb
add
cmp
pop
aaa
ret
divl
cmc
add
or
xchg
rolb
adc
out
les
add
sbb
pop
fmuls
cs
std
loop
out
jmp
mov
jg
icebp
je
cmc
sbb
add
mov
or
dec
xchg
sub
fld
pop
outsl
addr16
inc
xchg
mov
pop
and
lea
jecxz
jnp
add
add
ljmp
addr16
adc
mov
jno
xchg
mov
fnstenv
add
or
hlt
pushf
sub
or
popa
popf
insl
mov
inc
adc
xchg
cmp
in
mov
or
lds
nop
cmp
add
mov
pop
mov
add
add
scas
jns
pop
popf
mov
mov
aas
std
jo
mov
cld
xor
shufps
incb
sbb
out
cli
add
mov
fiaddl
cmp
dec
negl
loopne
xor
out
inc
aam
jmp
sbb
add
jno
pop
adc
cmp
rcl
fldenv
jmp
movsb
iret
inc
in
ret
faddl
mov
push
cmp
add
aam
nop
or
gs
lods
roll
mov
out
and
add
hlt
inc
fld
or
int3
push
out
outsb
mov
clc
test
add
xchg
ljmp
inc
call
sub
add
push
sub
cmp
leave
cmpsl
adc
xchg
stos
imul
mov
invd
pop
adc
xchg
cwtl
loopne
jmp
lock
push
ljmp
sub
cld
pop
pop
add
iret
mov
or
sbb
test
test
jge
add
dec
mov
cmp
pop
loope
test
and
js
loopne
pop
jle
inc
outsl
icebp
loopne
and
add
out
sbb
fld
inc
stc
mov
rcll
mov
xor
mov
pop
push
les
insb
sbb
or
sbbb
sbbl
hlt
xor
sbb
add
or
mov
mov
push
xor
roll
xlat
mov
xor
outsb
popa
cmpsb
jp
add
insl
arpl
outsl
xchg
jo
ret
and
inc
add
loope,pn
xchg
pop
push
js
add
fstpt
aas
push
rcr
adc
add
cli
push
jno
adc
and
push
fs
mov
ud1
fdivs
xlat
scas
cli
notb
mov
sti
js
add
and
testb
jns
mov
dec
stc
mov
enter
or
ljmp
in
lea
adc
sbb
test
push
xlat
push
adc
and
pop
sti
addr16
jp
loopne
jg
fisttps
mov
xlat
aas
xchg
fstpt
pop
popf
sbb
add
jp
and
or
les
or
pop
adc
inc
dec
xlat
popf
and
or
subb
and
faddl
add
int3
xor
sub
addr16
xchg
xchg
fdivrs
adc
xchg
fnclex
push
add
insb
fldl
enter
xchg
out
xor
add
xor
add
push
and
adc
pop
and
add
xor
inc
lahf
cltd
insb
add
cs
adc
or
add
xchg
ljmp
mov
and
out
aam
lods
addl
insb
mov
aaa
dec
xor
or
sbb
repnz
jbe
iret
hlt
movsl
add
or
cs
daa
push
test
add
and
adc
adc
leave
les
js
and
mov
lock
cmp
adc
and
addr16
mov
aaa
or
adc
aaa
sahf
lret
xor
and
add
idiv
clc
out
leave
xchg
add
or
sub
add
iret
push
in
or
les
fwait
adc
je
mov
repnz
cmpsl
xlat
dec
flds
cmp
mov
clc
cli
inc
pop
cmp
and
and
lock
lret
xchg
sub
or
cli
popl
mov
or
lea
lcall
les
jmp
sti
andl
btr
movsb
in
pop
rorb
dec
add
sub
repnz
sysexit
add
cmp
push
add
in
sbb
call
inc
and
add
hlt
adc
fidivl
loopne
ror
or
jmp
mov
cmp
adc
test
push
lds
and
cmp
loop
jns
in
jge
cmp
adc
cmp
dec
dec
sbb
inc
dec
int
add
and
bound
pop
incb
sbb
xor
add
enter
repnz
jg
lea
inc
xor
and
in
push
or
inc
cmp
adc
and
dec
gs
push
std
inc
xor
cmc
sbb
mov
add
jne
in
sahf
into
dec
and
cmp
fcoml
mov
jl
shlb
add
add
xchg
pop
jae
and
mov
or
aaa
rorb
pop
and
stc
add
call
push
mov
lds
and
iret
and
sub
adc
adcl
or
add
push
sbb
mov
xchg
adc
fistps
pop
add
lahf
outsb
daa
adc
nop
mov
inc
mov
shlb
or
fsubrs
popl
dec
sbb
sysret
bound
cmp
xchg
cmp
lods
jno
xchg
cmp
adc
clc
sbb
les
les
call
nop
ret
in
adc
std
push
pop
test
sbb
cs
jp
hlt
aas
xor
outsb
pusha
xchg
hlt
stc
jno
nop
movhps
cmp
mov
call
push
in
add
sbb
mov
add
ljmp
jbe
in
pop
gs
xor
jmp
mov
cmp
xor
inc
add
cmp
test
dec
mov
out
dec
sub
adc
jmp
scas
add
dec
xchg
add
pushf
sub
jge
add
icebp
or
push
jg
js
icebp
inc
sti
mov
and
stc
add
adc
pop
adc
and
inc
shlb
lea
sub
inc
clc
xchg
aas
add
dec
jne
cmp
adc
and
or
outsl
mov
push
and
clc
faddl
pop
and
add
sub
xchg
and
out
mov
mov
bound
dec
stos
or
xchg
add
xor
out
mov
jmp
pop
add
dec
out
pusha
push
xor
aas
xor
xor
mov
push
jle
test
or
ret
dec
xor
xor
das
or
aaa
sub
incb
std
in
mov
scas
add
jmp
int3
mov
pop
push
jnp
jo
or
xor
fisttpl
xlat
add
jae
jns
rorb
or
inc
cmp
xchg
jnp
cld
and
push
and
shrb
mov
dec
sub
sbb
add
push
fsubs
into
sub
outsl
or
xchg
xlat
daa
test
aaa
xor
fnsave
add
dec
pop
testb
or
fadds
insl
out
and
pushf
add
ds
stc
pop
rcrb
jbe
pop
jmp
xor
xlat
setl
dec
rclb
leave
loopne
or
inc
push
and
mov
sbb
adc
sub
pop
adc
cvttps2pi
pop
inc
fimull
pop
jle
cmp
lods
xchg
inc
subps
add
inc
add
and
lds
adc
jo
dec
jp
mov
xlat
xor
pop
jl
xchg
dec
pop
xchg
pop
inc
mov
les
js
add
out
add
cmp
and
shlb
add
pop
faddl
add
adc
mov
xchg
cmp
mov
aas
sub
xchg
add
call
xor
fildll
test
cli
jecxz
dec
fcompl
mov
push
sub
ret
pop
sub
fcoml
mov
sbb
addr16
and
push
jo
repnz
sbb
fst
mov
stos
hlt
or
lock
pop
xchg
push
mov
fimuls
sub
add
push
adc
push
xchg
shlb
test
das
adc
mov
fiaddl
bswap
adc
ficoms
push
adc
xor
xor
adc
filds
loopne
repnz
test
add
jns
push
int3
jbe
mov
les
ja
ret
cmpsb
out
mov
adc
stos
clc
stos
icebp
push
xor
inc
add
ret
jbe
add
or
sub
mov
into
or
outsb
testb
add
aaa
mov
imul
enter
cli
jle
sub
or
cmp
mov
dec
adc
inc
loopne
adc
test
das
pop
mov
pop
push
adc
inc
or
add
mov
test
fwait
adc
adc
orb
xchg
cmpsb
add
sub
or
sbb
xchg
shl
sbb
cmc
adc
or
or
pop
movsb
sbb
add
or
jmp
jecxz
icebp
push
pop
addl
and
into
jns
mov
pop
movlps
aaa
out
cmp
add
in
or
out
add
adc
mov
fwait
add
push
dec
add
xchg
rolb
xor
out
cmp
lock
lock
mov
mov
xchg
add
cmpl
jns
adc
adc
out
sbb
lock
lods
add
xchg
xlat
cmp
sub
cmp
push
add
xchg
loop
mov
or
lret
out
pusha
lret
jae
jns
xor
pop
movb
sbb
cmp
dec
ljmp
mov
adc
hlt
sbb
cmpsl
adc
add
ret
xchg
mov
mov
ret
add
push
neg
push
sub
mov
or
sbb
movsb
jg
add
add
push
ds
xlat
add
aas
push
push
add
xor
sbb
and
pop
je
inc
ret
dec
enter
add
sbb
mov
push
pop
push
aam
andl
or
push
push
mov
xor
leave
pop
cmpl
add
int3
cmc
add
ljmp
inc
push
stc
into
add
jmp
icebp
das
shrb
adc
scas
pop
cmp
add
inc
data16
jbe
add
inc
enter
stos
and
filds
mov
push
lret
in
push
aad
mov
inc
inc
cmpsl
mov
jo
and
add
test
add
dec
pusha
cs
sub
inc
xor
dec
pop
test
shl
add
push
and
or
xor
scas
inc
xchg
push
xchg
mov
add
and
repnz
addb
loop
or
add
sbb
pop
xor
stc
xor
inc
clc
stos
jo
inc
or
push
fisubrs
out
mov
cs
mov
push
stos
push
cmp
out
push
dec
lcall
test
add
cmp
push
call
loope
and
xor
inc
mov
cmp
sbb
add
and
out
xor
inc
sub
xor
add
aaa
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fdivr
cmpsl
push
repz
and
addb
mov
mov
stc
shr
jb
lret
jge
jge
add
mov
pushf
jp
mov
mov
add
xor
add
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
out
add
lods
or
inc
add
add
add
push
in
nop
pop
mov
mov
or
mov
sar
adc
and
pop
ror
adc
mov
inc
shrb
call
and
xor
or
jmp
add
enter
add
mov
cld
add
lea
add
add
inc
mov
push
mov
shrb
mov
sub
cmp
or
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
pop
imul
aas
enter
sbb
inc
and
movb
add
or
icebp
je
inc
cmp
sbb
mov
or
add
or
push
cmp
testb
mov
lcall
enter
mov
add
mov
pop
push
sub
shll
add
lret
add
pusha
xor
test
adc
add
nop
das
push
jecxz
sbb
outsl
push
loopne
rolb
dec
jne
cmc
add
or
icebp
xor
add
je
jcxz
and
add
xor
mov
xor
out
push
add
jmp
pop
testl
pop
jmp
xor
dec
xchg
pushf
addb
out
add
xorb
out
push
popl
push
pusha
add
loopne
add
int3
rorb
inc
jo
int
xadd
addl
loopne
or
xchg
leave
rolb
or
sti
fdivr
sbb
sbb
pop
adc
sbb
xchg
sbb
pop
add
shl
out
sbb
inc
faddl
adc
aam
add
inc
adc
pop
sbbb
inc
call
adc
sbb
add
rcl
rcrb
lock
adc
xor
add
shl
repnz
xor
pop
lock
add
shlb
loopne
add
cld
cmp
incl
sarb
ds
inc
inc
cli
dec
cmp
cmp
stc
push
addl
sub
add
or
sub
jmp
sub
ljmp
push
out
add
pop
cmp
add
shlb
inc
in
loopne
cwtl
test
add
or
testb
loopne
or
loope
and
and
xlat
mov
push
mov
mov
bound
cmp
cmp
shlb
sbb
inc
movsb
add
subl
subb
lock
cs
imul
add
imul
inc
pop
push
and
mov
jp
mov
mov
mov
addb
mov
je
and
mov
ja
shll
cmp
cmp
add
xorl
push
add
push
inc
xchg
lock
dec
push
mov
xchg
loopne
inc
or
push
add
popf
call
into
pop
sahf
inc
pop
cvtps2pd
lcall
rolb
aas
inc
cwtl
mov
dec
push
mov
dec
rorl
jb
dec
mov
rorb
pushf
into
mov
inc
roll
add
inc
addb
lock
call
loope
roll
loopne
sbb
jg
sbb
cld
pushf
pop
dec
pop
nop
add
popf
push
add
pop
enter
adc
repz
loopne
or
add
scas
inc
dec
cpuid
mov
loopne
fcomps
or
fstpl
pop
sti
sub
add
jae
cmp
dec
mov
mov
add
movl
mov
xchg
adc
pusha
rorb
call
lods
ja
insb
mov
xor
mov
sbb
push
iret
inc
arpl
pop
call
movsl
cmpxchg
fwait
data16
dec
adc
pop
clc
xlat
mov
push
push
add
mov
pushf
aad
sub
or
lods
xor
mov
add
adc
pusha
mov
sar
jne
dec
or
leave
aam
scas
adc
pop
add
pop
dec
incl
lods
sub
pop
adc
pop
add
loop
push
in
push
clc
hlt
xchg
fwait
push
mov
pop
pop
pop
rol
push
lods
cmp
push
jp
jmpw
add
sub
xchg
add
and
or
jb
mov
lea
add
mov
roll
stos
add
mov
scas
and
or
clc
ja
add
lret
add
jp
push
inc
pop
jo
add
pop
add
add
jbe
mov
mov
repz
cwtl
push
add
cmp
add
int3
xchg
pop
in
sub
cs
sar
stos
call
xor
popa
sbb
loope
pusha
loopne
sbb
mov
pop
nop
insb
and
dec
mov
and
repnz
dec
and
in
add
push
ret
incl
xlat
xchg
push
stc
cmp
dec
icebp
cmc
sarb
xchg
pop
add
dec
or
mov
push
les
mov
into
rol
ljmp
ret
pop
leave
inc
icebp
add
pop
lock
stc
mov
rorb
cmp
cwtl
adc
outsl
add
mov
mov
and
inc
inc
sbb
loop
lods
push
mov
and
and
push
push
adc
mov
xchg
xchg
std
or
xorb
ret
addl
cmp
call
mov
testl
cli
pop
cmp
xchg
arpl
hlt
and
xor
sub
pop
mov
cli
xchg
arpl
out
dec
not
mov
sbb
ret
inc
clc
bound
xor
stos
lods
dec
and
dec
inc
nop
cmp
inc
inc
adc
sub
push
sahf
aaa
test
cmpsb
xor
sub
and
and
and
sbb
push
xor
and
jmp
mov
inc
push
or
xor
push
and
and
xor
icebp
leave
repz
imul
in
add
dec
or
loope
in
mov
mov
fiaddl
mov
mov
lret
arpl
jb
dec
clc
shrb
aas
int
sub
punpcklbw
sbb
imul
or
enter
jge
inc
jecxz
jno
adc
lods
xchg
int3
mov
or
push
add
and
xchg
lret
or
pop
icebp
add
push
and
xor
or
cmp
das
mov
or
inc
and
push
xchg
lea
pushf
cmp
xchg
adc
or
or
add
mov
repnz
push
pop
inc
jmp
iret
adc
test
dec
inc
sbb
inc
aad
adc
mov
add
and
mov
test
std
and
in
inc
popf
lods
incb
add
push
mov
dec
add
test
lret
xor
add
cmp
sub
dec
fsubr
pop
es
or
adc
mov
cmp
test
push
and
add
leave
je
push
int3
ss
add
sbb
aam
dec
add
or
add
shr
cmp
in
addb
or
add
out
mov
scas
mov
mov
mov
ret
jmp
mov
ja
xor
popf
add
sbb
pushf
nop
movsl
repnz
aam
lods
cs
pop
add
mov
scas
pusha
vxorps
cmp
pop
rorb
nop
add
cld
pop
rorl
inc
or
inc
adc
add
sub
cmp
cld
push
add
pop
sub
loop
loop
pxor
mov
adc
add
sub
add
push
ds
add
jbe
push
test
cld
ror
loop
add
or
test
sti
push
fbstp
sub
add
and
sub
fisubrs
jb
nop
es
in
incl
movsb
dec
mov
push
add
leave
subb
in
add
or
pop
clc
std
pop
mov
push
stos
mov
fcomps
mov
add
mov
jo
xor
or
shlb
div
and
add
jecxz
aam
xchg
xchg
push
inc
lcall
push
pop
das
nop
pop
dec
add
stos
jne
pop
adc
add
and
adc
adc
push
sbb
scas
add
push
sub
adc
add
repz
pop
pop
sti
jecxz
rorl
dec
nop
add
lahf
testl
lods
xchg
daa
inc
inc
cmp
add
pop
rep
pop
shr
add
in
cltd
xchg
inc
jl
mov
push
sbb
testb
sarl
stc
jns
subl
add
hlt
cmp
push
gs
dec
jp
add
pusha
pop
insl
cltd
movl
inc
inc
mov
mov
mov
jle
leave
add
cmpsl
xchg
dec
pusha
movsb
add
mov
push
sub
call
lock
add
jg
neg
xor
add
pop
fstpl
lcall
jecxz
inc
pushl
push
xor
sub
xor
sbb
push
pushf
inc
dec
gs
pop
mov
push
roll
inc
jo
add
dec
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
mov
add
bound
cmp
add
push
insb
insl
outsb
jo
add
jb
je
jbe
loopne
add
xor
xor
xor
xor
cmp
das
cmp
sub
sbbb
sub
cmp
cmp
daa
or
pop
or
shl
mov
pop
inc
add
sbb
test
pushl
add
mov
add
hlt
jno
mov
bound
out
mov
jmp
nop
add
sub
or
jl
mov
outsb
push
cmc
adc
pop
mov
sbb
jp
in
add
jl
mov
jle
add
test
jle
add
loopne
jge
or
add
inc
sub
cwtl
inc
pusha
cmp
dec
mov
idivl
das
movaps
sub
outsb
adc
jnp
imul
flds
dec
shlb
add
push
jo
add
roll
dec
dec
jne
test
or
mov
xchg
or
inc
add
adcb
push
aas
imul
dec
xchg
cmp
ljmp
sub
push
add
lahf
sub
push
push
rcrl
loopne
movsb
lock
add
xchg
hlt
and
xor
clc
lret
imul
dec
test
sarb
mov
or
push
jo
addb
add
dec
rclb
pop
adc
lds
enter
std
lea
aas
lods
arpl
xor
xor
cmp
sub
fmuls
ret
mov
testb
add
inc
xchg
imul
das
data16
add
push
mov
pushl
pop
push
sbb
loop
stos
adc
add
pop
sub
in
push
or
mov
and
add
jl
adc
or
add
fildl
inc
add
adc
sahf
and
adc
add
add
cmp
mov
mov
adc
sub
dec
orl
pop
add
push
cmp
sub
or
add
sti
loop
add
push
fbstp
shll
gs
ret
add
pop
cltd
sub
aam
or
shrb
adc
test
movsb
shl
xlat
les
adc
ja
inc
pop
add
arpl
push
popa
add
push
pop
enter
test
sub
fcom
and
jbe
add
inc
jl
jge
or
mov
add
and
into
push
iret
mov
pop
add
adc
pop
push
dec
jnp
xor
add
push
in
fadds
jno
test
loope
es
fs
push
mov
and
cmp
mov
push
inc
lods
cld
push
add
test
aas
pop
pop
or
adc
arpl
imul
cmp
and
inc
cmc
ret
or
sub
dec
inc
addb
mov
fsubl
pop
push
and
mov
popa
cmp
je
cmp
jl
inc
inc
dec
lock
frstor
movups
push
dec
hlt
dec
xor
jno
add
addr16
cs
add
xchg
ljmp
xor
insl
dec
add
loope
cmp
stc
inc
add
and
dec
or
out
add
lods
test
push
mov
sub
dec
andb
aam
add
fcompl
pop
sbb
push
jno
scas
inc
cld
add
std
daa
jo
add
add
cmp
sar
add
insl
lea
jne
and
je
cmp
add
jmp
inc
rol
inc
push
xchg
or
shlb
fmull
add
lcall
pusha
sub
mov
dec
adc
push
inc
add
data16
add
or
out
cmp
decb
xchg
mov
lret
mov
testb
and
sbb
adc
pusha
inc
lods
push
or
push
pop
pushf
sbbl
add
aam
iret
imul
stos
add
sarl
add
push
adc
orl
sub
jecxz
sti
loopne
or
insb
jp
xchg
and
dec
add
sub
pop
add
push
inc
push
push
or
arpl
fdivs
adc
add
mov
cmp
test
adc
dec
loop
xor
pushl
mov
loope
sub
inc
outsl
fildl
or
inc
lea
pop
inc
adc
ficompl
fnstcw
ljmp
jmp
adc
add
dec
cmpb
jne
pop
lock
jmp
add
xor
adc
xchg
movl
fadd
cmp
pop
sti
add
test
rolb
add
or
mov
add
rcrl
lds
xor
xor
inc
xchg
js
mov
cwtl
fstpt
mov
sbb
add
push
jle
das
iret
or
dec
mov
mov
loope
cmpps
dec
clc
inc
in
mov
add
adc
fists
pop
add
add
popf
mov
repnz
push
add
dec
pop
or
je
stc
jg
test
push
inc
mov
lock
aaa
sbb
jne
andb
push
cmp
and
cmp
add
je
and
adc
push
mov
and
pop
xchg
int3
ficomps
in
cmp
aas
add
mov
leave
add
pop
mov
push
jbe
into
inc
add
add
cmc
loope
add
loopne
sub
jle
adc
call
push
dec
add
gs
add
mov
insl
jp
cmp
add
dec
fcoms
sahf
add
push
lods
faddl
mov
cmp
add
mov
std
or
or
jg
add
rcrb
inc
or
adc
sub
add
mov
add
xor
xor
sbb
fimuls
enter
cmp
ds
outsb
jmp
push
xchg
mov
dec
sbb
xchg
add
jg
inc
loope
cld
adc
add
or
and
clc
and
jbe
mov
lea
cmc
add
sarl
cld
ret
movsb
adcb
jns,pt
repnz
dec
out
and
out
jp
fwait
xchg
jl
push
mov
mov
cmp
dec
add
xor
xchg
movsb
lret
mov
cs
xchg
jne
push
mov
add
push
ret
jmp
xor
push
je
daa
pop
adc
xlat
and
addr16
mov
pop
lret
and
add
int3
cld
adc
pop
ret
out
fld
sub
mov
or
inc
lea
popf
test
inc
shlb
xor
test
sbb
sbb
or
sub
push
mov
movsl
add
jo
xchg
inc
sbb
or
sahf
push
scas
in
mov
or
pcmpeqw
decl
aam
xor
or
mov
add
mov
dec
inc
pop
adc
inc
frstor
pop
add
jg
xor
or
adc
rcl
push
inc
push
xchg
imul
add
out
push
hlt
jnp
inc
add
sbb
call
or
adc
or
cmpb
jecxz
mov
add
mov
ret
or
inc
icebp
add
push
int3
jmp
add
dec
jne
sub
push
jp
pop
xchg
fmull
pop
mov
shlb
and
insb
or
cwtl
add
inc
mov
and
ret
outsl
cmpsl
bound
add
lock
dec
sbb
and
pop
shlb
add
cmp
or
movsl
dec
xor
rolb
push
and
rcrl
dec
xor
xor
cli
adc
pop
je
jge
xor
cmp
mov
add
std
jle
sarb
add
or
cmp
xchg
dec
xchg
sub
adc
lea
add
ret
jle
mov
add
sbb
add
add
xchg
lds
xchg
repnz
push
pop
sub
cmp
inc
xor
xor
or
xor
add
sbb
push
mov
dec
or
nop
pusha
fld
movsl
js
je
adc
mov
adc
mov
pop
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
add
inc
subb
lret
aad
inc
add
adc
push
xor
push
add
shl
repnz
cli
add
loopne
pop
rsm
dec
lods
jae
add
inc
ljmp
add
mov
sbb
andl
add
dec
cmp
inc
jb
lock
hlt
test
pop
cmpsb
cmp
stos
add
and
pop
inc
adc
dec
sbb
mov
ljmpw
jnp
add
je
rorb
in
push
push
push
jmp
cltd
cmp
fiadds
orl
rolb
sbb
rcr
sub
movsl
add
int3
add
rorb
lock
jo
add
hlt
lds
iret
inc
arpl
adc
sbb
lcall
pushf
hlt
xlat
les
stc
add
ret
add
or
add
add
add
mov
sbb
xor
add
push
sbb
enter
mov
xchg
and
sbb
dec
jl
cmc
jge
sub
xchg
dec
xchg
das
fidivs
push
lahf
movsb
xchg
rcrb
lret
stc
icebp
push
jae
sub
test
add
add
jne
mov
add
jg
in
adc
rcrl
add
push
fldl
das
shrb
hlt
ds
pop
lods
roll
dec
push
add
test
add
cmp
push
mov
mov
gs
pop
or
lahf
add
xchg
pop
and
mov
clc
adc
js
xchg
or
insl
shlb
pop
inc
cwtl
inc
push
add
ss
lock
push
sbbb
or
inc
mov
jne
inc
mov
push
in
jge
daa
aam
inc
jbe
je
add
and
pop
push
add
xchg
imul
push
pop
push
popa
adc
jne
hlt
mov
pop
push
into
jb
add
les
xchg
loop
jae
adc
xor
push
mov
inc
or
gs
cmp
lcall
call
cmp
add
xor
enter
cmp
add
je
testl
pop
mov
rorl
cltd
rolb
xor
cmpb
push
je
push
ss
add
loopne
cmp
jbe
or
pop
cmp
ljmp
jmp
sub
add
in
lea
adc
pop
imul
push
or
cmpb
pop
dec
mov
fs
mov
and
test
adc
push
dec
add
cmp
add
xchg
dec
pushaw
and
cmc
rolb
stos
and
xchg
push
out
fcomps
jne
add
jb
das
adc
jge
mov
add
sub
sub
cmpsl
xlat
pop
cli
push
aam
mov
push
sbb
mov
mov
xchg
popf
jmp
loopne
call
sarb
add
lret
mov
pop
ret
loopne
dec
sti
xor
mov
cmp
fdivs
mov
hlt
or
add
popa
das
cwtl
and
aam
out
cli
andb
adc
je
lret
cmc
mov
sbb
cli
add
jmp
add
shl
inc
mov
dec
jne
jl
out
add
jg
das
cmpsl
push
lds
add
repnz
push
ret
fstpl
add
jmp
push
mov
inc
loop
in
rolb
aas
sub
shrl
pusha
dec
xor
push
test
data16
or
add
inc
stos
call
std
in
xchg
inc
adc
pop
inc
adc
add
mov
fsubl
sbb
add
in
lret
stos
sbb
lods
divb
mov
out
push
mov
sbb
fcompl
sbb
lods
or
add
push
call
hlt
pop
jne
int3
inc
push
mov
push
es
pop
mov
sub
je
pop
jp
add
push
add
jbe
add
inc
pop
repz
push
or
sub
call
dec
sbb
pop
fucom
ljmp
or
or
andb
sub
add
adc
and
loopne
hlt
add
adc
test
scas
xchg
repnz
and
add
test
loopne
in
nop
sbb
call
jnp
lcall
movsb
fldlg2
popa
dec
enter
pop
push
push
sbb
push
mov
ds
xor
adc
int
mov
xor
stos
add
push
push
add
inc
sti
dec
sysexit
jge
aas
stos
incl
and
jecxz
add
cld
add
add
lea
iret
clc
or
addb
push
pop
imul
cmovge
push
call
inc
push
mov
clc
aas
sbb
test
rolb
fs
or
movsl
int
fstpt
xor
sub
sbbl
xchg
pushf
cmp
adc
nop
cmpb
shrl
hlt
mov
add
mov
in
add
dec
sub
sbb
or
adc
pop
xorb
mov
sbb
adc
pop
add
xor
and
ss
xor
add
push
xchg
int
test
ficoml
movsl
cs
add
fsubl
push
rcl
mov
decl
lahf
mov
adc
push
add
repnz
out
xchg
popa
lods
mov
cld
enter
add
shrb
xor
xchg
add
or
shl
sbb
inc
sbb
clc
mov
jle
aas
in
add
mov
jp
add
add
insb
sub
and
cmovp
add
data16
jp
push
add
lods
xchg
mov
enter
fsub
ret
imul
dec
sub
pop
cwtl
in
add
mov
mov
outsl
das
dec
add
push
shlb
cmp
sbbb
imul
shlb
add
push
lods
inc
inc
dec
ret
loop
adc
sub
add
add
adc
and
sub
push
pop
stos
push
mov
lahf
fadds
mov
jo
cwtl
cmovae
hlt
mov
stos
add
xor
aaa
aas
adc
pop
push
jae
push
xor
add
jbe
sbb
add
test
es
stc
les
bound
movsb
add
xchg
push
dec
decb
jns
add
adc
addl
enter
mov
sbb
mov
adc
pop
insb
bound
add
sub
popf
mov
decb
leave
mov
loope
imul
addb
xor
jl
adc
adc
flds
cmpsb
or
add
mov
jo
inc
xor
or
call
mov
xlat
in
adc
rclb
adc
pop
adc
arpl
sti
dec
bound
sub
shll
adc
add
test
lret
xor
fbld
call
pop
pusha
repnz
mov
xor
les
daa
cmpsl
add
jnp
mov
jae
xor
test
add
pop
add
or
mov
cld
mov
popa
adc
sub
stos
mov
or
adc
pop
pop
aam
push
pop
into
pop
test
pop
scas
add
ljmp
incb
stos
mov
adc
push
mov
stos
sub
icebp
cs
pushl
add
fs
or
pushf
dec
popf
movsb
inc
test
add
push
shl
clc
add
ljmp
push
cltd
ja
add
adc
add
lret
les
pop
adc
iret
add
mov
jg
dec
add
in
stos
dec
adc
data16
jno
inc
loop
arpl
mov
test
add
add
fwait
add
in
or
adc
cmpsl
add
mov
or
mov
adc
dec
lds
dec
pop
sub
jnp
cmpsl
xchg
sbb
add
pop
repz
push
inc
pop
push
add
pop
gs
cmc
push
shlb
jl
incl
push
mov
repz
roll
lret
shl
stc
and
add
pushf
push
add
arpl
mov
xchg
bound
add
sub
je
cmpsl
sbb
daa
adc
sbb
out
andb
or
inc
pop
pop
mov
jl
add
and
mov
outsl
andb
cmp
shrb
add
jle
or
decb
or
adc
sub
flds
push
sbb
out
inc
cli
pusha
cmp
sarl
add
pop
and
lea
inc
add
dec
inc
add
xchg
and
add
xor
dec
inc
stc
jno
insb
aam
lods
stc
jo
ret
add
test
jg
lret
or
add
push
xchg
cld
fmuls
jne,pn
mov
sbb
cltd
adc
xchg
add
pop
sub
movsl
adc
stos
push
mov
lods
out
leave
sbb
or
data16
sbb
mov
mov
sbb
inc
lock
mov
mov
add
pop
inc
xor
pop
push
aad
jnp
sub
add
cmpsb
pop
daa
movsb
xchg
add
push
xchg
sub
mov
je
jmp
dec
jnp
pop
adc
jb
dec
or
xor
or
mov
add
loopne
fsubs
outsl
add
test
dec
dec
nop
addb
and
adc
ret
subl
rolb
pop
aad
jns
xor
aaa
cli
sub
mov
test
add
cmc
mov
push
hlt
cltd
mov
imul
and
add
or
cli
sbb
jg
mov
and
push
leave
sar
roll
or
addr16
xlat
mov
aas
cwtl
stos
dec
les
fisubrl
ror
and
sbb
push
dec
add
insl
imul
scas
and
pop
push
adc
push
hlt
cmpsb
pop
test
add
cld
shll
inc
inc
loope
pop
and
enter
addb
int3
stc
xchg
or
mov
stos
out
push
sbb
sbb
fisubl
pop
add
lcall
in
jg
pop
sbb
dec
mov
cli
add
cmpsl
and
cmp
mov
pop
mov
fimull
stos
mov
test
sbb
and
cmp
dec
jne
rol
xor
xchg
fildll
test
add
or
add
or
mov
add
adc
ret
jmp
mov
push
scas
lods
inc
fimull
in
dec
add
add
gs
repz
adc
push
cmp
dec
ds
dec
lahf
and
dec
jae
add
insl
mov
add
das
adc
lods
icebp
lret
ficomps
jge
cs
mov
mov
nop
push
leave
adc
mov
repz
add
mov
xchg
add
jae
or
jl
pop
mov
push
jge
jbe
cmpsl
fs
jns
or
sbbb
loope
add
cmc
dec
out
push
adc
dec
aaa
ljmp
outsl
adc
pusha
lahf
cmp
in
test
pop
add
outsl
or
inc
or
je
jns
push
sbb
sahf
sub
pop
stc
in
fildll
add
fcompl
lea
xor
mov
arpl
test
dec
add
and
sbb
sub
add
push
cmpsb
aas
test
cmp
push
mov
inc
out
pop
dec
or
cwtl
xchg
pop
bound
push
inc
mov
pop
mov
aam
add
fcmovnu
dec
mov
lods
add
dec
xchg
lea
ja
jl
sbb
mov
sbb
pusha
push
lds
and
stc
xor
xor
iret
cmp
in
add
bound
pop
push
xor
dec
jg
jb
add
or
add
inc
cmp
sub
dec
imul
bound
insl
adc
add
ret
icebp
push
mov
add
jmp
mov
pop
push
sbb
pop
xor
push
fiadds
mov
arpl
cwtl
and
rcrb
add
inc
jae
arpl
in
lock
fstp
and
push
add
fmull
adc
push
daa
sub
popa
and
push
mov
sti
dec
pop
int
iret
cmp
add
data16
sahf
aam
add
and
stos
and
push
ret
jmp
sub
mov
add
enter
sub
push
inc
adc
adc
add
or
aaa
lods
popf
add
ret
push
test
js
mov
add
loop
loopne
sbb
mov
mov
add
mov
jb
sbb
pop
inc
inc
and
add
xor
orb
test
jb
insl
mov
xchg
jno
rdtsc
les
mov
and
cmp
dec
and
add
test
pop
push
pop
cmp
adcb
inc
jns
sub
icebp
pop
adc
push
lods
cvtdq2ps
fldl
scas
outsb
adc
mov
add
lock
dec
adc
mov
push
xchg
adc
mov
cwtl
hlt
add
xchg
pop
pop
sti
push
sbb
outsb
jnp
and
sbb
jno
ds
cmp
sub
shlb
test
or
add
pusha
mov
push
stc
insl
ja,pn
push
cli
jg
sbb
add
jge
fbstp
outsb
cwtl
addr16
add
push
shlb
inc
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
and
sbb
push
popa
ja
jge
jl
add
dec
shrl
jnp
jle
add
jo
inc
pop
xchg
outsl
insb
loopne
jno
pusha
add
push
jae
imul
jns
and
jp
add
sub
or
jae
jp
out
fimuls
jb
jle
add
popa
mov
bound
data16
xchg
inc
push
inc
or
jbe
jno
inc
add
cmp
loope
push
test
icebp
dec
push
add
adc
jg
mov
or
push
jae,pn
push
dec
arpl
ljmp
sbb
push
xchg
ja
jo
arpl
cmp
mov
addr16
popa
shlb
xchg
je
add
mov
dec
iret
jo
outsb
imul
repz
add
push
imul
sti
and
xchg
pusha
add
outsb
dec
push
or
xchg
sbb
mov
inc
add
arpl
clc
bound
or
jge
jp
lock
add
lods
xor
outsl
sub
bound
loopne
push
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
or
add
mov
push
mov
out
test
inc
lret
dec
xchg
mov
push
xorb
mov
fs
out
sbb
or
dec
jp
inc
cmp
adc
bswap
daa
in
inc
mov
and
pop
push
dec
popa
jae
jae
sbb
mov
xor
fs
cld
add
xor
add
fcompl
adc
adcb
xor
mov
add
cs
add
hlt
sarl
add
xor
or
push
sbbb
cmovno
mov
aas
fdivs
push
xchg
add
sub
jge
inc
push
sbb
push
cmp
das
clc
push
test
mov
jne
hlt
xchg
add
stos
fwait
shlb
hlt
dec
sbb
inc
ja
in
cmp
add
lret
fstps
add
mov
aas
enter
mov
xor
mov
ret
cmp
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
cld
iret
mov
add
rcll
add
xchg
pop
add
into
and
dec
fcoms
add
push
or
rol
add
sbb
xor
and
imul
add
or
mov
push
nop
sar
pop
sbb
jno
gs
xchg
cmpl
add
and
or
and
add
or
ret
inc
rol
cmp
cmp
lock
aaa
out
mov
push
add
push
add
push
add
sbb
and
and
fsubl
jne
add
sub
inc
xor
cmp
cmp
fs
xchg
add
out
xchg
mov
cmpsl
shlb
cmp
or
dec
and
hlt
pushf
in
aam
loop
cmpsl
sub
xor
mov
push
sbb
dec
and
cmp
enter
jo
je
aaa
adc
jl
mov
rol
pop
add
mov
xchg
add
test
and
sbb
jo
dec
inc
call
cld
pop
add
or
mov
call
cmp
outsl
push
jo
or
fldl
dec
cmpsb
les
and
and
leave
pop
ficomps
lds
std
dec
cltd
lods
test
into
and
rorb
shl
cmc
roll
aad
dec
mov
faddp
and
pop
insl
cmp
int
mov
and
rorl
mov
add
les
int3
add
inc
shrb
mov
add
fsubrs
call
mov
pop
in
push
xchg
sub
lock
xchg
fxtract
pop
les
mov
lods
shll
lahf
sbb
cmpsl
psrlw
dec
lcall
std
dec
iret
or
adc
add
loop
aas
adc
stc
mov
sub
sub
shll
jle
xor
icebp
cmp
mov
lds
lods
mov
add
jae
ficoms
mov
add
fmul
or
jle
test
add
shlb
cwtl
add
adc
clc
cmp
add
scas
fcomps
xlat
fistpll
or
add
lea
hlt
cmp
enter
or
out
sub
jp
negb
hlt
fwait
dec
dec
or
mov
adc
cmp
sbb
sub
rorl
jnp
jl
jg
jne
add
sub
add
adc
mov
outsb
xor
into
fcoms
sbb
mov
shrd
jp
push
into
cltd
and
test
aaa
jne
xor
divb
adc
and
fidivrs
stos
add
xchg
fsts
or
jnp
add
in
in
lret
xor
jae
stos
js
add
add
add
out
pop
inc
or
dec
and
cltd
cmp
cmpsl
pop
add
inc
jmp
jge
add
push
cmp
add
cwtl
das
add
add
mov
jp
add
andb
jmp
int3
cmp
ja
cmp
inc
add
sub
push
lret
xchg
lock
outsl
cmp
cmp
pusha
loope
in
insl
xchg
adc
in
add
insb
sbb
push
lret
mov
loopne
inc
sbb
jb
lcall
push
mov
add
stc
add
mov
in
lods
or
add
ret
pop
shl
lock
add
mov
mov
and
mov
mov
mov
push
push
inc
aam
test
mov
jne
dec
out
mov
add
gs
imul
adc
shlb
pop
add
das
stc
mov
mov
sub
sbb
mov
push
call
gs
outsl
jne
jns
data16
jb
mov
enter
mov
shll
jae
mov
xor
insl
ret
int
add
fstpt
jg
and
add
sti
sbb
clc
add
roll
in
sbb
pop
push
cwtl
lds
pusha
cmpb
je
add
stc
leave
push
call
mov
xor
mov
addb
push
mov
shl
test
inc
enter
inc
inc
dec
call
or
adc
rcll
cmp
cli
verw
inc
jno
sub
je
add
bnd
mov
cmp
lss
push
mov
add
jmp
ret
xchg
jae
inc
mov
mov
add
cmp
inc
add
cmp
and
sbb
jo
jg
push
lods
pushl
imul
jg
xlat
mov
jo
add
cmp
and
scas
adc
rorl
pop
cmp
push
outsl
adc
pop
in
lret
lahf
fmuls
push
jg
inc
dec
adc
or
xchg
add
cmp
sub
push
nop
add
cmp
add
add
leave
adc
add
add
out
add
cmp
ja
push
xlat
xchg
loop
dec
add
daa
outsl
repz
incb
add
ror
ret
and
inc
loopne
add
cmp
jae
pusha
add
jnp
sbb
je
mov
jecxz
and
push
add
jge
sub
clc
xchg
or
dec
lock
dec
int3
and
pop
daa
pop
filds
inc
push
pop
shrl
add
inc
popa
arpl
cmp
nop
lcall
cld
sbb
cmp
pop
mov
imul
testl
popa
adc
addl
sbb
add
decl
fs
push
rcl
pop
bound
inc
ja
stos
inc
sub
out
add
mov
adc
add
mov
mov
icebp
lods
stos
or
pop
jge
aas
jnp
addb
mov
jae
sahf
mov
push
jge
pop
into
loopne
rcl
mov
sti
jno
add
jns
ret
ret
je
adc
or
sub
push
sbb
push
and
inc
stos
enter
add
pop
sarb
push
ret
jns
inc
sar
addb
mov
push
fdivrl
das
sbb
cltd
hlt
jp
mov
test
aaa
add
dec
shr
inc
pop
jle
add
shlb
daa
or
jp
fiaddl
push
inc
jmp
lea
pop
not
ljmp
cmp
add
xchg
cmp
add
jae
jno
dec
and
add
sbb
std
rorl
fildl
inc
xchg
pop
push
add
mov
sbb
inc
sbb
xor
xor
in
mov
add
je
pop
push
jne
and
xor
std
sub
jae
cmp
lea
into
inc
cmp
andb
ds
add
push
jne
push
jle
xor
sub
xchg
fldenv
push
lods
or
inc
sbb
je
xor
mov
add
xchg
insl
out
in
ret
add
addl
cmpsl
mov
les
cld
cmp
cmp
fistps
and
add
out
add
sub
shr
add
mov
dec
add
or
and
add
jae
test
jbe
sbb
dec
and
mov
iret
add
add
popl
or
insb
pop
pop
mov
pmaxub
sub
jl
jns
aas
xor
add
sub
lcall
xor
hlt
imul
push
sbb
cmp
test
inc
lea
sub
lret
fdivl
dec
mov
andb
or
addl
sub
mov
add
and
and
sbb
adc
and
test
add
lods
in
or
adcl
add
add
aaa
sbb
enter
mov
push
movsb
and
in
adc
mov
mov
cwtl
add
xor
xor
in
mov
mov
popa
ss
cmc
stos
sbb
push
mov
inc
lret
adc
or
adc
arpl
add
pop
xchg
sbb
jo
loope
gs
xchg
ds
add
lret
sub
and
sbb
push
dec
ret
clc
add
push
popf
pop
mov
cwtl
sbb
cs
sub
and
cmp
lea
jle
jp
inc
shl
add
fisubl
inc
or
mov
adc
fisttpl
cmp
push
fs
and
and
je
xchg
mov
ja
add
add
fldl
les
je
jle
test
cltd
mov
sbb
or
push
add
sbb
xor
popf
push
inc
pop
adc
xor
mov
mov
or
lock
add
jle
cmp
pop
cmovg
push
add
add
push
fdivs
shll
inc
lret
adcb
xchg
cmp
addr16
insb
incb
movsl
clc
aam
cmpl
faddl
cli
ret
inc
stc
sti
dec
dec
aaa
out
add
cmp
loopne
mov
addb
add
adc
add
test
sbb
sub
mov
cmpl
str
xchg
or
mov
pop
aad
push
mov
adc
enter
lahf
fwait
cmp
dec
add
adc
jmp
nop
cs
dec
inc
pop
es
cmp
mov
add
xchg
mov
jmp
test
jmp
add
pop
adcl
int
add
jne
pop
add
xlat
outsb
fmul
loopne
push
pop
divl
add
js
push
push
push
mov
add
lods
inc
jo
push
cmp
adc
add
xchg
jg
push
add
enter
leave
xor
add
push
xor
add
pop
adc
mov
shr
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adcb
add
imul
sub
loopne
lcall
outsl
mov
mov
pushf
mov
and
scas
movsl
dec
inc
push
sarb
jbe
push
out
sbb
jmp
jle
sub
loope
cmp
push
push
shll
fiaddl
inc
and
pop
sub
mov
dec
cmp
js
or
je
push
fadds
sub
mov
xlat
test
loopne
xor
mov
shld
mov
add
or
in
ja
or
sbb
addb
mov
xor
pop
sbb
in
add
rcrb
je
dec
addb
jl
push
xchg
xchg
jmp
ret
sub
clc
push
leave
add
cmp
hlt
cld
nopl
push
call
test
ds
imul
push
gs
add
jecxz
add
pop
push
cmpsl
push
movhlps
mov
mov
add
or
adc
xchg
add
ljmp
cmp
adcb
es
out
pop
daa
jl
scas
frstor
push
dec
clc
cmc
mov
mov
cmp
mov
fiaddl
nop
add
push
mov
enter
mov
add
in
add
cmp
add
mov
fsubr
imul
jb
test
sbb
inc
out
sub
mov
mov
xchg
std
popa
or
add
cmp
jbe
pop
dec
int3
cli
mov
and
sub
adc
sub
ds
icebp
shrb
mov
add
pop
arpl
pop
das
add
or
mov
push
or
sub
jmp
lock
add
adcl
jne
or
pop
fs
xchg
xchg
add
and
jmp
sbb
jmp
ret
push
mov
mov
pop
and
jge
add
xchg
add
ret
rcll
mov
lahf
loopne
push
mov
inc
scas
sbb
mov
xchg
or
iret
add
add
mov
sbb
idiv
and
movsl
js
ret
add
ret
pusha
imul
or
cwtl
cmp
xchg
fidivrl
rclb
add
sub
cltd
add
xchg
ret
push
lock
mov
roll
lret
add
enter
inc
dec
push
sti
out
aas
add
fisttpll
imul
inc
mov
cltd
jmp
repnz
test
mov
add
mov
add
inc
test
add
mov
in
mov
mov
inc
push
dec
pusha
stc
addr16
mov
mov
andl
testl
out
push
fbstp
divb
sub
pop
sbb
push
inc
push
imul
lods
int
xchg
sub
xor
jbe
mov
lock
add
daa
shlb
cmp
push
sbb
lods
add
jo
popf
cvtpi2ps
dec
sbb
or
inc
xchg
mov
mov
xchg
clc
bound
jmp
jb
cmp
jbe
stos
mov
sbb
mov
pushf
sub
and
leave
out
test
xchg
icebp
xchg
lret
add
movsb
lock
add
repz
cmp
or
push
pop
cwtl
ret
orps
dec
add
cwtl
in
cmp
cli
add
sti
stos
add
xor
and
bound
inc
test
mov
dec
xor
and
add
lret
addl
mov
dec
xorps
sarb
push
imul
test
ja
mov
testl
and
add
cmp
push
xchg
stos
add
fcos
and
or
loop
lahf
mov
add
cmp
lock
xor
add
ja
add
push
add
xor
hlt
inc
lea
cmpsl
mov
push
xchg
sub
cld
leave
add
mov
inc
mov
pop
add
movsb
or
pop
add
cmp
adc
cltd
xchg
shlb
dec
xchg
cli
ss
orl
xchg
loopne
and
and
lods
leave
xor
push
imul
popf
or
push
jmp
cmpsl
loop
xchg
dec
or
inc
addl
movsl
cmpsl
xchg
add
xor
stos
xor
mov
into
rol
dec
add
inc
add
jg
ss
cmp
sub
add
and
mov
inc
mov
fmuls
ja
dec
stos
movsb
mov
add
out
xchg
or
jne
adc
inc
fdivr
aam
addr16
add
out
popf
jg
jo
add
add
cmp
adc
rol
push
and
add
out
jmp
cmp
add
lds
scas
sbb
cli
inc
push
addb
cmp
cwtl
adc
or
add
lahf
rcrl
lods
add
fdivs
rclb
dec
or
rcll
nop
movsb
add
sar
dec
push
and
xchg
and
cmp
jns
adc
mov
imul
cmpsb
add
int3
in
mov
dec
leave
cltd
inc
xor
mov
and
dec
add
int3
xchg
mov
add
jmp
xor
test
sub
add
cmp
loop
pxor
lods
adc
add
add
inc
jno
mov
cld
leave
hlt
movb
adc
add
ja
bound
cmp
push
inc
sub
push
cmp
jns
adc
mov
pop
jle
addb
dec
popa
cmp
mov
mov
jns
or
imul
xchg
xlat
add
imul
add
out
das
pop
std
add
sub
mov
call
add
insl
dec
lods
cwtl
jae
inc
mov
cmp
inc
add
adc
xor
dec
dec
int3
loopne
cwtl
sarb
jmp
scas
cmp
add
pop
test
add
es
push
sbb
sub
je
mov
add
mov
sbb
adc
test
std
cmp
aas
gs
loopne
jge
adc
sub
push
sub
add
cmp
xor
rolb
jmp
int
add
maskmovq
rorb
das
add
ss
cltd
jb
xor
add
sub
mov
and
xor
pop
or
and
push
add
add
dec
out
sti
adc
mov
inc
lahf
call
add
add
jno
push
or
dec
out
mov
inc
rcrb
cld
add
jo
ljmp
lods
ret
pushf
nop
dec
sbb
add
dec
or
fisttpl
loopne
dec
sub
inc
punpcklbw
lret
or
inc
xor
cmp
add
pop
sarb
add
dec
shlb
mov
sarl
addl
mov
dec
mov
in
orb
das
add
xor
mov
adc
mov
push
xchg
or
mulb
orb
jb
inc
add
out
sub
jle
je
cmc
pop
pop
and
test
out
mov
pushl
adc
ljmp
mov
mov
pop
sub
notb
shll
add
insb
and
filds
int
sbb
rorl
fmuls
rclb
fucomip
add
jbe
mov
hlt
jne
pop
test
mov
dec
xor
xchg
imull
and
roll
clc
seta
xchg
loop
out
cwtl
mov
in
aas
jae
cmp
jg
loopne
or
jnp
cmp
fwait
xchg
scas
add
xor
sub
jp
bswap
jle
push
pop
testb
dec
fldenv
and
mov
mov
inc
mov
jae
pop
inc
and
test
pop
mov
or
sbb
sbb
push
cmpsl
xchg
pushf
inc
sahf
add
mov
loopne
xchg
add
into
jns
sub
mov
jl
mov
add
hlt
clc
mov
mov
idivl
loopne
jmp
test
out
jo
ds
sbb
push
inc
inc
sub
xor
clc
mov
stc
mov
cmp
ja
xor
adc
dec
adc
loope
mov
add
fldcw
sub
inc
xor
popa
jae
xor
add
dec
outsb
je
add
dec
std
fldenv
push
push
iret
jb
dec
js
arpl
fs
dec
popa
sbb
push
dec
jp
mov
fnsave
dec
les
pop
jl
add
in
xchg
mov
addl
shll
cmp
test
rorb
insb
cli
add
decb
cmp
lret
pcmpeqw
insl
loope
pop
xlat
inc
inc
dec
jnp
add
ret
repz
cli
mov
imul
pop
push
out
test
jb
out
rolb
and
shll
pusha
cmp
add
push
je
int3
jmp
dec
lock
nop
test
inc
mov
leave
add
lea
dec
les
mov
dec
dec
cmp
cmp
add
idivb
fstl
pop
and
ret
sti
mov
push
adc
jl
xor
xchg
aad
sub
lods
add
sub
mov
or
add
push
cmpsb
data16
movsl
add
stc
cwtl
or
sbb
loopne
or
dec
aas
xchg
dec
inc
or
add
mov
and
cmc
xchg
mov
add
jbe
movb
jmp
add
xchg
push
addl
inc
jbe
mov
xchg
sbb
enter
xchg
add
mov
xchg
imul
inc
xor
aam
test
push
pop
lea
call
das
xor
add
inc
sub
test
pop
scas
cmp
mov
push
add
shrb
sbb
movsb
cmpsl
add
mov
sti
mov
add
aam
xchg
mov
jge
add
push
enter
test
in
xchg
fmull
xchg
scas
ss
mov
loop
add
adc
push
call
add
push
mov
pop
pop
ss
sbb
xchg
mov
jae
pop
fsubrs
sti
orl
jbe
xchg
dec
cmpsb
add
push
popa
aaa
popl
adc
inc
ljmp
sbb
and
call
and
popf
jns
add
add
imul
faddl
pop
cltd
jmp
push
scas
mov
xor
add
add
cmp
addr16
test
xchg
cwtl
ret
pop
aam
hlt
pop
movsb
add
mov
aas
dec
push
add
xchg
adc
pusha
sbb
add
js
mov
jns
arpl
and
add
xor
sub
push
jae
pop
lahf
lea
lcall
test
or
sete
pop
test
jecxz
lods
stos
arpl
jmp
sub
push
inc
test
fcomps
adc
mov
xlat
and
add
hlt
or
xchg
adc
sub
rolb
enter
test
push
push
fsubs
dec
lret
push
shrb
adc
adc
cmpb
dec
testb
mov
nop
fisttpl
jmp
rolb
mov
lcall
mov
testl
or
clc
fs
cwtl
inc
push
mov
cmp
jg
mov
lret
sbb
shl
fimuls
incb
scas
ret
pop
add
or
push
add
lahf
push
sbb
out
or
xor
jns
add
and
or
outsb
jne
roll
loop
add
mov
cmpb
push
inc
xchg
mov
add
bound
push
stos
jb
dec
in
fwait
add
inc
out
cli
fiadds
mov
out
mov
add
xchg
into
jl
lods
stos
les
movsb
push
rcrb
add
ljmp
cli
repnz
dec
ret
add
or
in
shr
cmp
or
adc
add
and
adc
mov
lahf
cmp
pop
or
sti
xor
adc
mov
pop
and
push
add
and
je
pop
or
rorb
and
fildl
add
aaa
incl
cld
dec
push
jg
xlat
jmp
inc
adc
subl
cmp
filds
xchg
xchg
pop
aad
xor
or
add
loop
sub
or
pslld
inc
or
mov
xor
call
dec
add
dec
sub
xlat
jb
pop
into
jmp
imul
and
mov
fs
es
pop
pusha
add
aam
mov
add
ffree
imul
and
pop
xchg
scas
fadds
test
sub
mull
add
jle
xchg
sbb
cli
leave
orb
mov
add
int3
push
or
jno
pop
mov
inc
pop
rdmsr
pop
sbb
push
push
add
cli
add
adc
mov
cmp
fstpt
cmp
add
shlb
mov
push
pop
jmp
nop
push
fchs
cmp
dec
and
enter
bound
pop
or
dec
xchg
fsubrl
add
add
add
inc
loopne
fnstenv
adc
xchg
lds
das
nop
out
dec
add
test
hlt
mov
cld
pop
push
fcomp
inc
or
mov
jno
pop
add
pop
dec
sbb
push
add
push
and
inc
mov
les
jl
mov
imul
sbb
movsl
lods
cmpsl
add
mov
in
cs
add
xchg
insl
or
cmp
and
scas
bound
xchg
mov
adc
lods
ds
mov
ss
mov
add
xor
mov
lcall
bound
push
add
fldl
mov
int
jnp
sbb
fsubs
shlb
lea
pop
ret
jecxz
ret
and
ja
add
sbb
sti
mov
mov
add
push
and
mov
mov
testb
sub
ficompl
add
movsb
adc
orps
stos
jecxz
jl
push
fnsave
add
test
sub
or
cs
pop
and
add
jge
inc
faddl
dec
mov
inc
cmp
js
xchg
sub
clc
or
mov
pop
adc
scas
pusha
xor
pop
add
out
cmp
pop
and
ss
push
je
mov
add
xchg
std
ret
repnz
and
test
add
xchg
jnp
xchg
and
shrb
add
out
push
pop
pop
inc
fstpt
lea
repz
repnz
jnp
mov
add
inc
mov
add
enter
pusha
pushf
jns
or
popf
psrad
sub
add
push
icebp
ret
xor
fwait
arpl
mov
in
mov
add
imul
mov
pop
add
add
dec
jmp
mov
xlat
nop
cmc
cmp
popf
into
lahf
seta
and
mov
mov
pop
push
add
or
outsb
add
fwait
loopne
mov
add
and
add
fadds
fiaddl
repz
inc
dec
mov
cmpb
cmpl
mov
xorb
mov
cmp
shlb
popf
adc
xorb
aaa
mov
dec
pop
into
xchg
push
cmp
adc
jecxz
out
inc
test
xor
ljmp
xor
cs
sub
cmp
or
es
add
lods
popf
lds
call
cmp
sbb
add
lahf
repz
repnz
or
mov
roll
dec
ja
or
add
sbb
jne
sub
icebp
jne
push
mov
and
lea
adcb
leave
movsl
xor
and
jbe
add
xor
mov
cli
inc
jne,pn
and
add
sub
mov
lods
cmpsb
orb
and
inc
cmp
add
or
pushf
cmpsl
loop
das
or
ret
lock
mov
dec
add
lea
push
adc
test
cmpsb
ja
add
incb
in
or
mov
pop
adc
sbb
cli
lock
inc
push
pusha
clc
jo
mov
js
add
add
jg
add
adc
adc
push
outsb
addb
mov
ret
or
lock
adc
add
sbb
pop
mov
add
and
push
cmp
add
xor
aaa
add
out
adc
push
les
loope
pusha
test
or
jp
cmp
orb
loopne
rolb
pop
hlt
jb
dec
daa
adc
sub
fdivrl
and
xor
fwait
popa
mov
ds
pop
cmc
add
xchg
stos
nop
jmp
xchg
lea
xchg
mov
push
add
mov
sbb
fsubrs
push
push
sub
stos
adc
test
addr16
rep
mov
mov
hlt
or
out
mov
adc
cmp
call
inc
cmp
and
mov
sub
negl
xor
decl
add
cmp
or
sub
adc
add
sarl
psubb
mov
aaa
or
repnz
push
add
add
adc
pop
inc
fsubs
jl
dec
mov
fiadds
shr
sbb
into
and
pop
add
cmpsl
push
daa
arpl
add
cmp
adc
mov
cmp
cwtl
jg
push
lret
mov
stos
ljmp
and
scas
pop
lret
mov
mov
and
xchg
inc
lods
xchg
push
add
pop
xor
rcrb
cwtl
add
inc
dec
dec
adcb
cmp
mov
adc
add
adc
iret
nop
mov
test
or
nop
add
loop
sbb
cmp
jb
lods
cli
mov
add
fisttpll
shr
mov
jb
movsb
inc
mov
cmovno
testb
out
add
loop
lret
or
scas
pop
js
sysenter
jae
daa
daa
adc
dec
sub
and
mov
cmp
and
test
xchg
mov
fxch
push
and
push
add
adc
add
sub
jae
or
add
xchg
aas
cld
iret
adc
jmp
jae
add
xor
or
cld
inc
cmp
or
mov
cmp
icebp
cli
call
xchg
sub
cmp
sub
xchg
inc
add
xor
mov
sahf
jmp
add
add
lea
aad
inc
sbb
dec
push
mov
inc
pop
test
xchg
inc
add
jecxz
fwait
inc
sar
cmp
out
xchg
push
add
inc
imulb
sbb
lea
or
xor
cmp
rcr
add
imul
add
pop
jmp
add
add
mov
inc
mov
addr16
mov
insl
jns
add
and
andb
add
inc
mov
adc
push
add
inc
int
push
es
push
add
lret
test
daa
rolb
mov
subl
lret
inc
int
call
xchg
or
pop
lret
push
add
add
call
adc
inc
cmp
jb
lea
dec
repz
pop
addb
pop
movsb
out
dec
or
out
cli
pop
add
fsubrs
movsl
addb
adc
adc
adc
in
pop
rclb
and
mov
and
jmp
add
jne
push
pop
scas
push
add
xor
jle
andl
jge
dec
xor
dec
pop
mov
mov
gs
push
add
sub
pop
push
xor
or
cmp
mov
dec
lret
cli
inc
add
mov
pop
cmp
dec
add
stos
orb
jmp
push
dec
and
mov
sysenter
inc
push
inc
rorb
add
andl
or
cmp
xorb
mov
sbb
add
rorb
lock
inc
add
dec
jne
sub
add
and
fcompl
nop
pop
add
sbbl
cmp
int3
cmp
jo
nop
mov
jp
loop
mov
bound
push
sub
jbe
dec
enter
dec
xorb
add
mov
xchg
cmpsl
adc
or
add
dec
loopne
sti
and
add
or
lds
inc
mov
movq
dec
test
xchg
aas
addb
cwtl
jl
jmp
in
clc
int3
loop
add
adc
or
pop
adc
fsubl
dec
rclb
mov
dec
jle
sub
data16
pop
iret
or
ljmp
xor
insl
movsb
fcmovbe
xchg
add
pusha
lds
add
lret
bound
inc
sub
add
popa
in
bound
ret
call
cmp
daa
jb
subl
push
add
vpsrad
dec
imul
sub
subb
xor
daa
xchg
add
int3
mov
or
sbb
xchg
sbb
aam
xchg
jle
add
add
shr
cmp
inc
cs
jbe
xor
leave
scas
add
sbb
jmp
pop
push
xorl
aam
push
addl
loopne
mov
shlb
mov
sti
add
push
mov
mov
je
add
arpl
add
sbb
add
pop
push
add
xor
mov
push
xchg
in
pop
adc
lea
cmp
ret
jae
dec
adc
mov
mov
push
xchg
in
and
jnp
jnp
add
xlat
adc
xchg
into
xor
mov
cmp
jb
ret
sub
add
or
add
data16
aad
mov
ja
jae
and
sbb
pop
push
or
test
adc
dec
inc
add
insb
in
outsl
push
cld
int3
mov
and
test
mov
inc
inc
push
mov
dec
movl
add
xor
test
add
call
sub
mov
mov
jo
add
mov
adc
cmpsl
scas
iret
mov
add
jp
lock
js
add
jge
ret
xor
dec
in
imul
movsl
je
bound
orps
cld
shlb
add
mov
add
cmp
add
cmp
ret
pop
and
and
jge
sbb
add
add
add
popa
xor
push
ret
push
pop
dec
push
aad
push
inc
repnz
lods
cmp
inc
add
push
push
inc
enter
jo
push
loope
cmp
xchg
mov
inc
divb
stc
xor
je
pusha
call
adc
adc
les
test
or
adc
jecxz
add
add
test
adc
add
adc
cmp
and
fstps
call
sbb
adc
inc
lock
or
shrb
mov
js
bound
mov
loop
fcoml
mov
add
repz
xor
sub
push
fstl
stos
mov
std
push
shll
inc
jp
add
dec
pextrw
loop
add
inc
or
fcoms
inc
push
add
add
ret
nop
fnstsw
cwtl
or
test
scas
mov
add
mov
adc
in
std
or
adcl
ds
lock
ja
in
out
sub
lret
and
mov
jne
fmul
das
repz
mov
shld
stos
mov
inc
outsl
jge
pop
adc
lock
test
shrb
clc
and
lods
adc
sub
push
and
lock
lods
rorl
int3
add
fdivs
addl
mov
mov
add
mov
xor
and
popa
fists
mov
pop
add
insl
sub
bound
mov
mov
in
incl
call
or
or
lock
in
lds
fsubrl
push
ja
add
decb
clc
push
dec
adc
mov
es
or
nop
sub
adc
fldcw
cli
bound
out
mov
jo
lret
pop
cmpsl
sub
nop
lock
out
jmp
ss
adc
scas
pop
cld
xchg
in
xor
cmpsb
mov
test
hlt
jo
dec
add
in
add
push
je
add
xor
mov
jne
negb
mov
push
add
lea
mov
pop
sbb
jmp
pop
push
add
lahf
xor
and
jo
adc
lock
imul
mov
fidivl
aaa
sub
ret
adc
pop
mov
lahf
add
out
mov
adc
lret
mov
xchg
add
push
fwait
mov
add
imul
add
rorb
mov
add
or
jmp
pop
dec
add
push
push
add
bnd
testl
inc
jae
inc
add
ret
divl
enter
mov
scas
mov
inc
jmp
pop
and
mov
filds
xchg
sub
mov
add
scas
std
loopne
xor
add
pop
or
lock
inc
push
push
xor
mov
pop
ljmp
push
pop
sbb
mov
mov
add
hlt
dec
adc
add
popf
inc
sub
testb
adc
cmp
cmp
sarl
pop
adc
inc
add
mov
jge
cld
cmp
add
mov
push
adc
ss
sub
je
pop
add
das
mov
sub
insb
add
pop
inc
cld
inc
stc
int
pop
cs
cmp
add
les
aad
push
imul
clc
in
pop
repnz
cmp
decb
jmp
mov
ret
cmpb
stos
in
add
mov
and
add
les
xchg
outsb
add
fstpl
fwait
push
mov
or
aam
mov
jmp
bound
jg
seto
cmp
push
das
flds
push
add
xchg
es
inc
add
jmp
push
lea
insl
enter
pop
cwtl
push
adc
arpl
push
sbb
xor
int3
or
ds
subb
add
cs
sbb
inc
jge
pop
push
int
mov
nop
or
mov
inc
ljmp
ds
out
add
aad
cltd
mov
and
jnp
push
add
mov
or
mov
popf
rorb
add
mov
rcr
add
loopne
ja
dec
daa
cwtl
dec
add
jb
aaa
add
push
scas
cmp
adc
fcoms
and
add
pop
sti
in
dec
fiadds
add
mov
xor
mov
adcl
and
adc
subb
aam
xchg
mov
lods
ror
pop
jg
pop
add
leave
sub
sbb
outsb
pop
pop
mov
push
xchg
out
jns
in
clc
jle
inc
xor
imul
mov
sub
clc
mov
sbb
inc
vmread
nop
int
dec
cld
lret
rcll
add
dec
jne
mov
xchg
pop
out
fs
mov
and
or
and
add
inc
movsb
lds
push
dec
cs
cmpsl
add
xor
dec
add
pop
mov
mov
test
sub
add
mov
sbb
add
inc
cmpb
subb
pop
test
pop
xor
pop
inc
dec
adc
mov
push
inc
ljmp
or
pop
mov
adc
add
imul
add
jo
dec
jno
ret
sub
pop
add
pop
idiv
pusha
les
outsb
jb
shlb
je
push
add
push
or
sarb
cmc
push
imul
clc
jg
add
pop
call
sbb
rorb
inc
xor
mov
ds
mov
mov
clc
popa
add
dec
sti
movsb
test
and
jmp
add
imul
and
sbb
add
pop
in
outsb
dec
fadds
cmp
adc
jnp
movb
xchg
cmp
push
fs
xor
push
call
mov
rolb
fdivrs
add
sub
cmpsl
dec
mov
mov
sbb
in
cmp
jae
add
inc
mov
cmpsb
movsb
adcb
subb
add
rolb
mov
mov
pop
dec
jne
xor
loopne
sbb
lea
jmp
xlat
jno
dec
mov
jae
pop
imul
cmp
enter
pop
inc
cmp
xor
lock
add
in
je
mov
pusha
ss
sbbb
ljmp
cmp
repnz
lea
and
adc
push
jo
shrb
in
cmc
or
sub
mov
dec
inc
push
mov
adc
andl
add
jg
sbb
xor
mov
loope
push
inc
adcl
add
imul
cmpsb
add
lahf
fstl
lea
stc
add
loop
leave
xor
pop
push
out
add
xor
lea
inc
adc
xchg
inc
push
je
int
pop
add
pop
cmp
test
dec
add
loopne
and
sub
and
inc
pop
fcomps
int3
adc
popf
repz
mov
add
ja
mov
sbb
sbb
inc
lock
or
loopne
rolb
lret
in
bound
dec
push
or
push
dec
mov
add
or
lea
jnp
add
ja
lds
add
push
jp
mov
jge
cmp
inc
rol
test
or
inc
shll
dec
inc
mov
stos
insl
test
insl
cmpsb
push
jecxz
ss
push
jae
enter
add
test
cwtl
add
xor
adc
and
pop
lock
aaa
mov
cltd
loop
pusha
scas
and
pop
call
jl
xchg
arpl
add
jns
or
add
test
dec
mov
adc
movsl
add
cwtl
fsubp
les
push
add
mov
rolb
mov
mov
sbbb
add
imul
cwtl
stos
fmuls
adc
mov
rolb
jmp
add
and
pop
pop
sub
movsb
inc
adcb
mov
add
mov
push
pop
xor
sar
mov
sbb
clc
inc
add
std
jne
or
cwtl
add
fldl
pop
cs
dec
daa
add
push
incl
or
pop
inc
rolb
in
mov
xor
pusha
xchg
sti
mov
jo
mov
repnz
push
or
leave
cmp
ljmp
add
push
mov
inc
add
or
add
and
inc
std
add
or
mov
or
or
xor
mov
add
sar
dec
add
add
cld
loopne
inc
std
cmp
add
add
adc
add
jle
or
mov
xlat
xchg
jnp
pop
dec
push
flds
jbe
sub
add
jle
gs
add
cmp
sub
pop
call
jb
ret
repnz
call
jmp
pop
sbb
adc
add
pop
inc
mov
add
test
sub
addr16
jg
jno
popa
jle
inc
sbb
subb
mov
and
xor
int3
stos
add
lea
cmp
call
add
sarl
scas
mov
xchg
mov
nop
es
or
cwtl
iret
push
xor
mov
lcall
add
inc
aad
jge
add
push
lds
idivl
dec
imul
imul
add
sbb
xchg
imul
xchg
lock
sub
add
xchg
pop
cmp
sti
add
aaa
xor
or
xchg
dec
lret
add
push
mov
add
aaa
scas
js
mov
ja
sub
sub
xor
inc
sarb
pop
daa
cmp
pop
sbbb
jl
or
inc
add
lea
mov
xchg
mov
add
jl
push
push
jg
sub
fstpl
loope
or
fmul
push
add
stos
repz
daa
jne
mov
jp
add
jmp
hlt
add
push
fcmovbe
inc
mov
loop
shrb
pop
aad
pushf
lds
repz
movsl
xchg
lret
adc
into
mov
sarl
pop
add
sarb
dec
push
cmpsl
pop
adc
push
mov
rcrl
and
movsl
fists
adc
and
adc
sbb
decl
jl
push
mov
cltd
jp
push
pop
and
jo
in
pop
pushw
xchg
dec
add
mov
sbb
in
pop
stos
xchg
push
push
aas
inc
mov
dec
dec
addb
inc
mov
or
add
or
sub
cmp
mov
imul
push
pop
or
add
cmpb
push
pop
pop
cmp
sub
das
jp
adc
cld
inc
jge
and
nop
push
stos
mov
cwtl
xor
push
dec
or
orb
cmp
adc
das
out
inc
ss
inc
push
mov
test
sbb
in
insl
pop
loop
out
xor
cmp
cmp
data16
mov
add
gs
sti
cmpsb
adc
add
cs
repnz
add
mov
ds
jo
pop
mov
mov
lods
cmp
xor
fmul
adc
fmuls
std
push
sub
pop
idivl
enter
out
sub
ljmp
fiadds
shll
les
fsubl
add
je
sbb
mov
subb
lret
add
movsl
dec
adc
push
mov
add
adc
int3
mov
add
pcmpgtw
fadds
sbb
pop
mov
push
add
stos
shl
inc
push
add
ss
shrl
lahf
add
xor
add
daa
outsb
pop
jns
sub
loopne
dec
dec
dec
mov
in
xchg
jg
push
gs
add
insb
xor
or
pop
adc
pop
push
sbb
rcr
xorb
rolb
mov
lret
sbb
mov
iret
push
or
shlb
pusha
push
dec
mov
cmp
in
and
mov
jecxz
jne
add
mov
add
mov
add
sbb
jle
addl
ret
je
push
fs
sub
inc
xorb
mov
and
xor
push
sbb
sbb
inc
int3
test
add
sar
neg
mov
fiaddl
and
xlat
cli
scas
xchg
es
xor
int
mov
jne
test
lds
int3
add
pop
sbb
adc
jns
pushf
fucomi
add
orl
add
push
pushf
jo
ja
shrl
inc
add
push
xlat
add
insb
and
pop
dec
sub
push
push
cmp
add
inc
lock
fldenv
mov
andl
shlb
dec
mov
aam
mov
jl
cltd
lcall
add
or
stc
leave
popl
aaa
pop
lret
adc
xlat
cld
or
pop
dec
cli
jo
in
movsb
rcr
sahf
cmp
sbb
les
hlt
push
and
add
jne
cmp
rol
mov
dec
adc
cmp
int
loop
inc
test
cltd
cmp
push
sub
leave
add
sarl
xor
cld
and
dec
sbb
arpl
addl
jl
add
dec
jns
dec
lock
pop
mov
movsl
mov
dec
out
mov
lea
dec
add
mov
aam
xor
pop
sub
inc
sbb
call
add
cmp
and
adc
cmp
rol
fsubrs
jl
mov
mov
fstpt
add
lret
mov
es
xchg
and
scas
add
fwait
mov
frstor
add
ljmp
jle
movsb
aas
push
add
mov
add
pop
sub
cmp
dec
add
aam
rolb
add
sbb
add
xor
adc
aam
dec
inc
fs
add
lock
scas
loope
stos
inc
test
flds
xchg
testb
xor
pusha
mov
add
out
dec
xchg
bound
dec
inc
adc
fs
jmp
rcll
push
pop
dec
inc
enter
jne
clc
jl
lahf
add
push
cmp
pinsrw
xchg
lret
add
inc
mov
add
jmp
mov
mov
or
add
js
testb
jno
sarb
add
jg
add
sbb
imul
cmp
jecxz
shlb
inc
dec
sub
es
and
and
addb
repz
in
es
call
pop
fcmovne
xor
add
add
or
dec
add
cmc
addb
inc
dec
jne
inc
enter
packssdw
xchg
mov
scas
mov
dec
incl
fs
adcb
xchg
cmp
clc
cld
imul
adc
dec
ja
add
mov
out
mov
inc
mov
pop
lcall
lret
test
add
add
pop
stos
aam
test
sub
push
lods
pusha
nop
mov
add
and
add
aaa
mov
std
and
mov
and
inc
adc
out
add
inc
push
cmc
aad
mov
adc
jns
stc
adc
ret
adc
icebp
jge
loopne
add
cmp
push
sbb
sub
add
sub
cmpsb
add
mov
or
lret
xchg
add
bound
mov
adc
imull
in
add
loope
ret
lods
or
mov
adc
dec
out
jnp
pusha
incb
dec
add
sub
cmp
sete
add
inc
xor
and
dec
ret
add
pusha
cmp
loop
xlat
flds
or
push
pop
adc
rcr
shlb
add
jecxz
int3
mov
xchg
call
sbb
add
and
into
in
cwtl
or
dec
pop
stos
mov
in
cmp
ret
out
jne
add
push
clc
ret
mov
add
sub
adc
or
add
stc
and
and
and
jg
adc
add
and
adc
push
pop
mov
cmp
les
mov
inc
add
mov
add
fmul
adc
inc
sub
jae
sbb
add
in
data16
xchg
roll
push
cmp
sarb
sbbb
cmove
sub
loopne
das
pop
jae
jbe
rorb
add
mov
or
add
rolb
mov
add
push
imul
test
fucom
pop
into
imul
in
xchg
add
nop
cwtl
ret
call
into
add
ss
lea
mov
imul
rcrl
stos
in
add
sub
inc
insl
mov
addb
aas
test
push
cmp
cmc
jae
jle
add
mov
and
imul
cld
pop
movsl
in
mov
decl
rolb
push
mov
and
sub
add
add
jmp
ret
mov
pop
movsb
loop
movaps
jne
cltd
xchg
pop
dec
pop
add
movb
repz
movsb
in
add
push
mov
pop
and
xchg
icebp
sub
add
test
cmpsl
xlat
or
maxps
dec
pusha
inc
and
cmc
ss
xor
jnp
add
sub
imul
jg
dec
add
jmp
inc
add
stos
lea
bound
mov
fmuls
mov
imul
shlb
push
pop
ljmp
jnp
movsb
enter
scas
js
jbe
shlb
inc
add
or
push
sub
sub
mov
ljmp
sti
xor
add
sub
mov
ret
cmpsb
aaa
hlt
mov
add
adc
push
add
push
sub
pop
das
shll
cmp
and
fcmovnbe
subb
gs
loope
cmp
dec
or
insl
hlt
adc
cmp
lods
out
out
movq
ficoml
insb
jne
testb
inc
scas
je
jl
hlt
mov
xchg
sbb
int
cld
orb
outsl
add
push
cltd
ljmp
test
push
add
push
xchg
ds
and
jmp
sar
inc
mov
xor
or
sbb
sarl
fmuls
call
dec
ljmp
dec
dec
testl
sub
pop
push
inc
pop
xchg
and
cmp
add
inc
xor
add
dec
push
push
push
test
shr
clc
inc
push
je
or
push
loop
add
pop
fmuls
push
add
xor
mov
lock
add
push
mov
dec
mov
jecxz
into
push
jmp
lcall
add
lock
test
push
xchg
jne
mov
xchg
out
mov
imul
xlat
fcoml
js
aam
add
jl
dec
fadds
repz
adc
push
cld
out
jp
push
cli
subl
je
adc
inc
push
push
add
shlb
push
lock
push
les
and
adc
dec
mov
mov
inc
adc
push
shlb
push
dec
ja
or
push
jge
adc
dec
clc
add
scas
ljmp
add
nop
push
mov
add
mov
add
cmp
es
test
jae
jp
push
in
hlt
add
popa
repz
out
adc
test
xor
xchg
insb
lods
dec
cld
aas
aam
cmp
add
mov
add
inc
xchg
subps
xchg
loopne
adc
movsl
stos
add
out
call
cltd
cli
jge
inc
and
or
dec
push
outsl
ret
mov
jo
mov
mov
sub
cmpsb
rorb
xor
xchg
loope
cmp
sbb
popa
pop
mov
orl
mov
pop
popf
js
adc
add
rorb
lahf
fisttpll
add
ja
mov
fldenv
or
jp
pop
or
loopne
inc
adc
add
or
push
inc
data16
movzwl
roll
jmp
mov
je,pt
push
loope
loopne
xorb
mov
cmp
dec
jb
cmp
ja
lea
out
jb
add
lahf
jno
add
add
sbb
or
repnz
xchg
xor
push
test
rclb
sub
xlat
add
or
movd
mov
mov
push
call
hlt
and
cmpb
push
or
orb
dec
mov
lods
add
mov
or
add
push
imul
cwtl
push
fdivrs
sbb
jns
loope
pusha
int
push
add
inc
or
or
cld
add
inc
dec
mov
add
movb
neg
mov
orb
cwtl
add
dec
or
cli
push
aaa
loop
sbb
pop
push
mov
pop
sbb
cmp
push
cwtl
daa
add
call
jmp
and
add
jne
mov
or
add
bound
push
ljmp
push
pusha
adc
lea
cmp
push
fcompl
pop
pop
sbb
dec
and
rcl
adc
and
sbb
sub
add
mov
sbb
add
push
add
add
add
add
inc
loop
fdivp
in
sbb
mov
sbb
test
stos
test
push
mov
xchg
jg
push
fcomi
jae
jns
jb
mov
std
adc
and
mov
pop
xchg
cmp
ljmp
aaa
sbb
mov
add
iret
push
mov
push
inc
dec
add
dec
xchg
or
xchg
stos
pop
test
jle
xchg
xor
xchg
push
add
dec
mov
pop
in
out
call
hlt
add
aad
cmp
loopne
or
add
insb
adc
mov
aas
in
jno
pop
arpl
in
ficoml
add
addb
repnz
ljmp
pop
add
clc
call
push
call
and
jne
add
pop
xchg
in
dec
cmc
enter
test
jmp
mov
mov
xchg
adcl
fs
add
push
imul
stc
mov
push
cmp
cmp
jmp
jg
add
ja
pop
out
out
ret
in
push
xchg
faddl
fcoms
add
insl
xchg
pop
jno
insb
in
mov
cmpsl
pop
movsb
pusha
test
sbb
sbb
push
inc
push
or
or
mulps
bound
bswap
push
push
out
movntq
out
adc
and
shlb
add
test
cmpsb
shl
jae
add
adc
add
jmp
pushf
stc
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
iret
add
or
shl
push
icebp
int
in
testl
add
jmp
fisttps
movsl
mov
test
sub
xchg
lahf
dec
fcmovnu
pop
and
add
stos
andb
mov
pushf
mov
xchg
dec
pop
add
jmp
add
mov
in
jecxz
jmp
fstps
sub
mov
ja
aam
pop
mov
lods
mov
add
or
mov
movsl
test
lret
mov
add
jns
adc
xor
mov
pop
mov
mov
cwtl
xchg
aam
push
add
dec
dec
pusha
jo
push
in
loope
leave
pop
push
xchg
xorb
mov
pop
rolb
int3
add
mov
xor
lahf
add
sub
andl
mov
fs
sarb
cmp
or
inc
add
add
mov
fcompl
pusha
add
jbe
out
pop
in
in
lahf
add
mov
jmp
mov
push
mov
test
add
icebp
or
call
inc
add
out
pop
push
les
mov
mov
rolb
add
test
jns
jle
xchg
cwtl
xchg
test
dec
dec
mov
pop
arpl
add
nop
add
add
negb
adc
test
pop
inc
sbb
ljmp
mov
pop
xor
xchg
lcall
add
jne
xchg
pop
or
pop
scas
push
add
lret
shll
lds
sbb
add
cmpsb
cmpsl
jmp
cwtl
movsl
or
add
inc
jle
mov
popa
inc
outsb
or
dec
pop
pop
mov
nop
cmp
adc
mov
jne
int
inc
mov
add
pusha
loop
nop
mov
dec
mov
stc
push
xchg
daa
add
fistl
jmp
decb
lret
andb
cmp
test
xchg
fcompp
bound
cmp
cmp
fsubrl
ljmp
add
ror
sub
mov
and
mov
in
in
push
sarb
test
jnp
lods
cli
push
jmp
add
call
mov
sbb
add
mov
mov
cmp
enter
jbe
adc
and
loopne
fcompl
fstl
xchg
mov
aad
mov
add
addr16
adc
loopne
rcrb
xor
test
les
rclb
call
loope
fnclex
out
icebp
add
mov
jl
jne
cmp
xlat
mov
jno
add
ret
les
pop
jae
or
add
daa
xor
rcrb
sbb
iret
add
loop
test
pop
bnd
into
arpl
and
fwait
adcb
icebp
add
add
or
dec
push
in
pop
xchg
loopne
negl
mov
fs
aam
pop
aad
fadds
jecxz
add
push
add
cmp
add
stc
clc
fs
std
cld
iret
adc
sahf
xorb
nop
aad
popa
xchg
push
adc
pmaxsw
add
or
in
or
popw
daa
xchg
add
mov
lods
cmp
add
cmpsb
mov
sub
stc
aas
and
cmp
aas
lods
lret
pop
cmp
pop
and
mov
jbe
inc
ja
js
add
in
ret
ror
jl
add
lcall
test
mov
in
out
add
adc
add
cmp
cmpsl
push
mov
mov
add
lret
or
enter
mov
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jl
add
cmp
add
je
inc
jne
addb
rcl
push
addb
cmp
sub
movsl
stos
adc
in
pop
add
add
push
mov
mov
add
xchg
mov
add
sub
mov
mov
mov
add
sbb
jns
add
jp
sub
imul
cmp
push
push
loopne
add
popf
mov
fsubp
lds
lcall
lods
pop
daa
push
sub
push
add
ret
add
push
loop
xor
and
int
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
mov
jbe
add
push
add
in
out
fildl
mov
dec
test
add
xchg
add
std
xchg
filds
test
int
mov
loopne
add
dec
xchg
adc
xor
imul
push
outsl
insb
sub
inc
in
lock
pusha
pusha
call
movl
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
addb
adc
in
add
mov
xchg
push
loop
cwtl
jo
add
xor
inc
push
add
aaa
loopne
call
roll
out
jo
ret
jne
subl
ret
xchg
out
lret
cmp
add
and
push
sub
pushf
rolb
lcall
mov
pop
ret
jg
lret
icebp
mov
jp
cmp
xchg
cmp
movb
add
add
mov
insb
out
ret
les
dec
gs
or
xor
xchg
mov
add
adc
clc
pop
subb
push
cmp
cwtl
add
ja
loopne
jo
add
dec
mov
movsl
movl
jbe
add
test
xchg
loopne
jge
loop
int
mov
or
add
mov
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
out
add
push
sub
inc
inc
dec
xor
inc
pushf
inc
add
cmp
out
add
test
fs
mov
cmp
pop
sbb
daa
pusha
xor
xchg
nop
pop
xchg
xor
add
inc
inc
jne
fmull
cld
push
jae
add
adcl
add
sbb
ficomps
shlb
ss
jo
add
call
pusha
cmp
mov
jno
outsb
les
in
mov
add
mov
jno
ret
stos
stos
or
aaa
int3
xor
out
add
lea
and
je
aam
adc
int3
push
push
enter
add
mov
pop
add
int3
scas
add
seta
neg
outsb
cmc
std
add
add
and
cmp
or
xchg
jo
mov
ljmp
add
jmp
add
and
divb
inc
loopw
and
mov
jo
dec
cmpl
push
add
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
xchg
jo
pop
iret
jmp
shr
int
das
jg
lods
dec
dec
jnp
movups
shlb
push
mov
lcall
out
in
and
push
imul
pop
dec
jae
loopne
add
xchg
jg
aam
bound
shlb
stc
scas
nop
sub
xor
std
xor
pop
nop
fidivl
adc
movsb
bound
add
push
rolb
nop
mov
shl
scas
cmc
add
test
lods
and
inc
lahf
xchg
xchg
push
inc
lods
push
rcll
movsl
loopne
fwait
add
cli
jb
jae
xchg
push
stos
pop
mov
dec
cmp
pop
sbbb
xor
sbb
sub
pop
cltd
pop
pusha
cs
je
mov
sub
stos
movsl
mov
jle
push
orl
into
cld
or
jb
add
push
pushf
cmc
pop
cmpl
cmpsb
or
mov
sub
adc
add
lock
add
or
subb
push
loopne
push
add
sub
adc
dec
ss
sbb
outsb
push
jae
add
data16
pop
xchg
addb
xchg
shlb
push
cmp
mov
and
popa
shrb
mov
shll
push
and
and
inc
pusha
and
je
cmp
pop
roll
dec
push
lock
xchg
add
mov
jo
in
call
lahf
and
fucomi
cmpsb
loopne
aam
sldt
jne
clc
flds
xchg
loopne
andb
add
shrb
xor
cmp
mov
push
mov
in
mov
add
das
mov
jmp
add
mov
jae
leave
add
clc
cmpsl
adc
mov
xor
inc
jno
or
loope
inc
hlt
cmp
add
mov
incl
push
sarb
xchg
cmpsl
add
cs
aad
scas
ret
sub
roll
xchg
or
add
mov
jne
add
sub
push
mov
cmp
add
mov
outsb
int3
add
add
or
add
add
aam
inc
in
add
out
aaa
push
cmp
fists
leave
enter
fs
sub
mov
cld
sbb
or
add
xor
add
out
jae
stos
sub
faddl
xchg
inc
in
aas
mov
add
jbe
pop
pop
loopne
clc
call
mul
stos
add
mov
add
arpl
jmp
imul
jnp
cmp
lret
cltd
xchg
call
jno
adc
add
inc
loope
js
xchg
lea
scas
mov
ret
jne
test
inc
dec
clc
add
lret
mov
mov
pop
adc
push
pop
fcompl
mov
outsl
repnz
mov
add
movsb
xchg
and
add
push
mov
imul
testb
insb
fsubl
mov
iret
inc
or
push
sub
rolb
aas
jne
cmp
jl
push
je
dec
xchg
ja
cmpb
mov
xchg
decl
sbb
add
es
call
add
out
adc
add
cmp
add
inc
jecxz
in
push
pop
mov
xor
lahf
push
repnz
jne
push
jmp
daa
outsl
aam
movsb
add
cli
sub
dec
push
outsb
jge
add
rclb
mov
or
inc
add
es
jg
mov
jbe
push
and
mov
addb
jns
xor
add
adc
add
pop
add
sbb
fistps
pop
insb
outsl
add
and
add
jb
das
add
mov
aam
inc
adc
mov
cmpsb
xchg
push
loope
add
pop
jecxz
cmp
jae
adc
mov
xor
rcrb
sbb
cmp
mov
jle
add
out
ja
movsb
adc
and
rcrb
js
add
repz
int
xor
mov
cmp
out
and
mov
mov
pop
lea
xor
in
xor
adc
lea
in
add
mov
andb
out
add
call
xlat
sbb
sbb
pop
add
lods
jmp
scas
jo
or
inc
and
mov
in
int
outsl
repz
cmp
in
imul
stc
rclb
pop
add
xor
xchg
loop
jne
add
lods
outsb
fcom
mov
pop
hlt
inc
add
or
fists
xchg
xor
add
or
pop
lds
cli
subb
pop
fiadds
mov
call
mov
push
cmp
cmp
jmp
and
std
fld
ds
add
lea
test
dec
mov
sahf
sbb
sbb
test
sbb
iret
add
inc
popl
sbb
dec
aaa
mov
loopne
inc
inc
sub
add
call
add
adcb
sub
mov
mov
sbb
in
cmp
add
sar
or
fildl
sub
lds
pop
leave
or
sbb
push
pop
gs
test
les
mov
adc
ror
jmp
js
add
outsb
add
ja
out
std
je
ret
xor
add
icebp
dec
push
push
imul
jge
test
jg
push
inc
xchg
sbb
dec
movsl
cmp
dec
push
add
xor
and
pop
and
add
pusha
lahf
clc
or
ret
inc
cltd
lods
dec
jb
cmp
aad
inc
rcrb
hlt
add
mov
popa
add
xchg
lock
cmp
jp
mov
add
repz
mov
xor
arpl
in
mov
add
call
dec
jle
add
xor
jne
cwtl
lods
pop
cmp
mov
add
add
xor
pop
add
je
mov
loop
add
cltd
lea
out
add
movsb
cmpsl
push
fmuls
adc
jmp
sbb
cmp
stos
sub
xchg
scas
add
rolb
clc
jne
add
pop
hlt
push
addb
fwait
adc
mov
inc
xor
or
sbb
ja
add
cli
sub
pop
lods
clc
dec
add
or
icebp
int3
out
jge
pop
push
popf
aam
or
add
jecxz
push
shll
dec
or
popa
dec
and
jo
test
cld
inc
add
or
movsb
add
testl
jle
mov
add
je
frstor
jmp
in
mov
mov
sbb
insl
push
or
xor
sbb
in
fdivs
mov
ss
or
mov
stc
nop
test
mov
add
sbb
cmp
pop
sbb
cwtl
mov
jmp
fs
clc
jns
mov
inc
and
push
add
mov
add
xchg
outsl
or
cltd
daa
add
jne
pop
add
sbbb
es
mov
shll
inc
pop
loope
nop
or
sbb
or
push
pop
dec
mov
je
call
lock
xchg
and
push
stc
scas
mov
add
movsl
or
inc
int3
hlt
add
xchg
call
mov
jle
movups
adc
nopl
rclb
xor
roll
inc
push
cmp
jl
movsb
add
nop
sarl
stc
push
pop
or
mov
jo
cmp
aad
pop
fs
pop
xor
xor
je
add
add
add
data16
push
fsubrp
mov
nop
or
dec
dec
push
testb
add
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
add
pop
in
adc
fiadds
cld
push
mov
imul
stc
jg
lock
cwtl
cmc
ret
pop
cltd
mov
jmp
jo
push
push
pop
adc
xchg
icebp
add
fiaddl
or
mov
rorb
pop
sbbb
and
or
add
jmp
cmp
insl
pop
inc
jne
jns
outsb
pop
ja
sbb
push
hlt
pop
cmpsb
or
icebp
dec
xor
push
pop
jae
mov
push
jo
adc
mov
aas
mov
sub
dec
inc
dec
dec
add
xchg
daa
test
cmp
add
xchg
jb
mov
inc
sarb
or
jg
jbe
cli
xchg
aas
jge
or
jl
call
mov
iret
lock
jns
xor
dec
cmpb
loope
je
push
mov
lcall
jmp
sbb
bnd
nop
pop
cmp
add
push
xchg
jnp
inc
add
sbb
add
adc
xor
push
popf
dec
push
lock
mov
and
xor
nop
cmp
ljmp
pop
test
fnstcw
ret
adc
ret
adc
mov
push
ja
xchg
xorb
mov
add
repz
adc
jg
or
movntps
cmp
add
pop
inc
pop
int3
shrl
mov
ss
pop
lods
enter
adc
lret
mov
add
jb
lds
sub
mov
jbe
jge
nop
add
inc
fs
outsb
arpl
inc
cmp
outsl
insl
shll
inc
add
cmp
inc
in
add
mov
jno
push
aaa
inc
into
mov
push
dec
pop
mov
xor
xchg
pop
adc
mov
lock
ds
push
in
cmp
addl
loop
loopne
mov
add
pop
xchg
sbb
jecxz
inc
jb
aaa
xchg
push
sbb
test
shl
cltd
add
stc
lahf
test
in
fwait
add
cmpb
cs
inc
mov
sub
adc
xchg
pop
or
dec
mov
lods
mov
js
sbb
inc
adc
lahf
fnsave
and
call
addb
dec
rdmsr
lcall
push
pop
pop
loope
jg
loop
push
rorl
adc
insb
outsb
ret
mov
cmp
sti
mov
xor
inc
push
cmpb
jp
es
fadds
cwtl
roll
int3
jne
jnp
lock
add
into
dec
orb
add
add
clc
pop
sub
je
pop
push
movsl
mov
mov
mov
dec
add
cwtl
cmpb
xor
cmp
ret
cmc
mov
add
or
pop
adc
clc
stos
add
icebp
lock
mov
cmp
cwtl
pop
add
push
mov
mov
sar
adc
xchg
mov
or
pop
inc
add
or
outsb
add
push
dec
lds
inc
out
loope
add
add
xor
fdecstp
inc
jbe
add
xor
pop
aas
adc
popf
daa
mov
imul
and
dec
leave
add
jp
nop
pop
inc
dec
add
sbb
sbb
or
mov
add
fiaddl
add
js
inc
mov
add
dec
int
add
div
adc
stos
test
sub
sbb
arpl
adc
pop
and
pop
adc
jmp
adc
call
dec
mov
push
push
push
outsl
les
mov
js
jb
fs
xchg
sbb
xchg
add
sub
les
mov
cmp
test
sahf
pop
es
add
stos
jg
add
sbbl
jl
out
sbb
or
enter
pop
call
repnz
sub
sbb
add
sub
push
cwtl
push
inc
pushf
loopne
xor
mov
pop
mov
pop
mov
enter
add
xchg
add
mov
sub
cmp
xchg
pop
fldl
out
mov
jl
adc
lea
pop
sub
add
cmc
xor
add
sub
inc
add
imul
call
mov
adc
jp
jle
add
fsubr
add
shlb
andb
or
cmp
or
jmp
add
push
xor
out
lea
add
pop
add
wbinvd
rolb
ret
sbb
ret
movsl
add
adc
xor
push
test
push
or
push
jnp
add
add
mov
lds
adc
jge
xchg
testb
add
sub
and
rorb
mov
jnp
cmp
addb
add
lret
add
fsub
dec
or
jl
add
ffreep
xor
add
mov
loopne
fwait
pop
movsb
mov
pop
push
loop
subb
jl
jp
or
and
adc
dec
sbb
adc
iret
xchg
orb
lods
rcll
ss
call
int3
repnz
inc
pop
jl
or
dec
push
dec
out
andl
or
cs
or
nop
ror
jo
imul
or
xchg
or
and
pop
insl
jnp
sbb
test
sub
mov
or
arpl
jmp
or
add
cmp
nop
push
and
jbe
sub
in
clc
or
pop
ds
and
and
sbb
pop
or
add
push
cltd
mov
jg
je
jns
es
add
pop
cli
test
add
jp
sub
xchg
enter
sub
jmp
or
inc
push
push
add
sahf
dec
imul
cs
push
pop
or
sbb
add
cmpsl
pop
lds
mov
or
inc
push
and
sbb
mov
push
adc
sub
add
push
mov
xchg
loopne
mov
push
imull
adc
out
lods
arpl
and
shll
clc
lret
bound
or
lods
int
rolb
call
add
leave
call
nop
inc
sbb
sarb
and
sub
add
xor
and
lock
gs
or
and
pop
inc
loopne
add
xor
and
ss
cmp
or
mov
add
xor
lret
shrb
pusha
cld
popf
cli
in
das
out
ret
sbb
jb
movl
and
outsb
add
push
mov
add
mov
imul
add
xor
pop
lods
add
jno
loope
mov
add
pop
nop
rol
out
pop
imull
xor
rclb
jne
sbb
push
or
adc
jb
mov
lret
fcomps
int
add
mov
add
pop
xor
dec
adc
pop
call
mov
fcoml
inc
and
test
jnp
sti
int3
mov
dec
inc
jno
adc
jo
inc
or
jmp
add
inc
pop
addb
mov
sub
add
or
cmc
pop
inc
push
xor
push
add
xchg
jns
ja
cs
xor
add
pop
mov
in
out
add
lret
mov
pop
jns
es
push
adcb
popa
inc
pop
add
ss
hlt
int
ja
add
lods
mov
jne
pop
and
dec
pop
aam
adc
xchg
push
sarb
xor
sub
sbb
add
rcrl
daa
add
cmpb
lods
repnz
add
dec
ljmp
add
jmp
cld
js
jp
and
mov
mov
push
add
addl
mov
cmp
sbb
ja
mov
pushf
dec
icebp
in
inc
mov
loopne
push
push
pop
and
pusha
mov
jne
loopne
pop
test
and
push
push
inc
inc
fisubs
xor
mov
shl
mov
andb
push
cwtl
and
ret
inc
dec
inc
lock
push
clc
insl
xchg
mov
sub
push
and
out
xchg
sbb
sub
aam
xor
roll
les
add
enter
xor
jl
mov
lods
adc
mov
and
out
mulb
adcl
xchg
outsl
push
ja
and
mov
imul
cmp
and
insb
cwtl
push
loopne
push
dec
jbe
sbb
je
add
push
jb
outsb
jae
insl
gs
iret
sbb
jne
rcr
xor
mov
add
push
and
or
dec
jnp
pop
xchg
pusha
dec
subb
push
imul
and
and
adc
les
bnd
in
adc
sub
cmpb
xlat
mov
das
fs
push
jae
push
xor
jbe
and
sub
je
pop
jp
add
mov
jl
out
cld
mov
add
rorb
jge
add
outsb
jne
sbb
add
imul
or
and
or
imul
mov
or
sub
loop
xchg
pop
jne
bound
js
inc
pop
lret
xor
mov
popa
fs
and
jmp
push
adc
lods
add
push
adc
adc
movsl
add
std
shrb
sub
dec
mov
add
mov
push
mov
cwtl
add
ss
mov
enter
xchg
add
lock
adc
push
str
lret
add
or
add
push
jg
adcl
addr16
add
mov
mov
addl
jne
shll
call
orb
orl
add
andb
inc
insl
in
and
add
adcb
lahf
fiaddl
movsl
popa
adc
stc
aam
sub
rcl
lock
loope
call
add
dec
pop
push
and
addb
push
cmpsb
test
stos
subb
pop
sub
or
loopne
jns
sbb
ret
add
add
lock
sbb
dec
push
add
shr
repz
cmp
mov
call
push
int3
js
ja
add
test
pop
out
lds
sub
add
and
stos
in
pop
pop
push
pop
pop
pop
add
cs
mov
push
popa
call
dec
or
mov
lea
clts
mov
sbb
xchg
pop
xor
clc
mov
testl
or
fmuls
add
push
movsl
xor
sub
lods
orb
and
cwtl
and
cmp
pushf
loope
inc
pusha
inc
mov
mov
lea
add
adc
fdivrs
add
roll
add
loope
ja
xor
push
inc
add
sbb
pop
pop
aaa
pop
xor
add
leave
js
jae
outsb
rclb
dec
push
dec
cmp
add
cmp
mov
add
les
inc
sub
leave
mov
imul
icebp
hlt
in
mov
loope
and
or
add
insb
sub
dec
sbbl
pop
shlb
pop
stc
sarl
add
and
cld
cwtl
or
movsb
push
dec
xchg
xor
jne
and
clc
aam
dec
call
mov
and
enter
sbb
push
cwtl
pop
movl
and
and
add
cld
mov
add
add
in
mov
out
call
push
mov
clc
dec
mov
dec
cmp
cmp
or
test
nop
push
enter
popf
xchg
sbbl
pusha
or
sbb
in
or
imul
mov
ret
add
sub
mov
dec
add
nop
or
mov
popa
test
in
je
pop
jo
push
scas
les
and
vmovups
push
add
cli
fsts
add
mov
lea
cmp
add
xchg
loopne
mov
jmp
lret
nop
int3
in
jge
lock
mov
push
add
sub
es
ret
mov
add
cld
and
int3
setb
pop
sbb
ja
rolb
call
inc
out
and
stos
mov
mov
ret
sbb
add
jne
in
or
adc
cmc
mov
xchg
ljmp
fstps
ret
inc
push
mov
jl
test
pop
adc
jmp
push
push
lods
add
mov
jge
add
ret
call
and
add
je
lahf
stc
dec
sub
mov
adc
add
or
cli
or
push
inc
movsl
add
fwait
adc
mov
cmpsb
pop
push
sbbb
jle
push
mov
and
in
clc
cmp
sahf
dec
or
movsb
push
and
in
cmc
outsl
xchg
add
mov
das
or
int3
xchg
add
cmpsl
pop
adc
cld
jg
pop
movswl
add
cli
jmp
sbb
lods
mov
add
cmp
xchg
jbe
add
mov
inc
cmp
add
outsl
fs
in
adc
fldl
mov
mov
mov
add
lcall
pop
inc
pop
or
add
outsb
cs
push
xor
or
jo
push
sub
repz
shlb
push
dec
out
jmp
sub
loopne
jge
sbb
in
call
div
add
mov
test
push
add
test
add
pop
mov
popa
jb
mov
add
lahf
cmp
push
mov
inc
push
mov
add
call
jo
cmpsl
add
xchg
data16
aaa
fwait
adc
hlt
into
mov
pop
push
and
mov
jo
rolb
nopl
or
adc
and
push
fmull
in
jae
js
test
popf
jnp
hlt
mov
mov
xor
popa
add
cmpb
gs
lea
pop
icebp
add
sbb
clc
push
jp
cmp
cmpsl
xchg
into
lds
adc
subb
addl
adc
in
cld
mov
xchg
inc
mov
jmp
push
pop
in
jo
test
pop
add
jle
mov
and
or
jb
add
stos
cmpsl
daa
jge
lock
test
pop
orb
xchg
mov
outsl
add
pop
cwtl
jae
sub
sbb
or
or
pop
ljmp
andps
mov
jae
or
ja
xor
mov
add
test
mov
xor
mov
test
das
sub
and
jo
dec
lods
mov
push
pop
cmp
loop
aam
add
jb
adc
lods
aad
add
push
or
pop
inc
loope
js
add
push
loopne
jl
in
leave
add
fs
jecxz
imul
xchg
rclb
je
pop
mov
inc
push
nop
dec
ficoms
ret
xor
push
xchg
in
movsl
jns
dec
mov
add
stc
adc
xor
add
jo
arpl
or
mov
incl
hlt
xor
cmp
dec
xor
test
jp
mov
adc
jo
sbb
sbb
or
adc
inc
push
xchg
sbb
pop
sbb
sbb
jo
mov
mov
aas
lea
pushf
mov
jo
cli
push
add
add
js
lods
cmp
aam
hlt
sahf
pushf
mov
push
mov
add
iret
mov
mov
sarb
loopne
test
mov
aas
add
fsubp
mov
repnz
fildl
jno
jp
fimull
add
add
scas
xlat
ja
add
incl
xor
fdivp
adcl
nop
mov
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
add
fwait
cs
lea
cmc
push
push
int
ss
jmp
lods
sbb
lret
rorb
jnp
paddusb
aas
test
cmpsl
aam
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
movl
xor
mov
call
pop
add
mulb
or
shlb
pop
loopne
add
mov
dec
shr
nop
add
jg
pop
add
jb
mov
inc
inc
xor
and
ljmp
test
adc
mov
incb
mov
pusha
pop
or
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
cvtpi2ps
add
sub
rol
or
in
testl
ret
repnz
pushf
xor
idivl
and
testb
cmp
or
and
cmpsb
push
adc
pusha
pop
mov
sub
jp
loop
aad
clc
lock
inc
and
mov
add
add
jbe
ficoms
add
ret
cmp
cmp
ljmp
xchg
addb
rcl
cwtl
clc
push
mulb
test
andb
mov
jge
addr16
add
lahf
and
sbb
sbb
jbe
es
jae
add
and
cld
mov
mov
cltd
add
push
js
xor
add
xor
pop
fimuls
scas
ljmp
jne
add
add
pusha
lods
jmp
add
add
sub
pop
cmovs
or
sarb
filds
adc
cmpsl
notl
add
mov
test
inc
cli
jge
add
movsl
cmp
add
xchg
dec
mov
dec
inc
mov
inc
mov
clc
mov
adc
test
jo
fxch
jge
jbe
inc
add
cmc
or
push
fisttpl
scas
sahf
aad
movsl
lahf
in
getsec
add
sub
cmp
push
pop
push
add
dec
imul
add
stc
cmp
push
push
das
cmp
pmuludq
adc
jne
or
movswl
jae
mov
jno
lahf
pop
push
pop
xor
and
sbb
cmp
cmp
roll
call
daa
in
mov
popf
cwtl
and
dec
add
or
cmp
mov
sbb
mov
dec
mov
enter
xor
inc
add
clc
pop
hlt
cli
xchg
inc
js
add
ds
lock
and
or
adc
fildll
sub
sbb
in
popf
add
xchg
dec
sbb
ds
and
mov
inc
cmp
ss
inc
sub
fmul
in
mov
jmp
dec
cmpl
je
push
add
lret
mov
pop
sub
test
add
sub
push
mov
aam
testb
mov
xor
add
rol
or
rorl
mov
lock
jp
inc
add
add
or
xchg
lcall
add
ja
jne
lret
push
jno
or
sub
cmc
xchg
pop
fcmovu
add
cs
mov
add
jmp
inc
add
sub
sub
or
test
jo
add
adc
push
pop
xchg
fdivp
and
and
sub
push
jo
add
xchg
shr
cmp
scas
jle
add
push
push
daa
push
loopne,pt
cmpsl
mov
mov
ja
sub
push
inc
addr16
lret
cmp
add
and
scas
jae
mov
mov
test
adc
xor
out
cs
jle
dec
test
add
je
cmp
xor
outsb
subl
push
adc
nop
add
xchg
add
mov
insb
movb
add
xor
into
sbb
mov
push
movsb
movsl
pop
or
in
mov
test
es
mov
lods
add
into
mov
inc
mov
or
adc
or
mov
dec
jp
test
jmp
sub
add
and
sub
and
jnp
push
sub
cwtl
add
push
jle
mov
lods
movsb
xchg
rolb
lea
int3
add
push
sub
inc
lds
cmp
inc
cld
xchg
xor
clc
cwtl
outsb
sbbl
add
jmp
movl
sbb
add
and
adc
adc
and
addr16
aam
mov
xor
mov
jmp
in
in
inc
aam
dec
dec
add
cld
and
dec
clc
movl
out
fcomps
push
pusha
loopne
jns
adc
cmpps
add
std
jno
addb
sub
das
adc
pop
repnz
pop
sub
inc
add
addl
loop
or
test
add
ljmp
scas
lahf
and
add
lea
in
inc
adc
shrl
push
loopne
sub
fisttpl
pop
mov
add
pusha
shl
fsubs
jb
inc
mov
scas
insl
shr
inc
rcrb
xchg
sbb
int3
xlat
mov
test
enter
outsl
xchg
les
adc
and
mov
mov
add
ljmp
loop
and
je
pop
shll
mov
mov
cwtl
inc
iret
jp
ds
fildl
divl
inc
and
enter
push
repnz
push
add
jo
subb
jno
imul
out
ficomps
pop
in
nop
mov
test
add
xchg
pop
fsubrs
push
mov
or
adc
cmp
xchg
xorl
add
add
hlt
pushf
push
mov
cmpsl
add
mov
add
insb
in
push
or
loopne
inc
dec
clc
add
and
stos
lods
and
lods
or
loop
rorb
and
ljmp
enter
mov
cmpsl
add
xchg
scas
daa
std
cmpsb
les
rolb
stos
dec
rorb
add
jb
cmpl
hlt
mov
pop
push
mov
addb
push
jmp
sbb
jmp
mov
jno
mov
or
push
cli
pop
mov
inc
enter
pusha
je
push
shrd
jo
daa
mov
mov
ficoml
lret
push
movsl
sub
jp
xchg
ror
mov
out
and
sub
mov
fimull
jno
notb
lods
add
lret
fiadds
sbb
loopne
lock
inc
enter
inc
or
push
mov
jg
mov
or
sub
leave
dec
mov
pop
inc
push
xlat
inc
movl
or
push
jns
mov
jbe
pop
add
mov
add
jne,pn
mov
addb
jmp
aas
fwait
sbb
or
xor
adc
cli
mov
add
and
divl
mov
repz
push
test
xorl
pop
mov
nop
inc
rorb
mov
add
dec
jne
mov
inc
and
outsb
mov
stos
lret
push
add
bnd
push
mov
add
gs
lcall
pop
mov
jb
imul
cmp
rcr
sbb
in
mov
add
rcll
in
push
nop
movsb
jae
pusha
jns
jge
add
jecxz
cmp
mov
fdivrl
lods
push
mov
mov
inc
adc
add
data16
popa
aad
nop
outsb
xchg
lds
mov
adc
sti
shlb
mov
addl
imul
adc
jg
mov
jnp
cmp
stos
xor
add
cld
inc
dec
xchg
cld
add
in
call
push
roll
mov
iret
xchg
stos
inc
or
inc
mov
and
pusha
daa
add
testb
mov
mov
add
jecxz
or
add
add
mov
push
jne
lods
movsb
lret
add
fsubl
lock
popa
cli
xchg
xlat
push
pusha
rolb
push
jg
add
lods
and
and
dec
sub
add
xchg
inc
movsb
stos
test
lock
lret
lds
pop
ret
mov
test
out
test
mov
jle
add
mov
cmp
push
fidivrl
dec
sbbl
insb
shlb
js
add
push
pushf
test
push
roll
xor
and
popa
mov
mov
and
push
sbb
ret
cmc
int
jmp
add
pop
cmp
ret
clc
push
add
mov
or
leave
sbb
add
ds
call
call
rcll
mov
xor
nop
in
enter
cmp
imul
cmpb
mov
int
add
jae
les
pop
add
mov
xor
out
data16
popf
std
cmp
and
pop
mov
jae
or
xchg
nop
mov
push
add
push
push
pop
add
jl
inc
xchg
jg
clc
sub
or
pop
adc
pop
add
repz
cld
sub
xor
in
add
mov
test
inc
and
add
imul
xor
xor
aas
notl
pusha
popa
arpl
test
add
shlb
push
push
loop
ret
test
inc
test
popa
mov
cwtl
mov
negb
loope
sub
xor
xor
inc
mov
mov
shlb
jne
mov
inc
push
je
faddl
mov
adc
add
cmc
push
sub
inc
mov
movsb
daa
out
fs
or
outsb
add
jg
aam
or
add
dec
inc
dec
dec
and
adc
ds
imul
out
add
cwtl
mov
dec
inc
scas
aad
xor
testl
pushl
sar
xchg
push
das
loop
dec
cmp
add
dec
lods
cmp
fcoml
bound
sub
adc
daa
sub
pop
jo
movsl
inc
hlt
frstor
inc
call
fcomps
mov
jl
stos
enter
testl
add
inc
jb
jnp
psrlw
int
inc
sub
std
mov
add
and
dec
lock
in
pop
mov
fs
push
cmpsl
or
push
inc
sbb
push
add
mov
push
cld
shr
sub
flds
xchg
out
scas
and
jmp
sar
inc
add
ljmp
add
gs
inc
add
dec
pusha
out
pop
lock
fnstenv
in
add
push
out
sbb
adc
mov
jmp
push
add
or
jle
cmp
ss
adc
aas
add
repz
outsb
mov
inc
push
xchg
lret
push
dec
mov
xchg
jle
cmp
or
inc
sub
andb
mov
hlt
pop
sub
push
push
js
das
repnz
popa
imul
jne
push
and
cmp
cmp
push
xor
dec
mov
shll
sahf
data16
add
mov
push
sbb
push
ljmp
jg
out
loope
dec
and
test
xor
imul
sub
xchg
lods
jns
or
orl
incl
repz
fs
cmp
add
cmp
mov
in
pusha
push
rorb
pop
add
cmp
mov
or
pop
pop
jl
hlt
inc
shll
xchg
add
fisubrl
idivb
dec
add
rorb
add
xor
or
pop
seta
enter
or
add
or
lahf
cmp
add
mov
push
pop
insl
fcomps
pop
adc
xor
imul
jge
jg
add
jns
push
adc
add
xor
ficompl
add
push
mov
insl
rol
xchg
jno
push
xor
jb
cmp
cmp
out
adc
xchg
fnstcw
dec
jne
push
and
add
incl
ja
test
add
cmp
outsl
nop
sub
imul
cli
push
test
addl
stos
cmp
mov
inc
dec
mov
add
pop
mov
add
iret
adc
dec
addb
addl
pop
pop
push
dec
adcb
mov
mov
add
fs
sub
leave
and
ffreep
cmp
mov
mov
mov
lret
cmp
pop
add
xor
enter
and
dec
pop
add
fnstsw
sahf
xchg
leave
add
push
or
test
mov
sbb
xchg
rcl
loopne
cltd
sub
sbb
cwtl
inc
lods
push
inc
or
add
sbbb
xor
push
xchg
add
je
add
mov
clc
add
aas
dec
xchg
aad
test
cmp
cld
mov
xor
xor
shlb
ret
mov
and
gs
lds
js
add
fiaddl
mov
jmp
sahf
pusha
popa
add
push
jno
das
cmp
and
dec
sbb
cmpsl
stc
js
cvtps2pd
clc
pop
invd
popa
mov
jne
cwtl
lret
and
cmp
or
inc
xchg
dec
add
jp
verw
jg
add
movsl
cltd
or
sbb
cmpsb
aad
movntq
mov
mov
pop
jbe
jns
pop
push
inc
or
sbb
sub
fisubl
add
mov
mov
lahf
mov
rcr
mov
sub
and
sarb
cld
cwtl
push
sub
push
add
xchg
dec
jl
sarb
mov
loopne
push
loopne
adc
and
pop
push
data16
insl
inc
pusha
add
fs
insb
sub
dec
cmovae
imul
add
enter
lods
bound
add
insb
int
adcl
jne
add
sahf
popa
or
push
bound
add
mov
mov
mov
mov
lods
and
inc
enter
inc
int3
rorb
add
adc
and
pushf
xor
add
cmp
test
add
in
fs
pushf
testb
jmp
stos
insl
inc
add
jno
data16
adc
imul
pop
add
arpl
int3
test
push
bound
js
cmp
mov
or
clc
add
mov
in
add
dec
cmp
add
jb
xor
push
call
lret
out
sub
mov
shl
add
sbb
fisttps
cmpsb
fwait
add
add
loope
mov
mov
outsb
ret
loopne
mov
ja
xor
adc
pop
push
push
jbe
sbb
mov
jne
xor
push
cld
inc
scas
stos
xrelease
mov
sub
add
inc
nop
cmp
insl
jno
inc
imul
iret
mov
add
dec
sub
hlt
mov
add
fiaddl
repz
js
jp
add
mov
push
stc
xorl
add
sub
jmp
and
jge
cltd
mov
mov
ss
je
or
iret
inc
or
mov
cwtl
push
pop
cltd
add
sbb
xchg
adc
cwtl
insb
push
and
inc
add
mov
call
sub
jbe
je
pop
sub
and
loopne
and
rolb
push
aaa
mov
sub
add
out
sub
arpl
push
xchg
or
add
adc
adc
enter
repnz
add
movsl
out
es
call
dec
inc
and
cmpl
cmp
cs
add
sub
adc
data16
add
or
add
sbb
adc
popa
sbb
add
mov
fldcw
shlb
add
inc
fisubs
cld
nop
fadds
enter
xchg
xchg
mov
mov
adc
pavgb
loopne
add
insl
mov
mov
rcl
filds
xchg
mov
mov
mov
mov
add
cmp
es
add
test
add
cmc
outsl
insb
pop
roll
cmp
lcall
mov
ret
push
add
jo
push
push
mov
add
out
orb
data16
ja
push
popf
inc
lods
add
jbe
sbb
mov
cmp
pop
sahf
mov
shl
dec
adc
jne
add
jae
fcmovbe
mov
les
test
push
jns
loopne
std
cwtl
add
inc
push
test
pushl
push
or
arpl
ljmp
inc
pop
xchg
or
xchg
or
add
cmp
int3
stos
inc
nop
sub
inc
test
mov
mov
inc
clc
xchg
inc
pop
add
insl
dec
cmp
cmpsl
or
lods
mov
aam
icebp
scas
pop
aas
loopne
lahf
or
aad
and
nop
jo
push
add
fistps
push
movsl
cmp
sbb
mov
testl
dec
fildl
adc
and
ret
xor
mov
pop
cmp
sub
or
leave
popf
pop
sub
lock
dec
and
jecxz
add
adc
data16
enter
dec
pop
and
mov
mov
and
add
in
aad
in
jae
test
pushf
dec
dec
sbb
sbb
fisubl
add
mov
or
in
mov
dec
cmp
xor
popf
sub
push
cmp
loope
mov
je
add
inc
bound
fs
or
sbb
adc
xchg
add
mov
addb
outsb
add
dec
gs
jne
push
jp
jnp
jg
dec
lods
mov
pop
add
loop
mov
sbb
lret
and
or
sub
cld
mov
add
pushf
sarb
hlt
fwait
sub
inc
xchg
cwtl
add
pop
jp
push
or
adc
fs
mov
jae
jbe
mov
ret
xchg
adc
fsubrs
cwtl
jne
sub
jnp
adc
sub
push
mov
lahf
pop
jo
add
scas
andb
add
call
jle
mov
mov
dec
xchg
mov
fnsave
outsl
jae
add
psubusb
add
jg
mov
daa
imul
add
mov
sub
cmp
jmp
or
add
stos
push
lahf
outsb
stc
pop
shlb
add
mov
pop
pop
sub
je
arpl
push
shlb
hlt
inc
dec
daa
jne
jnp
add
out
bound
inc
jge
int3
jle
inc
xchg
das
and
es
adc
les
dec
testl
dec
mov
fcompl
or
pop
clc
push
add
loope
in
add
mov
jns
xchg
xchg
dec
adc
pusha
outsb
push
add
mov
push
push
add
xor
mov
add
push
loopne
test
add
mov
rolb
notb
pushl
push
jo
loop
cmp
add
and
dec
push
aaa
pop
add
push
mov
sbb
inc
sub
adc
pop
add
jl
sets
jne
sub
inc
loopne
sub
sahf
pop
loope
mov
add
popa
sbb
nop
xchg
pop
mov
insl
push
cltd
jo
outsl
push
lea
adc
ret
mov
add
mov
add
fcoms
clc
or
pop
cmp
mov
pop
rol
xor
popa
mov
or
addb
jns
popa
and
js
lock
add
jo
add
push
push
pop
and
or
cmpsb
push
add
mov
div
pop
lock
shlb
movsl
pop
inc
adc
dec
dec
in
aas
add
jecxz
mov
stos
push
bound
dec
add
cmp
jl
lsl
clc
jmp
repnz
add
inc
jnp
sub
bound
inc
dec
arpl
jo
fidivl
sbb
fst
and
or
adc
jge
cmc
imul
int3
dec
mov
jge
push
or
inc
loope
pop
pop
push
cmp
adc
rorl
xchg
mov
add
cmp
push
sub
add
in
lahf
jnp
mov
imul
xor
pop
mov
icebp
inc
sbb
xchg
mov
xchg
jecxz,pt
fadds
add
test
movsl
call
sub
popf
add
pusha
push
or
jle
pop
xlat
xchg
out
cmp
shll
add
ficomps
mov
pop
sub
or
loop
mov
paddq
jno
pop
call
jb
fdivl
out
movsl
adc
filds
adc
adc
jecxz
pop
call
popf
xchg
popa
or
add
push
je
add
fdivrs
sub
ja
idivb
add
lods
push
out
jno
and
iret
jo
inc
push
add
ljmp
add
imulb
lret
cmc
push
inc
leave
and
imulb
or
mov
mov
fwait
mov
sarl
and
pop
add
push
pop
mov
sub
push
xor
sbb
aam
push
add
mov
add
push
into
sub
iret
std
aas
repnz
sub
add
lret
jmp
add
or
or
push
dec
je
push
mov
pop
push
cmp
cmpsl
shld
add
mov
adc
sub
xchg
jns
add
add
pop
mov
dec
push
pop
push
xchg
movsb
mov
add
fs
movsl
les
fdivr
sub
adc
bound
pop
inc
inc
scas
add
mov
aam
inc
jnp
cmp
sub
aas
mov
add
movsb
loopne
add
jne
clc
sbb
shl
jge
imul
je
leave
fs
add
inc
mov
shrb
les
iret
push
lret
pop
and
in
add
push
add
in
add
push
repz
push
out
loop
or
jno
and
dec
les
insb
push
inc
pop
gs
rcrb
test
loopne
inc
out
jns
leave
dec
sahf
lret
cmp
adc
lods
sti
orl
sub
add
push
fdivs
shlb
addl
sub
ja
rcrl
rolb
mov
add
rclb
enter
mov
cmp
incb
pop
xchg
jns
lret
xchg
xlat
fwait
add
or
add
push
push
add
out
in
pusha
or
daa
add
shrb
push
mov
faddl
lods
addb
clc
dec
roll
or
cld
add
dec
jne
lock
cmpsb
fdivrl
sub
inc
add
into
inc
mov
shl
add
cmp
out
data16
aas
or
add
sbb
and
or
adc
pop
cmc
in
jo
lahf
hlt
add
jb
fldenv
pop
mov
push
cmp
sar
andb
push
pop
aaa
pop
mov
and
xor
jmp
mov
inc
mov
mov
add
push
dec
int3
cwtl
call
cmp
scas
jne
inc
push
gs
out
in
pop
add
or
mov
cmp
sub
lret
add
adc
adc
sbb
inc
clc
sbb
jb
pop
shl
dec
cmp
jl
rolb
ja
pop
push
out
or
pop
shlb
and
pop
push
or
push
and
add
shll
pop
nop
jge
jns
add
mov
cld
jae
push
fiadds
mov
test
xor
decb
jge
xchg
mov
sub
add
add
jns
push
adc
jae
dec
mov
sub
pop
sub
add
push
sub
call
jmp
gs
add
cwtl
cmc
mov
inc
daa
loopne
sti
inc
clc
push
movb
add
add
scas
add
push
add
mov
mov
aas
add
adc
add
and
movb
sub
mov
add
out
dec
cmp
adc
add
mov
rol
jne
cld
das
add
jg
cli
scas
repz
les
dec
add
push
sbb
and
push
pop
std
rcll
out
stc
ja
sbb
mov
enter
add
and
pop
fmuls
push
test
sbb
cwtl
sub
sub
sub
push
mov
cwtl
bound
add
add
ret
aam
inc
mov
lret
add
lock
and
push
cmp
and
jae
pop
or
add
test
shlb
add
dec
mov
mov
push
addl
out
sbb
cld
xchg
pop
pop
add
jg
xlat
add
inc
sbb
into
enter
out
xor
adc
sbb
mov
fildll
add
sbb
inc
xor
add
das
call
mov
mov
pop
pop
xchg
test
int
jmp
add
lcall
cwtl
adc
iret
mov
add
add
popf
or
jne
push
jae
pop
add
mov
sti
cmovge
fisttpl
inc
rcr
ds
mov
cmp
fsubs
in
mov
testb
push
adc
add
enter
insb
add
aam
test
in
add
mov
jne
pusha
xchg
dec
cmp
inc
dec
aam
and
das
insl
les
hlt
clc
add
and
add
and
add
adcl
add
jmp
inc
insb
les
cltd
inc
add
in
adc
jbe
jmp
fwait
add
lret
pop
add
bnd
pop
dec
xor
mov
push
sti
mov
add
jno
pop
add
repz
testb
sub
add
pop
inc
jmp
and
xlat
cmpb
add
jne
adc
adc
add
mov
xchg
and
shr
and
or
adc
mov
and
mov
inc
mov
jne
add
je
iret
mov
or
add
leave
mov
add
sub
mov
rcrb
add
lcall
dec
pop
add
les
add
xchg
or
jns
and
mov
mov
hlt
jae
lahf
test
xor
push
xor
shlb
add
test
insb
push
dec
jne
push
loopne
jns
movsl
lret
mov
cmpsb
cmp
mov
das
pop
testb
push
outsb
mov
lods
fwait
nop
add
mov
fcoml
punpckhdq
add
xor
enter
xchg
and
add
or
cmp
pop
in
add
test
add
jl
cmp
popf
mov
pop
inc
adcl
pop
xchg
xor
and
and
add
jle
adc
jmp
dec
stos
loope
pusha
nop
inc
add
mov
sbb
pop
cmp
add
and
add
pop
mov
xor
sbbb
lret
ss
inc
cwtl
add
addl
add
mov
cld
or
mov
lcall
or
scas
lock
outsb
sub
add
aad
cld
test
rclb
xchg
jo
inc
add
add
notb
js
inc
and
add
and
dec
add
adc
jmp
sbb
add
xor
add
push
cmp
addb
inc
inc
cmp
jne
pop
rclb
cltd
and
adc
les
insl
dec
cwtl
mov
pop
xor
das
mov
pushf
ss
andl
pop
xor
enter
loopne
jns
xchg
js
dec
fcompl
lods
push
std
sti
add
lcall
jnp
jge
push
add
or
xor
dec
mov
ljmp
ficomps
imul
jge
xchg
jns
pop
test
xchg
push
mov
xchg
xorb
xor
add
add
inc
jl
push
in
push
aad
and
rclb
lock
lods
dec
in
out
add
js
mov
jne
in
cltd
add
adc
sbb
repz
sub
or
mov
insb
add
jge
adc
dec
inc
fs
jb
cli
mov
lret
jmp
dec
inc
or
aas
cmpsb
leave
cmp
ss
call
pop
dec
cmp
add
popf
popa
and
add
push
pushf
mov
push
mov
and
je
es
lret
lret
icebp
mov
add
push
push
xlat
adc
sub
jecxz
cmp
dec
add
loope
push
sahf
insl
xchg
out
add
ret
daa
push
add
xchg
jb
sub
push
xchg
sub
pop
aad
add
xchg
cmpsl
test
add
mov
xchg
ret
jmp
jno
idivb
or
lea
inc
shlb
sub
nopl
push
or
inc
push
rol
popf
jae
add
cmp
add
fiaddl
test
add
add
cmp
push
xchg
in
mov
xlat
mov
mov
pop
jge
add
shrb
mov
ja
mov
aas
cmp
jg
out
mov
xor
inc
push
mov
push
xor
imul
jg
mov
add
loopne
repnz
cli
cmp
loope
in
test
mov
add
add
add
push
jne
ret
call
push
jae
xchg
loop
and
add
movsl
xor
jne
idivl
mov
jnp
jne
pushf
sub
lea
push
push
das
add
jb
add
add
hlt
add
js
pop
pop
sbb
mov
inc
dec
or
dec
inc
nop
inc
push
fisttpl
sti
rorb
hlt
push
add
jl
sub
pop
call
ret
shlb
inc
sub
add
inc
enter
push
add
xchg
incl
push
mov
mov
adc
add
out
imul
cmp
mov
push
dec
fs
sub
sbb
hlt
pop
arpl
jne
jmp
xchg
jmp
testl
jle
sarb
jecxz
data16
add
dec
dec
jno
xchg
push
imulb
add
fs
jo
lea
adc
adcl
cwtl
in
lods
add
clc
decb
and
rcll
cli
mov
cld
jo
je
orl
nop
mov
inc
add
push
push
jnp
push
mov
jge
decl
add
mov
lcall
test
jge
add
cwtl
iret
sbb
movzwl
icebp
sub
mov
add
clc
push
imul
mull
pop
push
add
mov
cs
aaa
sti
ss
lret
jp
add
mov
lods
pusha
jae
pop
jmp
inc
xor
and
or
or
aaa
mov
sbb
adc
rorb
iret
jne
cwtl
scas
and
dec
lods
xchg
cltd
or
push
add
imul
lcall
sub
mov
test
push
imul
mov
jbe
rorb
add
fwait
inc
mov
mov
shlb
add
pop
mov
push
add
mov
frstor
jne
rorb
push
jo
adcl
lea
clc
je
pop
ljmp
jp
nop
add
mov
and
mov
jle
pop
add
mov
xor
add
add
adc
xchg
add
movsl
test
pop
and
js
mov
daa
fadds
gs
fucom
jmp
inc
outsl
push
repz
andb
sahf
outsb
adc
inc
sbb
out
cmc
add
push
mov
dec
stos
add
or
lcall
xor
std
sbb
ret
add
repz
add
push
dec
lret
xlat
xchg
jo
punpckhdq
xor
mov
sub
sbb
or
inc
mov
jg
int
std
call
ss
dec
xchg
jo
cmp
sub
dec
add
adc
or
mov
inc
xor
test
cmp
inc
add
add
mov
add
push
cmp
jne
or
out
xchg
cli
testl
enter
nop
scas
outsb
inc
out
inc
cmp
loopne
xor
arpl
pop
inc
mov
add
movsb
fs
add
int3
jmp
dec
pusha
add
stos
into
pop
addl
jns
mov
ror
cmpsl
test
loopne
repnz
xchg
cmp
loopne
xchg
pop
xor
and
pop
push
or
dec
aam
ret
xor
jno
add
mov
xor
or
shrb
pop
call
add
xchg
add
imul
outsl
imul
test
add
je
push
popa
push
loopne
fwait
orb
mov
ret
loope
push
or
in
sub
mov
rcr
jbe
push
or
les
push
aas
jl
add
mov
cmp
add
add
fldl
imul
pusha
sbb
stos
push
add
mov
or
or
fcoms
add
cwtl
jbe
and
pop
call
out
mov
mov
dec
cmpsb
xchg
and
je
add
push
inc
movsl
and
cli
into
mov
add
xchg
stos
shlb
or
add
push
jp
lret
pop
jmp
xor
cltd
gs
xor
and
jbe
mov
push
dec
inc
jmp
or
cmp
xor
sub
add
in
pop
daa
inc
mov
ljmp
std
cmovns
subb
push
add
mov
ja
out
mov
cmpb
sbb
mov
and
mov
push
add
mov
push
rclb
mov
scas
pop
cmp
cltd
dec
clc
sub
mov
pop
sub
or
test
add
and
movsb
cmp
addb
push
mov
clc
shlb
cmpsb
sbb
mov
mov
add
lods
jge
or
test
xchg
push
or
repnz
or
adcb
add
lods
dec
adc
push
cmp
clc
pop
jl
add
aam
inc
add
cmp
jne
ret
add
cwtl
mov
inc
inc
ds
add
dec
fidivs
outsb
add
pop
xchg
int3
rcl
rorl
and
mov
ljmp
popf
xchg
and
pop
xor
mov
cmc
xchg
inc
add
cs
add
xchg
scas
jb
gs
sub
daa
into
push
aas
dec
rolb
and
test
sbb
add
jo
ja
dec
adc
jno
sbb
loopne
mov
add
jmp
xor
mov
rclb
js
add
or
inc
mov
xchg
add
mov
xchg
pop
sti
push
add
jae
sbb
and
rolb
cmpsb
sbb
cmp
pop
push
fldenv
add
push
lret
or
sbb
jg
repz
mov
aam
das
add
fists
cs
imul
add
mov
xor
push
ror
mov
repnz
repnz
or
idivb
xchg
sub
add
ficoml
cwtl
push
aas
pop
add
sub
movb
add
fsubr
mov
add
pop
pop
jb
and
adc
pop
xchg
xchg
dec
hlt
and
xor
push
add
rclb
sub
push
ljmp
cmp
cmp
sub
clc
add
jecxz
rorb
lock
mov
cli
sbb
mov
and
fistpll
xchg
add
mov
mov
xchg
adc
pusha
in
mov
inc
add
lods
pop
pop
into
adc
adc
sub
and
incl
xlat
bound
dec
faddl
mov
adcl
ds
mov
call
jle
pop
or
xor
or
enter
decl
lea
and
xlat
mov
inc
jle
dec
adc
sbb
mov
inc
cmp
lock
inc
mov
ret
test
outsb
in
pop
pusha
aam
adc
add
data16
mov
add
add
dec
add
xor
add
adc
adc
xchg
xchg
jne
sbb
mov
adcb
cmp
xchg
jno
pop
cmc
hlt
jne
mov
pop
pop
pop
pop
jl
rol
aaa
xchg
jg
and
mov
mov
hlt
mov
orb
fninit
push
pop
add
inc
adc
hlt
cmp
mov
add
inc
push
or
dec
xorb
pop
sbb
mov
shl
arpl
mov
jmp
cmp
inc
sbb
enter
push
sbb
mov
orb
test
shl
mov
adc
add
push
and
dec
pop
xchg
test
add
inc
shr
orb
add
popa
inc
jmp
and
add
aam
leave
mov
add
lock
jmp
jecxz
ja
loope
sub
fcompl
push
dec
push
jbe
lods
test
push
cmp
pop
cmc
sbb
push
mov
popa
sub
adc
outsl
xchg
sbb
adc
mov
lds
cmp
mov
mov
jp
adc
pop
mov
fs
push
sbb
in
aas
and
sbb
fst
bound
adc
cmpsb
stc
add
xor
pushf
push
lds
aaa
or
add
fildl
das
cmp
addb
std
cmp
jae
xchg
loopne
mov
push
dec
int3
mov
mov
inc
call
xchg
pusha
or
and
add
ljmp
jmp
repz
xchg
xchg
add
jp
mov
imul
or
and
add
call
add
add
cwtl
or
mov
daa
sbb
loope
or
push
mov
dec
shl
mov
sub
inc
or
aas
mov
sahf
sub
mov
mov
add
es
inc
push
movsl
add
xchg
in
movsb
sbb
movzbl
sbb
inc
or
lods
fldl
xor
add
add
fs
pop
xchg
pop
or
js
dec
mov
push
and
lods
aam
inc
add
and
mov
call
jnp
je
mov
test
push
xor
add
pop
hlt
outsb
fwait
cld
push
mov
sub
or
je
incb
enter
jmp
dec
outsb
scas
addr16
push
push
cmc
loope
mov
add
incb
jmp
or
add
push
outsl
imul
shl
add
cmp
pop
add
push
inc
sbb
push
dec
test
add
test
lahf
add
inc
add
out
inc
sub
xchg
pusha
inc
jmp
lcall
add
filds
add
push
pusha
inc
sbb
test
aas
arpl
jmp
loop
pop
int3
fwait
shlb
add
xchg
adc
mov
or
add
clc
call
xor
cmpsl
add
insl
dec
aas
shufps
mov
add
xchg
je
add
hlt
jnp
xchg
call
sub
xchg
sub
sbb
fldcw
sbb
sti
and
out
test
jbe
push
push
test
xchg
movb
data16
call
xor
sbb
add
insb
add
lret
push
adc
dec
add
pop
dec
push
mov
aas
loopne
sub
lds
inc
sub
in
jbe
and
jnp
cmp
movsl
stos
cmpsb
in
jge
dec
cmp
mov
xor
add
insb
jbe
pop
add
or
sbb
push
push
inc
sbb
add
mov
stc
pop
add
or
adcb
test
xorb
lahf
add
add
xor
push
lret
cs
inc
mov
dec
add
aad
call
and
inc
je
rolb
repz
or
testb
mov
add
lods
frstor
loopne
jle
mov
cli
addr16
cmp
push
lods
xchg
adc
sbb
mov
je
enter
sub
push
jmp
inc
addb
rolb
bnd
mov
test
call
pop
scas
add
call
inc
mov
xchg
adc
pusha
jle
and
fdivs
jmp
rolb
push
add
fcmovb
shll
cmp
data16
adc
mov
nop
cmc
or
mov
sahf
ficoml
push
add
je
test
and
xchg
in
adc
jge
push
inc
add
xor
xor
adc
push
mov
pop
sbb
fwait
xchg
add
int
and
or
outsb
daa
je
gs
fs
mov
pop
ret
push
xchg
ss
inc
adc
push
add
rcrb
add
out
fnclex
pop
mov
roll
inc
icebp
mov
cmp
mov
sub
xor
or
sbbl
inc
add
jo
add
fdivs
add
das
adc
aam
push
pop
clc
movb
enter
out
xor
jecxz
push
add
add
call
push
aaa
xchg
xor
or
dec
sbb
es
adc
insl
pop
add
add
sub
and
add
jnp
jmp
or
test
push
cmpsb
pop
and
mov
orl
adc
repnz
aam
and
sub
xor
add
iret
dec
xchg
push
je
hlt
dec
cltd
push
add
sub
add
mov
xchg
cmp
sbb
sldt
testl
adc
mov
sub
in
or
jne
negl
lods
fsubs
out
add
out
and
dec
sbb
xchg
fmulp
mov
in
add
xor
xor
cmp
and
xor
jecxz
rclb
and
pop
fcmovb
stos
aas
testb
dec
sub
xchg
iret
inc
adc
addl
or
icebp
cmpsb
add
jmp
mov
sbb
or
sub
push
push
inc
add
push
jle
inc
addl
in
jecxz
and
push
add
and
mov
pusha
mov
pop
add
inc
push
je
ret
insl
imul
xchg
jne
add
fnstsw
pusha
dec
outsb
lock
add
jmp
pop
sub
sub
sub
cwtl
outsb
or
aad
je
xor
insb
adc
and
xor
and
ficoms
pop
shr
mov
adc
mov
pop
stos
enter
add
push
pop
repnz
rorl
sbb
inc
cmpsl
adc
mov
xchg
lret
mov
shlb
fsubl
mov
call
and
and
or
or
add
iret
pop
enter
add
outsl
rcrb
push
hlt
add
iret
shll
add
and
lock
test
add
sub
mov
in
add
daa
lcall
jp
orl
sub
js
mov
inc
add
jnp
mov
pop
mov
sub
push
jp
fcmovnu
jg
xor
cwtl
add
adc
or
push
mov
sarb
stos
mov
sbbb
stos
mov
or
or
xchg
das
add
mov
add
icebp
int3
imul
jmp
push
sbb
dec
aam
inc
mov
pusha
and
loope
cmp
add
jo
sbb
insb
mov
and
add
push
add
scas
test
add
sbb
add
mov
loop
loopne
jp
add
mov
jo
xor
xor
cmc
test
xor
test
inc
popf
cltd
in
add
xchg
xchg
add
int
fildl
repnz
cld
mov
nop
pop
add
push
or
and
fcoml
fwait
mov
pop
test
sahf
and
pop
inc
loop
pushf
dec
pusha
js
rorb
cmpsb
rolb
push
clc
adc
add
and
test
push
lahf
jle
enter
jmp
push
inc
add
aad
inc
and
mov
add
call
int3
inc
adcb
push
cmp
inc
subb
push
test
dec
push
mov
scas
addl
add
imulb
add
lock
jne
xchg
daa
dec
jae
ljmp
push
mov
add
mov
xchg
inc
mov
loopne
or
repz
and
push
dec
ret
sub
test
adc
inc
sbb
inc
shrb
shlb
cmp
pop
sbb
add
jp
ja
push
mov
adc
ret
sbb
sub
fldl
xor
in
push
fwait
dec
push
push
call
orl
push
popf
xor
add
mov
fmul
clc
jns
cmp
and
xor
adc
nop
cmpsb
add
and
cmp
nop
add
dec
out
xlat
mov
cmc
out
add
loopne
inc
adc
pop
rolb
mov
dec
mov
pop
clc
xchg
fisubrl
mov
js
and
daa
ficoms
call
idivl
sbb
cmp
mov
add
and
stc
pusha
aas
jecxz
xor
push
push
call
dec
add
xchg
scas
and
jne
sub
xor
rolb
adc
add
les
jne
movsl
add
je
sbb
jns
adc
dec
repnz
jo
add
adc
mov
or
cmp
out
sbb
icebp
pop
rcrb
movaps
cli
add
pop
pop
mov
inc
add
or
jl
add
cmp
add
fsubp
loopne
push
add
ja
mov
add
mov
xchg
mov
jne
in
daa
push
std
add
mov
add
test
jmp
add
sbb
cmp
ret
ja
and
or
xchg
jae
add
not
sub
lods
mov
data16
mov
jmp
add
popa
jb
push
movsb
jp
idiv
pop
push
and
xchg
ja
push
test
leave
jne
sub
jnp
ret
add
dec
cld
cli
adc
push
test
mov
fsts
adc
and
dec
dec
arpl
mov
sti
adc
pop
cmp
mov
push
inc
push
xchg
mov
rorb
imul
test
jle
pop
jns
cmp
je
das
cmp
or
cld
push
mov
mov
and
mov
sahf
jle
and
ret
cmp
sub
cmpb
fs
pusha
pop
nop
inc
cs
cmp
lock
add
or
cld
sbb
mov
mov
arpl
mov
stos
clc
test
test
pop
push
mov
xchg
add
adc
inc
ret
add
shll
or
inc
push
jg
add
xor
and
out
icebp
adc
cwtl
fistpl
or
out
push
push
push
inc
rcpps
push
enter
aas
and
add
loop
xchg
leave
cmc
adc
repz
add
add
dec
mov
add
inc
add
les
add
pop
cmp
mov
or
loope
add
lret
or
or
xlat
add
and
neg
or
and
aaa
ror
stos
add
pop
pop
ss
sub
fidivrl
and
fdivrl
and
xor
lock
pushf
add
in
jno
fadds
add
mov
inc
dec
pop
movsl
adc
das
cld
jno
sub
xor
and
add
pop
jmp
insb
pop
pop
sbb
int3
and
gs
shl
movsb
push
out
leave
in
bound
dec
pusha
add
push
call
std
xchg
mov
add
sti
adc
add
ja
jne
push
add
in
js
pop
push
add
sbb
dec
notb
add
test
add
aaa
push
dec
add
cmp
xor
push
sbb
or
orb
adc
cwtl
and
add
movsb
add
ret
add
mov
cmpsb
add
stos
jns
or
inc
pop
je
pop
xor
sub
push
lock
mov
lret
or
out
cmp
repz
shrb
inc
push
ds
jl
sub
push
call
rclb
push
lea
sub
push
dec
push
cmc
gs
sbb
out
addb
sub
rclb
ss
loopne
mov
push
int
pop
imul
ret
mov
xchg
andl
out
inc
test
xor
cmp
dec
divl
sbb
test
inc
es
add
dec
or
mov
inc
cmp
add
str
mov
add
and
push
jg
pop
sbb
lock
push
pop
std
fsubs
jae
dec
rolb
out
inc
std
incl
popa
mov
iret
mov
mov
or
adc
add
leave
mov
test
xchg
pusha
bound
jmp
xchg
add
cmp
push
pushf
out
lcall
xchg
mov
iret
adc
or
and
int3
js
andb
clc
xchg
jmp
and
cmp
mov
sub
add
or
xchg
pop
mov
into
push
orb
mov
rcll
shlb
int
xchg
add
fsubr
shll
ret
jmp
stos
cmp
dec
xorb
lock
or
shl
test
das
fdivp
sub
add
insl
loopne
pop
cmpl
lcall
sbb
add
or
jb
add
stos
in
jns
fisttpl
sbb
sub
add
mov
enter
cmpsl
cmc
pop
repz
fsubrs
test
jne
add
call
je
jbe
and
xchg
pushf
stos
cwtl
scas
add
mov
xchg
jle
xchg
jo
cltd
dec
cmpsb
sbb
inc
repnz
daa
jmp
sbb
pop
movsb
cld
inc
jge
push
jg
cmp
xor
jmp
cmp
arpl
lock
add
lahf
aam
mov
add
cmp
mov
xchg
jbe
lds
pop
cmc
nop
inc
sbb
sbb
sbb
ljmp
pop
add
rcll
call
adc
lock
and
push
in
and
pop
mov
xor
pusha
loopne
inc
dec
add
or
jne
add
aaa
cmp
sbb
pop
or
fstpl
mov
faddl
cmpsb
add
subl
lods
ljmp
adc
inc
adc
jmp
push
sub
outsl
add
mov
shrb
repz
jmp
je
mov
add
addb
add
adc
lock
pop
pop
cld
ja
jo
jno
cwtl
or
xor
arpl
xchg
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
pop
or
jbe
pusha
jp
fcoml
xor
add
adc
add
out
test
mov
std
lods
repz
dec
jne
addr16
lret
add
pop
adc
cld
jae
push
add
xchg
or
jl
bound
dec
xchg
sbb
das
cwtl
dec
enter
dec
ret
pop
leave
jl
ret
xchg
pop
mov
outsl
adc
inc
push
outsl
add
push
cmp
jmp
jo
lcall
scas
push
daa
out
xor
outsl
add
aad
lods
fimull
mov
in
jne
int3
xlat
inc
clc
shr
add
mov
or
cmp
test
dec
pop
jecxz
mov
push
pop
addps
lret
aam
add
shlb
fcompl
pop
fcoms
data16
sbb
xchg
inc
mov
mov
or
mov
test
cmp
add
mov
mov
add
std
addb
cmp
pop
call
data16
or
fnstcw
inc
call
ljmp
and
scas
push
clc
jmp
cmp
sbb
int
mov
add
inc
mov
add
dec
mov
xchg
cmpsb
cmp
adcb
pop
sbb
or
mov
sti
js
add
inc
mov
mov
cli
xchg
xor
or
inc
lods
daa
pop
das
fadds
adc
pop
stos
cltd
scas
cmp
add
sub
pop
idivb
add
fists
push
out
iret
jo
rorb
dec
dec
add
out
test
out
dec
bsf
dec
lods
adc
cmp
les
cs
add
lock
cmpsb
sub
dec
cmp
dec
repnz
jle
jmp
cmovne
cmpsb
lea
idivl
inc
dec
push
psubb
ficoml
or
pop
mov
and
cwtl
enter
add
iret
mov
popl
add
cmp
sldt
loop
jb
pop
mov
dec
and
mov
and
mov
in
add
sub
mov
dec
add
jae
cmp
pop
xchg
push
in
add
loop
mov
sahf
add
adc
mov
loope
mov
repnz
out
push
ja
and
dec
jne
add
lahf
iret
cli
add
mov
ljmp
add
jne
xchg
dec
push
push
jmp
inc
in
fstpt
pop
jmp
mov
add
push
enter
add
xor
jle
and
rcll
or
sbb
lea
cmpsb
pop
pop
sbb
sub
or
inc
mov
pop
and
cmp
stos
sti
or
les
adc
mov
addb
iret
jo
sbb
add
push
jecxz
repnz
cmc
jns
mov
popa
mov
test
or
mov
add
push
out
add
out
fsubs
inc
sub
cld
cmp
leave
das
cmpsb
xor
and
dec
addr16
adc
enter
sub
test
push
mov
pop
mov
pusha
leave
pop
pop
popa
add
xchg
dec
inc
jmp
in
out
nop
iret
imulb
sbb
jae
adc
add
and
xchg
mov
cmp
aad
xorl
inc
push
in
mov
lods
sbb
dec
addl
xor
xchg
cli
scas
mov
fs
mov
push
or
hlt
ja
shrb
testl
push
mov
jbe
and
je
dec
es
add
cmp
jne
adc
add
sub
cmp
dec
inc
lret
pusha
inc
shlb
add
inc
repz
push
sub
xor
sbb
mov
cmpsb
loop
mov
aam
and
sub
push
jg
pop
push
pop
mov
daa
in
add
aaa
inc
sbb
push
sub
mov
lcall
es
dec
dec
loopne
add
cmpps
sbb
inc
adc
and
dec
adc
mov
in
add
lcall
push
lret
dec
loopne
sbb
movsl
cmc
pusha
out
repnz
fildll
jmp
hlt
call
pop
es
pop
and
dec
in
lock
add
cs
call
test
lahf
xorl
aam
cmp
jle
jns
pop
mov
leave
std
adc
rcr
lahf
cmp
imul
int3
jp
call
setns
call
mov
movsl
sbb
in
fdivp
pop
adc
jb
dec
ja
mov
sbb
flds
in
add
outsb
popl
or
addr16
inc
inc
pop
add
in
mov
cmp
sub
imul
inc
out
and
jnp
pop
pop
loop
pop
ficoms
add
mov
adc
push
push
cmpsl
adc
sbb
inc
cmp
cld
cmp
repnz
cmp
jp
add
adc
filds
or
cs
sbb
xchg
sub
pop
lock
mov
add
xor
cli
push
push
or
mov
lods
movsb
stos
dec
ljmp
adc
js
cmp
inc
mov
fdivl
movlps
shlb
lock
mov
in
inc
popl
loop
cltd
adc
and
adc
adc
pop
iret
inc
and
lea
jnp
icebp
cmp
xchg
push
pop
mov
add
daa
es
push
andb
add
cmp
xchg
adc
test
add
adc
mov
and
xor
or
cmc
dec
add
pop
rcrl
sub
push
push
inc
mov
lods
and
imul
push
dec
sbb
cmp
loope
ret
loopne
push
jne
xor
fcompl
lock
add
add
adc
sbb
sub
je
cmc
inc
add
jp
push
lds
adc
or
fimuls
jnp
pop
rcl
in
out
jo
and
addl
shr
jmp
mov
movsb
nop
mov
or
lcall
es
xchg
jg
add
or
add
mov
adc
xchg
inc
sub
mov
cmpsl
pop
adc
add
lods
inc
lds
jmp
add
rcrl
jle
cmc
jo
jp
add
enter
push
les
and
andb
jb
and
xor
jl
add
push
cmp
sti
mov
cmp
inc
adcl
sub
loop
inc
rolb
pop
adc
and
nop
clc
mov
add
or
cld
outsl
push
mov
push
push
dec
dec
cs
add
push
mov
or
pop
push
push
sub
loopne
btc
rcll
cmpsl
mov
scas
lock
cmp
push
push
add
and
rolb
xchg
movl
or
add
pusha
inc
inc
call
cmpsb
xor
push
lock
iret
mov
pop
inc
pushf
mov
add
lock
mov
cmc
add
std
mov
add
cmp
inc
dec
jne
dec
addb
icebp
mov
add
cmp
or
mov
push
push
in
cvtps2pi
xchg
out
nop
push
mov
test
push
and
lret
add
push
fnstcw
ds
xchg
in
in
jl
je
test
leave
rcll
jmp
jg
cmpl
xchg
xchg
push
jae
push
add
or
stos
cwtl
mov
cld
rcl
add
cmpsb
pop
and
call
aad
addb
fwait
lods
pextrw
mov
test
sub
in
mov
into
hlt
mov
xchg
adc
mov
orb
movsb
add
jmp
loop
xlat
add
jne
fistl
or
add
je,pn
jge
lret
xor
aam
add
jmp
bound
adc
out
je
dec
loopne
ja
push
or
adc
xchg
mov
and
inc
and
xchg
je
add
mov
add
and
roll
filds
scas
dec
pop
mov
cwtl
shrb
in
cmp
dec
sbb
lock
cmc
js
add
icebp
and
add
call
ja
dec
jge
lahf
jnp
movsl
jle
add
fsubl
push
sub
dec
mov
add
jmp
or
gs
pop
mov
push
pop
pop
shll
adc
push
inc
mov
stos
add
dec
lcall
add
daa
outsb
popa
out
lods
fdivs
xorl
jnp
add
aas
xor
pop
sarb
adc
push
push
pusha
add
add
push
or
punpcklbw
and
sbb
add
test
xor
xlat
pop
scas
dec
fistps
sbb
clc
pop
data16
daa
sub
in
jg
inc
inc
cli
lods
and
aam
iret
push
mov
loopne
mov
adc
cmp
and
mov
cmpsb
jbe
cwtl
add
js
jne
lds
lods
push
das
jge
push
aas
add
xchg
add
out
enter
add
adc
push
scas
flds
xchg
dec
enter
push
pop
push
xchg
popf
sbb
jmp
repnz
cmp
nop
movsl
shlb
push
orl
js
out
add
or
shl
push
push
lea
add
push
and
into
add
mov
loope
shrl
jge
add
and
lods
loope
or
xchg
xor
mov
rol
add
push
in
jnp
xor
test
or
mov
shlb
inc
and
insl
or
mov
or
dec
push
in
test
imul
add
loop
fstl
ja
pop
adc
sbb
inc
test
or
add
sti
ror
pop
push
mov
imul
jb
cmpsl
jmp
addr16
adc
js
add
mov
les
push
loope
inc
fxsave
push
fisubs
js
loopne
les
shrl
or
or
push
mov
pop
cwtl
and
frstor
test
xlat
dec
aaa
stos
add
mov
popf
jno
hlt
gs
out
adc
xor
mov
mov
pop
push
or
call
add
sub
cmpsb
xor
dec
dec
adc
adc
sbb
pop
lods
ret
push
mov
mov
cmp
sbb
in
or
adc
fisubs
addb
hlt
mov
add
xor
add
ss
and
andb
push
mov
mov
outsl
pushf
sub
dec
add
lods
insl
test
pop
jmp
es
add
dec
xor
and
add
ja
test
adc
and
jge
sbb
mov
or
pop
add
pop
push
xor
jno
add
in
mov
jmp
add
pop
pushf
sbb
test
add
push
jl
call
icebp
ret
dec
and
push
mov
xchg
aam
popf
dec
fldcw
adc
add
cmpsl
into
push
add
inc
pop
add
adc
push
je
push
add
sub
aaa
lea
in
mov
or
aas
xchg
call
and
cmp
adc
pop
shll
pop
mov
xor
xor
mov
dec
cwtl
add
sbbl
hlt
adc
mov
out
xor
mov
adc
add
shrb
cmp
clc
sub
add
sbb
test
clc
sub
mov
jle
ljmp
fldt
pop
push
es
dec
push
and
push
gs
add
addb
aam
and
cmp
adc
adc
enter
in
add
cwtl
jne
add
pop
mov
pop
cld
pop
mov
cmpsb
pop
xor
push
push
clc
add
jmp
int
inc
push
sub
and
cmpsl
cmp
aam
sbb
add
mov
call
scas
imul
inc
insb
mov
popl
add
mov
pop
ret
repnz
jp
xor
int3
jmp
dec
pop
sarb
lahf
add
imul
test
cltd
add
push
out
cmp
pop
inc
jne
mov
dec
mov
loop
shlb
add
arpl
int
movzwl
mov
scas
rorb
add
out
sbb
dec
inc
inc
adc
push
je
sbb
sub
stos
inc
add
cwtl
pop
add
xor
inc
add
call
mull
push
add
inc
inc
and
mov
test
dec
pop
scas
sub
cmp
mov
and
cwtl
mov
call
lea
mov
pop
cwtl
ja
and
sbb
cltd
out
gs
pop
cs
or
orb
jg
add
gs
xlat
test
cmp
es
pop
xlat
js
jns
dec
daa
add
notb
add
mov
push
or
cmp
pusha
fidivrl
sbb
dec
cmp
add
add
and
push
cld
inc
add
sbb
pop
nop
enter
mov
adc
inc
add
sub
notl
add
dec
leave
scas
add
pop
push
xchg
icebp
fsubs
add
cmpsb
or
jo
rol
xchg
jl
add
test
in
add
mov
jecxz
mov
shrb
jne
pop
mov
sti
mov
add
lret
adc
fld
add
pop
xor
sbb
sbb
add
sub
add
leave
add
nop
or
pop
ret
enter
add
xchg
add
orl
sub
adc
pop
test
idivb
add
and
cvttps2pi
push
inc
ds
aam
loope
jl
xchg
cmp
jp
sub
cmp
pop
mov
cmc
jp
pop
push
jl
push
push
insl
cmp
andb
cmc
or
inc
adc
add
mov
mov
stos
sahf
mov
ss
icebp
imul
notb
sbb
mov
inc
push
cmc
or
push
cmp
dec
std
xchg
add
test
jecxz
lahf
xor
dec
xchg
les
add
lods
xor
inc
fcomp
loope
add
stos
or
mov
aad
mov
sbb
xchg
ror
filds
out
add
lds
sbb
enter
xor
add
out
pushl
add
ret
lock
jp
add
push
ror
mov
dec
jne
cmp
push
add
and
pop
or
sbb
add
jge
pusha
push
daa
neg
inc
cwtl
sbb
mov
es
shll
add
sub
ljmp
push
mov
inc
inc
add
sbb
je
ror
add
pop
lea
cmpsl
pop
mov
lock
inc
pop
add
icebp
inc
lock
nop
in
cmp
mov
sub
add
sub
sbb
adc
lret
jnp
pop
mov
repnz
add
lock
outsl
gs
push
or
pop
add
cmp
push
testb
add
or
xchg
xchg
add
in
call
shrl
in
mov
repnz
lods
test
add
jge
aas
lea
add
mov
xor
jne
out
adc
inc
mov
or
xor
adc
mov
scas
outsb
rolb
cmpsb
fiadds
inc
loopne
adc
bound
xchg
icebp
nop
cmp
add
xor
mov
add
mull
xchg
rol
cmp
push
add
lret
add
ljmp
arpl
push
or
pop
add
incl
dec
dec
repnz
adc
lds
push
adc
call
add
push
inc
pop
pop
addl
in
xor
sar
add
pop
xchg
int3
pop
rorb
push
add
cltd
add
fdivrs
stos
jmp
popa
add
mov
xor
fisttpll
lock
push
cmp
addl
in
add
adc
sqrtps
inc
fwait
mov
or
mov
mov
sub
cmp
pop
pushf
push
rcll
mov
inc
add
pop
add
leave
and
add
mov
add
loop
mov
loope
outsl
add
rorl
call
flds
pop
sub
adc
iret
add
cltd
mov
or
pop
and
call
add
fsubrs
cmpsb
int3
sar
adc
test
add
xor
ljmp
and
add
inc
fsubrp
jmp
pop
push
in
mov
mov
or
jge
rcll
fstps
xlat
movsb
cld
shrb
pop
orl
dec
xchg
cmpb
test
xor
sbb
inc
ret
addr16
adc
pop
push
push
pop
pusha
sarb
ficoms
push
ds
ss
dec
push
add
nop
xchg
nop
pop
add
jp
cmp
and
leave
movsl
arpl
rolb
pop
aad
hlt
not
add
jo
mov
out
add
jl
dec
push
cltd
add
sub
pop
add
add
shlb
jl
inc
add
mov
sub
xor
leave
ret
movl
add
mov
add
or
dec
jae
xor
cmp
in
add
mov
or
push
lock
pop
inc
mov
aas
xchg
test
cmp
shlb
xchg
iret
xchg
mov
popf
andl
ja
rcrl
jmp
add
out
add
jbe
push
or
inc
xchg
add
or
and
xchg
out
nop
in
add
pusha
popa
sbb
push
or
mov
ficoms
ret
sti
xor
out
add
sarl
pop
xchg
add
lret
add
mov
sbb
add
push
jp
aas
or
shrl
add
pop
pop
push
ret
sarb
cmp
dec
inc
jl
add
xor
lcall
adc
out
sub
push
xchg
jno
pop
add
fwait
mulb
test
xor
stos
addr16
je
sbb
movsl
xorl
xchg
popa
stos
int
pusha
lcall
cvtdq2ps
lea
cld
popa
dec
clc
movsl
add
shr
pop
mov
add
mov
pop
push
subb
push
or
shlb
sub
lret
cmp
add
cld
neg
xor
xchg
into
rorb
test
mov
sub
nop
shll
lods
mov
cmp
or
mov
inc
dec
loop
popf
bound
add
push
or
add
mov
sub
ret
test
cmp
imul
pop
add
ja
dec
hlt
rorb
stc
daa
rorb
pop
or
add
mov
add
adc
sbb
cmp
lods
rorb
xor
adc
sub
in
ja
lcall
mov
add
cmpsb
outsb
hlt
repnz
push
xchg
mov
sub
xchg
inc
pop
push
push
movsl
stc
add
clc
in
inc
in
add
dec
push
add
pop
pusha
lea
fistps
iret
ds
dec
movb
test
xor
push
mov
mov
add
sub
scas
dec
cmp
cli
popf
xor
add
andl
cmc
dec
fildl
or
add
loop
inc
add
xchg
adc
aad
arpl
and
add
xorb
int
mov
sub
mov
add
rcrb
insl
es
test
xrelease
and
mov
orb
add
fstps
jle
fcompl
roll
xchg
test
mov
jl
add
or
or
pusha
ffreep
insb
add
in
jmp
rolb
vmulps
pop
loopne
jl
add
out
jb
mov
les
pushl
out
pushf
push
add
push
xchg
mov
add
or
push
lds
dec
js
loope
cltd
dec
mov
lahf
mov
add
test
push
test
test
dec
rol
sub
adc
sbbb
stos
jl
sbb
out
lods
mov
pop
add
loopne
pop
add
mov
dec
add
sub
adc
in
aam
in
rcr
lret
sub
add
je
xlat
lea
xor
fwait
or
add
pop
jo
mov
lret
add
pop
or
pop
repnz
cwtl
cltd
add
mov
push
lea
add
test
mov
add
fsubs
jmp
jo
jg
cmp
sahf
orb
adc
sbb
cli
xor
sbb
adc
addb
mov
push
call
nop
xorb
push
pusha
push
outsl
add
jmp
adc
add
sarl
mov
xchg
inc
rclb
mov
adc
lret
sub
mov
and
add
jg
mov
in
sbb
push
cmc
push
xor
add
ficomps
lret
inc
loopne
orl
sbb
mov
rclb
mov
addl
jnp
pop
in
cmp
repz
pop
and
jp
addl
add
dec
lret
jmp
enter
ret
ror
movswl
loope
shrb
mov
add
daa
inc
pop
das
xor
clc
pop
push
xchg
sbb
in
int3
sbb
adc
and
lea
jo
shl
jmp
inc
popf
fsubl
inc
inc
les
and
push
jle
add
stc
sahf
and
xlat
pop
adc
cld
xchg
add
sbbb
inc
cli
mov
test
lahf
sbb
add
jnp
pop
add
push
add
push
or
xlat
add
mov
sub
push
popf
sarb
push
inc
decb
mov
mov
adc
orl
dec
mov
mov
push
inc
cmpsb
mov
add
lea
cmp
pop
or
in
jne
add
push
push
repz
stc
add
sub
add
and
mov
orb
sub
call
rcll
inc
or
dec
cmove
nop
xor
lahf
jno
mov
add
jb
pop
pop
pop
pop
push
push
mov
mov
mov
jmp
add
pop
inc
pop
repz
inc
xorl
inc
xchg
sbb
nop
add
sbb
aaa
add
mov
and
popf
add
pop
pause
and
test
dec
add
sub
inc
inc
xor
int
add
and
adc
sar
into
mov
add
jno
add
push
cs
lds
shrl
jle
add
loop
sub
add
jle
mov
repnz
inc
or
jns
add
test
mov
in
nop
xchg
stos
xor
mov
push
hlt
jne
movsl
add
mov
lea
push
repz
push
adc
or
fsubrs
pop
loopne
paddd
cli
dec
adcl
test
sub
pop
sahf
or
add
xor
hlt
mov
and
and
imul
in
add
clc
add
add
or
je
shlb
add
call
inc
sbb
jne
add
xchg
int3
inc
dec
jmp
out
mov
cmpb
loopne
add
jne
cli
or
nop
outsl
or
icebp
sub
fadds
adc
add
dec
mov
add
pop
jnp
cld
add
add
test
test
jbe
and
movb
pop
adc
ja
aam
addb
or
out
and
sbb
sub
push
and
add
push
xor
adc
adc
fsubp
js
aas
add
pop
lea
pop
xchg
jmp
add
and
push
inc
stos
mov
bound
mov
push
sahf
add
mov
cli
add
or
dec
pushf
testl
ret
stos
push
nop
js
stc
loope
repz
fmul
adc
sub
xchg
add
push
push
sbb
loopne
sahf
popa
seto
lret
add
jmp
test
scas
addb
das
cld
adc
pop
add
lcall
pop
sub
add
xor
adc
sub
add
leave
pop
rcrb
dec
inc
repnz
pop
jo
sbb
bound
add
loopne
inc
jge
pop
pop
push
ds
cmp
jp
xor
push
mov
into
addr16
mov
rol
stos
inc
mov
pop
and
enter
popl
repnz
andl
movlps
out
ds
fwait
add
test
pop
sub
icebp
int
xor
add
imul
mov
pop
sub
jg
mov
pop
rorb
pop
std
sbb
mov
inc
add
push
sti
push
adc
mov
jge
or
pop
subb
repnz
orl
rorb
mov
xchg
lret
scas
pusha
outsb
inc
cld
dec
pop
mov
pusha
outsl
andl
in
shll
add
push
push
pusha
jnp
add
add
adc
aad
mov
loop
jge
fmulp
inc
xchg
rorb
punpckhdq
push
mov
push
hlt
xor
sti
mov
cwtl
and
movl
dec
insl
sub
sub
sbb
pop
adc
stos
jo
lmsw
push
js
or
jle
add
jne
nop
popf
or
jae
mov
add
push
mov
sbb
imul
jl
add
pop
mov
adc
pop
sbb
ficompl
imul
loope
es
mov
cmp
outsb
int
mov
jne
roll
mov
aas
or
xor
hlt
cmp
pop
mov
xchg
out
insb
lret
or
jb
icebp
push
jge
cld
inc
add
add
lods
out
roll
push
inc
ljmp
pushl
inc
xchg
loopne
rcrl
jbe
mov
sub
and
inc
push
sbb
and
loopne
add
out
sbb
add
sbbb
jbe
add
sub
pop
mov
mov
leave
or
lods
ja
add
sbb
add
xor
add
adc
loop
xchg
loope,pt
pushf
int3
sarl
dec
cmpsl
sub
push
shl
xorb
inc
cs
pop
mov
sub
dec
subl
xlat
cmp
xchg
jnp
add
aas
lea
xor
stc
pusha
or
cmp
testb
add
fdiv
fiadds
inc
inc
add
sbb
pop
cwtl
push
add
cmc
dec
movsl
cvttps2pi
mov
inc
and
push
pop
or
addl
je
mov
lea
bound
sub
orb
fnstcw
cld
cwtl
sub
cltd
add
imul
jmp
js
add
mov
add
mov
sub
cs
add
adc
lret
sbb
adc
call
ficoms
fldl
ret
mov
xor
enter
les
stc
sub
mov
or
jp
inc
add
xor
jge
popa
add
mov
scas
add
and
push
fisubs
aaa
push
in
xor
cs
out
add
orb
adc
xlat
inc
xchg
cwtl
out
pop
mov
or
or
jmp
jne
add
fnstcw
mov
pop
add
inc
aam
add
ss
mov
jmp
gs
filds
push
and
pushl
punpckhwd
mov
dec
das
lock
out
xchg
mov
cmpsl
jge
and
add
rolb
xchg
or
hlt
nop
roll
xchg
lahf
faddl
mov
and
and
xchg
mov
sbb
stc
push
dec
adc
sbb
dec
sbb
cs
lret
std
push
in
add
sbb
jbe
add
in
add
clc
adcb
clc
inc
or
sbb
adc
add
out
adc
ljmp
arpl
fisttpl
add
add
fs
mov
pop
pop
inc
add
xor
push
fwait
or
daa
add
xchg
pmulhuw
mov
roll
sub
pop
jge
push
inc
add
popl
lea
aas
in
xchg
xchg
pushf
xor
add
mov
repnz
adc
shrl
add
jmp
shrb
shl
popf
mov
add
jmp
int3
nop
push
imul
add
xor
idivb
pop
mov
fiaddl
aaa
loope
mov
or
cmc
pop
adc
inc
inc
inc
mov
ss
fldl
repz
loop
push
push
orb
jle
jmp
repz
sbb
inc
sbbb
pop
cld
data16
add
roll
push
outsb
dec
mov
add
cld
sub
push
add
jbe
push
pop
roll
mov
push
outsl
mov
cmp
or
cmp
add
shr
sub
jg
add
mov
pop
and
ja
mov
ljmp
andb
pop
ljmp
pop
sub
mov
add
dec
lahf
xchg
mov
rorl
xchg
xchg
cmp
add
mov
test
incl
out
roll
fwait
mov
push
fs
in
mov
mov
pushl
xlat
mov
xor
xchg
cmpb
mov
lods
add
mov
sub
sub
adc
adcb
fwait
es
sbb
ljmp
pop
and
sbb
je
cmp
daa
adc
inc
sti
add
lea
add
xchg
addl
mov
scas
mov
js
loopne
in
add
ret
add
and
movsb
hlt
enter
test
inc
in
or
add
inc
les
ds
test
aad
movaps
inc
or
sahf
cs
popa
jmp
flds
and
pop
je
cmp
pop
lahf
mov
loop
or
add
xchg
jbe
lahf
sti
add
loope
dec
push
cmp
and
jbe
fldl
in
addl
pop
add
cmc
stc
mov
cmp
xorl
fnsave
xchg
sbb
push
xchg
add
lahf
movsb
lock
dec
out
add
out
dec
mov
cmp
add
fnsave
mov
loop
jb
pop
inc
jae
aas
rorl
xlat
test
jbe
addl
or
cmp
add
pop
push
sub
fildl
movsl
mov
aas
ret
add
in
ret
stos
sub
and
and
pop
push
testl
push
sti
jnp
cltd
or
pop
adc
add
add
inc
adc
add
test
mov
mov
je
pop
add
sub
call
call
pop
mov
aad
adc
push
iret
jg
es
outsb
mov
or
cmp
clc
rolb
outsb
sbb
ret
in
cs
add
add
mov
ja
cs
push
mov
loop
test
adc
js
insb
push
push
add
cmp
push
in
add
cmpsb
pop
movb
jmp
jle
add
pop
lds
sbb
add
dec
and
add
mov
xchg
dec
lock
add
test
iret
push
cmpsb
jns
sarl
pop
bound
add
pop
pop
dec
add
clc
enter
insb
add
mov
iret
pop
in
fildll
loopne
and
imul
or
and
sub
in
xchg
sbbl
add
fcomi
pop
xlat
add
mov
popa
dec
inc
cmpsb
jo
inc
sbbl
adc
pusha
or
xor
add
sbb
pop
testb
outsl
mov
in
push
jecxz
pushf
jg
pop
das
push
add
xchg
iret
jmp
add
andb
incl
push
and
add
imul
add
pop
mov
inc
mov
add
sbb
cli
push
pop
push
jecxz
addl
adc
cmpsl
push
ret
in
shlb
add
out
xchg
jns
iret
add
dec
loop
adc
dec
mov
ret
xchg
ja
sarl
cs
pop
add
in
sub
outsl
and
add
mov
lea
push
and
iret
scas
add
aaa
sbb
stos
xor
fistps
dec
jle
jno
push
jbe
cmp
stc
add
es
adc
std
add
push
mov
or
mov
pop
and
inc
add
fwait
lcall
inc
mov
push
dec
clc
dec
add
push
jno
inc
xchg
nop
push
cmp
lcall
mov
fidivl
pop
sahf
ficoml
data16
add
sbb
lea
cmp
sub
xorb
add
dec
jl
cli
sti
xchg
adc
sub
add
outsl
sbb
mov
js
pop
mov
sbb
rolb
push
jmp
rclb
pushf
pop
add
mov
add
ror
mov
aas
xor
subb
test
addl
push
or
pusha
or
rcrl
loopne
sub
mov
push
mov
and
pushf
add
aam
movsb
add
ds
pusha
xor
xchg
pop
ss
lahf
pop
andl
cmc
nop
dec
clc
jl
out
mov
lret
mov
cmp
fidivrl
adcb
push
sbb
mov
add
jp
inc
jmp
loop
orb
je
cmc
out
cli
adc
or
xchg
xor
add
mov
test
cmpl
lock
jne
cmp
fiadds
and
in
or
jmp
fnstenv
negl
pop
fisubrs
movb
pop
add
mov
push
fcoml
cmp
lds
bound
pop
xor
or
add
aas
popf
sub
cmp
es
out
add
idivb
dec
loopne
sub
inc
jl
pusha
rclb
inc
ret
icebp
pop
add
adc
lcall
out
rcrb
shl
add
fmuls
test
add
mov
pushl
add
jbe
pushf
sbb
xchg
add
xor
add
enter
les
jbe
into
pop
fidivs
subb
imul
das
push
jp
testl
sbb
lods
xchg
add
inc
ret
gs
lea
pop
push
sub
mov
cs
lahf
xchg
dec
dec
or
roll
or
xor
pop
aad
pop
fcmovb
ret
push
and
add
enter
cmp
add
addr16
xchg
dec
clc
aaa
add
lret
rclb
add
jae
cwtl
add
cmp
pop
popf
sub
adc
add
call
cmpb
push
sub
add
imul
pop
add
lods
es
cld
mov
xchg
loope
js
subl
in
or
add
inc
add
jmp
jb
add
fiaddl
pop
mov
add
inc
inc
cmp
pop
pusha
sbb
fs
sub
lods
pop
roll
xor
lea
nop
hlt
in
repnz
mov
pop
neg
mov
add
push
inc
and
xor
xorl
mov
add
fiadds
add
mov
ret
jecxz
mov
aam
inc
bsr
add
hlt
add
out
rol
not
inc
popa
test
add
dec
xadd
push
je
rcll
popf
add
pop
scas
pop
rcll
adc
fs
and
in
enter
push
add
mov
xor
mov
or
add
push
jbe
dec
gs
sub
sub
adc
xchg
xchg
pop
jo
dec
mov
mov
push
or
and
int3
lret
mov
fdiv
push
inc
add
inc
test
cmc
add
loopne
inc
mov
dec
shll
ds
and
push
rcr
mov
xor
xor
stos
das
push
shl
mov
mov
inc
ret
or
mov
mov
or
lcall
inc
insl
adc
nop
add
loope
push
adc
repnz
roll
sbbl
arpl
and
fisubrs
add
in
inc
decb
add
rol
movsb
pop
imul
incl
push
xchg
call
je
cmp
mov
fstpt
out
mov
sbb
addb
testb
jb
and
and
mov
shr
xlat
movsb
pushf
sub
add
fcompl
dec
shlb
dec
jle
add
and
mov
daa
loop
es
inc
mov
pop
xchg
movsl
data16
lock
call
add
sub
add
inc
xchg
adc
iret
add
pop
fs
xor
and
push
inc
stos
jge
add
pop
cmc
pop
add
stos
sbb
sbb
add
adcb
stc
incl
jb
xchg
sbb
cmp
add
and
cmpsb
fistl
dec
fdivs
loopne
adc
dec
inc
bound
pop
adc
mov
les
test
sub
mov
jecxz
lea
jae
jge
cli
clc
stos
add
aad
add
call
adc
add
push
lods
jmp
mov
cmc
lea
pop
ss
pop
sub
push
loopne
mov
dec
add
adc
inc
fadd
fildl
adc
mov
movntps
or
sbb
sbb
add
and
pushf
xchg
movsb
adc
add
call
push
pop
es
add
or
add
ffreep
or
push
and
push
cmp
popf
subb
push
push
cld
fsubr
loope
enter
add
test
pop
fadds
mov
add
inc
hlt
call
mov
xor
and
add
imul
shrl
mov
pop
and
hlt
pop
mov
sub
pop
push
pop
cmp
popa
or
shl
adc
add
lea
pushl
icebp
out
add
dec
aas
cmpsl
inc
adc
fiadds
mov
aam
and
ja
xchg
enter
push
push
call
add
pop
or
and
xchg
sbb
fwait
popa
push
dec
and
push
add
out
cmp
add
in
loope
inc
mov
add
lret
outsb
test
sub
pop
mov
add
xor
pusha
test
push
fdiv
push
pop
push
in
leave
inc
jge
dec
wrmsr
push
ljmp
das
add
das
addb
add
add
fnstsw
jge
leave
roll
add
jne
push
xchg
je
push
call
lock
add
push
psubsb
or
fldcw
push
clc
push
in
add
sbb
sub
pop
data16
mov
mov
ja
add
xchg
unpckhps
repz
pop
add
call
lock
es
shll
repnz
rorb
xor
in
mov
sub
call
mov
movsb
or
add
ret
nop
and
out
adc
cwtl
iret
mov
stc
std
add
les
mov
call
popf
in
into
sub
or
pop
pop
adcb
inc
mov
inc
xchg
jae
js
popf
add
loop
loopne
cs
add
xor
pop
mov
std
dec
rorb
leave
sub
add
or
pop
mov
testl
dec
cwtl
push
xchg
adc
movsb
bound
push
mov
ja
add
sti
pop
push
mov
aas
dec
jle
mov
mov
movb
adc
pop
cwtl
lock
pop
dec
fadd
rolb
les
mov
ljmp
add
xchg
ret
stos
insb
add
push
mov
imul
js
xor
push
mov
mov
lcall
and
mov
ljmp
mov
stc
fsubr
or
mov
jae
fadd
sbb
dec
push
mov
add
icebp
cs
and
adc
add
enter
inc
or
add
insb
pop
cmp
mov
mov
clc
orl
dec
cwtl
sbb
loopne
mov
sub
imul
push
pop
stos
in
or
inc
sub
push
pop
out
orb
andb
cmp
adc
sub
add
jmp
adc
add
jns
lcall
idiv
popf
imull
jae
decb
add
jo
popl
leave
aam
nop
push
sub
or
call
and
mov
add
and
fdivrl
rol
add
push
negb
cmpsb
rolb
hlt
push
inc
pop
cld
shr
mov
cmp
add
gs
add
cmp
push
cmp
adc
mov
cmpsb
mov
jg
out
lcall
add
iret
adc
add
shlb
add
pop
aad
enter
xchg
in
inc
xor
lea
fidivs
jb
push
sub
ret
and
lea
pop
pop
out
inc
lcall
sbb
sub
sub
js
out
aad
xor
dec
ljmp
add
cltd
jb
or
call
add
dec
add
sbb
lea
test
loopne
loop
cmc
je
sbb
scas
shll
cmp
xchg
add
cmp
jg
adc
aaa
loope
xor
sbb
inc
mov
mov
sbb
rolb
out
mov
add
aam
add
iret
test
mov
inc
add
jge
add
scas
push
or
je
dec
add
jb
add
jbe
pop
add
sbb
test
dec
mov
addb
mov
lock
push
add
leavew
pop
testb
jae
jmp
scas
cmc
or
cmp
les
add
or
jecxz
add
push
sarb
cltd
ja
cmovbe
or
pop
push
push
sbb
mov
push
call
push
lea
gs
or
lods
or
jle
cmp
cmp
das
ja
mov
incl
jle
jge
jge
adc
sbb
push
inc
dec
imul
fsub
femms
adc
pop
mov
cltd
ja
icebp
in
push
push
jmp
dec
add
ficomps
pop
jo
aas
cwtl
jmp
roll
sti
subb
pop
add
cmp
inc
add
mov
lcall
jge
xchg
mov
sub
mov
mov
pop
xor
cli
movsb
dec
fidivrs
or
push
mov
push
lods
pop
jle
pop
rcrb
jae
test
icebp
xor
lock
jbe
out
add
adcb
js
push
into
mov
add
push
or
add
aam
roll
mov
aaa
mov
add
pusha
fidivs
add
lea
xchg
inc
dec
lock
sub
add
mov
cmp
rcll
test
jne
js
mov
jmp
inc
jb
add
xchg
or
adc
ljmp
xor
and
insb
add
je
push
pushf
pop
adc
mov
or
pop
and
mov
and
jmp
push
add
push
ret
jbe
data16
mov
shr
pop
add
sub
pop
addl
jmp
pushl
punpckhwd
maskmovq
testl
push
jbe
add
enter
rolb
das
test
xchg
mov
inc
add
mov
in
mov
hlt
adc
fildl
test
sarb
stos
add
pop
xchg
or
add
sbb
mov
ljmp
fisubl
sub
inc
add
sub
mov
push
incl
and
stos
xchg
ret
inc
dec
add
add
fidivl
push
mov
enter
mov
dec
jbe
pop
adc
cli
push
and
sbb
mov
enter
jae
sbb
hlt
std
add
je
pop
je
daa
mov
mov
lock
add
adc
icebp
pop
lock
mov
stc
subb
fldcw
sar
dec
xchg
sub
add
clc
push
jmp
bound
adc
ss
cmp
jle
or
in
lret
or
push
bnd
orb
pop
push
fwait
add
mov
and
aam
fbstp
xor
and
dec
orb
mov
add
and
mov
jno
ds
ror
add
cmp
daa
and
pop
lcall
cli
push
mov
out
in
or
jae
cmovne
jl
mov
jae
add
mov
out
push
push
or
add
imul
add
push
rorl
add
lock
sub
sbbl
inc
push
outsl
add
and
daa
add
arpl
cmp
lds
xlat
out
lret
test
inc
pop
js
shrb
dec
dec
pop
lahf
mov
ds
orb
cmp
daa
js
dec
and
or
push
add
test
movsb
pop
mov
dec
test
cmp
sub
mov
in
leave
adc
add
adc
sbb
jp
cmc
or
lret
add
and
xchg
pop
mov
sub
adc
add
sbb
loope
fistl
js
mov
add
jl
in
scas
fsubr
ljmp
mov
lds
and
mov
or
mov
roll
mov
xor
xor
and
lea
dec
sub
sub
sub
iret
nop
mov
add
mov
testl
loopne
mov
add
adc
jmp
scas
add
addr16
loope
dec
pop
pushf
fmull
dec
jp
fwait
push
mov
xchg
add
adc
jle
sub
lret
mov
sbb
jle
loopne
add
push
call
mov
or
lods
fadds
jb
rcll
cvtdq2ps
lahf
jl
mov
push
add
or
pusha
add
adc
or
cmp
scas
push
add
sbb
rcrb
movb
adc
hlt
cmpl
repz
jp
add
push
inc
mov
gs
xor
loope
pop
jle
add
into
adc
sbb
repnz
dec
in
add
jp
cli
cmp
aaa
adc
add
cmpl
call
in
lret
ljmp
add
inc
pop
orb
xchg
outsb
les
cwtl
jecxz
test
jmp
add
xchg
inc
xor
testb
int3
sbb
add
mov
sbb
pop
add
or
push
repz
cwtl
add
sbb
xlat
add
data16
inc
inc
or
in
daa
cvtps2pd
cmp
add
enter
leave
cmp
or
push
pop
push
data16
pop
inc
je
insb
cmp
and
roll
push
xchg
cs
cmp
add
pop
call
cmc
jg
add
jo
cld
jns,pt
dec
lret
ja
jb
add
rclb
push
dec
mov
cld
ds
rclb
xor
adc
jbe
push
or
dec
jmp
pop
xlat
mov
add
shl
gs
in
adc
add
pop
add
sbb
insb
inc
das
lahf
or
jns
add
cld
in
cli
sahf
add
aaa
add
adc
shlb
and
sub
insl
xchg
lret
or
push
add
push
mov
jae
sub
in
mov
icebp
je
leave
rclb
push
test
jmp
add
mov
push
call
lock
push
xor
cmp
mov
dec
push
push
daa
add
ror
nop
imul
std
les
push
sbb
pop
add
mov
stos
push
mov
test
rclb
add
pop
rol
fadds
fiaddl
xor
jns
adc
inc
lahf
add
out
jg
iret
sbb
sar
fnop
mov
lret
pop
jno
push
dec
jg
negb
sbb
pusha
inc
add
mov
jge
push
pop
or
das
add
mov
adc
pop
rcrb
lea
push
outsb
mov
cmp
add
push
sti
add
jo
xchg
pop
dec
stos
dec
loopne
and
push
and
xchg
inc
rclb
xor
test
pop
inc
and
add
loope
push
test
filds
lret
fisubl
cwtl
cmp
mov
add
mov
or
enter
cmpsl
cmp
add
push
dec
icebp
sti
push
push
mov
mov
cwtl
or
pop
roll
lea
ret
add
jle
cmpsl
jmp
xchg
add
fst
xchg
mov
lret
cmp
xor
stc
in
ljmp
fstpl
add
mov
and
scas
lea
les
lret
int3
out
ds
pop
add
rep
add
or
nop
pusha
ret
pop
add
ss
jbe
mov
or
jmp
or
cmp
xchg
gs
dec
lock
mov
fs
cmovnp
add
rcr
popa
sbb
add
xor
adc
mov
fiadds
lods
popf
nop
jb
and
cmp
add
mov
add
mov
test
xchg
pusha
ja
outsl
pop
pusha
mov
push
push
mov
lahf
divl
imul
push
mov
mov
gs
pusha
add
fildl
cwtl
dec
push
aas
bound
mov
inc
lods
jg
ds
adc
lea
sbb
add
or
cltd
out
out
or
fcmovnbe
add
shll
xor
bound
push
xchg
js
and
in
add
mov
shlb
daa
testb
mov
roll
xchg
sub
icebp
js
adc
add
in
and
push
adc
cmp
add
loopne
daa
mov
jle
testl
add
adcb
fcmovbe
push
mov
cmp
adc
repz
pop
ficoms
lock
loope
cli
pop
push
dec
push
test
daa
dec
cmp
adc
sub
push
add
imul
clc
sbb
jge
mov
mov
xchg
rolb
sub
stos
rcr
loop
lds
mov
mov
mov
shrb
dec
add
daa
sub
add
jbe
out
push
xor
add
mov
mov
mov
scas
sbb
dec
mov
lea
pop
lcall
mov
inc
stos
xchg
add
addb
sbb
shld
sbb
and
dec
loop
add
lea
add
and
adc
or
shl
xor
adc
cld
pop
or
call
and
mov
adc
sub
fidivrs
ja
add
bound
pop
add
loopne
or
mov
les
and
dec
lock
inc
add
aam
mov
or
add
psubsw
pop
jg
addl
cmp
or
or
incb
mov
scas
cmp
sub
mov
mov
sti
add
and
mov
or
sbbb
pop
scas
fbld
mov
movl
jl
add
dec
clc
mov
cmp
add
pop
add
pop
mov
pop
jge
add
add
pop
mov
xor
inc
add
out
imul
add
rcrb
xor
orb
pop
sub
jmp
xchg
mov
inc
pusha
add
mov
movb
dec
out
push
ficompl
pop
add
dec
hlt
add
repz
add
and
push
mov
sub
flds
sbb
jp
rorb
add
pop
pushf
loope
inc
outsb
add
or
pop
add
inc
in
mov
lea
ret
test
xchg
shrb
xchg
loopne
add
leave
and
push
push
addl
ret
aas
mov
std
stos
and
cmp
mov
sub
stos
in
add
shlb
mulb
loopne
lock
stos
aas
add
cmpsb
ret
inc
adc
push
push
pop
cltd
loope
mov
seta
xchg
mov
mov
push
add
into
push
ret
jg
mov
in
imull
cmp
add
mov
or
cld
add
jmp
add
outsl
ja
dec
lods
mov
pop
sub
add
fdivl
mov
sahf
in
daa
xlat
jno
add
inc
xchg
pop
loop
xor
inc
ficomps
jg
or
psubsb
jne
add
xor
int
add
pop
fstps
jnp
add
rcr
mov
mov
adc
mov
mov
inc
loop
xchg
add
mov
in
in
dec
inc
pop
shl
fisttpll
add
pop
add
scas
je
cmp
sub
mov
int
xchg
loopne
sbb
leave
pop
jns
divb
mov
out
mulb
jbe
add
push
add
add
xchg
xor
pop
out
cmpsl
daa
cmp
push
jp
add
pop
addb
aaa
and
and
rorb
lock
mov
mov
mov
les
sbb
mov
inc
cli
imul
in
nop
in
mov
mov
cs
mov
movsl
add
mov
aad
or
pop
into
mov
xor
add
cmp
dec
mov
fdivl
add
or
sub
cmovo
add
scas
ja
dec
enter
nop
dec
xor
adc
push
add
je
lock
jl
inc
fnstsw
je
aas
add
sahf
filds
inc
add
xchg
imul
pop
cld
cmp
add
dec
mov
inc
sbb
lods
jb
xchg
mov
add
sub
jo
add
push
pop
mov
clc
call
add
mov
int3
dec
aam
imul
add
cli
add
sbb
pop
push
leave
cltd
and
or
push
nop
adc
cmp
push
add
mov
xor
lods
sbb
pop
xor
inc
and
ljmp
add
popf
pop
sub
cwtl
cmpl
arpl
add
pop
dec
mov
and
out
sbb
sbb
fs
xor
mov
icebp
cmp
xor
sub
aad
inc
ljmp
add
push
xchg
jecxz
or
pop
or
imul
in
filds
pop
mov
add
sub
pop
push
aaa
negb
test
sti
test
cmp
mov
cmp
jle
loopne
push
in
dec
pop
data16
add
fldenv
add
jb
mov
add
fwait
and
add
mov
add
jne
xchg
add
xor
push
je
add
xorb
scas
pop
addl
ret
mov
flds
lock
loop
mov
add
push
adc
inc
cld
fiadds
pusha
push
cmp
sub
add
pop
xchg
cltd
push
jo
sub
int3
fistpll
or
fstl
add
sub
lock
dec
lcall
add
sbbl
pop
xlat
movsb
mov
dec
adc
cmpsb
mov
add
add
mov
subb
int3
push
push
cmp
add
ret
push
daa
jmp
inc
cmpsl
inc
repnz
pop
loop
adc
push
dec
roll
push
sub
sub
cmp
out
sbb
pop
add
mov
outsb
mov
mov
mov
lock
dec
add
adc
roll
push
push
and
punpckhbw
lods
ror
mov
jb
incb
out
adc
lock
imul
mov
cmp
cld
dec
push
out
dec
sbb
loop
push
sbb
scas
pop
and
repnz
adc
enter
sub
push
into
xchg
add
sbb
pop
add
cmp
scas
leave
mov
pop
xchg
push
ja
lea
jge
jae
bound
leave
jo
mov
push
and
mov
jp
add
and
lock
add
mov
inc
or
sub
in
cld
hlt
imull
aaa
cli
pusha
add
mov
and
add
stos
cmpb
in
add
lcall
add
inc
add
jl
gs
push
sarl
adc
out
sbb
out
daa
rcrl
cmp
addl
rcrl
jmp
int
addr16
mov
test
adc
addb
push
add
dec
bound
lock
cmp
push
sub
sar
xor
jle
push
pop
jg
add
mov
add
movsb
mov
dec
push
add
lock
shll
pop
rorb
mov
add
sbb
pop
mov
iret
enter
clc
mov
push
inc
ret
hlt
xor
xchg
add
call
dec
ret
loope
add
cmp
push
lods
pcmpgtw
test
push
jl
add
fiadds
sahf
adcb
cmpl
iret
mov
push
jo
in
test
aaa
movsl
pop
int
mov
or
mov
jne
sbb
aas
sbb
pusha
pop
rcr
les
insb
adc
stos
xchg
test
dec
lret
imul
clc
add
data16
das
sub
mov
adc
add
addr16
stc
or
adc
add
sarl
or
scas
ret
cmpb
daa
mov
testl
add
movd
cmp
push
mov
hlt
cmp
loope
add
sbb
adc
lods
aas
mov
sbb
ret
sbb
inc
fistpll
mov
or
out
pop
add
js
push
icebp
sbb
test
or
fdivrl
xchg
ret
int3
sbb
inc
cwtl
loopne
pop
sub
stos
inc
cmc
and
loopne
cmp
sbb
sbb
push
mov
and
insb
xorl
add
mov
orb
jne
add
pushl
dec
in
mov
lret
add
into
mov
xchg
push
ja
and
add
add
adc
stos
lret
push
jl
xchg
sti
and
xor
in
xor
aam
or
add
rorb
mov
aaa
inc
stos
xor
imul
loopne
or
pop
lods
out
jbe
cmp
lock
fcomps
nop
out
xor
push
mov
addl
xor
adc
nop
add
sbb
and
xchg
inc
fs
test
mov
je
inc
mov
or
cli
add
lods
and
pop
mov
lock
mov
xchg
inc
sbb
in
dec
and
andl
hlt
lea
in
ss
rcrb
or
cltd
push
jge
pop
ja
jbe
int3
out
mov
sbb
jns
sbb
mov
and
or
sub
mov
mov
insb
pop
add
cmp
cmpsl
cld
aas
addl
dec
or
and
repnz
inc
pop
cmp
imul
sti
mov
iret
cmp
add
je
inc
inc
or
push
dec
test
stos
or
adc
add
mov
mov
insb
sbb
pop
idivb
push
mov
cmp
mov
cwtl
aas
cmp
push
dec
sbbl
add
mov
jmp
mov
add
sub
xor
adc
jle
jge
mov
nop
mov
add
cltd
adc
adc
mov
and
addb
dec
dec
add
cmp
mov
inc
lds
sub
and
push
shr
adc
sbb
sbb
and
dec
loopne
jne
sbb
xlat
stc
cmp
jne
pop
pop
push
add
and
cmp
push
cmp
push
add
cmp
lea
add
aam
mov
sbb
and
add
out
add
outsb
je
add
and
jb
outsl
out
fiaddl
xor
xchg
push
inc
sbb
ficomps
inc
out
add
inc
push
and
in
pop
or
jo
in
or
pushf
xchg
cmp
and
adc
cwtl
jo
in
add
or
ljmp
aad
clc
mov
or
test
rolb
mov
adc
xchg
ss
sub
or
movsb
dec
nop
add
es
fs
and
and
enter
add
loopne
call
pop
add
or
jecxz
sub
xor
cmp
push
push
pop
fisubs
push
xchg
cmp
cld
nop
cwtl
mov
mov
sarb
add
and
add
sbb
cmp
inc
inc
add
cmp
mov
mov
push
push
les
cld
inc
add
imul
test
xchg
insb
mov
test
adc
or
out
pop
add
or
loopne
push
pop
add
mov
push
add
inc
sbb
dec
adc
adc
arpl
cmp
pop
out
pop
add
je
add
jbe
and
imul
in
shl
add
fsubl
dec
jmp
in
xchg
enter
inc
push
add
imul
lock
nop
movsb
pop
ja
add
or
xchg
clc
adc
js
cmp
pop
je
mov
adc
in
inc
sub
jnp
mov
push
adc
loopne
lcall
rolb
lea
cmp
add
dec
dec
mov
add
cmp
adc
xchg
add
mov
pop
cmp
mul
add
cmpb
push
int
adc
loopne
inc
adc
dec
add
sub
enter
rorl
mov
movsl
add
xchg
mov
dec
in
push
adc
mov
xchg
inc
add
pusha
xchg
and
shrb
xlat
pop
mov
mov
pushf
add
sbb
or
loop
pop
push
lock
and
pop
imul
inc
pusha
popa
mov
or
mov
jo
cld
xor
fs
clc
pushf
data16
and
aam
lock
add
xor
add
pusha
imul
add
inc
cmp
jae
mov
or
js
xchg
andb
add
add
or
or
adc
adc
lahf
push
enter
in
ret
adc
mov
mov
mov
mov
pop
cmpsb
add
clc
test
and
in
dec
add
jno
icebp
incl
push
sbb
cs
add
pop
mov
nop
mov
sub
movb
in
lds
nop
pushf
aas
and
cmp
adc
pop
movsb
xchg
add
mov
mov
mov
cmp
jo
pop
cs
int3
mov
sbb
lahf
or
add
push
arpl
in
test
add
inc
pop
clc
int
adc
pop
inc
mov
cwtl
xor
or
inc
add
and
xor
adc
jne
add
sar
and
adc
and
cwtl
xchg
ds
xor
push
test
xchg
lea
or
fsubs
sbb
add
or
adc
orb
ret
adc
fsts
repz
mov
pop
jmp
cmp
orb
test
or
pusha
push
push
pushf
mov
rorb
jo
xor
cmpsb
in
and
push
add
jns
clc
xor
dec
fldcw
cmp
add
loopne
inc
lods
js
fcoms
sub
adc
push
mov
loopne
lret
jns
add
adc
mov
push
shl
push
and
xor
dec
dec
inc
add
xor
mov
movsl
dec
sbbl
sub
pusha
xor
push
sarl
adc
adc
mov
xor
dec
or
rorb
cmp
and
insb
pop
push
inc
enter
lock
loopne
mov
push
pop
add
mov
sbb
ret
add
rcll
xchg
and
adc
ret
sbb
add
and
inc
xchg
add
cli
test
enter
stc
lcall
and
ret
ret
add
jl
cwtl
xchg
pop
pop
flds
int
insb
in
dec
je
stc
aam
add
lods
add
xor
add
icebp
loopne
mov
push
or
dec
jo
cltd
xchg
inc
or
loop
hlt
and
push
lds
sbb
inc
adc
fs
jbe
test
daa
mov
imul
lock
mov
jp
jp
mov
push
push
sbb
outsb
push
add
mov
pop
lcall
pusha
rolb
cmpsb
adc
fs
pop
and
jle
mov
scas
jae
and
rcl
xchg
fisubrs
in
or
mov
enter
adc
pop
pop
dec
push
jp
mov
adc
or
adc
and
repnz
adc
and
inc
push
sbb
mov
inc
sbbl
aas
jmp
decb
or
jno
add
jbe
xchg
and
cmovs
sbb
scas
lret
flds
jno
adc
push
jno
subb
aam
outsb
push
add
xchg
or
xchg
or
push
pop
jl
jle
sahf
and
dec
jb
mov
inc
data16
cmp
and
dec
pop
xchg
jo
mov
les
or
popf
add
and
cli
add
dec
adc
dec
and
add
outsb
adcl
cmp
scas
add
ds
xchg
push
jb
into
shl
push
fs
test
insl
inc
inc
xor
clc
inc
jb
imul
jle
jmp
adc
add
dec
inc
jbe
pop
mov
mov
sbb
fldt
and
push
jp
push
jg
inc
jb
jne
inc
in
add
dec
push
sub
and
push
arpl
sbb
push
sub
dec
in
mov
arpl
popa
call
xor
mov
mov
in
cs
pop
and
jp
push
outsb
and
adc
add
jns
fdivr
frstor
jp
push
ret
imul
js
dec
clc
xchg
sbb
pop
add
push
jnp
mov
inc
loop
outsl
inc
movsb
call
ds
sbb
jae
dec
add
dec
jg
mov
popa
outsb
out
xchg
or
add
inc
imul
pop
gs
dec
adc
xchg
xorl
add
xchg
lcall
push
add
fwait
sub
or
int3
aam
dec
push
add
xor
jae
mov
popf
bound
fwait
orb
push
outsb
push
sarl
cltd
dec
xor
enter
outsl
test
pop
sub
add
int
ja
roll
pop
pusha
sbb
push
test
lret
push
sbb
dec
add
mov
out
out
xchg
push
cld
xchg
int3
add
cmp
dec
add
leave
adc
mov
jae
dec
and
bound
imul
outsb
addr16
dec
test
test
outsl
js
dec
imul
je
sbb
mov
clc
xchg
mov
mov
push
fldl
cltd
mov
rolb
in
and
mov
mov
push
je
fwait
push
jo
in
fcmovb
lock
shlb
outsl
xchg
adc
cmp
movsb
jg
clc
or
add
adc
cmp
shr
push
test
pop
sbbb
push
stc
movsb
mov
sbb
into
test
add
push
add
dec
loope
pop
cmc
bound
inc
dec
inc
ljmp
push
xor
jne
add
cwtl
test
or
cltd
clc
push
test
scas
mov
stos
ret
sub
add
out
bound
jno
pop
cmc
xor
xchg
sbb
add
mov
montmul
cmpsb
subb
jns
cmc
dec
pop
add
inc
jnp
out
add
lahf
jno
adc
add
or
cmp
movb
mov
cmp
lock
bound
leave
aam
cmp
sahf
jp
add
sbb
sub
xor
fiadds
lcall
sub
imul
sub
call
push
and
out
add
lcall
addl
outsb
and
add
mov
out
add
xlat
stos
out
xchg
fmull
in
add
test
popa
push
arpl
pop
mov
xor
inc
jno
js
notb
pop
add
mov
cbtw
push
mov
int
push
add
lock
add
mov
out
push
inc
clc
jbe
fistpll
mov
add
push
insb
mov
bound
push
add
lret
cmp
dec
inc
into
xorb
xor
add
push
je
aas
sub
sbb
and
addl
sub
inc
rcll
icebp
push
add
dec
sbb
jns
loopne
sub
add
push
adc
adc
inc
insb
sbb
dec
xor
and
push
xchg
pop
dec
mov
daa
xchg
adc
imul
add
dec
insl
dec
lods
push
jmp
and
aas
sub
and
into
mov
xchg
arpl
mov
add
or
push
push
lret
aam
pop
ds
ss
addr16
mov
add
aad
lock
push
xor
cld
sub
lcall
pop
inc
push
add
fs
push
cld
cmp
cmp
pop
sbb
adc
js
or
add
test
add
cmpsb
pop
mov
jge
adc
and
mov
add
popa
xchg
not
add
stos
mov
jbe
fstpt
clc
out
add
cmpsb
push
aam
dec
add
pop
outsb
in
push
cmp
adc
addr16
or
jg
rorb
jg
loopne
adc
dec
add
or
xor
sub
inc
cmp
xchg
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rorb
ds
add
in
mov
negl
inc
mov
add
xor
adc
add
pop
dec
add
bsr
jecxz
xorl
ja
lret
xor
cmp
adc
jg
les
add
add
popf
sub
jp
pop
nop
jl
mov
xchg
push
mov
aas
xlat
dec
loopne
out
stos
inc
daa
sbb
jo
jnp
adc
lds
sar
pop
add
push
shrl
fldcw
loop
adc
pop
fbstp
repz
push
cmovs
add
add
fsub
and
xor
inc
pop
cmp
jp
shrb
popa
jbe
movsb
js
sbb
cmp
pop
sahf
outsl
push
lea
lahf
xchg
pop
mov
add
sbb
inc
daa
dec
inc
push
sbb
enter
add
xor
rol
add
js
xchg
call
adc
inc
dec
movsb
mov
pop
ret
test
mov
enter
ljmp
add
jbe
js
jp
jl
subb
xor
inc
lahf
dec
pop
push
add
iret
jno
jns
sbb
loope
jmp
fwait
clc
mov
add
xchg
loopne
add
loope
push
cmp
movb
fldcw
inc
lret
xchg
push
push
repnz
iret
call
clc
or
adc
fstps
loope
mov
xchg
cmpsl
addr16
aam
out
repz
cmpl
loope
xor
cmp
push
cmp
xor
jp
adcb
lcall
jbe
jge
mov
jb
call
ljmp
add
or
jp
sub
jle
testl
push
jb
jp
or
jl
lcall
dec
mov
psrld
loop
ljmp
lock
push
xchg
popa
sub
fmul
inc
jb
push
push
out
and
in
rorl
repnz
dec
xchg
lcall
add
add
xor
pop
and
jmp
cmp
add
cs
out
nop
push
lock
clc
nop
cld
cwtl
add
mov
mov
fnop
loopne
repnz
leave
or
stc
clc
and
or
adc
sbb
fcmovb
adc
jmp
xchg
push
adc
repnz
out
push
pop
stc
pusha
dec
push
cmp
mov
cwtl
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
dec
lock
std
shlb
cmp
sbb
in
and
cmp
inc
nop
dec
mov
pop
push
mov
jmp
test
in
xchg
add
rclb
clc
and
pop
sbb
ret
sarl
shlb
push
jecxz
repz
dec
dec
mov
push
add
imul
stc
mov
lods
jecxz
xchg
jo
jae
mov
xor
add
or
js
adc
jl
jle
leave
xor
call
aas
subb
add
je
xchg
js
add
in
push
out
rol
pusha
int3
repnz
xor
adc
adc
loope
jmp
and
sub
inc
andb
mov
je
js
jl
add
rorl
aas
fcmovnb
aas
enter
shr
dec
mov
add
xor
js
add
leave
sbb
and
and
sbb
sub
into
cld
xor
out
dec
cmp
cmp
js
jl
adcb
movsb
sahf
les
int3
lahf
rcrb
aam
fcomps
in
call
aaa
jp
jp
jp
add
lock
cmp
cmp
and
call
jl
test
mov
xchg
dec
fs
repz
int3
xchg
aam
pop
fsubl
in
in
dec
fs
clc
add
cmp
and
sub
cmp
addr16
sbb
out
movsl
daa
std
pop
cmpl
fisttpl
fnstsw
pushf
jle
jle
jle
dec
fdiv
aas
in
call
aas
hlt
aas
clc
add
out
pop
cmp
xor
inc
cmp
inc
test
dec
cld
pusha
push
sti
pop
xchg
ret
jo
into
pushf
lret
subb
or
mov
or
adc
add
or
or
fsts
sub
sbb
pop
in
out
jmp
xchg
cwtl
insb
repz
test
mov
mov
leave
xchg
mov
inc
enter
fdivl
mov
or
mov
iret
adc
prefetcht0
and
and
inc
testb
rclb
arpl
je
js
jl
xor
in
mov
fadd
jnp
fs
sbb
and
and
sub
xorl
xor
dec
mov
mov
jbe
js
jp
jl
add
ret
add
add
jb
je
stos
jbe
loopne
mov
add
dec
cmp
jle
outsb
xor
out
xor
cli
mov
inc
add
push
in
call
lock
hlt
sbb
es
sub
pusha
xor
and
subl
inc
inc
xorb
add
mov
aad
out
inc
push
or
mov
mov
add
jb
popf
cli
add
nop
sbb
xor
loope
lcall
je
jbe
js
add
jl
jle
xchg
frstor
jmp
repz
repz
lock
adc
add
xor
sbb
pop
add
aaa
leave
dec
pop
push
inc
ja
mov
sub
cmp
add
and
jb
cmp
mov
push
mull
insb
pop
inc
mov
cli
mov
rcr
je
shr
add
out
and
sub
aaa
add
mov
jle
push
daa
add
xchg
movsl
add
and
adc
cmp
jecxz
cmc
loopne
add
push
pushf
or
stos
int3
mov
or
add
mov
push
cwtl
je
repnz
xor
xchg
xor
sbb
add
mov
sbb
in
call
loopne
jl
jle
dec
sti
cmp
bswap
push
mov
shlb
cmp
popf
imul
pop
rclb
cmp
sub
add
addr16
adcl
add
in
pushf
out
push
sti
pop
and
push
push
iret
push
pcmpgtb
dec
jl
pop
lahf
dec
test
jecxz
add
sub
xchg
cmp
nopl
mov
push
add
add
jno
andl
add
repz
lcall
add
and
or
cmp
imul
jl
addl
mov
daa
movsb
inc
stos
addr16
aad
faddp
ljmp
xor
or
and
adc
gs
ret
ja
arpl
sbb
dec
popa
mov
iret
scas
maskmovq
testl
or
cmpsb
dec
and
inc
mov
or
cmpsw
loope
ret
rcr
push
sbb
daa
dec
inc
add
jnp
mov
inc
push
mov
inc
cli
arpl
roll
pop
fldenv
jnp
mov
aas
push
outsb
cmp
test
bound
xchg
inc
les
daa
sub
dec
add
es
pop
jle
leave
inc
rorb
cli
lock
push
add
pop
and
ds
add
insb
dec
je
ret
cmp
lods
sbb
mov
movsl
cs
rol
add
fdiv
fmul
and
xchg
jmp
out
cmp
add
adc
rorb
aas
jb
je
add
dec
dec
sub
out
test
pusha
xchg
pop
xchg
subb
ljmp
nop
mov
mov
mov
lahf
mov
movsb
inc
shlb
mov
dec
pop
or
or
inc
adc
sbb
xchg
lret
cmp
cmp
inc
jae
jno
pop
lahf
pusha
lahf
push
js
or
mov
nop
clc
cwtl
repnz
pushf
rcr
adcb
pop
mov
clts
rol
aas
jns
pop
andl
xchg
mov
push
aam
lock
mov
pusha
add
add
shr
icebp
mov
sbb
pusha
mov
arpl
rolb
es
xchg
add
leave
pop
dec
aaa
xchg
daa
add
test
mov
xor
mov
daa
push
add
test
stc
dec
pop
sbb
aas
jae
jge
xchg
movsl
pop
scas
xchg
rol
jecxz
jmp
cmc
sub
push
mov
or
test
add
cmp
into
dec
jl
add
pop
cmp
cmp
scas
add
fcmovne
test
xchg
xor
jo
repz
pushf
mov
dec
add
test
and
and
or
dec
lcall
pop
cmp
add
loopne
mov
lret
or
sub
jb
sbb
cmp
and
xchg
fnstenv
repnz
xor
lock
add
hlt
clc
inc
xchg
les
jbe
js
jp
adc
add
and
iret
ret
fsubr
pop
faddl
unpckhps
call
enter
stc
out
fadds
xor
ret
mov
jl
fwait
xor
popf
cmp
jbe
stos
xor
inc
call
in
ja
add
push
pop
in
push
clc
add
cmp
cmp
daa
add
nop
sti
loope
jmp
stc
ja
mov
daa
push
cwtl
out
dec
int3
mov
leave
aam
lret
fsubrl
int
in
mov
mov
or
adc
lock
sbb
and
sub
test
out
shr
in
mov
jmp
mov
cmpsb
jle
mov
mov
mov
out
mov
mov
subb
push
shl
das
xor
bound
pop
sbb
jge
sub
xchg
movsl
pop
push
mov
xchg
mov
sbbb
test
lock
cmp
or
inc
add
mov
ret
cmp
ss
mov
add
xchg
mov
jno
add
dec
in
loopne
popa
push
push
hlt
jae
xchg
pop
xchg
ret
add
les
mov
in
call
pop
enter
lret
add
push
enter
adc
rorb
leave
mov
add
mov
push
aas
clc
add
sub
pmulhuw
pop
enter
xchg
cld
xor
fmuls
ficompl
fmul
add
and
pop
sbb
arpl
sub
gs
mov
xorb
add
imul
push
inc
xor
sbb
mov
and
dec
push
push
pop
pop
ret
lret
mov
xchg
jecxz
xchg
pop
add
mov
leave
mov
loopne
pop
add
fmulp
jmp
arpl
xchg
jp
pop
mov
add
jle
mov
add
sub
es
inc
enter
xchg
sbb
fadd
and
fiaddl
iret
stos
mov
add
xchg
sub
out
adc
js
mov
and
mov
ss
jne
add
fldt
add
daa
sub
outsb
fsubr
xchg
add
lock
insb
ss
pushf
pop
sbb
add
mov
dec
xor
pop
sbb
and
xchg
das
faddl
fnstsw
pop
scas
jle
sti
clc
add
mov
loope
jmp
fists
dec
pop
pop
mov
cmp
push
std
je
adc
dec
xor
js
xor
mov
push
add
lcall
out
ja
mov
mov
je
ljmp
xchg
xor
popa
xchg
gs
sub
sub
jp
add
addb
mov
and
jp
xorb
add
ds
test
push
add
cmp
mov
aaa
sar
mov
xor
pusha
add
test
pop
xor
mov
loope
jmp
cmpl
xchg
inc
cmp
add
cmp
bound
pop
xor
mov
jecxz
add
cmp
cmp
mov
pop
ja
dec
shll
loope
lds
hlt
add
daa
jl
inc
andb
aad
inc
ss
adc
jl
loopne
mov
jne
push
push
cld
adc
rcrb
sbb
fstps
in
jecxz
outsl
xor
jae
sti
sbb
xor
add
rcrl
add
xchg
fisttpl
add
jb,pn
aas
dec
push
and
aaa
adc
mov
ret
dec
rcrl
add
ja
out
xchg
sbb
cmp
iret
popf
sbb
add
lock
xchg
pop
ljmp
mov
js
inc
push
dec
mov
push
cwtl
and
add
ficomps
repnz
lock
jle
and
xor
bound
sub
cmp
add
cli
lcall
popf
sub
mov
add
cmp
mov
testb
fprem
dec
nop
pop
call
popl
out
in
mov
push
jno
leave
xor
hlt
dec
cmp
cmp
and
push
sbb
and
pop
addb
or
add
add
pusha
xor
inc
pop
xor
lret
orl
xchg
add
cmp
inc
lahf
add
ds
pop
xchg
call
ss
xchg
cmp
test
lret
loopne
getsec
sub
in
pop
test
dec
cmp
add
cmpsb
xchg
std
loope
and
das
pop
pop
fisttpll
insl
add
adc
sub
add
cmp
xchg
negl
xorb
dec
or
roll
jnp
xorb
mov
out
jge
loopne
cmp
add
sub
clts
xor
xchg
xor
mov
lret
pop
lds
sub
pop
scas
and
cmp
mov
cmp
clc
loop
inc
jp
sbb
cmp
es
add
mov
jne
jge
in
mov
add
xchg
push
dec
add
dec
sarb
ret
divps
out
xchg
pusha
add
inc
lods
xor
or
xchg
cwtl
nop
mov
subl
loopne
mov
test
je
sbb
xor
in
inc
and
es
xchg
push
sbbb
and
sbb
loopne
sbb
and
fisubrl
cmpsl
add
mov
iret
es
xorl
adcl
dec
xor
add
movsl
jp
test
int3
jno
fbstp
fadds
push
cmp
push
add
xor
mov
inc
cwtl
xor
jns
cmp
push
or
xor
ffree
es
ss
add
aaa
xchg
cmp
jne
enter
cmp
and
in
adc
test
inc
dec
xchg
push
sti
dec
push
lods
aad
test
nop
add
loopne
pushf
dec
mov
scas
add
mov
loope
pop
and
xor
xchg
add
dec
sbb
fsubs
add
sbb
xor
xchg
dec
sub
pop
icebp
add
popa
int3
mov
out
imul
mov
pop
in
popl
sub
lock
add
adc
das
addl
rcll
adc
aam
adc
mov
or
add
test
add
es
lahf
cli
add
mov
mov
xor
incb
cmp
mov
pop
mov
testb
outsb
dec
xchg
sbbb
ds
out
out
add
or
xor
cmovl
outsb
add
je
cs
mov
xchg
sub
lds
scas
adc
outsl
lock
in
cld
daa
cmp
pop
popf
cmpb
cmp
push
fsub
and
jne
add
mov
ds
push
popa
enter
cmp
push
xor
add
dec
add
pop
iret
pop
packsswb
loopew
outsl
sub
lahf
jg
adcl
mov
clc
mov
cld
frndint
jmp
xchg
icebp
dec
outsb
or
sbb
dec
jmp
jle
test
lahf
das
roll
jecxz
out
jmp
out
push
add
mov
adc
xor
xchg
and
add
lahf
cld
pop
add
inc
inc
xchg
add
jecxz
repnz
xor
xor
add
push
mov
out
orl
or
add
loope
jmp
aas
sub
cld
stc
cmp
jno
test
rcrl
pshufw
inc
add
add
xchg
or
add
and
inc
ret
outsb
roll
lock
loope
mov
mov
roll
test
repnz
push
jb
ss
inc
or
imul
cli
sbb
je
pop
das
loopne
jp
add
cli
mov
sub
loope
loopne
mov
push
xor
mov
mov
ret
bound
pop
dec
xchg
push
subl
jb
je
add
je
push
mov
add
sar
in
add
fdivl
rcll
push
add
daa
cmp
pop
dec
xor
push
mov
mov
push
addl
add
hlt
int
loopne
xor
add
daa
loope
sub
das
sub
test
inc
jns
add
push
jo
jle
enter
ja
lods
xchg
xchg
sub
movsb
and
clc
mov
or
cmp
inc
mov
add
lds
push
bound
cli
mov
into
jbe
add
ret
jns
add
jp
mov
add
cmp
add
inc
add
in
pop
add
xlat
push
call
mov
enter
or
mov
mov
je
jbe
pop
mov
pop
inc
cmp
add
add
out
and
cwtl
jo
sbb
mov
rclb
cmp
dec
dec
mov
pusha
and
call
adc
loopne
jb
test
divb
mov
pop
inc
add
insb
jo
jle
pop
jae
add
sti
daa
add
xchg
and
rorl
pop
cwtl
cmp
aam
add
insl
seto
rcrl
fstl
test
xor
in
lahf
add
sarb
aas
push
sub
inc
mov
movsb
xor
cmp
mov
fidivrl
stc
loopne
jb
dec
mov
add
sbbb
je
add
pop
outsl
add
loop
ret
aam
pop
cmc
dec
in
rcrl
out
jecxz
lock
or
push
addr16
roll
rcll
out
sbb
loopne
adc
dec
add
pop
jbe
push
add
jl
popf
sahf
add
push
iret
mov
in
add
out
in
ret
add
rcrb
in
call
mov
adc
pop
mov
jp
xchg
dec
imul
push
fmull
inc
add
es
add
jbe
cmpsl
xor
xor
push
dec
sub
sahf
out
in
jl
add
mov
test
shr
pop
inc
pop
std
add
sti
cmpsb
mov
push
fcoms
pop
jae
sarb
ficompl
xchg
ret
pop
jmp
and
stc
sub
add
add
push
xor
popf
adc
jne
or
hlt
or
cmp
jg
call
xchg
mov
in
jp
scas
mov
add
dec
lret
cmpb
js
pop
rol
inc
pushf
pop
je
add
popf
addl
leave
inc
js
in
push
cmp
outsl
sub
dec
setb
movsb
mov
mov
mov
cmp
pop
sub
mov
xchg
add
aam
adc
ret
mov
mov
loope
in
add
dec
or
and
adc
xor
insb
jns
pop
jp
xchg
dec
mov
aaa
in
add
push
in
arpl
jmp
or
imul
nop
cs
and
and
xlat
or
adc
aam
add
or
hlt
mov
jmp
add
jmp
adc
push
push
jle
and
cmp
mov
fimuls
push
or
leave
bound
hlt
jnp
and
movsl
add
cmp
cmp
mov
out
mov
jo
or
adc
xor
rol
adc
add
sbb
adc
add
adcl
pushf
inc
and
dec
adc
fwait
daa
add
out
in
rorb
cli
adc
mov
mov
shr
je
xchg
adc
loopne
nop
add
in
popa
sbb
repz
and
dec
and
add
or
nop
adc
daa
push
push
dec
lock
lahf
xchg
outsb
mov
jg
add
roll
mov
sbb
orl
xchg
popa
add
mov
testb
cld
push
clc
mov
sbb
sahf
flds
add
cmp
rolb
jbe
pop
jmp
clc
into
les
dec
loope,pn
mov
fcmovnbe
lods
mov
push
cmpb
cmpsl
push
push
inc
in
inc
das
add
loopne
frstor
clc
add
lods
add
test
add
jae
bound
jb
shrl
in
repnz
xor
add
add
or
push
stc
push
cs
into
pop
rorb
popa
mov
sbb
cmp
xchg
and
add
mov
add
cmp
cmp
int3
je
lock
adc
mov
xor
insb
loope
push
test
nop
or
sub
test
or
cmpsb
cmp
out
pop
fisttpl
add
sub
inc
inc
add
adc
popa
ret
sahf
sbb
mov
mov
insb
pushf
orb
or
cld
std
jbe
mov
xor
xor
dec
into
mov
shlb
call
xor
xor
ja
dec
jle
xchg
push
test
ret
loope
loope
cmp
push
js
cmp
mov
loopne
pop
xchg
xchg
add
cltd
mov
add
daa
jne
lods
add
mov
test
pusha
scas
lret
lock
mov
std
mov
arpl
xor
daa
loope
or
jle
sbb
add
scas
cmpsb
rcrb
addl
iret
mov
js
je
pop
or
push
dec
sub
dec
cmpsl
movsb
sbb
xchg
xchg
cli
loop
jo
adcl
pop
fs
rolb
add
add
add
rorb
push
adc
dec
cmp
mov
pop
int3
cmpsl
in
les
xchg
dec
mov
cwtl
lret
stc
fadds
je
idivl
add
mov
mov
add
ret
enter
xor
adc
push
cltd
hlt
lods
mov
mov
mov
adcl
sbb
or
cmp
ljmp
incl
daa
sub
in
mov
lret
mov
cmp
add
pop
pop
movsb
and
cmp
push
lcall
rolb
push
lock
fwait
add
rol
out
mov
cmp
and
pop
inc
js
pop
add
xor
imul
add
pop
test
stos
cltd
push
dec
push
add
leave
aas
fmul
out
add
les
adc
test
clc
das
add
xchg
pop
mov
orl
mov
add
xor
xchg
sahf
mov
jo
rorb
js
lock
ret
shrb
cwtl
sub
hlt
dec
add
xchg
dec
adc
cmc
cmp
add
sbb
cmp
lret
lahf
jmp
add
or
imul
pop
loopne
mov
lods
leave
mov
sbb
dec
ss
sarb
dec
sahf
stc
mov
xchg
lret
dec
dec
mov
xor
sar
and
adc
inc
cmp
cs
mov
mov
sahf
ficoms
mov
loopne
mov
adc
pop
add
cmp
adc
iret
cmp
add
mov
push
push
adcb
lds
xorl
imul
ret
add
lds
cmpsb
jnp
pmulhw
clc
jo
mov
and
add
sub
pop
adcb
add
shlb
mov
adc
push
jecxz
repnz
test
jmp
jl
push
cmpsl
mov
lret
rcl
cli
jnp
cs
add
lahf
xorb
mov
decl
shlb
roll
nop/reserved
imul
lock
frndint
loop
in
push
mov
fcmovbe
js
dec
add
mov
fldl
push
je
sbb
addl
jge
hlt
push
loopne
enter
jle
iret
pop
flds
in
daa
cmp
xor
pop
jp
or
mov
add
cmc
ret
sahf
jo
es
xor
push
inc
mov
out
jg
js
mov
ret
add
out
das
stc
xchg
or
push
sub
fcmovnu
push
add
xchg
xchg
dec
inc
mov
jae
loop
insb
xchg
scas
loopne
add
aam
pushf
add
shlb
xchg
add
push
enter
pop
cli
cs
cmp
adc
lahf
add
scas
fnstenv
mov
cli
sahf
add
push
dec
xchg
add
je
scas
add
mov
add
mov
or
dec
subb
fcoml
cmp
aas
lea
dec
loopne
add
mov
mov
or
insb
ss
push
cmp
test
mov
add
ret
bound
push
lahf
jb
add
and
mov
push
jle
pop
ficompl
add
shll
cmp
add
inc
shlb
sub
hlt
mov
push
push
fsubs
loopne
push
mov
call
and
pop
mov
inc
lds
add
mov
push
xchg
dec
dec
fcoms
add
clc
hlt
add
clc
jae
ja
pop
add
movsl
lret
nop
mov
add
sbb
sbb
sbbb
pusha
push
les
jo
outsb
xor
shr
dec
je
pop
aam
xchg
mov
add
jge
dec
negb
and
in
stc
lock
mov
lret
add
pop
ljmp
sub
add
in
loopne
je
ss
movsb
in
shlb
mov
int3
and
in
cli
push
jge
pop
push
add
pop
mov
mov
push
out
adc
in
cld
int3
add
push
mov
loopne
mov
push
xchg
test
in
leave
lock
clc
dec
add
sbb
or
jb
sbb
inc
sub
aas
xor
cmp
pop
inc
push
daa
dec
inc
push
sbb
stc
pop
sbbb
aas
mov
cs
and
mov
mov
mov
mov
stos
or
mov
hlt
pop
add
and
stos
dec
add
hlt
cli
les
cmp
sub
inc
das
dec
rcrl
push
xor
sub
shll
fmull
dec
or
jecxz
and
repnz
add
mov
shlb
cli
jle
subb
cmp
add
cmp
cmp
adc
inc
add
icebp
sbb
and
lret
add
push
cvttps2pi
pop
iret
pop
dec
pusha
shl
xlat
jle
xchg
jnp
add
cmp
mov
lods
add
pop
mov
aas
mov
sbbb
push
loop
lock
cmp
mov
fs
add
loop
hlt
dec
pop
and
add
lods
cmpb
fs
push
add
jo
movsl
add
nop
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
outsl
inc
stos
pushf
ss
push
cmp
xchg
push
call
enter
lock
sbb
movsb
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
or
add
sbb
adc
adc
call
orb
push
and
cmpsb
sub
jo
lods
add
loopne
popf
add
cwtl
or
or
je
or
xchg
rolb
cmp
test
inc
dec
mov
push
xchg
push
cwtl
cltd
push
shr
add
push
sub
popf
mov
adc
repnz
sub
xor
test
push
shlb
push
xlat
adc
push
mov
pusha
mov
aas
xor
loopne
add
je
js
lods
cmp
mov
jmp
jmp
sub
addl
ret
add
filds
inc
loopne
pop
pop
pop
stos
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
rorb
shll
cltd
lods
inc
add
shr
repnz
xor
add
stos
push
pop
add
subb
jecxz
jg
add
cli
sbb
and
out
add
sahf
sub
mov
bound
repnz
pusha
or
dec
adc
jno
push
push
jge
ret
in
add
xchg
jne
push
push
add
and
mov
inc
add
push
int3
repz
add
push
sbb
sbb
jle
lret
mov
or
add
inc
xorb
add
fiaddl
push
inc
sahf
add
add
call
jne
and
add
sub
xor
add
inc
cltd
dec
cmp
fdivrl
lret
mov
and
pop
rcll
rorb
add
add
sbb
add
aam
and
jmp
push
inc
movsb
jbe
add
sub
xorl
scas
cld
push
in
dec
call
adc
f2xm1
and
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
gs
pop
arpl
mov
push
roll
fwait
push
mov
add
jge
mov
jb
mov
xchg
les
pop
push
sbb
mov
sbb
sub
inc
xchg
sbb
pop
xor
jo
add
imul
or
orb
iret
mov
cmp
inc
std
ret
add
cld
sahf
dec
jmp
scas
pop
cmpb
pop
sub
shlb
pop
lods
push
inc
push
and
or
out
clc
repz
xorb
in
add
or
adc
movsb
dec
rolb
outsl
insl
clc
mov
inc
add
add
mov
sbb
cmp
pop
jge
and
bound
rolb
push
jbe
nop
int
jno
mov
inc
xchg
add
cmp
test
pusha
xchg
add
aad
push
les
add
cmc
leave
mov
lret
pop
js
mov
sub
popl
xorb
jnp
add
jg
jo
mov
pop
pop
repnz
outsl
xor
setle
adc
shll
mov
fstpt
inc
addl
dec
mov
cwtl
fisttpl
or
dec
test
cmp
sub
or
int
push
adc
stc
pusha
and
into
jmp
push
sub
add
jge
ljmp
roll
test
std
ficoml
add
repz
add
popf
cmp
daa
aas
test
lret
orb
xchg
and
enter
aad
add
ret
xchg
sub
jmp
mov
fcoml
mov
mov
out
addr16
add
cwtl
fdivrl
add
mov
lods
subb
add
sahf
sub
and
ficompl
pop
pop
test
mov
add
sub
call
sbb
popf
jbe
mov
ss
add
sub
jnp
adc
xchg
add
imul
add
mov
aas
mov
adc
sahf
or
sub
inc
and
inc
add
ret
jle
cmp
cmp
add
adc
roll
add
inc
add
and
inc
daa
jne
lock
sahf
pop
movsl
or
add
and
sti
fidivs
or
sbb
je
fdivrl
stos
mov
jo
rolb
roll
ja
cmp
jno
xor
cmp
jmp
add
mov
repnz
mov
std
ret
mov
loop
lcall
sbb
imul
cmp
aas
ja
add
lea
popa
add
decb
imul
orb
pop
cmp
out
aas
xchg
in
cmc
pop
add
ss
nop
shlb
add
stos
mov
or
add
dec
add
add
lds
outsl
mov
out
xlat
add
out
nop
fldl
pop
push
pop
or
movaps
int3
out
adcb
or
lret
xorb
stc
cmpsb
dec
mov
xor
in
dec
mov
xor
xor
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
add
mov
ljmp
mov
push
mov
imull
cmc
rep
pop
jmp
dec
shl
test
mov
lods
xor
push
jge
xor
push
add
or
inc
sbb
clc
jg
add
rcll
jge
add
add
adc
mov
sbb
incb
mov
cld
popa
lock
sbb
and
sysret
imul
cmp
dec
mov
inc
je
popa
out
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
pop
ret
push
ja
jo
imul
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
add
rorb
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
js
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
dec
xchg
dec
dec
cmp
dec
mov
aad
jnp
jp
hlt
mov
outsl
sub
pop
imul
ret
in
sub
jne
mov
sti
lods
movsl
mov
cmp
loope
std
lcall
cmp
sub
and
add
adc
adc
insl
lods
push
bound
lods
dec
in
pop
inc
es
out
mov
xor
sub
mov
mov
xchg
sbbl
mov
fucomip
inc
jns
leave
in
out
sub
push
xchg
notb
mov
pop
or
sbb
in
pop
cltd
std
xchg
inc
push
add
sahf
scas
clc
subl
sub
pop
mov
xchg
or
testb
xlat
das
dec
aam
sbb
mov
in
or
sbb
nop
pop
les
or
std
jmp
loop
xchg
pop
repnz
pop
push
pushf
jl
outsb
inc
dec
mov
incb
std
fwait
out
gs
mov
xchg
lret
pushf
sbb
out
mov
pop
or
xor
mov
jmp
popl
dec
subb
negb
adc
mov
imul
pop
push
lret
mov
mov
ret
cs
sbb
cmpsl
adc
outsl
push
pop
xor
cmp
jg
push
jb
inc
mov
ljmp
mov
xor
sub
imul
mov
js
sbb
dec
pop
movsb
add
sub
xlat
or
mov
push
std
jne
push
xor
jbe
stos
ret
dec
push
int3
data16
jp
sbb
inc
data16
sub
and
sahf
or
jbe
in
push
pop
inc
out
sahf
fmul
sub
jg
pop
test
and
pushf
and
dec
pushf
or
or
or
xchg
notb
rclb
or
pop
mov
push
cwtl
shll
mov
test
arpl
ja
pop
sahf
add
mov
or
test
sbb
test
ds
jns
inc
outsl
push
push
cmp
std
clc
mov
cmc
out
pop
push
es
jge
inc
mov
ja
jae
stc
fidivs
jne
fcmovnu
lcall
sbb
daa
test
xchg
dec
mov
jb
incb
stos
or
ljmp
mov
push
pop
jl
xor
call
fidivs
inc
stc
popa
outsl
sub
or
jp
xor
iret
ret
xchg
in
sub
lea
and
fsubp
stos
movsb
stos
mov
mov
in
ret
scas
inc
icebp
pop
or
pop
mov
mov
and
mov
test
push
inc
add
fiaddl
aad
outsl
mov
lret
cmp
inc
imul
imul
out
jb
sbb
push
pop
or
repnz
add
repz
jb
es
push
pusha
popf
loopne
lods
or
mov
test
xor
js
test
sub
lret
xchg
icebp
add
sub
cld
adc
cmp
aad
dec
sbb
or
jae
imul
mov
out
push
mov
add
cltd
mulb
cmp
pop
mov
out
and
rorl
test
popa
jb
out
cmp
xchg
jle
inc
rcr
push
jae
cmp
pop
leave
mov
ljmp
stos
lret
cmp
push
fistpl
test
je
call
xchg
shlb
xor
daa
mov
add
cli
and
xchg
xchg
loope
stc
xchg
dec
repnz
sub
scas
or
xchg
push
pop
push
ss
push
repz
jp
scas
mov
sarl
pop
mov
pop
insl
xor
mov
jbe
jl
in
fcompl
and
cwtl
pop
rorb
mov
ja
jl
add
popf
gs
je
cmp
loope
data16
push
ja
add
sub
aad
cmp
rcl
arpl
stc
clc
add
mov
enter
push
jbe
stos
add
sub
dec
pop
jno
inc
mov
xchg
testl
enter
mov
cmp
sub
inc
xor
xchg
jmp
data16
mov
mov
ljmp
or
jle
bound
push
xor
sbb
lea
pop
or
scas
pop
test
mov
fistl
repnz
fcmove
leave
fcmovne
stos
out
mov
subl
sbb
adc
imul
fdivs
in
mov
fidivs
fmul
sub
dec
fisubs
iret
cmpsb
test
and
stc
jp
cmpb
adc
adc
fwait
inc
inc
and
adcl
mov
pushf
and
movb
push
jo
xor
mov
cwtl
stos
push
or
scas
mov
mov
xchg
sbb
push
loopne
xor
mov
xor
pushf
out
inc
xor
movsl
stos
add
fisttps
adc
orl
fisubl
iret
loope
icebp
mov
xor
bnd
push
dec
push
daa
movl
shrl
into
shll
add
dec
aaa
test
dec
data16
fiadds
jg
out
push
test
sbb
pop
in
rorb
jno
xchg
adc
xor
xchg
into
ss
add
jmp
rcrl
sbb
fcmove
add
or
or
sbb
das
popa
pop
xchg
int3
and
stos
xlat
das
insl
repz
jae
jns
and
jb
leave
dec
insl
sub
insl
mov
adc
mov
mov
fsubl
repnz
xlat
add
jne
leave
fwait
push
or
pop
leave
pop
mov
fimull
hlt
push
cmpsl
jge
dec
pop
mov
daa
cmp
cmc
xchg
mov
inc
gs
es
aad
fstl
insb
push
jae
mov
out
int3
mov
and
daa
xchg
int3
gs
jnp
adc
movsb
push
sub
aaa
pop
pop
mov
jno
cmp
repnz
shlb
xchg
dec
dec
adc
push
mov
jp
pop
loop
jb
rclb
xor
popa
jo
adc
cwtl
sbb
xor
xor
loope
sbb
pop
cmp
cmp
adc
add
lock
xchg
popf
clc
mov
mov
loopne
mov
repz
int
sbb
pop
outsb
dec
stc
push
fldcw
daa
inc
mov
pop
idiv
mov
mov
sbb
fsubr
cmp
repz
stos
fmuls
dec
inc
ljmp
push
push
out
es
lock
add
call
xchg
test
xor
push
mov
pop
ret
mov
loop
jg
jae
xor
cmpsl
sub
dec
mov
cmp
push
out
jnp
cli
inc
nop
daa
cmp
sarl
insb
inc
ja
out
dec
cld
adc
xchg
decl
mov
lahf
add
xchg
jae
mov
and
adc
int3
jo
push
jnp
xor
cmc
push
je
inc
mov
dec
ja
repnz
lods
push
dec
dec
shl
ss
and
and
inc
sub
ja
pop
adc
jecxz
xchg
xchg
int3
and
and
lret
mov
mov
jno
pop
lea
cld
cltd
sub
jmp
outsl
test
xchg
pop
sbb
xlat
xchg
out
jge
dec
jne
xor
js
cmp
and
movsb
push
pop
outsl
bound
push
xor
jmp
aas
loop
testb
popa
mov
cmc
jmp
adc
push
lea
sub
jle
pop
lret
test
dec
mov
pushf
dec
sbb
cmp
stc
inc
rcll
mov
jb
ss
popf
in
jo
int
xrelease
ds
sbb
xor
int
adc
aam
dec
sbb
mov
outsb
sbb
jl
ret
sub
adc
pop
je
cmp
adc
imul
ret
cmpsb
sub
mov
testb
jle
hlt
jge
cmpsb
push
xor
je
shrl
ds
pusha
and
icebp
pop
fdivrl
insb
dec
dec
shrl
mov
loope
mov
inc
fdivrl
shll
insb
out
or
pop
jns
xchg
sbb
pushf
aad
mov
in
push
sbb
andl
test
hlt
mov
adc
inc
sbb
add
mov
mov
rol
sbb
mov
jmp
add
sub
inc
and
mov
pop
aam
outsb
pop
and
xchg
jns
sbb
pop
dec
xorb
jns
and
mov
and
cmpsb
pushf
clc
pop
mov
shlb
mov
xor
xchg
les
sbb
jo
jp
lods
mull
aam
dec
jge
lahf
aaa
dec
jp
hlt
imul
sub
shll
inc
inc
out
leave
mov
je
mov
in
out
xor
mov
dec
rol
fdivp
xor
push
cmpsb
or
and
dec
inc
out
lock
out
jbe
pop
aaa
std
xchg
jb
sub
dec
mov
mov
jnp
push
and
xchg
adc
aad
and
pushf
xlat
loope
mov
fsubs
xor
inc
movsl
jae
xchg
insb
jae
mov
pop
xor
adc
mov
inc
pushf
test
sbbl
mov
int3
rcrl
add
lea
push
jl
push
pop
ret
xlat
das
cltd
jbe
xchg
mov
fwait
pop
das
inc
iret
bound
push
aaa
rep
jle
dec
std
sahf
push
ret
push
pop
and
rol
push
mov
cld
sub
mov
and
outsb
push
insl
mov
scas
imul
jnp
sti
icebp
jbe
cmp
jno
add
rolb
or
jb
sub
pop
pop
push
or
mov
cs
adc
lret
push
in
xor
mov
jo
xchg
fmull
or
daa
ds
dec
xchg
mov
mov
hlt
dec
outsl
cmpsl
ss
add
in
aas
xor
add
pop
inc
adc
mov
and
in
dec
in
sub
add
stos
popf
pop
push
add
mov
jmp
inc
add
add
mov
fisttps
shll
inc
xor
mov
or
push
jle
mov
subl
std
jns
lods
dec
in
scas
fldl
enter
mov
xor
fyl2xp1
loop
insb
xchg
cmp
inc
std
sti
mov
push
xchg
cmc
addr16
das
test
mov
sbb
int
cltd
cmpsb
push
testl
fsubrs
in
push
je
jnp
sbb
inc
or
scas
push
popf
pop
imul
cmp
push
repnz
fildl
or
dec
push
faddp
dec
jge,pn
rol
xchg
cmpsl
or
dec
adc
pop
push
bound
ljmp
mov
sbb
stos
push
je
leave
mov
mov
sbb
cmpsl
sbb
scas
out
xlat
mov
xchg
ljmp
xchg
xchg
mov
ja
mov
adc
sub
pop
cmp
lods
pop
into
cwtl
xlat
add
popa
pusha
add
pop
ss
xlat
outsl
and
cs
insb
ss
imul
sbb
movsb
orb
xchg
ret
add
mov
mov
adc
stos
outsb
pop
push
mov
das
fdivrp
xor
or
jge
mov
pusha
fwait
lret
and
arpl
xchg
pop
fistpl
jmp
hlt
cmp
push
mov
sbb
pop
fidivl
aad
sti
jbe
xor
inc
or
movsl
movsl
push
test
jg
mov
and
jb
mov
inc
jb
xor
lods
sbb
add
mov
jecxz
cli
cmp
loop
cltd
mov
mov
ret
dec
xlat
xchg
mov
pusha
mov
jmp
sar
push
xchg
push
sbb
sbb
push
pop
sub
inc
iret
xchg
inc
mov
xchg
aam
stos
and
push
mov
clc
push
jecxz
or
popa
add
xchg
xlat
lods
or
push
testb
mov
mov
inc
into
es
mov
push
lret
and
sub
xchg
pop
jecxz
mov
pop
mov
arpl
jp
jge
sahf
inc
sub
xchg
andb
rcll
push
push
stos
inc
mov
pop
mov
pop
jge
loope
or
fs
bound
es
cmpsb
data16
xchg
movsl
call
pop
push
mov
cmp
push
aaa
cmpsl
push
adc
dec
movsb
sub
lahf
cmp
cwtl
mov
insb
pop
mul
xchg
lea
stos
xchg
dec
insl
fidivrs
inc
and
lock
xchg
push
insb
ja
shl
jle
adc
cmp
lds
faddl
adc
sub
test
adc
push
add
divl
imul
jb
test
adc
xchg
mov
sub
mov
lret
mov
adc
andl
insb
lods
rcl
loope
push
mov
mov
adc
mull
loop
mov
daa
dec
loope
xchg
jae
dec
mov
lret
lock
sbb
test
icebp
adc
cli
or
lds
sub
pop
dec
pop
lret
lods
movsb
in
in
int3
ja
cmp
add
flds
pop
mov
pop
sub
es
mov
int
mov
lds
sbb
jp
or
sub
push
mov
mov
push
fildl
vpminsw
addl
cmpsb
mov
out
jae
cli
fwait
aas
hlt
subl
mov
jge
push
loope
decb
les
les
mov
dec
fistpl
sbb
or
dec
sub
out
aas
xchg
jl
aam
push
mov
lahf
lcall
push
mov
cmp
mull
jno
add
mov
jae
sbb
ret
testl
fisttpll
inc
xchg
xor
cwtl
add
in
cld
inc
jne
push
pop
insl
and
mov
dec
push
enter
fsub
jnp
fsubr
in
test
jmp
call
push
push
cmp
aas
rorl
pushf
jmp
test
jb
gs
sub
roll
push
xor
adc
cmp
ja
xchg
cmp
cmpsl
xor
shll
in
xchg
push
addr16
xor
adc
cmpsl
cwtl
mov
stos
mov
nop
mov
or
ret
lahf
xchg
pop
mov
pop
pushf
dec
iret
mov
cmp
add
imul
xchg
pusha
pop
push
mov
mov
in
and
ret
das
into
movsb
push
cmp
sub
faddl
pop
inc
add
idivl
mov
js
mov
lock
cmp
stc
inc
sub
inc
mov
into
adc
inc
and
mov
icebp
dec
fisttpll
sbb
test
and
lret
cmp
mov
inc
push
cmc
xor
sub
loop
mov
xor
test
xchg
mov
inc
xchg
nop
cmp
mov
or
sub
cmp
jbe
mov
hlt
add
lods
pop
inc
in
push
aad
stos
test
ss
push
inc
jo
adc
sbb
mov
or
mov
fisttps
adc
cmpsl
scas
push
cmp
push
ficoms
mov
jne
mov
imul
xchg
outsl
call
std
add
push
aad
pushf
inc
cltd
mov
cmpsl
mov
arpl
leave
xor
stos
cmpsb
aam
jecxz
cld
xchg
arpl
mov
sbb
mov
dec
sarb
and
xor
xchg
push
xlat
mov
mov
jne
and
adc
lods
push
in
mov
loopne
sbb
cmp
mov
arpl
cmc
cmp
mov
mov
arpl
push
jp
add
xor
sbb
pusha
minps
lahf
and
loop
xor
mov
pop
jl
xchg
pushf
or
push
pop
imull
dec
js
cmp
add
enter
popf
rcl
push
mov
lret
int
inc
or
cmpsb
cmp
jne
lds
xor
ja
jns
fsts
nop
lret
ror
rcr
jo
sahf
push
sub
sub
add
xor
lods
popa
popl
fs
mov
xchg
mov
cmp
mulb
lods
sub
mov
pop
or
pop
xchg
push
jns
into
inc
fidivl
fwait
lahf
and
jo
inc
jae
stc
sti
pop
mov
pop
jo
cwtl
in
sti
stos
rol
push
mov
and
aam
lret
out
loope
loope
adc
jp
add
lods
stos
cmp
data16
adc
or
pop
mov
adc
add
rcll
push
xchg
rorl
das
push
das
int
cld
lds
xor
iret
pushf
jo
pop
in
repnz
xor
inc
cmpsl
std
mov
jae
ja
mov
pushf
movsl
bound
and
repz
sbb
xor
dec
sti
pop
div
aam
mov
insb
in
repz
xchg
cmc
punpckhwd
pop
orb
xchg
adc
int3
fldcw
lea
cmpsl
mov
push
xchg
repz
mov
in
ja
cmp
cmpsb
cmc
adc
mov
mov
mov
shrb
sbb
clc
adc
cli
add
mov
iret
sub
inc
enter
int3
add
shl
lea
mov
aad
jp
or
jbe
cltd
test
fcmovnu
dec
call
mov
loopne
jecxz
in
xchg
repz
test
dec
jae
mov
adc
or
fcmovu
cwtl
xchg
sub
push
std
jo
fwait
aam
mov
push
xchg
ficomps
xchg
xchg
xchg
xor
fisubrs
shrb
xor
add
push
std
push
sbb
das
aas
test
push
iret
gs
lock
int3
shlb
pop
push
outsl
jp
or
andl
shlb
icebp
pop
imul
ds
popa
push
inc
lock
sbb
pop
sub
sbb
je
and
push
orl
fildl
mov
outsl
decl
pushf
in
flds
or
and
or
mov
mov
outsb
inc
or
jae
mov
insl
xchg
mov
sbb
scas
add
sbbb
gs
mov
xchg
dec
lcall
add
lods
xchg
mov
cli
ret
dec
fstl
call
fcoms
inc
jl
nop
adc
das
scas
insb
pop
push
xchg
popf
jns
xchg
dec
mov
sbb
insl
js
fildll
fwait
enter
dec
outsb
cld
mov
mov
lods
jbe
bound
push
inc
aam
pop
mov
lret
dec
addr16
test
fadds
fprem
aad
test
mov
push
insb
cmp
adc
dec
xchg
jo
in
inc
nop
jp
xchg
ss
sub
out
addl
and
push
sahf
sub
add
inc
mov
out
mov
xchg
out
push
add
bound
push
xchg
mov
lock
in
jnp
mov
ror
or
test
subl
and
jmp
or
scas
lds
mov
sbb
imul
bound
jg
leave
lret
cmp
sub
add
es
and
xchg
dec
pop
stos
or
icebp
jne
and
iret
sub
xchg
adc
push
stos
addr16
mov
push
pop
jno
lock
push
add
jo
mov
cmp
mov
sti
sbb
mov
repz
sub
mov
lock
cmp
jo
mov
out
bound
lahf
jns
jb
or
out
dec
cmp
mov
lods
xor
or
pop
call
popa
dec
mov
into
roll
fcmovnu
fcmovne
cs
dec
or
negb
or
icebp
adc
push
fdivl
scas
xchg
addb
or
adc
popa
dec
out
mov
enter
cmpsb
scas
sub
xchg
xchg
and
call
imul
mov
sar
int
rcrb
dec
jle
cltd
and
mov
mov
int
jo
sub
popf
stc
popa
test
mov
dec
mov
sbb
dec
cltd
pop
pop
mov
loope
pop
das
pop
pop
lret
mov
call
loop
jp
aas
mov
ljmp
outsb
push
shll
lds
sbb
inc
in
ljmp
xchg
pop
pop
lcall
aaa
jne
mov
jle
jp
add
xchg
add
pop
outsb
repz
pop
xchg
mov
sahf
subb
jb
lods
mov
inc
ljmp
pop
jne
repnz
mov
stos
jp
cmp
sub
outsb
or
out
jecxz
xlat
popf
mov
fidivs
insb
inc
jp
loope
push
xchg
pop
inc
sbb
mov
iret
mov
movsb
scas
or
xchg
sub
lret
shrl
outsb
leave
mov
xor
cmp
pop
and
sub
sub
add
bound
adc
mov
fcompl
dec
lods
jge
add
add
aam
cmpsb
mov
ja
dec
pop
in
dec
xchg
imul
ljmp
cmp
dec
jno
mov
lahf
shlb
shrb
mov
pusha
push
mov
insl
int3
dec
mov
in
add
or
and
add
cld
pop
inc
imul
push
scas
jno
scas
mul
sub
outsb
mov
out
mov
int3
shll
fnsave
popa
xorl
or
sbb
xor
fildll
mov
xchg
loop
daa
in
jl
ja
aaa
ja
in
fsubr
js
lods
push
jmp
fmul
daa
cmp
cld
push
xchg
shr
test
out
inc
in
ret
jle
call
iret
sbb
jge
lods
jnp
ror
push
adc
repnz
cmp
adc
dec
in
in
lcall
adc
dec
inc
lcall
dec
imulb
scas
imul
ja
mov
insb
bound
and
std
sbb
dec
fsts
push
loopne
rcrl
or
and
push
addr16
xor
add
mov
je
or
faddl
hlt
dec
fiaddl
nop
jb
cli
out
xchg
aas
xchg
mov
test
sbb
lods
pop
push
jae
subl
jle
call
mov
cmp
adc
add
adc
inc
std
test
xor
je
in
inc
popa
inc
loopne
xor
loopne
out
dec
out
xchg
test
push
push
jae
mov
sarl
in
adc
scas
stc
dec
lret
mov
pop
xchg
push
hlt
cmp
jmp
mov
cltd
xchg
stc
jmp
mov
shlb
mov
in
stos
dec
jbe
push
notb
pop
dec
int3
cltd
in
sbb
xor
repnz
jp
outsl
push
nop
push
dec
sti
pop
jmp
xchg
fwait
cmp
fcompl
sbb
movsl
test
jmp
mov
fs
push
call
lcall
push
pop
jne
adc
push
pop
fwait
outsl
mov
dec
ja
push
hlt
jb,pt
fidivrs
mov
cmp
push
fptan
fsubr
and
mov
add
mov
aas
filds
inc
push
insl
dec
scas
stc
aam
sbb
sti
stc
in
cmc
ja
outsl
test
jno
ficompl
jb
mov
or
imul
cltd
test
imul
add
sti
pop
in
push
or
fidivs
push
add
hlt
cmp
les
mov
push
repz
lods
jle
scas
sbb
iret
clc
and
nop
xchg
popa
lahf
fisubrs
loopne
xchg
sar
push
xchg
ja
out
movsl
xlat
adc
dec
test
out
mov
mov
fwait
ss
push
push
popa
jecxz
push
imul
push
sub
rorb
cld
pop
rcrb
int3
mov
jecxz
jno
pop
lods
pushf
test
cmp
cld
idivl
dec
ds
push
mov
mov
sar
cmpsb
cwtl
xor
fdivrl
test
test
leave
push
dec
stos
bound
lock
pop
cs
dec
negl
sbb
rcrl
mov
add
repz
movsb
test
lahf
movsb
add
sbb
in
xchg
xor
cmpsb
hlt
shrl
fdecstp
dec
lahf
aaa
lret
xorl
jg
mov
jecxz
cmp
not
into
rcrb
mov
inc
add
inc
sub
inc
push
int
mov
cli
pop
adc
lods
imul
sti
mov
mov
xor
sahf
jl
mov
lahf
leave
and
push
push
mov
test
xchg
push
xchg
dec
inc
push
dec
frstor
test
inc
test
mov
lds
xchg
sbb
jns
inc
jmp
xchg
aad
mov
push
push
ret
mov
dec
add
nop
pop
sahf
pop
rorl
jb
inc
mov
jae
in
and
iret
sub
ret
in
or
xor
sbb
popa
add
xor
std
mov
loope
add
iret
mov
into
leave
jge
sti
in
lock
or
pop
xchg
repnz
das
dec
clc
into
sarb
dec
mov
cmpl
cmp
insb
mov
cmp
test
pop
push
mov
inc
sub
or
out
dec
jmp
mov
sub
push
pop
clc
les
mov
adcl
adc
xchg
lds
test
arpl
mov
mov
inc
out
dec
pop
xchg
test
scas
mov
sbbb
loopne
movsb
push
popf
cwtl
sub
lods
push
add
in
int
in
and
push
or
in
movsl
and
mov
rol
cmp
in
frstor
mov
and
lahf
adc
sub
cmpsb
xchg
dec
sub
add
pop
dec
imul
adc
pusha
mov
and
bound
lret
out
mov
add
sbb
inc
dec
jb
in
inc
std
fs
mov
fs
pushf
mov
push
xchg
adc
or
cltd
in
pop
sbb
push
into
adc
clc
out
pop
int3
shll
mov
outsb
sub
and
iret
mov
lret
pop
push
outsb
scas
pushf
xor
popa
jb
decl
xchg
sub
xchg
imul
mov
adc
xchg
sti
add
pop
es
aam
pusha
in
sub
insl
nop
dec
leave
fnstenv
pop
pop
inc
xchg
mov
mov
xor
aad
daa
xchg
mov
fidivrl
dec
jle
stos
es
ret
mov
movsl
int3
ficoms
xchg
jecxz
es
scas
cmpb
push
jo
fs
test
mov
mov
popf
xorl
arpl
test
sub
inc
sahf
pop
fcoml
lahf
sbb
loope
mov
leave
sbb
push
or
jae
or
inc
cmpsl
mov
ss
lret
sarl
std
daa
or
mov
jecxz
out
jne
mov
dec
test
test
add
scas
or
jns
mov
mov
nop
xor
movsb
mov
aas
jb
pop
mov
dec
rorl
jg
arpl
stos
adc
movsl
fdivrl
xchg
mov
jo
jecxz
pop
xor
repz
loop
dec
imul
cmpsb
les
sub
in
lea
mov
xlat
and
std
repnz
jle
cltd
test
jmp
push
movsl
jns
in
movsl
repz
gs
cmc
sub
dec
push
ljmp
mov
push
aas
dec
rorb
je
in
dec
ret
out
lea
xlat
loop
pushf
std
sub
nop
jecxz
or
pop
cmc
jb
xchg
lret
test
pusha
dec
repnz
stos
cld
outsl
fiadds
or
and
mov
loop
jno
xchg
lret
mov
and
pop
mulb
xchg
fwait
push
scas
mov
push
in
test
mov
sub
inc
dec
lea
adc
or
mov
jb
adcb
in
js
fcom
jecxz
jmp
std
lock
push
adc
fimull
out
mov
mov
stos
and
movsb
dec
lahf
push
inc
hlt
rcr
xor
push
mov
mov
mov
jae
mov
test
inc
jge
jp
adc
icebp
jnp
packsswb
and
and
data16
shrl
jecxz
mov
push
lahf
jns
mov
fwait
insl
aad
pop
xor
sub
call
pop
in
or
loope
mov
mov
fisubl
and
stc
push
pop
pop
inc
add
lea
mov
cmp
xorl
jae
stos
jne
xlat
mov
mov
add
ret
xchg
out
add
out
sbb
int
xchg
xor
andb
cmp
sub
jmp
mov
sbb
mov
mov
pop
push
test
push
dec
daa
nop
mov
fs
xchg
mov
movsb
sbb
push
pop
pop
fcom
and
push
sub
dec
inc
fimuls
mov
mov
fisttpl
pop
js
addl
fistpll
xchg
sub
rorb
xchg
mov
jno
pop
lcall
cmp
or
inc
and
rcll
imul
ja
or
jno
pop
xlat
add
xchg
or
sub
mov
lahf
addr16
mov
adc
lock
jns
stc
mov
arpl
push
inc
sbb
popa
ret
das
sbb
push
push
scas
inc
adc
jae
std
xchg
lock
rorl
ljmp
sbb
into
cli
jmp
push
mov
iret
pop
add
adc
sbb
imul
out
and
push
pop
push
ret
aas
pop
daa
xchg
test
push
test
pushf
push
pop
fs
popa
jb
add
mov
dec
pop
pop
xor
loopne
scas
clc
xor
xchg
sbb
insl
xchg
sub
adc
arpl
ficompl
push
test
xlat
mov
xor
test
cmp
cmc
orl
imul
sub
lods
imul
adc
arpl
xor
int
jle
mov
in
push
jge
lods
stos
inc
dec
enter
cwtl
ficoml
jo
enter
mov
aas
jnp
push
sarb
dec
cmp
xchg
arpl
stos
xor
mov
in
outsb
jl
insb
mov
adcl
mov
popa
lret
addr16
cmp
mov
aad
jg
dec
pop
mov
cmp
mov
pop
stos
mov
scas
into
popf
enter
sbb
rcrb
test
push
es
xchg
xchg
stc
out
daa
sub
dec
cs
mov
pop
pushf
sbb
stc
test
adc
lea
cmpsb
push
pop
jns
fcmovb
jge
cli
in
idivl
fnsave
mov
jg
jo
xchg
pop
outsb
in
lret
inc
xchg
filds
inc
jns
sbb
shll
xchg
adcl
adcb
ret
xchg
add
mov
pop
pop
cltd
sbb
adc
cmp
pop
fistpll
fisttpl
adcl
add
jecxz
dec
mov
shll
inc
jae
xorb
push
mov
bound
pusha
int3
pop
dec
cmc
stc
outsb
sti
pop
scas
mov
mov
inc
adc
dec
push
bswap
shll
inc
sbb
negl
fdivs
sub
push
in
xor
jle
dec
jecxz
movsl
sub
adc
mov
ss
insl
out
pop
or
ret
and
popa
outsl
dec
fsub
les
mov
jecxz
pop
scas
cs
pop
pop
or
sbb
mov
stos
lock
fisubrs
mov
jnp
sub
sub
xchg
jne
mov
sbb
add
xor
inc
repz
nop
cmp
push
adc
fidivl
mov
cmp
shll
out
pop
pop
test
test
push
mov
or
lret
out
int
popf
mov
insl
dec
jl
popf
stos
cmpsb
jnp
das
ss
push
loop
add
sub
mov
ds
out
xchg
jecxz
inc
into
sbb
and
int
lock
cmp
jecxz
xchg
ljmp
inc
sbb
in
cmp
lret
test
adc
lcall
sub
mov
mov
xchg
push
fdivp
push
sbb
mov
rorl
ja
ds
mov
std
sahf
test
add
in
out
xchg
outsb
das
mov
out
jbe
sarl
push
ss
pop
out
test
lahf
jae
aaa
iret
addb
loopne
dec
pop
sub
mov
push
stos
jp
mov
cld
jno
jl
xor
jbe
pushf
int
xchg
sbb
sbb
cld
iret
jbe
daa
mov
shrl
cmp
mov
and
int3
or
imul
jge
jecxz
add
adc
xor
or
jmp
pop
addr16
test
shlb
push
icebp
popf
call
mov
or
mov
aad
insb
rorb
ss
sub
xor
not
adc
ja
pop
adc
je
jecxz
outsb
and
ret
push
ja
or
ja
aam
dec
xchg
cwtl
inc
dec
push
sahf
sbb
dec
mov
sti
movl
pop
lds
loope
mov
inc
jbe
les
cmp
fiadds
insb
aam
jo
mov
mov
and
xor
rcrb
mov
adc
test
out
je
in
in
push
lcall
pop
pop
jg
or
dec
push
fs
pop
mov
pop
and
adc
xchg
jno
adc
gs
outsb
pop
stc
inc
pusha
adc
push
xchg
shlb
nop
daa
imul
pop
hlt
push
test
pop
faddl
jp
aad
daa
mov
gs
push
enter
lock
jae
cmovne
sbb
hlt
sbb
and
push
or
mov
sbb
js
push
dec
insl
cld
rcr
inc
add
movsl
sbb
andb
push
lods
cwtl
jge
mov
sub
fdivrl
jecxz
ret
mov
loop
test
bound
aad
sub
call
and
test
push
cld
inc
sub
or
dec
pop
push
mov
xchg
ficoms
jnp
and
and
xor
pop
out
iret
and
adc
imul
hlt
dec
push
jnp
test
xchg
sbb
mov
cmc
cmp
stos
xchg
mov
iret
or
mov
or
pop
int
aaa
mov
mov
xor
inc
add
fdivr
cmp
nop
pop
jo
imulb
mov
andb
sub
ret
xlat
push
inc
mov
in
xchg
cmc
ret
sub
pop
loopne
daa
icebp
mov
es
repnz
movsl
sbb
inc
and
mov
and
pop
push
test
nop
push
imul
dec
rcl
sub
cmpsl
fiaddl
lahf
andb
shl
pop
adc
pop
mov
insl
mov
inc
andl
lock
add
aam
push
js
adc
sbb
sub
test
clc
rcll
movsl
outsb
pop
mov
and
movsb
sub
mov
repz
loop
cmpsl
jmp
out
lock
fwait
scas
cld
sub
cs
jmp
pop
imul
loope
scas
adc
aas
aad
push
bound
fwait
add
sub
fmull
adc
jns
pushf
enter
inc
mov
jnp
or
lahf
dec
cmp
in
int3
jp
cmp
adc
xchg
mov
jmp
pop
lock
lcall
fdivrs
repz
in
out
push
jno
stc
mov
popf
aas
or
mov
cwtl
in
lea
stos
dec
gs
ret
mov
cmpsb
mov
mov
adc
clc
cmp
push
loop
mov
fcmovnb
push
cmp
mov
lods
jmp
jno
sub
std
jmp
lcall
and
jne
cmp
stc
outsl
mov
movsb
fcomip
mov
mov
movb
or
out
dec
loope
movsb
pop
ret
repnz
scas
sub
arpl
xor
ret
jbe
mov
adc
lods
fdivrl
test
and
or
xor
xchg
add
sti
and
adc
sbb
adc
push
jg
add
xlat
lahf
cld
lret
xchg
loopne
push
pop
fildll
bound
ret
mov
xchg
xchg
push
add
icebp
inc
push
sub
jnp
dec
xchg
loop
mov
cld
loope
xchg
popa
cwtl
enter
mov
shlb
in
adcb
push
adcb
repz
jo
inc
orl
int
xchg
daa
bound
add
loop
lods
stos
ficoms
out
xchg
enter
sbb
jnp
inc
cmpsb
outsl
cltd
xchg
arpl
jbe
cmp
in
jae
inc
push
push
mov
out
insb
sahf
push
mov
cmp
sbb
nop
mov
adc
mov
xchg
arpl
fwait
sub
xorb
sub
mov
out
das
push
and
pop
cmp
mov
repnz
lret
loop
int
ja
in
shr
jg
fucomip
sub
mov
inc
test
imul
sub
je
mov
push
lds
xor
xlat
lea
flds
ss
push
cmpsl
call
inc
imul
test
inc
dec
sbb
add
xor
in
sbb
adc
push
icebp
jmp
inc
out
call
xchg
and
mov
fsubl
outsl
cmp
push
sub
aad
fldt
mov
test
mov
fnstcw
cmp
lock
xchg
sub
jbe
inc
inc
addr16
pop
cmc
es
incl
rcll
sbb
fimuls
adc
dec
fldt
loopne
data16
ret
popf
out
cmpl
mov
pop
pop
xor
mov
arpl
pop
je
jb
test
subl
frstor
jbe
mov
jns
shl
ja
lds
je
xchg
shrl
jge
in
push
and
push
call
cmp
xchg
ljmp
data16
movsl
inc
ja
orl
jae
mov
cli
xor
dec
xorb
adc
dec
dec
push
inc
xor
jp
insb
mov
ljmp
shll
lahf
fldl
mov
jle
insb
sahf
adc
mov
rclb
mov
inc
je
int
rcrl
sbb
mov
mov
adc
jns
inc
pop
xor
fsubrs
pop
data16
lahf
loopne
call
leave
cltd
and
cmp
mov
cmc
les
fsts
jo
and
inc
or
sarl
shll
push
cmp
add
push
pop
aaa
pushf
les
inc
repnz
cltd
in
in
outsl
icebp
sbb
dec
cmp
inc
push
add
pop
xchg
les
xchg
or
pop
mov
pusha
mov
stos
and
leave
dec
shlb
mov
ret
movsb
push
std
sar
mov
jae
testl
mov
shl
pop
mov
mov
xor
out
roll
jb
xchg
js
pusha
inc
sub
or
jl
and
adc
xchg
test
jne
sub
xchg
jbe
push
add
mov
in
int
inc
xchg
mov
negl
jno
iret
cwtl
inc
in
faddl
into
sti
cmc
jge
push
fiaddl
mov
dec
dec
or
inc
pushf
mov
xchg
push
cmp
pop
dec
pop
dec
xchg
xchg
pop
cmp
arpl
push
loopne
pop
mov
jbe
add
sbb
push
adc
fdivrs
lds
lea
das
or
cltd
pop
sahf
mov
or
pop
xor
push
lods
add
cli
mov
test
pop
mov
in
inc
incb
stos
and
ds
jne
adc
mov
add
pop
pusha
shrb
cmp
rorl
das
fisttpll
add
xchg
adc
jae
adc
ss
scas
nop
mov
xor
dec
fcompl
mov
push
dec
fst
jmp
movsl
jmp
out
mov
idivb
mov
mov
add
stos
shll
sub
in
jne
jmp
jp
incb
add
rorb
lods
inc
sarl
xchg
loopne
gs
mov
arpl
lods
dec
daa
mov
sub
and
jbe
nop
and
sub
or
jge
pop
xchg
out
adc
dec
inc
add
into
cmp
mov
push
fidivrs
out
xor
shlb
addr16
or
mov
iret
divl
push
add
not
idiv
or
sub
jl
ljmp
in
cmc
mov
xchg
dec
inc
adc
rcrb
pushf
lods
les
jno
dec
dec
fimull
dec
arpl
negb
fiadds
jmp
dec
cmp
movsl
mov
ja
cltd
lods
xchg
mov
add
stc
hlt
scas
mull
lea
ret
adc
sti
lea
and
push
or
mulb
mov
xchg
imul
xchg
or
insl
mov
cmpl
xchg
and
push
adc
frstor
inc
fisubrl
ss
add
inc
test
int
xchg
sub
movsl
dec
pop
rcrl
loopne
adc
fyl2x
mov
xchg
lret
push
loop
cmp
cmp
xchg
mov
and
xlat
mov
mov
ficoml
push
jae
pop
mov
and
nop
cmc
sub
dec
mov
xlat
dec
xchg
ret
insl
shlb
ljmp
push
jg
gs
out
int
out
adc
leave
xchg
mov
lahf
and
push
loopne
mov
jp
and
jne
xchg
xor
cmp
rcrl
scas
adc
shl
push
out
popf
inc
into
sbb
push
jmp
mov
es
addr16
dec
outsb
into
and
xor
jno
cltd
in
push
or
jbe
lahf
rcr
push
repz
mov
xchg
or
mov
sub
lcall
mov
sub
icebp
sub
aas
movsl
bound
adc
scas
jge
int3
daa
pop
and
inc
and
fisubrl
sbb
push
mov
mov
enter
outsb
into
xor
test
xchg
stos
jnp
jle
inc
inc
imul
into
in
lea
ss
jge
out
jne
int
rorb
sti
adc
fimull
jp
loope
fdecstp
loop
mov
push
cmp
shlb
sahf
out
and
pusha
cmc
test
inc
sub
cmp
popa
mov
nop
lods
and
cltd
jne
dec
popa
mov
and
ljmp
scas
lahf
jl
and
add
mov
in
jle
mov
and
pop
hlt
fstpt
popf
mov
roll
mov
negb
xchg
inc
and
add
insb
in
push
push
mov
dec
jg
jb
int
lods
jg
hlt
xchg
push
push
adc
mov
jbe
jb
inc
sbb
out
push
sub
dec
add
mov
jle
adc
xchg
jo
lahf
adc
mov
out
das
or
imul
std
jo
imul
adc
mov
adc
ljmp
lods
les
dec
sbb
outsl
adc
das
imul
rcrl
mov
sbb
stos
fistpl
movsl
dec
lock
outsl
and
and
mov
ret
std
mov
jns
stc
shll
pop
ds
and
insl
adc
jns
fs
fldl
xor
test
inc
push
cld
stos
add
and
pop
cmpsl
sbb
adc
xchg
xor
and
lcall
push
fwait
movsl
ds
push
xchg
mov
inc
mov
mov
lock
pop
mov
rclb
pop
leave
in
fmull
adc
jge
mov
test
dec
pop
nop
aaa
fs
jl
lods
or
mov
sbb
adc
xchg
shrb
and
mov
pop
je
lods
sbb
xor
out
xchg
jne
pop
repz
inc
push
cmp
scas
sub
mov
mov
ficoms
and
aad
mov
mov
mov
loope
orl
pop
into
test
out
jo
mov
mov
mov
push
les
mov
aaa
push
and
xchg
rorl
mov
sub
mov
lret
or
inc
daa
fmuls
loop
add
mov
test
nop
aam
dec
scas
imul
or
xor
hlt
aaa
nop
xchg
xchg
push
outsl
mov
cmpsb
int3
les
sbb
push
push
mov
sub
loopne
divl
pop
pop
or
data16
and
push
hlt
sbb
add
mov
xchg
push
push
xchg
xchg
xchg
loopne
sub
sahf
jo
stc
dec
stc
push
or
lret
sbb
xchg
push
stc
leave
lahf
and
cmp
popf
int3
data16
mov
jl
loope
ljmp
push
pop
adc
or
leave
loope
ffree
pop
mov
sbb
lods
std
jecxz
shlb
int3
jg
cmc
dec
addr16
dec
dec
nop
iret
xor
orl
jecxz
push
movups
cmp
add
sbbl
in
icebp
icebp
cmpsl
mov
stc
pop
dec
std
xor
mov
stos
push
xchg
ficomps
dec
data16
fwait
mov
daa
sbb
or
push
jno
cmpsl
push
cmc
lcall
mov
dec
aaa
push
popl
movl
xchg
adc
push
xchg
mov
mov
add
or
lcall
push
xor
jno
inc
nop
cmpb
or
fcoml
pop
sub
push
push
gs
sbb
fwait
or
adc
and
enter
push
pop
push
or
sub
cmp
inc
cmpsb
mov
in
push
fiadds
sbb
mov
out
fwait
call
rcrl
xchg
jo
xchg
and
xchg
sbb
pop
in
stos
test
add
js
cmp
cwtl
scas
shrl
fistpll
mov
cmp
jl
pop
mov
xor
mov
lret
je
fiaddl
pop
mov
insl
sbb
rorb
ja
dec
xchg
dec
pop
and
or
repz
mov
xchg
or
ds
lock
mov
std
xor
ss
lods
push
inc
negl
adc
test
sub
inc
rol
shl
jo
dec
sti
mov
cmp
fistpll
ds
shlb
lret
xchg
add
out
add
add
inc
fdivrs
xor
outsl
xor
and
push
ret
imul
dec
enter
gs
outsb
int3
xor
fxch
xchg
xchg
idiv
mov
mov
bound
xor
fisttpl
in
xorl
jae
add
cmp
pop
dec
int3
pop
and
cmc
popl
test
mov
inc
js
cld
sti
jl
imul
rclb
ljmp
pop
xchg
mov
mov
fisubl
add
jg
push
mov
push
orb
jge
push
mov
cmpsb
mov
mov
cwtl
into
add
lahf
xor
ret
sub
sub
rcrl
lods
inc
jecxz
rolb
clc
sub
push
push
xor
sbb
cmp
in
xchg
sub
divl
cld
push
rol
xor
aas
test
mov
sub
xor
dec
stos
adc
xchg
ret
push
sub
in
fwait
lar
mov
xor
stc
std
dec
mov
inc
mov
cmp
push
gs
and
inc
adcb
jo
lods
test
cmp
aaa
push
int
xchg
les
ljmp
in
push
push
cltd
js
pop
push
jae
inc
xchg
xchg
mov
sti
inc
repz
lcall
rcll
mov
mov
int
xor
mov
pop
es
jmp
scas
shll
mov
xchg
int
scas
cs
sbb
fsubrs
cli
jb
das
dec
xchg
inc
add
js
mov
add
test
and
push
push
inc
mov
jo
dec
dec
test
mov
div
in
insb
stc
orl
das
or
lahf
jl
mov
js
int
loopne
xor
xor
cmpsb
sahf
add
leave
push
rcl
push
or
push
enter
xchg
addr16
mov
dec
sti
push
popf
jg
loopne
xor
inc
sub
ja
int3
xchg
fwait
mov
jae
sub
pop
test
mov
pop
pop
mov
gs
add
cmp
xchg
push
pusha
in
call
jb
test
imul
imulb
sarl
imulb
mov
push
xchg
dec
stos
das
lahf
sub
adc
fcompl
ja
xchg
or
mov
pusha
dec
pop
rcrb
jle
in
movsb
aam
in
outsb
test
shrb
je
call
inc
shll
sti
push
sbb
cmpsb
or
setle
lds
fimull
fcmovu
or
call
cwtl
dec
jl
mov
sub
push
addr16
inc
loope
fisubrs
fwait
sub
xor
in
or
pop
aaa
mov
push
mov
inc
xchg
ja
mov
adc
adc
es
fnsave
scas
cmp
and
lock
jb
xchg
adc
mov
sub
inc
int3
outsb
mov
in
add
push
mov
or
xor
mov
lock
jo
or
adc
outsl
dec
adc
out
cmp
mov
sub
insl
outsl
xor
push
xor
sub
push
int
add
pop
sbb
mov
fwait
jecxz
adc
in
fisubrl
mov
scas
outsb
pushf
aad
aaa
and
jo
rcrl
adc
mov
and
dec
ss
stos
cwtl
aam
repnz
dec
dec
cmp
sub
shl
cli
out
xchg
mov
mov
loopne
fwait
jmp
mov
mov
lock
xlat
int3
or
push
scas
pop
sbb
adc
xchg
fdiv
scas
lods
pop
and
xchg
mov
or
sub
cs
lea
mov
mov
push
mov
inc
adc
shrb
clc
jle
mov
adc
push
aas
mov
mov
nop
add
loop
shlb
or
push
add
sub
test
in
dec
xchg
ds
adc
mov
je
test
ret
pop
lahf
js
cmpl
fs
pushf
adc
clc
xlat
stos
add
iret
mov
or
adc
or
inc
sub
aaa
xor
mov
mov
cmpsb
push
aad
xchg
xchg
imul
outsb
adc
push
sahf
stos
mov
bound
loop
testb
lahf
mov
in
orb
popa
xor
adc
add
pop
gs
xchg
xchg
sbb
xor
pop
movsl
je
jl
nop
movsb
push
imul
push
and
jl
call
pop
inc
inc
dec
fsubrs
sub
sbb
push
ds
cmpsl
and
sub
mov
repnz
sahf
je
int
adc
push
in
adc
ret
movsl
fcoms
insb
xchg
das
lcall
int3
mov
cmp
push
fists
ss
cld
cmp
inc
xchg
push
add
scas
mov
shll
push
add
xorb
fistpl
push
sub
mov
addr16
nop
aaa
fsubrl
mov
pusha
fwait
rcr
dec
inc
xchg
xor
lret
mov
and
xchg
jge
jecxz
int3
std
out
dec
cltd
xchg
loope
cmc
stc
mov
pusha
pop
sub
xor
or
mov
or
mov
dec
addb
aaa
int3
push
ret
inc
cli
aam
cli
xor
adc
stc
mov
mov
mov
or
or
insl
fwait
mov
mov
add
mov
pop
int3
rclb
mov
mov
cmp
stc
shrb
add
imul
xchg
ret
test
jl
xor
mov
pop
sahf
xchg
push
outsl
lods
fists
jge
fidivs
push
or
push
jg
fcmovnu
or
inc
inc
scas
sbb
xchg
repz
mov
aaa
mov
ljmp
lock
cmp
mov
jmp
sub
mov
je
std
xchg
jne
sbb
movsl
fistl
jg
cs
jg
lods
jg
and
daa
push
jo
adc
fcoms
push
daa
movsl
js
mov
leave
push
enter
mov
mov
push
neg
outsl
pop
xchg
mov
mov
int
daa
loope
in
sbb
scas
adc
push
ds
mov
movsb
ss
dec
lret
out
pop
nop
ret
and
imul
xchg
icebp
popa
mov
data16
cmc
data16
lods
int
xchg
push
dec
fs
cli
adc
cs
mov
cld
imul
adc
xchg
fnstenv
dec
das
mov
sbb
cwtl
jle
loopne
dec
rclb
xchg
sbb
lds
ss
dec
cmp
pusha
and
loopne
stc
mov
sub
lret
test
fimull
jg
out
jae
shrl
pop
jmp
mov
outsb
xchg
add
add
cmp
and
cmp
mov
pop
in
jmp
repz
or
or
out
in
pusha
jae
shll
clc
push
cltd
push
lds
fwait
rorl
icebp
cltd
scas
xchg
jnp
sti
mov
mov
xchg
lret
jl
mov
pop
outsl
aas
pop
push
cld
xchg
mov
jb
jb
fnop
xchg
mov
in
xchg
push
cli
mov
cmp
add
inc
mov
jmp
cmp
xchg
aam
xchg
clc
es
repz
ljmp
mov
stos
ljmp
popa
es
cmp
jmp
pop
inc
fdivrl
mov
in
pop
push
push
cmp
ljmp
cmp
pop
mov
incl
xchg
cli
leave
dec
jp
inc
dec
jns
stc
add
jae
and
fsubrs
shlb
adc
outsl
imul
xchg
mov
pop
sbb
cmp
loope
jno
sbb
add
iret
jecxz
cmp
sahf
xor
outsl
jge
stos
or
jl
adc
and
dec
inc
call
outsl
inc
dec
xor
fwait
insb
mov
sub
test
sti
jl
insb
cmp
jno
test
in
fdivrl
shlb
lret
push
dec
cs
or
add
xchg
adc
dec
in
cmc
test
or
mov
mov
imull
adc
or
cmp
xchg
xorb
pop
test
std
cmpsl
inc
mov
and
mov
adc
fdivrl
cmp
subl
popf
push
fldl
xchg
aam
jge
in
cli
insl
test
addr16
add
xchg
out
outsb
jecxz
inc
pop
mov
jnp
mov
aaa
bound
insb
idiv
stos
ds
inc
out
pop
sbb
lds
lret
mov
addl
jnp
bound
pop
shl
dec
push
out
push
loop
pop
cs
xor
mov
sub
fwait
mov
jl
and
mov
push
cli
ljmp
fwait
mull
jb
in
xor
std
addr16
fdivrp
add
xchg
dec
sbb
dec
out
enter
pop
push
fwait
je
std
movsl
mov
fchs
sub
in
mov
xchg
int
mov
and
rorb
add
mov
mov
and
iret
out
xor
cli
mov
xchg
cmp
cmp
stos
cmc
cmp
pop
popa
inc
sbb
jl
xchg
insl
xchg
cmp
mov
call
push
xchg
xlat
mov
stos
or
mov
pushf
mov
lret
inc
cwtl
mov
lock
hlt
pop
int3
sbb
idiv
pop
sbb
cmp
aaa
out
pop
jne
xor
add
sub
repnz
dec
jecxz
mov
push
xchg
outsb
mov
mov
add
fxch
pop
sub
mov
popf
mov
popa
lcall
outsw
cmp
xchg
cltd
icebp
stos
nop
scas
xchg
movsl
push
xorb
mov
pop
and
cmp
ret
cmp
xlat
outsl
mov
jg
test
sbb
pop
pushf
test
jmp
fucomp
ret
aas
jmp
and
cli
fs
dec
pop
in
cld
dec
stos
cmp
mov
adc
jne
outsl
ret
rclb
aad
arpl
cmp
sub
repz
sub
sub
fs
mov
sti
push
or
xchg
jno
mov
and
sarl
add
arpl
pop
aaa
dec
pop
and
dec
enter
push
test
test
hlt
sbb
sbb
lock
sar
inc
xchg
cmc
jl
pushf
inc
add
fisubrs
jo,pt
int
jg
int3
call
jnp
jecxz
push
fcoml
cmp
sub
outsl
lea
loope
inc
mov
aam
mov
ss
push
xorl
das
mov
lock
adc
ret
lret
lock
les
cld
imul
jbe
pop
xchg
mov
pop
fnstcw
mov
sbb
push
inc
fadd
pop
hlt
cmpsl
pop
xor
push
adc
push
pop
jne,pt
das
and
xchg
mov
stc
dec
jns
repz
stos
ljmp
add
rorb
flds
out
adc
xor
adc
push
icebp
sahf
mov
pusha
mov
cs
mov
lds
lds
scas
lcall
je
mov
mov
test
cmc
and
pushf
adc
scas
pop
mov
call
pop
cmpsb
mov
popfw
lods
dec
mov
sbb
add
insb
mov
gs
in
cli
jmp
outsl
bnd
pop
jnp
sbbb
inc
mov
pushl
push
aas
inc
shlb
jns
sub
cmpb
and
mov
mov
loopne
int
dec
jg
xor
adc
rorl
test
or
push
xor
mov
icebp
dec
cmp
out
movsl
and
inc
sub
loop
add
pop
in
jecxz
rorl
sub
cwtl
push
pop
cli
jp
or
lods
cmp
jecxz
enter
adc
pop
adc
jns
jo
ljmp
es
pusha
sbb
popa
out
cli
inc
jnp
cmpsl
testb
push
add
xchg
popf
cmp
dec
mov
outsl
arpl
jg
cmp
mov
sahf
inc
jno
sub
mov
bound
jb
movsb
sti
jb
movsl
sarb
out
xchg
pop
lds
pop
sti
enter
xchg
int3
fs
test
push
popa
imul
push
jo
jo
pop
lds
repnz
jns
xlat
jp
inc
pop
sbbb
mov
insl
inc
ss
stos
lret
pop
nop
mov
mov
lods
dec
add
cmpsb
aam
jl
sahf
jae
insb
repnz
dec
jge
or
xlat
cmpsl
stc
adc
mov
aaa
add
pop
lahf
int
mov
pop
sub
xchg
mov
pop
pop
fists
les
out
stos
mov
push
sbb
or
es
cwtl
int3
mov
sbb
imulb
cltd
mov
push
dec
movsl
adcb
adc
pop
leave
adc
inc
jnp
pusha
ds
stos
mov
inc
loope
addr16
adc
xchg
xchg
or
mov
in
out
notl
mov
aam
cmp
dec
mov
jle
test
cmp
mov
pusha
icebp
add
lcall
imul
adc
fiadds
ficompl
pop
shlb
pop
cmp
mov
dec
jae
push
mov
mov
pop
xchg
xor
xor
pop
ja
mov
or
push
xlat
cmc
inc
addr16
mov
addl
je
sarb
lea
out
fmuls
clc
jl
pop
lea
insl
sub
xor
movsl
leave
jns
shrb
insb
mov
nop
pop
in
pop
stc
dec
ja
jge
add
rcrb
sbb
in
ffreep
push
and
inc
and
pop
sbb
jp
push
in
xor
test
push
and
out
xchg
cmpsl
ljmp
push
dec
xchg
pop
lcall
aad
mov
add
and
cmp
adc
push
inc
ret
jmp
and
rcll
ja
enter
inc
call
add
mov
or
je
pop
in
jp
and
and
xlat
or
je
fisubrs
cmp
cld
aaa
imul
fnstsw
sub
sbb
add
jle
decl
mov
ja
sbb
mov
int3
mov
shll
das
xchg
mov
imul
cli
jge
or
push
jl
lret
fstp
insl
xchg
sub
cmp
pop
test
xor
mov
jb
jmp
mov
xor
mov
xchg
ja
loope
in
daa
or
sub
pop
mov
xchg
jg
jecxz
sarl
lcall
fnsave
movsb
cmp
or
cwtl
add
xor
xor
lds
imul
jb
gs
pop
test
movsb
push
movsb
xlat
sbbl
fcom
mov
dec
sbb
adc
cltd
mov
push
lret
ret
outsl
insl
sbb
cmpl
fs
cld
and
pop
and
bound
aaa
adc
mov
jmp
lea
test
sub
mov
xchg
and
pop
cmc
dec
je
das
push
dec
dec
sub
pop
sbb
imul
mov
mov
fmul
arpl
xor
pop
ja
mov
push
fisubrl
xchg
fidivl
fidivs
popa
rcrl
arpl
xor
fisubs
push
loope
test
mov
push
es
and
jno
cmp
popa
add
ficompl
subl
mov
lods
sbb
mov
sahf
sbb
pop
xchg
fcomps
mov
mov
fcoml
popa
xchg
jecxz
mov
shll
cmpb
sbb
lods
scas
pushf
inc
add
xchg
or
mov
ja
mov
lea
insb
add
mov
or
in
addr16
mov
jge
je
call
jmp
push
popa
int
sbb
sbb
testb
scas
shlb
outsb
cwtl
adc
scas
cmp
cmp
or
shlb
test
cmpsl
sbb
dec
dec
push
adc
adc
nop
cmp
mov
movsb
sub
rclb
pop
dec
xlat
hlt
lea
pop
mov
in
fs
rcl
xchg
mov
adc
lahf
daa
jg
scas
leave
and
mov
sar
inc
arpl
xchg
push
fsubl
jg
das
outsl
or
mov
or
jb
sbb
push
mov
mov
xchg
pop
add
shr
mov
mov
incl
es
mov
call
mov
mov
push
mov
je
out
sub
rcll
int
mov
rcrl
jno
les
adc
pop
frstor
pop
shll
pop
rcl
pop
push
mov
aam
inc
mov
clc
fsubl
shlb
jle
filds
out
lcall
adc
xchg
cli
cltd
sbb
inc
pop
pop
mov
push
lods
fldl
test
or
adc
pop
cli
stc
and
lcall
adcb
inc
cli
repnz
mov
scas
push
sbb
fists
movsb
int
cmp
jle
neg
push
fisubrs
and
outsl
sbb
lock
sbb
adc
mov
mov
sti
dec
sbb
dec
push
inc
pop
cwtl
mov
sub
push
mov
fsts
pop
cmp
push
fsubrs
js
imul
mov
mov
pop
popa
dec
or
std
dec
es
push
rclb
cmp
jnp
sub
or
outsl
shl
and
mov
das
jge
and
sub
adc
inc
aaa
aam
dec
dec
cltd
out
data16
xor
jns
ret
push
fcompl
fisttpl
and
cmp
dec
iret
push
mov
push
dec
shl
push
xor
popf
cmp
stos
lret
pop
dec
sbb
repnz
inc
cmp
clc
je
icebp
out
or
fsubr
pop
jo
inc
lea
les
xorb
xlat
and
hlt
arpl
ljmp
mov
das
dec
xor
pushf
pop
ss
push
test
hlt
idivl
sub
call
outsl
sbbb
sar
inc
js
or
or
dec
mov
aaa
repz
sbb
mov
sahf
leave
dec
ja
mov
lds
pop
dec
iret
xor
jg
inc
call
dec
jne
gs
jg
sbb
outsb
jl
out
mov
stos
sub
push
jb
push
xor
cltd
jne
rclb
stos
add
ja
sbb
jl
je
ret
clc
push
xlat
test
or
mov
pop
scas
sahf
xor
xchg
inc
testl
addl
aaa
push
adc
int
xlat
mov
ja
lret
cmp
adc
mov
shl
sub
popa
pop
inc
ror
and
test
or
jnp
or
mov
pop
sub
mov
loop
test
mov
xchg
pop
pusha
gs
repnz
jne
popf
push
cmp
inc
push
scas
movsb
pop
or
push
jg
out
bound
xor
jp
and
xor
rol
add
aam
inc
in
cld
enter
xlat
xchg
sbb
pop
adc
xor
jl
push
adc
movsb
sbb
loope
mov
bound
lock
mov
pop
push
loope
ja
les
fnsave
inc
je
add
rorl
and
sbb
or
inc
push
mov
jo
xchg
pop
xor
push
xchg
cwtl
push
scas
sbb
cwtl
push
dec
loop
xchg
bound
push
push
adc
pop
adc
mov
add
pushw
mov
dec
sub
sahf
push
mov
fs
add
lret
adc
out
inc
xchg
mov
lock
mov
repnz
pop
sbb
or
mov
or
adc
iret
in
enter
xchg
fmull
or
test
push
pop
mov
xchg
aas
mov
ror
xor
and
fcomps
mov
inc
push
jbe
adc
cmpsb
je
xchg
scas
pushf
cmpsb
outsl
adc
mov
or
mov
out
xchg
adcl
jb
mov
jecxz
mov
dec
ljmp
jg
cmp
jecxz
adc
pop
sar
dec
icebp
xchg
mov
pushf
cwtl
test
notb
adc
repz
ljmp
jo
mov
stos
mov
jge
inc
xchg
xchg
fistps
mov
mov
jge
fstl
out
jp
sbb
add
push
hlt
sarb
xor
mov
push
stos
add
mov
mov
xor
daa
push
cmp
mov
push
cmpsb
test
lret
inc
es
mov
cmpl
push
stc
or
cli
or
repz
pop
mov
cli
negb
test
sbb
push
jo
cmp
jge
cs
fs
pop
sub
push
mov
out
pushf
jecxz
lods
ret
andl
popa
mov
mov
jo
sti
xor
mov
xor
adc
or
or
and
repz
inc
push
pop
xchg
lods
or
mov
repnz
xchg
jnp
bnd
push
cld
push
xlat
pusha
push
iret
add
aaa
jnp
mov
and
cltd
inc
das
xchg
xchg
lret
ljmp
fwait
leave
aam
xchg
mov
cs
les
jl
sub
out
cmp
nop
mov
int
lea
sbbb
jns
xchg
mov
xlat
fsub
clc
lret
sahf
into
clc
out
arpl
push
mov
aas
xor
mov
add
xchg
mov
and
loope
or
mov
out
cmp
out
cs
jl
pop
cmp
addr16
shrl
mov
cmpsl
mov
es
adc
in
sbb
push
icebp
mov
push
movsl
outsb
loopne
cwtl
jl
inc
stos
hlt
add
bound
cmp
lods
aas
andb
and
xor
inc
mov
sbb
add
xchg
push
lret
or
stos
push
fadds
icebp
fs
cmp
bound
dec
sahf
incb
pop
mov
push
loope
dec
jecxz
sbb
dec
jo
dec
add
mov
dec
jo
sbb
movsb
scas
es
jp
addr16
stos
out
test
lret
push
icebp
or
mov
adc
sti
sub
push
lret
jno
xor
mov
in
adc
sub
clc
mov
fsubs
shlb
jno
les
ficoms
bound
cmpsl
rcl
xchg
cmc
xchg
fldcw
adc
xchg
xchg
cmpl
jmp
mov
mov
aam
dec
mov
adc
inc
popa
cs
outsb
mov
stos
xlat
xchg
loop
pop
subl
ffree
pop
cs
into
adc
mov
loopne
and
daa
andl
jo
comiss
push
push
xchg
shrl
mov
inc
jmp
sub
inc
push
xor
std
sub
lret
rclb
push
xchg
ret
add
push
pop
iret
movsl
insb
add
jbe
pop
jno
fs
sbb
jecxz
repnz
subl
jo
shll
lods
or
filds
adc
out
repnz
cs
jnp
dec
scas
dec
cltd
jns
cmpsb
cli
ret
lods
addr16
repz
aas
jle
lds
int3
in
enter
cmpsl
fdivrp
daa
push
stos
inc
int
out
adc
divl
push
inc
fbld
inc
aaa
jp
movsl
lcall
pop
ljmp
test
inc
in
popf
jne
mov
jne
cmpsb
cmc
cs
xor
adc
jb
pop
or
sub
test
mov
dec
xor
xchg
push
xor
push
sbb
pop
push
gs
mov
inc
loop
or
pop
dec
push
pop
sub
in
xor
inc
cmpsb
fidivl
in
mov
in
sbb
or
mov
cmp
fistpl
dec
imul
rcrl
mov
adc
adc
push
into
les
sbb
aad
xchg
inc
fstpl
nop
jnp
xor
or
jp
fisttpll
sbb
mov
cmpsl
lret
xor
lods
cmpsl
sti
movsl
repz
ljmp
ret
sub
or
cmp
movsl
repz
and
sbb
inc
imul
cmpsb
or
mov
mov
daa
ds
sbb
cld
xor
test
shl
xchg
adc
imul
cmc
jno
xchg
dec
imul
lahf
mov
not
je
sbb
xorb
fwait
dec
imul
fisttps
scas
dec
inc
sbb
cmp
insb
movsl
out
push
mov
das
and
and
cmp
ret
cs
loop
xor
aaa
subb
push
mov
outsl
fstl
mov
cmp
outsl
xchg
jb
inc
ficompl
jne
xchg
loop
in
sub
rcl
inc
lods
xchg
rcll
adc
test
mov
mov
mov
or
push
lahf
cmc
sub
xchg
shlb
mov
inc
push
inc
call
into
mov
jbe
mov
je
adc
add
sbb
mov
push
sub
sbbl
adc
mov
jns
mov
fs
testl
lret
add
jmp
daa
aas
jp
rcl
aas
loop
fimull
arpl
cwtl
jmp
jbe
dec
dec
add
lea
imul
pop
gs
jae
cmp
arpl
movsb
leave
repz
jne
and
xor
rcrl
xchg
sub
xchg
hlt
shr
xchg
xchg
pop
add
mov
jmp
pusha
sub
cli
cmp
pop
or
jno
push
mov
sbb
mov
test
pop
loop
mov
iret
sbb
jge
push
sbb
add
dec
lock
sbb
xlat
push
shl
dec
out
jae
xchg
and
pop
call
push
pop
out
fists
xchg
mov
cmc
iret
fidivs
ret
cltd
leave
cs
fwait
pop
icebp
add
movsb
cmpsl
mov
xchg
cltd
add
outsl
dec
xchg
mov
mov
daa
lock
mov
push
rcll
jb
imul
adc
add
push
pop
lods
ret
out
push
sti
imul
and
fdivr
or
mov
cmp
scas
sub
in
dec
jp
mov
bound
decl
fnstsw
aad
fwait
mov
out
mov
adc
fdivrs
es
std
push
pusha
or
sarl
insb
xlat
dec
cwtl
test
dec
xchg
movsb
push
adc
sbb
aas
sbb
in
mul
fadd
fcomp
pop
pop
pop
xchg
nop
dec
and
cmp
imul
icebp
int
mov
jo
and
pushf
xor
xor
mov
ficoml
enter
inc
out
dec
int3
in
orl
stos
inc
idivb
jecxz
push
pushf
mov
rorb
sbb
cs
pop
and
jle
pop
fidivrs
adc
scas
lods
mov
mov
aam
jo
and
cwtl
or
mov
xchg
loop
push
sub
push
sub
imul
or
jge
adc
hlt
mov
pop
cmp
mov
in
sbb
push
xor
mov
cmp
sub
cli
xchg
into
jg
sbb
das
jmp
push
fidivrl
inc
or
stc
xor
test
jle
add
in
call
lods
jb
xchg
sahf
xchg
ret
in
xlat
mov
stos
fcmovb
lahf
adcb
adc
push
enter
roll
inc
cmp
int3
add
xor
sbb
push
xchg
cmp
adc
add
jbe
ret
inc
adc
and
pop
mov
jge
dec
rcrb
test
sahf
adc
sbb
sbb
cltd
rolb
mov
cs
cmp
pop
es
aam
dec
jae
in
mov
mov
jns
aas
shrb
imul
lret
pusha
test
pusha
xchg
out
not
inc
test
mov
ret
je
push
in
jle
and
pop
sub
pop
repz
jnp
and
jmp
mov
aas
jb
das
pop
repz
stos
enter
mov
push
js
jnp
insb
icebp
xchg
movsl
mov
inc
cmp
loope
push
roll
mov
fbld
mov
movsb
pop
ret
nop
decl
js
push
sbb
stos
jo
xor
scas
aad
adc
cmp
push
and
mov
std
shrl
jle
loopne
les
fwait
cmp
ds
xor
jnp
popa
cmp
daa
fisubrl
mov
sarb
lcall
sub
flds
xor
push
pop
jae
push
cltd
imul
lods
icebp
aam
pop
lcall
ljmp
push
int3
out
shrb
fldt
dec
pop
mov
inc
test
lock
faddl
xchg
mov
les
sti
push
mov
imul
bound
mov
mov
daa
sub
dec
dec
inc
inc
push
sbb
cmc
jae
push
movsl
ret
add
add
sbb
and
push
xor
rcrl
lret
push
outsb
push
add
int3
lea
jnp
xchg
and
imul
dec
xchg
les
in
hlt
sbb
ja
mov
fcmovnbe
pop
jno
mov
pop
loopne
inc
outsl
mov
cmp
hlt
addr16
bound
mov
fs
pop
in
adc
inc
sub
into
cli
cmp
push
xchg
xor
lret
stos
cmp
sbb
jnp
inc
sub
test
pop
adc
repz
jno
shrb
and
das
rorb
cld
push
push
insl
arpl
pop
dec
xor
push
popf
fisubrl
mov
sub
xchg
xchg
dec
test
rol
pop
xchg
gs
and
xchg
xor
ljmp
andl
xlat
pop
neg
sarl
test
sbb
mov
sub
xchg
xchg
pusha
bound
into
lods
add
xchg
sbb
dec
and
ja
ds
lret
inc
mov
in
add
xor
shlb
pop
jmp
jno
pop
xor
fbld
mov
sbb
fiadds
dec
dec
fwait
adc
pop
lret
and
mov
shrl
and
pop
fldenv
mov
adc
inc
mov
imul
add
dec
push
ja
mov
fisttpll
std
cmp
cmp
sbb
std
jg
ret
sbb
in
xchg
js
addr16
imul
fidivrl
rcr
cli
sub
mov
aam
push
mov
lds
sbb
push
insb
int3
int3
jle
add
mov
mov
pop
mov
jp
fnstsw
dec
movsb
aaa
or
xor
sarl
scas
mov
pop
adc
nop
jno
nop
leave
insb
dec
cmp
fstpl
out
pushf
pop
inc
inc
not
or
sahf
cmp
fidivs
out
or
mov
in
jo
inc
pop
mov
scas
pop
loope
lock
and
call
pop
mov
fbld
fldenv
or
sub
ja
adc
fs
sub
sub
mov
int3
pop
scas
daa
pop
mov
scas
imul
mov
or
test
or
insb
mov
inc
cld
and
test
push
jbe
scas
jne
xchg
sbb
sub
add
mov
sbb
add
in
jmp
dec
mov
ret
rcrb
loopne
ja
ret
ljmp
fs
or
daa
fwait
cmpsl
lret
push
int
stc
js
xor
in
in
negl
push
int
cmp
rcrl
mov
mov
ss
outsl
lds
in
push
je
xorb
rclb
adc
push
ss
out
fucomip
cwtl
xor
fdivrl
jnp
jnp
pop
adc
xchg
sbb
mov
fcomps
or
sbb
scas
or
hlt
pop
jbe
mov
sub
mulb
pop
inc
and
mov
inc
lret
mov
cmp
jl
cmp
roll
xor
xor
or
dec
xor
xchg
mov
subl
loopne
lcall
jb
subl
ret
mov
cli
test
jl
movl
pop
push
add
in
jmp
hlt
cmp
test
lret
jg
sbb
inc
push
mov
loop
daa
add
lcall
pmaxub
rcrl
lea
outsb
jne
hlt
out
inc
js
hlt
lods
push
mov
and
popa
pop
xchg
xchg
jne
inc
pop
or
sbbl
lock
jp
imul
dec
dec
outsl
inc
mov
mov
cmpb
in
fcmovnb
mov
aaa
xor
xchg
shll
bound
scas
sbb
enter
push
fildll
inc
xchg
fsubs
es
sub
pushaw
mov
add
add
xchg
sub
dec
adc
push
gs
add
leave
adc
rcrb
sub
divb
dec
mov
sub
fs
ljmp
fwait
loop
insl
mov
pop
xchg
inc
or
lods
dec
orb
addr16
add
inc
xchg
cld
push
inc
cmp
sub
in
jg
int
fildll
imul
dec
aam
and
aam
stos
push
inc
mov
xchg
sbb
xlat
scas
sbb
sbb
jg
pop
aaa
push
push
jmp
or
push
int
cmpsl
scas
mov
aas
es
popa
jnp
shrb
or
scas
incb
mov
sbb
push
out
and
pop
test
dec
pop
addl
jno
imul
adc
jae
pushf
xlat
push
in
enter
bound
or
cmpsl
or
pop
cwtl
mov
add
das
lods
pusha
mov
and
pop
adc
js
out
adc
lcall
nopl
mov
dec
mov
push
repnz
cmpb
xchg
xchg
jmp
sub
jb
fs
mov
pop
sbb
mov
sub
jae
push
aam
js
loope
and
mov
or
inc
leave
push
fwait
cmc
fs
andl
shrb
ss
mov
scas
jae
xor
je
mov
add
test
adcl
test
pop
and
test
xor
xlat
enter
loopne
xchg
sub
adc
aaa
cmp
inc
sub
cmpsl
dec
xor
out
pop
notb
sub
pushl
ret
fwait
call
rorl
xchg
imul
push
pushf
stc
jo
mov
cltd
popf
cltd
jge
ljmp
pop
xchg
cmp
jo
cmp
push
cmpsb
adc
push
mov
jo
mov
nop
pop
mov
in
insb
push
push
aad
mov
call
sub
jb
adc
loop
imul
fsub
dec
lods
mov
cwtl
pop
mov
cmpsb
cli
gs
hlt
mov
cmp
int3
push
cmp
fisttpl
stos
jnp
pop
push
loope
daa
or
dec
inc
inc
in
adc
fidivrl
xchg
adc
jns
xchg
cmp
mov
jl
jg
subb
jns
inc
dec
ds
pop
or
rcrl
jecxz
adc
lret
lods
cmpsb
mov
push
stos
aaa
aas
bt
adcl
inc
mov
xchg
cmp
jne
mov
xchg
push
bound
pusha
dec
jns
push
push
cs
lods
dec
sub
jns
test
repnz
rolb
in
mov
outsb
cs
mov
sub
cmp
pop
jmp
jno
scas
cmp
or
xlat
shlb
ficoms
push
cmp
ja
lods
cwtl
nop
out
data16
rcl
pop
cli
out
push
testb
push
adc
addr16
minps
inc
jecxz
mov
cltd
outsb
mov
push
push
gs
div
cmc
cwtl
mov
mov
test
sbb
imul
push
lret
lret
pushf
inc
repnz
rcrb
xor
fldcw
out
cmp
xor
out
icebp
ret
mov
lock
push
add
lret
sbb
pop
sbb
xorb
add
pop
das
jo
mov
bound
pop
pop
push
add
outsl
scas
jb
stos
cltd
xlat
pop
icebp
fwait
scas
sub
pop
push
mov
cmp
clc
shll
aam
xor
inc
and
mov
push
ljmp
mov
xchg
push
push
imul
mov
fs
inc
xor
push
mov
mov
or
into
test
sub
jmp
stos
lea
lret
jge
call
xchg
cmovs
jae
lock
movb
cmp
fs
imul
test
mov
icebp
jp
cli
sarl
in
push
lret
push
mov
add
mov
inc
roll
mov
sar
lea
jmp
push
jmp
test
dec
aam
pusha
sti
outsl
or
imul
push
daa
push
insb
sub
ja
sbb
mov
mov
jle
xchg
cli
lcall
cmpsl
sub
jecxz
into
int
or
ja
cmp
les
jge
leave
inc
cmc
xor
sub
ficoml
dec
test
ja
sti
add
mov
push
add
push
cmpsb
ds
pop
push
push
and
jns
sub
jns
vpaddw
int3
mov
xchg
mov
pop
scas
mov
jns
cmp
jbe
mov
mov
xor
mov
jbe
pop
lock
in
iret
cwtl
sbbb
jmp
icebp
xlat
in
popa
or
lahf
mov
out
or
push
adc
pop
mov
pop
dec
mov
push
push
imul
add
cmp
push
add
in
push
sbb
leave
xor
iret
inc
xchg
ljmp
out
bswap
dec
ss
mov
pop
xchg
daa
std
pop
adc
ja
into
imul
sarl
sbb
xchg
mov
fidivrl
sahf
rcll
addr16
jp
xor
dec
mov
add
int3
addl
and
iret
outsb
xchg
inc
pop
jne
jmp
jae
notb
jae
jmp
mov
addr16
imul
ss
aas
adc
pop
orb
lret
outsb
fidivrl
shrb
and
daa
xorb
dec
pop
pop
dec
mov
mov
popa
es
mov
mov
pushf
jb
cmpsb
ja
ret
cmp
out
stos
add
add
ss
int
outsb
icebp
sbb
dec
aas
lret
iret
mov
sbb
jge
push
xor
dec
stos
sub
xlat
lret
mov
insl
std
lcall
push
mov
add
sbb
inc
add
add
cmp
pusha
mov
jbe
cmc
test
mov
sub
xor
les
xor
sub
and
repnz
aam
cmp
stos
jns
jbe
inc
sub
or
mov
inc
aam
jmp
dec
ds
fnsave
lods
imul
xchg
and
mov
sbb
and
xchg
mov
sbb
sub
push
mov
cmp
arpl
inc
aad
sbb
popf
lock
mov
xchg
pop
lds
fistl
xor
xor
push
xchg
jno
pop
stos
cmp
jp
shll
mov
ret
add
mov
stos
mov
cltd
ret
cli
adc
lret
inc
push
lds
cwtl
ja
ljmp
or
scas
aaa
repz
jae
dec
dec
pushl
ljmp
or
mov
mov
subb
cld
arpl
scas
popf
add
imul
mov
ret
push
pop
test
mov
ss
mov
xor
movsl
and
mov
push
mov
jp
icebp
jne
out
push
and
sbb
es
push
dec
int3
pusha
cld
cmp
jne
popf
mov
lcall
adc
test
out
jecxz
jo
repnz
mov
dec
xor
rep
pop
in
out
inc
lcall
popa
sub
add
stc
cmp
sub
and
sbb
push
push
das
push
cli
cltd
add
movsb
pop
dec
and
aaa
push
or
cmp
mov
mov
or
xchg
movl
xchg
out
aam
mov
movsl
data16
fcomi
outsl
jp
mov
insl
sbb
aaa
or
mov
mov
pop
cmp
jbe
inc
mov
mov
or
movsl
scas
push
in
inc
int
dec
mov
pop
sub
dec
popf
stos
sti
xor
sub
push
adc
mov
fsubrp
or
icebp
mov
adc
sub
xchg
es
sub
jo
sub
iret
imul
inc
es
mov
jp
sbbb
mov
sbb
jg
jle
imul
enter
imul
test
or
mov
inc
jnp
in
mov
and
or
rorb
andl
mov
fldenv
nop
insb
jno
xchg
paddd
popf
pop
mov
adc
pushaw
jno
cwtl
mov
push
test
mov
push
aas
lds
ret
fiaddl
xchg
jl
lds
cmp
jg
or
popf
ja
clc
das
mov
dec
aas
iret
sbbl
lock
add
pop
jno
pop
or
stos
pop
jo
lea
lock
xchg
dec
aaa
cmp
xor
add
pop
or
fwait
mov
sbb
aad
loop
enter
in
mov
lods
stos
shl
inc
dec
rcl
cwtl
call
adc
cmp
pop
xor
jae
outsb
cs
inc
push
jae
xor
cmp
add
or
xchg
mov
fdivl
fsubr
jne
push
test
dec
jno
dec
sbb
adc
mov
cmpsb
push
mov
iret
popf
xlat
mov
adc
jle
enter
pop
add
ja
add
daa
mov
icebp
fsubr
sbb
sti
xchg
in
stc
idivl
fwait
inc
push
jmp
fiaddl
cwtl
shlb
push
ret
divb
or
nop
testl
scas
popa
xchg
enter
mov
mov
jae
out
cmp
cltd
xchg
fisttpll
pop
int3
iret
xchg
sub
xor
cmpl
data16
and
lea
mov
jo
mov
xor
add
sub
push
push
mov
jle
mov
movsl
in
push
mov
stos
jge
out
sbb
enter
and
ficoms
popf
out
jb
roll
mov
test
popa
cmc
sahf
mov
add
sub
adc
add
call
mov
jecxz
xchg
xor
loopne
aas
and
movl
cmp
aam
xchg
xchg
enter
sbb
lock
subb
xor
mov
lods
pop
and
sbb
pop
dec
mov
or
and
out
sti
daa
or
or
jno
dec
cmp
xchg
jl
repz
mov
add
pop
xchg
xchg
lahf
cmp
push
dec
test
arpl
push
mov
or
clc
pusha
fs
or
mov
stos
cmp
rolb
cmp
xchg
push
test
adc
jg
mov
jbe
mov
rorl
aaa
pop
mov
mov
popa
ret
mulb
and
leave
pop
std
sbb
jl
in
push
lods
mov
aas
add
loop
cltd
pop
leave
test
adc
cmc
or
rclb
jle
or
lret
xchg
push
repz
jae
jmp
sbb
sbb
cmp
mov
dec
test
xor
cmp
push
cmc
inc
repz
or
pop
mov
mov
sub
mov
gs
sbb
loop
push
push
push
sti
or
imul
les
bound
inc
imul
dec
decb
cmp
out
adc
xchg
scas
mov
push
xchg
sub
or
sub
arpl
or
fnclex
fdivrs
jae
mov
lahf
fimuls
lahf
cld
mov
mov
cmc
or
in
and
mov
sub
stos
rcrl
and
cmp
pop
mov
or
push
imul
push
decl
pop
nop
dec
sub
sti
repnz
xchg
add
cmc
cmpsb
push
lods
shr
ljmp
sbb
stc
cmpsl
das
xchg
adc
fwait
insl
cmpsb
jbe
inc
push
or
test
sub
mov
xor
push
adc
and
ficomps
jp
add
inc
mov
mov
and
xchg
outsl
pop
dec
scas
or
loopne
ljmp
push
inc
in
or
push
sbb
in
push
jnp
shll
andb
dec
pop
int3
mov
mov
dec
xlat
lock
mov
daa
mov
ds
and
push
popf
mov
fsubl
push
fiadds
jge
jmp
jbe
xchg
loopne
mov
fcompl
insb
jnp
mov
pop
mov
mov
data16
inc
cvttps2pi
insb
jge
scas
adc
sbb
pop
test
outsl
pop
inc
push
mov
xchg
clc
cmpsl
mov
dec
mov
pop
lods
mov
hlt
popa
cmp
call
sti
js
out
mov
and
ss
sbb
addr16
push
and
cltd
jge
in
fmull
jl
mov
mov
fucomi
jg
out
bound
in
jne
movsl
mov
rol
subb
jns
ffreep
or
stos
hlt
adc
orl
fisttpll
pop
and
insl
js
mov
add
cmpsb
repnz
add
dec
cmp
dec
popf
test
sarb
jge
rcrl
movb
cwtl
dec
sub
repz
jl
jne
and
mov
jecxz
xchg
cmp
mov
divl
add
mov
int
cwtl
jns
add
cli
dec
xor
mov
shlb
inc
inc
ret
push
popa
xor
sbb
mov
jb
adc
pop
jbe
gs
out
das
dec
popa
mov
ljmp
mov
mov
lret
lret
aaa
mov
or
cld
pop
pop
mov
fldt
push
and
dec
or
push
test
mov
aas
lret
stos
test
and
mov
les
hlt
imul
cltd
cmpsb
push
sbb
push
ret
jl
in
xlat
jbe
sahf
mov
cmp
mov
xor
jbe
fdivrs
cs
xchg
call
mov
addr16
int
xor
and
arpl
dec
or
jnp
int
sub
daa
lock
push
lcall
jge
push
sahf
fstl
jle
push
jp
dec
call
mov
lea
lret
pop
xor
sub
lcall
in
jle
not
adc
cmp
repnz
sahf
sub
ficoms
fs
call
cmp
pop
sbb
and
sub
xchg
add
daa
sub
jecxz
or
out
and
mov
jle
icebp
aam
push
pushf
xor
xchg
xchg
jae
mov
cwtl
pop
lds
aaa
scas
mov
xchg
add
jmp
call
mov
fnstsw
test
push
or
or
shlb
aam
mov
aaa
stos
xchg
dec
dec
je
in
lock
dec
push
daa
stos
push
mov
fmul
inc
testl
mov
jg
mov
je
dec
test
inc
lcall
loope
sub
mov
rorb
or
aad
rsqrtps
ljmp
xchg
std
subb
push
and
mov
sub
cmpl
or
shrb
xor
popf
pop
frstor
les
jbe
movsl
mov
add
push
xchg
cld
mov
or
pop
adc
in
jmp
out
mov
lret
sub
xor
icebp
mov
in
jbe
je
dec
mov
xchg
sbb
cmp
or
and
pop
jbe
jbe
jbe
jo
enter
test
inc
xchg
and
push
mov
push
pop
push
xor
std
lcall
ds
jnp
enter
sub
and
inc
loop
mov
adc
decl
inc
enter
notl
xlat
fnsave
fidivrl
add
out
test
sub
xor
jl
fs
fildl
hlt
shll
jbe
out
and
pop
xor
dec
out
stos
insb
mov
int
ret
cltd
inc
fistl
jle
inc
sbb
ja
xor
add
or
sub
adc
mov
xchg
xchg
mov
ja
call
jmp
inc
xchg
sbb
mov
insl
push
xlat
inc
sub
xchg
int
inc
dec
push
add
jne
jg
or
mov
push
test
shl
xor
push
cmpsb
enter
xchg
jb
test
cmpsl
add
mov
sub
pop
fcoml
dec
pushf
mov
rcrl
inc
cmp
adc
out
popf
sbbb
jb
mov
pop
out
sub
mov
ja
push
js
pop
mov
and
pop
inc
jge
add
and
mov
sti
dec
cmpsb
inc
arpl
js
add
cmp
mov
insl
decl
or
inc
pop
pop
xor
cmp
push
ret
and
xor
rcrl
dec
fwait
sahf
cmp
and
mov
adc
pushf
adc
js
in
mov
pusha
out
sub
mov
fucom
sub
sbb
shll
sbb
insl
pop
test
fidivs
sub
add
cmp
push
iret
mov
daa
popf
aaa
and
push
push
push
subl
je
mov
mov
adc
or
data16
mov
xchg
or
inc
jl
xchg
xor
xor
jle
jno
mov
cmp
nop
sub
cli
cmp
lret
mov
cmp
pop
fisttps
sub
fstl
pop
insb
xchg
nop
cmpsl
push
and
push
jno
iret
pushf
push
std
or
xor
test
loopne
icebp
mov
xchg
in
adc
dec
jge
imul
stos
std
push
mov
mov
ds
mov
lods
insl
das
ret
dec
dec
xlat
fs
fmuls
and
inc
pusha
cmp
adc
xchg
cmpsl
sub
jnp
or
sbb
xchg
xor
stc
inc
imul
jbe
xlat
addb
shlb
in
adc
pop
sahf
or
add
jns
test
out
jb
test
jl
aas
incl
pop
imul
repz
das
xor
hlt
mov
test
xorl
sub
mov
sbb
mov
add
int3
jne
into
fisubrl
insl
push
ss
out
jg
mov
sbb
hlt
mov
aas
insb
test
mov
pop
lock
sbb
out
cld
mov
cld
cs
inc
fcompl
push
mov
jge
imul
push
test
loop
push
je
xor
inc
inc
cmpsl
out
jl
rorb
cli
jp
jmp
cmpsb
dec
pushf
addr16
cli
orl
sbb
test
cwtl
dec
ss
rclb
dec
addr16
adc
cmp
popa
and
dec
cltd
pop
push
popl
outsb
and
xchg
bound
mov
dec
repnz
sbb
lcall
cmc
add
pop
mov
es
out
hlt
cld
pop
in
push
mov
aad
call
mov
cmp
xorl
lds
cmove
lahf
cmp
movsb
sub
loope
pop
fistpll
or
dec
adc
adc
pop
sbb
divb
pop
insl
imul
sub
cltd
dec
ret
jo
inc
push
cmp
or
and
jbe
inc
hlt
or
popf
jmp
out
mov
test
jle
mov
sub
add
jns
or
pop
sub
add
jecxz
aas
xor
addr16
jnp
xchg
mov
je
xor
mov
push
movsb
mov
int3
jp
test
xor
xchg
sub
or
cmpsb
test
push
mov
jg
imul
dec
enter
shrb
insb
xlat
addl
dec
imul
mov
or
pusha
pop
mov
dec
scas
leave
lahf
lods
or
pusha
insl
adcl
jne
in
cmpsb
in
sbb
daa
movsb
lret
jnp
mov
push
push
jne
jnp
int3
jle
test
xlat
push
subb
lods
addl
sti
es
test
inc
add
fmul
pop
fs
or
sub
insb
mov
lret
or
rol
movsl
cmp
sti
sbb
out
jb
test
loop
jl
and
dec
mov
lahf
jmp
lahf
shrb
push
lret
aaa
insb
xchg
inc
popa
mov
pop
and
pushf
rclb
fstpt
dec
aaa
cld
dec
and
js
rcrb
lret
and
add
sbb
inc
adc
jno
add
jne
dec
bound
fs
enter
pop
cmp
or
js
xor
xchg
dec
pushf
add
jns
xchg
mov
fldenv
push
xchg
imul
lods
sarb
mov
icebp
bswap
loope
adc
shlb
mov
push
out
scas
loope
pop
mov
aad
jp
adc
movsl
adc
xchg
arpl
jmp
push
jl
mov
jecxz
bound
push
sahf
mov
xchg
je
add
cmpsb
psubd
sti
adc
test
loopne
mov
sbb
loop
scas
sbb
push
cwtl
dec
into
xor
sub
shrb
mov
xlat
mov
cmpsb
rcrl
jge
out
jb
mov
xor
mov
ljmp
icebp
xchg
sahf
adc
xchg
in
into
xor
push
lcall
pusha
cli
adc
jno
nop
jae
mov
insb
iret
gs
iret
pop
stos
call
sbb
ja
xor
test
inc
std
pop
cmp
lods
dec
cli
inc
pop
hlt
roll
into
nop
repnz
add
insb
test
imul
out
mov
push
sub
jnp
fisubs
movsb
test
addr16
bound
mov
jae
pushf
cmp
rclb
hlt
lret
iret
scas
jmp
mov
aam
pop
int
mov
enter
pop
mov
insb
cli
das
xor
jge
sub
fs
fdivp
scas
push
push
cli
fstl
jmp
and
sbb
lds
push
add
cmp
push
aaa
pop
jno
xor
fisttpll
test
dec
repnz
jo
ss
arpl
push
xchg
shll
aaa
push
ljmp
arpl
or
pop
add
incl
insb
pushf
popa
jge
addr16
nop
jg
cld
jp
call
mov
push
mov
out
sbb
xchg
mov
fsubl
fcoms
rclb
es
sub
sub
adc
scas
sbb
sbbb
outsl
or
adc
mov
imul
xchg
fbld
stos
mov
mov
test
jbe
mov
adc
aad
divb
push
cmpsl
in
gs
test
ss
jg
push
jge
jle
daa
sbb
cmpb
cmpsl
outsb
jp
int
pop
movsb
jg
xchg
add
cs
loope
aad
xrelease
sub
int3
mov
inc
rcll
das
test
fldenv
push
or
or
pop
int
adc
adc
jmp
add
pop
daa
testb
pop
and
fsubl
imul
or
addl
xchg
add
mov
cmc
inc
repz
mulb
push
add
xchg
cmp
loope
jle
stos
jno
out
or
pusha
inc
mov
out
pop
movd
push
push
mov
mov
or
out
fucom
add
aam
cld
dec
je
xorb
jo
xor
ja
sahf
xchg
cltd
js
dec
adc
lahf
fst
dec
inc
pop
xchg
add
dec
xchg
ljmp
paddq
xor
cmp
gs
sub
pop
mov
loop
cltd
sbb
int3
loopne
aam
dec
cld
xchg
fcompl
mov
popa
and
sbb
mov
inc
ds
mov
mov
xchg
sub
repnz
or
mov
cmp
ljmp
xorl
inc
imul
fsubrp
and
pushf
sub
push
dec
stc
dec
sbb
jb
rolb
imul
jle
faddl
push
push
or
cld
loopne
adc
add
rcrl
in
icebp
xchg
pop
ss
adc
data16
jnp
ja,pt
fisubrs
popa
fwait
ret
fnstsw
fsubrs
fdivrs
icebp
sub
faddl
mov
test
xor
lret
test
scas
outsl
adc
cmp
xchg
push
clc
imul
push
and
cmpsb
repnz
jge
and
mov
sub
jp
sub
dec
int
rolb
test
enter
mov
imul
sub
sahf
mov
mov
enter
adc
push
std
out
ds
shlb
sbb
imul
mov
mov
mov
lcall
add
mov
ret
aad
outsl
cmpsb
stos
push
shl
fldt
scas
call
inc
push
int3
fidivl
and
mov
ret
xchg
push
jnp
mov
jmp
ljmp
rclb
out
test
faddp
mov
shll
arpl
cwtl
mov
fidivrl
sub
pop
mov
loop
sahf
rolb
cmp
aas
pop
inc
lods
inc
push
mov
stos
mov
fwait
icebp
lods
rorb
push
ds
not
ret
scas
pop
sbb
fiaddl
adc
xlat
jge
divb
mov
or
xchg
cmp
es
popf
lock
adc
sub
mov
outsl
inc
outsb
jp
mov
aad
cltd
ret
jp
sahf
fstps
jae
jmp
fiadds
mov
mov
push
cwtl
xchg
hlt
aaa
stc
ja
and
push
sarb
mov
cli
mov
push
inc
mov
iret
cltd
mov
je
push
in
add
pop
into
hlt
mov
lock
cs
lcall
push
in
fstpt
adc
jno
xorb
inc
popf
ss
ljmp
sub
stos
rep
imul
das
mov
xor
sbb
mov
mov
cmp
test
mov
in
in
in
jnp
dec
add
pop
fnstsw
ret
bound
sub
stos
fistpll
mov
and
sbb
mov
mov
or
sbb
jg
dec
adc
loope
push
das
and
cmpsl
dec
xchg
out
nop
test
lret
scas
repnz
test
push
mov
xchg
fstpt
mov
insb
and
fiadds
inc
fwait
mov
pop
iret
rdtsc
sbb
cmp
xor
xor
ret
dec
loop
xchg
mov
dec
jg
adc
mov
and
in
aas
lahf
popa
loop
pop
nop
adc
popa
mov
mul
cmp
je
or
dec
out
push
or
jnp
xchg
scas
pop
sub
adc
sbbl
sub
addb
fdivrp
xlat
in
repnz
dec
inc
leave
dec
push
and
pop
pop
stos
lcall
add
ja
xchg
ljmp
clc
movsl
cmp
push
sbb
sub
dec
sbb
jge
pushf
neg
xchg
imul
xor
adc
adc
aas
sbb
jmp
in
addl
dec
in
cmpb
mov
scas
xchg
xor
or
pop
mov
cmpsb
repnz
pop
iret
aam
fisubrs
and
push
pop
xchg
pop
cwtl
jl
lret
xlat
dec
mov
sbb
testb
out
shrl
cmp
iret
imul
popa
add
adc
or
js
or
push
inc
scas
pop
jg
out
xchg
pop
dec
or
outsb
mov
adcb
dec
sbb
es
mov
cwtl
add
add
shll
ret
sarb
sub
repnz
fists
aam
pop
hlt
bound
push
adc
fwait
popf
out
enter
mov
push
or
jbe
cli
cmp
or
push
mov
pop
in
je
cltd
call
sub
fbstp
out
xor
js
enter
pop
mov
dec
sbb
loop
jmp
cmp
into
push
sbb
pop
push
jbe
lret
popa
test
adc
mov
ds
sarb
sub
push
jmp
mov
aas
mov
add
dec
ss
xchg
daa
stc
aam
xor
mov
mov
or
lods
ret
pop
or
aad
mov
shlb
movsl
cli
and
test
int3
iret
loopne
fdivl
pushf
push
loope
mov
jae
call
jecxz
insb
dec
pop
xchg
jb
ret
jo
and
cmp
inc
inc
in
sub
mov
pushf
ljmp
adc
and
pop
sub
aam
jns
xchg
push
inc
mov
stos
popf
cmc
cli
sub
mov
dec
je
xchg
fldl
mov
mov
movsb
cmp
xor
jge
or
pop
ds
lods
divb
xor
xor
add
xor
fs
mov
cltd
xorb
push
add
mov
loope
jle
lea
daa
lahf
mov
jne
inc
adc
arpl
mov
cmp
test
add
inc
flds
test
stos
gs
sub
ss
in
scas
xor
in
pop
icebp
popf
cmp
outsl
shl
or
aad
xchg
inc
outsb
add
jmp
mov
xor
push
ficomps
out
cltd
jns
mov
xchg
into
cmp
push
xor
js
int3
cs
cltd
stos
and
or
ja
cmp
das
decl
cld
push
test
xchg
imul
outsb
insl
pop
fists
mov
mov
cmc
adc
push
in
imul
pop
push
ds
movsb
int
sbb
add
cmpsb
xchg
in
add
cmp
push
or
stos
ss
jp
loop
sub
pop
sub
movsb
adc
and
shl
jle
adc
enter
cmp
or
outsb
mov
jnp
jb
sbb
inc
sbb
popa
push
loope
pslld
mov
jbe
je
xchg
push
mov
xchg
decb
das
xchg
mov
pop
xor
mov
cmp
movsb
push
cmpsl
dec
jns
jae
xor
xchg
jge
or
dec
jns
movsb
mov
mov
xchg
adc
jle
in
jno
inc
xabort
movsl
stos
adc
sub
xor
rclb
cld
jl
pop
hlt
adc
ret
push
or
mov
cmp
shrb
mov
dec
out
rcrb
inc
jnp
sub
push
cli
or
ret
pusha
jmp
push
in
xchg
inc
dec
enter
out
and
cmp
jne
fistpl
stos
inc
sub
xor
icebp
arpl
cmp
jbe
aas
icebp
arpl
lret
aad
mov
inc
or
pop
push
mov
inc
xchg
popf
bound
push
iret
add
popa
inc
push
cmpsb
dec
pop
xchg
insl
pop
sbb
rcrl
sti
addr16
jo
sub
leave
imul
test
addr16
jge
mov
outsb
push
pop
sub
test
shlb
psubd
filds
cmp
dec
sub
jg
inc
fidivrl
cltd
rorb
xchg
cmp
test
cmpsl
xor
incb
xchg
sub
notb
push
dec
clc
outsb
adc
fisttpll
test
lret
push
test
insl
pop
lock
aas
repz
jo
enter
jg
gs
sbb
jnp
movsl
adc
inc
fsubl
js
jl
lahf
stos
pop
cmp
xchg
js
push
jg
xchg
or
cmpsl
push
cmpsl
movsl
sub
push
sbb
mov
bound
push
and
rorb
push
cld
jae
mov
pop
fsubrl
mov
pop
insb
mov
inc
lods
sbb
loopne
ffree
jns
xchg
lcall
dec
arpl
shll
or
xchg
push
scas
sub
xor
add
jae
imul
into
and
pusha
aas
adc
stos
jno
leave
hlt
pushf
movsl
dec
inc
sbb
mov
mov
xor
ficoms
out
cltd
hlt
mov
mov
cmp
and
and
mov
popa
cmp
mov
addr16
test
imul
movsl
mov
leave
lock
cli
or
xchg
inc
decl
push
lods
in
push
fcomps
pop
pop
mov
test
cs
ds
pop
or
xchg
add
xchg
sbb
aam
sbb
sarb
push
shll
adc
mov
in
js
ljmp
inc
clc
push
pop
push
xor
mov
cmp
push
push
dec
xor
xor
dec
or
scas
jl
outsl
push
pop
push
push
xchg
imul
stos
mov
push
aas
cmpsb
jno
mov
data16
aas
jne
andl
pop
xor
pop
xlat
pop
movsl
ret
inc
or
push
sbb
and
ds
xchg
cs
xchg
nop
dec
in
dec
out
mov
dec
xlat
in
incb
popf
push
rcl
push
or
sub
in
add
fnstenv
aaa
push
pop
dec
push
mov
ljmp
dec
xor
imul
fildl
ret
outsb
adc
xchg
mov
mov
insb
out
aam
add
sub
pop
mull
loope
mov
mov
push
fisttpl
xor
aam
mov
jg
popl
rolb
fdivrl
xchg
bt
stos
mov
push
and
sub
jne
orb
xchg
nop
push
xor
fwait
mov
dec
test
and
aam
cmpb
popa
insb
stc
cs
mov
add
sub
pop
sbb
sbb
mov
sbb
syscall
mov
mov
inc
jns
add
mov
or
sbb
nop
mov
lea
pusha
testb
pop
imul
mov
push
dec
imul
and
adc
imul
stc
and
iret
push
cwtl
outsl
movsl
mov
xchg
inc
pushl
dec
cltd
cwtl
dec
mov
jp
push
jle
pop
sub
daa
sti
pusha
jp
pop
nop
stos
aas
jl
mov
scas
and
cmp
rorl
dec
shlb
popf
mov
cmp
rcr
jle
loope
sbb
les
xor
jecxz
xchg
or
pop
push
out
orb
movl
and
and
cmp
mov
pop
daa
in
repz
inc
lcall
pop
andb
scas
out
dec
inc
inc
and
stc
xchg
je
shlb
push
xor
addr16
adc
pop
or
push
or
scas
xchg
scas
push
cmpsb
xor
stc
or
arpl
pop
push
aas
addr16
add
mov
mov
xor
flds
mov
mov
ret
jmp
mov
daa
adc
leave
add
ja
out
imul
imul
stos
xchg
arpl
push
das
out
cmp
fistpll
movsb
sub
negb
xchg
jno
jnp
jb
rorb
sub
pop
insl
xchg
jmp
jmp
cmc
xor
cwtl
rorl
mov
sahf
xor
out
push
outsl
or
mov
das
dec
ja
and
adc
jl
dec
and
sbb
xchg
mov
aaa
in
mov
sub
in
js
or
das
mov
or
jp
leave
ds
or
lds
pop
ss
mov
and
lea
mov
movsb
fwait
jns
aas
insl
je
lods
mov
enter
in
lcall
mov
push
out
pop
cmc
hlt
pop
lods
xor
xor
sti
fmul
mov
lret
out
movsb
mov
push
sbb
scas
xlat
xchg
subl
jp
pusha
cmc
sbb
jle
iret
loope
adc
add
jg
test
int3
jge
xor
or
scas
push
in
jp
ds
pop
mov
dec
out
sbb
mov
jbe
jmp
shlb
add
test
mov
sbb
mov
sti
mov
cmp
fiaddl
xor
sbb
inc
dec
jbe
push
pop
pop
loope
aas
lds
mov
subl
mov
test
out
xchg
jns
cmp
mov
test
and
push
jns
mov
add
lea
xchg
in
jne
pushf
cwtl
mulb
dec
mov
jp
jmp
pop
and
sub
inc
inc
fwait
mov
pop
outsl
jo
in
hlt
pop
add
lea
clc
push
mov
adc
inc
sub
arpl
jo
jnp
push
cmc
sub
imul
add
add
in
push
test
jb
pop
dec
pop
xor
sub
cmp
fistps
incl
jns
push
mov
push
mov
fisttpl
jb
cld
arpl
add
mov
insb
add
xchg
xchg
push
lds
clc
cs
add
push
jmp
pop
push
and
push
es
in
mov
int
push
test
xchg
outsb
rorb
pushf
pop
sub
push
into
mov
sub
push
inc
cmp
aad
add
pushf
and
add
mov
orb
incb
pop
dec
pop
stos
mov
fucom
mov
insl
js
in
jnp
jb
mov
popa
and
add
sbb
repnz
out
imul
cmp
push
cmp
popf
rcll
pusha
pop
and
dec
push
inc
fistpl
push
push
or
ffreep
mov
scas
addb
dec
std
or
mov
push
push
cmp
sbb
cmp
or
notl
cmp
out
data16
and
cmp
mov
ss
rcll
ja
es
fmull
sub
jecxz
add
mov
dec
dec
dec
call
adc
jp
jo
xchg
fcoml
std
mov
sub
les
fmull
pop
mov
pop
xchg
loope
insb
nop
repnz
pop
dec
insb
or
mov
pushf
xchg
scas
add
ret
mov
ret
xlat
sbb
jmp
movnti
dec
sub
adc
adc
out
jg
mov
les
sbb
ret
cmc
or
mov
loope
pop
and
fisttps
pop
das
call
mov
int
fstl
mov
scas
push
repnz
xor
lret
fcompp
testl
add
jae
je
add
gs
ljmp
push
jle
testb
mov
mov
imul
outsb
ret
icebp
pop
sub
and
ja
movsb
mov
sbb
orl
fsubrs
xchg
icebp
mov
test
add
scas
push
lret
test
pop
inc
lock
addr16
jmp
xor
add
sti
adcl
cmpsb
inc
jne
lcall
lret
jmp
out
jno
mov
ja
sub
scas
xor
stc
sub
popa
push
fbld
jl
jmp
push
pop
mov
jnp
adc
mov
sub
or
lods
pusha
ret
pop
icebp
mov
dec
out
xchg
enter
popf
bound
cmp
adc
cmp
lds
push
cmpsb
xchg
mov
or
fwait
dec
mov
sub
jb
mov
and
xor
add
and
push
pop
and
ljmp
add
testl
cmpsb
mov
push
or
push
push
push
lret
lods
mov
pushf
fimull
shr
xor
mov
pusha
jo
adc
dec
cwtl
mov
out
add
scas
mov
imul
sub
lret
mov
aaa
in
push
pushf
cmp
dec
aad
out
inc
ja
repnz
ficoml
fs
push
stc
xor
sbb
lods
out
jle
and
sub
push
int
xor
test
jbe
mov
inc
pop
xchg
dec
push
mov
es
rolb
pop
arpl
call
arpl
mov
fiaddl
arpl
add
js
or
roll
dec
into
mov
xchg
or
push
pushf
out
dec
and
aaa
jno
inc
dec
insl
and
cmp
jle
xchg
adc
pop
repnz
add
sub
jecxz
fcomp
mov
ljmp
add
fiaddl
cmp
and
sbb
xor
add
adc
call
sti
aam
push
xor
xchg
mov
push
es
fcoml
add
mov
and
mov
sub
mov
fdivr
adc
testb
pop
andb
cmp
ret
mov
lds
and
mov
jmp
dec
dec
clc
out
stc
ds
subb
cwtl
pusha
cmp
jb
jl
mov
sbb
loop
fdivs
fisubl
dec
adc
in
dec
scas
or
and
add
bound
mov
gs
push
sub
and
mov
dec
add
adc
out
pop
mov
test
sub
in
gs
ds
in
jl
subb
pop
inc
mov
ja
mov
add
rcrb
jge
jnp
sub
ljmp
movl
movsb
mov
in
adc
adc
xchg
pop
push
and
pop
mov
test
sbb
shlb
or
inc
lret
mov
cwtl
cmpsb
push
push
imul
aas
int
xor
ficoms
gs
push
dec
xchg
stos
and
inc
arpl
jecxz
mov
pop
out
lahf
test
cmp
jge
cwtl
pop
inc
jmp
mov
movsl
push
mov
or
pop
test
pop
add
push
xchg
test
rorb
or
xchg
lret
lret
pop
je
jno
and
cmp
pushf
faddl
push
cmpsb
enter
push
lcall
in
pop
adc
inc
cs
movhps
mov
bound
repz
in
sti
mov
mov
dec
sbb
inc
std
out
lods
aas
push
sahf
js
ljmp
mov
push
lock
cld
pop
adc
insb
icebp
jnp
outsb
jecxz
imul
mov
inc
and
popf
dec
dec
add
push
xor
or
inc
dec
xor
aas
sti
jg
movsl
pop
lret
shlb
mov
cmpb
add
inc
dec
loopne
push
shrb
mov
xchg
jnp
jno
es
mov
mov
mov
pop
adc
mov
inc
call
push
inc
cmc
cltd
jae
xchg
inc
inc
push
lret
out
pop
mov
push
hlt
lods
cwtl
loopne
lret
cmp
jp
data16
shll
xchg
in
daa
push
fucomi
mov
mov
cmpb
mov
scas
lret
ss
cli
aaa
cmp
repz
clc
icebp
mov
out
test
adc
inc
js
repnz
push
scas
sub
pop
cmp
insb
xor
dec
mov
and
push
fs
movsb
xchg
rcrb
sbb
cmp
add
cmpsb
and
pop
mov
or
push
jl
or
xor
fstps
mov
fstpt
addr16
jecxz
mov
sar
dec
cwtl
or
fildll
mov
insl
jno
hlt
jne
cli
stos
imul
sub
out
sbb
lcall
repz
imul
push
sbb
insl
outsl
repnz
mov
int3
ljmp
sbb
cwtl
nop
mov
repnz
andl
insb
jmp
mov
fisubs
cmp
xor
mov
and
jne
lock
pop
sbb
int3
sub
test
inc
mov
inc
call
push
test
lahf
pop
xor
inc
fsubs
jbe
fs
push
out
jnp
push
arpl
in
dec
enter
and
xchg
fidivs
or
xchg
in
push
and
call
sbb
nop
push
pushf
add
inc
inc
movsl
mov
test
popa
xlat
jmp
xchg
jbe
arpl
inc
lahf
xchg
cs
icebp
sar
fwait
lods
decb
mov
and
leave
or
enter
bound
sub
sub
xor
mov
xchg
or
cmp
sbb
popa
sahf
lea
or
inc
shlb
loop
lock
dec
pop
das
cmc
xchg
leave
shlb
add
imul
cmpsl
insl
and
addl
inc
xor
or
dec
stc
int3
pop
add
jg
sub
mov
jno
mov
inc
icebp
std
lods
adc
jb
and
push
adc
jmp
mov
sbb
out
or
mov
jno
cmp
sbb
sub
push
imul
arpl
mov
mov
in
add
jbe
mov
inc
cmpsl
sti
shlb
mov
aad
roll
repnz
fsubl
inc
cltd
jno
mov
xor
pop
or
xor
adc
mov
adc
push
add
rep
addr16
mov
xor
fmull
mov
mov
dec
stc
andb
pop
pop
cltd
push
push
and
popa
stos
arpl
insb
adc
addr16
mov
mov
mov
mov
mov
pop
inc
cltd
loopne
je
jb
mov
int3
cmp
mov
inc
inc
pop
jmp
sbb
mov
pop
inc
push
in
inc
adc
loope
test
filds
fs
subl
add
outsl
xor
mov
xor
pop
dec
test
jns
jbe
pop
rorl
lods
adc
jb
xor
sub
and
cmp
fisubrs
in
test
or
in
ficompl
mov
fsubl
addr16
jb
mov
add
cmp
push
pop
divl
inc
pop
aam
incb
sbb
or
sbb
push
fbld
jbe
std
loope
xchg
pop
push
lret
scas
loop
jo
mov
les
jmp
mov
stos
stos
cmp
push
cli
ret
idivl
aam
mov
jmp
rdtsc
adc
orl
xchg
xchg
ret
out
or
xchg
mov
xor
das
sub
push
test
xlat
inc
leave
xchg
and
xchg
jae
ret
in
cli
xor
imul
popf
cmp
cwtl
jg
es
inc
jae
in
movsl
insl
mov
dec
and
rorb
push
lret
into
pushf
jmp
dec
fucomi
jbe
out
repnz
lahf
jnp
dec
xlat
in
xor
in
test
add
mov
das
pop
mov
lea
xor
mov
lock
push
inc
fmull
ja
jmp
mov
lock
andnps
cmp
mov
fidivl
push
adc
loopne
cmp
jle
inc
or
orl
std
jne
xor
sbb
sbb
add
dec
mov
add
in
daa
pop
jle
iret
dec
mov
add
bound
xchg
push
fcomps
aaa
sub
loope
jnp
popa
jns
mov
into
hlt
inc
and
cld
pop
pusha
push
pusha
cli
jecxz
in
push
mov
cld
xor
outsl
lret
fs
cmp
scas
jp
popf
pop
sub
roll
sahf
int3
sbb
les
jno
roll
cmp
mov
and
mov
imul
in
dec
ja
daa
je
inc
clc
mov
test
lods
out
cmpsb
adc
repz
bound
xor
add
jae
popf
or
and
stos
movsb
sahf
cld
sarb
mov
cmc
in
sub
mov
pop
lds
sub
ret
inc
cltd
xchg
cmc
jl
test
dec
repz
push
shlb
pushf
aas
cmp
lret
jle
or
xchg
call
lock
shl
lahf
sub
mov
icebp
out
ficompl
test
xchg
stc
lods
sbb
push
mov
cwtl
pop
ret
cmp
and
sahf
mov
lea
fmul
fistpll
in
adc
dec
and
or
mov
rcll
inc
and
notl
enter
mov
aaa
sbb
pop
insl
mov
jl
subl
mov
jp
add
inc
jl
test
nop
xor
and
and
jo
or
sbb
add
je
xchg
es
mov
ret
divb
gs
aaa
sbb
jp
stc
je
cmpsb
mov
inc
jmp
sbb
push
testl
aam
add
add
fldl
scas
dec
ljmp
adc
popa
xlat
lods
enter
add
and
pop
loope
add
cld
and
and
lock
scas
fimull
subl
mov
mov
mov
push
mov
cmp
movsl
mov
mov
jae
pop
rorl
inc
inc
and
and
xlat
xchg
fs
imulb
dec
mov
add
inc
xchg
xor
add
mov
pop
xor
out
fdivs
sbb
pop
lea
outsl
cld
es
jo
inc
fadd
ljmp
repz
sbb
scas
loop
mov
imul
repnz
xchg
sbb
jmp
addb
frstor
inc
jne
inc
jae
or
cmpl
or
rclb
pushf
int
cmp
jecxz
pop
loop
jno
repnz
mov
pop
je
mov
inc
imul
sub
pop
dec
imul
les
fimuls
sahf
fsubr
shrb
loop
adc
mov
shll
dec
sbb
sti
cli
push
popf
int
sti
pop
xchg
test
mov
in
sar
cmpsb
pop
pop
cmpsl
adc
jb
sbb
outsl
outsl
jbe
icebp
cld
pop
xchg
inc
push
mov
mov
test
pop
jne
and
testb
hlt
xchg
xchg
cmp
insb
jle
mov
xchg
leave
stc
pop
xchg
icebp
adc
sub
mov
andb
mov
pop
popf
out
pop
mov
decb
fs
hlt
push
push
rorb
adc
insl
jno
pop
and
mov
stc
addr16
xor
lea
das
cs
shlb
mov
xor
push
push
push
in
dec
pop
in
insb
sbb
or
push
xchg
inc
pop
push
xor
push
cmp
xchg
push
insb
and
mov
rorb
inc
test
sti
data16
fbld
jl
inc
imul
and
mov
dec
stos
cmpsb
xchg
mov
inc
xchg
push
ret
xchg
imul
icebp
pushf
int3
daa
fcoml
insl
popa
cmp
sbb
fwait
les
pop
loopne
les
dec
lds
