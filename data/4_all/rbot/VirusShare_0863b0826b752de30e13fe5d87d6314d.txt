pop
cmp
movb
xor
rcr
push
jno
push
jecxz
mov
cmp
daa
mov
cmp
dec
sbb
fsubl
ja
or
shll
jmp
int
pushf
bound
lahf
sub
stos
mov
mov
je
fbstp
ljmp
xchg
divb
in
xchg
push
mov
adc
push
pop
mov
in
cmc
pop
sbb
js
mov
movsl
and
cmpsl
imul
fsincos
int
insb
enter
mov
imul
mov
xchg
mov
pop
or
cmc
outsb
std
mov
enter
mov
into
push
fwait
mov
pop
scas
cmpsb
sbb
add
add
aad
mul
or
scas
pop
jae
out
mov
lahf
aaa
insl
cli
icebp
mov
outsb
mov
add
or
stos
int3
sub
mov
out
adc
loopne
adc
mov
xchg
fdivl
popf
sub
mov
in
into
inc
xlat
rclb
xor
stos
jne
leave
or
add
out
push
js
add
sbbl
xchg
and
es
in
jmp
cmp
aas
cmp
imul
pop
push
adc
cltd
mov
subb
stos
aaa
pop
lret
mov
or
cmp
or
fwait
sbb
inc
mov
dec
lock
movsb
mov
out
mov
es
xchg
rclb
xor
fwait
xchg
mov
leave
rorl
dec
adc
and
pop
out
or
scas
cli
mov
push
nop
shrl
aad
xchg
scas
aaa
movsl
push
mov
xor
repnz
add
mov
jae
test
jle
hlt
dec
lea
pop
push
es
out
clc
shll
jb
dec
insl
inc
in
inc
dec
int
bound
mov
jl
add
mov
inc
jne
mov
push
pop
test
mov
scas
incl
mov
outsb
cmp
sbbl
push
pop
les
cmp
mov
or
fldenv
xchg
and
cmp
fidivrl
pop
jge
sub
cmpsl
cli
push
shrl
sarl
push
in
aas
cli
mov
push
cmc
aad
pop
mov
inc
ja
lods
jns
dec
aaa
fnstenv
xchg
insb
cmp
cmc
xchg
or
mov
jg
push
xor
lock
jp
inc
push
cmp
in
push
rolb
push
jl
mov
aad
cltd
out
pop
cmp
mov
push
fistpl
mov
sbb
stc
adc
call
sbb
cmp
movsb
xchg
mov
repnz
push
xorl
iret
jae
push
mov
jle
push
mov
push
add
mov
pop
ficomps
cmp
and
xor
push
xchg
imul
into
cmp
xor
add
xchg
mov
push
pop
shr
mov
iret
xor
inc
sub
imul
xor
es
sub
fdivrs
and
mov
icebp
jne
mov
sub
push
sub
int
data16
imul
fmulp
add
jecxz
nop
and
bound
mov
inc
repz
stc
mov
sbb
jns
lcall
inc
adc
and
xor
push
test
outsl
repz
out
shl
sub
stc
pop
fdivs
mov
aam
shrb
mov
sbb
mov
adc
pop
mov
movsl
insb
mov
xor
pop
aam
in
mov
dec
xchg
pop
jp
dec
loop
fucomip
into
and
or
and
push
mov
nop
lock
add
jne
xchg
ret
push
xchg
sub
xchg
jmp
shll
push
imul
pop
je
sarl
nop
bound
lea
imul
inc
shrl
push
add
mov
dec
mov
adc
xor
dec
mov
mov
fidivrl
sub
xchg
out
xor
loope
dec
cli
inc
push
sahf
cwtl
call
sub
mov
repz
xor
sarl
ret
stos
xor
rcrb
pop
lret
inc
jmp
xchg
adc
mov
jbe
ja
jbe
fadds
lods
jl
cmp
cmpsb
popf
frstor
lods
adc
push
out
pop
push
fwait
and
lock
in
pop
xor
loope
push
cltd
mov
sbbb
dec
imul
or
daa
sti
loope
xchg
leave
sbb
mov
mov
cli
mov
inc
shr
xor
pop
je
jle
fcoms
repz
loop
pop
pop
add
ficoml
xor
lock
or
lea
dec
rclb
mov
pop
inc
sti
or
xchg
jb
adc
jp
pop
call
xor
jb
fsubs
xor
repz
movsb
add
gs
add
pop
rclb
sbb
inc
and
lods
or
sahf
mov
repnz
push
or
mov
xor
movsb
in
fnstenv
ja
push
stos
pop
fbld
xchg
shlb
mov
sti
mov
lods
and
int3
cmp
inc
cmp
or
rcrl
fbld
popf
cmp
mov
sbb
xor
mov
bound
test
add
fcompl
loope
mov
mov
adc
add
xchg
dec
or
outsb
test
mov
cmp
daa
xchg
out
jmp
jbe
clc
icebp
popa
mov
mov
add
cld
pop
enter
or
std
pop
xor
cld
push
movsl
push
icebp
cmp
jp
andb
pushf
test
into
insb
push
jp
pop
inc
faddl
xorl
out
push
cmp
orl
add
mov
int3
pop
or
dec
hlt
movsb
pushf
movsb
je
xchg
popa
jno
cld
push
sbb
popa
mov
test
xchg
jno
lcall
dec
call
xor
mov
rclb
or
pop
outsl
adc
add
mov
ds
das
fdivl
lcall
and
xchg
daa
mov
inc
cmp
sub
push
xor
and
jnp
dec
jae
push
cwtl
outsl
fsub
fcompl
jle
cltd
outsb
ret
adc
mov
popa
xor
rorl
mov
push
in
mov
mov
or
ljmp
mov
xchg
jo
jmp
push
fiadds
std
in
test
push
and
jmp
mov
sbb
iret
and
xor
push
outsb
ret
sub
lea
shrl
pop
mov
mov
push
jmp
inc
cmpsb
pop
sub
cmp
mov
insb
mov
mov
sbbb
or
xor
add
sub
mov
insb
ljmp
xor
xor
fsubs
push
and
xchg
push
js
loope
dec
sub
std
rol
push
icebp
mov
add
adc
adc
scas
push
js
dec
and
lods
cmp
or
mov
cmp
jnp
mov
in
cmc
repz
andl
stos
popf
add
add
jo
cwtl
out
je
insl
add
jns
bound
cmpsb
xchg
xlat
outsl
jecxz
cmp
insb
jmp
inc
pop
sub
std
mov
ret
xlat
fmulp
or
pop
inc
jg
jl
lret
xor
mov
jo
pop
testl
fmull
xchg
fcompl
or
out
pop
scas
ds
dec
outsb
mov
add
inc
aas
lret
movsl
fldt
xor
pop
inc
cld
repnz
aad
jno
bound
repz
jp
mov
sub
add
loop
sbb
pop
fisttpll
mov
sub
sbb
pushf
es
mov
shll
fldl
or
ret
jg
adc
ret
pushf
cmpsb
xchg
sbbl
add
xor
shrl
cmp
ds
ret
dec
mov
les
insb
mov
xorl
clc
lods
lahf
mov
jle
fistpll
adc
sahf
mov
popf
adc
ficoms
les
sub
pop
jno
mov
cmp
mov
in
xchg
insl
add
mov
fwait
int3
and
push
ret
cli
inc
cmp
lods
adc
and
sub
daa
dec
adc
testl
addr16
sbb
add
mov
cld
dec
insl
test
sub
or
jecxz
mov
adc
sub
pop
shrb
pop
cltd
and
ficompl
scas
ret
xor
pop
inc
fstl
or
mov
fnstcw
inc
xor
sti
dec
or
pop
out
insl
mov
mov
sub
ljmp
xchg
out
jg
fisubrs
mov
or
mov
push
aam
cmpsb
repnz
ljmp
pusha
mov
out
sub
adcl
add
mov
mov
xchg
sbb
push
mov
fcmovnu
jg
xor
out
mov
hlt
sbb
arpl
or
mov
xchg
fnstenv
test
jmp
jns
or
sub
repz
sar
aaa
sar
lds
stos
xchg
outsl
jmpw
cmp
sub
jl
rorb
cmp
cmpsl
mov
xor
ret
aad
mov
sub
insb
pop
jo
sbbb
dec
lods
mov
pop
jne
cld
or
fisttps
push
hlt
pop
pop
call
inc
inc
addr16
mov
or
mov
es
dec
pop
in
cli
push
adcb
ljmp
mov
jb
aam
clc
ficoms
sbb
sarb
mov
out
add
mov
dec
bound
push
mov
add
pusha
inc
test
push
pop
fdivr
rcr
push
shlb
jbe
pop
sbbb
call
aad
lret
pop
cwtl
jne
lcall
loop
xor
xor
aas
addb
mov
dec
jle
fidivl
fs
mov
dec
mov
jl
pop
jle
add
xor
jle
cmp
dec
or
dec
stos
xchg
push
aad
push
ja
loope
in
jecxz
jne
in
aam
push
pop
idivb
push
inc
adc
push
mov
inc
push
adc
aad
xor
add
shr
jge
cmp
xchg
mov
pop
or
mov
test
aad
add
sub
int3
jb
xor
outsl
adc
aaa
dec
into
push
add
pop
mov
pusha
add
pop
ljmp
mov
xchg
loopne
or
fisttps
outsl
ds
mov
nop
mov
jo
stc
mov
imul
push
iret
fwait
orl
into
pop
shlb
scas
cmp
mov
out
or
adc
xchg
iret
es
cmp
jmp
pop
jno
add
test
leave
jge
test
mov
shll
push
pop
pop
test
add
push
out
cmc
movsw
jl
mov
test
mov
adc
iret
and
ret
out
ror
jge
add
jl
movsb
addr16
add
cmp
js
sti
pop
or
in
cwtl
mov
xor
mov
idivb
call
mov
aas
or
and
out
dec
sub
pop
repz
or
rcl
lods
adc
sbb
mov
inc
movsb
scas
mov
xchg
dec
mov
push
lret
and
pushf
stc
push
pushf
stos
out
int3
mov
cmpsb
gs
test
movsl
enter
lret
test
mov
call
push
sarl
jno
shrw
adc
add
imul
aam
jno
xchg
xor
test
push
mov
es
cmp
pop
mov
leave
out
rorl
add
sub
cs
jo
aam
mov
mov
mov
inc
xchg
aad
negb
pop
popa
pop
out
cmpsb
push
pop
adc
or
sysenter
or
into
insl
cmpsb
jns
xchg
fldcw
stos
lcall
fimuls
iret
imul
fnstcw
mov
test
jnp
pop
dec
jne
cmc
jae
pop
jl
jle
into
mov
imul
sub
lcall
pop
and
mov
stos
xor
idivb
push
jecxz
popa
into
sub
in
push
fmull
lock
js
sub
sub
jae
push
mov
adc
xchg
cmova
add
repnz
xor
mov
or
fwait
mov
fs
cmp
jge
inc
popf
jmp
roll
mov
pusha
aam
in
cli
in
jge
sahf
enter
sub
shrl
sub
cmp
xor
cld
pop
mov
cmp
gs
mov
loop
jno
cli
mov
out
fidivl
fldl
lods
movsb
xor
rcll
cmp
loop
test
shlb
push
pop
mov
pushf
pop
xorl
rorb
fs
aas
dec
dec
fstl
sbb
es
dec
js
xor
ret
add
lea
push
push
adc
repz
and
jo
shll
ficomps
fcomps
mov
adc
xchg
arpl
das
or
sbb
or
push
bound
insb
cmp
add
lret
les
add
mov
cmp
stc
mov
sub
cmp
fs
aaa
sub
pushw
and
js
mov
mov
fisubrs
cmc
jno
pop
mov
xor
jne
movsl
lcall
loop
fs
pop
cmp
sarl
lcall
stos
fs
es
xorl
jae
jge
test
push
repnz
in
jns
sub
cmpsl
scas
push
or
sub
lahf
fs
sti
inc
lea
jnp
sub
dec
dec
movb
in
inc
or
jl
mov
cmpsb
test
sbb
pop
cmp
push
sub
lds
mov
pop
inc
mov
or
sbb
and
push
cld
mov
es
setp
movsl
cmp
insl
mov
xor
insb
jnp
cs
clc
mov
and
lahf
push
out
icebp
pop
jge
jns
xor
dec
jecxz
movb
pop
xchg
shr
gs
lea
call
neg
clc
lahf
mov
cltd
cmpsl
cmp
pop
lret
stos
or
sbb
jnp
jb
push
mov
fs
jno
mov
cli
sahf
jecxz
fsts
xlat
or
fs
mov
jge
xchg
ljmp
mov
xchg
xor
nop
mov
add
mov
cli
fidivrl
fcompl
sub
imul
in
sbb
add
cmp
mov
push
or
aas
test
in
cld
cmp
cs
add
sub
sub
jns
lret
arpl
dec
mov
add
sbb
adc
jmp
pop
aad
lea
adc
movsl
std
enter
xor
sbb
mov
aas
jns
pop
mov
andb
mov
cmp
hlt
jp
cmp
hlt
xor
jl
call
mov
fcoml
mov
sub
sbb
cmp
sub
xchg
mov
cli
iret
or
pop
and
in
sbb
push
out
xor
jge
aad
sbb
cmp
push
in
out
dec
or
mov
test
int3
aad
sahf
mov
mov
lcall
popl
push
sbb
push
jne
fiadds
cmp
mov
fwait
fisubrs
out
std
jns
sub
xchg
pop
cld
arpl
push
or
int3
ret
test
pop
lcall
hlt
je
jmp
int3
fadds
cli
adc
or
or
fisttpll
shlb
xchg
dec
fldt
jl
jle
pop
cmp
ss
repz
dec
rcrl
ds
xchg
mov
lahf
push
test
pusha
push
jle
lds
or
xchg
mov
aaa
push
popa
loop
sbb
add
jb
test
dec
pop
dec
push
push
mov
imul
movsb
lea
lods
sarb
outsl
cltd
dec
ret
adc
dec
and
mov
loopne
sub
bound
rolb
cwtl
sti
mov
rcrl
sub
mov
fsub
fs
ret
inc
cmpsb
test
jb
pop
adc
cld
or
adcb
loopne
in
popa
arpl
pop
jae
cs
ds
daa
pop
or
popa
cmpsb
ficomps
jecxz
in
push
dec
lret
sbb
sub
sub
adc
imulb
imul
mov
test
lods
rol
cmp
lret
movsb
cmp
xor
test
mov
mov
fisttps
mov
push
inc
in
mov
aam
ljmp
mov
int
mov
add
mov
pop
adc
frstor
arpl
or
adc
hlt
xor
lea
das
fs
xchg
pop
frstor
in
arpl
adc
mov
aam
adc
testb
mov
jge
push
sub
push
aad
pushf
mov
pop
xchg
sub
mov
jne
dec
mov
xchg
mov
mov
movl
and
movsb
inc
dec
pushf
push
or
inc
mov
leave
stc
stos
fwait
je
sbb
sbb
xor
cmpsb
daa
mov
rclb
xchg
stos
xor
sub
xchg
in
mov
xchg
pop
les
and
xchg
lods
jge
sahf
cmp
sub
mov
xchg
rol
out
mov
push
fnstcw
xchg
imul
rcr
mov
add
inc
jle
cmp
cmp
gs
cwtl
inc
or
repz
jnp
std
sbb
mov
addr16
xor
jge
icebp
mov
es
dec
mov
mov
xchg
jecxz
repnz
dec
ret
mov
into
rorb
int
push
fdivrl
mov
dec
adc
fmul
jge
sbbl
jl
cmp
cmp
inc
inc
push
pop
ret
sbb
in
ss
stc
pop
in
xchg
mov
les
pusha
test
mov
orl
int
into
inc
jecxz
xor
jae
icebp
ret
outsl
xor
out
cli
in
xchg
lods
push
jo
in
gs
pop
jns
aam
inc
sbb
pusha
pop
pop
popl
aad
outsb
outsl
mov
inc
jns
jg
jge
push
xor
sbb
pop
jno
repz
fwait
and
pop
or
xor
sbbl
and
les
xchg
cmpsl
xor
mov
cmp
push
sub
sti
imul
jp
sahf
and
ja
inc
es
imul
xchg
in
andb
jge
xchg
mov
and
iret
dec
add
outsb
push
out
and
xchg
insl
std
cmpsb
lahf
daa
pop
lods
fisubrs
je
cmp
cmc
pop
dec
sti
arpl
inc
lods
dec
jmp
shl
sub
mov
lods
mov
test
and
pop
and
bound
add
insl
loopne
mov
out
gs
mov
pop
pop
mov
ja
cli
xor
pop
pop
pop
mov
jl
dec
push
jle
cld
lahf
xchg
push
push
popa
add
pop
mov
rol
adc
xor
ljmp
and
int3
dec
js
insb
in
stos
sbb
push
data16
in
inc
xchg
jle
adc
adc
sub
cmp
and
loope
mov
xor
xchg
shrl
jge
aas
aad
pop
loopne
bound
std
insl
pop
gs
xor
adc
xchg
mov
popa
add
cmpsb
ja
lret
xchg
ret
mov
movl
push
ja
and
fsubrs
mov
cs
push
int3
stos
or
mov
cmp
jbe
and
insl
or
cli
std
push
dec
nop
dec
cmpb
out
and
add
xor
insl
in
jns
inc
inc
jno
lods
faddl
push
xor
jmp
scas
mov
cmc
subb
mov
mov
xchg
int
psrlq
mov
test
pop
rclb
ja
mov
outsl
sbb
add
loope
push
or
mov
or
mov
pop
mov
scas
repnz
sub
or
loopne
inc
xchg
cmp
adc
in
or
cwtl
xor
sbb
rol
and
sbb
adc
pop
fs
cli
into
push
or
xchg
int
lret
mov
call
cmp
xchg
xchg
jl
shl
fdivrs
and
xchg
ljmp
fdiv
sti
sub
mov
mov
cwtl
adcb
and
clc
adc
fs
or
sub
push
push
mov
and
out
shrl
stos
push
repz
dec
dec
adc
sbb
adc
mov
not
js
jne
and
mov
cmp
cmpsl
mov
xor
jl
pop
jns
mov
cli
push
xchg
fcomps
mov
bound
jmp
lahf
xchg
cmp
into
fwait
add
mov
es
bound
test
pop
data16
pop
add
jge
iret
jge
pop
fisttpll
pop
aad
push
or
lret
inc
jp
sbb
inc
push
or
lods
mov
pop
subl
loopne
mov
daa
call
ljmp
or
and
daa
repnz
sti
test
bound
mov
gs
mov
stos
js
dec
shrb
cmp
xchg
jp
lods
dec
roll
shll
jo
aam
pop
cmp
popa
push
jb
mov
inc
daa
push
int
outsb
test
push
push
es
and
jo
jno
adc
pop
mov
bound
add
and
mov
add
out
into
mov
int
rclb
mov
sub
shl
xchg
lods
ss
shlb
inc
cld
inc
int3
mov
pop
adc
mov
jge
aad
push
cmpsb
adc
add
outsb
jecxz
sub
imul
xchg
inc
jno
cmpsl
dec
mov
sub
and
enter
pop
call
les
pop
mov
sbb
pop
mov
sbb
jb
stos
sub
or
icebp
xor
pushf
ss
sti
add
xor
push
ds
daa
nop
xlat
repz
jbe
loope
and
inc
mov
xchg
and
das
jbe
pop
pop
mov
jb
push
call
lret
push
lahf
dec
cltd
loope
jnp
jl
or
cmc
lods
jae
push
in
je
stos
cld
mov
fsubp
ss
pop
in
inc
and
sub
stos
pusha
mov
lret
jae
adc
cmpsl
jge
cmc
insl
clc
push
add
jns
les
std
dec
dec
cmpsl
sbb
stc
lcall
push
mov
ja
bound
and
push
out
mov
cmp
pop
dec
loope
jno
test
je
in
add
clc
rorl
or
jecxz
arpl
push
fwait
lods
sub
test
ss
mov
enter
fidivs
insb
loope
fadds
js
rclb
lcall
jge,pn
aaa
repz
enter
cli
addb
out
mov
pop
and
repnz
mov
clc
sbb
cwtl
jmp
push
mov
xchg
add
xchg
jnp
out
add
test
and
jecxz
out
int3
repz
and
lahf
cmp
lock
sbb
sbb
cmpsl
cmp
pop
js
loop
cmp
jl
aam
and
add
loope
and
push
mov
aas
cwtl
inc
dec
push
push
imul
push
push
sub
push
add
or
jns
into
stos
loope
and
lds
gs
and
dec
jb
lret
jecxz
popa
add
inc
andl
in
sub
cli
jge
xabort
lcall
lock
lock
gs
gs
es
cwtl
pop
fistpll
fnstenv
cmp
mov
fldcw
inc
movsl
xchg
ficomps
movsb
dec
push
push
push
jp
add
inc
arpl
mov
mov
mov
mov
pop
ss
inc
lret
ljmp
and
add
sub
pop
ja
mov
scas
jne,pt
iret
ja
stc
movsb
jne
dec
mov
or
mov
cmpsl
je
lret
mov
mov
out
jecxz
cmp
subl
mov
mov
xor
mov
cmp
sub
xchg
or
jns
and
sub
inc
insl
dec
dec
and
scas
xlat
inc
xchg
sbb
std
mov
outsl
stc
pop
push
pop
gs
test
adc
loope
inc
fisubrl
rolb
cmp
test
push
add
pop
dec
mov
xor
mov
mov
push
push
mov
mov
sub
mov
adc
jmp
push
aad
xor
sti
test
int3
push
rorl
dec
or
sbb
loop
ret
test
or
mov
lret
or
out
sbb
fisttpl
pop
mov
out
cmpsl
mov
cmp
in
daa
mov
imul
mov
mov
fimull
mov
rcrl
mov
adc
jae
lods
movsl
mov
ret
mov
push
pop
push
inc
inc
sbbb
push
pop
mov
lea
add
ror
outsl
cmpsl
call
hlt
loope
xchg
dec
dec
mov
mov
scas
mov
test
mov
mov
cmc
lods
mov
js
jae
neg
jno
ljmp
push
xor
cmpb
rcrb
pop
pop
lods
test
rolb
stos
test
mov
or
sar
sub
xchg
sub
rcrl
lret
or
inc
dec
aam
and
and
idivb
push
popa
adc
and
mov
sbb
fcmovne
imull
lock
mov
sbb
cltd
mov
cmp
xchg
dec
sub
xchg
fimull
xor
or
mov
dec
mov
iret
aas
xor
xchg
fstpt
pop
cwtl
or
fcmovnbe
arpl
addr16
adc
sbb
add
leave
jns,pn
and
aas
pop
jo
pop
xchg
lret
lret
push
cmp
sbb
mov
inc
inc
jnp
dec
ficoml
jg
test
pusha
and
pop
add
dec
mov
fdivrl
pop
cmpl
repnz
fsubp
push
popf
xchg
xor
in
movsl
cmp
sar
inc
sahf
iret
mov
pop
lret
xchg
jb
mov
push
jne
dec
jg
fisttps
cltd
jb
ljmp
pop
cmc
xor
test
mov
lret
mov
movsl
push
in
inc
rcl
fs
ror
cmpsl
push
test
aaa
cmpsb
mov
adc
mull
mov
mov
or
adc
xchg
jno
sub
inc
mov
inc
lods
pop
push
loope
mov
test
je
int3
imul
xlat
sbb
dec
sbb
cmpsb
cmp
mov
scas
xor
mov
mov
shl
pop
dec
stos
mov
les
mov
arpl
out
adc
pop
aad
dec
jecxz
scas
cmpsb
popa
pop
sbb
ret
scas
out
ljmp
push
mov
mov
sub
mov
push
leave
jne
scas
cmp
add
inc
hlt
push
cmp
push
pop
cwtl
push
push
pop
push
call
jle
pop
jns
and
pop
cmp
fwait
mov
or
sbb
cltd
cmp
movsb
int3
add
pop
lahf
and
pusha
xor
cmc
xchg
add
push
arpl
xlat
enter
outsb
add
test
das
push
mov
add
sahf
mov
adc
lods
scas
ds
in
call
dec
jno
jae
inc
jge
and
ret
insb
inc
push
cli
jl
out
mov
add
adc
pop
mov
movsl
mov
jecxz
push
es
roll
fbstp
lock
jl
jnp
ss
add
xor
loopnew
jmp
pop
mov
sbb
dec
xchg
mov
jne
cmpsb
xchg
lret
stc
dec
mov
cltd
pop
jge
jmp
jmp
pop
test
xor
sub
pop
enter
adc
inc
and
inc
push
jne
das
pop
sbb
shlb
out
outsl
push
pop
jge
push
mov
jns
jae
push
out
jmp
xchg
icebp
jae
and
jbe
das
inc
test
ret
and
adc
je
jbe
push
inc
in
dec
push
xchg
lock
and
push
xchg
push
popa
pop
arpl
xor
addr16
repz
repnz
into
sbb
mov
cs
mov
loop
sub
fcomip
push
enter
in
fs
inc
inc
out
dec
xchg
push
aam
js
mull
xchg
bound
outsb
pushf
ljmp
ljmp
xor
jecxz
mov
test
inc
adc
inc
stos
rcr
ja
mov
loopw
iret
pop
adc
ret
dec
loope
call
cwtl
adc
add
mov
jp
gs
adc
xchg
xor
pop
xor
push
mov
or
sbb
fistpl
sarl
out
popa
cli
xor
sbb
adc
pop
cmp
fdivrl
loope
cmp
add
mov
sub
sbb
inc
add
cmp
xchg
mov
sbb
jbe
mov
mov
in
shlb
sti
mov
fmull
or
int3
mov
sub
loope
and
and
out
xor
js
mov
push
inc
ret
dec
lods
rcrb
pop
nop
dec
sbb
or
sbb
loope
hlt
divb
cmp
inc
cmc
cltd
repz
std
cli
jg
pop
movsl
das
in
fs
mov
std
daa
lcall
mov
aas
mov
sub
pop
mov
inc
cmpsl
out
inc
pop
out
aas
gs
dec
popa
sti
stos
sti
dec
cmpsb
test
mov
scas
adc
xchg
lock
int3
rol
push
cmp
dec
and
in
cmp
mov
cli
inc
fildl
ret
aad
push
push
dec
in
fcomp
data16
sbbb
out
outsb
add
and
ret
adc
test
ss
and
inc
loopne
xor
dec
arpl
addb
add
xor
push
push
arpl
or
repnz
call
xor
mov
nop
sbb
dec
or
sub
xor
test
push
mov
lret
push
dec
dec
xlat
sbb
mov
in
fs
fbstp
stc
data16
out
jno
testb
add
nop
test
sbb
dec
in
jno
shll
and
sbb
cmc
dec
adc
es
iret
imul
mov
or
jns
xchg
fisttpl
inc
jae
xchg
xchg
push
mov
shll
out
popa
mov
popf
pop
stos
jno
lock
mov
popa
mov
jo
xchg
out
aad
subl
icebp
icebp
fiaddl
push
scas
mov
mov
dec
cmp
cwtl
push
inc
adc
loop
mov
aaa
test
rcrb
cmp
int3
cmp
pusha
dec
out
push
in
push
std
fldl
xchg
add
test
out
add
nop
jl
adc
test
xor
sbb
xor
cmp
jmp
cmpsb
pop
lret
push
fsubrs
mov
sbb
iret
outsb
arpl
fstl
xor
std
dec
add
cmp
into
push
adc
jecxz
stc
mov
mov
xchg
sbb
xor
out
sub
test
xchg
movsl
movsl
sbb
inc
dec
cltd
out
je
shrl
cmc
jg
inc
adc
sbb
out
pushf
pop
out
fildl
test
sahf
adc
shrl
mov
jne
xorl
jns
adc
push
push
jns
fdivrl
fcmovnu
cwtl
ficoms
nop
dec
xchg
xchg
ds
cltd
jns
push
enter
and
out
fisubl
mov
mov
cmp
inc
rcll
fstpl
fistpll
jmp
pop
fs
std
and
pop
and
or
push
xor
lea
sbb
adc
int3
cld
clc
fs
scas
into
xor
mov
ds
adc
cmc
and
jns
xchg
sbbb
sti
push
xchg
sarl
xchg
dec
adc
pop
sub
sub
mov
jmp
popf
and
mov
fmul
ror
cmp
dec
int3
roll
push
out
mov
std
ds
or
into
cmp
fwait
and
or
cmpsl
and
xchg
mov
jne
into
inc
das
aaa
in
mov
ret
dec
dec
enter
rcr
movsl
xchg
fsubs
repnz
mov
jo
ljmp
outsb
dec
lcall
jl
lds
out
cli
outsl
dec
out
daa
pop
fildll
cld
pop
pop
test
dec
push
insb
adc
jp
jnp
fs
insl
adcl
outsb
or
stc
out
cwtl
aad
test
push
bound
sbb
out
pop
loop
mov
adc
jnp
ds
enter
je
push
sarl
lods
inc
push
out
test
out
xor
add
cmpb
cmc
cltd
and
scas
out
rcrl
in
int
inc
scas
mov
out
push
lret
sub
jl
sti
sbbb
sub
arpl
mov
mov
fyl2x
inc
mov
std
fcompl
jo
fsubl
mov
and
in
sub
mov
push
xchg
sub
cmpsl
jl
into
sbb
mov
outsl
mov
adc
xchg
pop
mov
xor
sbb
mov
xlat
aaa
jg
xchg
push
data16
lret
out
dec
and
mov
data16
add
sub
ja
jbe
out
outsl
mov
imul
movl
dec
and
clc
push
mov
sub
xor
sarl
mov
jne
fiaddl
adc
loopne
cwtl
xor
hlt
loopne
sub
xorl
cmp
call
add
and
rorb
cmpb
push
lods
mov
dec
jmp
outsb
pop
push
loop
testb
jno
adc
cmp
int3
mov
arpl
ja
or
adc
push
sub
cld
and
sbb
and
ss
lock
mov
nop
dec
stos
leave
je
sbb
pop
pop
ffreep
outsb
xor
push
sarb
fnstsw
jnp
scas
sbb
test
test
jl
mov
dec
pusha
pop
xchg
in
stos
mov
pop
stos
bswap
mov
ljmp
xor
sub
negl
not
cwtl
pop
mov
clc
pop
jecxz
fs
enter
dec
icebp
outsb
outsb
pop
pop
push
shl
inc
jecxz
pop
add
lahf
mov
mov
fcmovbe
xchg
stc
int3
xchg
jg
dec
jmp
ror
mov
stos
insl
icebp
aad
iret
insl
push
popa
xlat
std
dec
mov
xchg
dec
push
sti
and
out
stc
loope
pop
jns
outsl
dec
mov
dec
scas
notl
inc
arpl
adc
cmp
dec
fnsave
mov
add
lods
push
decb
cmp
sti
jle
mov
and
loopne
es
or
lret
ds
pop
popa
mov
cmp
iret
imull
dec
cmpsb
gs
aad
popf
xor
mov
pop
mov
and
sbb
fs
push
mov
cmpsb
movl
inc
cmpsl
call
fldln2
cli
rorb
ds
enter
movsb
cltd
icebp
ret
xor
insb
mov
je
cmc
fstps
and
stos
inc
insl
jae
mov
sbb
sub
mov
lock
aas
loop
sti
and
pop
inc
push
sbb
pop
xor
mov
jge
iret
jo
xchg
loope
cltd
or
enter
in
adc
xor
fwait
decl
adc
jno
dec
xchg
negl
imull
stc
andb
mov
mov
inc
insl
pop
in
loopne
test
insb
push
fcmovnb
push
bound
icebp
rorl
aaa
imull
and
ret
lret
fsubs
mov
push
cs
popf
mov
push
leave
fwait
insb
sbb
jle
int3
pop
and
in
jecxz
mov
fwait
mov
xor
inc
pop
add
cmpsl
mov
mov
lock
insl
jg
and
fadd
cwtl
sti
xor
jnp
and
xchg
adcb
cmpsb
out
inc
das
pop
iret
scas
xor
sbb
add
mov
jle
adc
or
clc
push
rorb
mov
push
fiaddl
push
cmpsb
and
xor
jb
psrlw
popa
mov
xlat
adc
lods
aam
rol
adc
movsb
cs
adc
sbb
test
aas
repz
nop
icebp
pop
cmp
xchg
xor
test
cmpsl
out
leave
xlat
jno
cmp
push
int3
lods
adc
adc
xchg
lret
data16
mov
ret
cmc
gs
nop
jp
mov
leave
sbb
xor
sub
mov
xchg
roll
fsubrp
inc
orb
popf
popl
push
mov
cmpsl
addr16
and
bnd
stos
mov
repnz
xchg
cltd
jmp
ljmp
mov
movsl
movsl
cmp
les
sbb
sbb
or
lods
jae
popf
mov
sbb
repnz
cmpsb
xchg
sub
inc
push
das
ficoms
dec
out
xor
stc
xchg
outsl
mov
push
mov
or
mov
and
xor
in
push
and
cmc
call
sbb
pushf
fidivl
lods
pop
pop
sbb
mov
push
or
add
outsl
jae
shll
cmp
sub
jae
jne
loope
sbb
sub
mov
test
or
jge
sbb
fiadds
and
mov
mov
push
dec
pop
leave
mov
mov
jb
sub
adc
push
in
adc
inc
cmc
mov
mov
pmaxub
imul
sub
mov
push
psrlw
in
inc
into
lret
into
call
adc
and
fstl
adc
adc
rcrl
mov
mov
rcrb
xor
lcall
cmp
es
push
xor
sti
inc
xor
jecxz
test
out
jae
shrl
shr
lret
dec
adc
mov
lahf
mov
popa
ss
mov
jl
out
sbb
and
mov
ds
lret
std
xchg
and
mov
add
int3
pop
push
loop
stc
mov
ss
inc
jno
add
es
pusha
push
or
xchg
xchg
mov
in
fstpl
inc
push
cs
sub
outsb
xchg
pop
in
in
xchg
push
repz
mov
test
leave
stc
and
xchg
popa
out
push
repnz
mov
aad
ss
out
mov
cwtl
xchg
mov
or
cmpsb
sub
repz
inc
sub
clc
mov
adc
jo
xor
cmp
or
ja
lds
inc
xchg
and
push
sbb
dec
mov
mov
dec
push
inc
mov
pop
lret
xchg
adc
daa
arpl
mov
andb
inc
into
jnp
adc
scas
xor
xlat
add
add
xor
test
mov
jb
insb
imul
xchg
jo
rol
lea
push
imul
ja
jno
push
jns
loopne
xlat
fs
popf
jmp
flds
cltd
in
int
mov
ljmp
sub
addb
sbb
clc
sbb
outsb
js
inc
and
nop
sbb
push
jne
dec
push
add
inc
mov
sbb
inc
ss
or
and
push
mov
push
mov
push
in
nop
dec
cmp
cmc
lock
dec
sub
les
flds
mov
sub
pop
jg
push
mov
sbb
in
leave
xchg
mov
je
or
mov
push
pop
jl
pop
enter
and
pushf
pop
mov
enter
int3
dec
fs
fdiv
xchg
sbb
xor
inc
push
mov
lcall
add
daa
sar
call
mov
mov
pop
push
cmp
mov
sbb
and
cs
jmp
bound
fldenv
outsl
es
cmp
mov
push
xor
icebp
jmp
rclb
xchg
cltd
fwait
push
add
test
jo
test
insb
or
movsb
pop
sahf
sbb
insl
stos
leave
sbb
les
loope
lods
lods
fisubs
outsl
and
pushf
dec
pop
fwait
rol
adc
mov
dec
dec
cmpsl
mov
jp
int3
decl
or
ficoml
push
negl
push
aam
cs
fdivp
pusha
scas
sbb
dec
aaa
xchg
cmovb
mov
pop
dec
mov
pop
jno
inc
xor
push
xor
xchg
out
mov
mov
or
aas
add
pushl
call
and
lods
inc
pop
lret
cwtl
xchg
mov
insl
loope
adc
loop,pn
pop
adc
sub
popa
and
addr16
sub
xor
xchg
imulb
mov
mov
jnp
pop
mov
cmp
scas
cmp
mov
add
add
test
fnstsw
jb
jb
insl
nop
repz
adc
mov
cwtl
mov
xchg
std
into
mov
push
inc
in
popa
mov
sub
nop
aam
xor
into
cmpsl
pop
insb
pop
and
cli
and
pop
jns
aam
cld
jp
jge
cwtl
ljmp
mov
scas
jb
cmp
ror
icebp
mov
mov
or
stos
mov
cmp
dec
push
lock
insb
pushf
cmp
cli
mov
add
adc
aad
fstpl
out
sub
jg
mov
dec
add
xchg
sarl
cmpsb
sub
xchg
ret
or
push
fstps
pop
sub
dec
inc
outsl
or
fstpt
lds
push
iret
data16
add
fidivl
out
icebp
sub
jp
sub
test
fstpt
adc
out
jbe
dec
sub
pop
push
mov
pop
imul
orl
sti
ds
sbb
cmp
dec
pop
ds
stc
sub
inc
and
int3
jb
cli
push
jno
jmp
sub
pop
xchg
loopne
clc
icebp
rcrb
xchg
jp
and
mov
stos
ja,pn
and
add
pop
test
sub
push
ret
dec
push
cmpsl
daa
in
inc
mov
mov
xor
in
push
push
imull
pop
cmpsl
out
adcl
and
aas
je
pusha
movsl
or
sbb
lahf
sbb
and
cli
movsl
xchg
jp
sub
cmp
and
sbb
jo
mov
inc
fstps
ja
negl
leave
mov
mov
popf
xor
push
pop
xchg
inc
shrl
jae
jmp
sbb
or
adc
fs
inc
mov
cmpsl
imul
fcmovnbe
sbb
dec
xlat
xchg
pop
addl
add
repnz
inc
gs
fisubl
or
or
push
loopne
mov
pop
out
int
cmp
inc
and
pop
cmpl
pop
lods
pop
cmc
push
aam
add
jbe
ret
cmp
cli
dec
cmp
adc
or
movsb
leave
or
push
cli
mov
inc
pop
cmp
cwtl
orl
scas
fdivrl
fisttpll
inc
jmp
int3
lea
push
jo
jle
pop
aad
cmp
cld
insl
push
test
es
inc
ret
jnp
loope
lods
dec
xchg
or
xchg
adc
dec
loop
jle
in
mov
js
mov
loop
xor
icebp
mov
mov
cmp
jb
push
sbb
add
or
popf
sub
pop
jmp
es
lret
xchg
pop
shll
popa
push
xchg
dec
jg
ja
xor
int
add
icebp
jns
daa
ljmp
xchg
cmp
cmp
dec
pusha
das
add
sub
adc
dec
ret
cmc
dec
push
push
in
rcl
sti
jl
push
in
pop
std
stos
into
xchg
dec
icebp
mov
stos
sub
sahf
jl
jnp
pop
stos
lret
fidivl
pop
xchg
jo
enter
dec
mov
into
dec
pop
aad
mov
pop
pop
imulb
repnz
cmp
or
insb
adc
push
push
pop
das
mov
stc
or
nop
imul
cmp
test
xor
fimuls
cmpsb
inc
lret
cmpsb
jae
out
add
fldt
xor
out
push
adc
js
add
nop
push
scas
daa
cwtl
lret
in
push
inc
stos
mov
add
xor
rclb
fdivl
cmp
and
inc
sahf
loop
hlt
xor
mov
rorb
enter
xor
sbbb
push
add
mov
aam
mulb
push
out
jo
scas
clc
cmp
adc
mov
rcll
or
pusha
call
or
sbb
repz
push
dec
test
lcall
push
adcl
outsb
repnz
rcll
adc
aaa
xchg
adc
test
jno
in
and
notl
xor
rolb
jge
shll
sbb
fucom
repz
push
out
push
cmc
mov
pop
xchg
fidivl
add
push
xchg
mov
into
adc
pop
popa
and
nop
mov
or
ds
nop
dec
hlt
sbb
pop
shr
lods
inc
push
push
shll
stos
icebp
cmp
arpl
or
xor
mov
es
fldcw
test
cmpsl
lds
jb
xor
mov
adc
jmp
popw
or
adc
add
xchg
mov
idivl
adc
lret
sbb
cmp
aaa
jge
mov
sub
out
push
sub
xchg
sbb
push
cmc
pop
ret
adc
in
icebp
or
xorb
add
sbb
in
push
jb
testb
test
ds
scas
int
mov
inc
sub
and
pop
cld
mov
mov
or
cltd
lret
in
cmp
add
hlt
mov
mov
aaa
test
inc
das
das
sbb
or
ret
cwtl
shlb
es
xchg
int
loopw
cmp
iret
pop
sbb
sub
pushf
lahf
ret
dec
mov
cmp
out
dec
outsb
in
imul
out
cmp
pusha
dec
cmp
mov
shrb
pushf
push
mov
sbb
in
in
cmpsl
arpl
jnp
pop
cld
push
inc
lods
jg
jecxz,pn
enter
sbb
mov
pop
cwtl
lds
mov
push
push
jp
fdivs
push
jecxz
test
jno
xchg
enter
mov
sub
and
pop
mov
repnz
pop
push
sbb
mov
xchg
addl
sbb
aad
fdivrs
aad
ds
fistpll
add
imul
test
orb
add
icebp
xor
sbb
push
push
jp
xor
repz
cmp
adc
and
jb
inc
mov
enter
loopne
addr16
add
loope
out
aaa
icebp
hlt
lods
push
add
shrl
fwait
repnz
lock
in
movsl
fcomip
lds
xchg
gs
add
pop
fstpl
addr16
sar
cltd
add
andb
pusha
adc
pop
shr
in
mov
adc
stc
push
add
scas
mov
xor
push
loopne
gs
jg
insl
or
adc
cwtl
daa
mov
sub
pop
lret
jbe
mov
xchg
arpl
xorb
jmp
pop
xorl
xchg
jecxz
xlat
iret
lds
adc
jecxz
js
mov
pop
insb
push
adc
clc
push
in
stos
xor
pop
test
fists
imul
out
movsb
cli
mov
pushf
sub
add
popf
xchg
or
cmc
call
in
xor
sub
push
or
cs
ds
cmp
lods
adc
lock
in
mov
cld
es
lods
aad
arpl
movsb
xor
mov
pop
push
stc
dec
std
sti
inc
adc
and
out
addr16
pop
sbb
fwait
out
sti
push
or
out
movsl
xchg
arpl
fstps
mov
or
mov
dec
cld
lret
adc
ds
lods
ror
cmpsb
lods
cld
inc
push
jle
push
shl
cmc
pushf
pop
jns
lods
dec
mov
data16
jns
in
cmpsb
dec
add
std
and
lea
les
jo
and
movsb
sub
mov
lds
in
imul
dec
mov
push
cld
enter
std
lock
jae
fisubrs
cltd
lahf
in
aas
orl
xchg
pop
push
mov
dec
shl
or
ret
in
fnsave
rcrl
sub
sub
mov
rcll
or
stos
jnp
andl
inc
insb
fcmove
dec
or
mov
mov
add
inc
add
aam
stos
sbb
clc
mov
jae
int3
stc
push
scas
out
push
aam
mov
sub
pop
ds
or
mov
mov
popf
xor
xor
lret
sub
mov
lock
ud2
lds
xchg
adc
xor
in
mov
aaa
mov
pop
cmpsb
mov
jge
test
or
push
fnstcw
ficoms
flds
les
out
test
xchg
and
jecxz
cmp
or
shlb
mov
hlt
fstpl
out
mov
popa
sub
jl
adc
inc
sbb
add
mov
push
lods
and
insl
mov
incl
pop
inc
outsl
and
ds
nop
dec
pop
and
mov
sti
mov
mov
xchg
xlat
xchg
int3
and
js
mov
hlt
icebp
fdivr
push
adc
push
adc
sbb
xor
mov
mov
addb
and
lods
cmp
fistpll
add
or
imul
cld
dec
push
and
add
cmpb
xor
cvtdq2ps
or
xchg
mov
and
or
xchg
inc
sub
fistps
arpl
cmpsl
mov
shlb
stc
mov
cmp
xchg
ror
mov
outsb
imul
out
sbb
insb
fxch
sahf
sbb
mov
add
mov
jns
mov
ja
test
add
mov
fwait
inc
or
fcomps
xchg
lret
sub
and
imul
and
pushf
dec
pop
xor
cmpsb
pop
or
mov
mov
dec
mov
mov
pop
mov
mov
popa
mov
push
xor
mov
push
cmp
fdivl
dec
lar
fcmovu
push
ja
inc
rcrb
push
popf
mov
or
popf
pop
cmpsb
insb
sub
xchg
loopne
mov
mov
repz
ljmp
jl
sub
clc
in
stos
xchg
cmpsb
sub
push
clc
pop
fmuls
mov
xor
xchg
cmpsl
mov
scas
cmpsb
clc
mov
jns
lret
or
mov
test
sbb
jecxz
cmp
sbb
push
sbb
ds
adc
sbb
inc
decb
shlb
aaa
xchg
in
jne
inc
outsb
xor
push
test
xchg
mov
or
sub
xchg
push
popf
cmp
mov
roll
call
imul
mov
jecxz
xchg
sbb
or
shr
push
lods
fwait
dec
fadd
jmp
mov
repz
lret
shr
or
jnp
pop
cmp
dec
mov
stos
mov
pop
lods
bound
mov
mov
daa
adc
xchg
fs
sub
rcrb
cmp
fidivrl
lret
shl
lret
xchg
scas
pushf
add
loopne
jg
xor
jge
adc
adc
jg
xchg
sub
sub
mov
add
or
in
repz
pop
push
and
pop
lods
fdivrp
xor
nop
adc
rol
ja
and
movsl
imul
filds
xlat
lods
loop
testb
lcall
mov
loope
in
cmpsb
adc
in
adc
fisubs
scas
ja
gs
mov
mov
adc
ljmp
icebp
or
pusha
es
xor
mov
arpl
and
push
repnz
ret
stos
jne
mov
decb
add
insb
pop
fisubrl
push
fisubrl
jo
push
test
imul
mov
sub
and
mov
xor
scas
mov
ss
jno
mov
or
call
push
inc
fistpll
fnstsw
or
mov
cmp
adc
nop
lret
out
sbb
mov
in
push
mov
mov
cli
push
cmp
jnp
inc
paddb
int
mov
dec
mov
sbb
icebp
sub
dec
mov
xchg
into
pop
jo
iret
aad
daa
jmp
fdivrl
mov
inc
ds
xchg
sub
int3
push
int
lods
push
sub
sub
mov
jne
mov
pop
mov
lret
ret
nop
outsl
mov
xchg
insb
ss
mov
jl
sub
les
popa
dec
ja
mov
ja
mov
iret
xchg
aad
mov
cli
inc
ljmp
loopne
mov
inc
sub
pop
sub
pop
cld
sbb
sbb
and
xor
dec
insb
cwtl
or
out
test
inc
bound
push
in
stos
jge
jl
cmpsl
in
aaa
mov
push
nop
roll
adc
cs
sahf
sbb
enter
in
inc
test
xchg
or
jne
xchg
lock
dec
int3
adc
cmc
call
mov
int
cmp
sub
repz
imul
xchg
cmp
lods
cmpsb
dec
inc
push
sbb
test
dec
ret
lret
sub
and
ret
test
mov
in
or
lahf
es
imul
test
pop
call
test
lahf
inc
and
frstor
pop
bound
dec
mov
sti
push
shr
mov
and
std
loop
addr16
mov
in
adc
sbb
rorb
dec
cmc
test
out
adc
dec
lret
sbb
mov
rclb
pop
je
mov
in
test
movsl
sub
cmp
out
int3
pusha
dec
or
int
out
jbe
mov
orl
jmp
icebp
sbb
and
cmc
or
xor
mov
mov
in
pop
adc
clc
insb
bound
xor
and
add
dec
shll
jo
ds
fdivrs
dec
test
insb
jae
jmp
jne
test
push
sbb
cmp
mov
xor
add
int3
shll
mov
popf
pop
roll
mov
test
loop
mov
dec
std
mov
daa
mov
cwtl
data16
mov
in
aaa
leave
fsubrl
adc
add
sbb
outsl
jp
or
jo
or
push
fists
lock
inc
jo
int
and
cli
pop
sub
jge
cld
leave
xchg
add
shrl
inc
and
jp
int3
xor
ss
pushf
or
rclb
pop
clc
jbe
out
sbb
xor
test
add
repz
or
push
lea
cmp
xor
mov
into
add
loopne
xchg
pop
push
cmp
xchg
fsubs
push
inc
ret
jo
loopne
popw
mov
movsl
sub
and
mov
or
stos
xor
mov
incb
lret
clc
aad
rorb
jno
outsb
adc
sub
cmp
or
outsl
pop
test
shl
dec
fcoms
jbe
and
cmpsb
sub
add
movsb
iret
push
ljmp
clc
mov
xchg
lret
mov
in
push
mov
shrl
clc
addr16
cmp
or
jl
out
push
fbstp
lcall
jo
adc
iret
sbb
xchg
imul
stos
push
jmp
adc
lods
mov
lcall
leave
mov
mov
ss
xchg
pushf
insb
iret
lcall
or
movsb
xor
jne
push
xor
add
fwait
add
cmp
mov
popl
pop
xchg
lahf
inc
iret
in
add
lret
fidivl
xchg
adc
mov
in
jb
sti
ljmp
outsl
stos
lret
mov
and
outsl
les
imul
mov
fisubs
test
lds
xor
mov
xchg
cmp
out
add
or
inc
push
adc
xor
cmovbe
inc
mov
and
sbb
xchg
lahf
popf
movsb
xchg
cld
sub
push
mov
into
mov
xor
fsubs
in
or
dec
inc
cmpsl
stc
add
cmc
adc
cltd
test
adc
push
jg
hlt
or
mov
sub
and
xor
fdiv
sub
cli
inc
nop
jp
int3
sbb
or
loopne
aad
fidivrl
loop
in
inc
push
lock
cmpb
sti
jle
and
cmpsb
mov
mov
push
jmp
out
xorb
cmc
xchg
mov
pop
add
jl
decb
mov
in
add
jb
jmp
cmpb
in
sbb
sbb
movsb
clc
movsb
sbb
imul
xor
outsb
cmp
stc
dec
mov
xchg
mov
loope
lods
jp
mov
sahf
imul
cmc
andl
mov
dec
sbb
loopne
sbb
pop
test
mov
mov
pop
aaa
jmp
lea
cld
pop
push
leave
jge
xchg
fldl
cltd
sbb
push
lock
aas
xchg
cmpsb
insl
test
mov
adc
or
mov
inc
pop
jb
shlb
mov
pop
in
fcmovnu
jne
mov
outsb
test
icebp
jp
adc
mov
lahf
mov
lea
adc
iret
and
roll
out
lahf
scas
push
xor
movsb
test
mov
sub
cld
dec
out
dec
cli
fcoml
push
push
loopne
repz
stos
inc
fildll
arpl
insb
lds
push
pop
xor
inc
or
iret
xchg
sub
pop
out
mov
shll
lea
test
pop
xor
cmp
push
and
inc
pop
mov
cmp
into
in
sub
fisubs
mov
cmp
mov
popf
and
dec
cmp
pop
mov
cld
rclb
jl
jno
xor
mov
ret
cld
xchg
lock
dec
stc
or
xchg
lea
adc
mov
fisubrs
jp
push
insb
xchg
aaa
lea
jb
ret
jl
adc
mov
add
pop
jne
int3
push
je
ret
and
mov
cmpsb
lods
pop
push
icebp
arpl
or
sarb
and
jg
dec
inc
cmp
cmp
fimuls
shll
xlat
cmc
int
push
stos
xor
adc
fstl
mov
dec
lods
fwait
dec
xchg
and
call
cmpb
ret
and
inc
fimull
aam
mov
jnp
push
loopne
fwait
jnp
or
movsb
mov
pushf
cli
xlat
jge
sub
dec
jp
pop
shrl
xchg
push
add
xchg
loopne
std
repnz
and
ret
aam
scas
inc
push
addr16
ret
push
pop
jge
push
and
cltd
cmpsl
shll
push
inc
cwtl
xor
jp
jae
mov
js
cmp
pop
inc
popa
rcrb
popf
aas
cli
in
ret
or
sub
test
orl
mov
cltd
push
cli
scas
push
lods
out
adc
ds
xchg
xor
mov
sbb
mov
loope
xor
out
cmp
mov
movd
sub
jb
je
daa
xchg
std
mov
ret
lea
pop
sbb
aam
add
mov
dec
inc
loopne
mov
mov
adc
mov
and
fstl
in
and
jne
insl
sbb
sbbl
mov
sub
loop
adc
push
in
push
ret
in
adc
or
mov
cmp
sbb
jo
test
jnp
sbbb
mov
push
xchg
cld
mov
divl
subb
inc
mov
mov
cmpsb
and
and
mov
addr16
sti
jnp
fcoml
dec
iret
add
jmp
jnp
sahf
inc
ja
jge
ljmp
xor
dec
cmp
adc
ss
sub
xchg
daa
lods
call
out
shrl
mov
jge
inc
int3
dec
push
fs
rcrb
fnstenv
cld
pop
adc
mov
add
mov
shll
mov
xchg
push
push
fistpl
or
sub
test
inc
dec
mov
dec
cmpsl
push
leavew
out
out
das
jp
xchg
outsb
mov
cmp
cli
add
cli
flds
pop
pop
cmp
push
je
xchg
es
mov
cmpsb
mov
xor
ret
imul
mov
and
das
clc
aaa
scas
in
sbb
mov
or
loop
std
cmp
rcrb
and
and
and
out
aas
xchg
ds
pop
pop
sbb
jo
add
cwtl
sub
scas
mov
faddl
mov
fisubrl
fdivr
popa
outsb
mov
les
sub
icebp
jb
push
gs
mov
hlt
dec
fdiv
xchg
push
cmp
or
mov
sbb
fisubs
adc
bound
dec
xor
cli
rorl
sub
cwtl
cmp
stos
dec
push
lds
jne
cmp
xchg
add
stc
sbb
xchg
xor
les
xchg
aaa
fisubrs
loope
and
lcall
sub
scas
and
add
int3
fyl2x
sbb
and
mov
inc
roll
cli
push
out
sub
sub
out
sbb
rorb
or
jp
gs
pop
loopne
pop
gs
mov
in
or
aam
scas
cld
or
scas
add
xor
clc
dec
push
jbe
mov
jecxz
cmp
mov
je
xor
sbb
push
mov
fwait
add
insb
bound
jae
outsl
mov
ja
mov
hlt
icebp
repz
js
pushf
xchg
test
inc
inc
dec
xor
mov
sbb
and
nop
sbbb
lret
inc
addr16
mov
push
pop
into
xchg
outsb
push
cmc
roll
in
and
das
add
cmp
jae
call
push
ss
dec
je
lds
pop
inc
jb
jne
sbbb
lar
movsl
cmpsl
in
jns
xchg
lahf
call
inc
out
mov
pop
dec
push
xchg
sbb
mov
xchg
inc
repnz
or
cs
nop
push
xchg
js
push
daa
fs
push
and
sahf
iret
cmp
and
loopne
call
int
and
lcall
xchg
mov
test
jl
int3
cmp
or
xor
push
fdivrl
mov
sbb
bound
lret
xor
repnz
and
add
jge
xor
scas
out
sbb
xor
test
sbb
pusha
lret
in
gs
jae
std
int
add
cwtl
lock
js
scas
rolb
ja
lds
outsl
pop
in
ret
pop
xchg
mov
xchg
cwtl
cmpsl
inc
ljmp
imul
push
mov
test
hlt
bound
pop
mov
mov
pop
lret
cmp
ret
push
xor
mov
push
push
inc
mov
and
cmp
xchg
adc
jmp
push
out
adc
jl
movsb
mov
jne
push
pop
push
mov
mov
jmp
lahf
sbb
fcomps
inc
lds
sbb
and
clc
aad
sbb
iret
movsb
es
sub
push
movsb
jno
xchg
adc
dec
sarb
dec
mov
and
pop
and
fdivs
rolb
repz
lods
mov
mov
inc
add
xchg
cli
xchg
pop
sar
cli
push
mov
mov
push
mov
ds
negl
sbb
xor
jge
les
add
dec
outsb
push
mov
sbb
mov
mov
iret
pop
pop
ja
xor
dec
mov
popf
sti
sti
loopnew
fadds
jp
dec
and
and
stos
shll
popf
lods
mov
orl
test
sub
adc
stc
xchg
sub
insb
xor
icebp
xchg
test
cmp
cmpsl
jle
faddl
sahf
ljmp
jl
xchg
insl
sbb
mov
callw
test
jmp
gs
xchg
loopne
addr16
clc
movsb
xchg
jl
xchg
jecxz
ror
mov
hlt
mov
jmp
xor
add
arpl
or
xor
cmp
lock
js
pop
pop
xor
or
cmp
mov
hlt
std
cmp
push
push
adcb
pop
jp
cmp
mov
push
imul
adc
loope
add
add
icebp
xchg
sbb
movsl
and
hlt
push
insb
lods
mov
aaa
mov
inc
stos
pop
lret
jno
adc
lahf
sbb
popa
in
test
lret
pop
fdivs
sub
test
cmpsl
daa
js
into
adc
aaa
pop
sarl
sbb
jp
jl
filds
stc
cs
jmp
int
pop
push
mov
pop
inc
mov
in
add
mov
inc
push
mov
clc
lea
or
inc
std
popf
negl
hlt
or
les
sahf
push
int3
je
jo
bound
ds
mov
adc
or
jl
xor
push
int3
and
and
add
mov
lcall
iret
lds
sti
lods
stc
mov
popa
xchg
cmpsb
sbb
subb
push
fisubrs
dec
cld
xchg
and
insl
js
push
ret
mov
cmp
cmp
aas
dec
xchg
sbb
mov
shlb
mov
stc
sub
cmpsl
stos
mov
stc
pop
aas
fstps
cmp
sub
fmull
add
movsl
xor
pop
aam
inc
out
imul
sbbl
hlt
cmc
xchg
dec
xor
jae
pop
cmp
shrb
sub
imul
call
pop
or
sub
push
xchg
push
push
inc
mov
adc
jbe
out
xor
mov
cmc
mov
in
cmp
push
xchg
cmp
mov
cltd
adc
push
and
or
imul
ds
test
xor
lds
bound
sbb
test
xchg
mov
loopne
lret
scas
pop
test
dec
add
sbb
sub
fs
mov
nop
jg
mov
into
adc
subb
push
cld
inc
leave
pop
insb
sub
mov
jnp
and
mov
aas
xchg
mov
or
lods
mov
lret
pop
or
cmpsl
fstpl
mov
jecxz
aas
jle
push
pop
lods
les
cmp
mov
mov
scas
or
es
dec
jle
pop
add
add
frstor
and
adc
sub
add
sub
sub
js
pop
xor
scas
inc
inc
mov
xchg
das
xchg
xor
inc
push
mov
dec
aad
hlt
inc
push
popf
jae
mov
icebp
mov
sbb
bound
iret
sbb
mov
addr16
adc
or
mov
mov
mov
dec
sbb
inc
cmp
or
int3
insb
inc
aam
jo
mov
cmc
dec
js
and
out
ret
push
fxch
test
jns
sub
ret
or
push
add
loop
mov
adc
data16
sbbl
lods
add
outsb
stc
sbb
mov
dec
dec
pop
mov
push
cwtl
inc
dec
push
mov
push
jl
jg
in
shll
cmp
cmp
leave
sub
fnstcw
xor
mov
pop
scas
fcomps
test
lods
inc
adc
and
adc
lahf
sti
mov
stc
push
adc
jnp
add
jmp
xchg
outsl
mov
jbe
ljmp
sub
inc
fs
popf
xchg
dec
mov
cmp
inc
xchg
inc
or
sub
cmp
mov
mov
mov
sub
mov
push
jnp
cli
adc
cmpsl
add
fidivrs
mov
das
shll
xor
cmp
xor
pop
js
mov
jno
leave
push
mov
call
sub
mov
ret
lods
out
jnp
data16
out
cmp
popf
jno
mov
or
insl
cmp
rolb
inc
jne
nop
outsl
loop
rcl
sub
xor
adc
cmp
push
mov
fwait
dec
add
movsb
xor
int3
sbb
jl
pop
or
sub
jmp
jne
scas
xchg
jle
test
jl
lahf
push
mov
push
loop
in
dec
popa
sub
loop
and
pop
shlb
outsl
cmpb
lds
stc
sub
xchg
fimuls
or
icebp
lret
popa
pop
data16
push
icebp
cli
mov
or
inc
mov
adc
push
inc
rcll
and
xchg
icebp
xor
out
loopne
xlat
pop
out
shrl
push
outsl
cwtl
frstor
xor
jecxz
orl
test
jp
popa
aaa
jns
imul
ss
cmp
inc
add
jp
lock
lds
dec
fidivs
sbb
pop
shr
xor
jbe
insl
jae
xchg
mov
or
or
pushl
mov
adc
movsl
lret
mov
rcll
dec
add
lods
imul
push
data16
sbb
mov
arpl
cs
dec
jne
leave
cltd
lret
jns
push
push
and
imul
pop
call
hlt
scas
sbb
test
out
ss
ss
sbb
shlb
andb
inc
and
jno
add
jns
inc
hlt
sub
sbb
sbb
xchg
loop
sub
xor
aas
stos
pop
cld
cmp
sub
dec
push
jne
inc
repnz
and
xchg
shlb
mov
loop
test
xorl
adc
push
paddw
les
lcall
mov
mov
pop
and
mov
sub
nop
iret
sarb
jmp
data16
add
xor
movsl
cmp
addr16
daa
clc
adc
aam
ret
pop
pusha
push
and
pop
push
xor
push
scas
aam
frstor
inc
dec
adc
or
test
into
bswap
repnz
add
rorb
and
loopne
mov
cli
or
adc
and
mov
dec
xchg
iret
mov
dec
xchg
xor
popa
inc
fwait
into
pop
jp
inc
out
call
clc
cmp
arpl
out
xchg
pop
out
mov
cmp
je
insb
mov
mov
lcall
cmp
mov
xchg
das
stos
cltd
adc
sbb
js
and
scas
in
push
aas
add
out
in
jle
clc
popf
lods
fsts
cli
mov
fistps
jae
cltd
xor
fs
push
sti
cmp
mov
aas
jge
mov
and
sarl
nop
push
lret
mov
mov
fldenv
nop
sub
imull
add
add
pop
fldl
fnsetpm(287
and
fistpll
sbbb
push
cwtl
lahf
push
js
jle
icebp
adc
imul
xor
xchg
mov
inc
cld
cmp
lods
ret
push
mov
jmp
adc
push
xchg
repnz
and
adc
test
loopne
mov
rorl
test
sahf
repnz
sbb
addr16
fsts
testl
ss
push
inc
movsb
enter
mov
in
fiaddl
push
stos
aas
inc
jecxz
lock
rorb
inc
pop
jle
imul
push
and
xorb
in
add
aas
push
test
mov
xor
adcl
cwtl
sub
mov
inc
cltd
mov
in
stc
rorb
inc
mov
pop
dec
sub
mov
cmc
imul
xchg
mov
xorl
xchg
add
into
fnsave
dec
add
enter
sub
dec
sbb
pop
sbb
sub
test
pop
mov
sub
sarb
cmpsl
loopne
push
cmc
and
mov
idivl
insb
in
lret
push
cwtl
dec
sbb
push
jo
fcomps
sub
lds
lret
mov
scas
cmp
sbbb
sbb
leave
xor
orl
adc
lahf
test
incl
neg
adc
iret
das
mov
xchg
inc
cs
ret
frstor
push
add
mov
xor
adc
mov
push
pusha
fs
xchg
fwait
and
test
mov
add
mov
push
xchg
fsubrl
in
mov
outsb
subb
pop
push
xchg
mov
imul
rorb
push
mov
sbb
lods
cmpsl
ja
imul
add
sub
in
js
sub
push
ret
shr
movsl
add
dec
mov
sub
cli
cmp
xor
fdivrl
push
std
mov
inc
inc
pop
repz
iret
mov
into
arpl
fcmovnbe
gs
mov
shr
mov
cs
and
xchg
int
cmp
sbbl
ja
and
ret
adc
mov
jns
in
es
ret
cmp
sbb
pop
lcall
or
and
sbb
and
push
leave
pop
cmp
call
rcrb
mov
loop
arpl
rol
mov
inc
into
jb
push
cmc
dec
adc
jg
push
mov
or
sub
push
fcomp
movsl
push
push
shlb
jmp
cld
jnp
mov
mov
lret
xchg
fnstsw
std
cmp
loop
cmpsl
pop
xor
jns
jecxz
mov
xchg
outsl
ret
stos
sbb
adc
add
xor
xorb
scas
ret
in
fimuls
push
into
dec
pop
xor
dec
aaa
lret
loop
mov
sti
jle
icebp
and
mov
push
stos
icebp
fistpll
lods
iret
scas
dec
push
adc
pop
adc
aam
jb
or
int3
dec
fbstp
mov
add
mov
into
jae
outsl
test
mov
test
mov
mov
push
cmp
jl
add
push
pushf
mov
dec
cltd
adc
addb
add
adcb
outsl
mov
loop
out
out
into
call
pop
mov
dec
es
xchg
add
hlt
or
sub
test
cmpsl
jnp
fdivrs
sbb
mov
inc
aas
push
test
jg
ss
cmp
jae
fldt
push
mov
cs
adc
das
push
jmp
shl
sti
pop
or
sub
mov
outsb
test
jecxz
xor
sbb
jl
mov
jae
jb,pt
xchg
sub
dec
aaa
repz
sbb
lea
inc
dec
inc
scas
xor
ret
repz
mov
or
ret
sub
lahf
adc
push
rcr
mov
xchg
push
jbe
push
and
pop
pop
push
adc
and
adcl
sub
pop
dec
inc
mov
push
xchg
mov
outsb
mov
pop
sahf
test
es
filds
push
outsb
sub
cwtl
in
adc
dec
adc
cmp
je
adc
push
stc
jecxz
push
call
jno
add
mov
or
inc
mov
stos
push
sbb
push
dec
fidivrs
push
cmp
xor
ds
in
lret
loopne
sti
adc
cmpsb
jecxz
inc
pop
adc
add
pop
insb
sub
ret
xchg
add
daa
sub
ljmp
in
sub
negb
mov
arpl
mov
addr16
in
pushf
xchg
lock
add
scas
push
leave
lock
test
jle
into
sub
ds
gs
addr16
xchg
xchg
xchg
in
mov
jecxz
jnp
enter
out
or
enter
lods
sub
push
pop
adc
fcoml
sub
sbbb
adc
pusha
fdivrs
clc
adc
lea
add
mov
adc
into
test
pop
push
call
cmp
test
jo
jecxz
outsl
cli
fiaddl
lods
ja
fists
inc
pop
loope
mov
mov
pushf
daa
mov
sub
push
scas
or
jp
sub
out
push
xor
pushl
call
mov
or
divb
pop
cmpsl
mov
and
xor
and
sarb
mov
data16
push
jnp
aaa
enter
ds
fcompl
ret
push
jge
add
fisttpll
xchg
ds
mov
xchg
mov
bswap
mov
movl
fs
imul
test
mov
adc
setl
test
pop
sub
jns
mov
push
cmp
scas
fnstsw
in
mov
scas
aam
addr16
jle
fisttpl
mov
sub
pop
popa
shufps
xor
mov
xchg
fisubl
mov
sbb
cli
pop
pop
mov
dec
stc
fimuls
xchg
mov
mov
hlt
add
lds
push
mov
ret
mov
repz
inc
sbb
lret
xor
lock
or
push
imul
pop
mov
js
sub
fildl
push
or
adc
adc
into
mov
shrb
lahf
ret
mov
int3
push
pop
cltd
mov
test
or
inc
xchg
outsb
mov
sub
out
push
jge
fistps
jne
lahf
add
dec
icebp
popa
aam
jge
aaa
sahf
jno
push
dec
xor
add
scas
das
lea
movsb
lret
push
mov
repz
popf
lock
lahf
xor
or
rorw
add
pusha
sub
pop
in
sbb
sub
notl
imull
faddl
jmp
mov
stos
lcall
add
add
pop
fcomps
in
cmp
add
sub
xchg
add
movsb
sbbl
sub
add
out
mov
cmp
mov
sbb
pop
cmp
jae
jns
fcompl
pop
and
mov
or
fildl
cmp
mov
stc
clc
mov
clc
mov
and
mov
rorl
inc
test
fwait
stos
gs
orl
out
addr16
fwait
fwait
push
jl
and
imulb
push
les
imul
cmp
dec
mov
daa
sub
ds
xor
mov
or
lcall
push
mov
mov
in
xchg
push
cmc
insl
adc
lret
jns
jae
add
push
adc
orl
in
stc
sar
or
stos
sbb
popl
and
push
fisttps
lcall
pop
nop
jo
es
mov
inc
or
or
or
loop
xchg
scas
inc
lods
mov
int3
and
jbe
inc
xchg
shll
jl
call
cmp
push
cmp
icebp
fsubp
and
mov
scas
cmp
push
inc
xchg
loop
pushf
or
stc
mov
andb
repnz
mov
xchg
dec
cmc
xor
adc
xchg
mov
in
pop
aam
xchg
out
and
into
xchg
ret
adc
push
jle
xor
adc
add
dec
push
adc
jmp
jge
jecxz
int
cli
adc
mov
and
pop
sub
mov
adc
call
xor
or
stc
jae
push
adc
out
and
out
stc
or
jno
ja
sub
out
and
and
jle
xlat
cmp
push
leave
mov
into
or
jle
loope
mov
js
jl
mov
jnp
dec
sbb
jge
fcmovne
mov
adc
cltd
sub
pushf
dec
sbb
rcr
sarl
scas
out
jno
lret
sub
cmpsb
popf
mov
mov
lods
adcl
mov
into
sbb
mov
mov
ficoms
stos
aam
push
or
mov
cmp
push
sbb
hlt
and
adc
int
repz
inc
mov
in
and
pop
ficompl
negw
ljmp
mov
pop
jo
jecxz
clc
or
xchg
cmp
cli
sub
idivl
or
xlat
iret
and
jp
repnz
iret
fists
mov
stos
inc
mov
pop
push
into
mov
dec
je
xor
mov
sarl
mov
mov
stos
out
je
sbb
jle
push
mov
ret
stos
dec
ja
cmp
pop
sbb
flds
push
cmp
dec
mov
push
fldln2
adc
xlat
inc
aad
lret
pop
inc
or
ret
clc
orl
ljmp
push
enter
lea
testb
inc
dec
pop
sbb
mov
push
call
and
xor
out
imul
xchg
lret
popa
dec
and
std
dec
pop
fidivl
adc
scas
inc
mov
daa
xchg
dec
daa
pop
push
lods
cmpsl
lock
aad
xlat
aad
daa
shrl
test
add
movsl
outsb
mov
inc
add
fwait
lret
adc
lret
test
lret
sarl
sbb
push
mov
mov
mov
pop
mov
pushf
add
aaa
xor
sahf
cmp
mov
dec
lcall
loop
int
fiadds
ljmp
xchg
popa
daa
mov
sbb
arpl
mov
xor
inc
bound
sbb
pop
mov
test
outsb
bound
divl
xor
dec
stc
mov
add
jl
pop
fcmovbe
xor
mov
ljmp
mov
in
pop
cmp
lock
enter
jbe
popf
cmp
adc
jae
lods
sar
icebp
sbb
insl
dec
dec
push
lds
jne
adcl
movb
out
das
idiv
jp
pusha
add
push
sub
fsts
xchg
mov
test
mov
push
ljmp
mov
xchg
dec
mov
repnz
popa
test
inc
push
insl
out
outsb
mov
test
loop
jl
loope
push
int3
jae
sbb
or
int3
sbb
out
test
push
push
mov
sarb
nop
ds
or
test
lods
shl
push
push
jp
jg
lcall
mov
add
adc
push
aaa
mov
vpunpckldq
jae
inc
dec
sub
sub
fwait
push
inc
mov
mov
arpl
insb
sti
andb
fcoml
test
mov
icebp
movsb
js
hlt
iret
loop
inc
jns
pop
scas
sbb
pushf
fimull
sub
cmp
test
dec
rcrb
gs
pop
ret
cmpsl
lcall
lret
call
mov
repnz
mov
adc
int3
aaa
xchg
adc
cmpsb
mov
sub
dec
push
inc
arpl
inc
movsb
int3
xchg
test
outsl
inc
sub
test
ljmp
push
mov
clc
sub
mov
adc
test
mov
inc
mov
ds
or
fwait
xor
mov
sti
ja
cmpsl
adc
pop
pop
lret
sbb
ljmp
adc
lret
mov
mov
jge
vmovddup
mov
inc
xor
outsb
xchg
mov
outsl
test
shr
jle
cld
jb
ja
scas
jb
and
adc
les
arpl
je
dec
mov
cmpsl
xadd
in
sarl
inc
or
ja
out
subl
js
fadds
inc
ret
js
mov
mov
out
out
xchg
dec
push
les
test
lods
jns
or
mull
xlat
xchg
cmp
mov
lret
je
jl
xlat
inc
inc
pop
cmp
int3
pop
int3
lds
mov
xor
jae
cwtl
mov
xlat
repnz
adcl
lcall
push
lods
xchg
aas
fs
test
fmul
pop
add
push
xor
stc
ljmp
dec
stc
dec
push
push
lahf
jmp
shl
push
adc
sbb
std
pop
rclb
push
dec
or
mov
shlb
mov
adc
pop
frstor
sbb
es
inc
adc
sbbl
xchg
es
cld
nop
pop
dec
mov
stos
and
addr16
push
in
add
jno
mov
inc
popa
and
sbb
mov
xchg
bound
cmp
add
decb
xor
add
sarb
fcoml
rcrb
rolb
ja
add
xchg
sarb
imul
repnz
mov
sbb
pop
and
push
arpl
out
push
push
pop
fidivl
jae
lret
adc
arpl
mov
cltd
cmp
movsb
sub
sbb
pop
push
out
sbb
xor
sub
sahf
add
mov
leave
cmc
out
sbb
cli
sbb
push
cwtl
or
dec
mov
jp
sbb
iret
jae
xchg
xor
aas
inc
push
adc
jb
jl
sbb
dec
mov
and
outsb
xchg
xor
fists
mov
nop
out
int3
pop
cltd
cmp
test
mov
pop
inc
dec
push
jg
xchg
popf
outsl
jbe
daa
jbe
or
mov
sub
addb
jle
xor
dec
gs
loop
mov
xchg
outsl
test
or
inc
jo
push
adc
jle
mov
xor
xor
inc
mov
test
and
cld
pop
testb
inc
shrb
xor
cmp
pop
sub
or
fsubp
xchg
sub
lea
and
pop
scas
mov
xor
testl
adc
push
push
hlt
das
mov
cmp
push
out
xchg
xor
push
cld
sarl
and
out
and
fdivrl
outsb
dec
lea
xchg
push
xor
mov
adc
aas
sub
mov
push
jmp
xlat
stc
add
ret
or
sbbl
pmullw
and
or
jns
int3
jg
jnp
mov
inc
cmpsl
mov
aas
push
adc
pop
fidivl
mov
xchg
add
inc
and
popa
dec
insb
pop
into
roll
sbbb
pop
or
dec
push
js
pop
pop
add
mov
xlat
ficoml
repnz
pop
mov
cmc
js
je
arpl
inc
sub
dec
shrb
stos
int
js
fiaddl
cmp
outsl
hlt
and
je
adcl
jp
mov
popf
enter
nop
jae
je
addr16
or
mov
add
aam
std
inc
lcall
pop
mov
jns
xlat
cld
pop
mov
addl
push
cmp
dec
gs
arpl
inc
out
lret
lods
push
mov
stc
mov
cmp
sti
push
out
repnz
lea
and
in
mov
cmp
xchg
addr16
pop
xor
push
fidivl
daa
stc
cs
das
mov
ficomps
adc
pop
mov
inc
cmp
mov
xlat
sbb
fmull
xchg
xor
out
adc
and
push
xor
clc
stos
jl
fnstsw
jecxz
fidivrl
mov
aad
jmp
push
jmp
test
or
lock
cwtl
inc
int
inc
xchg
and
insb
inc
mov
ds
and
nop
sub
movsb
xor
or
pop
xor
mov
repz
lret
sbb
push
mov
sbb
mov
insb
push
mov
fisubs
lahf
mov
mov
popf
jnp
outsl
aas
ds
inc
ds
dec
sub
pop
pop
sbb
test
in
lret
lea
pusha
xor
je
lcall
inc
js
call
sar
jb
lds
or
mov
gs
mov
stos
cmp
xor
jg
mov
shll
adc
sub
sbbb
shl
aad
sbb
mov
mov
int3
xchg
xchg
mov
xchg
xor
dec
imulb
outsb
push
aas
xor
lods
ja
xchg
or
pushf
scas
loope
sub
push
push
push
lods
add
add
lods
sahf
cmp
cmc
xor
xor
cli
loop
add
push
scas
jl
dec
xchg
inc
loopne
jno
lcall
aam
lods
jbe
cs
inc
jno
fs
jns
gs
dec
xor
dec
cmp
mov
fists
sbb
jmp
lea
add
inc
pushf
push
xchg
dec
sub
cmp
adc
cmp
push
mov
adc
data16
flds
jno
jl
mov
fcmovbe
sbb
lahf
mov
gs
push
fiadds
mov
fbstp
jmp
arpl
movsl
shrl
push
add
aas
xor
inc
aad
inc
repnz
mov
cld
test
mov
sbb
cmpl
pop
cmpsl
lock
cmp
fists
jae
imul
mov
sbb
ss
inc
cmp
mov
aas
ret
lods
pop
test
cltd
jge
adc
and
outsl
rol
jge
jle
icebp
lahf
stos
xor
push
fmul
or
iret
data16
adc
data16
jne
test
mov
frstor
mov
out
fdivrl
xor
jle
sbb
fistpll
xor
test
mov
jp
jge
aad
xchg
pop
jne
or
rcrb
fstpl
add
lods
js
js
fs
pop
add
loop
inc
ret
sub
xor
push
push
xor
sarb
inc
stos
push
insl
dec
sub
or
jno
mov
data16
lock
gs
jp
stc
imul
cmc
loopne
jge
dec
cld
lods
sti
xchg
jmp
jecxz
pop
es
std
cmp
cmc
or
dec
adc
jnp
jb
jbe
sbb
push
aad
adc
sub
dec
lock
sbb
dec
xor
push
push
adc
jl
stos
cmp
inc
xchg
daa
int
push
dec
popf
test
add
mov
xor
mov
push
adc
bound
adc
mov
in
inc
sbb
xorl
or
inc
cmpsl
cmp
pop
rclb
insb
cmp
jno
xchg
fimuls
cmp
pusha
cltd
js
clc
mov
mov
adc
lods
pop
jne
out
fidivl
push
mull
imul
sbb
mov
std
jns
sbbb
es
fimuls
xchg
jo
pop
inc
fimuls
jp
inc
xchg
mov
push
xchg
pop
pop
push
insl
xor
jecxz
iret
pop
sub
cmpsb
popf
dec
testb
pop
je
test
push
sbb
xchg
mov
mov
xchg
mov
inc
aad
std
aaa
push
out
mov
stc
test
subl
and
cmp
lock
test
jne
insl
cs
subb
ss
pop
sbb
push
mov
fisubs
repnz
xchg
lods
cltd
ja
repz
jmp
sub
sub
sbb
std
inc
addr16
lock
insb
push
mov
sahf
mov
inc
clc
jmp
mov
jge
mov
cmp
lods
negb
sbb
ljmp
push
sub
ret
aas
xchg
icebp
jmp
pop
fstp
sub
xchg
xchg
lds
jle
shll
sbb
pop
adc
fidivl
insb
out
xchg
cmp
push
xor
lcall
push
push
xchg
popf
js
mov
mov
sub
adc
xchg
xadd
add
mov
sub
pop
xchg
add
cltd
aam
test
adc
cmp
push
pop
jmp
inc
rorb
pop
cltd
inc
pop
adc
dec
movsl
repz
loopne
nop
cs
mov
sbb
adc
iret
aaa
lret
popa
xchg
movsl
push
ret
movsb
mov
scas
fdivrs
stos
push
ret
mov
cmp
rcr
dec
pusha
add
hlt
mov
aam
mov
sarl
mov
ljmp
std
stos
pop
sahf
mov
mov
nop
mov
imul
pushf
fiadds
dec
adc
xchg
lock
out
cli
stos
xchg
push
mov
inc
sbb
pop
addl
push
in
inc
pop
imul
push
es
and
cmc
pop
lahf
sbb
daa
insb
jns
jb
inc
push
pop
inc
jb
lret
out
xor
jecxz
mov
loopne
lret
icebp
sbb
pop
leave
adcl
mov
div
rcr
or
stc
fwait
jbe
lret
pop
push
rcrb
jmp
aas
movsb
jo
cmpsb
or
mov
lods
mov
test
pop
loop
arpl
inc
mov
iret
mov
cwtl
jne
call
or
push
sbb
test
fisttps
in
lcall
hlt
sti
pop
stc
inc
adcb
mov
inc
push
add
add
jl
dec
outsl
inc
or
fcompl
fstps
sub
pop
rclb
dec
pop
xor
jno
jp
jbe
movsb
shrl
lds
mov
in
in
call
out
fiaddl
jns
inc
pop
push
or
xor
aam
hlt
jne
pop
jnp
lahf
and
dec
inc
fsubs
rol
adc
inc
push
sub
push
sub
fiaddl
cmpsb
mov
push
add
loopne
outsl
rcl
or
imul
int3
sub
leave
jnp
dec
mov
subl
adc
lods
outsl
js
mov
jnp
fnsave
cmpsl
dec
test
mov
stc
mov
xorl
mov
add
clc
sub
subl
les
scas
pushf
pop
add
hlt
fs
cli
sub
into
or
add
pop
jl
jl
xor
push
scas
jne
pop
clc
pop
xor
cmp
jns
test
lods
push
xchg
mov
fdivs
aas
mov
in
xor
loop
jno
push
dec
out
mov
mov
cli
lea
sahf
rcl
pop
aam
sub
mov
dec
and
icebp
mov
pop
pop
scas
mov
adc
mov
les
and
pop
nop
inc
jo
call
add
jecxz
stc
stos
cmpsl
mov
jle
add
in
mov
sti
jmp
xlat
ja
adc
mov
cmp
pusha
fildll
mov
cmp
pop
or
xchg
push
push
xlat
es
pop
jnp
xlat
popa
ret
mov
push
nop
jle
outsl
lret
pop
mov
jnp
pop
sbb
jbe
movsb
jbe
loop
mov
imul
jl
and
xchg
fwait
in
dec
add
cld
pushf
divb
aad
xor
jmp
fsubrl
mov
cmp
aas
add
push
pop
int
jnp
out
mov
cmp
jg
pusha
iret
xchg
lret
out
es
push
jp
xchg
jmp
es
pop
add
dec
js
push
inc
repnz
les
imul
movsl
pop
push
mov
mov
mov
inc
xchg
and
arpl
xor
lods
push
mov
cmp
fs
movsb
push
sahf
add
das
loop
lods
xor
lods
add
adc
adc
cmc
and
mov
dec
or
fwait
push
cmp
fmull
xchg
sub
flds
das
jmp
jg
push
int3
mov
ret
test
inc
or
mov
into
and
out
sub
inc
out
inc
add
loop
mov
cmp
ja
test
add
inc
negb
mov
mov
aad
mov
jno
xchg
je
fnsave
dec
leave
test
pop
and
in
push
repz
cmpsb
negl
aam
aaa
xor
jge
add
xor
ja
push
cltd
sub
rcrb
xchg
add
sti
cmp
jns
lahf
xchg
jo
shrl
arpl
sbb
add
jmp
fstps
ret
push
jecxz
dec
icebp
dec
lret
dec
sti
push
and
pop
xchg
xlat
stos
sarb
out
jmp
inc
add
in
movsb
jne
call
or
lret
and
add
dec
jne
xchg
data16
das
out
dec
mov
test
lret
adc
fistps
mov
ret
or
pop
jne
leave
decb
fwait
rorl
aas
paddsb
jns
rcrw
push
xlat
dec
shll
je
cmpsl
cs
dec
push
adc
adc
fldlg2
and
leave
push
mov
loope
push
sub
out
push
test
int3
jge
leave
dec
mov
repz
fists
adc
mov
loope
lret
lds
cmp
pop
rorl
out
mov
cmp
enter
arpl
xchg
loope
push
aaa
xor
loop
arpl
dec
rorl
cmpsl
mov
popf
mov
mov
or
or
xor
movsl
imul
xorl
sbb
sub
and
lret
data16
jae
stc
or
sarl
sarb
jg
mov
mov
rorl
add
clc
mov
repnz
call
pop
aad
ja
cmp
outsb
mov
xor
test
cmpsl
sub
push
jae
xchg
lock
lahf
xchg
xchg
outsl
adc
cmp
lea
push
lock
stc
xor
lcall
ret
lods
mov
dec
sub
and
dec
cld
aas
push
dec
aaa
insl
or
mov
mov
negb
shlb
cmpsl
xchg
inc
pop
cs
sbb
sbb
sti
sbb
ficomps
and
xor
xchg
push
ficoms
iret
adc
cs
push
js
std
mov
push
frstor
scas
and
dec
fcmovnb
pop
loope
add
scas
xor
iret
adc
mov
inc
jmp
mov
shrl
mov
call
cmp
lret
mov
mov
ljmp
pop
es
lods
jmp
arpl
movsl
mov
arpl
pop
roll
int
call
imul
cwtl
mov
cmp
inc
pop
aam
mov
daa
jae
inc
fnsave
in
jae
or
movsb
lcall
adc
sti
fidivrl
cmpsb
add
std
int
dec
inc
push
cmp
into
mov
fidivl
fcoms
js
std
push
inc
fcomps
add
imul
jmp
scas
and
lret
adc
or
fs
or
idivb
cwtl
jae
or
xchg
sbb
xchg
cmp
sub
cmpsl
add
stc
jno
aaa
shlb
lret
jae
mov
push
pusha
pusha
notb
std
out
inc
inc
and
je
cmp
jle
ljmp
test
loopne
cmp
ljmp
or
and
int3
aaa
or
mov
adc
clc
inc
enter
jns
push
xchg
movsl
insb
sbb
and
sub
lods
push
pop
les
xchg
add
ljmp
test
int
cmp
sbbl
xchg
popf
or
sti
xchg
arpl
les
inc
rclb
mov
sub
movsb
xchg
cld
out
mov
adc
stc
add
mov
insb
lds
and
bndstx
lea
sub
in
stc
mov
inc
mov
dec
cltd
jbe
mov
adc
sbb
cmpb
loop
inc
add
pop
mov
sub
xor
or
sub
push
pop
pop
sub
push
mov
adc
mov
or
pop
and
mov
in
fcoml
inc
push
pop
push
mov
adc
jbe
adc
les
sub
call
dec
out
mov
negb
inc
pop
mov
sub
lods
ds
push
out
lods
adc
pop
fldl
test
mov
or
inc
test
lahf
out
fadd
add
shrb
xchg
js
shll
cmp
xchg
mov
mov
stos
rolb
sub
ljmp
nop
cltd
inc
mov
add
push
andl
sahf
mov
push
push
xchg
cmovb
and
xor
cmovs
outsb
add
xchg
mov
sub
cs
repz
inc
lahf
mov
pushf
cmp
mov
sub
push
adcb
cs
pop
icebp
sbb
adc
jg
out
mov
xchg
shlb
mov
sti
jmp
lcall
out
mov
jmp
test
xor
outsb
sbb
les
xor
push
mov
xchg
dec
xor
adc
ret
in
pop
cmp
mov
in
loopne
out
mov
fidivs
xor
and
sub
cltd
push
bound
fstl
mov
hlt
lods
arpl
sub
sti
xlat
mov
insl
cmp
sub
or
test
sbb
and
js
jl
push
out
popf
sbb
movsb
jmp
xor
cmp
mov
jmp
je
or
scas
inc
int
bound
inc
mov
in
leave
add
push
and
or
push
sar
das
add
sarb
es
gs
inc
sbb
out
lret
jbe
shll
add
stos
int
add
mov
ss
lea
cmpsl
mov
push
neg
jl
fistpll
outsl
insb
and
mov
pop
ror
and
movsb
pop
adc
data16
je
inc
dec
stos
jmp
pop
cwtl
or
and
cmp
xor
sbb
cwtl
or
cmp
adc
pop
jp
mov
xchg
push
mov
jns
fdivr
hlt
pop
div
insb
sbb
cltd
adc
sub
fwait
cmp
repz
inc
xchg
mov
lret
jl
fs
bound
xor
push
adc
mov
mov
jo
jo
xor
pushl
or
out
and
push
pop
bound
mov
ljmp
ss
clc
movsb
add
sti
sub
out
mov
pop
adc
in
and
add
adc
testl
popf
pop
pop
mov
pop
mov
jge
into
cmp
xor
mov
ret
mov
gs
cli
and
push
cmp
loopne
push
push
popf
test
and
sarl
mov
stos
fstl
sub
mov
cmpsb
mov
lods
adc
pop
subl
jecxz
ret
adc
and
ds
push
cwtl
fildl
mov
in
mov
imul
das
gs
add
xchg
ss
inc
dec
lods
das
std
mov
lahf
mov
mov
and
stc
in
push
clc
sbb
push
fsubrp
inc
je
jae
lods
lret
mov
push
lcall
imul
int
jmp
popf
pop
cli
adc
leave
cmovg
jno
xchg
lret
in
dec
jno
jb
jb
lret
call
je
jbe
ja
inc
fstpt
mov
lret
mov
mov
inc
movsb
sub
lea
aad
ret
ret
and
fcompl
repnz
shrl
pop
dec
cli
leave
mov
cltd
int
mov
fcmovne
repz
xchg
sbb
cs
sub
dec
fnstcw
cmp
fidivrl
sarl
jmp
jmp
cmp
sbb
adc
xor
testb
adc
dec
das
mov
outsl
stos
xchg
xchg
push
sti
add
outsl
xor
lahf
mov
pop
mov
adc
pop
das
pop
adc
arpl
add
push
and
add
mov
call
xchg
cli
fistpll
push
imull
jmp
shlb
pop
repz
sbb
pop
cmpsb
negb
ret
outsb
call
pop
jns
push
jns
mov
out
loope
fisubrs
arpl
aad
lods
cmp
hlt
inc
mov
sub
inc
int
and
xchg
dec
mov
rcl
ljmp
and
and
cmp
mov
dec
inc
mov
movsb
rcll
sarb
cmc
movsl
les
mov
or
mov
lret
dec
sub
push
repz
iret
std
mov
movsl
aam
aas
jb
xor
mov
mov
aaa
add
lret
sbb
out
mov
das
mov
mov
xchg
andl
fmull
or
inc
xor
enter
adc
cmpsb
cmp
aam
subl
out
add
push
jnp
jae
dec
adc
repnz
push
scas
dec
call
push
inc
ficomps
xchg
imul
push
xchg
add
mov
int3
sbb
sbb
adc
iret
sub
mov
aam
dec
clc
jl
cmp
cwtl
xchg
push
sub
pop
mov
out
loopne
stos
sbb
cmp
flds
movups
fbstp
mov
sahf
add
or
out
dec
push
dec
pusha
pop
dec
ds
jle
xchg
cmpsl
pop
add
mov
sub
inc
pop
mov
icebp
pop
push
lods
nop
push
add
push
cwtl
cmpl
push
push
cmp
lcall
test
flds
lods
sub
sbb
lods
sbb
bound
popf
inc
pop
fnstcw
mov
popa
jae
dec
jmp
cmp
jno
cmp
or
lock
adc
and
and
cmpsb
xchg
push
mov
inc
xchg
cmpsl
je
xor
leave
mov
and
or
cmp
cmpsl
mov
pop
mov
sbb
xor
bound
xchg
es
js
int3
add
mov
addr16
in
push
test
xor
cmpsb
pop
pop
push
sub
ds
in
xor
rcr
stc
mov
mov
xchg
xor
testl
mov
out
movsb
jl
popa
fcoms
aas
arpl
sahf
sbb
test
cli
dec
rorl
scas
dec
inc
mov
lods
mov
sbb
cmp
cmp
jp
out
pop
in
xchg
sub
push
dec
sbb
xchg
lea
mov
cs
mov
pop
jbe
scas
pop
push
es
mov
lret
jo
jge
je
mov
sub
cmp
cmp
dec
test
sub
loop
or
lock
push
and
out
xchg
loop
cmpsl
dec
mov
push
pop
fcmovne
dec
jecxz
mov
jno
cmp
test
push
jmp
mov
xor
mov
jnp
sbb
mov
test
es
stc
mov
mov
cmp
sahf
push
shl
sub
adc
dec
or
and
dec
ret
ret
and
inc
mov
mov
insl
clc
clc
nop
pop
jl
es
jmp
mov
xchg
adc
aad
ss
push
pop
fsubrl
push
add
inc
bound
sub
enter
mov
mov
or
or
sbb
inc
jg
mov
repnz
out
faddl
cltd
sbb
subl
cmp
aam
repz
call
mov
jle
xchg
jbe
dec
push
into
mov
lea
pushf
add
cmp
sbb
mov
or
lods
mov
lds
cld
dec
scas
or
pusha
clc
testl
jnp
in
loope
adc
stos
xchg
loop
add
mov
test
test
dec
pop
xchg
pop
xchg
sub
sbb
nop
leave
pop
mov
dec
pop
inc
pop
dec
pop
mov
add
and
enter
sar
push
lock
sub
inc
jno
sbb
jae
jo
xchg
sarb
jmp
xchg
xchg
adc
fwait
push
iret
push
adc
pop
adc
pop
sbb
or
sub
dec
mov
shlb
xchg
cltd
sub
and
xchg
out
jne
rcrb
or
or
mov
xchg
xchg
inc
push
rorl
insb
es
cmpl
adc
xchg
out
jp
mov
cmp
sub
push
push
enter
ret
push
jo
xor
xor
dec
add
out
pop
in
in
adc
daa
fildl
rcrl
fdivr
mov
mov
push
std
lods
rol
xchg
pop
dec
mov
sub
push
fisttps
icebp
mov
xchg
mov
add
js
jmp
push
fs
mov
dec
bound
rcll
or
push
or
loopne
aaa
and
xchg
pushl
bound
int
aas
xor
rcrb
or
fs
popa
lcall
scas
jle
pop
les
jnp
cmp
inc
dec
sub
or
ljmp
push
dec
cmpsl
xchg
sub
and
test
add
in
inc
in
aas
ss
daa
jbe
and
jge
dec
test
adc
add
cwtl
dec
loope
mov
jecxz
call
imul
dec
les
xor
mov
lea
adcb
push
cmp
xor
push
int
rcll
stos
push
cmpb
jns
jns
mov
sbb
lahf
xchg
enter
xchg
fwait
je
fcmovnu
ds
inc
push
push
adc
push
jg
fneni(8087
call
push
xchg
popl
xchg
jo
call
jecxz
adc
sub
mov
in
into
sub
in
aad
xchg
dec
mov
mov
push
xor
jle
sti
sbb
rcll
cmpsb
pop
mov
lock
adc
add
mov
fdivrl
jecxz
adc
dec
shlb
push
adc
jle
and
in
movsl
aaa
enter
je
jp
sbb
lcall
cmpsb
pop
imul
fwait
xchg
mov
and
and
and
stos
repz
jp
cmp
sbb
xor
je
xchg
and
push
jl
xor
js
addr16
jno
or
imul
push
mov
cld
cmpsl
js
sub
mov
push
add
pushf
push
cmc
loop
pop
xor
xchg
and
mov
inc
mov
sarb
out
sbb
loopne
xor
fst
mov
inc
xchg
stc
out
mov
popa
movsb
enter
push
out
and
outsb
dec
scas
cmc
xchg
xchg
insb
and
xor
and
es
ljmp
or
inc
loopne
jle
adc
incb
not
jecxz
in
lds
sahf
movsb
mov
fcmovnbe
jg
jne
fistpll
ret
stos
jl
les
fldcw
inc
pusha
pop
daa
rcll
xor
lret
loope
push
add
aad
sbb
int
pop
repnz
push
jne
cltd
push
clc
dec
pop
in
daa
add
repnz
in
lahf
lret
fwait
mov
sub
mov
loopne
fdivs
jns
xor
or
sahf
cmp
push
add
movsb
add
addr16
movsl
andl
ret
or
lods
das
push
clc
pop
and
subl
out
popf
scas
outsl
jns
jecxz
add
imul
mov
and
pop
jl
sti
mov
mov
jbe
inc
sub
push
mov
mov
jecxz
push
push
inc
rcl
add
jl
icebp
test
pusha
sbb
push
mov
hlt
xchg
mov
fdiv
pop
aam
sub
stos
fwait
inc
pop
mov
push
mov
xor
addr16
dec
jl
dec
clc
lds
jge
mov
fwait
pop
mov
and
xchg
mov
shll
and
mov
and
outsl
push
dec
ss
jge
jb
push
and
das
jno
loop
mov
adc
mov
push
xor
ss
xchg
xlat
xor
fimull
or
mov
mov
std
dec
mov
in
xchg
aaa
inc
push
sarb
xor
cmpsl
jbe
pop
sbb
mov
addr16
inc
cmp
cltd
or
jne
lret
cmp
pop
jo
popa
push
cmp
mov
std
test
mov
xor
jb
popa
sub
lret
fsts
dec
insb
xchg
lods
jmp
mov
xchg
shr
lock
xchg
lahf
data16
pop
xor
fucomip
sarb
addr16
mov
pop
je
outsl
add
and
imul
mov
pop
mov
les
sahf
add
stos
loope
xchg
shrb
jg
sbb
sbb
out
jb
je
and
inc
push
sbb
icebp
rcr
mov
jp
dec
cli
xchg
push
sbb
lods
mov
cmc
pop
test
mov
aad
movb
lods
or
negb
je
test
int
sbb
push
cs
and
xor
jmp
push
out
or
xchg
pop
testl
jno
add
mov
lea
xchg
insb
mov
cld
test
sbb
add
cmp
inc
dec
xchg
xchg
pop
pop
sbb
xor
idivb
hlt
mov
icebp
data16
cmpsb
jmp
jmp
push
aam
cmp
popl
push
sbb
push
inc
push
mov
mov
and
cmpsb
and
arpl
cmp
cs
std
mov
xchg
jne
push
rcrl
pop
pop
mov
jle
cs
sahf
scas
inc
push
mov
ret
add
in
loope
jge
sahf
and
inc
push
sbb
inc
ss
fdivl
icebp
xchg
mov
loope
jl
jge
popa
fcomps
movsb
inc
push
je
enter
loopne
pop
pop
cwtl
int3
ror
sbb
pop
jnp
adc
pop
push
roll
lock
lods
xchg
cltd
lahf
mov
test
pop
sahf
loopne
imul
xchg
sarl
push
xorl
cmpsb
or
xchg
push
pushf
call
test
add
test
xor
das
pop
enter
mov
out
in
fcmove
mov
mov
add
out
rol
or
mov
jns
pusha
sbb
sbb
sarl
add
pop
in
filds
test
cwtl
arpl
lods
pop
jecxz
mov
out
jno
xor
cmp
push
xchg
jmp
out
in
jb
lcall
sub
push
adc
orl
mov
jno
xor
cld
hlt
ret
mov
test
pop
mulb
xor
imul
jnp
subl
nop
or
int3
and
xor
mov
popf
sub
pop
hlt
nop
push
rorb
ljmp
lahf
mov
mov
pop
ret
push
fisubrl
and
xor
das
adc
fisubrl
push
jp
bound
adc
fadd
and
inc
fadd
jnp
adc
push
jbe
mov
mov
mov
push
mov
sub
push
shl
sti
and
inc
incb
mov
add
lock
stos
adc
xchg
push
push
mov
sbb
xchg
cwtl
stos
daa
mov
mov
shrb
aam
loopne
jnp
xchg
icebp
stc
jb
insl
out
nop
fcmovbe
cmp
sub
pop
gs
xor
inc
inc
lret
fwait
andl
mov
out
bound
notb
mov
hlt
mov
add
stc
inc
mov
jmp
mov
cmp
push
lcall
mov
call
movsb
repnz
ret
pop
dec
ret
insb
ljmp
ss
bound
xor
push
mov
dec
xor
popf
or
xchg
add
cs
sbbl
aaa
jae
movsl
loope,pt
mov
jp
nopl
sub
repz
mov
mov
push
lea
clc
add
cmp
mov
iret
push
daa
mov
les
into
fwait
movsl
xor
cmc
sbb
push
sbb
in
mov
lahf
cmp
adc
pop
fistl
iret
inc
sub
and
imul
pushf
and
and
xchg
inc
insb
test
or
ds
pop
loop
insb
and
mov
lret
into
cld
scas
push
cmp
js
sbb
lahf
lock
lock
mov
xor
rep
push
aam
cltd
mov
sbb
or
adc
lret
xor
pushf
cmpsb
jecxz
je
insb
cltd
mov
push
mov
subb
lret
jbe
sub
std
mov
fimuls
pop
jg
imul
pop
in
std
push
pop
push
in
or
pushf
inc
stos
push
sbb
flds
adc
cmp
cltd
fisubs
into
ret
add
inc
mov
ljmp
repz
inc
jl
lret
xchg
inc
cwtl
lret
testl
xor
push
cmp
mov
inc
pop
pop
fsubs
faddl
bound
popa
sub
push
push
outsl
in
sahf
ficoml
and
in
xchg
jno
or
mov
fwait
iret
push
into
dec
adcl
aam
call
fidivrs
hlt
xor
fs
filds
adc
mov
and
sub
test
cmp
jb
scas
scas
mov
sbb
dec
jno
arpl
nop
xor
sub
or
mov
nop
cmp
cmp
gs
loope
popa
dec
pop
inc
push
mov
addr16
call
cmp
jbe
and
xchg
or
sub
mov
fldenv
xchg
mov
mov
fidivrl
jecxz
rorl
lret
outsl
shll
stos
mov
xchg
aam
repz
mov
sub
sub
shrl
inc
fsubl
icebp
aaa
and
xchg
cli
popf
push
or
or
inc
jle
popa
push
xor
stos
testl
dec
and
xchg
xlat
shlb
jbe
hlt
stc
cld
into
test
std
pusha
inc
andl
mov
sbb
sbb
popa
out
enter
stc
adc
arpl
ret
insb
jecxz
xor
push
add
cltd
cmp
inc
sbb
and
push
xchg
inc
pop
fidivs
pusha
lret
cmp
ret
mov
in
test
pop
inc
dec
imul
daa
mov
out
imul
ds
jo
repnz
andb
add
mov
lock
in
jbe
and
test
mov
xor
adc
test
stc
mov
dec
repz
cmp
sub
jmp
jne
ja
jle
jecxz
hlt
sbb
dec
test
add
add
mov
push
mov
int3
inc
shlb
jl
addr16
pusha
sbb
daa
sub
roll
out
subb
push
mov
xorl
cltd
pop
push
mov
popf
repnz
cld
add
push
aaa
inc
pop
cmp
cmpsl
aas
cmp
loope
ds
lods
sbb
je
xor
add
repnz
mov
imul
inc
test
and
movsb
jecxz
scas
xor
and
and
adc
imul
addr16
jne
inc
data16
int
or
repnz
mov
pop
mov
je
sbb
aam
xchg
inc
fists
inc
pop
cmp
push
sub
lea
rcll
inc
lea
or
cmp
arpl
pushf
lods
adc
sub
lds
jle
test
gs
jg
mov
sbb
scas
add
inc
pop
arpl
push
and
lds
or
jne
in
fwait
dec
cmp
sbb
or
lods
push
xor
or
sub
pop
cmp
arpl
xchg
xchg
or
mov
loopne
cmp
lcall
pop
adc
aaa
stos
sarl
jp
rcrl
loope
inc
loope
push
fld
xchg
lds
shrb
or
loop
lods
mov
fbld
sti
or
push
lea
xor
pop
cwtl
or
dec
imul
and
jp
test
mov
lea
xlat
push
mov
pop
out
in
scas
in
mov
ret
mov
jl
xor
dec
repz
mov
sub
adc
inc
and
and
andps
test
imul
adc
aas
or
sbb
popa
lea
or
mov
mov
inc
js
je
ja
movsb
xchg
and
outsb
xor
or
jmp
les
push
fstl
xor
movsl
xlat
jbe
fiadds
mov
divb
stos
in
mov
jl
aaa
adc
int3
scas
je
fidivl
mov
mov
sahf
les
test
jne
mov
ret
jg
je
ret
test
iret
sub
and
icebp
movsl
jmp
cmp
lret
jne
push
mov
jbe
sti
cltd
dec
and
imul
sbb
mov
and
mov
inc
xchg
outsb
pop
xchg
xchg
cmp
mov
leave
jl
scas
pop
mov
add
imulb
inc
pop
sbb
in
mov
mov
movsl
xchg
ja
cltd
jp
bound
dec
aad
mov
sub
jnp
shlb
and
js
xchg
bound
push
int3
mov
jns
jmp
inc
xchg
push
push
xchg
and
add
pop
and
or
and
cmp
popf
hlt
jo
push
cmpsb
cmp
das
xchg
inc
repnz
cmpsb
pop
loop
jp
push
pop
sbb
bound
cmpsb
or
mov
ret
addr16
mov
sbb
sub
dec
dec
cwtl
ss
or
mov
dec
mov
outsb
sub
rol
mov
out
jbe
jbe
inc
dec
adc
pop
into
hlt
call
xor
in
or
stos
add
adc
aas
cmpb
outsb
dec
psrlw
add
xchg
stc
out
es
jae
loopne
ret
sub
aas
aaa
lcall
sub
and
cmpsl
jne
push
mov
mov
xor
add
or
in
mov
hlt
sbb
add
mov
loop
jl
dec
mov
pop
cmc
jae
nop
lret
jle
mov
subb
or
mov
cwtl
jbe
mov
cmp
icebp
push
lods
cmp
test
ret
test
add
push
fstp
sbb
out
mov
inc
stos
fildll
jns
xlat
xor
mov
iret
popf
iret
in
popf
int
push
decb
sbb
adc
mov
sbb
xchg
cmp
xor
movsb
lahf
shrb
negl
lret
xor
push
emms
ljmp
je
xchg
popf
test
pop
jns
mov
jl
scas
dec
and
sub
push
aaa
pop
sbb
adc
inc
mov
inc
test
lods
loopne
mov
add
aaa
ss
imul
inc
test
insl
xor
les
inc
push
pushf
out
jne
outsb
adc
repnz
imul
fisttpl
pop
push
lret
dec
lock
test
push
mov
or
cmp
ljmp
adc
ja
mov
push
mov
or
lret
sti
insl
stos
pop
mov
sub
xchg
ffreep
xorb
add
xchg
mov
mov
imul
push
sub
xchg
cltd
aad
push
popa
mov
xchg
and
xchg
dec
sub
mov
and
cmc
insl
bound
pop
or
roll
mov
dec
pop
dec
dec
stc
push
int3
pop
push
lret
add
lea
enter
xor
out
or
mov
pop
repnz
jns
jnp
negb
out
aad
hlt
test
xchg
int3
pop
pop
out
sti
ja
out
inc
mov
xor
or
inc
loopne
clc
movsb
pusha
push
out
sub
adc
mov
call
mov
cmp
into
loop
ret
jmp
jne
xor
or
fidivrs
sbb
subl
cltd
cmp
nop
addr16
jp
or
mov
sbb
inc
fisubrl
push
int
xchg
dec
jp
jmp
xor
jp
cmp
loopnew
add
cmpsb
fcoms
out
in
es
lods
pop
dec
push
add
mov
xlat
ret
cli
mov
inc
ljmp
pop
dec
jbe
fldl
adc
xor
jae
loopne
sbb
add
hlt
xor
xor
in
inc
push
mov
dec
jne
bound
loope
insb
jmp
sub
mov
jnp
into
scas
jne
test
sbb
sub
mov
fisttpll
pop
jae
cmp
add
push
mov
test
sub
mov
sahf
xchg
out
dec
insb
inc
jne
jg
push
lea
push
repnz
cli
mov
sub
addr16
mov
and
sti
cmp
addr16
lret
cmpsl
jns
roll
cmc
mov
push
fcmovnb
pop
in
push
lock
adc
lock
mov
mov
xlat
push
mov
stc
out
sahf
movsl
sub
lahf
dec
push
outsl
jb
push
cmpsb
movsb
adc
repz
into
sahf
cmp
arpl
test
addr16
out
mov
xor
movsl
outsb
std
mov
ret
add
leave
pop
js
push
insb
ds
or
cli
jmp
sub
dec
xor
inc
mov
jle
cmpsb
cmp
scas
mov
push
fsincos
push
jae
mov
icebp
dec
ja
xor
add
lods
jo
cmpsl
inc
xchg
in
popl
jecxz
mov
cwtl
pop
mov
mov
movsl
dec
fldenv
push
jae
movsl
fwait
xorl
jge
outsb
sub
in
pop
and
sahf
sub
inc
data16
std
cmp
addr16
inc
ja
rcr
lods
testb
jge
lds
test
loope
lock
cmp
cmp
add
cmp
cmp
clc
or
mov
aad
in
jnp
ficoms
out
push
les
or
pop
test
adc
sahf
mov
adcl
data16
out
or
repnz
das
sbb
out
test
cmpl
jno
insb
pop
clc
push
fwait
pop
shl
mov
xchg
lods
add
js
mov
lret
push
pop
jle
jo
push
rol
lahf
jp
sbb
or
jmp
xchg
test
mov
cmc
test
jmp
xchg
pop
inc
or
hlt
clc
shrl
rolb
movsl
nop
pop
out
mov
mov
movsl
cli
push
pop
daa
mov
or
out
ret
add
jmp
sub
pop
subl
std
pop
dec
jl
lret
xchg
fistl
or
inc
mov
jecxz
imul
shrl
mov
adcb
ss
hlt
stos
mov
ja
and
adc
inc
fidivs
stos
repz
popa
test
sbb
enter
test
jae
fnstcw
cltd
fnstsw
shrl
into
insb
cmp
push
icebp
cmp
push
outsl
add
cmpsl
xor
stos
pusha
lods
data16
jecxz
xlat
ret
jbe
pop
sti
fisttps
adc
fisubrs
xchg
setge
imul
rcrl
lahf
or
mov
push
mov
push
insb
add
jb
dec
das
cli
icebp
sbb
cmp
aam
sbb
add
subb
jecxz
jbe
daa
inc
arpl
mov
push
xor
dec
popf
pop
and
data16
mov
cs
jmp
add
xor
pop
mov
jbe
mov
sbb
pop
test
mov
rorb
jle
jg
scas
leave
arpl
data16
stc
ss
sbb
mov
orb
push
xlat
daa
repnz
jns
dec
mov
stos
xor
scas
outsl
and
les
jg
pop
hlt
push
movsl
mov
not
inc
cmp
loop
mov
or
and
lret
xor
cmpsl
mov
mov
shlb
and
movzbl
xor
sub
jae
aaa
or
ss
dec
gs
dec
and
ret
lahf
add
mov
sahf
jg
lret
sbb
xchg
mov
repnz
mov
push
pushf
ret
xor
mov
lock
sar
jmp
push
dec
mov
or
xchg
in
cmp
adc
cmp
scas
mov
mov
lea
dec
mov
dec
scas
or
rclb
scas
test
fsubrs
in
sub
mov
xchg
mov
cmc
arpl
cmp
leave
push
sbb
pop
movswl
sub
push
rclb
add
lahf
lea
fsub
mov
mov
int3
cwtl
push
jecxz
xchg
cltd
dec
or
sbb
movsl
mov
fldcw
ficoms
nop
pop
push
jne
push
fwait
jo
mov
out
fwait
cmp
xor
ret
sub
jmp
js
cmpsl
aam
dec
inc
aas
xor
cmp
insl
dec
jmp
mov
add
fcmovbe
xchg
pop
mov
pop
and
fwait
xchg
nop
ja
outsb
stos
xchg
shl
sub
and
push
mov
lahf
std
push
inc
mov
jnp
inc
inc
rorb
cltd
scas
dec
xchg
filds
mov
inc
icebp
out
fcomps
fisubrl
in
xchg
lds
cmp
mov
test
xor
pop
ja
or
pop
and
inc
xor
jl
pop
loopne
dec
and
xor
int
mov
mov
lcall
adc
lods
sarb
fnsave
pusha
pop
insb
sbb
cmp
loope
xchg
lods
jecxz
int3
repz
xchg
mov
inc
xchg
pop
adc
dec
cmp
scas
cmp
pusha
fldl
jbe
cwtl
add
lock
add
xchg
sarl
outsl
push
mov
xor
sbb
leave
ss
dec
sub
sub
jl
test
negl
mov
roll
cmc
jge
int3
fsts
scas
cmp
jecxz
xacquire
js
inc
ljmp
push
inc
loope
mov
inc
pop
int
enter
sti
dec
shlb
xchg
inc
pusha
cmp
or
sub
fidivrs
inc
jae
add
inc
mov
in
fdivs
xchg
jns
psubd
pushf
lcall
jbe
hlt
leave
out
mov
sarb
cmc
sub
decb
inc
shl
ret
lock
fisubrs
lcall
jle
pop
mov
add
adc
xchg
call
lahf
fcompl
jmp
sbb
xor
in
push
in
insb
out
and
mov
lahf
in
fimuls
push
lret
je
mov
jbe
add
xchg
xchg
clc
mov
loop
lock
imul
outsl
sub
inc
mov
outsl
inc
dec
test
jmp
test
add
into
adc
fsubrl
scas
stc
js
push
jnp
std
cmpl
pop
icebp
test
mov
fistl
xor
lcall
out
dec
popa
out
rcr
ds
cmp
or
fs
and
and
mov
test
add
shlb
out
out
inc
push
into
int
int3
cs
jecxz
xchg
adc
aad
pop
nop
cmp
fs
sub
push
out
fcmovb
popf
shr
xor
mov
inc
fcmovnu
sbb
add
cmpb
xor
fcmovb
mov
addl
mov
fdivp
in
jge
test
push
sbb
pop
xor
stos
out
addl
push
sub
int3
sub
movsb
lret
xchg
aam
pop
add
dec
sahf
popa
ja
push
loope
xchg
lods
movsl
xor
jnp
add
sub
xlat
call
and
stos
sbb
jb
adc
cmp
dec
pop
sub
repnz
ljmp
mov
pop
lret
cmc
xchg
inc
cmp
movsl
adc
cmp
mov
pop
into
mov
push
pop
mov
mov
jmp
mov
cs
subb
lock
xchg
in
popf
in
jecxz
ja
lret
fldcw
addl
enter
push
dec
bound
dec
pop
daa
pop
mov
les
fcompl
pop
add
xor
mov
lods
rcrb
push
lods
jae
mov
mov
cmpsb
add
mov
call
in
or
fisttps
leave
xchg
jge
and
pushf
adc
std
add
imul
mov
aaa
inc
adc
inc
sub
std
decb
mov
mov
sbb
mov
jle
sbb
fdivrs
loopne
mov
insl
hlt
mov
add
test
jge
xchg
inc
arpl
xor
enter
mov
bound
jp
jmp
idivb
mov
addr16
mov
call
dec
pop
cmp
inc
daa
fisubrs
pop
mov
mov
add
dec
add
mov
out
add
jmp
in
mov
xorb
xor
cli
xchg
es
cmpsl
mov
jo
and
dec
xchg
mov
loope
mov
lahf
pop
or
lret
dec
dec
push
rcrl
xchg
fs
mov
jbe
sbb
or
dec
stc
enter
and
dec
mov
sbb
aaa
lret
fdivrl
jne
aaa
fcoms
fisttpll
push
jge
xchg
sub
mov
jecxz
cmp
xor
add
mov
jb
fnsave
in
push
jne
mov
lret
add
ja
cmp
sub
cmp
pop
adc
or
ss
std
js
movsb
xlat
xchg
jl
insl
ret
lods
adcb
mov
fbld
dec
or
and
mov
xor
xchg
push
cld
sub
lret
mov
aaa
xchg
jle
pop
jle
sbb
jmp
pop
sub
mov
lea
mov
les
mov
dec
rcr
xchg
ja
xchg
shl
pop
mov
fmull
in
xchg
pop
fs
inc
jp
into
or
aas
mov
mov
xchg
lret
jle
inc
mov
imul
lods
iret
and
add
add
jg
cmc
xchg
outsb
xlat
daa
mov
test
cmp
jg
cmpsb
mov
sti
cmp
sub
out
pop
lds
or
clc
loop
xchg
mov
push
in
les
lcall
xor
in
inc
in
lods
adc
xor
fst
mov
adc
xchg
pop
jle
cld
test
or
lahf
xor
ja
add
clc
or
jae
push
into
imul
xor
shll
dec
dec
push
xchg
shr
jmp
ds
das
and
fwait
dec
pop
test
cwtl
cli
dec
jl
jae
movsb
jo
push
sub
or
push
xchg
data16
das
scas
cmp
lret
mov
ret
int
fwait
aaa
dec
sub
int3
push
ret
mov
ficoms
cmpsl
sub
in
mov
push
fstps
dec
push
push
sub
std
mov
cmp
cmp
jp
aas
cmp
xchg
add
aas
xchg
stc
dec
in
jo
test
ret
xlat
sahf
out
or
fstpl
push
lret
icebp
mov
sbb
sub
movb
inc
jb
imulb
imul
push
daa
loope
mov
jmp
das
xchg
pop
mov
inc
movb
and
pop
dec
pop
add
jecxz
ds
mov
fcoms
std
jbe
sbb
push
lahf
mov
mov
add
adc
mov
loop
or
push
mov
rclb
dec
int
sub
cmpsl
sbb
bound
adcb
sbb
lcall
xchg
sub
xchg
xor
aam
lods
xor
leave
mov
mov
sub
cmp
std
jne
pop
push
mov
dec
lret
ret
sbb
pop
mov
repnz
sub
jnp
mov
cltd
lret
jp
test
imul
packsswb
mov
out
iret
add
or
clc
dec
mov
mov
push
sti
stc
scas
aas
repz
test
mov
aad
adc
lods
jo
ss
mov
or
sbb
xor
not
sbbl
fld
add
push
fldl
aaa
add
push
and
loope
push
pusha
loop
push
ja
xchg
push
adc
aas
add
test
das
repz
adc
xor
add
xchg
mov
cltd
mov
mov
xor
jge
or
stos
pop
ret
ffree
xorb
mov
pop
xchg
hlt
mov
jne
pop
adc
test
push
xor
and
jp
popa
mov
cmp
xchg
in
outsb
adc
xchg
xlat
adc
xchg
repnz
dec
xor
mov
shlb
jbe
clc
je
sub
fisubl
dec
iret
jb
cmp
push
sbb
mov
and
stos
pop
sub
pop
ret
xchg
mov
sbb
pop
js
xchg
dec
fs
jne
jo
mov
ljmp
cld
pop
or
mov
cmp
sti
adc
pop
fisttpll
arpl
jg
cltd
rcrb
pop
dec
fcmovne
out
and
fmuls
stos
out
xchg
aad
call
fs
push
push
cmpsl
je
outsl
fisttpll
inc
inc
cmc
jno
aad
ljmp
push
mov
es
addr16
inc
and
mov
mov
mov
sbb
jns
in
lret
or
aaa
out
out
idivb
xchg
mov
or
pop
xchg
inc
mov
or
add
dec
pop
xor
fs
ss
pop
sbb
into
lock
shll
push
push
xchg
cwtl
rolb
stc
aaa
movsl
mov
pop
les
imul
pop
int3
sahf
jmp
mov
jmp
mov
xlat
shrb
cmpsb
cmp
xchg
fwait
sbb
jne
bound
sbb
dec
push
push
pushl
adc
aaa
or
and
and
pushf
xchg
fisttpl
cmpl
xor
adc
pop
test
fisubl
xchg
test
and
scas
mov
clc
repz
test
in
xorb
adc
das
xor
push
inc
push
add
and
cmp
cmp
testb
sub
fdivl
xchg
jae
cmp
sahf
inc
je
nop
rorl
cld
xchg
popa
cmpsb
push
jae
mov
ja
es
xchg
mul
insl
das
fstp
push
cmp
shrl
xchg
outsl
inc
pop
add
bound
or
lds
jo
repnz
sub
mov
insl
insl
push
inc
out
and
mov
mov
mull
paddw
insb
iret
inc
add
add
pop
mov
jle
cs
pop
lea
aaa
neg
sbb
ret
enter
pop
xlat
jle
sub
sahf
shlb
test
cmpsb
mov
orl
pop
test
insl
jecxz
popfw
jns
dec
sbbb
lods
sbb
ds
inc
loop
hlt
dec
inc
lret
shrb
or
aaa
add
mov
push
inc
roll
sbb
nop
mov
mov
push
push
fsubrl
inc
push
aad
outsb
jb
arpl
add
sbb
ficoml
cmp
inc
mov
jne
pop
pop
jp
out
loop
mov
mov
out
jns
out
mov
xlat
and
sbb
fsts
dec
lea
fmul
mov
push
fwait
push
stos
fstps
test
mul
add
test
mov
hlt
hlt
out
sahf
fs
xor
pop
imul
add
adc
add
push
push
aaa
movsb
mov
hlt
aad
leave
call
mov
xor
daa
pop
or
pop
xor
in
mov
orb
xor
test
adc
in
cld
faddl
dec
add
adc
inc
popf
sti
popf
and
or
dec
out
adc
mov
sub
pop
sbb
add
mov
push
mov
insb
push
daa
aas
popf
mov
cmp
mov
sub
aad
stos
jle
rcll
insb
dec
rclb
pop
sbb
pop
mov
out
movsl
xchg
bound
repz
cmpb
adc
pop
ret
inc
mov
adc
sub
pop
pushf
or
call
fbld
insb
jns
leave
cld
adc
inc
sbb
xor
mov
mov
jg
mov
lret
mov
clc
cs
daa
pop
rcrb
mov
xor
movsl
je
movsb
pop
jns
test
cmp
jp
js
cltd
lock
scas
mov
imul
jp
xor
dec
in
xchg
push
clc
mov
hlt
pop
jns
and
xchg
dec
mov
add
push
and
or
roll
cmp
mov
test
gs
test
mov
xor
les
imul
lret
push
dec
mov
data16
mov
movsb
pop
out
fs
sbb
dec
xchg
test
aas
dec
push
or
test
inc
stos
shl
cmp
xchg
mov
mov
mov
in
les
jle
test
test
andb
test
rolb
icebp
xchg
sbb
pop
repnz
pushf
push
subb
pop
je
pusha
pop
test
fcmove
add
cmpsb
repz
in
mov
lds
mov
cwtl
sub
sbb
xchg
xchg
cmpsl
loop
jg
lock
seta
addr16
mov
cmc
lea
xor
mov
adc
add
cmpsl
lret
or
push
push
test
mov
popa
addb
in
cltd
xor
sbb
mov
xlat
insl
fdivs
jno
or
mov
je
imul
je
dec
nop
daa
dec
mov
or
insl
inc
jns
jne
inc
loop
fisttpll
cwtl
shrb
mov
jp
push
js
push
cmpsl
ficoml
adc
sti
jmp
push
pop
decl
sub
sub
sub
in
sub
push
cmpsl
dec
out
clc
sub
lods
insl
jns
push
push
mov
loope
dec
mov
pop
in
stos
jae
and
int
fdivl
jle
addr16
aas
enter
movsb
ds
inc
cs
pusha
xchg
jmp
mov
jg
adc
lahf
mov
mov
inc
mov
in
sbb
repz
cmp
jp
dec
push
sbbl
ljmp
adc
test
mov
cmc
int3
xchg
mov
clc
sub
push
into
adc
and
mov
inc
dec
inc
inc
scas
out
push
push
xchg
sbb
popa
dec
dec
lods
or
ljmp
and
or
int
mov
mov
out
and
sbb
add
push
aas
mov
pop
pop
and
jmp
popf
fwait
nop
cmp
data16
dec
push
mov
pop
mov
pop
sub
ja
loope
or
push
scas
mov
jl
cvtpi2ps
mov
lock
test
and
mov
fwait
inc
stos
int3
and
andb
xorl
mov
outsl
jle
fsubrl
popa
jge
mov
cmp
loop
and
mov
pop
cmp
mov
pop
out
jmp
iret
dec
filds
inc
js
xlat
push
xor
pop
mov
jmp
or
mov
imul
or
sbb
xchg
dec
addl
mov
clc
sub
sbb
enter
in
scas
ds
pop
cmp
lock
and
cmp
div
ficoml
dec
in
cld
cli
jno
ja
or
ss
jg
adc
cli
mov
adc
pop
pop
sub
adc
jo
rcr
mov
shll
loopne
or
lcall
popa
and
sub
adc
cltd
lcall
pop
xchg
jno
or
inc
icebp
sbb
jae
mov
mov
fwait
icebp
std
adcb
fildl
jnp
xchg
addl
popa
dec
cli
lcall
inc
call
adc
popa
sub
push
sub
lahf
pop
cmp
ss
repnz
mov
aas
cld
inc
testb
adc
mov
das
stc
pop
in
ficomps
mov
and
mov
loope,pn
dec
loopne
repz
lret
test
outsl
pop
adc
sbb
orb
push
test
fld
jl
loopne
pop
ds
dec
call
outsl
push
movsl
stos
mov
popf
ds
hlt
cmp
stc
xchg
pop
mov
mov
repz
xor
loop
sub
shll
jp
stc
imul
push
pop
or
arpl
cltd
and
sub
repz
or
mov
or
adc
inc
cwtl
arpl
pop
shr
inc
mov
push
xchg
sub
movsl
ds
jo
pop
imul
sbb
sarb
in
rorb
call
xor
test
adc
adc
rorb
scas
imul
jns
mov
popa
and
fldcw
idivb
add
popf
insb
jle
aad
lock
xchg
or
data16
pop
orb
adc
out
jge
inc
nop
push
cwtl
mov
and
adc
mov
inc
test
sbb
mov
aad
imul
mov
cmp
test
xor
pop
test
push
pushf
inc
vhsubps
mov
push
mov
mov
pop
std
mov
mov
hlt
insb
popa
lds
add
cs
mov
es
mov
inc
les
jo
outsl
fists
stos
or
std
addr16
jl
push
cltd
bnd
sub
inc
rcrb
imul
in
or
inc
dec
jno
inc
lret
movb
fsubrl
in
ret
cmp
jle
ficoms
repz
mov
xor
movsl
repnz
xchg
test
inc
ja
unpcklps
fistpl
loopne
mov
lcall
mov
sub
adc
and
jg
cwtl
hlt
sbb
dec
mov
aas
pop
dec
mov
in
sahf
mov
mov
jne
cmpsl
into
stos
imul
adc
mov
out
cmpsl
jle
jmp
in
aas
fs
xchg
inc
adc
out
sbb
push
jo
sbb
aas
add
lcall
in
sub
inc
mov
rcr
repnz
fisttpl
or
pop
lods
adc
aaa
or
aad
pop
imul
jo
push
imul
sbb
repnz
mov
lcall
cmpsb
mov
test
movsb
add
xlat
mov
fldt
push
in
gs
test
jo
sbb
addr16
xchg
or
aas
pop
inc
lds
sub
sbb
mov
or
aad
inc
roll
push
push
dec
lock
lods
clc
loope
lret
aam
lock
mov
insl
adc
add
dec
test
bound
stc
add
jecxz
int3
mov
mov
in
out
testb
aaa
mov
pop
stc
cmp
mov
cmp
sbb
xchg
sub
dec
xchg
js
iret
repnz
sbb
adc
jle
mov
push
fldt
out
pop
or
dec
dec
aas
stc
jns
mov
cwtl
sar
pop
loopne
jmp
pop
hlt
not
cmp
je
and
int
dec
cmp
mov
or
mov
cmc
aaa
int3
dec
stos
pop
subl
inc
jg
add
mov
inc
iret
jbe
jmp
scas
xchg
popf
push
jmp
pop
pop
lcall
mov
pop
sub
data16
and
push
jnp
jne
sub
ret
inc
add
aam
cld
int3
fs
outsb
pop
pop
xor
cmpb
cmp
xchg
mov
in
push
push
cli
jne
shll
push
jecxz
call
xor
repz
jp
icebp
mov
test
pop
sbb
adc
jb
lcall
outsl
and
fnstsw
sub
inc
lcall
sbb
lock
add
cmpsb
mov
inc
pushf
divl
ret
out
and
lea
inc
sub
test
dec
fs
dec
and
lret
std
fdivl
mov
jo
pop
lock
test
rcrb
xlat
mov
inc
and
xor
dec
dec
lret
fidivs
sub
adc
leave
jno
les
pop
fwait
mov
cwtl
rolb
shlb
dec
scas
pop
cltd
xchg
sub
push
dec
lods
lock
outsb
or
movsl
mov
mov
add
mov
pop
loope
pop
sahf
add
add
cmp
mov
int
push
sub
repz
sub
cmpsl
mov
push
dec
stos
inc
leave
mov
stos
outsb
sub
stos
imul
mov
out
lret
mov
push
fwait
outsb
sbb
adc
movsb
popf
pop
xchg
outsl
cmp
lret
sbb
shrb
add
jo
mov
cwtl
mov
shll
xorl
int
fisttpll
inc
adc
jle
xlat
stc
mov
xchg
mov
ret
imulw
or
out
xchg
add
mov
aad
add
mov
sub
jp
jno
push
mov
es
sub
xchg
outsb
push
mov
out
add
pushl
xor
sbb
in
es
sahf
notb
out
icebp
arpl
and
push
jb
or
pop
inc
dec
out
sub
pop
adc
mov
xor
or
jnp
mov
push
or
push
xchg
dec
push
add
mov
jg
mov
cli
push
les
stos
lret
mov
mov
lcall
or
imul
call
jne
jl
xor
imul
movsl
inc
and
cmp
mov
loope
pop
xor
adc
push
movsl
push
pusha
fnstcw
sbb
jle
mov
les
divb
push
cwtl
mov
in
stc
ficomps
enter
nop
and
fimull
jns
mov
mov
push
push
push
mov
jmp
cmp
xchg
jp
mov
sub
push
pop
out
cmp
loop
or
sub
dec
or
sub
lcall
es
cmpsl
jae
cs
iret
pop
and
add
iret
mov
ret
shlb
cli
dec
xchg
jno
mov
shlb
sbb
cmpsb
cld
jbe
insb
push
inc
mov
jb
inc
call
aas
jl
movsb
mov
sti
ret
std
stc
cmp
cmp
push
cmpsb
jne
fwait
in
jo
mov
jns
test
gs
es
xchg
mov
movsl
pop
outsb
mov
int3
xor
xor
fidivrl
or
jmp
push
cwtl
push
fildll
or
add
add
sbbl
push
sbb
cmp
adc
mov
fnstcw
sub
in
or
xchg
mov
adc
sarl
push
fcoml
addr16
mov
cmp
dec
inc
imul
push
outsl
lock
xchg
loop
aas
cwtl
jno
pop
rolb
push
inc
xor
pop
mov
jecxz
cmp
test
fidivrs
and
pop
dec
je
movsl
jg
insl
inc
push
movsb
outsb
pop
dec
inc
aad
in
push
sub
int3
fs
push
cs
lock
repz
xchg
mov
add
dec
ret
push
adc
sub
scas
test
nop
jns
mov
adc
outsb
aaa
in
mov
pop
out
xor
push
pop
pop
ss
sti
jbe
popf
adc
xchg
aam
mov
ret
ja
pop
mov
push
jne
out
mov
inc
inc
xlat
dec
stc
xchg
leave
pop
sub
outsb
cmp
cmp
bound
add
in
xchg
push
xchg
ds
int3
xchg
push
inc
fistps
jb
pop
mov
jle
or
add
js
aad
mov
sarl
iret
jbe
movsl
push
shl
cmp
cld
cwtl
mov
or
jae
jmp
mov
je
jb
sub
xchg
arpl
or
js
mov
pop
dec
mov
cli
cltd
icebp
mov
mov
out
pop
mov
leave
outsl
fincstp
hlt
mov
or
push
sub
sahf
movsb
inc
ret
mov
fwait
lods
lcall
and
cmp
push
cmpsl
stos
pop
cltd
scas
mov
sbb
nop
mov
rcrb
mov
test
std
aam
inc
sbb
mov
xor
test
add
pop
adc
fs
dec
das
hlt
rcrb
in
push
sbb
std
sbb
popl
xchg
mov
push
testl
nop
fmul
aad
ljmp
imul
and
mov
popf
mov
inc
imul
xchg
loopne
sbb
pop
mov
xor
std
mov
jno
mov
daa
push
lea
repz
lds
in
adc
out
or
or
mov
and
test
outsb
sbb
call
sub
pushl
jge
or
aas
lea
dec
xlat
iret
bound
or
sub
fwait
sbb
sbb
iret
pop
inc
jge
xor
xor
push
mov
inc
or
sti
push
inc
add
pop
dec
xor
jb
stos
add
pop
jecxz
repnz
xchg
in
xorl
push
subb
pusha
adc
lret
imul
pop
inc
sub
gs
dec
out
or
xchg
inc
cmc
jmp
stos
sbb
pusha
scas
andb
jne
outsb
out
xorl
pushf
sbb
mov
iret
jbe
cmp
xor
cmp
cmp
mov
dec
orb
pop
sbb
addl
jg
push
cmp
icebp
mov
movsb
cmc
mov
adc
aaa
call
xchg
pop
std
repnz
cmpsl
lods
mov
pop
and
and
jl
sub
sbbb
xor
and
test
daa
dec
fldl
mov
sub
pusha
aas
ja
call
sub
add
xchg
movsb
pop
cmp
mov
mov
roll
add
inc
xchg
outsb
xor
fxtract
xchg
sub
push
sbb
cld
jno
pop
ficoms
adc
inc
mov
repz
fs
decl
push
into
jmp
push
test
xchg
dec
lods
mov
jbe
xchg
and
out
call
xor
mov
xor
adc
out
fmull
xor
fstps
cs
ror
loope
xchg
sbbl
lods
inc
cwtl
sub
and
sbb
test
cmp
xor
test
aaa
sbb
pop
add
push
xchg
cmpsb
mov
insb
pop
push
jg
and
or
xorl
js
aam
mov
daa
mov
test
std
imul
sbb
and
les
push
mov
jg
push
ffree
fbstp
lods
loop
mov
repz
cmp
jne
dec
push
cs
pusha
in
mov
or
sbb
jne
mov
maskmovq
idivl
cwtl
cmp
movzbl
les
das
cmp
jp,pn
mov
scas
inc
mov
xlat
jb
add
icebp
or
pushf
inc
lods
ljmp
and
jl
loopne
ljmp
mov
lahf
mov
cmpsb
dec
push
cltd
dec
in
stos
in
sub
pushf
out
sub
cli
mov
push
or
jnp
dec
xchg
push
loop
jne
or
cltd
sub
pop
jecxz
pop
sub
adc
pusha
aas
sbb
cmp
ret
cmpsl
ficomps
push
jecxz
out
adc
mov
js
enter
movsb
sub
mov
inc
and
aad
addr16
jle
xchg
push
fidivrl
and
in
outsb
shll
pop
shrl
fs
pop
dec
sub
xchg
cs
cs
aaa
nop
xchg
push
cmp
push
mov
sbb
inc
jne
xor
fsincos
gs
add
jmp
arpl
mov
aas
mov
std
aaa
jb
cmp
push
xchg
inc
jmp
ret
push
in
loopne
xor
dec
lods
movsl
aad
outsl
flds
jmp
mov
pop
loope
push
or
ss
sub
popf
push
push
dec
lcall
dec
pop
xor
sub
mov
push
mov
lea
mov
adc
or
pop
mov
inc
pop
aam
sbb
jnp
push
xor
rcrb
pop
movsl
push
movsb
push
xlat
push
mov
pop
push
pusha
jb
ds
enter
lret
mov
or
mov
outsl
xor
cmp
imul
daa
in
popf
loopne
popf
repnz
jle
lcall
aas
lods
mov
xchg
in
repnz
inc
fwait
pop
inc
cld
andb
imul
cwtl
imul
jmp
subl
aas
enter
out
addr16
stos
adc
xlat
jmp
jg
xor
add
rol
test
dec
insl
mov
xlat
fistpl
imul
and
shlb
dec
dec
ret
jne
icebp
push
call
add
dec
push
cmpsl
xchg
xlat
aaa
popa
jp
adc
outsl
cmpsl
adc
imul
push
xor
pop
push
bswap
arpl
dec
jle
add
mov
out
mov
xchg
jae
mov
pop
mov
mov
dec
mov
in
adc
xor
out
pop
push
gs
mov
xchg
lea
sub
jmp
jle
lods
test
test
addl
push
iret
cmp
xor
pop
fistpl
jae
sti
and
cmp
fsubl
add
pop
test
loop
cltd
movsl
cmpsb
xor
call
dec
mov
arpl
mov
out
lds
shll
xlat
inc
inc
push
pop
cmpb
hlt
inc
sar
loop
arpl
out
lea
les
fdivrs
arpl
lahf
mov
add
push
fidivl
xor
pop
hlt
and
int3
jp
cmp
inc
sub
add
pusha
adc
imul
push
sbb
sub
cmpb
or
adc
pop
shll
jmp
mov
fwait
inc
ljmp
orb
leave
inc
ret
pop
sub
or
pop
ds
cmp
or
roll
in
xor
inc
lcall
cmc
dec
mov
and
inc
arpl
cmp
fisttpll
xor
mov
out
xchg
push
cmp
cld
int
push
add
outsb
dec
lahf
mov
test
xlat
jo
sbb
mov
sbb
aaa
xchg
in
insl
add
shll
sbb
and
and
outsl
and
cmp
cwtl
or
ljmp
icebp
pop
cmpsb
out
stos
mov
and
ja
ds
mov
dec
jecxz
ret
pop
pop
je
cmp
fs
cltd
mov
hlt
jo
loopne
das
mov
jecxz
adc
cmpsb
sahf
mov
inc
shl
sbb
push
and
stos
aad
adc
lret
decl
sarb
pop
sub
mov
es
pushf
mov
filds
in
frstor
pop
mov
jbe
es
daa
adc
icebp
in
adc
add
les
jl
dec
std
push
or
jno
and
add
out
out
cmpsl
jg
lods
mov
push
mov
mov
push
push
out
inc
hlt
adcb
push
ss
fiaddl
mov
sub
sbb
xor
testl
scas
aas
pop
xchg
pop
inc
adc
lret
xchg
xchg
shl
movsl
adc
mov
jae
and
ret
fdivs
jnp
fnstcw
push
shlb
dec
cmp
fstps
call
test
test
leave
out
jmp
pop
push
and
sahf
inc
jmp
xor
stc
ljmp
adc
lret
les
pop
jge
bound
je
sbb
inc
pushf
dec
jp
call
out
pop
mov
xor
rcrl
ja
jl
lret
xor
sub
js
loop
ret
mov
mulb
cmp
andl
xor
mov
pop
adcb
insl
mov
in
loop
mov
andb
jae
call
sbb
in
push
cmp
loope
cmp
cs
rcr
mov
push
mov
inc
lock
jo
pop
lcall
pushf
xor
sahf
jae
daa
movsl
dec
inc
push
xchg
rorb
ljmp
jge
loopne
icebp
jns
inc
mov
push
jle
push
cmc
leave
mov
or
dec
lea
pop
shrb
sbb
add
cltd
scas
scas
mov
and
pop
rcl
mov
sub
sub
mov
pextrw
mov
mov
ja
scas
pusha
inc
cmp
add
mov
lret
andl
mov
or
sbb
adc
aaa
add
ljmp
cmp
call
mov
xor
inc
cmp
push
sub
adcl
sbb
mov
rcll
gs
shl
sbb
jl
bound
cmp
lret
mov
shld
mov
hlt
mov
cmp
aas
out
out
inc
lret
in
pusha
das
mov
adc
pop
std
stos
xchg
int3
xchg
jo
rcr
jl
jae
das
pop
add
mov
adcb
int3
cmp
xor
inc
addl
das
push
xchg
cwtl
jbe
push
outsl
jb
loopne
addr16
fists
jnp
aam
ljmp
pop
sub
leave
sbb
push
pop
cmp
push
std
or
lahf
cltd
or
outsb
sbb
mov
daa
cmpsb
js
ret
jno
in
cmpsb
lods
mov
mov
test
into
push
les
enter
mov
lods
dec
adc
mov
movsl
cltd
sub
fisttps
xchg
jb
inc
mov
imul
sub
add
outsb
add
jl
push
out
les
pop
mov
xor
sub
mov
fxch
repz
shlb
mov
insb
pop
xchg
sub
fcomps
jbe
fs
sub
xchg
insb
shrl
insl
jg
ja
movsl
or
and
ds
lea
addr16
dec
jp
stc
push
inc
cmp
push
mov
decl
jge
shlb
push
mov
insb
mov
jmp
addl
dec
call
cli
mov
cs
pop
sub
iret
fs
daa
cmp
mov
adc
mov
dec
repnz
xchg
jo
sbb
jae
int3
and
lods
lock
xor
in
pop
mov
iret
loope
mov
aas
and
testb
xchg
pop
outsl
inc
mov
aam
cltd
jne
push
push
and
jnp
xchg
pop
jo
cmc
das
jge
ret
dec
movsb
test
push
lret
bound
cmp
mov
mov
jns
pop
add
shlb
mov
sbb
in
adcb
invd
cs
fsubrl
sub
hlt
enter
mov
inc
stos
sub
add
pop
outsb
mov
mov
cwtl
iret
add
imul
cmp
adcl
pop
pop
inc
mov
cs
mull
lock
inc
cli
dec
pop
popa
sti
cmpsb
cld
mov
rcll
mov
lock
mov
out
outsl
fs
add
movsl
loop
out
cmc
lea
mov
out
cmpsb
xor
popa
cmp
imulb
enter
add
mov
jle
xchg
mov
jecxz
jns
push
xor
in
and
popa
sub
out
test
rcrb
jnp
or
movl
push
sbb
cmp
xchg
add
shrb
xlat
ljmp
push
sahf
lds
aaa
inc
outsl
out
dec
add
push
push
or
inc
pop
xchg
in
pop
and
pop
lods
mov
lods
jnp
scas
inc
dec
bound
adc
mov
shlb
xchg
xchg
adc
jmp
leave
rol
mov
mov
stos
inc
fcomp
xor
in
lods
inc
and
xor
cwtl
push
cmpsb
movsb
mov
push
sub
sub
loope
adc
inc
insb
icebp
int3
loop
mov
or
mov
loope
mov
xorb
mov
loopne
sbb
and
add
and
or
shl
dec
enter
fisubl
pop
stos
or
sub
jp
sbb
mov
imul
sub
imul
filds
shlb
lret
add
pop
popf
sbb
push
repnz
jnp
xlat
fcoml
testb
cli
insl
ljmp
and
ret
sub
lea
cwtl
rcrl
shll
test
or
or
push
add
sub
out
mov
mov
pushf
jg
mov
fildl
cmp
cli
inc
fdivrl
mov
or
xorb
popf
or
outsl
lret
stc
lahf
mov
xor
xchg
jnp
pop
lahf
mov
adc
mov
ljmp
shl
jge
js
and
inc
push
cmp
xchg
adc
cmp
inc
pop
add
sar
push
movl
in
in
fs
adc
cltd
aaa
push
dec
lret
cmpsb
inc
mov
movl
dec
xchg
mov
ljmp
mov
fwait
out
test
push
scas
jb
ja
xchg
test
out
mov
shl
jbe
xchg
pop
sub
stos
pop
stos
xor
outsb
arpl
adc
jns
pop
dec
outsl
pop
test
into
fsubr
mov
add
mov
jp
and
pushf
pop
add
adc
pop
cmc
ret
stos
test
lds
xlat
popf
dec
cs
shll
rcrl
int
arpl
dec
bound
imul
std
xchg
fisubrs
popf
inc
mov
fs
pop
inc
mov
divl
je
jmp
outsb
testb
sahf
mov
jb
std
mov
inc
addr16
outsb
lods
lock
inc
pop
sbb
cli
sarb
imulb
adc
inc
adc
and
rol
jle
mov
jp
push
ss
in
out
or
cmp
or
adc
pop
js
cmp
add
insb
lods
leave
sub
pop
jle
outsl
jp
pop
xchg
fdivr
sbb
mov
imulb
movsl
cmp
scas
inc
clc
jecxz
bound
inc
fidivrs
outsl
call
out
jg
test
dec
jne
mov
addr16
add
cli
dec
mov
mov
js
inc
and
in
dec
mov
outsb
fisttpll
std
inc
jne
aad
jae
fdivrs
stos
gs
pushf
push
dec
mov
popa
xchg
cwtl
adc
jnp
jne
cs
movl
dec
cmp
das
cmp
nop
shrl
cmp
mov
rcrl
test
sub
into
push
scas
ffreep
dec
enter
jp
push
pop
das
shl
in
push
xor
inc
jg
mov
sub
fdivrs
sbb
xor
pop
push
push
ret
jnp
or
cli
pop
hlt
mov
push
rorb
in
rcr
inc
pop
fnsave
mov
dec
mov
addb
xlat
push
jp
cltd
sub
outsl
or
imul
add
rorb
jl
das
movb
mov
in
dec
inc
xchg
jp
and
add
cmc
inc
arpl
push
or
gs
out
push
cld
mov
pop
loopne
pop
mov
jg
xchg
jl
sbb
xchg
dec
jns
sarl
iret
add
je
mov
imul
cmc
inc
lock
pop
jae
scas
shr
and
mov
add
loope
ljmp
movsl
adc
jl
pop
sbbl
rcrb
into
imul
in
and
inc
mov
popf
pop
dec
push
insl
push
sbb
xor
mov
fisttpl
out
mov
stc
hlt
cs
and
xchg
rolb
mov
xchg
fimuls
inc
shr
rorb
sbb
mov
jae
sbb
adc
orb
lods
adc
mull
loope
sbb
push
das
xchg
push
nop
in
test
clc
and
add
ss
pop
xor
mov
inc
jecxz
into
lret
xor
jp
sbb
in
pop
shll
sbb
sbb
mov
test
cmpsb
cmp
xor
cs
shrl
mov
adc
iret
imul
addb
xor
mov
das
ret
mov
out
imul
mov
jne
fwait
cltd
clc
mov
pusha
cs
adc
or
movlps
mov
pushf
cmpsb
shlb
lock
lock
pop
cltd
add
push
je,pt
push
cmpsl
sarb
bnd
inc
outsb
adc
or
cmp
mov
jnp
shl
and
dec
mov
scas
js
mov
and
lret
cmpsb
lret
fimull
stos
mov
jge
sbb
ds
out
adc
sets
and
xchg
insl
pushf
xchg
cltd
ja
stos
test
mov
add
divl
out
repz
jno
das
sbb
sub
out
pop
repz
mov
jo
mov
jl
hlt
icebp
outsb
out
xchg
pop
jecxz
call
scas
pop
dec
sbb
or
out
xchg
cmp
daa
or
cld
stos
sbbl
sbb
xlat
ja
arpl
push
jle
pop
rcrl
jecxz
sarl
stos
add
xchg
add
push
pop
fucomip
add
call
jns
lock
xor
xchg
fisubs
inc
push
mov
mov
andb
xchg
aaa
ret
idivb
fiadds
cs
scas
push
repz
jge
lcall
test
je
je
fidivrs
dec
scas
test
mov
and
outsb
call
mov
pusha
add
insl
mov
negl
pop
xchg
cltd
int3
bound
hlt
mov
ret
xchg
add
dec
jns
adc
fnsetpm(287
cmpsl
ret
push
movsl
xor
dec
mov
outsl
bnd
xchg
in
dec
cmpsb
adc
out
popa
insl
std
mov
mov
mov
and
ss
fnstcw
adc
jbe
jb
inc
sbb
add
and
punpcklbw
testl
push
sub
out
test
stos
sbb
test
gs
mov
mov
pop
ss
pushf
sub
add
mov
scas
xor
into
icebp
push
popf
data16
lods
sahf
addl
aad
push
int
jb
bound
mov
dec
pop
mov
iret
pop
sti
mov
inc
insl
inc
xchg
cmp
scas
jge
pop
jne
and
add
pop
mov
add
xor
in
sbb
loopne
sub
es
cmp
inc
iret
mov
rorb
sbb
add
out
adc
mov
popf
mov
clc
push
and
adc
out
mov
fldl2e
dec
and
push
stos
push
fstp
jge
inc
jp
mov
cmpsl
in
push
int
adc
scas
outsl
jb
pop
gs
mov
test
pop
mov
push
ds
imul
sub
rcll
cmc
roll
mov
jno
xchg
add
xorl
inc
xchg
sbb
sbb
mov
pop
mov
daa
sub
ljmp
testb
pop
dec
and
push
popf
or
sbb
imul
push
ja
aas
js
or
jle
xchg
push
or
pushf
popa
movsl
addr16
xor
js
sti
fadd
outsb
aaa
adc
leave
mov
push
test
mov
rolb
test
clc
jmp
lea
test
mov
add
or
arpl
mov
in
cmpsl
ret
pop
xor
jecxz
std
add
out
rorb
ror
pop
push
mov
fbstp
loope
cmp
cli
or
sbb
xchg
sub
xchg
inc
xchg
fcmovbe
fnstenv
pushf
orl
js
sahf
mov
movsl
int3
out
or
ret
xor
in
lahf
cld
popf
fwait
sub
scas
fists
cmp
mov
aaa
ljmp
sub
add
outsl
rolb
cli
push
enter
inc
icebp
sbb
insb
jecxz
jmp
jno
ror
adc
rcl
sar
fsts
mov
sbb
pop
mov
cmp
xor
iret
sbb
pop
xchg
es
cmp
mov
and
mov
or
pop
push
mov
add
sub
fldenv
inc
pop
test
dec
sbb
lea
rorb
dec
popa
je
ljmp
cld
flds
test
push
jp
sbb
sarl
add
mov
mov
adc
enter
stos
bound
push
inc
xchg
hlt
mov
and
and
jo
jo
mov
jecxz
ss
and
push
inc
xchg
std
pusha
push
stos
dec
clc
sbb
test
lahf
mov
loope
adc
add
xchg
sub
sub
mov
pinsrw
dec
lods
fs
dec
xchg
add
mov
jb
test
cmpl
insl
or
fimull
shrl
imul
add
cwtl
cmp
sbb
stc
sahf
test
sub
push
adc
js
sti
mul
mov
outsl
inc
sbb
pop
dec
push
das
sbb
inc
bound
scas
pop
jmp
cwtl
inc
pushf
out
cld
test
or
adc
stos
add
cmpsl
testl
cmp
jnp
jl
ss
rorb
add
xchg
pop
pop
mov
push
xchg
stc
pop
jnp
mov
jnp
pusha
inc
mov
popf
xchg
shll
xchg
ja
movsb
add
cmpl
sbb
jmp
imul
jne,pt
scas
inc
add
xor
lret
jne
fwait
jecxz
gs
sub
das
cs
icebp
lcall
and
inc
add
out
mov
lahf
cld
cmpsb
xor
test
cmc
dec
mov
push
int3
sbb
xchg
hlt
or
mov
cmpsb
cmc
jbe
data16
lahf
cmpsl
jae
insl
outsl
sub
pusha
dec
aas
idiv
sub
and
movsb
xchg
popa
jo
push
xchg
jb
push
sbb
push
sub
xchg
jb
pop
pop
push
jmp
pop
lret
repz
xlat
sub
addl
in
fisttpl
mov
adc
push
and
cmpsb
mov
push
fists
subps
fcmovne
xor
cmp
sbb
mov
push
sbb
xor
movsl
addr16
popf
test
test
sti
cmpsb
in
dec
jo
jg
jp
mov
sbb
adc
ficomps
je
je
shrl
adc
repz
add
mov
cltd
sub
jno
aad
cwtl
ja
xchg
add
mov
sbb
jnp
cli
sbb
push
and
mov
mov
mov
dec
lcall
pop
sub
addl
fdivl
add
add
scas
scas
inc
cmp
mov
push
insl
jno
xorl
add
icebp
imul
stos
add
frstor
inc
lea
adc
hlt
je
xchg
subb
ljmp
mov
cmpsl
and
daa
jns
xor
dec
jmp
shrl
xorb
push
mov
push
mov
idiv
stos
daa
and
xor
stos
pop
adc
xchg
adc
adc
or
int3
stos
enter
sub
add
add
jb
gs
xor
cs
insb
add
addb
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
add
add
pop
sub
mov
lea
mov
lods
clc
stc
add
dec
add
ror
xor
jmp
call
add
sub
jmp
call
sub
xor
jmp
jmp
rol
dec
stos
loop
dec
in
out
insl
jbe
push
jne
jns
jge
mov
mov
xchg
xchg
xor
popf
push
sarb
xor
lahf
fimuls
push
loopne
dec
jno
mov
push
push
jge
jae
pop
pop
or
pop
shll
xchg
js
clc
out
outsl
incb
push
rcrb
xchg
adc
mov
mov
inc
push
cmp
jnp
cmp
negl
fcompl
pusha
dec
arpl
mov
sub
xchg
pop
test
clc
mov
push
xor
popf
dec
shrb
sub
pop
cmp
inc
pushf
outsl
add
out
jns
repnz
push
mov
add
out
jmp
and
sub
movsb
add
or
sarb
mov
adc
stos
mov
scas
fsubp
push
fdivrl
push
leave
iret
int
add
push
xor
cmp
jae
test
pop
cmpl
mov
inc
sarb
pop
dec
xor
dec
cmp
cmp
insb
push
jecxz
inc
jno
and
push
push
jmp
or
xchg
xchg
inc
or
clc
idiv
test
or
cmp
aam
adc
nop
movsb
loope
dec
jmp
stos
test
movsl
pop
or
mov
mov
jmp
fildl
push
mov
insb
loop
outsb
jo
outsb
outsb
je
testb
lods
adc
mov
std
pop
xchg
js
pop
or
sbb
sub
das
push
mov
enter
sub
sarb
addb
mov
or
cmc
repz
es
add
add
in
or
adc
sub
sbb
lahf
stos
and
cmpsl
movsl
pop
jecxz
jb
mov
cmpb
xchg
lret
pop
int
shll
ss
fldcw
jge
popa
addr16
iret
movsb
xchg
jg
in
pushf
pop
mov
in
and
ss
sub
xorb
cmp
enter
cmp
cmp
pop
jo
mov
jg
adc
dec
inc
cwtl
les
hlt
ljmp
pop
add
incb
aaa
fs
adc
cli
jns
inc
jl
mov
rcll
adcl
xchg
aaa
mov
or
test
and
insb
ja
sbb
out
lcall
mov
pop
xchg
and
adc
xchg
stos
push
es
xchg
xor
lahf
adc
orb
adc
dec
push
push
pop
pop
pop
stos
leave
scas
lea
out
sbb
in
and
mov
sahf
inc
aad
insb
iret
out
lea
imul
loop
gs
leave
pop
push
inc
mov
pop
insb
outsl
push
scas
imul
in
jecxz
notb
xchg
out
aas
arpl
inc
sti
fmull
out
cs
sbb
test
scas
jge
dec
mov
push
push
ss
push
ret
out
loop
push
in
adc
sbb
xor
outsl
shll
outsl
adc
mov
sbb
fldcw
mov
out
add
push
or
daa
popf
loop
sbb
cmpsl
lret
inc
test
or
sbb
jmp
pop
movsb
sarl
data16
ljmp
push
mov
je
enter
lcall
sub
das
push
arpl
fwait
cmp
lods
ja
adc
pop
jae
dec
cmc
pop
pop
nop
xchg
cmp
in
cltd
inc
push
sti
icebp
sti
cmc
sti
stc
mov
rclb
emms
int3
mov
xchg
cltd
jg
cld
push
scas
movsl
daa
sub
popf
mov
sub
sbb
cmp
dec
leave
cli
dec
xor
fcmovnu
pop
pusha
and
gs
mov
push
lea
add
ss
cltd
packsswb
orb
xor
ss
jo
enter
les
icebp
imul
dec
call
data16
les
call
adc
sbb
push
movsb
mov
scas
push
mov
jne
jle
ret
adc
xor
pop
cmp
mov
push
push
mov
dec
mov
cmp
cmpb
daa
xchg
aaa
add
jnp
das
and
xchg
xchg
cmpsb
push
pop
in
test
push
dec
scas
jmp
cmp
push
aam
jecxz
push
mov
in
and
stc
divl
stc
decl
xor
bndstx
lahf
leave
aam
and
jno
pop
int
mov
mov
es
lret
cli
loopnew
sbbb
enter
imul
sbb
test
jge
or
pop
mov
dec
pop
jnp
jg
outsb
popa
mov
scas
xor
cmp
cli
mov
jg
or
fadds
incl
aaa
push
fs
js
inc
out
mov
jb
xchg
hlt
inc
pushf
clc
idiv
mov
popf
xchg
hlt
daa
cmpsb
or
adc
lcall
xorb
test
cwtl
jmp
leave
je
dec
fdivp
loop
add
mov
popa
mov
jmp
and
daa
mov
into
xchg
cwtl
mov
xor
inc
lods
rcr
shl
faddl
fdivr
cld
aad
pushf
adc
repz
div
sti
arpl
test
int3
jge
mov
xor
xchg
pop
das
dec
jae
dec
jl
cltd
cmp
dec
jg
mov
inc
mov
adc
aad
icebp
push
loop
in
dec
inc
in
test
int3
xor
ja
test
iret
inc
cmp
aad
nop
outsb
or
aas
arpl
aaa
adc
dec
mov
jbe
cli
cmc
sbb
inc
mov
sbb
das
lcall
subl
je
fnstcw
arpl
pop
add
lods
inc
and
pop
in
cmc
cmp
mov
inc
dec
out
or
push
mov
xchg
dec
scas
mov
insb
insl
xchg
xor
movsb
outsb
sbb
and
inc
stos
leave
outsl
xchg
cwtl
add
xorl
lea
sti
mov
aaa
sbb
push
add
sbb
shlb
push
aam
xor
repz
out
out
xchg
ficoms
push
xchg
add
pop
in
push
mov
adc
cmpsl
mov
sbb
movsl
stos
mov
mov
mov
rol
mov
dec
cld
inc
in
mov
js
popa
addr16
fs
jnp
test
pushf
sbb
mov
cltd
and
sub
out
xor
inc
ss
loopne
loope
dec
inc
dec
dec
push
dec
push
push
pop
push
pop
pop
loopne
insb
hlt
mov
out
cld
nop
out
testl
incb
or
or
adc
adc
sbb
sbb
mov
cmpsb
lods
stos
mov
mov
mov
mov
int3
lret
aam
fcom
pusha
fisubs
data16
push
outsb
je
js
jl
cmpb
mov
xchg
xchg
cwtl
xchg
pushf
lcall
sub
das
sub
cmp
aas
cmp
dec
dec
dec
dec
push
push
push
push
pop
pop
fistps
loope
in
jmp
div
sti
stc
std
add
pop
add
adc
pop
adc
mov
test
mov
mov
rol
lret
leave
iret
int
rcl
aad
fstps
arpl
imul
jae
ja
jnp
jg
addl
lea
cltd
and
sub
xor
xor
cmp
cmp
inc
ds
inc
dec
inc
dec
dec
push
dec
push
push
pop
push
pop
pop
loopne
in
call
out
hlt
repnz
idiv
cli
add
add
or
or
adc
adc
sbb
sbb
mov
cmpsb
lods
stos
mov
mov
mov
mov
int3
lret
aam
fcom
pusha
fisubs
data16
push
outsb
je
js
jl
cmpb
mov
xchg
xchg
cwtl
xchg
pushf
lcall
sub
das
sub
cmp
aas
cmp
dec
dec
dec
dec
push
push
push
push
les
leave
scas
das
jne
jp
icebp
div
sti
loop
sub
xchg
cmp
popf
and
sbb
shlb
pop
fnstcw
mov
sub
ret
rol
lret
mov
loopne
ret
in
out
test
out
push
scas
xchg
pop
push
xchg
insl
jae
ja
in
lods
sub
scas
shlb
pop
mov
lea
movsl
mov
push
lods
push
mov
fwait
sbb
xor
cmp
and
sub
lock
sbb
push
dec
push
push
pop
movsb
mov
insb
and
in
ljmp
cmpsl
test
insb
scas
shll
push
or
adc
jl
add
das
cs
cmpsb
lods
stos
mov
aas
loope
jmp
test
idivl
sti
sbb
cli
popa
mov
