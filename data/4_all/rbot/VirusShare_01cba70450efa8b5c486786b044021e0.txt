dec
loope
fldcw
ret
dec
iret
mov
add
icebp
jnp
dec
pusha
jl
pop
imul
popf
sahf
push
imul
rcrb
cmc
xlat
jle
fstl
aas
js
pop
push
pop
mov
test
lods
cmp
pop
push
and
loop
push
jae
xchg
inc
add
or
inc
int
mov
pop
inc
lcall
in
mov
aas
lahf
scas
aaa
adc
or
out
ja
push
insl
aam
test
addb
rcll
sbb
and
sub
popa
adc
xchg
jge
mov
aam
imul
fisubrl
sub
sub
mov
mov
push
rcrl
scas
adc
ss
loopne
cwtl
push
into
fsubl
outsl
lock
sbbl
rorl
mov
jmp
add
push
mov
mov
adc
pop
sbb
fwait
sar
cmp
iret
adc
adc
cmpsl
shr
mov
test
or
push
out
insb
xor
dec
xor
inc
adc
push
int3
inc
movsl
add
ret
adc
leave
mov
cwtl
jecxz
jns
xchg
insb
icebp
lods
ds
or
xorb
adc
loopne
adc
adc
and
fisubs
add
or
mov
lret
lretw
fidivrl
and
pop
out
test
popfw
clc
xchg
or
cltd
push
push
cwtl
lea
inc
cwtl
mov
push
mov
fists
jle
pop
in
in
out
sub
or
xor
icebp
rcl
test
lret
clc
pushf
push
mov
inc
mov
pop
push
mov
lret
pop
jnp
repz
jmp
lret
mov
in
in
popf
xchg
outsb
enter
arpl
sub
dec
jg
sub
imull
test
mov
sub
fisttpl
and
jno
daa
xchg
dec
sub
add
push
mov
data16
nop
aad
push
loopne
push
sbb
add
rcll
cli
out
adc
cwtd
add
xchg
ljmp
ljmp
lret
ror
dec
pop
dec
rcrl
xor
cmp
in
rcrl
pop
out
movsb
xchg
jge
sbb
dec
pop
pop
and
xchg
stos
fistps
arpl
and
fisubs
call
sub
and
pushf
je
dec
mov
test
push
xchg
push
push
insl
dec
jmp
cmp
sti
add
jge
jbe
push
lock
sub
cmpsl
adc
xchg
shlb
adc
mov
inc
push
pop
cmp
mov
push
insb
into
pop
cmc
out
lea
notb
mov
pand
call
sti
mov
adc
fmull
mov
in
and
add
aad
push
mov
lea
shlb
sub
xor
shr
test
mov
add
inc
fdiv
loope
sti
xor
les
subb
outsb
jo
pushl
loopne
mov
or
jno
xorl
stc
push
lret
inc
push
jmp
pop
cmp
mov
stos
out
xchg
dec
bound
inc
pop
dec
popf
leave
lcall
repz
out
std
dec
out
gs
inc
addr16
mov
or
out
in
cs
dec
lock
pop
push
mov
pop
aaa
aam
data16
pop
push
ret
iret
mov
enter
jb
push
xor
mov
scas
movb
lcall
push
mov
mov
mov
cmpsl
and
jne
in
mov
xchg
sub
and
xchg
ja
aam
test
lock
inc
roll
cmp
sbb
testl
pusha
jl
and
jmp
pop
pop
pop
pop
or
push
mov
mov
sbb
sbb
insb
adc
jmp
push
fwait
fwait
xor
and
fstp
mov
push
stos
inc
push
testb
mov
popa
shlb
ss
sti
clc
inc
arpl
sar
repz
xchg
sub
fisttps
and
and
push
xchg
inc
call
cmp
clc
push
lods
arpl
mov
stc
cmpxchg
cmp
and
and
out
leave
shll
pusha
pop
pop
data16
mov
lahf
arpl
mov
out
fucom
sbb
jno
mov
pusha
ret
stc
call
cmp
daa
daa
sub
mov
movsl
mov
push
in
mov
cli
sub
cli
xchg
xor
and
fadd
sub
sahf
sub
push
orb
xlat
jae
sbb
and
and
cmp
cs
call
cmpsb
xchg
rcrl
jmp
mov
jb
pop
and
fdivrl
sbb
mov
cmp
dec
ds
xchg
das
inc
sti
jo
xchg
mov
scas
lods
push
mov
pusha
pop
jge
mov
aad
jne
cmp
jae
lds
push
mov
gs
pop
and
sub
nop
xchg
and
jno
cli
add
add
gs
add
leave
arpl
cmp
push
lods
push
bound
jl
push
bound
mov
mov
jae
loope
mov
cltd
fwait
add
sbb
sbb
jns
push
dec
das
pop
push
sbb
jmp
push
sub
movsb
cwtl
in
mov
xor
xor
mov
jle
mov
inc
jmp
sub
bound
mov
clc
das
cwtl
je
push
movsl
cmp
js
push
int3
lods
jg
xor
loopne
add
je
test
push
add
xor
xor
cld
stc
pusha
loop
jecxz
fistl
add
pop
add
push
and
pop
rol
nop
mov
test
cmp
jl
je
sub
mov
xchg
push
jl
test
pop
rol
jmp
repnz
xlat
out
fs
addr16
repz
inc
pop
and
sub
ja
fistl
lcall
add
not
jne
push
push
and
pop
pop
push
ja
jge
push
mov
pop
pop
jmp
jmp
call
jbe
jge
push
mov
pop
or
add
jnp
jge
add
shl
mov
cld
pop
sub
cld
clc
test
sub
and
inc
dec
push
jge
push
ja
test
pop
pop
and
push
add
push
pop
pop
push
push
add
pop
pop
push
add
jg
push
jb
push
cmp
pop
pop
sub
mov
xchg
rol
jne
cmp
push
add
pop
push
push
sub
pop
pop
rol
add
mov
push
add
jne
rol
or
cmc
nop
xor
add
push
jns
test
pop
cmp
fnop
or
xchg
nop
sub
mov
shr
test
jne
jmp
push
inc
pop
push
call
pop
add
push
adc
test
cmc
sub
xchg
push
inc
adc
dec
mov
mov
mov
adc
pop
mov
inc
test
mov
mov
pop
pop
push
mov
add
pop
jl
jge
shr
push
jge
cmp
pop
jnp
push
je
cmp
pop
and
jle
and
add
push
pop
push
mov
push
xor
pop
pop
push
and
pop
jno
js
js
ror
push
push
jg
and
pop
pop
nop
nop
cmc
push
xchg
pop
push
pop
xchg
pop
push
test
pop
loop
jecxz
sbb
or
fildl
jmp
inc
sbb
dec
mov
test
addr16
xchg
cltd
or
imul
imull
cmpsb
cmpsl
inc
mov
into
das
daa
and
pop
sbb
sub
lds
imul
xor
and
push
add
sub
sub
cmc
jno
sub
stc
lea
clc
cmc
dec
jne
push
movzbl
sub
or
loop
pop
jmp
imul
mov
sbb
sub
push
imul
push
clc
test
inc
push
dec
pop
out
sbb
repz
sub
pop
mov
test
xor
orb
jno
aam
cmp
inc
and
push
sub
pop
ror
or
push
popa
pop
cmpsl
fiadds
xor
sub
fldcw
add
add
loop
jecxz
mov
inc
imul
std
sarb
jp
es
sbb
popf
test
sti
mov
cmc
test
sti
incb
mov
stos
test
rcll
push
and
push
call
inc
lret
fwait
imul
into
lret
fcmovnb
xchg
xor
shrb
or
push
repz
or
add
lea
addb
shl
cmc
loope
orb
les
in
rcrl
filds
int3
cmp
imull
push
stos
out
sti
jl
sbb
push
xor
push
add
fucomi
addr16
out
jno
mov
mov
mov
lret
adc
dec
jne
jle
push
mov
pop
jno
push
dec
pop
jge
push
add
cmc
mov
mov
jmp
das
lret
cmp
mov
scas
stos
xor
adc
sbb
enter
int3
in
jecxz
pushf
mov
cmp
repnz
aam
dec
adc
lcall
pandn
xchg
and
xor
test
jnp
mov
mov
inc
pop
shr
mov
xor
out
test
jg
adc
jb
andl
xor
ljmp
dec
push
clc
push
fwait
rcl
out
jb
jg
dec
out
adc
test
nop
add
mov
jo
dec
imul
adc
cmc
cmp
fs
test
movsl
or
or
in
or
mov
shlb
mov
or
jl
fidivrl
out
in
jne
mov
cltd
in
push
mov
test
push
dec
push
ja
jb
int3
shrb
stos
cmpsb
iret
sar
push
inc
cs
ficompl
std
push
adc
sarl
lock
test
pop
call
adc
loop
push
mov
pop
test
adc
xor
movsl
int3
leave
ror
cmpsb
test
pop
rolb
andl
mov
jnp
adc
out
iret
fiadds
xor
mov
or
cli
adc
movsb
cltd
fs
lahf
xor
daa
ret
jno
or
std
lcall
or
dec
and
xor
jmp
lahf
inc
pop
sub
xchg
lds
jge
dec
scas
inc
push
mov
xchg
les
xor
mov
stos
lock
push
fbstp
and
cmp
cmp
push
push
stc
leave
in
mov
mov
lds
stos
bound
sbb
adcb
popa
jae
sbb
stos
mov
push
movsb
add
sti
xrelease
daa
mov
ficompl
xchg
inc
lret
cmpsb
call
jecxz
inc
pop
and
orl
icebp
pop
arpl
in
fwait
iret
xchg
loop
push
test
into
mov
pop
inc
xor
mov
xor
and
cld
rolb
push
outsl
sbb
or
ja
add
cmp
lods
sarb
ljmp
dec
mov
std
scas
pop
dec
inc
stos
int3
sub
movsb
sti
mov
cmp
mov
sub
cli
mov
add
mov
dec
xchg
xchg
add
fdivl
sbb
mov
jae
mov
stos
cmc
nop
or
pushf
mov
sub
jb
or
test
dec
dec
add
pop
je
adc
cmc
repnz
fs
jl
fnstsw
xor
and
sbb
mov
insl
in
jle
shlb
sub
cltd
jb
dec
xchg
xchg
enter
fldl
xchg
xchg
imul
mov
hlt
mov
fisubrs
ja
cmp
push
rclb
push
cmp
scas
sti
es
sti
in
sbb
repnz
test
push
clc
loopne
jmp
fbld
adc
push
jae
pop
repz
mov
dec
mov
xor
jo
dec
in
scas
mov
dec
cli
mov
je
insl
fisttpl
into
xchg
pop
and
clc
aam
js
jp
sub
cs
jae
inc
xchg
add
aad
pusha
sti
add
cltd
xor
stos
adc
and
jnp
jmp
inc
push
scas
mov
nop
push
jp
lret
cmp
pop
dec
ja
lods
xor
xchg
jns
imul
movsl
xor
fstl
xchg
rolb
bound
cli
cld
inc
add
scas
outsl
adc
cwtl
sti
lcall
ljmp
lret
cmp
or
mov
sbbb
mov
aad
aaa
lods
mov
push
sahf
pop
and
rcrb
clc
cmp
pop
or
std
stos
jb
mov
fwait
pusha
sbb
jo
sbb
jmp
cmp
cmc
mov
inc
ja
mov
fs
adc
gs
and
dec
push
and
scas
pop
pop
stos
lds
lret
cmc
pop
faddl
pop
sbb
lret
jbe
jmp
pop
add
ret
movsb
fldl
xor
enter
imul
mov
jb
femms
inc
pusha
push
cmp
stos
inc
divb
jge
les
pop
int3
out
and
push
xor
gs
lahf
inc
push
sbb
lods
or
rcll
stc
fs
loop
pusha
push
mov
fnsave
test
pop
sahf
sbb
xor
mov
or
pop
stc
adc
xchg
imul
dec
dec
out
int
movsl
xor
mov
mov
or
fsubr
pop
adc
and
inc
rorl
jp
cmp
jb
jno
cmp
xchg
add
insb
shll
push
dec
or
imul
notl
xor
lahf
hlt
test
int
movsb
sbb
jge
sub
nop
xchg
add
pushf
xorl
mov
xchg
sub
mov
sbb
inc
adc
leave
test
dec
or
xchg
mov
pop
adc
iret
mov
mov
in
neg
xchg
dec
jne
fsubs
pop
push
int3
fdivs
cmp
jp
push
mov
out
sbb
or
shll
jae
lods
flds
xchg
mov
or
mov
mov
js
in
push
mov
mov
sbb
neg
daa
stos
inc
mov
add
sub
pop
data16
fisubrl
jae
insl
lods
sarb
pusha
jo
and
roll
add
cmpsl
aas
add
imul
and
cmc
mov
test
cmp
lcall
fwait
pusha
mov
xor
dec
sub
or
scas
sahf
dec
sbb
push
pushf
dec
adcl
cmpsb
in
mov
lock
into
adc
icebp
xchg
fstp
cmp
push
shlb
xchg
int3
pop
sbb
pop
scas
clc
es
jae
or
mov
pop
jnp
pop
aaa
jge
sbb
addr16
mov
dec
fs
push
in
or
cmpl
pop
or
xor
je
scas
mov
pushaw
clc
cmp
movsb
iret
stos
enter
test
xorb
sbbl
mov
add
adc
xchg
xchg
pop
test
pusha
shrl
push
lahf
pop
ret
in
ret
movsl
repnz
iret
mov
mov
dec
push
data16
addr16
loopne
xor
lcall
sub
push
cmp
xlat
push
push
aam
cmc
std
push
sbb
testl
xchg
std
dec
xchg
bound
mov
jb
lahf
inc
mov
or
cli
or
int
and
add
mov
outsb
cmpsb
inc
js
mov
pop
mov
not
enter
push
or
mov
and
xor
out
dec
mov
dec
bound
iret
add
ljmp
push
inc
xchg
call
mov
test
fisubrs
cltd
fwait
pushf
cmp
ljmp
mov
push
jns
popf
adc
aad
and
xor
xor
sub
xor
mov
shrl
and
mov
pusha
push
pushf
push
adc
push
sub
decb
pop
in
pop
mov
arpl
mov
dec
lea
adc
fcmovnb
mov
mov
fcmovb
xchg
cmp
call
push
data16
sub
mov
jmp
or
xchg
mov
push
pop
das
and
aad
lret
rolb
xor
lcall
push
arpl
and
mov
push
pop
inc
cs
jae
movsl
push
mov
aas
in
lock
rolb
pop
push
lahf
cmpsl
xchg
daa
out
dec
test
ss
scas
arpl
inc
push
xor
es
xchg
idiv
out
arpl
xchg
cmpsl
leave
paddusb
mov
jmp
pop
push
popf
inc
mov
jmp
mov
dec
addr16
jp
ja
inc
repnz
fcoms
inc
adc
or
mov
sub
push
pop
sahf
dec
mov
test
jbe
icebp
cmp
std
jne
lret
jmp
adc
or
jb
adc
outsl
int3
ss
xor
push
out
fisubrs
stc
push
push
imul
rcll
xor
jb
clc
je
das
les
int3
mov
pop
pop
or
dec
or
imul
repnz
xchg
shll
cmpsb
pop
rdmsr
leave
pop
dec
pop
adc
xor
sti
loope
ret
cltd
subb
aam
ja
arpl
xor
movsb
scas
ret
jge
inc
push
xchg
dec
xor
cmpsl
cmpsb
test
mov
sub
fsubrl
and
in
mov
sti
rcrl
xchg
inc
mov
ja
push
xor
out
add
in
enter
lcall
jnp
inc
stos
inc
cli
iret
push
inc
ret
cmp
inc
lret
mov
mov
lcall
jbe
dec
push
fldcw
fs
bnd
sub
cmovae
fucom
mov
dec
adc
cmp
sbb
pop
inc
pop
adc
sbb
push
push
sbb
xor
mov
sbb
nop
and
les
xorb
xor
pop
sti
in
std
sbb
mov
dec
mov
mov
lret
test
adc
imul
dec
fucomi
cmpsb
sub
jae
xchg
jnp
shlb
push
mov
add
or
jg
cmpb
lds
cmpl
je
ds
jnp
push
ja
sbb
ret
xor
lock
in
inc
xor
cmpsl
out
or
mov
hlt
sub
aaa
dec
push
xchg
jne
in
inc
jbe
lods
shll
clc
fldenv
in
push
rcl
and
xor
xchg
xchg
movl
mov
xor
sub
xchg
js
and
and
cltd
fstl
sub
daa
and
stc
ja
sbbb
xchg
mov
xor
push
mov
das
gs
mov
mov
push
js
sub
sub
aam
ljmp
push
or
lcall
jnp
adc
mov
mov
sub
into
dec
mov
test
or
inc
cmpsb
fldcw
jmp
adc
outsl
adc
rcr
popf
mov
cmpsb
mov
cli
arpl
test
add
aad
push
daa
push
icebp
jmp
mov
sarl
push
out
add
popa
mov
je
xchg
mov
int3
lret
mov
xchg
out
das
sbb
repz
in
pop
xchg
add
pop
push
leave
mov
ja
cs
adcb
in
ds
lods
mov
ljmp
addb
sub
mov
cmp
cmpsb
xor
cmp
dec
iret
rorb
or
push
inc
or
outsl
aaa
mov
outsl
pop
ret
pop
scas
dec
lea
xchg
adc
loope
ljmp
bound
pop
cmp
mov
aaa
mov
arpl
xor
aam
mov
pop
rcll
mov
in
cwtl
out
xchg
and
or
stc
and
imul
mov
xorb
out
outsl
xor
sbb
jno
in
insl
bound
mov
dec
push
jns
xor
test
adc
orps
ss
jp
inc
lods
mov
scas
add
imul
inc
enter
out
std
xchg
add
push
inc
jge
jno
xchg
cmp
idiv
cmp
lret
add
push
fdiv
cmc
pop
ljmp
in
call
sub
cmpsb
shll
mov
cmpsb
or
pop
cmp
out
sub
mov
ss
lds
push
cmp
cmp
out
or
sbb
cs
test
add
daa
push
adcb
dec
fdivs
jno
loope
sub
stos
movsl
lea
lods
push
stos
testl
mov
js
cld
push
std
jp
or
lahf
pcmpeqd
dec
in
jg
int3
clc
jle
mov
sbb
sbb
jns
jnp
shlb
fcmovnb
cs
ljmp
mov
mov
inc
shlb
cmp
pop
lahf
popf
inc
sbb
ret
jg
shl
push
or
jl
daa
sbb
add
push
mov
lds
jmp
out
fs
pop
dec
in
je
dec
pop
rorl
pop
ret
shl
sub
loope
add
push
xor
mov
dec
in
push
dec
jl
insb
test
jae
ja
jae
mov
dec
pop
jle
pop
pop
out
lret
js
or
jnp
je
inc
and
ljmp
imul
and
andb
jl
cmp
out
icebp
ret
setns
xchg
sbb
push
adc
fs
jl
pop
sub
repnz
push
mov
inc
sar
cmp
cmpsl
and
sbb
mov
fidivrl
push
cmp
pop
shll
dec
stos
mov
and
mov
hlt
outsl
movsb
adc
inc
out
andb
rcrl
xor
fnstcw
or
sub
cmp
ljmp
push
fsubr
sbb
test
cltd
lds
repz
insl
jo
test
inc
int3
outsl
gs
dec
ss
addb
pop
jbe
sbb
mov
mov
and
mov
ss
sbb
insl
jae
mov
add
jge
repz
int3
ss
aam
or
xchg
enter
nop
fwait
repnz
aas
cwtl
inc
xor
fs
je
xchg
repz
inc
mov
rcrb
mov
ds
inc
data16
aad
clc
sbb
xor
push
test
pop
sbb
sub
cwtl
test
push
out
pop
jbe
popf
sbb
add
fldl
popa
cmc
ds
mov
in
lcall
nop
or
cwtl
push
out
push
push
repz
shr
repz
lods
sbb
stos
fmul
lret
push
inc
arpl
xor
jne
jl
arpl
icebp
lds
jae
jmp
icebp
adc
stos
xchg
lahf
stc
dec
loope
arpl
pusha
inc
push
imul
mov
mov
aas
xchg
inc
cmp
loopne
pop
pushf
pop
mov
or
in
cltd
mov
mov
adc
fucomi
notb
dec
lcall
movsl
push
cwtl
std
lea
popf
adc
clc
out
out
rclb
jo
lods
inc
cmpsl
lods
cwtl
and
and
pop
lods
inc
arpl
mov
test
cs
in
lret
test
or
xchg
cs
jle
inc
pop
aas
jbe
jp
mov
lcall
push
ss
jge
cmp
adc
cli
and
pop
ffreep
xor
xchg
push
xchg
lods
mov
xor
loopne
ljmp
jnp
lock
bound
pop
mov
add
dec
mov
push
pushf
mov
sbb
lret
cmpl
inc
ds
push
mov
sbb
insl
ss
in
sbb
int3
js
xchg
push
pushf
pop
ss
pop
inc
sbb
lods
stos
jne
adc
es
lods
sahf
jmp
xchg
mov
and
mov
pop
cld
fbld
loope
outsb
cld
sbb
push
jns
daa
cld
gs
jge
add
int
das
cmp
mov
dec
jb
test
imul
aad
pop
movsb
lds
iret
mov
mov
shlb
ljmp
push
mov
jne
fistps
jno
in
inc
mov
inc
xor
jge
insl
mov
pusha
ljmp
popf
mov
aad
or
fidivl
mov
pop
scas
clc
fidivrs
sti
fistl
jp
xchg
add
push
xor
jmp
inc
pop
mov
pop
dec
xor
sarb
enter
pusha
and
jmp
aaa
ds
cmp
scas
enter
xchg
into
imul
popa
push
test
or
push
adc
rcrb
pop
or
mov
cmp
pushf
mov
inc
fisubs
lds
lret
adc
xor
pusha
stos
test
in
inc
xor
sub
pop
cmp
test
adc
shll
cltd
sub
aam
setge
inc
and
or
push
aam
rolb
xor
sub
cs
pop
push
sbb
imul
out
or
mov
int3
jne
pusha
test
mov
sub
f2xm1
or
test
dec
insb
mov
cmp
icebp
xor
out
xchg
test
mov
cs
sbb
sarl
push
jg
sbb
lret
int
xchg
mov
push
sbb
rcl
dec
jbe,pt
jmp
stos
je
add
cmp
dec
pop
mov
jns
aas
ret
push
xor
dec
push
pop
out
jne
jne
mov
dec
stos
mov
test
mov
xor
int
xchg
daa
pusha
dec
jp
dec
dec
pop
aam
test
push
fldenv
and
sarl
sahf
scas
sti
dec
bound
sti
push
xor
scas
inc
mov
mov
leave
cmp
mov
ret
test
cmpl
test
mov
lods
cmp
mov
mov
fwait
inc
or
clc
clc
sbb
jmp
aas
test
out
daa
cld
aam
sbb
jnp
jl
push
sub
mov
dec
pop
nop
cmc
imul
in
push
subb
push
cmp
or
das
xor
lret
mov
aad
push
rolb
jb
lahf
push
jbe
lods
iret
sbb
and
mov
or
cmp
xchg
add
dec
lock
and
rcr
les
mov
xlat
cwtl
jae
jae
mov
in
data16
sbb
ja
jo
mov
mov
inc
sbb
cmpsl
loop
add
xor
mov
inc
adc
mov
lock
jge
or
int
dec
adc
push
insl
pop
fimull
rcrl
pop
push
fisttpll
inc
hlt
and
xor
ljmp
test
or
jl
or
outsb
mov
rolb
or
ds
imul
loope
cmp
popf
and
xorl
jns
inc
ja
fcomp
std
jecxz
ja
push
sahf
ja
cltd
or
movsl
pop
jo
pushf
sbb
leave
punpckldq
lahf
loopne
call
pushf
std
data16
xor
int3
frstor
mov
cmp
cmpl
xchg
popf
cld
sbb
inc
subl
add
pop
push
das
mov
shl
sbb
mov
adc
gs
popf
xchg
mov
enter
inc
push
js
pop
adc
push
mov
lret
incb
pop
in
js
mov
insl
add
cli
sarb
arpl
mov
rcll
nop
adc
mov
xchg
pop
cmp
leave
mov
jne
out
mov
aad
loopne
or
dec
fidivrl
shlb
xchg
and
jl
test
push
jp
clc
cmp
cltd
dec
cs
scas
mov
lods
addr16
xor
insb
inc
sub
cmp
jge
mov
hlt
cwtl
jmp
mov
ljmp
xchg
add
cmp
adc
repz
sbb
andb
addr16
sbb
adc
sub
fsts
push
push
out
pusha
mov
imul
mul
sbbb
xchg
negl
mov
fisubrs
cwtl
pop
and
dec
mov
movsb
sbb
nop
mov
insb
test
int
inc
mov
lods
fbstp
xorb
pop
popf
and
pop
fstp
xor
jle
xchg
dec
mov
aad
push
mov
xchg
hlt
mov
mov
pop
mov
fistps
data16
inc
incb
and
mov
pop
fs
in
in
loop
sub
push
sub
add
mov
sbb
sbb
push
jecxz
push
or
adc
and
std
daa
xor
pshufw
mov
jp
popf
jo
ss
sbb
sub
dec
push
in
jp
in
test
push
sbb
mov
iret
test
and
mov
add
add
mov
pop
leave
ss
sub
movsb
je
push
gs
mov
cmp
sub
cmpsb
xor
adc
cmp
stc
add
outsl
xchg
inc
adc
inc
or
jg
and
sub
mov
lods
sub
cmp
xchg
push
arpl
xchg
sbb
test
movsb
add
or
pop
in
jmp
cmpl
or
leave
loop
imul
mov
cli
xor
jno
adc
inc
clc
jge
add
imul
cli
fstl
cli
arpl
ljmp
jmp
jecxz
pop
int3
int3
repz
shll
sub
add
xchg
pop
cmp
cmpl
push
int
pop
in
push
xchg
shrb
cmpsl
xor
je
xlat
inc
test
lret
es
clc
int3
fidivs
jmp
xchg
mov
in
push
inc
test
mov
cmp
mov
loop
aaa
jge
bswap
dec
je
inc
inc
push
jbe
sbb
jo
pop
out
adc
lret
shlb
mov
outsl
lahf
lcall
sbb
mov
sbb
lods
icebp
xchg
aaa
jns
pop
jb
ret
sbb
test
push
pop
push
fwait
add
fdivs
ficompl
mov
jb
out
lds
cmp
dec
ss
pop
fimuls
outsl
xchg
mov
pop
fs
je
pop
sbb
outsl
mov
filds
int
xchg
mov
lret
adcl
icebp
jb
bound
sub
iret
jo
xchg
or
into
jns
pop
mov
xchg
outsl
mov
jns
dec
fldcw
and
pop
or
mov
in
inc
aas
cmp
cmp
add
adc
das
and
jmp
repnz
push
cmp
int
sbb
sbbb
fsubl
and
lods
xlat
xor
ret
divb
sbb
sub
and
sbb
fst
cmpb
rcll
repnz
pushf
cmp
jge
adc
je
push
iret
cmp
xchg
mov
sti
fistl
pop
mov
xor
adc
movnti
fidivrs
adc
sti
subl
xor
and
fimull
pop
adcl
ljmp
jnp
push
mov
mov
mov
ds
mov
dec
lcall
pop
incb
cwtl
jecxz
cmp
cli
or
jbe
bound
jno
mov
je
inc
mov
push
sub
popa
stc
xor
mov
stc
jg
mov
pusha
bound
mov
jns
rol
data16
icebp
add
aaa
insb
inc
jno
jae
enter
pusha
jae
sahf
out
pop
fnstcw
jmp
lds
inc
repnz
and
roll
inc
cmpsb
mov
sbb
lahf
cmp
jmp
jb
call
inc
clc
aaa
aas
in
fcomps
and
sbb
pop
loopne
leave
dec
int
ffree
push
ja
dec
notb
xchg
gs
pusha
into
lret
ud0
daa
aas
in
repz
mov
xor
enter
iret
lcall
loopne
and
xchg
sbb
push
adc
shrb
mov
adcb
sbb
jmp
xchg
lahf
cmpb
aas
mov
mov
loopne
xor
pop
add
adc
cmp
mov
mov
out
ror
mov
or
jmp
pop
add
loope
std
pusha
outsb
jb
dec
xlat
mov
fwait
je
fs
pop
lods
push
jmp
sbb
mov
ficoms
xchg
movsl
fldenv
jae
test
xor
inc
push
xor
insl
sub
popf
js
stc
pusha
leave
push
mov
jne
inc
enter
inc
mov
mov
xor
rorb
cmp
or
xchg
shrb
add
cs
imul
js
jmp
loop
insl
add
xor
pop
in
xor
xor
lret
scas
inc
scas
fbstp
cmp
icebp
xchg
cld
pop
or
repnz
dec
fstpl
clc
xchg
sub
mov
test
add
int3
daa
mov
sbb
enter
movsb
sbb
or
and
pop
cmp
into
fdivp
loope
push
push
and
mov
pop
jno
mov
scas
jae
cmpsb
or
je
into
gs
cmp
add
std
ret
dec
loop
dec
mov
dec
gs
and
hlt
mov
int3
orb
sub
and
pop
aam
adc
out
push
push
mov
xchg
dec
arpl
mov
mov
aas
mov
dec
sbb
fs
xor
xor
cmp
lcall
es
dec
pusha
xor
mov
dec
fcmovb
xor
cmpsb
push
push
or
aam
mov
scas
pop
pop
fsubs
ficompl
jg
inc
xchg
jno
sub
xchg
fildl
mov
sub
jno
push
repz
push
push
aas
arpl
test
enter
outsb
jp
push
xchg
jle
pop
fisubs
sti
cmp
push
mov
icebp
jl
push
dec
rolb
es
iret
out
loopne
fisttpl
inc
dec
xchg
push
int3
or
movsb
mov
rolb
mov
pop
push
mov
mov
orb
pop
sub
cmp
out
shll
mov
mov
leave
cld
pop
cli
testl
jno
lahf
data16
jb
add
jb
jae
out
rclb
push
je
popa
movsb
shlb
stos
bound
mov
in
out
sbb
mov
push
mov
cmpsl
mov
jge
fsubrl
ja
idivb
pusha
mov
mov
lret
lcall
and
subps
jbe
pop
es
mov
pop
cmp
imul
aad
scas
sbb
adc
xchg
jl
outsl
adc
and
dec
dec
jns
cltd
cli
fisubrs
push
xchg
push
sub
xchg
mov
xor
loope
push
push
lods
sub
stos
jno
mov
mov
pop
mov
xor
cmpsl
push
or
rcrl
jg
mov
dec
notb
or
inc
fmuls
pop
xlat
imul
lahf
jecxz
test
xchg
push
and
jmp
insl
push
adc
mov
scas
gs
loop
cltd
xchg
xchg
fcompl
fsubl
mov
fs
xchg
lds
out
test
cwtl
movb
xchg
push
daa
dec
sub
decb
sbb
mov
insb
or
mov
sbb
pop
sbb
cli
sub
jge
jle
cmp
push
xchg
mov
fstp
hlt
je
inc
pushf
cli
pop
mov
xchg
jae
loop
push
push
and
fdivr
push
push
xchg
and
mov
mov
popf
cmc
pop
cltd
pushl
xchg
cmp
idivl
andb
scas
cli
mov
mov
mov
bsf
push
push
mov
shlb
andb
inc
cmpsl
loop
lret
test
xor
sbb
cmp
test
mov
in
fldenv
out
bound
jge
mov
xor
jne
icebp
sbb
out
sahf
arpl
jae
jp
push
je
nop
xchg
dec
or
clc
jge
or
rorw
rolb
lahf
out
jno
es
or
dec
add
jle
dec
inc
sub
loope
data16
or
pop
dec
popa
xlat
xor
jmp
mov
inc
cmpsl
test
testl
jmp
pushf
adc
lret
sub
stc
mov
scas
sub
subb
xorl
pop
fcmovb
or
mov
imul
daa
mov
in
xor
or
sub
mov
pop
push
cltd
or
repnz
popf
rcrl
add
imul
cmp
lock
loopne
ljmp
out
int3
mov
push
pop
xchg
sub
fimull
test
mov
pop
jns
mov
mov
cld
xchg
and
mov
and
negb
add
mov
push
inc
adc
jp
iret
fisubl
mov
mov
pop
ret
jmp
xor
and
popa
mov
filds
rclb
cld
push
shr
fs
call
mov
loop
xchg
rcrb
das
jl
sub
sbb
push
push
stos
inc
pop
or
and
jmp
jl
dec
sub
cltd
pop
push
cmp
pushf
mov
dec
std
rcrl
push
cmp
aas
icebp
mov
jp
adc
enter
add
mov
bnd
sbb
lahf
cld
shlb
inc
mov
in
push
xchg
jmp
cmp
movsb
cli
xchg
cmp
inc
mov
std
add
jo
out
push
pop
and
in
ds
push
movsl
loop
or
pushf
push
sub
inc
adc
test
dec
jns
movsl
and
xchg
jecxz
insl
cmp
pop
imul
push
and
push
xchg
mov
rcrb
xlat
repnz
xor
aaa
ret
lods
testl
xchg
xor
out
outsb
and
lods
inc
mov
rep
inc
xchg
sub
fs
jno
call
ret
orb
sbb
mov
push
arpl
ss
xor
loope
scas
mov
je
fucomi
filds
mov
mov
or
pop
into
ret
jns
mov
arpl
jne
mov
jmp
loope
std
dec
outsb
mov
xor
dec
adc
in
pop
mov
push
add
hlt
mov
jo
shlb
mov
jne
ds
out
popl
inc
push
shrb
xchg
mov
xchg
xchg
mov
sbb
dec
and
pop
jg
cmc
inc
stos
not
inc
push
addr16
mov
mov
scas
aas
cwtl
je
loope
fwait
mov
and
jge
arpl
cmp
jmp
out
rorb
jne
dec
bound
iret
les
xor
int3
sub
es
sbb
xor
ss
sbbb
bound
jno
adc
fsubr
outsb
andb
lods
shr
add
aas
cmc
addl
pop
fsub
jo
mov
fisttps
adc
xchg
push
aam
scas
inc
lock
jge
js
stos
movsb
mov
ret
add
inc
lret
ds
pop
test
loop
push
xchg
sar
xchg
sbb
pusha
cwtl
inc
jo
dec
pusha
xor
jno
xchg
sbb
jb
adc
xchg
and
dec
pop
jno
adc
gs
sbb
mov
lea
or
fcom
dec
gs
scas
jge
dec
sub
addr16
fs
jmp
mov
test
clc
sbb
aas
jecxz,pt
add
std
lret
or
mov
lahf
das
xchg
push
or
jb
das
sub
nop
inc
dec
out
arpl
scas
das
sub
lahf
xchg
sub
sub
mov
lret
out
lret
mov
sub
pop
lds
vucomiss
out
adc
push
jno
in
arpl
mov
testl
inc
test
inc
cwtl
ja
in
ret
mov
cmp
cmpsb
in
sbb
imul
sbb
jg
mov
pop
icebp
jbe
test
pop
mov
in
leave
dec
jo
mov
sbbl
xchg
outsb
mov
xor
xchg
out
inc
arpl
cmp
frstor
or
mov
inc
push
pop
mov
lea
mov
jge
inc
fcomps
pop
leave
dec
xor
xor
add
pop
cli
test
pop
lods
jmp
popa
dec
loope
pop
inc
call
pop
xchg
arpl
out
mov
jecxz
jnp
cld
jb
test
jb
sub
lcall
xlat
pop
xchg
push
and
adc
vcomisd
std
aad
outsb
jo
mov
cmpsb
sti
xor
mov
push
jne
mov
lea
or
cmp
xor
xor
sub
pop
mov
mov
mov
push
cltd
lea
and
jnp
lock
dec
ja
or
into
loopne
dec
in
or
jo
pop
movsl
subb
pop
mov
and
insl
push
adc
mov
addr16
push
les
icebp
mov
aaa
iret
jecxz
movsl
in
popf
sarl
inc
cmpl
shlb
leave
mov
mov
mov
mov
les
mov
lods
je
enter
inc
dec
lahf
mov
jmp
sub
sbb
in
outsb
and
mov
imul
mov
push
mov
inc
je
into
and
ljmp
pop
aas
pop
dec
lods
jmp
fstpt
popf
hlt
dec
jbe
mov
jo
mov
add
sub
insl
aam
jl
xchg
mov
cmp
movsb
mov
inc
clc
jae
mov
xchg
pushf
scas
push
jg
mov
out
rclb
stos
rcll
and
cmp
aas
es
aam
push
mov
adc
dec
divb
movsb
fmull
out
jno
dec
fsubs
sub
stc
lcall
ds
mov
je
jbe
dec
out
sar
loopne
shrb
xchg
fbstp
jnp
nop
pop
cli
and
cmp
xor
mov
loope
ljmp
lds
inc
dec
pop
stc
lock
sbb
cld
sbb
pop
scas
jbe
pop
sbb
daa
mov
addr16
nopl
out
pushl
icebp
inc
es
cmc
pinsrw
push
aas
divb
fisubs
addr16
fimuls
stos
cmp
xor
mov
mov
mov
pop
xor
mov
mov
dec
dec
pop
in
dec
inc
xchg
mov
mov
cltd
hlt
ljmp
ret
daa
aad
cld
sub
sub
inc
xchg
les
sub
push
loopne
mov
enter
neg
lret
cmpb
pop
stos
sbb
data16
xor
iret
pop
pop
dec
jns
push
push
stos
pop
jp
dec
ret
ss
mov
jle
add
scas
bound
jnp
int
and
pop
adc
dec
jo
mov
sub
bound
lods
xor
sub
add
cmp
out
adc
jno
xchg
or
xchg
dec
mulb
lods
dec
dec
movsb
lods
rorb
pop
inc
fnstcw
dec
sbb
adc
insl
je
clc
jge
dec
std
jo
and
and
inc
out
repnz
xorl
pop
add
shll
mov
lahf
mov
jp
fnstcw
xor
popa
pop
mov
arpl
mov
in
std
cmp
ficompl
data16
xor
orb
in
inc
fwait
dec
sub
hlt
pop
mulb
fnsave
pop
dec
stos
ficompl
pop
jmp
push
loope
std
xchg
inc
xchg
pop
xlat
dec
push
inc
shrl
cli
jge
sbb
loop
mov
pop
outsb
dec
cld
jnp
sub
sahf
arpl
jle
icebp
fwait
push
hlt
xchg
movsb
aaa
cs
iret
pop
mov
xchg
shr
and
or
dec
ret
and
daa
aas
push
bound
loopne
push
and
or
in
push
or
mov
and
sub
mov
pop
rcll
jae
push
cltd
je
dec
lret
inc
out
mov
sub
push
into
rorl
sbb
stos
pop
sub
loope
insl
movb
insl
fists
xlat
aas
mov
sub
outsl
aam
test
das
jb
mov
fsubrp
xor
aam
add
aas
dec
or
mov
sti
mov
cmp
lahf
inc
sbb
sbbb
sbb
dec
lahf
dec
xchg
pop
mov
cmc
fldenv
je
ret
push
xchg
test
addr16
repz
int
ficompl
rolb
jle
lcall
lds
ja
push
lods
pop
pop
popa
dec
lods
out
adc
int
stc
inc
mov
pop
imul
stos
sbb
xchg
sarb
stos
lahf
lods
pusha
scas
test
lahf
pop
mov
jl
loopne
jle
std
jne
push
out
movsl
xor
sbb
sbb
and
push
cmp
js
jne
adc
ret
stos
pushf
movhps
mov
dec
insb
inc
mov
arpl
fnstcw
push
popa
jp
test
inc
jno
in
pop
lahf
cli
pop
fiadds
push
test
mov
pusha
ret
cmp
pop
addr16
jno
mov
ret
mov
cmp
dec
repnz
lcall
call
insb
push
fcomps
or
push
and
stos
cmpsl
or
jmp
or
xorl
jne
popf
push
xor
sub
insl
jno
pusha
icebp
or
push
dec
scas
mov
mov
xchg
cmp
paddsw
jno
push
imul
pop
lods
xor
adc
jne
sbb
sbb
data16
cmp
shr
mov
xchg
push
aaa
inc
add
rcl
mov
out
iret
enter
push
pop
ds
mov
sub
scas
je
xor
dec
mov
insb
insb
or
lahf
sub
jle
xor
sub
xchg
pop
cmpl
arpl
mov
enter
inc
mov
filds
mov
stos
ficoml
mov
sbb
xchg
inc
push
outsl
pop
pop
add
jno
repz
mov
pop
inc
push
les
sahf
aam
outsl
loope
daa
stc
or
in
arpl
in
loope
mov
push
aaa
fdivrs
cmpsb
mov
pop
push
jno
cmp
pop
xor
push
ss
dec
mov
inc
add
fsubrs
js
out
lret
jae
in
imul
mov
jp
xor
ljmp
mov
mov
lahf
lret
in
lahf
out
add
push
mov
mov
idivb
popf
lret
fsubrl
and
call
dec
jmp
add
pop
pop
adc
lret
scas
std
negb
cmp
stos
jge
icebp
out
ret
inc
rorl
js
lret
pop
cmc
jnp
mov
or
jl
push
fdivl
ljmp
aam
push
mov
push
push
push
xchg
push
insl
sete
xor
insb
in
adc
lods
aam
test
jl
xchg
les
jae
shl
pusha
insl
pop
push
push
sbb
mov
aas
cld
dec
addr16
aaa
nop
push
in
mov
adc
hlt
int
add
or
sub
push
pop
mov
push
xchg
fwait
les
or
dec
cmp
jb
nop
pop
sbb
imulb
xor
shrb
sbbl
movsb
mov
stc
loop
icebp
lods
fsubrl
push
int
mov
insl
bound
arpl
push
callw
push
and
sbb
jl
sbb
inc
adc
aam
sub
mov
mov
push
ljmp
push
movsl
mov
push
jnp
fsts
adc
pop
or
fidivrl
or
sub
mov
jge
xor
adc
xlat
mov
ficomps
add
movsb
xchg
jbe
mov
fsubs
iret
in
jmp
icebp
xchg
cmp
add
push
ss
fcmovnbe
in
cli
aaa
jae
je
add
adc
pop
inc
mov
jno
jno
sub
xor
and
jnp
cwtl
movsl
add
pusha
stos
dec
cs
loope
mov
imul
push
fstpt
mov
loop
xor
mov
cmp
dec
cmp
pop
jecxz
stos
add
addb
addl
in
push
jae
cmp
mov
cmpb
or
jns
xchg
pop
and
arpl
adc
and
adc
je
popa
popa
movsl
mov
mov
cmp
mov
sub
aas
push
or
imul
push
ret
es
adc
in
test
jmp
rolb
pop
mov
dec
mov
mov
fistpll
adc
rcrl
out
insb
mov
cmp
pop
adc
roll
xor
bound
jle
sub
fidivs
xchg
mov
pop
inc
inc
cmpsb
xchg
fidivl
adc
mov
push
mov
adc
dec
mov
test
ret
pop
lret
jmp
jmp
xchg
add
xchg
cmpsl
loop
jb
fldenv
mov
insl
mov
mov
scas
call
idivb
add
aaa
fistpll
jbe
addr16
cs
and
push
jecxz
lea
lcall
sub
arpl
ret
cld
adc
xor
xlat
mov
xor
adc
cmp
movb
cmp
in
push
sbb
add
add
cmpsb
rorl
push
gs
fneni(8087
inc
pop
enter
les
daa
xlat
shl
jmp
repnz
add
scas
rclb
jle
inc
arpl
lods
outsb
lahf
pop
pop
sub
sbb
lods
cmp
lcall
add
xchg
std
insl
and
sbb
mov
adc
pop
adc
mov
sti
shll
enter
rcrl
sti
shl
shll
xchg
cmp
and
push
xchg
popa
xor
xchg
stos
stos
push
mov
xchg
add
jbe
xchg
sbb
jno
mov
cs
add
pop
jecxz
xor
pop
dec
call
lret
popf
mov
mov
sbb
andl
adc
movsl
or
pushf
sub
aaa
jp
and
cmp
pop
inc
in
dec
or
jb
xor
pop
out
inc
add
movsb
cmpsb
or
lret
and
sbb
add
out
mov
mov
pop
xor
fidivs
jno
mov
dec
pop
call
push
xchg
jle
shrb
int
insb
jbe
or
xchg
orl
loopne
and
mov
cmp
cmp
mov
mov
js
mov
mov
test
in
out
mov
ljmp
add
ds
mov
cwtl
and
in
fisttps
rcll
mov
leave
push
test
int3
mov
cmc
adc
xor
sbb
das
pop
fstpl
data16
out
mov
pop
cmp
and
rcr
sub
inc
jo
add
mov
push
loopne
in
xor
sbb
xchg
jg
pop
pop
cmp
movsb
mov
and
aaa
nop
mov
les
sti
rcr
aaa
ja
imul
mov
mov
xor
pop
and
call
les
andb
pop
xchg
gs
cli
mov
sarb
mov
cmpl
shlb
aaa
shrb
xlat
clc
flds
pop
lods
or
out
push
inc
pop
movsl
sti
clc
ret
xor
lret
sarl
fiaddl
lret
dec
add
pop
or
jmp
mov
imul
mov
sub
push
mov
xchg
inc
pushf
push
and
mov
fcom
out
mov
data16
dec
out
mov
sub
fisubrs
jmp
ds
sbb
adc
out
xor
lock
cmp
xchg
mov
lods
jle
xor
sub
dec
movsb
je
icebp
cmpsl
push
push
cli
sub
lahf
xorb
mov
and
sub
es
mov
iret
adc
sarb
fs
mov
jnp
cmp
iretw
adc
daa
jo
insl
movsl
shr
jbe
gs
int
or
gs
dec
fcoml
popa
cltd
jbe
lahf
mov
pop
mov
xchg
les
xor
mov
fs
popl
ljmp
data16
sub
div
andl
jp
cmp
pop
mov
xor
rcrb
mov
lret
or
add
sbb
loopne
jmp
pop
push
daa
fistpll
xchg
cld
and
pop
adc
xor
mov
jo
xor
lret
stc
dec
rorl
mov
xchg
add
xor
dec
sub
in
xchg
inc
mov
ljmp
fnstcw
int
add
mov
jb
inc
and
fdivs
push
mov
leave
incb
aas
bnd
ljmp
addr16
imul
pop
xchg
dec
xchg
ljmp
int
movsl
stos
das
mov
mov
cmp
cld
xchg
sbb
push
jmp
xchg
push
push
repnz
ret
icebp
outsb
push
insb
add
cld
inc
push
aad
fdivs
lahf
dec
sub
movsl
inc
inc
cli
leave
movsl
int
std
jmp
and
xchg
fmulp
out
cmp
in
pop
sarb
pop
and
sbb
aaa
xchg
adc
xchg
loop
push
fdivr
jno
or
add
stos
fcmovnbe
fimuls
shl
scas
mov
pop
int
outsl
mov
mov
shl
notl
test
and
dec
scas
fimull
sub
mov
xor
lods
aad
cmpl
fmull
inc
fs
sar
mov
jecxz
test
mov
or
pop
inc
insb
sar
stc
in
mov
pusha
jge
jecxz
add
popw
mov
jge
inc
inc
pop
or
or
push
cmp
in
lcall
lods
and
lahf
call
sbb
push
popa
lahf
inc
aad
pop
movsl
movsb
cld
or
pop
in
pop
popf
xor
rcrb
iret
push
std
sarb
jns
ljmp
fxch
jmp
shll
sahf
and
divl
sub
and
push
sbb
cmc
mov
test
xchg
jmp
and
pop
adc
xor
cli
gs
sbb
xorl
decl
mov
pop
sbb
std
pushf
loop
adc
ds
inc
cmp
push
xchg
pop
in
fcomp
leave
insb
fistps
push
add
lea
add
bound
mov
jl
movsb
xor
sub
mov
sarl
xchg
sub
popf
stos
sbb
insl
push
cli
xchg
add
cld
xchg
js
aas
push
fwait
sbb
cmp
imul
or
mov
add
sti
das
ljmp
inc
mov
and
inc
jp
movsb
add
push
dec
jge
out
imul
scas
mov
std
nop
imul
dec
clc
inc
mov
adc
or
lock
in
or
mov
push
sub
pop
leave
loop
and
cmp
sbb
out
and
push
push
stc
jo
mov
jb
out
cwtl
xchg
lods
inc
outsb
repnz
adc
fisttpl
enter
pop
add
test
jbe
xchg
or
push
mov
pop
sti
shl
test
fucomi
in
sti
jne
push
push
add
cli
int3
cmpsl
test
push
loop
xor
rorb
or
cmp
jns
jmp
jno
gs
xor
hlt
lcall
into
ret
popf
jo
dec
mov
push
fstl
iret
xchg
adc
enter
nop
xchg
mov
and
enter
stos
ja
inc
jnp
fdivr
and
mov
shrb
dec
or
gs
jae
test
push
shlb
fdivl
mov
push
int
or
cmpl
mov
xor
dec
std
xlat
out
mov
cli
mov
int
fisttps
iret
add
sbb
jae
mov
arpl
inc
mov
mov
jmp
pop
je
and
jecxz
lods
pop
mov
push
lods
pop
clc
mov
les
pop
sbb
shlb
cmp
pop
cmp
mov
imul
loopne
mov
and
inc
out
cmpsl
lods
enter
pop
shl
mov
stos
jno
adc
mov
je
inc
aad
dec
xchg
mov
stc
cli
jne
les
ja
insw
ss
mov
push
leave
popf
add
jno
xchg
test
rclb
jnp
and
push
pop
and
pop
xchg
xorl
xabort
inc
mov
cld
lds
clc
in
dec
call
inc
xor
fstpl
push
jp
inc
and
push
aaa
xor
push
push
adc
push
imul
adc
mov
mov
sbb
jns
lds
in
jle
mov
xchg
push
push
test
call
mov
xchg
adc
xor
pop
and
aam
lahf
cs
xchg
sub
mov
adc
sbb
jno
int3
stos
dec
int3
dec
add
cs
inc
push
dec
ss
push
mov
add
cmp
not
lahf
xchg
outsb
pop
test
pop
add
sub
pop
icebp
rolb
mov
loope
aam
jp
lds
and
and
call
outsb
aas
xor
sbb
sti
xchg
cmc
lock
int
push
xor
or
jge
dec
pop
and
cltd
sarb
jno
or
nop
je
dec
mov
out
push
adc
rol
out
hlt
icebp
jbe,pn
cs
sbb
xchg
xchg
jo
mov
jbe
lret
lret
imul
repz
add
inc
outsb
jo
mov
es
aad
push
fstps
call
pop
inc
repnz
push
mov
fsubrl
xchg
sahf
std
pusha
js
sti
scas
mov
pusha
mov
mov
out
mov
push
pop
pop
sarl
data16
sbb
cmpsb
lds
in
pop
aam
hlt
ret
or
ret
add
push
inc
or
push
ror
arpl
clc
aaa
dec
sbb
shlb
dec
jg
movsb
xchg
test
inc
ficomps
loopne
mov
cmp
pop
pop
rcrl
xor
pop
scas
mov
xchg
xor
scas
sbb
movsb
ljmp
aam
dec
ret
dec
jnp
mov
xchg
iret
pop
add
sub
dec
fisttps
and
adc
loopne
xchg
jnp
mov
nop
and
xchg
mov
bound
jnp
mov
sub
mov
push
mov
push
lods
icebp
jns
rol
enter
xchg
mov
gs
and
dec
fld
jmp
push
imul
call
and
out
ljmp
xor
inc
ret
xchg
repnz
inc
pop
push
and
jmp
lea
cltd
arpl
sub
adc
hlt
je
loop
push
xlat
lock
mov
jecxz
out
ficoml
push
and
add
sbb
sahf
sbb
xor
pop
jbe
sti
jno
es
lock
pop
ud1
fcomps
xor
mov
test
bound
xlat
out
xor
mov
sti
aad
sub
pop
lret
xor
push
dec
jecxz
int3
aas
push
add
orb
sahf
ret
sbb
rclb
sbb
mov
mov
mov
jne
add
push
dec
movsb
sub
add
clc
sbb
daa
clc
xor
call
cld
aam
xorw
int
mov
test
das
xor
and
add
adc
or
jae
or
jae
adc
lret
or
mov
dec
or
loop
mov
fnstcw
rcll
mull
std
test
jle
shl
or
and
push
xchg
test
out
jg
cmp
rorb
fstl
clc
sbb
out
mov
ljmp
push
frstor
jae
fldenv
push
add
cmpsb
int3
mov
and
xor
inc
arpl
imul
or
adc
scas
adc
xor
lcall
repnz
cmp
fcmovnbe
adc
push
mov
enter
xchg
fcom
cmp
jo
mov
leave
xchg
loopne
in
pop
testb
outsb
dec
xchg
lcall
pop
enter
outsb
jno
test
mov
decl
cmp
dec
mov
sbb
rcrb
push
sub
jno
jae
sahf
movsl
add
adc
int3
ja
shrb
test
outsb
movsl
mov
fsubs
mov
xor
pop
mov
fs
pop
ja
jae
or
sti
cmpsb
pop
outsl
out
ds
dec
xchg
cli
arpl
ss
fisttps
mov
push
mov
loop
adc
or
cltd
and
mov
jle
mov
xor
nop
fcmovb
xor
jae
and
xchg
mov
xor
sub
mov
or
fimull
mov
and
lret
das
je
mov
sahf
and
inc
push
out
in
rcll
cltd
mov
adc
sub
dec
aas
daa
mov
dec
xor
adc
scas
cmc
or
add
inc
mov
sub
loopne
adc
xlat
xchg
mov
adc
clc
mov
ss
aas
push
ret
sbb
mov
repnz
pop
sbb
leave
sub
inc
iret
xchg
in
xlat
fadd
rol
pop
into
ljmp
jnp
jo
cmp
add
js
movsb
adc
stos
xchg
pop
mov
js
shr
add
add
fistps
jge,pt
ret
inc
jae
jb
bound
stos
push
xor
out
or
push
test
arpl
hlt
das
std
aas
jecxz
push
int3
das
xor
jbe
cmp
xchg
dec
bound
mov
push
jle
loop
movsb
fstpl
xchg
xlat
adc
cmpsl
repnz
pop
out
inc
inc
dec
adc
mov
and
int
jmp
pop
pop
ljmp
dec
das
in
add
insl
lret
cmp
push
mov
cmpb
pop
pushf
jge
cmc
ret
xchg
addr16
scas
adcb
and
popa
clc
mov
dec
xor
add
push
lahf
cmp
repz
scas
xchg
stos
fnstcw
jne
lds
jb
out
sar
dec
cmp
push
mov
push
mov
out
dec
leave
lcall
stc
sbb
push
in
xchg
jo
mov
fisttpl
out
push
test
movsb
push
inc
in
es
scas
call
mov
and
sti
shufps
inc
ljmp
mov
jb
mov
adc
cmp
es
daa
ret
mov
inc
mov
int3
loopne
cmpsl
jmp
jae
arpl
lret
les
mov
ljmp
dec
or
insb
addl
cltd
out
pop
fucomip
push
repz
sbb
xor
mov
lret
mov
pop
push
cwtl
iret
xchg
test
rclb
push
hlt
cmp
add
sbbl
neg
or
cs
insb
xchg
dec
enter
xor
sub
pop
scas
jno
test
bound
adc
mov
fcomi
mov
jge
mov
popf
shr
sbb
mov
in
adc
test
xchg
clc
xor
mov
idivb
nop
sub
push
push
dec
leave
and
mov
sub
mov
lcall
pop
sbb
scas
les
mov
push
leave
loope
add
xchg
cmp
out
xlat
pop
stos
adc
push
push
dec
mov
test
or
and
mov
or
arpl
ror
sbb
js
mov
int3
jbe
cmp
ss
xor
mov
xor
sbb
add
jne
cmp
rep
cmp
push
mov
pop
dec
cmp
mov
loope
jo
or
out
testb
stc
outsb
xchg
jae
popa
mov
or
push
lods
dec
pop
int
movsb
in
mov
daa
and
enter
pop
inc
out
lock
cmpsl
xchg
xchg
xor
addb
sbb
scas
mov
add
mov
xchg
xor
sbb
sbb
rcrb
leave
ret
inc
lcall
nop
cmp
or
xchg
in
hlt
int
js
jb
std
pop
xor
sub
jb
sub
cwtl
sub
xchg
and
clc
loopne
movsl
adc
dec
pushf
pop
jmp
fdivl
push
add
mov
shlb
loopne
sub
and
out
push
shrb
test
lcall
sub
add
ret
jmp
test
add
hlt
sub
icebp
xchg
repnz
into
xor
jmp
jbe
mov
pop
mov
iret
or
mov
loope
push
mov
sti
cwtl
push
mov
sbb
push
xor
inc
pop
inc
ret
push
mov
stos
adc
push
and
or
sbb
and
cmp
in
jmp
inc
pop
fsubp
cld
pop
outsl
push
mov
enter
or
xor
ss
cld
push
jge
mov
pop
pop
stc
gs
loope
or
loopne
mov
fadd
sbb
pop
sub
ror
fsts
dec
movsb
pop
cli
aaa
mov
mov
pop
iret
sub
adc
xchg
les
or
xor
sub
into
inc
push
lds
outsl
inc
out
jne
sbb
fadds
push
xor
sbb
mov
incl
mov
xchg
imul
arpl
insb
lea
icebp
fiadds
mov
lods
jecxz
lret
dec
clc
inc
cmc
xchg
mov
in
or
fldt
mov
fidivs
bound
jp
cmp
pop
pop
dec
jbe
int
push
fstpt
inc
addr16
mov
lock
mov
ficoml
dec
adc
pop
dec
fisubl
mov
es
mov
sub
and
test
xchg
jg
repnz
add
fdivrl
or
iret
lea
dec
pop
jnp
xchg
popa
shll
leave
sahf
ss
sbb
lret
nop
popf
std
and
jb
xchg
xchg
sbb
jno
cli
mov
cltd
fisttpll
push
pop
lahf
add
fisubrl
or
lock
jle
push
jle
push
push
iret
and
cmp
aas
inc
jno
shll
in
push
pop
inc
jb
push
outsl
shrl
or
iret
addr16
and
jg
psubd
sub
rorb
das
jnp
mov
stos
mov
fwait
loopne
cs
insl
sub
call
dec
call
sbb
mov
in
pop
push
inc
hlt
mov
mov
fldenv
mov
jnp
adc
push
arpl
lods
int
loope
dec
or
inc
xorl
rorl
add
sbb
dec
sbb
and
loope
bound
test
imulb
jge
pop
sbb
dec
inc
lret
dec
andb
daa
dec
insl
sbb
lret
in
popf
sahf
addl
sub
fdivrs
xor
xchg
xor
inc
ljmp
xor
sub
or
js
and
insl
test
stos
mov
or
je
ss
bound
adc
imul
push
arpl
arpl
insb
test
cs
mov
hlt
or
daa
add
and
push
dec
lds
shrl
cmpb
ret
addb
bound
xor
xchg
and
mov
rolb
push
loopne
inc
adc
lret
fnstsw
and
mov
xor
mov
jg
xor
inc
stos
lret
dec
jb
test
push
fcompl
testb
cli
jae
inc
lret
nop
xadd
iret
fwait
cmpsb
xor
mov
lds
aad
dec
aaa
aaa
popa
andb
push
cmp
pop
mov
add
mov
outsb
loope
arpl
mov
and
lods
cmc
adc
rorl
xchg
inc
and
mov
scas
cs
outsl
data16
popf
jns
cvttps2pi
sub
push
mov
in
addb
retw
mul
sarb
les
dec
fucomp
or
push
test
xor
loope
repnz
add
imul
shrl
inc
sbb
dec
push
mov
jnp
and
testl
jecxz
mov
xor
cmp
icebp
lret
jae
imul
xchg
cmp
lods
mov
movlps
shll
inc
int
add
pushf
arpl
sub
cmc
movsb
js
leave
pushf
out
mov
xor
dec
movsl
xor
imul
out
fwait
pop
fists
in
les
lsl
and
xchg
pop
loop
adc
sub
rcll
into
or
cmp
mov
mov
sub
cmp
sub
sbb
or
sub
mov
std
aam
cltd
stc
xchg
mov
mov
mov
repnz
push
stos
or
mov
or
mov
scas
pop
push
or
mov
ss
out
fbstp
std
test
push
mov
dec
dec
daa
jp
cmp
xchg
out
cmc
in
mov
pop
enter
or
mov
mov
out
ror
out
lock
push
popf
lret
inc
stc
cmp
dec
cltd
mov
mov
rorl
dec
push
mov
rol
mov
pop
jmp
push
fstl
mov
push
sbb
bswap
lahf
sbb
mov
mov
dec
and
notb
push
cli
sub
pop
cld
aaa
mov
jecxz
sub
popa
push
mov
jnp
mov
rcr
mov
and
insb
dec
fisubs
mov
xor
ljmp
es
clc
imul
pop
inc
mov
xor
loop
push
jnp
dec
loopne
fdivl
std
and
lret
stc
sub
pusha
sbb
mov
movsb
mov
stc
out
imul
popf
fisubrl
sbb
mov
test
jno
fists
les
test
add
or
popf
push
aas
xchg
es
jecxz
dec
arpl
push
cmp
gs
dec
inc
rcrl
xchg
in
pusha
or
jl
daa
out
mov
mov
xchg
dec
ficompl
jg
std
insl
pop
or
mov
outsb
mov
cmp
dec
dec
addr16
jno
mov
inc
jo
ret
add
adcl
mov
jp
pop
out
xchg
push
jae
mov
shrb
clc
hlt
inc
cli
push
dec
sub
xchg
mov
xor
cmpsb
lds
inc
int3
scas
mov
and
pushl
mov
or
pop
sub
mov
cmp
icebp
xchg
addr16
mov
cli
ja
mov
xor
subl
pop
cmp
mov
jp
jae
test
arpl
xor
aad
dec
addr16
mov
insl
pop
sbb
push
subb
xchg
adc
ja
jns
imul
daa
out
xor
ficoms
pop
mov
mov
daa
mov
sti
mov
stc
imul
test
pop
sub
xchg
mov
and
jnp
mov
cli
push
cmp
inc
int3
pop
aaa
xchg
mov
aam
and
xor
jo
cmp
test
xor
addl
pushf
push
imul
sub
aaa
lds
into
repnz
pop
and
sti
mov
movsb
inc
jg
les
je
jge
jmp
pop
pusha
push
mov
out
loope
cmp
inc
inc
aad
mov
push
pop
mov
push
out
xchg
aaa
mov
pop
mov
dec
xor
jmp
std
mov
idivb
add
ds
arpl
out
sub
xchg
sub
mov
arpl
mov
shrb
and
aaa
sbb
ja
mov
leave
and
ljmp
push
jmp
lods
dec
fildll
xchg
scas
fdivr
inc
lock
imul
rcrb
imull
sbb
lcall
inc
dec
mov
movsl
les
lret
loop
imul
or
and
lret
sete
mov
rclb
xor
cli
out
jle
clc
inc
and
and
push
xchg
mov
mov
cmp
es
cltd
sub
sbb
inc
pop
ljmp
sbb
dec
mov
jne
sub
hlt
gs
cmp
dec
stos
call
jg
pop
xchg
popf
push
xchg
test
xchg
and
inc
popa
loopne
jecxz
cmp
xor
fs
pop
movsl
out
mov
test
movsb
mov
stc
pop
sub
inc
roll
out
ret
xchg
sbb
xchg
hlt
clc
mov
mov
dec
or
das
lds
clc
scas
mov
jo
or
movsb
lock
notb
fstl
les
mov
pop
hlt
icebp
and
fs
and
cmpsl
dec
rolb
int3
popf
sti
and
jge
stc
dec
adc
mov
outsb
mov
ss
ds
push
sbb
call
xchg
add
and
shrb
mov
mov
mov
data16
in
push
test
cmp
dec
cld
out
sbb
push
xor
pop
xchg
fiadds
sar
les
mov
lcall
pop
mov
xor
and
loop
mov
daa
out
call
icebp
clc
bound
pushf
jg
imul
mov
xor
iret
scas
cmc
jmp
push
loope
push
mov
dec
mov
xchg
call
dec
mov
aad
xor
cmp
sbb
sbb
mov
mov
in
into
nop
cmc
sbbl
orl
jl
dec
or
loopne
jbe
iret
pop
filds
mov
add
xchg
cmp
pop
sarb
jo
fldl
add
sbb
push
cmp
xor
sbb
xor
sahf
fsubrs
sbb
dec
adc
ret
pop
outsl
repnz
jo
and
push
xchg
or
push
jne
inc
adc
imul
mov
mov
xchg
adc
into
bound
cmp
in
mov
pop
xorb
in
or
mov
pop
ljmp
pushl
das
and
sbb
push
fstl
daa
jg
mov
inc
mov
loop
mov
pop
leave
popa
sub
dec
cmp
jmp
mov
lock
mov
sbb
in
imul
fcmovne
push
cmp
nop
out
dec
pop
ja
jmp
inc
adc
cwtl
aas
pop
dec
sub
cmp
cltd
movsl
pop
add
je
lcall
gs
or
insb
xor
dec
icebp
adc
arpl
jbe
sbb
mov
jne
dec
jp
pop
cmpsl
push
je
or
push
jmp
lds
outsb
inc
inc
add
cmp
mov
xchg
pop
push
ret
push
fsubs
sub
cmc
stos
mov
mov
insb
mov
mov
out
cltd
shll
iret
das
int
xor
leave
pop
cmp
xchg
and
xchg
dec
adc
imul
or
loopne
insb
lods
mov
negl
mov
les
shr
outsb
pop
fs
push
push
rcrb
mov
mov
cmp
inc
mov
fistpl
scas
push
xchg
into
js
in
xchg
out
pop
add
xchg
mov
pop
add
ss
mov
pop
or
xchg
push
cmpl
movb
sbb
sbb
sti
popa
pop
insl
cmp
fsubs
call
jl
je
imull
cmp
mov
push
test
ja
xchg
movl
mov
sbb
mov
jno
cmpsb
jno
cmpb
add
aaa
fwait
jo
xor
aas
insl
cmp
mov
sub
test
pop
test
mov
xchg
sub
mov
mov
je
es
iret
leave
or
fstps
ret
pop
xchg
jb,pn
sbb
jg
jne
xor
add
pusha
xlat
jae
adc
rclb
shll
in
mov
repnz
inc
cmp
out
aad
int3
pop
mov
pop
in
pop
xor
out
cmp
test
xchg
shrl
lods
inc
and
sub
call
mov
leave
popf
sub
test
pop
xorl
xchg
pop
cwtl
shlb
jbe
hlt
inc
xchg
or
cmc
adc
xor
and
les
imul
mov
lock
jl
and
cmp
in
pop
adc
jae
aaa
cli
test
mov
imul
nop
ds
sub
adc
ja
out
and
std
imul
fimuls
dec
ss
stc
mov
mov
mov
push
lret
mov
pop
frstor
cld
ljmp
and
lret
out
das
mov
sub
loopne
xchg
xlat
and
or
ljmp
cmp
push
pop
push
repz
jp
pop
pop
jg
scas
and
sbbb
push
fbld
roll
mov
inc
fcomps
jbe
stos
lea
sbb
jge
mov
add
int
and
roll
enter
dec
sub
mov
cmp
ss
cmc
jbe
test
out
cmp
imul
xor
lret
repnz
pop
mov
js
fs
cmpsl
add
cmp
pop
pop
jbe
dec
lcall
mov
add
scas
jp
imul
pop
aad
push
jecxz
cmpsl
mov
decl
jb
iret
and
pop
aaa
inc
sbb
hlt
pop
mov
and
push
call
rclb
insl
push
dec
pop
mov
test
sti
pop
xchg
xlat
inc
js
cmp
or
std
pop
iret
jne
in
sbb
jnp
xchg
cs
inc
xchg
clc
imul
fimull
xchg
mov
jns
mov
adc
arpl
dec
dec
aad
ficompl
cmpsb
mov
notb
mov
cmc
jb
mov
loopne
adcl
and
xchg
aam
and
adc
dec
rorl
xchg
cmp
iret
jbe
pop
fldcw
inc
ja
cld
and
jle
xchg
clc
testb
add
insb
negb
fsubr
cmp
pop
jg
xchg
mov
test
rcrb
icebp
xor
popa
clc
fdivp
lcall
and
jnp
dec
aaa
push
xchg
movsb
add
enter
mov
dec
sarl
popa
data16
cmp
fisubl
nop
sub
mov
pop
inc
shll
mov
sub
fcompl
add
fstl
lcall
into
mov
into
xor
adc
dec
jle
int3
stos
ja
and
and
adc
sahf
adc
jnp
push
xor
fldcw
fisubl
andb
push
outsb
pop
sbb
add
dec
fmuls
into
mov
xchg
popf
jno
push
sbb
dec
cmpl
and
dec
sahf
ss
insl
gs
testb
loopne
mov
imul
addr16
push
push
js
mov
and
loope
mov
popa
or
xchg
out
pop
mov
enter
insb
fwait
imul
enter
sub
sub
mov
push
rolb
xor
leave
add
adc
add
iret
add
adc
and
cli
jo
add
stos
in
xor
js
cmpsl
cmp
jbe
aad
and
scas
notl
sub
into
adc
jmp
stos
shl
out
mov
cmp
test
inc
sbb
stos
les
stos
xchg
mov
xchg
xchg
push
movsb
add
xchg
out
cmpsl
fisttps
push
pop
xor
and
sub
mov
insl
push
nop
aas
xor
dec
jge
pop
or
gs
jns
jge
loope
scas
adc
or
shll
cli
sub
push
pop
das
int3
les
fsubp
mov
lds
arpl
fwait
xor
mov
lods
add
pop
adc
sbb
cmp
sub
xor
dec
push
jp
das
addb
pop
cld
addl
or
jb
mov
sti
popf
les
enter
gs
out
inc
and
push
fnstenv
fidivrl
adc
sarb
sbb
and
xor
or
adc
and
jmp
mov
jmp
rorb
push
test
int3
fsubrp
mov
and
mov
repz
orl
outsb
lods
mov
mov
mov
lds
sets
rolb
sbb
dec
hlt
pavgw
and
sbb
push
pop
negl
sti
fldl
int3
mov
into
mov
xor
loope
fdivrs
jb
push
ds
dec
popa
lods
dec
mov
add
sbb
loope
les
in
dec
pop
and
sub
call
xchg
fstpl
or
jo
pop
test
pusha
mov
lock
push
dec
xchg
call
lcall
xchg
cltd
lcall
sahf
mov
in
push
fadd
daa
fbstp
pop
cmp
cmpsl
mov
sahf
cli
cwtl
stos
gs
cmc
in
in
ret
aam
add
mov
cmp
repz
mov
cmpl
adc
or
lret
psrld
sub
movsl
cmpsl
adc
jnp
dec
mov
jnp
sarb
aad
inc
mov
jb
mov
mov
movlps
jp
dec
call
jl,pn
cmp
scas
dec
fistpl
pop
inc
push
pop
insl
jnp
jne
inc
ret
pop
mov
xchg
ss
divb
xor
mov
das
pop
xchg
sub
inc
jae
push
clc
js
cmpsl
dec
lods
mov
jg
std
outsb
sahf
push
sub
and
and
mov
sahf
add
aad
shlb
test
push
mov
enter
movhps
gs
mov
out
icebp
call
call
mov
xchg
fsts
insb
insl
mov
mov
mov
out
daa
dec
fwait
ljmp
iret
jp
xor
adc
xor
imul
cltd
jns
out
dec
dec
insl
cmc
and
add
pop
ds
xchg
outsb
pop
lods
cmp
notl
push
add
inc
dec
lea
push
fistpl
sti
clc
mov
test
sarb
mov
int3
push
stc
in
jmp
jg
ljmp
mov
pop
mov
push
test
sbb
rorl
xchg
xchg
xor
mov
push
push
and
and
or
ljmp
out
rol
jl
pop
pop
in
and
xor
lret
adc
jp
insb
or
mov
fcmovnu
mov
xor
aad
mov
dec
mov
int
mull
fidivs
push
int
or
in
aaa
loopne
cmp
mov
out
aaa
sbb
sub
lahf
xor
mov
mov
scas
ds
mov
jo
setle
in
adc
out
ret
inc
enter
jno
dec
pop
inc
mov
cmp
add
push
dec
int
repz
mov
loopne
div
aas
mov
jle
jg
push
pusha
stos
dec
or
adc
pop
pop
cmp
fisubrs
stc
adc
icebp
xor
insb
jmp
sbb
cmp
ljmp
dec
jecxz
out
jg
in
popf
mov
dec
pop
xchg
into
push
add
jb
add
cmp
pop
arpl
fcomi
fisubrs
sti
lock
or
sahf
test
xor
rcll
and
xchg
sbb
pop
adc
jmp
inc
push
out
out
push
dec
pushf
mov
clc
cmc
push
cs
mov
cmc
insl
cs
imul
repz
dec
add
in
push
sbb
gs
mov
and
sbb
push
std
ds
insl
mov
in
out
das
divl
int
mov
loope
mov
out
xchg
add
out
mov
push
cltd
inc
in
jae
es
sarb
xlat
cmp
cmp
sahf
mov
dec
loopne
push
shr
mov
call
dec
push
pop
cmc
into
push
pop
mov
movsb
sbb
aas
stos
xor
testl
test
repz
insb
jbe
int
in
fildll
loope
pop
insl
pop
and
mov
sbbb
push
in
bndldx
pop
das
nop
add
das
jl,pn
roll
mov
sti
arpl
inc
cmp
jmp
daa
sahf
scas
pop
or
fcomps
or
into
shrl
mov
out
in
rolb
outsb
ja
cmp
pop
jle
push
outsl
in
pop
aad
ret
ja
mov
dec
pop
add
jae
pushf
adc
mov
mov
xor
xchg
mov
mov
je
xor
push
mov
loope
mov
cmp
jb
push
mov
rcr
push
mov
mov
sti
jbe
out
out
pop
or
push
loop
movsl
int
and
stos
cmc
insl
or
jae
dec
sub
lock
mov
scas
add
sub
pop
pop
mov
shlb
inc
xor
outsb
les
adc
aam
iret
dec
mov
sbbb
sub
or
lahf
int
sub
into
or
shll
add
xchg
and
mov
repz
outsb
sub
and
stc
sarl
pop
fldenv
sbb
shlb
std
mov
push
cmpsl
jl
ficoml
push
mov
add
in
and
dec
xor
ds
and
pop
sbb
mov
and
xor
les
shll
pop
mov
out
inc
adc
mov
inc
or
push
pop
mov
adc
les
cs
icebp
jmp
fnstcw
cs
scas
loopne
lret
pop
cmp
dec
fimull
cwtl
sbb
lods
xchg
les
addr16
pop
fistps
xchg
mov
sbb
xchg
scas
insb
in
insl
mov
jo
pop
test
push
lcall
mov
ss
pop
mov
test
fimull
cmp
jo
jno
and
mov
push
jge
outsb
lods
insl
jp
fildl
mov
and
mov
push
rorb
jnp
mulb
add
in
pop
call
push
sub
lods
loopne
pushf
es
mov
or
or
pop
aaa
push
xchg
lcall
in
xchg
ss
and
insl
and
xchg
jle
iret
cli
cwtl
aam
dec
pop
jae
jecxz
imul
add
mov
imul
ret
roll
std
lea
lock
inc
cmpsl
jno
sbb
mov
mov
push
push
sub
adc
cmc
jmp
sub
cmp
xchg
shlb
cmp
repnz
add
das
and
xor
jnp
push
mov
mov
bound
jge
xchg
aaa
cltd
push
fidivrs
cmc
jecxz
jno
test
xchg
shl
or
lods
pop
sub
adc
xchg
xchg
fsubl
push
xchg
and
pop
cmpsb
jb
icebp
xchg
aad
xchg
xchg
js
dec
repz
cmp
mov
ret
iret
or
adc
mov
aas
out
lods
cmc
lret
arpl
out
adc
jmp
or
in
je
rclb
xchg
sub
idivb
data16
and
mov
dec
add
mov
sti
sbb
mov
push
mov
les
out
jb
and
sub
loope
cmp
idivb
jno
pop
cwtl
mulb
jne
cmp
pop
mov
fiadds
or
xchg
cmp
cwtl
rcrb
or
int
incb
xor
jg
lds
adc
push
xor
xor
outsb
xchg
jns
xchg
cmp
cli
test
flds
std
fistpll
movsb
enter
addl
ret
dec
scas
stc
arpl
mov
into
hlt
ret
lods
adc
mov
mov
add
addb
lahf
add
push
fdivl
daa
lds
xor
adc
ja
push
mov
rcrb
aad
sub
inc
cmp
jno
mov
aam
gs
dec
mov
arpl
adc
mov
jnp
sbb
and
mov
loopne
shl
fmul
sub
leave
test
adc
loope
or
xlat
daa
push
cld
push
push
stc
in
stos
mov
movsb
mov
pop
in
cmpsl
push
jmp
in
pop
popf
mov
sub
daa
push
mov
xchg
movsb
pop
jge
popf
shrl
pop
aas
push
xchg
into
aad
loope
cltd
sbb
movsl
jp
jnp
xlat
sbb
neg
xor
cmc
inc
jl
loop
adc
mov
mov
inc
sub
aaa
sbb
pop
jl
xchg
push
push
cmp
mov
cmp
mov
cli
icebp
dec
dec
xor
icebp
dec
mov
push
cmp
push
cmp
mov
es
into
std
dec
push
fdivrl
lock
in
sbb
das
cmp
cmp
mov
xor
sti
cmp
mov
jo
adc
cmp
sti
dec
and
mov
push
mov
rcrl
jle
sub
jl
insl
pop
lods
sbb
adc
stos
hlt
mov
inc
rorl
lret
mov
in
inc
sar
fisubl
adc
mov
pop
pop
test
lds
xchg
mov
and
push
je
xor
push
ja
jle
lret
mov
xchg
mov
lcall
push
mov
pop
cmpsb
cmpsb
or
les
dec
pop
repnz
pop
or
pop
mov
dec
jge
and
add
rcr
fwait
sub
pop
sub
sbb
pop
jp
and
mull
std
sti
das
dec
outsb
cmp
or
jmp
ss
jle
into
sub
hlt
mov
xor
push
dec
add
adc
out
popl
and
scas
insl
into
inc
and
leave
fs
mov
adc
add
scas
jg
and
fiadds
repnz
ret
lret
push
and
cmp
push
fstpt
rcll
pop
pop
cmp
add
sub
xor
push
cltd
inc
es
xchg
push
lock
aad
inc
out
adc
sbb
mov
mov
add
inc
dec
push
or
or
enter
cmp
jnp
add
jns
inc
test
or
ucomiss
xchg
cmp
or
jnp
add
cmp
rcrl
movl
jne
or
call
insl
loop
cmp
pop
adc
push
enter
inc
inc
sub
cmc
add
aaa
pop
and
xor
xadd
out
and
daa
add
sbb
std
cs
sarl
cmpl
adc
sub
jns
xchg
mov
inc
aam
xrelease
cmpsl
loopne
ja
stc
add
dec
mov
dec
imul
cmpsl
inc
out
cmpsb
dec
xor
fisubl
test
in
jne
inc
cmpsl
stos
test
arpl
xchg
xchg
and
fadd
push
add
jne
cmp
push
fs
mov
jns
rol
nop
stc
xor
jp
add
shrl
mov
pop
test
fisttpl
jge
xor
or
faddl
pop
cmp
subl
rcrl
mov
gs
cld
sbb
sub
daa
sti
call
mov
int
and
call
adc
popa
hlt
xchg
popa
stc
push
pop
mov
dec
orb
lods
jecxz
shll
jg
jle
ret
arpl
xchg
clc
mov
shr
dec
pusha
outsl
mov
test
pushf
iret
movb
cmpsb
fistl
mov
cmp
in
enter
xchg
mov
clc
jmp
addr16
imul
push
sbb
and
test
scas
jb
jmp
dec
mov
shll
mov
loopne
mov
inc
in
pushf
repz
jb
mov
test
mov
sahf
push
movsl
mov
mov
sti
mov
jno
loopne
push
cmp
jp
bound
cmp
int
int3
mov
pop
jl
xchg
adc
shl
imull
mov
cld
lods
jne
in
sarl
loopne
test
adc
popa
outsb
iret
dec
pusha
fsub
jecxz
js
cltd
dec
int3
jbe
cli
call
hlt
xchg
mov
stos
test
les
sti
pop
out
xchg
jae
sbb
pop
mov
int3
repz
jbe
jae
cmp
mov
arpl
lea
mov
cmpsb
in
push
mov
mov
movsb
push
fldcw
leave
adc
push
lea
mov
xlat
and
and
lods
shrl
inc
sbb
pop
mov
push
cmp
sbbb
mov
cmp
loop
mov
sbb
pushf
rcll
fwait
adc
aam
xchg
add
pusha
out
cmp
test
insb
pop
xchg
jb
mov
es
daa
rcl
sbb
es
cmpsl
xorb
iret
jb
stos
inc
xchg
jmp
inc
mov
pop
lret
inc
cld
jns
sbbb
jmp
jb
jno
ret
test
arpl
add
das
or
cltd
lds
cmp
insb
andb
lea
insb
push
clc
scas
cmp
xlat
inc
pop
mov
fcomp
bound
ret
mov
xor
stos
cli
sbb
adc
rcrb
cmp
push
pop
dec
bnd
andb
and
ffreep
test
call
sarw
xor
push
push
dec
inc
adc
mov
fildll
mov
loop
loop
or
cmp
ds
test
idivb
pop
test
aas
dec
nop
mov
jae
inc
adc
cli
jmp
push
xlat
dec
jmp
cmp
aad
sub
mov
orl
mov
adc
ret
and
xor
lods
dec
insb
ds
lods
mov
les
ret
pusha
mov
hlt
cmp
repz
ret
mov
fmuls
je
ficompl
mov
push
xor
das
ja
rorl
jmp
mov
jl
xchg
push
stc
mov
popa
ficompl
ljmp
adc
mov
cmpsl
xchg
aaa
jecxz
ret
xchg
cld
aad
outsl
js
jno
hlt
sbb
es
lds
xchg
push
jno
cmp
nop
inc
and
cmpsb
popa
js
mov
or
out
call
sub
pop
ret
mov
ljmp
add
sahf
mov
pop
lcall
push
sbb
aaa
jbe
mov
fstps
jb
xchg
fs
ret
insl
jg
loope
scas
es
pop
add
pusha
mov
sar
test
mov
imul
xor
pop
add
pop
mov
xchg
inc
mov
lcall
push
add
shll
adc
stos
inc
mov
fisubrs
dec
outsb
inc
add
push
gs
cmp
decl
in
or
jmp
in
mov
aad
pop
rcl
push
gs
adc
daa
jbe
ret
add
mov
lods
scas
lods
jb
daa
rolb
adc
push
into
sub
sbb
les
jne
insb
sub
cmp
pop
xchg
sbb
push
jnp
and
cwtl
xchg
adc
les
mov
mov
add
int3
les
fcoms
pop
mov
push
jge
mov
or
add
dec
pop
cmpsb
mov
subb
shrb
repz
push
inc
icebp
xor
add
add
or
in
pop
jp
adc
jecxz
jg
mov
pusha
sbb
scas
sbb
mov
jl
inc
inc
lds
imul
dec
mov
xor
daa
int
mov
leave
jnp
cli
lret
lock
add
test
into
lds
addr16
jbe
insb
and
xchg
adc
mov
mov
mov
cmp
xorl
jmp
jno
or
pop
or
stc
add
subb
xchg
pop
imul
pop
mov
cmp
in
push
ds
leave
stos
xor
sbb
inc
pop
push
idivl
pop
aas
xlat
xchg
cltd
aas
dec
dec
push
loopne
add
call
js
mov
mov
in
in
add
push
sub
sub
fdivl
cmpb
sbb
stc
data16
dec
push
mov
imul
xchg
xor
mov
repnz
push
out
cmp
pop
aad
xor
jnp
leave
push
sub
dec
stos
mov
xor
sub
add
inc
jle
and
cmpsl
jle
into
enter
jmp
cmpsb
pushf
inc
arpl
das
test
dec
into
mov
xlat
dec
mov
adc
adc
shrb
je
cmp
mov
call
cmc
cmpl
sub
sti
jb
call
or
out
mov
mov
push
or
icebp
insb
iret
daa
add
cmpsl
in
xor
pop
scas
and
jecxz
push
jo
and
cli
rcrb
mov
push
cmp
fcmovnbe
or
inc
jbe
aaa
cmp
xchg
aas
dec
cmp
and
jbe
in
add
jl
cmp
cmp
sbb
mov
lock
xchg
mov
inc
dec
xor
jmp
push
test
jns
mov
lret
popa
adc
fsubs
pop
test
and
jp
mov
imul
hlt
vpmulhw
loop
adc
xchg
inc
dec
inc
sahf
sahf
ret
imul
push
add
pop
cmp
dec
jp
test
cmp
out
and
jno
lock
int3
cmpsl
sbb
aad
push
mov
xchg
leave
jge
xchg
es
in
sbb
dec
mov
inc
cmc
in
test
imul
sub
xchg
pop
arpl
sub
mov
sub
icebp
sar
pop
sbb
xor
andps
shlb
sahf
jnp
jb
pop
dec
shr
add
fstpt
jnp
pop
adc
data16
cmpsb
mov
cs
out
loop
push
out
aas
out
in
add
cmp
movsl
shr
sbb
lock
popa
pushf
ret
jl
jbe
adc
mov
stos
add
int3
enter
sbb
push
sbb
incl
or
dec
push
mov
add
testb
ret
testb
ret
loope
xchg
cmp
mov
xor
push
scas
add
arpl
cli
or
fistpll
add
xorb
shlb
sbb
push
sub
in
and
and
push
imul
sarl
sbb
jle
aad
out
xchg
lds
mov
dec
pop
aas
and
push
push
popa
mov
loope
push
lea
ret
imul
sub
imul
jno
and
push
cmpsl
xlat
aaa
outsb
push
into
xor
pop
mov
jl
fildl
mov
cmp
jo
notl
cmp
adc
sarb
and
xchg
jmp
inc
push
mov
popf
mov
mov
fadd
adc
inc
inc
loop
xchg
sbb
push
jp
sub
lods
lock
out
outsb
fdivl
mov
inc
lods
mov
das
cmp
jo
mov
lea
xor
bound
mov
sbb
adc
jp
das
xor
or
scas
sbb
in
addl
mov
repz
xchg
loop
mov
out
dec
repnz
in
dec
inc
mov
ja
sahf
outsl
movsb
inc
inc
sbb
pop
adc
das
pop
dec
mul
sti
or
les
xchg
push
xchg
js
jle
cmp
je
cmp
mov
jecxz
adc
cmp
stos
pop
push
xacquire
mov
dec
or
subl
sub
add
inc
call
xchg
dec
cmp
jle
cmp
or
push
pop
push
inc
imulb
or
mov
fdivs
lock
jmp
loope
sbb
cld
dec
mov
pop
fs
adc
mov
in
rcl
repnz
adc
stc
sbb
jnp
idivl
mov
dec
iret
xlat
mov
les
xorb
sub
in
int
cmp
daa
stos
aaa
sbb
fidivs
mov
insb
pop
jnp
subl
pop
mov
adc
loopne
mov
dec
sub
inc
leave
push
rclb
push
das
dec
or
popa
test
mov
stos
cmc
or
sbb
cmpsb
mov
bound
ror
mov
mov
rol
jle,pn
lds
mov
mov
outsb
sbb
sbb
les
outsb
mov
shrl
stc
ja
imul
lea
outsl
rclb
fadds
lea
pop
dec
xchg
sarl
jne
add
mov
mov
ja
scas
adc
sbb
push
test
mov
mov
add
add
dec
cmp
pop
cmpsl
fsubs
call
cs
in
fwait
pop
jmp
push
jle
add
inc
lds
jne
lret
gs
and
sub
xchg
fists
and
test
add
push
mov
cmp
repz
out
shlb
xlat
aad
arpl
jg
adc
sti
or
mul
jbe
shr
dec
xlat
in
inc
loope
and
jp
scas
cs
into
xlat
lret
mov
pop
fidivl
pop
fimuls
addb
in
imul
pushf
and
das
stos
daa
ja
mov
adc
clc
jo,pt
xchg
iret
pop
inc
mov
fstpl
dec
lea
rorl
std
out
inc
mov
xchg
pusha
lcall
cmc
xor
and
fiaddl
leave
dec
xor
or
mov
xchg
jae
or
inc
jmp
push
pop
fxch
xchg
repz
pop
mov
ret
sbb
enter
push
xor
jae
pop
inc
sbb
xor
testl
insb
or
imul
fcoms
or
ds
mov
xchg
adc
les
adc
jb
lret
xchg
outsl
les
sub
adc
test
aam
mov
popf
mov
sahf
imul
enter
ss
add
mov
dec
jle
lret
push
out
leave
das
dec
push
mov
mov
iret
jb
loop
lea
pop
inc
cmpsb
add
pop
cmp
xchg
int3
sti
adcl
test
mov
inc
repz
mov
push
cmp
out
out
insb
or
mov
loopne
daa
push
jg
fdivrs
into
mov
dec
negl
bound
iret
xchg
outsl
xorl
js
push
cmp
push
leave
pop
mov
pusha
add
fnsave
lahf
xor
fidivrl
xor
ret
adc
sahf
jge
mov
xor
push
cmp
xchg
push
fwait
push
xchg
push
ret
jmp
adcb
out
ss
jo
inc
push
lods
cmp
push
pop
mov
std
xor
xor
xor
shll
leave
inc
push
enter
adc
xor
jle
push
fsubs
adc
stos
sub
inc
add
mov
lea
and
pop
int3
fsubrl
cmp
pusha
into
pusha
lds
push
adc
dec
fbstp
ljmp
loopne
and
ret
in
xchg
and
test
sub
jns
cmp
pop
enter
fldcw
mov
dec
mov
cmp
mov
adc
adc
fisubrs
ljmp
push
testb
in
dec
cmp
push
and
sti
xor
clc
call
std
dec
cltd
repz
pop
inc
pop
pushf
cmp
sti
xor
xor
addr16
imul
and
adc
repz
pop
or
repz
loopne
loop
mov
sub
push
add
les
jb
int
cwtl
je
rcrl
aad
inc
and
pop
aaa
in
cmovl
mov
xchg
hlt
and
pop
push
mov
adc
inc
pusha
push
outsl
loopne
pop
mov
out
cs
xchg
movsb
icebp
mov
sbb
loop
sarb
loop
repnz
lock
ret
mov
rclb
pop
shrl
sub
or
or
add
add
test
jmp
xorb
mov
outsb
add
stos
lret
sti
lret
jmp
sbb
jecxz
and
dec
dec
dec
movsl
incb
ret
hlt
cmpsb
lret
dec
ficoml
sub
incb
xchg
dec
mov
imul
mov
jne
std
cli
fcoml
aad
cmc
shl
mov
outsb
inc
jbe
imul
sbb
and
dec
test
and
pop
xchg
and
xor
pushf
and
pop
sub
lret
mov
push
pop
cmp
cmpsl
data16
pop
push
and
jo
mov
mov
lods
fs
add
out
loop
push
sahf
add
movsl
xor
cld
std
ret
mov
pop
fstpl
mov
lea
sub
mov
stos
daa
es
inc
or
repnz
inc
pop
fs
mov
cmp
push
test
push
inc
and
or
lds
xor
mov
cmp
or
sub
add
mov
clc
add
jge
aas
xchg
adc
pop
fsub
lea
inc
and
scas
mov
mov
xchg
fists
lods
jo
lods
cmp
dec
arpl
jl
shl
adc
fs
inc
sbb
lods
cmp
in
arpl
repz
ret
adcl
loop
and
stc
ret
push
mov
lds
push
test
je
clc
add
and
sub
out
movsb
xchg
dec
cmp
ret
cmp
hlt
xor
mov
cli
add
stos
aas
adc
aaa
lret
lret
popa
aam
or
cmp
jle
xchg
jnp
push
orb
pusha
jns
pop
cmpsb
and
lahf
push
aaa
les
cwtl
inc
shlb
adc
cmp
test
int
scas
stos
ja
xlat
out
fcoml
std
jns
dec
mov
aaa
sarb
lds
daa
mov
mov
andb
xchg
repz
repz
je
cmp
stos
dec
das
jp
jle
xchg
mov
add
add
sahf
push
push
xor
and
push
sti
out
jecxz
mov
mov
or
sbb
dec
mov
subl
enter
in
jns
xorb
xor
outsb
sbbl
sbb
cmpsb
mov
jp
adc
jae
leave
in
mov
das
mov
pop
mov
loopne
and
fists
std
in
test
shrl
sahf
into
xor
outsb
and
mov
lods
stos
into
push
sub
lock
fs
in
pusha
ret
aam
xchg
outsl
pop
movsl
test
daa
jbe
scas
es
push
xor
push
inc
je
sbb
mov
xchg
mov
enter
push
nop
cmpsl
popa
rol
jns
xor
pop
pop
jno
stos
popa
aaa
movsb
jnp
push
add
mov
and
xor
push
xorb
push
and
out
jae
lock
push
pushf
add
jecxz
stos
inc
negl
rcrb
inc
mov
loope
incb
push
push
dec
inc
fwait
fwait
jo
aaa
lods
add
jmp
mov
scas
cmp
jno
and
fbstp
adc
jns
in
push
or
sbb
test
xchg
mov
mov
dec
leave
daa
je
lret
nop
orl
pop
adcb
std
xchg
sbb
nop
nop
test
pop
push
imul
fwait
adc
xchg
push
adc
imul
push
adc
js
loopne
rorl
cmp
xor
iret
or
call
add
pop
lds
xchg
fs
aam
add
repnz
sbb
push
adc
inc
bound
sub
xor
mov
imul
and
mov
outsl
add
leave
lcall
xor
xor
mov
add
inc
xchg
pop
pop
rorl
inc
pop
ret
push
outsl
dec
aam
xchg
dec
cmpsl
nop
adc
mov
movsl
jo
mov
mov
mov
add
dec
cmpsl
rorl
fld
sub
out
out
out
inc
or
or
shl
lds
cmp
dec
in
sbb
push
mov
ficoml
aas
fsubrp
aam
xor
call
cmp
gs
push
insl
pop
fisubs
pop
inc
loope
scas
movsl
iret
aad
sbb
mov
nopl
in
fs
adc
push
inc
data16
mov
cld
cmpsl
add
xor
or
ret
cltd
nop
push
push
fcomp
fsubrl
test
push
mov
jbe
sbb
ss
xlat
je
adcl
es
jbe
push
xchg
push
pop
mov
push
ds
popa
push
ret
sbb
mov
scas
fdivr
xchg
jmp
sahf
ja
cmp
inc
cli
sbb
pop
mov
mov
mov
pop
inc
insl
fs
lret
or
cmp
add
push
add
in
jl
sahf
push
out
stos
lret
das
add
lcall
xor
mov
out
ljmp
mov
pop
jle
popf
lods
popf
add
xor
test
cmp
repnz
adc
mov
jae
sub
std
dec
imul
mov
scas
addl
lcall
bound
and
lret
stos
lret
jns
in
je
inc
adc
test
add
int3
adc
sbb
jns
sub
stos
rcr
dec
lret
add
in
or
inc
jp
push
loopne,pn
sbb
cltd
call
test
addr16
mov
lcall
mov
insl
xor
pusha
cld
inc
scas
cmc
and
xchg
dec
push
pop
or
mov
inc
imulb
push
scas
add
cmp
shlb
imul
dec
or
xchg
adc
mov
or
out
jecxz
icebp
inc
push
or
sub
cs
xorb
inc
aaa
imul
sub
cmp
mov
bound
pop
mov
mov
aas
shrb
dec
push
das
jo
fucomp
mov
xchg
lret
mov
push
and
jb
push
inc
dec
lods
mov
xchg
out
scas
insb
mov
mov
cmp
scas
sub
out
jne
xchg
fs
mov
das
adc
aad
dec
dec
sbb
shlb
push
pop
fwait
inc
ret
movzwl
pop
push
push
inc
dec
sahf
lods
and
incb
and
jns
xorl
sub
push
std
jmp
pop
ja
mul
fmuls
cmpsl
dec
mov
mov
hlt
push
int3
ja
scas
xchg
mov
fdiv
or
mov
jmp
jg
cmp
pop
divl
cli
jns
cli
xchg
lcall
pop
hlt
sub
mov
test
dec
outsl
push
xchg
mov
push
sbb
daa
dec
inc
mov
add
or
jg
jnp
enter
jno
push
xchg
adc
int3
mov
mov
mov
pop
jge
pop
addl
outsl
cmp
and
push
and
inc
lea
jns
rcrb
jo
inc
test
pusha
sahf
mov
push
insb
mov
or
out
mov
out
mov
mov
or
roll
mov
fwait
test
lahf
lds
adc
jno
mov
pushf
or
mov
mov
scas
add
out
mov
dec
and
jae
das
mov
cs
test
xchg
lds
inc
jo
mov
mov
test
inc
mov
repnz
jle
mov
out
cmp
mov
xchg
adc
data16
jmp
mov
or
xlat
aaa
mov
shll
sub
adc
aad
or
in
mov
daa
out
sbb
sbb
pop
push
lahf
es
jecxz
out
or
loopne
cwtl
sub
lret
mov
notb
lea
adc
sbbl
mov
ret
jmp
cltd
shl
cmpsb
daa
jmp
out
fcoms
cli
outsb
pop
ds
aad
or
call
xchg
rclb
mov
test
jae
test
lret
inc
jecxz,pn
add
out
jno
xchg
sbb
aam
mov
push
push
fwait
in
inc
cltd
cwtl
push
pop
cmpsb
insl
jmp
jne
rclb
xchg
and
test
and
add
repnz
sti
jecxz
xchg
mov
dec
in
cs
ja
cld
lret
dec
ss
adc
in
sub
inc
adc
in
test
or
loopne
jmp
mov
sarl
mov
push
jno
lock
or
loope
subb
push
notl
adc
inc
dec
cwtl
shl
movsb
in
scas
movb
movsb
pop
lcall
cmp
or
mov
xchg
sub
in
jnp
mov
push
call
cs
mov
dec
mov
bound
sti
test
mov
bound
xor
xchg
stc
pop
pop
inc
insb
shll
adc
lret
pop
or
adc
lods
call
lds
mov
test
fnstenv
outsb
data16
ficompl
xor
rclb
sbb
negl
xchg
xchg
inc
sub
mov
lahf
ljmp
sub
addr16
pushf
inc
fstl
and
sti
jmp
cmovl
cmpsl
push
mov
jg
xchg
loop
dec
add
mov
pop
xchg
dec
in
or
xchg
ret
cs
push
icebp
dec
fwait
jbe
movsb
push
shll
sti
loope
mov
push
loope
rolb
xchg
aas
jle
int
call
sub
pcmpeqb
cmp
add
enter
dec
jmp
and
lret
xchg
pop
int
shlb
cs
mov
int3
jns
dec
cmp
std
sbb
sbb
lret
mov
repnz
int
lahf
add
mov
sub
jecxz
insl
push
xchg
rcr
dec
fwait
and
pop
shll
jle
test
sub
sbb
in
mov
scas
outsb
jp
ljmp
and
jo
std
aad
dec
mov
ds
xchg
sti
cwtl
dec
rorb
xchg
repz
sbb
arpl
adc
icebp
fsubr
adc
inc
test
push
aas
sarb
mov
pop
mov
gs
pop
xchg
fmulp
dec
and
xorl
int3
dec
jae
shll
xchg
lock
sub
iret
popa
pushf
arpl
xor
pop
fdivs
dec
xor
lret
fnstcw
cmc
jecxz
movsb
inc
lods
ljmp
rcrl
xor
xchg
stos
or
xchg
mov
xchg
es
fs
daa
ret
jp
leave
mov
inc
jae
inc
ds
mov
ja
arpl
cld
in
jmp
pop
loope
and
test
call
jae
jge
push
dec
rcll
sub
subb
mov
lock
pop
jle
data16
jbe
sbb
push
movsb
cmp
outsl
in
ljmp
inc
shrb
outsb
flds
das
fsubrl
int3
cmpsl
out
scas
fstpl
lds
inc
mov
or
pop
xor
jp
pop
aad
and
into
inc
dec
out
xorb
shrb
and
pop
cli
adc
inc
test
scas
mov
jae
jnp
xor
mov
push
cmp
popa
leave
push
mov
xchg
out
pop
cmp
xor
out
or
mov
mov
es
int
test
adc
mov
jns
xlat
push
xorb
std
push
and
xchg
jns
je
movsb
cmp
lret
sub
leave
lret
mov
inc
adc
pop
adc
dec
mov
loop
lods
jns
dec
gs
aas
out
movsl
mov
aas
ret
rcll
push
mov
sarb
dec
mulb
or
pushf
fstpl
push
shrl
xchg
ja
sbb
and
inc
mov
roll
xchg
pushf
jmp
dec
lds
mov
xor
sbb
arpl
popf
xchg
dec
icebp
xchg
push
jae
add
cld
aaa
sar
push
push
push
push
and
int
cmp
sub
je
mov
inc
push
icebp
add
js
add
pop
cli
mov
mov
add
aam
subl
xchg
mov
mov
dec
mov
mov
ss
mov
mov
stc
mov
addr16
inc
mov
xor
pop
mov
and
dec
mov
lds
mov
lds
mov
mov
xor
int
sbb
cli
pop
into
sbb
or
lcall
cltd
popa
or
cmpsb
jle
cmp
shrl
xor
jg
iret
int
es
or
rclb
lret
cmpsb
jl
jno
inc
lret
in
stc
pop
outsl
jne
outsl
shrb
out
dec
sbb
pinsrw
mov
movsb
inc
inc
sahf
mov
pop
xlat
sbb
lcall
mov
ret
add
xchg
shlb
pop
inc
mov
mov
arpl
ds
sbb
adc
imul
out
loopne
mov
addr16
mov
and
push
or
pop
imul
dec
inc
repnz
adc
lods
iret
loope
repz
pusha
mov
cmpsb
mov
xchg
jmp
pop
or
ficompl
xchg
add
cmpsb
ljmp
rcll
lea
scas
fldenv
or
repz
es
dec
pop
scas
add
or
adc
and
fldl
mov
push
hlt
mov
repnz
subl
lods
jae
inc
arpl
lret
xchg
adc
lahf
out
insb
inc
stc
shl
inc
and
insb
mov
pop
fs
loopne
cmpsb
fimuls
cwtl
sub
fwait
loop
push
hlt
jo
adc
mov
ja
jecxz
das
imul
insb
pop
mov
mov
pop
subl
sbb
call
mov
mov
outsl
insl
push
aam
jecxz
out
ffreep
test
mov
jae
in
mov
je
xor
adc
add
rclb
mov
adc
icebp
imul
or
lea
shlb
test
cmp
mov
nop
in
xchg
insb
bnd
add
push
loopne
fistps
xor
push
adc
in
test
mov
rclb
add
mov
xor
std
sbb
mov
mov
sbb
push
mov
adc
arpl
cmp
cmp
lock
outsl
cmc
imul
xchg
stos
xchg
dec
es
shl
add
fmulp
sub
icebp
das
add
fucomi
pop
mov
sbb
cltd
in
addr16
popa
outsb
dec
or
mov
jge
lock
in
cld
mov
dec
xchg
int3
mov
add
cli
pop
push
scas
mov
mov
xor
lret
rclb
adc
outsb
push
inc
push
and
jns
idivl
inc
stc
pushf
add
ljmp
cs
fbld
pop
test
mov
out
rcll
pop
addl
adc
sahf
jb
push
mov
in
rol
stos
inc
or
or
lock
lret
and
faddl
push
cli
sbb
decl
inc
lcall
or
pop
sti
sahf
jbe
or
lret
sub
push
out
mov
into
cmp
jl
js
loop
jb
aad
pop
movsb
popf
sbb
nop
jnp
xchg
scas
cltd
xchg
mov
pushf
out
cwtl
cltd
mov
lahf
out
pop
in
sub
stc
push
push
xchg
sub
outsb
filds
sbb
xlat
adc
xchg
fisubrs
push
adc
cmp
and
std
pop
jb
xchg
outsb
call
test
ret
std
or
aas
js
or
decl
mov
in
push
mov
test
inc
add
mov
scas
push
xchg
cmpsb
fcomip
hlt
sbbb
cltd
mov
mov
adc
rcrb
pop
xrelease
push
jne
adc
out
int
and
fisubrs
xchg
cmpsw
pop
xchg
inc
loop
push
aad
je
addb
jle
sub
int
psubusw
je
adc
or
cld
icebp
lcall
jbe
aam
push
repnz
cli
or
leave
loop
jg
jp
and
lret
movsb
mov
and
ror
and
aas
dec
sbb
xchg
lods
test
mov
or
fdivrl
pop
cmp
addl
les
mov
push
mov
adc
jp
pop
idivl
mov
int3
addb
mov
add
push
fcompl
lcall
mov
jb
mov
sub
xor
pop
mov
int3
call
stc
push
adc
pusha
aaa
dec
cmp
jns
sbb
xchg
push
movsb
lahf
shr
mov
stos
fdivs
xchg
lods
cmpsl
scas
mov
lods
test
cmp
out
cmp
dec
jno
xor
xor
push
stos
subb
gs
inc
in
xor
jp
data16
cwtl
cli
jbe
pop
and
add
scas
test
ljmp
mov
jne
dec
mov
cmp
fs
xor
cmp
inc
lds
popf
jo
push
ret
inc
or
or
rclb
cmp
fs
popa
fbld
xlat
aaa
inc
xchg
adc
mov
sti
les
rcrl
jmp
push
sahf
in
loope
cmp
iret
sub
mov
test
xor
cmp
loopne
ljmp
xor
pop
xor
mov
dec
and
dec
int
rorl
add
out
xor
sbb
mov
lock
mov
loopne
sbb
pop
dec
adc
sbb
sub
sahf
popf
sub
mov
lret
push
xchg
jb
icebp
inc
notl
and
pop
and
xchg
dec
mov
xorb
daa
jp
daa
in
loopne
pop
and
pop
cmc
sub
jb
jbe
scas
mov
repz
adc
push
and
enter
jecxz
aaa
dec
jecxz
sub
movsl
sbb
push
inc
fidivs
cltd
stc
mov
push
test
test
xorl
and
adc
cwtl
cmp
inc
push
sub
push
ret
pop
add
jns
xor
jge
rcrl
loope
cwtl
cmp
and
push
test
add
fwait
movsl
xor
push
dec
rorb
xchg
stc
or
outsl
repnz
xchg
adc
adcl
pop
rorl
cli
andnps
sbb
test
les
pop
es
mov
inc
fsubr
dec
les
mov
ds
push
jp
pop
fs
jo
adc
call
sub
xchg
pushl
cwtl
cmp
mov
fwait
cwtl
imul
jns
pop
outsb
call
pop
xchg
sub
outsl
shrb
push
adc
adc
push
jno
adc
jo
movsl
sbb
adc
movsl
and
addr16
aad
aas
pushf
xchg
roll
mov
pop
mov
adc
jns
mov
mov
repnz
jbe
fstpl
push
mov
inc
add
pop
mov
pushl
std
mov
xor
fcoml
repnz
mov
clc
int
hlt
adc
fisttpl
fs
fmull
into
add
popa
mov
mov
mov
loope
sub
cmp
sub
or
fidivl
sbb
cmp
mov
adc
andl
rcr
sub
cmc
jmp
jecxz
ljmp
xchg
jecxz
mov
jae
arpl
fidivs
arpl
fs
push
imul
stos
sbb
jecxz
mov
cmp
js
sti
in
sbb
imul
ljmp
int
pop
xor
pop
cwtl
nop
fadds
and
and
int3
rorl
mov
rolb
addr16
push
lret
outsb
xor
leave
ss
inc
pop
pop
test
sub
sbbb
xchg
int
xor
sarl
mov
iret
adc
and
add
xchg
mov
data16
and
cs
mov
push
fimuls
callw
mov
mov
pop
lock
ss
cmp
enter
scas
or
jno
jmp
call
imul
pop
ret
xor
inc
and
fwait
adc
add
cmc
loopne
pop
add
jbe
pusha
jo
or
xchg
xor
gs
ret
repnz
popa
sbb
pop
mov
mov
int3
jg
adc
loope
push
ficomps
scas
movsb
dec
icebp
mov
xchg
inc
jl
xchg
xor
das
ret
xor
cld
pop
addl
cltd
inc
add
out
mov
mov
dec
dec
test
sub
inc
out
and
incb
clc
xlat
cmp
imul
cmp
sub
xlat
sbb
or
xor
fnstenv
fnstcw
fldenv
xchg
gs
movsb
push
jp
mov
xor
sub
sbb
xchg
mov
jbe
and
push
sbb
mov
cmp
icebp
int
sub
lret
popf
movsl
movsb
xchg
movsb
jns
dec
sub
popl
aam
and
hlt
pop
push
dec
out
and
or
lret
adc
js
pop
test
ja
push
fsubl
push
cmp
xor
mov
aad
les
cmc
jae
out
loopne
ret
aad
jl
sbb
and
jnp
je
adc
mov
inc
popa
inc
daa
xchg
add
jecxz
jno
andb
sub
js
dec
arpl
push
out
jb
adc
sub
imul
ss
lret
or
add
stos
xchg
sub
jge
and
in
iret
sub
push
and
hlt
insl
outsl
dec
out
sub
stc
mov
push
mov
popf
stos
pop
dec
ret
lcall
xchg
mov
andl
repz
loope
imull
dec
insb
loope
jge
mov
dec
pop
ret
and
stos
cmpsl
cmp
add
push
loop
or
push
mov
push
adc
xor
imul
or
pop
jge
insl
adc
pop
inc
pop
outsb
mov
sahf
scas
repz
leave
ret
aaa
jne
arpl
addl
xlat
mov
out
lret
pop
ret
dec
and
adc
pop
pop
sub
les
pop
inc
insb
pop
mov
out
adc
cmp
mov
xchg
add
in
dec
fiadds
in
sbb
push
cltd
shlb
cmpsb
cmpsl
das
inc
call
push
imul
aad
cmp
mov
rcll
cmp
mov
push
push
fisubl
andl
push
mov
fdivrs
aaa
ss
lret
repnz
scas
iret
in
pop
ds
xor
out
push
jbe
mov
jecxz
adc
pop
mov
adc
popa
and
fcoms
insl
and
jo
add
dec
push
xor
pop
lods
mov
sbb
cmp
pop
push
jae
pop
shlb
pushf
dec
daa
into
neg
mov
clc
idivl
fwait
sub
mov
clc
xchg
xchg
jle
sarb
inc
adc
sbb
inc
mov
lea
pushf
xchg
cmc
xor
aaa
inc
dec
test
js
imul
out
jp
push
out
xor
mov
sub
inc
jns
cmp
or
push
xorl
shll
xchg
ret
or
fstpt
leave
in
and
dec
adc
and
imul
mov
mov
push
insl
inc
icebp
lcall
jp
jecxz
pop
popf
js
pop
dec
out
and
scas
sbb
lahf
inc
lret
xor
aaa
cmp
jmp
lock
inc
clc
mov
es
mov
flds
leave
rclb
aad
jbe
jb
xor
cli
loopne
fwait
das
mov
es
mov
ds
test
cs
inc
pop
out
mov
adc
lock
mov
pop
lock
loope
lcall
dec
and
mov
in
mov
sbb
xchg
fimull
shrl
sub
aad
push
cmp
cmp
daa
lock
inc
shrl
fisttpl
mov
cmp
dec
lea
aas
mov
stos
add
adc
aad
push
jbe
or
add
or
xchg
pop
cmc
sahf
sbb
lahf
paddusw
icebp
mov
lods
aam
push
add
sub
add
je
dec
fwait
lahf
inc
fdivr
push
or
cmpb
fimull
inc
cmpsb
clc
and
pop
int3
shlb
rcll
inc
out
jmp
jb
out
xchg
sub
sbb
pop
mov
jbe
ja
pop
add
fwait
ljmp
xchg
lea
shl
mov
add
ljmp
pushf
xchg
pcmpgtb
adc
rclb
lock
mov
xlat
mov
pop
aas
mov
mov
or
divb
push
push
gs
xor
add
sub
jl
xchg
test
xchg
push
icebp
scas
push
inc
loop
push
test
imul
push
or
imul
call
adc
jb
mov
test
mov
pop
cmp
xchg
pop
mov
int
sti
jne
pop
adc
xchg
stos
xor
sahf
out
jecxz
mov
sar
jle
test
inc
or
pop
sbb
jo
mov
and
xchg
in
sbb
test
sub
pusha
nop
lahf
or
imulb
mov
sbbb
scas
push
sub
mull
shll
pop
leave
push
bound
sti
inc
sti
lretw
leave
xorl
and
inc
or
xor
adc
aam
mov
pop
jnp
xor
loopne
add
mov
lock
push
rorl
push
les
repz
mov
fidivrl
cltd
faddp
mov
bound
cmp
push
dec
adc
or
clc
lahf
mov
fiadds
das
nop
ja
mov
mov
and
movsl
out
and
or
push
adc
movsb
insl
test
xor
or
je
inc
push
push
xor
mov
jg
call
or
mov
jbe
loopne
leave
test
mov
jo
or
inc
mov
xor
cmp
test
mov
jg
sbb
pop
adc
js
aaa
adc
cmp
push
lock
dec
or
dec
cwtl
lcall
out
decl
sarl
xlat
xchg
xchg
out
repnz
ljmp
xchg
sahf
sbb
fidivl
jp
lods
rclb
add
stos
or
les
mov
inc
dec
sub
and
sub
test
out
push
xchg
cmp
js
cmp
int3
ds
cmp
jae
jle
cli
call
jle
xor
fmull
sahf
or
push
fdiv
insb
outsl
or
xchg
dec
icebp
das
test
call
and
add
mov
aad
xchg
ficoms
mov
repnz
xchg
mov
add
les
pop
test
xchg
lods
andl
data16
xchg
pop
inc
and
mov
xor
adc
div
pop
scas
sub
xor
imul
xor
iret
mov
xor
jnp
call
in
ficoms
or
cmovae
loopne
nop
in
push
sahf
inc
sub
xchg
popa
ds
test
imul
stos
push
imul
popa
fsts
xor
ds
xor
dec
fildl
mov
xchg
adc
push
or
mov
pop
setl
pop
cmpps
fmulp
adc
fcompl
int
jg
in
mov
pop
flds
lcall
mov
sbbb
stc
add
mov
pop
je
sarl
insb
push
dec
sbb
dec
xchg
fstpt
mov
nop
mov
add
mov
insl
leave
lret
mov
fnstcw
push
fyl2xp1
adcl
and
push
daa
addr16
pusha
mov
out
insb
mov
lods
pop
shl
shrb
rclb
movsl
notb
dec
dec
mov
mov
push
xchg
aam
insb
push
cmp
cmp
imul
je
push
pop
lcall
sub
add
xor
mov
mov
mov
testl
gs
cmp
cltd
sti
roll
cmp
aas
int
cmp
add
mov
push
loopne
push
test
and
adcb
test
mov
fwait
adc
xor
fwait
mov
int
xor
push
mov
cmp
ljmp
stc
and
add
div
pop
xchg
mov
std
int3
inc
aam
lret
ficoms
push
loop
add
test
dec
lea
pusha
enter
gs
mov
fisttps
pop
pop
add
pop
mov
sbb
gs
sti
sub
lcall
ret
mov
into
push
mov
out
mov
fs
jmp
clc
pop
fcmovb
pop
lds
push
inc
scas
adc
divb
sahf
rcl
or
push
push
mov
cs
lret
aas
jg
int3
push
add
stc
jbe
xchg
push
xchg
sub
mov
jp
push
std
ret
mov
xor
lret
sarl
test
jecxz
xor
add
cs
cmp
out
scas
ja
mov
ljmp
xchg
jg
jbe
sub
sbb
xchg
add
in
xor
mov
inc
data16
inc
inc
lods
jecxz
out
ja
jns
xchg
popf
cmp
bound
or
nop
shr
repnz
fstl
or
fiadds
pop
out
adc
movsb
fisubrl
push
jg
sbb
xchg
mov
mov
icebp
pop
push
sbb
arpl
xor
rclb
xchg
pop
and
in
in
outsb
and
xor
add
fstl
movsl
jg
or
adc
movsl
push
dec
mov
push
xlat
or
out
xchg
stos
lds
pop
aaa
xchg
or
push
fsubs
cmpsl
ja
xchg
lret
stos
or
push
jb
shl
inc
cmp
add
mov
shrb
mov
fmull
addr16
xorb
pop
sahf
xchg
push
paddd
dec
cltd
aas
push
lret
mov
push
cmp
cmp
adcb
push
ret
xchg
fidivrl
push
mov
aam
add
addb
dec
pop
in
out
movsl
dec
leave
xchg
sub
adc
jg
pop
xchg
lea
sub
sti
fcomp
and
mov
xchg
lahf
push
ret
outsl
mov
lods
jecxz
dec
das
xor
aaa
cwtl
loop
fsubrp
mov
js
dec
dec
or
inc
ljmp
sbb
jo
cmp
sub
jecxz
mov
mov
mov
lods
push
mov
aad
or
jb
int
stc
aad
cli
mov
push
xchg
lret
mov
popa
imulb
add
movsl
icebp
dec
pop
outsb
bound
xchg
mov
mov
lds
mov
xchg
xchg
dec
lret
into
xchg
pusha
mov
add
notl
sub
mov
pop
sub
aas
pusha
int
insb
sbb
sub
in
out
inc
rol
jo
adc
push
cmc
clc
loope
inc
ds
out
jno
aam
cli
dec
repz
pop
adc
push
rcrb
inc
pop
mov
cmp
aad
scas
xor
aad
or
fwait
jle
xchg
scas
mov
push
test
mov
cwtl
out
push
mov
mov
pop
int
imul
icebp
inc
xchg
sti
adc
push
mov
inc
popf
xchg
test
and
das
xlat
es
push
mov
in
int3
fisttpl
mov
fnsave
loope
stc
addb
mov
aam
inc
jo
add
fsts
in
js
lahf
jp
int
mov
fisubrl
repnz
in
xor
push
iret
addl
dec
insb
add
scas
cs
dec
push
lret
scas
icebp
xchg
pushf
dec
stos
pop
cmpl
and
lret
insl
mov
push
fmull
shlb
sbb
xchg
xchg
mov
pop
fnsave
jecxz
cs
jle
mov
or
cmp
lret
in
dec
adc
push
adc
pop
xchg
es
xchg
inc
pop
rclb
popa
sahf
jo
test
push
and
adc
fldt
dec
push
pusha
mov
arpl
lods
sti
push
test
rolb
dec
cpuid
mov
cmp
fldcw
icebp
inc
lahf
xor
mov
jle
dec
cmp
push
sub
push
lret
lods
hlt
leave
mov
std
dec
sub
mov
push
shll
adc
pop
aaa
mov
icebp
lret
add
adc
rolb
iret
pop
pop
addr16
xor
out
push
jle
repnz
pop
outsb
jno
xor
mov
adc
js
ljmp
aas
xchg
add
mov
ret
xorl
add
fcomp
imul
pop
push
loope
push
adc
jle
xchg
dec
fidivrl
jecxz
push
and
xchg
aad
sbb
addr16
cmp
pushl
xchg
cs
sti
aad
mov
sbb
scas
dec
jno
outsb
push
cwtl
xor
movsb
mov
sbb
repnz
push
orl
sub
outsl
inc
fiaddl
push
or
mov
outsb
testb
cltd
dec
and
pop
shr
cmp
add
xchg
or
jns
arpl
pushf
dec
sbb
mov
jo
shll
pop
test
in
test
mov
push
and
or
xor
insl
in
das
adc
loop
sub
sahf
push
loope
mov
test
dec
daa
inc
or
vaddps
call
test
or
cld
fstpt
and
mov
aam
arpl
andb
cmp
ret
pop
aas
jl
push
lods
push
or
sbb
push
and
lock
xor
xchg
pusha
or
mov
mov
or
in
cmp
out
cmpsb
mov
pop
lret
dec
lret
sub
movsb
xor
test
shlb
clc
push
pop
and
es
mov
adc
enter
xor
jbe
pop
loop
rorb
mov
aad
ja
jge
dec
jp
out
daa
inc
add
icebp
jnp
popf
inc
loope
inc
mov
fwait
cmovae
sbb
and
jae
ja
fimull
adc
and
jns
cmpsb
mov
lods
sub
adcb
inc
dec
popa
pop
and
repz
push
scas
push
aas
fisttpll
adc
ja
cmp
std
stos
sbb
fwait
adc
sbb
or
or
pop
cs
iret
push
push
fcomi
jg
sbb
cmpb
roll
fadds
hlt
scas
xchg
in
mov
jo
scas
add
nop
pop
mov
cli
test
dec
xlat
sub
ja
xchg
lahf
mov
int3
adc
sti
mov
lock
in
in
hlt
into
test
xchg
cmpsb
rorb
int
dec
and
inc
enter
bound
mov
test
loope
and
push
mov
mov
dec
push
add
dec
popf
fs
fdivrs
cmpsl
icebp
fs
repnz
dec
lods
cmp
mov
leave
xor
inc
imul
pop
pop
and
xor
test
int
mov
jecxz
pusha
imul
sub
push
pop
and
adc
rcll
es
push
inc
fcom
push
movsb
repnz
stos
arpl
clc
push
hlt
in
fisubl
mov
push
ret
mov
or
inc
or
fisubrl
xor
cmp
mov
mov
cli
mov
or
sub
nop
mov
int
inc
sahf
test
int
mov
subb
lret
inc
js
dec
lods
jle
insl
std
pop
jo
dec
mov
mov
sbb
jbe
cld
int
adc
outsl
fs
aaa
or
cmc
mov
aas
inc
sbb
xor
orb
mov
xchg
mov
testb
jl
enter
mov
sbb
andb
fisttps
jne
imul
stos
cmp
xlat
test
mov
jge
hlt
inc
notl
in
add
xchg
sbb
add
jle
gs
outsl
ret
sti
mov
jnp
outsl
mov
lcall
mov
sbb
jno
cltd
call
push
add
adc
inc
jne
mov
mov
or
hlt
xchg
sub
shl
mulb
lea
xor
test
or
out
add
push
lret
daa
pop
mov
sbb
cld
pop
mov
dec
and
inc
push
test
call
in
and
pop
lods
sarb
mov
adc
gs
rolb
push
adc
pop
mov
into
xor
lods
jl
enter
jmp
sub
cltd
jnp
rcrl
andb
std
sbb
add
testl
mov
or
xchg
outsb
in
adc
pop
inc
mov
xchg
push
push
sbb
pop
sub
out
xlat
outsl
repz
jno
iret
ljmp
inc
sti
jnp
mov
adc
mov
mov
pop
and
xchg
aaa
xchg
in
add
or
push
jo
stc
test
dec
and
cwtl
stos
stos
and
sub
test
mov
fsubr
jg
push
and
adc
hlt
sbb
mov
jbe
mov
mov
jbe
xor
aas
in
xchg
sbb
push
add
out
xchg
pop
insb
cmpsb
add
in
popf
jae
lock
stos
mov
mov
mov
cmp
dec
jmp
mov
pop
adc
subb
inc
int
dec
sbb
insb
insb
jnp
adc
mov
test
xchg
cs
lea
push
out
inc
popa
inc
fimull
cmp
xchg
add
ljmp
pop
inc
jne
lea
pop
test
cli
sbb
add
inc
aad
scas
int3
xchg
mov
cwtl
push
xchg
or
jnp
cltd
fildll
push
push
loope
dec
lret
cmp
pop
outsb
cmp
inc
mov
lock
inc
and
popf
in
and
or
xchg
add
inc
std
jge
cli
inc
arpl
and
mov
fnstcw
adc
pop
popf
mov
into
cmc
mov
mov
hlt
jecxz
lret
jle
pop
aaa
sbb
cmp
inc
xchg
pop
cmp
cmp
aad
ret
cltd
hlt
cmp
or
dec
mov
bound
test
shlb
es
rcrl
lds
and
mov
scas
mov
dec
sub
sub
movsb
adc
fwait
mov
pop
imul
adc
negb
xchg
dec
ds
sub
cmp
mov
pop
cmp
jne
sub
je
popa
mov
add
sti
mov
pop
sti
mov
lods
lods
pushf
push
jle
in
push
xchg
jb
add
decl
mov
fimuls
sbbl
add
aas
mov
stos
jmp
out
mov
push
push
lds
cmp
xor
mov
out
pop
push
sub
scas
pop
mov
es
jae
pop
adc
pop
mov
jp
cltd
sahf
push
push
adc
leave
push
dec
inc
mov
repz
or
pop
adc
lea
lahf
xchg
cmpsb
and
lahf
sahf
idivl
lret
push
sbb
xchg
ljmp
mov
xor
jne
nop
out
mov
mov
shld
in
rolb
xchg
hlt
test
xor
xor
pushf
push
fs
jns
loope
xor
arpl
cmp
push
ret
add
lcall
and
aam
fmuls
push
xchg
test
add
mov
push
cmp
scas
xor
jo
scas
scas
rolb
fwait
inc
aaa
mov
sarl
cmovge
scas
jp
data16
mov
fs
xchg
add
inc
sub
mov
pop
lret
jbe
scas
into
cmp
mov
xor
mov
in
mov
adc
mov
or
adc
adc
out
repz
push
loopnew
and
inc
adc
lea
lods
cmc
mov
mov
inc
ret
subb
xchg
mov
gs
in
push
pop
int3
sub
add
and
sbb
test
imul
or
adc
push
mov
push
jns
ss
lret
add
jno
mov
loope
jno
iret
pushf
popf
repz
insb
xchg
sti
orb
movsb
lods
pop
and
jb
push
mov
mov
cmp
or
repz
imull
jns
mov
imul
mov
add
out
shlb
mov
insb
jle
xchg
sbb
sbb
pop
sbb
and
push
sub
scas
scas
dec
add
imul
cld
push
mov
mov
cmpsl
adc
in
cwtl
adc
mov
inc
outsb
outsb
xor
mov
or
push
inc
jecxz
lea
add
fcomp
pop
push
dec
cs
mov
jmp
cmc
or
mov
mov
fbld
iret
cmp
loop
bound
bound
scas
cmp
pop
inc
dec
jge
clc
mov
cmpl
or
push
insw
pop
icebp
mov
nop
lret
xchg
out
jno
mov
cmp
mov
add
in
mov
pop
cli
mov
sbb
clc
hlt
inc
inc
xchg
fisttps
add
ret
xlat
sub
push
out
or
shl
push
pop
rol
mov
divb
xchg
jae
shrl
push
pop
cmc
inc
push
push
out
ja
xor
push
mov
pop
rcr
rclb
fstpl
mov
and
add
adc
lods
ds
xchg
rcrb
push
mov
jecxz
data16
jge
dec
mov
adc
dec
sbb
loope
mov
or
int
inc
nop
sub
lods
ret
xchg
and
cmp
gs
sbb
add
fldt
mov
insl
xor
mov
mov
das
imul
and
stos
outsb
mov
mov
ret
push
insb
mov
movsl
inc
mov
jg
enter
push
mov
xchg
cmpb
xor
lahf
xchg
jecxz
fiaddl
rcll
xchg
add
fildll
push
xchg
clc
push
aad
sub
ror
push
ret
sahf
in
or
bound
fldt
and
aas
xchg
loopne
pop
scas
sub
mov
inc
and
inc
inc
hlt
dec
xchg
jne
mov
mov
flds
add
mov
adc
jnp
xchg
subb
les
push
je
lahf
rcrb
loop
test
popa
in
repnz
push
pop
gs
or
xchg
xchg
dec
aas
xor
out
push
je
bound
pop
xchg
xor
mov
out
int3
repnz
jbe
int3
faddl
jae
jo
fisttpll
pop
out
in
cmc
pop
sbb
fwait
mov
push
mov
lret
pop
or
imul
in
shrb
mov
pop
insb
cmpsl
ret
cmc
imul
and
pusha
pop
addr16
xor
inc
mov
cli
and
mov
inc
mov
push
xor
sbb
push
mov
push
cmp
dec
lcall
lea
mov
mov
adc
out
test
pop
enter
xchg
sub
cltd
pushf
lods
sahf
mov
ret
sub
mov
mov
or
fwait
and
addr16
outsb
into
mov
mov
push
pop
add
sub
add
orl
push
add
test
inc
mov
jns
fisttpll
in
jl
daa
clc
int3
mov
and
into
scas
sbb
clc
add
xchg
pop
dec
jbe
scas
inc
jno
xlat
in
mov
sub
sti
test
je
lahf
aad
jb
iret
scas
out
xor
and
pop
xchg
movsl
sbb
mov
jecxz
jbe,pt
pop
mov
adc
xchg
add
jo
jg
fistpll
dec
sbb
rorl
test
dec
sub
addb
or
mov
shrl
mov
or
mov
mov
js
gs
mov
mov
pushf
push
pop
pop
out
sub
or
enter
mov
out
dec
adcl
pop
mov
push
pusha
mov
lret
inc
xor
int
dec
dec
jne
mov
ljmp
dec
adc
and
cld
fidivl
inc
sahf
cmp
inc
mov
adc
mov
inc
into
les
decb
cltd
je
fsubrs
arpl
test
ja
in
insl
ffreep
sbb
pop
inc
js
andb
add
fld
and
pusha
push
cltd
outsb
fildll
push
call
mov
jp
gs
jecxz
push
fwait
push
adc
dec
mov
test
sub
inc
insl
test
repnz
call
or
or
xor
popa
jns
adc
cld
pusha
out
sub
cmp
out
hlt
or
mov
push
mov
negl
rclb
jmp
push
and
aas
insl
jnp
out
lods
movsl
test
cmp
sahf
insb
inc
mov
dec
rclb
in
sub
xchg
xchg
jp
js
outsl
mov
rorl
popa
fiaddl
cmpsl
or
testl
and
mov
inc
out
or
mov
push
aas
addr16
pop
inc
in
fldenv
int3
test
sti
daa
popf
and
or
sti
aam
fldl
push
sarb
inc
aam
dec
push
pop
mov
jo
push
nop
jo
or
inc
fidivl
pop
movswl
add
pop
aaa
xchg
leave
enter
mov
jmp
dec
dec
cmp
dec
dec
decl
data16
stc
repnz
int3
add
cmp
or
jp
mov
inc
xchg
adc
ficompl
popf
mov
sbb
imulb
idivb
nop
ret
imul
pop
xchg
aaa
pop
mov
jnp
addr16
cmp
xor
push
sub
in
leave
icebp
push
out
xchg
adc
jl
mov
push
out
jl
cmp
iret
repz
mov
addr16
xchg
adc
in
call
nop
sbb
xor
fcompl
push
insb
aad
mov
sub
arpl
vpsubd
jne
lret
ds
mov
out
hlt
cmp
fnstsw
repz
mov
in
lcall
push
pop
or
jg
mov
cmp
mov
in
bound
and
dec
in
jecxz
or
sar
xchg
xor
das
lret
pop
adc
test
dec
mov
adc
mov
je
fwait
push
inc
cmpsl
jnp
push
in
mov
adc
cmp
std
aam
inc
mov
popa
xorl
and
ja
pop
sahf
cmp
imul
pop
aad
mov
into
pop
sub
fs
cld
stc
movsl
mov
ss
or
rolb
jp
into
sub
and
call
bound
mov
xchg
movsb
cmp
jns
mov
or
pop
inc
inc
inc
xor
xchg
add
notb
into
cmp
test
sub
jecxz
push
cwtl
jl
or
or
inc
push
sahf
jnp
xchg
sarb
out
test
data16
and
pop
jg
aas
loopne
mov
popl
sbb
int
int3
mov
mov
out
out
scas
sbb
inc
jne
std
pop
inc
mov
movsb
inc
pop
pop
pop
mov
fs
inc
and
imul
outsl
push
lods
and
jecxz
test
cs
les
in
std
scas
sub
cmpsl
adc
mov
adc
mov
icebp
ds
and
xor
pushf
popa
pop
dec
bnd
mov
in
fsubrl
cwtl
fnstcw
insb
push
pop
stc
cmp
mov
sbb
test
push
cmpsb
clc
jp
pop
ss
and
dec
dec
ljmp
xchg
loop
out
neg
push
cwtl
push
lahf
cmpsl
sub
outsl
les
fidivs
cmp
jns
or
jp
adc
adc
pop
and
sub
pop
and
cwtl
sub
jl
and
in
lea
ret
pop
dec
pop
fwait
repz
mov
lea
lea
rorl
ret
pop
les
mov
push
pause
mov
push
push
in
pop
mov
inc
lret
or
add
xor
scas
inc
add
adc
ljmp
fwait
inc
jl
mov
jb
nop
xorb
test
xor
jb
add
and
movsl
adc
jecxz
jbe
mov
mov
outsb
jmp
call
jmp
cmp
mov
loope
pop
scas
lods
loopne
stc
xchg
movsl
pop
push
pop
js
es
enter
mov
aaa
test
dec
stc
add
repz
jecxz
fisubs
cs
lock
cmp
add
add
movb
imul
pop
test
mov
in
es
sub
out
push
mov
mov
or
jge
push
shll
push
add
pop
push
sub
flds
lret
movsl
inc
in
in
inc
mov
into
inc
xor
lods
cmpsb
add
int3
lds
repnz
setl
mov
push
fwait
orl
or
push
stos
das
nop
mov
jg
dec
and
sarb
lret
xchg
in
notl
mov
icebp
dec
cmp
mov
jns
addr16
sbb
dec
fwait
xchg
ja
sub
xchg
cmpsb
pop
jle
outsl
jo
call
out
mov
fnstsw
cmc
adc
aas
movsb
test
stos
jns
xor
mov
ret
cmp
pop
ret
subb
ja
jecxz
aad
mov
sub
rolb
popa
mov
cwtl
adc
inc
scas
stos
jae
movsl
lret
ss
adc
std
shlb
test
gs
dec
lret
ret
mov
lret
pusha
xor
movsl
cmc
or
sbb
clc
jnp
leave
sahf
mov
jmp
les
in
aaa
sahf
dec
push
out
mov
add
sub
inc
mov
rcr
and
je
jl
mov
mov
xor
ds
mov
and
int
enter
push
pushf
xchg
lock
lret
mov
jae
inc
mov
pop
xor
xor
cmpsb
test
or
jl
jo
mov
int
dec
es
ficompl
lahf
push
xor
ret
sbb
addr16
aad
mov
push
dec
sub
notl
scas
ret
inc
push
mov
dec
cwtl
pop
testl
mov
sbb
rcl
test
out
sub
mov
cmp
leave
ds
cltd
mov
pop
xchg
push
sub
mov
addb
sti
lahf
and
push
sbb
iret
outsl
scas
sbb
test
cmp
add
notl
sub
xchg
adc
sar
mov
jae
mov
icebp
icebp
mov
add
stos
jg
cmpsb
mov
mov
cmp
mov
aaa
addl
adc
scas
xor
out
insb
fldcw
pop
mov
insb
xchg
jmp
imul
and
sub
push
pop
jbe
pop
pop
stos
inc
std
cmp
lds
adcl
loop
mov
outsl
stos
mov
or
mov
call
scas
mov
movsl
into
fsubl
fmul
inc
mov
aaa
repnz
xor
es
xchg
nop
cld
out
mov
fisttpll
orb
xor
add
imul
or
add
aam
mov
call
and
enter
hlt
imul
lea
ss
movzbl
js
faddl
mov
sbb
test
cmp
test
inc
jb
dec
push
leave
nop
push
sahf
pop
dec
adc
xchg
pop
adc
fcoml
sbb
flds
fwait
mov
movsl
adcb
xchg
fwait
or
push
arpl
dec
in
sub
and
jg
and
adc
fldl
add
sbb
dec
mov
inc
cwtl
std
lds
arpl
jbe
pop
pop
push
sub
pop
pop
mov
xor
mov
outsb
and
pushf
dec
fisubrs
jp
pop
sbb
push
sub
add
mov
inc
shr
bound
repz
shll
pop
mov
pop
mov
pushf
adc
loope
jmp
sbb
mov
push
jecxz
cmpsb
test
outsb
xchg
or
in
test
fcomp
sahf
movsl
sub
and
push
push
rcrb
push
loop
or
lret
xor
dec
es
and
iret
testl
subb
rorl
fwait
adc
cmpps
pop
iret
cmp
mov
sub
outsb
outsb
pop
add
inc
cmc
and
xchg
outsl
lea
lret
ffreep
add
cmp
in
xchg
push
cmp
dec
stos
inc
imul
ffree
lods
into
cmpsb
jmp
cld
cmp
loope
push
jl
mov
inc
cmp
and
ds
mov
cmovs
jg
subps
adc
jnp
mov
jp
gs
cmp
sbb
clc
dec
shrb
movsl
jl
imul
lahf
xlat
sub
xor
popf
adc
lret
fcmovb
mov
or
das
sub
fs
int
testb
loop
dec
or
in
push
shll
cmp
lds
in
js
mov
adc
adc
fxch
sbb
push
adc
adc
int3
pushf
lods
adc
and
adc
jge
inc
ficoml
loop
xchg
mov
xor
jmp
jbe
push
pop
jns
and
out
push
dec
movsb
jecxz
dec
mov
or
dec
mov
test
and
xchg
lahf
and
sbb
dec
add
pop
mov
jae
jnp
mov
push
scas
mov
jecxz
jmp
pop
jns
icebp
mov
sub
jns
int3
in
cmp
in
scas
inc
clc
shll
mov
jnp
adc
test
das
sbb
je
imul
lds
lcall
jno
or
out
outsl
dec
aaa
add
sub
xchg
push
mov
repz
mov
sbb
or
fidivs
in
adc
test
je
out
xchg
jl
xchg
jle
inc
sub
push
add
aaa
lods
add
imull
inc
imull
add
mov
sbb
into
push
xchg
jl
sbb
jo
jno
jnp
cmc
imul
sbb
data16
jg
sti
imul
cmpsb
push
test
mov
js
dec
negb
inc
sub
jmp
imul
adc
inc
in
push
lret
push
and
inc
and
psubsw
lret
add
add
or
dec
in
cmpsb
sub
in
test
clc
add
jge
inc
push
lahf
mov
add
pop
test
or
cmp
mov
adc
and
cmp
cmpsb
dec
testl
or
ja
in
sub
loopne
inc
sub
xchg
inc
into
shll
lock
inc
movsl
andb
rorl
scas
dec
sti
nop
push
fdiv
push
inc
in
insl
movl
pop
or
ss
aaa
jbe
dec
or
lahf
jge
test
inc
cld
mov
fsubl
call
das
dec
leave
and
addr16
js
sbb
insl
jmp
add
lods
add
adc
jge
sbb
mov
mov
enter
in
push
cmp
shll
hlt
and
sbbb
sbbl
or
xchg
or
sub
loop
xorl
mov
inc
pushf
or
adc
pop
daa
push
enter
xchg
push
push
cmp
lret
repz
popf
jmp
cmpsl
daa
fists
adc
rorl
ja
in
sub
push
ds
mov
arpl
sbb
mov
mov
mov
mov
mov
mov
pop
inc
leave
leave
in
mov
loope
mov
mov
test
push
mov
jne
push
imul
sahf
into
mov
outsl
pop
fimuls
addr16
lret
mov
adc
push
test
adc
jb
cmc
gs
add
sahf
fdivrp
addr16
mov
es
mov
jle
push
or
scas
sarl
xor
idiv
repnz
mov
inc
sar
daa
and
icebp
mov
jge
mov
xchg
add
add
lods
lret
sysexit
jne
sbb
lea
and
into
repz
std
into
mov
stos
dec
xchg
jl
pop
sub
test
mov
mov
push
lcall
lea
push
enter
bound
addr16
add
data16
popf
cli
jno
mov
aam
inc
push
xor
mov
and
dec
cmpsl
pop
aaa
mov
sbb
gs
jge
mov
test
rcrb
sbb
push
cmp
std
addl
mov
dec
std
aaa
adc
out
and
incb
outsl
ljmp
jno
je
pop
fmul
movsl
xorl
cwtl
inc
idivb
xor
mov
pop
add
mov
std
sbb
dec
and
jb
jl
mov
test
nop
lcall
xor
stos
subb
lds
lods
mov
pop
and
mov
or
and
push
xchg
fdivrp
icebp
popf
add
lea
inc
test
xlat
dec
sub
or
scas
mov
mov
clc
mov
jnp,pt
xchg
push
cs
sarl
mov
mov
push
rcl
mov
xchg
jno
push
frstor
icebp
jp
popf
sbb
push
inc
mov
movsl
insb
jl
sbb
fcoml
dec
or
and
and
xor
imul
pusha
cltd
ja
mov
in
leave
push
xchg
push
push
xchg
stc
fisubrl
mov
xor
mov
je
js
adcl
loopne
dec
push
dec
inc
stc
xchg
scas
dec
and
mov
add
clc
mov
js
faddl
sar
xor
push
hlt
stc
dec
popa
fistpll
and
add
xchg
loope
rclb
rorb
inc
jnp
loope
mov
dec
ja
mov
adc
xchg
sbb
popa
clc
popa
and
xchg
or
into
shlb
cltd
adc
int3
mov
jle
sahf
repnz
cmp
test
stc
int
jne
fcoml
mov
repnz
pop
mov
jbe
xchg
mov
imul
mov
pop
out
dec
stc
sbb
push
shr
add
ret
xlat
in
cmp
testb
lock
jmp
xchg
and
adc
cmp
cmp
xlat
mov
mov
jne
fstl
mov
addr16
lods
iret
pop
push
orl
aad
lods
or
dec
and
push
push
iret
dec
stos
inc
xor
loope
stc
arpl
lds
jns
lods
push
jp
push
push
and
push
pop
mov
das
mov
divl
sahf
pop
sub
adc
out
mov
in
dec
or
xor
adcb
arpl
jo
xor
js
push
ds
push
outsl
sar
fistps
hlt
inc
pop
mov
pushf
bound
outsb
out
jmp
cmp
mov
xchg
call
rcll
sbb
or
arpl
js
jnp
lret
sbb
jmp
loop
push
aam
das
xor
cmp
xchg
push
enter
std
xchg
adc
dec
das
stos
pop
mov
cmp
dec
lds
inc
out
add
ja
dec
adc
or
push
and
stos
lcall
cmp
push
push
push
push
mov
imul
scas
adc
rcrl
popf
int3
push
repnz
cmp
leave
and
adc
scas
cmp
in
lret
out
gs
jne
push
int
pop
repz
shlb
xor
push
fucom
bound
daa
stc
dec
push
stc
aad
nop
or
imul
push
daa
adc
jae
cli
fwait
cltd
rorl
cltd
sahf
les
ljmp
cwtl
clc
mov
pop
and
xor
sub
push
in
iret
mov
jae
out
mov
push
push
das
jle
xor
daa
negl
imul
aaa
movsb
mov
adc
loop
mov
sub
cmc
movb
jo
push
adc
fwait
cld
pop
inc
leave
dec
add
jno
les
push
scas
cmc
xchg
inc
mov
pop
ss
cwtl
outsl
pop
jle
dec
pop
fisubrs
ss
rorb
xchg
rcrl
mov
rolb
sahf
loope
sub
xchg
lods
jge
xor
daa
xchg
xor
sub
cltd
std
xor
imul
cmp
fnsave
insb
in
sarb
arpl
test
outsl
popf
shl
pop
in
pop
sahf
mov
xor
cmp
loopne
data16
rorb
shlb
mov
inc
mov
stc
mov
es
clc
bound
jmp
cmp
or
mov
cwtl
sbb
int3
sbb
rorb
leave
jp
ja
sub
int3
inc
dec
outsl
pushf
inc
jne
movb
xor
adc
ss
scas
mov
lahf
or
or
mov
cmp
fwait
dec
ret
xchg
sbbb
xor
or
fs
pop
jae
decl
jecxz
insl
sub
sbb
out
inc
lods
scas
or
push
filds
ds
dec
push
in
xchg
hlt
stc
cmp
adcb
cmp
xor
mov
bound
out
fwait
xchg
and
test
scas
insl
pop
std
and
loop
popf
pop
mov
push
adc
aas
push
mov
push
popa
cmp
sbb
roll
and
mov
cwtl
loope,pn
out
adc
imul
shrl
js
mov
adcl
lea
pop
ss
popa
pop
mov
aas
pop
xchg
jae
sbbl
or
push
es
mov
in
ja
pushw
push
dec
iret
mov
stos
adc
xchg
jo
bound
pop
adc
leave
mov
sub
and
jp
push
cltd
fsubrl
mov
inc
stos
push
add
xor
sub
lahf
into
xor
or
jae
lahf
mov
inc
sub
leave
xor
sub
dec
xorb
inc
stos
mov
xor
cmp
gs
outsl
sub
out
xchg
add
outsb
dec
rolb
adc
inc
xchg
pop
sub
cmp
test
test
sub
jno
cmpsl
jbe
pushf
jle
js
out
mov
out
clc
loopne
fdivrl
pop
fcompl
std
clc
mov
imul
mov
test
mov
nop
js
push
dec
adc
jne
es
push
enter
sahf
mov
fnstenv
ds
outsb
xor
adc
pop
fdivl
testl
jb
cmpsb
add
pop
lret
out
xchg
shll
jmp
rcrl
sub
pmuludq
mov
fsubs
rol
jno
iret
les
mov
stos
pusha
pop
imul
push
pop
inc
dec
add
pop
jl
das
mov
cltd
lret
pop
push
fadds
insl
movsl
in
and
jl
add
sbb
inc
into
cmp
out
xchg
mov
shlb
sub
jb
xor
xor
cmp
data16
xor
popf
int3
mov
pop
loopne
sahf
cmpl
mov
pop
xor
pop
xchg
or
cli
sahf
push
dec
test
inc
or
pusha
push
lret
xor
pop
or
sbb
jne
xchg
inc
stc
sub
adc
loopne
push
jmp
shlb
sub
mov
sub
and
cmc
inc
sub
aas
jbe
mov
adc
cmpsb
push
cltd
int
jmp
lea
adc
add
daa
mov
push
das
idivb
lods
ds
mov
lock
pop
or
lcall
and
clc
jge
aaa
lods
enter
cmc
and
pushf
sub
mov
jns
cwtl
jnp
sbb
ljmp
icebp
fsubrp
cmpsb
xchg
jg
mov
push
aam
test
lods
cmp
scas
arpl
cld
lcall
xor
arpl
addr16
inc
and
push
fists
enter
test
xlat
pop
ds
cmp
sbb
loopne
je
add
rcrb
cmp
in
inc
xchg
lret
xor
mov
fsubr
push
into
pop
sbb
add
js
cmpb
fdivr
leave
mov
bound
int
jg
insl
sub
ficoml
fs
lret
sbb
pop
les
adc
out
inc
adc
xchg
repz
jb
jno
loop
scas
je
jg
pop
adc
and
inc
inc
mov
ret
adc
frndint
or
aam
jno
inc
and
mov
push
fldl2e
sub
cltd
daa
mov
cs
lret
repnz
je
loope
mov
aaa
mov
call
jl
loope
sbb
fcmove
dec
mov
stos
mov
jmp
cmp
push
es
dec
adc
es
jo
out
push
add
or
setae
push
stc
add
outsl
cwtl
dec
lret
push
or
cs
push
test
mov
movsb
jnp
pop
xchg
iret
jle
inc
daa
mov
or
mov
lret
popa
mov
push
dec
inc
arpl
repnz
push
and
add
push
int
ds
je
movsl
xchg
inc
dec
fsub
addr16
cwtl
out
ret
movsb
xchg
xor
xchg
out
pop
nop
stos
rcrb
cwtl
ljmp
repnz
loopne
cmp
sub
jnp
or
sahf
mov
sbb
call
orb
mov
ficoms
push
cwtl
add
and
test
ljmp
adcl
add
lods
xor
xor
mov
sub
push
jae
imul
sub
cwtl
mov
inc
mov
jecxz
and
popf
pop
jge
sbb
addr16
xor
mov
cmp
xor
xacquire
ds
rorl
xor
int3
cwtl
cmc
insl
mov
fwait
in
lahf
add
and
lcall
or
loop
cwtl
hlt
test
out
adc
xlat
dec
cltd
mov
cmp
inc
inc
scas
scas
pushf
out
push
in
fwait
pop
lret
cmp
sbb
cmp
scas
aas
aam
inc
xchg
dec
adc
jae
mov
pop
push
pop
jl,pt
xchg
adc
aas
insb
xchg
popf
in
jl
and
sub
into
out
pop
leave
sub
fs
data16
fiaddl
stos
cs
inc
mov
adc
mov
adc
jecxz
bswap
lock
lds
test
or
mov
and
ljmp
cmp
negb
clc
testl
xor
in
xorb
xchg
mov
nop
mov
lahf
loop
ret
jae
dec
cmp
inc
dec
or
out
ret
sub
not
fcmovne
pop
enter
cwtl
mov
ds
scas
out
pop
lahf
sti
addr16
sub
je
shrb
andl
std
and
mov
subb
loope
mov
sbb
adcl
add
inc
push
inc
inc
out
sub
fmulp
cmp
adc
inc
jle
fstpt
and
test
inc
push
mov
insl
fstpt
dec
mov
scas
cltd
adc
inc
movsb
fsubl
adc
mov
int
mov
mov
andnps
fadd
sbb
dec
sbbb
xor
mov
fwait
fwait
adc
negl
and
push
add
push
xchg
pop
dec
push
ds
pop
shl
cs
xchg
pop
adc
inc
or
sbb
sbb
mov
fnstenv
sub
mov
cmp
sbb
int
push
mov
xchg
movsl
into
notl
mov
pop
mov
aas
sub
pop
fdivrl
icebp
xor
aam
inc
idivb
stos
rorl
test
in
aad
ficomps
dec
adc
cmpsl
orl
jg
inc
nop
add
pop
and
xor
and
shr
out
out
fwait
cld
inc
cmp
mov
or
std
mov
push
dec
loopne
in
aad
pop
loope
adc
jmp
pshufw
rolb
mov
push
insb
out
aas
in
gs
call
or
cmp
jo
ffree
je
inc
aam
pop
cmp
nop
mov
popf
imul
sbb
fld
outsl
xor
aam
icebp
pop
nop
push
outsl
jmp
lock
sub
sub
jp
adc
jp
and
sub
imul
xor
imul
lahf
or
sub
fistpll
in
ja
jl
stc
lahf
fnstenv
sbb
mov
dec
stc
das
jge
addr16
jmp
or
push
sub
xchg
std
adc
pop
call
xor
in
or
push
fwait
and
clc
mov
iret
push
mov
cmpsl
lods
mov
sub
jp
sub
fs
mov
xor
mov
pop
and
test
xchg
push
xchg
call
movsb
sub
add
or
xchg
push
xchg
ja
js
xchg
adc
dec
in
pop
xor
or
icebp
cltd
lcall
adc
and
cmpb
addr16
mov
jo
mov
imul
insb
fldt
in
jle
je
jle
or
ficomps
jbe
lock
pop
nop
mov
in
add
out
push
jbe
push
mov
fucomip
mov
lahf
xor
inc
dec
adc
lcall
lea
sahf
mov
es
shr
dec
sub
and
inc
imul
repnz
push
mov
stos
in
and
fmull
test
push
andb
xchg
inc
dec
mov
cld
or
rclb
test
in
in
push
or
xchg
es
mov
data16
bound
aad
repnz
add
fwait
mov
dec
and
out
call
push
dec
push
sbb
aaa
ljmp
mov
in
xchg
aam
rcr
js
xchg
mov
jno
xor
pop
jg
sub
loopne
xor
lods
fwait
dec
sarl
imull
pusha
mov
incl
rcr
add
xor
push
in
loop
fistpll
test
inc
inc
fwait
aad
and
filds
mov
jno
xchg
fcomp
push
sub
cmp
xchg
or
mov
mov
and
std
xor
xorl
jo
mov
xchg
fdivrl
jl
push
mov
jge
enter
xor
inc
das
das
sar
outsb
adc
dec
push
int3
mov
test
jmp
dec
mov
pop
cmc
int3
xor
adc
push
in
xor
scas
add
xchg
daa
inc
sarl
in
aad
into
adc
cmp
mov
add
rcl
int3
pop
iret
pusha
mov
inc
and
mov
xor
push
push
lods
rclb
sbb
mov
loopne
in
test
pop
xchg
push
loopne
stc
jne
inc
int
stos
or
jmp
pushf
inc
mov
sbb
divl
lahf
dec
pop
es
cmpsl
sub
pop
cmp
sub
inc
push
push
mov
pop
movntq
int
in
mov
pop
dec
out
rcl
add
jecxz
adc
dec
add
dec
cmp
bound
xchg
xor
andl
mov
fdivs
xchg
pop
or
cmp
loop
adcl
add
pop
xchg
mov
dec
cltd
jae
pop
sbb
mov
popa
fpatan
rcrl
sahf
inc
jge
xchg
in
adcb
add
ret
mov
sub
sti
loop
imul
fildl
std
add
mov
jg
ja
mov
jne
rcrb
fsubl
mov
adc
mov
js
xchg
popa
mov
stc
out
xor
shr
xchg
inc
popf
enter
cltd
and
test
in
add
loop
jmp
inc
int3
call
js
dec
out
popa
sbb
int
negb
pusha
mov
mov
aam
push
mov
lods
mov
scas
add
mov
inc
pop
jecxz
mov
jo
sbb
jmp
sub
jne
sbb
mov
cld
cltd
and
pop
dec
rclb
pop
push
mov
mov
and
push
lret
daa
fnstenv
pop
mov
ss
mov
adc
idivl
inc
imul
outsb
lea
je
jae
dec
inc
mov
inc
xor
inc
in
xor
or
adc
in
xchg
fbstp
insb
jno
add
dec
data16
or
push
notb
stos
inc
mov
dec
xchg
xchg
gs
ss
jno
ss
loop
cwtl
adc
ds
mov
in
mov
adc
shrb
adc
in
push
je
xchg
push
out
mov
push
addr16
fadds
cmp
ret
nop
adc
mov
pop
adc
shll
xor
dec
mov
outsl
hlt
cs
mov
outsb
inc
bound
inc
test
push
es
adc
addl
push
dec
out
dec
sub
mov
negl
or
cld
mov
jns
xchg
ss
adc
arpl
dec
mov
arpl
aas
test
pop
mov
mov
push
xchg
aam
sbbl
push
aam
mov
lock
xchg
ja
add
add
mov
adc
repnz
cmc
fisubl
adc
or
sti
push
or
test
pop
std
in
mov
ret
and
jecxz
mov
cli
add
push
loopne
fs
test
pusha
in
addl
ja
test
ret
out
sub
out
cmp
push
push
add
cmp
xchg
iret
cltd
insb
mov
pop
or
dec
jmp
sub
in
scas
in
ljmp
mov
imul
aad
inc
pop
pop
fimull
shrl
cwtl
pop
jns
dec
js
cmp
ds
xchg
loop
sbb
sub
cmpsl
neg
mov
sidtl
adc
mulb
mov
ficoml
mov
aas
pop
rclb
xor
fwait
or
push
cmp
jne
std
scas
lock
pop
mov
stc
lahf
test
mov
and
sbb
mov
mov
adc
lcall
add
inc
out
jmp
out
jp
fwait
shll
test
push
mov
jmp
and
aad
fisubl
cmpsl
xchg
mov
pop
push
push
mov
scas
insl
xor
dec
cmp
xor
or
jp
aam
push
jge
sub
pop
fiaddl
mov
pop
inc
pop
stos
adc
movsl
aad
call
xor
loopne
decb
adcl
add
pop
in
test
pushf
inc
test
and
aam
aam
pop
shrl
lahf
sbb
data16
test
test
mov
and
mov
dec
bound
mov
nop/reserved
cld
test
bound
in
test
mov
add
mov
xchg
test
pop
add
xchg
rcr
inc
std
mull
popa
inc
sub
jmp
lcall
fs
jno
repz
lods
or
js
mov
inc
add
jmp
push
jmp
inc
mov
mov
xor
test
xor
das
icebp
pop
and
js
lds
or
cmp
mov
stos
loop
out
sbb
adc
mov
insb
add
ret
mov
add
aam
into
and
sub
push
movsl
icebp
cmp
or
mov
jmp
sbb
pop
aas
dec
push
sbb
or
mov
test
dec
daa
sarl
mov
add
adc
movsb
mov
pop
jo
test
xor
cmp
mov
xor
pop
mov
stc
dec
fldt
addb
fsubrs
hlt
adc
andb
pop
lods
mov
lea
xor
xchg
dec
daa
and
add
dec
sbb
inc
into
xor
in
imul
sub
ret
mov
jge
gs
mov
xchg
sar
push
iret
pop
add
daa
js
and
xchg
out
int3
rorl
xor
sub
xchg
mov
rorb
inc
sbb
sub
test
into
jp
push
orl
adc
mov
xor
jnp
jno
jo
mov
or
sbb
jbe
mov
push
mov
mov
jmp
and
dec
pop
popa
and
mov
add
popf
repz
mov
jge
test
push
pop
popa
and
adc
inc
inc
daa
cltd
iret
adc
ljmp
pop
cmp
mov
sub
in
mov
pop
sbb
mov
aad
mov
add
mov
in
sub
arpl
xchg
and
or
adc
std
push
adc
aam
repz
mov
lea
lret
xchg
sbb
xchg
dec
dec
xchg
sbb
pop
lret
call
xchg
push
dec
js
mov
pop
cs
mov
imul
loop
lea
sti
jmp
lcallw
call
fcoml
testl
addb
scas
test
mov
fwait
roll
add
ss
roll
dec
and
mov
inc
rolb
stc
add
mov
mov
adc
stos
mov
adc
adc
cmp
add
adc
sbb
sbb
stos
cmp
inc
movsb
jmp
in
inc
es
mov
dec
sbb
sub
sub
dec
sti
pop
shlb
pop
push
adc
mov
mov
adc
ljmp
mov
ficoms
mov
or
add
nop
shll
pop
sub
jno
xchg
ret
insl
inc
cmpsl
add
dec
mov
mov
add
stc
mov
inc
cld
add
mov
mov
xor
sbb
mov
mov
js
jae
dec
scas
xor
sub
pop
adc
sbb
icebp
pop
pusha
dec
mov
ds
movsl
jle
or
push
push
mov
loopne
mov
inc
cmpsb
mov
add
stos
push
pop
adcb
or
push
or
and
sbb
inc
mov
xor
int
xchg
lea
sub
mov
mov
inc
dec
dec
push
sti
mov
xlat
out
mov
mov
add
je
xor
shrb
decl
xchg
jle
xchg
leave
test
cmp
sub
shrl
push
mov
outsb
arpl
fwait
sbb
movb
mov
xchg
adc
push
popf
xorl
addr16
mov
test
add
idivl
sahf
outsl
cmc
xorb
and
test
outsl
sbb
inc
pusha
jge
mov
in
int
mov
pop
lret
mov
jecxz
addr16
xchg
jne
jg
inc
mov
xchg
push
js
movsb
xlat
cwtl
adcb
jnp
cmp
push
add
mov
outsb
fistpll
xchg
jg
data16
in
cmp
cwtl
sbb
sub
and
inc
add
fstp
ret
sub
mov
add
movsl
xor
jp
rcr
lret
mov
ret
lds
push
and
inc
imul
lods
icebp
and
push
mov
mov
adcb
lcall
pop
sub
cmpsb
shl
negb
bound
inc
cmp
adc
jb
mov
sbb
fimuls
imul
movsl
or
sbb
sar
stos
xchg
mov
pop
cmp
mov
cli
iret
roll
shll
icebp
lock
add
pop
cmp
dec
les
nop
inc
cmp
fcoml
aam
or
lret
subl
ljmp
xor
mov
testb
int3
into
pop
pusha
adc
sbb
xor
in
fisubs
cwtl
stc
adcb
filds
fs
sbb
xor
add
fistl
and
jl
scas
in
jge
jnp
hlt
lret
mov
adc
ret
fdivr
leave
sbb
xor
sti
jns
out
xor
inc
and
xlat
jae
addr16
leave
adc
fsub
aaa
push
insb
pop
dec
outsl
dec
sbbl
inc
int3
jg
pop
imul
pop
out
mov
xor
cmpsb
mov
mov
ret
push
jp
ja
mov
aam
icebp
sbb
mov
les
jl
mov
cmp
pop
ljmp
push
push
and
xchg
lea
rolb
xor
lods
xchg
mov
sub
into
mov
jae
add
push
lahf
adc
out
in
sahf
notb
stos
push
movb
add
enter
out
push
nop
push
bound
je
dec
int
mov
mov
jae
ds
pop
popf
inc
push
or
aaa
or
movsb
fsincos
int
lcall
shrl
cld
mov
push
mov
mov
fs
and
xchg
lea
lods
jecxz
lock
fwait
xor
ljmp
cld
mov
cs
ljmp
test
xchg
xchg
inc
in
dec
mov
dec
adc
dec
sbb
out
aam
orl
and
inc
popf
dec
shlb
dec
cld
jo
sarl
clc
fbld
in
js
pop
cmp
mov
jae
gs
in
xchg
push
xchg
xchg
mov
or
jnp
cmp
popf
push
sub
mov
sub
in
ds
mov
lret
sbb
bound
mov
mov
cmp
xchg
movsb
pop
mov
arpl
sbb
outsl
pop
in
sbb
outsb
shlb
adc
mov
mov
rcr
dec
xor
mov
or
es
adc
scas
ljmp
pop
and
ret
and
in
loop
push
inc
scas
lret
jns
sbb
daa
pop
out
dec
ljmp
mov
add
inc
sbb
xchg
push
mov
popf
fildll
test
movsb
andb
lods
ret
sbb
je
jns
xor
add
ret
fnstenv
sub
bound
getsec
add
push
sti
rcrb
jb
jl
jge
jmp
pushl
jge
jbe
xchg
stos
int
stos
sti
adcb
dec
fs
xchg
dec
add
adc
xchg
cs
ja
inc
scas
jmp
cld
das
mov
lds
adc
test
mov
push
scas
aas
pop
cltd
scas
dec
cli
fisubrs
sub
inc
and
je
push
push
xchg
sahf
aas
lods
push
mov
inc
out
popf
xlat
pop
int
cltd
insl
and
fdivrl
fbld
gs
lret
sahf
test
cltd
insl
xor
push
lods
lods
cmp
dec
subl
cmp
out
enter
cmp
std
sub
cmp
adc
mov
out
pushf
sbb
dec
adc
jns
dec
les
cmp
lahf
and
outsl
jmp
adc
sti
out
ja
sub
rolb
xor
pop
mov
mov
and
push
jg
adc
enter
out
jecxz
fldcw
sub
mov
test
dec
sub
adc
xchg
das
push
dec
out
cmp
iret
mov
add
shlb
cmp
fwait
stc
push
cmpsb
fcom
dec
fldenv
sbb
int
and
cmpsl
and
call
stos
cmpsb
mov
cmp
lahf
xchg
lret
stos
shll
xor
iret
icebp
cmp
stos
jo
stos
xor
inc
out
outsl
js
and
aam
bound
cmp
cmp
push
xchg
call
mov
and
test
fiadds
sbbb
mov
dec
js
add
sub
mov
cmp
mov
lahf
adc
adc
jg
out
loope
jno
das
in
pushf
dec
out
ret
shrl
sub
ficomps
stc
addl
sbbl
hlt
lods
jmp
out
ja
loop
push
into
vpcmpgtd
in
dec
and
mov
pop
dec
in
test
sti
push
scas
mov
pop
dec
fmul
push
out
push
mov
int
push
dec
add
push
in
addr16
nop
fadd
adc
lods
adc
sbb
sub
aaa
mov
adc
xor
inc
pop
loopne
mov
repz
lret
test
and
loop
test
dec
lea
std
ss
ret
daa
adc
push
sbbb
mov
xor
pop
and
mov
outsb
lea
lret
stos
sbb
xchg
mov
jne
lret
out
or
insb
out
fincstp
dec
stos
adc
mov
lahf
cltd
jb
sub
jne
or
stos
and
imul
push
out
xchg
cmp
jl
idivb
mov
or
sbb
cmpb
sbb
aam
call
adc
inc
scas
mov
loope
rcr
inc
ret
mov
push
pop
loop
xor
push
jnp
inc
add
mov
aam
and
stos
repz
dec
adc
fwait
add
shrb
iret
and
int
xchg
imul
sub
pusha
cmpb
pop
xchg
imull
mov
mov
jp
gs
ficompl
jmp
dec
lods
lea
fcomp
sub
pop
and
jge
int3
xlat
mov
cmpl
test
dec
dec
cmp
jmp
or
jae
outsb
adc
fmull
push
vmovups
push
clc
xor
inc
mov
mov
cmp
push
loope
data16
mov
adc
addr16
mov
cmpl
mov
xor
fcomps
xchg
addr16
gs
xor
fstpl
inc
push
sbb
repz
jecxz
imul
stos
bound
nop
mov
sarl
lea
jecxz
clc
inc
testl
dec
fwait
jne
jno
inc
dec
mov
cli
js
ja
repz
gs
mov
aas
divl
add
or
mov
ja
sub
cmpsb
cs
push
in
sarl
cli
or
lock
out
cmp
ret
hlt
sbb
fcmovnbe
cmp
mov
jge
mov
dec
cmp
mov
leave
cmp
xchg
sub
and
inc
pop
jp
fwait
shl
jbe
dec
mov
ds
mov
lahf
inc
jecxz
jns
sub
shrb
pop
jo
inc
jle
jb
idiv
je
hlt
rclb
push
test
jmp
inc
adc
mov
cld
aaa
or
cmp
lcall
adc
jb
mov
call
enter
add
aam
xchg
push
cld
mov
clc
jecxz
gs
loop
sbb
aad
cmp
jp
or
lret
push
lea
mov
push
jne
and
fldcw
int
and
inc
sub
out
bound
aas
xchg
sbbb
mov
insb
aas
xor
push
rolb
mov
jne
inc
enter
jno
fnstsw
sbb
adc
xor
sbb
xor
cmp
test
das
pop
push
xor
xchg
scas
and
testl
push
sub
clc
in
jmp
pusha
push
sbb
lods
cmp
push
jle
ss
stos
cs
pusha
arpl
popf
xor
adc
mov
cmp
lret
pop
test
add
inc
cmc
adc
lahf
es
ja
js
cs
lds
rcrb
xchg
leave
push
enter
push
stos
and
ljmp
and
cmpsb
dec
add
or
pop
xor
inc
rcr
bound
xchg
push
pop
loope
aam
mov
test
cmp
test
mov
icebp
out
fs
mov
add
mov
int3
mov
xor
in
fnstcw
test
sti
ss
cld
adc
arpl
gs
fistl
add
or
cmp
fmul
or
loop,pn
mov
xor
jno
jge
test
lea
je
mov
jo
xchg
push
dec
adc
and
cmp
jge
dec
push
inc
xchg
shl
scas
xchg
xchg
iret
jp
test
dec
xchg
movl
sub
lods
inc
sahf
xchg
imul
mov
ret
inc
and
iret
fisubs
ljmp
imul
cmp
mov
daa
loopne
cmp
xlat
stos
mov
jns
xor
sarb
mov
push
test
or
sub
xchg
xorl
out
in
je
xor
fcomps
test
ja
sahf
sbb
shlb
xchg
fsubrl
test
mov
lret
rorb
add
je
adc
adc
push
pushf
sbb
adc
jge
xchg
into
jb
jp
adc
pop
pop
pusha
dec
enter
mov
jo
lret
jmp
dec
enter
and
imul
cmp
push
out
lcall
clc
add
loopne
mov
std
test
or
pop
jle
xchg
xchg
ficompl
xor
xorb
mov
xchg
push
je
loopne
pushf
lea
cmp
push
addr16
out
ret
fisttpl
stc
jno
test
cmp
cmpsl
out
push
xor
sub
ds
adc
orl
das
vaddss
test
jle
enter
jae
xor
pop
fcmovnb
popf
sub
js
repnz
add
insl
mov
iret
hlt
popf
int3
imul
push
cld
es
scas
pop
mov
mov
loop
mov
dec
mov
movsb
push
out
test
mov
push
lret
loop
sbb
push
mul
loop
flds
add
sub
test
or
cmpsl
xor
jne
xchg
int3
pop
xor
fbstp
cs
cmp
lea
cmpsb
mov
sub
stos
clc
mov
inc
fnstenv
leave
mov
sub
sbb
jbe
lds
dec
enter
adc
lea
ds
jecxz
jp
add
xchg
adc
lret
inc
ret
jae
jne
jne
imul
ret
stc
sbb
out
xchg
insb
jge
in
cmp
js
mov
int3
sub
cld
outsb
jo
in
lret
int3
or
out
jns
push
jnp
inc
divl
test
sbbb
int3
add
cmp
je
mov
pop
pop
pop
in
xchg
out
push
das
pop
add
push
push
stos
lahf
jne
enter
test
mov
push
dec
or
push
pushl
aad
mov
rol
jg
dec
push
daa
popf
fsubs
jl
mov
daa
fldt
fmuls
sub
in
cltd
dec
pop
inc
inc
mov
dec
pop
sub
mov
jbe
pop
out
sub
scas
mov
out
mov
mov
mov
jmp
rol
add
call
cltd
xchg
dec
int
or
adc
jne
lods
lahf
and
int3
mov
pop
test
dec
js
mov
add
sub
jns
jg
jp
cmp
add
push
int
add
insb
jecxz
pop
lods
and
int3
cmp
out
push
fwait
sub
or
mul
cmp
aam
sti
es
mov
sbb
jne
inc
cmp
pop
fldcw
sbb
push
cmp
or
ret
test
jne
insl
and
mov
mov
outsl
sub
jle
dec
cmp
insl
add
test
push
cltd
shll
xchg
cmc
aas
test
mov
cmpl
loop
dec
popa
or
push
push
mov
addr16
mov
jo
cmp
cmp
push
mov
cmp
addr16
cmp
jmp
push
and
dec
add
mov
repz
scas
pop
cmpsb
dec
scas
cltd
dec
jg
stos
pop
and
mul
clc
cmp
test
icebp
add
cmpsl
push
das
arpl
cld
lret
mov
andl
es
hlt
xor
pop
subb
sub
call
mov
int3
int3
mov
out
sahf
pop
aas
loopne,pn
aam
repnz
jp
dec
andl
and
ss
sbb
or
stos
and
sub
lcall
xchg
imul
mov
mov
cmp
xchg
in
inc
scas
xchg
push
adc
jne
dec
pop
test
stos
dec
cs
mov
push
mov
data16
pop
stos
sub
xor
iret
cmp
aaa
lock
cmc
call
cwtl
shll
lods
and
push
dec
andb
std
gs
aas
pop
mov
sbb
mov
dec
jmp
inc
pop
fidivrs
in
or
shrl
jns
insl
dec
push
or
leave
popw
cli
cli
negl
aam
push
negl
jbe
shlb
imul
addl
mov
dec
pop
int3
test
aaa
insl
inc
push
mov
xor
inc
mov
or
loopne
pop
inc
xlat
ja
pop
or
clc
and
stos
jl
dec
mov
jne
repnz
pop
dec
adcb
jl
jne
aam
movsb
push
push
push
xor
shrl
mov
jecxz
add
jnp
mov
mov
push
adc
sbb
loope
nop
cmp
shll
adc
jae
xor
xchg
faddl
pop
mov
rorl
xchg
test
fdivp
ds
jno
pop
adc
pushf
push
sub
inc
enter
sarb
push
mov
je
cmp
mov
fwait
lock
mov
xor
pop
xor
lods
sbbl
mov
mov
mov
or
lret
loop
cmp
jb
sbb
xchg
inc
push
mov
jno
and
push
sub
mov
insl
aam
pop
daa
test
add
popa
cs
call
pop
fisttps
xchg
leave
js
push
nop
ds
add
mov
daa
int
mov
mov
xlat
dec
jle
sbb
cmp
xlat
fs
jge
xchg
int3
xchg
pusha
push
insl
aaa
xchg
and
sti
aaa
mov
lret
add
jl
loope
mov
xor
jecxz
jecxz
fadds
adc
pop
push
mov
pop
cltd
test
cmp
push
inc
in
push
cwtl
clc
pop
shl
cmpsl
sub
cmp
loopne
lds
push
imul
push
add
cmp
and
sti
loopne
pop
add
push
rorb
bound
out
mov
push
cmp
cmp
aam
sarb
push
test
shr
sbb
jae
cs
sbb
int3
popa
fcom
into
add
mov
jg
insb
pushf
sahf
jb
mov
lcall
jne
je
and
or
cmp
inc
mov
mov
fimull
imul
bound
pusha
repz
cmp
mov
popf
bound
enter
incb
scas
push
mov
mov
pop
test
jle
call
mov
dec
fsub
mov
pop
fwait
jmp
aad
rclb
pushf
fucomip
fimull
inc
ret
mov
fpatan
mov
lahf
mov
add
push
stc
sub
fdivrl
add
inc
mov
vhaddps
mov
daa
cmp
mov
test
dec
rcll
mov
inc
loop
adc
adc
sub
cmc
mov
add
and
cmp
addb
sbb
adc
mov
xchg
pop
loopne
hlt
mov
int3
add
mov
fcoms
mov
or
sarb
ror
fcmovbe
adc
out
xor
xor
xor
sbb
pop
lock
adc
xor
cmpsb
mov
fwait
jl
adc
neg
jns
mov
stos
mov
pop
sub
clc
adc
clc
arpl
in
xor
push
cltd
pop
mov
std
xlat
pop
std
xchg
popa
sbb
and
push
bound
imulb
mov
pop
test
pushf
test
pop
loope
push
and
xor
jne
int
shl
insl
gs
rclw
rcll
je
jne
add
and
decl
pop
push
push
data16
jmp
sub
out
fwait
shl
lock
xchg
in
add
jle
loopne
sub
and
ret
inc
bound
dec
inc
sbb
call
xor
jg
aad
popf
ja
shll
in
cld
rorb
leave
cwtl
daa
mov
and
xor
jb
incl
xor
cmpsl
dec
rcll
inc
outsb
cmpsb
pop
adc
cld
shlb
rcl
jo
fmull
cmp
ret
stos
cmp
pop
into
lret
mov
ret
adc
pop
inc
mov
shll
jle
cmp
stos
ret
fdivrl
jbe
sub
inc
loopne
stos
xchg
popa
imul
xchg
jle
cli
movl
push
push
jae
shlb
mov
decl
int
in
push
or
xchg
lock
add
repnz
leave
or
or
outsb
ret
sub
iret
mov
or
jno
dec
cmc
je
into
movsl
xor
cmc
je
rorb
lcall
adc
jl
mov
add
sub
scas
sub
dec
jns
add
scas
xchg
and
push
sti
sbb
and
lods
or
jo
mov
bound
adc
or
push
test
fmull
adc
js
sub
and
xchg
sub
insl
add
cld
cmpsb
test
xchg
pop
adc
xor
scas
ret
adc
cmc
subl
fsubrs
lods
xchg
jno
xor
or
mov
outsl
test
sbb
push
mov
add
out
xor
imul
pushf
fcoml
sarb
xchg
loopne
dec
adcl
loopne
add
ret
nop
xchg
or
cmp
outsl
aas
jp
dec
mov
push
rcll
not
mov
nop
push
inc
stos
add
aaa
dec
jp
fsubrs
nop
lock
mov
pop
out
or
scas
mov
adc
xchg
ds
popa
push
inc
in
in
xchg
mov
scas
ret
xor
loop
cmpsl
add
jo
enter
sub
push
test
mov
movsb
jb
movsl
inc
adc
push
inc
sub
or
fucomi
aaa
arpl
xchg
stc
ds
push
adc
pusha
fwait
mov
jg
mov
fstps
inc
xchg
add
test
rol
icebp
iret
sbb
loop
inc
addr16
nop
mov
cltd
add
pop
fcoms
repz
pushf
scas
add
mull
rorl
mov
jl
pop
loopne
lods
xchg
mov
and
test
mov
sahf
ljmp
in
jne
fwait
push
out
ja
pop
loopne
aam
sahf
sub
movsl
and
jecxz
rcrb
sbb
pop
aas
sub
push
sbb
xor
ja
in
sub
pop
pop
fbstp
sahf
lock
int
and
notb
and
lahf
push
and
mov
stos
pop
insb
inc
fstpl
dec
cmp
jmp
and
es
cmp
dec
sti
adc
or
ret
js
aam
loop
xor
pop
push
hlt
sbb
out
shll
add
mov
inc
pop
sub
lock
fwait
pop
cmpsb
xchg
jbe
add
fistpll
nop
cs
in
nop
fildll
faddl
sub
in
mov
lods
insl
xlat
jl
jo
xchg
jne
cld
std
aad
dec
fsubs
xchg
mov
je
rol
jae
push
hlt
into
bound
lcall
shll
in
arpl
outsl
sbb
ja
cmp
fisttpll
cltd
dec
xchg
mov
sahf
popa
imul
add
adc
or
stc
sub
mov
xor
or
add
xchg
pop
fdivr
fwait
cltd
add
imul
mul
xor
daa
imul
and
cli
dec
ret
and
mov
add
add
cmp
jno
xor
mov
jns
imul
insb
inc
mov
adc
cmpb
pop
hlt
cmpsb
add
jp
xor
adc
mov
in
adc
cltd
sub
pop
jae
aaa
flds
insl
cmp
lret
xchg
mov
cmp
add
or
cmp
xchg
pop
inc
mov
fsubrs
cmp
std
inc
stc
push
mov
ret
mov
jl
test
mov
mov
shll
out
dec
push
stos
inc
cmpsb
mov
lret
mov
or
roll
and
repz
push
imul
out
sbb
popa
int
push
fsubp
mov
inc
push
loope
aam
fldl
les
inc
cmp
int
inc
add
and
sub
andl
sarl
xor
inc
inc
jecxz
jl
fstpl
and
or
dec
ret
les
sub
inc
cwtl
scas
jns
sub
cmpps
in
and
aaa
dec
jl
inc
sub
hlt
adc
sbbl
sahf
stc
sarl
mov
push
jns
add
mov
call
daa
lds
rcrl
lock
sti
push
adc
sbbl
sub
mov
scas
icebp
std
cmp
ret
lods
mov
cmp
push
nop
add
xor
rorl
mov
and
mov
lock
mov
out
sub
sbb
xlat
mov
xchg
sbb
jge
pop
jno
xchg
ficomps
rolb
jmp
cmp
movsbl
sbb
jbe
call
int3
fwait
pop
sarb
rol
insb
jmp
jns
mov
or
inc
xor
icebp
test
sub
jp
notl
rorb
test
pop
or
xchg
push
inc
in
lea
pop
mov
std
adc
mov
sub
push
xchg
dec
adc
mov
xchg
mov
imul
pop
mov
add
mov
sti
mov
push
mov
in
push
rclb
cmp
in
xchg
push
cmp
mov
mov
shrl
ret
pop
repnz
or
aad
or
testb
nop
jb
les
mov
lret
xor
mov
stos
sub
test
sub
mov
inc
js
cmp
and
pop
lds
and
in
movsb
lahf
nop
sbb
add
out
xor
mov
jl
ljmp
adc
or
rep
mov
movsl
pop
jae
pop
testb
cmp
aaa
mov
mov
and
jp
push
outsl
xchg
jmp
leave
popf
jl
adc
mov
aad
idivb
popf
or
sahf
push
push
xchg
aam
adcl
aas
jmp
fwait
push
lahf
movsw
pop
popf
pop
cwtl
push
adc
or
cmp
dec
sub
add
dec
pop
dec
and
stos
dec
insl
push
adc
ret
sbb
mov
mov
repnz
jge
add
negl
adc
adc
mov
psubd
xchg
mov
push
fwait
or
sub
mov
and
nop/reserved
scas
fsubrs
out
insl
dec
std
sti
mov
scas
pop
add
jg
addb
mov
in
jle
cmp
insb
hlt
popf
arpl
ret
push
adc
sbb
and
addb
jp
addr16
out
push
bound
and
adc
in
jge
cld
jns
rorb
push
and
mov
aam
aaa
sub
xchg
push
xchg
fstpl
pop
test
int3
xchg
fdivs
mov
std
pop
cmp
insb
pop
repnz
push
sahf
leave
andb
scas
mov
test
inc
mov
adc
or
arpl
push
test
cmp
add
pop
js
adc
repnz
movsl
mov
mov
fs
test
inc
pusha
into
sbb
adc
sub
mov
inc
jnp
cmpsl
cmp
xchg
push
es
cwtl
add
insl
adc
adc
pop
xchg
popa
jno
fadds
mov
mov
out
mov
sarb
push
or
jge
fdivl
loop
les
or
pop
ds
mov
arpl
insl
mov
push
jns
dec
push
dec
dec
mov
mov
inc
ret
sub
xor
enter
ja
jge
or
sbb
scas
ljmp
sarl
add
iret
ret
subb
into
adcb
jns
jp
cmp
and
cli
pop
sbb
and
repnz
cmp
mov
xchg
leave
out
push
or
xor
nop
inc
xor
jecxz
ret
enter
je
mov
cs
sbbl
cld
jecxz
inc
dec
or
mov
jp
pop
sbb
nop
ds
lret
loop
and
mov
inc
dec
push
lcall
xchg
shrl
in
aad
daa
aas
jno
in
or
mov
mov
jg
cmc
stos
fmull
inc
aam
pop
icebp
mov
lods
push
mov
fsubl
jecxz
scas
lods
clc
jmp
xchg
mov
std
sbb
mov
sbb
xlat
push
push
mov
mov
aas
push
and
cmc
sti
inc
xchg
adc
pop
fsts
dec
jae
or
mov
shll
and
pop
inc
add
ficoml
adc
jo
pop
adcb
lds
dec
into
pop
jp
inc
jg
std
push
aas
daa
or
fidivl
aaa
mov
cmp
sub
sub
xchg
fldt
dec
outsl
bswap
stc
enter
xor
mov
in
and
dec
adc
and
dec
jne
div
in
test
popf
inc
mov
shrb
or
call
push
add
es
pop
cmp
push
mov
movsl
rorl
out
add
mov
cmp
sbb
jb
pushf
xchg
cmp
xor
mov
sahf
test
inc
add
test
adc
mov
insb
inc
inc
call
adc
repnz
sarl
sub
xor
addl
ret
adc
neg
jns
pop
je
pop
pop
lock
mov
sahf
les
dec
mov
xchg
mov
pop
aam
cmpsl
out
jo
aam
shrb
adc
sbb
jmp
icebp
mov
pop
nop
pop
and
shll
inc
mov
mov
insb
pop
icebp
es
push
add
pop
test
add
aaa
loope
pop
call
mov
into
sbb
dec
roll
rcrb
pusha
adc
sub
lret
in
popf
inc
out
adc
xchg
jns
mov
test
lds
clc
in
mov
pop
subl
cs
sahf
mov
push
xchg
and
mov
and
mov
repnz
sahf
sbb
adc
jle
pop
push
sbb
xor
cmp
lret
pusha
nop
push
xor
aad
xor
testl
mov
int
push
xor
mov
mov
push
ret
jmp
data16
jl
mov
mov
adc
push
dec
sbb
bound
pop
add
mov
aad
mov
lods
rcll
int3
test
cmp
ret
in
daa
sub
shrb
ljmp
xchg
sbb
outsb
push
and
cmpl
push
mov
in
rorl
and
and
cltd
pop
dec
dec
mov
or
stos
repz
add
js
jg
xor
cmp
jne
sbb
xchg
xchg
or
adc
mov
mov
dec
sub
test
mov
scas
lods
mov
cmp
xor
push
mov
fildll
mov
cmp
xchg
mov
aaa
xchg
test
cmp
lret
mov
stos
sbb
dec
xchg
mov
cmp
out
pop
push
mov
pop
adc
sbb
pusha
cmp
je
inc
aam
inc
cmpsl
fstl
cmpsl
imul
sbb
lahf
mov
dec
divl
mov
ret
sbb
push
mov
cs
push
inc
pop
xchg
cld
imul
pop
sbb
js
push
aad
mov
subb
std
inc
xchg
xor
sub
pop
lods
ds
pusha
sar
mov
scas
ret
and
pop
sub
cwtl
mov
add
cmp
out
or
xchg
fsubs
adcb
movl
jmp
mov
out
push
ds
hlt
mov
pop
add
sub
add
inc
test
aad
fldenv
mov
or
iret
push
leave
mov
xor
repnz
dec
aam
lahf
pop
dec
add
stos
add
fdivl
lods
mov
sti
adc
add
xchg
in
xchg
divb
lret
outsb
xchg
cltd
pop
sub
jg
aaa
data16
adc
cmp
or
or
pop
add
loop
pop
test
sbb
loopne
aam
mov
mov
adc
xchg
and
or
shlb
repz
out
iret
push
shll
test
inc
or
xlat
mov
shll
xchg
xor
shll
cmpsb
cmp
scas
push
add
daa
out
idiv
xlat
testb
insb
sub
cmp
and
pop
dec
sbbb
mov
dec
ljmp
xor
push
pop
mulb
push
out
and
sbb
es
bound
or
imul
jae
mov
pop
xchg
or
ds
push
sbb
and
aad
imul
je
out
addr16
in
lods
repnz
cmc
sub
sub
xchg
pop
sub
fists
daa
and
pop
xchg
jno
jnp
push
popf
popf
enter
ja
clc
in
mov
jle
es
inc
sbb
aam
fs
sbb
aam
push
insb
push
hlt
aas
xchg
leave
xor
gs
or
xchg
and
addr16
and
cmp
and
pop
inc
sbb
lods
dec
xchg
and
jne
or
faddl
insl
aam
ljmp
pop
outsb
and
push
fwait
mov
leave
ja
push
jp
cmpsl
outsb
mov
js
popf
lds
and
pop
adcl
mov
cmpsl
adc
sub
into
mov
cltd
pop
push
gs
mov
sub
mov
les
lret
mov
adc
sbb
adc
push
push
and
movsb
xor
pop
sarb
fisubs
lods
out
loope
cmp
jg
in
or
outsb
hlt
pop
fidivrs
arpl
inc
add
mov
dec
pop
mov
adc
push
repz
inc
lret
mov
or
adc
insb
stc
jl
enter
xchg
inc
sub
dec
pop
dec
push
lea
and
mov
inc
cwtl
lret
fcomps
pop
aas
stos
push
sbb
mov
fbstp
mov
mov
cmpsl
les
mov
test
xor
push
out
jmp
mov
jo
pop
out
sti
mov
jne
repz
xchg
ljmp
dec
rcll
les
into
es
jge
push
insl
inc
sti
inc
popf
scas
pop
cwtl
lret
js
pop
popf
jnp
mov
jne
pop
cmp
jae
fwait
push
clc
pop
icebp
dec
test
adc
add
popf
and
fmull
cmpsl
dec
dec
pop
mov
cmp
jecxz
xor
and
add
or
test
sub
and
sub
mov
lea
xchg
mov
sbb
ja
or
call
in
popf
sbb
cmp
inc
popa
jl
shll
cmpb
push
out
fcomps
mov
scas
imull
mov
scas
dec
adc
push
std
lods
xor
jg
push
test
es
jge
sub
imul
pop
bound
shrl
cmp
ss
add
es
xlat
or
push
xor
inc
jns
sbb
jle
test
push
das
pop
lahf
dec
fisttps
add
mov
pop
mov
data16
mov
js
cs
add
xchg
lret
adc
mov
xchg
fwait
cmc
mov
fisttpl
pop
jne
cmp
pushf
pop
stc
sbb
fstpt
je
mov
stc
mov
or
pop
jno
mov
test
data16
jge
out
dec
test
loope
daa
outsl
ljmp
icebp
imulb
bound
and
lcall
mov
leave
cli
je
data16
shlb
jp
dec
jmp
cmpsb
mov
aas
loopne
and
pop
pop
or
adc
sbbb
cmp
jb
add
or
lods
sub
xor
lea
testb
mov
dec
mov
insl
mov
cmpsl
inc
pusha
inc
add
je
dec
mov
or
xchg
jg
jmp
ds
xor
inc
ss
subb
ficompl
outsl
cmpsb
lret
lahf
mov
inc
mov
out
test
fnstsw
push
inc
idivb
insb
xor
scas
ret
and
fstpt
ret
mov
dec
shll
lcall
stos
rcr
jl
pop
push
adc
out
xor
and
mov
jecxz
add
fdivs
dec
push
movsb
leave
fbld
icebp
and
dec
jp
fidivs
push
jb
jne
cmp
in
aam
test
cmp
dec
divl
jecxz
scas
pop
pop
imul
sub
pop
xchg
mov
xor
pop
dec
and
push
or
pop
push
and
fisubs
stos
sarl
mov
lss
test
les
adc
sbb
lcall
out
je
cmp
xchg
jns
fstpl
inc
jmp
cmp
sub
fsubrs
adc
addr16
push
fisubl
data16
jp
cmp
xor
das
mov
xor
cld
pop
aam
mov
dec
push
sub
xchg
jno
adc
mov
in
sbb
push
and
push
or
pop
or
and
or
mov
mov
xchg
in
std
pop
lcall
shrb
popa
mull
ljmp
mov
mov
cli
lret
add
push
cmp
fsubs
pop
dec
mov
cld
mov
push
int
lret
fcoms
cmp
repnz
cmpsl
sub
jmp
in
testb
fildll
add
adc
mov
inc
loop
aam
aas
imul
mov
xor
sub
out
pop
addr16
push
or
dec
rcr
int3
sahf
pusha
and
repz
xorl
int
inc
push
mov
dec
aam
sti
sub
xor
imul
sbb
and
or
lcall
push
sbb
jle
xchg
pop
jle
push
cmp
mov
add
sbb
add
sti
adc
int
loopne
scas
add
lock
rcrl
iret
data16
shlb
xchg
inc
push
mov
stos
ja
dec
sti
adc
out
xor
stos
insl
mov
ds
test
ds
rolb
jnp
push
and
push
pop
and
jp
hlt
into
sbb
lods
mov
fistpl
push
push
cmp
push
iret
subl
inc
jb
ljmp
inc
popf
aas
add
inc
pushf
xchg
mov
fsts
rorl
mov
add
pop
sub
je
fsub
in
inc
imul
int3
fsincos
outsb
push
cmp
rcrl
pop
cmp
push
mov
popf
mov
jg
mov
addb
sbb
push
sbb
or
mov
or
into
sub
and
and
js
dec
bound
cltd
data16
cmp
pop
test
push
add
mov
jl
jle
out
jbe
mov
shll
inc
pop
std
jne
aad
in
aam
pop
gs
std
pop
pop
ds
mov
sub
xor
mov
xor
add
mov
insl
xchg
je
xchg
xchg
mov
xchg
fistl
loope
lahf
cli
sbb
pop
fwait
dec
call
repz
push
ret
aam
mov
lea
testl
repnz
mov
mov
orb
pop
mov
cmp
sub
dec
stc
inc
notb
xchg
add
addr16
lcall
add
push
dec
jns
pop
and
sbb
cmp
subw
adc
ret
sub
bound
aas
xor
ss
push
adc
and
addr16
lods
push
sbb
pop
cmp
sub
adc
mulb
xchg
dec
jecxz
inc
or
lcall
ficompl
jbe
divb
lods
js
iret
aaa
jg
jle
inc
cmp
jbe
push
inc
xchg
cmp
add
push
jmp
popf
clc
in
sub
mov
jl
add
jne
dec
pop
fadd
mov
lahf
popa
ret
sub
int3
lea
mov
jg
xchg
hlt
loop
test
xor
leave
filds
lds
loopne
cld
xchg
data16
pop
jns
xlat
out
xchg
pop
nop
and
filds
cs
jne
femms
jb
hlt
sbb
imul
mov
stc
pop
xorl
xlat
inc
mov
enter
enter
cld
rcrb
aaa
movsb
js
push
out
pop
ss
xchg
pop
stos
mov
jbe
jg
fstpt
stos
pop
fisttpl
fabs
enter
rorb
mov
sub
fsubl
mov
push
pop
lahf
cld
push
stos
inc
push
imul
lret
sbb
int3
in
out
add
ret
mov
lahf
mov
int3
je
pushf
ficomps
adc
mov
xchg
fidivrs
mov
out
cmp
mov
inc
xor
xor
data16
clc
andl
xchg
cmp
cmpsl
adc
fmull
push
push
or
mov
mov
push
cmc
nop
aaa
mov
mov
ja
push
mov
or
add
stc
jmp
push
fstps
xchg
popf
add
je
xchg
jae
xchg
pop
mov
test
dec
aam
rol
push
ret
shlb
test
sub
das
jecxz
xor
jmp
sbb
mov
xor
test
inc
mov
mov
js
in
popf
out
fadds
pop
xchg
and
xchg
sbb
shrl
js
movsl
inc
pop
insb
sbb
push
sub
push
pop
push
adc
jecxz
inc
repz
add
and
fisubs
cmp
cmp
lock
cs
sbb
cmpsb
lret
dec
dec
mov
pusha
lahf
mov
loop
stos
jb
pop
clc
pop
stos
dec
fdivl
es
into
jnp
shl
push
loop
gs
push
out
lods
sub
pop
loope
jmp
cmpb
aam
cmc
mulb
clc
jne
mov
das
jne
mov
testb
mov
push
cli
add
and
jb
addr16
movsl
pop
sub
jp
and
sub
and
adc
ss
shlb
inc
cmpsb
cli
sbb
lcall
sub
pop
sbb
inc
inc
sub
call
int
xchg
and
push
mov
mov
imul
or
or
and
icebp
or
sarl
jmp
pop
jl
faddl
cmp
js
fnstsw
add
jge
jno
rcrl
add
sbb
xor
les
cmp
dec
imul
jno
arpl
push
repnz
dec
orl
adc
jl
icebp
cmp
jl
call
push
fistpll
inc
imul
out
jge,pn
lock
mov
test
pushfw
loopne
mov
adc
dec
loopne
inc
add
push
insb
int
jmp
sub
aam
nop
push
clc
adc
movsb
mov
pop
scas
adc
stc
push
xor
dec
sbb
loopne
inc
mov
or
mov
fnsave
imulb
lods
mov
shrl
insb
push
scas
cmp
mov
jne
xchg
jae
gs
mov
ret
pop
mov
sti
mov
test
xor
sbb
mov
inc
in
jmp
mov
loope
push
clc
mov
jmp
insb
clc
push
pushf
mov
aas
cmp
or
add
xchg
loop
aam
adc
cmp
sbb
mov
ret
les
xchg
xchg
stos
aas
or
aam
inc
js
or
test
push
mov
sub
dec
pop
pop
mov
repz
jg
pop
lret
dec
rclb
lcall
lret
jmp
sbb
data16
or
ds
mov
pop
mov
adc
mov
dec
insl
push
ljmp
idiv
movb
fadds
mov
je
aas
enter
rclb
pop
js
lret
pop
jo
fs
adc
mov
stos
stos
jne
adc
test
xchg
xchg
cltd
mov
ds
sub
hlt
lods
and
or
cmpsl
or
ja
push
inc
dec
test
add
adc
les
dec
mov
cmp
movsb
jbe
jle
ret
add
sub
inc
push
in
jnp
lods
mov
pushf
mov
mov
or
ss
or
mov
lds
es
shll
ffree
inc
mov
ja
and
jb
inc
mov
xchg
or
aad
or
cmpb
aam
stc
out
jb
movb
cmp
dec
jmp
lea
movsl
das
fbstp
sbb
lods
int3
inc
pop
mov
inc
lea
fildll
mov
test
cmp
ljmp
mov
mov
loop
shrb
fwait
out
fidivl
adc
imul
sti
test
test
leave
in
jns
mov
js
and
mov
jle
push
push
pop
scas
cmp
sub
fs
mov
jecxz
mov
je
loope
lods
fld
dec
xorl
sbb
add
int
mov
mov
or
fdiv
mov
pop
pop
popa
test
jns
ret
sub
add
decl
lods
sub
mov
fadds
mov
mov
aam
shrb
and
int
mov
enter
data16
pop
pop
adc
jne
add
inc
add
and
cmpsb
jns
and
push
cld
mov
push
xchg
aaa
xchg
je
in
movsl
push
or
xchg
xor
mov
repz
mov
movsb
imul
rcll
roll
cmp
popf
lock
mov
jmp
push
sub
fcoml
jo
xor
icebp
mov
cld
dec
out
mov
dec
push
popa
test
mov
into
rep
imul
adc
mov
negl
fs
and
sbb
push
pop
jl
in
sbb
xor
pop
mov
jmp
out
arpl
aaa
inc
inc
xor
inc
orb
fsubrl
mov
mov
pop
cmp
pop
fcmovne
in
in
fs
mov
stc
out
push
test
mov
adc
sbb
sbb
xorb
sub
out
shll
sub
les
adc
jl
mov
pop
xor
cmp
in
push
ds
push
mov
mov
cmp
sbb
lods
sbb
enter
mov
repnz
push
std
rclb
test
sub
inc
push
nop
sahf
gs
xor
mov
iret
fsubl
mov
shrb
push
cmp
nop
cmp
movb
xor
pop
in
cltd
mov
jae
sub
jmp
shlb
inc
je
pop
inc
cld
insb
xchg
lret
pop
sub
cmc
xchg
std
lock
jnp
movsl
inc
cmp
daa
push
arpl
dec
cmp
pop
mov
subl
imul
fdivrl
stc
push
pop
nop
test
mov
dec
out
xchg
pushf
lret
stc
push
push
loop
into
daa
xchg
movsb
mov
dec
dec
ret
push
outsl
pop
lcall
sbb
dec
pop
das
or
daa
mov
xor
stc
call
dec
mov
aas
adc
push
sub
test
mov
sbb
xchg
cmp
sahf
dec
mov
push
jecxz
inc
xchg
and
or
jp
aaa
out
in
lds
xor
orl
add
pusha
dec
stc
jmp
xchg
jmp
inc
cmp
in
movsl
out
dec
test
stc
mov
ret
aaa
or
push
mov
inc
movsl
ret
jmp
mov
cmpsl
dec
ljmp
sahf
xlat
mov
mov
test
xor
imul
sbb
fists
lcall
das
aas
sbb
loopne
cmp
mov
inc
jo
adc
clc
mov
repz
mov
jmp
jge
sub
jmp
into
xorb
push
or
das
adc
shll
inc
adc
mov
jg
sub
xor
jnp
sbb
xchg
and
cmp
cmp
inc
sub
pop
push
sub
and
sub
mov
fnsaves
adc
filds
mov
sbb
test
out
mov
mov
or
test
lcall
aad
push
push
cmp
jle
and
test
jb
mov
push
repz
aaa
dec
xchg
rorb
pusha
mov
aam
pop
out
dec
pop
daa
inc
pushf
fidivrs
into
dec
inc
adc
mov
ret
bound
xor
fsubrs
add
fisubs
and
rol
push
or
pop
lods
jo
faddl
in
clc
insb
inc
jo
jmp
stos
inc
inc
mov
xor
iret
add
sahf
addr16
mov
adc
lods
stc
pop
or
lds
orb
in
ficoms
stos
push
xor
adc
jb
jg
bound
shrb
in
xchg
push
testl
ss
push
cltd
lret
dec
adc
jns
dec
jge
mov
adc
leave
loope
or
hlt
clc
insl
mov
mov
adcl
cs
add
or
test
mov
out
add
push
pop
mov
jns
pushf
mov
sbb
mov
out
pop
pop
push
sbb
cmp
mov
mov
or
sbb
movsb
outsb
xor
sarl
imul
lods
add
sbb
cltd
jmp
jbe
imul
std
pop
jmp
subb
cwtl
add
cmpb
jp
call
sbb
adc
dec
xor
mov
sahf
jne
decb
push
repz
xor
jmp
push
loopne
cmpsb
fwait
cmovne
movsl
pop
sbb
js
arpl
or
mov
push
negl
lea
cmp
pop
or
bound
sub
outsl
rcrl
lods
cmpsl
add
cmpsl
cmp
dec
into
cmp
jecxz
mov
int
lods
pop
shr
or
call
in
jge,pt
push
jbe
js
dec
mov
xor
sub
sbb
push
scas
mov
decl
jne
das
or
push
jle
push
cmp
and
inc
out
xchg
push
pop
xchg
xchg
enter
js
shrb
repnz
je
dec
jb
push
pushf
push
xchg
fwait
dec
pusha
rcll
rolb
daa
jns
push
pop
outsl
notb
xchg
outsb
cmp
xor
stos
ss
clc
dec
mov
shll
xor
xor
xor
mov
mulb
call
ds
out
inc
scas
iret
push
inc
xor
ret
mov
and
movsb
and
repnz
cmpsl
sbb
inc
sbb
adc
mov
xchg
adc
or
loope
aaa
loop
and
je
mov
cmp
pushf
outsb
xorb
dec
lcall
dec
xor
rolb
mov
bsf
pop
sub
punpcklbw
adc
jp
pop
cmpsb
bound
adc
inc
adcb
in
push
xchg
shr
outsl
leave
mov
jnp
mov
push
rcll
or
and
xchg
jo
sub
in
aas
jle
push
xchg
mov
pop
adc
ljmp
adcb
out
lret
loopne
jl
fidivrl
int
push
push
cmc
movsl
mov
push
xchg
pop
adc
cmp
or
mov
icebp
imul
push
or
insb
sbb
call
mov
xor
and
adc
adc
dec
adcb
xchg
xchg
jns
subl
scas
out
std
shll
lods
hlt
aam
stos
sbb
sbb
xchg
sub
xor
inc
mov
das
xor
sbb
movsl
dec
sub
sub
sub
push
dec
loope
add
cmc
mov
mov
jns
and
mov
jmp
daa
and
mov
cmp
push
jmp
es
mov
mov
jmp
and
push
loopne
int3
or
mov
push
in
mov
push
add
addr16
imul
sarb
test
pop
bound
mov
jb
ret
mov
cmpsl
dec
sub
lahf
shlb
sbb
adc
addb
adc
push
test
xchg
int3
push
dec
add
xchg
mov
hlt
in
pushw
cld
xchg
push
movsb
daa
lret
lea
sbb
fwait
adc
xchg
add
pop
mov
cmc
fmuls
mov
outsl
xlat
push
pop
loope
fisubrl
mov
out
aam
sbb
push
or
test
xor
stos
adc
add
push
pusha
jge
mov
in
in
mov
sub
adc
dec
mov
xchg
addb
out
movsb
sbb
stos
stc
lock
mov
mov
mov
je
mov
push
jne
sub
adc
int
mov
push
mov
decb
nop
mov
mov
imul
adc
iret
sti
fwait
iret
xchg
xchg
push
mov
shll
adcl
lds
adc
psubb
cltd
xchg
and
mov
push
inc
pop
mov
jge
popf
daa
xor
sub
dec
push
push
cmpsb
mov
mov
xor
test
pop
push
mov
stc
arpl
mov
sbb
fimull
cmc
shrl
sub
mov
xor
dec
adc
in
frstor
je
xor
sbb
sbb
adc
lods
cltd
mov
push
xchg
inc
lock
push
sub
sarb
enter
mov
or
test
rorl
ret
cli
test
mov
std
fldl
sbb
xchg
sbb
dec
sub
popf
sub
cmp
add
mov
repz
cmp
test
jecxz
iret
aas
aam
test
outsb
pop
roll
push
xchg
insb
pop
loope
js
or
jl
jmp
inc
xor
or
ret
cmp
ds
lret
dec
mov
dec
movl
cmc
pop
dec
xor
push
gs
leave
mov
jb
std
xchg
push
in
mov
call
or
add
push
mov
arpl
fdivl
push
push
xorl
or
adc
orb
adc
fcoms
push
stc
cmp
pop
xchg
iret
scas
push
test
fistl
pop
addr16
xchg
sahf
aas
dec
mov
ret
push
mull
mov
repnz
test
dec
and
inc
aaa
cltd
dec
cmpsb
jnp
fcmovnu
inc
sbb
sub
sti
pop
clc
repnz
dec
gs
push
int
js
jno
nop
hlt
sbb
scas
loop
pop
bound
push
cmpsl
adcl
nop
jmp
pop
fsubrl
jl
cmpb
inc
jecxz
dec
fidivs
mov
mov
aas
mov
add
int3
loop
loopne
inc
loope
pop
pop
lds
das
inc
popa
stos
or
scas
test
dec
enter
mov
fsubl
mov
aaa
mov
dec
push
stos
arpl
loope
std
mov
mov
rcll
adc
adc
test
int3
jnp
aaa
mov
cld
sbb
imul
jae
add
aam
or
cltd
movsl
faddl
inc
and
stos
jno
jns
fists
push
inc
repnz
mull
xor
loop
je
lea
mov
or
sub
push
adc
fucomip
xor
mov
xchg
cmp
push
ja
mov
or
pop
mov
sbb
xchg
aad
mov
dec
inc
push
shlb
xchg
test
pushf
fstl
sahf
je
lds
dec
mov
adc
mov
pop
pop
out
js
mov
mov
jo
add
jae
mov
insb
mov
leave
cmpb
outsl
xor
push
ss
cmp
xor
imul
rorb
jno
popa
xor
outsb
loop
mov
fildl
cmp
cmpb
shll
pop
rcll
lcall
xchg
fcmovbe
fnsave
xor
out
incl
das
mov
leave
cmp
int3
orb
pop
push
or
lea
into
pop
cmc
push
mov
add
xor
mov
pop
lods
or
push
adc
andl
add
out
aad
xchg
mov
xlat
lock
cmpsl
fnstsw
mov
cmpsl
lock
out
pop
sub
rcr
or
xor
sbb
sbb
pop
mov
inc
push
adc
fsubp
xchg
movsb
mov
xchg
or
gs
add
pop
iret
popf
iret
cmpsb
mov
mov
push
stos
inc
or
or
mov
cmp
std
and
lock
pop
daa
xchg
lods
mov
add
sbb
into
cltd
sub
mov
js
mov
push
adc
inc
in
xchg
and
mov
repnz
out
xchg
mov
mov
in
mov
stos
loopne
lcall
mov
cs
jae
leave
mov
into
movsb
and
out
roll
loopne
add
incl
ret
mov
test
in
sti
sbb
fdivrs
fldt
call
shlb
ljmp
jns
inc
iret
stos
shrl
push
sbb
imul
sub
xchg
scas
imul
fcoml
jb
adc
jmp
in
dec
pop
mov
in
lea
pop
jmp
loope
rcll
jo
mov
push
mov
mov
mov
pop
mov
ja
rcll
jo
loop
push
push
adc
loopne
sbb
div
or
ss
cmc
mov
ret
jge,pn
imull
add
mov
jp
lock
inc
adc
mov
test
jge
in
imul
adc
rorl
inc
jbe
cmp
jo
cmpsl
icebp
inc
push
xlat
dec
push
stos
mov
pop
cmp
cmp
push
pop
jge
adcl
ds
mov
mov
into
nop
push
scas
mov
xor
push
xchg
outsb
shlb
mov
dec
xor
jmp
mull
jae
out
push
adc
mov
into
nop
sbb
pop
xor
sub
das
sqrtps
sub
lahf
and
loopne
jmp
popa
pop
jmp
mov
out
sbb
cli
xchg
pop
and
dec
popf
inc
pop
cmc
jbe
lods
or
pop
outsb
xchg
inc
mov
mov
sbb
andl
stos
sub
lcall
ja
and
pop
jg
adc
out
sbb
pusha
adc
pop
jb
push
enter
inc
push
lret
es
int
mov
jnp
adc
mov
and
lahf
notb
add
push
js
mov
fwait
dec
scas
xor
add
enter
loop
lret
pop
pop
push
enter
adc
pusha
lods
mov
or
jns
jle
aam
mov
sbb
shlb
movsb
dec
add
jmp
cmc
gs
push
fsts
popf
mov
add
push
lret
jg
nop
xchg
dec
jp
js
stc
gs
ljmp
xchg
icebp
pop
pop
in
mov
fnsave
enter
iret
ret
xchg
std
stos
or
in
repnz
xor
ds
pop
rorb
cmpsb
fsubl
insb
xchg
cmp
xchg
push
add
mov
cli
dec
xlat
xchg
mulb
out
mov
dec
adc
xchg
or
sub
mov
push
inc
adc
in
or
cmpsb
mov
negb
adc
addb
push
sarb
outsb
out
fwait
sahf
or
pop
mov
and
shl
outsl
push
and
loope
stc
mov
setb
mov
hlt
xor
and
lods
pop
daa
cmp
inc
aas
and
xchg
or
cmpb
mov
sahf
mov
int
arpl
mov
clc
jno
outsb
xor
stc
cld
and
test
addr16
lea
push
enter
insl
inc
int3
stc
daa
js
pop
cli
cmp
push
xchg
xchg
add
inc
add
enter
xchg
je
inc
add
ljmp
into
fwait
enter
mov
adc
pop
jmp
cmp
xor
xchg
adc
sti
popa
cmp
or
sub
les
movsb
movsl
jmp
sbb
add
inc
in
sub
in
insl
dec
xlat
jg
lods
sbb
stos
lret
mov
sbb
inc
inc
sbb
or
push
in
push
movsb
mov
fbstp
xchg
push
jg
adc
jmp
sub
cwtl
movsb
lret
adc
pushf
test
push
lods
mov
jg
aas
xor
call
push
cmpl
and
pushf
mov
adc
xchg
aas
stos
outsl
sub
push
xor
lret
ret
pop
cmp
or
push
jle
mov
scas
dec
scas
sbbb
inc
push
adc
iret
or
sub
inc
pop
mov
jecxz
sbb
arpl
outsl
jne
scas
sbb
imul
lahf
sti
rclb
inc
jns
repnz
push
xor
int3
lods
hlt
out
mov
and
nop
mov
inc
jmp
xor
dec
adc
mov
sbb
popf
fwait
pusha
cmp
mov
stc
push
add
adc
stos
lret
ljmp
dec
pop
push
ss
fisubrl
jnp
mov
lods
jbe
popa
or
mov
inc
or
sub
mov
dec
je
clc
jmp
push
cltd
sbb
xchg
cmc
jae
xor
xor
les
mov
mov
or
and
imul
enterw
pop
cmp
xchg
sar
lret
cmpl
jge
mov
and
inc
iret
lahf
sub
daa
into
xchg
fsubl
insl
hlt
mov
dec
iret
xchg
jno
sub
dec
negl
daa
mull
shlb
fnstcw
jns
arpl
sub
flds
insl
jo
daa
pop
das
pop
out
sti
mov
ret
andb
xchg
sbb
push
leave
dec
push
cmp
out
adc
adc
push
dec
jae
xor
sbb
mov
loope
les
pushf
ret
stc
push
mov
int3
jno
cmp
out
data16
fwait
clc
pop
xor
jp
cwtl
push
call
or
xor
push
xchg
mov
sub
js
out
cmp
loop
jbe
cmp
xchg
pop
cmp
mov
or
push
out
sbbl
lods
mov
dec
jmp
jmp
add
push
jle
push
push
push
adc
xchg
mov
xor
inc
inc
bound
ret
mov
popf
cmp
ja
xchg
xor
xchg
gs
add
rcl
lcall
cmp
or
ljmp
les
sbb
out
fiaddl
mov
imul
inc
int
aam
push
stos
sti
daa
mov
fiadds
or
jp
pop
or
add
jp
lret
sub
pop
lods
jmp
es
inc
out
test
ds
push
sti
arpl
xor
test
xchg
or
enter
js
mov
push
stos
add
mov
add
shll
daa
js
std
mov
fmuls
inc
push
ss
fildl
aaa
inc
push
dec
push
test
xchg
adc
rorl
dec
sub
add
cmp
repz
sbbb
fsubl
fcomps
inc
xchg
fmul
push
pop
mov
fsubl
inc
mov
and
xor
sahf
xchg
enter
movsl
mov
xor
lock
fistps
sub
lret
das
jbe
in
mov
rol
imul
out
and
inc
inc
and
stc
call
enter
dec
stos
sbb
inc
mov
lahf
sarl
pop
sahf
push
xchg
mov
push
jns
stos
push
xor
jno
clc
dec
out
popa
insb
mov
lods
aas
xchg
jno
js
testl
pop
gs
xchg
nop
and
int3
jno
jge
lds
adc
mov
stos
pop
inc
mov
lods
sbb
mov
push
push
pusha
imul
mov
adc
aas
dec
or
dec
pop
cmp
cmpsb
cmpsb
push
or
aaa
negl
mov
ret
sbb
sti
je
outsb
ret
dec
dec
ja
dec
dec
rorl
mov
xor
push
mov
les
xor
jge
shrl
or
jg
lds
mov
loop
mov
or
pushf
into
sbb
cwtl
mov
add
ja
outsl
sub
xchg
push
xor
mov
imul
cmp
adc
js
gs
imul
lret
add
sub
dec
stos
jno
es
push
dec
cli
mov
mov
stos
mov
repz
mov
outsl
aam
push
xchg
gs
iret
inc
or
sub
lahf
scas
fmuls
jp
mov
adc
test
mov
lea
cltd
mov
push
push
pop
sarl
test
icebp
mov
fisttpll
rcrb
jbe
mov
xchg
dec
cmc
and
and
les
adc
les
xchg
cltd
push
jmp
scas
stc
jb
test
nop
ds
test
addl
xchg
xor
sar
sbb
xor
shlb
jl
dec
decb
pop
add
sub
and
jo
push
call
pop
repnz
repnz
lods
idivb
xor
push
test
and
sub
xchg
push
jge
ds
adc
andl
popa
adc
out
add
mov
imul
outsl
pusha
xor
push
dec
xor
add
jno
sub
mov
xor
outsl
shl
fisubs
arpl
cltd
fimuls
out
pusha
adc
pop
shlb
pop
incb
lret
insl
fs
fisubl
push
andb
xchg
leave
push
pop
lahf
fsubl
movswl
outsb
push
das
pop
loop
mov
push
scas
dec
clc
shl
popf
flds
pop
xchg
in
lods
mov
xor
nop
jmp
hlt
push
insb
rclb
or
add
push
sarl
pop
inc
in
test
sahf
mov
mov
test
call
call
dec
dec
aaa
movsl
test
sbb
cmp
push
push
pop
xchg
dec
mov
ljmp
and
subb
dec
dec
mov
fwait
jnp
add
and
cmp
push
mov
adc
dec
mull
jle
adc
in
push
inc
adc
push
movsb
mov
mov
inc
test
movsb
sti
add
mulb
fcoms
jb
fmulp
lods
fildl
call
xchg
bound
dec
cli
and
divl
push
scas
pusha
cmp
scas
dec
inc
jae
and
leave
loope
andl
add
inc
push
mov
mov
repz
dec
add
mov
add
je
sbb
dec
sarl
outsb
repnz
jb
in
jle
inc
bound
fcoms
dec
cmp
jecxz
push
pop
out
lea
xchg
mov
sub
gs
js
pop
add
aaa
stc
loope
push
pop
mov
dec
push
push
in
pop
std
cmp
rclb
xchg
mov
and
inc
push
add
jp
dec
inc
xor
inc
mov
dec
push
aas
das
repnz
das
or
mov
mov
push
jecxz
jmp
fnclex
inc
ds
subl
mov
mov
lock
sbb
sub
xor
fistpl
aaa
sub
add
or
bnd
adc
mov
adc
push
mov
mov
popa
leave
std
cmc
ret
popf
call
add
aad
xor
pop
add
dec
inc
stc
lcall
cmp
xor
iret
sub
sub
mov
int3
lcall
push
xor
andl
jle
mov
out
inc
xchg
cmp
or
sub
sbb
push
ss
testl
inc
shlb
lret
cwtl
sbb
inc
adc
aas
inc
fwait
das
xchg
cmp
cmp
daa
insb
scas
xor
enter
or
bound
dec
sarl
jns
out
imul
cmp
mov
mov
dec
ss
push
fnstsw
cld
loopne
cmp
test
jle
lods
add
out
sbbl
and
ds
xchg
xor
std
jmp
mov
scas
cmpsl
aad
inc
xchg
out
xor
cmp
xchg
xchg
add
mov
xchg
pop
xchg
adc
fcom
add
and
fwait
int3
jge
or
lcall
mov
sbb
or
mov
outsl
sub
xchg
xchg
aas
pusha
icebp
sbb
adc
fcompl
sti
jbe
rcll
sahf
pop
out
mov
pushf
jecxz
dec
mov
mov
mov
jmp
es
jb
ds
stos
push
jge
add
shl
xchg
ret
push
pop
jecxz
cwtl
notb
mov
jmp
sub
dec
mov
ss
fs
add
sti
insl
insb
add
mov
mov
mov
jle
jl
decl
dec
pop
cld
xor
xchg
dec
es
pop
movsl
fstl
pop
dec
add
lock
or
jno
cmp
inc
test
adc
xchg
pop
xchg
sbb
std
mov
add
pop
stos
sbb
push
push
add
xchg
js
out
aas
sbb
sbb
sub
orb
incb
shr
or
out
sub
cmp
xchg
syscall
add
cltd
or
mov
mov
dec
adc
add
popf
cmp
test
invd
ljmp
add
inc
xor
jmp
in
and
push
mov
xchg
sbb
fwait
cmp
in
push
and
fsqrt
jbe
loop
aam
xlat
and
cli
mov
pop
sbbb
adc
aam
inc
repz
iret
and
out
fstps
in
les
inc
pop
cmpsl
movsl
mov
adc
jmp
in
ret
add
ljmp
aaa
xchg
pusha
pop
outsl
push
pushf
cmc
test
pop
lahf
shrb
push
xor
les
cmp
sbb
aaa
leave
out
sbb
jge
das
lods
stc
pusha
mov
fbld
push
mov
movsl
int3
lods
ja
fildll
add
jge
cmc
xor
dec
cs
xchg
repnz
ret
sbb
sub
pop
xchg
sbb
add
cmp
loopne
and
sub
push
add
mov
add
cmp
hlt
shlb
jmp
dec
mov
pop
shl
aas
jp
fnstenv
lahf
lock
in
jmp
pop
jbe
mov
rcl
fs
sbb
sub
lods
lods
jbe
jo
or
add
sti
push
inc
push
push
fdivr
lgs
jp
inc
test
dec
daa
add
addr16
imul
ja
add
sub
dec
lret
jno
mov
ret
inc
ljmp
imull
xchg
scas
lret
add
sti
dec
jp
es
lret
jl
sub
xlat
push
and
cmpsl
stos
insb
and
pop
or
jo
outsb
cmp
in
or
ret
pop
js
mov
push
or
iret
aaa
or
sti
leave
adc
inc
mov
mov
adc
fimull
sbb
mov
jle
xor
jmp
orl
insb
sysexit
fistl
xor
scas
movsb
mov
in
out
jmp
or
mov
dec
push
mov
jbe
dec
inc
fisttpl
repz
movsl
sahf
mov
imul
adc
inc
push
into
xor
in
mov
lret
pop
pop
pop
xchg
dec
sti
push
cmpsl
jne
ss
mov
and
test
and
popa
adc
out
sti
inc
jecxz
imulb
or
and
jp
jb
int3
jno
push
mov
sbb
mov
sub
inc
shrb
test
pop
xchg
clc
in
bound
xchg
xor
fwait
shl
mov
and
jl
js
jl
ljmp
gs
test
cmpsl
cmp
push
push
inc
sbb
jge
jns
lods
push
ret
icebp
data16
test
xlat
sub
out
in
sbb
jle
mov
and
fwait
lret
sbb
and
lahf
push
inc
pop
aas
scas
add
cmpsl
jmp
cmp
and
mov
in
sysret
jg
mov
or
sti
mov
aam
out
inc
aad
cmpsb
stc
cmpsb
jp
cmp
insb
out
dec
scas
in
out
incl
jmp
lea
sub
movsl
out
dec
hlt
lret
xchg
inc
jmp
cmp
iret
xchg
add
cwtl
cmp
shll
cmp
push
push
aam
sub
cmp
mov
lock
cwtl
pop
adc
xchg
leave
imul
ja
adc
xchg
filds
sbb
push
mov
add
cs
jo
push
nop
imul
mov
add
dec
movsl
arpl
adc
jno
push
fsubrs
xlat
dec
inc
jp
sbb
inc
test
mov
inc
aaa
pusha
in
aad
ror
push
mov
xor
test
clc
mov
inc
out
push
pop
adc
jle
xchg
int
inc
pusha
add
inc
and
inc
sti
test
int
jl
mov
ficompl
push
cmp
shr
pop
xchg
in
push
out
mov
inc
dec
bound
mov
inc
xor
mov
pop
cmp
test
lahf
shrb
out
mov
mov
mov
jo
repnz
andl
jmp
in
pop
lret
xor
dec
fwait
xchg
xor
rorb
push
sub
dec
mov
mov
adcb
jle
cltd
iret
insb
cwtl
movsl
mov
dec
stos
push
jbe
sbb
mov
lahf
stc
mov
push
xchg
mov
add
test
xchg
popf
enter
pop
xor
add
or
call
sbb
rol
pop
dec
mov
sub
pop
jb
pop
rol
xchg
adc
lret
sahf
outsb
rdtsc
sbb
nop
pop
js
pop
rcr
popa
ja
adc
adc
mov
mov
and
fdivrs
xor
cmc
iret
push
fidivrl
cmove
mov
sub
xor
inc
pop
std
pop
mov
imul
dec
cmp
pop
inc
fs
or
push
cmp
mov
mov
sbb
adc
adcl
xchg
imul
xchg
int3
sub
test
rclb
popf
cmp
jnp
dec
push
jae
icebp
xor
mov
add
rcrl
xor
stc
cmpsl
jg
add
ja
jecxz
xor
mov
mov
loopne
or
out
sbb
lea
sub
addr16
jge
leave
or
rorl
jl
scas
jns
sbb
jns
cmpsb
fwait
js
sub
mov
pop
inc
popf
or
jbe
lret
xchg
mov
out
scas
cs
jae
sbb
add
add
cmp
or
pusha
ret
jl
pop
mov
add
or
insb
ret
ret
and
xchg
iret
cs
fnsave
lods
divl
loope
loop
add
dec
dec
push
pushf
daa
sbb
cmp
cmp
mov
int3
fimuls
daa
imul
shlb
je
leave
ja
xor
inc
mov
mov
in
inc
test
popa
pop
inc
data16
mov
jo
adc
enter
aaa
mov
xor
hlt
or
lret
cltd
pop
jbe
mov
das
int3
js
adc
push
imul
outsb
insb
popf
aas
dec
fmul
hlt
or
pop
jg
sub
les
push
jge
fistps
lea
jge,pn
and
sbbl
mov
or
std
push
ret
inc
mov
popf
aas
xlat
xchg
add
ds
pop
rcrb
mov
in
xchg
and
mov
jo
and
stc
xchg
push
cmpsb
movsb
or
shlb
adcl
loop
mov
and
fmul
cmp
in
mov
and
in
lret
lods
xlat
loope
int3
js
in
jns
xorb
dec
imul
out
addb
test
inc
aad
mov
add
cmpsb
hlt
jl
frstor
xor
mov
cld
adc
mov
xchg
popa
jmp
mov
push
ja
gs
inc
stos
mov
outsl
lds
out
fmul
sub
scas
jg
stos
dec
mov
pop
jo
add
mov
insb
push
fnstsw
ljmp
add
fstpl
psubsb
fwait
sub
rorl
addb
lret
sub
dec
test
mov
icebp
int
shlb
loop
pop
or
in
inc
add
in
mov
stos
js
insl
dec
sub
dec
pop
ja
push
int
jp
sahf
pop
sbb
cmpsb
hlt
ds
push
stos
xchg
sub
xchg
rorb
or
call
popa
and
and
push
jecxz
inc
movsl
outsl
inc
sbb
fistpll
incl
fwait
ret
jle
jl
xor
push
insl
jo
hlt
or
xor
xchg
enter
jnp
push
lea
pop
dec
push
sub
js
lcall
push
sbb
in
dec
pop
ds
daa
push
cmp
add
aam
mov
adc
ret
out
shll
cmpsl
pushf
rcl
push
sbb
scas
enter
cld
and
cld
sbbb
dec
sub
cs
ds
xchg
mov
enter
jbe
sub
inc
cmp
lds
mov
in
sbb
int3
mov
into
shrl
adc
adcl
sub
inc
shll
scas
jmp
push
cmpb
and
inc
adc
imul
sub
lret
jbe
fiadds
push
sub
lret
jae
mov
mov
cltd
fidivrs
repnz
cmp
or
dec
fiadds
sti
cmp
orb
dec
fwait
jle
jp
das
sub
jne
sti
mov
in
loop
stos
nop
adc
hlt
sbb
fs
sbb
cmpsl
sti
imul
testb
fsubrl
push
jns
sub
pop
popf
sbb
cwtl
imul
testb
in
and
xlat
inc
or
in
pop
lret
fdivp
push
mov
pop
loop
out
adcb
dec
jl
ret
add
inc
js
push
jo
dec
insb
fnstcw
repz
in
test
and
jae
das
inc
mov
or
jnp
out
mov
arpl
xchg
icebp
pushf
mov
push
add
popf
lods
mov
pop
pop
std
ficomps
adc
rorl
dec
cmpsl
subb
leave
mov
frstor
mov
cmp
push
mov
imul
leave
mov
mov
cmpsb
pop
inc
cmpsb
pop
ret
test
arpl
das
popf
jecxz
int
jle
xchg
xchg
xchg
adc
andl
xchg
fcoml
ret
push
sbb
mov
imul
aaa
xchg
enter
fldcw
js
sbb
jle
leave
add
sub
jge
sub
out
fsubrs
cmpsl
inc
and
dec
or
push
les
in
dec
pop
xor
jo
mov
mov
fxch
mov
mov
js
sub
or
rorb
inc
stc
adc
mov
push
inc
and
push
mov
or
inc
int
stc
orb
stos
fcmovnbe
jns
cltd
in
outsb
add
jle
or
shll
pushf
mov
and
jb
fnstsw
mov
adcl
out
and
mov
icebp
les
pop
aam
leave
loope
out
mov
mov
imul
rcrl
dec
mov
push
lods
pusha
cmp
popa
jbe
jg
sub
cmp
fmuls
jnp
push
pop
ss
aad
xor
iret
repnz
pusha
ret
jo
aaa
pop
adc
mov
or
sbb
or
jne
andl
xchg
xor
cmp
cltd
or
int3
add
adc
and
ds
jo
inc
mov
mov
pusha
inc
fsubs
and
faddl
inc
ficompl
and
adc
cmp
sbb
fdivl
jle
nop
xor
xchg
sub
mov
cmp
out
dec
jecxz
sbb
js,pn
xchg
sbb
add
xor
xor
mov
fs
inc
aam
cmc
mov
cwtl
push
int3
sbb
and
test
test
sbb
dec
subb
pusha
test
xor
xchg
inc
or
pushf
aam
add
sti
mov
xlat
jns
jle
les
cmp
scas
sbb
lock
or
add
ret
or
ja
pop
test
add
loope
ret
adc
push
clc
std
inc
fs
sub
in
lret
xor
stos
sbb
shl
data16
mov
lret
and
movsl
cmpsl
data16
arpl
mov
push
leave
mov
jmp
adc
jle
dec
add
adc
shrl
popa
imul
ror
cmc
xor
inc
and
and
lret
inc
and
and
adcb
jno
xchg
add
mov
jmp
lods
std
js
dec
es
js
mov
jge
or
int3
pop
les
sub
xchg
ds
mov
jne
sahf
push
push
adc
sub
xchg
push
mov
repz
inc
aad
jbe
jp
add
outsb
scas
jno
fimull
xor
in
mov
test
pop
ljmp
mov
outsb
shl
movsb
rcrl
cmp
jecxz
insb
or
xchg
pop
or
lods
lods
push
add
filds
cs
lcall
dec
sbb
jb
lods
and
jo
jbe
popf
mov
sbb
inc
xorl
mov
aad
xchg
outsl
aam
mov
mov
out
stc
pop
lock
fwait
xchg
pop
mov
aaa
addr16
in
dec
push
stos
cmpsb
jg
or
jnp
std
push
jle
sub
cwtl
test
mov
stos
cmp
push
fs
in
fsubl
psllq
std
rcll
xlat
mov
test
repz
adc
adc
sub
into
pop
xchg
mov
push
mov
insb
sub
fcoms
rcl
pop
push
xchg
dec
bound
mov
jno
cmc
loop
jge
or
dec
roll
cwtl
addb
iret
xor
orl
jno
add
sbb
xchg
ret
imul
mov
loope
pop
push
mov
mov
js
data16
in
push
icebp
xor
out
push
add
push
movsb
xchg
mov
push
shrl
sbb
bound
pusha
aad
fwait
ljmp
pushf
xchg
aaa
int
pusha
pop
sub
and
adc
ss
or
pop
loope
mov
mov
andl
testl
ret
add
pop
div
xchg
ss
shrb
mov
leave
arpl
imul
loop
test
das
daa
inc
and
ret
orb
das
fldenv
jmp
aam
aaa
sub
insb
test
add
adc
inc
sbb
sahf
dec
test
jg
repnz
loopne
adc
stc
xchg
mov
push
int
xchg
aad
cmp
cmpl
sbb
mov
mov
movsb
pop
jns
movsl
es
adc
into
pop
dec
adc
inc
ret
sbb
jmp
sbb
or
cli
enter
mov
dec
sbb
int
adc
bound
mov
hlt
cmc
jae
inc
inc
in
pushf
sub
scas
icebp
mov
inc
popa
xchg
test
xchg
jns
push
std
xchg
mov
xor
mov
fdivr
je
xchg
int3
les
cmp
cmp
xchg
lcall
int3
jnp
lcall
cmp
mov
clc
inc
inc
lahf
xchg
mov
cmc
inc
in
fwait
mov
mov
jmp
pop
pop
aam
sbb
je
idivl
test
or
cltd
jecxz
ds
rcll
jmp
and
and
ljmp
cs
xchg
fnstenv
and
jmp
and
mov
out
sub
lahf
mov
rdtsc
fsts
popl
loope
mov
lock
mov
in
sbb
jne
xlat
dec
or
adc
in
repnz
arpl
imul
in
jne
cmp
rcr
enter
fucomi
mov
push
aaa
stc
adc
xchg
fwait
lds
mov
cltd
cld
jns
xlat
xchg
sahf
jne
xchg
xor
movsl
imul
mov
test
pop
mov
scas
data16
sbb
push
lock
jne
lock
jo
shrb
testl
inc
jp
sbb
adc
jne
push
jae
push
xchg
aaa
shlb
insb
cmp
test
dec
sbb
pop
stos
inc
ret
insl
fwait
xor
pushf
dec
mov
push
cmp
sub
mov
shlb
push
out
jae
mull
into
popf
pop
into
fnsave
repnz
seta
das
sarl
pop
sub
mov
fs
mov
test
xor
leave
gs
dec
pop
add
or
push
dec
cli
cltd
test
movsl
inc
enter
pop
rol
sbb
adc
loop
shl
adc
dec
cmc
enter
gs
xor
sar
out
sub
xchg
movsb
mov
inc
lods
push
sbb
cmp
fidivrs
lods
push
pop
jge
cs
xchg
adc
aad
xlat
into
mov
dec
popa
push
sbb
test
mov
push
mov
or
push
add
jne
inc
mov
and
loope
das
lahf
push
icebp
cmp
xchg
imul
mov
cmp
xlat
jge
addb
inc
cmp
push
push
or
sbb
push
sbb
inc
fdivrs
rolb
dec
scas
movsl
jae
ret
das
push
cli
jns
cmp
rclw
stos
cmpb
shll
pop
lret
in
rcr
dec
outsb
and
xchg
push
sub
xchg
push
jb
sbb
fimull
jo
sti
or
lods
jle
pop
enter
cmpsl
je
popa
inc
mov
xchg
aaa
scas
xchg
push
and
pusha
push
dec
clc
sub
mulb
sub
scas
fiaddl
fcomps
mov
popf
xor
mov
xchg
in
out
repz
push
stos
mov
xor
mov
mov
sti
adc
dec
bnd
xor
cli
fs
and
inc
lods
jp
push
add
ja
std
insb
movsl
pop
int3
jne
push
fisttpll
js
push
lea
adc
inc
mov
aaa
or
aad
fmul
gs
movsb
jge
loope
dec
add
sub
pop
data16
test
xchg
add
xchg
loop
mov
jno
and
clc
loopne
lods
outsb
or
sbb
mov
ja
dec
mov
adc
pop
mov
cmpsb
js
and
ds
dec
rcll
ficoms
repnz
fnstenv
cli
jo
call
insb
test
or
sbb
xchg
mov
mov
in
out
data16
pop
out
sub
push
xchg
inc
iret
out
dec
sbb
mov
sbbl
sbbb
push
mov
add
cmpsb
jns
sub
stos
jp
dec
push
jle
imulb
ret
jmp
rclb
mov
jle
rcll
dec
adcb
mov
cmp
mov
mov
xchg
ret
adc
and
aas
test
adc
iret
ss
aam
pop
call
jo
mov
sbb
mov
in
push
pop
popa
dec
insl
fprem1
rcl
push
adc
jb
cli
aam
pop
decl
repnz
mov
jl
pop
ret
xchg
and
sub
and
dec
xbegin
lds
fistl
sbb
push
sbbb
sub
xchg
fs
xor
movsl
pusha
push
fstps
aad
push
or
cmp
adc
cs
stos
repnz
arpl
cmp
dec
or
pushf
mov
adc
mov
jne
imul
testl
jmp
fimull
faddl
icebp
jle
add
inc
aam
int
adc
ret
pop
mov
aad
imul
and
ja
popa
mov
cltd
movhlps
jle
cli
rcrb
les
push
cli
repnz
cmc
cmp
sbb
inc
aam
sub
mov
mov
out
in
push
lret
or
cmp
dec
inc
mov
xchg
or
movsl
and
mov
lds
mov
popa
enter
cmp
jmp
mov
pop
jle
fwait
inc
int
jo
int
add
add
add
lahf
mov
and
in
ss
out
and
jo
add
adcl
adc
gs
enter
andl
daa
jg
shrb
test
xchg
test
pop
and
fnstsw
add
icebp
add
mov
rorb
scas
and
or
jnp
ds
fcom
test
push
in
sub
clc
push
jbe
adc
or
mov
sbb
jno
test
addb
pop
sahf
test
push
jle
fisttpll
sbb
mov
and
aas
stos
cmpsb
iret
add
jmp
mov
mov
ljmp
push
int3
inc
stc
xchg
jmp
stos
int3
clc
adc
fcoml
cli
sahf
mov
imul
mov
bound
push
pop
cwtl
jne
arpl
ret
ret
push
lret
xor
push
mov
mov
mov
das
repnz
inc
cltd
xlat
jg
loopne
and
mov
dec
enter
sub
mov
or
dec
repz
ret
or
cmpsb
mov
inc
ret
stc
xor
adc
add
test
push
jns
cmp
dec
fwait
sub
repnz
out
rcrb
and
aam
ret
movsb
arpl
pop
push
mov
adc
notl
in
lret
insl
inc
mov
nop
mov
frstor
mov
lods
jnp
ds
push
outsl
mov
adc
popa
push
mov
fildl
push
icebp
or
loop
jo
in
cli
mov
pushl
and
lock
ret
lock
add
push
mov
inc
sub
roll
ljmp
mov
lea
in
jno
int
aad
lret
out
mov
pop
test
dec
lahf
sbb
pop
push
imul
cld
test
mov
add
hlt
ds
push
cmp
in
hlt
inc
fsubrp
push
mov
pushf
cmp
imul
movsl
or
sti
sub
sbb
in
cmpsl
scas
xor
jg
shrb
and
outsb
sar
lods
mov
add
les
pushl
jae
mov
jmp
sahf
mul
xor
and
jle
pop
pusha
je
and
in
cmp
pop
movsl
push
mov
mov
iret
mov
dec
add
pop
xor
mov
dec
stos
mov
lahf
scas
xchg
jb
int3
fistpl
mov
or
and
sub
pop
pop
inc
and
ds
or
test
rcr
stos
scas
xchg
outsb
jecxz
add
dec
pop
nop
xchg
mov
movsb
xchg
in
filds
pop
in
popa
pusha
mov
in
xchg
dec
xchg
int3
ret
lock
rcrb
pop
imulb
jo
imul
leave
lods
mov
sub
std
push
and
sub
xor
adc
pop
and
add
outsb
gs
lcall
push
mov
loopne
pop
lods
orl
or
pop
out
push
sti
mov
jl
inc
stos
frstor
andl
lcall
mull
add
sub
lea
addr16
in
pop
xchg
jno,pn
mov
loopne
push
addl
inc
mov
out
sti
push
add
jp
sbb
dec
xchg
repnz
ds
sbb
push
nop
out
xor
lds
cmp
data16
push
jb
pop
mov
sub
dec
pop
hlt
icebp
lahf
add
jecxz
sub
and
bnd
adc
xor
mov
xchg
movsb
ljmp
push
out
lret
in
inc
sarl
xchg
and
fs
cld
out
dec
push
ja
mov
xchg
mov
xchg
xchg
testb
push
mov
cs
push
jg
lret
imul
mov
cmpsl
jmp
mov
loopne
cs
popf
dec
imul
enter
mov
push
iret
mov
inc
repz
jno
cmp
pop
das
lret
lock
aaa
cmp
sub
push
add
or
out
mov
adc
leave
pusha
out
inc
ljmp
add
daa
push
jae
int3
leave
sbb
mov
add
cltd
loopne
xchg
xor
pop
xor
enter
inc
sbb
imul
push
aaa
jmp
inc
adc
dec
je
nop
in
out
or
or
mov
andl
jns
inc
mov
fsubr
pop
adc
cmp
sub
xchg
cld
dec
push
test
xchg
pop
mov
sbb
loope
cmpsb
inc
mov
insb
xor
test
movsb
xchg
and
push
nop
pop
adc
fimull
adc
adc
xchg
xor
add
stos
test
xchg
inc
fdivrl
pop
push
jle
sub
ja
jbe
cmpsl
pop
aas
pop
pushf
jmp
add
sbb
addl
mov
fiadds
and
mov
test
cmp
test
pop
add
add
mov
in
cmp
neg
lea
pop
les
inc
ds
adc
ds
xchg
xchg
cwtl
mov
pusha
mov
pop
lret
xchg
lods
fld
pop
add
std
lcall
pushf
inc
sub
mov
inc
jnp
mov
cmp
jp
mov
mov
hlt
xchg
adc
cmc
fimuls
and
xor
inc
xor
mov
push
lods
cli
cld
das
andl
ljmp
insb
and
in
movsl
call
stc
fwait
movsl
adc
rol
popf
cwtl
mov
lea
inc
rolb
outsl
into
push
push
xchg
xchg
flds
test
mov
mov
ljmp
scas
mov
movsl
and
into
and
shll
jb,pt
cmp
sub
xor
mov
outsb
jecxz
dec
std
pushf
rclb
movsb
jno
pop
xlat
dec
or
add
fxch
adc
add
outsl
cwtl
sahf
loopne
dec
cli
mull
sub
imul
sbb
push
and
loopne
jecxz
ds
push
push
ss
mov
sbb
or
bound
outsb
out
or
or
sbb
dec
fcoml
test
cmpsl
aas
filds
lcall
inc
cmc
pop
xchg
mov
cli
ljmp
mov
sar
dec
mov
add
xchg
fisttpl
pusha
cmp
jnp
xlat
jle
out
mov
lcall
and
or
in
xor
ret
lret
xchg
dec
pop
mov
rcl
mov
cs
pop
ficoml
movsl
leave
sbb
stc
aas
ret
mov
or
sbb
mov
xlat
nop
faddl
jp
jmp
fisttps
dec
mov
adcl
or
into
call
inc
adc
fdivs
fsubrs
sbbl
inc
aas
leave
jne
jge
mov
or
insl
mov
sbb
orl
lods
adc
iret
mov
xchg
sub
lahf
jno
out
fnstcw
lea
lea
insl
cld
test
test
or
nop
mov
loop
lret
adc
adc
in
jae
xchg
fwait
js
jne
movsb
inc
jo
mov
pop
movsl
mov
les
out
or
aas
dec
xchg
nop
or
lret
sbb
adc
imul
cmpsl
xor
inc
pusha
xchg
aaa
xchg
add
int
out
or
pop
jae
rclb
jno
inc
data16
xchg
sbb
cmp
sbb
nop
xchg
shrb
fldt
jne
je
stos
cld
pop
imul
ret
jne
adc
inc
and
arpl
nop
shrl
inc
pop
xchg
mov
sub
xor
mov
jae
roll
repz
and
dec
push
cmp
aad
int
inc
pop
fnstsw
aas
adc
into
fistps
add
ret
jne,pn
ds
cmp
pop
mov
int
lock
xchg
adc
mov
push
xchg
dec
push
inc
mov
mov
push
ds
icebp
and
mov
lret
cli
sub
movsb
fs
hlt
in
pop
aas
mov
into
enter
repz
dec
mov
vmaxsd
inc
jae
idivl
repz
mov
lahf
dec
je
fld1
loopne
mov
outsl
and
inc
movsb
xor
xor
mov
lahf
push
or
ja
and
dec
cld
fdivrl
xchg
adc
ret
dec
mov
stos
push
inc
mov
cmpb
sbb
insb
scas
push
mov
cmp
jg
jl
or
lods
out
lea
lods
in
xchg
adc
subb
dec
fisubs
pop
mov
dec
jae
push
jge
push
mov
or
dec
inc
jle
pop
std
lods
js
push
movsl
daa
icebp
fst
sub
mov
out
orb
adc
mov
fdivl
stos
cmp
sbb
inc
xchg
xlat
outsl
mov
leave
in
in
repnz
adc
out
push
push
adc
jl
mov
mov
rcll
and
fwait
xchg
mov
and
fs
fwait
lcall
popf
adc
bound
sub
xchg
cli
pop
fdivrl
xchg
xor
subb
dec
pop
xorb
ret
sahf
test
jmp
xlat
scas
loopne
cld
mov
pop
sbbb
inc
iret
mov
stos
xchg
imulb
je
mov
fwait
hlt
test
and
and
adc
sarl
in
loopne
in
or
mov
mov
or
les
inc
sti
dec
mov
pushf
dec
cmpsb
cmp
pop
pop
popa
adc
imul
loope
mov
xor
int
fimuls
pop
stos
xor
test
stos
dec
add
xor
frstor
or
jp,pn
mov
inc
je
jge
cs
sbb
int3
fisttpll
sbb
xor
test
add
je
inc
in
imul
into
xchg
cs
pop
inc
negb
inc
xchg
adc
and
aaa
out
xchg
rorl
ljmp
pushf
aaa
subl
dec
ds
int
and
imul
clc
or
fstl
ljmp
imul
mov
out
xchg
inc
dec
or
xchg
xor
es
arpl
push
dec
push
das
xchg
cmc
xchg
frstor
out
fldcw
aam
mov
sti
pop
jl
jno
std
ret
adc
mov
inc
popf
cli
dec
shlb
mov
test
movsb
outsb
push
push
or
das
test
es
inc
or
pop
imul
aaa
or
test
inc
icebp
jle
jbe
das
negb
ja
add
aam
mov
data16
mov
shlb
lahf
jl
jns
lret
lock
cmc
hlt
out
aas
and
popa
jecxz
jb
in
push
dec
push
mov
push
mov
pop
ljmp
pop
sub
inc
stos
stos
or
add
iret
jle
je
out
pop
insl
dec
push
inc
mov
pop
cmp
stos
add
test
adc
sbb
jo
jmp
repnz
int
in
call
push
stos
mov
mov
aad
aam
enter
test
daa
cmpsl
loop
jb
cld
adc
sub
out
movsl
divl
sub
push
pop
sti
pop
xor
lock
movsl
xchg
int3
and
mov
dec
std
sbb
push
xchg
jae
shll
popa
mov
mov
lea
inc
mov
daa
shlb
mov
mov
pop
rorb
nop
cmc
dec
or
fcomps
adc
fadds
push
cwtl
aas
lahf
push
xchg
inc
mov
shl
or
pop
lods
mov
dec
repz
ret
cmp
out
out
adc
loopne
sub
xor
mov
push
fidivrs
lret
pushf
adc
adc
pop
loopne
rolb
push
inc
sbb
xchg
and
mov
mov
js
push
or
push
sbb
xchg
push
jo
push
loope
or
ss
ds
repz
fsts
dec
push
xor
clc
mov
stc
arpl
scas
sbb
mov
andb
adcl
xchg
in
cmp
adc
bound
filds
mov
adc
insb
push
roll
addr16
xchg
or
adc
cmp
lret
hlt
fs
jno
pop
push
push
sub
lods
test
scas
add
rcrl
mov
cmp
push
mov
pop
cmp
dec
int
mov
aad
cmc
cmp
push
mov
xorb
int
or
in
cltd
stos
sbb
fldl
add
rorb
pop
icebp
cld
daa
xor
shll
adc
repz
and
out
inc
cmp
fwait
jne
rolb
sub
fiadds
addl
leave
cmc
insb
int3
imulb
insl
mov
in
out
or
shll
bound
sbb
cld
sub
mov
rolb
rcrl
inc
or
jno
clc
je
and
jg
mov
sarb
in
jno
mov
xchg
dec
xchg
push
push
xchg
out
adc
lret
imul
pushf
imul
jnp
pop
js
jmp
cmp
sub
push
out
adc
add
jle
pop
in
sbb
xor
push
push
cwtl
pop
adc
gs
loopne
mov
xchg
ljmp
out
push
pop
sahf
xchg
int
call
jne
pmulhuw
jne
mov
mov
mov
call
aam
mov
sbb
push
ficoml
xchg
mov
xchg
imul
fiaddl
inc
sbb
rolb
into
lahf
add
call
test
data16
push
adc
int3
lcall
push
sti
and
fisttpl
shlb
popf
push
mov
and
push
clc
cwtl
pop
gs
push
xlat
jb
data16
ret
add
xorl
sub
or
mov
sbb
enter
lock
enter
movsb
mov
and
arpl
popf
cmp
aad
movsl
xlat
outsb
push
in
ljmp
adc
je
mov
cs
push
dec
pushf
mov
cmp
push
nop
pop
fidivrs
nopl
fisttps
arpl
sti
lods
mov
cmp
jl
ret
je
pop
ret
adcb
mov
outsb
dec
sbb
movsb
sarb
jp
or
pop
insl
cmp
pop
lret
test
jge
mov
dec
ljmp
xchg
jp
and
nop
push
pop
mov
clc
aas
or
mov
pop
mov
inc
les
mov
or
mov
mov
ss
cmpsl
inc
call
xor
imul
cs
orl
movsl
jecxz
cmpsb
in
dec
icebp
push
mov
std
dec
js
cs
int
movl
adc
dec
push
aad
imul
shll
push
cmp
mov
jbe
or
outsb
or
xor
add
cld
or
bound
mov
inc
and
inc
jno
repnz
sub
add
cmp
stos
sti
xor
cmp
pop
or
dec
insl
loop
and
and
xchg
inc
xor
in
loopne
mov
push
xchg
pop
outsl
nop
mov
and
mov
call
push
ror
mov
or
mov
and
jb
pop
lods
dec
push
or
mov
lret
and
loop
inc
pop
mov
pop
dec
push
inc
or
stos
leave
daa
fldenv
jb
mov
aaa
movsb
jg
mov
add
adc
jns
pop
cmp
inc
xchg
jge
jnp
sbb
popf
xor
push
xor
cmpsl
addb
popa
mov
lods
insl
xchg
push
sar
fildll
shlb
xchg
call
sahf
sbb
pop
cmp
sarb
jbe
fsubr
stos
repz
mov
push
sub
adc
mov
sub
and
in
pop
sbb
scas
xchg
sbb
in
fs
and
push
gs
inc
mov
fwait
ljmp
pop
adc
or
ret
cmp
sbb
hlt
xor
jae
dec
jae
mov
test
arpl
cmp
cwtl
cmp
add
inc
call
call
test
lret
sub
sbb
or
lahf
cmp
mov
xor
or
out
rorb
mov
lock
push
movsl
push
call
sbbb
dec
xor
push
loope
cmc
xchg
cmpsl
es
mov
dec
add
mov
mov
push
push
aad
add
add
cmp
sbb
sbb
or
cwtl
pop
es
pop
lcall
sub
pop
fs
cmc
jns
lcall
mov
mov
push
addr16
sahf
adcb
push
lret
pop
cmp
sbb
mov
out
out
insb
loopne
inc
or
loopne
les
cmp
out
adc
sub
aam
xchg
daa
shrl
and
xchg
xlat
mov
hlt
loope
mov
ficompl
mov
decl
jmp
pop
xlat
adc
add
xchg
flds
cmpb
popa
jo
pop
subl
jo
mov
adc
sub
cmpsb
orb
mov
jle
and
inc
cmp
aaa
test
lret
ret
adc
das
inc
push
pop
sub
cltd
push
xchg
ljmp
fidivrs
and
xor
add
xchg
jg
clc
inc
jae
cmpsl
sahf
imul
nop
jmp
outsb
add
subl
pusha
imul
sub
push
shll
notb
pop
clc
testl
lret
and
mov
insl
stc
xchg
xchg
and
xchg
cmpsl
mov
jnp
inc
sbb
dec
xor
movsb
mov
xchg
in
adc
fildl
sbb
faddp
test
out
icebp
clc
jb
roll
int
cmp
pop
jmp
repz
fwait
rcrl
cmp
mov
pop
aad
lds
out
dec
push
stos
jecxz
xchg
sbb
or
int3
daa
sbb
out
cmp
mov
test
mov
inc
mov
enter
insl
in
std
out
xchg
fs
adc
xchg
mov
inc
hlt
ret
clc
fildl
cmpl
xchg
push
xchg
cld
adc
mov
ficoms
xchg
sub
inc
outsb
sahf
add
movsl
aad
cmp
xchg
inc
imul
sbb
ja
xor
repnz
mov
mov
repz
ds
dec
dec
popa
pop
sbb
mov
push
icebp
in
std
push
ja
pushf
mov
dec
add
cmp
scas
enter
mov
cmp
push
jg
or
in
divl
cmp
sub
call
jmp
mov
sub
or
sub
cmp
aad
adc
adc
or
sbb
test
and
icebp
mov
sub
adc
xor
add
add
jp
or
add
cs
notl
push
mov
out
xor
push
hlt
jg
add
mov
sbb
mov
mov
repnz
iret
pop
out
ljmp
daa
cli
sub
sbb
xchg
popa
xor
push
or
lock
mov
loope
xchg
inc
xor
jecxz
out
xchg
xchg
lods
scas
stos
stos
jns
xchg
sub
enter
into
popf
xor
aaa
mov
push
stos
push
cmp
adc
test
mov
pop
jp
out
movsb
cmp
add
or
xchg
rorb
ret
imul
les
mul
fwait
adc
pushf
cwtl
loopne
mov
push
push
divl
std
mov
int
mov
pusha
imul
mov
subl
les
push
sbb
and
cmp
testb
mov
jno
sub
sub
pop
fwait
test
inc
pop
or
mov
pop
loopne
mov
enter
cmpsb
xorb
loope
jl
fisttpll
das
xor
or
movsb
repz
add
andl
mov
notb
mov
push
rcrb
stos
jb
inc
mov
add
or
sub
dec
and
fwait
in
enter
xchg
or
fs
adc
pop
out
jbe
cmp
ja
push
or
mov
mov
and
xchg
mov
sbb
push
pop
lahf
cs
push
sti
add
and
je
lret
sub
xchg
rolb
jbe
dec
lret
jb
jae
xor
jle
aad
dec
jne
push
mov
outsl
pop
adc
lods
sahf
mov
jbe
jo
sub
dec
pop
xor
roll
xchg
loop
pop
or
pop
sub
jne
aaa
in
xor
xchg
and
push
pop
pop
lock
push
mov
dec
idivb
push
jle
xor
mov
dec
and
iret
mov
popa
pop
mov
pushf
xchg
movsb
cwtl
lret
mov
fadds
out
mov
jge
dec
out
dec
jmp
push
mov
mov
or
loop
lret
mov
sub
imul
ljmp
xor
outsb
sub
data16
ja
mov
nop
and
inc
lahf
dec
mov
ss
mov
dec
sub
push
lret
imul
ds
or
rol
mov
xor
scas
mov
es
movsl
and
or
ljmp
imul
adc
sbb
cmp
popa
xor
sbb
popw
aad
data16
ret
push
mov
xchg
lods
lret
outsl
push
stos
or
lods
cmp
or
inc
out
inc
and
mov
mov
mov
icebp
adc
xchg
inc
inc
loopne
les
mov
and
dec
push
mov
je
popf
cmp
xorl
jns
addr16
pop
xchg
lret
jae
or
cld
add
aas
mov
xor
xor
ret
jbe
or
cmp
les
repnz
iret
cld
fstps
or
xchg
pusha
out
aad
inc
fsubl
test
dec
inc
pop
push
sbb
int
sub
jnp
dec
sbb
and
cmc
adc
xchg
mov
test
rol
loopne
ret
add
jns
and
leave
mov
call
fdivl
push
add
mov
mov
cwtl
mov
or
aam
mov
notl
jmp
repnz
movsl
add
scas
roll
lret
xlat
push
cmpl
xor
xchg
and
pmaddwd
or
sbb
imul
popf
jg
xchg
imul
outsb
push
lods
shlb
stos
inc
mov
call
rorl
aad
jge
fldt
cmpl
pop
fstpt
sbb
dec
sbb
pop
xchg
pushf
loope
loopne
push
test
loop
or
lahf
fmuls
xorl
jge
test
lods
ret
sbb
push
in
and
ja
xlat
dec
into
lret
andb
dec
and
lcall
and
adc
dec
dec
xor
sub
cmpsl
enter
mov
cmpsb
xchg
pop
cmp
inc
insl
sbb
aam
xchg
jle
ret
xchg
adc
out
pusha
test
rorb
mov
xor
xor
mov
and
hlt
dec
outsl
mov
jnp
push
lods
cmp
dec
xor
xchg
lds
je
inc
ja
inc
aam
xor
daa
lods
sub
shlb
sub
sbb
push
pop
jnp
mov
sub
push
fsub
push
jp
or
mov
mov
mov
jb
ljmp
loop
pop
insb
ret
test
aas
mov
mov
inc
inc
push
ret
popa
xchg
ss
lcall
mov
pop
aas
out
sub
jmp
aam
pop
out
dec
sbb
xor
iret
movsl
push
mov
inc
push
notb
jl
jp
aaa
push
std
out
mov
push
inc
sbb
push
dec
xchg
js
popa
push
outsb
lds
into
mov
jecxz
in
shrl
sti
stos
sahf
scas
addr16
or
test
in
bound
sbb
sub
mov
add
add
out
sub
xchg
cmpsl
outsl
icebp
fwait
mov
and
inc
cld
shlb
inc
test
xorb
inc
rcr
mov
jecxz
repz
or
push
loopne
aam
and
or
outsb
cwtl
ljmp
in
xchg
sti
mov
xor
popf
sbb
fildll
cmp
mov
test
dec
test
lret
insl
jnp
adc
rorl
sar
add
pop
sbbb
cli
xchg
and
js
jb
add
and
cmp
jecxz
mov
movsb
sub
fimull
test
movsb
cmp
mov
js
dec
insb
ds
add
aam
leave
in
repnz
add
orl
mov
push
jb
imul
push
push
cmpsb
add
mov
test
movsl
loop
insl
jne
cmp
dec
lods
jns
popa
aam
xor
xor
push
sub
shlb
mov
xor
adc
sbb
movsb
sbb
adc
test
das
sbb
fiadds
xor
fs
jns
ret
popa
fs
ds
lret
call
call
jbe
mov
jae
mov
out
movsl
mov
fistps
mov
xor
cmp
push
sti
clc
or
lea
mov
sbb
into
jbe
push
jns
sub
mov
roll
jl
and
jl
scas
aas
mov
stc
dec
adc
mov
addl
cmp
mov
mov
inc
inc
push
fsubrs
jge
cli
mov
mov
lret
push
jnp
loopne
mov
fdivs
and
ss
shll
jl
out
enter
pop
orb
and
dec
cwtl
pop
push
add
inc
mov
jne
inc
in
xchg
mov
cmpsb
mov
cmpsl
mov
push
pop
mov
in
cmpsl
out
push
outsl
jns
mov
cld
test
iret
jno
lahf
int3
in
gs
pop
sbb
fsubr
shll
loop
bound
fwait
add
xor
outsl
int3
sbb
xchg
pop
jecxz
cmp
pushl
std
sarl
xchg
cmpb
hlt
jmp
adcl
pop
and
subl
addb
adc
adc
daa
or
adc
insl
stos
mov
xlat
ss
fcmove
call
out
ss
add
jmp
push
cmpsb
std
mov
int
adc
mov
sub
lea
cmp
stc
ds
cltd
add
xor
iret
or
inc
push
les
dec
pop
inc
xchg
fnstcw
cltd
push
insl
jp
fisubl
pop
pop
inc
jae
add
ret
xchg
mov
mov
sbb
insb
sub
fnstenv
mov
adc
and
fdivrp
adc
imul
loope
loop
fstpl
fisttps
jae
dec
jl
inc
call
inc
rcr
mov
xchg
xor
pusha
divl
adcl
adc
ret
std
subb
pop
inc
in
or
mull
and
xor
jmp
not
dec
sub
adc
cmp
insl
add
mov
mov
cmp
jge
loope
add
loopne
scas
inc
push
popf
ret
mov
lret
mov
test
inc
xchg
or
mov
leave
stos
mov
pop
movsb
xor
xor
pop
cmp
and
add
xchg
cs
pop
setne
cmpsb
push
in
pop
mov
mov
mov
test
or
in
inc
in
and
push
push
mov
mov
and
sbb
push
fisttps
sub
xchg
jne
add
mov
sub
or
cld
lahf
mov
nop
dec
sti
enter
test
mov
mov
movsb
xor
or
enter
vmovaps
mov
pusha
xchg
lock
dec
dec
lret
test
popf
xor
pop
dec
inc
and
mov
das
popf
aad
xchg
jl
push
test
push
dec
adc
xor
repnz
shrb
inc
mov
cwtl
cmp
mov
arpl
ds
xchg
insl
mov
stos
iret
and
xor
fstpt
dec
clc
ss
add
pop
xchg
clc
loopne
or
mov
ficoml
in
sub
push
orb
xor
adc
add
push
jnp
dec
pop
addr16
jg
popa
rol
pop
je
push
insb
pop
xchg
fidivrs
cmpsb
jmp
and
in
lcall
inc
mov
rclb
adc
adc
mov
push
insl
fld
mov
fs
orl
xchg
push
jg
adcb
aam
fdivs
xlat
jmp
lea
push
imul
in
out
mov
fs
adc
cs
movsl
sbb
leave
andl
cli
jbe
xor
icebp
fsubr
pop
pusha
dec
repnz
imul
inc
cmp
in
add
inc
push
inc
call
cld
xor
xor
xchg
scas
jg
cltd
sub
pushf
push
pop
gs
mov
arpl
inc
sbb
add
jbe
push
add
mov
insb
cmp
shlb
xchg
jmp
inc
leave
add
shll
out
movsb
xchg
jne
mov
xchg
ds
aad
or
loope
pop
xchg
aam
mov
push
das
push
inc
pop
test
clc
adc
call
pop
mov
bound
das
ljmp
pop
aaa
ss
xchg
mov
sbb
pop
insb
sbb
push
adc
adc
jmp
bound
fdivrp
clc
nop
shll
cmpsl
or
inc
pop
sti
jmp
pop
pop
cmp
fnsave
push
jne
movsb
push
lds
fstps
add
mov
test
or
or
jmp
addl
je
lods
or
xchg
fwait
repnz
adc
popf
cmc
cmpsl
js
xchg
in
or
aam
or
push
sub
shrb
dec
push
sbb
cs
jl
jmp
fsubs
mov
dec
pop
clc
jmp
dec
shll
cltd
je
es
fsubp
add
lds
fdivl
outsl
fsubr
scas
push
mov
mov
enter
pop
mov
jb
pusha
sbb
lods
inc
xchg
testb
and
shl
in
cltd
movsl
notl
ja
jns
pop
push
popl
popa
aad
and
call
mov
mov
insb
icebp
cltd
jg
and
fwait
jns
cs
cmp
mov
xchg
rclb
pop
adc
popw
dec
insl
sarl
jne
aad
xchg
dec
iret
mov
mov
int
pusha
aam
sbb
loope
cld
lcall
test
fs
insl
je
rol
out
pusha
mov
repnz
out
jnp
mov
and
test
xchg
sub
xor
lods
sahf
fsubr
push
xchg
inc
mov
mov
xorl
jb,pt
test
xchg
scas
popf
xchg
push
iret
shl
orb
into
enter
fcompl
loope
repz
sahf
dec
or
add
repz
cmp
jl
out
push
and
push
daa
adc
pop
sub
jge
mov
sbb
movsb
negl
jecxz,pt
mov
xchg
push
insl
mov
jmp
inc
fstps
adc
loopne
addl
lds
xchg
push
adc
inc
pop
mov
xchg
sub
das
out
in
scas
cld
gs
and
adc
cs
iret
xor
aad
sub
and
jecxz
movsl
inc
lock
xor
orl
je
mov
inc
int3
sbb
xor
sti
pop
pop
inc
and
pop
adc
sti
movsl
icebp
push
aad
gs
sbb
lea
arpl
popf
sbb
jns
rcr
sub
cmp
cmp
push
icebp
fs
mov
pop
repnz
sub
rol
call
jge
test
mov
popf
mov
imul
lcall
mov
arpl
mov
mov
repnz
stos
leave
mulb
stc
ds
int
and
hlt
dec
mov
ljmp
xchg
cmp
cmp
xchg
es
out
scas
cmp
jmp
mov
sbb
jle
add
and
xor
fistps
pop
dec
fwait
sti
fisubs
pop
sarb
cmc
aam
test
les
shr
cmpsb
inc
sub
jbe
or
xchg
test
xor
xor
add
pop
imul
mov
mov
mov
xchg
sub
inc
aas
inc
sti
xor
or
fisubs
xchg
push
rcrl
push
int
dec
aas
cmp
sbbb
movsl
insl
pop
jecxz
and
sarl
in
push
mov
mov
xlat
ret
mov
pop
mov
test
or
push
and
or
xchg
dec
and
mov
pop
test
fsts
loopne
adc
loopne
dec
mov
and
out
sub
and
pop
cwtl
push
or
mov
imulb
mov
mov
es
pop
insb
enter
dec
icebp
jle
xor
inc
fdivrs
adc
dec
push
adc
and
insl
pop
add
pop
jo
or
jmp
filds
mov
mov
fmull
pop
outsl
scas
decl
outsl
mov
mov
scas
dec
push
or
cmp
push
xor
and
dec
bound
mov
jbe
pop
sahf
and
popa
loope
xchg
fstpt
out
test
mov
inc
pusha
shrl
orb
lock
sbb
in
xor
inc
outsl
push
aaa
out
repz
push
dec
dec
push
push
jle
mov
repnz
xchg
mov
mov
gs
jmp
sbb
jecxz
js
and
mov
xchg
lret
mov
fbld
mov
jns
addr16
push
sbbb
in
pop
inc
ljmp
mov
mov
inc
sub
test
add
xlat
es
cmpsl
adc
cmpsl
add
in
and
and
xor
inc
sahf
xor
es
push
in
jecxz
loopne
push
lock
ret
push
sarl
pop
shlb
rcrl
jle
in
jmp
pop
mov
and
bnd
lds
mov
mov
or
rcrl
dec
jge
xor
push
notb
popl
or
ljmp
insb
mov
pop
dec
xor
iret
imul
mov
dec
pop
push
sbb
mov
mov
imul
and
bnd
outsl
lret
movsb
dec
popa
popa
iret
lahf
sbb
sbb
sbb
mov
rol
and
hlt
cmp
std
and
xor
arpl
inc
sahf
imul
in
stos
xchg
out
je
enter
movsb
inc
xchg
lcall
scas
push
sahf
movsl
popa
adc
dec
fidivl
cmp
insb
scas
pop
pop
ret
jle
test
inc
jle
daa
dec
mov
pop
jl
ljmp
js
push
fisttpll
jg
mov
jns
jg
js
jae
out
sub
popa
out
jne
jb
data16
fs
or
enter
mov
fiaddl
inc
adc
or
ds
cmp
sub
sbb
xor
sbb
js
lds
mov
ja
fcompl
js
loop
int
pop
inc
std
inc
lods
pop
mov
arpl
pop
out
scas
jnp
out
scas
cltd
lods
pop
push
gs
sub
add
hlt
jmp
xor
fidivrs
inc
add
enter
sti
aad
aad
mov
arpl
in
cmp
mov
stc
sub
stc
dec
sub
stos
and
mov
sahf
adc
sbb
add
pop
in
sti
mov
movsb
pop
push
dec
xor
dec
xor
bnd
pop
in
mov
sar
jmp
fwait
mov
lock
daa
inc
loopne
jae
stos
lcall
outsb
xchg
mov
movsb
push
dec
add
addr16
mov
inc
and
cmp
pop
idivl
jmp
cs
daa
and
and
cmp
movsb
pushf
jno
fisttps
pop
jns
sub
pop
push
test
inc
sbb
xor
jp,pt
inc
xchg
arpl
or
dec
push
mov
pop
jo
in
aad
sbb
stos
add
adc
mov
cmp
push
aam
sub
cli
cltd
xchg
rcrb
cmp
mov
ds
js
lock
cs
lock
or
add
arpl
cmp
mov
cmp
lahf
insb
push
cmp
pop
fwait
pusha
fmuls
lret
fnsave
dec
call
sahf
mov
dec
add
pushf
pmaddwd
dec
mov
or
stos
push
repz
in
or
or
mov
hlt
mov
test
div
fs
sarb
int
orb
xchg
mov
cmp
negl
jp
push
mov
inc
nop
jnp
dec
push
push
call
sarb
dec
jo
push
je
mov
data16
pop
cs
gs
divb
xor
daa
js
hlt
adc
inc
mov
or
add
out
rcr
dec
shl
add
inc
push
in
je
jge
mov
jp
push
xchg
cld
pushf
insl
cltd
cmp
jbe
xchg
mov
cwtl
repnz
jno
sahf
mov
icebp
incl
jbe
jnp
clc
fistps
jb
inc
aaa
jecxz
cmp
mov
out
pop
mov
ja
dec
pop
push
mov
or
mov
mov
aad
rolb
cmp
and
and
lods
test
scas
nop
mov
cmp
and
sub
push
in
xor
cmp
das
bound
shrb
xchg
pop
loop
add
fwait
sbb
or
jae
lahf
je
sti
sub
xor
arpl
lret
fisttpll
inc
xor
pop
fistpl
popa
inc
and
es
xchg
jne
cli
sbb
jmp
mov
add
pusha
cltd
push
daa
cmpsb
dec
or
arpl
cltd
mov
jge
dec
push
fmuls
add
mov
sbb
inc
mov
lret
std
xor
jge
cmp
sti
inc
ds
std
cs
fstps
pop
test
cmp
xchg
xchg
xor
fisubl
imul
lahf
imul
jnp
xchg
mov
lds
scas
ja
ficoms
test
daa
test
push
mov
hlt
icebp
mov
sub
ret
repnz
pop
mov
mov
add
jnp
ljmp
iret
pushf
enter
cmp
scas
test
divl
jae
sub
jnp
sub
mov
fldenv
pop
arpl
cmp
lds
loope
fcoms
mov
loopne
add
push
ja
xchg
pop
push
mov
out
and
repnz
pop
int3
xchg
fistpll
stc
push
xchg
leave
inc
sbb
jle
ss
push
cmpsl
sub
repz
xor
mov
je
ret
test
push
inc
shll
cltd
sub
and
jle
mov
cltd
xor
subb
mov
sahf
sbb
sbb
test
jno
aad
add
mov
pop
in
psubw
in
aaa
xor
lcall
and
aam
fdivrl
insb
adc
aad
rep
and
mov
rcr
jge
mov
xor
cmc
mov
lods
xor
mov
jae
test
and
fwait
imulb
loope
inc
push
mov
iret
push
fadd
cmp
add
out
push
aam
dec
sbb
dec
xchg
fcomps
jae
inc
pushf
jo
jmp
loopne
push
inc
mov
cs
aad
pushf
mov
lds
daa
cld
in
jge
push
add
push
call
popa
pop
lcall
cs
js
rorl
xor
jg
sti
lcall
sbb
in
mov
inc
lcall
jno
xor
lret
sbb
in
push
lods
cli
in
out
roll
cmp
push
out
out
sbb
mov
push
cmc
inc
leave
divl
test
int3
test
add
inc
loope
aas
sets
fidivl
lods
call
out
mov
lret
andl
mov
je
dec
pcmpgtb
pop
adc
jnp
mov
mov
inc
lret
jecxz
adc
adc
sub
pop
jp
ret
test
mov
cmp
aaa
addr16
push
sbb
jl
jae
add
leave
jp
xchg
inc
adc
add
pop
pop
dec
mov
pop
pop
sbb
jmp
jl
aam
in
fildl
mov
rcrb
and
push
mov
movsl
int3
jmp
lahf
pop
stos
or
or
adc
mov
lock
mul
mov
fidivrs
rol
or
rorl
adcb
adc
scas
aaa
mov
mov
cmp
or
mov
bound
lock
jp
cmpsl
das
and
and
xor
push
in
pop
stos
sti
popf
test
or
mov
fisubrs
aaa
out
mov
popl
push
ljmp
into
jb
shrl
rolb
les
out
push
aaa
insl
mov
fwait
cmp
or
sbb
xor
insl
lcall
pop
cmp
fadds
pop
iret
xchg
ret
mov
sbb
add
mov
ret
pop
fbstp
inc
and
or
scas
cmpsl
sbb
mov
std
fwait
cmp
stos
or
mov
mov
dec
inc
push
cmp
jns
mov
es
fwait
in
sbb
lahf
daa
aam
adc
adc
je
fadds
lcall
imul
fs
and
jl
jno
gs
or
fdiv
xchg
shr
add
or
or
pop
enter
cmp
inc
mov
data16
cmp
in
sub
mov
and
dec
sbb
pop
hlt
xor
xchg
aam
cmp
jg
insl
cs
test
cmpsb
mov
int3
xchg
loop
xor
sbb
std
adc
jo
pushf
cltd
int
mov
popa
and
mov
lock
sbb
jecxz
cmp
mov
call
rolb
imul
push
insl
stc
lods
gs
push
mov
sub
jnp
push
jo,pt
xchg
or
pop
call
jne
cmpb
lock
jno
or
aaa
in
cmp
fmul
fnsave
mov
sbb
mov
gs
inc
in
int3
int3
iret
jae
cmp
add
cld
or
or
pusha
push
mov
imul
mov
cwtl
dec
jno
push
pop
js
adcl
fcos
ja
xor
inc
loope
fadds
ret
arpl
xchg
mov
or
call
mov
jbe
cmp
inc
ja
xchg
mov
xchg
lret
lods
test
imul
xorl
loope
iret
adc
sti
cmpb
inc
ret
cltd
js
mov
lahf
adc
sbb
adc
inc
out
pop
xchg
aaa
add
lods
jecxz
loopne
push
mov
cli
add
andb
test
fadd
cmc
rolb
add
jecxz
iret
inc
pop
das
lahf
mov
dec
mov
and
inc
notl
pop
stos
in
push
mov
sarb
loope
mov
lods
jns
sbb
mov
shr
out
fs
jmp
es
fidivrl
and
in
flds
mov
scas
sub
iret
xor
push
jmp
jnp
ja
pop
call
pop
out
cmpsb
and
je
sar
sbb
lret
xlat
out
cmp
repnz
sbb
fsub
inc
mov
add
add
or
cmp
in
scas
mov
lods
int
push
js
rcrl
lods
add
mov
icebp
pop
or
cmp
daa
sbb
xchg
inc
xor
mov
cmp
imul
push
inc
mov
push
xchg
xchg
and
and
dec
nop
xchg
xchg
push
sbb
out
enter
pop
sbb
sbb
popf
xor
and
add
inc
dec
jle
sub
adc
xlat
sub
xor
or
xchg
lret
insb
cld
and
push
movsl
or
imul
adc
push
and
in
dec
leave
fcomps
mov
mov
xchg
adc
mov
out
inc
mov
add
out
pop
adc
aam
outsb
or
jle
ret
daa
negb
and
add
enter
mov
dec
jmp
jo
xor
pop
add
jl
sbb
dec
push
iret
mov
ret
inc
xchg
and
mov
cld
cld
in
mov
bound
mov
mov
push
out
cwtl
sbb
stos
xchg
inc
out
mov
mov
ret
movl
fldt
pop
cmp
xor
ljmp
adc
lds
xor
in
aaa
add
mov
dec
mov
ret
mov
dec
mov
pop
sbbb
adc
sub
mov
outsb
push
and
inc
add
mov
fistpl
fldl
xor
push
lods
call
in
pop
insb
jb
push
and
jle
pop
mov
or
sub
dec
mov
cmp
fdivrl
aam
xlat
repnz
pop
call
push
ljmp
sub
xchg
insl
xchg
jo
cmp
mov
icebp
movsl
je
sbb
sub
or
bound
xchg
out
jge
pop
es
movsb
stos
mov
js
test
shl
mov
mov
cmp
xchg
mov
lret
cmc
fcoms
imul
arpl
xchg
xchg
sub
or
xlat
stc
mov
add
sub
push
push
insb
and
mov
popa
fistps
and
add
cmpl
jae
add
inc
inc
and
divl
hlt
push
pop
mov
aam
fwait
mov
xchg
cmp
in
insl
mov
ret
pop
pop
pop
mov
inc
fs
xchg
mov
cmp
fnstsw
std
sti
or
sbb
push
xor
les
insl
cmp
test
mov
adc
inc
repz
lock
mov
xchg
fisubrl
cmp
cmp
jns
jnp
pop
mov
in
sbb
inc
cmpsb
xor
xchg
xorb
xchg
cmp
enter
je
sbb
push
cmc
push
es
xchg
sub
insl
sub
xchg
popf
pusha
loop
mov
movsl
loopne
lret
hlt
pop
xor
mov
inc
mov
into
imul
fs
cmp
mov
lret
mov
aam
dec
jb
or
enter
xchg
rolb
fidivrs
test
cltd
stc
cmp
cmp
dec
jg
or
jmp
push
mov
pop
fsubl
or
xor
mov
test
xlat
pop
sbb
out
cmc
lahf
out
and
push
jg
mov
xor
je
aam
mov
xor
inc
sub
mov
int3
rol
ret
push
xor
into
pop
cmp
adc
xchg
or
inc
nop
mov
call
mov
adc
addr16
je
pop
jl
clc
or
add
lret
sbbb
mov
sbb
sahf
ljmp
push
cmp
mov
dec
push
pop
xor
sbb
sub
outsl
pop
rol
sahf
push
popf
adc
sbb
or
mov
xor
adc
sub
cmp
cltd
add
mov
dec
xor
out
cmc
push
rcl
pusha
sub
scas
loop
loope
lar
mov
mov
data16
bound
out
js
add
orl
sub
bnd
mov
stos
pusha
jmp
mov
aaa
inc
xchg
in
mov
cmp
aam
outsb
in
mov
lods
call
popa
ja
leave
mov
add
enter
pop
mov
movsl
jl
adc
sbb
inc
mov
push
sbb
sahf
pop
dec
xor
sbb
lret
das
or
xor
pop
in
jp
and
lods
jmp
xchg
jl
scas
mov
jo
movsb
mov
sub
or
push
or
int3
gs
xor
dec
or
ds
jb
js
cmp
push
and
aad
cld
bnd
adc
xchg
mov
les
xchg
mov
bound
gs
fs
ss
incl
xlat
cmp
std
add
sti
cld
xchg
mov
inc
data16
cwtl
xchg
jne
or
in
mov
mov
out
jne
jbe
pop
pop
mov
mov
push
mov
inc
stc
inc
cmp
bound
int
cld
call
or
jp
inc
dec
mov
jge
bound
nop
and
aaa
lret
cmpsl
jae
jg
adc
clc
sub
adc
mov
jmp
jecxz
or
mov
das
arpl
hlt
jb
jo
dec
sbb
imul
std
jne
sbb
fwait
sub
pop
mov
enter
loopne
lds
and
test
xchg
adc
push
jl
xor
cmc
push
sti
mov
ret
pop
push
mov
add
scas
imul
and
mov
in
cmpsb
dec
aaa
lret
or
mov
aam
clc
push
jecxz
jmp
dec
negb
xor
fstpt
testl
aaa
out
jle
pop
insl
jp
mov
xchg
mov
fistl
push
xchg
pushf
cwtl
mov
in
fwait
cltd
imul
pop
push
xor
mov
cltd
icebp
sbb
movsl
xchg
hlt
dec
test
add
int3
jne
mov
rolb
or
repnz
pop
jle
xchg
outsl
cltd
out
dec
popa
push
xor
test
repnz
mov
clc
rclb
je
inc
stc
pop
test
push
fdivrs
jp
adc
shrb
and
xor
push
push
xchg
mov
adc
sbb
mov
mov
das
sahf
xchg
ficoms
push
lahf
rcll
inc
jae
cs
jge
jbe
ficoml
int3
aad
aad
movsl
sbb
bound
stc
lcall
dec
cmp
js
pusha
mov
xchg
mov
push
jmp
in
outsl
adc
mov
or
mov
mov
adc
jbe
xor
push
aam
daa
xchg
dec
pop
fisttpl
sbb
jmp
xchg
insl
push
int
cmp
xchg
gs
adcb
xchg
push
loopne
out
add
js
andb
shlb
data16
sub
in
out
fistpll
test
add
and
daa
loope
jb
aas
mov
cmp
rcrl
inc
add
inc
in
mov
ljmp
addl
les
inc
cmpsl
mov
pop
fwait
shlb
mov
inc
lea
or
jne
pop
cmpsb
and
lods
fcos
call
and
jnp
call
and
sbb
sbb
xor
and
lods
loop
ljmp
jbe
mov
jle
fists
clc
mov
jae
dec
loopne
jmp
pop
incl
add
imul
push
and
dec
addr16
shll
jno
enter
xchg
sarb
clc
fadds
daa
cmpsb
jg
and
lret
xor
pop
sub
inc
leave
sub
cmpsl
pushf
cmp
sahf
scas
loop
mov
ret
repz
in
cmp
sahf
add
mov
out
fwait
xor
scas
stos
outsl
lahf
loope
fsubp
mov
xor
cli
xor
jno
in
pop
addb
inc
jmp
das
push
clc
adc
incl
adc
test
jbe
mov
cmc
mov
test
pop
daa
xchg
adc
mov
and
cmc
push
fxch
mov
dec
cli
cltd
inc
repnz
push
std
ds
cmc
stos
in
sbb
cmp
xchg
andl
push
lcall
inc
xchg
das
add
push
cld
pop
popf
mov
dec
popf
xlat
and
jl
shr
sbb
int3
movsl
pop
lock
fstl
xchg
les
fldcw
push
lods
fistpl
das
int
aam
push
push
jcxz
inc
jmp
fs
xor
add
lds
fnstenv
dec
xchg
loopne
jle
or
push
andnps
cmpsl
inc
xor
sbb
xor
mov
out
xlat
andl
rolb
arpl
popf
jns
push
jns
jno
sbb
dec
out
cltd
or
pop
testb
mov
into
negl
frstor
pusha
dec
sbb
mov
mov
dec
dec
jle
dec
and
and
insl
div
adc
push
mov
sti
pushf
push
lret
stos
sub
cmp
or
push
sti
shlb
adc
cli
pop
int
std
xor
and
icebp
arpl
outsb
scas
arpl
xor
xchg
add
mov
xchg
xchg
xor
je
xchg
push
add
lock
inc
xorl
xchg
dec
or
test
ror
cs
push
sub
leave
adc
in
mov
jle
testl
jae
sub
pop
insb
insl
mov
lds
xor
mov
sub
push
push
sbb
stos
test
inc
xchg
push
sbb
orb
mov
ss
push
adc
out
ror
pop
subb
int
inc
push
cmp
fmuls
fsubr
pusha
mov
out
and
aad
jl
lock
sti
push
test
and
pushf
inc
sti
scas
adc
or
dec
inc
push
scas
pop
sar
add
movsl
push
mov
sarb
xchg
xchg
enter
inc
scas
mov
add
nop
fldcw
xor
arpl
inc
sbb
mov
aaa
mov
in
jnp
jno
jbe
cltd
xor
les
add
inc
dec
mov
push
sarb
pop
mov
fldl2t
or
sbb
sti
or
sbb
leave
aaa
mov
xchg
in
mov
pop
cmpsb
ss
dec
insl
xor
ficoms
xor
aas
xlat
jo
push
in
and
cs
mov
pop
int3
jg
push
test
pop
pop
int3
cmp
je
dec
push
jbe
jge
add
dec
jae
jno
or
setb
fldl
lds
ja
or
dec
sahf
sbb
gs
or
push
ret
js
mov
and
data16
push
or
test
add
in
loopne
push
clc
cli
pop
mov
aaa
jle
aam
repnz
inc
popf
out
imul
rep
mov
mov
nop
push
vpunpckhbw
stc
xchg
push
fidivs
in
pop
insb
cmpsb
inc
loop
adc
jg
lea
mov
les
and
and
stos
push
add
fsubl
ret
pop
xor
push
push
in
xor
loopne
cli
sub
shrl
sbb
fs
sbb
pop
cmp
sahf
push
mov
into
movsl
sbb
popa
jl
sub
cmpsb
push
cmp
inc
movsb
aas
scas
lcall
pop
sbb
jb
xor
push
push
inc
cmp
push
or
ja
pop
fstpl
pop
lret
pop
mov
jae
push
in
xchg
inc
jle
dec
mov
add
orl
clc
popf
jb
pop
in
mov
jg
xchg
fucomi
pusha
adc
jp
test
ja
and
mov
xor
inc
je
out
nop
testl
adc
or
xchg
repnz
add
sti
mov
dec
push
in
stos
stos
and
sub
xor
or
js
pop
out
jo
cs
mov
or
xor
xchg
in
mov
fadd
sub
out
aad
mov
jmp
mov
aaa
bound
cmp
push
cmp
xchg
out
cmp
jb
repz
ret
data16
and
mov
mov
push
pop
ja
lds
cld
into
jp
jmp
ss
loope
movsl
push
data16
leave
stos
insb
mov
inc
popa
xchg
gs
jle
mov
inc
xchg
in
popf
fnstsw
and
xor
cmp
loopne
loop
jmp
pop
fiadds
adc
xor
jp
out
push
or
inc
rol
out
mov
das
jl
jmp
sbb
adc
loop
xor
add
mov
adc
jle
push
out
sub
mov
xchg
or
or
enter
xchg
mov
jno
mov
addr16
hlt
rep
and
mov
xor
and
mov
cmp
sub
push
data16
sbb
mov
fildl
je
loope
cwtl
lcall
push
ss
xchg
adc
push
in
insl
daa
xor
inc
fists
loopne
xchg
pop
data16
dec
sbbl
je
and
sbb
mov
or
or
push
mov
pop
push
mov
sbb
subb
mov
mov
xchg
lds
mov
jge
js
inc
xchg
mov
ficompl
data16
cmp
aam
ja
xor
inc
and
add
pop
mov
adc
jge
mov
aam
inc
mov
leave
sbb
cs
xchg
fs
in
push
shlb
mov
push
call
jb
mov
mov
xchg
stos
sub
push
ds
mov
outsl
jno
sub
cli
ja
iret
mov
mov
sub
js
cmp
pop
in
repnz
and
pop
inc
xorl
pop
mov
in
imul
popa
mov
fistpll
imul
cwtl
movsl
push
decl
pop
sbb
pusha
fld
repz
mov
jne
add
or
sarl
add
mov
sub
imul
enter
scas
in
aad
enter
adc
cld
lret
jmp
xchg
test
lds
inc
pusha
dec
cli
dec
xchg
or
xchg
push
gs
push
mov
fisubrl
mov
cmpsb
mov
daa
fwait
dec
sub
fcoml
or
hlt
imul
pop
fmul
sub
or
sub
xchg
bound
xchg
add
das
sub
sti
xor
addr16
stos
iret
ds
and
cmp
imul
js
dec
in
js
js
pop
adc
adc
rcr
je
xchg
je
inc
scas
cmp
mov
adc
mov
or
or
movsl
imul
adc
jge
loopne
mov
stos
fcompl
and
scas
inc
and
ja
inc
sbb
fwait
dec
pop
dec
int
mov
sbb
clc
add
xor
adc
pop
movsb
out
inc
or
popf
push
or
das
adc
adc
sbb
fidivl
sahf
adc
aam
sub
dec
mov
outsl
mov
fwait
dec
call
lods
jb
xchg
jns
sub
call
dec
lret
inc
mov
leave
mov
lahf
add
pop
push
xchg
mov
push
ljmp
inc
push
test
xchg
xor
mov
add
stc
jp
js
mov
ret
push
dec
jl
and
cs
cli
ss
mov
add
push
cltd
cmp
pop
sub
push
in
pop
lcall
test
jle
push
pop
out
jle
jge
inc
push
addr16
xor
repz
dec
cmp
sbb
popf
inc
cwtl
mov
cmp
jne
lods
sbb
pop
lds
xchg
leave
fiadds
cmp
repz
push
arpl
pop
push
adc
notl
out
pop
xor
add
stos
sbb
mov
xor
adcl
mov
and
or
and
out
outsb
inc
pop
xor
mov
xchg
cmp
mov
mov
lret
arpl
inc
shlb
adc
cmc
mov
adc
cwtl
insl
or
aas
aam
fidivrl
mov
ljmp
jbe
push
iret
mov
or
jg
ds
popf
ja
jo
scas
jae
fisubrl
shrl
inc
pop
pop
inc
loopne
sbb
push
adc
cwtl
cmp
xlat
pusha
adc
mov
push
mov
call
mov
adc
iret
popa
in
sarb
jb
movsb
outsb
dec
adc
in
insl
ret
loope
in
xchg
sbb
pop
and
cmp
cvtdq2ps
movsb
std
dec
nop
scas
adc
lahf
test
adc
sbb
mov
push
sbb
data16
jmp
push
popa
pop
int
jae
push
inc
sub
insl
imul
push
add
and
sarb
addr16
stos
lahf
es
adc
xor
sbb
xor
push
mov
inc
movsl
mov
sbb
shlb
sub
push
mov
sub
gs
push
jge
ss
add
or
es
sbb
sbb
push
adc
icebp
adc
or
fisubrs
movsb
dec
nop
jg
jno
mov
out
jl
das
in
inc
nop
jl
repnz
pop
pop
inc
cs
mov
and
sub
popa
aam
add
adc
add
xor
fcmovbe
cmp
mov
dec
jmp
jmp
mov
fmulp
outsl
insb
xor
sbb
mov
sbbl
push
mov
jl
adc
adc
cmp
xor
jbe
loope
call
mov
ret
outsl
add
out
scas
in
stc
in
in
nop
rcrl
cmp
int
push
insb
out
dec
call
ds
sbb
sarb
stos
push
mov
mov
inc
lds
sti
xchg
push
lods
sub
fidivs
leave
xlat
dec
lret
xor
cmc
or
pop
push
inc
bound
cmp
mov
stc
imul
add
mov
or
xor
add
jg
int3
sbb
testb
mov
movsl
insb
insl
ret
push
pop
mov
sbb
loopne
jb
lea
je
ret
rol
repz
mov
rorl
repz
push
sbbb
inc
cwtl
push
lahf
fmul
pop
nop
movsl
mov
stos
pop
sub
pop
arpl
daa
sbb
add
or
enter
fsubs
push
enter
orps
fs
inc
xchg
sub
sahf
push
mov
mov
cmp
inc
les
ret
xchg
fwait
dec
mov
cs
repnz
push
dec
enter
lods
mov
js
pop
leave
adc
mov
les
in
call
xchg
jg
fs
incb
adc
jo
repnz
hlt
push
ret
push
sbb
add
add
movsb
call
sub
dec
out
sbb
test
fimull
cmp
jp
rolb
fiadds
xchg
push
jl
mov
sub
fwait
movsl
mov
out
xor
cmp
mov
and
imul
and
mov
orl
mov
shlb
mov
sub
cltd
sbb
and
clc
jp
addl
and
jl
pop
test
add
xlat
mov
push
hlt
xorb
and
out
pop
test
mov
push
lods
jns
outsl
pop
outsb
out
in
mov
sbb
pop
repnz
testb
jnp
or
adc
push
inc
cmpsl
inc
arpl
cmp
fmuls
ja
lds
lds
pushf
adc
xor
mov
mov
add
sub
int
fcom
add
adc
or
fldl2t
cmp
pop
sbb
inc
mov
data16
clc
pop
subb
mov
xchg
dec
in
xchg
sbb
out
sbb
adc
add
leave
fiadds
and
nop
bound
mov
or
rcrl
jb
fdivp
pop
lds
hlt
jle
fs
je
cmp
bound
sub
mov
add
mov
pop
push
fildl
adc
daa
je
aam
sub
dec
and
movsl
or
push
clc
shlb
sbb
xchg
repnz
mov
outsl
inc
push
in
cmc
push
outsl
xchg
dec
stos
xchg
mov
popf
add
cmp
dec
adc
add
jns
movsl
sub
xchg
mov
in
push
jnp
mov
cmp
dec
lock
gs
sarl
mov
scas
inc
cli
dec
mov
int
inc
int
enter
sbb
or
push
pop
stc
dec
popf
dec
fstpt
xchg
inc
mov
pop
outsb
lahf
call
out
xlat
in
sbb
subl
in
fimull
negb
mov
daa
dec
daa
mov
pusha
roll
inc
add
and
jnp
lret
push
pop
and
sbb
mov
insl
and
xchg
loope
daa
dec
lahf
lods
or
sbb
adc
sbb
or
push
fs
mov
push
scas
out
mov
cmp
cwtl
push
faddl
mov
xlat
and
sbb
pop
dec
sbb
mov
lds
fmuls
pop
or
enter
mov
lods
fwait
push
mov
push
punpckhdq
mov
inc
icebp
ret
sub
int3
jae
mov
mov
adc
mov
sub
jbe
or
out
arpl
dec
cmc
cmp
fwait
enter
and
push
int3
and
insb
rcll
push
outsl
jl
ss
inc
mov
sbb
lds
loop
or
sbb
jnp
jl
pop
movsb
pop
mov
mov
or
jp
es
dec
int
int3
mov
test
insb
xor
lret
bnd
jp
dec
jecxz
pop
mov
cmp
arpl
mov
sub
sub
adc
lcall
mov
jne
adc
icebp
lret
adc
test
insb
mov
add
adc
mov
ret
popf
inc
sbb
jno
cmpsb
mov
cmp
jmp
cltd
stos
and
xor
jnp
shrb
mov
gs
popa
lea
lret
cmp
xchg
and
cs
xlat
mov
ret
cmp
add
les
call
pop
fdiv
adc
das
and
pop
xchg
enter
xchg
stc
dec
mov
inc
sub
pop
scas
push
inc
mov
pop
repz
xor
xor
mov
scas
push
mov
push
sti
dec
stc
inc
stos
xlat
mov
inc
inc
xor
das
shlb
push
cwtl
mov
ljmp
data16
jge
movsl
pop
mov
je
fcoms
pop
inc
sbb
lret
inc
dec
pop
movsl
stos
pop
cmpsb
inc
scas
movsl
mov
sub
mov
cmp
rcrl
push
imull
jl
in
sub
stos
add
std
jb
and
fnstsw
pcmpeqw
and
fchs
xor
push
dec
cmp
notb
in
mov
push
push
ror
or
xor
aaa
pop
pop
adc
mov
push
push
and
scas
shrl
pop
or
mov
psllw
out
lahf
jno
cltd
mov
and
mov
call
leave
cmp
call
or
xchg
mov
enter
divl
nop
sqrtps
loop
sub
mov
cmp
mov
mov
mov
or
xor
repnz
sub
ljmp
shrl
jns
inc
pop
neg
xchg
nop
mov
jae
iret
dec
addr16
outsl
loopne
stc
fstpl
cli
pop
mov
cmp
popf
and
push
gs
imul
xchg
and
sti
mov
mov
icebp
aas
xchg
cmpsb
mov
push
push
lods
mov
loopne
inc
imul
insl
adc
mov
dec
adc
mov
or
push
add
ror
cmp
movups
enter
xor
rclb
jo
pop
mov
xchg
les
test
inc
adc
sub
pop
sub
add
push
divb
aam
jo
push
jb
mov
sbb
and
xor
cwtl
hlt
inc
jo
jp
or
rorb
mov
mov
hlt
stos
or
and
sbb
mov
and
stc
hlt
jnp
lahf
adc
jg
mov
shll
jg
jmp
inc
sub
roll
or
xchg
loop
out
cmp
xchg
fisubs
pop
sbb
jo
xchg
shrb
scas
add
and
and
divb
in
inc
mov
call
push
rorb
icebp
push
jo
shlb
jmp
fisubrl
jno
mov
bound
fstl
lretw
push
sub
fadd
pop
sti
jae
fwait
push
enter
push
mov
orl
jne
push
pop
in
cmp
xchg
sbb
jno
pop
mov
loopne
sbb
addr16
aad
arpl
outsl
push
add
in
mov
popf
push
loop
add
sti
popf
fistpl
andb
pushf
lcall
pop
jo
aam
push
dec
add
and
popa
xchg
gs
cltd
mov
sti
adc
mov
inc
xor
pop
daa
inc
out
adc
mov
aas
adc
jnp,pn
xor
mov
stos
dec
jle
mov
sub
mov
adc
add
mov
jb
mov
push
xor
xchg
aam
out
loope
push
add
cmp
imul
xor
dec
push
push
pop
fimuls
mov
aad
outsb
jae
pminub
fisubrs
or
in
push
in
add
idivl
cwtl
idiv
mov
les
push
jp
jl
pop
dec
fstl
sarl
div
jl
pop
pop
sub
aas
lods
insb
xchg
push
push
int
dec
outsl
decb
mov
jmp
xor
dec
cmp
int
pop
xor
jae
clc
mov
scas
pop
cld
jg
mov
gs
adc
cmp
sbb
imul
hlt
mov
xor
into
repz
ljmp
inc
scas
cltd
sbb
test
and
cmp
jl
es
jecxz
mov
dec
or
mov
push
dec
xor
and
repnz
std
call
push
and
mov
mov
inc
or
fnstcw
iret
scas
or
movsb
add
ret
push
dec
mov
lret
xchg
aam
inc
or
fldt
mov
stos
jb
je
fsubr
pop
inc
mov
push
dec
repnz
and
fsubl
push
xchg
cmp
repnz
in
aad
xor
pop
les
mov
fucomip
and
lods
es
into
push
clc
stc
repnz
cmpb
pop
jmp
enter
shlb
cwtl
sbb
sub
xor
xchg
mov
cmp
cmp
mov
test
push
mov
ret
mov
and
push
adcl
dec
mov
leave
jae
lock
jecxz
and
repz
push
lret
dec
jb
pusha
push
leave
add
andb
sub
sub
sub
fmulp
mov
cmp
sbb
fldcw
loop
scas
adc
neg
out
mov
add
jnp
cmpl
rcll
pop
add
fimull
test
loope
in
cmpsb
clc
outsb
inc
iret
sti
mov
adc
mov
add
adc
sarl
out
lds
loop
push
ret
aam
lea
loopne
mov
jbe
pop
lods
fdivrs
enter
mov
cmpsb
popf
sub
mov
psubb
andl
test
ljmp
in
jmp
cmpsb
xor
adcb
daa
shlb
dec
dec
rcrl
dec
imul
pusha
addr16
cmp
lret
push
inc
xor
mov
adc
out
sub
xchg
and
jecxz
mov
ja
cltd
cmpl
jle
or
insl
dec
ljmp
std
xchg
sbb
into
mov
xlat
dec
jns
bound
dec
rcrb
pushl
rorl
jae
mov
sbb
cld
mov
sti
cwtl
sub
adc
enter
or
lods
adc
insb
rcl
xor
xlat
pushf
dec
scas
je
jne
mov
cmp
scas
jbe
repz
das
add
mov
fimull
loop
cmpsl
in
jle
outsb
lret
mov
in
int
dec
dec
add
dec
fimuls
mov
and
dec
sub
or
or
inc
xor
mov
int3
xchg
push
cmp
lds
jns
outsl
add
enter
insb
dec
mov
sbb
cmp
enter
popf
mov
or
ja
insb
sbb
je
shrb
mov
sbb
cmp
into
cmp
sbb
push
stos
lds
outsl
mov
jb
out
cli
mov
push
fs
bound
popa
mov
int
orl
call
cmp
fsubrl
insb
inc
sub
sbb
lds
rol
adc
test
arpl
fwait
adc
lret
push
xor
jmp
sbb
test
jg
mov
cli
decl
cmp
lods
mov
stc
xor
inc
test
push
movsl
jmp
sub
cmp
pop
shrb
movsb
dec
push
fisttpll
mov
xchg
cmp
js
test
dec
xlat
and
add
out
int
cmpl
mov
dec
jae
xchg
imul
mov
dec
xchg
movsl
pop
mov
ss
pop
mov
sbb
je
fdivrs
cmp
ljmp
xchg
in
cmp
jnp
sbb
mov
pop
and
enter
cmp
mov
insb
xchg
mov
movb
movsb
repz
xchg
push
aam
das
fucom
loop
xor
rorl
jne
mov
inc
pop
mov
xchg
or
or
test
mov
mov
lds
mov
mov
push
and
data16
pop
in
xchg
push
push
pop
xor
push
inc
and
js
inc
pop
adc
or
sti
and
sti
dec
aas
pop
xchg
out
cs
xchg
aaa
adc
inc
push
sub
movsb
mov
repz
leave
mov
inc
adc
test
std
pop
int
push
jnp
sbb
imul
cmpb
inc
rol
addr16
xchg
dec
adc
add
xchg
mov
sub
and
push
out
mov
dec
loop
push
xchg
jmp
ret
add
push
jno
data16
add
cmc
ja
in
stos
mov
inc
dec
hlt
lods
or
jge
in
dec
stos
iret
cmp
das
lea
mov
xor
sbb
xor
hlt
movsb
jno
lgs
sub
imul
in
or
loopne
xor
bnd
sub
xchg
jne
mov
cmpsl
in
and
and
sub
stos
fimuls
cmp
addr16
add
lret
roll
aam
jo
jb
jg
add
and
cmpl
adc
sbb
adc
jecxz
inc
scas
out
jmp
inc
cmpsb
and
insl
or
fsubs
add
xor
sbb
cmc
xor
add
dec
mov
repnz
jb
xchg
sub
cmp
adc
loope
incl
xchg
xchg
mov
sbb
popa
lods
jne
pop
test
mov
or
sub
testl
loopne
jnp
or
rolb
imul
aaa
cwtl
push
push
mov
nop
push
add
sub
rcrl
cmp
mov
in
mov
lods
lds
pop
fmuls
lret
dec
das
mov
sbb
mov
adcl
repnz
adc
mov
test
fiaddl
int3
cli
cmc
out
jl
in
into
stos
imul
imul
cwtl
loopne
das
push
pop
inc
outsb
add
lcall
andb
stos
mov
outsb
jb
push
and
add
and
cmp
xchg
add
xchg
fbld
lock
outsl
and
lea
inc
cmp
cltd
test
inc
ja
xchg
shrl
js
and
sbb
mov
lcall
inc
shr
xor
shrb
xor
jns
mov
pop
je
testl
cmpl
in
inc
or
or
inc
movsb
mov
inc
rcrb
lea
lret
fwait
push
les
mov
sarl
mov
fs
adc
lods
and
call
fmuls
add
xchg
roll
dec
rcl
lods
cltd
cltd
jae
ja
dec
and
cld
mov
pop
imul
cwtl
cmc
fisubrl
sbb
popf
lret
push
pop
in
mov
and
sbb
pop
js
push
mov
or
mov
jnp
lret
sub
aaa
mov
jge
lock
loopne
mov
xchg
jb
rcrl
xchg
lret
ret
sbb
sub
jmp
call
xor
int
repnz
ds
sub
mov
mov
pop
and
loope
nop
push
sub
in
into
pop
mov
mov
mov
and
les
push
jo
add
mov
xor
xor
xchg
out
int3
mov
jecxz
jbe
xor
mov
push
push
sarb
pushf
push
pop
fiaddl
pushf
aad
mov
cmc
fsts
or
out
in
jne
pop
jmp
sbb
loop
inc
mov
dec
sbb
daa
loop
ss
and
xor
push
int3
sub
cmpsb
dec
inc
gs
push
ss
outsl
push
sub
ret
jl
mov
and
cmp
push
mov
es
inc
jmp
sbb
xchg
std
mov
mov
popa
xchg
lret
sub
dec
stos
push
sbb
adc
sti
ss
shll
cmp
mov
cmc
mov
out
enter
nop
or
aas
cmp
addr16
dec
sub
sub
push
ljmp
lock
dec
dec
jns
cmp
mov
test
xor
xchg
aad
inc
inc
shll
rclb
cwtl
push
xor
bnd
pop
aad
fistps
popf
adc
sbb
mov
jl
lcall
mov
sbb
fdivrp
jg
jmp
jge
leave
gs
push
pop
testb
jg
loop
sub
adc
pop
repnz
mov
aam
adc
xchg
test
adc
mov
pop
in
jo
fmuls
push
popf
hlt
push
lea
daa
in
cwtl
inc
push
and
sub
cmp
mov
jno
adc
int3
push
enter
ret
fldt
shrl
hlt
and
and
popa
pop
mov
dec
data16
sub
rcll
daa
ljmp
or
movsl
mov
les
or
lret
xlat
inc
jns
cwtl
outsl
mov
sarb
jne
mov
dec
lahf
dec
out
iret
xchg
lods
je
mov
wbinvd
inc
inc
sbb
pop
neg
movsb
sbb
ficomps
mov
and
xor
je
cmp
incb
sbb
inc
imul
adc
dec
cwtl
push
sar
out
outsb
sbb
repz
jae
aaa
daa
rcrl
pop
lock
pop
scas
imul
or
push
xor
ss
xchg
mov
daa
cwtl
unpckhps
pusha
nop
jns
test
addb
inc
iret
mov
inc
lea
movsb
cmp
inc
cmpsl
sbbl
insl
mov
clc
repnz
and
cmp
rcll
mov
adc
pop
outsl
lret
inc
adc
and
inc
xchg
fdivrs
push
fnstcw
in
ja
jb
mov
xchg
dec
or
test
imul
mov
adc
sbb
ficomps
jo
stc
inc
add
pop
and
ss
add
adcl
cmp
push
aad
cmp
pop
cli
xor
or
ja
movsl
mov
add
mov
push
loop
imul
es
mov
cmp
call
push
jl
add
mov
cltd
sub
sbb
mov
das
sub
sbb
inc
adc
ljmp
sbb
fsubs
scas
mov
dec
mov
pop
pop
xor
sub
cmpsl
jno
int
pop
xor
add
aas
rol
sahf
pushf
fisubs
push
push
adc
scas
pop
andb
into
dec
out
out
xor
enter
jns
div
mov
and
call
mov
hlt
jg
addb
cltd
pop
out
mov
jae
loop
iret
ljmp
rclb
inc
pop
ret
ja
or
ja
jns
sar
sbb
mov
lea
pushf
jp
insb
cwtl
mov
pop
nopl
jle
jno
pop
sahf
stos
mov
or
jne
or
push
jle
pop
fisubrl
xlat
xchg
cld
int
and
cmp
jo
movsl
jbe
movl
jne
fsts
sbb
into
insl
aad
dec
sahf
mov
cs
popa
aas
jbe
loopne
xchg
pop
gs
cmp
sahf
pop
les
jg,pt
cs
lods
jmp
test
lock
rcr
adc
out
iret
inc
leave
cmp
add
pop
stos
mov
shll
test
or
sar
into
xchg
sub
insl
enter
sahf
or
int3
mov
fwait
mov
sub
mov
lret
jae
test
out
lea
ja
mov
mov
inc
mov
lcall
or
imul
std
insl
mov
fs
dec
aaa
jno
ret
mov
push
js
sub
sbb
daa
cwtl
stos
jp
das
sub
inc
pop
subb
or
mov
aaa
mov
aam
int3
jmp
rcr
mov
loop
imul
mov
mov
adcb
or
sbb
fstpl
cwtl
fadds
jo
xchg
cli
aam
xlat
jae
ljmp
push
mov
xor
lret
rolb
cwtl
jo
test
cmp
xor
xor
je
or
test
repnz
sbb
sti
jae
push
addr16
cltd
push
sbb
mov
adc
sub
pop
test
test
fsubrl
mov
adc
sahf
ja
into
xor
subl
add
mov
xchg
jmp
ja
adc
adc
mov
fidivl
jge
popf
dec
jns
adcl
or
insl
mov
jae
lret
mov
out
mov
arpl
sbb
icebp
hlt
aam
push
add
push
mov
dec
adc
insb
or
pop
jecxz
rolb
jle
push
inc
ficoml
fdivs
clc
inc
out
mov
or
mov
jo
data16
cmp
addr16
mov
lods
rcl
add
inc
mov
add
test
pop
sub
jb
lret
or
out
inc
mov
cmp
adc
insl
dec
sub
imul
sub
sbb
push
cmc
or
cli
pop
cmp
cmp
mov
je
aad
push
test
jge
adc
test
pfcmpgt
pop
lret
movsl
mov
push
xlat
mov
sub
movsb
push
dec
lds
mov
shll
movsl
pop
dec
xor
cmpsb
sbb
or
out
aas
xor
push
xchg
mov
dec
add
pop
xor
loopne
jl
xor
dec
xchg
addb
push
mov
rep
popa
dec
cmp
mov
lcallw
xchg
inc
and
push
jmp
add
cmc
notb
icebp
ret
xchg
in
jns
test
pop
lea
out
mov
dec
add
sbb
loope
adc
divb
rcrb
adc
jae
and
lods
inc
sbb
pop
cmp
fs
pop
jno
rcll
lods
cltd
add
sbb
mov
and
into
mov
mov
xchg
outsl
pop
sub
pop
stc
add
add
jno
imulb
dec
xchg
rorb
aaa
mov
pop
cltd
popf
ficoml
push
repnz
mov
fcmovb
test
inc
arpl
xor
lods
inc
cmp
scas
dec
jne
test
out
jl
imul
js
cmc
cltd
stc
imul
add
cli
add
xor
sub
lret
sub
and
xor
gs
mov
xchg
popa
jp
hlt
push
sub
ret
or
std
stc
dec
mov
dec
pop
mov
icebp
xchg
and
mov
mov
neg
in
xchg
mov
shlb
jno
and
inc
pop
nop
xchg
repnz
fcompl
push
sbb
gs
sbb
fidivrs
adc
in
push
gs
cmp
je
icebp
dec
test
sbb
mov
sarb
ljmp
addr16
xor
lods
or
inc
cmp
ds
inc
jnp
push
cmp
jb
jns
gs
mov
mov
in
daa
out
dec
jmp
enter
adc
cmpsb
notb
mov
cmp
and
lods
cmp
inc
xchg
mov
in
jnp
xchg
adc
loope
fidivs
loop
xor
inc
sub
cmp
enter
ja
jb
sbb
lods
test
icebp
mov
jne
pop
pop
inc
sub
ret
test
push
fwait
or
sar
mov
mov
mov
pop
xchg
fnstcw
std
sub
pusha
cmpsl
subl
adc
dec
jecxz
dec
sar
jmp
pop
jmp
pop
das
xor
xchg
add
cmp
xor
sbb
xor
push
push
pop
xlat
or
mov
je
jmp
pop
dec
gs
dec
into
xchg
pop
sub
idivb
shll
jge
aas
mov
cmp
xchg
out
dec
add
loope
lret
cmpsb
in
push
aad
ja
jl
mov
pop
gs
adc
xorl
mov
adc
sub
fimuls
rolb
mov
cmp
insb
jns
pop
jg
xchg
push
aas
add
pop
and
push
mov
test
test
iret
shr
movl
ss
mov
stc
subb
push
push
pop
xchg
jge
mov
sbb
enter
aam
inc
pop
push
ss
mov
jecxz
mov
lret
jb
fistpll
xchg
jl
cs
and
je
repnz
stos
inc
sti
inc
sbb
sbb
mov
imul
or
xor
stos
data16
mov
xchg
mov
repz
mov
aam
jecxz
jbe
sbb
mov
int3
ja
stos
aaa
mov
call
cs
fwait
adc
jnp
mov
or
mov
sti
xor
pop
icebp
data16
nop
lahf
repz
in
mov
dec
lea
add
shlb
push
push
fimuls
inc
data16
cmp
shlb
dec
lret
or
mov
dec
mov
dec
add
lcall
or
push
enter
cld
sub
pop
jl
je
inc
jle
push
mov
mov
mov
cs
or
out
cs
cmp
xor
bound
in
imul
test
and
mov
bswap
stos
xorl
jne
xchg
rcl
aaa
mov
xchg
jle
mov
pop
lods
ret
gs
cwtl
push
or
bound
int
subb
lahf
push
filds
in
mov
and
or
cmp
jg
inc
jg
adc
push
test
rcr
imul
jmp
in
pop
fldl
std
xor
insl
aad
dec
nop
popf
or
sbb
jg
add
jg
popa
insb
pop
pop
adc
fnstenv
inc
test
les
mov
or
in
jmp
cmp
and
and
xchg
lds
je
add
adc
fstpl
scas
mov
jns
and
or
repnz
mov
fnstcw
lock
xlat
sbb
popa
je
cmc
sbb
sahf
sbb
lock
and
jmp
mov
pushf
mov
mov
in
loopne
repz
fcoms
and
jg
xor
jo
inc
jbe
dec
insb
adc
mov
xchg
iret
inc
lods
or
sub
cltd
pop
fisttps
imul
mov
sbb
jns
clc
pop
push
add
xchg
icebp
cmc
ret
ds
and
fstl
mov
iret
mov
pop
movsl
imul
mov
push
out
loopne
push
ljmp
hlt
dec
jecxz
push
loop
inc
mov
mov
pop
or
scas
pop
test
pop
pusha
and
dec
mov
lret
add
xchg
jl
cmp
shrl
ret
insb
mov
cltd
movq
push
rcll
lret
stos
and
cmc
add
add
xchg
sbb
dec
stos
sbb
mov
loopne
sub
aam
int
xor
mov
pop
inc
aas
pop
js
adc
or
fadds
into
push
out
mov
std
aaa
mov
gs
xchg
and
orb
cmp
mov
sbb
gs
push
cmp
in
or
addb
jbe
loope
inc
cmp
stos
cmpsl
cli
cmp
xor
jp
and
fwait
les
das
dec
stos
jbe
cmp
dec
jp
aam
add
pop
xor
pop
mov
cltd
adc
inc
mov
sub
sbb
sub
cmpsl
jns
loop
add
aas
addr16
or
push
add
cs
push
lea
loopne
adcb
call
inc
adcl
out
js
jne
push
or
inc
jnp
sub
adc
hlt
test
sbb
adc
push
scas
pusha
loopne
cmpsb
jmp
cmpb
cli
repz
xchg
faddp
loop
inc
aas
or
movb
cmp
movsb
inc
lret
dec
sbb
dec
cli
into
lret
push
cmp
mov
rclb
jmp
lods
rcl
sub
or
loopne
test
stc
das
inc
and
cmp
jl
clc
ret
add
xor
decb
push
ds
nop
cli
js
jp
ret
daa
xchg
dec
scas
push
aad
xchg
movsl
sub
jmp
lret
aaa
cmp
in
sbb
sahf
rcr
add
inc
add
outsb
xchg
jp
xor
mov
jge
cli
fcomps
cmc
xchg
adc
mov
stos
lods
push
fbld
cmp
ja
out
pusha
insb
out
cmp
xor
pop
pop
loop
push
divb
dec
xchg
shlb
mov
mov
in
outsb
movsb
repnz
movsb
dec
fmull
pop
adcl
cld
lret
stos
inc
inc
xchg
popf
xor
or
push
ret
and
mov
jp
lock
pop
mov
lret
das
ljmp
sahf
and
sub
mov
sahf
fnsave
adc
stos
push
stos
sbb
dec
bound
lret
popa
out
dec
ret
hlt
mov
xor
cmpb
cmp
mov
cmp
pop
shrl
outsb
fidivrl
cmp
sbb
cmpb
pop
imul
cmc
xor
pop
dec
mov
pop
adc
mov
sub
fisubs
dec
jl
cmp
inc
mov
push
sbb
in
cmc
or
repz
das
fwait
xlat
cmpsl
push
xor
push
jne
out
jns
pushf
mov
adc
in
notb
xchg
pusha
aaa
ret
ficomps
xchg
jmp
xchg
jg
cmc
in
xchg
adc
ja
aam
aad
test
and
cmp
dec
mov
int3
rolb
jl
adc
testl
push
jge
push
mov
cmc
xchg
js
lods
ficoml
testl
mov
cltd
xchg
lcall
jg
test
ljmp
push
negb
aad
cmp
xchg
lock
inc
dec
popa
inc
cmpsl
lock
adcl
inc
fldt
inc
in
test
mov
jmp
gs
jge
ret
or
cs
xchg
pop
fdivrp
ljmp
add
mov
and
inc
cmp
cmp
or
jge
scas
adc
pushf
fbld
fld
fcomi
mov
fidivrl
rorb
inc
inc
pop
dec
cli
push
clc
push
ret
in
mov
adc
xchg
daa
bound
jbe
pop
daa
lahf
ds
test
in
add
in
mov
fistpl
cltd
ret
mov
xchg
mov
jp
dec
inc
push
mov
mov
mov
mov
mov
in
jmp
cmc
in
hlt
out
push
fdivr
and
test
out
push
xor
adc
add
push
add
out
ss
mov
cli
notb
add
js
out
dec
dec
ror
and
xchg
mov
mov
push
and
ret
mov
cli
mov
adc
pop
addb
dec
mov
inc
mov
fs
in
dec
push
mov
in
mov
lret
jnp
fildl
call
and
inc
rolb
aam
mov
inc
push
and
cmp
bound
movsl
dec
xor
ljmp
push
aaa
mov
jmp
add
sbb
xchg
ss
shr
jl
jbe
aaa
inc
lcall
sahf
dec
daa
adc
pop
stos
inc
js
and
test
mov
cmp
fwait
mov
pop
mov
sub
lods
cmpb
decl
pop
inc
inc
call
imul
sbbl
enter
insb
in
sub
and
xchg
push
dec
neg
sub
aaa
sbb
dec
push
aaa
inc
loopne
repz
pop
inc
arpl
mov
mov
mov
aad
cwtl
fstpl
aas
fildll
mov
adc
imul
add
or
fwait
ret
or
jmp
jge
or
add
outsb
stc
fimuls
decl
dec
sub
sub
jl
fcoms
jg
mov
inc
test
push
jbe
xor
test
mov
shrl
fsubl
push
sub
add
mov
xchg
stc
enter
in
cmpsl
mov
pusha
lret
lcall
sbb
xchg
test
call
iret
in
sub
sub
sbb
jg
sub
mov
cmp
sti
xchg
mov
cmpsl
test
lock
test
lea
pop
jbe
xchg
out
loopne
and
in
cmp
jmp
ss
sbb
push
int
mov
scas
out
jae
xchg
stos
mov
cmp
and
inc
nop
das
pop
xor
push
cmp
inc
insl
push
leave
cmp
out
add
inc
cltd
mov
mov
push
loopne
jo
rorl
int3
rcrl
in
stos
pop
dec
imul
bound
cli
xchg
dec
inc
jg
insb
push
pop
rolb
mov
xor
nop
inc
dec
test
int3
mov
adc
rcrl
xchg
lcall
jne
push
push
sub
arpl
ret
jge
xchg
mov
pop
mov
cmp
jmp
stos
push
aam
xchg
xor
repnz
mov
out
aad
xchg
pop
pop
and
inc
cltd
dec
xor
insl
push
jbe
sbb
movsl
or
js
imulb
xchg
add
fcmovnu
mov
ja
cld
jg
jmp
pop
test
and
in
dec
sub
push
mov
lods
stc
xor
imul
sbb
adc
icebp
aas
das
imul
frstor
popa
pop
imul
repnz
cmc
pop
and
jge
pop
cmpb
dec
mov
lea
aaa
jo
sarb
ja
cli
cmp
cmp
cmc
xchg
das
scas
int
jb
xor
lods
int3
cmpsl
lret
mov
adc
movsl
ja
fldl
lods
test
and
cmpsb
jle
sti
mov
fneni(8087
or
sbb
pop
int3
cmc
hlt
pusha
xchg
add
shll
bound
adc
daa
fsubs
ret
and
out
test
adc
push
mov
xchg
xchg
insb
sbb
sbb
sub
jmp
outsl
xor
adc
dec
cmp
pop
or
sbb
or
lods
in
movsl
clc
fnsave
mov
pop
pop
lods
dec
jg
aad
sbb
cmpsb
cmp
dec
push
jbe
and
cli
lods
jle
xchg
jb
push
adc
jp
xchg
push
pop
inc
push
arpl
xchg
mov
loop
add
test
push
mov
or
mov
shlb
nop
sbb
xchg
push
out
outsl
lahf
test
mov
and
outsb
sub
insb
mov
in
popf
daa
shll
lcall
push
push
fisubs
mov
pusha
lods
cmpsb
movsl
cmpsl
popa
and
ljmp
testb
jno
cmp
pop
imul
scas
and
mov
jl
push
push
adc
std
movsl
mov
sbb
inc
js
shrb
stos
and
repz
cli
xorl
cmp
sarl
shll
sbb
dec
std
test
jnp
pop
lret
in
aad
fnstenv
sub
test
cmp
adc
jb
rolb
adc
push
daa
xchg
shlb
inc
xchg
xchg
xchg
imul
mov
mov
daa
lods
movsl
fsubrl
ljmp
xor
divb
push
mov
lcall
movsl
fstpt
out
add
sbb
and
pop
gs
push
out
cltd
sub
test
sbb
outsl
pusha
test
pop
xor
test
mov
iret
lcall
xchg
dec
xchg
dec
dec
ja
cli
jg
sub
testl
popa
shl
iret
push
pop
push
cltd
arpl
arpl
dec
imul
in
sahf
lcall
aad
fwait
push
push
inc
call
enter
mov
leave
fdiv
sbb
cmp
mov
xor
xchg
sbb
sbb
or
std
sub
or
icebp
aad
popa
sub
lds
add
mov
push
cmp
pop
or
adc
sbb
push
xor
enter
or
jle
aam
adc
adc
cmc
aad
in
pop
mov
jmp
mov
pop
sahf
in
and
cmc
pop
sub
out
clc
xchg
inc
cmp
insb
push
lds
lret
mov
jl
inc
xchg
cli
outsb
iret
adc
repz
or
push
fsub
faddl
int3
push
push
push
adc
mov
test
mov
clc
xchg
mov
mov
roll
jle
jnp,pn
add
out
into
jbe
dec
xchg
xchg
push
xlat
xchg
inc
fcompl
mov
sub
push
and
pop
cmpsb
cmp
call
jne
hlt
dec
sbb
fwait
sub
cmp
loopne
stos
xor
aad
rol
loope
pop
push
sub
sahf
sub
insl
fisttpll
filds
jbe
test
push
xor
movsb
xchg
mov
out
dec
aam
mov
mov
lret
popa
mov
dec
pop
insl
faddl
jl
push
inc
mov
cli
inc
or
stc
lods
idivl
xor
out
mov
shlb
imul
daa
pushf
push
lret
add
ljmp
das
and
loopne
pop
push
mov
jge
ds
gs
dec
jp
imul
arpl
int
pop
ss
lret
test
les
stc
add
ret
cltd
jmp
mov
lods
push
xor
aas
in
pop
xor
inc
ret
outsl
sbb
mov
xchg
decl
pop
push
outsl
int
jb
in
lret
jmp
or
outsb
xor
inc
es
sub
stos
jg
push
and
es
and
mov
cmp
dec
fisubrs
sbb
jecxz
loopne
fs
xchg
pop
pop
lea
jns
mov
pop
pop
sahf
ds
lock
in
sub
jge
leave
sbb
and
insb
mov
cmc
adc
leave
inc
rorb
in
test
lea
cltd
fsts
add
and
pop
mov
sub
pop
xor
mov
xchg
pop
mov
in
in
lea
inc
mov
lods
test
sbb
mov
add
iret
inc
fdivrl
xor
mov
cmc
adc
dec
rorb
shl
dec
stos
mov
inc
scas
jle
xchg
idiv
pusha
lcall
cmp
push
mov
cmp
out
inc
mov
adc
push
mov
cmp
jns
dec
mov
sub
lcall
out
xchg
andl
sti
out
cwtl
repnz
xchg
xchg
dec
in
stc
andb
dec
xchg
pushf
xchg
aam
cmp
cs
scas
pop
fs
and
mov
pop
sub
dec
ret
and
jbe
enter
lcall
aam
dec
clc
loope
lock
xchg
cmp
inc
jb
ret
int
aas
push
pop
mov
orb
movsb
pop
addr16
or
lock
or
xor
lcall
test
pop
cmp
scas
ret
sub
fadds
xor
iret
out
js
popf
mov
or
insb
popf
movl
sbb
add
and
inc
inc
les
pop
lcall
pusha
xchg
xor
pushf
add
inc
addl
push
sbb
lret
and
cmp
dec
aaa
cltd
dec
mov
aas
in
inc
inc
pop
inc
lret
and
cmp
adcl
lods
loop
ret
ds
lahf
in
push
jb
pop
inc
jl
out
enter
xchg
int
in
inc
mov
call
push
fsubrl
add
outsl
mov
mov
rcrb
and
and
pop
or
dec
mov
in
push
ffree
cs
inc
mov
cmpsl
add
lock
in
out
shr
mov
mov
aad
jne
mov
jmp
stc
inc
shl
pop
mov
mov
mov
icebp
xchg
fldcw
xchg
and
and
xor
lahf
mov
cmp
push
push
scas
mov
pop
add
lret
paddusw
jle
jle
inc
movsb
inc
ret
aaa
dec
mov
cwtl
xlat
xchg
add
test
mov
jne
mov
jne
dec
addr16
push
adc
test
cli
cld
push
loope
push
test
and
cmc
xor
cltd
and
xchg
aaa
push
data16
outsl
cld
loop
inc
mov
mov
adc
pop
push
jnp
jl
leave
sub
cmp
xchg
int
sub
sub
jl
sub
and
pusha
jecxz
push
add
sti
push
out
sbb
aas
and
rcl
scas
jns
lcall
jle
ret
out
adcb
add
jne
jb
mov
and
mov
cwtl
inc
addr16
dec
jns
arpl
pop
flds
int3
adc
jg
add
or
push
rolb
icebp
jmp
pop
clc
gs
adcb
fcomp
and
out
xor
push
sarl
cli
lret
sub
imul
ds
pop
fbld
push
xchg
xor
push
repz
les
out
fs
nop
imul
add
cmp
mov
enter
dec
push
mov
or
jns
xor
cltd
fsubrs
mov
outsl
in
pop
dec
sti
inc
call
rcrl
mov
sahf
cmp
incb
nop
out
fsub
cmp
std
fadds
mov
mov
mov
repnz
push
push
cmp
in
popf
mov
sub
inc
mov
jle
mov
cmp
mov
iret
push
push
xchg
push
imulb
mov
inc
jo
push
cmp
mov
adc
sub
adc
ret
dec
sbb
sbb
xchg
pop
rolb
rcl
nop
jg
rorb
lret
pop
hlt
or
xor
lock
mov
lods
mov
xorb
das
and
fmul
scas
test
stos
lock
in
push
inc
dec
add
sti
pop
inc
add
sti
xchg
sub
aad
lods
push
adcb
das
ds
jmp
sub
dec
fisubl
mov
pop
or
inc
jnp
mov
xchg
fwait
sbb
xchg
mov
mov
xor
cmp
push
jmp
pusha
xor
notl
mov
push
je
cmpsb
ret
mov
mov
shl
mov
addb
xchg
and
es
outsl
stos
sbb
fadds
mov
jb
loope
xchg
or
pop
dec
push
mov
int
enter
leave
add
xor
or
and
mov
pushf
insl
mov
ficoms
xlat
setnp
push
pop
mov
pop
and
fimull
mov
aas
sub
sbb
insb
push
insb
xchg
inc
pop
pop
jge
cmc
scas
icebp
mov
popf
les
cmp
pop
cmc
push
lret
cmovs
jecxz
push
loopne
ds
daa
lahf
fmull
sub
sti
jo
push
pop
add
lcall
push
adc
xor
sbb
mov
dec
xor
mov
mov
pop
add
lods
pop
movl
sbb
cmp
jne
data16
mov
mov
and
shr
in
add
mov
bound
mov
js
out
frstor
sub
shrl
cmp
push
inc
or
or
xchg
aaa
jo
xchg
push
sub
pop
cs
stc
mov
and
rolb
pushf
adc
out
seto
and
sub
lcall
jp
dec
mov
je
sub
add
nop
sbb
inc
jne
jne
or
mov
inc
push
sub
pop
mov
sub
or
push
mov
ret
mov
and
ret
pop
cltd
fsub
push
cli
push
hlt
cmc
adc
test
fs
rolb
out
out
inc
jb
fdivrs
js
xchg
lock
push
mov
scas
lods
testl
mov
sub
orb
sbb
jg
adc
push
pop
cmp
dec
popf
fdivl
push
adc
and
lret
arpl
adc
xchg
ds
and
add
dec
jg
arpl
inc
and
aas
sbb
xor
xchg
fs
stc
and
pop
cmp
or
add
sbb
jl
push
pop
testb
mov
rorl
inc
jbe
or
jno
push
mov
or
adc
popa
or
mov
stos
bound
outsb
add
xor
call
lock
arpl
bound
xchg
xchg
or
mov
mov
push
stc
test
dec
pop
mov
inc
push
shrb
sub
mov
inc
jae
arpl
aam
or
jge
pop
or
sbb
jp
mov
pop
dec
icebp
lcall
inc
or
into
push
mov
pop
jmp
cmp
mov
add
add
add
jo
mov
push
xchg
mov
clc
icebp
mov
out
lret
cwtl
call
xlat
jmp
rcr
ss
clc
sub
add
cli
in
inc
mov
mov
insl
sub
gs
jne
shrb
mov
mov
mov
fmuls
in
cwtl
shr
test
sbb
adc
pop
into
rcrb
and
lods
xchg
jo
cli
mov
sub
lea
test
ss
xor
stos
enter
lret
mov
fbstp
jb
mov
es
loope
xor
pop
lahf
pop
repz
pop
cmp
sub
push
lret
push
aaa
sbb
movsl
mov
repz
test
aam
cmpsl
daa
jmp
mov
iret
cmp
outsb
jmp
mov
cltd
cli
mov
pop
popf
xorl
scas
outsl
sbb
arpl
jg
aaa
lret
frstor
shrl
jo
sbb
popf
xchg
out
or
push
int
pop
pop
lods
sbb
xchg
mov
nop
push
xchg
clc
std
mov
sbbb
enter
imul
cmc
jl
popf
rorb
mov
sub
mov
arpl
lret
xchg
jne
push
push
inc
jns
jne
cwtl
xchg
stos
or
add
and
popl
cmp
bound
flds
sub
jmp
arpl
sub
mov
xchg
lods
outsl
loopne
mov
gs
les
and
mov
jnp
push
pop
inc
ja
mov
outsl
lcall
jp
mov
shrb
dec
push
jg
out
push
call
xlat
ret
inc
sbb
sbb
enter
xor
rcrl
adc
mov
cmc
adc
in
jmp
stos
fadds
mov
add
decb
dec
push
sahf
mov
mov
adc
movsl
imul
std
test
jg
test
or
ret
lahf
je
mov
sbb
pop
or
adc
leave
loop
push
and
out
pop
dec
fwait
push
adc
jne
out
das
sbb
and
or
notb
fnop
cmp
sub
aaa
out
leave
je
nop
fcoml
xor
ja
fidivs
xchg
mov
xor
rclb
push
je
loope
loope
jle
daa
push
or
out
mov
neg
imul
dec
addr16
lahf
repz
pop
mov
cmp
sbb
push
jns
imul
scas
pop
imul
icebp
popf
and
mov
idiv
scas
mov
lock
dec
add
jbe
add
lahf
xlat
pop
xchg
sahf
pusha
mov
lods
ljmp
sbb
mov
dec
enter
sbb
jg
inc
dec
jp
enter
daa
add
and
fsubrl
adc
into
inc
cmc
or
test
gs
inc
mov
in
shll
lcall
lcall
mov
mov
test
push
adc
adc
push
ret
repnz
ficompl
ljmp
negl
in
xchg
push
add
fcoml
pop
and
iret
movsl
jp
lret
dec
xor
les
sub
cltd
lret
push
ret
mov
xchg
outsl
jle
or
fsubrl
test
push
xchg
cmp
sbb
mov
stos
in
and
shll
out
imul
jno
mov
and
sbb
sbb
xor
js
pop
lahf
insl
or
mov
xlat
bound
loopne
stos
sti
xor
cmp
lret
cmp
mov
jb
sub
lret
xchg
subb
and
cltd
pop
jg
rol
dec
stc
movsl
sub
sub
mov
xchg
or
pop
mov
mov
cmp
mov
mov
bound
fst
mov
leave
mov
push
cli
repnz
inc
xchg
or
in
or
pop
int3
pop
popf
imul
sti
add
jge
mov
xchg
lcall
dec
add
scas
push
push
inc
push
and
jmp
adc
call
cmpl
and
cmpb
int3
pop
call
cmp
jb
iret
add
adc
ja
fstpl
mov
divl
dec
xchg
dec
aam
je
sbb
addr16
inc
and
push
mov
mov
repz
imul
insb
enter
addb
or
sub
jo
sbb
subb
ret
lods
lcall
and
or
xchg
adc
adc
sbb
je
es
sbb
sub
or
in
imul
sub
mov
lret
divl
xor
inc
clc
bnd
arpl
sti
and
addl
push
mov
xchg
std
repnz
xor
dec
xchg
stc
fisttps
rep
popl
inc
out
jp
fs
mov
shrb
sub
sti
push
dec
sbb
ficompl
add
aad
sub
push
and
push
ss
or
int3
mull
mov
mov
pushl
mov
out
add
pop
iret
je,pn
lcall
stc
fcomps
xor
push
sbb
cmp
adc
fnstcw
push
mov
je
gs
adc
adc
ja
sbb
lock
or
jnp
out
mov
dec
add
sbb
xlat
adc
sub
pop
iret
pop
popa
cmp
mov
mov
int3
mov
int
pop
pop
inc
push
test
jge
inc
in
pop
cli
cltd
or
cvtps2pd
bound
test
pop
jb
mov
dec
or
jne
jbe
fistps
clc
sub
ret
loop
hlt
jp
dec
mov
adc
sti
cli
ss
add
pop
cmp
jmp
mov
leave
add
jb
outsb
out
fcmovnu
fnstsw
test
fwait
test
jnp
xchg
add
ljmp
mov
icebp
ficomps
lcall
stos
in
data16
out
xchg
push
ljmp
mov
fcos
adc
cmp
mulb
aad
call
bound
arpl
xchg
sub
cld
aam
dec
sub
nop
pop
ljmp
adc
add
popa
mov
xor
imul
out
cmp
out
loop
dec
push
outsb
jp
cmp
mov
rorl
push
mull
xor
fstps
push
or
ret
jl
sub
sub
js
hlt
mov
repz
imul
inc
arpl
sbb
dec
sbb
stos
divb
ret
dec
rorl
jae
mov
add
imul
cltd
xchg
lcall
dec
or
test
pop
pushf
das
rol
jo
pop
or
hlt
stos
in
movsb
vmread
dec
inc
xor
add
xor
jge
sbb
mov
jne
push
adc
jle
jmp
mov
ljmp
mov
push
pop
rclb
mov
and
sbb
stc
inc
push
ljmp
xor
mov
mov
mov
ja
ror
adc
fiaddl
movl
xor
adc
movswl
jmp
les
lds
insb
mov
fisttps
jo
pop
dec
adc
mov
enter
mov
stos
rcl
lahf
clc
xchg
daa
mov
sub
pop
cld
cmc
lods
mov
sbb
mov
mov
jge
in
fnstcw
stos
in
inc
mov
daa
cmp
pop
shlb
test
push
lahf
ret
loopne
jecxz
ljmp
jns
aad
jmp
mov
addl
mov
xchg
test
add
outsb
shl
jne
inc
jl
jo
mov
cwtl
mov
fisttpll
lret
mov
pop
mov
lds
or
fwait
rcll
xchg
add
inc
pushf
fnstsw
sarl
fsubs
rolb
imul
lret
popa
inc
mov
rcl
xor
inc
ret
cltd
fidivl
mov
xchg
push
sbb
test
or
lods
cld
inc
push
xor
outsl
stos
push
jno
jne
mov
push
pop
notl
dec
jns
mov
jns
mov
imul
repz
push
popa
insl
mov
inc
loopne
or
shlb
jg
fsub
es
arpl
fcmovne
cmp
pop
jne
jo
lods
inc
sub
and
mov
xchg
mov
incb
sbb
test
movsl
out
fadds
mov
sbb
cs
shrl
clc
ljmp
in
mov
push
cld
add
sarl
idivl
gs
mov
mov
add
mov
push
jno
pop
add
dec
stos
sti
ror
aam
sub
cmp
adc
insb
pop
fs
subb
dec
xchg
xchg
cld
mov
pusha
dec
cmpsl
shr
mulb
test
mov
scas
sub
mov
xchg
dec
fs
mov
mov
jmp
ljmp
inc
sbb
adc
cmc
or
popf
mov
pop
sbb
mov
push
popa
repz
pusha
loopne
sub
or
sbb
iret
adc
cmp
addr16
xor
mov
mov
test
test
addl
test
imul
pop
mov
push
cmpsb
cld
adc
leave
push
andps
jp
xor
das
mov
outsb
adc
divb
or
imul
mov
mov
test
cmpsl
xor
lcall
shrb
cmp
sarl
xchg
lods
sub
jle
push
out
aaa
mov
xor
insl
jbe
pushf
mov
mov
cmp
xor
push
test
outsb
ds
or
mov
pusha
mov
cltd
mov
mov
pop
sti
fiaddl
nop
jo
shrb
cs
mov
pop
dec
dec
mov
pop
cwtl
call
insb
and
insl
push
cli
mov
ficoms
je
pop
lds
out
addr16
daa
dec
pop
lahf
mov
pop
dec
hlt
pop
or
lcall
sub
inc
repnz
mov
aad
movsb
push
mov
adc
jecxz
and
mov
xor
adc
cmp
rol
dec
xor
ret
push
jae
ret
lods
into
loopne
cmp
cli
xor
testl
mov
jge
dec
adc
or
js
enter
popf
push
or
pop
hlt
mov
push
mov
and
push
pop
mov
push
cmp
add
cmp
lds
outsb
jmp
cmp
ror
xchg
pop
and
jbe
scas
add
pop
idivl
dec
cmp
jle
and
cmp
mov
adc
lds
arpl
ja
lock
dec
dec
adc
and
mov
rorl
std
rcrb
mov
movsb
jle
push
inc
inc
sbb
fcoms
adc
fidivs
cmp
push
pop
sbb
test
vpsllq
xchg
mov
stc
inc
fidivrl
int
dec
mov
mov
stc
jmp
stc
outsl
mov
mov
ja
nop
into
and
repnz
pop
fwait
mov
and
imul
dec
out
xchg
or
movsb
clc
mov
add
cld
jb
lds
adc
movsl
add
outsb
rclb
jl
xchg
sub
jbe
fsts
add
ficoms
add
clc
rorb
ss
and
push
jb
fst
add
jl
push
call
sub
dec
sub
or
xor
adc
dec
repz
xchg
jecxz
xchg
pop
test
jg
loopne
sbb
jo
inc
xchg
cli
lods
or
xchg
xor
adc
mov
pushf
mov
jno
popa
sbb
dec
loop
repnz
nop
pushf
add
xor
iret
pop
mov
ss
dec
and
jle,pt
imul
or
pop
mov
fsts
sub
addr16
ficoml
mov
cmc
js
jl
xchg
ret
xor
pushf
lds
pop
je
cltd
call
fisubs
fwait
jmp
push
loop
xchg
xchg
mov
mov
mov
fldl
in
test
sahf
imul
push
pop
shr
jecxz
cmp
jne
lock
cld
aad
lods
mov
ss
imul
shll
out
mov
es
les
mov
jecxz
movsl
mov
out
cmpsl
jmp
xor
lods
dec
xor
dec
sbb
mov
add
psllw
stc
int
pop
mov
outsl
adc
or
xchg
add
inc
mov
arpl
inc
jo
sub
into
mov
out
sub
jmp
ret
sbb
dec
out
mov
mov
mov
in
mov
or
out
rorb
inc
push
movsl
lods
ret
out
inc
mov
mov
xchg
jmp
sub
mov
push
bound
or
int
ret
nop
cmc
test
cmp
das
xchg
dec
push
and
test
std
inc
or
popa
fdivrp
cmpsl
xchg
xor
in
ds
faddl
pop
cmp
fsubrp
loop
cltd
or
popf
mov
lea
xchg
lock
xor
sbb
ja
mov
mov
shrb
or
std
test
dec
inc
inc
rclb
cmp
mov
mov
and
jne
in
pusha
xor
aas
and
mov
push
test
push
sub
mov
inc
or
push
ja
mov
xor
mov
pop
movsb
test
cld
mov
mov
fdivrs
mov
push
cld
hlt
xchg
lret
out
xor
cmc
sub
loopne
fsubrs
repnz
adc
lds
push
xor
imul
sbb
and
fstl
call
pop
js
imul
xchg
mov
jle
in
push
mov
bound
push
stos
pusha
mov
stc
xchg
test
mov
outsb
fwait
jns
xchg
icebp
outsl
cmc
mov
pop
jb
aas
push
mov
subb
pusha
cmp
inc
enter
aas
sbb
pushf
fldt
loop
and
jmp
and
pop
dec
sbb
jg
fistl
test
mov
xchg
mov
pop
lds
jmp
adc
incb
and
jo
shlb
popa
push
ret
pop
or
and
mov
outsb
rol
rcll
push
sbb
movsb
enter
or
sti
mov
call
or
addr16
cwtl
arpl
jecxz
jo
and
jp
in
fwait
in
mov
daa
and
mov
xchg
pop
mov
in
jo
outsb
andl
insb
pop
xchg
daa
jae
cmp
loopne
and
and
mov
mov
std
mov
fiaddl
insl
mov
mov
cmp
enter
mov
js
sbb
mov
sbb
push
int3
xor
bound
pushf
scas
in
mov
add
xchg
fildll
add
mov
sub
push
pop
dec
pop
push
mov
xor
cmc
sbbl
imul
mov
shrb
shll
test
cmpsb
mov
enter
mov
cltd
shlb
lea
in
push
loope
scas
dec
arpl
in
add
sahf
rcll
ljmp
dec
push
rcrb
stos
test
mov
imull
inc
xchg
mov
imul
mov
dec
addr16
pop
loopne
or
ss
rsqrtps
repz
popf
adc
and
sarb
inc
cwtl
shlb
pop
fimuls
sbb
mov
lret
mov
ss
out
mov
mov
ljmp
lahf
or
leave
lret
or
insl
rorl
lods
mov
mov
rcll
mov
sbb
mov
pop
cmpsb
movsb
sbb
outsl
icebp
jecxz
cmpsl
stos
xchg
mov
sti
pop
int3
xor
jno
cmp
jmp
out
rcrb
sbb
iret
test
jae
mov
das
pop
adcb
cs
add
mov
jl
sbb
lds
mov
mov
lahf
das
inc
pushf
in
repnz
loopne
mov
roll
out
outsl
lds
mov
shr
jmp
jbe
aad
jmp
mov
jo
loope
ret
mov
rorb
pop
jge
sbb
mov
sbb
test
jo
cmp
insl
pop
mov
das
cmp
imul
loope
add
sti
dec
sub
mov
mov
add
addr16
and
and
jmp
push
inc
cmpsb
repnz
shld
shlb
xor
pop
push
loopne
hlt
or
dec
mov
mov
cli
in
mov
fstpt
dec
hlt
push
jns
movsb
mov
in
cli
jae
or
jno
arpl
pushf
stos
jle
and
dec
mov
sbb
out
sahf
jb
mov
xor
or
add
jg
push
movsb
hlt
sbb
movsb
ljmp
pop
rcll
jmp
in
push
add
mov
mov
xor
mov
xchg
add
xor
xchg
sub
stos
ss
or
or
inc
lcall
pusha
and
and
xor
test
cli
inc
dec
test
push
mov
push
mov
loop
mov
xor
mov
roll
das
push
mov
inc
in
jp
jae
shlb
or
rcll
xchg
cmc
lea
fwait
xor
notb
add
and
inc
sub
mov
add
cmc
xor
sbb
xchg
and
ret
bound
lds
lock
inc
loop
aad
sub
daa
fnstenv
add
inc
xchg
mov
mov
sub
xchg
jecxz
mov
xchg
mov
add
push
jl
outsb
jge
cmp
repz
mov
in
and
adc
sub
test
divl
or
and
xcrypt-cbc
cmpsl
push
cmp
sbb
aaa
out
adc
pop
sub
pop
enter
dec
mov
dec
addr16
xchg
stos
xorb
adc
sbb
sbb
lock
aam
inc
cld
cld
push
pop
je
decl
and
int3
fdivl
pusha
call
test
pop
mov
xchg
mov
push
jg
sbb
xlat
jmp
loop
mov
or
outsb
lcall
sub
enter
lods
rcr
inc
mov
jl
inc
lcall
andb
test
pop
hlt
leave
pushf
ss
test
shll
push
addr16
cs
lret
jb
js
pop
pop
pop
adc
enter
mov
or
xchg
rcrl
pop
cmp
arpl
mov
mov
lock
mov
and
jl
arpl
lcall
add
rcr
or
ror
js
test
dec
repnz
xor
xchg
and
outsl
sarl
xor
ret
xor
xor
adc
data16
sarb
arpl
movsl
add
lods
lret
enter
xor
push
movsb
mov
je
ja
or
or
pushf
mov
inc
jp
call
fadds
xor
enter
pop
movzwl
into
fistpll
add
mov
xor
adc
sbb
push
stos
loope
lret
fs
icebp
sbb
push
out
xchg
dec
dec
cmp
les
sbb
jle
adc
xchg
pop
mov
and
pushf
jb
adc
fcmovne
mov
inc
xor
int
jnp
outsb
out
mov
or
movaps
outsl
mov
or
fs
mov
outsb
push
enter
and
popa
loop
mov
pop
or
sbb
rorb
rcr
shl
push
jno
lret
and
sub
sub
add
insl
pop
xchg
leave
outsl
mov
adc
cmpsl
lea
cmp
push
and
xchg
push
test
ss
gs
lea
xchg
fistl
xchg
dec
repnz
push
mov
lcall
xchg
and
jg
nop
call
ljmp
pop
sti
dec
mov
sub
nop
les
pop
jne
mov
pop
aam
idivb
pop
mov
pusha
icebp
push
mov
mov
subl
xchg
fimull
pushf
jmp
ffreep
cmp
pop
mov
sbb
dec
clc
jecxz
lea
and
imul
pop
xor
ret
cmp
push
dec
ficoms
ja
mov
loop
lods
mov
jne
mov
jecxz
push
mov
jne
popa
setne
jbe
mov
lret
loop
jle
inc
out
xor
sub
shl
and
xchg
mov
xorb
add
imul
aas
loope
cmp
jl
jb
or
lret
cmp
add
cmp
jbe
dec
idiv
dec
jne
ret
sub
inc
jne
or
nop
pop
movsb
stc
fistl
imul
inc
jb
bound
test
xchg
movsl
push
add
push
jle
ds
jle
iret
ljmp
adc
pop
ficomps
dec
sti
or
push
mov
mov
jecxz
or
sbb
fs
aam
add
inc
loope
cmpsl
push
add
pop
add
sub
xor
inc
movsl
xor
pushf
leave
add
in
push
xchg
lods
sbb
pop
cmp
sbb
mov
jg
pop
daa
dec
cmpsb
insl
loope
insb
fnstsw
in
test
out
cmp
xchg
out
rolb
mov
or
mov
dec
inc
dec
in
mov
xor
cmc
push
adc
pop
push
xor
pop
inc
bound
cltd
mov
dec
or
out
aad
sbb
addr16
imul
mov
mov
scas
mov
jp
pushf
mov
mov
ss
fildll
push
pop
fisttps
fistpll
xchg
jl
jp
std
scas
mov
lret
rcl
jmp
fsubrs
pop
push
inc
aam
mov
js
jb
xor
inc
shll
lcall
aas
in
push
fisttpll
sub
test
loope
fstpt
and
add
push
and
in
inc
imul
cmpsb
icebp
push
sarl
jmp
jns
lret
add
outsl
jo
fcomps
ljmp
mov
inc
or
and
xchg
xchg
push
sub
mov
sub
mov
in
add
stos
dec
add
das
sub
fnstenv
push
jmp
or
dec
mov
sbb
hlt
push
jae
mov
aam
mov
enter
xchg
mov
inc
in
xchg
xchg
or
enter
insb
push
mov
dec
ds
test
mov
enter
cwtl
mov
rclb
fstpt
dec
or
nop
inc
mov
sbb
and
adc
adc
cmp
sbb
mov
add
add
jg
jl
ja
cmp
push
mov
sbb
push
inc
mov
fistpl
jb
addr16
aaa
and
jmp
dec
add
mov
iret
mov
hlt
sub
aas
leave
jb
test
jne
add
test
push
dec
scas
aad
imul
fisubrs
idivb
cltd
mov
stos
int
ja
shrb
jo
mov
mov
inc
loop
cmp
lcall
mov
and
jle
xor
sarb
push
push
pop
dec
fiadds
outsb
and
movsb
adc
adc
leave
rolb
sbb
lahf
outsl
movsl
cmp
mov
cmpb
mov
mov
in
jmp
sub
jg
dec
mov
and
mov
jae
outsl
les
mov
push
loopne
jp
inc
xor
lret
or
mov
mov
jg
test
push
inc
in
push
movnti
add
call
and
es
pop
addb
jne
repnz
ret
inc
push
int
fucomp
push
dec
std
adc
rcrl
sub
jnp
adc
out
xor
nop
iret
mov
sub
adc
jecxz
pop
std
and
jmp
mov
push
pop
add
dec
out
sbb
sbb
divl
sub
inc
cmp
adc
push
push
jno
add
push
repz
cmpl
jl
js
sar
test
out
mov
and
push
mov
ret
stos
icebp
or
gs
xchg
adc
dec
xlat
out
lret
mov
lea
sahf
fcomps
xchg
cli
or
dec
hlt
test
xchg
mov
lods
outsl
aad
mov
repz
lret
mov
jne
out
js
mov
es
mov
loopne
repz
xor
repnz
loopne
rcll
es
fdivr
jnp
inc
mov
popa
sub
es
aad
shrb
add
cli
mov
jmp
stos
loop
push
push
push
clc
mov
in
mov
scas
pushf
out
adc
mov
adc
xor
mov
test
dec
fldz
sub
xchg
xchg
cmp
sub
dec
xor
loope
repz
rorl
sbb
ljmp
mov
loop
sub
xor
in
push
out
sbb
sub
xor
xor
ficomps
pop
aam
bound
into
xlat
add
in
pop
out
xchg
pop
dec
fstpl
cmp
movsl
fistps
add
mov
cs
pop
or
push
mov
adc
sub
lcall
leave
cmc
sti
push
gs
add
rcrb
je
mov
pop
outsl
push
inc
push
xor
add
add
mov
jno
fistps
enter
add
in
adc
adc
lcall
cmp
cld
stc
enter
outsl
mov
out
xchg
or
jbe
xchg
mov
pushl
mov
mov
test
shl
xor
sbb
push
incl
leave
aas
fs
jb
dec
les
inc
xor
jmp
les
xor
cmp
mov
or
inc
lock
lcall
xchg
cmp
inc
je
bound
mov
test
popf
movsb
sub
loopne
sub
clc
mov
sbb
or
cmp
mov
movsl
jge
jns
push
or
mov
push
fs
or
jae
push
mov
addps
xor
scas
ljmp
cs
ja
dec
test
hlt
jge
rorl
or
jle
cli
pushf
mov
push
loope
cmp
xchg
cmp
inc
inc
and
sti
insb
dec
jbe
adc
cld
and
jno
pop
lock
nop
insb
mov
or
mov
sub
add
xchg
push
or
sub
inc
or
add
jp
aad
icebp
clc
stos
adc
daa
xchg
lahf
std
movsl
and
cmp
mov
sahf
push
fnsave
out
adc
jmp
das
mov
mov
add
jne
lea
imul
adc
dec
inc
cmp
loopne
xor
out
sbb
xchg
xchg
js
cmpsb
je
push
mov
xchg
fsts
scas
push
clc
pushl
mov
xchg
out
mov
adc
push
jecxz
or
lock
mov
in
inc
xor
pushf
ret
xlat
add
lret
insb
hlt
mov
dec
mov
imul
xchg
ds
mov
mov
sub
sbb
pop
add
fdivl
adc
in
cs
push
mov
inc
cli
pop
jecxz
aaa
imul
ss
sbb
mov
fdiv
je
cmp
jl
arpl
and
stc
aas
adc
cwtl
or
repnz
scas
xor
fimuls
sbb
idivl
das
jbe
mov
das
add
push
sbb
xor
pop
sar
cli
sub
sub
shll
or
lcall
mov
and
and
jmp
repz
xchg
in
addr16
sbbb
orl
mov
loopne
inc
dec
in
xor
sbb
test
popf
lret
cli
sbb
lret
fistpll
inc
in
test
mov
inc
mov
and
aaa
push
pop
int
arpl
sub
dec
mov
mov
rclb
stos
cmpsl
aam
pop
fs
dec
cmp
or
sbb
std
cwtl
inc
xchg
fwait
gs
out
aaa
mov
loope
rclb
sti
sbb
es
and
into
les
or
test
push
shr
cmpsb
lods
dec
out
add
sahf
loop
mov
stos
sbb
sub
sti
adc
sbb
cmpsb
xchg
sub
rcr
push
lret
mov
loop
in
ja
hlt
and
lods
cmp
cmpsb
clc
sbb
adc
sbb
xor
pabsw
leave
sahf
mov
dec
sbb
cmp
pop
cmpsb
rdtsc
jg
aaa
sbbb
clc
ljmp
or
aaa
cmpsl
sbb
mov
sbb
dec
cld
dec
fnstsw
add
call
dec
lods
push
aam
xchg
movsl
insb
clc
fisttpl
push
mov
mov
or
testb
or
cmpl
fcomip
je
repz
fisubrs
dec
jnp
shlb
aas
repnz
mov
mov
lret
ss
pop
mov
sbb
mov
mov
lea
cmp
add
cmp
in
addr16
xor
stos
xor
lret
jbe
xor
and
in
xor
clc
bound
sbb
fwait
add
jmp
in
fidivs
mov
mov
jmp
and
test
lret
jg
xchg
push
cwtl
lods
and
push
pushf
mov
jnp
jns
enter
cmc
mov
mov
les
sbb
push
in
mov
mov
lods
xor
cmp
dec
jno
push
lods
loop
iret
dec
mov
adc
out
mov
inc
scas
add
sbb
arpl
mov
cmp
aad
push
jp
callw
ficompl
inc
lods
pop
mov
out
fbld
data16
sbb
push
pop
and
and
jo
fstpt
mov
data16
inc
sub
fs
fisubl
push
adc
das
jge
je
mov
push
pop
mov
lret
movsl
mov
add
jp
in
and
fwait
push
or
lcall
bound
adc
push
pop
shl
sti
jb
int
push
incl
hlt
repnz
or
inc
jae
add
inc
stc
mov
add
mov
add
cmc
test
jecxz
xchg
mov
inc
mov
push
mov
arpl
sub
arpl
jb
xchg
or
cmc
mov
jnp
jbe
xor
lgs
sbb
mov
sbb
test
xchg
sahf
adc
cmp
ret
stos
test
aas
fldt
mov
and
xchg
mov
aad
idiv
inc
das
pop
sbb
cmp
sub
xlat
rclb
lret
add
addr16
lahf
addr16
int3
das
mov
pusha
xor
adc
sub
and
call
sub
lea
outsl
sbb
sarl
xor
pop
lods
xorb
lcall
xchg
mov
and
adc
dec
sbb
xchg
cld
lds
cmp
test
jl
inc
or
push
das
pop
or
lea
sarb
ljmp
fists
jge
xchg
sub
rcl
fwait
inc
adc
pushf
xchg
jl
popa
shl
mov
pushf
or
push
test
lret
mov
add
adc
lock
std
and
adc
test
push
push
in
mov
in
jle
sbb
xchg
sti
sti
push
or
pushf
jae
jg
test
loope
fcmovnb
pop
insl
or
icebp
sbb
lahf
cmpsb
cmp
xorb
ds
inc
insb
cmp
xchg
inc
test
mov
add
sbbl
outsb
daa
outsl
cmc
and
fisttpll
clc
or
loopne
mov
sbb
dec
xchg
or
jb
fs
js
pop
loope
jmp
test
rcrl
rorb
stc
lds
bound
dec
push
dec
test
ja
cli
sub
sbb
test
hlt
movsl
pushf
ret
jg
cmc
mov
add
and
scas
mov
std
push
popf
and
xchg
andb
scas
push
pop
testl
mov
stos
int3
in
mov
sbb
jnp
arpl
sbbl
clc
xorl
cmp
iret
dec
in
test
fistpll
add
repz
movsb
fadds
xchg
sbbb
orl
inc
or
rolb
inc
inc
jl
icebp
iret
nop
mov
ja
loopne
fldenv
push
ljmp
pop
and
push
cltd
push
loop
cmpl
stc
mov
sbb
mov
mov
mov
push
sti
sbb
mov
insb
aam
ja
mov
jge
aaa
int3
mov
mov
pop
sub
cmpsb
into
cwtl
enter
in
add
push
mov
aaa
fldl
cltd
sub
mov
rcrl
pop
lods
cwtl
pusha
and
push
scas
data16
lods
cmpsb
mov
mov
cmpsl
hlt
mov
insb
jbe
mov
push
add
xchg
aas
sub
ret
push
pop
cld
aad
lods
loope
sub
mov
dec
push
fcmovnb
shl
pop
jne
mov
cs
testl
out
adc
pushf
dec
jo
ss
push
xchg
sub
xchg
mov
inc
mov
cwtl
dec
out
dec
mov
push
mov
mov
push
loopne
arpl
jmp
mov
call
adc
gs
sahf
pop
cli
adc
das
cmpsb
xor
push
jmp
pop
cmpb
mov
push
push
in
jnp
mull
jmp
pusha
add
scas
dec
adc
mov
push
push
arpl
iret
out
loopne
xorl
mov
cmp
xorb
lahf
sbb
pop
cs
aam
jno
icebp
push
std
dec
icebp
jl
fucom
repnz
fsubs
add
sub
xor
das
mov
movsb
sbb
xor
push
sbb
data16
and
cmp
mov
in
andb
mov
fstps
imul
popa
arpl
mov
xor
add
pop
mov
cmp
adc
pop
pop
or
cmpsb
cltd
loopne
jo
mov
fiadds
inc
mov
stc
ret
mov
aas
les
sbb
mov
dec
stc
mov
lea
adc
ds
shrb
push
popa
mov
cmpsb
xchg
data16
insl
int3
dec
lods
lods
pop
cmpsb
and
cmpsl
sbb
pop
cmp
xchg
cmp
popf
mov
mov
dec
popf
mov
sarl
lds
xchg
aad
aaa
pop
inc
pushf
cmpsl
jg
pop
test
jle
cmpsb
add
mov
jecxz
xchg
js
or
decb
sbb
sbb
insl
mov
scas
inc
sbb
mov
push
xor
out
or
push
dec
xor
sbb
mov
out
lea
arpl
xor
push
bound
push
dec
mov
faddp
orl
imul
sub
cmpsl
idivb
jle
adc
loop
mov
mov
and
mov
pop
addb
pop
ret
mov
gs
rorl
mov
add
jecxz
decl
dec
stos
inc
mov
adcl
cwtl
xchg
jno
popa
mov
dec
mov
mov
cmp
push
push
mov
mov
mov
adc
push
xlat
xchg
js
out
addr16
add
jno
xchg
cmp
or
arpl
test
pop
retw
es
push
jno
pop
pusha
cmpsl
push
test
popa
aam
push
inc
repz
push
repz
mov
push
leave
jbe
push
sub
push
cmpsb
daa
bound
adc
ja
gs
inc
aam
dec
sub
jb
faddp
test
lret
pop
inc
outsl
je
imul
jp
andb
mov
subb
sbb
stc
pop
inc
test
in
mov
mov
out
and
mov
std
add
call
popf
lock
aas
cli
lcall
sub
and
inc
cmp
add
mov
rorb
enter
mov
or
in
jmp
repz
test
mov
add
jp
add
add
jmp
mov
add
jle
and
movsl
add
mov
xchg
add
sub
out
test
fs
rol
mov
xlat
inc
subl
mov
jae
inc
lret
dec
ja
mov
cltd
jbe
xor
cmc
shrl
inc
jmp
jb
sub
xchg
lahf
adc
test
jae
pop
mov
jno
cmp
dec
sbb
ficoms
fldenv
pop
stos
jp
repz
jmp
sbb
pop
adc
test
addb
cmp
inc
shll
jbe
jmp
in
pusha
scas
call
mov
fwait
jmp
jmp
in
pop
and
call
push
rorb
mov
push
mov
inc
xor
and
push
sub
iret
insb
mov
and
pop
xor
cmc
ret
inc
pusha
mov
movsb
and
fidivl
sbb
jecxz
mov
xor
adc
aas
in
test
fs
xchg
lret
scas
mov
cmp
push
cmpsl
sbb
mov
test
loopne
loopne
cltd
dec
mov
push
dec
xor
test
inc
data16
mov
xor
sahf
movsb
dec
cmp
test
outsb
inc
xchg
or
cs
enter
sti
nop
das
add
mov
and
insl
stos
xor
in
lcall
cmpsb
negb
push
adc
xchg
cs
pushf
pusha
xor
hlt
pop
je
inc
push
fsubr
fs
dec
ret
add
or
jecxz
lret
fbstp
fwait
jge
enter
shll
insb
dec
xor
dec
rorl
xchg
push
mov
mov
mov
add
lods
xchg
fmull
pop
xchg
ljmp
adc
icebp
outsl
int3
mov
outsl
enter
pop
shlb
sbb
push
mov
mov
jne
pusha
leave
sahf
push
lret
add
lcall
nop
fs
or
int
cmp
push
mov
dec
xor
shlb
es
cmp
cmp
xchg
sarl
pop
divl
xchg
mulb
jne
rorb
lock
mov
adc
insb
jne
sarl
push
dec
leave
inc
sub
adc
jnp
push
ja
lods
inc
mov
push
sbb
jge
arpl
add
jge
sbb
sbb
adc
es
jecxz
xor
dec
xlat
fildll
mov
add
adc
sub
jge
shlb
inc
jb
adc
push
test
sbb
outsb
fs
and
pusha
test
ret
mov
cmp
andb
mov
cmp
push
cltd
fmuls
sbb
mov
mov
add
iret
sub
inc
pushf
fwait
insb
movsl
repnz
rcrb
mov
jecxz
jno
sbb
jmp
sarb
cmpsb
jne
into
loope
fnstcw
divb
and
loopne
ret
jb
cs
stos
fwait
pop
pop
sahf
inc
dec
and
imul
inc
mov
testl
popf
imul
lds
jp
shl
popa
ss
sub
pop
xchg
scas
lock
out
int
dec
pop
lret
xchg
adcb
pop
nop
popf
xor
mov
adc
adc
les
push
jle
mov
rcrb
mov
jmp
mov
and
gs
das
push
cmp
and
fnstsw
into
fs
movsb
xchg
cmovle
dec
lods
xchg
ja
in
push
neg
mov
lret
xchg
push
push
adc
push
mov
aaa
mov
jl
inc
js
mov
pop
sbb
and
adc
mov
mov
pop
dec
mov
inc
or
es
inc
sbb
mov
xchg
xchg
scas
movsl
pop
or
cmp
je
mov
dec
loope
xchg
jp
iret
mov
aas
out
adc
filds
in
xchg
out
dec
dec
jno
inc
popf
jle
cmp
rolb
subl
pop
dec
mov
jo
pop
cmp
loopne
cwtl
mov
mov
dec
stos
push
pop
xchg
cmc
fs
mov
mov
sahf
inc
rol
xchg
in
cmp
loopne
dec
jg
lea
fcomi
mov
pop
adc
imul
mov
inc
push
jmp
call
xor
sbb
popa
and
mov
pop
jecxz
rolb
mov
nop
int
dec
in
pop
sahf
int
adcb
mov
mov
aad
gs
mov
insl
fsubrp
mov
push
mov
cmp
sbb
stos
push
mov
jno
dec
pop
out
and
shll
and
mov
mov
lods
popaw
sub
mov
jns
xchg
lcall
dec
enter
cld
dec
cmp
mov
dec
lahf
dec
mov
imul
dec
inc
adc
mov
fbld
jbe
add
out
std
push
jnp
and
and
jl
insb
xchg
mov
es
xchg
repz
or
loop
push
addr16
sub
or
in
push
mov
xchg
in
and
mov
adc
or
xchg
insb
cwtl
push
xchg
jge
cld
or
mull
int
sti
and
adc
mov
aad
add
and
lds
jge
dec
iret
mov
adc
rorb
pop
jg
or
jae
mov
lret
icebp
bound
sub
xchg
shll
sbb
or
push
lcall
cmp
jo
fiadds
mov
cmp
imul
inc
ja
mov
insb
loopne
mov
popf
mov
pop
mov
sub
jl
sub
xor
je
sub
jge
iret
mov
data16
push
stos
arpl
add
scas
subb
daa
loope
cmp
cmp
jl
jl
test
cmp
push
jae
and
inc
xchg
ret
mov
cmc
inc
scas
mov
insb
sti
dec
mov
popa
sbbl
sub
aad
cmp
insb
jb
push
and
sbb
mov
sub
mov
or
das
mov
movsl
dec
loope
cld
xchg
loop
fdivs
out
imul
mov
insl
mov
rorl
rcll
or
push
xchg
fwait
push
add
jbe
imul
xchg
mov
testl
sub
fstp
es
cmp
inc
pop
jb
jmp
ljmp
mov
push
outsb
imul
les
lock
push
sahf
mov
fsubrl
sbb
mull
clc
icebp
push
jmp
xor
das
sarb
imul
mov
adc
and
lods
pop
ljmp
int
fwait
pushf
add
or
ret
sbb
cmc
std
or
repnz
push
cmpsl
mov
xchg
or
push
aas
pusha
adc
lahf
out
dec
mov
xorl
pop
jbe
movsb
arpl
cmpl
sti
jecxz
icebp
fcmovne
jmp
push
outsl
cmp
cmp
lods
cmpsl
push
hlt
repz
add
jge
mov
add
movb
in
int
iret
loopne
sub
fwait
add
in
mov
sub
cmp
jg
xor
repnz
add
and
push
lods
les
scas
call
pop
movsl
fwait
or
movsb
mov
hlt
leave
push
push
shrb
mov
scas
gs
arpl
aas
pop
add
movsl
cli
aam
outsl
lods
adc
je
mov
mov
adc
mov
scas
insb
cmpsl
push
xor
jle
push
mov
add
adc
rorb
mov
test
mov
dec
add
mov
xorl
pop
and
mov
inc
jb
pop
mov
xchg
aas
and
leave
insb
lea
sbb
pop
cli
push
scas
out
push
mov
push
mov
adc
jbe
in
ja
pop
out
pop
dec
cmpsl
sarl
enter
mov
pop
mov
pop
push
push
push
inc
loope
push
or
add
jecxz
mov
xchg
cltd
pusha
and
lret
xchg
sbb
pop
and
mov
cltd
mov
mov
call
jo
jns
add
push
mov
inc
xchg
cli
dec
cmc
fsubrl
cmp
sub
inc
dec
mov
fisubrs
lahf
wbinvd
addr16
ds
std
xchg
repnz
add
icebp
rcll
lods
xor
adc
and
adc
cpuid
mov
movsl
and
ljmp
pop
pop
jecxz
jmp
lret
adc
inc
sbb
add
mov
xor
pushf
mov
idivb
nop
jo
or
xor
lea
icebp
push
add
cltd
jmp
mov
repnz
dec
lret
ffree
out
fwait
dec
repz
roll
mov
push
pop
sbb
pop
idiv
out
sub
push
pop
call
inc
sbb
clc
popf
int
mov
shrb
rclb
scas
decb
add
addr16
inc
jne
cld
pusha
and
jmp
cmp
fbld
insl
hlt
cli
icebp
divl
or
cmpsb
test
adc
shl
in
fucom
adc
popa
aas
cld
adc
mov
xchg
jle
repnz
cmp
or
lret
xor
fstpl
mov
imul
cmp
fwait
xchg
mov
pop
or
jmp
pushf
fcomps
jo
fdivs
mov
xchg
xor
pop
mov
jg
ja
shl
sbb
in
pop
stc
and
stos
inc
pop
pop
add
outsb
xor
outsb
cld
outsb
jle
repnz
pop
and
sahf
loop
sarb
fisubrs
lea
mov
mov
mov
je
loop
adc
outsb
cmp
sub
dec
push
stos
cltd
xor
sub
xorl
mov
std
mov
jbe
nop
mov
mov
adc
pop
test
stos
scas
mov
mov
repnz
pop
repz
jne
or
xchg
push
gs
shlb
pusha
filds
mov
movsb
push
sub
jns
dec
dec
out
pop
jae
cwtl
mov
xor
fwait
sbb
fucomip
jo
fstl
jp
push
imul
xchg
sub
cwtl
cmp
push
jle
lods
and
push
mov
dec
or
loop
int3
pop
fcomps
xchg
adc
fisubrs
adc
out
femms
mov
dec
scas
mov
clc
daa
lods
clc
pusha
sbb
cmp
cmpsb
fistpll
rcrl
mov
jmp
pusha
cmp
xlat
lea
xchg
insl
std
mov
pop
out
flds
xchg
insl
xchg
xchg
inc
cmpsb
mov
sub
adc
rcr
xchg
fsubp
jle
dec
xchg
call
clc
mov
pop
sub
pop
xor
nop
dec
mov
mov
mov
fdivp
sbb
cmp
sbb
jno
push
fs
or
push
push
nop
add
pusha
jnp
arpl
popa
cmp
sub
sbb
lahf
iret
addb
add
in
jo
adc
bound
xor
ljmp
xchg
sub
or
and
pop
jp
ds
xchg
mov
mov
cwtl
jno
aaa
mov
int
stos
ja
jle
clc
clc
enter
into
cmp
movb
sub
das
pop
xchg
and
mov
fnstcw
insb
mov
xchg
aad
loop
adc
mov
repnz
popf
shlb
add
push
mov
mov
in
cmp
adc
cmp
xor
pushf
sub
cmp
pop
into
add
add
shlb
roll
ret
or
xchg
adc
push
add
cmp
adc
pop
push
test
lock
out
mov
mov
dec
lock
jle
aas
jbe
and
or
nop
pop
gs
mov
shl
dec
mov
and
xchg
les
xchg
sbb
inc
in
pop
stos
ss
outsl
mov
ret
popa
fwait
sub
ret
mov
jns
pushf
je
repz
stos
sahf
mov
imul
push
dec
push
cltd
pushf
mov
pop
pop
int3
subl
stos
nop
leave
sbb
mov
popf
mov
shll
leave
mov
divb
xlat
ljmp
sub
stc
imull
idivb
pop
sbb
mov
add
jle
dec
gs
cli
ss
addl
cmp
fcomip
fs
sbb
les
lock
cmc
push
shl
fldl
lock
push
out
mov
or
pop
les
in
mov
in
in
cwtl
xor
rclb
dec
jbe
rorb
cld
lods
adc
sub
mov
orl
lret
rol
cmp
mov
sub
lea
cmp
aaa
mov
push
inc
loopne
sbb
mov
out
aas
cmp
out
aad
movsb
cmp
mov
and
pop
mov
cmc
icebp
jmp
inc
popa
test
fld
and
xchg
mov
mov
int3
mov
pop
push
mov
push
ret
adc
sbb
xor
jno
jge
add
into
repz
aam
cmp
xor
mov
fbld
scas
xchg
imull
xchg
cmp
aaa
sti
pop
cmp
inc
icebp
inc
in
xchg
cmc
mov
or
sub
jbe
enter
or
fbstp
fisubrs
mov
lret
xor
mov
hlt
and
in
cmc
xor
push
fwait
mov
mov
insl
cmp
xchg
add
xchg
jl
cs
cmp
inc
ljmp
xor
iret
push
lret
lret
hlt
pop
jne
test
testl
dec
cmp
mov
ret
inc
leave
inc
xchg
mov
fwait
sbb
popf
lods
jle
aam
jecxz
sub
ds
jbe
xchg
push
pop
repnz
mov
push
push
mov
fldenv
es
pop
jo
inc
cli
hlt
or
xchg
mov
test
xor
push
call
dec
mov
sub
inc
scas
loope
mov
xchg
into
mov
fwait
imul
js
and
xor
cmpl
test
cli
in
sahf
sbb
and
out
in
out
ss
xchg
pop
dec
das
adc
in
cli
and
sub
mov
add
cltd
inc
or
mov
stos
int
sbb
mov
imul
push
jge
aad
dec
dec
cmpsb
mov
jp
jns
inc
add
leave
xor
add
pop
daa
leave
imul
bnd
mov
pop
hlt
outsl
inc
sti
int3
loope
pushf
insl
iret
pop
out
pop
jno
mov
jne
mov
popf
lcall
push
add
push
leave
popa
adc
scas
cmovns
mov
mov
cwtl
jl
popf
adc
xor
add
inc
xchg
test
dec
adc
lret
add
adc
xorl
cltd
dec
psrld
icebp
and
push
push
movsl
jle
nop
sti
rolb
shrl
xchg
mov
sub
mov
cmpsl
cs
push
jns
jl
adc
cmp
fnstcw
out
cld
mov
sbb
pop
jae
pusha
stc
es
inc
sub
enter
sbb
inc
push
outsl
ds
shrl
push
mov
push
dec
imul
add
pop
sbb
mov
add
ja
mov
std
aas
in
lods
push
int3
or
adc
ds
popw
enter
mov
add
test
jge
hlt
inc
int
outsl
jge
test
gs
lret
pop
pop
adc
push
ds
hlt
cmp
aam
inc
push
dec
inc
es
or
pop
jo
daa
bound
faddl
fcoms
or
mov
pop
xor
mov
dec
movsb
mov
lret
cwtl
movsl
xor
pop
inc
out
rcrl
std
ss
push
jne
mov
mov
stos
dec
jae
ss
push
xchg
call
inc
ljmp
lcall
xor
mov
mov
inc
sti
or
incl
into
inc
and
and
les
dec
mov
dec
fs
aaa
shrl
and
loopne
mov
inc
and
data16
pop
jmp
addr16
decl
loopne
mov
imul
inc
mov
fsubl
int
xchg
fsubrl
int
bound
xor
xchg
mov
add
or
pop
in
sub
ds
xorb
mov
stos
xor
xor
push
inc
pop
arpl
jnp
xlat
sahf
leave
int
xchg
and
mov
call
aam
js
fmull
addl
cmp
xchg
jne
xchg
xlat
cmpsb
mov
repnz
dec
or
mov
je
jge
icebp
xor
hlt
push
stos
mov
xor
aaa
fs
add
adc
outsb
pop
pop
push
ret
add
and
mov
lods
or
pop
adc
popf
add
icebp
and
mov
ljmp
ljmp
and
push
out
in
lods
lcall
adc
jle
xor
pop
ror
jne
in
aam
xor
divb
leave
roll
add
in
incl
addr16
in
pusha
mov
push
insb
jg
add
lock
xlat
sbb
shll
or
shl
cmp
sbb
insb
xor
and
jmp
xchg
je
mov
aad
adc
dec
inc
cltd
fwait
ja
pusha
sbb
cmp
testl
mov
lret
or
jno
inc
mov
dec
movsb
cltd
cld
frstor
pop
push
adcb
loope
push
inc
divb
adc
jle
xor
add
ror
shrb
je
leave
decb
jg
test
sub
adc
push
mov
xchg
push
add
in
cmpsb
hlt
cmp
xchg
add
add
mov
mov
test
adc
std
testl
cmpsl
es
pop
aam
popw
pop
rcrb
ficomps
inc
test
outsb
mov
mov
in
scas
movsl
movsl
pop
scas
and
fildl
mov
scas
sar
mov
pop
mov
popa
lock
repnz
addr16
cmc
and
cmc
enter
ret
mov
and
sarl
fildl
in
movsb
roll
inc
mov
fndisi(8087
or
mov
mov
sub
jno
leave
clc
out
and
loopne
add
shrb
xchg
pop
fcomi
inc
ja
xor
jnp
sbb
aas
out
ds
daa
sahf
loope
cmp
sub
pushf
fstps
or
test
sub
inc
mov
rclb
xor
add
fcompl
xor
xor
dec
cmc
cmp
frstor
aas
pop
push
sbb
outsl
and
xor
leave
mov
iret
dec
jne
jno
sub
push
test
xor
jle
lcall
add
in
xor
mov
pop
xchg
mov
stos
arpl
pusha
sub
and
stc
mov
or
add
or
push
cmp
into
pushf
cmp
dec
mov
pop
rcll
and
xor
popa
push
out
add
fwait
adc
dec
jne
cmp
sti
mov
mov
sub
push
jmp
dec
cmp
fsubr
mov
mov
dec
adc
sbbl
adc
aad
jge
mov
xchg
add
pushf
stos
or
adc
pop
icebp
xor
mov
or
dec
enter
repz
xor
insl
pop
sarb
and
pop
add
xchg
jnp
mov
fdivl
xor
mov
push
stos
add
ret
or
into
cmp
and
sub
xlat
xchg
fsubr
dec
xlat
stos
pop
clc
push
leave
nop
dec
movsb
jl
movsl
stos
mov
xor
icebp
dec
in
lock
push
daa
mov
push
jnp
add
mov
sub
data16
sbb
out
idiv
inc
inc
scas
adc
addr16
jp
and
scas
lock
inc
add
fldl
sub
popa
cs
mov
jp
jmp
and
orb
dec
add
cmp
roll
xor
int
sahf
xchg
pop
jp
stc
fnstcw
pop
lock
loop
insb
data16
sub
jo
insl
jmp
ljmp
jne
pop
push
adc
dec
ja
inc
and
jns
stos
inc
mov
and
shl
inc
push
cld
mov
test
iret
bound
inc
xor
mov
fcomip
cmpb
loopne
fwait
inc
aad
pop
outsl
mov
sub
out
cs
cmp
push
test
imul
mov
inc
jg
rolb
jl
dec
fsubr
test
push
sub
adc
adc
fnsave
push
mov
jle
cmp
jbe
popa
insb
cwtl
adc
mov
dec
fistpl
mov
adc
sub
enter
movsb
insl
sub
jnp
pop
test
sub
push
enter
imul
addr16
adcl
ret
adc
jne
add
dec
inc
xchg
std
scas
mov
filds
mov
int3
jnp
adcl
daa
or
addb
xchg
push
pop
sar
inc
jno
out
push
inc
jp
or
push
sub
aad
int
pop
xor
pop
pop
xchg
mov
mov
in
mov
add
mov
aaa
add
mov
and
jne
cmp
bound
jmp
xor
loope
roll
or
mov
dec
lahf
cmpps
lods
xchg
push
aad
mov
les
xchg
lods
stc
shrb
fadds
or
gs
mov
sub
dec
pop
mov
push
adc
xchg
shll
nop
sbb
insl
lea
mov
das
pop
test
sbb
mov
push
inc
scas
add
dec
ret
ret
xlat
xor
pop
lret
pop
dec
sub
je
iret
xchg
sbb
imul
cmp
xchg
mov
push
inc
mov
mov
pop
mov
insb
cmp
mov
xor
jae
repz
mov
push
inc
sub
jg
jno
push
or
mov
mov
test
loop
adc
jg
imul
add
xor
push
enter
adc
test
ds
scas
arpl
bound
mov
add
adc
stc
ds
test
mov
mov
pop
mov
xor
nop
push
movsb
lock
adc
push
pop
je
push
pop
push
xchg
inc
cmp
js
aam
inc
xchg
movsb
and
movsl
dec
add
lret
mov
xor
dec
cmp
js
inc
push
outsb
dec
stos
xor
pop
int3
pop
repz
cmp
xorb
adc
popf
movsl
inc
adc
test
sbb
loopne
pop
cmpsl
sti
xor
and
jno
jbe
js
jg
jne
sbb
mov
sahf
imul
cmp
push
sub
mov
push
xor
add
lahf
and
add
dec
aaa
lods
inc
repz
pop
out
shll
pop
in
adc
push
sbb
adc
icebp
dec
inc
ljmp
mov
gs
mov
inc
arpl
jbe
and
pop
cltd
pop
les
mov
mov
lret
mov
test
sbb
iret
cmp
movsb
into
adc
xchg
mov
adc
sbb
mov
loope
in
jo
jmp
outsl
mov
sbb
dec
in
sub
ret
push
pop
bound
daa
lds
adc
loope
mov
or
mov
lods
mov
jecxz
into
xchg
out
cli
push
sbb
movsb
sar
add
xchg
or
ljmp
repz
dec
out
xlat
sahf
push
or
pop
test
push
out
shl
pop
popw
call
cmp
and
sub
lret
and
int
aad
sub
mov
pop
jnp
fs
ret
add
mov
mov
jae
lret
xor
bound
mov
ds
stos
in
repnz
or
mov
stos
xlat
push
shll
push
je
out
fdivl
jge
mov
mov
sub
jnp
std
stos
push
adc
pop
mov
and
inc
jle
in
cli
and
mov
pop
test
inc
in
cltd
repz
les
mov
xchg
arpl
dec
ss
outsb
push
inc
dec
and
xchg
imul
xor
or
in
lahf
xor
sti
jo
add
inc
mov
imul
outsb
bound
iret
lock
push
lret
sbb
aad
in
xor
and
lahf
or
add
cmp
cmc
jo
push
mov
and
mov
pop
dec
sbb
adc
loopne
sbb
xchg
movsl
lods
movsb
das
or
dec
int
aaa
int
push
iret
mov
imul
add
addl
and
das
adc
or
mov
mov
fnstcw
ret
push
leave
cltd
dec
sbb
ret
je
pop
mov
jecxz
lret
out
inc
ss
mov
add
pop
push
sub
and
sbb
dec
mov
push
sub
mov
ss
pop
call
sub
xor
adcl
mov
mov
and
mov
jmp
cmp
cld
push
and
call
popf
inc
in
lcall
mov
push
mov
cmc
repnz
cmp
and
or
xchg
mov
mov
add
xchg
sbb
sub
pmullw
cmp
insb
es
nop
push
mov
jnp
jnp
pusha
pop
jo
xchg
shr
subl
and
in
in
ss
test
push
test
lret
jne
inc
sub
in
inc
and
push
jnp
mov
clc
mov
add
push
pop
mov
hlt
shll
pop
mov
cmp
jnp
xchg
outsl
fadds
and
and
out
flds
fwait
idiv
dec
adc
stc
stc
sub
test
inc
test
sbb
imul
call
out
inc
pop
mov
or
popa
enter
lods
nop
in
add
sub
mov
xor
jl
repnz
cmpsb
pop
xchg
outsb
mov
add
adc
and
ficoml
lahf
jg
jne
mov
fisubrl
pop
xor
and
xor
dec
jmp
in
push
imull
mov
and
sti
xor
push
cld
add
aaa
divl
sub
pop
jp
je
adc
addr16
xor
insl
popf
sbb
mov
xchg
mov
aas
or
sarb
popf
xchg
dec
in
inc
fstpt
lock
xchg
sbb
dec
dec
jb
lahf
mov
push
sti
dec
pop
dec
pop
push
cmp
jo
test
lock
xlat
mov
bound
jmp
and
mov
les
std
mov
cmpb
cmpsb
jecxz
int3
sbb
sbb
sub
jb
icebp
mov
ret
fwait
mov
std
jl
filds
jp
pusha
cmp
push
pop
pushf
aaa
pop
mov
movsb
sub
stos
outsb
orl
mov
xor
mov
mov
pop
pushf
or
shr
inc
inc
pop
jb
inc
dec
xlat
mov
xchg
ljmp
je
inc
cld
xchg
stc
cmpl
and
mov
subl
jbe
insb
lock
push
mov
add
pop
and
popa
stos
cmp
aam
inc
xchg
rorl
loop
fsts
xor
shrl
xchg
cmpsb
add
insl
scas
les
imul
xchg
daa
jg
cld
ja
jne
mov
and
xor
scas
test
xor
cltd
in
inc
sti
xchg
inc
into
and
mov
jno
out
ljmp
out
int
scas
in
in
mov
sbb
xor
repz
jns
gs
or
push
clc
xor
xchg
adc
mov
mov
xchg
xchg
cwtl
daa
imul
int3
cs
xchg
jbe
and
inc
das
adc
inc
pop
adc
rcrb
loope
popa
aas
insb
pop
mov
ss
repnz
inc
scas
sti
mov
xor
xchg
xchg
das
push
mov
mov
dec
shlb
mov
sti
mov
push
cmp
sbb
mov
sbb
icebp
cmp
out
jne
out
in
dec
into
jne
and
hlt
enter
cld
out
or
fwait
pop
es
push
pop
mov
stos
adc
jns
pop
ljmp
jbe
jo
insb
inc
les
dec
inc
mov
xchg
stos
and
js
aas
ljmp
inc
push
add
jge
xchg
cltd
sbb
fcmovnu
dec
push
pop
sbb
xchg
das
imul
jg
mov
xor
pop
and
mov
jl
outsb
jae
dec
jg
loop
je
enter
ds
roll
lock
in
pop
ja
fcomi
pop
cmp
fisttps
fdivs
dec
addr16
loopne
stos
mov
rcl
push
mul
and
lods
ss
ret
sub
sub
jo
das
std
jno,pn
jbe
xchg
inc
push
push
mov
clc
out
mov
xor
pushf
rcrb
fs
pop
pushf
dec
cwtl
rcr
mov
and
out
daa
aad
mov
mov
push
mov
jp
pop
in
rorb
sub
sbb
fisubrl
jecxz
sbb
push
jb
adc
push
mov
pop
sbb
dec
sbbb
add
lret
mov
dec
cmpsb
mov
xlat
add
push
scas
pusha
addr16
lds
jle
hlt
push
gs
push
imul
push
test
call
mov
scas
pop
adc
push
sub
xchg
push
pop
sub
mov
clc
sub
test
sarl
inc
sti
mov
in
popa
jge
pusha
mov
cs
nop
insb
std
add
test
dec
hlt
adc
or
mov
ja
in
mov
mov
pop
inc
hlt
fwait
adcb
in
scas
jae
loop
pop
pop
in
jae
jecxz
dec
push
std
clc
or
dec
adc
loope
push
dec
mov
dec
je
stc
icebp
pop
sbb
dec
repnz
push
or
pop
aam
mov
xor
nop
out
dec
adc
sbbl
push
add
jp
sbb
fidivrs
cmpsb
lock
pusha
mov
add
mov
and
ret
mov
ss
push
shrl
jle
into
xlat
shrl
cli
js
leave
sbb
outsb
out
jno
mov
sbb
jle
mov
inc
push
out
jle
sub
icebp
stos
mov
xorb
xor
adc
mov
pop
inc
repnz
dec
cli
adc
ret
mov
sub
push
out
scas
fcomps
sbb
sub
pop
xor
sahf
pop
shll
insb
xchg
cltd
jmp
sti
aaa
cmpsl
fmuls
inc
neg
inc
insb
daa
xor
test
mov
adc
xor
mov
nop
stos
mov
add
js
sub
mov
sarl
inc
lret
mov
rcl
das
testb
fdivs
mov
jno
mov
outsl
cmpsb
arpl
lret
sbb
inc
ljmp
fstps
js
push
mov
into
outsl
js
jmp
xlat
mov
or
mov
aad
push
sbb
inc
cmpsl
jb
shrl
xor
notb
jnp
mov
pop
test
xor
sti
sub
fisubs
testl
dec
mulb
test
cmp
pushf
ja
imul
mov
lcall
jb
push
popf
in
adc
mov
jge
test
lret
push
inc
jmp
stos
lock
mov
out
out
cmp
fwait
mov
nop
adc
test
shlb
mov
dec
push
add
loopne
dec
cld
cli
clc
cli
xchg
inc
sub
movsb
stos
xor
ds
and
mov
sub
sbb
iret
mov
les
ss
mov
notb
add
shrb
adc
dec
int3
punpckhwd
xor
mov
loop
mov
mov
int3
adc
cwtl
cs
sub
pop
push
xchg
scas
mov
push
pop
arpl
xchg
shl
int
addr16
pusha
ja
loop
sub
push
cmpsb
dec
push
push
add
mov
stos
mov
shlb
lods
push
adc
inc
cvtdq2ps
outsb
test
push
fsubr
cli
xlat
cmp
fmuls
jns
bound
sub
and
lcall
sub
and
jnp
lds
xlat
adc
sub
add
negb
in
movsl
and
xor
jne
lock
jle
mov
jnp
inc
xor
test
push
cmpsb
mov
popa
leave
adc
data16
stos
or
mov
jnp
push
bound
stos
mov
inc
cmpsl
clc
jecxz
fldt
pushf
pop
push
inc
icebp
ja
lret
or
int
add
fcmovne
xor
adc
or
scas
std
std
loop
ror
and
cmp
rcl
pop
cwtl
ret
addb
mov
lret
cmp
idivl
in
inc
lret
pushf
shll
out
sahf
mov
mov
sbb
mov
mov
out
sbb
lods
xor
add
out
mov
fimull
sbb
fisttps
in
stos
cwtl
je
dec
cwtl
out
jae
stc
push
adc
or
or
xchg
fidivrl
push
jge
pop
cs
add
in
mov
pop
adc
sub
out
in
or
push
mov
jmp
xor
pop
fisttpll
fsubl
gs
or
inc
iret
out
mov
cmpsl
inc
mov
and
je
xchg
pop
lret
sbb
rorb
inc
test
fwait
in
in
int
cs
xchg
pop
sbb
in
out
push
pusha
jb
sbb
int
js
std
pop
in
subb
out
sbb
dec
xchg
aam
mov
jle
ror
xchg
mov
xchg
dec
sahf
push
sbb
cmpsl
mov
loop
std
push
icebp
test
aaa
sub
out
es
mov
lahf
les
ljmp
push
mov
sahf
pop
js
fcmovbe
call
enter
ja
clc
xor
pop
sbb
fs
inc
pop
cmp
lea
add
add
sahf
dec
lods
pop
dec
ja
popa
inc
sbb
sub
xchg
sti
in
jo
fdivs
ja
je
fimull
mov
push
loopne,pn
and
enter
movsl
jno
cmp
movsl
ret
icebp
addr16
sbbb
ljmp
add
adc
push
rol
cmpl
push
out
xor
out
imul
cmc
xor
xchg
jge
mov
xchg
or
ljmp
iret
imul
fisttpll
lods
jg
cmp
xchg
leave
inc
in
int
mov
adc
mov
and
fstl
sbb
push
dec
hlt
jmp
pop
lods
aas
or
ficomps
outsl
mulb
or
in
ja
ret
cmp
add
mov
bound
ss
scas
int3
scas
or
leave
sti
les
stos
fbstp
hlt
adc
cs
mov
int
inc
jno
jmp
adc
cs
imul
sbb
loop
mov
bnd
or
scas
fs
clc
out
jg
sub
jge
rcrl
push
dec
rep
cmp
jge
call
nop
mov
int3
fstenv
test
jle
fstpt
int
outsb
add
pop
xor
out
pop
stos
sbb
jl
dec
movsb
mov
lds
cli
jo
js
mov
mov
fwait
dec
aas
lea
dec
jp
cmc
push
mov
fistps
xchg
aam
sub
fldl
subb
xor
icebp
xor
popa
jp
jle
cmp
or
mov
stos
jne
mov
mov
movnti
push
inc
xor
insb
ja
mov
jb
mov
or
fistpl
pop
mov
inc
out
jg
pushf
pop
cli
fdivl
in
clc
push
loope
pop
adc
xor
mov
mov
loopne
xchg
sub
cvtpi2ps
sbb
and
inc
jp
push
sub
pop
pop
hlt
rcrl
scas
or
rcrb
shll
stc
dec
dec
mov
ret
add
sbb
filds
in
mov
jo
jb
aas
int
cmp
fld
mov
and
notb
loope
out
cli
mov
xchg
into
aas
rcl
dec
jno
pusha
pop
outsl
popa
jne
stc
inc
jo
xor
cmp
sahf
add
nop
into
mov
setle
mov
hlt
mov
stos
jae
lods
jl
push
push
mov
in
addl
cld
fidivl
adc
int3
iret
shl
std
sub
cmp
mov
mov
fs
rcl
loope
inc
int3
add
mov
mov
cmp
dec
mov
xor
push
mov
lock
sub
or
xchg
mov
inc
fisubrl
sbb
js
fcomip
xchg
mov
push
out
mov
and
insl
sbb
xor
test
out
scas
lods
xchg
orb
xchg
push
sub
jmp
or
push
loope
cltd
fucomi
pop
sbb
adc
adc
sub
popa
test
adc
jns
jmp
sub
cwtl
or
jl
push
call
and
dec
dec
mov
mov
dec
ret
lods
imul
repz
push
fs
sub
loop
lret
push
jecxz
in
adc
aam
pop
sbb
les
xchg
xchg
inc
stc
iret
mov
test
daa
fistps
mov
adc
add
repz
xchg
lds
in
inc
pop
or
push
xchg
iret
inc
fildll
test
subb
pop
inc
sub
movl
mov
roll
rcr
movsl
stc
sbbb
cwtl
push
jge
pop
xchg
cmpsl
push
filds
dec
xor
lret
push
clc
out
sar
and
sbb
or
dec
mov
sbb
and
jecxz
push
pop
iret
cmp
aam
cmc
mov
push
rcrb
push
out
or
sbb
mov
or
sti
cld
or
xchg
mov
jno
pop
pop
lahf
pop
sbb
test
int3
out
mov
loope
aam
pop
mov
ss
inc
adc
cs
fwait
gs
sub
sbb
imul
mov
push
jb
pop
jge
mov
jb
mov
mov
jle
ljmp
mov
push
dec
sbb
test
mov
scas
adc
test
pop
or
push
icebp
inc
cltd
cld
and
push
pop
or
arpl
cwtl
push
or
push
fdivl
mov
std
mov
popa
ror
mov
shrb
shll
aaa
aas
jp
movsl
or
push
adcl
add
inc
xor
or
ljmp
fwait
sub
jmp
subl
pop
mov
add
xchg
jge
push
lock
imul
push
or
adc
xchg
push
jmp
shl
out
mov
pop
fiaddl
push
sbb
pop
push
insl
fdivrs
scas
lods
and
clc
sub
loopne
dec
stos
fs
imul
js
fisubl
jne
enter
mov
in
jmp
lret
pop
in
ds
cmp
xchg
clc
lret
out
and
in
dec
clc
loopne
stos
fwait
imul
test
pusha
iret
lahf
push
add
add
sub
mov
cli
adc
or
and
pushf
shll
test
push
test
xlat
xchg
and
ds
sub
add
lret
repz
push
fsubrs
mov
test
nop
pop
incb
jl
push
push
or
push
mov
jge
xor
dec
es
sub
orb
inc
jb
ljmp
jnp
loopne
mov
xchg
dec
jo
xchg
andl
and
stc
cld
stos
pop
enter
fucomp
mov
inc
js
adc
loopne
add
xchg
ret
mov
idivl
test
xor
outsl
inc
add
ds
xchg
out
jnp
in
push
push
insw
add
dec
out
push
int
inc
test
mov
sbb
pop
jp
cmp
das
add
icebp
cmp
int
jle
mov
xchg
add
and
mov
xrelease
push
popa
je
out
mov
fldl
dec
das
push
mov
and
jecxz
or
daa
fsts
jo
mov
xor
outsb
jne
outsb
dec
mov
nop
mov
aas
pop
push
call
push
cmpb
jb
push
scas
aam
fs
cmp
ljmp
sti
xor
shl
push
and
loopne
mov
jne
lods
xorb
xor
jge
dec
sti
cmp
push
adc
sbb
movsb
ror
sbb
movsl
adc
push
cmp
inc
push
test
aam
or
fiaddl
jl
fdivrs
lods
out
ja
mov
mov
clc
rclb
shll
mov
adc
xchg
push
mov
mov
xchg
aas
push
cmpsb
imul
adc
jl
jecxz
jae
dec
sub
inc
mov
lods
ret
rorb
imul
lds
cld
jl
in
ret
icebp
xchg
inc
inc
cwtl
jmp
push
add
sbb
jo
lods
imul
jge
sub
scas
add
push
jno
outsb
xchg
dec
or
call
xor
outsl
popf
inc
cmp
xchg
add
sub
in
daa
scas
mov
out
call
push
push
xor
ficoml
lret
xorb
dec
insb
outsb
jno
xchg
subl
scas
pop
add
push
inc
in
jle
int3
mov
jle
push
movsb
int3
add
repz
fwait
scas
mov
push
push
roll
sbb
jecxz
js
arpl
dec
or
xor
jno
add
xchg
sbb
push
mov
addl
xchg
fcompl
fsubrl
mov
in
pushf
bound
push
sbb
inc
push
clc
jge
mov
pop
in
sub
mov
mov
inc
adc
adc
xor
push
lret
cmc
jns
mov
into
shrb
jmp
loop
mov
lods
add
jo
sbb
xor
xchg
popa
stos
roll
pop
cmp
ficomps
test
jp
mov
lret
and
orb
lea
sub
push
jnp
mov
mov
dec
cmp
test
ds
xchg
int
lfs
pop
aad
jnp
dec
inc
push
dec
ret
jge
cmp
shll
pushf
xchg
aas
js
push
cltd
jnp
xor
jbe
mov
xlat
push
popa
mov
lahf
and
ror
int
imul
mov
mov
movsb
xor
repz
adc
lock
lret
pop
aas
test
imul
movsb
mov
shlb
nop
jle
test
inc
sub
loop
test
mov
jns
out
inc
flds
or
mov
cld
setp
push
pop
cwtl
gs
cmp
sub
xor
lret
sub
lds
test
cmp
dec
pushf
inc
and
imul
daa
sbb
dec
xor
lds
ja
mov
sbb
repz
jne
sbb
adc
xor
xor
dec
hlt
clc
fstl
xor
push
ja
rcr
ficoml
ret
inc
add
xor
nop
push
inc
hlt
xor
icebp
pop
push
and
jecxz
clc
or
xor
int
cmpsl
jne
push
jae
shl
loopne
xor
xor
inc
push
sbb
xor
or
mov
pop
sbb
cwtl
lahf
sub
xchg
int3
sbb
std
negl
dec
and
and
and
std
js
ficoms
mov
sti
fidivrs
int3
lret
add
xor
push
cmc
jb
sub
push
mov
cmc
insb
int
mov
mov
mov
pop
insl
ficompl
mov
loopne
cli
xor
push
or
cld
cltd
jl
mov
mov
inc
push
or
fnstcw
sub
or
inc
xchg
or
jns
mov
inc
pop
sbb
ret
adc
int
cmpsl
push
dec
testl
movl
es
cmpsb
push
xchg
mov
cmc
push
xor
pop
fs
sti
lret
mov
mov
push
dec
push
out
pushf
jne
andl
mov
push
lret
icebp
js
xchg
cmp
xchg
sti
ficoms
arpl
cwtl
sub
fsubrs
inc
cmp
push
sub
or
push
outsl
adc
inc
in
clc
sub
xor
xchg
sbb
or
cmp
popa
mov
mov
cmc
push
push
xchg
imul
stc
stos
jb
push
pop
popf
or
sub
cmp
add
add
dec
mov
in
jns
xor
or
xchg
add
adc
mov
out
xor
push
hlt
jmp
les
sbb
pushf
outsb
and
loopne
fldl
pop
pushf
inc
cmp
xchg
sbb
mov
mov
loopne
sub
loop
int
and
call
xchg
cmpsb
flds
push
vprotq
in
call
dec
sti
test
cmp
int3
out
aam
jo
sub
insl
dec
xchg
lret
inc
mov
and
insl
aam
repz
out
or
jl
adc
push
scas
pop
pop
or
lahf
outsb
dec
in
cwtl
test
sti
ss
aam
sub
out
adc
adc
jmp
mov
sbb
push
xor
std
stos
sti
icebp
inc
movsb
movsb
push
adc
xchg
clc
out
and
sbb
fwait
hlt
lods
je
cli
or
movsb
ret
sti
or
mov
mov
add
push
popf
subb
xchg
rorl
xchg
xor
lcall
add
push
mov
add
inc
sub
push
jb
outsb
fisttpl
jo
arpl
mov
push
inc
test
test
popf
mov
jg
pop
push
scas
inc
sbb
das
mov
fs
hlt
pop
pop
rdpmc
ret
xor
xor
sahf
cwtl
aam
adc
dec
test
adc
cmp
and
xchg
dec
insl
lods
mov
dec
and
or
ret
xchg
sub
lahf
insb
jl
arpl
imul
xchg
aad
dec
mov
stc
mov
popf
in
cmp
add
into
jmp
push
fistpl
and
pop
js
add
push
hlt
in
inc
mov
mov
xchg
cmp
out
aad
xchg
imul
jno
jno
flds
mov
jle
xchg
lods
jno
in
sub
jl
xlat
adc
insl
mov
cld
scas
aad
pop
hlt
call
xchg
test
xlat
mov
mov
mov
sub
mov
push
pop
mov
popf
std
mov
pop
mov
pusha
lahf
imul
mov
es
lods
aam
push
out
pop
jne
imulb
daa
xchg
ljmp
fisubrs
lods
negl
fucomip
xchg
ret
push
pop
push
dec
and
sbb
in
popf
out
jp
xchg
subb
mov
dec
ds
dec
in
roll
test
mov
stos
lock
jmp
data16
lods
lcall
ret
add
je
out
jo
test
or
dec
loop
mov
jns
int3
xor
xchg
xchg
mov
in
xchg
dec
pop
or
sub
test
mov
insb
cmp
push
mov
sub
or
sub
cmp
roll
xchg
mov
jmp
jmp
mov
mov
test
adcl
and
jno
fstps
sahf
sbb
pop
ror
xlat
cmp
not
fisttps
xchg
js
imul
pop
jae
cwtl
mov
es
in
into
cli
insl
xor
jl
lret
or
pop
or
jmp
popa
in
data16
sub
xor
aaa
xlat
and
and
cmp
adc
xchg
mov
bound
js
xor
fucomip
jbe
dec
mov
cmc
imul
mov
loopne
lock
cmc
in
jg
dec
sarb
pusha
pop
fwait
jns
fcmove
fcoml
cmp
and
scas
mov
mov
xlat
or
outsb
int3
rcrb
mov
cwtl
inc
insb
decl
aam
cmp
cmpsl
pop
jle
mov
xor
xchg
aad
movsb
aam
ret
cs
lret
pop
arpl
fs
addr16
cmp
lea
les
push
jecxz
sbb
lods
and
ret
incb
push
stos
xchg
test
loop
roll
out
int3
outsl
inc
aas
arpl
repnz
add
xlat
lock
pop
sub
pop
dec
or
cmp
int
imul
xchg
jb
adc
mov
mov
pop
lea
push
insl
lcall
test
sbb
inc
cmpsb
cmp
xchg
popa
sub
std
adc
or
mov
scas
pushf
int3
cwtl
stos
sbb
jbe
pop
dec
pushf
xor
jl
push
mov
or
adc
dec
pop
dec
cs
pop
hlt
mov
pop
repnz
mov
dec
push
ret
cmp
cli
cld
repnz
lods
nop
flds
add
movsb
fldcw
iret
cmp
sub
push
xor
pop
jae
ret
push
push
or
and
call
movsb
inc
dec
imul
or
dec
ss
arpl
arpl
jae
movsl
repz
mulb
lock
cltd
stc
adc
jae
inc
add
loope
add
sub
in
pop
inc
aam
push
loopne
frstor
add
ds
aas
inc
ficoml
pop
xchg
push
inc
push
aaa
cltd
pop
lock
xchg
mov
mov
xchg
orb
imul
mov
add
mov
arpl
mov
cmp
icebp
sbb
lcall
lret
jp
test
repnz
shll
pop
into
rcrb
int3
sub
outsb
mov
fstp
inc
mov
lods
jb
push
mov
xrelease
cmp
add
add
ds
cmp
daa
inc
cs
repz
pop
addr16
xor
pop
pop
shrb
push
mov
add
ja
imul
pop
jecxz
rorl
pop
jne
out
sbb
add
mov
mov
call
or
outsl
lret
pop
in
mov
push
xchg
pushf
or
or
xor
add
in
andl
bound
in
sbbb
rorl
insl
adc
iret
jns
sub
ss
jecxz
repz
sbb
xchg
and
mov
shlb
jns
xor
leavew
mov
ret
leave
bound
cld
nop
lods
xchg
pop
xchg
and
jg
into
out
mov
and
mov
or
push
mov
les
push
dec
iret
in
mov
jne
rcr
push
gs
ror
push
jbe
stos
fcomi
ret
fsubl
int3
decl
push
std
sbb
shlb
fsts
mov
adc
adc
cmp
addr16
and
push
mov
int3
cmp
mov
cs
ss
mov
cld
cmpsb
lods
pop
jg
enter
xchg
sbb
mov
sti
fidivs
jns
xchg
pop
mov
adc
xorl
fistps
fistps
jle
jmp
jl
inc
mov
jne
jp
jmp
inc
shl
gs
in
test
mov
jo
leave
leave
dec
xor
mov
mov
pusha
mov
aas
out
imul
sub
and
les
arpl
sbb
push
imul
adc
cwtl
dec
xchg
loopne
cmp
or
dec
push
mov
cli
ja
fildl
xchg
push
int
mov
cmp
lods
aam
js
in
scas
sbb
xchg
jbe
in
jp
push
and
int3
adc
repnz
or
divl
in
in
mov
or
jae,pt
xor
add
mul
stos
xchg
mov
loopne
push
push
rcl
cvtdq2ps
cmp
fdivrs
and
cmp
into
or
lods
xchg
into
push
mov
jb
adc
mov
gs
xchg
adc
ror
cmc
inc
xchg
call
xor
adc
scas
jge
js
fwait
mov
mov
ret
rclb
mov
loop
dec
ret
push
inc
add
or
ret
jp
mov
xchg
add
xlat
fs
sbb
scas
or
inc
fnstenv
xchg
ds
jne
shrb
adc
lcall
dec
aad
adc
sub
jp
push
jmp
xor
push
mov
daa
push
arpl
cwtl
cmp
push
adc
jbe
xchg
pushf
scas
inc
mov
cltd
lock
sbb
fstpt
jno
adc
ja
in
push
ret
jno
stos
mov
mov
adc
jb
mov
mov
push
adc
imul
xor
sbb
xchg
xchg
addr16
pop
adc
sti
out
mov
shl
das
cltd
mov
sahf
cmc
shl
or
ret
push
sahf
cmp
ljmp
mov
mov
push
inc
mov
pop
out
decl
push
lods
lods
adc
add
mov
dec
in
push
ret
cmc
fbstp
cmpsl
int
fwait
sub
fnstcw
rorl
test
mov
mull
lock
jo
push
pop
aas
adc
push
mov
loop
je
sbb
dec
sbb
into
pop
cltd
pushf
mov
push
data16
cmpsl
jecxz
das
test
imul
fwait
sub
or
ja
pushf
xor
xchg
cmpsl
loope
shll
and
lahf
or
mov
mov
sbb
pop
movsb
and
mov
and
or
movsl
mull
daa
lods
int3
push
in
adc
popa
add
int
jp
mov
xor
mov
out
cmp
mov
mov
pop
pop
in
lahf
jnp
movsl
xchg
out
add
push
loope
mov
pop
cmp
mov
push
mov
mov
fnstenv
pop
dec
push
xchg
stos
add
pop
mov
aaa
push
dec
adc
cwtl
cmp
cmp
sub
pushf
mov
jo
jp
mov
xor
roll
fdivrs
and
loope
lock
pop
mov
loope
inc
cmp
mov
adc
or
sub
xchg
ret
cmp
and
mov
repz
pop
adc
insl
push
scas
mov
jl
test
sti
or
cmp
cld
jle
hlt
pop
pop
lret
clc
outsb
ret
mov
ret
cld
push
jb
mov
xchg
enter
cs
mov
scas
mov
icebp
mov
outsl
int
xor
mov
sub
scas
mov
adc
rcrl
or
mov
add
int
addr16
fwait
icebp
pop
push
lcall
test
sub
test
cmp
test
sbb
and
pmullw
and
insb
sbb
scas
sub
daa
pop
mov
sarl
cltd
cmp
mov
pop
mov
push
clc
jg
andb
or
insb
pop
lret
adc
pop
arpl
adc
mov
stos
jecxz
dec
push
and
dec
sub
sbb
imul
bound
xchg
dec
rorb
ret
add
lock
mov
inc
clc
in
xchg
imul
pop
ret
rclb
xchg
pop
inc
int
dec
cld
daa
and
xchg
pop
stc
jne
insl
repnz
jo
shl
imul
dec
fdivrs
aad
les
sub
push
scas
dec
adc
add
push
std
fistps
push
mov
push
inc
dec
and
sub
stos
mov
pop
mov
inc
dec
jbe
inc
mov
add
dec
pusha
jmp
adc
jbe
mov
roll
inc
fisttps
cltd
out
ja
mov
pop
mov
call
int
mov
cmp
pop
pop
lret
mov
loop
xor
jecxz
sub
add
adc
dec
xlat
movsb
mov
xchg
mov
sbbb
push
fs
mov
mov
roll
sub
mov
pop
mov
sub
sbb
nop
pusha
stc
outsl
leave
jle
lea
inc
jns
jo
das
into
xchg
mov
inc
leave
jg
mov
sub
movsb
sbb
jmp
xchg
add
in
cmp
sahf
pop
popa
jecxz
aas
mov
into
inc
or
push
ds
inc
mov
xchg
mov
push
xchg
mov
mov
lcall
test
insl
push
dec
inc
rcl
sbb
mov
dec
mov
jmp
in
inc
adc
into
in
movsb
xor
or
xchg
rclb
pop
imul
addr16
in
xchg
ja
stc
or
xchg
lds
push
inc
sbb
pop
xchg
jno
xor
fldt
mov
sub
dec
mov
das
pop
mov
adc
mov
pop
jno
jnp
add
jne
icebp
push
jo
cmpsl
mov
xlat
cmc
or
pop
add
adc
sbb
pop
push
jge
gs
xchg
inc
sbbl
xor
sti
loopne
sub
adc
push
or
or
stc
mov
pusha
pop
xchg
nop
and
mov
push
test
out
pop
jae
mov
andb
sti
mov
pop
pop
les
and
sbb
pop
inc
dec
xor
xchg
xchg
jp
out
lods
push
inc
sub
cli
jl
or
in
and
add
mov
sub
fs
stc
mov
bsr
jne
mov
dec
pop
int3
arpl
fs
lahf
rcl
xor
or
pop
mov
adc
cmp
gs
fdivrs
mov
enter
pop
iret
mov
and
in
mov
jle
loop
mov
jae
inc
and
iret
repz
test
mov
lea
test
or
dec
sub
mov
add
pushf
in
sti
stos
fistl
xor
mov
inc
xchg
pusha
adc
int
pop
jp
inc
das
icebp
xor
addr16
sub
movsb
notb
je
mov
jae
jbe
fs
sbb
das
pop
lds
push
and
jle
inc
cmp
xor
dec
jecxz
jl
mov
sbb
outsl
jnp
movb
fwait
and
test
pop
push
push
mov
into
push
pusha
dec
mov
mov
inc
mulb
scas
push
mov
outsl
test
imul
adc
dec
cmp
repz
sub
or
ljmp
push
push
adc
loope
decb
push
mov
mov
push
jg
pop
or
or
gs
mov
mov
add
mov
addr16
and
mov
sbb
rorl
dec
hlt
push
mov
jno
push
pusha
orl
push
or
sub
out
add
popf
or
mov
repz
addr16
pop
dec
pop
fs
push
xchg
into
push
push
ret
cmp
inc
xchg
aaa
lods
popf
outsl
push
int3
outsb
pop
into
cltd
jbe
nop
add
mov
lret
push
cli
mov
out
adc
push
push
repz
or
jnp
add
sbb
xor
inc
sbb
out
sbb
jmp
aam
mov
aas
imul
jo
inc
stos
out
cld
xlat
xchg
cmpb
sub
xor
cltd
or
mov
std
adc
in
aad
mov
into
mov
call
push
aas
sbb
mov
or
xor
inc
pop
cmp
outsb
mov
das
sub
outsl
sarb
cmc
lds
mov
xchg
mov
inc
xchg
and
mov
add
mov
sub
repz
stos
inc
mov
push
push
loopne
xchg
and
rol
inc
sbb
mov
test
lock
mov
cmp
call
rorl
push
jl
adc
inc
sub
cmpsl
mov
fldl2e
aas
ret
xchg
stos
inc
pop
iret
sbb
jno
jo
or
xchg
test
jp
inc
mov
sahf
pop
dec
pop
dec
fadd
adc
gs
jb
adc
dec
cmp
push
data16
push
cmp
aam
push
stc
add
push
mov
movsl
ja
addb
mov
mov
xlat
lock
mov
push
dec
inc
sbb
jo
pop
dec
test
in
shll
andl
and
pop
pop
repz
inc
ret
jge
push
popf
loopne
lret
or
int3
lret
adcb
fsubrs
in
loopne
divb
sbb
push
mov
xor
outsl
notl
pop
lret
dec
leave
int
sub
insb
xor
int
jg
sti
mov
setae
insl
pop
call
imul
adc
inc
sub
mov
push
in
mov
xchg
in
push
jnp
mov
mov
sti
in
cmp
mov
xor
push
mov
or
mov
fucomi
mov
divb
ljmp
push
mov
ja
mov
scas
repnz
fisubrs
rcl
mov
shll
lret
nop
jmp
and
dec
or
movb
xchg
in
mov
mov
sub
sbb
mov
es
cmpsb
imul
ss
movsb
sub
clc
mov
mov
push
clc
outsb
into
adc
andb
fnstenv
mov
or
iret
das
push
std
ds
dec
or
adc
sti
dec
dec
gs
push
push
repnz
sub
jae
adc
das
or
jbe
mov
xchg
add
popa
ss
test
adc
jbe
ret
push
test
lock
loopne
pop
push
and
data16
fildll
xor
inc
loopne
xchg
sbb
sbb
or
imul
sbb
mov
sub
dec
xchg
fnsave
addr16
mov
out
pop
jmp
test
mov
pop
mov
iret
or
inc
ret
adc
mov
inc
push
and
jge
cld
cmpsb
or
xlat
adc
repz
inc
mov
cmpsb
aaa
add
sbb
and
inc
rcll
jl
scas
sbb
mov
movsl
loop
aas
adc
outsl
adc
fidivs
mov
jns
aaa
rcrl
shrl
fistps
sub
xchg
mov
jnp
aam
xchg
jle
or
add
pop
ss
outsl
fwait
arpl
add
mov
push
mov
arpl
jg,pn
mov
outsl
std
das
fdivrl
push
pop
xchg
stos
notb
dec
call
fisubs
decl
and
inc
data16
addr16
cmp
lock
sbb
andw
aas
xchg
mov
loop
cmp
mov
and
mov
xchg
ret
mov
jecxz
mov
mov
in
movsb
pop
push
incb
push
jle
cs
fcompl
out
movsl
or
jae
test
into
pusha
push
xchg
cmc
dec
xchg
pusha
dec
mov
sti
jl
pop
pop
sub
imulb
pop
mov
and
xor
cmp
xchg
fcompl
in
mov
adc
inc
lahf
repz
jo
icebp
inc
cmp
cmpsb
mov
pop
push
lds
pop
test
int
jne
adc
inc
inc
lods
mov
mov
jl
test
fisubrl
repz
ds
scas
out
cmp
test
cmp
mov
scas
xchg
jbe
mov
bound
inc
mov
shrl
aaa
cmpsb
mov
sbb
cmpsb
ss
pop
cs
sti
sub
aam
xor
movl
push
test
push
movsb
and
scas
dec
mov
jne
dec
xor
mov
ja
decl
add
into
inc
fs
mov
jl
int
cmp
adc
icebp
or
and
les
cmp
movsb
shrl
xor
cli
inc
xor
movsl
movsb
data16
cmp
test
xor
inc
or
push
jno
out
cmp
mov
cmp
iret
sub
add
push
and
and
lcall
imul
dec
pop
sbb
push
push
popa
adc
cmp
insb
cli
mov
data16
stos
stc
cmp
decb
push
inc
imul
lcall
push
and
idivl
loopne
into
test
shll
pushf
leave
xor
xchg
aam
mov
xchg
int3
setl
push
int
icebp
jg
or
xor
ds
ficompl
sbb
jae
push
imulb
mov
push
jns
lret
cmp
test
cmpxchg
mov
sbb
lret
test
or
sub
or
cmp
ss
jmp
iret
ret
arpl
sahf
xor
sbb
sub
jae
sarl
shlb
and
pushf
out
ja
sbb
hlt
bound
dec
xor
sti
rcrl
jge
pop
dec
das
push
rclb
adc
stos
lds
or
gs
movsl
mov
iret
push
pushf
bound
jle
loopne
fisttps
or
imul
mov
mov
sub
push
imulb
sub
mov
push
pop
xor
xchg
or
insb
nop
push
ljmp
push
nop
add
xchg
cld
mov
cltd
push
inc
sbb
mov
out
outsb
add
test
sbb
int
jp
and
lods
int3
int
aad
jecxz
xor
sbb
aam
and
cmp
xchg
ret
add
decb
sarl
pop
out
xchg
push
fs
push
mov
js
mov
xchg
scas
das
data16
pop
push
mov
add
pushf
aad
push
inc
xchg
or
mov
outsl
idivl
pushf
inc
sbb
xchg
stos
pop
fmuls
es
cmc
jae
fldt
test
pop
dec
arpl
xor
and
cmc
cmp
ret
sbb
fs
sbbb
mov
mov
mov
lret
xchg
adc
push
iret
fs
stos
jg
push
add
jns
int3
cmp
iret
fwait
mov
jl
mov
loopne
or
ja
andb
icebp
fidivrs
inc
stc
in
jle
and
xchg
cmp
lea
psrld
jle
mov
insb
test
fnsave
jae
into
in
lock
or
or
stc
shlb
lea
repnz
pushf
adc
xor
enter
out
push
mov
and
pop
into
and
mov
js
aam
movsb
out
shrb
adcl
aam
addr16
repz
fxch
addr16
mov
xchg
notl
push
lcall
sub
clc
ss
repz
xchg
out
push
fists
pop
xchg
inc
sti
sbb
std
aaa
movsl
sbb
xchg
add
insl
mov
data16
std
dec
dec
fst
xor
jl
pop
cltd
movsl
or
es
sbb
push
mov
stc
ss
push
xchg
inc
out
std
fwait
and
mov
jl
inc
movsb
push
add
andb
mov
stos
jl
dec
cmpsb
aad
mov
dec
mov
int
rolb
xor
ja
fsts
mov
loop
sti
lds
mov
cmp
adc
shr
add
mov
adc
adc
push
ljmp
dec
pop
fwait
inc
mov
fwait
or
into
int3
adcb
push
push
iret
mov
xchg
pop
testl
lret
jg
stos
push
add
into
subl
push
and
cmp
fsub
jmp
mov
fimull
lods
push
mov
cwtl
rcl
cwtl
ljmp
push
push
out
push
add
mov
xor
es
fnsave
dec
push
lods
aaa
sbb
repz
out
jnp
or
iret
add
mov
adc
pop
inc
xor
xchg
xorl
inc
jmp
dec
push
push
mov
mov
popf
and
scas
adc
jge
push
ficompl
xor
inc
setne
repz
ss
cmpsl
add
pushf
jmp
inc
mov
pop
xor
notl
mov
jnp
mov
sahf
pop
rcr
and
inc
push
cmp
gs
and
dec
int3
mov
mov
sub
push
jge
repnz
fistpl
ss
fbld
mov
xor
cmp
or
cmp
inc
shl
insl
enter
test
and
loopne
cli
xchg
popa
mov
inc
stos
sub
repnz
add
dec
int3
sub
jg
cmp
insl
repz
hlt
loopne
xor
xchg
test
ss
bnd
adc
jne
sti
jns
push
pop
adc
pop
jb
daa
and
xor
gs
or
jno
loopne
repnz
or
cmc
push
das
adc
pop
mov
or
imul
sub
ljmp
sarb
push
push
adc
imul
lahf
mov
out
sub
dec
call
push
lds
mov
cltd
push
cmc
leave
pop
cmp
dec
out
fimull
mov
dec
mov
jp
out
sbb
adcb
mov
jo
and
mov
nop
call
dec
pop
fucomi
out
mov
dec
inc
sub
mov
dec
movsl
test
inc
js
mov
xchg
mov
fnstsw
mov
data16
sahf
sbb
or
sbb
mov
add
pop
jge
push
jbe
sub
inc
push
cli
and
scas
mov
in
ret
push
scas
fsubr
stos
jmp
pop
jae
adcl
xchg
xchg
sub
pusha
test
mov
cltd
cs
pop
test
push
push
and
test
andb
inc
mov
pop
imul
sub
fsubl
and
loop
into
in
or
add
in
jle
out
mov
add
sahf
mov
imul
fwait
je
filds
mov
xchg
imul
and
in
mov
jae
cmpsb
loope
test
addr16
lret
xor
and
inc
xchg
sbb
mov
cmp
out
mov
xchg
shlb
and
sub
int3
and
push
mov
sub
leave
dec
adc
sub
mov
clc
imulb
mov
imul
pop
mov
fistps
or
pop
mov
ljmp
inc
xchg
mov
push
lods
call
stos
jb
sbb
jecxz
add
mov
jecxz
pop
outsb
ret
push
std
negl
shrb
dec
jmp
rclb
jae
mov
adc
lret
mov
test
adc
sub
cmpsb
add
jbe
add
cmp
ret
stos
mulb
xor
push
inc
frstor
xlat
sub
push
shlb
adc
push
push
xchg
push
cld
lock
cs
cltd
mov
icebp
ss
ret
push
ror
jecxz
jno
sbb
sub
jge
in
jbe
push
xlat
and
mov
pop
movsb
cmp
pusha
jle
loopne
les
lcall
leave
dec
cmp
mov
das
mov
xor
popa
pop
fwait
cmp
scas
xor
ret
add
push
cmp
cmc
cmpsb
add
outsb
jb
mov
jo
incb
and
dec
scas
out
sbb
cmc
ret
mov
cld
rcrb
dec
les
push
std
dec
xor
sbb
and
loopne
push
pusha
lcall
push
fcomps
loop
and
lods
clc
mov
loope
sub
and
iret
push
mov
mov
data16
insl
xchg
lahf
push
movq
jecxz
lods
push
outsb
data16
dec
push
into
xchg
ds
addl
js
fadds
ja
sub
jmp
aaa
mov
movb
cmc
imul
popa
rcrl
outsb
mov
enter
lret
movsl
and
sub
mov
decb
pop
sbb
sbb
cmc
pop
push
jle
mov
push
pushf
nop
push
dec
loop
int3
test
sti
push
imull
jecxz
ds
mov
std
sub
scas
inc
stos
and
xor
mov
bound
xor
xchg
iret
enter
imul
dec
aam
fmul
mov
dec
inc
addr16
fs
mov
popa
orb
push
or
lds
sbb
lahf
adc
movsb
add
xchg
jnp
pop
lcall
pop
insl
jmp
test
mov
ja
cmp
xor
fadd
cmc
mov
repz
rcrl
push
jp
cld
scas
mov
xor
rcr
in
ret
fadds
pop
std
mov
lret
push
fadd
inc
loope
sarl
push
pushf
add
mov
cmpsb
mov
xchg
iret
add
cltd
or
jno
mov
jo
out
dec
pop
or
adc
and
out
lock
aas
mov
dec
pop
test
and
mov
out
mov
leave
inc
push
inc
aad
in
movsl
orb
imul
pop
ja
adc
adc
stos
xchg
mov
roll
nop
dec
inc
adc
ret
xchg
dec
sub
je
stc
insl
in
mov
negl
jp
addr16
arpl
cmp
gs
pop
or
in
dec
mov
icebp
std
icebp
stos
xchg
orb
dec
dec
cmpsl
push
dec
sbbl
cmp
out
iret
adc
test
cmpsb
test
jle
jo
pop
lcall
or
bound
mov
sub
repz
sbb
int
jge
and
scas
pop
daa
inc
or
daa
fistpl
jbe
les
mul
mov
cmpsb
push
or
ljmp
pop
jnp
adc
push
out
sbb
xchg
arpl
call
adc
jmp
in
mov
out
pop
mov
iret
pop
cmpsl
imul
push
xchg
rorl
mov
mov
push
stos
pop
test
adc
movsl
pop
mov
pusha
xor
dec
xor
and
hlt
hlt
push
push
mov
push
ret
and
mov
fcomps
leave
push
addr16
movsb
pop
packuswb
xor
test
jnp
lret
jp
in
dec
fstp
dec
jl
mov
enter
mov
cmc
lcall
xor
faddl
sarb
ret
cmp
xor
inc
xor
iret
mov
jle
pop
push
mov
add
jecxz
mov
pushf
and
xor
iret
fs
lcall
push
shrl
jns
fnstenv
lret
jnp
arpl
jae
sub
enter
loopne
ja
pop
loope
jb
sub
imul
xchg
and
stos
add
and
outsl
and
dec
out
jl
mov
lods
sub
and
stc
dec
fcmove
mov
mov
pop
ljmp
popf
mov
xchg
cmp
pop
xchg
je
movsb
ss
aam
movsb
cli
movsb
sub
leave
rorb
adc
push
fidivrs
fdivs
fs
jl
imul
pop
jbe
shr
fincstp
roll
push
fists
mov
jl
aam
cmpsl
and
ja
jg
ds
push
data16
pop
loopne
loop
xchg
stc
mov
clc
sahf
cmp
lret
and
ffreep
jl
fwait
mov
int
rorb
dec
lret
and
and
xor
arpl
test
out
out
repz
int
ds
mov
jmp
ljmp
or
push
mov
cmc
jo
sbb
jne
imul
mov
jbe
jecxz
rorl
insb
mov
fcoms
repnz
lcall
dec
push
scas
dec
mov
lret
and
add
das
jle
in
cmpsb
movsl
out
xchg
xor
jg
adcb
lahf
test
xor
lods
jo
dec
pop
fdivrl
aad
mov
call
adc
dec
dec
fldlg2
mov
sub
cmp
shl
bound
jae
xlat
cmp
shll
pop
adc
adc
clc
mov
aad
xchg
mov
cmc
add
lahf
cs
push
call
paddsb
sbb
sbb
fmuls
fimull
or
jmp
inc
cltd
repz
rorb
push
pop
sub
pushf
add
test
shrb
popf
pause
repnz
hlt
adc
mov
shlb
or
sub
mov
push
push
imul
adc
mov
mov
push
inc
push
mov
push
in
imul
mov
mov
xor
add
daa
mov
outsl
ljmp
inc
dec
int
sbb
ss
cltd
jle
xchg
stc
mov
xlat
stos
mov
fs
mov
sub
adc
mov
loope
mov
jb
lods
test
xor
ss
mov
lahf
stc
sarb
lods
or
fwait
sarl
jbe
mov
or
and
and
jge
insl
push
pop
sub
cmpsl
mov
jbe
test
jbe
loope
cmp
mov
shrb
pop
mov
ffree
pusha
es
in
xchg
inc
sahf
lea
pop
dec
dec
jmp
xchg
jmp
fidivrl
or
inc
jecxz
mov
or
mov
or
movsl
push
push
stos
and
test
inc
xor
sbb
and
test
jle
add
jo
out
and
jb
xchg
and
pusha
in
jns
push
jbe
stos
leave
insb
imul
int
es
cmc
xlat
bound
shrb
sbb
sub
addl
mov
fisubs
and
pop
call
push
mov
rclb
call
jne
mov
lock
cmp
adc
mov
and
fstp
push
pop
loop,pt
xchg
push
xor
or
adc
ljmp
outsb
push
or
jae
mov
scas
divl
sub
fcomps
shl
repnz
mov
pop
jmp
add
lahf
lods
or
xor
adc
leave
xchg
pop
loope
sbb
loop
mov
mov
test
push
sub
cmpsb
sub
cli
cwtl
dec
adc
nop
jge
aam
clc
xor
test
mov
mov
imul
test
fstpt
mov
pop
dec
ret
mov
xchg
xor
shlb
andl
or
mov
mov
iret
push
scas
or
xchg
sbb
jae
movsl
push
dec
hlt
add
adc
xchg
sub
inc
arpl
pop
xchg
add
test
sbbb
mov
sub
je
pop
in
or
sti
jo
pop
pop
push
bound
xor
mov
dec
imul
xchg
lret
and
adc
imul
or
push
rcrb
or
add
lock
insb
add
ficoms
out
mov
jno
in
sbb
add
sbb
inc
and
insl
jle
test
jnp
mov
sbb
dec
dec
push
inc
push
mov
mov
push
mov
popf
jle
mov
ret
jbe
ds
pand
out
dec
jne
fs
loope
enter
pop
int
add
push
add
and
call
pop
sbb
jnp
mov
mov
cmpsb
dec
add
ret
jo
ljmp
imulb
testl
push
in
rol
js
imul
pop
pextrw
inc
push
adc
in
mov
mov
ljmp
jle
push
fstpt
jp
pop
mov
incb
sbb
push
mov
sarb
bound
mov
xchg
outsl
call
shlb
xor
ss
filds
dec
pop
jge
pop
stc
pop
lret
ss
sub
mov
adc
cli
popa
mov
in
xor
je
icebp
jb
cmp
aas
mov
stos
jne
test
addr16
mov
mov
mov
and
pop
enter
ret
adc
dec
das
inc
rolb
xor
fildl
sti
das
jns
daa
mov
fisubrs
stos
adc
xlat
insb
sbb
add
subl
inc
push
clc
mov
pop
dec
adc
aad
push
push
mov
test
jge
push
es
pusha
add
xchg
add
jmp
sbb
mov
cmp
sub
gs
xchg
sub
icebp
dec
rolb
mov
add
insl
sub
aas
ret
pop
or
mov
adc
mov
pop
xchg
jne
shrl
sub
ljmp
aas
sub
mov
xchg
int
xorl
lock
lahf
dec
lea
xchg
arpl
and
repz
add
loopne
stos
lret
ret
out
rolb
pop
cmp
xchg
mov
xor
negl
jbe
jns
jne
dec
adc
sbb
xor
ret
in
xchg
sub
imul
stc
lcall
lds
mov
test
das
push
sub
shlb
sbb
adc
mov
ja
test
sub
or
faddl
outsb
imul
jl
jmp
das
inc
aaa
ret
xor
mov
stc
enter
mul
es
pop
xchg
adc
addb
in
mov
ret
dec
ret
shll
xor
xchg
push
jmp
sbb
loopne
jae
imul
pop
iret
jle
frstor
mov
pop
mov
sub
loopne
push
jmp
cmp
cmp
leave
out
xchg
lea
scas
mov
jb
or
xor
sahf
jae
jecxz
mov
pushl
into
int
and
and
add
push
mov
and
shl
ja
outsb
sub
lret
mov
jbe
dec
cmp
mov
sub
xchg
in
mov
sbb
mov
or
and
sarb
mov
mov
movsl
adcb
pushf
out
add
ret
or
jmp
loopne
mov
lock
outsl
jae
lods
and
dec
jns
inc
jg
add
xor
in
shrl
sbb
sahf
mov
xchg
in
push
xor
add
out
pop
movsl
mov
enter
and
or
jecxz
cmova
lret
xchg
loope
bound
test
dec
addr16
imul
push
popf
push
test
shll
les
scas
mov
fsubl
adc
rdtsc
add
shlb
andb
inc
fsincos
out
jne
push
inc
pop
xor
xor
mov
cmc
jle
out
pop
or
outsl
icebp
out
addr16
hlt
mov
sarb
mov
pop
and
mov
sub
inc
push
xchg
cmp
push
jb
aaa
mov
cmp
movsb
cmp
push
xchg
jo
xchg
pop
mov
cmpsl
rclb
pop
jns
and
jne
sub
jmp
pop
subl
xor
dec
adc
xchg
mov
jge
aaa
sub
xchg
shr
aam
lret
test
addr16
push
jecxz
adc
sub
sub
mov
test
mov
je
bound
mov
lret
push
pop
lret
xor
mov
int
and
sbb
cmp
fidivs
cld
mov
pop
mov
xchg
hlt
cmp
pop
in
into
pusha
push
das
js
mov
nop
ret
popf
pushf
lahf
mov
fyl2xp1
adc
mov
cwtl
testl
mov
cmp
test
sbb
inc
pushf
jnp
cli
test
or
mov
add
aam
jns
cmpsb
test
nop
std
in
push
push
adc
mov
pop
movsb
add
inc
adc
rclb
out
xor
push
gs
and
sbb
lret
shlb
js
shr
out
mov
fistpl
decl
push
nop
xlat
jecxz
lret
enter
cmpsl
xlat
pop
push
gs
mov
mov
mov
inc
sub
filds
je
enter
xchg
mov
pop
jns
pop
and
push
cli
incb
movsl
mov
mov
push
decl
inc
dec
jge
push
push
bound
movsl
mov
scas
cmpsl
mov
gs
mov
mov
loope
scas
lods
pop
mov
stos
lods
mov
xchg
icebp
int3
mov
sbb
sbb
rcrb
mov
ljmp
cmp
xor
iret
hlt
dec
fcom
idivl
ljmp
dec
iret
les
push
aaa
mov
js
stos
cmp
cmp
cmp
xor
inc
adc
js
or
mul
jle
icebp
add
stos
mov
outsb
xchg
ja
or
sub
jle
repz
sub
inc
jno
das
and
call
lea
inc
cwtl
push
pop
stos
jge
add
cli
bound
movsl
adc
pusha
pop
pop
sub
ljmp
push
filds
pop
inc
ss
out
sub
dec
clc
fdivl
stos
mov
mov
sti
xchg
and
xlat
xor
sbb
mov
std
out
cwtl
shrb
jns
shlb
leave
test
std
in
pop
jne
arpl
pushf
dec
nop
mov
lds
add
scas
jmp
hlt
pop
pop
mov
fnsave
push
lahf
cmp
jmp
std
mov
fwait
mov
in
mov
out
mov
leave
es
shl
pop
pop
jmp
stos
fldl
je
pop
ret
cld
jmp
mov
call
sub
sub
repz
cmp
adc
cmc
divl
subb
stos
rcll
outsb
cld
stc
out
xor
mov
fistpl
bound
dec
push
fcoms
stos
nop
cmp
test
cmp
xchg
mov
jbe
rclb
mov
mov
imul
daa
in
and
fldt
sbb
je
xor
sub
jns
adc
and
mov
js
shrb
or
push
popf
sub
push
push
mov
fidivs
in
int
fnstcw
out
push
dec
hlt
xorb
int
jecxz
xchg
cs
push
mov
xchg
mov
shl
ss
jle
sub
sub
int3
lds
dec
in
out
repnz
inc
pop
repnz
and
add
div
mov
lea
or
push
mov
ljmp
mov
lahf
mov
push
cli
push
adc
dec
rcrb
inc
dec
leave
mov
xchg
xchg
add
mov
add
jae
out
fcmovnbe
adc
or
mov
lods
add
jecxz
xchg
inc
mov
ljmp
cli
cmp
adc
shl
add
mov
xchg
cld
mov
cmp
js
dec
jns
iret
fildl
inc
arpl
in
sarb
cltd
sub
lret
js
fistpll
call
pushf
pop
sub
cmp
aam
aad
xor
das
or
xor
cmp
xchg
lret
adc
shll
mov
add
adc
ljmp
mov
push
stos
lock
lret
dec
mov
push
xchg
cmpsb
in
jb
or
jecxz
ds
sbb
scas
mov
es
in
jmp
dec
pop
in
xchg
jo
sbb
jle
repnz
mov
test
lock
mov
jle
test
sbb
shl
push
mov
inc
scas
or
mov
dec
shlb
sub
test
push
leave
or
xor
cmp
push
int3
push
sub
in
or
jne
sub
mov
pop
sbb
xlat
inc
jecxz
clc
push
sub
mov
xchg
jle
divl
push
fsub
pop
xor
dec
sahf
sbb
ror
jbe
int3
lret
shl
repnz
sub
enter
adc
cmpsb
insb
mov
addr16
rclb
out
push
dec
xchg
jnp
jg
pop
out
dec
icebp
and
cmp
in
mov
fistps
lret
push
and
cmpsl
fimuls
ljmp
int3
js
xchg
ficomps
je
je
fwait
fs
adc
mov
loop
imul
shlb
in
aas
pop
jno
ret
js
mov
dec
push
fimuls
add
cmpsb
bswap
test
iret
mov
insb
inc
sbb
xor
aam
sbb
cmp
sbb
and
inc
scas
add
test
loopne
add
mov
mov
mov
xor
inc
mov
mov
dec
scas
cli
jns
or
loop
mov
inc
adc
sarl
mov
movl
pop
imul
cwtl
sbb
sub
addr16
popf
cmpsb
jb
dec
pop
push
xor
out
arpl
adcb
dec
and
jge
and
lret
or
repz
mov
pop
pop
pushl
movsl
jmp
xchg
out
int
scas
sbb
sbb
adc
push
daa
stos
and
mov
dec
cmp
jmp
lret
pop
sbb
les
push
stc
stos
inc
into
mulb
adc
out
arpl
inc
icebp
jmp
push
andb
outsb
mov
xchg
pop
jg
jge
inc
xor
jmp
add
pusha
cwtl
mov
push
or
adc
xchg
inc
fcomps
pop
mov
sub
inc
leave
mov
sub
loop
jae
xchg
add
fistpll
mov
scas
daa
cld
stc
xchg
inc
add
stc
jmp
jg
int
mov
cmpl
fsts
mov
cmp
arpl
std
aas
in
dec
fcoms
adc
push
jecxz
jle
mov
jecxz
ret
enter
lret
adc
mov
sub
push
sbb
lahf
pop
int3
sub
push
cmpsb
jae
push
repz
jmp
mov
jp
jg
xchg
jp
mov
push
int3
push
pop
xchg
lea
jno
addr16
xchg
inc
push
cmp
adcb
and
test
jle
jmp
leave
dec
dec
mov
xchg
fnstcw
and
jne
add
inc
or
mov
pop
push
addl
lods
xchg
cmp
hlt
jge
test
and
inc
mov
inc
adc
pop
stos
and
out
rorb
adc
mov
movsb
adc
lods
fcmove
xor
inc
mov
mov
fdivr
insb
and
lret
or
mov
cmp
movsl
add
aad
sarb
add
inc
sub
jae
sub
or
sbbb
adc
pop
add
lret
test
popf
cmp
into
iret
mov
mov
mov
gs
jae
add
jg
pop
sub
movsl
xchg
jle
mov
or
dec
rolb
sahf
in
test
imul
scas
lret
dec
xchg
fdivl
sarb
mov
inc
sbb
jle
jne
pop
hlt
fdivrp
add
rcrb
dec
push
mov
loopne
rcll
xchg
cmc
pop
sub
call
cmp
daa
xor
push
pop
jo
push
roll
pop
inc
rorb
lret
xchg
les
insl
or
jnp
rsm
mov
sahf
shlb
hlt
mov
pop
clc
push
sbb
push
ja
dec
mov
jbe
push
sub
in
xor
mov
mov
or
rcrl
jo
pop
jp
or
inc
test
out
test
aas
call
jo
sub
add
pop
shr
imul
pop
push
cs
push
ror
decl
scas
insl
repz
je
in
dec
push
and
adc
frndint
cltd
pop
and
and
jae
les
jl
add
inc
and
pop
aad
jo
in
and
cltd
jp
ljmp
test
lock
arpl
jne
jns
incb
aad
shrl
std
addb
sub
daa
shrl
xor
sub
xlat
aaa
jle
mov
push
xchg
sahf
arpl
inc
jge
mov
pusha
cmp
jae
inc
jg
sti
mov
mov
outsl
int
aas
dec
push
xchg
in
scas
adc
lahf
jge
les
cmp
sub
push
dec
xor
jecxz
std
out
push
jge
push
sbb
lock
sahf
jb
and
out
push
int
repz
mov
outsl
xchg
inc
xchg
push
mov
popa
fcompl
push
test
lcall
mov
and
mov
test
test
and
xchg
fiaddl
mov
sub
out
xchg
in
movsl
dec
ret
lret
and
lahf
mov
inc
jmp
or
stc
outsl
sahf
jno
jecxz
mov
lods
dec
xchg
subb
insl
inc
xlat
xchg
jb
test
inc
add
lods
rcr
test
jns
insb
ds
xor
inc
lods
rclb
in
inc
sub
mov
inc
xorb
xchg
mov
dec
cmp
sub
cmp
rorl
xor
inc
sub
push
popa
cmc
mov
push
mov
xor
add
mov
arpl
cld
idiv
addr16
stos
fs
cli
ds
stos
popa
xchg
std
xchg
ja
fidivs
sub
push
pop
iret
dec
pop
inc
movsb
mov
repz
push
int3
loope
adc
js
sbb
mov
andb
lea
cmpsb
in
mov
jp
ljmp
sti
lods
out
jg
push
mov
arpl
testl
notl
add
push
cmpsb
and
fildll
rolb
pushl
lcall
in
movsb
scas
hlt
mov
ror
data16
push
and
xchg
jne
pop
aaa
outsl
add
mov
push
or
xor
mov
test
adc
movsl
ret
inc
push
lret
and
xchg
sbbl
call
jo
sbb
xchg
or
mov
fucomp
int
into
and
dec
xor
sub
and
stos
or
pushf
push
pop
in
test
js
dec
jno
icebp
movsb
push
mov
cltd
and
xchg
pop
push
test
cwtl
sti
fwait
dec
lcall
sub
mov
pop
xor
mov
imul
repz
jle
cmp
call
popa
pop
ds
stos
jmp
arpl
and
stos
loope
jmp
rol
and
xchg
xchg
or
pop
xchg
in
jle
xchg
aam
jmp
scas
jl
gs
mov
leave
xchg
jecxz
ret
jp
xchg
roll
jp
adc
add
xchg
inc
cmp
lock
dec
or
pop
lea
jbe
pop
insb
xor
test
test
insl
and
and
sub
rorl
cltd
shll
push
pop
jae
insb
xchg
xlat
adc
pusha
addr16
bound
stos
jbe
jno
jg
inc
dec
and
mov
dec
mov
inc
jns
popa
add
xor
andb
xchg
jge
pop
fistpll
rolb
int
and
add
pusha
mov
mov
shlb
mov
xchg
dec
and
sub
insl
cmp
pop
stc
xchg
repz
mov
out
or
jbe
test
adc
fninit
mov
push
add
xlat
pop
adc
dec
push
adc
fcoms
aas
ja
push
pop
in
sbb
dec
cli
mov
mov
repz
sbbb
aas
sbb
jg
sub
dec
mov
push
movsl
dec
pop
rorb
test
dec
xlat
lds
cmpsb
pop
cs
inc
xor
inc
cmp
xchg
repnz
lea
into
daa
xor
test
arpl
and
or
push
movsl
cld
cmp
mov
inc
stos
xor
in
dec
pop
enter
push
std
mov
jnp
inc
xchg
xchg
frstor
mov
mov
adc
test
cmp
mov
mov
push
xorl
pop
std
adc
inc
inc
adc
mov
xchg
xor
test
das
push
jp
outsl
sub
aam
inc
pop
ret
stos
mov
cs
and
scas
repz
nop
andb
lahf
mov
xor
jg
mov
jle
push
jae
jecxz
lods
in
mov
pop
repnz
bnd
push
mov
stos
xchg
pop
add
nop
mov
fidivl
add
sti
push
ja
sbb
sahf
xor
icebp
mov
clc
xchg
aam
outsb
inc
dec
mov
xchg
addl
insb
in
nop
fmulp
cmp
lods
sahf
xchg
ret
iret
xchg
sbb
pusha
inc
das
popf
cmpsb
sbb
jo
stc
scas
pusha
xor
mov
cmpsl
jg,pt
sub
push
lret
cmpsl
xchg
int3
and
mov
cmp
test
addb
xchg
lods
xchg
lea
mov
pusha
pusha
adc
sub
xor
mov
jecxz
cmpsl
cli
decl
lret
pop
sti
andl
fucomip
xchg
hlt
aad
push
cltd
pop
cltd
mov
cmp
popf
or
xchg
add
insb
lods
mov
out
mov
cmpsl
pop
icebp
jae
jmp
leave
add
fs
ret
jge
pop
inc
xlat
dec
popf
push
jbe
xchg
ret
dec
mov
lret
jp
cld
xchg
jge
add
cmp
mov
out
ljmp
mov
sub
add
pop
loop
dec
mov
lea
mov
inc
cmp
fisubrs
andl
cmp
mov
mov
cmp
dec
jp
stos
xchg
push
andl
inc
or
jp
or
adc
and
sahf
jae
stc
mov
adc
out
test
jae
div
or
jecxz
out
rcll
aas
jne
into
add
int
adc
stos
cmp
inc
push
sahf
jo
arpl
sbb
xor
sub
pop
stc
mov
mov
out
mov
lods
mov
inc
ret
mov
shlb
inc
cltd
int
sbb
inc
imul
andl
cltd
adc
aaa
mov
and
enter
aad
jge
loop
into
xchg
pop
xchg
sub
add
mov
cmp
and
int
lret
mov
psraw
ret
sti
flds
lods
std
js
loopne
inc
mov
movsb
or
cmp
int3
ds
aaa
inc
add
fcomip
mov
adc
test
shlb
cmc
sbb
insl
mov
add
test
and
sub
dec
insb
les
jbe
pop
push
aam
ret
mov
cltd
out
mov
mov
gs
das
add
jno
lea
mov
mov
mov
lret
push
xlat
int3
lock
imul
mov
bound
sbbb
xor
mov
in
addr16
idivb
in
mov
jl
lea
push
daa
in
pop
pop
ljmp
std
cwtl
std
mov
adc
sub
inc
adc
mov
outsl
lcall
sti
jae
mov
xchg
push
daa
or
jno
je
mov
inc
mov
pop
test
xor
loopne
cwtl
and
cmp
std
ret
sbb
xchg
stos
mov
je
sub
jmp
repnz
jp
inc
out
or
aad
nop
or
rol
loopne
arpl
iret
es
push
jo
pop
sbbb
or
inc
imul
cmp
pop
cld
outsl
test
nop
out
xchg
jl
stos
cmp
jge
inc
add
lods
or
mov
fnstenv
adc
jle
ret
push
jno
aaa
pop
pop
outsb
mov
cs
inc
ret
sbb
aas
push
in
xchg
push
test
dec
lret
lahf
outsb
cmpsl
shr
test
adc
aas
mov
lret
data16
mov
lcall
lahf
cmp
or
xchg
test
movsw
fsubrl
out
and
jno
and
popf
xchg
in
jle
out
jmp
dec
sbb
lock
inc
push
cld
mov
push
pop
jg
cltd
mov
jle
aam
inc
inc
cwtl
ffree
rorl
sub
dec
xchg
jns
iret
dec
dec
pop
pop
test
or
sbb
adc
arpl
xchg
pop
sbb
leave
push
mov
test
fists
daa
mov
inc
lods
and
jne
imul
inc
xchg
mov
out
jnp
pushf
mov
sbb
dec
jb
or
cmpsb
cmp
std
aad
dec
adc
negb
mov
or
test
jb
push
inc
xor
sub
cmp
add
push
jbe
ret
and
or
inc
pop
jge
mov
lahf
and
ljmp
xor
inc
lock
xor
inc
pop
pop
nop
dec
insl
out
mov
inc
clc
sub
dec
pop
push
loopne
push
movsl
mov
ficoms
int
adc
aam
in
sub
test
orb
cmp
cmp
repnz
cld
sbb
stc
mov
hlt
jnp
cmp
push
push
andl
mov
je
scas
mov
xchg
out
scas
stos
in
inc
dec
cmpsb
adcl
jnp
mov
movsl
and
cmp
and
aaa
or
hlt
ss
cwtl
pop
lods
aas
mov
xchg
inc
mov
adcl
sahf
movsb
testl
repz
aam
sub
cmp
xlat
and
notb
fcoms
sbb
sbb
pop
scas
ja
lods
pop
and
in
jns
push
scas
adc
cmpsl
inc
inc
adc
mov
mov
test
roll
ljmp
in
inc
mov
push
notl
mov
gs
je
aam
cmp
in
and
xor
inc
arpl
sbb
ret
add
inc
push
ds
inc
xor
aad
mov
mull
hlt
test
pop
add
mov
call
or
pusha
jg
loopne
lock
lret
or
dec
cmp
imull
popa
adc
inc
jbe
icebp
movsb
pop
adc
out
mov
add
pop
sbb
inc
jge
xchg
lret
and
and
dec
sti
dec
inc
pop
fsubrl
sub
push
add
mov
stc
pushf
in
idivl
rcll
xchg
and
add
rcrl
adc
pop
xlat
sbb
mov
lods
xchg
enter
sub
jo
and
pmaddwd
cli
enter
in
pusha
icebp
scas
xchg
jecxz
mov
test
aad
or
icebp
es
mov
push
inc
cwtl
stc
scas
lret
mov
xchg
movsl
lret
aam
jno
iret
cli
repz
push
jnp
inc
pop
sub
mov
mov
or
pop
cmpsb
inc
lret
aad
dec
int
mov
test
push
add
pop
hlt
idivl
lahf
jmp
mov
dec
fisubrl
mov
dec
mov
in
mov
mov
arpl
ret
and
fisttpl
cmp
sub
xchg
inc
jle
push
dec
pop
sarb
sub
lods
push
imul
mov
jno
lahf
into
rclb
adc
test
cmpsl
push
das
js
lret
pop
push
sub
and
shr
aaa
aad
jbe
dec
mov
stos
push
mov
mov
push
mov
lods
sbb
add
mov
or
dec
rcl
inc
jecxz
mov
mov
dec
inc
sbb
push
xchg
mov
sbb
data16
pop
mov
inc
xchg
mov
lods
ljmp
ja
fwait
decb
pop
jecxz
rolb
jno
cmpl
mov
adc
jno
fsubl
movsl
sub
fldt
pop
push
sti
sub
bound
sub
xor
lods
jb
lock
cltd
mov
out
ficomps
adc
pop
fidivrs
sub
mov
jne
add
cs
xor
call
ret
dec
divl
in
xchg
sub
sub
ljmp
pop
xor
lock
jmp
fldenv
out
mov
mov
out
dec
sub
fldl
xchg
lahf
mov
or
and
sbb
dec
shrb
in
nop
mov
out
add
pushl
sbb
in
add
mov
nopl
rcrl
sahf
mov
pop
pop
jg
enter
cmp
mov
out
inc
cli
mov
mov
jbe
out
and
orb
mov
iret
adc
jle
adc
icebp
aas
je
mov
adc
mov
pop
into
fs
loop
inc
push
xchg
imul
daa
repnz
pushf
inc
cltd
sub
insl
lods
test
add
mov
xchg
cmpsl
or
fdivrs
test
lods
mov
jns
jecxz
dec
out
pop
cmpsb
dec
out
stos
sub
bound
mov
mov
jecxz
data16
mov
stc
push
std
cmp
adc
pusha
aaa
inc
cmc
sub
push
pushl
or
mov
mov
cmp
hlt
pop
cld
push
lret
dec
les
mov
mov
notl
mov
xchg
cmp
mov
cmpsl
aaa
fcmovne
lret
aam
cltd
or
and
jb
push
jb
pop
jnp
orb
push
test
jne
adc
inc
stos
push
iret
adc
xor
adc
add
nop
cwtl
add
push
ss
ja
idivb
xchg
xor
sbb
repnz
inc
xlat
adc
stos
mov
xor
popa
movl
mov
sub
jae
ss
sbb
or
nop
or
dec
lea
push
fprem1
jle
mov
scas
pushf
pushf
fldcw
cli
in
adc
mov
mov
fiaddl
js
xchg
in
cltd
or
xchg
fisubrs
add
sub
pop
fdivrs
jp
cmp
fmul
mov
pop
insb
mov
mov
and
daa
scas
sahf
xchg
loop
or
mov
pop
and
das
out
sti
lds
inc
aad
imul
add
fdivrs
mov
clc
cmc
call
pop
adc
cli
arpl
in
inc
mov
xchg
add
in
add
hlt
repz
sbb
sbb
sub
push
in
xor
push
repz
pop
and
std
adc
neg
xchg
jmp
or
pop
test
int3
lret
cwtl
adc
leave
loop
cli
mov
jno
int
sbb
and
pop
or
dec
movsl
sub
push
jle
pop
test
xchg
cmpsl
add
mov
ljmp
sub
fstpt
jmp
in
push
lods
jno
lock
decl
inc
ss
jmp
mov
mov
aad
jmp
sbb
stos
fbld
fldcw
repnz
mov
jecxz
mov
add
scas
dec
inc
ficomps
popl
pop
lret
or
fdivl
sbb
xor
pushf
adcl
jl
pop
cmp
pop
mov
loopne
mov
pop
add
xor
pop
xorl
jle
insb
pop
dec
push
test
adc
pusha
int3
in
js
stos
fildll
fcomps
add
movsb
or
lods
je
inc
ret
sbb
push
jae
jmp
jbe
xor
daa
xchg
xchg
in
mov
xchg
fcmovu
bound
scas
rcll
cld
sub
fwait
or
mov
cwtl
rolb
lea
mov
pop
shrl
adc
dec
scas
cmp
push
mov
leave
mov
not
imul
and
sbb
pop
xor
aad
cli
cmpsl
movsb
jbe
repnz
enter
enter
pusha
inc
scas
pop
jne
pop
repnz
stos
call
push
add
sbb
sbb
mov
dec
out
cld
arpl
out
loope
pop
fldt
adc
and
jo
and
add
adc
cmpsl
cltd
cmp
std
jecxz
sbb
xchg
sbb
pop
mov
nop
icebp
push
pop
test
xchg
lcall
mov
xor
mov
xor
cltd
arpl
aaa
adc
loopne
pop
mov
or
xchg
sbb
icebp
xchg
push
ret
outsb
hlt
pop
int
push
xor
ret
ret
js
dec
add
pop
push
adc
neg
push
shll
aaa
scas
imull
es
push
cwtl
xor
add
mov
dec
inc
jb
sbb
lcall
and
mov
sub
jae
outsl
push
sub
loop
lahf
dec
jg
and
mov
push
push
mov
mov
ss
in
and
jne
popf
mov
aad
in
fsubrs
nop
jle
inc
sbb
fcomps
mov
out
popa
pop
loopne
jb
or
mov
sarl
jle
scas
lea
cmp
pop
adc
jge
aas
pop
adc
mov
pop
fcompl
hlt
mov
lret
repnz
repnz
int3
sti
shrb
sub
mov
loope
push
icebp
insl
cli
sub
mov
cli
addr16
add
cmpsl
nop
or
xchg
jmp
in
jle
insl
and
jae
cmp
clc
cmp
mov
test
mov
sub
push
inc
mov
leave
adc
mov
test
insb
mov
mov
je
int3
testl
jge
lds
mov
ljmp
roll
xchg
gs
lcall
hlt
mov
out
outsb
test
movsl
ss
mov
inc
lahf
nop
mov
sahf
xchg
sbb
mov
insl
xor
scas
mov
addb
daa
fsubs
push
push
scas
cmp
ds
repnz
mov
aam
ss
lds
les
ljmp
cld
cmp
std
cs
out
pop
int
push
adc
shrl
scas
dec
popf
adc
xorb
push
push
jp
outsl
cmp
xlat
scas
movsl
xor
mov
inc
cwtl
cmpsl
cltd
or
sub
jmp
pop
pop
imul
in
inc
inc
cmpsb
sbb
push
adc
icebp
mov
dec
fldcw
mov
call
aas
adc
or
mov
dec
xor
or
gs
adc
jnp
mov
pop
jnp
mov
fbstp
scas
out
int
fidivl
jmp
inc
mov
outsb
jb
sbb
pop
loop,pn
sbb
scas
fsubs
addr16
mov
movsb
mov
mov
mov
negb
add
loopne
cmp
mov
sbb
jp
addr16
loope
clc
mov
mov
das
shlb
mov
mov
je
and
mov
push
mov
out
push
dec
in
mov
aad
cmp
outsl
mov
arpl
xorb
shrb
mov
pop
dec
iret
into
sub
sub
sahf
insl
les
jge
and
dec
fsubrp
xchg
add
pop
inc
push
jge
mov
das
das
sbb
sahf
and
xchg
aam
push
dec
cld
adc
outsl
and
push
mov
or
scas
xchg
add
aaa
and
std
or
test
jae
imull
mov
rcrb
cltd
dec
dec
int
and
inc
into
mov
or
popf
enter
dec
jmp
mov
ret
nop
xor
pop
xor
loopne
cmp
cmpl
or
add
xorb
push
mov
in
inc
cmovl
xor
test
sbb
push
push
cmp
loopne
rcll
cmp
or
inc
mov
cmp
jae
mov
aad
addr16
mov
inc
push
or
xor
push
or
das
jno
iret
or
test
andl
sarl
or
mov
sbb
push
push
iret
cmp
or
and
or
scas
mov
std
test
mov
xlat
jl
sub
pop
jbe
nop
rcrl
es
mov
cmpsb
testl
mov
sbb
and
mov
jge
dec
movsl
jae
jae
imul
test
xchg
jg
int
loop
nop
lahf
scas
lret
push
fs
mov
lds
pop
mov
test
insl
rcll
aas
loopne
lock
push
lea
jecxz
sti
jmp
push
cs
int
mov
adcb
cmpl
ds
gs
xor
xchg
das
adc
lcall
scas
cli
sub
test
mov
fwait
mov
mov
push
pushf
xor
dec
cmp
lahf
push
mov
xor
xchg
adc
sti
sub
ljmp
xchg
lods
mov
movsl
mulb
mov
inc
cmpsl
lods
lea
adc
shlb
icebp
dec
jle
push
mov
push
inc
push
outsb
xchg
ret
push
and
xchg
movsb
or
xchg
inc
popa
adc
aam
sahf
pop
ret
and
cmp
nop
loope
xchg
enter
lahf
imul
adc
insl
ja
jge
cwtl
sub
data16
popa
int
dec
jne
sbb
mov
inc
inc
fsubrs
mov
cmc
sbb
repnz
call
push
lock
or
aas
insb
sbb
add
hlt
lock
push
lahf
enter
inc
test
leave
fwait
mov
shll
jl
test
iret
jge
mov
add
fs
jle
test
and
jge
inc
setbe
mov
dec
movsl
push
loopne
pop
pop
adc
out
xchg
daa
sarl
dec
push
mov
xchg
sahf
xchg
jg
lods
es
repz
ret
movsb
add
pop
orl
dec
adc
push
sbb
dec
cld
leave
push
addl
add
out
ljmp
inc
mov
subl
mov
cmp
sbb
mov
inc
inc
rolb
xchg
dec
cs
dec
add
inc
push
lahf
inc
cmpsl
rolb
stc
rcrl
sub
or
hlt
dec
add
mov
popf
test
leave
xor
loope
cs
loope
add
fcmovnu
addr16
add
ret
sahf
out
js
xor
and
lock
mov
lods
stos
adc
sbb
inc
sub
xchg
hlt
add
insl
pop
and
jp
shlb
fs
pop
or
inc
sub
int
lock
mov
pop
xchg
cltd
dec
xchg
lret
scas
xchg
dec
imul
jp
orl
xor
adc
test
or
loope
stos
push
mov
outsl
jmp
mov
cmc
ror
mov
cli
add
popa
fmul
cld
in
jl
fcmovnb
xor
pop
adc
inc
test
and
pop
jp
mov
mov
dec
jo
outsl
lret
aam
out
addr16
fidivs
mov
cs
cwtl
dec
mov
jecxz
jno
or
add
cmp
sub
pusha
sbbb
icebp
or
or
mov
enter
or
pusha
cmp
lock
xor
and
insl
adcl
das
adc
mov
push
lods
push
xor
cld
ret
mov
jae
sbb
adc
jbe
jo
test
or
fistpll
adc
push
int3
inc
jmp
push
pop
leave
pop
stc
stos
mov
jp
sub
pop
sub
fucomp
lcall
shlb
insb
jg
fwait
xchg
es
cld
cmp
add
aad
jo
inc
popa
ret
jno
push
lahf
fdivrl
or
icebp
lea
dec
mov
adc
incb
add
xor
es
jmp
push
sbb
add
out
push
ljmp
shlb
cmpsb
xchg
in
jbe
inc
sub
subl
in
mov
cltd
push
mov
das
aaa
adc
jo
and
inc
das
xor
push
movl
out
mov
mov
xchg
pop
and
inc
or
or
mov
iret
repnz
xchg
fisttps
cltd
and
lock
jmp
int
push
dec
fnstsw
cmc
inc
icebp
mov
int3
jg
jmp
add
sbb
test
or
dec
inc
fidivs
pop
push
or
jle
dec
gs
in
hlt
dec
es
es
nop
and
cmp
ljmp
hlt
jge
inc
jmp
push
jb
adc
adc
or
lods
iret
mov
xor
adc
fimuls
xchg
mov
jl
pop
arpl
pop
nop
jl
sbb
jmp
sahf
jle
test
fdivrs
fistpll
rolb
pusha
mov
mov
push
jno
adc
cs
or
enter
jo
sbb
out
inc
addr16
or
lds
imull
cmp
dec
add
in
mov
cmp
pop
ret
arpl
xlat
mov
fisubl
cld
sbb
jmp
xchg
data16
imul
mov
mov
test
out
cli
cmp
lods
insb
mov
mov
int3
or
outsb
popa
jmp
jae
sbb
stc
enter
mov
jl
es
loope
out
jne
and
inc
xchg
nop
cwtl
test
aas
cli
and
lret
push
scas
inc
or
mov
ss
test
in
add
lret
cmpsb
aas
outsb
stc
lods
pop
mov
xor
mov
rcll
stos
in
insl
test
fwait
les
filds
pop
adc
push
inc
dec
arpl
and
sub
mov
or
loopne
and
movsl
xchg
and
cli
sbb
dec
add
insb
mov
jl
out
hlt
mov
mov
insb
sub
ljmp
movsl
sbbb
repnz
std
sbb
fidivl
loope
adc
leave
xchg
sub
push
call
and
mov
das
push
cld
gs
add
mov
sub
dec
or
xchg
jmp
cmp
mov
and
and
jg
xor
popl
jae
fadds
adc
movsl
clc
shlb
adc
mov
repnz
mov
dec
leave
cwtl
in
iret
and
stos
jp
or
mov
scas
sbb
pop
in
xchg
movsb
out
in
add
mov
dec
in
ret
sub
mov
icebp
mulb
push
and
psubw
fwait
cmp
shll
sbb
adc
cmp
adcl
mov
pop
fcmovb
mov
inc
mov
lods
mov
movsl
xor
mov
les
push
push
insb
lds
mov
mov
inc
iret
sbb
jmp
adc
leave
jns
ja
mov
pop
fadd
inc
aaa
dec
pop
dec
mov
ret
repnz
das
fistpll
adc
pop
mov
sub
mov
adc
pop
pop
xor
mov
or
pop
push
fwait
out
fmull
insb
or
xorb
mov
xor
dec
dec
hlt
sub
jnp
pop
aad
sbb
pop
enter
movsb
adc
addr16
push
push
push
push
call
mov
or
leave
outsl
lods
lds
lods
mov
push
lahf
out
xchg
inc
or
adc
orl
mov
in
sbb
out
or
int3
fidivs
fimuls
stos
clc
enter
inc
mov
xchg
push
push
cltd
in
pop
sub
test
les
sti
push
or
mov
or
shrb
arpl
adc
sbb
or
add
cld
mov
xchg
sbb
pop
aad
in
cltd
sbb
jmp
mov
jecxz
aas
pop
jb
mov
scas
dec
pop
sub
cmc
ss
jp
fcmovnbe
in
fnstsw
xor
push
xor
lock
nop
lds
ljmp
mov
loope
push
in
dec
lea
nop
movsb
rclb
subb
movsb
or
sbb
hlt
aas
xchg
lahf
stos
mov
jo
xchg
sub
sbb
enter
mov
or
icebp
or
jo
out
roll
cmp
jns
loop
sbb
mov
or
mov
pop
mov
push
sub
cmpsb
xor
cwtl
int3
sahf
xor
mov
mov
out
rcl
xchg
mov
inc
add
in
xor
jecxz
and
or
pop
inc
cmpsl
cwtl
mov
push
aas
jnp
mov
jg
in
sub
inc
push
cltd
dec
ror
adc
sbb
sub
call
rclb
push
fisubrl
jbe
pop
jnp
pcmpgtb
stc
add
sub
push
mov
sti
sub
mov
dec
push
sbb
inc
mov
fsubs
adc
out
dec
sti
test
imul
mov
mov
or
mov
or
jp
push
pop
lock
xchg
adc
cmpsl
cwtl
push
xor
int
xor
cwtl
or
xor
iret
js
stos
jne
push
pop
jno
jle
lcall
shlb
jg
fistpl
icebp
sbb
and
pushf
repnz
mov
xchg
mov
nop
jmp
adc
jo
jmp
dec
sahf
pop
out
sub
into
pop
inc
jecxz
les
scas
mov
or
jno
and
dec
leave
adc
repz
inc
stos
inc
lock
mov
mov
xchg
push
xchg
adc
call
xchg
push
ja
shr
popa
mov
sti
adc
dec
mov
insb
insb
xchg
push
pop
jl
adc
or
jg
jnp
loopne
jmp
or
cmp
fidivs
jno
mov
sti
gs
cmpsl
stos
lret
and
push
mov
fldt
dec
adc
fistpll
and
out
rcrb
push
adc
xchg
xchg
inc
mov
xchg
je
xchg
dec
and
adc
out
or
in
dec
mov
orl
sub
lret
int
ds
or
sbb
aad
push
push
ror
push
adc
and
and
pop
insb
addl
mov
cmpsl
xchg
cmpsb
xchg
hlt
outsb
cmpsl
adc
sbb
dec
cmpsb
inc
dec
jmp
in
mov
fcmovnb
inc
adc
ficoms
out
push
push
pop
adc
sub
sbb
and
idivb
mov
ljmp
movsl
ret
iret
xor
int
cmp
out
ja
iret
addr16
adc
sub
fnstsw
jg
jge
or
sub
fwait
sbb
fcmovbe
mov
cld
xchg
xor
sbb
inc
dec
push
pop
jns
ds
cmp
xor
mov
loopne
add
xor
dec
ss
xor
mov
jne
pop
aam
test
mov
mov
test
push
mov
or
imul
adc
cld
popa
fucomp
pop
stc
testl
add
inc
adc
out
mov
mov
lds
rcrl
out
popa
mov
sbb
lret
iret
shrb
cmp
pop
sub
fidivrl
ret
mov
out
mov
cmc
push
cmpsb
js
mov
and
add
rol
loop
sub
dec
in
or
or
mov
sub
add
mov
sbb
mov
mov
push
out
sbb
aam
mov
lock
sbb
out
jp
int3
cmp
push
push
xor
pop
push
mov
insb
call
enter
or
fwait
push
fs
xchg
es
jb
push
mov
bound
pop
jo
dec
fdivl
jnp
jmp
js
push
popf
imul
dec
test
ja
pop
lods
or
nop
stc
lahf
add
push
pop
xchg
push
test
mov
mov
sbb
sbb
jge
and
sbb
loope
negl
std
lock
adc
cmpsb
dec
xchg
jmp
lds
sbb
cmp
sub
pop
push
mov
xchg
repnz
out
mov
fnstenv
lock
les
push
and
push
pop
insl
jne
pop
mov
test
cmp
jbe
cmc
insb
mov
lea
ja
pop
or
ret
test
test
pop
imul
mov
jns
push
xchg
jno
rcrl
movsb
test
out
pop
xor
jbe
jge
sub
ja
sub
push
dec
rcrl
fcompl
fsts
imul
and
jge
and
xchg
cmp
or
push
jl
fsubrl
add
ja
movsl
or
cld
inc
adc
push
inc
inc
sub
cmpsl
pop
sbb
iret
push
pop
xor
sub
dec
jecxz
jmp
pop
cmp
cltd
scas
fsubrl
sbb
add
xchg
cmp
rolb
addb
push
sbb
and
icebp
lahf
sahf
stc
add
add
js
dec
or
dec
je
lock
sub
int3
adc
jnp
push
sub
mov
clc
inc
movsl
pop
test
ret
cld
std
jp
and
mov
pop
and
add
dec
aam
sbb
xor
popl
xchg
shl
dec
imul
decb
enter
leave
dec
jne
outsl
pop
movsl
fistpl
in
dec
sbb
sbb
popf
aaa
jge
mov
or
and
inc
jecxz
pop
sub
out
adc
roll
push
mov
repz
sub
icebp
xchg
notl
fld
dec
ja
or
lods
rcrl
jmp
mov
xchg
mov
stc
inc
sbb
dec
xor
dec
cld
outsb
adc
pop
imul
pop
ret
or
mov
dec
cmp
rorb
cmp
jmp
shll
xchg
xchg
and
inc
pusha
gs
imul
pop
scas
pop
inc
in
dec
dec
sahf
idiv
lods
xlat
pop
inc
popa
jge
lds
aad
ss
adc
sub
ficoml
mov
icebp
push
mov
cmc
jp
pop
insb
icebp
cmpb
mov
pop
xchg
addr16
iret
out
shrl
xchg
inc
fdivr
leave
mov
aas
aaa
pop
jno
scas
mov
mov
push
sbb
push
mov
mov
bnd
mov
push
xor
inc
cld
fldenv
clc
std
iret
lock
ret
lea
popf
imul
mov
push
out
adc
popf
jbe
sub
adcb
js
mov
and
mov
enter
inc
fwait
and
gs
sbb
xor
scas
inc
add
insl
shl
test
lods
xchg
jns
repnz
insb
jns
mov
and
push
and
stos
pop
imul
loopne
jo
sub
mov
or
iret
js
outsb
mov
into
or
scas
aas
dec
frstor
pushf
xchg
fcmovbe
in
inc
sbb
mov
mov
sub
mov
mov
inc
iret
sub
jl
imul
add
push
sbb
rcrb
xchg
fistps
or
sub
inc
mov
sub
xor
xchg
and
insb
add
mov
jo
cmp
lret
cmpsb
aad
rcr
push
pop
in
or
jecxz
sub
push
jno
mov
movsl
test
adc
and
fnstenv
fwait
inc
les
mov
insb
fnstsw
call
xchg
mov
pop
inc
int
xchg
daa
xchg
push
xor
mov
mov
mov
jo
movsl
cld
jnp
lea
loopne,pt
fisttps
mov
mov
cmpsl
pop
cmp
mov
add
data16
lret
aas
leave
ljmp
cmp
push
push
and
cmp
xorl
ret
mov
jge
pop
jecxz
repnz
sbb
jle
sub
jno
and
xor
ss
pop
ds
aam
lods
add
mov
sti
and
adc
mov
leave
add
pushl
je
jo
xchg
mov
push
and
testl
mov
stc
repnz
jno
mov
adc
aad
adc
cld
xor
lods
adc
mov
mov
sub
mov
daa
pop
scas
out
lret
push
lea
dec
adc
and
fmull
pop
dec
jae
jle
imul
out
push
jbe
mov
or
dec
or
movsl
ja
push
negl
adc
adc
loope
or
sub
mov
mov
movsb
ret
popl
mov
and
pop
out
mov
push
sub
inc
xor
cli
push
jne
xchg
mov
add
aad
scas
pop
loopne
mull
cmpsb
in
mov
mov
outsl
inc
or
pop
mov
movl
pop
or
push
clc
hlt
jp
lret
push
into
push
scas
ss
mov
jmp
icebp
cli
ja
mov
pusha
sub
mov
outsl
pushf
and
jg
in
sahf
ss
ficoml
inc
sbb
jnp
loope
cmpsb
xor
inc
mov
cmc
xchg
imul
adc
cmp
pop
iret
int3
dec
flds
stos
cmpsl
hlt
xchg
cmp
fistpl
mov
adc
mov
out
pop
out
jo
dec
call
dec
inc
sbb
adc
add
loopne
into
lcall
inc
mov
add
inc
aad
loopne
in
sbb
nop
push
push
mov
push
nop
repnz
fistl
push
dec
fnstsw
rolb
xchg
jns
fnstsw
mov
icebp
fisttpl
add
je
in
aad
inc
das
enter
mov
cmp
mov
lahf
movsl
inc
dec
mov
jno
push
call
enter
add
inc
xor
sub
scas
add
ror
push
idivb
out
enter
lcall
pusha
ret
pusha
fcoms
sub
in
mov
push
lret
mov
mov
adc
maskmovq
int
mov
lahf
adc
cmp
dec
rorb
or
push
or
cwtl
xor
mov
mov
xchg
sub
shlb
adc
mov
imul
mov
lods
fistps
and
push
or
mov
xchg
iret
ret
sahf
repnz
jb
dec
repz
xchg
or
dec
js
inc
add
shrb
push
sub
xorb
and
out
and
mov
sti
int3
mov
jp
push
cmp
sahf
mov
movd
or
ljmp
stos
in
mov
into
cmpb
les
xchg
mov
or
jb
testb
stos
lret
push
inc
inc
mov
fs
jp
fst
enter
push
add
lahf
jmp
aam
pop
pop
int
push
out
mov
lahf
push
out
ficoml
inc
sbbb
jmp
pusha
je
xchg
fldenv
sbb
jnp
mov
and
imul
xchg
xor
cmp
ds
in
pop
stc
lret
mov
test
dec
pop
mov
hlt
or
repz
repnz
mov
pushl
xor
pop
mov
enter
push
add
and
xchg
cmp
adc
ficoms
pop
cmp
xchg
mov
jo
adc
mov
jl
jle
in
push
sub
xchg
sbb
jae
and
insb
clc
cmp
inc
dec
mull
pop
pop
xchg
adc
ret
shlb
shl
mov
push
std
push
xchg
iret
ficoml
shrb
rcrl
dec
outsl
out
cli
mov
test
mov
test
push
mov
mov
ljmp
pop
sahf
dec
xchg
fsubl
mov
bnd
popa
inc
cmpsb
aas
subl
or
mov
int
xor
or
cmp
jne
xchg
push
mov
lret
int
pop
mov
dec
mov
mov
call
cwtl
popa
mov
outsl
aam
cmp
jo
pop
dec
cmpl
xor
xchg
std
or
rolb
fwait
aas
nop
jmp
pop
add
push
cmp
cs
mov
ret
mov
add
stos
aaa
aas
por
xchg
cmpxchg8b
in
out
mov
ja
addl
mov
bound
xchg
mov
pop
stos
testl
and
cmpsl
sbb
das
sbb
xchg
sbb
test
cmp
mov
jnp
insl
xchg
test
pop
scas
repz
or
jnp
das
sub
mov
into
mov
dec
ret
mov
mov
rcrb
add
ret
xchg
stos
add
mov
orl
sub
shrl
cmp
lret
xor
popf
sbb
fiadds
test
pop
jg
mov
pop
dec
mov
xchg
and
loope
inc
jmp
mov
lret
out
cli
addr16
std
dec
jmp
or
push
xchg
int3
shrb
jns
pop
push
cld
and
jae
mov
push
gs
fbstp
fmull
rcr
sub
cltd
sbb
clc
sbb
pop
push
les
aas
add
adc
or
test
movsb
lret
pop
or
pop
add
sub
fidivrs
rcll
sub
mov
jne
inc
loop
sub
xchg
push
call
in
jecxz
insl
pop
movb
and
sbb
push
inc
mov
lods
add
adc
add
pop
xor
lods
in
into
cmp
pop
or
es
pop
repz
lock
push
lock
fwait
sub
mov
and
int3
mov
loopne
dec
arpl
push
xchg
mov
xor
daa
mov
movsl
rcll
dec
and
add
into
add
lcall
xor
imul
movsl
push
or
cmp
pop
iret
cld
inc
pusha
inc
lret
fldt
scas
pop
les
jl
cmp
movsl
ja
ds
cmp
dec
lcall
jb
xchg
fisubl
sub
mov
lods
cmp
test
movsb
sub
mov
mov
loopne
mov
adc
or
add
imul
repnz
sbb
mov
outsl
mov
mov
sti
aam
repz
fisubrl
ss
jge
cmp
dec
test
push
mov
mov
ja
sub
mov
jmp
xchg
pusha
mull
and
sub
ret
flds
cltd
sub
add
fdivrs
ja
xchg
out
int3
fiadds
push
sbb
imul
in
movsb
mov
inc
xchg
icebp
sub
lods
adc
mov
dec
mov
mov
cmp
or
pop
mov
iret
cmc
jecxz
jge
sbbl
clc
push
xorl
and
nop
scas
mov
ss
rcll
pop
dec
popf
pop
imul
pop
movsl
pop
mov
lret
fdivr
stos
dec
nop
fildl
push
xchg
dec
sub
mov
inc
pop
add
repnz
dec
out
jl
xor
cmp
ds
lock
insb
mov
pusha
adc
punpcklwd
out
adc
adc
pop
jge
cmp
fadd
popa
jo
inc
shlb
mov
imul
scas
lock
fwait
loopne
add
insb
bound
loope
sbb
mov
cmc
pop
jb
jp
js
and
dec
shll
push
les
or
cwtl
sub
jnp
and
cltd
jecxz
jne
xchg
inc
lret
sub
rclb
pop
cmp
data16
jge
pop
mov
out
jp
sub
and
pop
imul
jge
dec
add
and
addr16
jo
or
mov
adc
fs
mov
sbb
jne
repz
mov
andb
movsl
loop
or
stc
sub
jae
pop
mov
mov
and
cmpsl
jmp
mov
stos
outsl
pop
mov
jecxz
cmp
sbb
mov
fwait
aam
loop
sub
mov
mov
addr16
lahf
ljmp
mov
jo
std
mov
push
shll
xchg
int
pop
inc
cld
dec
add
jae
jnp
xor
add
nop
jge
add
out
and
jecxz
add
fs
mov
es
jmp
pop
rorl
jbe
mov
imul
sbb
stos
rorb
mov
pop
shll
sbb
int3
sbb
sbb
xchg
push
adc
bnd
mov
dec
test
sub
mov
mov
mov
adc
iret
jne
je
sub
fiaddl
test
mov
insl
mov
jae
mov
bound
movsl
add
sbb
cmp
mov
ja
aam
inc
and
lret
pop
dec
std
and
add
xlat
or
cmpsb
sbb
imul
push
jle
mov
pop
push
mov
jns
sbb
in
leave
inc
dec
mov
push
arpl
pop
mov
mov
int3
and
sbb
imul
es
lods
pop
mov
out
push
cld
inc
mov
popf
out
and
cmp
repnz
in
pop
shrl
packsswb
mov
enter
pop
push
jg
mov
add
adc
mov
xchg
repz
adc
add
adc
or
dec
dec
in
cwtl
cmp
loop
jae
mov
cmpsb
sub
jg
jp
add
shr
gs
test
daa
xor
xchg
or
mov
addr16
shrl
jnp
mov
lods
sbb
clc
lods
sbb
push
lods
cltd
lahf
popf
into
dec
fwait
xor
pop
fisttps
dec
fiadds
mov
mov
and
push
and
push
xchg
call
outsl
xor
sub
pusha
inc
mov
mov
pop
nop
out
nop
xchg
sbb
iretw
dec
fwait
lds
cmp
mov
inc
xchg
out
xlat
mov
sub
aaa
inc
push
testl
std
sbb
push
lds
mov
cmp
xchg
or
jg
outsl
xchg
je
sub
push
out
cmp
fisttps
mov
jnp
or
popa
insl
sti
test
push
jno
call
clc
sarb
xchg
lret
inc
fsubr
push
and
or
sbb
out
lea
repnz
js
dec
mov
push
and
and
test
pop
rolb
cmp
movsl
xlat
jb
push
add
xchg
or
scas
dec
mov
sbb
push
rolb
push
cwtl
lret
aas
jae
int3
cmpsb
scas
adc
sbb
sbb
jnp
xchg
in
sbb
add
mov
add
mov
pop
push
mov
cs
push
cmpsl
push
mov
dec
shll
mov
stos
ffree
int
inc
pop
xor
jmp
aaa
aas
lret
stos
imul
shll
imul
mov
push
leave
ss
pop
popa
push
aad
sub
je
push
sbb
pop
orb
sti
xor
mov
mov
aaa
add
cmpsl
icebp
pop
mov
std
mov
dec
out
popa
lods
movsl
lods
sbb
stos
sbb
sbb
mov
in
dec
pop
nop
pop
mov
insl
ds
adcb
or
or
and
orl
mov
inc
mov
je
add
in
jl
test
mov
fnstsw
mov
sub
cmp
sub
sti
cmp
xchg
enter
cmp
iret
daa
testl
jmp
shr
hlt
mov
mov
xchg
push
bound
jbe
fisubrs
xchg
out
sbb
sbb
insl
lret
push
or
stos
sbb
adc
loope
push
out
and
push
in
cli
ds
inc
sahf
and
ficoms
loope
push
cmp
jge
and
add
jmp
out
mov
sahf
jns
bound
pop
lock
adc
push
jbe
adc
enter
fcoml
and
mov
or
mov
dec
int3
lcall
lea
mov
jle
je
cmc
cli
cmp
dec
and
mov
sbb
adc
xor
ror
bound
mov
mov
int
jns
repz
inc
sbb
hlt
xor
mov
lret
cmc
mov
xor
sub
mov
inc
popa
mov
aas
jb
xchg
lock
and
je
sub
xor
sahf
int3
fs
cmp
add
test
lahf
lcall
push
cltd
fistl
insb
xlat
adc
push
xchg
mov
loop
stos
pop
and
lret
pop
fmulp
and
push
andl
inc
sbb
xchg
mov
call
repnz
stc
sahf
jns
std
rorl
movsl
add
xlat
adc
sahf
inc
hlt
cmpsb
pop
sti
rcrb
push
arpl
insb
dec
cli
sbb
stos
jl
lret
mov
sbb
push
rorb
ljmp
ror
repz
xor
je
sub
in
test
push
int
fmuls
add
data16
bound
pusha
clc
leave
sub
std
push
ja
cs
cmpb
cmp
lock
mov
js
adc
addr16
mov
nop
fxch
mov
mov
jno
or
mov
fs
in
ja
repz
jns
test
sub
mov
js
push
arpl
test
stos
bound
mov
out
mov
fdivl
jmp
cmpsl
jecxz
sub
lds
and
rolb
clc
mov
pop
mov
ficompl
sbb
shll
add
and
push
rcll
ss
or
pop
or
jle
cmpsl
dec
mov
hlt
negb
cltd
fs
or
xchg
push
adc
xor
xchg
mov
xchg
cmpsb
push
test
es
xchg
test
je
xchg
mov
rolb
push
mov
out
stc
push
ljmp
mov
and
sub
cmp
adcl
cmp
pop
lcall
out
rcrl
call
adc
add
stos
int
test
mov
xor
in
leave
xchg
hlt
push
enter
aam
std
fisubl
cmp
mov
les
mov
out
fiaddl
inc
hlt
imul
xchg
movsb
stos
sub
and
cltd
test
aaa
push
sbb
sub
rcrl
inc
and
lret
bound
sbb
cmp
repz
rep
pushf
ret
xor
gs
ret
or
cltd
cmpsl
adc
mov
pop
lock
dec
adc
fsub
xchg
cmp
test
nop
push
cmp
add
sarl
dec
mov
int
xor
mov
test
sub
test
xchg
popf
pop
sub
xchg
xor
jne
insb
cld
clc
iret
jnp
ss
pop
rclb
sti
pop
sbb
rcr
mov
movsl
dec
push
iret
sbbl
mov
into
das
imul
pop
fadds
and
dec
sub
fwait
push
les
andb
mov
arpl
lods
mov
mov
mov
mov
pop
adc
adc
aas
pop
adc
jge
pop
or
cwtl
jl
andl
call
insb
movsb
push
jnp
xchg
sub
in
into
and
mov
ror
cmp
jecxz
outsb
scas
std
mov
popa
insl
xor
jle
cmp
mov
xchg
je
mov
xchg
jno
shrb
mull
xchg
iret
mov
xchg
fwait
push
outsl
xor
cmp
subb
test
mov
mov
test
test
cmpsb
cmp
dec
fstcw
xchg
push
fwait
cld
call
in
push
lahf
xchg
addl
movsb
dec
iret
ret
jmp
movaps
hlt
outsb
movsb
ret
lock
inc
pop
hlt
add
add
sub
lock
xlat
shll
daa
jge
mov
into
call
xchg
dec
dec
gs
sahf
out
push
outsl
xchg
sarb
cmp
xchg
sub
sbb
shll
xchg
xlat
inc
mov
hlt
stos
sub
dec
jecxz
and
jo
aaa
insl
cmp
or
cmp
mov
dec
or
dec
les
loop
and
xchg
push
and
and
cmc
inc
pop
iret
dec
push
sbb
imul
pushf
repz
or
faddl
cmp
mov
test
pop
adc
lock
dec
dec
leave
or
int3
insl
jmp
std
andl
int
inc
xchg
test
mov
into
cmp
out
bound
mov
sarb
ds
or
sub
std
or
out
and
fidivrl
xchg
xor
icebp
notb
sub
push
mov
push
push
nop
lea
add
mov
cmpsl
push
mov
jmp
fmull
setnp
xchg
add
cltd
push
jnp
das
and
in
push
aad
jge
mov
mov
or
daa
clc
add
jmp
stos
std
iret
sub
jns
cli
mov
lock
push
xor
dec
mov
xchg
xor
cmp
aaa
or
clc
lea
dec
push
outsl
out
push
adcb
mov
dec
cmp
inc
xchg
push
scas
hlt
cmpb
shll
lock
or
pop
bound
test
xor
push
and
mov
jbe
jnp
repz
xchg
scas
movsl
mov
ljmp
gs
xchg
sub
pop
cs
push
pusha
rorl
test
jb
cmc
shlb
cli
inc
imul
addr16
push
mov
ss
sbb
loopne
jnp
push
jb
push
or
cmp
dec
and
mov
out
enter
xchg
data16
dec
jne
sbb
add
out
and
push
js
subb
add
xchg
fstpl
outsl
cli
jno
mov
dec
sub
mov
mov
int
pop
sbbb
sub
lock
or
fsub
xor
xor
lahf
loope
or
nop
sbb
idivl
arpl
jns
fdivr
ds
adc
test
std
dec
sbb
sub
mov
jbe
clc
out
push
fidivrl
xor
push
adc
repnz
xor
repz
pop
arpl
mov
adc
mov
fcmovnb
cmp
sarl
pop
pop
ss
lock
inc
imul
xor
cwtl
inc
cmp
in
insb
mov
pop
mov
adc
push
int3
mov
mov
in
not
sbb
inc
adc
stc
push
jmp
cmp
push
pop
sti
push
jecxz
shrl
push
inc
xchg
cmp
mov
and
push
dec
addr16
or
arpl
sbb
inc
cli
mov
push
mov
jb
push
in
icebp
ljmp
or
icebp
sub
mov
add
push
movsl
push
adcb
filds
and
or
mov
adc
pop
mov
fistps
fldl
dec
xor
shll
iret
nop
add
je
das
bound
xchg
mov
fwait
mov
jo
pop
mov
cmp
test
xor
scas
fcmovbe
mov
cli
cwtl
aas
cmpsb
jnp
or
inc
cmpsl
dec
pop
pop
jnp
es
shll
pop
xchg
adc
sbb
sbb
pop
aas
inc
mov
cmp
dec
popa
push
jnp
or
push
xchg
push
pop
imul
shlb
outsb
cs
mov
outsl
cld
inc
imul
cmpsb
adc
pop
inc
addr16
push
je
dec
sbb
rorb
pusha
jge
test
and
outsl
jecxz
or
test
cmp
sbb
adcl
push
jmp
testb
cmp
mov
or
push
outsl
mov
pop
mov
and
or
lret
lret
xchg
or
popa
mov
xorb
jle
pop
mov
fnstcw
mov
mov
dec
ss
outsl
sbb
addr16
outsl
or
mov
rcll
push
ret
mov
adc
jp
sbb
les
mov
fcompl
fildl
cs
insl
jle
gs
mov
test
subl
div
frstor
rcl
mov
or
lahf
jp
sub
arpl
scas
xchg
test
xchg
je
test
hlt
add
lcallw
sub
or
dec
adc
imul
jbe
call
in
add
push
adcl
cld
scas
xor
sub
fucomip
xchg
jl
insl
dec
mov
dec
xchg
ret
dec
add
pop
pop
iret
out
lods
mov
adc
pop
mov
cmp
outsl
push
add
aad
stos
add
fcmove
dec
loop
add
inc
aas
dec
clc
mov
dec
add
fwait
mov
std
cs
dec
into
xchg
pop
shl
out
test
es
sbb
imul
cld
pop
inc
rclb
or
dec
icebp
pop
cmc
cld
inc
xchg
imulb
xchg
add
shrl
testl
ja
mov
js
sbb
mov
sub
sbb
cli
sub
mov
and
lods
test
and
lds
inc
fildll
xchg
inc
and
clc
mov
ss
pusha
dec
cli
mov
or
inc
sti
outsl
jb
dec
mov
push
mov
jno
ja
jle
cld
insb
cmpb
aaa
ltr
ja
add
and
cmp
fcompl
repz
jl
cmp
mov
andb
daa
add
loop
gs
sbb
xchg
jecxz
cmp
insb
pop
les
cwtl
subb
pop
add
imul
loope
lods
ret
push
or
clc
into
jge
mov
cmp
or
mov
fcmove
and
mov
bound
cmpsb
dec
inc
testl
data16
jne
fdivrp
notb
cmp
sub
push
sti
jl
mov
ficoml
dec
inc
call
pushf
jge
ficomps
and
aam
sub
push
mov
sbb
and
jmp
rcll
mov
call
pop
mov
push
sbb
jge
call
mov
inc
enter
shl
push
adc
add
out
mov
fwait
push
iret
outsl
adc
sub
add
fucomp
xchg
icebp
ror
jns
clc
mov
ds
test
mov
push
sbb
add
daa
loope
pop
jg
arpl
dec
xchg
xor
es
gs
dec
stos
dec
cmpsb
pop
cmp
dec
adc
out
jnp
mov
das
push
ret
jmp
imul
push
into
pusha
pop
push
cmp
jns
loopne
rol
mov
pop
out
idivl
pop
add
dec
sub
xor
xchg
jg
jle
divl
pushf
inc
xchg
popf
pusha
ljmp
jp
or
rcr
ljmp
pop
cs
sub
lock
cmpl
aaa
ss
lods
cli
adc
shll
sbb
aaa
xchg
or
xor
lods
movsb
faddl
push
push
pop
push
sti
mov
fs
pusha
popa
inc
insl
sbb
adc
cltd
call
xchg
movsb
lds
xchg
fwait
popf
je
sub
aam
popa
add
and
cmp
pop
js
divb
jecxz
dec
or
add
mov
mov
ret
cmc
rcl
aad
xor
jg
stc
je
icebp
mov
xchg
clc
mov
xor
fwait
pop
subl
xor
lret
popa
test
sbb
cs
lods
and
push
js
mov
adc
or
xor
iret
push
jp
addr16
xchg
insl
mov
cmc
cmpl
sub
jge
es
adc
imul
les
mov
mov
es
push
ljmp
stos
inc
and
jp
push
cmp
stc
scas
clc
aam
lods
mov
lds
jge
inc
mov
pop
xor
mov
inc
pusha
mov
push
sub
push
jns
out
lds
xchg
cmp
pop
adc
mov
inc
mov
mov
sub
cmp
push
jne
sahf
lods
mov
fnstenv
jg
fldcw
jae
mov
cltd
xor
popf
icebp
add
hlt
sbb
out
xchg
leave
scas
mov
into
les
pop
sbb
jnp
mov
in
fsubs
pop
mov
xlat
cmp
xchg
push
pushf
xchg
and
std
sbb
jecxz
add
mov
and
cmpsl
adc
pop
mov
mov
daa
aad
adc
mov
xor
sbb
fisttps
icebp
push
sub
inc
pop
imul
clc
mov
push
and
jmp
mov
rorb
aam
dec
xchg
and
mov
jne
pushf
popf
iret
bound
pop
fisttpl
mov
arpl
pop
imul
cmp
std
les
btc
fisttps
outsb
mov
pop
aam
push
imul
pushf
jmp
scas
test
mov
aaa
mov
sbb
jae
pusha
stos
inc
pop
pushf
loope
std
push
dec
mov
xor
loope
lahf
mov
xor
jae
data16
mov
mov
enter
ds
cmp
add
shlb
push
add
movsl
mov
pop
mov
dec
ljmp
pop
scas
dec
add
ja
jae
lret
inc
mov
cwtl
das
sbb
xor
loopne
out
ljmp
mov
lock
aad
jge
mov
jbe
jmp
ljmp
dec
sbb
lea
mov
pop
jb
pop
or
ss
test
hlt
sahf
inc
dec
pop
jmp
flds
cmp
outsl
sbb
adc
xor
bound
stos
sahf
test
jl
insb
or
test
repnz
data16
inc
jno
cmp
xchg
inc
aas
and
aaa
mov
xor
pop
adc
clc
push
setno
subb
cmpb
cmpsb
movsl
sub
mov
pop
adc
sahf
sbb
jge
mov
imul
mov
jge
add
pop
popa
add
sbb
les
fcmovnu
sbb
imul
and
fnstenv
jg
inc
icebp
mov
xor
and
test
insl
sub
gs
fwait
test
jmp
fisubrl
mov
es
push
jp
adc
mov
mov
mov
xchg
loope
cmp
mov
mull
push
popa
adc
xor
inc
test
insb
add
push
mov
xor
mov
shl
xor
cbtw
add
jp
mov
jp
int
sub
aas
dec
pusha
in
jnp
testl
test
or
mov
mov
mov
roll
adc
jmp
fnop
mov
pop
adc
push
pop
pop
mov
enter
imul
pop
rol
loop
out
insb
mov
aaa
or
andl
pop
cli
xchg
and
leave
test
jns
or
jno
pop
fidivl
adc
lods
push
mov
or
ficoms
sub
stos
mov
ret
les
xchg
mov
sub
jnp
or
sub
mov
jmp
repz
pop
push
ja
stos
dec
dec
ljmp
arpl
push
test
adc
sub
xlat
mov
adc
cmp
add
add
xor
dec
mov
frstor
mov
cmp
or
mov
dec
lahf
mov
cli
jb
jmp
mov
pop
dec
pusha
and
das
mov
pop
mov
mov
cs
orb
ljmp
decl
cmc
and
push
mov
jns
xor
mov
insl
cmpsb
rcll
jbe
test
lock
int
cmp
pop
jecxz
xchg
pop
repnz
lret
stos
mov
xchg
xor
sub
cmovno
test
mov
adc
jo
mov
inc
cmp
in
fucomp
sarb
xor
in
test
xchg
call
mov
pop
add
cmpsb
push
inc
sbb
pop
mov
pop
out
aam
addr16
xor
pop
cs
dec
ret
lock
mov
dec
mov
pop
and
cmp
in
fdivr
xchg
or
pop
jmp
mov
repz
xor
idivb
mov
repnz
adc
dec
cmpsb
jge
addr16
cli
insb
jmp
xchg
mov
pop
lea
mov
mov
rcr
sbb
or
sbb
push
inc
sbb
insl
insb
cmp
pop
iret
or
test
subl
sub
jbe
insb
pop
into
scas
int
test
loopne
pop
jno
add
lret
cmp
jnp
stos
cmp
mov
xlat
or
and
add
lods
pop
jp
and
dec
es
imul
rcrl
insl
jae
or
or
out
lret
xlat
cmp
xchg
repz
pop
sti
xchg
push
pop
shll
mov
stc
jne
xchg
insl
inc
mov
pop
into
sbb
ficoml
and
xchg
inc
icebp
test
and
pusha
jp
pop
in
inc
repnz
leave
fmull
shlb
jae
inc
jecxz
add
pushf
xchg
sub
pop
push
xor
scas
dec
inc
sbb
xor
mov
push
loop
push
push
inc
insb
jl
push
adc
xchg
mov
push
or
loop
or
dec
fidivl
dec
rorl
leave
sub
sub
aad
xor
insl
cmpsl
insb
cld
loope
and
js
cmp
lret
test
or
and
and
in
ret
push
sub
fsubrs
sub
fsts
aad
dec
and
push
adc
adc
out
sbb
inc
jmp
out
clc
fwait
ja
out
out
loopne
xor
insb
sti
sub
dec
mov
mov
pop
pop
jp
dec
push
out
dec
xor
js
js
in
fs
adc
adc
jge
clc
call
lods
addr16
jmp
aaa
je
mov
jbe
scas
fbld
imul
mov
or
ss
scas
cmp
xor
push
inc
mov
shlb
mov
or
push
inc
jno
icebp
dec
sub
scas
xchg
push
inc
dec
test
pop
or
cmp
dec
mov
jns
sbb
lcall
insb
push
stc
cli
jle
addr16
pusha
xor
jnp
pop
push
or
push
sbb
mov
in
iret
pushf
sti
xor
xor
jae
mov
jne
loop
stos
movsl
and
stc
out
and
mov
nop
xchg
fistps
mov
inc
rcrb
mov
sbb
and
xlat
fldcw
sub
enter
jno
int
popa
xor
sub
lods
push
popa
out
fldenv
fbstp
divb
leave
dec
fmulp
and
push
and
dec
in
mov
xor
aam
mov
jb
aas
std
adc
mov
pusha
and
dec
bound
and
mov
repz
sar
cmpl
push
js
sbb
ljmp
and
jbe
xor
icebp
fidivrl
mov
jecxz
lods
loopne
les
nop
dec
push
sahf
inc
aas
lods
rcl
jle
jne
adc
or
add
and
ljmp
into
fwait
aaa
or
cltd
xor
or
inc
sub
sub
lods
sahf
inc
and
out
mov
adc
inc
lcall
int3
sti
mov
add
fwait
inc
push
pop
push
lods
sarb
call
dec
xchg
sbb
push
scas
dec
mov
mov
iret
mov
push
out
fsub
ffreep
test
add
mov
je
add
repz
inc
outsl
pop
jg
loopne
jo
sub
lret
out
ja
push
jo
mov
dec
lret
adc
imul
push
add
pop
mov
mov
movsb
call
fbstp
test
jp
adc
outsb
add
movb
movsl
leave
mov
fwait
in
pop
int
movsl
sbb
stc
jl
cmp
mov
movsl
stos
jge
xchg
stos
jge
jg
lods
enter
jnp
out
imul
lds
mov
je
aas
mov
xchg
sbb
pop
and
jne
mov
js
cmpsb
je
outsl
jo
push
adc
pop
sub
inc
xor
cs
jnp
pop
dec
xchg
cmpsl
gs
int3
cwtl
dec
cltd
scas
jg
and
cmp
push
xlat
xor
push
imul
test
dec
outsb
loope
mov
mov
fwait
push
in
sbb
lea
stos
pop
adc
cmpsl
cmp
xchg
outsl
xchg
push
lods
fmuls
pop
cmc
jns,pt
mov
sub
outsl
nop
xor
fsubrl
nop
leave
or
dec
xchg
mov
negl
imul
shll
pop
mov
or
gs
inc
rcl
inc
out
jg
mov
adc
xchg
ret
popa
and
add
scas
fidivrs
mov
and
push
lea
inc
dec
dec
repz
leave
cmp
ficomps
into
and
and
pop
test
push
jg
push
sti
in
scas
cmp
mov
push
mov
loop
lods
test
jl
jecxz
enter
jp
jns
inc
xchg
pop
dec
jg
shlb
imul
xchg
test
rorb
mov
addr16
ret
outsb
enter
in
aaa
roll
enter
jmp
jecxz
push
inc
dec
xchg
sbb
push
sub
xor
fs
jne
mov
jns
inc
and
dec
pop
push
mov
stos
aas
mov
femms
ljmp
lock
scas
enter
sub
mov
mov
jno
push
shlb
xor
int
fcmovne
dec
push
je
add
push
shl
adc
int3
lret
mov
xchg
loope
add
movsb
call
stos
dec
ja
push
sub
dec
into
rorb
mov
xchg
push
cmp
push
mov
test
inc
ljmp
roll
pop
adc
add
cmp
test
dec
bound
adc
es
pop
mov
les
out
or
clc
mov
call
adc
ret
cmp
sbb
lds
daa
sbbb
loope
inc
cmp
lea
pop
outsw
inc
lods
push
xchg
out
popa
cmc
pop
movsb
or
adc
pop
xor
nop
or
xlat
imulb
xor
pop
lret
xchg
lds
imul
shrl
sbb
test
mov
add
mov
out
ljmp
cmp
lcall
rcrl
shrb
idivb
sub
xchg
sub
movsb
jp
mov
std
xlat
or
add
inc
movsl
add
sarb
sbb
std
in
pop
lea
shll
test
push
sbb
xchg
jge
ret
cwtl
pop
mov
popa
sub
jecxz
lods
sub
xchg
outsb
popf
arpl
in
and
and
sbb
in
mov
sub
mov
ret
jle
lea
jnp
shll
ds
mov
clc
negb
push
push
mov
outsl
pop
jge
adc
hlt
mov
mov
xchg
and
adc
sarl
inc
movsb
inc
sub
or
bound
cltd
dec
pop
idivl
in
mov
sbb
pusha
push
fidivs
out
and
js
mov
or
lods
xor
mov
adc
pop
popf
add
xor
xor
inc
and
scas
pop
fnstenv
imul
jo
dec
sbb
insl
addr16
push
adcl
ss
dec
mov
shll
rorl
cltd
scas
ss
lcall
mov
adc
cmc
dec
sbb
pop
fcoml
bound
adc
idiv
adc
jp
or
in
mov
andb
repz
mov
nop
leave
or
out
pop
stc
mov
nop
adc
repnz
popf
or
mov
push
lds
or
lret
sbb
xchg
sbb
and
ret
cmp
pop
mov
es
cmp
lret
jge
mov
lret
mov
push
lret
jmp
test
popf
fsubrs
loopw
ds
call
and
xchg
xor
test
or
dec
sub
push
and
roll
xchg
adc
jge
jp
dec
jne
popf
rcll
ja
es
cmpsl
int3
aam
or
xor
inc
ds
mov
lahf
and
imul
mov
pop
adc
mov
pop
mov
cmp
add
bound
arpl
ss
shrb
sahf
fcoms
add
inc
adc
and
popl
rol
int3
dec
cld
and
aam
push
mov
jp
lret
cmp
mov
jns
jbe
dec
shrl
cmp
cwtl
scas
jns
aaa
bound
mov
pop
dec
std
arpl
jg
fbld
xchg
lods
aad
mov
fwait
jbe
mov
out
js
and
sub
xchg
cld
retw
pop
gs
jne
out
lret
sub
jae
sbb
mov
imull
je
enter
repz
lds
adc
sbb
cmp
mov
push
outsl
xor
mov
inc
add
xlat
scas
xchg
subl
and
inc
loopne
add
es
cwtl
cs
int
leave
push
or
jo
imul
ja
pop
lcall
push
cmc
imul
jbe
enter
dec
in
int
shr
ret
ss
loopne
inc
test
adc
subb
mov
dec
add
pop
les
jbe
lahf
repnz
lret
inc
test
pop
pop
loope
xlat
mov
in
lock
pusha
sahf
jg
lcall
mov
repnz
lret
in
fwait
popf
ja
inc
lds
xchg
icebp
movsl
out
iret
out
fsubl
les
push
mov
outsb
sbb
fsincos
sub
dec
sahf
mov
mov
filds
ljmp
pop
in
cmp
and
ds
jo
lret
mov
sub
insl
dec
add
jp
int
out
push
fcomip
scas
pusha
test
cmp
cli
test
out
xchg
loop
and
jle
mov
orl
and
push
push
pushf
and
inc
xchg
xchg
push
sbb
sbb
sub
jae
rcl
loop
xchg
iret
icebp
fmulp
push
inc
xchg
cmp
push
mov
cwtl
and
std
std
inc
push
xchg
jecxz
push
push
scas
int
cmp
and
inc
push
cmpsl
shl
or
mov
fdivl
insb
andb
cmpsb
das
enter
xor
cmp
cmp
fwait
dec
adc
clc
cmpsl
js
dec
icebp
sbb
gs
clc
mov
dec
cmp
fisubs
jne
jl
sbb
lods
pop
push
daa
xchg
divl
movsl
aad
lods
pop
dec
mov
xor
pop
sarb
sarb
ljmp
pop
decb
jle
pop
push
mov
pop
aaa
icebp
imul
std
sub
push
call
aas
jge
pusha
jbe
mov
lods
popf
cltd
xchg
out
test
dec
sahf
add
lods
xor
cmc
jnp
xchg
or
cmp
push
push
in
mov
stos
adcl
aaa
js
mov
add
fucomip
inc
int3
fldl
dec
ret
adc
shlb
and
leave
add
jg
xor
mov
ret
ficomps
jne
faddl
xlat
cs
sub
loope
mov
stos
pop
jo
jmp
lods
sbb
cmp
imul
movsl
enter
inc
mov
enter
rcll
inc
mov
pop
sbb
loopne
add
shll
add
mov
les
fimull
ret
inc
fwait
ret
jge
loopne
or
cld
fstps
repnz
lods
push
push
shlb
push
fiaddl
inc
lret
mov
cs
faddl
pop
adcl
mov
sbb
jnp
fsubl
movhps
sub
outsb
ret
inc
icebp
inc
push
adcl
addl
aam
js
std
mov
jp
out
idivb
inc
or
pushf
into
adc
mov
movsl
movsl
pop
je
pop
jg
enter
jno
js
not
fdivs
pop
mov
cmpsb
adc
fcomps
notb
aas
push
stos
xchg
pop
cmp
mov
lods
jbe
mov
test
inc
cmpsl
js
dec
lret
loope
movsb
sub
jbe
sar
pop
pop
imul
jle
push
xchg
rolb
xor
lcall
sub
out
shlb
or
scas
mov
fwait
sarb
aaa
xchg
lcall
das
dec
fimull
stos
push
inc
mov
sti
and
pusha
out
mov
fmulp
ds
pop
jb
mov
and
movsb
cmp
decb
imulb
data16
sub
xchg
or
mov
xchg
mov
xor
es
inc
mov
jecxz
xchg
ljmp
mov
push
mov
stos
std
mov
cltd
test
cmp
popa
ret
movl
cmp
dec
xor
xchg
stos
sbb
jecxz
dec
jb
jne
orb
popf
out
dec
xchg
or
pop
leave
mov
jl
insb
loope
out
add
add
ret
pop
xchg
out
mov
inc
inc
pusha
ss
jbe
lock
mov
lea
mov
arpl
mov
mov
loopne
nop
popl
scas
mov
and
or
rcrl
fistl
jmp
and
sbb
lods
pop
or
push
sti
jp
in
inc
daa
in
out
inc
mov
mov
test
add
inc
lahf
mov
rcll
stc
stos
pop
cmp
cmpsb
out
jecxz
inc
xlat
gs
sbb
sub
push
xchg
jp
cmp
cmp
sbb
cmp
iret
push
add
sbb
dec
xchg
jecxz
dec
ljmp
and
inc
pop
dec
lods
mov
fmuls
mov
mov
sbb
cld
data16
sbb
mov
and
daa
sbb
movb
jns
in
add
mov
orb
mov
rorb
adc
roll
adcl
add
mov
jp
xchg
fsub
outsl
add
pop
jns
push
push
jp
imul
jecxz
dec
pop
sub
jno
bound
sub
clc
sahf
inc
xlat
lods
pop
adc
pop
out
mov
sbb
insl
mov
lods
cmp
in
push
testb
xor
pushaw
test
pop
push
nop
xchg
outsb
jns
inc
or
cmpsl
sbb
push
mov
maxps
sbb
mov
jae
ljmp
out
dec
inc
nop
inc
mov
or
jo
mov
or
mov
and
setb
rclb
nop
shr
mov
inc
cmp
cmc
movsb
and
aas
jno
mov
movb
mov
shlb
fnstcw
jle
test
pop
xchg
and
xchg
or
xchg
pop
into
mov
lret
inc
add
xchg
and
rcll
ljmp
nop
adc
jo
aaa
pop
xchg
xchg
int
cs
sarb
loope
ret
iret
in
es
into
pushf
out
lea
adc
cmp
movsl
int
lock
data16
mov
pop
fldt
cmp
sahf
cltd
adc
and
or
inc
adc
jl
and
mov
sti
dec
data16
test
sub
and
push
mov
or
add
bound
dec
push
add
testl
std
les
push
inc
sbbl
dec
xchg
stos
pusha
add
pop
sub
dec
sbb
mov
js
out
arpl
mov
cmp
pop
add
mov
insl
dec
xchg
aaa
pop
push
inc
sub
cwtl
mov
test
or
les
test
rorb
fdivrp
dec
divb
fldl2t
lods
jo
fucomi
jae
xchg
scas
pop
stos
xrelease
and
out
mov
insl
push
cmp
adc
jg
dec
in
les
pop
jne
in
bound
int
inc
frstor
mov
pop
imul
add
js
mov
and
push
mov
push
sub
cmpsb
jns
cmpb
mov
pop
fsubrs
pop
pop
cs
jo
outsb
jo
test
lahf
jo
movsb
and
out
test
cld
lret
mov
fs
shlb
adc
sub
ficompl
lds
push
faddl
and
xor
mov
sbb
in
outsb
nop
mov
inc
inc
arpl
jo
sbb
daa
cmp
dec
fldcw
mov
sarb
and
cld
push
imul
scas
mov
test
ljmp
mov
jp
in
dec
inc
aas
pushf
dec
lcall
sbb
sub
stos
sub
negl
xor
lods
test
inc
mov
pop
pop
sbb
xchg
sbb
fxch
icebp
ja
dec
daa
sbb
pop
dec
mull
test
mov
nop
sub
dec
pop
sbb
stc
test
insl
pop
add
ret
inc
xor
lret
cmpsl
jle
sub
ja
mov
jp
negb
lds
inc
ror
jecxz
out
loopne
loopne
fsts
push
mov
popa
jb
loop
cmp
dec
cmp
mov
xor
mov
divps
sbb
mov
jmp
mov
sbb
daa
mov
int
stos
addb
pop
ret
out
add
mov
mov
mov
mov
mov
push
jge
cmpsl
es
cwtl
xor
pop
in
les
dec
push
dec
mov
and
cld
rolb
test
sbb
cmp
ljmp
push
iret
lcall
xchg
aam
pushf
fidivs
imul
imul
xor
add
adc
xchg
insl
std
mov
sti
mov
ret
xor
sub
push
or
push
pop
xchg
sub
mov
push
dec
bound
inc
mov
or
dec
cmpsl
icebp
xchg
mov
push
mov
sar
sub
xor
mov
test
ljmp
mov
push
jge
mov
mov
add
dec
pushf
ljmp
les
xlat
jle
clc
in
aam
repnz
sbb
push
in
enter
pop
lods
jg
mov
add
xor
je
test
mov
dec
aaa
mov
sbb
fmull
pop
loopne
js
and
shll
pop
xchg
dec
jb
repz
mov
mov
mov
dec
mov
or
js
or
movsl
pop
sbb
ss
clc
int
sbb
cs
loope
inc
fwait
pop
pop
es
add
outsl
cmpsb
insb
push
loope
mov
iret
adc
movb
mull
ret
push
lahf
sub
push
clc
add
push
je
push
setae
lret
daa
and
loopne
pop
popf
or
adc
cmpsb
push
xor
popf
enter
rcrb
mov
cld
scas
adc
jb
dec
and
test
dec
in
push
clc
leave
idivb
cmpsb
orl
insb
xchg
inc
mov
pop
std
in
rcrb
call
mov
rorb
jns
mov
inc
jns
outsl
mov
aam
push
pop
push
sbb
pop
push
jns
mov
enter
jl
sbb
lods
dec
arpl
mov
popa
mov
xchg
jg
cmpsl
push
inc
mov
hlt
xchg
clc
lea
out
test
stos
xor
cld
mov
lods
pop
out
and
xchg
movsb
pushf
and
adc
int3
jp
jb
ja
lock
sbbl
out
sbb
inc
mov
mov
add
stos
mov
imul
sbb
jno
push
or
dec
lods
cmp
add
mov
sub
cmp
cs
add
out
push
shll
cmp
pop
xor
push
push
dec
sub
in
imul
jno
fwait
push
jle
fmull
inc
popf
sarl
jb
inc
fstl
popf
test
mov
je
lcall
ljmp
lahf
push
and
ficompl
xchg
in
inc
xor
mov
dec
aam
jge
mov
enter
mulb
xor
push
fnsave
andb
mov
mov
ficomps
cmp
daa
je
and
adc
or
fsts
hlt
sbb
pop
out
xchg
incl
inc
mov
stos
lret
pop
bound
stos
stc
jae
dec
pop
jne
push
loop
xchg
mov
sahf
je
and
repz
cmc
and
fbld
lret
and
xlat
fdivrl
repz
xchg
mov
insl
in
out
adc
xchg
cmp
hlt
xchg
outsl
push
pop
sbb
jp
jl
nop
and
cli
test
mov
push
push
and
dec
mov
int3
pop
jae
sbb
xor
mov
sbb
les
mov
xor
sub
sbb
ret
std
ds
daa
fsub
fs
flds
mov
cmpsl
push
dec
das
mov
inc
pop
mov
ret
adc
and
xchg
out
dec
popa
push
mov
push
hlt
and
fiadds
sub
neg
cmc
pop
push
aam
adc
int3
outsb
adc
inc
and
inc
xor
push
fildll
cmpsb
test
decb
mov
inc
push
iret
lock
jecxz
fsubrl
test
and
test
cmpsl
push
xor
inc
and
sub
add
or
cld
and
pop
push
pop
jbe
ret
jbe
adc
mov
push
mov
mov
jne
fistpl
push
dec
in
mov
jl
pop
shll
aam
xor
and
mov
push
mov
fimull
and
out
outsl
gs
movsb
aaa
arpl
mov
jge
enter
mov
imul
fwait
sbb
xlat
xor
push
and
ret
cmpb
popa
rcrl
mov
sbb
mov
jl
movsl
add
addr16
mov
int3
inc
fs
inc
bound
jmp
fimull
mov
cmp
arpl
test
sahf
fcom
xor
insl
mov
fidivl
cmp
sub
imul
fwait
out
xchg
fcoml
or
xchg
hlt
test
lods
fdivp
push
adc
dec
mov
into
mov
clc
push
and
or
add
into
cmc
xorb
lea
test
call
xchg
shl
add
jnp
jbe
push
scas
jl
cmpb
mov
push
mov
xchg
rorb
int
mov
out
xchg
decl
or
js
lock
shrb
js
push
dec
dec
or
or
push
cmp
rorb
fsub
aaa
call
aam
pop
imul
call
ret
xchg
mov
sahf
call
add
fwait
jo
call
xchg
pop
fsubs
push
pop
movsl
ret
jno
subb
adc
leave
sti
add
xor
daa
push
rclb
push
mov
fsubrs
test
icebp
je
rclb
shl
xchg
ss
push
jne
bound
lds
add
ds
dec
mov
scas
stc
sbb
idivl
popf
stos
xchg
dec
xchg
or
pop
es
adc
fldcw
xchg
or
lds
les
push
jo
js
inc
and
faddl
cli
pusha
not
mov
mov
adc
xchg
jae
out
js
xor
leave
fdiv
fs
mov
fxch
lret
dec
sbb
scas
inc
movsl
jl
or
add
jae
testl
ret
or
jmp
push
loop
stc
mov
add
aaa
sub
xchg
out
mov
test
ret
enter
jno
pop
jbe
ret
stc
hlt
movsl
push
cmp
in
fs
daa
push
loope
mov
lahf
fildll
xor
jmp
inc
cmp
lret
and
adcl
adc
xor
or
test
cmpsb
repnz
add
sub
jl
cmc
sbb
iret
pandn
ja
cltd
movsl
jae
call
fs
out
int
inc
xorb
rcrl
dec
cmp
inc
dec
sbbb
inc
sbb
cmp
gs
loop
xchg
cmpb
push
imul
push
imul
xchg
in
xor
fsts
dec
cmp
inc
inc
mov
pop
sti
xchg
xchg
mov
scas
xlat
pushf
cmp
cmpsl
ja
pop
xchg
add
mov
lock
aam
gs
insl
je
lock
iret
ret
and
jge
pushf
jns
lret
cs
insb
jb
xlat
gs
jp
shrl
ljmp
dec
je
pushf
cld
or
dec
into
movsb
xor
mov
int3
xor
je
test
xchg
xchg
aas
pusha
stc
test
mov
fwait
adc
cmpsl
sub
mov
call
add
or
xchg
fidivrl
push
jo
out
out
pop
mov
lcall
inc
adc
cmc
sub
jo
rolb
sub
lods
mov
imul
push
pusha
sub
sahf
outsl
test
cs
sahf
loop
mov
or
push
and
cmc
push
dec
jnp
jno
cmc
stos
fstl
imul
test
adc
cmp
mov
dec
test
sbb
scas
mov
xchg
out
dec
popf
adcb
adc
rcrb
mov
aam
fidivl
enter
cltd
nop
push
xchg
sub
mov
mov
push
daa
cltd
mov
cmp
aas
repz
jmp
pop
add
movntq
out
xchg
adc
clc
mov
jnp
pop
push
pop
out
dec
movsb
cmp
jo
add
rorl
popf
lods
add
icebp
negb
fstpt
cmp
push
dec
xchg
push
fld
imul
int
bound
scas
push
mov
cmp
xchg
out
mull
mov
push
cld
jbe
insb
push
sub
push
xor
negl
loope
xchg
xor
pop
mov
adc
xor
push
std
aaa
in
scas
and
mov
imul
xor
addr16
in
sub
add
and
cwtl
xor
dec
scas
or
and
pop
lret
ljmp
cmp
aad
adc
jne
stos
cmp
and
test
fdivp
movsb
inc
jl
lea
dec
ja
inc
fimull
or
xchg
insl
pop
test
je
flds
shll
adc
mov
mov
add
sbb
lds
ret
add
imul
iret
sub
xor
shr
xor
leave
nop
mov
push
and
aaa
cmp
and
pop
lds
mov
mov
icebp
mov
int3
inc
les
mov
xchg
or
push
and
outsb
mov
cmp
and
mov
mov
hlt
jp
fldt
mov
jecxz
out
sub
xor
xor
dec
cli
call
cs
leave
jbe
sub
xor
adc
fsin
and
adc
xchg
xlat
mov
pop
jo
out
mov
sti
mov
sub
test
mov
imul
push
pop
mov
add
push
mov
insb
jecxz
and
push
loop
lds
bound
dec
push
aam
jmp
dec
mov
jg
out
mov
lahf
sbb
mov
sarl
hlt
sahf
lahf
mov
lods
mulb
aaa
dec
sbb
cmp
adc
adc
inc
je
cmp
jbe
cmpl
adc
negb
bound
and
xorl
xlat
icebp
arpl
jae
mov
dec
ljmp
push
inc
xor
push
pushf
insl
loop
call
inc
xor
inc
lret
mov
test
xlat
daa
dec
mov
xchg
ljmp
dec
and
mov
pop
xchg
stc
mov
popa
out
xor
rcll
xor
mov
mov
push
dec
mov
dec
jb
mov
loopne
add
ljmp
and
sahf
cli
in
sbb
sbb
cld
mov
xchg
mov
insl
sbb
pop
insl
mov
sahf
add
aad
arpl
gs
inc
cmp
and
outsb
popf
cmc
dec
fsubs
jle
xchg
fsubrl
test
daa
popa
dec
or
pop
pusha
adc
mov
adc
and
outsl
xchg
and
xor
mov
fnstsw
idivl
clc
ja
xchg
imul
daa
in
pmaddwd
ror
in
fwait
mov
out
aaa
mov
sub
fistpll
fldcw
push
xor
xchg
ret
xor
out
jecxz
aaa
out
insb
hlt
cli
lcall
cmp
cmp
scas
xchg
dec
push
sub
cwtl
jns
out
inc
cld
addr16
stos
ss
lret
push
aaa
xor
fbld
scas
xchg
xchg
dec
sub
lret
adc
test
jne
loope
mov
out
push
arpl
cmp
popa
scas
sub
mov
jecxz
adc
cld
scas
test
push
pop
fdivrp
lret
inc
inc
call
adc
inc
movsb
dec
jl
insl
push
mov
sahf
sbb
icebp
out
or
sbb
mov
repnz
push
adc
lret
pusha
outsl
je
dec
bound
outsb
push
cld
lea
push
jbe
cmp
fmul
sbbl
jne
sub
push
iret
stc
cmp
les
mov
cltd
inc
je
rolb
insl
add
movsb
std
mov
popf
xor
das
dec
fs
xor
out
cwtl
lret
in
mov
push
test
mov
fldenv
in
pop
cli
hlt
and
jl
out
mul
inc
mov
mov
mov
dec
xchg
xor
xor
pop
push
mov
cli
adc
repnz
mov
les
cltd
mov
mov
xor
add
pop
sub
scas
add
cmc
xor
add
pop
adc
das
mov
push
cmc
outsb
cmp
mov
ss
cld
or
in
inc
sbb
xchg
push
arpl
in
dec
jne
movsb
sbb
mov
stos
fucom
lahf
lret
mulb
mov
xchg
leave
jg
xor
aas
sbb
sbb
push
push
jp
out
scas
mov
imul
ret
stc
icebp
push
push
dec
test
inc
cli
pop
movsl
fucom
xchg
jge
xchg
les
out
inc
pop
sbb
test
mov
idivl
idivb
sahf
add
aad
cmpxchg
sbb
pusha
das
cmp
xchg
jo
sarl
or
cmp
ds
out
and
xlat
xor
pop
popf
sbb
negl
cmpsb
aam
shrb
jl
pop
inc
jge
push
mov
push
scas
je
loopne
xor
and
addr16
sub
add
inc
mov
dec
mov
test
pop
cmp
cmpsb
ja
cmp
add
mov
lret
cmp
clc
push
xchg
or
push
jo
rclb
das
in
vpsubsw
std
xchg
push
ss
fwait
inc
rorb
aam
fstps
rcrb
outsl
adc
mov
xchg
and
cmp
and
in
and
add
jne
sbb
std
add
inc
xlat
push
or
lcall
andb
es
ret
pop
cltd
test
mul
dec
xlat
mov
inc
cmp
les
push
out
fildl
jno
adc
or
cli
js
sub
dec
popa
nop
insb
pop
sbb
leave
leave
int3
inc
pop
inc
jmp
gs
sub
and
enter
push
mov
stos
sub
leave
in
movsl
dec
xchg
mov
lds
popf
push
cmp
aam
dec
pop
mov
mov
jne
les
mov
in
das
into
call
lahf
sarb
das
jnp
in
sub
xchg
and
enter
jle
push
mov
and
mov
mov
dec
ds
mov
fsqrt
das
bnd
cmp
xor
sub
or
lcall
mov
pusha
push
lock
fs
jnp
shlb
sbb
xor
fidivl
fidivs
jae
mov
dec
dec
or
loopne
mov
fisubrs
sbb
enter
inc
stos
mov
in
push
and
sbb
xchg
add
push
repz
aaa
jno
dec
test
pop
and
or
sbb
dec
push
test
xchg
mov
aad
push
push
mov
movsb
cmp
adc
cld
or
scas
sahf
and
bound
and
loope
into
gs
pop
inc
mov
push
inc
bound
in
movsb
jbe
pop
push
repz
sahf
loope
rcrl
cmpsl
and
mov
push
and
pop
dec
loopne
or
mov
xorb
xchg
ljmp
mov
lods
lea
stc
add
movsl
int3
or
lods
mov
test
adcb
and
ficoms
bound
ret
inc
data16
pop
jmp
cmp
mov
xor
mov
add
and
std
fsubr
scas
xor
xor
lahf
negl
xor
cmp
data16
pop
mov
ljmp
or
outsb
inc
mov
mov
rorb
pop
fidivrl
jge,pt
add
dec
sbb
adc
sbb
and
add
rorl
mov
int3
scas
jle
jns
jns
fbld
popf
or
xor
jns
pushf
jmp
sbb
mov
nop
subb
pop
mov
cmp
pop
ja
enter
cmpb
mov
int
inc
pop
ja
inc
jge
sarb
es
jbe
mov
ret
fildll
frstor
lea
aad
stos
daa
std
pop
sub
add
jecxz
add
jl
into
sti
mov
dec
cmp
cmp
out
mov
filds
pusha
pop
fwait
xor
push
pushf
das
jmp
mov
adc
mov
fs
jo
cli
hlt
pop
mov
fs
fcoml
or
jb
pop
adc
xchg
xlat
xchg
bound
pop
mov
and
lock
pusha
add
or
pmaxub
iret
jnp
lcall
sub
jp
popa
pop
decl
out
pop
dec
mov
loop
fcompl
xchg
mov
xchg
lock
sti
inc
pop
mov
mov
mov
mov
jns
sbb
xchg
inc
test
mov
test
rcll
cmpsl
fldlg2
push
and
xchg
mov
fnsave
ja,pn
gs
jns
ret
mov
loopne
pop
icebp
mov
rclb
fucomp
jmp
adc
ret
xor
cli
insb
lea
fdivs
pop
jb
ffreep
cld
cmp
ds
arpl
or
in
xor
lods
loopnew
in
xchg
ret
fidivs
push
leave
or
mov
xor
push
pop
adc
mov
or
jmp
int3
mov
sbb
adc
test
inc
mov
ret
and
pop
pop
pop
push
pop
mov
or
add
adc
push
hlt
and
imul
and
mov
icebp
mov
mov
jae
push
lret
mov
sbb
jmp
add
jl
push
mov
pop
pop
je
shll
nop
push
test
and
std
lds
sub
dec
in
std
mov
jnp
xchg
fmull
push
jp
jmp
jecxz
sub
pop
dec
addr16
loopne
movsb
into
lret
pop
xchg
dec
ds
aaa
pop
inc
nop
cmpsl
mov
mull
setno
mov
dec
pop
fistpll
imull
add
dec
outsl
filds
movsb
add
pop
and
cmp
jmp
aam
shlb
cmp
daa
mov
divb
jecxz
add
dec
shll
jmp
imul
push
sbb
cmc
int
into
jb
push
add
push
sbb
lds
test
leave
ljmp
scas
fnstenv
pop
mov
add
nop
jae
fs
cwtl
rolb
cltd
xor
add
imul
repz
lret
hlt
mov
push
stc
push
jp
xchg
fwait
cltd
lret
fidivrs
ret
dec
mov
test
add
xchg
or
inc
icebp
sbb
pop
repz
arpl
lea
dec
dec
idivl
out
xor
je
movsb
sbb
scas
lea
jge
sar
scas
lock
addr16
xchg
pop
or
ja
adc
xlat
jg
call
fwait
subb
mov
nop
cmp
and
push
mov
call
cmp
ljmp
xor
xchg
sbb
movb
test
jnp
mov
xchg
dec
xorb
xor
lods
shrl
cmp
xor
clc
into
ds
and
fdivs
shl
adc
jno
jae
jge
stos
sbb
testl
inc
int3
lds
xor
pop
pop
xchg
mov
cmp
jg
stos
xchg
in
mulb
push
dec
sbb
iret
jbe
pop
in
and
push
pop
aas
out
fbstp
sub
sbb
inc
test
mov
mov
add
int
and
sti
push
aas
mov
xchg
ficomps
pusha
iret
xchg
mov
stos
push
xlat
xchg
test
outsb
out
dec
mov
jl
jmp
mov
lods
xorl
ds
ret
pushf
cli
negb
ret
flds
clc
cmp
dec
inc
mov
hlt
out
pop
jnp
pop
addr16
iret
lret
jmp
lahf
fildl
mov
js
and
data16
addl
jge
and
adc
mov
pop
mov
call
jae
mov
fistpll
mov
ss
mov
push
fdivrl
push
lock
ret
mov
xor
cli
push
xchg
test
xor
data16
fsubrl
mov
rol
mov
jle
sti
out
repz
push
scas
inc
mull
jae
dec
push
sub
cmp
aam
xor
mov
ja
or
mov
mov
test
and
aas
inc
movsb
or
subl
je
test
pop
sti
ficoml
cmp
push
scas
push
sbb
mov
lds
lcall
repz
sbb
ficoml
call
pop
loopne
lea
lahf
inc
push
mov
mov
clc
xor
loope
jge
push
xchg
in
mov
test
push
mov
leave
jns
cmp
dec
and
mov
insb
in
sbb
aas
and
test
xorb
xor
push
cmp
mov
cld
mov
ja
lahf
xor
sbb
mov
cmp
out
popa
lret
stc
and
into
pushf
mov
push
sub
lods
aas
mov
dec
notb
iret
mov
int
push
add
mov
out
mov
xchg
insl
and
sbb
ljmp
and
fcomps
sbb
pop
pop
jle
jns
jg
push
pop
pop
shrl
xchg
movsl
or
lds
inc
dec
shrb
movsb
adc
or
cwtl
int3
js
jmp
mov
mov
data16
orb
mov
xchg
out
xor
ds
push
or
add
outsl
cmc
xor
sbb
pop
mov
push
imul
shrb
aad
iret
loop
add
sbb
pop
mov
adc
inc
mov
mov
es
push
idivb
orl
insl
sbb
pop
adc
push
jae
push
xor
mov
ja
popf
or
es
pop
xchg
cmc
xchg
pop
mov
jae
mov
aam
inc
data16
push
pop
add
pop
xor
ds
fcompp
mov
cltd
icebp
fdivrl
imul
pop
scas
test
arpl
adcb
xchg
lret
imul
repz
rclb
push
inc
imul
adc
addr16
test
push
push
and
fwait
xor
add
daa
loopne
xchg
xor
jge,pt
lea
xor
imul
sub
adcb
rorl
inc
jb
push
jb
rorl
dec
mov
add
push
jp
ret
or
aad
sub
daa
mov
popf
lea
cmp
pop
xchg
sbb
xor
cmpsl
test
in
rorl
cmpsb
fwait
and
mov
sbb
jne
ficomps
or
inc
mov
and
push
sub
inc
add
mov
sub
mov
scas
or
xchg
inc
repz
inc
pop
inc
cmp
in
aam
insb
mov
rcr
jg
roll
cs
push
inc
push
repz
push
push
pop
fadds
jecxz
xor
in
addr16
push
je
inc
imulb
shl
add
add
dec
cmp
mov
je
es
aam
repnz
mov
dec
xor
sub
mov
jecxz
nop
and
icebp
or
lock
mov
cld
mov
adc
test
or
xchg
or
cmp
push
sub
aam
mov
jae
mov
or
xor
orl
pop
dec
xchg
daa
in
stos
je
fs
push
int
aad
imull
cmp
or
inc
dec
mov
sbb
cmpsb
loope
jle
mov
shlb
xor
movsl
jnp
push
push
pop
shrb
aam
mov
mov
dec
imul
jo
cmp
cmp
pop
mov
fcmovu
mov
xor
shll
add
mov
lods
jmp
stos
adc
jp
rclb
push
push
mov
cmp
mov
rclb
loop
enter
push
dec
sbb
ret
or
in
lcall
sbb
js
xor
sbb
push
decl
mov
test
xor
adc
lds
xchg
mov
int
out
cmovno
pop
leave
pop
dec
add
popa
movsl
insl
mov
inc
cmp
jle
add
sbb
or
or
andl
sub
adc
rcl
incb
ret
cmpsl
dec
jmp
imul
mov
out
and
fstpt
enter
lock
ret
arpl
movsl
add
in
fdivrl
gs
fs
lds
mov
enter
addb
rcr
jl
push
xchg
jge
push
pusha
or
mov
xor
push
ror
xchg
pushf
mov
gs
push
rol
sbb
adc
mov
fisubrs
sbb
fwait
les
les
stc
xchg
sahf
pop
cmp
inc
inc
rcrl
gs
mov
inc
sub
pop
push
ret
cmc
jns
fsubp
mov
jno
cwtl
shlb
jne
pop
out
lret
aas
and
movsl
out
push
inc
xor
lds
xor
lods
lahf
popa
hlt
in
divl
push
jmp
mov
out
push
or
push
pop
jp
mov
push
inc
mov
xlat
push
pop
mov
jl
dec
stc
jae
sub
jno
sbb
and
mov
les
in
call
cli
rol
adc
cmp
mov
fbld
daa
sbb
repz
sbb
jae
sub
jg
in
push
jns
pusha
mov
cmc
inc
push
cmpsb
inc
jb
subb
add
ret
fst
mov
jo
pop
dec
jno
or
adc
xchg
lcall
xor
push
fcmovnb
addr16
add
sub
xor
rcll
cmc
hlt
push
inc
cmp
ja
inc
loope
stc
and
adc
jg
outsl
cltd
dec
fadds
xlat
subb
pushf
bound
xchg
push
rcrb
lcall
sahf
roll
pop
inc
jnp
adc
jg
push
push
inc
dec
lret
iret
jno
scas
adc
iret
and
gs
fmull
fsubs
mov
pop
lock
nop
repnz
fsts
inc
mov
mov
ds
cwtl
sub
inc
add
mov
adc
xor
sar
ds
pop
sbb
push
lds
loopne
pop
cmp
pusha
dec
std
add
sbb
push
shll
adc
xchg
mov
movsb
jb
js
cli
mov
movsl
in
les
bound
or
add
ljmp
pop
fsubr
pop
mov
test
mov
or
insl
dec
outsl
xchg
insb
sarb
dec
stos
aam
xchg
pop
push
xchg
addl
fcmovnb
adc
sub
mov
pushf
add
add
bound
rclb
mov
ljmp
movsb
ja
aaa
push
cmc
jmp
arpl
rclb
xchg
flds
jnp
push
fs
mov
lret
pop
call
aad
inc
imul
outsl
xor
mov
xchg
cmp
and
xchg
inc
mov
insl
scas
gs
push
daa
lret
loop
mov
jns
repnz
ret
cmpsl
cmpsl
inc
and
jmp
mov
cs
dec
movsb
inc
test
jnp
mov
lock
sub
insb
and
and
repnz
loopne
cs
mov
sbb
mov
dec
pop
add
vorps
pop
lods
leave
mov
out
cmp
jg
sub
pop
ret
outsb
aaa
mov
fwait
and
loopne
sti
cmc
in
jne
lcall
stos
jmp
cmp
pusha
mov
jl
ret
movsb
push
insl
xchg
shlb
inc
rolb
ljmp
push
mov
mov
stc
and
lods
and
fisttps
add
jmp
jmp
std
in
pop
xor
inc
xchg
sbb
sub
mov
lret
fstpl
cmp
out
cmpsl
ljmp
insl
adc
mov
clc
pusha
fwait
aaa
data16
sbb
ljmp
lods
mov
popf
ret
out
std
es
adc
push
mov
pop
inc
dec
mov
cmp
lea
pop
sub
inc
out
mov
pop
jp
or
stos
pop
dec
xchg
mov
js
add
les
jecxz
or
pop
xchg
xor
icebp
cmp
je
xor
pop
stos
inc
add
xchg
cmpsl
scas
jge
jl
xor
fnstcw
and
and
push
clc
xor
cmp
sbb
jbe
cmp
mov
gs
mov
imul
rolb
lds
in
lcall
dec
fs
sub
mov
or
mov
jg
cmp
push
movsl
in
cmp
jg
or
push
mov
inc
push
cmpsb
jbe
fwait
mov
dec
and
aad
or
ss
xor
movsl
cmp
aam
lret
mov
call
jnp
xor
cltd
add
jne
push
scas
outsl
stc
rcl
scas
cmp
movsl
or
scas
xor
add
popa
lock
dec
mov
ljmp
mov
mov
iret
sbb
adc
pop
cs
sar
mov
lds
stc
sbb
pop
ret
mov
data16
jmp
insl
sahf
mov
cmp
push
fistps
jg
or
xchg
and
xor
movsl
add
fidivrs
loopne
in
or
mov
xor
adc
push
fwait
cmpsb
sub
les
ds
push
jo
pop
xor
inc
jg
roll
nop
mov
sub
data16
arpl
mov
les
xlat
cmc
stos
aas
in
mov
out
popf
sbb
adc
mov
shlb
fsubl
icebp
jno
in
sarl
xor
cmpsb
and
arpl
cwtl
rcrl
or
movsb
lock
adc
dec
call
sub
add
ret
ljmp
aaa
fistpll
or
lds
mov
mov
in
dec
inc
cli
push
std
data16
pop
frstpm(287
aad
ljmp
sbb
jl
and
inc
in
or
ds
scas
mov
jp
push
nop
nop
add
cmp
xor
dec
push
add
cwtl
sub
out
repnz
dec
pop
push
jmp
jo
mov
cmpsl
pop
adc
cmp
subb
mov
adc
outsl
aas
adc
inc
dec
mov
movsl
adc
adc
stos
add
outsb
add
xchg
mov
adc
inc
xchg
das
jbe
cmpsl
jmp
mov
push
xorb
jnp
pop
push
sti
mov
jnp,pn
xchg
and
add
ss
out
xor
xchg
cmp
sbb
mov
loop
and
push
push
popa
aas
les
push
cmpsl
ret
popf
loope
jp
push
push
bound
inc
fcoml
loop
inc
xchg
add
loopne
mov
test
and
insb
sbb
add
dec
cld
push
cld
adc
or
sarl
cmp
cmp
frstor
cli
aam
fnstcw
outsl
aam
mov
xor
lds
pop
mov
scas
push
into
mov
push
hlt
cmpsb
out
daa
scas
jl
cmc
or
mov
fs
cmpsl
ds
jae
add
xchg
into
cmp
mov
repz
shlb
jo
dec
stc
mov
ja
jmp
xchg
push
mov
js
xor
int3
fiaddl
xchg
lret
ja
push
test
daa
not
fwait
xor
cmp
add
bound
cmpsl
jg
data16
xchg
dec
jo
mov
sbb
sub
aam
fnstcw
addl
xchg
jne
ret
xorb
cmp
imull
popa
and
mov
xchg
pushf
or
mov
ljmp
imul
cmp
dec
xchg
inc
cmp
lock
fistps
pop
jnp
shrl
jne
pop
bound
mov
mov
imul
or
mov
sbb
xchg
push
sub
ja
test
shrb
addr16
inc
jmp
pushf
mov
mov
lods
jecxz
push
jbe
in
push
xor
and
test
xchg
add
xlat
sti
cmc
bound
cmp
add
xor
jne
arpl
mov
aas
sbb
imul
popf
push
jns
or
out
ja
jae
enter
or
and
xchg
lret
loopne
sbb
xchg
dec
in
scas
daa
orl
js
inc
xchg
push
ret
or
ret
mov
or
aam
mov
xor
loope
roll
or
add
xlat
out
pusha
xor
xchg
sub
lock
add
pop
int3
xlat
dec
ljmp
inc
xor
out
add
jo
loopne
xor
daa
roll
hlt
cmovb
pop
mov
cmp
adc
fistps
repz
sbb
jp
dec
push
sbb
in
xchg
or
xor
fidivl
dec
or
pop
add
imul
pop
push
xlat
mov
aad
jb
test
fcmovnbe
adc
sbb
nop
adc
leave
fistpll
jp
dec
push
cld
and
push
xchg
movsl
pusha
fnsave
int
xchg
fs
mov
push
ret
cltd
cs
enter
mov
mov
mov
add
jge
mov
js
mov
cltd
leave
dec
mov
adc
lret
dec
cs
outsb
xchg
lock
insl
cmp
shr
xchg
dec
jno
pusha
ret
insl
stc
mov
dec
sub
push
fistl
ljmp
push
sub
xchg
ja
sti
inc
and
xchg
ss
movsl
inc
inc
hlt
jne
jmp
idiv
ret
ret
push
ret
mov
ljmp
add
fst
sbb
cmp
mov
cmpsl
outsl
shll
mov
icebp
jmp
jbe
mov
fadd
jns
adc
cld
std
xchg
pop
add
loopne
loopne
pop
xchg
fists
mov
cwtl
lea
push
and
and
sbb
xor
add
push
xchg
cltd
pop
mov
jge
icebp
push
lea
jne
sub
or
mov
out
xor
push
dec
roll
add
pusha
pop
lret
dec
lods
lock
inc
jecxz
pop
mov
xchg
sbb
mov
fs
divb
aaa
jbe
cwtl
sub
push
jecxz
call
dec
cmp
out
push
adc
fidivrl
jg
inc
pop
mov
bound
addr16
cmp
shll
cwtl
pushl
and
xchg
mov
out
xchg
ret
xchg
fdiv
xor
sbb
jmp
cmp
jmp
imul
sub
movsl
outsb
lcall
into
cmp
xor
cli
mov
dec
jle
outsb
dec
lahf
outsb
jmp
pop
ljmp
test
movsb
and
jo
int
adc
mov
outsb
sub
pop
mov
aam
mov
divl
mov
push
dec
ror
imul
cmp
add
mov
mov
jle
push
imul
cld
lret
mov
cmp
xchg
inc
pop
cmp
jl
inc
fcmovnu
xchg
mov
repnz
jns
sub
xchg
xchg
mov
lret
sub
cli
cld
pop
xchg
jno
inc
push
sbb
outsb
scas
jae
mov
pop
mov
arpl
test
insl
and
pop
pop
into
test
lahf
ja
fidivl
stc
sti
in
push
adc
lds
mov
dec
xchg
dec
data16
or
enter
pop
push
ja
xchg
mov
lret
add
mov
mov
js
add
jbe
fwait
lahf
sub
test
lret
popf
jns,pn
xchg
push
in
xchg
std
lret
fdivrs
jecxz
sbb
push
xlat
add
data16
adc
inc
mov
sub
cmp
pop
dec
dec
jle
mov
mov
add
or
fnstenv
hlt
xor
or
xchg
loop
call
or
jl
lret
xchg
hlt
notl
vmread
in
sub
push
jp
int3
xor
arpl
mov
mov
iret
lods
hlt
cmc
loope
xchg
cmp
xchg
out
dec
roll
movb
mov
dec
jne
jl
imul
fimuls
gs
std
xchg
into
mov
fsubrs
jbe
repz
cwtl
data16
mov
mov
mov
out
and
ds
jle
jg
mov
lret
clc
aas
lock
loopne
pop
lods
out
pushf
sub
shl
xor
daa
xchg
pop
or
enter
push
adcl
inc
jge
rcrb
bound
out
fcomps
or
push
push
fcoms
test
test
pop
xor
out
add
xchg
mov
int3
sub
jns
fnsave
push
sbb
cld
mov
pop
mov
push
pop
aas
mov
dec
pop
repnz
imul
xor
lahf
fstpl
sbb
mov
je
adc
and
or
cmp
enter
insl
pop
jge
sub
pop
mov
dec
movsb
push
popf
mov
inc
lods
pusha
lods
loope
call
jno
jae
sub
push
jl
pusha
cmp
dec
shll
mov
sub
ljmp
mov
xchg
xchg
clc
xor
cs
jns
sub
in
sub
out
cmp
and
sub
and
data16
into
push
inc
pop
outsb
mov
inc
mov
push
mov
add
mov
jne
int3
dec
push
gs
xor
test
pop
cmpsl
push
push
scas
pop
shl
lret
mov
sahf
fidivl
inc
test
cmp
mov
sbb
xor
push
xor
sarb
frstor
xchg
icebp
xor
and
mov
mov
std
aad
lahf
jo
repnz
pop
orb
aam
int
imul
cmpsl
xlat
jge
stos
mov
lock
jmp
ljmp
mov
and
nop
mov
mov
ja
rcrb
popa
aad
gs
idivl
aaa
testb
xlat
xchg
push
iret
out
fidivs
pop
pop
pop
loop
push
sahf
mov
inc
xchg
mov
add
mov
pop
jne
add
mov
in
call
push
dec
cmpsb
cmpl
push
sbb
pop
xchg
inc
pop
aaa
cmp
adc
lods
mov
or
hlt
mov
pop
pop
push
fwait
or
inc
negl
jnp
sar
and
mov
out
fsubl
sbb
mov
mov
jnp
cld
push
std
add
les
cmp
lcall
loop
andb
data16
nop
adc
call
xor
jbe
ret
inc
out
repz
shl
cltd
repnz
in
pop
pop
inc
mov
and
pop
mov
jne
push
shlb
fcom
xchg
mov
mov
std
add
fists
inc
cmp
cmpsb
and
and
jp
inc
in
in
fistpl
js
or
jge
mov
les
or
popa
es
jnp
cld
mov
cmp
jmp
jecxz
sub
pushf
or
imul
stos
add
cld
rcr
icebp
cwtl
adc
das
aad
add
sahf
mov
push
jb
pusha
lds
popf
push
jge
dec
loopne
or
hlt
push
or
xchg
rcr
push
sbb
fldcw
cmp
xlat
in
inc
pop
pop
and
cwtl
bound
loop
adc
sbb
mov
negb
mov
fwait
cmpsb
dec
fldl2e
push
mov
pop
lret
mov
jl
imul
cli
repz
fadds
push
add
jecxz
dec
jne
jecxz
dec
test
jb
mov
daa
mov
mov
into
movsb
jno
cli
scas
mov
subl
mov
sub
push
and
ss
mov
dec
mov
out
fwait
ja
outsl
mov
inc
cmp
lahf
sbb
jbe
inc
ret
mov
xchg
repz
les
fildl
xlat
loope
pop
sahf
pop
outsl
ljmp
sbb
and
clc
sahf
xorb
insb
cmp
filds
ja
mov
sbb
and
repz
ret
sbb
aam
or
xchg
ja
into
jns
xor
arpl
mov
mov
adc
mov
pusha
popa
ljmp
repnz
out
sub
sub
push
lods
fsubl
xor
lods
inc
and
repz
push
add
mov
cmp
xor
inc
cmp
aam
push
mov
inc
and
addr16
xchg
jae
mov
mov
fstl
xor
dec
into
add
push
les
sub
out
sbb
sub
lock
sbb
cs
outsb
mulb
pop
mov
lahf
dec
pushl
mov
pop
loope
xor
mov
sub
aad
lret
clc
mov
xchg
dec
xor
lods
in
jbe
xor
jecxz
push
push
sbb
enter
mov
bound
mov
test
mov
xchg
inc
cmp
gs
mov
or
aad
mov
aaa
mov
orps
dec
cmp
repnz
and
jl
das
dec
cwtl
jg
cmp
fs
cmc
mov
cwtl
xor
ret
ret
in
js
out
xchg
ret
sbb
int
pop
pop
gs
aas
repnz
inc
mov
std
and
jbe
cmp
call
adc
and
ljmp
movsb
pop
cmp
pop
pop
lret
nop
push
mov
xor
out
loope
pop
pop
adc
xor
fwait
cld
pusha
aam
lea
imul
dec
mov
sahf
dec
sbbb
mov
push
test
sti
stc
xchg
ljmp
mov
sbb
push
cmp
mov
pop
jb
lods
adc
jbe
xchg
cmp
shlb
test
and
ss
fcmovnb
jecxz
shl
movsb
jno
nop
rolb
push
mov
movsl
mov
mov
out
xchg
mov
add
xchg
les
fcmovnb
fsubl
jb
sar
cmp
inc
jnp
pop
pop
cmp
loop
sub
fwait
das
mov
sub
repz
mov
adc
mov
mov
mov
ljmp
in
xor
jg
rorb
mov
add
push
rcrb
popw
push
inc
pop
stc
in
jbe
push
dec
mov
xchg
test
dec
push
loop
xchg
or
dec
ss
fwait
pop
cmp
jg
outsb
lret
pop
adc
dec
stc
cmp
fcmovbe
xor
addr16
cmp
popa
mov
pop
shrb
bound
data16
test
or
adc
sub
data16
out
sti
shrb
leave
jg
xchg
lret
adcb
test
push
xor
cmp
cmpsl
mov
lahf
fistpl
sub
dec
sahf
sbb
cli
insl
fwait
pop
jne
jge
xor
inc
js
test
mov
pop
mov
mov
in
add
push
xor
or
pop
sbb
adc
ljmp
movsb
ret
or
sbb
ffree
cmp
mov
xor
mov
jns
adc
into
mov
add
xchg
ret
lods
jo
aaa
sbb
fnstenv
jno
lret
rclb
out
inc
sub
cwtl
leave
push
xchg
lret
inc
mov
or
cmp
jge
in
xor
je
inc
xlat
adc
sbb
xchg
loop
aas
add
push
push
mov
jno
xchg
mov
pop
in
pop
fwait
shll
fucomp
dec
imul
or
xlat
out
and
dec
enter
xchg
in
and
add
rol
andl
cmp
sub
cmp
in
stc
movsb
and
push
iret
mov
add
adc
aas
std
xchg
pusha
loop
mov
sub
jne
push
or
scas
add
lods
inc
xor
loopne
rclb
pushf
into
shlb
cld
xor
jns
stos
test
out
cmpb
hlt
mov
scas
sub
iret
and
add
stc
outsl
mov
stos
shll
mov
mov
cmp
ret
or
incl
jae
and
pop
xchg
int3
mov
xchg
sbb
pushf
mov
and
adc
dec
push
aad
mov
fsubrl
mov
adc
loop
daa
xchg
push
icebp
rcrb
add
push
sub
repnz
sub
adc
and
lret
or
insb
push
into
cmp
add
lods
mov
testb
iret
test
idivl
scas
mov
xchg
clc
jne
pop
adc
in
imull
stos
iret
push
pop
je
rorb
push
ret
dec
std
mov
push
test
xor
pop
ss
je,pt
fiadds
mov
lret
iret
ja
inc
daa
mov
out
mov
outsb
rcl
add
xlat
xor
fucomi
mov
mov
lret
arpl
mov
repz
add
shll
clc
js
mov
xchg
push
shl
test
fisttps
fwait
jle
movsl
xor
mov
xlat
pop
xchg
mov
dec
jle
push
add
mov
adc
fdivl
inc
cmp
out
dec
mov
add
mov
in
popf
inc
jge
jne
movsl
pop
clc
mov
mov
adc
xchg
popl
adc
mov
pop
xchg
fistl
add
inc
cmpsb
pop
mov
mov
cltd
jns
jl
mov
std
cmpsl
fwait
loopne
push
pusha
xchg
scas
and
jp
dec
lcall
xchg
xchg
mov
inc
mov
std
mov
fmul
pop
dec
sub
mov
add
xlat
or
inc
xchg
adc
add
jge
push
sub
daa
or
xor
mov
scas
cli
es
in
inc
xor
jns
imul
sub
fucomip
ljmp
outsb
adc
iret
out
aas
dec
shl
psllw
inc
test
mov
add
jbe
sub
mov
ljmp
or
adc
imul
idivb
lods
or
push
ds
movsl
in
sbb
xchg
sarb
inc
cltd
add
mov
add
mov
aad
fucom
adcb
shrb
pop
pop
addl
sbbb
dec
cli
leave
les
jg
int3
jb
in
lods
movb
sbbb
in
inc
mov
inc
jg
jge
inc
fistps
lock
sub
daa
nop
in
add
movsb
pop
push
inc
pop
xchg
mov
jno
adc
cmp
and
outsb
call
fsubp
outsl
cs
loop
jmp
push
or
xchg
pop
movsl
dec
out
jmp
mov
movsb
sbb
push
xor
inc
pop
in
pop
dec
fnstcw
jbe
pop
lret
and
mov
sti
aas
and
or
inc
int3
sub
mov
push
les
mov
or
shrb
pushf
xlat
pop
aad
sub
les
pop
push
ret
mov
sbbb
lcall
das
sbb
inc
or
dec
mov
ret
loope
jl
push
fldz
or
scas
jecxz,pn
insl
mov
pop
andl
fwait
xchg
cmp
mov
sahf
loope
addr16
pop
jle
sbb
outsl
rorl
scas
dec
out
fistl
loop
and
outsl
xchg
mov
push
iret
hlt
push
jnp
sub
hlt
or
leave
xor
je
or
pop
or
jae
push
mov
push
cmp
jae
and
aam
test
xchg
mov
stos
jne
imul
push
arpl
and
mov
adcb
jne
pop
mov
inc
in
adc
xchg
mov
pop
pop
mov
ss
or
add
sub
stos
aam
push
sbb
ret
push
push
repnz
pushf
mov
xor
stc
add
add
add
fldenv
mov
push
push
mov
inc
sti
mov
adc
inc
sbb
mov
jg
cmpb
mov
insl
clc
mov
mov
fstl
iret
mov
mov
shll
out
mov
push
in
and
rol
xchg
int3
add
fsubrs
push
lret
imul
dec
lret
push
mov
sbbl
mov
scas
jge
das
cmpsl
hlt
fstps
jg
test
sbb
pop
jne
sbb
mov
xchg
sbb
xor
insb
int
test
adc
xor
push
popf
addr16
xchg
ss
adc
popa
hlt
sbb
outsb
and
or
cmpsl
lcall
jns
dec
inc
xor
jp
xchg
dec
out
mov
xchg
sub
mov
or
sub
adc
jl
icebp
xchg
and
jl
mov
in
and
cmpsb
rorl
ss
aas
or
inc
and
xchg
daa
arpl
jle
fmull
mov
mov
jmp
dec
into
movsl
cltd
mov
into
loop
lods
rcr
cmpsl
cld
orl
data16
cmpsb
push
nop
bound
xor
push
je
mov
leave
pop
xor
mov
sbb
negb
and
fwait
stc
adc
push
sub
jo
pop
mov
fidivs
sub
fstps
add
mov
fimuls
cmp
jg
ret
ret
mov
movsb
cmpsb
lods
scas
fnstsw
fsubrs
pop
xchg
ret
scas
into
push
push
mov
jle
mov
dec
inc
aas
into
pop
cmp
jg
or
mov
push
sbb
into
fldt
xchg
mov
cmpsb
push
das
jg
jg
xchg
jb
xor
bnd
dec
cmp
sub
dec
dec
mov
fimull
mov
dec
dec
cli
repz
insl
mov
jge
fstps
movsb
iret
jecxz
push
in
mov
jne
push
clc
sub
orl
gs
cmp
push
cld
push
movsb
mov
lods
pushl
pushf
xchg
jbe
in
pop
fcomps
dec
outsl
ds
ds
xlat
jbe
cwtl
xchg
dec
sbb
test
adc
push
and
pop
int3
inc
cltd
sbb
cwtl
jb
into
mov
pop
fcoml
xchg
jmp
or
imul
shrb
mov
popf
push
mov
movl
data16
out
and
icebp
in
adc
push
movsb
in
cmp
shll
movsl
ljmp
push
ficompl
std
jae
xor
jbe
pop
xchg
aas
pushf
mov
mov
cltd
jp
rcl
inc
pop
in
movsb
aam
gs
movsb
xchg
sarl
imul
cmp
xor
insb
gs
in
push
dec
mov
jle
and
adcb
int
sub
idivl
lcall
add
je
xor
arpl
mov
mov
pop
mov
lret
jecxz
and
adc
mov
and
cmp
pop
jns
mov
push
jns
mov
cwtl
stc
adc
dec
xor
sti
popf
mov
lahf
push
add
jle
or
inc
cmp
fdivrs
insl
xlat
jae
mov
sbb
sub
outsl
iret
rorb
lret
sub
lret
dec
imulb
in
add
and
sti
fwait
dec
ret
bound
cmpsl
int3
nop
popa
lahf
ret
fnsave
pop
imul
pop
cld
or
and
mov
adc
gs
xchg
mov
cmpsl
cmc
int3
mov
das
iret
in
test
fwait
sbb
ljmp
addr16
cmp
sub
push
or
pop
adcl
adc
dec
add
mov
aam
xchg
fstl
js
jo
incl
xchg
push
or
fsubs
shlb
cmp
out
test
mov
rclb
adc
in
ss
and
jecxz
mov
mov
or
push
xor
mov
xor
es
mov
test
pop
cmp
mov
mov
mov
xchg
gs
jo
mov
mov
fucom
xchg
mov
xor
bound
stos
test
jae
fwait
dec
int3
inc
roll
pop
or
lret
ds
mov
popf
jle
popf
pop
std
sub
xchg
inc
rol
xchg
int3
pop
mov
nop
push
out
in
dec
icebp
pop
out
fimuls
mov
push
sbb
shll
jg
mov
ljmp
jo
test
sub
js
loop
fildl
mov
outsl
push
daa
and
ret
fucomi
stc
jae
cmp
sahf
mov
add
fisubrs
pop
jbe
cs
mov
out
fimuls
out
xchg
inc
inc
jge
xor
lock
cmp
cmp
mov
cmp
sbb
add
fists
cmpsb
aas
mov
mov
out
mov
mov
inc
lea
jno
jge
arpl
sbb
imul
int3
fwait
pop
xor
adc
add
mov
enter
stos
or
cwtl
and
add
xchg
enter
jo
and
inc
les
and
jp
adc
sbb
ja
out
fxch
jg
imul
xor
mov
xchg
sub
pop
mov
roll
jb
enter
test
push
sub
and
jno
lea
test
push
fdivr
jae
fsubrl
sub
cmp
ja
fldl
inc
ficompl
gs
cmp
in
cltd
mov
and
shlb
sti
lret
fs
pop
mov
dec
dec
or
lret
push
or
inc
sub
pop
dec
mov
pop
cmp
ret
mov
inc
cmp
pop
movsl
jb
push
xor
call
test
xchg
leave
adc
sub
push
cmp
jno
test
and
cmpl
ret
icebp
push
push
cmp
les
jle
ss
loope
bound
fs
arpl
mov
daa
pop
sbb
dec
xchg
test
shll
dec
jnp
add
daa
pop
mov
jl
push
icebp
pop
out
inc
das
in
scas
xchg
int3
mov
push
dec
call
test
repnz
hlt
outsb
push
sub
xchg
mov
sbb
add
mov
xchg
dec
mov
in
addl
xchg
popf
es
sub
outsb
arpl
jns
pop
sbb
in
sub
pusha
jecxz
mov
sbb
and
idivb
mov
sbb
add
mov
jmp
cmpsb
adc
cmp
arpl
pop
dec
pop
xor
sbb
jo
repnz
xor
fcmovb
sub
xor
ljmp
std
push
fbld
or
xchg
jno
ja
lret
mov
push
sarl
dec
add
rcll
fs
and
rcrb
inc
ljmp
out
es
pop
dec
sti
insl
mov
ljmp
xor
out
loop
ret
hlt
lret
test
pop
pusha
or
sbb
rol
push
incl
jb
mov
iret
jnp
lods
lret
inc
cmpsb
mov
insb
lret
cmpb
sub
add
call
xchg
pop
rclb
subb
mov
lock
sub
push
js
clc
repz
repnz
jae
orl
cmp
loopne
xor
popf
sbb
stc
mov
fcmovnb
mov
sbb
xor
divl
inc
push
sar
sub
mov
mov
test
pusha
push
pop
xor
xor
add
jmp
xchg
and
daa
add
cmp
rcrb
test
ja
stc
out
mov
aad
outsl
fstps
adc
inc
lcall
jmp
pop
add
bound
outsl
add
dec
pop
frstor
push
mov
jecxz
add
mov
sub
sub
enter
loopne
adc
hlt
shrl
lods
ss
pop
inc
push
jecxz
call
loop
fdivrp
shll
scas
adc
inc
cld
inc
sub
cmp
fcomi
cmpsb
xchg
jae
data16
cmc
popf
mov
and
fiaddl
mov
sub
pop
outsl
xor
sub
push
xchg
and
jno
push
cmp
mov
ja
int3
add
popa
notb
xor
stos
adc
je
dec
add
arpl
test
mov
mov
xor
xchg
sbb
das
fistpl
push
cmp
push
negl
push
js
loope
pop
pushf
or
cmp
lcall
sub
mov
test
rol
fiadds
lea
jmp
mov
out
ffree
jg
fnsave
lret
cmp
xchg
mov
leave
lret
push
dec
and
xchg
enter
rcrb
hlt
push
push
mov
ljmp
std
test
pop
jnp
dec
les
mov
dec
inc
cmpsb
jge
wbinvd
jmp
repnz
insb
push
sti
jle
jmp
cmp
cmc
push
test
lret
out
lahf
lret
xchg
xor
ljmp
mov
es
and
push
jnp
in
shr
sbb
repnz
xor
push
adc
push
and
sarl
jp
aas
add
cwtl
repz
lock
lahf
mov
fs
stc
lcall
or
icebp
aad
out
in
xor
cwtl
std
jns
aaa
jmp
leave
mov
push
scas
dec
pop
test
stc
push
xchg
or
shlb
cs
mov
imul
xchg
aam
std
jbe
ret
jne
mov
cmpsl
in
lret
add
cmpsb
jb
shl
mov
sarb
jecxz
es
in
add
js
pop
push
or
mov
pop
stos
aaa
movsl
xchg
and
mov
outsl
and
and
pop
xchg
pushf
jnp
xchg
frstor
rcrb
lds
adc
clc
ljmp
ja
cs
bound
pop
lods
xchg
cwtl
and
mov
or
sti
scas
jno
push
sub
jmp
lret
adc
cmc
mov
or
adc
mov
mov
test
add
sbb
jmp
cmp
mov
push
dec
push
jnp
dec
xor
aad
sub
testb
fmull
out
adcl
inc
adc
mov
adc
dec
add
inc
addl
flds
or
sbb
jno
fwait
xchg
lahf
ss
inc
mov
sub
pop
aam
mov
test
cmpsl
loope
sub
in
push
cld
dec
xor
jb
daa
cltd
mov
shll
roll
leave
sub
lea
sub
jp
icebp
jnp
pusha
mov
inc
loope
aam
lcall
loopne
je
call
sub
or
std
cmp
insb
xchg
lods
push
jge
adcb
push
cwtl
loopne
jp
jo
and
inc
mov
xor
mov
inc
sub
pop
mov
add
inc
rcl
ret
xchg
and
out
xchg
arpl
fcmovbe
mov
jo
or
inc
inc
jg
shrb
lds
aas
mov
test
imul
ret
pusha
pop
idivl
and
setns
pop
xlat
xchg
shll
lock
mov
xor
mov
ret
push
mov
mov
push
repnz
je
cmpsb
icebp
sbb
aam
ret
scas
push
popf
sub
mov
xchg
xchg
mov
xchg
push
sbb
scas
sbb
insl
pop
in
pop
aas
jl
mov
mov
inc
pop
js
cmp
and
test
lods
repnz
ljmp
dec
lods
mov
dec
or
add
mov
insb
or
mov
stos
mov
sub
sub
mov
mov
inc
ja
sub
sbbl
dec
fwait
push
subl
xor
ja
jle
mov
test
roll
les
jge
pushl
cwtl
out
mov
xlat
xchg
lds
lock
repnz
mov
and
mov
data16
out
rclb
int
lods
mov
int3
jbe
jl
fadd
sub
std
into
popa
repnz
add
adc
mov
push
dec
fs
jl
lods
loop
fadds
xchg
cmpsl
dec
out
dec
int3
outsl
dec
cmpsl
pop
mov
scas
cmc
into
mov
fldt
lret
xor
rcll
cwtl
add
sbb
imul
push
jb
ret
mov
movsl
jnp
add
dec
cmpsl
lahf
or
or
das
and
add
jge
into
stos
pop
xor
push
xchg
iret
jns
sti
ror
iret
adc
sub
or
push
and
cmpsb
jge
ret
sbb
push
hlt
and
and
aaa
pusha
cmp
push
cltd
mov
test
jmp
movsl
jle
mov
mov
insl
jl,pt
mov
in
pusha
or
and
popf
push
stc
sbb
push
push
jl
outsb
push
jbe
inc
xchg
sti
lret
mov
mov
es
insb
and
and
dec
aad
xor
adc
mov
pop
movsl
fildl
mov
sahf
and
cwtl
push
sub
cwtl
daa
push
mov
mov
sub
cmp
jecxz
ss
or
or
mov
mov
aad
mov
pop
xor
imul
jne
jg
mov
sbb
inc
dec
xchg
dec
xchg
test
in
mov
loopne
xchg
push
scas
das
adc
dec
test
test
ds
addr16
push
iret
arpl
and
imul
jb
aas
pop
adc
push
in
sbb
idivb
imul
imul
movsb
inc
idiv
stos
dec
hlt
rclb
outsl
popa
add
cmp
jns
cmpsb
leave
mov
pushf
std
sub
push
in
sub
ret
les
fistps
inc
outsl
out
rcrl
and
xlat
and
loop,pt
adc
arpl
and
and
inc
into
xchg
lods
sub
jno
fcoms
fwait
dec
pop
mov
mov
lahf
fucom
adc
sbbl
or
fwait
lahf
in
mov
in
push
adc
mov
scas
aad
std
pop
shrl
push
adc
adc
imul
mov
adc
xor
sbb
int
or
xlat
test
cmp
int3
out
test
cmc
pusha
push
lods
xchg
mov
mov
fsubrs
and
or
sbb
shll
mov
jl
js
push
push
pop
xchg
jae
push
xchg
push
sbb
cmp
stc
lods
mov
cmp
imul
imul
out
sub
fsubp
push
imul
push
cmc
hlt
fs
push
test
loop
test
sbb
aaa
cmp
arpl
jae
sub
pop
or
fisttps
jns
mov
jb
or
lar
cmpsl
iret
test
cmp
cld
mov
pop
cmp
inc
addr16
fs
sub
addr16
pop
inc
push
mov
mov
movsl
xor
and
jmp
mov
sub
inc
inc
ds
mov
jge
and
push
fiadds
jp
repnz
and
aas
lret
add
xchg
cmp
mov
mov
int
jmp
fld
push
rdpmc
movsl
stc
shll
push
inc
mov
aaa
add
rcr
mov
mov
test
lcall
in
jge
and
pop
data16
sub
sbb
scas
test
aas
mov
arpl
mov
pop
mov
add
fdiv
jnp
je
sbb
or
sbb
pop
or
or
mov
mov
ret
add
or
jbe
test
jae
add
nopl
mov
adc
fisubrl
adc
decl
dec
pop
pop
nop
sbb
mov
jns
rorl
xor
incl
xorb
outsl
cmp
hlt
clc
ret
leave
fcomps
xlat
mov
jl
and
and
scas
adc
mov
dec
xor
pop
ja
xchg
xchg
jae
mov
fstp
dec
push
jbe
mov
and
fs
push
pop
lcall
sbb
hlt
fwait
repnz
lcall
mov
daa
jb
mov
ljmp
fistpll
push
pop
adc
sub
mov
inc
les
out
jp
mull
cmpsl
sbb
cmpsl
or
int
and
xor
clc
cmc
mov
jnp
daa
gs
popf
xlat
pop
rclb
cmc
cmp
jbe
push
daa
cmp
rcrl
out
xor
lret
jae
cmp
enter
sti
ss
stc
xchg
cmc
mov
filds
test
insb
pop
test
stc
mov
pop
sti
inc
aam
int3
add
popf
xor
insb
jb
test
inc
xchg
adc
add
and
inc
adc
sub
in
into
movsb
cli
sahf
pop
sub
cmpsl
or
pop
test
stos
sarl
cmp
push
cs
sbb
xchg
hlt
shll
push
fiaddl
dec
nop
icebp
out
out
mov
aad
loopne
jl
pop
mov
outsl
xor
icebp
cltd
mov
insb
addr16
sub
lcall
dec
js
rorb
clc
and
pop
scas
xor
adc
lods
pushf
mov
fsubrp
loopne
jb
imul
ret
into
test
test
adc
ljmp
out
movsl
mov
ss
ds
add
nop
sub
mov
lret
fiaddl
cltd
xor
in
push
cmpsl
cmp
push
outsb
cmpsb
lahf
sti
xor
stc
ret
lods
jp
dec
xor
xor
push
jae
in
stc
pop
lods
push
adc
pop
ret
xorb
daa
push
call
xlat
sbb
cmpsl
sbb
cmp
pop
fsts
add
adc
xor
jle
ja
mov
das
add
jne
daa
jns
or
mov
push
mov
jge
aas
int3
sbb
and
shr
imul
mov
aaa
jnp
adc
sbbl
out
movsb
fstpt
lock
jge
jae
jno
inc
ja
inc
into
push
xchg
and
movsl
cwtl
std
loope
jno
xchg
dec
xor
icebp
imul
mov
adc
add
sub
push
inc
popa
rclb
and
and
pop
stc
xchg
shrb
adc
in
lods
sbb
lods
adc
mov
roll
pop
imul
add
push
add
xlat
repz
adc
mov
mov
cli
jbe
add
sub
mov
lret
popa
mov
add
bound
insl
dec
mov
iret
pushf
pop
notb
aas
nop
xchg
rorb
loope
dec
mov
mov
sub
cmc
mov
testl
scas
mov
ja
ds
fimull
stos
cmp
jle
or
dec
inc
mov
jno
rcl
pop
lods
fsubrs
in
stc
movsl
enter
push
sbb
pop
sbb
aad
sbb
xor
mov
dec
call
cmp
fisttps
lds
cmp
inc
cmc
cwtl
out
arpl
mov
das
arpl
out
mov
mov
es
pushf
inc
scas
lods
fistps
int3
scas
inc
dec
lock
mov
cmp
mov
mov
jne
or
js
in
fistps
mov
loope
fwait
aas
psadbw
ss
or
pop
cld
cltd
xor
bound
test
cmp
fbstp
ja
xchg
jns
into
ss
fidivs
enter
test
in
mov
and
push
mov
adc
dec
xchg
lods
add
sub
pop
cld
es
mov
jecxz
gs
mov
mov
pop
add
ret
sahf
jbe
and
stc
cli
aaa
ret
movsl
sub
negl
stos
sub
fistps
sarb
mov
aas
xchg
movsb
rorb
das
push
inc
and
cmp
inc
repnz
imul
cwtl
inc
mov
push
mov
lea
xchg
int3
call
lret
push
rolb
mov
push
loopne
or
inc
dec
xchg
cs
mov
push
cmp
adc
add
orb
inc
daa
aas
jp
mov
sub
mov
xchg
shrb
pop
sub
daa
aad
test
xor
and
loopne
mov
shlb
dec
into
mov
sti
xor
push
sbb
lret
dec
pop
rorb
fnstcw
movsb
mov
call
xchg
push
out
iret
xor
insb
int3
mov
inc
inc
repz
add
loope
gs
mov
test
cmp
aas
jle
jbe
shrb
add
lds
and
mov
add
orb
punpcklbw
bound
in
les
xchg
mov
push
xchg
pop
pop
cli
mov
ret
inc
gs
push
insl
repz
mov
jnp
mov
jg
cmp
repnz
push
cli
sbb
adc
add
inc
sarl
jmp
les
adc
dec
hlt
push
mov
cs
mov
outsb
jp
jns
insb
or
gs
pop
or
push
add
inc
jle
add
sbb
mov
sarb
mov
lcall
jae
pop
lds
mov
in
mov
cmp
sub
movsl
cmpsb
push
fisttpll
nop
adc
or
mov
cmpl
mov
mov
sub
lea
out
pop
mov
xchg
sub
icebp
lock
lds
push
daa
out
addb
test
jge
mov
mov
mov
loopne
testb
testl
xchg
rolb
mov
add
xchg
sahf
pop
push
jge
mov
sub
mov
das
cs
and
push
dec
nop
and
stos
cld
fildl
push
test
xor
roll
daa
cld
pop
fidivrl
adc
inc
push
jnp
enter
sbb
imul
iret
adc
outsb
jg
pop
xor
jge
sbb
xor
rcl
and
cwtl
ja
sub
call
andb
daa
xlat
sti
inc
xchg
ja
xlat
out
cmp
jg
push
mov
push
xchg
cmp
xor
rcrb
adc
mov
or
sub
dec
pop
out
xchg
mov
sbb
inc
fcomip
out
repnz
es
push
pusha
pop
mov
pop
lahf
imull
int
or
dec
or
arpl
jae
cmp
out
fwait
outsl
mov
cwtl
aas
mov
xor
mov
xor
cmp
inc
filds
lea
push
xor
test
sub
mov
xchg
mov
jge
jle
orl
out
push
adc
mov
outsl
push
push
or
dec
jae
test
jmp
sub
and
shl
xchg
push
or
jg
pusha
aaa
test
sub
ret
adc
shr
jne
pop
push
lods
xor
ret
push
or
lret
add
push
inc
xchg
adc
jge
mov
cmp
std
add
adc
mov
out
xchg
outsl
je
add
push
pushf
shrb
cmp
fst
test
xor
ss
nop
sub
je
pop
mov
jl
cmpsb
hlt
or
mov
insb
sbb
pop
jno
lcall
pop
inc
jbe
cmp
stos
js
lock
push
in
pop
dec
test
inc
lods
mov
inc
xchg
mov
cmpl
mov
data16
push
dec
test
inc
ret
sarb
clc
pop
pop
push
pop
pop
add
dec
stos
scas
mov
out
pop
and
ret
lods
scas
inc
rolb
add
and
or
xchg
xchg
enter
sub
fstps
icebp
mov
ja
jmp
sbb
inc
sub
sbb
stos
rorb
xor
sub
sub
movsl
ret
test
or
sub
and
adc
in
mov
add
enter
or
ljmp
test
xchg
aas
cmp
or
inc
arpl
pop
xor
push
or
xor
push
add
pop
xor
inc
inc
dec
mov
dec
sti
sbb
adc
and
inc
push
movsl
push
inc
clc
jecxz
push
mov
test
jp
inc
sub
push
dec
mov
cwtl
fdivs
daa
mov
std
jae
repz
cltd
enter
aas
jo,pt
out
push
xor
mov
xor
imul
add
es
test
loop
and
popa
sub
mov
es
in
iret
rcrb
or
fwait
idivl
loope
inc
mov
addl
adc
clc
xor
mov
call
cmp
in
int3
or
lock
xor
mov
inc
xchg
out
sbb
xor
xchg
aas
rcrl
cmp
lret
pop
or
push
sub
cmp
dec
fbstp
mulb
mov
inc
leave
xor
pop
andb
pop
stos
mov
xor
xchg
call
scas
cmp
enter
mov
mov
xlat
pop
mov
lea
and
jecxz
inc
jae
mov
lcall
in
mov
push
add
and
xchg
dec
gs
ss
ret
push
mov
mov
repnz
add
lcall
mov
mov
xchg
mov
sti
jmp
and
mov
sbb
ret
inc
loop
lcall
cmp
ja
in
mov
jp
adc
push
cmp
fstl
jmp
ds
pop
loope
cmpsb
dec
xchg
jmp
sub
jns
out
mov
mov
enter
ja
and
int3
dec
push
jno
mov
fcoms
jge
xor
popf
inc
lret
rcll
mov
popa
sub
jge
repnz
fcmovu
add
mov
dec
inc
gs
sti
mov
das
dec
fsub
sub
leave
inc
sbb
and
sub
cmp
outsb
push
push
jbe
repnz
ss
rcrb
cli
cmp
mov
xchg
push
add
fildll
push
shll
and
mov
fs
cs
mov
aad
xchg
adc
inc
xor
jns
xchg
adc
inc
add
xor
mov
and
mov
and
xorb
repnz
push
in
mov
je
jnp
pop
sub
xlat
stos
mov
cwtl
test
push
pop
fiadds
enter
xchg
iret
xchg
dec
es
adcl
dec
dec
mov
and
mov
jg
mov
mov
lcall
pop
sbb
arpl
or
xorb
iret
mov
std
das
popf
out
mov
push
inc
xor
fbstp
mov
ret
stos
xlat
mov
push
inc
in
fistl
and
out
outsb
fbstp
ret
movsl
dec
push
out
lea
xchg
xlat
sbb
or
mov
xor
xchg
movsl
xchg
fsts
mov
stc
fmuls
or
je
out
test
dec
cmp
inc
outsb
imul
adc
push
fdivrs
fsubs
mov
scas
jns
xor
xor
sarl
cltd
push
inc
cld
mov
ss
sub
xchg
add
mov
repnz
testb
push
mov
sbb
sbb
iret
addb
negl
addr16
or
cwtl
ret
orl
popf
xor
into
or
cmp
xor
push
and
out
aaa
pop
in
xchg
notb
and
push
fwait
inc
mov
in
aaa
adc
or
fsubr
push
cmp
mov
sbb
aaa
jg
movsl
jl
popa
push
aad
into
dec
nop
outsb
sbb
push
test
push
in
adc
daa
sarl
xor
adc
sub
notl
enter
sbbl
movsb
cmp
dec
and
sub
outsl
jg
rorl
out
fsubrl
jns
icebp
xor
leave
cli
sub
rclb
mov
test
into
jae
ficoml
jg
test
cmp
and
adcl
push
add
push
lods
mov
lahf
ficoms
pop
add
mov
xchg
mov
lret
out
or
add
cld
mov
jg
mov
mov
shlb
repnz
jnp
out
xchg
out
aam
xchg
rcrb
loopne
mov
lods
ja
fistpl
or
das
jno
push
jns
decl
outsb
adc
ja
fnstsw
loop
fs
cmpsb
jno
js
cmp
rcrb
xchg
pop
push
movsl
addb
inc
repz
inc
in
sub
and
scas
and
pop
andb
sbb
arpl
push
xchg
pop
mov
ss
xor
lds
and
lea
push
add
mov
xchg
sub
sub
negl
cmp
mov
and
add
aam
sub
mov
aam
cwtl
out
jg
ds
in
clc
jmp
xchg
js
loope
addr16
nop
dec
sarl
cmc
cld
mov
jle
and
into
cltd
hlt
mov
pushf
daa
enter
enter
xchg
daa
xor
xchg
jo
xchg
roll
leave
or
pop
add
dec
or
or
or
pop
inc
xchg
scas
gs
or
popf
and
outsl
lods
push
xor
shrb
imul
xchg
test
push
in
adc
inc
movb
jnp
pop
and
xlat
cmp
add
mov
or
cmp
inc
in
sbb
lahf
jmp
push
cwtl
outsb
mov
pop
fcom
cmp
insb
sbb
icebp
sbb
cmp
sahf
mov
cmp
movsb
push
add
inc
sub
mov
or
outsl
lods
or
cld
bound
xchg
rcrl
loope
or
mov
sbb
test
and
jnp
xlat
data16
imul
stos
mov
nop
or
or
sbb
popa
int
test
or
data16
mov
dec
sahf
in
fcmovb
dec
or
jge
movl
or
fmull
std
xor
mov
adc
enter
or
or
adc
dec
jmp
repnz
pop
push
aad
out
xor
xchg
push
icebp
in
mov
dec
and
jno
cmp
sahf
adc
ja
lods
add
test
lods
push
lods
mov
add
sti
outsb
cmp
sbb
mov
bound
mov
mov
jne
pop
dec
imul
push
xchg
pop
aas
arpl
dec
pop
dec
loop
lret
push
mov
mov
addr16
inc
pusha
pop
ljmp
pop
loopne
aaa
push
idivb
ss
dec
mov
sbb
or
test
mov
stos
push
sub
sub
or
dec
sub
sbb
les
mov
in
push
jmp
scas
mov
or
jmp
inc
icebp
xchg
sub
fsubrl
ja
cmp
xchg
inc
xchg
fsts
dec
mov
sub
cs
out
aas
ss
push
push
bound
jl
sti
xchg
lods
mov
fwait
mov
and
push
xlat
or
xchg
nop
push
mov
inc
pop
push
lock
rcll
repz
ficompl
adc
test
rol
adc
jb
mov
mov
mov
in
lcall
sub
mov
test
out
xor
jl
sbb
pop
js
mov
repz
push
pop
popf
and
pop
int3
pop
push
jbe
shll
push
int
mov
mov
xchg
in
sti
push
push
adc
mov
data16
out
sub
push
inc
ret
sub
jecxz
fisubrl
stos
mov
pop
out
mov
jae
adc
test
cmp
jle
add
xor
aam
pop
bound
imul
lahf
cmp
push
mov
int3
adc
sbb
xchg
stos
push
cmpsl
outsb
xchg
and
mov
jbe
inc
outsl
jl
jg
push
lret
cmc
and
lods
rorl
xor
mov
icebp
jp
and
cmpsl
leave
cwtl
cmp
icebp
cmp
xor
popf
jo
shll
mov
pop
mov
dec
leave
mov
push
inc
mov
sub
xor
mov
push
dec
js
shlb
lcall
add
sub
aaa
int
cli
adc
pop
test
jne
push
int3
adcb
jno
das
je
dec
sub
int
inc
pop
jl
dec
sub
lods
cmc
xchg
dec
mov
inc
dec
bound
decl
aad
cmp
out
aad
stos
enter
inc
test
sarl
lods
sub
das
cmpsl
rcl
rsqrtps
test
push
mov
push
and
sub
sbb
lods
cmpb
xchg
or
hlt
mov
pop
push
cmpsb
pop
fwait
ljmp
mov
xchg
push
jecxz
fldl
lds
and
fdiv
psllq
add
fildll
cmp
das
loopne
dec
stos
cltd
ljmp
fwait
xlat
or
xor
aas
rcrb
pop
inc
aad
or
shl
fiadds
test
sbbl
sti
sub
mov
fcmovb
mov
out
jne,pt
pop
dec
das
jne
arpl
xor
cwtl
mov
add
push
repz
jns
icebp
leave
jns
and
push
mov
psubsb
and
shll
pop
jae
and
andl
into
and
mov
lods
jmp
xchg
xchg
mov
lods
xchg
mov
bnd
or
test
jno
adc
jle
push
adc
sub
or
test
inc
iret
adc
xchg
xchg
pop
sub
and
sbb
dec
xchg
sti
mov
cmc
push
push
xor
dec
mov
js
ret
xchg
stos
pop
clc
imul
adc
xorl
pop
add
psubq
inc
test
movsb
mov
sbb
mov
lock
jae
std
fistps
xchg
inc
cmc
test
mov
push
sarl
fnstsw
mov
mov
xchg
int3
fucomip
sub
ds
adc
or
fs
sub
es
cmp
add
and
xor
sahf
cmp
fcompl
jecxz
movsl
adc
dec
mov
aam
mov
push
pop
jb
inc
or
jecxz
iret
inc
sarl
xor
jae
pop
and
fwait
mov
leave
pop
push
cmpsl
imul
test
lret
push
push
jl
sbb
sbb
movsl
cmp
dec
xchg
xchg
lret
sbb
js
jp
jns
es
xchg
mov
lahf
push
cmpsl
or
xchg
mov
sub
xor
cmp
dec
ljmp
push
mov
xchg
aad
xor
mov
mov
or
outsl
xchg
adc
fbld
test
pop
stos
js
bound
loope
lods
out
scas
movsb
pop
adc
jae
out
leave
add
mov
pop
shlb
inc
fs
sub
xchg
mov
mov
and
pop
dec
test
cmp
rorl
icebp
subl
fdivp
and
jecxz
and
dec
xchg
lods
xchg
lcall
daa
mov
add
lea
clc
sarb
jmp
sub
in
mov
mov
push
pop
mov
adc
scas
xor
into
push
jne
scas
stos
mov
fiaddl
int
inc
inc
rorb
mov
jle
adc
mov
imul
sahf
fidivl
dec
movsl
shlb
imul
inc
and
pusha
mov
lods
lahf
test
push
in
sub
mov
mov
shrb
sarb
sbb
cmp
or
iret
aam
cs
xor
lret
ficompl
jne
cmp
ss
push
sbb
push
xchg
subl
mov
out
push
in
dec
loope
cli
jge
scas
repnz
cltd
add
add
inc
mov
dec
push
jmp
xor
push
inc
add
jnp
and
cmp
popa
and
pop
push
or
or
enter
test
push
pop
pop
mov
adc
mov
dec
imul
inc
mov
xorb
push
or
mov
inc
and
dec
push
cwtl
adc
stc
test
push
shlb
fld
int
cmp
cmc
fs
popf
or
ficomps
scas
push
data16
mov
mov
scas
or
or
xor
push
fistpl
cmp
frstor
jg
roll
ljmp
aas
mov
dec
sbb
lods
stos
or
fistl
mov
rcrl
or
cmpsl
std
stos
andl
push
pop
out
push
aas
jmp
xchg
out
enter
add
outsl
fsubrs
mov
push
fstpl
fwait
lods
mov
das
sbb
mov
push
jp
bound
mov
loop
mov
sbb
pop
enter
pop
out
loope
mov
or
xchg
adc
int
dec
add
jmp
sub
dec
cmp
cmpsb
or
ljmp
sarb
mov
or
mov
data16
or
mov
sub
cmpsl
imul
mov
popf
push
push
jne
mov
sub
pop
stc
ret
movb
adc
pusha
pop
cmc
aas
repnz
adc
xor
cmpsl
ror
shrl
lods
test
jmp
add
xor
icebp
inc
xor
jg
testb
jae
repnz
xchg
xchg
mull
add
shll
in
pop
add
push
call
cmp
pop
sti
mov
in
mov
adc
test
dec
adc
adc
dec
jne
pop
ljmp
mov
and
xor
roll
pop
or
loopne
inc
mov
icebp
jae
cmp
sbb
inc
mov
push
sub
lret
lahf
push
ljmp
inc
rorl
lret
fwait
mov
int3
mov
in
lret
pop
pusha
icebp
std
dec
js
testl
mov
pop
mov
xchg
les
xchg
push
lock
xchg
iret
repnz
xor
jbe
sarb
fiaddl
cmp
or
es
lahf
inc
popa
push
sbb
and
lds
decb
sahf
pop
pop
ss
sbb
mov
rolb
jp
mov
jmp
mov
sbb
das
pop
push
push
in
xor
mov
jb
jmp
bound
add
jmp
aas
mov
rol
xor
adc
icebp
test
decb
lods
mov
mov
aad
mov
push
sub
push
push
jmp
sbb
test
pop
inc
dec
int
jno
test
lods
jge
sbb
fcoml
in
cmc
adc
pop
jns
add
pop
adc
in
sbb
pop
fisttpl
pop
push
xchg
cmp
loope
ja
adc
ja
movsb
push
sub
cmp
mov
pop
js
jle
add
lds
jbe
shrb
mov
sub
sub
jle
sbb
dec
lea
nop
add
out
cmp
cmp
ljmp
sbb
cmc
filds
cmc
lahf
gs
xor
gs
mov
ror
fiaddl
xor
invd
dec
dec
inc
sbb
push
pop
stc
icebp
aas
int
add
insl
loope
insb
xor
mov
scas
out
test
bound
bound
in
in
xor
fsubrp
cmpsb
bound
mov
push
lock
repz
mov
clc
xor
xchg
bound
xor
xor
std
aas
adc
hlt
sbb
pop
ljmp
sub
mov
xchg
insb
lea
ds
imul
add
lcall
inc
inc
rolb
push
adc
or
nop
push
jb
cmp
mov
and
push
or
test
cwtl
mov
imul
cltd
push
inc
into
and
data16
mov
lcall
xchg
out
jno
sbb
cmpb
mov
mov
jle
iret
popf
and
mov
mov
flds
sub
cltd
push
in
ss
and
stos
int3
push
or
and
sub
fdivr
mov
lds
repz
add
pusha
in
jl
movsl
inc
cmpsb
lods
mov
and
push
xor
gs
ficomps
jbe
sub
mov
pop
or
fdivs
decl
dec
xor
stos
out
hlt
sahf
cltd
dec
fs
mov
xlat
loope
dec
daa
es
int
imul
jecxz
fistl
pop
mov
movsb
xlat
cmpsl
scas
aad
insl
sti
push
and
xor
and
fisubs
and
xchg
cmp
cmpsb
mov
dec
and
js
vmwrite
pushf
jnp
mov
or
lock
out
je
lcall
popa
mov
push
cmp
push
rclb
sbb
push
in
inc
mov
les
icebp
or
divb
pop
mov
aaa
lock
rcrb
push
das
loopne
lock
fdivr
fcoms
dec
mov
push
stc
push
call
ret
es
lret
mov
clc
dec
testl
out
icebp
fmull
pop
push
adc
daa
out
daa
jb
fistl
popa
outsb
mov
imul
and
nop
add
xor
icebp
push
sti
enter
xlat
nop
push
fs
or
sbb
cwtl
test
mov
roll
lret
sbb
int
mov
ja
imul
addb
mov
in
shl
popf
mov
jns
pop
jmp
ss
xchg
fiaddl
call
outsl
rcrb
aam
inc
pop
loop
xchg
pop
mov
rcrl
push
xchg
jmp
andb
pop
push
out
popf
sub
repnz
insb
and
or
sbb
pop
mov
xor
scas
shrb
sbb
xchg
fldt
sti
push
or
addr16
inc
orb
or
out
je
sbb
jg
add
dec
xchg
ficoms
jmp
and
aaa
pop
xor
pop
lcall
inc
mov
dec
icebp
mov
xchg
xchg
sbb
mov
loope
mov
cmc
add
adc
or
dec
mov
mov
notl
rclb
mov
cmpsb
cmp
mov
scas
jl
mov
aad
jle
push
add
xchg
lahf
cmp
test
push
fidivl
jp
sbb
pextrw
fbstp
fsubs
test
jns
xchg
imul
movsl
mov
pop
xchg
push
inc
out
dec
xchg
sbb
hlt
xor
mov
cmpsl
inc
xor
xchg
loop
xchg
mov
stos
das
dec
in
and
adc
mov
xchg
in
push
jp
mov
push
leave
push
fcomps
jge
mov
mov
mov
pop
jnp
xor
pop
mov
mov
repz
gs
int
jo
icebp
xchg
push
inc
fcoms
scas
jle
clc
cmp
lock
out
jmp
xor
sbb
and
outsl
ret
in
iret
jmp
adcl
xor
jae
mov
push
cmpsb
dec
add
adc
push
xchg
mov
test
aad
push
in
in
in
xchg
loop
fisubrl
sbb
aaa
stos
jae
push
je
insl
cli
stc
psllq
mov
fmull
ja
adc
mull
mov
sub
xor
jmp
and
xor
lahf
cmp
data16
or
gs
sti
mov
mov
arpl
adc
xor
and
int3
cwtl
fsubs
sar
push
mov
imul
call
cs
sbb
aas
int
add
stos
int
sbb
stos
xchg
mov
jp
sbb
mov
xchg
add
icebp
stc
ret
out
cmp
dec
cmp
fimuls
dec
dec
fxtract
push
inc
ja
and
int3
adc
jl
cltd
pop
pop
adc
mov
sub
flds
jecxz
sahf
pop
adc
aam
push
pop
stc
mov
fsub
and
cld
adc
sahf
and
cmovo
insb
sarb
daa
push
jp
jns
mov
stc
xchg
enter
cmp
pop
mov
dec
sahf
int3
xor
shr
pop
xchg
add
enter
stos
call
or
sub
imul
repnz
aad
xchg
mov
xchg
mov
xor
adc
and
pop
mov
popa
int
push
xchg
lock
hlt
orl
insl
pop
lock
or
jnp
mov
push
loopne
push
add
lock
inc
xchg
xor
xchg
in
cmp
lock
pop
in
int
lret
ret
enter
sahf
cmp
push
adc
insl
pop
mov
sarb
dec
test
int
xchg
repnz
sbb
lds
dec
mov
sti
push
mov
out
pop
popf
push
sbb
pop
arpl
push
dec
mov
popa
mov
sbb
nop
fs
cmp
rep
jecxz
jbe
mov
jmp
inc
mov
dec
sbb
test
mov
mov
fdivs
lods
outsb
mov
push
or
lea
add
push
dec
sti
scas
xchg
popf
jne
fidivrl
push
xor
xor
enter
pop
cltd
fwait
mov
ret
scas
push
aad
mov
fucom
add
mov
inc
mov
lock
fdivl
inc
mov
pop
ror
popf
push
sbb
adc
shrb
leave
ds
cmpsl
and
lods
inc
call
push
call
inc
imul
adc
sub
sub
cmpb
hlt
cmp
icebp
xchg
les
sub
mov
test
sub
test
rcrb
inc
pop
or
sub
mov
mov
icebp
and
fwait
mov
pop
popa
xchg
and
call
add
add
repnz
hlt
mov
je
je
popa
ret
pop
push
or
xchg
repnz
mov
insb
inc
lret
push
mov
into
mov
dec
imul
aam
adcl
lahf
xchg
sbb
xchg
mov
push
nop
push
scas
sarl
xor
pop
jb
lret
push
xor
jl
ret
sub
sahf
test
sbb
add
cmp
sub
pop
and
xor
jb
mull
pop
outsl
adc
fistps
push
sbb
mov
dec
add
fmuls
enter
mov
cmp
jl
pop
inc
mov
lea
adc
into
fwait
jg
dec
mov
mov
popa
xor
xchg
sbb
das
and
cltd
aad
ret
or
cmp
dec
inc
seto
mov
stos
hlt
push
and
sub
movsl
push
cmc
sahf
std
push
mov
mov
jb
mov
mov
call
mov
pop
adc
test
inc
sahf
addr16
push
aaa
or
cwtl
push
sbb
jmp
xchg
aam
jle
movsl
cmp
push
sub
pop
or
mov
mov
push
nop
mov
scas
dec
sbb
movsb
mov
mov
push
xchg
push
jo
cmp
xchg
fldt
stc
jmp
pop
xchg
data16
xor
push
dec
pop
push
mov
les
std
xchg
push
xor
mov
adc
outsl
aas
add
or
xlat
insl
push
pop
adc
cli
into
adc
test
out
dec
popa
cmp
in
and
aaa
sti
jmp
pop
aas
mov
pop
cmp
gs
sbb
shrb
fidivrs
cmpsb
mov
prefetch
mov
dec
cmp
sbb
test
sub
int3
pop
enter
or
lock
repnz
dec
pop
fisubrl
std
xor
stos
dec
sti
xor
inc
inc
inc
popf
mov
mov
xchg
xchg
add
mov
enter
and
js
adc
push
test
push
cli
dec
cmpsb
fistps
fsubrl
roll
and
push
and
frstor
adc
ljmp
adc
mov
inc
mov
subb
arpl
cmp
ss
pop
adc
xchg
movsb
mov
dec
pop
xor
aas
xor
pushf
push
jecxz
addb
out
jmp
popf
daa
inc
push
pop
or
xorb
insb
jno
in
das
push
push
mov
adc
cmp
lret
xor
fucomip
push
test
mov
push
movsb
loope
adc
cmp
cmp
jl
mov
mov
sbbb
dec
es
mov
jb
cmp
xchg
cmp
ret
cwtl
pop
lods
xorb
pop
stos
xchg
insb
mov
and
and
mov
dec
dec
movd
aaa
pop
in
cltd
inc
repz
mov
jns
adc
lods
outsb
mov
adc
jp
movsl
cmp
inc
stc
jns
push
test
jmp
or
jns
addr16
insl
sarb
jnp
into
dec
pop
push
sahf
sbbb
or
mov
loop
outsl
jns
scas
mov
pop
jle
out
dec
mov
xchg
loop
dec
addl
sub
add
and
lcall
cmpb
mov
jbe
mov
lds
pop
mov
popf
outsl
and
fnstsw
dec
push
xchg
loopne
inc
pop
aam
add
sub
dec
hlt
outsl
out
pop
in
mov
movsl
lods
dec
clc
lods
stos
stc
fwait
and
paddq
adc
pop
push
mov
fwait
or
mov
dec
mov
int3
pusha
mov
xor
xchg
negl
cmp
push
smsw
imul
sub
xor
pop
rcrl
or
xor
je
shll
dec
aaa
dec
addb
or
test
nop
pop
sahf
stos
add
mov
push
push
adc
gs
lea
inc
mov
push
adc
fbstp
xorb
pop
in
jmp
movl
xor
mov
bound
inc
cmp
sarb
lret
lods
inc
icebp
jp
mov
mov
dec
test
mov
mov
aad
mov
sub
mov
or
rclb
or
lahf
popf
sbb
stos
js
aaa
add
mov
sbb
xchg
stc
xchg
mov
lahf
rcrb
scas
jg
cmp
loopne
pop
ljmp
sub
push
ss
gs
fildl
mov
xchg
sbbl
cs
inc
popf
and
test
cmp
imul
xchg
aad
cs
mov
pop
lret
or
add
sbb
or
and
jbe
push
dec
jge
lret
dec
shlb
shlb
xchg
in
bound
pop
mov
mov
dec
fwait
ret
cmp
sub
inc
imul
pop
adcl
and
lods
cmc
sbb
cmp
lea
inc
stc
test
mov
mov
fmulp
dec
sti
push
xchg
bound
xor
mov
xor
add
sub
add
or
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
