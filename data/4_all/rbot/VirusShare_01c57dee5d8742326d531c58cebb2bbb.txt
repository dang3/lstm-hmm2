rcll
je
ss
fs
repnz
cmp
mov
rorl
shlb
test
xchg
push
jns
cmp
pop
pop
gs
add
movsb
or
jle
adc
pusha
adc
xor
dec
mov
lods
xor
cmc
inc
jmp
xor
xchg
scas
in
test
divb
stos
adc
xchg
sub
add
mov
fisttps
adc
ret
out
or
loope
insl
clc
xor
cltd
mov
mov
sbb
mov
ljmp
ret
push
stos
jge
nop
pop
fsubr
cmp
insl
inc
rcr
dec
push
dec
adc
mov
mov
adcl
test
enter
cwtl
shlb
cmp
in
or
mov
jg
jl
sbb
cmc
fcom
outsb
loope
sub
or
pop
test
mov
jno
movsb
cli
xor
movsb
in
in
and
mov
insb
mov
in
aam
std
jno
idiv
ss
dec
repnz
inc
testb
dec
ss
sti
jb
and
stos
lcall
cmp
mov
pop
adc
data16
nop
adc
les
insl
fcmovnb
das
dec
adcl
imul
mov
sub
fcompl
jmp
or
xor
int3
cmc
and
loop
pop
adc
mov
xchg
xor
and
pop
jae
push
adc
or
cmpsb
mov
neg
roll
fcompl
orb
out
ds
dec
push
aam
mov
xlat
loope
lret
aam
aaa
adc
jmp
push
push
jb
push
cmpb
hlt
mov
lret
int
int
ljmp
ret
push
nop
cmp
jp
sar
push
mov
rorb
dec
loop
add
lea
ja
cmp
add
sahf
push
jmp
lcall
jnp
cmpsl
jecxz
sbb
insl
and
rorl
stos
sti
adc
shrl
sbb
mov
pop
jnp
ret
dec
lcall
jle
adc
out
fs
loopne
insl
sub
pop
xchg
scas
dec
inc
icebp
xchg
xchg
mov
mov
popa
lea
repz
filds
jmp
pop
jb
pop
in
pop
mov
cmp
push
sub
push
mov
enter
adc
in
mov
cwtl
mov
inc
into
insb
ret
lret
shrb
mov
movsb
xor
ret
out
insb
xlat
nop
ss
movsbl
loope
cmpsl
test
jl
mov
loop
cvtps2pi
push
stos
or
sub
and
mov
sub
sbb
loopne
iret
addb
add
mov
fnsave
addr16
std
push
mov
xchg
mov
pop
popa
adc
xchg
jo
sbb
loope
lea
pop
flds
fbstp
ret
inc
inc
sbb
les
scas
repnz
arpl
loope
push
cmpb
mov
ficoml
inc
rcl
loopne
and
mov
jnp
cmpsb
jnp
and
or
inc
push
fwait
repz
sbb
adc
fwait
dec
mov
das
xchg
enter
jae
inc
xor
sbb
pop
xchg
pop
out
cmpsl
or
sub
in
xor
sub
fiadds
aam
imul
push
or
xchg
pop
or
and
jae
mov
xchg
jg
mov
jg
iret
imul
scas
test
popf
sub
loope
addr16
repnz
and
sub
mov
xchg
and
pusha
repnz
pushf
mov
lret
xor
dec
ret
cmp
xchg
mov
pop
xor
outsl
xchg
enter
jnp
bound
icebp
mov
fsubrs
and
xchg
enter
mov
sti
mov
loopne
mov
cmc
sbb
pop
sbb
stos
popf
aaa
xchg
xor
sub
js
iret
mov
inc
mov
mov
sub
sub
test
push
jne
cli
push
mov
sub
and
int
pop
xchg
jnp
mov
sbb
inc
mov
xchg
mov
in
pop
push
in
push
pop
dec
mov
mov
test
adc
shr
xor
cmp
xor
ret
mov
add
movsl
sbb
icebp
stos
mov
test
mov
rclw
cltd
jge
sbb
dec
int3
cltd
scas
xchg
pop
arpl
xchg
cmp
pop
es
sub
arpl
and
aaa
cmpsl
enter
xchg
mov
insb
sti
imul
icebp
sbb
push
mov
das
jo
inc
xor
mov
mov
inc
jge
aad
pop
cs
push
lret
add
adc
mov
ret
std
rclb
mov
in
repz
xlat
outsb
cmpb
dec
dec
mov
sbb
mov
out
bound
add
dec
mov
mov
leave
inc
jg
mov
stos
and
jae
push
jge
push
push
dec
pop
add
push
cs
xchg
pusha
or
jbe
add
jle
push
and
pop
test
add
cmc
mov
nop
push
or
pop
push
push
rol
pop
pop
push
mov
pop
push
add
sub
nop
lea
push
push
test
pop
pop
clc
jno
push
or
pop
xchg
test
cmp
push
jp
and
pop
lea
jmp
jmp
call
push
push
push
pop
pop
pop
push
inc
pop
sub
stc
add
mov
sub
jl
push
push
sub
pop
pop
dec
inc
push
add
push
jae
and
pop
push
test
pop
sar
push
add
mov
pop
nop
stc
cmp
ja
rol
nop
lea
jno
push
cmp
pop
push
add
pop
dec
inc
push
call
jg
jmp
cmpsb
xor
jo
insb
in
addr16
rorl
out
shlb
or
xchg
mov
or
ret
imul
mov
push
jp
test
pop
jl
rol
jb
add
shl
clc
stc
stc
nop
cld
cld
testl
je
cmc
stc
push
mov
add
pop
loop
jecxz
call
loopne
xchg
negl
out
repnz
movsl
sbb
add
test
inc
inc
lret
lock
push
mov
cmp
mov
dec
iret
adc
lcall
insb
aas
cmp
sti
xchg
dec
cmp
test
push
mov
or
dec
and
adc
or
pop
clc
push
mov
push
xor
pop
pop
stc
push
mov
pop
test
sub
push
xchg
pop
push
pop
xchg
pop
jle
test
push
test
pop
sar
push
jl
push
push
add
pop
pop
neg
neg
add
and
cld
inc
push
call
mov
cmp
cmp
dec
jp
jb
pop
lcall
and
lods
xchg
cmp
sub
jmp
inc
jmp
loopne
adc
lret
int
inc
jmp
repnz
cmpsl
in
cmp
cmp
push
mov
loopne
mov
jle
mov
cld
add
pop
in
sub
enter
jmp
jae
pop
inc
ja
ror
stos
pop
out
sub
bound
cmp
adc
sbb
sbb
pop
lret
or
add
mov
dec
push
pop
mov
loopne
sub
inc
int3
mov
jne
push
je
cmp
pop
jne
push
jge
jns
or
pop
jle
ror
jmp
push
lds
out
xchg
jle
ja
lods
loop
push
fisubrl
les
adc
call
jmp
xor
jno
in
mov
push
call
push
cmp
push
dec
dec
dec
add
into
mov
dec
fimuls
aam
jle
dec
ret
in
mull
push
sub
sbb
cld
pop
fimuls
mov
lret
jecxz
repz
inc
lret
dec
cli
mov
sub
fdivrl
daa
jno
jae
std
pop
enter
loope
inc
mov
nop
test
loopne
add
gs
in
push
jecxz
adc
out
pop
mov
push
lcall
mov
mov
inc
push
jl
ss
jl
push
in
or
inc
pop
dec
popf
xor
mov
pop
xchg
xor
adc
dec
xor
pop
jmp
imul
mov
out
repz
insl
mov
sbb
push
push
mov
ret
xor
push
aaa
xor
mov
je
test
push
push
dec
pop
pop
test
or
cmc
scas
mov
push
pop
das
jl
aam
jecxz
mov
lods
xor
cmp
push
sbb
adcl
sbb
xchg
lea
push
mov
mov
push
sub
outsl
dec
cmp
scas
and
out
cmp
out
mov
xor
movsb
mov
cwtl
clts
mov
cmp
xor
mov
rorl
push
rorb
cmp
cmp
pop
inc
lds
stos
adc
scas
inc
rolb
sbb
dec
arpl
mov
jecxz
xchg
data16
cli
iret
dec
xchg
inc
and
push
or
aad
and
fdivr
mov
and
cli
dec
jp
jns
sbb
outsb
jb,pn
in
jne
and
andb
iret
in
mov
jns
shll
insl
sarb
jmp
ret
xorl
bound
jl
mov
mov
cmp
xchg
js
ror
in
lods
adc
jmp
xchg
or
cmpsl
sub
hlt
stos
or
xchg
add
xchg
push
addl
mov
or
dec
out
jnp
mov
mov
out
jo
sbb
cwtl
cwtl
stos
or
sbb
mov
test
cmp
cmp
insl
jecxz
iret
dec
jne
jb
lods
das
mov
dec
add
shll
bound
sbb
aad
movsb
dec
sub
lret
mov
xchg
dec
push
cs
fcoms
dec
push
dec
test
shrb
addb
xchg
ror
fcomi
aam
rcr
mov
aam
rol
push
hlt
mov
cmp
ror
xor
mov
push
or
shlb
shll
lahf
in
cltd
jmp
mov
sahf
test
jbe
push
xchg
ljmp
shlb
mov
mov
rcrb
out
mov
push
fsubrs
push
inc
rorb
ljmp
sbb
insl
pusha
sub
xchg
and
in
push
add
ds
lds
cmp
aad
mov
int3
out
push
out
adcl
mov
rep
dec
adc
ss
mov
repz
clc
mov
cltd
dec
stos
ret
popf
out
cmp
adc
push
jbe
pop
jbe
enter
jl
jb
xor
and
in
or
or
shl
push
es
jecxz
lea
push
lcall
int3
push
cmc
jns
icebp
loopne
xor
fcoms
add
mov
fstps
inc
inc
inc
sub
push
jecxz
mov
sub
das
inc
sbb
add
cwtl
lcall
add
and
mov
mov
jg
xchg
jnp
push
jb
and
cltd
hlt
mov
pop
and
insl
ds
and
push
push
call
and
repnz
pop
mulb
idivb
mov
cmp
mov
aaa
mov
mov
cmp
or
out
mov
mov
dec
je
into
ss
popa
rolb
push
sbb
in
mov
gs
sub
push
jno
sbb
int
mov
scas
mov
insl
jp
mov
sub
jne
test
mov
negb
xchg
mov
fwait
sbbl
scas
xchg
in
xor
filds
imul
hlt
push
cld
pop
scas
xlat
jae
jnp
lret
les
mov
repz
jo
xor
xchg
sbb
jmp
leave
and
dec
cmpsb
and
push
mov
adc
fsubrl
sbb
call
fucom
sbbl
inc
inc
jbe
divl
mov
out
or
xor
in
mov
dec
pop
mov
xor
and
jle
ror
mov
cwtl
push
xlat
notl
sbb
xchg
inc
sbb
pop
rcl
and
repnz
sbb
fmull
into
rorl
xchg
arpl
fdivrs
fs
mov
orb
inc
fcoms
push
nop
sub
mov
push
mov
shl
fdiv
jbe
jnp
jecxz
mov
fdivrs
stos
mov
into
mov
cli
sti
dec
jne
xchg
mov
and
sbb
outsl
ds
gs
sub
fnstsw
add
mov
mov
xor
xchg
or
or
push
aaa
add
dec
cwtl
lock
jne
jne
jo
mov
inc
imul
scas
or
pop
pop
icebp
popf
ss
cmp
arpl
and
mov
lret
test
push
popl
add
inc
popa
mov
push
xor
jns
into
mov
add
adc
repnz
xor
sarl
mov
mov
mov
mov
mov
xor
inc
in
cmp
inc
int3
push
inc
jo
sub
sub
sub
jno
mov
je
adc
call
pop
loop
lods
outsl
pusha
gs
inc
out
pop
cmpsb
xchg
ret
mov
dec
and
sbb
ljmp
mov
das
lds
dec
shll
cmp
xchg
push
into
sbb
divb
pop
xchg
shlb
pop
jne
test
inc
sub
repz
push
out
call
mov
inc
out
push
cmp
sub
xor
push
pop
push
jbe
push
flds
push
push
cmc
mov
dec
das
and
out
fdivr
incl
cmp
cwtl
xor
enter
xchg
push
xor
insl
dec
cwtl
icebp
sahf
loopne
mov
xor
dec
dec
or
stos
xor
adc
ds
push
jge
flds
jp
ficomps
outsb
push
mov
sbb
loope
sub
cmc
push
shrb
xchg
and
cmp
or
pop
movsl
sbb
and
loop
cmpsb
test
addr16
aaa
add
fnstcw
mov
fs
mov
push
sbb
pop
or
je
arpl
xor
movsb
cmp
mov
adc
dec
ret
mov
stos
pop
pop
jecxz
cwtl
pop
iret
test
scas
repnz
cmp
testl
adc
dec
lock
push
xchg
pop
mov
pop
mov
out
in
mov
imull
enter
mov
sbb
cmpsl
adc
jge
xor
jbe
mov
jmp
push
adc
lods
push
xor
xor
shlb
imul
jg
cs
fs
adc
fists
xor
pop
inc
add
sub
rcr
imul
mov
fs
not
outsl
leave
dec
rep
sub
inc
nop
fisttps
or
pop
rcrl
dec
stos
movsl
pop
push
movsb
xchg
fsubl
sub
rcr
and
cmp
mov
rorb
aad
out
popf
rcrl
jno
xlat
inc
mov
ret
add
xor
and
sahf
shlb
es
cmp
pop
stc
sub
fs
int
mov
idivb
rcll
sti
inc
xchg
sub
mov
mov
mov
pop
insl
cmp
in
mov
aas
roll
push
jo
ret
mov
push
fidivrs
adc
jg
cmpl
jb
rorb
push
pop
data16
pop
mov
cmp
adc
jne
dec
xor
dec
ja
mov
int
adc
add
mov
pop
out
push
mov
jl
lods
cmp
outsb
out
test
test
jmp
and
dec
cmp
scas
xor
xlat
mov
dec
pop
cmp
cli
xchg
stos
notb
jnp
pusha
ss
scas
aas
repnz
fdiv
pop
fbstp
arpl
mov
add
sub
mov
and
lcall
popf
inc
add
dec
je
xor
mov
inc
dec
int
pop
int
mov
cld
imul
js
lods
sti
jp
sub
gs
mov
out
cld
inc
dec
xchg
inc
push
adc
das
sub
mov
hlt
pop
out
cld
mov
jecxz
jb
fcom
mov
aam
cltd
sub
pop
pop
adc
stos
mov
xor
loopne
xor
add
or
and
iret
mov
nop
out
movsl
scas
jp
loop
stc
enter
gs
vorps
inc
icebp
sbb
adc
mov
loope
test
lea
mov
push
adc
cld
xor
jno
out
jl
out
dec
aam
daa
fxam
add
inc
in
lret
pop
mov
mov
sub
jge
jp
les
cmp
sbb
mov
mov
in
jne
pushf
adc
rcll
mov
lahf
and
lods
cmp
jne
add
mov
xorb
jl
inc
inc
xchg
or
add
fs
sbb
push
arpl
push
in
add
das
mov
bound
sbb
mov
pop
sub
and
jb
cmpsl
push
mov
dec
stc
cmp
inc
inc
xor
sub
and
rcrb
pop
push
bound
enter
jmp
jle
test
fstp
inc
push
jno
leave
lods
push
test
cmp
jne
shl
sub
mov
inc
pusha
notl
repz
loopne
sub
xchg
out
sub
lods
cmpsb
imul
clc
data16
cmp
xchg
daa
xor
fs
mov
es
les
and
push
pop
adc
mov
out
ficoml
bound
lock
xor
jo
cltd
inc
outsb
dec
into
ljmp
loope
daa
sbb
push
mov
fisttpl
push
push
pusha
mov
xor
cwtl
dec
adc
sub
pop
sub
js
push
rcl
push
clc
cmp
dec
aam
adc
pop
lods
push
imul
arpl
cmp
adc
mov
lods
shl
push
insb
and
jmp
pusha
int
orl
lock
lret
push
adc
add
imul
sbb
and
cwtl
xor
xor
in
mov
jp
xor
shlb
mov
dec
cmpsl
push
lret
cmp
cs
scas
inc
rclb
xor
xchg
pop
jo
mov
rcrl
cltd
mov
ds
stos
pop
mov
stc
xchg
push
fidivrl
push
push
test
pop
inc
inc
sahf
pop
mov
pop
pop
repnz
push
cmc
sbb
or
sub
ljmp
notb
mov
sbb
add
int3
mov
repz
sbb
add
int3
lret
jg
dec
faddl
adc
fchs
fsubl
xchg
xor
push
add
cwtl
jp
jecxz
xor
jae
loope
jb
mov
push
or
mov
in
test
jne
ja
jnp
jge
add
xor
dec
mov
xor
fs
or
insb
outsl
add
and
or
movsl
rcll
mov
aaa
dec
pop
call
shll
ja
dec
sbb
sbb
pop
testl
add
inc
int3
inc
adc
cmp
dec
or
jno
rol
jmp
bound
rcrb
ret
outsb
ljmp
lret
mov
push
ss
fildl
mov
adc
frstor
jg
rcrb
sub
dec
in
or
mov
adc
xlat
mov
mov
or
in
call
cmpsl
ljmp
aam
or
sbb
fcoms
movsl
push
fcmove
dec
cs
jb
cmp
je
cmp
or
mov
xlat
dec
ds
adc
mov
push
aad
or
mov
adc
aam
inc
fnsave
jp
rolb
repnz
xchg
jg
enter
daa
sbb
dec
lock
pop
test
push
push
loopne
jnp
mov
inc
stos
xchg
lods
inc
or
adcb
mov
adc
xor
rclb
jb
fistpll
loopne
mov
xchg
sub
dec
outsb
mov
into
add
cwtl
lret
or
mov
jp
mov
pop
cmpsl
addr16
pop
out
push
mov
fwait
inc
mov
xor
lret
sub
xor
xchg
out
adc
jno,pt
out
loope
fisubl
or
and
fidivl
cltd
and
xchg
jb
dec
adc
jle
sti
mov
lret
mov
std
inc
jo
push
mov
dec
inc
ds
jge
arpl
xchg
popf
popa
in
lcall
mov
add
inc
mov
lahf
sub
dec
mov
inc
sbb
sbb
sub
icebp
lret
adc
push
addr16
mov
xor
mov
lds
push
cwtl
test
popf
jecxz
sbb
mov
iret
lahf
pop
ret
xor
sti
and
out
pop
jbe
jecxz
lock
xchg
xor
pop
mov
push
into
shlb
xchg
cwtl
push
cli
add
jae
xor
cmp
shl
gs
mov
dec
and
xlat
push
fsubrs
out
pushl
mov
push
mov
mov
lds
icebp
movsb
and
push
push
dec
pop
xor
sbb
mov
pushl
rol
ljmp
jmp
dec
shll
lret
test
pop
fsubl
sahf
loop
out
cmpl
subl
outsb
pop
mov
ss
insl
in
mov
in
fiaddl
dec
rcll
mov
dec
mov
fsqrt
mov
daa
push
adc
jb
leave
bound
fdivrl
jmp
movsl
imul
fstl
daa
pop
sub
push
dec
add
out
adc
push
cli
fimull
cmp
dec
outsl
mov
xor
mov
std
adc
pusha
or
xor
lods
in
sti
xor
xor
mov
inc
mov
and
out
fdivl
mov
mov
or
ret
pushf
jg
push
popa
mov
sti
lods
mov
dec
mov
or
loope
hlt
xorb
test
divb
test
xchg
jne
addr16
fnstenv
repnz
aaa
adc
mov
shr
mov
leave
cltd
push
push
in
repnz
cmp
repnz
out
mov
jp
icebp
xchg
push
and
jecxz
adc
xchg
sbb
mov
mov
adc
or
scas
loopne
mov
jno
xchg
adc
fiadds
dec
lcall
xchg
push
sbb
xchg
mov
jmp
aad
shll
rolb
stc
test
xchg
lret
out
xchg
icebp
es
inc
dec
mov
sti
pop
xor
mov
xchg
mov
mov
inc
sbb
into
gs
in
data16
pop
cli
pushf
adc
pop
stos
mov
or
mov
mov
jnp
adc
pop
pop
or
out
addr16
ret
test
aad
addr16
fisubrl
out
in
push
xchg
les
fdivrp
mov
arpl
cltd
mov
enter
sub
sbb
mov
dec
push
jnp
mov
inc
in
and
pop
pop
adc
movsl
push
sub
jp
mov
aad
inc
lret
pop
rolb
mov
loope
mov
lret
and
pop
inc
xchg
cmc
out
xor
fbld
sub
and
sbb
xchg
xlat
stc
movsb
jbe
pop
shlb
arpl
or
addr16
dec
in
hlt
in
fadds
jb
cwtl
cmp
mov
bound
and
add
stos
cmp
cwtl
mov
xchg
ljmp
in
loopne
lods
dec
imul
pop
inc
outsb
pop
rol
cmp
pop
adc
jae
mov
aad
das
out
int
cmc
ret
adc
in
leave
fisubrs
inc
inc
imul
and
or
push
mov
andl
das
mov
or
push
mov
xor
and
aas
lret
mov
or
adc
test
pop
mov
xlat
mov
fsubl
cs
mov
ret
dec
aam
or
fstpl
or
rolb
loope
inc
iret
xor
push
movsl
es
dec
mov
std
fsubs
jp
in
mov
sarl
inc
mov
xor
imul
mov
sar
insl
inc
cli
jne
jno
stc
pop
bound
mov
cltd
aad
out
jo
je
lods
or
outsb
cmp
leave
fsubr
jge
dec
fistl
dec
pop
not
push
addb
jnp
pop
xlat
mov
js
mov
test
xchg
xchg
push
inc
mov
insb
cmpsl
in
and
popf
stc
adc
xor
or
adc
fldenv
push
sub
rcr
repnz
arpl
rorl
sbbl
inc
xchg
icebp
fwait
inc
cmp
push
in
xchg
fadd
sub
dec
sbb
mov
js
or
mov
sbb
andb
pop
inc
scas
loopne
lahf
xor
mov
pop
aaa
rclb
test
addr16
gs
cmp
push
inc
cmp
pusha
stc
rol
push
cmpsb
mov
mov
insb
int
js
mov
push
xor
sti
sbb
adc
mov
sub
mov
cmc
es
subb
xor
or
lods
pop
pop
jb
xchg
pop
push
and
shrb
add
xchg
incb
outsl
aam
xchg
push
gs
lea
and
jne
int
pop
test
sbbl
shrl
mov
movsb
sbb
cmp
nop
jmp
leave
push
out
fidivs
dec
pop
out
test
out
xor
pop
and
mov
mov
mov
push
mov
add
es
or
sub
xor
push
lods
stos
inc
push
and
ljmp
xor
pop
inc
push
test
adcb
or
call
das
imul
inc
jg
lods
dec
xchg
adc
mov
cwtl
ja
and
and
fildl
imul
test
push
mov
stc
jg
fisubrl
shr
adc
scas
ds
mov
dec
insb
adc
add
pop
jno
fsubrl
into
aaa
sub
imul
repnz
fsts
mov
lcall
mov
int3
fmuls
pop
divl
or
and
sub
aas
std
mov
cmp
jmp
adc
mov
push
adc
mov
pop
rolb
fnstenv
jns
sbb
mov
imul
mov
mov
mov
jmp
test
xchg
jl,pt
fidivl
jl
mov
mov
test
push
cmpsb
mov
and
stos
and
add
jg
mov
jmp
je
ss
pop
inc
jne
cmpsl
enter
cmp
inc
xchg
xchg
mov
inc
mov
sub
in
sbb
ficoml
inc
and
lcall
cmp
mov
lret
hlt
and
mov
in
jne
test
sbb
or
add
dec
adc
cltd
scas
pop
pop
mov
xor
gs
add
jbe
lahf
ja
sbb
mov
jnp
mov
mov
insb
nop
xchg
fistpll
push
adc
push
iret
dec
ja
js
mov
xor
lods
shlb
cmp
xchg
jno
xor
xchg
sbb
add
lret
shlb
fsubrp
lahf
inc
ds
sub
cltd
sub
or
out
nop
inc
pop
imulb
cmc
dec
push
pusha
mov
cmp
lret
and
add
nop
jge
push
pop
mov
mov
push
xchg
cltd
mov
inc
fs
int3
xor
add
roll
out
out
out
lret
pop
insb
xchg
lods
add
lahf
cmp
mov
add
stos
and
repz
or
scas
fiaddl
loopne
loope
pusha
pop
mov
jg
out
js
sarb
test
cmc
sub
pop
daa
int
pop
lock
jmp
and
loopne
jmp
stos
or
int3
rorl
fwait
adc
lea
loop
xchg
test
mov
add
sbb
and
inc
push
pop
jg
cli
fcoml
repz
sbb
sub
mov
xor
cltd
out
in
lret
push
out
cmp
mov
mov
adc
adc
adcb
jmp
adc
ljmp
and
dec
aam
sub
hlt
into
imul
leave
mov
cmp
xchg
imul
daa
fcom
inc
repnz
iret
xchg
sub
sub
mov
fisttpll
rcrl
fcmovbe
ja
in
mov
add
enter
add
or
xor
jecxz
xor
daa
addl
or
xchg
clc
mov
fmul
push
mov
pushf
fs
push
insl
sarb
xor
pop
hlt
dec
movhps
out
jp
add
out
cmp
out
aaa
dec
imull
xor
sub
pushf
dec
inc
and
add
xlat
and
or
jne
cmp
bound
or
popf
out
pop
cltd
not
sahf
aaa
mov
aaa
mov
xor
dec
mov
jmp
iret
adc
ja
mov
xchg
xchg
loope
fsubl
pop
dec
icebp
adc
test
pop
push
pop
je
mov
mov
pusha
xchg
int3
fbld
rcl
mov
mov
fisubrs
adc
sub
inc
mov
add
inc
out
test
pusha
xchg
add
xor
inc
sub
push
in
insb
frstpm(287
data16
jne
add
mov
xchg
insl
les
jl
push
dec
adc
arpl
pop
xor
js
pop
jo
in
call
ror
je
int3
add
xlat
jo
jecxz
sub
ficoml
in
mov
dec
call
push
out
adcb
mov
mov
in
cmp
divl
mov
rcl
or
push
adc
pushf
mov
dec
fdivrs
cmpsl
pop
mov
xchg
push
nop
fcomi
ret
mov
clc
imull
push
xchg
xor
lods
cmc
aas
mov
iret
outsb
testl
add
mov
stc
mov
arpl
test
xor
push
pushf
daa
add
xor
movsb
ret
jbe
jne
sbb
sbb
push
cs
repnz
and
sti
push
stos
cmp
dec
iret
lret
jg
fcomps
inc
loope
outsl
pop
adc
adc
xchg
pop
mov
repz
js
test
push
jp
cmp
scas
xchg
add
fsts
adc
mov
sub
lea
mov
loope
xchg
mov
add
cmp
test
add
lcall
movsl
icebp
dec
lods
outsl
mov
adcl
enter
ret
aaa
jns
shrb
mov
jno
add
xchg
lret
sbb
test
adc
movl
adc
jnp
lods
add
push
pop
xor
mov
imulb
xchg
lock
ficompl
arpl
mull
inc
daa
pushf
xchg
mov
xchg
or
loop
fsubrl
dec
mov
fs
inc
jbe
loopne
mov
inc
or
xchg
in
cmc
arpl
pusha
mov
test
arpl
mov
and
orl
pushf
sbb
fucomp
inc
iret
xchg
mov
jecxz
jle
jns
int3
sbb
pop
rclb
inc
jmp
gs
das
into
clc
mov
fsub
dec
out
lods
in
ss
shlb
sbb
lcall
stos
add
lock
add
lret
mov
mov
stos
hlt
fcom
xor
popa
xchg
add
dec
or
jmp
enter
jle
in
movsb
or
in
mov
mov
dec
pushf
cld
movsb
add
ror
or
mov
in
add
leave
push
iret
xchg
and
test
xchg
pop
mov
inc
push
jg
shrb
mov
gs
addl
cld
xchg
hlt
inc
in
imul
xchg
adc
add
mov
mov
rcrl
jb
clc
xchg
mov
jb
dec
pop
add
ss
adc
and
outsb
aas
es
pushf
movsb
cmp
xor
xchg
popa
stos
cmp
out
and
sub
repnz
xor
roll
insb
ljmp
sahf
xor
decb
mov
cmp
push
and
outsb
pop
mulb
add
ja
aad
and
or
popf
leave
movsl
mov
sbb
lret
insb
pop
rclb
pop
push
in
add
into
push
jo
shll
imul
sbb
dec
push
outsl
sbb
push
or
sub
or
cmp
inc
jge
xlat
push
lret
div
in
push
imulb
mov
inc
mov
push
fwait
cmc
jbe
jge
into
jnp
jg
xchg
xchg
mov
pop
xor
adc
mov
pop
push
or
xchg
cltd
sub
inc
add
add
aas
pop
ss
cltd
loope
lock
aas
cmp
stc
popf
test
sbb
sbb
xchg
fnstenv
or
ror
mov
je
mov
add
int3
push
data16
test
mov
sbb
jl
cld
push
push
out
or
mov
cmpsl
push
inc
pop
leave
popa
sti
mov
mov
aas
jmp
adc
gs
daa
mov
push
push
mov
mov
arpl
cmp
add
aam
dec
ss
sub
mov
push
cmpsb
mov
fwait
aad
int3
bound
test
in
cmp
imulb
mov
movsb
lcall
inc
mov
pushf
mov
inc
test
mov
xor
adc
and
and
cltd
dec
ret
mov
into
lods
add
jge
cmp
jnp
aaa
mov
mov
sub
fwait
or
sbb
insl
dec
xor
pop
mov
sbb
push
dec
hlt
pop
push
mov
pop
in
adc
lods
dec
jg
stos
jge
sub
mov
sub
pop
repz
cli
pop
push
mov
popa
jbe
inc
loope
push
clc
into
push
test
push
mov
xor
daa
xor
pop
mov
sbbl
lds
jnp
leave
stos
or
test
jmp
sbb
xchg
int3
push
dec
inc
loope
ljmp
aaa
fsts
cwtl
int
outsb
or
push
push
push
mov
cli
stos
dec
xor
call
mov
sub
cli
jl
add
lcall
lods
sbb
out
bound
les
or
ds
xor
push
jno
enter
sub
or
js
push
lret
add
jl
add
imul
ljmp
push
inc
mov
jp
jl
xchg
cltd
xchg
lock
psllw
jb
mov
cmc
jb
in
sub
pop
std
mov
lahf
add
jmp
jo
jg
sbb
jns
mov
loop
inc
ljmp
js
adc
pop
jle
je
and
loop
fsts
mov
sbbb
cmp
inc
xor
mov
ror
gs
jo
inc
pop
arpl
icebp
mov
aas
push
call
data16
mov
adc
add
pop
shrb
adcl
lahf
sbb
pop
jecxz
inc
rcll
push
dec
xchg
test
or
repnz
ss
fildll
in
cmp
fdivr
and
cmp
lock
jp
add
fstpl
leave
pop
push
movsb
lds
scas
jns
aaa
mov
rcrl
xor
push
pop
add
jns
jp
xor
push
xchg
repnz
pop
pop
xor
mov
add
lcallw
xchg
sarl
lcall
add
mov
push
mov
or
adc
jns
mov
dec
imul
ror
cmp
icebp
mov
mov
shl
or
lds
sti
lods
inc
outsl
out
mov
dec
push
sbb
mov
pusha
es
push
mulb
push
int3
or
lret
dec
sbb
dec
adc
inc
gs
clc
mov
add
cmp
pop
hlt
mov
inc
enter
lods
xor
mov
lods
xchg
in
mov
and
bound
pop
subb
mov
xor
push
and
pop
xor
pop
inc
xchg
fwait
and
lahf
push
sbb
push
aas
fs
les
mov
subb
xchg
and
push
jo
pusha
jmp
jp
fldl
or
and
dec
adc
add
ds
inc
adc
xchg
sbb
popf
out
call
in
add
rol
xchg
cwtl
out
add
negb
daa
jb
in
shrb
repz
shll
jbe
imul
ud1
test
inc
mov
aad
movsb
mov
push
ss
dec
pop
jmp
sub
add
add
cmp
xor
les
jno
or
sbb
jno
jg
jp
xor
ds
js
xchg
test
leave
xchg
rorl
shl
xor
jns
dec
rclb
push
out
mov
cld
cmc
stos
ss
pop
sub
mulb
pop
jno
add
xor
arpl
in
pop
cli
inc
cmpsl
mov
incb
arpl
mov
add
and
jg
roll
outsl
mov
pop
push
inc
mov
push
dec
lea
sub
pop
sbb
pop
cmp
je
out
lock
adc
sub
daa
loop
xlat
add
inc
test
sarb
lcall
cmp
nop
sbb
sub
lret
sahf
mov
pop
mov
xchg
int
xor
mov
ret
xor
sbb
or
dec
dec
or
jnp
cmp
jae
mov
sub
aaa
stc
xchg
mov
lret
add
cmp
pop
push
xor
dec
xor
jae
imul
push
inc
filds
xor
mov
ror
xacquire
scas
cmpsl
scas
cltd
mov
cmp
stos
mov
adc
sbb
adc
sub
outsl
inc
cmpsl
sbb
mov
scas
cmp
loopne
jno
cvtps2pi
add
mov
lods
jge
fcoml
push
fdiv
dec
dec
out
les
push
mov
jbe
nop
neg
cmc
pop
add
lock
fs
jp
xor
rorl
and
lods
das
clc
ja
into
leave
cmp
xor
sbb
sub
gs
pop
scas
cmp
scas
cmovnp
popa
inc
stos
in
lds
jecxz
jb
data16
fsub
loopne
push
ret
js
push
and
mov
push
mov
js
lahf
push
out
cld
addl
loop
or
adc
outsl
js
arpl
repz
loopne
jno
test
mov
lcall
jmp
adc
xchg
mov
jns
mov
fnstsw
mov
lods
and
cmp
mov
mov
pop
cmp
js
mov
inc
push
jns
popa
sub
arpl
fists
add
or
xchg
cwtl
scas
enter
imul
lret
mov
sahf
imul
stos
ds
jg
mov
sub
xchg
cmp
inc
outsl
pop
int3
xchg
test
cwtl
cmpsb
adc
lock
and
sub
dec
pop
push
xlat
enter
or
push
push
icebp
mov
and
imul
xchg
in
inc
sbb
and
pusha
cmp
ss
es
fnstsw
push
adc
mov
imul
cmpsb
stc
xor
or
and
adc
xchg
jp
int3
ficoms
cmovne
in
cmp
outsl
jbe
pop
loope
fld
sub
in
pop
add
cmpb
fxch
and
sbb
pop
add
mov
andl
mov
stos
cmpsl
jnp
rcrl
xlat
ja
icebp
inc
fdivl
xchg
cmp
sbb
cmp
ss
pop
out
pop
mov
cmpsl
mov
jecxz
sbb
loopne
fsubr
push
loopne
lods
sbb
rorb
or
lahf
push
push
xor
push
cmp
add
dec
stc
icebp
sbb
loopne
aad
mov
adc
adc
push
movsb
sbb
mov
or
xchg
js
cmpsb
add
addr16
jle
pop
jno
xor
sub
add
lcall
das
mov
fcomps
push
int
shlb
lock
stos
sub
sbb
ss
arpl
lcall
movb
call
sub
adc
dec
dec
push
cli
jecxz
inc
push
das
mov
lock
pop
push
push
cmp
fwait
lock
sub
add
fsts
mov
cmpl
mov
dec
fxch
add
cmp
loopne
xorb
in
outsb
clc
jge
or
or
idiv
int
cwtl
xchg
shlb
cltd
les
inc
test
js
push
xchg
push
sub
push
hlt
cmp
inc
mov
shrb
lret
pop
sub
sub
loop
call
sbb
jge
sbb
push
cli
mov
sbb
sub
cltd
pop
bound
iret
inc
cmp
jmp
sub
lcall
daa
jne
dec
push
mov
popa
mov
out
movsb
dec
jmp
aas
dec
mov
ret
es
inc
inc
cmp
mov
push
pushf
sbb
stc
add
xchg
jge
sti
or
add
mov
fiadds
loopne
push
xor
xchg
mov
je
push
out
cmpsl
cmp
repz
stos
mov
jns
and
jno
pop
or
cmp
adc
leave
lea
pop
ret
xchg
leave
sub
aad
add
dec
jbe
imul
test
subl
sti
dec
testb
stos
test
cmp
sub
dec
adc
loope
insb
out
xchg
sbb
enter
icebp
ds
mov
das
xor
jp
or
push
scas
into
push
xor
sub
ss
sbb
mov
lds
jp
lahf
lods
sbb
jnp
lods
mov
push
fldenv
push
jbe
lret
mov
pushf
shlb
aas
sub
ljmp
ja
pop
in
mov
out
int
dec
xchg
clc
cmp
imul
add
jmp
mov
xchg
sbb
cmp
jmp
ret
cmp
daa
add
dec
lds
mov
xchg
push
fcmovu
aam
imul
stos
lahf
mov
add
pop
mov
cli
and
and
mov
or
in
sub
add
pop
jmp
inc
loop
jl
div
mov
cmp
iret
xor
pop
scas
fdivrs
movsb
in
pop
sarl
aaa
lods
pop
dec
mov
lods
fcmovnu
lds
fcmovnb
test
es
popf
ds
mov
xor
fdivl
add
scas
cmp
inc
sbb
into
int
pop
add
addr16
mov
pop
cmp
scas
insb
mov
jno
mov
push
sahf
and
loopne
movsb
call
call
pusha
ljmp
pop
dec
loop
or
push
repz
int3
dec
aam
sahf
pop
lea
inc
inc
sub
daa
cmp
push
outsl
mov
xchg
sbb
ja
xchg
xchg
push
or
lods
out
adc
dec
pushf
and
dec
add
xchg
sarb
pushf
mov
and
cli
mov
subl
inc
xor
adc
mov
loop
pop
sub
mov
in
dec
clc
jno
iret
das
rclb
add
inc
sbb
jge
cltd
mov
cwtl
mov
cmp
lds
mov
adc
sbb
andl
sub
or
ss
mov
sub
inc
mov
dec
pushf
daa
push
popf
dec
movsb
aad
mov
mov
mov
loope
sbb
add
adc
fiaddl
out
test
lods
filds
mov
xor
push
ds
pop
leave
mov
inc
test
movsl
dec
xchg
lock
orb
jmp
cli
or
sub
cwtl
and
lods
cmpsb
push
mov
cmp
enter
dec
dec
or
cmp
clc
push
in
fsub
mov
mov
jno
mov
push
mov
bound
ret
add
push
into
inc
cmp
fcmove
sub
sbb
mul
mov
jbe
or
push
mov
cmp
outsl
sub
xchg
ret
push
bound
sarb
jl
hlt
xlat
jle
jg
mov
repnz
clc
and
sarl
inc
cmpsb
add
fldcw
jmp
icebp
mov
aad
ret
nop
sbb
ret
dec
movsl
clc
xor
cmp
test
frstor
xlat
mov
or
jnp
es
push
aam
xchg
mov
and
in
ficoms
xor
rorl
pop
aaa
or
test
mov
or
sarl
or
mov
outsl
mov
jmp
stos
inc
lods
icebp
mov
mov
gs
inc
push
repz
pop
pop
aam
add
mov
or
scas
aas
mov
xchg
inc
and
and
and
push
test
sbbl
mov
cwtl
inc
clc
jp
xor
clc
jbe
aas
cmp
mov
push
hlt
ret
add
sahf
test
push
sbb
xor
xchg
sub
xchg
adc
into
data16
lods
xor
je
mov
push
mov
pop
repz
push
int3
cmp
mov
xchg
fmull
push
push
push
das
add
stc
js
push
or
in
mov
mov
jmp
clc
lods
popf
cs
ja
push
ljmp
adc
mov
push
sbbb
add
xor
nop
test
sbb
and
loope
pusha
jle
sub
aaa
xor
mov
mov
js
dec
fcom
add
cmp
dec
imul
pop
mov
add
in
dec
and
gs
pusha
jo
jne
stc
nop
dec
scas
or
es
dec
fcomp
xchg
stos
sub
shll
pop
fadd
mov
out
enter
pop
int
or
add
iret
popa
addr16
outsl
stos
push
jmp
jl,pt
out
adcb
outsb
jp
loopne
xchg
xchg
jo
sub
in
outsb
lods
fidivrl
xor
ja
ja
shll
mov
and
dec
lock
rcll
jp
xchg
ret
in
cmp
sub
pop
lods
cmp
xor
jb
inc
jmp
mov
cmpsb
aam
int3
cmc
xor
mov
shr
push
aad
popf
sub
shlb
mov
mov
xor
sub
or
mov
jbe
pop
in
loopne
outsl
push
jl
dec
incb
sub
mov
test
sub
sbbl
sbb
pop
add
aaa
imul
mov
mov
mov
add
cmp
sbb
pop
sbb
mov
mov
out
sub
mov
mov
lret
std
insb
cltd
outsl
lds
sbb
xchg
pop
insb
call
fsubrs
push
dec
mov
insb
cmpb
lock
adc
jbe
into
loop
jmp
push
xchg
sbbl
pusha
in
or
inc
icebp
enter
or
xor
adc
stc
jmp
popa
movl
sahf
ror
jb
mov
or
cmpl
fs
mov
adc
iret
pop
sbb
adc
imul
push
sbb
cli
mov
test
mov
inc
inc
pop
mov
jmp
xor
adc
sahf
or
mov
dec
test
lret
hlt
mov
sbb
add
hlt
and
mov
test
lea
jp
repnz
cmp
fnstcw
xor
add
xor
fadds
mov
cltd
push
pop
adc
cmp
sub
mov
enter
push
and
out
aaa
xor
pop
push
notb
xor
les
pop
inc
leave
mov
scas
jnp
push
push
pop
mov
xor
jg
lret
sub
shrb
loope
fcoms
xor
pop
push
xor
jb
add
and
xchg
pop
jne
or
fs
push
sbb
jmp
inc
pop
ds
sbb
fidivrl
rcrb
push
out
stc
xor
sub
jnp
mov
sbb
pop
fildl
mov
sub
or
mov
mov
sub
dec
loop
inc
imul
cmove
pop
shrl
add
xchg
push
push
lods
neg
adc
dec
shlb
repz
clc
pop
jb
inc
mov
fistpl
and
cmp
inc
xchg
jns
mov
cmpsb
add
movb
test
push
ret
push
inc
ftst
cmp
into
aas
in
mov
lret
call
data16
xchg
and
sbb
hlt
lock
repz
nop
or
fmulp
lret
cmpsb
pop
bound
xor
or
adc
aam
lret
push
popa
in
mov
movsb
jl
mov
and
enter
add
inc
loopne
push
out
cwtl
pop
cmpsl
mov
pop
jb
in
jo
ficompl
lock
cli
inc
mov
cltd
adc
ds
inc
inc
fmul
mov
shll
push
jo
lods
xchg
addr16
and
mov
aas
out
or
gs
cld
lcall
or
pushf
cli
mov
push
shlb
jg
call
aad
adc
scas
mov
dec
jp
inc
push
jb
js
mov
xchg
sbb
inc
movsl
and
test
scas
mov
push
andnps
mov
xor
mov
lea
xchg
jg
lds
cmp
sub
cmpsb
sbb
sahf
jl
in
xchg
push
mull
fimull
popl
mov
or
xchg
xchg
and
jns
inc
cli
and
mov
jmp
or
gs
aas
cmp
pop
push
insl
movsb
jns
out
xchg
xchg
jbe
xchg
in
test
dec
mov
mov
push
cwtl
or
xchg
outsb
pop
aas
fs
inc
out
jge
fs
jb
fs
test
imul
test
and
inc
sub
jle
sbb
das
jle
inc
mov
les
pop
movsl
jns
mov
sub
ja
or
mov
cmp
mov
adcl
sub
stc
fildll
jl
ficoml
sub
loopne
dec
ret
mov
mov
gs
and
in
add
out
add
sbb
scas
mull
mov
aam
ja
aam
mov
or
xor
shrb
mov
lret
sub
andb
sbb
aad
xchg
push
xchg
cmp
cmp
mov
inc
mov
popf
fwait
stc
sbb
addr16
int
sbb
in
push
adc
in
stos
enter
scas
push
cltd
mov
push
mov
leave
fisttps
gs
in
dec
aad
filds
mov
xchg
xor
cs
jne
into
cld
push
aad
sbb
lods
addl
dec
out
rcl
mov
dec
xchg
cmp
xor
mov
pop
cmpsl
testl
clc
pop
repnz
dec
mov
sub
out
repnz
dec
addr16
jns
inc
roll
jb
push
stos
test
iret
sub
cmp
movsl
jbe
mov
lds
rcrb
jecxz
push
push
pop
les
pop
xlat
mov
mov
mov
mov
mov
lods
imull
mov
cmp
insl
push
dec
in
lret
test
hlt
clc
mov
movsb
mov
and
cmp
dec
ss
dec
stc
ret
sub
jno
dec
push
stc
push
dec
jae
jo
fadd
cmp
push
fdiv
jecxz
or
cmpsb
mov
jbe
negb
addb
aam
add
hlt
pop
adc
rol
repnz
rcrl
test
ljmp
mov
dec
rcll
scas
in
jge
or
data16
sbb
sub
mov
mov
mov
jne
ret
add
icebp
fdivl
scas
sub
ss
add
xor
pushf
adc
and
leave
std
stos
imul
pusha
les
mov
out
pop
pop
jne
add
inc
mov
shl
loop
and
jo
mov
mov
roll
push
je
and
aaa
add
enter
pop
leave
clc
xchg
or
sbb
imul
aaa
flds
xlat
rorb
movsl
cwtl
out
mov
adc
push
imul
movsl
fs
cmp
jo
bound
test
insw
mov
mov
pusha
fnsave
fdivl
jno
push
pop
sbb
jmp
mov
ret
pushf
mov
inc
or
mov
xchg
iret
subl
dec
jl
dec
fcoml
cmp
outsb
jmp
aad
gs
aam
jns
and
jecxz
mov
xchg
jge
fwait
int3
push
or
and
punpckhbw
mov
mov
add
aaa
jmp
xor
or
data16
fistl
jae
pop
es
xchg
dec
mov
clc
sbb
cmp
in
sbb
sbb
scas
std
push
fisttpll
fiadds
shll
inc
cmpsl
mov
push
mov
add
and
lock
mov
inc
iret
pop
loope
nop
push
push
mov
mov
jae
lret
xchg
outsl
imul
inc
push
icebp
mov
fidivs
inc
adcl
xchg
cmp
in
mov
pop
push
cld
mov
enter
push
push
mov
ror
movsb
jbe
pushf
jbe
ss
jmp
mov
flds
and
gs
lods
xor
movsl
dec
fsubp
lcall
sbb
xor
adc
push
sub
dec
push
imul
mov
push
jne
aad
and
sti
mov
sbb
aad
addr16
stos
jmp
jne,pt
inc
je
in
push
stos
ds
loope
cmpsb
outsl
pusha
movsb
fsts
push
or
adc
inc
cmp
outsl
leave
or
je
test
loope
sub
popl
cmp
cmpsb
pop
inc
add
xor
pop
and
aaa
lds
xchg
adc
xchg
mov
les
addb
jl
lds
aaa
imul
je
rep
idivl
ljmp
pop
fwait
jg
mov
fidivs
xchg
xchg
dec
and
mov
notb
movsb
lahf
in
cli
ss
popa
push
adc
fucomp
js
rol
lcall
dec
mov
mov
inc
stos
rcrl
cmpsl
scas
pop
mov
fdivr
loope
sbb
pop
mov
jl
push
notb
cmpsl
inc
adc
jmp
jle
and
mov
jmp
mov
jo
or
mov
xor
ds
hlt
mov
fistps
pop
pop
xchg
cmpl
cli
aad
loope
adc
imul
fstpt
fldt
nop
sbb
inc
aam
cltd
out
jecxz
and
stos
xchg
mov
mov
roll
cmpsb
adc
mov
mov
js
xchg
out
xchg
mov
cmp
adc
je
mov
cmp
fcoml
cmc
sub
xor
inc
ror
mov
mov
test
inc
mov
loopne
fwait
push
cs
jecxz
aam
div
mov
pop
jmp
push
xchg
add
mov
std
es
mov
enter
push
add
jo
dec
xor
test
sbb
adc
add
mov
and
add
outsb
divb
add
fs
inc
jecxz
xchg
ret
mov
mov
jmp
test
int
jno
aaa
lods
bound
fsubrl
jg
pop
movsl
adc
fmuls
outsl
and
std
push
test
sti
je
jmp
inc
fnstcw
int
pop
adc
xorl
inc
or
inc
bound
pop
out
enter
sbb
and
in
lret
ljmp
jl
hlt
pop
jecxz
push
stos
cs
repz
mov
cmp
sub
cmp
fisubrl
add
sbb
xlat
and
dec
scas
pop
push
or
pop
add
or
add
jg
mov
scas
in
icebp
std
push
xchg
add
and
lock
imul
xchg
sub
jb
pop
mov
jmp
push
pop
pop
aam
ss
dec
mov
cmp
fnstcw
inc
adc
and
mov
cli
fs
push
push
ss
mov
jo
icebp
stos
outsb
aaa
aaa
pop
rorb
adc
adc
inc
mov
jb
sbb
ljmp
sbb
repnz
mov
cwtl
push
sub
push
rorl
fidivrl
xor
pusha
mov
sbb
mov
sub
add
pop
sub
cld
ja
imul
js
arpl
subb
lods
jne
xor
jbe
ficoml
sub
pop
mov
addl
xor
outsl
int3
mov
and
pop
bound
add
push
scas
in
out
ja
sbbb
addr16
pop
gs
or
dec
sub
cmp
jle
or
repz
cmpsl
lcall
sub
pusha
add
aas
push
or
testb
rcl
inc
outsl
aas
mov
cmp
push
sub
mov
adc
jo
imul
test
stos
sub
enter
popa
sbb
fists
shll
in
arpl
xchg
gs
mov
inc
push
pusha
dec
inc
fimuls
in
add
add
cmp
add
adc
jmp
xchg
sbb
ds
sbb
xchg
in
pushf
and
test
inc
push
dec
insb
inc
mov
xorb
dec
leave
sbb
lods
mov
dec
xor
int
stos
mov
xchg
add
mov
daa
in
add
inc
push
stos
addb
inc
jg
mov
ret
xlat
dec
adc
push
bswap
sbb
mov
xor
pop
int3
mov
jno
jne
popl
xchg
stos
jne
hlt
repz
adc
fld
shrd
dec
sub
sub
int
push
adc
clc
pop
das
push
imul
cmpsl
out
nop
xchg
inc
out
out
aas
sbb
inc
loope
add
lret
add
imul
xchg
andl
cs
xor
movsb
out
or
test
int3
jmp
sti
jns
out
mov
les
xor
test
out
dec
notb
pop
vmovlpd
dec
mov
cltd
ljmp
pop
or
or
push
mov
and
popa
insb
mov
mov
xchg
xchg
adc
scas
add
or
lret
enter
mov
adc
adc
pop
dec
jl
inc
adc
dec
and
push
push
xchg
and
fwait
cltd
mov
fsubrs
adc
js
xchg
fcomip
stos
add
hlt
adc
icebp
adc
jle
ds
push
aas
mov
mov
lods
dec
xchg
cmp
sub
pop
add
dec
jle
stc
cmp
mov
rcrl
add
mov
mov
dec
adc
push
rcrl
pop
sub
clc
push
js
out
mov
adc
cwtl
into
fdivr
push
cmpsl
jge
and
xchg
and
das
pop
inc
mov
or
jg
xchg
mov
std
adc
int
add
jge,pn
imul
fdivs
inc
xchg
test
test
movsl
enter
jbe
lods
call
sbb
sub
adc
push
mov
imul
ret
mov
ds
in
xchg
inc
arpl
push
pop
push
sbb
xchg
stos
call
enter
push
mov
cmc
fbstp
xchg
mov
pop
lods
push
leave
cmp
xchg
fbld
mov
mov
icebp
pop
and
inc
stc
xchg
aaa
xchg
repnz
sub
dec
sbb
loopne
sub
push
push
ja
out
fwait
jne
stos
scas
xor
iret
movsl
cli
aas
jmp
inc
lret
lods
push
loop
ret
cmp
lds
and
sbb
roll
out
push
inc
bound
push
nop
jge
cmp
or
in
and
sbb
inc
inc
pop
add
lds
cmp
icebp
pop
iret
ficoms
sub
pop
mov
aaa
aam
popf
test
push
aaa
mov
pop
sbb
subl
js
lea
shlb
test
fwait
fwait
ret
dec
push
aaa
lea
arpl
cmc
pop
fistpll
sub
out
xchg
xor
mov
mov
mov
pop
push
movsb
orl
jbe
ljmp
xorb
xor
jg
xacquire
hlt
stos
lea
test
add
inc
je
clc
std
data16
fstpt
std
and
pop
dec
lods
mov
adc
xchg
dec
aas
fisttpll
lcall
insl
imul
mov
pop
mov
lret
popf
sbb
lods
or
mov
lea
add
dec
ret
add
lret
mov
addr16
sub
and
pop
nop
mov
jge
lods
mov
mul
pop
cmp
adc
push
jbe
addr16
repz
mov
push
mov
pop
orb
outsl
mov
adc
gs
das
aam
ljmp
call
aas
xchg
pop
jnp
mov
stc
stos
sbb
pushf
jns
lock
clc
fsts
jnp
xchg
out
je
loop
pop
or
add
and
ret
dec
test
cmp
add
fisttps
push
sbb
dec
rcrl
daa
imul
xor
jnp
ret
addr16
sbb
popfw
mov
sbb
stos
cmp
jge
iret
ret
mov
js
mov
mov
cmc
arpl
add
pusha
gs
pop
add
shlb
loope
inc
and
cmp
pusha
mov
xor
lea
jnp
js
push
cltd
out
mov
and
inc
and
insb
in
sbb
dec
je
ficoml
pop
mov
cmp
mov
ja
test
adc
cld
cmp
insb
popf
sbb
pop
in
xchg
test
int3
enter
ljmp
out
shll
mov
leave
das
mov
sahf
pop
cmp
das
std
adc
out
cld
daa
mov
add
xlat
mov
pop
push
stos
adc
cmpsl
call
out
and
cs
out
repz
cmpsb
stos
push
fimuls
push
xor
push
jg
jmp
ror
add
push
xor
sar
clc
cmc
adc
jbe
fwait
inc
push
mov
daa
call
testl
adc
fidivrl
add
pop
or
xchg
dec
stc
mov
push
outsb
int
js
popf
sub
sbb
lock
movsl
out
jns
test
cmpsb
addr16
aam
jle
addb
sbb
xor
mov
pop
push
fs
sahf
mov
lods
sub
inc
aaa
fdivrs
loopne
ljmp
mov
mov
bound
stc
push
pop
negb
movsl
jecxz
pop
push
mov
int3
ss
scas
xchg
cmc
jae
mov
cwtl
mov
xchg
scas
sub
out
shll
dec
mov
insb
fs
icebp
or
mov
pusha
mov
aas
inc
push
add
cltd
in
aad
loope
ss
jp
ret
cmpsl
pop
jle
pop
cmp
jo
aad
fcmovne
jb
or
dec
sbb
shrb
in
jge
adc
mov
lahf
cmp
mov
adc
movsl
and
shlb
sub
push
xor
outsb
divb
mov
std
xor
sub
push
dec
xchg
aas
sbb
push
sub
mov
in
movsb
leave
inc
mov
fnstenv
sbb
push
adcl
dec
stos
lret
inc
jmp
mov
sti
pop
lds
inc
lcall
gs
testb
out
decl
pop
out
push
out
insl
push
push
daa
push
clc
cmp
push
jmp
loopne
pop
ds
jne
mov
pop
jge
sub
repz
outsb
aam
push
cmp
adc
xorl
ljmp
out
xchg
mov
adc
hlt
push
cmc
push
xchg
add
jp
aad
add
xor
jb
ret
sbb
sbb
loop
iret
add
sbb
xor
rcrb
repnz
mov
insb
xor
add
fidivrs
push
xor
and
mov
fmulp
pop
add
sbbb
insl
enter
flds
mov
into
push
pop
fisttps
jp
test
cmpsl
test
sbb
aas
jmp
cmp
mov
inc
sbb
and
xchg
jp
arpl
das
push
push
into
in
gs
add
push
pop
sbb
mov
cmp
push
mov
inc
push
inc
int
dec
lock
inc
incb
xchg
daa
test
or
push
jmp
adc
loop
xchg
inc
aas
cs
icebp
pop
add
xchg
popf
xchg
jne
xchg
push
mov
test
xchg
mov
sub
and
mov
mov
pop
ja
mov
or
jp
ret
fildll
icebp
cmp
arpl
mov
jge
das
mov
pop
popa
test
lds
mov
mov
sbb
int
and
inc
pop
rclb
les
xchg
fidivl
mov
sub
pusha
pop
insl
lods
mov
pop
dec
repnz
cmc
jns
sub
jge
scas
push
dec
cltd
mov
daa
push
or
mov
push
inc
icebp
pusha
push
cmp
lcall
outsb
and
ds
mov
xchg
add
adc
out
shl
insl
mov
sub
orl
subl
fcompl
dec
mov
jp
adc
jns
out
xchg
shlb
or
sub
and
cmp
cmp
movsb
xor
pop
aad
push
fsubl
mov
adc
icebp
sbb
mov
js
test
push
lea
fdivrp
add
pusha
lock
push
nop
inc
insb
jmp
or
bound
mov
int3
xor
out
leave
sbb
add
mov
cltd
pop
jl
mov
pop
iret
xchg
pop
cs
nop
sbb
leave
adc
pop
mov
data16
add
loop
inc
mov
xor
pushf
push
mov
push
fldenv
inc
cmpsl
adc
mov
cmp
lret
mov
adc
movsb
add
push
ffreep
jge
mov
sti
shl
loopne
jns
push
dec
push
lret
test
ret
rolb
fxch
aad
and
lock
pusha
js
lcall
add
cmp
mov
cmp
sbb
adc
rclb
out
push
insl
sarl
cmovle
cmp
pop
mov
stos
xor
lcall
iret
out
out
imul
mov
rcl
jecxz
sub
pop
pop
enter
adc
pop
push
sbb
ja
ret
cmc
dec
std
cmp
xorl
mov
addl
insl
les
adc
sub
adc
gs
loopne
cmove
pop
add
in
sbb
gs
xor
std
cmp
les
sub
mov
cmp
inc
mov
std
sahf
and
sub
xor
hlt
daa
jnp
ds
push
and
fldenv
pusha
add
imul
inc
jmp
xchg
mov
iret
ds
jns
popf
inc
mov
sub
addr16
or
xchg
push
mov
push
jp
mov
jo
and
dec
ss
xor
dec
xchg
loop
mov
out
mov
popf
rcr
ficompl
mov
andw
into
mull
and
aas
push
stos
shl
sbb
mov
loope
jne
xorl
daa
pop
out
adc
sbb
cmp
cmc
addr16
insl
je
pusha
inc
add
cmp
jb
push
sbb
adc
in
inc
sub
aad
mov
dec
dec
add
xchg
insl
cmc
es
push
xchg
jae
xchg
adc
sub
push
sbb
mov
adc
xchg
aam
dec
xchg
orb
jb
loop
xor
cld
inc
dec
sahf
fmul
sbb
ret
cmp
and
mov
call
or
scas
out
out
in
addr16
and
sbb
cmpsb
xchg
jo
or
add
leave
add
jae
xchg
dec
mov
sub
test
sbb
cmpsb
out
mov
sub
out
inc
sbb
insl
out
jnp
mov
std
fs
loopne
and
arpl
xchg
mov
das
mov
add
dec
out
xor
hlt
idivl
push
add
fidivrs
mov
adc
inc
jp
fsubl
fisubrl
jmp
mov
cmp
cmp
popf
sub
pushf
lock
mov
cwtl
in
inc
pop
sub
andl
cmp
movsb
pop
xchg
xchg
dec
xchg
cmp
stos
dec
cltd
mov
ret
jmp
push
inc
stos
js
or
dec
insl
rorl
inc
popa
or
shrl
popf
iret
inc
mov
mov
scas
cmpb
pop
cld
movsb
insb
pop
sub
test
movsl
int3
std
push
js
fwait
xor
adc
jecxz
pushf
rol
in
xchg
mov
mov
testb
pop
xor
jge
add
xchg
pop
cmpsb
pop
mov
clc
das
call
jae
hlt
movlps
mov
dec
movsb
in
btc
gs
hlt
add
outsb
push
iret
aaa
xchg
fdivl
sbb
out
testb
push
aaa
repnz
or
mov
test
aad
push
xchg
mov
push
fstps
fisttpl
xor
loop
sbb
jne
rcl
fs
xchg
jl
mov
sbb
cmp
add
mov
das
push
inc
push
jo
cmp
mov
inc
jl
mov
inc
sbb
inc
sub
icebp
jbe
js
fadd
or
scas
sbbb
pop
fcmovu
sub
xor
aaa
and
inc
push
mov
mov
ja
movsb
jns
icebp
fildll
lods
mov
jns
mov
rcrl
dec
aas
sub
mov
xor
cmp
imul
jp
out
dec
sub
in
and
push
pop
mov
mov
lds
shll
and
in
das
popa
fsubrl
aaa
fsts
movsl
imul
adc
and
fmuls
pop
call
outsl
xlat
dec
inc
adc
sahf
mov
js
orl
ficompl
test
jbe
jg
das
inc
ret
stc
movsb
ror
mov
dec
setle
leave
push
loop
sbb
inc
jae
cmp
dec
clc
aas
xchg
lods
xchg
push
icebp
addr16
aaa
movsl
adc
movsb
dec
cmp
lea
xor
pusha
rorb
fst
pop
adc
pop
sub
mov
je
push
fwait
pop
inc
jle
fsts
repnz
or
mov
inc
add
cmp
mov
mov
sbb
pop
aas
jmp
cmp
mov
loopne
mov
mov
sub
clc
pushf
mov
add
jns
cmp
fidivl
lock
andb
xor
rorl
je,pt
lods
xor
aas
mov
sub
fwait
imul
das
shll
jecxz
sbb
push
leave
pop
aas
mov
jb
daa
out
dec
xor
pop
imul
lcall
mov
push
mov
sbb
mov
xchg
ljmp
int
ret
mov
lcall
jbe
or
sub
mov
jecxz,pt
shlb
scas
dec
mov
dec
test
mov
pop
clc
pop
leave
push
hlt
iret
sub
gs
xor
push
rclb
push
mov
cmp
aam
aaa
mov
iret
cwtl
icebp
sbb
fs
add
and
xchg
xchg
daa
fwait
pusha
dec
mov
and
popa
inc
stos
or
sbb
mov
mov
loop
mov
enter
cmp
or
movsb
mov
or
sub
sti
mov
fwait
dec
dec
hlt
mov
call
cmp
sarl
cmp
icebp
out
and
sahf
adc
add
mov
push
mov
mov
and
jno
jge
xor
mov
jne
jecxz
and
or
mov
jg
push
cmpsb
dec
shlb
in
cmp
scas
mov
ss
mov
jl
ss
and
mov
out
sub
mov
mov
imul
imul
pop
lods
arpl
imul
inc
mov
adc
pushf
sub
test
mov
xchg
push
das
adc
add
push
lock
sub
imul
fnstenv
aam
movl
inc
into
jno
jp
mov
inc
xchg
ret
and
gs
in
sbb
clc
sbb
pushl
sub
jnp
or
outsl
jo
cmp
dec
rolb
add
sub
std
mov
dec
mov
cmpsl
jmp
xchg
outsl
dec
jbe
xor
xchg
fstpl
sub
push
or
repnz
dec
jns
and
sub
in
jecxz
jnp
test
xchg
std
or
repnz
lods
idivb
fstl
xchg
adc
movsb
ds
adc
and
dec
mov
and
xlat
or
jmp
sti
sub
adc
xor
jo
and
mov
fstl
pop
leave
mov
jp
fists
roll
push
sub
jnp
imul
movsl
aam
cmpsl
test
xor
popa
dec
es
daa
jle
xor
fiaddl
push
push
fsub
insl
cmpsb
or
scas
test
das
sub
inc
sbb
pop
pop
inc
adc
xor
mov
mov
jno
pop
dec
or
test
xor
insb
shl
mov
out
lds
outsl
or
xor
mov
scas
adc
test
mov
jbe
popf
cwtl
rcll
push
pop
inc
inc
repz
lock
ds
ror
mov
pusha
call
push
adc
dec
cmc
nop
lea
les
push
pusha
ljmp
pop
test
push
stos
imulb
clc
stos
adc
or
sub
jo
inc
xchg
in
push
add
lods
es
pushf
dec
scas
call
arpl
lret
cmp
popa
pop
mov
pusha
scas
inc
jo
dec
in
pop
mov
dec
push
ja
in
fwait
pop
pop
fistpl
xchg
add
sbb
mov
out
xor
or
insl
fldenv
cmpsl
rcrl
cmp
xchg
cmc
mov
push
add
cld
aad
mov
faddl
xchg
pop
scas
ds
xchg
in
imul
jns
jmp
sbb
in
mov
push
insb
cmp
gs
out
pop
or
mov
add
and
iret
and
sbb
xchg
into
fnstcw
daa
std
cmpb
xor
jo
pushf
aaa
adc
in
xchg
cltd
leave
push
mov
pop
fdivr
scas
mov
lock
insb
or
mov
sbb
sub
fisubrl
push
repnz
rol
pop
inc
push
inc
and
cmp
subl
js
push
ret
sub
cld
xor
push
outsb
push
fld
adc
popa
test
sbb
popf
mov
cmp
pop
add
mov
or
mov
imul
add
mov
aam
arpl
stos
pushf
mov
scas
enter
imul
inc
pop
jb,pt
add
xchg
mov
or
xor
push
jns
je
push
icebp
push
mov
jns
pusha
xchg
shll
mov
inc
lret
jbe
aam
rcrl
and
jmp
dec
testb
lahf
shll
jb
mov
dec
fucomi
mov
mov
inc
push
fstps
mov
int
mov
pop
dec
mov
movsb
mov
fnstsw
sub
push
mov
out
xchg
rol
xchg
cld
imul
ss
push
fisttpll
xchg
xchg
adc
inc
dec
adc
push
add
ja
mov
repz
enter
bound
pusha
sub
outsb
pop
and
jmp
out
dec
and
jg
push
mov
cld
jl
cmp
inc
call
push
pop
enter
adc
icebp
xchg
subb
mov
fmulp
mov
cmpsl
and
jmp
loop
push
fbstp
jo
mov
rorb
dec
int
and
hlt
mov
cmp
loope
and
cmp
lods
add
ss
jno
inc
jno
cmp
lock
pop
icebp
adc
subb
or
mov
cli
xor
pop
aaa
or
pusha
push
cwtl
aaa
call
jmp
sub
test
rcll
add
je
aam
inc
fs
xor
inc
repnz
xlat
sti
sub
jns
sbb
fldenv
add
xchg
ret
daa
ret
mov
fs
in
inc
sti
rclb
xchg
cmpb
mov
sub
cs
ja
jbe
inc
dec
rclb
lret
mov
pop
sarl
stos
aas
dec
clc
mov
popf
lods
adc
into
push
sahf
push
sub
mull
mov
and
incl
jp
das
andb
rcr
jmp
shrb
mov
mov
add
xor
lock
pop
int3
mov
scas
cmpsb
insl
out
jle,pt
insl
aas
jbe
sub
or
adc
pop
xlat
xchg
mov
add
cwtl
test
out
add
jns
imul
push
adcl
or
inc
hlt
xor
pop
mulb
xor
add
popl
pusha
fstps
movsb
sbb
ljmp
shll
aaa
les
mov
or
inc
fwait
roll
ljmp
mov
adc
adc
mov
mov
inc
pop
xor
jp
pusha
dec
pop
bound
repz
lret
mov
pusha
add
insl
cmp
or
daa
loope
adc
jle
push
sbb
xor
dec
xor
xchg
lret
sti
xor
cmp
mov
arpl
dec
xor
sti
in
xchg
push
mov
sbb
data16
jbe
insb
xor
push
xchg
movsl
dec
lods
xor
sub
mov
or
les
sbb
fwait
insl
fsubrl
imul
inc
lea
sub
aas
jmp
imul
jecxz
cmc
cld
fiadds
cmp
adc
mov
add
push
js
mov
lahf
inc
inc
cs
test
insb
jns
or
mov
sbb
iret
stos
lea
loopne
jno
stc
das
dec
inc
popf
insl
je
jne
pop
sti
inc
ds
in
in
out
rclb
fwait
jmp
lret
xchg
push
and
xor
fstpt
add
dec
jle
mov
movsl
addr16
cli
mov
adc
inc
test
fildll
rolb
cs
test
shll
les
gs
mov
sbb
or
fcmovnu
mov
aam
adc
mov
dec
xor
push
mov
mov
icebp
call
or
push
popa
and
ret
ljmp
imul
push
loop
sub
leave
clc
pop
shll
repz
pop
xlat
jns
loop
out
or
dec
imul
mov
push
outsb
xor
mov
push
stc
aad
loop
loop
jg
out
push
lods
sbb
add
sbb
cs
add
or
loopne
fisubrs
jecxz
test
cwtl
stos
sbb
dec
fsubrs
jbe
or
pop
mov
pop
std
mov
pop
add
icebp
pusha
cwtl
sarl
push
mov
adc
mov
insl
push
sarl
int3
mov
lret
sub
jle
pop
sub
sub
stc
xchg
in
test
xor
jmp
pop
subb
pop
dec
jae
movsb
and
push
inc
out
imul
in
push
sbb
repz
in
and
push
sub
sahf
sti
movsl
aaa
popf
outsl
xchg
fnstenv
test
sbb
leave
or
inc
arpl
push
call
mov
push
ds
gs
xchg
inc
out
mov
cmp
lret
mov
sbb
and
cwtl
mov
or
mov
cmpsl
or
cmpl
mov
sub
test
popf
xor
lds
sub
frstor
mov
aad
cld
xor
xor
out
jno
fistpll
hlt
xchg
mov
in
iret
push
imul
dec
out
cmp
call
xchg
xor
pop
jge
sbb
sub
mov
pop
dec
pop
pop
or
xchg
sarb
inc
sub
cli
nop
ficomps
mov
add
mov
lea
stos
cmpsb
in
xor
push
add
pop
mov
mov
das
and
jecxz
mov
repnz
xchg
lock
cmp
subb
adc
sbb
sub
ficoml
cmc
mov
scas
xchg
sbb
cmpsb
subb
push
dec
adcl
ret
xor
iret
mov
je
cmpb
aam
pop
loope
js
push
jbe
pop
nop
imul
sbb
or
jp
in
push
sub
insb
leave
lods
and
hlt
subl
jp
sahf
push
pop
jge
pop
add
sbb
adc
xor
aad
pop
mov
push
out
fwait
into
in
js
roll
jge
dec
movsb
aaa
jl
mov
data16
pop
or
push
xor
mov
push
add
psubusw
push
imul
or
dec
in
ds
lods
add
mov
xlat
or
inc
add
cli
aas
or
mov
lds
jg
loope
dec
jge
daa
jg
sbb
in
jl
mov
aas
outsl
enter
in
lret
adcl
dec
jo
pop
or
xor
sub
roll
clc
push
cmp
pop
xor
jmp
mov
repnz
pop
not
cmpsl
xor
wbinvd
test
and
scas
lahf
and
pop
rep
dec
and
in
dec
cmc
data16
add
or
les
mov
mov
stos
scas
mov
loope
jge
je
mov
xchg
fmuls
mov
mov
data16
mov
fs
adc
xchg
addr16
addb
je
jae
lahf
cmp
seto
dec
fcmovne
add
addr16
jp
cmp
inc
xor
fistps
fisttpl
dec
jmp
or
fs
aad
mov
mov
cmp
jp
push
mov
and
sub
loop
sub
mov
push
fwait
gs
xor
sbb
jne
test
mov
ss
xor
gs
aas
sub
jnp
int3
pop
addl
xor
iret
aad
pop
mov
cmpsl
dec
or
dec
std
and
xchg
pop
aas
pop
jae
jae
push
enter
xor
sbb
lcall
jl
ficompl
sub
jnp
or
mov
adc
mov
repz
cs
inc
ja
xchg
mov
inc
jbe
stos
imulb
icebp
popf
or
push
dec
and
and
iret
or
cwtl
aas
add
movsb
stc
gs
jns
int
push
xor
push
rorl
sbb
push
and
xor
jns
movsl
jns
jae
into
lock
jmp
out
pop
adc
std
ret
aam
dec
or
stos
mov
mov
sbb
mov
test
adc
sub
xor
jp
in
cmp
xchg
dec
add
loop
das
jb
inc
es
mov
shlb
or
sti
jle
inc
mov
mov
and
pop
nop
xor
rolb
xchg
cmpl
mov
xchg
lods
shll
jnp
testb
sbb
fwait
jb
mov
sbb
xchg
ja
pop
mov
adc
jmp
adc
das
mov
pop
xchg
lcall
mov
adc
bound
push
dec
pop
dec
movsl
mov
xchg
fdivs
pop
xchg
sbb
dec
sub
sar
and
cmp
lea
push
popf
aad
and
cmp
jg
incl
test
pop
xor
or
loope
or
ja
mov
pop
adc
push
cmp
inc
xlat
pushf
leave
jo
pop
cmp
inc
mov
xor
ds
inc
mov
pushf
mov
jbe
cmpsl
leave
fbld
out
push
out
fsubl
mov
jge
mov
push
stc
out
sahf
fistps
xchg
fists
lods
sbb
pop
loopne
mov
iret
xchg
mov
pcmpeqd
or
shlb
pop
sub
popa
cmpsb
adc
pop
pusha
and
aas
popf
fsub
pop
cmp
imul
jmp
ss
adcl
mov
nop
sti
adc
cmp
pop
icebp
push
xor
out
test
push
xor
xor
lcall
adc
in
push
mov
fsubrs
add
xorb
icebp
sbb
adc
mov
int
sbb
inc
shlb
subl
cmpsl
int
ds
cltd
clc
lds
inc
mov
fdivrl
sahf
in
scas
sub
lret
dec
and
icebp
or
sbb
jns
jle
dec
daa
xchg
pop
lahf
jmp
jge
repnz
les
push
sbb
test
dec
jmp
dec
test
xchg
xor
jno
xor
addr16
mov
in
popf
push
mov
or
pusha
call
addr16
stos
out
xchg
pop
in
mov
jmp
lock
inc
pop
dec
pop
imul
stc
mov
pop
mov
dec
lcall
lods
xchg
imul
fdivr
rcrl
mov
cmpsb
in
mov
inc
in
scas
lahf
test
mov
popf
scas
in
lcall
inc
xlat
cli
jnp
aas
cmpsb
fmuls
xchg
lret
mov
sbb
xchg
mov
fcomip
jle
imul
fwait
imul
js
mov
mov
xor
cmpsb
lret
sbb
and
and
jge
dec
mov
scas
repz
popf
or
xor
cmp
dec
xor
and
lods
js
pop
enter
lods
andl
xchg
out
retw
mov
imul
cmpsl
push
xchg
imul
cmp
push
cmpsl
cwtl
enter
into
mulb
mull
test
mov
pop
sub
xchg
outsl
jge
push
sar
jno
lcall
dec
lock
jbe
sbb
pop
lret
xchg
scas
imul
aas
cmp
sub
xor
pop
lret
pop
jno
mov
push
adc
and
adc
xorb
ds
aas
outsl
sub
decb
dec
xlat
mov
loop
popf
cld
test
test
repz
add
push
add
sahf
push
lods
addr16
int
fs
or
stos
dec
shrb
popf
decl
leave
arpl
xchg
adc
outsb
dec
push
ja
sbb
jge
jmp
or
adc
add
icebp
test
jae
adc
cmp
sbb
mov
xchg
imul
inc
lcall
clc
out
mov
xchg
stos
pop
fstpl
mov
jo
pop
jnp
popa
ja
mov
scas
mov
pop
and
or
rcr
out
mov
sbb
aaa
mov
cs
shl
sbb
add
stc
jns
adc
cmc
sub
je
das
stos
fbld
loope
addr16
jp
and
inc
test
push
dec
pushf
xlat
repnz
jg
bts
sub
shrb
test
cmp
pushf
bound
fwait
push
jns
inc
xchg
dec
inc
int3
mov
inc
jnp
xchg
push
aaa
jbe
in
push
push
sbb
mov
movsl
xor
mov
ret
mov
jge
call
mov
test
lret
test
push
cld
das
adcb
mov
fs
leave
div
in
fmul
or
fisubrl
or
enter
mov
sub
cmc
push
pop
cmp
loopne
int
and
loopne
inc
sub
rcrl
sbb
pushf
mov
xor
push
mov
or
add
add
je
mov
cltd
and
push
xor
jae
mov
jle
mov
les
fists
cs
cmp
push
shlb
adc
dec
jmp
xor
xlat
sar
and
cmpsl
jmp
icebp
and
pop
xchg
and
jmp
frstor
ret
adc
scas
cltd
bnd
mov
xor
add
les
pushf
enter
fdiv
scas
sbbb
sahf
mov
les
push
cltd
sar
xchg
fidivs
std
out
aaa
mov
adc
pop
or
sbb
in
or
bound
lret
outsb
arpl
mov
shld
testb
mov
xor
cmp
sub
sbb
sahf
cmove
ss
xchg
xchg
enter
test
ja
xor
xchg
push
std
nop
xorb
loop
movsb
or
sub
xchg
inc
xor
push
sahf
cmp
repnz
mov
and
xor
or
inc
sahf
jmp
je
and
xor
push
pop
les
push
jb
push
decb
out
movb
test
fcoml
inc
fildll
imul
int3
inc
loopne
cs
cmp
jmp
imul
push
out
sbb
mov
out
cltd
jae
add
pop
cli
into
pop
cmp
rcll
mov
sub
rorb
lea
push
cld
cmp
mov
stos
pop
or
ds
xchg
push
js
dec
jno
in
scas
xchg
add
test
jle
ret
or
cmp
arpl
sbb
dec
jb
rorl
dec
cmpsl
adc
jl
ja
cltd
xchg
popa
pop
outsl
mov
loope
popa
xor
cmpsl
rcrb
lret
dec
mov
mov
scas
movsb
xchg
shlb
dec
lret
iret
out
pop
sub
jmp
cs
repnz
push
outsb
xchg
and
pop
je
and
inc
es
clc
ljmp
pop
jmp
lret
adc
mov
sbb
mov
aas
sub
loope
es
jmp
pop
imul
and
imul
loop
and
lcall
xor
or
mov
jle
fs
es
test
lcall
jmp
fidivrl
xor
insb
push
and
das
cmpsb
jge
jg
push
ja
pop
or
mov
mov
fidivl
out
xchg
xchg
xor
sbb
pop
dec
out
push
je
ret
inc
cmp
pop
lods
inc
jg
sub
dec
out
loopne
xor
sti
mov
pop
mov
dec
scas
add
cwtl
mov
test
test
mov
or
push
in
xchg
dec
sti
mov
xchg
leave
sbb
mov
lds
push
lods
inc
push
sbb
call
add
test
xor
adc
lds
cmp
mov
ret
fnstenv
ret
dec
out
pop
jg
sbb
and
mov
out
lock
loop
aaa
pop
das
xor
ljmp
sahf
js
outsl
dec
mov
ja
xchg
cs
push
push
mov
fiaddl
fcmovnu
dec
pushf
test
loopne
or
mov
fs
add
ror
sub
outsb
pop
sarl
fsts
push
cs
mov
movsb
ret
fs
es
cmp
pop
pop
and
inc
bound
imulb
in
inc
movsl
icebp
cmpsl
sub
add
mov
jb
repz
iret
pop
icebp
divl
dec
push
and
movsb
lds
sub
sub
leave
in
dec
inc
inc
enter
mov
into
lods
orb
sarl
fwait
mov
jl
sbb
push
mov
cmovl
lret
xor
insb
in
jno
cmp
xorl
in
jae
sub
insb
out
pop
out
hlt
inc
jmp
add
aaa
in
pop
das
popf
sub
sbb
pop
pop
mov
sub
int3
jnp
shl
mov
xchg
jp
jne
pop
lods
out
loopne
test
int3
out
lds
test
aaa
call
sub
adc
push
xor
test
xor
xchg
ds
rorl
push
dec
jns
in
sbb
or
cmp
shrb
aas
out
popf
pop
mov
cs
sub
xchg
mov
xor
mov
flds
in
andb
xchg
dec
jno
pop
outsl
cmp
lods
scas
rclb
clc
jne
lret
inc
aas
push
pop
hlt
xchg
jbe
add
jno
ret
jb
fimull
fmull
pop
xchg
outsl
mov
add
leave
sbb
xchg
pusha
adc
int3
cmp
into
fcomi
ja
stos
ja
adc
loopne
enter
pop
les
imul
jle
push
add
or
mov
fimuls
loope
scas
lret
lods
push
and
jb
les
ljmp
imul
xor
cs
sub
andb
mov
ss
mov
popf
inc
xchg
or
push
mov
add
imul
adc
xchg
imul
filds
in
jmp
push
cmp
out
adc
add
cld
in
fistl
fstpl
data16
jae
out
xor
ret
repz
sub
in
push
fdivrl
dec
xchg
pop
mov
int
inc
mov
test
and
hlt
mov
fwait
orl
out
cmp
jg
cmp
sub
enter
mov
scas
sbb
icebp
cmp
add
lret
loop
cmovle
cltd
mov
enter
or
into
push
lcall
bound
sub
mov
orl
fistl
in
aam
mov
push
adc
in
insb
and
push
cmpsb
outsb
cmp
or
push
inc
jnp
jne
mov
cltd
arpl
mov
xor
fwait
add
in
xor
sbb
std
negl
out
inc
outsl
fidivrs
or
push
adc
insb
dec
push
rcrb
in
pushf
test
test
aaa
imul
xor
xor
shr
scas
jne
adc
push
in
shll
das
lcall
cmp
js
je
fdivrl
in
aaa
scas
inc
das
jae
lcall
lods
xchg
push
js
popa
nop
push
leave
repz
xor
lods
mov
ret
daa
stc
mov
add
mov
and
and
fisttpll
mov
add
enter
out
sbb
jmp
in
sbb
and
and
sarl
ret
sub
pop
push
mov
ds
push
mov
or
test
pop
dec
shl
jns
pop
add
pusha
pop
xor
ret
push
adc
jmp
das
mov
inc
mov
outsl
xor
sub
jne
and
js
ficoms
loopne
icebp
lock
insb
test
and
push
outsb
push
lea
aad
lock
pop
push
ljmp
pop
push
popa
xor
or
pop
daa
jp
add
in
cmp
jecxz
js
leave
lods
cmp
push
xchg
iret
push
fimuls
in
inc
in
pop
stos
push
rcrb
pop
mov
dec
ret
ret
jno
pop
repnz
std
jns
mov
mov
daa
test
xor
call
push
out
mov
mov
mov
mov
cli
idivl
cltd
ljmpw
and
and
push
sbb
rolb
dec
mov
xchg
dec
pusha
outsb
push
mov
inc
gs
mov
cmc
or
dec
leave
in
in
mov
mov
test
out
or
xchg
repz
cmp
xor
mov
cmpsb
arpl
sub
and
mov
gs
ret
sub
ja
mov
int3
inc
adc
jno
clc
push
xor
push
ret
das
add
jp
movsb
inc
sahf
push
ficoml
test
test
push
jg
cmp
mov
test
mov
jmp
jge
test
and
and
insb
cmp
out
nop
mov
pop
mov
outsl
lahf
leave
int
arpl
inc
rolb
and
stc
shll
lcall
jo
add
cld
pusha
mov
in
or
fadds
bnd
push
mov
sbb
fs
fistpl
gs
decb
or
sub
cmp
sbb
and
ret
sbb
push
push
scas
cmp
mov
mov
fistps
out
jne
push
aad
aam
addr16
mov
out
popf
jg
in
loopne
pop
mov
test
out
loop
sub
cmp
push
pop
imul
call
call
clc
push
or
popf
imul
push
sarl
bnd
adc
pop
inc
std
aam
lret
jns
test
xor
adc
iret
mov
pop
lds
xlat
cmpsb
arpl
dec
ljmp
xchg
mov
adc
inc
ss
mov
pop
mov
inc
or
in
push
and
shufps
pop
adc
int
js
push
xchg
cmpsl
and
scas
rorb
loop
or
jmp
and
stos
and
aad
loopne
push
xchg
cs
mov
dec
or
lcall
aam
scas
insl
cli
sbb
sub
lret
jbe
sbb
xor
sbb
sbb
sub
fwait
jbe
fcmovnbe
sub
lock
ret
sub
cld
pop
ret
adc
fdivs
jne
push
cmp
pop
jno
and
sbb
push
pop
addr16
es
or
cmp
fisttpll
inc
or
mov
mov
mov
in
jecxz
sar
ret
inc
mov
inc
or
repz
cmp
xlat
inc
out
xor
adc
popa
shll
or
mov
sbb
pop
or
out
in
mov
mov
mov
lcall
repz
xchg
jae
xor
into
xlat
popa
dec
or
mov
cld
lahf
test
cmp
ficompl
pop
stos
sbb
push
test
add
sbb
inc
mov
adc
adc
and
div
mov
push
loop
mov
and
jmp
push
xchg
ficompl
insb
jb
xor
cmc
insl
xchg
out
jge
xor
addr16
mov
sub
jae
lea
or
cmp
xchg
stc
lods
fdivl
mov
mov
ficoms
lea
fistpll
sbb
mov
addb
xchg
inc
fwait
cmp
sar
stc
imul
inc
lea
jmp
scas
or
shll
pop
push
fcoml
pop
mov
daa
inc
jmp
push
mov
mul
inc
std
pop
xor
repnz
jb
cmpsl
gs
pop
jp
or
popf
lret
add
cld
ret
incb
dec
cmp
sti
andb
adc
stos
in
in
adc
aas
add
xor
loope
push
push
ret
fstps
insb
xchg
js
jo
jmp
sti
mov
jae
xor
and
mov
push
push
xor
sub
xchg
dec
pop
and
subl
shl
sti
pop
mov
into
inc
inc
xlat
jns
inc
inc
sub
cld
scas
jmp
call
xchg
sub
je
sub
pop
cmp
dec
sbb
jae
inc
mov
inc
lock
cmp
sub
scas
ds
fwait
xchg
imul
inc
leave
jae
loopne
lret
fimull
xor
enter
and
dec
sub
out
lods
popf
out
mov
lock
push
pushf
test
adc
push
jns,pt
and
mov
sub
std
jne
push
jmp
lcall
int3
sbb
nop
imulb
test
je
enter
and
add
mov
call
add
push
inc
and
mov
ret
dec
mov
psrlw
lcall
out
push
push
inc
cmp
dec
push
xor
popa
xchg
adc
add
jmp
imulb
xlat
outsl
mov
loopne
ljmp
xchg
adc
or
push
xor
mov
outsb
inc
lea
loop
loope
in
popa
je
push
pusha
mov
sarl
or
xchg
pushf
test
adc
scas
js
push
or
mov
mov
popa
push
inc
cmc
pusha
lret
jno
push
dec
js
hlt
imull
mov
adc
push
pop
xchg
xlat
aas
add
jb
or
test
lock
or
int3
mov
mov
pop
int3
fisubrl
iret
nop
push
lcall
add
inc
cmp
pusha
dec
outsl
lcall
fldenv
stc
sbb
and
and
mov
mov
lcall
in
sahf
pop
mov
jns
jecxz
lea
add
adc
add
jp
adc
daa
fcom
pop
mov
lock
aad
sbb
sbb
jno
jge
or
dec
mov
arpl
or
nop
mov
xor
sub
xor
mov
cmp
ja
jns
rcl
xchg
cmp
ja
xlat
xor
dec
mov
push
xchg
cs
lcall
pop
mov
xchg
aad
rcr
inc
mov
es
dec
test
clc
xor
pusha
inc
push
ljmp
mov
push
test
arpl
popa
outsl
pop
mov
aad
dec
push
cwtl
dec
les
add
out
jno
lock
ja
fidivs
leave
pop
aas
jnp
les
lret
jg
ffreep
dec
in
push
add
lcall
cwtl
movsb
aas
imul
xchg
push
add
xchg
pop
ja
push
sbbl
inc
sub
jmp
adc
dec
mov
pop
pushf
cli
sbbl
jae
dec
and
pop
jbe
push
movsb
or
dec
addr16
je
xor
lods
stc
jmp
lods
mov
pop
xor
roll
jle
les
ss
std
sbbl
mov
push
xchg
jg
push
jae
adc
jecxz
or
lds
push
scas
rorb
scas
xchg
mov
pop
lds
and
xlat
pop
fsts
cmpsl
or
jp
adc
pop
das
fisttps
mov
scas
push
cmp
popa
fbstp
sti
es
cmp
and
mov
lods
pop
aam
add
fiadds
out
cmpsl
loopne
adc
inc
das
lcall
shl
imul
out
gs
mov
fidivl
xchg
fistpl
fldl
sbb
adc
sahf
mov
jg
divb
mov
mov
bound
mov
mov
and
xchg
lret
std
jae
stos
mov
mov
mov
movb
adc
mov
jns
push
push
sub
dec
pop
jp
pop
sub
adc
pandn
aad
lcall
test
fstpl
jnp
cmp
mov
data16
ret
and
adc
cmp
jp
lock
jae
ss
pop
out
jae
pop
mov
test
push
mov
insb
test
xor
xchg
add
pop
sub
stos
fucomip
outsl
mov
pop
sbb
enter
mov
leave
shlb
test
aam
orl
ja
jmp
rclb
popf
mov
xor
in
pop
or
mov
add
sbb
ror
iret
mov
enter
push
cli
add
arpl
cmp
or
inc
xchg
std
or
sbb
rcrl
mov
dec
sbb
push
dec
repnz
mov
aam
cmc
std
in
int
jne
inc
stos
jnp
sbb
xor
sub
decb
addr16
xor
sbb
mov
aaa
mov
cltd
cmc
mov
pop
push
add
pop
lea
outsb
hlt
jmp
pop
push
mov
mov
xor
pop
inc
pop
xor
and
pop
out
test
jo
xchg
sub
adc
xor
ss
push
jg
jmp
jl
pop
inc
hlt
mov
out
adc
or
sbb
and
xchg
adc
and
loope
jno
pushf
push
outsb
dec
mov
jg
sub
sahf
inc
jl
aas
or
sbb
stc
imul
lea
mov
movhps
push
loop
push
imul
subb
insb
xor
mov
dec
lds
push
sub
pop
add
adc
mov
inc
stos
xchg
sub
iret
mov
fcoml
push
lds
push
xabort
pop
xor
insb
xor
divl
inc
inc
xchg
ljmp
enter
enter
mov
push
fstpt
pop
test
dec
adc
aad
pushf
pop
jno
insl
mov
jmp
sbb
neg
push
jnp
inc
dec
dec
sub
repnz
test
pop
jle
fsts
sub
adc
andl
fucom
enter
or
stos
cmp
call
int
mov
and
roll
fsubrl
stc
js
mov
js
lahf
sub
or
and
adc
xlat
lea
mov
sbb
ja
enter
lds
data16
bound
sar
mov
fucomi
adc
shlb
jmp
daa
push
cld
push
pop
cwtl
dec
and
jg
or
and
movb
or
fcoml
and
mov
add
inc
in
ret
dec
cmp
sbb
sti
test
insl
sbb
adc
test
xchg
add
cmc
in
mov
xor
jb
xchg
std
mov
mov
sub
add
insl
popf
iret
rcr
repz
jge
cmp
test
divb
xchg
icebp
pop
movsb
inc
inc
push
int
fisubrl
jmp
xchg
xchg
in
jae
mov
mov
dec
pop
pop
stos
mov
clc
subb
scas
mov
in
call
pushf
ss
lock
xor
jg
inc
xchg
ds
cwtl
shlb
cmpsl
daa
pushf
loopne
xchg
xor
lcall
in
xor
aas
cmp
shlb
mov
or
in
fisttpll
push
pop
imul
push
sbb
inc
sahf
loopne
pusha
and
call
out
adc
xchg
pop
aas
leave
adc
xchg
hlt
mov
nop
dec
sub
fwait
dec
cltd
fisttps
loopne
out
aad
stc
pop
lcall
cmp
xchg
lods
ds
sbb
cmp
mov
nop
cmp
insl
outsl
fisttpl
shll
and
nopl
inc
mov
outsb
pcmpgtw
cld
dec
fwait
and
pop
lock
hlt
inc
push
fdivl
mov
lret
pop
and
gs
pop
rorb
mov
mov
bnd
daa
and
negb
mov
out
test
fcoml
imul
dec
or
mov
add
sub
jne
les
int3
jg
mov
mov
inc
xchg
aas
icebp
add
push
push
int
push
push
test
loopne
push
mov
adc
pop
mov
push
arpl
push
adc
adc
fdivl
xchg
je
inc
lea
int
shrb
adc
xchg
imul
jns
sbb
pop
gs
outsb
or
js
fstp
insl
cltd
push
cs
xor
dec
xchg
out
dec
je
enter
jo
ficompl
push
js
aas
mov
jo
pop
and
cmc
xor
pusha
mov
and
pop
mov
pop
aas
dec
fildll
xchg
push
push
ja
dec
xchg
cltd
push
jl
pop
and
xor
fiadds
sbb
add
pushf
int
into
ret
mov
fidivs
push
add
mov
jb
pusha
cmp
cmp
cmp
jecxz
pop
mov
fstpt
jbe
cmp
pushf
cmpsl
jp
inc
in
fistps
dec
xor
divb
jno
sbb
ret
jns
push
sub
test
ds
insb
scas
call
push
movsl
data16
add
xchg
subl
adc
fcomip
dec
add
jns
test
xor
adc
xchg
repz
cmp
pop
out
leave
cmc
jg
mov
in
jg
push
add
push
inc
push
iret
or
gs
std
fldenv
inc
dec
xor
or
popa
jmp
push
and
cwtl
mov
jmp
std
mov
xchg
xchg
imul
cltd
fnsave
ss
das
jne
addr16
stos
mov
add
add
jl
addb
in
cld
mov
ret
or
add
jg
mov
test
push
xchg
outsl
sbb
out
mov
faddp
mov
ds
push
jb
subl
sub
pop
push
and
add
cmp
push
and
xlat
les
adc
call
cmp
lods
xor
dec
pop
dec
jge
jp
int
add
adc
cmc
inc
dec
jne
std
dec
cmp
std
aas
jnp
test
dec
mov
xchg
mov
daa
cmp
cmp
sbb
fs
into
jbe
popf
js
int3
data16
mov
inc
pop
movsl
jne
adc
adc
ds
icebp
pop
insl
sbb
push
adc
jge
mov
clc
iret
push
iret
in
testb
adc
xor
mov
movsl
xor
lret
ds
sahf
insl
push
mov
sbb
mov
fldenv
add
inc
rcrl
xor
jnp
pop
xchg
sub
ret
and
xchg
movsl
mov
test
jno
cmp
adc
ret
ja
cmp
leave
xchg
andl
pop
pop
insl
jb
mov
mov
adc
mov
cmpsb
dec
lods
inc
cmpb
test
popf
bound
int
rorb
sbb
dec
clc
add
mov
inc
dec
inc
mov
roll
xor
pushf
popa
sbb
adc
sbb
sahf
dec
jnp
adc
popf
jmp
js
loop
lock
mov
xchg
fidivrs
nop
push
push
or
insl
add
insb
push
sbb
enter
in
movsb
xor
roll
jge
cwtl
mov
push
add
dec
jl
shl
dec
aam
fstpl
sbb
jo
pop
and
outsl
into
inc
adc
aam
xor
outsl
add
lret
mov
pop
pop
push
ret
dec
cmc
jge
pop
test
iret
push
pop
dec
mov
call
in
out
pusha
int
lahf
sbb
addl
lock
jns
dec
xor
cli
mov
cmp
push
mov
inc
or
push
hlt
or
sbbl
cli
dec
imul
adc
rcrb
push
pushf
push
in
imul
ljmp
int3
insl
aam
pop
adc
add
and
dec
adc
into
cmpsl
mov
mov
mov
inc
repz
add
add
iret
scas
shll
ja
xor
lret
xor
fs
pop
push
cmpsl
scas
sbb
or
std
arpl
xlat
in
lock
sub
sub
jnp
test
jb
xchg
sbb
xchg
jp
movsl
and
dec
push
mov
mov
aad
outsb
sbb
rol
test
les
iret
mov
insb
call
js
mov
gs
add
dec
jg
cmp
test
lret
add
lods
fs
pusha
nop
aaa
int3
sbb
or
into
xor
and
jbe
pop
mov
sarb
scas
sbb
or
ss
arpl
adc
popa
data16
dec
mov
movsl
into
sarb
and
cld
insb
rcrb
aam
out
das
in
and
xchg
outsl
dec
int3
mov
dec
shll
addr16
pushf
lock
clc
jge
mov
int
cmp
subb
mov
sub
and
sahf
ss
jl
das
pusha
in
stc
sbb
or
or
xchg
xchg
das
and
jge
jecxz
lods
shlb
in
dec
imul
cwtl
out
mov
ljmp
sahf
cmp
mov
push
mov
xor
loop
cli
jns
aaa
int
std
dec
cld
xor
fcompl
daa
fstps
rcr
mov
repz
adc
pop
outsl
add
adc
into
mov
or
adc
ss
xchg
cli
pop
stos
pop
cmp
mov
mov
inc
das
mov
add
cmpsb
cmp
rorb
jg
shl
sarb
popa
fsubr
sti
into
cmp
push
clc
adc
in
xor
mov
test
dec
xchg
fistl
fxch
sbb
in
stos
inc
sbb
cmp
out
add
mov
loop
imul
mov
aaa
adc
out
cmp
push
sti
fisubrs
jl
lods
mov
add
pop
fidivrs
xlat
fldenv
jmp
or
cmp
adc
hlt
daa
mov
adc
sub
sub
jno
ja
pop
push
push
ret
sub
pop
adc
push
sahf
pop
mov
inc
xor
push
shll
cmpb
ret
xchg
xchg
xchg
jp
mov
pop
das
cmp
dec
jp
mov
and
cmp
rcrb
or
pop
sbb
push
ja
cwtl
arpl
pop
jp
mov
fsubrl
inc
jae
decl
or
je
and
nop
fmuls
mov
add
imul
push
addl
sahf
and
ret
jg
addr16
dec
sbb
lea
out
insl
xor
and
repnz
mov
dec
xor
mov
xchg
loopne
add
mov
mov
push
cmc
inc
daa
pop
sbb
popf
test
lods
movsb
inc
dec
or
jns
js
daa
inc
pop
scas
push
adc
dec
lret
iret
adc
fwait
in
xchg
push
mov
jl
test
mov
mov
lods
or
mov
sahf
mov
push
data16
cli
sbbb
lock
test
fs
cmp
xor
inc
cld
loop
lock
fsubrs
push
out
xor
cmp
cmpl
cmp
xchg
mov
es
inc
enter
cmp
mov
outsb
test
xor
nop
dec
pop
push
push
pop
mov
or
push
cld
data16
in
inc
and
lahf
push
adc
bound
arpl
ja
dec
sbb
lock
push
lret
and
mov
test
pop
or
jmp
ds
add
add
inc
jge
mov
cld
orb
jb
loop
mov
ljmp
lret
add
jbe
mov
outsb
dec
mov
cmp
into
cltd
push
out
or
int
ja
pop
adc
add
xchg
lods
jecxz
mov
test
inc
or
sbb
int3
push
xchg
jle
adc
rorb
out
adc
ds
das
bound
add
movsb
ss
sub
pop
lods
mov
lahf
test
push
or
xor
fisttpll
std
mov
push
push
mov
cmp
mov
gs
stc
test
adc
mov
xor
xor
mov
mov
sub
mov
push
stos
jle
rolb
ret
xchg
inc
aaa
ds
and
push
insb
dec
cmpsb
imul
loop
int
xor
ss
inc
mov
or
sub
mov
das
xor
sti
and
or
ss
pop
pusha
shrl
mov
out
fwait
xchg
bnd
xchg
lcall
mov
aas
mov
jl
jnp
lret
mov
mov
ret
xchg
fwait
or
mov
idivl
lods
into
sub
lods
outsl
cmp
xchg
js
lods
adc
ficompl
dec
gs
inc
scas
mov
add
pop
lds
xor
mov
call
mov
lds
sub
inc
dec
out
rorb
pop
sahf
je
scas
jae
addr16
pop
xchg
dec
mov
test
and
ficomps
test
inc
out
loopne
add
outsl
jb
std
in
inc
mov
mov
popaw
mov
cmp
nop
out
push
sbb
mov
repz
cmp
and
dec
fcmovb
leave
dec
add
cmp
sub
inc
stc
push
hlt
stc
jo
fnstenv
repnz
xor
out
iret
outsb
ret
fidivrs
jmp
mov
lock
mov
pusha
out
jg
xorl
hlt
out
push
and
mov
jne
mov
ret
sub
les
int
cmp
fildll
ljmp
dec
pushf
cmpsb
and
movsl
dec
sar
mov
inc
call
lock
pop
loopne
jnp
rcrl
sahf
jae
jge
push
sahf
sub
data16
out
mov
xchg
stc
mov
xchg
jnp
sti
loopne
sub
sahf
out
lret
leave
add
out
rol
fsub
shlb
ds
repz
fmuls
insl
mov
fs
mov
in
in
jb
adc
and
xchg
jns
jno
jecxz
sbb
fldl
aaa
mov
pop
loope
insl
icebp
add
iret
insb
rolb
sub
jmp
lds
adc
xchg
xor
mov
push
lock
sub
mov
mov
push
and
movsb
pop
iret
pop
leave
mov
or
orb
daa
leave
data16
jnp
cmp
pop
add
inc
imul
jl
adc
pop
push
cmp
inc
pop
add
in
inc
jge
mov
pop
roll
enter
push
test
or
les
xchg
pop
aad
inc
and
pop
mov
int3
add
lds
aas
add
sahf
aaa
test
mov
xchg
int
pop
mul
stos
inc
mov
pop
pushf
jo
sbb
jle
bound
jle
ror
lahf
out
das
cmp
dec
stc
mov
jle
mov
sbbl
insb
add
and
mov
push
add
mov
sub
popf
jne
jle
xor
rcll
ret
std
scas
hlt
push
inc
insl
mov
stos
or
push
pop
mov
sbb
scas
lea
stc
shll
iret
ss
lea
xor
add
fists
in
jnp
push
mov
les
push
hlt
dec
arpl
fwait
adc
dec
imul
rclb
ja
sti
add
insb
addr16
cmc
mov
movsb
out
mov
sub
scas
sub
mov
mov
int
lret
sarl
imul
xor
mov
pop
pop
push
adc
xlat
cli
sub
dec
inc
inc
xor
loope
mov
push
sbb
sbb
jmp
cltd
ret
pop
pop
inc
dec
sub
je
adc
xor
in
les
xor
ds
das
adc
dec
mov
push
or
in
mov
and
sahf
ss
lcall
cmpl
cmp
jnp
lods
jno
test
sub
xlat
pushf
xchg
and
les
incl
xchg
inc
or
dec
cmpsb
or
enter
leave
jb
dec
xchg
push
and
movsb
sti
jns
clc
adc
scas
add
jb
ja
and
or
imul
mov
jp
ret
sbb
and
loop
mov
stc
stos
and
in
lods
mov
jo
out
daa
push
ljmp
pop
pop
mov
pop
nop
cmpsb
push
push
lret
sub
lea
ret
sbb
xchg
or
dec
stos
or
inc
cli
negl
fwait
sbb
add
xchg
test
mov
dec
xor
mov
mov
sahf
cmp
adc
jns
sub
lock
and
out
ja
inc
mov
js
shll
setbe
les
add
rorb
push
loopne
pushf
sub
aam
push
sbb
insl
mov
and
daa
int3
jae
lods
into
sub
hlt
enter
addr16
rcr
aad
or
lods
ljmp
out
jbe
test
jno
imul
and
xor
movsb
xor
pop
mov
les
pop
pusha
jo
adc
js
stos
out
pop
inc
mov
cld
jne
idivb
inc
sbb
outsl
sub
int3
mov
or
mov
mov
mov
jle
in
rorb
js
test
int3
fcmovne
pop
fnstcw
jg
sbb
push
gs
in
in
das
xor
push
sbb
aaa
inc
aam
jg
adcl
jl
pop
fs
sarl
roll
inc
test
fdivs
mov
or
push
rorl
push
add
lods
rolb
cmpsb
jecxz
movb
and
sbb
roll
into
gs
nop
into
mov
xchg
or
add
loope
ss
je
outsb
arpl
mov
mov
stos
dec
mov
mov
mov
push
dec
pop
inc
cld
cwtl
push
outsl
mov
mov
mov
xor
mov
pop
mulb
jnp
les
fildll
addl
iret
shl
mov
in
mov
lods
or
add
daa
adc
xorb
xor
cli
and
jl
lea
mov
xor
cltd
pop
sub
aaa
xchg
mov
fiadds
loope
rcrb
sbb
lret
cmpsl
cmpsl
lret
sub
in
in
lods
das
mov
bound
pop
test
jbe
mov
jge
into
lahf
shlb
dec
xor
aam
popf
and
inc
add
movsl
sub
push
lods
psubq
inc
mov
je
fsin
xchg
rol
icebp
and
jge
mov
sbb
or
mov
in
mov
adc
call
cmp
pop
cmp
and
fists
sti
cmp
xor
xchg
mov
sub
fwait
cltd
mov
adc
jp
pusha
cmp
pop
mov
lods
dec
movsb
cltd
sbb
ret
xchg
lret
jle
hlt
or
xor
adc
cmp
mov
mov
dec
add
icebp
bound
xor
addr16
fmul
aam
mov
leave
cmpsl
out
jno
insb
fisttpl
push
loopne
jg
push
push
sbb
lds
fiaddl
cmpsl
mov
jbe
enter
gs
cmpsb
adc
inc
out
testb
repnz
insl
into
hlt
ds
inc
fwait
xlat
shr
cs
dec
push
out
or
xor
pop
mov
push
punpckhdq
sub
and
cmp
ret
loope
lahf
cmp
outsb
test
cmp
sub
mov
rol
dec
faddl
push
lcall
cli
ret
cltd
adc
inc
das
xchg
mov
and
push
inc
xchg
ret
mov
imul
mov
cld
btc
jns
adc
mov
movsb
aaa
imul
mov
aad
dec
lea
jg
xchg
add
ja
fisubrs
lret
enter
int3
mov
push
mov
lret
fcmovbe
subb
arpl
pop
mov
out
daa
pop
mov
pop
inc
jo
lea
inc
cmp
gs
in
or
lock
in
nop
push
dec
adc
mov
mov
adc
clc
and
rcrb
push
or
adc
pop
aaa
cmp
jle
xor
push
mov
and
stos
mov
sbb
in
mov
andb
adc
mov
mov
dec
scas
cmp
loopne
in
mov
mov
nop
das
jecxz
lds
mov
leave
or
cltd
dec
aaa
and
mov
iret
lret
dec
mov
insl
pop
idivb
lcall
mov
bound
sahf
scas
and
aas
xor
cmpsb
ljmp
cmc
dec
sbb
in
lret
push
xor
dec
pop
sbb
inc
insb
mov
daa
outsb
jl
xchg
inc
daa
pusha
or
inc
dec
ss
adc
sbb
add
sbb
stos
mov
mov
imul
pop
or
xor
jge
mov
xor
pushf
loop
pop
sbb
sahf
icebp
xor
and
pop
imul
xorb
imul
pop
push
mov
cwtl
dec
push
fsubrl
jge
pop
xlat
jns
stos
out
mov
mov
xor
cli
mov
test
mov
outsl
rcl
stos
stos
jb
int3
xchg
in
xchg
clc
cmp
dec
sub
mov
xchg
or
mov
out
lods
cmpsl
and
or
lcall
mov
test
mov
mov
jns
mov
mov
lods
sub
add
push
push
and
into
or
mov
out
inc
outsb
stc
cmc
inc
xrelease
sbbl
push
cmpl
and
int
xor
outsb
jecxz
arpl
mov
and
sub
je
or
and
pop
cmc
decl
pusha
jo
insl
inc
in
das
iret
loopne
movsb
cwtl
cmc
hlt
sub
sub
and
sti
xchg
nop
jle
aaa
stos
out
xorb
mov
xchg
adc
xchg
adc
jmp
pushf
xchg
mov
rol
push
push
movsb
repnz
sbb
aas
sub
xor
and
xlat
gs
push
inc
ljmp
or
bound
lock
adc
pop
sub
in
or
mov
adc
dec
xchg
mov
fistpll
sub
mov
xchg
mov
or
movsl
mov
sti
sarb
add
mov
in
in
and
imul
sbb
xchg
dec
jg
mov
mov
mov
sbbl
mov
mov
mov
cmp
lcall
outsb
pop
negb
jle
out
arpl
or
jle
lds
push
es
sub
jmp
insl
lock
sub
xorb
xor
das
mov
insb
jl
out
sbb
mov
not
cmpsl
add
push
dec
pusha
js
jb
in
or
cmp
data16
xchg
roll
add
inc
xchg
ljmp
out
mov
stc
pop
push
add
je
fisttpll
pop
mov
push
into
pop
adc
push
arpl
dec
jp
push
mov
shr
sahf
xchg
sahf
fistpll
decb
in
push
fbld
add
imul
scas
pop
cmp
dec
outsb
mov
icebp
leave
ret
push
xor
loop
jns
pop
push
xchg
pop
imul
int
neg
orl
fstpl
adc
loope
and
outsb
or
and
fwait
xor
push
repz
js
xor
push
in
out
das
dec
mov
mov
ret
lock
pop
dec
mov
mov
mov
xor
cmp
stc
mov
cld
add
cmpsb
pop
fucomi
jae
cltd
inc
push
into
clc
dec
and
adc
xor
repz
out
mov
in
ret
cmpsl
hlt
dec
shrb
jl
push
dec
xorl
rol
mov
iret
test
addl
aaa
jp
in
imul
aad
dec
jge
or
ja
push
cli
mov
test
push
addr16
jecxz
sbb
pop
gs
and
sub
cmp
repnz
repnz
or
push
nop
inc
fmull
push
xorl
lds
sub
mov
adc
imul
pop
popa
jmp
push
push
sub
and
clc
push
dec
cs
xchg
adc
int
xor
mov
add
and
adc
and
std
mov
rcrl
testb
arpl
jnp
in
into
sub
dec
test
pop
lock
les
and
add
clc
dec
in
and
stos
iret
cmp
ds
push
stos
push
rclb
push
xchg
in
mov
inc
lods
inc
sbb
inc
cmp
xchg
dec
repnz
sahf
adc
xchg
jge
cmpsl
pushf
xchg
adc
inc
sarl
jnp
frstor
jge
mov
test
repz
xchg
mov
push
test
and
rcrl
cmp
dec
lret
ret
xchg
jno
mov
xchg
popf
clc
pop
sar
mov
jne
xchg
pop
add
imulb
jns
jne
stos
scas
outsb
stos
pusha
mov
mov
add
inc
enter
cmp
ja
inc
repnz
mov
jge
lds
cmp
sbb
mov
out
jp
cmp
xchg
test
fmull
mov
movsl
push
hlt
insb
cmp
jo
into
clc
shlb
push
xchg
rclb
repnz
mov
jns
dec
into
dec
jno
jge
xor
pop
mov
rcpps
shrb
fildll
and
and
lret
adcb
pop
testb
jge
ret
xor
mov
mov
loop
dec
mulb
mov
mov
popa
shll
mov
jge
mov
and
xchg
sahf
mov
mov
stos
jl
xor
testb
and
das
pop
pop
out
jae
add
xor
xchg
repz
mov
push
mov
mov
rorb
mov
xor
lds
in
and
scas
incl
or
loop
jns
push
push
mov
sbb
rcrb
pusha
xor
xchg
inc
xchg
outsl
sub
mov
push
and
fldenv
out
scas
xchg
add
das
inc
lret
adc
call
adcl
xchg
mov
mov
lret
dec
out
push
mov
inc
in
outsb
cmp
lahf
cmpsl
push
or
or
mov
xchg
shlb
xchg
xchg
dec
push
push
mov
fistpl
mov
pop
xlat
pop
test
mov
std
cwtl
lods
mov
ret
add
dec
cmp
fildl
xor
cmp
cmp
jae
lret
leave
or
inc
fsts
cld
ret
lods
mov
xchg
jl
pop
or
lret
dec
add
add
push
shll
in
cmp
and
xor
xchg
bound
pop
xchg
fsubr
inc
fwait
mov
enter
data16
fdivrs
mov
out
push
orl
xchg
xor
out
imul
mov
lea
mov
in
div
fisttpl
jp
or
shrl
dec
dec
pushf
push
push
fiadds
push
cmp
mov
cmp
outsl
jno
aad
ror
and
dec
mov
bound
and
dec
mov
xchg
mov
or
lds
push
jno
dec
xor
push
xorb
add
push
mov
jae
mov
mov
ja
adc
dec
or
idiv
xchg
mov
sub
rorl
lret
inc
movsb
add
push
outsb
fsub
loop
fwait
incl
cmp
arpl
daa
xchg
pop
push
mov
sub
push
lret
mov
sub
jno
test
cs
cmp
pusha
test
jge
mov
subl
cli
icebp
xlat
dec
fstpl
dec
mov
or
ljmp
pop
cmp
stc
push
cwtl
xor
mov
adc
cld
es
outsb
sbbb
addr16
cmp
xchg
xor
mov
jns
jno
or
jmp
push
inc
inc
lds
inc
add
sahf
push
push
xor
ret
push
fldl
dec
sti
xchg
mov
stc
lret
rcll
cmpb
test
pusha
cmp
jp
jecxz
mov
dec
and
cmp
outsb
adc
jp
and
jns
add
bound
inc
sahf
dec
cmc
xor
jg
mov
adc
pop
cltd
mov
js
and
cmp
xor
pop
loop
sub
nop
inc
pop
jl
out
les
shrl
dec
push
jg
aam
mov
pop
and
sbb
sbb
leave
imul
add
shlb
cmc
mov
out
movsb
lahf
sti
and
sub
jle
jae
add
xor
js
push
pusha
lds
ds
or
inc
add
mov
jbe
out
mov
inc
test
sahf
loop
jb
dec
sub
inc
lock
int
mov
insl
sbb
loopne
and
shll
addr16
push
fstl
mov
lods
enter
push
dec
xor
cli
mov
xor
mov
sub
dec
dec
jecxz
xchg
mov
inc
jle
add
scas
jmp
xlat
push
gs
inc
faddl
jo
inc
imul
ret
cs
int
aam
xor
and
jmp
int
fsubp
xchg
push
mov
push
inc
addr16
jae
pop
aad
lods
pop
push
dec
loop
push
imul
xchg
dec
mov
pop
test
ret
cmp
push
lds
enter
mov
jo
sub
jae
jmp
fcoml
jnp
and
scas
popf
pop
push
mov
jmp
ja
clc
xchg
add
inc
mov
xchg
inc
test
mov
cmp
push
push
popf
xchg
popa
mov
xor
mov
sbb
pushf
mov
outsl
xchg
push
cltd
out
das
inc
movsb
nop
mov
inc
or
das
cmp
ljmp
xchg
sahf
push
mov
lahf
inc
add
cmpsb
mov
and
pop
ds
push
inc
jns
push
mov
dec
pop
lahf
xor
stos
mulb
lret
dec
movl
lds
add
pusha
fwait
pop
cmp
xor
pop
or
iret
ret
pop
or
jg
jnp
rcll
push
mov
push
add
ds
jbe
adc
into
int3
ja
mov
add
inc
xor
in
cmpsl
arpl
mov
data16
mov
adc
cmp
jb
test
out
jmp
imul
sarb
rclb
lahf
pop
cli
sub
pop
test
fnstsw
scas
arpl
addl
mov
and
xchg
push
push
mov
mov
dec
jge
xchg
cmp
jge
xorb
iret
or
cli
movsl
repnz
mov
jbe
ret
add
cmp
icebp
in
pop
mov
xchg
sub
rcll
and
mov
shll
pop
dec
imull
lods
xchg
cld
rcl
cld
mov
mov
pop
mov
push
mov
fwait
sti
xchg
gs
xchg
es
mov
jne
ja
inc
xor
repnz
and
test
sbb
out
jbe
inc
and
dec
jb
and
mov
sarb
ljmp
dec
xchg
xchg
pop
js
andb
fcoml
or
loope
push
mov
das
lcall
rorl
cmp
pop
mov
fstpt
sub
adc
movsb
out
fwait
mov
addb
dec
push
fwait
jp
pushf
push
adc
adc
adc
xchg
ret
mov
mov
loope
xchg
test
sub
mov
mov
out
xor
jmp
jns
test
test
cmp
clc
xchg
pop
dec
jmp
add
enter
loope
lods
adc
jne
test
sbb
cmp
cwtl
mov
fmuls
push
jnp
negl
rorb
loopne
arpl
dec
mov
fwait
or
sub
cmpsb
mov
sub
mov
cmp
sahf
ret
pop
imul
inc
lds
or
cmp
aaa
and
xchg
pop
cld
ret
iret
pushf
inc
pop
in
addr16
movsb
les
out
adc
test
sbb
into
push
add
or
sahf
pusha
mov
adc
data16
fidivl
pushf
inc
test
push
fdivrp
adc
jns
mov
lahf
and
jecxz
pop
pop
bound
scas
dec
sbb
adc
ret
adc
mov
nop
add
inc
adc
pop
scas
jbe
pop
fisubrs
mov
addb
aad
cmp
fimull
xor
in
or
pop
xchg
lret
adc
xchg
mov
lcall
leave
inc
stos
or
mov
jnp
loop
adc
push
repnz
push
aas
push
mov
mov
ret
pop
lret
pusha
insb
fsts
lea
xchg
adc
mov
push
js
cmc
mov
es
int
jb
aam
insb
out
mov
cli
mov
cmp
mov
jno
lahf
adc
or
cld
xor
pop
scas
test
scas
push
adc
xchg
loopne
pop
aaa
sbb
sbb
inc
jno
cmp
fdiv
sub
jge
mov
dec
push
repz
das
jns
test
testl
mov
in
or
adc
xchg
sbb
ficoml
ds
push
xor
sbb
mov
leave
mov
dec
xchg
xor
in
pop
ds
ljmp
shlb
and
cmpsl
lret
icebp
rolb
loope
jo,pt
sub
sub
sbb
mov
adc
sub
push
repz
add
mov
hlt
and
push
xchg
cmp
xchg
cmp
aad
pushf
int
into
lahf
jmp
xlat
hlt
mov
sub
jg
pusha
fsubl
into
xlat
pusha
xchg
jno
xchg
dec
shll
cwtl
inc
ss
jle
and
jo
shrb
rorl
sub
gs
dec
hlt
popl
mov
iret
out
mov
hlt
lods
xchg
xchg
lahf
sbb
filds
loopne
repnz
jne
lahf
mov
and
bound
daa
pop
imul
adc
cmc
les
jne
test
inc
cmpsl
les
and
inc
aad
aaa
imul
dec
idivl
shll
loop
adc
imul
stos
ja
add
inc
sub
es
sub
pop
adc
sti
and
push
pop
or
xchg
shll
iret
imul
lods
ljmp
rcrl
xchg
int
jns
loope
jno
push
push
cmc
inc
xor
lret
ja
test
add
add
mov
mov
mov
and
xchg
scas
adc
mov
sbb
out
mov
ja
lcall
mov
icebp
outsl
aad
mov
stos
xor
and
add
orb
dec
lods
push
movsb
test
imulb
cwtl
xor
pop
and
pop
leave
cmp
mov
push
push
jnp
lret
shll
insb
dec
push
inc
nop
fs
lods
xor
stc
inc
dec
inc
data16
pop
daa
cltd
les
mov
gs
scas
mov
in
add
mov
and
sahf
movsl
loop
cmp
cli
xchg
int3
adc
jecxz
ror
enter
jbe
in
sub
pop
imul
sbb
mov
inc
lds
jmp
mov
inc
mov
into
test
or
push
idivb
ficomps
scas
or
push
dec
sbb
icebp
or
cmp
mov
aam
fbstp
jno
out
ljmp
pop
lret
fistl
pop
dec
sbb
inc
scas
cmp
jb
addl
cwtl
add
js
jecxz
js
aaa
push
adc
mov
cwtl
cmp
imul
test
xchg
cmp
and
or
insb
or
add
lds
subl
pop
in
jnp
loope
insl
and
xchg
lds
push
mov
cld
in
mov
push
stos
sti
dec
and
into
in
sbb
xchg
xor
ss
pop
stc
fists
loope
or
xor
imul
xor
adc
pop
jmp
repnz
mov
jp
ja
jbe
jnp
out
aam
popa
mov
xor
movsl
mov
sub
xchg
mov
sub
fidivrs
jl
aam
addb
mov
mov
push
icebp
sub
inc
and
mov
test
jae
in
ret
popf
pop
rcrl
push
data16
daa
sbb
pop
xchg
insl
push
mov
lods
dec
fs
test
sub
sbb
dec
ds
popa
mov
fimull
loop
lret
ret
dec
dec
lret
adc
cmovno
add
je
push
pop
and
push
push
pop
sbb
shr
jae
shr
pop
cmp
jle
shl
jmp
lea
test
mov
jg
fistps
sub
lahf
mov
stc
fsubr
or
inc
xchg
cmp
loopne
push
xchg
mov
adc
filds
and
ret
cmpb
lahf
mov
inc
arpl
mov
lret
into
xor
adc
je
rorl
xchg
mov
fnstcw
cmpb
incb
push
sbb
pop
iret
inc
sbb
dec
fdivr
test
test
rolb
ret
mov
popa
push
test
and
sub
push
outsl
jno
ljmp
dec
adc
mov
mov
sub
in
shr
das
mov
cmp
repnz
dec
pop
jl
sub
inc
pop
insb
xchg
mov
inc
and
stc
inc
xchg
insl
in
iret
sbb
mov
lods
mov
jb
lods
push
xchg
jae
add
mov
ljmp
and
push
loopne
daa
bound
mov
dec
insl
imul
sub
out
xorb
xor
xchg
xchg
xor
stos
lods
test
fimull
xor
ds
and
out
in
or
xor
les
push
hlt
inc
and
cmp
bnd
daa
lret
stos
jg
loopne
push
sbb
push
sub
aad
sbb
out
out
les
push
pushl
jl
arpl
or
mov
adc
cwtl
hlt
jl
aaa
out
xchg
or
xlat
mov
and
imul
adc
mov
xor
scas
push
sbb
push
fcomp
pusha
rcl
sub
hlt
je
scas
xchg
push
cmp
xor
leave
pop
addr16
cs
fisttpl
rol
xchg
cmp
add
dec
dec
aaa
jne
mov
mov
imul
shlb
mov
adc
add
or
in
int3
movsb
mov
inc
call
fdivl
pusha
and
sbb
and
mov
int
loop
push
jmp
dec
cmp
push
jns
movsb
push
inc
and
cmp
sti
mov
loop
rclb
in
mov
pop
pop
mov
stos
les
xor
xchg
sbb
mov
add
push
pop
xchg
js
jp
addr16
in
test
stc
inc
xor
popa
jle
fsubr
xchg
in
ss
hlt
adc
arpl
pop
xchg
xor
xor
push
dec
hlt
add
lahf
push
mov
enter
push
jnp
pop
mov
in
in
leave
aas
test
scas
cmp
lock
sub
xchg
or
fildll
aam
sbb
lea
xor
lock
sub
arpl
mov
inc
mov
mov
ljmp
outsb
fstps
in
into
repnz
or
xor
cmp
lcall
jno
or
add
inc
loope
stc
int3
rorb
lret
movsl
xor
mov
dec
mov
arpl
xor
outsb
lret
lcall
lret
aad
in
jle
mov
mov
aaa
in
mov
xchg
push
into
sar
cmpsl
in
pusha
lods
cli
xchg
pop
mov
adc
lds
hlt
ds
or
adc
xor
icebp
cmp
pop
imul
ds
mov
stos
divl
out
and
ss
aas
xchg
outsl
push
sbb
inc
mov
jns
or
cmp
mov
push
xor
stc
push
sub
sti
fcoml
xchg
adc
mov
lahf
xchg
and
jle
xor
jl
mov
mov
test
sub
fs
imul
cli
ret
mov
pusha
inc
cmp
outsl
rcrb
sub
mov
fdivl
aam
push
fs
out
mov
jmp
insl
es
lock
jmp
out
sbb
sub
rorb
icebp
sbb
lcall
out
in
lahf
pop
sbb
or
dec
gs
nop
lret
xorl
push
pop
arpl
popf
jmp
lcall
roll
xchg
mov
in
push
std
inc
dec
mov
in
cld
inc
repnz
mov
inc
pop
lods
test
inc
xor
jmp
pusha
dec
rcrb
test
mov
mov
pop
mov
test
mov
shrl
cli
mov
mov
scas
xor
rorl
push
xchg
jge
pop
int3
adc
push
daa
push
sar
fisubrl
jg
sub
imul
lods
insl
cld
hlt
sub
pushf
movsb
add
scas
xor
repz
mov
sbb
jne
lahf
dec
lret
adcb
or
mov
hlt
incb
icebp
xchg
sbb
add
mov
adc
lahf
jne
cmp
loope
dec
add
xor
shll
nop
mov
push
jmp
jb
fisttpl
loop
and
add
jae
shlb
daa
jmp
insb
insl
lret
jbe
mov
fisttpl
add
dec
test
inc
sub
add
test
pop
aad
scas
xchg
lahf
add
pop
ljmp
or
or
push
jl
cwtl
xchg
test
hlt
mov
mov
lret
lock
jge
stc
xchg
add
dec
cld
push
and
push
call
mov
sub
or
addr16
mov
mov
mov
xchg
shr
lds
roll
lea
jmp
and
xchg
sbb
sarb
jle
outsl
test
adc
mov
int
and
mov
pop
cmp
mov
jg
js
xchg
jbe
push
in
in
iret
lock
cvtdq2ps
fistl
push
xchg
test
inc
idivl
inc
inc
adc
or
rcrb
xor
lahf
adc
ds
cmpsb
jae
sub
push
cmpsb
or
es
ja
adc
adc
loope
cmp
out
mov
or
pop
rorb
pop
jl
dec
aas
movsb
add
cmp
jp
push
ffreep
mov
bnd
xor
sti
pop
in
test
xor
pop
cmp
xchg
add
rcrb
clc
jp
inc
insb
pop
add
xchg
add
ret
jp
sub
sbb
xlat
rorb
popa
mov
or
aam
out
xchg
mov
inc
pop
jmp
hlt
sbb
xchg
jp
ljmp
insb
mov
jo
xchg
cmpsl
and
and
mov
dec
aad
fbstp
sbb
mov
aam
add
pop
testb
stc
shll
fbld
jo
or
sub
subb
outsb
jnp
test
mov
push
push
repnz
jecxz
and
push
pop
cmp
imul
mov
pop
cmp
sahf
lods
iret
add
pop
adc
fnsave
sub
mov
push
jg
lcall
push
lock
dec
repnz
jl
mov
arpl
scas
xchg
stos
sbb
repnz
insb
cli
push
mov
pop
cmpsb
stos
mov
mov
rsqrtps
jo
enter
pop
stos
lds
xchg
fistpl
jle
push
sub
in
and
out
jbe
xchg
and
bound
insb
push
jo
dec
fcoms
xchg
jne
lahf
add
and
icebp
scas
lahf
in
cmc
xchg
in
fisubrs
gs
pop
mov
adc
lahf
sahf
orl
and
in
fnsave
sbb
addl
mov
mov
jb
pushf
adc
aaa
push
pop
pop
or
xor
ror
sbb
xchg
push
lret
popf
test
aaa
insl
scas
jbe
popf
sbb
repnz
xor
iret
decl
inc
mov
add
xchg
out
test
mov
jg
sub
andb
or
mov
adc
pushf
out
pop
push
mov
dec
and
js
mov
repz
pop
jnp
aad
loop
mov
cwtl
ljmp
ljmp
jecxz
cmpsl
jae
ret
pop
das
xchg
adc
imul
int
cmc
pop
repz
mov
mov
mov
mov
popf
jne
int3
into
cmp
imull
adc
xchg
int
stc
imul
mov
mov
dec
mov
add
lahf
sub
add
or
dec
mov
jp
clts
mov
xor
in
xor
jge
nop
in
add
fwait
rcrl
lret
lock
and
jg
pop
cmp
jne
push
or
mov
bound
ja
xor
xor
cmp
mov
add
add
push
enter
push
mov
sub
pop
bound
xor
popa
je
cmp
testl
mov
xchg
push
add
and
stos
mov
into
cmp
push
jno
sbbb
sub
shl
xlat
test
sub
dec
pop
cmp
sub
xchg
jle
sub
xchg
xchg
adc
xchg
push
add
int3
push
ss
into
inc
and
mov
ret
pusha
ja
cld
in
mov
insb
mov
sbbl
jo
iret
cld
add
rcrl
add
adc
push
aam
dec
cmp
insb
stos
push
inc
icebp
lcall
cli
les
push
push
push
js
and
aaa
insb
data16
cmp
push
movsl
dec
movsl
movsl
cltd
sti
scas
inc
sub
sbb
and
ss
xor
dec
mov
jmp
xchg
lret
loopne
jl
in
push
out
inc
pop
pop
movsl
and
mov
cwtl
addb
dec
leave
out
int3
adcb
sarb
jae
loope
sbb
fisubs
aas
idivb
lds
add
mov
aas
scas
in
cmpsb
mov
adc
or
add
arpl
add
cli
push
and
sbb
cltd
sbb
adc
in
mov
adc
dec
push
or
mov
insb
sar
adc
movsb
adc
add
cmp
insb
rcr
and
data16
xor
cli
jle
mov
and
insb
add
push
mov
mov
jmp
and
das
fwait
scas
imul
dec
cmp
mov
icebp
jl
sub
insl
lcall
aaa
mov
movl
lea
cmp
and
fwait
jb
adc
mov
out
sahf
outsl
ja
out
dec
or
add
pop
jae
ja
adc
fnsave
sub
jae
adc
adc
xchg
gs
shlb
ret
cmp
dec
roll
cmp
aaa
stos
push
cwtl
rcr
pop
mov
mov
cli
fwait
aad
adc
adc
pop
scas
pop
mov
lret
mov
out
ds
pop
xor
lock
pop
inc
call
pop
out
xchg
add
add
inc
stos
push
mov
aam
jbe
adc
add
sbb
lea
jmp
ror
pop
insb
xor
jo
push
and
cmp
adc
xor
mov
in
pandn
mov
dec
mov
or
shlb
lret
dec
out
push
gs
pop
jne
mov
pop
push
push
xor
insb
pop
test
cmp
aad
and
sub
repz
and
xor
and
add
dec
xchg
push
xchg
or
push
fdivrl
jecxz
jle
ret
test
test
mov
mov
xor
push
push
pop
xlat
outsl
add
xor
cmp
mov
mov
mov
adc
sub
mov
cltd
inc
adc
push
scas
xor
fincstp
loope
push
jbe
jge
sbb
lods
imul
jbe
rol
sti
pop
int3
pop
jmp
adc
inc
mov
jo
mov
pop
jp
neg
sahf
popa
bound
popl
push
fwait
sbb
push
push
push
fistps
or
test
and
add
sbb
mov
inc
and
or
arpl
ret
push
dec
jmp
stos
movl
dec
adc
mov
roll
sti
push
mov
out
lock
pusha
sti
dec
adcb
mov
mov
cli
push
and
addr16
inc
adc
dec
lock
pop
in
dec
add
test
mov
cmpsb
dec
sarb
xchg
shrb
mov
push
mov
jmp
inc
xlat
std
enter
in
jle
cwtl
add
fdivs
sub
arpl
jns
mov
adc
mov
stos
imul
mov
imull
imul
pop
jmp
xchg
xor
fildll
xchg
lods
pusha
call
jmp
stos
in
jnp
xchg
loop
mov
cmp
int3
fnstenv
xorl
sbb
adc
pop
jecxz
or
push
inc
xorl
stc
jae
or
cmp
mov
mov
in
push
mov
hlt
ret
xlat
inc
lea
and
cmpsl
js
in
lahf
int
inc
arpl
xor
push
hlt
lahf
iret
mov
and
mov
arpl
jnp
loope
int
out
or
mov
sub
nop
inc
push
cmp
xchg
cmpl
rorb
adc
and
xor
outsl
and
std
in
loope
adc
jne
or
jnp
xlat
mov
and
adc
pop
dec
movl
mov
or
aas
mov
cwtl
inc
bound
int
sbb
xchg
push
mov
add
lahf
aad
jmp
dec
cltd
jne
xor
mov
and
inc
addb
sub
and
mull
outsb
jae
xor
lahf
dec
jecxz
mov
xor
in
sahf
jmp
push
jmp
mov
and
mov
repz
xchg
sub
dec
es
lea
xchg
outsb
lcall
popa
sbb
das
stos
jmp
jo
push
xchg
fdivl
and
imull
inc
cli
or
pusha
lock
or
add
lds
inc
push
stc
sbb
aaa
push
inc
sub
xchg
lcall
mov
out
test
test
test
cmp
or
shrl
scas
push
test
leave
ljmp
or
xchg
aas
out
push
out
mov
stos
xlat
jg
nop
roll
das
js
les
or
or
xlat
notl
mov
ret
in
sbb
push
xchg
adc
scas
and
stos
aam
xor
mov
jp
adc
cmpsb
mov
es
outsl
cmp
out
fcompl
cmpsb
xchg
jl
cld
mov
and
dec
xlat
inc
ljmp
fwait
stos
sbb
in
xchg
int
fnstsw
and
mov
or
iret
popa
or
sub
pusha
jno
push
mov
out
sub
mov
mov
test
mov
adcb
ret
xor
mov
popf
xor
add
xchg
or
inc
push
cmc
inc
pushf
mov
sahf
call
sbb
and
mov
mov
mov
dec
shll
xchg
mov
or
fs
negl
and
cli
fdivrl
adc
iret
outsl
xchg
pop
lret
repz
std
pop
and
mov
xchg
dec
ret
pop
test
test
subl
push
mov
ret
mov
or
mov
out
adc
xlat
cwtl
xor
mov
and
repnz
inc
mov
lret
stos
sub
fisubl
sbb
sbb
mov
dec
mov
iret
shll
sbb
clc
mov
mov
rcll
mov
stos
and
xor
pop
adc
mov
jp
nop
sbb
andl
jp
mov
or
lret
mov
xor
inc
jno
mov
imul
push
mov
pop
cmpsb
daa
jg
add
add
fsub
mov
xchg
sbb
rcll
mov
aam
mov
push
rep
pop
leave
sub
add
shll
stos
xlat
xchg
pop
repnz
sub
outsl
cmpl
test
lock
gs
cmp
pop
or
mov
push
imul
xor
pop
add
aas
mov
cmc
clc
cmpsl
enter
movb
jp
outsb
loop
mov
dec
sarl
scas
cli
daa
insb
xchg
cmpsl
inc
int3
movsb
add
mov
test
sahf
or
enter
inc
pushf
stc
cmp
inc
cli
mov
cmp
pop
iret
aas
sbb
sbb
leave
cmp
jbe
lock
incb
das
sub
mov
push
adc
mov
outsb
js
adc
cmpsl
jmp
ljmp
cmovp
xchg
xor
lods
xchg
adc
popa
fsts
or
out
lret
xchg
xlat
xchg
push
icebp
fwait
jae
inc
mov
jno
jb
pop
mov
pop
xor
test
aam
std
cmp
out
cmp
mov
lds
xor
xor
dec
adc
xchg
dec
ja
adc
xor
jg
push
stc
push
xor
cli
inc
pop
mov
jno
push
in
cmc
lds
mov
js
movb
lret
adcb
xchg
mov
imul
pop
dec
daa
addr16
jo
pop
inc
lcall
shll
pop
lcall
inc
insb
inc
rolb
push
xchg
je
test
jle
jecxz
in
jb
adc
in
pop
mov
fnsave
ljmp
adc
in
sub
xchg
in
std
call
cmpl
xchg
jg
nop
jmp
add
bound
test
enter
and
jno
repz
cmp
mov
fisttps
pop
aam
cld
rcrb
pop
les
push
ss
pop
pushf
xchg
ficomps
incb
repz
mov
push
mov
lcall
lods
lret
sub
aam
cmpsl
unpckhps
jecxz
push
cwtl
sub
pop
out
stos
ret
stos
in
cmp
mov
popf
inc
lods
cli
loop
aam
gs
or
pusha
loop
sub
sub
insl
pop
lds
jp
jl
sbb
movsl
jns
roll
adc
and
inc
and
and
adc
mov
pop
push
add
add
enter
dec
mov
sahf
lcall
or
js
add
dec
popf
ds
int
cmp
sbb
xchg
pop
push
fsub
imul
clc
ss
test
push
xchg
mov
pop
insl
sbb
cltd
push
cmp
out
jecxz
and
pop
lcall
test
cmp
jne
std
dec
sbb
hlt
dec
cmpb
daa
cwtl
mov
pushf
push
stos
loopne
insl
ror
push
imul
push
js
out
jae
hlt
inc
adc
ljmp
mov
jo
call
push
shll
cmc
bound
mul
inc
mov
inc
add
add
sbb
dec
cwtl
mov
dec
sar
add
ret
sub
pop
mov
popf
mov
push
sbb
sbb
jne
dec
mov
adc
ficoml
sub
pop
shll
shlb
mov
daa
fcomi
pusha
cmpsb
cs
xchg
arpl
push
or
xor
rorl
xor
daa
xchg
clc
or
or
out
xor
imul
push
mov
xchg
rcrb
lahf
add
in
sub
inc
aas
inc
xor
test
rclb
clc
inc
pop
mov
mov
sbb
sbb
scas
loope
popf
dec
in
cli
fadds
mov
scas
aad
adc
cmp
push
push
add
sbb
and
sarl
in
sti
add
mov
lods
mov
repnz
jl
adcb
push
sbb
fucomp
push
std
bound
ror
in
lret
in
push
jnp
lods
leave
or
adc
es
out
jmp
cmp
fbstp
xchg
xor
inc
mov
pusha
test
popa
icebp
scas
push
iret
clc
cmc
in
mov
sarb
push
outsl
imul
leave
jbe
call
loopne
dec
pop
or
rcrb
aas
sub
or
loop
mov
jno
sahf
dec
sub
data16
leave
push
notb
ficompl
rcll
je
pop
mov
shrl
dec
push
xchg
in
test
out
inc
movsb
or
mov
mov
mov
dec
stc
push
jl
pop
lret
jp
mov
into
ja
cmp
daa
xchg
mov
movsl
cmp
xor
mov
in
cmc
pushf
sbb
fimull
push
xor
and
in
push
cltd
inc
not
dec
or
jl
stos
fsts
shlb
sub
xchg
insl
push
sbb
insl
add
mov
add
push
repz
movsb
xor
cs
jno
mov
ljmp
loop
popa
add
sbb
cmp
repnz
std
sbb
das
in
mov
scas
sbb
mov
xor
mov
add
jmp
std
into
mov
mov
call
jmp
movsl
pop
inc
and
push
dec
pop
out
dec
test
sub
lcall
sbb
call
cmp
jmp
hlt
or
cmp
and
mov
rorl
lret
pop
sbb
scas
rcr
loop
pop
mov
xor
scas
mov
mov
clc
mov
addb
stos
imul
fiadds
xchg
pop
push
mov
jmp
fcom
jne
fisubrl
xor
ja
insl
lret
sahf
lahf
rorb
inc
shr
ror
icebp
clc
js
fs
fsubs
push
push
push
mov
pop
fwait
aas
lretw
rorb
xor
xlat
mov
pop
push
pop
test
mov
lds
xor
roll
inc
insl
adc
pusha
mov
mov
and
or
push
mov
sub
imul
lret
cs
or
mov
lret
jg
outsl
adc
mov
jecxz
shll
push
or
cmpsl
sbb
call
rcrb
loope
call
lds
rsqrtps
cmp
jb,pt
adc
jge
xlat
cmp
push
mov
out
shrl
pop
fistpll
fstpt
inc
xchg
pop
loop
popf
movsl
repz
clc
and
xor
pushf
idivb
adc
loopne
rclb
sbbl
fstl
jbe
mov
xchg
jne
mov
xchg
xchg
sub
cmc
cld
sub
cmp
aas
inc
mov
stos
and
test
inc
bnd
xor
jmp
jl
in
jg
mov
mov
lret
adcb
fwait
jnp
mov
jb
cli
sti
ret
into
cwtl
jle
push
mov
cmp
jne
push
or
add
aam
lcall
cmp
es
inc
fsts
xchg
jns
fsts
mov
nop
and
les
xchg
test
test
mov
sahf
ljmp
cld
in
or
std
push
mov
test
push
inc
pop
push
push
mov
leave
clc
xor
push
add
mov
in
adc
addr16
sbb
lret
stos
push
push
inc
loopne
mov
xchg
jns
out
dec
fnstenv
sbb
push
push
mov
jns
xchg
aaa
jb
lods
or
repnz
and
cmpsl
mov
mov
and
and
jmp
jmp
aas
pop
sub
clc
adc
push
push
cmp
mov
add
stos
fdivl
lds
mov
xor
sub
dec
test
lahf
leave
push
sbb
out
pop
push
xchg
clc
imul
push
or
xor
cmp
cmp
out
imul
fistpl
dec
cmpsb
jg
xchg
xchg
push
in
call
pop
xor
cli
adc
add
shlb
mov
in
sbb
and
pop
inc
je
sarb
stc
pop
push
dec
xadd
xor
sbbb
inc
push
xor
cmp
into
pop
arpl
fnstsw
xor
xchg
push
movsb
ret
fimull
adc
xchg
test
js
sub
in
stos
dec
mov
sbb
imul
inc
mov
mov
pop
inc
xchg
into
addr16
xchg
mov
sbb
fs
push
in
push
cmp
test
pop
outsb
dec
sti
lret
xchg
cwtl
cltd
push
mov
bound
rorl
inc
test
xchg
sarb
out
push
pop
pop
mov
icebp
into
push
movsl
mov
mov
jl
push
adcb
add
insb
jb
cmp
lret
pushf
daa
and
inc
inc
adc
cmp
pop
cmp
add
add
and
mov
jb
pop
movsb
xor
clc
inc
xchg
mov
cmp
rclb
jne
shrl
lcall
pusha
test
add
sub
out
das
js
sub
fsts
jns
jo
inc
rcrl
mov
pop
fwait
mov
test
cmp
pop
pop
ss
hlt
sbb
or
xor
daa
clc
xchg
mov
pop
fimuls
mov
mov
sub
cwtl
inc
sbb
sub
loop
repz
lret
pop
jne
adc
cmp
std
add
mov
sub
sahf
mov
dec
mov
cwtl
insb
stos
ret
push
sbb
lods
test
sub
push
jg
js
inc
loope
push
cmp
mov
sbb
ret
xchg
aam
gs
inc
enter
cs
ja
test
pusha
mul
outsb
sub
dec
imul
push
pop
pushf
adcl
or
push
mov
not
add
xchg
sbb
sbb
push
mov
into
loope
mov
sbb
add
sbb
adc
sbb
ret
mov
sbb
inc
rcl
pop
shrb
mov
arpl
cltd
or
lock
addr16
jns
or
mov
jmp
imul
pop
cmp
and
sbb
mov
leave
rclb
push
in
dec
xor
push
mov
bound
adc
and
notb
sub
cwtl
mov
mov
cld
mov
sbb
adc
lahf
ss
fiadds
and
jnp
in
out
inc
in
cmp
mov
mov
movsb
shll
jbe
xchg
adc
xor
mov
cmpsb
jecxz
jp
xor
dec
test
or
in
lcall
mov
cld
sbb
in
dec
adc
aaa
sub
mov
and
outsl
mov
push
sar
mov
jge
or
push
ror
mov
push
sub
shrb
mov
pop
cld
fs
das
out
mov
int3
xchg
mov
inc
push
xorb
jbe
ja
pop
push
out
jge
sub
sbb
test
sbb
adc
fnstenv
xlat
fistps
pop
sti
push
xchg
ret
int3
js
push
fwait
test
push
mov
outsl
fsubrl
insl
cmp
sub
inc
mov
loop
add
add
pop
pop
push
lcall
lock
dec
adc
rclb
repnz
xor
daa
outsl
popf
std
jg
scas
leave
in
cltd
notb
outsb
inc
lret
pop
es
pushf
push
xchg
and
int
xor
dec
lahf
mov
cwtl
dec
push
lret
test
add
enter
mov
inc
inc
aam
stc
adcl
out
ja
in
or
enter
xor
cld
adc
loope
add
dec
jnp
sub
sub
xchg
lret
mov
push
dec
pusha
leave
fldl2e
or
rol
test
int3
add
cld
push
sbb
popf
lods
insb
rcrb
xor
sbbb
icebp
outsl
lods
mov
out
mov
stc
popa
and
loope
cwtl
test
pop
repz
ret
cmp
test
jp
pop
mov
adc
add
xorl
sub
push
pop
scas
int3
in
sarb
mov
hlt
xor
dec
rol
push
inc
pop
cmp
lods
stc
loope
and
nop
addr16
jmp
mov
inc
xchg
dec
or
fbstp
out
stos
lock
or
add
inc
iret
and
pop
test
dec
push
xchg
sub
xor
subb
sti
mov
xchg
fldt
stos
lret
pop
cli
or
cwtl
sub
sbb
inc
mul
fidivs
inc
cmpsb
xchg
mov
into
inc
push
and
cmp
jbe
stos
push
add
fldl
inc
pop
and
inc
cwtl
sub
scas
loopne
insl
xchg
cs
mov
and
dec
loop
pop
mov
and
xchg
popf
insl
call
sbb
add
mov
pop
lret
ja
ds
popa
xor
dec
push
jo
jno
lds
repnz
nop
aas
mov
push
int
cwtl
sbb
and
inc
mov
sahf
pop
sub
xor
or
pop
in
shl
subb
push
dec
xchg
loope
add
push
cmpsb
adc
or
fisubs
pusha
add
adc
adcl
or
and
dec
cmp
sbb
lds
add
xchg
aas
lret
pop
aas
rorb
out
cmp
jbe
subb
stc
xchg
dec
movsb
pop
stc
movsb
lock
inc
inc
pusha
sub
xchg
leave
loop
sbb
add
sbb
push
das
cmp
mov
out
dec
fdivrl
ret
testl
adc
mov
and
rol
cli
scas
loop
fcmovbe
pusha
jae
add
jo
mov
jg
xchg
daa
sub
add
add
sahf
push
sub
je
mov
in
xor
repz
jmp
pop
pop
cmp
icebp
sub
std
cmpsl
lds
cmp
adc
fs
xor
jbe
jo
jg
lcall
pop
xor
ror
loopne
xchg
pop
mov
cmp
pusha
push
xor
shll
aad
sbb
sbb
jb
ret
addl
and
mov
dec
sbb
push
pop
xor
mov
xor
mov
mov
arpl
xor
xchg
add
insl
jno
mov
mov
outsl
push
add
int3
stos
dec
xchg
xchg
mov
cmp
lods
test
add
push
sbbb
xchg
or
popa
adc
push
aaa
nop
mov
lds
jle
inc
pusha
xor
lret
mov
xchg
into
xchg
inc
inc
and
pop
repz
iret
xchg
mov
pop
in
sbbb
push
int3
mov
shr
in
jg
test
sbb
dec
pop
and
jne
and
sub
fwait
repnz
popa
add
xor
jle
jae
lds
sbb
or
repnz
adc
ss
xchg
mov
testl
sub
negl
clc
pop
xchg
push
add
dec
jl
leave
add
push
push
xlat
jb
inc
inc
shlb
pop
mov
nop
in
nop
stos
inc
add
ret
jp
movsb
sub
cld
pop
cmp
inc
mov
imul
popa
fidivl
loop
xchg
int3
pop
mov
mov
cmp
pop
bound
mov
ss
adc
enter
inc
out
sub
or
and
jg
fcmovnb
cmpsl
mov
scas
scas
out
lea
stc
mov
xchg
push
std
addl
repz
jl
inc
fwait
test
sub
xchg
or
pop
adc
cltd
cmpsb
in
ret
xchg
test
arpl
adc
pop
cld
xchg
in
sub
loope
pop
mov
pusha
pop
roll
out
adc
mov
daa
int
pop
add
mov
add
rcl
cmp
cld
xchg
pop
test
dec
push
fcoms
imul
add
sbb
jb
or
add
cmp
lea
lret
ja
inc
cltd
mov
pop
stos
repnz
test
shl
cwtl
sbb
push
loopne
mull
inc
leave
adc
pop
lcall
or
cmc
push
stos
cmp
inc
scas
sub
dec
out
mov
jnp
subb
leave
leave
mov
push
test
sub
mov
fs
neg
mov
mov
ljmp
test
mov
mov
lcall
jbe
lcall
stc
fbstp
imul
mov
xchg
movsb
cs
dec
outsb
jae
dec
rcrb
sub
sbb
pop
inc
lea
jg
add
clc
clc
inc
test
or
out
sub
test
pop
mov
push
push
pop
notb
std
test
dec
sarb
insb
out
das
pop
fisubs
ja
lahf
sbb
into
in
inc
popf
push
jmp
cmp
mov
mov
ds
add
ret
xchg
and
mov
mov
jae
mov
push
jns
dec
test
into
mov
inc
add
pop
out
ljmp
in
cmp
jl
sar
or
or
dec
rolb
stos
push
mov
les
cmpsb
pop
sub
jo
lods
adcl
sub
jg
sbb
pop
repz
dec
push
sbbl
cmp
popf
inc
cmp
aad
adc
jg
sbb
jno
or
mov
cli
fmul
add
sub
inc
test
jnp
jge
xor
pop
out
cmp
fcomp
imul
xchg
adc
out
movsl
inc
jg
pop
push
ss
clc
mov
test
mov
xor
lcall
pop
mov
fs
incb
sti
jns
int
push
sbb
adc
push
rcr
cld
fwait
pop
loop
ljmp
pop
xor
aad
fs
insl
jl
fnstcw
inc
xor
testb
ljmp
stos
les
inc
std
mov
in
sbb
xchg
or
adcl
cmp
fsubrs
rorl
loop
cmc
movsb
shrl
mov
jo
pandn
mov
xor
sub
rcr
rcr
sub
notb
rorl
pusha
cmp
icebp
dec
movsl
pop
mov
mov
adc
xchg
popa
push
push
dec
dec
adc
ror
push
orl
in
xor
add
repz
xchg
sub
addr16
xor
xchg
and
mov
fsubrl
ljmp
divl
in
cmp
mov
stos
push
out
insb
mov
mov
stc
push
std
xchg
or
and
mov
cmp
aad
sbb
mov
mov
fdivrs
sti
stos
xor
adc
aam
add
sbb
daa
jo
jno
aam
bound
pop
inc
add
push
decb
add
stc
jg
insb
mov
mov
jb
or
out
sar
ret
addl
scas
stos
jecxz
ja
stos
lahf
mov
sub
mov
stc
les
xorl
fstl
outsb
mov
mov
test
xor
pop
add
push
xchg
out
lds
dec
int
cli
push
push
jle
mov
mov
mov
int3
jb
cmpsl
sub
mov
cmp
mov
xor
cmpsb
mov
sbb
mov
push
push
pop
mov
cmpl
into
adc
insb
sub
cmpsl
sti
mov
jge
icebp
icebp
xchg
mov
test
into
sbb
ljmp
out
dec
mov
mov
adc
adc
cmp
mov
push
dec
and
divps
movsb
inc
test
mov
add
and
pusha
ja
push
cmp
leave
das
push
fisubs
cmp
or
mov
mov
dec
pushl
mov
add
fs
add
mov
fidivrl
into
jb
cmp
inc
dec
jle
mov
aaa
xchg
push
fs
pop
pop
add
dec
aaa
mov
push
jp
mov
fs
daa
orl
and
mov
fs
and
test
push
fsubl
or
push
xchg
add
mov
ja
jmp
mov
int
dec
jae
sub
mov
and
hlt
sti
cmpl
lret
out
push
cmp
and
sbbl
and
fildll
xorb
dec
aam
jnp
daa
fidivrl
jbe
stos
mov
test
pop
mov
add
lret
out
sbb
push
sub
test
in
add
fwait
ss
nop
sbb
pop
in
in
jl
xor
pusha
pop
loope
movsl
adc
adc
jb
testl
pusha
pop
mov
cmpsl
aaa
jb
jg
mov
aaa
das
xchg
cmpsb
popf
pop
xchg
cmp
mov
in
movsb
and
pop
mov
xlat
rcll
sub
decl
mov
and
repz
jg
mov
orl
cltd
arpl
inc
sub
loopne
rolb
add
addl
loop
add
adc
hlt
ljmp
jmp
adc
jns
cmp
or
mov
roll
mov
cmpsl
mov
pop
in
xchg
adc
lahf
popf
mov
or
mov
jmp
xchg
aaa
inc
fcoml
push
orl
enter
xor
mov
mov
push
cmpsb
popa
and
xchg
xchg
mov
pop
cmp
and
int3
sbb
shlb
outsl
cvttps2pi
mov
into
push
adc
or
testl
mov
mov
fdivrl
cmp
sub
mov
in
jne
cltd
jl
pop
jle
and
mov
xchg
in
ljmp
ss
outsl
push
or
cwtl
adc
mov
ss
xchg
xchg
shll
das
jg
into
sub
int3
adc
jb
cmpsl
jp
pop
xchg
or
xorl
nop
imul
repz
es
mov
dec
adc
fistpl
out
stos
mov
mov
in
mov
pushf
mov
lock
lret
adc
and
js
dec
fistl
sub
xchg
xchg
mov
imul
pop
pop
mov
jmp
pop
mov
push
add
movsl
adc
sub
inc
ss
fucomi
fs
testb
sub
icebp
and
sbb
lcall
std
shll
leave
dec
out
xchg
pop
sub
xor
xchg
out
mov
stos
lret
add
dec
popf
rcll
or
scas
jge
mov
push
insb
inc
mov
mov
test
stos
scas
pop
adc
es
incb
sbb
test
cmp
inc
xor
lds
shlb
sti
xchg
adc
ss
mov
mov
aad
jecxz
add
jp
in
divl
stos
adc
sub
sub
int
jae
inc
js
dec
adc
mov
test
inc
cltd
fcomps
pop
xor
out
xor
push
lock
inc
jne
cli
dec
mov
sbb
or
aad
mov
or
inc
mov
add
shlb
or
nop
sub
jg
push
jnp
push
fiaddl
and
or
or
sbb
mov
enter
jne
out
sbb
pop
cmpl
mov
push
push
mov
repnz
dec
jg
mov
mov
sti
or
cs
xchg
stc
fidivrl
icebp
mov
enter
insl
subl
mov
cmpsb
scas
outsl
or
stos
aad
cwtl
mov
jmp
lahf
cld
jg
nop
test
je
jne
test
notb
cmp
bound
lds
jmp
divb
aad
mov
fmuls
subl
insb
loopne
xlat
and
or
fs
pushf
push
inc
out
hlt
and
adc
std
ja
shll
xchg
pop
insb
jl
xchg
inc
ljmp
pop
and
fistl
sbb
test
jo
ja
adc
inc
das
jle
and
lock
rorl
xchg
inc
sbb
fnstsw
out
jne
fldenv
mov
cmp
mov
imul
lahf
cmp
mov
add
xchg
pop
int3
mov
mov
adc
test
jmp
pusha
filds
es
cmp
or
push
or
gs
push
push
in
jo
inc
les
dec
imul
movsb
sub
sahf
into
in
mov
pop
cmpsl
aas
je
push
outsb
lret
xor
pop
dec
lods
sbb
jmp
and
fdivrs
add
cmp
push
sbb
push
test
dec
into
add
mov
data16
xchg
rorb
gs
push
shll
pushf
aas
mov
fldl
dec
pop
push
das
ror
add
sbbl
push
mov
ljmp
cmp
std
cmp
jnp
repnz
je
loop
insb
fbstp
xchg
cmpsb
leave
push
or
mov
xchg
js
dec
outsl
pop
mov
xchg
testb
sub
outsb
sbb
push
out
insl
mov
cli
push
push
mov
adc
leave
ljmp
frndint
sbb
popa
mov
jg
je
insb
scas
fisubrl
nop
push
dec
pop
out
out
xchg
jle
mov
lods
int3
push
push
xor
jg
int3
imul
lret
and
xlat
out
lods
add
push
pop
or
lea
push
mov
sahf
push
adc
rcl
sub
cld
sbb
mov
pop
adc
aam
in
mov
add
jae
in
and
fdivl
sub
xchg
mov
mov
into
out
dec
dec
addr16
das
xor
adc
inc
sahf
cltd
ret
in
out
sahf
cmp
inc
add
bound
xchg
and
cmp
inc
lods
sub
es
cld
int
pop
mov
push
pop
cltd
out
loope
imull
into
pushf
fwait
mov
push
pop
pop
mov
lods
cmpsl
aam
lock
mov
fnsave
fmul
inc
push
mov
out
scas
pop
dec
sub
imull
loopne
hlt
pop
lret
maskmovq
notl
fwait
sti
mov
ficoms
shlb
or
incl
or
lcall
shl
jge
int
mov
das
lods
rcrl
mov
jne
jo
adc
cmp
sbb
and
cmp
push
fs
in
cltd
hlt
call
movsl
lret
sbb
jg
push
imul
push
mov
clc
push
out
jecxz
outsb
shr
fwait
inc
sbbb
mov
fcompl
fsubrs
dec
adc
xlat
mov
inc
enter
push
mov
mov
lea
pop
imul
fcomip
mov
daa
push
push
icebp
mov
xchg
push
imul
mov
jns
out
xor
adc
int
stos
or
les
jg
cmp
int
dec
loop
xor
push
mov
push
nop
std
cmp
cmp
sbb
or
cmc
sub
hlt
xor
and
add
dec
jae
xchg
lret
mov
and
sbb
push
movsl
sbb
xchg
inc
dec
pop
xor
rol
icebp
shlb
faddp
add
test
adc
in
xchg
cmp
mov
mov
ret
mov
jecxz
fdivrl
inc
shl
popf
lds
pop
arpl
in
cltd
rcr
xlat
data16
out
add
dec
cltd
push
movups
leave
mov
cmp
add
and
divb
outsb
dec
gs
mov
dec
push
or
mov
xor
mov
jno
sbb
cmp
push
or
popf
lahf
adc
lds
test
sbb
adc
into
mov
in
or
es
call
sbbl
mov
fnstenv
adc
rcrb
dec
push
into
xchg
jmp
iret
cmp
imul
cmp
mov
dec
adc
inc
jg
lahf
loop
xor
xchg
mov
jle
pop
add
cmp
lds
pop
lret
imul
int
dec
mov
and
divb
cwtl
into
int
std
xor
mov
mov
jle
or
sub
xchg
add
and
rcr
lcall
mov
dec
popf
loope
sub
mov
and
mov
sub
pop
pop
cwtl
out
dec
push
in
jno
adc
dec
cmc
cmp
or
hlt
xchg
gs
jle
sti
je
es
push
movsb
pop
daa
xorb
inc
mov
inc
addr16
sub
in
push
dec
mov
adc
push
fmull
pop
jb
push
out
pop
mov
mov
xor
push
jp
pop
mov
and
ljmp
mov
hlt
nop
jle
fsubl
mov
dec
jp
xchg
pop
cmp
xor
adcb
sarb
shlb
jb
movb
loopne
dec
loop
ret
mulb
mov
data16
mov
jg
mov
jg
jge
fninit
hlt
popf
pusha
adcb
jae
pop
ja
out
mov
je
mov
bound
aas
cmp
adc
or
pop
sbb
mov
lods
mov
push
into
adc
test
jmp
hlt
nop
dec
cmp
cmc
cmp
fistps
xor
or
fwait
pushf
jecxz
push
and
xchg
jmp
sarl
stos
dec
push
scas
out
mov
mov
xchg
pop
lahf
mov
repz
out
or
loopne
xchg
loop
cwtl
pushf
out
pop
or
ss
in
into
lcall
cwtl
fisttpl
cmpsb
les
insl
in
sub
lods
xchg
popf
sahf
jne
sbbl
arpl
aam
sub
pop
xchg
hlt
repz
in
sbb
imul
aam
xor
adc
sbb
fsubrs
sub
jo
dec
adc
and
pop
lods
mov
mov
call
aaa
pop
lret
clc
loop
in
lret
cmpsb
pop
dec
cwtl
and
mov
gs
cld
adc
sub
data16
push
push
repz
daa
div
sti
int
xchg
sub
cmpsl
out
fwait
push
insb
dec
paddq
push
mov
imul
jle
push
test
xlat
and
shll
dec
stos
xchg
repz
jecxz
cltd
jae
aaa
dec
or
into
cmp
lea
sub
jns
push
rol
and
sub
xor
adc
xor
int3
push
cmpsl
test
push
push
jmp
outsb
jns
mov
push
cwtl
add
iret
pop
nop
push
xor
stos
call
divb
outsb
sbb
add
mov
shlb
mov
mov
idivb
xchg
daa
leave
or
inc
xor
fstpl
jecxz
sub
lret
fnsave
lret
shrb
mov
repz
sub
loope
xchg
sub
int3
stc
add
jmp
mov
decl
inc
ret
clc
cld
jp
jno
cli
xchg
enter
cmp
hlt
popf
and
mov
out
test
aam
sub
or
arpl
icebp
lcall
jl
push
pop
lods
enter
pop
cmp
insl
cmp
jge
in
cmp
xchg
mov
inc
jns
movsb
lret
xor
inc
ficoms
out
inc
cmp
sarl
cmp
mov
pusha
add
shlb
or
aas
mov
bound
mov
test
out
les
ljmp
int
sub
cmc
fsubrl
in
cmc
cli
mov
sbb
pop
xchg
jmp
das
lea
mov
push
popa
arpl
stos
inc
aam
pop
adc
stos
mov
rcr
and
in
cmpsl
sbb
xchg
dec
sbb
cmpsb
out
movsb
lds
lcall
xlat
loope
or
jb
jp
sub
pusha
sarb
inc
mov
mov
xchg
and
add
cmp
dec
jp
cltd
mov
jb
cmp
orb
leave
push
rorb
shr
push
cmpsl
daa
mov
cmp
lds
pop
loope
aam
jne
push
dec
sar
and
enter
in
mov
push
push
imul
cmp
out
into
stos
mov
test
jl
ds
add
push
push
mov
inc
das
stos
sub
test
dec
inc
roll
rorl
inc
and
inc
push
inc
mov
xchg
fldcw
push
rolb
pushf
imul
fbstp
sbb
jmp
push
push
fcmovnb
test
shlb
push
xor
int3
sbb
in
add
mov
or
cmp
cmc
addb
int3
dec
cs
or
lahf
mov
jge
mov
je
cmp
xchg
sahf
push
adc
pop
lcall
jg
xor
int3
inc
xchg
lret
jecxz
jecxz
fcomp
cli
cmpsl
fwait
mov
jl
jne
and
add
or
jae
pop
or
xlat
arpl
adcb
outsb
or
sub
sarl
jnp
or
mov
repz
jo
mov
repnz
inc
push
and
imul
mov
jl
cmpsb
sub
inc
lods
loop
sub
inc
and
std
or
push
mov
dec
mov
addr16
les
sub
pop
das
fwait
dec
mov
orl
shll
xlat
mov
dec
imul
and
and
xor
jmp
mov
mov
sbb
mov
sub
pop
std
dec
sub
jb
or
mov
nop
cmp
ds
dec
push
and
add
out
lret
xchg
in
push
insb
jl
insb
leave
ret
or
cs
xchg
jae
add
push
add
hlt
cmp
cmp
lcall
hlt
incl
shrl
js
sub
ss
fnstenv
addr16
xchg
clc
pop
in
sahf
sbb
sub
xor
adc
jo
mov
mov
xchg
mov
jns
or
out
lret
push
stos
aaa
scas
sarb
or
subb
cs
jnp
jp
cli
mov
aam
jb
sbb
or
xchg
fdivrl
xor
ret
fwait
add
scas
stos
sub
rolb
nop
loopne
mov
fstpt
popa
enter
dec
sub
inc
xchg
mov
lret
jbe
repz
fwait
aam
lea
push
add
xor
imul
cmpsb
jb
movsb
pop
stc
sbb
divl
pop
mov
mov
and
out
sub
cmp
adc
xor
clc
mov
ljmp
ret
dec
cmc
repnz
outsl
mov
into
adc
mov
push
inc
stc
shrb
rcrb
xchg
lret
pop
int
popa
mul
bound
mov
movsl
mov
sub
fisttpll
roll
sahf
mov
push
jmp
jne
data16
add
dec
push
push
mov
popa
sar
push
cld
imul
push
mov
xchg
xor
sarl
xchg
pop
sti
push
dec
jle
cmpb
out
xchg
repnz
pop
push
mov
mov
cmp
imulb
sbb
xchg
push
push
sub
sbb
jno
sub
outsl
fnstcw
cmp
or
jno
adc
and
mov
jge
inc
pop
fmull
aam
pop
cmp
adc
iret
sub
cmpsb
mov
mov
pop
pop
xor
loope
xchg
popf
jbe
add
pop
xchg
scas
adc
popa
sub
pop
mov
ficomps
pop
fcmovnb
sbb
jns
insb
arpl
inc
dec
je
and
mov
dec
and
sub
pop
arpl
mov
add
mov
inc
or
mov
test
mov
in
and
push
scas
xor
push
jmp
cmc
shl
std
jecxz
repnz
test
mov
sub
pop
fisubrl
imul
or
cmpsb
inc
mov
ja
cmp
es
popa
lret
sbb
and
outsl
push
jmp
loopne
jecxz
mov
inc
addr16
xor
push
in
in
js
das
in
cld
pop
pop
mov
mov
cmp
jne
pop
push
mov
adc
in
stos
vpavgw
pop
fcom
cmp
mov
popf
mov
xor
repz
dec
popf
sub
jno
xchg
shrl
xor
dec
notl
js
jp
push
or
xor
mov
iret
pop
test
sbb
setge
dec
mov
mov
in
lods
inc
and
fcoms
divb
hlt
repnz
push
jbe
lods
sahf
hlt
aad
sbb
movsl
test
inc
hlt
stc
mov
push
xchg
inc
adc
nop
sbb
enter
sbb
dec
clc
pushf
sub
cmp
mov
jo
sbb
ja
pop
fwait
jbe
addl
in
ds
cmp
arpl
cmpsl
add
in
cli
xor
mov
rep
jmp
sbb
push
cwtl
mov
dec
mov
pop
sbb
fsub
clc
inc
push
cmp
inc
mov
push
out
mulb
nop
nop
xchg
cmp
jg
or
icebp
jo
jbe
in
dec
xchg
mov
xchg
mov
out
ljmp
adc
push
scas
inc
xchg
addr16
push
add
js
mov
pop
mov
pop
pop
sub
sahf
sbb
mov
adc
sub
je
repnz
jge
sbb
popa
call
pop
xor
outsb
jne
adc
push
clc
imul
xchg
pusha
mov
mov
stos
add
mov
xor
pop
int
xor
add
mov
add
jnp
int
and
inc
jo
mov
mov
mov
cmp
scas
hlt
pop
xchg
push
stos
inc
orl
push
fs
aad
mov
fisttpl
loop
inc
int
jno
pusha
test
mulb
dec
and
jl
sarb
inc
cs
fnstcw
add
dec
sbb
stos
xchg
out
and
imul
pop
jnp
movsb
movsl
push
cmc
fmull
dec
inc
and
xchg
sub
pop
out
and
jp
jmp
mov
in
mov
repz
lret
mov
xchg
mov
jmp
fdivrs
pop
add
cltd
jge
stc
dec
pop
push
fwait
pop
in
lcall
and
mov
add
dec
pop
imul
sbb
decl
mov
ret
lds
dec
loope
rolb
in
arpl
jb
shl
out
call
and
and
ja
mov
sarl
lea
data16
mov
cmp
sub
and
pop
xchg
xchg
mov
mov
ja
pop
jmp
test
aas
dec
std
inc
aad
add
add
roll
add
dec
xlat
fldenv
fistpl
jo
jg
popa
cli
mov
adc
adc
dec
jmp
or
test
cmc
dec
fs
sub
stos
div
cmp
jne
cmp
push
mov
fistl
xchg
clc
inc
test
adc
mov
lds
pop
add
pop
jmp
push
into
outsb
jno
jl
mov
push
add
test
pop
inc
sbb
cwtl
cld
mov
repz
int3
or
ljmp
shr
ss
ss
mov
insl
andb
insb
push
fnstsw
mov
call
add
pop
outsl
sbb
loope
movsb
cwtl
sbb
inc
adc
imul
cmpsl
testl
xor
or
fmuls
or
in
mov
jmp
ret
jbe
fdivs
xor
and
stos
mov
inc
push
rcll
cld
fdivrs
bound
stos
mov
dec
xchg
in
aad
repnz
lods
xchg
dec
push
outsb
stc
cmp
xor
outsl
xchg
add
xchg
std
push
mov
mov
adc
repnz
jns
bound
mov
mov
leave
xchg
bswap
push
jmp
sub
js
cmp
mov
mov
movsb
push
push
jae
xchg
push
add
cmp
cli
and
or
jmp
jbe
xor
call
mov
jge
fcomi
jno
push
jl
lock
fsubrl
push
rcl
sbb
enter
adc
push
mov
imul
fwait
mov
imul
xchg
rcrl
es
xchg
lds
cld
jle
cwtl
inc
pop
pusha
movsb
imulb
sub
dec
daa
out
cmp
fs
push
enter
pusha
icebp
out
push
xchg
cmp
xchg
push
mov
pop
stc
imul
insl
cmp
xlat
ljmp
mov
jg
xor
or
shrb
loop
into
inc
stc
and
ja
enter
pop
mov
sub
inc
ds
inc
data16
and
add
mov
xor
pop
jo
push
adc
jg
loope
call
push
adc
mov
dec
enter
stos
daa
mov
jnp
push
pop
cmp
jmp
pusha
shlb
popa
ss
ret
adc
clc
dec
jmp
cmpl
mov
sbb
outsb
icebp
jno
movsl
subb
fists
inc
ret
addr16
ds
loop
xchg
sub
mov
and
leave
add
stos
sahf
shlb
in
ret
cwtl
sbb
push
pop
sarl
push
mov
mov
xchg
inc
leave
in
clc
push
jp
mov
mov
or
adc
jo
mov
inc
sub
mov
fmulp
lods
inc
ret
cld
xchg
stos
xchg
adc
lods
push
aaa
mov
adc
cld
mov
neg
rolb
std
dec
mov
movsl
inc
gs
mov
lods
or
jmp
mov
push
pop
test
adc
mov
sub
outsl
cwtl
out
push
cli
lcall
scas
imul
dec
les
cmpsl
movsl
pusha
lock
jle
sbb
inc
rcrl
add
lret
cltd
mov
mov
push
insb
scas
sub
popf
mov
cmp
out
lods
mov
xchg
mov
pop
sub
dec
adc
lret
xchg
or
nop
out
mov
ljmp
add
mov
jne
push
fcmovnb
stos
repz
mov
clc
roll
fnstsw
gs
mov
ds
pop
sbb
mov
xchg
stos
fcomps
add
out
mov
dec
pop
push
jne
mov
loop
dec
adc
adc
mov
dec
jmp
push
mov
sbb
pop
mov
les
addr16
mov
mulb
stos
pop
sbb
sarb
clc
shll
cmp
adc
sub
lods
in
gs
xlat
pop
sti
inc
and
xor
push
sar
add
cmp
pusha
sub
sbb
xchg
xor
pop
test
nop
movsl
mov
add
and
fadd
dec
jbe
add
aaa
adc
in
pop
repnz
es
lods
call
xor
push
add
and
into
outsb
int3
test
lret
out
sub
das
xchg
cwtl
daa
mov
jnp
gs
pop
mov
int
xor
lods
inc
push
in
cmp
xchg
cmpsl
xadd
cmpsb
faddl
jns
dec
lods
outsl
cli
rcrb
sarb
xchg
cmpl
andb
jo
outsb
dec
mov
push
aad
pop
add
push
mov
mov
or
sbb
insb
insb
sbb
ret
or
pop
jmp
cld
add
xor
test
test
cmp
mov
pusha
cmp
jae
dec
ljmp
mov
popa
es
cmp
xor
inc
scas
inc
lea
cltd
aam
lret
lods
lahf
push
out
repz
es
bound
mov
stos
sbb
cmc
push
jns
and
cmp
pop
and
push
sbb
xor
mov
xor
imul
inc
cmc
frstor
mov
or
std
jo
push
lds
mov
iret
rorb
sbb
pop
lret
or
and
mov
push
ljmp
inc
xchg
xchg
sub
inc
pusha
and
ljmp
adc
test
divb
xchg
pop
test
pop
inc
add
or
pop
mov
inc
jle
mov
or
inc
fistl
sti
bound
ljmp
std
dec
mov
iret
loopne
jb
xor
jne
dec
lcall
pop
add
or
push
imul
fcoml
lret
or
add
out
and
out
push
mov
push
arpl
add
jno
inc
insb
lcall
jo
xchg
dec
ja
fwait
add
jecxz
or
ret
out
jo
adc
or
xchg
jp
inc
addb
cmc
xor
jmp
sahf
shlb
pop
stc
insl
sub
mov
ja
or
int3
sbb
lahf
in
pop
and
cmpsb
fcmove
int
push
or
out
pop
mov
mov
jle
mov
cmp
enter
xor
mov
leave
cmpb
inc
mov
jl
mov
add
rclb
addr16
fwait
pop
cmpsb
mov
inc
push
add
dec
lea
jl
leave
hlt
enter
mov
xchg
scas
js
arpl
pop
jmp
pop
scas
mov
jno
fdivrs
xchg
rol
or
xchg
in
sub
into
pop
jb
sub
imul
andb
xor
pop
testb
mov
push
sub
jae
movsl
cmp
rcr
mov
mov
shll
add
add
mov
lcall
xchg
dec
push
fisttpll
sub
adc
pushf
lret
clc
repnz
shll
dec
ret
jg
mov
es
mov
mov
in
xchg
jae
push
mov
movsl
or
sbb
or
fisubrl
xchg
shrb
sbb
push
pop
jmp
mov
mov
ror
or
sbbb
shlb
cmpsl
repz
les
js
adc
fcomps
jb
scas
sbb
divl
inc
cmp
adc
fldcw
jg
scas
sub
scas
fs
fisttpll
or
stos
cmc
adc
adc
add
jg
loopne
loop
push
add
jbe
notl
in
push
push
jecxz
out
jg
mov
push
or
das
inc
mov
or
and
add
mov
jno
pushf
cmp
mov
mov
outsl
xchg
out
cmp
int3
and
xchg
mov
dec
test
adc
paddsb
sbb
repnz
das
ret
xchg
sub
fwait
push
pop
dec
iret
insb
ss
mov
jle
cmp
add
js
jne
dec
outsb
push
popf
mov
xchg
inc
dec
add
pop
ret
rcll
popa
inc
mov
insb
test
loop
jne
iret
xlat
xchg
lds
pop
fildll
inc
jmp
stos
xchg
add
mov
cwtl
out
imul
outsl
fisubl
in
out
fsubrl
mov
data16
orb
push
xchg
add
mov
mov
rorl
add
pushl
shlb
mov
call
and
xchg
repz
add
in
xchg
dec
clc
inc
shrl
popf
lds
push
pop
popa
test
imul
jmp
sbb
out
ret
or
sahf
stc
cmc
cmp
sbb
jbe
roll
mov
inc
and
push
xchg
xchg
test
mov
sbb
push
jnp
dec
cwtl
push
and
mov
pop
arpl
sahf
xor
fstpt
into
aas
loopne
out
xor
sbb
cmp
add
rorb
pop
leave
mov
xor
stos
pop
cmpsb
adc
mov
pop
test
rcrl
test
or
sti
pop
in
arpl
sub
push
popa
sbbb
outsb
sub
adc
xchg
movsb
sub
incb
xchg
stc
inc
loopne
mov
call
addr16
add
popa
inc
pop
xchg
jle
cmp
out
frstor
aam
inc
addb
cld
push
int
pop
pop
cmpsl
mov
popf
push
ja
testl
aad
dec
out
jecxz
pop
sbb
mov
sub
inc
xchg
outsl
inc
out
data16
mov
pusha
fcmovnb
call
cltd
insb
pop
sarl
cmp
lahf
jecxz
jbe
js
push
mov
mov
xchg
xchg
xchg
xchg
sub
fstpt
mov
sahf
in
stos
cmp
xchg
xor
sbb
icebp
add
mov
dec
test
adc
mov
scas
stos
push
push
push
jp
lea
xchg
outsb
dec
pushf
adc
test
gs
cmp
jae
sbb
out
imul
jmp
jne
hlt
sbb
test
sarb
aas
aas
ret
ret
xor
cmpsl
aas
les
test
adc
and
js
push
and
xor
scas
mov
fwait
jno
stc
add
cld
adc
scas
mov
push
pop
jmp
andb
jno
sbb
add
inc
xchg
mov
fwait
lret
adc
arpl
call
scas
pop
xlat
push
cmp
in
mov
xchg
iret
push
in
xor
js
mov
pop
sbb
out
or
pusha
sub
nop
sarb
jecxz
mov
call
cs
jo
pop
cmp
push
sub
or
hlt
mov
add
add
cmp
pop
cmp
cmp
fildl
pop
and
push
xchg
add
lret
mov
sbb
xchg
xchg
mov
insl
pop
cwtl
push
incb
lea
adc
fwait
push
fdivrl
push
inc
xchg
fldt
add
dec
or
cmp
dec
jnp
ss
adc
cmpl
mov
mov
adc
in
xchg
add
fldl
xchg
or
in
mov
out
sub
adc
dec
leave
inc
lret
sti
idivl
mov
jmp
pop
xchg
jns
and
mov
sub
pop
pop
jo
enter
xor
jnp
cmp
adc
insl
fs
testb
cmp
push
push
fadds
mov
out
clc
fsubrs
sbb
aam
jecxz
ds
cwtl
ja
in
sbb
popf
mov
mov
shlb
push
sub
daa
movsb
mov
jge
sub
shr
mov
cmpsb
xchg
cmp
mov
adc
outsb
test
ret
mov
push
lret
adc
enter
mov
enter
and
ret
and
xor
xlat
adc
xchg
aaa
hlt
int3
jno
mov
xchg
adc
add
jl
xchg
insb
fstps
push
in
xchg
push
cwtl
jg
pop
shll
leave
jl
cmpsl
mov
outsl
popl
cmp
rol
testb
cmp
and
xor
mov
mov
sti
bswap
mov
xchg
xchg
pop
mov
mov
in
cmp
mov
sbb
ss
xor
bound
and
ret
mov
int
in
sub
add
pop
or
or
in
stc
lahf
dec
std
xchg
dec
fldenv
push
notb
ja
out
mov
in
mov
xor
pop
dec
mov
mov
in
sub
add
fwait
dec
jge
sub
repnz
fidivrl
dec
icebp
add
jae
fcmovne
fnstsw
fistpl
xchg
push
inc
jmp
sbb
stc
push
hlt
lea
mov
fs
cmpsl
mov
cmpsl
dec
test
out
notb
push
push
sbb
adc
fmuls
adcl
xchg
adc
lock
mov
dec
fwait
jmp
mulb
sub
inc
jmp
cmp
popf
inc
mov
test
mov
stos
aad
jg
aad
iret
sbb
or
and
jb
lret
inc
pop
cmp
insb
inc
mov
pop
clc
mov
push
adc
test
add
shr
adc
push
ljmp
out
push
push
iret
jns
roll
sub
xorl
mov
daa
jmp
mov
cmp
push
mov
adc
push
mov
aam
jne
rclb
inc
sub
xchg
iret
test
xchg
xorb
lds
int
lock
cwtl
pop
mov
push
xor
clc
stos
mov
mov
sbb
xlat
or
out
mov
mov
pop
leave
lret
ret
add
push
nop
cmp
add
es
mov
mov
adc
sub
or
lret
fmull
bnd
out
pop
mov
jmp
mov
push
popa
shrl
mov
adc
divl
xor
call
sub
lcall
add
frstor
or
jle
mull
call
das
adc
loopne
insb
jmp
xchg
imul
cmp
push
push
lret
rcrb
mov
sub
iret
mov
xchg
lret
sub
jp
cmp
jno
loope
stos
mov
push
popf
push
pop
inc
fildll
xchg
pop
cltd
mov
and
cmp
mov
stos
ljmp
cli
jns
jmp
jecxz
add
popa
mov
flds
cli
jnp
sub
xor
adc
fwait
fs
enter
decb
sbb
clc
add
test
aam
pop
test
xchg
sarb
sbb
je
cmp
adc
jo
das
mov
mov
or
cmpsb
imul
mov
enter
mov
sbb
or
into
gs
mov
repz
addr16
jne,pt
scas
repz
add
insb
pop
add
aam
mov
jge
sbb
les
out
repnz
sub
out
and
sbb
rcrb
sbb
and
dec
pop
push
popa
jl
sarb
mov
cmp
mov
mov
mov
daa
pop
dec
ret
or
jmp
sub
add
bound
lahf
movsl
xor
xor
and
gs
mov
dec
lcall
xorl
sahf
out
int3
push
jo
std
jp
jno
jp
mov
cmp
lods
inc
dec
mov
push
pop
push
aaa
nop
fdivs
aam
and
xchg
dec
or
rorl
cmp
out
and
loopne
imul
xchg
or
addb
sbb
int
pop
lds
lret
les
cmpsb
jbe
lods
jnp
mov
jp
stos
push
sub
das
test
rol
icebp
bswap
xor
pop
dec
xlat
xor
mov
sub
movsl
insl
loope
xchg
shll
add
jmp
pop
cmp
mov
mov
pop
ret
inc
cmp
repz
cmp
call
rorl
mov
mov
and
and
xlat
xchg
sub
sub
fbld
lret
adc
test
lret
mov
sbb
das
jp
lods
mov
push
xchg
cmc
or
cli
dec
or
ret
test
lock
lods
lcall
cmp
push
incl
or
mov
sub
push
dec
gs
dec
dec
out
pop
push
fldpi
cmp
push
std
repz
repnz
mov
mov
dec
aad
clc
outsb
imul
xchg
cmpsl
dec
adc
add
hlt
cltd
clc
xchg
cmc
jb
inc
xchg
add
stos
rcrb
push
sub
push
push
les
pop
int
rep
nop
sti
push
sub
addb
nop
out
adc
aam
mov
xchg
lock
or
sbb
and
stos
push
pushf
lret
add
and
dec
bound
mov
int
arpl
fisttpl
sbb
pushf
cmp
dec
mov
push
jo
or
push
decb
sub
stc
loope
lahf
test
icebp
lea
ficoml
sbb
inc
lahf
dec
shlb
push
rorl
mov
loopne
out
mov
daa
dec
movsb
push
insl
js
leave
or
ds
call
scas
xchg
mov
cmp
repz
pop
push
inc
rcrl
cwtl
scas
mov
hlt
dec
lahf
xor
int3
add
add
cmp
xchg
test
and
scas
roll
mov
inc
inc
rcrb
xor
push
pop
shrl
jle
loop
cmpsb
ljmp
jp
imul
or
out
in
add
iret
iret
push
mov
xor
mov
jge
std
in
push
lea
push
adc
or
mov
cmc
hlt
lret
fwait
inc
nop
inc
mov
pop
sbb
mov
cmpb
add
sbb
mov
pushf
aas
pop
outsl
es
dec
push
jl
inc
int3
fiaddl
xor
std
repnz
je
popa
testl
daa
test
imul
sbb
orb
cmp
mov
fdivr
fstp
ljmp
test
cmpsl
xchg
repz
mov
push
sub
jno
mov
rcrb
sub
push
and
daa
out
aaa
jns
popa
je
enter
imul
and
pop
mov
stos
fmul
jl
jno
test
push
pop
push
imulb
xchg
push
lock
lret
sbb
mov
inc
add
adc
mov
popf
mov
xor
mov
inc
xchg
jmp
xor
and
mov
bound
notb
ficoml
jmp
push
lock
mov
shr
pop
dec
and
ss
mov
fisubs
test
pop
cmp
dec
or
mov
mov
mov
bound
aaa
cmp
gs
pop
les
push
loope
mov
and
dec
dec
xchg
pop
ss
push
les
push
xor
mov
loop
js
pushf
imul
lcall
xor
aad
sbb
icebp
cmc
cmp
test
adc
jb
js
lods
lock
repnz
or
scas
call
shll
jge
call
pop
jl
fisttps
movsl
mov
add
xor
mov
sti
dec
inc
add
repnz
jle
push
adc
or
inc
popf
mov
xchg
xchg
or
dec
les
stc
movsb
pop
add
mov
rolb
cmp
out
jbe
stc
pushf
xchg
hlt
xor
cmp
jmp
mov
cmp
adcb
adc
xor
das
cmc
xchg
pop
data16
push
add
aam
fadd
or
adcl
stos
cmp
or
mov
aaa
pop
sub
mov
loope
inc
out
dec
rcr
mov
ret
movsl
dec
inc
nop
pop
dec
cld
scas
mov
test
adc
mov
dec
sub
jne
inc
xor
fnstsw
roll
scas
and
xchg
add
or
push
mov
adc
jmp
cmovne
pop
push
aas
cmpb
jp
loope
fwait
cmp
pop
out
pop
hlt
call
xchg
jmp
addr16
mov
mov
add
push
ret
jecxz
adc
push
and
lahf
xchg
dec
add
lahf
ja
repz
cwtl
addr16
cmp
mov
pop
xchg
jg
or
add
imul
push
cmpsl
adc
call
or
lahf
mov
and
es
jo
jne
shrl
xchg
adc
lret
loopne
fistl
enter
inc
inc
sub
mov
andl
jmp
repz
sub
jbe
xor
or
pop
and
test
aaa
rcrb
adc
inc
push
xor
cmp
lods
stos
loope
jnp
ret
popf
loopne
jge
stos
mov
lods
aas
lods
loop
mov
lahf
mov
dec
xor
outsb
test
shrb
rorl
inc
stos
or
xor
into
mov
es
jg
xor
sub
mull
loop
jnp
inc
pop
movsb
xor
xchg
test
mov
rcrb
divb
aad
std
sti
faddl
sti
jnp
cmp
cmp
mov
mov
adc
mov
jg
int3
loopne
inc
push
scas
je
enter
ret
sbb
mov
push
outsl
lods
jge
enter
lret
lea
insl
in
pop
xor
push
xor
aaa
lds
jge
sub
bound
pushf
add
scas
aad
push
cmp
fwait
pop
mov
jge
adc
cli
fdivl
pushf
cmp
in
xor
loopne
mov
in
cli
enter
push
push
pusha
je
add
pop
movb
cld
jns
iret
push
loopne
push
inc
fcmovbe
jo
sbb
fcomps
cmp
pop
inc
cmp
mov
xchg
pop
outsl
les
mov
shlb
fwait
ja
sub
add
jae
inc
cwtl
in
test
xchg
pop
and
or
fisttps
mov
dec
scas
xlat
sub
rcll
sbb
testb
push
arpl
aam
jmp
xor
inc
jbe
inc
ret
repz
in
cli
rcrb
pop
gs
mov
push
mov
jbe
mov
sbb
enter
dec
dec
arpl
fmull
std
sahf
xor
mov
add
jne
mov
data16
or
cmp
xchg
repnz
mov
jmp
repz
sti
daa
enter
jae
mov
loopne
xchg
pop
push
mov
lock
lock
ss
out
lock
push
enter
mov
jo
dec
push
lcall
ret
nop
cltd
cmp
nop
inc
sbb
push
cmp
xchg
adc
and
sbb
and
adc
arpl
iret
cmpsb
dec
jle
rclb
icebp
in
adc
jg
jp
stos
jmp
jg
add
outsb
push
enter
add
fnstenv
popa
sub
or
mov
or
jnp
cmp
out
sub
dec
cmpsb
in
xor
mov
xchg
dec
ret
shrb
and
movl
push
loopne
sahf
movb
imul
cmpsl
stc
fnstcw
pop
outsl
cmpsb
bound
stos
jp
aam
adc
dec
mov
add
inc
xchg
movsl
pop
add
and
adc
sub
dec
popf
pop
mov
pop
cmp
sub
or
movsb
test
pop
in
inc
jge
iret
in
mov
mov
pop
add
sbb
lds
jge
sub
dec
push
lock
mov
sbb
sub
mov
mov
push
mov
cmp
push
jne
dec
xchg
ficompl
stc
and
in
pushf
mov
mov
js
push
cmp
test
mov
inc
and
ljmp
daa
mov
fxch
push
dec
mov
aam
cwtl
mov
sbb
leave
test
cltd
int3
mov
loopne
pop
sti
xchg
mov
fists
cmp
mov
mov
je
sbb
jg
lods
test
inc
inc
sbb
sbb
and
repz
jmp
xor
imull
fdivrl
mov
jnp
xchg
sti
loope
shlb
lahf
loope
mov
outsl
xchg
cli
in
xlat
xchg
inc
fucom
test
inc
mov
stos
push
sbb
jo
cmp
scas
enter
movsb
pop
jae
repnz
push
sbb
cmp
xchg
and
movl
dec
pop
lods
shrl
stos
push
add
pop
sahf
sti
lret
jmp
inc
dec
nop
mov
dec
je
ret
mov
fisttpl
outsl
push
test
sub
fwait
xor
clc
pushf
or
mov
gs
mov
flds
mov
pop
mov
mov
pop
in
movsb
xchg
xchg
rol
shlb
push
pop
pop
dec
adc
daa
cli
mov
mov
ror
rolb
fbld
cmc
dec
nop
xor
insb
cmp
push
jbe
cmp
mov
and
lods
jecxz
mov
dec
or
push
dec
dec
pop
imul
jp
adc
push
push
mov
jge
xor
lret
inc
jae
mov
xor
or
shr
xor
mov
imul
adc
xor
pop
cs
aad
aaa
fwait
jmp
cltd
gs
imul
sub
in
or
imul
mov
stos
cwtl
xor
sti
inc
sub
fistl
jle
data16
jbe
ficoml
notb
xlat
movsl
xchg
inc
shll
test
dec
shll
lret
das
je
add
xchg
mov
mov
cld
fcomps
fldt
xor
xchg
call
arpl
imul
add
jbe
adc
dec
lea
sbb
jnp
and
stos
js
jl
les
das
sahf
cmp
repnz
dec
add
add
pop
in
adc
or
adc
jb
sahf
aas
pop
adc
insb
popf
cmpsl
dec
jge
push
cmpsb
aaa
mov
push
or
mov
mov
push
icebp
in
cltd
dec
xor
je,pt
testl
sarl
adc
lea
mov
into
sbb
gs
mov
aam
cld
ja
scas
cmpsb
mov
inc
push
xor
xchg
and
push
cmp
test
cmpsb
daa
mov
sbbl
push
repz
adc
fbstp
adc
jae
jno
ljmp
cmp
fistl
adc
push
lcall
dec
mov
out
pop
dec
cli
mov
insl
add
cmp
pushf
pop
aam
sbb
std
sub
mov
mov
dec
sti
add
inc
mov
xor
dec
or
mov
lods
push
mov
mov
out
daa
push
mov
or
iret
push
or
mov
pop
or
xlat
mov
dec
xor
pop
stos
and
inc
lods
shlb
cmp
xor
jecxz
pop
sbb
jno
mov
hlt
lods
xchg
adc
dec
push
jecxz
xor
stos
jmp
xchg
loope
stos
mov
dec
out
dec
jae
test
clc
in
push
sbb
fcomi
arpl
xor
pop
dec
fisttpl
jmp
and
xchg
incb
xchg
fucompp
cmp
pop
push
lea
sar
in
push
mov
imul
pop
lcall
or
jb
jne
sbb
jo
aas
cmp
popa
and
movsb
std
or
mov
push
cli
loope
loop
in
jns
xchg
negb
sub
loopne
rol
test
hlt
pop
loop
mov
rcrb
push
mov
and
popa
sub
sbb
xor
lds
in
sub
iret
cld
lods
je
cwtl
imul
sub
aas
mov
add
xchg
nop
sbb
in
call
cltd
aad
push
testl
fists
pop
jl
ljmp
mov
popa
cmpsb
jns
repnz
sti
dec
push
or
jge
movsb
in
and
jmp
adc
mov
mov
lret
mov
nop
rcl
lahf
inc
xchg
bound
sbb
xchg
pop
add
adc
dec
int
push
jae
add
sub
test
testb
lahf
cli
mov
mov
xchg
lret
insb
test
xchg
inc
mov
dec
push
lret
mov
xor
les
fadds
fisttps
daa
mov
xchg
mov
xchg
jb
stc
cmp
aam
daa
arpl
mov
cmc
mov
adc
xchg
mov
inc
ret
xor
mov
ret
jnp
je
push
pop
hlt
jg
shll
inc
pop
outsb
in
or
pop
les
lods
les
ret
add
cmpsl
fwait
lret
iret
inc
xor
xor
cmc
adc
lcall
aaa
pop
jmp
mov
sbbb
mov
push
or
mov
fiaddl
pushf
sub
negb
mov
leave
dec
xchg
pop
mov
fldt
cmp
dec
loop
mov
pop
add
outsl
pusha
mov
ja
fiaddl
bound
mov
stos
lods
and
cmp
outsl
out
cmp
popl
mov
ljmp
scas
ss
jnp
mov
push
mov
rcr
jae
pushf
xchg
adc
inc
push
xchg
mov
dec
enter
aad
dec
hlt
push
jge
lock
in
xor
dec
movsl
bound
jge
xchg
push
or
adc
imul
sub
loop
in
jo
mov
sbb
xorb
mov
movsb
lock
mov
lret
jbe
ror
test
insb
sbb
pop
jnp
mov
popf
repz
popa
sub
outsb
dec
data16
mov
dec
jmp
fcmovb
or
sub
pusha
aam
shrb
mov
fadds
ret
nop
shlb
mov
in
daa
jno
xor
pop
adc
jno
and
jo
inc
adc
into
cmp
mov
mov
jnp
adc
test
out
mov
or
jg
jge
push
rcrl
imul
rcrb
jnp
mov
icebp
inc
xchg
les
and
cmpsb
xchg
cwtl
pushf
jne
pop
les
mov
aaa
push
pop
jle
mov
xor
loopne
imul
sahf
mov
ja
ficompl
imul
mov
imul
cmc
push
pop
cvtdq2ps
push
mov
cld
mov
imul
data16
aam
enter
outsb
icebp
cmp
int
or
add
scas
aaa
sbb
out
push
or
push
icebp
add
inc
push
les
inc
and
mov
jns
jmp
cs
fstpl
xor
daa
jmp
lock
and
aam
xchg
xor
stos
mov
lahf
int3
lea
repnz
or
out
fidivl
cltd
jno
cmpsb
inc
push
repnz
fnstsw
add
xor
cwtl
xor
loopne
ss
shrl
jmp
ret
call
aad
mov
ret
xchg
and
mov
xor
and
or
loopne
inc
ja
inc
xchg
orl
mov
outsb
inc
inc
hlt
or
into
mov
and
psrad
ja
mov
stc
adc
mov
cmp
or
mov
dec
mov
xchg
subb
cmp
jbe
add
fmuls
xor
mov
popf
gs
sub
and
cs
mov
push
pop
aaa
sbb
or
je
and
jmp
bound
jmp
outsl
rol
xchg
add
mov
mov
xchg
sbbl
cs
gs
cwtl
clc
ja
lea
xchg
xlat
or
lret
lcall
xor
lods
mov
mov
pop
push
int3
insl
orb
mov
fldz
rorl
mov
dec
or
sub
ja
add
mov
push
push
mov
mov
sarl
mov
imul
xchg
jbe
arpl
cmpl
sbb
fsubrs
out
outsb
or
cmp
test
jbe
mov
pop
imul
cli
xor
xchg
sub
std
scas
cltd
fadd
mov
cmp
pop
add
and
dec
push
bound
scas
in
jl
cmp
rcll
dec
dec
scas
mov
xchg
adc
movb
imul
movsl
ficoml
scas
xor
call
pop
mov
pop
loopne
lcall
sbb
dec
inc
std
scas
enter
mov
mov
cmpsb
or
push
push
imul
push
stc
cwtl
daa
pushf
jae
sbb
loop
cltd
movsb
add
aas
test
popa
or
mov
jne
fdivrp
rclb
dec
aaa
xchg
shlb
xor
mov
sar
cmp
mov
imul
aam
cmp
int3
jo
insl
lcall
and
jmp
loop
cmp
clc
jge
adc
mov
xchg
sbb
or
data16
lahf
add
into
inc
mov
cmp
and
std
and
aas
add
in
mov
shlb
je
pop
addl
cmp
sbb
insl
inc
ret
add
movsl
dec
mov
les
jne
mov
sti
xchg
loopne
mov
cmp
and
jnp
pop
cmc
enter
int
shl
test
sarl
lcall
cmc
mov
lea
dec
xchg
adc
jmp
cmp
dec
jns
cmp
outsl
and
sub
mov
cmp
lcall
inc
pop
ds
mov
clc
movsb
loopne
sub
inc
xchg
cmp
sarl
mov
jne
lar
enter
push
mov
aam
mov
cmp
inc
dec
adc
pop
mov
pop
jecxz
and
jmp
xor
rcrb
inc
mov
jp
cli
fnstenv
cwtl
mov
cltd
popf
pop
dec
sti
cltd
inc
push
pop
in
add
cmp
xchg
fsubrs
cmp
js
cmp
and
int
nop
mov
decb
cwtl
jae
pop
xor
daa
jb
out
mov
mov
cmpsl
fs
out
jle
adc
cmp
fimuls
push
fidivrs
inc
mov
sub
addr16
push
popa
and
push
gs
or
in
scas
inc
mov
popf
add
xor
popf
jecxz
jle
aaa
dec
into
jnp
xchg
mov
imul
es
jecxz
and
pop
aad
inc
mov
sbb
add
jbe
cmp
xor
xorl
push
and
cld
adc
add
shlb
imul
add
xchg
pop
sub
lock
mov
jo
ja
jle
dec
mov
pop
push
pop
out
mov
pop
mov
sbb
jg
push
mov
inc
mov
rolb
mov
das
mov
push
out
lahf
int3
adc
fcomp
push
jne
nop
ds
addr16
mov
sti
mov
cmp
stc
into
and
cmc
mov
sar
sub
and
jne
rclb
jmp
or
rcl
sbb
mov
std
dec
scas
ja
aas
cmpsl
xchg
mov
jl
ja,pt
pushf
xchg
sahf
dec
cmpsb
outsl
aam
mov
sub
adc
out
int3
ret
push
mov
jge
shr
mov
push
nop
pushf
xor
jl
and
cld
sub
gs
pusha
stc
mov
mov
or
sub
arpl
sbb
stos
inc
inc
inc
xchg
cmp
pop
mov
std
add
sbb
inc
add
sbb
pop
add
add
fwait
inc
pushl
pop
cs
and
mov
out
sbb
pop
loope
aad
dec
xchg
mov
lods
sub
jae
cs
xor
xchg
push
test
mov
fcmovnb
imul
sbb
imul
adc
std
rolb
pop
and
pop
push
xor
mov
xchg
cwtl
add
mov
gs
pop
stc
xor
enter
movsl
stos
mov
pop
mov
cmpsl
filds
jmp
push
pop
bound
fsubrs
aam
mov
mov
pop
mov
jnp
ss
inc
and
sbb
rcll
lret
daa
mov
stos
pop
test
jle
sub
pop
inc
sub
in
das
test
cltd
mov
xchg
rcll
mov
out
xor
filds
mov
dec
add
dec
pop
pop
movsb
pusha
int3
stc
fisttps
mov
xorb
std
rol
popa
pop
fisubs
inc
fxtract
dec
inc
std
mov
push
outsb
cli
xchg
test
add
add
fcomps
shlb
sub
clc
outsl
clc
and
nop
jl
mov
jns
fcoml
mov
adcl
adc
aas
test
xor
sub
xchg
mov
sub
mov
push
push
mov
pop
xchg
ret
test
ret
aam
sahf
shlb
push
sar
mov
mov
inc
fldl2e
leave
in
mov
fisubl
mov
ret
or
mov
ja
push
xchg
jno
adc
pusha
inc
movsl
aaa
add
addr16
or
shlb
data16
int3
dec
cmc
xor
mov
test
dec
into
iret
pop
xchg
stos
push
dec
push
rcrl
ds
mov
mov
cmp
mov
jo
xchg
fwait
cmp
test
aas
mov
mov
adc
imul
dec
cmp
cmp
mov
sub
mov
dec
jne
or
sbb
in
test
nop
pop
repz
fldt
dec
pushl
lods
fbld
aad
mov
mov
push
jecxz
mov
dec
clc
fwait
imul
mov
xchg
mov
in
xor
movl
mov
hlt
insl
sub
js
jns
jl
jmp
test
in
loope
lock
jge
mov
hlt
rcrl
pop
pop
fsubrs
cmpsl
pushf
mov
lea
js
enter
fidivs
shl
sti
pop
or
cmpsl
roll
in
test
push
scas
cmp
insb
std
dec
xorl
xor
xchg
add
loopne
icebp
ss
test
fwait
dec
ja
je
sbb
lret
lea
sub
in
or
mov
xchg
pop
jb
pop
movsb
push
jl
inc
pop
or
out
mov
cmpsl
imul
mov
fucom
jge
xchg
jbe
loop
psadbw
inc
mov
scas
inc
xor
ret
negl
mov
dec
push
leave
mov
out
xor
bound
sub
negb
int
mov
out
cld
fisubrs
mov
sbb
call
sar
jge
pop
push
and
inc
stos
aam
pop
or
mov
dec
inc
sbb
and
cmp
and
sub
lods
movl
jg
dec
mov
stos
inc
add
test
lods
enter
std
xchg
aad
call
cli
ja
shlb
lret
push
data16
lock
daa
add
addr16
mov
arpl
fbstp
pop
jecxz
mov
or
rcll
sahf
loopne
insb
inc
jns
ficomps
sbb
loop
les
ret
stos
adc
dec
sbb
movl
inc
pop
dec
inc
sbb
cltd
jne
outsb
mov
pop
das
pop
mov
sbb
clc
and
dec
inc
imul
cmc
cmp
pusha
jae
add
pop
mov
jg
insb
test
popa
stos
repz
jb
sbb
int3
mov
mov
add
pop
sub
fildl
jae
add
repnz
jmp
bound
repz
fcoms
lock
xchg
es
ficoml
popw
add
out
mov
cmpsl
jle
jecxz
fcoms
pusha
xor
dec
jb
mov
xor
mov
adc
mov
jp
jo
xchg
and
jle
xor
jecxz
mov
les
cmp
lock
and
lock
xchg
ss
daa
test
loopne
mov
or
js
btc
rcl
cmpsb
lea
xor
flds
mov
add
jb
stos
stos
addl
jecxz
pop
xor
xchg
jmp
pusha
inc
lods
inc
insl
out
shrb
std
bound
mov
loope
rcll
and
push
sub
adc
aas
call
cld
inc
fwait
test
jle
or
sub
fs
outsl
sub
icebp
sbb
gs
or
inc
notl
cmp
push
lretw
sbb
leave
cmpsl
ds
dec
cmpsb
into
aam
sbb
xchg
call
fwait
add
and
pop
cmc
jnp
mov
xor
mov
je
cmp
cmpsb
inc
dec
pop
lds
ss
pop
flds
sub
push
daa
aad
mov
dec
icebp
loopne
and
pop
lea
sbb
and
jnp
and
or
data16
mov
test
pop
jmp
sub
idiv
data16
or
mov
lea
or
mov
loop
inc
dec
sub
in
ds
jns
jge
jle
mov
imul
jne
ss
scas
mov
lret
insl
lahf
jmp
push
andb
into
bound
ss
jl
in
jb
ret
out
push
testb
mov
push
imul
jb
flds
movsl
dec
inc
xchg
push
out
xor
in
jb
add
enter
xor
inc
push
in
jae
cmp
xor
fsin
cwtl
sarl
orl
testb
test
dec
in
fmuls
pop
mov
hlt
push
in
pop
cmp
or
in
es
out
scas
data16
sbb
pop
lcall
or
jp
test
dec
add
pop
int
inc
std
mov
jo
fwait
aas
mov
push
leave
shrl
bound
sbb
hlt
stos
pop
mov
cmp
imul
dec
dec
mov
das
sub
adc
sbb
fbld
sub
jne
aas
push
xor
mov
out
adc
lods
mov
insl
and
aaa
add
push
cwtl
les
in
loop
jg
xchg
push
loopne
call
mov
seto
and
add
incb
jns
push
jle
rorb
add
adc
add
jb
mov
lret
adc
icebp
mov
mov
mov
xchg
mov
jge
pop
sub
das
xor
pop
shlb
xorl
push
movsl
test
jae
sub
scas
mov
bound
lcall
icebp
and
fimull
jg
notb
pop
movsl
xchg
xchg
pop
movsl
lods
movsb
add
lret
stos
jno
loop
pop
push
cltd
inc
imul
addb
call
ja
cmc
add
add
fistl
mov
ss
mov
test
lahf
push
mov
cmp
dec
add
in
inc
dec
mov
pop
fbstp
mov
cmp
insl
sbb
xchg
lea
mov
loope
lock
dec
mov
mov
adc
js
sbb
out
js
adc
in
cli
mov
es
outsb
cli
arpl
mov
sub
pop
jae
inc
cmp
adc
and
jo
clc
mov
iret
mov
je
lods
or
jno
icebp
aas
mov
xchg
xor
popa
jae
jge
adc
cvtps2pi
imul
fidivrs
imul
movsb
mov
cmp
stc
insl
out
jne
mov
or
rolb
into
ljmp
int
mov
push
sbb
jbe
arpl
rorb
es
lret
xor
std
test
adc
mov
aaa
iret
dec
rcll
dec
pop
repnz
inc
push
popa
mov
push
movsl
fwait
repnz
ret
cmp
mov
stos
adc
rorb
aam
andb
and
lcall
xor
ljmp
movaps
mov
jno
add
scas
push
jb
xorl
jmp
es
daa
ret
mov
imul
mov
inc
test
ret
lock
sub
cmc
scas
inc
push
adc
sbb
adc
jp
movsl
mov
pop
or
loopew
add
pop
stos
mov
sbb
imul
mul
orb
stc
cmc
icebp
call
jnp
mov
ds
add
push
dec
shrb
mov
aas
pop
dec
or
stc
faddl
xor
fldenv
and
inc
push
fists
xchg
mov
and
lock
xorb
sub
xor
jecxz
sti
outsb
popf
lods
into
mov
int3
mov
lret
push
and
adc
fcoml
cmp
call
and
fiaddl
jp
test
loope
pop
fdivs
lret
lcall
xor
xor
pop
sub
dec
fcompl
jle
std
gs
int3
imul
jno
jle
push
popa
cmp
call
jo
insl
xlat
outsb
cmpsl
inc
insb
xchg
mov
push
push
stos
mov
es
daa
sub
adc
or
js
jns
dec
sbb
ret
ljmp
stos
lahf
jb
xchg
xor
pop
addl
daa
mov
xor
js
pop
sbb
xchg
sub
push
or
push
iret
mov
dec
inc
and
mov
sub
xor
cmc
cs
inc
adc
sti
xor
aam
popl
call
inc
cmp
jo
pop
out
push
and
in
outsb
mov
pop
orl
xchg
jae
hlt
arpl
movsb
hlt
cwtl
cmp
xchg
mov
pop
mov
xor
inc
inc
stc
movsl
scas
push
jb
int
into
and
sbb
sbb
push
test
loopne
gs
pop
push
inc
f2xm1
divb
dec
inc
stc
sub
popa
jge
xlat
orb
cli
lret
cmp
push
and
sbb
shr
aad
dec
adc
adc
leave
int
cltd
fistps
pushf
ss
fwait
test
inc
push
and
cmp
mov
outsb
xchg
cli
sbb
inc
xchg
nop
in
xor
subl
sub
cmp
xchg
cmp
add
call
ret
add
mov
xchg
sarb
mov
icebp
sub
xchg
sahf
sbb
mov
ret
shlb
adc
leave
mov
jbe
sbb
push
sub
out
cli
mov
std
dec
push
jl
insl
cmp
cltd
inc
pop
cld
xor
je
mov
mov
cmpsb
pop
cmp
and
mov
jno
repnz
mov
outsl
movsl
xchg
popa
pop
and
xor
js
or
inc
and
test
sbb
arpl
add
mov
and
insb
pop
test
mov
cld
hlt
fs
imul
scas
es
lods
add
fcmovne
sti
lea
or
ss
shrl
loop
add
test
mov
stos
push
xchg
mov
out
data16
cmp
adc
ret
inc
int3
add
ljmp
test
rcrb
sbbl
das
xorb
dec
jb
nop
inc
addr16
push
daa
ljmp
pop
dec
jg
in
je
push
sub
outsl
adc
repz
mov
mov
cmp
leave
mov
push
pop
xor
leave
arpl
and
int3
push
jle
imul
inc
mov
imul
loope
jge
and
cltd
adc
mov
insl
cmp
dec
dec
icebp
mov
aaa
stos
mov
inc
jle
xchg
out
pop
lahf
or
adc
or
in
sub
push
pushf
jge
out
addl
in
movb
test
in
xchg
add
inc
mov
dec
cld
xlat
add
out
jb
add
pop
repnz
cmp
sbb
inc
test
xchg
push
and
or
xchg
dec
mov
mov
scas
mov
adc
push
jp
add
xor
mov
imul
icebp
call
int
dec
mov
and
call
je
or
mov
pop
sbb
addl
pop
xor
sbb
xchg
into
mov
sbb
add
repz
bound
adc
cmp
mov
mov
leave
movsl
inc
mov
pop
pop
adc
sub
fsub
jnp
add
add
gs
inc
mov
jae
in
push
pusha
lcall
xor
push
mov
div
pusha
push
or
pusha
mov
stos
xchg
aam
xor
scas
mov
stos
push
inc
aam
stc
test
popf
lcall
mov
icebp
sbb
aaa
sbb
mov
cmp
loopne
sbb
sbb
cmp
imul
or
and
cltd
fnstenv
lea
cmp
mov
out
push
repz
or
lcall
push
out
das
inc
or
jle
fs
imull
int
fildll
ror
popf
sbb
add
sti
or
stos
sub
pop
iret
mov
mov
push
xor
and
or
imul
dec
jne
divl
iret
cmpsb
xchg
cld
pushf
xor
rorl
and
add
push
int3
pop
enter
insl
ret
ss
pop
dec
in
inc
mov
pop
pop
rcll
hlt
fwait
popl
mov
sbbb
sbb
push
pop
das
mov
add
ja
jmp
xchg
xor
call
es
sbb
in
xor
and
fdivrl
mov
movsb
sub
jp
insb
lcall
cli
jnp
fiadds
mov
mov
gs
lahf
cld
jge
dec
mov
fmull
xchg
cmpsl
in
dec
sbb
xchg
xor
lahf
push
push
xor
sbb
mov
sbb
adc
mov
and
adc
jge
jmp
popf
fbstp
mov
rcrb
mov
repz
cwtl
inc
loop
sbb
fbstp
stos
test
mov
iret
and
cld
je
fsubr
push
decl
sbb
mov
pop
and
cmpsl
jg
insb
subb
loope
sub
ficoml
push
pusha
sub
in
mov
sub
and
faddl
movsb
xchg
mov
jno
jle
test
mov
and
inc
pushf
sbb
movsl
rcrl
ss
popa
xchg
stc
fidivrs
repnz
jmp
xor
aad
and
xchg
inc
cmpb
daa
lods
aad
fs
inc
jne
out
sbb
das
jno
test
sbb
cltd
loopne
scas
add
jo
xchg
add
or
jp
imulb
adc
jnp
add
cmp
sub
sbb
mov
add
mov
sub
aas
or
adc
sbbl
cmpsb
outsb
cmp
daa
xchg
ror
mov
inc
lock
pop
aad
add
push
hlt
lret
push
inc
sub
pop
push
cmc
inc
addl
xlat
leave
ja
int3
shrb
mov
sub
fwait
js
adc
jmp
insl
mov
repz
cmovp
cmp
sti
fimuls
jo
fdiv
cwtl
mov
inc
popf
push
in
jae
iret
push
dec
xchg
mov
push
adc
stc
ja
jmp
cmp
lods
insl
inc
sub
push
mov
xor
mov
push
dec
mov
and
adc
iret
rdmsr
jmp
xchg
arpl
roll
xlat
std
push
or
or
arpl
cli
insl
xchg
sub
mov
xor
push
dec
mov
aaa
mov
sub
bound
mov
je
icebp
sub
outsl
stos
mov
test
shll
inc
jle
int
xchg
mov
sbb
add
adc
mov
pop
arpl
sub
xchg
jge
pop
jl
sbb
cmp
and
test
leave
out
lret
cld
pop
jae
push
out
jbe
in
sbb
adc
fs
sub
cmp
mov
sbb
ds
mov
sbb
fldcw
sbb
mov
cwtl
inc
daa
lds
shll
inc
test
dec
fildl
inc
pop
jecxz
shlb
push
mov
jno
jl
out
lods
sbb
mov
dec
lret
out
push
inc
fucomip
or
pop
ffree
jo
and
sbb
sbb
adc
adc
out
scas
or
push
cmp
popl
mov
sbb
movsb
arpl
popa
xchg
stos
mov
leave
and
ds
clc
fs
cli
lds
push
pop
test
cmc
pop
fdivrs
sti
repnz
pop
lea
icebp
inc
inc
dec
xor
notl
cmp
mov
pop
imul
pop
cs
sub
loope
cmp
je
adc
ret
dec
mov
cmp
pusha
add
nop
dec
and
fsubl
cs
pop
mov
leave
scas
pop
movsl
out
pop
sbb
sub
loope
pop
sti
notb
lods
jno
sbb
add
dec
inc
ficoml
mov
shlb
lcall
jg
mov
popf
leave
sbb
push
lds
mov
call
insl
push
xchg
and
aaa
iret
jb
push
and
and
xchg
add
bound
pop
jne
hlt
cltd
pushf
cld
pop
sub
dec
inc
push
mov
add
push
or
dec
in
sub
xor
xor
sub
data16
shrb
popa
into
test
outsb
lods
jp
adc
mov
jns
jle
rcrb
xchg
repz
stos
xor
xchg
or
inc
repz
lret
lcall
xchg
jg
push
fldcw
loope
ljmp
sub
fisubrs
cmc
arpl
push
inc
jo
add
mov
ret
jmp
rcrb
push
jbe
loope
xchg
xchg
push
int3
enter
imul
or
push
add
ficoms
jmp
cwtl
mov
cmp
mov
mov
push
mov
lock
xchg
popa
daa
pop
bound
pop
flds
pop
into
js
lds
cmpsb
push
fwait
ds
cwtl
repz
data16
add
xor
mov
jge
add
sbb
add
out
push
mov
lock
xorb
and
into
pop
sub
stos
or
enter
pusha
push
fnstsw
or
out
imul
mov
mov
cmp
jbe
pop
mov
inc
mov
int
push
adc
mov
ljmp
leave
sahf
and
movsl
sub
stc
popf
mov
dec
xchg
mov
and
mov
in
rorl
xchg
and
fdivrl
mov
out
sub
jmp
pop
sti
xorb
test
lcall
sarl
mov
imul
mov
test
adc
cld
pop
subl
xchg
mov
adc
sbb
stos
xor
adc
out
cltd
test
lods
js
aad
bound
cmp
dec
sbb
xchg
xor
push
sbb
test
sub
jl
mov
imul
mov
aaa
mov
add
inc
dec
jne
xor
cmp
xor
dec
mov
xchg
inc
mov
addl
scas
jl
xchg
mov
movsl
add
pop
mov
rcr
ljmp
scas
cmp
daa
and
add
or
push
call
sti
lea
fbstp
jge
mov
imul
and
shr
lods
pop
aam
xor
add
add
fistpl
mov
adc
adc
aad
in
and
cmpsb
mov
add
bound
ret
les
cmp
shlb
dec
fimuls
mov
lret
into
xor
cmp
fs
inc
data16
lea
mov
and
push
cmp
mov
or
jmp
jmp
xchg
push
mov
adc
loope
push
mov
inc
mov
stos
imul
xchg
addb
push
mov
push
lcall
push
xchg
insl
jne
int
arpl
pop
loope
ficoms
les
dec
cmp
iret
loop
cwtl
push
push
cli
add
xchg
mov
push
sbb
test
stos
jae
pushf
loopne
sub
sub
jo
jg
sbbb
cmc
push
pop
imul
lcall
imul
pop
outsb
pop
jp
sub
fisubrl
pop
ret
jo
mov
add
pop
mov
outsb
jmp
mov
mov
cmpsl
add
and
mov
mov
cltd
sub
pop
fstpt
jnp
out
lea
aaa
xchg
rcrb
fistl
mov
loope
add
pop
inc
sbb
dec
jne
aas
jnp
add
push
jl
call
imul
push
add
enter
notb
mov
call
add
enter
inc
dec
dec
fdivs
bound
cmp
lods
mov
fs
gs
fmuls
and
aad
and
push
loopne
inc
int3
cmp
push
dec
ret
adc
xorb
pop
and
jl
pop
pop
dec
sbb
jp
pop
sub
mov
dec
jae
dec
shlb
mov
dec
sar
inc
ds
cli
pavgw
mov
inc
push
iret
mov
inc
jg
stc
nop
fucomip
ficomps
clc
mov
xchg
pop
push
sub
scas
and
and
btr
mov
mov
out
pop
sub
xor
pop
ljmp
sub
stc
addl
pusha
leave
in
sbb
push
scas
loope
shl
in
mov
cld
std
dec
cld
std
dec
mov
cs
inc
sbbb
enter
dec
mov
ljmp
ds
and
dec
xchg
notb
aas
inc
mov
adc
es
stos
imul
and
daa
inc
fnsave
mov
sub
divb
pushf
cmp
xchg
xchg
add
cli
mov
mov
sbb
je
xchg
rolb
clc
cmovnp
ss
dec
aas
jp
iret
mov
jbe
mov
scas
add
add
nop
dec
xchg
lret
sbb
dec
dec
out
adc
and
test
jmp
movsb
xchg
stos
jbe
add
add
mov
pop
les
aas
ret
lea
scas
adc
in
mov
dec
std
lret
jb
fs
lret
mov
cli
jae
inc
fistpll
push
fldenv
xchg
outsl
push
leave
cmp
vaddss
jg
fisttps
fwait
insb
cs
xor
popf
fmuls
aaa
pop
lock
flds
stos
ret
adc
mov
xchg
jmp
out
mov
ljmp
clc
lea
inc
or
xor
test
or
dec
sahf
popl
popa
mov
dec
dec
mov
mov
enter
notl
ds
pop
sub
in
jmp
shll
shrl
mov
movsb
std
out
push
mov
sub
xchg
lds
or
jmp
xlat
lcall
push
outsb
cld
nop
nop
cmp
sbb
mov
loope
addr16
bts
mov
mov
xchg
outsb
xor
fwait
dec
jg
frstor
mov
sub
nop
or
js
cmpsl
lock
jg
jmp
sbb
mov
arpl
std
std
inc
iret
movsb
mov
arpl
inc
shlb
ds
ss
pop
jmp
addr16
sub
call
pop
aaa
pusha
and
faddl
iret
inc
fwait
adc
and
fs
xchg
stos
sbb
push
add
xor
inc
push
push
sbb
lret
rcrl
sub
repnz
inc
enter
lods
add
pop
push
adc
add
cmc
sbb
mov
mov
or
repnz
jbe
jne
ret
dec
mov
mov
jne
jle
lea
push
aad
test
pop
or
ds
inc
add
xlat
adcb
insl
dec
aam
inc
movlps
sub
test
daa
xchg
push
in
out
jmp
dec
mov
sub
cltd
jle
mov
idivb
pop
jae
and
sbb
mov
out
fildll
shrl
push
xchg
add
fnstenv
pop
inc
sub
pop
shrl
xchg
popa
cmp
inc
mov
jnp
scas
xchg
cmp
add
aam
ja
faddl
and
cwtl
shll
sbbb
inc
pushf
mov
jne
and
aad
inc
sbb
adcb
cmpsb
ds
js
pop
testb
adc
lods
inc
push
sahf
mov
push
orl
inc
les
jmp
dec
jnp
hlt
mov
dec
dec
mov
cmp
push
inc
mov
cltd
xchg
sub
cmpsb
aas
cmpsl
jmp
out
cli
cmpsb
cmp
aas
out
push
jbe
sti
jbe
inc
scas
push
loop
and
sbb
sub
adcb
push
mov
jne
sub
sub
into
mov
mov
mov
push
popa
mov
notl
cmp
lods
cmc
mov
push
mov
test
in
push
shlb
jbe
mov
icebp
mov
dec
and
jecxz
or
xor
fidivs
push
push
lds
or
jge
sbb
rcrl
pop
cwtl
mov
nop
icebp
sbb
dec
ret
sbb
inc
sub
xchg
es
dec
outsb
fdivrs
fwait
jb
jle
cmp
jbe
imul
lret
shll
jg
xchg
mov
bound
nop
aad
movsb
jg
or
xchg
mov
inc
xchg
sub
mov
push
or
call
testb
cmpsb
fsub
add
testb
and
lret
stos
mov
xchg
cmc
cmp
pop
add
cmpsl
fimull
mov
mov
cli
mov
cmp
jns
mov
and
fwait
aas
shlb
dec
xchg
aad
fnstcw
mov
push
add
xchg
jne
scas
fcmovnu
mov
xor
or
and
ja
into
lds
lods
or
ss
add
loopne
push
sahf
lods
mov
nop
jne
ret
adc
sbb
jmp
sub
pusha
or
jecxz
int
aas
fiaddl
cmpsb
fcmovnb
shr
in
test
xchg
dec
call
loop
negb
xchg
cmp
push
adc
push
cld
stos
rorl
jl
out
push
fdiv
add
int3
jns
dec
call
fwait
popf
sub
mov
sub
out
dec
out
jecxz
push
or
sub
add
add
xor
sbb
into
jl
pop
les
test
sbb
push
xchg
xor
aas
cld
push
fidivs
push
sub
cmp
fists
fnsave
movsl
sbb
repnz
mov
inc
insl
mov
aas
mov
into
in
dec
imul
and
xchg
mov
pop
cld
push
pop
cmpsb
or
ljmp
hlt
insb
paddq
in
inc
out
jb
or
es
jmp
les
scas
jno
scas
push
jno
cltd
add
adc
fsubl
lds
frstor
add
push
pushf
scas
stos
or
in
jns
mov
cli
pop
mov
mov
or
xor
and
cmp
inc
into
push
jge
inc
movsb
pop
es
or
pop
mov
cwtl
and
push
lock
jmp
xchg
inc
pop
in
in
xor
xor
test
add
loop
clc
outsb
push
cmc
jne
sbb
dec
or
mov
je
inc
frstor
or
adc
push
cli
out
lea
mov
add
movsl
push
adc
rolb
sub
mov
sti
mov
or
cmovs
xchg
or
fwait
mov
aad
das
pop
iret
aaa
pop
cmp
aas
add
add
push
rcrl
push
xchg
sub
cltd
test
mov
cmp
sub
mov
push
aad
arpl
xor
aam
cmp
mov
dec
loopne
loope
add
pop
dec
pop
inc
cltd
sahf
push
jecxz
fcompl
xchg
dec
cltd
mov
pop
in
or
cltd
push
jmp
xor
test
dec
fcoml
movb
mov
imul
or
out
jne
enter
jge
push
arpl
mov
xchg
rcrl
mov
in
fiadds
xchg
flds
loope
out
fldt
jne
dec
jecxz
adc
bound
movsl
test
and
mov
ja
fidivrl
cs
cld
fstpl
xor
mov
pop
or
mov
cmp
sahf
mov
xchg
aam
nop
fnstcw
mov
add
and
push
adc
xchg
pop
sub
jbe
int3
adcl
nop
mov
or
fwait
enter
jp
out
jl
in
sbb
push
sbb
push
cmp
lds
jmp
cmpsb
cwtl
mov
cltd
in
push
clc
sahf
loope
in
mov
aam
xor
ljmp
cmpl
adc
movsb
incb
adcb
enter
mov
mov
ljmp
cmp
scas
xorl
mov
imul
outsb
push
imul
xchg
in
outsl
cmp
addl
push
push
inc
stc
ds
push
sbb
mov
jp
ror
add
imul
mov
out
popa
mov
push
adc
xchg
cwtl
xor
inc
je
jmp
inc
mov
mov
int3
push
xchg
cli
jbe
dec
cltd
int3
or
xchg
popa
adc
ljmp
push
fimull
nop
add
out
js
adc
inc
ficomps
inc
popf
cmp
test
xor
sete
nop
jne
jl
movl
fucom
fdivrs
sti
aas
rorb
dec
out
cwtl
ljmp
cld
outsl
adc
lods
push
call
and
xchg
pop
fdivr
push
outsb
sbb
add
dec
cltd
jne
divb
mov
cmp
pop
divl
mov
mov
cmpsl
jge
out
sub
jp
push
mov
xchg
rorb
pushf
mov
das
and
test
or
insb
jne
loope
lcall
andl
clc
xor
mov
in
dec
mov
cmpsb
or
out
jmp
ja
xor
cmp
cmp
dec
push
sbb
sub
lret
sbb
fwait
mov
and
cmp
call
sbb
cmp
movsb
mov
jne
jnp
lds
and
dec
xchg
dec
out
test
je
lods
dec
cltd
cld
or
cmp
pop
xor
sbb
hlt
lds
jb
test
push
cwtl
xor
or
in
push
popa
pop
inc
mov
mov
push
sub
stc
sub
outsl
xchg
movsl
test
loope
rorb
pop
call
cmp
pop
mov
sub
lock
daa
sub
fimull
cltd
add
sub
mov
lds
cmp
outsb
push
or
mov
adc
std
in
in
je
repz
and
dec
into
sbb
pop
jge
icebp
sub
inc
sti
loope
inc
lahf
dec
dec
cmp
std
mov
mov
cltd
cld
cli
frstor
div
ds
nop
jns
or
out
or
ljmp
dec
rclb
sub
push
daa
push
mov
ds
pop
loope
in
and
aas
adc
in
xchg
inc
sti
or
adc
aas
es
imul
in
outsl
lret
int3
repnz
sub
xor
fwait
orl
repnz
icebp
dec
sbb
cs
in
dec
loopne
or
dec
negl
inc
mov
xor
ljmp
fsts
stc
cld
test
lds
pop
mov
xor
jnp
cmp
xchg
mov
out
jb
push
sahf
lds
test
mov
mov
adc
test
xchg
ds
or
adc
xor
jnp
mov
pop
pop
dec
fildl
lods
and
cs
push
mov
mov
pop
inc
in
adc
and
push
or
sbb
je
jle
inc
movsb
lcall
fwait
mov
stos
ljmp
out
aam
cltd
jge
xor
jnp
pushf
cli
fidivs
xchg
sub
popf
mov
in
popa
push
mov
or
imul
icebp
mov
cs
pop
adc
stos
in
lahf
popf
sbb
idivb
enter
cmp
sti
mov
mov
mov
sbb
das
ret
push
sbb
mov
or
enter
enter
outsb
mov
out
lcall
lea
pop
lods
js
nop
cmp
mov
jp
cs
cmp
dec
fs
xchg
push
ljmp
insl
stc
orb
mov
ret
enter
jge
shll
std
mov
inc
cmp
sbb
push
shll
fisttpl
add
fists
mov
dec
dec
out
loop
in
test
mov
or
fdivrs
pop
es
data16
and
push
sbb
pop
sbb
fldt
stos
sbb
mov
mov
sti
lahf
std
mov
push
jns
in
testb
ret
xlat
sub
mov
jmp
xor
fisubl
imul
fwait
shlb
add
dec
push
xlat
ret
sub
addr16
es
lcall
pop
mov
mov
xchg
loopne
addr16
paddb
lcall
jnp
xor
lcall
std
mov
daa
fstl
xor
test
mov
lcall
shlb
adc
mov
int3
dec
mov
and
and
test
gs
popa
out
jno
pop
cmpsb
dec
xorb
enter
cmpsl
cmp
mov
mov
fs
add
and
push
cli
sbb
push
push
mulb
dec
mov
in
leave
push
mov
in
add
in
stos
pop
loope
enter
mov
mov
dec
ficompl
jmp
clc
push
mov
pop
idivl
aaa
xchg
mov
xor
sub
fistps
out
mov
cmp
mov
arpl
push
adcb
aam
jbe
sub
xchg
lods
test
xchg
add
pop
pop
dec
aas
push
dec
fs
call
mov
pop
push
int3
js
or
and
hlt
aaa
and
das
mov
cmp
cmp
mov
ficoml
loope
mov
repnz
in
repz
lds
xchg
push
xor
mov
mov
sbb
push
aaa
cmp
daa
lcall
cltd
std
push
inc
mov
or
pop
xchg
lret
lahf
add
mov
jge
test
push
in
xor
push
aas
addr16
push
jmp
idiv
cmpsb
movsl
add
or
and
mov
add
ret
in
mov
test
jp
pop
inc
dec
pop
sahf
repz
inc
cmp
dec
add
imul
jbe
inc
inc
fstps
mov
jae
cmpsb
aaa
pop
lret
cmc
ja
cmp
sbb
in
mov
jae
movsl
cmc
inc
cmpb
movsb
into
in
mov
pop
out
stc
inc
mov
jmp
mov
loope
aaa
popf
push
gs
mov
pop
xorb
shlb
push
into
mov
and
fbstp
xor
stos
xchg
xchg
repnz
inc
push
dec
subb
mov
xchg
in
std
lret
pop
mov
sub
imulb
sub
clc
pop
inc
mov
ja
jnp
loopne
shll
mov
adc
into
ja
mov
roll
fdivrs
xchg
mov
or
mov
ret
mov
xchg
inc
push
movsw
sbb
cld
aam
in
test
arpl
cmpsl
or
dec
jg
leave
in
or
push
lods
xorl
lret
pop
les
push
cmp
or
sub
stos
lret
lret
andl
push
imul
lds
mov
out
mov
jno
jno
sbb
xor
mov
xchg
jge
xor
fnstenv
pop
push
lds
inc
fisubs
mov
xorl
fisttpll
mov
mov
push
add
jo
cs
push
pop
enter
push
fidivl
mov
mov
mov
cmp
sbb
mov
inc
jo
jge
push
jb
out
adc
decb
cwtl
out
nop
mov
fistps
pop
mov
aas
rcrl
or
shlb
jbe
sub
add
push
std
push
ja
scas
fadds
jb
stos
or
xor
sub
lds
ret
ss
mov
in
sbb
or
and
iret
repnz
cwtl
ds
imul
or
mov
xchg
cwtl
dec
pop
shlb
sbb
cmp
xor
test
fstpl
cld
fs
dec
fwait
pop
mov
push
and
mov
mov
jle
icebp
jns
subb
pop
cltd
inc
das
test
das
adc
cli
sahf
push
cmp
dec
push
jo
repnz
int
push
xchg
cmp
es
and
mov
cli
or
out
mov
dec
scas
std
mov
push
inc
scas
push
movsb
nop
fimull
clc
sub
fstps
xchg
sub
movsb
or
xchg
push
int
jnp
push
mov
gs
sub
hlt
shrl
and
adc
dec
xchg
mov
pop
push
mov
mov
push
mov
aas
fcmovb
testb
inc
imul
sub
out
and
loope
lahf
cmp
imul
and
imul
jp
mov
mov
repnz
xor
sub
dec
daa
imul
ret
popa
sysret
out
lcall
shrl
rorb
pop
stos
imul
jmp
lea
xchg
xchg
mov
movsb
and
shlb
into
xchg
test
xor
arpl
ja
sbb
lds
lret
dec
andb
xor
addl
or
xchg
mov
andl
sti
fs
inc
cmp
rclb
mov
sbb
mov
push
sbb
xchg
repz
cmp
leave
xor
shrl
daa
or
xchg
pop
pop
fabs
cmpsl
dec
push
mov
jp
ret
stos
movsb
iret
rcll
stc
push
pop
add
dec
mov
int
xor
pop
sbb
insl
and
lds
adc
pop
xor
jae
lock
shrl
xor
aaa
imul
sbbl
or
push
movsb
lock
addr16
cs
jl
repz
xor
jno
push
arpl
pop
movsb
cmp
mov
and
sub
or
mov
inc
hlt
and
inc
scas
nop
xor
aaa
movsb
push
sub
mov
mov
outsb
pop
mov
dec
mov
push
add
xor
pop
xchg
loop
xor
adc
mov
fsubs
and
sbb
mov
xor
pop
repnz
cli
ja
jmp
movsl
sbb
addr16
push
jnp
dec
mov
pop
xlat
mov
ret
pop
push
jge
dec
aam
es
sbb
sbb
test
mov
pop
ss
push
loop
orl
jle
inc
cmp
mov
push
addl
in
fmull
dec
ror
ds
call
sbb
and
mov
mov
pop
je
adc
mov
mov
jmp
lods
pusha
and
insb
stos
leave
movsb
stos
add
out
das
jl
mov
mov
loopne
lods
pushw
add
in
mov
notb
pop
fcmovnb
cltd
cmp
das
movsl
loope
inc
inc
es
ja
cltd
jg
and
enter
hlt
pop
icebp
fmull
jg
push
mov
lods
mov
sbb
imul
aad
into
xchg
push
pusha
dec
or
sbb
aad
ret
xchg
mov
test
imul
jmp
repnz
pop
outsb
int3
dec
movsl
lock
add
inc
mov
adc
cmc
mov
jns
ret
or
inc
pop
dec
nop
fnsave
jmp
mov
add
xchg
push
int
mov
leave
sbb
adcb
jnp
inc
inc
jecxz
push
cmp
outsl
inc
inc
repnz
lret
cli
lods
cmp
or
movsl
hlt
add
jbe
sbbb
hlt
repz
mull
rclb
xlat
bound
cmc
test
mov
xor
jmp
adcb
stos
aam
scas
mov
xor
aad
in
mov
lret
movsl
dec
cmpb
sub
sub
pop
xor
xor
sahf
iret
daa
add
inc
mov
imul
and
pop
test
pop
jecxz
dec
ds
cmpsl
dec
adc
xchg
lds
xor
ds
adc
xchg
leave
mov
jbe
and
cmp
push
jp
push
out
pop
mov
in
pop
sub
loop
popa
in
arpl
sbb
cmp
xor
xchg
test
add
cld
dec
push
into
addr16
push
pop
adcl
inc
sbb
icebp
out
add
mov
cwtl
jl
xor
pop
push
sub
out
hlt
dec
ss
push
or
ficompl
fistps
stos
push
jae
inc
stos
shlb
add
popa
sub
push
jbe
xchg
stc
gs
push
xor
inc
insl
ja
testl
mov
mov
aad
push
sub
cmp
loop
cmpsb
shll
push
pop
xlat
arpl
loopne
mov
mov
xlat
or
pop
fidivs
sub
jae
add
ret
aas
leave
pop
lcall
pop
shr
loope
ja
xor
movb
loop
movb
jl
ss
in
loopne
cmpl
ljmp
mov
lock
jmp
sbb
jecxz
jns
adc
xchg
in
insb
pop
insb
sbb
jb
jbe
dec
insb
dec
idiv
cltd
sub
loope
mov
cmp
int
cmp
sbb
shll
stos
cmpsb
push
out
mov
jbe
in
dec
data16
fldl
fxch
scas
ljmp
mov
popf
insl
in
hlt
or
cs
dec
outsl
inc
lds
sbb
pop
in
insb
rorb
or
inc
and
aas
ds
dec
mov
sahf
sbb
pop
xchg
leave
mov
pop
and
outsb
xor
loope
shrl
das
mov
lret
mov
cmpsb
repz
sbb
daa
mov
clc
or
cmp
stos
jb
mov
push
imul
inc
xor
cmpsl
les
mov
mov
enter
mov
inc
push
lods
sub
int3
xchg
mov
xchg
push
int
pop
inc
pop
hlt
mov
push
aam
inc
adc
xor
data16
lea
out
cmp
cmp
cli
pop
jns
jno
cli
lahf
cltd
push
icebp
jno
sub
push
pop
outsb
xchg
jmp
mov
cli
push
repnz
xchg
pop
in
xor
mov
rcl
jp
into
cmc
jo
push
dec
and
sti
aaa
movsl
mov
and
dec
push
cmp
imul
jl
jo
add
jne
outsb
shrl
shlb
push
xchg
pop
and
cs
aam
fsts
repz
mov
jae
pop
scas
push
pop
xor
roll
xchg
push
xchg
mov
mov
sub
pop
inc
xor
mov
cmp
ret
lea
mov
das
mov
sub
movsl
mov
xchg
xchg
js
xor
sub
mov
lods
pop
pop
push
adc
push
inc
mov
push
xor
add
adc
addr16
testl
mov
cld
imul
hlt
shlb
push
test
adc
testl
sbb
lret
xor
bound
std
in
lret
xchg
inc
push
mov
scas
test
and
pop
gs
mov
insb
push
add
lods
ss
shlb
stc
add
sbb
lcall
fimuls
adc
inc
xchg
xchg
jg
mov
rorl
xchg
adc
adc
mov
mov
fadds
insb
inc
mov
push
xor
cmpsb
mov
lcall
cwtl
setne
sub
jmp
jmp
out
insb
test
lret
sbb
in
inc
pop
pop
int3
xor
mov
cmp
fildl
mov
jne
sbb
aaa
mov
pop
aaa
pop
icebp
push
ja
adc
jne,pt
hlt
cli
cmp
test
or
out
xchg
push
out
popa
cltd
cmpb
sti
dec
out
jl,pt
xor
xor
mov
popf
cld
add
sbb
inc
addr16
inc
dec
jg
xor
or
sub
lret
cwtl
jno
ja
loop
dec
xor
roll
jne
rcrb
jmp
xor
stc
test
cmc
bswap
xchg
pop
insl
jl
aas
subl
dec
ret
cmp
mov
xchg
inc
pop
sbb
outsb
or
test
lret
sub
inc
movb
cmpl
jns
insb
cmp
jbe
fidivrs
outsb
add
psubusw
es
fnsave
sbb
dec
jl
push
add
xchg
popf
sbb
sbb
push
gs
out
and
cld
aas
les
jg
pop
push
test
sti
mov
pop
push
out
fwait
mov
push
inc
xchg
cld
out
ds
jg
jecxz
xor
or
push
cs
and
inc
in
in
data16
cwtl
inc
aad
clc
ret
and
inc
rcl
sbb
mov
mov
dec
cmc
and
push
jnp
shll
bound
jge
sarb
leave
mov
and
dec
outsb
icebp
adc
cli
cmp
xor
sbb
jns
cmc
lahf
popl
dec
mov
aaa
xor
xor
ret
adc
fisubl
dec
dec
pop
mov
pusha
xor
xor
out
subl
cmp
pop
les
mov
xchg
jbe
ret
adc
adcb
ljmp
add
jge
adc
xor
fsubrs
push
pop
or
pop
pusha
mov
adc
fnstenv
mov
in
sbb
sbb
sbb
aad
pop
pushf
pop
push
xor
sbb
jecxz
fcoms
pop
imul
in
jns
gs
lret
jecxz
cmp
insb
lds
sub
orb
ja
fidivrl
iret
repz
xchg
add
sub
outsb
out
mov
xchg
nop
push
insb
mov
jle
lds
pop
stos
xor
mov
jge
and
fwait
jne
mov
insb
cli
cmp
xchg
cmp
cmpsl
fwait
mov
les
jecxz
pushf
pop
dec
xor
js
inc
aad
lea
mov
lock
xlat
mov
adc
add
mov
jmp
mov
movsb
aad
mov
sarl
jge
outsb
icebp
push
notb
movsl
movsb
push
jl
aaa
xlat
shll
in
xchg
xorl
aad
or
in
leave
lcall
test
stos
stc
mov
stos
and
and
pop
jmp
sub
test
mov
xchg
mov
pop
or
ret
bnd
push
imul
sbb
push
pop
stos
xchg
dec
lds
out
xchg
pop
lods
adc
xorb
or
ljmp
mov
scas
scas
pop
add
rolb
pop
jo
cmp
popa
les
push
push
adc
xchg
dec
data16
or
pop
push
xor
leave
in
fcompl
ljmp
test
mov
pop
rorl
jne
add
sbb
les
pop
sarl
fnstsw
mov
inc
mov
dec
jmp
mov
imul
cli
mov
mov
ret
nop
je
cmp
cmpsb
test
xchg
push
ret
mov
std
out
mov
adc
cmp
test
pop
fldenv
and
or
pop
pop
sbb
lock
sbb
rcll
cmp
dec
pop
xchg
imul
fildl
xor
and
int3
sbb
xorl
inc
dec
adc
xor
test
call
pop
loop
loope
and
cmp
lods
in
jo
lea
cwtl
xchg
les
push
addps
cwtl
and
jmp
rcr
xchg
mov
jecxz
fmull
and
sub
pushf
jmp
ret
cmp
fwait
mov
or
in
icebp
pop
sub
in
dec
jne
fcompl
icebp
stos
adc
push
xchg
pop
lahf
or
rclb
loop
adc
xchg
gs
mov
ret
push
sti
icebp
outsl
pop
nop
mov
mov
ja
in
sarb
pop
stc
arpl
cmp
sub
xor
std
or
stos
repnz
push
int
daa
push
fs
sti
mov
add
cltd
mov
icebp
or
fwait
imul
cld
stos
mov
sub
and
xchg
pop
in
lock
repnz
aam
ss
in
nop
push
cmpsb
cwtl
imul
shlb
xor
dec
and
sub
sahf
cwtl
mov
ss
dec
pop
pop
cmp
aas
std
sub
fbstp
lock
in
xlat
aas
cmp
lods
dec
lods
mov
out
adc
or
test
xor
mov
scas
lock
push
mov
scas
push
pop
jmp
in
stc
xchg
pusha
insl
call
ja
cs
cld
bound
mov
ja
mov
ffreep
xchg
pusha
outsb
mov
pop
inc
jno
xor
xchg
je
mov
call
test
jnp
outsl
lods
xchg
les
fcompl
push
jbe
jmp
cmpsb
pop
adc
adc
mov
fnstenv
loop
mov
jbe
das
cmp
pop
andl
cmp
xchg
mov
mov
mov
stc
scas
cmc
imul
sbb
ja
jge
movsb
xchg
fisubl
stc
pop
shrb
js
mov
popf
mov
push
adc
shlb
test
js
aaa
nop
out
inc
and
les
shrb
lret
sti
push
scas
rcrl
and
mov
cmp
push
aaa
adc
jnp
jbe
add
aam
scas
mov
in
adc
call
jl
ds
aam
ror
push
fs
repnz
push
pop
pop
mov
mov
insb
das
mov
fidivrs
inc
cmpsb
push
in
inc
outsl
sbb
xlat
aas
jl
faddl
xor
je
sbb
or
add
sub
push
mov
out
and
mov
adcb
fxch
movb
jnp
addb
xlat
pop
lret
in
frstor
mov
pop
fld
lock
xchg
jne
jp
in
mov
inc
lods
bound
sub
adc
js
pop
fisttps
pop
popf
push
sub
mov
fnstenv
xchg
test
push
xlat
inc
loop
shrb
mov
and
repnz
jbe
stc
or
hlt
stos
and
fwait
outsl
leave
xchg
cmpl
mov
pop
or
sub
jns
and
xchg
jbe
cli
push
jle
cmp
and
loope
ljmp
lret
and
sub
xchg
pusha
dec
xor
cmp
mov
or
cmp
add
pop
lcall
jne
cwtl
jl
stos
jbe
mov
mov
push
push
loope
add
mov
cmp
pop
mov
xor
jle
xor
inc
iret
aaa
fst
std
sub
orl
jo
out
subl
adc
xor
fsubrs
cld
in
mov
adc
shlb
mov
sub
cmp
push
sahf
cmp
jns
push
adc
push
sbb
out
cwtl
add
int3
lea
cmp
rcll
cld
mov
pop
add
and
xor
pop
lahf
aad
test
pop
or
pusha
rolb
lds
mov
sub
loop
test
ljmp
push
div
aad
mov
test
das
xor
adc
and
cs
outsb
andl
jle
pop
imul
in
inc
cmp
fsubl
sahf
xchg
gs
mov
sbbb
aad
imul
and
shll
insl
jecxz
xor
mov
stos
dec
pop
xchg
cmp
ret
test
jo
cmp
mov
push
lret
dec
adc
int3
lds
jecxz
xor
and
lods
add
ds
inc
cli
out
adcl
in
lods
adc
test
xor
lds
pop
test
and
dec
fistl
jp
mov
cwtl
mov
adc
and
loope
dec
mov
popf
sbb
lret
lds
dec
das
xor
mov
mov
ret
mov
sahf
fs
daa
xchg
adc
fcomps
or
jecxz
jmp
jmp
ja
decb
or
push
adc
pop
nop
sub
sbb
inc
mov
fwait
stc
fisubrs
push
rclb
cmp
add
mov
mov
in
in
jo
sub
jae
pop
cmp
push
fstps
cmp
dec
ret
pop
cltd
shll
je
outsb
mov
jmp
stc
xchg
notb
mov
mov
push
xchg
ja
sbb
pop
out
out
push
sub
movsl
repz
lret
ret
out
push
lock
imul
lcall
ljmp
mov
cmp
adcb
loop
ljmp
sub
mov
inc
enter
and
ja
arpl
jmp
cmp
int3
jb
pop
lcall
add
psllq
cmp
fst
lds
fwait
out
gs
and
enter
lock
push
aad
or
inc
shl
loope
inc
jae
cmp
mov
movsl
das
or
push
xorl
nop
lret
addr16
pop
and
call
cmc
mov
xchg
cmp
sub
inc
lods
insl
icebp
mov
into
mov
dec
push
das
dec
cmp
dec
pop
cmp
jae
std
add
std
aam
jp
adc
std
or
sub
or
adc
pusha
pop
and
push
jge
adc
jne
inc
rorl
rorl
adc
aam
js
lods
pusha
cmp
cmc
orb
fs
adc
push
sarw
jns
pop
cwtl
aas
xchg
mov
sbb
ja
mov
xchg
cs
dec
sub
xchg
ret
int
rcrb
jg
xor
lahf
add
cmp
imul
mov
outsb
jae
out
lods
sub
ja
push
cmpsl
dec
push
ds
arpl
sar
icebp
lock
xchg
arpl
imul
ljmp
cmc
lods
mov
out
or
setg
adc
addr16
into
xchg
or
cwtl
inc
mov
outsl
push
mov
negl
push
bound
jmp
shll
cmp
add
int
jo
xchg
in
xlat
test
inc
outsl
jae
mov
mov
push
add
int3
mov
sbb
loop
shrb
mov
inc
mov
pop
xor
stc
test
in
pop
pop
addr16
xlat
mov
pop
sbb
int3
mov
pop
and
test
mov
jmp
pop
scas
xchg
cwtl
repnz
pusha
add
xor
xor
in
adc
mov
inc
inc
sub
fwait
arpl
addr16
loope
cltd
mov
aad
lods
pop
mov
cmp
or
jp
jg
ja
mov
inc
xlat
fsubr
sbbb
into
pop
psllq
jns
popf
lahf
cmp
inc
sbb
xchg
and
mov
in
mov
in
and
jp
cmp
mov
xchg
push
pop
shlb
add
xlat
push
lcall
fstpl
pop
mov
xchg
jnp
mov
pop
push
mov
jae
aaa
and
repnz
or
adc
jge
adc
sub
inc
push
push
xchg
and
dec
sub
lcall
lret
inc
cmp
mov
cmp
push
inc
sbb
sub
sar
push
icebp
adc
mov
imul
adc
or
aas
lcall
or
ss
dec
adc
lock
stc
jecxz
push
ja
ret
and
mov
xor
or
subb
lods
mov
test
dec
cmpsb
hlt
frstor
mov
dec
jmp
lcall
fiadds
sub
xchg
xor
sub
mov
and
pop
imul
popa
sub
and
sub
and
in
mov
push
out
xor
push
dec
ljmp
orb
arpl
test
shlb
jmp
inc
fistpll
or
outsb
lock
adc
call
div
inc
cs
lds
mov
jo
insb
sbb
aaa
mov
daa
sbbb
jmp
and
lret
daa
stc
in
out
pop
popa
pop
rcrb
pop
mov
pop
data16
cltd
std
cmp
mov
mov
sbb
ja
pop
push
repnz
dec
push
add
mov
out
xchg
orb
jbe
jl
lea
scas
mov
daa
leave
jecxz
stos
mov
pop
arpl
xchg
jp
es
pop
and
popf
adc
repnz
pop
out
jp
mov
aad
sbb
sbb
jge
mov
mov
add
xchg
mov
test
imulb
add
enter
lcall
mov
test
jge
jnp
push
cmovno
sub
dec
inc
xor
inc
lcall
pop
xor
mov
shll
sub
fwait
pop
jae
mov
or
iret
mov
hlt
cmp
dec
cli
jne
sahf
add
xchg
subl
pop
push
adc
loopne
testb
cmp
nop
mov
push
out
xor
lds
jae
mov
cltd
xorl
or
push
xchg
sub
in
aad
fisubrs
mov
mov
xor
adc
inc
cmpsl
lods
jmp
sbb
mov
out
imul
push
pop
lea
push
test
add
inc
xor
mov
sub
pop
das
mov
shll
adc
mov
iret
pop
cmp
push
js
mov
and
fwait
pop
pop
add
aaa
or
stos
mov
adc
push
mov
inc
aad
xor
dec
xor
add
test
mov
arpl
leave
divl
push
adcb
mov
jl
mov
imul
and
and
inc
push
pop
jae
divl
es
jo
inc
movsb
mov
pop
fwait
dec
jp
test
xor
push
pop
cmp
jnp
xchg
sub
add
out
mov
fmull
cmpsl
fucomp
imull
push
leave
mov
push
push
xchg
xor
dec
dec
xchg
add
sahf
btrl
inc
sub
lods
fldcw
je
shr
add
add
in
cs
or
mov
push
test
lods
inc
pop
test
push
adc
addb
mov
xlat
out
inc
pop
sbb
adc
mov
inc
mov
xor
xchg
sub
enter
neg
arpl
stos
add
aam
jbe
repz
pop
int
les
out
aad
iret
inc
sbb
dec
stos
adc
dec
test
stos
andb
enter
es
add
mov
and
movsl
push
jmp
je
mov
push
or
jo
pop
cmp
call
clc
ljmp
mov
in
xchg
jbe
sbb
mov
aad
pop
lods
sbb
cmc
cltd
repnz
mov
incl
xchg
sbb
bound
mov
lret
xlat
jmp
stos
ja
push
ljmp
push
dec
pop
aam
lea
or
xchg
push
je
sub
adc
jno
lds
add
outsl
xchg
jnp
jbe
insb
jg
xchg
shll
push
mov
in
fs
inc
imul
fidivrs
dec
push
fld
xor
mov
icebp
into
and
jg
test
mov
lea
mov
jl
hlt
test
xchg
jge
popf
pop
rorb
nop
hlt
ljmp
sub
test
pop
dec
jp
call
push
addr16
stc
jmp
pop
sbb
xchg
movsl
les
or
gs
inc
push
dec
rol
pop
cmp
xchg
int3
into
push
movsb
mov
shlb
mov
imull
int
mov
pop
insl
xor
and
fimull
incl
xor
sbb
push
mov
add
dec
cmp
xchg
cs
or
lods
inc
dec
cltd
ud0
cmc
sub
mov
mov
pop
mov
idivl
mov
je
sub
outsb
insl
xchg
addl
pop
mov
imul
insb
iret
testb
jne
cld
loop
jnp
sbb
mov
sub
shlb
ljmp
aaa
xor
stos
imul
clc
pop
mov
das
dec
mov
xchg
jb
mov
imul
mov
repnz
iret
clc
jae
pop
jbe
mov
mov
or
test
mov
xchg
push
mov
in
lcall
sahf
cmp
das
cmp
or
imul
fsubs
lock
mov
cmp
push
and
xchg
mov
stos
or
ret
lds
fiaddl
and
imulb
inc
aad
leave
adc
add
xlat
or
and
and
adc
fcompl
loope
jae
add
das
mov
lock
xor
pop
outsb
cmp
pop
outsl
xor
xchg
add
jae
inc
sbbl
xchg
popa
add
lret
stos
and
insl
mov
xchg
nop
scas
adc
lahf
push
mov
fsubrl
imul
and
das
shl
in
xchg
in
mov
add
pop
outsl
lods
sub
int
nop
xor
scas
jae
and
pop
mov
mov
in
push
mov
dec
sldt
es
bound
in
xchg
shll
test
cmp
add
sahf
pop
fdivrl
imul
mov
clc
mov
mov
cs
sarl
das
inc
and
push
into
pop
jae
lret
cmc
mov
lea
and
icebp
sub
ds
dec
clc
dec
xor
insl
mov
rorl
add
sbb
pusha
add
sbb
lods
sub
das
outsl
cmpsl
lods
push
mov
push
fmull
out
xor
popa
pop
and
dec
push
cwtl
add
lods
data16
pop
jge
xchg
popf
sub
push
adc
cmpsl
push
rorl
mov
sahf
xor
and
adc
inc
xorb
jle
cmp
int
out
jbe
mov
lret
movsl
cli
push
dec
addr16
sti
loope
fldenv
fisttps
dec
xchg
jge
sbb
flds
add
popf
cmp
pop
mov
ret
cli
stc
adc
mov
fnsave
xor
mov
scas
pop
ja
xchg
daa
fs
sub
leave
mov
mov
test
mov
and
mov
imul
pop
lret
popf
and
in
ja
push
clc
dec
test
add
jl
fucomp
aaa
mov
clc
pop
and
lods
dec
push
les
xorl
incb
mov
jp
cmp
sbb
mov
cwtl
fmuls
lcall
into
out
lcall
pop
outsl
insb
in
adc
sarb
push
fcomps
cmp
movsbl
sti
das
lahf
push
add
jnp
jp
in
out
adc
enter
sub
and
xchg
jmp
mov
lods
daa
sub
call
mov
and
add
loopne
in
push
pop
xor
femms
sub
out
loope
popa
addr16
pop
adc
ds
xor
daa
jmp
cmp
fcoms
and
lahf
push
mov
pop
inc
pop
mov
mov
or
push
pop
ja
lcall
xor
or
cld
jno
xlat
icebp
lahf
int
daa
sub
push
js
aam
sti
testl
fldl
shrl
xchg
nop
or
mov
sbb
jns
pop
adc
fwait
pop
sub
test
div
dec
cmc
stos
into
xchg
int
std
fiaddl
or
movsl
mov
xor
pop
adc
rcrl
xor
push
pop
or
mov
push
adc
cmp
sub
pop
daa
stc
and
ja
mov
lahf
pushf
stc
bound
movsl
and
jns
xchg
pop
cmp
es
mov
xlat
out
and
mov
not
test
cli
call
clc
add
and
push
cmc
insl
loope
pop
ficomps
stos
mov
repz
lods
and
divb
popa
int
ret
outsb
mov
jns
data16
add
dec
loope
sbb
mov
loope
sbb
test
cmp
int3
leave
cwtl
stos
lret
lahf
in
fs
lds
sti
adc
pop
push
out
aaa
cmc
shll
xor
push
and
push
xor
push
aas
push
cmc
push
lahf
jbe
xchg
fldcw
inc
out
sbb
jbe
pop
into
scas
sbb
inc
lods
inc
xorb
cmpsb
int
mov
cld
mov
add
jmp
push
test
andb
push
pop
adc
cmp
mov
rcr
dec
jnp
cmp
popw
lock
jne
jb
and
add
dec
cwtl
push
cmp
jns
inc
pop
jae
lret
and
das
mov
orl
lock
pusha
movsb
scas
lea
in
sbb
ljmp
xchg
xor
cmp
ljmp
inc
mov
mov
fidivrs
repnz
stos
ret
push
cs
clc
popf
lcall
jnp
pusha
xor
add
add
dec
cmp
add
or
sbb
jl
sbb
cltd
and
xor
stc
cmp
popf
sbb
jb
adc
aad
popl
xor
fs
fwait
cli
addl
sub
jecxz
call
xor
inc
repz
out
loop
pop
dec
xchg
repnz
pop
sub
cwtl
adcl
mov
add
adc
jecxz
cltd
outsl
mov
arpl
std
pause
mov
jbe
adc
xchg
sti
arpl
xor
mov
jp
dec
mov
sbb
lcall
stc
cmp
leave
add
mov
rcrl
lods
jp
mov
fstpl
mov
into
push
insl
stc
push
pop
inc
jo
pop
mov
fwait
lock
stos
lods
inc
lock
jns
xchg
lock
cltd
test
dec
jae
dec
nop
inc
arpl
lret
adc
ds
adc
jne
sub
mov
pushf
xchg
cmp
push
int3
std
lcall
insb
and
orl
je
jns
mov
test
in
mov
mov
ss
mov
inc
nop
das
in
xchg
stos
test
pop
fdivs
sbb
and
jno
call
jnp
dec
xor
rolb
xchg
cli
repz
or
movsb
and
daa
sbb
cli
add
adc
sbb
inc
jbe
sahf
inc
mov
pop
in
pusha
pop
movsb
mov
scas
std
je
fsubrl
inc
adc
in
data16
pop
icebp
test
decl
inc
stos
icebp
iret
sub
mov
shrl
popf
cli
mov
outsl
arpl
dec
cld
mov
and
rcll
enter
leave
push
adc
sahf
dec
dec
fiaddl
xlat
ljmp
pop
popa
and
aad
add
adc
incl
inc
fnstenv
repz
js
adc
and
mov
rcrl
mov
icebp
cwtl
repnz
adc
jns
inc
sub
add
clc
sti
inc
push
mov
push
mov
inc
or
mov
mov
jg
lds
jnp
sbb
jne
jo
divl
xor
inc
clc
clc
and
movsl
into
test
jo
fists
push
fcmovnb
lods
aam
nop
insl
push
mull
lret
in
mov
imul
inc
xchg
adc
jbe
pop
mov
sub
add
sti
pop
sub
xchg
daa
add
add
cmpsl
fsubl
push
out
jle
adc
sbb
jbe
mov
out
hlt
inc
filds
mov
sub
push
add
push
add
push
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
