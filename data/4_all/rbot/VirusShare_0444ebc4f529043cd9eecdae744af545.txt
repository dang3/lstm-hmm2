enter
or
pop
add
mov
leave
push
xorl
loope
cmp
stos
xchg
aaa
jle
xchg
pop
mov
fsubrl
push
aaa
cmp
sbb
mov
repz
mov
ja
roll
ret
jg
dec
dec
adcl
xchg
testl
sahf
subl
pop
or
fwait
nop
jb
ds
or
pushf
out
xchg
ror
xchg
pushf
adcb
cs
jno
pusha
out
clc
ficomps
adc
xchg
adc
adc
popa
push
mov
push
pop
or
push
sub
stos
dec
ud2
adc
pop
adc
imul
mov
stc
xchg
xchg
push
xlat
repz
push
call
jne
sahf
loopne
test
fcompl
int3
inc
js
faddl
push
xor
add
or
mov
lcall
cs
out
test
enter
push
dec
call
pusha
aas
mov
cmpsl
adc
mov
or
sbb
jmp
aad
inc
mov
jae
mov
sbb
ja
jp
push
hlt
push
sub
popl
and
pop
cli
lret
adc
jae
data16
icebp
xchg
ror
roll
flds
push
arpl
daa
sbb
push
cwtl
mov
cmpsb
and
hlt
push
into
insl
pop
aaa
rolb
addr16
pushf
fsubl
imul
push
xchg
addps
pop
jns
scas
dec
aad
sbb
sbb
clc
pop
gs
mov
or
push
sbb
push
jno
push
or
cmpsl
sub
xor
xlat
sub
pushl
rcl
sarb
incl
sbb
bound
movsl
cmp
add
pushf
cmpsb
or
pop
inc
loop
mov
lahf
out
jbe
popf
ss
imulb
jp
dec
push
dec
adc
adc
lret
adc
xchg
loope
push
shlb
test
cmp
sahf
cltd
neg
fs
adc
and
ja
jno
pusha
jb
addr16
test
lods
in
jae
lds
add
cwtl
jo
daa
daa
mov
ss
sub
jo
push
popa
or
sub
cli
xchg
sahf
or
xchg
push
loop
sbb
pop
push
push
or
mov
xlat
fwait
pop
mov
aad
adc
cmp
ljmp
aas
push
daa
dec
imul
push
push
jecxz
pop
mov
adc
dec
sti
and
pop
divl
mov
jne
fwait
dec
mov
pop
pop
sbbl
nop
sub
andl
xchg
push
mov
mov
insb
outsb
fcmovne
insl
pop
icebp
das
sub
es
xchg
es
in
mov
stos
mov
outsl
push
pop
push
dec
mov
fisttpl
sbb
aad
jl
outsl
jb
sbb
pop
xchg
add
sub
push
int
aas
mov
daa
mov
lock
pop
dec
jmp
xchg
idiv
stos
pushf
fidivs
mov
push
pop
loope
cmpsb
add
xlat
jbe
push
mov
or
or
or
out
sbb
cmpsl
inc
outsl
pusha
add
popa
jb
fdivp
sbb
cmp
mov
mov
shll
subb
inc
push
rcrb
inc
rolb
popa
ficoms
lret
insl
add
imul
fisttpl
adc
andb
sub
ljmp
push
testl
and
jmp
pushf
shrb
fmuls
test
addr16
cmc
sub
push
mov
call
pop
iret
jo
xchg
pushf
rol
pop
jp
inc
and
out
xchg
stc
push
jno
imul
mov
andb
shrb
fldln2
pop
push
push
fstps
mov
cmp
cmpsb
fcmovnbe
cltd
xor
sub
shl
je
xchg
push
fsubrs
jno
sub
pop
or
push
js
xchg
mov
push
push
mov
repz
or
adc
push
daa
sub
fdivp
inc
push
cmp
adc
push
cmp
aaa
jg
lea
adc
rcrl
clc
pop
mov
scas
ss
mov
add
add
sub
ljmp
lahf
in
repnz
mov
add
inc
into
dec
xor
pop
rcl
fstps
sbb
stc
xor
mov
out
out
cmp
arpl
jmp
and
in
jmp
mov
push
and
aad
add
pop
punpckhbw
orl
xchg
lods
xor
adc
nop
mov
enter
mov
push
call
jno
pop
adc
test
ja
into
shrl
adc
arpl
pop
sahf
in
sub
addb
neg
or
sub
fldenv
mov
or
add
and
das
out
stos
cmc
sbb
adc
sahf
cmp
movsl
xchg
lcall
and
adc
adc
adcb
scas
repz
and
add
pop
test
or
shll
xchg
test
jecxz
push
call
dec
imul
mov
ret
xchg
sbb
jnp
ret
enter
daa
add
adc
insl
xchg
popa
mov
or
repz
adc
xchg
data16
xor
mov
push
jae
mov
sub
paddusw
es
mov
hlt
nop
xor
rorl
rcrl
int
test
add
iret
test
add
xor
adc
cmp
sbb
sub
pop
aas
arpl
xor
js
je
dec
xchg
fcompl
gs
jl
push
dec
rolb
lcall
sub
mov
std
xchg
mov
mov
pop
jle
push
add
add
arpl
cmpsb
and
cltd
dec
and
jge
arpl
rcrb
movsl
ret
push
add
ret
sub
push
push
pop
cmp
je
cmp
jne
int3
sub
loop
pop
cmc
cld
cmc
push
push
push
push
lea
push
push
push
push
push
push
pop
cmp
je
cmp
jne
int3
push
clc
pop
jo
and
jge
or
push
cmp
pop
push
sar
pop
jae
add
stc
loop
pop
push
rol
pop
stc
and
test
push
pop
push
call
lret
mov
fninit
ror
ja
rorl
scas
mov
sub
sarl
jae
push
xorl
inc
mov
xor
pop
pop
lret
lcall
andb
mov
xor
imul
cmp
hlt
es
mov
les
lea
jp
je
push
add
pop
cmc
push
add
pop
push
movzbl
jb
push
jle
rol
pop
jb
push
add
jle
push
test
pop
jns
xor
xor
push
pop
lea
test
push
test
pop
push
shr
pop
cld
and
push
xor
pop
cld
push
cmp
pop
loop
pop
jnp
jae
xor
add
stc
push
or
pop
jmp
mov
insb
adc
scas
push
mov
jl
lret
loop
mov
adc
and
inc
jmp
jmp
call
push
push
pop
cmp
je
cmp
jne
int3
or
push
push
mov
pop
pop
add
push
jb
push
inc
pop
pop
cld
dec
inc
loop
pop
inc
dec
push
pop
cld
cmc
add
mov
push
push
pop
cmp
je
cmp
jne
int3
push
mov
pop
sub
jns
jp
test
push
add
pop
rol
jo
sub
jl
push
push
cmp
pop
pop
jl
jbe
ror
mov
test
jg
push
push
push
or
pop
pop
pop
cld
cld
loop
pop
push
ja
jno
ror
pop
test
stc
clc
add
push
call
or
xchg
cmpsl
inc
lds
or
ss
dec
mov
sbb
sub
pop
jb
mov
cwtl
inc
fistl
or
and
je
int3
sub
pop
jb
mov
adc
call
add
xchg
and
fwait
mov
gs
and
mov
mov
xchg
push
insl
test
neg
fbld
stc
cmp
bound
les
push
add
push
pop
pop
loop
jecxz
dec
inc
add
lods
mov
xor
pop
jae
nop
mov
dec
and
push
dec
out
or
cmp
mov
cmp
testb
add
test
cmc
lea
mov
push
push
sub
pop
pop
add
test
jne
jmp
push
movzbl
test
push
push
push
push
mov
pop
pop
pop
pop
js
push
jg
cmp
pop
jb
ja
or
jbe
push
js
rol
pop
or
and
jo
ror
jl
push
push
pop
pop
push
pop
je
jns
test
push
add
push
jne
jnp
ja
mov
pop
nop
stc
stc
nop
loop
pop
push
js
sub
pop
push
or
pop
push
push
add
pop
or
push
push
xor
pop
pop
add
push
jnp
jle
test
pop
xchg
cmp
cmc
nop
push
push
and
pop
pop
jge
push
sub
pop
jno
fnop
push
mov
push
xor
pop
pop
push
movzbl
push
jo
ja
add
pop
push
rol
pop
xor
push
rol
pop
ror
add
push
push
xchg
xchg
pop
pop
inc
dec
push
inc
pop
test
and
mov
push
cmp
pop
jns
js
add
push
jbe
or
pop
dec
inc
push
mov
pop
push
test
pop
and
push
push
push
push
pop
pop
pop
pop
push
push
rol
pop
pop
cld
loop
pop
cmc
push
push
xor
pop
pop
loop
jecxz
dec
outsb
pop
and
xor
xchg
xchg
push
push
push
mov
pop
pop
pop
stc
xor
not
not
push
xchg
pop
push
pop
xchg
pop
push
call
ss
clc
scas
xchg
mov
inc
out
jnp
push
xchg
insl
in
inc
nop
push
decb
dec
jecxz
iret
or
es
sti
sar
outsl
insb
push
es
pop
mov
pop
mov
lret
mov
aam
dec
in
pop
or
sub
push
popa
je
mov
and
pushf
in
pop
aad
jl
push
mov
aas
dec
jmp
jecxz
outsb
mov
jmp
inc
cmp
insb
rcr
jge
xchg
mov
outsl
add
mov
pop
adc
jnp
inc
xchg
mov
sub
pop
fdivrl
or
inc
inc
popa
sbb
jecxz
cmpsl
mov
inc
fcoml
iret
cmc
add
pop
push
push
pop
add
pop
clc
dec
jne
loop
jecxz
sbb
sti
cld
pop
ret
adc
repnz
jecxz
jmp
aaa
sbb
sub
fists
cmp
mov
cmp
dec
cld
push
gs
aam
jb
xor
mov
pop
jge
movsl
sarl
xchg
push
mov
push
xchg
sarl
pop
mov
loop
jp
push
mov
and
xor
pop
inc
loop
jecxz
roll
dec
and
cmpb
mov
sbb
outsl
mov
movzbl
jbe
push
push
rol
pop
pop
test
and
jbe
push
rol
pop
push
push
mov
pop
pop
loop
pop
loop
jecxz
int3
loope
and
pop
sbb
arpl
dec
adc
imul
lea
push
lock
clc
aad
sbb
bound
push
movzbl
nop
stc
loop
pop
loop
jecxz
repz
rolb
inc
dec
movsb
hlt
pop
xor
or
dec
push
clc
bndstx
sub
push
push
or
pop
pop
stc
push
call
mov
out
adc
mov
inc
mov
add
xchg
or
sti
jp
jo
stc
lret
inc
jge
pusha
int
sub
and
push
mov
mov
loop
mov
repz
push
outsb
sbb
dec
jne
jmp
or
jmp
push
je
mov
ret
int3
sub
jmp
fidivl
inc
sub
mov
xor
je
jmp
jo
cmp
fwait
sbb
mov
cltd
out
sub
call
sbb
clc
nop
int
adc
aad
ret
inc
leave
sub
frstor
push
mov
xor
cmpsb
aas
cmp
in
mov
jle
add
mov
jns
mov
add
inc
push
inc
aaa
sbb
push
mov
insl
or
rcrb
cmp
adc
sahf
jg
mov
mov
fistpl
fxch
pop
aad
out
repnz
shrb
xor
or
cmp
mov
mov
std
or
push
mov
mov
sbb
scas
fsubl
outsb
mov
je
bound
mov
jns
out
out
scas
push
mov
or
jnp
inc
dec
mov
xchg
add
sar
push
stc
loopne
test
cs
ret
cltd
xchg
or
shr
repnz
popa
adc
and
scas
lods
or
lods
ss
add
test
jecxz
add
adc
mov
cld
mov
stos
or
adc
cmpsl
jo
push
mov
popl
or
jl
popa
push
hlt
mov
jg
sub
in
adcl
in
js
pop
imul
adc
in
aas
test
inc
mov
pop
ss
and
jae
in
scas
shrb
inc
imul
mov
stos
js
xchg
pop
mulb
std
andl
repnz
mov
imull
leave
nop
popf
bts
dec
sub
and
inc
aas
mov
push
xchg
push
and
inc
mov
out
lock
jecxz
in
scas
daa
push
popa
aad
or
cmp
xchg
testb
popw
fidivs
xchg
or
mov
mov
pop
ret
pop
in
popf
inc
sbb
sbb
cmp
pop
fs
xchg
cmp
add
fmulp
iret
add
int
jmp
sub
cld
aas
aad
cmp
sub
lea
repnz
push
call
pop
pop
addl
std
inc
fnstcw
push
aam
rolb
movsb
push
xor
iret
mov
pop
push
lcall
fsub
dec
gs
aam
adc
xsavec
ret
test
rcl
mov
sbb
out
orl
imul
xor
mov
repz
ffree
fdivrp
push
mov
xor
cli
movsl
push
ja
jge
cmp
push
lcall
lock
les
outsb
inc
jnp
push
sub
mov
stos
inc
mov
sar
shlb
lret
mov
xchg
je
ljmp
sbb
rcrl
in
or
mov
xor
mov
fimull
andl
enter
es
lcall
int
xchg
sbb
cwtl
aad
je
ror
clc
sbb
les
mov
pusha
mov
out
test
stc
cs
jge
inc
int3
movsb
arpl
je
mov
inc
dec
jae
mov
jo
add
lock
fdivrp
sbb
fnsave
adc
fildll
loope
fmuls
add
out
mov
mov
scas
inc
sbb
mov
sub
popf
xor
and
btl
test
xor
mov
cmp
loopne
mov
loopne
ja
jo
sbb
push
aam
outsl
test
dec
adc
mov
adc
fnstenv
xchg
lods
mov
arpl
icebp
xchg
dec
fbstp
leave
mov
pop
rol
in
add
push
repnz
outsb
adc
xchg
mov
insb
or
jmp
jbe
mov
xor
sub
mov
sub
and
daa
dec
and
aam
xor
sbb
stos
xchg
test
out
in
sbb
out
sahf
sahf
in
out
mov
xchg
enter
and
cltd
and
cld
xchg
push
icebp
or
xor
xchg
into
adc
push
jl
fildl
mov
xor
pop
ja
or
pop
pushl
cltd
es
shld
stos
popf
scas
mov
xor
xor
mov
push
cwtl
jmp
ficompl
jmp
inc
ret
repz
ja
popf
cmp
adc
out
in
dec
cli
into
pop
xchg
mov
enter
sbb
ljmp
adc
push
cmp
ljmp
push
dec
or
add
add
sarb
in
out
inc
cmp
mov
push
xchg
sahf
clc
fisubrs
push
loope
add
mov
js
jae
inc
ljmp
stc
xorb
xchg
xchg
mov
andb
test
push
imul
mov
push
pop
cmp
jbe
add
insl
and
fisttpl
incb
push
repz
push
cmpsl
sbb
shll
fistl
mov
popa
or
adc
test
jmp
sbb
int
hlt
jl
push
cmp
xchg
jns
mov
jb
push
sbb
insl
loopne
jmp
xchg
or
or
xchg
inc
push
aas
pop
pop
js
adc
sbb
inc
out
mov
mov
mov
adc
sub
fisubl
subl
ss
fimuls
sahf
or
push
push
lcall
fistps
mov
mov
pop
adc
jo
data16
test
fadds
mov
pop
andb
ficoml
std
or
lret
outsb
int
or
add
mov
sbb
lds
push
and
xor
pop
test
xchg
pop
loopne
cmpsb
xor
jmp
in
cmpb
loopne
outsb
enter
xchg
push
adc
push
filds
stos
sbb
and
push
test
sbb
adcl
add
sbb
adc
push
inc
fs
testb
or
pusha
je
inc
add
gs
in
adc
or
push
pop
sbb
fcmovb
icebp
inc
jb
in
repnz
addr16
sbbb
aaa
andl
xchg
sbb
mov
cmp
mov
sbb
sub
fildl
inc
cmp
insl
imul
jmp
fiaddl
fstpt
or
in
xor
push
int
dec
jp
stos
cmpsl
sti
into
mov
in
mov
shr
lahf
xor
insl
fld
mov
mov
jbe
xchg
fldt
js
dec
xor
fisttps
out
cmp
xchg
sbb
mov
and
dec
popf
push
test
lret
popf
xlat
adc
adc
flds
pop
rolb
or
mov
scas
cmpsb
loope
std
pushf
orb
mov
or
notb
jnp
call
xchg
cmp
dec
push
jae
out
fs
xor
fldt
cmpl
dec
rcl
push
adc
add
int
mov
adc
sahf
mov
in
outsb
mov
jl
in
addb
dec
psrlq
fs
add
sub
test
add
dec
dec
scas
or
repz
sahf
pop
sbb
lds
mov
xor
lahf
xchg
dec
ret
repz
xchg
dec
adc
in
ret
and
fnstenv
sbb
adc
push
adc
ret
and
cmc
inc
das
xchg
mov
stos
ds
and
loope
pop
jecxz
and
and
cmp
lock
je
mov
dec
pop
ficompl
dec
push
jbe
or
mov
xchg
sbb
jb
fstl
scas
into
ret
je
test
leave
dec
inc
stos
clc
xchg
cmp
sbb
imulb
shrl
out
stos
in
in
dec
das
xlat
mov
fs
xchg
sti
or
test
fdivl
daa
lods
and
pop
js
pop
sub
frstor
subl
cmp
cs
xchg
js
lods
inc
ja
pop
and
and
cld
mov
in
into
mov
sbbb
les
je
mov
xchg
andl
scas
xchg
into
in
jmp
adc
fidivl
xchg
test
mov
shrl
fbld
outsl
cmp
jecxz
das
das
dec
js
aam
adc
std
xchg
int3
and
test
xor
mov
cmp
das
pop
out
adc
dec
xchg
fldt
shl
mov
out
pop
mov
daa
dec
ja
sub
shr
mov
jns
mov
aas
rcl
scas
xor
aaa
pop
or
mov
mov
mov
pop
repz
add
loope
jecxz
dec
popa
cmc
inc
enter
cmpb
xchg
insl
int3
push
ja
pop
daa
addr16
inc
pop
or
dec
test
addr16
ja
arpl
and
popa
mov
and
sbb
dec
mov
hlt
jp
or
lahf
push
arpl
scas
jne
ret
add
loop
gs
sbb
addr16
ds
cwtl
arpl
out
push
adc
mov
js
inc
and
sti
clc
push
pop
bound
and
adc
loopne
dec
sbb
stos
stc
arpl
inc
cmp
repz
int
xchg
mov
fimuls
mov
dec
test
add
mov
int
inc
xchg
push
cmp
aam
add
mov
jmp
jp
cmpsl
insb
mov
in
rcrl
add
pop
fisubrs
in
adc
fidivrs
dec
test
add
gs
mov
inc
dec
pop
insb
int3
adc
lret
add
loopne
and
dec
inc
mov
jae
mov
lret
imul
stc
jb
adc
loope
syscall
pop
mov
sbb
mov
mov
cld
add
dec
daa
aaa
push
jb
lcall
daa
jne
test
mov
mov
loope
mov
mov
sbb
jmp
cmc
aaa
jne
aaa
adc
push
or
lahf
xor
or
into
ret
loope
dec
sub
pop
jns
and
scas
push
loopne
cmp
jns
sub
dec
fdivrl
push
addr16
fisubrl
mov
xchg
mov
xchg
and
fs
xchg
shlb
mov
fwait
outsb
roll
in
fdivl
cmpsb
xor
jp,pn
inc
sub
cs
shl
xor
inc
fwait
call
ret
cmovl
mov
or
mov
mov
mov
dec
std
jno
add
and
loop
insb
or
jno
cmp
movl
ja
sbb
dec
pop
mov
bound
out
and
loop
and
fcmovnb
aaa
pop
dec
inc
sub
dec
xor
loope
mov
pop
clc
lret
mov
xor
stos
pop
aaa
ss
mov
inc
inc
inc
mov
clc
dec
and
movsb
ret
sub
jne
cmpsb
dec
out
dec
pop
push
cmc
shrl
lea
inc
test
mov
call
jecxz
leave
and
jg
popa
in
jb
sar
sub
mov
pop
jp
icebp
dec
xor
xchg
jg
cmp
jmp
inc
fwait
sub
mov
test
loope
xchg
add
push
mov
dec
xchg
ljmp
add
popf
andl
int3
outsl
dec
jg
sbb
cmp
xor
add
fidivs
mov
test
jmp
and
xchg
andl
lret
cmp
inc
mov
repnz
cs
cli
pop
popf
mov
popf
inc
clc
xor
int
jp
js
mov
xorl
xor
adc
addb
pop
fdivrs
cmp
sub
loopne
fistl
enter
out
inc
xorl
fcoml
add
mov
and
pop
cwtl
imul
push
cmp
mov
fidivl
cwtl
add
add
mov
es
adc
lahf
pop
or
push
cmp
jns
scas
mov
push
pop
int
lods
out
call
stc
push
sbb
mull
xchg
out
sub
jmp
jl
dec
push
jo
frstor
sbb
mov
pusha
or
or
xor
imul
std
lods
enter
cld
inc
adc
ja
sarl
cmp
imul
or
fisttps
adc
xchg
sub
sahf
and
outsl
jb
call
fnsave
jo
mov
inc
cmp
and
add
pop
out
dec
repz
pop
or
scas
dec
fsubrs
insb
shrb
sti
inc
fistps
es
sbb
sbb
sarb
pop
xor
xor
cwtl
push
js
scas
cmc
lahf
lds
push
jns
imul
lods
sub
cmp
sbb
push
repz
cmp
mov
fdivl
rclb
sbb
inc
repz
sbb
repz
scas
lcall
mov
or
in
std
xorb
je
mov
lods
mov
cmp
insb
addr16
enter
nop
sti
imul
and
push
js
inc
pop
dec
add
push
mov
cmp
push
or
fwait
pop
jns
mov
jno
or
insl
sbb
and
mov
and
mull
test
push
jno
add
mov
std
push
sbb
xchg
mov
sti
int
cmp
je
cmp
inc
jno
dec
push
outsl
rcrb
push
rcr
es
pop
dec
cmp
fists
jmp
movsl
inc
mov
pushf
repnz
adc
or
sub
jmp
aam
dec
jmp
testb
and
cltd
mov
mov
push
repnz
sub
xor
pop
cmp
pop
xchg
add
clc
bound
ds
cwtl
andl
xchg
test
add
jne
adc
jbe
jb
inc
xchg
jbe
testb
fmull
mov
fcomps
icebp
adc
or
inc
or
mov
icebp
dec
scas
aad
stos
mov
mov
fstpl
xchg
push
pop
push
xor
push
pop
sub
pop
jl
out
lock
loop
sbb
cmpl
pushf
mov
fildl
test
popf
ficoms
das
mov
negl
adc
xlat
mov
mov
mov
sbb
push
adc
enter
cmp
xor
jge
xchg
mov
rcrl
movsl
mov
in
pop
and
mov
jecxz
adc
cmp
mov
lret
add
mov
inc
adc
xchg
xchg
ja
rcl
cmp
cwtl
sub
pop
int3
mov
pop
and
aad
pop
xchg
mov
mov
mov
xor
lock
roll
out
mov
adc
mov
mov
aas
cwtl
pop
aad
in
ljmp
in
mov
leave
sbb
xor
flds
mov
xlat
pop
push
sub
aam
sub
and
inc
or
xor
mov
rorb
jno
fdivrs
inc
mov
repnz
push
sbb
dec
insb
push
aas
int3
aas
mov
inc
shll
mov
dec
sub
push
mov
mov
ljmp
mov
das
sub
movsl
scas
adc
fimuls
inc
cli
xchg
push
mov
repnz
mov
sbb
add
imulb
add
and
lods
ljmp
repnz
push
popw
mov
mov
sbbb
dec
adc
inc
cmp
adc
cmc
std
jecxz
mov
jle
push
jae
xchg
mov
push
test
jp
add
inc
sahf
sub
add
aas
addr16
out
lods
gs
fxch
jl
jp
push
xor
push
cmp
cs
fsubrs
sub
lret
mov
cmp
sub
popf
inc
mov
xor
and
loopne
hlt
and
xor
cltd
les
outsb
inc
push
adc
sbb
sahf
sbb
or
out
lods
faddl
add
adc
dec
or
notb
aad
rolb
xchg
jmp
pusha
aaa
sub
mulb
add
or
fcmovbe
sub
mov
dec
fisubrs
movsb
pop
mov
dec
xlat
pop
adc
icebp
scas
shll
push
test
add
sbb
dec
inc
outsb
into
xor
lret
inc
fsubp
xchg
cmp
cmp
lods
rorb
mov
xchg
mov
shrb
sbb
or
data16
mov
into
cmp
hlt
pop
adc
add
das
test
adc
add
outsl
xlat
mov
push
xchg
sbb
sub
adc
mov
loope
lret
jmp
fs
cwtl
sub
adc
insb
inc
sbb
jmp
adc
adc
mov
cmp
sub
mov
outsl
xchg
mov
jge
jbe
insb
and
lcall
jl
mov
push
addr16
jecxz
sub
inc
lds
into
dec
push
icebp
int3
loope
adc
sub
mov
mov
push
mov
test
les
jne
arpl
push
insl
clc
xor
xor
lea
sbb
and
loope
or
in
dec
inc
into
mov
mov
push
arpl
jle
fadd
pop
pop
js
repnz
mov
das
pop
dec
cmpb
les
es
dec
cmp
push
push
in
xor
push
jbe
inc
popa
pop
sbb
mov
pop
cmp
loope
mov
sub
repnz
imul
shrl
cmp
jbe
rcl
pop
jnp
cmp
negl
sub
daa
das
ret
mov
xor
jecxz
sahf
lock
xchg
inc
mov
fsubl
xchg
push
jmp
das
stc
cwtl
sub
pop
fwait
xor
add
sbb
pop
lret
nop
xor
inc
das
sbbl
mov
push
fistpl
push
xor
test
outsl
negl
addr16
lock
nop
mov
dec
add
push
jp
inc
gs
adc
shrl
imul
pop
mov
xchg
mov
popa
mov
cli
xor
js
xor
sbb
jge
cli
xchg
adc
pop
push
lcall
xchg
and
cltd
cmp
test
push
imul
inc
mov
mov
loopne
xchg
stos
ret
rcl
pop
aam
in
das
mov
insl
lock
jnp
sub
mov
pop
dec
sub
cwtl
and
lahf
mov
and
mov
lahf
push
pop
repnz
mov
inc
dec
outsl
lret
fistl
rcr
mov
and
mov
mov
fsub
clc
neg
lret
lret
and
icebp
and
mov
loopne
das
iret
cmp
test
sub
jcxz
lret
std
imul
cmp
mov
add
dec
inc
jle
or
and
mov
cltd
cwtl
int
mov
in
and
sbb
mov
jg
test
les
es
or
fucomip
dec
cmp
aam
fdivr
pushf
shll
mov
mov
clc
adc
aad
dec
je
and
cmp
push
cmp
sbb
xchg
loopne
jnp
stos
adc
aaa
leave
add
push
cs
fnstenv
pop
cli
int3
or
push
daa
sbb
dec
iret
rorb
mov
fiaddl
movsb
fucomp
movsb
test
or
arpl
cmpsl
cs
xchg
inc
dec
and
daa
cwtl
mov
imul
sbb
pop
dec
pop
adc
jns
fmuls
dec
jnp
mov
jmp
sbb
dec
mov
in
lret
mov
ret
fbld
inc
dec
ret
ror
add
mov
jnp
adc
ret
hlt
fimull
or
insb
cmp
cmp
push
mov
push
loop
fistl
mov
shll
aam
fldcw
jmp
decl
mov
add
ret
push
shlb
push
pop
and
imul
pop
or
or
jge
notb
mulb
sarb
mov
inc
adc
shrl
into
mov
shll
or
sahf
dec
pop
and
ret
and
mov
sbb
pop
mov
sahf
adc
adc
lods
sub
dec
dec
dec
sub
negl
adc
dec
adc
cmp
mov
in
sbb
fistl
in
loope
test
in
lret
cmp
repnz
sbb
inc
jmp
insl
inc
mov
pop
jmp
and
sub
loopne
lret
data16
inc
cmpsb
gs
enter
mov
adc
jb
lds
fimull
hlt
cli
jae
inc
jbe
xorb
shll
repz
cmp
pop
cmp
jne
loop
cmp
lock
sub
push
testl
pusha
sbb
iret
jae
jmp
mov
xor
cmpsb
sbb
xchg
adc
cmc
int
test
mov
xor
jl
jle
jo
test
fsubs
cmp
cli
push
adc
out
pop
lahf
shll
fs
imul
mov
push
cmpsl
push
and
clc
pop
in
aad
popa
nop
mov
rcll
ds
cs
imul
fs
xor
mov
call
mov
out
xchg
ljmp
bound
lahf
mov
fwait
jmp
fistps
xchg
iret
mov
adc
aas
sbb
rcl
pop
xor
mov
cld
dec
or
sub
xor
mov
mov
xchg
dec
or
mov
jge
cmp
xlat
sbb
pop
bound
sub
add
setp
jl
xor
or
mov
out
lcall
adc
scas
mov
sbb
ds
jp
aam
push
fwait
aam
inc
sub
lret
sub
stos
dec
xor
mov
fsubs
xchg
popa
xor
les
mov
andb
mov
cmp
add
arpl
icebp
jae
cs
xor
fbld
mov
loop
xchg
out
push
shrb
daa
cmp
jno
fadds
mov
sbb
and
xor
or
jp
popa
ret
popa
out
adc
mov
push
arpl
push
cmp
stos
or
gs
mov
addb
dec
das
or
movsb
lahf
fisubrs
push
sar
sub
insb
fimull
imul
cltd
out
push
xchg
or
flds
hlt
cwtl
out
xlat
jp
mov
push
xchg
fmuls
imul
mov
repnz
sbb
mov
xor
pop
dec
mov
scas
jns
imul
push
dec
fisubrs
push
in
mov
inc
mov
fwait
add
iret
ds
push
mov
fsubl
xchg
mov
jecxz
into
xor
xor
ds
fdivr
cmpsl
data16
push
and
sarb
inc
add
xchg
jb,pn
pop
psubq
and
enter
push
test
mov
out
adc
mov
outsb
adc
pop
xor
push
andb
int
mov
int
pop
adc
cmp
push
pushl
clc
dec
xor
pop
incl
rorl
sub
fistpl
movsb
mov
cmc
xchg
lods
cmpsb
push
imul
cltd
loopne
rorb
out
jae
cmp
dec
mov
mov
lea
arpl
leave
mov
mov
pop
fisubl
clc
pop
test
fcompl
lahf
nop
xchg
cmp
mov
adc
pusha
cmc
enter
or
xchg
movsb
faddl
ss
jnp
push
ret
adc
xor
rcrl
mov
mov
inc
push
dec
jae
inc
mov
loop
ficomps
sbb
int3
es
jge
sahf
add
lods
leave
push
or
mov
in
mov
pop
aad
jne
push
xor
push
test
mov
add
jmp
inc
mov
push
cmc
daa
out
sub
xchg
mov
mov
lds
or
xchg
add
inc
and
cmp
mov
stos
icebp
sub
rorl
inc
sti
xchg
stc
in
jge
add
mov
or
cmp
lods
mov
repnz
in
jne
in
xchg
mov
xchg
scas
stos
mov
push
jb
push
nop
out
pop
mov
mov
in
cmpsb
push
ja
cmc
jnp
add
les
pop
out
cmp
ss
cwtl
push
xchg
pop
in
cwtl
lcall
adc
cmc
outsb
rorb
movsb
iret
pop
sbb
dec
inc
adc
mov
jge
in
dec
mov
dec
sbb
inc
mov
stos
pop
xchg
cld
in
xchg
jle
lods
inc
adc
push
xor
into
cwtl
int
dec
or
repz
mov
imul
les
ljmp
cwtl
insl
push
mov
mov
adc
push
in
mov
lods
dec
daa
cmp
xorb
adc
mov
out
jno
jo
imul
shrb
enter
lods
sub
test
push
push
pop
pop
outsb
fimull
icebp
imul
pop
mov
and
push
cld
loop
add
mov
mov
addb
out
enter
mov
cmp
xchg
stos
icebp
shll
fsubrl
fnstenv
mov
add
inc
lret
vandpd
testl
cmp
lcall
rcll
mov
fdivs
inc
pop
movsb
dec
sbb
daa
push
test
cmpsl
shrb
push
cli
cmpsb
add
jle
test
adc
inc
sbb
lcall
xor
sub
fsubrl
movsl
xchg
pop
jp
and
push
popf
out
les
xor
in
iret
cmp
imul
or
into
or
stc
cs
dec
outsl
push
sub
cmp
inc
push
sub
mov
xlat
into
jmp
inc
lods
adc
rclb
andb
testl
stos
and
mov
inc
popf
scas
in
inc
cmp
sub
jle
jecxz
andl
adcb
aad
rcrl
pusha
out
cmp
in
pushf
dec
lock
faddp
rorl
mov
loop
mov
cmp
xchg
loop
popf
addr16
daa
ja
cmp
xchg
dec
clc
mov
xor
mov
or
cmp
jne
adc
nop
or
sub
inc
push
mov
lcall
sub
enter
ja
pop
jmp
cmp
mov
shl
fdivs
cmp
mov
jp
jle
cmp
mov
cli
mov
int3
lea
stos
mov
inc
mov
dec
stos
fsubrs
xor
xchg
pop
leave
imul
dec
aas
xchg
or
pop
popa
sbb
pop
repnz
cli
jno
and
dec
and
sbb
fisubrl
rol
jg
sbb
sbb
or
orl
pushf
jae
pop
cmp
andl
and
mov
into
push
mov
insb
sub
or
enter
outsl
cmp
fmuls
push
roll
add
hlt
sbb
xchg
adc
mov
xor
pop
aad
les
sub
rol
cwtl
fbstp
lock
les
outsb
jg
ret
sbb
sbb
or
stos
fs
mov
into
add
push
sub
mov
inc
repz
add
cmp
lcall
add
adc
rcll
jmp
call
push
push
jne
xchg
stos
jmp
cmp
adc
arpl
jbe
mov
sub
jge
push
xchg
bound
xchg
stos
js
mov
testl
fldl
insl
xchg
dec
mov
dec
leave
cmpb
rcrb
pop
mov
popa
roll
sbb
es
xor
pop
xchg
ljmp
enter
xchg
pop
mov
lcall
jge
rclb
frstor
mov
out
iret
pop
add
mov
stos
aam
adc
daa
pushf
shrl
add
sub
and
jno
mov
stos
stos
cs
fimull
test
adc
adc
jge
sub
adc
fwait
and
pusha
jge
idivl
mov
xor
mov
popa
sub
mov
sbb
rorb
mov
sub
cmc
xor
test
fidivl
repnz
iret
mov
xor
pop
pop
cmc
xor
lahf
aad
cmpb
inc
sbb
inc
and
test
pop
mov
xchg
sub
jge
hlt
xlat
or
fs
aaa
pushf
enter
and
jecxz
cmp
ljmp
pushw
outsb
sbb
push
pop
fdiv
mov
fstpt
push
leave
stos
adc
add
sbb
in
pop
mov
xchg
pop
sbb
mov
pop
rcll
movb
jae
pop
push
mov
fbld
ja
hlt
xchg
out
xchg
stos
mov
mov
and
aam
adc
pop
pop
lock
insl
mov
mov
pop
test
cli
scas
enter
mov
pushf
jle
stos
and
fwait
loopne
imul
xor
movsb
mov
movsl
cmp
jmp
add
aas
cli
pop
push
push
pop
push
ljmp
push
add
jp
inc
insb
pusha
mov
adcb
or
outsb
mov
mov
in
xchg
fnstcw
or
sbb
arpl
rorb
rcl
fisubs
rcll
insl
std
test
les
jnp
mov
xchg
rcl
mov
sti
mov
xor
cmc
inc
and
xor
aam
and
out
nop
pushl
push
inc
mov
and
out
out
aaa
pop
daa
pop
lods
mov
or
inc
aam
inc
inc
mov
pushf
pop
insb
hlt
inc
jb
fs
out
in
adc
vpshufhw
int
dec
sahf
add
xchg
xchg
adc
cmp
pop
jp
ret
loop
jne
sub
add
leave
shrl
or
je
fst
popa
sub
loop
dec
mov
sub
or
sbb
add
lods
into
les
out
ljmp
idiv
sbb
adc
cmc
bound
cmc
outsl
mov
inc
cmp
notb
push
and
mov
ss
into
adc
gs
mov
adcb
je
xchg
pop
mov
jp
scas
stos
pop
sub
ds
pop
jp
sarb
and
inc
popa
lahf
ds
cmp
pop
cmpsb
inc
adc
addb
push
jbe
inc
add
pop
sbbb
or
mov
mov
ficoms
and
dec
popf
mov
hlt
mov
jb
xor
data16
mov
ljmp
jecxz,pn
rcr
sbb
mov
pop
xchg
sbb
in
shl
test
aam
in
jle
test
rorl
lds
sbb
push
mov
hlt
jns
popf
and
arpl
mov
sti
mov
adc
dec
stos
out
push
and
orps
jno
mov
sbb
scas
lods
sbb
je
mov
lahf
sub
mov
mov
stos
mov
pop
in
xchg
jmp
or
dec
test
mov
das
or
pop
pop
rep
aas
sbb
mov
sub
inc
jnp
mov
loopne
xor
sbb
int
push
xchg
jno
lods
lock
mov
mov
lcall
jae
xor
pop
fcomp
sub
pop
jno
cmp
xchg
les
push
ret
add
imul
mov
dec
and
lret
mov
lret
ret
test
test
rol
cmp
mov
inc
movsl
fsubs
sarb
jg
xorb
pop
xor
icebp
push
pop
and
jl
test
stos
dec
pop
push
add
add
push
dec
jmp
jns
frstor
jge
jno
push
fwait
idivb
mov
sbb
mov
inc
cmp
ret
xor
sbb
movsb
dec
rclb
push
adc
push
subb
mov
ret
imul
pop
andl
fdivrp
movsb
arpl
sub
pop
fdiv
push
dec
int3
pop
inc
loop
cli
leave
mov
xchg
push
adc
xchg
leave
add
nop
cmpsl
xor
rcr
jl
mov
xchg
mull
jle
xchg
ret
je
adc
cmp
into
iret
repz
sub
mov
mov
xchg
je
call
loop
xchg
mov
or
inc
xchg
push
int
xor
cmpl
out
fs
mov
das
das
enter
jb
mov
add
cld
inc
or
or
leave
aas
daa
mov
mov
loopne
cmp
dec
rcr
pop
pusha
fwait
pop
addr16
rcrl
lcall
push
jno
jg
xor
xor
push
xorl
jno
mov
jecxz
insb
xchg
cmp
xchg
adc
mov
push
dec
push
daa
adc
add
fisttps
push
out
cmp
loope
test
adc
out
and
insb
imul
repnz
js
rolb
xlat
inc
imull
cmp
push
rcrb
jae
mov
xor
pop
mov
mov
sbb
sbb
sti
jmp
out
xchg
and
inc
xor
mov
into
out
push
xchg
mov
sub
pop
clc
push
push
in
idivb
std
sbb
jl
xchg
xlat
cld
aad
xlat
mov
add
pop
mov
outsb
and
stos
in
push
push
jo
adc
scas
add
mull
and
push
and
pop
cmp
mov
fistpl
js
neg
jb
mov
shl
lods
cmp
cmc
xchg
dec
cmp
jl
jge
pop
cmp
pop
xor
sbb
loopne
lods
sbb
mov
dec
add
cmc
daa
pop
js
jge
add
xor
fistl
sbb
pop
jg
add
lds
pop
fstpl
xchg
lcall
lods
mov
clc
sahf
cmp
sbb
mov
mov
jg
idivl
dec
mov
add
out
loop
icebp
and
adc
jbe
sahf
imulb
es
movsb
and
addr16
test
or
sbb
dec
outsl
cmp
ljmp
repnz
or
out
pop
mov
lock
repz
mov
dec
lods
fsubp
or
fwait
push
mov
mov
inc
dec
cmp
loopne
imul
out
out
xor
dec
outsb
jb
jne
inc
push
jns
subl
push
xor
pop
daa
inc
mov
rorl
jmp
testb
mov
jecxz
in
jle
add
pushf
pop
xchg
idivl
incl
xchg
and
loop
aad
xor
pop
leave
lret
inc
negb
jno
mov
inc
ret
lahf
pop
inc
inc
pop
sub
sub
sub
xor
xor
lods
inc
add
ret
setl
ret
mov
dec
lahf
adc
sarb
or
cs
negb
or
out
or
sbb
mov
out
cmp
mov
xchg
lods
mov
cmp
lret
xchg
pop
dec
mov
lcall
mov
das
and
sahf
xchg
clc
cmp
push
inc
xchg
xor
test
mov
test
movsl
dec
pop
rorl
adc
in
fsubrl
mov
jbe
cmpsb
xor
mov
adc
mov
dec
lret
scas
or
js
mov
pop
sub
cmpsl
dec
or
cmp
js
mov
cmp
or
pop
jl
and
fiadds
xor
test
repz
sbb
lcall
stos
push
push
rorl
mov
popf
out
aaa
inc
pop
xchg
add
xlat
test
dec
pop
sbb
add
pop
xor
add
mov
adcl
outsb
xor
loop
jb
aas
loop
inc
cmpsl
pop
pop
or
xlat
inc
mov
cmpsl
cld
lds
mov
stos
mov
repnz
js
mov
stc
addl
push
add
mov
dec
jg
repnz
out
jmp
dec
xchg
out
scas
jecxz
or
subb
call
andl
test
fisttps
lret
ja
dec
mov
dec
hlt
jne
jnp
xchg
pop
jno
push
mov
jne
adc
sbb
ds
adc
jge
mov
mov
mov
mov
adc
dec
mov
cmp
jle
sarl
jb
jne
xor
push
mov
sbb
mov
shll
ss
mov
into
xor
jl
xchg
sub
sahf
stos
fcoms
imul
or
int
gs
push
mov
sti
notl
loope
insb
xchg
ljmp
jbe
stos
push
xchg
dec
and
ret
movsb
dec
iret
dec
pop
arpl
lcall
or
pop
daa
push
ja
push
std
addb
repz
adc
adc
pop
inc
sbb
in
mov
pop
cld
jo
sbb
xor
mov
push
js
xchg
or
pushf
scas
add
movsl
inc
test
cmp
stos
or
inc
mov
and
xchg
jp
push
rol
sar
adc
shl
cwtl
inc
mov
sbb
and
nop
outsb
push
sub
sbb
test
push
push
cld
pop
and
dec
or
adc
iret
lahf
jge
test
in
cwtl
or
pusha
cs
mov
xor
sbb
add
xchg
cli
jmp
inc
or
inc
divb
xor
dec
mov
pushf
fdivrs
lods
sub
adc
es
pop
mov
push
pop
int3
int3
je
mov
inc
bound
lret
imul
nop
loope
xor
adc
dec
xchg
lock
push
jle
ret
push
cli
sarb
push
lock
mov
pop
hlt
sub
xor
iret
dec
sbb
sub
clc
lret
pop
insb
dec
dec
nop
stos
arpl
push
mov
mov
lahf
jbe
dec
jno
pop
icebp
sub
pop
aaa
aaa
push
ret
repz
xchg
xlat
js
or
js
xor
lcall
cmp
mov
iret
pop
xchg
mov
lea
fcompl
hlt
or
inc
or
fadds
int
rolb
lock
out
dec
xchg
adc
jo
loopne
jno
es
dec
inc
and
clc
sub
cli
je
mov
jl
xchg
dec
cs
push
in
movsl
adcb
sbb
je
fcoml
mov
add
shll
mov
pop
das
or
sub
fisubs
sub
mov
mov
mov
cmp
daa
in
adc
jno
xchg
jl
lods
in
iret
push
cmpsb
xchg
xor
loop
mov
dec
cmp
add
push
dec
test
scas
ret
gs
jne
emms
jmp
ret
push
push
jp
or
hlt
push
scas
inc
inc
out
out
jo
test
and
jmp
add
lret
cli
out
adc
cmp
xchg
shrb
xlat
adc
pop
addb
es
outsl
in
lods
inc
repnz
loopne
cwtl
pop
stos
xor
je
and
sub
pusha
add
repz
fs
in
dec
scas
add
lahf
push
xlat
bound
fisttpll
push
frstor
mov
fldenv
ror
mov
sti
imul
jb
adc
dec
lret
xchg
test
push
aas
jge
iret
xor
outsl
mov
cmp
cmp
imul
fcomi
pushf
addr16
inc
les
add
mov
sbbl
push
mov
and
loopne
xchg
lahf
es
ja
or
js
add
out
sub
sbb
shl
sub
cmpsb
lret
sbb
push
pusha
enter
cmpsl
jmp
pop
shlb
sbb
pop
lds
arpl
xchg
inc
js
fs
cwtl
sbb
jg
outsl
es
fwait
xlat
cli
push
sub
rcll
jbe
inc
mov
mov
or
repz
dec
lea
jl
dec
mov
or
cmp
inc
pushf
xor
fnstsw
cmpsb
and
inc
in
lods
das
mov
mov
inc
mov
fs
xchg
xchg
aaa
fisttps
inc
rorb
xor
out
mov
dec
xchg
ljmp
iret
xchg
fildl
xlat
mov
int
xchg
lds
cmp
movsl
leave
rcll
mov
jb
pop
xchg
lods
jp
mov
cmpsl
pop
addl
pop
sbb
push
rol
xor
jecxz
ret
cltd
ret
ds
shrb
leave
xchg
mov
add
out
pop
or
fs
shl
pop
push
cmpsb
pop
les
icebp
out
cs
pushf
jge
or
mov
data16
xchg
das
fsubrl
xor
adc
push
shrl
mov
xor
cmp
shl
out
xor
repnz
ss
insb
in
dec
cmc
or
inc
push
mov
pop
imul
mov
mov
cli
ficomps
push
ds
fiadds
xchg
adc
cmp
and
fildl
push
cmp
xlat
or
sbb
jb
lahf
mov
je
fcomip
dec
cli
and
ficomps
sti
outsl
mov
dec
mov
popa
aaa
outsb
inc
mov
pop
clc
stos
pushf
jecxz
shl
cmp
mov
outsl
arpl
sub
cmpsl
adc
dec
adc
and
cmp
sbb
int
out
testl
insl
pop
or
dec
cld
into
pop
sbb
orl
adc
xlat
jne
jo
or
lods
mov
lock
es
scas
jae
shrb
jns
addr16
cmpsl
sub
jmp
adc
sbb
sahf
mov
aam
or
enter
sti
jnp
dec
or
cmpb
inc
or
cmp
and
jae
fadds
std
outsl
adc
dec
aaa
subl
cmc
enter
jle
xchg
dec
fcomps
scas
dec
or
sub
mov
sub
inc
shr
push
popf
mulb
dec
push
int
sahf
mov
jmp
push
je
imul
and
sub
xor
jb
sarb
sub
repz
add
xor
pop
in
mov
sbb
cmp
loopne
scas
insl
call
fldcw
jnp
or
sti
sub
adc
fiaddl
push
add
fnsetpm(287
pop
push
cmpsl
movsb
pop
loope
nop
adc
es
and
stos
ret
popa
fsubp
or
in
fnstsw
push
dec
insb
cmpsl
mov
dec
jle
xchg
or
insb
es
shrb
lods
pusha
sub
jle
mov
aad
xchg
mov
pop
adc
jno
xlat
cmp
aaa
in
add
inc
push
xchg
in
outsb
push
xchg
cli
stos
cmc
mov
loopne
std
rolb
out
mov
pop
popf
shlb
lea
jno
dec
and
ret
stos
mov
xchg
into
into
iret
in
fsubrs
scas
jb
cmp
mov
lret
in
xchg
rolb
lds
jp
or
add
daa
sub
and
js
mov
dec
sar
test
xchg
inc
shll
or
sub
loopne
jno
je
push
enter
xlat
jb
jg
imul
gs
xor
dec
and
cmc
push
loopne
xlat
mov
sarb
or
sub
movsb
push
lea
sub
stos
sbb
cmpsb
movsl
movsl
aas
cmp
lcall
xor
jo
xchg
cmc
imul
testl
test
lcall
into
inc
sbb
xchg
ja
jnp
inc
or
ret
xor
cmpsl
je
stc
in
dec
lods
std
popf
and
loope
mov
outsb
dec
push
or
fucomp
add
push
into
js
jle
push
and
xchg
xchg
cmpsb
jbe
mov
push
cld
mov
imul
sub
stos
cmp
cmpsl
fs
bound
sub
fistps
out
in
shll
or
mov
jl
je
adc
rclb
jmp
dec
fcomip
ss
jp
pusha
pop
jp
mov
cmp
sbb
test
dec
lock
dec
popa
mov
inc
and
jb
push
aas
push
xrelease
into
arpl
sub
enter
mov
mov
jne
loopne
xchg
fldenv
adc
das
lcall
cmpsl
pop
addr16
mov
fcompl
adc
add
lcall
sub
pushf
adcl
mov
and
jle
mov
roll
jns
cmp
jno
cmpb
shrb
xchg
xchg
fldl
into
add
and
cmp
mov
in
cmpsl
addr16
xchg
mov
iret
aad
or
test
or
pop
mov
lods
loope
stc
subb
sub
inc
cmp
ret
gs
hlt
pop
insl
push
xor
or
lea
lods
das
fdiv
jns
jl
outsl
push
loope
sub
xchg
mov
pushf
sti
loop
aas
enter
stc
mov
outsb
jns
nop
movsl
aas
pop
into
add
xchg
in
out
shrl
mov
hlt
mov
pop
in
mov
cmp
sub
insl
cmc
inc
xchg
imul
in
add
div
dec
fldl
pop
cs
pop
iret
push
cmp
xchg
pop
andl
popf
into
adc
out
jp
sbbl
jmp
cmpsb
scas
jge
mov
lock
call
add
xlat
pop
add
pop
out
inc
cmp
jo
ljmp
mov
cmp
push
cmp
test
rcrl
cmpsb
cmp
push
cmp
cmpsb
int3
jle
xchg
das
mov
push
data16
mov
les
and
sub
sub
mov
inc
adc
inc
mov
fcompl
pop
mov
inc
jge
cld
inc
stc
mov
add
cmpsl
aam
test
movl
mov
fwait
and
ss
cmp
sbb
xor
pop
or
push
sub
push
sub
push
push
ds
arpl
adc
jle
jno
add
push
cmpsb
or
popa
xor
pop
add
and
mov
fcompl
pop
lret
mov
mov
gs
ja
jae
test
fnstenv
shll
call
addr16
lds
mov
outsb
xchg
inc
fnstenv
data16
jge
jmp
sbb
je
in
push
aas
cmp
addr16
push
mov
xchg
or
cmp
stos
mov
clc
sbb
dec
lods
pop
in
rorb
xor
jecxz
adc
mov
cmp
in
enter
mov
xchg
rcrl
lods
cmpsb
data16
mov
ret
mov
add
adc
mov
add
dec
or
dec
push
testl
mov
movsb
xor
loop
idivl
xchg
and
mov
mov
addr16
pop
insl
xchg
dec
in
add
std
out
insb
in
popf
test
pop
push
xchg
aas
adc
stos
pop
xchg
js
cmp
mov
out
mov
icebp
sub
call
jne
push
in
popa
xchg
dec
mov
in
mov
add
sub
jle
aam
daa
sub
addb
fsubr
pop
xchg
mov
cli
cld
or
inc
inc
bound
lods
mov
xchg
or
inc
sbb
sub
add
cli
data16
push
repz
adc
xchg
pusha
gs
mov
insb
insl
daa
sub
dec
iret
popf
ja
push
push
xchg
jnp
cmp
pop
adc
push
cmpsl
cli
mov
mov
loope
sbb
jbe
sti
insb
inc
mov
or
mov
call
xor
pop
daa
divl
lods
push
inc
and
repnz
mov
sub
jnp
insb
loop
sbb
inc
and
pushf
inc
out
out
and
inc
jecxz
dec
push
outsb
rcr
and
mov
xchg
les
roll
fistps
mov
or
mov
cmp
mov
adc
jne
scas
mov
or
daa
call
xchg
xor
pop
jge
xor
mov
fisubrl
pop
mov
lcall
push
mov
push
mov
xchg
daa
js
mov
push
add
cmp
mov
or
mov
fbstp
adc
mov
ret
imul
and
mov
fucomp
mov
or
sbb
xor
loop
outsl
mov
push
lods
lock
xor
jecxz
ret
push
add
cmp
mov
push
xchg
mov
out
stos
pushf
test
jle,pn
inc
lea
test
mov
add
xchg
rcrl
jmp
inc
jg
mov
in
scas
xchg
push
out
lods
mov
xchg
cmc
mov
adc
push
fstpl
test
ret
pop
data16
hlt
mov
jb
mov
or
int3
addr16
jae
mov
mov
jo
or
jmp
cli
lods
dec
cmpb
aaa
sub
sbb
dec
add
iret
mov
lods
out
dec
lods
lahf
insl
xchg
js
xchg
outsl
rorb
mov
stos
nop
dec
jno
xchg
icebp
pop
test
iret
test
fnstcw
push
imul
adc
clc
mov
or
lea
pop
fldenv
les
xor
std
gs
ret
jmp
fistps
xchg
cmpl
xchg
out
sarb
sbb
or
jns
cs
pop
jecxz
out
out
fst
jle
stos
mov
mov
adc
push
fbld
repz
sub
scas
nop
scas
lahf
loop
in
dec
or
out
jb
lret
clc
test
sub
push
aas
xor
data16
xor
sub
jp
fidivl
add
mov
outsb
test
mov
and
aaa
es
jae
je
clc
sarb
push
shr
dec
xchg
cwtl
dec
shll
aas
or
xor
inc
lcall
jp
jp
sti
ror
mov
loopne
arpl
sub
out
loop
cmp
fidivl
repz
enter
ds
push
arpl
or
loope
mov
fldenv
jecxz,pt
sub
xchg
xor
js
mov
xor
es
xlat
jle
jne
sbb
sbb
in
xor
mov
and
imul
test
pop
mov
movsl
jno
cmp
adc
and
les
loopne
in
orb
pop
lods
inc
ljmp
adc
int3
mov
outsl
imul
push
dec
lods
aaa
mov
ja
loop
cmp
daa
imul
push
cmc
mov
add
out
addb
dec
jge
sarb
ljmp
stc
dec
inc
aam
and
dec
jne
in
xor
iret
movsl
jbe
cmp
jae
jne
lds
inc
std
mov
pop
push
lods
pop
sub
lcall
mov
inc
push
mov
fsubs
in
pop
mov
cmpsl
loopne
pop
mov
sub
lret
outsl
inc
jecxz
push
aaa
clc
iret
aam
jne
mov
lret
pop
popa
daa
pop
lret
imul
rcrb
clc
inc
sbb
xorb
dec
dec
sti
mov
sub
jl
sti
sar
pop
dec
mov
mov
push
and
adc
stos
outsb
push
pop
dec
pop
xor
xor
jo
xchg
mov
or
mov
lds
push
mov
push
call
mov
lods
ljmp
aaa
cli
or
enter
mov
fnstenv
mov
int3
in
dec
ret
dec
jbe
fstp
inc
mov
inc
ret
mov
sbb
mov
rclb
out
scas
test
imul
cmp
ljmp
shll
inc
jne
sbb
mov
inc
ss
fsts
xchg
out
in
lea
movsb
arpl
rcll
xchg
stc
pop
pop
pop
cmp
cmpsl
stc
sbb
test
imul
push
dec
xchg
daa
adc
push
mov
xchg
les
js
add
xorb
dec
mov
cmpsl
push
test
movsb
and
nop
pop
sarb
int3
clc
pop
sti
or
add
pop
test
testb
aad
mov
ds
fdivrs
dec
test
loop
mov
imul
and
ret
pop
and
mov
dec
dec
call
push
dec
xchg
jl
popf
hlt
push
mov
or
addl
cmp
pop
push
jns
out
jecxz
mov
push
adc
arpl
repnz
add
adc
dec
push
mov
mov
and
sub
repz
and
adc
pop
jmp
jecxz
cmp
idivb
pop
ret
stos
push
lahf
mov
test
push
lahf
inc
scas
push
mov
ret
jmp
and
mov
lret
dec
out
ss
sub
stos
adc
nop
sbb
sahf
push
push
xor
and
cltd
pushf
sub
iret
xor
in
or
leave
xor
rcll
xor
in
push
jl
in
mov
xchg
and
ljmp
int
inc
dec
int
rcr
arpl
mov
or
addl
adc
and
push
insb
inc
or
inc
dec
in
or
pushf
jo
fsubrl
dec
mov
mov
pop
aad
rorl
sub
xor
jnp
mov
ja
hlt
lods
inc
push
adc
cli
sarb
pop
mov
dec
hlt
pop
pusha
aas
fwait
cs
mov
fstl
loopne
sub
sbb
and
push
mov
sbb
mov
push
inc
repz
hlt
cmp
das
jbe
call
orb
mov
lret
pop
ret
data16
cmp
inc
inc
test
fimuls
xchg
pop
jle
repnz
jl
push
mov
lret
mov
mov
lock
xorb
or
push
pop
adc
pop
nop
jecxz
jle
push
fsubs
dec
std
arpl
dec
fcoms
or
inc
push
mov
dec
popf
adc
wrmsr
lock
sbb
inc
imul
push
stos
repnz
sub
cmpsb
fidivrl
clc
stc
lahf
add
or
or
inc
stos
mov
xchg
test
sbb
rorb
nop
mov
jns
xchg
cmc
scas
cltd
ja
push
mov
adc
jmp
std
das
addr16
jmp
cmp
dec
mov
dec
add
in
push
sarl
mov
aas
arpl
popf
mov
xor
stos
addr16
dec
push
lea
pusha
rcr
mov
aas
push
adc
xchg
lods
andb
cwtl
loop
sub
loope
aam
in
insb
mov
sbb
lcall
cmp
pop
rcrb
or
das
mov
iret
cld
mov
xchg
in
jg
xlat
xor
stc
icebp
inc
and
xor
and
testb
mov
icebp
push
jp
in
int
cltd
rcrl
and
inc
fucomi
popa
xchg
jb
sub
idivb
js
push
inc
int
pop
enter
push
push
push
cld
aad
in
lret
jo
xchg
pop
jl
lcall
rolb
cltd
movsl
mov
and
adc
frstor
jne
pop
enter
mov
flds
dec
pop
cld
aas
cmp
jne
fbld
dec
mov
mov
popa
ret
rclb
adc
cmc
mov
push
cmp
subl
imul
sarl
and
addr16
out
jge
int3
jge
loope
notl
xchg
test
sbb
test
and
pop
cmp
jno
xchg
cwtl
add
jno
fld
and
popa
inc
repnz
sbb
mov
jo
mov
scas
push
cmp
cmc
data16
and
in
repnz
adc
lods
pop
push
ss
data16
xchg
pushf
jmp
sub
and
dec
inc
and
mov
shl
fimull
popa
mov
outsb
push
adc
dec
ss
xor
xor
sti
xchg
lret
cmp
jo
fucom
aaa
fsts
push
jecxz
mov
mov
cltd
popf
add
mov
shll
bound
shlb
aad
mov
jbe
ret
data16
sbb
inc
iret
sub
push
jne
push
clc
movsb
jg
dec
stos
sub
mov
inc
mov
repnz
mov
not
cmp
divb
sub
xor
adc
push
push
std
popf
pop
loope
mov
ljmp
pop
inc
lods
cmpsl
pop
test
movsl
xchg
fldl
leave
ficoml
mov
lret
or
ret
es
icebp
inc
cmp
dec
hlt
les
mov
push
lcall
in
ja
cmp
add
lods
popf
add
mov
push
mov
leave
xor
push
repz
xchg
dec
orb
push
andb
iret
pop
fisubrl
lret
or
adc
mov
cmpsl
pop
cmp
in
ret
dec
loop
sbb
data16
pop
ret
arpl
mov
call
push
pop
mov
lods
push
int
dec
js
and
pop
popa
add
adc
fs
mov
xlat
in
add
jmp
push
jb
jae
cmp
mov
pop
sub
mov
pop
and
dec
pop
xchg
ja
lods
ret
push
mov
jle
mov
xchg
into
cmp
decb
getsec
repz
loopne
jecxz
in
gs
mov
inc
or
fcoml
mov
mov
pop
mov
sbb
test
inc
loop
xor
add
jmp
shrb
fistps
mov
fwait
jmp
mov
mov
loope
mov
mov
gs
jae
daa
and
scas
aaa
push
daa
addb
push
icebp
jb
pusha
or
or
jbe
hlt
push
cmp
js
out
inc
popf
pushf
xor
out
in
sbb
xlat
lods
inc
adc
xchg
repz
mov
mov
sbb
lods
push
sbb
aam
sarb
rorl
call
pop
push
or
fldt
out
jle
xor
cmpsl
dec
cwtl
cmp
ss
push
and
mov
scas
adc
mov
mov
dec
and
mov
ja
or
leave
or
subl
fwait
lret
pop
movsb
mov
aas
jge
push
shr
stos
cmp
testb
push
pop
jns
push
cmp
xchg
je
jmp
xor
sub
xor
rcrl
dec
aas
lea
jo
jns
int
sbb
sbb
sbb
pop
in
and
lods
xchg
and
mov
xchg
mov
jns
int3
lods
jmp
jge
xor
jle
cmp
fcomps
repz
pop
loop
lods
fisttpll
orl
rorl
cmpsb
xchg
rcrb
imul
xchg
iret
lcall
xor
fdivs
scas
jecxz
jb
push
jne
mov
fimuls
pop
mov
or
xchg
ljmp
push
repnz
inc
cmpsb
pushf
test
add
pop
jp
pop
sarb
inc
addb
test
xor
jnp
mov
and
leave
nop
inc
fucompp
xor
mov
push
sub
mov
adc
pop
das
mov
dec
cmpsl
jmp
mov
loopne
hlt
aam
mov
push
jnp
adc
je
das
lret
repz
shrb
add
out
cmp
jo
sub
adc
push
nop
sub
or
jmp
push
aad
mov
or
stc
shrl
sbb
mov
and
lret
ret
adc
ret
inc
stos
and
stos
and
dec
lods
push
cmp
push
xchg
sarb
mov
sbb
repz
and
mov
outsl
je
jmp
add
add
pop
rcll
or
cmpb
lods
mull
mov
sub
xchg
scas
xor
addr16
or
mov
add
sbb
mov
pop
sti
push
lcall
fwait
imul
xor
incb
mov
sti
sub
sbb
mov
hlt
loope
mov
arpl
or
mov
lds
cltd
adc
fadds
test
jmp
enter
cmpsl
dec
int3
cld
jne
add
sub
xchg
dec
mov
int
xchg
inc
mov
mul
and
test
mov
dec
cmp
int3
xchg
sbb
adc
loop
cmpsl
insl
out
dec
add
mov
insb
xor
jb
scas
xchg
jnp
xchg
rcrl
int
push
mov
add
mov
vmovaps
fisubs
jle
in
cltd
mov
test
xor
mov
sahf
pop
pop
dec
idiv
pop
add
mov
xor
lret
les
lods
and
lahf
pop
rorb
and
cmp
dec
nop
scas
daa
aas
push
inc
mov
adc
dec
add
ja
lds
in
mov
push
je
lea
mov
pop
mov
loope
int
jl
icebp
and
or
rol
dec
pusha
ds
jo
mov
sub
dec
push
push
dec
andb
sbb
stc
ret
incl
mov
inc
xchg
mov
iret
fs
cmpsb
imul
stos
shll
sub
pop
dec
data16
sub
outsb
pop
xor
fiaddl
cmp
lods
pop
cs
add
daa
cmp
dec
jae,pn
cld
dec
mov
je
sbb
dec
cmp
in
mov
mov
clc
push
ficoml
push
aaa
repz
and
in
andl
fldl
and
sub
cmp
cmpsb
cmp
add
jo
loop
cmp
mov
push
in
insl
push
mov
hlt
shr
fiadds
movsl
lret
mov
sub
fldl
popa
imul
lahf
test
mov
push
inc
cltd
movsb
xor
add
push
fildl
dec
fmull
subb
xchg
push
inc
loop
inc
xor
aad
insl
jns
mov
cmp
mov
pop
push
xor
adc
pop
mov
jno
mov
aam
mull
mov
test
push
std
mov
dec
sub
daa
aaa
loopne
push
sbb
popf
push
mov
cmp
or
imulb
test
xchg
mov
movsl
or
mov
jo
shrl
rolb
cmp
mov
sub
cmpsb
push
pusha
fistpll
in
mov
mov
xor
inc
cmp
js
jp
out
adc
out
inc
push
pop
addr16
sbb
les
pop
add
jge
test
sub
sbb
lock
push
cmp
repz
mov
mov
cmp
xlat
rcl
popa
mov
subl
or
test
repz
jle
and
add
inc
xor
sbbb
push
dec
pop
iret
pop
arpl
stos
addr16
repnz
popf
sbb
stos
insl
sbb
dec
es
stos
push
jmp
jbe
push
sub
push
push
add
mov
mov
addr16
mov
cmp
fbstp
int
mov
mov
loope
pop
jbe
pop
mov
sarl
jg
sub
fcmovne
mov
push
fsub
mov
dec
mov
stos
or
test
jmp
jbe,pn
stos
les
or
cmp
dec
sub
sbb
xor
jno
pop
js
bound
adc
mov
test
imul
push
or
pop
insl
in
jge
mov
out
popa
rcr
adc
test
daa
hlt
shlb
clc
imul
mov
jl
sbbl
add
mov
rcrl
dec
cld
or
call
pop
bound
xchg
adc
pop
dec
adc
inc
mov
jb
shl
or
sbb
lret
test
add
jae
mov
test
in
xchg
lods
nop
or
cmp
mov
mov
add
or
incb
cmp
push
jns
and
xor
pushf
repz
adc
pop
scas
mov
iret
cmpsl
sbb
das
jg
addr16
stc
fistpl
cli
inc
add
int
jl
enter
sbb
mov
xor
mov
mov
movsb
pop
pop
jnp
xchg
push
jmp
push
mov
aaa
add
js
mov
stc
adc
ret
cld
mov
insb
cmp
rcrl
mov
fimull
mov
push
inc
roll
inc
push
movsb
sbb
dec
jmp
shll
sbb
nop
shrl
enter
out
add
add
dec
roll
ret
shrb
sbb
dec
repz
pop
push
bound
push
xchg
aaa
std
sbb
inc
xor
fldcw
sub
add
nopl
iret
push
leave
jle
sbb
push
xchg
mov
mov
bound
pop
sahf
inc
in
daa
cmpsl
jp
sub
or
push
insl
insb
push
orb
pusha
push
push
ljmp
inc
sbb
sti
xor
bnd
mov
xchg
xchg
lock
pop
cmp
mov
pop
mov
insb
and
shl
icebp
xor
jnp
pop
xlat
pop
cltd
dec
fs
sbb
mov
add
xor
xchg
jne
ljmp
xor
jns
shl
leave
adc
nop
movsl
jne
add
fld
or
rcll
dec
testb
ljmp
insl
aam
mov
jbe
popa
daa
loop
cmp
cmpsl
sbb
data16
jno
test
std
xchg
ret
into
stos
mov
repnz
mov
pop
rcr
xor
or
push
or
fidivl
imul
dec
aas
or
xor
mov
stos
xor
int3
jns
mov
lahf
mov
das
jns
fldl
or
repnz
test
loop
stos
cmp
xchg
frstor
push
cmc
jle
popa
mov
adcb
jae
stos
std
mov
int3
stos
sub
mov
je
pop
adc
or
lahf
add
and
xlat
adc
and
push
sbb
xchg
sub
aad
xor
int
lock
shll
cmp
and
outsl
call
mov
test
dec
inc
jb
cmp
rcl
je
movsb
jne
adc
mov
clc
outsb
and
jmp
and
inc
leave
jo
cs
and
xchg
sbb
inc
into
jg
and
adc
pop
pop
je
in
jbe
in
inc
or
fadds
pop
mov
or
add
loope
cmp
or
test
je
fwait
cwtl
ss
lods
leave
icebp
cmp
aam
daa
cld
push
pop
sbb
xchg
je
jo
stos
in
jnp
out
mov
xlat
jnp
xchg
push
jo
sub
xor
and
cli
cmpsl
xchg
xchg
out
call
xor
inc
xchg
outsl
dec
decb
movsl
pop
ljmp
hlt
jns
lea
shll
test
mov
push
cmp
xchg
mov
divb
mov
mov
cli
imul
push
and
mov
ljmp
pushl
mov
test
sbb
sub
adcb
daa
jg
inc
inc
test
sbb
mov
call
mov
filds
and
cmc
pop
jns
shr
and
test
ja
dec
push
mov
out
mov
fld1
xor
jb
int3
mov
sub
mov
inc
push
lret
push
nop
mov
lds
leave
and
sbb
push
sbb
mov
or
in
jle
daa
mov
lock
push
movsb
jmp
jmp
imul
nop
push
ret
adc
cmp
cmp
and
mov
inc
in
jbe
jno
xchg
jns
dec
popl
aas
sub
cmc
or
loop
sbbl
jp
jae
mov
aas
sbb
xchg
xor
mov
mov
or
ljmp
mov
cmpsl
jbe
push
cwtl
sti
js
jnp
lret
adc
pusha
ss
dec
test
mov
xor
hlt
adc
ja
dec
cs
cs
cld
add
jns
xchg
ja
push
dec
aas
fisubl
enter
xchg
or
pop
sbb
dec
sub
sbb
lea
test
enter
cmpb
or
nop
movsl
pop
ss
cmp
lret
std
pop
xchg
xor
dec
jmp
fbld
sbbb
push
sti
aam
jge
fldcw
stos
scas
sti
ret
das
add
lahf
pop
adc
cmpl
pop
out
fidivs
loop
jmp
cmp
mov
inc
rcr
popa
push
sarl
xchg
mov
pop
dec
dec
loop
movsl
add
mov
clc
mov
scas
cli
fwait
popf
insl
xchg
inc
pop
sub
into
add
insl
jae
mov
dec
and
cmp
decl
addb
jnp
cmpsl
add
lcall
loope
fs
andb
mov
pusha
xor
dec
popa
mov
xor
addr16
repz
fimull
or
jnp
sbb
push
icebp
xchg
adc
mov
push
lods
jb
pop
sbb
cli
add
shrl
int3
out
pop
fdivrl
sub
xlat
adc
mov
cmp
cmp
pop
mov
aam
pop
cmc
mov
sbb
ret
or
lret
movsb
test
dec
lods
scas
push
dec
jmp
sbb
dec
xchg
adc
pushf
mov
popf
loopne
mov
pop
mov
jno
adc
push
dec
pop
xor
push
mov
push
xor
out
push
adc
and
movsb
and
je
ljmp
sbb
mov
pusha
int
adcb
pop
scas
scas
or
xchg
push
andl
jnp
add
xchg
sbb
mov
clc
xor
into
and
jno
adc
in
lahf
jbe
jmp
lds
movsl
mov
mov
push
ljmp
pop
mov
sbb
dec
mov
push
test
std
mov
push
dec
outsb
mov
insb
movsl
add
les
insl
push
clc
jp
cltd
xor
dec
sbb
xchg
fnsave
xchg
fidivs
sbb
iret
rorl
shl
dec
add
aaa
sub
pusha
jbe
inc
stos
push
cmp
leave
dec
and
add
in
arpl
orb
test
out
or
push
push
mov
pop
xor
notb
aad
mov
es
push
or
test
jp
push
mov
sbb
add
push
test
lret
std
pop
mov
xor
xor
and
add
jge
fucomp
je
jbe
orl
inc
repnz
push
mov
mov
lret
xor
outsl
cmpsb
or
pop
roll
sub
jp
pop
mov
dec
cli
mull
mov
sbb
stc
jae
and
lahf
push
les
pusha
cmp
pushf
mov
or
push
add
repnz
cmc
lahf
fcmovbe
adc
cs
or
ss
dec
subb
aam
data16
test
jns
leave
jnp
stos
pusha
push
fnstenv
dec
push
push
lcall
mov
cmc
mov
sbb
xor
pusha
in
fmuls
aad
in
and
dec
mov
outsb
leave
mov
mov
call
cwtl
jp
inc
and
inc
and
jp
push
in
mov
and
mov
adc
dec
data16
shrl
out
repz
fimuls
popf
scas
mov
ljmp
mov
sahf
add
call
and
xor
add
imul
jmp
pop
cmpsl
dec
dec
cmp
inc
cmpsb
or
xchg
dec
mov
cmc
mov
xchg
cmp
add
fbstp
fwait
int
out
int
xor
or
pop
cmpl
es
dec
sub
mov
and
sbb
jb
push
cmp
int
mov
push
dec
sub
mov
mov
push
iret
or
ret
or
pop
mov
mov
fiaddl
sub
data16
xor
dec
stos
dec
pop
das
cltd
rolb
scas
dec
mov
cmp
xchg
mov
push
sbb
adc
xchg
mov
cmp
out
pop
adc
fistl
push
jge
or
push
sarb
je
push
mov
sub
jne
pusha
dec
fcomp
out
xor
jae
pushf
outsb
fldl
imul
jmp
jecxz
stc
fs
sti
mov
pop
sbb
idivb
mov
jle
dec
xchg
cmp
sahf
cmpsb
jno
pop
mov
or
pop
scas
mov
mov
je
lds
lcall
loopne
ljmp
xor
subb
jg
xor
xlat
pop
add
or
out
jo
mov
imull
call
in
aas
xchg
pop
xchg
xor
adc
pop
add
mov
dec
mov
jg
out
add
aas
xor
in
hlt
sub
and
inc
xchg
xchg
xor
cld
scas
xchg
or
cld
lcall
sbb
in
xchg
arpl
das
lods
mov
jg
sti
jo
push
xchg
xor
push
push
test
cs
popa
cmpsb
xchg
imul
xorl
stos
push
daa
or
mov
pop
outsb
sarb
mov
adc
jb
push
push
inc
outsb
mov
call
push
mov
mov
mov
cwtl
adc
out
and
pushf
jmp
push
push
add
adc
lods
adc
adc
mov
imul
xor
aam
dec
push
and
fwait
popl
or
adc
out
insb
mov
pop
xchg
jmp
rcr
push
test
mov
mov
nop
pop
idiv
aad
sub
aas
and
push
ret
bound
adc
push
jne
lahf
int
cmc
insb
mov
mov
sub
call
mov
cs
aam
inc
sub
cmpb
xor
in
adc
repnz
mov
sbb
leave
xchg
jecxz
andl
sbb
sahf
clc
mov
xchg
repnz
ja
je
ror
pop
test
mov
push
mov
adc
int
imul
pop
mov
lea
aas
jmp
mov
lahf
rcrb
push
ret
mov
pop
and
cmpsl
mov
sub
pop
mov
xchg
jecxz
mov
mov
lret
cltd
cmp
pop
movswl
cmp
inc
repnz
hlt
mov
inc
clc
loop
test
jge
xor
ss
pop
daa
jmp
push
lea
dec
sbb
ljmp
adc
cmc
sub
shl
jae
jge
xor
or
repnz
push
mov
lods
gs
jns
mov
xchg
mov
or
lds
subb
arpl
pop
jl
icebp
outsl
jnp
push
adc
imul
jae
mov
push
pop
inc
dec
std
neg
enter
add
in
and
iret
int3
mov
push
inc
aas
mov
stos
sbb
inc
int3
jno
ret
adc
mov
mov
incb
xor
mov
mov
mov
adc
or
outsl
sub
fistps
cmpsb
adc
xchg
jns
cltd
mov
inc
jno
mov
inc
movsb
push
das
jl
ljmp
clc
add
fwait
out
mov
mov
fstpl
pop
mov
iret
pop
aad
mov
mov
jge
pop
or
int3
xchg
neg
jns
cmp
into
cli
bound
push
xchg
ret
into
jmp
push
rcrl
lret
mov
shl
mov
das
pop
dec
xor
std
adcl
mov
mov
fstl
sub
rclb
cmpsl
bnd
or
pop
sti
jno
lret
mov
cmp
mov
mov
in
or
push
inc
push
mov
nop
jge
repnz
sub
in
movsl
cmp
mov
in
lods
fucom
cmpsb
xchg
cld
jne
add
sub
test
stos
scas
mov
sbb
mov
stc
fildll
push
shr
add
lods
cmp
divl
adc
int
xor
cmp
sbb
pusha
push
jmp
stos
imul
sbb
pop
xor
jne
cmp
mov
out
cmc
jbe
or
mov
imull
push
cmc
jp
jecxz
das
aam
cli
push
add
rclb
mov
mov
loope
nop
xor
and
rcrb
loop
xchg
xchg
cmpsb
push
or
dec
je
pop
in
mov
push
inc
fadds
ja
icebp
mov
xchg
mov
mov
stos
xchg
out
mov
sub
pop
pop
lret
enter
insb
push
jno
je
out
sub
push
cmpsl
or
loop
dec
xor
dec
fsubrs
sub
lahf
add
cmpsl
sub
pop
stos
bound
hlt
mov
add
add
mov
mov
add
push
jg
loope
ret
push
pop
inc
jmp
jmp
cmp
scas
in
mov
es
test
ljmp
scas
xchg
pusha
sub
sbb
mov
adc
lcall
jb
sbb
cmp
movsl
xchg
scas
fisttpl
cwtl
add
mov
into
sbb
arpl
bswap
push
push
ret
fsubrl
jno
aas
sbb
out
inc
js
lcall
jl
mov
das
mov
rolb
in
xchg
push
pop
push
cld
mov
adc
lock
or
mov
mov
mov
mov
shl
test
dec
int
aam
xchg
in
pushf
inc
pop
bound
pop
leave
hlt
mov
hlt
hlt
aad
ret
xor
rcrl
xchg
mov
ret
scas
loop
push
mov
cmp
mov
pusha
arpl
movsb
push
mov
pushf
adc
movsl
loope
jge
cwtl
push
in
insb
dec
add
stos
idiv
push
movsb
and
mov
xor
inc
mov
dec
xorl
mov
dec
push
call
bound
fs
test
adc
mov
leave
ret
mov
aas
push
jne
inc
es
lret
bound
das
sarl
data16
int3
push
jp
pop
pop
xorl
dec
mov
dec
movsb
mov
sahf
add
inc
adc
cmp
rolb
dec
jo
call
push
cmp
insl
popf
mov
or
adc
hlt
or
repz
cmp
pop
js
adc
inc
arpl
sub
mov
and
mov
clc
jp
or
dec
mov
negb
or
loopne
lret
fistl
mov
inc
jns
cmp
and
jl
adc
leave
inc
xchg
cmp
and
cmp
cmp
cltd
cmp
xor
pusha
mov
and
rcl
mov
jl
xlat
scas
sti
and
pop
or
mov
mov
mov
outsl
data16
ds
push
mov
xchg
ja
das
or
int
insb
cmp
in
in
imul
sarb
std
xor
sub
mov
loop
mov
loop
fimull
cld
icebp
or
xchg
mov
pop
cmp
ja
scas
push
popf
fnstcw
subb
xchg
jecxz
fnsave
aam
ret
bound
pop
jg
push
fdivs
adc
stos
dec
roll
call
inc
sub
sub
je
mov
mov
xchg
jle
stos
lret
divb
add
pop
xchg
cwtl
repnz
repnz
negl
addb
xchg
pop
or
fwait
jae
aas
mov
xorl
js
lea
mov
pushf
fists
jns
divb
jno
es
aaa
icebp
mov
xchg
into
sub
mov
cld
lcall
imul
jno
xor
sbb
pop
xchg
mov
mov
xchg
mov
lahf
fmull
push
dec
js
push
and
icebp
jo
lods
or
mov
jnp
fdivrp
xchg
xorb
daa
repz
push
nop
xchg
mov
pop
sub
or
xchg
movsl
fdivrl
sub
lods
lds
or
pop
ja
push
or
add
stc
cltd
xor
or
xchg
fimuls
mov
xchg
hlt
in
mov
gs
pop
fimuls
adc
aas
hlt
ret
mov
decl
ficoms
jmp
xor
mov
pshufd
xor
je
jns
int3
and
jp
xor
jns
mov
aas
scas
dec
gs
and
test
aas
xchg
sbb
rorb
xchg
aas
dec
imul
jge
xchg
add
lahf
pop
das
scas
test
jl
push
int
push
sbb
xorb
mov
int
fdiv
ja
aam
adc
adc
jle
cltd
dec
sub
pusha
mov
rorl
mov
pop
mov
xchg
sbb
or
add
bswap
add
push
or
repz
xchg
out
cmp
add
mov
pop
jge
xchg
xor
pop
insl
sti
test
add
dec
cwtl
jmp
or
jns
cmpsl
sbb
dec
and
and
cltd
ficoms
or
subl
pop
fld
sub
cltd
cmc
dec
push
or
sbb
es
imul
hlt
lds
fistpll
sahf
lods
out
je
mov
orl
inc
mov
cmp
dec
divb
enter
sub
cltd
mov
incl
xor
ja
xchg
xorl
call
lds
jns
jecxz
fldcw
inc
push
inc
mull
and
add
inc
push
addb
mov
inc
push
arpl
adc
pusha
je
mov
daa
aaa
inc
add
test
mov
jb,pn
aam
nop
and
adc
or
imul
dec
adcb
sbb
push
lods
mov
mov
jp
push
sub
mov
gs
sbb
out
loop
inc
xor
push
jmp
test
out
dec
inc
push
push
shll
mov
movsb
mov
inc
int3
sahf
jno
packssdw
ret
and
adc
cs
movsb
cwtl
xorb
mov
enter
or
lahf
out
push
sub
cmp
xlat
xchg
andb
and
add
js
mov
fs
xchg
mov
movsl
add
rorl
inc
pop
inc
orb
push
adc
lds
outsb
jae
cmp
lea
push
jns
in
mov
scas
fsts
fidivrs
add
or
cmp
dec
aad
call
mov
jnp
subb
add
xor
stos
stos
jb
lahf
call
jb
dec
stos
sbb
mov
jmp
repnz
std
pushf
or
rcrb
shl
sbb
clc
inc
jno
ljmp
cltd
test
sub
cwtl
ret
fcmovnbe
mov
push
cli
lret
daa
mov
xor
sbb
ljmp
hlt
sub
in
dec
jmp
jno
sti
jnp
xor
cwtl
fnstsw
arpl
jbe
inc
inc
in
xchg
mov
jbe
pop
scas
les
mov
pop
mov
popf
fwait
dec
xor
gs
and
jno
adc
mov
xor
addb
pop
add
stos
inc
mov
adc
js
inc
sub
xor
repz
fldenv
xlat
mov
inc
sbb
pop
push
sti
adc
dec
popa
xchg
pop
ret
mov
xlat
scas
jmp
js
ret
push
shl
enter
cmc
pop
push
inc
sahf
fistps
outsl
fstpt
divb
neg
cmpsl
sub
xchg
pop
lds
hlt
xorl
mov
lret
rcrl
jle
nop
hlt
out
test
lret
pop
mov
imul
in
pop
and
cmc
cmp
push
pop
push
and
push
jo
call
dec
mov
mov
icebp
arpl
or
or
mov
mov
lods
push
lret
lahf
lea
test
mov
pop
sub
sbb
cmp
sbbl
movsb
fwait
cmp
cli
pop
adc
pop
fisttpl
inc
imul
mov
arpl
mov
mov
pop
fs
push
mov
push
and
movsb
mov
jnp
xchg
stos
mov
xor
insb
mov
sub
cmp
add
rorb
enter
cmp
xchg
sub
dec
add
fsubp
test
inc
in
mov
sub
xchg
jae
in
mov
push
pop
adcl
cwtl
or
repnz
fwait
and
or
cmp
cld
dec
movsb
ret
and
imul
movsb
xor
jmp
loopne
push
out
mov
mov
jne
ret
mov
stos
popa
push
lcall
or
mov
push
inc
jnp
in
jns
loope
push
pusha
out
push
pop
sub
clc
fistps
pop
ret
hlt
and
sbb
cmp
inc
arpl
lahf
pop
and
stc
jnp
mov
stos
mov
pop
mov
mov
call
das
or
out
repnz
imul
add
out
xchg
rol
ss
jge
and
sarl
dec
pop
test
inc
mov
mov
mov
push
mov
adc
clc
fwait
mov
sub
outsb
mov
movsb
loop
jl
inc
mov
and
push
dec
pushf
mov
xor
out
cwtl
lods
mov
or
into
stos
das
out
test
jl,pn
sbb
jmp
insb
and
cmp
test
addr16
cmp
cmc
jnp
addl
mov
gs
sbb
push
xchg
test
lods
inc
out
or
fisttpl
scas
fcomps
ret
cmp
jp
mov
sub
in
inc
mov
enter
insl
cs
mov
data16
inc
add
push
pop
pop
nop
fwait
rcll
push
sub
dec
dec
sub
xor
sahf
push
dec
pop
or
mov
out
push
hlt
ljmp
out
inc
js
inc
pop
mov
adc
mov
rol
iret
divb
sub
outsl
pop
in
sub
sub
pop
xchg
loop,pt
movsb
dec
jg
add
xor
and
xor
rcl
lret
int
mov
scas
int
mov
pop
cli
imul
pop
mov
xchg
xchg
mov
jmp
cli
lret
push
imull
adc
movsb
mov
out
lcall
fmull
aaa
movsl
gs
xchg
pop
pop
jne
jne
mov
andl
aam
adc
daa
int
cs
xchg
movsl
and
pushf
jecxz
in
leave
stc
mov
rcrl
pop
addr16
cmp
movsl
fwait
xchg
lods
xchg
inc
cmp
push
xchg
loope
mov
xchg
outsb
lods
out
add
push
push
pop
mov
cmc
std
pop
mov
lret
ret
call
sub
mov
jp
aas
sub
rcll
adc
das
push
add
rcl
mov
fs
pop
fildll
xchg
test
pop
ret
and
jl
fstpl
add
jne
sbb
cmc
test
leave
fs
jo
into
in
mov
neg
in
xor
sub
pop
inc
jae
mov
mov
dec
jnp
shrb
inc
sub
xor
lahf
add
in
lret
outsl
pop
iret
fidivs
imul
mov
or
sub
lea
popa
cmpsb
divb
and
lret
into
cld
mov
cs
jb
xor
dec
test
mov
pop
dec
sbb
lahf
xchg
jg
xchg
and
rcll
rcrb
aaa
xorb
in
or
sahf
mov
pop
addr16
jno
add
repz
or
xor
mov
dec
cmp
shlb
inc
cltd
or
push
jae
mov
lods
jmp
adc
je
dec
push
pop
cmp
mov
icebp
pop
ja
jb
and
roll
push
ja
popa
sbb
jg
push
adc
jecxz
adc
xchg
or
lods
std
mov
dec
xor
inc
addl
add
sub
inc
das
xlat
dec
fs
in
xor
ret
push
out
adc
push
xchg
inc
out
lods
popf
jbe
iret
mov
pop
pop
mov
ret
add
adc
or
clc
pop
inc
xchg
jmp
shl
xchg
add
enter
lods
fsubrs
sbb
and
add
mov
decl
mov
aam
fs
or
xor
sbb
cli
mov
xchg
push
jbe
mov
jle
out
nop
mov
pop
in
dec
loopne
sar
sub
ja
pusha
sub
or
aam
add
xor
cld
add
jbe
int3
pop
cwtl
fnsave
or
dec
iret
or
push
pop
sbb
cmp
dec
mov
and
xchg
rolb
push
ds
mov
or
lods
xchg
cld
cmp
sub
xchg
stos
xlat
or
jmp
sub
jmp
cs
adc
sub
inc
bound
leave
in
add
rorb
mov
in
and
in
fstps
ficompl
loopne
lods
push
imulb
loop
inc
out
sbbb
and
les
sarl
addr16
mov
sub
adc
xor
addl
sbb
mov
add
loope
gs
fists
inc
push
mov
sbb
cmp
pop
outsb
rcr
xchg
jns
mov
jne
lods
mov
loope
ja
pushf
and
ror
mov
scas
ds
cld
mov
pop
jae
leave
repz
cmpsl
jg
adc
cmp
mov
lock
push
adc
dec
cmpsl
pop
lds
int
pop
fsubs
in
sahf
ljmp
mov
imulb
pop
gs
jle
std
flds
push
test
dec
test
mov
es
pusha
mov
sbb
adc
and
push
cmp
jno
sub
fs
and
insb
data16
pop
addb
pop
pop
or
jle
je
jb
cmp
int3
in
pop
mov
jp
sub
pop
mov
sub
mov
add
xchg
inc
cli
int
icebp
xchg
push
inc
cmp
aas
loop
or
dec
mov
shlb
dec
mov
aas
xor
sub
negl
in
push
mov
adc
jae
cwtl
lock
pusha
xchg
add
imul
sub
jns
cmpsb
mov
rcr
mov
ds
adc
aas
cmp
mov
clc
in
dec
imul
cwtl
ja
jbe
addr16
xchg
rorb
andl
mov
clc
lret
push
xor
out
stos
xchg
in
fbstp
scas
data16
pop
xor
inc
mov
jg
fiaddl
in
pop
sbb
adc
in
sti
push
cmp
cmp
cmp
iret
fdivrs
lsl
xorl
aaa
out
test
push
cmp
loope
jle
icebp
mov
pop
test
in
sbb
push
or
fidivrl
jl
push
data16
iret
stos
mov
xor
sar
mov
jle
adc
dec
insl
outsl
inc
dec
cmc
xchg
sbb
sbb
in
or
aam
leave
adc
inc
test
or
pusha
aam
push
int
mov
popa
xor
mov
rcl
and
pushf
or
jb
and
push
and
push
push
push
push
jnp
or
nop
pop
sbb
push
adc
or
xchg
clc
mov
sti
push
push
dec
and
push
rcl
dec
add
xor
lret
inc
sbb
mov
popf
mov
cmpsb
or
aad
das
loope
mov
sbb
stc
fs
sarl
sub
add
or
mov
inc
or
mov
cmp
in
push
in
ja
push
or
ss
test
pop
jge
jg
notl
xor
sar
xchg
insl
out
mov
es
xchg
cmp
xchg
sub
movsb
and
scas
divb
adc
jmp
mov
mov
fwait
xor
in
sahf
pop
mov
pop
jecxz
fidivs
in
into
rcll
mov
ret
cmc
xor
pop
cmp
adc
dec
pop
mov
pushf
pushf
add
pop
mov
add
dec
mov
jmp
dec
mov
rep
cltd
repnz
fstpl
pop
nop
leave
inc
sbb
mov
in
mov
cmpsb
mov
sarb
and
dec
dec
ficomps
adc
jle
test
and
lret
fs
push
dec
mov
in
mov
or
xor
add
adc
pop
sahf
xchg
loope
xchg
adc
repz
or
xchg
dec
out
jle
lret
repz
inc
add
repz
mov
jnp
fmull
loope
movsl
movsb
fidivrl
push
sub
xchg
mov
negl
adcb
adc
mov
lret
ss
lahf
arpl
ficoml
jecxz
loope
or
fdivrs
imul
add
adc
xchg
in
cltd
inc
bound
je
add
stc
jo
sub
stos
cs
movsl
inc
loopne
rclb
popf
xchg
push
daa
cmp
adc
outsl
mov
in
test
popa
xor
pop
xchg
mov
js
fmuls
jno
mov
hlt
pop
cs
adc
pop
sub
adc
cmpsb
cwtl
jae
aad
movsl
pop
ret
ds
add
icebp
cmp
adc
into
cld
mov
mov
aam
sti
loop
fs
xlat
call
inc
jle
mov
pop
push
mov
xlat
lods
mov
or
or
mov
call
jge
sbb
jp
mov
test
int
out
xchg
inc
jbe
sub
loopne
pop
stos
daa
dec
js
mov
mov
sub
lret
mov
outsb
jmp
mov
test
mov
movsb
add
popa
push
into
fistps
aaa
mov
movl
inc
inc
ss
fucomi
popa
inc
pop
xlat
popf
xchg
jmp
add
addr16
xchg
pop
push
mov
dec
or
mov
add
mov
sub
push
mov
and
sub
cwtl
inc
xor
movsb
xor
outsl
jp
adc
fcomps
mov
dec
stos
lea
sbb
cmp
test
sub
or
inc
and
sub
sbb
and
or
pop
scas
shlb
jb
xchg
mov
dec
push
fcoml
mov
inc
scas
les
xchg
fwait
adc
ret
out
sub
jle
add
push
dec
and
jo
xlat
hlt
jmp
jl
clc
gs
sbb
inc
push
inc
out
sbbb
xchg
or
imul
push
jecxz
inc
and
pop
adc
loop
repz
inc
aaa
push
lea
sub
add
xor
dec
std
dec
arpl
dec
inc
sub
inc
jae
ds
pop
xchg
pop
lahf
leave
sbb
loope
mov
cmpl
ret
jmp
out
mov
mov
xlat
push
fldl
aas
out
mov
mov
xor
jg
popl
dec
and
or
pop
imul
mov
adc
loop
ss
cs
mov
jl
ljmp
imul
mov
push
or
rorl
je
sbb
aad
imul
js
cwtl
mov
push
call
mov
push
out
cs
mov
mov
sub
mov
mov
jno
pushf
fisubrs
fucom
mov
leave
add
mov
push
addr16
dec
xlat
fisubrl
jno
rorb
out
outsl
xchg
mov
cmpsl
pop
js
cmp
out
and
mov
xchg
daa
pop
xchg
fiadds
repnz
js
push
lock
pop
fildl
xchg
shll
inc
push
dec
mov
or
add
dec
in
and
cmpl
pop
push
xchg
dec
and
aaa
mov
jge
xchg
pop
aas
mov
aam
scas
jg
and
jecxz
test
mov
fisttpl
jno
pop
pop
lret
sarb
cmpsb
mov
das
stc
sbb
lret
insl
jge
and
arpl
lods
push
popa
add
jns
dec
jbe
mov
push
out
ret
lock
mov
sbb
push
cmc
xor
mov
mov
aas
outsl
and
call
push
push
dec
or
dec
fistl
fisubs
jo
and
outsb
mov
mov
pop
call
jb
add
arpl
mov
and
xchg
insl
je
or
dec
gs
aam
cli
aas
test
add
mov
mov
mov
and
ret
sti
dec
xor
mov
jecxz
push
xchg
lea
orb
adc
aam
add
cwtl
pop
inc
rcl
sub
push
mov
cs
jle
sbb
dec
loope
jb
ljmp
fistpl
lret
sub
push
in
mov
cmpsb
lahf
pop
test
dec
jl
test
mov
adc
aad
sbb
xrelease
iret
mov
xor
push
adc
fcmovnb
sub
data16
mov
pushf
int3
push
cmp
stos
psubb
or
pop
hlt
movsb
mov
dec
xor
xor
lds
scas
pop
aaa
in
mov
cmpl
xor
insl
mov
loopne
mov
jge
jp
aam
push
pop
stc
test
loope
jo
in
push
jnp
leave
and
push
cs
fists
or
pop
or
or
sub
aam
orb
pop
ss
push
xor
pop
sbb
sbb
dec
dec
jle
out
pop
sbb
push
jno
jno
sbb
ljmp
inc
xor
dec
mov
xor
stos
mov
jne
xchg
dec
cmpsl
sti
cld
rcrl
push
push
mov
movsl
outsl
mov
cmp
jg
xor
out
sub
adc
repnz
cli
push
pop
xor
push
jno
pop
dec
lock
rcrb
dec
adc
in
or
or
xchg
lret
cli
out
xchg
imul
inc
lahf
dec
clc
jbe
movsl
xorb
outsl
into
or
jbe
sarl
sub
imul
sbb
lcall
sbb
mov
test
rcll
fildll
or
mov
xchg
out
fcomps
outsl
jg
jne
add
inc
xlat
and
pop
dec
push
lea
cmp
or
sahf
ss
sub
mov
daa
call
jbe
les
pop
jo
test
es
mov
add
add
push
xchg
sub
and
dec
or
test
xchg
dec
pop
xchg
pushf
lods
call
cltd
mov
xor
mov
add
mov
pusha
adc
and
pop
cmc
inc
lcall
dec
cmp
cmp
mov
int
scas
jbe
es
mov
inc
push
imul
test
mov
imul
push
mov
mov
fstps
fimuls
add
and
mov
jecxz
mov
jo
mov
rcr
inc
js
in
add
scas
lcall
mov
popa
icebp
mov
dec
xor
ja
roll
sub
fldenv
mov
stos
and
cmp
std
mov
shll
push
inc
mov
xchg
insb
adc
pop
push
mov
rclb
stos
stos
add
jns
jp
fldcw
mov
adc
adc
jbe
imul
xchg
mov
sbb
push
and
test
mov
ret
fmull
out
aaa
mov
dec
dec
xor
push
push
jle
cltd
and
imul
mov
and
mov
mov
repnz
push
jno
mov
cs
jne
orl
pop
lods
stos
mov
gs
enter
sub
sub
push
xchg
in
adc
cmp
rolb
negb
xchg
inc
adc
xor
addl
adc
pop
and
loope
sub
ljmp
mov
sarb
jno
cltd
mov
mov
in
cmp
andl
inc
cli
outsl
mov
mov
add
cmc
jge
and
mov
jecxz
into
fsubl
push
push
daa
into
mov
add
aaa
out
addr16
jge
cli
lods
lods
cmc
or
das
adc
es
fcmovb
cmp
test
push
or
stc
mov
jle
adc
scas
fdivrs
test
mov
xchg
repz
sbb
sti
jae
adc
add
imulb
jnp
cmp
sbb
pusha
inc
imul
fwait
sub
pop
adc
add
cld
xchg
lcall
nop
outsb
mov
inc
loope
std
imul
adc
mov
ror
rcrl
scas
jp
mov
xchg
cmp
jecxz
cmp
sbb
popa
fwait
inc
bound
inc
xchg
rorl
ljmp
ss
insl
mov
lcall
cmp
push
mov
sub
popf
jae
mulb
mov
sahf
dec
xor
sub
rcrb
lcall
pop
jp
xlat
cmc
mov
sub
shl
iret
add
mov
xchg
scas
ja
jmp
sub
adc
lock
popl
shrl
inc
or
pop
hlt
add
sub
mov
dec
jl
sbb
xor
sbb
icebp
cmp
dec
dec
pop
out
in
sub
or
and
cltd
rol
sbb
in
mov
cld
jae
pop
outsl
inc
xlat
or
test
inc
gs
das
je
mov
test
or
loope
es
push
cmp
add
outsb
xor
es
pop
jns
outsb
cltd
jne
es
dec
mov
stc
repnz
push
fsubl
adc
jbe
aas
add
jo
cld
fsubrp
jle
jae
int
and
cli
cmp
inc
jmp
push
cmp
xor
neg
testb
pop
dec
mov
loope
ret
pop
loopne
jae
loopne
fs
mov
cmp
pop
fmul
xchg
int
xchg
or
dec
aad
sbb
movsb
push
adcb
push
ret
dec
ja
pop
outsb
movsl
mov
fcmovne
or
dec
jecxz
add
in
mov
sub
mov
dec
je
lret
lret
lret
out
pop
cltd
movsl
enter
fldl
xchg
test
add
daa
cmp
xchg
lmsw
iret
in
loope
std
inc
scas
inc
addr16
sub
push
mov
popf
sub
sbb
jb
jae
shr
and
loopne,pn
js
lods
xchg
fisttpll
out
scas
mov
sti
mov
mov
push
pop
adc
std
jmp
mov
mov
loope
push
xchg
adc
repz
inc
push
pop
pop
hlt
push
aaa
in
addb
add
and
add
mov
and
test
xlat
jns
mov
xchg
mov
and
fnstenv
imul
sbb
loop
lcall
pusha
test
or
add
xor
dec
js
adc
xor
xor
in
adc
and
pop
mov
add
xor
sbb
cmp
ds
jp
movsl
push
daa
cmp
fincstp
xor
add
and
jnp
push
and
dec
gs
das
bound
inc
adc
call
mov
dec
sbb
and
mov
dec
mov
adc
subb
nop
adc
mov
pop
push
inc
xchg
push
movsb
xor
daa
push
xchg
mov
or
movsl
insl
test
inc
pop
out
mov
in
jl
add
idivl
inc
fistps
ds
lea
cwtl
adc
dec
and
out
mov
sbb
cmpsl
and
add
jnp
mov
mov
push
xor
xlat
imul
flds
in
xchg
sub
out
ss
mov
push
mov
icebp
pop
mov
pop
cs
xor
sub
sub
stos
mov
cmp
fldt
jmp
xor
test
adc
stos
jmp
push
sub
pop
pusha
or
out
sub
inc
xor
mov
mov
call
pop
inc
gs
mov
iret
in
jle
sub
jecxz
mov
push
mov
inc
popf
sbb
mov
lret
sahf
inc
pushf
pop
into
dec
imul
jae
ret
enter
and
es
lock
jne
pushf
sub
cwtl
xchg
sbb
pop
dec
mov
cmpl
xchg
pop
and
cmp
cmp
xchg
lret
js
div
loopne
sbb
or
sbb
imul
mov
cmp
add
cld
mov
sti
and
outsw
sub
push
inc
aaa
xor
addr16
addr16
int
lods
xlat
in
hlt
fs
mov
pop
xchg
enter
mov
shr
or
arpl
test
pop
sub
fcoms
jecxz
mov
imul
bt
inc
pusha
into
or
rcrb
movb
gs
add
pop
jle
movsb
lock
lcall
nop
cli
repz
cmc
pop
repz
cmp
sbb
stos
push
imul
xor
pop
push
xchg
test
repnz
xchg
cld
mov
int
xchg
jecxz
pop
sub
and
fistps
lock
or
inc
insl
dec
dec
test
push
adc
lea
sbb
mov
fdivrs
in
repz
jg
lahf
popf
iret
xchg
sub
xchg
out
mov
sbb
cmp
adc
mov
xor
inc
fldl
jge
xor
jo
jno
inc
pop
inc
mov
in
mov
shrl
fsubs
mov
mov
jo
pushf
adc
pop
xchg
stos
repz
fiadds
fisttpl
js
jge
outsb
mov
scas
orl
sbb
add
hlt
mov
inc
lcall
xchg
pop
mov
in
enter
jmp
ja
xchg
stc
mov
pop
insb
mov
in
clc
repnz
sti
push
xor
call
xor
pop
shl
das
jnp
adc
into
pushf
dec
and
mov
mov
ss
cmp
adc
test
jg
mov
xor
sbb
insb
push
xchg
popa
sub
cmc
jmp
cld
cmp
jle
pop
popf
adc
xchg
mov
cmp
daa
lahf
and
stos
xor
sti
test
dec
flds
sbb
fisttpl
ret
xchg
repnz
ds
das
mov
fst
cmp
push
xor
cmpsb
jae
leave
movl
dec
outsb
push
sub
repnz
add
fidivrs
mov
arpl
clc
xor
sbb
jb
push
rorb
shlb
inc
jecxz
and
test
mov
or
shlb
adc
out
add
mov
pop
sub
push
test
fwait
jns
insb
mov
pushf
xchg
cmp
lahf
cmpsb
scas
adc
sub
and
xchg
inc
out
std
ficoml
add
push
lahf
cmpsb
dec
adc
pop
insl
add
adc
movsb
xchg
adc
inc
js
mov
pop
ficompl
adc
and
ret
xor
iret
shll
pop
fs
cwtl
adc
shrl
dec
leave
jbe
xlat
cltd
xchg
idiv
cmpsl
sub
inc
lret
xor
lcall
xor
repnz
mov
or
roll
sub
mov
adc
xchg
xor
pop
xor
jmp
ret
into
stos
fiadds
sub
ljmp
pop
mov
push
divb
in
dec
pushf
jge
push
push
cmp
xor
or
mov
dec
inc
or
mov
ja
icebp
inc
stos
mov
xlat
jno
pop
ja
xor
cmc
sbb
jo
jle
lods
out
pop
push
push
lods
cmpsb
pop
cld
stos
fisttpl
sahf
mov
test
and
push
adcb
jge
inc
popf
arpl
arpl
adc
push
pop
lea
or
sbb
shll
mov
or
push
cli
fwait
out
stos
or
adc
mov
cmp
fwait
xchg
in
cmp
xor
nop
sti
addb
add
mov
cmp
inc
rcrb
dec
aad
xchg
add
rorb
repnz
out
scas
movb
repz
cmp
push
mov
out
or
in
jmp
sbb
jb
sub
jo
fwait
and
rcl
xchg
out
cltd
cld
add
cmpsl
repnz
cltd
xor
push
les
jg
dec
sub
cld
jns
scas
push
out
adc
lret
negl
lret
test
js
shrl
mov
imul
stos
dec
lods
fisttpl
aas
fbstp
lret
lea
aam
mov
scas
out
aaa
push
adc
jbe
aad
or
aaa
lret
mov
bnd
jnp
std
cwtl
mov
imul
es
fwait
int3
pop
int
pushf
leave
push
mov
xorl
int
mov
xchg
aad
bound
popf
jns
pop
aad
mov
jmp
adc
fs
repnz
xlat
adc
fdivl
adc
fsub
cmp
shlb
aad
mov
jecxz
nop
mov
cmpsb
lcall
adc
std
es
stc
ret
lea
js
ret
xchg
sub
inc
fucom
in
push
cmp
jge
out
clc
int3
aas
test
mov
jns
cld
lods
jno
movsb
call
test
sub
or
negl
daa
push
or
jecxz
aaa
bound
mov
hlt
sub
les
pop
sahf
dec
in
sub
aad
jb
add
mov
cmpsb
cmp
ljmp
lods
std
mov
out
add
xchg
cmp
mov
popw
fdivrp
test
callw
fwait
jg
roll
pop
fistps
sbb
pop
or
fucom
or
jnp
out
push
jno
sub
cmp
dec
cmpsb
adc
jb
cltd
xlat
mov
nop
cmpsl
lods
xchg
inc
add
loope
or
mov
mov
fxch
js
adc
xchg
cld
shrl
inc
cmpsb
ljmp
mov
lret
xchg
test
sarl
sbb
mov
pushf
add
jp
scas
xor
ss
or
fwait
js
divl
sbbb
inc
loopne
insl
aaa
ss
pop
lret
jns
pop
mov
inc
js
pusha
mov
jbe
push
xor
pop
dec
xor
push
inc
jno
mov
movsb
rcrl
mov
jmp
leave
pusha
add
jo
out
sbb
pop
mov
icebp
sub
aaa
dec
xor
jecxz
push
and
loope
dec
daa
pop
js
mov
test
jle
rcrb
xchg
mov
dec
sbbb
sbb
pop
and
out
pop
or
mov
push
pop
jmp
rcrl
jle
push
lods
or
nop
push
or
ja
sbb
jg
xor
addb
push
lock
out
inc
push
loope
jg
mov
jecxz
push
jmp
and
jbe
mov
cmpsb
jecxz
sbb
arpl
xchg
mov
dec
cmp
enter
lret
cmpsl
dec
pop
fists
or
inc
jl
xchg
inc
mov
xor
aaa
add
add
lea
push
pushf
dec
sub
jns
mov
addb
xchg
pop
loop
fidivs
cmp
jg
rclb
repz
sub
jne
shlb
shll
add
cli
imul
mov
cmp
lea
std
lret
xchg
je
pushf
pop
or
sbb
lret
and
dec
adcl
jmp
add
xor
mov
shl
sbb
mov
repz
sub
int3
sub
sbb
sti
cmp
sub
cld
into
lahf
fsubl
cmpsl
jae
lret
pop
out
sti
addr16
fs
bound
adc
sbb
mov
dec
daa
or
fisttpl
push
test
les
pushf
or
jmp
xchg
stc
lcall
fcom
aas
pop
push
out
cwtl
movsb
push
daa
bound
xor
sub
adc
jnp
daa
xchg
xchg
mov
lds
js
and
mov
and
shlb
mov
lahf
and
sub
pop
mov
push
or
adc
jbe
gs
dec
pop
add
int
inc
rclb
ret
popa
sub
dec
inc
sub
and
xchg
mov
es
pop
jg
xchg
sub
mov
cmp
cmp
mov
and
bound
cld
les
or
cli
lcall
arpl
repnz
aas
xor
cwtl
jg
sbb
jo
xchg
loope
imul
fldl2t
clc
icebp
xchg
mov
mov
bound
push
push
mov
push
mov
clc
pop
outsb
stos
and
xlat
sub
cmp
cli
daa
ja
clc
and
mov
dec
enter
jmp
or
jnp
notl
int3
mov
aam
out
xchg
push
jge
sarl
jnp
sbb
je
ds
flds
push
out
ljmp
dec
add
dec
mov
out
rclb
dec
push
jbe
ss
add
aam
or
add
addr16
stos
lahf
sub
mov
xchg
ljmp
dec
int3
push
data16
dec
fdivrs
push
dec
bnd
add
mov
pop
ret
jae
loop
adc
pop
push
rclb
lcall
mov
stc
xchg
add
out
and
mov
shrb
aad
xchg
stc
or
sbb
mov
xor
xchg
fmull
cmp
cmc
cmpsb
jle
cltd
cmp
mov
xchg
mov
jb
mov
jo
mov
fst
sbb
lret
ljmp
into
fwait
divl
aas
or
int
fidivs
mov
js
mov
mov
mov
sbb
cmpsl
imul
icebp
mov
popa
mov
mov
push
jp
xorb
add
pop
push
cmp
sahf
das
call
cmp
stos
pop
cmp
shll
aam
test
mov
cmp
push
push
loope
add
shlb
dec
shll
and
sbb
jne
fisubl
lret
out
or
mov
mov
lahf
or
int
cltd
pop
mov
fstl
add
sarl
lcall
ja
das
ds
out
xchg
lret
sub
mov
adc
pusha
add
cmp
vmread
xor
xor
lcall
es
push
inc
cmpsb
push
es
or
mov
pop
pop
jne
sti
push
jbe
xchg
push
xor
sub
jno
rolb
pusha
cmc
pop
ljmp
imul
cmp
daa
jmp
test
movsl
push
push
sbb
loopne
adc
jae
sub
test
je
pop
mov
cmpsl
imul
lea
bound
into
fstps
lret
jns
cmp
fwait
jle
es
mov
fstl
push
fs
xor
nop
and
or
push
pop
test
xchg
pop
cwtl
sub
data16
and
or
insb
mov
in
adc
mov
and
aad
stos
test
adc
lods
enter
dec
pushf
sti
cmp
jns
shlb
cmpsl
iret
int3
adc
cmp
push
jmp
cmpsb
ret
mov
aad
pop
loopne
cltd
xor
dec
push
or
fstl
mov
adc
fstps
dec
es
popl
aas
mov
dec
and
pop
pop
mov
in
push
stc
or
adc
or
imul
cmc
sub
lcall
scas
or
addr16
mov
mov
push
test
cmp
aaa
xlat
and
daa
mov
mov
cmp
ss
lds
and
cmp
insl
mov
in
xchg
aad
jle
sbb
roll
and
xorb
inc
inc
shlb
lods
movsl
push
jns
loopne
dec
xor
daa
notl
jl
pusha
mov
sbb
mov
aaa
and
scas
cld
xor
sahf
pop
js
out
mov
shlb
out
nop
pop
or
xchg
stos
push
aaa
add
sub
es
in
test
xchg
popa
or
enter
lret
dec
fsubs
sub
xchg
xchg
popf
pop
mov
dec
cmp
mov
lret
jne
add
in
pusha
sub
test
xlat
and
jg
and
inc
scas
dec
mov
into
mov
and
imul
repz
adc
push
jae
mov
dec
inc
push
call
inc
addl
push
cmp
or
insl
sbb
in
sub
xchg
loop
push
lcall
dec
stos
popa
bound
roll
dec
adc
and
or
or
aad
or
into
inc
mov
sbb
pop
mov
dec
dec
inc
cld
loopne
in
mov
or
sub
js
ret
add
test
xor
inc
movsl
adc
hlt
jp
pop
jns
andb
scas
cli
mov
bound
mov
xchg
push
xor
inc
insb
cmp
ss
fiaddl
movsl
jo
push
into
fisubrl
and
sub
mov
inc
arpl
in
jb
xchg
xchg
subl
mov
in
cmp
xchg
and
imul
cmpsl
inc
repnz
add
stc
sti
je
xor
push
mov
lea
inc
mov
pop
loop
xor
repz
dec
jge
in
popf
sahf
test
in
idiv
adc
les
inc
int3
test
dec
scas
insl
sub
dec
pop
pop
stos
cmp
push
in
movl
cmpsl
xchg
cmpsb
fadds
adc
xchg
push
adc
aad
jne
pop
jecxz
repz
call
out
or
and
and
in
repz
leave
scas
int
jl
push
inc
dec
fmull
cwtl
shrb
rolb
out
shlb
jb
pop
lcall
fimull
sub
incl
fcompl
cmp
xor
xchg
xchg
push
inc
mov
pop
jo
jp
cli
mov
jg
push
loopne
or
and
ja
ljmp
xchg
jne
jne
mull
sbb
add
mov
int3
hlt
push
cmpsl
pop
sar
xor
xor
repz
jmp
imul
into
mov
popf
orb
or
pop
xor
sub
xchg
movl
jg
sti
loope
sbb
jb
jb
cmp
ljmp
cltd
push
out
scas
scas
xor
mov
cmp
add
xor
dec
jle
add
mov
mov
arpl
pop
negl
scas
inc
out
push
sbb
mov
cmp
fmuls
mov
ds
jge
mov
pop
mov
cmp
ja
and
shlb
bound
cltd
mov
mov
jne
lds
rcr
sbb
icebp
pop
adc
pushf
sub
dec
gs
ret
stos
mov
mov
mov
lea
mov
pop
sub
and
pop
adcl
repz
ret
xchg
adc
pop
test
mov
cmpsb
and
inc
fucom
lock
out
push
xchg
sbb
fxch
stos
inc
sub
sbb
jns
and
sbb
test
and
test
mov
ss
js
jl
mov
test
sub
mov
enter
lret
push
xlat
cld
pop
rcrl
scas
xchg
ja
movsl
or
outsl
cmpb
leave
and
mov
stos
push
pop
insb
cli
aas
sti
mov
xor
inc
orl
popf
cmp
rorl
insl
loopne
imul
add
push
dec
cmp
add
fs
ret
icebp
push
cmp
test
movsl
insb
pop
loop
lahf
test
adc
flds
cmp
loopne
shrb
push
mov
push
hlt
lahf
mov
cmp
mov
adc
dec
cmp
push
jb
dec
test
push
je
arpl
sahf
xor
xchg
pop
xchg
push
cs
roll
xchg
mov
mov
movsl
shlb
in
xchg
jnp
cwtl
inc
shll
out
cmp
js
andl
push
fnstsw
shl
aas
movl
dec
lods
stos
pusha
in
stc
mov
lcall
je
fstpl
ja
add
or
mov
in
mov
lret
pop
mov
mov
inc
fmull
and
idivb
cmp
dec
sbb
stc
ds
or
xor
mov
hlt
mov
fsubrs
test
mov
xor
add
inc
test
dec
xor
xchg
mov
andb
mov
jnp
xchg
lret
jbe
ret
pop
ds
stc
lock
aas
jae
push
lahf
ror
popa
xorb
test
push
cmp
mov
push
jmp
add
popa
sub
jl
jns
cmp
cmpsb
movsl
mov
xor
and
cs
xor
mov
push
pop
push
subb
call
push
cmpsb
arpl
push
adc
movsl
mov
cmpsb
and
pop
outsb
adc
cmp
icebp
or
gs
push
jmp
push
mov
adc
sub
jnp
fbld
ficomps
lods
popa
jb
mov
lods
movsb
loopne
sbb
subb
or
mov
inc
add
fisubs
sub
and
ja
mov
pop
enter
xchg
imul
xchg
mov
add
scas
add
pop
and
fbstp
push
xchg
es
push
pusha
xorl
sbb
sbb
lret
sbb
xor
mov
fs
xor
daa
popl
xor
sbb
mov
sub
movsl
fbstp
sti
mov
lahf
out
sbb
outsb
mov
cmp
mov
pop
sub
mov
loop
pop
je
sub
out
cltd
idivl
pop
in
lret
ret
fimull
clc
jg,pt
lahf
pop
dec
lahf
jl
add
and
xor
sbb
ss
push
pop
rcrl
inc
adc
bound
push
addl
jae
inc
stc
xchg
inc
ds
mov
int
call
cmp
mov
mov
int
push
push
call
pop
add
sub
xchg
mov
jo
push
mov
leave
jne
test
and
mov
mov
adc
inc
sbb
jle
sub
imul
dec
notl
push
mov
sub
xchg
mov
push
xchg
pop
jge
out
sbb
jecxz
inc
aaa
jle
xchg
mov
push
mov
lcall
lods
daa
pop
std
jns
movsl
sti
adc
adcb
jge
gs
aad
iret
inc
cmp
and
test
clc
sub
mov
sub
daa
push
xor
lds
divl
push
int
jnp
sub
fcmovnu
clc
lock
jns
xchg
jp
or
dec
les
sbb
aad
or
cli
sub
xchg
mov
push
ja
arpl
insb
lods
daa
or
push
adc
test
outsl
sub
sahf
jo
rorl
dec
daa
inc
dec
pop
mov
adc
mov
pop
dec
xchg
into
cmpsb
aam
fcmovu
nop
adcl
insb
ss
sbb
push
jne
into
out
and
cwtl
xlat
jp
cmp
test
popf
jg,pt
cmp
pop
push
push
xorb
shrb
sahf
xchg
hlt
lds
and
inc
inc
inc
cld
or
test
xor
popa
ds
push
ds
mov
out
cmp
in
lods
mov
je
xor
pusha
dec
xor
cmp
lcall
popa
sbb
push
mov
es
pushf
insl
hlt
aad
jns
inc
cmc
imul
pop
ficompl
mov
jno
mov
push
repz
cmp
fists
sub
movsb
xor
dec
adc
imul
in
es
andb
vpunpckhdq
push
stos
sbb
ljmp
mov
icebp
test
in
call
add
movsl
imul
lods
xor
mov
mov
adc
mov
xchg
push
push
addr16
ret
adc
pushf
repnz
scas
test
push
lock
loop
jb
or
mov
lahf
mov
rclb
xchg
outsb
aas
xor
movsb
push
aad
sbb
iret
fwait
xchg
jo
inc
outsb
dec
sti
ficompl
call
push
mov
sub
dec
add
loopne
sbb
mov
jae
mov
in
adc
push
outsl
add
and
dec
cmp
pop
push
call
inc
adc
and
popa
xchg
mov
idiv
nop
adc
addr16
push
pop
loopne
out
jae
cwtl
rcrb
ja
lahf
or
or
in
jno
add
jbe
pop
mov
pusha
xorl
push
sbb
cmp
scas
xchg
sbb
pop
or
dec
xchg
pop
mov
cmovnp
imul
dec
cmp
mov
stos
and
jo
adc
int3
cld
lods
push
add
in
ret
mov
add
movsl
adc
les
popf
div
xor
pop
xchg
push
sub
ja
cmp
sahf
push
xchg
mov
cmpsb
pop
popa
jae
out
push
inc
xchg
jb
sahf
dec
enter
ss
shrb
incb
and
pop
cmpsb
imul
xchg
jne
aad
mov
lea
lcall
xlat
ds
test
or
je
mov
leave
test
outsl
add
dec
sub
cmp
aas
xor
sarl
sbb
xchg
and
mov
sbb
shrl
mov
notb
movsl
fdivr
push
mov
sar
pop
xchg
mov
dec
inc
lds
pop
lods
pop
and
popa
fs
cmp
popf
sbb
aad
push
cmp
jge
test
push
xorl
cs
mov
cs
sub
in
ret
in
sbb
sbb
jmp
sub
cmp
xorb
add
xor
fwait
jb
sbbl
mov
jnp
pop
add
fs
sbb
xor
dec
imul
stc
dec
rcr
mov
movsl
sub
jle
jmp
pushf
scas
test
aad
scas
dec
sub
xchg
dec
dec
mov
lret
test
sbb
notb
mov
jmp
add
mov
cmp
arpl
pop
out
inc
add
call
adc
xchg
xchg
mov
or
pop
mov
lock
loop
pop
stos
adc
insb
hlt
je
nop
or
in
test
loop
loopne
or
out
fstps
leave
ss
mov
push
lods
insb
sbb
iret
imul
sub
call
push
iret
ret
push
xor
loope
pushl
xor
arpl
ss
pop
aaa
inc
call
out
sbb
aad
dec
pop
cmp
xchg
adc
shrl
pop
out
shr
lret
aas
mov
and
je
pushf
int3
movsb
mov
mov
cmp
jmp
adc
hlt
add
fs
dec
icebp
jl
ss
adc
xchg
hlt
mov
sbb
mov
inc
xor
test
negl
mov
adc
ret
mov
cmc
pop
lret
sub
movsb
test
scas
sti
mov
and
imul
cmp
and
dec
sub
and
ret
enter
sbb
inc
mov
rclb
adc
icebp
into
mov
xchg
jne
pop
jg
dec
nop
movsb
leave
xadd
idiv
push
xchg
dec
or
scas
push
jne
adc
jnp
test
stos
push
and
repz
mov
loope
sbb
sarb
sbb
gs
cmp
push
dec
repnz
push
cmc
movaps
wrmsr
mov
mov
jecxz
sub
mov
push
cmp
nop
xor
add
in
data16
testl
scas
and
cmp
add
jae
lea
pop
mov
xor
test
out
insl
repnz
outsb
jle
sbb
das
sbb
or
sub
mov
xlat
sahf
or
xor
out
cmp
adc
mov
leave
jb
or
adc
xor
adc
xor
loope
xor
xor
popf
fdivl
cmpsb
lock
movsb
mov
in
or
xchg
add
inc
mov
add
mov
mov
leave
push
fwait
popf
fs
stos
sbbb
imul
or
cmp
add
mov
jl
gs
rcll
bound
mov
outsb
cmc
sti
sarl
sbb
rcll
rolb
push
jnp
loop
or
aaa
push
add
xchg
mov
mov
scas
cmp
mov
lods
mov
mov
in
stc
adc
add
add
mov
pop
scas
sub
mov
jl
iret
out
pop
insb
add
sub
push
and
sub
xchg
lret
mov
xchg
sbb
pusha
lea
or
les
push
mov
in
scas
out
pushaw
adc
dec
fisttpl
sbb
jle
in
inc
xchg
nop
pop
xor
cmp
cmp
dec
inc
or
rcrl
cmp
cs
fs
lret
hlt
inc
in
or
icebp
push
xchg
xor
mov
rep
fildl
popa
add
pop
fdivrl
outsl
push
jns
jle
cmp
push
adc
fs
imul
shlb
jne,pn
shl
loop
in
push
pop
lea
dec
sub
cmc
dec
int3
jne
add
dec
sbb
add
and
stc
xchg
xor
sti
inc
dec
gs
movsl
jne
movsb
and
mov
popa
jnp
mov
push
rcrl
jp
iret
pop
mov
rclb
pushf
sbb
cli
out
hlt
movsl
mov
mov
lods
fildll
outsb
xor
repz
popf
lret
scas
cwtl
mov
xchg
out
mov
fs
es
sub
sbb
mov
mov
call
stos
pop
push
mov
jb
add
rol
in
ficomps
test
add
sbb
lds
mov
rclb
popa
aam
lret
in
das
outsb
adc
iret
xchg
out
popf
popf
mov
push
sbb
in
popf
out
mov
dec
pop
pop
aaa
add
imul
insb
sbb
jnp
push
mov
aam
xor
fildl
or
mov
testl
in
and
pop
hlt
xor
ret
cld
les
pop
sahf
xchg
push
jne
mov
icebp
scas
mov
sbb
mov
xchg
loop
hlt
mov
jmp
mov
cmc
into
add
sub
imul
adc
out
mov
mov
jecxz
movsl
loop
push
mov
add
testb
dec
hlt
inc
mov
dec
mov
or
xchg
and
adc
push
pop
movsl
sbb
shlb
popf
inc
or
in
aad
jne
imul
std
add
add
pop
add
jp
lahf
cltd
aad
inc
mov
and
lods
int
aas
int
sbb
sub
movsl
in
movsb
addr16
inc
inc
push
iret
nop
lret
in
sbbl
add
jecxz
dec
call
jmp
cld
push
inc
mov
cmp
add
push
lret
gs
sbb
and
inc
push
xor
test
mov
out
cmpb
ljmp
sbb
fistpl
and
pop
lret
jbe
xchg
popa
mov
push
pop
mov
dec
movsl
lahf
push
xor
test
push
inc
outsb
cmp
outsl
flds
cmp
loopne
imul
fimull
mov
and
cmp
fiaddl
test
popa
xchg
mov
sahf
mov
imul
jmp
fcmove
cli
sbbl
jg
xchg
adc
xchg
mov
stos
pop
mov
in
inc
jns
add
jb
pop
mov
dec
js
pop
aad
cli
mov
add
popa
out
fnstenv
dec
fs
test
add
or
dec
pushf
lret
arpl
arpl
ret
mov
mov
rcrl
pop
not
mov
das
inc
into
or
mov
and
add
je
pop
fcompl
jl
or
mov
inc
push
fsubrl
cmp
insb
inc
mov
fsubrl
enter
mov
add
inc
lods
scas
ret
push
es
pop
es
arpl
mov
xchg
popf
cmp
jne
xchg
sub
or
push
shll
into
push
mov
ljmp
int
adc
jbe,pt
sub
out
sub
cmp
jmp
ret
and
repz
sub
cwtl
push
or
daa
pop
cbtw
jecxz
ror
faddl
jp
inc
hlt
aaa
xorb
sub
xor
xchg
adc
xchg
jmp
lahf
cmp
arpl
stc
push
or
fldt
sub
and
popf
inc
shrd
sub
aam
and
adc
addr16
sbb
sub
fcoml
mov
fists
and
mov
mov
adcb
xor
lock
pop
and
daa
adc
xchg
stos
add
mov
fcomi
out
and
shrb
mov
jp
and
outsb
or
mov
subl
inc
xchg
jb
in
or
lds
xchg
lods
push
pushl
aaa
xorb
mov
scas
cmp
int
dec
pop
sbb
push
mov
adc
jbe
int
insb
cltd
push
test
mov
scas
and
push
jnp
xor
cli
stos
adcb
inc
mov
jbe
cmpsl
dec
cmpsb
repz
nop
and
icebp
push
les
sbb
mov
rorl
and
mov
push
enter
in
es
and
and
lahf
dec
inc
int
notl
test
addl
popa
jae
sub
out
xchg
mov
push
loop
sub
out
test
sti
cwtd
mov
dec
outsl
add
js
cwtl
jbe
mov
mov
dec
pop
test
push
es
pusha
ret
es
mov
popf
mov
loopne
mov
into
loope
repz
mov
jg
sub
repnz
lret
mov
loope
push
repz
adc
loope
jb
or
loopne
ret
iret
mov
push
inc
das
cltd
inc
inc
lcall
push
fists
lcall
push
and
cmp
mov
jl
push
push
inc
xchg
aad
mov
push
inc
add
fs
cmpb
xchg
lret
push
ficoms
dec
stc
push
lods
inc
and
popf
add
lcall
or
out
rcr
cmpsb
repz
aam
mov
rcl
fdivrp
imul
popf
out
movsb
mov
mov
xchg
push
outsl
shll
sub
mov
add
js
pop
sbb
fwait
pop
fnstsw
test
fs
add
pop
leave
sub
mov
lea
int
mov
mov
jbe
pop
mov
fcmovne
jge
xchg
icebp
sahf
ret
add
shrb
lcall
or
lret
popa
outsl
mov
push
arpl
add
enter
in
shll
ror
adc
xchg
out
lods
aam
add
int3
jge
sbb
faddp
and
xchg
jge
movsl
test
mov
and
les
mov
push
mov
lcall
sbb
fwait
test
sbb
lods
mov
add
cmp
or
je
sub
adc
popa
pushf
jb
add
arpl
sbb
sub
add
adc
enter
push
pop
fs
stc
pop
or
stos
inc
call
stc
das
cmc
pop
fsubl
or
cmp
fnstcw
mov
dec
xor
aaa
jbe
inc
xor
dec
dec
test
out
sub
dec
mov
rcrb
test
push
xchg
pop
loop
push
or
hlt
sarb
das
test
nop
pop
rcrl
das
test
cmc
cmp
sbb
push
sub
dec
adc
xor
imul
leave
xchg
and
inc
sarb
sub
push
leave
jbe
cmc
mov
bound
mov
int
shll
jmp
pop
rcrb
imul
adc
sbb
cmp
jno
or
xchg
ffreep
cmpsl
es
es
adc
stc
rcl
cmpsl
add
lret
ret
adc
and
and
add
mov
stos
mov
dec
fwait
cmp
push
dec
jmp
mov
jbe
mov
movsb
pop
sub
jo
sbb
popa
dec
int3
xchg
call
rcll
push
repz
pop
lahf
aaa
inc
inc
lret
jb
ss
cmp
mov
insb
fstpl
lock
repz
pop
insb
int
add
mov
sub
push
cmp
mov
dec
jo
cld
movsb
jle
into
nop
std
push
shll
push
cmp
mov
mov
mov
testl
les
fisttps
mov
mov
mov
js
sbb
lods
loopne
icebp
mov
pop
mov
dec
jo
xor
pcmpeqb
mov
pop
je
mov
jo
push
jo
mov
dec
in
push
repz
daa
push
add
pop
inc
push
mov
or
jnp
ret
mov
rcrb
sub
int3
aad
movsl
xchg
stos
mov
es
lcall
call
imul
bound
xor
or
pop
jae
icebp
ds
ds
mov
sbb
or
push
popf
mov
xor
fadds
jge
fwait
shll
jae
stc
inc
mov
or
push
xlat
add
cwtl
outsb
gs
or
fiadds
dec
aam
mov
adc
lahf
flds
aaa
mov
aam
fs
push
add
popf
pop
pop
shrl
jl
and
push
decl
stos
sbb
int3
push
loop
jge
or
imul
lret
lcall
jmp
arpl
loop
scas
in
out
add
pop
push
pop
insl
jnp
mov
and
lcall
sbb
stc
and
lret
fsubrs
enter
inc
ja
sahf
shl
in
cwtl
adc
test
xor
fwait
aad
adc
pusha
dec
mov
and
and
jnp
and
lds
loopne
mov
cltd
push
hlt
loop
imul
mov
lea
outsl
cmc
xchg
jno
popa
inc
dec
imul
push
sub
mov
imulb
mov
jnp
bound
mov
adc
repz
rorb
fucomip
loop
jns
cld
and
js
mov
mov
in
scas
test
in
xchg
cwtl
add
mull
push
lret
in
ja
mov
or
cs
fwait
jmp
jns
mov
xor
cmp
daa
pop
inc
lds
mov
adc
push
fisubrs
jmp
xor
or
arpl
mov
pushf
mov
js
cmp
lahf
negb
inc
and
or
sti
sub
stos
js
inc
sarb
xchg
int3
jo
jge
lds
xor
outsb
xchg
mov
enter
imul
jl
xor
and
outsb
fisubrl
cmp
enter
cmpsl
ret
insl
adc
shll
xchg
mov
les
xchg
xlat
lret
fcmovnu
adcb
lods
adc
test
clc
into
add
sbb
lds
push
cltd
mov
out
fcomi
xchg
xor
outsl
lret
ficoml
cmp
cmp
push
testl
inc
shll
fwait
xchg
mov
test
fnsave
xchg
push
cltd
inc
stos
add
loopne
fcoml
mov
jbe
jo
push
addr16
and
sbb
enter
scas
or
cmc
push
cmp
fs
movsl
sub
jnp
loop
xchg
and
ljmp
adc
mov
xchg
mov
sub
jle
sub
push
ret
pop
pop
lahf
adc
loop
mov
push
or
nop
leave
daa
test
xor
pusha
out
and
add
mov
test
jl,pn
fcom
push
std
mov
scas
stc
lret
imul
push
lock
add
jb
adc
je
sub
xor
adc
icebp
xchg
mov
pop
pop
pop
pop
orl
push
cmp
mov
inc
adc
jo
lret
outsb
int3
or
test
pop
push
imul
sub
xchg
dec
xchg
pop
jb
pop
xchg
mov
fwait
dec
dec
lods
stos
int3
mov
pop
push
sbb
mov
loopne
xchg
loope
std
sar
jbe
js
or
movsl
in
int3
ja
rcrl
adcl
or
mov
and
les
pop
cmp
inc
stos
add
dec
lret
shrb
bound
icebp
pop
jmp
or
popf
popa
insb
push
xchg
inc
adc
lods
or
ja
int3
ret
push
mov
inc
add
movsb
rclb
lea
dec
lods
cmp
test
lcall
jnp
cmp
stos
mov
stos
and
inc
daa
fs
rorb
sbb
mov
mov
daa
aaa
data16
cmovne
jb
or
add
pop
lds
mov
lea
push
mov
iret
xchg
mov
mov
cmc
add
mov
xor
rcrb
fistl
dec
push
jecxz
xchg
sbb
inc
add
and
out
jl
jle
outsl
pop
push
lock
das
sub
or
outsb
arpl
pop
mov
in
lods
and
xchg
stc
movsb
repz
sbb
cmpsb
test
imul
inc
adc
adc
testb
push
pop
test
mov
popl
jae
lods
mov
adc
pop
cmp
add
adc
rcl
add
frstor
hlt
mov
aaa
xor
xchg
mov
cmp
ja
sarl
mov
add
cmp
hlt
pop
sbb
and
jmp
testl
adc
dec
test
gs
es
mov
dec
stc
pop
mov
sti
push
aas
and
dec
shl
push
leave
mov
mov
orl
add
mov
cmc
mov
xchg
dec
loope
iret
mov
push
lods
cmp
scas
jmp
fimull
xor
orl
jno
fwait
insl
or
sub
movsb
xchg
es
add
sbb
sub
mov
pop
or
mov
jp
iret
or
or
test
push
sahf
fadds
mov
movsl
mov
or
fcomip
iret
pop
sub
scas
jnp
mov
repz
jo
mov
out
cs
pop
push
cmp
imul
dec
lods
dec
sub
jl
mov
jne
jmp
imul
sbb
jo
dec
bound
scas
je
and
je
or
in
es
out
lock
sub
xchg
inc
inc
std
je
das
push
sbb
lret
push
push
dec
ljmp
subl
xor
call
and
jnp
xchg
xor
in
xchg
sub
addb
xlat
fnstsw
jne
xor
mov
arpl
xor
bound
or
mov
ja
mov
mov
aas
jne
xchg
pop
jns
or
xchg
cld
sbb
movsl
and
lret
out
or
lret
jl
xchg
jns
lds
scas
stos
lret
pop
scas
lret
mov
pop
cmp
iret
repz
loope
cmp
nop
push
push
and
mov
test
cli
fistpl
sub
push
nop
xchg
mov
stc
orl
pop
push
or
out
xor
jmp
orl
xor
daa
daa
dec
cltd
jmp
xchg
xlat
ret
pop
inc
addr16
xchg
push
push
stos
ror
sbbl
xchg
in
nop
rorl
add
cmp
cld
xchg
loope
jl
adc
lods
hlt
jo
mov
in
addr16
imul
xchg
fs
mov
inc
or
inc
adc
push
ja
sub
cmc
or
test
push
add
fistl
sbb
xor
loope
lods
add
jns
mov
rclb
jg
add
ret
cmp
cwtl
or
and
xor
sub
jns
jae
sti
push
cmp
aaa
mov
shrl
scas
daa
or
jge
dec
out
pusha
xor
sub
fnstenv
les
and
sub
cmp
sbb
ret
mov
cld
inc
xor
xor
pop
in
cld
mov
int3
cwtl
jl
and
dec
stc
ss
je
mov
inc
scas
movsb
xchg
push
fadd
stos
sub
xlat
aaa
and
adc
mov
in
mov
pop
scas
imul
sub
aaa
jmp
out
cltd
gs
and
aas
cld
add
mov
pushl
inc
scas
test
test
jb
cltd
mov
movsb
pop
nop
sbb
inc
outsb
popf
pop
xor
xchg
xlat
daa
gs
pop
mov
gs
sar
jne
jle
mov
or
push
scas
lds
pop
mov
adc
jns
enter
add
repnz
cmp
stos
inc
xor
je
data16
mov
fnsave
sbb
sub
inc
in
scas
lret
mov
stc
mov
xchg
iret
jge
insl
push
pop
push
hlt
dec
push
push
jg
jecxz
sub
ror
or
cmpsl
dec
loope
ds
push
rcll
jae
call
cmp
outsl
xchg
icebp
rcll
adc
cmc
mov
int3
stos
repz
adc
ret
and
cli
cmp
sbb
adc
pusha
mov
fistl
inc
jmp
rorb
and
push
pushf
aaa
xorl
dec
inc
pushf
push
push
add
add
rorb
es
clc
pusha
cmp
addr16
push
cmp
fs
add
xchg
leave
sbb
es
aam
fiadds
imul
xchg
bound
cmc
mov
jp
mov
inc
insb
cld
jl
imul
outsb
scas
or
pop
shl
dec
sub
lods
xor
pop
fcompl
push
xor
ret
mov
or
sub
jb
sti
rol
sbb
dec
xor
sub
mov
movsl
in
push
mov
sbb
push
cs
sub
push
fdivr
test
insb
adc
mov
dec
popf
mov
rorl
lahf
xchg
fdivrl
rolb
insl
js
movsl
mov
inc
or
inc
sub
or
push
push
lock
adc
adc
push
pushf
ss
rcrl
out
push
cltd
sub
lods
sub
or
lods
sub
mov
repz
lea
std
test
pop
roll
add
out
jae
jae
inc
lea
repnz
popf
out
js
out
inc
ds
fisttps
fisubrs
mov
clc
test
imul
cmc
out
xchg
movsl
and
test
cmc
push
cmpsl
cmp
out
les
jl
cmpsl
jae
inc
mov
xchg
stc
or
xlat
push
icebp
adc
movsl
add
add
outsb
stos
ficoms
mov
out
sub
and
cltd
or
cli
div
pop
int3
icebp
movsb
leave
mov
addr16
jge
out
xor
xor
jmp
int3
imul
test
lret
mov
push
imull
cltd
pop
les
and
inc
inc
xor
inc
dec
test
push
loopne
or
or
frstor
psrlq
lahf
push
jno
dec
or
mov
addl
inc
cwtl
in
mov
cmp
addl
lret
pop
mov
sbb
mov
inc
cmp
and
mov
cltd
xor
in
insb
jp
dec
or
movb
rolb
and
aam
sarl
notb
mov
mov
push
stc
sbb
jecxz
or
jnp
into
lcall
cmp
sbb
mov
stos
es
repz
xchg
jp
and
mov
lods
mov
repz
mov
sub
sbb
mov
sbb
sbb
mov
negl
mov
dec
cmp
popa
bound
idiv
jp
lods
ds
arpl
out
fwait
sbb
add
mov
xchg
sub
jne
adc
xchg
mov
repnz
popf
mov
xor
es
in
in
mov
add
mov
or
into
xchg
lods
rcl
setle
loopne
sbb
mov
lret
add
pop
jge
repnz
aas
test
and
push
push
mov
fisubs
fwait
pop
neg
inc
ja
repz
das
xlat
mov
and
cmp
mov
lock
or
mov
ss
add
test
push
push
inc
adc
push
sub
pop
xchg
mov
jns
cmp
testl
dec
loopne
lret
xorb
xchg
cmp
xchg
call
out
int3
lock
ljmp
in
and
add
lcall
aad
mov
sahf
test
mov
xor
into
pop
xor
sub
or
xor
xchg
lds
xchg
or
pop
mov
imul
je
cmp
mov
push
push
aam
das
out
mov
out
inc
xorb
cmp
mov
jo
daa
mov
cmc
cwtl
fpatan
loope
in
int3
lods
repnz
enter
rolb
push
push
clc
mov
in
mov
aad
sbb
insb
adc
aaa
push
lds
dec
lock
mov
das
ret
int3
das
adcb
mov
int3
pop
push
lods
xchg
lahf
push
jle
push
xchg
mov
popf
fnstcw
ljmp
mov
or
pop
testl
fs
jb
dec
into
sti
std
ret
mov
leave
outsl
or
into
sub
pusha
test
scas
leave
add
mov
sub
iret
xchg
inc
flds
enter
dec
in
or
xor
or
call
push
inc
inc
pop
and
jge
xor
and
arpl
aas
add
movsl
test
dec
push
push
push
xor
cltd
inc
stos
ja
inc
movsb
inc
push
popf
jl
xchg
outsb
pop
pop
and
jb
fistl
and
add
lret
stc
fstp
dec
xchg
xchg
jmp
fildl
cld
jne
ljmp
push
cmp
push
xchg
xchg
adc
jno
insb
fistpll
cmpsb
in
popf
inc
lret
sbb
loopne
sub
sbb
xchg
sbbl
faddl
out
es
imul
insl
insb
jbe
test
into
push
mov
aaa
dec
jmp
push
lods
sbb
sahf
xlat
push
pop
mov
mov
push
push
mov
call
aad
xchg
sub
std
cmp
mov
inc
mov
pop
cld
rclb
xor
and
mov
jae
adc
daa
xlat
in
jo
mov
add
jae
and
js
sub
outsl
add
cmp
jmp
mov
cmp
je
pushf
ss
sub
mov
sbb
out
dec
nop
fadds
jae
jp
lods
pusha
call
sbb
push
dec
arpl
and
pop
rcrb
push
call
dec
and
imulb
negl
out
dec
pushl
and
addb
and
dec
aas
pop
mov
addr16
sbbb
test
outsl
push
dec
dec
mov
imul
jg
add
lods
adc
iret
jo
jae
jp
aam
lods
jne
sbb
cmp
jbe
rcrl
xchg
cmc
sub
xchg
and
hlt
push
xor
push
aam
add
out
fdivl
stc
and
fcomps
jmp
test
pop
jmp
test
popf
data16
inc
shlb
fsubrl
jbe
js
jp
jl
xchg
test
push
inc
jecxz
insl
insl
sbb
in
dec
sub
lahf
xor
aas
test
pop
ret
jg
stos
jmp
pop
adc
pusha
cmpl
mov
inc
popf
lret
nop
aam
jle
add
inc
dec
cmpsl
test
or
mov
lcall
mov
cmpsb
mov
and
adc
jb
into
aam
jns
sbb
cmpl
jp,pn
dec
fdivr
rcrb
adc
mov
pop
mov
stos
sub
jo
inc
cmc
ss
cmp
repz
jb
mov
xlat
cmp
in
js
dec
push
mov
stos
add
imul
mov
cmpsl
mov
mov
cmpsl
mov
fstpl
add
or
shl
sub
add
cmpsb
jge
sbb
sub
xchg
mov
aas
andl
sbb
push
mov
fnstenv
inc
lret
jne
inc
sar
fucomi
sbb
pop
test
lret
mov
mov
testl
aas
pop
dec
gs
dec
dec
mov
and
mov
lcall
xlat
and
mov
sbb
test
cmp
out
repnz
and
xlat
push
into
mov
inc
xchg
sub
fidivrs
xor
insb
jnp
xor
inc
jno
in
inc
lret
push
cs
mov
in
pop
out
xchg
mull
sub
pop
push
dec
daa
cli
ret
push
push
idivb
dec
inc
pushf
xor
mov
adc
push
cmpsl
dec
pop
out
cltd
nop
or
mov
cmpsl
lret
mov
mov
jbe
and
in
adc
sbb
loop
lret
mov
call
clc
push
jl
in
ljmp
pop
mov
inc
mov
pusha
jl
sbb
testl
push
cmpsb
jmp
mov
mov
out
dec
fcmovb
add
push
out
cmp
aad
mov
mov
push
shlb
popf
repz
mov
rcr
int
rol
push
adc
cwtl
rorl
sub
jne
scas
shll
pushf
mov
iret
flds
mov
adc
movq
enter
cmc
cwtl
xchg
or
pop
adc
xchg
loop
mov
movb
pop
inc
adc
in
ss
popf
jmp
insl
mov
pop
mov
pop
sbb
mov
mov
fs
xor
sub
xchg
fsts
sbb
mov
mov
pop
scas
mov
sbb
cmp
int3
cs
imulb
lcall
push
mov
test
cwtl
cmp
sbb
outsl
add
sbb
dec
pop
int3
mov
movsl
mov
xor
push
repnz
mov
lcall
popa
pusha
push
xchg
adc
pop
dec
pop
inc
je
cmp
add
mov
into
rcrl
add
xor
shlb
outsl
cmc
call
push
hlt
fwait
clc
mov
push
lea
push
or
mov
mov
add
and
cli
or
xor
push
or
rorl
lcall
sti
or
jo
adc
roll
lret
lods
mov
daa
xchg
sub
add
jo
int3
out
pop
jns
dec
sbb
inc
sbbb
xchg
mov
pop
pop
popa
xchg
jne
mov
idivb
push
hlt
je
pop
rclb
test
jno
jb
cmp
and
movsl
ds
dec
dec
pusha
ja
jnp
adc
pop
inc
add
mov
jg
lahf
xor
mov
ljmp
adc
inc
je
add
cmpsb
fwait
xor
lods
push
add
scas
xchg
adcl
mov
push
stc
pop
push
repnz
jne
jno
addr16
je
push
jle
addl
mov
push
and
roll
and
adc
icebp
mov
loopne
mov
xor
test
add
push
sbb
into
ja
test
xchg
out
and
mov
fwait
cltd
jl
mov
and
popa
push
dec
mov
popf
pop
pop
or
pop
addr16
jnp
aas
sahf
cltd
scas
mov
fadds
shl
and
notb
inc
and
movsl
insb
in
mov
pop
mov
insb
out
test
jl
dec
dec
scas
jbe
loop
popa
in
rorl
push
push
mov
mov
xchg
dec
cwtl
push
and
aam
out
jg
lods
je
int
cltd
subb
ds
scas
shlb
hlt
inc
xchg
rcr
push
xabort
arpl
repnz
imul
and
cmp
out
add
inc
adc
scas
ljmp
sbb
clc
cmpsl
jmp
pop
mov
out
lea
cmpsl
add
cltd
arpl
jl
ljmp
and
pop
gs
loopne
inc
pop
cld
mov
dec
mov
div
repnz
xchg
push
int3
inc
sbb
ds
hlt
std
daa
out
out
insb
sub
lahf
mov
in
or
push
and
or
fcmove
sti
lods
mov
sbb
push
push
test
inc
inc
mov
ja
cli
mull
js
repz
int3
stos
and
sbb
push
xchg
xchg
int
xchg
shlb
adc
jae
das
adc
sbb
stc
or
lcall
xchg
insl
xchg
or
cmpsb
movsb
lock
and
jb
push
lock
rcll
insb
push
fsubrs
mov
cmc
lret
cltd
jg
pop
test
pushf
mov
stc
cmp
dec
adc
repz
addr16
dec
cmp
jmp
test
popf
or
mov
test
mov
mov
ljmp
gs
cmp
jbe
pushf
call
popf
mov
fidivl
lea
les
jecxz
daa
mov
pop
fistpll
inc
mov
xchg
and
loope
nopl
dec
sbb
inc
out
cmp
mov
cs
inc
or
lock
in
sahf
adc
xor
pop
cmp
cmp
adc
sbb
xor
pop
cs
push
aad
inc
xchg
pop
pop
or
adc
push
out
and
push
out
xchg
xchg
jbe
ficomps
jae
adc
clc
inc
mov
jge
adcl
push
push
xor
out
sub
pop
popa
adc
or
stos
ficomps
cmp
call
cmp
int
in
sub
mov
testl
cmp
mov
lods
xchg
xlat
jp
xor
jo
pop
pop
jg
insl
fsubrp
cwtl
jmp
mov
test
faddl
jg
mov
mov
imul
pop
sub
mov
or
in
leave
inc
or
jns
xchg
cs
cmpl
mov
test
fwait
mov
repnz
cmp
repnz
mov
scas
inc
sub
lods
fwait
mov
mov
lahf
inc
sbb
push
push
xchg
popa
jecxz
repz
push
jecxz
sar
fidivl
add
mov
cmp
repz
push
adc
xchg
mov
lahf
jbe
fsts
pop
int3
xor
std
sub
or
lahf
dec
inc
jo
out
aas
fcompl
xchg
push
in
std
sbb
lea
int3
sub
sbb
cld
and
mov
or
sbb
mov
fistl
push
jb
push
xor
add
sbb
xlat
enter
cltd
arpl
and
enter
jge
lock
push
sbb
xchg
mov
mov
lods
sbb
xor
rol
jl
sub
inc
fucom
rorl
jbe
imul
or
popf
lret
aaa
sub
clc
ljmp
mov
xor
adc
and
nop
dec
lea
jns
xor
adc
add
sbb
shlb
mov
dec
in
push
adc
popf
cmp
out
rorb
ds
movsl
sbb
dec
sbb
mov
cmp
daa
pop
sti
and
pushf
rcrb
imul
pop
addb
xchg
lods
xchg
adc
jl
mov
push
insl
add
mov
insb
lret
or
jmp
mov
into
js
ret
jne
fistpll
movsl
scas
sahf
cmpsl
mov
hlt
mov
je
jnp
mov
add
add
jae
daa
daa
rcrl
je
pop
mov
inc
xor
jns
lods
mov
dec
xor
pop
sbb
popa
je
int
into
das
push
mov
or
push
stos
mov
adc
inc
pop
stos
xchg
adc
pusha
sbb
mov
jne
addr16
mov
test
out
fsts
ret
jg
aaa
dec
in
call
push
lds
or
sbb
pop
sub
sar
loop
xchg
jbe
mov
cmp
and
ret
lods
adc
jmp
mov
lcall
xchg
push
into
push
and
cmpsl
aad
xor
pop
shll
sbb
jmp
pop
js
inc
mov
pop
shll
jno
clc
mov
negb
in
in
cwtl
mov
pop
sub
aas
mov
cmpsl
sbb
push
sub
icebp
jae
cmp
int3
lret
jge
mov
mov
mov
adc
test
rorl
incl
int
sbb
and
stos
dec
mov
test
gs
mov
or
fstpt
fsubrs
cs
cmpsl
mov
and
jo
xor
xor
push
dec
and
je
shlb
adc
xor
gs
icebp
lods
imul
jge
mov
cmpsl
movsl
push
incl
lret
cmpsb
jns
dec
ret
push
cmp
or
jnp
dec
jo,pt
aad
cmp
js
imul
or
insb
mov
int3
and
cmc
push
sbb
nop
push
cmpsb
pop
leave
jp
jl,pt
insl
push
test
ja
outsl
lea
inc
fldt
inc
enter
imul
add
movsb
test
mov
cmc
ficomps
sahf
psraw
sahf
test
push
sbb
cmc
push
outsl
xor
sbb
dec
test
int
dec
andl
dec
out
jmp
xchg
call
imull
jns
aas
jle
test
outsl
lea
dec
cmc
bsf
iret
sahf
insl
push
xor
andl
stos
add
fcmovnb
jg
repnz
push
push
or
pop
add
jecxz
push
adc
shrb
vpshufd
sub
ss
add
insb
rorb
int
xchg
jo
dec
pop
std
jg
cmpsl
out
and
negb
xor
shl
test
dec
jp
loopne
lock
push
test
cmp
xchg
add
ljmp
pushf
cmp
or
xchg
xchg
or
inc
sti
push
pusha
fs
test
mov
mov
cmp
out
pop
daa
lcall
dec
out
add
pop
pop
lods
leave
stos
add
pop
push
movsl
mov
sub
int
movsb
insb
cmp
push
test
dec
lods
inc
dec
push
adc
fistpl
xorb
mov
aaa
jbe
outsl
add
push
daa
out
sub
daa
clc
mov
imul
or
pop
icebp
sbb
icebp
cmp
jb
outsb
push
lock
jl
mov
addb
aam
scas
mov
mov
sub
pop
jno
scas
push
push
jle
into
test
clc
movsb
xor
lock
mov
test
push
cmpsl
mov
mov
rclb
stos
pop
jbe
xchg
je
repz
data16
or
fsqrt
or
mov
xor
mov
imul
xchg
imul
pop
mov
aaa
loope
ds
mov
xlat
in
xor
or
xor
cltd
and
repz
inc
andl
inc
stos
cmp
inc
xor
scas
outsb
push
aas
jnp
adc
cmp
repz
push
leave
jecxz
pop
hlt
mov
lcall
add
inc
inc
sub
mov
cs
mov
push
pop
dec
adc
inc
icebp
and
enter
sbb
ror
push
pop
xchg
outsb
xor
add
aad
or
pop
jp
mov
test
ret
imulb
movsl
and
testl
sub
ror
sar
call
fcmovbe
aaa
jg
mov
fldcw
scas
cli
or
lods
adc
lcall
aas
mov
xor
xchg
add
es
sbb
xchg
xchg
jb
jbe
fiaddl
movsl
call
imull
out
cmp
lods
fldt
add
insb
pop
jp
mov
xor
out
push
lahf
aam
add
lret
xor
jg
insb
add
pushf
pop
fs
ds
daa
adcl
std
popa
sub
adc
cmp
mov
movsl
cmp
sub
pop
les
mov
fldenv
mov
xchg
lds
out
pop
push
push
scas
or
fistps
and
dec
push
sbb
cmp
adc
lcall
mov
mov
sbb
imul
out
mov
mov
adc
and
roll
sahf
xor
jns
mov
and
int3
fwait
shll
or
ljmp
inc
cmpsb
push
mov
out
mov
jecxz
fwait
in
fadds
inc
lock
mov
inc
adc
xchg
xor
cld
dec
mov
pop
imul
adc
subl
push
test
or
dec
cmp
push
je
or
jnp
sub
fimuls
dec
jmp
xor
xchg
loopne
sbb
lds
call
lods
jo
cmpsb
jecxz
ret
ret
and
xchg
add
mov
pop
aaa
into
jl
ret
mov
push
jl
cld
cmp
sub
inc
or
add
dec
aas
aas
xor
pushf
jnp
sub
js
lcall
les
decb
cmp
addr16
mov
inc
cmp
repnz
inc
or
add
cmp
mov
lock
test
lea
push
xor
pushf
mov
inc
push
jecxz
push
sbb
outsl
out
jmp
xor
mov
cmpsb
push
xchg
or
dec
adc
pushf
adc
les
pop
jnp
les
rolb
push
adc
jle
out
ds
rcrl
outsl
push
pop
mov
js
ljmp
dec
repz
mov
push
mov
mov
lods
lret
loop
loope
test
out
fwait
gs
dec
imul
pop
popa
mov
inc
xchg
je
push
repnz
das
insb
mov
shl
out
and
or
scas
xor
into
add
les
or
jno
cld
cli
sbb
scas
mov
jge
sbb
sti
xchg
popa
cmpsb
push
or
testb
sahf
in
dec
jno
mov
stos
nop
pop
daa
xchg
fsubl
sbb
inc
add
adc
lret
out
lods
add
pop
and
ret
mov
push
jno
sub
and
mov
or
inc
xchg
mov
adcb
inc
sbb
mov
sub
je
mov
cld
xchg
sarl
call
lea
adc
sbb
mov
jbe
dec
into
repz
ljmp
mov
inc
dec
popf
sbb
in
xor
fldt
lret
adc
jb
repnz
xchg
cmp
adc
aaa
ret
sbb
mov
xchg
push
fldl
push
dec
das
cmpsl
out
and
cmp
out
into
push
fwait
add
add
add
pop
loope
rcrl
jns
sbb
mov
es
pop
leave
out
fsubr
scas
leave
fwait
xlat
test
aad
mov
pop
ds
fsubrl
and
push
xchg
repz
js
scas
ret
shll
lahf
mov
test
add
cltd
or
leave
ds
jbe
cmp
xchg
lahf
sahf
mov
daa
cltd
or
std
mov
aaa
xchg
ja
pop
shl
sub
inc
aad
xchg
or
push
ds
stc
test
push
mov
aaa
loop
jp
iret
mov
fmuls
js
aas
out
lret
cs
xor
in
aaa
mov
push
adc
movl
push
mov
mov
mov
inc
add
fnstenv
pop
sbb
in
notl
fwait
mov
pop
notb
mov
mov
in
fmuls
stc
jge
ds
xchg
and
aaa
div
sbb
inc
xchg
loop
pop
sub
sbb
sbb
les
pop
mov
inc
roll
test
pop
pop
ljmp
xchg
nop
iret
pop
movsb
mov
sub
cmp
mov
inc
push
movsl
test
out
sub
into
repnz
ret
and
loop
xchg
daa
cs
dec
int3
xchg
sbb
adc
jmp
adc
mov
mov
scas
outsb
inc
fisttps
ss
mov
inc
fiadds
mov
ljmp
shll
xlat
addr16
mov
inc
aad
mov
mov
cwtl
jae
cmp
sub
dec
dec
in
aad
push
sub
cmp
insl
sbb
xor
mov
out
popa
inc
add
leave
push
inc
dec
mov
sarb
jmp
cld
stos
cli
out
and
jne
daa
inc
repnz
mov
rcll
dec
and
or
dec
cmp
jmp
ret
push
lret
rolb
clc
ss
stc
inc
scas
cmp
inc
mov
sarb
fnstenv
fstl
mov
subl
mov
xchg
js
add
mov
mov
add
lods
xchg
inc
test
shll
mov
xabort
decl
stos
arpl
sub
out
sub
push
inc
xchg
inc
jne
and
jnp
add
mov
sbb
rcrb
fwait
mov
dec
cmp
insl
enter
pop
fisttpll
shl
movb
jno
push
jg
pop
add
mov
push
out
cmc
jne
mov
inc
in
cmp
add
jne
lods
xchg
inc
imul
stos
loopne
xor
incl
mov
popf
or
xchg
push
adc
xor
popf
ds
inc
add
jno
pop
out
or
dec
in
mov
out
fmuls
mov
aaa
xchg
dec
sbbb
test
and
es
jle
or
js
out
adc
sub
pop
mov
mov
adc
cmp
lock
mov
repnz
les
sbb
push
dec
rorb
bnd
fwait
ss
movsb
pop
rcrl
cli
or
pusha
cs
dec
jo
int3
jg
adc
outsb
gs
add
and
sub
fwait
les
test
movsl
icebp
shl
and
or
daa
jge
push
cmp
iret
inc
mov
icebp
mov
add
inc
or
out
xchg
pop
or
inc
sbb
paddb
outsl
movsb
and
aad
sbb
cli
add
push
call
sub
mov
mov
insl
fldcw
xchg
hlt
scas
jne
sbb
clts
mov
sub
popf
mov
mov
dec
jbe
cmp
jecxz
stos
rolb
mov
rolb
add
add
pop
out
insl
scas
mov
notl
pop
or
imul
shlb
bound
sbb
cmp
stc
cmp
sbb
xor
ret
enter
popf
sbb
lock
or
push
jmp
cmp
and
xchg
ret
fidivrs
lcall
test
mov
jbe
xchg
sahf
imul
call
and
jnp
push
sahf
xor
adc
xchg
ja
rorl
push
in
ret
push
out
jae
fdivrl
sbb
lock
insl
inc
jb
push
scas
test
jge
sub
scas
sub
cmp
sub
ds
adc
movsb
jns
imull
cmp
addr16
sub
lahf
jbe
int
fsubl
push
das
loope
mov
pop
sub
out
xchg
std
pop
in
and
xor
hlt
xor
mov
adc
outsl
daa
icebp
loop
sub
inc
adc
pop
movsb
sbb
popf
loope
arpl
sbb
jg
push
flds
in
xchg
insb
cmpsb
sbb
popf
push
ror
fdivrl
cmp
int3
test
sbb
daa
add
stos
mov
xlat
dec
cmp
sahf
cmp
xor
mov
cmp
adcb
inc
mul
adc
dec
mov
add
push
clc
xor
pop
dec
hlt
cmp
jle
scas
clc
sar
ret
lods
cmp
sarb
int3
or
push
sbb
inc
dec
test
sub
cmpsl
fnsave
negl
int3
arpl
cmp
mov
mov
repnz
cmp
mov
cltd
in
cmp
sbb
popf
xor
pop
mov
jnp
mov
sbb
dec
mov
aad
dec
jne
pusha
jg
fs
imul
add
rcr
outsb
stc
insl
push
add
enter
mov
insb
mov
pop
xor
mov
jae
aaa
cli
test
adc
push
xchg
sbb
jge
sub
cmp
pushf
lods
into
mov
lods
fisttpll
test
mov
mov
cmpsb
aaa
aam
cmp
inc
mov
pop
roll
mov
pop
jmp
pop
addr16
pop
subl
inc
cwtl
pop
jp
js
sub
xchg
mov
popa
cmp
dec
cmpsl
loope
cmp
gs
push
mov
dec
pop
syscall
xchg
push
scas
popa
in
test
out
das
sahf
cmpsl
mov
idiv
test
push
cmp
cld
mov
out
sub
jmp
add
int3
scas
movsb
cmp
push
cmp
inc
xchg
cmc
cmp
pop
or
jnp
test
cmc
imul
das
mov
das
push
lahf
cmc
nop
cmpsb
dec
mov
scas
xchg
movsb
daa
into
mov
mov
lods
lds
adc
xchg
push
mov
jl
mov
or
jno
push
and
mov
mov
dec
in
jge
fcom
aam
roll
jp
jle
lods
and
dec
imul
int
xor
or
add
inc
lahf
sti
pop
inc
cs
jb
xchg
dec
jnp
lods
pop
add
imul
mov
loopne
mov
enter
mov
jbe
enter
lods
xchg
inc
adc
pop
int3
sbb
lea
or
or
push
sub
lcall
push
xlat
push
dec
xor
sbb
mov
and
andb
test
out
jle
outsl
std
outsl
cmp
loope
sar
sub
pop
daa
in
dec
or
mov
sbb
repz
movsb
xor
popf
in
mov
mov
popf
test
push
cmp
mov
adc
rclb
mov
push
lods
cmpsb
dec
mov
test
adc
xchg
mov
mov
mov
pop
sarb
inc
inc
aad
adcl
daa
mov
cltd
in
push
adc
in
aaa
dec
push
jno
ret
in
mov
sub
ret
movsb
or
add
cmp
or
lahf
jo
push
pop
mov
std
pop
pusha
jbe
sarl
jns
lahf
in
insl
mov
aad
mov
xlat
push
fadd
cmp
cmp
mov
pushl
xor
in
cmpsb
jge
xchg
fcomp
dec
mov
pushf
pop
xchg
fwait
add
cmp
ret
add
sti
cmpsb
rcll
push
or
pop
test
je
pop
cmpsl
fdivrl
inc
sarl
add
lcall
ret
mov
pop
push
flds
dec
loop
jmp
cmp
ss
lret
push
xor
pop
sbb
icebp
mov
xchg
mov
inc
mov
iret
mov
sub
js
sub
inc
push
std
outsl
fildl
hlt
addr16
jae
imul
pusha
add
jmp
jmp
pop
mov
mov
cmp
ds
pop
popa
jae
jl
cmpsl
js
es
push
pop
jecxz
and
lds
push
mov
add
fcmovnb
fdivr
cmp
pushf
insb
rcl
add
aad
xchg
and
test
pop
dec
and
mov
clc
inc
sub
cmp
xchg
inc
daa
xlat
sub
adc
out
mov
mov
pop
mov
clc
gs
sahf
mov
in
int
xchg
int
and
out
cmp
adc
in
adc
mov
mul
ss
and
sbb
mov
sbb
cmpsl
sub
clc
imulb
jle
shrb
sub
push
aaa
ffreep
fsubs
mov
repz
test
call
mov
mov
std
pop
sub
and
or
add
movsl
cmp
lahf
outsb
jecxz
sub
ljmp
leave
fs
loop
cmpsl
or
jle
or
add
imul
je
scas
rorb
jnp
outsl
fadd
mov
push
push
sub
adcl
data16
mov
xor
fs
inc
aam
outsl
out
or
ret
hlt
test
popf
pop
addr16
cltd
clc
mov
dec
xchg
insl
jnp
dec
and
xor
mov
dec
jge
nop
movsb
cmp
add
cltd
orl
xchg
xchg
cmp
cmpsb
lahf
call
mov
pop
ficoms
or
dec
pusha
ja
shlb
mov
cmp
mov
sbb
pusha
jno,pn
psllq
into
xor
push
fistl
jnp
or
imulb
xor
and
sub
and
cmpsl
sti
inc
or
sub
cli
mov
inc
fcoms
and
sahf
add
mov
dec
fisubrl
cmp
xchg
sbb
pop
jmp
data16
test
and
cmp
test
mov
and
pop
mov
mov
cmpsb
dec
rcr
test
fs
shr
fs
sahf
and
jbe
sub
orb
out
out
mov
mov
sti
push
xchg
xchg
gs
push
addr16
cld
mov
lahf
pop
sbb
pop
and
and
mov
mov
es
dec
cmp
push
jp
test
adc
jo
clc
icebp
jo
out
mov
dec
sub
ffree
shll
cwtl
lock
adc
lock
xor
aad
or
or
mov
orl
shrl
out
fcmovu
jl
xor
cli
ja
insl
sub
imul
adc
rclb
enter
les
sub
mov
or
aaa
loop
xchg
int3
into
jge
addr16
dec
pop
bound
mov
divl
in
or
imul
jnp
jecxz
lret
sar
push
and
dec
pop
xor
and
mov
out
movsb
jg
fistps
xor
leave
inc
xor
pop
pop
adc
int
aam
ss
xchg
iret
ret
test
mov
jge
and
sbb
pop
adc
test
dec
mov
mov
push
sub
mov
ret
lcall
adc
test
test
xor
and
push
dec
dec
push
repz
mov
ret
outsl
stc
ljmp
fsubr
add
lahf
pop
xchg
nop
cmpb
insl
sub
ret
loop
cltd
push
jecxz
jne
push
pushf
mov
fistpl
push
inc
and
cltd
adc
arpl
push
sub
stos
test
scas
and
scas
popf
icebp
xorb
insb
es
push
arpl
push
mov
out
mov
ret
in
movsl
in
cmpps
sub
into
inc
pop
pop
dec
and
mov
jb
pop
or
dec
jge
inc
pushf
push
popf
xor
sub
pop
xor
addr16
and
daa
test
jno
rcl
rcrl
cmp
pop
pop
rorb
data16
test
dec
lret
pop
loope
add
aad
fs
ret
out
jne
out
sbb
les
cmp
dec
ret
jne
cld
jbe
fnstsw
cltd
cmpsb
mov
mul
lahf
imul
outsl
sbb
cld
jns
xor
out
lea
mov
aas
cmpsl
lret
pop
in
pushf
sub
lret
roll
iret
iret
xor
bound
ds
test
xlat
movsb
mov
sub
rolb
stos
mov
mov
pop
int
in
dec
push
sti
jns
clc
sbb
pop
mov
inc
push
fiaddl
cmp
and
mov
int3
lds
sbb
dec
cmpl
inc
lcall
bound
aam
pop
arpl
sbbl
mov
int3
pop
xchg
fs
add
mov
jle
stc
pop
aam
into
pop
pop
or
push
push
iret
clc
loop
ja
stos
jnp
pop
imul
cmc
jb
sub
and
sub
fdivrl
mov
lods
add
adc
jns
test
ja
push
je
movsb
cs
test
xchg
cmc
mov
andl
xor
push
sub
ja
dec
inc
and
xor
jg
fs
mov
fnsave
stos
bound
mov
sub
icebp
jne
jle
push
lods
jo
jnp
jle
pop
cmc
out
push
inc
loop
out
inc
das
push
xor
jmp
repz
test
test
cmpb
push
pop
pop
push
cmp
das
xchg
mov
mov
jbe
xor
mov
mov
jae
pop
fucomi
xchg
sbb
arpl
dec
push
out
mov
xor
nop
addr16
incb
sahf
js
cmp
insl
push
dec
es
scas
test
sub
pop
imul
mov
cmp
in
out
faddl
loopne
ljmp
data16
add
cld
mov
adc
pop
pop
add
jge
push
js
adc
das
add
xor
aaa
int3
psubsb
scas
jg
test
mov
xchg
sub
lea
inc
ret
and
shll
lds
fcmove
mov
sub
enter
fldenv
ss
and
pop
test
bound
es
push
ss
cmp
andl
push
or
mov
addr16
or
adc
mov
inc
fldt
jge
jmp
stc
lret
imul
sbb
mov
xchg
daa
pusha
rolb
sbb
es
xchg
cmp
stc
mov
outsb
jecxz
sarb
add
mov
sbbl
push
ficompl
loopne
jecxz
add
xchg
stos
push
out
dec
mov
mov
and
and
gs
mov
adc
andl
out
xor
mov
adc
pop
dec
cmp
push
fwait
xchg
aam
shlb
call
jno
xor
xchg
dec
int3
xlat
js
xchg
mulb
pop
and
push
ret
inc
mov
push
adc
add
sbb
jmp
xbegin
mov
pop
inc
mov
cmp
jecxz
pop
adc
test
imul
lahf
sahf
jp
subb
jne
aam
repnz
push
icebp
mov
jae
and
xor
daa
mov
lcall
sbb
arpl
dec
push
insl
push
fst
test
movsb
and
popa
mov
roll
test
in
add
test
shlb
mov
fwait
dec
bound
ja
ljmp
mov
add
xor
sbb
lret
hlt
push
mov
dec
cwtl
push
std
push
or
xor
fistl
adc
test
mov
icebp
push
jo
int3
push
dec
ror
cmp
loope
add
out
repnz
mov
es
mov
sub
lds
xor
push
mov
lret
movl
cmp
jecxz
pop
aad
fisttpl
and
push
loop
adcb
mov
mov
mulb
rcl
jne
cmpsl
jo
stos
jg
cwtl
insl
adc
ljmp
out
mov
add
hlt
fisttpll
out
outsl
jo
in
cwtl
aas
cli
mov
or
xchg
xchg
inc
jl
imul
jno
push
mov
jl
int
push
add
push
xor
jnp
jecxz
add
sbb
outsl
or
pop
mov
fdiv
insb
jmp
xlat
mov
movsb
mov
paddw
std
cvtdq2ps
and
adc
sub
mov
sub
addr16
lret
leave
add
ss
stos
sub
jns
in
mov
mov
pop
xchg
xor
mov
add
xor
push
fsubs
mov
mov
xchg
aad
pushf
jo
into
pushf
int3
add
je
mov
ss
jbe
cltd
pop
imul
inc
dec
xorb
add
push
das
push
push
imul
out
xchg
push
push
sub
cmp
stos
cmp
push
test
cs
jp
bound
fcompl
adc
pop
arpl
aad
fdivs
inc
mov
dec
pop
mov
jp
cmp
xchg
add
scas
adc
pop
js
jb
sub
aam
mov
push
ret
int
pop
sub
adc
ffreep
rol
lret
jl
ret
sub
hlt
outsb
push
gs
push
fisubs
test
inc
iret
or
xchg
rcl
mov
cli
lock
pop
dec
push
or
cs
push
dec
stos
add
add
loop
jecxz
add
xor
rcrl
test
mov
cmp
inc
mov
les
jg,pn
test
lock
dec
imul
pushf
scas
jmp
xor
pushf
sti
sub
or
lahf
push
inc
push
jno
push
mov
insb
fcmovb
xchg
pop
xchg
mov
mov
xor
inc
push
inc
jne
icebp
repz
sub
jo
fnstcw
fidivs
sti
dec
or
fbld
cmc
jo
dec
dec
test
or
es
stc
aas
inc
int
repz
adc
dec
addl
sbb
pop
jmp
mov
jmp
popa
iret
mov
push
push
mov
push
add
mov
popa
dec
jb
sbb
ja
mov
xlat
stos
pop
mov
test
mov
arpl
or
and
mov
inc
dec
test
fs
sti
inc
mov
mov
or
xchg
in
shrl
cmc
mov
rcll
pop
lods
jbe
aaa
loop
adc
popf
lock
xorl
mov
mov
incb
jp
inc
out
pop
dec
pop
lret
mov
jle
aad
inc
mov
xchg
repnz
mov
xchg
add
mov
ret
jno
mov
leave
adc
out
cmp
addr16
mov
dec
cli
dec
ret
xchg
mov
test
int3
jmp
lea
xor
xchg
cltd
fcmovb
pop
js
pusha
das
xchg
cs
inc
loop
adc
or
sti
into
das
and
pop
lds
in
lods
in
ja
pop
cmpsb
mov
cmp
sub
iret
cmpsl
fwait
popa
mov
cmp
repnz
push
adc
pop
and
and
xchg
nop
jmp
sub
pop
adc
xor
push
adc
push
movsb
stos
pop
mov
or
push
gs
sub
sbb
adc
mov
mov
or
pop
mov
mov
push
jle
daa
mov
addb
icebp
sub
sbb
mov
fadds
ljmp
jp
ret
or
sub
cltd
js
das
add
mov
ficompl
mov
sub
aaa
mov
test
inc
outsb
push
push
mov
stos
stos
push
mov
imul
imul
pusha
cmp
mov
sar
inc
sti
jo
inc
dec
sti
fcoml
pop
in
lea
outsl
int
sbb
push
mov
mov
pop
in
fnstenv
in
push
jo
fnstcw
cmp
andl
sbb
cmpsb
pop
mov
loopne
lods
mov
les
mov
xorb
lock
cmp
orb
in
hlt
movsb
jno
ds
testb
loop
xchg
fcmove
sbb
fstps
cmp
inc
inc
ljmp
cmp
adc
adc
scas
ret
add
ds
call
pop
dec
add
inc
ret
xchg
mulb
jbe
stos
inc
sbb
ds
daa
or
insb
cmp
jnp
mov
test
cmp
rcrl
xchg
je
and
or
imul
xchg
into
scas
add
push
aad
pop
int3
in
adc
daa
mov
test
jge
sbb
das
push
bound
xchg
pushf
mov
and
mov
xchg
repz
lret
stos
or
cmp
pop
sub
ret
mov
push
cmp
inc
leave
ret
adc
pop
push
stos
adc
call
jmp
mov
fimuls
cwtl
lods
flds
scas
push
cmp
or
shlb
dec
mov
mov
call
or
sbb
shll
andb
jg
pop
bound
jns
in
cwtl
je
ret
dec
test
mov
nop
mov
add
fsubrs
jle
xchg
sub
inc
push
lret
or
pop
repnz
icebp
lock
dec
lds
push
ds
cmp
push
repz
ss
mov
xchg
dec
jle
test
in
hlt
jbe
cld
xor
insb
pop
andb
rol
cwtl
sub
xchg
adc
outsb
cwtl
addr16
ds
sbb
fs
jbe
repz
inc
jecxz
adc
adc
xchg
xchg
push
aam
lret
push
ret
xchg
scas
inc
inc
pop
lret
xchg
dec
or
inc
inc
and
repnz
pop
ret
sub
inc
or
fdiv
fwait
aad
movsl
jne
aam
repz
popl
ret
shrl
rolb
sbb
mov
jno
adc
movsl
dec
inc
imul
sub
loopne
popa
sbb
dec
or
outsl
in
mov
sahf
add
fbstp
push
outsl
xchg
pop
ljmp
mov
mov
jae
xchg
sbb
dec
jnp
add
sub
sti
incl
adc
out
ret
jb
cltd
in
es
jbe
lods
jle
adc
xchg
sti
leave
xchg
aaa
dec
jnp
add
mov
or
push
jnp
rcll
dec
push
xchg
and
mov
mov
nop
mov
dec
mov
aam
or
add
pop
jns
sbb
mov
jbe
cli
icebp
adc
fisttps
push
dec
mov
loopne
aaa
mov
cmpsl
and
movsb
clc
and
mov
popf
roll
or
pop
and
nop
add
movsb
xchg
fisttpll
push
stc
push
inc
pusha
pop
outsb
inc
daa
test
jo
adc
loopne
pop
mov
repz
sbb
xor
leave
xor
sub
mov
and
insl
and
cmp
jmp
mov
push
jns
fsub
mov
and
repnz
push
inc
adcl
stc
in
or
mov
mov
inc
push
mov
or
inc
mov
ret
into
mov
imul
pusha
jp
or
dec
sub
aam
xchg
in
iret
dec
cmp
dec
and
fisttps
aam
dec
xchg
xchg
xchg
sub
mov
jns
push
loop
pop
mov
xorb
xlat
xor
ljmp
pop
and
sub
jp
or
dec
ljmp
and
in
inc
pop
fs
sub
roll
out
gs
cmp
stos
pop
mov
sahf
nop
test
cmpl
mov
sahf
and
xchg
repz
pop
repz
adc
outsb
loopne
test
push
inc
lods
add
sti
or
jb
jg
lods
scas
jge
fcmovb
mov
push
jmp
adc
push
insb
jmp
inc
leave
and
add
or
js
js
sarb
shlb
outsl
es
cmp
scas
mov
inc
lret
and
mov
sub
xchg
adc
pop
lods
dec
cmp
pop
loope
bound
cli
incl
jbe
xchg
sahf
je
in
repz
cmpsb
int
jne
idivb
ss
aad
lret
xor
adc
arpl
stc
ljmp
lcall
addr16
scas
addr16
mov
or
int3
fwait
shll
inc
push
and
mov
pop
pop
and
pushw
push
daa
movsl
repz
lahf
aaa
fs
out
test
cmp
xor
sub
cmpsb
xorb
push
pop
xchg
arpl
jne
pop
addr16
insb
mov
and
jge
fisubs
dec
test
mov
lret
jg
inc
and
cmpsl
stos
mov
negl
cmp
vdivps
jne
sub
in
xchg
pusha
xchg
adc
xchg
sti
and
leave
push
add
sti
popf
mov
mov
dec
mov
pop
dec
mov
or
xor
pop
lock
xor
mov
clc
les
push
adc
mov
sub
lret
push
stos
dec
jecxz
mov
xchg
push
xchg
and
mov
popf
cmp
pusha
mov
mov
fwait
test
scas
enter
lret
dec
in
dec
pop
movsl
jmp
mov
stc
movsb
and
xchg
cmp
test
xor
mov
dec
jb
add
push
and
push
aas
or
call
aad
or
sbb
inc
pop
lret
mov
gs
mov
or
inc
mov
sub
nop
leave
xchg
xchg
xchg
dec
je
pushf
or
popf
bound
jge
push
aaa
mov
adc
cmp
inc
inc
push
xchg
pop
or
in
sub
out
pop
sbb
test
and
sub
gs
out
cmp
jle
dec
jbe
cmp
sbb
int
sbb
arpl
cmpsl
mov
lahf
pop
jg
popa
pop
outsb
icebp
mov
fistl
xor
idiv
stc
clc
insb
adc
ret
push
push
mov
test
ja
and
sbb
dec
mov
rcrb
out
mov
imull
bound
stos
faddl
test
sbb
out
jmp
or
hlt
ljmp
jbe
test
inc
push
jo
sub
push
and
pop
xchg
pop
outsl
and
das
shr
call
in
inc
in
xor
cltd
in
aaa
data16
and
sub
mov
lret
mov
jno
repz
data16
cmp
xchg
push
idiv
add
fucomip
jp
mov
into
out
and
mov
push
and
mov
adc
arpl
lods
dec
jmp
inc
adc
loope
fwait
test
notl
cmc
push
cmp
cmpsb
rcl
sub
fstpl
inc
sahf
bound
push
fcoml
or
popf
pop
outsl
adc
rclb
repnz
push
sbb
test
adc
out
pop
push
inc
sbb
jnp
ss
add
pop
jecxz
and
and
leave
outsb
dec
cmp
dec
inc
loopne
push
push
cmp
rol
or
idiv
leave
std
cli
dec
inc
sub
cld
add
or
jg
das
xlat
iret
mov
ljmp
out
push
cmp
pop
ljmp
mov
in
xor
repnz
xor
arpl
loopne
aaa
jne
mov
inc
dec
and
push
lret
lahf
mov
sub
je
dec
icebp
cli
icebp
and
in
insb
cmp
lods
xor
pop
out
aas
pop
mov
popf
xor
andb
out
jbe
cld
scas
and
dec
leave
mov
push
ss
xor
and
pop
adc
in
int
cli
mov
and
add
and
cmp
sub
enter
sbb
aas
sub
pop
and
aaa
xchg
push
mov
dec
loope
sub
xor
mov
adc
ds
pop
jno
jne
pop
sub
or
outsl
pop
adc
imul
vunpckhps
gs
ret
lea
loopne
xor
imul
push
mov
outsb
cmp
dec
pop
and
pop
jmp
jnp
sbb
pop
repnz
ds
adc
dec
mov
jecxz
push
pop
pop
ret
push
or
lcall
sahf
faddp
dec
daa
dec
pop
aaa
adc
pop
stos
movsl
dec
fadd
rorl
int
adc
outsb
repz
negb
int3
out
dec
enter
cs
test
iret
ret
imul
push
mov
aad
leave
fst
dec
push
lcall
or
jmp
sahf
push
xor
push
lock
inc
cwtl
std
in
hlt
push
inc
lret
shlb
fisubs
lret
loop
pop
cmp
mov
hlt
mov
mov
js
jle
fwait
inc
out
mov
pop
cmp
dec
sub
or
or
aam
dec
repz
roll
dec
and
lcall
int
mov
cmp
popf
jmp
movsl
sub
lods
add
lock
xchg
ja
cld
xchg
mov
jg
sbb
sti
sub
pop
or
cwtl
ret
inc
add
mov
dec
ret
adc
push
add
xchg
outsb
mov
sbb
fildll
subb
rcrl
and
in
rolb
and
lcall
xchg
xor
xlat
clc
loope
and
inc
and
imul
mov
stc
and
shlb
push
sti
adc
in
enter
in
popa
rcrl
ljmp
lcall
test
jo
clc
push
mov
fidivrl
shr
mov
fildll
xchg
xchg
inc
addl
xor
outsl
fwait
or
pushf
xchg
jne
cmp
ss
mov
fldl
push
pop
add
icebp
xor
push
test
movsl
insb
lea
xchg
daa
xor
mov
pop
sbb
dec
xchg
in
fldl
mov
stc
dec
mov
mov
out
lods
div
mov
jmp
dec
shll
repz
mov
pop
popa
inc
addl
sub
jl
das
jle
shl
mov
test
jbe
mov
pop
fmulp
mov
lret
in
iret
push
push
das
pushf
test
mov
pop
mov
adc
cltd
fwait
lods
in
rorb
cltd
stos
daa
or
daa
fbld
pop
mov
roll
push
jg
mov
pop
data16
cmp
pop
xor
jne
cmp
jo
mov
rcr
clc
inc
push
out
push
inc
ss
cmp
leave
outsb
cmpl
xor
mov
incl
cmpl
and
outsl
jp
ds
dec
xor
push
bound
cmpsb
sub
xlat
mov
test
pusha
cwtl
movsb
fstpl
inc
arpl
rorb
les
cmp
sbb
rorl
inc
bound
push
popa
jae
cmc
outsb
int3
mov
mov
sbb
popf
mov
mov
loope
fisubl
sahf
adc
aas
push
add
int3
sub
movb
push
fst
jle
in
sbb
or
pushl
hlt
je
xchg
ja
cwtl
in
cmpsb
pop
sbb
in
adc
inc
mov
add
test
mov
dec
and
pushf
iret
aaa
and
adc
xor
or
movsb
bound
sub
dec
jg
addr16
lock
mov
pop
adc
pop
cmc
testb
arpl
cmpsb
xchg
lods
adc
pusha
sub
push
xlat
mov
int
es
leave
movsl
push
sti
xchg
push
sub
stos
outsl
jp
test
pusha
mov
or
aam
sub
aas
test
cli
or
pushf
out
mov
mov
jg
and
shrd
js
mov
dec
repz
in
push
sbb
sbbl
adc
mov
push
inc
pushf
cwtl
inc
sbb
fadds
xchg
xor
xor
out
push
js
pop
cli
into
les
outsl
push
push
ret
in
repnz
mov
lcall
sub
jns
jp
loop
jmp
lahf
sbb
xor
pusha
icebp
jg
imul
pop
sub
out
scas
or
pop
lahf
dec
int3
fisubs
mov
sub
push
dec
bound
std
add
mov
test
int
sbb
mov
loope
lock
push
jg
clc
movsb
js
jl
repnz
dec
jle
test
pop
jbe
xchg
sahf
in
jle
ljmp
mov
pop
daa
ds
cmpsb
aas
scas
mov
lods
rcr
sub
call
sbb
mov
aas
fnstsw
pop
mov
and
lret
scas
sub
and
aad
clc
dec
jg
pushf
ficomps
out
paddd
xchg
addb
xchg
pop
decl
fs
jns
pop
jae
sbb
push
lods
adc
fldenv
movsl
adc
inc
xor
insl
sar
ret
mov
stos
lret
addl
stos
outsb
fs
ds
push
mov
jle
outsb
pop
fiaddl
ss
xor
sbb
icebp
jb
lds
ds
loope
sub
les
cmpsl
xchg
mov
in
fcomp
push
sub
loopne
es
and
test
stos
add
jo
adc
cmp
fidivl
pop
lcall
dec
and
mov
idivl
dec
fidivrs
insl
ret
xchg
sbb
gs
int3
fildll
sahf
add
mov
add
test
jle
iret
idivl
mov
jl
in
cld
push
xchg
add
lret
mov
mov
pop
cmpsl
fadds
lock
mov
cmc
cli
dec
je
mov
pop
sbb
pop
push
mov
jnp
iret
or
enter
leave
xchg
jns
pop
push
out
jge
cmp
lahf
out
repz
test
jmp
cmp
es
sub
push
push
stos
int
cmp
lods
test
out
xor
loopne
cmpl
push
loopne
jno
ja
aam
movzbl
inc
das
jmp
cwtl
cmpsb
adc
iret
jbe
insl
out
and
cld
push
js
jp
popa
sbb
add
dec
lret
hlt
int
imul
mov
adcb
fistpll
jle
rorb
or
jne
popf
pop
in
mov
insb
sbb
fs
pop
in
dec
in
aad
lods
mov
std
rcrb
mov
inc
pop
ret
cmc
aam
popf
cli
inc
add
in
pop
xchg
or
xchg
cs
call
into
sti
stc
mov
sbb
icebp
and
rcrb
pop
jmp
jmp
or
test
out
dec
cmp
mov
and
notb
inc
push
or
scas
mov
idiv
les
pop
pop
cltd
pushf
test
cmpsb
mov
mov
sbb
fisubs
js
inc
push
movsl
repz
fwait
rorb
xchg
hlt
mov
mov
push
pop
shr
movsl
inc
rclb
xor
int3
jg
insb
xchg
inc
jecxz
insl
pop
jp
lcall
sub
jne
scas
movsl
inc
push
add
fmuls
es
daa
test
xchg
xchg
imul
pop
daa
pop
sbb
bound
fistps
adc
inc
sbb
jmp
repz
xor
scas
lea
lock
ja
fbstp
mov
jg
aaa
cmc
js
pop
in
into
testb
or
jne
mov
hlt
dec
mov
jns
shlb
sbb
lcall
and
into
lret
dec
sub
xor
addr16
jbe
and
addr16
shll
push
sub
imul
scas
jns
es
daa
cmp
xor
les
cmp
inc
rcl
in
sbb
insb
loopne
and
xorb
mov
sub
pop
or
mov
jp
push
test
pop
test
add
push
xchg
insb
stos
mov
insl
scas
push
jle
push
cmpsl
jno
push
mov
aaa
inc
dec
jo
ret
add
aad
shl
mov
cmp
movsb
pop
outsb
or
mov
sbbl
imul
mov
les
jmp
jae
pop
mov
aam
in
sub
mov
mov
sbb
push
jl
mov
aam
outsb
pop
pop
lret
pop
aaa
mov
xor
add
scas
and
inc
popa
cmp
ja
add
and
jbe
in
dec
fs
rcll
xchg
adc
mov
push
add
jbe
sbb
insl
xor
shrb
fwait
push
jle
popa
mov
mov
orb
ret
test
dec
outsb
jnp
js
xor
fwait
lds
push
out
lea
push
cmp
and
sti
or
xchg
inc
push
call
loope
inc
sbb
popf
cld
lock
rcrl
and
xchg
addb
ljmp
xor
pop
dec
sub
or
push
sbb
xchg
in
sub
adc
cld
jno
iret
push
lods
push
dec
xchg
ret
testb
mov
cmpb
stc
aaa
int
aas
loopne
loopne
add
jne
sahf
xchg
sbb
cld
or
mov
add
xor
jge
lock
leave
cmp
ret
cmp
js
popf
cld
and
pop
addr16
ss
or
pop
mov
cltd
sti
arpl
xchg
and
xor
push
sub
mov
inc
mov
or
xchg
jp
adc
jmp
arpl
js,pt
call
push
out
imul
pop
repnz
adc
lahf
push
add
sahf
lea
cmp
inc
notb
fcomip
int
sbb
enter
es
test
and
jo
inc
popf
mov
mov
lds
repnz
jle
shr
cmc
mov
out
xchg
lcall
add
frstor
daa
imul
movmskps
pop
dec
jbe
sub
je
mov
shlb
enter
xor
push
dec
add
insl
rolb
mov
or
rolb
not
loop,pt
jns
aam
adc
xchg
mov
in
notl
stos
mov
out
xchg
sub
out
in
adcb
ret
jmp
stos
add
loopne
inc
movsb
lea
lods
jne
dec
outsl
js
loopne
pop
sub
pop
imul
mov
xchg
daa
mov
into
fwait
jle
orl
enter
pusha
stc
pushf
movsl
mov
mov
dec
add
inc
adc
sub
arpl
repnz
loop
or
mov
jmp
push
outsl
sahf
aam
sbb
pop
loope
dec
imul
aam
test
push
leave
pop
adc
mov
xchg
cmp
int3
cmp
dec
aaa
fstpt
fwait
jb
mov
pop
pop
jg
rol
mull
xor
sbb
push
scas
test
hlt
add
mov
lods
es
popf
mov
sbb
cwtl
hlt
mov
dec
ds
in
je
jnp
sti
dec
movsl
cmpsl
shll
fildll
flds
imulb
cmp
cmp
push
pop
dec
cmpsb
mov
mov
inc
inc
cli
xor
push
xchg
mov
pop
xorl
add
aaa
fsubrs
mov
or
insb
insb
inc
jg
push
bnd
cmp
lahf
and
xor
nop
inc
and
pop
stos
lock
enter
or
sub
lea
cmp
movsl
pop
jo
mov
mov
or
pushf
test
xchg
adc
xlat
sbb
popl
jmp
imul
mov
xchg
mov
nop
add
andl
scas
jle
mov
je
pop
leave
in
dec
ret
loope
inc
mov
popf
push
rolb
pop
cmp
push
push
and
jle
mov
call
sbb
sbb
push
xlat
ret
adc
mov
mov
movsb
out
lods
add
xchg
pop
int
dec
adc
xor
outsl
xor
jno
pop
insb
xchg
sbb
xchg
lea
cmpsl
lock
stos
insl
or
pop
outsl
shr
pushf
les
mov
push
inc
lock
test
inc
aaa
ret
jno
ds
mov
mov
dec
pop
or
push
fidivrl
pop
fbstp
test
pop
or
gs
jbe
aam
fsubrl
xchg
and
daa
adc
loope
push
xchg
add
and
mov
sub
lea
mov
jp
add
arpl
test
shlb
ljmp
adc
sub
adc
push
ljmp
mov
in
sub
dec
push
ds
or
es
outsl
ret
and
out
jae
jmp
mov
push
cmpsl
or
and
in
jo
pop
aaa
nop
imul
mov
enter
ljmp
jge
das
sub
cli
popl
notb
sbb
fidivrl
cmp
test
or
fcmovu
mov
mov
or
or
mov
push
fidivrs
enter
xchg
cli
ret
bound
pusha
add
pop
jbe
mov
in
xor
vpsadbw
popf
mov
mov
cli
pop
insl
inc
pop
pop
sub
inc
mov
clc
jnp
jae
cmp
pop
mov
xlat
push
xor
cmp
dec
cmpl
insl
das
in
fisttpll
cmp
jno
xor
fstpl
icebp
xchg
fsts
xor
rorb
jno
dec
clts
sbb
or
xchg
in
inc
xchg
push
or
ljmp
clc
mov
ss
aad
xor
out
pop
lds
xchg
pop
lods
cmp
add
cmp
pop
jmp
push
inc
mov
popa
inc
mov
leave
lods
and
jp
pop
mov
push
add
mov
leave
lret
stos
hlt
mov
xor
mov
inc
pop
dec
stos
in
lods
lods
push
test
push
mov
jae
mov
pusha
bound
inc
lds
dec
push
into
ret
aam
mov
adc
jmp
push
fcompl
into
push
jne
mov
int3
insl
cmp
dec
das
adc
pop
inc
sub
mov
outsl
xor
xchg
sbb
pop
aam
test
mov
out
pop
adc
inc
in
pop
fdivl
add
movsl
movsb
mov
push
int
sub
inc
ja
aam
pop
and
loopne
jl
sub
xchg
rcr
into
pop
push
xor
fisubl
out
pop
cs
sbb
fisubrl
mov
xor
sub
jno
aas
or
stos
shll
mov
cmp
jae
inc
adc
sbb
mulb
sbb
mov
cmp
insb
test
push
loop
mov
outsb
cmp
mov
fidivl
scas
jge
and
fwait
push
adc
inc
xchg
into
push
mov
fs
mov
in
je
and
mov
test
aaa
dec
bound
cld
mov
mov
js
fwait
push
stos
inc
ret
mov
fisubrl
xor
lcall
test
and
lock
das
dec
xor
mov
cmp
lea
fwait
cmp
push
xor
ret
int3
fstpl
dec
mov
stos
inc
xchg
ds
pop
xchg
fisttpl
mov
pop
frstor
sarl
xchg
iret
push
fnstcw
or
xlat
test
pop
lods
in
lods
lods
jno
cmp
pop
outsb
or
scas
addr16
cmc
pop
divb
pop
addb
rorl
aas
jle
out
out
xor
in
or
arpl
fdivrs
pop
xchg
push
mov
jnp
jmp
and
add
or
ficomps
cmp
hlt
scas
jle
in
scas
sbb
xchg
or
es
fsts
xlat
mov
push
fists
cmpsl
aam
mov
insl
gs
pusha
mov
and
sbb
sbb
jnp
pop
add
mov
xchg
adc
push
cmp
pop
jno
sub
lock
outsb
sub
scas
jno
add
jae
pop
notb
xor
push
aaa
jecxz
sbb
mov
fnstsw
ret
jmp
test
pop
mov
outsb
arpl
sbb
lock
xchg
outsl
sbb
subl
xchg
gs
mov
inc
cld
out
jae
jg
and
push
mov
dec
and
das
push
adc
jl
aad
jnp
ja
sbb
xor
push
mov
cmp
jae
dec
paddsw
lcall
lods
jp
xor
enter
out
enter
xchg
xchg
sub
lods
sub
iret
cld
rcll
sti
rorl
mov
ret
mov
mov
outsl
shlb
sti
out
sub
xor
sbb
pop
jbe
imul
push
fldcw
subb
aas
mov
inc
xor
fmuls
adc
arpl
push
push
mov
gs
adc
sub
sub
sbb
xchg
mov
cmpl
adc
stc
xor
ror
cmp
notl
jnp
sbb
arpl
sbb
cli
inc
adc
outsl
xor
add
jle
mov
movsl
jmp
sub
sub
sbb
pusha
cmp
js
sub
scas
popa
push
dec
movsl
push
jge
inc
sub
jecxz
mov
adc
nop
lret
mov
shll
push
fpatan
mov
cmpsl
leave
loope
js
out
jnp
push
outsl
jge
cmpsl
sbbl
jg
push
pop
lcall
call
jge
pop
or
pop
popa
pop
mov
hlt
pop
decl
mov
push
mov
jl
xchg
test
aaa
cld
push
shrl
or
pop
test
ret
or
cld
inc
gs
adc
outsl
insb
adc
pop
push
push
inc
rclb
or
into
cmc
xor
jnp
mov
inc
les
pop
popa
addr16
int
scas
and
mov
mov
cmp
std
mov
push
add
jmp
testb
jl
imulb
adc
mov
je
fwait
mov
mov
stos
push
pop
cld
jg
loopw
ret
repnz
sub
fcom
mov
inc
lods
nop
mov
push
inc
out
mov
pop
fs
pop
add
xchg
adc
xchg
sub
mov
xchg
pop
add
or
add
pop
or
cmp
mov
xchg
in
sarl
cmp
sbb
stos
mov
xor
cmp
sbb
dec
mov
push
pop
je
sub
sub
sub
or
mov
outsb
mov
push
inc
repz
in
es
push
cmp
mulb
icebp
cwtl
leave
fisttpll
lcall
gs
xlat
adc
fnstcw
cmp
push
fiadds
pop
imul
dec
pop
pushf
mov
push
ficomps
adc
or
lods
test
imul
cmp
lret
mov
xchg
xchg
push
xchg
xchg
frstor
jp
jmp
cld
xchg
and
sub
stos
cmp
push
je
and
and
mov
and
mov
pop
lea
in
sbbl
pop
outsb
pushf
lock
cwtl
add
jno
push
xor
sar
xor
jae
add
sarl
push
push
pop
test
mov
fsubs
addr16
fimull
test
in
sti
shl
inc
and
sub
and
repnz
pop
aam
pop
push
lea
mov
rorb
adcb
stos
imul
test
iret
xor
jg
in
sbb
ds
gs
dec
clc
mov
jo
sti
jb
fidivl
lods
addl
loope
push
push
cmp
test
out
pop
dec
addr16
push
aam
fimuls
mov
int
xor
repnz
mov
sarl
stos
lcall
add
add
sbb
inc
pushf
dec
push
sub
push
std
test
jge
daa
sbb
jp
jl
sbb
or
lods
lret
pop
stc
xchg
popf
fisttps
in
add
sbb
jge
inc
push
lods
in
rcl
push
cld
les
inc
xchg
inc
push
das
and
out
cmc
repz
mov
inc
adc
ficoms
mov
push
movsl
into
jecxz
addr16
into
mov
cmpsl
jle
jmp
cmpsb
cli
sahf
mov
sbb
jne
lods
push
fidivs
adc
mov
stc
mov
je
decl
incb
add
cli
mov
jg
sub
rol
cmp
add
sub
sub
insb
jne
aaa
dec
sbb
jnp
iret
mov
add
mov
repnz
adc
movsb
js
cmpsb
cld
xor
and
test
mov
fcmovb
push
sub
and
bound
or
jo
cmc
subb
loopne
and
ja
mov
fcompl
xor
fsubl
xor
sub
roll
cmp
push
lcall
hlt
xchg
mov
cmc
arpl
jb
and
adc
movsl
xor
jl
adc
addw
nop
fmuls
fists
dec
lock
sbb
sbb
or
rorl
mov
out
pop
addl
mov
add
pcmpeqd
xor
sahf
fsubrs
popa
sub
xchg
xchg
sbb
push
push
add
add
xor
jae
or
mov
xchg
int
popa
cmp
hlt
cmp
std
mov
in
push
pop
lea
push
xor
arpl
mov
lret
popf
std
sbb
out
out
lahf
mov
cmc
gs
out
and
cli
push
paddw
mulb
and
sub
mov
into
pop
pusha
into
mov
addb
cmp
ja
mov
adc
cmp
and
inc
imul
pusha
push
cmp
jmp
mov
popf
adc
nop
iret
mov
scas
pusha
add
pop
mov
or
dec
add
sbb
outsb
sbb
int
sub
inc
push
ss
sbb
mov
lret
fildll
pop
fnsetpm(287
adc
jne
ss
leave
cmp
jbe
adc
rcrb
xchg
repnz
xchg
xor
ret
push
and
stos
xchg
gs
push
imul
add
and
cmp
add
adc
mov
repz
dec
cld
imul
in
mov
jmp
pop
mov
or
push
mov
sbb
jno
in
mov
or
mov
inc
rorb
fcompl
push
mov
xchg
adc
imul
push
nop
rcrb
xchg
out
pop
fidivs
and
fbstp
xchg
inc
xchg
repz
inc
iret
sub
cs
fsubs
jno
push
cmp
mov
fdivrl
pop
mul
pop
adc
xchg
jl
or
add
cli
jle
xor
cwtl
xchg
insb
mov
adc
jo
repnz
mov
loopne
inc
cmc
insb
call
jne
jb
jne
aam
cwtl
pop
jge
lods
lds
cmpsl
sbb
adc
xchg
data16
jo
pop
xchg
dec
xor
leave
scas
fwait
mov
xchg
jg
imul
sub
out
add
flds
movsl
out
mov
inc
jno
mov
std
sbb
les
sub
lea
pushf
and
mov
out
iret
pop
push
test
cli
mov
adc
pop
mov
push
fs
adc
xor
cli
hlt
in
aaa
je
movsl
enter
cmc
test
dec
aaa
mov
cmp
mov
xor
lods
or
aaa
push
dec
dec
mov
push
out
sub
icebp
jg
iret
pop
push
test
lret
outsb
xchg
test
xchg
sbb
repnz
jl
sbb
sahf
cmp
outsb
ficompl
scas
sub
pop
rorb
push
ret
xchg
and
bound
and
scas
movsl
data16
leave
or
jmp
xlat
and
aam
cmp
mov
mov
pop
fldenv
stos
push
hlt
sti
mov
addr16
xchg
mov
movsb
lods
cmp
push
fsts
loopne
bnd
xchg
push
js
stos
dec
push
rcll
or
int3
rorb
push
mov
mov
jp
das
fmul
sbbl
mov
roll
adc
fmul
iret
jb
xchg
fadd
pop
and
and
push
pop
cmp
mov
bound
add
pcmpgtw
hlt
fs
xchg
and
and
into
into
mov
lods
loop
das
pop
pop
popf
lock
sub
popf
jnp
lret
xor
sbb
shl
cld
add
mov
pusha
sub
and
dec
scas
je
lcall
pop
lahf
aaa
test
notb
xor
add
xor
sbb
and
stos
xchg
stos
dec
sbb
repnz
jbe
jge
in
cmpsl
xchg
aad
add
test
dec
hlt
adc
xor
push
add
fimuls
pop
call
xor
sub
or
test
fiadds
push
pushf
lret
mov
xor
push
ss
jle
push
xor
xchg
imul
ja
inc
call
cmpsb
popf
push
lret
mov
ds
jns
push
sub
sbb
xor
jg
es
mov
test
shrl
sbbl
jp
pop
in
push
sarb
xchg
sarl
sbb
pop
ss
scas
cli
or
pop
loope
rcll
pop
fldenv
sub
sbb
lcall
shrl
lcall
mov
xor
movsl
enter
fsubrs
subb
inc
fs
inc
inc
mov
jns
mov
cmp
loop
jnp
in
lods
xchg
xchg
icebp
sbb
xchg
ja
xor
or
and
mov
mov
cld
cmpsb
aam
inc
fsts
pusha
das
dec
add
sub
stos
cmp
shr
xor
cli
adc
test
stos
sbb
inc
or
daa
jle
test
jecxz
lds
mov
mov
test
xchg
push
jp
fcom
sbb
imul
sbb
push
movsl
jg
push
push
test
addl
shll
cltd
pop
push
rorb
xchg
pushf
stos
push
xor
stc
loop
scas
pop
xchg
jne
mov
xchg
pop
xor
je
fstpl
popf
icebp
pusha
dec
outsb
cmp
mov
aad
mov
pop
fstpt
xchg
rclb
fildl
faddl
adc
andb
int3
jecxz
roll
or
cmp
les
pushl
xchg
mov
mov
test
mov
xchg
decl
lret
clc
ret
insl
pop
insb
xor
hlt
jecxz
in
insb
pushf
add
cmc
ficompl
sti
fildl
ja
xchg
outsl
mov
mov
cmp
mov
fsubl
out
inc
lea
inc
sahf
jb
out
repz
gs
fwait
mov
sub
pop
push
fwait
imul
mov
fstps
dec
dec
xlat
push
inc
decl
or
and
xchg
mov
in
ss
jbe
out
into
mov
jne
arpl
aaa
loop
jb
cltd
push
outsb
insb
or
cltd
adc
mov
xor
inc
cmp
xor
in
and
stos
jmp
add
cmpb
add
repz
aaa
je
mov
addb
sbb
fndisi(8087
inc
lret
movsb
fstp
and
lret
jecxz
inc
adc
popa
data16
int
enter
xchg
mov
loop
in
call
mov
cltd
xor
mov
mov
mov
aas
add
hlt
pcmpgtb
shl
xlat
adc
fnsave
jp
mov
sar
jge
pop
and
push
mov
out
adc
mov
mov
inc
dec
push
popf
arpl
fmull
cmpsb
push
sub
in
cld
cld
mov
mov
stc
int
testb
cmp
inc
add
and
jge
mov
test
xchg
mov
or
xlat
adc
cld
leave
cmpsb
dec
dec
ss
jmp
mov
cmpsl
jbe
push
sbb
inc
aad
add
fidivs
ljmp
jno
imull
in
fmuls
arpl
fisttps
arpl
movsb
dec
xchg
enter
pop
and
test
jne
daa
jae
jb
and
add
iret
enter
cli
pop
inc
pop
call
arpl
xchg
lods
xorl
inc
icebp
lods
outsl
mov
jae
fnstcw
sub
xchg
rorb
lds
lret
dec
dec
in
outsl
lret
sbb
jmp
not
xor
aaa
mov
mov
mov
push
imul
addr16
fwait
bound
and
sub
in
cmp
cwtl
sti
daa
data16
sbb
std
mov
xchg
xor
cli
inc
stc
adcl
bound
mov
adc
xchg
pop
dec
cli
nop
pop
mov
aad
test
mov
xor
scas
repz
addl
in
or
pusha
imul
out
push
or
jbe
mov
mov
fstps
jmp
loopne
enter
int
pop
leave
dec
int
fmuls
mov
add
icebp
movsb
jp
stos
imul
in
and
cwtl
mov
adc
or
loopne
ss
jmp
jecxz
fisubl
jae
cmp
sbb
pop
es
xchg
cmpl
cmp
int3
aas
bound
sub
push
inc
add
sub
out
ss
cmc
xor
xlat
adc
mov
jb
inc
lods
push
movsb
jnp
sub
lds
popa
lock
icebp
push
sub
div
test
and
fldt
lock
or
inc
xchg
inc
rorb
xor
push
jb
dec
push
inc
insl
adc
cmp
fisttps
ljmp
and
jne
fs
and
repnz
cs
push
adc
lods
dec
mov
roll
or
loop
mov
pop
inc
pop
sub
mov
sbb
bound
in
pop
xchg
pop
in
mov
pop
test
adc
rcll
aas
mov
loopne
xlat
push
and
xor
jnp
lds
sahf
jnp
lahf
cmp
addr16
dec
lea
add
scas
seta
pop
and
xchg
in
xor
sbb
ja
adc
scas
lret
es
jp
or
xchg
cmp
popa
mov
mov
shll
mov
mov
lret
arpl
rcrl
xor
fisubl
mov
imul
sbb
xchg
out
xorl
clc
mov
scas
xor
test
and
pop
je
inc
sbb
mov
ss
push
jae
mov
aaa
lcall
pop
push
inc
loop
xchg
cmpb
lret
inc
pop
je
mov
jns
cld
mov
xor
inc
jbe
cwtl
js
loop
pop
mov
add
decb
add
xchg
jo
loop
mov
fldl
test
push
and
mov
sbb
xchg
scas
frstor
and
and
cmpsl
add
stos
push
cmp
mov
mov
jl
mov
and
gs
push
add
mov
push
sbb
bound
cmpsb
adc
xchg
ret
pop
mov
push
sahf
mov
or
xchg
xor
fstl
or
sub
fnstcw
test
mov
mov
add
int3
or
bound
xor
test
sbb
in
popa
into
push
sub
out
dec
xlat
dec
imul
jae
insl
dec
lds
push
fs
mov
fisttpl
sbb
aam
mov
shrb
insl
push
mov
jp
int3
shrb
dec
mov
ror
mov
push
mov
lcall
add
dec
clc
pop
roll
int
and
jbe
mov
lds
jnp
adc
dec
frstor
jnp
push
and
jp
movsl
insb
jbe
xor
jo
gs
test
adc
ljmp
inc
insl
pop
dec
add
in
in
int3
or
jl
jne
dec
sbb
test
test
bound
imul
mov
or
movsb
push
and
mov
mov
test
sbb
cmp
jge
out
repz
adc
xor
stos
add
pop
shlb
shlb
adc
test
pop
cmp
jnp
mov
cmp
aad
adc
jp
mov
dec
add
and
jnp
mov
mov
jmp
mov
mov
mov
push
jo
jecxz
dec
pop
scas
mov
pushf
arpl
daa
pop
data16
or
dec
movsl
loop
add
sbb
mov
lods
rorb
xchg
jle
jbe
cmc
inc
ja
xchg
repnz
sti
cmp
xlat
aam
js
test
movsb
data16
icebp
sub
es
mov
cmp
ja
xor
mov
jecxz
out
nop
push
rorb
sbb
xchg
stos
inc
pop
push
jo
fistl
push
iret
clc
sbb
xchg
cltd
xchg
sbb
nop
mov
sub
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
