dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
jmp
add
add
add
pop
inc
add
add
add
dec
add
add
add
add
add
xor
add
add
push
add
add
add
adc
add
adc
add
lock
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
xchg
jp
add
sub
divl
ficoms
dec
cltd
or
jbe
push
aad
push
je
cmc
sub
frstor
pop
out
shl
rcll
clc
test
lahf
or
jp
in
stos
or
mov
pop
sub
lock
pop
movsb
rorb
push
xchg
add
adc
push
lret
pop
in
mull
in
or
hlt
sbb
enter
shll
or
shl
xor
cltd
cmc
mov
xchg
mov
pusha
cmp
ret
or
xchg
xchg
data16
dec
mov
mov
int3
addr16
mov
xchg
lods
pushf
sbb
addr16
adc
hlt
mov
adc
pop
cld
popa
sti
cs
addr16
fbstp
xchg
popf
and
hlt
pop
loop
pusha
or
or
out
inc
in
in
dec
rcrl
sbb
loopne
push
in
mov
mov
and
push
pop
xchg
mov
push
inc
aaa
xor
and
inc
adc
push
dec
pusha
into
insl
dec
sub
jge
mov
nop
xor
jo
dec
jbe
cld
add
fwait
jbe
test
aas
sub
cltd
pop
pop
js
or
mov
mov
loop
jecxz
stc
cmpsb
cmp
int
lods
adc
mov
sub
mov
sub
arpl
xchg
pop
mov
xchg
mov
sub
add
add
dec
mov
pushf
mov
insl
jno
xchg
adc
or
or
mov
pop
es
repnz
jle
out
popa
subl
mov
jae
sub
loop
es
ret
addr16
fcompl
dec
adc
push
cmp
dec
roll
js
mov
inc
jne
loop
mov
cmp
leave
call
inc
mov
bound
sub
and
jae
stc
dec
mov
or
fcmovnu
lahf
mov
sub
sbb
mov
sbb
sbb
leave
fwait
jle
or
mov
push
lds
lret
add
fisubs
cmp
xor
adc
xchg
jmp
and
lahf
scas
stc
xchg
shll
mov
xchg
add
inc
aad
or
mov
sub
in
test
ret
loop
mov
sbb
and
pop
push
mov
pop
rclb
ret
jb
in
push
push
and
cmp
cmpsl
or
push
jns
jnp
sbb
sti
mov
shl
mov
test
dec
fdiv
inc
int
iret
sub
pop
shll
cmpsl
test
or
jmp
xchg
xor
push
mov
aam
inc
jo
pop
cltd
mov
aas
movsb
icebp
lock
mov
loope
sbb
xchg
cmp
push
push
leave
mov
dec
push
pop
sbb
les
jne
mov
sbb
push
and
inc
adc
lret
movsl
loope
push
xorps
xor
cmp
cmpsb
cmpsl
xor
mov
xchg
pushf
cmp
imul
push
insl
fwait
or
pop
std
imul
movsb
call
inc
outsl
cld
and
shr
iret
call
enter
xchg
xor
sbb
sbb
adc
jl
or
jmp
stos
rcrb
xchg
lods
sub
pop
jl
icebp
push
insl
mov
sbb
stos
adc
aas
inc
out
mov
ja
fs
jae
jbe
add
sbb
loop
dec
repz
push
xchg
and
int3
stc
pop
fdivrs
in
movl
cmpsb
rol
push
lods
push
loop
push
idivb
jg
cmp
pop
jmp
jmp
mov
cmp
or
cmpsl
adc
das
mov
dec
popa
adc
mov
sbb
dec
or
pop
call
ret
pop
test
dec
or
and
lcall
sbb
popa
int3
repnz
loopne
or
lahf
cld
inc
aam
xchg
in
cld
cvttps2pi
mov
or
popf
cmp
pop
sbb
imul
jno
xor
cmp
out
add
dec
loope
cs
mov
lahf
test
sti
add
cmp
hlt
adc
js
es
leave
jge
push
sbb
scas
pop
repz
cwtl
in
insb
repnz
lock
sub
xor
push
push
fdivrs
pop
jl
push
xor
pop
push
xchg
sbb
sub
xchg
inc
imul
and
xchg
add
adc
cmp
repz
fsub
adc
mov
mov
xor
or
add
inc
jmp
pushf
mov
std
sbb
jbe
shll
xlat
inc
rorl
out
push
mov
cmc
addb
mov
add
pop
loope
pop
pop
cmc
addr16
and
pop
sub
xor
push
add
sbb
or
and
mov
icebp
mov
in
jmp
ss
push
repz
dec
movsb
pop
jge
sbb
add
in
mov
pop
push
cltd
movsl
lret
insl
add
fnstcw
xchg
xor
lods
mov
movsb
push
lahf
pop
call
xchg
fwait
and
or
mov
std
rcr
adc
shl
push
jns
xlat
jle
mov
add
or
sub
test
stos
in
outsb
dec
dec
adc
outsl
xlat
outsb
and
shlb
mov
xchg
dec
or
std
or
cmp
ret
negb
jno
mov
mov
shrb
dec
mov
repz
xor
pop
aas
xor
sub
dec
inc
or
sbb
sti
sahf
push
adc
pop
scas
roll
pop
testl
lods
pop
js
xor
mov
push
mov
push
cs
cld
mov
push
mov
mov
ds
sbb
mov
test
aas
sub
xchg
movsb
add
pusha
scas
dec
ds
repnz
fdivrs
mov
ret
or
push
and
mov
repz
lret
push
ret
sbb
sub
push
cmp
pop
and
jae
sub
cmpsb
mov
fdivrs
out
pop
rcrb
in
orl
mov
dec
inc
jmp
imul
lock
mov
push
ret
loop
pop
notb
push
int
adc
scas
orl
repnz
test
mov
fnsave
inc
pop
fadds
inc
xlat
inc
cmp
or
sahf
cmpsb
outsl
cmp
xchg
fidivrs
cld
sti
loope
iret
xor
shlb
or
cmp
jbe
inc
fadd
cs
iret
dec
arpl
mov
add
xchg
cmc
inc
and
mov
je
xor
lock
push
arpl
mov
sbb
gs
cwtl
das
cmp
or
lahf
fiaddl
dec
out
js
push
aad
arpl
add
fs
aad
out
push
lcall
push
stc
pop
xchg
lahf
xchg
mov
loop
aas
cltd
push
ja
mov
xchg
inc
ds
adc
cmp
mov
nop
mov
sbb
dec
dec
dec
pand
cmp
movsl
sbb
cmp
cmp
fstpt
adc
hlt
xor
outsb
sbb
mov
fimuls
ds
inc
pop
iret
sbb
movsl
jnp
or
int3
pop
cmp
sub
cmp
mov
mov
xchg
aam
pop
xchg
aad
mov
idiv
cmc
scas
fldl
stos
pushf
rol
in
push
jle
out
mov
out
mov
mov
in
jnp
inc
pop
sub
pusha
je
je
sub
sub
xlat
cmp
aam
dec
pop
sub
pop
xchg
push
mov
pop
mov
pop
or
mov
push
jb
in
repnz
or
jns
mov
pop
shll
add
rorb
test
popa
sbb
xor
ret
add
mov
cltd
add
dec
addr16
and
and
ss
inc
add
iret
fstpt
pop
cmpsl
xor
and
js
lods
adc
movsb
push
outsb
lods
out
xor
sbb
push
xchg
sub
sahf
jne
mov
lret
sub
jge
int3
jg
add
jns
jne
test
xor
lcall
sub
adc
rclb
jae
adc
ljmp
lcall
dec
ds
mov
inc
test
mov
and
mov
subl
lea
sub
mov
mov
sbb
lret
test
addr16
mov
fs
push
sbb
or
icebp
ret
mov
pop
mov
and
arpl
mov
stos
mov
cld
out
rcr
movsb
push
scas
push
daa
arpl
pop
cmp
mov
mov
dec
adc
adcl
das
xlat
sbbl
ficoms
jnp
jno
and
jmp
or
fwait
ret
push
addl
pushf
movsl
xchg
mov
int3
je
arpl
inc
decb
repnz
ds
mov
and
add
cld
mov
testb
iret
cmpsb
inc
dec
cmp
iret
je
jo
inc
pop
jmp
outsl
cwtl
out
mov
repnz
sub
mov
ret
in
jo
out
xor
pushf
jle
fcomip
in
mov
imul
or
sbb
mov
or
nop
push
test
das
xlat
mov
or
call
mov
xor
sahf
mov
testl
es
dec
mov
jo
dec
mov
stc
dec
icebp
repz
dec
inc
scas
mov
push
inc
sub
add
cmp
mov
add
pusha
mov
andb
sbb
push
push
mov
pop
push
push
sub
insl
sahf
and
lods
add
or
cmp
cs
mov
loopne
mov
pushf
sub
clc
cs
loope
popa
mov
push
data16
repz
and
inc
mov
cmpb
cmpsb
ret
das
rcll
or
aam
jl
push
icebp
loope
mov
ss
inc
inc
dec
lret
cmp
mulb
adc
jb
insl
shlb
or
mov
testl
cmp
inc
sbb
pop
stc
mov
out
gs
mov
push
mov
flds
out
or
xchg
fidivrs
fisttpll
sub
gs
rorl
mov
pop
lds
push
push
inc
sub
pop
test
or
pop
mov
fldcw
test
sub
lahf
jo
pop
pop
sbb
jmp
shll
shrb
add
mov
in
fcomip
scas
repz
jecxz
xchg
in
cmpsl
mov
xor
icebp
fisubs
outsb
or
mov
popa
push
popf
dec
push
inc
imul
xchg
cs
popf
fnsave
push
lcall
lret
sbb
cmp
push
xor
add
cmp
movsb
lahf
scas
in
mov
or
mov
lcall
or
pop
mov
sub
lea
enter
sub
push
or
std
lods
cli
push
les
jle
pop
xor
and
cltd
setae
pop
sbb
pop
andl
stc
xchg
sbb
pop
jl
repz
xchg
dec
mov
push
inc
sbb
pop
in
outsb
mov
pop
xchg
js
sbb
add
mov
mov
add
fwait
movsb
push
jns
divl
mov
sar
cmp
cmp
cltd
jnp
cmp
xor
xchg
mov
scas
and
mov
mov
bound
ljmp
test
push
into
add
sub
out
ljmp
mov
data16
push
movsb
das
pop
cs
lret
mov
sub
push
scas
mov
sbb
jb
bound
or
mov
repz
cmp
in
lods
push
sti
or
aaa
xchg
imul
push
ljmp
and
add
divb
mov
jns
dec
rorl
int3
push
mov
dec
aam
inc
mov
insb
insl
dec
pusha
xor
lahf
mov
xchg
dec
inc
xor
repz
jg
cld
cmpsl
cmc
aaa
rclb
cltd
add
jns
sbbl
xlat
xchg
dec
test
pop
and
out
or
clc
mov
xor
lret
testb
cmpsb
mov
push
mov
xchg
jge
inc
xor
subb
js
data16
out
leave
cli
imul
jp
cmpb
int
icebp
movsb
mov
mov
push
jno
fdivs
mov
aad
dec
dec
sti
push
push
jmp
repz
pop
jne
aas
jg
les
pop
rolb
fsub
adc
pop
pop
cmp
or
cld
insb
lret
mov
adc
mov
jl
fmuls
ds
jnp
cmp
pop
cmpsb
int3
repnz
dec
xchg
lods
lret
push
push
in
and
pop
jmp
gs
or
push
stos
lds
scas
add
xchg
jle
outsl
sbb
mov
or
aam
rcrb
and
jecxz
aad
add
jns
jmp
addb
outsb
test
dec
nop
cld
cli
outsb
sarb
aaa
dec
mov
mov
fstpl
push
cltd
jbe
sahf
sbb
inc
add
push
hlt
fnstenv
pop
mov
icebp
dec
popa
scas
xchg
pusha
cmpsb
decb
int3
hlt
xor
cmc
jno
sub
jle
cmpsl
xor
jbe
and
fdivrl
fcomip
mov
jmp
popa
cltd
push
fucomip
test
pop
into
clc
fiadds
xchg
cwtl
adc
jge
push
mov
pop
sbb
adc
push
es
add
xchg
aam
mov
aas
lret
cld
push
and
push
mov
fnstcw
les
idivl
aad
cli
cmpsb
cmc
cmp
push
es
cmc
outsb
xlat
pop
cmp
and
and
push
loope
imul
jg
cmc
add
push
das
jmp
add
adc
int3
lods
inc
mov
jp
dec
xorl
into
xor
pop
cli
cmp
mov
jns
leave
pop
add
jg
movsl
imul
push
push
xor
cmp
xchg
test
mov
mov
xchg
mov
cmp
jecxz
daa
popf
les
scas
inc
cmp
xor
add
or
dec
imull
ss
jge
jp
xchg
aam
mov
cmc
jp
push
push
jecxz
and
inc
pop
das
inc
sub
jo
stos
fnsave
popa
xlat
xchg
mov
stos
cmpsb
xchg
push
pop
aam
mov
mov
fisubl
add
push
lods
cltd
and
xorb
cwtl
push
mov
lcall
add
daa
sbb
cmpsl
mov
inc
xchg
and
lock
mov
mov
mov
sub
mov
mov
push
push
jge
fisttps
push
sbb
xor
jb
add
jno
in
or
mov
jnp
cld
sbb
imul
pop
addr16
dec
jbe
mov
jo
cmp
in
dec
sbb
and
ds
push
orb
dec
xor
cwtl
xor
shl
mov
inc
adc
jnp
adc
add
jnp
sahf
daa
sbb
pop
push
mov
pop
or
mov
addr16
imul
xchg
je
rorl
das
or
in
ficoms
or
popl
pushf
test
or
add
push
xor
mov
jne
pop
test
adc
int3
jns
gs
pop
or
pop
push
jecxz
scas
sub
push
out
mov
jo
dec
sbb
xor
mov
sti
imul
mov
mov
sar
or
or
and
pop
loopne
insb
imulb
aas
or
test
dec
xchg
enter
insb
pop
adc
lods
fimuls
sbb
sbb
xchg
xor
mov
sub
std
jle
pop
sbb
mov
xor
cmp
out
jg
jo
push
je
jo
push
cld
cmpsb
and
movsb
iret
clc
aad
push
aam
js
notl
sub
in
xchg
mov
insb
mov
ds
in
jo
sbb
fldl
push
pop
popa
out
or
outsb
push
cltd
xor
xor
jl
in
dec
sbb
addr16
push
push
lcall
imul
inc
cmp
ret
jnp
sbb
mov
sub
cwtl
inc
int3
fimull
ss
inc
gs
xor
aam
loope
cmp
sub
xchg
sbb
xchg
mov
ret
outsb
push
sbb
xor
lds
aas
data16
add
popl
cmp
sbb
xor
lock
mov
shrb
sbb
add
lods
pushf
cmp
jo
push
and
mov
xchg
push
mov
mov
cmp
cmp
sahf
adc
cmpsl
jnp
fimull
xchg
mov
push
shlb
jmp
xchg
pop
add
sub
push
adc
fldl
subl
rcrl
jg
xchg
sub
adc
jne
cmpsl
int
pop
and
sub
lret
sbb
mov
dec
mov
cltd
jb
test
sarl
ljmp
xchg
int3
sbb
add
lret
xor
jl
rcrb
xor
cwtl
jmp
add
mov
xchg
inc
ror
loopne
roll
sbb
sbb
repz
cmp
test
ds
pop
jge
mov
or
test
jp
mov
dec
add
mov
xor
push
inc
aaa
adc
fstp
push
rcl
stc
cld
mov
pop
stos
dec
push
mov
nop
sbbl
ja
das
pop
sbb
js
mov
sbb
mov
push
cltd
push
popa
cwtl
movsb
jb
out
sub
mov
in
adc
movmskps
outsb
mov
jnp
cmp
adc
cli
jl
fildl
lods
push
xchg
scas
push
fdivp
sbb
int
cmp
icebp
das
sub
add
aad
in
aad
lahf
xor
mov
in
push
mov
jbe
rcl
push
and
inc
in
sahf
xchg
hlt
sbb
nop
stc
and
stos
push
mov
push
das
outsl
xor
add
add
sbb
leave
push
xor
xor
inc
loope
sbb
imul
shlb
mov
outsl
push
fnstenv
jecxz
gs
clc
push
or
nop
jnp
aas
rolb
or
xchg
cmpsl
adc
std
addr16
mov
rorb
jae
xchg
pop
cs
roll
pusha
movsl
mov
popa
std
imul
xchg
xchg
sti
sbb
shr
sti
scas
cmp
loopne
cmp
es
xchg
xchg
sbb
clc
and
ljmp
push
outsl
and
aas
push
add
mov
gs
mov
lcall
fistpl
cmp
cwtl
fiaddl
pop
sti
adc
std
and
jmp
adc
cmc
pop
loop
mov
pop
push
xchg
push
ljmp
dec
aam
mov
fists
mov
icebp
xor
call
and
test
cmp
mov
or
pop
cmp
cld
add
shlb
outsw
int3
adc
loop
outsl
mov
fsub
adc
mov
orl
mov
add
push
dec
jnp
xchg
jb
imul
jo
sahf
mov
jno
sub
rcrl
test
inc
jmp
aas
mov
mov
push
dec
clc
xchg
cwtl
mov
cli
inc
loop
xchg
rcll
xchg
shl
pushf
mov
out
mov
sbb
push
and
lea
cli
add
xor
adc
in
push
dec
mov
ss
adc
fldl
xchg
test
mov
leave
fcomps
push
movsb
loopne
pushf
fcomps
imul
jno
dec
dec
xor
dec
ret
ds
fwait
lock
or
add
lahf
sub
pop
mov
enter
repnz
adc
add
sub
push
xor
stos
les
sahf
fcom
jg
mov
push
mov
jae
sbb
add
movb
dec
int
jnp
add
pushf
jg
xor
fscale
insb
pop
mov
mov
fcomp
into
mov
bound
inc
push
arpl
sub
xchg
xor
int3
push
loope
scas
ja
or
push
lock
fbstp
inc
nop
loopne
jo
loop
std
mov
jmp
mov
mov
sub
lods
jge
les
jge
mov
cmp
push
sbb
jecxz
jge
and
test
stos
push
xchg
inc
jle
test
fstps
dec
mov
lcall
cwtl
insl
mov
ljmp
cmpsb
lahf
or
jge
cmpsl
hlt
in
aam
pop
or
xor
mov
cs
push
and
adc
sub
or
dec
or
pop
ja
xchg
pop
and
mov
lock
sbb
std
pusha
pop
adc
mov
inc
jecxz
pop
incl
jns
or
lds
lds
dec
stc
out
xchg
aas
movsb
in
cmp
pop
les
in
dec
xor
push
je
pop
sbb
lods
mov
lcall
jp
inc
outsl
and
jp
fcomps
dec
add
cmpsl
fcmovu
push
mov
cmp
ret
movsl
mov
imul
test
stos
mov
mov
cltd
insb
xor
fistl
pop
push
xor
mov
xchg
pop
add
sbb
mov
pop
out
adc
cmpsl
enter
dec
xlat
fsubs
shl
rorl
arpl
or
stos
push
stc
test
mov
call
sbb
sub
aaa
aad
imul
sbb
mov
stc
xor
hlt
cmp
push
sub
lahf
lret
stos
mov
inc
adc
rolb
push
aad
fwait
and
jno
lods
lds
pusha
push
movsl
sahf
xchg
adc
movsb
test
test
add
arpl
jl
fcomp
jmp
lds
lahf
mov
xchg
and
jmp
mov
shrl
pop
mov
sub
xor
gs
mov
xchg
cmp
testb
mov
loopne
fdivs
sub
ret
imul
mov
enter
fcomip
jg
andl
cltd
loopne
scas
jnp
clc
xchg
in
push
rol
mov
mov
mov
xchg
xchg
std
pop
xchg
sbb
inc
pop
sub
cmpsl
je
lcall
sub
sub
pop
push
rcrb
popf
mov
bound
scas
fidivs
add
push
push
dec
sbb
movsl
pop
lods
add
cmpsl
insb
outsl
add
add
jmp
jle
xor
mov
sub
cld
shll
xchg
push
mov
pop
sbb
popf
mov
mov
mov
inc
cltd
mov
sub
cmpsl
cmpsb
jl
jb
stos
das
fmulp
leave
jae
xor
loopne
in
push
out
cmc
xor
mov
insl
inc
push
or
ret
std
arpl
inc
out
dec
xchg
adc
jle
stos
lock
cmpsl
pop
cmpsl
aas
dec
std
push
movsl
and
iret
jle
and
mov
jecxz
or
popf
incl
aaa
mov
push
popa
sub
ja
mov
xchg
jge
loop
insl
push
mov
movsb
xor
les
ljmp
inc
mov
popa
or
add
add
stos
dec
iret
sub
test
out
faddp
js
fsubs
orb
inc
lcall
mov
jae
and
lcall
shrl
cmp
mov
cmp
data16
addr16
jnp
fdivr
cs
ja
ret
mov
je
fs
insl
xor
fwait
loope
xor
pusha
in
mov
sbb
push
pxor
cwtl
jp
xchg
in
pop
in
push
add
out
loopne
bound
pop
ljmp
fsubp
add
lret
mov
dec
lds
js
fcmove
int3
int3
divl
push
push
xchg
nop
cmpsl
test
add
xchg
jne
or
pop
shll
sub
mull
cmc
scas
inc
adc
dec
int
or
xor
rcl
xor
jge
xlat
sti
sub
inc
mov
test
xor
jns
xchg
leave
sbb
repz
push
sbb
jp
inc
fsub
add
sub
sbb
xchg
loopne
inc
popa
arpl
mov
sbb
insl
pusha
xchg
inc
rcrl
bound
aam
push
adc
or
mov
or
xchg
nop
push
mov
mov
cmpsl
fstpt
cmp
sub
pop
scas
or
push
mov
lret
imul
fsubl
xchg
pop
ljmp
add
push
mov
insb
pusha
popf
jg
and
repz
je
movsl
inc
push
dec
data16
jmp
cmp
jecxz
adc
outsb
push
in
add
loope
mov
stos
adc
mov
pop
movsb
cmpsl
jle
mov
in
repz
jecxz
js
in
lret
ret
push
and
jae
xchg
cmp
pop
cmp
add
dec
fsubr
divb
pop
gs
add
inc
nop
mov
xor
arpl
or
mov
shl
mov
jb
dec
mov
push
movsb
lods
fucomi
push
jbe
push
shlb
decb
mov
je
iret
into
pushw
fwait
push
js
cmc
mov
int
sarl
pop
andb
ret
es
and
test
push
sub
mov
arpl
sbb
dec
adc
test
hlt
sbbl
dec
dec
push
sbb
push
mov
and
sbb
inc
out
aam
sub
xor
sbb
cld
es
int
ss
jo
mov
xor
mov
dec
ret
mov
cli
enter
mov
out
pop
push
jle
jle
jecxz
pop
jae
imul
ljmp
push
dec
fsubrl
add
sbb
adc
xor
cmp
loope
push
mov
ja
jb
xchg
add
sbb
ret
cli
cmpb
je
nop
pop
push
dec
sti
ljmp
sub
adc
or
and
repnz
lods
lock
xchg
pop
mov
pop
add
test
mov
mov
push
mov
ljmp
roll
cmp
cltd
cld
jmp
bound
rclb
mov
xchg
mov
fwait
xor
mov
xchg
mov
addr16
push
cmp
enter
or
shrb
push
adcl
xchg
test
jecxz
scas
outsl
mov
mov
mov
adcb
sub
sahf
test
loopne
lahf
push
xchg
inc
ret
cltd
cmp
ljmp
or
fmull
xchg
adc
lods
mov
repz
stos
add
jae
cmp
inc
in
call
pop
xchg
and
ja
jne
lock
fcomps
aaa
sub
sub
or
xchg
mov
push
jne
das
xlat
sbb
je
cmp
lea
xor
fmull
shrb
dec
loopne,pn
cmc
and
cmpsl
insb
inc
iret
dec
fidivs
nop
out
xchg
mov
fdivrl
push
stos
aam
add
repnz
lods
orb
nop
ljmp
jne
jmp
xchg
insb
jge
inc
mov
mov
dec
jae
jb
out
mov
call
ret
in
xor
sub
sbb
mov
and
jp
sahf
inc
in
add
fists
lahf
pop
and
sahf
pop
mov
repnz
int3
fsubl
lock
std
pop
mov
push
repz
loop
xchg
out
or
jo
rcrl
mov
jp
int
pop
rol
xor
daa
cmp
mov
repz
inc
adc
push
push
cmp
lcall
adc
imul
jnp
xor
stos
pop
jb
dec
sub
outsb
iret
shlb
pop
add
xchg
insl
daa
mov
roll
clc
mov
aad
or
int
cmp
je
add
inc
cmp
inc
cmc
fsubrs
add
sub
rcrl
or
mov
ljmp
mov
jno
mov
adc
inc
mov
int3
mov
lock
jg
pop
dec
stc
pushf
add
lcall
loope
iret
gs
push
sbb
sub
cmp
bound
mov
sub
push
xchg
sbb
inc
movsb
mov
incb
sbb
popf
leave
cli
push
adc
in
divb
scas
sahf
mov
sahf
jb
push
inc
lcall
rorb
xchg
pushf
push
push
dec
jb
aaa
bound
loop
psrad
lret
push
dec
inc
mov
test
sub
and
adc
cmp
insb
lods
inc
inc
dec
js
insl
sub
repnz
addl
imul
pop
sbb
jl
sti
into
inc
das
push
movsb
cli
pop
into
mov
mov
insl
fcmovnu
out
cmp
loopne
fwait
mov
push
mov
push
mov
daa
mov
xor
faddp
xor
and
xchg
outsl
out
loop
out
mov
xchg
and
or
outsb
add
leave
arpl
fists
add
xchg
and
lcall
fimull
js
rorl
int3
lret
lods
iret
mov
div
scas
mov
cmp
sbb
aam
mov
stos
movsl
mov
or
testl
roll
mov
jns
xchg
dec
mov
pop
cli
pop
scas
stos
mov
pop
inc
clc
inc
es
push
movsb
icebp
jmp
add
in
push
orb
and
jg
add
pop
and
mov
or
fsubs
shlb
adc
cmpsl
fdivs
push
mov
movsb
mov
inc
and
movsb
movsl
pop
int3
jg
mov
subb
lahf
fiadds
mov
add
mov
inc
bound
pop
enter
fldcw
add
lods
call
das
sbb
jae
adc
dec
jmp
dec
push
fdivrs
je
mov
sbb
lcall
cmp
push
lahf
loopne
xchg
enter
xlat
sub
or
dec
adc
jae
lret
paddusb
das
inc
inc
dec
adc
pop
cmp
leave
adc
cmp
inc
aam
push
in
fbstp
push
and
in
or
jbe
mov
pusha
mov
les
pop
outsb
stc
xor
or
mov
jns
je
add
iret
bound
pop
jl
jmp
jp
cmp
cmpl
mov
fstl
fdivr
xor
add
stos
lock
stos
mov
xchg
je
pop
insb
or
mov
mov
loope
mov
cs
dec
mov
int
mov
dec
insb
lods
pushf
mov
insb
aaa
add
push
movsl
aaa
ja
add
cs
lods
push
sbb
fnstenv
sahf
fnstcw
test
and
loopne
mov
mov
cmp
insb
xor
lds
xor
vpperm
dec
ss
jp
cmp
push
es
xlat
imul
jge
sub
lcall
mov
mov
xor
adc
jl
shl
sub
das
xchg
inc
jb
ret
test
ds
pop
push
cmpsb
aam
or
push
jl
pop
adc
add
mov
inc
xchg
cmp
into
sub
andl
cmp
xor
popf
insb
or
bound
sub
bound
dec
bound
push
xor
enter
cmc
jne
and
sub
arpl
negb
jo
es
ljmp
dec
inc
push
push
movsb
test
lods
sbb
out
mov
clc
adc
movsl
adc
push
dec
or
inc
ss
into
jmp
xor
mov
stc
in
in
loope
xchg
and
clc
or
push
insl
pop
and
xchg
pusha
mov
jl
stos
lret
pop
aaa
inc
xchg
mov
or
push
cmp
mov
mov
add
ret
adc
sbb
xor
sub
mov
and
push
mov
mov
add
xor
sbb
fmull
loope
das
outsb
sbb
jle
insb
or
mov
outsl
xchg
inc
dec
movsl
adc
popa
outsl
rorb
mov
push
call
sbb
mov
rcrb
popa
fwait
popa
lds
fistps
int3
push
movsl
movb
js
adc
inc
pop
add
data16
fiadds
xchg
clc
fmull
pop
sahf
fadds
mov
outsl
scas
movsb
xchg
dec
mov
mov
mov
lret
pop
fbstp
scas
js
or
leave
nop
and
mov
or
lret
sahf
out
out
test
add
pop
popa
mov
in
xor
test
roll
push
and
xchg
lock
push
shl
repz
sbb
mov
cwtl
cmp
fcmove
dec
add
sbb
jno
mov
fsubs
or
xchg
jge
adc
sub
je
aam
and
sbb
or
push
mov
imul
push
pop
out
xchg
add
dec
or
mov
lods
dec
testl
adc
xchg
ficoml
xor
lcall
stos
dec
add
lahf
stos
jmp
sbb
mov
aam
add
clc
sahf
repnz
loopne
dec
adc
fcmovu
mov
inc
call
ds
jns
jmp
pushf
dec
add
mov
cmp
scas
adc
pop
mov
mov
aad
repz
mov
es
iret
pop
pushf
das
sbb
mov
ljmpw
cmp
lds
xor
lcall
inc
xlat
xchg
popf
bnd
es
arpl
loop
mov
mov
test
aaa
jo
repz
aam
mov
shl
je
mov
test
int3
mov
xchg
ds
xor
out
pop
and
push
enter
sub
arpl
xchg
movsb
mov
jge
ja
jmp
and
jecxz
cs
jmp
adc
xchg
cmpsb
cltd
adc
mov
fcmovbe
push
scas
mov
shlb
pop
pop
push
aas
jge
js
dec
add
fs
insl
out
sbbb
fnsave
idivb
xlat
les
push
push
push
out
daa
cmp
cmp
xor
negb
sarb
jnp
sbb
mov
push
sub
popf
sbb
pop
adc
mov
and
inc
clc
aad
jmp
mov
mov
cmp
aaa
movsl
mov
or
mov
in
lahf
inc
sbb
repnz
fwait
jp
js
fidivrl
and
neg
cmp
inc
aaa
dec
and
icebp
les
lods
out
and
lahf
sbb
mov
hlt
xorb
adc
lock
enter
mov
sahf
mov
fincstp
inc
sahf
frstor
enter
mov
sarl
mov
fnstenv
xlat
mov
push
dec
in
push
pop
fnstcw
scas
sbbb
in
push
push
sub
idivb
test
or
and
pop
scas
add
mov
sarb
fsubl
mov
scas
cwtl
or
push
pop
cmc
call
adc
imul
hlt
sub
outsl
notl
movsl
xchg
mov
int3
pop
mov
inc
fisubs
lods
scas
add
xor
pop
fisubs
adc
cltd
fimuls
mov
stos
test
rorb
mov
sbb
icebp
call
test
clc
cwtl
pusha
mov
jnp
popa
lea
call
push
lock
mov
xchg
xlat
push
insb
mov
push
push
dec
pop
lret
fdivrl
fiadds
sbb
push
insb
push
sub
vmread
test
rorl
dec
negl
lahf
xchg
negl
jl
or
stos
inc
and
or
push
hlt
mov
mov
jg
pop
fisubrs
das
xor
fnstcw
daa
xchg
cmpsl
cmpsb
mov
push
arpl
cli
mov
add
addb
jge
jbe
and
stc
jnp
inc
jb
sarb
or
adc
or
jl
cmp
inc
fldenv
lret
sub
lret
sub
jns
rcrl
adc
inc
fcmovb
into
inc
mov
add
aaa
dec
xor
sahf
fistpll
fsubl
sbb
lcall
pop
dec
cli
shrl
cmc
add
jne
into
imul
xor
roll
mov
mov
pop
add
dec
scas
scas
insl
inc
mov
jne
scas
cld
dec
mov
cmp
iret
jae
mov
jge
aad
jecxz
xchg
jb
xor
das
iret
shrb
inc
inc
cvttps2pi
and
ljmp
sbb
cmp
push
stos
pushf
xchg
hlt
int3
cmpsl
push
mov
repz
cld
jns
add
sub
fisubrl
es
jno
jbe
add
mov
adc
sbb
sbb
push
in
aad
sbb
dec
inc
cld
push
sub
and
mov
movsl
cmp
push
inc
sarb
xor
pop
fdivrl
rcll
push
ret
lahf
xor
mov
fwait
add
mov
cmpb
test
or
test
mov
pop
pop
gs
addl
lods
mov
mov
push
inc
mov
addr16
call
lcall
shlb
jge
test
int3
sti
leave
or
mov
mov
jp
insb
mov
das
pop
sarb
or
jp
stos
lods
test
jl
je
mov
inc
mov
mov
xor
jmp
dec
cmp
and
mov
repz
mov
push
mov
push
mov
sbb
clc
stos
mov
adc
pop
mov
pop
mov
repnz
cmc
xor
imul
add
cwtl
lea
inc
stos
add
test
fstl
pop
and
mov
fldt
xor
ret
jp
mov
enter
movsl
or
push
arpl
hlt
lods
adcb
or
or
mov
mov
mov
jmp
cltd
pop
inc
aad
jmp
in
xchg
and
data16
rcrl
arpl
scas
mov
pop
xchg
lret
sti
stc
pop
clc
inc
mov
lcall
push
sub
dec
in
adc
aad
dec
jnp
mov
mov
mov
jmp
lahf
mov
push
out
push
add
pop
ds
rcll
push
inc
mov
or
pop
add
pop
insl
outsl
es
mov
pop
clc
push
adc
jle
dec
imul
ljmp
es
fidivrs
xchg
sbb
add
test
daa
push
clc
dec
lea
cs
repz
in
or
addr16
cwtl
ret
and
lods
cmc
scas
movsl
inc
in
mov
test
addr16
mov
xlat
adc
inc
int
xchg
pop
dec
imul
dec
inc
pusha
aad
cwtl
stos
mov
scas
lods
adc
int3
stc
add
push
pop
mov
inc
fidivrs
out
sbb
add
lret
push
pop
jp
lock
clc
adc
cmpsl
xchg
sarl
xor
or
es
mov
and
ljmp
adc
xor
out
pop
and
push
cmp
sbb
mov
xchg
fildll
fwait
rcll
subl
int
lods
xor
test
push
jp
jne
lods
xchg
in
mov
je
call
xchg
sub
hlt
xor
jbe
ds
ljmp
enter
leave
imul
xchg
into
push
inc
jle
mov
scas
int
jnp
sub
lret
pop
jg
lods
outsb
std
xor
mov
pop
divl
inc
inc
lds
fcompl
xchg
js
push
mov
iret
cs
aam
mov
xlat
xor
push
ss
and
ret
cmp
pushf
shl
aaa
lcall
inc
push
into
push
fstpl
mov
ficomps
xchg
mov
sub
and
sbb
or
and
and
sub
add
mov
cmpsb
sub
insb
push
xchg
push
dec
lock
push
push
xchg
cld
or
sub
cmp
mov
mov
pop
and
mov
inc
lcall
jnp
cld
in
lods
xchg
je
mov
stos
je
dec
cmp
push
js
hlt
xor
push
xchg
ljmp
push
gs
inc
sbb
or
inc
adc
dec
out
and
lahf
xchg
fcmovnb
fimuls
outsl
into
loopne
sti
xchg
mov
lock
std
retw
mov
jle
addb
hlt
div
xor
add
into
fsubrl
divb
movsb
adc
pop
pop
rcll
add
xchg
loope
add
loop
sub
or
imul
aas
subb
aaa
mov
adc
dec
lret
and
mov
stc
mov
cs
mov
cmpsl
dec
push
pop
sbb
test
mov
outsb
push
mov
test
out
ret
sub
mov
popa
xchg
cmpsl
int3
adc
subl
jne
stos
mov
push
sub
fimull
addr16
xchg
mov
scas
in
ret
sahf
jnp
adc
lock
pop
xchg
jl
xor
mov
ret
ret
dec
lret
pop
xchg
mov
gs
aad
repnz
cwtl
arpl
xor
mov
icebp
jns
xorl
clc
cmpsl
or
sbb
push
stos
lock
fdivl
sbb
adc
aad
decb
pop
mov
cltd
rolb
dec
int
add
dec
adc
cmpsb
dec
cmpsb
or
jle
gs
movsl
fcmovnu
int3
push
push
ja
xchg
jo,pt
stos
push
into
sub
cmp
lock
jbe
dec
lret
dec
loopne
and
repz
mov
movsl
inc
add
add
in
js
xchg
cmp
jnp
insb
mov
pop
js
ret
out
fcmovb
daa
hlt
mov
or
jno
mov
iret
ret
psubsb
test
fcompl
pop
js
imul
mov
flds
loop
jo
aam
nop
dec
dec
hlt
mov
xor
cmpsb
adc
out
dec
adc
dec
movsl
xchg
insl
loope
and
sub
pop
sbb
cmpsl
pop
mov
sarl
mov
mov
push
js
out
sbb
dec
movsl
lock
and
cmp
lods
mov
mov
fwait
adc
jnp
int
pop
pop
mov
lods
xorb
sarl
jne
outsl
and
mov
leave
mov
sbb
test
lods
adcl
ficoml
aaa
adc
dec
jnp
mov
sbb
dec
pop
pop
int3
cwtl
inc
cwtl
clc
mov
rclb
cwtl
add
cmpsl
out
xchg
or
das
popa
mov
jae
add
xlat
ret
mov
jmp
push
mov
xor
inc
mov
mov
scas
mov
push
jecxz
cmp
mov
pop
lods
xor
cmp
ds
add
add
fs
inc
xor
mov
or
pop
fimull
lahf
in
mov
xchg
dec
xchg
jmp
repz
rorl
dec
movsb
push
es
pop
or
inc
les
lcall
cmp
cs
xchg
popa
push
js
pushf
pop
dec
sub
gs
xor
cmp
fcomi
out
enter
cs
cli
icebp
jo
and
lods
sub
xlat
xor
pushfw
push
mov
dec
shll
aad
push
mov
cwtl
int3
jnp
ret
add
cli
or
mov
adc
mov
mov
jns
std
aad
sub
add
mov
inc
push
mov
mov
shr
push
pusha
scas
in
ret
inc
test
adc
popl
movsb
enter
xor
xor
lods
fistpll
fiaddl
sti
push
adc
sbb
loop
mov
push
xor
or
lret
pop
fs
pop
jo
sub
fldl2e
pop
pop
test
dec
rcrb
scas
shl
dec
mov
test
fimull
out
int3
insl
fwait
xor
cwtl
movsb
aad
out
pop
push
cld
adc
js
sbb
and
jge
pop
xor
mov
in
sti
lahf
add
cltd
hlt
aas
inc
sbb
sbb
test
adc
ret
jb
imulb
std
sbb
rolb
cmp
stc
pop
lret
fisubrl
fbstp
cmp
in
sub
sti
pop
dec
xor
bound
mov
add
fwait
or
mov
adc
or
ljmp
fstps
scas
jb
sub
pop
mov
cs
gs
call
sub
sbb
jne
cltd
push
inc
jge
cli
cmp
cmpsb
mov
inc
rcrb
fdivl
adcl
aam
pop
mov
or
movsb
jb
aaa
jg
fwait
leave
push
adc
loopne
dec
cmpsb
mov
adc
xor
or
sbbb
cld
das
ja
xor
mov
arpl
cmp
int3
cmp
xchg
imul
or
mov
xlat
aam
push
test
cmp
lcall
iret
jb
dec
and
jns,pt
jns
repz
or
fcmovne
xchg
or
sub
inc
mov
je
stos
dec
pop
sarb
mov
mov
scas
sbb
jge
iret
jmp
jnp
or
dec
sbb
dec
dec
testb
andl
lcall
cmpb
mov
loope
or
dec
sub
icebp
mov
mov
jmp
inc
addl
repnz
popf
and
fs
sub
movsb
jg
or
sbb
xor
lcall
xlat
iret
leave
push
imul
in
pop
in
push
mov
aad
stos
adc
cmp
mov
scas
mov
or
leave
mov
out
mov
push
ljmp
imul
add
add
pop
ss
loop
inc
or
sbb
xorl
ficoms
loop
cvtps2pi
in
cmp
shlb
lahf
add
cltd
mov
out
stc
or
cld
cmp
ds
sahf
leave
adc
ret
std
cmp
addr16
sbb
dec
push
mov
inc
fldt
pop
clc
sbb
sahf
dec
cmc
mov
insl
push
push
and
adc
inc
or
or
test
cmp
mov
cmp
jmp
push
push
mov
shll
jae
popf
mov
and
mov
ret
sub
push
xchg
cltd
sub
int
mov
ret
dec
or
cmp
mov
repnz
cmp
jb
enter
pop
xchg
xchg
jno
pop
shll
in
add
shlb
and
repz
dec
cltd
or
cld
das
push
or
ljmp
ljmp
aas
clc
orl
pop
push
arpl
mov
xor
inc
sbb
mov
dec
cmp
ss
pusha
nop
leave
sub
jne
sub
mov
nop
mov
inc
xor
out
ljmp
jb
je
jmp
mov
out
fistpll
mov
mov
or
rorl
pusha
pop
test
fwait
mov
pop
arpl
dec
loope
fsubrl
int
jo
pop
xchg
jno
stc
ja
cltd
shl
pop
jl
inc
imulb
lods
call
jge
sarl
ret
leave
cmpb
cltd
xchg
pop
adc
pop
outsl
int3
std
scas
in
rorl
dec
pusha
mov
aas
insl
pop
test
or
or
mov
insb
pushf
pop
cmp
mov
jg
test
rolb
cmc
rol
loopne
pop
mov
xor
or
mov
cmp
in
adc
fisttpll
push
cmp
cmp
ret
imulb
in
and
lret
das
sbb
push
ret
mov
insl
fidivrl
ds
movsb
and
sub
pop
rolb
inc
mov
inc
ficoms
xchg
sarb
sbb
es
cmp
mov
mov
add
stc
cmpsl
ja
xor
lret
test
fnsave
or
pop
daa
int
jl
cmp
cli
pop
cwtl
insb
fisttps
mov
or
stos
subb
jl
jbe
xor
in
lds
movsb
jb
fcomip
mov
and
push
inc
mov
push
inc
mov
leave
adc
adc
jge
cmp
call
add
inc
push
sub
test
aam
adc
ret
fimuls
rsm
pusha
sti
xor
aad
test
shlb
es
imul
sub
out
insl
xor
loopne
ret
fcomi
in
and
pop
push
call
imul
mov
dec
test
mov
ret
aas
or
jnp
mov
arpl
jns
adc
xlat
notl
mov
push
out
lds
dec
mov
fists
repz
in
test
lods
push
test
lods
int3
repz
xchg
sbb
fimuls
pop
mov
mov
mov
test
and
movl
lods
test
sub
inc
leave
aam
mov
adcl
in
push
fsub
mov
ret
shlb
sahf
jle
jns
xor
in
cli
push
sti
out
jne
xchg
aad
push
popf
pop
xor
inc
push
mov
ret
daa
pop
sub
js
sbbb
pop
cwtl
inc
and
into
add
lahf
xchg
add
lea
pop
stc
mov
jbe
out
in
push
outsb
scas
out
xchg
pop
sub
jmp
repnz
push
and
stos
xchg
or
sub
push
or
test
rorl
scas
aam
or
loopne
push
sbb
iret
mov
stos
xchg
jl
dec
mov
fldt
inc
jbe
cmp
cmp
test
xchg
incl
xchg
test
nop
cmc
xchg
push
andl
outsl
iret
push
scas
imul
add
bound
test
out
sbb
loope
xchg
lahf
sub
mov
lods
sarb
roll
fwait
ds
cmp
sti
pushf
jbe
or
in
pop
mov
jge
adcb
sbb
sub
add
in
jnp
int
aad
cld
cmp
dec
and
add
cs
subl
xchg
jbe
or
int3
pushf
dec
dec
xor
cmp
mov
stos
mov
jecxz
mov
mov
push
fstl
fldenv
mov
fwait
jns
add
or
ret
jae
xor
cmpsl
mov
xor
xor
mov
pop
add
push
xor
xor
imul
xchg
or
insl
gs
rorl
inc
out
iret
imul
push
adc
xchg
loopne
lret
cmpsl
outsl
mov
bound
push
cld
lret
sub
cmc
sub
rep
fsubrl
xchg
xor
add
sub
sub
mov
lret
enter
sbb
mov
pop
jp
fbstp
cmp
repz
out
enter
jl
lahf
jb
std
in
enter
push
loop
cmpsl
daa
iret
rolb
in
lahf
leave
or
inc
or
cmpsb
leave
or
aaa
fsubs
and
cmc
cltd
jle
push
adc
or
repnz
andb
adc
inc
je
cmp
pop
inc
scas
push
and
adc
insl
adc
mov
lods
popf
lock
mov
ja
push
bound
ljmp
test
and
in
mov
xlat
outsb
out
mov
dec
in
cwtl
mov
adc
xor
data16
in
lret
dec
jmp
lods
addr16
sahf
fcos
cmp
xchg
jp
pop
scas
test
mov
adc
psrad
and
ret
or
adc
jg
mov
adc
stc
mov
lea
sub
addr16
add
incb
js
rcrl
and
push
bound
shrl
cmc
mov
mov
in
mov
inc
cmpsb
dec
in
cmp
jge
push
or
ljmp
inc
pop
sbb
jb
fdivs
push
xchg
pop
ds
cmp
int3
push
ja
mov
xor
dec
ljmp
mov
cs
faddl
cltd
and
pop
xor
xchg
stc
in
sub
lods
dec
xchg
xor
jg
sub
scas
push
mov
adc
push
ds
mov
loopne
cmp
mov
inc
stos
je
movsl
fcomps
mov
ss
adc
mov
aad
sbb
mov
lock
ds
daa
cmp
rolb
ja
dec
adc
dec
imul
lods
jp
lret
aam
inc
xor
iret
or
test
in
sarb
jae
lods
pushf
mov
dec
scas
data16
jmp
mov
scas
cld
mov
inc
ret
cmp
mov
aad
xchg
jbe
xor
in
nop
cwtl
rcll
andb
pop
idivl
jl
int3
imul
mov
mov
jbe
pusha
jno
popf
into
mov
cmp
push
cmp
mov
mov
fistl
xchg
mov
shlb
movsl
lds
lahf
std
mov
shlb
and
and
aam
push
insl
xchg
subl
push
push
sarl
dec
add
add
sub
mov
leave
pop
aad
dec
lds
jne
aaa
ficoms
dec
pop
ljmp
mov
jl
jmp
mov
mov
mov
hlt
sub
pop
dec
and
sbb
xor
jns
daa
cmpsl
ja
bound
add
ss
enter
adc
int3
cltd
adc
aaa
imul
lock
out
nop
jns
mov
mov
add
xor
dec
adc
or
and
jae
push
mov
jl
push
idivl
sub
icebp
sahf
stos
int3
jle
call
xchg
mov
hlt
inc
shll
jl
xchg
mov
lods
sub
int
pop
mull
mov
icebp
push
scas
dec
add
and
lcall
sub
neg
pop
inc
outsl
and
imul
fsqrt
mov
decb
mov
xor
nop
jbe
or
insl
addr16
jne
sub
rcrb
xchg
pop
sbb
cmpsl
lock
addl
adc
nop
sub
and
sub
jl
std
sbb
pop
aas
ds
fists
fisttpll
adc
ret
lret
mov
je
jns
aaa
mov
cmp
movsl
mov
sbb
fisttpl
pop
das
sub
pusha
movsb
aam
movsl
mov
inc
mov
pop
lret
mov
mov
and
das
out
icebp
mov
movsl
je
lea
cli
jp
or
cltd
jae
add
int3
es
ret
int3
cmp
nop
jp
push
adc
mov
mov
fwait
lods
sbbb
in
loope
mov
test
iret
mov
sub
popf
inc
xlat
mov
mov
xlat
xchg
stos
pop
inc
pop
xor
adc
mov
inc
inc
push
mov
mov
daa
dec
mov
icebp
pop
xor
or
inc
mov
pusha
sub
cmpsb
cli
loopne
cld
adc
push
and
mov
dec
pop
jge
xchg
scas
pusha
in
jmp
pop
pop
cmp
cwtl
vmwrite
xor
test
cli
ficompl
cmp
dec
gs
pop
out
test
pop
scas
stos
andb
gs
not
dec
xchg
mov
out
hlt
insb
outsb
ret
fcomps
pusha
scas
or
jns
popa
jno
xlat
mov
push
xchg
stos
lds
stc
xor
push
mov
jb
dec
popa
aaa
in
das
sub
mov
pusha
push
or
xchg
ljmp
popf
ljmp
or
jmp
mov
mov
dec
jp
add
cmc
mov
neg
gs
arpl
sbb
and
loop
sub
cli
sub
daa
aad
dec
mov
mov
mov
je
inc
cmp
jbe
xchg
or
xlat
divb
jmp
sbbb
adc
sbb
xor
cmp
jne
add
xor
mov
loope
and
and
cmpsb
sbb
add
sub
push
mov
pop
push
mov
inc
aad
push
fsubl
inc
cmc
sub
xchg
std
inc
enter
and
cmpsb
stos
clc
enter
inc
dec
aas
dec
pop
testb
jecxz,pn
stos
lret
or
cli
lret
in
incl
daa
loop
and
xlat
xor
lret
push
mov
adc
int
nop
adcl
push
arpl
repz
in
mov
xchg
mov
jae
loope
arpl
test
loop
mov
in
es
push
enter
cmp
lea
xor
cmp
jl
shll
stos
pop
cmpb
fcoms
andb
mov
insb
inc
cbtw
xchg
int3
and
ja
and
lea
sbb
inc
cld
adc
fildll
mov
adc
mov
rdtsc
ficompl
xchg
in
pop
dec
sub
dec
mov
jmp
les
cltd
push
and
lods
int3
sbb
test
hlt
sahf
mov
repnz
inc
xchg
xchg
jae
fistps
sub
xor
cmpl
xor
lret
jle
dec
je
sub
dec
add
mov
push
es
inc
icebp
pop
adc
lret
idivl
bswap
push
xor
push
aad
in
test
js
jb
mov
fisttpl
push
arpl
scas
pop
nop
shll
mov
mov
dec
mov
inc
sbb
sub
adc
sbb
repnz
xchg
cmp
xchg
xchg
aam
sbb
pop
push
cli
sub
rorl
mov
pop
repnz
or
scas
mov
and
sub
ss
pop
mov
push
test
std
stos
dec
xor
rcrl
test
bound
iret
int
dec
ret
movsb
sbb
mov
or
inc
xchg
jnp
les
fnstsw
lods
arpl
rorb
popf
pop
xchg
js
push
push
movsb
sub
scas
clc
jecxz
pusha
outsl
scas
adc
jmp
scas
fs
cmc
mov
push
cmc
sbb
pop
cmp
xor
push
insb
sbb
xor
mov
rcll
pop
inc
jp
jb
stos
ds
push
movntps
sbb
insl
lcall
xchg
jb
dec
das
xchg
stc
loope
mov
je
outsl
shll
popf
gs
dec
out
mov
jmp
push
mov
sbbb
mulb
out
add
pop
cli
lea
adc
ss
cmp
sub
lods
adc
mov
mov
jo
sti
sub
test
arpl
hlt
jbe,pt
mov
dec
mov
sub
cmp
lods
pop
mov
push
imul
xchg
dec
sbb
xlat
dec
jae
push
addb
push
push
mov
into
inc
movsb
add
dec
cmp
lock
in
mov
inc
addb
mov
and
int3
cmp
jo
lock
scas
ss
test
pusha
ficoms
push
js
adc
mov
sbb
pop
rcll
aas
aaa
lods
push
push
xchg
hlt
xchg
in
aaa
bnd
dec
cmpsb
pusha
neg
cwtl
sbb
fisubl
scas
mov
mov
test
addb
int
test
sub
xor
out
leave
mov
mov
pop
jno
aaa
popa
fldcw
pop
pop
fidivl
push
js
test
addr16
leave
adc
xor
sahf
inc
out
rclb
or
add
fadd
mulb
pop
push
out
cmpsb
mov
xor
dec
imul
xor
les
pop
pusha
jp
into
adc
mov
mov
fiaddl
int
fcoms
jecxz
mov
fs
xchg
bswap
and
lea
sub
xchg
mov
pusha
mov
int
dec
lahf
sub
or
leave
clc
mov
xchg
sub
flds
sbb
sbb
nop
cwtl
mov
push
decl
pop
mov
mov
aam
xchg
xchg
ret
push
loopne
sub
int3
push
fdivl
xlat
lcall
mov
gs
lcall
jecxz
sub
xchg
fnstenv
subb
cmp
test
pop
pop
fnstsw
stc
fisubl
cltd
pop
pop
imul
stc
lods
and
adc
jmp
je
outsb
popf
test
mov
movsb
xor
adc
xchg
jmp
jb
mov
fcom
rcll
or
loop
xchg
cli
inc
shr
mov
push
iret
arpl
push
testb
fisubrl
data16
pop
rolb
mov
pop
mov
dec
push
inc
add
pop
xor
test
stos
sbb
mov
addr16
jo
arpl
lea
shrl
int
mov
or
daa
or
out
xlat
mov
in
les
xchg
jl
ds
aad
lahf
inc
icebp
inc
push
xor
sub
mov
pop
subb
dec
jb
insl
adc
mov
mov
sbb
inc
ss
ret
jns
lea
mov
push
les
sub
inc
adc
loopne
mov
aam
les
add
pop
roll
ss
xchg
pop
mov
notl
shlb
sub
lcall
xchg
popf
or
stos
sub
test
cmpsl
inc
cwtl
mov
dec
mov
fucomi
pop
sub
mov
jbe
je
pop
push
inc
xor
popf
ret
jns
fldenv
sub
dec
jge
jns
imul
or
jno
imul
jne
out
jecxz
clc
mov
ret
xor
clc
pop
das
das
pop
ss
stc
xchg
ljmp
jo
stos
cmpl
pop
push
scas
lods
jae
pop
cmp
fiaddl
into
jae
cmpsb
cwtl
out
cmp
test
ss
or
xchg
or
jle
push
out
mov
xchg
push
out
data16
adc
and
out
outsl
pop
xor
test
addb
daa
jb
or
xor
adc
add
push
lea
imull
in
int
inc
mov
hlt
hlt
lahf
sbb
cwtl
sub
outsb
je
xchg
mov
in
inc
mov
inc
mov
sbb
cmp
add
sbb
jae
xchg
fidivl
xorl
testb
inc
loopne
push
and
or
mov
pop
outsb
in
push
jecxz
inc
jne
gs
dec
in
fnsave
sbb
xor
addr16
push
or
adc
aam
icebp
dec
imul
jb
popa
xchg
pop
fadd
addb
clc
xchg
push
dec
mov
nop
jl
stos
push
pusha
xor
out
cs
push
repz
sbb
fs
or
pop
jae
push
imul
xchg
push
sarb
pop
orl
aam
inc
or
in
xor
lods
jg
cld
xchg
dec
les
lods
dec
mov
sarb
push
iret
aad
repz
jbe
cmp
mov
test
test
pop
xor
and
aaa
lods
test
mov
jno
sbb
dec
jbe
lret
inc
iret
and
mov
push
stos
fs
mov
jae
rorl
stos
int
icebp
cmc
mov
add
incl
add
push
negb
dec
and
mov
iret
adc
enter
pusha
out
inc
test
cmova
jl
out
test
xchg
inc
nop
cmpb
mov
lods
test
aas
lods
daa
push
xor
test
test
mov
aam
push
add
and
sti
lods
pop
cltd
add
cld
ljmp
inc
lock
xchg
mov
jb
jp
outsb
scas
cld
scas
adc
shl
je
push
inc
pop
and
pop
stos
cld
cwtl
mov
inc
js
pop
stos
dec
jg
pop
push
call
push
and
mov
dec
jecxz
aaa
scas
es
das
inc
adc
and
insl
push
aam
pop
pop
jne
xchg
push
sbbb
mov
mov
mov
jae
lock
fdivl
push
sbb
outsl
cmp
push
xchg
iret
pop
pop
rdtsc
jge
stc
mov
and
pop
jae
sub
clc
sbb
fcomps
imul
sbb
adc
and
movsl
jb
rcrl
pop
fmull
or
push
insl
cmp
pushf
adcb
push
push
in
movsb
jo
shll
gs
sbbb
push
cld
and
mov
dec
shlb
mov
in
out
jnp
lea
adc
stc
setle
mov
sti
rcrb
mov
mov
lock
ret
adc
shr
es
sbb
setge
adc
xlat
sbb
adc
pushl
sbb
std
inc
xchg
scas
loop
push
cmpsb
cmpsl
adc
andb
jb
test
sub
repnz
jbe
vmovshdup
pop
xor
sub
insb
inc
fstps
daa
shrl
xchg
bound
fidivl
xor
jb
sbb
mov
nop
out
xchg
pop
sbb
inc
cmp
push
push
push
outsl
sahf
adc
jae
sub
jle
lret
jge
roll
dec
lret
rclb
ficoms
test
or
dec
sbb
ja
add
movsb
loop
pop
cmp
dec
lcall
imul
sarl
cmp
add
bound
add
fmulp
sub
fists
jnp
mov
jb
cmp
sti
ret
pop
pop
inc
jl
std
sub
arpl
imul
cwtl
js
xor
dec
cmc
mov
or
imul
mov
inc
or
jge
or
sub
int3
ret
mov
xchg
call
sbb
dec
loop
push
push
daa
adc
aaa
xchg
leave
movsb
test
bound
sbb
mov
jae
roll
xchg
stos
stc
mull
push
jmp
test
cmpsb
mov
rcll
gs
ja
xlat
sbb
xchg
test
aad
push
mov
in
adc
sahf
gs
or
pop
mov
fwait
sub
sahf
pop
daa
hlt
adc
sbb
in
or
jo
shll
call
data16
lods
frstor
mov
dec
psubsw
clc
lret
jmp
mov
test
inc
fucomip
ror
and
das
xchg
adc
xchg
mov
jp
mov
loop
and
adc
sbb
adc
lods
sbb
push
in
jne
inc
and
xchg
inc
roll
push
dec
std
lret
sbb
arpl
cmp
mov
pop
scas
scas
sbb
jb
xor
lahf
sarl
stos
mov
mov
jae
out
aam
mov
loope
stos
leave
add
fsubrl
dec
cmp
outsb
int3
mov
xor
cmp
and
not
sub
mov
fs
stc
push
leave
test
push
mov
inc
cmp
fwait
mov
mov
dec
mov
iret
dec
in
dec
sub
ficompl
inc
out
jns
fdivrs
inc
xchg
rcrb
sub
dec
iret
xchg
out
sbb
iret
jmp
imul
ljmp
xor
test
push
lock
loope
lret
push
outsl
sahf
and
fcmovnb
cmp
push
pop
pop
xor
pop
pop
or
jne
xor
int3
inc
push
cmp
sub
mov
jle
adc
mov
stos
jmp
lock
xchg
and
jae
adc
adc
mov
adc
mov
inc
cmp
pop
mov
cmp
repnz
pop
imul
or
std
pop
fnsave
fsubs
push
xorl
or
daa
or
cmp
jge
arpl
sub
repz
fcmovnbe
xchg
cld
xor
jne
sub
lods
mov
xor
pushf
jno
lcall
xor
loop
shrb
pop
mov
filds
testb
es
fcompl
pop
xchg
jbe
jne
out
leave
add
test
fldl
pusha
pop
xchg
nop
in
xchg
pop
cmp
in
mov
ret
adc
int3
in
add
cltd
nop
outsl
das
movsb
stos
scas
mov
imul
ss
pop
adc
dec
push
test
imul
xor
inc
pop
mov
cs
into
cmp
repnz
inc
shll
or
aas
stc
jno
aad
mov
icebp
add
dec
mov
stc
adc
or
sti
arpl
xchg
adc
ss
test
push
enter
repz
test
cld
xor
xchg
xor
adc
out
lods
loope
mov
and
push
or
das
sub
adc
outsl
mov
iret
jmp
stos
lds
jg
repz
testb
sbb
sahf
andl
es
cli
out
roll
mov
push
jg
into
cmp
lret
vpcmpgtb
dec
xchg
mov
dec
repz
imul
xchg
add
sub
adc
sbb
test
mov
sbb
push
hlt
sbbl
fiaddl
mov
mov
imul
jmp
jbe
js
mov
mov
out
push
inc
das
mov
sarb
sbb
or
loopne
jge
iret
or
fdivl
lods
push
push
cmp
sub
push
jmp
shlb
lds
int3
inc
pop
pop
and
arpl
or
mov
adc
cltd
mov
and
xchg
faddl
ud2
shlb
fstps
xchg
cmp
mov
pop
push
jbe
rcrb
out
pop
dec
enter
mov
enter
shr
enter
lods
jl
sub
jae
in
xchg
pop
or
xchg
pop
and
ljmp
adc
into
lea
xchg
jo
or
movsl
and
cmp
in
jbe
mov
leave
inc
mov
push
cmpsl
jl
test
fsubs
jo
add
jmp
rclb
cmpsb
cmp
push
daa
pushf
or
jno
je
and
scas
pop
fwait
cmp
sbb
fnstcw
in
lcall
push
pop
pushf
daa
out
daa
ljmp
sub
add
idivb
inc
inc
or
or
adc
in
jb
adc
testb
cld
mov
fsubs
push
into
out
shrb
pop
and
aad
and
xchg
mov
js
jb
adc
push
sbb
cmp
aam
xor
or
subl
fldenv
ret
pop
jno
and
lahf
lods
sbb
out
push
rorb
jae
mov
lods
hlt
jmp
call
loopne
imul
in
repz
std
adc
ss
mov
mov
dec
cmp
jp
lret
mov
movsl
push
push
jns
roll
and
dec
icebp
pop
mov
gs
cltd
sbb
out
incl
in
jge
sbb
sub
jae
cwtl
push
into
jbe
or
fimuls
dec
xor
xor
cmpsl
and
inc
neg
sbb
and
shlb
test
mov
je
negb
fldt
mov
or
inc
leave
popf
xor
xor
cmpl
ficomps
les
mov
and
xchg
xor
es
xchg
fs
pop
mov
inc
cmp
rcrb
shrb
xlat
adc
js
movsl
js
out
and
lds
loop
lock
std
fstpt
sub
enter
inc
adc
movsb
js
ljmp
arpl
push
or
sti
enter
push
jns
jbe
sub
out
loope
hlt
stos
push
sbb
xor
dec
std
stos
mov
or
fdivl
lahf
nop
in
cwtl
pushf
cmp
fsubrs
std
movsl
aam
dec
out
cld
dec
divb
js
xor
mov
jbe,pt
std
es
jmp
push
add
std
jle
add
dec
sbbb
mov
adc
push
mov
sub
cmp
sub
fisubrl
sbb
lods
icebp
or
sub
xor
or
pop
pop
xorl
xlat
adc
js
fs
out
inc
xor
add
xchg
cmp
dec
jl,pt
dec
add
push
mov
dec
aas
aam
leave
lret
jle,pn
fwait
xor
xor
xchg
data16
pop
pop
mov
stc
lods
cltd
pusha
cltd
cmpsl
in
adc
lret
stos
adc
int3
cwtl
and
or
icebp
mul
cmc
pop
cmpsb
outsb
jnp
gs
aas
pop
push
repnz
outsl
imul
or
lret
int3
mov
scas
mov
stc
leave
dec
adc
push
mov
hlt
mov
cmpsl
mov
es
sbb
adc
sub
cld
mov
pushf
out
adc
push
popf
push
int3
lds
mov
icebp
sbb
insb
cmp
cwtl
repnz
insb
pop
xchg
fcoml
addl
scas
sub
pop
jb
rolb
push
popf
or
add
or
fstps
pushf
mov
arpl
scas
pop
sbb
inc
mov
and
push
loope
cmpsb
or
daa
adc
pop
pop
call
in
dec
dec
test
fwait
mov
mov
es
movsb
inc
add
mov
and
inc
mov
push
or
dec
xchg
imul
sub
pop
dec
fwait
in
mov
jne
xor
mov
mov
dec
jae
sub
clc
push
sub
imul
movsl
mov
daa
icebp
pop
pushf
mov
test
jns
sub
mov
stc
cmp
lea
daa
mov
sub
lret
lcall
jmp
sbbb
std
out
in
mov
lock
sbb
sub
inc
test
mov
xchg
call
inc
add
dec
adc
sub
mov
pop
inc
jp
jae
push
dec
movsb
mov
int
mov
cltd
mov
adcb
aam
mov
xor
orl
test
cmp
enter
mov
scas
sub
dec
mov
int3
lods
arpl
sub
mulb
inc
outsl
lahf
push
rcrl
cld
repz
and
push
frstor
testb
lret
cli
int
mov
mov
push
icebp
adc
fnstcw
int
rorl
jp
or
aad
aas
movsl
adc
push
cwtl
inc
jecxz
mov
pusha
push
movsb
adc
mov
shr
add
ja
mov
inc
lds
inc
jecxz
movsl
idiv
dec
mov
mov
cmp
or
fsubp
test
jns
jecxz
in
roll
cld
pop
fcompl
fwait
pusha
push
sbb
add
adc
cwtl
mov
add
mov
add
xorl
jmp
repz
jns
jno
andl
dec
or
xor
loop
daa
pop
jno
rorb
out
mov
sti
addb
jmp
ljmp
arpl
ds
jle
mov
pushf
scas
lret
jl
xchg
lcall
push
pop
aam
pop
neg
add
jecxz
arpl
xchg
loopne
push
jne
cltd
sbb
data16
jle
jne
frstor
add
xchg
mov
loope
iret
dec
adc
mov
mov
loope
out
mov
jnp
jno
cmc
aam
adc
push
sti
jecxz
aas
adc
arpl
fcmovnu
adc
or
enter
call
jmp
lea
xlat
out
js
jp
dec
sub
xchg
cmp
mov
push
cmpb
sbb
mov
jbe
sub
cmpsb
push
pop
push
jl
sbb
fdivl
adc
pusha
mov
mov
out
js
mov
jmp
push
xor
iret
pop
xchg
lahf
mov
iret
mov
xchg
pop
inc
les
inc
popf
into
add
sbb
icebp
push
add
std
dec
movsb
adc
mov
inc
fcmove
pop
add
subb
xchg
sbb
ljmp
ja
movb
insb
and
aaa
fidivrl
lods
jne
leave
pushl
loop
push
cltd
xor
jmp
push
sub
mov
add
cmp
ret
jns
out
cmp
in
into
jecxz
pushf
sub
call
pop
sub
xchg
int
js
inc
ret
stos
add
mov
daa
je
imul
minps
push
xor
xchg
incl
jno
stos
stc
pushf
loope
jbe
lcall
xchg
addr16
xor
imul
inc
hlt
mov
sti
ja
push
jp
int
jno
push
movsb
rolb
mov
sti
mov
mov
xchg
push
mov
mov
xchg
sbb
push
pushf
adc
xor
pop
fadd
fwait
ljmp
cs
cld
adc
xor
notl
sbb
inc
mov
daa
cmp
enter
adc
jne
xchg
mov
add
cwtl
lret
lock
shrb
jp
sub
inc
fstpt
test
aam
dec
in
mov
cmp
or
dec
addr16
cmpsl
testb
and
data16
mov
mov
les
rorb
jp
rclb
cmp
jae
rorb
cmpl
mov
mov
xor
sbb
ds
xor
jne
add
push
xorl
push
push
pop
pusha
das
mov
mov
mov
movsb
fidivrl
xchg
pop
jnp
xchg
hlt
dec
adc
aam
ljmp
sbb
ja
lcall
adc
jae
cmc
or
push
sub
xchg
cmpsl
mov
xor
aas
sub
into
xchg
cmp
push
daa
adc
fisubrs
fcmovu
shll
roll
dec
cwtl
push
jae
push
je
pop
mov
sti
sub
iret
push
push
rcrb
int3
scas
dec
mov
inc
inc
fsts
outsb
jno
in
mov
mov
es
ret
push
ljmp
and
fnstcw
inc
sbb
dec
hlt
cmc
gs
jnp
imul
xor
cmp
jno
sbb
iret
fs
inc
xchg
inc
pushf
push
pop
xchg
test
sti
loope
subl
and
jns
push
sti
and
mov
add
movsb
jl
rcll
push
leave
pop
sahf
add
sbb
imul
rorb
xor
cmp
lods
cli
cs
pop
sub
mov
loop
ja
test
aam
movsb
out
icebp
and
in
pop
shll
dec
xchg
aam
outsl
dec
xchg
mulb
icebp
bound
aaa
xchg
loopne
or
rcll
jmp
subb
adcb
clc
jecxz
aaa
sarb
fs
stos
cmpsb
inc
test
repnz
inc
ds
popf
sbb
dec
jns
inc
movups
mov
and
jne
cmp
or
mov
mov
int
mov
mov
hlt
sub
movsb
mov
xor
mov
and
pop
jecxz
pop
sahf
fwait
or
loopne
push
and
pop
out
mov
arpl
mov
dec
popa
lods
pop
push
xchg
scas
ds
or
mov
mov
mov
cmpsl
jge
push
shl
insl
sub
fs
mov
aas
fcmovne
dec
icebp
inc
pop
and
aam
mov
push
jns
aam
jns
jle
xchg
jecxz
lret
push
pop
lods
cmp
cmpsl
pop
lea
dec
and
cmp
lret
sbb
in
out
xor
jb
repnz
in
and
shlb
pop
xchg
xchg
mov
jp
push
ret
cltd
inc
in
in
test
jbe
mov
dec
sbb
mov
aaa
stos
fsubrl
ret
add
push
cltd
cmp
addl
mov
lcall
mov
push
in
push
insb
lahf
out
lret
and
nop
ffreep
pop
xchg
mov
sub
dec
sbb
jecxz
shl
jle
push
cmp
movsb
pop
mov
xchg
jge
fwait
rorb
xchg
ret
lea
inc
popf
xor
cmp
movsb
sub
jg
inc
lods
int
mov
fbstp
mov
stos
xchg
lods
jg
loopne
ljmp
mov
rcrl
pushf
dec
xchg
lock
leave
mov
push
inc
pushl
out
jl
cmp
leave
dec
aas
out
mov
add
inc
mov
cli
cwtl
aas
inc
xchg
push
sub
push
js
gs
daa
xor
dec
faddl
or
push
add
movsl
push
lret
push
rcl
dec
or
xor
pop
push
sbb
mov
xchg
xor
jbe
push
and
clc
cs
push
in
in
adc
leave
xor
mov
cmp
cltd
lret
aaa
sub
int3
xchg
aas
push
cli
in
std
or
nop
loop
shll
inc
lods
xchg
shll
mov
xchg
dec
add
out
rclb
mov
cmp
pop
xchg
or
out
int3
cli
int3
inc
pop
pusha
mov
mov
jo
scas
mov
cwtl
push
fstps
in
out
jnp
mov
sbb
jp
sub
sub
pop
mov
mov
aad
enter
adc
mov
adc
adc
out
movsb
xchg
insb
js
lods
add
or
imul
iret
cmp
xor
mov
fldenv
cmc
testl
sarb
nop
jmp
std
cmp
xchg
repz
es
push
mov
mov
std
push
sub
sbbb
scas
dec
nop
cmpsl
mov
xlat
pop
inc
lret
xchg
or
movsb
mov
mov
shlb
loop
xchg
xlat
bound
xor
scas
and
loope
gs
jl
pop
dec
leave
adc
fcoms
inc
cmpsl
cmp
mov
popf
pop
iret
jo
jo
gs
sub
or
js
xor
nop
push
push
add
addr16
adc
jmp
sbb
push
mov
imulb
es
jno
out
mov
stos
rolb
push
cs
mov
nop
inc
inc
repnz
sub
cmp
push
sti
mov
jle
push
pop
arpl
xlat
insl
xor
popf
sbb
and
dec
dec
and
pop
or
or
xlat
dec
push
mov
or
adc
rolb
imul
cmp
sbbb
shrl
sbb
xor
or
jo
xchg
cmpb
adc
cmpsb
out
nop
jecxz
hlt
jbe
inc
fistps
cmp
fsts
cld
mov
mov
and
mov
mov
fdivrp
mov
aam
xor
aaa
xor
wrmsr
out
mov
adc
sub
int3
sub
hlt
mov
les
push
cld
xor
push
push
ljmp
pop
dec
pop
fwait
ja
mov
fnstsw
aaa
hlt
mov
mov
cmp
pusha
sbb
shll
pop
push
dec
sbb
push
mov
xchg
fisttps
in
ficoml
add
pop
mov
mov
mov
jg
cltd
cltd
mov
daa
out
pop
enter
mov
inc
xchg
and
jge
lea
push
psubsw
icebp
addr16
push
xlat
or
and
in
insl
jge
mov
adcl
pushf
pusha
stc
push
loopne
lret
shl
or
fisubrs
stos
mov
sub
jmp
aad
movsl
je
aaa
add
das
shll
dec
xor
mov
loopne
incl
cmp
add
in
adc
rcll
outsl
lret
cmc
adc
jl
ret
andb
test
sub
div
rorb
ss
xchg
push
test
fbld
dec
insb
push
xor
pop
add
andb
decl
mov
sub
jnp
daa
and
lahf
fbld
dec
dec
sbb
rorb
mov
dec
jge
pmaddwd
ss
push
addr16
loopne
aad
fbld
sarl
adc
add
fistpl
adc
push
stos
mov
sbb
inc
jg
mov
mov
push
cmp
ds
mov
and
popf
cmp
in
sbb
jl
iret
mov
aad
jbe
mov
cmp
in
fists
dec
xor
mov
inc
ja
popf
sbb
mov
repnz
xchg
mov
pushf
jno
fstpt
dec
add
nop
pushf
pop
stos
in
mov
divl
jo
cs
inc
sbb
mov
lds
aaa
in
popa
mov
fdivs
inc
repnz
inc
mov
in
test
fsubrs
push
inc
pop
aad
add
orl
jmp
fildl
frstor
pop
pop
rolb
add
sbbb
enter
inc
pop
fcomps
push
sub
mov
shrb
mov
xor
cld
cmp
sbb
shlb
vhsubps
arpl
jbe
mov
dec
and
outsl
jle
sub
repz
lcall
and
cli
aas
inc
sbb
pop
loopne
daa
push
sbb
jns
mov
xchg
mov
mov
inc
aaa
std
dec
push
sbb
adc
xchg
lret
sbb
mov
lea
xor
and
jge
and
inc
inc
call
data16
cmp
sbb
mov
inc
sub
insl
and
movsb
push
push
subb
cmc
fnop
aad
sub
ret
adcb
test
sbb
mov
jne
imul
lds
dec
xor
ljmp
imul
push
ljmp
inc
pop
dec
in
xchg
fldcw
jle
lcall
push
push
push
in
or
dec
xlat
mov
fistl
rclb
mov
cmp
adc
test
movsb
push
inc
push
or
xchg
divl
mov
cmp
inc
popa
adc
iret
cmp
jb
std
out
jno
cmp
sbb
loop
stos
push
mov
sbb
jno
push
xchg
hlt
lds
xor
xchg
lret
mov
pushf
inc
jno
add
leave
mov
rcrb
lock
movl
stos
xor
addr16
loope
cmp
lcall
in
jge
xchg
pop
inc
cmp
sti
sub
out
pop
add
xor
xchg
aas
je
dec
or
insl
repnz
add
int3
pop
push
cmp
xor
pop
sub
ret
sti
addr16
shlb
ds
lds
mov
js
mov
sbb
mov
jbe
pop
testb
and
jmp
les
lret
data16
mov
lods
aad
sbb
push
mov
into
inc
mov
pop
ret
call
push
fistpl
sub
les
fmuls
xchg
mov
xchg
shl
loop
lret
pushf
shrb
mov
lods
ss
push
bound
mov
test
inc
out
inc
xchg
or
ljmp
mov
inc
cli
fcos
dec
mov
lods
aas
xor
cmp
cmp
pop
cmpsb
cmp
pop
jge
pop
ja
sbb
inc
jge
inc
cmp
adc
daa
in
sub
test
add
jns
sti
xor
cltd
mov
loop
inc
inc
dec
dec
push
mov
mov
or
cld
or
push
pop
xchg
add
mov
addr16
jo
pop
pop
xchg
cmp
cmpsb
repnz
in
sbb
ret
lea
and
add
into
sub
mov
sub
dec
add
or
pop
cmc
stos
movsb
movsb
dec
and
push
out
das
xor
pop
or
jl
aam
testb
dec
cmpsb
cmp
add
sub
rolb
fstpl
loop
bound
stos
es
fs
mov
arpl
icebp
pop
adc
pop
dec
ds
cmc
xsha1
cmpsb
mov
and
and
jo
test
pop
jmp
add
xchg
imul
in
lods
push
pop
mov
shrb
pop
iret
lods
mov
cltd
fcoms
outsb
mov
jmp
iret
mov
inc
and
xorb
leave
les
xlat
and
jno
not
subl
inc
ljmp
andl
sahf
fisubl
fsubr
xchg
out
xor
ret
adc
test
stos
mov
fmull
jne
hlt
iret
ror
xchg
add
test
or
int
and
jnp
and
lock
jge
out
mov
or
imul
inc
inc
test
add
jns
mov
and
jg
xor
faddp
mov
xor
cmp
jbe
int
in
mov
push
lret
jge
xchg
stos
and
lds
nop
and
loope
mov
icebp
xor
lock
arpl
adc
inc
in
push
ret
sbbl
cmp
data16
inc
dec
std
dec
cmp
dec
lret
iret
fnstcw
mov
mov
in
push
rclb
jno
and
out
mov
es
add
les
mov
dec
push
ret
cmp
rcrl
mov
push
inc
inc
call
out
lods
xchg
push
ljmp
xchg
sub
jmp
push
test
jmp
dec
enter
cmp
jecxz
push
mov
arpl
addl
mov
ret
inc
fidivrl
cmp
cld
add
arpl
xor
test
imul
in
imul
jae
ret
mov
into
mov
call
loop
xchg
ret
pop
add
dec
out
addr16
add
push
lods
ljmp
xor
mov
xchg
jb
iret
pop
dec
fadds
lret
cmp
jb
scas
dec
pop
arpl
test
xchg
out
xchg
nop
mov
xor
andl
mov
mov
outsb
jp
ret
ret
dec
das
push
inc
fdivl
xchg
mov
mov
adc
sub
mov
sbb
divb
mov
popl
pop
xchg
add
outsb
movsl
addb
lea
sahf
insl
and
icebp
jnp
pusha
out
out
stos
imul
lods
add
in
test
dec
pop
jb
xchg
movsl
ss
and
aas
adc
mov
xchg
sbb
adc
leave
sub
mov
sbb
hlt
lret
cwtl
or
subb
call
cmpsl
and
lcall
out
clc
adc
aas
dec
mov
test
push
adc
cmp
sbb
sbb
stos
cmp
xor
jns
stc
push
add
aaa
pop
sub
push
mov
hlt
push
cmc
sub
popa
fs
jmp
push
sub
daa
dec
cmp
in
push
or
add
stos
divl
inc
jbe
shrb
roll
xchg
fwait
dec
pop
les
jae
test
inc
fdivl
movsb
int3
lods
lret
mov
cmpsl
inc
cmp
mov
jecxz
mov
and
push
mov
stos
loopne
adc
shlb
cmpsl
xorb
mov
test
cwtl
insl
sbb
and
iret
push
jecxz
cli
xchg
loope
test
ret
sbb
fdivs
pop
ja
pop
dec
loope
mov
jns
cltd
pushf
rcr
add
cmc
jno
imul
dec
xor
or
pop
push
fildll
cmpsl
jge
inc
push
or
jnp
je
fadd
xchg
jno
or
fadds
jl
inc
adc
mov
lahf
pop
fsts
hlt
mov
or
gs
icebp
or
outsb
xchg
jge
enter
dec
rcl
mov
jmp
outsl
shr
sbb
and
aaa
in
or
mov
cmpsb
jae
outsl
call
movsl
push
cmp
inc
adc
and
shll
adc
insl
into
jb
sub
xor
pop
xor
je
inc
enter
and
sahf
cld
ds
iret
dec
in
ret
sbb
adc
test
dec
push
ret
add
xchg
fmuls
and
pop
mov
adc
push
add
mov
scas
icebp
or
sar
rclb
mov
jo
clc
test
mov
xchg
out
lods
fwait
jnp
cli
outsb
movsl
push
sbb
mov
and
addr16
push
shr
clc
xor
dec
mov
sti
dec
mov
push
jle
gs
ror
xchg
sub
aad
lcall
sbb
dec
or
bound
adc
movsb
cmc
and
xchg
aas
iret
pusha
xchg
adc
js
lods
or
in
movsb
xchg
dec
xlat
fs
pop
lods
cs
js
jp
inc
jbe
inc
jo
xor
push
push
or
mov
add
mov
lds
jno
mulb
popa
add
shl
push
sbb
cmp
subl
cmp
enter
ret
in
inc
sbb
dec
xchg
xchg
inc
adc
xchg
inc
aad
dec
test
fnstcw
and
nop
jge
outsb
sbb
loope
and
incl
add
arpl
sub
jl
push
mov
sbb
xor
roll
cmp
stc
add
fyl2x
or
or
jle
inc
jbe
scas
dec
or
adc
xor
mov
jne
neg
pop
sbb
jnp
pop
mov
ja,pn
xchg
test
mov
jbe
jmp
mov
pop
inc
aad
outsl
fldt
call
lea
mov
sti
xchg
add
mov
cltd
aam
loope
fchs
xchg
push
cmp
and
aaa
into
jns
outsl
fwait
cmp
mov
xchg
mov
push
xchg
mov
negl
call
or
enter
cmp
into
pushf
das
cs
jg
dec
fldlg2
mov
into
fdivrl
lret
aaa
push
iretw
and
sbb
mov
jb
push
mov
mov
sub
or
pop
and
inc
es
leave
dec
shrl
jo
or
and
fs
popf
adc
mov
ja
lret
or
pop
outsb
push
ret
push
inc
mov
stos
aaa
decb
mov
sbb
dec
mov
jmp
cs
repz
mov
movsl
dec
push
push
testl
loopne
push
in
sbb
xchg
xchg
inc
stc
test
rclb
dec
movswl
notb
jg
aaa
add
fs
pusha
push
cli
in
sbb
and
outsl
in
adc
inc
push
stc
pop
mov
xchg
aas
xchg
push
xor
clc
push
sub
sub
mov
fisubrs
out
call
cmp
push
jnp
hlt
xor
inc
les
in
push
inc
mov
ljmp
gs
mov
lret
mov
and
jg
push
or
jmp
push
fstps
sub
push
inc
xchg
jae
shlb
push
xchg
cld
lods
lods
xchg
insb
scas
xchg
adc
adc
sbb
inc
cltd
ret
pop
mov
das
lods
call
pushf
sbb
pop
fsubl
imul
arpl
fwait
popa
repnz
loop
jno
fldt
pop
arpl
adc
push
xor
mov
add
scas
jae
mov
mov
sbb
cmp
and
adc
mov
fsubrl
out
mov
add
mov
xchg
gs
sbb
pop
cmp
jbe
inc
cmp
or
fwait
xor
rcl
frstor
add
inc
iret
sbb
cmpl
repz
lcall
adc
imul
iret
lods
popa
andb
in
in
in
xorl
in
dec
mov
fsubrl
jbe
inc
bound
mov
sbb
js
mov
and
sbb
fs
dec
idivb
pop
cmc
pop
mov
adc
cmp
or
pusha
mov
orl
pop
adc
addb
mov
fsubrp
popa
jmp
cltd
insl
cmpsb
xor
push
ja
lea
or
push
mov
mov
ret
scas
push
push
fadds
fcomps
mov
xlat
jno
xlat
lahf
outsb
lret
and
addb
test
dec
pop
xlat
push
or
adc
dec
jp
scas
iret
sbb
daa
hlt
pop
lods
jo
xor
fdivrp
jnp
orb
cmc
sub
xchg
push
or
sub
divb
cmp
or
idivl
leave
mov
js
fimuls
ret
and
scas
or
mov
mov
xor
pop
xchg
add
insb
or
cmp
repnz
add
cs
cwtl
dec
inc
jle
das
mov
pop
orl
sub
adc
std
mov
pop
in
inc
hlt
push
dec
sub
pusha
jbe
adc
cmp
ss
pop
mov
fs
ljmp
cmp
mov
fistpl
cmp
rcrb
jmp
pop
sbb
gs
bound
stos
jecxz
mov
into
dec
add
dec
outsb
repnz
cmp
push
lock
mov
rcr
inc
fnstcw
inc
js
sbb
mov
dec
jle
arpl
push
add
orl
scas
leave
aas
insb
lds
fstl
add
dec
xchg
xor
add
dec
mov
push
ret
nopl
sub
outsl
repz
dec
into
inc
int
notb
add
test
aaa
outsb
lret
xchg
push
lods
loop
cmp
jp
ret
and
sub
cmpsl
adc
out
lods
or
xchg
xor
mov
push
loopne
out
dec
pop
int3
repz
inc
dec
je
out
scas
out
jnp
cld
or
mov
movsb
adc
leave
jo
mov
inc
or
ja
mov
xchg
or
adc
jg
aam
pusha
jb
jmp
test
lods
push
cmc
push
cmpl
push
sub
std
pop
or
addb
insb
sbbl
shrb
xchg
push
mov
push
or
hlt
in
std
jbe
and
sbb
into
add
dec
or
icebp
sbb
mull
or
out
int
xchg
les
push
mov
stos
mov
xchg
orb
add
dec
mov
inc
lods
mov
jge
fistps
dec
cmp
outsb
dec
jle
lods
xchg
cmp
xor
movsb
test
cmp
out
test
mov
rorb
inc
repnz
aad
subb
inc
and
jb
movsl
and
mov
mov
test
cmc
mov
in
cmp
aaa
mov
hlt
dec
xor
xlat
call
jmp
adc
mov
imul
pop
shl
dec
repz
pop
mov
mov
test
and
sbb
stos
xchg
ret
cwtl
outsb
mov
add
pop
dec
or
fnstcw
dec
enter
stc
inc
sub
or
mov
push
das
add
cmp
or
dec
adc
js
aaa
loopne
iret
shll
or
mov
in
push
ret
jo
jne
jp
push
outsb
jae
prefetch
xchg
sub
sbb
xchg
stc
mov
mov
xchg
stc
cld
jecxz
mov
mov
fs
test
loope
jae
pop
sbb
ret
mov
into
fwait
jecxz
push
or
add
cmp
sbb
push
mov
sbb
lods
int
jne
push
nop
scas
pop
int3
or
ljmp
inc
mov
and
jb
stos
cmc
mov
fbstp
xchg
notb
add
inc
xor
cs
shl
test
lods
in
rclb
stc
imul
jb
ret
clc
sbbl
mov
popf
xor
js
mov
adc
das
cs
mov
mov
pop
rcrl
cmp
es
mov
jg
dec
pusha
clc
sub
add
mov
jmp
jae
cmp
or
pop
ljmp
repz
fistps
cmp
xchg
pop
dec
std
push
imul
lods
sbb
mov
mov
xchg
push
les
inc
jecxz
cmp
imul
pop
adc
negl
fisttpll
bound
movsl
sub
sar
aaa
push
rcll
popf
mov
hlt
mov
and
xchg
mov
mov
sub
push
and
cld
dec
loopne
and
outsb
outsl
inc
mov
push
sti
out
repnz
mov
mov
fistpl
sbb
mov
jno
or
test
or
rolb
fnstenv
addr16
or
adc
enter
in
xchg
sahf
pop
or
imul
mov
outsb
pushf
or
add
lret
std
ret
xor
push
sub
andl
test
add
or
movsb
adc
sbb
fcompl
inc
scas
pop
pop
push
scas
setb
pusha
mov
xor
lock
mov
push
out
mov
xor
mov
call
cmp
gs
movsb
pushf
or
and
jecxz
test
enter
fldcw
xchg
mov
in
ds
into
outsl
mov
jp
stc
test
data16
ret
fcompl
incb
pushf
ds
dec
popa
add
shl
cmp
jno
out
push
js
mov
loop
jge
mov
test
in
call
ret
leave
lret
lret
mov
aaa
or
call
test
stc
pusha
out
pop
pop
orb
outsl
fisubl
les
xor
push
or
dec
push
test
ret
rorb
out
inc
sub
add
xchg
les
les
jecxz
pop
pop
out
sbb
iret
dec
or
add
in
pop
adc
cs
inc
daa
cli
pop
jmp
push
bound
cld
pop
mov
gs
aad
jmp
pop
imul
out
imul
xor
push
lods
jb
and
sti
shlb
jns
in
aam
iret
push
inc
cmpsb
insb
lods
fcmovnu
or
pop
jp
push
jns
mov
ficompl
add
gs
inc
mov
push
pop
outsb
sbb
cmc
or
faddl
xchg
jg
mov
movsl
cwtl
inc
imull
aas
push
fs
loope
jge
loope
outsl
sub
int
and
xlat
imul
inc
or
sbb
jle
rcll
or
jae
pop
adc
push
sbb
sti
leave
ret
scas
icebp
jne
aaa
mov
addr16
sbb
jle
xchg
sti
push
out
shrb
jl
push
aas
es
add
pop
pusha
fwait
or
out
ss
pusha
movsl
cmp
inc
scas
enter
cmp
std
cs
mov
out
mov
or
dec
mov
pop
mov
sbb
test
xchg
jmp
clc
jp
mov
stos
loope
movsb
js
cmpsb
sub
les
push
jnp
push
push
mov
dec
cli
int3
jo
stos
je
pop
in
mov
adc
mov
add
inc
jl
push
js
jns
adc
inc
outsl
sub
test
in
gs
cmp
fwait
or
test
imul
test
and
fisttpl
lret
movsb
fistpll
fdivr
lret
cmovo
cmp
jmp
adc
push
das
xorl
add
or
ja
sbb
xchg
cmp
mov
mov
push
push
push
lahf
push
or
stc
pop
jge
pushf
xchg
dec
jno
mov
int3
insl
shrl
jge
cmc
xchg
scas
std
mov
and
sbb
test
add
fimull
sub
push
pop
jo
pop
add
xlat
lea
test
ljmp
dec
bndstx
pop
jo
push
rorb
jnp
jb
mov
enter
mov
pop
rorl
and
and
ljmp
ret
add
sub
test
xlat
pop
jge
xchg
ja
push
mov
pushf
adcl
scas
pop
clc
jge
inc
xor
out
imul
mov
mov
mov
and
jns
pop
jnp
inc
daa
cs
push
sub
jo
xor
xchg
push
das
out
mov
rcr
adc
dec
cmp
or
test
ds
xchg
rorl
xlat
and
mov
xchg
bound
stos
pushf
out
cmp
pop
popa
mull
or
lock
adc
add
mov
sar
in
mov
mov
mov
iret
popf
xchg
stc
or
out
xlat
mov
gs
mov
pop
jge
popf
insb
and
push
cmp
adc
mov
mov
inc
fadd
pop
xchg
adc
pop
and
stos
pusha
mov
or
nop
pop
mov
cmpsb
jmp
sub
mov
in
mov
out
and
add
pop
mov
negb
mov
lock
jb
mov
sbb
jle
mov
stos
fbstp
cmp
sbb
cmp
jecxz
push
xor
lods
cmp
sbb
pop
cmovp
jbe
stc
push
jo
rol
test
popf
incl
ljmp
and
jecxz
lcall
cli
enter
leave
clc
mov
jp
lods
sbb
mov
mov
mov
push
mov
xor
dec
and
hlt
push
mov
push
xor
rorl
jo
andl
ret
aad
or
movsl
push
imul
xlat
add
lahf
repnz
and
fildll
je
cs
inc
cmpsb
add
mov
push
movsb
aas
cmp
sub
xor
lahf
insb
inc
fadds
sub
fdivrl
gs
imul
inc
ret
cmp
or
jecxz
in
cmp
and
pop
pop
dec
out
jg
inc
dec
add
test
mov
das
cmp
das
les
and
jecxz
leave
adc
sub
mov
dec
fwait
push
pop
dec
and
cmpsb
xor
inc
jmp
call
mov
call
es
call
xchg
leave
scas
out
push
repz
jnp
and
cmpsl
cmc
jg
call
cmc
in
insb
outsl
daa
test
and
lea
fsubrl
icebp
mov
mov
xchg
in
sbb
outsb
shll
ret
jecxz
xor
call
subl
mov
rolb
sub
lock
test
es
cmp
xor
jmp
fs
nop
or
pop
cmp
mov
divl
mov
fldl
jae,pt
call
or
dec
dec
mov
pop
mov
addr16
xor
add
mov
test
cltd
lods
rcrb
mov
push
cli
add
cmpsl
daa
es
mov
pop
mov
std
xor
dec
scas
loope
mov
xchg
mov
add
xor
push
jge
in
push
es
rcl
pop
sub
sbb
xchg
sti
sti
mov
and
pop
test
or
add
fisttpll
hlt
dec
jmp
ss
in
xor
lods
xchg
dec
sub
daa
adc
je
mov
insl
repz
test
pop
nopl
jmp
jg
push
arpl
aam
or
sub
lds
adc
scas
jmp
cmc
lahf
xchg
pop
mov
mov
cmp
lock
iret
cwtl
push
repnz
cli
jg
enter
jb
ret
leave
out
lods
test
cmp
mov
mov
sub
aaa
into
jb
fs
xchg
add
fstpl
rolb
push
out
mov
or
std
cld
aaa
inc
arpl
sbbb
bound
xor
dec
fisttps
mov
or
ja
into
mov
xchg
subb
sbb
aad
mov
dec
ds
add
mov
jp
imul
in
popf
shlb
cmp
imull
jo
in
daa
popa
mov
ja
mulb
dec
lret
push
push
ret
push
fldl
daa
inc
push
sbbb
arpl
iret
movsb
scas
mov
mov
mov
cmp
xor
inc
popa
lods
adc
mov
loopne
push
sbb
jl
lods
loopne
mov
inc
jno
lret
insl
imul
ds
fisttps
lods
lret
je
jne
cmpxchg
std
mov
dec
xlat
inc
cltd
enter
mov
std
xchg
ds
fs
popf
cmp
inc
xchg
ror
add
rcrl
push
dec
and
inc
int3
pop
outsb
hlt
sub
mov
add
loopne
xor
popf
mov
add
adc
insb
idivb
mov
loopne
push
xchg
cmp
jno
mov
sub
add
test
data16
pusha
push
xchg
popf
jecxz
mov
mov
xor
aas
loopne
and
pop
subb
jns
or
xchg
pop
cmp
leave
mov
cltd
mov
mov
mov
push
and
add
dec
mov
sub
sbbb
insb
mov
sysret
ds
xchg
lods
fwait
push
mov
pop
stos
inc
cmp
or
out
push
inc
or
testl
xor
sbb
xchg
in
mov
sbb
xchg
mov
mov
vmread
sbb
add
imul
mov
cwtl
pop
mov
mov
hlt
add
mov
jb
movsb
adc
mov
mov
and
mov
mov
cli
adc
stos
cld
sbb
out
subl
and
aaa
aad
adc
add
pop
mov
push
or
adc
fimuls
push
add
cmp
sub
dec
jns
xor
sbb
mov
push
ficompl
ss
lea
pop
int3
mov
aad
mov
lahf
std
clc
insb
xchg
xchg
inc
roll
enter
sarb
mov
aaa
pusha
leave
mov
jbe
dec
aaa
test
iret
fwait
repnz
jnp
repnz
aas
mov
push
enter
out
pop
jp
jne
jmp
leave
xchg
in
ja
inc
lds
inc
add
nop
mov
test
sub
cmp
cmpb
jl
jl
aad
int3
sbb
push
pop
xor
push
push
push
mov
xchg
push
lret
sub
add
adc
or
cmpsl
pop
mov
sti
sahf
adc
mov
test
mov
mov
cmc
add
push
lods
loop
in
and
clc
sub
mov
cmp
dec
xor
loop
imul
out
and
cmp
leave
mov
sbb
xlat
daa
lds
or
jmp
lahf
push
addr16
idivl
jnp
mov
jb
mov
push
repnz
xchg
jnp
popa
jns
jo
aam
iret
or
repz
inc
lahf
mov
push
inc
inc
popf
idivl
andl
jbe
inc
mov
out
les
push
dec
push
and
lock
test
pop
mov
mov
lods
or
lods
shl
or
mov
push
xor
pop
fs
pushf
js
xor
call
dec
fdivs
test
movsl
rcrb
or
and
pop
ds
inc
int3
iret
sub
sarb
mov
mov
jb
xchg
push
xchg
xor
add
or
fisttpll
aad
mov
lret
jne
mov
sub
arpl
je
add
jmp
mov
pop
adc
shr
aam
shlb
inc
cmp
in
enter
or
popa
out
sub
rcll
xchg
add
xchg
add
cwtl
push
jmp
fdecstp
jmp
sti
in
ret
inc
push
adcb
out
mov
cmp
popa
pop
mov
cld
sahf
cmp
loope
mov
xlat
dec
sub
mov
movsb
xlat
xchg
or
xchg
xchg
notb
cmp
arpl
mov
stos
cmp
outsb
loop
pusha
aaa
out
mov
int
test
inc
fisubl
std
and
cwtl
ljmp
addr16
call
cmp
fiadds
inc
mov
fdivrl
sbb
cmp
insl
lahf
arpl
sar
xchg
mov
pop
cmp
out
push
mov
test
stos
add
mov
mov
dec
xor
int
pop
mov
inc
lea
add
lea
std
pop
adc
mov
pushf
add
fidivrl
mov
out
mov
rcll
and
dec
cli
cmp
jg
lods
out
and
outsl
mov
lret
and
fs
fcoms
cli
mov
aam
scas
xchg
or
sbb
mov
sbb
cmp
jle
negl
xchg
mov
test
out
in
imul
mov
clc
add
push
push
filds
nop
mov
xor
mov
pop
jecxz
lods
jnp
aad
ds
mov
pop
pop
je
ficoml
popa
mov
lret
mov
cli
sahf
and
sti
mov
test
mov
dec
movsb
filds
lock
das
mov
fimuls
mov
fbstp
cmp
jmp
fcoml
xor
out
shrl
imul
mov
inc
bound
fwait
rorb
inc
xchg
stc
xor
sar
mov
jbe
xchg
push
ljmp
mov
ljmp
pop
mov
and
and
rclb
negb
sahf
out
push
push
push
mov
sub
xchg
or
inc
inc
and
arpl
xchg
or
gs
jge
pop
or
or
jno
in
fwait
leave
ja
popf
mov
inc
add
inc
lcall
aad
pop
mov
mov
adc
mov
pop
add
sbb
pop
imul
les
pusha
les
inc
push
popa
int
mov
mov
aaa
xchg
jecxz
es
jecxz
aad
cmp
pop
or
fiaddl
xor
mov
out
jecxz
stos
mov
cmpsl
pop
insl
rcl
inc
jno
xchg
dec
mov
insb
and
stos
mov
scas
inc
push
testb
mov
mov
inc
push
cmp
xchg
pop
sbb
xor
sbb
mov
arpl
jecxz
push
mov
jmp
dec
mov
fwait
jge
pop
mov
lods
add
mov
sbb
pop
jae
shll
xchg
fdivrl
popa
in
xchg
mov
movb
daa
std
test
sbb
outsb
jns
leave
sub
test
xlat
loop
jb
fisubs
inc
push
bound
or
into
lret
dec
std
push
adc
push
icebp
cltd
xchg
mov
mov
shr
xchg
add
mov
pop
xlat
test
cmc
pop
mov
add
insl
mov
jle
adc
mov
pop
ffreep
jle
push
int
or
fcmovnbe
mov
xchg
add
xor
cmpsl
mov
hlt
inc
push
loopne
mov
ss
les
cmc
mov
out
dec
sti
mov
xchg
xor
sub
imul
mov
aas
xor
mov
lods
adc
or
out
dec
subl
mov
xchg
imul
xor
mov
fsubs
push
fwait
inc
lods
mov
sbb
loope
jg
nop
lret
xchg
out
mov
repz
cmpsl
ljmp
std
movsl
push
or
mov
or
cmp
xor
arpl
sub
mov
push
out
push
cld
into
pop
sub
cs
push
gs
out
jns
lds
pop
and
dec
ss
and
shrl
inc
and
xor
push
loope
movsb
dec
xlat
scas
fadds
rorl
out
addb
enter
or
xchg
cmp
stc
sub
push
inc
out
xchg
gs
fsts
cltd
repnz
iret
mov
add
fidivrl
cmp
pop
or
add
xchg
mov
insl
mov
dec
daa
inc
pusha
xchg
loope
stos
pop
clc
or
or
sbb
cmpb
test
or
jle
push
movsl
adc
push
and
rcrb
jmp
lods
dec
mov
cld
sbb
aam
mov
xor
cld
lods
pop
push
sbb
inc
aaa
in
repz
roll
es
fwait
push
lret
lea
ret
sub
ds
fdivrl
cs
movntq
lret
pushf
dec
cwtl
push
inc
inc
cmp
jno
mov
stc
cli
in
inc
stc
in
loop
jnp
lods
es
adc
cmp
pop
inc
push
hlt
pop
sar
adc
pop
outsl
int
xchg
pusha
loopne
mov
pusha
and
shr
rorb
gs
in
sbb
fcmovnbe
mov
or
mov
cmp
lds
sub
pop
lods
scas
cld
out
xchg
in
cmp
pop
in
xor
cmp
ret
and
mov
push
out
xor
mov
ret
mov
push
sbb
sti
mov
push
cli
shlb
lods
loop
fstpt
add
pushf
add
inc
dec
pop
xor
lea
iret
insb
cmc
sub
sti
jl
iret
popa
push
test
rorl
repnz
pop
addr16
sub
mov
mov
repz
mov
jl
out
aas
mov
xchg
ret
stos
inc
mov
pop
lods
pushf
fcomip
sub
pop
adc
adc
aas
iret
mov
arpl
push
rcrl
movsl
pop
in
sub
jmp
pop
movsl
cld
cmpsb
addl
inc
dec
lds
and
mov
push
pusha
js
gs
push
jmp
lds
mov
cmpsl
imul
sbb
aaa
pusha
inc
sahf
pushl
xor
sub
jl
leave
jbe
cmp
pop
mov
sbb
ficoms
mov
jne
xlat
sbb
push
stos
int
jle
inc
adc
out
inc
pusha
aas
xchg
pop
ljmp
iret
or
fidivrl
inc
mov
add
outsl
aad
data16
subl
es
jge
inc
dec
lods
xor
rorl
mov
iret
fistl
and
jae
cmp
cltd
cmpsl
xor
cmpb
pop
incb
repnz
out
ljmp
mov
sbb
fwait
mov
ret
les
icebp
shll
dec
adc
icebp
push
lods
test
jle
es
push
jg
outsl
mov
andb
push
jno
sub
fcoms
pusha
push
xor
lret
push
jnp
add
fdivrl
and
push
mov
subps
call
test
dec
pushf
das
mov
rclb
mov
mov
adc
dec
and
mov
in
test
iret
imul
andb
mov
arpl
sub
add
cmp
negb
cld
push
pop
inc
bound
xor
mov
icebp
jae
cwtl
in
sbb
dec
jns
xchg
data16
or
aas
in
js
outsl
add
aam
in
mov
fsubrl
sub
mov
push
int
fsubl
test
jp
adc
and
or
out
or
mov
cmpsb
sbb
in
push
inc
mov
adc
xlat
mov
lock
leave
mov
jnp
xor
fadds
jle
mov
es
jecxz
push
mov
lahf
add
cmp
sbb
mov
fidivs
iret
push
sbb
dec
or
and
outsb
sbb
ljmp
int
jg
jbe
xor
mov
out
pushf
pop
dec
das
leave
jnp
pop
xorb
xchg
ret
and
mov
dec
clc
orb
mov
aas
aas
pusha
in
popa
outsl
cmc
mov
xor
das
imul
in
neg
aam
dec
mov
jecxz
pop
pop
adc
mov
dec
cmpsb
int
mov
test
sbb
mov
fnsave
inc
inc
into
jae
clc
pushf
xlat
push
loope
jns
dec
mov
pop
js
insl
mov
mov
aam
cwtl
mov
mov
or
fstpl
fldln2
into
mov
aad
push
add
push
pop
mov
imul
xor
std
dec
inc
mov
sbb
sub
sarb
in
push
sarl
and
icebp
adc
mov
clc
cmp
fcomip
sbb
add
adc
cli
shl
jne
jecxz
pop
dec
jge
decb
mov
mov
out
inc
mov
jecxz
iret
loopne
mov
dec
add
dec
shrb
shlb
rorb
lods
daa
in
int3
and
into
fists
out
sahf
std
mov
adc
scas
popa
lcall
adc
clc
cmp
pop
imul
fistpl
sub
xor
ss
sbb
pop
push
sbbl
daa
mov
decb
xchg
scas
sbb
xchg
std
cmpsb
xlat
sti
test
int3
or
adc
mov
sub
or
test
sbb
repz
dec
pop
jecxz
push
jp
sar
out
pop
call
mov
adc
in
inc
js
inc
cmp
jmp
in
adc
adc
stc
push
imul
adcl
pop
ljmp
cmp
fisubl
pop
jge
jge
jmp
fcomps
lahf
les
scas
mov
subl
xchg
sub
add
das
xchg
repz
int
rolb
stc
push
mov
mov
loopne
mov
jo
xlat
xchg
pop
out
pop
pop
add
pop
sbb
aas
or
push
mov
xor
movsb
movsb
cmpb
mov
cmp
negb
xchg
shrb
loop
mov
ljmp
jo
and
stos
pop
ficompl
or
cmpsb
ret
and
addr16
arpl
fwait
fwait
pushf
pop
loop
popf
cmp
xchg
rcrb
sbb
mov
inc
nop
loopne
cmp
xchg
jne
jne
mov
ljmp
fnstcw
dec
xor
popa
fs
mov
stc
pop
mov
and
and
cmp
xor
mov
sbb
pop
stc
xchg
xlat
cmp
mov
stos
cli
popa
sbb
jne
out
or
inc
aaa
fmuls
mov
fadds
into
int
or
inc
mov
cmp
addr16
mov
jne
pop
push
int3
iret
xor
adc
pop
and
test
or
jmp
mov
xor
and
jbe
aas
or
and
mov
cmc
ja
xchg
es
loope
imul
mov
cmp
iret
imul
sub
stos
cmpsb
aam
aas
cltd
jo
cwtl
inc
fs
or
test
ffreep
pop
push
jne
cltd
lods
dec
lock
mov
in
mov
inc
in
pop
stc
pop
mov
sbb
sub
push
lahf
mov
jp
sub
inc
loope
jno
cltd
cmp
imul
push
push
push
sub
cmp
sbb
test
cwtl
push
push
aad
pop
cmp
outsl
pop
std
shlb
es
mov
sub
mov
add
lds
sbb
mov
mov
mov
bound
or
lods
das
mov
out
in
pushf
int
or
mov
jo
fs
clc
pop
ljmp
pop
cwtl
notl
push
dec
jg
push
xchg
mov
push
decb
scas
cmp
aaa
inc
lret
fadds
push
imul
cld
add
sahf
xor
lods
lcall
jnp
xchg
add
inc
jle
mov
into
dec
sub
movsl
mov
dec
mov
cmpsb
loope
jne
sarl
daa
cmpl
push
cmp
lods
dec
mov
loop
or
les
mov
xchg
mov
push
ret
loope
sub
push
imul
pop
scas
test
andb
out
inc
mov
mov
call
outsb
leave
scas
scas
xchg
jmp
and
jb
aad
inc
ds
jo
rcll
sbb
and
or
stos
mov
test
xchg
outsb
pop
repnz
test
hlt
inc
or
aam
mov
cli
mov
lahf
fimuls
leave
push
mov
ror
loop
mov
pop
scas
int
subb
pop
push
scas
lods
lret
xor
bound
xor
xchg
mov
stos
dec
test
in
dec
dec
or
pop
push
repnz
pop
mov
mov
out
inc
cmp
outsb
or
mov
mov
sbb
adc
lock
lret
dec
inc
repnz
add
jae
sbb
repnz
nop
pop
xchg
or
mov
mov
loope
and
arpl
pusha
or
adc
jp
jl
push
je
cmp
mov
dec
pop
add
jne
movsb
mov
sahf
push
icebp
adc
pop
pop
fists
and
pop
cltd
stc
mov
into
mov
or
adc
outsl
pop
sar
std
aas
push
faddp
xlat
out
or
dec
hlt
dec
jecxz
pop
std
push
inc
enter
movsl
stos
clc
push
fistpll
rol
test
dec
repnz
mov
inc
arpl
inc
add
addr16
adc
mov
std
in
or
js
xor
hlt
inc
psubusb
std
sbb
aad
out
leave
aaa
repz
pop
or
jg
enter
cmpsl
aas
sbb
cmpsl
or
aas
gs
mov
inc
int3
dec
loopne
sub
aas
call
imul
inc
jp
int
loop
lret
sahf
arpl
ss
arpl
push
lcall
loope
movsb
sbb
pushf
sub
mov
inc
lcall
adc
dec
mov
fwait
aaa
jecxz
ss
xlat
cmc
mov
push
dec
out
pop
lods
call
jmp
pop
jg
xor
pop
ja
ret
pop
sbb
mov
pandn
push
xchg
adc
sub
push
addr16
cli
jmp
das
dec
sahf
fdivrl
shll
cltd
call
inc
aas
jle
mov
sub
sub
ljmp
icebp
pushf
lret
cmpsl
jne
dec
ljmp
cwtl
into
xor
add
into
nop
cltd
cmp
aad
in
xor
addr16
in
xor
xchg
aas
fisubs
daa
stc
idiv
insb
testl
lret
pop
outsb
inc
or
dec
testl
arpl
xchg
out
test
fadd
jmp
xchg
adc
aas
push
adc
mov
mov
xchg
leave
mov
xor
mov
mov
xor
mov
dec
arpl
pop
shrl
gs
je
dec
cli
cmp
in
es
ret
gs
pop
shll
mov
in
mov
sbb
push
aam
push
mov
mov
bswap
push
push
sbb
add
insl
mov
push
je
and
push
xor
jns
dec
dec
jg
fstpl
pop
dec
scas
aas
xchg
cmpsb
xchg
and
mov
in
loope
inc
mov
cmpsl
mov
mov
mov
mov
aas
sbb
xchg
cmp
cli
xchg
mov
xchg
jns
sub
adc
xchg
mov
sub
mov
jp
and
push
inc
popl
add
test
jne
or
and
mov
pop
sbb
and
cld
jbe
sub
pusha
in
sub
js
dec
inc
cmp
loop
leave
add
aaa
inc
mov
inc
lret
into
mov
jno
aam
mov
sub
and
aam
dec
int
into
dec
ret
mov
iret
jns
popl
and
adc
jl,pn
push
into
add
sbb
mov
cmp
out
cmp
inc
adc
and
loope
sbb
push
xor
jno
add
adc
lcall
fldcw
sub
in
push
sarb
mov
adc
push
mov
add
pusha
cld
mov
pop
cmp
and
cmp
mov
lahf
rcrb
ss
inc
nop
sbb
push
fidivrs
cltd
mov
jge
jg
jl
mov
fcoml
jae
inc
dec
sbbl
repnz
mov
clc
into
add
sbbb
mov
sub
cmc
std
inc
iret
add
xlat
cmpsb
pushf
jecxz
lds
mov
cli
ljmp
adc
sbb
ljmp
push
inc
movsl
jb
lds
sub
adc
stc
sti
clc
xchg
sti
fldenv
push
or
insb
icebp
lret
xchg
cmc
sub
lret
push
push
stos
pop
pop
popf
dec
jecxz
sbb
js
fldt
mov
or
fstpt
mov
call
push
repnz
jae
nop
lods
push
movsb
fildll
in
mov
push
fcmovb
mov
or
out
and
mov
rol
mov
mov
insb
into
xchg
push
push
add
lock
imul
mov
xor
pusha
ret
xor
add
add
lahf
imul
imul
lds
aam
cmp
adc
cmpsl
and
lods
push
movsb
stos
jge
out
mov
imul
cmp
out
in
add
loop
add
inc
adc
scas
xor
rorb
jbe
iret
jae
sbb
pop
movsb
scas
mov
push
sarb
loopne
outsl
sub
inc
jnp
and
sbbb
add
push
push
mov
cli
into
or
std
popa
mov
adc
arpl
in
mov
test
out
subb
add
movsb
jl
lcall
aas
mov
sub
icebp
sub
scas
adc
sahf
aad
shlb
sub
lret
or
adc
mov
xchg
jo
jnp
inc
and
mov
sarb
mov
mov
lret
jno
mull
mov
addb
sbb
cmp
in
data16
fistpl
xchg
les
ja
mov
xchg
push
test
mov
or
les
or
movsl
je
rclb
add
jne
mov
lea
push
out
push
rorl
xchg
aam
add
jg
mov
imul
les
iret
mov
in
xor
sub
data16
dec
in
in
leave
mov
and
orb
jl
pop
add
inc
test
push
add
inc
clc
jge
loope
loopne
iret
sarl
mov
xor
outsl
insl
mov
test
jo
fldenv
ja
jo
lcall
ljmp
xchg
mov
inc
xor
push
push
pop
xchg
jo
jo
dec
cmpsb
dec
adc
mov
cmpsl
pop
mov
cmc
subb
inc
xchg
cld
lods
add
xchg
insb
push
shll
out
outsb
add
fistpll
icebp
xor
mov
adc
pop
jmp
xchg
push
dec
stc
pop
dec
cmp
shrb
cld
cmpsb
pop
adc
out
sbb
adc
pop
test
or
es
mov
mov
scas
mov
mov
dec
pop
xchg
test
roll
mov
or
std
sti
sbb
pop
mov
cmpsl
mov
je
pusha
jno
push
xor
stos
pop
inc
imul
pop
push
aaa
sbb
stc
cwtl
sub
insl
xor
cwtl
ljmp
int
mov
and
mov
aam
test
xor
cmp
jno
pop
outsl
jp
mov
loopne
add
jae
stc
push
ret
push
sub
cld
rclb
nop
or
fdiv
in
xor
test
push
mov
bound
cwtl
cmp
mov
iret
xchg
add
js
daa
imul
pop
in
mov
xor
pop
pop
iret
push
push
popf
out
jmp
repz
add
aad
push
int
jmp
test
leave
dec
and
mov
pop
test
scas
sarb
insl
mov
adc
mov
stos
es
jbe
ret
outsl
push
repnz
mov
fisttps
lock
cmc
jge
push
inc
int
inc
mov
sbb
sti
outsl
jmp
cmp
mov
push
test
rep
push
stos
jp
pop
xchg
lods
sbb
scas
jns
or
out
pop
lret
imul
mov
xchg
in
mov
dec
sbb
cmpsl
sub
push
sbb
sub
add
addr16
shrb
scas
sbb
out
data16
cmpb
popa
mov
filds
adc
scas
rolb
mov
call
cmpsl
cld
inc
mov
mov
pop
sarb
push
inc
scas
aad
mov
jae
cs
in
push
sub
mov
cmp
mov
mov
add
inc
mov
imul
aam
jne
out
pushw
sahf
data16
push
cmpsb
mov
movsb
fs
xchg
loope
or
mov
int3
dec
cmp
clc
add
jp
xor
jp
pop
mov
mov
sub
cmp
outsl
cmpsb
jae
fs
and
cmp
icebp
out
js
jb
mov
cli
fistl
xor
push
and
push
pop
sahf
pop
aad
cs
xchg
push
mov
mov
add
sarl
imul
jmp
mov
mov
or
mov
xlat
ss
in
in
adc
iret
iret
sar
mov
xor
sti
js
jns
jns
xor
mov
pop
leave
jno
adc
scas
iret
shrl
outsl
out
mov
jb
or
cli
mov
or
or
add
imul
nop
sbb
jbe
cmp
mov
mov
std
push
mov
jo
dec
daa
repz
ficompl
mov
sti
inc
and
das
out
pushf
fisubrl
mov
jns
leave
and
std
jnp
adc
cwtl
jg
out
ja
dec
repnz
pop
mov
rcl
jge
fistl
or
nop
ret
rorl
lock
dec
lcall
xchg
jg
add
jl
mov
jns
scas
aam
pop
pushf
cwtl
lods
pop
xor
push
fninit
cmpsl
inc
repnz
pop
mull
mov
stos
and
lcall
lret
adc
pushf
fwait
pop
icebp
mov
test
mov
jae
out
data16
or
sbbb
movsl
ret
xchg
pusha
fldt
jno
push
imul
aas
test
adc
ret
cmp
jmp
dec
adc
mov
dec
loopne
xor
in
add
cmp
int
je
cmp
sbb
in
sub
lock
xchg
jg
pop
inc
notl
xor
jae
pop
sub
daa
dec
popf
mov
popa
jmp
jmp
addr16
jae
and
repz
xchg
loopne
cmpsl
push
mov
sbb
mov
inc
xchg
imul
mov
shlb
xchg
push
push
push
lahf
test
mov
sub
or
sbb
mov
hlt
test
pop
mov
mov
mov
addr16
mov
inc
pop
or
imul
cmp
scas
adc
std
dec
cmp
std
dec
pusha
shrl
popf
jecxz
xchg
bound
or
call
daa
in
aad
inc
mov
mov
xor
sbb
mov
cmp
xor
inc
sbb
jne
enter
dec
mov
push
mov
addr16
das
pop
push
mov
mov
or
leave
nop
mov
sbb
scas
mov
cmpsl
imul
cmp
into
adc
les
sbb
out
filds
and
mov
and
cltd
scas
aam
dec
imul
lea
out
sbb
push
mov
xor
cwtl
ss
push
inc
lahf
aam
jmp
lret
aam
dec
push
ficoms
mov
or
jo
sub
add
movsb
mov
push
sbb
into
mov
xor
test
fisubrs
cmp
shl
add
repz
iret
fiadds
in
cmp
fsubl
int
push
pop
xchg
and
mov
mov
pop
jp
mov
in
add
jge
xchg
pop
push
in
out
xor
rclb
cli
and
cmc
xchg
stos
adc
daa
fstps
xor
dec
loop
mov
and
add
inc
cmp
stos
dec
mov
outsl
testl
jecxz
and
std
jg
in
cld
roll
jle
dec
hlt
stos
xor
pop
jb
mov
pop
or
sbb
dec
add
rorl
cmp
push
fmul
enter
cmp
jne
jb
xor
lcall
inc
fmul
rcrb
mov
push
std
inc
or
jl
push
sub
loop
cmpsb
push
pushf
mov
fstl
movsb
ret
push
mov
jne
dec
fiaddl
into
and
push
pop
cmp
xor
pop
pop
pop
or
or
adc
adc
fbstp
mov
repnz
fs
mov
cmp
and
clc
pop
ss
and
cs
out
or
add
xchg
pop
imulb
sbb
dec
imul
gs
cmp
stos
cmp
add
out
fimull
in
inc
pop
lahf
cmp
mov
add
orl
and
mov
out
dec
dec
popa
pop
add
adc
loope
and
daa
fldt
dec
pop
addr16
cwtl
inc
out
cmp
and
in
adc
jne
loope
cmovg
mov
into
idivb
xor
hlt
les
stos
mov
and
add
mov
ja
mov
xlat
js
dec
movsb
adc
xchg
enter
xor
and
mov
push
mov
cmp
push
pusha
imul
or
out
xor
cmc
mov
out
jle
gs
push
cmpsl
imul
mov
push
inc
mov
shlb
into
or
idiv
fldln2
push
notl
into
pop
add
insl
test
cmp
aaa
rcrb
and
inc
std
inc
repnz
rcl
xchg
mov
loope
push
sti
into
jecxz
cmpsl
xchg
cltd
mulb
xlat
aaa
xor
pop
movsb
mov
push
sub
sub
cmp
pop
sahf
jge
xchg
jae
out
cmp
adc
cli
sbb
pop
sub
les
ja
xchg
jg
in
lods
nop
adc
jge
push
ljmp
xchg
fs
ljmp
xlat
push
jbe
jmp
stc
mov
mov
mov
insl
mov
stos
sub
add
cmp
in
xchg
into
xlat
movsl
xchg
sub
push
mov
in
enter
fistpl
cmpsb
ja
fmull
sti
jge
inc
cmp
jecxz
xor
pop
out
cmp
push
adc
and
jge
and
call
sub
test
in
mov
push
push
rcl
adc
aad
xchg
jge
mov
fwait
movsl
push
lcall
and
add
adc
ja
cmp
fdivrl
push
adc
in
fadd
arpl
push
mov
outsb
jg
clc
inc
scas
cli
incl
sahf
outsb
data16
mov
and
push
arpl
pop
popfw
in
xchg
into
sarb
pop
cmpsb
inc
shll
sahf
idivl
or
mov
cltd
ret
cmp
or
adc
fisubl
xchg
stos
into
dec
cmp
push
sti
adc
ss
jg
out
xchg
in
jae
sbb
icebp
cmp
push
push
fidivs
push
cli
xlat
mov
dec
pop
pop
hlt
into
jp
inc
jb
bound
xor
stc
leave
out
dec
push
in
or
rclb
sti
xchg
lea
or
mov
cmpsl
arpl
shrb
push
adc
dec
sub
stc
dec
je
sti
sbbl
data16
out
insl
or
push
dec
lret
inc
push
adc
faddl
rorl
ljmp
mov
add
adc
adc
or
mov
pop
cmpsb
les
sub
dec
jmp
aam
jb,pt
mov
movsl
jl
lock
lock
push
adc
mov
shl
push
fdivl
inc
into
les
out
cmp
lret
jecxz
jp
jmp
jmp
jmp
add
mov
xor
adc
sub
imul
or
mov
ret
pop
test
adc
inc
sarb
cmpsl
shll
mov
mov
push
imul
push
jnp
out
ds
cs
dec
shrl
mov
test
frstor
xor
push
lea
mov
sub
repnz
mov
pop
pop
das
js
cmp
xorl
jo
repz
add
lds
mov
les
mov
bound
scas
sbb
in
aad
sub
add
into
rorl
je
xchg
add
mov
sub
popf
and
iret
out
jne
leave
ja
sub
and
scas
shll
push
ret
add
divb
mov
mov
mov
mov
popa
mov
pop
dec
out
xlat
ja
and
out
nop
icebp
cld
cmpl
mov
add
inc
add
jmp
mov
repz
popf
push
sbb
int
clc
sbb
sub
pop
mov
es
cmp
pop
inc
lods
pusha
int
inc
mov
out
dec
cmp
adc
push
gs
push
fwait
cmp
test
aaa
sahf
add
jbe
cmpb
repz
mov
cmpsl
add
bound
mov
nop
shrb
mov
pop
xor
cmp
mov
cld
xchg
outsl
shrb
dec
decb
dec
or
mov
sbb
pop
push
xor
les
adc
inc
je
test
cmp
xor
imul
cmp
fld
pop
push
stos
out
aaa
fbstp
push
data16
test
outsb
xchg
sub
and
pop
sahf
fisubl
hlt
inc
jg
add
xchg
inc
push
pop
lods
xor
pop
push
nop
aad
jmp
rolb
cmp
lea
inc
cmp
mov
jge
pop
xchg
aam
xchg
jo
push
xor
ljmp
inc
adc
outsl
pushf
mov
bound
enter
shrl
imul
bound
inc
mov
rorb
loope
ja
xlat
popa
ljmp
inc
jmp
jno
mov
sub
ljmp
in
daa
inc
lret
and
or
insb
fcomps
fsubs
cmpsb
push
sbb
orb
popf
push
enter
ds
sub
loope
js
aad
and
out
jmp
movsl
cmpsb
rolb
xor
pop
ja
jnp
add
incl
xchg
add
sbb
sbbb
sub
gs
push
or
leave
clc
xchg
sub
sarl
mov
dec
aad
fcomi
aaa
mov
adc
out
test
scas
popf
inc
imul
jno
popa
lret
xor
enter
xor
mov
fucomp
fmull
ret
pop
movsl
loopne
rdpmc
cmpsb
xchg
addr16
add
loope
lods
in
movd
in
sbb
out
fiaddl
repnz
xor
xchg
arpl
mov
clc
push
hlt
dec
sub
in
shlb
ljmp
add
outsb
jmp
call
jp
clc
inc
push
jns,pn
xchg
dec
sbb
jns
movswl
loopne
add
xchg
sbb
sbb
lret
jae
mov
js
in
dec
je
jl
cmpsb
scas
loopne
mov
lcall
or
dec
push
cmpsl
cli
loope
adcl
inc
jl
xor
fisubs
jp
je
stos
adc
int
popa
mov
roll
mov
mov
push
loope
and
xchg
ret
lods
pushf
sahf
adc
add
iret
xchg
sub
cmpsl
or
dec
test
repnz
int3
fstps
in
enter
ror
repnz
push
cmp
sbb
lcall
pop
movsl
and
test
test
cwtl
mov
xchg
sub
ret
add
loope,pn
mov
repnz
imul
or
mov
add
bound
mov
movsb
and
and
sub
adcl
pop
add
dec
mov
movsl
jle
es
add
jno
add
push
dec
dec
dec
dec
inc
push
jae
adc
cmp
test
nop
add
and
jge
jecxz
cmp
jo
outsl
jne
hlt
add
in
jecxz
fbstp
add
xor
out
pop
pop
movb
in
hlt
jle
inc
mov
push
cmp
cmp
sbb
cmpsl
sbbl
adc
jno
lds
mov
mov
mov
out
repnz
stos
in
fisttpll
sahf
or
test
adc
pop
inc
sub
mov
push
cmpsl
rclb
push
add
mov
out
mov
fistpl
cltd
add
xchg
fs
xor
bound
iret
push
push
or
mov
mov
sub
mov
xor
and
out
xchg
test
or
into
xchg
outsl
dec
test
vmread
adc
inc
sub
ret
ljmp
mov
fwait
lea
test
mov
jmp
xchg
int3
lods
jecxz
jle
mov
mov
lahf
jo
aas
inc
ja
fldt
loop
pop
shll
sbb
mov
sbb
imul
xchg
ret
daa
sbb
dec
movsl
xchg
mov
loop
sub
in
jmp
jno
mov
incb
ror
aam
mov
loop
sub
mov
lds
sti
mov
mov
xchg
rclb
push
add
pop
in
imul
xlat
adc
stc
mov
scas
scas
cmp
xorb
dec
lock
jbe
inc
mov
jl
mov
daa
out
adc
mov
jmp
or
mov
add
and
arpl
push
pop
jo
push
push
lea
jb
enter
adc
mov
xchg
jns
cwtl
pop
and
mov
mov
bound
xlat
lea
leave
push
lods
and
fcoms
addr16
adc
inc
xchg
mov
lods
cltd
cwtl
hlt
mov
sub
sub
xchg
add
pop
movsb
jo
and
push
dec
fs
movsl
pop
mov
shrl
xor
xchg
sub
add
jmp
adc
dec
ljmp
push
xchg
jmp
sub
dec
sbb
cwtl
mov
cmpsb
notl
cs
sbb
pop
imul
adc
stos
nop
xor
andl
pop
das
dec
and
mov
dec
jecxz
pop
insl
mov
jo
mov
add
sbb
add
push
into
gs
add
test
orl
mov
das
ljmp
jnp
sub
xchg
shl
movsb
loop
cmpsl
lds
movsl
pop
shl
sbb
pop
insb
decl
or
es
loope
add
roll
test
push
leave
rcll
xchg
inc
jmp
sbb
outsl
xchg
xlat
sbb
xor
xor
xor
mov
es
pop
fsubl
adc
add
out
mov
pop
add
icebp
jp
mov
fisttps
or
call
shlb
push
mov
daa
mov
pushf
add
das
fcoms
push
mov
mov
or
cmpsl
or
mov
or
mov
mov
pop
mov
outsl
pop
dec
rorb
or
lret
int3
icebp
jo
xchg
sbb
push
adc
and
pop
pop
ror
in
mov
dec
or
pop
cmpsb
pop
push
insb
sub
nop
inc
aaa
or
inc
xlat
jb
enter
repz
or
test
mov
cmp
dec
push
push
sbb
xor
jo
or
cli
out
xchg
mov
adc
cmp
stos
mov
or
inc
pop
jns
add
jp
and
lret
dec
insl
into
rolb
mov
lds
xchg
lcall
js
sub
xchg
and
and
pushf
pop
and
mov
xchg
dec
cmp
ja
nop
pop
pop
jae
sbb
hlt
xchg
cs
add
mov
popa
dec
or
stc
loope
mov
inc
loope
pop
mov
or
add
mov
mov
enter
cli
or
imul
fisttps
pop
mov
push
cmp
mov
mov
inc
clc
mov
xchg
aam
adc
ret
adc
ds
clc
rorb
ja
out
int
shlb
push
outsb
or
adc
psllq
mov
popa
popa
mov
add
jns
hlt
pushf
cmp
push
pop
jo
jge
idivb
insl
dec
or
mov
mov
mov
mov
fisttpl
cmp
mov
cmp
test
inc
nop
sahf
lods
xlat
stos
adc
sarl
jecxz
push
pop
sbb
mov
imul
cmc
ret
test
rcrl
je
aam
xchg
mov
dec
push
dec
aas
xor
decb
adc
fiaddl
add
leave
mov
cmp
or
into
jmp
inc
dec
jmp
push
stos
adc
repz
mov
cmpb
add
call
dec
cmpl
ret
ret
mov
adc
push
call
pop
dec
add
or
int
adc
outsl
stos
mov
into
pop
popa
pop
xchg
mov
roll
sbb
out
jno
cmp
scas
mov
mov
fdivrl
cmc
xorb
inc
sbb
mov
mov
fildl
mov
pop
ja
sbb
ret
add
pop
pop
stos
daa
mov
fsubs
aad
sub
dec
in
or
mov
mov
jecxz
pop
leave
dec
out
lcall
icebp
lret
scas
movsl
in
mov
aam
sahf
cmp
cltd
and
mov
adc
testb
in
mov
scas
lcall
fstpt
lret
cmpl
pop
push
cli
mov
cs
repz
test
pop
int
ret
lret
test
stos
sub
mov
or
xchg
cmp
xorb
shlb
mov
inc
push
sub
lret
xor
shll
lods
in
fnstcw
pusha
adc
add
sbb
dec
scas
std
ret
push
jmp
fsubp
inc
imul
stos
out
negl
jge
out
pusha
pop
cmp
xchg
push
out
lods
add
mov
imul
cmp
sub
fildll
pop
inc
inc
mov
fldcw
jnp
xchg
mov
aaa
sbbl
orb
and
popa
sti
fst
std
push
outsl
xor
mov
lds
sub
js
xor
lahf
pop
lahf
jge
fadd
xchg
fwait
movsl
xor
push
jb
xchg
push
sub
fldcw
mov
inc
cmp
pop
and
mov
insb
mov
dec
ficoml
popa
sub
fisttps
test
test
and
inc
scas
inc
or
loopne
popf
scas
xor
int3
push
cmp
sub
adc
xchg
and
scas
xchg
mov
sbb
or
lock
inc
xlat
inc
add
rcrl
stos
es
mov
cmpl
push
mov
adc
jo,pn
popa
mov
xchg
cmp
aaa
xorb
leave
outsl
sub
pop
andw
repnz
inc
sub
jae
aas
mov
imul
sub
aad
sbb
jecxz
adc
add
xor
inc
inc
jecxz
pusha
cltd
push
rcrl
loopne
out
mov
cs
mov
push
inc
dec
xor
pop
xchg
movsb
or
jp
cmp
adc
jno
push
cmpl
repz
push
int
mov
jo
int
lahf
adcl
push
cmp
lcall
cmp
jle
dec
jl
je
fdivrl
loope
xor
arpl
popa
popa
adcb
sbb
les
rcrl
pop
pop
mov
xchg
outsb
ja
cld
repz
mov
cld
shlb
aam
mov
mov
push
dec
outsl
movsl
loopw
or
jae
pop
cmp
ret
jle
xchg
pop
jno
xor
and
mov
and
mov
sbb
jp
jl
xchg
orl
mov
pop
jae
sub
ret
pop
gs
insb
cmpsl
fmuls
dec
adc
adc
pusha
jl
fsubs
cmp
mov
movb
sub
insl
jb
mov
aam
push
or
jnp
test
mov
pop
and
sarl
outsb
mov
or
aad
std
sbb
and
mov
push
push
xchg
mov
aaa
and
pop
or
push
out
pop
push
xchg
dec
sub
cltd
in
adc
fwait
nop
lea
mov
scas
mov
ret
push
dec
jge
test
adcb
cmp
stc
mov
inc
sarl
mov
enter
adc
out
out
mov
sub
sti
mull
ljmp
cmp
repz
pop
xor
adc
mov
jmp
xchg
lret
mov
jno
mov
xor
xchg
mov
rcrb
mov
push
std
xchg
fisubs
fadds
adc
xorl
stos
pop
jmp
push
les
pusha
push
in
inc
xchg
adc
mov
pop
sub
jl
pushf
in
clc
pusha
or
xor
xor
fst
jg
aad
and
pop
fidivl
jmp
push
cmp
sub
sub
aas
icebp
lods
hlt
popf
cmc
adc
xchg
and
rclb
test
pop
inc
add
mov
and
cltd
add
xchg
push
push
pop
adc
inc
scas
and
jmp
mov
jle
adc
test
adc
dec
movsb
jns
push
xor
movswl
push
les
or
filds
pop
inc
scas
ret
pop
dec
fstpl
push
mov
andb
outsb
xchg
pop
jmp
fmul
dec
push
neg
ds
idivb
mov
adc
aaa
std
imulb
sub
mov
or
hlt
std
cld
test
cwtl
int
lret
add
scas
pop
mov
pop
mov
popa
mov
xchg
xor
xlat
or
sbb
lret
adc
je
lret
inc
xor
sub
mov
testl
fs
addr16
jnp
pop
arpl
push
dec
in
aam
ficompl
mov
mov
mov
push
inc
adc
jne
das
xor
xchg
cli
popa
mov
imul
dec
adc
cmp
sub
dec
aas
mov
int
adc
inc
imul
and
stc
popa
cmp
lds
dec
popa
test
or
fdivrs
cltd
mov
dec
into
pop
or
cmc
jno
adc
adc
mov
mov
push
xchg
mov
push
add
sbb
jmp
dec
sub
insb
jb
idiv
into
sub
mov
xlat
push
push
lcall
arpl
xor
mov
rorl
xorl
adc
loope
int3
or
mov
int
mov
adc
jbe
jbe
pushf
insb
scas
xchg
push
push
mov
loopne
hlt
cmp
int3
jmp
xor
leave
mov
icebp
addr16
jecxz
movsl
and
lahf
pop
or
cmp
into
push
sbb
inc
out
xor
push
loopne
mov
js
adc
mov
sub
aad
sub
jmp
lcall
faddl
inc
xchg
repz
mov
jo
push
jbe
gs
ja
pop
loopne
lcall
repnz
roll
mov
and
sub
repz
push
push
fisttpll
inc
jg
xchg
xor
inc
push
divb
jb
push
aaa
stc
pusha
sub
dec
jp
pushl
or
popf
mov
dec
leave
sub
ret
scas
ret
mov
jns
dec
jecxz
movsb
pushf
cmp
push
adc
fisttpl
xchg
or
aam
jno
mov
stos
imul
xchg
es
lret
xchg
cmp
popf
adc
pushf
push
mov
sub
dec
add
fisttpl
adc
rorl
xchg
or
push
dec
jle
fsubp
inc
mov
int
adcb
into
add
out
inc
arpl
sbb
jecxz
sub
daa
xchg
cli
jg
andb
gs
or
int
dec
jae
icebp
jo
mov
ja
mov
ret
out
mov
jle
jmp
jno
fwait
out
lcall
lret
les
mov
daa
dec
pusha
out
adc
decl
sbb
sbb
sarb
mov
pop
push
jae
sub
repz
sub
mov
mov
dec
cmp
pop
fists
dec
scas
test
sbbl
adc
outsb
stos
roll
inc
movsb
inc
imul
sub
rorl
movsl
fldt
in
jb
adc
sarl
jp
loopne
xchg
in
ja
push
jp
xchg
stc
push
add
mov
mov
int
in
inc
mov
cmc
jno
xor
clc
sbb
xor
inc
fidivrl
push
sub
insb
sbb
sub
imul
js
mov
jg
jb
leave
jns
adc
rcrl
lock
pop
push
lret
push
fdivl
or
sbb
cmovp
adc
sbb
push
mov
fs
cmc
push
clc
mov
inc
fldenv
fidivrl
inc
xchg
in
xchg
dec
rorb
xchg
enter
adc
movsl
sbb
push
adcb
cltd
mov
addr16
repz
push
sbb
lods
cmp
repz
add
mov
jge
ret
lea
ja
sbb
mov
pushfw
and
das
and
inc
mov
test
push
out
and
loope
and
mov
cltd
or
daa
cmp
lock
bound
cmp
jae
sbbl
pavgw
cmp
hlt
push
popa
xor
shll
push
add
dec
adc
xchg
mov
sub
stos
pop
and
sbb
fidivrs
int
adc
sbb
mov
pop
cmp
xchg
mov
fwait
popf
fbld
sbb
cmp
lcall
mov
jge
mov
xor
push
ljmp
mov
out
pop
int3
outsb
aam
test
fisubs
xchg
fcoms
and
inc
and
sbb
mov
test
sub
mov
mov
xchg
sub
cmp
xchg
nop
dec
pmaxsw
cwtl
push
scas
add
mov
dec
das
lret
sbb
addr16
mov
addr16
xchg
in
push
imul
xchg
cmp
mov
sbb
stc
cmp
fsubp
scas
movntps
adcl
fstl
jns
pop
add
ffree
notb
mov
adc
sbb
stos
xor
pop
and
cmpsb
sti
inc
jg
das
incb
sbb
add
xor
lret
mov
lahf
cmovne
fs
jb
js
jmp
in
js
in
std
loop
dec
jmp
js
dec
dec
bound
xchg
jle
sub
enter
lret
dec
lcall
nop
mov
jbe
xor
lcall
arpl
ljmp
pop
push
outsb
mov
int3
mov
pop
fbstp
pop
setp
sbb
popf
pop
mov
scas
stos
and
jecxz
mov
lcall
enter
or
das
lret
in
jp
push
mov
addl
test
imul
outsb
add
or
stos
mov
addl
es
pushf
jnp
sub
out
adc
aam
and
adc
aaa
mov
lock
les
add
mov
ret
jecxz
aam
rcll
inc
xor
xchg
mov
test
incb
cmc
or
inc
mov
jne
imulb
mov
push
cmp
push
jns
je
fimull
sahf
adc
inc
aaa
push
sub
or
xchg
xchg
rolb
pop
mov
loop
dec
popa
pop
cltd
pushf
xchg
out
mov
inc
cwtl
push
cmpsl
push
loope
xor
push
jns
arpl
push
dec
jg
sub
fsubrs
add
xor
fwait
sti
mov
hlt
pop
dec
aam
add
data16
jle
repz
mov
into
xchg
cli
mov
sub
pop
bound
les
int3
out
pusha
orl
xor
or
push
loope
loope
gs
subb
mov
fs
xor
loopne
xor
inc
inc
xchg
xchg
xor
xchg
sbb
or
sbb
push
inc
lcall
jle
mov
push
push
fsubp
test
jns
pushl
pop
inc
xchg
jns
loopne
cmpb
mov
fmul
adc
xor
rorb
lret
mov
rorb
mov
add
adc
test
lcall
es
adc
fistps
or
mov
jp
xor
jbe
mov
and
iret
lret
enter
cmp
cmp
pusha
xor
add
rorl
inc
loope
adc
sub
hlt
jne
enter
jmp
mov
or
in
inc
cmc
les
negb
fcomp
cs
scas
adc
lret
cmpsb
xor
or
popf
pop
repz
push
repz
icebp
xchg
loop
dec
mov
stc
adc
ret
ds
sbb
outsb
mov
call
push
nop
mov
sahf
mov
in
movsb
sub
sub
cmp
movl
push
aaa
push
jne
fsubl
arpl
pop
cmp
mov
outsb
aad
push
mov
xchg
xor
add
inc
cmp
push
ja
inc
aaa
mov
add
push
jnp
add
sti
xchg
dec
in
sub
imull
ret
enter
and
mov
rcl
sub
adc
popf
js
sbb
cwtl
fsubrl
loop
pop
fistpl
mov
cmp
fs
jns
or
idiv
add
lock
push
cmc
popa
stos
sbb
cli
cmp
mov
or
sub
test
in
out
decl
mov
les
add
or
and
arpl
xchg
out
fdivl
arpl
rclb
dec
daa
sub
or
dec
mov
push
or
xor
push
outsl
test
aam
rcll
cmpb
cmp
clc
adc
aas
pop
std
cmp
push
cmp
fstps
repnz
aas
fdivrp
test
mov
inc
jecxz
outsb
cmp
pop
or
popf
pop
lahf
push
sbb
loop
sbb
setae
adc
cmpsb
push
and
or
cmc
stc
movsl
adc
jne
dec
fidivrl
fstps
movsb
daa
sahf
xchg
lea
xlat
sti
inc
cmpsb
rolb
ds
aad
inc
ljmp
push
inc
stc
push
adc
gs
scas
in
jp
loope
popf
call
mov
aaa
dec
push
std
enter
in
sub
sub
int3
push
mov
cmpsb
push
inc
aad
dec
cmc
mov
pushf
dec
test
leave
jl
sbb
clc
mov
rcrb
sbb
cmpsl
and
mov
cmp
cmp
cmc
push
sbb
mov
ja
rcll
inc
cld
dec
push
add
pop
mov
sahf
jmp
add
negl
insl
xchg
je
mov
pusha
jae
sbb
arpl
pop
daa
dec
lahf
jp
mov
mov
pop
insl
xor
mov
xchg
lahf
and
jl
shl
pmaddwd
lods
shrl
mov
jb
mov
sti
xchg
cmp
dec
mov
mov
jmp
cmp
dec
mov
mov
lret
lret
aad
fdivp
xlat
push
jg
jl
rorb
mov
mov
sub
popf
sbb
orl
xchg
and
fwait
in
inc
jo
xchg
test
lock
push
cltd
sub
sarb
pop
movsl
clc
cmp
dec
jmp
scas
mov
add
push
aad
negl
and
fnsave
xchg
ds
sti
sahf
dec
or
and
loopne
mov
cmp
bound
int
je
xor
mov
xorl
and
leave
cs
shl
xor
frstor
ficoms
lcall
test
jp
push
daa
rorl
cli
sbb
rclb
lahf
fistl
or
jbe
mov
jne
xor
push
jne
cmp
inc
mov
push
in
das
jp
lods
mov
pop
ret
jecxz
pushf
cmp
jle
inc
push
lea
aas
adc
repnz
fs
jbe
std
scas
repz
das
cmc
movsl
fisttpll
mov
test
jae
popf
aaa
into
sarb
or
jge
push
jle
or
js
fwait
pop
or
pushf
in
hlt
xor
adc
push
mov
and
and
jo
test
gs
orl
pop
mov
lret
push
clc
sub
mov
mov
pop
int
inc
and
jns
lds
cmc
mov
pop
cmp
or
mov
pusha
cmp
mov
aam
cmp
mov
ret
es
xchg
fs
dec
cmp
adc
jmp
fdiv
lock
mov
pop
jge
lock
mov
hlt
loop
sub
into
loop
aas
mov
dec
and
shll
fmuls
push
push
rcrb
xlat
xor
mov
jge
sarb
fs
js
repz
addr16
push
push
sub
outsb
sarb
pop
aas
inc
pop
pop
jecxz
in
and
lcall
mov
shll
and
cmc
rorb
mov
mov
inc
repz
or
cli
popf
scas
into
fcomi
out
leave
jle
in
lock
xor
iret
sarl
push
jbe
fisubl
in
xor
hlt
xor
and
push
nop
in
mov
pusha
adc
jne
mov
pop
mov
mov
mov
outsb
lcall
mov
dec
xor
cwtl
cs
or
icebp
xor
mov
test
leave
ret
pop
sbb
inc
les
loope
inc
mov
cwtl
mov
mov
xor
mov
in
popf
xor
mov
xor
int
mov
outsl
jl
push
mov
subb
fwait
dec
testl
jp
jb
cwtl
or
or
mov
pop
jg
in
fistps
fs
fildl
mov
sti
cmp
or
cmpsb
test
aad
sub
mov
loop
adc
fisttpl
lahf
js
mov
inc
sti
lahf
jns
shrl
pop
leave
das
stc
jno
leave
ret
xor
xor
mov
inc
inc
add
decl
in
adc
xlat
sbb
test
sub
xor
pushf
pushf
lock
insl
mov
jnp
jno
xchg
pop
mov
sbb
sub
adc
push
xchg
inc
test
jb
sub
mov
jle
scas
cli
popa
fs
nop
jne
test
mov
push
jne
mov
mov
scas
or
imul
cltd
out
xchg
mov
xchg
mov
dec
or
jecxz
sbb
or
or
jnp
hlt
inc
push
arpl
stos
pop
mov
sbb
inc
pop
jl
dec
aam
stos
out
lods
mov
xor
vandps
loop
add
fldenv
mov
pop
mov
xchg
cld
aas
in
mov
inc
sarb
lahf
xchg
pop
fildll
or
bound
push
mov
add
arpl
cmp
pop
push
jnp
xor
sarb
cmpsb
imul
cmp
aaa
mov
sbb
pusha
dec
popf
outsl
jne
call
fists
inc
push
add
xchg
fcoml
lcall
icebp
jg
stc
test
and
or
mov
xchg
push
mov
push
add
xchg
not
addr16
mov
or
xchg
shlb
addr16
daa
push
icebp
mov
mov
roll
ss
mov
inc
lods
lods
xor
dec
dec
dec
add
adcl
sbb
mov
popf
sbb
test
aam
mov
fwait
repz
sub
fisttpl
sahf
stos
and
dec
sub
cmc
gs
std
fwait
mov
cwtl
sub
ds
call
and
insb
add
mov
jb
loopne
cmc
js
loopne
das
mov
xchg
xor
xlat
adc
mov
jnp
cmp
lods
sbb
pop
push
jmp
test
push
mov
xor
push
stos
jb
adc
insl
cld
jmp
and
cmp
xor
add
pushf
jbe
inc
and
xor
arpl
sub
stos
sub
push
dec
sub
pop
lods
mov
dec
push
push
iret
fstpl
cmpb
fbld
push
xchg
add
jge
movsl
cmp
pop
xor
adc
aad
or
sub
or
pusha
sub
xor
cmp
inc
jns
inc
fmuls
daa
sub
adc
sbb
ljmp
add
cli
xchg
sbb
xchg
cmp
cmpsl
lret
mov
das
fistps
xlat
dec
outsb
mov
dec
iret
mov
mov
vshufps
aas
mov
mov
pop
jne
out
sub
mov
aam
rcrl
mov
jb
in
pop
mov
insl
jns
jle
sbb
das
das
cmpsb
push
insb
negb
ljmp
and
fistpl
sub
and
jne
leave
es
mov
repz
sub
adc
les
xor
cmp
xchg
sub
push
xorl
subb
dec
daa
push
pop
sbb
push
cmp
pushf
adc
sbb
jne
xor
xchg
and
inc
jnp
inc
aam
xor
mov
mov
add
mov
push
dec
loope
dec
fwait
out
enter
push
inc
push
scas
test
push
stc
out
jl
sub
roll
pop
jnp
icebp
lcall
orb
cli
scas
leave
jns
or
and
pop
xor
add
pop
push
mov
ss
and
sub
jbe
xchg
inc
add
pop
test
addr16
xor
inc
outsl
rcrl
std
inc
cmp
inc
je
and
in
inc
mov
jecxz
movsb
mov
gs
dec
fmuls
xorb
jp
push
jmp
add
je
pop
sbbl
loop
or
shll
jmp
call
std
mov
xor
popl
cwtl
lods
lock
lods
mov
sahf
mov
xchg
bound
mov
insb
inc
push
cld
mov
mov
inc
jle
pop
mov
mov
out
jmp
mov
push
js
nop
xor
mov
rclb
inc
movsb
loopne
cmpsb
out
call
xlat
jg
enter
aad
push
leave
mov
test
jno
ret
mov
shlb
sub
fmul
outsl
ret
push
and
nop
imul
pusha
mov
aas
cmp
into
add
mov
inc
xchg
shl
push
dec
inc
fiadds
loope
fnstsw
daa
mov
rorb
pop
push
xchg
lds
pop
sar
fisubrl
add
cmp
inc
adc
lods
lcall
pop
cs
add
clc
mov
dec
cmp
xor
arpl
int3
aad
fildll
dec
aad
jl
jl
push
lods
fidivrl
xor
jmp
loopne
shl
mov
in
sbb
dec
aam
jns
jl
fcom
loop
stos
int3
push
pop
xchg
or
orb
test
pop
push
push
nop
cmp
sbb
sub
push
aad
sub
nop
xchg
xor
mov
or
mov
cmp
jo
int
aas
lret
adc
cmp
xchg
nop
lret
and
fucomi
xor
mul
mov
ud1
std
mov
mov
mov
push
or
sub
mov
ret
mov
adc
ret
fstps
dec
mov
pop
pop
cmc
pushf
pop
or
jnp
or
test
lret
inc
cli
add
nop
inc
test
mov
ret
sub
and
xchg
leavew
std
mov
xorb
push
jnp
cmp
mov
leave
push
sub
aas
repnz
hlt
out
les
mov
lods
fidivrl
mov
mov
push
sbb
inc
jb
add
push
insl
lret
mov
xchg
push
out
stc
add
push
push
push
dec
sub
cmp
dec
fsub
lret
andl
lods
adc
in
inc
fwait
divb
mov
mov
aad
js
lret
add
cmc
push
inc
shld
aaa
imul
gs
push
or
dec
int
push
sbb
mov
or
movsb
dec
je
sahf
cld
sub
inc
sub
mov
lea
outsb
or
mov
mov
aam
push
sub
call
xor
insb
pop
cmp
pop
outsb
pop
fimuls
pop
or
inc
popf
adc
and
lea
stos
in
icebp
in
push
push
mov
daa
jnp
inc
push
jb
lret
jns
push
xchg
cli
outsb
fldt
inc
mov
lods
inc
mov
fwait
out
mov
inc
and
punpcklbw
movsl
adc
pop
jge
pop
xor
cmp
lock
out
mov
mov
and
and
lods
add
subb
adc
loope
sti
lcall
mov
rcll
into
lcall
push
rorl
add
in
push
xor
or
inc
mov
xchg
stc
pushf
int
lcall
sbb
sub
jmp
insb
daa
mov
sti
imul
and
sti
sahf
dec
fdivl
sbb
sub
sub
roll
lcall
xchg
outsl
push
daa
mov
in
ret
sbb
stc
out
insb
mov
xchg
jno
mov
movsl
in
jmpw
cmp
and
cmpsb
sbb
push
stos
xchg
adc
add
repz
hlt
mov
jae
or
negl
inc
rcr
xor
shl
and
addps
adc
mov
adc
mov
icebp
xchg
push
rcr
lods
push
lret
or
sub
inc
or
push
add
ds
xor
pop
fs
call
xor
and
jl
cwtl
mov
psubd
ja
mov
pop
xor
call
outsb
adc
imul
inc
les
stc
imul
ljmp
cmpsl
and
push
mov
mov
or
inc
adc
jp
mov
pop
xor
fmul
std
outsl
testl
or
mov
enter
sti
aas
jo
jnp
aam
pushf
or
sub
out
sub
unpckhps
fistps
cld
arpl
mov
ss
lahf
sbb
inc
orl
pop
pop
dec
test
repz
push
jmp
js
pop
sti
cmp
aas
sbb
outsb
mov
push
push
jae
mov
inc
sub
cmp
lock
les
sub
ret
inc
pop
xor
sarl
xor
in
je
ljmp
in
icebp
nop
jae
shll
add
mov
test
add
lods
sub
pop
add
fwait
decb
dec
aaa
imul
inc
sub
in
cmpsb
mov
dec
or
and
dec
movsl
imulb
stos
mov
sbb
or
xchg
add
pusha
jb
orb
repz
adc
insl
fldenv
leave
testl
call
lds
mov
and
pop
jmp
mov
rcrl
fsub
push
jae
popf
xor
mov
divb
cwtl
sahf
in
inc
fs
mov
out
dec
cld
inc
es
pop
std
and
stc
out
jl
arpl
popf
in
push
inc
fnsave
fmuls
and
out
outsl
inc
add
xor
pop
pop
push
ds
lcall
or
sub
sahf
into
dec
jne
mov
int3
sti
xchg
fnstcw
jge
out
int3
stos
jne
ljmp
loopne
jg
cmc
mov
arpl
xchg
imul
cmp
inc
or
or
gs
xor
xchg
lea
add
ror
inc
movsl
cmp
inc
jne
xchg
sbb
and
ss
lock
lods
xor
cmpb
fmulp
xchg
inc
jmp
mov
cmc
scas
cmp
cmc
cmp
mov
dec
xchg
out
sbb
mov
sahf
iret
add
and
cmpsl
xor
mov
test
push
je
fisubl
mov
lock
sysenter
mov
fwait
lcall
mov
cmc
xorl
cltd
in
imul
xor
push
cmp
cld
mov
inc
imul
popf
fdivl
xchg
inc
sbb
test
inc
cmpsl
add
cld
mov
and
imul
mov
dec
pop
sbb
cld
mov
jae
call
jb
xchg
shlb
push
cli
jne
in
add
xchg
mov
lods
mov
push
push
cli
push
xchg
inc
mov
dec
data16
test
lcall
dec
int
or
mov
roll
add
xchg
cmp
iret
jl
and
lock
out
jge
repnz
fwait
rolb
xchg
xor
cltd
or
fstl
ds
pusha
in
fbstp
arpl
scas
pop
hlt
movsb
cmc
fldcw
dec
sub
js
mov
pushf
scas
push
lods
sub
dec
shll
cmp
out
insb
ss
xor
repz
in
mov
jg
or
cmp
pop
andb
mov
mov
in
out
pop
xor
lods
and
and
lea
outsl
mov
sahf
popa
add
jg
sub
and
pop
aas
mov
add
inc
pop
add
movsb
dec
adc
pop
sub
push
lock
mov
cld
dec
cmp
outsl
jle
mov
and
lds
and
inc
jo
and
inc
mov
mov
mov
movsl
add
in
pop
outsl
mov
into
sahf
cmp
mov
dec
nop
add
imul
out
jmp
cmc
loop
and
push
jno
push
inc
pop
lahf
lcall
xchg
push
cli
push
fiadds
mov
roll
mov
mov
pop
in
push
leave
xchg
jo
add
pusha
pop
ljmp
dec
ja
shl
fcoml
insl
nop
loope
test
inc
psubsb
mov
sahf
mov
mov
xor
lahf
xchg
jb
mov
aaa
lea
sahf
and
ss
aam
lds
mov
mov
add
int
or
adc
mov
popa
pop
add
insb
sbb
add
jne
sbb
sub
movsl
mov
or
fwait
fwait
clc
in
sub
mov
push
jle
push
add
mov
push
punpcklwd
pop
mov
xchg
sbbl
inc
rclw
mov
ret
pop
sbb
inc
mov
cmc
testb
flds
mov
jle
sbb
dec
aad
mov
pop
push
jl
push
sbb
dec
cmp
or
pop
rcrl
fwait
int
mov
mov
mov
jo
fidivs
jp
scas
xor
pusha
mov
ret
arpl
jno
in
add
das
nop
lods
popf
int3
mov
lret
adc
mov
ret
daa
pop
das
out
rcrl
adc
xchg
insb
ljmp
inc
push
aam
lods
cli
and
pop
negb
dec
pop
idiv
call
pushf
pop
add
and
push
int
mov
cmp
arpl
sub
cmp
mov
cmc
lds
push
push
arpl
outsl
les
mov
pop
xor
dec
jmp
outsl
es
std
mov
mov
mov
gs
test
mov
pop
repnz
mov
inc
sub
loope
in
lret
inc
lahf
push
sbb
mov
insb
or
and
xchg
xchg
cmpsl
pushf
es
jecxz
or
mov
idiv
xor
or
rorl
dec
mov
mov
daa
xchg
push
lret
push
push
sbb
mov
ljmp
pop
cmp
cs
pop
repnz
lea
outsl
pop
jb
je
fcmovnb
push
xlat
int3
lcall
xor
aam
fimuls
or
call
in
jmp
cmc
rorb
in
clc
cmp
fdivrl
or
data16
push
and
cmp
jbe
and
push
sub
inc
inc
in
movsl
xchg
dec
xlat
cmp
and
jb
cmp
imul
push
cwtl
pop
inc
ja
inc
inc
inc
mov
mov
sti
cs
jmp
mov
movsb
fs
or
pop
jae
movd
cli
xor
push
sahf
repnz
sti
std
insb
rcrl
jl
adc
push
pop
jmp
inc
jl
andl
out
stos
packssdw
sub
jnp
xor
sub
stc
and
push
push
cmp
je
add
add
outsb
sub
orl
gs
aas
fldenv
push
lret
stc
dec
ret
cli
jne
dec
jb
andl
push
cltd
enter
orb
jnp
mov
push
jns
dec
and
in
jno
aaa
xchg
cld
pop
sbb
mov
pop
inc
ja
pop
cmp
fmul
nop
jns
xchg
hlt
sub
dec
sub
cltd
jnp
mov
insl
sub
adc
dec
lods
mov
xchg
or
jne
repz
mov
mov
in
or
xor
out
push
fcos
xchg
mull
push
sti
fbstp
mov
mov
cli
lods
pushf
js
fisubl
xor
jmp
mov
dec
mov
xlat
lret
enter
mov
xchg
push
pop
fildll
and
and
xchg
inc
or
dec
mov
movsl
sub
jo
jl
jno
leave
mov
push
cmpsb
movq
adc
dec
push
mov
pop
out
jo
repz
lahf
add
mov
adc
loope
pop
aad
sub
cmp
xor
and
sbb
dec
mov
inc
fwait
sub
arpl
cmp
pop
mov
pushf
sarb
mov
mov
js
adc
int3
std
js
clc
mov
add
xor
xor
scas
pop
mov
shrb
push
pop
sbb
adc
sub
mov
shll
sub
mov
paddd
vfnmadd132ss
int
fdiv
je
sarb
out
and
add
cwtl
lods
lret
es
sbb
rorb
pushf
out
lret
fnsave
das
xchg
jp
push
jb
outsl
jb
add
dec
adc
mov
or
mov
pop
mov
repz
xchg
std
in
and
andb
subb
test
in
jae
mov
fdivs
ret
mov
movsl
cmp
or
mov
adc
push
ljmp
je
cmp
cmp
mov
xchg
or
push
push
mov
sub
clc
hlt
pop
fcoms
xor
mov
add
out
out
adc
inc
mov
sbb
sbb
scas
jecxz
xchg
adc
jmp
jbe
into
push
lahf
mov
repnz
jmp
fsts
imul
bound
sbb
andl
jge
orl
and
jg,pn
xchg
sbb
xor
mov
in
cmp
adc
xor
mov
sub
sbb
xor
loope
lods
lret
sbb
cmp
ds
ds
cmp
cld
js
jo
mov
pop
pusha
stos
mov
and
adc
in
test
and
cli
pusha
sti
nop
mov
fs
dec
int3
or
push
sub
repz
xchg
mov
push
pop
shlb
shll
pusha
add
movsl
cmpsl
push
pop
cmc
out
loope
lods
aam
push
or
movsl
push
add
ret
xlat
and
sub
mov
and
aad
xchg
insb
hlt
cs
inc
mov
push
loope
push
push
and
xchg
push
repnz
out
jg
int
push
mov
cli
std
ljmp
push
stos
mov
jg
jb
cmpsb
sub
outsb
rcrb
fcmovbe
lock
mov
mov
mov
and
mov
fstpl
data16
inc
shlb
sub
shlb
adc
lock
jmp
xlat
inc
adc
jg
test
sahf
push
fists
ljmp
fistpl
idivl
orl
pop
mov
push
cmp
fucomi
mov
mov
rorl
and
jae
ret
andl
or
addr16
cmc
adc
xchg
stos
pop
loopne
stc
mov
inc
mov
adc
fnstenv
and
sahf
lcall
stos
cmp
or
adc
test
shll
pop
inc
adc
test
fwait
cltd
movsl
mov
aad
das
mov
loope
and
stc
mov
movmskps
lock
mov
aad
lret
test
add
nop
mov
mov
rorl
hlt
and
push
cmp
xor
inc
sbb
jnp
xchg
cmp
mov
loopne
lret
ret
xchg
arpl
aaa
scas
fsts
adc
sub
sbb
jmp
clc
pop
lret
sbb
cmp
loope
ret
jnp
sbb
leave
insl
mov
xchg
mov
popa
pop
sub
cmpsl
ss
dec
push
clc
pop
push
fcmovu
mov
adc
ds
push
aaa
and
xchg
mov
fwait
and
repz
xchg
wbinvd
js
ds
add
rcll
icebp
sbb
cmp
sub
ds
and
and
push
adcl
movsl
pusha
mov
sbb
adc
insb
sbb
mov
loop
pop
int
outsl
or
jg
xor
jge
inc
divl
lret
pop
fcompl
test
push
cmovno
push
or
ret
xor
cmpsb
out
call
test
fidivs
ljmp
cmp
out
xchg
mov
dec
ss
scas
inc
jno
pop
push
or
out
popl
ret
xlat
shlb
pop
mov
mov
xor
dec
push
lcall
sub
sbb
lret
jge
or
aas
jbe
dec
add
jo
xor
cmpl
jno
mov
popa
mov
mov
test
mov
subl
call
movsb
mov
sbb
ficompl
pop
inc
add
jle
mov
shrb
dec
call
ret
jle
arpl
mov
push
jmp
loopne
push
testb
cmp
cmc
out
mov
lret
jnp
xchg
add
jne
lcall
lods
xor
push
hlt
sub
cmp
sbb
cmp
in
inc
pop
pop
adc
cwtl
jns
add
out
stos
mov
test
clc
ja
jmp
pop
or
xor
fs
jbe
jno
icebp
les
movsl
xor
orl
inc
jmp
sbb
fsubrl
arpl
ret
xor
btcl
inc
aas
data16
mov
xor
add
inc
std
adc
scas
adc
inc
mov
jp
push
jmp
shl
repz
lods
sub
in
push
mov
xchg
fnstenv
jmp
outsl
pop
sbb
sub
mov
jae
push
clc
add
sub
pop
in
inc
jp
sbb
mov
pop
mov
aaa
xorl
das
or
out
ret
adc
mov
fisubrs
xchg
fs
popa
xchg
push
testl
lds
sbb
adc
fmull
frstor
mov
dec
mov
inc
push
divb
sbb
push
in
push
push
lahf
adc
jbe
jae
mov
std
cld
in
cmp
imul
gs
xor
mov
cmp
cmp
jno
mov
ljmp
dec
pop
mov
jns
das
flds
jno
dec
jbe
je
in
es
cmpb
roll
push
inc
lret
dec
in
cs
outsl
xchg
push
testl
pop
loopne
rolb
pusha
sbb
or
adc
sarb
aas
mov
cli
sbb
hlt
jmp
xor
out
mov
pop
inc
jb
imul
push
sar
push
jecxz
mov
xor
push
out
xor
outsb
jmp
cmp
in
mov
lret
popf
daa
cld
je
pop
out
inc
jbe
cmp
cwtl
inc
xlat
pop
dec
pop
daa
mov
insl
adc
bound
push
lods
ljmp
pop
mov
xchg
repnz
std
sub
rep
and
pushf
add
mov
and
hlt
aam
and
lock
dec
cmp
push
or
and
mov
jle
adc
xchg
and
out
push
sub
into
sub
mov
add
or
and
outsb
or
cli
je
hlt
xchg
mov
pop
and
lahf
adc
sub
xor
lods
mov
ret
cmp
das
sbb
xchg
insb
jmp
xchg
or
mov
push
mov
sbb
fcompl
aad
mov
push
xor
pop
xor
cmpsl
popf
ficomps
add
mov
iret
and
in
sub
rolb
sub
jne
int3
frstor
addr16
push
dec
jns
std
repnz
jge
mov
add
cmpsb
push
inc
inc
cmp
popf
test
mov
stos
adc
mov
cwtl
rolb
jns
in
xor
push
aas
in
sub
jg
and
popl
adc
mov
jp
sahf
lds
add
fcmovb
cwtl
not
mov
xor
mov
add
sahf
das
lea
push
mov
push
es
ds
arpl
or
push
les
pop
test
lea
ljmp
scas
in
sub
loop
fwait
pusha
decb
outsb
inc
scas
mov
mov
ret
push
push
and
cmp
fidivrl
mov
js
loopne
pushf
sarl
push
push
fwait
jecxz
adc
ret
imul
fldt
fwait
stos
cmp
mov
mov
dec
popf
adc
ja
or
jnp
jnp
popa
sub
push
lods
and
mov
leave
jbe
cmp
and
sbb
add
dec
rol
mov
inc
mov
mov
sub
xor
mov
adc
or
out
out
sub
and
add
ss
les
lcall
dec
daa
dec
call
pop
lds
mov
cli
clc
dec
fwait
shl
push
sbbl
adc
pop
adc
pop
fistl
insb
xchg
sarl
xchg
xchg
add
jmp
mov
mov
rcll
ja,pn
sub
ss
into
test
add
add
cwtl
xchg
in
push
les
dec
inc
imul
xor
stc
inc
ja
pop
dec
cwtl
push
mov
dec
jne
jmp
mov
sbb
sbb
and
enter
imul
lahf
sbb
push
push
cmp
add
xor
add
pushf
mov
mov
loop
and
xchg
popf
xchg
jmp
inc
xor
mov
out
das
addr16
push
sub
frstor
pop
leave
fs
adc
mov
ljmp
inc
or
jl
jg
lock
clc
dec
jbe
repz
pop
je
adc
push
pop
jno
jmp
scas
xchg
repz
iret
mov
jp
fnsave
test
rorb
mov
fistl
pop
cmc
fs
imul
pop
push
mulb
arpl
pushl
sbb
xor
push
out
dec
into
xor
jg
inc
push
mov
bound
adc
dec
jbe
xorb
imul
jae
aam
iret
xchg
std
int
test
mov
sbb
inc
test
push
or
mov
enter
sbb
push
aas
add
jl
pop
std
in
push
push
or
push
mov
orl
xchg
lret
inc
mov
addr16
adc
push
dec
and
pop
subb
jno
std
inc
stc
xor
lock
mov
lods
pop
cmp
test
cmpb
xchg
xchg
popa
ror
sahf
fdiv
aas
mov
aam
test
xchg
fistpll
dec
push
fidivs
std
mov
cmp
mov
cmp
jo
and
popf
test
cmc
mov
sbb
ja
add
aam
insb
and
adc
jne
adc
mov
insl
sub
xlat
mov
jl
fcoms
xchg
mov
mov
popf
mov
or
add
and
xchg
jg
xchg
jno
sub
cmpsb
inc
mov
mov
test
and
pop
sarl
sahf
fldt
sti
mov
loopne
add
into
or
fisttpl
xorb
add
jg
and
gs
jmp
leave
jmp
sti
ljmp
andl
push
hlt
lret
sub
insl
sub
adc
cld
out
arpl
popa
pop
inc
test
fmull
xor
loop
sbb
dec
out
cmp
xor
adc
inc
inc
sahf
fdivrl
loope
jp
mov
out
or
mov
bound
das
mov
add
mov
sbb
xor
sub
and
mov
aam
rcrl
call
pop
popa
fcompl
push
int3
sbb
scas
dec
xlat
ja
pop
cmp
jg
in
ja
shll
in
dec
shlb
insl
dec
sub
mov
and
adc
stc
repz
mov
jecxz
xor
or
mov
test
mov
enter
inc
adc
mov
test
xchg
jbe
movl
popf
jno
cs
cmpb
bound
stc
ret
popa
cmp
pop
imul
dec
pushf
dec
mov
inc
jno
in
mov
sub
xchg
jbe
jo
aam
xchg
imul
sub
xor
jbe
mov
sub
ljmp
jmp
push
xor
out
mov
jnp
push
sar
aaa
sbb
mov
cmp
addr16
out
das
cmpsl
and
jb
jbe
xor
mov
or
adc
jae
push
stos
xchg
jns
pop
jno
jp
inc
push
pminub
cmp
xchg
lock
test
jne
xchg
pop
jb
mov
mov
lcall
jp
lock
aam
push
cmpsb
jns
in
ja
jbe
scas
ret
adc
aad
push
mov
xchg
aam
pop
outsb
cmp
mov
loopne
sbb
dec
jae
pushf
mov
jmp
aas
sub
pop
sarb
pop
xchg
and
aaa
lods
or
jecxz
arpl
jo
jle
sbb
insl
lea
outsb
sahf
sbb
imul
mull
add
ret
sub
div
xor
xchg
cmc
arpl
xchg
in
push
add
xor
cmpsb
xchg
push
sub
jmp
dec
std
lock
and
stc
dec
fstpt
push
test
hlt
rcrl
gs
dec
jl
push
dec
es
out
push
ret
pop
push
sbb
jbe
and
loopne
inc
dec
or
out
cltd
test
daa
pop
pusha
cwtl
out
outsl
xchg
ljmp
scas
out
dec
testl
mov
aaa
inc
pusha
out
mov
inc
cmp
mov
lret
imul
mov
or
incb
imul
jmp
cmp
pop
pop
aad
jno
jns
mov
xchg
inc
adc
cmp
scas
fwait
sbb
push
and
mov
pop
sub
dec
sub
jge
arpl
xor
inc
mov
xor
mov
lret
out
popf
pop
jg
roll
push
stos
push
daa
adc
ret
daa
roll
inc
jo
outsl
add
sub
push
and
push
jg,pt
out
popa
jl
out
pop
xorb
insl
sub
jae
scas
loopne
int
fsubrs
scas
inc
mov
add
mov
cmp
out
pop
jge
xchg
xchg
xchg
popf
mov
lret
mov
adc
fstpl
stc
ja
and
cmp
mov
out
roll
and
fwait
or
rcrb
push
int3
mov
repnz
cmc
inc
call
aam
xchg
adc
jo
and
mov
jmp
mov
sbb
and
or
mov
dec
loopne
imul
and
gs
popf
ljmp
cmpsb
jp
scas
fldl
adc
cmp
adc
mov
pop
stos
jb
jb
ljmp
jns
jg
orl
xchg
or
lock
or
and
xchg
jg,pt
addr16
or
daa
pop
pusha
push
divl
mov
push
sti
or
clc
imul
mov
in
adc
pop
cld
jns
dec
cmc
push
pop
cmpsb
mov
push
jbe
lods
filds
nop
jmp
daa
push
cmp
xchg
cmc
or
insb
out
lret
jno
repz
xchg
std
shrb
call
test
push
cmp
test
cmpsb
inc
ss
dec
or
dec
rolb
cs
or
sbb
test
sbb
jbe
data16
inc
xor
inc
dec
push
scas
or
inc
incb
int
mov
clc
mov
and
or
push
fdivrp
sub
sbb
sub
xchg
mov
insl
inc
rorl
cmp
mov
xor
xchg
fisttps
cld
imul
int
dec
hlt
mov
scas
xor
data16
pop
sbb
in
dec
repnz
out
jb
xor
mov
inc
ficompl
push
inc
sub
sub
pop
or
add
insl
cmp
call
je
jge
loope
add
push
inc
jne
std
mov
rcl
xchg
xchg
jns
adc
pop
xor
pop
addr16
mov
jmp
or
mov
std
and
and
pop
inc
cmp
mov
std
test
ret
inc
mov
or
dec
es
mov
cld
shrl
lods
orb
je
mov
lods
hlt
pop
loop
cld
lds
sub
enter
std
pop
jnp
les
sbb
push
les
cmp
shlb
mov
mov
out
xor
pop
outsl
and
inc
inc
outsb
adc
xchg
jo
mov
fnstenv
xor
jge
gs
or
iret
mov
imul
pop
xchg
sbb
std
sbb
scas
mov
jo
js
in
mov
mov
test
mov
pushf
jle
push
and
lahf
pop
sarl
cwtl
xchg
pop
out
sub
addr16
mov
dec
add
mov
xor
push
add
mov
int3
xor
arpl
iret
imul
adc
mov
aad
and
xchg
xor
jle
or
sti
faddl
jecxz
fldcw
outsl
push
inc
or
imul
shll
sub
mov
dec
xchg
addr16
in
add
int3
mov
mov
push
scas
jns
mov
mov
dec
jmp
adc
sbb
add
mov
pop
lret
bound
xor
jns
mov
jb
popf
push
dec
je
imul
sub
push
adc
sahf
fildll
pop
jecxz
scas
int3
jp
lret
data16
push
xor
xchg
ja
or
fs
cmpsl
int
in
pop
rorl
stc
jmp
sbb
cmpb
jno
cmpsl
dec
mov
jmp
dec
or
ds
pop
cmpb
add
add
inc
stos
sti
jp
jns
and
fxch
and
add
std
inc
or
mov
stos
imulb
dec
xchg
popl
mov
bound
lods
divl
ja
popf
ja
pop
mov
mov
adc
cmc
or
sbb
pop
and
push
pop
pop
or
std
push
jmp
inc
pop
bound
adc
mov
inc
jmp
test
enter
out
ret
or
xchg
iret
mov
lahf
cmp
pop
shrb
cwtl
inc
in
mov
pop
in
sbb
push
sub
jecxz
inc
inc
xchg
hlt
mov
rclb
sub
test
mov
push
mov
daa
cwtl
ljmp
das
aam
add
add
les
xchg
pop
dec
das
xchg
or
inc
shlb
mov
mov
xchg
dec
mov
pop
push
push
nop
add
iret
pop
aad
std
lcall
scas
xor
inc
aam
xchg
sbb
xor
js
or
mov
or
mov
pushf
clc
xchg
cmp
jb
jns
cwtl
push
mov
adc
dec
testl
mov
jg
push
or
lret
ljmp
cld
js
inc
sub
mov
xchg
xchg
adc
push
hlt
ds
xor
outsl
mov
mov
scas
lahf
jmp
pop
leave
or
je
mov
scas
or
push
jnp
jae
inc
xchg
addr16
aaa
ja
add
imul
cmp
pop
add
add
push
sub
cwtl
out
mov
push
dec
call
xchg
imul
js
ja
sub
sahf
fldcw
add
adc
pop
fcmovu
repz
icebp
rolb
cli
pop
jnp
jbe
push
in
mov
lret
movsb
bound
daa
mov
cmp
dec
mov
sbb
or
and
push
insl
jg
xor
ljmp
rcll
sar
rorl
sub
sbb
push
test
jecxz
insl
cmpsb
enter
mov
mov
ljmp
xchg
hlt
adc
mov
xor
dec
repz
xchg
fwait
xchg
adc
cltd
push
repz
xor
mov
or
mov
push
mov
add
data16
lea
movsb
adc
mov
mov
lret
lret
ljmp
mov
rep
mov
inc
fmul
push
ja
ja
andb
stos
loopne
cmp
jnp
mov
dec
xchg
lds
imul
sbbb
xchg
in
jecxz
pop
imul
inc
inc
cmp
inc
dec
cli
jl
xchg
adc
xchg
cltd
and
or
sbbb
fadd
mov
mov
push
leave
cld
out
out
insl
pop
arpl
push
loop
xor
in
nop
das
jae
scas
and
shrl
out
mov
movsl
movsb
pop
jp
adc
pop
aas
mov
sub
push
mov
mov
pop
pop
test
mov
popa
int
dec
jp
aaa
fs
mov
aaa
test
or
sbb
mov
push
repz
outsb
in
sub
jo
insl
xlat
vpxor
icebp
or
jmp
insb
lods
cmp
lret
mov
fadd
mov
cmp
stos
sub
push
cmp
and
sub
lods
jge
lcall
popf
and
push
mov
xchg
mov
sbb
pop
and
cltd
cltd
xor
dec
and
add
push
xchg
cmp
in
dec
pop
xchg
cmp
adc
mov
xlat
jbe
icebp
in
or
xor
lods
or
aaa
cmp
xor
in
sub
pop
inc
sub
cli
std
push
sbb
adc
cld
mov
dec
popa
push
fwait
sub
jns
lret
bnd
ja
pop
xchg
xor
sub
ret
mov
mov
sub
cmpsb
dec
js
jmp
cmp
push
or
rorb
repnz
aad
jge
je
into
xor
je
adc
cmp
mov
paddsw
das
mov
dec
jb
test
inc
xchg
jle
push
jno
out
fwait
gs
bound
jae
shll
sub
aaa
xor
jno
jmp
or
mov
inc
push
shlb
outsb
mov
jmp
or
jbe
test
shrl
insl
push
imul
adc
and
pop
pop
aam
es
mov
push
sahf
jg
mov
sub
xlat
insl
lods
aas
rcrl
sub
jo
inc
aaa
mov
test
test
lods
add
js
call
hlt
jne
push
mov
jbe
in
cmpsl
xchg
pushf
data16
test
test
sahf
adc
mov
push
fldcw
inc
jecxz
xchg
idiv
cmc
pop
and
inc
lcall
pop
out
loopne
and
es
int
loopne
cmp
jnp
les
mov
les
pop
jp
jp
in
cmpsl
xchg
inc
shr
ret
nop
pusha
push
dec
adc
lret
cmp
les
xlat
or
push
push
bound
cs
ficoms
adc
adc
sub
xor
dec
insb
add
pop
imul
testb
cmp
inc
inc
dec
lcall
pop
cld
loope
sbb
aad
sub
mov
sub
push
pusha
lahf
xchg
out
or
mov
push
or
mov
repnz
sbb
sbb
orb
lret
cmc
lock
test
popf
stc
je
scas
shlb
adc
and
pop
push
push
inc
daa
adc
hlt
clc
dec
in
inc
xor
shll
aad
mov
and
clc
mov
shll
ret
pop
push
mov
sbb
movsb
adc
fidivrl
aas
aad
mov
and
popl
xor
dec
loop
cli
and
xor
andnps
xchg
bound
sbb
jb
pop
popf
push
pop
push
cmp
sbb
testl
pop
out
std
pop
lods
das
adc
popf
imul
xchg
cltd
ret
ret
stos
push
testb
mov
xchg
jae
jmp
adc
cmp
repz
pop
cmp
and
out
mov
movsl
add
mov
out
ds
mov
test
mov
cld
imul
fcmovnu
rorl
cs
lea
fptan
adc
out
push
mov
dec
lahf
movsl
subl
fidivl
sub
push
imul
cmpsb
xchg
add
mov
jb
and
in
mov
sbb
into
sti
test
cmpb
ret
loopne
fwait
insl
push
aam
add
mov
lret
push
pop
mov
shlb
mov
jbe
adc
cmpsl
and
pop
cli
lret
pop
mov
adc
int
unpcklps
insb
xchg
push
adc
je
mov
inc
insb
stos
push
sub
test
mov
pop
aad
ret
out
adc
jo
sub
bts
popf
inc
mov
jbe
in
notl
lock
rolb
and
scas
mov
aam
ret
jb
ds
jmp
loope
inc
pushf
fs
aas
fnsave
mov
imul
shll
sub
arpl
xor
jl
and
ss
pop
mov
mov
cmp
loopne
subb
push
xchg
iret
les
xchg
dec
add
pop
pop
std
push
push
dec
push
stc
lcall
xor
mov
std
stos
outsl
dec
enter
clc
lock
shll
sub
mov
sbbl
mov
jne
rorl
out
insb
xor
mov
repz
aaa
xor
iret
cli
jecxz
mov
outsl
out
sub
lds
push
scas
dec
jbe
sbb
insl
sbb
or
jle
cld
or
bound
int
test
shll
loop
sahf
dec
std
imull
sbb
lahf
sbb
and
or
mov
mov
mov
into
jb
scas
sahf
cmp
cmp
and
loop
fxam
pop
stos
cmc
push
and
aad
arpl
out
in
inc
inc
aaa
sarb
mov
ja
xchg
rolb
mov
dec
xchg
dec
push
shrb
sub
pusha
popa
xchg
sub
xor
out
stos
pop
jno
out
xor
sbb
jl
mov
cwtl
sbb
push
sahf
mov
jecxz
add
repnz
sub
pushf
mov
rcrb
xchg
ja
repnz
dec
mov
or
dec
xor
inc
pop
out
data16
xchg
xlat
xchg
ss
mov
clc
int
xchg
das
add
mov
sub
ljmp
aam
jne
dec
cltd
xor
ret
aam
dec
sbb
adc
pop
adc
gs
and
int
ds
cmp
sbb
lods
test
in
cmp
push
xor
dec
int3
outsb
add
mov
sbb
lods
loop
sarb
imul
mov
pop
pop
shrl
iret
mov
jae
sub
inc
test
lret
jge
mov
mov
xchg
scas
xor
leave
sbb
jb
lods
add
pop
je
add
dec
adc
adc
adc
and
sub
xor
mov
mov
jg
fdivrl
xchg
sbb
dec
jmp
sub
ret
js
out
ret
andl
repnz
mov
lock
icebp
stos
ds
cmp
fildl
movsb
sbbl
mov
rorl
jb
fbld
dec
add
mov
jno
mov
push
in
enter
push
cmp
aaa
mov
ret
popf
int3
dec
pop
mov
pop
mov
mov
daa
jne
jg
mov
add
or
mov
adc
pop
sbb
dec
mov
adc
loope
call
push
push
inc
or
adc
mov
cmpb
cs
push
stos
mov
xor
fldl
adc
in
lahf
xchg
sub
rclb
push
in
out
aam
cmp
mov
stos
ss
stos
cld
push
rcr
sub
fistpl
nop
inc
push
push
loopne
mov
xlat
es
in
dec
outsl
sub
and
out
lahf
xor
lret
call
sti
out
test
mov
dec
jle
add
cmp
scas
xchg
cmp
fidivl
icebp
test
loopne
jbe
mov
or
data16
popa
dec
mov
out
cli
repnz
leave
addr16
xor
fists
or
pop
addr16
movsl
sbb
mov
out
and
jae
adcb
push
jne
rcrl
xchg
out
lahf
stos
push
inc
ja
sti
sub
arpl
cmp
es
dec
pop
gs
add
jp
inc
mov
sub
adc
in
fisubl
jb
and
push
and
dec
inc
push
jle
xchg
rclb
fdivs
into
add
imul
mov
daa
mov
fdivrl
xchg
fsubl
push
xchg
dec
mul
repnz
mov
xor
outsl
sbb
aad
sub
push
xor
adc
jmp
inc
cmp
add
adc
loopne
sahf
push
in
xchg
aam
and
push
sti
stos
inc
out
xor
push
jno
mov
xor
movsl
cltd
mov
sub
xchg
push
inc
dec
daa
cmpb
xchg
or
and
fsubs
out
pop
out
int3
xchg
jae
inc
fimull
mov
lods
push
inc
subl
shll
scas
mov
pushf
aad
pop
ja
lock
add
sbb
fidivrs
ds
mov
fstpl
add
push
or
mov
jmp
adc
js
inc
pop
mov
cmp
scas
push
lods
sub
in
push
pusha
inc
lods
adc
vpaddb
mov
or
test
arpl
push
stc
loopne
xchg
sbb
add
jecxz
or
push
inc
cwtl
push
stos
pop
or
xchg
fs
ja
xor
sbb
ror
xchg
arpl
leave
inc
mov
notb
in
jl
cmp
out
jle
xlat
insl
inc
pop
fiaddl
lds
fs
jns
out
fdivs
cmp
bound
out
bound
outsb
inc
shlb
ljmp
sahf
sub
arpl
adc
es
pop
push
pop
xchg
mov
in
pop
xlat
mov
adc
adc
jle
mov
xchg
xchg
push
in
divl
scas
outsb
mulb
or
pusha
push
adc
cmp
or
lock
sub
mov
mov
xor
lret
sub
lahf
push
fisubs
lcall
popa
add
jbe
addr16
aam
je
push
out
pushf
jmp
leave
rclb
ja
xor
jo
lock
fidivrs
mov
jns
mov
cmp
or
jae
popf
add
in
xchg
mov
jg
ror
in
jecxz
filds
es
sub
push
loope
ret
mov
add
dec
pop
mov
dec
add
sbb
xlat
xchg
add
pop
outsl
enter
sbb
and
iret
stos
pop
std
add
loop
je
sub
out
mov
xchg
push
adc
dec
lret
dec
gs
or
subb
xor
cmp
jle
fiaddl
jl
arpl
sbb
lcall
push
out
shrl
lea
add
inc
inc
mov
outsl
mov
mov
sbb
test
mov
mov
mov
out
xor
int
push
arpl
adc
cmp
push
mov
stos
push
pop
xchg
andl
xor
jae
lret
mov
pop
and
fadds
mov
cmp
pop
cmpsb
push
and
adc
test
xchg
scas
xor
enter
loopne
je
mov
mov
xchg
enter
imul
ret
pop
ret
pusha
imul
sbb
fimuls
lds
mov
gs
popa
mov
fcoms
pop
cmc
mov
stos
out
push
jge
jp
inc
sub
adc
jle
int
and
daa
shlb
in
push
nop
and
sbb
idivl
adc
mov
int
xchg
out
jl
mov
pop
fidivrs
outsl
cmp
xchg
addr16
loope
cltd
dec
divb
ret
js
sahf
mov
sub
jecxz
cmc
inc
lret
call
jnp
or
or
sbb
push
mov
adc
fcmove
mov
shl
mov
inc
jbe
lods
iret
mov
ret
jb
das
iret
push
add
jb
hlt
mov
xor
mov
pop
out
in
pop
mov
movsb
das
mov
push
ss
cltd
imul
or
xor
les
dec
push
xor
sbb
out
xchg
push
out
and
sbb
jl
xor
cs
movsb
inc
jae
mov
mov
adc
out
add
add
mov
imul
lods
cwtl
xchg
adc
out
jp
imul
lock
adcl
adc
aad
push
or
mov
ficoms
pop
in
shrl
popf
aas
and
aaa
xchg
pop
in
mov
mov
and
lea
sbb
or
dec
and
or
mov
aam
loopne
dec
push
dec
push
pop
inc
cmpsb
inc
sbb
lcall
leave
push
mov
shlb
or
dec
sub
lahf
data16
xlat
aam
stc
cs
lds
and
mov
cmp
mov
sbb
xchg
sub
jo
jne
push
pop
ss
jns
mov
mov
xor
pop
and
cmc
or
inc
fcmovnb
xchg
jne
mov
cltd
mov
mov
ds
fsubs
fld
call
add
es
adc
xchg
sti
aad
mov
push
and
push
scas
rorl
mov
sub
dec
inc
mov
sbb
notl
xor
xchg
iret
mov
or
sub
inc
jns
sbb
push
push
or
push
xor
movsb
xor
sbb
out
jb
and
outsb
enter
outsl
jno
data16
out
pop
stc
bound
push
dec
xor
sub
mov
mov
sbb
lds
rcrb
pop
xor
jae
lock
cmpsl
xchg
jge
xchg
neg
and
sub
jp
fstpt
push
inc
jl
ss
inc
xor
mov
shlb
dec
pop
lret
jbe
pop
cs
lock
test
lret
repz
pusha
sub
adc
pop
int3
jmp
cld
mov
pop
adc
leave
or
rcrl
lret
xchg
sub
push
adc
push
scas
xor
xor
cmpsb
mov
and
inc
hlt
insl
fcomi
testl
imul
mov
jl
nop
add
inc
adc
shl
or
lods
dec
add
and
add
jge
mov
scas
lds
mov
xchg
fisttpl
fcom
or
shrb
adc
sbb
pop
subb
pushf
jo
in
pop
xor
add
jbe
cmpsb
adc
cmpsb
mov
rolb
xchg
cmp
lock
mov
pusha
fdivrl
pop
or
loopne
jae
push
dec
iret
pop
mov
cmp
subl
or
cli
testl
dec
add
xchg
imulb
notb
sbb
testl
cmp
stos
or
mov
mov
roll
sub
call
jle
push
pop
filds
lock
add
mov
or
test
and
lods
adc
pop
xchg
xor
dec
icebp
sahf
push
sahf
jb
jbe
loop
popa
mov
jle
inc
test
lret
push
xchg
lahf
xor
andl
lcall
xchg
add
ja
arpl
xchg
hlt
imull
stos
fildll
ljmp
repz
jmp
in
push
mov
sbb
mov
shlb
call
pop
mov
pop
lock
mov
in
or
jl
testl
jo
push
mov
xchg
and
popf
and
jnp
jae
out
stos
scas
sbb
and
sub
mov
or
aam
xor
dec
cmpsl
mov
loop
scas
jge
cwtl
pop
cmp
xor
jge
and
adc
push
addb
xchg
mov
hlt
cld
xchg
add
aaa
jo
inc
cmpsb
xor
loopne
popa
mov
ljmp
sub
es
in
int3
iret
jns
cwtl
pop
test
daa
clc
ret
jle
jecxz
fdivr
adc
dec
xor
jb
leave
or
pop
cmpsb
mov
jno
enter
out
mov
pop
int
dec
cmovg
mov
dec
cmp
mov
xchg
adc
scas
and
ljmp
iret
es
cld
xchg
ss
or
push
mov
jmp
xchg
sub
dec
test
dec
and
sahf
mov
ret
jbe
bound
aaa
xor
lret
movsl
mov
dec
inc
xchg
add
repnz
add
popa
xchg
mov
jne
inc
xchg
xchg
or
jecxz
dec
pop
imul
inc
jne
sub
aas
or
enter
xchg
orb
cmpsl
fs
pop
push
and
aad
sbb
jne
push
jnp
xchg
xor
cmp
insb
push
adc
sub
fsts
je
and
adc
into
bound
add
jne
repz
cmp
scas
jo
xor
xchg
push
aam
fists
jge
das
in
dec
jb
mov
out
lock
inc
xlat
mov
xchg
lock
je
shll
iret
in
test
imul
ficompl
aas
push
lods
leave
in
mov
ja
leave
sub
or
xor
dec
outsb
data16
cmp
xchg
pop
pop
add
cwtl
ja
popf
add
shrl
add
dec
pop
jg
push
push
stos
jle
shlb
jb
imul
fcomi
mov
inc
test
push
mov
stos
ror
mov
mov
or
push
cli
cli
inc
imul
stos
lahf
cmp
cmpsb
adc
fadds
adc
mov
cmc
je
ret
mov
dec
icebp
pop
icebp
orl
adc
ret
xchg
pushf
push
in
push
test
ret
imulb
fadd
pop
dec
sub
xlat
push
mov
clc
jge
mov
xchg
in
add
jae
es
je
and
pop
xor
loop
bnd
pop
xchg
cld
jns
push
mov
push
mov
and
lods
int
or
mov
mov
lds
dec
jae
iret
js
scas
xor
add
fwait
mov
push
pop
movsl
movsb
rolb
jne
xchg
mov
pop
push
or
loope
mov
andb
adc
pushf
nop
aas
fmuls
and
push
adc
scas
push
mov
aad
imul
sub
mov
js
icebp
daa
sub
xor
bound
clc
das
loop
sbb
jg
cmp
push
mov
mov
imul
mov
and
push
movsl
sbb
scas
sbbl
jmp
mov
add
sbb
mov
cltd
addr16
jge
ja
dec
jp
dec
and
mov
xor
aaa
outsl
hlt
jp
mov
insl
xor
ret
loop
std
cmp
cmp
js
js
in
mov
ds
out
das
movhps
andb
flds
pop
mov
mov
loope
fnstenv
data16
shl
ficoml
sub
adc
int3
adc
inc
mov
leave
lcall
outsl
pop
inc
xor
jnp
fistps
dec
cmp
pop
inc
adc
inc
int3
sub
adc
lock
sbb
ffreep
mov
in
call
aad
jge
cmp
pop
sub
xchg
xchg
cmp
les
ja
ds
xlat
lahf
daa
add
jns
icebp
pusha
or
dec
ja
loopne
movsb
jns
fwait
ret
in
and
sub
mov
repnz
das
push
mov
dec
enter
xchg
icebp
pop
out
ss
fistps
or
and
cmp
shrl
dec
and
jo
sbb
jge
fstps
pop
sbb
and
icebp
fsubrl
mov
sub
test
cmp
cmp
aaa
mov
and
jecxz
sti
inc
mov
lds
xor
test
lds
jg
lcall
jb
and
push
popf
fmulp
jp
dec
mov
sub
add
or
cmp
pop
mov
mov
push
xchg
xchg
clc
rcr
js
mov
fdivrp
inc
data16
arpl
adc
pop
mov
inc
mov
push
add
sbb
push
ja
mov
or
leave
pop
outsb
ret
stos
and
inc
inc
stos
and
or
in
ficomps
repz
mov
cltd
testl
iret
cmp
outsl
mov
sub
push
adc
cmpsb
push
loope
repnz
int
lret
lret
sub
inc
push
push
and
cwtl
sub
repz
scas
call
add
sti
test
mov
xor
dec
pop
pop
arpl
jnp
idivb
and
ret
cli
pop
sbb
popa
jb
mov
andb
rorl
addr16
mov
push
and
sar
push
mov
test
add
jnp
inc
xor
lea
jg
xchg
cmp
lds
gs
lods
ds
mov
mov
push
cmp
out
cli
pop
mov
in
out
adc
movsl
mov
fstps
or
jg
jne
or
lods
orb
mov
je
dec
or
js
aaa
mov
inc
insl
or
cmc
xchg
add
mov
adc
les
xchg
daa
jmp
dec
add
sub
xor
loop
loopne
xorl
pop
push
divb
fs
xchg
fmuls
psubb
mov
push
loop
inc
xchg
cmc
inc
bnd
outsb
jno
jb
push
test
cli
rcr
negb
mov
xor
scas
bound
pop
test
push
inc
outsb
cmp
push
push
pop
scas
ja
mov
mov
mov
fistps
mov
pop
popa
push
enter
push
repnz
push
loop
xchg
movsl
push
lea
fwait
pop
loop
mov
and
inc
mov
loop
loope
hlt
mov
sub
pop
aaa
xchg
nop
ror
mov
dec
pop
inc
cmp
in
sbb
push
cmpsl
out
xchg
je
xchg
xor
jae
test
jl
sbb
pop
ss
cmp
mov
xor
mov
jb
test
pusha
mov
mov
inc
mov
xchg
aam
push
adcl
mov
cmp
fmul
sahf
mov
add
sti
popf
test
aad
lcall
cmp
fsts
jne
loopne
lods
call
xor
stos
push
push
adc
sti
mov
adc
fistpl
xor
cltd
sbb
mov
pushf
xchg
push
cld
shrb
stos
fistps
roll
in
pushf
add
les
push
push
mov
pop
dec
add
inc
out
sub
nop
xlat
lock
aas
push
ret
data16
cmp
stc
inc
pop
jg
repz
or
push
addb
in
pop
push
inc
mov
push
leave
pop
stos
shll
fildl
rcll
ljmp
xchg
aas
imul
daa
fldt
or
and
in
leave
shll
push
sbb
adc
js
jo
inc
shlb
and
dec
fistpl
or
lds
sub
jae
mov
rorb
arpl
ret
gs
sub
pop
aad
xor
out
add
or
sbb
lock
andb
mov
mov
inc
push
mov
fnsave
mov
jno
pop
sarl
pop
lcall
test
add
push
inc
stos
loopne
loop
push
rcrl
and
ds
mov
out
test
cs
inc
inc
mov
popa
and
xchg
pop
mov
jo
jmp
xchg
fidivrl
ror
cli
sub
dec
stos
scas
pop
push
pushf
mov
out
in
addl
inc
push
mov
jns
ret
pop
mov
sub
mov
pop
pop
movsl
enter
aad
repz
mov
pop
push
sbb
sbb
add
jmp
add
pop
push
sbb
xchg
addr16
test
std
and
sub
lahf
pop
arpl
inc
aad
mov
scas
test
or
dec
push
aaa
inc
stos
sub
xor
adc
ds
fldln2
cld
fnstsw
jbe
nop
jmp
mov
stos
test
pop
cmp
mov
pop
xchg
out
inc
xchg
fs
xchg
gs
or
movsb
inc
push
aaa
push
mov
stc
fldcw
jecxz
cmp
xor
xor
push
jno
jp
fildll
scas
jno
shlb
icebp
lea
add
sarb
mov
in
icebp
outsb
out
xor
rcll
aas
shrb
fxch
aaa
mov
cltd
xor
inc
pop
mov
mov
xchg
push
mov
inc
stos
fimuls
add
sbb
shll
pop
inc
pop
out
outsl
cli
mov
orl
xchg
imul
ret
stos
inc
pop
gs
push
pop
xor
or
lds
inc
or
and
adc
test
mov
das
iret
pop
insb
jns
push
out
push
mov
insl
sbb
scas
mov
fists
or
fstpl
mov
bound
enter
mov
push
test
outsl
nop
mov
mov
test
dec
test
int
jge
sahf
fimuls
rorb
mov
jmp
adc
or
adc
add
add
cmpsl
push
in
test
xlat
es
imull
cmovge
xor
add
adc
ljmp
pop
dec
xor
mov
add
ja
js
sub
faddp
mov
stos
cmp
push
call
fsubrs
adc
pusha
stc
ror
in
lcall
hlt
mov
out
mov
or
mov
pop
mov
pavgb
dec
xchg
shrl
mov
cmp
test
xor
dec
sub
sbb
test
sbb
mov
pop
jecxz
sbb
sub
cwtl
mov
or
cmpsl
mov
adc
or
imull
sarl
xorl
fistpl
pop
outsb
lock
dec
adc
cs
push
jno
insl
cmp
rol
outsl
cmp
js
inc
xor
xor
aas
dec
fwait
popf
out
in
arpl
filds
jnp
inc
sub
pop
add
sub
lock
jne
push
dec
movsb
fwait
movsb
mov
cmp
in
orb
out
push
out
out
sbb
inc
lea
popa
jge
lret
cvtpi2ps
shll
inc
loope
mov
in
jnp
in
sub
push
mov
xchg
out
lret
jle
sub
insb
xchg
insl
cmp
rorb
mov
add
sub
adc
repnz
hlt
push
push
cmp
pop
outsb
into
mov
es
mov
iret
jg
mov
js
leave
cmp
fmul
test
and
fs
outsb
mov
cld
jb
cmp
adcl
std
roll
mov
cmpsl
mov
insl
add
cmpsb
mov
sahf
loop
sub
sbbl
xor
lock
jecxz
loope
roll
pusha
popf
xchg
mov
xchg
loope
or
fstpt
dec
mov
push
stos
xchg
out
movsl
mov
adc
fiadds
test
push
add
mov
test
imul
inc
fcmovnbe
push
adc
mov
pop
cltd
push
enter
into
pop
pop
shrl
pushf
jns
add
and
lock
sub
jp
xchg
out
sahf
mov
and
or
pop
xorl
add
push
fsubrs
dec
repz
mov
out
shll
mov
sub
cmpsb
pop
add
mov
jmp
repz
hlt
mov
or
jl
gs
sbb
out
ja
stos
icebp
test
in
mov
cmpsl
test
xchg
repnz
or
shll
add
cld
add
orl
nop
call
jle
ja
mov
loope
xchg
pop
int
jmp
add
rolb
int
add
jo
jns
das
dec
inc
mov
hlt
sub
lds
dec
xchg
movsb
cmc
outsb
jle
and
les
sbb
xor
xchg
pop
rcrl
jecxz
lea
jbe
mov
sub
jle
pop
xor
push
inc
inc
or
add
xchg
js
je
shrl
pop
pop
xchg
negl
idiv
xlat
sti
imul
sub
fsin
cmp
fidivs
push
fcmovnb
aam
in
push
pop
out
sbb
out
arpl
push
ja
jne
lret
or
xchg
adc
ja
jmp
hlt
mov
mov
cli
dec
ja
add
subb
push
cmp
adc
out
jle
sti
pop
or
jle
movsl
addr16
and
mov
mov
jmp
jb
xchg
popf
sub
xlat
enter
sbb
push
subl
mov
lea
jne
in
outsb
ret
pop
mov
xchg
lea
sarl
testl
int
mov
add
les
push
stos
xor
sti
lea
js
int3
out
dec
and
mov
inc
sahf
shlb
fucomip
hlt
cmp
or
jg
in
mov
xchg
stc
test
mov
xor
mov
cmp
cmc
jge
ljmp
das
sub
in
inc
icebp
loop
xor
sub
push
inc
adc
cmpb
cmp
push
in
cmc
cmp
rorb
pop
iret
pop
or
or
pop
je
pushl
les
add
lcall
cmc
fstpl
je
into
or
in
mov
ja
pop
js
mov
ss
sub
subb
ret
nop
insb
push
inc
dec
and
xor
lock
pop
mov
ja
add
aad
jl
repnz
dec
movsb
aas
add
cmp
lret
cmpsl
and
cmp
cs
mov
push
xor
mov
push
sbb
ret
xchg
subl
xor
les
out
or
xlat
shlb
adc
je
scas
into
mov
stos
cmp
loop
test
jl
jne
add
mov
xlat
jge
pop
out
xchg
push
push
sub
push
subb
into
adc
notl
or
xor
loope
cmpsl
fcomp
leave
add
popa
cmpsl
je
xchg
pop
mov
and
out
pop
and
rcrl
add
or
scas
inc
sub
mov
test
cmpsl
ljmp
jo
rorb
addr16
call
les
add
cmp
repz
dec
int
call
pop
jge
mov
xchg
mov
pop
mov
lods
jo
jge
inc
dec
push
xor
push
cmp
enter
mov
jnp
xchg
adc
aad
fbld
std
mov
out
jmp
jb
sub
pop
fsubp
xchg
mov
imul
and
sub
nop
imul
loop
aam
sub
test
out
aaa
addl
in
jnp
int
mov
or
fildll
in
and
pop
stos
jle
out
xor
sub
ss
xor
inc
cmpsb
sbb
das
loopne
mov
ss
jmp
lods
cmp
movsb
int
cmpsb
sarl
aaa
lret
arpl
xlat
mov
add
adc
out
mov
inc
aam
hlt
outsb
cwtl
mov
jge
sar
xor
lcall
xor
mov
jo
jns
xorl
out
or
mov
mov
daa
test
dec
push
jnp
out
aad
ds
inc
and
sbb
xchg
pop
mov
aam
mov
dec
test
mov
cli
iret
xchg
mov
push
xor
xor
add
pusha
xor
xor
jne
or
mov
fwait
xlat
sub
cmp
sbb
call
hlt
test
push
je
cltd
inc
icebp
push
mov
and
leave
push
fdiv
sbb
fwait
mov
and
jl
mov
sub
push
outsb
sub
inc
or
push
fwait
mov
mov
cld
pop
outsb
adc
pop
hlt
scas
rcll
pop
cmp
fldl
sub
and
test
test
pusha
jge
inc
jle
cmp
xchg
sub
fstl
xchg
sbb
cmp
push
ret
fists
cmp
jp
mov
int
lock
jo
xor
add
dec
addr16
lock
xlat
outsb
gs
mov
test
dec
enter
loop
jb
push
xor
sbb
fnstenv
add
jbe
jbe
lret
cmp
jo
rcr
add
lcall
sbb
and
cwtl
inc
jecxz
ficomps
ljmp
or
adc
push
out
lcall
bnd
pop
clc
fwait
idiv
clc
insl
into
sub
outsl
adc
mov
mov
jne,pn
leave
cmp
push
xchg
dec
int3
dec
adc
jmp
dec
outsl
cmp
mov
stos
pop
pop
jecxz
mov
ss
cmpsl
out
sub
aas
daa
loopne
jnp
in
int
push
add
pop
outsl
int3
cwtl
gs
push
or
loope
pop
jae
aas
jne
cmp
add
sub
jae
stc
adcl
mov
sbb
lock
ret
orb
add
fisttps
aas
or
and
inc
lahf
xor
xlat
cmp
bound
xchg
jl
in
dec
enter
push
rorb
mov
repnz
and
push
cmpsb
enter
jb
dec
mov
adc
jb
fimull
lcall
push
sub
mov
or
sbbl
dec
pop
cli
jb
push
sahf
cltd
ret
mov
cmc
or
dec
sbb
mov
subb
and
sarb
sbb
rcl
jae
pushf
push
leave
lcall
push
lcall
ret
adc
push
mov
add
xchg
inc
xchg
jb
mov
adc
inc
je
mov
cmpsl
pop
xor
ja
out
lret
push
xchg
jg
mov
inc
outsl
pop
repz
jnp
lea
jno
pop
pop
jbe
lods
test
add
cmp
insl
movsb
pusha
cmp
dec
or
jl
inc
sub
push
jo
js
push
shlb
or
inc
mov
test
pop
pusha
xchg
push
test
jl
lret
addr16
icebp
mov
xchg
cld
mov
mov
dec
adc
push
pop
pop
addr16
sub
mov
sbb
movsb
lret
fisubrl
lea
adcl
mov
sbb
hlt
popa
mov
daa
lock
ret
pop
sub
mov
xchg
pop
push
push
jae
sub
mov
adc
mov
pushf
sbb
shl
aam
push
fs
arpl
outsl
pcmpgtw
cmc
push
dec
push
mov
ljmp
movsl
and
sbb
pop
jne
xchg
sbb
jns
stc
jb
dec
andl
sub
mov
sti
jo
repnz
jmp
xchg
sbb
lret
and
imul
insl
jno
mov
adc
pusha
or
mov
dec
inc
lahf
mov
dec
add
in
push
ficomps
aas
cltd
or
ds
sbb
xchg
add
cs
daa
push
xchg
and
xchg
mov
fsubr
stos
mov
mov
repnz
add
repz
push
xchg
outsb
stc
cmpsl
cpuid
or
popf
movswl
dec
and
or
fdivl
jae
jns
push
cmp
add
sub
sub
sahf
pop
mov
sub
adc
cs
jle
sahf
int3
iret
lods
xchg
mov
std
inc
adc
mov
push
in
push
inc
dec
scas
push
fcmovnbe
in
cs
add
jecxz
inc
orl
call
or
testl
divl
lahf
and
jb
jae
pop
stc
xchg
std
xor
mov
scas
in
cltd
lods
jmp
into
jge
inc
lret
or
pop
pop
cmp
mov
adc
imul
loope
xchg
subl
out
and
aad
or
std
fwait
push
insl
sbb
pop
mov
lods
out
pusha
mov
xor
dec
jb
mov
cld
dec
add
ja
cmp
push
out
fiaddl
pop
loop
dec
dec
lds
js
lods
push
mov
dec
jmp
es
or
xor
ja
push
xor
lock
pop
inc
or
push
inc
jg
aas
mov
outsb
sub
stos
push
dec
mov
shlb
shr
cltd
and
out
jns
addr16
xlat
dec
fwait
and
xchg
out
pop
pop
mov
lods
xor
jl
jg
daa
add
pusha
icebp
scas
cmpsl
imul
rsqrtps
xchg
mov
iret
and
push
pushf
pop
mov
mov
dec
aas
dec
addr16
ret
mov
test
loope
fsub
xor
jle
xchg
xor
outsl
xor
mov
fstl
sub
sbbl
leave
jge
bound
clc
stc
mov
dec
iret
xor
inc
cmp
iret
sbb
cmpb
mov
out
je
movsb
mov
pusha
xor
popf
mov
lcall
jmp
dec
cmp
ds
ficomps
shrl
cmp
push
xor
into
xor
repnz
jle
xor
scas
jle
add
rolb
testb
lea
dec
jg
dec
sbb
jge
andl
or
enter
movsl
lahf
scas
in
mov
and
push
and
scas
fwait
sub
push
cwtl
inc
sti
jecxz
inc
fistpll
inc
cmp
filds
and
cwtl
xchg
push
sub
cmp
setle
dec
fsubrl
jnp
and
pop
xchg
adc
inc
cmpsb
sti
jnp
xor
adc
xchg
sbb
addr16
fidivrs
rorb
pop
pop
xor
push
mov
les
pop
jno
adc
inc
lea
or
push
clc
cwtl
les
jle
andb
jo
out
cwtl
ss
mov
nop
push
push
shlb
mov
into
jmp
in
xchg
adc
insb
adc
pop
nop
je
jo
lahf
add
imul
pusha
cmpsb
ds
sti
jge
add
mov
insb
cmp
jno
lret
inc
test
adc
ret
aas
push
dec
push
subl
xor
pop
jl
or
cli
mov
dec
push
bound
in
mov
fisttps
jne
repz
call
push
or
xorl
inc
andl
mov
rcll
fistps
lret
repz
jge
cwtl
bound
les
fwait
arpl
or
fcmovbe
fmull
sub
jl
xor
out
ja
arpl
push
pop
mov
addl
fcmovnb
inc
mov
push
iret
imul
mov
push
lahf
mov
mov
fbstp
xchg
push
arpl
pop
test
rorb
mov
sbb
addr16
mov
push
lods
lcall
ja
daa
pushf
jg
stos
gs
in
out
sub
ja
or
pushf
mov
mov
out
jns
jb
outsb
stc
dec
add
xorb
lea
push
fwait
movsl
shrl
aam
add
je
mov
out
loop
push
push
dec
ljmp
and
sub
or
push
test
repnz
jae
test
cmpsl
mov
es
pop
fs
cwtl
dec
rcr
inc
mov
fbstp
sbb
sub
dec
mov
cmp
sahf
daa
jno
and
bound
enter
fnstsw
cmpsb
out
inc
sbb
inc
mov
mov
outsb
sbb
mov
mov
inc
outsl
cmpsb
repz
stos
jmp
sbb
pop
pop
int3
pusha
lock
adc
pop
push
jne
js
ret
es
scas
in
add
clc
push
add
insl
push
outsb
in
or
add
addr16
lods
push
aas
jae
sbb
ficoms
adc
negl
arpl
stos
push
dec
inc
push
push
mov
mov
jl
xor
scas
mov
daa
in
xor
dec
cmp
pop
dec
cmp
lea
sbb
outsl
jno
or
adc
mov
xchg
push
mov
arpl
imul
out
jge
xchg
inc
adc
pop
imul
and
out
xchg
ret
mov
sub
scas
cmp
sbb
outsb
lods
mov
test
pop
adc
sahf
nop
pop
mov
pushf
inc
fdivl
mov
adc
out
cmp
xlat
sbb
mov
inc
mov
jne
or
fisubrs
mov
jmp
pop
pop
hlt
rolb
imul
in
xchg
lock
or
addl
icebp
out
lahf
shr
jns
out
push
fstl
lcall
lock
cld
pop
shrl
inc
pop
push
mov
pop
fmull
lock
pushf
mov
fdivs
sub
mov
lock
add
fstps
mov
jg
xchg
inc
pop
pushf
adc
push
out
leave
mov
mov
mov
sub
imul
jmp
or
xchg
pop
int
test
sub
in
xchg
loope
cmp
mov
mov
fisubs
xor
dec
es
ja
pop
xchg
xor
add
daa
aam
idivb
aam
in
adcb
cmp
xlat
adc
xor
xorl
jecxz
mov
xchg
and
mov
cmp
dec
xchg
insb
rorb
adc
xchg
ss
mov
pop
lea
xchg
add
rcrb
testb
or
lods
add
shlb
scas
in
sub
inc
ret
arpl
fisubs
and
out
jns
push
cmpsb
adc
rolb
dec
jmp
cwtl
repz
iret
add
mov
int3
js
ds
cmp
mov
mov
mov
adc
jmp
xlat
dec
cmp
std
repnz
iret
out
mov
xchg
hlt
fs
mov
push
sbb
mov
pusha
repz
inc
cmp
fcompl
imul
xor
dec
xchg
cld
sarb
int3
scas
mov
hlt
cltd
xlat
out
pop
or
les
mov
nop
jne
cmp
pop
xchg
pop
push
rcrb
movsl
or
pop
or
sahf
jb
jb
mov
inc
sbb
pusha
inc
xor
arpl
push
xchg
or
lret
lahf
jns
adc
jecxz
std
lea
mov
ret
mov
subl
pop
test
fildl
movl
and
call
mov
cmpsl
cmp
xchg
stos
xchg
xchg
sub
sahf
add
mov
or
call
xchg
push
cs
into
sbb
sbb
les
and
into
xchg
push
lods
push
or
sub
fcomip
movsb
cmp
mov
repnz
popa
scas
ret
mov
leave
xchg
shll
les
sbb
sbb
cmp
rolb
lret
cmp
and
int3
test
push
lahf
imul
outsb
sbb
jmp
xchg
mov
xchg
pusha
and
mov
movsb
imul
mov
clc
out
cmpsl
cld
fs
add
mov
or
inc
mov
sarb
fsubp
dec
xchg
mov
dec
cli
imull
call
insl
out
mov
sub
dec
cld
out
xor
lds
lret
sub
push
xorb
push
dec
mov
scas
jae
orb
stc
adc
nop
ret
pop
roll
adc
sbb
sbb
int3
mov
mov
sbb
dec
into
enter
fwait
mov
sub
lret
subl
pop
adc
jae
lret
push
int
cmpsl
sub
shll
ja
inc
cli
outsl
jbe
xchg
sbb
mov
fldenv
negl
rolb
int3
fisttpl
outsb
or
mov
fs
cmp
in
add
ret
andb
shll
and
cmp
rclb
jle
cltd
sarb
fisttps
mov
testl
sub
dec
cmp
and
cmpsl
push
mov
mov
icebp
mov
xor
mov
into
cmp
fdivrl
add
pop
jp
imul
pop
xchg
xor
hlt
pop
sahf
push
shlb
xchg
jbe
test
fildl
adc
in
or
mov
inc
lahf
pop
mov
mov
mov
fisttpll
jmp
xor
lahf
xlat
cli
rolb
inc
das
les
cmp
mov
loopne
inc
sub
dec
loope
or
mov
pop
jg
insl
xchg
pop
pop
mov
mov
inc
push
push
inc
sbb
fcoml
ds
sti
clc
addb
scas
cld
and
cmp
aad
insb
sub
and
jno
mov
pop
push
jns
test
xchg
bound
insb
sub
cmp
xchg
sbb
jg
sub
mov
push
mov
repnz
loop
cmpsb
pop
jns
arpl
bound
dec
rcrb
adc
push
repnz
dec
sub
cmc
jbe
xlat
leave
inc
hlt
in
mov
sar
add
es
hlt
cwtl
mov
jae
or
call
mov
scas
jb
dec
cmp
popa
cmpsb
jb
cs
dec
and
dec
mov
jae
xor
push
push
xchg
loopne
stc
xchg
push
add
rol
add
xchg
ret
push
xchg
int3
cs
sub
push
pusha
pushf
pop
lds
bound
dec
fucom
add
fldenv
int3
rcrl
cmpsl
jo
hlt
mov
stos
cmpsb
add
mov
pop
inc
sbb
xchg
mov
sub
pop
mov
outsb
mov
dec
hlt
dec
and
push
cli
outsb
push
add
aaa
shrb
xor
sbb
mov
pop
rcr
stos
sbb
out
add
push
out
jno
push
stc
aaa
js
pop
cli
inc
lret
test
call
mov
jae
movl
cmp
pop
pop
mov
mov
cmp
ror
scas
js
fwait
inc
push
xchg
ret
testl
call
leave
std
call
enter
enter
or
adc
mov
push
iret
xor
dec
dec
imul
cmp
push
push
cmpsl
gs
in
mov
push
fmulp
bound
inc
dec
inc
subl
jle
cmp
repz
aad
imul
sarb
ret
fldl
sbb
push
movsl
fcmovne
into
std
mov
scas
imul
daa
sub
pop
mov
mov
fldenv
cli
sub
jecxz
and
rclb
dec
aaa
fimull
hlt
xchg
aad
pop
ljmp
call
jecxz
mov
addr16
inc
and
sbb
stc
stos
aad
cmp
xchg
addr16
dec
cmp
mov
cmc
icebp
sub
andl
ss
push
pop
mov
add
inc
repnz
cmp
xlat
add
lods
and
movsl
insb
pop
mov
popa
ret
mov
std
xchg
sbb
sub
sbb
je
push
nop
mov
adc
in
adc
and
scas
cs
push
push
inc
and
push
mov
cli
lock
cmp
and
pop
sti
roll
scas
pop
subl
in
in
cmp
out
adc
xor
xlat
scas
outsl
and
mov
cmp
sub
push
xchg
pop
leave
adc
lret
cmp
test
dec
inc
sub
in
and
arpl
adc
dec
cmp
jns
push
mov
push
mov
nop
std
in
push
jns
pop
jp
push
jb
clc
lods
xchg
dec
mov
and
hlt
cld
mov
leave
mov
xor
aas
inc
popa
sbb
ds
mov
fs
icebp
adc
sarl
xor
aad
add
daa
rcl
xlat
les
cmp
inc
aas
push
jb
loopne
cli
inc
rclb
dec
jg
aam
fdivl
lcall
lahf
mov
dec
rolb
mov
cmpsl
icebp
rcrl
adc
mov
jne
pop
sbb
push
std
sbb
clc
xor
mov
out
mov
jmp
pop
xchg
hlt
mov
or
imul
pushf
out
ds
lcall
adc
cmp
inc
xchg
lea
mov
jnp
pop
jl
adc
push
push
ss
pop
fcompl
pop
loop
pop
testl
xchg
sbb
stos
cltd
push
cmp
bound
or
sbb
jae
lods
xor
sbb
ss
ljmp
xchg
mov
mov
outsb
jo
out
inc
mov
dec
sbb
dec
loope
shlb
out
int
xor
jb
ljmp
shrl
out
dec
imul
add
pop
fwait
cmp
in
mov
or
or
in
out
int3
adc
lret
jle
shrl
aam
pop
mov
mov
arpl
jecxz
xor
jae
pop
pushf
jo
in
je
inc
cmpsl
test
xor
outsl
daa
pop
popf
jae
jle
inc
cmp
xorb
lret
flds
gs
xor
pop
decb
call
in
out
aad
mov
push
or
dec
dec
fs
shl
pop
je
dec
imul
mov
loop
cmp
lret
cs
sbb
or
imul
test
daa
xchg
arpl
mov
cwtl
orl
jne
aam
aam
xchg
xor
pusha
sub
sarb
out
xchg
scas
or
stos
lret
into
shl
or
lds
push
dec
nop
xor
aas
fsts
insb
cli
xchg
nop
negb
mov
fwait
inc
sbb
and
aad
sub
cld
inc
in
bound
imul
jl
mov
adc
es
mov
notl
loope
jae
sti
imul
icebp
adc
push
add
hlt
dec
in
dec
jns
scas
push
negb
cmp
sbb
push
popf
popf
repnz
xchg
arpl
jae
cld
filds
inc
in
cwtl
icebp
cltd
adc
movsl
in
mov
xchg
in
jg
int3
mov
int
ds
test
shlb
ret
xchg
fs
and
mov
aaa
outsb
pop
xor
xor
push
aaa
mov
mov
xor
call
inc
clc
popf
jge
aas
orl
push
mov
lods
icebp
xchg
and
inc
push
sbb
mov
jg
ret
ret
das
xor
cmp
shll
xchg
sbb
jnp
shlb
mov
rcrl
js
lea
and
or
or
push
lea
in
inc
out
lds
pop
dec
cmpsl
ss
sub
cli
les
mov
add
das
sub
scas
cmp
pop
cmpsb
mov
sub
add
and
mov
mov
inc
add
shlb
aad
dec
mov
aas
lods
movsb
inc
xor
rcl
jo
in
or
dec
fisttpll
cs
cmp
or
xchg
xor
scas
add
sbb
dec
adc
ljmp
sbb
dec
mov
fistpll
shr
xor
imul
int3
or
into
inc
cli
dec
popf
clc
clc
sub
iret
out
sub
or
test
aas
ljmp
jp
jg
icebp
addr16
mov
xor
add
fnstenv
dec
mov
mov
das
mov
js
xchg
sar
ss
outsl
pop
mov
mov
push
outsb
xchg
and
mov
xorl
pop
inc
shrl
xchg
ss
mov
loope
mov
call
xchg
lds
push
and
bnd
lret
sbb
dec
cli
enter
push
add
mov
and
pushf
mov
in
sub
jmp
sarb
pop
or
sub
mov
ss
jns
mov
dec
imul
in
in
sub
movsb
and
pop
dec
xorb
int3
mov
xchg
jge
xchg
icebp
repnz
insb
and
iret
ds
mov
imul
daa
and
jne
into
jp
insb
jb
mov
test
scas
push
or
sub
test
es
push
adc
arpl
pop
fldl
xchg
inc
out
gs
pushf
jl
xchg
mov
xchg
mov
dec
mov
fs
dec
es
jbe
xchg
xor
fs
add
dec
shrl
jns
cmp
jmp
test
pushf
cmc
icebp
inc
cmpsb
lock
lahf
ret
cmp
into
sbb
sub
daa
out
jl
or
and
insl
xchg
push
and
jne
dec
in
cwtl
mov
or
inc
mov
sub
popf
pushf
es
xchg
loope
loop
scas
lods
nop
xchg
push
adc
mov
imul
pop
cltd
outsb
hlt
iret
sub
xchg
cmp
fstpl
out
invd
xchg
stc
xchg
loopne
pop
add
jb
sub
out
divl
mov
lret
pop
adc
push
pop
or
mov
adc
js
cmp
fsubl
imul
and
fstpt
push
notl
daa
scas
lret
xchg
popf
fcmovu
out
dec
scas
mov
mov
sbb
mov
fisttps
cmp
dec
fs
xorl
sbb
xchg
adc
test
cmp
lds
sbb
inc
shlb
fs
adc
lds
js
xchg
push
addr16
ds
xchg
mov
into
pop
adcl
iret
gs
xorl
xor
dec
shl
adcb
scas
stc
inc
mul
cmp
mov
test
xor
scas
and
aam
dec
es
sub
jl
dec
dec
add
inc
mov
dec
loope
ret
das
loop
inc
popf
or
or
stos
sbb
add
adc
mov
adc
ds
add
ds
xor
push
js
repz
mov
fwait
push
fstpl
sbb
jnp
mov
cwtl
mov
fcmovnu
into
jne
jecxz
jb
lock
xor
cli
fidivl
cmp
cltd
fists
add
pusha
jle
inc
repz
mov
push
imul
sub
dec
addl
mull
xor
xor
mov
loope
lcall
xchg
jns
testb
inc
inc
and
into
movsb
popf
cli
imul
aam
xchg
lahf
ret
lcall
clc
or
popa
mov
dec
or
outsl
sub
push
pop
bound
int
xchg
push
popf
xor
cli
or
xor
pop
sbb
cmova
in
mov
and
inc
xor
rcll
and
push
sbb
aam
xor
jmp
arpl
in
repnz
popa
push
fs
addr16
ret
cli
out
pop
aaa
faddl
jno
and
jmp
shrb
imul
mov
sti
fistpll
inc
repnz
dec
inc
sbb
cs
jb
in
sbb
movsb
xchg
sahf
iret
xchg
push
cwtl
xlat
fdivrl
fs
inc
mov
or
add
imul
sbb
es
roll
adc
out
jbe
ss
fisttpll
push
cmp
loopne
jbe
xchg
out
and
jno
dec
push
push
and
push
push
idivb
and
call
xlat
mov
dec
cmp
lods
mov
dec
or
int3
push
jl
aaa
ljmp
imul
xchg
lods
shlb
inc
push
jp
dec
pop
mov
or
ljmp
xlat
fsubrs
and
sub
out
pop
faddp
mov
repnz
mov
lcall
pop
jb
int3
daa
inc
fsubrl
outsl
cmpsl
movsb
lahf
les
cld
js
mov
adc
mov
aam
dec
pop
test
inc
mov
and
push
pop
lcall
mov
cli
pop
cmp
cwtl
dec
push
pop
repz
xchg
imul
pop
int3
push
push
xor
mov
push
rclb
xchg
sub
int3
mov
insl
loopne
iret
cmc
xchg
xor
dec
jns
lret
clc
lcall
push
adc
imul
push
stos
lcall
mov
dec
jge
jg
int
adc
pop
daa
test
inc
or
adc
push
pop
push
mov
or
das
sbb
incb
sbb
ljmp
popf
aaa
rcll
fdivr
test
mov
imul
push
and
fists
dec
mov
popf
pop
lcall
dec
add
push
xor
mov
lock
repz
cli
xchg
out
in
in
pop
adc
sub
iret
sti
jno
out
mov
mov
negl
and
pushf
andl
int
icebp
fldcw
in
loope
les
xor
inc
cmp
push
test
movsl
add
test
movsl
pop
jge
insb
xchg
fildl
dec
movsb
dec
ret
pop
dec
movsl
push
xor
push
cmp
jg
jae
or
insl
scas
maskmovq
jge
mov
test
mov
mov
xchg
test
jle
fnstsw
in
sbb
xchg
out
decb
adc
arpl
stos
out
cmp
pop
inc
aaa
jge
jb
pop
inc
and
xchg
sbb
fildl
cld
xor
xchg
sub
fmuls
data16
and
jp
mov
popa
scas
dec
add
and
ljmp
sarb
mov
das
stos
jge
rorl
cmc
inc
add
dec
movsl
in
adc
pop
xchg
sbb
xor
insb
icebp
xchg
insb
sub
sahf
ret
idivl
or
adc
sbb
test
xor
pop
sub
lods
xlat
dec
cli
aas
unpckhps
ds
push
test
mov
push
sub
sahf
in
pop
loopne
cmp
pop
jecxz
sub
push
mov
lds
xor
pop
add
or
out
jle
mov
insl
imul
pop
pop
mov
fs
xchg
fidivrs
int3
fidivrs
mov
push
and
pop
push
cltd
mov
jle
rorl
loopne
sub
adc
mov
shll
ja
icebp
pop
sbb
adc
mov
push
cltd
mov
xor
scas
adc
mov
sbb
aas
adc
xchg
pop
dec
test
lods
int3
movsl
add
out
out
and
rclb
dec
xor
cmpsl
clc
xchg
lahf
in
int3
pop
cltd
out
mov
jmp
stos
adc
adc
fsubr
push
push
and
xor
cmp
jno
repnz
inc
sub
imul
ret
scas
and
pop
lods
ficompl
test
inc
adc
adcb
inc
add
push
lret
inc
inc
xor
cmp
icebp
inc
jecxz
sbb
enter
mov
and
add
jnp
or
push
jmp
mov
mov
push
and
push
sub
mov
out
data16
jns
imulb
and
dec
in
pop
push
iret
loop
cmpsb
sub
xchg
loope
insl
shll
sbb
jnp
jae
test
out
lret
cmpsb
lea
bnd
shl
fiaddl
jp
rclb
sub
mov
or
dec
xor
and
test
loopne
push
dec
xchg
mov
xor
lds
notl
adc
adc
jne
dec
pop
outsl
in
sub
jmp
jne
xchg
movsl
inc
icebp
stos
int
in
call
or
adc
imul
jne
mov
push
lods
repz
inc
outsb
cmp
adc
add
add
js
int3
cmp
iret
cmp
aas
icebp
call
mov
movsl
ss
mov
arpl
push
sbb
xor
sahf
fldcw
pop
repnz
xor
dec
mov
mov
jns
fwait
mov
push
mov
cwtl
mov
jmp
and
lea
lret
push
pop
das
sub
jbe
jno
sub
test
mov
jno
pop
fbld
push
movsb
cmpsl
aad
rcrb
xchg
xor
or
lods
cmp
cmp
repz
push
packsswb
cmp
xor
and
stos
adc
pop
sbb
and
std
shr
sub
lds
dec
xchg
xchg
mov
ja
mov
aas
xchg
xchg
adc
movsl
xor
xor
outsb
cld
and
mov
sub
in
xchg
out
sub
stc
fiaddl
mov
mov
jg
loope
rcll
xor
sbb
mov
loop
fisubrl
add
movsb
imul
shll
insb
je
xor
out
dec
inc
and
outsl
outsl
movsl
jnp
add
iret
faddl
mov
inc
lret
xchg
rorl
pop
adc
arpl
mov
ds
out
and
fildll
aaa
out
mov
mov
ror
inc
stc
fisubs
inc
pop
xor
dec
mov
xorl
addr16
or
stos
jns
ja
xchg
inc
js
out
jns
sbb
popa
xor
iret
out
and
std
mov
gs
fwait
iret
cltd
clc
loop
mov
jmp
test
jecxz
jp
scas
inc
adc
push
fldt
mov
adc
out
inc
vhaddps
lods
popa
mov
add
out
mov
nop
jge
mov
scas
sbb
pop
xchg
sub
xor
out
iret
popa
jo
adc
cmc
dec
outsb
mov
and
testl
adc
xor
xchg
cmp
inc
cmp
inc
movsb
sbb
pop
and
or
fstp
je
and
pop
into
dec
or
adc
decb
jb
cld
outsb
or
or
mov
jae
jp
aam
mov
push
pop
adc
dec
mov
sub
mov
loope
cmpsb
test
pop
addr16
pushf
movb
scas
or
dec
sub
or
xchg
push
jo
enter
xchg
mov
xlat
inc
in
and
jns
repz
call
xor
xor
leave
loopne
or
lods
mov
in
fwait
scas
xor
cld
int3
push
lods
outsb
imul
dec
notl
stos
mov
cmp
mov
or
or
or
cs
xor
fstps
loope
jo
in
dec
inc
fnstenv
dec
xor
sarl
popa
or
daa
sbb
push
xor
lods
sub
fdivrl
iret
push
xchg
mov
mov
ss
out
aas
in
js
outsl
gs
lret
push
js
jle
mov
push
rcll
pop
bound
adc
pop
inc
push
rolb
dec
add
cmp
mov
xlat
outsb
fwait
adc
xor
sti
notl
pop
mov
and
sub
shlb
cmpsl
into
cmp
adc
std
push
jne
nop
sbb
mov
cwtl
in
add
js
popf
xchg
pop
xchg
andb
loop
fidivl
test
and
test
rolb
adc
movsl
dec
jecxz
insl
flds
repnz
jns
mov
cltd
xor
movsb
sbb
je
mov
adc
mov
inc
or
mov
sahf
iret
mov
and
out
mov
clc
pop
fisttps
jp
outsb
jg
sbb
mov
push
fwait
jge
pop
jns
into
in
push
inc
pop
dec
insl
ds
inc
shll
add
int3
fldl
add
ss
outsb
mov
sbb
imul
stos
adc
xchg
addb
dec
movl
xor
repnz
xchg
enter
into
push
lods
cmp
pop
jns
sbb
dec
sbb
in
dec
mov
mov
in
cmp
cmc
sti
fwait
out
in
js
xchg
in
dec
mov
ret
add
pop
push
clc
sub
testb
mov
pop
xchg
mov
mov
mov
mov
mov
xchg
cmpsl
mov
cwtl
sbb
icebp
rcr
xchg
cmp
mov
lds
sbb
ja
ja
push
outsb
imul
loop
mov
ss
inc
fstl
aad
out
lahf
enter
scas
adc
dec
mov
fstpl
int3
mov
xchg
and
dec
filds
mov
clc
lahf
pop
mov
repz
dec
clc
sub
movsl
sbb
sbb
popa
mov
fucompp
lea
pop
pop
push
bnd
mov
mov
shlb
mov
iret
test
shl
and
aad
fdivl
aad
mov
in
sahf
inc
jp
adc
add
cmp
xchg
jge
adc
sarl
popa
es
lahf
add
pop
adc
in
fisttps
cmp
push
push
int3
in
cwtl
cld
cmp
lcall
jp
rcrb
xor
push
mov
add
lock
xor
dec
cmpb
and
push
mov
mov
jb
iret
mov
movsl
rcrb
lea
fs
rorl
pop
jo
not
push
les
ret
lcall
jns
xchg
add
aam
mov
mov
sub
inc
pop
shll
cmp
push
and
enter
sub
mov
andb
dec
or
cmp
jecxz
cmpl
nop
or
push
fsubrl
inc
add
fistps
pop
mov
inc
or
xchg
lahf
call
adc
insl
lret
adc
loop
mov
sbb
or
pop
js
icebp
pop
shll
imul
fnstsw
xor
inc
cmc
outsb
jmp
cpuid
pslld
out
cmp
sub
add
adc
int
pop
das
or
cld
je
movl
xlat
lcall
test
pop
imul
ljmp
or
cwtl
lds
movsl
xor
sub
out
out
dec
mov
or
inc
les
mov
adc
cld
hlt
outsl
and
sarl
sbb
lret
loop
and
les
roll
movsl
sub
test
pop
sbb
push
cmp
mov
adc
stc
stos
pop
push
lahf
imul
sbb
lahf
subb
test
jg
shll
nop
cmc
lcall
gs
popa
add
cli
cmp
sbb
fdivs
sbb
sub
xchg
lret
cmpsb
mov
adc
xchg
sub
adc
mov
push
dec
dec
bnd
or
leave
inc
inc
adc
xorl
int3
cmpsb
cltd
pushf
or
dec
xor
mov
add
ss
sub
incb
or
mov
cmp
repnz
je
rolb
mov
add
dec
loopne
inc
arpl
mov
fsubs
std
mov
lret
outsl
inc
mov
mov
bound
cmp
dec
inc
arpl
lds
loope
or
cs
xchg
fdiv
inc
mov
loope
data16
das
xchg
mov
pop
or
push
mov
dec
out
cltd
push
inc
lds
sub
jo
lods
sbb
stos
std
std
dec
pop
jb
testb
adc
insl
or
inc
addr16
imul
pushf
sbb
jae
shrb
cltd
mov
push
mov
repnz
mov
jns
sub
cmp
push
cmpsl
cmp
adc
icebp
cmp
jo
fldenv
loope
aam
push
js
into
test
push
pop
stos
cmp
data16
cmc
leave
test
fs
pop
pop
dec
in
jmp
pop
mov
out
mov
mov
sub
enter
sbb
outsl
xchg
and
mov
loopne
mov
or
jl
fbstp
out
adc
pop
cmpxchg
outsl
mov
aad
repnz
js
push
pop
xchg
out
mov
dec
nop
mov
aad
sub
iret
and
insl
lock
jb
nop
add
jb
pop
addr16
jbe
cmp
xchg
sbb
sbb
aaa
push
pop
and
in
jp
fucomi
dec
mov
repz
stc
mov
std
dec
adc
das
dec
rorl
adc
les
dec
xchg
and
pop
daa
icebp
daa
pop
cwtl
push
sti
sub
add
imul
pushf
add
sti
lock
in
xchg
jg
sub
sub
sbb
rolb
stos
imul
cmpsb
shlb
push
mov
pop
imul
inc
pop
andl
inc
imul
jae
daa
dec
sbb
push
and
les
idivb
sti
pop
in
fsubr
jg
push
loope
into
int3
fdivrl
and
mov
dec
jecxz
jle
loopne
lds
mov
cwtl
adc
lea
js
insl
sub
shlb
int
mov
rcrl
sub
or
aas
cmp
jle
fisubrl
sbb
in
push
sahf
push
roll
sub
push
idivb
dec
pushf
orl
mov
adcl
lods
aas
sarb
add
cmpl
stc
adc
xor
stos
push
jb
ds
arpl
mov
mov
orb
mov
add
push
fbstp
xor
fiaddl
push
jbe
ret
xor
cmp
adc
rorl
aaa
loope
adc
mov
push
add
in
and
sbb
xchg
push
pop
sub
mov
ss
mov
and
loope
mov
aas
inc
es
js
scas
dec
and
gs
aad
sub
cmp
addr16
sarl
lret
pop
cltd
out
xchg
push
sbb
adc
popa
pop
scas
and
and
daa
loopne
jge
jne
sahf
ret
das
xor
push
push
sub
sti
jg
jge
subl
mov
lret
pop
push
repz
cltd
repnz
sbb
jge
adc
mov
push
mov
ss
push
pop
daa
leave
push
lahf
mov
test
jmp
cmp
xor
lret
or
lock
pop
notb
sbb
addl
mov
popf
xchg
jl
adc
and
fildll
sbb
mov
xlat
push
out
jnp
push
inc
ss
lret
push
push
lds
stos
arpl
aad
aaa
mov
sub
scas
or
sub
out
and
push
and
sar
xor
jne
mov
lods
outsl
xor
test
xchg
mov
ret
sub
or
mov
mov
xorl
outsb
mov
popa
push
stos
arpl
add
loopne
pop
or
xor
mov
mov
stos
movsb
pusha
aas
mov
and
lods
hlt
adc
aad
test
inc
dec
xor
xchg
pop
xor
sbb
cli
fbstp
insl
mov
mov
pop
fs
lds
xor
mov
cmpsl
mov
lret
adc
or
rorb
mov
jecxz
jmp
pop
pop
loop
add
stos
push
outsb
iret
adc
cld
and
mov
inc
cmpsl
ret
fsubs
mov
xchg
add
push
jg
pop
mov
stos
dec
jecxz
jae
xor
insl
hlt
movsl
fs
lods
xchg
jl
push
cmp
test
rol
bound
or
insb
mov
data16
mov
imulb
adc
into
add
add
stos
mov
add
push
int
mov
sub
bound
xchg
das
add
dec
ret
addl
shl
xchg
lcall
int3
out
in
push
pop
pop
or
das
add
out
loopne
mov
adc
mov
cmp
or
nop
inc
aad
xchg
adc
mov
test
jno
mov
inc
shrb
cmpsl
jb
mov
xor
dec
imul
inc
js
adc
pusha
push
adc
test
lds
pop
mov
xor
fsts
es
loope
sbb
mov
sarl
jbe
xor
add
stos
inc
xchg
adc
pop
shl
sub
or
test
inc
mov
pop
ljmp
sub
imul
out
cmpsl
add
xchg
xor
xor
mov
mov
stos
mov
aad
aad
movsb
in
fdivrl
insb
lcall
pop
jns
jb
int3
fdivs
shlb
xlat
or
cmp
cmp
sti
push
scas
cld
jmp
cmp
mov
int
mov
sub
dec
sbb
addr16
xchg
jbe
jo
dec
js
ja
push
jne
repz
cmpsb
fwait
sub
out
stc
inc
add
sti
add
inc
shll
loopne
cmp
and
cmp
dec
pop
or
and
push
lods
shrl
and
dec
dec
mov
push
hlt
mov
movb
insb
cwtl
or
adc
xchg
add
sbb
pusha
js
stos
push
xchg
push
and
jge
std
push
fwait
js
sti
or
je
sti
push
inc
setle
fwait
xchg
sub
jl
shrb
sub
push
cmp
mov
iret
xor
stc
push
imul
add
shl
mov
mov
push
outsl
sarl
repz
mov
push
fists
xor
jo
mov
ljmp
mov
cmp
pusha
aad
orl
adc
js
lcall
cli
cmp
les
push
dec
cmpb
sub
jle
cld
popa
arpl
jne
movsb
popa
sub
inc
inc
aaa
je
or
js
cwtl
lahf
dec
xor
popf
aaa
lods
mov
mov
jae
imul
sub
ret
fsts
std
pop
outsb
std
ficompl
ja
inc
divb
repnz
aad
cmpsb
inc
daa
push
inc
push
xchg
jae
mov
test
jp
sti
cmp
xchg
mov
insl
nop
les
xor
push
cmc
push
jo
in
stos
adc
cmpsl
cmp
fimuls
jge
jno
fsubrs
pop
mov
cmpsb
push
loope
mov
push
in
mov
xchg
or
js
daa
sar
mov
sahf
movsl
and
imul
xor
mov
cs
std
and
and
jae
mov
cmp
add
sahf
or
shll
andl
push
pop
push
outsb
dec
jne
and
push
mov
test
ljmp
es
cmpsb
xchg
adc
mov
bound
scas
push
fwait
xlat
in
and
hlt
jbe
cmpsb
ret
std
and
cmpsb
mov
pop
pop
data16
insl
xor
xor
mov
cmp
fadd
cli
ds
or
sbbb
cmp
stos
xchg
xchg
pop
cmpsl
ret
loopne
cwtl
and
xchg
test
xchg
test
aad
test
call
adc
fcompl
push
mov
mov
in
test
sub
sub
lret
and
inc
cmpsb
add
adc
pop
scas
in
stc
xchg
gs
adc
cltd
mov
pop
jne
lahf
test
sbb
ret
mov
shlb
mov
push
in
repz
stc
shll
lcall
aaa
adc
mov
sub
jae
push
dec
es
mov
sub
push
jecxz
dec
mov
sub
daa
movsbl
push
push
mov
xor
add
xor
xor
jo
fdivrs
push
sbb
cli
dec
jmp
mov
and
jmp
bound
mov
sbb
orb
in
jo
add
sub
mov
divl
dec
faddl
jg
jno
aaa
sub
sbb
jb
sbb
ja
push
jo
andl
cwtl
decl
xor
pushl
out
mov
pop
in
jl
pusha
clc
jg
jle
vmovdqa
in
loop
dec
dec
orl
jl
jmp
add
sarb
cmpsb
icebp
xor
lds
ret
mov
pop
cmp
pop
add
xchg
fucomp
jge
jle
cld
jne
shlb
jecxz
test
xor
int
mov
subb
push
pop
sub
arpl
inc
loop
mov
jb
inc
add
hlt
js
enter
push
jo
inc
mov
lock
pop
add
mov
jne
mov
jne
xchg
sahf
xchg
pop
sub
daa
addr16
mov
iret
bound
inc
fs
rcrl
sub
push
iret
dec
ret
or
dec
rol
push
adc
pop
fildll
cmp
xchg
sbb
int3
jnp
pop
aaa
clc
loope
leave
jp
aam
xchg
rclb
hlt
aad
and
jp
cmpsb
pop
jo
rclb
push
or
imul
mov
xor
sahf
add
fsubs
sbb
jp
xchg
adc
rolb
cmc
xor
leave
out
sti
shr
add
xor
out
xchg
adc
mov
pop
call
hlt
sub
cmc
or
add
dec
dec
or
lahf
cltd
cmp
push
lock
jae
add
out
mov
push
pop
orl
pop
dec
aaa
jbe
mov
cli
aaa
aam
or
data16
imul
xor
and
pop
aam
mov
fst
push
loope
sbb
jbe
mov
sub
inc
jle
inc
lods
movsb
ss
push
aaa
imul
call
out
jno
xchg
jne
data16
mov
jne
pop
jecxz
das
rorb
jns
jb
dec
repnz
sbb
outsl
lret
xchg
or
mov
sub
push
stos
jge
sbb
and
scas
lahf
paddsw
push
push
js
xchg
repz
js
ret
fldl
dec
adc
repnz
push
jbe
testl
cmp
out
cltd
shl
fsubrl
pop
xlat
pop
pop
aad
push
into
jmp
and
cli
mov
push
pop
inc
insl
data16
dec
shlb
lock
sub
jp
jmp
fisttpl
jne
jmp
mov
aaa
mov
pop
std
out
repz
sbb
fwait
rolb
rorl
xor
cmpsb
hlt
jecxz
or
lcall
test
ret
lock
jecxz
mov
add
cmp
inc
adc
shl
jo
jne
cmp
orl
sub
sub
lods
insl
into
xchg
mov
dec
jns
loopne
cmp
pop
icebp
jno
and
jmp
jecxz
cmp
and
lret
push
test
in
fstp
out
cld
and
clc
mov
out
mov
push
sarb
push
into
or
mov
aaa
je
test
arpl
sahf
les
adc
xor
shl
cmp
js
loop
dec
scas
les
test
jo
ret
pop
push
lods
pop
repnz
cltd
shll
dec
aas
xchg
pusha
mov
mov
and
mov
inc
mov
jbe
mov
les
sub
or
insb
mov
dec
orl
push
int
mov
outsb
push
mov
push
loope
pop
fcom
mov
addl
and
int
xchg
fldcw
scas
repz
cs
lods
dec
js
fmuls
jg
xor
inc
lahf
jb
mov
push
pop
xchg
dec
std
xor
nop
mov
fwait
add
jmp
sbb
adc
pop
movsb
test
int
mov
js
out
inc
aas
xlat
push
inc
aas
in
sub
imul
aam
aam
sub
inc
xchg
push
aam
push
mov
mov
loope
cmp
ds
out
add
mov
insb
inc
lret
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
cmp
dec
jns
outsl
mov
sub
mov
adc
lods
lret
pop
in
xor
jns
jge
pop
xor
fs
daa
in
scas
or
push
jo
into
or
sbb
in
sub
imul
sbb
punpcklwd
cmpl
inc
push
fnstcw
and
or
fdivrp
int
repnz
or
outsl
jo
xor
and
fldenv
mov
lret
gs
lock
fdivrs
pop
mov
js
out
mov
mov
inc
sub
or
xor
mov
outsl
mov
xchg
xchg
or
pop
loop
in
scas
mov
xchg
loop
adc
dec
lods
jnp
mov
jb
insl
enter
mov
std
fnstenv
lods
cmp
pushf
mov
loop
scas
jno
jmp
push
aaa
mov
cmp
shrb
lods
jno
or
insb
pop
inc
add
sub
insb
fs
push
lock
dec
fnstcw
push
movsl
fisubrs
sti
outsl
mov
xorl
cmp
stc
aad
outsb
inc
pop
pusha
in
push
cmp
loopne
out
adc
movsb
jge
aad
popf
mov
out
rclb
mov
mov
mov
mov
sub
inc
inc
mov
fidivl
mov
adc
xor
mov
lock
xlat
jno
inc
dec
mov
mov
popa
test
mov
adc
mov
add
inc
out
mov
adcl
stos
jbe
pop
into
mov
movsb
inc
mov
hlt
mov
adc
rcrl
xchg
dec
sub
bound
and
movsb
fidivrl
loopne
ss
dec
sti
mov
clc
cmc
dec
xchg
ljmp
push
fiaddl
ja
loope
pop
in
in
in
inc
xor
cmp
out
and
loope
cmp
mov
mov
fimuls
or
mov
pop
movsb
mov
inc
mov
rcll
test
lods
xchg
test
mov
mov
mov
pop
test
testb
xor
mov
pop
mull
popa
and
sbb
pop
bound
mov
fisttpl
fcoms
sbb
fwait
les
imul
fcomps
aaa
sbb
ljmp
mov
idivb
in
pop
fadd
loopne
aam
movsb
rorb
ffreep
insb
inc
movsb
mov
inc
adc
insb
les
imul
jo
xchg
jbe
mul
es
fidivrl
and
dec
jg
add
mul
adc
call
or
shrb
or
jo
push
inc
mov
push
fwait
gs
jge
rcrb
outsl
addr16
and
mov
mov
inc
add
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
test
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
