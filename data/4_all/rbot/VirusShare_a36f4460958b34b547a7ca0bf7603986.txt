sahf
dec
nop
cmp
mov
mov
fcoms
inc
ds
loopne
or
testb
clc
and
data16
fbld
add
push
add
cmp
sub
and
and
shl
aam
xor
mov
inc
jl
inc
mov
adc
cs
jmp
mov
and
xor
pop
hlt
int3
xchg
mov
outsw
push
fisubl
adc
xchg
add
xchg
les
fmul
repz
into
imul
test
or
mov
adc
std
sahf
pop
repnz
adc
and
push
and
rcrw
orl
cmp
mov
les
lods
mov
enter
lock
mov
cmp
push
xchg
std
ljmp
pop
cmp
sub
scas
sub
push
hlt
int3
pop
icebp
into
aaa
inc
lahf
ja
enter
roll
cmp
mov
cld
push
cli
dec
sub
popa
es
push
jmp
loope
shrb
dec
jecxz
inc
fstpt
xchg
pop
jp
into
addl
pop
inc
pop
shlw
fnstcw
and
andl
imul
mov
xchg
in
in
das
int3
sub
pusha
repz
mov
sti
sbb
pop
and
in
jle
fs
xchg
daa
xchg
and
imulb
in
dec
dec
out
add
or
xchg
mov
pop
and
les
nop
xchg
mov
push
fcomps
jae
data16
adc
in
add
ret
inc
shll
jb
adc
dec
dec
test
ficoms
movsl
faddp
jnp
dec
sub
lcall
addb
insb
mov
jo
outsl
ljmp
xchg
cmp
ds
push
add
adc
aad
sahf
loope
add
push
imul
shll
inc
lods
stos
sub
pop
mov
clc
in
push
sbb
jl
xchg
mov
jp
xchg
jmp
mov
pop
into
sbb
jnp
jle
sarl
shlb
dec
arpl
adc
pop
pop
enter
mov
addr16
roll
fnstenv
inc
or
and
les
adc
mov
fnsave
and
push
lret
pop
sbb
pop
outsb
or
xchg
cltd
shrb
into
jbe
dec
sbb
andl
aam
call
pop
inc
push
loop
dec
dec
mov
jp
jno
aaa
lahf
enter
sub
mov
push
mov
ret
add
popf
rorl
aaa
push
je
push
cmc
xchg
lds
push
or
sub
popa
mov
mov
pop
xor
das
ds
dec
cmp
ret
jns
and
sbb
adc
jecxz
jb
pop
xchg
adc
dec
cmpsb
fists
dec
decl
mov
aas
jle
dec
inc
sub
lret
dec
xchg
push
roll
into
je
loopnew
inc
arpl
add
mov
mov
in
adcb
pop
out
dec
addr16
popf
cmp
sub
cs
subb
push
sbb
jp
inc
xor
es
out
fs
bound
mov
jecxz
insl
add
add
and
popf
dec
lods
movsb
xor
pushf
shlb
leave
int
push
mov
call
mov
sub
daa
mov
xlat
dec
xchg
lods
je
cmpsb
lock
pop
xor
jmp
aaa
jle
popa
and
cmp
or
push
aam
or
idiv
add
or
outsl
int
aaa
xor
subb
adc
mov
int
sub
or
add
insb
fld
mul
aam
cmp
add
mov
pushf
jp
in
jp
pop
mov
in
scas
mov
into
cmp
scas
lret
int3
cmpl
xchg
mov
pop
repnz
xchg
push
or
xchg
add
cmpsl
push
dec
cmp
test
mov
lea
stos
in
mov
ljmp
jg
mov
in
ds
push
imul
mov
inc
ret
cs
adc
mov
ss
push
movsb
xor
jns
rcl
jo
bound
cmp
mov
daa
in
mov
scas
jns
mov
leave
ficoms
ja
inc
cmpsb
jns
push
lock
xchg
add
lcall
push
daa
bswap
fcoms
cmp
push
notl
fwait
inc
cmp
out
iret
ds
add
std
jmp
inc
testl
adc
stos
or
adc
rol
push
repz
sbb
jae
jo
mov
and
xor
fidivrs
js
jbe
dec
mov
js
pop
inc
dec
xchg
sub
rclb
lods
out
aas
mov
jns
shrl
es
sbb
hlt
xchg
mov
insl
rolb
call
test
sub
mov
xchg
shlb
loope
int3
sbb
push
dec
shrb
cmp
aam
dec
sti
or
add
xchg
xor
jnp
dec
leave
enter
jo
bound
sbb
push
or
popf
mov
pop
jmp
sahf
movl
lahf
inc
add
in
sub
jbe
mov
sbb
hlt
aad
call
stos
fstl
inc
xchg
lret
imul
inc
sub
shl
xor
aas
cmpsb
ret
bound
cmp
mov
mov
jb
xor
push
sbb
notl
lcall
ljmp
xchg
sahf
outsb
push
inc
rclb
sub
xchg
xor
std
jmp
mov
cmpsl
and
out
push
mov
push
push
dec
jg
push
int
cmp
movsb
ret
std
xchg
rol
push
out
std
push
mov
sbb
inc
mov
scas
fs
mov
movsl
ficomps
mov
lds
push
cmp
out
jg
lea
lret
js
mov
add
push
outsl
or
sub
cmp
cmpsl
pop
dec
movl
or
scas
add
shrl
arpl
pusha
xor
add
mov
sub
mov
out
mov
dec
push
arpl
mov
jg
jbe
gs
dec
xchg
sbb
dec
xchg
rclb
lds
push
pop
or
sub
mov
or
or
outsl
inc
int3
mov
fs
rorb
cwtl
and
mov
adc
or
jo
lods
int
jmp
cmp
jp
aad
xchg
sbb
mov
sub
mov
int3
and
stc
xor
lds
dec
xchg
insb
cmpw
lahf
fstpt
fisttpl
push
mov
ja
xor
ret
cmp
xchg
jns
pop
movsl
loope
or
loop
idivl
aad
adc
loopne
fnstcw
jo
cmp
loope
and
int
imul
enter
push
push
movups
cld
fdivl
push
jle
enter
xchg
lea
in
popf
int3
int3
push
js
xchg
das
mov
sbb
sub
nop
ljmp
cli
sub
icebp
jo
out
and
cmpsl
fsub
sbb
shl
inc
pop
movsb
jmp
fiaddl
push
lods
fdivrs
xor
cmpsb
arpl
mov
orb
inc
mov
out
shll
dec
cwtl
leave
xchg
xor
and
push
sahf
add
xchg
movsb
and
inc
lds
mov
js
stos
lods
movsb
sbb
cltd
in
lock
out
ljmp
stos
iret
xchg
mov
mov
push
mov
xchg
ja
push
sbb
sub
jae
scas
movsl
mov
mov
jnp
jnp
mov
cmp
lret
push
add
rorb
andb
xor
push
and
in
xchg
or
cmpsb
xchg
leave
movsb
mov
mov
jp
pop
mov
mov
movsb
mov
scas
or
sbb
lock
jbe
jnp
dec
jl
lcall
mov
movsl
shll
pop
int3
jne
push
ljmp
or
mov
movb
jmp
sarl
xor
jmp
scas
iret
sbb
push
or
pop
shll
pop
aaa
xchg
lods
xchg
lahf
push
leave
xchg
cmpsl
inc
mov
sub
fdivs
push
call
lar
add
popf
ret
mov
cmpb
adc
or
repz
std
mov
xchg
scas
inc
xchg
xchg
aam
sbb
loop
xchg
xchg
negl
loope
and
pop
dec
mov
xchg
sbb
sub
fnstsw
aad
mov
rcll
es
fdivrl
add
test
push
jae
jne
push
es
mov
push
data16
shlb
aaa
in
dec
or
std
sub
std
test
in
dec
in
pushf
pop
push
ret
out
cwtl
and
jl
xchg
mov
adc
mov
nop
dec
cmpsl
scas
push
xor
cld
popa
pop
or
add
cli
bound
lret
mov
cmp
mov
sbb
leave
negb
xor
and
cmp
rclb
les
pusha
shr
lods
outsl
stos
mov
xor
or
mov
int
test
cwtl
das
movsb
adc
sbb
decl
outsb
loop
and
xlat
jle
test
fdivs
es
dec
out
dec
pop
jl
sbb
iret
add
rcll
lret
bound
xor
mov
ret
cmp
fldenv
dec
cwtl
mov
arpl
mov
xlat
orl
jbe
cwtl
and
pop
insb
add
jno
jg
out
shll
inc
scas
dec
lret
cmpsl
mov
inc
xlat
mov
outsl
mov
insb
and
ret
jno
aam
and
or
mov
push
add
ret
aas
negb
in
shr
imull
es
movsl
inc
pshufw
push
lret
sub
mov
leave
jno
sbb
mov
call
mulb
repz
pop
sub
sbb
in
add
notl
cwtl
pushf
jno
or
stos
mov
dec
jl
nop
xor
cmp
stos
or
cmp
mov
adc
adc
sbb
cltd
lret
pop
into
pop
push
cltd
push
fwait
test
pop
xchg
dec
nop
pop
loopne
sti
pop
push
and
jb
movb
mov
dec
sbb
cmp
pop
jnp
inc
mov
pop
pop
and
xchg
divb
pop
jb
cli
cmp
inc
out
decl
pushl
cmpsl
fcmovb
cmp
loopne
jle
or
insb
jbe
cmp
pop
ljmp
jo
hlt
jne
sahf
or
int
in
cli
call
out
adc
loop
mov
xchg
jno
aad
clc
aaa
push
insl
mov
sar
fnstsw
cmp
inc
inc
push
cmp
out
push
cmpsb
xor
add
test
and
fcmovu
pop
popa
mov
mov
sbb
dec
lea
adc
or
jbe
lods
rcrl
push
dec
movsb
jle
lret
aad
int3
push
mov
cmp
in
js
outsb
orl
insb
sbb
stc
fs
pop
mov
inc
mov
push
mov
mov
movsb
lcall
aas
ficompl
mov
pusha
xchg
nop
mov
push
inc
mov
cmp
mov
push
sbb
cmp
repnz
lcall
push
pop
fcomi
cmpb
pop
pop
jno
insl
fnstenv
and
stos
clc
ret
in
mov
cmpsl
mov
cmp
adc
repnz
dec
es
jns
pop
jg
add
fsubrl
push
xchg
jecxz
ret
pop
xchg
mov
mov
pop
icebp
and
jno
xchg
pop
jae
shl
jnp
jo
jp
in
call
xorl
adc
xor
and
pop
xchg
sub
dec
lret
mov
push
shll
test
divb
popa
inc
mov
mov
pop
enter
test
outsb
movsb
and
mov
rol
enter
aas
out
popa
pop
imul
xchg
movb
loopne
into
mov
ljmp
aam
call
jp
dec
push
inc
les
sbbl
pop
or
mov
rorb
pop
les
seto
mov
jbe
xchg
iret
mov
jg
enter
das
jl
dec
into
iret
jge
stos
mov
nop
or
xchg
sbb
roll
lcall
xchg
loop
push
scas
insb
sbbl
in
loope
stos
js
jmp
xlat
mov
insb
fwait
and
cmpsb
lock
lods
cmp
sbb
add
fwait
lods
jp
push
cli
flds
aas
in
pop
leave
ret
and
jne
mov
aad
jb
insl
out
cld
lea
lock
jb
inc
xchg
insl
jge
and
mov
pop
mov
pop
cmpsl
shl
mov
sub
and
xor
lea
es
add
dec
mov
sbb
movsb
stos
sbbl
mov
inc
sbb
out
xchg
std
xchg
aam
into
mov
push
into
push
push
js
gs
xor
lods
addr16
aam
lock
xchg
dec
rcll
pushf
and
sti
push
jp
add
xchg
es
into
into
lods
pop
in
in
cmp
push
sub
out
push
cmp
push
push
enter
adc
repz
bound
cli
cwtl
je
push
inc
or
push
enter
divb
xorb
stos
cli
mov
or
loop
adc
dec
push
sbb
mov
add
mov
scas
jae
mov
pop
ficoml
outsb
dec
lock
ss
cmc
pushf
clc
mov
call
es
dec
push
and
or
cmp
pushaw
std
clc
mov
or
mov
jbe
test
mov
inc
and
sbb
xchg
std
pop
daa
mov
and
sub
repnz
dec
js
imul
or
jne
mov
cmp
ss
mov
push
bound
push
fistpll
fbld
mov
inc
sbb
gs
std
add
mov
stos
push
add
dec
pop
mov
out
ja
xchg
cmp
fs
aas
adc
pop
stc
mov
int3
pop
jg
outsb
addr16
pminub
rorl
push
arpl
es
ret
fs
mov
minps
jmp
inc
sub
inc
pop
jb
mov
jp
jle
imul
fsubp
out
pop
das
inc
inc
pusha
andb
mov
jl
or
cmpsb
ret
in
xchg
cmp
lret
call
dec
leave
jne
mov
mov
outsl
pop
int
andl
jp
out
fists
inc
and
nop
sbb
jmp
pop
insl
mov
cld
jl
jnp
lods
mov
stos
pop
gs
in
jne
adc
xor
ret
push
je
lods
sbb
jbe
mov
out
mov
add
sub
xchg
jns
or
mov
mov
push
xor
lea
arpl
test
out
xor
mov
and
xchg
mov
nop
sub
lcall
rorl
test
cmpsl
jo
mov
lods
ficoms
xor
push
scas
push
jne
xchg
xchg
jl
xor
jo
pop
les
mov
test
fucomp
out
aam
mov
stos
lea
enter
mov
jbe
inc
std
lods
inc
sbb
js
mov
cli
mov
pop
dec
fiaddl
sbb
int
shlb
sub
pop
fnstcw
ljmp
notl
mov
nop
stc
dec
push
lahf
push
cmp
jb
dec
fidivs
adc
sub
xchg
sbb
jle
mov
mov
rcrb
cs
mov
stos
imul
jo
mov
mov
cwtl
sbb
inc
ss
dec
add
cmp
adc
iret
cmp
mov
fistpll
stc
shlb
add
sub
adc
sub
fidivs
imul
leave
cld
xchg
stos
mov
test
jns
out
xlat
call
adc
pop
push
pop
mov
pushf
test
fwait
pushf
jp
jecxz
ret
xchg
gs
ss
xchg
sbb
jne
aam
add
xlat
jecxz
push
insb
add
dec
or
fimull
out
insb
or
mov
and
or
pop
pop
fldenv
stos
pop
in
daa
xchg
mov
xchg
test
jmp
outsb
pusha
cmpsl
sbb
sarb
mov
rorb
fstl
mov
aad
sub
lds
icebp
push
push
jne
lret
fiadds
fnsetpm(287
scas
outsl
fidivrl
xor
adc
lock
fmul
ljmp
addr16
mov
out
xchg
je
xchg
dec
or
dec
add
inc
xor
mov
jae
cmpsb
mov
jne
push
mov
ss
iret
je
add
mov
es
cmp
lods
icebp
mov
scas
call
or
push
std
rol
je
out
sub
mov
data16
cmp
push
test
cmp
pop
and
mov
pusha
sbb
mov
adc
pop
pop
movsl
sub
or
jae
sbb
loop
xor
mov
cwtl
leave
and
sub
mov
ret
dec
cli
jae
clc
sbb
out
mov
test
sub
inc
inc
ds
jne
aam
sub
pop
lods
daa
pop
or
iret
lcall
cli
xchg
aas
mov
adc
insb
out
inc
mov
add
iret
les
out
xchg
enter
lods
stos
add
mov
add
xchg
aad
sbb
cmpsl
or
sti
loope
mov
into
sbb
adc
pusha
ret
pop
pop
and
adc
jbe
cmp
popaw
mov
or
adc
movsl
adc
insb
movsl
mov
bound
pop
mov
inc
or
lret
test
mov
fs
out
sub
iret
cs
jge
mov
adc
mov
aaa
xor
sbb
movsl
lods
xchg
or
jnp
lcall
inc
mov
or
pushf
jb
xchg
inc
mov
inc
xor
popf
ss
jmp
in
in
enterw
pop
mov
in
sbb
adc
xor
mov
xor
jae
pop
cmc
dec
xor
jge
lret
add
jl
or
in
dec
pop
fwait
leave
sub
xchg
fdiv
jmp
mov
cli
fucom
movsb
cmpsl
lret
sbb
rcrl
xchg
aam
sti
pop
cmpsl
pop
movsb
inc
cmp
test
scas
out
pop
rcl
push
mov
bound
outsb
jb
dec
mov
jmp
and
mov
int
and
xchg
inc
fmull
aam
filds
jge
cmc
rcrb
push
leave
out
stos
in
xorb
aad
imul
lock
push
jnp
rcll
sbb
das
mov
adc
fcompl
test
cmpsl
mov
ss
xchg
and
push
cmpsl
out
js
repz
push
push
mov
push
xchg
sar
jle
xchg
inc
fwait
pop
xlat
push
movsb
call
cmpsl
mov
add
push
mov
dec
and
push
adc
insl
add
aaa
sbb
dec
lods
mov
adc
fisubl
adc
nop
jno
adc
stos
push
out
mov
xchg
sbb
or
notl
out
push
inc
lock
sub
fwait
adc
ljmp
push
roll
xchg
mov
out
mov
inc
rol
jl
je
mov
pop
dec
dec
scas
adc
mov
jp
ja
lcall
inc
xchg
into
mov
sar
test
addr16
lods
je
loope
pop
and
repnz
mov
fcomp
arpl
xlat
xor
adcl
push
xchg
frstor
inc
pop
push
push
decb
fdivrs
sahf
mov
test
push
mov
rcrb
cmp
push
jle
aas
out
pop
push
or
loop
xor
sub
pop
jo
jl
and
xchg
sbb
pushf
outsb
xor
popa
notl
cwtl
mov
inc
jb
sbb
push
mov
xchg
dec
test
sub
cmp
cmp
out
adc
and
xchg
roll
push
jmp
cmp
xchg
adc
sbb
imul
gs
pop
mov
mov
inc
mov
or
sti
js
aaa
or
jmp
adc
or
rcrb
stos
or
pop
jmp
add
loopne
ljmp
aad
lock
sub
jmp
mov
xor
mov
xchg
std
add
xadd
xor
mov
out
mov
loope
mov
jbe
cmp
sbb
mov
push
push
fsubrl
imul
xchg
sbb
push
pop
into
fs
and
in
int3
push
nop
fstp
push
lahf
push
cltd
shll
cli
sbb
aam
out
jl
adc
add
lahf
jle
pusha
xchg
out
fwait
mov
ds
stc
ret
mov
cs
pushf
ficompl
stc
adc
push
jns
sbb
dec
aad
mov
add
test
pop
sbb
clc
add
orl
sbb
out
sbb
sub
lahf
les
sbb
xor
xchg
jmp
mov
mov
mov
into
push
cltd
imul
test
jnp
lods
add
rol
int3
lret
pop
shr
mov
in
rcrb
push
mov
pop
adc
sbb
sbb
out
mov
jno
scas
pop
and
cmpl
pop
sbb
sbb
loop
sbb
jecxz
xchg
xchg
jl
mov
jp
adc
imul
lea
jge
fucom
xor
sbb
adc
adc
and
aas
cmp
out
jle
stos
inc
mov
nop
inc
rcrb
dec
push
push
cmpsl
and
cmp
xchg
mov
cli
xor
fsub
cmpsb
scas
test
inc
ret
cmp
and
sub
iret
jle
mov
push
inc
sbb
sub
aam
push
jle
and
mulb
sbb
jle
fdiv
loop
divb
xor
in
xor
mov
es
cmpsb
push
hlt
add
adc
clc
and
scas
fidivrl
jmp
pop
xchg
rclb
cmp
push
push
add
mov
ds
mov
shlb
sbb
or
repz
pop
pop
push
xor
decl
pop
les
je
stos
out
daa
jo
add
subl
ss
and
rorb
pop
or
and
mov
iretw
popa
int3
das
mov
aad
sahf
in
movsl
mov
popf
adc
pop
js
mov
xor
jb
xchg
inc
mov
xchg
xchg
cld
push
add
out
pop
ds
repz
pop
bound
test
mov
xchg
pusha
test
in
in
out
xchg
jmp
mov
or
repz
mov
in
loope
xchg
cmpsl
lret
movsl
loop
aas
shll
cld
addr16
imul
jb
mov
imul
push
pop
jg
in
imul
mov
mov
mov
fwait
push
mov
push
xchg
repnz
repnz
xor
stos
xchg
or
xor
mov
sbb
lret
call
jmp
test
jecxz
fld
xchg
xchg
jg
jo
cli
es
jecxz
dec
or
push
clc
repz
mov
jmp
inc
popa
sbb
roll
sahf
push
nop
outsb
outsl
adc
bswap
data16
int3
cltd
cmp
pop
hlt
xlat
sub
arpl
lahf
and
lods
rorl
lret
daa
aaa
leave
mov
cli
xor
push
lret
sbb
sti
dec
sahf
mov
pop
in
loopne
iret
add
lock
loopne
sub
sub
testb
jmp
dec
mov
mov
imul
xchg
add
mov
dec
shrb
cmpsl
test
adc
mov
dec
push
sub
add
loope
aad
or
add
jl
lret
mov
mov
push
jmp
ret
test
bnd
jns
push
outsb
inc
jp
mov
cs
fnstenv
cmpsl
stos
add
scas
add
pushf
xor
adc
pop
push
lock
or
lahf
ret
jne
ret
in
cld
push
mov
fnsave
dec
jecxz
shlb
cld
int
mov
xchg
repnz
out
lock
xor
lock
in
bound
jo
loopne
push
pop
test
test
jg
and
pop
leave
mulb
repnz
mov
dec
push
leave
movsb
pop
add
outsb
and
lret
dec
jmp
in
add
out
stos
inc
mov
repnz
mov
pop
xor
loopne
pop
pusha
pushf
outsb
or
inc
cmp
dec
mov
pusha
aad
mov
inc
leave
dec
jmp
fs
nop
mov
jb
lods
pop
inc
push
xor
adc
pusha
pinsrw
imul
sub
loopne
loope
push
fadds
lock
jge
push
jle
lret
out
loop
andl
scas
xchg
push
and
cmp
iret
pop
inc
mov
or
lret
stos
mov
jl
dec
cld
push
in
mov
inc
outsb
jle
incl
mov
push
mov
or
ja
loop
cmp
cmp
or
or
inc
movsb
les
add
ljmp
mov
loop
sub
out
mov
dec
movsl
scas
sti
cmc
sub
lcall
jae
outsb
mov
mov
pop
adc
ljmp
dec
cltd
sub
xchg
insl
push
mov
push
cld
dec
pop
stc
and
lcall
popa
ret
pop
es
cltd
dec
cmp
jle
bound
clc
xchg
lods
lds
xchg
cmpl
mov
add
js
in
xor
in
aas
xor
pop
shlb
push
sbb
inc
mov
xor
call
mov
adc
test
dec
pop
xchg
lret
stos
loopne
push
pop
mov
pop
or
xor
in
sub
scas
mov
sbb
cs
push
xchg
xchg
in
sbb
fmull
pop
mov
fdivrs
out
test
into
mov
or
shlb
js
cmp
mov
pushf
stc
cmp
jns
lret
push
pop
mov
sahf
xchg
add
enter
dec
inc
out
rorl
xchg
xor
inc
andb
pusha
dec
je
andl
jno
in
fmull
jnp
insb
mov
les
cmpsb
push
mov
pop
out
roll
cmpsb
pop
mov
fisubrs
inc
jae
xchg
pop
es
add
or
movsb
imul
sbb
pop
inc
outsb
jnp
lds
jp
ficoms
cltd
sbb
arpl
pop
mov
jb
adc
cltd
inc
adc
or
xchg
sbb
xchg
aad
inc
push
or
sbb
pop
out
insb
xchg
daa
mov
inc
push
dec
xchg
scas
xchg
mov
out
xchg
shl
push
insb
dec
sbb
sahf
loop
mov
lcall
xor
test
faddl
arpl
sub
ja
out
clc
hlt
sbb
push
pop
pushf
mov
cmp
jb
inc
cli
sti
sti
aad
xor
outsl
push
das
push
pop
jl
lds
cmp
popa
and
ret
add
jl
xchg
push
shll
cmp
movsl
pop
inc
mov
movb
inc
mov
lret
mov
mov
shll
jnp
mov
testl
dec
sahf
popl
stc
pop
jp
out
pop
cmp
sti
push
rcrb
add
or
fimuls
ret
adc
adc
js
and
and
push
and
int3
push
sub
pushf
ljmp
outsb
pop
loope
pop
and
jp
je
cmpsb
into
push
push
cmp
ret
or
mov
pop
in
loop
or
jmp
enter
or
push
add
jmp
cmp
mov
cmpsb
sbbb
negl
out
push
outsl
sahf
mov
dec
das
mov
mov
sub
scas
lds
stos
mov
add
sbb
sub
daa
xchg
cmp
or
fisubrl
dec
jl
in
pop
inc
rcll
mov
lahf
lcall
aaa
pusha
sub
xchg
ret
ror
push
pop
pop
inc
cwtl
in
cmc
test
or
lock
loope
mov
add
stos
pop
sarb
test
jnp
and
aad
aaa
mov
add
jnp
adc
pop
out
jns
movsb
mov
jge
xchg
lahf
push
test
aad
adc
jns
pop
dec
dec
jno
out
divps
xchg
mov
fcmovbe
addl
rcll
mov
outsl
mov
mov
cli
pop
push
mov
push
lret
das
xor
or
das
add
imul
mov
into
fiadds
jecxz
sub
in
add
and
fsts
mov
sub
icebp
in
jns
cmp
stos
and
jmp
std
mov
cld
and
push
ret
push
and
and
out
fstpl
sbb
push
mov
sub
add
out
mov
out
lcall
nop
mov
dec
ljmp
dec
loop
mov
jecxz
cmp
jbe
imul
xor
jecxz
nop
fsubrs
jecxz
lcall
jmp
and
and
cmp
add
arpl
pop
ficompl
jmp
xchg
dec
mov
xchg
out
cmpsl
int3
outsl
mov
loopew
sbb
bound
aas
sub
dec
jno
shlb
pop
sbb
pop
data16
test
jecxz
aam
or
xchg
mov
mov
sub
aam
mov
jl
jge
or
popl
mov
xor
mov
add
cld
pop
mov
pop
daa
scas
cmp
cmp
push
ja
out
sbb
les
sbb
mov
pushf
cmp
sahf
jg
mov
ret
jae
sbb
imul
mov
jecxz
je
test
add
outsb
xchg
inc
and
out
sub
jle
pop
sub
fistl
pop
icebp
nop
stos
scas
xchg
cmp
jmp
in
in
pop
scas
jae
or
jne
rcrb
push
push
mov
adc
fwait
mov
outsb
nop
xchg
in
and
sub
and
jecxz
xchg
test
or
fidivrs
jae
in
xor
and
scas
les
frstor
lcall
or
mov
or
mov
adc
xlat
sbb
and
stc
and
fistl
lret
sbb
mov
mov
inc
dec
mov
adc
fmull
rcr
sub
scas
sbb
xor
movsb
ljmp
ffree
iret
lock
xor
es
int
fistpl
cmp
sti
jnp
insb
enter
idivb
and
add
adc
scas
xor
fidivrs
mov
fdivrp
andb
mov
inc
add
lcall
icebp
fcompl
fiadds
sub
dec
inc
scas
jno
jle
cld
roll
insl
scas
inc
sbb
add
stc
sahf
je
mov
outsl
mov
es
fs
xlat
aad
into
sbb
jo
sarb
mov
mov
xchg
jge
adcb
push
outsl
push
pushf
inc
hlt
aam
lods
in
mov
out
jle
jnp
movsl
stc
sbb
sub
aam
pop
scas
test
push
xchg
xor
movsl
pop
mov
mov
jp
lahf
stos
sub
setb
scas
mov
leave
pop
push
xchg
insl
in
mov
stos
mov
lret
movsb
clc
push
xor
or
int3
and
test
jb
out
mov
js
sub
mov
popa
inc
mov
enter
pop
cmpsb
ja
pop
es
in
out
addr16
fnstsw
and
loopne
rcrl
je
jg
daa
insl
mov
fstpt
imul
je
xor
jecxz
decb
pop
fwait
into
cltd
pop
cmpsb
xchg
jns
xor
mov
rcl
scas
js
jae
lahf
nop
cmpsl
popf
shll
cmpsl
out
mov
jmp
scas
jns
movsl
inc
or
jo
jg
push
pop
add
mov
cmpsl
ss
out
cmp
fdivrs
jp
push
jg
pop
loopne
push
mov
jle
negl
xchg
or
les
add
dec
popa
imul
adc
mov
mov
mov
stos
mov
jne
lcall
jecxz
xchg
scas
outsl
pusha
and
sub
xchg
mov
out
movsl
pop
in
pop
jp
mov
movsl
or
mov
test
pop
cli
sbb
cmpsl
mov
mov
lods
es
mov
pop
clc
xchg
sbb
in
mov
cltd
jg
mov
fimull
jecxz
dec
shrb
in
es
cltd
mov
or
xchg
jns
fnsave
mov
dec
push
insl
lods
mov
pop
gs
add
mov
cwtl
stos
loope
mov
sub
cmpsb
test
call
mov
sbb
mov
es
ds
sub
mov
or
call
jg
mov
add
mov
movsb
ss
jp
rclb
cmp
outsl
jmp
jge
rorl
xor
imul
out
push
sbbl
jae
jl
dec
leave
mov
cmpsl
gs
in
jae
stc
adc
push
ficomps
daa
test
pushf
ss
pop
fwait
rcr
push
addr16
xchg
jl
inc
out
fcmovu
enter
and
xchg
jp
mov
xorb
loope
mov
cmp
xchg
leave
outsb
iret
mov
dec
and
lahf
push
xchg
scas
lahf
js
mov
popf
and
jp
or
dec
lret
cs
out
or
ret
pop
xor
stos
scas
jecxz
add
scas
pop
push
insl
sbb
jmp
frstor
pop
adc
loop
jl
xchg
cs
outsb
stc
cltd
mov
cmp
lods
int3
mov
mov
dec
neg
pop
inc
sbb
mov
xor
dec
sbb
lods
data16
push
inc
jp
mov
mov
push
push
loopne
lret
enter
fs
mov
in
dec
loop
jmp
inc
mov
mov
jmp
arpl
inc
push
test
in
in
jge
xchg
or
push
data16
stc
movsl
sub
and
hlt
pop
pop
or
addr16
pop
lcall
in
push
jl
dec
loopnew
out
and
mov
xor
aam
adc
das
bnd
fcoms
cmp
sahf
outsl
leave
in
dec
jno
rclb
xchg
push
sub
cmp
jbe
es
mov
not
test
data16
js
mov
xor
adc
mov
pop
aaa
lods
movsl
cmpsb
stos
pusha
sarb
jecxz
push
clc
popa
adc
push
xor
jg
das
test
daa
cmp
mov
mov
push
jne
sbb
xchg
and
cs
sbb
rcll
mov
std
out
mov
test
pop
mov
aas
cmp
mov
mov
mov
mov
cmpsl
xor
cs
push
shr
jp
adc
add
iret
sub
imul
imul
push
mov
out
jns
mov
popa
inc
or
lock
popa
movsb
jl
or
stc
xor
lea
clc
mov
aas
cmp
inc
adc
dec
lret
add
mov
arpl
cli
fidivs
in
adc
cmp
pop
push
int3
sbb
in
cmc
lcall
lcall
es
pop
and
loop
stos
stos
rol
sbb
pop
sub
fidivl
jecxz
or
xor
mov
dec
jecxz
test
jge
repz
fs
stc
out
pop
jp
shlw
outsl
pop
bound
sahf
insb
mov
fs
adc
sub
data16
iret
pop
inc
mov
popf
leave
in
add
icebp
push
and
cmpsb
or
aam
fldt
push
jne
inc
and
clc
scas
scas
mov
leave
repnz
out
and
fnsave
pop
mov
gs
insb
pop
and
call
mov
jge
or
mov
clc
std
lret
mov
ds
xor
mov
inc
mov
push
out
das
repnz
push
jmp
mov
mov
mov
and
inc
jl
sbb
inc
ss
rcrl
es
push
subb
mov
andl
sub
inc
pop
and
pop
ret
sbb
das
cmc
xor
xchg
test
push
out
sbb
add
mov
mov
adc
add
or
lock
xor
mov
mov
aam
push
mov
in
in
repnz
and
pop
repnz
adc
adc
sub
inc
mov
mov
arpl
pop
pop
mov
in
addr16
push
xor
adcb
je
repnz
jecxz
rclb
xor
fimull
mov
mov
lcall
pop
mov
xchg
lods
lods
je
out
mov
popa
xchg
les
cs
jecxz
pusha
add
adcb
lcall
cli
loope
test
into
ss
sbb
js
and
adc
lcall
mov
outsl
outsl
adc
adc
rcrl
pop
cmp
inc
push
insl
sub
push
ret
sub
jno
lea
inc
bound
in
push
sub
sub
mov
addb
test
ljmp
lahf
dec
imul
in
test
and
les
arpl
stos
sbb
shrl
lcall
cmp
out
nop
push
fdivs
push
adc
fisubs
into
daa
sub
loope
xchg
dec
repnz
pop
nop
in
pop
call
ljmp
mov
dec
or
rol
sbb
imul
push
js
xchg
ja
stos
psubd
sahf
push
test
aaa
xor
push
pop
test
inc
xor
in
loope
add
push
xor
call
cmpsb
popa
inc
push
mov
imul
lcall
je
cmp
sbbb
mov
jecxz
in
push
push
mov
pop
and
xchg
imul
repnz
dec
lods
jg
cmpsb
fcomip
out
mov
lods
movsb
cwtl
mov
test
stos
push
sahf
pop
inc
lahf
pop
and
lret
xor
outsb
in
inc
ljmp
jbe
adc
xchg
inc
pop
dec
pop
loop
add
sbb
sub
scas
mov
shll
test
jns
mov
lret
xorl
xor
xchg
shll
rcll
mov
mov
xchg
nop
das
mov
mov
inc
push
xor
lret
mov
xchg
adc
enter
clc
sub
push
bound
fdivs
arpl
jp
sub
cmp
pushw
or
loopne
mov
jecxz
outsb
mov
mov
jnp
vpaddusw
test
jg
inc
inc
fwait
mov
add
jmp
sub
xchg
jae
pop
dec
arpl
jae
or
pushl
es
inc
jae
les
ljmp
out
pusha
pop
clc
mov
jle
pop
mov
cmpsl
fwait
lods
sub
sbbb
mov
pusha
stos
mov
jp
mov
test
mov
mov
add
dec
popa
bound
sbbb
mov
sarl
lea
mov
mov
cmp
pop
mov
jge
cmc
test
vshufps
mov
hlt
mov
insl
jmp
cmp
mov
inc
adc
popf
cld
mov
fucomi
cmp
mov
jbe
sbb
push
and
xchg
cmp
daa
mov
xor
int
sbb
cli
fcomps
fmuls
xchg
jbe
and
gs
xor
stos
insb
xor
or
sbb
ficoms
enter
aas
les
or
inc
roll
push
filds
jmp
stos
nop
inc
sbb
out
jns
dec
arpl
mov
sub
add
mov
sbb
xor
xor
sbb
push
push
sti
das
dec
cmp
addr16
fmull
sub
negl
inc
mov
out
out
sbb
push
adc
mov
or
std
and
imul
idivb
mov
popa
xor
mov
cmpsl
cmp
xchg
mov
decl
dec
stos
fmulp
ds
scas
mov
push
insb
ss
xchg
lods
fdivl
cmp
pop
hlt
nop
dec
add
inc
aad
dec
repz
fs
daa
mov
inc
pushf
push
sbb
sbb
adc
nop
pop
jnp
and
lcall
push
cmp
popa
push
test
shrl
xchg
test
popw
dec
dec
loopne
mov
inc
pop
push
jg
mov
mov
lods
inc
pop
push
cwtl
sub
sti
pushf
fistl
dec
movsl
mov
int3
out
dec
ret
clc
pop
bound
or
repz
xor
fwait
cs
adc
pand
jo
es
loop
xchg
push
cmp
ficompl
mov
mov
dec
int
mov
movb
ds
or
or
push
int3
sub
xor
pop
imull
add
sub
pop
insl
and
adc
sar
int3
ds
lea
pop
push
or
in
pushf
mov
stos
leave
mov
dec
sarl
cld
adc
jp
repnz
push
push
pop
push
inc
ret
inc
add
pusha
sub
push
ljmp
add
test
inc
mov
cld
push
addl
push
xchg
and
mov
pop
ficoms
outsb
add
push
lods
popa
mov
sub
cltd
loope
pushf
fsubl
sub
ss
mov
popl
sbb
cmpsb
jbe
mov
cmpl
inc
jp
sub
sub
in
jb
mov
imul
stos
je
jno
mov
cli
setbe
sahf
inc
sub
xchg
mov
fs
lcall
xchg
das
jge
pop
fimuls
rcrl
sarl
adc
lahf
mov
pop
scas
inc
cwtl
mov
jne
xchg
dec
hlt
pop
fwait
and
out
lahf
fidivrs
inc
xchg
inc
fldcw
push
lahf
sbb
jnp
add
leave
inc
paddusb
pop
call
push
imul
inc
push
dec
xchg
xor
stos
push
pop
loopne
xlat
jecxz
fldl
lret
cld
test
pop
inc
mov
je
pusha
gs
inc
imul
mov
aam
xchg
xor
lock
insb
mov
insb
cld
stos
cmp
pop
fistpl
test
add
mov
es
mov
jbe
push
cltd
shll
sub
jb
xchg
pop
test
mov
test
jp
add
mov
bound
gs
pop
xchg
lahf
rclb
out
aas
dec
push
mov
or
icebp
insl
cmp
aaa
sub
xor
pushf
outsl
loop
js
dec
mov
cmp
repz
mov
mov
fmull
sarl
mov
fsub
push
mov
jb
pop
sarl
mov
out
test
push
pop
pushf
xchg
mov
out
je
push
loopne
xchg
add
inc
push
cmp
mov
push
call
push
cmpb
xchg
pop
sbb
and
ljmp
test
daa
loopne
jbe
out
adc
sub
in
xchg
mov
stos
dec
xchg
nop
dec
pop
mov
js
in
cmp
sbb
mov
sub
stc
stos
into
mov
scas
xchg
int3
mov
cmp
iret
mov
add
aas
fcoms
lret
or
hlt
jmp
cmp
jmp
pushf
push
pop
inc
pop
imul
jg
ror
sbb
add
push
movsl
sub
xchg
jne
out
enter
loopne
sub
repnz
push
and
and
fdivl
mov
jo,pt
lods
pushf
pop
xor
cmp
fimull
or
lahf
jg
jbe
mov
push
pop
dec
repnz
pop
mov
mov
adc
mov
sub
inc
icebp
cmpb
push
inc
jo
xor
in
jp
ds
mov
leave
cld
mov
out
pop
push
lret
sbbl
jno
inc
push
divb
gs
push
scas
call
imul
inc
and
xchg
mov
std
inc
ret
pop
dec
dec
out
rcr
fwait
call
into
mov
fmull
mov
adc
and
adc
pop
dec
ficomps
cmp
jmp
xchg
inc
movsl
mov
mov
pop
imul
xor
loope
sahf
orb
les
les
int
push
or
mov
outsl
pop
icebp
xchg
mov
sbb
mov
ljmp
mov
cmp
lret
and
int3
or
inc
insb
mov
push
movsl
push
rcl
mov
lea
outsl
mov
cltd
cltd
shlb
lret
adcl
dec
xchg
or
lock
out
jae
enter
push
jns
es
lds
lcall
adc
inc
xchg
and
or
stc
adc
sbb
sub
ret
push
pop
in
cltd
mov
sarl
xor
cmc
sbb
dec
js
mov
rorb
out
repnz
insb
mov
shll
mov
inc
hlt
icebp
fists
loop
je
xchg
sub
pop
in
adc
imul
in
aaa
lret
test
add
ja
into
push
stos
movsb
das
add
xor
pop
and
int
loopne
stc
mov
jg
dec
cmp
lcall
push
stos
push
sbb
ret
mov
cmp
int
in
sarb
pop
push
cmp
pop
xchg
ljmp
cmp
out
sub
popa
and
and
and
cmp
add
daa
mov
sbb
jns
sub
adc
outsb
sti
ret
rcl
jne
insb
sti
sbbb
js
popf
and
test
mov
push
xor
mov
pop
xchg
adc
fcomp
aaa
push
cmp
insb
mov
xor
gs
cmp
shll
icebp
jmp
lahf
adc
rorl
adc
sar
mov
mov
lds
jecxz
push
sub
mov
into
lods
inc
sub
sbb
int
adc
fldt
sarb
in
cmp
mov
pop
xchg
lea
cli
movb
and
arpl
pop
push
repnz
dec
cltd
mov
insb
sub
icebp
dec
xor
sbb
inc
jecxz
push
mov
repz
fcomps
cmp
adc
jge
pop
cltd
xlat
mov
xor
inc
cmp
pop
add
movsl
fidivrl
ficompl
dec
adc
subl
jns
lret
mov
cmp
lods
insl
std
inc
xchg
lea
aaa
test
adc
ds
in
repz
aaa
mov
cmp
push
in
xchg
pushf
insb
push
fistpl
cmp
inc
sbb
fsubrl
push
cwtl
iret
ja
ja
inc
jbe
pop
ret
cmp
push
dec
cli
cmp
int
test
push
stc
sub
adc
in
push
ds
ss
pop
pop
fisubl
ja
fdivs
adcb
push
mov
bound
lahf
aas
cli
repnz
sub
xor
sbb
pop
push
pop
pop
dec
pop
xchg
sbb
ret
dec
sti
fs
mov
jge
in
sub
call
js
out
pop
dec
dec
push
add
movb
cld
sbb
clc
jge
jns
xchg
out
or
test
test
dec
and
stos
test
out
movsl
xor
neg
sti
mov
shl
gs
rorl
clc
stos
sub
jne
pop
adc
outsb
push
jmp
popa
pop
fs
fs
mov
les
shrb
xlat
mov
mov
add
mov
push
lea
mov
pop
jmp
mov
std
int
pop
rclb
push
js
cmp
out
das
leave
test
jl
adc
stc
adc
xchg
jbe
sbb
inc
and
gs
out
out
stos
jb
sbb
or
push
stos
xor
push
adc
loop
add
inc
cmp
mov
data16
fnstsw
cld
shr
jmp
mov
xlat
fdivl
movsb
scas
test
mov
inc
pop
fcmovbe
or
jmp
sbb
sbb
xchg
in
add
mov
lock
dec
push
into
daa
mov
adc
fcmove
add
inc
js
dec
pop
sbb
sbb
pop
or
jg
sahf
cmp
push
fs
mov
aam
cltd
jmp
cld
jae
mov
ficoms
push
pop
leave
fs
stos
push
scas
fistpll
cmp
xor
lods
stos
sbb
rcll
push
or
mov
ljmp
xchg
mov
adc
xlat
push
mov
mov
lds
in
and
notb
mov
mov
cmp
mov
jg
rcrb
aad
nop
push
imul
in
fdivr
scas
xor
add
mov
ficoms
cmp
push
xchg
insb
shlb
mull
rol
sub
mov
popa
sbb
push
mov
loop
cmpsl
aas
xor
inc
mov
sbb
dec
adc
xchg
hlt
scas
sub
js
push
inc
push
jbe
or
in
gs
jno
add
sub
sub
push
push
adcl
inc
jecxz
push
adc
xor
call
lahf
cwtl
pop
pop
lret
xor
add
ss
add
mov
sarb
orb
mov
mov
out
jnp
inc
in
adcl
mov
enter
mov
fsub
pop
fld1
jns
clc
data16
sub
sub
outsb
sub
mov
jnp
sbb
das
sub
cld
push
out
cmp
pop
lds
xlat
in
sbb
enter
shlb
mov
mov
cli
adc
cwtl
xchg
jnp
and
lock
push
rcll
scas
pop
push
jbe
xchg
arpl
mov
cmpsl
flds
out
ficoml
or
mov
ror
sub
lret
mov
inc
jle
mov
sub
jnp
dec
mov
dec
repz
repz
sub
loopne
sub
outsb
xor
inc
sbb
stos
ds
sbb
stos
test
call
lock
out
rolb
nop
not
rol
cmp
ret
jge
cmpsl
cmp
push
shrl
xor
or
mov
popa
pop
clc
mov
dec
rcl
push
out
cmp
adc
jns
sbb
movsb
cltd
pop
fdivrl
test
cmpsb
dec
popa
xor
push
xor
push
outsb
push
fbstp
push
rcll
add
pop
lods
jmp
fwait
andl
pop
orl
test
mov
das
sbb
or
sbb
adc
insb
rorb
shrw
enter
push
jmp
mov
or
adcl
jecxz
lret
jb
mov
lods
ljmp
dec
mov
into
int
xchg
and
jae
xchg
sarl
cli
mov
mov
rclb
decb
ret
xchg
subb
pop
mov
pop
cltd
sbb
psubb
jl
push
pop
in
and
xor
cld
jbe
xor
clc
nop
fwait
dec
adc
ds
daa
out
rcll
sub
sub
push
fildl
mov
dec
inc
roll
push
cmp
mov
jb
adc
jl
cmc
xor
fnstenv
xor
push
jns
xchg
mov
movb
fildl
pop
cmp
out
pop
insl
push
mov
cli
mov
sti
in
cmp
pop
ds
jns
lret
mov
sub
int3
or
out
in
repz
ss
mov
add
push
cli
aaa
gs
adc
push
adc
rorb
iret
lret
sub
aad
stos
lahf
in
lock
push
imul
dec
ljmp
pop
mov
mov
mov
add
sub
mov
dec
mov
shlb
pop
out
out
inc
mov
stos
pop
nop
pmaddwd
jl
pop
jg
mov
push
movsl
call
dec
sbb
xchg
adc
jg
xchg
cld
pop
loopne
into
rclb
cld
cwtl
cmpl
stos
arpl
pop
inc
scas
pop
mov
mov
test
mov
pop
mov
in
cmp
pop
jo
jo
lret
xchg
std
push
add
xlat
cmp
fs
xchg
jecxz
shl
pop
pop
dec
call
cmc
bound
add
pop
jmp
inc
clc
pushf
or
leave
aaa
ds
add
xor
out
mov
dec
or
aaa
arpl
js
push
bound
mov
add
push
jl
inc
insl
roll
adc
add
cmpb
cmp
iret
pop
dec
mov
add
cmc
ljmp
xor
out
insb
and
bound
stos
push
cmpsb
adc
mov
mov
sub
xor
push
mov
cli
jb
idivb
mov
jg
mov
dec
push
dec
pusha
ljmp
jge
dec
push
push
push
cmp
mov
scas
fsubrl
cli
and
daa
adc
push
divl
inc
xchg
std
ds
sahf
dec
js
jmp
enter
xchg
scas
mov
mov
and
push
bound
xor
xchg
mov
dec
daa
pop
out
cmp
mov
or
pop
mov
add
ss
ficoms
outsl
ss
das
and
adc
sti
pop
mov
mov
mov
ss
dec
lahf
cmp
adc
ret
xchg
mov
sbb
adc
sub
inc
out
add
xor
sub
imul
pop
jecxz
mov
push
test
mov
and
pushf
mov
push
jae
dec
xchg
sbb
dec
cmp
jl
fs
clc
mov
in
adc
dec
cmpsb
mov
mov
psubusw
adc
pop
lods
aaa
pop
outsl
arpl
test
xchg
pusha
into
cs
lret
sub
mov
xlat
call
mov
cli
or
aaa
pop
cs
pop
data16
es
lock
or
je
jb
jns
lods
mov
mov
leave
push
push
lret
dec
fdivrs
out
daa
adc
lret
and
es
xchg
pop
mov
gs
inc
movsb
ljmp
mov
movsb
mov
es
pushf
push
push
mov
test
push
aad
inc
push
mov
cmp
push
cmp
cwtl
scas
mov
mov
sahf
ss
sub
ljmp
sbb
mov
pop
pushf
mov
bound
sarl
and
out
idivl
and
fistps
dec
cmpl
shlb
mov
cmp
sarb
pop
pop
pop
fsubl
xor
subb
sub
mov
mov
mov
lret
into
mov
adc
lods
pop
xchg
xchg
xor
addr16
mov
mov
adc
std
mov
xor
into
ficoms
mov
lods
sub
dec
adc
pop
psubq
test
pop
jne
pop
nop
lods
xrelease
aad
aam
out
jg
jbe
and
push
adc
mov
xchg
mov
inc
imul
outsb
jg
imul
clc
pop
cmova
jae
mov
mov
sub
je
add
and
in
sub
rorb
imul
cmpsb
outsb
mov
mov
in
xlat
or
shlb
mov
xchg
adc
mov
xchg
mov
cmpb
pushf
add
movsb
movsb
or
outsb
pop
cmpb
pop
adc
jbe
and
or
mov
push
cmp
lret
xchg
jp
fwait
lret
outsl
push
jbe
loope
scas
pop
mov
cld
aaa
movsb
shlb
sbb
cmpsl
sub
push
cmp
mov
cmp
sub
iret
adc
or
iret
pminsw
lea
jl
jp
movsl
sbbl
cmp
or
dec
cmp
dec
or
and
shr
cld
std
call
or
pop
inc
pusha
out
or
pop
or
inc
cmc
pop
movlps
and
cmc
push
and
ret
xchg
inc
cltd
xor
sbbb
mov
dec
lods
cmp
enter
pop
and
dec
adc
aaa
dec
push
add
pop
jmp
ret
and
add
mov
sbbb
aam
incl
movsl
sub
xchg
aad
cli
setbe
jle
daa
adc
movsb
popl
loope
fs
inc
push
mov
fsubr
inc
jb
push
mov
les
loop
nop
in
enter
aas
sub
sbb
mov
les
xor
mov
jb
add
and
mov
jbe
jmp
dec
cmpsb
daa
xor
insb
pop
pop
xchg
sbb
or
push
jp
movsl
add
mov
insb
push
mov
mov
es
inc
or
movsw
idivl
inc
rcrl
sbb
sub
jecxz
arpl
mov
loop
push
or
sbb
add
ljmp
mov
stos
in
push
mov
and
pop
xlat
jle
out
or
mov
adc
es
sahf
aam
fistps
es
popf
mov
lret
add
cld
repnz
xor
push
nop
leave
jp
lods
divl
xor
lret
fistl
dec
fsubs
bound
or
leave
andl
fnstsw
pop
pop
fcoml
cmp
adc
pop
jecxz
outsl
sbb
mov
mov
pop
sbb
sub
pop
mov
push
mov
jl
inc
cmpsb
test
test
movsb
pop
aas
std
fwait
icebp
sub
scas
dec
popa
movsb
dec
adc
cmc
push
push
xchg
xchg
lods
mov
jbe
jp
repz
push
push
mov
test
lea
pushl
stos
inc
adc
mov
imul
movsb
fcoml
fidivrl
ljmp
push
popf
insb
mov
aad
js
and
addr16
xor
sub
cmpsl
adc
mov
mov
test
mov
test
xchg
jne
sbb
neg
fmuls
push
pop
out
push
mov
mov
inc
ljmp
and
aaa
add
dec
jns,pn
cmpsb
sub
cs
pop
jb
inc
pop
push
push
jge
inc
sbb
notb
cmp
mov
mov
mov
pop
xlat
fisubrs
xor
shlb
out
inc
adc
movsl
gs
imul
jmp
lock
cmp
jmp
xchg
adc
inc
insl
dec
out
outsl
sbb
mov
dec
sbb
pop
jmp
out
cmp
and
push
dec
add
mov
in
mov
ljmp
xchg
test
imul
enter
pop
push
loope
inc
cmp
add
cwtl
mov
sbb
jp
test
mov
fs
mov
sub
roll
inc
lods
sub
or
and
cmp
aas
ror
push
std
cmpsb
and
bound
or
pop
and
mov
sbb
fldcw
cmpsb
pop
push
je
sub
arpl
icebp
lds
pop
push
push
mov
pop
icebp
dec
imul
aam
xchg
sub
cmp
jmp
bound
sbb
sbb
loop
out
pop
aaa
pop
out
jecxz
cmp
fwait
pop
sub
cmpsl
test
push
data16
mov
pop
mov
enter
cmpsb
xchg
dec
mov
mov
sbb
sub
mov
scas
outsl
or
mov
add
dec
or
loopne
mov
out
sub
xchg
clc
pop
popf
ds
cmp
sub
leave
sub
push
cmc
sub
push
mov
mov
push
or
push
xchg
xchg
cmpsb
rcrl
mov
test
jg
push
sbb
popf
dec
jge
into
cmp
fdivrp
jae
dec
faddl
or
leave
mov
rcl
fnsave
fidivrs
lods
push
sbb
add
rclb
iret
sub
jnp
push
mov
fiadds
rclb
pop
xchg
xchg
loopne
adc
in
cmp
adc
push
sbb
xchg
xor
shl
shrb
stc
lea
xchg
or
shlb
loop
pop
add
pop
and
inc
push
nop
jno
movsl
cld
xlat
push
xchg
xor
xchg
int3
js
fadds
lods
xchg
push
out
or
pusha
pop
stos
imul
movb
std
call
clc
cli
divb
mov
adc
arpl
adc
test
xor
mov
hlt
cmpsb
jg
adc
mov
divl
cmp
aad
inc
dec
pop
int3
adc
out
std
das
and
fcmovnbe
sbb
icebp
out
movsb
cmpsb
cmp
je
bound
rcrb
lret
sub
inc
out
shll
shll
or
movsl
rorl
insl
sbb
mov
aam
cmp
call
pop
inc
fwait
rolb
xor
in
loopne
pop
xchg
inc
shl
or
ja
movsb
sarl
cmpb
imul
loopne
xor
ds
jge
push
lods
xchg
bound
mov
mov
adc
mov
push
add
xchg
out
ss
jb
lds
and
lcall
push
xlat
mov
das
jne
call
push
push
sub
dec
pop
movsl
mov
movsl
aam
and
push
ljmp
icebp
sar
mov
fdivl
lahf
leave
cmp
jne
fcmovb
stos
fwait
dec
mov
mov
das
lea
ja
iret
cmp
mov
notl
add
pop
stc
cwtl
push
jo
hlt
inc
mov
cwtl
cmp
and
pushf
mov
jp
add
and
sahf
cmc
lret
xchg
dec
jbe
addb
push
bound
and
dec
pushf
sbb
cltd
pushf
and
push
sub
xor
mov
movsl
jecxz
loop
inc
sub
fnstcw
cmp
mov
aam
add
or
or
add
arpl
inc
invlpg
out
fsubp
jg
fs
lea
jge
ret
mov
enter
outsb
mov
inc
inc
mov
rolb
je
jge
mov
dec
jge
std
ljmp
mov
ret
push
out
cmpl
in
lea
sub
test
inc
es
out
stc
sub
shll
rclb
lahf
fwait
dec
inc
lea
lds
mov
mov
pushf
sahf
nop
das
mov
in
xchg
fs
push
lds
push
jg
push
addr16
test
rcl
or
lods
aam
enter
jns,pn
xlat
sbb
mov
std
in
repnz
out
loop
push
ds
ficoml
push
lret
add
cmp
push
add
cmp
pop
mov
mov
push
in
ret
lret
fiaddl
popf
add
test
lret
pop
lods
mov
jae
loop
fs
addr16
mov
xchg
inc
pusha
repz
jge
or
lret
dec
movsl
sub
cwtl
js
pop
out
insl
jnp
pop
data16
push
lret
cmp
mov
je
mov
mov
aas
jge
and
in
in
sbb
repz
test
and
ds
sbb
push
fdivrs
data16
and
mov
in
or
int
jmp
mov
xor
and
cmp
pop
or
scas
pop
adc
jg
fldcw
out
push
fisubl
into
mov
pop
jge
idivl
cmp
sub
adc
aam
das
push
sub
and
inc
and
cmp
mov
rcr
inc
pop
dec
dec
test
scas
rcr
int3
pusha
add
lea
and
mov
push
mov
xor
sub
repnz
xchg
lret
arpl
sub
iret
cli
or
or
fidivl
xor
or
popf
aad
push
pop
iret
and
pop
icebp
daa
cmp
add
sbb
mov
and
mov
jp
inc
nop
push
lret
enter
popl
es
shll
xlat
mov
call
lret
fidivrs
mov
push
lea
or
sbb
imul
js
mov
insb
aas
lahf
dec
sub
ss
xor
add
push
cmp
cmp
dec
sub
icebp
pop
and
lods
insl
push
mov
xor
divl
xor
adc
loope
ret
out
pop
jl
mov
cmp
aaa
imul
int3
mov
cmp
jecxz
or
iret
fmull
mov
xlat
out
mov
mov
and
out
rcrb
adc
push
sbb
cmc
pop
inc
sub
mov
hlt
push
inc
add
jl
sbb
insl
xor
cmpb
xchg
lock
in
imul
sbb
in
pop
fwait
xor
mov
pop
shl
fcmovnu
shrl
aaa
insb
repnz
cwtl
inc
inc
fsubp
fsubp
fidivrs
fsubr
testb
roll
push
cmpsb
lcall
mov
out
pop
out
stos
scas
or
xchg
lock
sbb
aad
clc
pusha
in
cmpl
mov
jl
cwtl
imul
or
stos
data16
mov
mov
int
sbb
jb
sub
jns
or
es
dec
ds
inc
mov
mov
cmpsb
idivb
xorb
mov
or
xorl
ss
jge
das
mov
clc
and
mov
loope
mov
and
es
add
lea
imul
sub
add
imul
inc
subb
jbe
add
cmp
stos
pop
cmp
inc
out
mov
pusha
mov
pop
mov
test
rolb
repz
mov
movsb
sbb
int
push
insl
and
sub
mov
into
fnstsw
mov
decb
int
out
test
es
xor
add
lcall
es
ljmp
mov
into
lret
cmp
test
cld
sub
pop
mov
xor
fiadds
fstpl
xor
add
push
fs
cli
xchg
sub
mov
mov
push
xor
sub
inc
jecxz
mov
mov
test
std
mov
pop
push
xor
add
shr
mov
mov
mov
pop
jl
cmpl
xor
or
jns
mov
dec
mov
jg
rorl
pop
push
sub
push
popa
push
scas
insl
sarb
insb
into
sbb
imull
inc
sahf
test
leave
lea
push
js
mov
and
cmp
sub
insl
cmpsl
testb
push
jmp
jnp
sti
scas
adc
je
adc
enter
sub
sub
mov
addr16
inc
mov
sbb
or
sub
in
dec
cli
mov
aad
fstps
inc
adc
pop
mov
mov
lcall
push
dec
jmp
out
and
mov
out
xchg
sahf
loop
fcmove
outsb
cmp
mov
add
out
into
adc
jge
in
cld
pop
aam
pop
mov
scas
mov
ja
cmp
inc
gs
rolb
inc
mov
popa
xchg
xchg
jb
jmp
and
mov
or
stc
mov
imul
in
in
sub
sub
shrl
fists
mov
sbb
inc
cmp
adc
mov
outsb
fdivrp
jge
cmp
lcall
or
nop
add
pop
mov
cmc
sub
xor
lock
rcl
adcl
sbb
push
dec
adc
sub
call
add
aas
sub
arpl
ljmp
mov
mov
xor
jecxz
push
adc
cmp
lret
and
std
sbb
add
daa
cmp
dec
jecxz
add
sub
ret
iret
ljmp
sbb
stos
sar
mov
ja
jb
in
popf
mov
movb
inc
inc
mov
mov
push
ret
mov
adc
xor
sahf
inc
add
lcall
adc
aad
xchg
or
cmp
mov
in
rclb
mov
popf
ss
cmpsl
int
inc
jne
call
pop
mov
xchg
pop
xor
jmp
imul
mov
xor
mov
ss
inc
add
mov
out
mov
test
scas
inc
push
jmp
popf
scas
nop
adc
pop
add
mov
in
dec
cmp
or
xorb
jne
push
dec
sub
mov
addr16
mov
adc
mov
xchg
xor
mov
xchg
sub
jo
push
cld
mov
or
inc
sub
jle
pop
inc
lret
cmp
mov
loop
xchg
es
addr16
dec
push
pop
pop
pop
xchg
sub
push
ss
in
add
mov
fdivl
out
add
dec
leavew
push
int3
inc
xchg
repz
inc
mov
inc
js
add
mov
dec
dec
sbb
in
xlat
call
in
mov
int3
add
pusha
pop
flds
clc
dec
popf
jp
or
shr
or
fwait
dec
xchg
inc
cld
mov
and
mov
push
je
xchg
ss
mov
sub
push
and
inc
jge
add
pop
cmpsb
cwtl
or
lret
jnp
push
sbb
lcall
pop
cmpsl
mov
je
jnp
jne
repnz
out
mov
out
cmpsb
bound
pop
mov
sub
jb
repnz
or
sbb
repz
xchg
xor
loop
mov
rclb
mov
pop
inc
and
fwait
add
sub
bound
pop
xor
sbb
mov
bound
pop
shrl
addl
jno
pop
mov
sbb
mov
or
sbb
ret
inc
mov
cmpsl
nop
fmull
ja
or
xor
fldl
pop
jle
mov
pminub
aad
pushf
lods
jmp
adc
lea
xlat
mov
xchg
aas
and
mov
cltd
rep
add
pop
shrl
jmp
mov
add
add
xlat
int
sub
int3
loopne
push
and
ljmp
fcompl
pop
pop
dec
pop
push
add
push
dec
push
ret
stc
jg
pop
adc
xchg
stos
addr16
loopne
or
push
outsb
scas
fwait
andb
sub
fnstcw
mov
xchg
mov
cld
das
and
dec
xchg
fcompl
lcall
add
adc
push
add
test
sbb
sysret
bound
sti
add
xchg
negl
ja
mov
into
enter
sbb
adc
leave
ret
call
js
pop
fcmovu
mov
sub
cld
push
daa
or
cli
scas
bound
fwait
int3
sarl
outsl
push
adc
or
in
ss
jp
lods
or
call
pop
icebp
hlt
fadds
std
cld
out
mov
jg
sbb
cmp
pop
dec
sub
sti
sbb
inc
outsl
adc
dec
sahf
lods
push
push
lods
iret
sub
and
loope
dec
pushf
es
pop
cmp
mov
and
jne
mov
mov
pop
test
clc
mov
xchg
cmp
mov
jnp
adc
cmpb
jo
xchg
lret
mov
imul
fimuls
or
cmpsb
xor
mov
mov
pop
scas
sbb
sub
data16
lods
popf
mov
dec
or
stos
cli
lock
shll
jge
bound
cmp
dec
outsb
jl
dec
popa
or
filds
mov
push
push
sbbb
into
cmc
push
arpl
mov
dec
jb
mov
inc
pop
sub
orl
fs
icebp
sub
daa
lea
push
iret
mov
movd
nop
mov
imul
rorb
movsl
mulb
nop
adc
dec
imul
dec
add
lret
inc
mov
and
mov
pop
fadds
inc
inc
cmp
mov
mov
or
loop
inc
fcom
pusha
pop
jge
cmp
enter
push
gs
pshufw
mov
adc
push
sbb
adc
jae
sub
jl
cld
or
pop
mov
cmc
sarb
aas
xchg
idivl
sbb
in
clc
fdivp
movsb
shrl
xchg
fisubs
js
andl
daa
mov
and
xor
jnp
cmp
jecxz
fwait
cmpsl
pop
jle
mov
fstpl
aam
imul
pushf
fcmovu
lret
xchg
fdivrs
xchg
popa
sbb
sbb
xor
cmp
cwtl
addl
adc
ficoms
aas
sbb
jmp
rolb
push
xor
sub
data16
add
xor
cmp
nop
sbb
push
and
jns
data16
aam
mov
and
xchg
repnz
icebp
xor
push
mov
mov
sbb
mov
jne
fwait
jno
jge
cmp
mov
dec
xchg
sub
and
imul
and
rorb
enter
popa
and
mov
out
sub
fcompl
mov
js
jnp
into
call
sbb
xchg
mov
ljmp
xchg
dec
mov
daa
add
xchg
rcl
out
mov
sbb
adc
rol
rcrb
das
xchg
mov
mov
xchg
movsb
jb
inc
push
std
mov
and
xchg
pop
aad
sub
out
dec
stos
push
inc
pop
sub
push
push
frstor
xorb
jae
jle
test
insb
out
mov
jbe
bound
aaa
in
inc
movsbl
dec
lret
call
adc
ds
cs
xchg
push
test
pushf
pop
aad
dec
out
xor
xchg
or
enter
and
femms
inc
cmp
lock
ffreep
adc
add
xlat
outsb
jle
mov
movsl
sub
cs
jns
cld
adc
ret
push
cld
fcompl
and
sbb
pop
mov
ss
cli
jmp
imul
fs
sbb
pop
lret
in
mov
push
jg
negl
cmp
adc
fwait
sbb
inc
and
push
stc
sub
shlb
dec
out
jg
pop
sub
push
xchg
call
mov
std
les
dec
push
mov
into
xchg
cmpsl
jp
adc
ret
lea
cli
sbb
addb
stos
lret
out
mov
sub
and
pop
inc
fdivrl
rcrb
inc
dec
enter
pop
adc
ja
mov
outsl
daa
in
mov
mov
pop
push
in
shlb
jae
ss
xlat
mov
mov
mov
fs
pop
pop
adc
repnz
push
psubsw
roll
nop
mov
jne
xor
aas
adc
sti
or
or
fs
adc
push
cmp
shlb
repnz
mov
dec
lods
mov
mov
mov
add
popa
test
aam
std
adc
sub
adc
pop
leave
adcb
repnz
fsubrl
push
jmp
add
iret
xchg
or
daa
stc
add
cmpb
sarb
aaa
jns
sub
cmc
mov
aas
clc
rorl
jp
lods
lea
mov
stc
xchg
or
mov
movsb
loopne
sbb
lahf
push
inc
push
paddb
movsb
mov
repz
push
dec
imul
pop
xchg
mov
push
and
add
aas
cli
mov
jl
mov
bound
js
fimull
aas
add
cmp
mov
fimull
fs
add
dec
es
fwait
pusha
nop
jne
cmpsb
adc
out
sbb
movsb
pop
enter
repz
push
jecxz
xor
je
daa
fistps
icebp
pop
dec
pop
lds
sbb
cld
bound
mov
aam
sahf
and
in
push
pop
je
sbb
lock
testl
inc
push
icebp
or
sbb
out
ret
neg
adc
into
cmp
sbb
das
std
lcall
mov
int3
testl
push
data16
adc
jecxz
xchg
xor
hlt
fdivp
push
mov
popa
js
movsb
sbb
mov
sub
cmp
or
xchg
shufps
lret
adc
mov
jmp
xchg
and
inc
pop
fisubrl
ficompl
mov
in
insl
push
test
or
jb
dec
fsubs
xchg
mov
into
pop
adc
cwtl
stos
inc
in
fidivrs
in
fcmovnb
pop
xchg
mov
push
mov
mov
shrb
into
jb
pop
and
into
jnp
aas
arpl
int3
imul
sub
fnsave
clc
les
push
cmpsl
push
adc
push
notl
sub
push
jnp
fdivr
jecxz
push
sbb
pushf
mov
rolb
or
test
jp
aas
sbb
data16
sbb
mov
sbb
sub
clc
dec
mov
clc
lea
lds
insb
lcall
jo
lock
scas
mov
dec
mov
mov
data16
jg
inc
icebp
jecxz
mov
scas
outsl
and
lcall
leave
pop
cmp
push
add
mov
bound
aad
push
test
push
pop
push
cmp
aam
jecxz
ss
std
sub
lcall
pushf
mov
jo
or
shrl
pop
and
shl
clc
mov
loope
sub
rcrb
sti
int3
cltd
xor
lret
incl
inc
and
jl
call
xor
out
mov
xor
jmp
mov
mov
pop
insl
loopne
comiss
push
mov
lea
pop
pop
lods
and
sahf
cwtl
pop
and
out
in
and
mov
loope
fisttpl
cmp
sub
enter
jns
adc
push
lret
lret
mov
out
sub
and
cmc
lods
or
cwtl
dec
mov
pop
incb
enter
xor
jl
in
fildl
inc
mov
ret
hlt
es
cmp
popf
xor
ljmp
push
imul
add
sti
daa
insl
negb
cmp
cmc
fwait
pop
or
test
sub
cmp
sub
adc
mov
fidivl
into
iret
jae
jecxz
push
ds
cmp
mov
sbb
sahf
in
les
into
movsl
ret
dec
pop
push
mov
cwtl
rclb
jnp
adc
jne
sbb
sub
sbb
and
lock
imul
fldt
aam
dec
and
out
mov
mov
pop
jecxz,pt
push
pop
fisubl
test
cmp
sub
jg
add
std
sti
jnp
test
mov
push
mov
stos
jecxz
jl
add
sub
push
idiv
int
dec
subb
in
dec
xchg
lds
jbe
in
push
pop
fwait
xor
cwtl
mov
pushf
stos
pop
loope
in
push
mov
shll
xchg
es
enter
adc
mov
pop
mov
pushl
fisubs
mov
imul
loop
xor
push
push
and
sbb
jmp
add
sub
mov
add
inc
mov
pop
stc
outsb
fwait
xchg
mov
outsl
ret
and
pop
xchg
dec
mov
xchg
out
xchg
dec
data16
mov
jmp
outsb
push
in
repz
mov
mov
push
xchg
dec
ja
arpl
pop
mov
fsubs
sbb
push
mov
pop
xlat
sbb
jns
dec
out
push
cmp
dec
pop
lahf
pop
push
hlt
lds
sub
popf
outsl
pop
je
nop
mov
adc
xchg
out
push
xchg
loop
loop
xchg
les
in
mov
mov
pop
push
imul
mov
cmp
or
push
jmp
xor
pop
mov
pushf
fprem1
mov
iret
push
mov
xor
es
or
pop
inc
xlat
mov
fists
lret
cmp
fcmovu
lods
add
fisttpll
je,pn
enter
pop
xchg
mov
nop
lcall
ficomps
sub
popf
in
int3
stos
stos
adc
into
cmp
mov
scas
pop
dec
dec
orb
je
repz
mov
and
jbe
pop
das
negb
add
jl
sti
cmp
mov
sbb
icebp
cmpsb
adc
xchg
jo
mov
push
jp
push
jg
jnp
outsl
cwtl
jg
cwtl
movsl
jnp
xlat
ss
lods
loope
shlb
lods
in
rolb
mov
jle
imul
mov
mov
into
dec
dec
xor
fistpl
mov
mov
lock
xchg
push
inc
mov
fs
mov
or
stos
pop
mov
loopne
cvtdq2ps
imul
adc
mov
imul
sub
jb
inc
xchg
mov
jbe
push
inc
dec
shlb
pusha
cmp
pop
outsl
data16
pop
outsl
pop
push
int3
jae
loope
xor
call
repnz
scas
push
and
cmp
push
sub
loopne
loop
push
iret
imul
mov
mov
mov
adc
in
mov
dec
inc
push
jae
xchg
rcl
jl
jnp
xchg
dec
adc
jle
call
mov
mov
fsub
mov
lcall
je
imul
lods
lods
dec
jmp
fldenv
fistpll
ljmp
jp
push
inc
inc
fs
adc
cs
mov
xor
jg
into
pop
add
sbb
std
jp
decl
adc
test
sahf
mov
jle
inc
add
mov
adc
rcrb
and
mov
lret
out
mov
mov
add
inc
es
add
jns
stc
mov
insb
and
movsb
rorl
in
mov
mov
xchg
dec
arpl
dec
int3
pop
mov
add
dec
xchg
push
negb
sbb
pop
cmc
pop
dec
loope
mov
pop
xor
mov
xchg
icebp
pop
sbb
int3
fs
mov
clc
cmp
sub
fisubl
and
test
add
fwait
adcl
jl
ror
outsl
cmp
mov
sub
mov
dec
ja
push
sti
sbb
lods
or
ljmp
adc
adc
repz
mov
push
sbb
lcall
jo
cmp
push
scas
and
push
mov
mov
xor
sti
mov
test
or
jge
xchg
dec
sub
ja
loopne
xchg
jne
lret
xor
sbb
imul
addr16
fmull
xchg
std
sahf
adc
hlt
inc
icebp
xor
cmp
test
in
int
outsl
and
stos
sub
jge
daa
dec
mov
movsb
mov
or
lods
xchg
in
add
adc
bound
jnp
and
das
ret
mov
imul
add
inc
add
pop
mov
icebp
rolb
cs
mov
xor
fcompp
jne
in
loope
rcrl
into
loop
dec
sub
sub
jmp
cmp
ja
push
push
aam
jb
mov
jge
pushf
dec
pusha
jae
outsl
cmp
int
dec
push
cvtdq2ps
mov
sbb
fisttpll
cmpsb
adc
cmpsb
cmc
mov
push
rorb
pop
pop
popf
sbb
or
cmc
pop
mov
jnp
cmp
mov
cltd
or
or
out
push
mov
lods
mov
mov
mov
lock
pop
and
xchg
sbb
lcall
xchg
pop
cli
jmp
adc
pop
sarb
cld
inc
push
sbb
mov
jbe
cs
out
lret
push
sub
dec
sti
dec
imul
pop
xchg
jp
fildll
lret
sub
mov
es
out
cltd
inc
in
std
jle
dec
sbb
adc
push
mov
mov
popa
xchg
cmpsb
push
imul
mov
mov
insl
jo
lret
mov
cltd
or
pop
mov
dec
leave
mov
mov
jge
int3
arpl
aaa
fcoml
pop
sub
ss
push
push
fcoms
or
dec
outsl
aaa
bound
stos
ror
push
jb
icebp
lret
mov
arpl
loope
jp
aam
cwtl
shlb
pop
inc
mov
adc
pop
xchg
sarb
lea
or
lcall
mov
icebp
in
sbb
sub
xor
out
jns
shrb
push
insl
mov
fstpt
out
dec
mov
jmp
cmp
push
xor
cs
outsl
sub
sub
jno
pop
rcrb
inc
mov
sbb
push
mov
adc
lahf
mov
jg
jo
or
jo
jecxz
aas
fadds
cld
stos
jmp
subb
mov
movsb
or
outsl
cli
les
sub
lea
jge
add
fs
sbb
cli
arpl
cli
fwait
test
or
mov
lods
lret
daa
xchg
jp
std
adc
fwait
adc
subb
lds
jp
cmp
int
mov
mov
fsts
and
out
sub
adc
pop
insb
cli
mov
jne
int3
cli
sbb
and
nop
pop
mov
mov
cmp
add
imulb
xchg
cmp
mov
pop
test
ret
sub
popa
clc
repnz
pop
jb
mov
dec
push
pusha
rcrb
xchg
xchg
es
jb
jnp
mov
test
pop
jb
pop
push
mov
icebp
out
xchg
and
out
mov
fisttpll
mov
or
mov
repz
mov
iret
inc
daa
rcrl
jns
imul
fcoml
or
pop
fsubrl
test
mov
inc
push
xor
lcall
inc
inc
push
rol
pusha
jp
cltd
xlat
js
and
fsubs
adcl
out
ret
mov
adc
mov
ja
pop
and
sub
or
push
scas
mov
add
cmp
jno
inc
and
lods
cmc
popa
or
dec
lock
jae
enter
sub
sbb
aad
push
mov
mov
data16
mov
sbb
sbb
cmp
mov
rolb
push
jl
dec
adc
jb
pop
loop
dec
sub
mov
adc
cmpsb
popf
or
lods
incb
repz
pop
or
mov
pop
dec
inc
mov
mov
sti
dec
bound
insb
cmp
insb
loopne
xchg
gs
push
dec
or
dec
insl
cs
mov
into
push
mov
imul
jle
mov
into
ds
cmp
add
hlt
fdecstp
inc
jb
push
mov
fmulp
xchg
adc
mov
outsl
fsin
nop
aad
loopne
mov
or
lcall
mov
pop
fcmovne
cmp
sbb
sbb
fldl
je
and
bound
mov
push
test
nop
outsb
mov
lcall
push
mov
in
in
out
cmpsw
dec
jg
lcall
nop
mov
dec
dec
adc
mov
mov
repnz
fwait
cli
mov
arpl
xor
mov
fnsave
fiaddl
rcll
aam
mov
xlat
addb
addr16
push
pop
fndisi(8087
mov
sbb
dec
pop
jp
pop
or
enter
lock
pusha
fmulp
pop
adc
insl
outsb
aad
jp
inc
sti
push
mov
dec
in
into
sbb
and
add
sbb
cmp
daa
dec
in
sub
aam
jmp
out
push
inc
or
mov
decb
jo
fimull
cmpsl
cmp
pop
inc
test
rolb
pusha
out
adc
sub
aaa
mov
sub
cmpb
pop
fcomps
and
xor
xchg
mov
push
aam
xor
ljmp
xchg
insl
jmp
mov
lcall
data16
cli
cmp
ss
sub
sbb
dec
jl
outsb
push
dec
mov
mov
in
test
mov
dec
popf
mov
dec
pusha
ret
pop
fnstsw
inc
lods
pop
fsubr
loop
mov
fldl
test
sub
repnz
pushf
jp
or
in
bound
mov
mov
stc
jp
out
out
adc
scas
call
fmul
mov
mov
xchg
dec
jns
xchg
enter
cli
rorl
in
dec
push
js
out
pusha
dec
add
xor
inc
movsl
pop
add
outsb
mov
pop
aaa
fidivrl
imull
loopne
jecxz
in
sbb
sbb
fsub
in
popa
inc
out
and
xor
gs
popf
sub
inc
loope
bswap
jne
enter
push
xchg
fidivrs
xchg
push
in
push
and
ret
movsl
xlat
loope
dec
dec
scas
das
repz
enter
je
push
mov
sub
mov
add
fcompl
repz
enter
dec
xchg
xchg
iret
pop
icebp
dec
pop
ds
cld
cmc
mov
inc
inc
jmp
pop
aaa
nop
inc
js
insl
inc
mov
fadds
dec
in
cmp
jnp
cmpsb
jae
xor
jmp
inc
xchg
mov
xchg
or
les
jl
or
pop
mov
pusha
leave
mov
mov
fsubrs
sbb
cmp
push
mov
sub
push
pop
mov
lcall
fcomp
mov
into
push
lcall
and
ret
xchg
jbe
aas
push
dec
ret
push
jle
in
dec
or
imul
orl
bound
push
jne
inc
push
movl
es
sbb
push
xor
lret
ret
jo
mov
fsub
dec
dec
lret
arpl
fidivrl
test
jae
ss
jl
mov
iret
xor
adc
or
and
adc
shr
sbb
dec
inc
mov
jbe
sahf
mov
push
mov
mov
scas
outsl
ds
ja
lods
sbb
ja
mov
xor
test
pop
dec
xchg
movsb
or
pop
adc
pop
add
notb
push
clc
dec
repz
add
mov
es
inc
or
out
popa
jge
mov
jmp
push
mov
push
jl
mov
push
mov
insl
out
push
lds
in
outsb
push
daa
xchg
mov
push
imul
mov
xchg
lcall
jle
ret
int3
push
imul
dec
mov
mov
roll
push
rcll
lret
dec
push
frstor
iret
adc
daa
dec
fwait
sbb
adc
mov
sbb
negl
push
add
jbe
mov
pushf
sti
sub
repnz
jb
cmp
xchg
mov
cmp
and
mov
out
pop
jb
jb
pop
cmp
movsl
push
dec
pop
sub
pop
iret
mov
push
xor
fidivl
cmp
inc
inc
push
loopne
movsb
data16
out
data16
and
mov
gs
aam
in
push
push
lds
push
push
sub
rorl
mov
sbb
test
inc
mov
and
xor
sub
mov
out
mov
subl
test
jl
push
xor
sub
dec
cmp
loopne
xor
dec
jl
or
je
jp
jns
inc
cli
push
push
pop
push
fmulp
cmp
out
adcb
mov
es
xorb
out
test
xchg
xor
jbe,pt
call
aas
and
es
sub
fnstcw
cmpsb
pop
cli
or
and
push
pop
cmp
into
les
movl
aad
mov
out
xchg
adc
stos
push
push
das
push
push
jbe
jge
bound
mov
dec
je
mov
add
sub
sub
flds
mov
subl
out
aas
mov
xlat
mov
bound
lret
pop
orb
lods
xor
imul
dec
sbb
mov
insl
inc
das
mov
jmp
or
cld
es
fcmovbe
mov
push
fists
pop
or
mov
mov
mov
jle
stos
daa
push
mov
cmp
inc
daa
insl
lret
push
fdivrs
bound
pop
cs
ja
out
psrad
add
adc
js
dec
jl
int
xchg
fdivrl
ja
leave
pop
xor
pop
std
mov
and
ss
lock
jbe
jmp
dec
push
dec
adc
push
fisubrl
jbe
mov
add
cs
outsl
sub
iret
mov
std
es
xor
inc
test
xchg
jb
lcall
pusha
pop
mov
mov
mov
lcall
jns
call
call
fistpll
jge
add
mov
dec
iret
iret
push
js
xchg
bound
out
subl
push
imul
pop
jmp
adc
lea
outsl
dec
shll
mov
jl
fcmovb
fiaddl
push
adc
aam
cwtl
push
ss
mov
xchg
mov
mov
sbb
push
and
imul
stos
fwait
icebp
iret
inc
pop
cmp
adc
daa
in
xlat
xchg
aaa
fidivrs
jp
xor
mov
mov
mov
negb
sarb
mov
or
das
bound
inc
or
out
lea
mov
flds
mov
jne
iret
sub
inc
pop
push
setle
jb
outsl
repnz
ja
int
adc
mov
pushf
push
push
adc
jl
mov
mov
sti
iret
pop
cmp
xchg
or
adc
dec
mov
bound
pop
insl
jne
in
sbb
push
sub
mov
ret
ds
repnz
out
test
aaa
enter
insb
xor
sbb
jo
mov
adc
cmp
sbb
sub
pop
sahf
mov
jmp
ss
out
xchg
shl
out
fwait
dec
mov
mov
dec
jne
int3
scas
imul
mov
and
xchg
subb
pop
or
lock
xor
ficoml
xor
gs
adcb
mov
inc
push
push
sbb
cmp
lret
pop
fsubrs
lret
xor
mov
adc
shlb
xchg
mov
adc
rsqrtps
fxsave
add
sub
imul
lret
push
sti
adc
mov
pop
hlt
dec
lods
mov
adc
ljmp
lods
jns
dec
sbb
sbb
into
push
add
sub
sarb
aam
push
jle
mov
mov
sub
cmc
ja
test
lods
xchg
cmp
pop
dec
sbb
jle
cs
movsb
cltd
push
xor
mov
vpshlb
enter
daa
mov
clc
shlb
inc
lret
arpl
daa
sub
adc
insl
insl
int
sub
rcll
sbb
xchg
cltd
mov
pop
mov
rorb
mov
mov
pushf
insl
lret
into
popf
loop
jo
into
fwait
cli
add
add
xlat
out
inc
sub
mov
leave
pop
jns
iret
loop
mov
loope
mov
insb
rcll
cld
adc
sub
ljmp
sahf
adc
add
push
loopne
sub
sbb
cmp
into
ds
lcall
rclb
js
jmp
pusha
js
inc
adc
mov
pop
xchg
lods
fldcw
mov
test
mov
imul
leave
jae
pop
lds
xchg
sub
add
loopne
xor
inc
aad
jmp
push
mov
push
cmpsb
inc
adc
fdivrl
pop
cwtl
push
dec
imul
dec
xchg
cmp
lret
mov
mov
and
push
arpl
adc
pop
les
jbe
popa
mov
or
movl
iret
and
sbb
sbb
inc
pop
std
add
lock
cmp
xor
xlat
les
imul
les
pop
sub
fmuls
insb
dec
adc
pop
xor
stos
int
xor
in
outsb
xchg
push
push
inc
dec
or
sub
cld
shll
ljmp
inc
pop
fsubrl
push
pop
mov
hlt
xchg
xor
inc
pusha
jp
leave
jnp
outsb
fwait
lea
loop
das
imul
sbb
sub
loop
and
cli
mov
rcrb
clc
mov
popa
jbe
xchg
sbb
lcall
mov
add
and
cli
dec
jb
sub
push
stos
push
sub
cmp
outsl
aas
rolb
fcmovnu
push
mov
daa
and
mov
sbb
movaps
mov
aam
mov
pop
push
push
pop
and
mov
push
add
and
pop
mov
dec
ljmp
aad
sbb
sbb
scas
or
lods
lods
mov
mov
or
stos
cwtl
xor
das
adcb
insl
mov
and
dec
pop
and
repz
inc
lods
ret
addr16
arpl
or
lods
add
pop
sahf
fisubs
jnp
in
xchg
sbb
push
mov
shr
pop
push
xchg
fs
pop
stos
and
adc
in
jb
es
mov
pop
sub
push
or
xor
movsb
cmc
pop
and
les
inc
loopne
mov
in
bound
mov
cmp
jne
int3
xchg
inc
dec
sbb
dec
es
out
fimuls
adcb
aaa
orb
pop
data16
pop
jnp
sarl
stos
addl
mov
mov
push
rorb
pop
pop
pop
add
fsubrl
aam
cwtl
adcl
andl
bound
fidivrs
bound
dec
dec
adc
fdivrs
sbb
sub
push
push
pop
iret
mov
into
enter
fists
aam
outsb
shll
push
lidtl
mov
insb
cli
lods
pop
push
jnp
insl
test
jns
mov
leave
inc
cmpsl
sbb
das
inc
repnz
bswap
arpl
pop
repnz
cmpsb
out
add
fwait
sub
lret
in
xor
data16
xchg
inc
iret
in
dec
insb
sub
jb
pop
adc
push
mov
pushf
push
push
test
arpl
outsb
insb
ja
push
prefetcht1
mov
into
aas
cwtl
add
scas
jp
fwait
lods
pop
fdivrs
inc
jns
daa
je
pop
pop
and
sbb
pop
add
push
roll
cmp
sbb
push
pop
ljmp
xorb
sub
mov
int
mov
movl
xchg
mov
and
out
aad
sbb
gs
in
pop
and
dec
ficomps
dec
jnp,pt
xchg
sbb
leave
fidivrl
pop
push
fisubrl
sbb
enter
add
test
enter
pop
pop
pusha
bound
orb
sahf
dec
jl
or
fadds
mulb
popl
cltd
and
mov
mov
sub
jmp
out
xchg
or
bound
mov
hlt
inc
mov
pop
dec
pop
xor
arpl
ss
adc
fiadds
inc
push
xchg
push
cwtl
add
cmp
and
jno
push
add
lret
mov
push
repz
bound
or
enter
pop
mov
das
mov
add
xchg
mov
or
rol
pop
xchg
lahf
push
test
dec
push
int
int3
jl
ljmp
jle
xchg
jb
sub
xchg
inc
repnz
mov
stc
mov
jp
inc
sub
in
fnstcw
adc
or
cmp
xor
pop
fwait
popf
or
sbb
xchg
pop
xchg
dec
xchg
add
xchg
xlat
push
fnsave
sbb
inc
lcall
aam
jno
lock
mov
mov
cli
add
dec
dec
sub
dec
ljmp
into
mov
fdivs
mov
dec
mov
pusha
pushf
sub
ss
add
in
std
stos
jle
push
mov
pop
adc
loope
shlb
and
fbstp
loopne
jecxz
mov
push
loop
pop
in
mov
xchg
sub
sub
arpl
cld
cmp
sbb
sub
sbb
lds
bound
push
js
fistpl
sbb
pop
xorb
and
cmp
cli
icebp
sysenter
outsl
mov
shr
sub
inc
pusha
popl
aad
std
xor
mov
push
sub
loop
cld
push
repz
out
mov
mov
call
dec
fbld
sbb
out
mov
lods
push
mov
cli
fldcw
push
sahf
add
cld
subl
push
je
adc
add
fadd
into
jecxz,pt
and
popl
test
mov
bound
icebp
les
push
leave
or
test
mov
notrack
cmpl
and
sub
or
ret
cmovns
rcr
push
xlat
mov
int3
inc
int3
push
xchg
and
jmp
lock
push
rorb
addr16
mov
mov
insb
jecxz
mov
cmpl
mov
psrad
mov
xchg
push
aad
jo
xor
mov
xor
dec
xchg
cmp
xor
pop
es
outsb
mov
dec
out
xor
push
mov
mov
mov
sbb
fmulp
sbb
push
sub
sbb
mov
in
push
xchg
inc
inc
outsb
sbb
dec
mov
les
je
sbb
in
lods
sub
adcb
insb
jg
lret
incl
mov
mov
mov
cmp
aam
lods
push
and
cld
mov
xor
sub
mov
sbb
and
push
cmp
mov
insl
pop
add
push
push
hlt
and
jns
lods
arpl
mov
push
dec
icebp
outsb
pusha
adc
fidivl
xchg
add
pxor
outsb
cmpsb
jp
and
cmp
iret
leave
ret
sbb
jbe
push
and
pop
ljmp
sti
mov
or
add
add
decb
insl
repnz
sub
fdivrl
dec
mov
add
mov
and
outsb
fimuls
mov
nop
mov
ss
loope
popf
add
mov
lret
lock
mov
jle
lock
test
incl
inc
push
push
mov
dec
movd
pop
inc
push
mov
inc
pop
es
and
xor
and
jae
mov
fs
dec
push
sbb
add
bswap
dec
jnp
add
sbb
xchg
cltd
orb
and
sbb
jbe
les
pop
pop
shll
pop
mov
insb
mov
daa
shrl
lea
scas
out
mov
and
lcall
in
dec
test
jnp
bound
lahf
dec
cli
jge
outsb
jle
fsqrt
push
rcrl
jbe
mov
add
mov
sub
ljmp
jle
andl
test
mov
xor
jo
push
imul
sbb
fbld
adc
push
adc
bound
lods
xchg
mov
push
dec
mov
scas
dec
shlb
lret
adc
jae
adc
lds
dec
xchg
sub
add
lds
rorb
les
push
hlt
xor
mov
mov
jb
cwtl
fsubrp
adc
rorl
aad
cmp
push
ret
pop
mov
adc
addb
repnz
and
fs
int
push
mov
lcall
push
cwtl
insl
divb
xchg
addb
mov
push
es
outsb
pop
xlat
cli
insb
call
adc
mov
ret
in
sub
lea
mov
pop
in
cltd
jecxz
sbb
and
mov
mov
ljmp
mov
sub
mov
fldt
cld
add
sbb
shrb
out
lret
lea
jne
mov
or
ds
int
sub
mov
cmp
ret
in
pcmpgtb
lods
adc
jnp
aad
iret
adc
mov
adc
popf
mov
adc
out
fnstenv
stc
dec
fdivrp
lret
inc
mov
pusha
popf
inc
or
xchg
imul
jbe
adc
js
int3
xchg
out
pop
mov
mov
xor
xor
cmp
pop
hlt
inc
push
mov
cmp
push
inc
iret
aad
stos
xchg
and
in
or
cmp
icebp
insb
and
rorl
je
add
addr16
jnp
jns
int
pop
ljmp
xor
aad
dec
stos
lea
fwait
cltd
push
hlt
mov
mov
cmp
cmp
cmp
fcompl
sbbl
pop
out
loop,pt
insl
lcall
inc
sti
inc
jno
fidivl
out
mov
inc
aad
das
popa
pextrw
xor
jg
es
cld
hlt
xor
call
enter
ja
pushf
push
mov
pop
cli
popf
cwtl
int
clc
xor
lock
loopne
arpl
sbb
mov
scas
lods
fwait
xchg
pop
add
pop
aam
fimuls
inc
jnp
sub
pop
gs
xlat
push
push
orl
sub
sbb
or
pop
adc
mov
or
mov
popa
pushf
aas
stos
cmpsb
sub
adc
cmp
or
rorb
sarl
test
push
mov
roll
jbe
adc
lods
sbb
sub
inc
out
add
rorb
scas
mov
xor
sahf
test
std
and
dec
mov
in
xchg
out
dec
lret
popa
mov
pop
gs
mov
mov
pop
cmp
iret
adc
movl
pushf
cmp
inc
decb
cmpsb
jmp
mov
mov
gs
cmpsl
jmp
insb
jo
cwtl
rcrl
sbb
jge
jle
push
jecxz
mov
insb
scas
frstor
pop
jecxz
and
jp
iret
pop
imul
xor
push
ret
dec
push
stos
mov
push
ljmp
in
loop
pop
push
dec
jl
in
lret
shlb
lods
and
xor
aam
mov
stos
ss
dec
push
mov
and
test
je
pop
push
dec
mov
scas
aam
scas
ret
adcb
xor
mov
mov
sbb
fisttpl
jl
xor
lcall
shll
lcall
mov
mov
fstl
push
fistps
lods
xchg
sub
loopne
dec
inc
aaa
pushf
push
testb
pushf
inc
pop
ret
into
cs
dec
outsb
xor
jecxz
dec
or
data16
mov
cmpb
out
lcall
lock
in
pop
push
xchg
inc
and
ss
bound
mov
lea
imulb
sbb
add
data16
cmp
mov
ss
popw
stos
mov
mov
repz
call
xchg
jae
push
dec
add
scas
cmp
or
shlb
pop
aaa
mov
std
adc
xlat
pop
cmp
xchg
sub
xchg
xor
adc
in
inc
add
and
pop
pop
xchg
xor
sbb
test
jecxz
insl
subl
xchg
jns
adc
roll
sarb
pop
xchg
sub
mov
lock
cmpsb
rclb
push
pop
in
test
in
mov
aad
jae
pop
dec
pop
mov
lret
ds
inc
ret
mov
sbb
and
pop
xchg
jno
std
xchg
and
sub
xor
mov
xor
xlat
out
jecxz
mov
roll
lcall
lcall
pop
aas
andb
mov
pop
inc
repz
lret
pop
sbb
mov
jo
stos
cmp
mov
lock
sbb
mov
int3
cmp
addr16
pop
push
iret
mov
mov
mov
fsubrl
stos
add
out
mov
mov
gs
and
ret
dec
into
int
movsl
jecxz
loop
and
cmp
in
mov
xor
int3
mov
mov
jmp
adc
pusha
gs
out
sub
orb
mov
sub
loope
lahf
aam
rol
out
rcrb
inc
and
add
xor
sub
pop
xchg
leave
push
mov
mov
ret
adc
push
add
scas
out
push
loop
mov
adc
aaa
mov
clc
js
jnp
test
pop
mov
loopne
adc
lahf
movsl
hlt
gs
mov
repnz
es
fiadds
or
lods
sub
adc
pop
outsb
lahf
stc
out
xor
or
mov
bound
aas
decl
dec
ret
aas
outsb
push
jbe
mov
xor
push
scas
adc
in
jmp
jbe
lea
mov
and
xor
dec
mov
sbb
inc
mov
mov
xchg
cmpps
jge
loope
mov
mov
add
shlb
loopne
aad
push
cmpsb
push
pop
sti
hlt
add
in
ja
or
sbb
adcb
pop
cmp
pop
imul
iret
pop
dec
xchg
add
loop
mov
ret
dec
outsb
mov
fs
fwait
js
adcb
js
cmp
mov
popa
mov
fistl
cmp
cmp
pop
in
pop
mov
data16
popa
iret
subl
xchg
sub
lahf
pop
or
pop
stos
push
or
and
mov
pop
sub
and
xor
xchg
xchg
or
cs
adc
xchg
and
ljmp
sub
rclb
adc
sbb
push
lods
sub
insb
xlat
sbb
mov
adc
ret
loop
cmpsb
lods
pusha
xchg
cwtl
test
mov
ss
mov
lods
arpl
imul
push
rcrl
stos
adc
xchg
cmpsl
xor
and
jno
inc
imul
outsl
jmp
xchg
stos
jno
rcll
pop
xor
pop
sbb
outsb
mov
lcall
hlt
inc
in
mov
dec
jge
aad
addr16
cld
out
xor
jl
scas
xor
test
aad
sub
or
and
fbld
sbb
je
daa
bound
and
mov
shll
arpl
inc
mov
push
jnp
xlat
cli
out
push
ret
addl
mov
jp
mov
rorl
sti
dec
out
dec
inc
lock
xchg
std
rcrb
in
pop
mov
lock
out
je
add
sahf
roll
lret
xor
shl
cltd
cmp
rcrb
push
dec
gs
pop
lock
ja
mov
in
dec
cmp
sbb
mov
xor
add
lret
and
pop
incl
jmp
repnz
repnz
mov
lock
mov
mov
pop
loopne
jbe
rolb
jb
and
sub
push
jne
insl
mov
mov
pop
addr16
push
mov
loop
fidivl
push
jg
fmuls
ret
ja
out
ds
mov
jecxz
jno
xchg
jl
fstl
xchg
call
js
dec
sub
fdivp
je
and
mov
push
mov
loop
lds
rcrl
mov
sbb
inc
call
sub
cmp
stc
or
cmp
mov
jns
loope
outsb
repnz
jg
dec
add
std
cmpsb
decb
in
jle
pusha
iret
pop
adc
jb
mov
leave
mov
sbb
mov
movsb
mov
and
or
stos
sub
out
in
int3
xor
icebp
adc
lods
int
pop
xchg
adc
outsb
movsl
sub
out
inc
mov
int
out
rcr
lods
mov
sbb
imul
and
mov
setb
clc
sbb
pop
fldl
scas
jmp
xor
cwtl
jmp
mov
adc
mov
cmc
jmp
insb
push
and
mov
cli
xchg
cli
lods
inc
fwait
push
pop
aam
dec
mov
fiaddl
aas
mov
stc
mov
xor
or
mov
push
sub
cltd
pop
cld
cmp
pop
scas
lahf
cmp
cmc
sbb
aas
mov
nop
and
sbb
enter
mov
mov
incb
mov
dec
pop
mov
push
ret
inc
mov
fnsave
dec
cmp
out
cmpsb
xchg
aad
scas
or
sbb
test
jb
mov
rolb
pop
cmc
mov
in
mov
xchg
cmp
mov
jl
mov
mov
cs
insb
dec
ret
add
jnp
xchg
cmp
jnp
xor
mov
sahf
push
rcrb
mov
test
push
hlt
out
repnz
adc
rcll
fwait
ja
std
mov
test
jl
fimuls
je
add
add
inc
cmpsl
dec
push
sub
mov
jp
xchg
pop
pop
gs
xor
inc
xor
addr16
xchg
dec
lock
subb
mov
iret
daa
jne
outsl
xor
fiaddl
xor
outsl
jo
ss
and
inc
jno
mov
je
cld
xchg
lcall
sbb
sub
jecxz
pusha
fsubl
lock
int
xchg
pop
pop
pusha
aas
or
mov
lea
push
lret
inc
fdivl
stos
adc
pop
xchg
aaa
dec
mov
dec
shrl
mov
or
es
mov
pop
fcmovne
push
and
jbe
stos
add
lahf
or
jecxz
sbb
or
adc
xchg
mov
addb
std
in
push
stc
inc
mov
push
lret
jno
pop
cltd
aad
imul
sti
mov
fidivs
das
lods
out
adc
pop
fdivrs
test
push
cmp
aas
and
movsl
add
mov
push
or
sbb
out
rclb
lods
rcrl
stos
stos
movsb
xor
rol
and
sub
dec
lret
pop
push
fstpl
mov
lret
push
sti
mov
push
and
jae
jmp
enter
cmp
adc
push
or
mov
pop
and
sahf
or
jl
lret
fwait
insl
and
nop
movsb
push
scas
sub
inc
imul
popf
sti
and
push
out
mov
xor
pop
jnp
enter
fcomps
and
daa
iret
xor
sbb
sub
inc
jge
xor
adc
mov
ja
mov
negl
push
int3
sbb
jecxz
xchg
cmp
pop
imul
popa
sarb
add
or
xchg
test
nop
ficompl
popa
lods
mov
or
dec
sub
fs
mov
inc
daa
test
xor
mov
jp
stos
xor
dec
or
adc
lea
arpl
xlat
add
into
addr16
inc
pop
adcl
pushf
ret
sahf
sub
push
push
add
inc
divb
data16
adc
dec
cltd
loop
mov
dec
push
shlb
movsb
into
push
and
xchg
add
pop
add
push
ja
mov
jnp
shlb
fistl
lahf
repz
lcall
jecxz
test
and
nop
in
jbe
mov
push
push
xor
aad
or
xchg
jno
jae
cmp
push
roll
fadds
clc
mov
inc
inc
fs
push
and
inc
imul
add
dec
mov
mov
incl
bswap
push
cmp
sbb
ss
xor
add
push
andl
rcll
ja
jnp
shl
cmp
sub
out
dec
fstpl
xchg
idivl
pushf
ds
mov
sbb
fisubrl
mov
ja
jno
fisttpl
push
mov
dec
mov
in
loopne
push
adc
jo
lret
inc
lcall
cmp
sahf
in
icebp
pop
sbb
nop
or
xchg
out
add
adc
jg
lods
push
lcall
cwtl
pushf
sub
pop
loope
insb
int
pop
dec
mov
or
xchg
adc
dec
inc
ret
ret
or
sub
call
or
xor
jnp
push
sbb
clc
mov
rcrb
and
or
aaa
rcrl
inc
scas
and
push
lods
cli
int3
arpl
js
stos
push
shrl
xchg
call
push
push
push
gs
repz
push
jecxz
out
sub
mov
out
jae
sarb
cmp
jno
xlat
add
mov
jmp
mov
and
fdivl
imul
mov
das
movsl
or
das
mov
and
incl
cmp
arpl
pop
mov
mov
hlt
cli
lods
dec
push
cmp
in
cli
jno
pop
add
arpl
adc
xchg
pop
enter
dec
xchg
lret
jle
loope
popa
pop
shll
adc
sub
jae
add
arpl
and
loope
adc
adcl
mov
sti
or
push
mov
fisubs
loopne
pop
push
fiadds
jbe
add
int3
and
scas
sub
pop
push
jns
mov
jbe
dec
add
fidivl
fdivl
ljmp
fisttps
cld
mov
clc
mov
dec
push
sbb
dec
loopne
cmpsl
imul
je
ds
cwtl
mov
inc
fwait
xor
outsl
or
jl
in
int
jg
es
sub
fcmovb
aas
dec
aad
fildl
out
mov
adc
mov
or
inc
push
mov
jae
xor
ret
add
inc
push
outsl
aam
loopne
mov
fimuls
add
out
jge
or
lods
leave
cmc
out
pop
inc
or
add
imul
and
sub
jge
cld
push
mov
pop
pusha
or
popa
sub
cltd
nop
stos
out
jmp
stos
out
inc
fbstp
xor
xor
push
lock
ret
in
sti
leave
xchg
ficomps
pusha
jb
addb
notb
in
inc
mov
imul
or
sbb
lods
cmp
lahf
jp
int3
xchg
xchg
push
xchg
sbb
es
push
jmp
data16
jl
outsb
nop
in
sub
sbb
rcrb
test
push
pop
mov
je
stos
xchg
inc
and
xor
push
pop
push
adc
dec
sub
push
sbb
xor
and
lods
idiv
or
sbb
leave
outsb
jp
mov
lahf
dec
mov
mov
insl
loop
pop
cmp
mov
and
cmp
imul
enter
adc
sbb
push
add
xor
sub
ljmp
fbstp
je
jge
xchg
mov
xchg
loope
mov
outsl
cmp
jle
xchg
arpl
scas
loop
stos
mov
jo
sahf
subb
mov
cmpb
pop
daa
aam
sub
dec
pop
jg
jge
xor
fildl
in
push
sub
daa
clc
mov
xor
cmp
lcall
mov
lds
repz
out
aas
movsl
out
dec
cmp
fiadds
fldenv
hlt
mov
jl
jp
mov
xchg
fsubs
dec
cwtl
das
push
dec
dec
xchg
adc
xchg
push
pop
sub
xchg
add
add
dec
jns
cmp
insb
pop
mov
cmpsl
and
push
mov
push
adc
loop
jp
popa
mov
dec
fisubs
mov
pop
cmp
add
mov
sbb
scas
ss
pop
imul
and
push
push
dec
jae
push
and
ficoml
add
add
movsl
lods
or
ljmp
fs
jmp
fnsave
iret
pop
stos
scas
mov
fsts
cmpb
inc
xchg
xorl
adc
fnstcw
dec
xchg
lods
dec
inc
cmp
in
aad
repz
mov
push
push
bound
jae
push
hlt
iret
ljmp
inc
stos
push
lea
xor
pusha
int
jae
xor
lret
dec
xchg
out
pop
mov
and
push
pop
sbb
mov
sbb
std
cltd
pop
add
and
cmpsl
arpl
ds
cmc
and
adc
idivl
ret
clc
iret
push
mov
pop
gs
dec
repnz
fildl
loop
lcall
repnz
lods
jae
test
ret
into
out
mov
call
jecxz
pop
or
inc
dec
int
lret
xchg
mov
or
cmp
sbb
out
push
negl
ror
pushf
cmp
call
cmp
and
adc
ljmp
dec
push
inc
mov
cmpsl
pop
xchg
dec
inc
out
and
bound
lret
xor
in
adc
fcom
adc
jmp
pop
xchg
jmp
cmp
subl
add
sub
ds
insb
push
dec
jne
fsts
nop
iret
fiaddl
out
mov
data16
scas
sub
pop
adc
push
mov
dec
ljmp
daa
and
xchg
push
dec
sbb
fcoms
leave
mov
fdivs
pop
lea
fistl
jae
test
sub
jl
int3
jl
mov
jg
cwtl
test
xorb
mov
std
pop
fstpl
stos
add
icebp
es
mov
inc
fdivrl
jp
add
leave
repz
hlt
push
mov
sbb
lods
xchg
push
xor
sub
add
movsb
movsl
lcall
xchg
pop
dec
adc
mov
dec
or
arpl
negb
movsl
mov
jno
sti
int
cmp
xor
sti
jge
fwait
cmpsb
xchg
sbb
push
inc
pop
mov
pop
dec
loope
test
outsl
mov
mov
fucomip
mov
sbb
mov
jl
mov
or
jno
pop
sbb
sti
xor
fcoml
hlt
sbb
cmp
nop
mov
addb
imulb
lahf
pop
sbb
mov
pop
pop
mov
icebp
jae
mov
sbb
push
es
adc
test
push
mov
jnp
sbb
inc
mov
mov
lret
xorb
ret
adc
sti
pop
clc
das
xchg
iret
dec
pop
pop
push
mov
cmp
or
lods
push
hlt
jbe
lcall
mov
and
rcrb
in
and
std
rcrl
sarb
repz
sub
or
push
dec
pop
psrlw
fdivrl
inc
mov
stc
aam
movsb
or
xchg
scas
pop
lret
dec
or
mul
jle
iret
lds
outsb
mov
xchg
test
sbb
push
xchg
popf
adc
push
fs
imul
dec
ds
xchg
outsb
pusha
shrb
sbb
push
xor
iret
aad
stos
pop
lock
mov
sub
dec
dec
push
mov
or
sub
adc
inc
xchg
mov
scas
fisttpl
lea
sub
xor
sub
jbe
rcrb
adc
les
sbb
push
sbb
or
mov
cmp
sbb
pushf
aas
rorb
mov
in
inc
jo
add
jmp
xor
dec
rcrb
iret
xor
inc
imul
sbb
or
call
xchg
cwtl
push
pushf
mov
jl
rolb
jp
cs
bound
int
mov
sub
pop
fwait
aad
in
add
xlat
xchg
scas
fistpl
sbb
cmp
mov
cmp
mov
in
ss
pop
mov
push
xchg
mov
daa
stos
insb
mov
mov
fisttpl
sub
mov
loop
es
pop
shr
ja
loope
mov
inc
dec
push
fiadds
lea
cmpsl
stos
xchg
stos
arpl
movsb
fidivrl
lret
and
pop
sbb
outsb
mov
mov
daa
andl
xchg
fistpl
push
xor
mov
fistpll
subb
xlat
test
mov
lahf
shlb
dec
aad
lahf
mov
imul
push
adc
lds
pop
mov
mov
sbb
call
pop
jae
add
and
fs
int3
stc
shrb
xor
push
test
dec
dec
jb
xlat
dec
pop
popf
imul
xchg
and
rcl
lret
jecxz
jp
mov
mov
in
inc
fidivs
inc
lahf
stos
inc
int
negb
repz
dec
sbb
mov
xor
mov
inc
in
mov
ljmp
xchg
push
fcoml
mov
sub
sahf
imul
mov
push
rolb
xchg
mov
mov
dec
pop
imul
jg
xor
jecxz
pop
mov
adc
or
mov
add
psubq
mov
in
inc
jl
call
lret
inc
or
push
mov
insl
arpl
repnz
jns
cs
pop
out
mov
arpl
out
int3
mov
dec
cwtl
sub
jge
int
mov
pop
or
adc
pop
pop
xchg
xchg
sahf
jl
push
lcall
mov
js
das
xchg
cmp
jae
aam
sbb
add
js
outsl
ja
push
daa
mov
ds
push
mov
fdivr
pushf
inc
out
cmp
jle
xchg
mov
pop
loope
das
lock
pop
push
pusha
test
rolb
push
push
sub
aaa
icebp
xchg
cwtl
push
mov
lods
xchg
movsb
push
test
sahf
fistl
adc
aas
sub
ljmp
sbb
xchg
or
lahf
cmc
sbb
cld
imul
fcmovb
sarb
mov
pop
mov
mov
fs
cmp
ret
inc
mov
cmp
lret
nop
clc
pop
out
lods
mov
add
ret
repnz
mov
mov
inc
jae
sbb
adc
xor
arpl
fists
mov
scas
dec
sub
adc
cmp
stc
inc
jns
xchg
jg
add
idivl
ret
imul
pop
pop
mov
addr16
iret
test
lods
lahf
subl
aaa
jmp
in
add
xchg
mov
imul
pop
mov
movsb
loope
mov
cmp
or
adcl
adc
stc
mov
pop
aas
jmp
xor
sbb
fsubrs
mov
sub
cmp
mov
lahf
add
lea
lret
test
scas
add
popa
lds
aad
mov
and
jp
cmpsl
lahf
mov
pop
jl
nop
outsb
adc
push
jg
ds
add
cmpsb
in
adc
or
sbb
daa
add
incl
cmpsb
xor
jmp
mov
cs
shll
inc
inc
leave
dec
xchg
dec
xor
or
pop
fdivrp
jmp
outsl
imulb
mov
pushl
mov
in
xor
jb
ret
xor
mov
repz
mov
xorl
cmp
je
xor
dec
mov
and
sbb
jg
inc
pop
dec
xchg
ss
push
push
scas
and
in
pop
enter
jno
fwait
out
push
shlb
imul
sbb
mov
inc
or
out
or
xorb
mov
aad
ret
xorb
fdivrs
enter
mov
lock
xchg
into
inc
aam
stos
push
xchg
imulb
jg
jp
inc
arpl
dec
sub
xchg
mov
insb
in
mov
xor
mov
inc
mov
inc
dec
mov
cli
mov
popa
mov
push
imul
jge
or
insb
mov
out
and
je
int3
push
inc
mov
test
cmp
stc
outsl
ficompl
xor
sahf
ds
fimuls
cmpsl
je
movsbl
aas
sahf
xchg
pop
mov
test
inc
call
fsub
fwait
sub
mov
jns
std
rcll
or
mov
fidivl
hlt
sub
pusha
call
sbb
jp
std
xchg
mov
jp
stos
mov
lock
dec
stos
stos
popf
sub
iret
adc
mov
add
jmp
or
push
bound
cmc
cmp
adc
and
stos
jne
and
dec
jl
push
ds
or
jnp
mov
pushf
out
jecxz
sti
inc
les
mov
mov
cmp
pop
sahf
xor
dec
push
mov
xchg
popf
rcll
test
mov
push
inc
xchg
mov
mov
jae
addr16
test
push
out
mov
call
jp
sub
mov
mov
loop
adc
subb
dec
adc
jle
inc
xchg
pusha
dec
outsl
xor
mov
ficomps
mov
xor
adc
cmc
sbb
outsb
sub
jns
and
fsqrt
xchg
add
and
xlat
pop
fistpll
loop
imul
lea
cs
dec
pop
inc
shlb
sub
xchg
pop
fdivs
ljmp
lcall
pusha
andl
rorb
test
lret
dec
call
xchg
lret
outsb
lods
lret
cmpsl
je
and
xchg
js
xchg
lcall
lods
out
mov
imul
ljmp
cmpps
aaa
insl
sbb
xchg
adc
sub
xlat
fs
inc
mov
inc
jo
pop
fidivrs
das
dec
cmp
subb
shlb
aad
dec
dec
in
loop
mov
arpl
movsb
jbe
in
jnp
push
mov
scas
or
in
or
push
mov
je
lcall
adc
cs
dec
addr16
stc
cmp
xchg
cmp
adc
jnp
ret
push
in
xor
jns
outsl
adc
scas
stos
in
fs
pop
sub
xchg
mov
push
repnz
in
mov
lcall
sub
push
fistpl
decb
sub
push
hlt
icebp
push
jne
rcll
in
jge
cld
pop
cmp
mov
xchg
pop
lret
jecxz
shrd
push
repnz
pop
inc
mov
out
push
std
out
dec
mov
and
ss
repnz
inc
mov
pop
cwtl
popf
leave
adc
and
cmc
jp
pop
mov
lds
lcall
nop
pop
push
pop
insb
lahf
push
out
add
mov
cmp
mov
xchg
lods
int
jp
sub
fisubs
mov
lea
clc
jl
fidivrl
add
sub
sbb
loop
and
mov
push
xor
out
es
negl
outsl
outsb
lea
jg
sahf
ret
xchg
lahf
and
mov
out
es
inc
lret
out
jns
test
insb
mov
rorb
sbb
push
out
push
adc
mov
pop
cli
xor
pop
in
xchg
ret
inc
rclb
push
iret
inc
dec
mov
add
ss
xor
mov
push
inc
sub
iret
mov
inc
daa
lods
test
outsb
test
mov
push
shlb
or
loopne
movsb
xchg
in
addl
adc
inc
jmp
xchg
cmp
mov
fdivl
inc
and
mov
xchg
icebp
pop
movsb
roll
out
push
xor
jae
fsubr
xor
mov
rcr
cmpsb
xchg
scas
jl
inc
icebp
shlb
mov
jp
popa
push
fstps
mov
xlat
xchg
xor
shrb
leave
mov
push
sti
orl
xor
ljmp
sub
push
jnp
insl
lret
pop
and
xchg
jb
les
loop
pop
aaa
mov
ljmp
jne
insl
push
inc
and
sbb
jg
push
out
data16
xor
dec
cltd
mov
jnp
into
jg
or
cs
adc
dec
outsb
mov
dec
leave
fisubrs
popf
es
adc
pop
add
cmp
xorb
es
rorb
xchg
in
xchg
sub
fmul
fsubrl
jnp
xor
iret
push
mov
js
lcall
inc
std
cwtl
xchg
or
ss
outsl
mov
stc
xchg
mov
mov
dec
inc
out
inc
cmc
push
dec
stc
adc
bound
stos
repz
push
or
xchg
pop
push
test
lret
jmp
jb
sub
cmp
repz
xor
xor
xchg
cmp
sbb
shr
ds
dec
scas
adc
sbb
fs
lods
jae
mov
mov
aad
sub
cs
je
pop
and
test
je
pop
adc
inc
xorb
outsl
dec
sbb
cwtl
xchg
mov
jb
in
cmp
adc
jp
fisttpll
mov
push
out
mov
cmp
in
jl
xor
mov
mov
enter
js
push
aaa
outsb
add
pop
neg
push
xchg
and
jne
push
mov
icebp
rorb
stos
xchg
aam
mov
pop
fidivrs
jns
cmc
stos
xchg
ds
or
mov
xchg
jns
or
and
cmp
rclb
out
add
ret
xchg
ficoms
arpl
adc
aad
jb
sub
shll
cmpsl
fldt
push
popa
jp
insl
ss
jne
and
out
jg
mov
jecxz
mov
push
scas
push
pcmpgtw
pop
std
ja
iret
sbbb
out
int3
ret
fisttpl
xchg
subb
jbe
icebp
andb
jle
xchg
mov
jns
xor
xchg
mov
jge
pop
xchg
in
dec
xchg
data16
add
mov
stos
fisubs
and
rorb
mov
jb
jl
dec
mov
adc
dec
stc
mov
mov
push
sub
cmp
xor
je
adc
out
push
out
insl
call
nop
xor
fldt
sti
pop
mov
dec
dec
not
repnz
jmp
and
into
sbb
jne
push
dec
arpl
mov
insl
shll
xor
xchg
inc
pusha
enter
inc
ret
inc
push
stos
movsl
xchg
bound
push
xchg
leave
inc
cli
testb
mov
sub
js
outsb
iret
dec
ret
jno
out
jecxz
fisubrs
pusha
lds
scas
hlt
dec
push
mov
movsb
je
xchg
daa
fsubl
in
or
push
jmp
rolb
inc
test
add
and
out
insb
lea
push
rorb
fwait
cli
sub
arpl
mov
mov
icebp
aas
push
sub
js
insb
add
jecxz
insl
mov
xor
lods
frstor
jns
pop
lods
jne
or
loopne
mov
push
jbe
xchg
xor
and
aam
add
jle
push
dec
xor
pop
insb
sbb
lahf
dec
mov
movsl
js
pop
lret
loope
ret
and
ret
cmpsl
addr16
out
ficompl
mov
lahf
xchg
dec
scas
cmp
ja
cmp
dec
sub
jle
or
push
xchg
add
mull
dec
dec
inc
stc
pop
pop
stos
cmp
bound
fadds
xor
mov
sahf
not
daa
adc
and
rorl
xor
sub
stos
xor
xchg
mov
or
sbb
call
push
sbb
imul
mov
cs
js
hlt
push
popf
mov
imul
ja
dec
into
or
xor
pop
es
aam
fisubl
cmp
mov
addr16
sar
or
mov
mov
int3
jl
jp
jge
aas
data16
test
cs
fstpt
sub
fstpt
popf
loop
and
dec
push
or
daa
mov
mov
lock
or
fdivl
pop
and
mov
pop
mov
xor
cmp
sub
dec
int
ret
mov
xlat
pop
adc
cwtl
sub
push
lea
shll
jp
ds
sbb
loopne
imul
jbe
dec
mov
xchg
jle
mov
mov
mov
lret
test
jb
push
mov
cmp
lret
stos
dec
pop
push
mov
xchg
adc
push
mov
das
push
movsl
ljmp
out
xchg
dec
xor
cmp
inc
mov
jae
sbb
inc
aad
and
xor
jge
addb
cltd
cmp
mov
or
pop
and
enter
cmp
cli
call
cwtl
inc
jbe
sti
mov
lret
mov
sub
notl
sbb
ret
sub
mov
pop
decl
jno
rorl
jecxz
dec
push
mov
inc
loop
xor
cmp
mov
clc
add
roll
scas
imul
outsb
mov
out
aaa
inc
adc
lret
jle
jns
fsubrl
xchg
pop
or
or
xchg
nop
sbb
cmp
ret
pop
mov
mov
das
add
mov
sub
stc
pop
iret
ja
nop
ret
add
test
push
out
inc
divl
lret
movb
out
std
dec
fwait
sub
imul
pop
push
mov
bnd
bound
push
sti
pop
or
dec
add
pop
pop
imul
push
cmp
lahf
adc
and
jecxz
cmpsl
sbb
cld
add
mov
ret
pop
test
or
mov
sub
xchg
ret
dec
cli
push
popf
test
or
xchg
inc
xor
ficoml
enter
xor
dec
es
sti
pop
addr16
std
inc
push
cmpsb
adc
cmp
in
out
lds
adc
in
aas
pop
jmp
xor
add
push
adc
push
push
mulb
mov
or
ds
enter
pop
xor
movsl
insl
cld
mov
mov
inc
ror
repnz
xchg
inc
and
mov
jg
mov
inc
scas
pop
pop
mov
pop
int
fidivl
adc
loopne
xchg
aad
push
cmp
and
jmp
lcall
ljmp
lds
dec
push
and
sbbb
push
jle
mov
adc
xchg
jg
loopne
fistpl
clc
test
adc
xlat
int3
shl
lea
sub
add
and
nop
jnp
cmpsb
jmp
cli
into
out
cmpsl
adc
ss
stc
sti
lcall
dec
fldt
fisttpl
or
fstpl
mov
popf
cs
dec
adc
scas
ja
add
jo
pop
les
popf
outsb
dec
push
mov
adc
rolb
add
xlat
mov
cmp
cmp
shrb
push
int3
out
cs
ja
jp
imul
scas
lret
dec
lea
jo
push
jmp
sahf
inc
push
mov
adc
cmpsl
outsl
xor
mov
or
sbb
mov
in
cmp
cs
cli
jo
mov
lcall
outsl
mov
rclb
jae
or
mov
mov
pop
sarb
jo
jb
dec
movsl
outsl
shl
mov
fisubrs
jg
out
mov
push
mov
jmp
inc
jle
and
in
jno
loop
sbb
lahf
mov
or
pop
sti
jl
jge
jl
cmp
mov
pop
dec
mov
or
fsubl
loopne
popf
cmp
leave
add
jg
pop
div
into
mov
in
popa
sti
fldcw
roll
and
lahf
pop
shlb
imul
loope
or
xlat
scas
mov
add
popa
rcl
ds
std
imul
mov
dec
jns
sti
xor
xor
int3
sub
bound
add
dec
out
pop
or
mov
mov
inc
add
rclb
cwtl
add
mov
cmp
xchg
push
add
sub
sub
sub
adc
iret
out
cltd
test
fldcw
jle
pop
outsl
insl
scas
in
fnstsw
shrl
rcll
xchg
pop
mov
shlb
xor
xchg
xchg
xchg
es
xor
sarl
fcmovne
cmp
inc
mov
xchg
mov
fst
arpl
test
dec
rcrb
aaa
incb
mov
test
out
test
popa
arpl
push
ds
imull
adc
pop
aas
sub
jle
leave
inc
cmp
je
dec
inc
int
pop
cmc
dec
jp
lcall
insb
mov
cmpsb
lods
loopne
scas
shl
mov
xchg
cld
lahf
jp
add
testb
pop
inc
cmc
jnp
lods
add
lcall
jmp
fsub
cmpsb
mov
push
pop
fcomps
add
sub
pop
add
mov
xor
movsb
push
pop
es
jae
enter
rclb
cmp
int
in
mov
push
push
jl
popf
xchg
es
cmp
repz
fisubs
pop
push
icebp
fldt
pop
jp
shrb
popa
hlt
popf
insl
out
mov
pop
push
push
xor
scas
leave
scas
jmp
jg
fs
imul
mov
jne
cmpsb
pop
xchg
je
out
jl
arpl
jecxz
jns
enter
adc
jecxz
cmpsb
and
lret
sbb
or
mov
pusha
cltd
xor
ret
ret
repz
out
xor
cld
mov
push
jp
orl
imul
xchg
sbb
mov
insb
pop
lods
fnop
ret
xchg
ret
jne
rcrl
xchg
mov
lahf
insl
mov
movsb
push
xchg
in
fiaddl
cli
out
inc
out
movsb
sbb
in
js
loop
fisttps
jmp
sbb
cmp
in
mov
movl
stc
mov
adc
adc
fadds
imul
ret
fmull
inc
aad
sbb
test
xchg
mov
jbe
sbb
jge
xor
dec
and
and
in
dec
loope
pushf
mov
icebp
roll
lea
leave
insl
mov
mov
jge
mov
sbb
push
outsb
mov
gs
push
roll
lods
decl
inc
cmp
sub
mov
lret
and
jp
icebp
add
cmpl
pushf
nop
dec
cmc
lea
xor
jp
mov
sub
gs
movsb
sbb
mov
popf
adc
ret
push
lret
pop
ja
ret
or
sub
add
sbb
pop
mov
in
add
or
dec
lahf
fidivl
inc
pop
inc
movsb
pop
ds
sub
testl
je
cmc
pop
or
out
dec
jg
mov
fcomps
or
adcl
test
adc
clc
cmp
dec
sahf
inc
pop
cli
pushf
gs
jecxz
mov
and
sbb
ret
cmp
sbb
movsl
push
insb
pop
xchg
sub
dec
jae
pop
pop
scas
sarl
cs
stos
stc
ret
imul
and
sbb
pop
dec
mov
or
ffreep
xor
dec
mov
inc
insb
push
cmc
scas
shrb
adc
cmpsb
loop
jno
scas
std
mov
out
test
add
mov
cmp
lahf
fsub
out
inc
jb
jle
push
add
inc
das
dec
push
add
ret
stc
pop
push
stos
xor
aad
mov
cmp
jge
pop
mov
mov
adc
repnz
hlt
and
adc
pop
xchg
cmp
xchg
loop
movsb
ds
sbb
xor
sti
jmp
mov
out
dec
je
int3
or
ja
mov
mov
xchg
mov
popf
inc
and
push
fcmovnu
mov
sbb
jb
mov
mov
shll
push
sbb
pushf
xor
int3
fidivrs
aaa
lock
jae
pop
mov
scas
enter
xor
cmp
sub
stos
or
cmp
fcomps
xor
push
mov
jb
cs
pop
movsb
cmp
scas
stos
loop
add
mov
xchg
mov
and
lods
mov
cld
xor
dec
jbe
fs
clc
lahf
jle
mov
fs
jg
jb
iret
lock
push
pop
scas
mov
ljmp
mov
jge
xchg
xchg
push
xor
inc
stc
mov
lods
push
data16
out
bound
lea
or
arpl
mov
pop
mov
enter
in
xchg
jne
fidivl
mov
pop
sarb
iret
ret
ds
push
xchg
pop
push
outsl
movsb
rcll
stos
ss
push
pop
rorl
and
mov
push
inc
jecxz
xchg
adc
push
sub
orl
orb
insb
push
cmp
fsubl
test
out
and
sbb
mov
stos
movsb
pop
movsb
nop
adc
pop
fldt
push
nop
fdivs
scas
ss
mov
divb
adc
cmp
cmpb
xchg
lcall
enter
into
jmp
cmp
loopne
inc
stos
decl
out
push
or
rclb
push
outsb
leave
movsl
popa
add
mov
pop
xlat
cmp
adc
adc
inc
jne
adc
mov
data16
dec
andb
sub
mov
jns
fcoml
addr16
xchg
inc
push
push
mov
mov
ret
arpl
aam
push
fucomip
into
mov
xchg
imul
sub
xchg
sbb
stc
fwait
dec
cmp
fisttpll
pop
jne
jae
hlt
and
stos
sbb
subl
das
xor
bound
adc
add
sub
fimull
hlt
jecxz
sahf
jb,pt
es
leave
cli
mov
insl
ss
adc
out
xor
mov
dec
ss
cmp
bound
cmp
arpl
pusha
push
lods
repnz
cmc
and
in
es
dec
and
movsl
sar
out
je
nop
dec
push
xchg
leave
pop
push
and
enter
jns
fcompl
jecxz
shrb
loopne
dec
daa
popa
mov
adc
push
xchg
dec
arpl
nop
mov
add
cli
xchg
out
inc
mov
loop
les
ds
add
loop
lcall
in
add
mov
or
sbb
jno
enter
outsb
aad
pop
addb
fldl
fldcw
and
inc
popf
xchg
outsb
push
scas
and
adc
jp
push
inc
in
lret
fistps
pop
adc
cld
mov
add
cs
sbb
mov
into
cmc
mov
sub
out
mov
and
out
int3
or
jne
aad
sbb
gs
cli
or
jecxz
enter
mov
xor
daa
popa
push
and
xor
in
jb
lcall
mov
ret
flds
lods
jge
gs
das
cld
cs
mov
adc
arpl
in
fadds
hlt
test
popa
xor
jo
mov
cmp
xor
push
and
lret
jle
nop
push
mov
dec
inc
jp
aas
adc
repz
sub
in
je
sub
pop
mov
fwait
icebp
sbb
inc
fimull
aaa
pusha
scas
jne
rorl
cmp
fiadds
cltd
ss
mov
lret
iret
das
cmp
jnp
shrl
sahf
cmp
dec
push
loope
rcrb
shlb
rclb
ljmp
popf
jg
push
mov
mov
xchg
lcall
mov
out
mov
sbb
xor
addr16
xlat
adc
push
int
inc
cmpsl
test
mov
push
aas
rcll
mov
pusha
fstl
xchg
test
addb
pop
insb
inc
jb
push
dec
sub
mov
pusha
in
nop
pop
fldenv
xlat
or
add
pop
loopne
stc
push
sbb
adc
stc
push
adc
mov
movsb
mov
loop
mov
idivb
dec
notl
cltd
loop
ljmp
dec
lcall
aas
loopne
sarb
add
sbb
addb
mov
sub
insl
inc
test
mov
lods
lret
xchg
xchg
fcmovbe
xor
inc
xor
lea
cwtl
push
popa
jmp
xchg
sub
pop
lock
in
push
xchg
fstl
or
fldcw
outsl
dec
addr16
sub
fwait
sahf
int3
loop
fucom
push
mov
sbb
int
bnd
cltd
mov
sarl
outsl
push
popf
repz
pop
imul
cmp
andb
out
cmp
scas
sub
and
mov
lods
sub
mov
mov
xor
jp
cmp
xor
jae
pop
cmpsb
sbb
mov
imul
sbb
mov
pop
shlb
xor
sbb
mov
divps
mov
and
adc
adc
mov
push
pop
sbb
in
aam
hlt
lods
push
fs
dec
push
cmp
dec
mov
or
jmp
shl
stc
mov
xor
fstpt
mov
fwait
ds
mov
and
lds
add
pop
inc
aam
jg
jmp
inc
shr
cmp
in
pop
jne
push
into
ljmp
insb
sbb
adc
push
add
gs
pop
cli
nop
scas
mov
loop
test
iret
out
out
inc
jecxz
jne
xchg
sub
insl
lahf
ror
cs
mov
std
xor
and
pop
mov
lahf
mov
hlt
mov
adc
xchg
jb
test
or
mov
mov
addr16
sbb
test
pusha
cmpb
add
mov
pop
xchg
mov
mov
hlt
cmpsl
adcb
push
leave
mov
sti
xchg
and
or
xor
out
mov
in
out
or
inc
stos
dec
sbb
sti
pop
inc
lret
nop
add
jp
out
xor
stos
mov
dec
fstps
rclb
es
in
adc
es
out
push
stos
push
xor
les
add
push
xchg
aad
dec
pop
les
in
cmp
in
sbb
inc
pop
push
addr16
mov
stc
movsb
mov
bound
pop
push
mov
scas
in
inc
xchg
inc
mov
and
sbb
mov
pop
mov
pop
fsubp
scas
ficoml
sbb
sbb
mov
loop
xor
lock
out
mov
sbb
sbb
lds
leave
cwtl
jns
in
mov
ljmp
outsl
jno
pop
xchg
mov
cmp
mov
dec
out
gs
es
outsl
or
ror
fwait
lea
xchg
jb
cmp
stos
push
jp
sub
je
dec
inc
loop
jl
neg
testl
popa
sarb
movsl
xchg
cmp
mov
into
mov
sbb
aad
je
mov
loop
add
mov
aam
fisubl
js
jp
xor
push
lods
xlat
pop
push
and
mov
jne
in
adc
xchg
pop
mov
repnz
loop
xchg
mov
xor
push
jl
js
jno
cmpsl
push
adc
cs
cwtl
and
gs
repz
pop
mov
sahf
and
push
in
add
out
dec
xorb
mov
jo
adc
shlb
xchg
ret
inc
test
mov
jecxz
ret
icebp
rclb
aad
push
insl
roll
jbe
mov
imull
ror
ficoml
add
bound
pop
jl
fcmovnu
outsl
jge
mov
jmp
ss
insl
cmc
cmp
push
ret
mov
aam
add
push
rcrb
pusha
mov
add
or
xor
push
add
in
mov
mov
pop
pop
lods
sub
outsl
dec
cmpsb
daa
cmp
pushf
je
adc
dec
jmp
pop
mov
lcall
xor
mov
dec
jmp
pusha
inc
fsub
je
push
sub
iret
mov
pop
fdivr
jge
push
sub
mov
pusha
iret
pop
je
dec
imul
cmp
rep
pusha
push
into
ds
clc
ficompl
pop
xor
cmpsl
push
ljmp
xor
mov
lahf
shlb
mov
fbld
movsl
lods
pop
movsb
adc
call
push
jne
jmp
push
fdivs
and
cmc
ljmp
sub
ljmp
icebp
lea
fnstsw
xor
imul
mov
and
push
fcoms
cli
mov
shrl
call
cmp
pop
push
sub
push
mov
test
aad
gs
adc
push
dec
cmpsb
xchg
dec
cs
pusha
xchg
fcomps
xor
ja
add
pop
leave
ret
jnp
bound
rol
add
rorl
icebp
jmp
sbb
xor
mov
xchg
ret
jle
push
jl
mov
cs
push
xchg
pop
outsb
sar
xchg
mov
std
mov
jmp
outsl
lahf
aad
pop
push
fcompl
lock
dec
icebp
push
and
or
inc
test
mov
call
mov
ret
ljmp
leave
mov
insb
stc
inc
jno
mov
add
push
or
movsl
mov
inc
mov
and
clc
adc
sbb
push
pmulhuw
sub
mov
adc
stc
cltd
pop
stos
xor
mov
outsl
addb
dec
push
and
fs
stc
mov
in
insl
lds
lods
hlt
test
jb
push
or
cmp
mov
cmp
lods
mov
leave
les
push
loop
fstl
xor
xchg
lret
add
icebp
xor
int
mov
ss
add
lea
xchg
ficomps
adcl
in
iret
xlat
test
call
cltd
pop
aaa
jmp
sbb
dec
ret
lods
jns
add
mov
in
adc
or
ret
test
xchg
jnp
jl
call
int3
test
or
push
jmp
movsl
lcall
shl
inc
sbb
outsl
sbb
mov
addr16
insl
ret
out
out
jnp
and
ss
pusha
push
imul
pop
shlb
jne
pop
adc
add
jne
scas
out
sarb
push
lret
aaa
cmp
shr
dec
testl
xor
test
xor
pop
rcrb
jl
xchg
mov
pop
mov
cmpsl
jp
data16
xchg
add
push
or
jae
ds
sub
xor
in
push
in
adcl
cmp
sbb
fadds
es
lods
cwtl
out
jge
fimuls
xchg
clc
outsb
bound
test
mov
and
ds
adc
jp
stc
xchg
and
jmp
mov
mov
cmp
xchg
mov
popa
add
jbe
pop
lret
xor
cli
push
aas
das
push
aam
arpl
push
in
orb
adc
jge
lds
pop
mov
test
jb
xor
xor
push
jo
add
es
cs
adc
in
mov
iret
cmp
jle
sub
lock
pusha
dec
and
mov
insl
imul
pop
pop
jo
jo
pop
pop
cs
icebp
outsb
data16
sub
add
outsb
inc
ret
aas
dec
xchg
cmpb
adc
inc
xor
xchg
iret
cli
dec
dec
bound
xor
jnp
or
hlt
mov
mov
gs
es
aaa
inc
aad
mov
sbb
enter
repz
add
xchg
pusha
sub
call
rol
push
fwait
lahf
cmc
pop
iret
mov
nop
mov
mov
add
rcrb
adc
pop
out
aad
or
jecxz
push
fimuls
cli
pop
push
xor
rcrb
mov
mov
aas
test
sbb
jp
mov
jge
out
adc
mov
push
loopne
xchg
idivl
mov
jb
dec
out
mov
call
ret
cwtl
push
adcb
pop
or
jbe
mov
dec
sub
push
mov
arpl
iret
test
add
pushf
mov
inc
push
add
dec
insl
mov
xchg
xor
lock
stc
add
jecxz
fnstcw
jge
xchg
ljmp
mov
mov
popa
bound
mov
mov
cwtl
mov
out
fildll
mov
imul
push
fistpll
inc
sarb
jmp
mov
xorb
xor
xchg
pop
mov
lcall
cmp
fcmovu
dec
jns
cltd
pop
inc
lock
mov
lods
pop
bound
pop
repz
push
loop
dec
mov
sbb
pop
or
push
ja
loop
cmp
inc
into
xor
push
mov
iret
push
test
pop
scas
or
mov
inc
hlt
adc
jle
mov
lcall
fsub
repnz
ss
arpl
inc
sub
and
out
movsl
mov
out
aas
cmpsb
add
cli
mull
dec
xor
addr16
jg
sbb
push
push
pop
fisubrl
rolb
and
insl
data16
push
cli
imul
pop
fildl
mov
jp
dec
jbe
mov
sahf
adc
les
jnp
cs
sbb
lcall
or
xor
sbb
leave
jns
sub
pop
minps
add
or
sub
daa
xchg
xor
fists
add
orb
pushf
cs
js
add
xchg
scas
hlt
mov
adc
or
xor
fneni(8087
js,pn
lret
imul
pop
and
or
lods
leave
test
mov
dec
fsub
out
mov
push
mov
mov
inc
add
dec
push
das
cmp
jb
adc
clc
mov
jae
scas
outsl
xchg
mov
insb
mov
jnp
ss
mov
fs
loop
imul
and
cwtl
add
ret
lock
cwtl
mov
ja
mov
sarl
lret
loop
pop
loope
pop
add
sub
or
pop
std
cmpsl
shll
bound
dec
pandn
jle
xchg
sbb
fwait
movb
mov
mov
ss
rorl
add
testb
lds
ret
xor
or
push
pushf
adc
mov
lea
pop
inc
push
inc
push
loope
out
enter
das
repz
dec
push
add
jns
pop
stos
mov
dec
cmpsl
sbb
aaa
and
dec
out
dec
cmp
aam
outsb
fldenv
cmpsb
dec
sub
add
fcomi
fldcw
arpl
ds
dec
mov
cs
jne
push
sub
xchg
lds
test
and
sbb
and
sbb
lds
push
pop
test
out
pop
add
test
or
xchg
shlb
in
out
stos
adc
stos
pusha
fildll
divb
pop
ret
and
ds
fsubl
out
out
and
dec
rolb
pop
gs
cld
fnstenv
push
inc
push
in
jmp
mov
jl
mov
mov
clc
mov
das
push
scas
and
jbe
mov
dec
shlb
fistpll
cmp
mov
xchg
add
out
sti
div
or
mov
cmp
in
in
mov
mov
cld
insb
das
cmp
sub
and
imul
dec
scas
repz
cli
jmp
adc
imul
cmp
paddw
rolb
int
sti
jns
iret
pop
fstpl
pop
or
xchg
cmp
or
test
pop
mov
iret
jbe
loope
jnp
divb
bound
lods
inc
imul
pop
pop
pop
and
pop
cmp
cli
lock
inc
cmp
push
jecxz
pop
cmp
nop
mov
lcall
adc
or
mov
bnd
inc
sub
xchg
xlat
xlat
mov
jo
or
arpl
jle
je
pop
std
push
cwtl
int
insb
stc
stos
int3
aaa
inc
cmpsl
test
push
xchg
test
js
inc
addb
addl
test
cmc
xor
cmp
push
sub
sub
adc
sbb
fldcw
jo
inc
cmpsb
pop
mov
dec
xor
push
inc
jge
vmwrite
xlat
test
jecxz
mov
int3
in
daa
enter
xorl
or
cltd
ret
lahf
inc
mov
or
lahf
loope
nop
mov
add
inc
xchg
or
shlb
xchg
aaa
outsl
icebp
test
xorb
enter
inc
bound
lret
sbb
xchg
int3
pushf
testb
jne
or
xchg
pop
add
jecxz
adc
or
mov
in
sub
sahf
inc
sbb
adc
inc
sub
cmpsb
shlb
insl
out
push
ret
mov
mov
vaddps
push
and
fistpl
loopne
inc
push
inc
fcmovne
xchg
bound
mov
outsl
sub
daa
push
mov
or
imul
or
jmp
inc
out
or
xchg
mov
push
out
hlt
xchg
xlat
out
ja
movsb
push
xchg
xor
ret
ret
fcompl
dec
daa
push
mov
pop
ljmp
je
out
popf
inc
push
and
dec
cmp
mov
ljmp
or
mov
cmp
jo
jae
or
jmp
adc
cld
gs
xchg
popf
xchg
out
enter
orl
fsubrs
pop
imul
je
bound
sbb
ljmp
jmp
iret
shlb
push
pop
int3
inc
pop
push
push
js
das
es
lret
mov
and
nop
xchg
ret
out
mov
inc
subb
add
cmp
rcr
xor
xor
dec
sub
fucomi
push
stc
cmpsl
mov
inc
sbb
push
or
jge
xchg
stc
adc
rclb
imul
lock
xchg
lods
aam
or
adc
ss
xchg
into
mov
mov
and
fisttpll
jecxz
pop
orl
es
movsl
cmpsl
stos
lods
xor
insl
mov
mov
addr16
add
mov
pop
mov
and
push
add
jae
cmp
pop
xorb
lret
xor
test
imul
cmc
xchg
pop
lret
pop
push
test
xor
out
ds
shl
adc
das
int3
mov
out
sub
cmp
icebp
push
pop
test
pop
dec
xlat
push
mov
inc
sub
lock
cmp
sbb
ss
or
xchg
inc
cmc
sarb
mov
bound
test
cmpsb
jl
sub
jnp
and
dec
shlb
outsb
jmp
pop
cmc
add
clc
popf
sahf
xchg
add
stos
xchg
andb
scas
jne
jnp
push
ja
xchg
movsl
fisubrs
into
fadd
dec
cmp
ret
fsubl
cltd
lret
sub
push
ljmp
ret
pop
pop
add
lcall
in
cmp
push
cmp
sbb
xor
adc
jb
int3
push
xchg
mov
outsb
pop
mov
add
sar
xchg
in
sub
lea
lret
cltd
mov
in
push
mov
inc
imull
out
xor
jb
scas
push
fidivrl
pop
cmpl
add
pop
ja
cs
sahf
jnp
mov
jnp
adc
iret
hlt
mov
hlt
fwait
out
and
mov
into
push
mov
stos
inc
mov
sahf
pop
jecxz
insb
daa
pop
jnp
add
or
subl
or
adcb
xchg
push
fldt
dec
lahf
push
mov
mov
fcmovne
movsl
dec
dec
iret
jmp
and
jmp
pop
and
jne
stos
mov
pusha
hlt
jecxz
mov
push
cmp
out
pop
push
xor
fldenv
popf
adc
cmp
fldenv
rolb
cwtl
lods
mov
psrlw
mov
mov
pop
fmul
roll
xor
xor
jno
or
mov
jae,pt
dec
fisubl
dec
jmp
jae
xchg
cwtl
es
sub
es
daa
jecxz
dec
out
mov
test
cs
pop
jge
cmp
loop
push
pop
adc
pushf
pop
xchg
xchg
loope
outsb
sub
je
into
ds
push
pushf
add
sub
mov
out
cmp
testl
xchg
pop
insb
inc
xchg
jmp
imul
jl
jge
sbb
cs
inc
xlat
xchg
enter
dec
inc
dec
cltd
js
xchg
and
sti
mov
sbb
arpl
mov
fsin
lock
mov
arpl
add
imul
lret
push
inc
pop
enter
push
in
mov
or
xor
out
xchg
fwait
out
jle
out
push
pop
lea
test
sahf
sub
jp
cmpsl
setle
cmp
push
adc
shlb
jbe
aaa
sub
and
lret
or
mov
mov
insb
sbb
fbstp
lahf
pop
mov
adc
pop
inc
movsl
subb
jg
cmpsb
aad
mov
push
inc
cmp
jle
add
lcall
mov
jge
xchg
jg
sarb
fldcw
sub
arpl
jmp
inc
fmul
loopne
pusha
jp
pop
cmp
jecxz
pop
jmp
inc
arpl
bound
iret
rcrb
mov
mov
pop
fiaddl
cwtl
sbb
xchg
inc
sbb
lea
cltd
jmp
mov
enter
mov
jg
jns
inc
cmp
outsb
arpl
push
or
cltd
mov
mov
sbb
lds
push
divl
dec
push
xor
mov
lret
push
cwtl
fwait
jecxz
sbb
mov
fidivl
jge
ljmp
movb
sub
pusha
add
and
dec
inc
mov
aaa
mov
daa
imul
ja
mov
mov
inc
jp
stos
push
or
lret
adc
test
jp
outsl
and
dec
push
xchg
mov
jae
inc
push
pop
scas
es
insb
rcrb
data16
lcall
adc
out
sbb
movb
out
roll
popa
lret
pop
outsb
fstpl
aam
and
nop
jle
pop
or
lret
ja
imul
dec
sbb
imul
int
out
or
mov
idivb
sub
aas
sub
fimuls
aad
push
lret
fadds
nop
inc
sbb
inc
lods
insb
mov
int
mov
sbb
jns
adc
pop
outsl
hlt
pop
inc
loop
or
xchg
adc
ds
sbb
mov
sub
insb
clc
inc
js
xchg
test
outsb
lret
aam
imulb
stos
mov
cmpsl
cmp
or
xor
movsl
hlt
pop
cmpsl
lea
movsb
xor
pop
xchg
mov
mov
arpl
push
fs
mov
fists
outsl
push
adc
fisttpl
adc
inc
jp
or
sub
and
lods
ja
sbb
pop
mov
out
mov
sbb
out
movsb
sbb
testl
lret
out
cli
fwait
outsl
loopne
mov
aad
or
sub
adc
fdivp
out
mov
movsb
mov
enter
add
daa
xchg
sbb
push
cli
lods
mov
inc
mov
lret
inc
sub
mov
lret
jecxz
push
call
and
inc
mov
sbb
popf
mov
sub
out
cli
movsb
cltd
shll
mov
jp
in
icebp
inc
test
inc
add
into
je
sbb
outsl
mov
pusha
fucomip
roll
sar
inc
xchg
pop
lret
sub
mov
jle
pop
add
insl
fistpll
mov
push
stos
mov
test
sbb
mov
stos
hlt
inc
and
movsl
or
jb
lret
loopne
add
mov
mov
jne
add
lcall
pop
sbb
stc
pop
jmp
mov
push
pushf
scas
cwtl
or
xchg
movsb
jnp
movb
enter
mov
inc
add
adc
cmpsl
mov
out
cmp
popf
in
imul
push
jb
mov
rcrl
pop
xchg
fnstcw
sub
xor
mov
add
push
scas
mov
push
push
or
in
ret
and
js
dec
std
loop
and
push
mov
xchg
rcrb
inc
xchg
outsb
enter
xchg
popf
jnp
mov
inc
lds
xor
xchg
jae
add
xor
in
test
mov
pop
add
iret
mov
scas
push
and
xor
pop
mov
mov
mov
orl
fsubrs
iret
test
popf
fcmovnbe
or
dec
pop
lea
js
lret
xchg
add
push
outsb
cmp
es
mov
je
xchg
loope
les
xchg
cmovg
arpl
lock
ficomps
ror
adc
stos
outsl
pop
imul
mov
insb
outsb
and
jae
pop
sbb
xchg
cmp
leave
sub
test
pop
add
inc
imul
dec
or
pop
bound
sub
stos
push
lret
iret
mov
dec
mov
loopne
jb
in
and
pop
inc
mov
or
test
push
mov
jge
das
jae
jp
movsb
inc
jae
inc
out
mov
sbb
push
sbb
push
xchg
jnp
ficomps
mov
mov
inc
jo
dec
loop
sti
jecxz
add
in
test
fisubrl
add
and
rolb
jo
pop
insb
and
mov
in
sbb
iret
aad
test
int
sti
rcrl
sub
mov
adc
popf
jo
sbb
mov
mov
or
mov
jnp
outsb
inc
xor
out
or
test
mov
mov
daa
rol
xchg
pop
fsubrl
and
sub
js
pop
fstps
call
mov
fisttpll
outsb
decb
jnp
xchg
mov
mov
mov
dec
mov
decb
jbe
mov
into
jns
mov
push
xchg
inc
add
iret
cmp
sbb
adc
push
push
mov
out
fld
jmp
xchg
out
pop
or
aad
pop
push
testb
and
ret
int
or
jnp
stos
lret
out
arpl
mov
inc
push
lcall
push
out
pop
shrl
mov
inc
gs
mov
dec
jae
imul
movsl
int
pop
fsubr
daa
jns
je
bound
push
jb
loopne
mov
add
data16
and
lods
push
test
mov
daa
push
jne
mov
push
cmp
push
jp
fs
jae
sub
int3
cmp
js
sbb
test
or
sbb
pushf
add
inc
xor
xor
shrl
jecxz
rcrl
inc
stos
jg
pop
cwtl
mov
adcb
iret
enter
scas
push
inc
fcmovnb
dec
sbbb
and
cli
sbb
gs
jg
lret
mov
addr16
lods
push
andl
adc
xchg
sbb
cli
je
cli
out
in
dec
ljmp
mov
test
je
ds
jg
inc
aam
push
mov
repnz
test
cmp
dec
mov
movsb
adc
mov
push
outsl
dec
inc
lahf
fstpt
out
dec
add
mov
and
mov
xchg
enter
sub
aam
pop
inc
mov
fists
shrl
push
mov
sub
push
inc
jp
add
xor
push
popa
bound
cmpsl
dec
ljmp
fimull
mov
lock
cmp
clc
cmp
pop
cmpsl
pop
sti
dec
in
call
xor
sti
add
js
or
xor
call
es
dec
insb
add
loope
mov
stos
xchg
jle
popf
pop
stos
shlb
push
push
lock
cmp
mov
dec
jp
cmp
jp
push
cs
sub
fsubs
int
jnp
in
mov
mov
jl
test
cmp
dec
pop
xlat
stc
mov
out
push
add
sysenter
sbb
and
cmp
jae
addb
push
call
aaa
push
div
jg
xor
or
stos
xchg
dec
xlat
push
xchg
ret
imul
xchg
das
mov
call
mov
xor
cltd
jg
outsb
aaa
mov
mov
mov
icebp
xchg
pop
mov
ds
pop
int
mov
pop
sub
sub
movsb
clc
inc
mov
loop
jne
aas
dec
ja
loopne
jo
push
repnz
sub
ljmp
stos
lea
xor
and
add
fisttpl
rorl
orb
mov
stos
ljmp
aad
stos
xchg
iret
iret
cs
adc
and
xchg
imul
mov
dec
add
decb
dec
mov
cmpsb
aad
daa
les
popf
and
enter
test
scas
cmp
ds
bswap
bound
notb
jmp
movsb
pop
or
inc
jmp
ret
out
out
cmp
rol
jle
aas
sahf
add
fimuls
fldcw
nop
sub
adc
insb
xchg
mov
subb
roll
mov
mov
jno
dec
lods
stos
and
push
insb
lret
sub
fdivr
xchg
scas
xorb
and
mov
add
fadd
add
jg
test
inc
leave
xchg
das
loope
fcoms
cmp
dec
add
or
cmp
pop
shll
xchg
addr16
adc
pop
movsb
stc
and
cmp
mov
ja
pop
jo
popf
lea
es
jl
jl
xchg
pop
inc
push
mov
loop
jl
pop
mov
je
xor
add
cmpsl
int3
xchg
adc
dec
in
mov
mov
mov
push
and
mov
icebp
addr16
or
push
or
cmp
dec
les
adc
xchg
imul
in
push
add
jo
fistps
push
mov
pop
mov
xor
das
mov
adc
sbb
cld
push
xor
fwait
sub
ret
rolb
xchg
fwait
data16
movsb
sbb
out
out
mov
push
xchg
dec
mov
xor
into
in
fwait
jg
into
xchg
dec
mov
xor
or
movsb
and
loopne
arpl
mov
mov
das
addr16
or
and
mov
incl
pop
adcb
adc
pop
in
add
pop
xchg
xor
push
shlb
sbb
xchg
inc
cmovnp
rol
pop
sbb
dec
iret
ja
iret
ret
or
imul
insl
mov
mov
loop
xor
mov
insb
outsb
and
test
jns
adc
cmc
sub
fstpl
fs
jno
pop
xchg
or
xchg
iret
aaa
mov
cmpsb
out
cmp
xor
stc
outsb
lcall
idivl
sub
fsubs
xchg
push
xchg
xchg
shrl
in
push
dec
adc
mov
xlat
pop
push
ret
in
add
xlat
lret
sbb
ret
adc
xchg
movb
hlt
or
repnz
arpl
cmpsl
mov
repnz
mov
mov
cld
invd
cmp
mov
cmp
add
jbe,pt
rorl
add
hlt
xor
mov
mov
and
rclb
gs
or
sbb
arpl
and
adc
loope
iret
rolb
loop
push
scas
mov
and
lret
imul
addr16
dec
push
loopne
xchg
repnz
adc
mov
js
or
xchg
les
jecxz
jp
pop
dec
enter
pop
fwait
lret
lods
jecxz
pop
mov
sub
adc
dec
out
in
push
pop
sub
inc
dec
inc
bound
mov
outsb
mov
jecxz
mov
movups
int3
aas
call
lea
aam
testb
xor
adc
test
jbe
lds
adcb
in
pop
inc
xor
hlt
addr16
xor
mov
jle
mov
in
aaa
sub
mov
imul
fsqrt
adc
arpl
jae
cmp
ror
mov
lock
jnp
inc
dec
pop
je
mov
push
sti
mov
mov
adc
push
data16
loopne
add
mov
arpl
dec
jmp
sahf
int3
out
sub
gs
repz
hlt
daa
pop
or
ret
outsl
pop
mov
lods
jle
pop
cmpsb
repz
shrb
dec
jo
outsb
lds
not
je
xlat
ss
sbb
xchg
adc
push
fwait
pop
out
push
jl
mov
add
inc
je
pop
rorl
push
sbb
push
adc
hlt
cmpsb
lds
imul
mov
xchg
sub
stos
xor
loop
cmpsl
ret
or
ljmp
or
std
mov
jbe
mov
arpl
push
enter
dec
shll
data16
ljmp
lods
rcr
js
add
mov
or
insb
sub
stos
aad
push
and
mov
cmp
test
inc
cmp
cmp
cmpsb
cmp
xor
dec
ror
mov
mov
push
out
xchg
arpl
push
jo
dec
arpl
sbb
pop
sbb
movsl
fs
insb
push
dec
jmp
fdivl
xor
ficoms
call
mov
adc
inc
push
xlat
adc
fmul
sbb
out
add
add
jle
jmp
dec
bound
insl
repz
inc
testl
xchg
adc
sbb
ss
xchg
cld
loopne
mov
dec
cwtl
sub
ljmp
sarl
xor
jecxz
mov
push
push
push
popf
fimuls
sub
lds
sub
shlb
into
movsl
int3
adc
shll
dec
dec
push
inc
or
jno
xor
imul
iret
sbb
rclb
sbb
loopne
jbe
ret
push
and
mov
push
scas
lret
mov
inc
inc
pusha
and
xchg
jbe
adc
xor
leave
xchg
adc
repnz
jb
movsl
jecxz
jae
out
sbb
push
push
jbe
mov
and
scas
sbb
add
mov
cmp
push
out
rolb
ss
rorb
lds
stos
ds
mov
xor
jecxz
mov
leave
addr16
pop
sti
sbb
fsubl
pop
test
cmp
mov
sbb
aam
cmpsl
adc
mov
icebp
lock
mov
pop
add
xchg
and
negb
xor
push
inc
push
cld
rorb
lret
fdivs
mov
pop
mov
mov
push
out
xor
xchg
enter
clc
mov
mov
imul
inc
imul
fstl
test
push
cmp
or
fstpl
shll
sarb
jg
dec
ds
adc
sub
pusha
test
arpl
xchg
sub
and
mov
xchg
in
sbb
leave
call
jb
and
cltd
add
mov
sbb
fisubrl
mov
and
sbb
addr16
shrb
cli
sbb
insb
xor
sar
jle
scas
inc
jns
inc
jecxz
ljmp
lcall
xchg
hlt
notl
stos
test
pop
aaa
jns
dec
fldenv
inc
popl
mov
jne
repz
aad
or
add
iret
pop
es
inc
jbe
jmp
fcmove
lods
cmp
les
adc
fistpl
add
stos
adc
mov
leavew
pushf
repnz
and
pop
sub
or
push
sub
inc
mov
outsb
pop
mov
sbb
outsb
cmpsb
cmpb
and
ds
outsl
or
cli
dec
xor
test
pop
pop
inc
fnstcw
mov
out
daa
in
xorl
mov
and
pushf
push
outsl
and
xlat
cmpsb
lea
repnz
in
push
jmp
insb
imul
out
cmpsb
mov
out
pop
mov
pop
inc
sub
stos
pop
or
inc
daa
inc
mov
out
sbb
or
es
jg
repz
xchg
pop
mov
js
les
imul
in
daa
std
adc
mov
movsl
jmp
dec
push
push
sub
shrb
je
call
sbb
jne
cltd
imul
aad
add
aas
repz
repnz
add
xor
xchg
iret
lea
aad
mov
and
mov
mov
mov
outsb
mov
mov
bound
cmpsb
adc
or
in
outsb
rcrl
orb
in
fldl
addl
movsl
add
into
adc
inc
pushf
lret
outsb
cmpl
inc
loop
push
mov
jecxz
icebp
push
dec
sub
mov
xor
sbbl
loope
dec
in
pusha
je
push
mov
in
push
pop
aam
or
outsb
xchg
es
cmp
jo
gs
mov
push
xchg
xchg
shll
fiadds
iret
or
daa
or
cmp
mov
hlt
repnz
sbbl
xlat
xchg
xchg
pop
jg
inc
leave
and
xor
dec
clc
je
cmpsl
pop
mov
sub
adc
test
movsb
leave
mov
enter
mov
repnz
sarl
inc
add
jp
mov
dec
or
scas
sbb
rcrl
add
aam
leave
clc
mov
pop
pop
or
pushl
mov
int3
cmpsb
cmpb
pop
jno
push
sub
add
lds
sti
mov
mov
mov
adc
mov
idiv
xor
int
push
std
cltd
neg
mov
es
lods
dec
inc
loope
inc
or
dec
outsl
sti
add
mov
dec
fimull
shlb
bound
int3
shl
sub
pop
icebp
sub
loop
dec
out
sub
inc
leave
sub
mov
rcl
je
std
mov
xorl
push
cli
call
out
lock
cmpsl
loopne
sbb
xlat
js
add
sub
or
jl
insb
pop
lds
dec
mov
hlt
pop
dec
sub
xor
test
push
xchg
push
inc
inc
aad
outsl
xchg
dec
sbb
jg
pusha
dec
fldenv
movsb
aam
pop
dec
pop
daa
push
pop
jl
repz
adc
negl
inc
cmp
jg
xor
out
fildll
imul
mov
jbe
mov
cmp
pusha
or
movsb
fldl
mov
dec
pop
lock
mov
outsl
nop
xchg
and
push
aam
mov
ret
pop
loop
pop
js
push
daa
pop
mov
pushf
cmpsl
pop
jns
jge
ja
pusha
jecxz
fisubs
test
push
xor
push
add
add
lods
ljmp
aas
cmp
push
inc
sbb
xor
pop
gs
enter
add
sub
jns
divb
imul
lcall
out
rorb
imul
loop
stc
popw
shl
mov
aad
loopne
pushf
cmp
mov
outsl
jge
in
scas
sub
aaa
ret
lahf
mov
xor
jbe
mov
aas
and
sub
dec
ds
adc
dec
xchg
mov
push
sahf
repnz
cmp
call
mov
arpl
ja
inc
into
adc
pop
adcl
outsl
mov
roll
inc
sbb
test
test
pop
aad
fisubs
mov
jb
cmp
js
cwtl
in
mov
cmovo
sahf
push
stos
fcmovu
dec
adc
enter
scas
and
sub
push
shl
dec
ret
js
sbb
push
lds
inc
lret
stos
inc
add
mov
rorl
ss
popa
pushf
aam
pop
inc
sub
pop
mov
xchg
ja
pop
shrb
mov
cmp
xor
cmpsb
push
jae
jno
cmc
aas
lods
pop
dec
iret
cmp
ja
nop
cmp
sub
in
lret
mov
or
cwtl
jne
push
push
pop
mov
xchg
lcall
xchg
jne,pn
fwait
pop
adc
loop
jae
mov
push
dec
ret
test
add
pop
jnp
popl
aas
pop
jge
sbb
push
xor
or
jge
sahf
adc
mov
and
sbb
pop
cmp
jnp
outsb
fsubs
popa
sahf
in
fidivrl
je
or
inc
mov
adc
mov
dec
loope
mov
push
xor
int
das
ljmp
mov
pop
push
ss
test
pop
cli
aas
pop
and
arpl
ffreep
mov
push
popf
sbb
lods
daa
push
add
sub
add
test
repz
into
ret
mov
add
mov
cmp
test
lock
or
cmp
jb
or
inc
mov
and
arpl
or
ficompl
rcll
pop
arpl
and
mov
notl
adc
xor
mov
lea
out
sub
inc
mov
arpl
andl
xchg
mov
js
fnsave
cmp
test
loopne
je
lret
inc
xor
or
aad
xchg
cltd
mull
cmp
mov
mov
dec
jl
jne
sarb
fnstenv
push
loop
pop
fcom
inc
popa
pop
jle
xor
dec
clc
push
lea
movsb
push
dec
stos
xchg
scas
mov
inc
pop
dec
repnz
cltd
das
ja
jg
xor
mov
push
call
push
jne
lds
out
mov
and
push
lock
inc
fisubs
mov
pop
mov
cmpsb
mov
js
cmpb
ficoms
rcl
or
pop
sbbl
idivb
push
dec
pushf
dec
out
loop
fdivrs
jo,pt
push
or
stos
mov
sub
imul
loop
in
decb
aam
sarb
int
or
adc
xchg
pop
mov
jmp
xor
inc
negl
mov
ja
fsubrs
fsts
xchg
add
xor
mov
nop
cmpsl
cmpsl
push
jmp
ljmp
leave
jl
adc
pop
and
fs
add
stc
loopne
ja
fmull
xchg
jg
mov
cltd
cmp
stos
fs
dec
arpl
shll
mov
inc
jnp
xchg
adc
adc
in
out
xchg
shr
ds
test
popfw
popf
scas
pop
fistl
xor
jmp
ss
dec
dec
pop
mov
je
inc
and
mov
or
aad
ja
sti
test
inc
in
sti
or
inc
outsl
popl
ss
pop
int
jns
int3
loopne
xor
mov
aas
push
pop
lea
cmp
in
sbb
xchg
sbb
loop
cs
push
jg
xchg
push
jge
sub
or
fdiv
sbb
xchg
push
bound
lret
dec
inc
and
and
mov
ret
sti
call
loopne
inc
or
out
jnp
lods
outsl
xchg
pop
in
jnp
aad
jl
fsubrp
xchg
rorb
and
imul
sbb
xlat
aam
rcrb
ret
pop
insl
out
pushf
shl
jns
mov
pop
fxam
mov
call
mov
jb
pop
and
inc
test
imul
movsb
dec
dec
fldl
lret
cmc
cmp
xor
push
cld
iret
xrelease
mov
jp,pt
inc
jno
or
test
xchg
mov
dec
lcall
jae
cmpsl
dec
dec
dec
shl
bound
mov
jae
push
jno
lcall
mov
xlat
loope
pop
sub
mov
push
jmp
xchg
push
xor
loopne
mov
sub
xchg
push
addl
rolb
je
push
pop
jne
mov
lahf
mov
sti
sbb
inc
add
ja
fs
and
pop
idivl
cmp
jb
ds
sarb
std
jge
sub
aam
das
data16
shll
inc
xchg
mov
inc
in
fwait
adc
pop
clc
sbb
cmp
inc
aas
sub
add
mov
adc
add
push
and
jns
test
loope
mov
mov
or
enter
xor
icebp
lret
mov
dec
std
pop
dec
clc
dec
into
lock
fdivrp
loopne
jle
mov
pop
inc
xor
dec
dec
sub
pop
pusha
in
std
iret
cs
cmpsl
lret
aad
adc
fidivs
and
mov
or
pop
roll
out
pop
jle
mov
mov
sbb
test
sbb
out
or
dec
shlb
movsl
imulb
xlat
mull
xchg
popf
adc
jae
scas
add
cmpsl
inc
xchg
push
push
pushf
push
jg
test
add
jb
test
enter
pop
cs
sbb
inc
push
sarb
add
call
fstl
jp
pop
add
rcrl
das
lock
push
push
add
sub
pop
push
cmpb
sbb
das
mov
push
xor
ljmp
adc
jnp
adc
xor
and
vandnps
mov
dec
add
pop
xor
shlb
rcll
rclb
adc
mov
xchg
dec
sub
imul
cmp
stos
in
stc
sbb
push
mov
xor
xor
mov
and
arpl
and
sarl
xchg
xor
cwtl
mov
popf
in
pop
sub
xor
cmp
pop
sub
sahf
push
clc
popa
mov
mov
inc
std
xlat
subl
nop
fnstcw
xor
call
or
jnp
sbb
cmp
ret
pop
push
sbb
lcall
insb
aaa
cwtl
popfw
fucom
cmpsb
or
leave
mov
mov
fnstcw
outsl
aam
in
mov
cmp
and
xchg
add
pop
inc
sbbb
and
das
aam
rcrl
es
pop
ds
es
or
xlat
insl
iret
inc
xor
mov
pop
cmp
ret
pop
push
into
outsb
sbb
or
pusha
enter
xor
adc
pop
fwait
or
ret
clc
fldt
je
sub
pop
xor
pop
jbe
xchg
bound
jmp
mov
pop
into
mov
cli
cwtl
dec
mov
jecxz
xchg
sbb
fstps
mov
pusha
push
push
mov
add
xchg
or
push
mov
cld
repnz
addr16
jl
sub
adc
fstl
sub
out
push
daa
sbb
data16
nop
call
scas
sub
insb
mov
pushf
jl
push
inc
sahf
enter
test
xchg
mov
insb
sbb
iret
int3
xor
not
adc
lret
jl
loopne
adc
ret
xchg
sbb
and
outsb
shll
xchg
decb
ss
cmpb
mov
mov
sub
cmpsb
dec
sbb
cmp
stos
push
dec
fmuls
in
pusha
pop
push
mul
push
inc
fwait
sbb
sub
pop
pop
jp
out
inc
and
lea
push
mov
mov
mov
or
pushf
inc
lcall
push
mov
outsb
mov
pop
lock
cmpsl
and
hlt
xchg
push
cmpsb
fcompl
push
test
mov
test
pop
xlat
or
popf
roll
outsb
and
xchg
fsubr
mov
push
mov
cld
xsha1
cmpsb
mov
outsb
fdivrs
or
push
and
addr16
xorb
cmp
sbb
sbb
jb
jecxz
lods
mov
jl
push
pop
aaa
out
lret
pop
ss
xchg
xchg
sub
xchg
inc
push
lds
jns
lds
sub
scas
cmpsl
mov
loopne
push
bound
pop
jbe
mov
lock
jmp
cmpsb
xor
pusha
insb
cmpsb
dec
dec
adc
ret
pop
test
or
and
rclb
stos
insb
fdiv
loop
inc
shl
shrb
out
loop
mov
clc
repz
dec
in
cs
sarb
lock
and
xor
lock
in
push
add
push
mov
sub
push
dec
fimuls
out
cmpsb
fnstenv
insb
add
scas
shrb
or
adc
jb
out
jbe
lods
imul
das
jecxz
jb
lds
mov
pushf
lcall
inc
ret
jp
mov
mov
lock
cmp
push
cmp
arpl
jecxz
lcall
pop
sbb
sti
stos
inc
and
testb
pop
mov
out
pop
sub
mov
inc
lret
je
push
ds
push
mov
sbb
repz
mov
lret
xlat
and
mov
popa
or
lea
or
mov
outsb
jne
pop
add
enter
sbb
sbb
jecxz
addr16
bound
sbb
clc
inc
push
popf
mov
call
out
or
dec
pop
jno
sbbl
inc
inc
sbb
call
out
mov
cmpsb
fnstcw
mov
push
js
out
sub
sahf
cmpsb
push
pop
mov
push
clc
jb
mov
dec
jle
lock
scas
adc
popa
test
push
push
lahf
mov
cmp
dec
lret
jecxz
mov
loopne
sahf
mov
sbb
orb
jle
int
aam
mov
fsub
fstl
int3
decl
cmp
or
rcrl
xor
and
jecxz
mov
or
pop
call
xlat
fstpl
das
mov
dec
and
iret
out
sub
xorl
pop
lahf
test
and
adc
fidivl
mov
mov
jo
push
jmp
push
jle
xchg
outsl
pop
jmp
fwait
pop
pop
lods
subl
rorl
cmpb
out
cmp
aam
push
out
out
push
or
jle
jo
outsb
cmpb
imul
iret
sbb
cmp
mov
cmp
jbe
or
mov
mov
or
and
xchg
rorb
lock
mov
jmp
xchg
xor
xchg
lahf
fwait
or
jp
add
and
push
push
arpl
push
iret
sahf
test
and
lods
pop
jb
popf
fsubs
jns
cmpsb
mov
mov
jns
mov
scas
sti
enter
call
lcallw
fbstp
pop
test
repnz
sub
gs
and
fidivrl
rclb
mov
iret
sbb
push
cmp
lea
loope
and
in
xchg
mov
mov
inc
ljmp
rorl
or
sbb
fdivl
mov
lods
test
call
mov
push
filds
add
repz
mov
add
and
cmp
mov
pop
loopne
cmp
pop
imul
cs
pop
daa
add
pushf
pop
mov
push
push
sbb
or
negl
xor
dec
lahf
or
mov
or
push
leave
out
jbe
and
dec
pop
lds
clc
dec
cmp
xorl
or
push
fstpl
jecxz
mov
pop
jmp
dec
adc
jne
aad
xor
push
pop
and
xor
inc
jg
sbb
inc
std
iret
shlb
shlb
push
pusha
adc
mov
and
mov
movsb
test
push
sbb
test
lahf
or
lods
test
xchg
jo
xor
repnz
and
rcrl
mov
out
in
out
cmc
mov
daa
punpcklwd
add
pop
loope
inc
test
call
bound
test
xchg
add
add
addr16
push
adc
add
daa
mov
cmp
push
jl
aaa
insl
icebp
mov
push
faddl
mov
ret
inc
push
out
xchg
aaa
out
xor
in
ljmp
dec
sbb
push
leave
sub
bound
add
pop
jnp
pop
xchg
cmc
sub
xor
push
cmp
mov
mov
jecxz
jecxz
adc
std
pop
pop
cmp
push
nop
push
sbb
or
call
loope
push
sub
xchg
enter
xchg
insl
popf
out
sbb
jp
xchg
lea
je
hlt
ret
mov
cmpsb
aam
sar
imul
lods
insb
dec
stc
cmp
adc
xchg
jl
and
jnp
pop
mov
cmp
push
jp
cmp
and
fstpt
cmpsb
jbe
repnz
aam
cli
push
das
mov
pop
ljmp
dec
jne
sub
push
cmp
lret
push
mov
push
data16
cltd
sub
xor
stos
and
nop
jae
mov
insb
pop
jl
popf
pusha
mov
and
xchg
push
jno
jp
mov
sub
and
jo
scas
shrb
push
xor
sbb
jbe
pop
cld
xchg
cs
into
sarl
jle
sbb
fwait
pop
mov
mov
fimuls
xchg
repnz
push
push
push
sbb
cld
aad
add
js
sar
jbe
jg
jae
pop
sbb
xchg
push
repz
gs
sbb
jg
jle
mov
fisubs
lods
jl
filds
and
cmc
out
aam
lret
fwait
pop
sbb
push
mov
sbb
es
add
repz
shl
or
push
lock
push
push
mov
loopne
lods
test
mov
jmp
mov
xchg
mov
jne
jno
pop
mov
add
pop
in
aad
and
loope
insb
rcrb
inc
push
xchg
rclb
popw
cwtl
push
mov
jne
pop
dec
push
push
push
xor
sub
sub
icebp
mov
pop
jp
test
cmp
dec
pop
xor
pop
pop
add
sub
lcall
daa
imul
mov
xchg
jl
push
push
mov
jb
mov
popa
jecxz
and
push
pop
mov
add
pop
or
pusha
cmp
mov
push
pop
sub
xchg
sbb
xorl
push
lods
cld
sub
cmp
mov
inc
subl
lret
pop
daa
aas
add
fwait
mov
xlat
xlat
dec
les
iret
ror
mov
mov
dec
pop
imul
ret
rcrl
pop
inc
jno
call
sbb
shrl
insb
inc
stos
je
mov
lret
or
je
mov
cltd
or
and
out
pop
lock
sbb
dec
push
aaa
jmp
cmpb
loopnew
mov
fwait
out
mov
sahf
mov
das
lcall
xor
mov
aaa
and
mov
pusha
aas
popa
dec
fstpl
pushf
add
bound
inc
aaa
sbb
mov
imul
movsb
fidivrs
daa
cwtl
mov
add
or
je
mov
add
push
cmc
rclb
mov
pop
sti
ds
fidivrs
dec
xchg
insb
imull
fwait
mov
loopne
xor
daa
cmp
hlt
fcomi
call
sbb
push
fildll
cmp
dec
test
iret
inc
mov
mov
mov
pop
xchg
leave
adc
or
repnz
ret
fdivrl
fidivs
mov
out
add
pop
mov
out
sbbb
sbb
jne
dec
js
sub
add
xchg
mov
frstpm(287
cli
pop
jno
push
out
sub
mov
xor
in
cmp
es
dec
mov
xor
pop
cmp
lret
rolb
int3
aaa
cmpsb
pop
fldt
mov
sub
sub
mov
cmpsb
push
add
pop
dec
into
leave
cmc
nop
out
sub
mov
out
test
repnz
dec
dec
arpl
jmp
dec
fnstcw
mov
and
icebp
decb
dec
gs
adc
jae
ja
or
sbb
addr16
or
adc
jb
and
push
out
jmp
xchg
add
movsb
aad
cmp
push
adcl
jbe
mov
divb
mov
fwait
mov
add
sub
lea
cmc
cmc
sbb
sahf
pop
cmp
rcr
adc
ja
add
mov
jo
das
mov
dec
pop
arpl
dec
in
and
sub
jp
jge
cmp
outsb
pop
into
divl
add
mov
push
stos
ds
dec
pop
fs
addr16
adc
xor
cwtl
jle
xorl
adc
pop
cs
inc
cli
sub
shll
popa
and
icebp
or
sbb
sbb
xor
sarl
das
into
out
mov
test
cmp
fisttpl
pop
mov
loop
xchg
imul
out
repz
jno
xor
inc
inc
add
jle
sbbl
rorb
shrb
insb
mov
ret
dec
andb
sar
dec
jns
push
cmp
push
enter
inc
push
mov
fcomps
fmulp
cltd
xor
cmp
mov
push
out
out
lods
mov
nop
or
inc
mov
sub
inc
jecxz
mov
stc
js,pt
aam
xchg
pop
repnz
movsb
fimull
mov
adc
outsb
push
sub
inc
pop
adc
cmp
sbb
out
pop
push
ja
outsl
cmpsl
add
sub
mov
sti
pop
iret
cmpb
int3
xor
mov
add
or
sbb
fdivl
inc
jb
sub
icebp
and
jnp
mov
jecxz
mov
jnp
mov
stos
jg
mov
mov
cld
insl
loop
cmp
cmp
xor
inc
mov
cmp
mov
push
shl
cld
jo
push
lahf
sub
jmp
in
and
jg
aaa
lcall
jecxz
push
xchg
loop
sbb
mov
jmp
mov
adcb
inc
lret
sbb
lods
insb
xchg
inc
xor
cmp
mov
dec
xor
aas
xchg
shll
or
and
mov
and
mov
bswap
in
pop
mov
jp
into
xchg
push
call
lahf
rcll
js
popa
in
stos
repnz
xchg
addr16
mov
fadds
rolb
mov
mov
pushf
cltd
mov
adc
cmp
nop
and
mull
sti
add
aas
fisttps
loope
push
and
jp
cmp
faddl
push
stos
sub
push
and
pop
mov
aaa
cwtl
pop
push
inc
cli
subb
xor
fistl
pop
hlt
push
adc
mov
push
loop
lret
mov
adc
enter
mov
adc
or
in
popa
mov
mov
dec
ret
fwait
repz
sahf
mov
out
push
pusha
inc
jno
xor
lcall
sub
mov
add
or
xor
imul
lods
out
je
es
inc
inc
xor
div
or
pop
push
fiadds
add
mull
sub
out
pusha
xor
test
inc
test
and
sub
pop
roll
mov
push
cli
jl
stos
push
cmpsl
pop
cld
leave
adc
add
and
add
jae
jge
jmp
add
jecxz
push
sahf
xchg
out
cmp
jl
loop
repz
push
pusha
xchg
imul
fisttpll
arpl
arpl
pop
subl
xchg
and
push
rcrl
push
lret
ret
notl
lret
dec
cs
int
les
adc
push
push
leave
pop
sbb
nop
jns
pop
cmp
ror
repz
mov
imul
ja
add
scas
ss
ss
imulb
inc
cmp
inc
in
inc
fimull
js
divl
xor
pop
mov
jns
mov
jecxz
add
jp
je
sbbl
rcr
add
adc
adc
jl
ret
in
leave
or
lods
lcall
imul
pop
and
out
mov
sbb
pop
test
jp
mov
pop
mov
das
daa
sbb
pusha
subb
xchg
ja
mov
adc
mov
mov
fs
xor
adc
and
popf
cmp
inc
push
sbb
int3
fiadds
repnz
lcall
mov
xchg
sub
push
adc
cwtl
sbb
shrb
mov
aad
clc
ret
dec
nop
jecxz
push
or
imulb
xchg
orb
push
add
ds
pusha
mov
mov
stc
push
loopne
dec
xor
lret
popf
repnz
ds
loopne
bound
sub
out
push
pop
sti
movsl
xchg
xchg
hlt
jnp
mov
mov
lods
lods
jge
outsl
imull
sbb
mov
mov
xor
sub
and
or
imul
loopne
test
inc
pop
mov
push
test
cmp
jmp
into
repnz
sbb
shll
std
cmp
sbb
pop
fcmove
push
fs
pop
xchg
mov
lds
inc
notl
jb
mov
mov
inc
or
sub
adc
mov
mov
cmp
stos
push
sarb
jmp
enter
aad
xchg
lret
mov
jp
pop
and
and
sbb
shrb
popw
pop
rcr
mov
movsb
mov
lcall
cmp
mov
or
leave
outsb
push
adc
int
std
nop
das
jle
cmp
test
and
cli
mov
adc
add
ljmp
ror
adc
and
cmp
std
xchg
popa
cmpsl
stos
imul
imul
cs
cmpsb
mov
and
sub
add
xor
ficompl
ss
cld
xchg
pusha
sbb
xchg
pop
jbe
jge
outsl
sbb
out
ret
jo
inc
add
cmp
add
fisubrs
test
and
add
imul
add
stos
clc
sub
dec
cmp
sbb
das
or
and
sbb
cld
sub
inc
jmp
scas
stc
js
mov
push
outsl
ljmp
xor
or
data16
shr
lret
lds
stos
imull
adc
or
cltd
sbb
mov
pop
push
clc
mov
fisubl
aam
mov
in
dec
adcl
stos
inc
mov
std
xor
xor
ljmp
or
add
adc
imul
data16
test
adc
mov
scas
mov
jo
lods
hlt
cmp
lret
xor
fwait
cmp
xchg
imul
cmp
push
fldenv
mov
rorb
test
mov
jno
ja
xchg
jecxz
in
lret
js
fistpl
mov
rorb
inc
stos
dec
cmp
lret
sub
mov
clc
cltd
fldt
xchg
xor
inc
mov
mov
mov
aam
dec
repz
subl
psubusb
jne
out
cmp
mov
push
jb
pop
mov
jb
out
rorl
sbb
mov
xchg
test
gs
push
mov
mov
sub
mov
adc
lock
fs
and
shl
sbb
cmp
adc
dec
xor
enter
outsl
mov
pop
inc
mov
inc
inc
rol
out
dec
pusha
xchg
aam
fisttps
push
inc
and
and
xor
push
or
fcompl
arpl
bound
das
mov
test
cmp
lds
dec
popa
push
addr16
jle
mov
repnz
or
loope
in
push
mov
lcall
add
add
adc
lods
push
mov
in
iret
inc
imul
jle
scas
mov
cmp
jle
add
push
inc
movsl
aas
roll
xchg
mov
sbb
push
icebp
ficompl
inc
out
cmp
mov
adc
push
push
sbb
add
push
js
jbe
xor
push
leave
sbb
pop
xchg
repnz
xchg
das
push
fs
scas
cmp
cmp
jl
jb
pop
stos
in
pop
mov
rorl
stc
lds
dec
push
push
out
and
adc
lock
or
push
lret
cld
mov
daa
ret
loopne
out
js
mov
inc
push
fnstsw
inc
inc
jb
cli
or
pop
xor
push
jae
cltd
inc
adc
or
sub
loop
push
cltd
cwtl
call
shlb
jns
dec
cs
ret
xchg
out
and
sbb
sti
mov
ret
xchg
divl
adc
adc
hlt
aas
mov
dec
xlat
adc
mov
bound
lret
push
lcall
imul
mov
jbe
or
jl
pop
or
inc
inc
in
mov
cmp
inc
das
lds
or
sbb
dec
in
lahf
jns
sub
call
ret
fstpt
cmpsl
cmp
les
pop
adc
fucompp
movsl
push
cmp
and
mov
xchg
mov
adc
loope
dec
lods
pop
mov
sahf
mov
sahf
mull
sbb
adc
pop
xor
jl
add
dec
push
push
fistps
sub
sbb
outsb
cwtl
hlt
xchg
daa
push
ss
out
xchg
xchg
mov
or
mov
jne
mov
movsb
mov
addr16
jae
xchg
pop
jb
adc
aaa
xor
and
movsl
je
inc
adc
jcxz
xchg
jg
inc
push
inc
mov
sbb
iret
add
or
in
fsubr
lock
mov
pop
mov
adc
jg
icebp
fstps
repz
lcall
aam
lcall
xor
adc
xlat
xor
aad
or
jp
mov
pop
mov
sub
xchg
pop
sbb
lea
movsl
repz
cmp
inc
add
pop
imul
arpl
pop
sub
push
dec
pop
sbb
push
mov
pop
or
xor
jp
out
xchg
cli
lret
insb
add
lahf
std
jae
scas
mov
sbb
sbb
dec
lret
xchg
mov
imul
call
or
push
xor
xchg
int
arpl
insb
and
je
sub
inc
xor
sbb
mov
push
repz
and
and
push
cmp
filds
mov
push
arpl
sar
jl
inc
popa
push
mov
ljmp
out
sub
fdivrs
out
outsl
push
and
cmp
inc
fisubrs
in
popa
push
sbb
aad
pop
sbb
insb
test
mov
jle
xor
mov
addr16
mov
insl
mov
mov
push
iret
in
adc
xchg
int3
pop
call
dec
pop
scas
cmpsb
adc
mov
data16
pop
out
fstpl
sbb
xchg
scas
test
cwtl
sbb
cmp
dec
xor
mov
xchg
mov
add
ret
rorl
pop
cmc
inc
sbb
dec
pop
xchg
xchg
pop
cmp
rcll
adc
aam
jecxz
idivl
adc
jg
mov
imul
out
scas
loopne
inc
jecxz
adc
or
sar
fs
inc
inc
push
sbb
mov
dec
nop
in
pop
cmp
loopne
mov
test
jns
aam
test
cmpsl
xchg
leave
fwait
js
sti
mov
call
sub
sahf
test
in
adc
push
stos
mov
mov
pushf
scas
xlat
stos
mov
or
loopne
or
push
fadds
call
repnz
dec
test
pop
popa
inc
fwait
in
es
mov
pop
pop
cs
test
fwait
aam
push
int
xor
adc
xchg
mov
pop
sbb
leave
aad
pop
into
cltd
into
std
mov
pop
sub
mov
fsubs
js
mov
mov
stos
scas
add
lret
xchg
outsl
test
fidivrl
xchg
fistps
cmp
mov
xor
ret
dec
les
xlat
clc
jp
lods
subl
pop
push
jl
inc
adc
outsb
mov
orl
xchg
scas
xchg
jae
jg
cs
out
or
cmpsb
jmp
add
mov
xchg
mov
inc
inc
mov
mov
cmpsl
add
cltd
rep
dec
loop
adc
jbe
cmc
or
leave
iret
mov
out
sbbb
mov
inc
sbb
fdivrl
test
push
dec
mov
loopne
mov
insb
sub
sbb
xchg
fisubrs
inc
das
inc
cmc
cmpsl
jbe
repz
out
ljmp
scas
mov
jb
pop
push
testl
in
xchg
add
push
lods
out
pop
filds
jae
out
arpl
sbb
enter
push
icebp
cmp
shll
push
mov
test
sub
sub
mov
dec
push
shl
shlb
jo
les
xchg
imul
aam
cmpsl
mov
test
dec
outsl
or
adc
pop
adc
adc
mov
icebp
sub
shlb
inc
sbb
push
mov
dec
pop
rcrl
push
jae
insb
inc
dec
cld
cltd
pusha
push
mov
testl
popa
sub
arpl
in
subl
out
mov
lods
xorb
push
inc
jecxz
test
insb
cmp
and
call
sar
pop
lods
setno
movb
loop
arpl
push
push
jp
sub
adc
jmp
clc
and
jmp
arpl
outsl
add
pop
mov
pusha
sub
xchg
inc
ljmp
mov
pop
aaa
fadds
outsl
xchg
js
loop
pop
mov
adc
sbb
in
xchg
cmp
cmp
stos
pop
mov
sbb
ret
clc
test
pop
rcr
mov
push
shlb
outsl
scas
push
dec
repz
pop
scas
jp
jle
mov
cltd
mov
push
xchg
clc
jp
aad
dec
push
cmp
sub
loopne,pt
or
cwtl
sbb
stos
push
jb
xchg
mov
and
push
sbb
adc
pop
mov
lods
jge
vpsubw
shrb
insb
adc
push
xchg
loope
xchg
pop
sbb
leave
push
or
cmp
adc
lret
stos
pop
jb
test
jae
jmp
ret
cmp
test
aam
test
jp
into
aas
pop
push
outsb
nop
loop
into
pop
nop
xchg
lcall
insb
int3
or
sbb
icebp
cmpsb
int
add
ja
xor
dec
lea
leave
clc
add
sti
dec
sub
pushf
cltd
aaa
aas
lods
dec
sti
das
add
movsl
je
insb
sti
mov
enter
popf
cmpsl
stos
inc
fisubl
inc
insl
mov
xchg
and
add
xchg
pop
int
out
mov
jle
xor
add
dec
rcrl
cmc
dec
shll
xlat
sbb
push
cmp
sbb
push
jge
mov
fs
mov
cli
push
jl
iret
rorl
ror
movsb
fisttps
cmc
mov
push
jo
mov
loopne
xlat
pop
popf
mov
lea
hlt
xor
adc
aaa
test
scas
mov
int
out
das
ljmp
mul
cmc
pop
dec
push
mov
jecxz
pop
add
movsb
mov
inc
popa
mov
xor
or
jb
les
pusha
or
cmp
inc
cli
cmpsl
push
push
xor
adc
push
push
inc
addr16
pop
out
scas
mov
mov
sub
xchg
or
xor
mov
icebp
sub
and
fisttpll
aad
and
add
xchg
lds
sbb
mov
fnsave
shrb
jecxz
adc
mov
fmuls
imul
xchg
mov
pop
jl
xchg
jno
xlat
sbb
add
or
movsl
movsl
stc
push
mov
pushf
mov
inc
mov
shrb
add
jbe
notl
rol
mov
mov
mov
mov
mov
repz
repz
das
and
adc
fs
dec
ret
shrb
inc
xchg
push
mov
cmpsl
pop
in
pop
xchg
mov
xor
xchg
ret
std
jmp
sbb
imul
aaa
rclb
push
push
sti
in
inc
sub
xchg
or
inc
out
add
cmp
dec
mov
repz
lods
subps
ret
mov
pop
pop
jbe
push
ret
mov
or
pusha
push
cltd
adc
and
jb
sbb
stos
add
shrl
lcall
sub
mov
add
jns
lock
xchg
xchg
and
mov
les
adc
test
dec
adcb
cmp
dec
cli
jnp
imul
fidivrs
xchg
lea
iret
pop
out
fcomp
add
int
in
movsl
fwait
enter
dec
aad
pushf
test
aas
stos
adc
cmp
scas
or
adc
fsubrp
cmp
dec
lea
mov
sbbb
jns
in
mov
notl
loope
or
aad
sbb
push
inc
fdivrl
loop
adc
jmp
gs
pop
out
divb
lcall
cltd
in
js
scas
out
mov
aas
in
adcb
and
dec
lods
dec
mov
dec
fcmovu
xchg
adc
cltd
out
xchg
cmp
mov
dec
mov
loop
cmc
call
or
rcll
mov
lahf
adc
jns
mov
shlw
mov
les
adc
dec
insl
mov
xchg
pop
xchg
push
lea
adc
stos
fldl
inc
add
jbe
dec
shlb
add
sub
pop
sbb
xchg
aaa
lods
popa
cmp
cmp
adc
mov
in
outsb
fwait
cmc
sbb
cli
mov
dec
add
add
jmp
iret
test
adc
or
mov
sbb
sbb
lret
inc
fistpl
pop
lods
jge
adc
push
mov
dec
inc
out
jne
adc
pop
or
mov
xor
fnstsw
dec
loop
jle
or
dec
out
adc
lcall
dec
out
xor
sbb
ret
and
cmp
mul
ljmp
xchg
dec
pusha
outsl
push
xchg
pop
jp
sub
mov
push
inc
jecxz
dec
or
dec
jae
sub
adc
add
xor
hlt
jg
xchg
rcl
adc
bound
js
and
inc
push
ss
adc
lahf
aam
incl
jnp
jle
popa
imul
sub
xchg
cs
mov
es
mov
mov
fcoms
cwtl
sub
add
or
lods
test
notb
jmp
call
pop
push
xor
push
xor
lcall
inc
push
push
rol
lahf
and
sub
jmp
sub
push
fstpl
out
mov
push
push
cmp
arpl
push
cmc
jb
and
imul
sbbb
shrl
push
lea
mov
mov
add
ret
pop
inc
les
sbb
lcall
clc
stos
call
xor
mov
pop
jne
xchg
jb
inc
jp
scas
aaa
popf
mov
xchg
sbb
test
pop
and
adc
jle
pop
scas
pop
jl
dec
cli
push
xorb
lods
cmp
cmp
add
fs
push
jecxz
gs
mov
in
push
jo
sub
sub
adc
cmpsb
nop
fidivrs
and
or
repnz
mov
sbb
ds
popf
ljmp
nop
das
test
dec
aam
adc
fisubl
std
out
cld
adc
stc
in
addr16
loop
cmpsb
xchg
les
out
xchg
xor
mov
pop
inc
sub
dec
jecxz
push
mov
sbb
arpl
cltd
cmp
les
sbb
arpl
dec
inc
add
lret
pop
pop
dec
mov
dec
lock
bound
jecxz
xchg
push
jns
sbb
pop
mov
push
es
test
jbe
cmp
and
xchg
jmp
adc
mov
and
inc
mov
shlb
insl
je
or
jp
inc
lea
sbb
inc
dec
outsb
cld
test
shlb
sbb
imul
arpl
pop
add
pop
sti
ljmp
pushf
jmp
push
fwait
cmp
pop
mov
and
in
xor
fisubs
stc
inc
mov
leave
dec
dec
ljmp
jbe
mov
mov
adc
add
or
ficoms
sarl
sub
inc
sar
jl
and
frstor
into
cs
cmp
sbb
out
add
fisubs
test
xchg
ret
and
stos
xor
mov
dec
adc
mov
lret
fcompl
inc
cmp
jmp
push
stc
cmp
jmp
lret
pushf
cmp
lcall
pop
xor
movsl
and
mov
adc
sub
mov
adc
adc
pop
addr16
test
fcmovne
call
aaa
pop
mov
cwtl
xor
int
cs
call
out
inc
and
adcb
and
cmp
mov
pop
push
iret
inc
sbb
cmp
adc
cli
stc
out
sbb
mov
dec
int
mov
sbbb
and
inc
or
xchg
outsl
fcomi
push
imull
subb
push
rcrl
or
mov
aad
outsl
adc
mov
inc
push
sbb
in
pusha
sub
lret
or
pop
inc
sbb
mov
imull
push
rcll
cmp
popa
jb
mov
cmc
push
xchg
add
mov
push
fbld
fs
jmp
stos
jno
test
lret
in
cmp
outsb
rcr
dec
jnp
and
add
add
jns
mov
pop
fstl
pop
sub
push
mov
std
adc
xor
loope
mov
jne
sbb
enter
lods
pop
out
sub
pop
fcoms
mov
stc
stos
mov
dec
dec
add
cs
cwtl
push
xchg
idiv
inc
les
xor
stos
movsb
loop
fbstp
and
fcmovnbe
push
insl
mov
sub
lahf
push
cwtl
xchg
in
ret
cltd
popf
imul
pop
ljmp
ja
sub
fadds
mov
fcoms
test
mov
popa
jecxz
mov
mov
mov
sti
dec
inc
fwait
clc
repnz
inc
lods
fsubs
push
out
shlb
adc
jmp
stos
xor
out
and
shlb
dec
inc
call
lods
loopne
cmp
adc
clc
popf
add
dec
push
jno
adc
imul
imul
testl
sub
cmpsb
inc
xlat
call
psadbw
jb
mov
pop
pop
bound
push
mov
out
mov
xacquire
xchg
inc
pusha
push
push
or
testb
cmp
cmpsl
popa
lods
lcall
mov
jp
jmp
les
add
lds
push
dec
push
ja
cmp
subb
inc
cmc
xor
leave
add
stos
fdivs
mov
jecxz
mov
rcl
mov
das
dec
dec
push
jb
cmp
stos
sahf
sub
xorl
inc
fdivrs
rclb
daa
sub
mov
sahf
mov
xor
pop
fcmovnu
int3
ret
leave
mov
das
adc
ljmp
fnstsw
add
insb
imul
add
add
mov
pop
vpextrw
mov
dec
outsl
adc
and
jecxz
mov
xchg
lret
imul
lods
or
adc
out
imul
cmpsl
or
inc
lods
sub
mov
adc
pop
pop
cld
aad
enter
mov
push
add
jbe
and
sub
jnp
insl
and
inc
mov
jne
add
sti
lret
cmpsb
repz
es
lock
movsb
jl
add
push
iret
sub
push
mov
push
loopne
pop
push
add
nop
mov
pushf
lea
cwtl
cmc
sub
popl
mov
cltd
sbb
pop
mov
lock
in
push
ss
add
dec
leave
cmp
cltd
shlb
adc
inc
mov
xor
push
data16
es
add
std
xchg
xchg
cmp
lods
xor
movhlps
adc
loope
and
clc
push
push
jecxz
sub
add
cli
mov
sbb
out
push
xor
mov
jno
popf
imul
repnz
sub
inc
test
dec
mov
pcmpeqb
cld
xor
inc
movsl
xchg
pop
mov
stos
mov
sbb
cmpsl
into
xor
mov
imul
in
cmp
out
daa
lret
ror
jae
add
aam
jns
es
mov
mov
mov
xor
int3
cltd
pop
lcall
pop
xor
xor
pop
ja
stc
stos
cs
aam
bound
mov
repnz
adc
pushf
lods
out
jg
scas
ss
stos
movsb
mov
les
negb
popf
pushf
test
or
aam
movsb
sbb
lock
test
jg
mov
imull
fsubrp
mov
xor
std
mov
xchg
out
xchg
movsb
testl
loope
mov
leave
xchg
jb
mov
add
mov
xlat
jp
add
adc
push
dec
xchg
dec
push
mov
out
cmp
pop
jp
xchg
fmull
sahf
pusha
clc
push
mov
data16
ret
push
test
inc
xchg
cmpsl
xlat
lds
adc
stos
xchg
push
jecxz
movb
fisubrl
jne
jmp
dec
inc
fsubl
repz
fdivp
lret
sbb
ret
cmp
int
out
scas
adcb
pop
insl
inc
shrl
rcrl
cwtl
cli
adc
xor
lea
repnz
pop
ljmp
repnz
jg
xchg
mov
int
dec
dec
cs
lea
imul
and
pop
fsubp
push
add
xlat
mov
or
mov
sbb
mov
divb
and
mov
push
sub
repnz
sbb
dec
rcll
in
mov
int
mov
loopne
pop
or
cwtl
dec
and
adc
cltd
mov
pop
sub
test
lahf
loopne
xchg
cli
xor
dec
out
push
out
pop
jb
imul
insl
pop
lcall
insl
mov
pop
jmp
add
and
pop
imul
sarl
lods
sbb
push
lods
and
idivl
and
cmc
or
mov
inc
sub
push
push
mov
clc
stos
pop
ror
mov
and
repz
sbb
fwait
rolb
pop
jne
xchg
or
xchg
stos
cmpsb
inc
fstps
mov
test
sbb
xchg
ficompl
pop
sti
cli
lahf
and
push
mov
popa
dec
out
xchg
loop
xchg
imul
sub
rorb
jb
leave
cwtl
pop
arpl
call
jnp
and
and
rcll
std
fbld
push
mov
stc
xchg
rcrl
mov
mov
cli
iret
jl
ds
dec
jnp
pop
lret
fwait
mov
jle
aas
xor
mov
jmp
sub
xorl
scas
push
and
sti
xor
or
pop
sbb
pop
mov
xlat
sar
outsl
sahf
mov
push
shr
xor
pushf
jbe
jl
dec
data16
adc
ficompl
movsl
out
mov
mov
mov
mov
fs
add
bound
push
xor
pop
inc
mov
push
cmpsb
inc
jno
inc
dec
dec
rorb
add
mov
out
iret
mov
fcoml
push
outsb
mov
pop
inc
push
aaa
mov
jg
popf
cmp
add
lods
xor
hlt
and
call
es
dec
jmp
add
and
mov
lock
mov
mov
adc
subl
dec
cwtl
clc
insl
out
push
testl
scas
cmp
mov
test
nop
lds
cmp
add
ja
insl
cli
std
pop
stc
outsl
insb
inc
inc
jg
add
mov
idiv
jne
push
adc
xchg
js
sahf
inc
outsl
hlt
lods
sbb
daa
push
mov
xor
push
pop
data16
orb
fdivl
mov
loopne
and
cmp
arpl
fsubr
fs
cwtl
xor
jp
xchg
shrb
xchg
jge
mov
pop
repz
out
push
mov
xor
dec
rcll
sub
mov
arpl
xchg
adc
lcall
dec
inc
and
pop
iret
cmc
add
mov
mov
adc
adc
and
outsb
insl
jecxz
and
mov
sbb
lods
movsb
sub
aam
sahf
hlt
push
adc
daa
or
push
lea
mov
jne
and
int
xor
bound
sarl
out
add
shl
cmp
imul
inc
jo
push
scas
mov
out
dec
cmp
cmp
sahf
dec
ss
or
negl
add
pop
scas
shrl
sub
pop
sbb
jbe
xchg
int
jmp
pop
movsl
sub
addr16
cmp
roll
insl
pop
xchg
repz
pop
pusha
stos
xchg
iret
stc
in
xor
iret
adc
das
out
jle
sti
arpl
sub
mov
jg
xor
dec
pushf
xchg
repnz
imul
sbb
mov
iret
inc
mov
push
scas
aaa
sahf
nop
dec
jp
aam
inc
es
sarl
push
out
cs
arpl
nop
pop
sbb
lods
xor
imull
jbe
sub
inc
xor
jns
xchg
sub
push
out
cld
mov
xor
lcall
in
lret
std
aam
pop
aas
inc
and
push
jae
add
mov
sbb
jae
mov
sub
mov
ret
xor
dec
and
bndstx
cmp
pushl
adc
mov
outsb
pop
push
jp
repz
stos
dec
test
dec
pop
rcl
roll
insb
jbe
xor
xchg
clc
ret
dec
sub
mov
dec
and
mov
xchg
je
ror
pop
jg
jne
das
mov
jo
addl
jl
loop
pop
push
and
push
mov
cmp
and
std
in
sbb
jae
or
adc
notb
or
sub
cmp
cltd
xchg
fs
cmp
inc
pop
popa
push
and
into
aam
test
push
dec
lea
mov
fwait
mov
mov
inc
inc
fsubp
subb
imul
das
stos
movsb
fstpt
sbb
or
pop
lock
push
pop
lds
stc
pushf
xor
push
repz
imul
in
push
into
in
mov
stc
jo,pn
and
or
jmp
add
push
add
sub
xchg
inc
scas
lahf
dec
jno
test
ds
ss
inc
mov
movsl
xchg
popf
lds
jle
pop
fidivl
dec
addl
inc
jnp
dec
sub
fldl
pop
dec
out
push
add
ret
or
mov
in
inc
and
lds
mov
lods
dec
hlt
iret
std
push
xor
cmp
ficomps
sbb
loop
and
push
inc
mov
pop
push
adc
pusha
pop
int3
pop
data16
jl
sbb
mov
xor
push
les
lret
pop
mov
dec
mov
enter
aad
mov
lcall
fwait
lret
mov
mov
push
pop
loope
xchg
jg
add
and
je
mov
dec
in
stc
mov
jmp
cmp
adc
and
hlt
inc
imul
repnz
stc
iret
mov
outsb
mov
jmp
loop
lcall
or
sahf
ljmp
mov
addr16
xor
dec
jle
or
or
mov
xor
lds
mov
xchg
cmp
xchg
lcall
push
js
ret
ret
or
ficoml
push
out
test
aaa
loop
out
add
cmc
outsl
mov
cwtl
setle
xchg
rcrl
scas
ljmp
pop
xor
inc
lods
rol
fildll
xor
or
lock
jae
insb
shlb
or
js
vmwrite
inc
add
andb
call
xchg
popf
data16
sub
jmp
fsubrl
mov
sarl
xor
enter
popf
inc
ffree
in
cmc
xor
test
ljmp
push
sbbb
sub
mov
in
sbb
inc
mov
sbbl
cmc
push
and
into
rcr
mov
shlb
test
fwait
jle
shl
imul
and
sub
pop
jl
jmp
popf
xchg
ds
mov
mov
sub
lret
mov
aad
dec
js
out
dec
stos
aad
adc
cmpsb
lods
cmovno
shlb
push
mov
daa
inc
shr
or
xchg
clc
cmp
mov
dec
dec
fstp
push
es
add
iret
push
mov
es
or
dec
jb
pop
cmp
cmpsl
jbe
pop
pop
push
adc
bound
mov
lret
lds
loopne
cmc
subl
cmpsl
adc
xor
or
lcall
clc
daa
inc
js
call
movsb
imul
push
fwait
int
ljmp
jmp
out
dec
mov
pop
add
mov
mov
in
clc
sub
mov
push
xchg
lcall
or
mov
jle
and
les
sub
xchg
stc
cmp
flds
mov
in
pand
jbe
sub
int
mov
cmpsb
add
lds
pop
int3
cltd
cmpsb
leave
mov
lock
rcrb
mov
mov
imul
out
sub
mov
sbb
sbb
or
out
scas
imul
mov
cmp
addb
xlat
or
jmp
sub
scas
dec
lcall
pushl
mov
in
mov
xchg
vminps
fidivs
xor
cmp
incl
cmp
mov
mov
lret
popf
aad
fdivs
test
js
lds
pop
fldcw
mov
stos
out
pop
jge
add
nop
mov
imul
cmpsl
orl
jl
inc
push
push
fwait
mov
or
lods
add
jg
mov
adc
out
insb
fs
mov
in
cmc
pop
cmp
insb
pcmpeqb
cmc
enter
dec
or
test
xor
lret
fwait
mov
and
movsb
mov
inc
adc
jo
or
mov
xor
jbe
rcrl
dec
ror
xor
and
sbb
shlb
gs
mov
cmpsl
fcompl
or
lock
nop
push
orb
outsb
bnd
jmp
mov
scas
mov
push
mov
mov
mov
adc
inc
inc
adc
imul
adc
or
xchg
lret
lret
push
shll
pop
inc
mov
jecxz
xor
dec
adc
rclb
mov
sbb
mov
enter
cmp
mov
add
inc
jge
dec
sahf
xchg
ret
fldenv
dec
fwait
mov
ret
lret
loopne
push
call
test
je
testl
jb
mov
push
push
cmpsb
mov
popa
xchg
or
push
jne
mov
jnp
subb
mov
pop
mov
lods
js
sbb
pop
jecxz
mov
stos
aaa
fidivs
sbb
pop
out
pop
loopne
out
addl
popl
pop
icebp
subl
pop
jp
cmp
ret
movups
es
test
push
cmp
add
ds
xor
or
push
fidivrs
pop
and
cli
push
fs
dec
fsubr
out
test
xchg
xchg
adc
sub
jge
mov
xor
jg
pusha
int
mov
iret
aas
pop
pop
xchg
add
push
inc
jp
lea
fisubs
dec
fcoml
imul
cli
sub
int
xlat
push
pop
rorb
test
lahf
adc
and
cwtl
jge
hlt
inc
fimull
and
in
shlb
insl
mov
xor
adc
fcoms
in
mov
mov
in
test
xchg
mov
xor
xor
jnp
into
or
gs
pop
aaa
dec
popa
sub
mov
ljmp
adc
in
mov
stc
adc
add
mov
repnz
fnstcw
mov
fildl
pop
xor
mov
sbb
and
mov
fmull
mov
cmp
ljmp
fildl
mov
gs
leave
iret
jmp
in
stc
outsb
mov
push
nop
je
mov
shll
movsb
jb
outsl
push
sub
out
ljmp
pop
sti
xlat
fistpl
mov
insl
scas
or
not
pop
adc
xor
outsl
add
jb
sub
mov
stos
xchg
loopne
mov
xchg
push
add
xchg
movb
push
jg
push
jbe
sbb
lods
fmul
jg
dec
clc
cld
or
out
jb
icebp
rclb
or
cmp
sbb
sub
jge
in
xlat
ja
sahf
lahf
push
xor
push
stos
xor
adcl
imul
or
xchg
scas
xor
addl
out
arpl
push
jmp
addl
push
push
bound
xchg
sub
add
movsb
divl
mov
sbb
inc
xchg
sbb
fnsetpm(287
dec
test
sub
rcl
inc
dec
out
fcomps
insl
mov
cmp
pop
inc
push
jg
call
lahf
xchg
cmp
push
lods
jp
scas
pop
arpl
repz
cmp
push
mov
cs
aaa
mov
and
push
bnd
dec
mov
xchg
arpl
push
imul
push
stos
ds
pop
gs
aaa
aam
inc
jge
jp
pop
fidivs
inc
jl
sbb
repz
lret
dec
jb
ljmp
scas
test
fistpl
pop
xor
repnz
test
adc
lods
cltd
sbb
xor
inc
in
std
scas
adc
fisubrl
xchg
int
incl
dec
es
scas
mov
js
jge
inc
push
mov
xor
dec
mov
mov
xorl
cli
cmp
mov
fwait
xor
cmp
cmpsl
clc
or
xor
inc
cltd
mov
dec
jl
mov
loope
lret
inc
cmp
inc
iret
push
test
fisubs
mov
add
js
jl
dec
mov
push
vdivss
mov
stos
and
lcall
add
pop
xchg
loop
aam
jno
fstp
fimuls
adcb
cmp
dec
movsb
call
push
sub
aad
enter
insb
adc
in
mov
mov
fdiv
pushf
sub
ds
stos
fidivl
cmp
lret
popf
cld
int3
dec
or
push
dec
cmp
xor
aaa
mov
xor
xor
fbstp
add
loopne
inc
push
cmp
rcll
stos
sub
fbld
mov
cmpsl
jnp
and
stos
push
jnp
xchg
pop
ja
mov
sub
insl
adc
les
test
mov
call
ja
insb
push
out
test
setg
push
std
sbbb
mov
les
and
cmp
cmp
jge
cmp
subb
adc
popf
inc
xor
inc
pop
cmp
and
fwait
sbb
push
ret
repz
incb
mov
jecxz
int3
icebp
mov
stos
cli
lock
ret
jle
lock
fiadds
sbb
add
mov
imul
pop
iret
aad
adc
pop
fldenv
enter
adcl
add
cmpsl
push
loope
jle
push
cmp
fxch
mov
cli
sbb
in
je
sbb
jne
xlat
jl
or
shll
das
inc
push
enter
push
fmul
insl
iret
sub
push
in
faddl
clc
rcr
push
imulb
loop
pop
dec
call
cmc
hlt
add
jns
iret
mov
pusha
jb
push
aas
aad
test
jmp
xchg
inc
pop
inc
sub
sbbb
adc
mov
cmp
xor
rcl
cmp
push
or
dec
icebp
xor
movsl
push
cs
or
dec
clc
xchg
nop
push
mov
and
mov
ret
mov
sbb
ret
outsl
insl
mov
cltd
xor
loope
movsl
rcrl
incl
je
xlat
outsl
in
mov
rorl
and
or
js
add
push
testb
inc
jne
je
adc
cltd
pop
pop
mov
sti
sbb
hlt
cli
rcrb
mov
test
arpl
idivb
rcll
xor
dec
pushf
sub
push
sbb
shl
or
cmovbe
pop
pop
sarb
mov
les
and
mov
sarb
add
leave
cmp
mov
cmpsb
js
xchg
add
push
xchg
enter
cmp
dec
movsb
shl
xor
mov
hlt
fwait
and
adcb
push
adc
aaa
ja
dec
sbb
stos
push
jno
pushf
pop
ja
and
mov
adc
sub
cmp
rorl
aas
dec
push
or
mov
addr16
xchg
xorb
xor
mov
mov
test
dec
add
out
out
mov
push
dec
jg
scas
push
ret
adc
cmp
negl
les
and
adc
popf
mov
mov
fsub
or
cmp
loope
pop
in
adc
pop
xchg
add
add
adc
cmp
push
iret
pmaxub
cmpl
cmp
xor
jnp
mov
dec
add
jns
ret
lods
loope
or
add
sbb
jg
aad
lret
jo
int3
loopne
xchg
dec
mov
pop
stos
mov
outsl
cmp
mov
jge
adc
xlat
add
ljmp
sbb
dec
loope
jg
stos
xchg
fadd
cmp
ljmp
bound
cld
mulb
fdivrs
shrl
hlt
dec
xor
out
les
int3
das
mov
pop
inc
dec
es
loop
inc
pop
fwait
pop
out
jmp
xor
mov
jne
cld
cmp
pushf
icebp
inc
mov
loop
jae
leave
loopne
pop
push
stos
push
push
push
shrb
data16
fidivrl
cmp
jp
aad
sarb
mov
lock
push
inc
pusha
or
hlt
sbb
dec
mov
icebp
ds
loope
lds
fadds
push
mov
sub
test
sti
push
xlat
adcl
ja
sbb
xlat
pop
pusha
sbb
pop
ret
inc
push
stc
mov
mov
lock
push
pop
mov
in
aad
xchg
inc
stc
dec
out
inc
arpl
out
dec
xchg
roll
popa
jge
cld
aad
icebp
icebp
add
mov
xchg
scas
outsl
xchg
jp
jne
sub
pop
movsl
loopne
addr16
lret
lcall
insb
es
push
test
push
scas
outsl
sbb
fcoms
icebp
mov
pop
pop
insb
cmpb
push
outsl
dec
sub
shrb
outsb
pop
jle
jb
or
repnz
fistpl
ret
loope
sti
cmp
pop
ds
sbb
stos
push
push
pop
mov
jnp
fwait
pop
lcall
xchg
out
jecxz
sub
lret
mov
leave
fidivrl
data16
out
test
les
jge
popf
fcmovne
or
lods
lahf
dec
xchg
cmp
push
dec
pusha
xchg
mov
mov
shlb
test
stos
cli
xchg
fwait
mov
imul
jo
cmpsl
cld
fsts
jg
push
xlat
or
insb
and
mov
aad
jg
nop
push
pop
jbe
scas
cmp
cmp
pop
aaa
adc
adc
aaa
mov
fdivl
lods
or
push
lea
xchg
mov
lods
dec
dec
mov
cli
scas
dec
lods
loop
lahf
pop
pop
xchg
mov
les
sti
add
aad
repnz
jge
fsubr
incl
lods
imul
lods
sub
cmp
add
pop
nop
push
into
adc
sarl
test
mov
mov
cltd
mov
pop
mov
xchg
lcall
sti
xchg
cmp
cs
lcall
icebp
loope
lret
and
shrb
jl
out
clc
inc
mov
mov
dec
push
pop
sbb
lret
cmc
mov
add
sbb
pop
inc
lahf
xchg
lock
push
psadbw
cmp
mov
and
and
mov
ds
mov
dec
and
ss
sub
andb
sbb
push
fstps
rcr
ret
rorl
pop
aad
int
and
cmc
push
push
scas
icebp
or
inc
dec
gs
sub
sub
adcb
arpl
jno
insb
sub
aaa
fwait
mov
and
popl
pop
pop
inc
mov
jo
xchg
add
aam
push
sarb
fbstp
scas
cmp
sbb
add
cmp
ljmp
push
leave
out
mov
int3
pop
outsb
sub
add
push
mov
leave
adcl
sbb
testl
jo
jle
sub
xor
adc
fstpt
out
cmp
jmp
js
adc
jo
jmp
xchg
arpl
mov
shlb
cmpsl
shrb
rcr
cltd
inc
repnz
mov
and
push
sahf
mov
mov
xor
divl
xchg
addr16
iret
test
jp
sahf
les
mov
xchg
push
test
pop
popf
inc
cmc
dec
into
mov
sub
xor
sbb
or
int
jnp
mov
insb
push
add
xlat
js
imul
jp
std
pop
in
add
call
iret
jp
xchg
xor
test
subl
push
mov
or
dec
dec
data16
xchg
shlb
rcrl
adcl
es
repnz
sbb
adc
adc
pushf
outsl
jb
sbb
fisubrl
mov
das
dec
jle
xlat
daa
fwait
lret
jl
idivl
xor
fiaddl
pop
iret
mov
icebp
rcrl
adc
pop
push
add
sbb
sub
dec
xchg
jle
or
out
dec
test
add
loop
gs
aad
jbe
xor
aaa
pop
out
inc
mov
mov
rcrl
fistpll
into
mov
out
int
mov
movsl
dec
loop
lret
xor
rcrb
rolb
or
rolb
push
jbe
push
aad
or
roll
ljmp
cmp
movsb
cmc
call
push
test
test
andb
jp
xchg
stc
neg
std
mov
in
sub
xchg
jge
lock
push
lahf
mov
mull
cld
adc
sub
push
gs
xor
cltd
fsubrs
pop
jne
test
bnd
jmp
add
dec
cmp
mov
push
pop
fists
arpl
mov
iret
stos
mov
pop
aam
test
push
adc
pop
jbe
and
pusha
mov
or
dec
loope
mov
jmp
push
stos
and
out
into
mov
push
inc
mov
cmp
add
shlb
push
and
mov
pop
inc
mov
adc
mov
inc
lret
mov
cmp
mov
jo
lods
in
push
insl
test
mov
aam
sahf
xor
mov
sbb
mov
or
xor
outsl
push
sahf
add
dec
mov
fsubr
stc
add
push
push
mov
adc
pop
jp
sub
out
ljmp
push
sub
inc
fmul
xor
add
mov
mov
mov
imull
cmp
xor
and
mov
xor
cmpsl
xor
lods
push
imul
loop
push
clc
scas
ljmp
ss
ret
int3
dec
addr16
sbb
outsl
pop
lahf
pop
cmpsl
mov
lds
and
loope,pt
enter
fists
sti
cld
inc
pop
push
jp
mov
and
add
inc
inc
mov
icebp
push
aaa
std
pop
stos
aas
push
je
xchg
sub
cwtl
mov
ja
mov
ljmp
pop
out
inc
push
pop
cmp
and
xor
popa
popf
adc
adc
pop
rcrb
and
cwtl
out
mov
sub
scas
jecxz
mulb
lds
jo
add
out
lods
iret
mov
sbb
in
dec
int
pop
cltd
sbb
ret
inc
mov
shrl
or
mov
iret
xchg
push
and
fdivr
scas
mov
and
sbb
icebp
cmp
lret
add
pop
adc
out
jnp
lahf
outsb
loopne
mov
es
sub
sub
rolb
rcrl
adc
jbe
adc
movaps
test
call
lea
dec
xlat
push
js
repnz
icebp
push
pop
dec
jnp
fs
test
push
jae
or
jb
xchg
iret
pop
pop
inc
in
jb
pop
loope
mov
lret
mov
add
cmc
adc
int3
cmp
rcrb
movsb
in
fdivrl
cmp
push
xchg
cmp
stos
rcl
xor
and
cmpsb
aas
aas
stc
repnz
lock
inc
rcr
or
jmp
push
into
pop
outsl
dec
out
mov
bound
jmp
dec
cmc
adc
loope
icebp
jg
add
pop
int
add
subb
push
cmc
fldenv
scas
sub
je
cmc
jae
shll
loop
insl
push
adc
sbb
push
xchg
mov
fisttpll
fisubs
rorb
movsl
ror
icebp
hlt
sub
in
mov
sbb
pop
popf
js
sub
icebp
lods
sbb
dec
stos
pop
test
add
and
sbb
sub
sbb
inc
push
or
sbb
sbb
xlat
repnz
xor
xor
mov
imul
ja
subb
cmpsl
push
imull
out
arpl
xchg
stos
mov
dec
cld
xchg
pop
xchg
das
dec
call
xchg
lea
imul
pop
enter
xor
fsubrp
and
out
lock
jge
aam
mov
inc
mov
mov
pop
mov
jbe
lods
les
out
cmpsb
mov
xchg
mov
add
lods
repz
push
mov
and
fwait
mov
bound
sub
lret
jne
ror
or
jge
push
cmp
call
push
popf
clc
fsubs
mov
std
lea
mov
cli
je
mov
int
out
jne
push
xor
xor
cltd
pop
xchg
or
shlb
jmp
out
ret
dec
mov
mov
push
arpl
xor
rcrb
jne
ljmp
mov
imul
inc
xchg
stc
inc
or
mov
and
mov
adc
lods
push
and
sub
pop
mov
sbb
lahf
cmp
xchg
cmpl
dec
inc
cwtl
xor
insb
repz
movl
jg
dec
iret
mov
mov
movsl
dec
mov
cltd
out
dec
outsb
sahf
sbb
hlt
adc
xor
pop
pop
nop
and
negb
outsb
mov
mov
jae
jae
cmp
push
insb
jp
pop
movsl
mov
into
mov
ds
sbb
and
add
push
leave
and
inc
xor
inc
xchg
jbe
mov
add
sub
in
jg
inc
repz
push
lcall
and
cli
sub
fistl
loopne
rcrb
mov
push
cmp
adc
inc
xor
ret
fwait
xchg
mov
sbb
out
gs
lcall
test
pop
loop
cmp
inc
push
cltd
test
xor
xchg
push
mov
fistpll
xchg
pop
aaa
cltd
dec
insb
push
or
or
cmp
inc
pusha
and
jmp
dec
mov
data16
mov
cmp
cmp
icebp
lea
jecxz
es
pop
jg
and
lret
aaa
xor
adc
or
jge
aaa
adc
lods
jno
xorb
adc
inc
dec
lcall
sbb
lret
pop
test
div
xor
push
jecxz
mov
ljmp
push
hlt
add
adc
add
out
mov
sahf
push
mov
or
aas
jecxz
xchg
shlb
cwtl
loop
fnstsw
mov
stc
clc
add
loope
addr16
out
jle
fucomip
cli
inc
xchg
xchg
ds
xor
ja
ljmp
lock
push
cmp
adc
and
pop
xor
mov
fisubrs
je
jb
sbb
xlat
fidivrs
fwait
sbb
xchg
filds
cld
mov
icebp
dec
jns,pt
ja
or
xor
lret
mov
dec
out
stos
ds
shlb
outsb
push
push
call
imul
mov
cmpsl
mov
push
scas
dec
cmp
and
int3
rcll
fs
and
mov
lock
mov
int
inc
sti
mov
push
cmpsb
aaa
jno
jbe
push
sbb
pop
call
lea
adc
out
pop
xor
sbb
aaa
mov
fidivrl
jbe,pn
mov
test
movsb
lock
pop
mov
stc
add
mov
sub
ret
pushf
fbld
lods
neg
cmpsl
cmp
insb
pop
pop
xor
sbb
fsubs
cmpsb
fst
movsb
mov
cmp
addr16
mov
mov
sub
mov
cli
push
adc
mov
rcrb
ss
mov
inc
fldl
mov
dec
sarl
insb
ret
sub
hlt
je
mov
cmpsb
ljmp
lock
cmp
out
loop
arpl
das
sbb
call
inc
lock
cs
mov
cmp
jnp
sar
mov
add
mov
sub
mov
xchg
cli
in
cmp
jle
inc
pop
or
and
leave
scas
arpl
pop
push
loope
cli
mov
rcrl
ret
mov
and
xchg
leave
fwait
repz
mov
sbb
sub
pop
seto
or
xchg
pop
jno
inc
jae
in
push
mov
ds
sub
pop
sub
js
and
int3
mov
sub
out
push
sti
lock
cmpsb
pop
mov
xchg
lret
xor
in
cmp
mov
into
inc
pop
stos
jbe
inc
addr16
cld
sti
xor
cmp
push
cmp
xor
out
cmp
mov
notb
popf
push
incl
call
sti
cld
fs
cld
adcl
xchg
and
rorl
cmp
mov
cmp
sarl
in
bound
push
lods
add
out
std
mov
cltd
test
dec
cs
cmp
mov
adc
cli
lret
sarl
iret
mov
lds
mov
push
leavew
es
sarl
jno
mov
cli
pop
add
push
or
inc
pop
push
mov
add
jno
sub
mov
dec
jle
sub
sbb
loope
mov
fidivl
mov
icebp
add
sub
pop
rcrb
push
sbb
sbb
adc
xor
mov
cmp
adc
test
jp
inc
sbb
push
cmpsb
out
dec
jmp
lret
movb
sbb
lcall
dec
jno
mov
pop
dec
adc
aad
jns
cmp
mov
loop
cmp
or
in
jbe,pt
fwait
mov
xchg
call
push
jp
mov
xor
scas
lea
cmpb
mov
xorl
inc
sub
lahf
bound
push
adc
cmovns
mov
push
mov
rcll
xor
and
adc
pop
dec
into
mov
mov
cmp
xor
mov
mov
mov
adc
sub
xor
hlt
lea
sahf
in
pop
and
mov
out
pop
add
in
pop
scas
sahf
sahf
aad
lods
stos
and
mov
ss
xlat
sbb
aad
xlat
lahf
jmp
cmp
xchg
rolb
imul
push
mov
cmpsl
addr16
push
push
popa
add
fiaddl
jae
ret
mov
mov
mov
adc
movsl
sbb
push
rclb
dec
outsl
shrl
adc
fistl
or
adc
inc
lret
add
mov
sub
fwait
outsl
push
repnz
add
sub
dec
sti
push
out
pushf
sarl
and
mov
mov
lret
mov
cltd
mov
in
addb
or
add
pop
dec
mov
or
push
mov
int
mov
cmp
out
lcall
pusha
std
pop
pop
jp
daa
add
sub
cmp
mov
cli
adcb
sub
push
and
cli
sti
pandn
test
cmpsl
mov
call
sbb
gs
sbb
pop
lahf
leave
loopne
jbe
lret
push
jno
sarb
lock
sbb
hlt
push
pop
mov
mov
test
and
xor
sbb
sub
sahf
sahf
push
iret
mov
adc
dec
fidivrl
enter
scas
cmp
icebp
jnp
push
xor
ret
gs
in
or
and
xor
test
sbb
lcall
inc
loop
mov
out
in
sti
xchg
call
cwtl
xor
negl
or
add
loope
and
or
pop
or
or
dec
jns
jl
sbb
fstps
dec
dec
orb
fcoml
lea
pop
clc
xchg
push
aad
sub
mov
xchg
repz
ficoms
adc
sbb
clc
sbb
pop
mov
push
mov
ljmp
xlat
xorb
lcall
push
xor
in
sbb
push
subb
mov
inc
lea
js
popa
mov
ljmp
mov
inc
fcmovu
insl
jo
push
mov
lcall
les
xor
push
jb
cs
dec
mov
inc
ret
sbb
adc
cmpsb
push
fwait
add
stos
pop
mov
fdivrl
aam
push
stos
jg
insl
jo
mov
or
xchg
movsb
outsb
fcomps
inc
les
nop
xor
or
rorb
sub
lcall
mov
aas
rcll
push
sub
mov
jl
mov
mov
outsb
cmpsb
fdiv
mov
or
cmp
dec
orb
sub
inc
loope
jge
inc
xlat
dec
popf
push
lahf
mov
iret
dec
movl
mov
hlt
mov
xchg
mov
mov
push
test
daa
jmp
mov
addps
add
push
cmc
in
mov
mov
hlt
sub
jmp
mov
gs
sbb
jno
sarl
mull
sbb
add
bound
mov
stos
mov
leave
add
jno
sbb
and
test
ljmp
ss
pop
rorb
xchg
jle
out
sub
cmp
sub
inc
dec
popf
or
mov
xchg
sub
jl
adc
mov
fwait
arpl
fwait
fwait
sub
call
dec
sbbb
push
out
mov
inc
mov
ret
dec
pop
cmp
add
nop
push
push
and
dec
pop
scas
xlat
pop
outsb
xchg
ret
into
jmp
aaa
ss
test
aam
xor
insl
mov
fcomps
rorl
mov
jae
dec
cmp
jb
stos
in
sbb
les
mov
mov
dec
out
scas
mov
mov
mov
fs
aam
dec
adc
popa
xchg
push
dec
xchg
imul
dec
xchg
imul
test
cmpl
xchg
pop
dec
rorb
mov
movsb
xorb
jnp
dec
adc
dec
sub
inc
scas
cld
mov
and
shlb
out
inc
movsb
ss
mov
and
or
xchg
mov
jno
shlb
call
and
cmp
cmpsb
inc
mov
jo
arpl
sbb
mov
jl
jbe
cli
std
aam
mov
out
mov
test
pop
pop
int3
mov
lret
pop
inc
sbb
adc
adc
cmpsb
adc
push
inc
fidivrs
inc
arpl
or
loop
jecxz
or
or
dec
cmpsb
bound
arpl
dec
fldenv
mov
xchg
loope
inc
pop
push
ds
sbbb
insl
pop
xchg
pushf
repz
out
and
dec
mov
into
lods
dec
cld
js
cmpsl
fistpl
movsb
mov
aas
mov
lock
loop
fdivp
loop
in
andl
hlt
push
cs
fwait
jbe
sbb
add
out
cld
hlt
shufps
filds
xchg
in
lcall
call
add
and
inc
jmp
scas
mov
mov
dec
xor
sahf
inc
adcb
lcall
filds
data16
loopne
mov
aaa
sub
or
std
in
sub
mov
add
push
mov
scas
or
lods
call
mov
in
ds
out
xchg
mov
insb
fs
aad
sar
or
testb
jbe
inc
push
stos
push
cmp
push
subl
scas
cmpsb
cltd
aad
loop
push
int
lds
je
addr16
add
ds
rcll
sbb
inc
inc
ficompl
mov
add
fidivl
cmp
push
ja
push
shlb
das
popa
cmpsb
aam
outsl
mov
sub
int3
sub
nop
mov
cmp
dec
add
mov
cmpsb
adc
fnstcw
jb
push
mov
rdtsc
push
pop
push
sub
fs
mov
vmwrite
mov
incb
fs
cmp
adc
fisubrs
icebp
inc
stc
inc
sahf
push
loop
stos
insl
push
mov
sub
or
test
decl
cs
adc
mov
ror
xlat
pop
out
pop
xlat
xchg
and
mov
inc
jg
jl
dec
xor
inc
push
roll
andb
lcall
out
call
mov
clc
outsb
imul
xchg
je
mov
push
sbb
mov
dec
pop
mov
sti
sti
pop
aaa
addr16
inc
leave
xor
xchg
inc
shll
test
shrl
or
lds
nop
dec
jo
sbb
scas
or
push
test
mov
bound
adc
cmpsl
call
cld
push
push
jle
fwait
xlat
out
fstpt
pop
or
and
push
jg
movsl
fwait
iret
mov
mov
adc
sbb
pop
push
aad
frstor
adc
cmc
mov
or
cmp
insb
jecxz
lock
adc
pop
push
push
sti
mov
hlt
sbb
add
andl
mov
dec
insb
lahf
cmp
sarl
test
inc
scas
cmpl
pop
inc
dec
fisubrl
int3
mov
scas
aaa
imul
imull
inc
xchg
push
push
leave
xchg
dec
adc
xor
int3
xor
mov
fsubr
daa
dec
mov
adc
scas
mov
and
mov
lods
out
pop
out
mov
xchg
add
nop
jbe
adc
dec
cmp
decb
mull
shl
lods
and
cmp
or
sbb
and
lds
insb
out
fadds
out
mov
jecxz
xor
cmp
xchg
cli
xorl
xor
stos
xor
mov
into
into
sbb
dec
ret
in
filds
popf
hlt
out
popa
flds
repnz
dec
adc
dec
pop
in
movl
xor
imul
inc
outsl
inc
ret
cld
jne
out
sbb
add
repz
xor
cmpsl
sbbb
int
fildl
pop
or
pop
push
hlt
fcmovu
add
adcb
movsl
cmc
repz
shlb
push
xchg
or
call
out
push
xchg
imul
cs
in
push
lea
ljmp
in
sub
lods
cmp
insb
pop
add
and
inc
pushf
pop
adc
int
pop
in
repz
jle
xchg
popf
add
fisttpll
divb
mov
hlt
mov
mov
lret
push
aad
das
push
mov
mov
pusha
fwait
icebp
scas
leave
outsb
inc
jl
jmp
and
cmp
repz
adc
or
mov
add
movsb
or
test
sbb
add
fimull
jecxz
xchg
out
cmp
std
or
mov
pop
shrb
fdivs
and
push
adc
add
pop
out
dec
fiadds
aas
mov
push
sub
xor
ss
repnz
jmp
cli
push
cmp
lea
iret
sahf
scas
loop
push
in
es
aaa
cmp
add
push
loop,pn
push
insl
fcomp
and
xchg
sub
movsb
test
rcrb
jb
cmpsl
jmp
add
test
mov
ja
jmp
iret
imul
ret
in
rorl
mov
lret
clc
xlat
filds
jle
push
dec
mov
xchg
mov
adc
in
add
int
stc
shrl
inc
cs
scas
cld
adc
pushf
inc
cmp
pop
faddp
test
push
xor
xor
xchg
test
adc
dec
add
cmp
pusha
mov
cltd
and
psubusw
push
xor
jp
xchg
ror
inc
addr16
in
sub
add
add
jge
data16
dec
dec
xor
mov
in
lods
cmp
and
jns
fisubl
aad
lcall
inc
sbb
mov
or
pop
dec
sbb
mov
mov
retw
aaa
jmp
mov
addb
xchg
mov
les
dec
jl
fisubrl
cmp
pop
mov
nop
mov
stos
lcall
mov
cli
out
idivl
inc
xchg
arpl
cmpb
das
les
xchg
push
xchg
ds
dec
sti
testl
jge
jmp
pop
jno
sub
int
sub
push
mov
enter
data16
push
ja
or
mov
lret
inc
and
jbe
ja
leave
bound
or
sub
jns
les
stos
push
mov
adc
inc
inc
aad
pop
inc
xorl
sbb
sbb
gs
mull
dec
outsl
test
js
push
popf
mov
cmp
or
lock
loop
xchg
daa
cs
fxch
mov
sbb
pushf
jnp
aam
mov
adc
in
ret
neg
lret
fidivl
xor
lods
xchg
push
lahf
outsb
in
jle
or
add
lret
outsl
inc
dec
mov
jl
scas
push
mov
add
mov
test
add
push
push
xor
inc
and
mov
mov
jns
lret
lds
jp
mov
shlb
and
cltd
or
iret
shrb
ret
rcrl
mov
bound
insb
add
gs
push
leave
sub
mov
push
cmp
addl
shl
cmp
xchg
adc
xchg
inc
mov
pop
jp
iret
or
pop
lea
ja
test
xchg
and
repz
sti
dec
mov
jnp
addr16
std
rolb
and
push
mov
mov
dec
pop
fcoml
inc
pop
fsubrp
test
int3
push
mov
jmp
mov
arpl
jmp
cmpsl
jp
dec
test
fimuls
jmp
outsl
ret
test
xchg
pop
or
fidivl
dec
xor
out
jns
push
outsl
punpcklbw
add
nop
inc
jno
xchg
fisubrl
aad
jecxz
dec
mov
inc
ret
stos
cmp
movsl
adc
or
sar
pop
fsubrl
fsubr
jo
pop
xor
inc
lahf
sub
out
xchg
push
into
nop
call
mov
in
aas
adc
rcr
mov
mov
adc
popf
lea
inc
pop
lods
lods
out
jle
mov
scas
ds
std
repz
mov
and
fwait
pop
push
xor
scas
insb
lods
dec
pop
jne
adc
cmp
adc
lea
das
jne
sbb
mov
popf
hlt
sti
mov
js
push
mov
push
mov
test
cmp
jb
mov
movl
sub
push
das
shll
xorl
data16
add
popf
jmp
xor
add
pusha
adc
and
hlt
pusha
jno
sub
clc
inc
adcb
jp
movsl
lds
shrb
dec
repz
mov
push
cmp
or
stc
mov
int3
gs
lea
inc
popa
jnp
xchg
or
sbb
jo,pt
inc
xchg
xlat
jne
or
xchg
dec
test
adc
jecxz
outsb
in
popa
shrb
repnz
jno
mov
insb
push
add
je
popa
push
adc
or
and
jnp
aas
dec
dec
xor
pop
mov
jnp
popf
pop
lods
jo
outsl
fisubl
dec
loop
add
jecxz
xchg
or
sub
xlat
sbb
aaa
pop
add
pop
int3
es
andl
in
cltd
iret
hlt
push
pop
push
xor
push
inc
jnp
sbb
mov
sbb
pop
sub
cmp
sbbb
daa
lahf
push
and
es
in
xchg
loop
pop
jl
adc
cmp
fdivl
nop
cli
and
jb
test
sub
sub
fcoms
sti
popa
jg
movsb
xlat
xchg
insb
cs
jae
ja
js
nop
mov
leave
lds
mov
sub
add
out
pop
popf
and
sub
cmpsl
imul
cmpsl
repz
sub
mov
jno
dec
repz
out
repnz
stc
dec
mov
out
mov
cli
ds
subb
jecxz
inc
fnstsw
scas
pop
jp
aaa
pop
mov
push
inc
in
ljmp
out
push
ret
lods
dec
test
mov
in
mov
mov
xor
lock
and
lcall
push
sub
bnd
rcrl
lods
xchg
imul
jae
aad
pop
dec
jle
jnp
aas
or
jb
cmp
fdiv
push
sbb
addb
clc
and
adc
mov
insb
xor
fcoms
aad
gs
sbb
or
bswap
fcomi
test
and
cmp
ret
jo
jb
test
jp
inc
aas
and
divl
addr16
push
fldcw
pop
pop
xchg
adc
jle
pop
mov
leave
add
add
ret
lret
lret
shll
data16
pushf
cmp
pop
lret
push
rcll
mov
fidivl
rcrb
add
icebp
lods
pop
jl
pusha
sahf
pop
push
mov
sarl
mov
sub
repnz
mov
mov
mov
das
int
cmpl
movsl
push
and
sub
sbb
xlat
out
adcb
add
fisubl
xor
fsubrl
out
movsb
es
cmp
pop
xchg
jbe
sbb
mov
cmpsb
test
movsl
incl
xchg
xchg
insb
jecxz
sub
sbb
jo
fcoml
pop
jl
jae
aad
jnp
hlt
inc
mov
lock
mov
and
repnz
jmp
movsl
enter
out
sbb
aad
sub
mov
cmp
clc
xchg
mov
inc
lahf
xor
xchg
imul
pop
and
push
movb
gs
arpl
push
stc
pop
or
cli
into
outsl
inc
imul
negb
mov
leave
adc
or
or
push
push
push
pop
leave
jae
imul
nop
mov
pop
sub
lods
xchg
movsl
jbe
nop
mov
jecxz
mov
cmpsl
in
mov
xor
inc
push
ret
ljmp
orb
xor
les
or
addr16
pop
sbb
shrb
push
sbb
icebp
in
ja
or
repnz
pop
int
jo
mov
iretw
and
lods
inc
clc
mov
inc
pop
adc
in
cwtl
xrelease
arpl
outsb
or
loope
push
arpl
fnstcw
and
mov
pop
test
out
in
ret
or
mov
mov
jg
xor
inc
xchg
nop
lock
lds
icebp
inc
xchg
add
je
bound
sbb
xchg
jle
xchg
out
dec
push
mov
cmpsb
sbb
daa
sbb
and
icebp
xor
pop
pop
sub
aaa
mov
fcoms
jl
scas
sbb
rorb
loop
mov
out
lods
test
lds
pop
and
xchg
jp
mov
mov
outsl
daa
jp
mov
adc
mov
jle
mov
push
xchg
lock
pop
jle
jns
mov
inc
fdiv
outsl
xor
movsl
fcomps
adc
mov
sahf
sub
jp
cmp
jbe
fcoml
lods
lea
cmp
jmp
cwtl
insl
fcom
sub
fmull
sub
or
fdivrp
ljmp
xor
mov
lods
push
inc
enter
cmpl
fidivrs
xchg
dec
cltd
aam
outsb
sbb
mov
mov
xor
je
cld
dec
cld
out
test
pop
jp
dec
daa
pusha
mov
inc
or
pop
gs
ja
mov
lea
jb
jno
leave
xchg
or
ds
adc
xorb
sub
sub
cmp
mov
cmpsb
xor
out
jnp
jp
sub
test
loop
jnp
mov
adc
daa
jo
fildl
fwait
pusha
shll
sar
add
jl
addr16
dec
dec
rcrl
cmc
das
les
enter
iret
std
lcall
or
xchg
add
lret
rclb
push
cmpsb
inc
pop
and
pop
fcoms
mov
sub
shrb
mov
or
cmpb
or
xlat
push
es
mov
shll
or
mov
sub
mov
and
jp
hlt
fsubr
aaa
daa
push
arpl
jmp
mov
je
mov
les
xchg
mov
cs
sahf
mov
xchg
test
pop
adc
aad
pop
pushf
mov
outsb
ljmp
nop
mov
lods
mov
sbb
inc
and
and
or
mov
js
jae
icebp
jecxz
clc
pusha
jg
shlb
xor
mov
cmp
dec
shll
ja
push
xchg
pop
and
jb
fwait
aas
mov
ror
push
push
mov
sub
sub
lcall
xor
scas
scas
rorb
hlt
outsl
cmp
dec
jns
adc
fsubp
sbb
and
je
dec
add
shlb
out
dec
out
aas
mov
push
js
shll
mov
std
mov
pop
adc
outsb
cmp
in
and
jmp
dec
insb
sub
cld
loope
dec
push
and
fwait
add
lds
push
pop
cltd
sub
and
or
movsl
pushw
lahf
sbb
adc
imul
push
bound
test
mov
out
shrb
out
dec
imul
pop
insb
sbb
push
sbb
mov
dec
pop
xor
pop
pop
lret
sbb
cwtl
push
and
data16
sub
xor
and
aas
cmp
jge,pt
daa
push
add
imul
jmp
push
sbb
mov
push
mov
mov
in
or
iret
orl
mov
cmp
adc
nop
mov
xor
adcl
sub
enter
fsubl
sbb
push
xchg
and
bound
push
clc
test
xchg
mov
out
aam
push
cltd
and
call
stos
mov
sub
pop
loop
inc
xchg
sti
lret
mov
pop
mov
ficomps
in
and
and
int
add
insl
aad
out
pop
push
xchg
pop
pop
inc
xchg
sub
cmp
ret
insl
test
xchg
xchg
vpsubq
mov
insb
outsl
lods
subb
adc
lods
in
test
outsl
mov
stos
mov
cmpb
sub
add
jp
sbb
and
mov
add
pop
mov
cmp
dec
pop
push
mov
clc
les
or
push
stos
mov
mov
cmp
cli
int3
mov
cmp
cwtd
push
jle
fwait
sbb
shr
outsl
jle
orb
mov
inc
test
aas
and
scas
insl
les
cwtl
push
or
jecxz
cmpsb
push
fnsave
lret
xlat
or
addb
push
and
or
out
out
jg
add
push
cmp
sub
out
fdivrs
jp
adc
aad
scas
lcall
and
add
push
mov
das
or
bound
jle
clc
adc
dec
fs
loop
jmp
cld
mov
push
in
jns
bound
mov
push
es
cmp
pusha
fisttpll
mov
jae
idivb
into
das
xor
cmpsb
push
incl
insl
pop
adc
mov
pop
cmp
mov
pop
adc
in
and
dec
push
dec
mov
imul
jl
jp
add
mov
dec
iret
adc
jmp
cmp
in
data16
inc
es
inc
jb
lds
clc
lret
stos
loop
lahf
test
mov
pop
ss
and
aaa
jle
and
push
push
mov
ret
sub
mov
adc
pop
push
shlw
inc
and
sbb
cwtl
dec
push
negb
int
add
outsl
cmp
jge
mov
iret
adc
fwait
imull
and
adc
fistps
xor
mov
and
jne
and
gs
out
xor
hlt
or
dec
aam
and
in
inc
push
xchg
push
fwait
push
sbb
lds
shl
loop
wbinvd
sub
shlb
dec
hlt
cmp
aad
sahf
sub
stos
popf
test
xor
mov
and
and
push
pop
add
inc
push
fldcw
hlt
or
xor
xlat
and
and
pop
adc
jbe
and
add
mov
out
filds
adc
outsl
lret
nop
inc
mov
xchg
xchg
pop
push
jno
popf
cmpl
dec
ss
mov
das
cmp
pop
fxch
xchg
xor
or
arpl
and
mov
mov
outsl
adc
xlat
in
or
shr
cmp
or
fbstp
cltd
sbbl
cmp
add
aad
xchg
ljmp
mov
adcb
mov
push
sbb
mov
mov
push
lret
pop
stos
mov
adc
cmp
push
xchg
mov
jmp
sub
cmp
and
cs
sub
pop
into
scas
sub
cmp
testl
clc
loop
lret
xchg
in
jbe
std
jecxz
mov
xor
xor
data16
cmpsb
cmp
out
sub
jmp
fs
leave
pop
inc
sarl
lret
call
dec
sti
in
scas
xchg
inc
mov
js
in
out
js
push
repz
mov
cmp
std
test
xor
in
adc
or
pop
sahf
or
iret
cli
mov
inc
out
mov
pushf
add
and
leave
bound
mov
cld
idivl
cwtl
in
outsb
push
push
test
outsl
ljmp
mov
push
loop
push
mov
cmpsl
push
xchg
lcall
dec
aad
mull
movsb
repnz
or
cmpsb
les
xor
pop
xor
jne
and
pop
hlt
lods
stos
pop
hlt
subl
clc
in
sbbb
sarl
cmpl
loope
push
mov
repnz
fcomps
sub
dec
stc
lret
call
push
jns
mov
dec
imul
or
das
pop
lahf
frstor
inc
jmp
call
call
fiadds
gs
std
lret
sahf
mov
push
cwtl
xor
icebp
dec
and
fs
xchg
shlb
rolb
nop
jae
sahf
jnp
inc
and
pop
jecxz
das
xchg
shll
mov
jg
pusha
repnz
scas
sbb
clc
lds
xchg
adc
xor
lret
or
call
popa
insl
dec
xchg
cmpsl
xlat
inc
adc
jmp
je
insb
xor
loope
mov
and
inc
sub
outsb
lret
dec
in
nop
and
popf
xchg
mov
pop
sbb
ds
loop
mov
aad
mov
mov
fs
das
push
push
xchg
imul
iret
adc
jns
cmp
mov
and
out
popf
jmp
fdivrs
jecxz
xor
fnstcw
inc
js
data16
mov
sbb
bound
call
and
out
fmulp
pop
lret
aas
scas
jp
mov
enter
pop
not
dec
out
xchg
adc
cmp
movsl
das
push
xchg
ficomps
mov
mov
cltd
pop
push
xchg
rcr
iret
adc
and
add
lock
ret
test
sbb
addr16
dec
out
sub
mov
xor
int
xor
call
shr
xchg
sbb
cs
sub
dec
jbe
mov
in
jle
cltd
jp
add
repz
dec
xcrypt-cfb
cmpsl
mov
adc
outsl
pop
mov
movd
aas
hlt
push
jo
xchg
pop
lds
lock
cmp
pop
cld
push
pop
movsl
cmpsb
enter
jg
call
out
mov
int3
in
nop
rorb
ja
sub
test
mov
mov
adc
inc
push
fdivrp
out
push
mov
enter
les
insb
push
idivb
ficompl
push
pop
inc
jne
in
sub
stos
gs
jge
add
stos
mov
mov
xor
movb
je
mov
in
add
xor
hlt
ret
cmp
or
fnsetpm(287
daa
mov
incb
xor
sub
xor
mov
mov
ret
cltd
lods
pop
mov
outsb
cld
mov
movl
mov
je
lcall
xor
jmp
sbb
cmp
outsb
popf
xchg
leave
out
mov
fisubrl
jg
scas
lea
and
in
adc
sub
ret
inc
xor
cmpsl
in
ret
mov
lret
leave
imulb
ljmpw
rorl
or
sub
xor
fimull
xchg
iret
mov
jp
sub
or
and
jmp
add
pusha
dec
popl
cs
sbb
lock
fdivs
push
jg
ret
xor
repz
add
cmc
lret
mov
add
rcll
add
jle
cwtl
sub
popf
aas
std
cmp
fiaddl
xchg
or
or
xchg
outsl
dec
pushf
insb
in
mov
movsl
or
decb
xor
leave
in
adc
aam
mov
aas
outsb
push
enter
dec
outsb
or
nop
hlt
iretw
sbb
insl
xor
add
push
push
and
std
push
bound
jge
sub
inc
and
push
push
mov
push
push
addr16
iret
mov
mov
cmpsb
push
xor
push
and
out
ss
mov
dec
lret
mov
jb
pop
xchg
or
out
rorl
mov
and
cwtl
adc
and
sahf
add
fadds
add
mov
cmp
push
rcrl
fnsave
bound
and
ljmp
dec
xor
ja
dec
or
js
inc
dec
cs
aaa
xchg
out
lods
jg
xchg
sub
bound
xor
iret
scas
ja
repz
pop
shlb
sbb
aad
call
adc
mov
scas
loopne
xor
cmp
add
sub
leave
fidivrs
jge
adc
pop
outsb
out
pusha
test
cmp
adc
cmpl
jbe
clc
cwtl
inc
loop
jle
lret
mov
addb
jmp
mov
fcmovne
mov
iret
dec
dec
or
stos
sub
cmp
sbb
dec
mov
in
insb
insl
mov
iret
dec
sbb
test
loop
mov
aaa
cwtl
imul
add
enter
clc
icebp
call
push
dec
or
je
lret
or
imul
add
add
jb
scas
nop
lret
call
cmp
fidivrl
sti
aas
inc
popa
scas
xor
shll
aam
push
lods
lret
cmp
push
fmuls
jmp
xchg
movsb
mov
mov
add
daa
les
inc
and
in
andl
sahf
rolb
push
insl
popa
call
jb
insl
pop
out
and
and
ficoms
dec
and
repz
ss
stos
adc
out
in
adcb
sub
pop
xor
xchg
out
mov
xchg
jmp
pusha
and
mov
fmuls
fistpl
pop
mov
mov
outsl
dec
jbe
lret
fwait
inc
cmc
cli
mov
jnp
shll
dec
dec
inc
mov
inc
inc
xchg
in
sbb
inc
lcall
push
sarl
push
add
push
cmp
lret
fsubrl
in
xchg
dec
pop
icebp
popf
adc
stos
jae
lahf
fsub
jns
int3
aam
sbb
push
inc
mov
mov
pop
iret
jle
sub
insb
aas
xor
popf
jg
fs
cmp
jb
aad
mov
into
cs
mov
js
jle
aas
fs
call
sahf
add
lret
imul
ficoml
xlat
jle
mov
cmp
loop
aaa
iret
pop
out
and
push
out
or
cmp
jl
dec
or
loope
and
fstpl
push
xor
in
ficomps
stos
mov
ja
lret
insb
stc
mov
outsl
adc
cmp
lahf
adc
pop
jns
lret
les
sub
fcomps
jg
ljmp
fnstsw
inc
out
push
adc
mov
or
shl
fsubs
push
cmc
push
push
test
jo
sub
jnp
fisubl
cld
and
mov
mov
fcmovu
cmc
jge
push
inc
int3
pop
or
xchg
and
shl
adc
iret
insb
jmp
int
lret
outsl
lds
js
in
push
stc
arpl
mov
mov
negb
fstp
cmp
cwtl
scas
cmpb
jno
fwait
test
adc
pusha
cmp
xlat
or
and
push
test
and
cld
popf
or
xchg
mov
push
iret
aaa
stos
sbb
and
imul
mov
push
mov
xchg
sub
adc
jno
adc
adc
sbb
test
stos
xchg
loopne
jp
sub
inc
pop
fucomp
ret
jno
ja
jnp
push
cmp
ljmpw
fsubrl
mov
mov
loopne
into
xor
dec
xor
ds
shrl
ret
int
xchg
lcall
test
and
fdivrs
jb
mov
loopne
lret
jmp
cmp
jmp
push
sti
fcomp
inc
pop
mov
push
test
mov
adc
ret
pop
xchg
fimull
je
cmp
in
in
lds
push
inc
sub
lahf
lock
in
lods
mov
inc
insb
pop
adc
adcb
adc
jecxz
adc
fdivr
pushf
add
outsl
push
insl
bound
cmp
lea
xchg
dec
jle
mov
outsb
or
scas
popa
jae
or
sbb
aas
shlb
les
jb
scas
mov
jge
mov
xchg
adc
aam
imul
shlb
push
jp
inc
jo
int
scas
xor
mov
jnp
out
add
sub
mov
fs
shrb
dec
bound
leave
mov
inc
sbb
pop
or
xor
in
xchg
popa
mov
jle
jge
push
dec
popw
adc
mov
jmp
aas
pop
js
roll
push
pop
arpl
stos
jo
sub
jb
add
aaa
xor
je
add
dec
out
jno
push
sahf
mov
insb
cwtl
sarb
fimull
stc
xor
out
aad
jle
pop
xlat
dec
imul
and
iret
sbb
imul
jp
subb
mov
bound
movsl
std
ss
jecxz
add
leave
in
fstps
lock
frstor
in
mov
cmp
repnz
nop
xchg
inc
or
sub
in
test
lahf
enter
jle
aad
int3
icebp
jb
xchg
sbb
add
adc
or
push
lods
std
pusha
mov
jge
aam
pop
sbb
outsb
dec
jg
add
inc
push
cmp
pop
xchg
enter
scas
lods
loop
nop
into
mov
and
xlat
dec
stc
mov
sbb
cltd
loopne
mov
ret
aam
cs
out
mov
xor
adc
sbbl
out
mov
xor
mov
testl
cli
add
sub
lds
dec
jns
lock
outsb
mov
xchg
xchg
in
pop
jecxz
and
lods
outsl
dec
add
aam
add
add
dec
cmc
divb
sub
inc
jge
insl
and
cltd
in
dec
pop
aam
out
mov
pop
lret
jmp
lods
xorl
test
pop
jnp
lea
bound
fisubrs
and
cmp
loopne
rclw
push
arpl
mov
sbb
arpl
sub
arpl
pop
fcoms
adc
xor
xor
repz
aam
pop
in
xor
xchg
dec
scas
jb
fs
cmp
inc
repnz
jp
xor
cld
push
enter
mov
push
xchg
loop
pop
fdivrs
sub
lea
dec
push
adc
sub
arpl
pop
jecxz
outsl
adc
push
sbb
stos
sbb
nop
mov
jae
jmp
dec
shll
aas
js
pop
in
adc
shr
pushf
and
cld
jne
xchg
xchg
orb
or
xor
cs
and
out
lcall
out
pop
sbb
inc
cmp
jno
xchg
jmp
test
inc
pushf
push
sub
adc
mov
cmp
xchg
jmp
mov
push
mov
push
adc
xor
aad
xorl
dec
xchg
push
sahf
xor
sub
mov
repz
insl
cli
adc
mov
cmp
xor
pop
and
add
mov
fisttps
dec
bound
inc
stc
dec
in
jnp
rclb
outsb
enter
rcll
aas
add
adc
adc
repz
push
mov
mov
mov
test
ja
lea
xchg
sti
pop
rclb
xor
pop
push
xor
int3
push
cmpsb
mov
push
jo
nop
mov
sahf
xchg
adc
out
and
or
lea
mov
push
enter
hlt
andl
inc
sbb
adc
pushf
jp
mov
pop
outsb
xlat
cli
adc
popa
shrl
lcall
in
test
addl
mov
ret
and
jge
mov
cmp
inc
call
insl
sarl
sub
xchg
inc
es
stos
ds
inc
pushf
outsb
mov
out
or
inc
movd
and
push
loopne
shll
dec
imull
add
mov
cltd
mov
jp
loop
outsl
xor
jo
stc
pop
lods
clc
sbb
mov
jp
loope
jns
call
es
push
scas
sbb
enter
or
test
inc
and
inc
mov
mov
or
js
xor
pop
sub
jb
xor
or
sbb
mov
rclb
mov
cmc
lods
cmp
dec
test
popa
or
push
out
jbe
es
dec
mov
adc
jp
popaw
push
movl
enter
sub
push
test
push
or
out
dec
pop
stc
sbb
xchg
adc
insl
ss
loopne
lods
int3
bnd
adc
test
enter
xchg
out
pushf
sbb
das
jno
pusha
xchg
adc
hlt
aam
std
cmpsl
in
xor
inc
bndstx
dec
mov
out
out
dec
pop
cltd
push
mov
bound
cmp
scas
cmp
lds
cmc
xor
imul
shll
lock
jl
push
cmp
jg
cs
sbbb
sub
outsb
fwait
cmp
jns
xor
sub
jnp
mov
cmp
pusha
pusha
pusha
dec
sub
mov
mov
test
and
xchg
xlat
pushf
addr16
adc
xchg
dec
fcoms
scas
cwtl
ds
lea
push
test
adc
aaa
inc
mov
ss
cmp
hlt
push
ds
mov
sub
fcomp
pop
lcall
shll
mov
mov
fiaddl
cmp
xor
fbld
shrl
lods
and
pop
into
cli
test
mov
xchg
fwait
mov
pop
lds
cmp
popf
imul
es
mov
fsubp
push
mov
dec
sub
test
mov
pop
sbb
ljmp
push
repnz
mov
mov
dec
sub
cld
sbb
sbb
sbb
out
js
insl
insl
or
nop
jmp
cs
into
outsb
outsb
stc
push
test
aam
jp
push
xchg
fbstp
clc
xor
push
dec
dec
ret
les
xor
inc
dec
dec
mov
or
and
push
js
fidivs
push
jbe
lds
shll
pop
in
aam
adc
mov
mov
cmpsb
add
mov
pop
push
dec
mov
cltd
lahf
subb
outsb
xchg
jp
and
into
jbe
movsb
int3
push
xchg
add
add
shrb
int3
or
xor
addr16
add
sub
ret
ret
cmc
xor
sub
insb
push
sarb
test
hlt
movsl
addr16
sbbb
fadd
fs
iret
push
popf
bound
aas
pop
fbstp
iret
dec
push
rolb
test
fs
aaa
lods
jle
mov
jg
push
push
sbb
sub
out
push
jne
sahf
pop
enter
xchg
imul
fs
inc
pop
ds
xlat
lret
fdiv
mov
xchg
dec
les
aam
pusha
or
push
fistps
lret
pop
test
lods
jl
sub
subb
insb
mov
adc
pop
hlt
push
inc
arpl
hlt
daa
fwait
jbe
jae
push
push
jl
rcrl
cmp
clc
loope
or
mov
in
and
lret
mov
out
test
and
add
popa
add
test
js
and
pop
xorl
inc
aaa
sub
inc
mov
adc
mov
mov
mov
pop
mov
orb
int
scas
sub
cmc
ja
imul
add
loop
scas
sbb
mov
aam
fildll
mov
xchg
adc
adc
pop
sub
inc
test
sbb
mov
jecxz
lock
push
shrb
out
sbb
cmpsb
sbb
sub
mov
out
jl
add
sbb
inc
imul
sub
xchg
xchg
inc
addr16
xchg
inc
push
aam
jne
rcll
fwait
xchg
adc
and
aad
sti
aas
xchg
adc
xorb
pop
xor
dec
xlat
dec
divb
addr16
mov
push
outsb
xchg
mov
sub
lods
fcomp
fadd
les
dec
dec
ret
lock
pushf
mov
mov
lret
sbbb
movsb
mov
arpl
stos
cmp
cmp
out
pop
cltd
and
mov
mov
scas
jo
out
divb
xor
aaa
repnz
cmp
push
adc
dec
dec
pop
in
jmp
ljmp
push
leave
sbb
and
jg
mov
adc
inc
in
and
sub
out
aam
test
clc
es
fwait
mov
pop
xorb
in
loope
pop
test
cmpsl
xchg
cld
or
cmc
pop
xor
sub
sbb
mov
and
orl
subb
adc
dec
pop
dec
fs
lret
adc
and
out
lcall
mov
aad
push
ss
sub
mov
lods
out
or
repz
mov
shll
push
xlat
mov
loopne
xor
mov
xchg
bound
inc
in
outsb
sbb
add
jae
ljmp
ss
rcl
or
aam
push
add
aaa
ret
pop
mov
fmuls
pop
inc
and
add
xchg
xor
nop
pop
cmp
aaa
dec
inc
lock
inc
jnp
movsb
sar
sub
push
inc
in
dec
mov
insb
adc
loop
adc
popf
scas
xorb
frstor
call
pop
loopne
mov
cmp
inc
fiadds
xchg
push
not
call
pusha
sbb
inc
mov
stos
and
add
ljmp
enter
lret
imul
add
lret
sbb
out
dec
pushf
xor
popa
imul
xchg
stos
xor
fwait
data16
lahf
sub
xchg
and
test
or
fstl
mov
mov
sbb
xchg
cmp
stos
dec
jo
lcall
inc
inc
xchg
jb
lock
into
sbb
jnp
fsubl
sub
enter
shlb
fisttpl
xchg
push
out
push
jno
cli
in
mov
stos
sbb
add
jp
adc
test
pushl
repnz
and
fs
pop
iret
or
nop
rcr
push
mov
imul
leave
lock
and
mov
in
fs
nop
out
sub
test
mov
sahf
cmp
adc
mov
call
or
outsb
outsl
ss
jmp
outsb
in
fdivp
xchg
inc
fsubs
outsb
rclb
push
movsl
or
jnp
cmpsb
call
imul
mov
lret
cltd
iret
icebp
cmpsb
andl
pop
scas
or
mov
mov
cmp
or
mov
mov
add
mov
shlb
fldl2e
hlt
cmp
outsl
test
push
lcall
mov
lret
fidivrl
shrl
into
rorb
loopne
xchg
pop
les
jae
pop
mov
mov
adc
jmp
scas
add
orb
in
orb
xor
dec
mov
jp
or
and
in
lahf
es
inc
push
sub
pop
pop
jg
and
sub
jne
daa
movsb
pop
sub
ret
xlat
and
xchg
xor
add
or
adc
xchg
fdivr
arpl
mov
pop
cmpsb
out
cltd
pop
xorl
adc
fwait
cmp
jne
xchg
push
dec
sbb
imul
hlt
xor
mov
or
das
fnstsw
ds
dec
addr16
mov
hlt
in
mov
dec
sbb
adc
cs
push
bound
sbbb
or
jns
mov
and
push
clc
lcall
sbb
mov
scas
xor
xor
insb
mov
jmp
shr
mov
loop
fdivs
fmul
mov
aaa
or
pop
jl
das
jno
in
mov
jns
sbb
and
xor
xlat
ss
outsl
iret
jg
shlb
cmc
pop
sahf
mov
shrl
aad
js
out
rcrl
xchg
jb
movsb
rorb
jmp
iret
pop
sbb
sbb
cltd
std
ja
jecxz
outsb
out
rcll
out
cmp
mov
mov
push
out
fmul
in
xchg
and
enter
outsb
fsts
or
pop
cs
jbe
loope
push
bound
cld
rorb
add
sub
mov
cmpsl
ds
push
fidivrl
add
outsl
cmc
sbb
pop
mov
push
rorl
in
push
scas
sub
xchg
pop
push
and
aad
test
iret
aas
cmp
movsb
cld
nop
in
xor
mov
lds
cwtl
or
in
xor
js
xchg
push
loopne
push
test
pop
outsb
call
pop
ja
js
and
outsb
outsb
pop
aad
add
dec
pop
xchg
or
gs
cs
jge
sub
lcall
mov
loop
inc
add
out
mov
inc
andb
movsl
or
mov
mov
xor
mov
inc
movsl
inc
es
push
sbb
cmpsl
les
xchg
xchg
inc
testl
arpl
lcall
add
outsl
rolb
and
jbe
cmp
adc
stos
bound
cmp
or
add
inc
mov
pop
sub
test
push
fildll
mov
pop
outsl
push
cmpsl
push
andl
add
adc
xor
mov
aaa
shll
xchg
push
popf
adc
imul
inc
ror
pop
mov
gs
xor
daa
mov
mov
mov
jmp
ss
mov
jge
push
adc
xchg
xor
ficomps
lret
push
cmc
mov
fmuls
xor
cmpsl
push
add
adc
outsb
scas
jbe
ds
cmp
mov
adc
adc
in
out
push
mov
test
push
cs
lahf
push
mov
cmp
cmp
clc
cmpsb
push
outsl
ret
dec
mov
outsb
repnz
and
dec
mov
inc
daa
stos
xor
xor
out
pop
imul
jns
mov
sbb
jns
imul
and
sub
mov
jge
clc
adc
mov
mov
test
add
sarl
cmc
stos
lret
aad
pop
inc
sub
xchg
dec
js
gs
push
or
sbb
dec
or
sarl
or
stos
loop
xlat
dec
cli
imull
aam
adc
pop
je
mov
cmp
ss
addb
lret
ljmp
sahf
push
icebp
arpl
cmp
add
fsubrs
mov
dec
cmp
jle
inc
cmp
pusha
out
lea
daa
add
or
addl
or
outsb
inc
inc
call
filds
data16
jle
jmp
and
adc
sbb
testl
gs
push
shlb
arpl
adc
xlat
cmp
push
fs
inc
sub
pop
fwait
sbb
mov
jmp
xchg
add
cmp
cmp
or
xchg
pop
xor
dec
pop
and
data16
test
pop
addr16
mov
pop
or
sub
mov
jbe
rolb
out
mov
dec
jg
xchg
mov
sti
int3
dec
insl
cmc
lods
fcmovnb
push
cmp
call
repnz
mov
sbb
lods
scas
jnp
mov
rol
ja
sbb
das
loop
shrl
out
repz
dec
stos
dec
push
inc
mov
lea
sbb
fdivrl
and
testb
ret
cmp
adc
jo
xchg
push
adc
addl
loop
push
add
add
out
cbtw
aas
add
subl
mov
sub
xor
cld
shll
ret
mov
sub
sub
roll
loop
out
cmp
xchg
push
mov
mov
js
sub
fstp
stc
aas
pop
hlt
and
push
in
enter
mov
lods
orb
mov
mov
xchg
jb
xchg
pop
in
push
xor
out
pop
andb
mov
addr16
dec
jo
mov
sbb
mov
push
lcall
mov
mov
jb
sbb
leave
cmp
pop
sar
xchg
leave
sub
lods
pop
xchg
mov
js
mov
pop
add
and
mov
ret
fdiv
push
ds
pop
pushf
push
dec
out
cmp
shlb
or
sar
mov
aam
loopne
and
sbb
inc
push
mov
xchg
out
mov
aam
inc
sbb
xor
jl
xorl
incl
addr16
stos
xor
xchg
xchg
or
mov
leave
adc
jle
icebp
loop
push
outsb
and
out
stos
ljmp
filds
push
repnz
jp
fcoms
mov
xor
xchg
mov
stos
lea
mov
shrb
rclb
dec
pusha
int
les
inc
loop
nop
or
mov
adc
xchg
push
cmpsb
int3
div
lds
push
jg
push
and
leave
orl
jecxz
cli
dec
arpl
dec
lahf
cmpsb
idivl
test
icebp
pop
out
jl
inc
sub
mov
or
fstpt
dec
push
repz
cmpsb
int
lods
movsl
dec
sahf
aam
cmp
test
int3
mov
insl
shr
cmp
and
int3
push
fs
ljmp
dec
jl
cli
push
aas
outsb
dec
orb
int
jb
fisttps
mov
inc
insb
dec
outsl
sbb
mov
rcrl
das
mov
lret
push
sbb
aad
add
in
dec
mov
addr16
aam
lret
dec
std
mov
cmp
stc
imul
sbb
movsbl
sub
sbb
push
jb
leave
and
sbb
ror
push
pop
stos
inc
popa
shl
lds
add
fildl
mov
and
jmp
idivb
push
push
adc
push
adc
mov
lods
jb
or
cmp
stos
mov
std
ret
into
or
aam
outsl
pop
icebp
add
lret
lock
loop
imul
pop
push
mov
or
and
test
and
inc
cld
fadds
stos
pop
pusha
xchg
out
xchg
shl
xor
pop
sahf
rcrl
fisubrs
out
sub
popf
int3
lss
adc
inc
and
fbstp
xor
mov
sbb
inc
lds
pop
out
push
lea
mov
dec
flds
icebp
inc
lahf
xchg
mov
push
icebp
cld
or
ret
mov
in
jmp
or
adc
mov
popf
dec
loope
jns
cmp
pushf
jbe
xor
imul
push
push
pop
rclb
mov
test
data16
inc
or
adc
and
dec
pushf
push
mov
mov
stos
jmp
mov
xchg
jl
mov
jle
pop
pushf
xor
ds
into
pop
xchg
cmc
es
loopne
mov
hlt
popf
lcall
or
add
xchg
enter
repz
push
mov
mov
out
cli
mov
mov
pop
cmp
addr16
adc
mov
out
push
dec
or
pop
cli
cltd
cmp
mov
add
in
repz
pop
ljmp
pop
adc
fldcw
adc
data16
scas
add
mov
xor
xchg
push
add
cli
imul
jle
inc
xor
jno
push
push
jae
push
insb
lret
cmp
mov
sti
test
cmc
cmpsb
sbb
int
xchg
dec
mov
lock
add
jbe
jl
add
sbb
push
xlat
dec
push
cmp
pop
xor
loopne
out
in
cmp
leave
pop
repnz
cmp
jne
push
mov
incl
ds
mov
sbb
call
fistps
mov
outsl
outsb
inc
mov
or
movb
jg
push
ss
test
sub
adc
pop
mov
push
roll
push
movsl
test
data16
mov
out
pop
and
pushf
cmp
in
jae
movsl
inc
cmp
int3
push
add
inc
jnp
js
data16
ljmp
cmp
in
daa
aad
push
pop
cs
mov
push
cmp
mov
jae
ficompl
cmpsb
ds
xchg
nop
mov
adc
xor
jg
les
cmp
or
insl
xchg
pop
pusha
dec
sub
jge
setnp
lahf
jg
out
and
xchg
and
mov
push
sbb
push
loope
push
mov
imul
lods
push
add
add
popa
xchg
lahf
cs
push
fisttpl
sbb
cli
mov
cmp
and
repz
xor
aad
shlb
loopne
cmp
repnz
mov
outsb
aam
mov
aad
leave
sarb
adc
jae
and
inc
add
out
mov
loop
xor
cltd
jl
xchg
mov
test
dec
pop
js
rdmsr
jno
ds
add
push
repz
repnz
movsb
cmp
sbb
out
xor
fwait
mov
in
dec
adc
mov
and
push
mov
mov
mov
jnp
lcall
inc
xor
lahf
jno
mov
push
adc
sub
push
push
mov
out
imul
cmpsb
ja
add
or
jge
scas
sub
sahf
cwtl
jg
jbe
and
adc
out
cmp
adc
pop
adc
inc
sbb
ret
into
enter
adc
sbb
xor
mov
mov
sahf
adc
out
pop
push
cmp
test
sbb
adc
and
and
pop
stos
add
and
scas
push
mov
jg
jae
data16
mov
pop
jge
pop
leave
and
adc
mov
cwtl
inc
mov
adc
mov
pop
fdivrl
mov
add
test
mov
pop
push
fwait
sbb
push
xchg
sbb
mulb
mov
jb
jb
fwait
dec
mov
pop
nop
mov
bound
lret
je
lea
ffree
and
mov
push
xchg
inc
test
stos
add
out
sbb
push
dec
cmp
and
in
xor
mov
adc
and
inc
pop
popf
rcr
lods
enter
loope
ljmp
pop
mov
js
push
pop
fldl2e
rcrl
add
fildl
sbb
hlt
pusha
jge
imul
mov
fistpl
test
push
int3
pushf
cld
cld
xor
xchg
xchg
mov
lds
ret
movsl
cmp
icebp
arpl
out
rcrl
imul
push
je
jmp
ljmp
rolb
movsb
je
mov
mov
rcr
adc
sahf
cs
bnd
nop
cmp
add
mov
scas
mov
sbb
push
xor
inc
lea
sub
pop
in
in
xor
mov
test
sbb
cmp
or
dec
cmpsb
jl
les
jmp
test
shl
mov
mov
cmp
dec
loop
ljmp
and
push
aas
dec
dec
dec
mov
xchg
inc
shlb
pop
add
xchg
mov
stos
orb
jbe
nop
bswap
lret
cmp
xchg
sbb
sub
sahf
das
out
mov
aam
jle,pt
mov
subb
mulb
ss
pop
xchg
mov
pop
repnz
ja
lds
fcompl
or
jae
pop
sub
jnp
mov
addr16
iret
sahf
add
incb
sub
adc
cmp
sub
pop
cmpsb
jle
sub
xchg
dec
cmp
push
or
mov
mov
cmp
test
sub
cmp
adc
pop
lods
mov
std
stos
cmp
in
fdivs
cmp
outsl
xor
mov
mov
or
sub
jb
mov
out
test
adc
push
popf
sbb
shll
cmp
inc
movsl
popa
add
gs
pushf
mov
lea
xor
adc
sbb
cmp
lret
in
cmp
in
adc
mov
sub
loope
rclb
cmp
jno
arpl
outsb
nop
psrad
cltd
in
inc
cmp
inc
lahf
movsb
or
cli
add
ljmp
shr
sub
dec
imul
inc
bound
arpl
cltd
outsb
scas
cmp
jbe
pusha
dec
lcall
in
in
push
stos
add
icebp
push
insl
outsl
shlb
outsl
push
andb
xor
add
fidivl
pop
mov
sbb
mov
fwait
pop
add
stc
outsl
dec
add
shlb
or
sub
dec
xlat
js
lds
jmp
cmp
adc
cmp
jno
out
mov
fdivrs
lea
lret
sbb
xor
xchg
aad
pop
bound
addr16
mov
push
xchg
pop
es
orl
in
sti
pop
push
in
or
mov
shrl
add
sbb
aas
scas
sub
mov
pop
shr
ljmp
push
pop
popa
adc
test
push
nop
lret
arpl
hlt
pop
and
mov
mov
cmp
pusha
mov
inc
xchg
stos
push
cltd
hlt
cmpsl
pop
pusha
imul
cmpsl
popa
push
mov
stc
cmp
mov
adc
loop
add
shlb
ficoms
push
dec
aam
mov
jl
jg
cmp
daa
cmp
pusha
push
xor
add
mov
pop
hlt
inc
fs
add
sti
mov
popa
adc
aam
adc
int
psrlq
out
or
or
aam
mov
pop
int3
std
iret
roll
xchg
cs
out
push
js
lods
mov
mov
ret
sub
test
sbb
jbe
cli
es
xchg
inc
sub
xchg
sti
into
test
or
xchg
xchg
or
and
inc
ss
fisubrs
dec
mov
shrb
outsb
mov
sub
fcmovne
or
movsb
jmp
fstps
mov
ror
cmc
and
xor
pop
in
pop
cltd
movsl
mov
je
adc
cmp
add
mov
add
xchg
insb
jl
bound
inc
mov
jle
mov
repz
push
sub
mov
into
outsl
sub
add
cmp
lods
push
mov
testl
rcr
pop
pop
sahf
pop
cmc
sub
out
enter
mov
jne
imul
xchg
mov
pop
cmp
pop
mov
nop
mov
jb
pop
in
inc
incb
jecxz
mov
cmp
outsl
xor
and
push
or
adc
or
ja
pusha
cwtl
push
mov
imull
jmp
ret
ds
roll
xchg
subb
xchg
out
pusha
sbb
cltd
pop
daa
jbe
fidivrl
into
sub
xor
jnp
dec
dec
inc
mov
and
popf
insb
or
rclb
add
mov
jbe
jg
xor
popa
xlat
sbb
pop
or
sbb
shll
mov
add
mov
in
jbe
mov
int3
xchg
xchg
test
fmul
out
and
call
cmp
hlt
cld
or
jns
push
cmp
cmp
mov
incb
jp
sbb
mov
pop
and
sti
movsl
imul
repnz
cmpsb
xor
sbb
ljmp
bound
fnstenv
icebp
cltd
sbb
sti
inc
lcall
push
cltd
dec
push
int
insl
fstpt
fnstcw
testl
sarl
mov
push
xor
ret
or
jbe
je
daa
shrl
mov
push
adc
icebp
xor
jecxz
aaa
ljmp
ss
ja
xor
popf
sbb
jns
imul
push
sub
iret
jle
stos
aaa
dec
call
es
xchg
mov
sti
or
clc
sti
cmpsl
mov
dec
pop
mov
stos
popa
shrl
int
iret
or
xchg
or
rorl
mov
sbb
mov
sbb
mov
inc
pop
push
xchg
mov
lahf
fwait
push
ficoml
out
fistpl
jmp
and
loopne
fwait
mulb
pop
call
hlt
ret
aam
nop
mov
lods
outsb
hlt
js
aad
inc
mov
or
sub
jne
enter
les
cwtl
mov
jne
loop
out
insl
cmpsb
lret
out
fcmove
je
mov
mov
idivb
add
ficoml
repnz
dec
fsubl
fbld
lret
and
sahf
cmp
sbb
mov
lret
test
xchg
jno
sub
mov
in
das
dec
jmp
push
mov
in
mov
repnz
mov
repnz
aaa
aas
pop
dec
dec
jge
bound
xchg
in
push
push
aam
xchg
jl
mov
push
and
mov
sub
dec
sti
fmull
mov
push
dec
push
lret
inc
enter
push
lea
addr16
mov
ja
mov
mov
stos
dec
mov
or
jl
scas
fwait
mov
sahf
sbb
dec
jge
xchg
enter
push
out
fsubs
push
mov
fcoml
nop
scas
push
inc
rolb
insb
bound
test
ss
scas
or
cs
in
sub
movsb
loop
or
jmp
enter
push
push
lea
bound
inc
rcrb
push
and
mov
fcompl
mov
push
into
shlb
mov
cli
repnz
jle
nop
das
sbb
add
mov
lcall
mov
in
int3
pop
dec
loop
or
dec
out
or
enter
loop
or
jmp
enter
push
lea
out
lahf
mov
mov
sbb
stos
rol
sldt
dec
test
bound
pop
in
outsb
ds
cmp
loop
test
dec
loop
not
stos
adc
mov
mov
out
xor
add
pop
dec
movsb
cmp
sub
push
aaa
ja,pt
or
mov
or
movsl
jl
popa
push
mov
dec
adc
and
rol
jle
add
repz
jg
xor
sbb
loope
in
jo
jge
and
xchg
lods
adc
mov
lods
add
sarl
and
jl
add
pop
movsl
mov
mov
inc
in
gs
roll
leave
fstl
jnp
mov
xchg
inc
mov
mov
out
imul
inc
adc
pusha
xchg
or
sub
fs
mov
insb
ret
add
test
mov
mov
insb
sbb
dec
push
mov
jmp
faddl
aas
cltd
orl
push
popl
nop
mov
adc
pop
and
pop
loopne
push
cld
jge
imul
repz
cmp
loopne
hlt
imull
mov
lcall
dec
xchg
jbe
incb
inc
adc
mov
cmc
aam
in
push
add
jecxz
push
std
xor
and
pop
loope
xor
mov
adc
fnstcw
pop
imul
push
je
lret
cld
cld
cmpsb
jne
or
popf
fldenv
sub
imul
or
and
lcall
mov
pop
outsl
lcall
pop
jecxz
xchg
out
pop
addr16
dec
lock
inc
fs
call
movsl
fucomip
push
aad
enter
add
cmc
jae
jle
cwtl
lock
adc
jmp
add
jbe
adc
insl
push
add
mov
push
push
push
mov
pop
xchg
mov
push
jns
push
push
cwtl
imul
sub
inc
fsubp
ds
dec
jg
gs
scas
or
cmp
mov
mov
mov
cmc
es
sub
pop
aas
add
push
sbb
xchg
in
push
nop
adcl
cmp
or
adc
sbb
inc
or
rcl
sub
.byte
cmpsl
.byte
.byte
