sub
and
inc
ret
std
sahf
ljmp
jl
jns
mov
mov
jecxz
xor
or
pop
sahf
sub
adc
and
push
xor
push
mov
gs
xor
mov
sbb
sub
enter
ja
cmp
add
mov
mov
stc
and
loop
pop
mov
lret
push
pusha
jle
test
mov
mov
xorl
mov
in
mov
pop
xor
jmp
in
ss
gs
lcall
fsubrs
lock
pop
inc
xchg
mov
dec
outsl
nop
sti
add
ja
loope
sbb
sbb
aas
out
inc
dec
andb
into
int3
sbb
pop
sbb
sbb
mov
cmp
lcall
mov
loope
cmp
ret
push
repz
xchg
les
adc
inc
test
leave
dec
mov
add
cmp
push
fwait
xchg
pushf
push
out
xor
outsb
mov
push
add
stc
cwtl
sbb
mov
jp
je
subb
xchg
add
loop
add
jns
in
push
repz
cld
sbb
inc
addl
shl
test
aaa
mov
and
mov
ljmp
adc
loopne
hlt
cmp
icebp
imul
dec
pop
and
inc
das
notl
inc
out
push
pop
push
sbb
dec
in
data16
sbb
push
inc
jnp
pop
pushf
fwait
xlat
call
cmp
enter
or
mov
pop
jle
bound
xchg
cmp
stos
cmpsb
jae
lret
into
out
cli
bnd
mov
jae
dec
inc
adc
stc
mov
lahf
adc
movsb
jle
mov
in
out
shrl
mov
fdivl
dec
aad
insl
jns
jmp
pop
hlt
cltd
mov
movsb
inc
mov
scas
subb
xchg
jbe
rol
enter
repnz
stos
jmp
xorb
cltd
out
inc
and
divl
push
decb
shll
and
lret
pop
pop
push
sbb
mov
xchg
popa
pop
jne
out
ret
mov
and
fdivrl
es
and
mov
sub
sbbl
pop
nop
and
jg
je
and
inc
int3
sbb
push
pop
das
xor
sub
stos
int
xchg
adcb
dec
into
mov
mov
jnp
xchg
mov
push
out
adc
lea
decb
jo
sbb
cmp
dec
in
mov
cmp
jge
jge
movsl
sbb
aaa
pop
sub
rcrl
sub
leave
ret
rolb
xchg
jo
xor
mov
lret
add
int
sbb
push
imul
dec
and
mov
inc
cmp
dec
or
inc
or
sub
xchg
or
sub
adc
aam
mov
aas
imul
dec
fstps
inc
dec
and
xor
lock
ja
lret
imul
loopne
ljmp
lret
sahf
mov
sub
loopne
dec
pop
mov
cmp
lods
divb
dec
xor
les
fdiv
cwtl
pop
xchg
pushf
adc
call
mov
leave
sbb
leave
mov
push
xchg
loope
je
ds
lds
add
lea
iret
rolb
loop
or
icebp
loope
into
push
aas
inc
fsubrs
ja
roll
inc
mov
ret
jb
inc
adc
jl
sub
ljmp
dec
addr16
fists
fsts
mov
aaa
shr
pop
out
in
out
stos
jno
mov
fs
sbb
jno
loope
pop
mov
jmp
adc
rolb
aas
imulb
aas
fsts
pop
jno
pop
push
adcb
imul
cwtl
mov
pushf
pop
stos
pop
cwtl
test
arpl
mov
loope
pop
shld
mov
dec
mov
sbb
repnz
jmp
dec
add
insb
cmpsl
into
xchg
pop
bound
test
popf
ds
or
in
fwait
loop
cmc
jae
or
xor
or
inc
cmp
frstor
fsub
jg
cmpsb
cmc
dec
mov
pop
mov
xchg
pushf
mulb
dec
das
leave
pusha
out
lahf
out
js
push
and
or
iret
aaa
insb
sbb
popa
push
loope
jnp
inc
popf
add
cmp
add
std
in
je
stos
les
int3
and
sbb
pop
mov
fwait
in
insb
sahf
rcrl
testl
sub
gs
sub
stc
push
xchg
mov
test
mov
je
fucomip
xchg
lss
fcomps
sbb
inc
sbb
jo
mov
es
mov
sub
les
ljmp
in
push
and
add
subb
aaa
mov
cli
push
adc
loop
cs
adc
out
sub
pop
rorb
pop
dec
lret
outsb
cmp
mov
clc
xor
dec
mov
rolb
movsl
pop
jge
daa
cmp
gs
mov
shl
frstor
ficoms
or
scas
xchg
lret
iret
dec
jecxz
xchg
pop
sbb
clc
cmpps
mov
push
out
lock
sub
and
insl
xor
xor
or
jnp
shrb
scas
xchg
xchg
inc
loopne
repz
inc
sbb
stos
insb
rol
jmp
jnp
lret
sbb
movl
fildll
add
fcomps
adc
cld
fsubrp
inc
shlb
leave
scas
sahf
jp
add
lods
hlt
in
jnp
cli
out
imul
mov
call
push
sub
inc
divps
ss
inc
mov
lret
xchg
jmp
insl
fidivs
clc
dec
leave
mov
mov
pusha
sub
negl
pop
mov
int3
push
add
mov
scas
jns
cmpsb
loop
test
sti
mov
sbb
sub
or
les
jb
and
cmp
adc
fmuls
int
mulb
shlb
jecxz
pop
arpl
sub
dec
leave
push
adc
loop
inc
test
js
loope
push
sub
cltd
ds
adc
popf
and
push
mov
mov
insb
sbb
push
dec
scas
inc
das
adc
ret
test
arpl
add
mov
mov
pop
add
sbb
test
pop
jecxz
add
sbb
sbb
cmpsl
dec
outsl
loop
mov
mov
xor
icebp
shll
jns
cmp
cltd
fisttpl
dec
xchg
mov
mov
xor
mov
sahf
sbb
out
movsl
ret
and
pop
jne
mov
and
popa
cmp
scas
push
jl
test
xor
into
ds
out
rclb
mov
mov
ficoms
and
fwait
mov
pop
lcall
or
dec
cmp
dec
in
or
xor
cmp
cmpsb
daa
rcl
sub
or
add
lea
sbb
icebp
xchg
cmp
cmp
jl
cmc
adc
xor
push
mov
sbb
shrl
xor
test
jp
popa
adc
cmp
adc
pop
inc
repnz
stos
xor
popa
dec
pop
dec
sub
repnz
or
in
xchg
sub
call
cmp
inc
add
pop
aas
stos
inc
push
pop
mov
xchg
dec
shrl
push
push
lods
cmpsl
push
cs
cltd
pop
add
call
imul
sbb
mov
into
mov
rorl
cmc
ss
jecxz
daa
cmp
mov
push
sub
rcrb
lods
out
mov
push
enter
and
cli
lea
lods
in
and
adc
mov
jecxz
pop
outsb
inc
test
xor
lahf
jo
call
and
lods
xor
enter
or
inc
or
sbb
sbb
loopne
lea
mov
jg
popa
mov
loopne
nop
movl
movlps
mov
shrb
bound
dec
hlt
cli
add
xor
fmuls
xchg
das
or
imul
pop
xchg
fwait
pop
leave
in
adc
rcl
fsubs
cmp
fnstcw
jge
dec
mov
mov
cwtl
pop
push
mov
push
inc
in
fistpll
mov
fisttpl
aam
in
data16
sbb
in
fisubl
xchg
sarb
data16
sbbb
cmp
nop
repz
aam
sbb
cwtl
push
sub
out
je
pop
xchg
gs
popa
xchg
ja
sub
adc
mov
xor
push
pop
xchg
pminub
in
add
arpl
subb
imul
or
ds
or
adc
sbb
enter
in
fnsave
gs
decl
pop
push
mov
inc
mov
fimull
push
sbbb
lret
shll
inc
xor
and
mov
jb
xor
or
dec
mov
mov
not
scas
pop
lods
dec
pop
repnz
add
stc
sub
dec
and
push
pop
dec
mov
and
sbb
jb,pt
shll
test
repz
mov
aaa
mov
sbb
push
jb
mov
aam
push
jl
outsb
fnstcw
imulb
movsb
das
cwtl
mov
lret
adc
mov
rcrl
ss
push
loope
outsl
push
jnp
lods
xlat
add
movsl
mov
add
int3
add
push
inc
stos
out
fwait
rcrl
enter
push
dec
cmp
shlb
inc
fisttpl
xchg
xchg
loope
das
fs
lret
fs
xchg
fisubrl
test
dec
inc
loope
fs
pop
pusha
idiv
mov
jno
push
xor
xchg
enter
les
subps
add
jecxz
or
push
mov
inc
jl
ja
xchg
push
dec
jnp
out
sub
les
and
jnp
mov
loop
pop
add
enter
outsb
mov
das
xor
mov
outsb
sub
out
inc
mov
in
ds
stos
scas
pop
dec
sbb
push
pop
dec
jp
aad
pop
lcall
jo
jmp
mov
jp
adc
cld
dec
inc
fisubrl
fcomps
xchg
jle
jno
push
popa
pop
push
pop
mov
orb
ret
ret
fucomi
paddsw
out
or
enter
jmp
xchg
pop
stos
lret
adc
aaa
sub
stc
mov
sbbb
je
repz
int3
dec
jecxz
lea
in
add
jmp
les
cs
fistps
outsb
mov
dec
and
push
pop
out
xchg
mov
fldt
insl
pushf
js
testb
out
and
rcll
icebp
adc
add
popf
adc
enter
loopne
sbb
dec
repz
imul
popl
stos
dec
cmp
ds
insl
or
and
lods
jnp
in
cs
pop
inc
sti
loopne
arpl
adc
xchg
xlat
mov
pop
xor
mov
pushf
lcall
inc
pop
repnz
clc
jl
push
sbb
push
jb
adc
jp
outsl
shrl
adc
xlat
mov
sub
movsl
cld
insb
dec
push
movsb
cs
outsl
lock
test
nop
outsb
mov
or
fmul
popa
outsb
add
out
leave
sbb
pop
data16
sub
mov
mov
or
cmp
inc
out
rorb
fdivrs
mov
push
je
clc
cmp
ljmp
inc
cmpsl
mov
push
lea
pop
jp
pop
sub
sub
cmp
lret
add
or
ja
jno
sub
ds
sahf
push
xlat
repz
mov
fwait
push
lock
cmp
xor
xor
es
int3
sub
dec
or
stc
mov
ret
hlt
dec
test
ss
push
loop
dec
xchg
out
sub
cmp
jmp
jp
dec
sbb
ficoml
rol
jo
cwtl
or
adc
mov
cmp
push
cmc
xlat
outsl
rclb
lods
in
nop
push
dec
push
jge
sbb
and
sub
sbb
and
les
outsb
jbe
cmp
mov
sub
dec
inc
pop
pcmpeqd
jge
or
fwait
inc
push
xchg
inc
pushf
mov
lds
mov
bound
faddp
fs
xchg
sub
xchg
jbe
jecxz
jl
testb
sbb
adc
cltd
fdiv
aas
mov
jle
aam
ret
add
add
jl
je
xor
xor
inc
into
and
push
mov
sbb
cmp
cld
test
or
pop
daa
push
push
mov
pop
test
lret
testb
out
xor
dec
test
cmp
inc
push
and
jb
test
into
scas
sbb
out
dec
push
aad
test
xchg
pop
inc
cmp
xor
out
inc
pop
adc
dec
or
adc
fidivs
orl
push
leave
in
nop
mov
push
popf
push
cwtl
xchg
flds
das
pop
lcall
push
loop
cmp
fwait
das
cmovp
ljmp
push
lret
mov
ja
pop
dec
adc
mov
jnp
mov
fcmovnu
int3
or
xchg
or
sbb
test
and
xchg
mov
fldl
add
mov
outsl
mov
pop
mov
sub
ret
sbb
push
leave
cmp
and
sbb
xchg
adcl
in
insl
fsubl
xor
jmp
sub
cmp
dec
subb
or
lds
test
leave
jmp
lcall
ljmp
filds
inc
ss
lods
push
mov
pop
jle
dec
setns
xor
sub
jle
cmp
test
xchg
ret
cmpsl
push
xor
sub
fwait
lea
test
gs
adc
aas
adc
test
lret
jae
pushf
loope
imul
or
add
xor
cmpsl
jg
fs
icebp
flds
push
add
jg
push
jmp
sub
fnstsw
dec
cltd
xor
mulb
out
and
mov
leave
pop
nop
jbe
scas
pop
jo
pusha
lods
enter
mov
repnz
jne
sub
and
cmc
sub
es
adcl
cmp
dec
adc
popa
xchg
flds
mov
dec
test
mov
add
cli
ja
mov
jl
adc
aam
pop
ret
cmp
iret
inc
cmpsl
lret
sar
mov
js
int
iret
aas
push
mov
test
mov
pop
dec
mov
ds
jae
in
fbld
dec
test
push
dec
xlat
js
cmpsl
ficomps
mov
or
xor
scas
arpl
es
xor
lock
dec
xchg
push
mov
subb
and
mov
or
mov
mov
stos
nop
pop
adcl
jg
ficoml
jae
mov
inc
shlb
mov
jle
push
stos
rcll
stc
ja
xor
xor
xor
pop
lock
xchg
aad
and
push
or
push
cmpsl
xchg
mov
into
movsl
lods
pusha
mov
sbb
inc
add
scas
in
adc
push
aad
ja
add
lcall
rorb
ficomps
enter
icebp
sbb
push
fbstp
mov
es
enter
in
and
or
jns
repnz
sub
cltd
pop
pop
lahf
mov
inc
sahf
ja
sub
enter
in
daa
icebp
loopne
clc
sub
ljmp
aam
in
iret
fiadds
jae
mov
test
mov
xchg
inc
push
jnp
scas
dec
sub
mov
xchg
mov
pop
cmpsl
xchg
pop
sbb
mov
mov
lods
xchg
fs
mov
ja
jns
popa
pusha
jl
mov
into
in
sub
mov
ret
fsubs
adc
das
push
nop
fdivs
dec
pop
pop
add
rol
cmp
nop
push
test
shlb
push
fadds
jmp
ljmp
sti
repnz
shl
mov
fisttpl
cltd
in
push
push
mov
repz
xchg
aam
jns
scas
adc
mov
cmp
mov
add
jns
test
std
call
mov
lcall
sub
loop,pt
jg
ret
adc
jns
jae
mov
xor
push
pop
or
sarl
shlb
out
cmp
push
jno
inc
jno
ja
sub
sub
fisttps
push
jg
push
sub
jne
jno
out
mov
addr16
rcrb
sub
sbb
scas
cs
fisubrl
inc
mov
mov
xor
cmp
popa
addr16
xchg
dec
icebp
jb
mov
das
ret
adc
out
pushf
mov
or
add
mov
rcll
es
mov
xchg
test
insl
arpl
out
pop
loop
dec
stos
mov
push
aad
rcl
cmp
push
je
mov
sbb
and
aas
xchg
stos
in
and
or
out
out
enter
jmp
dec
add
loopne
mov
lret
shlb
xchg
inc
mov
xor
jge
inc
int3
xchg
xchg
out
out
xlat
cwtl
out
addr16
jle
rolb
mov
loopne
les
mov
cmpsb
cmpsl
mov
arpl
pop
lods
push
xchg
sbbb
pop
dec
imul
mov
ljmp
cli
lods
add
and
aaa
mov
inc
nop
and
outsl
mov
sbb
ret
jl
lods
add
ficoml
cmc
pop
xchg
xchg
repnz
pop
xchg
and
mov
xchg
sub
push
out
pop
jge
movsl
pushf
dec
and
cmp
aaa
int3
or
or
dec
sbb
inc
mov
sbb
dec
fsin
in
sbb
test
in
fsubl
lds
pop
je
jg
mov
lret
sbb
std
fcoms
add
jmp
icebp
push
sub
dec
idivb
push
or
dec
inc
mov
pop
fists
rorb
pop
popf
mov
xor
fstps
pop
add
iret
fisttps
fildl
fstpt
inc
pop
cmovge
push
dec
loopne
sub
pop
in
xor
cli
pushf
call
inc
out
loopne
es
out
pop
pop
pop
rolb
iret
push
sbb
mov
adc
jne
push
insb
push
and
mov
arpl
js
aad
sbb
test
mov
cmp
insl
daa
jns
sbb
arpl
loopne
test
shl
int
leave
lret
pusha
mov
or
jge
ljmp
lea
shrl
and
pop
into
addr16
jb
add
mov
sar
and
sbb
and
cmp
mov
dec
lods
jne
out
xchg
ljmp
pop
fldcw
leave
outsb
xchg
push
sbb
push
mov
jge
mov
into
or
lods
pop
push
or
or
loope
ficomps
cmc
mov
sub
mov
mov
in
jmp
test
dec
imul
aam
xor
sbb
in
push
movsb
jl
call
ds
push
jecxz
orb
mov
mov
lret
stos
xchg
jg
mov
xchg
inc
call
lea
xchg
outsb
sbb
call
jg
std
mov
cs
int
or
or
lahf
inc
sub
jo
imul
cmpb
mov
jo
das
inc
fucom
lahf
in
cmp
sahf
xchg
xchg
cmpsl
fdivr
mov
subb
jns
popf
adc
add
mov
out
dec
fsubs
push
negb
out
aad
dec
and
lcall
or
mov
dec
rolb
mov
xchg
shrl
push
xchg
sub
cltd
pushl
out
mov
cmpsl
push
push
pop
jno
insl
and
sub
imul
pop
mov
in
and
pop
push
aad
pop
daa
cli
out
pop
iret
arpl
aaa
das
pop
nop
setge
mov
dec
cmpsb
bnd
mov
cwtl
adc
adc
shl
idiv
aas
dec
and
punpckhdq
cmpsb
mov
emms
xor
in
mov
xor
aam
mov
call
fidivl
jmp
sub
jae
jno
fsts
adc
adc
xlat
inc
dec
shll
lods
lods
test
adc
cld
sbb
rclb
inc
popa
mov
mov
mov
cmpsl
cmp
xor
mov
inc
mov
inc
push
add
outsl
dec
jmp
fildll
or
fimuls
sbb
int
cltd
repnz
fyl2x
les
adc
je
mov
out
mov
jg
inc
cmpsb
push
pop
xor
aam
add
fbld
in
aam
pop
rol
mov
pop
pop
dec
data16
or
test
imul
add
mov
xor
fwait
xchg
mov
das
ja
mov
xor
outsb
aad
stos
inc
xchg
inc
ja
aam
popa
add
lods
jo
iret
mov
push
mov
adcb
ds
scas
fidivrs
lret
mov
mov
and
loop
or
mov
cmp
jmp
and
out
addl
jg
popa
sbb
push
in
or
cwtl
icebp
push
decb
subb
hlt
nop
sub
out
sbb
data16
shlb
xchg
push
out
sub
xor
push
mov
icebp
add
js
or
outsl
mov
or
and
cs
sbb
lahf
stos
inc
pushf
aas
or
cs
fcom
insl
in
dec
out
rol
outsl
ret
jg
repz
add
outsb
sub
push
sub
loop
jne
idiv
insb
cmp
dec
imul
bound
aaa
sbb
and
loope
adc
shll
inc
test
je
int3
and
popf
addb
inc
pusha
clc
flds
int3
pop
pushf
stos
in
call
sub
cmc
or
and
pop
out
jmp
dec
aam
pop
adc
std
loop
xchg
jbe
add
mov
out
fcomp
scas
scas
lods
pop
shlb
cmpsb
gs
and
loop
out
lds
sub
mov
lea
jbe
std
pop
xchg
hlt
nop
into
sahf
fstl
ret
pop
mov
and
popf
rclb
mov
faddl
jns
pmaxsw
adcl
mov
flds
addr16
int
jg
out
aam
jge
scas
mov
test
inc
rcrl
les
sub
nop
xchg
sbb
roll
repnz
jp
shrl
mov
cmp
fs
js
cmp
mov
js
jge
stc
pop
sub
popl
test
sti
or
std
and
jno
or
mov
jp
mov
int3
pop
jnp
lods
pop
pop
cltd
pop
fwait
push
xchg
sbb
add
xchg
jns
stc
mov
in
pop
xor
xor
out
jge
jp
jno
xorb
mov
jl
sarl
dec
push
imul
xchg
incb
ja
lds
sbb
or
jns
ljmp
pop
mov
mov
shl
or
cs
adc
sbb
cmpsl
mov
ret
xchg
sub
xchg
leave
dec
cld
es
xchg
pushw
adc
gs
mov
cmp
pop
inc
mov
aad
in
sub
bound
fdivrl
imul
mov
pushf
sub
imul
arpl
inc
in
cwtl
int
add
xor
pop
out
adc
xor
scas
push
pop
fsubl
mov
call
fidivrl
enter
imul
add
sbb
insb
repnz
mov
mov
aad
and
cmp
sbb
imul
mov
sub
inc
imul
jge
and
mov
ljmp
fsubrs
mov
scas
push
enter
mov
xchg
pop
push
popf
jmp
xchg
lcall
mov
in
mov
lock
movsb
stos
stos
push
test
out
repz
shll
sub
sbb
mov
pop
xchg
pop
mov
in
out
xor
lcall
adc
lea
mov
dec
fistpl
lock
fists
add
pop
pop
sbb
das
adc
mov
movl
push
cs
inc
das
xchg
scas
imul
jmp
add
mov
scas
and
dec
pop
mov
bound
jl
fidivrl
pop
cld
xor
mov
shl
cwtl
jl
cmp
test
lods
cmpsl
pop
add
adcl
popf
pop
add
stos
ljmp
and
push
ret
pop
lock
jne
mov
add
add
js
ret
jb
push
ffree
mov
and
mov
fwait
add
imul
jbe
jae
add
imul
inc
cmp
and
mov
sbb
int
bound
fs
mov
jge
jns
aas
vmovaps
push
adc
imul
push
mov
sbb
inc
adc
js
stos
bound
cmp
sub
xchg
call
xlat
fwait
add
pop
add
jmp
imul
loopne
mov
sub
lahf
mov
mov
movsl
dec
mov
xlat
mov
push
lahf
ficompl
adc
js
xor
das
das
mov
stos
dec
push
andl
mov
or
out
xorl
mov
out
pusha
and
lds
sbb
subl
adcl
movsl
in
xchg
dec
push
xchg
fs
call
loop
cmpsb
jp
xor
data16
call
aam
es
dec
iret
es
pop
xchg
lahf
fildll
in
mov
popf
xor
scas
or
sbb
sbb
popl
out
cli
shlb
insl
xor
push
adc
testb
rorb
dec
repz
jno
insl
push
or
scas
mov
testb
sti
cmp
mov
in
test
dec
pusha
addr16
icebp
adcb
inc
test
add
mov
lods
arpl
loop
ret
stos
daa
mov
in
or
pop
xchg
in
inc
rorl
test
movsl
shll
jl
rcrl
inc
sbb
outsb
xor
sub
fsubrp
das
insl
adc
pop
cltd
jnp
test
mov
ficomps
and
scas
add
mov
lods
mov
jmp
inc
out
push
push
mov
lret
lahf
jae
loop
fmull
cmp
xor
shl
pop
test
xchg
adc
or
pop
push
mov
cmp
cmp
jl
sub
mov
ljmp
push
mov
mov
jg
test
lds
jo
out
inc
mov
popf
sbb
std
xlat
and
mov
jmp
lods
leave
lret
add
lea
inc
pop
dec
mov
lods
dec
add
or
xchg
xchg
jmp
lods
cmp
pop
int3
xchg
mov
dec
add
add
xchg
add
out
xlat
loope
and
xchg
fwait
cmpsb
push
ljmp
iret
into
cmp
push
ficoms
pop
pop
lods
mov
or
jbe
int3
dec
mov
sub
cmp
push
out
mov
dec
ds
mov
jmp
push
icebp
out
out
xchg
pop
imul
adc
testb
ds
es
ds
jecxz
add
and
mov
or
sub
lret
jl
pushw
mov
inc
push
xor
sub
and
jg
daa
divb
fucomi
mov
pop
sbb
or
fnclex
cmp
clc
sub
stc
or
jns
xchg
inc
mov
data16
popa
mov
scas
sub
pusha
aas
mov
mov
adc
adc
and
inc
pop
jecxz
loopne
push
adc
pop
mov
repnz
out
out
sbb
mov
or
stos
out
mov
sbb
push
loopne
insb
mov
mov
mov
cmp
hlt
and
fs
mov
imul
lret
add
inc
mov
adc
mov
pop
adc
push
mov
mov
inc
gs
js
test
push
adc
push
xchg
ljmp
adc
loope
sti
jo
ss
jae
fwait
arpl
fdivr
jns
gs
push
insl
push
jmp
sarb
xchg
inc
sub
les
add
aas
cmp
pop
sbb
cmp
cmpsl
xor
aad
addb
lret
and
int3
mov
pop
mov
sbb
cmp
test
in
es
clc
mov
adc
inc
adc
pop
and
out
and
inc
sub
lea
xor
dec
lcall
imul
movsb
mov
outsl
dec
sbbl
jle
lods
cmp
dec
cmc
lahf
inc
hlt
xchg
loop
fwait
bound
sub
or
fmull
outsb
pop
sbb
mov
call
push
out
dec
lret
mov
incb
fdivs
pop
and
int3
stos
hlt
push
out
loope
jg
add
adcl
mov
js
leave
cmp
lods
push
js
lea
jnp
mov
xor
mov
aam
and
pop
sbb
icebp
ret
lds
fadds
rcll
dec
cmpsl
dec
xlat
mov
adc
popf
fs
sub
cwtl
icebp
xor
push
xor
sahf
add
mov
call
dec
mov
jmp
gs
loopne
xor
jl
in
pop
mov
sbb
jge
cmp
add
sbb
scas
mov
imul
sbb
or
add
xor
movsl
inc
xchg
xchg
adc
fucomi
xor
jmp
mov
xorb
ret
push
outsl
mov
ljmp
es
data16
into
ja
pop
pop
inc
fdivrs
push
mov
lcall
xor
push
rorb
in
pop
stc
cmp
in
insl
lea
xchg
scas
push
push
addr16
hlt
sub
jp
jne
pshufw
inc
adc
cmp
nop
inc
lock
test
leave
mov
setb
sbb
pushf
push
fldcw
jae
scas
pusha
inc
mov
cmp
test
loope
sarl
ds
jle
mov
loop
add
pop
bound
jns
mov
jp
jnp
xchg
lahf
sysret
jne
test
xchg
mov
or
add
lcall
dec
fldt
xchg
jne
loop
loope
add
xchg
jmp
jecxz
cmp
and
pop
xchg
sbb
aad
push
jp
cmpsb
or
out
movsl
mov
sub
out
shrl
into
cld
nop
leave
sbb
xorl
cs
imul
xchg
pop
dec
push
and
lock
xchg
adc
test
and
imul
xchg
fmull
iret
xchg
loopne
pushf
mov
sub
icebp
repz
call
jno
test
cmp
repz
addb
sub
push
jne
sub
mov
push
xchg
fnsave
aas
and
stc
add
inc
or
insb
outsl
xchg
mov
jo
jmp
cli
sbb
mov
pop
je
ja
lock
and
nop
adc
inc
rorb
dec
js
movsb
shl
mov
bound
fnstcw
inc
icebp
adc
in
push
orb
xchg
shrl
enter
adc
add
ret
sbb
xor
mov
aam
fnstenv
mov
jl
inc
xor
in
pop
call
push
mov
rcl
rorl
push
xchg
lahf
hlt
std
mov
push
xor
sub
sub
in
lea
clc
pusha
mov
in
inc
adc
and
popa
shll
rcrl
jns
sbb
sbb
mov
push
fsubrs
jmp
mov
adcl
jmp
dec
roll
adc
inc
in
xchg
in
fisttpll
dec
aad
add
shrb
push
jo
roll
out
xchg
popf
mov
pop
aam
incb
hlt
mov
clc
mov
jne
out
dec
mov
nop
les
pop
fiaddl
or
sub
dec
out
pop
push
pusha
fisttpl
cmp
add
mov
xchg
scas
out
ljmp
in
xor
fadd
aas
ds
lea
aas
mov
outsb
xchg
push
or
jl
std
repz
repnz
sbb
mov
test
sub
fwait
enter
xchg
imul
pop
xchg
in
inc
nop
enter
test
xchg
and
adc
cmp
push
inc
lmsw
push
leave
mov
or
inc
daa
stc
mov
mov
mov
stos
das
xchg
shufps
add
pusha
stc
shll
fnstenv
out
pop
or
sub
aad
inc
daa
jno
mov
xchg
add
xchg
push
dec
pop
inc
lods
stos
scas
cmpsl
jl
or
ja
movsl
mov
xchg
xor
push
loopne
xor
inc
jbe
cmc
hlt
add
in
rorb
imul
addr16
push
cmp
fcom
mov
cmp
jle
inc
fstps
daa
clc
add
out
sub
and
popa
fdivrl
out
push
mov
gs
loope
insb
or
js
int3
andl
xorl
mov
not
or
mov
push
mov
pop
jae
xchg
ret
push
or
mov
dec
or
cmpsl
fcmovnbe
mov
mov
sbb
arpl
into
xchg
mov
push
mov
mov
sahf
aam
lods
mov
inc
adc
xor
pop
addr16
ja
ds
arpl
mov
insl
aam
icebp
addr16
pop
xchg
call
popf
in
mov
or
ret
xchg
pop
int
lds
ss
rorb
mov
mov
pop
or
mov
in
pushf
fmull
stos
mov
xlat
repnz
and
shrl
sbbl
sub
call
mov
bound
inc
lods
arpl
pop
pusha
push
mov
data16
sbb
cmc
divl
out
cmc
add
or
mov
mov
xchg
inc
jnp
jae
test
repz
cmp
addr16
fadds
mov
jle
jb
sub
jae
std
push
dec
out
jge
adc
mov
inc
pushf
insl
adc
ja
fists
or
sbb
and
pop
inc
push
out
stos
fnsave
sti
test
pop
sub
imul
mov
push
sbb
jbe
pop
div
lss
jb
inc
test
adc
push
mov
dec
mov
shr
mov
fidivrl
lods
pop
lods
mov
out
leave
mov
pop
dec
mov
inc
adc
pop
adc
pop
add
mov
imul
pusha
sarb
cmpsl
and
jle
xor
shl
lahf
test
cwtl
mov
icebp
push
cmp
insl
out
mov
clc
or
aam
add
xor
shll
call
out
shrb
push
xlat
outsb
mov
push
les
dec
lcall
decb
mov
das
pop
and
sbbb
stos
cmp
lock
lock
adcb
mov
jg
lret
mov
test
mov
fistl
ret
jno
rolb
movl
insl
inc
sahf
xchg
aas
cltd
add
cmp
mov
clc
mov
pop
mov
push
dec
jge
dec
adc
adc
pop
xchg
inc
xor
loop
lods
std
mov
and
cmp
mov
add
ds
push
mov
cltd
mov
aaa
inc
out
ss
fs
int
jb
jg
sub
fnsave
andb
sbb
jbe
out
bound
cmp
jb
loop
ret
xchg
push
jbe
mov
add
cmc
ret
jle
aas
jae
daa
pop
jp
rorl
adc
movsb
lret
xchg
out
inc
mov
cmp
stos
jne
pop
lods
adc
pop
std
adc
dec
scas
addr16
std
sahf
jnp
das
or
insl
je
xchg
cmp
jb
mov
mull
sbb
int3
mov
pop
adc
mov
fwait
jnp
rcrb
mov
push
dec
xchg
scas
out
scas
inc
setbe
stos
ret
sub
leave
adc
cli
ret
mov
jecxz
test
es
loop
int
mov
add
pop
jbe
jmp
rol
andl
ljmp
aaa
cmp
sub
bound
inc
shlb
xor
mov
cmp
push
pop
pop
jb
sbb
fiaddl
sub
rcrb
inc
cmp
mov
std
orl
cltd
loop
mov
mov
sti
mov
shl
and
mov
fwait
fwait
sbb
outsl
int3
jg
xchg
flds
jp
add
jns
mov
mov
inc
aad
repnz
and
jecxz
loope
sbb
push
mov
add
mov
pop
lret
sbb
clc
out
jge
int
sub
mov
jg
rorb
add
notb
pop
pop
into
jae
out
cli
xchg
and
xor
mov
leave
cmp
add
fs
jnp
mov
dec
pop
clc
insl
cld
test
ja
cli
mov
clc
fbstp
cmp
popa
dec
inc
es
add
shlb
mov
sub
jnp
mov
aam
pusha
repz
inc
cmp
stc
fdivrl
daa
push
jbe
and
inc
add
dec
xchg
push
inc
cmpsb
insl
fists
xchg
and
push
cmp
outsb
cwtl
insl
loop
push
jae
cmpb
loopne
fcoml
push
int
dec
scas
cmp
lea
push
pop
mov
imul
test
cwtl
scas
dec
loope
not
xor
cld
pop
bound
add
pop
sbb
iret
jno
adc
mov
sub
or
mov
jno
mov
xor
push
sbb
cwtl
mov
lods
loope
ret
pusha
mov
or
cmp
mov
xchg
data16
cmpsb
cmp
and
push
dec
shlb
xchg
arpl
call
ljmp
sbbl
std
int
push
out
addps
gs
imulb
xor
dec
sub
adc
fidivl
push
int
fs
ret
jle
push
sbb
inc
mov
mov
mov
xchg
add
xchg
fisttps
fisttpll
sub
stos
add
bound
fcmovnb
sbb
xchg
mov
adcb
cmp
inc
xchg
mov
movsb
movsb
dec
rolb
push
add
lret
and
mov
mov
pop
pop
rcrb
mov
xchg
jno
enter
imul
xor
in
push
and
mov
xchg
or
fsts
in
pop
repz
popa
mov
cmp
cltd
shrb
push
inc
inc
das
hlt
cmp
adc
adc
pushf
dec
jl
outsl
pop
xor
sub
add
jmp
dec
das
add
pushf
add
cmp
push
xchg
mov
repz
lods
push
xlat
xchg
mov
dec
push
push
cmc
pop
ljmp
or
std
or
mov
jbe
mov
jl
mov
or
popa
cmpsl
push
mov
mov
mov
testb
mov
lock
hlt
inc
adc
and
xor
lea
fs
pop
outsb
pop
push
loope
push
das
mov
sub
add
jae
jg
clc
fstps
mov
cmpsl
push
pop
mov
jne
inc
call
push
test
test
add
mov
shl
sub
fldt
shll
or
idiv
nop
mov
cmp
dec
add
cmc
dec
sub
xor
push
xchg
mov
lds
mov
pop
add
dec
pop
stc
mov
hlt
push
dec
jnp
in
jns
insl
add
in
mov
les
es
dec
rcl
ljmp
adc
dec
jnp
out
cmp
push
sub
xchg
stos
cs
rorl
addr16
inc
jp
icebp
xor
cmp
jl
mov
mov
sub
push
push
scas
adc
and
lret
xor
inc
ja
pushf
push
jae
sub
and
rolb
sub
iret
hlt
popf
and
sub
decl
lock
xchg
sub
mov
pop
inc
repz
ficomps
xor
sub
test
repnz
loope
je
insl
push
jbe
add
mov
popa
dec
fbstp
lods
outsl
and
mov
enter
pop
sbb
addb
fisubrs
xor
test
outsl
mov
lods
aaa
mov
out
adc
mov
movl
addr16
inc
mov
push
sbb
add
jmp
aad
call
scas
les
jle
mov
ret
andl
dec
adc
push
punpckldq
fwait
mov
mov
inc
pop
sbb
pop
xchg
push
mov
cmp
mov
mov
cmpl
push
ds
add
out
push
aaa
mov
jg
mov
dec
pop
into
push
stos
add
push
dec
shl
test
loope
xchg
inc
cmp
or
push
sahf
dec
jno
nop
into
mov
mov
imul
loop
jl
xor
hlt
jae
stos
cmp
enter
gs
nop
sub
pmuludq
mov
pushf
adc
lods
mov
push
inc
movsl
adc
in
mov
and
inc
arpl
orb
out
fsubl
imul
adc
mov
mov
sub
je
cmp
xchg
sbb
dec
cmp
ret
or
jmp
scas
xor
xor
add
pop
test
adc
out
lcall
lret
xlat
je
xor
in
lret
stc
stos
mov
aad
add
fisttps
cwtl
daa
mov
push
nopl
and
and
out
mov
js
cmp
jmp
rol
dec
cmp
inc
jno
ret
ljmp
mov
daa
mov
jg
push
and
xchg
jp
adc
das
je
ss
push
or
jecxz
popa
fnstcw
jge
call
sbb
or
mov
int
aas
add
mov
es
mov
repnz
fdivrl
adc
neg
fsts
pop
dec
clc
stos
cltd
xor
bound
iret
mov
jecxz
sahf
fisubrl
pop
pop
jmp
mov
imul
movsl
xlat
ja
cmp
cli
sbb
dec
push
das
xchg
xor
enter
adc
xor
mov
xchg
loopne
mov
jo
mov
insb
cmpsl
pop
inc
or
insl
xchg
test
andb
pop
push
inc
push
pop
sahf
or
out
fbld
and
mov
shll
cli
xor
adc
xchg
xor
push
lods
sub
pusha
and
fcmovu
dec
les
dec
les
ljmp
push
mov
mov
mov
mov
cs
pop
pop
sub
orl
jg
xchg
xchg
inc
loop,pt
xchg
xorl
cli
adc
inc
fimuls
repnz
jp
insl
pop
cmp
cmp
cmc
pusha
iret
fidivl
pop
lcall
or
mov
inc
shlb
fistps
lea
mov
xchg
pushf
icebp
pop
in
adc
mov
xor
mov
push
clc
add
adc
popl
and
sbb
repnz
and
push
test
xor
inc
dec
cmp
mov
js
cld
out
add
mov
jo
sub
and
add
jge
in
lret
inc
addr16
shrl
cmp
xor
data16
ja
pop
sbb
movsb
inc
mov
add
ljmp
sub
push
scas
dec
push
mov
push
je
fidivrl
pop
xchg
push
std
rcrl
push
ljmp
dec
ret
add
dec
ret
mov
stos
adcb
mov
jbe
xchg
dec
les
mov
inc
push
loopne
push
cmpsb
stos
out
movsl
insl
addr16
nop
ja
outsl
xorl
int
dec
mov
outsl
fisttpll
xor
out
push
pushf
out
out
cmc
mov
xor
cmp
lahf
xchg
xor
adc
inc
sahf
adc
pop
mov
inc
mov
sarb
sbb
stos
int
xchg
jno
imul
aaa
inc
sbb
dec
xor
inc
sbb
dec
xor
mov
dec
mov
push
in
push
ja
pop
xchg
movl
sub
insl
repnz
cmp
mov
jl
jl
jno
xchg
pop
jecxz
decl
sbb
insb
jnp
xor
shlb
scas
fstl
inc
in
lds
sub
inc
call
xchg
imul
or
push
sub
or
fwait
repnz
out
and
adc
into
pop
xor
xor
push
ret
jb
icebp
dec
decb
les
pop
lcall
rclb
hlt
add
push
adc
xor
lahf
data16
pop
fcomip
daa
fwait
insb
enter
clc
xchg
xchg
push
das
loop
xor
rclb
push
jno
jmp
jo
xchg
xor
mov
aam
lock
lcall
xor
out
mov
mov
push
rcrl
push
lods
rcrl
dec
add
and
test
pop
push
mov
sbb
dec
jae
test
mov
xchg
mov
mov
aas
add
sahf
jo
jmp
int3
xchg
popa
cmpsb
test
pusha
jmp
cwtl
call
jae
sub
mov
shl
addr16
push
fxch
jg
popa
ret
inc
mov
xchg
push
lret
cltd
xor
push
ja
aas
inc
fbstp
and
daa
fwait
adc
adc
lods
and
or
cmc
mov
mov
int
sub
or
jne
not
xchg
and
mov
inc
lods
add
cmc
xor
lret
push
aad
sarl
push
bound
aam
scas
das
xchg
lods
or
loopne
mov
aas
push
out
lods
mov
jae
mov
shlb
push
dec
hlt
inc
dec
pop
shlb
jae
dec
int3
or
sti
pcmpeqd
sub
aam
pop
and
adc
pop
push
sub
cmp
sbb
bound
fiadds
inc
adc
xchg
stc
jle
mov
adc
cmpsl
imul
sub
in
dec
sbb
sbb
into
sbbl
push
push
fmuls
hlt
jnp
ds
jnp
insl
sbb
dec
dec
cli
push
inc
cmc
dec
in
xchg
xor
mov
dec
jl
insb
stc
test
jl
or
mov
rcll
xlat
fsubp
js
cltd
add
pushf
lret
push
sub
mov
cmpsl
pop
mov
push
pop
sahf
mov
push
cmpsl
mov
cltd
dec
adc
loope
jg
add
add
push
js
adc
out
ja
adc
into
hlt
pop
fcomps
cld
dec
mov
test
leave
fisttps
sub
into
pop
push
jno
lret
bound
and
in
fadd
mov
in
cld
fsubr
gs
ja
rclb
aaa
lret
dec
adc
aam
shrl
sti
push
outsl
outsl
dec
inc
sub
xor
sub
and
cmc
addl
push
and
ret
aad
stos
sti
push
loope
or
testl
out
pusha
ret
adc
stos
outsl
add
sub
das
cli
je
sub
cmpsb
notb
lock
adc
mov
push
cwtl
imul
mov
gs
xor
sbb
pop
add
cmp
aaa
aam
ljmp
out
push
pushf
or
fucomip
std
jae
sub
jmp
fstps
cmc
movsl
sbb
cmp
into
xchg
movsb
cmpsb
xchg
fmull
popf
xor
in
inc
add
mov
mov
pop
inc
arpl
jne
arpl
mov
test
stos
sbb
xchg
shll
pop
popa
push
ret
pop
pause
jae
push
xlat
inc
jg
daa
es
push
ret
popf
movsl
loop
int
movl
mov
and
in
insl
mov
mov
inc
mov
or
add
les
pop
aad
inc
jl
jo
out
fdivrp
ds
mov
test
scas
add
push
push
jle
inc
push
rolb
xor
mov
or
cmp
and
adc
rcl
cmp
jno
fucom
mov
out
mov
out
jno
popa
add
repnz
in
andl
stc
dec
out
mov
pop
out
outsl
cs
nop
dec
mov
add
push
sbb
push
lock
inc
add
xor
les
adc
insl
inc
mov
and
int3
popf
clc
repnz
ret
push
lods
jnp
clc
xor
mov
out
jo
adc
mov
add
ds
fists
mov
arpl
mov
xor
sbb
les
pop
imul
sbb
mov
pop
and
into
out
pop
sbb
fmul
xor
nop
push
sub
sub
sbb
xor
push
xchg
adc
fwait
lds
loop
xorl
imul
add
lea
fwait
cmc
in
mov
jbe
imul
jae
and
fwait
mov
xchg
test
idivl
out
aad
mov
pop
jo
std
jbe
pop
xor
mov
mov
jns
repz
jp
fsubs
movsb
fnsave
ds
jne
ret
jnp
push
out
push
mov
add
stos
in
in
shlb
adc
mov
push
outsb
inc
enter
icebp
clc
cs
mov
fyl2x
loope
jnp
push
lea
rcrb
in
adc
cmp
ja
into
dec
mov
test
and
jecxz
mov
mov
nop
push
mov
or
int3
or
add
pop
stos
sahf
or
adc
push
mov
cmp
gs
pop
cli
cmp
jns
clc
movb
xchg
sbb
nop
fstpl
sub
cmc
sub
add
and
xlat
fstpl
cmp
loopne
nop
cmpsl
sub
gs
hlt
mov
mov
in
leave
sbb
filds
push
pop
stos
fsts
cmp
fsubs
das
das
enter
xor
imul
sub
out
daa
sbb
lods
xor
jb
mov
rcrb
call
pushf
inc
cli
push
mov
popf
dec
xchg
adc
std
mov
push
ljmp
orb
sub
ret
adc
push
mov
fistpl
lock
stos
daa
sbb
movsb
nop
and
stos
sub
pop
and
jmp
lahf
sbb
jge
push
cmpsl
mov
nop
aad
pop
adc
adc
push
mov
jp
adc
rorl
in
or
shr
outsl
jmp
push
mov
ret
mov
cmp
jne
daa
jp
jg
push
mov
ds
mov
loope
add
and
pop
cwtl
stos
dec
xchg
jp
xchg
inc
mov
dec
jbe
pop
mov
ret
mov
mov
lcall
in
cmp
testb
mov
inc
push
loopne
mov
stc
aad
pop
xor
les
mov
les
je
decl
cmp
ror
insl
dec
dec
jnp
out
push
xchg
jno
xchg
addr16
ljmp
jb
and
lods
inc
jae
pop
pop
push
jge
jo
lods
xor
mov
in
cld
pushf
push
lret
icebp
or
xchg
ret
pop
sub
aaa
incl
faddl
add
pop
xchg
in
int
cmp
xchg
scas
or
fmul
mov
ja
mov
pop
loop
or
xchg
fidivrl
pop
test
jle
and
jo
rcrb
pop
fdivl
bound
stc
das
loop
pop
inc
imul
stos
mov
cmpsb
mov
popf
adc
aas
movsb
jg
sub
fisubrl
call
pop
mov
xor
test
xchg
into
lds
je
jo
sahf
dec
adc
cmp
movsl
xchg
out
and
fstpt
loop
jp
jl
add
ds
add
jo
cmp
in
imul
sbb
add
into
dec
mov
shlb
ljmp
in
xchg
andl
sub
in
jecxz
or
icebp
fsts
sub
xor
xchg
test
mov
iret
mov
into
insl
push
pop
outsl
mov
pop
or
xor
in
mov
inc
xchg
jae
cmpl
lock
sbb
cmp
mov
sub
xchg
or
fwait
aad
fwait
ret
lret
mov
pop
fstl
movsb
andl
ss
pandn
aam
add
outsl
in
cs
pop
sbb
shlb
cmpsl
cmp
push
xchg
or
or
fistpll
insl
cwtl
xor
ss
call
std
jae
mov
sub
fbld
cmp
mov
inc
cmp
and
mov
aaa
and
imul
icebp
xchg
pop
mov
pop
xor
lock
loopne
in
adc
loop
aas
out
and
jg
fdivrs
sbb
dec
cmp
or
cmp
fstps
jge
pop
cld
divb
xor
outsb
out
sub
sub
lcall
sti
call
dec
repz
mov
xchg
mov
mov
pop
mov
clc
sbb
loop
sbb
cli
dec
xchg
mov
jne
enter
addr16
cmp
lea
lret
in
in
jg
pop
mov
jnp
cmc
sub
push
and
gs
jne
pusha
lods
adc
jbe
cltd
int
dec
xchg
jb
mov
das
fdivs
in
xchg
iret
aaa
shll
jg
xlat
leave
inc
xorb
dec
xor
in
fs
add
cmp
xor
push
pop
xor
and
push
lods
mov
jns
out
in
rclb
xchg
cli
test
out
outsb
popf
sub
sbb
add
and
pop
push
sbbb
mov
xchg
aas
out
fildll
push
pop
shl
les
dec
cmpl
cmpb
loop
aaa
xchg
cld
movsb
lea
mov
add
xor
insl
push
mov
xor
clc
addr16
cli
jge
xchg
aas
mov
and
xchg
addr16
lock
or
mov
movsl
lret
leave
sbb
gs
pop
lret
push
sub
int3
jge
mov
sahf
push
or
adc
xchg
cli
roll
mov
xchg
jg
xchg
lock
in
ret
pop
ljmp
or
or
scas
rorl
test
test
inc
je
rcrl
stos
adc
enter
jp
jle
popa
mov
pop
mov
mov
jae
std
rcrl
mov
sti
xchg
or
neg
jge
inc
jmp
jle
adc
call
lds
in
xchg
xchg
jns
xchg
aad
vmovups
leave
xchg
mov
cld
loopne
and
out
cltd
js
dec
mov
mov
lods
mov
in
es
aam
fdiv
cmp
lods
sbb
add
insl
decb
ja
in
iret
ljmp
xchg
into
lods
shlb
jmp
mov
or
dec
loopne
das
push
lods
mov
mov
or
ljmp
jo
dec
cmc
sti
imul
mov
repz
pop
lods
ficoms
xchg
fistpll
leave
in
xor
fisttpll
mov
cmpsb
jno
bound
lods
pop
stos
lods
mov
xchg
add
fs
cmc
jle
scas
jb
inc
dec
lcall
or
wbinvd
mov
dec
fidivrs
inc
pop
xor
xor
nop
sarb
es
push
push
mov
jmp
aas
in
je
or
adc
xchg
clc
testb
fiadds
and
imul
mulb
clc
push
pop
fxch
cmp
push
push
push
lea
fcomps
rorb
scas
ss
fisubs
mov
lahf
pop
lcall
ficoms
sub
lods
or
lods
dec
or
mov
mov
xor
inc
jnp
das
lock
pushf
push
fidivrs
pop
pop
push
cmp
int3
dec
sarl
test
add
cmpsb
xor
xlat
das
rolb
mov
ret
dec
sti
xor
bound
jnp
shrb
push
or
mov
lods
or
xor
imul
dec
aam
loopne
call
sahf
mov
inc
jecxz
sub
cmp
idivb
cmp
jbe
and
xchg
mov
repnz
dec
inc
cmp
ficoml
aaa
popf
xlat
jl
mov
subb
out
push
into
dec
divl
or
dec
push
push
gs
mov
jmp
sarb
and
xor
jp
adc
arpl
negb
aam
xorl
popf
in
das
and
pop
cltd
pop
sbb
add
pushf
push
lods
cmpsl
repz
insl
int3
out
xchg
insl
lods
repz
push
pusha
pop
add
test
pop
iret
push
dec
inc
in
inc
inc
cmc
jl
test
repnz
in
lcall
xor
out
mov
add
insb
mov
jmp
orl
push
orl
lcall
xchg
and
inc
add
adc
pop
xchg
icebp
pop
jne
inc
pop
test
mov
push
xchg
rol
pop
mov
hlt
jbe
lods
dec
dec
cs
xorb
mov
test
dec
rol
orb
and
inc
aam
das
int
fcomps
pop
ret
mov
mov
loope
pop
xor
das
sarl
popa
pushf
xor
xchg
jp
and
test
int
mov
adc
in
mov
rcrb
lods
sbb
mov
and
cwtl
aam
nop
mov
repnz
jo
jno
iret
jg
scas
sub
mov
ss
ss
sbb
push
adc
sub
ja
repnz
mov
pusha
fwait
inc
movsl
div
outsl
filds
add
mov
ja
lahf
and
movsl
xorl
cmp
movsb
data16
repz
cwtl
cltd
and
add
dec
xor
stc
pop
jle
inc
mov
inc
lret
ret
or
js
push
xchg
jb
mov
push
and
pop
push
xor
aas
push
test
out
hlt
pusha
les
nop
push
popa
sub
xor
nop
jnp
and
push
arpl
hlt
push
mov
hlt
mov
and
lds
imul
jl
and
test
add
mov
popa
ss
out
pop
and
adc
insl
or
pop
stos
adc
mov
or
or
mov
jne
rorb
cmp
addr16
add
mov
push
xor
mov
sahf
repz
pusha
andb
sarl
daa
mov
xor
test
out
lahf
ficoml
jmp
jo
clc
jle
mov
mov
mov
lods
sbb
ja
xlat
mov
adc
insl
add
dec
add
sub
jp
mov
ljmp
dec
mov
jmp
jmp
inc
lods
jp
mov
push
aas
xor
jecxz
jnp
jl
push
dec
inc
data16
stos
jge
add
adc
mov
pop
imul
mov
jb
and
popf
cmp
stc
je
adc
adcl
sbb
mov
mov
push
mov
loope
ja
aaa
push
into
movsb
jmp
rcrb
rcr
or
xor
jmp
xor
in
lret
and
fstl
push
mov
ret
imul
sar
or
jb
lods
jl
pusha
and
mov
dec
adc
fmul
dec
cld
dec
jge
mov
lods
clc
popf
outsb
shlb
push
jae
shrb
mov
mov
into
jnp
push
push
xlat
sbb
mov
cmp
daa
sbb
cmpsl
dec
gs
roll
add
jp
mov
sub
cmp
ret
js
inc
js
outsb
adc
rorl
or
repnz
cmpl
add
ret
mov
adc
movsl
push
int
cwtl
adc
mov
xor
pop
mov
push
xor
rorl
sbb
out
mov
push
rcrl
lcall
ljmp
popf
xor
popa
cmp
rorb
movsl
lahf
adc
jge
cli
call
jmp
xchg
call
jns
inc
stc
mov
sti
fnsave
or
push
sbb
mov
dec
jno
xor
outsl
xchg
sahf
sub
xor
inc
mov
in
insl
inc
cld
sbbb
mov
pop
es
fcmove
xlat
out
gs
addr16
bound
pop
jg
js
lahf
adc
sub
push
cwtl
lahf
and
enter
jne
rolb
jecxz
or
jmp
imul
mov
pop
xbegin
sarb
lock
xchg
int
cmp
fwait
pop
pop
mov
mov
sub
popa
in
adc
mov
dec
fwait
and
sub
in
orb
addr16
cmpsl
gs
cltd
test
lods
clc
mov
adc
dec
aaa
jg
sub
dec
push
scas
and
jae
jns
enter
insl
jnp
pop
push
xchg
mov
jnp
sahf
enter
fsubr
inc
xor
lret
out
arpl
js
xlat
xchg
adc
inc
sub
cmp
jp
pop
addr16
es
lcall
mov
movsb
mov
mov
inc
push
sub
mov
cltd
imul
fs
xor
test
cmp
dec
inc
adc
push
adc
imul
pop
mov
xor
xchg
int3
clc
sbb
inc
dec
ja
push
jl
shrb
fildl
aam
xor
mov
ljmp
pop
rorb
mov
stc
xchg
fldenv
adc
inc
in
add
loope
test
sti
mov
add
in
mov
fucomi
inc
pop
xor
scas
push
aas
sbb
pop
test
and
add
jge
xlat
aaa
shlb
imul
iret
sub
or
pop
je
push
xchg
and
sub
les
adc
xchg
negb
xor
push
xor
or
shll
adc
push
add
lcall
push
xor
mov
xchg
subb
insl
pop
jne
mov
inc
filds
sub
cmp
jnp
pop
or
or
and
ljmp
ds
test
or
orb
loope
lahf
insl
shlb
in
addr16
push
aaa
and
xchg
mov
pushf
dec
int3
js
cld
rclb
and
lahf
mov
xor
stos
frstpm(287
adc
pop
stc
dec
or
jno
cmp
or
mov
jecxz
das
push
fwait
mov
test
xor
insl
xchg
dec
and
mov
lret
call
xor
jne
inc
and
pushf
pop
test
sbbl
push
sub
sbb
iret
cmp
es
add
mov
rcrb
mov
sub
cmp
or
hlt
dec
cld
divb
lods
leave
push
jne
jge
xchg
push
ret
bound
insl
mov
out
add
cwtl
testl
jnp
mov
xchg
sub
jmp
popa
fadds
aaa
cmpsl
idivb
clc
push
aam
sub
pop
dec
fs
out
loope
mov
push
jno
dec
pop
aam
stc
pop
mov
stc
shlb
mov
cmp
cmp
cwtl
loopne
int3
fs
idivl
inc
sbb
data16
cli
jl
jecxz
or
inc
push
lock
or
adc
jae
cld
inc
es
pop
sbb
mov
dec
ret
and
aad
pop
into
xor
mov
push
cmpsl
mov
cs
test
push
js
scas
fisttpl
xchg
and
fidivs
das
mov
in
daa
out
push
push
mov
imul
das
mov
shll
fstpl
call
clc
insb
stos
jno
adc
lcall
and
aaa
arpl
loope
mov
pop
xor
hlt
pop
pop
cmp
roll
cli
adc
mov
cmp
xchg
cmc
lahf
pushf
loope
loop
push
ljmp
cmp
jmp
es
bound
lea
dec
jl
mov
leave
ret
inc
cmp
adc
outsl
and
add
pop
int3
add
push
sbb
fsub
les
aad
data16
lods
mov
and
push
pop
fldl
test
fisubl
nop
bound
sub
xchg
mov
mov
gs
mov
ret
mov
cmpsb
je
movsl
mov
jo
je
in
vorps
arpl
insl
cli
loope
mov
and
xor
cmpsb
xorb
xlat
pop
ja
sbb
mov
push
ds
dec
shl
addb
mov
adc
mov
iret
xchg
push
adc
dec
pop
sbb
cmpb
cmpsl
mov
jg
jnp
out
mov
pop
pop
cld
lahf
fstl
fdivr
lods
mov
clc
sbb
sbb
jno
mov
xor
lea
test
mov
mulb
pop
jecxz
jo
adc
xor
and
pushl
mov
xchg
cmp
loope
pop
add
mov
cli
out
rclb
and
mov
jmp
notb
imul
nop
cmp
clc
push
aam
fs
sub
sti
fsubs
fldl
sti
shrb
or
fwait
cwtl
cwtl
lds
pmovmskb
or
inc
sub
gs
inc
jne,pt
mov
mov
cwtl
mov
daa
arpl
mov
lcall
xchg
lock
ret
rcl
mov
adc
xchg
sbb
mov
sbb
lods
adc
dec
iret
mov
jo
dec
ror
jmp
daa
fptan
cltd
in
lea
push
bound
mov
cmp
xchg
movsb
in
out
jl
adc
cmp
xor
dec
sbb
jp
and
push
comiss
lods
and
enter
lahf
cmpsl
shll
popf
pop
or
jns
or
movsb
out
addr16
sarb
andl
movsl
mov
jecxz
mov
and
imull
in
sbb
pop
inc
adc
inc
mov
leave
pop
mov
and
jle
mov
loope
fidivs
push
xor
out
test
inc
jno
shll
jp
xchg
jp
mov
ret
into
xchg
push
mov
pop
cmpsl
and
stc
iret
jge
cmp
lret
push
inc
mov
mov
ds
jbe
js
jbe
mov
mov
jmp
mov
push
pop
and
pop
xchg
movq
insb
repz
dec
mov
or
insl
fisubrl
lcall
mov
out
stos
aaa
lea
fstl
fs
stos
jl
xor
jo
mov
stos
aaa
int3
pop
loope
cs
mov
push
mov
fwait
cmpsb
sbb
dec
xchg
dec
add
jae
cmp
push
mov
fldln2
dec
fwait
jmp
sbb
mov
fcompl
arpl
sbb
idivl
cmp
icebp
out
mov
xchg
mov
dec
sbb
push
xchg
mov
push
gs
in
push
aam
mov
inc
jmp
push
lods
outsb
mov
sbb
addr16
subb
xchg
inc
rolb
and
cli
jnp
dec
push
js
mov
fwait
divb
movsb
cmpsb
cmp
xor
loopne
into
lds
daa
mov
cli
aas
sub
xchg
daa
repz
jp
stos
lahf
iret
xlat
outsl
gs
pop
push
sbb
mov
enter
jne
dec
push
fwait
adc
cmp
pop
mov
pop
scas
mov
adc
sbb
cmpsb
sti
lcall
leave
lock
rolb
and
push
mov
test
add
idivl
mov
jae
sub
sub
pop
mov
mov
push
xadd
sub
mov
orl
pop
or
xchg
fstl
add
push
pop
cpuid
in
jp
ja
pop
dec
xorl
push
sub
push
out
testb
pusha
xchg
add
pop
inc
repnz
stos
sbb
outsl
pop
jecxz
mov
scas
or
test
pop
lea
adc
out
sti
mov
das
pop
cmp
inc
push
data16
sbb
add
inc
or
mov
out
xor
loopne
cmpsl
notl
sarl
lods
shl
mov
mov
mov
or
in
adc
inc
cwtl
out
out
and
inc
push
adc
pop
cmpsb
loop
aaa
dec
ficomps
out
inc
in
sub
mov
test
pop
and
popa
push
add
fwait
xlat
mov
push
push
mov
aad
cli
push
daa
test
rclb
out
jbe
mov
movsl
add
jae
mov
rcrb
mov
xor
sbb
test
fs
push
add
inc
mov
dec
sub
jo
xchg
lahf
adc
orl
cwtl
xchg
je
lods
push
out
pop
mov
add
jg
rcll
dec
cmc
xchg
aaa
pop
pop
push
mov
rcr
lods
add
or
jmp
mov
cltd
xor
push
xchg
dec
inc
loop
fisubl
mov
stc
lret
mov
rorb
pop
adc
fwait
jmp
cmpsl
push
call
dec
push
out
dec
lods
sbb
cmpsl
movsl
xchg
sahf
mov
adc
dec
jnp
add
test
std
pop
pushf
fidivrl
stos
or
es
mov
mov
test
add
loopne
jns
jno
leave
imul
ds
jecxz
fldl
cmpps
push
imul
or
sub
fs
iret
jmp
mov
pop
and
mov
leave
stos
out
test
jae
mov
rcrb
scas
gs
mov
pop
push
dec
lods
mov
cwtl
mov
ret
inc
pop
sbb
inc
jae
add
sub
stos
cmp
pop
dec
ret
lods
fiadds
and
jo
inc
pop
ja
add
jge
es
sbb
sub
xchg
jge
jbe
inc
aas
lods
push
adc
andl
add
sub
iret
rol
das
popa
jne
sub
inc
inc
mov
mov
mov
leave
sti
jno
sub
jo
scas
fwait
adc
xor
pop
movsb
cmp
aas
sub
jg
mov
xor
cli
and
xor
pop
ds
jge
mov
add
arpl
inc
fcmovbe
or
je
cmovns
addr16
fs
std
sub
mov
inc
add
sbb
stos
addr16
and
sbb
out
sbb
and
adc
dec
xor
scas
outsl
and
ss
mov
data16
mov
or
test
pop
into
outsb
inc
fcoml
xchg
cmp
movsb
inc
aas
jmp
pop
mov
inc
cmp
jecxz
aaa
lret
inc
push
inc
add
cmpsl
nop
repnz
jge
les
cmp
in
out
mov
mov
stc
dec
mov
cmp
jl
jge
in
push
call
xchg
mov
dec
push
bound
sub
mov
mov
xor
lock
aaa
xchg
test
ret
rcl
pusha
mov
or
test
lods
cld
mov
test
mov
dec
pop
popa
lds
or
popf
push
mov
shl
dec
add
push
mov
adc
or
dec
negb
sbb
xor
mov
push
adc
xor
pop
lods
faddp
dec
fdivrl
mov
inc
cs
arpl
loope
repz
mov
rcr
cwtl
mov
mov
fmuls
dec
sbb
pop
mov
xlat
push
psubb
insl
sahf
repz
mov
lds
in
addr16
xchg
mov
dec
jp
push
out
into
or
insl
xor
int3
or
popa
xchg
jle
inc
pop
xor
dec
or
mov
stos
pop
inc
ds
ret
repz
inc
test
iret
push
xor
mov
inc
or
out
pop
stos
inc
push
jbe
aam
push
testl
xchg
pop
lock
jae
pop
repz
pop
rep
push
or
sub
pop
int3
or
and
rolb
add
leave
inc
xor
lahf
or
dec
rorl
movsl
orb
and
cltd
dec
inc
les
or
xchg
int
cld
or
sbb
popf
push
sub
push
lret
aas
js
je
jae
xchg
sbb
mov
imul
push
xchg
popf
xchg
enter
jle
in
or
mov
cld
add
into
cwtl
lea
mov
dec
cmp
clc
cld
sti
sbb
inc
mov
loop
xor
mov
fstl
or
das
into
movsl
push
test
nop
mov
ljmp
shlb
daa
pop
imul
dec
jge
les
sti
notrack
shll
stc
lret
or
and
inc
adc
aaa
lock
xchg
popa
addb
test
lahf
mov
stos
adc
jg
enter
sbb
sahf
loopne
fisttpll
sub
sub
subb
in
cmp
jmp
imul
in
dec
xor
addl
jle
orl
adc
sbb
or
dec
jmp
add
lods
pop
stos
in
push
and
inc
cmpsb
xchg
or
dec
gs
xchg
mov
stos
xchg
dec
lods
xor
int3
fldenv
xorps
cs
cmpsl
out
pop
test
nop
scas
jmp
lock
mov
arpl
aas
std
fiaddl
fisubrs
inc
orl
xchg
and
xor
xchg
sbb
xchg
jge
lds
xor
orl
cmp
shll
lods
orb
adc
sbb
adc
or
fisttpl
icebp
inc
lods
leave
adc
sbb
sbb
rorl
test
dec
loop
sbb
xor
ficoms
jne
mov
and
cwtl
jne
pop
xchg
xlat
push
and
push
xlat
rcrb
dec
shll
lock
shlb
hlt
das
mov
in
rolb
sbb
mov
ja
lds
jbe
jp
adc
in
xchg
shll
hlt
lods
lock
dec
call
sub
mov
push
mov
push
jl
push
movb
pop
jnp
xor
sub
test
imul
or
xor
or
mov
sub
cltd
mov
jl
lock
add
aam
pop
incl
ja
out
movsb
jo
movsb
aaa
cmpsl
call
lock
dec
sbb
or
in
xlat
pop
pop
sti
dec
fucomi
mov
cmpsb
jne
lock
mov
lock
jge
mov
push
nop
inc
loopne
jmp
dec
push
inc
mov
icebp
dec
mov
dec
pop
ja
jle
rcl
cmp
add
loop
and
out
push
call
or
xchg
pop
push
mov
jg
stc
orb
push
mov
repnz
fadds
jmp
stos
ss
push
dec
sbb
mov
pop
or
retw
mov
adc
jne
icebp
inc
cwtl
in
sbb
cld
xchg
adc
sub
cmpsl
gs
and
inc
int
outsl
lock
gs
jnp
sbb
dec
or
sbb
aam
out
fiaddl
out
pushf
or
push
xchg
mov
rcrb
jb
jp
xchg
int
xchg
pop
jge
adc
or
adc
shl
xor
jae
idiv
xchg
loopne
and
pop
inc
sub
push
push
dec
repz
jae
test
or
cld
pushw
add
call
and
mov
repz
cmp
mov
pop
xchg
adc
insl
mov
int3
add
lcall
fstpt
mov
test
inc
fidivrl
xchg
sub
insb
movsl
scas
mov
out
out
xor
push
frstor
adc
pusha
dec
outsb
sbb
sbb
and
xor
sub
mov
xchg
pop
js
sbb
and
xchg
mulb
cmc
into
sub
pop
xchg
sbb
int
pop
adc
push
nop
dec
subb
mov
xchg
pop
jo
fcompl
xor
mov
in
cmpsl
jae
adc
aaa
hlt
and
pop
loop
jno
sub
pushf
lahf
enter
std
mov
enter
andb
es
inc
mov
mov
xchg
inc
int3
ljmp
mov
lahf
mov
add
es
cltd
mov
mull
das
mov
xor
pop
cmpsl
mov
leave
push
and
push
out
mov
movsb
lret
es
push
sarl
js
rol
clc
xor
xchg
dec
jae
add
or
inc
fiaddl
pop
aas
repnz
ret
cli
stos
xchg
jne
xor
mov
cwtl
pushf
sub
insl
sub
cmpsl
les
fstp
movsl
and
lea
pop
je
cmp
shr
mov
jns
sbb
add
jle
inc
sbb
andb
push
mov
movsb
sbb
add
push
cmp
rol
inc
add
jg
pop
arpl
add
arpl
push
fsubrs
mov
sbb
dec
movsb
or
movsb
ds
mov
xlat
xor
fisubl
xchg
sub
cli
mov
lret
imul
xor
jo
xchg
xlat
fs
loope
movsl
xor
add
aaa
sti
popf
inc
dec
jne
xchg
lcall
and
push
push
pop
mov
jmp
test
and
jno,pt
cmp
hlt
lea
test
fildl
jns
iret
hlt
pop
sbb
loope
sar
cld
dec
xor
scas
repz
xor
icebp
cli
sbb
add
pop
xchg
xchg
push
clc
xchg
pop
cmpsl
mov
xchg
jp
scas
xchg
ret
sbb
pop
add
testb
in
jge
mov
mov
aaa
lock
imul
push
call
testl
push
xchg
inc
loop
sarb
fdivr
jno
jb
insl
cmp
pop
sbb
jl
mov
vorps
sbb
stc
sub
js
xchg
shlb
into
cli
mov
mov
gs
push
mov
mov
xchg
pop
arpl
leave
ret
int3
jo
lret
jge
cmpsl
sbb
adc
and
cmp
mov
loop
shl
and
push
xor
imul
int3
ja
cltd
xlat
mov
les
lods
inc
ss
mov
mov
or
push
aas
sar
cmpsl
pop
inc
in
fs
cmp
stos
repz
xchg
jle
sub
hlt
outsl
pushf
cld
and
mov
in
and
cmp
ret
fidivl
gs
pop
pop
sbb
add
test
lahf
popf
fwait
std
data16
popf
ss
aaa
inc
lods
mov
jl
mov
sahf
or
imul
sarb
aad
ja
adcb
cwtl
rdmsr
mov
cmp
sbb
stos
mov
pop
or
inc
sbb
hlt
loop
jno
movsl
push
movsl
ret
jae
cmpsl
xchg
clc
jo
rcpps
xor
or
pop
cld
mov
popf
out
sub
or
roll
enter
xchg
popf
adc
push
call
cmp
test
gs
and
inc
adc
add
xor
sbb
cld
pop
inc
outsb
or
dec
xchg
sbb
scas
enter
movsb
jne
in
xlat
addr16
push
subb
aaa
inc
iret
fcomip
sahf
fdivrl
pop
std
xor
push
push
ds
rcrb
test
int3
mov
xchg
cmpb
mov
ja
push
pushf
xor
shll
dec
mov
icebp
test
sbb
mov
pop
mov
jne
or
bound
data16
cld
dec
or
lds
fimuls
push
jo
iret
fistl
xor
icebp
adc
pop
jnp
mov
aaa
hlt
dec
mov
cmpsb
sbb
scas
jae
inc
aas
dec
mov
mov
cltd
push
push
lds
adc
sahf
not
gs
fisubrl
inc
frstor
xlat
and
out
adc
dec
sub
xchg
mov
mov
test
mov
stos
dec
sbb
cld
stos
sub
jbe
sti
jl
loopne
ret
aam
je
dec
mov
subb
push
data16
pop
add
je
cli
xor
sub
iret
cmc
rorb
pushf
fs
imul
cltd
aam
xchg
movsb
dec
xor
nop
aas
mov
mov
inc
xchg
and
sub
enter
xchg
pop
fimull
inc
add
icebp
sti
dec
cltd
add
imul
sbb
and
movsl
push
stos
jmp
scas
sub
jmp
pop
lret
outsb
add
inc
jnp
or
push
test
push
stc
lret
mov
add
out
push
push
push
mov
xchg
push
repz
out
ret
xor
out
xchg
outsl
lret
inc
adc
out
arpl
ret
sub
jne
xchg
push
test
ja
push
mov
fs
xlat
xchg
xchg
push
and
pop
pop
in
outsb
or
or
clc
cwtl
mov
out
popa
adc
arpl
pusha
leave
loope
xchg
mov
mov
pop
ljmp
jp
sub
mov
xor
mov
lahf
xchg
cmp
pushf
adc
mov
cs
repz
sub
xchg
adc
sbb
mov
mov
mov
adc
push
xchg
sbb
and
or
jmp
inc
mov
push
mov
movsb
scas
sbb
or
lock
loope
pop
into
in
ljmp
insb
gs
lds
jo
imul
ret
sbb
ds
dec
or
iret
insb
cli
xchg
adc
loop
inc
cmpsl
scas
push
leave
pop
sahf
and
test
lret
rclb
sti
sbb
sahf
mov
in
rorb
inc
shrb
mov
adc
out
dec
js
pop
cltd
cmp
fs
pop
lea
test
loope
daa
pusha
xchg
or
or
mov
jb
inc
fisubrs
ds
and
inc
daa
adc
mov
icebp
xor
pop
xchg
repnz
mov
lods
pop
mov
cli
sub
adc
gs
fmull
mov
jl
loopne
ds
xor
fstl
mov
mov
inc
ds
xchg
push
push
clc
push
add
cmp
cwtl
fmull
scas
fiaddl
sbb
test
cwtl
pusha
sbb
pop
mov
xchg
xor
js
out
adc
outsb
xchg
mov
hlt
pop
mov
xchg
xlat
mov
push
dec
inc
outsl
mov
std
pop
jg
in
jecxz
popa
and
cmp
cld
mov
mov
mov
sbb
pop
xor
aaa
pop
mov
add
call
or
push
scas
and
dec
sarl
out
popa
lods
mov
daa
sahf
add
sti
push
or
pop
fcompl
add
lret
mov
cmp
xchg
push
pop
sub
rolb
xchg
cmc
xor
inc
mov
mov
sbb
loopne
mov
sbbl
jbe
pop
int
jl
sbb
pop
fldl
call
pop
in
lods
mov
sbb
test
sub
test
inc
outsb
cwtl
outsl
inc
insb
je
daa
xchg
adc
fwait
push
mov
fbld
and
lock
push
mov
or
gs
sub
add
xchg
popf
ja
sub
pusha
pushf
and
mov
xor
adc
je
fwait
xor
cmp
mov
inc
xor
ja
mov
lret
mov
mov
cmpsb
ret
lret
lahf
ss
rclb
cmp
cmp
pop
xchg
enter
xchg
mov
xlat
in
xchg
in
add
inc
lds
dec
std
mov
pop
and
in
ds
mov
test
les
out
outsb
mov
inc
xorb
das
loope
daa
mov
aas
movsb
inc
je
into
sub
sti
inc
loop
pop
jns
lret
xchg
inc
cmp
sbb
xchg
xlat
sbb
jmp
xor
shrb
adc
pop
mov
pop
arpl
ljmp
inc
lds
rcrl
pop
xchg
xchg
imul
cmpsb
and
sbb
dec
fcomps
jg
mov
xchg
or
push
xchg
cwtl
sar
fdiv
jecxz
jns
fs
iret
movsb
cmpb
and
jmp
leave
inc
sub
push
sbb
inc
imul
cmc
mov
stos
js
adc
mov
push
sub
jb
push
xchg
fldl
leave
cmp
sub
mov
sbb
call
cmp
repz
addr16
test
mov
mov
loop
movsb
out
iret
faddp
dec
mov
sub
jae
rolb
xchg
pop
jbe
ret
jno
fmull
sti
push
rolb
or
add
or
es
daa
cmpsl
sub
test
jnp
lcall
jmp
cmpsb
mov
in
aas
lock
ja
jb
hlt
pop
fisubl
fbld
jno
ss
dec
inc
jge
mov
je
lret
jbe
push
mov
cmp
inc
rorl
test
fwait
jl
push
jbe
aad
ljmp
xchg
pop
and
mov
pop
loop
dec
cmc
lret
xor
sbb
push
aas
mov
scas
jns
and
inc
add
repz
push
pop
sub
adc
jnp
ljmp
loop
add
and
inc
push
mov
andb
popa
and
or
lret
mov
addl
mov
mov
mov
jne
int
cwtl
negl
xor
pushf
jne
mov
lahf
cld
sub
enter
inc
das
scas
add
add
fimull
xor
pusha
mov
test
loope
mov
sub
mov
sub
push
insl
xchg
loope
lahf
aam
jb
pop
sbb
sbb
ret
das
fs
fmuls
mov
ja
call
mov
sub
popf
aas
mov
pop
add
or
mov
or
jns
popa
mov
xor
xor
sbb
xchg
adc
push
enter
sub
and
shll
jae
or
xlat
and
dec
xchg
mov
fcompl
call
add
jmp
sub
cwtl
cmpsl
leave
dec
push
pop
mov
fistps
out
out
pop
je
scas
push
pop
fiadds
xor
lods
pusha
enter
and
fidivs
mov
in
out
into
in
mov
dec
sub
xor
xchg
sub
and
fnsave
sbb
lret
call
lea
aas
popf
repz
test
jns
jmp
push
pop
push
xor
or
testl
or
fs
sbb
int3
mov
xchg
cltd
sub
std
ds
shl
lods
fst
sub
mov
stos
gs
sbb
stos
leave
cmp
jecxz
mov
bound
push
ljmp
sbb
fadds
mov
lods
sub
mov
enter
mov
push
scas
iret
shr
mov
mov
test
sub
sahf
xor
negl
and
jmp
mov
add
xchg
js
icebp
arpl
and
es
push
sub
lods
inc
insl
or
cmpsl
push
push
insl
popa
inc
loope
dec
and
mov
dec
insb
ljmp
lahf
or
lcall
adc
icebp
out
in
push
push
and
xchg
jbe
outsl
in
xchg
pop
and
or
xor
mov
lahf
or
inc
out
mov
sbb
push
in
xor
pop
int3
adc
pop
push
ret
xchg
fstpt
cmp
movsl
cmp
cmp
outsl
sub
test
push
and
lret
cmp
insl
sub
popa
lods
mov
ret
insl
call
ret
in
mov
jle
push
dec
sbb
mov
xchg
inc
aad
xchg
test
adc
lods
cmpsb
test
fnstsw
pop
mov
pushf
fnstsw
iret
mov
out
stc
dec
fnstenv
jno
popa
adc
lods
mov
pop
sbb
cmpsb
jmp
mov
in
mov
pushf
pop
popf
jb
dec
hlt
scas
movsb
dec
xchg
test
int
iret
jecxz
arpl
jecxz
push
xchg
jge
cmp
aas
fcompl
lds
call
sbb
cmc
mov
push
fstl
mov
or
lods
cmp
mov
xchg
sbb
cmpsl
imul
inc
std
int
jle
dec
pop
test
push
test
xchg
xchg
xchg
shll
xor
into
inc
mov
cmp
jmp
mov
inc
daa
add
xor
jl
mov
roll
inc
push
ljmp
mov
push
pop
jl
movsb
notb
jbe
cwtl
iret
xor
add
cs
test
lds
adc
inc
testl
and
testl
imul
fists
mov
leave
mov
int
dec
sahf
dec
out
outsl
cmp
adc
inc
push
dec
inc
add
mov
repz
hlt
inc
js
push
pushf
jnp
imul
sbb
and
xor
out
addr16
out
insl
adc
data16
adc
daa
ljmp
or
mov
add
adc
leave
rolb
adc
mov
leave
cmc
cmpb
sar
lahf
sti
push
cmp
les
dec
ret
adcb
xchg
mov
notl
mov
jne
lods
rcr
sti
jno
sub
sub
xor
jmp
jnp
mov
fiaddl
mov
scas
mov
jns
rolb
dec
push
clc
pop
push
and
ljmp
push
scas
mov
sbb
std
cltd
ljmp
mov
inc
mov
mov
insb
cwtl
lods
and
pop
jg
adc
dec
scas
fcomps
inc
bound
cmp
aam
pop
dec
dec
adc
out
jge
loop
fldlg2
or
lahf
pop
popa
rolb
and
jl
cmc
scas
std
xchg
sahf
lahf
pop
repnz
push
ficoms
rcrl
out
inc
int
add
arpl
or
icebp
sbb
ds
cmp
push
xor
imul
pop
int3
mov
test
leave
lret
xchg
stc
je
insb
decb
fwait
mov
in
enter
sub
andb
push
sti
pushf
cvtps2pi
leave
iret
pop
out
and
lds
push
lret
dec
dec
outsl
notb
dec
sbb
inc
scas
scas
push
jnp
das
scas
and
jne
aas
hlt
push
nop
shl
push
push
les
ds
mov
inc
jo
inc
repnz
je
jmp
inc
push
jns
cmpsb
stc
ret
jbe
and
xchg
rorl
mov
mov
xchg
add
int
inc
movsl
iret
xchg
sub
jle
jecxz
je
mov
clc
stos
cwtl
int
pushf
inc
adc
mov
ljmp
pop
adc
dec
dec
dec
ja
vmwrite
cli
arpl
addr16
xor
mov
rep
pop
bound
arpl
shrl
sub
or
sbb
clc
sbb
clc
mov
dec
leave
cli
sti
test
xchg
xchg
jns
out
shrb
leave
aad
push
fwait
mov
ret
jo
test
xor
and
dec
or
pop
xchg
or
out
jp
push
mov
jmp
into
adc
dec
fmuls
lret
cmpsb
dec
jae
push
sbb
jae
inc
imul
pushf
push
add
insb
mov
dec
cld
femms
push
enter
ds
ljmpw
add
sub
fucomip
cmpsl
jp
pop
in
mov
imul
loope
cmp
jns
xchg
pop
aam
cwtl
bound
dec
mov
sbb
cmp
ljmp
lcall
mov
or
test
mov
inc
mov
dec
fnsave
push
loopne
popa
mov
pop
arpl
xor
cmp
popa
and
gs
insb
notb
stos
push
enter
into
idivl
push
ss
dec
jle
sbb
adc
mov
cwtl
stos
add
insl
push
add
push
sbb
jecxz
test
aaa
enter
pop
and
or
in
movsl
gs
pop
xlat
jno
cmc
and
inc
shrb
pop
mov
mov
ss
test
mov
mov
cltd
mov
or
push
ret
filds
mov
ja
test
sbb
rcrb
push
loope
jae
gs
dec
xorl
insb
push
fs
jle
clc
inc
popf
cwtl
cmp
jg
cmpsl
pusha
push
dec
cltd
xchg
test
adc
int3
jbe
pop
jg
or
inc
out
xor
mov
mov
mov
rclb
push
ds
fxch
inc
adc
fs
push
push
mov
decl
ljmp
mov
sbb
sbb
imul
test
call
out
or
inc
orl
jbe
xor
std
push
ss
push
dec
sbb
filds
jmp
punpckhdq
pusha
jbe
xchg
sbb
das
and
pop
mov
xchg
call
gs
sbbl
popa
repz
mov
in
cli
and
inc
cs
out
add
push
outsl
movsb
adc
push
and
and
pop
mov
jp
loopne
into
jb
jo
lret
dec
addb
loope
sbb
out
or
push
pop
jb
xchg
dec
sub
xchg
popf
lods
mov
mov
rclb
xchg
jl
pop
bound
je
and
mov
addl
sbb
sub
ret
cmp
xchg
cwtl
pushf
out
push
lds
outsb
mov
inc
popf
ds
in
fistps
mov
jecxz
sub
out
mov
enter
aad
icebp
xchg
mov
adc
in
pop
pusha
loop
daa
jge
cltd
mov
mov
sbb
out
push
sahf
push
loop
les
lret
push
sub
pop
cld
cli
lcall
jbe
inc
in
popa
data16
loope
mov
dec
imul
sub
mov
adc
xor
repnz
out
mov
lock
mov
pop
sub
sub
popa
lods
cmc
sbb
xor
mov
mov
out
in
or
lcall
test
xor
insb
sub
jp
cmp
cmc
jno
lea
mov
push
and
pop
int
je
fimuls
faddl
lahf
sbb
sbb
ret
xchg
cwtl
push
adc
icebp
test
hlt
dec
clc
sbb
loop
xor
sbb
inc
pop
out
lds
in
xor
mul
mov
jbe
test
cmp
popa
mov
push
push
jb
dec
and
iret
cmp
mov
mov
sub
adc
jl
fdiv
loope
pop
push
shll
out
cmpb
pop
or
gs
sub
push
xor
mov
lret
mov
les
mov
je
push
fs
fcoms
xor
push
dec
das
pop
fstps
add
adc
ja
jo
inc
push
jno
jb
mov
sti
mov
or
xor
mov
pop
orl
jp
and
push
cmpsb
add
pop
bound
popa
stos
xchg
test
sahf
out
testl
imul
xor
sbb
inc
jo
aaa
xchg
jecxz
rclb
mov
fs
lods
pop
hlt
ret
notb
or
pop
into
and
mov
movsl
inc
jge
xor
sub
xchg
les
inc
mov
inc
xor
jb
or
mov
test
inc
dec
movsb
push
dec
mov
jno
lcall
and
adc
rorl
jge
sub
xor
adc
push
sub
jmp
out
xchg
sub
ss
out
ljmp
sub
icebp
sub
inc
scas
inc
ficoms
mov
std
jbe
repnz
jecxz
or
jns
into
sub
inc
mov
lea
stos
gs
xchg
popf
push
rcrb
dec
xchg
or
jb
mov
in
shr
repz
jne
test
lret
ss
push
mov
cmp
jb
lea
push
icebp
xor
test
or
roll
popf
mov
dec
scas
leave
int3
dec
orl
lcall
imul
pop
mov
fwait
jo
dec
daa
sbb
inc
ret
cmp
lock
add
icebp
jmp
test
les
dec
inc
mov
out
add
mov
ljmpw
mov
sub
adc
xchg
pop
bound
push
ljmp
lods
dec
cli
push
lcall
mov
movsb
sahf
xchg
fmull
pop
adc
pop
or
call
jecxz
stos
add
mov
jne
sub
cmpsb
lock
aad
inc
push
cwtl
gs
sahf
mov
hlt
xlat
jne
jp
clc
dec
rcll
dec
addb
jnp
pushf
mov
insb
mov
in
ljmp
xor
cmpxchg
sbb
lret
inc
orb
pushf
daa
jbe
out
scas
pop
cmp
enter
jl
flds
jae
mov
mov
adc
insb
push
paddusb
jae
mov
and
push
imul
add
xor
test
adc
das
or
cmp
dec
arpl
mov
pop
call
and
sub
add
daa
incb
imul
sub
shrl
xchg
adc
sub
outsl
adc
xchg
adc
xor
sahf
jns
leave
int
xlat
or
bnd
xor
mov
push
rcrb
push
jl
ret
xchg
loopne
jo
repz
mov
adcb
out
adc
pop
scas
pop
cmp
and
dec
jae,pn
add
cmp
inc
xor
in
mov
ds
sbb
push
gs
mov
imul
mov
dec
sub
in
sub
lea
push
xor
mov
sar
lock
mov
out
cmp
les
push
fimull
jo
and
es
or
inc
mov
pop
out
sbb
mov
pop
jmp
call
cmpb
fcomip
pushf
ljmp
xor
cmpsb
jnp
jns
cmp
add
jge
mov
push
into
imul
dec
xchg
out
pusha
hlt
cwtl
or
pop
js
pop
cmp
addb
in
mov
icebp
mov
movsb
sbb
adcl
rolb
pop
mov
aaa
or
jno
dec
cmp
pop
jnp
dec
icebp
pop
fadd
nop
mov
ror
fisttpl
aas
pop
nop
or
sbb
jo
add
dec
and
xor
icebp
push
push
and
sbb
mov
fwait
rcl
jo
mov
mov
add
fs
aas
jle
xorl
mov
cmp
pop
int
cmp
sbb
pop
and
popf
fstps
jo
xchg
jge
scas
or
inc
aas
xor
mov
mov
push
int3
xorb
adc
repnz
add
mov
ret
fimuls
lahf
lret
leave
cmp
and
mov
inc
jnp
xchg
ds
inc
or
pop
rcll
xor
mov
add
pushf
test
repnz
dec
lock
or
mov
and
int
sub
jmp
sahf
je
pop
dec
add
out
pop
fistps
repnz
push
clc
jmp
pop
outsl
mov
mov
jge
inc
int3
cmp
in
jbe
push
and
mov
arpl
cmp
ss
mov
mov
sti
pop
or
xchg
push
inc
pop
sti
dec
test
repz
xor
pushf
xor
sbb
cmc
jmp
sbb
mov
lcall
and
jl
fsubrp
lods
jnp
sar
iret
push
lret
mov
or
xlat
jp
xor
push
sahf
push
movsl
inc
xor
jbe
push
push
inc
stc
cmp
call
fwait
imul
divl
cmp
jle
ja
fdivrl
mov
jecxz
fcoml
xchg
pop
push
and
mov
into
mov
mov
outsb
pop
inc
inc
scas
dec
push
adcb
mov
ss
movsl
loop
sbb
clc
cmp
pop
and
cwtl
push
sub
sub
mov
pushf
cltd
and
and
in
in
iret
pop
scas
jl
lock
repnz
add
mov
dec
popf
ret
jno
hlt
mov
pop
out
dec
in
out
fistps
mov
push
sub
sti
xchg
push
fisubrs
shr
mov
sbb
cmp
aaa
lds
mov
jne
insl
repz
outsb
sub
xor
mov
rdtsc
cmp
sbb
subl
lret
mov
hlt
in
push
sub
pop
jo
lret
mov
mov
shl
and
data16
cmp
ficoms
jb
dec
and
scas
in
loopne
pop
pop
push
xlat
cltd
cmp
pop
fldt
test
mov
xchg
and
xchg
into
adc
adc
mov
lds
inc
clc
or
out
jb
popa
sub
cmp
adc
movsb
scas
push
xchg
mov
add
add
xor
or
pop
xchg
push
push
pop
add
lock
test
das
daa
shlb
push
out
sub
inc
adc
cmpsb
inc
in
sub
dec
rorb
pop
sub
sub
push
xchg
push
xor
pop
in
xor
push
jbe
arpl
rcrl
or
insl
jecxz
sub
mov
rol
jl
call
mov
loopne
jle
pop
xor
fldenv
add
popf
bound
pop
mov
popf
inc
push
cld
mov
jae
divb
outsb
in
ja
mov
insb
lret
add
xlat
addr16
in
push
repnz
adc
sub
mov
add
mov
enter
jp
jl,pn
ret
inc
test
cltd
jbe
lods
out
pop
out
add
sub
clc
push
pushf
pop
mov
pop
lret
jne
rcl
and
sub
or
push
push
inc
in
aam
xor
add
scas
in
jmp
pusha
mov
cmp
xchg
in
sbb
in
in
sbb
dec
lcall
and
rcll
fadd
loope
into
into
mov
and
shll
es
and
push
adc
popf
cmp
lods
jb
hlt
push
daa
in
std
sub
jne
pop
pop
stc
add
int3
or
outsl
or
push
sub
and
outsb
jae
icebp
ds
pop
imul
psubusb
lcall
test
jmp
fs
push
lea
lea
leave
push
rclb
sub
lret
pop
ss
test
popa
jbe
stos
inc
lcall
sbb
and
lahf
call
adc
hlt
mov
adc
loop
dec
imul
push
jle
or
sbb
pop
fistpl
push
pop
xlat
pop
xor
ds
mov
leave
inc
stos
decl
lock
dec
in
inc
dec
iret
jmp
sub
push
jno
push
sub
mov
pop
pop
xor
leave
sub
jae
xchg
pop
clc
in
mov
enter
xor
mov
rclb
mov
dec
call
sahf
mov
and
stc
pop
dec
inc
fdivrs
movsb
sbb
push
xchg
dec
jg
scas
out
out
mov
lods
fstpt
stos
out
mov
imul
push
js
push
mov
mov
jne
sbb
das
daa
jnp
popa
jmp
out
and
xor
or
mov
mov
mov
sub
rorb
dec
stc
mov
pushf
mov
inc
fldt
cltd
adc
popf
adc
lock
mov
mov
shrl
fs
sarl
push
in
sbb
xchg
jecxz
dec
rcl
pop
dec
cmpsl
scas
gs
mov
pop
lahf
pop
cmp
adc
lret
push
sbb
das
jae
mov
and
fdivrs
dec
out
jmp
dec
popa
jns
xchg
xchg
aaa
mov
aam
outsl
adc
scas
and
icebp
or
es
xor
ljmp
cmp
std
push
dec
es
iret
leave
leave
lods
pop
mov
shlb
shll
cmp
rcl
or
adc
mov
cld
xchg
call
xor
imul
in
add
push
in
imulb
inc
add
add
data16
ljmp
pop
cwtl
inc
test
push
stc
cmp
in
pop
inc
adc
jo
ss
loopne
cmpsl
cmc
jno
and
pop
int
jg
ss
sahf
ja
jmp
push
mov
in
jge
xor
ficoml
adc
push
push
sbb
dec
xchg
and
and
xor
sbb
xor
push
jp
mov
inc
mov
jns
repnz
pop
xor
jge
cs
xchg
sti
into
mov
and
movsb
in
xchg
shl
add
pop
sahf
popf
dec
lret
mov
mov
arpl
testb
and
iret
add
adc
cmpsl
mov
repz
out
cmpsl
cmp
cwtl
adc
adc
xor
cmp
sbb
and
fsubs
in
push
fbld
mov
lods
pop
xlat
vmulpd
je
push
add
and
cs
and
xchg
jno
jo
jg
fdivrs
mov
sti
call
mov
sbb
pop
aas
xor
jae
ljmp
imul
sub
adc
pop
ds
test
pushf
and
cmp
cmp
and
lret
and
ret
cmp
adc
lea
stos
repnz
cmpsl
sbb
lds
ror
sbb
sbb
xor
xchg
mov
jbe
outsb
and
mov
and
ret
je
iret
inc
addr16
xchg
scas
ret
dec
xchg
test
xchg
sub
sub
pop
dec
mov
mov
icebp
repz
jl
test
mov
lret
call
outsl
sbb
stos
jno
movsb
arpl
in
ret
jle
and
test
lea
inc
pop
out
add
fmull
leave
test
xchg
cs
xor
arpl
or
movsl
daa
fs
mov
or
stos
fcomip
scas
int
xchg
pushf
daa
sarl
aad
xor
inc
shlb
dec
roll
dec
xlat
les
insb
push
xchg
ds
push
mov
ljmp
sub
gs
pop
sub
jl
mov
push
xchg
mov
mov
lahf
testb
xchg
push
mov
cmpsl
gs
pop
fdivrl
inc
adc
pop
mov
rorl
popl
xchg
rcl
jp
sub
xlat
stos
out
sub
in
mov
pop
xor
mov
out
es
pop
and
in
mov
movsl
push
rcr
ljmp
inc
rcl
xchg
xchg
jecxz
int3
cli
out
test
dec
ret
xchg
subl
sub
jno
es
imul
data16
in
stos
loop
inc
add
dec
adc
mov
add
subl
sbb
jo
push
je
pop
sub
and
jb
push
mov
or
jns
sub
cwtl
jge
int
add
xchg
shll
mov
mov
pop
mov
scas
pop
jae
ljmp
orb
mov
cmp
into
jno
add
add
push
shr
es
mov
fsubr
dec
or
mov
inc
push
push
imul
ljmp
sub
lcall
adc
inc
dec
pop
or
popf
mov
push
scas
sub
and
cmpsl
movb
sti
jle
rorb
jns
adc
mov
mov
push
es
mov
sbb
nop
and
cmpsb
pop
gs
mov
js
xor
call
mov
push
andb
sub
int
int
ss
out
sub
fcmovnb
adc
jbe
jb
popf
test
jbe
mov
stos
push
adc
aad
mov
cld
mov
jae
fcoml
int
icebp
fisubl
out
jns
das
mov
xor
mov
stos
mov
je
stos
push
sub
popf
pop
fwait
adcb
mov
fmuls
lcall
es
dec
nop
jns
lock
xchg
xchg
cmp
out
pop
push
call
in
out
push
lcall
je
sub
inc
jge
jecxz
inc
fs
adc
mov
add
sbb
sbb
dec
sbb
mov
cltd
lcall
sub
lcall
iret
out
loopne
aas
jno
cmp
xchg
scas
cltd
push
push
or
mov
mov
leave
mov
mov
xchg
clc
mov
mov
popa
inc
sti
outsl
xchg
jnp
out
push
jl
jg
leave
push
outsb
adc
fwait
dec
xor
je
aaa
loop
push
or
add
jp
aad
in
mov
bound
les
jne
jb
dec
leave
mov
jg
cmp
pop
sahf
scas
sbbb
cmp
inc
jns
push
hlt
mov
jle
ret
es
adc
data16
jmp
sbb
rorl
sbb
mov
nop
xchg
int3
mulb
and
jo
sbb
outsl
push
lock
mov
mov
cmp
jnp
jp
dec
fnstenv
outsl
insb
mov
or
outsb
cmpsb
loope
dec
sbb
mov
sahf
xor
mov
in
and
iret
ds
mov
aam
xchg
mov
outsl
cmc
sub
js
js
enter
xor
out
inc
push
cmc
cltd
lea
mov
cmp
push
push
ret
testb
icebp
movsl
sub
jo
mov
jp
cltd
mov
insb
lock
lret
jp
xor
sbb
inc
xor
fwait
add
popf
xor
fldl
mov
xor
xor
push
out
in
push
jge
aas
push
ja
mov
jns
aad
mov
and
test
sub
and
imul
sub
adc
test
nop
mov
inc
in
cs
hlt
scas
xor
adc
js
lods
jmp
mov
push
stc
out
or
repz
cs
popf
fidivl
lock
xor
cmpsb
dec
xchg
jnp
xchg
mov
test
xor
js
sub
mov
shr
fcomip
lahf
jg
into
xor
and
imul
push
sahf
testl
loopne
call
xchg
fdivrs
stc
sar
mov
mov
inc
dec
mov
aas
out
pop
cltd
sub
aam
int3
cmp
outsb
mov
mov
aaa
rcrb
movsb
dec
lret
sub
mov
jo
shlb
mov
in
xor
cmpsb
push
jg
xor
dec
xor
mov
mov
jnp
or
cmp
push
pop
mov
insl
pop
dec
sub
pop
xor
mov
adc
das
outsb
loop
mov
or
sbb
movsl
jnp
add
jmp
or
inc
rolb
and
fiadds
ret
sub
sub
das
test
es
sahf
movsl
je
lods
push
xchg
fdivr
subb
idivl
mov
jle
push
in
push
scas
ja
mov
repnz
sub
adc
fdiv
testl
fsubrs
sbb
into
push
shll
push
xlat
into
arpl
ficompl
adc
outsb
pop
inc
rolb
mov
xchg
fs
adc
adc
sbb
js
jns
ljmp
cmp
mov
sbb
aad
xchg
pop
sarb
shlb
rolb
push
or
testl
cmp
inc
mov
out
pop
inc
sub
pop
jmp
cmp
hlt
cmpsb
lea
ljmp
pop
fsubrp
and
ret
xor
push
stos
psubusb
cmp
ret
sbb
testb
mov
popf
fildl
movsb
pop
inc
sub
or
jmp
jmp
adc
jae
popa
mov
inc
fadds
xchg
jno
xor
xchg
mov
xchg
sub
or
lds
adc
loope
cltd
ljmp
pop
imul
add
sub
sub
ret
pop
jno
pop
cs
std
xchg
sbb
sbb
mov
dec
imul
mov
lds
je
mov
sahf
in
mov
mov
test
cmp
pop
and
sti
jb
jl
inc
test
push
sti
push
js
push
push
push
pop
std
push
arpl
ds
pop
push
push
lds
xor
imul
leave
adc
sub
sbb
sbb
arpl
outsb
into
sub
push
jmp
cmp
arpl
cmpsb
mov
xchg
add
and
mov
scas
hlt
push
in
ss
jle
cmpsb
test
inc
adc
shll
mov
mov
cltd
pop
cltd
out
and
arpl
cmp
push
fiadds
inc
mov
insb
repz
push
sub
mov
sti
jmp
push
adc
pop
or
inc
xor
pop
enter
xor
add
sbb
and
negl
pusha
pop
xor
orb
adc
cmpsl
test
lcall
jle
sub
xchg
or
sbb
push
inc
ljmp
cmp
mov
jns
jno
ja
repz
incb
jl
and
adc
mov
arpl
ljmp
or
mov
call
fcomip
iret
xchg
inc
pop
xchg
jmp
or
in
pusha
in
js
inc
dec
mov
or
test
popf
cmp
imull
pop
inc
or
stos
sbb
nop
lret
jnp
cmp
jae
lret
insb
push
insb
cmpsl
aaa
xchg
aad
aaa
inc
out
stc
cmp
mov
add
daa
sbb
xor
mov
test
sahf
xlat
jb
fnsave
adc
push
xchg
out
mulb
mov
cli
cmp
inc
scas
fucomp
adc
pop
mov
jmp
adc
push
or
xchg
std
daa
je
sti
movsl
and
fldenv
arpl
ljmp
push
jno
xchg
les
mov
mov
test
fldl
adc
add
push
frstor
into
dec
fisubs
std
mov
sub
test
mov
popf
imul
xchg
pusha
fs
insb
sbb
cli
arpl
into
pop
xchg
dec
cmpb
lods
pop
daa
outsb
js
imul
cmpsl
sub
cmpl
ret
fistps
pop
test
addb
mov
roll
inc
mov
in
clc
in
roll
pop
bound
inc
mov
sub
mov
sub
scas
ds
pop
out
movb
dec
data16
mov
je
bound
dec
mov
push
xor
xchg
inc
fnsave
jns
push
xchg
loope
inc
loope
fcomps
push
mov
jno
sbbl
xor
mov
sbb
mov
frstor
test
fsubl
mov
add
inc
movsb
loop
or
pushf
rcr
inc
mov
dec
jb
or
fdiv
inc
dec
jbe
xchg
and
mov
scas
mov
insb
push
jecxz
pop
pop
sbb
iret
jb
insl
lcall
int3
mov
xchg
jbe
xorl
mov
fsts
mov
es
dec
shl
xchg
ss
mov
pmaxsw
test
repz
popa
repz
inc
mov
cmp
pushf
enter
and
out
xchg
aaa
or
xchg
into
or
pop
and
pop
das
stos
iret
dec
in
add
xor
aas
movsl
mov
pop
call
popa
pushf
mov
shlb
fcmovb
ret
out
shl
movsb
xchg
pop
pop
lock
or
fstps
insb
dec
mov
frstor
adcb
popa
lcall
pop
cld
sbb
and
data16
in
outsl
pop
loope
add
je
stc
push
dec
cltd
bound
stc
leave
mov
loop
hlt
xchg
inc
cmp
pop
daa
xor
das
mov
xor
nop
mov
test
lds
imul
mov
shr
xor
cmp
adc
loope
inc
inc
imul
pop
xor
dec
jge
jecxz
ljmp
js
push
cmp
scas
outsb
xchg
and
sti
xor
loop
jae
ud0
cli
ds
adc
add
cmp
lods
push
imul
sub
mov
dec
arpl
jbe
mov
fadd
add
in
lret
cmp
pop
xor
add
mov
rol
xchg
ja
mov
stos
in
les
andl
xor
or
mov
movsl
icebp
int
sub
dec
sbb
cmpsb
jg
lods
inc
ds
push
test
loope
mov
imul
push
in
xchg
insb
inc
insl
imul
cmp
jl
mov
les
shr
sub
adc
jl
scas
mov
and
das
mov
xchg
mov
decl
mov
mov
pop
cmp
mov
mov
enter
or
dec
cmpsl
movsl
jne
xchg
popa
sbb
inc
xchg
add
mov
lods
mov
xchg
jmp
repz
add
cmp
shrl
inc
jge
leave
outsl
push
push
jge
fldenv
test
adc
movsb
scas
clc
loop
xchg
icebp
jg
lea
mov
shlb
aaa
rcrb
push
push
aam
cmpb
out
cli
jle
aam
dec
dec
cwtl
fcoms
call
into
inc
cltd
push
dec
dec
add
inc
stos
sbb
adc
add
and
sbb
popa
and
mov
in
fmull
mov
mov
lods
dec
xorb
mov
dec
mov
xchg
jecxz
aam
mov
lret
add
roll
pop
mov
xchg
cltd
mov
push
sti
outsb
inc
and
out
pop
pushf
mov
dec
inc
mov
andl
int3
mov
dec
adcl
test
cmp
adcl
lret
es
out
push
out
mov
push
aad
and
xor
xchg
xor
mov
stos
sti
pop
repnz
mov
int
sbb
push
inc
or
pushf
sub
cmp
gs
outsb
push
add
in
lcall
sbb
and
jno
push
lahf
xchg
jbe
adc
pop
add
jne
cmp
inc
mov
cli
jge
pop
jmp
add
jae
jo
test
jb
roll
sub
jbe
or
outsb
fidivrl
add
cmp
push
js
shll
and
sbb
xchg
in
push
sub
mov
add
pop
lods
ljmp
repnz
adc
leave
cld
mov
dec
testb
pusha
lret
jg
in
sub
cmc
cmp
loopne
jb
cmp
lods
pop
fildll
mov
push
xor
xor
or
int
iret
pop
pushf
pushf
fildl
lods
je
lods
stos
ljmp
adc
int3
insb
dec
xchg
xor
pop
inc
pusha
mov
jge
fchs
cmp
jno
adc
lret
ret
dec
sarl
pop
or
scas
add
dec
imul
pushf
push
dec
mov
cmp
sub
lods
stc
xchg
lock
popa
mov
iret
je
mov
add
sub
mov
div
sbb
mov
in
sub
cld
js
cmpl
sbb
push
into
pop
jge
cmp
and
jno
cli
jecxz
jcxz
jle
mov
sub
mov
lock
sub
daa
mov
aam
xchg
cmp
xlat
push
fdivr
sub
ret
inc
int3
lods
movsl
inc
popf
xchg
ljmp
xorl
adcb
xchg
andb
adc
nop
das
pop
and
stc
cmp
or
in
inc
jge
movsb
in
outsl
cwtl
mov
nop
pushf
dec
or
out
int
test
xchg
inc
cmp
mov
pop
mov
arpl
out
jg
lods
sub
inc
mov
shl
mov
stos
mov
daa
aam
inc
xor
adc
lds
sbb
fstl
add
aas
mov
push
sub
popl
add
icebp
cmp
cld
push
inc
std
test
int
jle
jl
insb
imull
rolb
jo
inc
xor
mov
insb
xchg
xor
test
mov
xchg
jae
add
pop
cmpb
shll
or
out
int
in
xchg
adc
adc
push
or
test
jb
popf
movsb
rorb
xchg
stos
movsb
out
shll
fimull
pop
and
xor
lret
repnz
xor
push
xchg
addl
out
test
lods
js
into
inc
dec
jbe
sub
repnz
stos
mov
leave
insb
ret
stos
dec
fcmovu
clc
pop
stos
cmp
cmp
mov
mov
faddp
scas
jg
xchg
in
mov
and
orb
ds
stos
cmp
sbb
std
jmp
or
ret
in
mov
movsl
decl
xchg
jle
clc
fsts
rclb
jno
lahf
jg
add
cmovne
cli
mov
repz
fildll
or
out
std
cli
and
cli
in
bound
jne
mov
adc
and
lds
out
push
pop
mov
jne
push
cmp
xor
cmpsb
je
sub
pop
mov
sbb
pop
cltd
inc
fistpl
pop
cwtl
add
in
arpl
imul
addr16
xchg
fldl
mov
and
pop
mov
push
sbb
lahf
in
lds
xchg
mov
pop
sti
dec
pop
icebp
movsl
mov
rolb
mov
jmp
xchg
xor
pop
je
push
imul
iret
lods
adc
xor
push
aaa
add
pop
loop
imul
test
add
loopne
cltd
jns
addb
pop
or
inc
xchg
cs
adc
aas
mov
scas
jecxz
ret
pop
insb
pop
in
fnstcw
sub
mov
ja
scas
adc
ja
test
inc
mov
sbb
outsb
sub
rcrl
mov
outsb
sub
idivl
jecxz
cmp
sbb
call
shrl
sti
ffreep
repnz
punpcklbw
xor
test
pop
mov
popf
cmc
mov
imul
popa
cmpsl
popa
dec
mov
pop
rclb
jnp
mov
out
fcoml
loope
xchg
filds
sub
outsb
mov
jmp
cmp
push
lahf
or
pusha
mov
int3
pushf
scas
out
add
hlt
pop
imul
cwtl
add
push
sub
sub
mov
es
rclb
jg
xchg
jns
and
cmp
fldt
adc
mov
rorl
mov
pop
movsb
push
clc
fldz
andb
push
mov
mov
ss
xlat
scas
sbb
nop
mov
sbb
dec
mov
les
repnz
out
pop
xchg
ret
cli
xchg
cmp
repnz
cmc
imul
pop
jb
int
lds
push
sarb
add
faddl
insl
sub
mov
push
std
pop
cld
cmp
mov
push
imul
test
cmp
icebp
pop
xchg
sbbl
sub
pop
mov
or
mov
xor
or
cld
test
jl
test
push
loope
sbb
push
loop
push
ja
test
fdivl
adc
cmp
sbb
in
xor
int3
std
lcall
jnp
mov
add
aas
sbb
lock
out
pop
mov
adc
cld
loop
lock
stos
pusha
xlat
mov
sub
mov
in
mov
inc
popf
mov
inc
nop
mov
lret
pop
cmp
popa
aad
jno
loope
addr16
mov
mov
jo
mov
lcall
jl
in
mov
mov
xchg
imul
ds
daa
int3
jmp
sarb
outsb
pushf
mov
xchg
inc
adc
mov
mov
push
sbb
add
and
mov
lods
das
adc
fsubs
hlt
inc
sbb
into
adc
iret
ljmp
test
pop
jne
add
xchg
out
jle
movsl
loopne
outsb
mov
aam
cmpsb
xchg
ljmp
mov
xchg
mov
rorb
cmc
into
mov
mov
inc
fwait
pop
sub
jne
mov
adc
sub
pop
pop
cmp
out
sub
and
pop
add
out
cli
stos
ljmp
mov
mov
mov
repnz
test
hlt
sbbb
enter
mov
or
ret
into
mov
outsl
pop
or
cwtl
jmp
jg
jmp
dec
fwait
mov
aaa
sub
dec
mov
cmp
gs
xchg
sbb
loope
jb
imul
push
mov
hlt
fcomps
jnp
ds
cli
push
xor
lcall
xchg
fprem
pop
rcrl
shll
and
adc
negb
js
repz
fisubrs
popf
int
inc
pop
scas
pop
je
and
mov
and
lret
adc
fiadds
mov
out
sbb
dec
sbb
ja
sbb
sahf
cmpsb
mov
or
scas
mov
push
mov
stos
test
xor
outsl
bound
dec
adc
dec
movsb
pop
es
js
ljmp
out
test
insb
push
aaa
pop
pop
cmp
mov
out
and
add
sahf
xchg
icebp
push
dec
adc
xchg
mov
out
inc
push
sub
pop
or
or
loope
and
mov
jecxz
fld
ja
inc
or
and
sub
mov
jp
inc
jbe
lret
push
add
sbb
pop
jae
mov
xchg
and
fwait
arpl
sbb
repz
addr16
mov
mov
sbb
jl
scas
jecxz
adc
mov
scas
jmp
push
rolb
jecxz
adc
bnd
pop
push
jb
sbb
jb
inc
xchg
pop
cwtl
inc
mov
jp
push
js
inc
xchg
int
cmp
stc
mov
test
jmp
lods
inc
lods
aas
cwtl
dec
sbb
cmc
in
mov
mov
fmulp
mov
icebp
mov
insl
push
jno
dec
jnp
xor
xchg
mov
push
dec
and
and
div
ja
adc
add
mov
and
testb
pop
pop
std
cwtl
sbb
cmc
add
js
push
adcb
push
jecxz
mov
or
jg
mov
ret
les
and
jge
xor
loope
jnp
push
xchg
das
add
adc
mov
mov
aas
stos
fisubrl
sub
push
scas
fdivrl
mov
nop
sti
cmpsl
mov
sbb
and
inc
cli
ja
sti
sarb
inc
das
repz
mov
cli
dec
lea
add
addb
jnp
add
push
scas
adc
scas
xor
cmpsl
and
aad
test
nopl
mov
arpl
lods
sub
cld
cmp
or
pop
mov
icebp
enter
jmp
mov
daa
pop
gs
insb
lds
or
fistpl
sub
xchg
test
cmp
divl
cmc
fimull
jge
push
add
xchg
lret
mov
inc
sub
cmpsl
lret
icebp
movsl
mov
adc
mov
lock
or
movsb
das
mov
cmp
test
int
xor
push
inc
or
in
xor
adc
pusha
mov
pop
pushf
pop
xchg
jp
mov
daa
add
jg
call
dec
pop
adc
and
cmp
jle
arpl
in
mov
lods
mov
sbbl
arpl
inc
cmp
jg
inc
outsb
push
loop
arpl
mov
xchg
mov
push
mov
clc
cwtl
add
add
xlat
das
mov
add
loopne
test
xor
cmovne
push
pop
add
lods
xor
imul
into
push
nop
icebp
inc
push
sbb
sbb
in
popa
pop
mov
mov
andb
in
sarb
adc
inc
and
into
insl
addr16
jae
add
push
jns
in
add
and
adc
mov
jo
jge
js
mov
out
jbe
pop
mov
pop
leave
xchg
lret
test
adc
xchg
mov
mov
inc
sbb
and
or
aas
cwtl
mov
clc
std
and
roll
mov
mov
loope
insb
ljmp
push
fwait
mov
cmp
pop
push
in
push
add
icebp
dec
in
and
gs
pop
xor
jbe
sbb
lods
ljmp
cld
fwait
popa
shll
dec
popa
movl
add
push
mulb
inc
pop
jb
arpl
add
mov
daa
sbb
mov
addr16
mov
repz
xor
jnp
jo
sahf
jl
jge
pop
stos
cmc
add
arpl
fisttpl
mov
fwait
popf
sbb
push
xchg
sbb
int3
add
lods
pop
aaa
xchg
inc
fnstenv
mov
leave
sbb
lods
cmp
sar
adc
test
xchg
and
jg
jns
rcrl
xchg
and
jb
pusha
test
std
mov
mov
stos
pop
in
jecxz
mov
jle
rcrb
stc
and
inc
fwait
dec
rolb
sbb
iret
stos
loopne
cs
lods
mov
xchg
mov
addb
out
pop
mov
shrb
mov
mov
cmc
shrb
into
and
jns
pop
sub
ljmp
or
adc
xor
and
xchg
add
jnp
mov
mov
lods
shlb
dec
fs
ficoml
cs
int
fwait
rorb
mov
jbe
sahf
jle
lea
pusha
cmc
xchg
out
ss
mov
mov
cmp
inc
cmpsl
pop
fucomp
mov
xchg
shll
sub
pop
sbb
pop
add
and
dec
jno
jp,pt
ja
adc
insl
fldt
ljmp
aad
repz
pop
aas
stos
push
call
cmp
ret
push
insb
and
pop
dec
adc
jbe
or
inc
and
adc
push
mov
cli
add
insb
inc
xor
xchg
sub
cmc
ficoms
mov
lret
jp
pop
push
mov
in
enter
push
outsb
sbb
mov
cmpsl
cmp
in
xchg
mov
ljmp
fwait
push
shlb
mov
inc
dec
incl
in
rorl
mov
les
jle
sar
push
inc
mov
mov
movsl
jo
gs
push
xor
shlb
and
rcrb
adc
and
repnz
arpl
adc
arpl
pop
xor
int3
mov
daa
jnp
pop
pop
pop
adc
xchg
lods
push
jecxz
mov
fcompl
mov
xor
fisttpl
pop
xchg
je
xlat
or
pop
repnz
adc
lret
leave
lock
pop
rcll
adc
inc
inc
lahf
cmp
dec
mov
notb
sahf
popa
pop
scas
inc
pop
ljmp
jo
fnsave
test
xor
out
cmpsl
movsl
sub
inc
rolb
push
out
xor
fcom
cmp
fdiv
out
sub
mov
sbb
data16
cltd
xchg
xor
ja
xchg
push
fs
mov
testb
add
es
jle
lock
add
mov
sub
std
push
sbb
jb
mov
xchg
push
cmp
shrl
enter
mov
ret
rol
out
popf
and
in
xlat
or
int
xchg
xorl
and
in
popf
mov
sti
out
adc
pop
fabs
add
cwtl
inc
aad
cmp
test
mov
mov
mov
xchg
mov
pop
dec
icebp
mov
inc
stos
and
add
add
test
mov
lret
adc
sbb
in
jge
loopne
stc
xchg
pop
dec
rorb
adc
or
sbb
mov
cmp
jge
call
imul
clc
fwait
pop
cmp
les
fildll
pop
les
fldcw
stos
cmp
gs
scas
push
sub
mov
pop
lods
in
jecxz
mov
ja
xchg
mov
pop
loopne
nop
fldenv
rorl
data16
or
jmp
or
call
jae
jp
xor
and
jecxz
and
mov
mov
pop
hlt
aaa
test
cmpsl
ja
stos
mov
ljmp
arpl
inc
sbb
lret
cmpsl
jge
mov
sub
lds
negb
push
subb
test
mov
inc
sub
jae
adc
mov
cmp
in
push
pop
js
cmp
mov
notl
mov
adc
mov
mov
pop
ss
cli
jns
or
mov
and
adc
push
sbb
cmp
jb
inc
mov
push
push
ret
pop
in
mov
adc
jnp,pt
adc
pop
pop
icebp
cmc
mov
movsb
adc
out
mov
adc
dec
inc
mov
mov
into
cmp
mov
imul
dec
push
adc
je
jb
imul
pop
adc
je
push
mov
cmp
sarb
xor
mov
mov
dec
addr16
sub
loopne
in
outsb
xchg
icebp
cli
inc
and
jl
punpckldq
inc
xor
xorl
push
jnp
jmp
or
mov
mov
ret
outsl
sbb
imull
mov
jecxz
and
sbb
mov
push
cmp
scas
mov
adcl
and
pop
push
sbb
cmc
shlb
inc
dec
pop
shrl
mov
push
cmp
inc
loop
mov
lock
mov
sbb
cmp
les
loopne
sub
fucomip
cli
jb
aad
pop
mov
and
repnz
push
push
insl
mulb
sahf
outsb
bound
jle
ljmp
xor
jle
add
mov
adc
repz
mov
stc
ss
test
and
mov
mov
divl
std
jne
jne
ret
xchg
ficoms
mov
or
or
sub
outsl
sbb
inc
and
mov
push
das
mov
out
popf
test
cmpsl
mov
pop
pop
in
dec
cltd
lcall
push
lods
mov
fiaddl
and
cli
adc
in
movsb
scas
inc
rcll
movsl
sbb
in
mov
testb
hlt
lea
mov
aad
jmp
cs
push
mov
sti
sub
xor
and
dec
aad
add
icebp
cmovne
jge
bound
xchg
out
lahf
inc
ds
fstpl
lret
push
xchg
pop
push
push
inc
inc
ja
sarl
pop
sbb
shrb
push
shlb
cmpsb
adc
pop
fisubl
push
pop
cmpl
repz
sub
nop
mov
pop
push
push
popf
jmp
xor
sbbl
idivb
jae
loop
add
rcll
xchg
lods
or
adc
mov
xor
and
or
sti
add
int3
fwait
sub
add
ds
aas
inc
popa
inc
js
adc
stos
mov
add
cltd
xor
pop
pop
xchg
call
gs
ficompl
pop
jae
cmpsb
scas
mov
inc
xlat
rcrl
jle
cs
adc
xor
cli
mov
inc
sbb
subl
and
dec
dec
pushl
imul
lret
and
jp
or
adc
pop
js
pop
push
je
rclb
gs
or
imul
and
sbb
pop
sti
repz
enter
xchg
ja
pushf
xor
loop
movsb
sbb
sbb
addb
dec
inc
xchg
pop
sub
pushf
dec
push
scas
cmp
int3
data16
or
xlat
repz
mov
inc
mov
inc
mov
or
sti
jnp
dec
fsubl
dec
xchg
je
add
jns
lret
mov
imul
fwait
mov
xor
sub
push
aad
test
sub
repnz
lods
inc
mov
cmp
mov
adc
dec
xor
push
mov
push
lret
fldenv
adcb
dec
gs
sbb
fsubs
xchg
or
xor
popf
and
ss
push
jbe
outsl
inc
rolb
addb
cltd
fisubl
adc
ret
fs
sbb
jp
sub
fcmovnbe
test
push
mov
and
movsb
jno
lahf
cltd
aas
orl
dec
pop
or
mov
pop
lods
sub
leave
mov
push
jmp
popf
sub
mov
dec
pop
lock
lods
jne
fdivrp
inc
loope
aam
cmpsb
jns
mov
xchg
leave
push
and
pushf
xor
iret
mov
addl
pop
lea
pop
sbb
pop
daa
cmpsl
movsb
and
mov
lret
mov
dec
or
aad
jns
mov
clc
pop
sbbb
xchg
and
cmp
mov
mov
fldcw
icebp
push
jl
push
add
push
pop
pop
add
mov
js
icebp
mov
stos
mov
outsb
mov
mov
push
jns
out
ja
in
add
stmxcsr
push
mov
cmp
inc
mov
and
shll
popa
das
adc
mov
aad
outsl
lgdtl
pop
sbbl
data16
pop
stos
cmp
cltd
sbb
pop
or
push
cli
iret
cmp
pop
lods
push
lahf
cld
add
and
in
push
sub
jmp
jne
xchg
notb
icebp
jae
mov
cmpsl
leave
mov
stc
cli
sti
test
mov
call
xor
mov
prefetchwt1
repnz
adcl
add
aad
lea
loope
cmp
notb
lea
mov
ss
jp
arpl
mov
and
xor
jb
outsl
xchg
out
popl
inc
dec
mov
sub
cmp
faddl
pop
jge
add
inc
adc
sbb
movsl
lds
fadds
mul
andl
and
movsb
and
cltd
mov
xor
inc
dec
fs
cltd
xlat
aam
andb
inc
enter
xchg
stos
jl
xor
ret
mov
mov
xor
mov
jno
inc
lods
push
adc
pop
inc
je
mov
xchg
scas
push
inc
loopne
mull
push
testb
mov
or
bound
in
and
mov
sub
leave
xor
sbb
ds
ret
mov
lock
cmp
pop
xchg
int
push
repz
andb
std
gs
sub
in
or
pop
roll
popf
imul
xor
push
adc
scas
and
jge
cld
jmp
bound
mov
jae
cmpsl
arpl
cmpsb
sahf
leave
and
mov
cli
into
xor
cmp
mov
and
cmp
rolb
adc
jno
or
int3
adcl
push
fiadds
xchg
fs
sub
mov
mov
add
cs
cmpsl
jecxz
outsl
mov
shl
mov
hlt
cmpsb
mov
lock
pop
cltd
cld
nop
mov
pop
sub
jbe
js
scas
test
lods
addl
dec
into
mov
mov
xor
imul
fistps
inc
cmpsb
dec
xor
xor
cmpsl
xor
adc
loopne
add
test
scas
and
and
fwait
add
test
pusha
cmpsb
push
sub
sti
sbb
or
loopne
movsb
mov
sbb
stc
jnp
push
pop
pop
shrb
mov
xchg
mov
and
jo
adc
scas
loopne
sub
pop
push
les
mov
push
clc
inc
pushf
mov
rolb
adc
lret
push
add
aad
js
dec
add
mulb
jle
jge
mov
jne
or
pop
push
jae
mov
xchg
adc
xchg
dec
jle
xor
dec
dec
lock
icebp
adcl
push
sarb
pushf
in
push
cmpsl
or
ljmp
sub
mov
std
and
fmull
into
push
xchg
mov
pop
fsubr
addr16
subb
gs
jno
push
cmp
pop
incl
ja
incb
leave
cmp
cwtl
les
cmp
xor
cmp
stos
sbb
adc
pop
outsb
pop
mov
push
push
push
sub
mov
jp
test
mov
jg
pop
imul
cmp
ja
cmp
adc
cli
andl
dec
xchg
sbb
out
inc
add
jg
andb
sbb
call
sbbl
inc
repnz
mov
mov
bound
das
jle
sbb
mov
sub
rcrl
and
fcomip
sahf
mov
mov
inc
ret
stc
outsb
test
push
xchg
shll
mov
pop
push
mov
lret
xchg
int
out
in
pop
dec
les
fdivrs
gs
fld1
mov
sarl
xor
jp
xor
imull
mov
imul
jnp
test
xor
push
sbb
cwtl
insb
cmp
xor
arpl
add
xor
hlt
inc
pop
push
icebp
push
and
out
in
out
dec
out
rorl
pusha
jns
aas
push
cwtl
lock
cmp
jmp
sub
sti
jno
aad
fsubrs
mov
imul
std
and
sub
mov
rorl
gs
lret
aas
push
dec
or
and
insb
mov
mov
aad
fsub
pop
dec
fs
adc
mov
mov
and
mov
xchg
int3
or
ds
adc
sub
rolb
popa
scas
fildll
call
cltd
mov
setbe
adc
xor
xchg
popf
xor
jle
mov
mov
inc
add
and
xor
out
xchg
dec
test
shl
cltd
ror
es
lods
fs
mov
xchg
dec
je
or
push
or
leave
add
pop
sti
sbb
test
xchg
cmp
inc
fwait
addb
repz
stos
cmpb
insb
sub
adc
fdivl
mov
mov
popa
push
jae
test
jmp
lret
push
ss
cmp
cmp
insb
add
clc
fstps
push
ljmp
cltd
push
mov
dec
add
sbb
les
fcomi
cmp
fdivp
cmp
lds
in
addr16
inc
pop
mov
sbb
test
leave
lret
ja
loop
cmp
mov
int
sbb
pop
pop
shr
in
lds
push
fcomp
outsl
pusha
test
sub
jle
and
cmpsl
lds
addr16
sti
lock
pusha
icebp
lea
int3
inc
mov
push
push
push
pop
mov
push
pop
test
or
lahf
and
or
out
lahf
xchg
mov
imul
sbb
scas
jl
mov
popa
pop
mov
dec
loope
ljmp
add
cmp
fwait
mov
pop
cmp
add
sub
mov
cmp
pop
xor
sub
gs
daa
or
pop
out
mov
mov
lods
lods
aam
pop
shl
das
test
mov
xchg
or
jo
insl
lret
push
mov
dec
add
cwtl
cmp
rcrl
pop
fs
sbb
xchg
pop
scas
or
inc
push
dec
jmp
loopne
aam
lods
inc
pop
imul
adc
lds
call
cmp
in
or
xchg
loop
xchg
cmp
cld
pop
mov
cmp
aaa
mov
push
jle
push
les
pushl
mov
mov
push
cwtl
test
stos
aas
inc
dec
aaa
inc
pop
push
sbb
lds
movsb
aam
pop
mov
repnz
and
aaa
mov
out
ret
icebp
es
inc
ss
test
xchg
mov
pop
adcb
dec
or
faddp
iret
cltd
pop
mov
iret
lods
push
jnp
shll
xchg
sbb
out
xor
pop
lahf
add
inc
pop
movsl
or
mov
sbb
psrld
call
jl
xor
call
push
lods
jecxz
mov
sub
les
mov
xchg
jb
push
dec
cmpl
out
sbb
xor
inc
fisttpl
int3
mov
cmp
add
jo
dec
movsb
call
xchg
and
mov
rcr
jb
sbb
push
dec
or
inc
leave
mov
cmpsl
pop
loopne
xor
adc
jnp
mov
inc
push
add
pop
test
mov
inc
and
xorl
pop
out
sahf
and
jl
pop
adc
loope
test
insb
or
test
add
inc
pop
in
adc
xchg
mov
int3
dec
int
push
xor
sub
jl
and
jle
jp
add
imul
xchg
mov
rol
data16
xchg
add
clc
movsb
mov
mov
add
dec
mov
movsb
push
inc
sbb
sub
mov
adc
add
pop
clc
icebp
jno
mov
add
push
jl
movsb
outsl
stc
dec
divl
fsubrs
xchg
sub
pusha
leave
cwtl
and
sub
sub
fcompl
sbb
dec
xchg
adc
div
ss
inc
cwtl
lcall
aam
jno
es
cmp
adc
dec
pop
adc
das
push
mov
jb
and
jo
push
sbb
insb
mov
lods
jg
xor
dec
pop
aam
lret
cld
daa
or
insb
adc
inc
push
and
mov
lods
mov
and
loop
pop
xchg
xchg
mov
inc
pop
out
adc
mov
fisubs
adc
add
add
popa
push
shlb
mov
inc
sbb
xchg
pop
or
adc
pop
std
xor
push
jg
lods
jne
xchg
xchg
inc
js
gs
inc
int
int
icebp
mov
xchg
pop
ss
pusha
aad
mov
lcall
imul
ror
aad
push
fisttpl
dec
imul
mov
into
jae
outsl
xchg
mov
dec
push
sub
cwtl
add
ss
cwtl
pushf
inc
adc
xchg
andb
leave
or
aad
sbb
cmp
incb
mov
lock
in
in
cmp
and
imul
jmp
cltd
lea
dec
pop
andl
inc
cmc
test
dec
add
data16
adcb
ds
mov
rclb
movsb
scas
pop
adcl
std
cmpsl
lea
nop
sahf
fs
cmp
cmc
add
mov
sub
cmp
push
xorb
ljmp
out
ret
decb
adc
inc
pop
sbb
bnd
xchg
or
push
shlb
out
rcll
hlt
add
sbb
insl
sbb
sub
mov
aaa
mov
xor
xchg
loop
scas
fimull
jbe
cmp
push
mov
xchg
cmp
movlps
out
push
jno
dec
out
or
xchg
fiaddl
std
xchg
dec
pop
in
pop
xchg
and
mov
xor
jnp
inc
jmp
sub
xor
sbb
clc
nop
sub
pop
mov
or
and
out
popa
push
sub
and
das
lret
lret
jo
andb
dec
mov
mov
cmp
pop
ljmp
xor
rcl
out
adc
dec
mov
aaa
xchg
and
js
ja
in
ret
sbb
jp
test
pop
xlat
ja
ss
dec
sub
lcall
rol
xor
inc
fcomp
jle
pop
lods
push
jbe
loop
loop
dec
aaa
dec
jnp
cli
imul
aad
enter
mull
cmp
fbstp
lahf
cs
pop
mov
fs
mov
outsb
cs
jo
lock
rolb
fnsave
or
cmp
cmc
insb
ljmp
lock
popa
push
cli
bound
mov
xchg
idiv
and
fstps
mov
push
pop
pop
les
out
arpl
sbb
sub
cld
sar
test
enter
js
testl
sub
jmp
cmp
lds
xor
cmp
mov
sbb
mov
or
leave
nop
hlt
adc
icebp
mov
call
xchg
sbb
stc
into
jns
push
fisttpl
push
pop
mov
cs
test
hlt
cld
arpl
and
icebp
push
clc
ret
dec
ficompl
ljmp
inc
stc
iret
dec
xlat
or
xchg
jne
cmc
out
pop
add
stc
jb
or
rolb
das
movsb
sub
sub
imul
dec
clc
subw
popa
mov
aas
je
xchg
lea
sub
xor
push
scas
push
lret
mov
icebp
sbbl
sahf
clc
aam
sbb
push
out
xchg
stos
xchg
lret
mov
fwait
mov
out
repnz
test
pop
insl
xor
ret
xchg
mov
push
xor
loope
fimuls
mov
adc
sub
pop
xchg
mov
and
lret
cmpsb
fwait
push
pop
jmp
mov
push
lcall
fisubrl
mov
into
mov
lods
pusha
aam
mov
xchg
int3
jns
fwait
jp
stc
sbb
dec
cmpsb
mov
push
push
shrl
movsb
jno
inc
xlat
pop
insl
das
inc
out
fs
jns
xchg
std
adc
shrl
mov
pop
int
mov
jl
loope
inc
loop
xor
ljmp
pop
popa
pop
jmp
jp
jmp
mov
mov
add
scas
fnsave
or
mov
xor
mov
push
inc
sbb
push
clc
dec
add
addl
out
sub
test
out
cmp
jbe
cmp
mov
loopne
dec
lds
int3
mov
js
cmp
cmc
ds
sub
cmpsl
in
mov
lret
push
push
imulb
ja
cmp
hlt
jmp
pop
scas
mov
daa
inc
mov
test
dec
jp
mov
stos
sub
rcl
hlt
cmc
adc
cmp
outsl
dec
sbb
nop
cmc
jmp
das
clc
xchg
andb
jmp
mov
mov
inc
cmpl
mov
mov
call
lcall
js
sub
scas
dec
dec
loop
pcmpgtb
jp
pop
sub
les
in
pop
cltd
and
shrb
test
leave
or
jae
data16
sub
jo
int3
decb
inc
pop
mov
mov
divl
xor
mov
les
adc
xchg
les
sti
idiv
mov
jmp
test
and
or
push
lea
mov
xor
imulb
movsb
daa
dec
in
ret
sti
jle
int
nop
push
jo
mov
clc
bound
ret
test
xor
cmp
xchg
and
lods
and
fwait
push
cmp
sbb
or
sbb
test
in
pop
or
or
xor
xlat
cmp
out
pop
push
mov
je
push
fmulp
cmp
shrl
scas
pop
mov
jl
test
dec
adc
push
icebp
lret
cmpsl
movsb
jp
sbbb
lods
int3
sub
xor
aam
fsubr
xor
dec
icebp
mov
inc
pop
lods
inc
call
loopne
adc
popf
push
inc
fisubl
in
repz
or
cmpsb
fwait
mov
mov
adc
and
imul
shl
push
dec
jno
mov
aad
lcall
popf
mov
cmp
sub
add
adc
dec
xchg
cmp
push
addr16
xor
into
ljmp
ds
xchg
outsb
fisttpll
push
adc
dec
or
push
cmp
iret
testl
fwait
pop
mov
int3
imul
mov
testl
fistpll
add
imul
iret
push
mov
mov
mov
xchg
dec
dec
mov
jmp
pop
addl
ret
jp
mov
mov
mov
cmp
shrl
rcrl
out
mov
add
sbbl
lods
movb
fmul
pop
pop
scas
fcoml
in
and
or
mov
ja
lods
mov
xchg
lods
xchg
xchg
add
jb
cmp
xchg
adc
xchg
mov
roll
push
mov
mov
lahf
dec
dec
rcrl
inc
push
pusha
lret
mov
mov
add
loopne
fdivrs
out
pop
jbe
mov
jb
add
add
mov
fcompl
xchg
jno
ljmp
push
lcall
imul
aad
pushf
sub
inc
push
stos
push
scas
aam
and
decb
push
cmpsb
jbe
incl
sbb
call
push
andb
int3
cmp
sbb
jae
pop
lret
fwait
ljmp
push
jns
lds
adc
das
aas
hlt
stos
xchg
mov
push
and
xchg
adc
iret
mov
insl
idivl
ss
cmp
dec
pop
test
js
shll
mov
pop
mov
leave
sub
jb
test
ret
mull
mov
test
xchg
xchg
pop
jno
and
mov
into
lea
je
imul
roll
mov
inc
push
mul
mov
and
dec
int3
div
or
sub
sub
cmp
lea
sete
sub
or
mov
add
adc
cmpsb
sti
mov
jmp
add
mov
insb
test
mov
xchg
scas
xor
movsl
jbe
cmc
stos
fdivrl
pop
adc
rol
sub
cmp
andl
cmp
imul
sub
and
pop
aas
xor
jge
cli
adc
hlt
push
push
mov
jp
sbb
les
jmp
imul
xchg
les
popa
push
out
mov
xchg
in
or
jb
mov
jnp
orb
gs
add
mov
icebp
jg
popf
jecxz
and
enter
jmp
lret
shll
daa
mov
jmp
aaa
jge
mov
mov
or
pop
xlat
pop
shrb
inc
or
mov
push
cld
or
push
xchg
stos
mov
outsb
aas
call
push
xor
adc
push
pop
leave
addr16
dec
push
inc
test
jle
jbe
push
push
loope
sub
sub
fisubrs
dec
mov
sub
int3
out
sahf
addr16
insb
loopne
mov
inc
mov
pop
pop
es
mov
xor
ja
mov
out
lret
xor
pop
bound
repnz
cmc
xchg
das
dec
pop
or
and
test
or
cld
jnp
frstor
daa
leave
push
push
pop
sbb
fbstp
adc
ljmp
mov
mov
lcall
cmp
mov
or
ret
clc
fldl
jp
mov
mov
lcall
lret
mov
pop
sbb
inc
mov
leave
jb
popa
push
pusha
fdivs
pop
inc
es
xchg
fnstenv
mov
icebp
pop
loop
pop
data16
mov
js
lods
sahf
call
push
jno
test
movsb
hlt
lahf
shll
sub
movsl
xor
and
sub
int3
cli
cmp
and
inc
lret
push
or
scas
outsb
add
jmp
shlb
enter
in
insb
inc
fidivrl
lahf
or
push
ret
std
rcr
cmp
xlat
bound
pushf
bound
and
sbb
mov
clc
orl
data16
clc
inc
shrb
sub
es
fs
aas
adc
test
sub
jl
lahf
mov
jbe
pop
add
insb
jns
cmpsl
mov
icebp
ret
hlt
mov
push
loopne
xchg
pushf
cli
call
sub
xor
stos
nop
push
xor
mov
int3
jge
mov
in
icebp
loopne
push
repnz
push
hlt
lret
mov
and
decb
mov
fisubs
lea
cmovae
rolb
xor
sbb
mov
inc
dec
mov
test
sbb
clc
out
xchg
out
cmp
inc
and
add
xor
in
imul
int3
or
push
rcrb
mov
pop
jle
mov
scas
jl
jno
mov
jge
mov
xchg
xchg
inc
push
mov
and
in
outsl
pop
xlat
cmp
or
sub
mov
nop
hlt
popa
fdivp
adcl
stos
or
fsubs
mov
pop
lret
cwtl
hlt
jge
fs
iret
add
push
out
cmp
adc
out
jecxz
lea
hlt
jmp
call
inc
mov
add
nop
test
test
ret
imul
push
fcoml
push
popa
sbb
cmp
jae
fdivp
es
stos
cmp
xor
cmpsb
adc
mov
sub
leave
or
fdivr
rcr
cmp
push
sbb
add
inc
fsubp
aam
loop
add
shlb
adc
pop
fs
call
pop
fidivrs
sub
xor
nop
imul
aas
or
loop
in
push
pop
test
cwtl
popf
decb
iret
std
ficompl
mov
dec
and
and
inc
lret
fs
aam
mov
sbb
jns
sub
xchg
and
sub
insl
push
lock
xchg
jbe
mov
orl
sub
lret
cmp
mov
arpl
cmpl
push
jns
xor
xor
mov
jmp
cmp
pop
jge
ja
fs
pop
and
inc
ror
stc
inc
outsb
xchg
push
addr16
and
fistl
add
or
outsb
xchg
cmp
shll
in
inc
jae
add
adc
mov
jecxz
adc
mov
iret
mov
in
mov
sub
push
pop
lret
outsl
dec
mulb
ret
jns
jmp
lods
xchg
xchg
ds
and
push
shrl
and
in
add
dec
and
sar
sbb
mov
jo
xor
mov
ljmp
xchg
or
add
add
push
test
ljmp
sbb
push
adc
xchg
or
pop
mov
movsb
xor
pop
repnz
pop
jbe
sbb
mov
stos
add
rcrb
rcpps
inc
xlat
test
mov
lds
sub
inc
or
pop
jmp
adc
lock
rorb
mov
jle
mov
hlt
test
aam
stos
or
addr16
iret
insl
lret
pushf
push
fdivrl
adc
sbb
push
lock
in
aas
sub
ja
sti
mov
adc
mov
in
sahf
das
adc
dec
rcrl
loop
mov
loope
addb
and
mov
out
cmp
xchg
push
push
enter
push
leave
pop
aaa
mov
cltd
push
insb
adc
outsb
pop
adc
movsb
pusha
pusha
xchg
dec
push
mov
fisttps
stos
mov
adc
lret
movsl
adc
or
test
cld
rorl
lret
mov
push
rolb
ss
insl
stos
mov
push
xlat
xchg
and
mov
or
mov
pop
push
mov
jp
pushf
xchg
loop
stos
cmc
dec
fcoms
jge
xchg
les
adc
fldenv
sub
rolb
mov
loop
lock
movl
mov
in
arpl
imul
or
cmp
push
and
pop
pushf
stc
popa
popl
fsubl
mov
and
cmpsl
cmp
fcmovnu
iret
and
mov
ret
fbld
sub
push
xchg
stc
sbb
jno
jae
aam
fisubl
cmp
ror
xlat
lret
out
sub
mov
mov
ja
or
imul
sub
mov
push
addl
push
add
add
rol
out
and
pop
and
xchg
sub
or
add
push
mov
mov
lret
test
rolb
movsl
inc
dec
xchg
imul
mov
adc
xchg
push
cmc
scas
mov
ja
rcll
scas
loop
stos
loop
inc
push
dec
mov
mov
or
cmpsl
mov
pop
addl
lahf
push
ror
jmp
sbb
mov
lea
loopne
xchg
daa
adc
jmp
in
xchg
inc
outsb
in
ljmp
mov
insl
loopne
andb
cmpsb
rolb
lods
xchg
repz
or
or
sub
test
sarb
gs
adc
imul
stos
out
pushf
push
xchg
test
ret
out
ret
or
in
pop
ja
insb
in
xchg
lock
cmc
mov
icebp
fistpll
pushf
dec
dec
sub
sbb
pop
inc
mov
inc
lea
cmc
int
jo
dec
mov
pop
xchg
mov
inc
mov
fwait
cs
dec
inc
das
push
and
lret
out
jle
shl
loopne
mov
scas
inc
sub
cmp
out
jae
fmull
sub
loop
in
call
mov
jle
mov
jae
int
xchg
divl
out
jae
pop
jge
pop
or
cmp
cmp
test
aam
pop
lock
out
daa
inc
push
push
stc
stc
inc
popa
repz
mov
or
les
ja
cs
ret
ljmp
xor
mov
dec
in
mov
or
fistps
mov
jl
push
jg
mov
cli
xchg
sub
inc
and
pop
pop
std
addr16
and
testb
cmpsl
addr16
push
adc
add
inc
loope
inc
jmp
cmp
cltd
call
mov
sahf
add
xor
leave
xchg
mov
xchg
cmp
push
ds
sub
in
sub
or
ret
and
shll
xor
mov
nop
pop
jbe
inc
gs
les
push
or
add
jge
add
stos
imul
ds
mov
test
xchg
push
push
bound
xchg
enter
adc
mov
push
pop
add
rcll
sub
in
mov
fs
sbb
mov
cld
adc
cld
dec
sarl
push
shll
add
pop
data16
lahf
xchg
adc
ret
arpl
lds
stos
jge
insb
aam
aaa
push
push
add
cmpsl
sub
les
and
mov
mov
dec
mov
adc
dec
and
mov
iret
jg
pop
or
add
cld
inc
arpl
xchg
popf
pop
cmpsb
or
fsubrs
int3
xchg
mov
mov
test
test
outsl
adc
cld
jecxz
and
cmp
test
in
mov
and
icebp
or
imul
cld
lcall
outsb
dec
fs
rorl
xchg
jb
or
cmp
stos
sti
add
mov
adc
int
in
mov
aam
pop
cmp
lock
push
gs
mov
out
movl
sub
and
iret
xor
push
inc
repnz
test
js
jne
jg
mulb
jb
outsb
push
mov
mov
daa
sbb
mov
sub
stos
sub
in
in
outsl
push
cmp
jmp
and
test
out
inc
scas
add
push
cmp
cmp
xchg
fdivr
jmp
dec
out
mov
adc
sti
push
aas
sbb
int3
jnp
mov
sarb
sbb
dec
push
xchg
sub
fucomi
fldt
sbb
inc
xchg
mov
adc
jae
int
call
les
cmpsl
cmp
pop
les
imul
shlb
movb
aam
jg
enter
mov
pop
sbb
adc
inc
filds
cmp
out
mov
aas
push
add
scas
outsb
pop
outsb
sti
xor
ret
sahf
add
leave
sbb
jmp
cld
outsb
adc
xchg
xchg
mov
sub
xor
lahf
lcall
stc
andb
xchg
fiaddl
mov
in
jg
pushf
into
xor
out
in
pop
popf
inc
cmpl
and
mov
out
sti
xor
data16
lea
mov
xor
and
mov
jecxz
mov
or
sahf
es
rolb
filds
mov
mov
cmp
pop
aad
paddq
or
pop
push
call
scas
push
inc
icebp
jno
sbb
fadd
std
mov
ds
and
sbb
inc
mov
push
imul
xor
push
ret
repnz
mov
mov
lds
cmp
popa
lods
loop
jne
into
cmp
mov
sub
loop
cmp
sarb
mov
loope
add
sbb
pop
xor
mulb
jbe
nop
push
and
adc
out
push
out
or
fs
es
js
cmpsb
sbb
bound
xor
add
inc
xor
or
push
ja
jno
mov
imul
lret
pop
add
imul
out
out
scas
je
or
push
adc
inc
frstpm(287
in
outsl
xlat
lret
sarl
pop
cmpsb
lret
arpl
xor
sahf
cs
loope
or
das
adc
mov
in
je
mov
scas
lcall
js
push
dec
push
push
test
mov
cmp
cmp
test
mov
pop
jge
sub
jge
xor
mov
mov
out
in
popf
movsb
inc
dec
pop
sub
movsb
pop
pushf
mov
add
stos
adc
adc
cmpsb
add
in
cmp
insb
shrb
sbb
sub
mov
push
hlt
xor
mov
out
cmpsb
dec
test
sub
inc
mov
and
call
aam
add
push
sbb
cmc
aam
jae
pushf
fsubs
fs
or
xor
mov
loope
aad
out
mov
jno
sbb
repz
push
push
dec
cmp
stos
in
xchg
inc
xchg
jo
std
lods
and
inc
add
shlb
push
lock
ljmp
stc
dec
dec
jne
dec
cmp
xchg
lods
and
inc
jecxz
lret
inc
push
xchg
les
imul
add
sbb
bound
mov
lret
xchg
addr16
outsl
cs
sti
mov
or
loope
ret
jbe
pop
movsb
loope
dec
out
jno
in
add
xchg
test
jbe
xor
into
xor
fst
decb
lret
loope
push
dec
dec
or
add
mov
jne
in
aam
pop
negl
xchg
test
popl
add
inc
mov
hlt
je
push
je
icebp
mov
inc
sti
sub
inc
lods
daa
sbb
loope
push
addb
jp
jmp
rolb
inc
fwait
in
scas
lock
stc
addb
imul
popf
fdivrl
jmp
xchg
sbb
or
mov
inc
es
inc
es
push
insb
std
mov
xor
int
scas
rolb
mov
enter
pusha
orb
jge
xchg
sbb
ljmp
cwtl
popa
push
xchg
inc
and
test
pop
lahf
sbb
jae
mov
jo
push
pushf
sub
sbb
push
jp
cmpsb
cmp
mov
cmp
push
push
adc
in
mov
jl
jns
xor
jae
xor
jo
movq
inc
in
or
inc
fcompl
xchg
clc
fwait
xlat
adc
inc
iret
mov
dec
mov
lods
icebp
dec
cmp
nop
push
cmp
and
sahf
fwait
call
into
adc
out
icebp
or
scas
jle
and
stos
push
addr16
jg
gs
idiv
adc
pop
xor
mov
pop
sbb
lret
imul
and
sbb
das
push
mov
scas
xchg
pop
lea
nop
mov
sbb
xor
jb
push
add
in
outsb
jo
jg
popa
je
ficompl
sbb
pop
aad
push
adcb
or
jne
adc
test
mov
xlat
push
pop
mov
cltd
mov
nop
push
sbb
jl
cmp
lret
and
or
je
adc
insl
in
mov
fcmovbe
popf
movsb
pop
testl
sbb
int3
outsb
mov
sub
sub
outsb
mov
aad
pop
ja
adc
jp
clc
addr16
fdivrl
enter
sub
ret
outsb
out
xchg
mov
fbld
sub
inc
xchg
adc
sbb
bound
sbb
in
notb
aam
jae
notb
loope
cltd
jecxz
inc
mov
adc
insl
mov
push
mov
in
dec
or
aam
inc
mov
pop
je
push
sub
insb
or
test
sbb
cmp
es
jg
xor
dec
jg
daa
inc
sbb
push
push
sbb
xchg
inc
push
repz
push
push
push
ja
fcomps
stos
cs
stos
sbb
loope
dec
mov
lock
test
fucomip
mov
sbb
fisubl
xchg
gs
inc
incl
sbb
jns
shrl
sbb
mov
ret
and
mov
push
and
mov
or
cwtl
mov
or
jns
adc
or
cmp
shlb
cwtl
cmp
jnp
aaa
pop
inc
dec
push
in
pop
pop
mov
jle
xor
sub
pop
jecxz
xchg
nop
fldt
test
adc
and
ss
mov
stc
add
xor
xor
lret
out
repz
push
cmpsb
les
xor
cmc
fistpll
cwtl
dec
gs
dec
pusha
mov
lret
in
or
add
inc
nop
in
mov
es
and
icebp
sbb
sti
push
jle
xor
cmp
jecxz
sahf
iret
negb
scas
ja
dec
jb
sahf
mov
and
movsl
cmp
outsl
out
loope
add
inc
mov
cmpl
pop
pop
pop
in
cmp
int3
sub
bound
mov
out
fs
dec
cmpl
adc
add
mov
pop
ja
lea
sub
lods
aaa
mov
mov
mull
aaa
cli
and
jnp
nop
fdivrl
std
filds
sbb
jnp
push
test
xchg
xlat
mov
xchg
mov
push
ret
push
push
mov
std
dec
lods
int3
pop
fsubs
or
cmp
in
in
mov
dec
mov
xor
xor
scas
shll
vphaddubq
dec
and
rclb
movntq
mov
jb
int
push
push
lea
lea
movb
mov
or
xor
adc
xor
sbb
ret
add
in
and
cmpsb
insb
jecxz
int3
xchg
ds
and
aas
leave
ret
lea
jp
out
push
sub
aas
jg
cwtl
sbb
je
jae
push
xchg
stos
lods
cmp
cltd
xlat
lahf
dec
mov
xor
pushf
in
cmp
aaa
js
int
in
dec
add
ret
leave
xlat
pop
ret
sub
cli
test
outsl
sahf
add
jno
bound
and
mov
into
popa
push
popl
xor
or
jl
test
xor
sub
popf
rcr
insb
or
lock
lods
xor
lret
jmp
into
pop
sahf
pop
mov
pusha
lods
sahf
xchg
das
out
cmp
sub
or
std
repnz
notl
mov
rorb
xor
aam
popa
repnz
pushf
adc
push
lea
mov
pusha
in
and
sub
mov
jns
test
pusha
loop
gs
adc
je
out
ss
mov
aas
pushf
cmc
fstps
push
icebp
in
lea
push
mov
mov
xor
insb
add
cwtl
gs
cmp
inc
lods
xor
or
sti
cmpsl
mov
and
mov
mov
daa
les
mov
jl
andl
or
jle
jne
mov
ret
lahf
fcomp
test
imul
jl
jb
cwtl
mov
adc
fiadds
jge
cmp
adc
leave
aaa
sahf
push
les
xchg
popf
mov
ljmp
dec
dec
cwtl
movsl
icebp
je
pop
or
pushf
cmpb
push
or
mov
testb
xor
mov
xchg
xlat
jo
and
dec
fistpll
and
dec
sbb
movsb
out
mov
xor
enter
or
pop
jle
dec
sub
fildl
ficompl
rep
lahf
les
sti
repnz
pop
fs
xor
lahf
nop
aad
sahf
pushl
push
mov
ror
pop
adc
sub
mov
xchg
pushf
cmc
and
sub
arpl
pop
xchg
fmul
sbb
fcompl
xor
pop
jl
mov
xlat
scas
fmuls
push
sub
sub
jl
fmull
jle
jb,pn
pop
cli
icebp
fadd
sti
mov
add
xor
mov
das
jg
push
jbe
inc
cmpsl
adc
mov
push
loope
fdivrs
in
jns
test
int3
inc
lahf
push
mov
mov
dec
into
into
jno
pop
jl
sbb
mov
xorb
repnz
addl
cmp
pop
aam
imul
enter
stos
and
ja
arpl
or
das
or
js
xchg
adc
and
mov
cmp
xor
dec
out
push
adc
push
sahf
jl
arpl
mov
imul
in
ret
inc
push
scas
int
aam
lret
test
addps
test
lock
sbb
jl
pop
xchg
mov
fdivr
sbb
xchg
push
enter
cmp
les
or
cltd
adc
cmc
fldt
or
add
aaa
or
cmp
push
fdiv
imul
push
sbb
or
add
out
fnsave
add
in
iret
shl
lahf
sbb
cmpsb
and
aad
loopne
xchg
jmp
lock
or
fnstenv
faddp
insb
mov
and
push
mov
pop
mov
push
shl
sub
jns
mov
xor
ror
in
mov
int3
stos
into
ja
out
fcomps
bound
fistpl
hlt
out
in
mov
sahf
mov
jmp
xor
jne
out
in
lock
add
iret
sub
pop
add
fists
stos
and
fs
push
pop
in
mov
add
mov
fwait
inc
xchg
subb
fwait
sbb
jne
je
out
pushf
jge
pop
xchg
pusha
mov
sub
cltd
out
xchg
jne
xor
mov
insl
push
mov
xchg
fldcw
or
fcmovne
stos
jecxz
dec
or
pop
int
pop
pop
decl
scas
jl
popf
movsl
outsb
data16
mov
stos
xor
fbstp
cmpsl
divb
or
loopne
inc
inc
inc
adc
lock
imul
bound
rcll
sbb
xchg
or
xor
lcall
pop
pcmpeqd
shll
mov
popa
jecxz
or
jle
sti
ss
mov
rolb
jnp
out
es
inc
pusha
mov
xor
jne
addr16
push
inc
and
dec
lods
fsubr
out
repnz
sbb
xchg
sahf
or
sbb
adc
mov
push
sub
xor
and
sahf
add
aas
out
cli
fisubl
or
mov
jno
in
xor
mov
mov
hlt
xor
loop
shr
ficoml
jbe
cmp
in
cmp
aaa
enter
cmp
imul
mov
cmp
xchg
sbb
pop
clc
cmpsl
pop
inc
cltd
adc
or
pushaw
mov
insl
lock
popa
loop
stc
dec
ret
jnp
xor
into
gs
mov
test
aad
daa
enter
push
movsb
dec
jo
mov
shl
rolb
movsb
shlb
sbb
fistpl
ret
movsb
jnp
lods
jbe
ret
stc
negb
cmp
icebp
sti
repz
mov
jg
jecxz
ljmp
adc
sbb
std
adc
mov
fsubp
sub
mov
inc
xor
lock
gs
ds
dec
xchg
pop
mov
sbb
enter
and
mov
insb
fcmovnb
mov
xor
adc
in
stos
pop
add
inc
add
mov
and
mov
dec
xor
outsb
in
mov
mov
fwait
cwtl
or
mov
cmc
dec
rclb
imul
lret
aad
ret
ret
jae
popf
popa
mov
pop
pop
mov
pushf
xor
jae
mov
dec
aas
stos
jns
lods
or
in
ret
pop
mov
or
hlt
sub
and
xchg
sbb
pop
shll
pop
fdivrl
daa
insl
loope
popf
aaa
test
fldenv
sar
pop
ds
in
test
sbb
push
bound
inc
fdivr
cli
push
and
loop
mov
pop
sbb
adc
adc
lock
out
insb
mov
jge
lcall
shll
mov
push
dec
cltd
xor
xchg
call
lods
loop
mov
or
inc
out
push
xchg
adc
test
cmc
insl
mov
xor
out
mov
mov
jmp
mov
and
out
hlt
pop
or
insb
popf
mov
or
ret
inc
adc
mov
aad
hlt
xor
jecxz
jl
xchg
cmpsl
pop
pusha
mov
inc
fildl
leave
push
xor
insl
lret
inc
scas
fincstp
addl
fdivrl
xorb
lahf
adc
or
in
ror
rcrb
inc
mov
stos
cmpsb
std
ljmp
sbb
pushf
aam
xchg
rclb
xor
mov
push
sbb
insl
jle
mov
add
sub
mov
jbe
repnz
mov
in
or
lret
pushl
shr
inc
pop
nop
andb
jl
loopne
adc
shrl
stc
sbb
pop
orl
xor
inc
inc
inc
lret
ret
cmp
jnp
dec
pop
sbb
jecxz
rcrl
dec
jno
jp
sbb
push
and
push
aad
fdivrl
lock
movsl
movsb
sub
popf
mov
jecxz
dec
ret
iret
jnp
add
sbb
loopne
xchg
mov
and
mov
jno
fwait
ja
inc
push
add
adc
inc
jecxz
xor
outsb
jecxz
mov
out
jg
push
mov
sbb
mov
ret
mov
or
cs
mov
xor
pop
sti
or
push
dec
cmpsl
lods
repnz
adc
fldl
shrl
scas
lock
pop
push
push
movsl
lahf
add
mov
xor
jns
sbb
dec
inc
pop
mov
inc
dec
push
leave
sub
lods
outsb
insl
sti
fisubs
mov
es
fstl
leave
hlt
loope
sbb
stos
shlb
xchg
imul
enter
push
xor
lds
mov
shr
shl
cmpsb
inc
testl
xchg
push
fwait
adc
iret
push
cmp
fdivrp
lret
add
mov
lret
adc
sub
repz
add
pop
mov
jo
sbb
adc
orl
mov
mov
lcall
fmul
aas
cwtl
xchg
iret
inc
out
push
ds
aaa
les
inc
sbb
cli
push
mov
mov
les
or
test
mov
mov
mov
mov
cmp
outsl
and
enter
dec
jle
sahf
pushf
sbb
imul
jns
jbe
dec
cmp
jnp
imul
outsb
jb
push
dec
xchg
xchg
fld
sbb
shrb
testl
es
or
push
mov
pop
push
or
xchg
movsl
mov
mov
outsb
xor
cwtl
xchg
sub
fmull
clc
or
xlat
sti
test
xchg
sub
aad
push
push
loope
add
mov
in
mov
dec
pop
fmulp
sahf
and
pop
fildll
fdivrs
in
mov
mov
fidivrs
movsb
ficoml
dec
loope
pop
call
scas
das
mov
push
sbb
decl
dec
aad
push
iret
jmp
adc
fwait
addr16
js
shll
mov
add
jecxz
sahf
sti
cmp
xchg
inc
add
mov
repz
lods
test
imul
pop
sti
nop
ret
and
add
arpl
pop
lahf
movsl
cmpsl
push
decb
jp
insb
xchg
fsubs
in
icebp
iret
ss
lret
or
sti
imul
adc
rolb
subl
and
pop
repz
pushf
movsb
ret
sahf
cltd
cltd
xlat
dec
insb
mov
or
out
pop
cmp
inc
subb
inc
push
ds
loopne
cmp
pushf
insl
lds
js
push
sub
imul
mov
xor
in
fnstenv
js
jo
inc
aam
push
and
xorl
mov
cmp
out
das
dec
sti
andl
and
push
das
loop
scas
xchg
xchg
and
sbb
cmpsb
add
pop
test
into
in
fcoms
arpl
sub
ljmp
fnstenv
rorb
shrl
mov
aas
pop
sbb
pop
pop
js
aad
popf
pop
xor
xbegin
pop
xchg
ds
das
jmp
adc
mov
xor
and
std
imul
jae
test
test
pop
inc
pop
repz
sbb
aam
xor
push
imul
push
movsl
movsb
xlat
rorb
out
pop
scas
fs
cmp
insl
out
mov
outsl
fistps
out
dec
repnz
xor
mov
out
mov
mov
adc
and
dec
adc
pop
out
cmc
push
mov
jbe
cli
dec
pop
cli
pop
mov
mov
push
stc
inc
das
movsb
arpl
dec
popl
sub
mov
outsb
les
sbb
and
js
test
insl
ljmp
sub
pop
dec
repnz
in
pop
mov
xor
mov
cltd
mov
outsl
jp
dec
jae
push
shll
int3
popf
inc
int3
push
das
adcl
inc
jb
mov
push
test
mov
outsb
movsb
xchg
dec
adc
cld
pusha
mov
fnstsw
sbb
aam
into
xor
xorl
mov
adc
adc
mov
imul
out
sub
fisubl
xorps
rcll
inc
test
insb
jo
imul
out
pusha
sub
repnz
movsb
iret
mov
fadds
in
imul
fwait
cltd
mov
push
aam
jnp
mov
movd
xor
jae
lahf
mov
sub
out
push
jp
push
ret
or
and
jmp
xchg
and
xrelease
pop
jp
mov
jbe
pop
jge
loopne
sub
jo
push
or
or
push
xor
aaa
in
cmp
xor
mov
or
xchg
sub
add
gs
cld
out
dec
sub
scas
xchg
and
mov
and
and
mov
shlb
xor
rcr
fbld
ljmp
push
mov
sub
aad
in
xor
out
es
out
stc
pop
xchg
push
mov
repnz
push
xchg
xor
imul
shlb
sub
gs
push
xlat
int3
xlat
daa
bound
fadds
add
xor
push
add
ja
das
hlt
cmp
arpl
mov
cwtl
iret
imul
aaa
pop
in
sub
jg
inc
out
or
jne
lods
jg
pusha
xchg
mov
sbb
sub
call
fisttpll
lods
sub
xor
faddl
shlb
and
add
mov
sub
mov
mov
mov
scas
pop
shll
lods
clc
mov
out
jl
sub
in
mov
fisubrl
jnp
pop
test
shr
and
pushf
push
lret
xchg
outsl
int
aad
jo
pusha
inc
xor
or
pop
adc
aaa
push
jno
xchg
or
cli
xchg
or
sbb
addr16
cmp
fstpt
sahf
and
inc
cmp
xor
loopne
push
push
push
jg
movsl
adc
dec
xchg
ds
repnz
fxch
xchg
test
mov
lahf
mov
inc
stc
xorb
icebp
fnsave
repz
cmpsb
mov
push
xchg
dec
scas
movsb
stc
sub
pop
ds
shr
sbb
xchg
test
sti
fucomip
clc
or
pop
or
loopne
inc
xor
lods
cwtl
stos
sbb
ljmp
or
popa
and
test
or
cmc
loopne
test
sub
rorl
cld
jmp
stc
mov
aam
mov
nop
mov
mov
aam
stos
sub
push
arpl
cmp
push
into
pop
lods
lock
mov
dec
or
xor
push
inc
xor
dec
cmp
outsl
cmc
ret
int3
jp
imul
repz
fsubrs
mov
lods
hlt
hlt
mov
in
js
jns
mov
push
fcoml
fmul
jmp
pop
mov
es
and
repnz
sub
je
ljmp
xor
add
iret
repz
pushf
rcl
aad
jl
xor
repz
cwtl
out
lahf
mov
scas
mov
call
je
adc
jbe
mov
push
xchg
lods
dec
sub
scas
dec
and
mov
add
icebp
mov
and
test
ret
mov
subb
sarl
mov
fisubl
xchg
mov
push
test
jmp
push
dec
cmpsb
les
xor
repz
mov
sbb
sub
andb
lcall
xor
and
adc
or
add
xchg
xchg
cmp
cwtl
enter
or
mov
inc
rorl
push
aad
int
mov
cs
mov
inc
adc
push
mov
jg
inc
je
aaa
mov
adc
adc
ljmp
insl
adc
xchg
faddl
mov
xor
adc
in
lret
adc
dec
pop
adc
xor
or
repnz
test
or
pop
sub
nop
jl
mov
add
inc
cmp
push
out
lea
sbb
jle
ljmp
sbb
fnstsw
mov
and
jmp
scas
stos
and
adc
sub
mov
es
sub
mov
pop
leave
mov
jo
arpl
stos
jmp
or
cmp
bound
dec
push
and
cmpl
xchg
stos
jo
imul
sarb
ret
or
in
and
fdivrl
mov
sub
data16
inc
popa
inc
lcall
int
out
adc
sub
inc
cmpsb
psubsb
ret
enter
sbb
les
add
int
divl
mov
xchg
mov
ljmp
xor
pop
call
pop
enter
push
loope
in
mov
negl
jmp
inc
dec
iret
scas
inc
in
in
mov
jle
mov
sub
stos
dec
nop
clc
pop
lret
jle
arpl
mov
sub
push
mov
sub
loop
sarl
imul
xchg
lret
je
cltd
jne
cli
xchg
mov
xchg
ficoms
out
or
dec
and
sbb
ja
imul
mov
mov
test
jp
push
cmovg
cwtl
adc
int
unpcklps
sub
repz
sbb
jno
jmp
insb
cmp
imul
sub
dec
pop
xor
test
es
add
stos
aad
sub
rcll
std
jnp
push
bound
std
xchg
adc
or
int3
pop
cwtl
mov
mov
aas
shl
sbb
or
jge
pop
movsl
xchg
jmp
adc
arpl
xchg
ret
pop
cmp
or
repnz
in
adcb
mov
ds
out
movsl
dec
xchg
cmp
sub
loop
test
push
mov
test
mov
lods
iret
pop
push
sub
loopne
xchg
in
adc
fstps
xchg
and
lds
xchg
rorl
inc
cvtdq2ps
adc
pop
push
lds
out
pusha
pushf
shr
daa
inc
dec
add
sub
sbb
sbb
rorb
and
outsb
lea
iret
inc
movsl
push
rclb
in
xchg
push
cmp
xor
adc
jecxz
jecxz
iret
mov
xor
fstpl
mov
push
sub
jno
std
hlt
jmp
notl
adc
jo
mov
clc
insb
jo
mov
mov
and
sbb
aam
aad
jmp
loope
int
cmp
mov
stos
arpl
xchg
sbb
loope
xchg
rcrb
fsubrp
add
pop
nop
lret
test
xrelease
fnstsw
out
sbb
mov
test
xor
jle
pushf
outsl
inc
jp
push
cmp
push
in
adc
movsl
jbe
in
insl
mov
loopne
mov
push
fisttpll
pop
nop
popa
or
cld
mov
sbb
xor
mov
xor
ret
add
ds
add
scas
mov
cld
push
inc
mov
sahf
mov
push
data16
or
aaa
decl
out
add
sub
pop
mov
cmp
gs
fistps
and
sub
xlat
aad
mov
in
addr16
pop
dec
add
cmp
int3
xchg
xchg
lcall
cmp
dec
xor
inc
dec
out
and
push
faddl
leave
sub
test
xcrypt-ctr
cmpsl
lcall
pop
sbb
mov
lret
loopne
ss
xchg
mov
adc
popf
mov
cmp
xchg
movsb
and
sarl
loop
pop
pushl
cmp
leave
sbb
ljmp
orl
inc
nop
mov
pop
shlb
push
mov
cmp
push
xchg
in
jae
mov
shlb
push
repz
in
cmp
and
int
xchg
mov
arpl
fisubs
fiaddl
out
push
push
jle
mov
mov
cmpsl
cli
repz
inc
jnp
xchg
pop
dec
and
push
jle
xor
and
call
rolb
jge
jns
push
sub
cs
mov
add
fistl
jg
insb
int3
xor
leave
mov
xchg
and
xlat
test
shl
adcl
out
cmp
popa
sub
jle
inc
xor
push
mov
cld
jp
in
adc
dec
push
xor
data16
sti
les
cmove
push
aad
lods
in
test
or
jge
rcr
mov
daa
xorl
setp
and
sub
lea
dec
adc
mov
or
or
adc
imulb
xor
call
mov
in
fmulp
sbbl
pop
sar
fdecstp
adc
cmp
lods
sarb
dec
inc
dec
in
mov
data16
pop
fldcw
add
enter
jns
je
shll
popf
add
mov
cli
in
pop
jb
ret
lea
lcall
lret
cmp
aam
xor
push
das
xchg
ret
xchg
fwait
nop
jae
mov
js
sub
in
adc
mov
loope
std
mov
daa
pop
lock
aad
inc
rcr
imul
loopne
jo
mov
rcr
push
rcrb
push
and
push
xor
ljmp
pop
xor
test
repz
jl
cmpsb
mov
dec
xchg
jb
push
or
xchg
jle
mov
fcomps
push
mov
push
ss
xchg
push
pop
in
out
sub
frstor
and
lock
inc
std
decl
daa
xor
sub
dec
xorb
test
inc
cwtl
sahf
nop
addr16
pop
rorb
fdiv
push
scas
hlt
mul
sbb
lods
cmp
cmp
xor
adc
or
lock
test
mov
lds
pop
addl
js
mov
je
in
sub
sbb
jno
clc
or
test
sbb
sbb
sti
std
iret
jb
sub
rol
fmull
loopne
sahf
leave
mov
repz
pop
xchg
xchg
push
pop
push
mov
sub
mov
rcr
inc
sti
in
hlt
dec
or
mov
mov
sbb
fisttpl
cmp
push
mulb
arpl
aas
stos
mov
into
es
bound
dec
sub
fiadds
cmp
cmp
push
xor
icebp
push
push
aad
out
cmpsb
jecxz
stos
movsl
pushw
adc
outsb
dec
into
shlb
out
sahf
lea
addb
cmc
mov
jbe
ds
jb
scas
inc
mov
les
mov
cwtl
cmp
xor
mov
or
inc
mov
push
test
fcoms
sbb
cmp
aad
test
and
int3
out
sbb
push
xchg
mov
shl
dec
cltd
stos
jae
mov
jp
loopne
daa
sub
orl
add
cltd
push
push
or
mov
mov
shll
mov
sahf
cmpsb
js
ljmp
cmp
and
push
enter
insb
pop
adc
out
mov
jo
mov
cwtl
inc
adcl
push
push
leave
lret
das
sub
aad
dec
sbb
mov
int
pop
cltd
inc
ret
pop
mov
jb
push
mov
adc
iret
inc
mov
out
pop
rcll
aas
jns
push
les
andl
adc
les
shll
xchg
outsb
xchg
pop
dec
dec
pusha
jp
les
outsl
mov
add
sbb
push
adc
mov
push
dec
xchg
sbb
or
xchg
scas
pop
stc
pop
xchg
ss
push
cmp
je
mov
mov
sub
data16
xor
or
mov
dec
pop
adc
xchg
mov
lods
movsl
xchg
pop
popf
into
into
xchg
adc
and
xchg
sbb
insl
cld
stos
fs
idivb
cld
js,pt
movsb
or
loop
aaa
sbb
inc
cmp
or
mov
or
or
sub
popl
mov
add
cmp
add
mulb
aam
iret
sub
mov
xchg
in
lods
aam
xor
sbbb
jle
lret
mov
jno
push
jns
rcrl
sub
xor
lret
adc
push
lahf
cmp
ror
push
loop
and
loopne
aas
les
jecxz
jns
mov
gs
lahf
scas
jo
sub
cltd
enter
xor
pop
subl
inc
setnp
rcll
sahf
xchg
inc
mov
push
mov
mov
aad
in
xor
and
jb
rcl
in
dec
mov
push
and
adc
xchg
xchg
repz
aam
lods
or
or
sub
mull
addr16
lock
scas
jo,pt
jno
fdivs
leave
xchg
pushf
push
ret
jmp
rorl
int3
movsb
mov
mov
add
jecxz
in
test
cmpsl
mov
cmp
mov
adc
push
jl
push
mov
fidivrl
add
ficompl
dec
idivl
iret
xchg
enter
js
pop
out
sub
insb
jp
sbb
testl
insb
ficompl
int
jns
sub
or
arpl
cs
in
dec
push
les
cmc
sub
and
mov
scas
int
xor
cmp
fnstcw
xor
sbb
inc
sarb
mov
inc
cmp
inc
ret
mov
mov
pop
adc
sub
mov
int3
ljmp
pop
test
hlt
and
and
pop
inc
adc
cmpsb
pop
pushfw
scas
mov
loopne
lods
popf
or
aas
inc
or
sbb
ret
jle
stc
lods
rcll
dec
mov
fmulp
add
dec
xchg
das
mov
sbb
mov
addl
and
cmp
aas
pop
xorl
push
addl
xor
out
cmp
mov
stos
inc
jmp
sub
xchg
nop
unpckhps
imul
mov
sbb
and
push
jl
adc
xor
xor
test
es
xor
xchg
dec
es
call
jne
inc
gs
mov
loopne
or
jb
jp
cmpsb
dec
push
clc
or
mulb
lea
xchg
lahf
or
mov
add
mov
mov
inc
or
or
rolb
pop
or
sbb
xchg
xor
inc
xor
inc
inc
jb
movsl
das
and
mov
sub
or
pop
gs
scas
daa
icebp
xor
sbbb
outsb
xchg
test
test
orl
sbb
mov
pop
add
shl
add
sub
xor
pop
mov
test
cmp
insl
test
addr16
add
jge
inc
xor
sbb
leave
cltd
lds
cwtl
sub
mov
sbb
movsb
and
push
mov
loope
inc
ret
mov
add
daa
push
leave
insb
mov
push
into
mov
shll
xor
pop
xchg
les
xor
push
stos
outsl
lahf
rcr
imul
add
push
dec
adc
std
rorb
aad
xor
push
xchg
insl
dec
hlt
pushf
sub
mov
repz
lds
sbb
lret
cmc
add
inc
fdivrs
xor
adc
mov
data16
and
adc
pop
jl
ret
push
sbb
push
or
jmp
shrd
and
mov
imul
ss
sub
inc
insl
sub
pop
pop
xlat
mov
mov
fwait
js
mov
push
xor
mov
or
jae
pop
xchg
xchg
imul
fldl
outsl
jo
adc
and
lahf
scas
mov
int3
enter
push
aad
xlat
adc
xlat
movsb
in
enter
fiadds
xchg
in
push
xchg
leave
scas
mov
inc
mov
aam
repz
xchg
test
push
enter
cli
cmp
push
adc
mov
ljmp
lock
into
cmp
aam
jp
push
andl
in
or
mov
out
xchg
es
pop
je
dec
adc
dec
push
test
jg
es
sbb
daa
inc
enter
ja
jmp
lret
mov
and
dec
push
orb
popf
inc
fldenv
mov
sub
sbb
or
hlt
hlt
lock
pushf
xor
jns
sub
xor
fsubr
fs
not
inc
adc
gs
clc
mov
push
cmpsb
pusha
pop
imul
xor
aas
fstpt
fdivl
stos
cmp
shrl
cs
dec
repnz
cltd
mov
insl
jb
adc
inc
lods
mov
sbb
stos
xchg
dec
sbb
out
cli
mov
mov
imul
fdivrl
jae
out
sahf
out
rclb
adc
fwait
test
jb
in
jne
bnd
ret
repnz
jae
push
jno
or
and
call
mov
xchg
inc
jmp
mov
pop
or
popa
lahf
clc
mov
scas
mov
sbb
mov
roll
mov
adc
out
mov
jl,pt
adc
je
pop
inc
pop
and
push
cmp
and
lahf
cmp
jg
pop
jne
iret
pop
mov
fsubr
js
pop
nop
push
pop
xchg
jns
xchg
in
push
push
inc
fisubrs
lods
jmp
lret
ret
push
add
lret
imul
mov
jne
push
mov
inc
pop
std
cmp
sbb
cli
std
cmpsl
or
and
dec
rcr
idivl
xlat
das
ret
pop
sub
cmp
adc
and
push
insb
or
stos
mov
pop
mov
mov
cmpsb
jne
ret
mov
adc
xchg
dec
mov
jbe
mov
mov
sbbl
insl
icebp
dec
stos
icebp
or
mov
sub
es
ljmp
sub
std
or
pop
inc
dec
and
stos
jl
sbb
aam
push
mov
bound
scas
in
loop
cmp
jmp
sbb
xchg
push
popf
into
jle
iret
nop
jle
xor
repz
repnz
inc
leave
and
cmpsl
pop
inc
cmc
stos
bound
int3
mov
shl
jl
and
imul
insb
addb
inc
cmp
push
cmp
push
pop
movsl
or
shlb
xchg
xchg
sbb
pop
lods
je
in
mov
cli
push
sbb
xorb
cmpsl
mov
out
cmp
and
lds
sub
pusha
push
mov
and
outsb
xorl
push
loope
orb
mov
push
xacquire
xchg
pop
ss
popf
jnp
dec
cmc
xor
xor
mov
lcall
movsb
test
mov
ficomps
adc
ljmp
iret
ret
or
cmp
cmp
addr16
stc
mov
pop
imul
int3
dec
inc
test
push
add
rcr
popa
je
sti
xor
sbbb
loopne
push
mov
dec
lods
dec
add
xchg
imul
clc
pop
mov
pop
cwtl
rcr
or
mov
xor
pop
aam
iret
xchg
xor
push
cld
loope
shlb
call
popa
test
jb
ret
inc
sbb
add
jb
test
sub
popa
mov
cwtl
mull
jne
repz
aam
test
mov
adc
mov
add
pop
mov
stc
or
and
cmp
add
mov
scas
push
mov
cltd
jmp
mov
or
mov
idivl
xchg
push
and
jge
cmp
sbb
mov
or
in
lcall
fisubl
lea
xcrypt-cbc
cmpsl
aad
adc
ja
cmc
sbb
jp
cmp
sub
fimull
ret
cmp
cwtl
and
jae
and
push
sbb
mov
sbbb
jg
stos
mov
lds
repz
rolb
mull
push
icebp
enter
fisttpll
test
aas
dec
les
sub
push
adcb
sub
xor
outsl
push
outsb
push
xchg
and
fwait
or
sub
mov
cmc
xchg
lock
fistpll
push
sbb
loope
test
jb
push
outsb
loop
pop
xor
adc
inc
orl
jno
sbb
sbb
mov
xlat
ficomps
inc
push
xlat
inc
adc
out
dec
nop
inc
test
js
jne
push
jg
pop
test
sbb
adc
aas
mov
mov
stos
jmp
inc
add
mov
cmp
dec
mov
inc
and
and
or
dec
sub
adc
pop
or
pushl
jbe
inc
xchg
lods
xchg
jl
mov
push
push
mov
jl
loope
jno
dec
push
in
es
pop
dec
sbb
test
test
xchg
cmp
aam
dec
call
sbb
push
mov
test
push
ficoms
ret
aam
das
in
inc
loope
jnp
cltd
adc
or
mov
nop
inc
sbb
push
repnz
add
fcmove
xor
cmp
jg
sti
dec
leave
cwtl
cmpsb
xchg
cmp
pop
or
pop
or
pop
adc
mov
jb
hlt
outsb
dec
jecxz
adc
les
test
cmpsb
adc
sbb
sub
sbb
sbb
xlat
sub
loop
pop
xchg
jbe
pop
pop
and
std
loopne
incb
ljmp
mov
xchg
nop
add
mov
mov
ds
fimull
dec
lret
fisubs
xor
loope,pn
dec
inc
and
mov
pop
dec
mov
shl
jp
out
in
outsb
cwtl
mov
cmpsl
cmpsl
pop
cmp
into
and
mov
mov
add
cs
mov
pop
cmp
outsb
xchg
lds
mov
add
arpl
pop
aad
cmpsl
outsl
push
or
fildll
mov
cmp
dec
les
sub
lods
ret
stos
xchg
mov
fists
test
into
addl
jmp
insb
xor
dec
inc
dec
adc
ljmp
pcmpgtd
adc
sub
xchg
and
push
mov
xchg
ljmp
cmp
cmpb
out
mov
clc
ret
xlat
pop
or
mov
shlb
rcll
cltd
pop
in
jno
inc
mov
in
mov
ja
adc
sbb
xor
imul
daa
sub
push
jmp
xor
fimuls
jg
jb
aad
testb
cmp
nop
mov
fs
pop
xlat
sbbl
in
add
xor
xchg
cmp
xchg
sub
mov
xchg
shll
and
push
test
inc
jne
fs
scas
add
cld
lds
clc
jle
into
adc
add
scas
jp
push
jp
fstp
push
dec
push
in
inc
and
test
pop
mov
mov
das
inc
ds
repnz
arpl
arpl
mov
or
pushf
xchg
pop
int3
outsl
xchg
and
mov
jns
movb
in
push
movsl
add
add
sub
call
add
iret
push
into
shll
aas
imul
or
mov
cmp
incl
mov
and
mov
rol
cld
xor
bound
mov
rcl
and
cltd
mov
std
imul
mov
xchg
inc
iret
cmpsl
pop
inc
int
push
dec
ss
aad
out
and
mov
xchg
jle
xchg
shr
sbb
lods
loop
add
lea
ss
jmp
das
mov
jno
lcall
sbb
xchg
mov
mov
fiaddl
adcb
hlt
mov
je
dec
aas
add
cld
and
mov
add
into
dec
outsl
mov
out
mov
test
dec
mov
push
js
push
cmc
inc
icebp
nop
jnp
loope
dec
stc
xor
jnp
in
and
inc
shll
cmp
cmp
jecxz
stos
fists
mov
mov
out
lret
fcmove
fcoml
mov
xchg
mov
test
mov
xchg
dec
lods
push
pop
jmp
sarl
push
stos
rcrb
dec
fcompl
scas
mov
rolb
cmp
fwait
cwtl
cmpsl
xor
xchg
pop
xor
and
outsb
pop
and
jne
push
in
pop
addr16
sub
sbb
movsl
mov
sbb
mov
into
and
daa
gs
push
dec
jno
fcomp
testl
icebp
js
jo
sbb
dec
popa
or
int
inc
push
cmp
scas
xor
sbb
cmp
insb
inc
loope
add
ss
leave
jae
jno
add
pop
je
stos
xchg
call
lcall
jecxz
mov
jle
push
add
les
xchg
dec
xlat
mov
repnz
sbb
adc
push
push
cld
fcoml
cld
mov
pop
mov
jmp
dec
inc
movsb
or
jnp
xor
fdivrs
clc
dec
icebp
sahf
je
inc
in
out
xor
mov
dec
loopne
in
adc
sub
sbbl
push
ficomps
dec
cmc
pop
dec
movsl
popa
pop
out
jns
int
std
int3
cmp
ljmp
ret
jae
cltd
clc
aam
lret
lods
xor
xchg
ds
xor
push
ljmp
enter
fs
mov
jecxz
sti
dec
jb
test
clc
add
rcrb
xchg
inc
pop
push
ret
in
shrb
cmpsb
ret
clc
rcr
pop
dec
push
push
adc
sbb
add
rcrl
leave
xor
cmpsb
jb
inc
mov
ret
in
sub
xchg
pop
sbb
xchg
in
arpl
je
fistl
xchg
out
dec
jge
sub
js
cmp
cmpsb
xchg
mov
pusha
nop
jne
pop
xchg
je
in
mov
enter
xor
sbb
das
ljmp
leave
xor
sub
jp
push
pop
insb
pop
cmp
hlt
jae
push
jno
or
or
mov
daa
repnz
icebp
mov
ljmp
mov
xchg
jg
mov
or
xchg
adc
fadds
xlat
pop
inc
leave
sbb
adc
jno
loope
popf
push
inc
cmp
in
ljmp
rorl
lahf
lret
sahf
inc
lds
mov
fcompl
int3
pusha
mov
in
or
cmp
repz
xor
xorb
cmpsb
leave
push
movsl
adc
hlt
lret
xor
bound
in
cmp
jbe
cmp
clc
je
mov
lods
or
pop
jge
mov
stos
mov
lea
or
dec
lock
lret
xor
jle
push
dec
pop
cld
lods
cmc
jae
gs
and
and
lret
lahf
clc
loope
loop
mov
rclb
push
xor
daa
cmp
inc
in
push
jmp
cwtl
mov
addb
aaa
mov
repnz
leave
stc
cmc
hlt
mov
clc
lret
imul
xchg
lds
into
push
push
cwtl
mov
and
aad
mov
and
clc
jno
jns
adc
xchg
inc
adc
insl
xchg
int3
mov
out
push
push
adc
leave
adc
xor
mov
push
imul
lods
call
jbe
ret
or
lods
push
das
lahf
add
lret
pop
repnz
loopne
mov
mov
aam
and
repz
adc
add
daa
jmp
pop
daa
loope
inc
mov
pop
xor
inc
pop
sarb
and
adc
push
adc
push
sbb
js
imul
test
add
sbb
push
cmp
mov
mov
fcmovnb
mov
dec
jp
icebp
xor
sub
fidivrs
and
mov
and
mov
mov
pop
xchg
add
and
jnp
jns
stos
aad
movsb
push
mov
push
sbb
push
adc
xor
lret
mov
lret
sbb
inc
jbe
or
subl
mov
mov
std
push
pop
and
insb
incl
jae
jmp
add
xlat
pop
mov
mov
push
jo
add
and
popa
lcall
jne
push
and
xchg
mov
sbb
or
jmp
xor
daa
ret
mov
jns
ret
jae
adc
pop
pop
and
movsl
negb
pusha
nop
adc
es
mov
adc
add
pop
or
cwtl
cvtps2pd
flds
jo
add
jns
cmp
jge
loopne
add
cmp
cmc
inc
push
movsb
fidivl
addl
mov
mov
xchg
xchg
ret
fstps
pop
inc
sbb
cmp
das
adc
jo
in
cltd
pop
adc
not
aam
xlat
int
into
rolb
jg
mov
pop
cmp
sbb
or
dec
inc
jle
lret
ret
and
std
cli
jg
orb
jae
test
mov
test
shrb
dec
sarb
std
cld
pop
int
xchg
pop
cmp
sti
jl
ja
lock
mov
test
jo
inc
test
lcall
or
push
in
test
inc
outsl
faddl
in
repnz
inc
in
cmp
test
test
cltd
movsb
bound
shlb
mov
adc
rcll
jl
addr16
xor
leave
in
jge
mov
mov
dec
jb
or
outsl
push
adc
dec
lahf
test
insb
andl
jl
jnp
xor
xor
aaa
pop
cmp
xchg
leave
pop
jmp
pop
int3
aas
mov
and
or
out
cld
mov
mov
push
repz
xchg
jle
jno
pop
imul
push
add
inc
or
xor
fs
int
aaa
sbb
cmp
pop
hlt
and
in
imul
mov
mov
mov
inc
pop
adc
dec
rol
fidivl
pop
jecxz
or
mov
test
ds
xor
or
add
mov
shll
cmpsb
sbb
cmpsl
in
outsl
add
pop
sub
js
xchg
xor
push
insl
lahf
fisttpl
fwait
xor
ja
sub
outsl
pushf
xor
ljmp
jb
je
xor
cs
inc
fwait
cmp
ljmp
test
cs
push
movsb
ret
inc
sbb
cmp
cmpsb
or
jne
aam
fiaddl
cmc
jl
pushf
fwait
addr16
cwtl
jecxz
cli
in
imul
cmpsl
pop
sti
push
sub
fs
rep
bndstx
or
dec
fnstcw
adc
mov
cld
cmp
pop
jp
add
mov
sbb
cmpsl
add
fdivr
test
outsl
lods
addl
mov
into
mov
sub
push
jns
ljmp
jmp
cld
pop
xchg
bound
ja
cld
leave
mov
add
xchg
loopne
dec
add
xor
scas
push
repnz
sbb
fisubl
xor
mov
icebp
ds
cmpsb
daa
aad
or
psllw
adc
in
mov
bound
ss
ficompl
lods
std
in
mov
xor
jmp
sub
jb
ds
add
cmovle
or
popa
aaa
mov
repnz
mov
insl
mov
mov
jo
push
sbb
push
xor
xor
adc
sti
cmp
push
movsl
pusha
frstor
inc
cld
fimuls
mov
jnp
cli
jge
jecxz
test
and
jno
adc
fistpll
js
jae
add
shlb
pop
pop
callw
push
iret
cmpsl
ret
scas
fildl
cmp
icebp
dec
in
pop
out
sub
sbb
mov
fidivrl
inc
icebp
push
sbb
or
mov
mov
jl
aas
cmpsl
into
or
ds
aam
aaa
lds
xor
jp
out
pop
xlat
push
gs
cmc
pop
mov
mov
arpl
test
jmp
sahf
dec
mov
out
std
xchg
loope
lea
sub
subb
dec
sbb
lea
mov
test
sbb
cmpsb
mov
inc
adc
imul
pop
mov
ret
fdivr
jecxz
popa
lahf
add
dec
jb
cmpsl
sbb
mov
pop
add
cli
xchg
repz
push
xor
push
xor
pushf
jo
cmp
pop
arpl
jnp
mov
jecxz
add
inc
popf
cmpsb
call
add
ret
adc
mov
jp
fldt
jge
into
cld
sub
push
push
loope
adc
or
enter
cmp
pop
insl
in
nop
inc
and
fnstsw
push
pshufw
flds
shrb
xchg
loop
mov
and
popf
stc
pop
jae
xchg
mov
cltd
sbb
clc
push
cmp
mov
and
cli
int
out
hlt
fildl
inc
sbb
testl
repnz
es
dec
pop
mov
mov
out
dec
inc
pop
leave
jecxz
outsb
test
arpl
adc
push
cmp
cs
mov
bound
dec
iret
mulb
mov
das
cmp
sbb
lods
inc
jnp
dec
jo
jge
cmp
dec
or
pandn
push
cmp
test
pop
push
and
cwtl
pop
jns
add
or
lock
mov
imul
and
push
mov
stos
popf
jp
mov
mov
sarl
mov
add
cltd
jle
cmpsl
mov
xchg
mov
xor
xor
imul
loopne
add
test
xor
aam
jne
aaa
inc
mov
xchg
aam
pushf
sti
pop
mov
jbe
xchg
push
mov
cmp
rclb
cs
mov
pop
or
mov
jge
add
pushf
inc
and
adc
add
mov
inc
cmpsb
jns
mov
mov
movsl
popa
or
xlat
aad
rclb
dec
fsubrl
outsl
pop
lahf
pop
aas
jmp
mov
call
cs
test
jno
xor
jbe
dec
cmp
cltd
pop
mov
jns
sub
in
push
inc
xchg
xor
jno
ljmp
pop
and
shl
enter
test
push
pop
stos
mov
mov
negb
sbb
lret
xor
xchg
sti
pop
notl
mov
aam
xchg
jp
mov
fadd
fidivrs
fisubrl
cld
outsl
or
shll
shrb
lret
inc
mov
icebp
mov
dec
and
pushf
pop
stos
xlat
jecxz
pop
mov
or
jp
ret
ret
inc
leave
cmc
jle
or
jg
and
lahf
xor
or
mov
sub
fwait
sbb
std
pop
in
xchg
push
push
out
cli
sbb
pop
sbb
push
inc
xlat
mov
mov
mov
mov
inc
rcr
and
push
cmp
fisubrl
mov
mov
mov
cmp
cmp
dec
dec
loope
cmp
stc
add
in
sub
nop
sbb
mov
jne
xor
push
mov
sbb
sub
sub
pushf
int3
cld
sbb
dec
push
loop
popf
pop
pop
addr16
mov
popa
jnp
sub
dec
sbb
push
add
fcoml
mov
jno
mov
mov
cld
loopne
lret
les
andl
add
xor
add
mov
call
inc
popf
jecxz
scas
xor
jnp
xchg
and
mov
dec
adc
bound
or
push
shll
je
scas
or
lret
dec
sbb
cmp
xor
popa
ja
xchg
notl
jle
xchg
dec
xchg
in
divps
imul
scas
rcrl
inc
push
sbb
les
dec
sub
pop
xchg
jno
adc
ficoms
outsl
loopne
orb
mov
xor
or
insb
cmpsb
shll
negl
repnz
xor
push
popf
pop
inc
xchg
inc
jle
sub
leave
int
inc
mov
popa
sub
dec
xchg
pop
mov
imull
inc
adc
out
pop
in
notb
rorl
inc
add
dec
stos
or
in
test
push
push
insl
inc
mov
pop
mov
push
scas
mull
xchg
inc
lods
leave
in
shll
and
out
lods
jecxz
lea
in
repz
rcll
and
jp
bnd
sub
pop
in
lods
aad
adc
cmpsl
out
roll
dec
xchg
xchg
out
cmpsl
mov
adc
or
xchg
fs
push
leave
mov
xchg
xor
fs
pop
mov
xlat
jns
in
mov
insb
inc
mov
cmc
fwait
jo
loop
mov
int3
cmp
aam
test
mov
pop
outsb
add
lock
call
pop
andb
test
fadds
xchg
pop
cs
push
aad
xchg
insb
out
pop
int
pusha
mov
pop
dec
and
ljmp
cmp
imulb
add
push
sahf
or
imul
push
xchg
mov
fsubr
out
daa
pop
outsb
push
mov
xchg
add
test
syscall
jne
int
xor
sub
dec
and
sbb
mov
xchg
xchg
fcoml
xchg
jno
add
mov
addr16
into
ret
in
sub
arpl
and
popa
cltd
lret
js
stos
andl
lcall
jg
out
cmc
or
ret
mov
pusha
stos
cmp
xchg
sbb
add
hlt
push
leave
jns
js
in
cwtl
dec
inc
lods
push
lret
imul
inc
movl
push
push
push
sar
jae
jo
mov
int
sub
pop
test
xlat
cltd
test
xor
and
sub
pop
cwtl
lahf
jmp
call
in
or
fadd
pop
mov
pop
mov
jge
add
ds
loop
test
imul
mov
push
fs
pop
hlt
movsl
stc
sub
jbe
or
sahf
jmp
mov
or
push
aas
sbb
movsl
ret
push
xor
test
or
xor
ret
sub
nop
adc
push
cmpsl
cs
into
cmp
xchg
ret
mov
ror
jl
add
mov
xor
pop
inc
push
movsl
rcr
repnz
mov
aam
push
pop
push
pop
inc
jo
mov
dec
dec
mov
test
push
bound
mov
fsubrl
rcr
loop
sub
push
lock
pop
stc
push
inc
ret
or
roll
fdivs
clc
mov
std
in
mov
xchg
jle
dec
xchg
inc
or
xorb
push
nop
mov
enter
nop
add
dec
imul
sbb
jbe
mov
mov
xchg
in
outsb
add
aas
xchg
js
adc
fistps
sbb
mov
mov
push
cmp
push
call
xchg
aad
mov
in
cwtl
es
or
cwtl
sub
and
mov
cmp
add
dec
jnp
inc
jno
xchg
mov
cmpsb
or
scas
test
mov
or
cmpsb
pusha
push
insb
int3
push
pop
imulb
push
mov
jp
mov
adc
pop
dec
loopne
jp
div
push
out
add
aam
cmpsb
stc
push
jne
sbb
fsubrs
mov
call
mov
ljmp
mov
fstps
sbb
and
lods
or
push
fisubs
mov
mov
cmpsb
xor
mull
fwait
sti
clc
dec
push
xor
int
mov
popf
inc
mov
push
mov
int3
cmp
aam
ja
mov
arpl
adc
cmpsl
incb
or
mov
mov
sub
jnp
mov
mov
xor
insl
mov
mov
les
xor
movb
enter
sahf
xchg
cltd
fistpl
loopne
es
sub
xchg
add
add
sub
in
stos
mov
orb
mov
cmp
or
out
adc
lret
or
adc
pusha
loopne
fdivrl
add
fstl
push
aam
lods
mov
data16
adc
xchg
dec
outsl
or
dec
add
push
je
xor
mov
and
sbb
cs
push
dec
cmp
test
addb
pop
cli
cwtl
dec
aad
jg
loopne
imul
inc
rclb
ss
ror
imul
inc
lods
std
test
xor
jno
int
mov
fnstcw
pusha
pop
fadds
sbb
jb
mov
clc
pop
lods
cmp
mov
pop
je
mov
cmpsb
xchg
cmp
push
fisttpll
nop
mov
sub
lcall
movl
add
outsl
icebp
ljmp
hlt
fadd
jns
jno
mov
and
push
cmp
pusha
loope
clc
pop
out
push
ds
mov
sub
fisubl
push
pop
outsl
daa
test
inc
mov
in
inc
dec
lahf
xor
pop
fsubs
les
jge,pn
mov
jno
xor
fsubl
ror
pop
pop
ds
pop
add
jmp
xorb
lock
mov
mov
popf
repnz
cmp
jae
xchg
cmp
add
mov
gs
xor
add
adcb
xor
lds
and
push
cld
les
xor
xchg
in
push
loopne
push
lock
xchg
les
adc
push
push
sbb
jno
dec
jo
jae
jne
inc
dec
cmp
dec
xor
clc
je
inc
xor
cwtl
pop
enter
pop
out
mov
xor
rolb
pop
sub
in
sub
stos
xor
out
jle
idivb
movsb
adc
gs
fs
push
arpl
scas
xor
xlat
fcoml
shrb
lcall
add
out
sub
dec
push
mov
lahf
pop
les
subb
mov
adcl
cmpsl
sti
repz
sbb
cld
les
push
ljmp
dec
xchg
jge
jbe
xor
jp
outsb
js
js
gs
cmp
outsb
sahf
cmp
mov
arpl
aas
cmp
adc
daa
aas
cmp
imul
sbb
sbb
jmp
call
clc
and
adc
sbb
fisubl
jns
dec
add
sbb
stos
call
test
mov
pop
aas
xor
sbb
sbb
inc
xor
adc
into
xor
sbb
sbb
jmp
fwait
jge
mov
arpl
and
push
test
sub
icebp
inc
xorb
aad
fcompl
add
stos
xchg
ss
in
add
dec
fistpll
or
inc
cmp
daa
sub
push
mov
cmp
cld
dec
dec
fldl2e
out
stc
or
cmp
cli
cmp
jns
mov
cmp
mov
jbe
fs
xor
push
aaa
xchg
cli
repz
fnsave
mov
lret
push
sub
nop
and
and
or
ljmp
and
test
xor
inc
dec
movsl
ds
loope
adc
add
xor
das
mov
popa
mov
pop
mov
cmp
jge
lock
add
xchg
std
scas
mov
sub
xchg
adcl
cmp
and
das
jecxz
in
push
mov
jge
out
and
cmp
adc
das
rclb
mov
mov
push
outsl
xorb
jecxz
aaa
adc
test
fcoms
sarb
sbb
rcrb
push
adc
wbinvd
imul
adc
stos
add
fsubr
pop
movsb
les
sbb
iret
test
mov
pushf
mov
xchg
sub
adc
adc
and
mov
test
adc
push
std
out
out
fstps
out
adc
jb
jecxz
inc
idivl
icebp
outsb
pop
or
add
add
in
popf
jne
xor
outsl
ja
pushf
jecxz
out
cmp
mov
mov
fisttpl
mov
or
jae
addb
cmp
mov
loop
imull
lea
jb
popf
fimull
jns
push
mov
xor
cs
xor
out
inc
fstpt
mov
xchg
mov
and
xchg
inc
lds
mov
or
lahf
adc
mov
ss
pop
mov
adc
mov
push
jl
loop
jge
cmc
xchg
out
out
push
xor
push
enter
cmc
es
inc
and
adc
adcl
es
scas
pop
mov
pop
and
mov
in
mov
cmpsl
jg
xor
rorb
push
mov
or
jno
icebp
jno
push
ja
sbb
daa
in
ljmp
mov
mov
push
mov
std
inc
push
out
call
lcall
jg
adc
out
shl
loopne
call
pop
lahf
push
cmpsb
rorb
xor
push
pop
jo
inc
mov
in
lods
call
jp
or
mov
scas
test
outsb
mov
pop
dec
jmp
jle
adc
js
lds
adc
mov
or
mov
xor
and
loop
mov
adc
addr16
mov
or
xor
fwait
clc
movsl
stos
mov
sbbl
call
popa
pop
cmpsl
loop
fcoml
mov
xchg
cli
adc
cmp
lret
mov
lret
mov
movsl
call
or
adc
subb
inc
mov
inc
jbe
or
in
fistps
lea
lret
in
push
inc
stos
negl
jmp
sub
imul
add
icebp
mov
xchg
ljmp
cmp
xor
xchg
adc
sub
jno
or
outsb
out
nop
xchg
cwtl
into
inc
bound
in
stos
xchg
mov
or
mov
or
lcall
repnz
and
xchg
jae
push
inc
test
loope
xchg
push
shll
popf
mov
lahf
mov
xchg
add
fistpll
es
ret
ss
stos
inc
pop
jl
jg
push
add
mov
imul
test
adc
xchg
lods
mov
cmpsb
mov
mov
scas
insl
test
mov
push
lea
add
pop
push
sbb
mov
jns
fiaddl
outsb
negb
mov
leave
push
loopne
in
mov
hlt
mov
ds
xchg
dec
lds
mov
scas
imull
or
bswap
mov
fisubrs
loop
lret
xlat
addr16
xor
pop
mov
cmp
iret
mov
xchg
xchg
mov
dec
ret
push
cmp
jp
loopne
jno
inc
xor
das
mov
cmpsb
outsl
push
sarb
jp
push
jle
cmpsl
fcoml
push
aaa
mov
ret
pop
mov
add
cmp
pop
push
fdivs
jbe
mov
ljmp
icebp
jb,pn
mov
pop
mov
push
lcall
push
inc
mov
mov
clc
les
enter
xchg
sub
hlt
out
xor
push
popa
xor
jmp
xor
mov
shrb
setge
out
cltd
adc
push
cmp
xor
inc
sbb
cmc
xchg
sbb
sub
fbld
iret
lret
aad
ret
pop
insb
pop
sar
repnz
or
push
cmp
popf
lret
inc
loope
xlat
cmp
mov
lret
popa
test
jbe
mov
sbb
adc
dec
je
or
test
adc
lds
aas
sub
or
scas
hlt
dec
and
inc
sub
pop
mov
cmp
or
pop
rorb
dec
push
xchg
push
mov
xor
xor
or
pop
adc
shrl
into
das
cmp
mov
push
adc
test
fcoml
lea
inc
arpl
push
cwtl
add
mov
popa
xchg
sbb
je
int3
sbb
xchg
stc
cmp
dec
adc
push
lock
jae
popa
scas
addl
cmpsl
mov
subl
and
loope
fwait
dec
sub
add
mov
in
jle
testl
cmp
out
pop
loopne
mov
lock
sbb
mov
dec
lahf
bound
rolb
testb
jg
push
push
lds
mov
repz
ret
loopne
add
pushf
jle,pn
mov
sarl
cmp
outsl
xchg
mov
xor
test
pop
cltd
mov
push
xor
ret
add
and
inc
pop
mov
leave
popa
fisubrl
or
fs
sbb
scas
cmp
or
push
lds
iret
fxch
mov
mov
mov
cmp
push
sub
push
push
mov
mov
ss
pop
loope
or
into
pop
jp
sbb
and
insl
fstps
shl
or
ds
insb
fistl
es
adc
loop
pop
mov
jmp
lahf
call
out
pop
fstl
jle
mul
loop
inc
jmp
stc
jbe
stos
lret
cmpsl
cmovp
stos
jae
xor
mov
add
into
push
jp
gs
push
or
arpl
mov
and
add
fs
xor
sbb
cmp
push
aad
scas
add
dec
je
call
add
pop
sahf
test
popf
lock
cli
mov
mov
aaa
add
xchg
cmp
insb
mov
fbstp
clc
sub
cwtl
nop
xor
jno
xor
addr16
xchg
sub
or
push
mov
mov
jnp
fstp
pushf
xor
cmp
sbb
out
xor
orl
sti
add
add
xchg
test
pop
scas
cli
adc
dec
xchg
and
decb
push
pop
cmpsb
in
cmp
repnz
jno
stc
push
daa
lock
ss
mov
add
xlat
and
xor
stos
or
hlt
push
mov
lret
mov
dec
loope
pop
dec
pushf
xchg
icebp
lods
fcoms
xchg
push
add
mov
ljmp
test
sbb
dec
enter
lds
jg
lods
imul
scas
shlb
fists
data16
pop
roll
cs
fsubl
mov
lods
jne
imul
mov
xchg
add
push
sub
xor
psubsb
jle
icebp
mov
fdiv
es
cmc
push
fisubl
pop
sub
icebp
xchg
jo
outsb
ja
pop
shll
lock
ja
pop
mov
lahf
cmp
jl
dec
das
lods
ret
daa
movsb
cmpsl
test
stos
js
xchg
shrb
xchg
and
aad
sub
fnsave
std
loope
mov
into
ds
mov
hlt
icebp
xchg
lret
mov
adc
jg
out
shll
sbb
faddp
arpl
movsl
out
repnz
lods
sub
push
mov
mov
lea
pop
shl
iret
sub
cmpsb
ficompl
pusha
push
das
mov
mov
aas
xor
sub
lods
dec
mov
cmp
add
je
mov
fidivrs
adc
mov
dec
sub
daa
push
mov
in
adc
pop
adc
sbb
decb
andb
addl
sbb
push
pop
or
es
push
aad
pop
jno
mov
lds
mov
in
ret
add
in
and
pop
adc
jecxz
add
sub
fcompl
sub
cwtl
lret
cmp
and
cltd
enter
es
outsl
sub
mov
jns
in
sbb
mov
cmp
cmpsb
pop
adc
inc
inc
sbb
fmull
inc
lea
or
xchg
scas
aaa
cmp
dec
sub
jnp
sbb
imul
mov
lods
jg
push
inc
movsb
lret
scas
pop
mov
or
mov
mov
in
pop
mov
ljmp
sbb
adc
pop
dec
aam
jl
js
popf
rcl
cli
ja
in
cmp
xchg
xchg
dec
xchg
xor
js
pusha
inc
xchg
std
xor
dec
lcall
aas
sbb
lahf
out
sub
test
insl
push
and
mov
push
xor
mov
sahf
ret
jle
push
imul
mov
inc
push
scas
les
or
ss
xchg
ss
out
ja
mov
xchg
mov
movsb
movsb
adc
cmc
xchg
std
push
mov
push
push
push
fisubl
into
rcrl
sbb
and
mov
leave
subps
ret
pop
ret
xlat
push
xchg
adcl
inc
pusha
adc
lahf
push
inc
and
xchg
mov
push
sub
or
xchg
push
mov
jb
cmp
lret
clc
adc
mov
mov
lods
hlt
in
jo
cmp
sub
pushl
ljmp
mov
mov
in
dec
pusha
js
adc
dec
loope
mov
mov
xor
or
aas
dec
add
xchg
into
int3
mov
fcmovbe
mov
repz
adc
roll
insl
mov
cmc
scas
mov
or
outsl
stos
dec
cltd
pop
mov
insb
jp
pop
xor
mov
pop
in
rolb
jp
sti
add
mov
add
pop
clc
mov
test
into
cld
scas
scas
xor
popl
dec
jg
jg
mov
insb
add
shr
xor
aad
cmpb
and
jno
imul
inc
jle
mov
cld
negb
pop
daa
mov
in
test
dec
or
push
mov
lahf
mov
mov
xchg
data16
and
push
push
pop
pop
ftst
rolb
xrelease
mov
mov
xchg
data16
sub
inc
xchg
test
jg
mov
sbb
popf
lea
push
rclb
ret
inc
sub
jg
jo
jb
pop
push
adc
sub
adc
mov
clc
fidivrl
orl
inc
insl
sbb
ljmp
repnz
and
sbb
packssdw
scas
cwtl
je
ljmp
jl
add
leave
cmp
cmpsl
jb
add
sbb
fwait
clc
pop
cli
sub
subb
inc
scas
clc
mov
cmp
jo
out
mov
mov
in
xchg
mov
mov
push
jns
cmp
push
or
clc
jle
jae
stos
out
mov
shlb
movsb
lea
lret
shrl
aam
or
mov
ficompl
mov
cmc
mov
cltd
stc
scas
scas
incl
or
dec
int3
leave
in
xchg
lds
and
std
xcrypt-ofb
cmpsl
in
jae
icebp
loopne
push
stos
mov
lret
jecxz
iret
adc
fcmovnb
jno
loopne
jno
push
leave
jmp
ret
sarb
xor
push
sti
push
jmp
stos
dec
add
jnp
hlt
push
fnstcw
xchg
jno
ds
mov
mov
jp
mov
outsb
int3
push
mov
cli
movsb
mov
js
fs
xlat
dec
push
stos
mov
insl
pop
xlat
daa
mov
push
mov
xlat
lret
or
xlat
jecxz
cli
fwait
adc
and
mov
frstor
sub
loopne
jg
popf
in
fs
call
sbb
das
sub
rol
into
add
lahf
mov
nop
pop
cld
jge
mov
pop
icebp
sbb
sbb
or
in
iret
pop
and
ljmp
xor
notb
fwait
outsl
cmp
cwtl
cmp
jecxz
stos
push
mov
outsb
mov
lds
ret
sets
insb
fistl
mov
repz
lcall
mov
fdiv
cli
cld
cmpb
dec
dec
lds
cmp
dec
sbb
or
stos
daa
pop
jbe
sbb
in
push
in
sbb
xor
and
ror
mov
ja
out
les
out
pop
push
adc
popa
lds
or
repnz
and
and
jns
sbb
and
cmp
sub
insb
push
or
xchg
das
sbb
jae
add
shr
icebp
sbb
mov
mov
mov
or
ljmp
scas
std
pop
in
sbb
dec
pop
push
out
mov
bound
push
in
ljmp
bound
into
icebp
sub
adc
jle
jno
jg
cltd
mov
je
cmp
xor
in
cld
jb
in
dec
cmpsb
cld
jae
inc
push
cmp
cli
insb
dec
sarl
dec
mov
addl
jmp
rcr
sub
call
or
xchg
les
sbb
fs
out
pop
push
sub
or
lds
xchg
in
inc
and
push
loop
aas
in
push
popf
fstl
test
aaa
lds
mov
push
jbe
fiaddl
test
insl
test
es
aaa
icebp
dec
scas
mov
and
testl
shll
push
imul
jmp
outsl
das
cmp
cmp
or
cmp
sbb
mov
inc
or
mov
mov
daa
mov
jg
mov
push
or
cmpsb
jge
jge
adc
outsb
mov
iret
adc
xchg
pop
shll
dec
cmc
jo
mov
sbb
dec
inc
pushf
in
mov
repz
pop
mov
or
mov
movsb
xchg
xchg
icebp
syscall
cmp
leave
jg
push
lcall
inc
out
imul
out
sub
jae
mov
push
or
adc
mov
movsb
mov
icebp
clc
pop
aas
std
cmp
xor
out
hlt
sbb
inc
mov
ja
lahf
pop
je
jge
test
dec
pop
add
push
pop
mov
push
test
pop
dec
dec
xor
mov
mov
sbb
insb
push
popa
and
arpl
enter
push
cmp
push
mov
mov
or
mov
hlt
inc
dec
pop
and
shrb
pop
aas
mov
add
and
mov
sbb
mov
xchg
sub
or
or
cwtl
mov
push
orb
in
xchg
push
pop
inc
cmp
outsl
ja
adc
clc
inc
lods
out
and
xchg
sub
adc
scas
daa
inc
test
das
icebp
pop
repnz
popa
test
mov
push
pop
push
scas
loop
jg
repz
xchg
lahf
repnz
mov
xchg
aas
arpl
fucom
clc
ljmp
fs
into
or
cmp
call
pop
jecxz
mov
hlt
cmpsb
mov
fwait
nop
je
or
shlb
xor
test
ret
das
cld
ss
pushf
dec
pop
into
in
test
or
mov
or
test
loope
adc
jnp
cmp
xchg
push
movsl
dec
add
xor
scas
mov
mov
mov
lcall
sarl
push
rcrl
mov
jmp
enter
dec
popa
out
stos
cwtl
ss
ja
fcomp
push
mov
xlat
sub
pop
mov
fimull
ljmp
movsl
loopne
sub
aam
cmpsb
jg
sub
lret
add
push
fst
data16
cs
lret
lea
xor
mov
repnz
inc
pop
xor
jo
sbb
pushf
xor
jb
sub
sub
mov
xchg
loop
pop
outsb
push
notb
ljmp
push
inc
sbb
adc
jns
xchg
add
cmp
pop
ss
inc
les
fld
jne
sarb
scas
stos
fsts
das
add
stc
rorl
scas
sbbl
out
das
mov
cwtl
push
cs
es
adc
rcrb
cli
push
or
push
pop
cld
cwtl
lods
fimuls
hlt
xchg
jb
jae
inc
loop
cmp
push
sbb
cmp
insl
jno
stos
lret
pop
cmpsb
push
pop
lods
jne
xor
xchg
pushf
mov
jmp
add
sbb
sub
xchg
adc
outsb
push
popa
roll
out
hlt
xor
sub
xchg
push
sbb
call
or
xor
add
sbb
sti
jnp
in
lods
inc
and
sbb
mov
inc
pop
jnp
test
out
aad
mov
into
jbe
lret
in
sbbb
push
fwait
loop
pop
into
adc
lods
out
fsubrs
cmc
scas
inc
inc
push
pop
xor
mov
fimull
mov
clc
jp
adc
out
cltd
lcall
push
clc
cmpsl
lds
enter
inc
test
imul
and
pop
lock
xor
jl
idivb
mov
imul
or
jg
jp
sbb
jle
call
mov
in
ss
mov
push
sbb
xchg
loop
mov
xchg
sub
test
insb
mov
pop
mov
test
pop
xchg
dec
xchg
cmp
add
movsl
lock
mov
sub
inc
xor
mov
mov
lods
repz
cld
sub
adc
arpl
lock
xor
ret
inc
inc
xchg
dec
daa
cmpsl
inc
daa
ss
call
adc
ljmp
nop
ds
sbb
push
xor
xchg
lea
sbbl
fdivrl
pop
mov
orb
jne
sbbb
pop
aam
xlat
adc
fnstenv
lcall
arpl
popf
or
push
in
out
pop
cmp
pushf
mov
add
or
je
jmp
movb
inc
cmp
xor
pop
pushf
push
and
dec
sti
sub
arpl
scas
shrb
int
js
stos
aam
clc
mov
lahf
lret
aad
jle
inc
sbb
or
mov
inc
xor
movsb
lods
sbb
jns
and
dec
das
pop
shll
and
mov
cmpsl
ja
jbe
cli
call
addr16
jb
pusha
pushf
jo
push
and
lods
shlb
inc
test
pop
std
add
mov
cli
lcall
mov
push
pop
pop
or
lea
leave
outsb
sbb
dec
pop
sarl
mov
add
dec
popf
data16
notb
fnsave
mov
jge
ret
lock
sbb
enter
cmpsl
push
pop
jno
sbb
setno
loopne
dec
mov
jns
sub
mov
pop
decl
sbb
pop
loope
jmp
dec
pop
lahf
push
mov
xor
jmp
sub
xlat
cmp
cmpsb
shll
inc
xor
nop
data16
in
cmpsl
es
aaa
inc
pop
mov
icebp
adc
dec
inc
jb
or
and
lahf
jo
shrb
out
adc
adc
sub
orl
andb
sbb
push
add
sub
xchg
inc
mov
ja
test
jo
inc
rcl
rcrb
pop
aaa
pop
cmp
add
mov
into
sar
jecxz
dec
xor
lret
rclb
sbb
jmp
outsl
mov
pop
mov
sti
or
mov
icebp
into
rcrb
imul
iret
pop
nop
insl
cli
fisubrs
sub
mov
aaa
pushf
pusha
iret
xchg
inc
cmp
sub
sbb
call
cmp
mov
push
rcrl
ljmp
mov
adc
jnp
xor
pop
push
divl
repnz
test
xor
loop
loope
or
cmp
nop
lret
rclb
fcomi
loopne
aad
mov
shlb
jmp
add
cmp
or
sbb
xor
mov
sub
sti
test
cmpsl
addr16
inc
inc
sbb
adc
or
nop
adc
push
pop
shrl
sub
cmp
cld
ret
loope
out
jecxz
xor
mov
xchg
lock
push
push
sub
and
and
ds
arpl
popf
sarl
pusha
movsl
stos
xor
hlt
xor
mov
sbb
jmp
out
movsl
push
in
dec
xor
ret
or
jmp
push
shrb
dec
mov
iret
cmp
arpl
les
rcrl
rcrb
test
pop
or
mov
pop
shrb
jno
mov
xchg
int
sbb
jmp
rcrb
push
inc
pop
dec
clc
pop
sbb
or
jns
dec
mov
xchg
sahf
inc
mov
add
mov
and
sub
ret
adcl
cmp
adc
mov
push
jge
lcall
cmp
add
cmp
or
call
and
rcll
xchg
inc
xchg
repz
push
xor
mov
addb
mov
xor
aad
lea
int
lods
cmc
insb
addb
add
add
mov
or
sub
ret
stos
xchg
sub
xor
out
mov
push
stos
aam
xor
lcall
int
lret
jle
lret
fisubl
inc
shl
dec
inc
pop
je
jno
or
popf
xor
adc
int
repnz
mov
enter
and
sbb
arpl
jns
xor
iret
or
push
arpl
mov
mov
mov
sub
push
xor
cmp
loopne
inc
cli
mov
movsl
xchg
add
xor
std
push
pop
xchg
insb
lret
insb
aaa
mov
sbbl
push
sub
fstl
test
int
call
dec
scas
fwait
push
sbb
or
ljmp
mov
hlt
mov
mov
cmp
xchg
xor
cwtl
out
mov
imull
xlat
push
cld
into
push
sbb
inc
aas
test
sbbl
scas
xchg
dec
mov
mov
or
add
sub
inc
movsl
add
xor
repz
out
test
pop
shl
aas
pop
sbb
inc
cmp
jb
jo
call
in
das
aaa
aas
fs
push
mov
lret
push
inc
cli
je
stos
pop
mov
push
cmp
jge
xor
test
das
push
inc
insl
jns
cwtl
pop
inc
lret
jmp
mov
add
and
and
cld
dec
jle
aad
mov
mov
repnz
cmpsb
mov
icebp
aad
pop
mov
sbb
push
fstpt
das
data16
cltd
sbb
adc
iret
push
mov
dec
movsl
inc
rcrb
sub
icebp
xor
or
aam
xchg
push
lock
shlb
jmp
add
pop
cltd
mov
push
sbb
std
pop
xchg
xlat
addb
add
insb
imul
push
mov
dec
out
shlb
xor
sub
les
pop
jmp
inc
jp
lret
icebp
pop
mov
xchg
lock
mov
test
mov
js
out
pop
mov
int3
mov
xor
sub
negl
hlt
outsl
inc
xchg
sbb
push
das
xlat
out
scas
lret
pusha
inc
std
test
cmpsl
pop
stc
aam
dec
outsb
nop
inc
add
jmp
pusha
mov
push
imul
data16
push
pop
ds
pop
jbe
jb
pop
ficomps
in
jae
sarl
test
cli
mov
rorb
sub
fstps
shlb
movsb
pop
sbb
jno
or
mov
cmpsb
push
fisttpl
fucomi
sti
jmp
xchg
test
inc
ss
sbb
xorb
sub
gs
jne
xor
jmp
cltd
sub
ss
xchg
or
out
aad
repz
div
mov
lods
adc
shlb
mov
pop
and
adc
mov
adcl
mov
in
and
test
es
fcomip
push
push
lret
mov
sub
or
add
jno
sbb
xchg
cmpsl
lods
mov
mov
mov
or
popa
inc
jno
gs
sbb
jnp
icebp
pop
out
rorl
xchg
call
mov
jbe
inc
jp
add
sbb
insb
insb
outsl
add
pop
movl
rorl
push
das
add
xor
fists
pop
fistps
pop
sub
jb
mov
aaa
mov
cmc
mov
loop
scas
add
push
mov
dec
cmp
push
pushf
out
imul
cmp
or
imul
jecxz
cld
in
loop
mov
jnp
inc
addb
movsb
dec
dec
or
lcall
clc
cmp
pop
mov
pop
or
fwait
sbb
adc
mov
mov
mov
pushf
out
sbb
dec
mov
xor
imul
push
inc
aad
pop
sub
xor
pop
or
push
dec
lcall
sbb
sbb
xchg
sbb
dec
lods
cmpsl
enter
cmp
cmp
mov
push
lods
jl
mov
js
cld
push
icebp
cli
lcall
out
adc
dec
sub
ja
stos
js
bswap
mov
sbb
xchg
xchg
mov
fistl
stos
jg
mov
xchg
cmpsl
aaa
pop
arpl
or
xchg
lods
je
cmp
addl
sbb
adc
xor
popf
pop
mov
sbb
sub
idivl
cs
je
cld
aam
mov
xchg
cmc
or
movl
push
out
xor
test
adc
shl
lret
cmp
cltd
outsb
insl
cld
cmp
mov
call
and
push
in
xchg
or
inc
enter
and
outsl
jecxz
jnp
ss
inc
xchg
jns
fsubrs
sarb
jne
mov
sbb
mov
cmpsb
jge
fs
push
lods
ret
pop
rclb
mov
pop
and
sub
int
rolb
mov
movsl
push
push
arpl
das
fisubrl
sub
adc
icebp
pop
push
cmpsb
sbb
cmp
flds
or
fisttpl
in
aam
cmpsl
ss
out
push
outsb
and
sbb
mov
sti
xor
add
and
sti
ljmp
outsb
push
aaa
shrl
mov
imul
data16
loop
aam
lods
nop
or
pop
mov
xor
daa
test
push
lds
and
inc
cmpsb
cmpsl
movsb
sbb
mov
insl
jmp
adc
push
sti
xor
mov
or
cmp
add
shr
dec
stc
int
fdivl
adc
jp
movsb
xchg
dec
in
mov
arpl
cltd
fstpl
dec
ret
rclb
cmp
inc
inc
filds
inc
sbb
sub
insl
test
inc
cmpsl
popf
out
and
dec
or
outsb
cmpsb
sbb
sbb
xchg
sarb
xor
push
loope
out
sbb
insl
pop
adcl
enter
fcmovne
out
ret
lds
mov
push
sub
and
push
ja
push
cmc
icebp
xchg
and
mov
popf
lock
adc
push
and
inc
sub
add
rclb
clc
cld
insb
stc
xor
adc
jge
adc
into
mov
fs
jno
dec
jge
xchg
sbb
icebp
mov
sbb
imul
testl
test
pop
dec
imul
sub
aad
leave
xchg
cmpsb
push
scas
cmp
sbb
lcall
mov
mov
jo
inc
pop
mov
incb
sbb
push
std
cmp
xchg
clts
pop
or
pushf
pop
add
cmp
add
ror
dec
mov
xchg
fiaddl
pop
xor
cmpsl
adc
sbb
jne
cmpsb
lret
adcb
mov
mov
sub
icebp
ret
popa
les
test
loop
stos
imul
sub
adc
cmp
sub
repnz
out
jno
fcmovnb
pusha
dec
test
icebp
lods
jae
sbb
or
push
insl
xchg
or
dec
mov
xchg
ror
xlat
jge
and
lea
test
push
and
inc
addr16
inc
in
daa
imul
push
pop
fnstsw
push
add
pushf
xor
dec
es
sbb
inc
xchg
inc
das
popf
push
imul
out
sub
stos
loop
icebp
addr16
sbb
gs
push
cli
mov
push
xchg
add
sub
js
pop
es
push
stos
movsl
cmc
shrb
adc
jge
movsb
lds
hlt
push
mov
adc
adc
decb
scas
les
mov
mov
das
dec
mov
cs
and
fcompl
cltd
cmc
sbb
push
xchg
je
sti
loope
dec
or
fsubp
fwait
and
cmc
mov
and
jg
jmp
roll
stos
and
lds
cs
push
stc
movsl
out
mov
cmp
ds
jecxz
sbb
insb
dec
xor
in
add
out
and
jno
popf
movsl
xchg
mov
jno
daa
bound
data16
dec
jp
xchg
jg
inc
cs
mov
jecxz
mov
imul
cmp
pop
sub
adc
mov
sti
inc
aam
add
movsb
or
adc
add
sar
push
and
jg
inc
repnz
fbld
jecxz
addb
mov
xchg
xor
jecxz
jbe
fs
fbstp
outsb
cmp
mov
test
fimuls
xchg
pop
loope
mov
jne,pn
fwait
das
fwait
or
jb
mov
out
adc
lret
nop
push
out
test
jns
rorl
jnp
popa
mov
int3
loop
dec
jb
pop
movsl
jno
fisubrs
int
lahf
add
push
pop
or
cmp
sbb
dec
test
add
pop
mov
push
inc
fildll
scas
mov
out
rorl
mov
bound
rorl
dec
dec
jbe
loope
lahf
push
mov
xor
sbb
int
dec
sbb
daa
pop
sti
sbb
jp
sbbl
mov
xor
hlt
addl
inc
mov
or
js
xchg
jge
jbe
sub
popa
cwtl
pusha
pop
outsb
cmp
mov
mov
imul
mov
sbb
push
or
mov
mov
adc
in
je
jnp
pop
les
sbb
mov
or
addr16
clc
xchg
enter
push
sub
popf
or
mov
test
inc
je
or
push
xchg
jl
add
pop
enter
loopne
jne
ret
sbb
inc
and
loope
xor
add
xchg
imul
aam
cs
or
adc
and
mov
xchg
dec
or
jno
aam
dec
mov
xchg
insb
dec
dec
movsb
dec
dec
sub
jle
adc
inc
and
adc
scas
movsb
cli
out
fadds
into
fcoms
sbb
je
repz
xchg
prefetchwt1
xchg
test
sbb
lods
mov
inc
fiadds
gs
xlat
mov
in
push
js
xchg
push
jo
mov
inc
push
adc
aas
into
xchg
dec
popf
es
outsl
dec
insl
dec
cli
pop
popa
and
sti
scas
adc
ret
sub
push
shrb
xchg
push
pop
mov
push
adc
add
and
jl
mov
mov
fisubrl
out
sbb
jne
mov
jnp
mov
jle
sbb
pop
fistps
ret
rcll
sbb
movsl
cli
and
pop
test
cmp
lahf
repnz
shr
pop
adc
ja
push
scas
xchg
scas
fnstenv
outsl
fsub
bnd
pop
jnp
aas
push
das
ds
sti
lea
out
fsubr
js
shlb
out
push
add
ftst
iret
mov
and
mov
loop
xchg
testb
ds
sti
lret
es
or
cwtl
ficomps
mov
dec
pusha
pop
or
adc
mov
or
movsl
jae
imul
dec
mov
jge
push
je,pn
push
clc
rcll
xchg
xchg
int3
mov
add
pop
jne
insl
xchg
jnp
or
xor
sbb
and
mov
scas
sub
push
cmpsl
ud2
ficoms
mov
and
mov
jmp
and
push
mov
adc
dec
mov
pop
fsubp
push
lret
fs
ljmp
and
or
sbb
push
fstenv
jae
ret
jb
or
adc
sub
and
mov
clc
mov
mov
dec
sbb
leave
pop
cmc
inc
jge
sub
addl
sub
xorl
push
insl
mov
test
cmp
dec
lea
jne
or
adc
stos
test
pop
mov
lds
inc
pop
imul
xor
jb
dec
pop
fiaddl
cmp
xor
stos
stos
adc
stos
add
push
and
push
dec
adc
jo
push
fwait
ja
jg
and
jmp
imul
jae
mov
push
rcrl
push
call
data16
mov
lea
push
sbb
mov
sbb
stos
imulb
fsubrp
lret
lahf
cmp
mov
orl
out
lods
cmp
xchg
fiadds
xor
pop
push
pop
loope
cmp
inc
insb
sbb
and
das
fsubrs
scas
xor
jle
ror
cmp
sbb
sarb
lock
jmp
pusha
dec
add
sbb
push
adc
lock
xorb
inc
jle
js
adc
push
bound
stc
data16
movsl
xchg
dec
js
and
aad
cmpsb
push
xor
enter
cld
push
pushf
popf
pop
dec
mov
dec
dec
jle
ss
loop
lcall
cmp
call
mov
mov
cmpb
leave
rcrl
pop
fcomp
mov
imul
dec
jmp
inc
xchg
inc
dec
pop
popa
adc
addb
xchg
jg
sub
mov
jecxz
pop
in
sti
enter
ss
aam
sub
cmp
and
rcl
lock
pop
sarl
mov
and
sub
add
add
aam
mov
fpatan
xor
cmp
sub
xchg
stc
adc
out
stos
jne
cs
add
push
mov
xor
adc
loop
push
je
xor
dec
aad
mov
and
or
fnsave
inc
ljmp
jge
stc
imul
jne
inc
adc
mov
push
xchg
xchg
imull
subb
cmpsb
hlt
jae
xor
mov
out
add
imul
js
stos
mov
enter
adc
movsb
scas
push
jae
iret
test
jae
push
xor
mov
repz
sahf
add
mov
stc
mov
or
xchg
dec
xchg
rcrb
shrb
sarb
push
cwtl
dec
dec
rcrb
clc
mov
fisttps
nop
repz
mov
bound
std
stos
and
int
cmp
push
xchg
dec
cmpsb
sbb
push
adc
and
test
xor
sbb
dec
or
or
mov
xchg
mov
aaa
push
inc
inc
dec
fnstcw
pop
ffreep
decl
test
or
and
add
sub
dec
mov
cli
cmp
scas
or
lret
jmp
xor
test
mov
adc
int3
int3
mov
mov
adc
cmp
xchg
lock
add
lods
dec
add
push
cmp
sub
or
adc
inc
jne
fcompl
adc
inc
cmp
leave
jnp
and
sub
jmp
mov
popf
test
out
inc
stc
sbb
mov
sti
and
pop
dec
bound
cltd
push
push
sbb
xor
dec
nop
xchg
inc
pop
mov
jmp
xchg
sub
mov
mov
adc
cmp
ss
cmc
test
cltd
loopne
jge
imul
jnp
test
and
mov
ds
jmp
mov
shl
or
push
fldcw
loop
nop
pop
xchg
xchg
inc
jo
addb
fsubr
xor
imul
scas
adc
fsubl
imul
jnp
inc
loop
adc
xor
jl
xchg
repz
xor
jbe
aad
mov
jne
cmp
adc
or
sbb
xchg
pop
adc
inc
adc
jmp
jb
leave
scas
rcrl
cld
add
jnp
xchg
add
cltd
mov
sub
lods
mov
jmp
imul
jae
movntq
cltd
sti
mov
call
cmp
push
sub
je
xchg
jne
xchg
ja
das
mov
mov
cmp
and
push
xor
push
push
and
pop
ss
and
repnz
cmp
xor
aaa
mov
jp
sbb
fcoml
incb
cli
adc
icebp
or
push
or
inc
xor
jbe
cli
repnz
push
ljmp
sub
xchg
mulb
into
ds
testl
dec
mov
ja
push
repz
xor
stos
xchg
xchg
push
in
into
repz
mov
xor
dec
ljmp
adc
in
js
mov
arpl
dec
mov
daa
fcomip
out
pop
sbb
mov
sub
and
aad
pushf
fnsave
jg
cmpsl
out
lea
js
shrb
sbb
shll
movsl
fdivr
lock
xlat
add
xchg
scas
in
movsb
icebp
ret
jns
test
js
scas
jne
in
xchg
jb
push
nop
xchg
and
lahf
sbb
fadds
sub
shrb
pop
int3
clc
fisubs
mov
push
pop
pusha
fucom
adc
adc
imul
and
push
daa
pop
cwtl
and
sbb
ds
insl
repnz
imul
call
add
ljmp
ret
pop
sti
mov
ljmp
or
mov
mov
lret
mov
sti
mov
mov
sti
sbb
int3
xor
loop
pop
fnsave
cmp
mov
inc
push
loope
sub
xor
and
into
jno
fdivs
xor
xlat
cmc
icebp
outsb
std
mov
out
xlat
cmpsl
push
adc
data16
outsl
dec
adc
js
ret
enter
pop
fs
dec
call
pop
sbb
not
popf
icebp
movsl
shl
or
outsl
adc
cmp
sbb
lret
pop
dec
sub
decb
fisubs
cld
pop
pop
jbe
add
aaa
xlat
int
mov
addl
and
cmpsl
cwtl
pop
addr16
add
out
add
popf
movsl
cli
out
sahf
xchg
jb
test
add
mov
cltd
cmp
callw
loope
sub
lcall
xchg
xchg
mov
loop
outsl
sbb
push
jmp
repz
shll
sub
inc
mov
mov
popf
jecxz
or
sbb
ds
les
xor
adc
rcrl
dec
xor
pusha
outsb
enter
and
jbe
adc
loop
adc
int3
mov
repz
sbb
loop
sarl
addr16
shlb
addb
sub
push
addr16
push
fdiv
pusha
test
insb
xchg
lret
nop
incl
fisubrl
push
into
add
sub
sti
inc
pop
notl
and
add
orb
jo
pushf
lret
ljmp
test
adc
ss
push
mov
mov
outsl
jmp
cmp
xor
jmp
das
loopne
pop
xor
mov
daa
push
enter
add
pop
dec
ds
shrl
cmp
loop
test
sub
mov
mov
adc
sbb
dec
pop
jnp
mov
cs
mov
jp
inc
jl
inc
fisttpl
out
cli
xchg
cltd
adc
pop
test
shlb
popa
inc
inc
inc
xor
mov
mov
iret
ret
mov
mov
pop
hlt
inc
daa
outsl
movsb
test
push
push
mov
cli
push
sub
dec
cli
mov
pop
stos
imul
frstor
push
arpl
adc
push
and
addr16
insl
xor
xorb
fdivrl
sti
cwtl
add
fildll
inc
mov
mov
and
or
and
es
inc
add
cltd
jle,pn
lcall
xor
or
cmova
jns
adc
or
xor
push
mov
xchg
sub
mov
and
xor
fwait
mov
stos
cmpw
sub
xchg
decl
pop
loopne
out
cs
ds
xchg
jns
sbb
jge
les
add
insl
jmp
pusha
xorl
out
xchg
and
xchg
fwait
mov
adc
mov
loopne
daa
pop
neg
xchg
pop
adc
mov
sbb
pop
clc
or
test
add
cld
out
jne
mov
das
xchg
cmp
xor
mov
xchg
push
shrl
aam
pop
jno
rclb
pop
leave
push
dec
aad
jp
jo
pop
cmp
add
bound
dec
cmc
and
or
pop
cmp
rorb
addb
orb
rcll
mov
push
add
mov
insl
lock
rcrb
add
jmp
sub
cmp
popf
test
jl
add
xor
pop
fbstp
cmpl
fnstenv
inc
nop
aad
mov
call
jg
scas
mov
cmp
lahf
imul
insb
add
ja
add
leave
pusha
mov
js
aad
adc
mov
push
mov
adcb
inc
das
push
int
pop
gs
add
dec
cmpsl
mov
aam
inc
out
insb
dec
mov
and
into
mov
add
inc
push
xor
scas
lods
sub
pushf
insb
out
mov
bound
jecxz
cmp
inc
dec
iret
adc
mov
stos
out
inc
push
shl
cmpsb
frstor
out
int
xchg
shrl
shrl
loope
jmp
into
fmul
fmuls
imul
popf
or
jae
push
mov
inc
sbb
out
add
pop
xchg
into
data16
add
aad
push
mov
outsl
pop
ss
imul
push
push
dec
dec
xchg
vmulsd
push
cmp
outsl
add
xchg
inc
inc
xor
loope
out
sub
stos
or
adc
cmpsb
pop
stos
clc
jnp
stos
sub
jge
mov
inc
inc
push
mov
mov
clc
fstl
out
adc
fbld
pop
mov
dec
out
pop
pop
mov
andl
mov
insl
cwtl
or
loop
dec
and
out
xchg
lods
ficoml
sbb
ret
mov
jno
or
pusha
mov
pop
add
mov
pop
jl
adc
test
cmpsl
cltd
in
cs
cmp
dec
out
sub
fcoml
pop
leave
loopne
test
push
jl
fimull
sbb
movsl
gs
aaa
mov
fsubr
ja
pop
xor
scas
pop
cmc
jns
inc
adc
and
adc
dec
in
repnz
outsl
adc
jb
sub
mov
add
sub
push
ret
popa
ret
std
imul
mov
pop
mov
push
jle
jbe
xor
aam
push
push
scas
fists
cmp
xchg
cmp
outsl
pop
sub
jno
pop
and
jmp
lods
movsb
push
pop
aaa
sti
jmp
mov
and
repz
dec
pop
fiaddl
add
push
mov
sbb
xchg
xor
ss
cmp
sbb
imul
in
psubusb
xlat
nop
stc
fldt
sub
pop
push
xchg
mov
mov
pusha
xchg
subl
mov
std
push
jmp
fsubs
mov
cmp
pop
push
cs
test
push
pop
xchg
xchg
stos
xchg
movsb
mov
xchg
out
dec
jl
out
pushf
mov
add
movsl
mov
subb
rcl
and
js
or
push
xchg
loopne
cmp
loopne
sub
adcb
and
jno
push
jo
mov
fnstsw
cltd
ss
outsl
testl
pop
movsb
es
out
dec
negb
xchg
adc
das
out
movsb
ljmp
mov
scas
adc
call
jo
sub
push
and
xchg
xchg
sarb
in
test
dec
push
add
mov
sti
push
cli
inc
test
ljmp
test
jbe
push
adc
adc
add
mov
stos
das
push
pop
movl
aad
cs
sbb
je
in
sahf
and
shlb
xor
ja
adc
fdivrl
subl
push
mov
subb
and
or
les
dec
data16
inc
in
cmp
jnp
icebp
add
mov
mov
fistpll
pop
addr16
push
lods
mov
adc
daa
sbb
jl
inc
and
imul
cmp
cli
ds
les
scas
xor
lcall
je
sub
insl
add
or
and
lock
sub
mov
push
sub
pusha
mov
shrb
and
test
data16
ljmp
mov
or
test
frstor
cmp
inc
int
dec
mov
mov
cmp
aam
mov
shll
lret
sbb
cld
sarb
stc
push
outsb
in
add
or
mov
push
scas
test
hlt
lcallw
pop
loope
xor
insl
jge
pop
movsl
mov
notb
pop
jno
inc
mov
cmc
mov
lret
cmp
mov
cmpsl
or
repz
lock
into
mov
mov
or
out
xchg
cld
out
xchg
insb
sbb
nop
out
insl
or
push
pop
arpl
sub
push
das
pop
insb
sub
scas
adc
mov
hlt
mov
pop
or
bound
clc
xor
pushf
dec
js
mov
adc
mov
je
pop
and
fildll
lods
mov
lea
aad
xchg
sub
cmpsb
sub
mov
call
inc
ja
jmp
pusha
jae
out
sub
daa
push
add
dec
and
sbb
das
or
sbb
daa
out
inc
inc
into
imul
jnp
mov
and
jp
jp
movl
jecxz
cld
xor
fwait
jns
jp
into
or
or
jge
push
pushf
rcrl
mov
adc
lods
es
test
or
sub
cltd
push
add
subb
sbb
jmp
aam
xor
inc
gs
add
push
mov
out
dec
hlt
dec
dec
in
es
in
push
push
cwtl
push
cmpsb
rcr
fneni(8087
push
cli
mull
add
mov
pop
negl
in
xchg
lcall
push
stc
adc
frstor
cmp
cmp
mov
jle
mov
jbe
test
lcall
mov
pop
and
mov
jne
test
sbb
xchg
inc
popf
lods
cmc
mov
and
hlt
mov
les
pop
inc
adc
or
jo
and
or
sub
sub
inc
and
push
xchg
notl
or
icebp
inc
aad
jae
leave
fcompl
inc
scas
dec
movsl
jns
or
lds
ret
mov
loop
xor
mov
cli
push
les
in
xor
mov
and
jmp
dec
cmp
xor
cmp
sub
pop
repz
out
add
test
das
mov
cwtl
cmp
sti
add
adc
dec
and
jl
into
mov
push
push
push
in
insl
add
inc
and
int3
pop
int
icebp
cmp
testb
or
insb
lea
in
insl
int
sub
dec
stos
sbb
imul
mov
push
lret
ljmp
aad
push
dec
notb
ja
lock
fwait
in
test
mov
stos
into
pop
ja
out
mov
inc
and
loop
push
jmp
add
push
xchg
mov
jl
stos
loop
add
mov
push
mov
in
jno
in
push
dec
sahf
stc
ror
lods
dec
cmpb
insl
jmp
xchg
mov
lods
mov
pop
jns
mov
and
xchg
sbb
xor
stc
xor
dec
sub
roll
add
dec
jle
dec
xorb
mov
and
mov
insb
imul
push
adc
xor
fucomp
aam
les
rorb
inc
or
mov
idivb
aam
mov
out
iret
sbb
fsubrl
and
fwait
loopne
in
arpl
cmpsb
jl
imul
stos
gs
mov
lret
loop
movsb
rcr
aas
mov
inc
in
and
and
pop
jmp
out
mov
inc
rcl
pop
xchg
inc
and
and
dec
cmpsb
xchg
idivl
xor
jo
cmpsb
push
cltd
loop
les
mov
cmpsb
or
lods
inc
leave
cmp
inc
fistpll
iret
loope
pop
jp
repnz
rolb
xchg
dec
push
addr16
sbb
rclb
xchg
xor
sub
pop
jbe
out
ljmp
js
nop
push
aas
and
xchg
lock
aam
mov
xor
je
pushf
jmp
add
jnp
icebp
mov
xor
icebp
pop
push
jno
popf
aam
jno
sbb
xchg
mov
cwtl
mov
jnp
pop
shrl
in
inc
int3
xor
ljmp
lret
fs
mov
pop
push
sbb
or
mulb
push
and
clc
scas
insl
pop
push
daa
mov
mov
scas
loop
dec
push
cmpsb
scas
stc
pop
outsb
or
xor
call
je
movsb
push
movmskps
mov
int
pop
bt
jg
sub
js
adcl
xorl
pop
add
adc
addb
sub
mov
data16
sub
fxch
loope
xchg
jg
add
mov
adc
adc
inc
ffree
cmp
int
mov
and
bound
sub
out
xor
push
add
int
mov
pushf
andl
push
addr16
xchg
sbb
sbb
or
inc
add
pop
xchg
lods
mov
daa
cmpsl
dec
movsl
dec
fidivs
mov
pop
mov
cmp
rclb
xor
in
repnz
rcl
fisubrl
or
pop
pop
rcl
stc
dec
mov
jbe
aam
in
scas
daa
call
fldcw
push
aas
fdivrl
mov
iret
sbb
fimull
mov
mov
xor
icebp
xor
rcll
out
enter
xchg
xchg
mov
int
jge
icebp
dec
pushf
jb
popa
xorb
sti
cmp
and
div
test
dec
jne
pop
dec
add
aad
dec
xor
mov
addr16
push
dec
jl
mov
or
cmp
inc
sbbl
les
dec
dec
ret
loope
shlb
or
pop
mov
mov
jnp
inc
pop
sbb
pushf
divl
cli
or
mov
test
js
lahf
lods
loope
jl
bswap
dec
pusha
adc
shrl
pop
adc
xchg
dec
orb
into
enter
shr
int3
lahf
sbb
gs
aam
lret
adc
sub
test
arpl
sbb
inc
fimull
andl
cld
mov
or
rol
lahf
int3
repz
adc
xor
mov
push
inc
loopne
cmp
jg
ss
out
jmp
xor
add
sbb
adc
out
push
xor
add
mov
push
add
ljmp
or
fisttpll
aaa
outsl
dec
push
sbb
cmc
jge
je
fidivl
or
pop
test
les
pop
es
cli
xlat
pusha
xchg
push
sbb
xor
mov
pop
lods
mov
aas
add
stos
add
ror
fwait
sub
sub
data16
mov
or
idivl
jge
popa
pushf
push
popf
movsb
xor
aad
mov
cmp
add
pop
pop
iret
cwtl
cs
loop
ja
or
inc
scas
scas
daa
dec
push
fsubs
jns
in
sti
mov
add
mov
and
outsb
mov
sub
je
fisttpl
sub
fstl
inc
adc
dec
or
outsb
cmpsb
sbb
sbb
mov
inc
popa
arpl
xchg
clc
adc
into
cmp
pop
out
call
and
ljmp
jne
xor
icebp
xlat
outsb
mov
jg
mov
sbb
data16
lds
jl
push
ror
mov
mov
or
addr16
arpl
push
icebp
pop
xor
cmp
rorb
mov
dec
jge
lret
jl
lods
in
xchg
mov
sahf
cmp
aad
pop
int
ficomps
loopne
mov
sub
shl
push
popf
xor
jg
cmp
lahf
add
icebp
js
fs
sbb
sbb
pusha
mov
arpl
loope
out
and
aas
frstor
push
test
fistl
pushl
imul
aas
insl
mov
xor
xor
cwtl
mov
aad
lock
cmpsb
push
dec
arpl
pop
push
sbb
mov
jbe
add
repz
ljmp
sub
pop
push
sbb
xlat
push
jno
inc
inc
lahf
repz
mov
inc
stos
mov
pop
xchg
inc
add
test
dec
or
gs
es
jae
xchg
pop
push
xor
iret
and
mov
lcall
adc
push
iret
test
aad
sub
mov
stos
call
inc
adc
stc
dec
push
imull
add
xchg
jno
nop
mov
mov
dec
imul
or
in
cltd
int3
shl
ljmp
pop
xor
xchg
aam
cmc
sti
pop
or
and
add
cmp
iret
in
mov
jo
dec
outsb
jecxz
xchg
xor
pop
ja
or
hlt
sti
push
pop
lods
push
ljmp
lds
int3
insl
adc
imul
xlat
add
cmpsb
loopne
sub
hlt
jnp
lods
cmp
jmp
or
loopne
dec
call
loop
pop
pusha
fistl
push
aas
lods
and
inc
cmp
cmpsb
cmpsb
hlt
cwtl
cmp
sbb
mov
xor
ja
shr
xchg
push
lds
leave
das
out
sbb
sbb
movsl
push
pop
stos
test
daa
sub
cmp
jbe
mov
insl
stos
mov
fbld
xor
xchg
dec
push
mov
lret
xadd
cmpsb
fwait
pop
and
push
loope
pop
sub
push
cmp
lcall
movsb
xchg
leave
xchg
stc
adc
mov
stc
or
popa
dec
cltd
add
xchg
add
testl
sbb
mov
stc
jmp
push
mov
lea
xchg
or
lcall
push
outsl
dec
mov
clc
flds
movsl
jecxz
jmp
mov
lds
push
iret
outsl
mov
mov
mov
cmp
lds
xchg
sbb
dec
sahf
push
rorl
int
push
fdivl
lods
xchg
lock
jecxz
fldl
les
mov
nop
nop
fsubs
hlt
pop
mov
push
sub
ja
lahf
jno
xchg
es
adc
or
jp
push
scas
mov
inc
sub
jecxz
adc
pop
sub
clc
test
xor
adc
pop
sbb
pusha
out
inc
xchg
xor
pop
adc
adc
es
mov
inc
arpl
adc
iret
mov
or
shr
cmp
push
bound
or
arpl
movsl
add
and
adc
test
sbb
test
les
stos
shl
in
in
jb
adc
lods
or
movzbl
add
jbe
sbb
pop
cmp
addr16
sbb
push
pop
outsb
mov
lods
outsb
jb
pop
add
scas
pavgb
lea
out
cmp
jae
and
mov
cli
xlat
fsubrs
cs
aad
push
jns
ja
test
xchg
pop
int3
sbb
mov
arpl
data16
xchg
in
int3
cmpb
xchg
fmuls
dec
pusha
cmp
jl
xorl
in
mov
sbbb
insb
adc
jmp
bnd
insl
xchg
mov
aam
sbb
dec
repnz
aas
pushf
adc
testb
adcl
stos
or
popf
inc
cmpsl
lds
lret
in
push
dec
push
sub
mov
icebp
jb
lcall
out
xchg
fmuls
into
mov
fistl
es
push
negl
mov
fcomi
sbb
sub
xchg
mov
jl
pop
cmp
and
movsb
aam
and
test
cmp
mov
push
sar
ljmp
mov
test
popw
jbe
shlb
and
sub
dec
in
ja
out
inc
mov
aas
loop
in
arpl
dec
pop
adc
arpl
es
sub
mov
mov
iret
push
lock
or
or
xchg
xchg
loop
das
leave
xlat
and
adcb
lods
mov
adc
xor
in
xlat
inc
jp
push
pop
out
int
movntps
int3
insb
dec
std
mov
xchg
aas
mov
pop
das
mov
dec
cmp
jmp
jmp
add
and
dec
mov
out
fs
cli
jns
imul
in
or
fisttpl
mov
sahf
fdivl
mov
push
mov
push
xchg
sti
pop
inc
push
out
sub
xchg
xor
and
xchg
add
xor
lods
sub
stos
inc
enter
out
mov
les
jp
mov
xor
push
fistps
inc
sarl
cmp
inc
xorb
jae
add
jb
inc
into
inc
dec
sub
jae
cmp
add
add
es
outsb
lcall
iret
lcall
lock
test
mov
or
aaa
shlb
adc
int
dec
or
outsb
cmp
mov
add
mov
and
dec
adc
rcrl
daa
int
mov
ljmp
in
gs
mov
jb
mov
sti
xchg
test
ss
push
mov
mov
xlat
or
cmp
mov
lret
jl
inc
stos
fdivs
lods
test
jno
xor
rorb
sbb
mov
pop
fs
or
lods
inc
mov
addr16
xchg
xchg
sub
cmc
cmpsb
movsl
notl
xor
repnz
cltd
stos
rorb
xor
xor
dec
inc
cmp
adc
aam
sarb
ret
and
mulb
jnp
push
dec
add
pop
loop
push
sub
push
adc
inc
sbb
mov
sub
dec
mov
in
mov
rcl
cmp
pusha
nop
xchg
popf
sub
mov
ss
lock
int
orb
leave
and
leave
addr16
mov
or
cmpsb
jno
pop
pop
sbb
inc
out
xor
decl
mov
shll
sub
push
and
in
jae
sub
or
sub
into
fcmovne
and
lahf
dec
mov
pop
stos
mov
inc
pop
jno
lock
in
push
adc
push
inc
sub
xchg
jge
aam
mov
nop
stc
repnz
mov
sbb
sub
xor
iret
pop
scas
push
subl
jnp
in
es
in
negb
mulb
sub
insl
int
sub
mov
ja
add
popa
jo
adc
rorb
addr16
dec
notl
cmp
xor
movsb
xor
cmp
lds
cmp
andl
xor
jl
or
sbb
jmp
mov
fnstcw
movsl
gs
movsl
hlt
repz
jl
loop
ret
outsb
sbb
dec
mov
cmp
push
mov
inc
adc
push
shrl
push
mov
add
scas
lods
lods
mov
mov
in
imulb
dec
pop
adc
sti
xor
adc
shlb
cmpsl
fdivs
cmp
mov
rol
outsb
xor
mov
test
stos
push
int3
cltd
pop
in
hlt
cmc
adc
dec
cli
adc
btc
inc
mov
or
push
test
mov
dec
stos
jl
lret
sbb
mov
xchg
inc
mov
in
jmp
loope
rorl
lea
mov
pusha
jns
sub
in
push
dec
insl
cmp
sub
add
inc
rclb
mov
aaa
or
sbb
jle
mov
repz
push
ss
mov
test
or
nop
xchg
pusha
dec
adc
decl
push
into
mov
iret
cmp
arpl
sarb
int
lods
stos
sbb
cmpsl
clc
dec
cmp
cltd
fucomip
popa
pop
out
push
and
rolb
mov
hlt
pop
cmp
pop
mov
dec
jmp
fadds
mov
sub
outsl
sub
fwait
and
leave
xchg
and
out
add
push
jae
jb
cmpsl
dec
insl
add
adc
inc
add
dec
xor
pop
loop
add
dec
cmp
outsb
test
mov
pop
mov
fmull
aaa
inc
jge
sti
xchg
jmp
lods
aaa
dec
mov
jge
mov
ljmp
mov
jae
or
imul
imul
mov
std
jno
push
inc
inc
not
push
push
cmp
xlat
pop
leave
adc
sbb
adc
jns
xchg
and
mov
insl
jae
lret
sbb
xor
push
push
sbb
xor
dec
or
aam
xor
add
add
add
pusha
mov
lea
push
or
push
push
push
push
mov
mov
mov
and
shr
xor
sub
shr
imul
not
inc
loop
pop
pop
pop
pop
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
