push
call
ret
ret
fwait
iret
inc
sub
sub
pop
lahf
cmp
mov
cld
pop
mov
lahf
cmp
das
add
pop
xchg
fistps
fldlg2
fs
ficomps
mov
mov
jb
das
popf
adc
rcrb
and
push
and
sbb
xor
rcll
iret
ljmp
leave
ljmp
cmc
incb
or
xlat
inc
ja
mov
cmp
add
das
xchg
mov
mov
jnp
lods
pusha
call
outsb
leave
pop
sarl
mov
cmp
or
or
hlt
xor
mov
clc
pmaxsw
lret
std
int
rolb
push
mov
sub
sbb
push
xchg
imul
pop
je
or
jecxz
mov
mov
mov
out
jne
xor
push
lds
mov
xchg
cmp
mov
test
mov
sbbb
int
xor
mov
xor
push
push
sbb
pop
push
je
jecxz
cmp
adc
inc
js
xor
out
dec
clc
add
sbb
mov
and
push
or
mov
gs
loop
mov
scas
or
dec
and
aad
push
testb
movsl
lods
adcb
push
stos
int
ficomps
iret
and
or
in
lds
cmpsl
roll
out
push
mov
dec
dec
xchg
pop
cmc
ss
jns
xchg
fdivrl
popf
aad
cmp
cwtl
push
add
aam
repnz
jae
xor
push
subb
cltd
add
xor
fdiv
inc
push
cmp
leave
mov
sub
fs
jge
push
out
sbb
daa
imul
lds
push
mov
xor
lods
sarb
jbe
test
clc
loop
mov
xor
movsl
lcall
xchg
or
icebp
sub
inc
punpcklwd
mov
fiaddl
push
out
and
mov
mov
rclb
bound
mov
push
stc
insl
movsl
dec
addr16
out
pusha
mov
stos
jmp
and
cmpsb
ficompl
jb
mov
pop
mov
cli
cmp
lcall
and
cmp
fld
pop
push
adc
imul
push
test
jns
cmp
add
or
mov
dec
out
mov
aaa
int3
fcmovu
into
icebp
jp
fwait
clc
les
and
jg
sbb
rol
mov
js
shlb
stos
cmc
inc
inc
movsl
xor
push
scas
jg
jle
mov
nop
mov
jl
inc
mov
enter
subb
int
and
jle
je
adc
sti
xor
jne
sbb
sahf
fidivs
sbb
cltd
push
push
xchg
hlt
lods
or
imul
lea
mov
scas
xchg
test
popf
mov
adc
inc
xchg
sub
scas
xchg
pop
dec
aaa
mov
outsl
add
inc
cltd
stc
adc
xchg
push
test
pop
add
jl
scas
jg
out
jmp
ds
mov
arpl
mov
imul
push
in
adc
sbb
nop
mov
outsl
push
ss
pop
insl
fdivrp
nop
rep
push
xchg
pop
dec
or
sti
lret
cmp
out
cmp
test
inc
xchg
std
out
push
orb
add
cmp
xchg
rcll
add
jo
or
or
leave
int
rep
lock
adc
dec
mov
xchg
push
push
xchg
xchg
cmp
sahf
adc
js
mov
ja
imul
mov
add
xor
test
repz
fldcw
mov
pop
or
lcall
aam
add
dec
js
pop
pop
cmc
pop
sub
ret
decb
jno
mov
ret
leave
ja
es
or
jg
adc
xchg
inc
xor
push
adc
insl
mov
add
cmpsl
mov
mov
xchg
or
rclb
inc
rolb
ja
xchg
stc
ret
fisttpl
repnz
fmulp
icebp
sahf
xor
push
pop
hlt
push
negl
mov
fs
bound
lcall
hlt
addr16
adc
test
push
inc
and
inc
sub
xchg
inc
aam
xchg
adc
lcall
ffreep
cltd
outsb
cwtl
mov
fiadds
mov
add
pop
out
stos
adc
dec
insb
mov
add
pushf
and
bound
jg
and
ja
lahf
lock
add
arpl
repnz
xor
fs
and
lock
mov
mov
sbb
cmc
jno
push
fwait
out
cmp
je
dec
cli
mov
mov
pop
fnsave
out
call
inc
cltd
clc
inc
mov
gs
in
xor
aas
and
mov
push
mov
dec
inc
jle
push
mov
push
ja
cmpsl
in
jle
lret
lock
fsubs
lock
mov
aam
mov
sub
popf
sti
push
mov
fwait
cmp
cwtl
cmp
iret
xorl
sub
jle
mov
dec
shlb
sbb
jb
cmp
xchg
out
movsb
aad
sbb
lret
dec
in
adc
push
add
dec
andl
push
sub
movsl
or
jnp
inc
pop
xchg
xchg
in
out
dec
cltd
scas
scas
pop
dec
fidivl
rcr
jbe
mov
test
stc
and
rorb
pop
dec
in
arpl
daa
popa
mov
sarl
mov
out
pop
leave
rolb
dec
dec
ret
cmpsb
cwtl
sub
and
inc
mov
mov
cmpsl
call
shlb
lret
bound
sti
cmp
stc
stos
insb
push
jecxz
out
imul
mov
icebp
test
imul
mov
mov
push
or
cmpsl
fadd
pop
pop
dec
cld
cmp
mov
cmp
adc
imul
adc
cmp
mov
outsl
adc
div
mov
inc
sub
xor
daa
mov
adc
push
add
or
mov
mov
cmp
into
pop
adc
jg
lods
or
mov
popf
jecxz
cmc
or
test
ljmp
daa
orl
dec
xor
bound
stos
pop
popf
jne
push
js
pop
sbb
sahf
fnstcw
mov
fisubl
dec
icebp
push
mov
mov
mov
dec
or
movb
pop
fmuls
pop
jb
insb
and
cmp
fistps
cmp
inc
mov
mov
andl
xchg
push
cmp
lods
jl
fbld
outsl
or
cmp
xorl
pop
arpl
dec
out
pop
push
xchg
sbb
mov
sub
push
inc
mov
xchg
ss
adc
js
xchg
or
push
test
cmp
pop
loope
mov
sar
aad
push
lret
loope
mov
stc
pop
mov
jl
test
sbb
and
outsl
xlat
pop
cli
sub
lods
mov
lock
pop
jmp
xchg
cld
jb
loop
xchg
inc
rcll
add
mov
mov
and
or
inc
inc
and
notl
mov
daa
mov
mov
sbb
xor
gs
das
aam
imul
lahf
push
test
jmp
nop
cltd
push
int3
int
test
cmpl
lock
movaps
and
in
movsb
jnp
push
fiaddl
add
je
jge
xor
mov
in
mov
mov
fldl
jmp
jg
ret
add
or
popf
mov
movsl
roll
pop
jne
mov
xchg
dec
sub
dec
out
or
mov
mov
dec
icebp
mov
inc
xor
xor
adc
pop
cmp
sbb
ror
cld
jnp
fwait
add
pop
test
call
xchg
daa
push
jmp
xchg
test
and
xchg
les
test
push
and
xor
xchg
call
inc
adc
ljmp
lea
pop
push
mov
sbb
dec
mov
into
jle
push
rep
and
arpl
popa
mov
cmpb
pop
add
xor
fdivr
stc
cld
dec
xchg
xchg
hlt
lds
sbb
imul
rol
in
lods
or
out
xchg
notb
sbb
lods
mov
cmp
sahf
out
in
ljmp
pushl
inc
lahf
mov
test
sti
clc
push
ss
cmpsb
aam
arpl
lds
sbb
in
push
push
je
scas
push
sub
iret
outsb
mov
xchg
adcb
push
adc
lods
xchg
sbb
call
xor
cmc
mov
test
aad
mov
cmpsb
or
sbb
xchg
fcmovb
and
sbb
adc
pushf
dec
sbb
inc
movsl
ljmp
leave
aam
aaa
mov
in
nop
lcall
dec
sahf
sti
adc
addb
adc
in
push
and
jo,pt
jmp
rorl
inc
outsb
push
shlb
jae
pop
pop
mov
push
xlat
and
push
inc
cmp
popa
push
stc
pop
ret
sub
xor
or
or
movsb
push
pop
inc
lock
lods
cmp
sahf
adc
cmp
mov
ds
dec
scas
and
sti
movsb
sbb
jns
js
mov
test
push
insb
pop
mov
daa
fisubs
mov
daa
enter
jne
mov
and
mov
sbb
fs
into
push
negb
cltd
mov
jge
push
iret
lahf
or
shl
push
pushf
loopne
and
pop
or
insl
enter
sub
mov
xchg
push
cmp
dec
push
iret
jne
pop
xchg
in
jae
cmp
in
push
cmp
or
mov
mov
fidivs
test
sahf
or
scas
fstps
test
push
sub
push
test
into
dec
call
jecxz
jmp
loopne
clc
push
mov
xchg
andb
jle
mov
push
mov
arpl
arpl
jmp
pop
xchg
add
rcl
or
repnz
sub
testb
out
data16
mov
aad
cmc
mov
xorb
pop
or
rorl
push
jecxz
stos
dec
or
jmp
sub
dec
gs
inc
test
mov
idivb
inc
sti
test
mov
jbe
stc
mov
cmp
repz
xor
sub
adc
sub
xor
aad
ljmp
push
stos
dec
faddp
xor
int3
push
es
mov
add
and
cmp
or
packssdw
or
out
and
je
into
xchg
in
mov
lods
adc
and
lret
icebp
inc
xor
xchg
add
ljmp
mov
in
adc
dec
push
pop
fistl
in
ja
jecxz
aad
pop
mov
jmp
mov
pushf
into
es
cmpb
and
inc
loop
pop
shlb
bound
ret
dec
sub
out
mov
and
test
cmp
fcmovu
or
test
in
negl
xchg
subb
adc
mov
lods
fistl
pushf
lods
out
mov
clc
int3
and
mov
fdivl
ret
outsl
lcall
mov
push
xor
outsl
hlt
pushf
mov
jg
loop
xchg
out
and
rorb
dec
inc
test
inc
sbb
icebp
push
cmp
push
test
pop
cmp
sub
sbb
shrb
movsl
mov
jge
and
dec
int3
cmpsb
psubusw
loop
cmp
call
xchg
and
outsb
in
xchg
xchg
cli
jno
adc
and
xor
adcb
clc
stos
or
cmp
mov
sub
iret
mov
push
pop
xchg
mov
nop
movsb
outsl
xor
mov
push
out
push
and
cmpsl
jnp
das
cmpsb
pop
mov
imull
mov
cld
push
data16
mov
loopne
and
inc
jmp
push
enter
into
cmp
or
fstp
rolb
into
pop
pop
rorl
sbb
es
outsl
outsl
cli
cmp
and
xchg
daa
or
cs
or
add
jp
stc
popa
je
push
mov
leave
ret
mov
nop
jmp
fadds
insb
adc
popa
cmpsl
jg
push
mov
add
mov
dec
mov
nop
dec
enter
test
repz
repz
push
push
add
push
repnz
test
in
cmp
dec
push
mov
xchg
mov
call
push
add
aam
jg
in
jb
sbb
pop
dec
subl
inc
inc
push
add
mov
das
mov
mov
adcb
xor
ljmp
add
cmc
lods
ret
pusha
push
adcl
jge
les
rcl
stos
cmpxchg
std
gs
rcl
repz
adc
js
jmp
mov
scas
push
inc
xor
push
mov
loopne
fisttpl
fcoms
hlt
or
insb
test
xor
fsub
and
out
or
fcoml
out
jo
cwtl
pop
sti
sub
scas
mov
inc
outsb
movsb
or
xchg
push
mov
pop
or
imul
push
sbbb
sub
imul
in
dec
nop
movsb
fists
fiadds
mov
inc
sbb
out
daa
mov
wbinvd
repnz
jne
inc
movsl
push
dec
fisttpl
loope
add
fistpll
ret
mov
dec
andl
mov
repnz
inc
push
push
test
mov
adc
dec
nop
cmpsb
and
into
aas
sbb
ficomps
mov
je
push
jbe
mov
mov
movsb
rcr
pop
push
out
nop
popa
outsl
lahf
hlt
pop
and
nop
sub
fsubp
pop
push
add
add
push
xorl
jno
pop
test
mov
dec
sbb
clc
inc
fidivrs
mov
std
or
pop
jo
push
mov
lds
leave
popf
cmp
mov
out
out
shlb
mov
xor
ficoms
out
add
rclb
aad
pushl
dec
fwait
and
jl
xor
icebp
jae
in
and
sbb
xchg
aam
test
int
cld
test
aaa
movsb
dec
rorb
add
jmp
cmp
loope
ss
jecxz
or
dec
fdivr
rorl
pop
pop
aaa
sahf
push
push
addb
push
lods
test
jae
or
xchg
addr16
outsb
loope
movsl
scas
xor
inc
or
mov
iret
jno
sti
loope
sub
aad
int
test
mov
imull
xlat
sarb
lods
test
and
push
add
xchg
cmp
inc
in
push
dec
fs
fisubs
fcoms
pop
mov
aad
jmp
or
aad
mov
stos
pop
xchg
mov
sbb
cwtl
inc
fcmove
aaa
adc
add
pop
movsl
incl
jmp
push
sbb
test
fistpl
hlt
js
dec
or
mov
popa
xchg
imul
cli
inc
jmp
mov
pop
jecxz
fs
aas
push
repz
mov
adc
pushl
cmp
ret
jge
pop
pusha
xchg
hlt
cmp
std
cld
loopne
jno
xor
ret
and
cltd
mov
lret
pop
sbb
jge
jmp
inc
nop
arpl
cli
bound
sarb
cmpsl
jno
lcall
loope
hlt
inc
pop
jp
js
or
jecxz
loopne
in
outsl
inc
fildll
jne
aaa
sub
js
outsl
jbe
add
ret
cmp
sub
xchg
nop
scas
mov
js
test
aaa
xchg
push
mov
jge
popf
mov
es
nop
cmp
and
call
inc
lods
fwait
and
sbb
mov
and
or
pop
stc
mov
icebp
test
test
insb
lret
lock
cmpsl
repnz
or
and
adc
and
push
lcall
icebp
push
loop
dec
das
roll
sub
pop
lods
in
sub
mov
test
into
lods
dec
cmpb
addl
and
movsb
jbe
in
insb
push
loopne
pop
cli
mov
lret
out
mov
imull
iret
adc
cli
push
jmp
adc
dec
fsts
inc
sub
mov
les
jp
or
adc
adc
jae
movsb
xor
aad
int3
jae
xlat
cmp
and
out
cwtl
lret
xchg
out
dec
push
inc
test
push
cmp
sub
daa
inc
js
pop
push
dec
mov
rcrb
xchg
mov
push
push
aaa
pop
mov
add
and
js
cwtl
or
mov
xchg
mov
sbb
push
mov
andl
jmp
sub
pop
push
out
dec
and
push
mov
push
incb
or
and
xor
aaa
popa
pop
fwait
mov
mov
jb
cltd
in
push
push
clc
mov
fdivrs
popa
aas
cmp
bound
adc
lret
leave
addl
xlat
clc
fwait
pop
enter
push
mov
mov
andb
cmp
xor
stc
mov
mov
sbb
add
dec
bound
sub
sub
jae
mov
cmp
movsb
fnstenv
ret
icebp
mov
fwait
inc
or
push
outsl
push
adc
lds
sub
pop
xchg
ss
mov
cld
xlat
cmp
or
xor
sub
adc
sbb
lahf
sbb
inc
or
push
fidivrl
add
mov
int
scas
cmpsl
repnz
lret
das
mov
in
sub
repz
jge
jns
push
addb
fsubp
add
pop
jl
popf
scas
push
lods
lods
cli
icebp
leave
cli
push
inc
int3
sub
jo
pop
iret
out
jo
jns
loopne
pop
push
mov
shlb
popa
in
fcmovu
xor
xor
pop
or
add
mov
pushf
sub
sub
xchg
adcl
and
cmp
mov
shll
xchg
mov
jg
jb
sub
pop
add
sbb
and
mov
push
cmc
decb
into
add
adc
inc
xor
ret
mov
arpl
jns
mov
mov
mov
pusha
mov
or
inc
repz
inc
ret
mov
rol
push
mov
ds
loopne
scas
out
mov
push
mov
jns
scas
out
clc
mov
dec
dec
lods
fst
sbb
je
out
sub
or
push
outsb
outsl
mov
rolb
xor
fmull
testl
cmc
flds
pusha
sub
inc
push
pop
push
pushf
push
and
shlb
ss
shlb
push
jl
jg
inc
stc
jns
cmp
imul
fcos
mov
ds
lahf
sub
js
mov
push
add
add
icebp
push
fimuls
xor
insl
push
mov
popa
rcll
vpmulhw
pop
pop
mov
pusha
hlt
ds
xchg
xchg
inc
stc
inc
cmpsb
rcr
inc
es
jmp
sbb
push
cmp
out
push
and
enter
cld
lcall
xorl
cmpsb
inc
jmp
mov
cltd
insb
mov
inc
dec
sbb
add
out
das
mov
or
cmp
jp
inc
jbe
push
loopne
jne
ret
fisubs
jb
mov
add
cli
jns
push
lcall
hlt
les
mov
shl
cmp
loope
add
popf
lcall
pop
sbb
and
mov
inc
aam
popf
and
adc
sub
cmp
inc
dec
mov
lds
movsb
mov
cs
cltd
scas
jge
mov
mov
shrl
test
cmp
or
sub
adc
mov
adc
insb
cmp
dec
out
and
mov
push
dec
push
mov
cmp
les
test
xchg
das
and
imul
ret
lods
push
in
popf
lahf
sub
imul
jmp
cmp
and
adc
push
notl
xor
mov
xor
mov
add
data16
push
sbb
inc
inc
inc
ret
dec
mov
fnstcw
bound
shl
sbb
insb
mov
push
pop
pop
xchg
out
jo
xor
mov
fisttps
into
sub
or
ret
sub
int3
inc
stc
mov
out
insb
insl
and
lahf
test
dec
int3
xchg
adc
ja
mov
mov
mov
and
mulb
or
bound
mov
leave
in
mov
mov
sbb
mov
fs
incb
inc
sbb
call
jmp
repz
insl
lahf
cmp
inc
lret
mov
dec
jg
mov
or
aam
xchg
push
sbb
pop
lods
sbb
lret
push
arpl
stc
sub
sub
jle
sahf
or
fadd
shl
xchg
shll
stc
fsubs
aas
pop
dec
push
mov
push
xor
in
xchg
jmp
push
lcall
add
pop
cmp
pop
ret
sub
or
insl
inc
notl
es
js
add
repnz
test
lea
lret
data16
or
and
sti
cmp
lods
lods
addl
push
repz
subb
mov
std
aas
mov
xchg
xlat
out
jne
shll
pop
lret
or
xor
mov
push
mov
fildl
add
ja
cmp
dec
rorl
in
xor
pop
data16
icebp
iret
mov
int3
repz
sub
mov
jecxz
xor
xor
add
scas
enter
fnclex
mov
out
adc
push
or
cmpsl
xchg
shlb
das
orl
imul
fsubrp
pop
das
sub
jae
in
aam
xor
insl
pop
or
adc
mov
mov
xor
das
push
sub
shrb
xchg
pop
stos
fsubs
mov
repnz
jnp
adc
movsb
imul
ss
sbb
aaa
inc
and
cwtl
and
lods
scas
xor
out
xor
subb
popa
sub
inc
ds
ret
or
cmp
or
pushf
repnz
repnz
fiaddl
aam
mov
jle
aas
bound
or
add
jp
xor
int
add
aad
out
in
or
sub
xchg
push
add
xchg
mov
push
daa
aad
rcrb
cmp
push
mov
decl
push
push
push
sub
icebp
and
inc
leave
sbb
sti
ds
dec
sub
dec
sbb
imul
sub
test
popa
jae
adc
repz
fucomp
jb
repnz
icebp
repnz
and
pop
and
xchg
jno
pop
icebp
test
gs
ret
push
push
sub
or
imul
out
test
mov
mov
nop
sub
sahf
lcall
push
mov
mov
xchg
push
mov
dec
xchg
mov
mov
or
push
lea
lret
pop
lret
data16
das
dec
leave
xchg
popa
xchg
icebp
mov
cmp
lods
jne
sahf
cs
les
gs
mov
lods
inc
popa
in
pop
xor
pushf
leave
in
ret
sbb
dec
xor
fbstp
add
lods
cmp
repnz
movsb
xchg
popa
jle
pop
adcb
or
pop
jne
js
xor
push
rcrb
repz
lcall
xchg
mov
hlt
adc
popf
pop
repnz
lret
xor
ds
ret
sub
jg
pop
pop
lds
movsb
data16
daa
out
fwait
inc
cmp
xor
push
in
cmp
adc
in
std
mov
rclb
das
jo
inc
or
int
jg
inc
sar
or
bswap
int3
push
fisubrl
shrb
add
movsl
pop
mov
xchg
xchg
push
push
mov
mov
or
push
jecxz
dec
xchg
push
ds
cmp
and
xchg
pop
test
pop
mov
xchg
imul
push
push
adc
les
clc
mov
call
imul
and
add
lcall
sub
outsl
lret
push
inc
lret
pop
sbb
enter
ds
das
enter
aam
jg
mov
xchg
mov
loopne
xlat
mov
inc
inc
dec
jo
or
sbb
inc
mov
loopne
stc
mov
pop
dec
add
adcl
clc
push
pop
cli
lods
or
cmp
cmpb
xchg
mov
daa
test
jne
and
ljmp
jnp
insb
test
movsb
mov
movsl
lret
push
pop
adc
imul
push
mov
inc
mov
sbbb
stos
sub
xor
mov
push
cmp
fcomps
mov
sbbl
jl
repnz
mov
ljmp
inc
loopne
inc
out
aam
and
shrl
pop
sub
cmp
and
xor
fstpt
sbb
leave
rcrb
out
and
sbb
in
lods
fmul
jmp
sbb
jg
loopne
push
aaa
test
mov
xchg
or
sub
sbb
fsubrs
jb
cmp
and
add
imul
cmpsb
data16
sbb
cwtl
sub
or
ficompl
int3
jne
mov
in
lret
jnp
sub
cltd
ret
pop
dec
lock
in
push
jg
adc
insl
jp
insl
xchg
xor
mov
stos
push
cmp
popa
cmp
not
cli
pop
mov
ds
mov
sub
xor
hlt
push
push
iret
sub
dec
je
ss
fnstcw
out
pop
int
or
xchg
int
shl
or
ret
je
iret
clc
arpl
or
cmp
dec
test
mov
fmull
scas
push
push
aad
sub
mov
adc
sub
jmp
dec
int
cmp
loope
orb
clc
or
cld
bound
flds
rclb
shlb
push
out
sbb
mov
jmp
inc
not
test
mov
mov
cmpb
xchg
icebp
pop
call
sbb
pop
adc
ljmp
dec
jno
mov
stc
ja
and
jp
out
xchg
popf
cmp
inc
ss
flds
cmp
cwtl
adc
xlat
lds
sub
inc
pusha
adc
add
fisubrs
outsl
out
sub
or
lea
mov
movsb
push
sbbb
movsb
xlat
das
add
mov
ret
test
pop
sub
ljmp
repnz
xor
jg
js
fcoms
jb
dec
mov
mov
lret
pop
xor
in
iret
mov
push
and
enter
out
fdivrs
mov
cmp
loop
xor
lock
pop
sub
jge
stc
add
aad
lcall
jge
jno
lahf
cmp
mov
inc
inc
movsl
addb
jl
imul
cs
clc
mov
dec
dec
push
adc
js
jae
stos
mov
leave
push
mov
push
fxch
aaa
jp
js
imul
outsb
inc
sbb
mov
ret
push
cmpsb
jo
dec
fs
sbb
fstpt
adc
inc
fiaddl
dec
push
ror
repnz
pop
sub
ret
ds
and
mov
movsl
inc
add
xchg
rcll
lods
icebp
sub
fcom
cwtl
cmp
xchg
ficoms
lcall
mov
mov
push
stc
lods
mov
imul
arpl
fdivrs
mov
lahf
sub
xor
or
sbb
movsl
sbbb
js
add
push
mov
pop
repz
aad
subl
adc
stos
jg
push
icebp
lock
outsl
pop
jae
pop
out
mov
out
in
rcrl
sub
dec
cmp
mov
je
push
push
adc
testb
shr
es
cmp
and
mov
pop
cmpsl
mov
sub
xor
mov
pushf
addr16
xor
out
mov
xchg
std
dec
mov
mov
add
fdivrl
leave
ret
push
movaps
in
roll
ret
lods
pop
icebp
or
inc
jnp
cmp
mov
popf
mov
je
aas
in
notl
adc
mov
mov
shr
sbb
xor
ret
mov
mov
rcrb
cwtl
les
mov
push
ja
and
mov
lea
cwtl
shl
notl
jmp
imul
adc
test
cmp
inc
xor
out
sbbl
jecxz
mov
adc
lods
stos
pop
pushf
xchg
shl
mov
cmpsl
add
sub
push
sub
imul
shrl
inc
lret
pop
fstps
mov
cmc
subl
cmpsb
pop
push
jns
mov
and
xorl
sbb
aaa
pop
jbe
mov
fistl
jne
insb
and
mov
jl
arpl
xor
mov
and
ja
icebp
jnp
iret
xor
sbb
mov
mov
mov
andb
fldt
addl
lahf
sub
and
dec
imul
adc
repz
xor
mov
jne
hlt
imul
push
dec
lods
mov
xchg
mov
out
rolb
mov
pushf
scas
inc
mov
mov
fsubrl
ret
pop
ljmp
test
dec
xchg
and
int
push
cmpl
or
insb
sbb
js
fcomps
leave
mov
rcll
ds
pop
rorb
mov
xchg
dec
mov
pop
pop
add
jp
stos
lods
jo
int
or
push
mov
jbe
mov
shlb
lods
push
pop
fdivr
jnp
lea
into
sbb
in
cmp
adc
mov
test
pushf
stos
fwait
pop
and
mov
sbbl
repz
ror
push
pop
negl
adc
out
sub
adc
xchg
pop
out
or
jo
lds
xchg
aas
mov
bound
roll
shlb
mov
cld
data16
sbb
inc
adc
sbb
xlat
int
mov
and
xchg
dec
pushl
sub
sub
hlt
fcomi
outsl
add
repz
jno
mov
sub
mov
inc
das
mov
aad
out
arpl
movsl
pop
pusha
je
iret
xchg
aas
fisubs
sbb
les
mov
nop
sti
push
fucomp
call
repnz
inc
or
stos
cld
ljmp
adc
cli
sbb
sub
sub
ja
jg
je
std
cmp
mov
and
roll
arpl
add
jecxz
mov
std
je
pop
inc
sub
inc
enter
popf
adcb
mov
jg
and
das
pop
sarb
mov
popa
cmp
mov
imul
insb
pop
mov
lret
mov
xchg
int3
stos
es
cmc
ds
push
into
push
push
jle
in
pop
xor
fistl
cmp
push
test
xor
fidivrl
out
movsb
xchg
aam
loop
inc
mov
gs
insb
and
jo
pop
xor
testb
mov
mov
mov
iret
mov
mov
in
aad
arpl
data16
lahf
mov
mov
jl
arpl
lcall
inc
mov
mov
mov
xorb
or
cmpl
add
add
lods
addr16
jmp
out
imul
addr16
sub
pop
pop
xchg
xchg
movsl
shlb
xchg
mov
mov
arpl
push
fcmovbe
loopne
addb
cmp
lret
sbb
push
dec
xlat
cltd
inc
jne
sub
sbb
mov
fdivrs
mov
pop
jb
nop
bound
pop
or
sbb
aam
dec
mov
aas
add
cmp
shlb
sub
push
gs
pop
mov
adc
push
sub
rorb
cmp
xor
std
mov
xor
xchg
mov
test
push
push
mov
dec
shlb
xchg
insb
xor
mov
test
mov
xchg
fsubp
clc
incl
pushl
adc
or
aad
imul
xor
jl
dec
pop
clc
mov
roll
push
lret
add
andb
imul
icebp
dec
xor
js
dec
sub
xchg
jmp
orl
adc
pop
add
stc
pop
dec
mov
sbb
shrb
jb
stos
pop
adc
loopne
and
ret
dec
push
sbb
mov
out
divb
jge
movsb
mov
dec
xchg
decb
mov
movsb
push
fldln2
xor
or
jne
aam
xor
xor
rcr
push
push
cld
inc
cwtl
sarl
jae
test
xchg
std
pop
or
sbb
enter
sbb
lret
pop
sbb
xchg
in
mov
pop
pushf
cmp
fmuls
out
xchg
scas
xchg
int3
inc
jns
ret
jp
push
fcomps
and
mov
add
cmpsb
insb
int
or
xor
call
sbb
inc
out
and
mov
pop
inc
mov
sbb
int3
jg
sbb
lds
call
cmc
decb
jp
loopne
mov
push
push
push
popf
mov
pop
adc
dec
or
jge
mov
js
push
sarb
inc
lods
and
mov
mov
ret
mov
dec
push
push
pop
outsb
std
inc
cmp
or
xchg
fildl
mov
popf
ret
lods
pop
adc
fmull
loop
shlb
fidivs
push
inc
adc
push
push
adc
xchg
fcomip
fdivrs
sti
or
repnz
mov
fmul
jl
lret
adc
mov
sub
and
js
lods
sbb
sub
sbb
pop
lock
xor
into
gs
int
push
mov
push
lret
xchg
je
pop
pop
les
xlat
inc
mov
movsb
inc
cwtl
and
push
hlt
addr16
mov
xlat
jle
data16
push
mov
inc
dec
popf
adc
leave
cmp
lods
push
pop
and
and
add
in
inc
inc
pop
lods
in
cmp
repnz
mov
popa
inc
mov
call
or
fstl
mov
mov
cmp
ds
rcll
cmp
and
gs
test
or
push
jl
mov
xlat
addr16
xchg
xor
mov
cli
and
popa
loop
mov
sbb
nop
repz
mov
lods
outsb
pop
mov
adc
xor
push
or
or
enter
add
pop
in
and
sarl
iret
scas
mov
fmuls
xchg
jl
into
dec
xlat
xchg
test
into
jo
sbb
cmc
mov
sbb
push
rorl
ja
sbb
cmpl
aad
out
repnz
pop
imulb
fsubr
push
iret
pusha
das
cmc
bound
into
iret
or
aaa
insl
cmp
nop
aad
xchg
fwait
unpckhps
shl
in
mov
fwait
sbb
adc
xchg
or
push
je
test
lret
cltd
mov
rorl
jbe
test
mov
je
jo
loopne
xchg
pop
cmp
adc
inc
repz
call
or
imul
mov
mov
xchg
mov
loopne
sbb
idivl
movsb
add
dec
mov
stos
add
insl
xor
cmp
aad
jecxz
cmp
js
add
cmp
xor
mov
js
insb
lods
jo
movsb
test
ret
dec
mov
mov
mov
xor
dec
addr16
ja
andb
repz
mov
add
mov
mov
adc
lret
inc
mov
hlt
cmp
add
mov
ds
cltd
dec
pop
imul
stos
pop
leave
xchg
lcall
clc
pop
cli
jae
or
mov
fisttps
stc
lea
pusha
rcrl
inc
inc
ficoml
pushf
out
mov
aam
into
ret
jnp
sub
xchg
push
jnp
xchg
fistps
loopne
sub
paddsw
jae
sbb
imul
pop
add
leave
push
scas
cmp
les
jle
cmp
out
xor
mov
in
adc
sbb
loop
adc
out
shll
xorb
imul
sti
inc
dec
jge
sub
inc
inc
loopne
pop
adc
pop
test
pop
ds
insl
or
mov
shl
push
fcompl
je
push
push
sbb
jnp
cmpsl
adc
data16
xchg
fistpll
cmpsb
and
mov
add
jge
shll
scas
pop
lods
ficoms
xchg
push
pop
adc
sub
sub
into
jo
cmpsb
sbb
mov
mov
test
insl
mov
das
push
jg
lcall
cmp
add
mov
or
inc
int3
mov
mov
xor
fdivrl
rolb
xchg
or
cmpb
mov
repz
sub
xchg
movsl
lahf
sbb
add
xchg
pop
jae
loop
imul
cmp
js
fneni(8087
es
inc
pop
xor
adc
pusha
push
cltd
inc
pop
jae
stos
push
jmp
fsub
dec
cltd
hlt
cmp
adc
sbb
jmp
xchg
repz
cmp
cmp
idivl
or
scas
lock
js
push
arpl
arpl
jbe
in
in
cmpsb
push
loope
iret
sbb
lds
adc
fisubl
leave
push
lahf
shll
pop
jmp
push
xchg
fucomp
sub
adc
push
movsl
pop
sbb
dec
out
lds
sub
jnp
decl
inc
sub
js
mov
jbe
nop
inc
jecxz
iret
xorl
pop
icebp
xor
adc
push
or
out
lret
dec
lea
cltd
inc
inc
mov
dec
shrb
pop
adc
cli
sub
filds
push
xor
pop
sub
mov
fs
push
andl
mov
dec
js
jb
push
push
mov
push
addb
ljmp
jecxz
adcb
sub
jne
push
arpl
les
dec
mov
je
call
lcall
push
rcrb
sub
int3
jo
sub
inc
push
inc
jg
pop
shll
aam
xlat
pop
pop
pop
inc
gs
mov
pop
stos
inc
sbbl
outsb
sub
fcomip
iret
outsl
xor
gs
sub
jae
pop
outsl
addr16
push
mov
jne
cmc
and
add
cmp
rorb
loop
pop
mov
and
xor
popf
inc
sbb
jns
mov
fisubrl
cmpsl
xor
aas
dec
sub
insl
sub
bound
fstl
cmp
push
popa
push
clc
mov
inc
jle
xor
adc
test
jae
repz
imul
cmp
mov
mov
icebp
lret
in
lods
fsubrs
xchg
jo
clc
mov
lret
vandps
dec
xlat
nop
jmp
push
stos
cmp
iret
arpl
scas
cmp
scas
in
dec
xchg
push
jmp
data16
mov
cwtl
jp
js
pop
addb
mov
pop
push
mov
enter
sahf
hlt
into
mov
inc
cmp
stos
mov
add
sbb
jmp
addr16
cld
pushf
call
fstpl
mov
std
push
scas
fbld
sbb
shlb
jmp
je,pt
xor
push
cmpsl
gs
icebp
das
push
sub
jno
jno
in
push
popa
repnz
jne
jo
and
fcomp
dec
inc
mov
or
outsb
xorl
fidivrl
push
sbb
xchg
push
cmpsl
lahf
mov
subb
imul
pop
sbb
inc
push
leave
sub
aad
mov
je
rclb
cmp
inc
jne
xor
subb
cmp
jnp,pt
pop
adc
ja
lea
repnz
jmp
clc
test
and
jnp
mov
xor
imul
cwtl
sub
ds
addr16
push
xor
xor
repnz
scas
adc
loopne
xor
mov
mov
scas
outsb
outsb
add
cmpb
or
sbb
sti
mov
xchg
jg
jmp
inc
rol
dec
imul
mov
xchg
mov
cmp
nop
scas
insb
gs
ds
xchg
mov
lret
cwtl
xor
popf
aas
scas
sar
nop
scas
pop
jo
mov
or
xor
xor
out
xchg
mov
pop
out
jo
scas
dec
jecxz
fistpll
dec
push
insb
lods
fsubs
dec
inc
sub
pop
in
dec
dec
add
jp
icebp
js
inc
lods
test
xchg
cmp
aaa
mov
gs
in
enter
jne
inc
jge
add
jae
sahf
sbb
xchg
xchg
push
and
sbb
ret
add
ja
imul
cs
mov
imul
xor
shrb
xor
add
add
sub
aas
ss
sub
lret
loope
movl
andb
mov
js
add
andps
into
xor
shrl
sub
mov
mov
push
push
sub
mov
mov
inc
jbe
test
or
mov
movsl
notb
cltd
dec
les
or
sbb
cmp
add
stos
lds
cmpsl
fwait
mov
xor
loop
popa
dec
jmp
jle
subl
in
inc
ja
xor
and
outsb
inc
mov
clc
pop
lret
ret
inc
mov
dec
ret
sub
cmc
mov
shll
sbb
mov
and
pop
gs
insb
mov
pop
popa
es
mov
jne
pop
cmpsb
mov
mov
push
add
push
loope
in
and
fidivl
mov
or
sub
cmp
arpl
lods
ret
fldcw
add
mov
sub
sbb
pop
test
arpl
fsub
ja
aas
sar
popf
lods
and
insb
xchg
jbe
jmp
xchg
cli
icebp
enter
mov
push
scas
xchg
gs
sbb
xchg
pop
inc
sbb
pusha
fstp
mulb
test
into
movsb
push
cmp
popf
inc
mov
ds
inc
popf
imul
test
fs
push
into
fcomps
mov
sbb
fs
mov
ret
test
stos
cmpsb
fsts
outsl
cld
loope
aad
sub
jns
or
repz
or
jno
or
fistpl
mov
stos
pop
sbb
inc
jmp
jne
add
lret
mov
into
inc
das
mov
pusha
out
stos
xchg
mov
imul
xor
mov
imul
divl
clc
inc
mov
cmp
adc
bound
and
loopne
mov
adc
lret
push
and
jp
pop
xor
mov
jo
push
cwtl
sub
xor
lcall
mov
push
in
pop
loop
add
lahf
decl
insl
sub
test
adc
cmpsb
jmp
fisubl
jp
jns
mov
stc
xchg
push
mov
add
ret
push
out
push
andb
lret
sbb
repnz
movsl
cmp
or
loopne
test
mov
imul
ret
divps
lds
fstl
xchg
inc
call
decb
mov
out
jecxz
imul
pop
cli
cmp
jnp
adc
fisubrs
and
xor
andl
xlat
jp
jns
mov
js
pop
sbb
mov
mov
xchg
pop
xor
out
push
cmpsb
jle
xchg
mov
callw
inc
lcall
xor
cwtl
mov
bound
inc
inc
int3
adc
or
test
repnz
dec
sbb
fs
cmp
psubsb
mov
sbb
int
sbbl
into
sbb
push
sbb
jmp
sub
xchg
cmp
repz
push
sub
lock
adc
mov
outsb
fmuls
adc
in
jbe
rcr
in
loop
mov
inc
adc
jecxz
fcomp
data16
adc
pop
mov
vpsubw
mov
xlat
out
iret
cmp
inc
test
cmc
push
call
adc
cmpb
movsl
sbbb
inc
xchg
int
mov
aad
push
mov
pop
das
sarb
mov
fwait
push
pushf
sbbb
mov
imul
jmp
outsl
hlt
jg
adc
mov
xor
or
xchg
adc
push
and
lret
sti
jge
repz
fwait
inc
addr16
push
cmp
popf
cs
jo
fdivs
push
dec
fidivs
test
popf
inc
testl
xchg
jle
push
fsts
pop
push
xor
xor
test
popa
mov
xor
lret
fisubrl
mov
stos
das
mov
mov
fbstp
pop
outsb
arpl
sub
jno
shl
insb
sbb
js
jno
test
rorl
leave
ret
xchg
addr16
pop
mov
push
pop
xchg
jbe
aam
xchg
pop
mov
pop
xor
xor
jmp
adc
out
sbb
jecxz
push
pop
xchg
mov
mov
cmpsb
mov
pop
in
jge
ret
jmp
inc
or
stos
pop
xchg
js
cli
pop
sub
pop
push
movsb
jns
das
lret
cmpsb
cmp
in
outsb
push
movsb
mov
pop
adc
xchg
lea
push
out
xchg
pusha
cmc
popf
mov
clc
push
xchg
fldenv
or
jge
stos
inc
mov
or
out
cwtl
mov
mov
mov
xor
lds
push
mov
xchg
inc
push
pop
xchg
enter
fisubrl
push
inc
push
sub
jb
or
into
pop
cmp
mov
insl
xlat
rcrb
xlat
popa
fldl
cmp
jmp
dec
mov
mov
ds
loopne
movsl
mov
in
pop
mov
loope
fmull
jecxz
jg
popa
push
push
sbb
mov
and
adc
cmp
out
frstor
inc
mov
pop
pop
cmp
pusha
mov
cmp
pop
lds
xor
icebp
xor
jne
xchg
dec
cs
cmp
fstl
xor
pop
push
and
push
roll
shl
add
roll
xor
xor
aaa
jne
imul
push
out
repnz
data16
push
stc
mull
in
loope
fldl
add
mov
push
mov
inc
insl
inc
adc
pop
pop
xor
das
int3
jae
xchg
add
test
repz
fldl
xor
ret
cmp
xchg
cmp
ljmp
jecxz
out
rolb
add
sbb
mov
and
in
icebp
jne
aaa
mov
into
sahf
mov
jb
push
data16
mov
mov
scas
sub
movsl
xor
dec
xchg
pop
ds
and
imul
xchg
push
rcrl
xchg
xchg
cs
es
sbb
les
cmp
mov
movsl
mov
hlt
std
or
pop
add
inc
and
sbb
mov
fsubrl
mov
push
xor
sbb
cs
and
aam
mov
pop
cmpsb
xor
cmp
shll
mov
dec
int3
fstpl
aad
ret
scas
or
lahf
pop
dec
aam
sbb
add
aad
cmpl
movsl
xchg
mov
hlt
test
jp
push
aam
add
adc
mov
movsl
daa
dec
and
leave
cmp
lcall
inc
arpl
inc
lahf
pop
lds
jg
lock
nop
cmp
mov
addl
outsl
es
adc
adc
jp
hlt
adc
jns
inc
add
dec
insb
dec
dec
lahf
and
insb
stc
dec
xor
push
dec
nop
pop
mov
pop
cltd
insl
dec
or
adc
popf
push
xor
dec
xor
add
je
sub
js
fcmovnu
loop
jbe
mov
lret
jecxz
into
add
pop
mov
pop
xor
jp
ret
mov
dec
ret
fmuls
add
cmpsl
and
ja
or
les
mov
xor
pop
arpl
mov
push
or
xchg
js
and
jo
rcrb
mov
xor
arpl
or
xchg
xor
dec
ret
sbbl
sti
jecxz
leave
mov
or
cld
or
xchg
cmp
jmp
cmpsb
mov
add
xchg
insb
into
dec
repnz
out
push
cwtl
test
sub
in
inc
ret
stc
jne
pop
in
cmp
push
or
data16
inc
fisubrl
push
jbe
and
cmp
dec
pop
das
jns
clc
cmc
mov
inc
inc
dec
aas
sahf
dec
les
pusha
mov
call
stos
jo
cmp
pop
movsb
mov
mov
or
insb
fisubrs
call
sbb
jns
out
das
daa
clc
jmp
ljmp
aam
or
and
subl
ss
or
xchg
xchg
jmp
xlat
sub
mov
mov
repz
push
jo
or
or
pop
lods
sub
mov
fiadds
jp
subb
pop
sbb
ljmp
inc
scas
icebp
outsb
lret
jnp
mov
push
push
sub
out
cmp
loopne
stc
popa
sub
aaa
pop
rcrb
push
fisttpl
mov
push
pop
clc
insb
in
jmp
icebp
ret
loop
repnz
into
leave
clc
in
add
inc
adc
fbstp
push
sub
ja
lret
orb
jne
push
cmp
aaa
jp
fidivs
das
ja
movsb
push
push
dec
inc
sub
rcrl
insl
lods
xorb
jl
pcmpgtb
mov
rol
pusha
jns
and
push
xor
sub
mov
pop
add
fldl
xchg
mov
iret
xchg
enter
iret
icebp
sahf
or
pusha
xorb
jmp
xorb
pushf
xchg
in
xchg
lods
stc
popl
mov
jecxz
mov
and
xchg
dec
comiss
ret
xchg
pop
push
int3
fldenv
add
adc
adc
stc
repz
divl
xchg
mov
inc
or
rorl
xchg
push
fstl
imul
scas
sbb
into
out
pop
je
jnp
lcall
dec
push
mov
icebp
ja
aas
in
pop
push
jl
stos
test
cmp
pop
adc
mov
sti
jg
pop
testl
inc
mov
adc
loop
fcompl
rcrb
call
cwtl
push
sbb
insb
pop
repnz
mov
stos
fsubrs
mov
shrl
push
stos
lret
mov
and
sbb
aad
or
jo
mov
add
inc
ret
sub
pop
pushf
nop
lcall
sbb
push
insb
mov
inc
adc
jle
xor
pop
mov
adc
fcmovnbe
aam
andl
inc
jge
in
movsb
out
jl
pop
dec
ret
pop
sub
testb
inc
ja
push
inc
es
lods
add
je
mov
inc
addr16
aas
in
leave
int3
inc
add
int
shll
jns
les
xchg
dec
mov
addb
in
scas
imul
pop
rolb
in
test
repnz
into
mov
xchg
mov
pop
dec
inc
insl
sub
jg
stc
mov
pop
dec
leave
push
mov
adc
fsubl
addl
jecxz
jne
cmp
movsl
add
sub
xor
leave
xchg
or
stos
imul
aad
xor
mull
out
dec
sbb
sti
pop
mov
es
aas
lahf
adc
dec
xor
ja
mov
lods
xor
xor
add
jmp
rorl
das
mov
mov
jns
sti
fmuls
lahf
pop
mov
popa
xchg
pop
sub
mov
jmp
dec
in
ret
cmpsb
shrb
adc
out
and
mov
jp
inc
xchg
aam
mov
jns
fists
outsb
popa
out
jbe
js
sbb
sbb
jle
add
xor
push
les
stos
mov
repnz
mov
xchg
fwait
mov
dec
jl
inc
ret
dec
push
not
jns
ds
pop
cwtl
mov
incb
adc
jne
mov
in
sub
aaa
or
jno
or
pop
lock
sub
xchg
pop
sahf
cli
imul
push
mov
fwait
or
xchg
dec
movsb
std
inc
std
mov
xchg
push
add
mov
ret
frndint
and
clc
sarl
orb
fucomip
fildll
popf
scas
insl
adcb
in
push
cmpsb
push
sbbb
sbb
movsb
lret
jle,pt
add
adc
scas
push
leave
test
sub
pusha
subb
ret
andb
or
ret
and
mov
jl
outsb
jne
lock
mov
add
jp
mov
paddsb
jg
ret
push
inc
mov
mov
arpl
fists
aad
add
pop
xchg
add
clc
subb
ljmpw
and
ja
pop
push
aam
or
jp
je
je
inc
ficompl
in
push
pop
cmp
mull
inc
aaa
movsl
mov
cmp
add
bound
sub
lods
cmpsb
inc
inc
stos
int
pop
mov
pop
push
fwait
stos
pushf
pop
xor
cwtl
add
adc
out
mov
ss
cmp
push
pop
cmp
ljmp
sub
pop
rclb
and
psrlq
or
sbb
insl
xlat
mov
adc
movsl
aad
jne
dec
shll
push
cld
cmpsb
into
sub
pop
std
mov
js
adc
inc
insl
jmp
lock
insl
mov
dec
push
dec
sti
stos
push
call
sub
sub
push
sti
or
sub
mov
popa
sub
sbb
sbbb
fistpll
pop
out
out
mov
cmp
jg
roll
insl
add
mov
clc
popa
jge
sbb
das
cwtl
ljmp
roll
xor
cmp
push
or
in
cmp
dec
test
lds
adc
enter
imul
xchg
inc
pusha
sub
sub
andb
push
jmp
xlat
mov
pop
loopne
ret
outsl
jl
pop
into
icebp
cli
test
in
cmp
js
loope
mov
loope
xor
xor
mov
xlat
inc
popf
stos
sbbb
pop
sbb
gs
addb
aaa
jmp
mov
repnz
mov
imul
shrl
fwait
mov
dec
mov
fadds
movb
cmp
movsl
out
xchg
add
jl
pop
inc
sub
sub
out
inc
pop
aaa
or
ret
shlb
fwait
shll
jae
imul
stos
and
loop
andl
into
mov
ds
push
add
xor
cmp
adc
inc
and
xlat
hlt
push
mov
std
daa
adc
out
xchg
mov
xchg
push
pop
int
dec
dec
notb
inc
movsl
ret
adc
dec
push
or
scas
ret
mov
xchg
push
das
adc
adc
mov
mov
pop
sbb
pop
sub
add
int3
nop
test
insl
shlb
aam
dec
and
das
sub
cli
cmp
mov
test
xchg
ljmp
inc
xor
push
jle
mov
cmp
cld
fidivrs
or
nop
sub
push
and
jnp
hlt
cs
es
jno
adc
dec
lret
scas
adc
or
jb
add
push
mov
jmp
push
test
mov
in
cmp
insl
enter
xor
in
rorb
mov
xchg
mulb
fmul
call
mov
xor
xor
popf
xchg
ljmp
outsb
lods
loop
or
sti
test
mov
add
repz
push
filds
shrb
push
test
filds
cmc
mov
add
ret
push
xorb
cmpsl
ficomps
or
inc
aad
push
fisttpll
inc
cmc
mov
cmp
dec
add
pusha
lret
sub
mov
and
mov
adc
fwait
movsb
push
movsl
pop
mov
mov
mov
sub
mov
push
mov
jae
mov
aas
mov
pushf
orb
cmp
or
fdivrp
mov
push
out
mov
push
cmp
xadd
push
inc
pop
inc
adc
push
jns
jo
xor
outsb
repnz
sbb
lret
mov
lahf
lcall
pusha
sub
dec
dec
dec
iret
inc
in
sub
or
xchg
sbb
cmpsl
xlat
mov
mov
xor
out
jecxz
lret
sbbl
add
iret
jl
or
pop
sbb
pop
out
push
sub
cmp
cmp
pop
fcmovb
dec
pop
push
daa
or
dec
mov
lds
lcall
pop
jb
lcall
lcall
sbb
cmpsl
test
out
jle
ljmp
adc
push
and
arpl
mov
lock
sub
pop
mov
pop
cwtl
adc
std
mov
shll
xor
jmp
cmpb
mov
test
inc
in
jo
and
mov
adc
cmp
mov
test
fdivrl
dec
mov
and
sbb
sub
sbb
pusha
jle
test
pushf
pop
sbb
sub
das
push
sub
addr16
lahf
jb
scas
ja
dec
into
pusha
into
inc
out
je
out
push
aas
add
mov
xchg
push
lahf
fbld
ret
inc
repz
shrl
out
ficoms
in
in
out
cmpsl
mov
mov
sub
repnz
mov
or
stos
faddl
loopne
leave
sub
mov
test
je
mov
movsb
jg
jl
xchg
rorl
mov
addr16
xor
pop
sbb
inc
fwait
add
pop
orl
sbb
or
jmp
sti
addr16
test
lret
filds
sbb
inc
shlb
bound
aad
push
popa
in
pop
xor
xor
xchg
sub
fiadds
cmp
or
xor
cmp
fwait
push
lock
sbb
movsb
ficoml
imul
pop
cs
ret
mov
in
pop
push
call
dec
mov
ret
mov
pop
lods
add
filds
mov
push
into
push
push
inc
lret
popf
lretw
cmpsl
loope
xor
repnz
inc
mov
cmp
pop
popf
ret
fcompl
js
aas
xor
cmp
xor
subb
push
and
jno
imul
push
or
shlb
ljmp
arpl
outsl
sub
cmp
mov
addl
adc
push
mov
add
loop
cmpsl
leave
in
jns
lock
leave
dec
in
adc
nop
scas
inc
rorb
sbb
rcrb
stos
rcrb
pop
ret
sbb
decl
nop
lock
or
rcr
in
imul
jo
hlt
stos
xor
jns
adc
aam
ss
pop
les
pop
rclb
lcall
popa
sbb
arpl
mov
mov
pop
adc
insl
test
adc
scas
lock
push
iret
jo
rcrl
add
dec
sbb
cli
outsb
sub
and
jnp
sahf
outsl
adc
jmp
imul
mov
push
mov
sub
pushl
sbb
call
sub
stc
xor
add
add
and
sbb
out
movsb
popa
mov
push
dec
and
push
stos
sbb
scas
pop
xchg
leave
test
aad
mov
adc
sub
and
xchg
add
test
scas
jb
dec
int
cmc
sbb
xchg
xchg
pop
icebp
dec
leave
xchg
dec
test
jb
dec
dec
into
out
scas
xchg
inc
bound
mov
neg
repz
repnz
imull
cmp
sbb
inc
adc
scas
aad
jae
leave
fildll
sbb
jbe
inc
sahf
xchg
mov
int3
cli
add
test
int3
jg
sbb
add
and
in
shrb
xor
sub
ss
cmp
subb
sbb
and
inc
fiadds
jns
js
hlt
cmpsl
rorl
mov
push
je
rcl
jbe
lods
pop
or
or
dec
push
stos
hlt
push
cs
jnp
test
pop
das
test
arpl
cmpsb
mov
fsubl
stos
aad
sbb
push
mov
cmpsb
out
ss
and
cmpsb
js
aad
je
mov
add
subl
daa
and
sbb
dec
pop
jle
out
hlt
aaa
iret
and
mov
scas
test
or
and
pop
mov
adc
adc
clc
push
xchg
add
fisubs
xor
pop
sbb
add
cli
add
data16
jnp
or
jb
xchg
fisubs
jge
mov
sub
out
fnstenv
ds
out
push
jl
xor
in
data16
mov
sub
mov
cwtl
mov
mov
or
insl
push
push
pop
dec
jbe
incb
jg
shrl
jmp
add
sub
out
pop
std
xor
test
aad
xorl
pop
nop
mov
sbb
loope
and
mov
mov
aas
loope
pusha
out
sahf
fdivl
mov
add
push
loope
lea
rol
enter
mov
push
loopne
lock
xor
in
adc
sbb
popf
in
xchg
and
test
mov
adc
sub
adc
jmp
mov
adc
fstps
int
cmpsb
adc
and
in
cmp
push
movsb
xchg
fwait
xchg
mov
inc
into
mov
jne
pop
stc
ds
outsb
pop
xchg
int
cmc
jmp
or
fwait
pop
aad
sub
stos
stc
int3
imul
fcoml
loop
fcoml
ret
or
cmc
test
sub
mov
adc
or
repz
sti
loopne
mov
inc
inc
sbb
mov
loope
lcall
in
jo
loope
mov
ja
lret
and
out
fnclex
lock
rcrb
xor
xchg
cwtl
lahf
lea
jle
sub
cmpl
inc
push
leave
mov
add
push
in
mov
sarb
cmp
push
negb
hlt
jmp
mov
mov
jae
mov
stos
inc
cmp
insl
jb
bound
push
adc
xor
xchg
sti
adc
shr
repnz
push
adc
lods
jno
xchg
xlat
stos
lods
inc
pop
test
subb
push
push
sbb
and
call
dec
or
xchg
int
aas
sub
test
pop
xor
nop
or
and
scas
mov
jp
mov
loop
into
dec
stc
add
iret
pop
call
aaa
xchg
xor
cli
cmp
adc
or
xchg
mov
jle
xchg
popa
lods
pusha
ret
sub
in
push
icebp
sbb
leave
lcall
add
jnp
mov
lahf
andb
xchg
push
sbb
and
xor
enter
push
repnz
daa
xor
cld
in
jecxz
test
mov
insb
imul
push
popf
shll
jl
cmc
mov
aam
imul
fmuls
mov
jmp
lcall
fwait
mov
and
cmp
cs
outsb
push
imul
loopne
xor
fistpll
js
ds
incl
fstpl
mov
pushf
fdivp
pop
lret
cmp
push
mov
out
aas
and
cmp
cltd
mov
or
ficompl
mov
out
pop
adc
into
pop
fstps
stc
sar
sbb
cmp
ret
popl
aad
das
test
inc
add
fcomip
loope
sub
inc
cld
and
xor
push
adc
frstor
mov
inc
lods
daa
imul
push
in
out
dec
ds
lods
sbb
push
lds
add
fisubrl
dec
pop
not
idivb
push
and
xlat
cli
mov
lods
ds
sarb
mov
lock
mov
insl
pop
cs
je
cwtl
pop
cmp
dec
add
pop
arpl
xchg
das
push
popa
pop
inc
mov
sahf
je
cmp
add
sub
mov
movsl
sub
hlt
out
xchg
and
call
inc
fistl
sub
xchg
in
pop
lcall
stc
insl
jecxz
gs
test
cmp
iret
aas
jno
jno
and
lods
ss
mov
mov
outsl
js
mov
cmp
js
in
pop
stc
ljmp
aam
add
push
stc
add
xchg
cmp
cwtl
into
push
or
nop
xor
and
inc
mov
repz
mov
sbb
dec
pop
lret
adc
xchg
mov
dec
lcall
inc
icebp
xchg
pushf
hlt
scas
js
push
shlb
mov
xor
pusha
inc
xchg
cmp
mov
cmp
and
imul
add
adc
cmp
and
mov
in
push
cmc
outsl
pop
fidivs
cmp
sbb
mov
ret
mov
mov
add
add
popl
push
mov
imul
sub
add
sbb
cmc
lea
xor
clc
and
xchg
jg
inc
dec
mov
jl
arpl
fistl
aam
cmp
jbe
std
add
adc
loopne
pop
inc
movsl
inc
lods
ljmp
mov
mov
add
fs
adc
add
rcr
lret
outsb
addr16
nop
enter
mov
pop
dec
test
popa
repz
sahf
adc
mov
cmpsl
or
adc
adc
mov
fwait
mov
dec
arpl
lahf
in
xchg
mov
push
cmp
scas
mov
mov
pop
jns
xchg
and
push
push
out
outsl
fstpl
add
iret
lock
xchg
or
cmpsb
or
bndstx
jge
mov
pusha
scas
mov
sarl
inc
or
dec
shl
xor
test
sbb
mov
fdivs
cmpsl
es
jae
movsb
outsl
mov
inc
cmp
aam
inc
pop
sbb
lret
xchg
xor
and
xchg
cmp
flds
lcall
xchg
inc
adc
das
mov
jne
mov
ret
into
fsub
subl
inc
mov
fs
dec
cmpsb
inc
cld
inc
mov
mov
xor
mov
cmp
enter
sarb
subb
sbb
sahf
sub
sub
mov
addr16
data16
sub
xchg
dec
jl
mov
data16
pop
outsl
push
aaa
lods
mov
push
out
xchg
stos
push
fnstenv
mov
pop
loopne
enter
js
cld
arpl
bound
fdivs
mov
xchg
mov
lds
push
inc
movsl
sub
lock
out
rcr
mov
aam
lds
pop
jle
xor
js
cmovg
sub
fistl
xorl
xchg
in
mov
dec
add
mov
nop
jb
lods
rcrl
and
pop
or
mov
into
sbb
mov
leave
xchg
mov
dec
dec
rcrl
push
dec
and
outsl
inc
ljmp
adc
and
fnstcw
or
xor
les
mov
dec
sub
idivb
shrb
and
loop
loopne
shll
mov
push
repz
push
lods
dec
pushf
mov
xor
addr16
adc
and
sub
jnp
add
test
sbb
fdivrs
addb
das
jo
jo
mov
mov
aam
cmp
das
nop
mov
dec
adc
adc
and
imul
leave
enter
pop
add
nop
mov
jecxz
sub
mov
jecxz
sbb
dec
adc
pop
lock
mov
pop
lods
pop
pop
mov
lock
stos
ljmp
and
and
dec
dec
sub
sbb
pop
fcompl
xor
hlt
and
out
mov
push
dec
test
cld
imul
movsb
mov
push
leave
sbbl
dec
push
jno
sbb
movsl
adc
ret
push
ret
xchg
js
imul
cwtl
mov
fidivs
pop
cmp
xor
cld
cmp
inc
xchg
adc
out
sub
or
add
js
cmpsb
mov
xchg
in
scas
mov
and
cmc
inc
hlt
push
inc
mov
mov
xlat
call
adc
or
mov
push
jb
jle
cmc
lahf
or
loopne
sbbl
cmpsb
iret
test
sub
jns
mov
pop
mov
fsts
cmc
mov
mov
fwait
or
pop
or
xchg
jb
xor
sub
enter
pop
cld
mov
ljmp
sub
xor
cli
mov
mov
inc
or
insl
xor
push
movsl
add
pop
rol
add
inc
xchg
mov
gs
sarb
sub
imul
sub
add
pusha
xor
iret
push
in
aam
gs
mov
adc
leave
jo
pop
rcll
xchg
in
sub
xor
call
mov
dec
insl
pusha
and
inc
call
in
cltd
cmp
pop
sbb
stos
lret
stc
mov
bound
push
inc
adc
popf
add
cmp
roll
addr16
mov
inc
cltd
je
inc
xchg
aas
push
cmp
push
js
jg
pop
xchg
and
out
lahf
jmp
or
xlat
cs
pop
add
repz
in
in
jns
pop
adc
in
cs
lds
jnp
loope
pop
sub
cmovbe
inc
dec
mov
adc
insl
cmpsl
mov
lahf
add
push
ret
adc
xorl
push
push
fcoms
inc
jnp
ret
std
mov
aad
les
addb
adc
sub
add
push
mov
adc
push
out
add
xchg
mov
xor
cmp
sahf
call
ret
lret
mov
xor
fsubl
incl
icebp
pop
mov
cmc
ds
and
leave
and
test
in
mov
jae
imul
arpl
cltd
mov
into
nop
cwtl
negl
daa
or
inc
xchg
sbb
loop
and
inc
dec
adc
dec
jg
lods
mov
xor
ljmp
jb
dec
push
jmp
push
mov
push
iret
mov
ficomps
pop
or
push
pop
scas
call
add
ja
sar
add
std
mov
mov
sarl
enter
dec
xlat
sbb
aaa
jbe
fs
ds
adc
aam
lret
test
xchg
test
add
sti
ret
sarl
test
lea
mov
sbb
cwtl
xchg
cmp
js
lcall
xchg
pop
leave
and
xor
fdivr
sbbb
xchg
loopne
add
pop
ror
xchg
imul
and
jg
push
or
int
fists
pushf
cmp
sarl
xchg
popa
aas
lock
cli
fwait
sbb
cmp
aam
js
lods
popa
into
or
adc
push
mov
out
sbb
mov
add
lret
xchg
scas
arpl
mov
push
add
jns
push
js
ljmp
push
enter
fdivs
add
imul
data16
mov
mov
shll
push
cmp
pop
push
or
dec
and
lcall
rol
bound
sub
push
jp
mov
sbb
pop
aas
pop
aaa
fidivrl
jg
push
fistps
push
pop
jbe
lods
add
sub
cmpsl
lahf
jns
cltd
push
xor
push
push
lods
imulb
loope
cltd
stos
pusha
xchg
or
orb
inc
cmp
and
ss
xor
pop
stos
fstps
fimull
inc
xchg
sbbl
push
bound
clc
lcall
rolb
divb
inc
cmc
ret
sbb
adc
or
xchg
pop
pop
mov
and
lods
xchg
mov
mov
jne
sub
test
dec
dec
add
inc
je
iret
outsb
inc
pusha
xchg
xor
js
clc
mov
mov
lret
mov
push
jo
pop
test
lcall
dec
bound
add
adcl
ja
jge
js
cld
adcl
dec
sub
fldl
cs
xor
adc
daa
sub
aad
xchg
dec
dec
mov
jg
ffreep
jmp
jmp
in
pop
inc
lds
test
aaa
jne
pop
cmp
nop
inc
pop
icebp
mov
fwait
ljmp
mov
int
cmp
and
mov
fs
add
inc
fwait
jbe
jmp
inc
ljmp
cltd
int
or
pop
ss
push
sti
or
lock
stc
pop
dec
out
inc
cwtl
inc
in
ss
outsb
push
ss
into
pop
jne
test
xchg
inc
cli
mov
push
lret
js
add
mov
dec
test
test
inc
mov
and
add
in
lods
arpl
xor
mov
leave
mov
inc
into
lcall
in
dec
add
jp
xchg
mov
push
imulb
xchg
cmp
sub
rclb
int
dec
in
sbb
inc
push
mov
mov
jbe
and
pusha
push
add
mov
mov
loope
mov
dec
imul
rorb
fcomps
jge
out
ljmp
jno
push
hlt
xchg
xchg
call
jl
jae
push
test
adc
repz
cwtl
dec
sub
xchg
jno
fwait
popf
push
mov
inc
cmp
jp
test
lcall
out
xlat
leave
jecxz
pop
fdivrl
fyl2x
cmp
sahf
shl
mov
and
test
cmp
sub
dec
loopne
icebp
jbe
xchg
fcomps
popf
inc
mov
cmp
or
dec
loop
or
adc
lea
in
fs
sti
adc
jle
cmp
or
sbb
push
rclb
xchg
push
sbb
xor
sub
into
push
sbb
into
mov
mov
cmc
and
xor
xor
out
test
push
lea
inc
push
rcll
mov
push
adc
les
insl
lock
cmp
adc
pop
popl
add
adc
mov
int
mov
sbb
add
inc
sub
xor
cltd
ficomps
fisubrs
mov
jmp
add
data16
add
push
adc
and
pushf
popa
jle
or
xchg
shl
push
jae
inc
jge
leave
and
sub
cmpsl
fdivrs
inc
mov
imul
lods
add
push
repnz
lds
push
mov
std
pop
lock
ds
pop
aad
mov
stc
xor
xchg
cmp
in
out
sahf
xchg
into
xchg
test
shl
cli
aad
cwtl
movsb
imulb
rolb
mov
test
ror
xor
mov
outsl
xchg
adc
mov
test
mov
xor
in
or
les
cli
es
sbb
xchg
mov
out
mov
push
shl
push
addr16
fidivs
test
sub
jnp
jno
aad
or
adc
and
xchg
flds
mov
cmpsl
mov
lahf
repnz
mov
pop
push
out
lock
mov
leave
mov
push
iret
das
mov
or
lock
popf
test
adc
mov
jo
add
aaa
jo
pop
mov
rclb
sub
and
add
push
sbb
cmpsl
xchg
jbe
subb
rcrl
add
ficompl
enter
cmpsb
push
out
stos
push
stos
int
sbb
inc
jae
pop
out
nop
stos
sti
scas
int3
and
jae
sub
arpl
repnz
or
roll
sub
adc
fisttpl
sysenter
fstpt
xor
push
mov
push
les
lods
mov
pusha
xchg
or
loopne
mov
call
jnp
nop
cmc
push
int
lret
idivb
into
ret
sbb
fcmovnu
or
cmpl
xchg
xor
jns
mov
push
jnp
mov
pop
or
jne
xchg
sub
push
test
testl
je
lock
jle
jl
and
xchg
cmpb
add
in
xchg
mov
and
imul
cwtl
push
push
jns
jg
jnp
aaa
jb
rolb
inc
push
ljmp
imul
lods
jns
xchg
or
scas
imul
dec
mov
jp
add
dec
xchg
adc
dec
xchg
les
neg
ret
mov
xor
jg
xor
jl
gs
movsb
sub
les
shll
adc
push
lahf
sub
out
jb
mov
push
mov
pop
aas
lock
mov
cltd
xor
popa
or
lahf
push
jns
sahf
repnz
out
jl
mov
cld
ss
enter
icebp
fiadds
inc
add
addr16
lea
jmp
cmp
insb
je
test
mov
fwait
pop
pop
pop
xor
xchg
push
or
and
or
mov
es
in
loop
call
mov
idivb
cmp
loope
add
push
imul
arpl
or
cli
or
jb
xor
sub
pop
sbb
fimull
dec
std
sub
std
repz
inc
add
lods
sub
push
xor
movsl
mov
jmp
bound
push
out
stos
fs
mov
sub
inc
hlt
movsb
in
mov
sbb
sbb
push
inc
ss
adc
push
jo
xor
cmpsb
mov
pop
sbb
cmp
add
push
pusha
mov
mov
pop
push
fisttpll
jns
mov
and
mov
pop
addr16
imul
jle
xchg
xlat
cmp
xlat
icebp
rcll
xor
test
insb
jbe
fbld
sub
hlt
adcl
aas
aam
out
roll
aaa
imul
mov
flds
or
test
sbb
mov
push
push
cmp
loope
mov
jge
enter
lcall
stos
pop
xchg
sub
hlt
out
ljmp
jo
int3
cmp
je
in
stc
movsb
pop
lods
bound
jmp
mov
int3
aam
xchg
hlt
imul
sbb
xor
jo
aas
mov
addb
push
mov
mov
sub
outsb
insb
xor
sbb
sub
dec
int
lea
arpl
cmc
push
push
in
dec
daa
cmp
inc
lret
in
mov
xchg
mov
aaa
mov
cli
pop
je
sub
dec
cmpsl
rorl
outsl
mov
stos
out
xchg
xor
cmp
mov
pop
insl
insb
mov
sahf
pop
mov
out
mov
cmp
das
ret
out
cli
or
adcl
mov
or
int3
and
ss
cmp
rcr
mov
das
add
xchg
mov
jne
or
dec
push
sbb
cwtl
dec
add
push
mov
push
add
and
xchg
clc
lods
jp
clc
xor
orps
repz
sbb
mov
pop
ljmp
cmp
pop
cmpsl
push
lea
pop
inc
mov
aas
pop
add
addl
outsb
and
pop
xchg
and
divl
mov
add
inc
outsb
sbb
and
push
addr16
adc
jns
mov
cld
push
in
and
adcl
mov
push
mov
adc
sbb
fwait
jb
push
and
loopne
daa
ja
cltd
mov
les
jl
std
fwait
pop
push
popa
dec
in
int
mov
push
into
sub
add
test
roll
ljmp
ss
out
aas
repnz
jmp
mov
std
and
dec
fildl
inc
mov
cwtl
inc
sub
pushw
lds
mov
cwtl
xchg
push
jno
ror
sti
cmp
xchg
mov
add
cmp
les
sbb
ror
mov
or
push
push
mov
aas
xor
shr
outsb
daa
jno
and
sub
sbb
xlat
jnp
pop
dec
in
xor
jecxz
data16
jmp
add
inc
cld
xchg
insb
inc
push
push
imul
in
and
movsl
test
shlb
icebp
cmp
lret
jnp
rclb
out
adc
repnz
imul
fadds
jns
je
data16
lods
inc
orl
pop
sub
ficoml
adc
add
fldt
xor
ljmp
or
in
or
sbb
push
out
in
ret
push
mov
xor
std
xchg
xchg
pop
push
pop
repnz
pop
xchg
xchg
mov
aaa
mov
xchg
aaa
xchg
inc
dec
push
movsb
ja
imul
cmpsl
sub
icebp
jmp
sub
imul
in
jne
mov
sub
rcrb
inc
mov
sub
in
mov
lods
push
fwait
decl
dec
int3
adc
mov
aad
lea
xor
es
mov
pop
mov
xchg
in
push
ret
inc
aas
dec
cltd
movsl
dec
push
loope
cmpsl
insb
inc
jbe
jo
aad
pop
adc
pcmpgtb
jmp
sarb
or
inc
mov
sbb
mov
cmp
fsincos
cmp
sbb
xchg
add
movsl
sub
sub
fs
ja
ds
nop
dec
lret
mov
icebp
outsl
mov
lret
dec
cmp
idiv
call
or
ss
in
or
xchg
and
imul
xlat
les
cltd
rcrb
dec
mov
jg
movsl
icebp
aad
jmp
aam
jl
les
pop
les
cli
mov
cs
pusha
push
es
xchg
push
cwtl
jns
loopne
jb
and
sbb
jle
in
push
push
cmp
movsb
arpl
adc
divb
mov
ds
inc
jle
lret
int
aam
mov
lea
add
adc
out
sahf
fsub
lcall
push
stc
jae
in
imul
mov
push
outsb
lds
mov
jg
push
and
out
bound
mov
fsts
lock
xchg
out
dec
inc
andb
cmp
inc
sbb
mov
mov
imul
mov
jne
jno
push
rorb
cwtl
push
ficompl
xchg
movsb
ret
lock
mov
add
pop
imul
inc
or
sub
fcompl
sub
movsl
les
je
xchg
mov
mov
dec
push
xchg
cmpsb
stos
mov
lods
out
xchg
mov
inc
loopne
adc
mov
cmp
dec
xor
int
sub
enter
and
hlt
push
scas
jnp
pop
dec
fnstenv
mov
xor
cmpsl
mov
inc
xchg
xlat
lods
inc
div
cwtl
loope
xchg
sbb
jle
hlt
push
mov
dec
repz
mov
in
lcall
xor
cmc
xor
dec
ljmp
cmp
sub
dec
jle
nop
mov
dec
lcall
fisubl
lcall
int
jle
add
mov
rcrl
in
pop
sbb
mov
imul
test
sbb
cs
push
push
or
aam
adc
addr16
push
add
rorl
inc
cmpsb
pop
cmpsl
test
cmp
call
inc
sbb
ret
pop
jnp
push
jg
jno
sbb
es
call
pop
cmp
les
leave
popf
es
push
pop
movsl
xchg
push
imul
push
xchg
stc
enter
out
xlat
mov
sbb
or
lcall
lret
jno
push
gs
fisubrs
loopne
idivl
pop
insl
cmp
sti
jne
popl
jp
mov
or
sbb
xchg
sbb
dec
or
daa
repnz
repz
pop
addb
xor
scas
jl
test
jbe
lea
stos
sbb
enter
call
fwait
out
inc
xor
js
or
data16
lods
push
shrl
in
cli
jo
in
cmp
sbbb
fwait
cltd
fldl
mov
in
outsl
js
sbb
das
mov
adc
fisttpl
mov
mov
adcl
and
add
push
and
add
jge
dec
adc
cmpsl
addr16
addr16
scas
sbb
xchg
sbb
data16
adc
data16
cltd
clc
fdiv
enter
subl
sarl
jecxz
ljmp
or
sub
adc
stos
pop
xor
jns
adc
mov
in
push
cmpsb
add
imul
push
pop
push
and
adc
cwtl
xchg
adc
cltd
pusha
out
xor
sahf
into
adc
xchg
inc
mov
ja
lea
bound
xchg
je
xchg
lcall
fisttpl
enter
imul
adc
pusha
es
cmpsl
cmp
js
popf
mov
sbb
scas
cmp
je
aam
or
jge
hlt
push
scas
in
out
and
lds
pop
outsb
adc
push
inc
pushf
loop
enter
cmp
fdiv
mov
cmc
xor
pop
pop
sub
jle
cmp
push
mov
in
add
adc
movsl
inc
xchg
addl
pusha
mov
cmp
in
jge
sub
pop
icebp
cltd
insb
call
adc
fwait
shl
es
and
mov
rcrb
adc
out
mov
mov
xor
pusha
addr16
inc
out
jnp
aam
scas
hlt
nop
add
push
inc
iret
and
mov
or
dec
idiv
mov
sbb
pushf
jp
stos
std
inc
stos
popf
scas
or
cmp
test
xchg
pop
pop
imul
cmp
cmp
xchg
js
push
adc
inc
pusha
fwait
inc
ror
xor
dec
aad
sub
or
test
lock
mov
pop
pushf
xchg
sbb
dec
inc
clc
pushf
xchg
or
jo
sbb
jg
sahf
out
add
sti
xchg
inc
xchg
mov
pop
test
js
mov
mov
lret
add
mov
aas
xor
add
and
inc
pop
cld
inc
push
sti
ljmp
push
testl
push
mov
or
add
jnp
cmp
ljmp
sbbb
sub
xchg
enter
mov
mov
mov
imul
sub
out
lret
and
fildll
sbb
xor
sub
lret
mov
jl,pn
in
xchg
xchg
xchg
pop
lahf
sub
jne
divl
jb
xor
sti
xchg
test
mov
or
adc
rcr
imul
outsb
mov
aas
adc
shll
mov
or
shl
xchg
test
sub
xlat
gs
mov
in
mov
iret
dec
popf
and
aam
inc
sbb
sub
out
loope
mov
or
mov
aad
xchg
sbb
jne
and
mov
roll
cmp
dec
or
xor
sub
sub
sbb
add
mov
and
cwtl
out
push
push
lock
ret
inc
and
jae
loope
mov
lret
cmp
xlat
or
insb
mov
inc
xchg
adc
fists
js
sub
inc
aaa
inc
jns
inc
pop
outsb
inc
ljmp
or
mov
pop
scas
adc
fwait
cmpsl
mov
or
rclb
roll
xor
ss
sahf
inc
notl
push
sub
push
movsl
sub
add
nop
cmp
out
mov
lret
leave
xchg
push
pop
movsl
dec
dec
and
xchg
bound
dec
div
bound
mov
push
xchg
mov
add
loopne
rorl
lock
jle
test
arpl
xor
in
sti
ds
fwait
push
cmpb
aam
into
daa
mov
sub
add
stc
push
sub
mov
adc
push
lret
add
dec
sbb
pushl
lea
leave
test
dec
aam
aaa
mov
mov
xor
inc
sbb
xchg
mov
out
lcall
push
push
pop
mov
mov
fidivs
sub
mov
dec
inc
rcll
mov
mov
leave
add
pop
mov
popa
not
and
xchg
lods
in
int
push
pop
dec
adc
hlt
mov
lcall
add
sbb
jl
mov
sbb
inc
sub
ret
sbb
cld
push
pop
lahf
push
fidivs
or
dec
scas
cmp
xchg
adc
and
adc
push
add
sbb
mov
leave
fistpl
jo
push
outsl
jg
cltd
dec
nop
nop
jnp
xor
inc
jecxz
dec
repnz
push
mov
rolb
inc
lods
inc
stos
mov
inc
inc
dec
xor
mov
cmpsb
lret
dec
pop
movsb
aad
dec
xchg
inc
sub
mov
out
jp
ds
dec
and
mov
adc
test
cli
cmp
gs
mov
insb
shrl
sbb
shl
push
test
adc
push
ret
sub
imul
lcall
jbe
xchg
push
and
mov
inc
int3
sarb
rcl
pop
enter
sbb
push
inc
jl
push
sub
lds
mov
mov
decb
in
shr
hlt
in
mov
les
or
rorl
xchg
loope
cmp
dec
jle
lock
das
lret
ss
test
hlt
sahf
idiv
cmp
pop
call
adc
les
sbb
lds
inc
or
pop
mov
push
mov
mov
lcall
adc
jle
jmp
mov
cmpsl
add
mov
scas
mov
in
dec
push
stc
dec
inc
dec
fnstcw
ja
into
jne
add
mov
lret
add
scas
ret
inc
add
imul
ret
dec
loopne
ss
in
pop
xchg
sbb
cwtl
in
jle
inc
lahf
xchg
test
pop
cmpb
lret
iret
cmp
push
repnz
cmp
stc
dec
mov
jno
fnsave
stc
mov
out
mov
pop
mov
sub
jl
sbb
test
call
adcb
cmp
mov
push
jge
sbb
stc
mov
adcl
sub
inc
xchg
and
jmp
jbe
clc
orb
push
lret
hlt
dec
push
add
in
jae
popa
jns
xor
mov
lea
movsb
mov
mov
mov
sbb
or
xchg
or
bound
mov
and
and
int3
mov
xchg
add
push
mov
sub
jo
popa
js
mov
bound
cmp
cmpsb
clc
push
pusha
sbb
or
data16
xchg
lods
mov
sub
mov
dec
cmpsb
js
or
test
or
xchg
inc
and
mov
pop
cmp
outsl
fistps
and
cmp
imul
cmc
jns
mov
sub
cmp
mov
add
push
movsl
push
andl
inc
fistpl
fildl
cmpsb
add
rcl
mov
pop
mov
lea
pop
or
mov
fisubl
sbb
dec
cltd
inc
jae
loopne
mov
ss
out
xor
jle
sbb
mov
gs
lods
cmp
cmp
mov
loopne
ret
mulb
dec
addb
and
mov
movsl
xchg
lahf
inc
ss
out
fldenv
push
cmp
cmpsb
outsb
mov
dec
sub
jecxz
push
mov
xchg
dec
adc
jl
in
frstor
aaa
shr
fstps
and
fcompl
clc
lods
push
push
insb
xor
das
leave
mov
iret
sbb
stos
fldt
jmp
lea
loope
mov
mov
mov
xchg
imul
lods
fisttpll
xchg
mov
and
or
xchg
pusha
pop
push
cli
adc
test
mov
in
orl
mov
sub
sub
insb
je
xor
lahf
sbb
and
mov
push
mov
fwait
into
xchg
das
dec
pop
sub
jle,pn
in
mov
adc
sbb
mov
mov
mov
testl
mov
hlt
jne
jecxz
mov
mov
mov
push
jge
outsb
xchg
cld
rclb
push
movsl
sti
sub
imul
mov
jno
jbe
pop
pop
adc
jge
xchg
into
adc
cmp
mov
lods
sbb
add
or
mov
aaa
pushf
add
sbb
jae
enter
mov
push
in
push
mov
mov
adc
sub
loope
adc
sub
fidivl
jle
fs
push
test
lea
inc
pop
lret
lret
mov
or
mov
cmp
enter
in
or
jbe
xor
loop
lret
jnp
jns
ljmp
push
jne
cmpsl
or
xlat
popl
sub
and
push
pop
dec
in
sahf
mov
adc
lcall
mov
fwait
adc
pop
adc
cmp
cmp
pop
hlt
pop
mov
in
add
jp
xchg
sbb
test
add
sub
push
lahf
or
pop
mov
adc
int3
fidivl
je
push
dec
mov
inc
js
cmp
popf
out
std
mov
out
pop
aam
repz
push
xor
mov
into
dec
lret
pop
mov
add
sbb
int3
push
js
sub
subb
stos
push
aam
scas
insl
jle
repz
rcrl
ret
adc
inc
cmp
lret
lock
stos
fwait
cmp
fnsave
inc
enterw
aad
rcr
bound
pop
xorl
cmp
dec
inc
icebp
jno
outsl
lahf
push
rorb
in
call
out
rorb
in
fldenv
pop
mov
in
sub
mov
mov
sbb
stc
shrl
xchg
xchg
aas
scas
cltd
adc
mov
and
push
mov
pusha
xor
fs
push
jnp
dec
xchg
in
xor
jb
lret
sub
lret
fnstenv
mov
mov
cli
pushf
cmp
lcall
cmp
leave
ja
jnp
stc
scas
lods
nop
and
mov
adc
inc
jne
adc
jbe
clc
add
jb
add
cmc
push
dec
mov
jne
mov
repz
add
out
ficompl
adc
cmpl
mov
push
lods
ret
inc
test
movsl
pop
imul
dec
loope
test
pop
loopne
inc
les
das
mov
jle
push
popf
enter
sarl
inc
test
push
fiaddl
dec
orl
fidivs
push
add
sbb
pop
loope
movsl
jle
push
fnstsw
call
mov
push
sub
loopne
in
aad
mov
mov
sub
jge
dec
and
movsl
and
ret
std
imul
or
aas
push
mov
inc
repz
xchg
or
stos
in
stc
fdiv
aad
jl
int
mov
sbb
dec
gs
jns
push
pop
and
jo
repz
scas
xchg
mov
inc
repnz
and
sbb
ja
jns
dec
xchg
lahf
jge
adc
pop
pop
scas
push
and
or
xchg
cmp
dec
jle
leave
jo
mov
jbe
imul
fidivl
jae
mov
scas
cmp
leave
jge
dec
lods
jg
cmp
mov
and
jnp
sarb
and
iret
adc
sarb
xor
pop
mov
and
icebp
std
jnp
dec
fcoms
je
sbb
cmpsl
adc
outsl
fs
incb
or
add
in
or
push
cmpsl
mov
shl
movsl
dec
jecxz
dec
je
jno
and
pop
sub
movsl
inc
loope
sahf
insb
fcompl
stos
mov
insl
xchg
sub
aad
lahf
cmpsb
dec
out
cltd
inc
xchg
insb
xchg
inc
faddl
test
adc
pop
mov
test
stc
sbb
loopne
sub
xor
sbb
fs
lods
incl
hlt
mov
and
mov
mov
cmpsl
add
popf
stos
push
pop
xchg
test
cmp
lods
test
or
lcall
and
dec
repz
cmp
stos
lahf
mov
mov
mov
fstl
xchg
pop
in
outsb
xor
dec
cmp
xorl
xor
xor
movsl
jo
aas
gs
insl
dec
mov
je
and
notl
add
ds
out
dec
sub
shlb
sti
outsl
mov
or
mov
or
pusha
xchg
loopne
and
add
add
aam
leave
fldl
flds
pop
stos
lds
mov
jle
aas
mov
divb
push
pop
fisttpll
push
xlat
xlat
rol
pop
adc
movsl
sub
add
jg
les
dec
jno
adc
cld
out
and
inc
leave
pop
and
repz
add
or
mov
or
xor
jecxz
jnp
loopne
mov
dec
push
xchg
mov
ret
and
and
std
add
mov
mov
push
and
xchg
iret
rcll
pop
pusha
add
sbb
popf
sbb
mov
sub
in
xchg
adc
push
insl
jg
xlat
in
loopne
jb
insb
and
mov
sbb
test
notl
push
cld
addb
cmp
pop
lret
xchg
loope
push
mov
ficompl
jle
into
mov
stos
repz
adc
scas
dec
cmpb
cmp
leave
test
cs
cli
ficoml
jae
dec
push
lcall
aaa
pushf
addr16
in
dec
ficoms
add
and
mov
add
inc
insb
dec
iret
dec
xor
sarb
xor
loop
inc
dec
cld
bound
pop
mov
sbb
fldl
jo
mov
fwait
cmp
out
mov
mov
ss
in
fldenv
addr16
sti
in
arpl
mov
movsl
xchg
test
jmp
testl
in
mov
pop
clc
mov
pop
lret
ss
inc
inc
cmp
mov
add
mov
std
mov
notb
dec
sub
cmc
int
dec
sub
inc
and
jmp
js
adc
sub
out
sti
or
mov
cmpsb
or
rorb
and
mov
inc
xchg
dec
cli
xchg
mov
mov
out
clc
sub
mov
or
jg
or
mov
pushf
imul
lahf
jo
jb
and
sahf
cwtl
mov
push
and
sarl
inc
or
xchg
leave
out
pop
int3
cmp
daa
jae
xor
add
loope
mov
loope
inc
push
scas
test
leave
sub
push
add
mov
int3
cmpb
inc
iret
adc
in
cmp
idiv
cmp
rcll
and
das
jmp
and
stos
rcrl
jno
xor
lods
imul
mov
into
mov
ficoml
jle
fwait
add
sbb
adc
fucomip
xchg
incb
or
adc
push
lods
pusha
sbb
jno
orl
mov
scas
inc
sub
jns
sbb
mov
jecxz
and
out
fwait
dec
sub
xlat
ret
cmc
pop
mov
aam
fimull
ret
cmc
mov
cmpsb
rcrb
push
jmp
xor
cmpsb
inc
push
stos
jg
fnstsw
push
orl
adc
dec
cmp
lret
mov
lcall
mov
dec
pop
pop
sti
mov
jg
pop
int
sbb
add
lcall
mov
jecxz
xchg
inc
cmp
jns
jno
jge
inc
inc
fistps
sbb
loope
xchg
xlat
mov
jg
sub
clc
xchg
mov
xor
loopne
push
icebp
subl
pop
push
cmp
out
loop
je
sub
adc
lahf
clc
sub
mov
jns
jp
xor
or
mov
push
xchg
je
lea
inc
xor
cltd
imul
push
jl
mov
in
add
dec
mov
loope
pop
int3
add
fisubrl
pop
divb
jge
pop
outsb
into
jbe
loope
pop
mov
add
dec
adc
sbbb
cs
fisubrl
lds
mov
fs
push
pop
dec
jns
inc
repnz
pop
or
lret
pop
cwtl
daa
aad
mov
sbb
stos
filds
lcall
adc
ffree
mov
cmpsb
dec
inc
xor
call
mov
mov
icebp
in
pushf
adc
and
sbb
loop
nop
imul
sub
rorl
sti
mov
jne
fwait
bound
dec
in
push
je
xchg
lea
shlb
push
push
xchg
les
mov
xchg
scas
mov
imul
in
xchg
push
ret
mov
and
jne
lods
lahf
popf
adc
inc
inc
lcall
adc
bound
pop
mov
xchg
outsb
aas
ljmp
dec
cmp
gs
mov
jecxz
gs
mov
out
add
push
in
fdivs
out
xchg
sub
mov
mov
pop
outsb
test
cs
pop
jnp
sub
or
cld
test
or
cmp
mov
cmp
add
mov
xor
cmp
mov
jg
test
adc
loope
or
push
jbe
or
jb
mov
jge
fisubrs
daa
ror
jge
add
fdivrs
sahf
mov
xor
jg
mov
ds
jge
jns
xchg
mov
lcall
cmp
leave
stc
jbe
mov
iret
cs
adc
lcall
inc
lcall
mov
imul
in
xor
push
mov
pusha
mov
xchg
sub
jl
bound
sarl
fadd
rcrl
jle
js
cld
inc
adc
push
mov
push
pop
sbb
push
jbe
xchg
mov
sub
fnstenv
icebp
andl
lcall
sbb
sysexit
jb
mov
cmpb
insl
jp
insb
je
pop
xchg
into
cmp
cmp
pusha
add
int3
ret
popf
scas
daa
ss
fmul
jecxz
test
and
iret
push
push
fstl
mov
pop
imul
pusha
xchg
fmull
aam
test
cmp
sbbl
push
ret
xor
mov
out
mov
aad
pop
int
pop
adc
inc
xor
fmulp
adc
dec
les
push
xchg
inc
inc
and
insl
adc
repnz
or
les
mov
fs
add
fidivrl
adc
cmpl
cwtl
and
mov
adc
adc
stc
ja
test
in
nop
sarl
aam
data16
xor
cmpsl
inc
pop
shll
mov
xor
cmc
rcr
sub
pop
je
push
subl
mov
arpl
push
out
or
push
in
xchg
aaa
pop
mov
loope
mov
cs
jge
div
and
test
cli
fists
pop
mov
add
sbbl
jo
jae
sbb
fisubrs
ja
lock
mov
jb
and
pop
cmp
rcrb
pop
or
mov
or
and
dec
mov
mov
mov
sub
pop
out
in
sub
int3
shlb
imul
lds
adc
hlt
mov
ret
xor
pop
repnz
dec
adc
nop
ret
aad
xchg
pop
push
xor
mov
adc
jg
icebp
lret
push
sti
lret
push
jle
push
inc
push
mov
xchg
mov
repnz
out
insl
adc
outsb
cmpsb
movsl
outsl
scas
sbb
cmpsl
push
pop
jp
inc
jae
xlat
pop
les
add
movsb
insb
ret
sub
jo
mov
inc
mov
rcr
jg
mov
sub
dec
jge
es
mov
dec
cli
mov
pop
js
jno
dec
dec
sbb
push
pop
cmp
es
scas
pop
jp
and
adc
in
jg
and
push
adc
mov
lock
into
xor
das
or
int
pop
xorb
mov
out
jne
push
inc
inc
jge
popf
pushf
sar
rorb
iret
fiadds
leave
jns
pop
add
fidivrs
push
int
adc
lds
outsb
std
decl
pop
pop
mov
jle
push
ss
jp
jnp
mov
push
addr16
cwtl
mov
std
inc
dec
arpl
push
xchg
mov
sbb
repnz
mov
js
xorw
es
and
cmpsb
jne
cmc
dec
cmc
cmp
and
cmpsl
and
aam
test
push
push
or
scas
sbb
in
push
sbb
imul
ljmp
cmpl
push
arpl
mov
comiss
and
sub
and
sbb
dec
mov
sti
dec
push
mov
pop
aad
hlt
mov
xchg
inc
pusha
pusha
jns
lea
imul
int
scas
fsubs
sbb
dec
jnp
inc
movsb
lea
fldl
jle
jne
sarl
loope
sti
cld
push
jp
lahf
sub
push
inc
pop
scas
sub
and
lret
mov
mov
and
pop
mov
inc
jne
sub
clc
xor
xorl
jl
cmp
mov
sarb
push
push
fsub
mov
sbb
lahf
sbb
outsl
or
and
jl
in
lahf
pop
dec
shll
add
outsb
jb
jns
xchg
aas
push
pusha
negb
sbb
movsl
push
and
and
mov
movsb
push
mov
fmull
movsb
insl
adc
popf
imul
jae
push
leave
xchg
inc
xchg
sbb
dec
cmp
fbld
xchg
enter
cmp
lea
int3
and
cmp
or
test
in
push
mov
xchg
in
xchg
and
dec
das
leave
lods
jae
pusha
imul
lret
cmp
repnz
test
push
push
movsl
lods
into
jmp
rorl
out
in
dec
and
cmpsb
mov
pusha
test
push
cltd
sub
or
sub
jmp
ds
test
pop
negl
bnd
jo
xchg
test
repz
sub
test
dec
inc
jge
shlb
and
dec
jb
cmpl
and
sub
pop
sub
mov
cmp
mov
into
orb
push
xlat
inc
rolb
scas
xchg
mov
ja
push
das
rcrl
jns
inc
imul
mov
mov
mov
ret
in
xchg
inc
sahf
addl
jl,pn
in
cmc
jns
orl
jge
aaa
add
insl
mov
into
push
mov
loop
inc
pop
mov
xchg
scas
add
jg
ds
ja
insb
outsb
pop
call
xor
dec
sub
gs
mov
jecxz
jnp
jbe
push
pop
fmuls
jne
fidivl
stos
xchg
pop
sub
lret
cmc
or
scas
cld
inc
mov
pushl
scas
test
jns
adc
outsb
pop
jbe
lret
rcr
cltd
ss
xchg
shlb
sahf
pop
mov
sub
sbb
jne
pop
mov
shll
cwtl
cltd
hlt
dec
add
xchg
and
jb
addr16
addr16
lods
fsubrl
mov
pusha
xor
dec
cmpsl
or
movsb
jae
cwtl
loop
aaa
clc
mov
repz
mov
inc
rol
mov
jge
add
outsb
inc
out
js
jmp
fdivs
shrl
adc
inc
dec
jno
cmp
ljmp
xor
mov
push
lds
adc
mov
out
mov
mov
ffreep
loop
fnstsw
mov
push
iret
mov
sbb
lret
cs
fs
fldl
mov
sub
cmp
jle
lcall
cmpsl
rcrb
idiv
stos
and
xchg
mov
mov
sbb
mov
js
shll
or
add
shrb
test
sub
cltd
mov
xchg
cwtl
mov
add
ficoml
push
stc
inc
dec
aas
loopne
and
pop
mov
xchg
insb
sbb
or
ja
fstps
adc
insl
cmp
shlb
sub
sub
mov
jge
mov
xchg
pop
cmpsl
int
ljmp
cmp
and
jne
mov
das
push
mov
mov
cmpsl
cmp
cltd
push
mov
stos
pop
movsl
sub
xor
popa
pop
out
or
sub
outsb
fsubrl
insb
stos
cmp
daa
xlat
inc
dec
inc
adcb
test
pop
in
push
cli
inc
or
data16
mov
int3
cld
shrl
ret
push
icebp
ss
xchg
pop
pop
pop
sub
xchg
pop
ja
inc
sbb
xchg
cmpsb
pushf
mov
test
xor
pop
sub
cld
jge
sub
icebp
loope
jecxz
js
mov
jne
and
cwtl
xor
mov
arpl
cmp
in
pop
jl
das
mov
mov
xor
lock
push
dec
jmp
in
sub
or
loop
filds
xchg
into
xchg
loopne
cmp
mov
daa
ret
and
cli
cmp
sub
lock
cmp
or
push
add
sbb
add
inc
pop
iret
mov
je
mov
fsts
jl
pop
int
sbb
mov
roll
xor
testl
fld
loope
sbb
sbb
add
push
add
test
cs
xchg
ds
leave
or
fwait
sub
mov
xor
sti
movb
loope
pop
dec
sub
mov
and
push
push
mov
push
rolb
es
jl
mov
test
jge
cmc
xchg
pop
lret
enter
stos
sti
xor
out
mov
jl
sti
xchg
lret
das
xchg
or
iret
add
add
cs
pop
jecxz
aam
aad
jecxz
pop
lret
pop
xchg
jno
packuswb
pop
inc
dec
pushf
rclb
or
inc
and
dec
shlb
jmp
das
adc
mov
cmc
mov
sub
mov
pop
pop
imul
rcrl
addl
fldt
push
push
cmp
pushf
or
push
xor
enter
lods
sbb
je
enter
sti
pop
add
test
add
sub
push
pop
iret
mov
sarb
leave
test
xchg
adc
subb
decl
std
out
mov
dec
mov
jmp
test
ret
push
jnp
sbb
pop
imul
or
cmc
mov
lret
and
mov
clc
shrb
pop
ss
cmpsb
shlb
mov
lods
jl
add
orb
xchg
adc
hlt
xor
rcrl
into
ffreep
mov
outsl
jle
insl
mov
mov
cmp
ss
cmp
out
add
xchg
cld
negb
dec
pop
xor
sub
pop
adc
dec
mov
jnp
test
push
mov
fdivl
or
cli
adc
mov
inc
xor
test
lahf
test
in
out
dec
pusha
adc
mov
mov
jbe
fldl
fisttps
mov
add
add
mov
hlt
xchg
outsl
cwtl
lds
mov
push
in
xchg
jle
push
jne
mov
pushf
push
movsb
mov
loopne
imulb
addr16
pop
jns
add
jge
cmp
and
xchg
add
mov
inc
ret
in
and
xchg
insb
jmp
mov
jecxz
jne
dec
repnz
jmp
and
mov
cmp
in
or
stc
popa
jmp
xchg
pop
pop
adc
mov
mov
call
in
mov
jg
jge
or
jbe
cmp
leave
cmp
movl
test
in
or
insl
mov
sti
pop
stc
add
lret
cmp
mov
push
xchg
into
mov
inc
dec
cmp
iret
pop
das
in
mov
lret
pop
mov
mov
addl
mov
test
sbb
cmp
loopne
stos
clc
out
movsb
mov
int
xorl
mov
pusha
sub
jns
mov
pop
xchg
sub
push
pop
adc
mov
mov
js
mov
enter
sarl
sub
push
je
push
frstor
aas
mov
sti
mov
mov
scas
jns
mov
cmp
xor
popf
or
mov
iret
jecxz
imul
in
into
jno
cmpsl
xchg
jns
pop
call
hlt
mov
daa
cmp
mov
and
cli
loop
push
push
imul
fwait
dec
push
or
adc
inc
mov
and
dec
lock
icebp
adc
cld
sahf
xor
add
sahf
push
dec
adc
testb
rclb
es
pop
xor
lods
arpl
xchg
adc
and
outsb
pop
cmp
and
pop
push
lcall
xchg
loopne
sbb
sbb
pop
mov
test
adc
dec
sub
mov
data16
iret
mov
adc
cmp
outsb
sbb
push
mov
push
cmpl
or
scas
cld
in
xchg
and
cmp
sub
repnz
cmp
es
cli
stos
cmpsl
lods
add
and
inc
jmp
xchg
push
mov
jl
inc
insb
in
repz
mov
dec
push
and
int3
mov
lods
xchg
pcmpgtw
in
test
fcmovb
leave
in
divl
mov
ret
dec
pushf
fucom
insb
ret
jl
inc
adc
sub
lahf
lods
sub
cmpb
dec
xchg
pop
inc
push
sbbl
mov
cmpsb
fs
mov
add
shlb
mov
sbb
dec
inc
ror
fs
testl
jnp
ljmp
xlat
adc
outsl
xlat
pop
pop
pop
jg
sbb
jg
out
mov
cs
sarb
mov
test
push
sub
push
xor
das
mov
cmp
test
jecxz
xchg
outsl
lock
sbb
xor
pop
xchg
pop
pushl
icebp
and
pop
test
jb
es
xlat
les
mov
xchg
outsl
jb
mov
inc
outsb
add
sbb
ret
pusha
push
push
xchg
cmp
popf
lock
adc
push
push
fidivrs
mov
pop
inc
imul
les
sbb
jl
jbe
test
mov
pop
pop
mov
push
call
push
int3
in
pop
inc
fdivs
pop
mov
push
sub
clc
jno
and
mov
and
mov
sub
and
daa
ficoms
adc
iret
test
push
adc
fwait
pop
jno
add
sahf
cmp
cmp
outsb
add
popf
and
mov
pop
outsl
fdivrl
inc
push
xchg
pushf
add
pop
lcall
insb
ss
lahf
aaa
gs
fisttpll
sub
insb
loopne
push
sub
shll
pop
fidivs
shll
and
xchg
mov
or
cld
mov
and
xchg
pop
outsl
pop
mov
jge
adc
push
cmp
xchg
pop
or
jb
jo
ret
sub
and
push
mov
cmp
and
jge
inc
mov
into
aad
arpl
dec
pop
inc
fcomi
cli
sbb
xor
lock
loope,pn
push
mov
adc
xchg
cld
ss
shlb
xor
xchg
cmp
push
xchg
int3
fdivrp
add
dec
fldcw
sti
outsb
fistpll
aam
call
adc
negl
scas
cmp
dec
push
je
lcall
ljmp
popf
fdivrp
lahf
fsubs
sub
push
pop
jg
das
icebp
in
or
or
test
xchg
stc
loop
mov
xchg
inc
out
adc
push
mov
dec
fidivrl
rcr
ret
lock
push
lods
aas
shrb
addr16
push
push
bound
daa
andb
sub
pop
cmp
mov
dec
out
xchg
push
imul
adc
inc
dec
dec
or
sbbl
sarl
aaa
xchg
popa
jge
xchg
dec
cmpl
popf
test
xchg
mov
xchg
push
add
or
enter
pop
mov
and
shll
mov
add
push
addr16
jp
add
test
sahf
xor
lcall
rorl
sub
imul
pop
test
add
dec
push
hlt
add
or
inc
addr16
mov
aaa
mov
push
insl
repnz
aaa
sbb
mov
dec
movsb
cmp
repnz
cmpsb
stos
ret
fidivl
or
shrl
fwait
movsl
outsl
push
jecxz
dec
cltd
inc
cs
out
sub
cmp
sub
das
mov
cmp
stos
xchg
in
sahf
iret
xchg
insl
std
mov
adc
add
test
add
jmp
mov
add
test
adc
xchg
std
std
mov
cmc
mov
inc
loopne
lahf
cmpb
iret
aaa
dec
enter
and
pop
or
pop
add
enter
mov
adc
cmpsb
sbb
dec
xor
jl
sub
push
xchg
jmp
mov
sti
aam
lea
pop
push
lahf
int3
pop
mov
inc
insb
ret
movsl
iret
jmp
push
movsl
push
das
adc
pop
ja
or
pushf
shrb
xor
adc
inc
int3
int3
inc
fistps
pop
adc
and
cmc
lahf
test
test
lret
jp
loope
mov
xchg
xor
sub
inc
mov
dec
or
jmp
shrb
cld
ja
fwait
xor
popa
xchg
mov
cld
jo
add
repz
shrb
call
test
sub
pop
push
js
adc
ja
push
iret
jbe
or
inc
cmp
push
fistps
dec
jo
add
mov
xor
sbb
cmp
je,pt
jns
lret
and
jnp
daa
pop
xchg
cmp
fistl
jbe
movsb
loopne
outsl
sbb
rcl
push
sti
outsl
in
xchg
aad
mov
jae
jmp
xchg
sbb
test
sbb
ljmp
or
cmp
cwtl
pop
lods
mov
xlat
out
jl
frstor
or
add
xchg
add
sub
xor
dec
adc
mov
fwait
xchg
mov
dec
adc
cmp
out
dec
js
sar
stc
fistps
lock
fsts
sbb
pusha
clc
arpl
pop
movsl
xchg
dec
fcmove
int3
add
aaa
xchg
pop
mov
sub
popf
mov
cld
and
nop
js
sbb
aad
in
cltd
stos
das
daa
mov
and
xor
cmp
pop
notl
push
cltd
or
adc
pop
les
pop
dec
push
test
mov
pop
mov
xor
insl
dec
lea
xchg
mov
or
mov
cs
js
into
lret
mov
mov
sub
fld
cwtl
inc
iret
xor
loopw
add
pushf
ljmp
xor
inc
pop
clc
jns
cwtl
add
div
inc
imul
mov
sbb
lret
repnz
pop
lea
fs
pop
out
or
lock
mov
icebp
mov
sti
dec
fidivrs
xchg
mov
inc
fcomps
jnp
inc
out
pop
push
mov
stc
mov
rcr
jns
adc
or
pop
mov
cmp
lret
jnp
and
fs
ds
sub
incb
call
sbbb
sbb
sbb
movsl
clc
das
sub
aam
mov
outsl
pop
adc
insl
pushf
je
fs
ret
sbb
xor
xchg
mov
call
andl
adc
or
or
popf
into
push
fdivrs
mov
pusha
iret
mov
adc
sub
loop
out
xor
jo
lods
jp
or
mov
xor
icebp
cmpl
clc
orl
mov
cmpsb
test
movsl
pop
aad
negl
jmp
xor
mov
in
pop
mov
dec
ret
pop
sbb
sbb
dec
add
sbb
vdivsd
dec
jl
shll
mov
mov
aaa
in
movsl
fsubrs
faddp
fstpt
cld
xchg
stc
cwtl
push
out
iret
je
sti
test
leave
xor
mov
decb
es
ss
dec
rorl
mov
lods
xchg
jecxz
divb
lcall
add
fisttpl
add
jge
in
call
xchg
scas
jno
dec
mov
mov
notb
sub
adc
dec
ljmp
dec
push
insb
mov
mov
movsl
hlt
and
rcll
jns
xor
xor
ljmp
xchg
mov
jecxz
push
insb
imul
cmpsb
out
lds
sbbb
cltd
movsl
mov
xor
bound
mov
mov
mov
inc
lds
aam
push
repnz
xchg
outsb
loopne
and
jae
mov
scas
lock
das
repnz
and
lret
lock
dec
mov
mov
icebp
outsb
fsubrp
cmp
stos
addb
test
fsubr
mov
sub
icebp
add
ja
out
mov
add
sbb
mov
ja
imul
mov
gs
add
mov
loop
cmp
mov
and
jns
cmp
mov
mov
push
mov
testb
jge
fistps
xchg
add
adc
lcall
mov
imul
cmp
adc
std
pop
mov
jnp
inc
jp
mov
jg
fs
les
sbbl
ljmp
and
lahf
dec
add
sub
xchg
aad
add
ret
ja
ja
popa
jge
loopne
cs
and
popf
adc
or
lods
in
lret
out
cmp
jno
and
xchg
and
addb
lahf
sbb
mov
ret
cmp
aam
lcall
shrl
test
arpl
les
out
push
in
mov
add
cltd
dec
sahf
mov
mov
filds
sub
and
inc
add
add
ficoml
lret
sub
mov
clc
rol
sti
mov
adc
mov
test
fldenv
movsl
in
popa
mov
pop
pop
xchg
test
fmull
je
outsl
add
pop
push
add
and
dec
movsl
repz
fs
fisttps
push
pop
loop
mov
repz
addr16
xchg
into
stc
mov
imul
or
icebp
out
push
je
lea
sub
xor
arpl
je
xchg
jp
push
cwtl
das
bound
scas
sarl
jmp
out
int3
jns
testb
sbb
repnz
lret
mov
subl
stos
or
icebp
cmp
jnp
jge
mov
ror
jne
mov
roll
into
inc
xlat
xor
out
mov
and
outsb
mov
ljmp
push
cmp
cmpsl
sub
imul
adc
push
lcall
adc
inc
std
je
ss
test
or
or
push
data16
mov
sub
notl
shrl
mov
jmp
fnstcw
xor
push
lods
dec
xchg
xor
imul
lret
in
adc
mov
add
stos
and
jns
lcall
es
sahf
movsb
dec
fs
inc
mov
and
into
sub
pop
das
aad
inc
popf
leave
sbb
pusha
inc
jne
xor
fsubrl
pushf
pop
ret
loopne
push
rcll
rorl
nop
inc
dec
addr16
jecxz
mov
out
inc
dec
mov
cmp
sbb
cs
popa
sub
sbbl
cmpsl
adc
repz
pop
xor
test
jb
in
pop
sub
sarb
pop
push
xchg
test
lds
sub
rcrl
and
jmp
in
xor
jl
imul
or
cwtl
mov
repz
mov
cld
cmp
cmpsl
ja
dec
adc
dec
iret
test
es
lods
shrl
mov
int
fiaddl
movsl
inc
jns
mov
ret
aam
lret
hlt
mov
dec
addr16
dec
mov
sbb
ret
mov
push
dec
pop
out
and
inc
movl
popa
lret
lcall
lock
test
mov
pop
push
mov
repz
cwtl
sbb
mov
repz
or
sbb
cmpsb
xchg
xchg
js
inc
mov
ret
std
mov
daa
loop
jg
bound
push
mov
pop
dec
sub
xor
cmp
cmp
pusha
push
notb
xorb
repz
push
icebp
fisubrl
imul
mov
mov
outsl
sbb
inc
lcall
clc
out
ret
fwait
jge
cli
lods
push
out
iret
ljmp
dec
push
cmpb
negl
mov
mov
gs
sub
push
rcrl
lock
mov
cld
mov
dec
movsl
cmpsb
fnstcw
jmp
xchg
sti
int3
pop
sbbb
xchg
or
lahf
icebp
fstl
daa
mov
add
adc
push
sbb
add
nop
jecxz
jo
jcxz
mov
jae
das
insl
xor
jg
enter
xor
jle
add
ret
push
mov
sbb
addb
cmc
adc
repnz
mov
jnp
lahf
inc
dec
fs
fs
leave
sbb
xor
loop
jo
push
popf
mov
or
movd
pop
push
dec
ret
es
scas
and
cmp
pop
cld
lret
fldl
pop
popf
lahf
mov
aas
test
loopne
jmp
les
mov
dec
add
mov
cmpsb
lahf
insb
jmp
add
cwtl
sub
xchg
clc
xor
mov
test
add
mov
inc
lcall
fsubrl
cwtl
aaa
cmc
xchg
enter
mov
testl
sarb
jnp
aad
cmp
insb
arpl
pop
push
shr
mov
scas
or
cld
imul
out
pop
sbb
imul
gs
hlt
fsubl
adc
add
inc
in
sub
scas
cmpsb
imul
addl
pop
clc
data16
divl
into
mov
insl
pop
or
sahf
jo
mov
pop
inc
fisttps
mov
test
adc
es
mov
andl
mov
orl
enter
xchg
pop
xchg
push
sti
or
fisubrs
ds
dec
sub
loopne
mov
add
pop
jl
push
mov
lock
jg
xchg
lods
aaa
dec
fistl
lock
mov
subl
pop
xor
fisubrl
xchg
fs
ja
pop
inc
mov
push
or
and
ds
push
pop
testb
sub
and
cmp
inc
cmpsl
int
in
js
int
adc
sub
cwtl
aaa
sbb
sahf
rorl
jge
aaa
es
sbb
adcl
stc
movsb
mov
jbe
adc
vpminsw
cmp
mov
fisubrl
mov
mov
div
lea
in
jmp
sub
sbb
sbb
adc
shll
push
jnp
ja
push
dec
jbe
subl
in
fiadds
lea
ljmp
dec
in
pop
cmpsb
mov
add
mov
sub
adc
test
jmp
insl
or
ds
fmuls
jnp
mov
loopew
in
pop
call
out
lcall
mov
mov
dec
lods
inc
jl
pop
inc
mov
xor
imul
lret
fs
mov
push
test
jnp
push
jb
aad
lret
fdivl
out
fcomps
mull
mov
mov
dec
sti
test
sub
sbb
sub
fiaddl
sub
jae
cli
cmp
lods
popl
pop
cmc
das
std
cmp
jmp
sbb
mov
and
jbe
int3
or
jb
in
lcall
mov
movsl
aad
mov
jno
test
aas
jmp
addl
sub
jmp
push
mov
mov
xchg
dec
movswl
stc
repnz
popf
jle
inc
xchg
push
sbb
pop
aaa
dec
imul
or
ss
inc
test
push
fstpt
add
outsb
rcr
ss
sub
sub
je
xchg
jmp
outsl
out
popf
and
cmpsb
lret
nop
push
adc
xchg
dec
loope
hlt
into
in
dec
adc
test
aam
mov
shrb
ljmp
add
add
pop
push
mov
dec
rol
mov
nop
dec
xchg
lods
in
jnp
mov
lret
mov
lock
cs
movsl
int3
sbb
mov
inc
insl
cmc
and
leave
xchg
dec
mov
movl
std
les
or
gs
scas
sub
and
dec
loopne
lret
push
mov
or
and
fwait
sarb
outsb
push
stos
xchg
dec
push
in
inc
sub
notl
sbb
sbb
fwait
dec
mov
xchg
sub
mov
ds
repz
sbb
inc
ror
lock
jno
dec
sbb
hlt
ret
lock
mov
paddusb
or
sub
fs
mov
ret
pop
pop
repnz
dec
stc
push
xor
int3
aaa
jle
mov
rorb
shlb
inc
lods
add
loop
add
jb
or
mov
xchg
jp
std
xchg
sub
test
lcall
dec
aaa
sub
pop
out
sbb
sub
jl
pushf
dec
push
out
jmp
sar
xor
mov
add
das
repz
xor
push
add
sub
pushf
lods
or
aad
xchg
decb
push
out
push
pop
icebp
aaa
pop
pop
shrl
pop
hlt
cmp
sbb
scas
sub
insl
adc
insl
arpl
and
pop
and
sbb
gs
pushf
mov
xorl
xchg
xchg
int
fsubrs
push
mov
divb
dec
out
aaa
mov
or
cwtl
out
add
mov
enter
jnp
pop
sub
push
xlat
sti
and
in
add
clc
lods
je
roll
adc
push
sub
negb
add
xchg
xchg
fmul
pushf
nop
pop
jp
inc
xchg
push
mov
mov
scas
fldcw
rorb
in
mov
adc
out
xchg
and
sbb
jnp
lcall
call
cmp
sub
sub
add
mov
je
mov
dec
or
push
jle
push
clc
leave
jge
mov
rcl
stc
or
mov
leave
sub
out
xor
shrl
sbb
lock
stos
sbb
mov
inc
repnz
sbb
rorl
sbbb
push
pop
jmp
push
inc
inc
xchg
fldcw
pushf
ror
fs
push
cs
movsb
cmc
inc
cltd
ret
ficoml
inc
cmpb
xor
jmp
sti
sahf
cltd
out
jecxz
loopne
popa
mov
out
mov
cmp
test
adc
mov
sbb
test
subb
fwait
js
push
das
lahf
adc
mov
xor
jp
adc
mov
sub
cmp
or
mov
inc
jo
mov
mov
add
cmc
xor
call
lds
fisubs
dec
cmp
bound
in
inc
dec
popa
ljmp
cmp
imul
imul
push
rolb
xchg
ja
jb
orl
sbb
jp
lret
adc
lret
pop
push
cmp
mov
pop
in
push
mov
psubusw
shl
rcrb
scas
push
cmp
aad
adc
outsl
inc
mov
jnp
mov
pop
mov
add
dec
sbb
in
lret
bound
fmuls
adc
adc
pop
out
cmc
cmpsb
dec
xchg
flds
lret
mov
popa
sbb
and
dec
lcall
xor
fiadds
jbe
fsubs
aad
push
add
and
xor
cmpsl
adc
inc
scas
jne
ds
scas
mov
imul
insl
xchg
mov
mov
dec
push
pop
pop
xor
data16
pop
adc
sub
in
jnp
sti
mov
xor
dec
in
push
push
add
imul
js
pop
jnp
add
stos
sub
xchg
rcrl
or
cld
mov
add
cmpsl
mov
lods
out
jmp
or
jne
fucomip
pop
mov
scas
sahf
loopne
and
jle
lods
mov
je
jns
outsb
pushf
int
push
dec
stos
in
cmp
cmp
mov
leave
cmp
or
es
pop
or
shll
popl
push
and
int3
mov
arpl
out
cmp
inc
add
mov
nop
xchg
in
mov
fdivrl
push
mov
jo
fidivrs
cmp
sub
movsl
sbb
sub
addr16
enter
xor
pop
cmpsb
movsb
int3
xlat
cmc
shll
xchg
movl
jp
sub
hlt
cld
adc
lods
pop
xchg
test
and
out
push
ljmp
sahf
mov
andl
cltd
into
jl
aaa
cmpsb
adcl
pop
aas
xor
lea
and
mov
add
push
mov
stos
lods
ja
std
add
rorb
pop
imul
push
ljmp
ret
imul
movsb
lods
in
out
lods
mov
int3
int
xchg
push
popa
mov
jg
loop
dec
jno
push
ljmp
pop
or
push
lahf
pop
stc
and
sahf
ret
inc
push
out
out
cs
push
sbb
inc
out
xchg
lret
sbb
or
push
mov
fdivs
pop
cmp
or
ss
imul
dec
test
push
inc
cli
ja
mov
mov
daa
add
jecxz
dec
push
inc
cmpsl
add
jo
jb
test
lret
test
add
into
enter
es
mov
mov
stos
loope
or
jge
ret
dec
in
add
or
repnz
repnz
aam
adc
jno
test
push
lcall
adc
cmpsb
xchg
subl
in
adc
int3
sub
das
mov
mov
mov
addr16
mov
daa
push
sbb
push
mov
cmpb
fdivs
ds
mov
push
int
imul
jb
mov
mov
xchg
push
and
mov
lods
movsb
xchg
lods
fbld
repz
push
nop
lock
cmpsb
xchg
push
dec
fistpl
sub
test
push
and
mov
xchg
jmp
inc
test
hlt
xchg
ss
pop
sti
add
popa
and
mov
dec
in
ret
sahf
fdivrl
scas
cmp
cmp
fdivr
xchg
aad
movsl
aad
jp
lcall
out
add
pushf
test
inc
lea
jle
in
add
out
cs
xor
jecxz
pop
dec
jmp
push
movsl
popl
sbb
repnz
adc
mov
cmpsb
repnz
cmp
and
xor
mov
das
in
xlat
leave
popf
jne
push
pop
cli
xorl
sbb
xchg
pop
adcb
jo
jb
in
mov
jle
inc
push
mov
std
aas
icebp
fnstcw
mov
repnz
mov
jbe
inc
sbb
inc
push
jbe
sar
or
inc
es
popf
out
jp
cmp
lahf
fcomip
xchg
jnp
push
cld
dec
mov
movsb
sub
jae
daa
cmp
inc
out
sbb
jge
mov
popa
fxch
stos
or
xchg
xor
adc
loop
add
sbb
jb
sub
in
push
add
movsl
imul
mov
mov
or
push
out
popa
jnp
in
int
pushl
adc
bound
xor
dec
addr16
mov
pop
std
scas
aam
or
ret
ss
lea
repz
icebp
or
repz
pop
and
scas
mov
or
dec
jno
test
es
orb
dec
es
xchg
xor
xchg
adc
repz
and
adc
cmpsb
cltd
icebp
arpl
sbb
aad
data16
mov
sti
sahf
ds
ss
in
aas
adc
mov
sbb
int3
or
mov
jne
xor
popa
addr16
lock
lock
push
fidivs
sub
fwait
cld
jle
inc
sbb
mov
xchg
out
ja
mulb
loop
push
add
lahf
adc
push
popa
xor
jmp
dec
and
in
dec
ljmp
aaa
sub
dec
in
lret
sbb
pop
lcall
insl
jne
push
scas
sub
push
sub
pusha
pop
pop
fisttpl
sahf
ret
jnp
popa
pop
iret
push
loopne
test
lcall
stos
lods
dec
push
dec
dec
out
daa
xor
fiaddl
fnstcw
ja
push
aas
adc
add
lods
sti
dec
imul
cmp
sub
push
mov
mov
movsl
cmp
pushf
mov
push
ss
adc
int3
or
xchg
das
in
lret
push
xchg
scas
pusha
ficomps
sub
nop
xor
and
xchg
popa
mul
js
cs
movsb
bound
add
mov
fcmovnb
cmp
push
ret
xchg
sbb
insb
out
fsubrl
test
in
ljmp
ss
and
push
jecxz
push
jno
cmp
or
rclb
jle
jge
arpl
or
dec
mov
xchg
pop
and
push
lds
xor
add
rcr
iret
les
mov
daa
testb
int
or
mov
dec
xchg
cmpsb
fs
xchg
fmull
enter
int
inc
aaa
sub
push
int3
arpl
fsubrs
mov
repnz
and
cmp
cmpsl
ret
mov
xchg
out
out
clc
and
mov
daa
out
fcompl
daa
dec
cld
filds
xchg
push
stos
cmp
daa
data16
inc
les
lea
sahf
dec
lock
lahf
cmpsl
shlb
movsl
stc
mov
inc
test
sub
es
pushf
or
jmp
sbb
bound
rcrb
adc
and
test
and
lahf
jne,pt
mov
pop
mov
pop
inc
fcmovne
inc
dec
and
aad
negl
pushf
lret
cmpsb
xchg
push
mov
out
xchg
mov
push
add
mov
and
xlat
int
fcompl
mov
lahf
or
dec
mov
jecxz
lahf
add
adc
mov
pushf
lahf
jmp
inc
push
adc
movsl
push
jmp
icebp
mov
xor
leave
out
cld
out
lret
addr16
mov
icebp
leave
and
sbb
push
jae
or
mov
in
sbb
or
js
push
push
xchg
mov
bound
jg
jge
std
daa
dec
xchg
mov
outsb
lcall
xor
jl
nop
loop
mov
loope
insb
or
cld
inc
hlt
jbe,pn
dec
leave
add
mov
neg
je
mov
pop
mov
es
mov
inc
mov
lret
adc
sub
jns
inc
cltd
shll
and
pop
inc
xchg
shr
sbb
scas
and
aaa
add
stc
addr16
jne
xchg
or
and
insb
jns
hlt
xchg
out
mov
gs
and
jne
mov
or
xchg
xor
inc
sbb
ss
adc
xor
fldt
mov
sbb
mov
lods
jp
lret
push
test
test
mov
add
fnstsw
ret
in
insb
xor
and
enter
cmpsl
sahf
sbb
push
mov
jb
dec
int3
pop
pop
jne
push
test
pop
xchg
addr16
mov
scas
addb
mul
xor
xor
addl
push
add
push
int
sub
inc
and
fstl
push
dec
mov
jo
dec
xor
cmpsb
gs
movsl
pop
into
roll
test
xlat
test
dec
cmp
dec
or
jle
jmp
jo
inc
out
xchg
push
mov
faddl
mov
and
lret
outsl
push
pop
loopne
mov
jbe
das
xor
xchg
cmp
push
adc
adc
mov
xchg
or
jle
jns
cmp
push
mov
pusha
sub
xchg
lods
ljmp
mov
inc
dec
mov
lret
inc
or
sub
shll
call
push
adc
addr16
shll
push
ljmp
xchg
into
stc
out
jmp
adc
lahf
lahf
add
push
in
cs
xor
inc
cmp
sub
adcb
jae
popa
jecxz
add
mov
pop
shll
mov
and
adc
aad
push
xor
or
inc
dec
sub
int
xchg
jg
mov
int3
out
dec
adc
push
jo
popf
in
push
push
xorl
xor
dec
out
pop
dec
and
pusha
push
mov
stc
sbb
pop
dec
xchg
jg
sub
pop
cmc
jb
adc
mov
jne
cmp
shl
push
aad
mov
and
cmp
mov
movsb
je
out
mov
call
loop
ret
aaa
fchs
sub
mov
xchg
adc
or
les
and
push
and
mov
fisubs
test
mov
mov
xchg
push
pop
push
loope
adc
fidivs
adc
pop
lods
out
pushf
sti
ret
add
push
ret
pushf
jne
cltd
int
inc
cmp
adc
cmp
add
dec
mov
aas
mov
popf
loopne
rcrl
sbb
pushf
outsb
icebp
sbbl
jnp
or
jnp
pop
sbb
pusha
js
rorl
rcrl
adc
add
jae
add
es
pop
jns
inc
ljmp
mov
leave
mov
sbb
jge
pop
pushf
into
cmp
aad
xchg
dec
xchg
fcomi
outsb
dec
pop
pop
loop
cwtl
sbb
mov
mov
mov
push
lret
sarb
shl
lea
lock
xor
cmp
nop
dec
pop
lret
cld
ret
sub
fwait
imul
pop
mov
mov
repz
aas
fwait
xlat
inc
sbb
leave
jmp
mov
addr16
cmp
imul
enter
cmp
mov
ret
std
sub
in
pop
jns
getsec
dec
movsb
pop
dec
lea
ss
or
pop
out
cmp
lahf
sub
xor
xchg
cmpsl
mov
movsl
das
hlt
push
int3
jecxz
mov
call
mov
sbb
cmpsl
inc
pop
aam
das
bound
nop
pop
std
or
and
mov
stc
or
out
or
pop
pusha
stos
hlt
out
loop
call
push
or
imul
mov
or
xchg
push
pusha
mov
hlt
shlb
aad
mov
scas
dec
sbb
or
push
sarb
fsubl
xor
mov
push
mov
jge
insb
sub
push
xchg
mov
xchg
mov
and
stc
fcmovb
push
dec
adc
mov
imul
jg
pop
jg
repz
adc
cltd
arpl
add
mov
in
push
arpl
repnz
adc
adc
fildl
mov
jp
sub
add
pushf
stos
pop
fldcw
and
inc
ds
nop
sub
out
cmp
fdivs
pop
dec
pandn
inc
jle
adc
jno
pop
push
push
mov
sub
pop
inc
dec
or
out
mov
xor
je
ljmp
imul
ds
jge
jmp
icebp
faddl
cmp
xor
xlat
cs
cmp
dec
insl
in
insb
loope
int3
fucomi
popf
push
outsb
movsl
repz
pop
repnz
jmp
push
xor
and
jmp
mov
push
lea
adc
or
sub
mov
repz
push
xlat
out
push
jle
or
sbb
pop
add
es
cmpsl
enter
data16
and
mov
cli
enter
lods
movsb
or
idiv
std
pusha
cmp
jle
or
cmp
cld
sbb
sub
mov
adc
push
adc
add
adc
push
cmp
jbe
adc
jbe
or
inc
xor
int
frstor
loop
mov
sbb
inc
pop
call
pop
mov
enter
xchg
sbb
fwait
mov
rcll
repz
push
adc
stc
jle
adc
jbe
aam
and
aaa
adc
sbbl
loop
and
addr16
mov
loop
mov
leave
aas
movsl
sbb
test
adc
jmp
inc
xchg
inc
cmp
flds
faddl
in
out
das
je
jmp
cmpsb
out
jbe
ret
das
push
dec
adc
lcall
daa
mov
cmp
jg
loope
hlt
xchg
dec
xchg
or
repz
fwait
into
fwait
mulb
das
mov
in
test
mov
arpl
outsb
test
repz
jge
insb
mov
pop
nop
icebp
cli
cmp
dec
sub
outsb
ss
std
ds
mov
cmp
iret
mov
mov
stos
cmp
ja
jp
add
faddl
lock
lods
sub
push
sbb
adcl
fs
loope
fcom
inc
dec
scas
into
jle
iret
lea
dec
mov
cmp
dec
jle
in
dec
je
xor
jno
insb
mov
aas
std
sbb
jl
fidivrl
or
repnz
mov
in
xlat
jnp
inc
imul
shll
cmp
pop
je
ss
lcall
adc
mov
or
rclb
push
into
in
xchg
pushf
xor
adc
jnp
orl
loop
fistl
jmp
sahf
jecxz
xchg
sub
jge
lcall
pop
mov
cli
mov
cwtl
out
daa
mov
dec
aam
mov
sbb
mov
push
xchg
mov
subb
sbb
hlt
sahf
pop
fisttpll
fstps
in
mov
sub
dec
repnz
out
in
in
in
pushf
arpl
rcrl
sbb
lcall
and
lods
mov
jp
dec
mov
push
xlat
mov
popf
xor
pop
fsubrs
out
movsl
idivb
movb
out
pop
sbb
cmp
xor
hlt
scas
mov
adc
loop
mov
movsb
or
imul
xor
push
in
aas
in
mov
mov
xchg
xchg
xor
mov
in
ficomps
pop
cmp
and
push
sub
mov
cwtl
fiadds
cmp
dec
dec
js
out
adc
jns
or
jg
xchg
leave
pop
mov
sbbb
lahf
movsl
cs
jno
fidivrs
cmp
in
and
inc
out
sbb
insl
dec
test
rcl
jb
faddl
ja
ja
dec
test
or
std
in
sub
pop
ret
andb
repz
sarl
jne
inc
iret
lods
xor
addr16
push
or
cmc
outsb
or
add
pop
xchg
adc
fwait
xchg
cmp
sar
dec
lret
fiadds
sub
lods
cmc
xchg
cmpsb
int3
lret
stc
xor
in
enter
jne
into
mov
outsb
mov
cmp
daa
hlt
cs
or
arpl
or
push
call
stc
insb
pop
jecxz
test
std
jbe
add
inc
in
xchg
mov
cmp
int3
cmp
adc
xor
adcl
or
fcompl
sti
mov
cs
adc
inc
push
jns
fsubrs
xlat
icebp
or
pop
test
push
and
or
xchg
ret
or
xchg
dec
jo
imul
mov
imul
mov
jo
inc
xchg
out
push
sub
aas
jl
icebp
inc
cmpsl
lds
sbb
test
xchg
faddl
mov
xor
lcall
sub
sub
cmpsb
push
test
in
or
jno
sub
in
mov
mov
and
scas
repz
or
xchg
std
mov
mov
mov
mov
cld
dec
adc
lahf
jp
pusha
ds
xchg
out
fwait
lret
mov
sbb
xchg
or
icebp
int3
sub
in
mov
push
ja
dec
test
push
xchg
fnstcw
mov
lds
or
xor
push
pop
adc
fstl
hlt
sbb
aas
push
out
jo
scas
sti
mov
fwait
insl
xchg
sub
jle
inc
or
lods
jmp
sbb
insb
test
fsubrs
in
loope
add
fstps
push
cmp
rorl
fildll
mov
notl
xor
out
dec
popf
ss
ds
pop
cmp
mov
and
mov
lods
fwait
lock
cmp
fstl
and
sbb
test
jmp
int
cmp
and
and
xlat
xor
mov
movsb
mov
jns,pn
mov
rcl
dec
cmpsb
mov
lcall
mov
sarb
ja
xor
dec
arpl
lock
orl
rclb
js
push
pop
clc
movsl
mov
xchg
shlb
stc
cmp
iret
sub
inc
pop
aas
cmp
pop
repz
and
mov
jnp
ljmp
jmp
ficoml
mov
mov
sub
dec
cmc
mov
adc
andb
and
sahf
pop
scas
leave
add
xchg
push
nop
lods
xchg
sti
jnp
inc
lock
push
popf
cs
mov
shll
mov
fwait
cmp
mov
hlt
dec
sub
cmp
testl
jo
pop
jl
adc
adc
sahf
adc
add
or
mov
push
out
cmp
lcall
lahf
loope
movsb
aaa
aad
movsb
inc
or
mov
loope
out
std
popf
mov
aad
enter
lret
inc
sub
push
out
daa
mov
lds
shll
and
fcomp
push
repnz
shlb
das
mov
movsl
rcr
push
xchg
adc
push
popa
adc
int3
fistl
repz
mov
xlat
adc
dec
push
outsl
out
inc
xor
bound
les
inc
push
in
aad
out
dec
jp
dec
imul
xlat
je
ss
int3
outsl
add
mov
jns
pop
insb
mov
out
adc
outsb
addr16
xchg
lods
into
lea
int3
or
jmp
std
push
inc
xor
cmpsb
pop
inc
mov
inc
or
outsl
shlb
cmp
sub
leave
negl
sub
aas
test
test
rolb
pushf
mov
es
fcompl
xchg
lcall
sbb
cltd
outsb
mov
mov
int3
divb
lods
ds
or
in
mov
jb
test
imul
mov
aam
xor
roll
rolb
das
sahf
aam
dec
xchg
jb
into
pop
mov
or
cmp
dec
pop
dec
dec
mov
add
repnz
daa
xchg
lods
jnp
insl
jmp
inc
jnp
mov
inc
jle
inc
push
inc
rorl
addr16
hlt
mov
xor
rclb
sub
enter
mov
mov
mov
sub
mov
lds
lahf
inc
out
mov
dec
lahf
sbb
fimull
hlt
in
call
scas
mov
xor
loopne
ss
inc
lods
mov
mov
pop
ret
cmp
adc
cld
cmp
jo
dec
jg
sbb
adc
dec
mov
loope
jae
mov
xor
incb
mov
fs
es
mov
adc
popf
imulb
mov
cltd
scas
out
xor
inc
repz
repnz
aas
mov
sub
scas
push
lcall
shl
sahf
test
aas
faddp
sahf
sub
jae
fidivl
mov
pop
cmp
mov
mov
scas
ficoms
lea
mov
mov
inc
mov
mov
int3
arpl
jb
adc
xchg
shll
and
sub
add
adc
jecxz
jae
sti
mov
jmp
rol
dec
or
mov
loopne
dec
adc
push
xchg
mov
jne
inc
sub
cmp
xchg
std
sar
jb
adc
rcrl
jno
lods
mov
push
or
cmp
scas
push
sahf
aas
sbb
xor
loopne
aam
sahf
bound
adc
add
in
or
push
pop
fsubr
icebp
pop
jo
fwait
dec
dec
cmc
xchg
sti
aas
insl
xchg
stos
xor
popf
pop
xor
mov
add
aam
xor
enter
jge
sbb
cli
xchg
xchg
pop
mov
iret
insl
popa
cmp
pop
ret
dec
std
jne
xchg
ljmp
dec
pop
cmpsl
mov
in
lods
frstor
cs
mov
pop
outsl
mov
adc
mov
lret
fmuls
in
adc
xor
stc
mov
subl
cmpsl
mov
xchg
push
movsb
in
orb
mov
lods
inc
inc
jno
scas
rorb
inc
mov
cmpsl
adc
sbb
nop
and
add
pop
jae
movsl
jb
sub
std
or
xchg
xchg
jg
test
out
pop
xchg
test
lret
into
inc
mov
ret
jb
scas
mov
leave
fbld
cmp
mov
adc
pop
js
sbb
dec
mov
pop
out
movsl
push
push
adc
ficomps
xor
mov
sub
cmp
sub
aam
add
push
popa
gs
adc
mov
insl
and
addr16
mov
jnp
enter
outsl
cmp
int3
fdecstp
fsubrl
mov
push
mov
sub
and
fnstenv
mov
mov
jle
or
mov
pop
outsb
jae
pop
adc
lock
xchg
sahf
andb
push
sbb
xor
xchg
subl
loopne
popa
in
sbb
stos
or
mov
ret
mov
push
or
cmc
and
mov
adc
and
mov
and
test
pop
cld
out
push
dec
xor
fs
shl
pop
add
lahf
inc
mov
cli
sarl
leave
jmp
mov
push
or
ljmp
mov
jnp
jns
xor
fwait
xor
and
mov
pop
je
cmc
ljmp
stc
mov
ljmp
inc
push
cltd
xchg
xor
adc
pop
push
jl
push
pop
lcall
jb
aam
aaa
mov
cltd
mov
ss
ret
mov
pop
sbb
test
imul
icebp
sbb
sub
lods
dec
lret
pop
enter
stc
cmp
jg
mov
jnp
data16
jne
xchg
fdivr
mov
mov
daa
mov
test
jno
js
dec
les
stos
fsubrl
adc
adc
iret
into
test
imul
add
sahf
add
sbb
or
loop
enter
xchg
ds
sbb
dec
xchg
cmp
mov
mov
inc
pushf
popf
in
cmc
insl
inc
sub
mov
cld
sub
loopne
or
dec
mov
sbb
sub
jg
cmpb
mov
lods
int3
pusha
xlat
xchg
incb
mov
sub
dec
call
out
mov
sti
icebp
aam
mov
fistps
nop
lcall
push
pop
jo
and
inc
mov
pop
and
out
mov
dec
jl
jge
jp
sti
mov
adc
xor
pop
sbb
sbb
iret
loop
push
out
xor
or
dec
pop
cmp
rorl
and
call
loope
pop
imul
lret
or
popf
sahf
movsl
dec
lahf
adc
push
or
xor
in
or
sub
stos
dec
sbb
xchg
sub
test
mov
sub
mov
dec
andb
aaa
aad
jl
jnp
cmp
mov
cld
cli
pop
loop
lods
xchg
repz
ljmp
pusha
sbb
mov
aaa
into
inc
jae
add
mov
lret
jmp
je
cmp
imul
mov
mov
add
adc
mov
mov
out
sbb
in
xorl
rolb
cmc
push
jns
xor
int
icebp
repnz
or
mov
mov
pusha
xor
enter
loopne
int3
fisubl
rcl
outsb
arpl
sub
sub
push
testl
lock
repz
sbb
pop
add
gs
iret
push
js
loop
arpl
xchg
jns
jecxz
pop
xchg
sub
sbb
mov
xchg
mov
and
xor
aam
scas
loope
out
mov
jno
mov
in
mov
mov
fdivl
jbe
mov
mov
dec
fmulp
cmp
pop
xorl
cmp
pop
mov
add
loop
cmp
lock
mov
jecxz
jmp
dec
xor
mov
je
xchg
mov
lahf
adc
test
in
ja
clc
loop
loopne
mov
mov
sbb
mov
stos
dec
sbb
addl
lret
lret
pop
and
sbb
lock
push
aad
ljmp
icebp
mov
jbe
and
test
popf
fiadds
sbb
or
lods
out
aaa
push
add
adc
push
outsl
jae
cltd
ret
xor
sbb
unpcklps
xchg
sub
and
fildll
pop
lds
mov
test
pop
dec
jo
adc
jne
shll
push
fndisi(8087
inc
imul
or
scas
mov
js
pushf
iret
jle
iret
inc
ret
aad
pop
jbe
daa
adc
mov
push
dec
out
ss
icebp
rcll
int
test
inc
mov
jecxz
mov
inc
dec
xor
cld
sub
out
and
or
mov
and
jb
icebp
ror
fadd
cld
lahf
push
push
arpl
les
push
sbb
xor
shl
int
lods
push
hlt
cld
push
fcomps
mov
pop
lea
scas
repnz
outsl
or
sbbb
movsb
or
leave
insl
and
or
insb
outsl
or
test
and
mov
je
dec
push
sbb
bound
cmpsl
cs
push
lock
dec
hlt
or
mov
lds
out
push
daa
pop
xor
xchg
cli
imul
stc
jmp
cmp
pop
int3
out
mov
xor
popf
pusha
dec
imul
clc
inc
adc
adc
int
inc
sub
jle
lea
cmc
jg
sti
insb
adc
scas
or
jge
jp
dec
lock
mov
jb
dec
sub
js
cmpsb
cmp
fdivl
les
fwait
sarb
fdivrl
cs
add
cmp
sbb
addl
rcll
mov
cmp
or
cmp
mov
mov
push
xchg
jl
lods
push
in
jmp
add
xchg
mov
cmp
movsl
and
stc
repz
and
jb
movsb
sub
das
movsb
icebp
dec
pop
popf
arpl
jecxz
int
outsl
mov
out
dec
out
mov
inc
shl
sbb
inc
fcmovbe
push
push
testb
cld
adc
pop
jmp
lods
mov
out
jno
mov
mov
add
aaa
lret
mov
std
loop
int3
mov
or
pushf
lds
aam
cli
jnp
dec
pop
int
xchg
xor
mov
xor
lea
fstps
sub
hlt
nop
cld
mov
ljmp
aaa
ficomps
lds
jmp
cld
in
jge
stos
push
mov
xor
insb
push
sub
inc
add
mov
into
int
dec
repnz
cmc
xchg
std
gs
cmpb
mov
dec
adc
punpcklbw
cmp
inc
or
pusha
push
lahf
xchg
pop
addr16
cs
test
and
push
ljmp
mov
dec
loopne
int3
pop
mov
xor
push
sub
stos
in
pop
jg
pop
lock
mov
rcrl
repnz
dec
pushf
sbb
inc
inc
push
call
mov
pop
daa
xchg
cmp
mov
push
imulb
add
daa
lcall
sbb
lea
mov
or
mov
popf
call
xchg
fs
stc
data16
push
int
sub
data16
pop
mov
call
inc
mov
dec
call
mov
hlt
in
xrelease
call
sbb
pop
cs
jecxz
push
and
stos
stc
xor
lcall
aaa
dec
mov
sbbl
adc
and
pop
repnz
addl
mov
outsb
ja
and
sbbb
xchg
lahf
arpl
xchg
sub
jmp
in
loope
gs
shll
xor
mov
cmp
dec
sahf
adc
inc
or
adc
hlt
mov
sti
aad
dec
sbb
jp
outsb
popa
out
jmp
sahf
xor
scas
insl
out
pop
xchg
sub
inc
cld
mov
adc
and
xchg
sub
jmp
xchg
push
stos
call
pop
shl
cs
and
fs
lcall
mov
std
mov
popa
lret
mov
popa
stos
mov
add
dec
jnp
pop
xchg
movsl
mov
dec
inc
xchg
ss
mov
loop
mov
sahf
mov
mov
out
mov
push
enter
cld
adc
das
jmp
and
jae
dec
ljmp
rclb
sbb
popa
or
cmp
pop
sti
push
inc
pop
movsl
dec
xchg
dec
popa
testb
inc
js
jns
sub
pop
pop
xor
dec
js
sbb
ret
ffreep
sbb
mov
jns
mov
sar
in
cli
push
fmul
sbb
xor
xchg
stc
lcall
sbb
jns
push
cld
xlat
fcmovne
mov
mov
repnz
mov
daa
out
loop
mov
lods
hlt
imul
inc
rcr
movsl
lret
mov
pop
int
jo
push
adc
loope
mov
inc
movsb
lods
add
daa
repnz
xchg
test
bound
lcall
inc
sbb
mov
outsb
out
idiv
xchg
dec
ljmp
daa
pop
mov
lds
push
mov
mov
cli
add
sbb
dec
jo
mov
cwtl
jbe
sti
je
gs
rcr
ja
lret
mov
cmp
inc
jno
pop
mov
fstpl
inc
pop
repz
loopne
dec
add
push
xchg
bound
sbb
or
jg
push
xchg
mov
ficoml
adcl
push
cli
pop
xchg
inc
jg
leave
add
mov
mov
lret
cmp
shrl
xchg
and
lret
jns
fs
jae
cmp
scas
xor
es
pusha
push
inc
test
dec
outsl
aad
or
xchg
dec
xchg
shrb
notb
xor
inc
arpl
inc
dec
and
fwait
push
js
cltd
rolb
jb
mov
ret
and
jne
xor
jle
push
into
into
cmp
pop
fisubl
sub
idivb
push
and
mov
or
stos
and
jge
adc
xchg
dec
iret
mov
mov
pop
jns
mov
jecxz
sub
gs
fnsave
lret
cmp
pop
jmp
mov
roll
mov
subb
shlb
ja
dec
aas
xchg
fldenv
in
push
mov
sub
add
jbe
inc
jo
mov
xchg
incl
jne
mov
data16
mov
ret
push
inc
stos
xor
or
sbb
and
adc
insb
mov
ficoms
cmp
popf
push
outsl
adc
rcll
ljmp
enter
dec
jmp
push
adc
test
sti
pushf
sub
or
sub
test
mov
int3
ljmp
cld
xrelease
sub
push
xor
sub
push
cmpsl
outsb
iret
in
cwtl
addr16
mov
cld
jecxz
sbb
push
push
push
or
jmp
add
mov
sarb
movsb
jb
sub
int3
jbe
inc
jnp
mov
jmp
popa
pop
cmp
inc
in
insl
dec
dec
sahf
call
sub
add
into
or
sbb
dec
insb
outsl
mov
sti
cmp
movsb
lcall
out
add
fisubrs
jo
jo
sbb
test
inc
xor
push
shll
nop
pop
jp
insb
aas
rcl
cmp
in
stos
leave
sub
imull
mov
cmp
pop
bound
lcall
jb
xchg
dec
adc
add
pop
mov
stos
fstl
ror
xchg
ret
xchg
ja
popf
add
xlat
push
add
xchg
outsb
push
out
rorb
push
std
sub
fbstp
sahf
movsb
arpl
incl
mov
gs
out
xchg
mov
inc
repz
and
xchg
jecxz
ret
rcll
shll
add
cmp
cmpsb
mov
xchg
neg
dec
daa
ljmp
add
sub
mov
jbe
leave
jmp
outsl
out
mov
dec
cmp
inc
xchg
lock
mov
cmp
lods
fcmove
adc
xor
pop
push
mov
jg
popa
dec
mov
mov
add
cs
adc
pop
sub
or
push
mov
cli
std
insb
xchg
lea
pop
sbb
repz
xor
fldt
out
pop
mov
fwait
hlt
mov
inc
jp
das
in
push
xor
dec
xlat
or
and
sub
or
mov
cltd
xor
lods
push
cmp
fildll
ljmp
test
and
or
lods
mov
xor
jecxz
sahf
mov
loop
gs
and
mov
test
lds
mov
lods
inc
mov
mov
mov
cmp
push
iret
aad
cmp
mov
idivl
xor
fldl
lahf
outsl
js
sbb
loope
mov
lea
inc
imulb
or
lea
mov
mov
das
push
test
or
test
scas
mov
push
lcall
std
add
mov
pop
pop
jmp
sarl
in
loope
xor
push
xchg
movsb
frstor
lahf
push
pop
pushl
inc
into
leave
data16
mov
xor
imul
movsb
in
dec
or
adc
stos
mov
rclb
xchg
out
jns
aam
in
stos
and
push
add
mov
and
add
sub
push
sbb
cmp
jbe
jno
cld
imul
gs
inc
xor
mov
mov
push
repz
fistpll
xor
call
inc
fisttps
cli
sahf
test
ficoms
icebp
cltd
push
xchg
cmp
add
inc
scas
or
dec
lcall
imul
xchg
jbe
inc
pop
popa
mov
dec
imul
loopne
add
repnz
fwait
std
adcb
ret
fs
call
test
mov
mov
jg
jp
sti
push
data16
in
int3
push
aam
sti
popf
rclb
fldl
lahf
addr16
nop
insb
sub
aam
int3
pop
stos
mov
cltd
nop
mov
leave
outsb
add
fildl
mov
jo
jmp
fs
scas
scas
je
push
addr16
sbb
xchg
cmp
inc
add
repnz
inc
cmp
hlt
dec
sub
jo
xchg
sar
shrl
bound
and
outsl
adc
mov
mov
bound
icebp
shl
es
pop
leave
pop
mov
cmp
mov
cmp
adc
addr16
loope
js
out
addr16
popf
pop
pushf
adc
jge
loop
add
pop
enter
dec
in
rclb
rcll
xor
inc
mov
sbb
xor
xor
jp
aaa
mov
sbb
lret
out
ljmp
cmp
ds
push
lods
mov
jge
mov
jg
add
subb
add
fmull
mov
mov
push
aas
lret
or
adc
push
dec
or
push
adc
or
lret
imul
adcl
outsl
pop
add
pop
mov
push
lods
jmp
push
dec
sub
sbb
sub
movsb
fs
and
xor
mov
jg
loope
in
mov
xchg
mov
test
mov
sbb
jae
cmp
dec
arpl
cli
loopne
mov
ja
loopne
add
pop
jns
jno
test
dec
jmp
xor
lret
jp
insl
sti
mov
add
or
jb
mov
mov
adc
mov
mov
insb
sbb
scas
push
int3
xchg
sahf
adc
lcall
mov
push
sbb
sbb
outsb
pop
pop
loopne
add
sub
mov
test
or
sub
adc
mov
dec
and
inc
dec
dec
adc
stos
loopne
and
xor
fnstenv
sub
stc
ret
mov
lea
push
je
jno
addl
imul
pop
push
sahf
adc
fs
icebp
xlat
ficomps
mov
in
es
sub
sbb
xor
pop
jbe,pn
inc
arpl
sbb
dec
and
adc
push
mov
push
xchg
or
xor
jae
add
int
xchg
pop
jecxz
jno
dec
dec
insl
aas
jae
pusha
std
mulb
jmp
push
pop
and
iret
pmaxsw
cmpl
mov
repnz
push
popa
dec
imul
add
mov
push
jp
movsl
iret
sahf
loop
inc
out
dec
dec
sbb
xor
sbb
test
cmp
stc
aad
jge
mov
sbb
cmp
cli
cwtl
out
jmp
enter
push
or
mov
pop
sbb
arpl
negb
push
fcmovnb
imul
jnp
cld
push
add
sbb
popf
popa
xchg
repz
pop
jg
repz
fistpl
or
and
leave
add
fbld
adc
sbb
jge
or
cld
dec
push
jp
jmp
lea
gs
and
testb
inc
data16
dec
add
int3
fdivl
daa
jl
push
jo
das
mov
lahf
mov
es
and
xor
jge
loope
fst
mov
cwtl
cld
pushf
mov
jp
cmpsb
sub
pusha
ja
pop
push
insb
sub
scas
xchg
pop
pop
mov
pop
sbbb
popa
sbb
mov
jbe
addl
xchg
je
jo
mov
mov
and
sbb
test
sub
aam
mov
movsb
repnz
push
arpl
imul
movsl
lea
mov
lret
push
ljmp
jp
add
xchg
inc
mov
sbb
lret
pop
or
lods
mov
nop
imull
mov
popf
and
inc
pop
ja
adc
mov
mov
sbb
xchg
jmp
popa
mov
imul
std
push
jecxz
xor
push
das
push
testl
pop
mov
push
in
enter
mov
in
mov
xor
ja
test
js
jnp
pop
push
call
cli
mov
mov
and
add
or
bound
jle
cmp
es
xor
fwait
popa
lods
mov
prefetcht1
add
test
push
jp
ja
mov
cltd
lds
add
mov
push
fnstsw
shlb
mov
shr
dec
or
into
xchg
call
push
ret
lock
js
js
test
out
aaa
movsl
movsl
repnz
xor
xlat
xlat
sub
xchg
or
gs
cmp
pop
or
rcr
pop
add
jecxz
adc
rclb
or
inc
loope
lock
mov
pop
ror
sub
mov
std
out
rolb
das
sti
rorb
mov
push
cli
test
xchg
sub
xchg
insb
lock
sarl
mov
xchg
push
out
push
jecxz
jne
ja
xor
pop
inc
fbld
popa
loopne
ret
out
and
out
jmp
adc
fdivp
xchg
inc
xchg
test
cmpsb
or
adcb
push
or
add
pop
out
xchg
pushf
adc
xor
pop
iret
adc
stc
xchg
pop
ficoml
xor
sbb
pop
xchg
jl
cmp
arpl
mov
mov
adc
cwtl
int3
xchg
and
or
in
sub
pop
jge
pop
lret
mov
cmp
jmp
ss
dec
push
jo
push
sti
es
push
push
or
cmp
inc
lea
mov
outsb
getsec
out
mov
ficoms
fdivs
iret
lret
sbb
lods
inc
adc
and
out
or
cs
imul
or
add
or
pop
cli
mov
push
inc
jne
rolb
aam
add
sub
cmp
jp
adc
ja
in
mov
test
aaa
fdivrs
push
pop
ljmp
mov
shrb
and
scas
pop
shr
pop
jno
iret
mov
jecxz
sub
push
je,pn
pop
lods
js
ss
dec
push
ja
imul
jl
pop
mov
jmp
cmp
inc
jne
aaa
push
xor
fbstp
push
sbb
lods
adc
mov
cmpsl
scas
adc
arpl
lret
sahf
mov
mull
std
xchg
aas
mov
cltd
mov
das
in
sub
pop
jns
xchg
ret
jbe
sub
adc
xor
loope
stos
mov
valignq
mov
lock
jbe
es
shl
shll
inc
or
outsl
ds
fildll
and
cmpsl
dec
imul
push
sub
test
gs
int3
dec
mov
xor
adc
or
or
pop
gs
dec
jae
xchg
sbb
push
cld
dec
shlb
push
imul
adc
mov
and
sbb
jns
push
jle
shr
add
dec
loop
fdivl
lods
jae
inc
xchg
sub
sahf
negl
xor
je
xchg
xchg
rclb
mov
mov
ficompl
pop
shlb
push
ds
jl
push
add
pop
or
lcall
sub
mov
fldt
repz
cmp
cmpsb
daa
adc
mov
and
stos
out
push
negl
sbb
jle
icebp
fbld
aaa
jecxz
cwtl
mul
sti
out
adc
cwtl
cmp
xchg
js
pop
das
adc
insb
push
js
mov
in
pushf
nop
xor
mov
ret
inc
inc
lods
loope
jb
sar
cld
xchg
ja
mov
pop
js
aas
pop
leave
cld
rol
cmpsb
inc
stc
add
mov
inc
xchg
push
sbb
lcall
insl
push
outsl
outsl
pop
sbb
push
ljmp
jo
xlat
add
inc
pushf
and
mov
push
in
sbb
jb
xchg
sub
jno
adc
stc
xchg
dec
dec
mov
clc
addr16
iret
mov
cmp
xorl
into
sub
jb
je
dec
dec
dec
mov
pop
adc
or
jno
mov
lods
add
addr16
push
xchg
mov
ja
mov
push
mov
iret
sti
icebp
je
dec
cmpl
xor
sbb
not
mov
or
in
aad
xchg
or
stos
add
test
push
inc
cmp
out
xor
push
cli
cmc
inc
orb
push
jl
or
sbb
inc
inc
aaa
cli
out
es
cmp
subl
cmp
cwtl
sbb
pop
pop
push
outsb
sub
aad
loope
std
fs
jle
xor
fstl
mov
sbb
outsl
mov
mov
sbb
movb
fcomps
jecxz
sbb
pop
out
test
pop
xchg
cli
cmp
popa
aam
cmp
adc
pop
cld
dec
ss
test
mov
jmp
cmp
xchg
cmp
mov
cwtl
mov
inc
dec
lahf
fisubrl
or
sahf
fsubl
sub
inc
and
add
jo
leave
loopne
push
enter
xchg
xchg
xchg
mov
cmp
adc
sti
mov
shll
or
call
xor
stc
not
imul
sub
sub
filds
psubsb
add
sbb
inc
dec
int
jp
jp
cwtl
add
jne
mulb
xlat
dec
dec
inc
add
inc
fdivrs
dec
cmp
push
mov
mov
rcl
inc
xchg
jge
lods
mov
xchg
sub
fcomps
int3
jp
stc
repz
nop
out
adcl
dec
movsb
cltd
pop
sbb
mov
and
cmp
dec
lods
cmp
mov
cld
push
ljmp
sarl
sub
sub
aaa
sbb
pop
js
and
fmul
aaa
pop
sarl
outsl
es
sub
pop
or
aas
lods
add
or
idiv
cmp
xchg
into
mov
shrl
jmp
std
cmp
fstp
out
push
into
les
push
cwtl
xchg
mov
xor
pop
shrl
xlat
xor
and
inc
movsl
lds
add
mov
inc
cli
sbb
mov
fisubs
dec
mov
jg
shl
dec
mov
adcl
jne
cmp
bound
lcall
ret
xchg
cmpsl
dec
push
cmp
repnz
jp
mov
inc
jmp
dec
loope
flds
aam
ss
fildl
ss
popf
lahf
fisubs
cmp
sub
and
test
adc
xchg
push
add
stc
pop
subl
aam
cs
cwtl
stos
xchg
inc
inc
mov
push
pop
ds
test
repnz
push
cltd
mov
inc
stos
mov
jg
push
orb
je
fidivl
scas
jo
lods
push
shll
filds
or
mov
pusha
addr16
ljmp
xor
cmp
add
push
imull
add
mov
lods
bound
cld
lret
aam
jbe
jg
loop,pt
dec
xchg
das
inc
in
int
aaa
lods
pop
sbb
lea
add
sub
pop
pusha
lock
cmp
lods
enter
and
insl
rcr
cld
into
sub
pop
je
sub
data16
clc
sub
mov
iret
push
cs
sbb
cmp
xchg
dec
adcb
loope
mov
out
lds
cmp
test
mov
mov
adc
repz
sbb
xchg
pop
ljmp
scas
out
out
push
test
add
push
aam
sub
and
das
insb
repnz
arpl
inc
imul
jo
jecxz
jp
mov
mov
or
cmpb
icebp
cld
pop
mov
lret
adc
pusha
fcomip
or
pusha
cmp
cwtl
inc
fcmovu
pusha
icebp
pop
sbb
dec
xchg
pop
in
sub
xor
xchg
or
aaa
fs
das
fnstenv
pop
jg
lods
adc
or
lcall
jne
lock
xchg
sub
into
push
sbb
popf
mov
mov
push
stos
and
int3
inc
in
push
or
ds
mov
in
cmp
inc
cmp
test
inc
rcrl
aam
mov
mov
nop
adc
fstps
sbb
sbb
rol
xor
jl
pop
mov
insb
inc
cmp
inc
inc
in
addl
inc
xor
xor
mov
mov
cmp
sbb
std
leave
mov
sub
mov
dec
cmp
pop
cli
sbbl
or
xchg
xor
add
pusha
dec
mov
jmp
imul
and
repz
mov
jae
mov
notl
and
in
xchg
mov
push
sub
sti
test
xchg
sub
rcrl
aaa
xor
movsl
sub
mov
sbb
rcrl
subb
push
icebp
rcrl
cltd
test
test
popa
fwait
cmpsl
push
xlat
mov
and
outsl
cltd
push
test
sub
test
sub
mov
and
jmp
jae
frstor
mov
xchg
and
or
pop
jae
dec
adc
sub
pop
aas
inc
add
pop
cltd
rolb
inc
pop
mov
push
ret
imul
or
pop
jb
fwait
arpl
test
int
pop
fs
repz
inc
dec
popa
xchg
test
sbb
das
lahf
in
imul
insl
fadd
sub
in
jmp
popa
adc
push
fistpll
stc
ret
or
dec
or
sub
xor
idiv
ljmp
mov
pop
arpl
in
out
and
ljmp
shrb
ss
adc
pop
cmp
int3
dec
test
mov
jg
push
inc
lea
mov
cmovae
fnstcw
stc
pop
shl
jl
arpl
jbe
jnp
lret
inc
lcall
hlt
jno
xor
insl
fstpt
sub
aaa
fcomps
clc
xchg
cmp
stc
sub
in
adc
add
and
sahf
inc
out
mov
out
mov
add
pusha
xchg
mov
jb
dec
push
shr
sbb
push
das
mov
jmp
inc
sahf
ror
fs
fsubrs
arpl
aas
fisubl
cmp
sub
outsl
jnp
pop
mov
mulb
and
cmp
test
rol
les
fs
cmpb
cmp
and
sub
adc
fildl
and
sarb
insl
xchg
inc
mov
ret
lods
mov
pop
sbb
out
pop
pop
add
pushw
cmp
jmp
mov
jne
ret
in
mov
mov
pop
adc
jne
add
test
clc
cmp
int3
ret
mov
fnstcw
add
mov
push
fsubrs
fwait
sub
mov
scas
test
mov
xor
add
pop
enter
outsl
sbb
adc
shrl
out
inc
je
sub
jl
pusha
inc
imul
push
loop
mov
addr16
jo
xlat
movsl
shl
cmp
cli
jae
mov
fdivrl
and
jecxz
mov
cld
adc
cmp
dec
xor
test
rclb
inc
inc
sbb
sub
insl
lock
jle
jl,pt
sub
mov
add
fwait
pop
adc
gs
sahf
add
vphaddubq
push
movsl
fs
test
out
lcall
add
jg
push
dec
test
and
jnp
xchg
test
mov
cmp
cmp
jno
xchg
mov
mov
push
push
sbb
ficoms
inc
add
mov
in
leave
xor
std
xor
nop
jne
pop
inc
dec
mov
dec
pop
push
mov
pop
or
sbb
out
daa
mov
loop
outsb
inc
sub
leave
add
adc
repnz
adc
loope
adc
push
lods
popa
cwtl
sbb
add
ret
cmp
aaa
jns
test
push
dec
ss
push
and
push
push
test
sub
addr16
cmp
inc
sub
jmp
aad
pop
inc
shlb
lcall
aaa
xor
mov
cmpsl
mov
xchg
inc
mov
push
dec
imul
loope
xchg
insb
ret
in
in
adc
fwait
imul
xor
xchg
loopne,pt
dec
cs
fdiv
adc
ss
push
or
ficoml
sub
pop
inc
xor
xor
test
imul
or
ljmp
or
push
imul
xchg
pop
mov
lcall
out
sub
daa
mov
push
inc
add
dec
lods
mov
je
dec
notb
push
push
mov
ret
add
mov
into
jae
lea
ficoms
inc
inc
aam
imul
das
pop
push
mov
inc
out
movsl
loopne
mov
in
loop
fs
cmp
cwtl
fisubs
xchg
jno
xchg
jno
lret
or
adc
push
xlat
testb
mov
sub
ss
mov
sub
add
push
test
jmp
dec
mov
addr16
ja
cmp
lds
xor
clc
mov
std
out
mov
ljmp
fcoms
fistps
idivb
aad
sub
mov
sbb
inc
pusha
mov
lahf
loop
outsb
jnp
shrb
dec
data16
jns
scas
jle
mov
jecxz
mov
pop
fidivrs
sbb
push
mov
lar
xchg
outsb
add
pusha
ljmp
outsb
fldt
xchg
mov
inc
fsubrl
xchg
and
fs
dec
out
jo
icebp
bnd
jnp
pop
dec
cs
arpl
xor
pop
enter
jae
add
xchg
inc
adc
rolb
jo
mov
sub
out
addr16
pop
les
fsqrt
lahf
push
sbb
cmpsb
pop
add
pop
cmpsl
or
dec
lahf
enter
out
mov
add
inc
mov
imul
or
pop
mov
ds
outsb
testl
aad
cld
inc
dec
xor
aaa
xchg
sbb
and
push
test
mov
push
addr16
mov
add
inc
and
xor
inc
adc
fsub
add
cmpb
and
clc
das
and
sti
and
pop
fbld
pop
mov
adc
lret
aas
sub
push
cwtl
nop
pop
jb
pop
mov
pop
dec
sbb
jp
ret
js
jne
mov
dec
loopne
mov
push
imul
push
testl
dec
je
in
cmp
fwait
repnz
add
xchg
mov
mov
xor
aas
in
popw
jno
mov
fnstcw
jnp
cld
jmp
ret
pop
sbb
insl
fadds
outsb
out
insl
sbb
out
pop
push
xchg
into
leave
aam
loopne
sbb
jno
arpl
scas
add
pushf
xor
aad
aam
and
pop
ss
jge
add
fsubrp
pop
dec
and
mov
ret
jl
lds
push
push
mov
and
es
mov
push
stc
aad
lea
sub
jae
es
test
add
imul
sub
orl
ret
mov
inc
cs
dec
test
out
lds
fidivs
push
std
add
es
mov
inc
jmp
lret
out
and
add
lret
jg
and
mov
jecxz
inc
ficoms
scas
pop
js
add
push
jno
das
push
jp
push
jmp
mov
mov
daa
sbb
mov
into
sbb
in
xor
and
jbe
jecxz
mov
es
shrl
std
sbbl
push
dec
or
pop
out
jnp
hlt
adc
es
push
mov
mov
dec
jp
fcom
fwait
ds
pop
push
fmul
cli
jne
sbb
and
push
icebp
add
out
lcall
out
mov
aaa
add
pushf
or
jmp
push
or
mov
dec
inc
mov
mov
mov
mov
adc
cmpsb
adc
cltd
lret
cmpsl
cmp
or
push
xchg
pop
pop
push
or
ljmp
aad
cld
push
in
mulb
xor
add
dec
xor
insb
cmp
pushf
movsb
xor
dec
adc
push
jge
sub
repnz
cmpsl
mov
scas
jle
cmp
dec
fisubrs
sarl
daa
mov
and
mov
icebp
sahf
push
ror
fidivrs
push
inc
rorl
push
xor
icebp
test
out
mov
mov
or
cmp
xchg
jecxz
cmp
call
roll
mov
xchg
cmp
pop
mov
fistpl
stc
test
sbb
push
push
xlat
dec
xchg
xor
mov
pop
xchg
sbb
bnd
xlat
push
add
mov
add
rol
pop
xor
sarb
jb
insb
jne
daa
adc
xor
mov
pop
popf
jp
rcr
and
sbb
imul
or
mov
repz
add
jmp
xor
lea
lock
lods
adc
cmp
fnsave
lea
ljmp
femms
inc
jb
adc
xchg
cmp
sbb
mov
lods
aam
mov
mov
decb
loopne
out
fisttps
out
aas
daa
sbb
push
cmp
cmp
xor
push
and
mov
fstp
adc
das
xor
mov
cli
movsb
adc
mov
sbb
push
push
mov
nop
dec
xlat
aaa
cmp
sub
mov
pop
add
xor
jbe
and
mov
stos
add
cmp
std
stos
or
jnp
jmp
mov
js
xchg
out
cltd
pop
mov
cltd
pop
mov
test
insb
stos
int
ret
or
mov
mov
imul
mov
hlt
push
out
mov
testb
jl
jae
mov
cmp
fbstp
sahf
xor
popf
push
out
dec
fidivrs
sbb
mov
push
dec
pop
xor
fsubl
lahf
ljmp
orl
cmp
fidivs
cmp
int
jbe
mov
es
adc
in
mov
jae
ss
popa
dec
add
clc
pop
loope
in
sub
rcrb
cld
and
outsb
rcr
pop
scas
cltd
sbb
xor
add
mov
cltd
pop
test
dec
push
arpl
dec
xchg
imul
ror
cmpsb
adc
lret
in
lahf
sbb
jbe
mov
xor
xchg
dec
inc
jb
adc
xlat
fisttps
jae
ficompl
dec
and
test
fmulp
ret
shlb
sbb
cmpsb
or
dec
mov
pop
adc
jp
aad
sbb
sub
std
cld
xor
data16
jmp
scas
mov
cmc
jnp
mov
mov
cmp
xlat
clc
enter
mov
loop
xchg
adc
scas
add
shll
rorl
aas
pop
es
hlt
mov
sbb
mov
and
sub
jmp
sbb
in
out
int
decl
pop
add
xchg
push
ret
sbb
inc
loopne
mov
pop
mov
mov
push
sahf
add
or
mov
dec
nop
ss
sti
push
mov
or
dec
and
pop
mov
mov
jmp
test
mov
and
xor
shll
call
xchg
fdivs
sbb
jmp
popa
in
movsb
iret
stc
ja
and
ljmp
mov
mov
cmpsb
dec
sub
mov
jb
subl
pusha
cmp
int3
lcall
fmul
imul
aad
mov
jle
lods
sti
ja
mov
cmp
xorb
dec
int
push
stc
insl
imul
movsb
mov
cmp
sti
add
add
pop
jg
shrl
add
push
pop
rcl
ds
jne
fcmovu
push
mov
push
cltd
push
imul
xchg
je
sub
ret
and
inc
sub
mov
mov
mov
or
pop
jno
fidivrl
dec
popf
or
shr
mov
stc
stos
jne
sbb
sub
incb
dec
mov
fdivrs
std
xchg
push
inc
ss
mov
pusha
add
lcall
pusha
xor
or
mov
add
ja
cmpsb
pop
add
out
inc
xorl
repz
out
dec
add
fldt
dec
jp
or
outsl
test
int
mov
in
pop
out
cmpsb
xor
jmp
cmp
jp
orl
pminub
sbb
push
xchg
pop
sbb
jb
push
xchg
ds
cmp
and
imul
sub
out
adc
pop
jg
pop
outsl
mov
inc
imul
pop
sbb
xor
xchg
sbb
lcall
dec
cmpb
mov
jp
movsb
imul
mov
mov
xlat
dec
fdivrl
sarl
adcl
aas
out
outsb
push
fcmovb
xchg
js
dec
jnp
or
ret
dec
pop
test
subb
dec
lcall
rcrb
rcll
cwtl
jg
cmp
push
cli
pop
mov
scas
mov
adc
pop
sbb
inc
leave
xlat
sti
inc
pop
push
test
and
nop
mov
push
jmp
mov
rcrl
push
add
lret
add
lcall
mov
clc
adc
lods
sbb
int3
loope
mov
psrld
add
outsb
addl
mov
dec
or
lods
add
aad
mov
fldcw
mov
enter
or
add
pop
outsl
xchg
xchg
mov
cwtl
or
jmp
ja
and
jo
mov
pusha
lea
in
mov
scas
or
lret
lret
addr16
or
mov
adc
scas
mov
sub
imul
mov
mov
jne
and
enter
fimull
xor
rol
sub
js
sub
or
cmp
and
jo
inc
pop
xchg
cmp
ret
xchg
and
add
dec
jo
mov
push
repnz
jmp
mov
es
and
jno
adc
xor
push
stos
test
jmp
jns
sbb
cmc
fmull
or
arpl
popf
sbb
xchg
pop
sbb
ror
outsl
pop
push
or
dec
dec
insl
cli
dec
sbb
add
sub
add
jb
jl
pop
outsb
hlt
pop
out
lea
jnp
rcr
cwtl
fistpl
imul
mov
movhlps
pop
mov
inc
inc
jmp
cmp
gs
test
stos
repz
shlb
dec
xchg
das
adc
pop
enter
xchg
jo
add
mov
mov
ljmp
mov
pushl
test
adc
xor
add
sub
jg
inc
movl
or
shll
cs
push
mov
ds
dec
jns
pop
ficoms
sbb
sbb
out
stc
imull
out
adc
out
mov
push
push
mov
test
pop
fs
and
jo
arpl
into
adc
pop
mov
mov
lret
or
xchg
cld
xlat
sub
sti
cmp
add
cmp
shl
addb
out
xchg
pop
addr16
mov
xchg
and
daa
ret
inc
popa
mov
or
aam
in
aaa
lahf
push
xlat
out
out
test
pop
fstps
add
arpl
pushf
fs
pop
adcl
shlb
xor
ds
adc
add
sub
testb
enter
adc
cmpsb
or
scas
ja
jp
test
add
out
sub
mov
adc
and
fimuls
dec
xor
ret
mov
sub
jecxz
cmpb
sub
add
inc
rorl
push
andb
mov
dec
adc
push
mov
push
sbb
sub
mov
loope
bound
dec
mov
dec
push
adc
sbb
or
add
mov
test
jmp
popa
lcall
call
addr16
cmp
sbb
call
dec
mov
lods
faddp
and
adc
mov
jnp
mov
fcompl
or
lock
or
lcall
jecxz
cmp
pop
js
push
pushf
insl
push
xchg
xchg
inc
sub
push
sub
nop
or
inc
aad
aam
jp
dec
or
aam
push
cmpb
aam
dec
outsb
jae
insl
dec
xchg
loopne
hlt
push
jle
movsl
mov
aam
mov
pop
pop
sub
out
sub
pop
out
ret
sub
scas
xchg
stos
rol
mov
sub
jo
rorb
enter
adc
icebp
fisubrs
mov
andb
push
inc
pop
mov
dec
add
subb
jns
pop
leave
adc
fwait
pop
out
adcb
jge
les
loopne
in
sbb
loopne
adc
add
shlb
jmp
lods
adc
add
jmp
js
mov
data16
cmpsb
xchg
pop
or
and
lret
xchg
jbe
add
sarb
fmul
mov
xchg
adc
inc
xor
or
mov
push
adc
bound
jnp
int
shr
mov
add
add
inc
xor
dec
mov
mov
stos
stc
shll
out
mov
cmp
add
mov
rcl
dec
sbb
inc
mov
inc
cmp
mov
sub
repnz
mov
imul
or
punpckhbw
cmp
dec
cld
lds
mov
stc
xor
mov
je
insb
dec
mov
les
std
stos
inc
repnz
notb
cld
scas
push
shl
daa
sub
sbb
movsl
add
inc
jno
inc
or
push
aad
fdivrp
push
mov
cli
push
gs
jns
mov
push
inc
pop
pushf
scas
adc
cmp
sub
repz
dec
push
dec
lret
mov
les
xor
into
jno
push
mov
shrd
pop
push
sahf
test
jnp
sbbl
sbb
lret
outsb
cmp
out
cmc
xchg
mov
pushfw
xor
mov
mov
jp
inc
addps
adc
jmp
fwait
or
jae
sub
push
mov
cmp
fstl
das
gs
inc
pop
mov
sbb
mov
xchg
mov
pop
mov
inc
push
or
add
xlat
or
pop
xor
jge
subb
mov
sub
aas
jmp
mov
mov
insl
mov
lea
jnp
dec
mov
inc
sbbb
add
sahf
and
test
adc
sub
xchg
mov
mov
and
inc
adc
in
int3
test
sbb
mov
imul
fwait
test
lods
into
mov
loop
cmpsl
js
stc
je
xchg
and
cmp
nop
ljmp
mov
popf
rclb
cmovnp
pop
fidivrs
mov
mov
cmp
ret
cmp
cmp
cmp
xor
adc
sahf
mov
popa
rcll
xor
imul
enter
lret
aad
pop
mov
push
add
in
dec
adc
outsl
test
nop
sub
fiadds
popa
xchg
std
icebp
add
add
lahf
aaa
rolb
insb
insl
jne
inc
stos
call
add
dec
out
sub
sub
inc
test
leave
movsb
pop
aam
push
dec
stos
clc
stc
push
cmpsb
outsb
lods
inc
popf
clc
lods
bnd
push
or
or
in
xor
std
push
cmpsb
adc
pop
lahf
fistl
pushf
das
out
dec
mov
cs
jb
ficompl
fdivr
or
ljmp
in
jl
js
fcomp
shr
push
clc
or
mov
ja
mov
jle
insl
idivl
xor
inc
push
xchg
mov
cmc
jno
xor
dec
ja
shr
mov
mov
cwtl
dec
and
stc
jb
pop
pusha
loopne
rol
cmc
mov
test
aaa
loopne
lods
mov
dec
xchg
cmp
push
pop
lods
xchg
lods
loop
mov
push
mov
xchg
gs
pop
std
addr16
test
mov
inc
jno
icebp
adc
icebp
ds
ds
ljmp
add
push
mov
pop
add
ja
mov
sbb
sbb
or
daa
pop
mov
mov
in
fldlg2
mov
in
repz
sbb
loopne
sub
negl
sbb
jge
loopne
jecxz
adc
dec
movsb
inc
pinsrw
inc
ret
jb
stc
sub
mov
sbb
rcl
cmp
std
cwtl
xor
dec
xchg
out
fwait
lock
xchg
lret
mov
imulb
sahf
outsl
sub
pop
dec
mov
stc
inc
popf
jl
jno
inc
pushf
sub
jecxz
jl
sub
and
jge
inc
push
jg
inc
and
stos
ss
mov
dec
dec
jmp
add
and
jge
sub
adc
xchg
bound
fistpll
jle
lcall
mov
fwait
or
mov
stos
adc
and
in
jmp
lcall
push
scas
or
mov
insl
mov
fs
es
imul
mov
xchg
stos
push
jle
lret
or
push
mov
add
shlb
mov
stos
adc
xchg
ss
push
push
push
cmp
push
jbe
mov
in
shlb
loopne
movsb
pushf
dec
adcl
mov
jno
push
mov
jae
js
lret
sub
int
dec
imul
and
inc
cmp
xchg
xchg
dec
rcrl
and
out
push
inc
nop
xchg
push
mov
sub
xchg
mov
inc
icebp
mov
and
test
dec
sbb
xchg
test
loope
pushf
je
mov
add
pop
out
les
or
stos
jg
lahf
lods
dec
hlt
inc
sub
popf
jg
mov
ljmp
add
add
stc
lods
fstpl
dec
addr16
aas
inc
sbb
aam
pop
lret
push
xor
push
xchg
mov
xchg
test
sbb
mov
xchg
jo
and
sub
add
jns
or
xchg
xchg
cmc
add
rcl
lock
popa
jo
js
loope
fldenv
adc
jp
insb
xchg
pop
push
jo
addr16
sub
inc
aaa
xor
fistpll
cld
push
and
in
stos
and
push
int
xor
jmp
rcl
add
jne
jmp
insb
cmp
sub
push
xor
xor
xchg
sbb
jns
xchg
test
pcmpeqb
out
xor
and
scas
lods
in
jbe
inc
pop
paddb
bound
scas
insb
out
mov
jmp
fsubl
in
and
je
add
xchg
adc
sbb
lods
arpl
loope
cmp
mov
test
int
adc
fnsave
xor
popf
pop
jg
inc
inc
and
stc
mov
stos
dec
sbb
divb
or
in
test
inc
and
int3
call
call
and
push
mov
xchg
push
test
sbb
lret
lock
sbbb
mov
icebp
aam
cltd
push
aad
sub
pop
shlb
frstor
pop
push
ret
pop
dec
jo
movsb
add
xor
or
js
inc
jo
aas
mov
or
lret
jmp
out
clc
aaa
sub
push
in
lock
fsubr
das
sbb
pop
jno
push
cmp
es
sbb
hlt
and
mov
int
dec
decb
cmp
cwtl
in
scas
xor
sti
cmp
cli
loope
and
push
push
mov
mov
ja
mov
push
leave
shlb
mov
or
adc
push
mov
mov
add
mov
inc
mov
or
mov
int3
and
fstpt
popf
xchg
jecxz
jnp
aaa
dec
loope
mov
pop
push
in
or
jl
stos
pop
test
jecxz
push
mov
push
or
cmpsb
sub
shlb
pop
orb
ss
mov
in
push
cmc
push
insb
in
mov
sbb
popf
sbb
mov
sub
add
jae
ljmp
jp
or
add
repz
push
xchg
xchg
jb
push
push
enter
sub
pop
add
push
cwtl
adc
stos
in
insb
jl
lods
rclb
test
cli
test
mov
stos
fwait
sbb
imul
and
mov
sti
adc
movsb
mulb
outsb
aad
pusha
add
add
and
xchg
adcl
scas
mov
cmp
in
adc
inc
cwtl
clc
pop
testb
imul
cmc
cmpsb
jl
cmp
push
mov
fsubrp
pop
aad
cmp
lret
nop
insl
int
lds
cmc
adc
dec
dec
lock
aaa
gs
mov
inc
inc
fmul
testb
push
and
movsb
jmp
ljmp
push
enter
insl
adc
sbbl
dec
stos
dec
sub
adc
mov
dec
das
pop
mov
mov
in
xchg
fmull
adc
mov
sub
pop
cmpsl
out
test
xchg
sub
rorb
mov
addr16
out
fcmovne
lds
inc
mov
test
xor
cmp
gs
sub
pop
decb
pop
or
xchg
mov
mov
dec
jae
push
cmp
inc
arpl
mov
mov
iret
pop
push
andl
mov
call
daa
stos
outsl
je
fmull
lods
sub
insb
dec
adc
imul
lods
aas
dec
adcb
popa
push
fstpl
movsb
pop
inc
inc
pop
cmp
pop
stos
pcmpeqb
jg
pop
mov
pusha
push
aas
stc
in
push
jbe
cmp
sahf
adc
hlt
mov
and
cmpsb
cmp
aas
sahf
stos
fldenv
mulb
push
jmp
rolb
mov
lods
iret
mov
icebp
inc
sbb
fs
movsb
cli
fisubl
imul
daa
xorl
pop
jae
adc
nop
jae,pt
push
jnp
dec
cmp
jb
sbb
sbb
loop
je
sub
dec
xchg
das
std
jbe
hlt
mov
popa
outsl
inc
xor
pop
push
add
stc
int3
add
push
push
jl
in
data16
fcomps
addr16
mov
inc
pop
sub
push
sahf
mov
mov
ret
lcall
data16
clc
es
add
inc
add
mov
and
shll
jl
mov
lock
xor
es
inc
jno
sbb
mov
iret
mov
pop
add
dec
fldl
sbb
test
sub
es
xor
jo
xor
pop
test
jg
lea
cmp
mov
dec
ljmp
add
out
repnz
jb
mov
cmp
inc
or
xchg
clc
mov
add
insb
test
in
mov
or
cwtl
sbb
data16
push
inc
push
push
test
int3
dec
lret
cli
xor
in
lods
push
add
pushf
xor
inc
aam
add
jl
inc
mov
and
sub
shl
push
mov
mov
pusha
cli
mov
jecxz
pop
out
jle
jo
jecxz
das
jl
test
pop
jp
cmp
add
adc
sahf
inc
popf
xchg
insb
movsl
mov
dec
mov
les
int
shlb
ret
pop
jbe
sarb
fistpl
cs
popa
daa
mov
rorb
in
xchg
xchg
add
test
enter
xchg
hlt
pop
jge
sar
dec
adc
enter
jp
inc
fnstenv
xchg
xchg
adc
jle
add
pushf
adc
add
add
mov
jnp
rclb
mov
fcmovbe
xchg
sub
daa
inc
outsb
jecxz
fmulp
sbbb
mov
fs
popa
clc
movsb
sub
push
adc
mov
mov
pop
int
out
leave
int3
push
jl
push
dec
dec
xchg
out
popa
dec
mov
out
xor
sub
jo
loop
pop
std
add
shlb
xchg
daa
mull
lock
or
aad
mov
add
add
jp
addr16
dec
js
ja
fcoml
int
stos
xor
jae
mov
aas
icebp
pop
inc
add
shl
stos
xor
leave
cmp
dec
xchg
repnz
jg
dec
das
in
in
cmp
movsb
xchg
imul
pop
repz
or
mov
cmp
xchg
jns
push
dec
data16
mov
xor
arpl
scas
insb
xchg
jne
pop
je
stos
push
mov
push
daa
mov
sbb
dec
pop
jne
imul
xchg
mov
fidivrs
cmp
dec
mov
je
pusha
ljmp
pop
stc
push
setae
jmp
addr16
mov
push
sahf
mov
lods
sbb
mov
call
dec
inc
aas
add
out
sub
and
xchg
cltd
insl
adc
sbb
pop
or
bound
das
mov
and
jg
cltd
imul
shrl
sahf
in
mov
sbbl
fnstenv
aas
inc
add
inc
out
ljmp
lock
fidivrs
lds
sbb
cmp
js
fldenv
jno
stc
sahf
mov
imul
jbe
xor
push
add
nop
or
cli
cmp
test
repz
or
stos
out
ss
cmp
xor
adc
movsl
jp
testb
sbb
in
sbb
pop
inc
jmp
adc
jb
ja
inc
mov
or
or
ja
jg
sub
nop
dec
add
push
arpl
push
scas
mov
cmpsl
add
gs
xchg
sbbl
adc
mov
mov
pusha
or
jo
jmp
xchg
test
jne
inc
or
xchg
mov
popf
loopne
call
mov
mov
sub
lcall
aaa
inc
mov
lahf
imul
leave
out
inc
cmp
mov
adcl
std
sbb
push
xchg
lods
xchg
jno
cmc
adc
mov
aaa
mov
xor
adc
cmpl
aaa
pop
and
ret
cmp
call
out
mov
fneni(8087
inc
negl
arpl
shlb
cmp
inc
jecxz
loopne
inc
aas
push
jae
mov
pop
push
jge
ja
dec
mov
cmp
sbb
cli
lods
mov
mov
adc
cli
aas
cs
push
adc
lret
dec
mov
add
lea
stos
loope
insl
sub
push
dec
mov
mov
cmpsb
sbb
sarl
in
push
jecxz
fcompp
lcall
mov
fcompl
scas
sub
insl
in
add
into
adc
movsl
inc
notb
add
lods
mov
pop
nop
ljmp
ret
cmpsl
inc
inc
lea
in
lret
sub
ret
out
cmc
xchg
adc
add
inc
rcrl
hlt
sbb
rol
les
add
fistl
jne
jge
in
xchg
fwait
std
sar
notl
gs
dec
mov
jne
and
bnd
mov
out
push
push
mov
or
lds
mov
js
cld
out
or
es
cmpb
callw
cmp
ret
xor
ds
scas
sub
mov
fcoml
adc
insl
jmp
ljmp
js
test
shll
dec
lods
push
rcr
fwait
mov
add
push
xchg
stc
pop
mov
das
in
shr
cli
and
sbb
ds
jae
arpl
inc
ret
pop
clc
es
outsl
xor
nop
push
insl
sti
gs
test
pop
dec
dec
lret
inc
mov
inc
xor
out
std
pop
xchg
mov
jno
ljmp
adc
mov
movsb
test
sbb
pop
xchg
fucomp
mov
nop
and
movsb
inc
mov
aad
ja
cmc
sbb
cwtl
jl
arpl
vmwrite
aad
test
fsub
dec
imul
stc
cmp
jl
xor
leave
jne
or
in
add
push
sar
cmp
pop
addl
xor
imul
adc
jnp
mov
addl
sub
xlat
sub
test
mov
and
pushf
loope
nop
pusha
jbe
test
add
gs
jnp
aam
bound
mov
and
insl
ja
inc
das
pushf
insl
test
sub
mov
xchg
fs
cli
add
mov
mov
sub
inc
dec
imul
out
gs
xchg
pop
push
lods
test
fs
xor
mov
and
cwtl
and
shlb
dec
pop
push
jle
sub
pushf
lock
mov
lock
insl
iret
test
mov
aam
push
sub
xchg
dec
dec
add
xlat
pushf
adc
add
mul
mov
into
fucom
lret
or
imul
adc
or
xchg
mov
out
sub
int3
push
add
cmpsl
push
fs
insb
pop
or
int3
rorl
sub
xchg
sti
fs
addr16
mov
jb
mov
into
rolb
or
push
cmp
sti
loop
into
lret
aad
scas
out
sti
loope
aaa
out
inc
mov
jle
lods
push
sbb
xor
xchg
add
repz
fs
scas
imul
adc
call
test
dec
popa
std
aaa
adc
or
loopne
xchg
fistps
push
cmp
popf
jb
pop
sbb
dec
sbb
inc
xchg
adcb
adc
cmpsl
push
mov
inc
and
mov
and
mov
sti
roll
xor
cli
adc
or
inc
jmp
call
dec
out
jae
adc
or
nop
lahf
sbb
xor
data16
xchg
call
xchg
lahf
mov
je
sub
ja
cmp
push
jns
or
icebp
cwtl
movsl
sub
jl
push
mov
dec
and
and
sbb
mov
les
mov
or
insb
mov
in
mov
int3
adc
idivb
add
mov
inc
xchg
rcl
clc
and
sub
xchg
mov
xor
mov
imul
jp
pop
rclb
fisubrs
add
xor
les
test
inc
jb
push
comiss
mov
enter
jl
ljmp
mov
mov
movsb
jns
sub
out
xchg
jb
mov
std
mov
xchg
xor
iret
xchg
or
adc
roll
rolb
add
mov
push
push
mov
xor
or
fwait
jle
and
mov
ret
xor
mov
push
add
push
sbb
cmpsb
xor
pop
test
icebp
les
divb
cmpsl
jmp
jp
mov
push
fcomp
xchg
nop
lock
fs
and
xchg
or
adc
das
testb
in
sbb
les
push
or
xchg
or
mov
stos
mov
fnsave
dec
mov
and
ds
nop
clc
pop
mov
inc
sub
mov
xlat
jmp
or
add
and
clc
cmp
or
sub
fdiv
enter
jnp
push
xchg
scas
lds
shrl
xchg
xor
stos
out
roll
stos
iret
ss
sub
sub
loop
lods
mov
mov
dec
faddl
sahf
inc
sahf
es
sahf
cwtl
mov
lea
cltd
test
jbe
in
jmp
hlt
mov
xlat
into
ds
jns
cltd
xchg
stc
sbb
adc
or
xlat
cltd
int3
push
lds
and
sarb
in
popf
lds
scas
pop
sub
orb
dec
jns
icebp
cld
dec
aas
mov
mov
pop
repnz
mov
loopne
stc
cmp
mov
cwtl
div
int3
incl
sahf
push
jne
fbld
and
pop
sbb
faddp
mov
mov
adc
jl
enter
leave
cmpsl
pop
or
iret
mov
mov
lods
add
xchg
outsb
push
test
cmp
sbb
test
and
adc
mov
mov
les
pop
push
popf
decb
jle
out
les
pop
mov
mov
shlb
xchg
or
xor
std
enter
and
in
fistps
mov
es
lret
hlt
into
xchg
adc
jne
arpl
rolb
mov
aad
add
cmp
push
imul
lods
xor
xchg
movsb
lret
adc
mov
mov
int
or
sbb
mov
insb
add
stc
test
loope
jb
lds
pushf
xsaves
pop
mov
xor
je
imul
dec
push
sti
mov
jp
cmp
aam
sbb
jno
dec
inc
aas
mov
shrl
iret
int
mov
dec
andl
enter
lret
dec
fwait
gs
cmp
dec
lock
pop
mov
jne
xchg
shl
int3
xor
pop
dec
in
push
inc
mov
jnp
stos
pop
lock
sar
mov
and
ds
xchg
nop
in
shrb
push
adc
pop
inc
pop
add
sti
inc
xlat
arpl
jecxz
pop
out
jge
repz
sub
jg
fcmovnb
push
or
inc
int3
cmp
dec
lock
jmp
mov
dec
cmc
push
dec
fsubs
cld
sub
mov
push
loop
inc
push
jnp
jne
xchg
pusha
xor
inc
stos
popa
add
sbb
mov
jbe
dec
mov
fldenv
sub
xor
sbb
cmp
and
mull
sub
mov
adc
nop
in
les
jg
pop
lds
call
xor
fwait
daa
or
mov
dec
inc
inc
outsl
shll
cmc
enter
imull
jle
loop
lahf
sbb
or
dec
test
inc
pop
bound
dec
pop
arpl
cmp
repnz
xlat
xchg
cmc
out
pusha
mov
repnz
es
xlat
or
bound
push
cmpb
scas
das
or
jg
xor
ret
lods
jge
gs
outsb
shr
sub
icebp
jl
xchg
test
mov
les
popa
xor
mov
shl
pop
cmc
aaa
mov
shlb
push
loop
add
fs
popa
std
xor
das
mull
add
push
inc
jp
pop
lods
cmp
pop
scas
sahf
flds
add
cmp
sub
sub
push
sbbl
add
mov
cli
push
jecxz
ds
sbb
movl
xchg
pop
inc
or
mov
mov
mov
not
xchg
xor
push
add
push
out
lock
lock
shll
std
jns
push
es
inc
mov
push
nop
inc
jnp
insl
inc
jmp
xor
push
fstl
stos
sbb
and
mov
sub
cmp
sbb
test
nop
xor
cmp
insl
cmp
push
pop
push
and
insb
or
ficoms
adc
stc
mov
test
imul
dec
xchg
int
mov
pop
cs
ret
rol
mov
mov
mov
cmp
lret
rol
mov
jmp
push
add
in
xorl
xchg
add
lret
push
jmp
call
add
cltd
push
fs
dec
cmpsl
xchg
sub
sub
mov
pop
xchg
outsb
jne
mov
adcl
lea
push
inc
in
adc
int3
insb
rcl
mov
int
push
mov
xor
add
mov
nop
push
jle
fld1
push
sub
movsl
mov
fdivs
dec
mov
in
aam
or
lea
daa
jl
testl
and
cmpsb
stos
inc
or
add
adc
push
sbb
sub
daa
mov
pop
dec
jb
aad
mov
loopne
int
test
lea
lods
xchg
pop
jp
and
xchg
cs
or
subb
mov
dec
add
mov
stos
adc
mov
cmpsl
pslld
mov
xor
cmp
call
adc
pop
adc
loopne
adc
ret
lds
jp
adc
jo
jnp
ficoms
and
xchg
jne
mov
jne
je
cmp
xor
cmp
mov
fsubrl
psrad
mov
sbb
in
cli
les
into
push
cld
push
loope
dec
js
clc
xchg
and
xchg
cs
rcll
xor
addb
loope
mov
mov
fcomip
sbb
and
sub
and
jg
xor
xor
add
pushf
enter
fcom
pop
lods
push
inc
inc
push
adc
jg
loopne
pushl
mov
sti
fstpl
mov
insb
jl
add
loopne
popa
dec
rcr
dec
pop
dec
cmpsl
int3
push
mov
jmp
aam
adc
lret
sbb
cltd
or
add
mov
pop
mov
xor
ljmp
mov
xchg
ljmp
sub
jno
push
adc
pop
and
mov
jle
insl
mov
sahf
mov
stos
dec
and
xor
adc
jp
leave
scas
push
sbb
addr16
adc
xchg
popa
sbb
fs
jae
test
fcomi
jnp
pop
shll
frstpm(287
sub
imul
sbb
pop
ja
test
clc
mov
icebp
mov
jne
and
mov
jmp
pop
rorb
xor
lods
pop
xchg
stos
xor
cmpsl
jge
cmp
in
int
push
pop
mov
stos
mov
and
dec
mov
fcom
loop
shrl
mov
mov
and
outsl
in
mov
hlt
pop
std
repz
push
pusha
arpl
imul
int
nop
xchg
or
stos
sub
cli
lret
jo
inc
mov
adc
repnz
out
lret
cmc
dec
cmp
sbb
push
loop
inc
js
adc
xchg
out
lock
inc
dec
dec
sub
iret
or
icebp
push
fisubrs
loopne
cmp
xchg
stos
jbe
cld
jecxz
and
push
and
and
pop
xor
mov
pcmpgtw
jb
test
mov
aaa
push
daa
sbb
dec
or
rolb
pop
rclb
test
adc
jne
mov
xor
cltd
jnp
scas
popa
jmp
test
lahf
hlt
mov
sub
pop
jl
mov
mov
push
xor
movsb
or
dec
jbe
test
lods
cmp
jle
jge
fstpt
stos
adc
xchg
jo
mov
and
cltd
icebp
jge
xchg
sarl
shlb
loop
shlb
jg
je
mov
xlat
dec
movb
enter
inc
ficoml
lods
mov
xchg
cltd
insl
fdiv
mov
pushf
js
dec
pop
pop
mov
lea
xchg
jle
addl
fwait
jge
icebp
mov
aaa
pop
mov
and
push
subl
andb
movsl
insb
xchg
in
lahf
and
pusha
push
lods
and
mov
pop
rorl
in
adc
arpl
pop
rclb
jmp
push
outsb
jmp
fdivl
fisubl
lret
push
sub
push
xlat
mov
loop
sub
add
xor
sbb
outsl
pop
mov
cmc
fmuls
shll
call
repz
sub
cmc
push
jge
inc
lock
dec
jecxz
xchg
jae
cmpsb
cmp
push
arpl
into
repnz
scas
jle
cli
xor
repnz
js
adc
mov
xor
ljmp
push
mov
jno,pt
xlat
mov
ja
fstl
xchg
mov
lods
pop
xchg
je
divb
pop
cmp
out
ja
mov
nop
incl
stos
fscale
orb
cmc
mov
sahf
adc
inc
jae
lock
xor
xchg
dec
fwait
rcl
cmpsb
out
lret
mov
out
nop
or
mov
sbb
jle
loopne
xor
emms
shrb
xlat
shll
iret
testl
popf
inc
add
sub
inc
ror
xchg
cmp
push
pop
push
sbb
xor
or
add
pop
lcall
push
cmp
in
or
jg
sub
ss
gs
xchg
push
adc
adc
iret
push
and
pop
test
arpl
js
push
mov
shr
test
cmp
out
loopne
addps
cmpsb
adc
lret
mov
or
lret
jmp
ret
xchg
xchg
mov
jecxz
sar
aam
jl
jp
or
push
out
fbld
xor
testl
xor
sbb
imul
mov
adc
shl
jle
mov
cmp
mov
in
xchg
fldl
mov
repz
push
shlb
test
jmp
shrb
or
add
scas
lds
push
mov
dec
jle
sub
jmp
cwtl
ret
mov
sub
es
mov
pop
loope
cmp
adc
pop
testl
aaa
push
fs
pop
cmp
lods
mov
adc
gs
adc
or
jmp
adc
leave
jns
dec
lahf
aaa
sub
es
leave
push
mov
jno
mov
adc
inc
adc
mov
jge
cld
int3
iret
adcb
cmp
xchg
mov
lods
sub
jb
neg
jmp
ja
ret
seto
add
mov
pop
jo
mov
int3
push
inc
push
icebp
xlat
inc
mov
ret
push
in
lea
fnsave
dec
test
adc
lcall
fwait
shlb
xchg
shlb
xor
xchg
xchg
or
hlt
mov
out
mov
jg
repnz
mov
dec
mov
out
mov
scas
int3
cltd
or
lahf
dec
pop
test
mov
xchg
scas
out
adc
adc
pop
mov
out
inc
je
aam
jne
repnz
cld
adc
sub
lret
rorl
gs
xchg
push
mov
pop
jmp
adc
sub
cltd
fsubs
mov
push
sub
jae,pt
xchg
out
xor
cmp
mov
jbe
lcall
adc
mov
jecxz
lret
movsl
push
xlat
jo
lret
enter
adc
and
pop
std
xlat
cli
push
mov
inc
out
adc
enter
cwtl
shll
jle
out
mov
push
push
fnstsw
jb
decb
lcall
mov
pop
lea
mov
and
xor
xor
mov
testb
adc
imul
pushf
push
rorl
xlat
lret
ljmp
nop
fsubs
adc
fsub
adc
sarl
push
mov
repz
fcmovnu
imul
add
and
sahf
cwtl
aaa
leave
addb
ja
lret
inc
and
fwait
sbb
nop
popa
mov
sbbb
adcl
incl
or
adc
in
cmp
sbb
pop
inc
mov
ja
sub
jmp
adc
adc
rcll
fs
xor
mov
rclb
into
test
jge
outsb
xchg
dec
orb
or
or
out
add
cli
aad
insb
pop
xchg
cld
aam
fildl
and
sub
sub
mov
cmpsb
dec
sub
push
gs
pop
dec
xchg
xchg
mov
aad
hlt
ret
out
and
mov
inc
jmp
mov
add
adc
aaa
aaa
imul
imulb
data16
pop
std
jge
fisubrl
and
leave
mov
fldl
ret
aas
push
jl
icebp
inc
push
jae
add
adc
pop
sbb
cltd
arpl
mov
cmpsl
jmp
cmp
add
push
sbb
mov
mov
cs
fcomp
iret
sub
push
jp
push
out
mov
loope
mov
in
lods
adc
sbb
xchg
mov
xorl
jl
imul
in
stos
push
leave
rolb
lret
jp
sub
xchg
sahf
movsl
add
inc
and
mov
cmpsb
push
jg
pop
fdiv
pushl
icebp
pusha
aam
jl
xchg
loop
adc
cmp
push
mov
mov
push
lret
std
adc
mov
dec
cli
mov
data16
mov
mov
imul
push
sbb
loopne
subb
xor
das
fsubrl
shlb
xchg
push
inc
push
mov
adc
add
dec
stc
inc
mov
mov
les
sub
push
mov
pop
pop
push
dec
pop
jb
cmpsl
mov
ret
addb
mov
pinsrw
xor
mov
lahf
rorl
sub
inc
xchg
cmp
movl
xchg
pushf
int
movsl
lret
sbb
into
pushf
test
lods
lret
leave
push
jno
xchg
mov
dec
and
cs
dec
shll
cmpsl
out
divl
rcr
xchg
test
xchg
push
fs
sbb
mov
mov
and
loopne
xchg
adc
popa
or
inc
out
push
popa
jecxz
mov
ret
clc
inc
sbb
push
cmp
or
sbb
test
pop
cmpsb
xchg
ljmp
pushf
cwtl
jbe
lods
movsb
loope
and
cs
iret
inc
daa
and
mov
cltd
push
lret
pushl
gs
jbe
subl
es
mov
mov
imul
addr16
and
sbb
pop
sbb
cmp
fsubr
aam
jne
sub
and
jge
in
sbb
lods
inc
xchg
insb
mov
jo
dec
aas
add
mov
xchg
jbe
dec
jge
add
outsl
push
jl
repz
sti
fwait
ljmp
imull
add
mov
out
cmpsl
mov
loopne
xor
cmp
pop
xor
jl
cltd
push
dec
pop
mov
and
mov
fwait
dec
adc
sub
pop
inc
jo
je
lds
loopne
push
ret
ljmp
jecxz
mov
pop
push
xor
gs
mov
mov
add
jg
bound
xchg
cmc
pop
neg
jp
es
lods
insb
out
xchg
in
jle
xchg
movsl
jecxz
lret
xorl
dec
dec
pop
push
aaa
shlb
out
popf
jbe
leave
xchg
mov
pop
idivl
jae
inc
mov
mov
sub
int3
nop
xor
mov
fs
cwtl
jmp
sub
addl
sub
fsubl
in
jg
sahf
lds
dec
sbb
sbb
in
dec
sub
jge
push
aas
nop
int3
add
scas
clc
inc
add
out
push
into
mov
dec
inc
mov
push
mov
inc
inc
mov
in
test
mov
xorb
outsb
test
out
jne
xor
or
mov
sub
xor
jb
or
mov
jmp
jecxz
repz
mov
xor
fistpl
jl
inc
leave
rolb
hlt
enter
xchg
adc
mov
imul
cmp
jecxz
fistpl
lods
push
inc
pop
rolb
int
out
pop
lods
adc
addb
lods
out
pop
out
lret
pop
or
mov
orl
into
push
std
mov
push
mov
xchg
xor
inc
and
stos
bound
insb
push
cmpsb
daa
mov
arpl
dec
dec
movsl
push
mov
das
jecxz
mov
fs
fwait
xor
jg
ljmp
and
mov
fcomi
cmc
xchg
movsb
das
push
fsubrs
xchg
add
mov
shll
sbb
mov
xchg
add
out
ljmp
sbb
pop
sarb
rorl
cwtl
xchg
mov
cwtl
inc
push
gs
jno
inc
add
cmp
jae
jne
xor
cmpsl
inc
jmp
popa
adc
add
rcll
in
imul
loop
lcall
xchg
int3
mov
or
jne
fsubl
stos
jge
sub
sub
or
das
mov
mov
sti
mov
int3
push
pop
jp
mov
pop
jae
leave
xchg
pop
gs
add
add
cmpsl
sbb
xchg
pop
iret
mov
xchg
jle
outsb
test
sub
jbe
cmp
and
sub
movsb
decl
pop
push
jg
mov
jmp
mov
push
xor
lea
loop
fnsave
cmpsl
daa
lea
xor
inc
scas
mov
or
jg
mov
arpl
out
xor
mov
xlat
cmp
icebp
add
cli
imul
dec
jne
shlb
cmp
and
je
aaa
adc
mov
or
xor
ret
adc
icebp
jmp
push
cmp
lods
mov
std
rolb
xchg
pop
lds
stc
cld
push
fcmovne
xlat
aam
in
adc
jecxz
test
dec
fildll
push
adc
jge
or
stos
cmp
xchg
es
adc
loopne
in
dec
xchg
lods
leave
push
imul
pop
dec
test
and
adc
xor
pop
xchg
pop
adc
cli
jg
push
adc
in
cmpsl
adc
addr16
daa
mov
cli
pop
sti
mov
pop
addr16
lods
das
rorb
rep
gs
lods
je
cld
loope
mov
sar
pop
and
je
cmp
push
imul
sub
push
insb
mov
mov
pop
cmp
add
pop
inc
cmp
cmpsl
sub
jbe
js
lock
test
cli
push
aam
mov
fldenv
orb
lods
and
jge
imul
fisttpll
sub
jmp
cmp
xchg
daa
pop
gs
movsb
add
hlt
fld
dec
and
jp
push
adcl
jecxz
push
inc
pushfw
std
push
incb
mov
repnz
push
mov
pop
adc
mov
inc
push
sub
or
in
rcr
mov
repz
insb
cs
aad
sub
mov
sbb
push
adc
xchg
js
int
test
in
fcomip
shll
adc
cli
jg
das
add
cmpsl
insl
movl
xlat
insl
mov
mov
mov
add
jb
adc
jbe
aaa
fdivrl
daa
ret
stos
pusha
pop
mov
pop
popf
repnz
add
cmp
ret
inc
cmp
push
dec
sub
stos
or
adcb
outsl
in
mov
dec
xor
mov
jne
cmp
lcall
aad
je,pt
push
jge
call
in
mov
and
cwtl
cmp
xchg
out
out
cltd
or
pop
test
adc
sbbb
addr16
mov
int
lret
jge
repnz
push
inc
aam
ret
fcmovnu
pop
dec
sbb
mov
xor
push
jb
fsqrt
sub
sub
popa
mov
ds
cld
insl
in
cmp
push
and
js
arpl
adc
cmp
into
sub
adc
std
testb
ja
je
stos
aam
rorl
lret
mov
cmpsl
es
xchg
je
sbbl
push
push
imul
push
or
stc
xchg
add
movsl
in
sub
inc
stc
push
insl
aaa
mov
imul
cmp
push
mov
inc
rorb
pop
push
mull
or
stc
cmovbe
mov
mov
push
adc
lea
xchg
dec
pop
fwait
cmp
mov
cmpsl
adc
rcrb
push
pop
push
and
xchg
shrl
lock
push
fdivs
or
iret
js
xchg
mov
xor
cmpsl
test
pop
jbe
adc
jno
mov
testl
fisubrs
in
sbb
dec
mov
stc
sbb
loop
dec
test
cmpsb
inc
movsl
leave
dec
add
lahf
jle
fildl
mov
push
les
push
enter
arpl
lods
inc
push
dec
dec
daa
addr16
inc
dec
stos
ret
sbb
inc
lea
adc
dec
and
push
dec
and
div
in
out
das
dec
inc
xchg
sub
sbb
and
outsl
enter
fstps
mov
sub
lcall
and
sub
dec
add
mov
add
cmpsb
cmp
ljmp
inc
sbb
pop
pop
loopne
mov
ret
maxps
xchg
cwtl
mov
pop
popa
loopne
mov
dec
xor
call
jb
ficompl
sti
sub
ret
shr
sbb
mov
pop
sbb
aas
cmp
pushf
je
mov
adc
sub
test
pop
push
orb
dec
test
sub
repnz
pushl
popf
faddl
mov
add
push
jmp
test
adc
fldenv
scas
sub
xlat
xchg
das
push
cli
mov
mov
xchg
push
and
fs
jne
repz
test
mov
xlat
pop
or
cmp
xor
inc
xchg
mov
jle
jl
test
fcoml
pop
in
icebp
dec
js
ja
add
ss
add
sbb
add
adc
fadds
push
ret
xor
sbb
out
aad
jae
mov
addr16
stos
inc
inc
sub
fnstcw
xor
in
clc
mov
into
or
dec
mov
int3
ljmp
test
mov
xor
repz
push
dec
xor
dec
mov
and
mov
fs
dec
enter
sbb
inc
adc
jecxz
rcl
or
in
xchg
add
aas
les
shr
in
mov
movsb
roll
lock
mov
jg
into
test
dec
push
mov
or
aas
lcall
gs
ljmpw
lds
mov
dec
enter
ss
inc
push
mov
jnp
les
inc
dec
push
dec
cltd
sbb
out
xchg
xchg
retw
imul
imul
daa
dec
cmc
mov
push
sub
arpl
inc
outsb
lahf
cmpl
mov
out
sub
adc
divl
adc
mov
ljmp
bound
jge,pn
cmp
lcall
repz
xlat
cmp
xchg
cmpsl
xchg
cltd
xor
lret
sub
mov
in
fmull
mov
mov
arpl
es
fistpll
jecxz
jecxz
scas
fistl
lock
das
pop
fcmovbe
dec
dec
movsl
in
lret
imul
mov
aam
lock
mov
or
lret
mov
test
rolb
add
repz
fildl
fimull
cltd
pop
arpl
push
insl
rcll
andl
out
mov
sbb
xor
jno
jge
test
call
mov
add
sub
scas
mov
lock
mov
and
cwtl
sub
addl
mov
add
xlat
mov
imul
pop
mov
or
sbb
test
lods
sar
out
sti
mov
jmp
in
in
movsb
popa
movsb
lock
out
and
dec
andb
add
repnz
or
sahf
lahf
roll
and
fwait
and
insl
inc
cmpsb
cmc
mov
mov
orl
ds
mov
arpl
hlt
clc
pop
and
mov
xchg
adc
inc
data16
lds
adc
popl
lock
sbb
test
popf
icebp
adc
xchg
popa
repz
sbb
dec
adc
sbb
aaa
cwtl
je
push
call
sub
shrl
sub
xchg
jnp
addps
push
ss
stc
sbb
mov
stos
jns
stc
outsl
test
jns
mov
stos
mov
or
pusha
mov
and
pop
pop
gs
jbe
or
lret
je
adc
sub
adc
inc
into
add
or
mov
imul
test
pusha
push
pop
cmpsl
iret
cmpsb
sub
fsubr
add
add
aaa
mov
jns
lock
lock
iret
stos
lret
fildl
or
popa
jae
std
sbb
int
mov
icebp
cmp
mov
mov
mov
shl
jge
inc
jecxz
xchg
push
aaa
pop
nop
fsts
sarl
push
adc
push
dec
std
adc
fdivs
sbb
fneni(8087
push
scas
lods
mov
stos
jns
fistps
fidivrl
jl
les
jo
cmp
adc
cs
lea
mov
shlb
ljmp
add
sub
ja
cmp
dec
xchg
pop
jg
cltd
sub
sub
push
and
pop
dec
add
dec
rcrb
jecxz
popf
push
mov
cmp
adc
ficoml
jne
fidivs
cmpsl
cmc
fstpt
lds
jecxz
mov
xchg
xor
mov
jp
mov
std
das
pop
rorb
out
adc
xchg
lea
ja
cmp
jl
cmp
cmc
fst
push
xchg
mov
out
xor
jle
popa
daa
hlt
mov
push
cmpsl
fnstenv
adc
cmp
adc
enter
insb
mov
movl
fcomps
cli
imul
mov
out
sub
pmaxsw
xor
jmp
roll
mov
push
or
mov
pop
lret
out
mov
lret
lods
add
dec
sub
popf
clc
test
jae
mov
mov
ret
lret
test
jae
fcoml
xor
dec
enter
xor
jo
push
sub
gs
push
loop
push
jle
mov
inc
iret
les
add
jo
rorl
push
ret
sbb
pop
mov
out
andb
mov
ret
mov
xchg
in
repnz
inc
or
xor
iret
pop
gs
pop
nop
mov
call
cmpsl
lea
mov
pop
mov
dec
sahf
pushf
addr16
sbb
xchg
jno
add
inc
scas
cmp
jae
mov
push
imul
mov
pusha
fisubs
push
imul
adc
sarb
not
lock
es
adc
or
dec
ds
lea
dec
out
in
xor
sub
aas
test
xlat
les
icebp
fstpl
cmpsb
sub
jle
and
es
aad
pop
sbb
iret
mov
push
negb
sub
jns
cmp
mov
mov
push
push
ljmp
and
dec
loopne
js
xchg
dec
adc
pop
out
shll
loopne
xchg
push
test
mov
mov
ret
push
mov
lret
cwtl
int3
js
fs
xor
xor
add
or
call
imul
mov
xor
in
adc
jg
dec
xor
dec
imul
lods
fwait
cmp
pop
xchg
cmp
mov
aam
cltd
mov
inc
adc
jp
enter
xchg
mov
out
int3
inc
and
add
push
dec
jns
or
pop
xchg
sub
je
test
cmp
mov
lds
adc
mov
repnz
lods
lock
xor
das
or
mov
mov
pop
lock
adc
js
dec
lods
cmpsb
push
jno
mov
or
arpl
inc
aaa
adcl
not
jmp
mov
outsl
cltd
mov
stos
push
sub
xor
ficoms
inc
test
adc
and
or
ret
inc
pop
and
dec
fistpl
stos
lret
push
sbb
divl
les
shrb
call
hlt
scas
sbb
mov
les
sub
js
inc
mov
and
ljmp
arpl
out
lahf
dec
shlb
sahf
stc
mov
dec
loopne
aas
addr16
out
xchg
or
lods
pop
out
ret
push
or
fdivl
shll
je
pop
pop
mov
movsl
cmp
lret
js
gs
nop
lods
xchg
xor
add
lock
inc
fwait
nop
cwtl
sbb
xchg
es
pop
jbe
jp
and
ljmp
aam
or
adc
mov
inc
mov
out
mov
popa
mov
pop
addr16
or
push
adc
cwtl
adc
ret
out
fstl
dec
push
gs
gs
cltd
int3
lds
xchg
lock
je
icebp
in
or
mov
scas
movsb
mov
inc
xchg
test
sbb
mov
push
pop
or
fwait
sub
ja,pn
arpl
jbe
or
mov
sub
outsb
movsl
add
in
fisubrl
jb
mov
lcall
push
cmc
insb
jecxz
bound
ret
imul
cmc
movsl
das
jg
out
out
jle
fildl
jne
dec
lahf
lock
mov
rorb
dec
adc
cmp
xchg
popa
lcall
xchg
add
aaa
xlat
addr16
inc
adc
push
int
pop
adc
dec
fisubl
cmp
insl
fldl
scas
cmp
jo
repnz
lods
sbb
sub
mov
test
fsts
sub
push
es
out
leave
mov
inc
leave
sbb
movl
mov
loope
and
fisubrs
outsb
stc
adc
dec
xchg
and
jmp
push
push
out
add
mov
jbe
fnstsw
mov
xor
cltd
push
in
mov
push
mov
mov
arpl
jb
and
fisttpll
sub
in
mov
cmc
jp
or
js
outsb
filds
shrb
std
mov
hlt
pop
stos
and
and
sbb
push
inc
scas
ds
xchg
xchg
sub
adcl
fs
cmp
in
dec
cmpsb
fidivrs
ljmp
lea
shll
mov
xchg
xor
mov
fs
push
sub
dec
dec
sti
add
dec
xchg
mov
inc
xor
add
sub
mov
je
loope
sub
jmp
push
dec
xchg
pop
fadds
cli
imul
jbe
das
rcl
mov
mov
fwait
mov
jbe
movsl
xor
decb
jge
cld
shlb
and
push
int3
les
test
es
jbe
mov
call
and
outsb
inc
jmp
call
mov
mov
es
test
jl
jbe
fildl
ret
inc
xor
imul
sbb
daa
scas
pop
sub
stc
xchg
xlat
inc
pushf
pop
mov
xchg
xor
test
jmp
push
sarb
jns
cwtl
insb
xchg
push
sti
imul
in
push
gs
in
sub
inc
jbe
push
and
fmull
insl
mov
rcrl
xchg
cmp
xor
lock
inc
leave
dec
rolb
lahf
adc
leave
sub
mov
lock
push
repnz
aas
lret
aam
push
mov
cmp
cmp
ss
lds
jmp
push
dec
int
stc
sahf
and
cmpsb
jne
loope
nop
jo
frstor
inc
stos
cmpsl
dec
scas
and
mov
movsb
lcall
sbb
in
repz
sbb
ret
cmp
ljmp
dec
pop
xchg
pop
stc
xlat
pushf
pop
dec
out
dec
ret
jg
xor
filds
dec
lock
ficoms
clc
data16
mov
leave
pop
pop
dec
imul
adc
fisubl
adc
cltd
or
pop
ret
fistpll
lahf
cmp
push
leave
dec
in
xchg
aas
test
push
shlb
mov
icebp
xlat
dec
mov
cmp
mov
xor
orb
lgs
decb
rcr
add
push
scas
jl
adc
jne
int3
les
mov
pop
pop
mov
shrl
add
xchg
pop
sub
inc
lret
jmp
cmp
hlt
adc
lahf
pop
in
push
pop
mov
fcomp
mov
sbb
xor
mov
daa
and
enter
fmull
or
lret
dec
inc
xchg
jmp
in
lea
inc
popf
cs
jmp
int
jb
mov
pop
out
mov
ret
gs
dec
in
mov
pop
sar
jmp
aad
movsb
inc
bound
out
mov
in
addr16
or
cmp
xchg
xlat
adc
sub
lds
cmpsl
fs
sub
xchg
xor
cmpb
and
pop
std
sbb
test
xor
fldcw
int
jl
jae
movsb
adc
jbe
out
roll
push
pop
and
mov
stc
jne
add
inc
or
aaa
xchg
daa
dec
lds
lods
mov
xchg
leave
nop
vmread
xchg
lret
aaa
cmpsb
out
insb
mov
sub
jnp
add
mov
xchg
and
scas
inc
xchg
xchg
lea
jmp
outsb
jb
or
push
sub
shlb
jl
mov
cmp
pusha
sub
xrelease
mov
ficomps
aaa
dec
push
jae
mov
or
cmp
das
insb
in
int3
cmp
int
or
arpl
lods
cmp
iret
lahf
sbbb
fs
add
xchg
pushf
inc
outsl
xchg
xor
or
dec
sbb
inc
push
add
lcall
pop
imul
loope,pt
and
xor
sahf
sbb
shl
inc
sti
daa
inc
test
daa
mov
shl
daa
or
jg
sub
cli
and
pop
add
pop
not
stos
sub
pop
loopne
aad
sbb
enter
mov
stos
xchg
sbb
mov
cmp
sbb
ljmp
dec
lahf
cmp
loope
aaa
notb
mov
stos
push
outsl
movsl
mov
jle
cmp
les
lds
lock
mov
dec
xlat
sub
xor
mov
add
shll
outsl
cltd
sub
jne
out
or
dec
movsb
decb
mov
and
and
leave
icebp
mov
dec
xchg
xchg
ljmp
ja
sub
jmp
sub
ja
adc
addb
addr16
inc
xor
int
push
cld
and
pushf
loopne
fyl2xp1
mov
adc
jmp
sbbl
lods
add
mov
dec
test
les
mov
aam
cmp
and
les
mov
sub
xor
inc
fists
add
das
adc
xchg
jnp
push
int3
scas
scas
mov
mov
daa
pop
xchg
hlt
xor
push
pop
ja
lea
xchg
nop
jno
loopne
push
and
jp
aad
jbe
jns
push
outsb
mov
fdivs
outsb
filds
lcall
cmp
and
stos
std
out
dec
xor
imul
fcomps
shrl
jmp
scas
mov
lss
lcall
outsb
rcrl
in
pop
and
shlb
daa
or
mov
ss
cmpsl
adc
push
cltd
int
sub
xchg
stos
sub
cs
dec
pop
stc
or
mov
xchg
subl
in
sbb
xlat
in
dec
and
loopne
cld
aaa
pop
lea
jecxz
lcall
mov
les
sbb
adc
cwtl
mov
adc
sub
inc
inc
bound
jle
jmp
mov
mov
sahf
stos
mov
flds
test
cmp
push
inc
cmp
cmp
gs
adc
and
pop
jg
sbb
pop
cmp
lret
mov
repnz
mov
in
leave
lcall
cmp
lea
movsl
mov
fidivrs
insl
lret
jg
dec
imull
pop
inc
dec
fsubrl
mov
sbb
adc
addb
dec
rolb
sub
sbbb
jl
dec
negl
dec
or
mov
popf
cmp
and
and
movsl
imul
or
lock
pop
push
adc
or
ss
jmp
mov
sbb
dec
xor
adc
adc
push
scas
sti
adc
into
lock
rclb
popl
in
scas
in
jbe
pop
and
daa
pushf
sbb
pop
push
pop
xchg
sub
pop
xchg
shll
inc
push
mov
add
jge
mov
scas
mov
push
mov
inc
cltd
lock
or
adc
jo
jne
ss
pop
ret
sub
inc
adc
sub
add
stc
pop
fimull
jecxz
sbb
pop
mov
mov
jmp
stos
xchg
mov
shr
sbbl
push
imul
ja
dec
out
iret
adc
rcrl
add
clc
mov
jnp
jl
cli
repnz
arpl
adc
jle
ret
loope
xchg
add
icebp
popa
in
cmp
je
push
ret
dec
mov
cmpsb
fistl
in
inc
mov
adc
or
pop
xlat
mov
out
addb
push
pushf
lock
sbb
xor
xor
inc
mov
out
das
test
inc
push
mov
pop
adc
sbb
and
pop
movb
shrl
mov
fcomps
adc
in
mov
push
gs
sub
add
mov
pop
int
or
test
or
pop
lea
aam
stos
divl
rcrl
push
inc
stos
sbb
movsl
xchg
pop
sahf
loop
and
inc
data16
sbb
sahf
leave
es
mov
xor
sbb
push
out
in
push
xchg
stc
mov
and
jae
hlt
xchg
ljmp
pop
mov
stos
sub
xlat
add
ja
cmp
add
adc
sbb
popf
dec
rolb
cmp
aaa
cwtl
add
pusha
sbb
aad
mov
pushf
push
testb
mov
mov
dec
mov
js
ja
pop
xor
xor
xchg
push
pop
and
inc
sbb
ret
imul
ss
repnz
add
mov
dec
cwtl
ljmp
xlat
lods
xor
or
mov
ss
sub
xor
or
mov
add
lahf
adc
hlt
test
lods
sbb
dec
inc
and
andb
cltd
ljmp
pop
test
adc
dec
or
push
in
mov
imul
cmp
gs
push
popf
insb
ds
lea
pop
in
mov
outsb
aas
shlb
add
dec
xchg
iret
adc
mov
mov
daa
add
xchg
push
adc
pop
stos
jl
int3
out
pop
pushf
mov
jmp
test
adc
movsl
cmp
pushf
pop
pop
sbb
pop
out
lahf
js
add
sbb
jge
nop
insl
lock
cs
cmc
ret
push
repnz
jl
das
sti
out
icebp
add
mov
xchg
push
rclb
pop
stos
mov
pusha
or
shlb
lods
push
jl,pn
mov
push
or
fildll
stc
mov
mov
inc
sahf
push
lds
lods
int
jo
sub
adc
sub
jg
in
test
cs
call
adc
fadd
mov
sub
enter
mov
sub
mov
pop
xchg
adc
popf
and
lret
fxch
jae
stos
ja
cmp
mov
lock
add
mov
push
mov
push
cltd
addr16
or
and
rorl
pop
jmp
xchg
cmp
cmp
in
test
movsl
jge
mov
in
cmp
enter
xchg
movsb
mov
test
ljmp
cwtl
sub
jp
fsubl
jle
adc
in
adc
inc
sub
jmp
inc
dec
imul
psadbw
or
push
movsb
fdivr
add
pop
cs
and
push
into
pusha
negl
clc
imul
cmp
jmp
jne
adc
push
clc
cmpsl
adc
inc
cwtl
mov
lret
ret
inc
jo
pop
mov
mov
adc
repnz
rorl
mov
mov
push
mov
fmuls
scas
mov
loopne
xchg
ficoms
ljmp
push
adc
repz
out
fstps
push
pop
pop
jo
xchg
jns
dec
adc
aad
subl
cmc
sub
jle
jecxz
les
orl
or
jns
rorl
push
test
in
or
xchg
cwtl
xor
adc
adc
add
jle
xchg
jge
cmp
lahf
add
jge
outsl
pop
cmc
sub
cmpsl
repnz
push
and
mov
mov
repnz
xor
out
nop
sbb
and
sub
pop
shrb
adc
push
jbe
inc
xor
mov
add
push
lcall
adc
mov
das
push
lret
mov
xlat
push
and
cmp
repz
inc
ja
xchg
mov
and
icebp
adc
xchg
cmp
movsl
filds
int3
arpl
fdivr
fstps
push
and
jo
adc
push
leave
icebp
movsb
push
es
int
or
dec
out
inc
stos
adc
scas
popa
adc
add
scas
and
dec
mov
mov
fs
jecxz
es
mov
push
mov
inc
lods
stos
push
int3
adc
js
jg
icebp
or
test
xor
inc
pusha
setno
pop
sbb
inc
stc
adc
xlat
dec
stos
test
das
pop
sbb
aaa
or
fstps
loope
rcr
cwtl
scas
gs
cmc
mov
shl
je
pusha
call
loopne
es
mov
fildl
je
inc
ret
dec
aaa
xchg
jg
ffree
stos
cmp
xchg
aas
outsb
fsubrl
dec
or
or
and
xor
divl
cmp
jle
lea
xchg
data16
daa
push
xorl
adc
stos
stos
std
jns
inc
xchg
xor
lea
cmp
imul
ss
iret
xorb
movsb
xorb
sbb
loopne
cmp
xchg
outsl
call
rorl
icebp
inc
notl
pop
repz
inc
shlb
xor
in
test
insb
adc
test
sbbb
lods
cmp
fisttpll
mov
js
bsr
cmpl
rclb
out
sub
jg
sub
push
ljmp
sbb
cltd
cvtps2pi
int
movsb
mov
js
sahf
imul
xchg
lods
push
or
sbb
ss
mov
xchg
lock
pop
push
filds
xchg
push
push
dec
leave
adc
mov
xchg
mov
testl
daa
test
mov
aam
ret
out
and
adc
ficoms
iret
pop
xchg
fidivrl
repnz
sub
call
ja
cmp
pop
mov
test
stos
aaa
mov
add
jecxz
je
jmp
repz
in
dec
insl
lahf
into
sub
aad
sbb
ret
adc
mov
outsl
pop
adc
push
jno
fs
pop
xor
jecxz
into
outsl
faddl
rorb
cmpsb
jge
pop
push
mov
mov
sub
pop
lods
lahf
lea
push
mov
cmc
sti
fs
add
xor
vhaddpd
mov
push
inc
xor
push
jle
xor
movl
jo
xorb
pop
mov
out
inc
shll
adc
dec
cmpsl
cli
repz
lods
dec
jae
push
jno
xlat
adc
cli
dec
push
dec
icebp
aaa
in
xchg
imulb
pop
in
aaa
pop
jp
test
insl
or
or
or
inc
mov
test
pushf
adc
cwtl
push
out
jnp
out
sahf
lods
mov
outsl
cmpsl
shrl
mov
xchg
outsl
push
mov
cmp
stc
notl
je
popf
lods
cmc
pop
mov
mov
idiv
leave
mov
jecxz
xchg
loopne
jecxz
sbb
inc
mov
int3
cli
nop
mov
add
mov
mov
into
xchg
repnz
cltd
inc
je
std
push
leave
mov
into
inc
add
rcll
sub
adcb
pop
mov
mov
mov
cmp
in
xlat
and
mov
lcall
pop
inc
mov
cmpl
rcl
or
daa
adc
mov
jnp
nop
mov
pusha
dec
dec
movsl
dec
xchg
mov
mov
cld
or
pusha
mov
jp
pop
or
mov
pop
push
fsubs
das
mov
xor
cmp
loopne
adc
mov
add
inc
or
sbb
and
pop
or
pop
es
ss
jo
pop
mov
xchg
std
mov
lds
pop
sub
fisttpll
dec
shll
jl
or
fdiv
insb
sbb
mov
mov
mov
sub
sbb
inc
pop
pop
lret
ret
fstpt
rclb
cmp
je
and
or
sbb
xchg
loop
fs
dec
pop
jecxz
and
fcoms
dec
mov
jp
fwait
lcall
jae
mov
stos
outsb
xchg
out
cwtl
xchg
sbb
test
mov
loope
push
dec
add
popa
hlt
inc
sbb
mov
sbb
orb
loope
sbb
and
pop
ljmp
iret
rcr
jo
adc
mov
data16
aaa
jns
int
loop
cmp
sahf
test
stos
scas
mov
mov
push
mov
lahf
sti
ret
insl
in
sbb
test
xor
dec
jo
pop
push
adc
jmp
mov
mov
cld
or
ja
ss
inc
cli
adc
sbbb
sbb
mov
clc
push
or
inc
pop
xchg
ret
and
lret
das
imul
shrl
in
int3
adc
xchg
scas
js
cmpsl
notl
pop
movsb
cmc
adc
test
or
out
pop
mov
or
imul
in
in
pop
pop
pop
mov
mov
dec
mov
es
inc
pop
insb
ret
loope
add
hlt
aas
jne
adc
push
xlat
mov
fildl
pop
int3
cmpsl
jmp
pop
shlb
dec
cmp
into
mov
jae
sub
jbe
cmp
lret
jp
inc
fnstcw
xor
mov
dec
lds
jno
lock
cmpsb
jecxz
xlat
bound
sbb
mov
test
outsl
mov
leave
adc
shrb
clc
sub
gs
xchg
jno
clc
mov
xchg
mov
xchg
roll
sbb
adcl
jbe
pop
pop
enter
fwait
sti
testl
lret
lahf
enter
or
mov
add
jbe
adc
inc
sti
adcb
imull
xchg
filds
mov
shrl
add
inc
cwtl
pop
fidivrs
pop
mov
pop
mov
loope
into
xchg
push
and
insb
and
lods
std
push
mov
out
add
mov
std
fcmovnb
mov
in
hlt
mov
es
cltd
and
psadbw
in
xchg
fstps
jp
push
mov
inc
push
adc
pushf
adc
sub
push
sub
aad
cltd
dec
or
jno
xchg
shl
stos
pop
push
adc
scas
and
dec
shlb
sahf
jg
fdivrl
mov
jno
in
bound
clc
mov
dec
jo
pcmpeqw
mov
lret
scas
test
or
adcl
or
icebp
jns
dec
andl
mov
cmc
fisttpll
leave
push
jmp
push
mov
add
pop
enter
leave
lret
mov
test
dec
or
das
int3
les
mov
cmc
cmc
inc
jo
pop
ret
sub
out
push
lret
es
sbb
lds
mov
pop
popl
mov
idivl
in
jmp
pop
mov
roll
pop
inc
dec
add
adc
ds
xchg
sub
leave
insb
scas
xor
cmpsl
pop
div
stc
test
ljmp
imul
mov
xchg
aam
lret
sbb
push
mov
dec
jle
jmp
dec
xor
stos
add
sbb
mov
or
sti
xchg
jo
je
pop
cmp
vhsubps
pop
gs
filds
mov
sbb
xchg
push
cmp
pop
xchg
jge
mov
xor
xchg
and
push
fcompl
jge
and
aad
daa
sti
data16
mov
js
je
xor
jle
adc
add
ds
pop
cmp
movsb
int
jnp
notb
mov
addr16
push
gs
decb
push
xchg
mov
jmp
ror
xor
or
out
das
xchg
jo
dec
lret
push
ljmp
stc
clc
pop
iret
jecxz
adc
sahf
int
incl
inc
subl
imul
lcallw
and
aad
inc
bound
into
test
jecxz
add
jno
xlat
xor
pextrw
push
sub
mov
out
or
pop
pop
gs
jle
sub
mov
lret
add
lcall
sub
cmp
imul
xchg
bound
lcallw
inc
xor
sub
cltd
sub
les
test
push
sub
cli
mov
xor
cmc
push
sbb
ror
add
and
pop
imul
dec
ret
sbb
int
xchg
decb
mov
fdivrl
aaa
call
lret
xor
cmp
cltd
jecxz
mov
adc
subl
daa
out
or
or
or
adc
xchg
outsl
pop
add
sbb
inc
dec
int
dec
mov
or
cli
or
es
ljmp
bound
mull
mov
and
xchg
ret
or
mov
jnp
ljmp
pop
jl
sub
xchg
insb
xchg
fs
jmp
jno
xor
or
les
stos
sub
cld
lahf
imull
dec
in
mov
mov
fs
movsb
mov
es
xlat
mov
rcrb
xchg
call
inc
inc
pop
sub
dec
lods
lods
ss
jp
lcall
xchg
int
jo
insl
movsl
inc
and
dec
mov
je
lea
pop
mov
insb
push
mov
aas
push
or
loope
add
in
push
fmul
cmpl
pop
fs
aam
push
or
rcrl
subb
sub
xor
mov
sbb
outsl
sub
mov
sbb
pop
rcrb
inc
sbbl
cmp
cmp
addr16
dec
inc
lret
pop
push
ja
adc
add
mov
dec
ss
jecxz
push
adc
xchg
xlat
pusha
xlat
adc
loopne
mov
push
cmpsb
inc
aaa
push
jle
jo
lcall
sahf
add
adcb
arpl
jo
mov
sub
push
lods
in
fmull
mov
stos
inc
and
xchg
add
out
loop
or
gs
push
test
ljmp
insl
mov
pop
sbb
xor
and
mov
and
repz
hlt
push
inc
mov
xchg
aaa
sbb
or
hlt
rorb
lods
xchg
imul
or
outsb
and
lahf
pop
or
gs
pop
sbb
fsubrl
cmpsl
mov
sbb
mov
push
xchg
push
out
push
aam
leave
jnp
cmc
mov
xchg
sbb
or
shll
pop
add
lret
xchg
push
pusha
pusha
adc
ljmp
sbb
call
pop
or
lret
hlt
inc
out
fadd
popa
push
cmp
push
xor
in
data16
adc
shrd
jl
sahf
fdivrs
jns
pop
add
jmp
xchg
push
cltd
mov
in
adc
mov
imul
xor
sarl
push
mov
dec
inc
push
dec
sub
fldenv
jae
push
pop
jmp
add
cwtl
fadd
xlat
mov
cmc
adc
mov
xchg
jl
jecxz
std
cs
dec
mov
jbe
test
and
movsb
rolb
arpl
inc
pusha
sub
cmpsl
aaa
or
andb
hlt
mov
shlb
jmp
movsb
daa
shlb
push
mov
sahf
jne
jno
cmp
aaa
and
out
call
xlat
jno
cmc
loopne
xor
lret
push
sbb
mov
es
call
mov
push
fistpll
xchg
cli
xor
inc
adc
outsb
test
test
std
jnp
pop
dec
jg
jo
mov
imul
cld
mov
sbb
andb
mov
xchg
sbb
pop
enter
in
push
outsl
lahf
aad
out
rcrb
pop
mov
and
in
les
cwtl
andb
fidivs
cmpl
fwait
and
xchg
push
push
mov
outsb
mov
and
mov
cmc
test
and
add
xor
cmpsl
or
xor
jle
je
int3
in
mov
sbb
ret
cmp
out
mov
shlb
ljmp
lea
ret
sbb
lret
add
stc
dec
outsb
shrb
test
dec
cmp
test
mov
pushl
adc
jmp
cmc
aas
imulb
pusha
lods
inc
inc
pushf
popa
test
shr
shrb
push
pusha
in
mov
pop
jnp
mov
inc
rsqrtps
jb
mov
inc
cmp
insl
mov
lcall
jle
mov
decl
mov
sbb
addr16
pop
push
and
adc
jl
jbe
stos
pop
add
xor
or
sti
loop
xchg
pop
loopne
jl
js
jb
sbb
sarb
adc
insl
sub
das
in
and
roll
mov
pop
jp
inc
test
lahf
push
lahf
test
xchg
push
adc
das
and
or
fnstsw
testb
inc
adc
adc
lds
xor
mov
fdivrp
pop
sbb
xor
pop
xchg
add
shrb
mov
inc
filds
icebp
clc
aam
cmpsl
and
xlat
add
xchg
fidivrs
jg
push
inc
push
inc
cmp
and
add
in
fisttpl
pop
ds
pop
outsl
mov
pusha
loop
xorb
xor
jo
push
cmp
cmpsb
bound
mov
fnstenv
popl
int3
push
scas
and
or
add
jbe
dec
jne
xchg
rcl
sub
les
add
or
pop
mov
fdivr
mov
cmpl
xchg
cmp
xor
es
hlt
pop
std
sahf
dec
sub
in
sbb
xchg
test
out
and
int
or
jo
push
mov
push
sti
sub
mov
fs
jae
cmp
pop
mov
cmp
rcr
stc
cmp
imul
mov
rorl
repz
cmc
aas
out
int3
add
cmp
iret
enter
xchg
mov
mov
call
pop
js
cmp
das
xchg
mov
movsb
push
inc
inc
popf
scas
sarb
imul
fucomp
adc
rol
and
aad
loop
aas
inc
ljmp
shrl
xchg
and
cmpsb
sbb
jnp
adc
lahf
jbe
pushf
mov
loopne
es
mov
mov
xchg
subl
or
lock
cmp
inc
pusha
sbb
mov
cmp
mov
push
scas
lods
and
popf
cmp
fcoms
pop
ret
cmpb
cmc
jnp
insl
xchg
cmp
push
pop
inc
sub
mov
inc
cmp
jb
cld
insl
xchg
sahf
movsl
pusha
dec
mov
cmp
push
sti
clc
mov
arpl
imul
aaa
and
dec
fildll
inc
jl
or
xchg
stos
andb
into
fs
mov
mov
fwait
adc
shrb
push
shr
push
das
testb
inc
movsl
mov
mov
fs
xchg
fcompl
int
mov
inc
fwait
outsb
shr
sub
mov
ljmp
or
inc
xlat
xor
push
inc
push
out
mov
rcrl
inc
fs
add
ljmp
sahf
dec
cli
xor
xchg
adc
icebp
dec
mov
fisubrl
dec
jecxz
fcomps
mov
scas
repz
inc
shll
fxch
jno
push
int3
in
pushf
fcmovb
cmp
dec
and
imul
cwtl
mov
movsl
pop
pop
hlt
dec
xorb
pushf
sub
xchg
imul
jle
sub
mov
pushw
psubsw
xor
hlt
pop
ss
cmp
aas
xchg
push
jp
sbb
imul
inc
movaps
xchg
enter
icebp
lret
xchg
cmpsb
pop
cwtl
mov
bound
cmp
pusha
leave
insb
cmp
andl
dec
push
lods
fucomp
inc
cmp
loopne
dec
lret
jl
int3
and
mov
xor
xchg
jne
jp
cwtl
or
clc
les
mov
add
int3
les
vsqrtpd
push
stos
stos
dec
test
inc
outsl
pop
lods
cs
popa
into
imul
adc
repz
sbb
sub
dec
int3
sub
je
fisubl
adcb
mov
shll
mov
xor
mov
lods
jp
mov
mov
xchg
xchg
push
cld
fisubrl
mov
je
cli
inc
adc
cli
mov
cs
add
mov
add
inc
testb
repz
aaa
mov
inc
fidivs
pop
push
mov
aaa
std
cmp
lret
xchg
or
dec
xchg
pop
fisubrs
repnz
inc
push
inc
add
or
cltd
add
int3
jnp
insb
into
adc
cmp
lret
test
enter
push
mov
test
lods
cmp
or
clc
sbb
xor
sti
outsl
insb
mov
ret
test
ss
sbb
jp
dec
xchg
in
imul
sub
jge
cmp
adc
fmulp
bound
and
sar
cmp
jecxz
scas
sbb
movsl
and
pop
jb
cmpsl
inc
aad
or
cmp
adc
out
pop
dec
push
fmull
ss
or
mov
imul
pop
rcr
repnz
ja
lods
mov
aaa
dec
outsb
push
xor
out
jno
push
iret
test
clc
dec
andl
sub
mov
daa
lds
mov
inc
pcmpeqw
fisttpll
xor
push
dec
in
mov
dec
gs
sarl
dec
je
xchg
sub
and
inc
inc
jne
into
mov
jb
gs
loopne
icebp
mov
add
inc
call
ret
cmp
jmp
aaa
lea
dec
jns
xor
fwait
scas
hlt
loopne
out
pop
and
inc
jnp
lcall
jmp
jbe
insb
nop
jns
testb
cs
mov
pusha
add
mov
jnp
xchg
cmp
inc
outsb
xchg
lret
mov
inc
xchg
jge
call
fldcw
mov
fs
outsl
daa
mov
mov
cmpsb
adc
pop
in
or
cmp
insl
scas
adc
pop
sbb
lahf
lcall
sti
push
jge
nop
inc
dec
repz
or
rclb
inc
dec
xchg
mov
xor
enter
shrb
fsubrs
lock
sbb
outsb
gs
mov
frstor
inc
inc
mov
xor
sbb
int
and
jl
cltd
out
mov
mov
sub
jae
test
mov
cwtl
sub
jp
push
dec
out
xchg
ret
or
adc
clc
clc
cli
fadds
or
imul
nop
mov
adc
pop
outsl
pop
dec
cmpsl
stos
test
mov
stc
popf
dec
mov
aad
lret
fwait
arpl
and
std
xchg
jnp
push
out
rol
fadds
enter
pop
faddp
mov
inc
xchg
sub
adc
or
push
push
sbb
rol
mov
sbb
fwait
ss
stc
test
jp
lcall
out
daa
cwtl
arpl
inc
pushf
mov
mov
sarl
sbb
clc
or
cld
dec
xchg
and
imul
cmpsl
push
popf
cmp
dec
inc
push
test
jg
rcrb
lcall
jle
test
addr16
add
cli
idivb
mov
jecxz
in
rcll
in
jle
sbb
fnstsw
je
out
mov
jno
repnz
loope
aam
mov
mov
int3
cs
jg
xchg
sbb
sbb
fs
pop
insl
inc
jl
js
dec
in
sub
mov
xor
cli
mov
sbb
mov
call
push
pop
dec
pop
rclb
mov
test
ret
jb
inc
cmc
fwait
pusha
insb
jle
mov
testb
cmpsb
jb
fcmovbe
dec
inc
xchg
lahf
icebp
cmp
icebp
xor
insl
nop
in
sub
popf
hlt
push
in
test
lock
or
imul
adc
push
lret
push
andl
xlat
mov
push
lods
push
sub
cmpsl
sbbb
pop
dec
sbb
inc
es
repz
pop
nop
xor
out
test
in
xor
lcall
or
call
mov
or
mov
test
sbb
cmc
inc
sub
outsl
add
pop
ret
test
mov
cmpsb
imul
push
push
call
and
icebp
push
dec
sub
daa
ss
pop
mov
dec
sbb
sub
push
lds
add
hlt
fisttps
cwtl
mov
and
and
nop
add
push
push
lcall
cmp
in
pop
daa
jbe
mov
mov
mov
and
lea
nop
dec
push
orb
dec
ljmp
dec
mov
je
aaa
rorl
test
repnz
stos
hlt
jns
xor
shll
xchg
push
dec
mov
xchg
push
js
inc
andb
rcrl
add
lds
addr16
push
in
insb
sbb
lcall
stos
jns
pusha
pop
es
jmp
xor
andl
data16
mov
in
adc
push
sbb
jle
in
adc
cmpsb
insl
ljmp
shll
filds
ja
addb
mov
jne
inc
cmp
xlat
mov
shr
sub
pusha
mov
lahf
out
sbb
or
adc
inc
xchg
jl
push
repnz
arpl
and
pop
push
bound
and
mov
sub
ds
bound
or
mov
mov
dec
clc
mov
push
scas
data16
sbb
push
and
stc
mov
aaa
lcall
pcmpgtb
jmp
popa
inc
cmc
pop
int3
xlat
movsl
das
lds
sbb
inc
jp
mov
scas
insl
sub
adc
or
pop
std
or
sbb
xchg
mov
jne
js
lods
int3
mov
adc
ja
xchg
rol
subl
sbbl
mov
in
decl
stos
push
cld
seta
ja
inc
lret
or
loopne
push
call
pushf
rcr
cmp
out
add
mov
mov
jge
or
stos
mov
mov
add
sbb
xchg
mov
xchg
hlt
xor
in
sub
sbb
xor
and
and
pop
jns
lcall
cmpsb
sti
into
mov
and
aaa
shrb
ja
mov
jle
scas
insl
cmp
pusha
and
mov
or
stos
xor
pop
in
inc
inc
mov
mov
push
roll
push
fildl
mov
gs
xor
pop
pop
mov
movsl
out
adc
gs
inc
sub
xlat
hlt
cli
lock
add
xchg
or
insl
imul
stc
inc
sbb
dec
push
and
sbb
popa
add
xor
sbb
xchg
rorl
mov
push
pusha
icebp
in
mov
sub
mull
mov
push
jb
push
hlt
movsb
dec
mov
lods
div
push
lret
movlps
sub
mov
jp
outsl
and
mov
push
iret
xchg
jae
add
inc
daa
adc
das
xchg
or
popa
xor
fdivrs
push
pop
pop
push
jecxz
push
outsl
inc
and
adc
push
adc
cli
dec
insl
bound
nop
ljmp
dec
mov
add
out
xchg
arpl
in
je
mov
sub
mov
enter
fcmovu
inc
or
int
pop
jno
std
cmp
push
leave
add
in
ljmp
fnstenv
xor
cmp
aam
pusha
dec
sub
ja
fldcw
pop
aas
mov
mov
push
jnp
in
sbb
mov
fldenv
xchg
bound
popf
add
rcr
push
loop
jb
xchg
cmc
add
outsl
imul
aaa
mov
ja
adc
into
dec
popf
loopne
push
mov
loopne
sahf
push
gs
adc
pop
outsb
xchg
enter
icebp
push
jmp
mov
lret
add
stos
add
mov
call
outsl
decl
dec
xor
mov
mov
pop
sub
xchg
test
scas
xor
hlt
lahf
gs
add
pop
das
inc
push
ljmp
or
sbb
shl
shlb
ja
sbb
mov
pop
fsub
shlb
pop
lcall
jbe
adc
mov
in
sbb
sbb
movsb
sahf
push
jge
mov
loop
and
outsl
push
in
pop
xchg
hlt
fistl
dec
dec
in
pop
notb
mov
fwait
idivl
lods
mov
add
stos
mov
and
jg
mov
dec
jmp
les
pop
sbb
mov
mov
pop
add
mov
xchg
push
sub
int3
or
fcoms
cmpsb
xchg
loope
jbe
and
in
or
mov
cmpsb
jp
jl
sub
out
mov
in
pop
cmp
fisttps
jecxz
dec
dec
dec
cmc
jl
mov
int
sub
cmp
mov
xchg
pop
loop
test
jmp
inc
arpl
mov
cmp
xchg
mov
mov
sub
stc
jecxz
testb
cltd
pop
dec
jl
mov
mov
mov
pop
mov
inc
sub
xor
inc
jo
push
sbb
dec
mov
jnp
sti
or
add
leave
cmp
lods
sahf
xor
sbb
jae
or
cmpsl
je
scas
pop
xor
sti
jo
mov
inc
pop
jo
testb
mov
out
jmp
cwtl
and
aaa
pop
fnstsw
adcb
js
or
testb
loop
add
shlb
ret
jl
push
xor
repz
in
leave
mov
test
mov
and
mov
xchg
fldenv
int3
mov
mov
inc
add
movsl
jecxz
stos
int3
jne
adc
push
sbb
popa
dec
orl
daa
inc
mov
xor
test
mov
orl
cmp
std
testl
loopne
out
pop
sub
and
and
pop
outsl
call
cli
orb
pop
std
pop
icebp
dec
mov
inc
xchg
cmp
leave
push
cwtl
incl
cmp
mov
ficoml
mov
jne
or
pop
adc
or
lds
ljmp
or
shlb
xchg
push
jbe
iret
into
mov
mov
jmp
or
cmp
add
in
repz
ret
addr16
ss
test
push
cmpsb
clc
or
push
hlt
movsb
sar
sbb
movsb
imul
inc
aas
setb
and
popf
or
push
vpunpcklbw
stc
nop
fadds
clc
push
cmp
sub
fmulp
pop
cmp
dec
insl
lret
and
aas
pop
jmp
add
out
mov
ret
scas
mov
jp
cmp
or
movsl
push
mov
jg
adc
fldl
push
fldl
mov
mov
seta
mov
xor
add
out
into
mov
cli
xor
mov
scas
or
xor
inc
es
lods
push
xor
mov
xchg
std
push
mov
inc
call
aas
xchg
not
adc
inc
push
imul
xor
addb
imul
xor
inc
sbb
mov
mov
fisubl
test
in
add
pop
add
xor
adc
pop
mov
lret
repnz
mov
mov
cltd
movsb
jg
popf
or
shl
and
sub
mov
fdivrl
inc
push
lock
lock
sbb
imul
add
rcrb
cmc
ret
sahf
lods
and
mov
std
out
negb
jle
inc
orb
cli
mov
cmc
mov
jae
cld
fcmovbe
movsl
shrl
mov
sbb
cmc
outsb
stos
int3
imul
mov
rcl
fiaddl
sub
pop
push
inc
adc
sarl
rcrb
js
pop
sub
jbe
adc
jb
test
int
cmp
and
sbb
add
add
popl
nop
lret
stos
stos
addr16
pop
ret
and
stos
out
xchg
cld
sub
mov
xor
jb
mov
mov
sub
jb
sahf
lahf
inc
out
mov
ret
pop
mov
add
into
cltd
lea
int
jmp
loopne
movl
cmc
outsb
adc
movsl
pop
or
lea
xchg
sub
pop
jb
test
push
ret
inc
repz
and
rcrl
lock
fcompl
scas
sahf
sbbb
and
xor
jnp
xchg
aad
dec
jno
add
mov
push
push
cmp
jne
xor
push
adc
fwait
dec
in
js
loope
fnop
into
jmp
mov
xor
in
lds
ds
insl
mov
repz
enter
cmpsl
add
test
xor
mov
sub
or
test
test
popf
push
sarl
jp
in
pop
pop
das
nop
outsb
and
or
loop
lods
mov
sub
jb
inc
je
out
xchg
data16
into
stos
mov
aam
sarl
cmp
out
xlat
fbstp
jns
addw
mov
pop
xor
push
cli
jle
lret
push
mov
pop
mov
and
push
xor
cmp
in
xor
sete
xchg
adc
or
rol
and
les
scas
sub
sub
leave
scas
aam
add
ret
sbbb
cmp
aas
xlat
shl
das
shlb
mov
cmp
scas
mov
adc
mov
jle
shlb
fdivl
and
out
mov
xchg
lahf
jno
and
mov
aaa
mov
mov
and
mov
fsubrs
mov
int
jne
adc
mov
sub
xchg
insb
mov
xchg
jnp
add
push
addr16
push
xor
fucomi
pop
xor
and
lods
iret
addr16
test
cli
std
lahf
push
jne
hlt
push
xchg
cmpsl
icebp
xchg
mov
fisttpll
test
das
aam
call
jb
les
stos
fsubl
xrelease
mov
mov
nop
loopne
jl
sahf
cli
mov
push
mov
dec
movsl
jmp
adc
cmp
mov
cmpsl
clc
arpl
repnz
fsubp
xor
mov
les
mov
stc
pop
mov
pop
arpl
and
js
into
add
push
negb
in
push
and
fildll
mov
shrl
jns
rcl
stos
call
cmpsl
jae
xchg
fdivr
add
flds
jno
jl
push
leave
mov
bound
inc
and
lret
adc
aam
out
mov
jle
xchg
mov
hlt
notl
ficoml
fdivrs
lock
pop
cmpsb
or
push
cmp
ljmp
cmpsl
das
imul
push
jno
shrb
rol
stc
cli
dec
test
fmul
sbb
push
rcrb
aad
test
xchg
mov
inc
test
clc
aaa
sub
and
nop
xchg
sub
push
dec
adc
dec
xorl
icebp
roll
sbb
fs
pop
insb
xchg
stos
rolb
fs
leave
je
push
lock
incb
stc
scas
pushf
pop
lret
and
out
fcmovu
jle
rorl
cmp
test
add
jmp
and
mov
pop
test
pop
jo
aas
shll
imul
mov
stos
es
pop
out
int3
popf
or
daa
mov
xchg
aaa
mov
mov
xchg
mov
dec
lock
mov
xor
and
cmp
clc
loopne
sub
and
jne
lea
sbb
and
adc
mov
mov
sub
cld
imul
cs
insl
je
andl
in
clc
repnz
pusha
push
movsb
and
add
xchg
mov
inc
push
jl
dec
and
push
lret
cwtl
pop
lret
xchg
fwait
fwait
ret
les
adcl
dec
mov
xchg
cmp
ss
push
mov
sub
insl
jbe
push
test
jl
inc
or
jbe
lret
dec
mov
cld
lahf
out
andb
sbb
lock
mov
pop
dec
stos
add
sbb
sbb
sbb
jo
push
in
or
pusha
out
leave
xchg
cltd
push
fsubs
fistpll
mov
sbbb
imul
xlat
sub
mov
xchg
test
pop
push
push
lahf
dec
fdiv
leave
popa
mov
dec
pop
repz
bound
cwtl
mov
pop
sbb
lahf
cmc
mov
jnp
cmpsb
push
es
push
push
xchg
int3
pop
inc
stos
jle
mov
jg
mov
ret
ss
out
sub
addl
jns
idiv
bound
insb
mov
pop
and
fadd
cmpsb
loopne
xchg
cmp
cmp
mov
fdivrl
hlt
ds
lcall
aam
push
scas
arpl
das
imul
jp
outsl
les
std
push
fcomip
std
xor
sub
and
sub
lods
imul
add
push
pusha
fdivs
lock
inc
scas
das
test
out
into
test
fsub
stc
mov
or
mov
push
add
adc
pop
mov
pop
pop
mov
sbb
mov
lods
in
call
jle
clc
out
mov
adc
lods
mov
sbb
rclb
inc
cli
imul
mov
test
pop
push
arpl
repnz
sub
xchg
test
xor
xor
xchg
inc
gs
test
int
fiadds
inc
push
sub
pushl
shrb
xor
inc
adc
roll
rolb
adc
jno
les
mov
dec
pop
xor
insb
dec
mov
pop
fiadds
jno
daa
inc
dec
jbe
popf
or
inc
push
outsb
fbstp
sbb
jl
or
mov
jo
sahf
jecxz
pop
mov
mov
xchg
jae
icebp
int
xchg
adc
pusha
pop
dec
imul
xchg
cli
mov
daa
test
cmpsb
mov
pop
adc
cmp
fnstsw
xor
ja
xchg
xchg
push
cmpsb
mov
push
adc
mov
shll
imul
dec
icebp
je
repz
push
adc
inc
mov
je
test
mov
add
sbb
xor
enter
cmp
fldenv
dec
in
addr16
aas
pusha
flds
in
mov
xorl
and
jmp
mov
mov
add
jle
xchg
push
fstpt
cmp
in
in
add
shlb
lret
mov
push
push
sub
push
xchg
ja
jne
sbb
adc
pop
cmpsb
pop
loopne
sbb
into
and
xchg
icebp
shlb
js
test
adc
push
jo
jmp
cmovge
mov
cwtl
fists
jb
xchg
push
sbb
loopne
rorl
inc
call
pop
addl
and
fadds
and
push
insb
repnz
test
or
out
cmp
and
xchg
loopne
pop
push
in
mov
pop
sbb
loop
sti
mov
fdivrl
xlat
and
sbb
mov
cwtl
and
jecxz
lock
lret
push
leave
or
mov
scas
inc
adcb
in
mov
mov
pop
jle
add
xor
aad
and
jmp
jne
jns
imul
cmpsb
adc
ljmp
mov
imul
mov
add
aaa
cmpsb
imul
xchg
jg
jnp
test
lock
shrb
into
pushf
lcall
ljmp
movsl
rorl
adc
xor
pop
fmul
mov
lods
nop
jo
and
push
adc
pusha
sahf
push
movsb
xchg
jae
enter
mov
pushf
out
dec
shrb
sbb
inc
xor
call
sub
push
xor
mov
and
es
jmp
shlb
dec
push
mov
add
stc
dec
sbb
xchg
pushf
sub
insb
test
or
punpckldq
jmp
add
rcll
mov
inc
test
sbb
xor
inc
dec
mov
jae
test
sbb
cld
out
xchg
pop
std
aam
jnp
les
testb
sahf
lret
adc
outsb
cmp
ss
repnz
add
push
inc
adc
inc
std
push
push
xor
clc
inc
xor
or
ja
gs
aas
stc
out
pop
ret
cmpsb
fstpl
lret
mov
imul
xor
add
push
jl
cltd
sarl
fldcw
call
adc
pop
clc
loopne
xchg
and
aaa
cmp
stos
outsb
sahf
pop
js
inc
icebp
xchg
sub
mov
push
sub
sbb
push
addb
mov
mov
hlt
sub
fbstp
das
mov
and
fldcw
rol
nop
xor
xchg
sarb
nop
push
push
loop
stc
inc
clc
cmpl
xchg
or
frstor
push
je
pop
jecxz
pop
lret
add
fildl
lret
js
fistps
adc
aas
mov
loopne
test
jmp
fildl
xorb
inc
ljmp
xchg
push
inc
dec
xchg
jae
push
add
pop
push
xchg
pop
push
cwtl
jnp
add
ret
test
sub
stos
out
inc
adc
fisttpll
push
orl
pop
gs
push
mov
pop
popa
loop
int3
sti
in
outsb
xor
pop
sbb
stos
inc
pop
stos
dec
imul
jae
push
add
or
test
xchg
rcll
xlat
or
test
xchg
in
xor
js
or
adc
aas
cwtl
xchg
movsl
xchg
adc
push
sarl
ret
lods
loop
push
test
daa
les
xchg
push
mov
jecxz
or
pop
cmp
xor
nop
mov
jp
dec
dec
mov
test
dec
dec
nop
out
fs
mov
mov
in
fcomps
jl
jmp
jmp
cmpsl
xchg
add
movl
mov
dec
lret
mov
popa
fiaddl
in
xor
subl
pop
ja
stc
mov
pop
bound
dec
jmp
cmp
mov
push
jo
negb
sbb
aaa
push
xor
push
rclb
xchg
int
mov
lcall
mov
adc
les
add
clc
pushf
push
lcall
repz
fwait
test
mov
lods
cmp
jl
fcoml
mov
xor
xor
nop
das
or
xchg
stc
push
inc
es
mov
xchg
add
mov
dec
dec
mov
insl
insb
add
mov
andl
push
inc
pop
es
lcall
add
adc
add
repnz
xor
add
stos
mov
add
xchg
test
insb
cmpsb
jne
fsubl
bound
in
xchg
jmp
stc
shr
push
insl
push
mov
xor
jns
lock
push
and
arpl
lods
adc
daa
push
scas
push
scas
cmpsl
ja
popf
inc
jmp
fwait
hlt
mov
dec
sbb
push
push
int
mov
mov
in
mov
and
les
xor
sub
and
in
push
lea
bswap
xor
dec
cmp
inc
jo
call
aam
stos
cli
repnz
jnp
sbb
mov
cmp
aad
std
test
and
ds
and
add
mov
dec
lret
push
pusha
mov
dec
lods
xchg
push
test
rclb
dec
adc
addl
test
clc
cmp
sub
mov
stos
mov
das
out
outsb
and
ja
mov
out
aam
cmpsb
int
movsl
xchg
addb
pop
pop
inc
or
imul
xchg
pop
sub
cmpsb
imul
and
mov
mov
loop
aad
hlt
lock
pop
ss
pop
jle
jnp
xchg
jle
dec
inc
mov
xchg
int
lahf
movsl
test
adc
sbb
cmpsl
les
xchg
cmp
lock
inc
mov
add
call
aaa
adc
add
adc
pop
push
mov
mov
inc
push
lock
mov
out
pop
sub
or
adc
dec
push
adc
cli
scas
push
mov
adc
mov
test
dec
push
or
ja
mov
lods
jnp
add
inc
xchg
mov
daa
out
sbb
in
or
and
sbb
sbb
and
enter
dec
cmp
push
push
push
push
std
and
push
mov
cwtl
cmpsb
xchg
out
cwtl
repnz
cmp
out
int3
or
push
sub
imul
adc
rcrl
push
gs
ds
mov
sbb
call
stc
xor
insb
cmp
or
ss
xorl
bound
jo
pop
mov
pop
mov
cmpsl
adc
add
adc
in
inc
cmp
scas
stos
shrb
bound
pop
xor
mov
cmpsb
lret
xchg
jmp
es
sub
push
int3
push
mov
xchg
push
xor
jb
cmp
pop
pop
ret
xor
hlt
test
dec
add
and
jg,pn
xchg
cmp
pop
inc
sub
out
lcall
push
xor
fs
jmp
sbbl
add
mov
inc
push
sub
cmp
jl
mov
jge
jnp
pushf
mov
mov
jo
test
mov
lds
mov
movswl
adc
adc
add
mov
cmpsl
mov
add
or
cmpsb
jecxz,pt
cmp
subb
cs
jg
pop
stc
icebp
inc
dec
adc
popf
ds
cmpsb
pop
sbb
insb
sub
stos
ret
mov
sub
mov
fsin
cld
dec
jbe
aad
cmpsb
sub
test
testb
jl
cwtl
movsl
jp
dec
mov
mov
testl
lcall
mov
mov
and
stos
lods
ja
xor
xchg
imul
nop
pop
lret
call
xchg
add
inc
rcrl
mov
iret
es
leave
adc
pop
ret
pop
push
fidivl
jp
and
movsb
lret
ret
gs
in
scas
mov
mov
cmpsb
mov
xchg
xor
dec
pop
movaps
aaa
pop
sub
fmuls
mov
scas
sub
cmp
fisttpl
mov
and
cltd
dec
scas
arpl
lods
mov
mov
push
pushf
push
insl
dec
jp
jns
and
gs
sbb
mov
jle
lods
es
lret
insb
data16
xchg
mov
addr16
dec
xor
dec
xor
xchg
insb
add
or
data16
push
cmp
xchg
xchg
jle
out
test
aas
xchg
adc
ljmp
push
sub
sbbl
sbb
call
push
imul
and
xor
adc
cmc
xor
scas
movsl
inc
ficoms
lds
clc
in
cmp
and
add
test
inc
lret
in
cmp
xor
inc
jo
cltd
nop
pop
sub
pop
pop
pop
jl
std
faddl
pop
jb,pn
lods
cmp
pop
call
mov
pusha
sbb
ja
sub
aad
inc
jge
roll
gs
mov
sub
shlb
lock
mov
pop
sub
lret
stos
fildll
jg
lods
push
repnz
imul
sbb
cpuid
dec
push
cli
sub
outsl
icebp
push
push
std
push
jno
out
jmp
push
enter
mov
cmpsl
push
ret
cmp
push
enter
clc
icebp
pop
int
sub
fisubs
scas
dec
xor
sbb
test
in
into
pusha
js
lcall
mov
mov
jmp
and
fisttps
cmp
sbbl
sbbb
inc
dec
pusha
dec
push
xchg
pop
or
in
inc
lock
fiaddl
aaa
fs
jbe
mov
adc
cltd
daa
and
test
dec
and
push
cmp
pop
neg
cmc
xchg
fidivs
mov
popf
movsb
cwtl
push
mov
mov
cmp
fidivs
add
loope
mov
pop
repz
mov
mov
clc
pushf
push
mov
inc
xorb
push
push
outsl
lods
xor
xchg
nop
sub
or
mov
ds
loop
ss
pop
in
or
dec
std
jo
subl
adc
aas
hlt
test
mov
fs
sbb
divb
pop
fildl
dec
bound
or
mov
and
mov
call
inc
in
add
imul
mov
enter
test
jns
mul
test
aam
xchg
add
dec
jmp
sbb
data16
cltd
dec
push
orb
out
push
dec
loop
loope
jns
sub
lods
out
rorl
ljmp
xchg
pusha
dec
jecxz
call
jns
inc
jo
xlat
movsb
sbb
dec
fld
mov
mov
insl
add
jecxz
loop
mov
test
movsl
pop
fsts
insl
cmp
stc
pop
movups
dec
dec
and
shl
mov
cmp
and
loope
push
or
das
and
add
mov
add
mov
lods
cli
jae
push
push
push
cs
addr16
or
xor
sub
rolb
cmp
adc
lods
pop
inc
xor
fwait
and
sbb
bound
jecxz
jl
out
sbb
jp
divl
inc
mov
cwtl
js
sbb
pop
dec
jo
in
aaa
add
inc
call
icebp
mov
mov
mov
dec
adcl
mov
movsb
lods
out
cmp
insb
push
add
fmull
jg
rcll
jno
push
dec
insl
scas
push
dec
sbb
bound
cli
in
movsl
aam
xchg
sbb
mov
mov
sub
sbb
mov
pusha
mov
xor
add
int3
nop
in
dec
jp
loop,pn
icebp
mov
mov
int
stos
dec
pop
dec
ret
sub
sti
inc
mov
fdivrl
jne
dec
hlt
lock
sbb
cmp
sbb
fs
dec
inc
cmc
jnp
inc
sub
sub
mov
inc
ja
xchg
es
out
pop
shlb
lea
jmp
mov
je
add
mov
and
test
jb
jp
ret
lds
aam
adc
popa
stos
cwtl
sub
ret
les
bound
push
push
inc
movsl
icebp
popf
push
or
pop
cmc
fildll
cld
fyl2x
gs
mov
pop
lds
data16
lcall
sbb
das
pusha
into
and
cmp
or
jl
pushf
cld
inc
pushf
sub
mov
cld
mov
sub
push
dec
lods
mov
sahf
orb
fdivrs
mov
sbb
cmp
lods
push
fdivrs
cmpsb
in
cli
cmp
repz
insl
xchg
mov
pop
std
cli
lods
and
rcrl
aas
jnp
xor
xchg
lret
pushf
loop
jb
das
daa
movsl
xchg
ds
add
dec
lret
xor
push
xor
cmpsl
data16
jecxz
jns
aad
mov
xor
enter
arpl
pusha
fidivrs
mov
xchg
xchg
fcoml
cmp
inc
push
lods
lock
push
xchg
loop
jb
sub
aad
cmp
push
imul
jl
fcomp
add
fcoml
fnstenv
pushf
or
sbb
aaa
pop
adc
test
mov
pushf
sbb
scas
push
lds
push
or
loopne
es
or
mov
testb
loope
pushf
mov
pop
stc
mov
xor
jne
fmul
cwtl
sub
and
cwtl
mov
sub
push
std
push
cmc
mov
xor
negl
cli
cmp
bound
push
shlb
cmp
fiadds
in
push
fwait
sbb
shrb
or
stos
xor
mov
dec
loopne
push
mov
ret
xchg
lock
and
sub
bound
pop
loope
sub
inc
sti
mov
add
repnz
es
mov
fmulp
pushf
popf
xor
test
jmp
push
inc
xchg
jns
jg
cmp
in
roll
mov
ret
sbb
lds
jbe
or
mov
mov
cmp
ret
mov
xor
jbe
je
cmpb
and
setb
cwtl
sbb
and
pop
rorl
je
lock
mov
fbld
inc
add
in
and
cld
clc
mov
adc
mov
jge
imul
jbe
dec
repnz
repnz
add
dec
cwtl
fldcw
jb
dec
xor
mov
and
dec
cwtl
out
cwtl
int3
mov
pushf
cs
sub
ss
pop
pushf
inc
sbb
sub
xchg
xchg
push
lea
repnz
test
rcll
xchg
arpl
mov
in
cli
test
sub
inc
movsb
nop
push
pop
sub
sub
xchg
pop
mov
or
sub
loop
in
notl
movsb
cmp
jnp
adcb
or
out
iret
pusha
mov
or
aaa
aad
adc
sub
leave
jne
rcrb
scas
clc
movsb
inc
shrb
mov
pop
movsl
mov
outsl
pushf
add
ret
stos
orl
jecxz
cmp
stc
call
icebp
or
sub
adc
sbb
cmp
adc
subb
out
pop
pop
mov
xchg
mov
and
ret
inc
stc
fisubl
leave
mov
cmp
call
xchg
jle
pop
shl
cli
xlat
xor
or
insl
out
sub
sti
cmc
out
loopne
cmpb
test
add
icebp
test
outsl
lret
mov
cmp
push
add
faddl
pop
mov
aam
lds
xor
xchg
mov
scas
stos
add
jae
iret
aas
jle
bound
fcomps
pop
push
loop
jp
or
mov
pusha
adc
sahf
repz
dec
xlat
outsb
ljmp
lock
js
es
int3
hlt
mov
inc
jnp
outsl
gs
aam
test
subb
xchg
inc
push
add
sub
ss
xchg
pop
loop
dec
es
out
jg
test
shlb
and
inc
sub
pop
orl
and
adc
out
mov
and
stc
sub
inc
sub
gs
ds
shlb
inc
xchg
mov
adc
push
ret
push
sbb
push
lods
fnstcw
out
mov
testl
jmp
les
aad
mulb
mov
or
std
iret
sub
in
sub
neg
fsub
int
mov
movsl
jl
jmp
movsb
aad
sti
add
pushf
js
cmp
insb
or
push
push
loop
xor
and
arpl
jecxz
jnp
mov
jns
aaa
cld
inc
repz
cmp
insb
cltd
fsubs
stos
pushf
je
xor
or
dec
cmp
add
mulb
or
xor
jne
push
mov
sahf
fwait
and
mov
int3
movsl
mov
and
xchg
adc
stos
js
push
out
cwtl
into
xor
lds
lahf
push
jp
cmp
pop
dec
insb
test
cmp
add
ja
cmp
daa
inc
jl
cld
incl
push
xchg
call
bnd
ret
xchg
add
ds
in
cmp
inc
xor
movsl
fwait
lods
adc
notb
scas
call
jns
inc
outsb
ss
rcrb
push
roll
sbb
imul
adc
test
in
push
das
out
mov
and
cltd
mov
sarl
in
mov
sbb
out
xor
sub
and
sub
cmp
dec
cs
jae
pusha
push
jno
xor
fidivl
leave
in
daa
sbb
inc
int
xchg
jnp
pop
aas
xchg
jl
imull
pop
stos
popa
mov
mov
mov
mov
mov
lcall
mov
sub
push
insl
pop
mov
and
pop
negl
cmp
mov
inc
xchg
loop
rorl
lds
sub
aas
iret
and
adc
loop
sbb
sub
jle
and
and
adc
sub
mov
jno
jge
sti
ja
hlt
mov
mov
inc
ds
jl
pop
jno
fwait
mov
jns
je,pn
mov
push
cmp
test
adc
pop
jns
lret
or
ljmp
pop
popf
sbb
jecxz
aad
aam
and
xor
push
or
cltd
mov
push
cwtl
jmp
jp
sub
fwait
loope
and
in
sbb
push
jecxz
lar
inc
out
dec
pop
rolb
dec
addr16
mov
data16
pop
fisttpl
data16
rcrb
xor
daa
adc
inc
mov
jp
jb
ljmp
jne
cmpl
pop
popa
push
lret
mov
ja
mov
mov
inc
push
lds
dec
subb
sub
push
clc
xor
clc
mov
std
xor
dec
mov
cmp
loopne
push
push
cmp
push
js
and
imul
or
pmulhw
sbb
pop
jnp
cmpsb
adcl
fdivrs
sub
sbb
add
movsl
aaa
fucomp
cltd
mov
adc
popa
ljmp
dec
and
loope
jo
jb
push
add
in
mov
test
aas
sahf
lret
faddl
cs
hlt
pusha
lahf
push
dec
loope
inc
imul
xchg
pop
jno
mov
nop
mov
mov
cmc
cli
xchg
ss
lcall
sbbb
xchg
cli
or
sti
imul
xchg
shlb
mov
adc
ret
pop
outsb
dec
shlb
dec
jecxz
gs
es
out
addr16
test
cmp
jnp
or
dec
push
adc
mov
ret
ds
popf
call
sti
lea
or
adc
cs
mov
sbb
sarl
leave
in
or
jne
js
hlt
mov
cmp
aas
roll
lea
jb
dec
test
mov
loope
pop
rcll
xor
iret
adc
add
pop
push
mov
ret
add
or
or
sbb
cmc
mov
pop
mov
and
inc
cmp
stos
aas
cmp
xlat
sub
jns
rorb
cmp
sarb
in
mov
loop
imul
dec
mov
sbb
mov
or
movsl
lahf
jne
in
ljmp
sub
mov
lds
xor
into
add
or
inc
adc
in
adc
sub
add
inc
test
out
cwtl
in
cli
or
lea
lods
stos
popf
or
inc
aas
push
mov
lret
insl
imul
int3
push
mov
hlt
stos
push
push
int3
adc
fnsave
adc
cmpsb
fs
lahf
scas
imul
push
les
or
pop
mov
movsb
cmp
dec
mov
sbb
inc
mov
xchg
lea
mov
pop
xor
test
movsl
sub
ljmp
ljmp
fnstsw
and
insl
cmpsb
jno
cltd
imul
insl
xor
test
jbe
fisttps
daa
xchg
stc
xchg
test
out
in
mov
and
add
jns
lret
icebp
mov
arpl
sar
aam
or
jb
xchg
xlat
sbb
test
adc
add
cmp
and
stos
cltd
adc
pusha
mov
mov
cld
add
in
sbb
jl
lcall
pop
data16
je
jg
ret
pop
rcrl
notb
mov
push
aam
xchg
push
sbb
call
mull
gs
das
mov
xchg
out
test
es
sub
jp
adc
addl
push
aad
sub
sbb
loope
or
rcll
mov
cmp
push
xor
mov
out
sbb
call
mov
mov
push
in
es
or
pop
fmull
mov
or
mov
ljmp
or
push
xor
popf
xchg
aam
push
pusha
adc
in
fistpll
add
repz
loope
aam
ja
fistl
jmp
cmp
cmp
movsl
and
push
cltd
pop
out
mov
popa
test
mov
int
or
movsl
sti
cld
cmp
je
loop
mov
add
pop
fcomip
lret
xchg
pop
pop
cltd
repz
test
fiaddl
mov
stc
cmp
and
fisubrl
adc
cmpsb
scas
les
cmpsb
cmovg
fisubl
sbb
lahf
or
fstpl
jl
std
in
sub
inc
icebp
push
and
stos
data16
call
sbb
int
into
pop
inc
mov
ljmp
add
xor
sub
stos
decb
xchg
fidivl
cmp
repz
and
or
mov
push
add
jmp
inc
lahf
pop
mulb
xor
stos
in
inc
push
mov
leave
dec
ja
or
and
add
push
lret
in
insl
jns
xor
mov
mull
lahf
jbe
inc
mov
adc
lods
out
negb
adc
adc
popf
and
mov
dec
sub
cli
dec
sub
and
pop
stos
push
popf
aad
xchg
loop
jg
inc
ss
push
movzwl
test
imul
jg
xchg
test
mov
repnz
sub
adc
cwtl
cld
or
roll
cs
push
loopne
test
jmp
ss
mov
jecxz
mov
xor
pushf
mov
repnz
pop
test
cmp
xchg
xchg
xor
lds
jle
xchg
xor
mov
mov
xlat
movsb
imul
popf
aas
adc
in
sub
mov
out
iret
add
or
ja
mov
test
dec
mov
add
sahf
mov
aas
push
out
shll
cmp
inc
sub
gs
aaa
addr16
or
fisubs
jle
addr16
sbb
sbbb
mov
cltd
push
dec
add
ficoml
mov
xchg
pop
push
sarl
movsb
sbb
cs
push
int
xchg
push
mov
add
movsl
xchg
imul
pop
xor
jb
or
loopne
and
inc
dec
jns
pop
add
fwait
ret
mov
and
aam
in
push
xchg
xor
shrl
leave
pop
xor
cmp
loopne
stc
or
out
mov
cltd
scas
or
mov
xor
sarb
pop
pop
pop
xchg
in
clc
dec
scas
sbb
or
push
pushl
test
add
cwtl
pop
jne
mov
push
inc
mov
jl
pusha
inc
insb
xchg
lds
es
popf
test
fisubrs
aaa
stos
dec
cmp
mov
ja
std
repz
cli
arpl
loop
sub
outsl
dec
pop
into
xchg
int3
jmp
sbb
popa
sub
mov
insl
repnz
mov
arpl
icebp
xlat
pop
stc
pushf
add
popf
cmc
fistl
popa
mov
inc
icebp
sbb
or
xchg
pop
addb
pop
jnp
aam
jg
aas
cmc
sbb
mov
stos
mov
sahf
jbe
mov
dec
out
sbb
fsts
stc
aaa
int3
ret
and
into
pop
xor
stc
ljmp
dec
sbb
jo
dec
call
adc
je
inc
cmp
mov
rolb
inc
jmp
cmp
cmc
xchg
xor
dec
ds
lods
je
insl
pop
jnp
adc
sub
or
lea
ret
and
sbb
mov
mov
add
push
adc
std
xchg
in
adc
cmp
cld
dec
jno
scas
pop
repz
iret
jbe
sub
mov
loop
push
add
cmpl
dec
sub
jp
mov
movsl
test
lret
sub
xor
gs
repz
and
adc
sbb
lret
lret
loope
das
mov
cli
popa
add
ja
jnp
pop
jbe
out
lret
divb
sbb
loope
mov
pop
faddp
jb
pop
repz
inc
mov
xor
ffreep
and
test
ja
push
add
fdivl
pop
subl
pop
cmp
lret
or
push
fnstsw
cmc
sbb
add
pextrw
cmpsl
mov
movsl
xlat
loop
test
jae
shl
mov
movsl
sbb
mov
pop
cmpsl
mov
mov
and
cli
sub
cmp
xlat
sbb
dec
mov
stos
out
test
test
xchg
jl
adc
mov
sbbb
sbb
adc
and
add
xor
fwait
popa
mov
push
pop
leave
mov
mov
sbb
xor
in
xchg
aaa
nop
nop
cltd
add
jg
adc
or
mov
lcall
add
mov
jecxz
sbb
xor
xor
data16
cwtl
xchg
out
out
pop
ja
mov
fsubrs
data16
pop
lret
les
dec
ds
outsb
mov
inc
pop
sub
in
pop
dec
jl
pop
jle
jae
push
mov
jle
fs
mov
mov
push
lret
xchg
ficoml
bound
dec
and
jns
add
shld
clc
dec
lds
dec
jmp
pop
or
arpl
jmp
ficoms
popf
push
pop
adc
mov
jg
lcall
loope
sub
pop
imul
or
dec
daa
dec
fistl
sbb
scas
mov
test
mov
mov
iret
sub
movsb
mov
out
xchg
imul
sub
inc
push
mov
cmp
adc
leave
das
mov
stos
or
add
mov
sbb
or
or
je
icebp
fstps
stos
mov
push
or
inc
jmp
cmp
xchg
mov
scas
rolb
lret
push
in
hlt
out
rcr
cmp
cltd
pop
cld
fdivrs
sbb
nop
ror
in
jb
mov
imul
in
lret
stc
jl
clc
mov
sbb
scas
js
adc
je
mov
fimull
rorl
hlt
fiadds
mov
sar
sbb
sub
int3
stc
push
nop
inc
decl
and
fs
negl
xor
inc
call
jge
xchg
ret
and
dec
pop
fs
fsubrl
xlat
pop
adc
xchg
adc
mov
roll
add
adc
out
ja
lcall
popf
das
in
xchg
shlb
mov
out
jg
test
mov
clc
loopne
add
push
shl
mov
push
jb
xchg
xchg
cli
repz
pop
xchg
sbb
cmp
adcb
mov
out
or
subl
bound
test
aam
and
sub
mov
inc
fcomip
pop
xchg
add
jne
fisttpl
or
jle
mov
mov
pop
lret
mov
or
lretw
sub
mov
mov
xchg
ret
dec
shll
fwait
dec
loope
rorl
pop
outsl
xchg
sbb
mov
imul
mov
jb
lret
sub
jmp
push
jb
inc
ljmp
sub
fld
sbb
ds
sti
jecxz
add
imul
test
sti
sbb
add
adc
aas
stc
pop
into
shll
popf
mov
cmpsb
loop
pop
outsb
xchg
cltd
mov
call
fcomps
and
cmp
cli
in
push
jae
and
xchg
popf
nop
cld
jmp
nop
call
adc
aas
scas
fisubs
imul
pushl
int
outsb
mov
push
mov
je
fadds
push
imul
aas
jg
stos
cli
jo
push
shll
sub
mov
sub
sbb
mov
push
aaa
stos
xor
lds
jl
popa
jg
lcall
pusha
inc
xor
cltd
lcall
xchg
push
mov
aam
das
jecxz
rol
icebp
mov
add
jbe
and
icebp
jmp
jb
pop
cwtl
mov
mov
mov
adc
push
add
mov
sub
mov
or
test
sub
jnp
out
jp,pn
mov
shlb
sub
push
sub
inc
adc
push
adc
xor
loope
or
sub
dec
cvttps2pi
out
inc
fisubrs
cs
arpl
repnz
scas
rolb
std
popf
mov
pop
push
sahf
scas
xchg
inc
into
xor
filds
leave
ret
movsl
in
sbbb
dec
and
loope
loopne
and
sahf
xor
aas
dec
insl
mov
aas
cwtl
fs
daa
adc
clc
mov
shl
jg
loope
test
lods
jns
sti
sub
push
sbb
fstps
andl
popa
repz
and
scas
sbbl
add
cmc
jae
aaa
clc
or
inc
repz
fs
repz
lods
leave
xchg
inc
fistps
sahf
mov
push
xchg
mov
std
sbb
js
stc
xor
mov
test
xor
js
mov
out
sbb
xlat
jae
and
sbb
push
sbb
dec
imul
aaa
insl
cmp
rcrw
imul
cld
push
pop
aas
decb
enter
push
int3
jbe
ljmp
inc
mov
clc
fcmovnu
stos
or
adc
xor
adc
mov
mov
xchg
jecxz
mov
jl
aaa
sub
lods
add
stos
lea
pushf
imul
ds
lret
jge
inc
jecxz
shlb
or
sar
mov
pop
insl
mov
icebp
push
cld
sub
vmwrite
cmp
js
pop
mov
cs
and
mov
std
mov
lods
rolb
mov
rorl
mov
mov
and
push
aas
inc
push
add
mov
fucomip
xor
stc
sub
fisubrs
dec
test
in
push
or
add
and
out
and
into
or
cmpsb
xor
outsl
jmp
insl
xor
xor
lret
jecxz
pop
push
xor
lcall
xchg
mov
sbb
and
cmp
and
rcrb
sahf
and
lret
inc
mov
inc
push
and
lahf
fdivrs
jb
inc
popa
xlat
mov
dec
adc
sbb
data16
fdivs
push
mov
gs
push
fstps
imul
mov
gs
cwtl
inc
ljmp
orl
int3
dec
repnz
adc
xor
mov
or
addr16
xor
jmp
adc
push
sub
movsl
and
imul
pop
aaa
mov
cmc
add
js
shr
jb
xchg
test
loop
flds
std
xchg
mov
dec
data16
or
add
ror
mov
and
dec
mov
loopne
lahf
ss
popa
mov
jmp
inc
call
repnz
jge
jnp
jmp
jg
pop
push
jl
push
cmpsl
xchg
xchg
nop
xor
arpl
push
cld
adc
call
inc
es
mov
and
shll
xchg
es
or
outsb
test
adcl
je
add
pop
mov
popl
xchg
xor
sahf
int
and
mov
dec
imul
dec
xorb
in
andb
dec
sub
aas
fmul
mov
jb
add
dec
push
add
mov
fildll
mov
lods
pusha
push
mov
lods
xchg
dec
mov
cld
dec
and
loopne
mov
and
xchg
push
sahf
rep
jns
pop
and
jp
test
imul
fmull
clc
push
fiaddl
xor
sti
fcoml
mov
pop
push
dec
pusha
pop
push
mov
fs
pop
dec
das
out
mov
repnz
or
std
inc
xor
mov
xor
jp
es
xor
mov
faddl
data16
cmpsl
dec
in
adcb
pop
fs
cs
lret
dec
xor
mov
jae
jne
sbb
mov
adc
clc
loope
out
in
adc
aad
pop
sbb
xchg
rorl
in
mov
imul
popl
or
sbb
cmc
mov
stc
mov
and
fwait
andb
stos
scas
or
pop
out
dec
test
sbb
inc
add
dec
popf
ret
push
nop
pop
repz
inc
mov
dec
mov
dec
call
and
pop
adc
inc
and
test
mov
mov
imul
jg
daa
ret
nop
fdivrl
xchg
dec
in
jmp
inc
mov
mov
adcl
dec
sbb
lods
xchg
jno
dec
sbb
push
dec
lret
cmpsb
aaa
xor
aas
stos
je
test
aaa
push
ret
mov
push
mov
jmp
stos
iret
jo
shll
imul
imul
cmp
insl
jecxz
mov
call
cs
mov
insl
xor
inc
jno
push
fmulp
into
mov
pcmpeqd
push
in
in
add
adc
test
adc
xchg
rorb
xchg
jnp
adc
xchg
jno
push
iret
enter
test
out
mov
cmp
xor
mov
jae
mov
xor
test
xchg
pop
test
adc
pop
dec
dec
dec
sub
push
out
pop
push
jl
jecxz
outsb
mov
mov
inc
pushf
pushf
adc
hlt
push
data16
mov
dec
adc
fidivrl
sbbb
pop
dec
cmpsl
ja
cs
scas
add
jb
bound
lret
push
div
adc
or
dec
and
inc
rorl
arpl
add
aaa
int3
pop
ds
or
cld
ret
xchg
cmp
out
pop
xchg
int
add
or
mov
pusha
pop
cmp
out
pop
adc
rol
popf
push
adc
jbe
push
in
fdivl
shrb
imul
pop
js
mov
popa
dec
pop
xchg
test
pop
cmc
sub
es
int3
fs
mov
test
mov
mov
push
jb
jo
xchg
in
add
add
or
imul
shll
and
mov
shll
popl
mov
fdivrp
mov
cmp
gs
xor
sub
add
mov
insl
pop
ja
cs
out
jnp
cmc
xchg
fs
inc
mov
xchg
sbbb
sti
sbb
popf
movsb
xchg
jp
into
lods
and
xchg
mov
cmp
mov
sub
sbb
sub
inc
mov
stc
pop
cmp
pop
sbb
xchg
push
cmp
cmc
negb
pop
mov
divw
vpmullw
scas
into
mov
cmp
sbb
or
aam
rolb
test
jmp
filds
mov
jmp
arpl
jmp
push
lds
push
shll
jns
cwtl
pop
inc
inc
fnstenv
inc
sub
stos
cmp
push
iret
or
inc
ficoms
or
test
sub
insl
enter
push
std
sti
ret
pop
add
loope
xchg
into
xchg
rol
pop
xor
rcr
dec
add
push
mov
and
jge
dec
lret
add
lods
sbb
int
mov
scas
frstor
dec
xchg
sub
bound
ja
in
sub
test
ljmp
movsl
push
popf
or
xchg
scas
cmp
xchg
and
xor
xchg
mov
xchg
or
cmp
icebp
sbb
pop
jmp
rorl
sub
sbb
clc
inc
mov
jnp
push
aas
dec
enter
mov
ret
cwtl
mov
dec
jnp
jg
arpl
and
inc
xchg
lret
xchg
xchg
xor
inc
imul
add
push
cli
jp
rcll
lea
cmpsb
push
push
jg
sbb
and
jae
out
jp
pop
mov
shll
test
pop
lods
jnp
pop
mov
push
in
inc
in
mov
fcmovne
add
fcomps
xchg
test
xchg
xchg
sbbl
xchg
xchg
fadd
insl
inc
add
dec
fdivrl
and
xchg
jo
cmp
push
loop
test
arpl
pop
ds
inc
je
dec
divb
in
sbb
mov
push
jbe
scas
inc
in
add
fcompl
stos
push
sub
les
sub
out
adc
into
push
mov
nop
sbb
xchg
dec
js
mov
mov
mov
push
ficoms
pop
xchg
jecxz
pusha
cmp
pop
or
mov
dec
out
adc
xchg
mov
.byte
sbb
xor
cltd
cltd
mov
and
sete
in
mov
fldenv
fnstsw
mov
lret
stc
jge
cmp
xor
add
cwtl
movsb
fld
rorl
clc
adc
jnp
cwtl
jb
pop
notl
icebp
lahf
sbb
stos
arpl
cmp
push
adc
out
adc
sti
clc
or
jecxz
outsb
ficoml
hlt
cmp
inc
or
inc
mov
adc
mov
dec
sub
nop
inc
push
icebp
leave
movsl
scas
dec
push
repz
push
mov
cmp
mov
imul
ja
std
adc
test
pop
inc
insb
in
scas
imul
fwait
push
aam
mov
jns
lcall
pop
movsb
jp
repnz
dec
popf
outsb
mov
push
sub
sub
sub
xchg
jbe
ds
leave
loop
mov
fcomip
and
push
sbb
xchg
clc
incb
xor
sub
insl
enter
in
std
daa
lock
fldt
mov
jl
outsl
cmp
mov
inc
nop
dec
cmp
cmpsl
sahf
pusha
aam
inc
lret
jge
dec
mov
push
or
shrb
jne
test
ljmp
xchg
jl
pop
in
pop
mov
or
lahf
cmp
sbb
sbb
pop
xchg
sbb
mov
aam
insb
or
xor
loopne
cmp
xchg
ljmp
pop
loopne
xor
and
mov
das
jmp
cmp
emms
xor
movl
inc
push
push
sub
adc
movsl
out
out
jae
inc
mov
lock
adc
dec
add
ljmp
and
notb
ret
rcr
push
inc
daa
mov
xchg
jl
jb
pop
mov
mov
daa
repnz
mov
inc
nop
pop
lret
add
cmp
sbb
push
lahf
sbb
gs
in
dec
mov
jb
negb
inc
pop
mov
subb
cmp
insb
xchg
mov
add
hlt
insb
jns
push
and
je
inc
add
adc
leave
xchg
mov
adc
out
stc
shlb
add
xor
or
in
pop
adcl
in
ret
mov
sub
jle
jecxz
cmpb
pop
pop
cltd
mov
push
movsb
addr16
call
cmp
adc
ret
dec
fnsave
mov
scas
nop
sub
mov
xchg
jbe
inc
and
or
xor
repnz
negb
je
pop
into
push
mov
fs
push
xor
pop
loopne
pop
adc
dec
adc
scas
jge
pop
xchg
jne
test
in
sub
push
stos
mov
sbbb
cld
lds
pop
out
mov
pop
xor
shlb
ds
jge
pusha
mov
push
pusha
jne
xchg
ds
mov
js
stos
sbb
sub
mov
sbb
sub
out
xorb
add
out
xor
das
sbb
sbb
and
out
rcll
fstl
sarb
mov
add
imul
sbb
xor
inc
sub
pushf
inc
arpl
psubd
push
into
push
mov
loope
mov
das
jg
insl
popf
pop
mov
test
jle
movsl
stos
jge
and
test
in
stos
or
or
jge
and
xor
mov
mov
out
push
dec
pop
xor
in
lsl
test
fs
test
test
sub
dec
flds
gs
aaa
jecxz
xchg
mul
cmp
in
xchg
fsubp
dec
and
lds
and
mov
cmc
jl
push
repnz
jecxz
inc
mulb
pop
adc
je
rorb
inc
jnp
jle
sbb
std
mov
test
mov
mov
out
popa
cmp
mov
lea
jle
pop
daa
sbb
sahf
out
add
in
cs
push
aas
mov
std
lock
cmpsb
sub
mov
loope
rorb
jne
je
mov
sub
xor
cmpl
test
inc
jecxz
add
sbb
xorl
and
mov
jmp
and
out
add
cmc
push
repz
and
jo
or
sub
addb
popa
inc
xchg
mov
and
inc
out
push
adc
push
mov
push
cmpsl
sbb
aaa
negl
add
jae
lods
sub
push
dec
xor
outsl
pop
cli
pop
cmpsb
add
jne
inc
movsl
daa
stos
jmp
outsl
inc
and
mov
hlt
jmp
mov
lods
bound
or
out
and
and
shll
in
stos
out
leave
inc
mov
in
mov
pop
xor
mov
int3
movsb
push
xchg
loope
and
inc
sub
or
adc
dec
and
in
aas
mov
js
rcl
adc
scas
and
ret
push
shl
pop
jae
fistpl
mov
test
xchg
icebp
adcb
cmpsb
adc
mov
add
in
lret
es
inc
repz
or
out
pop
push
arpl
inc
fdivr
mov
sbb
test
xor
mov
xchg
aas
dec
les
fistps
push
jmp
ret
aad
ret
pop
mov
xchg
sub
mov
add
rcr
pop
mov
and
sahf
dec
lret
push
pop
sbb
nop
in
pop
inc
mov
jnp
xchg
aas
repnz
imul
mov
cmpsl
dec
adc
inc
push
mov
decl
inc
jae
pop
enter
mov
scas
pop
cmp
pop
mov
fstpt
push
add
fbstp
outsl
push
and
cmpb
cmpsb
les
imull
push
pop
jne
and
xor
dec
hlt
aad
imulb
xchg
pop
xchg
out
aad
push
sti
outsb
xor
insl
leave
push
dec
enter
sbb
in
sbb
pop
or
xchg
jmp
data16
dec
popf
hlt
js
stc
test
cmp
push
lock
mov
outsb
and
fildll
andb
push
xacquire
fisubl
pop
pop
idiv
stos
jmp
cmp
and
outsl
out
xor
inc
jbe
iret
xchg
jecxz
push
lods
pop
jne
in
pop
add
push
nop
nop
sar
mov
xor
gs
and
push
push
mov
xchg
and
pop
int3
inc
ficoml
jp
pop
push
cmp
pop
xchg
lea
fldcw
jno
scas
cld
xchg
lret
mov
add
jnp
in
mov
in
sub
jmp
cmp
stos
dec
cmp
cmpb
iret
out
sarl
mov
movsl
jae
imul
xor
daa
xor
fsubrl
outsb
iret
mov
pop
xchg
sbb
cmpb
adc
sti
stos
add
shrb
movsl
sbb
ret
mov
xorb
jg
test
dec
jno
inc
test
mov
mov
and
dec
imul
lods
cmp
les
sbb
lahf
jno
or
push
jmp
jle
xchg
cwtl
out
loope
in
xor
inc
dec
das
mov
inc
aaa
adc
inc
add
push
leave
sbb
mov
push
pop
movsl
stos
pop
push
adc
inc
loope
aaa
fiadds
pop
ret
popa
push
sbb
stos
pop
aad
pop
nop
daa
lods
sbb
adc
loop
popl
cmp
test
and
jg
xor
jmp
cmp
add
xchg
sub
aaa
pop
mov
push
sub
jne
sub
mov
mov
mov
leave
into
imul
cli
sub
loop
repz
sti
cmp
ret
mov
enter
out
call
xchg
push
mov
pop
imul
popf
lods
jmp
bound
mov
outsb
ss
pushf
xchg
mov
xchg
jg
dec
sarl
push
push
nop
xorl
imul
jle
inc
or
test
pop
jnp
sbb
add
adc
in
xor
and
cmpsw
xchg
mov
insl
pop
push
pop
dec
shrl
fnstcw
js
mov
mov
add
cld
stc
sub
outsb
mov
ds
cs
out
rol
stos
cs
jl
cmp
and
repnz
fidivl
dec
js
mov
fistpll
test
out
pop
fs
test
jge
cmp
aaa
mov
inc
js
lds
push
ljmp
mov
push
jne
fwait
adcb
sbb
insb
pop
in
imulb
inc
xor
out
into
gs
adc
jge
sub
mov
call
mov
lds
push
in
dec
pop
xor
inc
and
es
imul
loop
or
cmp
adc
adc
xchg
movsl
loope
sub
ja
mov
cmp
negb
jnp
xchg
outsb
mov
xchg
lds
sbb
push
aas
mov
test
add
push
and
sbb
aas
int
in
fnstenv
mov
test
jg
mov
cltd
dec
dec
ljmp
xlat
ljmp
pop
pop
sub
and
cli
adc
outsb
add
rcll
inc
aaa
scas
dec
jne
je
hlt
pusha
or
dec
or
xchg
jmp
pop
push
dec
subl
sub
ds
jle
test
sti
sub
mov
loopne
sbb
mov
test
stos
mov
jae
movsb
shrb
jge
jge
ja
lods
xchg
cmp
pop
push
lcall
fs
cmc
mov
sbb
andb
bnd
ds
mov
je
aad
pop
sti
sti
jno
xor
xchg
mov
mov
push
mov
push
inc
cld
mov
mov
ficoms
popa
jge
cmc
mov
or
sbb
mov
and
dec
negl
dec
sub
stc
mov
lea
jecxz
xchg
push
sarl
sub
lahf
cmc
mov
push
ljmp
enter
andl
aad
filds
cmpsl
push
dec
or
mov
xorb
rol
or
cmpsl
xchg
lods
stc
in
aas
fwait
lahf
dec
sub
sub
dec
inc
inc
mov
mov
daa
add
pop
and
jmp
loop
nop
jmp
xor
mov
jnp
dec
lret
cmpsb
out
jecxz
fwait
lea
cs
repz
push
out
push
iret
lea
xchg
decb
icebp
lcall
mov
add
mov
inc
mov
leave
sub
mov
inc
dec
inc
into
repz
enter
or
jno
sbb
stos
shl
inc
rorb
xor
pop
orb
xchg
dec
push
fimuls
in
fistpl
aas
sbb
je
add
cmp
xchg
out
mov
ljmp
data16
iret
test
mov
cli
mov
push
decl
popa
sub
movsl
jae
imul
aaa
mov
add
insb
mov
test
loopne
jo
jns
rcr
stc
xchg
or
xchg
xchg
lahf
mov
lds
push
sbb
aaa
sub
dec
push
xor
nop
mov
fucomip
push
or
pop
mov
sbb
loope
dec
mov
std
pushw
or
leave
xchg
jb
es
mov
repz
scas
es
scas
addr16
push
pop
add
ds
sahf
cmp
sub
mov
xor
aas
aas
jnp
nop
je
mov
cmp
pop
push
movb
or
xchg
scas
imul
xor
sbb
arpl
jecxz
jnp
push
push
iret
ds
pop
sbb
movsl
scas
mov
addr16
popl
pop
pop
fwait
sbb
and
insl
bound
inc
dec
addr16
fadd
loopne
test
inc
mov
jae
stos
pop
sub
int3
dec
popa
fidivs
jb
adc
sub
cmp
inc
xchg
adcl
sbbb
cmp
icebp
aas
sbb
mov
int
mov
xor
push
insb
adc
pop
mov
cmp
cmpsb
mov
mov
pop
or
cltd
dec
outsb
std
fmuls
xor
cmp
syscall
xor
leave
in
pop
shrl
xchg
cmp
mov
push
mov
outsb
push
xchg
in
jp
cmp
jo
stc
js
insl
in
addr16
xor
clc
push
jecxz
inc
mov
xchg
in
daa
inc
push
add
jnp
pop
decb
mov
aaa
sub
jmp
rorb
paddw
loope
lcall
cmpsl
js
movb
mov
mov
sub
push
jge
fimuls
add
arpl
push
arpl
fsubrs
in
cmpsb
aas
mov
push
sbb
adc
pop
outsb
out
cwtl
fs
cmc
pop
pop
jmp
add
jb
sbb
pop
int3
into
rep
push
pop
sar
pop
enter
popa
push
mov
cmovne
cmpsl
push
jg
stc
js
retw
xor
test
ficoms
mov
aad
dec
add
cmp
jge
sbb
xchg
cmp
repnz
mov
push
mov
cwtl
mov
pop
xchg
es
cmp
fs
shrb
into
test
jmp
imul
xor
lcall
dec
clc
inc
push
jmp
out
or
loop
leave
inc
ret
inc
das
push
ret
jp
jl
loopne
jge
xor
rolb
xchg
sbb
pop
mov
mov
add
lahf
imul
push
popa
jno
in
pop
inc
dec
mov
orl
pushf
jb
jne,pt
scas
mov
out
ljmp
sbb
cmp
enter
sbb
arpl
call
cmp
mov
jae
ret
dec
pop
outsl
je
loope
mov
jecxz
sbb
shrl
adc
js
jmp
mov
repz
test
mov
pop
sbb
add
bound
jecxz
insb
cmp
push
mov
sbb
cmp
mov
adc
ja
fdivl
mov
mov
xchg
xor
push
push
jno
mov
scas
fdivrs
int3
fwait
iret
xchg
xor
psubsw
mov
xchg
push
out
mov
sbb
cmp
mul
adc
loop
fiaddl
ja
add
daa
xor
aaa
aas
mov
scas
hlt
stos
aas
insb
popa
and
push
inc
gs
push
out
pop
jae
inc
cld
mov
aad
dec
sub
xchg
xchg
add
ret
mov
jmp
jmp
es
mov
fisubrl
mov
mov
mov
mov
cmpsl
imul
test
jg
pusha
ja,pt
test
pop
xor
sti
test
push
jle
pusha
incb
cmp
xor
fistps
scas
xor
mov
mov
loop
mov
fistpl
fcmovb
inc
sbb
cmp
push
adc
add
jo
mov
shl
in
xchg
int
in
addr16
cmp
jno
cmc
jb
push
pop
int
mov
adc
loope
mov
in
es
sar
cmpsb
dec
mov
pusha
mulb
aad
mov
inc
loop
or
and
cs
dec
push
in
imul
or
fldl
out
jo
pop
aaa
fldcw
aaa
call
mov
add
out
pop
aam
xlat
mov
mov
pop
mov
les
repnz
xor
loop
addr16
mov
pop
jp
mov
pusha
cmp
das
dec
xchg
mov
or
outsl
loope
cmp
pop
orb
hlt
bound
jl
jle
in
adc
mov
sbb
pop
leave
popf
mov
setnp
inc
cmp
pop
sub
and
outsb
not
dec
xchg
dec
dec
stos
sarb
es
adc
jne
push
cmp
mov
and
or
aam
orb
into
pop
pop
iret
cmp
add
test
movaps
aam
sub
sub
lds
pop
xor
int3
push
cmc
push
inc
xor
pusha
movsb
leave
dec
std
inc
mul
mov
in
mov
cld
mov
or
jae
into
lret
call
fadds
or
popa
xor
repnz
mov
adc
out
xorl
in
pop
cmpsl
stos
push
insb
filds
xor
mov
mov
push
shl
inc
xor
aad
sub
add
dec
mov
movsb
les
cld
lahf
push
repz
lahf
pop
mov
fildll
rorb
insl
call
jno
sar
add
add
ret
subl
adc
push
ss
cld
mov
in
mov
mov
and
dec
push
adc
mov
and
push
xor
xor
imul
or
mov
mov
push
push
mov
mov
and
std
and
add
jge
jle
push
or
adc
mul
cmp
das
daa
outsl
gs
int
lcall
test
leave
mov
jb
jno
mov
adc
mov
clc
in
sbb
aaa
test
push
adc
add
and
cmpsb
lret
add
xchg
xchg
xor
cmc
fdivrs
sub
fcom
punpckhdq
das
push
and
xchg
add
loope
mov
sbb
test
test
popf
cmc
add
push
std
add
dec
mov
pop
aas
mov
outsb
xchg
into
cmp
shlb
jbe
into
xchg
dec
jle
push
mov
mov
inc
aas
cmc
jl
into
mov
fidivs
popf
xchg
insb
sbbb
int
ret
test
push
and
ss
dec
inc
push
pushf
dec
and
lock
or
pop
mov
push
stos
je
adcl
call
cmp
sub
scas
inc
shrl
jecxz
enter
sub
cmp
in
mov
addr16
insb
pusha
imull
loop,pn
pop
rcrl
ss
test
push
jb
mov
js
xchg
sbb
mov
lods
xchg
lock
jg
push
nop
rcll
add
mov
cs
test
pusha
sub
mov
out
fsubrs
sub
dec
lods
movsl
in
push
imul
mov
dec
sub
mov
sbb
js
adc
lret
mov
mov
fwait
xchg
and
mov
pop
or
sub
and
sbb
test
pop
mov
xchg
sti
and
in
clc
push
aad
pop
mov
dec
test
or
xor
dec
jmp
add
test
and
sub
mov
jnp
inc
xchg
mov
sti
pop
fistpll
rolb
dec
jo
mov
ljmp
sub
das
loop
std
dec
mov
xchg
std
add
cltd
out
out
push
in
scas
push
jae
sahf
cmp
stc
push
in
cld
cmp
pop
mov
shlb
ljmp
imul
sbb
mov
hlt
movsb
inc
inc
mov
pop
int
push
and
lods
xorps
jbe
into
call
shr
dec
mov
in
fcmove
adc
or
int
arpl
std
jge
xor
lods
mov
aas
call
push
fcomi
or
mov
push
sbbl
pusha
nop
sub
lods
xchg
push
dec
ds
lods
cmp
sarl
ret
shl
imull
dec
std
xlat
test
call
sbb
adc
adc
and
cld
test
lret
and
cmpsb
lds
rorl
std
addr16
stos
icebp
je
loopne
and
test
mov
mov
push
test
xchg
add
push
test
outsl
add
jecxz
dec
cli
movsb
xor
arpl
adc
mov
bound
dec
rorb
xchg
adc
shrl
and
pop
jg
daa
ds
cmp
adc
sub
xchg
stc
xchg
mov
jg
repz
imul
pop
movsb
add
mov
cmpsb
mov
lret
mov
sbb
adc
sbb
js
imul
cmp
in
mov
and
scas
loope
and
mov
lahf
outsb
fdivr
lret
addr16
inc
mov
mov
adc
cmp
test
rcr
or
and
sub
scas
movsl
push
bound
outsl
xor
scas
sbbl
jecxz
outsb
in
and
stos
jle
iret
movsb
sub
js
inc
pop
xchg
aam
clc
xchg
xchg
jp
pusha
and
insl
sbb
out
sub
rcll
xchg
inc
out
ja
cltd
mov
fnsave
inc
and
xor
xchg
mov
cmpsb
js
cs
mov
xor
into
cmp
sti
repnz
xlat
xchg
jo
insl
dec
shrb
ret
sub
lea
outsb
add
jge
cli
jnp
push
jno
push
movsl
fidivrs
arpl
int3
or
mov
enter
mov
imul
jnp
dec
add
inc
jno
outsl
mov
cltd
aad
xchg
jae
mov
or
mov
bound
out
cmp
daa
inc
sbb
jbe
push
push
cmp
ffreep
add
cmc
test
es
pop
mov
imul
mov
fidivrs
movsl
sbb
and
cmp
adc
outsb
outsl
mov
lods
xor
in
enter
jns
orb
ror
in
movsl
fwait
pop
dec
inc
fldenv
das
popa
sub
adc
sti
xchg
cmp
nop
sub
cli
cs
add
pop
cmpsb
div
mov
rcll
mov
xor
push
les
out
jnp
rcl
mov
cwtl
mov
sbb
sub
mov
jbe
punpckhbw
into
xor
xchg
movsb
jecxz
mov
push
test
cmp
test
in
sub
dec
jne
std
cmp
shll
mov
rcll
push
mov
test
insb
mov
data16
ljmp
inc
cmp
xchg
push
push
inc
cmp
popf
cmpsb
mov
add
sub
cmc
push
sbb
insb
or
mov
fcoms
inc
or
fnstenv
xor
mov
sbbl
sar
loope
xchg
les
into
mov
push
xchg
push
mov
sbb
in
loopne
pusha
adc
pop
adc
xor
ss
hlt
cwtl
cld
or
mov
xchg
fwait
outsb
jg
lret
outsb
aam
js
scas
jecxz
outsb
pop
in
and
loopne
inc
dec
cmpsb
lock
xor
lods
push
push
shlb
outsb
loope
xabort
cmp
cs
inc
mov
or
xlat
jg
negb
adc
arpl
or
pop
cmp
fwait
push
sub
ss
mov
mov
adc
mov
inc
insl
ret
mov
out
xor
cmp
push
rorl
xchg
add
scas
pop
aam
pop
ret
adc
stos
adc
out
dec
push
fs
cmp
cwtl
adc
and
adc
xchg
push
es
dec
test
add
push
pushf
cmp
mov
and
iret
leave
sahf
aas
push
cmp
inc
mov
sub
add
inc
mov
scas
dec
mov
mov
xorl
dec
rcrl
jae
mov
int3
and
push
out
mov
int3
adc
pop
jae
lahf
enter
push
cli
fnstcw
adc
push
pop
jp
jl
push
fisubs
cmc
movsb
xor
out
cmp
or
cmp
push
mov
mov
cmp
in
bound
cmp
shr
push
aaa
cltd
mov
out
repnz
mov
jg
or
mov
sahf
out
enterw
jo
lea
cmp
ficompl
daa
ror
cmpsb
adc
push
mov
fisttpll
mov
adc
add
sahf
sahf
inc
add
stos
lea
pop
add
cmp
pop
mov
stos
lds
or
dec
adc
cs
sub
mov
stos
popa
and
jmp
inc
cmp
out
int3
dec
outsb
ja
cltd
pop
pusha
shl
and
adc
add
out
push
stc
jmp
pop
pushl
mov
dec
inc
xchg
fcomp
into
inc
cmp
mov
sub
leave
test
out
mov
repz
jnp
mov
pop
sahf
mov
or
dec
outsb
imul
mov
or
mov
addr16
xor
sbb
xchg
cwtl
loope
dec
ret
xchg
ljmp
in
fcmovb
jae
lods
fcoms
mov
or
insl
dec
in
xor
pop
and
mov
das
arpl
xor
js
arpl
imul
jne
mov
das
or
mov
push
call
ss
pop
dec
or
mov
adc
inc
fnsave
sub
adc
push
sbb
and
push
push
push
loop
mov
push
ficompl
lret
inc
test
sbb
xchg
lock
or
clc
adc
rolb
in
mov
nop
sbb
repnz
test
shrb
sub
arpl
jno
xor
push
dec
mov
jecxz
cwtl
sub
xchg
fisttps
xchg
and
pcmpgtd
push
cmpsb
ss
adc
push
scas
fwait
cltd
xor
push
fcoml
stos
add
mov
mov
mov
out
add
sub
pop
sbb
dec
pop
pop
inc
mov
sub
test
sahf
ds
dec
mov
mov
lcall
or
cmp
popf
test
adc
movsl
fsubrl
in
popf
and
cmc
push
js
jp
pop
inc
jae
adc
loop
mov
mov
sub
pop
mov
ficoml
or
lods
dec
push
addr16
and
adc
push
ret
test
mov
faddl
sub
faddl
sub
inc
jnp
sbbl
ljmp
pop
or
js
data16
repnz
mov
test
stos
loope
mov
mov
add
sti
mov
push
jecxz
jno
jbe
pop
push
fnstcw
pop
cld
wbinvd
les
jl
sbb
adc
cmp
push
push
sti
xchg
nop
sahf
movsb
xor
sbb
fmull
cmp
sahf
mov
pop
shll
jb
lock
mov
movsb
ret
loope
call
rol
fnsave
inc
out
and
insb
jmp
repz
dec
sbb
mov
stc
js
add
cmpsl
in
frstor
int
mov
shll
mov
fcoms
stos
pushf
aad
neg
jecxz
inc
xor
cld
hlt
iret
jne
or
sti
or
in
inc
xor
mov
cwtl
mov
inc
sbb
and
movsl
lahf
push
nop
dec
sub
aam
in
fsubrl
sub
lock
cmc
pop
sub
or
mov
push
add
mov
pop
sub
ret
fnstcw
cmp
or
insl
adc
ret
fisubl
cltd
or
mov
pop
pop
push
pop
or
push
push
jp
inc
pop
push
cmp
out
movsl
adc
dec
arpl
pushf
pop
sbb
nop
mov
mov
in
out
adc
xchg
cld
lea
cmc
add
cs
ljmp
or
sahf
rorb
pop
in
and
jmp
and
inc
scas
lock
jno
add
pushf
mov
jmp
jge
xor
pop
add
fimuls
dec
sahf
xor
leave
and
push
aas
test
jge
pop
sub
adc
ja
icebp
adc
sub
shl
jae
pop
movsl
mov
sub
jmp
das
mull
mov
mov
sarl
cs
adc
je
fdivr
push
dec
inc
jl
adc
insb
inc
aas
and
add
xlat
push
add
lret
mov
fcomi
inc
mov
mov
outsb
xchg
and
jns
mov
or
lea
les
aaa
adc
mov
iret
imul
fsub
ret
hlt
push
sbbb
aaa
jmp
jge
popa
fistps
int3
pop
lahf
test
dec
xchg
faddl
mov
sub
aam
mov
add
fstp
mov
ss
xchg
jae
jmp
daa
inc
pop
sbb
mov
pop
jg
fcoml
push
bound
clc
mov
dec
sub
cmp
and
decb
cld
out
cmc
std
dec
test
insb
outsl
adc
push
or
lret
lock
mov
daa
push
and
push
mov
int
and
std
mov
xchg
cmp
out
cmpsl
sahf
out
or
mov
mov
xchg
dec
cmc
dec
xchg
xchg
aam
nop
push
ds
jne
and
test
and
scas
loopne
ret
cmpsb
lods
mov
data16
sar
arpl
xchg
and
int3
xchg
mov
cmc
lcall
gs
in
lods
adc
mov
lret
cs
cmp
loope
js
pop
cmp
or
xor
dec
mull
add
shl
xchg
arpl
xchg
lret
jno
popf
dec
and
cmpsb
pusha
iret
scas
sbb
ret
jge
xor
add
cmp
push
lcall
cmpsl
into
mov
sar
jecxz
mov
adc
or
and
push
icebp
cmpsl
cld
fildl
jecxz
ljmp
push
das
arpl
cmpl
mov
sbbl
cs
arpl
xchg
xchg
sbb
rcrb
sbb
push
divb
pop
adc
xchg
lret
mov
and
inc
push
call
mov
test
adc
xchg
stos
insb
cmpsb
xlat
nop
add
jle
sbbb
jp
cmp
inc
cmp
xchg
and
imul
and
xor
mov
pop
negb
incb
clc
jg
negb
out
rcll
or
out
push
pop
xor
sub
xor
mov
and
pop
bound
push
cmp
imul
imul
cmp
out
mov
aas
push
hlt
jbe
scas
insb
out
adc
mov
lret
in
jno
xchg
push
je
leave
int3
cwtl
lret
imul
xor
sbb
dec
jl
cmp
xchg
xchg
mov
sbb
cli
mov
sub
sar
mov
dec
ret
pop
int
mov
pop
je
and
scas
out
jmp
int3
cld
popa
fsts
xchg
fnstcw
shlb
addr16
lds
shll
aam
inc
adc
jmp
jecxz
sarl
inc
lods
jns
inc
xor
js
lods
out
inc
or
xlat
dec
std
sbb
adc
cld
hlt
jbe
test
pushf
jnp
mov
pop
pusha
push
jno
pop
rorb
pop
sub
test
repnz
add
stc
sbb
mov
push
add
xor
sub
ffreep
aam
add
lods
add
add
cmpsb
std
inc
xchg
sub
and
mov
xchg
lock
cltd
enter
outsl
pop
insl
std
push
dec
dec
add
mov
dec
xor
ds
xchg
insb
xchg
inc
jbe
dec
repnz
mov
xor
dec
and
movb
adc
dec
add
sbb
stos
nop
mov
repnz
mov
in
insb
int
and
push
cwtl
xchg
jle
xchg
mov
mov
test
dec
inc
mov
push
mov
mov
decb
mov
aam
scas
lods
cmp
mov
mov
arpl
cs
sahf
cli
shll
negb
sub
lret
or
inc
sbb
leave
mov
push
inc
cmpsb
cmp
movsb
jg
test
scas
push
jecxz
xchg
fwait
xor
testl
sete
jno
in
mov
or
ds
mov
inc
test
dec
bound
mov
stos
dec
cld
xchg
loope
or
sti
faddp
scas
out
popl
lahf
outsb
xchg
jae
jl
shrl
mov
popa
loop
in
adc
ret
fucomi
call
jge
mov
sbb
das
jge
and
mov
push
and
divl
adc
outsl
sub
dec
pop
xchg
sahf
and
sti
or
dec
mov
and
stos
xor
xor
push
pop
add
std
cld
push
ja
or
mov
fucom
xorb
jp
cs
jb
icebp
mov
push
addb
pop
iret
inc
sub
jbe
popa
cmp
lods
fistpl
mov
push
lods
faddl
lock
sarb
jle
mov
int
push
je
cmp
sahf
addr16
sub
cmp
jmp
ret
xorl
xchg
and
push
ja
mov
push
cmp
or
fidivs
sub
bound
sbb
sub
jns
in
mov
mov
popa
fs
dec
loope
pop
pop
pop
cmp
mov
hlt
adc
add
adc
stos
or
adc
adc
sti
popa
jl
xchg
repnz
cmp
cmpsl
rclb
xor
inc
mov
cmc
mov
xchg
xor
or
adcb
stos
xor
mov
adc
dec
pop
cmp
cmp
adc
mov
mov
fadds
addr16
ja
movsl
pop
jo
xor
and
sti
sarl
mov
insb
ds
cld
mov
fistl
sub
aas
mov
test
aaa
rcll
mov
jne
pop
notb
div
sub
jns
mov
insb
xchg
sbb
lret
and
dec
push
and
fcom
sub
movsb
xor
and
popa
rcll
gs
lods
stos
dec
roll
arpl
push
mov
test
mov
js
fs
test
and
jecxz
daa
dec
pop
mov
xlat
jg
insb
sub
jmp
je
leave
pop
sbb
leave
mov
out
jns
jb
int3
nop
add
stc
ljmp
cmp
push
xchg
jne
push
dec
and
inc
sbb
loopne
icebp
call
xchg
iret
push
cmp
mov
es
ficoml
or
push
mov
jbe
push
inc
leave
adc
fsubs
cmpsl
jmp
lcall
outsb
addr16
cmpsl
loope
adc
push
xor
imul
pushf
scas
sti
cmc
mov
shll
sahf
nop
mov
inc
adc
enter
jle
test
out
enter
cld
iret
cs
cmp
or
cs
push
aaa
lods
je
mov
ret
roll
adc
mov
and
repnz
fdiv
into
xchg
pop
fcompl
and
jae
lods
stc
stos
call
adc
and
stos
mov
push
mov
fdivs
jge
cmp
push
dec
clc
leave
xchg
out
leave
sarb
icebp
shrl
enter
mov
xchg
mov
stos
mov
scas
lahf
mov
sub
aam
xor
push
mov
sub
insl
in
cmpsl
add
pop
mov
mov
mov
adc
xor
subb
mov
popa
push
pop
mov
mov
xorl
cld
call
or
pop
dec
pusha
push
pop
inc
cmp
subl
out
out
cltd
je
push
adc
and
fadd
mov
push
cmp
jns
rolb
jg
sub
jle
scas
mov
mov
and
stos
loope
shrb
mov
iret
cmpsb
lahf
xor
lods
xor
icebp
scas
jns
cli
mov
dec
or
psadbw
mov
loope
cmp
push
jp
aas
dec
outsl
test
inc
int3
lods
push
insl
mov
int
sbb
std
jbe
push
dec
insb
pop
sub
jb
push
mov
loope
cld
movsl
push
cmp
add
xor
int
xlat
add
xchg
lahf
inc
add
lock
mov
out
push
jp
loop
push
nop
test
cltd
sbb
lret
cmp
in
push
aas
inc
dec
mov
sbb
jg
fstpl
xor
jge
jns
sbb
push
pop
pop
and
and
in
xchg
inc
dec
jg
cmpsl
sub
sub
mov
cmpsb
iret
aam
cmp
sbb
pop
je
outsb
ljmp
mov
stos
pop
mov
xlat
mov
inc
ret
das
test
pop
stos
inc
mov
adc
sbb
sub
cmpsl
ja
stos
push
or
lahf
fs
adc
gs
cwtl
sub
add
adc
push
pop
or
cmpsl
push
mov
fwait
mov
push
call
xchg
shr
lods
xor
push
std
mov
dec
out
loope
jb
call
scas
mov
jp
mov
ret
or
push
cli
mov
sbb
inc
mov
fists
mov
mov
xchg
sbb
xor
xchg
mov
adc
shl
mov
jl
or
stos
adc
rcpps
jb
into
push
add
gs
dec
xchg
test
stos
cld
jg
mov
data16
daa
outsb
dec
jbe
lret
mov
dec
pop
cwtl
add
mov
and
jl
or
push
in
orl
adc
loope
cld
adc
loop
in
jmp
dec
pop
punpckldq
mov
push
imul
xchg
rcrl
popa
lea
xchg
dec
and
inc
faddl
in
das
sbb
loopne
decl
mov
inc
mov
jp
popa
nop
test
jmp
daa
loope
lods
dec
or
fldt
jmp
dec
shrb
dec
aad
mov
adc
aas
pop
mov
pop
add
std
and
xchg
push
inc
rcl
cmp
loope
fwait
xchg
mov
repnz
jbe
neg
xor
sbb
push
jne
xchg
fs
inc
insl
xchg
cmp
aas
inc
sub
cmp
jmp
adc
adc
das
clc
dec
mul
or
filds
cmp
jl
imul
jb
imul
lods
sbb
adc
lods
sbb
inc
xor
xchg
inc
sub
pop
lock
cmp
inc
clc
pop
data16
daa
test
mov
pushf
pop
loopne
loop
lods
push
fcoml
pusha
mov
add
icebp
jmp
lcall
jbe
cmp
inc
scas
mov
push
addl
call
data16
sub
mov
mov
add
cmpsl
clc
rorb
push
jl
mov
leave
mov
sub
into
stos
pusha
jo
mov
or
mov
incl
inc
or
call
and
shrb
and
sub
das
jns
mov
lea
cs
enter
sub
dec
push
roll
push
xorl
pop
std
loope
lock
aaa
add
or
mov
rorb
cmp
push
add
fisubs
int3
mov
scas
mov
pusha
dec
aas
fisubs
add
mov
js
add
xor
xchg
mov
push
push
mov
das
scas
xchg
adc
jmp
cmp
lods
push
bound
mov
push
push
mov
pushf
mov
gs
push
insl
mov
inc
js
cmpsl
add
sub
fxch
pop
subb
sbb
xlat
sbb
dec
into
rcrb
cmpsl
idiv
sub
fisubs
sub
push
jne
sbb
rclb
inc
call
les
shrl
cmp
in
jne
push
and
xchg
dec
in
xlat
jecxz
sbbb
and
cli
repz
sti
mov
sbb
or
aad
pop
mov
push
fld
sub
lea
push
test
add
mov
sub
pushf
sub
nop
push
scas
pop
es
inc
es
xor
sahf
jae
xchg
inc
xchg
bound
in
dec
add
comiss
repz
xchg
icebp
push
cmc
jne
inc
xchg
enter
cmp
sti
mov
xor
in
mov
btr
int3
mov
jb
ljmp
lods
stos
and
in
pop
push
or
mov
data16
push
jns
pop
les
sbb
mov
push
aad
push
lret
sti
sbb
push
cli
mov
mov
or
fcmove
in
jns
daa
js
push
popa
xchg
sbb
in
insb
flds
in
jae
inc
push
scas
dec
in
xor
sbb
dec
scas
sbb
sti
mov
js
std
sbb
sub
push
mov
mov
decb
sti
push
mov
add
or
sar
jp
xchg
test
es
mov
sub
lock
cmp
mov
outsl
adc
ds
xchg
and
in
xchg
inc
hlt
mov
sbb
movsb
rolb
jae
push
hlt
bound
xor
add
jne
icebp
mov
lds
lret
jl
shll
sbb
push
movsb
push
sbb
jp
ss
icebp
mov
and
and
add
daa
in
mov
outsl
mov
imul
icebp
inc
add
mov
adc
mov
lods
stos
cmp
fidivrs
into
mov
inc
mov
and
cwtl
imulb
iret
inc
cmpsb
xor
jo
xor
in
scas
mov
pop
outsb
and
mov
aaa
mov
push
std
sbb
mov
cmc
sahf
movsl
and
and
jg
xor
push
inc
popf
mov
mov
dec
sub
dec
xor
jle
je
pop
mov
pop
sar
outsb
dec
rorl
hlt
push
dec
dec
add
sbb
loope
cli
mov
pop
cmp
movsl
adc
je
lret
cltd
mov
cli
xor
ds
sbb
ret
mov
test
cmp
rcrl
or
sbb
or
push
push
xchg
dec
iret
loopne
sahf
aas
pop
xchg
mov
popf
push
aas
dec
cmc
inc
sbb
xorl
scas
ss
in
je
test
pop
cmp
nop
in
clc
pushf
pop
shlb
mov
cmpsb
dec
daa
leave
sbb
add
movsb
jg
loop
mov
mull
decb
sbb
inc
lret
dec
les
lret
jno
cmc
aaa
frstor
pusha
pop
sbb
mov
int
fcomip
mov
jae
int
jb
xorl
sbb
pop
or
mov
adc
mov
loopne
sub
cmpsl
pop
inc
lahf
stc
pop
in
dec
add
dec
data16
in
aas
sbb
in
addl
cs
nop
loop
and
int3
mov
addl
jae
in
adc
inc
pop
pop
dec
xchg
into
mov
fwait
or
sbb
lods
pop
mov
loopne
int3
dec
jns
repnz
mov
mov
arpl
aad
lret
repz
sahf
xor
dec
xor
stos
xchg
inc
stos
stos
mov
xor
dec
pop
popf
push
and
sbb
inc
sub
loopne
cmp
fwait
out
lods
pop
popf
insl
jl
jbe
call
mov
lret
jo
fimull
movsb
jmp
mov
and
xchg
movsb
xor
and
bound
xor
fstpt
fistps
fnstcw
mov
adc
test
mov
or
iret
mov
adc
loopne
pop
mov
xchg
sbb
fdivr
mov
cmpb
xor
pop
int
mov
sub
in
push
xor
add
mov
push
pushf
lods
lds
xchg
mov
mov
pop
mov
inc
xor
mov
inc
hlt
hlt
sub
xchg
sub
sti
lods
cmp
sbb
and
and
adc
inc
mov
fs
mov
jns
cwtl
mov
cltd
dec
xor
xorl
dec
cs
out
jmp
outsb
out
jns
int3
mov
orl
scas
cmp
es
dec
pop
mov
sub
stos
dec
jle
lods
mov
in
addb
lods
or
inc
adcb
js
dec
jmp
lock
int3
leave
in
pop
popa
dec
dec
in
loopne
std
mov
mov
in
iret
or
push
mov
sarb
inc
jno
mov
mov
jle
lahf
mov
lcall
or
aad
sbb
lods
icebp
je
mov
js
xor
xor
dec
sub
sbb
push
adc
fisubrl
rorl
int
dec
and
ja
adc
xchg
dec
insb
mov
loopne
jo
outsb
divl
loop
jnp
loopne
lods
icebp
scas
push
mov
fcomip
jne
pop
inc
or
lock
cmp
fdivrs
cltd
js
push
popf
cmc
imul
push
jle
in
loopne
inc
ljmp
lods
xor
lock
dec
mov
inc
dec
xor
mov
in
add
out
xor
xor
and
xchg
pop
lahf
pop
push
loopne
and
or
bound
outsb
imul
cmc
bound
daa
push
rcrb
sbb
sti
sbb
lret
xorb
imul
daa
es
test
lea
sbb
lahf
outsb
adc
adcb
ljmp
popa
lret
push
cmp
mov
fldcw
cmovg
adc
or
aad
inc
lret
pop
push
fidivl
out
gs
ret
sbb
sahf
loope
and
adc
je
aam
out
sub
popa
mov
xor
xor
jae
loopne
dec
sbb
data16
scas
add
push
stos
adc
or
jecxz
pop
mov
pop
mov
adc
add
add
dec
sbb
cmp
loope
sbbl
mov
mov
in
adc
and
ja
outsb
cmp
jl
movsb
mov
stos
test
leave
xchg
mov
pop
fs
sub
ret
ljmp
cmpsb
js
push
stos
mov
xchg
adc
mov
adc
jae
call
insl
mov
fiadds
std
pop
shll
test
clc
inc
inc
jecxz
mov
sti
out
ret
mov
push
xor
sti
lret
sbb
std
sbb
pop
pop
test
cmp
fdivr
loop
lock
fcomi
xchg
or
aaa
pop
lods
jbe
pop
mov
and
daa
mov
jne
dec
sbb
rol
mov
jecxz
jle
mov
aaa
jae
push
jo
push
sti
pop
push
mov
pop
mov
jnp
sub
mov
dec
push
clc
lahf
jl
fldl
outsl
subb
mov
add
fld
jge
into
sbb
pop
jno
shl
jle
ja
imull
mov
cli
jo
adc
push
cli
hlt
jae
pop
std
push
movsb
jb
push
pop
and
jecxz
pop
gs
lock
jmp
push
insb
add
daa
mov
pop
std
lods
test
cmp
ds
xchg
push
int3
jecxz
out
fs
orb
in
fstl
jecxz
fsubs
pop
scas
cmp
stc
es
xor
lret
loopne
es
add
adc
xchg
dec
jae
setl
xor
loop
xchg
mov
xchg
mov
push
dec
fwait
rclb
lods
adc
arpl
pop
data16
clc
cmp
cmpsl
or
out
in
pop
sbbb
mov
mov
in
inc
xchg
add
xor
push
repnz
inc
subl
sarl
jnp
jb
out
push
adc
or
mov
stos
in
adc
pushf
mov
cmp
test
adcl
outsl
out
adc
lcall
shll
in
ss
ret
add
sub
jns
jmp
js
add
mov
pop
push
jg
or
imul
enter
dec
das
aam
std
jae
repnz
sub
sub
mov
mov
xor
sbb
adc
call
out
xchg
push
das
or
enter
push
adc
scas
subl
add
js
aad
push
dec
xor
arpl
or
int3
sub
bound
jge
mov
jns
jnp
fucom
or
push
jecxz
mov
repnz
xchg
popf
inc
mov
jb
mov
mov
push
loop
std
jg
lock
pushf
mull
push
and
repnz
mov
test
and
das
iret
jns
jle
insl
mov
or
mov
daa
mov
rolb
mov
sub
add
push
push
std
xchg
lret
xor
inc
movsl
int3
ds
pop
fs
inc
push
inc
filds
mov
stc
add
lds
add
dec
fdivr
ret
aad
inc
hlt
fildl
xchg
scas
xchg
test
pop
test
fdivr
sbbl
outsb
push
fbld
jne
mov
mov
mov
pop
sarb
and
lret
rcrb
das
cld
sub
scas
mov
sahf
jno
mov
sub
jp
fdivl
movsl
push
mov
sbb
js
in
dec
pop
inc
enter
add
movsb
leave
iret
call
sahf
add
ljmp
push
cmp
repnz
mov
enter
lsl
scas
bswap
inc
cmp
les
popl
xor
jnp
lods
pop
cmp
ljmp
cmp
push
pop
leave
inc
sti
mov
rcrb
shl
mov
cmp
ds
daa
jmp
daa
int
rorl
push
or
movsb
sbb
adc
hlt
repz
jns
shl
test
mov
orl
repz
int
dec
fsqrt
add
arpl
jmp
cmp
je
fists
pop
int
cmp
das
insl
mov
and
jp
dec
cmp
push
out
mov
pushf
mov
rclb
cmc
push
mov
sbb
sub
dec
outsb
mov
inc
push
shr
inc
add
je
loopne
fwait
sub
sbb
add
push
xchg
sub
out
cltd
adc
into
fbstp
or
cmc
mov
lret
cmp
lock
dec
or
mov
scas
mov
out
cwtl
and
lret
cmp
inc
stos
dec
sbb
int3
xor
push
inc
das
or
cmpsl
mov
fdivrs
lcall
inc
xor
add
scas
mov
fdiv
pop
xchg
sbbb
outsb
into
fisubrl
xchg
into
in
ds
sbb
mov
xchg
mov
fistps
mov
xorl
mov
ss
imul
mov
inc
dec
and
clc
roll
pop
fucomip
scas
jno
push
dec
xchg
popf
ret
mov
adc
mov
sbb
shlb
cmp
inc
ss
and
xchg
cld
cltd
push
sbb
dec
in
pop
jno
and
jno
pop
inc
pop
mov
mulb
xor
imul
pop
cld
sahf
xor
add
jae
cs
or
fldt
out
ret
cwtl
test
int3
mov
mov
aaa
push
cmp
ljmp
fstl
leave
sub
cmpsl
notl
push
adc
sub
stos
sbb
ljmp
adc
xchg
or
shll
pop
stos
imul
into
cmp
popa
lret
test
cmp
jno
add
jae
stos
and
cwtl
mov
cld
test
dec
pop
sub
into
roll
int
adc
or
cmp
xchg
rolb
shlb
mov
add
lods
push
adc
movsl
sbb
mov
cmp
adc
push
xor
fadd
adc
std
fnstenv
test
sub
rorb
dec
or
xor
stos
mov
shl
mov
jge
loop
mov
jmp
cli
int3
mov
out
mov
push
mov
pop
jmp
push
cwtl
adc
inc
insl
cwtl
mov
cmp
xchg
les
popl
nop
mov
fwait
add
sti
sahf
negl
sbb
jle
inc
outsb
add
ja
sub
and
pop
inc
imul
sahf
mov
fistl
dec
mov
sub
pushf
std
push
cmp
scas
dec
mov
rclb
idivl
pop
cld
xchg
sahf
fnstcw
xchg
jo
and
fimuls
daa
sbb
fisubs
out
lds
mov
repz
fsts
jg
mov
jl
adc
mov
pop
push
xchg
ret
mov
out
repz
sub
xchg
cmp
xor
xchg
push
xor
repz
jnp
loop
in
jp
leave
xor
jnp
mov
scas
pop
xor
mov
daa
call
dec
mov
fisttps
pushl
inc
sub
inc
in
lock
add
popa
dec
and
xor
decb
jmp
xchg
rolb
push
lods
push
xor
into
fsubs
sub
pop
stos
addr16
lods
add
sub
mov
daa
popf
mov
jb
fiadds
pop
out
fadds
cltd
in
and
loope
arpl
nop
mov
scas
cwtl
add
xlat
and
push
lods
test
aaa
in
pop
mov
in
xor
xor
push
xchg
mov
pushf
cmc
mov
idiv
enter
hlt
test
push
push
pop
xor
add
leave
pop
xor
mov
daa
jae
push
or
jbe
test
shrb
clc
gs
mov
mov
jne
jbe
das
xchg
pop
or
pop
test
stc
stc
arpl
pop
hlt
cltd
mov
jb
jne
enter
inc
scas
and
sub
add
and
inc
cmp
int
into
xchg
jb
mov
je
test
pop
and
dec
mov
lods
stos
mov
mov
cmc
mov
icebp
push
outsl
js
and
fcmovu
call
sub
or
sub
fwait
lock
jle
outsb
add
clc
jae
sbb
mov
ret
pop
cmp
xchg
mov
mov
and
inc
lds
push
pop
lods
mov
int3
clc
mov
sbb
lods
je
in
jb
jl
mov
loope
push
and
aaa
cwtl
mov
and
repz
pop
sbb
xchg
fistps
adc
jbe
and
lret
jp
and
or
or
add
hlt
lret
jg
pop
out
add
cmp
cmp
xchg
pop
loopne
cmp
out
enter
sti
add
daa
xchg
shlb
xchg
popa
xor
pop
pusha
jmp
mov
jns
lahf
sahf
dec
gs
stos
xlat
fwait
adc
dec
sub
sarl
dec
test
push
ljmp
mov
jnp
addl
sbb
pop
shl
pop
outsl
pop
fcomi
repnz
cmp
rcr
mov
sub
jae
rcl
xchg
pop
leave
scas
cmpsl
mov
lock
mov
xor
jnp
int
lcall
outsb
push
daa
ss
sub
adc
shrb
lods
jmp
stos
and
pop
popf
lcall
popa
jge
push
das
dec
cmp
cmpsb
mov
outsl
and
popa
push
rorb
or
mov
pop
jl
push
aad
fnstsw
shlb
and
sub
pop
pop
popa
xchg
cmp
aas
jge
jae
fld
in
stos
sub
lods
cmp
mov
xor
dec
cltd
sahf
mov
xor
fwait
insb
jecxz
inc
jae
xor
sub
sbb
shl
imul
sarl
jl
xchg
out
adc
clc
pop
sub
xchg
jne
lahf
xchg
jne
xorl
sbb
mov
gs
mov
lahf
add
mov
push
out
xchg
jne
sbb
aad
into
add
xor
cmc
cmp
mov
jecxz
mov
inc
hlt
mov
dec
sbb
adc
fistpll
fs
dec
fdivl
js
dec
xlat
ret
rolb
xor
mov
sbb
or
icebp
rorl
popf
hlt
jmp
neg
xchg
or
sub
scas
rcrl
push
jmp
mov
jnp
scas
je
sti
xchg
inc
adc
shrb
scas
mov
fnsave
mov
stc
adc
jmp
dec
movsl
das
xchg
popa
fs
cmpsl
add
xor
mov
lret
arpl
stc
adc
or
bound
fmull
or
lock
lret
pop
imul
push
jecxz
add
mov
jecxz
bound
push
data16
popf
lds
repnz
adc
inc
mov
fdivs
mov
push
jmp
fnsave
std
int3
fistl
data16
push
pop
push
aam
xchg
adc
lods
ficoml
dec
les
add
cmp
aas
movsl
leave
push
sahf
sub
dec
sub
jl
clc
popf
xor
jnp
insb
mov
out
jl
sbb
xchg
pop
push
jns
push
iret
das
lods
push
cmpsb
pop
cwtl
sub
ficomps
push
enter
stc
inc
mov
inc
lods
mov
shrl
mov
sti
in
loop
sti
fadd
or
iret
mov
dec
cmp
push
push
fistl
push
in
in
test
push
sbb
dec
push
cmpsl
cmp
mov
outsb
or
and
test
arpl
lods
rcl
sbb
je
and
jne
adc
mov
mov
mov
fdivrs
add
sbb
iret
sub
push
sahf
pop
sub
orl
cltd
mov
mov
mov
outsl
sub
add
out
jbe
test
sub
push
push
mov
and
mov
repnz
sahf
scas
fisubs
or
dec
or
popf
out
rorl
dec
xchg
push
pop
adc
xchg
lcall
ljmp
xchg
cmp
jl
lods
daa
mov
xor
repnz
push
negb
stos
or
imul
inc
cs
jmp
jne
lock
leave
or
xchg
mov
les
iret
add
in
fstp
inc
enter
push
jecxz
orl
dec
mov
push
dec
adc
push
xor
aad
test
mov
xor
leave
push
mov
fstl
ret
cli
loope
mov
sti
shrl
jb
mov
mov
jne
frstor
sbb
push
iret
adcb
mov
fmuls
xor
mov
xor
xchg
into
icebp
call
cmp
mov
push
sbbb
pop
enter
fcmovu
mov
sub
pop
xchg
or
add
pop
leave
in
xchg
int3
push
fsubs
mov
stc
sar
test
lret
mov
mov
jge
sub
insl
insl
pop
or
lods
outsl
arpl
fdiv
pop
xchg
pushw
xchg
in
jae
sbb
inc
out
inc
xchg
pop
lods
ss
lahf
loop
mov
pop
push
ficomps
cmp
repz
leave
ficoms
jge
cmp
mov
cmp
pop
nop
add
xchg
mov
jb
into
mov
pop
sbb
cmp
sbb
jle
hlt
mov
nop
inc
cs
aaa
das
sbb
xor
sub
jns
out
stos
rolb
pop
mov
or
sbb
jns
xor
in
push
int
and
or
rclb
adc
add
xor
jno
jns
pop
dec
jb
mov
jb
aas
imul
adcb
lcall
mov
js
gs
je
mov
xor
jnp
xchg
iret
outsb
bndldx
js
sbb
stos
adc
mov
lods
popa
insb
xchg
sub
lock
pmuludq
adc
scas
or
jmp
dec
xor
adc
bound
lcall
sub
push
dec
mov
repz
fidivrl
cmpsb
shrb
test
xchg
sub
dec
scas
cmp
mov
out
cmp
daa
loop
mov
arpl
in
adc
mov
add
addl
aas
pop
pop
in
addl
out
cmp
jge
icebp
lods
push
xchg
add
pop
mov
sub
mov
stc
xlat
push
cmp
push
mov
ja
repnz
xor
loope
or
cmpsl
imul
or
sbb
loop
push
arpl
int
xchg
pushf
ret
inc
jns
pop
lret
in
imul
mov
push
fstpt
sub
fldt
adc
sbb
mov
sbb
mul
inc
arpl
test
xchg
into
push
mov
jns
sbb
out
or
out
xchg
sar
das
arpl
xor
xor
inc
adc
push
and
movsb
add
mov
jmp
pop
les
mov
loope
cmp
jle
push
mov
scas
jmp
adc
sahf
icebp
mov
dec
jbe
xor
xor
orl
or
add
addr16
xchg
repnz
cli
imul
in
cmp
popf
loop
divl
cmp
test
add
icebp
and
out
pop
adc
adc
daa
push
jns
outsb
xchg
and
out
sbb
ds
and
daa
filds
mov
inc
sti
clc
pusha
ret
btrl
mov
test
dec
aas
or
and
fcmovbe
mov
hlt
xlat
mov
xchg
arpl
movsl
xchg
mov
inc
sti
shrl
test
loope
xor
cmpsl
pushf
mov
fimuls
push
or
pushf
rcll
enter
lods
mov
ror
inc
ret
cmp
dec
data16
cmp
jno
daa
mov
jae
sahf
rcl
ss
out
and
in
mov
in
scas
addb
call
xlat
pop
xor
fwait
or
lods
inc
add
out
or
and
sahf
mov
jp
sbbl
cmp
sarb
in
fwait
jbe
ljmp
add
jmp
push
into
hlt
je
inc
jb
pop
jecxz
adc
mov
or
lea
daa
add
popf
or
hlt
xchg
push
sub
xchg
daa
inc
cmp
shlb
dec
jae
lret
mov
out
ret
in
mov
fstp
movsl
mov
and
xchg
dec
inc
inc
adc
xchg
pop
scas
mov
dec
pop
sbb
xchg
xor
push
cmp
rclb
pop
mov
out
cmp
mov
jae
leavew
and
mov
xor
sub
jb
jmp
clc
lret
cmp
iret
xchg
movsl
enter
inc
push
jne
jmp
adc
stos
fsubr
cmp
mov
popa
cwtl
test
incl
iret
aad
xchg
out
xchg
pop
cli
inc
cltd
push
mov
scas
test
mov
sbb
add
int3
into
cltd
popf
mov
xchg
or
xor
dec
xchg
testl
fstpl
testl
rcrl
sbb
ret
mov
push
xchg
add
and
movsb
mov
addb
cmp
xchg
shlb
sbb
in
fisttpl
je
cmp
mov
pop
aaa
cmp
ss
dec
jbe
add
pop
inc
mov
jge
cmp
mov
cmp
jae
xchg
push
ret
stc
cmp
inc
cmc
jnp
xchg
in
adc
sub
mov
sub
rcll
pop
pop
mov
into
xchg
adc
adc
xorb
cld
cmp
or
cli
jl
or
sbb
sbb
test
punpcklbw
cmp
cmpsl
pop
leave
loop
or
mov
cli
xlat
bound
loope
add
xchg
dec
hlt
movsb
lret
mov
xor
jge
ret
push
divb
repnz
dec
loopne
dec
xchg
mov
jge
out
iret
leave
jae
imul
add
loope
push
cmpsb
in
sti
mov
popa
sub
push
push
lret
mov
mov
jmp
scas
add
testl
dec
sbb
pusha
mov
test
popa
xor
in
pop
jae
xor
aad
dec
push
iret
sub
sub
adc
subl
dec
addr16
mov
push
push
in
push
cmpsl
pop
mov
dec
in
test
mov
mov
mov
mov
into
add
arpl
sbb
or
test
dec
push
dec
jno
mov
mov
xor
jnp
dec
rolb
test
scas
cmp
rorb
push
inc
mov
push
xor
int3
stc
mov
ficoms
mov
mov
testb
sub
imul
je
jl
inc
inc
jmp
mov
shrl
xor
pop
mov
mov
arpl
or
mov
mov
hlt
mov
stos
xor
xchg
fadd
push
push
cmpb
or
aam
repnz
pop
pop
add
jb
nop
shlb
pop
in
ret
addr16
and
sbb
scas
mov
and
mov
ja
lock
cmpsb
or
xor
xor
cmp
xor
jg
adc
cmpsb
and
movsb
idivl
and
in
mov
add
jg
xor
loope
dec
adc
inc
hlt
push
addb
mov
shl
movsl
loop
loopne
adc
mov
xor
fdiv
stc
mov
mov
mov
test
xor
je
or
test
je
pushl
ret
call
pushf
cmc
add
pop
xchg
sbb
adc
hlt
gs
adc
add
jge
fwait
lret
int
outsl
sub
sub
lret
insl
nop
inc
incl
repnz
jo
cmp
nop
sub
add
in
sti
subb
mov
fs
and
jne
push
pop
cmp
xchg
jp
sub
jecxz
mov
lret
cmpsb
cmc
dec
xchg
orl
imul
stc
mov
mov
insl
aam
clc
jbe
mov
imulb
out
mov
push
jno
pop
lsl
scas
add
leave
pop
cltd
mov
std
adc
or
std
pop
mov
sbb
mov
pusha
xchg
out
pop
insl
jo
and
shlb
lds
jnp
xor
or
enter
and
push
inc
mov
and
jecxz
push
and
ja
incb
loope
repz
int3
mov
jle
mov
mov
in
ret
and
dec
and
add
cs
ljmp
cs
movsl
sbb
adc
adc
dec
andl
mov
push
ljmp
cmpsl
lahf
cmp
les
push
add
jl
fstps
dec
mov
dec
xor
mov
pop
call
fsub
shrl
dec
xchg
into
adc
ss
gs
cmc
mov
sub
xchg
stos
mov
jg
stc
dec
push
and
inc
shll
mov
test
xchg
out
pushf
mov
cs
mov
out
inc
dec
and
inc
aaa
xchg
dec
mov
mov
stc
movsb
push
fldcw
mov
sbb
lods
adc
bound
cmp
popf
lods
cmpsb
int3
lods
jp
xchg
adc
add
in
cmp
adc
jae
dec
loop
movsb
jno
in
subb
mov
jg
and
rcll
fnstcw
sarb
and
dec
das
jo
xchg
loop
int
sbb
xor
mov
sub
add
and
push
mov
pop
lea
mov
icebp
or
dec
inc
ljmp
mov
mov
inc
lcall
aas
fninit
sarb
flds
dec
pop
sub
xor
mov
out
sub
and
lcall
jle
rorb
inc
ds
mov
fidivs
shl
inc
mov
js
xchg
mov
adcb
inc
add
movsl
aas
ficompl
outsl
and
xchg
inc
ljmp
sbb
in
punpckhbw
cwtl
inc
lds
fistps
push
sahf
push
xchg
cld
xchg
cmpsl
nop
loope
or
pushf
subl
sub
fsubp
push
mov
push
icebp
sub
pop
inc
ja
inc
jbe
xchg
je
xchg
clc
add
xchg
mov
inc
mov
in
add
or
fwait
daa
cmpsl
addr16
orl
sub
ja
sub
dec
sar
mov
sub
stc
xchg
mov
fs
fldt
enter
jmp
jne
cmp
adc
jne
mov
cmp
cmpsb
stos
sub
subl
loop
mov
jno
js
mov
insl
iret
test
and
push
lret
sti
push
pop
insb
push
xor
xchg
and
sub
cmp
pop
loop
cmpsl
sbb
fstpt
cmc
dec
enter
cli
sti
pop
es
mov
rcl
xor
mov
jbe
sbb
add
int3
dec
xor
mov
inc
outsl
jb
lds
fdivl
dec
cmpb
jge
in
frstor
mov
pushf
out
push
add
in
xor
or
in
lods
cld
das
out
lea
mov
and
add
mov
fcomps
loop
addb
lcall
add
pusha
push
mov
inc
mov
daa
shrl
test
push
pop
mov
stos
adc
dec
out
inc
sub
scas
xor
push
cmpsb
cmpsb
mov
in
cld
in
aas
mov
mov
enter
mov
add
xor
daa
sub
data16
lcall
cld
xchg
pop
shll
dec
mov
out
mulb
sti
inc
out
insl
mov
inc
fcmovnbe
jnp
xchg
xchg
mov
push
sbb
fwait
dec
mov
adc
fwait
movsb
into
xor
inc
jecxz
dec
adc
pop
addb
cmp
cs
adc
nop
push
xor
or
and
js
repz
cli
cld
cld
int
sub
and
sbbb
fs
test
lds
dec
cmp
jmp
out
loop
or
adc
inc
test
xor
or
lea
ja
fisubrl
popf
dec
add
cli
cmp
jne
loop
jecxz
iret
cmc
leave
push
clc
add
scas
xchg
insb
mov
mov
add
in
sub
icebp
adc
xor
movsb
xchg
push
das
and
sub
cmp
dec
push
movsb
ret
and
pop
cmp
repz
pop
stos
aam
cwtl
pop
and
in
pop
inc
inc
loop
dec
adc
xacquire
adcb
push
add
shrl
jp
pop
cmp
leave
sbb
jnp
movb
jmp
pushf
inc
sub
cmp
scas
iret
cltd
pop
fdivp
xor
and
mov
push
adc
and
adc
jo
inc
add
jbe
insb
scas
jno
xchg
xchg
std
or
push
mov
and
push
mov
mov
rol
or
les
nop
mov
xchg
stc
cmc
int3
inc
cmp
cmc
lea
shrb
dec
stos
xor
jbe
jo
push
pop
test
aas
dec
movsl
xchg
xor
push
jo
inc
adc
rep
push
std
cltd
repnz
inc
mov
or
jnp
add
lds
or
fldt
orb
aad
sub
push
jmp
mov
aaa
adc
dec
adc
sub
dec
out
dec
xlat
dec
xor
aam
cmp
lcall
or
inc
sub
sub
cmp
add
adc
jnp
add
dec
mov
adc
pop
bound
andb
loopne
scas
xchg
dec
inc
pop
and
inc
out
mov
movsb
mov
jns
and
xchg
dec
cmp
push
pop
outsl
outsl
mov
in
js
cmp
mov
pop
ret
daa
sub
or
dec
fs
or
idivl
cmp
sti
enter
add
add
jp
inc
mov
xchg
inc
xlat
mov
adc
xchg
lea
xor
icebp
fmul
mov
push
sub
cmp
cltd
push
stc
scas
sti
popf
pusha
outsb
push
lock
cmc
ret
cmp
outsl
into
mov
jecxz
bound
and
orb
int3
inc
es
ret
push
jecxz
insb
push
aam
insb
add
pushf
sbb
push
cmp
xchg
lods
decb
adc
xchg
incb
inc
xor
lahf
jge
xchg
xchg
or
daa
nop
out
xchg
pushf
lcall
add
sahf
ja
pop
jo
cmp
pop
pop
xor
iret
pop
adc
insl
call
scas
lods
mov
mov
cmc
fdivs
aad
shlb
pop
xchg
fwait
xor
dec
adc
pop
popf
in
xor
sbb
sub
mov
inc
sarl
xchg
dec
pop
mov
mov
out
loopne
fs
add
out
sahf
andb
fbstp
add
and
and
les
adc
xchg
in
and
adc
sbbb
loop
mov
out
ljmp
dec
xchg
sbb
addr16
ds
sub
mov
adc
or
cmpsb
sub
aam
xor
xchg
cmpl
call
jnp
out
xchg
nop
scas
movsb
call
xchg
in
bnd
xor
arpl
shlb
movsb
mov
imulb
xchg
ljmp
or
push
aas
sbb
dec
out
add
or
ljmp
adc
or
sbb
xor
addr16
cmpsb
xchg
sub
push
cmp
or
scas
mov
push
and
sub
or
sahf
dec
xchg
fdiv
sub
int3
int
sub
outsb
lret
adc
inc
sub
adc
rcr
shr
mov
out
xor
mov
or
add
out
pop
dec
pop
jns
test
addr16
pop
cmp
stos
lods
mov
pop
fstl
push
ficomps
push
xchg
pop
aad
cmpsl
mov
or
hlt
sbb
inc
jnp
rclb
inc
dec
aam
cmp
out
push
out
sub
in
outsb
dec
jl
rorl
lds
add
and
fidivl
add
cs
je
xor
mov
add
mov
rcrb
xlat
movsb
test
push
dec
cwtl
jbe
out
or
das
es
insb
clc
mov
bnd
pop
lea
mov
int3
nop
sbb
stos
dec
into
add
movsl
sbb
dec
in
adc
loopne
stos
push
adcb
xchg
mov
loopne
inc
cmpsb
stos
mov
cmp
movsb
out
or
jno
pop
rol
rorb
or
push
add
sub
pop
lret
or
adc
es
sar
push
jbe
outsl
cmp
je
sbb
sub
pmulhuw
test
pop
mov
push
mov
js
lret
lahf
fs
loopne
inc
mov
push
add
adc
out
xor
pop
or
add
js
jmp
ljmp
xor
repnz
mov
es
mov
or
or
outsb
mov
shll
lcall
mov
imul
enter
in
pop
mov
mov
xchg
iret
stc
ja
push
mov
scas
fistl
adc
jg
popf
sub
inc
mov
cvtps2pi
mov
push
cwtl
lea
sar
mov
xchg
jl
mov
cwtl
and
sub
pop
imul
inc
faddp
push
in
fisubl
mov
cltd
sub
ret
ss
jne,pn
mov
in
psubusw
popa
jne
xlat
add
pop
fstps
jle
or
pop
outsb
lods
cmp
xor
fcmovu
js
out
std
out
mov
xchg
jge
fildll
or
test
dec
nop
jp
dec
mov
jmp
outsl
idivb
or
inc
mov
xchg
and
cmpsb
push
ret
fstl
into
adc
sbb
dec
cmc
mov
add
insb
adc
fmul
cli
and
add
cmp
rolb
pop
call
stos
mov
outsb
cmp
mov
aas
jns
lret
mov
mov
pop
fcoms
cvttps2pi
movsb
and
jp
or
xor
jae
sbb
adc
rcrb
adc
cld
mov
mov
pop
xlat
mov
jmp
imul
inc
dec
ret
lds
mov
adc
mov
cwtl
test
dec
push
push
leave
in
or
mov
ds
dec
aad
outsl
xchg
scas
dec
xchg
mov
or
xchg
lcall
or
sbb
cmc
scas
xor
mov
mov
mov
mov
sbbb
or
lret
pop
out
pusha
dec
mov
pop
jae
cltd
inc
mov
mov
lea
gs
cmpsb
cmp
jb
xchg
and
and
insb
push
mov
lock
stos
xchg
xor
movsl
adc
scas
adc
add
daa
pop
cvtps2pi
ja
xchg
dec
push
rol
adc
dec
mov
aam
xchg
sub
and
pop
or
scas
cltd
cmp
pop
test
adc
jbe
sub
sbb
adc
test
mov
mov
ss
push
mov
pop
jae
fsubs
push
mov
shl
ficompl
inc
pusha
mov
js
aaa
repz
or
mov
jo
or
int
push
push
inc
mov
and
pushf
and
mov
pop
outsb
inc
int3
adc
xchg
xchg
insl
mov
nop
push
and
mov
sbb
mov
mov
add
jge
dec
fwait
cld
sub
dec
mov
das
or
jp
fldt
push
mov
idivl
cmp
stos
mov
or
cmp
lahf
out
test
xchg
popa
or
adc
inc
shll
mov
sahf
enter
jae
inc
and
and
mov
jo
andl
fdivs
pop
inc
aam
out
stos
and
popa
rolb
nop
jge
jb
xor
inc
hlt
rcll
bnd
jnp
pusha
push
ss
adc
arpl
xchg
stos
fcomps
in
xchg
std
fsubrl
jne
mov
push
cmpsl
push
clc
je
stos
lea
testb
rcll
ret
dec
mov
filds
cmp
adc
loopne
xchg
cmp
repnz
lods
lea
pop
mov
loopne
out
aad
int
add
cmpsl
mov
les
push
gs
mov
push
stos
push
nop
sahf
and
inc
pop
push
jns
mull
fnstcw
enter
mov
out
fisubrl
push
mov
js
divb
mov
shlb
data16
and
in
sbb
pop
cmpsl
push
sahf
push
adc
lods
jo
in
lods
shll
nop
dec
jmp
push
pop
push
mov
xchg
lods
lock
adc
gs
jbe
mov
pushl
shl
out
and
das
daa
sbb
je
or
dec
in
jl
jp
sub
out
mov
mov
push
jecxz
gs
sub
pop
cmp
out
out
stos
cmp
addr16
cwtl
xor
inc
bnd
orb
adc
ret
dec
nop
andl
das
jnp
push
jbe,pn
pop
bound
sub
xchg
daa
inc
pcmpgtd
sarl
idivb
and
jbe
xchg
mov
ljmp
ret
and
cmpsb
mov
jae
xchg
dec
and
stos
cmp
es
lret
pop
dec
enter
scas
sub
sub
push
sti
fisttpl
add
inc
out
xor
mov
xor
mov
inc
clc
pushf
shrb
cmp
or
std
fsts
mov
rolb
mov
mov
jb
mov
popf
ja
rcrl
jmp
mov
popf
xor
int3
ljmp
cmpsb
push
das
jmp
inc
pushf
rolb
mov
sti
mov
fprem1
sbb
inc
mov
adc
mov
mov
add
xchg
scas
cld
push
mov
test
ja
sub
push
and
add
cmpsb
addl
sbb
push
cmpsl
sub
je
or
or
add
out
addr16
jae
xor
dec
lahf
cwtl
and
pushf
scas
mov
cli
int
mov
sti
adc
negb
stos
fs
jb
jbe
cmp
pop
and
sarb
adc
mov
sub
push
mov
pop
int
ja
xor
dec
cmpsb
addr16
scas
lods
mov
sbbb
in
pop
xor
xor
loopne
rcr
in
pop
cltd
dec
and
dec
sub
les
sub
and
or
sbb
pop
xchg
sbb
lock
fwait
push
push
or
mov
sub
xchg
rolb
dec
sub
movsl
jle
mov
pop
fbld
add
inc
pushf
pushf
sbb
dec
aam
mov
push
aad
pop
adc
pop
xchg
jg
or
iret
or
dec
mov
push
or
stc
idivl
icebp
iret
mov
push
inc
mov
cmpb
push
mov
jnp
push
lahf
push
out
movsl
dec
ret
push
bound
inc
aam
dec
pop
jg
pop
push
sti
mov
and
notl
stos
insl
sti
orl
mov
out
pop
mov
lcall
sbb
mov
out
aad
pop
std
lods
xchg
xchg
fstp
cmp
or
xchg
scas
loope
imul
jge
insl
subl
mov
sbb
sub
mov
popl
inc
fstp
cmp
xor
ja
mov
rorb
pop
ret
int
mov
in
push
xor
orb
fidivl
lcall
and
ss
xchg
rcr
fildl
negb
jmp
sbb
mov
pusha
cmc
push
xor
inc
cld
adc
xchg
and
and
in
clc
cmc
sbb
jnp
js
rorl
out
dec
xchg
jns
test
push
mov
mov
and
lods
stc
xchg
js
and
and
pop
out
sarl
pop
cmpsb
xchg
or
lret
lods
sbb
xchg
fs
mov
loope
sub
mov
mov
xor
cmp
jp
and
mov
aaa
das
nop
fwait
pop
cld
mov
shrl
addr16
jbe
data16
mov
mov
inc
xchg
in
in
ja
insb
test
sbb
fisttpll
cmp
bound
lcall
sbb
aad
outsl
leave
adcl
test
dec
subl
xchg
xor
rcr
inc
loope
std
test
xchg
shll
add
ret
pushf
jns
sbb
out
cmp
test
jb
mov
sbb
mov
mov
lods
jb
outsb
xlat
je
sub
jle
rolb
mov
mov
fstpt
insl
xchg
mov
adc
mov
pushf
fisubrl
or
push
lods
push
into
pop
fldl
pop
inc
shr
jp
xor
sbb
repz
mov
arpl
into
leave
sub
test
loope
pop
movsl
add
or
xor
into
fwait
push
lret
ret
mov
pop
dec
pop
sahf
inc
loop
cwtl
nop
push
push
mov
inc
mov
inc
in
outsl
lcall
mov
cmp
lahf
and
jmp
jae
and
and
lret
sarl
ficomps
in
pop
cs
add
insb
out
cmc
dec
fbld
cmp
cmpsb
jae
or
pop
add
mov
jbe
cld
fldenv
scas
mov
adc
push
mov
lods
pop
stc
xchg
or
into
iret
clc
mov
call
push
xchg
cld
inc
or
adc
xchg
dec
cmp
push
lods
in
subb
fsin
pop
sub
pop
inc
jbe
pop
sbb
inc
test
ljmp
xchg
adc
jns
jo
xor
mov
test
loope
arpl
ret
js
and
sub
in
scas
adc
ds
mov
jb
movsb
mov
out
cmpsb
jmp
and
test
jmp
lret
idivb
rolb
lcall
loope
aaa
sarl
add
icebp
in
fimull
push
mov
xchg
pushf
stos
pop
dec
dec
sbb
cwtl
mov
int
mov
pushf
fisttps
xorl
jne
in
lret
xor
mov
push
inc
movsb
pop
rol
js
mov
and
add
int3
mov
jns
mov
insl
test
out
sub
setge
sbb
fldenv
mov
lahf
adc
out
jne
or
dec
xlat
sbb
xchg
out
sub
clc
xor
cltd
or
inc
jnp
shl
bound
xchg
out
pop
mov
jno
stos
and
adc
sahf
cmp
cmp
cmp
insl
and
daa
cmpsb
inc
aaa
je
dec
xchg
cmp
cmp
add
push
sbb
mov
mov
pop
mov
dec
sbb
xor
test
cltd
popa
hlt
dec
adc
cmc
push
pushf
leave
mov
pop
pop
push
sub
jmp
hlt
xchg
mov
aad
inc
sbb
fwait
sti
sbb
push
push
dec
xchg
pop
rcll
lock
das
shrb
lret
fisubrs
pop
int3
stos
pusha
adc
pand
jl
popf
xchg
push
sbb
movb
ret
mov
fwait
dec
pop
push
sbb
push
scas
inc
aas
rcl
mov
xor
jae
cmp
popa
clc
and
mov
ret
and
cmc
mov
orl
insb
sbb
and
jbe
sbb
addr16
add
imul
inc
adc
rcll
stos
mov
test
push
fistps
push
jb
mov
xchg
aad
das
or
arpl
cmp
or
jne
test
jecxz
scas
push
inc
stos
inc
mov
add
push
ja
sbb
dec
mov
inc
aas
inc
cltd
cmpsl
movsl
cmp
push
xor
sub
jmp
lcall
xchg
jae
jns
in
test
inc
mov
dec
clc
cwtl
dec
mov
aaa
mov
push
dec
or
stc
cmp
data16
popa
dec
jg
ja
add
xchg
xchg
xchg
fcmove
jns
sub
loop
sti
js
adc
popa
mov
xor
xchg
sub
in
loop
hlt
add
cmp
push
aaa
paddusw
into
fs
rolb
pusha
shll
repz
jb
jmp
jle
cmp
std
mov
mov
mov
push
popf
iret
jnp
sbb
dec
decb
adc
test
or
cld
rclb
jmp
cmp
test
push
call
mov
sub
pop
fcomi
bound
sub
xorl
cmpsl
sbb
pop
movl
insb
mov
pop
aas
fisubrs
adc
aam
mov
sub
lret
nop
call
pop
in
lock
pop
sbb
fstpt
fbstp
mov
imul
in
call
rorb
rorl
fdivrl
xchg
pop
int3
js
hlt
xchg
add
jmp
loop
movl
adc
gs
int
movsb
push
daa
inc
mov
inc
pusha
cmp
sub
ret
loop
pop
jne
ror
pop
repnz
dec
leave
mov
loopne
fadds
mov
out
ret
aad
sti
inc
out
sub
aaa
xchg
adc
nop
outsb
daa
or
adc
call
inc
pop
ficompl
xor
mov
push
cmp
into
add
or
jb
sub
hlt
pop
repz
adc
sbb
in
addr16
pop
test
aam
addr16
testb
lret
int3
cmpb
je
clc
lods
lods
add
mov
jo
cs
push
adc
enter
shlb
adc
add
xor
into
mov
cmp
mov
in
in
lret
sti
loopne
mov
push
mov
push
mov
mov
loope
popa
out
popa
stc
dec
xlat
xorl
or
jo
jo
xor
cmpsb
dec
dec
jp
jne
pop
imul
cmpsb
movsl
push
mov
stos
inc
lret
aas
xor
out
sbb
aam
sahf
in
pop
push
xorl
jl
fsts
add
and
dec
cmp
test
leave
pop
sub
fndisi(8087
daa
push
inc
xor
dec
lret
jno
inc
dec
mov
aaa
icebp
adc
shrl
cli
jl
dec
sbb
inc
xlat
xchg
push
and
aaa
loop
decb
std
in
jecxz
mov
inc
loopne
mov
ss
jns
or
int
jle
xchg
cmp
neg
xor
nop
push
jg
ja
subl
cs
test
dec
cmp
outsl
divl
xchg
jge
cmc
jecxz
outsb
inc
lea
cmp
lods
icebp
js
mov
mov
in
addl
fs
and
jle
and
subb
jle
add
push
scas
loop
ret
jmp
lcall
dec
aas
fisttps
clc
push
dec
in
xchg
jne
data16
enter
xor
mov
adc
sub
fdivrs
idiv
jmp
cmp
adc
fiaddl
sub
idivb
mov
inc
dec
clc
or
inc
cld
push
mov
loopne
leave
and
xchg
stos
or
add
les
add
jo
loope
fs
rorl
push
ljmp
cmc
dec
cs
out
push
dec
push
into
mov
sub
movsb
movq
sarb
jmp
pop
lret
clc
std
mov
jb
fstl
loope
insl
mov
mov
inc
fcomi
mov
dec
popf
or
movsb
rolb
and
xchg
js
add
ja
xchg
sbb
jbe
scas
add
in
loopne
repz
ret
cltd
fdiv
lahf
in
jge
andl
inc
xchg
cmp
sahf
arpl
faddp
test
rcl
scas
insb
push
mov
cmp
outsl
outsb
fmuls
in
sub
pop
pop
das
mov
daa
sub
in
ret
or
xchg
inc
push
sub
fidivrl
pop
mov
cld
repnz
scas
rcll
fwait
ja
imul
pop
jo
mov
inc
jo
imul
mov
out
pop
cmpsb
lret
push
fisubl
mov
xor
cli
cs
xlat
shlb
inc
and
jmp
add
mov
js
mov
mov
insl
lret
loop
xchg
jmp
popa
xor
push
aaa
aas
jecxz
rcrl
push
out
jns
xchg
test
jmp
cwtl
popf
sub
scas
jl
xchg
imull
fisubrs
sub
adc
ja
orb
daa
fidivs
dec
out
jl
icebp
add
mov
dec
sbb
or
sbb
adc
sbb
xchg
daa
sub
jmp
scas
scas
push
dec
or
cmpsl
sbb
loopne
inc
xor
and
mov
popl
sbb
hlt
jmp
subb
movsb
call
rorb
sti
lods
cltd
and
notl
leave
outsb
repnz
sahf
test
pushf
je
or
and
popf
fdivrl
dec
xchg
push
mov
jle
cmp
addr16
mov
lea
nop
lret
out
enter
sub
mov
mov
test
sbb
fucomip
pop
iret
inc
negb
sbb
insb
jnp
inc
jnp
dec
std
pop
repnz
pop
mov
jmp
dec
adc
push
mov
shrl
test
jbe
out
cmp
mov
xor
sti
pusha
or
dec
mov
aad
imul
int
fwait
decb
pop
lods
jns
inc
jmp
loopne
ds
add
ffreep
fs
add
and
jle
or
sub
push
test
dec
push
std
xchg
push
iret
cltd
scas
ja
out
lock
adc
aam
xor
inc
stos
arpl
xchg
shll
adc
pop
xor
xor
cmp
int3
xor
push
sahf
jmp
cmpsb
cmpsb
and
adc
cmp
dec
in
mov
cltd
ljmp
adc
sbb
push
xchg
push
adc
sub
pushf
jns
add
mov
lea
or
mov
insb
adc
out
out
sbb
mov
and
loope
xor
iret
jbe
sti
ret
adc
imul
dec
sbb
push
andb
push
xchg
je
pop
adc
cmp
adc
stc
sub
sbb
pushf
and
lds
inc
lea
dec
shll
push
mov
dec
mov
fwait
das
and
sub
or
jl
imul
dec
inc
jnp
pop
and
sub
cmp
mov
insb
jp
add
and
cmp
sbb
icebp
xor
fwait
les
jb
and
dec
pop
xor
fimuls
and
push
test
js
in
and
jne
out
inc
and
jmp
and
mov
xchg
push
shr
jno
int3
xchg
popf
lds
loope
dec
add
or
insb
adc
dec
andb
xor
xor
mov
push
sbb
gs
adc
pop
dec
cmp
xor
ret
imul
mov
cmp
or
pop
imul
xor
cli
out
add
add
cmp
addr16
sbb
jns
xor
fnstcw
inc
jp
imul
ds
loopne
decb
jecxz
push
insl
cltd
fisttps
add
mov
ljmp
les
mov
push
ret
dec
fdivr
or
mov
enter
push
cmpsb
lods
sbb
or
xor
pop
cmpsb
fists
cmp
faddl
and
mov
jb
xor
push
xor
movsb
rcll
sub
jecxz
loop
loopne
cmp
pop
mov
arpl
sahf
adc
popf
jle
sub
repz
mov
push
loope
sbb
or
cmp
mov
mov
dec
es
mov
cmc
icebp
ja
sub
or
xlat
scas
xchg
out
cmp
jno
push
inc
add
xlat
and
and
data16
mov
shlb
out
or
ds
mov
incl
mov
dec
js
mov
mov
xor
and
addr16
push
sahf
stc
clc
lahf
cmp
mov
out
pop
inc
and
and
je
mov
test
repz
jmp
push
insl
cltd
inc
and
push
inc
mov
push
faddl
loopne
mov
ficompl
jle
jmp
cltd
das
lret
add
or
add
mov
aaa
int3
gs
add
movsb
fsin
jae
scas
sub
or
mov
cmp
cmp
test
pop
xor
loope
outsl
in
enter
push
fnstenv
push
les
and
test
stc
clc
icebp
xor
icebp
and
xchg
idiv
in
push
aas
add
jno
xor
sbb
out
fistps
and
ss
cmp
sarl
inc
xrelease
fucomp
sub
mov
xor
or
pop
jg
xor
or
inc
dec
sub
out
out
lods
add
sbb
inc
cmp
add
movsl
and
jp
addr16
adc
fs
jl
jg
dec
nop
sub
cmp
push
adc
rclb
lcall
jne
hlt
sbb
xor
xor
mov
mov
or
mov
jg
sub
mov
adc
inc
mov
sub
adc
aas
inc
mov
push
mov
xchg
repz
dec
push
cs
es
sbbl
xchg
mov
fldcw
sahf
mov
sbb
push
or
subb
std
xor
xor
xor
dec
adc
xor
insb
push
push
cwtl
inc
inc
pop
cltd
xor
mov
into
inc
mov
jge
cmpsb
mov
cmpb
cld
insb
sbb
or
outsb
inc
popa
adc
fidivl
xchg
mov
adc
repz
jno
icebp
adcl
iret
jge
cmpsb
jno
scas
loop
xor
jg
lods
fidivl
call
negl
cs
inc
inc
cmp
jbe
sub
clc
push
movsl
pop
popf
mov
mov
iret
jge
pop
fsts
xchg
loope
imul
out
inc
rolb
fildll
loop
and
cmp
push
test
add
add
adc
jnp
mull
loop
ret
leave
sub
movb
jns
mov
mov
enter
insb
or
pushf
out
cmc
hlt
es
mov
inc
pusha
push
mov
xchg
cmp
mov
cs
ss
ret
adc
in
mov
popa
jno
fwait
sbb
xchg
lds
mov
cmp
addr16
mov
jmp
jge
fimuls
and
xchg
test
out
mov
inc
jge
js
addr16
xor
popa
jmp
pop
dec
lahf
sub
call
es
inc
jl
lea
movl
xchg
lcall
mov
out
data16
jp
shlb
test
cmp
inc
xor
xchg
in
fists
lret
repz
mov
dec
xor
data16
test
fbstp
inc
out
push
popf
cmc
pop
fcoms
mov
lds
inc
icebp
imul
cltd
jmp
daa
push
lahf
mov
out
aam
in
mov
jnp
pop
je
cmp
push
lock
pop
push
pusha
sbb
jne
adc
mov
repz
fnstsw
and
cmp
aaa
xchg
pop
mov
or
loop
mov
sub
adc
sarl
pop
dec
imul
shll
sub
insb
rcrl
sbb
lock
je
pushl
lahf
sti
cmp
fistpll
fcoms
fistpll
mov
push
inc
daa
xchg
adc
xor
ret
xchg
push
jmp
loopne
mov
cmc
movsl
in
pop
sub
popa
aaa
add
iret
jmp
frstor
mov
rolb
out
push
lods
into
add
push
pop
xor
shrb
shll
pusha
or
stos
xor
or
popf
fists
dec
cmpsb
andb
fadds
push
inc
or
iret
adc
adc
pop
inc
inc
mov
pop
inc
shl
into
ja
sbb
lcall
dec
sub
jecxz
xor
mov
ds
push
pop
add
pop
adc
shlb
sbb
fldl
add
xor
cltd
fcomps
sub
mov
mov
pop
rcrl
pusha
mov
xor
sub
jecxz
pop
data16
les
jbe
cmp
dec
or
dec
decl
lcall
mov
mov
stos
dec
jno
roll
inc
dec
push
push
idivl
push
jg
cmp
ds
sti
push
sbb
lods
fisubl
les
sbb
sbb
insb
inc
nop
push
push
xor
lods
jmp
xor
shlb
sbb
sti
mov
sub
sbb
jbe
ja
dec
pop
daa
push
lcall
dec
dec
fsubrl
insl
movsb
rclb
aam
outsl
inc
sbb
dec
pop
lahf
ljmp
nop
cmp
stc
pslld
insl
push
mov
or
xchg
xchg
fbstp
xor
push
aam
shrl
dec
push
outsb
push
popa
jmp
decb
incl
into
insl
xchg
cmp
mov
inc
or
mov
dec
int
cwtl
jnp
jmp
dec
repz
jecxz
fsubl
data16
gs
dec
xlat
pop
and
lods
push
enter
loopne
dec
cmpsl
test
jo
loopne
bound
mov
out
xor
push
hlt
out
jge
fisttps
ja
aaa
stos
fcmovnbe
xchg
push
mov
fsub
cmp
fucom
sbb
mov
or
int
sbb
fistps
sti
xchg
in
pop
jmp
dec
scas
icebp
bound
addr16
pop
add
and
ret
mov
rcr
std
xchg
lods
stc
sbb
lock
das
in
sbb
in
repz
je
pop
push
jnp
adc
mov
push
scas
pop
cmpsb
sub
cmp
xchg
sti
add
add
shll
pop
ja
add
sbb
mov
mov
sub
sub
lock
sbb
pusha
sbb
push
pushl
push
mov
ret
ljmp
mov
cmp
les
sub
sbb
inc
enter
ds
stc
mov
je
mov
pop
cmp
push
jmp
incl
xlat
cmp
push
and
sbb
and
adcl
mov
rol
sub
sub
sbb
daa
add
roll
or
loope
and
filds
xchg
mov
and
push
xchg
fbld
push
sub
dec
rcll
push
leave
ds
xchg
rorb
add
xchg
pushf
mov
adc
std
push
cwtl
mov
clc
or
insl
jnp
xchg
xchg
sbb
fwait
sub
xchg
mov
lods
cmp
inc
js
dec
movsb
mov
dec
cmp
lea
jmp
fsub
in
mov
in
mov
sub
cmovno
fwait
addl
or
mov
ret
or
call
pop
or
in
sbb
push
std
ss
add
cmp
adc
cld
movsb
xor
movsl
rcr
ss
repz
shlb
adc
pop
xor
test
jmp
mov
sbb
aam
sub
test
push
fildll
lods
fstl
lods
jmp
jmp
inc
adc
sets
xchg
lods
cmc
mov
int
not
sbb
imul
in
out
pop
jnp
inc
xchg
pop
pop
iret
cli
insb
cmp
add
xor
pop
icebp
mov
adc
push
lods
adc
fwait
ss
mov
mov
pop
lret
mulb
sahf
vmread
xlat
cmp
and
fwait
popa
int
cld
movsb
xchg
rcll
xchg
inc
pop
xchg
or
ss
les
ror
xchg
sbb
ja
pop
fistps
mov
mov
int
mov
mov
shrl
mov
mov
mov
mov
fsts
inc
dec
and
lret
pusha
and
sub
ficompl
scas
or
jae
shl
es
adc
mov
addb
cmp
data16
push
adc
xlat
adc
hlt
loope
pop
or
inc
icebp
push
push
dec
cmp
test
aas
dec
or
mov
int3
jle
xchg
jae
push
dec
pop
sub
pushl
jnp
test
jmp
sbb
push
add
jmp
push
out
cltd
in
sbb
dec
inc
xchg
loope
lods
movsl
out
fists
jle
in
scas
inc
movsl
mov
into
std
bound
cmp
stos
lret
pop
mov
clc
lods
nop
jp
and
and
or
mov
jmp
rorl
pop
push
xor
mov
sar
xor
jne
cmpsb
cs
outsb
pop
int
cmpsb
or
jge
cmpsb
je
pushf
stos
or
repnz
mov
mov
in
sbb
sub
shll
push
and
js
add
cmpsl
scas
aam
adc
out
sub
xchg
call
mov
or
xchg
out
jne
es
daa
pop
inc
jle
aaa
jl
test
inc
sub
in
cltd
jge
loopne
jnp
in
dec
shlb
dec
xchg
sbb
jo
pop
pushw
ja
sub
dec
push
sbb
mov
fiaddl
cs
imul
fldcw
outsb
jne
shlb
ficoms
std
add
jo
inc
arpl
scas
sbb
lds
push
leave
and
add
pop
andl
lock
popl
pop
clc
cmp
lret
pop
cli
mov
jnp
mov
clc
and
cmpsb
or
push
or
jg
scas
mov
std
stos
nop
sub
dec
and
or
pop
jle
daa
xchg
lret
fsubrs
xchg
cld
or
and
dec
lods
push
bound
xchg
adcl
stos
icebp
mov
in
dec
inc
or
das
and
xor
insb
ss
push
sbb
notl
sub
jp
pushf
cli
and
and
fwait
jbe
lret
xchg
push
es
hlt
add
mov
popf
xchg
sbb
dec
outsl
mov
cwtl
mov
fistl
cs
adc
push
rol
push
fwait
mov
jl
test
push
repz
jecxz
dec
in
js
and
dec
dec
add
and
jne
pop
nop
inc
fwait
push
jg
jb
in
lret
push
imul
adc
dec
xor
stos
xor
int
loop
inc
cmc
leave
pop
push
mov
repnz
pop
in
push
fnstsw
je
inc
pop
sub
mov
in
and
dec
flds
shll
push
and
mov
shlb
cmp
dec
jo
sahf
cmpsb
cmp
sub
in
xchg
cmp
leave
pop
cmp
pop
in
lret
sahf
shr
jae
xchg
or
das
xchg
xchg
in
fmul
pop
icebp
shrb
cltd
mov
test
aaa
inc
loopne
and
sbb
sar
out
stc
pop
xchg
cmp
in
and
out
jns
adc
mov
push
cmc
fisttps
gs
xchg
dec
pop
pushf
ss
je
and
hlt
es
adc
in
add
bswap
jp
or
lods
mov
mov
dec
mov
loopne
jg
or
insb
dec
stc
test
popa
scas
push
fldcw
dec
nop
cmc
cs
jp
dec
adc
pusha
xor
cmc
clc
push
aam
lret
add
ljmp
cmc
dec
push
mov
or
in
repz
addr16
xchg
adc
mov
rclb
cwtl
popa
stc
cli
inc
or
aaa
or
mov
pushl
adc
jns
outsb
cmp
das
scas
subb
push
orl
imul
cli
call
pop
movsb
fisttps
push
and
repnz
pop
mov
jbe
les
cmpsl
mov
out
das
les
fadds
icebp
mov
sahf
dec
test
test
sbb
call
push
int
push
mov
xchg
loopne
xlat
popf
jle
pop
mov
sbb
ds
inc
mov
testb
push
mov
mov
shrb
dec
mov
out
sar
add
std
dec
cli
fadd
scas
mov
or
pop
mov
mov
out
push
mov
jl
pop
mov
and
call
cmpsb
adc
mov
repnz
pushf
inc
xorl
mov
sahf
jmp
jp
int
insl
cld
inc
dec
fwait
leave
nopl
dec
adc
inc
mov
cmc
loope
mov
pop
inc
jecxz
push
iret
std
lret
inc
out
xchg
lock
adc
xchg
imul
das
xlat
mov
cmp
iret
push
mov
push
lods
jle
mov
lds
jg
cmpsl
jno
xchg
mov
cmp
push
or
mov
repnz
add
mov
push
push
in
cmp
lret
sarb
imul
mov
cmc
dec
jne
lds
ret
cmpsb
pusha
xchg
fldl
cmc
push
xchg
sub
loop
jmp
and
sub
int3
aad
dec
dec
sti
popf
add
sti
cmp
jbe
add
jae
or
pop
fwait
pop
and
inc
sub
stos
es
stc
inc
mov
stos
aas
hlt
mov
psubq
jne
loop
adc
sub
dec
jmp
imul
scas
int3
adc
decb
mov
mov
aaa
xor
mov
mov
mov
inc
stc
out
mov
lcall
and
push
push
inc
test
mov
jecxz
cmp
and
std
xchg
jge
pop
push
dec
adcb
pop
and
scas
pusha
dec
jg
inc
mov
out
and
out
push
movsb
jnp
packsswb
inc
jnp
loop
mov
out
add
and
fs
stos
jl
movsl
daa
pop
cmpsl
inc
adc
repnz
or
orb
iret
add
sti
pop
loope
in
pushl
mov
dec
mov
fstp
sbb
xor
imul
cli
push
hlt
cmp
jle
adc
notb
fucom
int3
mov
mov
testb
add
mov
nop
xor
xor
mov
js
ret
subl
sbb
xor
insl
es
or
rolb
loopne
mov
daa
dec
add
xor
mov
jne
cwtl
ds
add
ja
std
push
jae
adc
pop
cwtl
lcall
fldl
adc
sbb
cmpsb
cmp
add
pop
cmc
push
push
rorl
jns
nop
mov
dec
jge
int3
ljmp
dec
notb
dec
cmp
dec
cmp
xchg
int3
stc
mov
pop
fnstcw
mov
aad
icebp
testb
addr16
dec
cld
dec
stos
mov
or
mov
sub
dec
in
rcrl
in
xchg
dec
sub
xor
xchg
mov
xchg
cli
arpl
or
sbb
outsb
lea
mov
ja
push
sbb
adc
movsb
xchg
mov
pop
xchg
push
sub
pop
cmp
fiaddl
jns
out
outsb
addr16
add
xlat
addr16
add
add
mov
jecxz
imul
jb
dec
insl
adc
fwait
out
jns
cmpsb
push
lds
pop
lea
call
adc
outsb
mov
ret
imul
movl
adc
out
xchg
fwait
daa
sbb
movsl
rorl
pop
xor
inc
sti
std
and
push
shrl
jl
and
sub
pop
or
test
ss
xor
pop
sbb
incl
push
push
adc
lods
sbb
sbb
fwait
push
fwait
inc
cmp
push
out
mov
shlb
lret
and
outsb
push
loopne
sub
cmp
dec
outsl
popa
ljmp
xchg
aaa
sub
gs
shll
push
mov
lea
dec
xorb
dec
pop
pusha
stos
dec
xlat
loope
xor
xor
xor
and
add
cmp
xchg
lods
sti
xor
push
xchg
fistps
in
shrl
inc
xchg
shlb
out
and
inc
and
in
add
cmp
mov
loope
cmp
ret
ljmp
mov
sti
jo
in
div
pop
gs
fisttps
xchg
dec
adc
add
mov
shrl
push
movsb
cmc
pop
xchg
scas
out
popa
cwtl
mov
adc
push
stos
lock
out
insl
das
inc
and
lret
mov
mov
enter
push
cmp
xor
into
push
mov
aad
sub
out
and
or
or
mov
cmp
loop
outsb
or
scas
push
mov
les
sub
pop
jecxz
cmp
dec
pop
jl
sbb
adc
pop
idivl
xchg
or
pushf
or
sbb
dec
jecxz
push
and
fisubs
push
les
addr16
add
test
push
push
mov
push
flds
testb
clc
loop
repz
pop
xor
sbb
out
adc
xor
pop
sbb
shr
push
sarb
push
xor
sub
or
push
lock
cmp
pop
outsb
xchg
into
insb
push
push
dec
mov
and
int
xor
sbb
inc
mov
ret
inc
push
stos
mov
inc
sbb
lds
int
adc
les
or
adc
test
push
xchg
cmpsb
stc
push
mov
lahf
std
in
xor
in
mov
inc
mov
mov
xchg
xor
stos
iret
sarl
stos
xchg
pushf
or
and
pushf
cmpsb
sti
sub
nop
xor
xchg
xor
les
dec
jp
loopne
shll
or
xor
adc
loopne
and
fiadds
push
cmpsl
stc
xor
xchg
sahf
xlat
sub
pop
cmp
inc
jmp
push
adc
arpl
std
out
sub
outsl
cli
inc
cmpsb
jl
xor
xor
nop
cmc
dec
ds
loopne
or
pop
and
dec
xchg
push
int3
mov
and
iret
push
ret
xor
xchg
mov
test
stos
or
pop
push
mov
mov
shrb
xor
rorb
mov
or
ror
xchg
inc
jae
and
xchg
cmp
and
sub
sub
lods
mov
aas
nop
sahf
mov
notb
mov
dec
adc
ret
pop
test
and
js
imul
sarb
js
xchg
pop
cwtl
scas
xchg
xor
sbb
iret
mov
mov
pop
add
shll
lea
xchg
sbb
inc
push
aad
push
add
imul
sarl
mov
sub
cmpsl
add
sub
inc
inc
pop
rorl
mov
inc
cmp
out
addb
jo
outsl
fiadds
pop
imul
mov
push
jg
out
inc
cmp
xchg
nop
mov
mov
dec
adc
sbb
test
and
clc
cmp
daa
adc
pop
cmp
mov
pushf
push
jp
popa
adc
mov
subl
shrl
jecxz
ljmp
add
cmp
pop
jae
mov
push
push
nop
in
xor
je
adc
nop
xor
mov
sbb
outsb
adc
or
cli
loope
jno
shl
ds
jbe
sub
mov
cmp
xor
and
js
lock
out
repnz
icebp
push
in
sbb
shrl
dec
push
test
push
jl
shl
rorl
adc
push
or
mov
lahf
fbstp
mov
test
jle
or
jmp
sbb
mov
pop
xchg
adcb
jns
push
mov
or
mov
mov
adc
xor
nop
into
test
inc
add
arpl
cmp
pop
mov
filds
and
cli
nop
lds
inc
js
mov
sbb
in
aad
jl
arpl
jmp
loop
icebp
in
ret
pop
xor
mov
inc
xchg
sub
movsb
test
pop
gs
ja
test
sbb
or
icebp
xorl
mov
jne
mov
jge
xchg
incl
ss
out
movsl
or
jecxz
test
or
sbb
push
jl
lods
cmp
leave
dec
sahf
repnz
adc
fnstcw
dec
inc
pop
fstpt
inc
adc
sbb
pop
push
into
push
xchg
lods
pop
loope
lcall
pop
and
and
pop
popf
scas
cld
mov
cmpsl
mov
mov
lahf
jno
pop
cmp
pop
stc
pop
sti
xchg
mov
pop
mov
fmuls
out
jge
cwtl
push
fldt
xor
popf
iret
push
leave
mov
adc
andb
mov
mov
lds
mov
xor
or
pop
mov
cmpsb
mov
fs
cltd
mov
mov
jmp
int
jp
shrb
push
inc
xchg
inc
mov
sti
push
cmp
in
stc
lods
movlps
adc
mov
dec
in
fidivl
cmp
mov
adc
inc
xchg
faddp
lods
jle
icebp
inc
cld
imul
adc
bnd
ljmp
lret
out
xor
cli
mov
rcr
push
dec
and
dec
mov
adc
cli
push
xchg
int
pop
jo
mov
cltd
je
cmp
pop
scas
in
movsl
scas
das
loopne
push
dec
cmp
jns
sbb
lret
or
jnp
je
inc
mul
jl
push
cmpl
add
push
das
cli
ljmp
aad
mov
test
loope
stos
jg
fnstcw
dec
sub
mov
and
cmc
sub
sbb
inc
jmp
data16
push
push
repz
or
push
out
fnstenv
and
and
mov
sti
scas
loope,pn
je
bound
adc
pop
sahf
lods
mov
push
add
xchg
insl
pop
push
or
popf
inc
pusha
push
mov
test
cmp
inc
lcall
bnd
jbe
or
cmp
je
or
lods
lds
cmp
pop
lcall
mov
add
jl
in
jb
jae
mov
fldl
push
cmp
rcrl
cwtl
call
mov
dec
fildll
lods
mov
sbb
divl
dec
arpl
add
lds
js
and
xchg
or
or
mov
ss
ret
xor
inc
lods
lea
sar
and
cmp
xor
sbb
mov
add
addr16
pop
adc
hlt
adc
shl
mov
loope
push
fs
push
mov
xchg
int3
sub
inc
lret
into
nop
xchg
xchg
or
ss
int
or
das
loopne
test
inc
xchg
cmp
std
popf
dec
fisttpl
cmc
mov
movsb
inc
lock
fs
rorl
inc
cmp
es
inc
push
pop
sub
jo
pop
cltd
add
or
aas
add
clc
into
xor
std
push
lock
iret
xchg
in
rolb
aaa
inc
aaa
adc
cmp
xchg
add
int3
ja
enter
pop
mov
fnstsw
aaa
inc
inc
ficoms
push
mov
aam
pusha
push
in
out
jp
pop
mov
push
shlb
sub
leave
adc
mov
cmp
fcoml
test
lret
mov
mov
sbb
cld
mov
xchg
cmp
or
fwait
test
sbb
mov
outsl
jp
imul
cli
outsl
push
push
cld
repnz
push
push
mov
es
pop
push
xor
jae
inc
sbb
sub
movsl
jno
cmp
pop
loopne
movl
imul
push
adc
and
mov
jmp
hlt
nop
mov
cltd
pop
or
iret
mov
jo
bound
xor
pop
pop
cmc
jns
int3
and
adc
jo
lods
push
aam
mov
xchg
mov
mov
add
mov
lea
dec
inc
pop
cmp
std
xchg
dec
es
test
hlt
mov
ret
pmuludq
mov
cmp
into
lret
mov
add
mov
fiaddl
push
xchg
decb
mov
cmc
gs
xlat
and
jo
ret
test
mov
jge
mov
mov
xchg
ret
leave
in
paddusw
mov
pop
and
cmpsl
dec
dec
add
cmp
adc
clc
mov
xor
sbb
and
pop
xor
insl
shlb
mov
repz
in
int3
mov
into
mov
stos
lds
fs
pop
adc
dec
and
jne
dec
mov
shlb
into
mov
push
xchg
mov
insl
sbb
push
push
mov
sahf
mov
or
incl
xor
jmp
outsl
ffreep
add
mov
cmc
sub
jge
aam
jp
mov
mov
in
add
cmp
inc
lds
stc
mov
fs
and
xlat
mov
inc
lock
fldl2t
push
cmp
daa
dec
int3
jecxz
lock
dec
jae
pushf
cs
adc
loop
lods
adc
call
jno
xchg
movsl
pop
fidivl
dec
inc
mov
dec
mov
add
fldcw
push
in
fs
hlt
pushl
sahf
push
adc
cmp
push
mov
mov
shl
pop
mov
adc
xchg
mov
jp
inc
mov
or
and
ss
or
adc
add
dec
out
add
mov
out
fiaddl
mov
sbb
jo
imul
out
inc
scas
movsl
cmp
jnp
sbb
inc
mov
jo
in
and
mov
loopne
aaa
or
mov
arpl
fs
push
pushf
mov
push
int
push
roll
lods
das
xor
ja
mov
jecxz
xor
flds
js
inc
mov
lea
jbe
cmpsl
cs
ds
divb
mov
mov
inc
cmp
jae
push
sub
jne
bound
pop
sti
cmp
mov
hlt
sbb
mov
xor
push
pop
pop
push
mov
outsl
cld
outsb
push
jecxz
nop
and
lret
inc
and
stos
xor
mov
in
js
int3
fwait
leave
mov
jae
and
pop
enter
lcall
shll
fs
push
fnstenv
int
int
lret
hlt
or
push
sub
scas
push
sbb
cmp
mov
jns
and
adc
fbld
fwait
mov
add
repz
dec
add
cmc
rcrl
inc
stos
dec
sub
mov
xchg
not
adc
cld
shlb
pop
call
add
mov
data16
jnp
stos
stos
mov
push
loopne
loope
ds
sbb
dec
icebp
xor
dec
nop
scas
or
mov
adc
sub
sbb
pop
adc
pop
sahf
jp
fdivr
push
ja
mov
pop
inc
insb
aaa
lcall
arpl
js
movsl
dec
xor
add
iret
mov
test
int3
int
aas
cmpsb
icebp
push
mov
mov
fmull
hlt
pop
hlt
ss
mov
lds
mov
pop
repz
xor
aad
and
leave
mov
aam
xor
sub
add
lret
pop
outsb
inc
stc
icebp
lret
or
adc
jne
mov
dec
add
divb
andb
add
je
push
dec
jno
ja
push
fldt
stc
shrb
adc
jecxz,pt
jle
pop
cmp
and
xchg
pop
xchg
add
sbb
pop
add
xor
mov
inc
ficompl
shlb
std
ss
xorl
pusha
iret
dec
decb
lods
cmp
nop
adc
lahf
aad
xor
mov
addl
cmp
arpl
or
das
aam
fimull
push
mov
lods
outsl
arpl
jl
jae
jae
stos
jnp
fdivs
es
out
add
fisubrs
mov
stc
aaa
jne
add
pop
stc
inc
mov
push
lret
mov
inc
pop
rorb
mov
xor
xchg
inc
lods
hlt
imul
das
imulb
push
js
pop
aam
ds
pop
cmp
int3
ds
xor
mov
call
js
repz
outsl
ret
or
sub
cs
data16
sbb
test
dec
sarb
mov
push
cmp
les
push
mov
mov
stos
les
fsubrl
inc
ja
xchg
fistps
jnp
testb
sub
mov
imul
fsts
xor
inc
jo
fs
push
imul
insl
call
jo
pop
ret
dec
insl
out
in
fwait
mov
inc
lds
into
pop
adc
aam
sub
push
xor
pop
push
pop
call
cmpsb
pop
loopne,pn
push
cmpsb
insb
inc
repz
jbe
mov
fldl
out
imul
or
dec
push
les
sub
roll
mov
into
lock
test
xor
out
sbb
xor
jge
fidivl
xor
dec
test
frstor
cwtl
cmp
ss
aad
lds
adc
adc
mov
inc
iret
cli
les
adc
pop
aam
xor
lret
outsb
mov
push
and
cmp
mov
int
xor
jl
lcall
fldt
and
or
aad
lahf
xrelease
cmp
repz
repz
dec
ds
loopne
jecxz
dec
pop
push
es
test
dec
leave
push
jbe
cmp
mov
push
ret
pop
dec
mov
xchg
loopne
in
add
mov
test
ficompl
test
and
fwait
lcall
test
mov
cmp
xchg
add
fwait
scas
sarb
scas
fiaddl
inc
sbb
xchg
add
push
loop
cmp
scas
jns
mov
jns,pn
cmc
lds
push
mov
xor
out
arpl
jp
add
dec
inc
add
mov
xchg
fucomp
scas
in
fldenv
jo
sbb
into
pop
push
xchg
mov
mov
mov
aam
aam
rcrb
fwait
ss
bound
jb
adc
jecxz
mov
cmp
sub
push
outsb
test
sahf
shlb
scas
jmp
fsubrs
ret
push
outsl
xchg
sbb
mov
or
push
jg
in
cmp
pop
aad
push
jg
pop
cmp
adc
sub
fisttpl
push
call
jbe
jl
mov
add
push
and
jno
adc
clc
jmp
mov
mov
dec
loope
jbe
and
push
and
imul
mov
pop
pop
in
cmp
xchg
mov
inc
xchg
scas
ret
cmpsl
inc
push
mov
jle
mov
mov
aad
enter
leave
mov
or
adc
and
enter
jno
ffreep
fldcw
mov
je
fildll
shll
jmp
mov
adc
sahf
add
push
ja
or
cmpsb
das
pop
jno
push
sbb
repnz
scas
jle
popf
xchg
or
lahf
test
popa
pop
sub
test
xchg
jecxz
addr16
mov
mov
dec
clc
lds
adc
xchg
insb
cwtl
cmc
dec
or
cltd
sbb
pop
test
mov
or
add
or
mov
or
cmp
stos
and
mov
cmp
or
dec
aas
test
xchg
fisttps
sub
push
idivl
xchg
and
mov
rol
mov
ss
roll
sarl
fisubrl
insb
loopne
loop
cmp
addr16
xor
push
or
push
and
aam
pop
add
lret
flds
sti
ret
rcrb
sub
das
xchg
inc
hlt
pushl
jne
out
lods
inc
aas
sbb
cs
cs
sbb
stc
mov
popf
fs
pop
pushf
je
and
xchg
pusha
cmp
outsb
mov
add
xchg
inc
pushf
jl
dec
icebp
jbe
lret
popa
stos
mov
push
or
lods
mov
dec
sahf
add
test
pop
lret
xchg
add
mov
call
ss
mov
movsb
jne
add
into
inc
jno
inc
add
into
movsb
mov
push
sti
pop
mov
or
es
add
or
lahf
cmp
mov
fists
into
in
cld
js
xchg
inc
and
sbbb
xchg
mov
nop
pop
subb
mov
enter
mov
ja
or
outsb
mov
push
lahf
enter
nop
or
idiv
push
shrl
jo
mov
ret
arpl
bound
or
bndldx
inc
faddl
push
mov
push
aad
icebp
adc
push
sti
fsubp
das
ret
out
cld
push
xchg
js
xchg
int
dec
movsl
sub
cmp
aaa
inc
xchg
or
mov
addr16
insb
popf
lahf
jae
sbb
fstps
jnp
jo
sbbl
inc
setb
daa
clc
test
rcrl
test
inc
or
sbb
push
sub
test
nop
scas
add
ds
push
mov
scas
xor
xor
cld
mov
movsl
lret
pop
cmc
pop
inc
sub
fwait
jmp
aad
xchg
adc
xchg
and
popf
jne
mov
imul
xchg
in
sbb
stos
scas
fistps
out
xor
jmp
nop
mov
enter
lcall
mov
sbb
test
mov
hlt
mov
push
push
push
jb
in
shr
daa
xchg
cmp
int3
xchg
mov
xlat
mov
cmpsl
test
sar
mov
stos
add
add
dec
cli
enter
sbb
dec
sub
in
and
and
xor
pop
icebp
test
and
xor
mov
xor
leave
out
mov
out
shrl
cltd
aam
es
shrl
and
push
sub
xor
lret
insb
cmpsb
mov
lods
inc
daa
xor
ss
or
sub
add
jge
in
xor
loope
push
xor
adc
cmp
mov
pop
ret
es
xor
or
adc
aad
sub
inc
jbe
cmp
mov
cmp
xchg
mov
int
jno
jae
pop
int3
cmpb
mov
das
mov
imull
lea
lods
test
push
push
stos
mov
rol
ljmp
adc
popf
movsl
mov
xor
stos
add
cmp
mov
lods
ljmp
fwait
xchg
jb
mov
js
loop
pop
cwtl
lods
pop
test
negb
sarb
xor
stc
xor
push
rcll
dec
cld
sbb
sub
push
cmp
add
push
out
es
mov
inc
jo
pop
outsl
pop
add
je,pt
roll
outsb
lea
hlt
mov
sahf
jns
subb
outsl
and
and
mov
sahf
cmp
xor
shl
xchg
jecxz
lahf
jle
arpl
add
daa
inc
fmul
cmp
sbb
outsb
xchg
fs
cmpsb
pop
push
xchg
inc
inc
ret
push
lcall
arpl
scas
xor
ror
iret
jb
mov
lahf
fbld
cwtl
mov
dec
daa
pushw
es
jmp
sub
cld
sbb
test
xchg
cmpsl
test
data16
clc
int
lds
sbb
cmp
sub
arpl
mov
push
aad
mov
mov
pop
out
mov
xchg
xchg
inc
popa
adc
sti
adc
movsb
jmp
jmp
sbb
aad
add
and
daa
cmp
fsubrs
sub
rcrb
fisubrl
jb
mov
rorl
push
jge
ljmp
aam
hlt
in
mov
lahf
mov
icebp
out
cmp
push
jmp
mov
push
out
ds
sbb
sub
test
mov
push
arpl
imul
lock
dec
pop
loop
adc
enter
stos
mov
or
and
ror
imul
out
dec
ds
pop
xchg
push
jb
pop
outsb
cmc
clc
hlt
aam
push
cmp
mov
cmp
jle
fmuls
insb
ds
je
subl
shr
xchg
lahf
xchg
cmc
mov
xor
dec
sub
sub
jl
inc
fdiv
std
and
pop
ret
pop
or
loope
pushl
dec
in
adc
sbb
stc
ret
outsb
mov
std
mov
adc
incb
push
cmp
add
test
lods
push
mov
xchg
jno
fs
sbb
imul
enter
or
in
insl
fcmovnbe
sahf
pop
ljmp
cmp
xor
test
adc
xchg
mov
add
and
fdivrl
sbb
lret
xor
jbe
add
mov
jle
ss
adc
lock
lret
add
aas
dec
out
or
lods
pop
rcrl
sbb
pop
add
movsl
jae
imul
popa
fistpl
xchg
inc
and
push
mov
cmpsl
dec
jle
sbb
mov
add
jae
sbb
xlat
loope
jnp
and
and
inc
jns
cmp
hlt
jae
sahf
popa
dec
inc
sub
xchg
inc
insb
xor
pop
mov
push
rorb
scas
test
xchg
test
je
cmp
pop
cmp
fmull
test
and
add
je
adc
sbb
xchg
ret
dec
cltd
push
cmp
call
jae
inc
dec
and
rdpmc
pop
cmp
jp
int
and
stos
stos
mov
cltd
mov
cmp
mov
xchg
push
sbb
or
int
sbb
jb
ficoml
cmp
or
nop
fadd
jmp
xchg
add
aad
imul
std
mov
cld
mov
cld
dec
popf
sub
add
xor
shrl
rcrl
sbb
lock
aaa
mov
les
lock
loopne
mov
aam
loope
pushf
cmpsb
push
add
imul
sbb
outsl
rcrb
leave
jae
push
mov
mov
sarb
imul
rol
mov
cmc
jnp
movsb
pop
ljmp
fimuls
dec
mov
dec
mov
mov
int3
adc
sbb
fiaddl
sbb
aam
in
lahf
cmp
mov
push
cmp
jmp
aad
push
dec
jne
or
imul
clc
xchg
pop
adc
jbe
jle
shll
dec
rclb
jg
dec
aas
enter
shrl
aad
ss
mov
pushf
mov
xor
inc
scas
in
inc
bound
inc
cmp
mov
into
fs
repz
dec
ljmp
dec
jne
pop
adc
inc
jecxz
inc
pop
push
sub
sbb
pushf
daa
fldt
ljmp
mov
test
aam
ljmp
add
mov
fsubrs
pusha
test
or
pop
pusha
pop
fwait
out
cli
into
adc
mov
jmp
push
cli
in
mov
sbb
lret
and
mov
jl
cmp
nop
repnz
imul
ret
shrl
dec
pop
pop
inc
minps
ljmp
inc
mov
adc
les
cmpsl
pop
fcoml
sbb
inc
sbb
sbb
xchg
inc
dec
cmp
sbb
adc
mov
or
std
outsl
test
cmp
mov
iret
enter
ljmp
cmp
xchg
cmpsb
add
push
pushf
fsubs
jecxz
or
jne
stos
clc
inc
cmp
sti
push
mov
jbe
shll
or
pop
adc
jns
xor
popf
mov
xor
mov
lods
push
mov
mov
inc
fwait
sub
dec
lret
ret
mov
xchg
out
push
inc
or
lock
mov
jae
mov
xchg
vpunpckhbw
popf
jge
test
jae
mov
test
mov
.byte
xor
.byte
xor
cwtl
add
fiadds
and
mov
out
int3
cmp
adc
aas
sub
push
into
in
cmp
es
lods
jno
adc
pop
mov
pop
jbe
fwait
insl
xchg
sbb
adc
xchg
outsl
xor
int
sub
xlat
mov
int
rcrb
lods
push
fidivl
movsl
sti
sbb
mov
dec
push
and
enter
fcoml
fwait
es
jno
fs
in
add
or
and
inc
inc
bnd
cmc
cld
adc
in
mov
gs
push
push
out
xor
mov
mov
pop
push
or
hlt
cli
cmp
ficomps
ret
cltd
xchg
pop
xchg
sub
sbb
into
push
xchg
lret
mov
outsb
dec
xor
xchg
sub
mov
das
and
push
shl
cmp
mov
jge
xchg
inc
mov
xchg
mov
scas
nop
call
or
lret
fistl
mov
ljmp
cmp
inc
cmpb
sbb
lods
adc
push
mov
lds
mov
jae
addb
sbb
xchg
fldl
xor
add
push
bound
in
mov
std
jmp
das
mov
stc
bound
xor
dec
mov
pop
lea
outsb
push
loope
sbb
loopne
fsubs
pusha
xor
push
shrl
lahf
or
sahf
or
sbb
rolb
pop
jmp
test
inc
push
test
insl
div
mov
and
mov
in
insl
cmc
push
stos
int3
movsl
push
jl
adc
push
add
dec
mov
dec
call
and
andb
mov
xor
loope
jns
sbb
mov
test
je
sub
inc
hlt
xchg
test
jbe
les
js
int3
dec
imul
and
popa
or
in
in
cwtl
xor
roll
push
mov
cmp
mov
shrb
rcr
pop
mov
cwtl
mov
hlt
xchg
jg
cltd
push
fnstenv
imul
mov
inc
orb
movsb
fidivrs
sbb
push
imul
cwtl
in
fmuls
push
lret
inc
lahf
or
ss
ss
in
mov
or
ret
adc
push
sbb
shlb
iret
flds
ss
sbb
iret
adc
aam
ficoml
mov
sarb
hlt
sbb
adc
iret
gs
imul
ret
and
movsl
xchg
sub
inc
ret
mov
popl
sub
xor
xchg
and
pusha
out
jo
movsl
jae
outsl
call
rolb
xchg
push
jge
std
es
jae
lcall
jnp
mov
xchg
mov
std
mov
mov
push
and
pushf
and
lret
ret
into
xchg
adc
jp
aaa
pop
pop
add
hlt
rorb
and
in
xor
push
into
or
fmuls
xchg
fnstsw
fnsave
jbe
sti
sti
pop
pop
mov
mov
push
ljmp
dec
cmpsb
dec
icebp
cmp
loop
sub
sub
aas
inc
testb
vmptrst
mov
sub
popf
mov
fldt
pop
test
sbb
outsl
xor
xchg
xorb
inc
call
and
test
cmpb
xchg
pop
mov
sbb
jnp
dec
jmp
jno
sbb
xchg
and
stos
sbb
lahf
mov
dec
gs
out
cmp
iret
lods
loopne
loope
in
fs
jp
pop
cs
mov
sbb
cmp
mov
jl
scas
imul
lods
fcomi
mov
movsb
mov
fs
fs
insb
or
mov
mov
inc
mov
sti
xchg
imul
sarl
mov
mov
jge
sub
xor
ret
stos
sbb
cwtl
cwtl
fstpl
push
jp
sbb
xor
adc
adc
sub
xchg
lret
cwtl
adc
jnp
or
data16
pop
das
scas
cmp
stc
cmp
xor
adc
dec
repz
inc
test
hlt
jmp
dec
lret
xchg
sbb
dec
jo
leave
xor
int
mov
loop
mov
or
dec
cmc
cld
mov
and
fs
adc
pusha
fld
pop
mov
push
mov
cs
mov
cld
jo
shlb
sub
lock
stos
or
jp
lds
lret
pushf
mov
adc
pushf
dec
jo
push
shll
dec
xchg
imul
lds
call
mov
loop
notb
push
dec
add
jb
arpl
xchg
xor
mov
push
sbb
jno
out
cmp
mov
enter
ja
jl
and
std
cmp
ja
or
fnstcw
mov
add
xlat
inc
js
jnp
push
cmpsl
stc
mov
iret
ja
cmp
aas
inc
inc
cmpsb
sub
and
push
or
xchg
push
sub
call
or
pop
cmc
shll
pop
mov
imul
jne
sub
mov
rcr
jmp
mov
pop
movsl
sub
inc
popa
loop
cmp
mov
push
jns
icebp
sub
outsb
ljmp
jg
es
out
mov
push
jecxz
or
pop
jmp
lods
bound
push
icebp
mov
xor
push
adc
jge
pop
bound
mov
adc
sbb
nop
mov
enter
adc
iret
les
add
cwtl
cmovge
into
inc
daa
xlat
lcall
cmp
stc
dec
sub
test
mov
push
sbb
xchg
xor
cmp
or
lods
and
aam
dec
xor
cmpsb
aas
inc
mov
pop
loopne
data16
ds
mov
outsl
push
sar
adc
outsl
ss
mov
xor
test
shrl
jmp
stos
push
push
lods
mov
xor
test
out
sub
outsb
aaa
jns
mov
add
scas
scas
xchg
sub
dec
xor
orl
sub
mov
shrb
ds
cmp
inc
adc
pop
jmp
rcl
stc
pop
sti
in
mov
repnz
aad
pop
inc
and
mov
push
test
movsb
cmc
aaa
fdivl
xchg
mov
cmpsb
pop
adc
inc
cmp
fildl
bound
dec
data16
lds
mov
rcrb
stc
dec
ja
cmpsb
clc
jno
cltd
and
fucom
das
sub
movb
sbb
stc
dec
push
imul
dec
or
bound
xlat
hlt
xchg
xor
mov
jbe
aam
adc
std
mov
mov
inc
push
test
xor
ret
daa
jbe
pop
inc
or
orl
js
cmp
xchg
cli
sbb
dec
inc
inc
lcall
inc
fldenv
xlat
ret
sub
int
addl
sub
inc
imul
sub
sub
lods
push
jne
add
inc
cmp
xchg
ret
in
sbb
pop
shll
movsl
and
imul
es
jb
push
cmpl
sbb
test
inc
clc
and
push
mov
pushf
pop
jb
jecxz
test
dec
out
mov
rcr
xor
mov
lods
mov
push
gs
mov
arpl
outsl
int3
cltd
mov
int3
cmp
stos
mov
popf
sbb
push
cs
mov
sbb
mov
mov
sub
sub
push
mov
ja
in
lret
cmp
jnp
pop
adc
movsl
out
adc
jne
out
sbb
and
dec
cmc
push
adc
popa
sbbl
movsl
pusha
adc
xchg
test
loope
add
imul
and
jle
iret
mov
mov
sub
imul
notl
scas
add
movsb
lret
push
jmp
data16
icebp
mov
cmpsl
test
ds
fldenv
lods
cmp
xor
jne
imul
dec
and
out
xor
fucomp
mov
lret
pcmpeqw
pop
sbb
cmp
dec
faddp
pop
test
sub
enter
lret
and
adc
push
mov
jmp
mov
sti
std
push
call
rcll
inc
call
lods
insb
pushf
sbbb
sahf
insl
aam
mov
mov
lods
jb
out
lea
fs
cld
push
stc
enter
push
sarb
je
ficompl
cwtl
and
push
jecxz
cmpsl
jle
inc
stos
idivl
push
mov
jo
bound
test
ret
or
movsl
hlt
shll
add
aas
jb
jl
cmp
das
rcr
das
add
push
mulb
inc
push
jg
sub
inc
pop
sbb
or
sub
ja
aas
cwtl
or
int3
fisubrl
leave
addr16
int
sbb
fcom
pop
imul
cmp
lcall
dec
fidivrs
xchg
fucomi
cltd
mov
pop
adc
lahf
jnp
add
jp
push
lret
nop
mov
or
push
cltd
lar
ljmp
jl
jnp
pop
adc
mov
jno
sarl
in
adc
and
ja
into
xor
inc
inc
stos
je
cmpsb
mov
push
push
fwait
adc
in
adc
leave
dec
mov
insb
call
int3
pushf
fdiv
dec
test
pop
movsb
pop
lcall
seta
mov
cmp
outsb
adc
inc
test
lock
dec
mov
lods
xchg
or
or
jg
fs
xor
sbb
insb
lods
sbb
loope
mov
or
fsubs
inc
loop
sub
les
or
pop
inc
lods
rcrl
mov
push
pusha
pop
cmp
lret
jae
insb
dec
imul
rolb
int3
ficomps
dec
mov
test
call
cmc
pop
sub
sub
sbb
push
push
repnz
pop
sbb
mov
or
sbb
loopne
sbbb
push
fdivs
or
cmp
pop
mov
mov
xor
divb
lds
pop
sti
adcl
pushf
into
lret
inc
roll
inc
mov
ja
adc
pop
cmpsl
cmp
push
les
ds
popa
ret
push
mov
rorl
xchg
push
sub
sub
call
jbe
leave
cli
dec
movsb
lds
pop
xchg
inc
cmp
add
sbb
push
mov
mov
sbb
push
loope
jl
ret
push
mov
or
xor
xchg
lret
xorb
jnp
mov
and
mov
shrb
jnp
repz
push
dec
imul
cmp
repnz
cld
mov
and
jl
jp
and
lock
and
fldcw
push
sbb
lret
push
sub
addr16
pop
fcoms
bound
loop
movsb
xchg
jae
int3
sub
movsb
sahf
dec
insl
mov
dec
mov
nop
xchg
out
lahf
testl
and
dec
sbb
leave
cwtl
inc
add
xor
mov
dec
in
ljmp
mov
outsb
mov
out
mov
xchg
lea
dec
scas
cmpsl
mov
es
and
stos
icebp
in
sti
insl
xor
sbb
in
call
and
fisubl
pop
aad
call
lcall
inc
push
and
in
sub
pop
std
fiadds
xor
dec
cmpsb
dec
xchg
ljmp
pop
sbb
xorb
roll
jbe
lret
pushf
imul
shll
push
js
push
inc
jge
addr16
fisubrs
mov
in
std
jns
test
sub
add
dec
xchg
mov
mov
rcrl
sub
dec
fiadds
test
inc
pop
iret
je
cmp
sarl
cld
aaa
sub
movsl
inc
out
sub
aad
mov
mov
and
cmp
aaa
pop
pop
jb
jmp
mov
dec
fs
and
cmp
notl
dec
xchg
sbb
mov
ja
pop
gs
addr16
add
cmp
jb
sbb
rolb
cmp
sahf
xchg
jecxz
mov
adc
xor
jnp
cwtl
or
fwait
les
and
pop
out
or
popa
or
xchg
test
cwtl
fbstp
ror
negl
jbe
xor
lea
mov
shrb
adcl
insl
pop
push
movl
adc
or
xchg
icebp
xchg
xlat
cmp
mov
xor
test
mov
sbb
dec
imul
movsl
std
test
sbbl
and
mov
cmpsb
push
or
aas
pop
lock
xchg
sysret
mov
mov
test
cli
add
add
adc
pop
loope
pop
testl
xor
jns
outsb
pop
xorb
imul
pop
add
mov
mov
push
notl
push
les
arpl
out
js
cli
sbb
or
stos
dec
or
pop
jge
pop
jae
sbb
inc
ljmp
dec
cltd
rcl
cmp
enter
lock
xchg
xor
mov
mov
xchg
jp
jno
out
pop
fstpl
frstor
enter
popa
leave
cmpsb
and
dec
mov
sbb
lea
mov
cmpl
or
cwtl
push
aas
pop
outsb
cmp
mov
fwait
fwait
lds
call
loop
adc
idivl
mov
pop
sbb
insb
push
dec
dec
std
loopne
or
fnsetpm(287
xlat
sub
mov
adc
into
sbb
imul
and
pop
fimuls
mov
leave
inc
dec
push
outsb
pop
ret
mov
shrb
mov
xchg
pop
mov
mov
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
shlb
int3
adc
div
fs
xchg
movzwl
pop
mov
add
mov
push
mov
pop
call
sti
sbb
xlat
les
cs
pop
gs
pop
pushl
mov
pop
push
mov
pop
sub
mov
xor
push
call
mov
test
cmpsw
push
std
repnz
mov
pop
pop
xor
mov
push
jnp
call
cli
stos
or
push
and
add
mov
jb
sub
sub
mov
cmp
jne
mov
cs
pop
pop
cli
jb
popf
add
hlt
in
lods
pop
jb
lock
sbb
xchg
inc
je
cmp
mov
rclb
xchg
add
stc
icebp
cmp
xchg
test
adc
or
cs
cmp
clc
addb
adc
cltd
jne
mov
add
pop
jne
lds
mov
imul
pop
xchg
dec
fisttpll
ss
mov
mov
lea
cwtl
adc
push
inc
pop
pop
addb
jae
jle
out
adc
add
or
mov
dec
call
aad
fisubl
xor
sub
clc
mov
pushf
ljmp
loop
movsl
aas
mov
icebp
inc
ljmp
pop
inc
lahf
int3
out
xchg
dec
jl
mov
aas
shlb
andl
aam
inc
lahf
xor
cmp
xchg
imul
int
pop
int3
add
push
movsbl
and
ret
mov
jb
iret
inc
and
lahf
andl
mov
pop
push
lcall
cmp
mov
sub
inc
dec
aaa
pop
imul
das
jae
xor
int3
add
insl
fmull
shll
push
or
pop
adc
mov
mov
xchg
inc
lahf
int
jge
cmp
jns
cmp
sahf
hlt
jmp
add
ja
mov
fmulp
xchg
fimull
inc
mov
loop
add
or
test
add
syscall
out
es
in
xchg
add
test
xchg
stos
es
jb
fadds
cs
adc
es
notl
pop
cld
lret
addr16
es
arpl
bnd
pop
cmp
push
test
cs
loope
and
dec
test
mov
and
mov
test
adc
and
adc
mov
test
mov
add
loop
nop
test
xchg
sahf
and
adc
push
hlt
adc
or
xor
xor
shr
push
jne
mov
gs
divl
jmp
lods
and
adc
push
data16
rcrl
mov
in
xor
mov
enter
sub
adc
sbb
ja
mov
insb
pop
sbbb
sub
in
jecxz
sbb
repz
repz
mov
xor
mov
sub
or
and
mov
and
fists
cmpsb
and
rclb
lret
cmp
sub
inc
imul
call
mov
sbb
inc
loop
repz
push
push
insb
ret
mov
popa
lret
subb
insb
dec
ds
mov
loop
icebp
adc
insb
out
add
out
aad
cmp
in
push
dec
sbb
insb
dec
adc
iret
icebp
adc
insb
out
and
sbb
insb
bound
push
insb
bound
ret
aad
mov
rcrb
mov
insb
lods
mov
pusha
sbb
sbb
out
add
popa
sbb
arpl
nopl
push
mov
mov
insl
xor
mov
xor
insb
sub
insb
imul
bound
les
jl
bound
in
xor
push
insb
out
mov
or
mov
ds
insb
sbb
into
mov
sbb
and
insb
aam
pop
adcb
insb
cmc
xchg
cmp
bound
in
xor
push
insb
into
rep
insb
bound
push
jnp
jmp
jne
sbb
insb
cmc
sbb
jne
pop
push
insb
cmc
fmuls
jge
mov
int
cmc
fcomps
out
or
lret
cld
out
xchg
inc
push
jl
nop
mov
sbb
sub
insb
out
sahf
xor
outsb
sbb
or
out
xor
outsb
push
lock
pop
pop
bound
jecxz
andb
push
sub
or
or
cltd
jne
sbb
insb
mov
nop
mov
out
and
cmc
xchg
popa
push
out
xchg
inc
push
outsb
nop
adcb
push
jno
adc
dec
out
aam
repz
push
jnp
jmp
jne
sbb
insb
cmc
fsubs
ljmp
les
les
scas
out
data16
aam
fwait
or
addr16
push
or
push
insb
bound
dec
imul
push
inc
out
push
out
inc
out
test
fildll
or
in
nop
pushl
ljmp
outsb
jbe
sbb
fisttpll
or
xlat
adc
pop
fdivs
test
outsb
jbe
sbb
jno
dec
imul
in
test
pop
clc
and
pop
loop
xchg
rdmsr
jl
adc
imul
idivb
daa
dec
repz
sbb
jge
lock
jnp
cld
fsubrp
mov
scas
and
sbb
insb
insb
imul
idivb
daa
dec
repz
sbb
jo
push
xchg
and
push
insb
insb
imul
idivb
daa
movsl
repz
sbb
jo
jnp
iret
jno
or
inc
imul
xor
aad
push
and
push
insb
bound
pop
loop
xchg
rdmsr
jl
adc
repz
idivb
mov
pusha
sahf
or
insb
imul
sarb
iret
jbe
or
add
pop
call
out
or
add
pop
pop
mov
push
outsb
sbb
insb
out
adc
mov
fisubrs
mov
out
add
pop
pop
mov
push
dec
sbb
insb
ror
lock
popf
or
mov
sbb
insb
out
sub
bound
cmp
push
shr
ret
flds
out
jno
add
insb
bound
into
mov
ljmp
test
insl
sbb
jge
jbe
insb
bound
or
sbb
xorl
mov
sub
sbb
insb
out
out
repz
cmp
loope
sbb
sub
inc
dec
xchg
out
es
xor
push
jno
sub
or
xchg
movsb
jo
sbb
sub
fbstp
clc
fwait
push
hlt
cmp
icebp
repnz
or
xlat
or
mul
dec
adc
xor
lahf
aas
insb
and
mov
bound
push
insb
bound
push
insb
bound
push
insb
bound
push
insb
bound
push
insb
bound
push
insb
bound
push
insb
xchg
sbb
cmp
sub
push
lds
push
insb
bound
push
insb
bound
push
insb
bound
into
insb
bound
push
insb
bound
push
insb
bound
pop
insb
bound
push
insb
bound
push
insb
bound
push
insb
bound
push
insb
bound
push
insb
bound
dec
adc
xor
mov
inc
sahf
repz
jge
add
fwait
movsl
aaa
idivl
nop
dec
xor
jge
fnstsw
ss
sub
adc
pop
push
mov
mov
mov
push
jp
add
jmp
dec
ret
xchg
push
es
cmp
sahf
adc
repz
popa
push
cmp
shlb
pop
push
fwait
andl
outsl
add
dec
outsl
lds
fdivl
cmp
push
jbe
and
ds
out
mov
jnp
out
pop
mov
stos
push
fs
cmp
idivl
jne
pop
sub
xor
mov
or
nop
mov
mov
push
or
mov
add
popa
jp
out
and
add
add
add
fimull
add
sldt
add
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
fimull
add
add
fimull
add
fimull
add
fimull
add
fimull
add
fimull
add
add
add
fimull
add
add
add
jb
fs
insb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
addb
add
sub
sldt
add
add
sldt
add
add
add
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cmp
add
loopne
mov
out
or
jo
xchg
adc
mov
inc
adc
inc
and
and
sub
sub
adc
add
sbb
push
hlt
inc
nop
push
sub
mov
fiadds
mov
adc
or
sub
ss
adc
or
add
jb
outsb
xor
add
push
and
xor
or
test
sbbl
add
arpl
and
xor
cmp
xchg
and
in
test
cmp
xchg
je
mov
in
jb
cmp
pusha
add
xchg
push
enter
dec
jb
cmp
add
cmp
xor
xor
cmp
cmp
sub
clc
and
push
xchg
fmul
fsub
aam
rcrb
push
add
or
subb
add
or
add
fdivl
mov
push
xor
pop
jmp
sub
xor
and
xor
sbb
sbb
adc
movups
or
add
push
mov
adc
push
int3
push
call
add
test
jne
xor
rolb
lret
mov
add
or
mov
add
jge
rcrb
sbb
add
fs
sahf
aas
mov
xor
add
mov
cmp
shll
cmp
fadds
xchg
test
add
dec
mov
mov
push
or
cltd
push
add
aas
adcb
xor
adc
inc
cmp
add
mov
stc
push
xchg
push
adc
mov
nop
push
jg
add
aam
pop
pusha
xchg
add
inc
push
jmp
add
mov
jns
adc
jne
push
add
call
xchg
pusha
jg
add
inc
add
jmp
dec
add
dec
cmp
aam
sbb
fildll
pop
add
loope
call
test
pop
pop
pop
movsb
add
je
in
mov
xor
mov
jge
sbb
add
call
fmul
ja
and
jne
mov
ss
or
arpl
stos
cmpl
inc
add
jmp
xchg
or
push
jb
ja
into
je
fbstp
push
iret
incb
sbb
sub
and
stc
push
jl
pop
xchg
adc
sar
loopne
jbe
xor
sub
or
add
jle
gs
sbb
pop
bound
fisubrl
into
dec
adc
pushf
or
jmp
add
adc
mov
jae
push
push
sbb
nop
out
cmp
or
test
cmp
or
sarl
fs
adc
and
mov
cli
call
clc
jp
adc
pop
flds
cmp
add
popa
push
mov
push
push
push
lds
jns
lret
and
cmp
movl
lahf
in
add
dec
adc
dec
in
adcl
or
pop
push
data16
push
nop
sbb
clc
lds
jns
adc
addb
push
and
repz
inc
push
out
ja
dec
cmp
mov
je
add
mov
adc
packssdw
dec
xchg
or
movl
filds
xor
xor
jle
add
sub
jmp
and
xchg
sbb
adc
je
add
jb
ljmp
aaa
add
xchg
ret
setae
loop
clc
mov
mov
dec
sbb
or
dec
inc
cmc
xor
pop
je
adc
add
xchg
nop
jbe
add
fstp
add
call
cmpb
add
adc
sub
add
cmpsb
jmp
nop
xor
mov
mov
or
xchg
imul
xor
mov
repz
push
es
flds
add
pop
leave
clc
divl
add
cmovno
sbb
jae
fisttpll
loope
jge
add
addl
add
xchg
enter
add
pusha
shll
movl
out
shlb
cmc
pop
aam
cmp
jg
pop
sub
jl
xlat
push
push
add
push
add
push
add
inc
arpl
test
leave
or
fiadds
call
and
int3
sbb
cmpsl
int
add
cmp
lahf
add
pop
fisubrs
adc
fs
mov
sub
cmpb
xchg
add
bound
jne
test
push
add
jle
add
sub
pushf
es
imul
mov
xor
add
enter
add
mov
or
rorb
leave
mov
mov
orb
pop
pushw
lahf
dec
jo
dec
sub
sbbl
mov
cmpsb
jp
inc
inc
and
sub
imul
adc
inc
adc
movl
es
lds
sbb
or
jnp
push
out
cmp
fiadds
jae
ror
push
je
roll
mov
jmp
int3
inc
mov
mov
test
fcmovne
pop
mov
ret
nop
mov
cmp
mov
adc
mov
repnz
cmp
inc
add
xchg
add
pop
mov
pop
addl
push
dec
add
xor
add
gs
jle
and
pop
add
popa
mov
sahf
jb
mov
adc
push
sbb
mov
push
push
sbb
popf
adc
leave
add
hlt
inc
sub
add
jo
sub
add
bound
add
mov
mov
adc
pop
xchg
sub
jmp
adc
in
cs
pop
les
add
out
xchg
test
add
movsb
shlb
dec
sbb
loopne
lock
adc
add
ja
and
add
push
cmp
in
out
add
std
pop
add
xor
adc
add
lret
xchg
sbb
pop
push
or
and
fistpl
loopne
push
sbb
jl
orb
subl
or
fists
add
cmp
jg
add
test
jns
sbb
add
xchg
inc
add
rclb
jmp
dec
pop
push
fimull
inc
sbb
pusha
cmc
mov
adcb
popfw
mov
sub
shll
out
or
sysret
push
ret
cli
lock
sahf
add
mov
push
mov
sub
xchg
sbb
add
cli
adc
jl
movl
add
and
mov
repz
leave
enter
mov
or
sbb
xchg
sub
lock
loop
xchg
in
pop
adc
adc
add
lods
cmp
or
jl
add
sub
or
push
dec
or
cmpsl
ret
add
mov
dec
dec
nop
xor
add
je
sub
add
mov
mov
add
xor
test
lods
and
inc
testb
cli
mov
jb
or
cmp
pop
push
add
mov
dec
mov
or
add
or
fs
pop
mov
and
and
clc
mov
and
add
jbe
js
push
xor
add
mov
incb
dec
sub
clc
xchg
or
pop
dec
cwtl
aas
pop
fdivrl
add
push
repz
xchg
scas
pushf
les
cli
jmp
cmp
push
xchg
xchg
les
inc
psubb
inc
out
adc
sub
add
in
jns
push
xor
aad
sub
mov
jecxz
stos
adc
pop
jo
cmp
adc
mov
or
pusha
add
dec
jmp
fisttps
sub
roll
rcll
cltd
dec
cwtl
aaa
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
cs
push
add
pop
adcb
ljmp
bound
sub
xor
push
mov
adc
pop
scas
push
xchg
imul
inc
lea
pop
cld
ret
or
mov
inc
addb
sbb
fadds
es
sub
add
and
add
and
aas
movb
xor
test
mulb
ffree
xor
insl
fistps
outsl
cmc
xor
dec
add
adc
iret
aam
icebp
or
add
xor
les
and
pop
nop
cmp
or
mov
loope
push
cs
sti
ret
pusha
dec
or
mov
cmp
xchg
pop
add
push
addb
add
ljmp
mov
mov
jne
pop
ja
add
insb
add
jnp
xchg
sbb
xor
jg
mov
jmp
pop
sub
add
in
shll
push
add
fmuls
dec
xchg
sbb
add
jp
idivb
jmp
sbb
sub
cmpl
cwtl
test
cmp
mov
les
xor
fnstcw
add
repz
into
xor
push
dec
sbb
mov
gs
pop
add
xchg
xor
jmp
adc
inc
mov
add
imul
dec
jle
pop
fs
xchg
push
lea
add
mov
dec
call
cli
aad
leave
bound
sub
xor
and
mov
push
add
sti
shrb
add
xor
add
test
xor
jge
jns
and
add
cmpsl
add
jne
imull
and
aas
add
popf
add
sahf
dec
lret
cmp
inc
jbe
mov
test
subb
or
push
imul
nop
add
and
adc
sarb
loope
sub
jo
push
push
inc
or
in
xchg
sbb
push
mov
xor
sbb
xchg
inc
jmp
jnp
pop
mov
andb
pop
test
and
mov
cmp
cli
sub
pop
sub
lock
in
add
mov
add
cmc
test
push
test
jne
movsb
inc
dec
inc
inc
add
jns
cwtl
fs
roll
ror
pop
push
add
inc
mov
stos
pushf
push
add
pop
addr16
notl
loopne
xchg
int3
xor
or
dec
pop
sub
cmp
push
adc
mov
or
cmpsb
movsl
lcall
and
cmp
out
aas
dec
push
addb
mov
test
faddl
orb
dec
cmp
cmp
jb
mov
inc
add
orl
ljmp
js
mov
mov
push
lds
push
or
add
push
mov
xor
mov
imul
pop
pop
sub
xor
out
dec
adc
jo
cmc
xlat
shl
mov
and
enter
add
mov
popf
mov
add
sar
push
jne
shl
sub
xchg
in
jge
jge
js
pop
enter
imul
pop
testb
add
stos
add
push
sahf
aam
test
mov
fldl
imul
add
dec
jne,pt
and
subb
add
daa
fsubl
jl
add
ret
adc
repnz
push
xor
mov
sub
sbb
shll
dec
add
xlat
jmp
add
and
js
xchg
ret
cmc
in
push
adc
sbbl
cwtl
add
jmp
xchg
sahf
sub
rorl
dec
inc
ret
movl
cmp
xor
loop
imulb
add
notl
and
add
scas
stos
mov
add
add
arpl
fs
cli
jmp
sbb
adc
pop
repnz
mov
les
pop
and
adcl
adc
add
dec
ss
pop
sbb
xor
rolb
ret
push
hlt
dec
lock
add
xchg
test
adc
xchg
call
inc
pop
cld
or
mov
xchg
and
and
mov
adc
xlat
mov
cmp
mov
push
shlb
xchg
jne
add
leave
je
xchg
jl
add
push
mov
and
add
sbb
and
fdivr
jle
push
cmp
adc
rcl
cmpsb
faddl
add
or
scas
add
add
sub
mov
ja
orl
add
int3
enter
iret
ror
into
sbb
lret
fcmovu
fstp
push
fnstsw
add
jecxz
in
nop
pop
push
add
test
cmpl
add
shlb
add
popl
push
adc
psubb
mov
mov
adc
rclb
fcom
push
cmp
or
ja
je
pusha
sub
add
rep
clc
sbb
shlb
xor
cmp
push
sbb
push
std
sbb
add
movl
or
les
or
jmp
decl
mov
inc
shl
cmp
jbe
pop
add
push
jnp
loop
pop
add
out
pop
and
sbb
inc
adcb
add
bound
adc
lock
cs
shrb
pop
cmp
jl
popa
pop
into
and
add
adc
out
add
lret
sbb
ret
js
loopne
push
push
add
and
mov
cmp
repz
push
add
push
push
cmovnp
jmp
aad
and
loopne
scas
sbb
jb
inc
jae
pavgb
sarb
out
repnz
hlt
add
imul
pop
fs
loopne
add
add
pop
cmpb
or
ffreep
mov
insb
push
add
fstps
mov
std
fistps
push
sub
adc
sbb
xor
pop
psubusw
mov
add
jb
cmp
enter
pusha
shrl
add
jp
addl
addb
dec
leave
mov
push
test
pop
loopne
and
push
daa
and
push
hlt
or
imul
adc
mov
sbb
addb
cmp
jne
dec
clc
adc
loope
pop
lret
sbb
ret
dec
inc
loop
push
out
push
cmp
lock
je
mov
cmp
jne
xor
xchg
dec
add
add
mov
push
inc
or
js
add
mov
adc
mov
sbb
add
mov
push
xchg
adc
data16
mov
sbb
add
xor
add
cmovno
mov
mov
cmp
dec
push
adc
inc
es
outsl
add
xchg
mov
fistl
xchg
dec
add
clc
pop
sbb
movl
jge
movb
cli
mov
pop
pop
inc
mov
stc
adc
out
test
push
mov
xchg
jnp
add
mov
adc
dec
jne
inc
lods
add
and
jmp
xor
xchg
jae
arpl
mov
mov
push
inc
cmp
xlat
clc
int3
mov
add
sub
shlb
and
or
popa
rcrb
add
psrad
lods
sub
dec
test
dec
int3
and
add
jmp
or
shlb
sub
clc
call
add
add
fcoms
xor
jne
dec
xchg
aam
jl
add
xor
dec
add
jle
js
fldcw
fidivs
add
outsb
lds
mov
mov
xor
je
xchg
popa
jb
add
mov
or
adc
adc
add
or
mov
add
rcl
jge
add
cli
sub
shr
add
inc
mov
dec
adc
repnz
push
cmp
add
add
add
je
nop
xor
push
clc
in
ss
add
mov
or
dec
mov
adc
add
dec
sbb
pop
cld
or
mov
lock
add
push
rolb
xor
sub
add
sbb
nop
jmp
mov
fneni(8087
push
arpl
je
add
sub
add
inc
cwtl
repnz
dec
pop
push
mov
cwtl
mov
mov
jo
dec
pusha
inc
mov
cld
push
bound
push
cmp
inc
call
add
adc
popa
mov
xor
mov
sbb
inc
hlt
add
lret
or
add
lods
and
add
ljmp
push
cwtl
loopne
sub
jno
in
and
lahf
clc
add
or
sti
push
mov
add
inc
push
push
inc
loopne
add
inc
outsl
jb
popa
cmp
outsb
cmp
inc
gs
jo
imul
rolb
push
add
jae
push
mov
xchg
add
cmp
lods
xlat
pusha
jo
xor
and
inc
scas
cli
in
cmp
fadds
call
pop
adc
ljmp
push
jne
ss
dec
faddl
push
pop
call
inc
pushf
inc
divb
push
mov
push
pop
imul
add
sbb
or
sets
add
add
loopne,pt
add
and
add
mov
xorb
cld
dec
add
xlat
stos
mov
and
fisttpl
pop
call
dec
loop
mov
push
add
jo
sbb
jmp
cmp
cs
add
jae
testb
push
sub
orb
jg
add
dec
jne
inc
jecxz
push
add
leave
adc
cmpl
hlt
js
inc
add
ret
dec
mov
test
xchg
add
dec
push
sbb
sarl
add
movl
clc
or
mov
ret
pop
add
sub
lock
add
notl
adc
adc
add
sbb
call
add
faddp
xchg
inc
out
adc
add
loope
push
lahf
or
add
push
mov
popl
adc
pop
adc
jle
add
xchg
imul
add
or
add
or
pop
inc
lock
push
or
adc
je
add
sbb
pop
and
xor
inc
and
adc
push
clc
xchg
sub
add
in
lods
mov
out
stos
push
push
call
adc
add
adc
imul
add
pushf
xor
sub
push
cmc
add
push
cmp
or
or
jbe
add
or
mov
jae
jmp
mov
movsb
adc
add
cmp
cmp
jmp
or
mov
cmpsb
cmp
push
mov
adc
xor
mov
pop
or
push
adc
and
inc
loop
ret
jbe
loopne
mov
dec
inc
sbb
andl
in
cmp
add
inc
inc
sbbl
dec
adc
je
cld
push
call
dec
or
mov
add
cs
call
mov
out
and
add
orb
push
je
pop
lods
movsl
loopne
or
cmp
ja
add
scas
adc
and
add
stos
sub
xor
lret
loop
mov
sbb
adc
or
out
pop
cmp
add
dec
add
add
fildl
loop
popa
sbb
out
inc
movsl
pusha
mov
push
shrl
fwait
nop
call
out
pushl
mov
aad
add
movl
stc
pusha
push
cmpsl
mov
jecxz
mov
adcb
mov
nop
test
inc
inc
sub
jmp
pop
add
enter
je
xchg
es
xorb
sbb
jmp
add
inc
sub
or
addr16
add
in
lds
inc
push
out
dec
pop
add
and
clc
test
add
fdivrs
dec
out
addr16
fs
mov
shrb
or
popa
into
je
les
pop
imul
or
add
xacquire
es
clc
xchg
jmp
and
sub
and
inc
push
icebp
insb
mov
cwtl
push
inc
mov
mov
lcall
lea
call
or
loopne
loope
or
mov
inc
add
fisttps
test
rorl
sub
add
push
mov
pop
xchg
add
inc
das
imul
push
mov
push
xchg
mov
sub
inc
or
jns
pusha
add
std
cmp
or
add
xor
mov
sbb
pop
fcoms
mov
add
outsl
lea
add
fs
mov
xchg
les
cs
add
movl
pop
dec
pop
int
adc
add
mov
add
push
cmp
pusha
adcl
sub
pop
xchg
mov
wbinvd
adc
enter
xchg
orb
pusha
xor
aas
pop
addl
sub
add
adc
sub
cs
adc
push
and
sbb
sbb
push
mov
sub
enter
leave
cmp
popf
and
iret
and
movl
cmpsl
push
or
fchs
push
lret
daa
push
ss
mov
pop
ret
addr16
repz
sub
cli
icebp
nop
es
mov
lret
cltd
ss
add
push
divb
cmpl
xor
sbb
mov
mov
out
add
pop
dec
pop
add
aaa
pop
xchg
jne
push
adc
xchg
adc
or
ja
in
xchg
add
imulb
clc
add
fmuls
lods
or
mov
add
cmp
shrb
pop
pushl
add
cmc
popf
and
mov
add
dec
loope
add
jo
xchg
cmpsl
jmp
test
sbb
lock
aam
xchg
add
shlb
out
cmp
adc
mov
add
stc
dec
or
pop
cmp
pusha
test
dec
add
xor
xor
adc
cmp
jle
sbb
ffreep
ds
out
sub
jg
dec
pusha
jecxz
adc
lea
mov
rep
popl
fwait
inc
add
mov
out
clc
movsb
or
dec
cmc
or
xchg
cmpl
mov
jns
add
sub
cli
inc
or
inc
mov
pop
inc
mov
jmp
xchg
das
push
popa
addl
sbb
and
jne
or
adc
fstps
and
and
xor
rcll
inc
je
sbb
lahf
cmp
mov
push
push
js
and
cmp
and
dec
add
test
push
in
lods
adc
rol
mov
out
mov
add
dec
adcl
call
or
add
pop
pop
lcall
mov
push
pop
rclb
call
and
ljmp
or
ja
push
and
add
xchg
movsb
push
es
adc
neg
sbb
pop
leave
test
test
mov
xor
and
nopl
cmpl
loopne
pop
mov
rolb
ret
adc
jne
or
cmp
je
adcl
and
test
add
adc
mov
subb
or
pusha
and
jo
outsb
dec
add
push
ds
adc
lods
sub
add
jne
mov
pop
mov
inc
or
lock
and
mov
push
pop
add
stos
shr
insl
aaa
pop
cs
jns
cmp
add
pop
push
jg
and
ljmp
ret
sub
adc
cmp
pusha
lret
mov
add
push
jnp
insb
sti
cmp
jp
add
mov
jns
cmp
add
pop
sub
xorl
sub
scas
lret
int3
add
sbb
nop
mov
xchg
lods
cmc
and
add
mov
dec
clc
dec
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
push
daa
add
enter
in
add
mov
and
inc
jg
mov
add
inc
add
scas
pcmpgtb
dec
adc
add
jmp
mov
jl
dec
dec
xchg
add
adc
cmp
push
add
jne
pop
or
add
adc
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
nop
jecxz
and
pop
in
incb
mov
jp
add
xchg
pop
in
xor
add
cmp
in
xchg
test
add
shl
fptan
ljmp
dec
and
sti
push
js
jge
add
or
push
sub
adc
inc
jnp
xchg
test
inc
add
add
into
cmp
push
xor
in
jnp
cwtl
pusha
add
cwtl
push
and
pusha
xor
add
inc
lret
mov
adc
loop
rcll
push
and
cmp
adc
loop
add
or
add
bound
pop
imul
xor
sbb
rcrl
in
adc
add
xor
or
and
xor
or
sub
jmp
xchg
push
jbe
xlat
and
pop
nop
cmp
ret
push
inc
dec
add
push
push
push
sbb
repnz
scas
mov
not
pop
add
rcrl
mov
add
popa
jo
ljmp
ja
jnp
leave
xor
add
test
std
xor
mov
add
test
cli
push
cmp
add
ja
sub
jp
push
dec
add
movsb
cmc
add
stos
adc
cmp
xchg
inc
mov
je
add
mov
stc
rolb
jmp
pop
cmp
rcll
into
push
add
add
inc
outsb
jne
fisttps
fadds
mov
ja
cli
mov
xchg
addps
divl
dec
clc
decb
lret
push
push
scas
add
push
cmpsb
inc
in
mov
dec
xchg
dec
adc
das
adc
cld
dec
jno
push
pop
xor
add
mov
outsl
shl
add
into
push
rolb
jne
sub
out
enter
les
pop
lea
add
loopne
fldcw
icebp
add
rorb
jg,pt
add
fcoml
sarb
add
adc
add
mov
push
in
mov
dec
mov
sub
mov
out
xchg
pop
add
push
and
cmp
xor
push
cmp
adc
lret
add
jae
add
sub
and
cli
aam
pop
adc
add
shlb
push
clc
add
js
inc
xchg
adc
fildl
cmpb
addb
dec
mov
cmp
and
adc
fcomps
int3
sbbb
ss
mov
jle
and
es
jne
add
fidivrl
sub
push
sahf
jg
push
hlt
leave
xchg
arpl
and
or
mov
fsts
adc
aad
mov
rolb
add
adc
add
jle
sub
jmp
mov
repnz
dec
jg
pop
sti
push
mov
inc
dec
filds
test
xor
add
orl
js
mov
inc
rcr
adc
aad
add
mov
cmp
repz
adc
mov
in
pop
sbb
pop
inc
shlb
daa
add
push
inc
xor
sub
fwait
dec
cld
ret
cmpl
outsl
jne
in
call
mov
clc
movsl
cmp
jne
out
inc
sbb
nop
pop
scas
push
xor
sub
fwait
xchg
stos
pop
xor
sar
and
add
push
add
jne
mov
lret
inc
sbb
repz
push
mov
add
inc
adc
ss
aas
mov
loopne
mov
add
nop
sbb
repz
or
pushl
inc
fninit
push
adc
sbb
les
leave
clc
stos
and
dec
push
pop
xor
roll
dec
push
sti
xchg
push
inc
into
pusha
dec
pop
adc
xlat
or
and
adc
adc
in
add
mov
mov
popa
push
bound
sbb
test
incl
cs
adc
jg
sahf
add
jl
stc
loopne
fisttpll
mov
add
jnp
or
test
inc
push
or
pop
aas
or
push
inc
jnp
enter
mov
add
mov
pop
outsl
mulb
iret
sub
sarb
jmp
adc
repz
js
xchg
sbb
xor
int3
sbb
inc
sub
lock
in
add
xchg
repz
push
shlb
or
add
or
arpl
sub
sbb
jno
std
aaa
push
push
lock
jmp
push
inc
add
call
ja
xchg
repnz
push
icebp
dec
add
mov
dec
cwtl
test
mov
mov
dec
fiaddl
movb
popa
ja
stc
push
push
pop
pop
mov
sub
cmp
cmc
and
push
sbb
ja
jle
sub
filds
and
xchg
inc
int3
fwait
add
or
push
add
push
mov
fdivs
sub
dec
sub
fwait
add
mov
xor
sub
pop
mov
test
test
sbb
std
sub
test
add
mov
test
cmp
mov
mov
adc
xchg
jns
cmp
gs
jne
cmp
jb
loopne
cltd
mov
adc
cmp
loopne
sbb
daa
add
dec
loopne
mov
aam
movsb
popf
nop
mov
andw
shlb
lea
test
and
jmp
adc
push
adc
mov
pusha
cmp
add
adc
xchg
jp
inc
or
ret
cltd
jo
jg
adc
movd
jns
xor
add
xchg
adc
or
in
mov
jp
push
ret
xchg
fs
rorb
sbb
cmp
lock
add
jge
push
sub
add
xor
adc
push
xor
push
pusha
sub
jbe
cwtl
dec
ds
xchg
xchg
pushf
icebp
add
mov
cmp
and
push
jo
mov
imul
jnp
pop
add
bound
es
and
pop
jno
xor
daa
incl
enter
xor
roll
iret
call
loopne
lret
rolb
push
sub
std
add
das
cwtl
sbb
pop
mov
xor
inc
fs
or
add
xor
dec
popl
jge
daa
push
rcrl
pop
push
add
dec
sub
pushf
xchg
inc
add
xchg
mov
std
cmp
jecxz
pop
insb
in
shlb
lock
xchg
ret
loopne
fmuls
push
call
pop
lcall
jbe
out
add
pushf
fimuls
xor
fadds
jne
filds
pop
loop
xor
adc
add
and
shll
or
aad
add
and
add
xchg
xchg
ret
add
fwait
das
xchg
rcrb
adc
clc
ja
add
adc
jns
push
mov
into
add
pop
scas
gs
jb
push
inc
cltd
mov
movsl
rclb
out
add
sub
fdivrs
js
add
or
repz
daa
movntps
loopne
and
push
pop
add
mov
pushl
or
les
add
mov
cmp
sub
push
adc
jp
push
roll
add
and
mov
push
mov
cmp
add
cmpsb
je
addl
test
test
in
sbb
xchg
rclb
jl
adc
movsl
add
jmp
add
inc
sbb
cld
adc
int
add
ja
pop
add
or
or
loopne
test
ss
hlt
out
jmp
add
xchg
adc
ret
out
inc
clc
mov
fs
dec
leave
xor
xor
subb
add
xchg
ret
rolb
lock
hlt
cmpl
rcrb
mov
ja
insl
sarl
movsb
adc
inc
add
ss
cmpb
cmp
vmread
std
in
out
loopne
adc
adc
xlat
xor
adc
lea
lds
pop
push
add
psllq
jne
jge
push
add
cmp
clc
dec
movl
add
nop
movsb
jg
inc
add
add
xor
loope
pop
jecxz
inc
je
fidivs
addr16
mov
iret
aam
cmp
add
inc
cmp
dec
movb
inc
inc
dec
lods
inc
nop
lock
aaa
jbe
add
test
and
test
call
add
sub
pop
or
rorl
gs
shrb
cs
jnp
cmc
setb
outsl
jae
push
popa
out
push
add
adc
test
loopne
setb
jno
jecxz
inc
stos
pusha
pop
inc
out
add
jnp
fldcw
loopne
and
faddl
adc
add
jo
jne
les
and
add
push
sbb
pusha
ret
movsl
mov
aam
nop
outsl
cmp
add
jp
push
jae
pop
aaa
sbb
push
push
cmp
inc
xsha256
cmpsb
push
mov
xor
xchg
call
add
add
sub
sbb
adc
testb
mov
scas
mov
or
mov
into
loopne
adc
dec
mov
cmp
add
sub
add
adc
leave
add
insl
inc
mov
cmp
sub
add
stos
inc
xchg
xor
inc
imul
and
add
cmc
inc
and
leave
fneni(8087
adcb
add
jb
gs
dec
fidivrs
arpl
jae
cmp
sti
cmp
and
pop
mov
mov
add
and
pop
daa
and
push
cmpsb
and
loop
mov
outsl
add
pop
cmp
mov
add
push
ja
mov
fsts
std
sbb
add
lods
mov
shr
dec
pop
aaa
shll
push
add
and
mov
jae
mov
or
mov
in
or
cs
mov
loopne
cli
ljmp
shlb
jecxz
cmp
addb
mov
mov
or
add
mov
jnp
push
add
repz
xchg
sub
jecxz
inc
enter
adcb
adc
loopne
sub
push
lea
mov
sub
jb
mov
adc
pop
clc
insl
pop
repz
sbb
push
mov
add
jge
scas
jmp
inc
mov
and
xor
imull
jg
jbe
dec
pop
je
jne
dec
sbb
jbe
add
dec
mov
lret
push
and
pop
add
or
jge
cld
cs
sarb
bound
repnz
inc
rol
inc
sbb
call
daa
or
cli
les
in
mov
js
dec
mull
add
cmpb
and
scas
mov
sti
cltd
sqrtps
or
pusha
jo
and
cmp
and
sub
mov
pop
decl
push
add
ss
jnp
enter
mov
push
sub
inc
push
cmp
stos
sub
aad
popa
adc
jl
pushl
inc
add
andb
outsb
fmul
add
push
or
test
add
dec
sbb
inc
adc
or
and
xchg
adc
push
xchg
mov
inc
pop
push
jle
divps
call
push
cmp
pop
leave
outsl
imul
pusha
shlb
add
dec
cli
loopne
in
ret
jl
add
and
add
jmp
mov
lock
nop
iret
dec
adc
add
mov
push
ljmp
adc
sbb
pop
mov
adc
nop
adc
dec
add
jp
push
adc
mov
xorb
sbb
clc
adc
int
movsb
add
ret
sub
xchg
mov
mov
out
rcrl
out
push
ret
and
cmpsb
scas
sbb
mov
and
in
xchg
xorb
sub
push
mov
cmp
mov
sbb
and
push
loope
and
dec
jmp
add
femms
dec
cld
out
adc
rcrb
js
or
movsb
mov
jae
clc
push
cmp
cmp
addl
hlt
loope
pushl
or
test
mov
les
pushf
xor
inc
xorl
jbe
push
add
adc
add
add
sbb
incl
push
xorw
adc
dec
cmp
cli
pop
aad
cmp
jb
fildl
pop
mov
icebp
call
lods
xchg
dec
dec
ret
hlt
add
orl
lret
les
andb
adc
cs
stos
pusha
add
jmp
xor
adc
mov
add
cmpsl
into
fs
push
pop
aam
rorb
pop
jmp
lods
push
ret
inc
or
loopne
xor
je
xchg
pop
cld
adc
jo
icebp
sbb
mov
dec
add
mov
cwtl
add
and
mov
inc
or
loop
pop
xorb
pop
add
sbb
xchg
and
icebp
mov
jne
mov
pop
mov
mov
mov
cmc
lds
inc
xor
nop
jle
add
mov
inc
add
sarl
add
mov
sbb
movsb
dec
pop
add
push
pop
test
add
bound
xchg
push
cmp
jne
add
cmp
add
pop
cmpsb
dec
es
add
sub
pop
js
push
mov
cmp
jle
and
pop
jmp
lcall
push
xor
pop
add
jle
add
pusha
jmp
ret
sbb
jno
aas
and
cmp
or
or
inc
or
icebp
cmc
add
add
jmp
fisttpl
repz
pop
jge
adc
adc
test
adc
pop
sub
lret
add
lret
leave
mov
imul
call
shll
shrb
add
test
loopne
jnp
add
inc
hlt
repnz
shll
in
and
add
xlat
nop
aaa
cmpsb
stos
lahf
and
loopne
dec
je
lret
push
adc
mov
shrb
loop
add
xchg
fldt
sbb
fmulp
shr
add
bound
push
mov
add
inc
add
test
ljmp
add
mov
push
or
pop
addr16
loopne
mov
gs
add
adc
enter
mov
inc
add
ja
pushf
or
push
ret
inc
jp
add
adc
adcb
and
out
sbb
push
jp
xchg
subb
inc
mov
add
aam
or
out
je
mov
out
sub
xor
cmp
or
leave
sbb
mov
aaa
cli
jbe
cmp
cmp
xchg
ds
mov
mov
lods
add
jmp
lods
inc
rolb
adc
fadds
lods
add
js
xchg
xor
push
push
in
int3
add
into
sbb
rorl
mov
popa
push
jbe
jp
pop
add
movsl
sbb
push
mov
hlt
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
ret
add
sub
inc
add
mov
dec
or
mov
stos
and
out
push
mov
xorb
cmp
lea
divl
xchg
inc
xor
cmp
jecxz
adcl
sti
jmp
add
inc
mov
push
sbb
paddb
sarb
int3
repnz
inc
sbb
or
lahf
outsl
inc
pop
stos
clc
add
cli
in
pop
pushf
sbb
jmp
repnz
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
rclb
or
cmp
xchg
add
dec
dec
in
xchg
loope
cmp
push
in
pop
cmp
mov
lock
movsl
mov
aaa
popa
sti
in
popf
and
fildl
addr16
repz
mov
lret
fwait
xchg
and
mov
add
les
aad
bound
add
aas
cli
dec
adc
jge
cmp
fs
cmpb
rcrl
pop
ret
movsl
and
sub
xchg
inc
xchg
dec
rcrb
or
sbb
shlb
pop
add
jns
es
out
in
cmpl
jae
iret
add
jle
xchg
fucomi
and
jne
add
xorb
add
loopne
rorb
cmp
jb
xchg
jo
sbb
sbb
inc
loop
pop
test
je
inc
imul
repz
jmp
rcrb
lock
cwtl
and
or
cmp
jne
add
lret
repnz
add
ret
add
pushl
addb
clc
xor
sub
stos
test
in
andl
inc
mov
sahf
jnp
add
fs
dec
pop
push
inc
pop
out
enter
jle
pop
jb
hlt
pop
lods
xchg
lret
and
int3
inc
add
inc
xor
orb
rsqrtps
stos
cmovo
and
add
sbb
pop
stos
xor
loop
adc
sti
pop
sbb
and
cli
pop
mov
out
cltd
xor
clc
cmp
pop
aas
xor
fs
cmp
scas
add
inc
push
popf
add
and
rcll
sub
lods
pop
push
or
jg
outsl
or
or
adc
stc
cmpl
in
movsl
xor
push
fcoml
add
clc
push
pop
push
addl
and
psraw
mov
cltd
and
cmp
add
add
inc
inc
clc
inc
add
add
call
cmpsl
xor
sub
or
adc
add
andb
aas
imul
nop
or
pop
imul
repz
jns
fwait
adc
add
stos
popf
stc
add
cmp
dec
cvtps2pd
sub
loopne
add
fstpt
dec
and
repnz
ja
xor
repz
pusha
xchg
add
mov
xchg
mov
clc
in
jb
cmp
or
push
das
mov
subl
add
xlat
loopne
sbb
lock
call
push
jne
add
cwtl
add
add
xor
add
adc
add
xchg
sub
mov
push
out
mov
movsl
loopne
push
ja
lds
dec
dec
sarb
or
add
sub
pop
sbb
test
adc
sub
dec
mov
add
inc
adc
add
sub
imul
add
lods
outsb
pop
xor
pop
push
mov
and
pop
jp
out
mov
mov
mov
imul
or
mov
mov
or
add
or
jnp
xchg
add
stc
jne
out
and
sahf
leave
mov
add
aad
daa
out
rcrl
in
dec
and
add
xor
mov
and
int3
push
cltd
int3
or
push
add
and
cmpsb
push
pusha
jmp
iret
sahf
movsb
rclb
jb
and
cltd
or
or
sbb
or
test
mov
pop
mov
cmp
jg
jo
add
in
jb
cmp
push
and
sbb
add
inc
jb
cmp
pusha
cmp
xor
xor
in
jb
cmp
adcb
cmpsb
add
inc
hlt
and
xchg
in
iret
add
lahf
mov
loopne
or
fdivrs
inc
inc
rolb
xchg
fiadds
loope
movzwl
rolb
roll
adc
ret
call
xchg
das
mov
add
jg
aad
sbb
or
adc
fs
xchg
nop
jg
sbb
xchg
jl
add
jo
adcb
cmp
inc
mov
push
cwtl
or
icebp
ds
jb
cmp
sbb
ror
and
xchg
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
in
out
cmp
sbb
and
dec
mov
jmp
sbb
and
in
xor
add
shlb
jne
call
sbb
sub
add
fsts
inc
rcr
fisubs
sbb
add
and
xchg
ret
in
les
cmp
sbb
mov
xchg
lret
in
jb
int
into
sbb
add
and
mov
xorl
mov
mov
cmp
adc
mov
pop
jo
and
inc
popl
inc
add
pop
out
sbb
sub
cmp
dec
jg
pop
stos
sub
inc
push
add
sub
inc
js
gs
shll
cmpsl
xor
sbb
pop
push
addl
add
push
in
mov
adcb
inc
dec
jne
je
data16
insl
outsl
jb
cmp
and
inc
mov
or
dec
outsb
fnstsw
cwtl
mov
sub
xchg
or
je
inc
sub
mov
mov
xor
test
adc
push
pop
jle
and
lock
adc
add
sarb
jns
testb
inc
inc
imul
outsl
add
pushf
adc
out
dec
add
add
outsb
addr16
popf
and
add
or
or
jbe
scas
data16
outsl
dec
hlt
je
sbb
pop
fld
sbb
or
mov
arpl
repz
or
imul
icebp
pop
mov
shlb
dec
insb
icebp
popa
movsb
rcl
bound
pop
lcall
or
pop
cmp
sub
mov
mov
xchg
outsl
dec
ss
test
or
sbb
or
inc
mov
add
inc
jne
add
outsl
aam
add
mov
int3
ljmp
ret
mov
mov
mov
mov
sub
sub
es
push
xor
mov
in
cmp
lret
or
orb
push
add
arpl
push
nop
addr16
mov
or
add
and
out
cmpsl
xor
scas
pop
fs
test
xchg
or
cld
aam
pop
ljmp
rcrb
inc
popa
and
outsl
lea
pusha
mov
sbb
bound
mov
pushf
orl
dec
inc
lods
shlb
je
pusha
in
mov
push
sub
fsub
jo
incl
imul
in
cmpsl
fimull
add
ret
adc
repz
hlt
pop
or
stc
rclb
fadds
mov
add
iret
insb
pop
push
sub
add
imul
insl
and
push
cmpsb
sub
popf
inc
sbb
add
dec
cmc
pop
or
add
cmp
clc
dec
loope
jmp
fisubrl
dec
mov
nop
push
leave
mov
mov
or
rorb
push
fmull
shll
inc
ds
repz
je
add
js
jo
jp
ja
dec
jge
jg
and
cmc
cmp
add
xor
sub
imul
ljmp
in
add
outsb
out
inc
cmp
jl
pop
jae
push
pop
jmp
jbe
hlt
push
or
mov
xchg
popa
jmp
pop
dec
xchg
sub
xor
insb
add
sub
jne
shll
xor
xchg
add
pop
cmpsb
push
or
mov
mov
dec
pusha
add
inc
push
dec
notl
add
add
mov
test
psubw
add
loop
sbb
xor
clc
loop
add
push
sub
push
add
or
adc
add
jne
xchg
cmp
add
cmc
and
add
cs
loop
repnz
xchg
aas
cmp
xchg
cs
sbb
lock
add
in
pop
inc
dec
in
push
movsl
decb
lock
add
gs
int3
or
add
mov
aam
scas
add
inc
bound
dec
pop
add
aam
aaa
xor
pop
outsb
popf
pop
xor
imul
popf
ret
out
mov
je
adc
ljmp
imul
test
pop
jbe
inc
push
out
dec
mov
inc
add
push
dec
mov
test
jg
popf
fxch
add
lods
cli
lahf
rcll
add
out
lock
int
mov
aam
xorb
adc
stos
push
rcll
xchg
lods
iret
xor
push
or
and
add
jo
inc
shld
das
add
insl
shlb
shlb
cmp
scas
add
mov
cmp
cli
add
fstpl
or
add
or
sub
cmp
ret
adc
add
pop
daa
popa
fimuls
nop
pop
add
adc
xchg
xchg
push
and
mov
cwtl
jecxz
add
cmp
xor
lret
xorb
jmp
rcl
mov
lock
outsb
std
and
out
ficomps
add
dec
inc
ss
lds
pop
push
push
mov
pop
inc
idivl
out
popf
fwait
lret
mov
imul
dec
dec
add
jne
inc
js
add
pop
test
cmp
or
rolb
lahf
lds
push
sub
jp
and
hlt
sub
xor
decl
shlb
sahf
and
add
clc
adc
push
mov
adc
ljmp
pop
cwtl
test
cwtl
lret
out
adc
xor
cmpsl
inc
fs
push
cmp
adc
cmp
pop
mov
xchg
arpl
cwtl
add
add
clc
dec
inc
mov
cwtl
sub
ljmp
stos
mov
jb
add
stc
imul
adc
lahf
ja
js
jo
fnstcw
repnz
push
pop
jbe
add
mov
add
lahf
dec
filds
les
sti
pop
repnz
add
sbb
jmp
mov
stos
push
lret
and
lock
push
lock
mov
add
popl
out
neg
stos
lea
loop
push
pusha
xchg
add
add
push
mov
add
cld
nop
sub
hlt
adc
int3
push
push
cmp
mov
dec
and
inc
sub
aas
dec
sub
or
mov
call
or
in
add
sbb
xor
xor
fisubrl
sarb
add
xor
and
filds
adc
mov
les
sub
mov
es
add
ret
jne
push
pop
push
cmpsb
add
sti
pop
out
orb
xor
cmpb
jl
or
lret
add
inc
lods
movsb
pop
xchg
pop
or
jp
xchg
push
lcall
cmp
inc
add
add
sbb
mov
sbb
clc
sub
je
or
jb
cmp
cmp
aaa
imul
shl
add
sub
ret
adcb
xchg
or
pop
jmp
inc
add
cmpsl
ja
call
ja
cmp
xorb
xchg
pop
dec
fsubrl
sar
add
push
jo
pop
add
or
xor
fadds
cmovp
mov
inc
and
popf
insw
inc
hlt
add
or
add
icebp
adc
inc
lret
dec
add
add
fs
shlb
rcrb
mov
call
push
mov
sub
aad
xor
adc
cltd
adc
push
or
enter
pusha
sub
pop
fiadds
mov
sub
add
inc
push
push
push
xorb
sbb
stc
add
cli
and
mov
sub
push
shl
fisttpl
icebp
add
mov
popf
dec
pop
js
inc
sbbb
loop
pusha
add
cmp
ret
pop
sub
push
push
inc
cmp
daa
mov
lret
dec
scas
sub
mov
push
push
jbe
cmp
ljmp
mov
lgs
adc
inc
test
loopne
add
sarb
fsubr
sub
sbbl
gs
jnp
nop
pminsw
into
adc
mov
add
and
rol
test
in
clc
std
or
out
pop
and
cmp
jmp
add
leave
and
mov
add
shrd
mov
pop
fldl
jns
add
mov
push
pop
pop
lret
pop
xchg
jl
xor
or
je
ljmp
ja
sbb
pusha
or
xchg
sbb
jecxz
orb
xchg
push
orb
sbb
xor
xchg
mov
jmp
add
loope
outsb
mov
inc
shlb
add
nop
add
inc
out
inc
inc
add
dec
enter
rcrb
add
cld
jae
xchg
in
cmp
ret
mov
jne
add
or
mov
mov
jnp
sbb
sub
rorb
push
push
cli
xchg
or
call
sarl
bound
push
stos
flds
lock
adc
out
cli
icebp
add
jecxz
jge
adc
or
or
cs
xor
xlat
call
addr16
add
incb
jl
imul
xchg
cmp
xchg
test
vpinsrw
fiaddl
xchg
lock
inc
aam
jge
add
jl
pop
loopne
sub
cmp
pusha
sbb
jecxz
add
out
add
push
cwtl
jnp
push
inc
pop
rolb
cmp
add
add
add
fnsave
das
jb
cmpsl
dec
imul
add
cmp
in
xor
ds
sub
loopne
and
pop
mov
add
fcoml
jp
or
call
sti
jns
sub
add
sbb
dec
fadd
push
jmp
movsb
or
add
mov
out
add
cs
add
test
inc
mov
add
or
cli
cmp
inc
add
inc
clc
addl
cmp
add
shl
xchg
push
pusha
aad
push
inc
ret
rcll
call
or
js
scas
enter
push
xchg
sbb
inc
fwait
cmpsl
add
dec
push
cmpb
xchg
push
xchg
rorb
jb
movsw
jns
sysret
dec
or
aad
rclb
test
add
cmpl
shl
pop
xor
xchg
push
add
mov
fidivrl
clc
pop
xchg
sub
loope
hlt
cmpsb
add
and
add
and
adc
mov
fs
sbb
jbe
mov
and
pop
mov
inc
lea
mov
adc
adc
cli
out
fadds
jo
stos
cmpsl
inc
sbb
bound
lcall
in
xor
vucomiss
and
jge
or
mov
cmp
ja
and
add
lock
sbb
cld
movl
adc
push
pop
xor
add
incb
jne
add
dec
or
shll
imul
add
cmp
lock
insb
add
std
repz
add
sub
test
std
lds
push
inc
test
lock
ja
jnp
bound
mov
shrb
cmp
adcb
adc
sub
push
pop
or
jne
mov
or
pop
call
rolb
jg
sub
pop
pop
fildll
or
mov
mov
shrb
adc
pop
dec
cmpl
loopne
adcl
pcmpgtd
add
rcrl
std
adc
adc
jge
mov
add
xorb
add
add
or
or
imul
pop
inc
je
push
sub
nop
inc
mov
pop
mov
add
lock
loopne
pop
add
dec
mov
out
lret
add
bound
insl
push
adc
xchg
xchg
inc
enter
lods
add
cmp
add
fs
pop
jmp
jg
mov
sbb
or
jge
add
fs
hlt
dec
pop
mov
dec
push
rolb
and
or
addr16
and
add
jmp
jle
adcb
dec
xchg
add
or
arpl
cld
inc
pop
rcpps
pop
cmpsb
out
mov
push
fdivr
or
add
adc
and
popa
pusha
adc
mov
mov
mov
xchg
add
push
lea
das
int
lcall
xchg
cmp
add
dec
ret
repz
and
xlat
enter
mov
bound
cmc
cltd
xchg
add
inc
add
idiv
add
mov
xor
mov
add
or
adc
mov
xor
cmpsl
add
push
xchg
pop
or
jbe
dec
rorl
dec
add
int3
dec
push
push
out
cmpsb
jle
add
ja
jecxz
dec
fucomi
dec
add
lret
mov
pop
inc
push
sbb
push
shlb
cmp
add
dec
call
repnz
and
inc
lock
xorb
xchg
add
push
pop
hlt
adc
enter
scas
popa
mov
inc
push
add
adc
pop
clc
cwtl
push
add
add
in
sbb
xorl
leave
jne
add
sahf
add
add
jne
mov
xchg
ja
push
loope
imul
lret
repz
movsl
data16
mov
pop
add
je
xchg
cmp
mov
loop
add
mov
or
aas
xor
rclb
mov
loop
dec
les
pop
inc
in
inc
repnz
rclb
add
sub
movsb
dec
leave
and
sbb
add
mov
cmp
pop
filds
mov
mov
jl
movhps
dec
ror
mov
mov
pop
push
jge
mov
popl
std
into
jmp
push
push
push
xor
push
push
and
mov
aam
nop
lods
hlt
pop
cwtl
push
add
cli
imul
stos
xchg
inc
js
xchg
add
push
dec
fsubrl
xor
cmpsb
dec
mov
add
das
movsl
pop
lret
lret
jnp
add
rol
cmpb
mov
pop
pop
or
add
fisttpll
push
add
fld
das
ret
push
xor
inc
nop
sub
inc
dec
sbb
psubb
push
repnz
scas
add
cli
pop
dec
inc
fcoms
je
jle,pt
add
and
add
adc
and
bt
add
jae
xor
and
push
into
dec
ja
push
add
dec
hlt
mov
cmp
insl
mov
ja
add
call
mov
add
jmp
add
mov
adc
pop
movsb
adc
mov
lods
lahf
add
mov
pop
je
mov
pop
fs
aaa
les
mov
stc
lock
je
add
les
jp
lock
dec
fcompl
fs
lds
add
sbb
loopne
into
adc
aaa
add
mov
call
cltd
and
sbb
call
addb
les
cmc
nop
ficompl
push
add
clc
mov
or
inc
das
jne
sbb
cwtl
pop
out
inc
std
mov
aam
mov
inc
inc
jne
and
lock
mov
popa
dec
push
mov
or
popf
xor
int3
and
daa
mov
call
pop
rolb
add
and
adc
add
pop
adc
add
adc
call
inc
and
mov
xor
mov
jecxz
dec
into
sub
insl
add
ljmp
adc
pop
dec
add
es
aas
mov
and
repz
or
inc
dec
inc
xchg
movsb
hlt
mov
pop
or
shrb
insb
mov
shufps
lret
xchg
int3
es
xchg
mov
mov
add
mov
cld
push
ljmp
lea
push
mov
mov
pusha
cmp
mov
push
cmpsb
add
add
nop
test
outsl
mov
add
inc
jns
push
add
jg
sub
sbb
setg
enter
add
out
daa
jg
add
mov
add
and
add
adc
inc
outsb
inc
ljmp
pop
shrb
inc
add
xchg
cmpsb
mov
fstl
inc
ficoms
add
jge
sub
add
or
cmp
mov
ret
iret
fistl
pop
jno
add
mov
xor
add
mov
shl
insb
ds
pop
pop
les
jle
and
mov
mov
cmpsl
or
stos
add
xor
lea
push
or
add
push
arpl
mov
repz
xor
or
push
enter
pop
aas
cmp
jg
cmp
or
adc
call
pushf
jo
pop
cmp
fimull
add
add
mov
ja
in
orb
xchg
mov
add
sub
mov
dec
je
add
push
punpcklbw
add
jmp
mov
and
cld
add
ja
vpunpckldq
xor
dec
icebp
iret
push
jge
push
fsubrl
mov
xor
int3
cmp
push
cld
add
iret
les
add
shr
add
aam
or
scas
lock
cmp
jge
pop
imul
or
shl
jl
pusha
sub
add
push
push
ljmp
into
xchg
mov
bound
aad
or
lock
adcb
dec
mov
int3
outsl
mov
stos
jb
mov
cmp
add
ror
sub
add
rcrb
xor
sbb
popa
subps
addb
xchg
sti
add
fcoms
push
add
cmp
jl
mov
inc
add
xor
xor
adc
add
sbb
add
ss
in
xchg
add
lret
or
or
add
jne
out
xchg
cmpxchg
test
out
push
xorb
inc
mov
dec
sub
test
mov
test
cmpl
jg
and
dec
mov
pushf
pop
add
xchg
es
das
js
xorb
jge
lock
and
pop
dec
popa
or
inc
push
cmpsb
jno
jo
cld
test
data16
mov
add
xchg
or
add
sub
push
fs
and
push
xor
mov
les
or
adc
jge
mov
or
push
jg
xor
add
mov
call
xchg
dec
sub
pop
aam
xchg
push
enter
into
pushf
shlb
xor
or
sbbl
test
loopne
outsb
pusha
outsb
mov
mov
mov
mov
jmp
add
jp
daa
mov
pop
inc
orl
mov
lret
or
je
xor
add
ret
pop
test
cmp
hlt
cmpsl
int3
imul
in
std
add
loopne
add
jbe
add
jge
movsb
pop
test
dec
cmp
inc
add
lock
xchg
leave
fcmovne
testl
add
and
aam
test
cmp
lret
mov
fsubs
bound
and
inc
cld
add
cmpsl
jg
rcl
pop
add
push
or
and
ds
cmp
cmp
call
add
mov
and
loopne
fisttpll
sbb
xor
add
or
or
jb
mov
mov
sbb
call
xor
test
push
jge
add
cwtl
inc
fsubrs
call
sub
rcr
or
adcb
xor
push
xor
pop
sub
add
pusha
inc
adc
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
ja
pusha
fs
add
mov
inc
add
testl
add
mov
and
inc
add
jmp
es
add
or
add
mov
add
mov
add
adc
jp
and
das
pop
add
les
push
or
je
psadbw
loop
dec
incb
xlat
mov
leave
push
add
pop
push
adc
int3
das
shl
add
mov
lock
mov
mov
inc
adc
mov
add
sbb
scas
xor
and
push
pop
stos
mov
add
jb
adc
inc
cmp
or
jne
cli
cmp
add
sub
mov
add
lods
jne
movl
push
aas
inc
clc
mov
notl
jecxz
lea
mov
pop
xchg
cmp
and
out
test
mov
jmp
add
mov
adc
mov
or
sub
add
stc
pop
or
inc
push
sbb
inc
xor
imul
and
push
rcrl
add
add
jb
inc
mov
es
or
int3
lret
add
out
add
pop
and
sub
lock
int3
stos
add
pop
pop
sub
adc
imul
inc
cwtl
jl
adc
call
mov
pop
adc
add
xchg
jmp
pop
push
inc
jns
mov
ret
mov
add
mov
adc
jns
add
fwait
mov
mov
mov
push
add
dec
add
xor
pop
adcb
jmp
mov
adc
mov
mov
repnz
adc
rorb
repz
outsb
sbb
and
movsl
aaa
nop
cmc
enter
mov
pop
roll
cmp
jnp
mov
sub
or
mov
and
enter
add
cld
pusha
sub
mov
jne
rcr
int3
aas
sti
cmp
push
xor
in
iret
sub
or
aas
cmp
add
cmp
gs
and
popf
inc
sbb
add
mov
lock
add
aas
and
xchg
fdivl
lock
pop
in
cmp
hlt
nop
mov
repnz
cmp
and
push
jl
add
and
adc
mov
iretw
sub
sub
add
dec
stc
or
push
add
jne
jge
shrb
sub
mov
dec
lret
and
push
insl
cmp
jge
paddusw
inc
pop
and
add
shrb
jecxz
data16
jo
sbb
and
mulb
fsubs
inc
dec
jb
push
loope
add
inc
mov
push
into
test
sbb
add
adc
push
mov
adc
jg
inc
adc
lahf
test
shl
push
add
xchg
inc
or
dec
jne
mov
xchg
cwtl
and
push
add
inc
and
cmp
or
adc
test
ds
pop
add
inc
jb
call
arpl
inc
js
inc
mov
mov
pop
add
cwtl
out
enter
movl
outsb
in
mov
ficoml
loopne
dec
mov
xchg
sbb
push
mov
test
es
xor
cld
enter
sbb
sahf
inc
adc
and
dec
mov
sarb
adc
inc
jl
cmp
adc
inc
sub
shlb
dec
sbb
cltd
mov
pop
mov
push
xor
cmpl
aam
mov
fildll
and
pusha
data16
fadds
bound
add
xor
shrb
and
xorb
pusha
pop
les
dec
cmp
lods
test
push
adc
cmp
int3
jmp
cmc
test
lock
movsb
cld
ror
sbb
iret
xor
pushf
iret
enter
in
sete
les
mov
call
and
lods
loopne
cmp
pop
jl
sbb
js
sub
pcmpeqb
scas
fs
push
cli
clc
pop
pusha
repz
dec
clc
loop
je
enter
mov
iret
adc
inc
pusha
cmp
dec
xchg
xor
inc
clc
adc
std
out
repz
cld
or
call
mov
andb
loopne
jb
je
inc
mov
cli
mov
cmp
repz
dec
pop
push
or
add
sarb
dec
mov
or
in
addb
adc
add
mov
sub
pop
sbbl
clc
sub
xor
add
enter
jle
lea
inc
cld
shlw
out
movzbl
add
add
add
repz
jle
add
popf
dec
jle
inc
mov
push
xor
fcoms
loopne
popl
mov
loopne
sub
inc
out
adcb
paddb
in
test
jg
pop
add
or
add
dec
stos
cmpb
daa
pop
inc
mov
fldenv
repz
jmp
mov
xchg
add
loop
add
adc
and
xchg
mov
jg
addl
repnz
xchg
bound
hlt
sub
mov
sbb
or
xor
pop
out
mov
clc
mov
shr
nop
jge
addl
neg
xlat
outsl
push
mov
mov
les
fdivl
add
xor
mov
add
inc
dec
or
adc
mov
pop
add
cmp
clc
adc
jae
cwtl
femms
cmp
sbb
push
loop
outsl
dec
mov
add
sub
add
mov
rorb
add
repz
inc
lods
mov
sub
hlt
mov
lds
jmp
dec
test
inc
pop
jecxz
cmp
addb
sub
iret
es
mov
push
or
icebp
sbb
add
fnstenv
add
add
fisttpll
nop
pop
and
add
shlb
jbe
jle
cmp
jp
sub
or
int3
idivl
pop
pop
adc
loop
jmp
lods
xor
add
add
add
inc
mov
fwait
add
pop
negl
sub
lods
std
sub
aam
jle
mov
dec
jmp
stc
push
sbb
sti
jg
adc
cmc
sbb
adc
push
std
add
addr16
xor
popf
sub
ja
pop
cltd
rolb
outsb
push
or
flds
imul
add
nop
or
dec
ljmp
adc
ja
add
dec
fisubrs
sbb
push
dec
call
and
adc
pop
add
testl
cltd
cmc
scas
jecxz
out
inc
cmp
pop
or
stc
adc
add
jne
push
push
sub
add
pop
adc
dec
setns
mov
xor
push
ret
push
mov
rolb
je
add
div
push
add
and
sbb
sti
jmp
or
sbb
je
cmp
adc
push
out
loop
mov
jg
pop
or
or
mov
mov
adc
jmp
add
gs
mov
mov
mov
clc
push
popa
add
xor
and
sub
xchg
xor
inc
cs
cmp
add
fists
add
cmp
fmuls
add
fistpl
fidivrl
lret
addl
call
push
in
add
pusha
mov
add
scas
sub
mov
cli
setl
add
xchg
pop
add
imul
clc
add
mov
shl
mov
xchg
dec
push
out
pop
ret
and
sub
pusha
sub
popa
adc
pop
ret
and
push
jecxz
or
faddl
roll
arpl
sub
add
out
clc
movsb
into
inc
add
fisubl
dec
out
xchg
push
push
and
inc
inc
and
pop
shlb
int
mov
outsb
sub
aas
hlt
push
es
cld
add
rorb
jne
stos
in
add
inc
andl
add
mov
sub
iret
lea
lods
stos
lock
jmp
int3
add
mov
add
pop
cmc
add
dec
and
add
xor
les
in
adc
inc
xchg
pop
or
jno
stc
xor
fiadds
mov
xchg
insb
cs
push
sahf
and
inc
add
loopne
jle
pop
mov
sbb
repnz
lcall
inc
sbb
add
jp
add
insl
jae
xor
leave
or
cmpsl
lea
inc
shlb
add
pop
or
lahf
adc
cmpl
inc
adc
add
inc
fmull
imul
aas
add
and
insb
pop
add
andl
fabs
aaa
call
cld
fildl
sub
repnz
dec
cmp
addl
test
jo
inc
cld
or
add
fbstp
pop
bnd
add
adc
inc
adc
call
pcmpgtd
loop
jmp
add
mov
das
or
add
or
cmp
or
jae
cmpb
and
loopne
sbb
adc
adcb
ja
jmp
pop
cwtl
das
add
pop
push
xor
sbb
nop
mov
xorl
xor
ljmp
push
add
subb
add
into
cs
enter
je
cld
jns
popf
sub
popa
addl
repz
push
roll
jp
testb
mov
push
sub
sbb
or
add
daa
js
cwtl
cwtl
adc
filds
insl
adc
mov
add
jns
xor
rcrl
inc
popa
add
mov
or
stc
push
add
pop
dec
int3
in
jmp
cmp
or
add
stos
and
add
xor
cwtl
add
lea
add
movb
adc
aas
test
testl
daa
jmp
loopne
rorb
jmp
lock
jge
push
es
daa
add
call
adc
cmp
pop
xor
add
cld
lock
xchg
cmp
sub
pop
cmp
into
fmuls
and
mov
mov
cmp
subb
sub
rolb
add
and
mov
adc
xor
sbb
push
loopne,pt
fistpll
add
outsb
fisttpl
add
mov
rcll
add
insl
nop
fwait
test
ret
lods
add
dec
frstor
add
repz
lock
add
fimull
into
add
mov
adc
mov
popa
sub
imul
inc
nop
addl
or
cmp
mov
lds
xchg
push
and
jne
push
jbe
adc
jp
aas
and
add
cmp
cmp
mov
fbstp
inc
pop
mov
pop
push
cmp
sub
aas
scas
push
inc
add
or
push
nop
dec
adc
inc
inc
and
adc
jns
mov
or
cld
je
and
fs
sub
sub
pusha
daa
add
adc
xchg
xchg
pop
xchg
icebp
or
cld
bound
jae
inc
mov
xlat
and
lea
inc
addb
leave
dec
lret
adc
xor
mov
lea
add
les
mov
inc
xchg
je
cmpb
repnz
push
outsl
add
js
in
jle
push
sbb
add
out
inc
orl
add
sub
and
mov
cmpsl
pusha
clc
dec
fsubs
add
jecxz
not
pop
mov
inc
xchg
jns
push
fdivs
jae
xor
fistpl
out
add
ret
test
add
sbb
xor
repnz
or
out
fistpl
jl
adc
mov
shl
std
dec
xlat
add
pop
add
add
fs
loopne
add
jmp
pop
add
call
and
es
into
add
cmp
ja
rcrb
lahf
push
adc
cli
jae
loopne
and
mov
mov
inc
cmp
mov
jmp
add
jb
nop
in
int3
loopne
add
popf
mov
test
cwtl
in
jp,pt
cmp
cmp
pop
dec
adc
dec
in
add
dec
jge
mov
ret
or
cmpsl
jno
into
and
cmp
lea
ret
add
xor
lret
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
cmp
xchg
xor
or
mov
mov
add
mov
movsl
inc
adc
ja
or
js
add
cmp
mov
mov
sub
mov
or
sar
add
bnd
xchg
or
add
cli
mov
jg
push
push
add
daa
lret
loope
pop
fimull
add
dec
outsl
pop
repnz
enter
and
mov
lahf
jne
stos
xor
lea
mov
inc
pop
test
add
daa
inc
inc
add
xor
sub
cmpb
add
ds
or
pop
out
xor
cmp
sbb
aaa
fcoml
push
add
inc
inc
dec
jne
flds
icebp
out
sub
cmp
call
dec
iret
in
and
push
mov
mov
mov
xchg
add
adc
sub
fstpt
jbe
pop
xlat
lahf
jns
add
add
loope
incl
cmp
flds
push
or
add
mov
and
pop
add
ret
sub
add
cs
adc
jle
jne
add
cld
push
add
xor
mov
jo
dec
pop
sub
jae
jge
bound
mov
in
mov
xchg
mov
fstpl
adc
popf
test
xchg
add
jecxz
dec
std
call
jle
mov
inc
loopne
jge
adc
dec
scas
and
xchg
add
mov
add
pop
sbb
leave
pop
jne
cld
lods
xor
jl
lea
inc
or
adc
mov
addb
pop
inc
inc
inc
dec
dec
add
dec
dec
add
push
push
or
push
cmp
add
pop
popa
bound
fs
push
insb
insl
outsb
pop
outsl
jo
jb
add
ja
js
jp
add
xor
xor
sbb
aaa
cmp
cmp
das
cmp
popf
add
jnp
sub
cmp
add
sub
daa
or
or
in
addr16
xchg
and
lds
ljmp
es
and
add
out
mov
and
pusha
jmp
or
cld
add
sbb
pop
imul
add
sub
ret
and
add
data16
in
pop
sbb
jmp
xchg
jo
push
or
pop
iret
aam
adc
daa
push
mov
add
pop
dec
or
add
mov
movsl
push
xor
flds
data16
lock
add
insb
loope
add
sub
xor
push
call
add
adc
clc
add
std
mov
in
push
mov
dec
inc
add
add
jbe
into
mov
push
sbb
out
and
movb
lods
add
cli
inc
mov
adc
mov
push
insl
and
or
out
jnp
dec
push
push
dec
jp
add
mov
sbb
push
sarb
cmpsl
ret
sub
dec
lahf
push
pop
fldlg2
and
add
ss
loope
mov
aam
pop
lods
inc
mov
jg
add
mov
movsb
pop
insl
test
incb
aas
enter
sub
add
jl
sub
sbb
loopne
dec
in
xchg
add
lahf
xorl
pop
push
push
mov
jno
bound
jae
push
lret
add
test
mov
pop
mov
mov
cld
adc
clc
and
mov
push
add
imul
add
lock
inc
mov
scas
dec
ret
xorl
xchg
sbb
or
inc
or
je
js
add
dec
inc
mov
or
inc
push
ror
loope
add
insb
xchg
and
cli
ljmp
aam
lods
lahf
pop
jg
mov
leave
xchg
or
add
subb
sub
mov
mov
stos
pop
inc
mov
add
or
str
and
push
test
add
mov
cmp
out
loopne
shlb
xor
xchg
testb
add
inc
loop
add
xchg
pop
clc
addl
pop
mov
or
xchg
adc
push
sbb
leave
mov
add
add
fcompl
mov
mov
add
dec
jne
xor
jge
je
adc
mov
or
cmp
sarb
cmpsb
add
rcll
dec
add
nopl
testl
std
in
add
cmp
pop
add
sub
adc
sbb
mov
fcom
mov
mov
sbb
int
inc
mov
call
notb
out
test
lock
ret
in
pushf
jle
gs
in
in
push
add
idivl
bound
mov
daa
enter
adc
shrl
cs
mov
scas
push
in
lret
frstor
mov
shlb
fisttps
xchg
js
add
fsubrs
sub
or
cmpb
loop
decb
fidivs
mov
adc
ja
xchg
add
mov
or
pop
add
hlt
cmp
movsl
xchg
lock
add
pop
dec
repnz
daa
add
movsb
inc
dec
push
jmp
add
inc
xorl
jp
add
popf
jno
mov
add
pop
xchg
pop
fstpl
lock
rcll
adc
add
push
rcll
push
mov
jae
popf
jns
add
xchg
in
xor
scas
fs
xchg
les
mov
mov
pop
testl
ret
aas
add
cmpsb
pop
dec
or
mov
int
mov
stos
out
add
xchg
xchg
sbb
gs
mov
repnz
sub
mov
out
add
push
add
mov
fisttpll
xchg
dec
pop
mov
cmpb
pop
jle
mov
add
ret
add
dec
pop
push
mov
in
rolb
outsl
dec
pop
jne
cmp
inc
lahf
mov
popa
inc
flds
sub
jbe
add
xor
xchg
add
je
xor
filds
and
dec
add
sbb
and
dec
mov
cwtl
or
orl
dec
add
add
mov
arpl
mov
sbb
rcll
les
dec
adc
or
inc
sub
cmp
stos
rclb
xchg
xchg
cld
jge
testb
lea
bnd
add
lock
shl
adc
adc
sub
movsl
fs
pusha
imul
push
adc
pop
call
xchg
out
lock
push
sub
in
pop
cmc
add
pop
pop
hlt
andb
les
inc
test
fsub
push
pop
add
xchg
cld
push
xor
dec
add
inc
subb
jmp
mov
jl
add
jmp
fdivs
lock
add
into
add
jmp
rorl
pop
not
insb
out
ds
movsl
rclb
test
popa
aam
les
mov
fiaddl
loopne
lock
pop
cld
mov
arpl
test
pop
sbb
add
push
xchg
fistps
sahf
cmp
aam
pop
push
add
cmp
mov
mov
pop
out
dec
add
sub
push
adc
and
add
dec
fucomp
mov
jno
xchg
inc
and
push
rclb
repz
lods
dec
int3
pmulhw
sub
adc
add
pop
sarl
push
lock
push
mov
dec
jns
into
jmp
inc
mov
cmp
in
icebp
in
rcrl
fsubl
rcll
jne
mov
call
clc
dec
xorl
add
movl
mov
test
cwtl
xchg
cmp
dec
adc
add
push
adc
shl
ss
mov
inc
pop
jno
sub
sub
sbb
push
in
sub
or
bound
enter
push
pusha
xchg
clc
pop
stos
adc
mov
mov
inc
or
js
pusha
test
or
push
lods
inc
mov
fcoml
jnp
add
iret
dec
inc
and
add
inc
cwtl
stos
add
mov
addr16
repz
sub
lahf
call
lret
movsb
inc
pushl
add
ret
call
sub
or
lods
lret
sbb
xchg
out
in
into
ja
cmpsb
sub
push
stos
xchg
inc
andl
add
pop
dec
sub
fmull
loop
mov
sbb
xchg
in
inc
cmp
jne
pop
lcall
mov
push
and
test
ficomps
add
mov
cmp
add
mov
js
scas
or
push
inc
mov
incb
lea
rep
add
push
pop
sub
dec
jae
lret
mov
loopne
or
ja
cmc
add
sub
daa
jl
addl
mov
push
cmpl
mov
mov
or
add
stos
and
leave
ret
nop
pop
xchg
ljmp
pop
cmpb
outsb
adc
test
add
sub
or
enter
leave
or
out
add
or
adc
xor
add
and
xor
lods
loopne
add
lret
stos
sub
bound
call
mov
add
xor
add
jmp
and
xor
outsl
push
repnz
enter
or
and
mov
rolb
dec
and
fimull
cwtl
ja
daa
or
lods
mov
add
ret
xor
aam
cli
fiadds
xchg
call
jle
add
jmp
verr
mov
popa
add
xchg
jecxz
and
lahf
jo
and
xorl
jb
and
jae
pop
and
lods
movsb
sbbb
sbb
fmull
push
sub
add
xchg
inc
iret
jno
lods
sub
dec
jo
cs
mov
pop
xchg
add
push
sub
add
fcoms
loopne
test
add
or
sbb
repnz
mov
rorb
std
add
enter
add
je
pop
dec
dec
or
sbb
pushf
call
in
add
pop
sbb
arpl
hlt
add
dec
push
scas
add
adc
xor
mov
jne
jne
jl
add
cmp
inc
push
sbb
mov
sub
or
sbb
scas
and
leave
jae
xlat
into
test
nop
mov
xchg
or
jge
cmp
ja
adc
push
mov
repz
fcmovne
add
iret
mov
mov
mov
or
out
fists
sbb
add
pop
icebp
hlt
ret
push
add
lret
push
sub
adc
ret
inc
sahf
adc
aas
jo
xchg
xchg
cmc
add
clts
adc
jecxz
or
adcb
inc
clc
mov
jmp
cmp
imul
out
mov
pushf
inc
push
pop
add
add
dec
imul
insl
jae
or
repz
xchg
and
sbb
fnstcw
je
push
sti
out
jne
popa
add
push
in
mov
rorl
jmp
repz
out
add
pop
adcb
mov
call
add
jmp
add
xchg
adc
and
add
xchg
adc
fistl
adc
shrl
add
mov
sub
pop
dec
dec
xchg
push
mov
out
xchg
js
nop
xlat
add
add
jne
push
inc
adc
cld
in
jmp
pop
add
fisttps
or
in
cmp
add
rcrl
jmp
add
push
mov
sub
stos
popf
mov
xor
lds
out
push
adc
call
mov
adc
mov
add
cmp
mov
adc
add
cmp
jbe
add
dec
call
add
or
adc
jle
add
mov
xchg
lret
xchg
add
jb
mov
mov
lock
and
cmpl
je
sub
cmpb
and
cwtl
dec
xchg
test
cmp
dec
adc
mov
jl
sub
in
add
test
movsb
mov
mov
adc
add
cwtl
mov
nop
test
add
mov
push
dec
dec
fimuls
sub
xchg
sti
call
push
mov
mov
inc
xor
les
sub
or
push
cs
insb
clc
and
dec
sarl
orl
sbb
sbb
inc
jae
nop
mov
add
sarl
push
pop
push
lock
mov
loopne
dec
cs
adc
data16
mov
sub
rcll
and
mov
pushf
jne
dec
adc
test
lods
add
or
je
inc
jl
push
and
aaa
cmpsl
or
mov
repnz
sub
das
jbe
iret
mov
mov
push
mov
add
arpl
cld
in
lea
xchg
push
hlt
sub
jg
add
shlb
or
adc
pop
add
add
mov
mov
outsl
lcall
ret
popf
push
jge
sahf
fiadds
enter
inc
and
xorl
and
add
incb
sbb
test
xor
adc
es
out
addb
jge
push
push
xchg
ret
std
push
inc
inc
inc
dec
repz
cmp
dec
add
mov
mov
sahf
add
push
dec
inc
clc
dec
add
mov
or
xchg
add
movsl
mov
cld
mov
add
lods
imul
sub
sub
mov
aas
push
cmpb
mov
int3
pop
es
xor
pop
out
inc
adcb
and
je
inc
mov
lock
add
dec
inc
mov
xchg
js
add
rcr
add
mov
dec
imul
add
jns
mov
mov
sub
add
jb
je
outsb
xchg
jge
jmp
push
adc
xor
or
mov
dec
mov
cmpl
push
cmp
and
inc
sbb
dec
cmp
sbb
out
std
hlt
in
pop
cli
xchg
push
lock
nop
das
mov
sub
addl
sbb
inc
sti
or
adc
leave
shl
mov
pop
cli
pop
es
jl
out
inc
pop
call
loopne
add
mov
xchg
push
add
pop
enter
popl
das
jle
psraw
add
outsb
or
add
sub
add
cmp
jle
cld
cwtl
or
or
lock
js
cli
add
cmp
sub
aam
clc
and
sbb
in
add
sub
push
dec
shrd
push
add
ss
dec
xor
out
xlat
push
dec
push
add
popa
jae
mov
add
fsts
or
jge
loop
mov
inc
cpuid
mov
movsb
push
jb
add
add
cs
ret
pushl
loop
loopne
imul
jl
and
cmpsl
dec
add
cltd
les
in
mov
hlt
movb
lret
xor
call
cld
pusha
fsubrl
inc
sub
or
xor
and
in
dec
roll
fistpl
test
adc
add
dec
faddl
and
rclb
in
cmp
call
test
cmc
mov
mov
add
push
xchg
clc
enter
lea
sarb
xchg
jmp
lret
dec
add
jae
xchg
dec
or
push
jnp
add
mov
popf
imul
mov
jnp
add
lods
fsubrs
bound
add
fisubrl
test
and
movsl
mov
push
dec
das
ja
scas
cmp
cmp
jmp
out
xor
dec
pop
sub
test
xor
xchg
mov
test
xor
in
add
repnz
mov
mov
imul
dec
jnp
mov
add
pop
xchg
dec
sub
push
sub
xchg
ret
in
sti
into
add
jnp
or
inc
push
arpl
push
cmp
scas
adc
fdivl
pop
pop
sbb
add
add
mov
adc
int3
mov
mov
push
es
sbb
ret
mov
shrl
push
movsb
adc
and
jns
mov
lds
lods
cmp
jmp
dec
fisubl
popf
adc
add
mov
mov
in
fldcw
pop
jo
in
xor
lock
mov
pushf
int3
iret
shlb
jae
add
adc
push
add
adc
fbld
hlt
in
rep
xchg
xchg
fs
cmc
aaa
jbe
add
je
mov
add
pop
enter
add
add
jns
xchg
pop
push
cmp
lret
loopne
cltd
adc
mov
pop
jmp
pop
jecxz
fists
fiaddl
popa
and
and
dec
js
ret
mov
and
mov
xor
lea
sbbl
and
jl
ror
mull
testb
mov
add
in
scas
dec
fists
mov
out
mov
hlt
in
sahf
inc
xor
add
dec
sub
or
adc
inc
adc
adc
cmp
or
add
test
inc
push
xor
outsb
add
orl
jne
sub
jno
mov
cld
sub
ja
dec
or
pushf
add
inc
jne
je
fdivrl
ret
imul
mov
dec
push
sbb
push
call
sbbb
fldl
add
pop
pop
push
push
lods
loop
or
cmp
fiaddl
jae
jnp
lds
and
test
aam
dec
mov
xchg
divl
and
add
add
mov
mov
ljmp
mov
inc
add
hlt
fstpt
faddl
push
mov
or
add
lock
xchg
repz
hlt
sub
mov
test
call
add
enter
test
popa
adc
jbe
adc
and
rcll
pop
loopne
inc
add
scas
jno
fcompl
mov
add
mov
cmp
add
dec
inc
inc
and
mov
fdivr
and
testl
dec
xor
sub
pop
add
cld
xchg
mov
add
inc
cmp
adc
jg
cmp
add
inc
cmp
jb
or
loopne
adc
popa
add
mov
sub
rcrb
bound
jae
rcrb
test
aad
or
jnp
sbb
test
or
icebp
and
xor
jmp
scas
lahf
inc
or
ret
sbb
jl
sub
jne
cmp
in
je
cwtl
or
je
add
sbb
add
add
xor
or
add
dec
adc
mov
sub
cmp
sub
inc
sbb
add
in
dec
add
imulb
pop
pop
push
push
and
imul
cmpsb
add
ljmp
jne
sbb
je
sub
cmp
mov
jp
and
sbb
sbb
scas
inc
jne
leave
into
stc
ret
fcmovb
andl
nop
xor
je
push
add
jbe
rorb
add
cmpsb
sbb
dec
add
ret
test
enter
std
call
scas
sbb
cmpsb
add
xorl
or
add
add
inc
adc
movsb
push
loope
les
jne
mov
dec
cli
mov
add
add
repnz
sbb
and
add
sbb
pop
ss
push
add
inc
nop
subl
mov
sub
add
adc
xlat
stc
or
outsb
mov
pop
jne
mov
addr16
repz
push
dec
in
add
push
out
jg
adc
and
xor
faddp
push
jno
ja
pop
nop
mov
mov
loope
adc
push
clc
or
rcl
je
xor
adc
sbb
aas
jmp
mov
mov
xor
xor
adc
in
fld
cli
call
faddl
xor
adc
movsb
jnp
add
stc
push
enter
add
mov
shl
xor
or
xchg
adc
jo
enter
dec
push
shlb
xchg
mov
out
add
icebp
push
or
adc
sbb
push
mov
sub
add
push
and
ret
ret
lsl
scas
cmp
stc
cmp
jmp
add
dec
shrl
add
loopne
dec
cmp
inc
adc
lret
pop
and
cmc
popf
inc
je
cli
inc
and
pop
add
std
add
adc
add
je
cld
shlb
or
add
jnp
addr16
add
fistpl
dec
test
jle
add
and
pushf
pop
enter
add
mov
sub
xchg
mov
push
pop
jnp
add
jo
cmovo
add
sti
call
aad
pusha
pop
add
cmp
iret
loopne
shl
int3
jmp
cmc
lea
sti
and
sbb
or
jp
add
cmc
clc
pushf
cmp
fsubr
loopne
ret
pop
sbb
and
push
fxch
mov
idivl
xchg
add
xor
adc
rep
inc
push
add
add
mov
cmp
adc
fisubrl
jae
pop
sbb
mov
les
and
push
xchg
sub
inc
call
jb
scas
sbb
clc
call
and
pop
enter
xchg
sub
sbb
clc
lds
les
cmp
scas
iret
and
sbb
scas
adc
je
mov
movsl
or
adcl
lds
cltd
jns
pop
jp
scas
jg
inc
mov
ss
mov
sub
push
mov
add
push
sbb
push
add
int3
adc
aam
enter
mov
add
or
mov
out
and
inc
adc
subb
add
movsb
add
mov
lods
insl
inc
xchg
push
and
sub
cmpsl
subb
rolb
pop
ljmp
sub
ret
xor
mov
sub
and
dec
stos
or
inc
testl
jl
daa
add
loop
mov
mov
xor
shlb
mov
icebp
sbb
xor
addl
add
popf
xor
loopne
cltd
daa
add
pop
mov
pusha
cmp
jmp
popl
xchg
and
pop
sbb
pop
jmp
mov
adc
roll
ds
xchg
mov
jo
add
les
pop
cmp
fidivrs
enter
lods
xchg
mov
pop
leave
verr
inc
inc
test
pop
and
cmpsb
shll
in
sbbl
jp
mov
sub
insl
ret
inc
mov
sbb
adc
loopne
push
inc
jmp
clc
xor
nop
stc
add
xlat
in
add
dec
jl
add
dec
add
pop
inc
dec
adc
test
andb
push
fidivrl
cs
sti
rcrl
shl
mov
xchg
fadds
lock
add
add
addr16
dec
mov
push
or
fdivrl
jbe
xor
add
loope
ret
add
rorb
add
fs
int
add
and
shrb
sub
loope
add
outsb
pop
jl
cmp
aas
add
inc
add
and
clc
cmp
jle
test
sub
imul
fistl
hlt
sub
sbb
push
adc
xchg
push
xor
add
cli
jg
das
fdivrs
mov
sbb
insb
adc
lods
lcall
xchg
sbb
add
sub
push
jnp
ja
in
outsb
test
jbe
cli
xlat
and
std
pop
cmp
jge
lea
cmp
lret
andb
scas
sub
test
add
lea
cld
cmp
sbb
out
add
add
fnstcw
ret
sbb
add
popf
push
sti
mov
dec
add
push
outsl
push
imul
mov
jo
push
or
call
inc
mov
add
lret
xorb
loope
push
mov
call
shrl
or
cmp
lret
jl
repz
mov
and
imul
mov
adc
movd
inc
stos
jge
into
mov
test
add
mov
or
pop
lsl
lahf
scas
mov
scas
sarb
mov
adc
rcll
js
add
sub
xchg
icebp
push
add
nop
sbb
add
inc
xor
inc
sbb
adc
nop
add
cwtl
invd
imul
sub
scas
add
jp
mov
mov
popf
in
mov
fildl
sub
mov
push
rclb
mov
add
adc
or
inc
cld
jg
int
xor
xchg
jno
std
mov
scas
mov
inc
jns
pop
cmpsb
and
stc
cmp
add
mov
dec
call
ret
add
push
imulb
inc
mov
mov
mov
inc
jb
push
shrb
inc
mov
js
sub
sbb
mov
add
pop
es
cmp
xorl
pusha
lock
adc
dec
cwtl
stos
inc
mov
dec
rcl
add
add
add
adc
or
mov
rcrb
das
call
push
sub
push
adc
inc
add
mov
les
out
fdiv
in
add
cwtl
enter
inc
out
adc
fiadds
mov
loope
pop
ret
push
jns
addb
adc
aaa
ret
js
cld
insb
adc
iret
add
or
lods
inc
pop
pop
adc
add
adc
inc
cld
xchg
xor
sbb
add
mov
mov
add
add
mov
adc
mov
outsl
addr16
in
sbb
and
mov
testb
add
cmp
jnp
add
mov
mov
jno
loopne
data16
push
dec
rolb
sub
and
mov
mov
add
push
jo
cmp
or
add
mov
sub
push
pop
orl
ljmp
xchg
mov
jb
cs
adc
flds
pusha
mov
scas
and
mov
mov
inc
movsb
add
jle
fwait
sub
ret
or
inc
rcll
daa
orb
push
pop
cld
into
sbb
add
xor
aam
mov
add
and
aam
flds
je
add
in
cltd
test
icebp
roll
loopne
and
jl
mov
scas
cmp
add
lods
inc
les
inc
jno
add
inc
and
hlt
xchg
adc
pop
out
add
push
add
and
test
add
inc
add
or
js
dec
xchg
add
cs
and
xchg
nop
lds
inc
pop
rclb
adc
adc
xchg
xor
add
push
shl
add
nop
add
fcomps
push
add
ret
pop
pop
inc
mov
aad
or
xchg
int3
ljmp
in
mov
out
mov
xor
int
and
sahf
adc
je
mov
aas
and
cmp
fs
sub
inc
decb
nop
inc
andb
add
mov
xor
mov
add
xor
sbbb
push
testl
add
mov
mov
aam
adc
or
mov
add
mov
sub
fwait
mov
in
mov
hlt
mov
das
push
in
dec
cmpsl
shl
inc
cs
sbb
add
inc
push
push
pop
std
jl
mov
cli
add
mov
adc
or
mov
movsb
mov
xchg
clc
test
jg
dec
push
cmc
test
jno
add
stos
cld
jb
out
add
sub
adc
icebp
les
jae
mov
push
jg
add
and
enter
dec
aaa
dec
pop
clc
adc
cli
sub
xlat
mov
adc
push
add
pop
mov
sti
sub
jmp
fisttps
mov
xchg
aad
pop
xlat
jnp
int3
mov
pop
add
insb
fldl
enter
repnz
pop
jbe
xchg
out
cmpsl
xlat
into
xchg
push
loop
add
push
push
sub
data16
mov
adc
fisttps
into
mov
pop
inc
push
sbb
xor
int
sbb
sbb
lea
or
inc
cmp
repnz
loop
adc
adc
mov
cmp
add
insb
outsl
insl
mov
in
jb
add
and
leave
mov
test
lods
dec
out
add
mov
mov
aaa
fs
or
sbb
sti
daa
inc
insb
sahf
decl
add
mov
inc
or
pop
mov
pop
add
das
insb
int
or
dec
mov
movsb
roll
inc
fadd
popf
lret
mov
cltd
shl
add
xchg
adc
sahf
lret
or
push
mov
clc
sub
mov
fistpll
popa
add
pop
les
mov
mov
xchg
out
leave
or
mov
ds
inc
adc
inc
inc
cmp
pop
icebp
or
les
and
adc
mov
dec
loop
add
mov
in
sti
shlb
or
cmpxchg
repnz
shll
sub
mov
int3
les
popf
cmp
pusha
add
fistpl
cmpsl
into
sbb
call
push
cwtl
and
daa
outsb
ja
call
add
pop
leave
pop
mov
cmp
mov
inc
int
add
lods
icebp
dec
fldt
adc
inc
scas
jae
les
add
inc
fdivrl
and
inc
mov
pusha
pop
xchg
sbb
cmpsl
jb
or
sbbl
mov
and
leave
stc
fildll
add
imulb
push
and
add
cs
mov
in
stc
adc
or
jge
movsb
mov
mov
pop
mov
pushl
iret
mov
ljmp
jmp
add
fisubrl
sarb
stc
pop
mov
mov
aaa
das
jno
scas
dec
fisubs
pop
out
and
clc
out
pop
out
or
xor
aaa
lret
sbb
stc
add
call
dec
push
push
mov
fimuls
xchg
jnp
mov
and
inc
mov
and
movsb
push
add
or
flds
out
push
and
test
or
stc
and
mov
cmp
inc
fistpll
adc
shrl
jmp
pop
inc
test
sahf
mov
adc
stos
loop
aas
nop
mov
stos
sbb
xchg
add
pushf
push
push
cmpb
and
pop
jbe
add
or
xchg
shl
pop
fsubrl
add
les
loope
adc
push
mov
repnz
loopne
shlb
test
and
pop
test
ds
aas
xor
scas
outsb
lret
add
sarl
or
xor
call
add
push
add
negb
mov
xor
call
jb
dec
sti
xor
sbb
xor
push
pop
add
dec
outsl
jnp
out
xor
and
add
lods
pop
call
xchg
aam
nop
out
jge
add
sub
pop
mov
cmp
inc
ljmp
sub
movsl
idivb
scas
imul
pop
adc
jg
add
decl
sbb
scas
add
sub
add
insb
aas
hlt
inc
add
sbb
scas
lea
adc
lock
daa
in
inc
cmp
sbb
add
pmuludq
cmp
dec
mov
addb
dec
and
hlt
ret
add
jl
dec
adc
and
add
push
es
inc
out
add
call
aas
xorb
xchg
out
mov
enter
in
cs
and
mov
add
shll
pop
in
adc
or
jmp
mov
xor
int3
lods
pop
dec
mov
xlat
sub
fnstsw
das
jl
adc
mov
clc
inc
add
mov
bound
push
xor
incl
nop
sub
shl
pop
add
out
pop
push
cmp
ret
or
pop
shlb
and
data16
mov
lods
sub
and
mov
rolb
pop
out
arpl
rcr
mov
sub
or
pusha
jmp
xor
ret
mov
cmp
mov
sbb
add
daa
dec
pop
mov
sbb
push
mov
push
sub
pop
cmp
insl
adc
xor
aas
or
adc
hlt
push
sbb
andb
mov
push
xor
repz
cmp
call
fildl
and
lock
jmp
mov
xor
pop
cmp
adc
call
lret
lds
sbb
jmp
or
inc
ljmp
daa
adc
push
adc
and
mov
xor
sub
mov
andb
mov
repnz
pop
cwtl
stc
xchg
jp
and
psubb
adc
scas
jae
orb
sub
cmpsb
or
movsl
add
les
mov
jo,pt
insl
push
inc
mov
adc
cld
xchg
jo
lret
add
cwtl
subb
out
dec
or
sub
or
enter
sub
pusha
or
in
jae
mov
pop
mov
jp
push
pop
cld
sub
push
in
pop
push
inc
test
cld
shrl
mov
mov
xchg
les
dec
mov
inc
and
or
in
pop
insl
cmp
ret
xor
or
pop
jecxz
mov
adcl
fists
in
cli
pop
add
push
xor
data16
test
sub
dec
in
les
jo
into
test
jl
out
cld
in
loopne
sbb
mov
mov
mov
popa
inc
loopne
loopne
push
add
rorl
jnp
hlt
mov
addb
lahf
loop
mov
outsl
inc
jbe
jno
es
ds
add
mov
xchg
mov
mov
mov
gs
or
cmp
out
pusha
fisubs
sbb
sahf
dec
and
clc
pop
cmp
jmp
add
xchg
cli
mov
add
test
lock
cmp
add
push
test
dec
lock
xchg
inc
notl
sub
or
mov
loop
mov
jnp
jle
add
lods
xor
testb
icebp
cld
or
mov
or
shl
pop
inc
cld
mov
or
push
cltd
mov
daa
xchg
jecxz
cld
dec
add
add
cmpsb
aam
push
icebp
adc
add
or
pop
cltd
pop
jle
mov
repnz
rcrb
pushf
lcall
xorb
sahf
xor
das
lock
pop
lahf
roll
sarl
mov
test
ret
push
adc
sub
not
push
and
sub
shrl
into
mov
inc
loopne
rorl
dec
cmp
lods
ds
jnp
inc
rclb
or
or
cmp
sub
xor
nop
and
and
dec
repz
or
dec
aam
repnz
add
adc
rcrb
inc
hlt
enter
pop
shll
cli
push
outsl
pusha
movsl
mov
out
pop
stos
and
add
add
hlt
xor
add
add
bound
xchg
or
mov
adc
xlat
adc
pop
push
push
movsl
jecxz
xor
dec
push
adc
and
inc
add
xchg
mov
lock
ljmp
mov
jo
add
mov
xor
leave
addl
cmp
inc
push
add
pop
add
mov
add
mov
add
inc
cmp
pop
clc
das
adcb
mov
cli
xchg
add
sbb
hlt
xor
loopne
push
enter
lret
add
ss
dec
sbb
add
in
cmp
cmpb
mov
jo
adc
or
mov
into
inc
out
add
sbb
pop
fsubs
xor
add
inc
sub
add
add
push
in
pop
add
xor
inc
dec
sete
xor
add
or
and
pop
addb
loop
add
jecxz
out
mov
nop
xor
xor
jo
xchg
or
sbb
outsl
add
push
in
out
add
xor
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
xor
push
mov
mov
push
call
cli
cmp
push
and
sbb
icebp
mov
inc
sbb
mov
outsl
enter
nop
sub
and
pop
inc
xor
add
stc
cmp
mov
pop
add
enter
dec
and
and
push
clc
jb
pop
or
or
cwtl
pop
stos
testb
in
and
mov
pusha
cs
xchg
dec
ret
ss
stc
dec
mov
add
call
movzwl
sub
nop
js
jl
pop
add
repz
and
test
negb
bound
hlt
jb
ds
xor
rcll
inc
pushf
jp
mov
mov
enter
push
test
test
std
jnp
add
jge
add
call
add
daa
or
outsl
mov
fstpl
xchg
out
sub
pusha
pop
lock
inc
add
jb
sbb
faddl
dec
test
add
movsb
pop
and
push
add
test
fmul
rolb
mov
in
jp
add
xor
push
sbb
inc
fiadds
xorb
aas
les
jb
fdivrs
fmull
add
out
or
loopne
int
shlb
push
pop
fbstp
aas
negb
pop
bound
mov
repz
or
or
arpl
xchg
mov
clc
xchg
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
sbb
aas
enter
xor
and
sbb
inc
and
movb
and
inc
add
test
push
inc
sbb
je
mov
or
push
pop
add
sbb
fadds
jns
lret
cld
enter
sbb
add
fldl
mov
aas
xorb
mov
push
or
roll
shll
dec
and
add
in
add
adc
jp
pop
je
adc
test
mov
add
adc
ljmp
loopne
add
add
dec
jne
idivb
sbb
icebp
xor
rcl
es
add
and
xor
mov
das
xor
aam
add
jo
scas
add
pop
pop
sub
pop
xor
add
jle
in
mov
cmp
ret
mov
add
or
jle
add
int3
rolb
xadd
iret
push
or
xchg
nop
lret
orb
add
rcr
or
neg
negl
inc
sbb
add
rcr
sub
jmp
push
add
inc
filds
pop
add
rcrb
cmp
add
aam
aad
rclb
adcb
js
in
call
jo
add
rcl
rorb
loopne
lock
xor
shl
repnz
xor
push
ss
cmp
add
add
shlb
cmp
adc
cmp
rolb
cmp
cmp
add
jo
add
sar
cmp
sbb
sub
jmp
pop
sub
out
scas
nopl
pxor
sub
arpl
js
in
and
lcall
test
and
xor
or
jecxz
and
cmp
shlb
and
xlat
mov
xlat
mov
mov
ja
add
cmpsb
xchg
andl
push
insb
shrl
scas
add
outsl
sbbb
inc
scas
shrl
sbb
stos
add
test
push
inc
mov
rclb
jp
aas
mov
push
jg
mov
cmpl
jne
cmp
ja
mov
mov
inc
jbe
jb
mov
mov
jae
mov
jno
jo
jo
adc
nop
add
rclb
inc
je
jbe
js
sbb
sbb
add
xchg
adcl
pop
inc
jo
in
roll
sbbl
loopne
pop
mov
pop
pop
inc
cwtl
fisttps
lahf
mov
sbb
dec
xchg
add
dec
out
dec
cmp
or
or
rolb
inc
inc
xchg
addr16
addb
cmp
data16
cmp
test
jl
push
mov
adc
cld
pushf
mov
pop
rcrl
popf
mov
xor
ret
inc
and
and
push
sbb
cpuid
sub
loopne
sbb
add
fcompl
pop
outsb
jecxz
andb
xor
lods
push
ds
out
add
jae
call
mov
pop
fnstcw
jbe
in
xor
out
ret
and
and
cwtl
mov
push
add
in
lock
adc
add
add
push
mov
cmp
sub
arpl
xorl
push
add
shrd
jmp
sub
jmp
push
pop
out
pusha
rclb
add
cld
mov
add
pop
dec
or
lods
xor
ret
orb
lcall
add
dec
or
xlat
lcall
add
pop
sbb
pop
pop
adc
adc
pop
lods
add
jle
and
mov
outsl
enter
cld
dec
bnd
aad
ror
push
lods
cmp
cmpsb
jmp
add
call
inc
leave
clc
or
add
jb
xchg
outsl
pop
inc
ljmp
test
cld
jbe
adc
cmp
je
shrb
ja
add
push
lea
add
jmp
mov
xchg
add
jp
mov
pop
scas
js
add
add
push
and
addr16
push
mov
shr
cmp
add
mov
mov
sub
or
subb
push
clc
aad
add
lcall
add
ljmp
mov
insb
add
inc
jno
sub
fiadds
add
not
and
pop
daa
add
or
pop
add
ret
inc
incl
ret
jb
sbb
clc
cmp
rol
jne
jg
add
dec
or
bnd
dec
rep
xchg
mov
into
roll
adc
addl
gs
cmp
push
mov
stc
iret
fsubp
icebp
push
push
and
rorl
inc
adc
lret
lock
add
scas
and
and
and
xchg
jno
sub
add
add
mov
fwait
enter
xor
addb
cmp
cmp
push
adc
loopne
cmp
dec
mov
add
add
push
xchg
cli
fisubs
sbb
movsl
stc
or
sub
xchg
mov
sar
pop
call
sbb
movsb
ret
addr16
adc
ljmp
and
inc
inc
popa
adc
cmp
xchg
mov
xor
mov
and
add
xor
mov
ja
lods
inc
mov
sbb
push
adc
add
leave
or
nop
testl
push
repz
mov
outsb
sub
dec
lock
or
pop
leave
loope
adc
add
adc
cmp
add
adc
jle
lock
xchg
mov
mov
sub
add
pop
fnstenv
xchg
nop
sub
sbb
aas
jno
addb
and
enter
or
push
sbb
and
lret
or
pop
icebp
shll
cmp
add
pop
push
or
stos
enter
orb
xor
sbb
rcl
repnz
out
xchg
pushf
sbb
or
or
add
out
idivl
jmp
sub
les
stos
and
inc
aad
xor
and
pop
sub
ret
dec
cld
icebp
or
mov
test
cld
xchg
loopne
popf
sahf
push
lret
mov
or
push
or
pop
je
hlt
add
inc
pop
mov
rclb
test
add
fadd
and
leave
je
jl
cs
ljmp
int
pop
dec
mov
xor
xor
psubw
daa
call
add
or
add
dec
sbb
push
dec
lahf
mov
data16
and
jmp
inc
push
mov
cltd
add
imul
cmp
andb
in
push
add
jae
mov
add
add
mov
in
int3
inc
lds
pop
test
pop
lea
mov
mov
adc
adcl
add
push
push
add
adc
or
lret
adc
sub
adc
adcb
push
mov
je
add
push
pop
mov
das
pop
mov
inc
mov
dec
subb
or
in
pop
add
mov
adc
lret
add
movsb
adc
pop
sbb
add
enter
jae
jns
shlb
sub
rcl
in
push
xchg
add
jbe
test
clc
jle
mov
push
push
mov
sbb
pop
add
jb
loop
std
in
pop
lods
adcl
enter
and
ss
push
insl
cmc
and
rcll
hlt
in
repnz
data16
test
mov
xchg
push
ljmp
sub
fwait
jnp
lsl
sbb
jne
push
int3
sub
add
dec
xor
repz
inc
jecxz
jecxz
hlt
mov
jmp
xor
add
nop
adc
sub
xchg
sbb
rolb
shll
inc
add
nop
jl
mov
cld
sbb
sar
rol
pop
jl
add
dec
gs
hlt
cld
lret
fisttps
test
inc
dec
jmp
mov
push
imul
hlt
fcompl
xchg
mov
or
and
inc
rcrb
adc
jl
add
dec
cmp
xchg
push
inc
fs
jo
aas
shr
addb
mov
js
jne
sbb
mov
add
dec
loopne
out
xchg
add
mov
rclb
fwait
aam
and
shl
inc
adc
cmp
fistps
movsl
xor
shrl
fcoms
rcrb
mov
nop
lods
jns
add
mov
lahf
add
adc
or
pop
aad
inc
popf
std
insb
sbb
add
push
out
add
pushl
fs
push
push
mov
add
or
mov
cmpl
or
out
sbb
xor
lahf
inc
xchg
adc
mov
loop
fs
add
mov
add
add
sbb
shll
inc
mov
imul
jb
push
or
das
pop
push
push
cmp
enter
lcall
add
shl
mov
mov
and
xor
mov
pop
cltd
sub
aam
or
pop
rolb
push
shl
cmp
divb
and
test
sbb
pop
movsb
in
jmp
addl
loope
std
sbb
jbe
inc
and
mov
add
push
push
icebp
mov
cmp
sti
pop
jmp
xchg
into
push
mov
lock
adc
cmp
aam
call
rclb
int
mov
add
es
stos
dec
push
dec
fsubr
arpl
push
sub
rorl
pusha
mov
add
aaa
shll
dec
das
fstpl
jns
adc
pop
mov
cwtl
push
arpl
imul
pop
inc
mov
dec
loope
sub
and
inc
inc
add
scas
push
push
cli
add
fdivs
push
push
jge
adc
add
mov
pop
inc
inc
lock
imul
sub
js
pop
jb
push
decl
lcall
pop
pop
dec
jns
outsl
in
call
adc
add
lock
test
loope
adc
push
jge
es
rclb
ljmp
movsl
cmp
add
dec
pop
leave
repz
mov
aad
or
push
inc
into
inc
mov
repz
mov
fs
pop
jo
rolb
dec
push
in
shrb
cld
enter
out
jb
ret
call
mov
movw
add
push
inc
or
adc
or
lods
cs
adc
add
push
sub
xor
sub
sbb
sbb
or
mov
mov
add
imul
verr
outsb
sub
push
les
xchg
sbb
addb
lea
adc
add
bound
ret
xchg
xchg
mov
jns
add
and
test
lods
hlt
inc
movsl
push
ds
ficomps
xor
jns
sbb
dec
test
push
aam
outsl
mov
and
xchg
dec
iret
cli
cmp
daa
add
inc
mov
mov
mov
arpl
cmp
xor
inc
cmp
adc
jl
or
pop
or
add
xchg
movb
or
adc
dec
inc
arpl
push
pop
mov
add
sti
ret
je
or
jmp
adc
repnz
dec
xorb
pop
jne
out
and
push
add
repz
inc
outsl
xor
cs
add
aas
loopne
fdiv
inc
pop
add
and
pop
sub
or
scas
jne
lret
add
ds
push
in
push
lds
mov
jl
fsts
in
or
sub
inc
jno
sub
sarl
push
js
adc
add
outsb
mov
or
jb
sbb
repnz
cmp
jne
inc
pop
add
push
jmp
add
dec
and
mov
xor
adc
loopne
sub
gs
add
mov
add
mov
jb
pop
insl
pop
std
stos
mov
jo
mov
xor
aas
arpl
xlat
imulb
rclb
cli
xchg
lea
pop
mov
mov
dec
or
jge
mov
add
lds
and
jo
mov
adcb
sub
sub
cmp
sbb
pushf
lret
repz
sub
jl
mov
or
jmp
cmpsb
hlt
call
jns
mov
fistpl
inc
rcr
add
je
rcrl
or
test
cld
enter
lret
add
push
push
js
add
or
adc
add
std
repz
cld
mov
movsb
sbb
mov
xorl
inc
add
test
cmc
and
cli
clc
add
pusha
add
mov
mov
fistpl
out
mov
lea
addl
scas
sbb
sbb
cmp
mov
push
add
imul
add
sub
out
cmp
pop
jmp
jb
mov
sub
cmp
movl
inc
ds
mov
jne
push
cwtl
xchg
mov
add
push
out
ja
sbb
test
jmp
inc
adc
nop
pop
fldl
xor
sbb
test
dec
adc
push
mov
rorb
mov
pop
pop
orb
adcb
xor
dec
inc
dec
scas
dec
or
xchg
ja
adc
xorl
pop
leave
sbb
flds
jle
and
inc
add
ret
fistps
inc
xor
xlat
loop
inc
pop
sub
adc
cmp
cmp
cltd
inc
push
mov
mull
ret
adc
and
enter
loopne
add
add
mov
loop
faddl
sbb
sbb
add
xchg
xchg
addr16
or
xchg
pushl
push
push
cmp
pop
dec
jge
sub
mov
cmp
jb
add
dec
xchg
fnsave
add
cmpsb
jge
adc
push
loope
dec
mov
sbb
ljmp
xor
rolb
pop
ret
test
cmp
hlt
inc
testb
cmp
roll
mov
or
idivb
and
cmp
xchg
add
or
rcl
push
jmp
inc
roll
out
fadds
push
or
fstpl
dec
add
ret
sub
pop
mov
mov
add
test
cld
rcl
je
add
dec
mov
cmp
mov
add
pop
pop
xor
add
rcll
cmp
inc
sbb
out
fsubrl
adc
inc
jne
aas
mov
xchg
add
adc
cmc
les
testb
stc
adc
repnz
adc
jmp
xor
add
sti
rorb
xor
xchg
mov
gs
notl
rclb
pop
cmp
mov
add
popa
xorl
or
xor
mov
add
mov
outsl
repnz
pushf
ds
adc
xchg
sbbb
rolb
es
cmpsl
fisttps
and
inc
adc
mov
sbb
pop
add
sub
rcr
jb
dec
adc
adc
ja
or
lods
sub
sbb
pop
repz
frstor
pop
inc
mov
add
dec
scas
xor
add
dec
rcr
add
mov
or
push
cld
pop
shll
out
cmp
andb
pop
add
mov
out
or
adc
jmp
push
add
add
push
inc
or
sbb
inc
or
ljmp
sub
ds
add
test
lock
sbb
add
out
sub
fwait
dec
xor
in
sub
mov
add
inc
mov
add
les
xchg
mov
add
inc
mov
sbb
fisubs
ja
add
sbb
and
sbb
mov
and
lret
inc
lock
cwtl
add
orb
mov
outsl
call
sbb
dec
mov
mov
or
cs
repnz
push
movb
sub
dec
jmp
andb
adc
test
rol
mov
cli
sbbb
getsec
test
notl
mov
adc
jne
jns
push
rclb
xchg
sbb
adc
push
push
rclb
mov
push
inc
stos
rolb
mov
sahf
push
out
cld
call
cmp
inc
jg
or
push
addb
add
push
pusha
data16
dec
add
daa
dec
cmp
sub
mov
add
inc
jnp
push
sub
push
sub
test
xchg
mov
or
push
aam
push
xchg
cmp
rolb
push
jg
add
sub
push
lock
adc
rcrl
xchg
xor
cmc
and
or
cmp
lods
nop
in
add
pop
dec
push
xor
sbb
pop
sbb
inc
movsb
xchg
pop
mov
sub
push
cs
mov
insb
imul
ret
cltd
xor
stos
call
xchg
dec
push
mov
xchg
or
xchg
rcll
and
dec
inc
std
and
add
push
aam
adc
inc
lret
add
stos
cwtl
fnstcw
add
add
or
add
cltd
add
fisubrs
mov
cmpsb
mov
adc
es
add
stc
ds
call
test
lea
xor
call
rolb
sbb
mov
inc
dec
sub
testb
inc
add
push
dec
out
xchg
lea
mov
gs
mov
cmp
xor
push
inc
jo
scas
pop
nop
cli
pop
aas
lock
or
mov
in
jle
mov
adc
ds
mov
cmp
push
add
sub
test
lahf
hlt
or
add
push
cs
das
pop
jbe
jo
push
add
xor
add
add
clc
pop
jg
push
mov
jbe
pusha
sub
pop
and
add
push
mov
xor
lret
xchg
add
jge
mov
das
push
adc
or
inc
or
push
push
gs
xchg
out
add
fs
add
mov
pop
push
add
xchg
pop
adc
clc
or
divl
add
mov
jae
aam
or
lahf
inc
xchg
add
mov
pop
mov
or
hlt
cmp
out
aad
outsl
xor
or
xchg
ljmp
fistpl
fsubs
cmp
add
enter
icebp
insb
mov
fadds
add
jge
push
jg
mov
add
call
enter
loop
adc
getsec
pop
dec
dec
and
mov
fsubs
lea
rolb
stos
and
xchg
push
adc
scas
jne
cwtl
and
jo
fdivrs
add
fs
add
mov
add
rcr
sbb
aas
add
loope
xor
inc
fdivs
pop
mov
jle
jo
pop
add
dec
xor
push
or
pop
das
es
sbb
push
xor
mov
cs
hlt
in
adc
pop
ds
add
outsl
cltd
and
jae
cli
add
jl
orb
pop
es
leave
lret
sub
inc
jo
and
mov
add
in
mov
imul
call
dec
daa
add
fisubs
mov
jge
fs
push
shrl
pop
pop
test
push
pop
push
jp
and
test
inc
sub
inc
jns
or
mov
bound
nop
add
mov
xor
in
and
and
adc
pusha
add
add
xor
sub
sub
sbb
add
adc
mov
sbb
add
add
adc
add
insl
mov
xor
orb
out
mov
movb
cmpb
add
or
add
sub
add
cli
add
push
push
mov
add
add
test
or
xor
add
pop
push
xor
sub
add
cmpsb
push
mov
adc
js
cld
inc
push
push
pop
fucom
scas
sbb
cli
sub
push
add
and
pusha
pmuludq
mov
add
sarb
sbbb
dec
scas
add
call
add
cld
lea
add
inc
das
lds
xorb
rcll
fnstcw
add
popa
or
add
add
push
inc
push
stos
ret
xor
jmp
cltd
sub
pop
int
sbb
add
into
mov
fadd
push
push
inc
mov
push
add
out
fimuls
leave
add
pop
jecxz
add
sbb
fcomps
fwait
mov
in
enter
sub
mov
push
inc
dec
xchg
dec
inc
push
pop
mov
lock
xchg
add
xor
push
fstpt
ds
gs
adc
clc
shl
add
ljmp
add
push
pop
sbb
jle
xchg
test
jo
push
nop
addb
and
cmp
sub
popa
inc
movsl
mov
sub
pop
jno
inc
xchg
add
xchg
movsl
mov
mov
dec
add
add
iret
int3
xchg
ret
pop
add
adcl
int
jge
mov
repnz
call
repz
jnp
andb
ds
push
add
insl
orl
adc
popf
adc
cmpsb
adc
xchg
lcall
and
aas
shlb
and
mov
cmovb
add
repnz
add
std
in
ret
pop
mov
add
xchg
xor
jns
pop
sarl
sbb
add
rcrb
add
test
fldcw
push
shlb
call
push
iret
add
inc
sub
add
mov
rol
rorb
fadds
xchg
inc
dec
stos
jp
add
je
flds
add
cld
int3
test
pop
es
cmp
mov
in
mov
andl
hlt
test
jp
add
aas
daa
cmp
mov
mov
mov
add
push
mov
rcrb
enter
xorl
subb
cmp
add
adc
or
sub
add
dec
mov
add
add
scas
lds
ds
add
xor
sub
sub
mov
add
repz
push
cmp
add
add
sbb
sbb
push
loopew
sub
add
xor
add
stos
inc
rcr
in
push
add
xchg
push
mov
xor
dec
cmpsb
push
std
add
add
daa
or
adc
loope
sub
or
mov
aad
xchg
sbb
cmp
jnp
xor
loope
xor
pop
cwtl
pop
icebp
int
push
decb
lcall
in
add
gs
cmp
outsb
jl
adc
add
test
add
sub
inc
cli
add
xor
fs
and
push
sbb
fwait
add
jecxz
sbb
push
add
push
dec
add
in
arpl
lds
mov
dec
add
mov
aas
ret
sbb
or
xor
aaa
lock
arpl
jb
imul
push
stos
inc
insl
add
sahf
add
ret
and
stos
xor
mov
icebp
add
movsl
ret
sub
test
mov
pusha
xchg
insb
xor
jne
push
data16
sarb
aam
push
pop
into
test
mov
out
add
lret
add
adc
push
stos
sub
icebp
add
dec
pop
in
xor
pop
les
jecxz
jns
ss
add
pop
mov
or
add
inc
or
lds
push
ret
add
cltd
fnstsw
sub
js
pusha
adc
add
push
pop
fsubrs
xchg
mov
push
ds
cmp
push
sub
jecxz
jo
subl
nop
out
sbb
mov
or
fs
je
ret
adc
xor
jb
sub
sbb
cmp
or
fs
rolb
test
leave
cmp
lods
pop
adcb
jmp
adcl
movsb
push
and
sub
clc
pop
lcall
in
scas
add
test
repnz
repnz
imul
stos
mov
nop
je
cmpsl
sbb
add
cmp
or
or
clc
dec
int
mov
add
sbb
hlt
scas
xorb
adc
outsl
andb
push
test
mov
push
lock
inc
fildll
dec
ja
cmp
aas
xor
pushf
and
lds
call
gs
sbb
sti
lcall
in
addr16
pop
shlb
lea
xchg
adc
adc
add
cmp
xor
inc
test
mov
mov
add
xchg
stc
sbb
xor
mov
cmp
add
and
movsl
cld
add
xor
or
enter
scas
xchg
and
loopne
jmp
adc
or
xchg
stos
scas
adc
ret
jns
repnz
sub
inc
cmc
or
icebp
push
sbb
jle
and
loop
sbb
sub
mov
add
dec
xor
dec
mov
add
sub
add
pop
hlt
pop
pop
xchg
add
lret
clc
lcall
add
mov
pushf
ret
and
sub
or
or
lea
aam
mov
pop
fstl
and
jno
fisttpl
cmc
push
mov
cwtl
add
lret
mov
add
stos
xchg
iret
test
popl
int
or
add
les
dec
fistl
cmp
mov
push
jg
call
and
mov
stc
nop
mov
inc
xor
add
inc
add
xor
add
xlat
mov
aas
cld
mov
or
lods
fisubrl
ror
add
push
not
movsl
cmpsl
sbb
add
test
fists
cmp
pop
add
cmpb
and
xor
sarb
dec
imul
iret
inc
shlb
jmp
pop
add
xor
sub
inc
sbb
add
int3
and
dec
out
or
add
mov
subl
sbb
push
das
xchg
pop
movsb
rorb
out
setno
and
xor
add
push
loope
and
or
test
add
and
dec
lods
sti
cmpxchg
scas
dec
inc
ficoml
shrb
mov
sahf
test
jns
mov
or
cmp
fdivrs
lea
add
test
into
sbb
mov
push
inc
add
add
mov
call
cmp
lock
jne
cwtl
daa
out
add
xchg
lahf
cld
movsb
adc
mov
sarb
xorb
loop
dec
ds
repnz
and
addr16
shlb
and
mov
mov
div
add
xchg
rcrb
cmp
dec
or
mov
imul
lock
add
lock
je
adc
mov
xchg
les
jl
dec
add
sti
pop
sub
dec
movl
xor
sbbb
loope
lret
pop
das
xchg
sahf
adc
jle
aaa
mov
call
cmp
cmp
js
in
clc
or
cmp
dec
mov
or
scas
add
mov
je
pusha
adc
sbb
das
add
mov
lret
push
add
mov
and
gs
sahf
hlt
xor
cmp
lahf
push
adc
call
add
repnz
add
ja
cmpsl
aad
inc
jg
sub
aas
mov
push
add
or
int
inc
pop
xchg
out
adc
ret
mov
out
cld
loop,pn
cmpsl
add
scas
je
inc
mov
lea
xor
gs
dec
mov
enter
data16
pop
leave
mov
daa
iret
add
sub
add
pushf
cmp
add
cmp
sbb
pop
cmp
das
dec
mov
fdivs
movl
cmp
pop
cmpsl
fcoms
xchg
jecxz
xchg
mov
add
mov
pop
add
inc
jge
pop
movsb
pop
push
sub
push
sbb
jns
push
enter
inc
dec
jno
xchg
fs
jge,pn
fidivl
out
les
add
sbb
mov
fbld
push
pusha
sub
cmp
jno
add
jne
xchg
add
push
jns
or
mov
add
push
pop
mov
pop
jle
sahf
cmc
add
push
and
xor
stos
push
ret
jp
push
add
sub
test
mov
popf
xchg
push
or
bswap
hlt
adc
negl
add
lock
loope
scas
add
xchg
sub
add
sub
mov
pushf
hlt
mov
add
fildll
aas
lcall
inc
inc
mov
std
lret
push
pop
sbb
mov
rcrb
popf
mov
in
sbb
cmp
les
push
test
sub
jb
inc
dec
or
lret
pop
xor
jo
pop
std
add
popf
or
adc
mov
lods
sub
add
scas
jecxz
imulb
mov
dec
xor
cwtl
adc
or
dec
sbb
jne
stos
movsb
adc
mov
and
stos
inc
repnz
push
add
push
fucom
inc
fdivrl
xchg
into
sbbb
les
out
mov
add
lea
mov
repnz
mov
adc
push
out
xchg
inc
daa
push
inc
push
xchg
jne
add
mov
je
add
adc
imul
add
inc
push
aad
mov
fiaddl
add
xor
imul
lods
fisttpl
test
xchg
mov
out
cmc
cwtl
hlt
jne
or
std
push
add
dec
push
push
ret
jmp
and
jae
adc
mov
sub
push
or
and
cld
rcll
mov
in
mov
and
ljmp
xor
or
test
and
xor
sub
inc
sbb
push
cltd
jl
add
sub
adc
movsb
push
jns
jge
je
add
neg
add
pop
and
out
or
xorl
add
jne
incl
jle
mov
aad
add
loopne
bound
call
and
jmp
roll
repnz
jnp
or
in
adc
out
pop
sub
addb
ljmp
js
sar
cli
add
insb
xlat
cmovg
cmpb
xor
mov
je
bound
push
pusha
push
sbb
rol
jnp
or
cmove
add
and
jmp
inc
sbb
dec
jne
addl
jg
pop
sub
sbb
aas
aaa
pop
sbb
and
cltd
in
pop
test
add
dec
es
scas
sub
loopne
cwtl
sbb
mov
add
and
cwtl
push
add
pop
jp
mov
pop
push
rolb
ss
add
jle
ret
sbb
and
inc
dec
cmpsb
out
push
add
sbb
push
and
add
inc
jo
mov
xor
cmp
pop
je
add
xor
cmp
loop
add
idivb
add
sbb
add
movsl
inc
lea
add
ret
sti
mov
ja
add
or
mov
xlat
movl
mov
add
xchg
mov
add
push
call
prefetch
pusha
leave
mov
or
add
push
sbb
push
mov
dec
or
jbe
sub
ret
js
xor
pop
inc
lret
mov
sbb
dec
mov
sahf
pop
jae
jb
cmp
mov
mov
xchg
mov
dec
inc
subb
lret
adc
xchg
inc
push
jo
aaa
push
jle
shll
add
jl
cmc
jp
insl
clc
dec
pop
pusha
add
icebp
shlb
sub
mov
xchg
mov
or
dec
pop
pushf
loop
sbb
decb
dec
add
inc
jb
out
and
nop
pop
cmc
decb
mov
stos
jo
add
dec
sbb
pop
mov
setno
pop
xlat
add
stos
cmp
testl
mov
pop
add
lret
adc
daa
add
and
in
fisubrl
push
jo
add
inc
ljmp
ret
movb
cmp
push
add
aaa
out
sub
les
pop
mov
xchg
push
xor
inc
add
in
or
sbb
cli
jns
xchg
add
push
movsl
cmp
xchg
mov
add
nop
push
dec
ljmp
mov
inc
insl
ja,pn
bound
pusha
fistps
adc
arpl
jge
push
jbe
outsb
pusha
addr16
sbb
push
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
or
inc
push
popa
add
jge
jl
inc
nop
add
outsb
loope
addr16
clc
stc
push
jo
inc
pop
sbb
pop
outsl
insb
andb
pusha
ror
jae
jge
pop
inc
mov
and
inc
adc
xorb
push
fwait
or
jno
jp
out
fimuls
adc
arpl
push
insl
ja
add
mov
fs
add
xchg
or
jbe
sbb
mov
ret
je
loopne
outsb
lods
sbb
icebp
dec
push
jbe
fs
jg
mov
or
push
jae,pn
add
inc
outsl
ljmp
sbb
push
xchg
imul
arpl
inc
jno
je
jns
pop
addr16
popa
andb
xchg
je
sysret
mov
dec
sahf
loop
outsb
imul
sarl
sahf
inc
decb
add
push
push
imul
sti
and
xchg
pusha
clc
lahf
add
push
push
xor
xchg
sbb
inc
adc
adc
add
jbe
mov
push
mov
insl
data16
jp
lock
call
xor
outsl
sub
loopne
push
push
ljmp
adc
pusha
movsl
xor
inc
ja
dec
arpl
mov
je
cmp
imul
lret
insl
jnp
add
fcoml
or
loopne
add
mov
mov
les
pop
movsb
add
test
inc
cmpsb
xchg
cltd
add
sub
add
dec
sub
or
pop
push
mov
inc
push
cmp
adc
cmp
sub
add
rolb
push
cmp
ret
inc
pop
subb
and
cmpsl
sbb
lcall
popa
divl
sbb
xor
xchg
lods
loopne
pop
jecxz
sbb
push
inc
jns
sbb
cmp
sti
loopne
adc
jl
and
fldl
xchg
hlt
mov
or
adc
js
pop
cmpb
sbb
sub
inc
gs
into
dec
xorl
and
inc
inc
add
xor
adc
das
es
rorl
call
add
push
sbb
and
inc
push
adc
xor
xor
sbb
add
shrb
add
test
mov
in
push
adc
icebp
in
out
or
pop
push
es
mov
sarl
add
pop
ret
push
add
popf
pop
xchg
cmp
repnz
mov
pop
or
push
subl
sarb
mov
sub
mov
pop
cld
mov
xor
cmp
jne
mov
add
jmp
test
pop
clc
sbb
xor
xor
in
push
movsl
stos
mov
xchg
scas
add
enter
ljmp
push
add
das
test
fildl
cld
lock
add
nop
enter
lea
lock
push
mov
mov
decb
insb
ds
mov
andl
int3
add
fisttpl
je
pop
mov
pop
mov
jbe
filds
por
add
test
aaa
push
mov
pop
cmp
stc
jmp
push
add
mov
fldcw
push
push
inc
dec
addr16
add
js
mov
fcoms
lahf
scas
pop
mov
mov
iret
inc
les
ret
int
cmp
inc
adc
add
pop
jg
les
test
xchg
les
jbe
aaa
xor
hlt
push
add
mov
jg
sbb
cmp
rolb
push
push
add
out
and
adc
add
repz
sub
add
in
das
mov
sbb
out
add
movb
fisubrs
mov
cltd
push
xor
jle
add
adc
pop
add
mov
mov
movsl
add
aas
cmc
dec
jl
add
jp
inc
add
and
pop
push
jo
dec
dec
pop
add
mov
fcoms
cmp
push
sbbb
add
add
dec
jmp
mov
fisubrl
jmp
pop
add
cmp
adc
ret
sub
adc
add
adc
mov
add
jmp
xchg
mov
add
je
add
das
push
dec
pop
jmp
jp
add
mov
stos
xchg
sbb
or
scas
into
pop
push
rcll
add
scas
push
or
mov
in
fadds
or
mov
rolb
dec
cmp
or
imul
mov
sbb
add
and
pop
addb
xor
add
incb
mov
imul
jae
add
jecxz
add
fsubr
push
add
and
pop
nop
ret
daa
xchg
jmp
inc
dec
sbb
cmc
sarl
fstpt
mov
jmp
outsb
add
jb
loopne
add
test
scas
adc
dec
xchg
add
cmp
lahf
daa
push
pop
ja
mov
jmp
icebp
bound
fldenv
and
add
cli
into
and
mov
jbe
mov
add
cmpsl
push
and
out
xchg
inc
inc
jmp
or
add
or
lret
and
add
or
add
or
xor
jmp
cltd
push
add
xchg
subb
push
jne
sub
and
ret
fst
mov
pop
cmpb
sbb
loopne
inc
add
xchg
lods
cmc
cmp
shll
push
ret
jg
add
test
testl
stos
shll
mov
addr16
adc
adc
pop
pop
bound
inc
cwtl
or
push
xchg
cli
cmpsb
in
hlt
xor
sbb
cwtl
test
adc
xchg
adc
adc
sub
aas
js
and
test
rorb
pop
lds
xlat
mov
dec
sub
rolb
jge
icebp
jl
loopne
cwtl
pusha
das
andb
outsb
add
sti
cmp
push
fcomi
scas
out
inc
or
subb
add
aad
push
pop
add
dec
loope
jnp
add
xchg
mov
lock
sub
or
cmp
add
movl
sbb
or
ret
pop
lret
leave
sbb
sbb
sbb
cmp
push
adc
add
jne
lods
lahf
hlt
mov
push
pop
inc
inc
or
lret
xchg
sbb
inc
scas
add
mov
call
mov
cmp
jle
dec
add
cmpsl
pop
call
dec
adc
mov
mov
sti
sar
add
loop
fs
and
jnp
jns
adc
and
add
insb
pop
fsubrl
xchg
adc
dec
push
pop
cli
mov
pop
jle
or
pop
jmp
loop
xlat
nop
jno
fistl
pop
inc
push
add
or
repnz
in
ds
mov
push
xor
jmp
repz
rolb
call
cmp
inc
jae
mov
sti
neg
pop
sub
pusha
inc
inc
mov
rorb
jmp
push
push
sub
test
ljmp
dec
js
mov
cmpb
and
rorl
add
add
in
add
cs
add
out
jmp
out
inc
jne
add
add
jb
xorl
nop
add
cld
and
int3
setb
add
ljmp
cmp
aaa
mov
in
lea
mov
push
cmp
sbb
push
sarl
add
pop
mov
xor
cld
add
mov
add
mov
jb
fadds
repz
mov
cmp
adc
ds
dec
add
aaa
xchg
loopne
add
cmp
shlb
enter
dec
mov
out
push
scas
stos
ffreep
jle
call
aam
cmpb
shll
add
add
aaa
adc
out
adc
and
cvttps2pi
add
cli
or
xchg
mov
rcrb
addl
loopne
iret
mov
in
data16
push
sbb
cmp
sbb
adc
add
sbb
fimuls
clc
jge
add
rolb
add
loopne
jle
out
lods
fadds
add
add
cmc
add
xlat
iret
test
mov
inc
inc
shr
and
mov
fstl
push
mov
sti
lret
jne
rorb
jg
xchg
and
add
adc
dec
ficoms
push
adc
or
push
jmp
xchg
or
mov
out
push
test
add
dec
mov
addb
inc
cltd
sbb
or
rorl
adc
mov
insb
fadds
xchg
adc
clc
inc
sbb
scas
add
dec
inc
push
lret
mov
jno
and
mov
aaa
mov
sarl
testl
adc
icebp
jp
jbe
pushf
enter
ljmp
mov
xor
add
hlt
xlat
clc
lahf
xchg
add
scas
cmp
add
inc
movsb
test
sbb
in
add
jmp
call
add
xor
cmpsl
loopne
xchg
lcall
les
stos
pop
insb
hlt
and
inc
sbb
lahf
sub
sbb
call
pop
scas
loopne
add
int3
add
add
aam
inc
in
mov
ficompl
inc
nop
scas
je
pop
mov
jl
pop
cld
lret
add
outsb
lods
jecxz
adc
inc
mov
icebp
inc
mov
cmp
inc
fadds
push
push
add
dec
lock
pop
test
shlb
sbb
mov
mov
push
lcall
fcomip
pop
jnp
jp
js
and
dec
aas
cmovb
mov
push
xor
add
mov
inc
gs
sbb
in
insb
mov
xor
pop
rsqrtps
imul
add
or
sub
fstpt
add
jmp
hlt
adc
test
xchg
addr16
insb
sbb
inc
cmp
add
clc
push
sbbb
add
std
or
aam
pop
test
mov
push
sahf
adc
fists
ficoms
outsb
add
inc
jo
add
sub
pop
or
mov
pop
bound
enter
dec
leave
jo,pn
js
mov
and
dec
xchg
les
dec
rcrl
push
std
mov
push
mov
push
mov
pop
or
pop
mov
add
fwait
dec
sub
popa
add
jnp
mov
sete
inc
mov
enter
or
outsl
add
ret
sub
lret
add
add
insl
in
cmp
inc
subb
add
jp
dec
add
sarb
adc
mov
add
jne
pop
pushl
fildl
out
add
push
cs
and
pop
xchg
mov
jae
add
or
shlb
test
in
aad
sbb
enter
sbb
pop
lret
push
sub
ljmp
icebp
xor
pop
pop
xchg
add
int3
or
mov
mov
push
jno
push
adc
mov
das
icebp
mov
or
cmp
inc
pop
and
in
psubsb
rcrl
add
pusha
mov
xor
add
add
test
aam
jg
in
aas
adcl
mov
or
sarb
or
add
xchg
add
push
cmc
xor
xorb
adc
sbb
add
jbe
cli
xchg
sbb
iret
pusha
mov
jb
cld
push
mov
cmp
in
mov
lea
add
testb
stc
push
lods
sbb
add
push
cld
add
jnp
faddl
dec
test
cmpsl
aam
sub
jne
call
adc
hlt
aas
addb
and
xor
xorb
loop
mulb
ret
or
jne
jge
add
push
mov
push
dec
sarl
ljmp
jg
and
mov
inc
adc
push
xor
clc
inc
cmp
sub
and
inc
add
sub
or
mov
dec
pop
sub
add
push
jo
or
es
cmpsb
dec
aas
add
ds
fadds
push
or
xchg
cmp
je
mov
dec
subb
rolb
add
adc
testb
jo
repnz
cmp
cmp
jbe
js
add
jnp
cmp
inc
inc
add
jae
push
cmp
inc
ja
out
psrlq
inc
pop
mov
sub
inc
jp
loop
push
in
lock
sbb
pusha
fmul
inc
negb
mov
mov
or
cmp
push
shr
cli
add
neg
push
adc
mov
jmp
jge
add
and
and
icebp
mov
mov
movsb
push
or
cmp
xchg
jae
cmp
les
and
bound
add
das
lock
add
lods
push
cmp
and
ret
xor
sub
jp
cmp
add
je
pop
pop
fnstcw
jmp
adc
fsubrs
and
enter
add
jo
loopne
mov
daa
sub
mov
add
rorl
mov
ror
mov
push
les
add
je
push
sbb
aaa
lea
inc
jecxz
xchg
call
je
shr
sub
call
dec
rcrb
mov
test
xor
aaa
aam
mov
in
add
sbb
adc
cmp
add
mov
mov
add
mov
adc
hlt
pshufw
lods
add
mov
enter
cmp
sbb
push
add
xchg
or
adc
adc
ret
push
pop
sub
add
fidivl
xor
lock
and
sbb
xorb
jl
adc
stc
scas
push
or
sbb
clc
daa
lret
cmc
push
test
mov
cmp
push
jnp
inc
mov
dec
jmp
add
mov
test
adcl
jmp
ret
jne
add
dec
fs
sbb
mov
sbb
pop
cwtl
clc
sub
push
lcall
jmp
int
mov
push
sub
xlat
mov
test
mov
cmpl
call
imul
je
addl
or
rorb
add
add
pop
ret
push
push
push
data16
pop
mov
dec
sub
shlb
fbld
add
jae
sahf
inc
imul
lea
add
jg
arpl
push
out
xlat
mov
add
pop
andl
xchg
add
or
xorb
js
shrb
ret
in
add
inc
inc
add
ret
les
mov
add
add
xor
test
repnz
inc
add
or
sub
call
scas
xchg
push
test
shlb
pop
add
sub
jno
add
and
shlb
push
lret
xor
xchg
orb
je
call
mov
pop
repnz
add
push
adc
xchg
sbb
mov
push
pop
and
push
jae
lret
sbb
jmp
lahf
cmp
mov
add
cmpsb
push
xorb
mov
xchg
ret
pop
sub
popa
push
hlt
cmp
add
pop
jg
shll
addb
dec
sti
shlb
xchg
xchg
in
xchg
add
add
push
cmc
pop
hlt
add
push
cld
lcall
sbb
or
stos
pop
cs
lea
add
loop
adc
xor
lods
shl
sbb
pushl
dec
addl
or
pop
cs
xchg
jno
mov
pop
and
dec
mov
pusha
cmp
ret
jo
icebp
clc
push
adc
adc
js
pop
add
sarb
add
xchg
or
out
add
cmp
inc
dec
adc
adc
add
push
pop
add
jg
test
add
add
imul
adc
fnstsw
xchg
test
in
inc
movups
adcb
push
mov
inc
inc
outsl
jne
add
mov
daa
or
cmp
pusha
adc
mov
std
mov
add
add
xchg
add
mov
add
ljmp
pop
mov
or
push
xor
mov
sub
push
push
push
push
push
inc
jle
mov
xchg
xor
push
push
add
je
push
or
add
jp,pn
dec
push
test
inc
push
xlat
test
in
popa
addr16
and
lods
gs
lock
push
mov
add
push
enter
inc
mov
mov
inc
sub
jae
iret
xchg
or
lock
or
sub
sbb
adcb
nop
fs
mov
jno
pop
aam
add
sub
add
nop
xor
test
jb
clc
pushf
js
daa
in
adc
adc
mov
lock
sbb
inc
push
mov
sub
xchg
add
int3
nop
or
push
add
jno
aaa
sti
cmpb
cs
comiss
stos
cmp
push
nop
cmp
loopne
mov
sbb
dec
add
inc
add
xchg
lods
jmp
xor
adc
sub
movsb
pop
rep
cmp
and
nop
add
add
push
xor
mov
cld
movb
sti
and
rolb
or
cmpsl
pop
cmp
or
jo
sbb
lret
sti
cmp
mov
shrb
jns
loop
add
cwtl
push
into
jmp
call
dec
cmp
add
mov
add
cmpsb
inc
push
mov
add
add
lock
iret
add
sub
push
pop
xorb
add
shl
xlat
addl
scas
sub
mov
je
sub
add
pop
xorl
xor
stc
std
jle
add
pop
mov
mov
sub
repnz
adc
add
push
push
inc
lds
add
and
fs
adc
dec
dec
add
test
mov
sahf
sbb
xchg
enter
pop
push
sbb
sbb
fsubs
sub
movsb
push
add
jge
mov
mov
in
add
lea
subl
scas
lods
adc
dec
mov
add
jnp
lods
and
ds
test
adc
andl
or
lock
cltd
add
dec
pop
rorb
cmpsb
jae
or
andb
sub
clc
mul
cmp
testb
xor
mov
pusha
pop
jl
and
or
addb
dec
cld
sub
xchg
shlb
xor
or
je
cmpb
add
adc
inc
cwtl
incb
shr
pop
jo
inc
dec
jmp
out
push
aad
mov
cmp
cmc
jne
cli
loopne
push
popa
pop
add
or
mov
pop
pop
add
or
pop
mov
ficoms
add
shll
stc
cld
add
into
pushl
mov
daa
or
aam
add
or
inc
and
je
sar
add
cmp
test
test
fidivrs
or
xor
mov
sbb
mov
and
sub
iret
add
mov
and
js
jmp
add
call
repnz
and
shlb
jge
add
pop
inc
leave
xchg
sbb
dec
sbb
rol
push
inc
clc
int
add
xor
sub
hlt
aam
dec
leave
jecxz
data16
loop
stc
inc
nop
mov
add
fwait
xor
lret
test
xchg
jne
movsl
cli
add
and
mov
pop
xor
inc
fdivrs
mov
repnz
out
xorb
add
inc
out
and
mov
cwtl
cmpsl
fdivrs
ds
aas
cmc
push
adcb
pop
test
xlat
add
movsb
pushf
cmpsl
outsb
mov
filds
pop
inc
mov
adc
adc
cli
add
sub
add
sub
ds
cmp
mov
push
push
ljmp
pusha
test
xor
les
adc
clc
test
lods
cli
and
sarl
sbb
add
stos
mov
push
rorb
dec
sarb
or
adc
adc
ret
pop
sub
fadds
in
xchg
inc
add
xor
inc
iret
pop
jmp
popf
andb
ljmp
dec
add
stc
cli
or
aas
push
lahf
jnp
mov
add
cmpsl
xor
pop
inc
xchg
jne
fwait
pop
add
test
xchg
adc
ss
push
ret
ljmp
cli
rclb
repz
add
call
movb
jns
cmpsl
lock
sti
add
ja
sub
jge
pop
and
clc
shrb
or
addb
mov
inc
or
add
jo
xchg
or
cltd
add
out
jg
add
add
mov
in
push
insb
test
mov
dec
adcb
rcr
les
cmp
daa
add
ja
mov
inc
adc
dec
mov
bnd
xchg
and
push
imul
and
push
inc
pop
js
add
not
or
fwait
aam
arpl
add
imul
test
pop
xchg
push
adc
push
mov
adc
je
dec
mov
pop
sub
inc
add
aaa
test
js
add
push
je
or
pop
lcall
inc
mov
lret
lds
add
push
inc
fs
stos
xor
iret
mov
jbe
adc
ret
or
pushf
sbb
cwtl
jnp
pop
push
out
lds
cmp
xor
push
and
pop
add
je
jp
arpl
ja
add
mov
or
add
shlb
insb
cmp
test
loop
imul
and
cli
into
je
lcall
add
pop
movlps
dec
xchg
rcrb
mov
subb
and
inc
pop
js
movsl
sti
xchg
add
pop
rcrb
adc
mov
lds
mov
inc
jmp
or
push
sub
adc
loop
fsubl
mov
jne
add
sub
subl
push
add
cmp
mov
inc
roll
pushf
sbb
lea
sbb
aam
dec
test
scas
pop
loopne
mov
jo
mov
xchg
xor
outsl
and
sub
add
push
outsb
add
mov
add
popa
cmp
or
add
push
push
pop
pop
mov
sahf
cmp
out
adc
add
push
adc
xor
push
dec
sub
sub
push
in
adc
hlt
add
mov
pusha
and
fwait
add
push
mov
add
jge
cmc
bound
loopne
notl
popf
fdivr
inc
aad
mov
sbb
inc
adc
add
mov
xor
sub
push
xor
loopne
pop
adc
mov
or
rorb
add
mov
test
cwtl
testl
xchg
push
jmp
add
add
movsl
push
popa
out
sbb
push
cmp
and
clc
and
pushf
fistl
push
popa
mov
aaa
adc
stos
cmp
pop
add
add
push
jg
cwtl
flds
aas
fdivr
add
enter
movsb
mov
jbe
cmp
inc
roll
inc
add
and
dec
mov
pop
mov
shlb
add
imul
dec
outsb
mov
test
pop
add
xor
cmp
fstpt
or
push
das
adc
mov
sahf
insl
add
or
outsl
loopne
push
dec
add
xor
movsb
jo
in
loopne
mov
sysenter
test
add
jecxz
pop
mov
sbb
in
and
shr
add
test
add
repnz
dec
push
hlt
jmp
enter
or
pop
std
in
pop
aad
out
dec
test
sub
jo
or
pop
sub
sbb
mov
push
inc
sbb
xchg
add
add
or
xchg
or
mov
cmp
clc
push
jmp
cmc
add
xor
add
and
lock
or
decl
add
call
or
cs
jnp
mov
mov
and
jo
inc
push
mov
sbb
mov
mov
into
lcall
push
mov
test
or
call
add
scas
sarb
inc
push
push
add
in
mov
xchg
mov
int3
jne
add
pop
pop
adc
nop
scas
pop
xchg
cmp
cli
jp
out
xor
push
mov
adc
sub
pop
and
sti
lock
dec
imulb
cmpb
sbb
mov
pop
call
andl
mov
cmp
jno
mov
ds
or
push
push
pop
pop
dec
inc
adc
pop
adc
inc
loope
mov
mov
add
xchg
dec
arpl
ja
adcb
jmp
dec
adc
sub
ret
loope
add
call
cmp
sub
popl
mov
movsb
add
fldcw
dec
test
mov
pop
mov
add
movl
sbb
jno
rorl
dec
test
ret
push
aaa
add
dec
es
in
sub
push
add
mov
dec
push
xlat
mov
add
mov
mov
sub
mov
cltd
dec
sub
imul
cmp
cmp
cltd
insl
or
dec
xchg
sbb
sub
push
and
and
xchg
push
add
aas
mov
enter
notb
lret
mov
xor
inc
mov
add
pop
mov
mov
pop
mov
add
pushf
jmp
jp
add
mov
jg
ret
jo
lret
rcrb
sahf
lods
mov
add
mov
in
cwtl
cmc
jns
pop
mov
or
mov
sub
cld
pop
into
arpl
mov
ret
and
and
ljmp
leave
out
or
andl
int3
add
xor
jg
add
mov
ja
add
sahf
lods
scas
dec
in
add
push
enter
out
xlat
andb
jno
add
xor
pop
xlat
fmul
ljmp
adc
lret
es
std
xchg
shrl
mov
pop
cld
fdivp
data16
xchg
mov
dec
dec
stc
ret
pop
pop
mov
lret
in
mov
imul
xor
test
movsb
lods
pop
mov
lea
add
sub
mov
dec
sbb
iret
cmpsl
xor
jnp
movb
add
cmovp
push
mov
mov
add
imul
sbb
jle
xorb
in
push
jle
add
adc
adc
or
add
aas
loop
xchg
adc
sub
stc
push
add
subl
inc
mov
sub
ret
cmpsl
xchg
adc
add
sub
lock
or
add
add
mov
pop
xor
pushf
int3
jnp
cmp
adc
pop
add
clc
sbb
lock
rol
add
sbb
sub
jae
jmp
add
dec
movsl
or
jne
add
pop
adc
sub
fcomps
pop
cmp
adc
add
inc
call
and
fwait
ljmp
adc
jne
out
pop
xor
mov
adc
mov
pop
jns
xor
add
xor
shrl
jg
add
mov
cmc
cmp
adc
add
repnz
push
cmp
dec
cli
adc
push
aam
scas
clc
inc
add
adc
add
mov
imul
add
add
pop
sbb
faddl
les
mov
push
jne
inc
adc
dec
xlat
xchg
loop
clc
adc
xchg
add
jb
dec
aam
mov
jno
add
and
div
mov
test
cmp
adc
sbb
mov
out
mov
sarl
insl
cmp
jbe
push
add
mov
push
or
cmp
adcb
jnp
inc
add
lcall
pusha
iret
mov
cwtl
clc
add
jne
jb
in
into
sub
add
mov
add
jg
cwtl
aam
add
insb
shlb
add
cltd
xor
aas
pop
mov
add
jmp
add
in
jmp
adc
add
or
outsl
cmp
mov
add
lods
in
mov
lock
add
cwtl
inc
int
popf
lcall
inc
rcrb
or
xchg
add
aam
ret
loopne
insl
mov
es
cmp
pop
shlb
aaa
hlt
add
cltd
in
enter
incb
jo
dec
andb
add
xorl
add
daa
lahf
sub
or
cmp
add
sub
push
add
pusha
pop
or
push
pop
fadds
add
push
loopne
fildl
jnp
das
fidivrl
push
dec
pop
pushf
enter
pop
pusha
push
cmp
or
and
inc
mov
adc
rcll
sub
stos
sbb
sahf
or
sub
inc
test
lcall
sbb
aam
xor
or
add
adc
in
sub
or
ja
add
sub
add
push
xor
sahf
add
je
mov
inc
sbb
pop
add
push
leave
pop
sarb
add
mov
fs
add
xchg
cmpsl
xchg
push
jb
xchg
cmpb
cmp
movsb
push
or
or
mov
inc
push
xor
sbb
cld
lret
filds
inc
jmp
mov
sahf
or
test
pop
add
add
adc
sbb
outsl
hlt
cld
sti
add
jbe
fiaddl
js
mov
adc
add
dec
scas
mov
sbb
int3
aas
orb
and
lcall
clc
lock
dec
lds
inc
orb
jp
add
mov
pop
lds
cmc
add
aaa
adc
and
mov
mov
pop
icebp
pop
dec
xchg
pusha
loopne
cmp
add
inc
iret
pop
ljmp
bound
and
scas
jae
les
sbb
sahf
inc
push
xchg
das
mov
shl
add
add
bnd
sbb
in
das
fs
fadds
mov
dec
xor
push
sbb
lds
sbb
popf
adc
sbb
add
test
dec
xchg
xadd
cmpl
add
pop
sbb
enter
inc
cmp
pop
inc
xor
or
and
push
mov
lahf
mov
xchg
lock
mov
push
mov
add
call
lea
mov
pop
adc
sub
popa
pop
push
dec
or
mov
xchg
xor
movsb
sahf
xchg
popfw
jae
and
sub
cmp
mov
mov
push
xchg
cwtl
cmp
add
jb
pushf
pop
jmp
ja
add
fnsave
stos
inc
cmp
shll
jb
cld
jle
inc
xor
adc
fisubl
clc
mull
stos
ja
lcall
stos
sub
add
inc
and
aam
and
sub
in
nop
push
lock
adc
push
add
ljmp
cld
ret
adc
mov
mov
call
pop
into
adc
insb
lods
add
nop
push
mov
movsb
mov
movsl
pop
setb
frstor
adc
sbb
and
xor
pusha
fnsave
fnstsw
cwtl
mov
push
rorb
xorb
and
pop
out
mov
sbb
push
cwtl
dec
dec
fsubrp
add
xchg
iret
add
adc
dec
inc
out
mov
cli
lret
push
loopne
add
fldcw
test
nop
les
mov
and
add
pop
ror
stos
add
movsl
decl
push
jnp
inc
fdivp
shrb
push
push
enter
sbb
mov
es
orl
add
xor
ficomps
test
add
jb
pop
adc
enter
inc
loop
dec
pusha
adc
dec
push
das
or
dec
fs
push
pop
xor
add
xor
jmp
jae
fiadds
and
add
add
or
aad
pop
in
inc
add
jns
cmc
fld
cmp
xchg
insb
jmp
xor
add
and
push
pop
jns
push
mov
addb
gs
lcall
insl
sbb
pop
ja
mov
ret
add
addl
adc
in
pop
push
xchg
scas
ljmp
add
and
sqrtps
xor
mov
popa
xchg
outsb
or
ret
dec
pusha
adc
push
and
mov
cmp
scas
std
sbb
mov
pop
or
or
adc
and
jo
lahf
loopne
pusha
jo
addb
shl
add
add
add
add
loop
add
push
addb
mov
ret
or
repz
adc
push
mov
push
push
mov
add
xor
popf
mov
inc
sub
stos
or
pop
lret
mov
out
pop
xorl
cld
jp
add
add
mov
xlat
pop
adc
cmp
rorb
lcall
sub
shr
aam
movsb
add
jns
iret
and
mov
ds
pop
mov
pop
fdivl
pop
lods
sarb
mov
pop
mov
push
mov
add
sub
push
push
push
cwtl
push
and
mov
cs
loopne
popf
mov
rep
mov
cmp
hlt
lock
add
mov
cmp
add
inc
inc
cmp
mov
call
add
cwtl
push
inc
pop
adc
rcrb
dec
enter
addb
sbb
adc
xchg
push
xor
shl
add
add
les
add
xor
jo
add
add
cmp
mov
add
inc
shlb
dec
mov
movsb
leave
insl
shl
in
mov
add
sbb
and
add
sti
sub
add
mov
mov
sti
mov
and
jge
dec
jnp
fcomip
ljmp
sbb
cld
add
jle
test
add
lea
inc
add
rorb
jae
add
adc
and
push
cmp
mov
andb
enter
and
inc
xchg
mov
insb
mov
mov
or
loop
pop
or
inc
addr16
dec
pop
inc
xchg
enter
lods
mov
sbb
add
lcall
add
or
out
mov
mov
sti
fmull
add
or
push
adc
or
mov
scas
pop
js
stc
xor
shlb
cld
cs
loop
pop
sub
addb
and
pop
add
movsb
adc
addb
in
fcompl
mov
add
inc
sub
cmp
ret
add
sbb
js
push
add
adc
scas
pop
xlat
das
mov
xor
pop
or
adc
add
add
mov
leave
jns
test
add
or
xchg
mov
ret
and
call
add
pop
rorl
shlb
adc
shrb
mov
mov
push
mov
jnp
sbb
jp
jecxz
add
inc
cmp
jb
xchg
rcrb
cmp
pop
add
int3
testl
mov
in
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
or
rcrl
add
lea
pushf
add
call
idivl
inc
mov
push
add
push
jle
add
add
pop
add
call
pop
pop
xor
ret
add
mov
enter
add
rcl
jno
push
add
sub
sub
stos
xor
roll
mov
rorl
addl
adc
lea
repz
push
xchg
dec
pop
cltd
xchg
or
pop
ret
add
xor
or
adc
adc
mov
mov
jo
add
inc
jmp
jne
sub
cmpsb
pop
sbb
jle
adc
rorb
and
add
ljmp
adcb
testb
pop
push
cltd
or
sbb
pop
push
mov
cmovs
and
jl
mov
xchg
cmp
add
stos
or
add
and
mov
add
inc
xor
movb
cmpb
cs
fiaddl
and
sbb
cmp
add
gs
push
mov
mov
add
divl
call
fwait
pop
lock
mov
loope
in
ljmp
mov
add
adc
fcompl
pop
add
adc
xchg
push
dec
xor
push
add
fistpl
mov
mov
lds
and
adc
add
xor
sti
leave
add
push
pushf
adc
roll
lea
cs
mov
pop
adc
and
cli
mov
add
dec
or
nop
or
and
jo
add
lea
pushf
sbb
cmp
jnp
testl
sub
ror
rcl
ljmp
pop
in
xchg
ficoml
hlt
add
adc
lret
ja
adc
xchg
scas
push
xchg
sbb
insb
nop
mov
addl
add
jno
add
inc
add
push
add
cs
loop
and
es
or
add
out
push
or
push
mov
mov
jns
xchg
sub
or
sbb
inc
or
inc
out
lahf
mov
xlat
call
jmp
pop
adc
insb
test
or
lods
adc
xlat
pop
add
sbb
add
add
add
mov
mov
or
repnz
sbb
sbb
add
dec
mov
aam
push
jg
fisttpll
push
mov
adc
inc
lea
pop
xchg
fisubs
shrb
roll
mov
add
lock
add
mov
cmp
mov
movsl
and
cmp
sub
add
inc
adc
cli
add
pop
ret
int
sub
add
mov
cmp
les
adc
mov
sbb
std
pop
out
ret
nop
roll
xchg
push
stc
jecxz
mov
mov
jne
add
andl
inc
adcb
cld
cmpsl
loope
out
xchg
scas
dec
rclb
mov
aaa
call
cmp
pop
add
push
jl
push
jle
into
jg
or
inc
push
andb
xor
pop
mov
push
add
pop
mov
bound
inc
ja
xor
add
push
add
jmp
add
rolb
aas
cmpsb
or
stc
out
or
inc
add
or
mov
sarl
je,pt
xchg
das
addb
add
inc
in
shll
pop
add
add
lret
rcrb
cli
pop
push
xchg
mov
rolb
sbb
or
dec
sub
cmp
mov
mov
orb
xchg
add
mov
and
xchg
in
pop
sbb
push
lret
js
and
push
pop
inc
fwait
push
test
dec
jb
jg
sbb
xchg
and
add
and
cmp
add
lods
xchg
jb
imul
sbb
mov
movsl
pop
pop
pusha
test
add
addb
jmp
sbb
add
inc
aam
xchg
dec
and
add
or
sub
stos
xchg
jp
mov
dec
je
aam
add
and
decl
in
xor
jg
lea
pop
sub
ror
sbb
fsubrl
mov
lock
je
hlt
aas
lret
xor
lea
ret
rclb
test
aad
popf
push
add
jbe
jmp
sub
mov
in
gs
aaa
aad
mov
out
pop
les
mov
cmpsb
addb
fs
outsl
add
push
push
add
or
inc
dec
mov
cwtl
fs
jne
or
lea
mov
adc
lods
pop
add
test
or
lods
pop
fcoms
jne
ror
pop
adc
sub
push
sub
add
stc
into
xor
cmpsb
add
and
cmp
test
cmp
je
jne
mov
mov
rcrb
or
adc
scas
lahf
xor
and
test
lcall
adcb
outsl
add
faddl
add
in
sbb
dec
jle
scas
lds
and
mov
jle
dec
inc
xor
lahf
dec
imul
xor
and
dec
xor
jns
or
push
add
jo
push
andb
lret
jle
leave
jg
shl
add
jp
hlt
hlt
add
fistpll
jb
ds
add
lock
xchg
jg
add
es
add
int
push
push
dec
inc
paddsb
mov
mov
add
jg
jge
xor
adc
jnp
pop
in
popf
push
add
cli
stos
fs
mov
add
lods
imul
out
mov
pop
mov
add
adc
repnz
xchg
or
dec
push
cld
cs
fcoms
stos
mov
inc
sub
xchg
clc
testb
cmpb
jp
dec
aam
add
cld
push
jnp
push
imul
jle
dec
sbb
lods
lock
aam
push
mov
jae
js
stos
inc
inc
add
cld
pushf
pop
cltd
pop
pop
popf
icebp
rcl
les
outsb
stos
mov
add
loop
dec
sub
popa
and
xchg
ja
adc
push
stos
mov
push
int3
push
and
lock
xor
mov
rorl
or
verw
test
pushf
je
add
addr16
push
add
out
xor
dec
lea
dec
adc
push
add
mov
add
mov
pop
and
sub
cmp
sbb
or
add
jns
mov
inc
and
add
push
or
jle
inc
adc
movl
jmp
add
sub
or
mov
push
mov
jb
sbb
jecxz
orb
push
xchg
mov
push
je
shlb
add
xchg
and
lods
push
dec
stc
dec
add
movsl
or
inc
add
adc
adc
pop
test
pop
pushf
stos
jne
push
adc
dec
or
add
call
push
jl
das
add
bound
cwtl
xchg
or
xchg
scas
je
add
inc
add
ljmp
inc
pop
xor
je
add
push
jne
add
outsb
dec
mov
xchg
inc
cli
and
dec
fadds
clc
and
sbb
xchg
sbb
cmp
mov
and
xor
mov
jl
test
cli
add
or
dec
ljmp
fimuls
cld
ja
add
icebp
mov
cmp
roll
push
lcall
int3
cmc
paddw
mov
popl
mov
xchg
js
ja
add
mov
pushf
add
xlat
ds
dec
xchg
testl
inc
clc
fs
cmp
jg
pushf
nop
das
ds
add
pop
inc
jne
jb
mov
lods
bswap
push
jle
loopne
fisubrs
xor
in
jae
mov
push
dec
add
dec
push
cmp
push
sbb
inc
push
push
push
inc
es
dec
call
add
scas
sub
loop
add
cwtl
xorb
inc
cmp
or
ja
inc
jbe
xchg
aas
loope
and
rcll
add
inc
add
sbb
xor
jnp
js
js
cmp
mov
daa
or
adc
jmp
sbb
add
in
xor
push
lock
mov
pop
xchg
jo
jnp
clc
je
add
sub
out
repnz
imul
lds
cwtl
xchg
popf
fs
pop
lock
push
inc
push
loop
mov
gs
jmp
mov
add
aaa
mov
xchg
add
sub
pop
mov
pushf
daa
test
ja
addb
push
imul
push
jge
mov
mov
add
in
lahf
pop
add
sbb
loopne
add
clc
cmpsl
sbb
mov
mov
jno
sbb
inc
dec
add
push
adc
jb
add
mov
je
sbbl
or
inc
add
outsb
cmp
sub
and
cmpsl
fidivrs
outsl
insl
jmp
adc
cmp
rolb
shll
jae
mov
les
dec
inc
into
lret
add
mov
xchg
mov
es
jecxz
fs
icebp
or
loop
int
pop
jbe
mov
mov
pop
pop
xchg
cmp
cmpsl
mov
sbb
push
push
xchg
lea
dec
mov
pop
pop
add
xchg
rol
fs
add
sub
sbb
repz
sahf
or
cmp
mov
dec
add
dec
pop
cmp
and
jbe
cmc
add
out
pop
add
ret
mov
out
sbb
mov
push
push
mov
daa
xor
fadds
cwtl
lcall
jns
repnz
rorl
dec
xchg
aad
jge
fs
jnp
push
sti
loopne
mov
xchg
popf
sbbb
cmp
jnp
pop
fidivs
rcll
jae
je
lea
mov
mov
dec
orb
cwtl
add
xchg
rorb
shll
scas
add
stos
xor
or
push
sbb
mov
xor
jge
hlt
ret
pop
hlt
lret
or
adc
fsubp
sub
push
outsl
test
pop
add
xchg
inc
inc
mov
ret
stc
sbb
adc
and
rcl
push
cmp
mov
nop
pop
rorl
rdtsc
aam
les
add
push
out
mov
push
fxch
inc
faddl
mov
shlb
daa
scas
add
call
adc
and
push
xlat
add
sbb
nop
fcomps
rolb
test
adc
jbe
or
jmp
xor
sbb
xchg
pop
pop
rolb
mov
mov
or
sbb
dec
push
lods
cmpl
std
add
mov
or
adc
jmp
mov
mov
pushf
out
rcrb
add
pop
cli
cmpsl
and
icebp
jnp
add
jb
pop
cmp
test
hlt
sub
sbb
aam
cmp
add
gs
jg
or
addl
and
int3
cmp
sbb
jmp
adc
repnz
mov
cld
loope
add
sbb
jp
add
add
xor
mov
int3
in
shlb
mov
rolb
sbb
push
dec
cmp
mov
inc
mov
sub
and
add
in
shlb
fildl
pcmpeqb
cmp
add
sub
cltd
xor
jne
in
cmc
xor
popl
xchg
xchg
enterw
cmpl
nop
test
add
lret
ljmp
mov
scas
addl
ja
add
in
add
int
andb
jne
xor
push
jle
pop
insl
out
inc
add
lea
add
or
sbb
mov
jno
sub
incl
bound
push
test
movsb
or
or
dec
add
call
mov
add
lret
les
inc
and
xchg
cmp
testb
mov
add
addl
adc
inc
xor
data16
mov
incb
fiadds
add
mov
push
aad
pop
insl
lea
dec
cmp
push
cmp
ja
cld
cli
dec
cli
fiaddl
adc
shrb
xor
mov
jmp
sub
sbb
cmpb
and
or
nop
sbb
adc
add
pop
andb
into
sbb
jne
inc
ds
add
orl
push
invd
cli
mov
mov
jmp
mov
clc
sldt
sbb
add
lods
adc
enter
mov
push
inc
add
xor
cli
and
and
ss
mov
jmp
add
pop
inc
mov
in
mov
mov
je
test
add
and
mov
jbe
andl
cmpsb
aaa
cwtl
mov
ss
mov
inc
pop
inc
pop
aam
cmc
add
cwtl
int3
pop
call
rclb
ja
xchg
test
cmp
add
xor
or
pop
clc
push
pusha
or
mov
jg
add
xor
dec
dec
cmpsl
lds
add
pop
push
xchg
dec
xchg
or
pop
adc
add
push
je
push
add
inc
push
mov
jmp
add
mov
cmp
imull
mov
arpl
fdivrl
mov
pop
sub
pop
jg
pop
or
inc
pop
nop
push
andl
adc
pop
adc
and
dec
adc
cmp
sbb
enter
mov
movsb
mov
pusha
inc
mov
lahf
or
mov
add
add
add
xor
ss
jbe
mov
adc
arpl
ret
sub
adc
push
cli
in
cmp
ucomiss
pusha
movntq
out
mov
jb
loopne
add
arpl
inc
outsb
pop
add
push
jp
push
sbb
add
jbe
push
add
add
test
add
add
inc
add
mov
outsb
mov
insl
cwtl
jb
pop
out
push
jo
lods
dec
xor
movsl
sub
scas
fcompl
sub
dec
outsl
fs
mov
dec
xor
fdivr
lcall
lods
jo
fidivs
add
pop
shrb
mov
orl
inc
or
sbb
jl
dec
jo
testb
dec
cmp
pop
int3
jge
mov
pop
les
jecxz
es
pop
add
mov
add
inc
aam
push
add
jge
push
pop
add
mov
xchg
dec
adc
loopne
in
add
rorb
sub
pop
dec
mov
mov
mov
mov
gs
add
inc
jns
xor
dec
cwtl
out
and
xor
popa
inc
out
add
cmp
fmul
push
sbb
movsl
add
dec
pop
add
or
xchg
jp
add
inc
mov
js
pop
inc
xchg
dec
mov
test
and
push
push
pop
test
dec
pusha
shr
adc
jns
add
js
jp
inc
ds
mov
cwtl
and
dec
or
cmp
add
xchg
aas
mov
cmpsb
fists
pop
sbb
ljmp
add
mov
les
sub
jne
pop
xchg
nop
mov
adc
in
mov
ret
add
inc
dec
cmp
jns
push
jl
sbb
dec
dec
adcb
inc
mov
push
push
sub
call
xor
mov
aam
sub
shrl
cld
xor
xchg
xor
in
icebp
lret
add
xor
cmpsl
cwtl
jnp
rcrl
test
xor
push
cmp
outsb
imul
add
jne
lret
push
jg
pop
inc
in
ret
call
adc
nop
mov
fs
repnz
adc
popa
outsb
jae
insl
gs
sbb
jb
pop
outsl
xchg
xor
popf
inc
int3
push
inc
aad
mov
xchg
or
or
sbb
jmp
movsl
bound
mov
daa
movb
jo
add
jb
je
jne
repnz
add
sub
push
addb
test
fmull
add
push
jae
xor
jbe
add
mov
fldt
and
jp
cmp
sbb
mov
movsb
pop
cmp
mov
add
outsb
jno
jne
sbb
out
imul
test
xchg
scas
lea
pop
xor
imul
or
and
arpl
jmp
push
xchg
add
cmp
dec
js
subps
mov
sub
and
add
push
adc
andb
clc
xchg
push
push
or
jmp
and
ret
add
sub
mov
xchg
add
js
lods
mov
jbe
repnz
pop
call
imul
xchg
ss
ds
sarb
test
and
dec
mov
push
aad
fxch
cmp
sbb
fwait
in
and
repz
sub
add
or
mov
inc
pop
sbb
mov
rcrl
mov
push
mov
mov
push
jne
add
xor
loopnew
add
jmp
jle
movsb
fldt
add
or
fisubl
stc
push
adc
aad
jo
sbb
pushf
pop
push
xchg
sub
add
test
push
add
test
scas
sub
sub
stos
mov
mov
cmp
add
lret
loopne
xchg
push
xor
add
shr
cmovle
sbb
mov
inc
mov
mov
loope
out
or
mov
pusha
pop
ljmp
adc
adcb
shrb
pop
add
pop
jp
test
int
add
push
mov
add
mov
or
dec
mov
lea
je
fsubs
adc
and
je
add
adc
mov
jbe
out
mov
dec
inc
mov
gs
pop
sbb
and
movsb
lods
cmpsl
add
insb
dec
adc
inc
xor
mov
add
adc
cmp
mov
clc
mov
addr16
rclb
and
dec
leave
ror
dec
or
fdivl
inc
sub
xchg
jle
sbb
add
inc
xchg
mov
pop
adc
outsb
or
xorb
cmp
xor
or
sub
movsb
push
push
les
push
add
mov
iret
pop
push
rorb
mov
aam
jno
hlt
test
add
fcompl
lahf
push
mov
add
sbb
fmul
or
add
pop
loope
mov
movsb
add
adc
add
or
leave
push
das
add
enter
mov
movsl
rcrb
pop
call
icebp
outsb
cli
mov
and
mov
jmp
sbb
add
in
test
inc
test
pop
shrl
dec
inc
add
adc
pop
add
or
test
adc
int3
and
add
les
add
dec
stos
fimuls
fmull
mov
jmp
add
in
subb
jno
cld
fs
jle
push
hlt
sub
jbe
in
mov
cmp
filds
inc
ds
add
in
adc
fldl
adc
int3
xor
subl
pop
sub
inc
loopne
outsb
mov
lds
push
in
xor
movsl
lea
xor
add
into
fisttpll
cltd
loopne
jp
sub
scas
dec
sub
push
add
rclb
cmp
ja
add
mov
mov
stc
add
std
orb
sub
gs
movb
ud2
out
rorb
add
fs
add
pop
or
inc
shll
xchg
dec
jg
jl
dec
jp
push
add
ss
fadds
add
outsb
sub
xor
xchg
ret
inc
push
push
jns
push
call
mov
jg
add
lock
imul
sbb
push
adc
jle
gs
and
dec
pop
dec
pop
lock
push
popa
add
clc
lods
dec
jnp
sub
dec
sti
aam
xlat
ds
nop
pop
push
clc
outsb
in
mov
add
test
out
outsl
jg
adc
into
fbld
pop
jae
pop
push
and
jb
jo
pop
shlb
mov
scas
or
add
and
dec
and
and
in
subb
sub
out
lret
fsubl
xor
mov
insb
sbb
ja
push
pop
sub
sbb
mov
or
mov
shr
add
cmp
clc
add
cld
rclb
inc
pop
in
in
rcrb
pop
push
in
add
test
xchg
adc
or
pop
push
je
adcb
stos
movsl
daa
add
in
sbb
mov
shrb
dec
add
inc
outsl
insl
add
xor
or
in
cmp
mov
les
or
sarl
push
addb
or
jnp
dec
jo
push
sarl
insb
xchg
sbb
arpl
mov
dec
enter
lods
les
xor
das
add
imul
cwtl
and
or
mov
insb
push
lods
push
fmull
inc
push
dec
xor
or
jo
pop
leave
push
sub
loopne
stos
fsubs
sbb
xchg
lds
sub
enter
mov
es
mov
push
nop
add
les
pop
inc
adc
add
mov
add
fs
push
dec
jecxz
add
fmull
inc
jl
pop
mov
inc
inc
jne
adc
fs
orb
xor
mov
and
or
les
pop
packssdw
pop
push
clc
xlat
data16
add
inc
adc
sbb
sbb
add
cs
cmp
sbb
jl
add
stos
adc
add
adc
daa
lock
lods
rolb
mov
mov
fists
pop
popf
ja
xor
pop
loope
sub
sarb
sub
in
and
mov
inc
add
cmpsl
mov
aad
addl
sti
dec
cmp
add
jb
loop
mov
leave
add
mov
mov
push
add
inc
add
sbb
inc
push
push
push
sub
in
imul
pop
ljmp
pop
jae
cmp
jmp
push
pop
adc
mov
movntps
mov
add
dec
daa
std
adc
ljmp
add
je
cmp
jbe
push
andl
pop
cmpb
add
cmp
mov
mov
jne
imul
push
ss
add
lahf
inc
aam
jbe
add
loop
shl
nop
sbb
inc
orb
sub
sbb
in
into
lock
inc
add
or
inc
and
aam
or
push
cmpsb
aad
fidivs
movsl
fldenv
add
cmpsl
fistl
pop
push
push
je
or
add
cmpsb
sub
push
jecxz
fisttps
and
sub
push
dec
ret
push
or
pushf
or
into
or
mov
push
mov
xlat
test
incl
jb
sbb
into
jmp
insb
add
pop
pop
in
push
mov
ja
mov
sub
sti
mov
pop
pop
xorl
pusha
out
pop
int3
add
incb
pop
xor
loope
sub
cmc
shll
imul
icebp
mov
add
fsub
sbb
pop
inc
add
add
addb
add
xor
inc
scas
sub
sbb
inc
daa
pusha
push
cmp
mov
add
addb
inc
iret
rclb
pop
dec
flds
stos
fnstenv
jecxz
test
xor
cmp
xchg
add
mov
cmp
jb
mov
adc
nop
mov
cmp
add
cwtl
out
hlt
insb
adc
add
dec
pop
add
push
cmp
lods
cld
loopne
add
xor
add
pop
add
out
cmp
sahf
sbb
sbb
stos
fstpt
dec
pop
inc
lahf
push
mov
adc
cmpsl
mov
sahf
mov
adc
sub
lds
add
in
call
mov
add
mov
sub
add
xchg
add
cwtl
sbb
add
sub
loop
dec
pushf
ds
inc
lret
xor
xor
mov
push
gs
add
add
add
and
sbb
scas
add
std
adc
pop
add
push
bound
pop
mov
pop
mov
movsb
mov
adc
jg
out
mov
adc
and
inc
pop
outsl
dec
and
add
inc
cmp
xchg
out
add
mov
movsl
sbb
aam
aas
iret
repz
fdiv
mov
decl
push
pmaxsw
and
add
in
inc
fwait
mov
aas
lods
aam
outsb
xor
add
ljmp
xlat
add
and
ss
cs
inc
jno
ljmp
loopne
xor
repz
mov
push
add
pop
outsl
pusha
push
loop
and
and
adc
push
loopne
rorb
jae
push
mov
call
jbe
pop
cmc
sbb
xlat
mov
test
sar
sbb
dec
mov
shll
inc
mov
mov
push
and
lea
jecxz
call
mov
pop
mov
nop
mov
enter
cwtl
inc
out
xchg
adc
add
neg
add
test
out
adc
aad
pop
lods
test
mov
inc
imul
gs
cmp
add
addr16
lods
push
sahf
sub
mov
push
inc
ret
add
and
int3
aad
sbb
mov
dec
push
or
or
add
add
pop
inc
add
jecxz
sub
loop
bound
pushf
push
mov
lods
add
repnz
adc
add
dec
mov
fimull
test
sbbl
pop
out
loopne
pop
push
cmp
loope
aam
adc
and
mov
fidivl
faddl
shrb
popl
cmp
stos
cmpsl
jmp
cwtl
shll
pop
cmp
push
jo
dec
loope
or
mov
cmp
hlt
mov
in
and
icebp
fstpt
inc
mov
push
std
pop
inc
xchg
add
jmp
xchg
pusha
scas
shrb
ss
add
mov
clc
sbb
adc
les
sub
pop
hlt
inc
jp
pop
in
push
or
dec
mov
mov
mov
lret
mov
mov
imul
fsubrl
dec
sti
xchg
add
or
jno
imul
gs
jecxz
jmp
jmp
clc
push
jmp
cltd
adc
cmp
mov
and
xor
add
sub
cmp
sbb
mov
aas
add
sub
adc
add
dec
mov
add
shlb
mov
add
jo
pop
add
add
jne
incb
mov
add
dec
add
aas
fwait
sbb
rcl
jmp
add
movzbl
sub
jne
cmp
dec
xchg
push
and
add
sub
call
or
js
or
fcmovb
scas
stc
and
mov
frstor
outsb
testb
push
xchg
loop
push
mov
fisubrs
les
int3
mov
sbb
lods
aam
addb
mov
sbb
mov
ficomps
and
dec
sbb
and
shr
add
ljmp
cmpsb
sub
add
add
push
flds
movsb
sbb
or
rorb
and
lds
xor
add
or
add
push
push
aad
add
outsb
fbld
or
add
test
nop
jp
fildll
mov
add
and
jle
aad
out
jl
pop
fmuls
jo
pop
xor
loopne
lods
push
and
sti
test
xchg
test
jne
roll
mov
mov
pop
add
pop
inc
lock
enter
mov
add
aaa
stos
pop
mov
sbb
sbb
cmpsb
xor
mov
js
add
mov
push
jne
lods
movsb
ret
jp
pop
dec
daa
adcl
add
xlat
ja
adc
enter
and
sub
ret
pop
int
loopne
push
add
in
subb
add
inc
stos
fmuls
xchg
aam
adc
push
add
add
out
inc
scas
add
jg
or
push
push
comiss
mov
lret
cmp
addb
push
or
pop
cltd
cmp
rcrb
pushf
or
je
roll
cmp
add
and
add
jp
fists
in
xor
jge
pushf
add
mov
call
add
cmp
cmp
adcb
decb
xor
add
xchg
imul
mov
sbb
test
and
addb
adc
je
adc
jecxz
mov
xlat
and
cmpsl
pop
or
xor
cmp
sbbb
xchg
jns
movsl
inc
jg
add
cmp
mov
dec
add
and
or
add
scas
and
sub
aam
iret
add
mov
xor
sub
add
das
fiadds
sbbb
mov
push
loop
add
mov
mov
add
xchg
loope
pop
pop
pop
push
dec
xor
pop
andb
shl
jmp
sbb
jmp
out
add
test
rclb
pop
inc
sar
rcll
add
test
cli
ds
mov
stos
iret
pop
and
mov
add
sbb
or
add
inc
mov
mov
sbbb
sbb
add
ss
sbb
jno
mov
popa
fcomip
das
incb
push
xchg
jns
pop
movsb
shll
jne
and
sbb
inc
mov
rcll
adc
dec
add
dec
and
push
jae
add
push
imul
mov
xchg
scas
aad
xchg
sti
add
sub
mov
out
cmp
add
xchg
das
add
nop
dec
jmp
add
mov
enter
mov
jae
and
inc
test
sub
add
shlb
xchg
inc
movsl
add
mov
dec
jo
clc
cmp
cld
or
test
dec
adc
xor
rorb
add
mull
js
in
add
dec
imul
ds
shrl
repnz
mov
add
and
dec
lock
fiadds
loop
or
ficoms
and
dec
pop
add
lret
call
mov
push
xor
scas
add
lahf
rorb
rcl
movsb
fsts
gs
dec
or
mov
pop
lock
fs
add
sub
sbb
lock
add
aaa
mov
loope
pop
add
shll
cmp
inc
add
inc
inc
cmp
faddl
cmpsl
repz
push
fcoms
inc
or
cmpsb
fadds
enter
xchg
sti
hlt
sub
or
lods
lea
sub
mov
sub
sub
add
js
das
enter
add
outsb
cmp
add
and
cmp
add
loop
jne
push
xor
and
lret
jp
inc
in
in
hlt
cmp
andb
sub
bound
push
daa
testb
in
jle
xorl
and
pop
mov
aam
adc
dec
in
mov
and
iret
out
xor
rolb
add
imul
push
add
idivl
xchg
xchg
cmpb
cmp
cmp
add
insb
rolb
mov
add
dec
js
add
pusha
adc
add
adc
clc
or
ss
or
imul
sub
fs
jge
add
sub
fstps
in
add
cwtl
mov
aas
data16
add
mov
ret
push
add
jmp
mov
push
orl
pop
inc
push
push
cmc
jmp
dec
adc
lcall
pop
outsl
enter
jns
inc
push
js
pop
or
test
ficoml
pop
xchg
testl
in
sub
fs
add
jo
jb
cmp
cmp
cmp
mov
rclb
dec
jne
stc
mov
out
je
clc
incb
or
add
gs
sbb
xchg
xchg
sub
sub
add
add
addb
push
add
push
lea
mov
add
das
dec
pop
pop
sub
xchg
rcrb
dec
sub
and
nop
add
xorb
sbb
addr16
inc
loopne
jmp
mov
sub
cmp
sub
dec
add
lea
cmc
add
push
lahf
xorb
clc
ljmp
sbb
nop
stos
cmp
sarb
mov
push
loopne
xchg
xchg
ret
lret
addb
or
mov
in
and
sub
add
dec
shlb
inc
cmp
sbb
and
sub
sbbb
add
jmp
mov
cmpb
cli
aas
and
dec
and
or
loope
jae
add
xor
sub
imul
call
mov
add
push
fiaddl
inc
xchg
mov
ljmp
cmpsl
push
inc
lods
cwtl
add
repnz
dec
into
and
sub
sbb
sbb
sar
enter
cli
call
add
popf
push
inc
nop
int3
add
inc
in
enter
pop
dec
jp
psubusw
jmp
out
sub
mov
adc
in
mov
mov
or
in
aas
add
push
inc
add
idivb
adc
int3
in
add
adc
mov
inc
fsubs
push
jns
add
mov
arpl
xchg
mov
add
jnp
xlat
repz
mov
ja
imul
in
inc
jns
and
xchg
dec
add
push
dec
jo
add
mov
add
push
data16
insl
mov
add
clc
and
leave
jns
addr16
mov
fimuls
and
aad
iret
in
cmpsl
scas
test
cmpl
mov
sub
mov
pusha
cld
push
add
pop
inc
movb
adc
adc
shlb
dec
les
xor
and
add
xchg
fmuls
and
shr
add
test
xor
insb
fmuls
mov
stos
mov
add
cs
clc
enter
push
jne
jo
add
and
popa
lods
xor
arpl
adc
mov
jae
mov
mov
or
sti
or
imul
out
test
movsb
cmp
dec
add
dec
xor
iret
cmp
add
stos
int3
or
pop
lar
clc
sbb
jl
pop
sbb
dec
repz
pop
bound
pshufw
mov
dec
scas
das
add
aam
add
adc
rcrb
dec
jl
scas
add
cmp
insl
mov
adc
pushf
mov
inc
or
add
inc
imul
aas
xor
cmp
or
mov
add
xchg
js
mov
push
js
add
ja
or
dec
and
mov
adc
add
es
xor
add
mov
iret
and
ljmp
mov
cwtl
dec
mov
push
xchg
adc
push
in
jno
adc
cmc
out
add
loopne
add
dec
jbe
nop
fiaddl
imul
push
sbbl
sub
cwtl
mov
xor
test
arpl
ja
pushf
or
or
dec
repz
adc
lret
rclb
add
adc
adc
mov
add
dec
cmp
pusha
add
aaa
add
mov
je
jbe
and
xchg
sub
xchg
mov
sbb
or
test
aaa
and
or
daa
daa
mov
cld
movsb
into
sbb
add
and
cmp
lods
enter
inc
xor
xchg
jle
cmpsb
xchg
push
les
enter
and
xchg
rorb
sub
xchg
insl
or
cmp
fildll
lods
xlat
cmp
pop
jno
in
cmp
mov
push
sub
inc
add
or
in
add
adc
xlat
and
out
rorb
xor
push
fs
cmp
dec
add
jmp
and
loop
dec
hlt
arpl
gs
lcall
loopne
andb
inc
pop
and
mov
cli
adc
adc
dec
js
dec
orb
jae
insl
repnz
add
and
mov
hlt
push
jns
jns
jbe
psubb
jns
addb
push
in
fimull
xchg
mov
daa
dec
mov
jl
prefetch
int
incl
xor
xchg
imul
ds
or
ja
xbegin
test
add
js
loopne
dec
add
pop
cli
mov
inc
mov
add
adc
popa
mov
sub
cmp
stos
fisttps
xchg
push
push
and
stc
xor
in
xchg
add
push
pop
adc
adc
nop
inc
sub
int3
jns
add
jl
enter
and
jne
lods
and
sub
mulb
jo
insb
add
lods
test
arpl
sub
xchg
fcom
add
cmc
inc
mov
fistl
sub
xor
pop
jl
mov
imul
hlt
mov
add
into
sub
adc
mov
in
movsl
add
sbb
aad
mov
data16
hlt
in
mov
frstor
cmp
add
lods
jb
add
mov
or
pop
dec
mov
loopne
jno
pop
and
add
or
add
mov
or
in
mov
shll
sub
popf
add
ss
cmp
cmp
jb
jo
inc
bound
ret
fs
sub
sbb
mov
test
adc
pop
inc
pop
add
outsb
push
gs
popl
mov
js
add
sub
repz
mov
cmp
mov
call
daa
and
int3
dec
ficoml
add
out
dec
adc
and
fisubrs
hlt
and
sub
ljmp
divb
xchg
or
inc
mov
arpl
adc
fs
and
ja
jae
jo
es
sbb
jl
sub
nop
stc
adc
pop
jg
jg
add
jnp
add
push
xchg
add
mov
mov
jmp
out
mov
dec
dec
add
sbb
les
push
add
and
xlat
fs
out
push
jecxz
push
add
fsubrs
ret
pop
in
daa
or
and
pop
lcall
pop
test
jmp
dec
sbb
add
lahf
add
push
inc
or
sbb
clc
push
xchg
pop
adc
cmpsb
add
outsb
dec
pop
inc
inc
add
push
adcw
adc
add
push
pop
ret
jg
jmp
orl
adc
mov
or
aam
les
add
inc
push
ret
fsub
cs
and
xchg
sbb
inc
or
sub
xor
ljmp
sub
out
pop
jo
or
mov
inc
adc
shrb
push
xchg
add
xchg
add
loop
push
enter
mov
pop
xchg
lods
dec
adc
mov
adc
or
or
in
dec
adc
test
pushl
cmp
pop
cmp
in
flds
xor
add
inc
or
inc
and
ja
pavgb
sub
mov
push
add
push
loope
test
pop
movsb
adc
push
aad
sahf
pop
dec
lret
divps
push
add
mov
pop
add
mov
les
cld
cmp
movsl
add
repz
push
dec
add
pop
add
dec
je
cwtl
push
adc
adc
jmp
shr
and
das
mov
add
sbb
push
mov
outsb
loop
jl
push
xor
jno
push
xor
enter
sub
add
sbb
xor
and
add
cli
out
gs
sub
les
aaa
pusha
call
cs
popa
outsb
daa
je
and
insb
outsl
fisubl
sbb
aas
pop
push
jae
ret
and
pop
test
sbb
sbb
add
adc
add
cli
or
mov
sahf
insb
add
mov
repz
and
add
adc
or
add
adc
sub
add
sbb
pop
adc
push
aad
mov
hlt
repnz
mov
mull
and
push
lret
dec
mov
jnp
sub
sbb
xor
inc
push
add
sbb
cmpl
das
dec
add
ficomps
push
movsb
inc
and
cmp
mov
xor
jp
jbe
leave
ja
sti
cmp
aam
inc
mov
and
adc
or
aaa
lahf
ljmp
lds
jb
ret
stos
mov
mov
jl
add
cmp
flds
mov
adc
faddl
xchg
out
test
ret
add
test
xor
sbb
jbe
dec
jns
cmp
xchg
out
add
addb
xor
and
adc
cld
sub
int
push
in
and
and
xor
and
jmp
xchg
jle
les
lock
mov
stos
ret
mov
sub
push
xchg
ret
add
ret
add
cld
leave
mov
sbb
push
popf
fmuls
mov
lock
push
popf
jp
adcb
das
sbb
cmpsb
jnp
adc
and
mov
pop
orl
dec
cld
inc
add
push
negl
pushl
mov
adc
jp
add
mov
call
add
push
jle
loopne
lea
xchg
cmp
add
sub
push
pop
aad
push
add
add
clc
js
fdivs
and
pop
ja
in
xor
sub
lods
adc
mov
xchg
pop
mov
add
jmp
add
dec
stos
xchg
fidivs
xorb
fsubrl
sub
es
cli
cmpsb
imul
jge
out
cltd
jmp
pop
mov
rolb
pop
pop
enter
jl
arpl
add
fwait
add
push
adc
inc
data16
mov
dec
adc
push
lea
mov
ss
push
hlt
adc
aad
loopne
aas
add
rsm
int
nop
stos
inc
sub
in
add
cmp
in
inc
test
stos
loopne
daa
lcall
inc
test
repz
lock
clc
notb
js
jb
dec
add
inc
test
xor
mov
push
ljmp
aam
cwtl
jno
lock
inc
jns
pop
and
enter
int3
push
jo
filds
sub
fwait
and
pop
sti
mov
or
jae
addl
jp
mov
pushf
xor
das
sub
jle
add
out
jo
mov
imul
int3
jno
ljmp
mov
cltd
mov
sti
imul
adc
inc
popf
mov
ret
in
sbb
add
jb
pop
add
pop
xor
adc
cmc
inc
adc
add
xchg
and
ljmp
scas
mov
push
and
test
loopne
test
or
push
test
jo
lods
popf
add
add
jbe
adc
rolb
add
and
or
mov
cmpsl
cmc
lea
push
push
push
jne
xchg
push
jmp
adc
cmpsl
aad
add
or
inc
pop
mov
andb
lds
xchg
cs
push
cmp
sub
nop
cltd
rcrb
sub
add
dec
push
xor
add
cmp
cmp
push
mov
pop
in
mov
popa
push
jb
cmpsb
push
push
and
cmp
and
call
cld
ret
add
repnz
push
dec
add
das
ds
adc
pop
cmp
clc
mov
data16
xchg
add
in
pop
adc
aad
cli
push
test
js
add
mov
mov
adc
add
in
mov
lock
mov
into
adc
mov
lods
sub
adc
push
out
cmpsb
pop
inc
xlat
movsb
sub
sub
or
in
call
loopne
fs
pop
xchg
or
int
mov
sti
iret
stc
add
xchg
fidivrl
xchg
rcrb
add
aas
aad
mov
stos
andb
pop
pop
mov
test
imul
ret
mov
je
add
repz
add
ret
and
mov
add
pushf
sbb
xchg
mov
jl
push
clc
out
and
inc
pop
pop
loopne
add
rolb
mov
orl
mov
lea
inc
add
aad
add
std
loopne
add
or
mov
sahf
std
fld
ja
add
in
xchg
push
cld
inc
mov
sbb
sbb
popa
xchg
lea
push
mov
insb
cmp
push
adc
cli
icebp
add
dec
pop
pop
stc
jg
mov
adc
je
push
jne
inc
xchg
dec
add
sbb
std
fwait
jle
bound
inc
add
mov
add
or
sbb
mov
adc
in
inc
jmp
add
xchg
mov
inc
icebp
cld
adc
xchg
sbb
hlt
test
sub
das
inc
jbe
mov
jp
mov
cmp
add
mov
jge
ja
push
out
cli
mov
sub
adc
sub
mov
push
mov
and
mov
in
ja
jnp
or
sub
clc
push
loopne
enter
add
sub
add
jns
hlt
inc
mov
or
and
xor
or
adc
mov
jmp
addb
cwtl
dec
adc
pop
jg
loopne
mov
clc
nop
sbb
lcall
xchg
inc
adc
loopne
rorl
addb
and
aas
add
dec
and
and
sbb
and
add
mov
xlat
out
imul
pop
pop
bound
fmull
push
cmp
sarb
in
ret
push
nop
and
add
repnz
adc
aad
inc
ljmp
ja
add
clc
cld
movsl
flds
or
shrb
call
add
adc
clc
and
add
mov
push
call
dec
jp
add
andl
lock
ret
add
mov
ja
add
mov
or
add
jecxz
jae
adc
add
and
aam
sub
xchg
test
push
roll
inc
cmp
pop
sub
adc
adc
add
icebp
cmp
adcb
jo
outsl
cmp
sbb
add
xor
inc
or
fninit
add
not
jne
test
repnz
fsubs
or
pop
push
lret
inc
xchg
loop
ljmp
clc
jb
pop
les
mov
sarb
je
xorb
movb
lret
dec
cmpsl
jp
add
sub
addl
mov
xor
pop
jo
hlt
adc
mulb
sub
xchg
outsl
addb
jmp
cli
pop
rcrb
fnstcw
ret
ja
xchg
aas
repnz
repz
jae
nop
negl
gs
adc
popa
cmp
add
and
jb
push
dec
jp,pt
pop
clc
push
and
lock
out
push
add
test
jne
push
push
nop
add
mov
fmul
fimuls
mov
inc
pop
or
test
and
sub
dec
add
xchg
lock
xor
pop
cmpsl
push
dec
cmp
jmp
decl
pop
invd
cs
notb
mov
call
inc
outsl
lcall
lea
push
dec
inc
jmp
and
ret
movl
loope
lea
ficoml
and
pop
test
mov
xor
cs
add
lret
pop
mov
mov
movsl
mov
pop
test
test
dec
daa
mov
pop
in
dec
cs
and
les
lcall
cmp
xchg
ret
daa
add
icebp
and
aaa
xchg
mov
je
dec
pop
cmp
mov
xchg
push
add
mov
adc
push
sbb
push
mov
mov
movsb
sub
adc
shr
add
addl
loop
dec
imul
push
stc
jl
add
push
lea
inc
jmp
insl
call
pushf
adc
add
call
outsl
mov
andl
scas
ret
leave
out
cli
enter
stos
loopne
or
mov
and
or
loop
push
test
push
or
repnz
out
movsl
pop
daa
add
jge
add
in
repz
add
clc
cmp
add
test
pmuludq
adc
cmp
ret
pop
sbb
inc
into
and
call
adc
pusha
add
enter
and
inc
add
pop
mov
mov
ljmp
sub
jge
add
jnp
push
and
fs
lock
jno
mov
rorb
or
add
mov
inc
add
mov
ficoml
cmp
xor
cltd
jle
aam
pop
add
and
cmp
inc
mov
mov
add
mov
rep
xor
scas
mov
or
mov
ret
push
call
loopne
adc
add
mov
rolb
dec
ja
pushl
inc
add
mov
add
pop
sub
stos
pop
pop
xchg
xchg
push
mov
sub
jno
pop
dec
sbb
js
shll
sbb
mov
xlat
dec
fs
add
push
cld
adc
hlt
xchg
es
stos
out
pop
cmp
jae
sbbb
adc
testl
dec
pop
out
push
or
js
bound
inc
jecxz
sbb
dec
lret
enter
pop
push
dec
jl
add
jl
sbbb
add
inc
mov
lods
add
cmp
add
jle
out
jmp
fidivrl
dec
scas
dec
push
add
call
sub
mov
frstor
mov
push
lcall
ror
std
dec
jo
and
maskmovq
notl
mov
dec
adc
and
dec
add
add
cmp
cmpb
cmpl
pop
cli
jns
and
data16
dec
xlat
test
add
inc
cmp
mov
xor
inc
push
push
ds
push
js
cmp
rorb
add
lcall
inc
mov
es
xor
or
out
faddl
mov
dec
pop
fs
adc
cmp
test
clc
mov
sub
dec
in
add
lock
into
push
fdivl
jnp
pop
lcall
push
subb
fadd
fadds
in
shll
jmp
ret
dec
and
jle
dec
mov
pop
sbb
shr
mov
divb
cmpsb
add
stos
hlt
scas
insl
mov
jns
add
std
xor
ja
xorps
rcrb
dec
rcrb
add
scas
sbb
add
add
call
cmp
ficoml
push
add
lea
xchg
std
adc
sarb
sbb
add
pop
push
dec
add
xchg
mov
jae
sbb
adc
mov
ret
add
test
les
pusha
call
sahf
jae
jge
js
jo
cli
pop
mov
xchg
rcrl
hlt
das
xchg
dec
or
adc
mov
arpl
xchg
xor
adc
sbb
xchg
cs
or
sbb
shl
jp
pusha
push
or
out
adc
lock
push
add
and
mov
mov
add
pop
cmp
je
test
or
dec
jae,pt
cmp
pop
outsb
in
sbb
add
and
rcll
cld
xchg
fadd
sub
push
add
lcall
add
sbb
dec
jne
outsl
xchg
addr16
xchg
imul
jl
jmp
mov
and
push
dec
xchg
fistl
add
ret
push
adc
inc
addr16
add
aad
add
fimull
addb
ja
push
jne
aam
sbb
enter
sbb
ljmp
xchg
push
imul
add
enter
in
ja
add
pop
je
add
jmp
cld
push
nop
jno
add
cs
sbb
dec
aad
push
adc
scas
sub
std
rolb
xrelease
scas
mov
jne
addr16
pop
lret
cltd
xor
ret
dec
adcb
inc
add
insb
push
pop
dec
and
das
mov
fiaddl
int
xchg
inc
cwtl
add
push
cltd
ret
pop
jl
nop
add
imul
inc
push
outsl
dec
jne
pop
add
mov
mov
xchg
lcall
dec
stos
data16
xchg
nop
aad
add
call
into
cmovs
loopne
jge
rcll
cmp
or
cmp
or
add
ret
inc
and
into
rorb
add
lock
movsl
adcb
loopne
cmp
and
dec
mov
pop
inc
cmp
inc
fs
les
test
pusha
add
jo
popf
add
into
ljmp
decl
jle
or
pop
add
mov
ficoms
js
or
es
mov
cmp
and
pop
ret
rcr
and
mov
add
pop
push
inc
mov
add
movzwl
add
xor
add
pusha
or
cmp
push
je
push
add
push
or
es
add
mov
add
repnz
push
cli
xor
inc
or
pop
test
rorb
repnz
sub
repz
daa
imul
sbb
cltd
sbb
in
add
sti
or
and
incl
and
jmp
or
push
mov
pop
add
call
subb
es
or
je
out
mov
push
jmp
push
cmp
push
adc
push
inc
stos
and
cmp
add
mov
and
call
add
idivb
push
out
pop
mov
and
lcall
adc
adc
iret
inc
bound
mov
mov
inc
popf
mov
movsb
cmp
mov
aad
add
push
in
push
clc
add
xchg
dec
add
sub
dec
xchg
dec
adc
xor
test
mov
jae
inc
add
fiaddl
loope
cmp
fmul
add
fadds
cmp
xor
sbb
push
or
fwait
xchg
dec
xchg
xchg
rolb
add
cmc
push
stos
in
inc
dec
add
inc
xchg
add
xchg
adc
mov
add
xchg
ja
cmc
fcmovnb
push
clc
and
fildll
addb
mov
into
add
sbb
pop
jle
pop
inc
sbb
cmp
push
and
pop
xor
sbb
push
test
pusha
aam
xor
sbb
xchg
adc
push
in
pop
adc
mov
jmp
aaa
push
aas
push
movsl
addb
or
jg
mov
inc
adc
mov
loopne
dec
fiadds
push
sbb
mov
sti
jmp
insb
ret
cmp
aam
dec
push
js
adc
repz
testl
and
push
and
add
dec
aam
cmpsl
and
loop
jg
je
loopne
mov
loopne
sbb
xchg
repnz
push
mov
push
cli
rorl
xchg
aas
ret
lea
test
inc
mov
sub
cmp
jle
xor
sub
add
lret
in
pop
loopne
cmp
add
jae
add
push
call
divb
pop
dec
add
mov
add
pop
sub
and
push
push
adc
xchg
and
out
inc
pop
pop
push
mov
roll
addr16
dec
jb
and
cmp
mull
dec
add
sbb
lahf
movb
inc
mov
gs
shr
add
add
add
cmp
adc
mov
shlb
dec
push
add
adcl
ja
ds
inc
cmpsl
clc
jne
or
cld
push
or
filds
ret
or
insb
and
iret
hlt
lahf
add
dec
test
in
je
orb
cmp
dec
pop
mov
stos
loope
popa
cmp
or
vpmadcsswd
loope
aaa
pop
xchg
push
in
inc
mov
dec
in
lea
mov
jge
mov
ret
pop
jno
out
lret
pusha
lcall
mov
jbe
push
ljmp
xchg
cld
pop
pop
sbbb
add
sbb
loopne
sbb
jl
pop
aam
fmul
orb
hlt
je
add
movsl
and
fcoms
in
mov
push
in
mov
pop
and
sub
les
dec
fcoml
add
push
outsb
stos
xor
push
lret
fcomp
mov
add
add
push
add
or
bnd
adc
pop
out
loope
in
or
add
testb
jb
add
leave
aas
push
add
adc
inc
adc
xchg
xchg
cmp
imul
std
jle
leave
nop
add
repz
je
add
ss
xchg
xchg
test
add
popl
sub
dec
inc
inc
push
roll
mov
xchg
mov
cld
aas
add
lahf
enter
dec
lcall
mov
pusha
jmp
inc
sub
add
std
mov
and
cmpsb
inc
adc
push
sarl
lock
jmp
cld
paddusb
inc
jmp
rorb
test
ss
in
sub
nop
xorl
push
mov
inc
fadds
cmp
lea
fucomi
push
lcall
mov
jnp
jecxz
cmp
xchg
daa
push
pop
jno
iret
add
sbb
dec
add
rcrl
inc
bound
inc
into
pop
data16
xchg
and
inc
pop
dec
and
add
or
stc
mov
jo
sbb
sub
aaa
sbb
sbb
cmp
pop
es
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
loope
call
adc
xchg
sub
addl
add
fisubrs
xorb
push
mov
or
add
fiadds
ja
sbb
xor
inc
rorl
push
adc
push
lods
mov
sub
sti
cmp
mov
ret
cltd
mov
pop
add
popa
xor
add
xchg
inc
sub
sbb
das
or
nop
es
jecxz
aas
add
mov
and
int
and
roll
add
daa
add
rcrb
push
pop
les
mov
add
xchg
add
pop
add
inc
frstor
add
jge
add
push
clc
in
jg
add
adcl
add
inc
xor
push
add
inc
mov
add
pop
cld
or
jp
pop
push
leave
and
sarl
mov
in
cld
enter
add
rcrl
sub
add
pop
mov
rcrl
cmp
scas
dec
std
sti
cmpsb
add
and
inc
sbb
mov
movsb
or
xchg
inc
xchg
pushl
and
das
icebp
fwait
mov
shll
push
mov
add
popa
sub
addb
mov
jge
pusha
leave
inc
aam
mov
add
and
cmpsl
shll
insb
jno
add
jmp
ss
push
add
mov
idivl
inc
push
dec
outsl
jne
mov
sti
pop
aad
and
jle
xor
test
dec
push
xchg
jne
and
and
and
ljmp
jae
mov
add
dec
hlt
lock
lret
lds
rcrl
xchg
adc
loope
xor
pop
sbb
xlat
das
jb
jecxz
cmp
ror
in
jmp
or
clc
ret
xchg
out
mov
adc
sub
inc
push
ret
out
mov
sub
dec
lods
dec
shr
mov
mov
ds
fisttpll
push
mov
out
sub
in
movsl
shlb
push
pusha
adc
adc
lahf
cmp
jo
add
sub
mov
sbb
push
fmuls
xchg
jne
add
cli
inc
xorb
push
sbb
jne
nop
or
jno
pop
add
js
loopne
je
push
addb
cld
adc
cmpl
adc
add
idivb
cld
imul
and
mov
je
sbb
sbbl
add
pop
je
adc
bound
jmp
idivb
js
mov
and
inc
ds
xchg
je
pop
push
and
aad
jg
mov
push
pop
ja
add
jae
lea
fldl
shll
iret
test
cmp
in
push
dec
or
insb
add
adc
add
inc
stos
push
dec
seto
mov
ja
nop
lods
mov
push
add
xor
dec
iret
lret
shlb
mov
sbb
mov
mov
daa
sbb
mov
xor
inc
jne
sbb
cmpb
fwait
rcrl
shl
add
and
in
enter
les
dec
inc
inc
aad
jmp
push
add
loope
cs
ja
push
xor
ret
mov
push
pop
add
pop
adc
add
push
scas
xor
punpckhbw
pop
mov
pop
xchg
push
mov
test
mov
add
or
pop
lock
add
mov
sub
stc
pop
pop
repz
pop
je
in
jb
sub
enter
cld
xlat
sbb
cwtl
dec
cs
js
pop
add
mov
incb
mov
or
jecxz
sub
dec
pop
mov
aas
jae
add
cmp
xchg
scas
jne
sbb
add
add
adc
add
fcom
mov
cmp
sbb
out
add
and
repnz
pop
sbb
xorb
mov
dec
stos
cmp
adc
loop
sub
mov
mov
mov
mov
inc
out
mov
or
ds
cmp
das
daa
jle
idivl
hlt
cmp
xor
and
add
call
int
cmp
jae
lcall
mov
mov
adc
or
sbb
sub
bound
pop
sub
clc
add
out
dec
xchg
jmp
mov
xchg
mov
pusha
jl
push
scas
inc
xchg
loopne
lods
add
xchg
push
movb
add
jmp
or
and
push
adc
sub
jns
push
sub
mov
jae
movb
lea
lods
mov
add
mov
pop
and
mov
sub
mov
pop
sti
shlb
push
shll
imul
jne
cmp
push
sub
mov
jle
std
add
call
push
add
loopne
faddl
pop
fcom
push
repz
xor
sti
scas
mov
or
gs
pop
andb
pop
js
push
mov
loopne
sub
add
cmc
mov
pusha
xchg
mov
inc
push
addl
inc
sbb
mov
jg
lsl
push
movsb
loopne
clc
leave
add
push
lock
mov
add
jbe
insl
inc
mov
add
popf
subb
pop
xchg
inc
dec
ljmp
add
ja
sbb
mov
add
sbb
addb
lds
jbe
mov
lret
movsb
fsts
or
xchg
movl
mov
cmpb
mov
int
lea
das
arpl
adc
mov
addb
mov
ljmp
je
mov
shrb
jns
addr16
sbb
loop
repz
add
imul
add
fmuls
pop
adc
icebp
aam
in
jge
pop
cmp
repnz
je
int3
bound
xchg
or
or
add
mov
pop
add
ret
rolb
stos
or
cmp
shll
mov
test
add
adc
sti
pusha
sub
loope
cs
adc
xchg
aas
add
inc
jo
mov
add
ja
xchg
nop
pop
subl
dec
shlb
adc
hlt
add
and
mov
add
and
jb
fcomps
mov
push
add
jb
add
and
dec
xor
adc
je
add
xchg
add
hlt
loopne
incl
pop
and
addr16
adc
add
mov
push
mov
and
or
and
loopne
or
loop
in
sub
je
push
negb
push
sbb
shll
dec
in
sub
add
nop
movsb
mov
cmpb
daa
ja
xor
inc
jno
mov
sbb
add
pop
add
mov
add
fcom
pop
or
inc
test
dec
int
mov
lret
jg
out
add
sbb
cmp
add
ss
xor
movsl
adc
mov
push
popf
in
jmp
cltd
or
mov
jne
add
cmpsl
lret
adc
mov
xlat
ljmp
mov
jbe,pt
or
add
out
add
out
mov
fildll
aam
mov
add
lock
mov
add
pop
clc
push
push
loop
add
xor
cmpsb
bswap
sub
mov
mov
inc
push
les
xor
repnz
rcrb
add
clc
jne
push
mov
pushf
inc
clc
int3
pop
mov
inc
insb
and
cmp
in
pop
adc
aad
cmp
lock
fstpt
out
sbb
push
in
xor
adc
fs
push
cmp
popa
cmp
inc
clc
mov
cli
or
mov
sub
and
xchg
jg
shrb
dec
cmp
jb
and
pop
repz
inc
inc
pop
sbb
add
sub
mov
mov
aaa
call
bound
mov
dec
add
inc
in
or
cmc
push
test
fcoml
sbb
dec
sbb
inc
gs
je
popa
icebp
cld
fs
jp
jae
and
imul
shll
add
stc
sbb
insl
adc
and
mov
bound
add
loope
fnstsw
lods
add
jge
pushf
add
cs
bound
lret
ds
addl
out
js
mov
cmp
test
sahf
sub
loop
movsl
add
call
add
rorb
je
and
jle
add
out
stc
fs
inc
add
sub
adc
lret
add
aas
jmp
call
add
xchg
cmp
les
stos
sbb
pop
call
out
push
add
adc
dec
push
dec
add
mov
jp
leave
lret
jne
push
cli
ret
add
add
push
pop
clc
repz
into
adcb
movsb
add
imul
or
es
push
lret
cmp
sub
cmp
inc
sub
enter
mov
mov
je
mov
ljmp
pop
mov
push
in
arpl
js
sub
sbb
inc
add
in
call
add
mov
in
outsb
push
mov
sub
in
sti
adc
add
xchg
push
add
in
add
loopne
andl
add
sub
sahf
pop
shl
jge
push
lock
push
mov
ss
cmp
add
shlb
imul
jge
push
cmp
je
add
pop
pop
pop
nop
repnz
xlat
add
wbinvd
in
shrb
pop
dec
ret
cld
lock
push
pop
in
xor
inc
inc
cmp
mov
mov
cld
mov
sbb
xchg
notl
sbb
in
add
add
jo
cmp
adc
push
hlt
fmull
add
loop
arpl
jnp
add
jl
js
add
sbb
add
testb
or
pop
dec
add
xchg
cmp
and
sbb
lock
mov
xchg
lods
sbb
add
xchg
mov
jae
jg
add
les
jmp
push
jge
xor
jle
xor
loopne
outsl
push
jp
pop
das
add
jmp
lret
push
xor
and
push
mov
rcrb
push
mov
mov
fs
sub
cmp
cld
out
add
pop
bound
sti
std
popa
add
mov
clc
arpl
sbb
fldcw
and
testl
dec
jecxz
jns
into
fldl
cmp
lods
fcoms
add
jo
mov
jne
adc
lahf
push
push
iret
pop
sar
dec
in
mov
push
mov
adc
add
mov
dec
add
sub
cmp
and
aad
mov
inc
sub
rorb
insl
out
sub
data16
lcall
xchg
inc
cld
push
setae
and
icebp
or
addr16
push
add
iret
into
sbb
mov
adc
add
adc
popf
dec
pop
mov
add
lods
push
lret
adc
xchg
add
dec
or
adc
xchg
sub
xor
inc
or
and
fnstenv
rcll
jmp
ds
add
in
mov
jne
push
sub
data16
inc
cmp
jmp
test
cmp
stos
clc
jo
xchg
orb
xor
pop
das
je
fcomip
cmp
mov
sbb
push
cmp
pop
inc
xor
add
mov
dec
adc
and
imul
enter
subps
sahf
pop
push
jae
addl
lea
clc
je
mov
adc
add
enter
cs
add
stc
mov
inc
js
pop
xor
xchg
jo
push
mov
xchg
lock
ds
iret
pmulhw
jmp
insb
inc
push
rorb
mov
pop
lods
inc
clc
add
mov
pop
jns
movsl
add
dec
rolb
inc
dec
add
or
or
lock
and
call
pop
mov
add
inc
dec
in
inc
add
push
pusha
add
pop
sbb
jne
movsb
add
mov
sub
and
fadds
jmp
enter
jl
and
push
sbb
incb
jb
xchg
mov
xor
add
mov
dec
shlb
and
gs
outsb
jecxz
test
orb
aas
inc
pop
sets
cmp
mov
sbb
dec
nop
mov
out
rclb
adcb
mov
test
das
push
ds
dec
jb
xchg
cli
jmp
out
add
cld
and
adc
jne
add
mov
nop
cmc
inc
fbstp
pop
pop
xor
ficoms
add
and
jp
mov
stos
lcall
jg
cmc
mov
xchg
jns
pop
ret
jbe
lahf
push
loopne
fdiv
mov
out
orb
test
mov
inc
add
mov
shrb
addl
jge
and
add
dec
test
adc
mov
stos
lcall
pop
push
movl
fistps
call
add
jle
sbb
push
jmp
in
in
test
add
dec
sbb
add
mov
outsl
cmp
adc
and
or
mov
incb
push
xor
add
gs
sbb
and
pop
add
les
add
ja
clc
sti
sub
jecxz
pop
adc
inc
and
dec
sub
insl
and
add
sbb
addl
jns
dec
cmp
xchg
mov
xchg
add
pusha
inc
sub
add
push
subb
stc
sub
pop
gs
add
pop
out
sbb
mov
call
inc
das
pushf
mov
or
and
add
enter
jb
je
inc
mov
add
orb
xor
in
ret
fcoml
mov
pop
testl
push
and
add
push
or
dec
add
aad
and
adc
cmp
test
push
adc
push
sbb
push
push
xor
pop
repnz
aas
inc
xor
push
add
add
add
mov
stos
cmp
lcall
adc
push
add
pusha
and
dec
inc
xchg
cmp
xorl
leave
test
xor
into
push
idiv
pop
mov
add
inc
movsl
addb
adc
cltd
or
dec
adc
arpl
dec
lods
push
les
mov
adc
stos
inc
out
mov
orb
and
add
leave
mov
js
add
test
cmp
and
and
fiaddl
push
cmc
adc
daa
scas
movsl
add
jmp
pop
pop
aas
pop
std
shlb
in
scas
icebp
push
mov
mov
or
add
inc
popa
sub
mov
add
and
out
dec
or
cmp
jg
xlat
adc
loopne
dec
std
add
jle
cwtl
or
xchg
loopne
mov
test
out
dec
addb
fidivrl
lds
imul
sbb
or
jle
faddp
xchg
daa
sub
pop
mov
jp
xchg
in
inc
into
jle
xchg
jl
mov
in
add
fstl
push
pop
dec
adc
sti
xorb
cmp
sub
hlt
das
mov
test
je
cvtps2pd
dec
imul
and
in
jg
sub
pop
or
iret
aas
sbb
cmp
cli
mov
adc
xchg
cmp
sbb
add
xchg
ds
add
cld
add
or
jo
xor
push
push
ds
sbbb
cmp
inc
sti
pop
inc
adc
dec
push
sarb
jbe
gs
test
dec
into
repz
andl
add
ja
push
cmc
out
mov
daa
adc
and
add
dec
mov
enter
add
push
and
fmuls
inc
pop
ja
push
mov
je
add
pop
and
adc
push
sbb
add
or
inc
mov
and
adc
stc
loopne
addb
push
testb
cld
or
test
xchg
sahf
xchg
rcrl
fists
push
pusha
add
call
movsb
push
add
mov
add
nop
repz
and
sbb
xchg
sub
jns
pushf
sub
jo
jae,pn
xchg
add
push
imul
and
cmpsl
je
jmp
cmp
jbe
add
xchg
test
xchg
out
add
inc
js
rolb
mov
clc
les
dec
cmp
dec
out
repz
and
imul
inc
add
in
insb
inc
test
test
push
movsb
sbb
add
and
fsubl
js
int3
pop
or
xchg
addb
mov
add
lcall
add
mov
mov
lcall
clc
ret
push
nop
push
adc
or
or
add
sbb
pop
call
or
mov
faddl
sbb
mov
and
movsb
add
pop
and
lock
andl
das
call
xor
add
cmp
movsb
and
add
sub
mov
add
mov
lods
add
adc
loopne
xor
pop
xor
scas
add
or
and
pusha
hlt
and
or
int3
push
mov
lret
mov
push
enter
loopne
fcoml
dec
sbb
xchg
adc
stc
and
sbb
test
sub
or
and
je
xor
mov
jne
fs
adc
lods
dec
aas
add
lods
pop
arpl
add
test
cmp
cmpsl
or
add
rclb
pop
mov
mov
cmp
jo
pushf
inc
shrl
jle
pop
and
dec
pop
icebp
insb
jbe
subb
fcoml
lods
adc
cld
insl
add
and
fs
push
jne
mov
pop
mov
add
adc
dec
push
inc
sahf
mov
movsb
or
push
sub
and
testl
sbb
mov
push
lea
adc
test
sbb
or
and
andb
out
loopne
add
je
insl
gs
add
outsl
out
addl
cld
ljmp
inc
sbb
sbb
cmpb
inc
mov
pop
adcb
in
or
dec
rol
push
or
xor
aam
adc
stc
rcrl
sbb
repz
fmuls
loop
add
jl
movsb
add
pop
adc
pop
or
pop
es
dec
je
add
mov
xchg
and
pushf
dec
movsb
xchg
xchg
repz
aam
fdivr
in
in
sti
hlt
clc
cld
add
add
adc
sbb
les
pop
xchg
xor
cmp
pop
dec
icebp
push
pop
clc
in
fs
insb
jo
jl
test
dec
cmpb
cmp
inc
and
ds
add
or
rorb
fs
mov
mov
addb
and
mov
in
pop
loop
gs
add
and
adc
add
xchg
sub
inc
dec
dec
dec
add
incl
push
pop
pop
add
in
add
inc
dec
push
dec
adc
addr16
insl
pop
outsb
scas
add
add
add
and
imul
fcoml
mov
cmpsl
add
call
je
push
xor
inc
cwtl
mov
pushl
adc
or
xchg
xor
and
inc
xor
cmp
inc
add
imul
lock
nop
sub
sbb
inc
cmp
and
je
mov
mov
add
sbbl
and
and
pop
add
lea
cmp
add
push
scas
mov
sbb
hlt
add
sbb
js
add
push
xchg
divl
test
mov
or
cmc
add
jecxz
mov
pusha
insb
add
clc
daa
push
and
cwtl
gs
popl
xchg
psubsb
test
cltd
pop
jo
or
jg
add
add
mov
jne
adc
movsb
or
jle
add
xor
loopne
in
jo
inc
cmpsl
or
int3
dec
clc
xchg
or
movsl
pusha
cmp
jecxz
adc
dec
nop
test
mov
shlb
xor
cmp
inc
inc
push
add
and
rcl
mov
ds
cwtl
push
add
add
add
add
pop
pusha
or
push
or
femms
inc
adc
add
cltd
or
and
sarb
and
xor
add
push
fwait
loopne
rolb
xchg
adc
nop
jbe
add
sbb
pushf
sbbb
test
and
adc
xlat
mov
mov
and
daa
jp
sub
and
push
mov
xor
cmp
add
push
aas
add
adc
loopne
xor
mov
ds
xor
push
ss
cltd
add
xor
les
cmp
dec
xchg
add
inc
pop
mov
adc
add
arpl
xor
xor
sbb
jo
fstps
sahf
call
scas
and
mov
adc
pushf
cmp
pop
cltd
jns
insb
ret
shll
loopne
add
les
jne
add
sub
fsubl
andb
loopne
and
mov
sbbb
or
and
pusha
adc
mov
add
aam
test
pop
sbb
or
inc
add
push
dec
cltd
mov
mov
fldenv
inc
xor
gs
or
pushf
mov
sbb
add
sub
inc
notl
lea
sub
flds
pop
adc
mov
mov
xor
xor
test
je
hlt
outsl
pop
inc
cmp
rcll
xchg
jnp
ret
movsb
or
sbb
pushf
adc
add
movsl
lods
dec
pop
sbb
imul
xor
add
movsb
fcomp
test
popa
dec
or
dec
repnz
jns
inc
and
jp
data16
cmp
enter
hlt
jne
mov
add
adc
xchg
pusha
push
lcall
mov
popa
insb
in
adc
xor
add
pop
mov
test
jo
mov
and
lods
xchg
or
pushf
xor
mov
inc
mov
nop
add
push
inc
push
add
jl
mov
push
lods
mov
xchg
nop
xchg
push
jo
xchg
sbb
enter
add
jl
lea
add
or
loope
cwtl
add
and
inc
mov
pushf
sarb
fwait
add
sub
push
xchg
aas
xchg
adc
push
lods
xchg
cli
mov
pop
cltd
xor
or
dec
aam
loop
and
inc
decb
pusha
push
xor
and
lahf
jle
nop
mov
fdivrp
lock
mov
iret
cmp
iret
dec
rcrb
and
std
sarb
mov
sub
xchg
rclb
ss
sub
push
adc
adcb
add
aam
in
hlt
add
xchg
sbb
adc
daa
jle
add
inc
fs
and
test
xor
mov
sbb
sub
cmp
add
mov
cmp
xchg
aam
loop
lock
adc
cmc
pop
add
cwtl
stos
mov
push
lret
decb
or
and
lods
sbbb
xchg
mov
shl
loopne
and
cmp
xchg
jg
add
orb
push
add
sub
or
xor
scas
movsb
in
fs
je
jle
lcall
xor
add
outsb
pop
insb
xor
add
adc
inc
xchg
leave
add
into
outsb
out
push
fs
add
insl
inc
inc
xor
add
jne
in
jnp
add
jmp
adc
xor
dec
lret
pop
push
loopne
fidivrl
mov
sbb
add
jp
xor
in
jne
incb
xor
mov
outsl
arpl
call
sbb
sbb
cmpsb
sub
in
adc
push
push
imul
push
shl
add
inc
jns
xor
add
lock
je
mov
dec
or
add
jo
std
xchg
push
je
imul
popa
mov
jmp
mov
and
push
xchg
add
or
jl
add
jb
jno,pt
into
add
xor
dec
outsl
cli
add
outsb
stc
or
inc
dec
adc
inc
imul
insl
push
push
pop
push
dec
push
adc
mov
fsubl
insl
add
push
xor
add
push
sub
mov
sbb
inc
pushf
inc
xor
jae
sub
rcrl
push
mov
push
outsb
push
inc
cmp
push
inc
cltd
fidivl
shlb
push
outsl
xchg
add
add
cmp
addb
aam
or
pop
push
sbb
rep
lock
shlb
fs
mov
and
sub
xchg
add
imul
jo
and
jp
cmp
xchg
jno
add
jne
jb
lret
dec
xor
inc
mov
jge
add
addr16
dec
incl
sahf
popa
mov
dec
add
mov
or
jnp
sub
jo
movsb
dec
repnz
pop
push
inc
xchg
add
add
sub
cmpsb
cmp
add
aam
mov
and
popa
jne
sub
mov
in
mov
hlt
pushw
sub
outsl
cwtl
mov
sub
lcall
lods
or
mov
mov
aam
movsl
add
test
call
inc
sbb
ficoml
stos
dec
pop
sub
mov
lahf
sub
and
aas
dec
fiadds
adc
in
xchg
inc
xchg
pusha
add
loop
insl
inc
jo
add
push
mov
lds
jp
adc
or
push
inc
or
mov
es
lds
movsl
sbb
add
sub
inc
out
and
mov
in
lods
repnz
xor
imul
dec
sbb
div
push
test
int3
push
insl
repnz
xor
xor
mov
add
cmp
add
mov
add
mov
sub
jbe
or
movsb
cld
add
aas
pop
popa
arpl
repnz
push
add
ja
xchg
and
inc
hlt
out
fwait
and
addb
imul
mov
jne
jle
add
sub
xor
pop
cmovne
cmpsl
mov
filds
add
pop
pop
cmpsl
adc
cmp
add
add
in
and
jo
adcb
pop
or
pop
out
fcom
js
sub
xchg
inc
xor
inc
ret
in
add
movsb
out
shll
add
loopne
test
cmp
and
add
mov
pushf
add
sub
aam
sbb
cmp
adc
xchg
test
ljmp
push
xor
and
mov
sub
mov
cmp
repz
adc
dec
cmp
test
in
repz
xchg
aaa
add
sub
push
add
sub
inc
stos
inc
insb
in
add
and
sbb
popa
mov
gs
or
mov
add
jge
or
cwtl
movsl
mov
or
mov
pop
jle
push
and
js
push
sbb
xchg
outsb
fiadds
into
push
sarb
cmp
aad
pop
movsl
add
hlt
add
loopne
outsb
add
pop
add
or
sub
cmp
add
dec
out
in
call
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
sar
loop
ljmp
add
or
adc
sbb
jmp
inc
in
call
hlt
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
idiv
decb
lods
xchg
add
je
jbe
js
add
jl
jle
nop
mov
cmp
es
pushf
inc
loopne
popa
and
push
leave
push
sarl
add
sbb
cmp
ret
push
aad
fistps
je
add
xchg
cmp
daa
sbb
cmp
pop
sub
js
jp
jl
jle
jle
jle
jle
push
pop
cmp
add
inc
sub
xchg
or
popf
adcl
push
movb
sbb
xor
jg
add
cmp
faddl
sbb
cmp
aaa
add
push
pop
pop
call
xchg
hlt
in
clc
hlt
or
andb
add
sub
jmp
stc
mov
sti
andl
pop
add
or
pushf
xor
popf
add
test
cmp
xchg
mov
out
out
ret
sbb
push
xchg
mov
push
subps
and
xchg
les
lret
push
jle
sbb
xor
popf
pop
sbb
mov
lahf
xchg
pop
out
cmp
add
or
daa
sbb
addr16
lock
mov
xchg
out
leave
mov
xchg
add
fnstcw
jb
je
jbe
add
dec
xorl
mov
leave
rcl
push
add
cmp
push
test
iret
lock
hlt
add
loope
icebp
imul
dec
cmp
scas
add
loop
or
sub
mov
ret
rorl
aas
cmp
enter
int3
sbb
pop
pop
out
xchg
xor
push
enter
iret
je
xor
inc
fmuls
add
jp
jl
jle
repnz
xor
popf
dec
sbb
push
pop
lahf
fs
nop
sub
js
push
xchg
hlt
mov
mov
sbb
inc
cmp
cmpsl
imul
mov
jmp
cld
call
ss
pop
sarl
sti
cmp
addb
insb
adc
xchg
dec
xchg
cmpsl
add
xor
in
mov
mov
loopne
in
std
call
sub
jbe
sbb
cmp
popf
add
sbb
loop
add
inc
lds
test
mov
mov
add
add
push
leave
loopne
sar
and
cmp
add
push
icebp
cwtl
lret
push
push
adc
xor
mov
rcrb
jecxz
repnz
mov
pusha
sbb
repz
fcompl
in
in
pop
testl
call
sub
sbb
aas
push
dec
pop
mov
orb
dec
xchg
lcall
iret
shl
add
je
cmp
js
jp
jl
jle
test
ja
jns
jnp
jge
jg
add
sbb
aaa
sbb
sahf
dec
push
test
xchg
xchg
lahf
scas
pop
mov
mov
lahf
lahf
ficomps
testb
daa
pop
push
inc
push
addr16
ss
push
out
inc
iret
dec
inc
push
bndldx
outsb
hlt
jbe
jle
lret
aas
cs
outsb
sahf
scas
cmpsb
out
scas
das
mov
mov
iret
iret
fmulp
out
out
iret
test
push
push
cmp
dec
push
add
cs
add
cmp
adc
in
hlt
add
jle
cs
hlt
enter
sub
call
fcoml
cld
inc
dec
dec
mov
pcmpgtb
je
jl
and
cld
xchg
cld
pushf
cld
movsb
cld
lods
cld
mov
mov
int3
aas
aam
fdivrl
in
in
ds
pusha
add
cmp
cmp
sbb
and
sub
xor
aas
in
call
pop
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
mov
aam
fsubl
stos
xchg
cld
xchg
mov
add
sbb
and
sub
xchg
int3
push
add
jl
test
inc
mov
mov
loopne
hlt
pop
cli
cmpb
or
js
dec
mov
cmp
cmp
pop
cmp
insb
aas
jo
je
js
sub
xchg
jl
jmp
stc
enter
rcrb
pop
loopne
push
adc
ds
and
cmpsl
add
les
pop
out
je
insb
in
je
js
jl
cmp
cld
mov
mov
nop
cld
xchg
cld
movsb
cld
cld
int3
cld
sar
aam
in
xorl
call
add
push
sub
xor
xor
loope
xchg
pop
inc
dec
xor
dec
test
sub
aas
mov
adc
dec
sub
and
lock
xor
div
cltd
mov
pusha
aam
and
push
pause
push
xor
mov
je
jbe
add
call
mov
ret
clc
sar
jo
add
add
or
cmp
cmp
lahf
dec
xchg
add
insb
pop
cmpsl
outsb
pusha
out
jo
cwtl
in
pushf
lock
lods
stc
mov
sbb
jle
add
addb
mov
and
inc
add
dec
dec
or
add
pusha
xchg
subb
leave
pushf
shll
mov
cmp
rolb
and
loopne
pop
add
lods
xlat
add
cs
lahf
sbb
xchg
and
dec
and
pop
iret
pusha
leave
shrl
insb
loope
jno
lock
pop
jl
xor
dec
and
es
jle
add
out
je
xor
cmp
adc
and
sub
std
lahf
add
mov
in
js
jl
sbb
test
mov
adc
iret
enter
rol
aam
fmuls
loopne
jb
dec
call
add
sub
hlt
cmp
mov
fidivrl
js
jp
jl
mov
push
mov
leave
fsubs
pop
in
dec
pop
mov
shlb
adc
xor
cmp
jo
or
clc
add
push
rorb
dec
lcall
stc
clc
int
add
push
pop
jno
cld
cmp
inc
inc
push
outsb
mov
jp
jle
popf
xchg
and
sub
push
pusha
into
cmpsb
cmp
add
or
xorl
test
add
es
nop
dec
shrl
or
lahf
add
push
sbb
addl
xor
ss
daa
dec
add
rcrl
stos
shlb
out
pop
and
cmp
mov
cmpsl
add
repnz
xor
out
xor
faddl
loope
cmp
pushf
shll
scas
ljmp
pop
add
sub
imul
js
iret
mov
jno
popa
jg
movsl
fsubrs
xor
pop
add
ljmp
ret
int
xchg
es
push
or
test
rclb
das
pop
add
js
xchg
cwtl
scas
adc
mov
or
or
add
fsub
mov
mov
sbb
sub
mov
in
dec
sti
orl
es
add
insl
dec
movb
sub
sub
mov
ret
iret
popf
aad
ficompl
jmp
lock
add
and
sub
push
push
clc
push
add
into
jns
jb
je
add
inc
movb
xor
and
int3
and
or
cmp
sbb
xor
cmp
imul
aas
xchg
pop
or
out
loope
cmp
leave
sub
popa
pop
inc
jmp
mov
and
sub
mul
adc
cmp
cmp
andb
sbb
xor
add
jnp
hlt
cmp
mov
mov
fmuls
add
movsl
cmpsb
call
add
jecxz
xchg
jp
add
mov
mov
sub
cmp
movsl
mov
jmp
ret
les
add
xchg
jo
lret
add
adc
mov
shlb
fcompl
mov
mov
stc
shlb
aas
add
cs
or
cmp
ficoms
fstps
jae
sub
add
loop,pn
inc
in
int3
dec
in
or
out
test
push
mov
nop
ljmp
in
call
shl
stc
jle
add
in
popf
cs
jne
stos
add
cltd
clc
and
and
sub
and
stc
cmp
sahf
add
pop
pop
xchg
pusha
mov
sub
add
and
adc
push
dec
jo
or
jp
dec
pop
or
cli
mov
mov
xchg
xor
movb
fidivl
or
nop
pusha
mov
ud2
xor
xor
add
ljmp
notb
pop
cmpsl
test
inc
jb
xchg
add
lds
in
push
shlb
dec
push
add
add
dec
out
dec
pop
mov
jae
test
fwait
ror
adc
int3
mov
shl
sbb
daa
or
mov
cmp
add
cmp
daa
add
inc
ljmp
push
jb,pt
je
push
aaa
add
jo
pop
add
xor
adc
adc
mov
jbe
push
sub
add
ss
mov
fcomp
ljmp
xor
in
pusha
sub
pushf
rcrb
lahf
and
les
push
lock
addl
and
sbb
addb
rolb
jl
loopne
dec
sbb
out
dec
iret
icebp
or
add
push
inc
mov
leave
loopne
sbb
orb
sub
jecxz
push
pop
xor
dec
das
inc
dec
add
scas
xchg
mov
add
mov
in
loop
lock
hlt
and
xor
cmp
cmpb
cmp
cmp
xor
dec
dec
loope
xchg
out
add
xlat
icebp
ljmp
jge
add
or
lea
xchg
aaa
lahf
dec
mov
lock
add
inc
sbb
mov
jo
jb
int3
inc
jbe
cwtl
js
hlt
pop
cmpb
xchg
cmpb
push
cmp
aam
jle
sbb
popa
fs
fcos
jecxz
rcr
xchg
and
or
xor
call
sbb
sub
clc
pop
mov
dec
jae
cs
loop
mov
lret
aad
out
cli
sti
xorl
dec
push
or
fs
and
sbb
leave
mov
sub
add
and
jb
mov
jbe
dec
add
rdmsr
sbb
popf
dec
sub
pop
enter
fs
js
jle
jne
rorb
jb
je
jbe
js
roll
call
xchg
mov
cmp
pop
adc
out
in
cld
roll
xchg
sub
xor
add
sarb
stc
inc
push
push
cs
adc
pop
nop
lock
hlt
pushf
xchg
push
pop
movsb
lahf
test
lods
test
mov
enter
leave
lock
sbb
add
cmp
test
roll
add
subb
imul
into
icebp
sarb
jle
mov
addb
inc
xor
data16
push
sti
fidivs
jb
sbb
jl
test
mov
jp
sti
jmp
js
add
jo
dec
sub
stos
inc
mov
cwtl
jecxz
out
sub
popa
pop
mov
pop
cmp
pop
pop
pop
jle
fldl
stos
add
lret
loop
add
xchg
push
addr16
xchg
movsl
mov
or
out
loopne
xor
dec
add
push
dec
arpl
shll
hlt
pop
xor
push
dec
xlat
sbbl
push
xchg
jae
jp
add
out
sti
add
or
in
sbb
in
sub
stos
pop
add
insb
sbb
repz
subb
jge
ds
mov
in
push
shlb
add
je
jbe
pusha
je
and
iret
sbb
rolb
daa
negb
out
add
jle
clc
mov
repnz
and
mov
adc
fldl
dec
aam
cmp
push
cmp
lahf
arpl
psubsw
jg
xchg
cmpsl
xchg
mov
int3
add
popa
mov
stc
xlat
xchg
frstor
sarb
add
cmpsb
loop
push
pop
fmull
add
subb
push
clc
push
or
cmp
outsb
les
in
add
xchg
or
mov
iret
in
add
ss
add
cmp
push
cmp
loopne
jle
add
pushf
pand
orb
pop
inc
dec
adc
loope
cmp
push
push
sbb
mov
adc
add
dec
in
pop
xchg
popa
push
fsubrs
jb
scas
into
push
test
cmp
ds
loopne
add
mov
or
ljmp
jmp
pop
nop
lods
in
call
add
mov
and
sbb
xor
popf
add
pop
mov
das
rclb
cmp
pop
inc
or
add
into
or
cld
xchg
xor
xor
cmp
pop
inc
or
add
loope
enter
jbe
leave
jp
bound
roll
aas
je
cmp
mov
add
bound
in
jge
pop
cmp
mov
ret
xor
add
lahf
in
add
sbb
inc
daa
lods
cli
jno
in
and
sbb
out
mov
cmp
mov
mov
xor
pushf
jnp
xchg
add
fcomps
fiadds
cmc
xchg
or
mov
cmp
ds
aas
out
add
add
and
add
lock
cmp
push
xchg
cwtl
clc
adc
aaa
add
fmull
aas
and
add
js
cld
test
cmp
daa
inc
loope
fs
inc
push
or
sbb
add
push
jl
cmp
and
or
dec
sub
loopne
pop
repnz
dec
roll
mov
ds
dec
xlat
add
push
testb
sub
mov
xor
xchg
xchg
fadd
pusha
mov
dec
xchg
fadds
add
sahf
pop
add
fiaddl
lcall
clc
pusha
nop
pop
cld
jb
pop
mov
rep
nop
and
into
jbe
adc
addb
and
mov
lock
cwtl
mov
loopne
dec
and
add
mov
xchg
push
cmp
dec
and
xor
mov
into
pushf
sahf
pop
add
adc
sub
cli
inc
add
lock
outsb
clc
jnp
add
pushf
jl
push
pop
mov
add
out
cli
jo
push
adc
add
setbe
cld
add
mov
orl
or
sbb
rorb
pop
xor
add
sarb
cld
aas
cltd
in
add
out
enter
aad
mov
add
push
js,pt
dec
push
add
in
add
xchg
testb
in
cmc
lock
xor
iret
insl
sub
or
pop
stos
cmp
inc
jg
shrb
mov
mov
jl
dec
fldcw
xchg
leave
cmpsb
mov
mov
adc
js
sub
add
push
sahf
loopne
and
adc
ljmp
je
add
repnz
jo
mov
and
leave
unpcklps
and
inc
loope
jmp
sub
insb
pop
mov
mov
add
popf
pop
mov
out
in
add
mov
orb
mov
sarb
test
fcomps
je
jbe
pop
lret
or
or
push
mov
sti
cmp
cmp
daa
push
xchg
push
data16
ret
lock
mov
loopnew
jnp
dec
pop
sbb
lahf
out
repz
std
mov
add
ror
mov
insb
add
aas
push
xor
scas
hlt
orb
enter
mov
xor
and
mov
inc
mov
scas
push
dec
mov
mov
xor
nop
pop
add
dec
cmpb
dec
add
pop
or
lods
adc
daa
sbbb
cli
add
pop
cmp
aas
insl
leave
js
or
lea
adc
aas
repnz
pop
in
cmp
cmp
sub
inc
dec
add
add
xorl
cmp
ds
ja
stos
xchg
jo
jle
stos
add
ret
xor
repnz
fsubs
scas
add
mov
inc
shlb
add
pop
push
fs
mov
inc
add
jmp
jmp
mov
shll
addl
mov
xor
clc
pop
push
pavgb
xchg
leave
stos
punpcklwd
mov
hlt
cld
or
cmp
adc
sub
dec
and
nop
lahf
insb
xchg
je
ret
add
adc
loop
in
cmp
jo
add
ficoml
pusha
insb
add
adc
or
repz
add
repnz
shlb
inc
je
rorb
data16
jle
andb
stc
cmpsb
inc
mov
push
fld
add
push
ljmp
shrb
add
push
popa
cli
test
xchg
rolb
in
xchg
add
mov
and
inc
add
push
and
outsl
xchg
les
popf
ret
inc
fcmove
subb
mov
mov
shll
stc
popf
fstpt
cmp
jb,pt
je
add
mov
jo
pop
add
jl
dec
test
add
fmull
nop
add
cmovle
mov
loopne
ret
push
jbe
xrelease
sbbb
mov
or
jb
push
dec
and
loop
add
data16
insl
in
pop
clc
cltd
shlb
pusha
into
xchg
inc
push
add
adc
pop
sub
mov
jecxz
repnz
fcomps
outsb
dec
cli
jo
pop
nop
jl
lock
xchg
add
divps
int3
faddp
jb
sub
cli
scas
push
pop
jbe
lea
daa
roll
stc
jmp
add
cld
in
pop
jle
test
add
cld
icebp
xchg
jp
add
ss
xor
andb
arpl
dec
jl
testb
lret
test
and
xchg
cmp
cmp
push
add
shl
loop
icebp
add
pop
ret
daa
filds
clc
loop
adc
pop
ret
fs
shrl
mov
nop
stc
xlat
and
in
lahf
test
pop
cmp
cmpsb
clc
stos
xchg
lcall
cmp
ja
pop
push
ds
in
rolb
xor
or
or
loopne
adc
jbe
in
test
cwtl
aas
pushl
imul
adc
add
daa
jl
aam
insb
adc
add
clc
xchg
lahf
bound
or
dec
cmp
subb
mov
out
inc
push
add
push
clc
sbb
std
add
sub
dec
cltd
xchg
pop
cmp
addl
push
lods
jnp
add
insb
shrb
fidivs
fs
add
dec
sub
js
push
lock
ret
bound
mov
cmp
push
push
push
jle
inc
icebp
pop
or
and
scas
arpl
movsb
adc
lods
cmp
cmp
add
mov
subb
pop
fcomip
jecxz
and
stc
repz
sar
insb
add
or
iret
aaa
dec
sahf
push
push
subb
pop
rorb
adcl
enter
jmp
cli
testl
icebp
les
sbb
push
cmp
push
cmp
arpl
xchg
imul
subb
mov
push
xor
idivb
jbe
daa
loopne
add
fdivrl
jb
pop
sbb
test
xor
mov
cmp
aaa
add
add
or
enter
add
stc
popf
push
add
movsl
repnz
add
in
lock
test
clc
mov
sahf
rorl
mov
xchg
dec
in
inc
jl
cmp
add
ret
jl
adc
adc
orb
fcomps
jle
pop
jmp
and
dec
cmp
cmp
sahf
sub
jo
mov
insb
add
add
push
test
rorb
test
ds
mov
mov
mov
ret
or
cmp
negl
xor
sbb
sub
dec
jno
sub
mov
mov
fmuls
dec
cmp
loope
ljmp
sar
fiaddl
xor
dec
lahf
je
add
ret
or
xchg
sbb
in
mov
scas
cld
add
push
mov
mov
mov
dec
repz
add
inc
andl
and
pop
xor
jnp
ja
add
xor
pusha
sub
fisubrs
clts
rclb
pop
add
je
dec
cmp
testb
clc
push
sub
cli
sti
push
movsb
ss
inc
push
cmp
jo
faddl
je
dec
aad
int3
loopne
sbb
push
sub
lock
loop
rorb
xor
sahf
mov
notl
xor
ret
imul
or
test
test
dec
jle
into
and
cs
scas
push
mov
inc
add
inc
imul
rcl
test
dec
add
xor
mov
jmp
out
jae
jle
fiaddl
stos
ret
mov
xchg
or
loope
pop
loopne
jp
pop
xchg
leave
sahf
repnz
pop
mov
aas
or
add
cmp
das
add
jo
aas
sub
cmp
dec
scas
stos
add
pop
add
cmp
cmp
jbe
xchg
fcompl
add
dec
inc
or
lock
push
xlat
add
xchg
test
mov
cmc
cld
sbb
ds
push
cmp
adc
adcb
lock
pop
add
adc
fsubrs
inc
cmp
jp
jl
dec
fmull
dec
add
mov
shlb
dec
sbb
ljmp
cmp
xchg
fldl
dec
in
lock
pushf
sahf
add
insb
adc
add
lcall
add
movl
dec
int3
adc
enter
jge
mov
leave
mov
jmp
mov
push
cmp
sbb
aas
adc
sub
incb
lahf
mov
roll
es
sarl
sub
popa
jo
aas
or
cwtl
cmpb
rcrl
lret
xor
mov
xchg
jbe
scas
add
add
add
dec
leave
cmpb
add
test
sbb
mulb
mov
outsb
push
or
ficompl
pushf
mov
movsl
xchg
add
inc
popf
dec
sbb
push
xorl
jb
je
jbe
add
pop
cmp
es
call
icebp
mov
lret
add
add
mov
ret
push
jle
add
pcmpgtd
mov
ss
fs
fldpi
add
int3
or
out
inc
add
dec
adc
sub
cld
call
sub
mov
dec
roll
cli
xor
fldl
xor
xor
jbe
or
sbb
stos
inc
out
add
leave
pop
and
mov
or
mov
shrb
jo
and
cwtl
in
xchg
xor
jb
sbb
les
clc
and
or
pushw
add
fadds
lock
sbb
cmp
loop
shrb
mov
push
es
and
xor
xor
call
xchg
sub
bound
popf
movsb
sbb
cmp
dec
cli
enter
sbb
aas
jno
jns
mov
pusha
and
cld
dec
fstpl
add
rol
sbb
test
add
and
hlt
add
push
cmp
je
dec
jo
add
repz
push
shl
jmp
cmp
dec
repnz
cmp
fdivs
dec
retw
add
mov
xchg
fsubrl
pushf
daa
sbbl
dec
pop
pop
mov
test
or
xchg
and
popf
mov
jo
jl
jle
mov
mov
inc
pop
xor
ja
add
loope
jmp
add
in
cmp
xchg
ds
pop
xorl
icebp
add
pop
shr
test
js
daa
rolb
mov
mov
into
mov
pop
or
mov
mov
orl
popa
mov
mov
mov
xchg
xchg
aad
loop
mov
pop
or
xchg
daa
push
push
pop
mov
xchg
aas
xor
jo
mov
add
imul
movsl
add
lock
insb
test
mov
aam
enter
rclb
add
or
aas
daa
mov
mov
pop
dec
je
add
jl
shlb
lock
add
jl
add
push
stc
std
mov
popa
or
add
push
loopne
in
sub
sub
push
aas
xor
inc
pop
mov
and
and
popa
xchg
gs
add
loopne
lcall
in
pop
fimuls
testl
pop
push
jbe
xorl
add
lods
aam
adc
mov
push
jbe
pop
enter
lock
lret
xchg
add
in
aam
ret
es
dec
and
notb
hlt
xchg
loop
sub
fs
dec
fidivs
loopne
xchg
mov
add
sbb
add
loopne
int3
cld
sarb
lret
mov
lock
or
loopne
sub
dec
adc
adc
rcrl
jecxz
repnz
xchg
pop
sub
sar
jns
jno
pop
stc
pop
cli
inc
dec
in
add
mov
call
adc
loopne
leave
pusha
fmuls
lahf
mov
enter
leave
add
push
dec
cmp
shr
stc
or
js
out
mov
xchg
jp
pop
push
ret
cmc
shl
loop
jbe
sub
fcompl
lret
sbb
stos
pop
sub
or
cmp
jl
xchg
add
stc
je
das
and
add
les
pop
fs
or
sbb
rolb
or
cld
push
jo
mov
test
sub
outsl
or
mov
sbb
cmp
mov
add
setp
insb
jnp
lock
jns
arpl
clc
xor
ds
fs
jmp
or
js
test
cmpb
enter
hlt
fs
cli
add
icebp
rcr
pop
xor
or
jl
add
dec
cwtl
and
hlt
add
test
stos
mov
mov
add
lahf
notb
xchg
test
and
or
add
je
test
das
cmpxchg
dec
xchg
ficomps
push
ror
aam
push
jle
nop
loopne
in
or
hlt
jbe
orb
add
or
dec
dec
jae
lock
sbb
hlt
pop
mov
add
xchg
sub
scas
mov
fadds
cmp
loopne
inc
mov
pop
clc
jne
in
mov
pusha
add
mov
test
add
add
adc
addb
loopne
dec
ficomps
mov
fstpl
sub
xor
xor
orl
test
add
loopne
push
call
mov
sbb
in
adc
inc
call
inc
cli
and
jge
mov
dec
push
push
pop
push
push
inc
fildll
inc
es
cmp
or
push
call
enter
loope
inc
sbb
movsb
loop
and
mov
lea
push
test
out
pop
rol
add
add
or
push
adc
adc
inc
int3
and
push
and
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
or
popf
add
lcall
jo
sub
test
jnp
push
decl
aaa
movb
ret
cmpsl
xlat
iret
mov
add
mov
aas
pop
xor
or
push
add
sbb
cli
jmp
add
jmp
sub
add
add
repz
cli
loopne
pop
pop
pop
pop
pop
bound
dec
adc
rorl
add
movsl
loope
add
movsb
pop
push
mov
addb
mov
jp
push
rol
ljmp
sub
loope
push
dec
xchg
rcrb
shr
inc
mov
add
dec
pushl
mov
or
add
pop
roll
or
sti
add
pop
add
cmp
sub
adcl
jns
add
aam
sbb
cmp
add
mov
or
adc
loop
pusha
or
rolb
push
add
mov
add
jne
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
shl
add
aas
jnp
pop
and
add
pop
mov
fisubs
push
pop
push
and
pop
orl
add
xor
xchg
call
adc
shl
and
add
cmp
add
adc
add
or
mov
dec
cmc
sub
ret
add
mov
push
add
fiadds
and
in
or
xor
add
cmp
add
adc
xor
inc
loope
xor
leave
add
inc
sub
xchg
cmp
pop
cwtl
je
sub
inc
out
lahf
xchg
adc
into
ret
sbb
hlt
aam
stos
add
dec
lods
outsb
sbb
push
mov
fwait
in
cwtl
lds
enter
adc
mov
out
xor
pop
pop
cmp
mov
pusha
out
cmp
loop
jb
xchg
add
dec
mov
add
cmp
int
and
enter
jns
icebp
mov
pop
loopne
stos
ljmp
push
inc
shrb
add
mov
sub
sarl
sbb
pop
add
xor
add
xchg
fists
jns
add
aad
push
sub
add
int
cmpb
mov
xchg
mov
mov
and
jmp
jbe
aad
inc
push
mov
daa
add
mov
sub
outsb
add
xor
std
add
mov
or
les
mov
and
inc
pop
fstpl
fiadds
sbb
aas
cmp
mov
add
shrb
pop
ret
and
iret
inc
mov
sub
mov
or
pop
in
cld
mov
lock
fwait
xlat
inc
sbb
stos
pusha
add
add
je
popa
int3
push
lock
dec
cmpl
mov
xor
pop
aad
add
mov
add
sbb
cmc
xchg
pusha
das
mov
push
push
cs
imul
cmovle
cli
pusha
test
mov
mov
xchg
fildl
or
lcall
mov
ljmp
add
fucomip
mov
jbe
pop
xor
cltd
push
cmp
sbb
sub
fs
push
mov
lock
hlt
add
scas
sbb
sub
add
and
gs
jae
inc
inc
xlat
push
sbb
push
in
imul
aaa
popf
jnp
mov
add
inc
push
jmp
or
xor
ret
sub
scas
mov
adc
mov
fnstenv
call
dec
in
pushf
rolb
pop
aam
inc
addr16
fs
dec
or
rcr
outsb
ret
mov
mov
stos
add
rorb
add
rcrb
and
enter
insl
test
cmp
push
mov
loopne
in
add
lods
lds
and
push
add
adc
mov
in
sbb
cmpsl
jbe
jmp
adc
into
rolb
test
aam
add
addb
jbe
push
stos
insb
pop
dec
aam
jl
ja
or
jle
cmpsl
pop
xchg
daa
fdivrl
add
loop
test
add
insl
ret
push
lods
js
repz
testl
mov
fwait
test
sub
fs
add
loopne
add
in
mov
push
xor
xor
jge
cld
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
dec
shll
call
pop
and
leave
loopne
mov
sub
cmc
rep
pop
jmp
dec
shl
mov
xor
sbb
push
add
inc
and
adc
add
test
imulb
xor
leave
shr
je
adc
add
pop
pop
mov
xchg
ret
jns
pop
mov
jl
cmp
push
cmp
orps
je
popa
repz
adc
mov
gs
outsl
lcall
js
icebp
jp
jae
push
inc
jne
mov
popa
addr16
decl
lock
emms
pusha
jo
imul
dec
lock
inc
push
outsb
and
sahf
jnp
cwtl
in
gs
jo
outsl
jne
pop
aaa
inc
jns
mov
fisubs
pop
shrl
bound
dec
xchg
mov
cmp
sti
imul
imull
arpl
int3
and
bound
fidivl
cmpsl
push
outsl
fs
mov
pop
and
rol
xor
or
sub
std
xor
inc
idiv
aad
lcall
mov
cmpsb
jge
arpl
dec
outsl
fildll
mov
addr16
movsb
dec
xchg
filds
ljmp
in
add
cmpsb
push
aas
sarb
pop
sbb
pop
sub
lahf
cli
jmp
jae
cmpsb
mov
ret
push
outsl
shlb
pushf
int3
add
push
pop
repnz
push
push
into
dec
dec
mov
or
push
into
dec
lahf
push
sub
rolb
outsb
xchg
sbb
fwait
inc
push
mov
or
test
sub
fwait
and
and
cmpl
dec
js
xor
mov
icebp
ss
mov
xor
dec
push
leave
adc
cmp
leave
aaa
adc
mov
std
xor
dec
adcl
call
mov
push
fnstcw
cmp
xor
xorl
xor
out
mov
int3
mov
aad
cmpsl
movsb
popf
mov
lret
jbe
enter
cld
shrb
ficompl
add
adc
sub
sub
sbb
mov
push
and
jbe
mov
mov
xchg
fcmovne
aad
out
mov
pop
and
sarl
sub
jl
pop
jg
hlt
fwait
aaa
flds
inc
cmp
cwtl
xorl
loope
std
jo
cmp
mov
pusha
fisttpll
mov
inc
out
and
aas
sar
aad
dec
sarb
jbe
sbb
pop
adc
inc
push
cli
leave
int
pop
pop
push
jno
fcmovnb
jbe
fcoml
push
pop
sarl
mov
jno
loope
push
js
data16
mov
lock
xor
push
xor
or
pop
inc
loopne
outsb
rcrb
subl
push
inc
out
jne
lret
and
inc
dec
enter
mov
cmp
cmpsl
cwtl
cmc
ja
js
loope
and
mov
push
xor
outsl
dec
shrb
xor
add
pop
hlt
adc
add
pop
jo
paddb
inc
add
cmpsl
enter
xlat
imul
orb
stos
dec
icebp
mov
leave
add
scas
and
mov
jecxz
jl
sbb
mov
xchg
cmpsl
inc
xchg
cs
or
movsb
mulb
jb
xchg
loope
sbb
mov
dec
mov
add
or
xchg
js
lock
sbb
cld
stc
adc
loopne
mov
out
mov
mov
std
jecxz
andb
pop
int3
sub
jge
adc
mov
cwtl
sbbb
mulb
insb
cmp
js
add
inc
mov
jecxz
outsl
mov
xchg
or
mov
shl
jbe
test
in
insl
ret
loopne
int
outsb
sbb
data16
sub
xchg
lea
mov
repz
lods
xor
mov
out
stc
test
ror
inc
jp
jle
pop
cltd
sbb
add
xor
push
pop
add
and
ret
scas
push
cwtl
arpl
insl
stos
out
xlat
ret
out
push
fisttpl
in
sarb
inc
cmp
push
adc
jg
mov
mov
mov
inc
test
jo
mov
cmpsb
jp
imul
in
out
pop
inc
fsubp
mov
mov
cmp
add
negl
and
fdivrs
mov
adc
push
insl
call
fs
or
fnstcw
fcoml
xchg
ja
inc
movsb
mov
repz
mov
adc
inc
push
push
sbb
aad
adc
ljmp
push
push
ds
or
dec
adc
adc
or
and
add
push
sub
jp
push
inc
les
fimull
clc
outsl
idiv
ficoms
jl
adc
xchg
jp
xchg
dec
loop
pop
sbb
and
add
xlat
add
jmp
xchg
addl
lock
ljmp
js
std
mov
test
das
inc
dec
in
sarl
pop
mov
scas
jmp
jns
mov
cltd
jnp
sbb
pop
jnp
div
stos
mov
dec
std
mov
push
and
stc
fsub
nop
leave
lret
movb
mov
call
mov
and
mov
scas
ss
cmc
xor
daa
dec
xchg
rclb
scas
lcall
push
pop
ja
push
cmp
ret
add
int
mov
int
mov
lret
das
xor
lret
into
mov
sub
mov
scas
xor
add
sbb
mov
xchg
dec
pand
add
push
sub
jb
nop
in
jae
dec
int
scas
mov
inc
cli
imul
sbb
lahf
shr
xlat
xor
and
clc
jnp
mov
cmp
mov
sub
dec
dec
mov
cmc
jge
inc
xor
call
sub
adc
mov
fmull
push
ret
stos
popa
inc
sub
jb
mov
pop
divb
push
inc
dec
xor
outsb
stc
jae
xchg
jb
dec
ror
sbb
dec
scas
adc
imul
sub
pop
popa
shll
dec
test
filds
dec
cmp
adc
mov
xchg
cmpsb
stos
add
mov
dec
lahf
test
arpl
inc
fsubl
xlat
jp
xchg
je
sub
adc
outsb
shlb
push
loopne
fs
pushf
ficomps
jae
ljmp
fiadds
mov
int
cmp
insb
or
fucom
pop
arpl
call
je
into
leave
mov
mov
icebp
imul
push
mov
addl
fdiv
bound
aad
jmp
mov
rol
pop
cli
or
sub
in
lcall
repnz
aam
sub
test
cmp
add
jne
notb
pop
inc
out
addb
inc
scas
adc
jns
lods
ret
xchg
mov
jl
or
add
xchg
aad
push
mov
ja
add
push
cmp
xchg
pop
cltd
cmc
mov
cmpsb
inc
out
pop
xor
sbb
stc
fs
leave
dec
scas
adc
test
mull
pop
fildll
cmp
push
dec
push
outsb
filds
mov
sbb
and
xchg
outsb
insb
xor
fdivrs
rcrb
scas
mov
mov
push
es
xchg
lods
cmc
push
jge
cmc
insl
icebp
cli
pop
mov
mov
xor
aas
xor
xor
outsl
clc
ret
repnz
push
mov
jbe
fdivrp
push
and
ss
fwait
int
add
jl
lods
sbb
and
test
out
dec
mov
int3
lds
xchg
push
sbb
fisttpl
pushf
cwtl
pop
cltd
inc
loopne
aad
sbb
add
je
add
inc
dec
push
cmp
pop
xchg
sub
test
ret
mov
push
jo
sbb
mov
cmp
int3
xor
or
test
icebp
ds
mov
jno
add
mov
cmpsb
add
xchg
xchg
sbb
psubq
jmp
fnstsw
cs
pop
daa
pop
sub
into
pop
test
mov
stc
dec
jle
clc
jecxz
or
outsb
pop
mov
in
push
ss
dec
fwait
or
ljmp
sahf
pop
andb
dec
lods
inc
ja
aas
xchg
shrb
jecxz
iret
pop
mov
cli
xorl
int
pusha
inc
movsl
jno
ds
adc
into
loop
hlt
popf
cmp
xlat
loop
loopne
dec
xor
sub
popa
add
or
or
mov
inc
je
dec
in
dec
mov
ds
subb
push
pop
push
dec
mov
mov
pop
roll
in
adc
cld
lret
push
movsb
fdivs
xchg
cmpb
cmpsb
adc
dec
aam
mov
shll
mov
aam
f2xm1
fadds
int3
in
mov
mov
test
ljmp
sbb
push
test
xor
mov
xchg
lahf
aad
sbb
mov
adc
daa
mov
out
xor
inc
mov
aad
and
sbb
mov
jae
mov
inc
sbb
mov
repz
sahf
xor
nop
pop
add
fwait
or
dec
pop
sub
in
xchg
rclb
push
mov
sahf
mov
shrb
dec
dec
jg
daa
pop
dec
shlb
mov
insl
call
mov
fnstenv
ljmp
adc
call
cmp
xchg
xchg
jns
xor
in
movsl
jle
mov
mov
imul
cmpsl
add
push
sti
pushf
push
into
pop
subb
cmp
cmp
mov
loopne
sti
nop
and
cmp
fisttpll
mov
sub
sahf
stos
stos
xor
xchg
pop
jp
jnp
and
cmp
testl
cmc
rcrl
out
mov
add
jl
adc
jge
jecxz
adc
fwait
jae
jnp
pop
lock
sti
jo
xor
testb
xchg
and
lea
mov
cwtl
cmp
loop
mov
adc
push
js
adc
out
clc
mov
push
mov
jnp
fildl
insb
sbb
cmp
push
sbb
insb
jge
xchg
lds
mov
lahf
lahf
fimull
cs
jb
and
dec
out
xchg
mov
pop
aad
cmp
jnp
shll
data16
imul
ret
ror
lods
cmp
sub
outsb
add
mov
and
sub
test
sbb
cli
pop
popa
adc
ja
fidivrs
or
addr16
iret
mov
lds
imul
in
dec
jnp
arpl
ret
nop
sbb
pop
sub
cmpb
mov
xchg
inc
jns
cli
cmp
pop
in
or
xchg
insb
loopne
loop
shlb
cli
incl
mov
cmp
into
cmp
jecxz
cld
mov
xlat
and
mov
sub
push
dec
aaa
mov
fidivrl
jge
scas
loop
lret
fs
hlt
cmp
je
je
dec
ret
hlt
sbb
and
jns
adc
stc
mov
je
xlat
and
lods
stos
inc
shl
inc
jl
cmp
rolb
xchg
fsubr
push
mov
lcall
xchg
aaa
push
mov
lods
into
fildl
or
fisubrs
lahf
cmp
pusha
jecxz
std
dec
add
mov
lcall
dec
sub
test
xchg
jae
aaa
rol
inc
lods
xor
push
cwtl
mov
test
sbb
pop
stos
mov
and
sti
stos
xchg
rsm
sub
push
js
mov
xor
shl
sub
lret
cld
test
out
int3
test
dec
jl
jg
xlat
loop
xlat
repnz
ror
or
and
dec
xchg
jae
mov
add
mov
mov
push
and
mov
out
sbb
dec
gs
push
mov
jns
sahf
in
out
and
xor
add
mov
fidivrl
pop
out
out
xlat
cld
adc
inc
adc
shl
xor
xlat
pop
aas
and
pop
xor
and
mov
mov
mov
loop
inc
jbe
int3
notb
adc
sahf
fwait
lods
mov
push
aam
cmp
pop
faddl
aad
iret
imul
or
mov
jb
mov
adc
sub
dec
xor
xchg
jo
or
xor
testl
push
add
dec
dec
rclb
std
fiadds
cwtl
inc
aam
cltd
cmp
sbb
jns
and
test
mov
icebp
mov
mov
dec
mov
jg
jae
shrl
loop
ficoms
add
lcall
test
adc
jo
sub
mov
cmp
mov
imull
test
ds
stos
mov
stc
cmp
add
add
aas
mov
mov
jno
gs
cs
xchg
pop
or
loop
push
add
iret
push
xlat
insl
data16
je
bound
clc
push
cs
and
pop
pop
aaa
lock
cmpsl
lods
push
loope
bound
mov
mov
lods
vcvtps2pd
sti
add
test
fwait
cmp
les
pop
pop
jae
jae
sahf
dec
mov
xor
mov
fildl
movsl
ss
xor
mov
imul
jbe
les
jl
dec
in
fwait
cli
mov
push
es
push
sbb
pop
adc
into
pop
dec
lret
in
hlt
roll
inc
into
inc
out
out
inc
pop
rcrl
add
rolb
scas
nop
xor
ficomps
loope
ja
add
cli
sahf
mov
popf
add
gs
mov
xor
data16
mov
pop
stos
scas
jmp
rol
or
andb
adc
sub
add
adc
testb
pusha
fistps
mov
lods
ds
cltd
inc
jno
xchg
cli
packuswb
clc
xchg
add
imul
adc
jp
ret
out
mov
fwait
sub
fldcw
dec
rorl
push
sub
mov
xchg
test
daa
or
arpl
xchg
lea
push
in
enter
mov
pop
and
mov
jnp
cmp
xor
out
insb
xchg
cmp
les
test
daa
pop
les
push
int3
loope
mov
push
mov
and
gs
imul
push
lret
ds
hlt
sbb
mov
jne
lods
rolb
fs
sbb
test
mov
push
xchg
jle
add
push
insl
stos
dec
shl
mov
or
mov
mov
in
mov
cmc
out
sub
xchg
mov
daa
lods
add
xchg
out
hlt
push
cs
inc
jae
xchg
adc
sbb
mov
xchg
scas
enter
lods
push
inc
cmc
out
test
arpl
pop
cltd
fldt
testb
sub
fs
mov
lea
addl
and
sti
pop
into
mov
cld
push
lret
mov
pushf
inc
cltd
loop
mov
inc
cmp
bound
jnp
push
stos
mov
dec
or
push
pop
dec
test
daa
clc
or
and
ss
cmp
outsl
aam
inc
loope
pop
outsb
cli
pop
inc
loope
dec
add
xchg
or
cmovg
xor
pop
mov
add
repnz
setno
iret
rorb
dec
sbbb
dec
arpl
xor
jnp
negb
sbb
in
fs
aas
add
imul
mov
daa
cmpl
and
pushf
subl
cmc
mov
add
inc
lahf
sbb
pop
and
cld
and
fst
pop
mov
fsub
cwtl
xchg
sub
push
adc
les
jle
sub
incl
hlt
mov
inc
or
sub
scas
xchg
fcoms
or
mov
adc
je
pop
lahf
push
mov
adc
or
jne
jne
pop
fwait
jo
stos
fmul
stc
sbb
xchg
stc
inc
adc
cmp
jmp
in
sbb
cmp
mov
sbb
fwait
add
repz
jae
popa
aam
fdivs
mov
and
jo
aam
sbb
test
mov
push
dec
fwait
jb
cmpsl
testl
push
out
sub
sti
pop
sub
jle
jmp
dec
mov
inc
pusha
adc
fprem
cmp
fcomip
xchg
jp
pop
sbbb
lret
sti
xor
in
fadds
fists
pop
inc
mov
out
xor
xor
rorb
mov
lahf
xchg
sbb
sub
xchg
pop
cli
popf
mov
icebp
fsub
sub
je
mov
int3
dec
loope
divb
mov
call
cmp
popf
dec
into
fwait
daa
gs
std
leave
mov
sub
shrb
arpl
xchg
in
imul
nop
mov
mulb
pop
in
int3
sti
sahf
fldl
loope
inc
adc
inc
orb
out
sbb
push
mov
rdtsc
sti
and
dec
pop
nop
addb
cld
ftst
dec
jno
jnp
dec
sub
int3
adc
push
imul
add
pop
cmpsb
add
sub
inc
test
pop
ljmp
nop
cmp
sub
adc
pop
and
inc
sub
dec
mov
repz
sub
jo
adc
inc
mov
mov
add
mov
mov
outsl
and
sbb
inc
enter
test
sub
dec
les
scas
jg
fstpl
adc
pop
mov
sbb
stos
add
sbbl
sbb
push
dec
mov
int
jecxz
pop
xorb
mov
call
test
in
xchg
or
stos
cmp
mov
push
mov
stos
mov
mov
filds
rcr
dec
add
pop
in
or
jae
add
jle
les
imul
mov
adc
ja
add
mov
sbb
and
cmpl
or
mov
outsb
test
notl
cs
test
bound
aaa
stos
sub
out
sbb
push
ret
pop
push
push
mov
test
je
outsb
fs
xorb
test
into
sub
mov
cwtl
adc
inc
sub
mov
scas
dec
xchg
in
jno
mov
mov
fnstsw
push
pop
popa
fdivs
lret
xchg
or
pusha
lret
lods
sbb
test
cli
clc
pop
test
jns
sti
lods
xlat
insl
or
popl
xchg
into
ljmp
fistpll
bound
ret
add
test
push
lret
cmp
aaa
aas
stos
push
stos
adc
adc
push
inc
add
pop
pusha
inc
icebp
mov
aas
adc
lods
pop
sbb
std
jmp
xchg
lods
leave
or
mov
aad
and
add
mov
jno
xor
sbb
cmp
insb
dec
fistpll
adc
movsl
jo
lock
jp
mov
push
popa
fimuls
xor
mov
loopne
push
andb
dec
and
dec
bound
add
in
test
fdivrl
es
and
test
mov
push
fadd
jae
bnd
pusha
xor
lods
cmp
call
movsb
imul
popf
or
out
inc
in
mov
mov
pop
mov
testb
stos
or
mov
xchg
sub
aaa
jno
mov
push
pop
test
xor
shrl
dec
push
mov
cs
add
push
or
into
or
test
cmpsb
jecxz
push
adc
les
aam
dec
push
pop
lods
jne
movsl
clc
lds
jle
outsb
mov
cmpsb
roll
mov
jg
mov
cld
xchg
pop
dec
stos
inc
dec
xor
cmp
push
inc
mov
xlat
cltd
rol
pop
add
cwtl
push
notl
sub
sbb
scas
int3
aad
aad
and
lods
clc
test
jbe
ret
ss
dec
push
rclb
push
jle
pop
push
cmp
lods
js
scas
cmc
push
inc
scas
mov
outsb
push
jecxz
xor
jg
adc
jge
int
sub
or
sub
dec
push
cmp
gs
xorl
loope
stos
pop
cwtl
fldenv
or
test
sbb
pop
xchg
add
lods
sub
lods
insl
stos
stc
inc
lret
out
mov
loop
jbe
jnp
rcrb
ret
mov
pop
jecxz
dec
data16
jmp
cmpb
sbb
and
rcr
pop
cmp
cmpsb
pop
out
mov
cli
xchg
jno
add
roll
int3
rorb
jmp
inc
sbb
gs
push
pop
push
insl
rsm
inc
push
sub
iret
pusha
mov
cmp
pusha
gs
faddp
cmp
pop
into
shrl
adc
lahf
push
mov
xor
lock
pop
sub
mov
gs
adc
push
imul
adc
shlb
pop
lock
xor
sbb
fwait
dec
clc
pop
adc
ljmp
clc
loope
lret
and
stc
in
imul
nop
mov
fisttpl
repnz
stos
outsl
mov
inc
mov
inc
fldl
rorl
push
ret
sbb
in
mov
cmpsb
cmovs
xchg
xchg
lods
call
mov
dec
cmc
inc
pop
mov
mov
mov
ds
mov
mov
testl
inc
push
push
nop
dec
movsb
sar
xchg
pushf
ds
sub
mov
sbb
fidivs
mov
addl
daa
push
push
and
lock
and
xchg
jge
mov
int
fisubrl
icebp
xchg
lods
push
ds
test
xor
push
arpl
pop
push
hlt
adc
jmp
loop
mov
push
or
push
dec
lds
and
int
ss
inc
cmpsl
dec
pop
test
addr16
mov
shl
vpextrw
sbb
mov
rolb
inc
sarb
xorl
es
xchg
movsb
mov
loopne
mov
jecxz
hlt
jb
xchg
inc
out
outsl
xor
test
pusha
jg
dec
adcb
js
add
jg
cmc
fcmovnu
dec
cmc
pop
fs
imul
movsb
lea
ja
outsl
in
jae
test
dec
sbb
test
xlat
dec
addr16
das
adc
mov
sub
xchg
ss
dec
mov
xchg
mov
and
int3
loope
add
xor
ja
repnz
js
or
sub
ja
hlt
sbb
movsl
dec
push
scas
sub
out
jnp
add
scas
imul
jae
add
ret
hlt
pop
xchg
pop
push
icebp
xchg
add
cmpsb
push
jne
add
push
sub
pop
dec
pop
lock
lahf
adc
jg
mov
notl
in
pop
test
int
mov
in
sbb
cmp
jae
xchg
hlt
cmpsb
or
and
xchg
jnp
movsl
push
test
arpl
stos
sbb
insl
pop
sbb
xchg
cmpsl
es
test
adc
cmp
adc
ret
xchg
jmp
inc
dec
cld
inc
mov
mov
sti
lods
fidivl
xor
dec
fdivrs
adc
les
jae
dec
sbb
cmp
jmp
and
ja
das
push
xchg
xchg
mov
jnp
jae
outsl
arpl
sbb
inc
xchg
das
sub
and
cmc
dec
add
sub
jnp
dec
sub
mov
xchg
ja
cmp
cwtl
cltd
mov
lods
test
jl
inc
arpl
sbb
pusha
jnp
or
stc
add
push
pop
adc
mov
jle
sti
add
adc
test
pop
sub
mov
inc
cli
mov
sbb
loop
in
adc
xor
mov
pop
xchg
and
jmp
jnp
rcrl
push
mov
adc
mov
jbe
ror
mov
xchg
movsb
or
addr16
cmpsl
test
repz
push
inc
sbbb
mov
cmp
je
sbb
insl
and
out
pop
adc
or
and
pop
adc
mov
xor
movsl
enter
lea
sbb
nop
cmp
movsb
loope
mov
jl
mov
push
jo
fisubrl
pop
jg
test
mov
out
das
xchg
cmp
jns
arpl
insl
jp
fstsw
sub
dec
xlat
cld
dec
push
pop
dec
fisttps
bound
adc
hlt
pop
mov
incb
in
enter
movsb
call
mov
rcl
or
je
roll
sbb
subl
ret
jl
mov
int3
add
shrb
inc
xchg
fsubl
movsb
mov
and
stos
push
rol
out
push
fstpt
add
pop
imul
roll
sub
jbe
call
lahf
dec
adc
fnsave
lea
inc
sbbb
adcl
and
in
inc
sub
aas
shrb
jmp
sub
roll
shlb
mov
mov
push
push
sub
dec
in
adc
test
mov
clc
daa
mov
dec
test
mov
dec
addr16
jmp
fwait
or
in
loop
sub
mov
cmp
leave
sbb
sbb
push
scas
pop
mov
xchg
and
icebp
ret
insl
sahf
lods
fimuls
push
adc
mov
int
pop
pop
subl
xchg
fdivrl
fdivrl
scas
and
icebp
cli
xchg
ljmp
or
int3
jp
iret
mov
add
sbb
lock
test
out
mov
xor
pop
jbe
fldt
in
mov
mov
adcl
fisubs
test
sbbb
mov
aaa
and
pop
clc
xor
xchg
lods
es
mov
xor
fnsave
pop
sti
mov
xor
mov
pop
cmp
or
ds
out
mov
mov
dec
jne
jge
jo
sahf
cwtl
or
mov
js
iret
ds
cwtl
cmp
movnti
pop
into
in
imul
test
add
and
pop
inc
push
or
loopne
or
je
mov
sub
xor
in
mov
cmp
fistl
dec
xchg
push
push
cmc
push
in
mov
and
fisubrs
cmp
push
mov
rcrb
pop
mov
mov
in
out
fwait
pop
xor
jge,pn
fcoml
in
mov
les
mov
inc
dec
test
and
mov
ret
nop
sahf
pop
mov
aam
test
or
push
and
xor
lahf
sub
in
movsl
insl
rolb
dec
ss
int3
lret
adc
mov
add
cmp
push
cmp
lcall
or
rol
adc
call
movsl
inc
mov
imul
add
sbb
inc
addr16
lds
lods
cmpsb
fdivl
xchg
inc
cmpsb
and
jo
or
jp
adc
sarl
and
les
loop
ja
cmc
lahf
out
push
jmp
fmuls
and
mov
jp
sub
addr16
push
in
dec
loop
jno
daa
add
rcrl
hlt
push
and
inc
push
jmp
hlt
dec
add
cmp
pop
xorl
inc
pop
js
mov
data16
testb
dec
jl
cltd
sbb
cmp
inc
je
scas
xchg
push
imul
repz
dec
cmp
jns
xchg
and
ljmp
pop
leave
lret
arpl
stc
popa
mov
loop
mov
push
xchg
push
fcoms
mov
jnp
lret
xor
inc
mov
test
xchg
imul
lods
push
xchg
ret
lahf
xchg
lcall
push
dec
pop
ret
mov
in
cmpsb
out
xchg
and
mov
dec
leave
out
lods
fistps
jne
sbb
mov
dec
push
adc
shl
enter
or
out
rcrl
xchg
xchg
pop
pop
idivb
insl
pushl
xor
stos
test
mov
pusha
cmp
push
mov
cld
xlat
les
sbb
adc
lcall
into
ljmp
aas
test
pop
test
stos
add
push
xchg
inc
adc
or
lock
repz
cmc
jb
scas
mov
lret
mov
push
mov
test
mov
lds
je
lods
push
push
jnp
inc
mov
and
sub
aaa
orl
ss
stc
jg
inc
ret
lods
hlt
fmull
push
cmpsb
repz
popa
and
aas
lcall
jne
cmp
fcmovnb
cmp
lods
imul
icebp
push
sbbb
xchg
adc
repz
xlat
pop
iret
paddd
js
lods
mov
lea
jl
jae
sub
mov
fstps
xor
pop
dec
les
test
test
jae
gs
dec
mov
mov
xor
inc
mov
rorb
fs
stc
mov
inc
movups
adc
xor
add
cld
mov
bnd
repnz
pop
jo
fs
jp
mov
and
pusha
fstp
inc
ljmp
data16
lahf
push
or
mov
xchg
push
push
fbstp
cld
lea
scas
dec
cmp
call
push
inc
popa
mov
inc
sbb
test
and
les
inc
mov
inc
les
add
sub
mov
popf
ljmp
xchg
in
out
hlt
lods
loope
push
out
push
cmp
scas
jl
sbb
std
jae
xchg
hlt
sbb
cli
jb
push
add
fidivrs
out
clc
in
sarl
and
xor
loope
subb
pop
popa
popf
jo
in
enter
sub
pop
lods
ret
stc
push
and
adc
int
mov
jmpw
imul
cmpl
loope
sbb
and
dec
push
pop
dec
repz
adc
sahf
icebp
mov
nop
out
sbb
adc
aad
cmp
stc
lahf
das
or
movsl
cld
fnstsw
es
dec
rorb
imul
mov
or
push
push
pop
or
fistps
inc
push
stos
data16
dec
test
int3
imul
out
in
inc
in
bound
push
nopl
push
out
and
popf
or
and
push
inc
sarl
jb
sub
or
push
sbb
push
ret
outsb
inc
data16
pop
sbb
repnz
adc
cmpsb
cmp
cmp
and
in
cmp
mov
mov
in
mov
ja
mov
bound
jne
divl
adc
bound
xor
clc
xor
mov
sbb
add
stc
or
into
outsb
jb
fs
pushf
loope
fxch
mov
or
cmp
xchg
or
pop
movsl
icebp
or
xchg
popf
mov
inc
or
pop
xlat
js
fistl
call
pop
mov
mov
push
xor
out
inc
movb
sbb
cltd
xchg
and
or
xchg
xchg
sub
mov
mov
and
movsl
adc
push
ja
scas
jns
outsl
cwtl
cmp
mov
add
bound
ljmp
adc
xor
rcll
ljmp
ja
rclb
jno
cltd
in
jmp
and
dec
stos
cmp
aam
adc
jle
into
je
cmp
clc
insl
dec
cwtl
data16
inc
xchg
loopne
adc
das
sahf
shr
jmp
jns
das
cltd
or
fnstenv
cmc
push
add
inc
jae,pt
sbb
in
test
hlt
lds
sbb
pop
push
adc
mov
fidivs
pushf
fwait
mov
cmp
xor
xchg
sahf
xchg
and
or
mov
outsb
fsubl
inc
scas
inc
inc
int
inc
enter
out
sbb
xor
fwait
pushf
lods
lret
adc
fdivrl
iret
xor
bound
enter
jecxz
out
ljmp
stos
out
push
xor
ret
pop
push
out
mov
inc
ja
mov
xchg
andl
mov
das
add
push
mov
stc
into
push
ret
mov
mov
in
mov
loopne
inc
dec
mov
icebp
mov
fisubrs
mov
sub
lret
xchg
mov
rorb
test
mov
outsl
leave
dec
adc
or
mov
pop
cld
and
or
mov
mov
jno
shlb
pusha
sub
sbb
xor
mov
pop
inc
pop
sbbb
xchg
xor
fimull
push
rol
imul
out
adc
cmp
mov
cmp
mov
xchg
jae
testl
div
cli
push
mov
insb
and
inc
mov
mov
add
nop
popa
aas
and
inc
ds
dec
adc
movsb
sahf
xchg
insl
movsl
les
iret
xchg
mov
cmc
mov
fwait
add
cmp
leave
xchg
and
cli
ffree
hlt
adcl
into
mov
xchg
pop
sub
sbb
ss
mov
pop
mov
aas
mov
insl
ficompl
pop
cwtl
and
sub
push
cltd
pop
jne
loop
pop
ja
or
cmp
in
jo
add
pop
mov
lock
sbb
jae
stc
lods
imul
jne
push
push
mov
stc
mov
cmpsl
lret
cmp
mov
test
dec
clc
fcompl
mov
push
fisubs
inc
cmp
sbb
imul
ret
lods
xlat
shll
mov
into
pop
test
inc
les
jno
push
push
sub
imul
nop
orb
jecxz
enter
mov
jge
fadd
push
pop
mov
jb
adc
jge
push
popw
loope
pushf
pop
sbb
pop
add
clc
sbb
pop
shlb
or
cmpsl
and
pusha
cmpl
and
adc
push
test
mov
adc
fldcw
stc
pushf
sub
push
xor
enter
inc
sub
cmpsb
loopne
push
sahf
mov
addr16
dec
xchg
cmc
mov
xchg
dec
push
jne
js
and
daa
xor
arpl
cltd
lea
and
cmp
aad
in
and
lcall
sbb
jae
addb
cmp
dec
lods
subl
gs
xchg
dec
lods
pavgb
xchg
xchg
cltd
cmp
xor
jo
xorl
mov
adc
push
aas
rclb
call
jne
ficoms
cmp
dec
lods
es
push
aam
add
mov
test
pushf
and
enter
fists
dec
sub
out
daa
sar
mov
pusha
xchg
lcall
pushf
inc
mov
cmpsl
arpl
aaa
jnp
lods
adc
push
ffreep
adc
sbb
or
nop
sub
sahf
cmp
lcall
test
jae
test
xchg
dec
or
hlt
ja
stc
xor
fs
inc
int
pop
cmp
outsl
leave
lret
movsl
mov
into
sub
pop
test
mov
inc
push
sub
inc
call
xchg
js
and
test
cld
stos
arpl
ds
jae
outsb
dec
xchg
std
shlb
fimull
test
xor
pushf
cltd
ljmp
aaa
movsb
xor
mov
push
sti
imul
jns
in
push
in
mov
fs
mov
jno
dec
xchg
stc
pop
stos
daa
jl
add
mov
aad
clc
sub
fwait
orb
test
aad
or
add
loopne
out
xchg
ret
icebp
das
lret
jne
xchg
pop
inc
shlb
ss
in
es
push
out
sbb
movq
push
xchg
punpcklbw
xchg
into
repz
add
push
movb
adc
pop
std
enter
xlat
xor
push
rorb
adc
jae
popa
test
mov
pop
ss
cmpsl
int
pop
movsl
mov
sub
mov
cmp
add
or
push
xlat
roll
mov
inc
pop
js
pop
xor
jae
mov
push
aas
xorb
inc
repz
xor
and
movsb
xchg
sbb
aad
adc
mulb
sub
stos
and
cmp
test
imul
push
mov
std
add
cmp
insb
jnp
cmp
shl
push
mov
add
push
cmpl
aam
ss
shll
adc
mov
xor
ja
xor
repz
lods
inc
icebp
scas
cmp
mov
loope
gs
inc
and
fildll
and
lds
out
cmp
iret
out
gs
aaa
adc
fsub
mov
repz
cmp
and
loopne
lock
xor
or
mov
pop
sbbb
mov
xor
mov
and
cld
add
or
popa
xchg
jmp
xchg
mov
outsl
inc
into
cmpsl
es
pop
imul
or
fs
adc
out
nop
mov
js
mov
outsl
out
dec
cmp
jo
jl
jmp
push
imul
sub
mov
shr
mov
adc
cmc
insb
dec
push
loop
popa
inc
int3
pushf
cmp
sbb
mov
xor
das
pusha
dec
outsb
jb
and
mov
dec
sub
dec
mov
inc
ret
jbe
pop
push
lret
sub
andl
dec
xchg
movsb
xchg
cmp
mov
out
gs
test
notl
cmp
push
mov
xchg
jmp
out
lahf
inc
jge
sbb
fstpt
iret
out
loopne
fsub
mov
fsubs
pusha
ja
sbb
xchg
push
mov
or
pop
pop
out
add
cmp
mov
mov
cmp
lahf
sub
pop
adcl
fnsave
pop
jg
jmp
mov
add
add
out
mov
jno
cwtl
div
sbb
xchg
insl
add
js
xor
or
inc
and
cmc
dec
sbb
mov
lahf
adc
pusha
stos
test
dec
out
push
jo
in
ficoms
push
pop
mov
aaa
lcall
test
negb
sbb
mov
xor
pop
mov
mov
ss
movsl
push
push
mov
fwait
adc
xchg
pop
popa
push
push
out
dec
cmp
enter
cmp
stos
clc
out
xor
xchg
xor
and
divl
lret
xchg
adc
mov
out
loope,pn
adc
shrb
test
test
mov
push
jb
repnz
data16
stc
insb
call
inc
or
add
lea
imul
out
mov
lret
push
or
xor
cmp
and
test
push
stos
and
repz
xor
out
jno
dec
aas
and
or
push
inc
jbe
and
mov
mov
xchg
jo
dec
mov
lock
jl
shlb
jecxz
xor
xlat
cltd
repnz
lahf
jecxz
jne
sbb
data16
and
jl
out
and
fdivrl
pop
jmp
mov
push
jbe
addr16
lea
xchg
push
add
sbb
outsl
dec
std
jl
xchg
dec
daa
push
stc
xor
divb
add
scas
push
adc
add
sbb
ja
icebp
mov
push
add
mov
cmc
leave
fwait
das
push
fldenv
scas
sbb
push
adc
outsl
or
es
paddq
fmuls
xor
loopne
test
jo
and
mov
rorb
cmp
mov
test
mov
lret
cmp
lods
add
out
rorl
repz
sbb
into
mov
call
cmpsb
pop
sbb
fsubrs
mov
jle
jmp
mov
mov
fisttpll
jb
pop
jmp
pop
xlat
pop
mov
xchg
std
cmpsb
push
inc
repz
push
cmpsb
mov
aas
fidivrl
sbbl
into
sbb
sbb
cld
dec
or
arpl
mov
inc
arpl
push
repz
addr16
int3
push
push
mov
ja
ljmp
cmp
pushf
cmp
imulb
xor
sbb
mov
xor
ja
rcrl
cmc
adc
push
sub
push
mov
popf
loop
jno
sahf
mov
mov
in
loopne
or
sub
and
loop
loope
pushf
les
push
fstpt
int3
add
add
or
mov
ret
test
imul
dec
addr16
cmpsb
js
fidivs
into
dec
mov
out
ljmp
push
jge
lea
push
or
cmc
jl
fmulp
lahf
sub
clc
jns
lea
jne
addr16
mov
aad
adc
xchg
in
add
fmuls
mov
jo
mov
incl
add
push
push
push
cmp
mov
and
adc
inc
and
insl
mov
fcoml
popa
pusha
dec
or
lods
xchg
test
sarb
dec
mov
lds
stos
mov
xchg
and
cmpsl
fildll
movsb
int3
sub
loopne
flds
fidivrs
pop
pop
sbb
sub
sbb
nop
pop
insb
jno
andb
arpl
fprem
js
ficoml
push
sub
loopne
adc
xchg
incl
std
pop
stos
push
cmp
or
ss
cmp
sbb
aam
inc
inc
insb
cmp
adc
push
lret
and
add
mov
jae
sbb
inc
popf
add
push
jbe
dec
pushf
dec
dec
fnstenv
sar
push
out
and
popa
mov
mov
inc
inc
fldt
pop
popf
pop
push
push
repnz
or
and
popa
cmp
jmp
push
loop
push
lock
push
lods
push
or
sbb
dec
cmp
push
stos
inc
jecxz
cmc
nop
pop
xchg
jmp
mov
pop
dec
sub
in
push
das
mov
movsb
dec
lcall
sub
push
sahf
sub
std
mov
jns
sub
fisubl
or
out
roll
ja
cmp
loopne
fisubrs
push
divb
xchg
lcall
fdiv
mov
sahf
sub
mov
jno
inc
dec
mov
rorb
imul
sub
ja
lock
sbb
daa
and
pop
divb
movsl
popa
test
xor
mov
fsubr
or
sar
xchg
mov
inc
cmpsl
orl
mov
fildl
mov
je
fwait
pop
rorb
or
mov
push
xor
inc
fwait
rcl
fldcw
or
out
push
fcoms
cltd
dec
adc
cmp
add
inc
addr16
inc
mov
idivb
jbe
adc
mov
loope
lcall
popf
loopne
push
sub
add
mov
or
in
cs
popa
add
adc
add
mov
mov
push
add
movsl
cmpsb
out
jbe
mov
ret
adc
xor
jl
sbb
or
gs
mov
jmp
sar
jmp
mov
test
add
sahf
jne
ds
das
insl
xor
pusha
push
fs
movups
aaa
lods
push
add
xchg
addl
add
fadds
adc
sub
mov
das
add
push
out
shr
in
in
cmp
call
add
mov
fsubrl
aad
jmp
into
leave
jne
in
sub
fldenv
ljmp
movsb
add
cmp
mov
mov
push
lods
rolb
sbb
xchg
dec
push
int
setne
jge
leave
push
fs
sub
es
push
push
dec
sub
imul
imul
imul
mov
xchg
jecxz
popa
mov
nop
jl
mov
adc
cmp
call
mov
dec
and
imull
inc
xor
inc
xor
fwait
or
and
adc
xlat
fistl
mov
push
xchg
add
sub
sahf
out
pop
pop
lcall
lods
pop
sub
sarb
imul
lock
aad
rorb
sbbl
test
xor
add
push
sbb
fdivp
mov
repnz
call
cmpl
add
and
jns
fs
je
push
lock
notb
push
inc
dec
js
aad
inc
std
inc
or
jl
jnp
cmp
dec
lods
sbb
push
sti
jmp
jno
jge
jmp
mov
adc
ret
cmp
test
mov
push
sub
sbb
testl
hlt
xchg
pop
ficompl
adcb
sti
lcall
mov
or
jne
and
sti
arpl
push
add
popf
mov
pushl
mov
mov
mov
push
hlt
shl
xchg
cs
insb
fisttps
addr16
gs
rorl
pop
and
leave
push
and
rcl
lds
push
sbb
inc
pop
mov
movsl
sbb
jne
mov
pop
nop
mov
outsl
jl
adc
test
cmc
dec
jae
xor
addl
in
ret
ja
sub
daa
sbb
sbb
mov
sbb
outsl
and
mov
dec
xlat
lock
pop
test
data16
nop
lods
adc
test
insb
mov
dec
aad
mov
add
movsb
pop
imul
lahf
adc
mov
adc
out
imul
cmc
sbb
mov
mov
repnz
mov
shrb
sbb
leave
pop
push
jbe
dec
test
inc
sub
xor
icebp
fisttpll
add
in
shlb
xchg
mov
jl
movsb
push
and
adc
xcrypt-ofb
cmpsl
in
xchg
xor
xchg
mov
or
ja
rcll
out
arpl
cltd
pop
out
shrb
jns
or
stos
push
es
lret
inc
je
out
cmp
xor
dec
and
ficoms
pushf
scas
mov
fcoms
fwait
ljmp
mov
add
in
jmp
xchg
xchg
mov
xor
mov
jbe
push
pop
pop
jo
and
sbb
in
push
xlat
dec
jne
jb
xchg
mull
inc
add
cmp
rcrl
dec
sbb
sub
out
test
or
adc
mov
xchg
test
mov
sub
sbb
stc
cmp
mov
enter
lods
sbb
fisttps
jo
lcall
ror
flds
pusha
jp
outsl
cld
pop
push
jno
push
imul
xchg
rolb
lea
xchg
xchg
lock
mov
mov
sub
mov
mov
xchg
cli
pop
jecxz
add
xor
aas
call
fs
in
mov
add
fisttps
sub
stos
mov
mov
vsqrtpd
pop
and
int3
out
adc
pop
orl
push
repnz
not
xor
aas
push
pop
repz
jl
mov
xchg
lret
test
lret
mov
mov
mov
repz
pop
sbb
lcall
mov
xchg
push
cli
repz
mov
cmp
pop
leave
lds
fidivrl
inc
test
cld
in
xor
movl
cmp
cmp
sarb
cmp
cmp
sbb
aad
and
adc
arpl
mov
mov
push
je
mov
pushf
pop
ret
pop
out
cmp
sbb
xchg
push
scas
xor
jge
rcrl
xor
sti
sahf
dec
mov
sti
push
mov
inc
sti
popf
or
scas
jne
cwtl
popa
dec
imulb
inc
int
mov
popf
cltd
lods
ss
or
es
and
inc
aad
push
fcmovnbe
fildl
pusha
jecxz
xchg
test
in
adc
test
fs
sub
into
cmpsl
cmp
sub
inc
push
outsl
cli
shll
rorl
rcll
fbld
rorb
pushf
cltd
stos
hlt
and
jg
add
push
std
pop
fimuls
jle
dec
test
fldcw
adc
fwait
pop
lock
aas
inc
and
inc
xchg
adc
loopne
and
pop
movsl
sub
push
fdivs
mov
adc
dec
and
sub
pop
mov
pop
and
cltd
int3
cmp
jmp
or
stc
jae
dec
mov
xchg
aad
adc
cmp
out
ja
repz
cmp
into
out
fldcw
imul
scas
mov
pop
pcmpgtb
push
mov
rol
xchg
jo
ret
cmp
out
inc
xchg
iret
push
arpl
aaa
dec
xchg
aaa
or
sbbl
mov
sbbl
inc
sbb
scas
fisubl
pop
and
js
inc
xchg
mov
adc
adc
cwtl
jnp
leave
push
rol
lea
or
call
jae
sub
orl
addr16
daa
inc
repnz
ret
and
sti
and
stos
shrl
test
push
dec
notl
mov
inc
imul
xchg
sub
fwait
mov
xchg
push
adc
xor
adc
fwait
mov
inc
popf
and
dec
stos
es
mov
mov
roll
pop
aaa
lret
lock
mov
cli
notb
inc
mov
add
push
ljmp
sub
mov
pusha
mov
mov
mov
outsb
jo
pusha
out
cmc
and
popf
incl
test
mov
rcrl
pop
rorb
pop
xor
or
jl
out
ljmp
dec
add
push
pop
cld
add
aad
call
dec
xlat
cmp
dec
insb
jb
dec
stos
jb
out
mov
mov
pminsw
and
lock
aas
add
sbb
xchg
js
xchg
mov
xchg
cmp
shl
mov
in
inc
inc
addr16
pop
ja
jne
add
inc
test
pop
adc
cmp
mov
aam
xchg
xchg
jbe
xchg
jge
xor
dec
mov
push
xchg
and
ficomps
mov
push
imul
sub
add
in
push
or
pop
sbb
in
ja
adc
jae
hlt
imul
xchg
imul
movl
outsl
lods
fdivrs
jae
mov
xchg
mov
add
arpl
iret
stos
repnz
rcr
popa
pop
mov
adc
outsb
lahf
jmp
fnstcw
aam
inc
push
cmp
pop
call
in
lret
loop
out
cs
shll
loopne
inc
mov
out
inc
packssdw
lods
gs
push
repnz
pop
stc
and
lret
jge
dec
dec
xor
mov
dec
cmpsb
add
loope
push
jl
sbb
xchg
xchg
cmc
in
das
add
std
cmpsl
pop
lods
push
jmp
leave
push
mov
dec
movsb
js
cmc
push
jnp
mov
cmp
xor
pop
popa
add
fsubrp
xor
mov
out
and
repnz
shl
in
mov
in
sbb
pop
in
or
out
pop
in
sbb
lret
dec
sbb
push
jno
jmp
mov
push
or
adc
xchg
sbb
addl
outsl
daa
ds
jmp
bound
cmpsb
fwait
stc
outsb
cmc
xor
je
push
int3
pop
fmuls
xchg
mov
add
or
stc
out
xchg
push
push
xor
adc
scas
adc
xchg
es
in
lods
inc
sbb
or
cmp
sub
add
outsl
imul
outsb
pop
inc
dec
jle
dec
cmp
insb
scas
mov
subb
and
dec
cmpsb
mov
pop
sbb
fldt
and
mov
sub
inc
arpl
sbb
sub
mov
loop
shrb
sarb
push
pop
lcall
sti
adc
in
adcb
fbstp
out
jecxz
xchg
dec
and
inc
adc
mov
or
and
outsl
into
push
in
out
pusha
movsl
mov
nop
dec
cmpsb
xchg
decb
cmpsb
cwtl
aad
testl
cmp
insb
test
ret
cmp
inc
rcrb
cld
cmp
sahf
stc
decl
mov
inc
rcrb
dec
push
mov
ret
lea
iret
sub
jmp
lahf
movsb
std
xlat
stos
and
in
lret
ss
mov
lahf
pop
movsb
and
bnd
pusha
xor
popf
mov
add
mov
xchg
icebp
xchg
pop
sbb
bound
add
jne
dec
iret
fcompl
mov
mov
inc
stc
push
leave
dec
sarb
pop
xchg
imul
mov
fld
jecxz
test
dec
jge
xchg
aaa
pop
add
pop
arpl
sbb
add
push
pusha
jle
sbb
xchg
addr16
or
shr
add
movsb
flds
ja
loopne
in
pop
rorl
mov
popf
sub
test
int3
push
mov
ficomps
cmp
push
xchg
push
cmp
in
lcall
cwtl
mov
jns
mov
xchg
in
xchg
push
cld
popa
pop
stos
cmp
js
in
inc
mov
jmp
adcl
push
mov
mov
jae
insb
push
fisubl
call
push
xchg
mov
cmp
jno,pn
subb
ljmp
pop
popa
test
into
push
jae
movl
mov
push
pop
jbe
scas
pop
cmpsb
hlt
data16
push
add
jbe
aas
and
popw
push
out
jno
pop
mov
xchg
aaa
dec
lds
rorl
xor
repz
lret
and
add
test
sub
aas
fidivs
out
push
mov
add
insb
daa
lea
loope
mov
sbb
gs
dec
aad
out
sub
inc
mov
mov
cmp
sub
xchg
lods
nop
roll
shll
ror
popf
fwait
addl
inc
dec
jns
movsb
int3
das
xor
add
jo
ret
push
pop
push
test
stos
jb
mov
mov
mov
sub
xchg
jne
push
loopne
pop
pop
push
xor
jecxz
int
mov
dec
mov
js
sub
loop
inc
add
push
cs
add
lds
lods
scas
add
movsb
mov
fs
xchg
in
xlat
mov
mov
sbb
out
je
xor
call
movl
lcall
lret
mov
mov
jecxz
std
or
and
cltd
outsl
int
push
mov
mov
add
outsb
xor
mov
sar
clc
mov
xor
xchg
in
fists
fcomps
xchg
mov
mov
addr16
and
sbb
xchg
jns
shrb
test
adc
es
add
dec
xchg
push
mov
cli
dec
in
scas
movsb
cmpsb
mov
sbb
addr16
mov
into
xchg
mov
pop
pop
lahf
cld
pop
in
rorb
enter
inc
and
pop
push
in
push
lods
jecxz
int3
xchg
xchg
das
add
jns
fldt
mov
dec
je
or
fsubrp
adc
jae
xchg
test
adc
and
xor
lret
jmp
lods
ja
add
mov
inc
imul
push
xchg
jns
mov
push
add
outsl
jmp
xchg
adc
cmp
mov
add
mov
push
cmp
mov
ret
add
sbb
cli
jg
pop
sub
and
insb
dec
fisttpl
addr16
mov
mov
into
mov
insl
ret
into
scas
fxtract
adc
cmp
mov
xor
pop
js
imul
mov
inc
xlat
xchg
popl
lds
jae
cmp
fwait
mov
and
pop
dec
jb
push
enter
ja
in
inc
push
ja
cmp
pop
mov
cmc
aaa
enter
pop
out
pop
pushf
mov
dec
cld
xor
and
ret
jo
orl
cmp
push
xorl
cltd
cld
cltd
adc
adc
dec
sub
gs
bound
aaa
daa
pop
sahf
das
ljmp
int3
jp
movsl
jbe
ret
mov
fldcw
cld
jmp
stos
pop
leave
in
insb
ret
jmp
aad
ror
cmp
mov
in
cmc
mov
call
in
sbb
js
mov
inc
movsl
stos
test
or
outsl
sahf
dec
add
data16
cld
xchg
add
sbb
xchg
jle
pcmpeqd
xor
mov
int
cmp
inc
fsubl
xor
dec
repz
sbb
push
movsl
inc
dec
adc
repnz
pop
xchg
xchg
xor
movsb
xor
loopne
mov
insl
lcall
mov
jle
cmpsl
inc
add
jp
inc
jno
iret
mov
push
es
cwtl
and
into
inc
mov
cwtl
or
xchg
and
or
or
aas
loopne
sbb
cs
movsb
inc
sti
xor
cltd
in
xchg
pop
and
cmp
xchg
sub
mov
scas
jno
mov
mov
jle
popl
push
adc
scas
nop
mov
inc
pop
loop
jnp
cmp
testb
push
pop
or
mov
int
lea
leave
sbb
stos
pop
mov
xchg
dec
dec
adc
out
jae
flds
jb
mov
push
push
jge
and
and
and
dec
sti
mov
inc
xchg
jl
mov
testl
clc
xchg
sarb
push
cmp
cmpsb
jb
leave
lcall
dec
test
fdivrl
dec
sub
cmp
xchg
mov
push
stos
ds
mov
testb
pop
cmpsb
pop
and
cmp
inc
jnp
mov
je
pop
int3
icebp
out
add
inc
mov
jg
dec
data16
jb
data16
dec
adcb
push
pusha
rcpps
mov
push
fbstp
out
fwait
mov
js
in
fdivrl
push
movsl
mov
pushf
mov
ljmp
dec
fadds
fstpt
mov
jne
imul
inc
in
push
mov
or
add
stc
stos
push
lock
cmpsl
les
xlat
cmp
lea
je
sarl
cmp
test
lahf
shl
adc
sbb
lret
adc
leave
ret
mov
andb
sub
fnsave
push
mov
cltd
scas
outsb
imull
enter
in
xchg
dec
xor
aad
cmp
fcmove
bswap
out
ficoml
hlt
je
lea
out
neg
test
aaa
xchg
outsl
or
mov
xorl
mov
arpl
loopne
pop
inc
mov
mov
mov
cmc
mov
mov
ljmp
mov
mov
dec
inc
jl
sbb
mov
insl
jb
add
je
xlat
clc
xchg
dec
sbb
mov
jl
negb
pop
sahf
movsl
push
sbb
xchg
in
fimull
fnsave
cmp
xchg
fstl
cs
test
ljmp
cli
dec
or
fisubrs
dec
out
rcrb
lods
add
sbb
sub
test
popa
pop
mov
adc
pop
push
leave
jno
out
es
fistps
add
mov
testb
aaa
mov
lock
inc
mov
add
xchg
xor
mov
add
sti
sub
out
sub
push
in
and
cmp
cwtl
pop
xchg
mov
or
jmp
dec
fwait
push
dec
arpl
int3
jg
mov
mov
push
cmp
fadds
dec
in
xor
ficoml
mov
jb
dec
mov
imul
mov
and
fs
fnstcw
mov
cld
pushf
stc
ret
iret
scas
cwtl
push
aam
xchg
adc
int
insl
nop
mov
or
inc
daa
lret
repz
arpl
mov
sub
xchg
add
xor
fcompl
lock
aam
sbb
and
pusha
mov
sahf
adc
insb
xor
jge
adc
sub
dec
cwtl
xchg
or
inc
sbb
or
jno
mov
xchg
mov
fimuls
sub
jb
xchg
scas
push
and
loop
inc
repnz
mov
mov
out
jecxz
lret
jecxz
push
adc
mov
repnz
clc
in
mov
out
bound
lret
jp
lock
int
call
clc
xchg
das
push
testl
mov
hlt
push
fcomi
std
jns
push
push
add
or
mov
lret
pop
cltd
dec
push
fcmovu
shrl
repz
cmpl
aad
add
sbb
arpl
mov
mov
push
pop
push
sbb
aad
sbb
ss
cmp
bound
xchg
jne
mov
out
ret
divl
adc
push
jecxz
add
or
test
push
lods
inc
mov
ljmp
dec
insb
xor
enter
xlat
outsl
mulb
pushf
add
inc
test
repz
aam
adc
mov
bound
test
sbbl
loop
lret
pop
stos
loope
cmpsl
js
adc
arpl
into
xor
dec
ret
stc
adc
pop
inc
and
mov
mov
add
sub
pop
mov
push
push
fwait
jge
movsb
fsubrs
mov
rorl
mov
es
jp
dec
das
cmpsl
testl
dec
cmpsl
adc
or
cld
aam
lret
xchg
loop
xchg
fsts
sti
mov
sbb
pop
rol
or
pop
cltd
icebp
cltd
stc
lret
or
enter
shl
push
data16
lods
clc
sub
ficoms
mov
mov
jne
xorb
push
insb
adc
cmpsb
bound
dec
xchg
pop
cmp
lahf
add
in
add
fs
xor
jl
sbb
test
and
test
pop
dec
jmp
lcall
notl
xchg
movsl
fldenv
or
mov
das
push
pushf
pop
and
out
pop
test
jae
shlb
in
xchg
and
jp
sbbl
and
aam
and
pop
mov
pop
pop
dec
rcr
jl
cmp
adc
xchg
ffree
xorl
pop
mov
rcll
lock
jb
repnz
xchg
cwtl
jno
shrd
rclb
push
mov
xchg
pop
add
cwtl
xlat
out
or
movsl
inc
inc
mov
sub
mov
nop
sbb
xchg
sarb
ret
addr16
inc
dec
test
roll
dec
inc
sbb
jb
sti
sbb
sub
or
out
orl
jmp
dec
jne
xchg
mov
inc
mov
scas
int
loopne
cltd
test
out
adcl
mov
subb
fs
cld
jg
lock
int3
pop
stos
jmp
rorb
out
push
push
inc
sbb
mov
out
push
inc
or
cwtl
aam
sbb
fstpl
pop
cmpsb
add
mov
cmp
sub
inc
and
call
out
mov
cs
add
inc
sub
jbe
mov
push
jp
sub
enter
mov
mov
mov
lea
cld
pop
sbb
xor
test
mov
inc
push
sub
dec
sbb
jmp
xorl
iret
idiv
push
fimull
xchg
add
mov
sbb
stos
in
pop
push
or
loope
mov
add
mov
jle
or
icebp
add
sub
xchg
add
jno
inc
push
mov
push
pushf
push
sbbl
dec
add
popa
fildl
lret
gs
dec
repz
xor
arpl
jno
in
sub
push
mov
in
sbb
and
ret
inc
data16
push
ljmp
je
in
and
mov
fmuls
jnp
mov
and
shrl
cmp
dec
push
jb
xor
int
decl
ss
mov
cmovge
movzwl
push
out
mov
fmull
cmp
pop
dec
test
mov
sbb
bound
in
shrb
rcrb
jecxz
rcrb
push
loopne
sbb
bnd
xchg
or
xor
dec
lret
adc
adc
inc
test
lret
mov
jnp
xchg
wrmsr
mov
gs
pop
es
or
mov
shl
ss
sti
movb
xor
pop
hlt
or
in
icebp
dec
cmc
orl
xchg
cmp
sbb
es
pop
and
xor
sbb
jecxz
jo
in
fldl
mov
sbb
xor
fwait
lret
add
dec
rcll
xchg
push
xchg
popf
jo
int
adc
int3
adc
sbb
mov
cmp
aas
cmc
loope
subl
or
bound
popa
inc
mov
lret
cmpsl
jle
cld
ljmp
imul
push
inc
popa
push
mov
push
gs
sti
fsubrl
or
xchg
mov
dec
mov
lret
mov
fidivl
and
lds
dec
stos
pusha
bound
jnp
int
xchg
mov
in
mov
outsl
das
mov
or
bnd
mov
mov
lret
out
xchg
mov
xlat
js
icebp
add
dec
push
cwtl
push
in
scas
les
ljmp
mov
mov
xchg
or
cmpsb
cli
lahf
inc
pop
fsubrs
in
clc
dec
and
mov
push
cltd
rep
xchg
mov
iret
nop
or
test
push
and
jmp
sub
inc
cmp
jae
sub
stc
or
mov
ljmp
aas
dec
adc
or
dec
mov
sub
loope
inc
stc
mov
xlat
out
or
outsl
mov
leave
aaa
or
stc
xchg
lock
mov
mov
rcl
repz
or
dec
inc
insl
jb
push
jae
out
sbb
sub
movsb
outsb
stc
lcall
mov
add
fidivrs
nop
mov
insl
push
cmp
sbb
ret
adc
sub
nop
fisttpll
sti
loop
clc
sub
std
jbe
cwtl
arpl
inc
movsl
sbb
xlat
movsb
jo
cmpsb
insb
mov
inc
push
cli
mov
fwait
sahf
lahf
lahf
add
lret
cmpsb
jb
in
push
add
jb
stos
and
xorl
ret
loopne
mov
jle
out
rcll
jnp
sub
adc
inc
orl
add
sbb
lahf
push
xor
shlb
repnz
add
gs
xor
xchg
xchg
or
cld
jp
xchg
inc
test
icebp
push
insl
xorl
dec
mov
fiadds
in
aam
ficoms
xor
and
inc
mov
dec
outsl
inc
pop
into
push
aaa
sahf
and
bound
scas
push
jmp
repz
sbb
test
or
in
cmc
pop
xchg
jp
dec
adcb
push
sbb
fildl
push
aam
int3
or
pop
xlat
jnp
call
ficompl
jo
lahf
inc
enter
icebp
sbb
insb
arpl
mov
add
add
xchg
test
inc
pop
pop
xchg
xorb
loop
add
inc
sar
fsubs
pop
dec
or
fiaddl
rorb
ret
fcomps
sarl
add
cmp
jnp
sbb
pop
jns
repnz
push
add
in
js
sbb
movsl
dec
mov
sbb
roll
xor
mov
shll
xor
xor
mov
shlb
fildll
xor
mov
in
rorb
lret
mov
inc
adc
mov
and
lcall
fs
lea
addr16
mov
pop
cs
pop
fwait
jne,pt
iret
imul
daa
pop
push
hlt
test
shlb
inc
fwait
ret
outsb
xchg
jno
mov
push
xchg
loop
shlb
push
inc
xor
or
push
adc
cmp
insl
fistpl
push
jl
gs
sub
ret
mov
sbb
push
fcmovnbe
pop
sub
xor
call
jmp
fisubs
cmp
sub
push
in
addr16
subb
add
dec
mov
data16
test
mov
fldcw
or
in
sub
mov
fcmove
fst
and
ljmp
push
adc
inc
mov
call
pop
and
lds
or
sub
lds
add
es
outsb
mov
adc
pop
js
lret
jbe
xchg
push
xor
mov
orl
mov
test
pushf
loope
out
jecxz
das
push
repz
xchg
loop
jge
je
push
js
pusha
fisubrl
mov
mov
and
out
push
xor
lcall
jg
and
stos
pop
jb
cmp
mov
mov
iret
add
inc
cmp
test
cli
js
pushw
mov
xchg
cmp
aam
push
outsl
pop
blsic
imul
je
and
subl
scas
in
push
xchg
leave
fisttpl
sahf
scas
cmpb
sub
mov
repz
es
sbb
or
adc
int3
lods
fisubrl
roll
dec
xchg
jae
and
and
es
imul
loop
adc
fidivs
pop
loopne
push
stos
cltd
fcom
fcmovne
lcall
insl
enter
inc
pop
pushf
daa
push
jo
push
sub
sbb
pop
mov
jae
jmp
cmpsl
lods
inc
mov
mov
ret
fldcw
movsl
jle
mov
sub
inc
in
cmp
mov
xor
daa
rep
and
mov
cli
add
in
cli
fstps
clc
xor
cmp
and
dec
adc
xor
jmp
pop
adc
xor
loopne
mov
jmp
das
out
mov
xchg
dec
sbb
mov
pop
imul
xchg
or
mov
xor
pushf
mov
or
mov
in
bound
inc
je
movsb
rclb
stc
ja
push
or
pop
cmp
dec
notb
push
test
sbb
ljmp
inc
mov
insb
test
ret
gs
ljmp
inc
sub
lods
lret
mov
dec
xchg
clc
cmp
push
and
leave
movsl
pusha
sbb
test
jp
push
fstpl
xchg
out
in
or
iret
push
xor
mov
xor
sbb
jnp
fs
sub
out
xchg
add
jno
inc
pop
dec
or
mov
out
or
add
jnp
lods
dec
mov
stos
push
cmpsb
nop
inc
lock
rcll
inc
mov
jo
sbb
std
push
popl
mov
or
ret
jp
int
leave
pop
sub
dec
lock
lret
into
lcall
scas
cli
sbb
add
stos
and
icebp
and
in
stc
lret
testl
loope
push
dec
in
adc
add
mov
or
cwtl
popa
aad
inc
sarl
gs
test
push
in
pop
movd
push
or
pop
es
sbb
outsb
test
xor
pop
sbb
aad
cltd
sub
ja
push
pop
and
je
jg
jp
pop
orb
sub
popl
popa
imul
mov
push
mov
mov
fisubl
iret
cld
jbe
mull
push
in
insb
mov
mov
adc
fisubrl
subb
int
mov
xor
leave
mov
repnz
sbb
mov
call
fldenv
or
repz
ja
cs
mov
rcrl
aaa
mov
subl
mov
loopne
mov
test
fmull
in
inc
mov
pop
clc
loope
inc
shrb
imul
lods
xor
ss
sub
daa
mov
outsl
add
pushf
lds
aas
ds
mov
xchg
cmp
sbb
iret
ret
xor
icebp
lds
adc
mov
adc
stc
fwait
cwtl
inc
lea
xchg
in
xchg
dec
movsb
mov
nop
lahf
mov
jecxz
adc
pop
mov
or
leave
sub
mov
ljmp
mov
cmc
cmp
je
insl
push
xor
stc
adc
mov
jns
ds
fnsave
mov
ss
cmc
pop
jge
lock
gs
cmpsb
adc
or
aad
lods
mov
rcrl
adc
dec
jbe
cld
pop
imul
pusha
pop
sub
loopne
mov
bound
or
and
lods
adc
and
lret
lods
jle
dec
jb
adc
dec
jge
into
scas
pop
push
fldl
ds
cmp
lcall
inc
nop
lcall
leave
call
sbb
cmp
xchg
adc
xchg
pop
cwtl
pop
mov
add
popf
les
or
cmp
inc
mov
pop
cmp
pop
cmp
jns
cmp
push
sub
pop
ret
in
xor
aad
mov
mov
call
mov
jge
inc
cltd
pop
add
push
or
xor
dec
les
xchg
push
addl
scas
int
movsb
inc
shll
push
into
je
scas
cmp
push
cmpsb
fsts
out
dec
mov
cltd
dec
mov
push
sub
aaa
lcall
cmp
jb
andb
xchg
frstor
sbb
fadd
sub
fadds
pop
xor
dec
testb
and
and
into
test
xchg
jno
inc
jl
inc
loopne
push
ffreep
mov
pop
push
push
dec
cmpsb
repnz
repnz
cmp
cld
dec
enter
jb
adc
daa
xor
xor
adc
and
into
jecxz
add
int
push
lods
mov
xorb
mov
arpl
push
sub
jb
test
inc
push
ja
aad
dec
push
xchg
cmp
aas
xor
push
cmc
add
xchg
test
cmp
rcll
or
rcrb
adc
lahf
orb
and
repnz
add
icebp
insl
push
mov
lods
mov
jb
cmc
sbb
orb
test
adc
jle
je
mov
cmpsb
jmp
not
aad
sbb
clc
xor
xor
mov
jnp
in
imull
fidivl
mov
movb
mov
loopne
pop
jne
push
jecxz
leave
icebp
jecxz
js
sar
mull
pop
pop
cmpsb
inc
pop
jl
negb
mov
inc
and
jg
cmp
movsl
xor
mov
push
jg
pop
fs
xor
xlat
testb
sbb
sahf
loop
xchg
pop
popl
push
stos
daa
rcrb
sbb
out
lahf
dec
or
jno
adc
in
push
xchg
xchg
pop
fidivrl
cmovnp
inc
not
lods
jge
and
and
je
pop
pop
inc
push
loopne
mov
push
inc
push
pop
mov
fchs
popf
or
sbb
repnz
daa
mov
pop
jbe
dec
dec
xchg
ret
insb
pop
and
cld
enter
movsb
loop
mov
es
inc
js
dec
es
ljmp
xchg
and
rclb
pop
inc
aaa
jne
lods
jo
push
and
imul
rcl
dec
inc
es
pop
mov
xchg
popa
jle
icebp
push
mov
pop
lret
push
test
popa
dec
test
cli
mov
jns
add
inc
xchg
add
stos
stos
mov
cmc
out
sub
cmp
xchg
loope
push
sub
cld
push
xor
pop
xchg
test
incl
pop
negl
cmp
imul
push
std
push
inc
movsl
and
sahf
cmpl
mov
jmp
mov
and
jp
ljmp
jge
fsubp
outsb
mov
cmp
sub
sub
dec
push
enter
mov
inc
test
or
xor
shlb
mov
adc
lods
out
fisubl
sub
cld
mov
mov
fs
es
imul
mov
ja
std
mov
xor
xchg
pushf
sahf
or
push
loope
arpl
adc
jmp
testl
add
sbb
fidivs
mov
std
jo
jl
in
insl
ss
mov
inc
aas
cmp
stos
push
xchg
sub
adc
aad
lock
xchg
jo
sub
and
mov
cltd
test
inc
push
dec
inc
jnp
and
push
jp
pusha
dec
sbb
push
mov
sbb
sbb
add
fsqrt
mov
lcall
push
sub
in
sub
shrb
adc
inc
daa
test
fidivrs
in
bound
adc
js
push
sub
push
and
jb
std
sub
stos
sti
pop
xor
inc
gs
lret
addr16
dec
out
xor
arpl
mov
scas
pop
into
popa
dec
sub
arpl
adc
sbb
ret
jg
lods
jb
cli
loope
cmc
cmp
inc
rorl
insb
cwtl
dec
dec
movsl
mov
inc
adc
sbb
or
and
push
xor
arpl
jne
arpl
jns
stos
ds
lods
jne
cmp
arpl
ja
neg
sbb
jo
insl
cmp
adc
arpl
adc
pop
push
xchg
xlat
pop
push
mov
sti
mov
loop
int3
mov
push
dec
loopne
push
test
scas
loopne
pop
js
adc
pop
fwait
and
pop
pop
out
js
xchg
xor
inc
xor
dec
adc
icebp
xlat
ret
cwtl
cmp
push
out
fsubl
or
mov
push
inc
cwtl
push
xlat
pop
ret
imul
xchg
jb
and
sbb
dec
sbb
jbe
into
ret
adc
jl
fldenv
pop
and
jecxz
in
std
xchg
cltd
les
das
test
or
in
mov
out
adc
cmp
xor
dec
add
adc
and
cmp
rcrl
jg
out
sub
add
mov
add
xchg
dec
loopne
shl
es
repz
lods
jbe
pause
jb
mov
mov
push
repnz
sub
addr16
fwait
loopne
mov
pop
adc
orb
cmpsl
out
or
lods
push
outsb
adc
fdivrp
cwtl
mov
adc
mov
and
testl
outsl
cmp
shll
dec
cmp
push
or
mov
js
xchg
and
xorb
push
inc
sbb
mov
mov
outsb
mov
mov
jp
mov
inc
cmp
inc
popa
fisubl
loopne
gs
dec
pop
inc
ficoml
add
pop
movsb
sub
mov
inc
out
fwait
and
pop
mov
enter
fstpl
jp
inc
icebp
jb
shrl
popf
push
imul
xor
in
mov
cmp
aad
sti
arpl
test
xor
jmp
cld
mov
inc
jge,pn
dec
jl
dec
in
xlat
cmp
xor
mov
std
cmpsl
push
dec
hlt
hlt
sub
push
mov
sub
jge
repz
add
sbb
jae
jno
or
data16
sub
cmpsb
popf
cmp
ret
xchg
js
lahf
iret
jb
sahf
jne
adc
adc
cwtl
mov
cwtl
inc
ret
sbb
call
rol
mov
dec
ja
jno
pop
cmp
push
mov
sub
stc
imul
jno
xor
bound
dec
sub
loope
and
and
and
rclb
cld
push
mov
xchg
loopne
add
rcll
cs
cmpsl
mov
lock
adc
cmp
sub
addr16
rorl
dec
lret
shlb
cltd
adc
jp
pop
and
aam
roll
mov
shll
icebp
ja
clc
inc
mov
push
bound
or
test
or
in
in
pop
repz
mov
cltd
testl
lock
push
js,pt
mov
push
jl
repz
daa
xchg
outsl
dec
pop
sub
vroundpd
stos
push
sub
and
jmp
daa
push
jno
pusha
cmp
aas
mov
jl
push
enter
mov
adc
and
cmp
cmp
daa
aam
dec
and
imulb
dec
adc
ret
dec
xchg
push
ja
or
in
cmp
mov
rorb
dec
xor
es
jl
repnz
push
inc
lea
incl
sub
js
or
enter
rcrl
fwait
insb
push
shr
or
into
into
sbb
cmpsb
and
aas
cmp
mov
stc
stos
das
mov
fs
sub
in
push
or
push
jb
or
sbb
fsubrl
dec
inc
push
jae
fisttpll
xorb
ja
xchg
push
adc
sub
stos
and
cmc
and
sbb
adc
mov
push
aas
sub
adc
cmp
dec
stos
adc
cmp
hlt
into
mov
inc
in
pusha
popa
loopne
movsb
fwait
add
in
jl
stos
shlb
jmp
movsl
in
ret
adc
fnstenv
xchg
adc
scas
outsl
adc
cs
aam
xchg
pushf
mov
iret
aas
add
and
sub
ljmp
add
jns
aas
les
push
push
sbb
cbtw
bound
aad
dec
inc
fisttps
cmp
push
cmp
add
adc
xchg
cmp
mov
call
roll
clc
push
push
out
dec
fimull
mov
scas
dec
imulb
cs
hlt
nop
pushf
mov
mov
fsts
xchg
jns
push
cmpsb
mov
aam
neg
fisttpl
cmp
inc
jge
icebp
clc
fs
xchg
out
outsl
imul
pop
pop
pop
in
loope
outsl
and
mov
xchg
dec
sub
sub
xor
dec
cld
scas
xchg
and
jp
loop
mov
cwtl
sarl
mov
insb
jns
jno
pop
imull
cwtl
or
mov
popf
idivl
inc
insl
aaa
leave
gs
mov
insl
cmp
xor
mov
or
push
stos
push
mov
or
adc
aaa
adc
ds
popa
mov
push
fildl
pushf
mov
mov
cmpsb
std
inc
sub
jp
pop
jmp
out
mov
xor
in
dec
popf
mov
or
ss
out
lcall
test
sti
pop
fcomps
ljmp
dec
daa
aaa
lods
push
cmp
pop
dec
add
icebp
loop
out
out
xchg
roll
xor
sub
clc
sub
scas
aad
ret
scas
add
dec
das
sub
push
cli
and
mov
daa
sub
outsb
dec
daa
jmp
rorl
std
ja
inc
add
or
push
call
adc
push
jl
xchg
ret
or
pop
mov
cmpsb
inc
mov
mov
sub
and
ret
dec
mov
mov
rcrb
add
aad
rorl
xorl
mov
xor
jge
popa
xchg
cli
dec
cmp
roll
pushf
popf
pop
into
stc
mov
push
sbb
enter
outsl
and
negl
pop
and
jmp
enter
test
sarl
aaa
xchg
repz
adc
adc
pop
out
and
push
mov
fnsave
adcb
sti
jbe
out
add
pop
jp
and
mov
mov
mov
shlb
push
nop
mov
pushf
cld
cmp
ficoml
jne
lods
test
roll
in
mov
cmpsb
jecxz
jmp
iret
mov
std
push
movsl
popa
pop
fidivrl
xor
mov
ds
test
mov
mov
ljmp
mov
pop
cmp
pop
add
sti
mov
push
xchg
add
sbb
xor
cltd
mov
cmp
or
lret
cmp
inc
dec
fdivs
push
mov
pop
pop
add
add
mov
adc
mov
inc
pop
pop
mov
mov
movl
and
mov
call
and
mov
add
and
add
mov
loopne
push
jns
sbb
sbb
repz
cld
and
adc
jno
sub
out
iret
ret
pop
jle
mov
push
aam
std
insb
fdivrs
xchg
decb
add
loope
in
popa
mov
dec
dec
jae
and
add
std
subb
andl
test
int3
sub
add
jg
sarb
out
mov
aad
aas
pop
push
or
dec
pushf
lahf
fistpll
orl
inc
iret
sahf
notl
adc
lea
adc
sahf
push
inc
xor
shr
imul
add
jb
loop
xchg
push
int
inc
inc
mov
xchg
loop
xlat
jmp
push
dec
leave
popa
inc
pop
jle
sbb
es
push
pop
cs
push
iret
mov
negl
xchg
not
sub
lods
pop
stc
faddp
mov
sbb
dec
outsl
cmp
nop
inc
stos
mov
dec
sub
mov
mov
jge
jbe
movsb
add
inc
lds
hlt
jge
pop
pop
into
imul
testb
cmpsl
xchg
inc
jge
cmp
jbe
push
mov
mov
inc
lret
cmp
and
bound
orl
pop
idivl
mov
pop
jnp
inc
pop
adc
sbb
push
lods
call
push
sbb
jmp
loopne
add
test
out
dec
andb
rorb
mov
cmpsb
data16
lock
push
mov
ljmp
in
jg
jb
test
lcall
lret
les
sbb
outsb
pop
dec
sub
sub
lods
xor
jns
push
add
xchg
jmp
mov
pop
testl
mov
cltd
push
xchg
cwtl
icebp
dec
lcall
and
or
loope
cmp
test
pusha
andl
pop
sti
pop
mov
out
xor
lods
jae
pop
xchg
insl
jge
insb
cld
mov
dec
and
cmpsl
inc
and
das
dec
rolb
inc
aad
jne
pusha
out
sbb
stc
fidivrs
popa
inc
stc
int3
adc
and
and
jle
and
mov
movsb
pusha
ret
push
andl
call
sbb
push
cmp
outsl
loope
mov
js
mov
jp
test
pusha
pop
dec
stos
js
push
aaa
xchg
mov
cmpsb
inc
xor
cld
or
pop
lea
repnz
mov
clc
mov
clc
dec
mov
aas
stos
xchg
xchg
pop
lcall
into
sbb
andl
xchg
or
jge
and
push
imul
ja
or
mov
fwait
cmp
repnz
sub
xor
pop
cltd
mul
mov
or
adc
js
and
adc
nop
pop
rorb
es
fistpl
clc
sahf
stos
stos
sub
std
stos
std
fcompl
and
xchg
push
jl
jns
lret
push
loopne
hlt
dec
pop
.byte
