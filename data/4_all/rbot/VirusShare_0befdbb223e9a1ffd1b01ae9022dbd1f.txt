decl
add
andl
add
push
mov
push
push
mov
icebp
call
orl
incl
pushl
push
push
push
or
pop
and
add
add
mov
add
ds
lcall
pop
add
or
push
mov
mov
or
fsts
mov
inc
or
inc
cmp
negb
pushl
jbe
push
pushl
add
lds
adc
xor
movb
and
jnp
pushl
pop
mov
pop
ret
xor
xchg
je
pop
add
pop
andl
add
push
in
jmp
inc
add
add
jmp
stos
clc
jg
popf
ret
lea
incl
push
mov
xor
jmp
fisubrs
adc
or
add
mov
decl
add
add
sar
mov
adc
push
add
jbe
sub
call
adcl
ret
mov
xchg
lea
sub
push
push
call
inc
add
loop
aas
out
adc
mov
push
pop
cmp
jne
cmp
jne
out
xchg
in
add
mov
push
xchg
inc
jno
mov
leave
mov
lcall
jne
test
mov
fidivrs
cs
jmp
shlb
pop
pop
push
es
decl
add
add
cmpsl
sbb
jbe
in
ret
jg
mov
inc
mov
inc
inc
repz
push
or
mov
mov
add
mov
pop
pop
adc
push
aaa
incl
cmp
cmp
adc
and
orb
pop
sbb
paddd
incl
andl
sbb
call
dec
popa
call
call
in
fists
fmuls
add
dec
inc
addr16
add
outsl
push
jle
jl
pushl
loope
mov
test
push
push
push
js
push
push
push
xor
decl
cmp
mov
subb
in
icebp
cmp
pop
loopne
push
sbb
inc
xor
sub
outsb
popa
jbe
loopne
test
adc
add
lods
cmp
add
incl
dec
repnz
inc
lods
push
prefetcht2
idivl
pop
jo
aad
out
pop
or
ljmp
cs
jge
jo
mov
mov
ds
pop
xor
cmp
shl
sbb
mov
cld
arpl
imul
pop
daa
in
jae
mov
pop
or
or
gs
push
inc
enter
cmp
dec
pop
rcl
inc
stos
sbb
fsubrs
pop
mov
rcrl
ljmp
push
push
stos
bound
or
fcomps
sar
and
adc
pop
daa
fcoml
loop
fdivr
sub
xor
fstps
ss
and
push
ss
pop
lock
clc
ds
aas
lock
ffree
push
jl
ja
jno
fnstcw
in
lcall
dec
and
or
add
push
mov
adc
incl
mov
xor
fcoml
gs
add
insl
hlt
sbb
or
inc
call
cs
cvtps2pi
hlt
je
call
or
or
or
mov
popa
cmp
jg
jne
js
lods
lods
or
stos
enter
xor
adc
add
sub
sub
xor
dec
out
and
sbb
mov
or
add
rcrb
xor
cli
out
sbb
cmp
sbb
fcomps
rolb
add
add
fdivl
fidivl
pop
inc
push
sbb
fbstp
jne
inc
pop
jmp
push
test
push
das
sbb
decl
cld
xor
inc
jne
sbb
push
mov
mov
popa
bound
ja
jnp
das
mov
push
add
push
push
cs
inc
cmc
pop
pop
push
cmp
mov
test
jmp
subb
add
cmp
push
and
call
loope
shrb
pushf
sbb
adc
mov
sub
in
and
add
pushl
inc
insl
jo
push
jne
sbbb
jne
imul
aas
cmp
cwtl
inc
incl
or
cmp
les
push
popf
or
shll
add
clc
fildll
fdivr
idiv
decl
jns
mov
es
fstl
cmp
xchg
add
call
mov
ret
and
sub
cwtl
sub
push
std
call
movsb
or
mov
dec
push
mov
push
test
pop
jae
int
loope
ljmp
loopne
rol
call
xor
push
or
jb
shll
adc
incl
push
ret
repz
flds
sub
cltd
fdivrs
xchg
push
xchg
jbe
sub
sub
xor
mov
mov
roll
mov
loope
rep
fwait
and
lock
incl
and
and
mov
in
adc
mov
add
lidtl
add
lret
icebp
push
sbb
in
jb
roll
sub
sbb
jns
mov
add
sbb
mov
pop
call
es
xorb
enter
js
xchg
sahf
out
push
popa
incl
ret
in
mov
lods
sbb
clc
mov
out
or
cs
pop
cmp
lock
sub
xchg
mov
jne
xchg
mov
push
xchg
lods
dec
insb
enter
mov
dec
pushw
push
cwtl
push
fcomps
or
subb
cmp
sbb
push
or
mov
adc
push
add
incl
in
xlat
xchg
dec
sbb
and
sbb
in
into
jge
add
incl
ss
cmp
cwtl
cs
cmp
aad
inc
sbb
and
push
jne
mov
cmp
insb
je
mov
sbb
push
cmp
push
dec
xchg
cs
stos
mulb
mov
cmp
cld
rcll
stos
cmp
lods
ljmp
sub
into
icebp
mov
push
jmp
push
loopne
movsl
loopne
jle
fstl
mov
push
push
incl
stos
sbb
sbb
xor
pushf
fisttpl
ret
inc
movsb
push
popl
pop
lods
sbb
inc
loope
outsl
cld
ljmp
lret
dec
push
inc
into
and
fs
or
sub
adc
cmp
cwtl
lods
cld
int3
dec
je
adc
mov
incl
aad
dec
mov
push
mov
xorl
movsl
adc
ret
test
mov
stos
les
jb
sbb
pop
bound
or
decl
cld
call
push
xor
enter
inc
adcl
push
jne
mov
pop
ret
push
pop
rorb
in
add
pop
push
js
push
addr16
outsl
cld
movsl
ljmp
stc
cs
or
or
mov
mov
incl
lea
pusha
jmp
sbb
mov
insb
ucomiss
leave
pushf
inc
mov
lods
das
push
add
xchg
inc
hlt
add
mov
loopne
cli
in
imul
pop
test
cmp
jb
cmp
loopne
pop
mov
dec
adc
in
mov
jg
ljmp
jecxz
ret
dec
fsub
lcall
cmp
inc
or
clc
test
mov
inc
inc
mov
jbe
mov
outsl
fdivr
or
add
mov
push
sub
push
and
inc
xor
inc
push
fdivr
fistpll
sbb
repnz
sub
pusha
pop
push
fistps
das
lock
clc
or
or
xor
jns
sbb
push
add
jmp
clc
decl
push
aam
roll
or
stc
or
jae
inc
jle
dec
jg
inc
js
inc
lock
and
jae
add
pop
sbb
inc
icebp
aam
fildl
pusha
pop
iret
jbe
or
jl
push
jbe
push
lock
aaa
xor
inc
add
fidivrl
addr16
cmp
icebp
xor
sbb
mov
mov
mov
fs
mov
dec
cld
das
icebp
pop
inc
incb
jmp
lahf
sub
sub
lret
add
jae
mov
call
ja
js
inc
in
ja
push
mov
popa
mov
loopne
hlt
dec
mov
pushf
jmp
std
dec
sahf
repz
sar
mov
dec
cmp
adc
int
je
cmp
pusha
sub
mov
push
insl
xchg
push
scas
lods
sub
adc
cmp
je
and
sbb
out
and
das
std
add
pop
leave
mov
jmp
gs
lea
mov
pop
jge
dec
pushl
sbb
adcl
cmp
addl
je
mov
pop
dec
mov
test
je
mov
or
or
jmp
data16
mov
add
ds
sbb
arpl
adc
fildll
mov
mov
inc
maskmovq
negl
clc
jg
jg
sub
cmp
jae
fadds
mov
sub
mov
mov
push
mov
xor
leave
push
aam
pushl
or
pop
cmp
mov
or
mov
fwait
imul
jbe
adc
cld
das
hlt
dec
loope
lea
repz
cltd
push
shl
push
push
pop
xor
sar
push
and
add
sbb
pop
inc
and
aas
cmp
ret
pop
popa
pop
jbe
pop
push
xor
testl
or
incl
addb
inc
inc
lods
sbbb
sti
popf
sbb
xchg
jge
int3
mov
fwait
gs
ljmp
fwait
loop
stc
call
inc
pop
jmp
sbb
inc
pop
mov
push
cli
xchg
jl
pop
call
cmp
testb
pop
xor
orb
mov
push
inc
push
pop
out
int3
rcll
in
incl
pop
xchg
inc
jne
cmpsb
pop
adcl
sbb
je
push
mov
int
add
fisubrl
push
add
adc
loopne
jmp
ds
pop
sbb
sti
add
ja
jle
int3
in
and
pop
cmc
cmp
dec
sar
jp
push
lods
js
ds
lret
jl
shll
test
gs
cmp
pop
and
leave
std
jg
mov
fwait
cmp
daa
pusha
pop
adc
xor
lds
cld
mov
pop
lds
lods
je
adc
jmp
repnz
ljmp
sbb
add
push
push
cmp
and
dec
push
popa
dec
add
pop
inc
cmp
cwtl
pushf
xor
std
fucomip
jno
inc
push
add
push
les
add
mov
pop
lcall
xchg
push
push
mov
sbb
scas
push
loop
push
mov
xor
cmp
push
stos
imul
mov
dec
cld
jg
inc
add
sarl
xchg
fisttpll
mov
add
or
jmp
sarb
ja
mov
ret
sbb
std
dec
sbb
clc
or
dec
lcall
clc
jg
push
sahf
xchg
sub
and
xor
loopne
cmc
incl
test
pop
inc
lret
mov
or
mov
pusha
scas
mov
out
fwait
sbb
push
incl
jnp
lock
mov
daa
add
adc
daa
shrb
insl
std
mov
das
arpl
outsb
lods
dec
jle
incl
xor
pop
call
cmp
adc
lcall
jae
cmp
outsb
add
add
call
call
jne
push
inc
and
sbb
jle
or
pop
out
fstpt
inc
loop
adc
fcompl
das
icebp
lcall
adc
push
sbb
cmp
xchg
mov
push
push
sahf
xor
decl
xor
push
and
mov
mov
movsb
jmp
add
sbb
clc
push
sahf
dec
dec
cld
mov
lea
jmp
ljmp
cmp
inc
andl
push
xchg
push
or
mov
mov
lcall
push
pushf
sbb
mov
push
jo
sbb
sub
mov
and
lods
insb
call
stos
push
bound
lcall
jge
shrb
push
enter
je
lahf
add
or
popf
loopne
pushf
rcrl
pop
fadds
adc
or
dec
jge
add
jecxz
mov
fistpl
pop
fucomip
jmp
xchg
jno
mov
mov
mov
sbb
and
dec
lock
cmp
adc
mov
clc
mov
mov
mov
shlb
push
mov
insl
loopne
aad
popf
push
or
mov
add
mov
inc
pop
hlt
test
std
xor
mov
pusha
ror
jg
sub
cld
sarb
mov
andw
jge
mov
mov
push
jle
fidivl
sbb
out
add
clc
clc
out
scas
iret
xchg
cmp
xor
in
mov
hlt
cltd
adc
xor
mov
imul
xchg
stos
sysenter
lahf
sar
xchg
lahf
push
sub
das
cmc
mov
mov
push
pop
movl
sbbl
rclb
xchg
fimuls
pop
imul
add
sbb
je
mov
clc
js
gs
pop
hlt
in
lcall
pop
test
push
mov
loop
ret
jecxz
stos
or
loop
jne
nop
jo
test
xor
jg
mov
jg
sahf
inc
push
push
es
and
inc
pushf
add
push
xor
jnp
jg
pushf
dec
push
push
adc
out
pop
dec
divl
jge
scas
add
test
inc
in
rdmsr
lods
xchg
ljmp
pop
push
shlb
insl
pop
pop
aas
xchg
out
push
pop
mov
sbb
mov
jg
fsubrl
push
mov
cmpsl
jg
cli
pop
clc
mov
dec
jmp
mov
jmp
bnd
mov
jp
ret
mov
cmp
lea
aad
ljmp
bound
pusha
mov
lcall
sbbl
ds
ljmp
addl
mov
jbe
rorb
lods
dec
jno
push
jmp
ljmp
cltd
mov
push
lock
adc
sbb
cmp
popa
in
xor
lcall
cld
dec
jae
cmpsl
adc
scas
xor
mov
ljmp
sahf
inc
cmp
movsb
dec
in
pushf
jo
push
mov
pop
decl
pop
xor
mov
cmpb
pusha
cwtl
jne
push
mov
dec
ljmp
sbb
lea
fucom
sub
mov
sbb
cmc
in
jmp
fucomip
xchg
or
arpl
aaa
dec
push
push
jnp
sbb
ljmp
push
inc
and
add
fsubrs
repnz
repz
in
mov
dec
out
int
clc
pushl
mov
dec
fdivr
sub
dec
cli
mov
hlt
call
inc
cmp
mov
and
pop
shlb
jae
xor
jmp
adc
fildll
bound
aam
fldt
out
aam
mov
pushl
sub
bswap
sub
stos
popa
ud0
fistpll
xor
push
fmull
mov
dec
lret
jns
in
cwtl
mov
outsl
std
out
data16
icebp
mov
nop
push
je
rcll
aad
and
jg
cmpb
push
sub
jns
pop
clc
pop
push
inc
aas
xor
in
add
testl
incl
les
not
sub
sub
xor
scas
or
movsl
pop
mov
jg
ljmp
lahf
push
lea
xchg
mov
call
fldenv
inc
call
dec
or
lock
sub
jbe
inc
decl
lea
inc
addl
bound
leave
and
pop
mov
jb
loop
adcl
test
mov
in
push
in
insb
loope
mov
incl
dec
jl
pop
outsl
jae
add
mov
rcrb
incl
or
fistpll
fidivrs
mov
push
pop
xchg
cli
add
mov
lock
repnz
mov
popa
push
sub
out
dec
cmp
addb
cld
push
das
loop
pop
or
adc
je
cli
addb
and
add
dec
mov
and
jne
push
xchg
ud2
adc
sbb
lahf
outsl
icebp
jmp
imul
add
fisubrl
mov
and
cmp
mov
adc
mov
inc
mov
push
push
inc
js
sbb
and
pushl
scas
ljmp
into
add
popf
mov
pop
aam
pop
clc
lcall
cwtl
rcrb
outsl
jb
popa
push
jge
xor
or
cld
mov
ljmp
out
cmpsl
xchg
fcomps
push
mov
jg
sub
dec
mov
sub
sub
or
repz
test
data16
jne
jg
sbb
sbb
hlt
das
pusha
and
cmpsl
sbb
pop
and
lret
popf
ss
loop
cld
lcall
aaa
hlt
pushf
pop
jb
fs
lds
mov
call
jno
rclb
cmp
jg
sbb
mov
xchg
lods
adc
inc
sbb
jmp
or
sbb
enter
lock
and
sbb
fsubl
test
jne
dec
daa
cld
jmp
add
insb
pop
or
mov
sbb
decb
mov
cmp
push
incl
ljmp
jmp
jns
hlt
repz
push
add
das
sbb
xchg
mov
loop
jmp
mov
iret
punpckhbw
mov
vorps
or
push
push
hlt
add
lock
mov
jnp
dec
dec
fildll
inc
jno
insb
or
popf
jne
hlt
cmp
jecxz
cmp
sub
in
push
das
push
jecxz
ljmp
adc
adc
push
ja
or
int3
int3
fistpl
decl
arpl
jno
sbb
mov
pushf
jl
xchg
push
sbb
push
pushl
fmuls
add
add
mov
push
add
out
add
add
fdivs
lea
ss
jg
push
adc
xlat
int
jns
inc
scas
sub
xlat
mov
dec
fisubrl
loopne
jne
ljmp
add
push
mov
pop
push
lods
sbb
mov
in
mov
push
mov
rol
pop
cli
dec
lds
fimuls
mov
pusha
lea
xchg
push
sub
push
lcall
std
call
and
in
testl
shl
sbb
pop
mov
in
pushl
lcall
popf
pop
mov
and
cmc
inc
push
or
jo
jmp
push
mov
adc
fstpl
and
inc
enter
push
push
mov
push
je
int
popa
xlat
jne
gs
xor
and
add
lea
mov
xor
js
mov
scas
lcall
jg
cmp
fsubrp
jno
cld
int3
push
or
cld
sub
mov
and
mov
adc
push
lods
outsb
and
lods
push
fildll
std
push
or
movsb
imul
xorb
or
sub
repnz
adc
es
std
das
mov
mov
cmp
jg
and
lea
mov
adc
jg
test
shl
push
adc
mov
cs
pop
inc
decl
mov
sub
jno
sub
sub
lods
fisttpll
and
adc
push
scas
leave
cmp
jg
decl
or
leave
xchg
addr16
add
imul
icebp
clc
and
fldl
icebp
pop
jmp
mov
jb
aad
xchg
js
outsb
sbb
das
mov
mov
or
dec
sub
adc
movsb
in
dec
or
inc
mov
pop
push
cmp
out
inc
push
in
into
pushf
push
dec
inc
jmp
push
cmp
xchg
add
pop
xchg
push
aam
in
pushf
inc
push
xor
lea
mov
rcrl
sub
push
movsl
ds
push
sub
pushl
lcall
push
sbb
mov
mov
mov
lcall
pop
in
stc
cld
push
mov
cltd
pop
xor
xor
sub
lock
jp
iret
fwait
adc
les
xlat
mov
test
ljmp
pop
xchg
mov
fwait
fwait
jbe
jecxz
or
mov
jne
aas
adc
movsb
sbb
data16
pushl
sbb
jmp
xchg
test
and
push
cs
adc
or
inc
xchg
fldpi
js
push
stos
mov
repz
mov
mov
jbe
jmp
call
jbe
push
pcmpgtb
adc
add
cmpsl
scas
mov
sbb
outsl
jno
movsl
or
inc
je
sub
push
inc
decl
cmp
inc
sub
mov
adc
inc
and
mov
mov
andb
insb
shr
lcall
push
test
and
lock
dec
jne
pop
mov
cs
cli
cmp
insb
imul
adc
add
mov
cwtl
adc
es
fiaddl
pop
call
inc
adc
sbb
arpl
inc
push
test
push
cmp
sub
inc
inc
or
lcall
or
je
dec
daa
mov
mov
jno
push
cli
outsl
push
dec
mov
sti
out
or
test
mov
mov
je
push
sbb
fwait
pusha
imul
add
push
mov
outsl
dec
std
call
adc
pop
xchg
mov
push
inc
add
push
incl
inc
mov
push
xchg
pop
fisubs
xor
push
fidivl
loopne
inc
in
mov
mov
push
sbb
incl
es
push
loope
daa
dec
pusha
rcrl
sti
popf
adc
sub
nop
pop
jmp
jge
das
sbb
cmp
cli
jbe
xchg
push
mov
and
incl
add
push
push
xchg
mov
mov
push
lds
icebp
arpl
pop
std
inc
pop
mov
fidivrs
imul
mov
imul
arpl
js
inc
xchg
movsl
leave
scas
loope
jle
loop
cmp
cld
popa
pop
sbb
add
fidivs
popa
sub
pop
xchg
vcomisd
pushl
repz
enter
sarl
jl
loope
or
mov
pop
ljmp
out
es
mov
dec
loopne
ljmp
jge
xor
fwait
pop
stos
pop
inc
sub
push
jbe
shr
jg
mov
push
cmp
jecxz
jns
cmp
stos
lock
mov
sub
ja
pop
loopne
inc
jno
rclb
jp
iret
xchg
and
push
jge
pop
popf
mov
mov
jne
xor
addl
popa
adc
stc
call
mov
pop
dec
adc
int
push
inc
mov
es
jp
push
std
call
add
iret
inc
dec
loopne
adcb
loop
lock
cs
sbb
xchg
sti
lcall
xchg
ret
icebp
pop
add
jbe
icebp
push
push
inc
mov
push
push
add
jmp
ljmp
fsub
mov
cs
inc
shrb
ret
call
lods
fbld
cmp
aaa
jne
nop
pop
add
adc
xchg
cmp
decl
mov
push
add
out
ret
or
push
inc
int3
mov
sub
dec
fisubrs
or
daa
lcall
in
push
into
mov
dec
pop
outsb
adc
ss
nop
repnz
addr16
cmp
icebp
jl
cmp
lock
dec
add
jge
jecxz
mov
cmc
xchg
out
fisubrs
neg
fnstcw
cmp
incl
in
dec
out
jne
jl
push
adc
mov
xchg
push
ficoms
cltd
add
rclb
push
sbb
adc
cmp
scas
jecxz
mov
mov
mov
aad
enter
pop
in
notb
lret
test
mov
push
pop
jo
mov
incl
das
mov
xchg
jmp
jbe
adc
insl
fsts
dec
adc
and
ret
jmp
and
push
mov
jl
pop
cmp
inc
dec
mov
lock
call
call
arpl
test
cmc
adc
sahf
mov
icebp
lcall
das
pop
jns
fildl
push
push
pop
adc
mov
loop
fstpt
fildl
jo
push
push
push
repz
icebp
inc
fdivrs
pop
repnz
pop
adc
loopne
shll
push
dec
jmp
pop
loopne
ljmp
mov
pop
sarb
sti
adc
cmp
addr16
mov
mov
iret
mov
sbbl
mov
sbbb
mov
ror
pop
ljmp
and
hlt
push
lret
and
jg
dec
lcall
das
in
pusha
icebp
cmc
inc
aam
inc
jmp
dec
cld
js
and
dec
mov
and
cwtl
in
cltd
pop
push
das
dec
jnp
movsl
decl
jp
dec
sti
andl
in
addr16
div
ja
and
mov
sub
or
mov
leave
mov
pushl
adc
std
xchg
aaa
add
fidivl
movsb
addr16
lds
mov
outsl
hlt
out
jl
xor
mov
mov
pop
loop
push
repnz
sbb
sub
sahf
adc
lahf
or
fmull
jo
mov
xchg
addr16
bound
push
inc
ljmp
mov
mov
mov
add
and
addb
xor
fucomip
incl
and
lret
mov
sarb
lods
lahf
in
xor
and
mov
rorb
push
out
and
cld
adc
inc
jns
dec
jne
call
mov
test
jl
mov
stos
mov
lods
adc
inc
stc
cmp
in
xchg
jge
das
cmc
decl
pop
rcrb
or
addb
aad
or
lods
jmp
mov
inc
cltd
mov
idiv
push
sbb
adc
daa
push
dec
pop
pop
clc
xchg
mov
or
add
out
sbb
mov
or
sbb
jae
mov
cltd
pop
lds
addr16
movl
shl
loop
add
mov
push
fnstsw
stc
mov
cwtl
pop
inc
clc
shrb
jo
dec
shrb
movsb
lds
mov
mov
sub
jmp
aad
arpl
inc
add
adc
adc
call
enter
mov
push
xorl
mov
shl
test
in
ficomps
clc
loope
or
add
xor
pushf
push
push
cmovo
pop
mov
xchg
push
jmp
xchg
jno
inc
mov
mov
fcompl
jg
mov
add
insb
adc
sbb
xor
cs
push
cmp
add
push
xor
cmpsb
adc
jl
inc
jl
sub
cmp
fucomip
mov
lods
xchg
enter
mov
pop
sbb
fidivs
incl
enter
leave
add
inc
enter
mov
lret
in
or
mov
ljmp
pop
sbb
ret
cmp
stos
out
or
std
mov
mov
enter
or
and
pop
add
xchg
mov
or
mov
jle
sarb
mov
cmpb
ljmp
mov
sbb
add
pop
mov
call
jmp
jecxz
orl
fdivrs
mov
movsb
lea
pushl
sbb
std
into
mov
xor
sbb
int
test
add
and
inc
pop
dec
mov
icebp
fs
clc
push
mov
jae
sbb
lock
jg
cli
mov
xor
or
sbb
push
pushl
pop
ror
fsubrl
test
in
mov
data16
mov
test
lret
lahf
cmp
mov
push
decb
sub
ror
in
int3
jns
jo
insb
sbb
xchg
pop
call
test
je
mov
adcb
shlb
decl
cld
lret
and
xor
push
incb
aam
inc
or
xchg
push
add
jg
xchg
sbb
aas
mov
shr
sahf
outsb
xor
mov
jmp
add
jge
add
jmp
or
push
push
decl
xor
dec
int
add
dec
je
shr
and
rcrl
and
cmp
add
xor
dec
idivb
cmp
xor
sarl
loop
div
ret
enter
or
cmc
jne
jge
pop
xor
or
mov
aaa
es
sub
sbbl
mov
mov
pop
in
mov
push
js
push
mov
loopne
clc
sbb
or
xchg
inc
addr16
or
or
repz
push
push
repz
lods
adc
dec
push
out
cmc
pop
outsb
jge
sar
ljmp
add
mov
sub
nop
mov
inc
rclb
rorb
cmc
je
fimull
paddq
imul
pop
or
jo
pop
push
lea
addr16
lock
fstps
mov
push
inc
push
pop
inc
test
push
dec
fmull
cwtl
inc
mov
and
cltd
adc
addr16
jge
ljmp
adcb
mov
add
mov
pop
pop
sbb
mov
inc
hlt
jg
xor
pusha
loop
jle
inc
mov
adc
inc
cmp
xchg
add
incl
daa
jo
xchg
push
shll
mov
adc
mov
jns
cltd
push
or
in
inc
push
or
das
lock
xor
iret
sti
or
add
mov
inc
insb
pop
mov
pushl
ret
je
xchg
in
push
mov
pop
shll
shlb
ret
ljmp
pop
insb
in
mov
mov
dec
mov
fucomip
push
andb
leave
push
fiaddl
dec
xor
divb
lds
jmp
mov
sbb
clts
sub
mov
mov
mov
mov
mov
cmpsl
popa
sbb
ljmp
xchg
xor
mov
scas
and
adc
movsb
jg
call
rcr
fildl
pop
mov
call
movsl
test
cwtl
je
mulb
dec
fidivl
call
cmpsb
pop
push
mov
and
mov
push
cmpsb
mov
hlt
addr16
addr16
sbb
mov
ljmp
add
out
jo
call
pop
push
pop
mov
mov
xor
xchg
in
sbb
add
jecxz
ret
es
decl
push
pop
das
mov
cmpsb
jge
dec
mov
xchg
daa
sbb
push
push
jg
push
push
mov
iret
mov
std
pop
shlb
test
ret
in
lds
fstps
adc
arpl
or
aaa
dec
cwtl
mov
je
jmp
testb
adc
sahf
sbb
and
inc
int3
jmp
loop
jmp
fistpll
add
or
fdivl
push
jns
mov
shll
push
cs
ljmp
hlt
cmpsl
mov
in
out
mov
aas
lea
adc
clc
incl
pop
mov
je
push
loope
inc
aaa
jmp
rcrb
and
push
and
mov
js
lea
add
push
outsl
and
sub
pop
add
jmp
shll
aam
jmp
inc
lods
out
or
outsl
into
loop
add
scas
movsb
cmpsb
ret
fs
mov
and
jmp
test
ljmp
call
insb
inc
sub
jae
xor
xchg
xchg
jl
je
jp
scas
rcrl
rcll
mov
fisubl
xchg
out
nop
mov
and
mov
or
push
imul
add
test
pop
jl
inc
jmp
push
cwtl
out
jno
in
xchg
rcrb
push
pop
xchg
das
cmc
lcall
mov
adc
mov
adc
mov
xchg
push
fs
jbe
jge
mov
dec
repz
sub
pop
push
pop
adc
popa
inc
pop
and
std
leave
sbb
mov
xchg
lcall
aad
pop
test
inc
dec
aad
ret
cld
mov
rcl
xchg
mov
decl
mov
sbb
sbb
decl
fstl
mov
cltd
inc
cmp
cmp
dec
inc
sub
popa
loop
sbb
adc
or
cld
stos
enter
mov
mov
decl
jne
or
pushf
out
xor
fildll
dec
or
push
cmp
cmp
push
jle
jb
orl
lcall
test
push
repnz
pushf
add
mov
pop
cli
call
sbb
mov
mov
imul
std
decl
std
xchg
cmp
fcompl
xchg
add
into
lds
and
test
pop
addr16
clc
push
mov
std
pop
rorb
add
movsb
roll
mov
ljmp
mov
mov
shll
mov
popf
cltd
xchg
cmp
hlt
or
mov
and
fs
push
mov
lcall
push
push
in
push
jne
pop
inc
inc
imulb
inc
sub
les
rcrl
mov
xchg
nop
xchg
movsl
outsl
icebp
call
push
jmp
dec
popf
inc
inc
xorb
call
in
sub
test
or
jg
jns
icebp
decl
mov
sbb
mov
ljmp
cmp
stos
push
imul
roll
mov
mov
ljmp
or
ljmp
and
cmpsb
ret
add
sar
decl
cmp
mov
or
push
sub
push
and
lret
std
mov
decl
xchg
sub
lea
sbb
pop
or
push
das
pop
or
jle
sbb
mov
ljmp
lock
mov
pop
rorl
cmpw
add
jmp
xchg
clc
sbb
loopne
ljmp
loope
cmp
cld
adc
call
fistps
mov
xchg
popf
insb
test
xor
lea
mov
push
ret
jge
push
xor
fnsave
jmp
pop
dec
pop
stos
pop
ret
cld
sbb
and
jbe
dec
bound
outsl
adcb
fs
call
sbb
mov
pop
and
sbb
jb
pushf
rcrl
outsb
push
inc
pop
lods
xchg
or
push
cmp
inc
aam
mov
pop
dec
dec
pop
sub
mov
and
push
aam
xor
pop
call
in
in
mov
lods
push
test
mov
jg
pop
shll
dec
sbb
shrb
push
lcall
dec
int3
dec
jno
in
add
sarb
enter
cs
adc
idiv
incl
incl
cwtl
dec
shll
mov
push
inc
pushf
adc
mov
pushl
pushf
dec
jnp
xchg
inc
cmpsb
mov
pop
movsl
jo
sbb
mov
pop
int
mov
push
sbb
outsl
cld
pop
scas
inc
int3
push
push
add
pop
cmp
jb
lret
cs
pushl
lret
cs
out
xor
jecxz
test
fucomip
mov
jae
adcb
pop
lcall
call
ret
mov
sbb
or
and
mov
mov
pushl
add
mov
push
movsl
xchg
test
shl
mov
pop
test
cwtl
call
decl
outsl
sahf
inc
arpl
jne
xchg
push
cltd
cltd
xchg
ds
and
pop
popa
pop
sarb
xchg
sub
or
movsb
cmpl
fdivs
pop
jg
aaa
jle
mov
push
call
mov
add
call
clc
and
cmp
jne
insb
in
add
fs
data16
adc
pop
push
xchg
or
ret
dec
dec
push
jecxz
shl
sub
pop
mov
mov
in
fldenv
aaa
or
out
dec
cmp
jmp
push
xchg
cmp
pop
lret
cmp
andb
ss
and
cmp
test
xchg
add
xor
xor
cmp
add
mov
or
inc
cmpb
xchg
sub
das
adc
jmp
mov
adc
pop
sub
push
ret
inc
inc
enter
push
xchg
add
inc
iret
or
jg
imul
ror
fldcw
movsl
fcmovb
xchg
mov
pushl
clc
fidivrs
mov
pop
test
push
cs
fucomip
xlat
ret
lret
sbb
mov
ljmp
xchg
pop
push
mov
mov
mov
jg
cmp
sub
sub
test
jl
and
sarl
mov
cmc
lcall
clc
add
bound
cmp
sbb
xchg
mov
adc
loopne
loope
jns
sbb
xorb
and
sub
jle
insb
das
icebp
add
ljmp
cmp
sub
popaw
stos
jbe
pop
push
in
cwtl
lcall
xor
in
jg
jg
hlt
adcl
xor
lods
loope
fwait
jecxz
sar
fbld
in
mov
and
or
les
incl
or
gs
fsubl
out
enter
and
incl
subb
mov
fs
andnps
pop
cld
test
or
inc
dec
cltd
or
out
outsl
pop
call
test
sbb
inc
loopne
lea
movsb
mov
pop
in
mov
mov
leave
sbb
ds
sub
xchg
ftst
in
jne
jg
adc
ret
ret
lret
iret
adc
push
mov
mov
push
jecxz
clc
fbld
mov
and
dec
lea
add
rorl
adc
dec
pop
aam
xchg
lea
jbe
or
outsl
lock
out
push
pop
pop
add
or
call
jnp
dec
mov
push
jecxz
jno
popa
in
ret
int
icebp
test
sub
cld
pushf
hlt
das
hlt
and
cmp
xchg
xchg
outsb
icebp
jbe
mov
sbb
cmp
subb
jb
rolb
adc
jg
jae
mov
ret
shrl
cmp
jle
jo
fisubs
adc
sub
repz
and
and
jg
inc
lea
add
jbe
cmp
pop
push
sbb
stos
add
out
test
xor
pop
mov
jl
dec
std
ljmp
inc
dec
sbb
inc
cld
negl
dec
fdivrs
and
mov
sub
rcll
imul
popa
mov
js
shlb
pop
sub
aam
mov
and
mov
stc
mov
xchg
push
adc
stc
test
jg
divb
pop
and
sub
push
cld
incl
iret
sub
and
aaa
fdivrs
test
je
mov
aaa
push
movsw
movsb
jge
repz
mov
shll
fstpl
aad
fucomip
call
dec
cs
lock
push
fmuls
cmp
mov
dec
or
movsb
lods
dec
rorb
jmp
mov
lds
hlt
push
jmp
push
or
and
push
fchs
call
mov
mov
mov
xor
xor
dec
xor
int
xor
std
push
aas
aaa
clc
ljmp
inc
test
adc
popf
lret
sub
jns
pop
leave
lea
leave
and
pop
sbb
ror
lcall
cmp
pop
push
sarl
push
mov
xchg
dec
mov
icebp
jg
or
inc
inc
nop
mov
gs
ret
insb
add
mov
repnz
jge
adc
mov
loope
jne
push
js
js
mov
cmc
fbstp
fisubs
sub
pop
and
gs
lcall
mov
fsubl
and
xorl
cmp
test
dec
xorb
mov
lcall
push
push
fldpi
mov
xor
int3
repnz
and
sar
movsl
decl
mov
adc
stos
xlat
dec
stc
outsb
repnz
xor
cmpsb
daa
xor
cmp
sub
and
push
pop
and
lcall
pop
les
movsl
push
mov
aas
adc
les
add
ret
incl
adc
push
mov
mov
push
out
or
jmp
clc
fists
call
pop
push
mov
out
pushf
mov
mov
mov
call
or
out
loopne
add
mov
and
or
std
fistps
outsb
sarl
rcrb
or
int3
push
fisubs
xchg
mov
inc
sbb
ljmp
and
es
mov
push
mov
cs
pushl
push
iret
push
adc
jmp
repz
enter
mov
fsubrs
stos
test
rolb
or
imul
mov
inc
and
mov
mov
pushl
test
mov
jno
hlt
movzbl
sub
jp
mov
mov
rorb
lret
jne
sbb
push
mov
fldenv
mov
xchg
pop
pushf
or
call
push
lahf
sahf
dec
xor
adc
out
push
xchg
or
cltd
sbb
adc
push
push
negb
pop
sarb
pop
fcmovnb
cmp
imul
pushf
push
out
mov
clc
inc
adc
loop
in
repz
mov
xchg
lock
pop
jae
xor
clc
ljmp
cwtl
xor
jecxz
push
mov
push
mov
mov
mov
pop
fdivl
pop
dec
adc
push
clc
add
inc
cmp
ljmp
das
pop
pop
dec
dec
daa
adc
jno
adc
decl
xchg
dec
push
dec
push
or
cmc
jl
sbb
pushl
decb
sar
inc
ljmp
pop
and
dec
push
or
lods
pushl
adc
jmp
das
push
mov
iret
fwait
xor
cmpsb
pushf
or
cmp
cmp
or
scas
xchg
mov
ss
out
or
mov
repz
mov
cltd
sbb
and
mov
push
xchg
ljmp
sub
dec
adc
clc
mov
adc
sbb
push
popf
mov
xor
cmc
lcall
addr16
sbb
mov
rcll
leave
testl
sbb
cmc
outsl
cmc
or
push
push
push
lea
mov
dec
xor
jg
jp
xchg
es
mov
stc
test
ss
mov
jle
aam
add
dec
cmp
pusha
inc
cwtl
jg
lcall
mov
push
xor
jae
inc
xor
loopne
inc
sub
push
adc
pop
fcoml
cmpl
mov
addr16
xchg
incl
ljmp
xchg
ficomps
sbb
clc
cmp
sub
mov
push
ja
cli
dec
or
pop
cmc
stc
sbb
pop
push
mov
jmp
mov
or
mov
add
inc
xchg
jl
leave
push
mov
or
dec
cmp
fildll
bound
adc
cs
or
lock
add
jg
pop
inc
loopne
dec
jns
stc
lret
push
xchg
fbld
int
inc
sbb
xchg
call
out
hlt
stos
bound
adc
cs
pop
xor
and
sahf
cmc
push
xor
decl
xor
and
and
jno
sbb
incl
lcall
das
movsb
notl
and
inc
inc
es
inc
cmp
fsubrs
call
pushl
nop
lds
xchg
mov
jae
adc
add
aad
cmp
in
mov
gs
arpl
or
jg
loopne
sub
pusha
dec
pop
jne
mov
mov
or
test
ret
sub
data16
push
adc
push
clc
pop
fsubr
popa
mov
pop
jno
shlb
pop
adc
sbbl
jg
push
shr
pop
aam
dec
jno
push
mov
fsts
cmc
xchg
inc
jb
mov
xor
pop
mov
das
mov
leave
test
mov
rcrl
jo
push
push
inc
lods
sbb
out
das
and
mov
pop
cmp
clc
jmp
scas
bound
sub
nop
fnstcw
stc
cmp
call
xchg
je
cwtl
add
adc
jl
adc
mov
cmp
lock
call
scas
xchg
add
xchg
sbb
cwtl
pop
outsl
clc
mov
shrl
call
sbb
sbb
and
test
inc
mov
lea
and
std
dec
lcall
xor
jl
addb
cmp
cmp
push
xor
movsl
das
rcpps
mov
js
fildll
outsb
xor
incl
ljmp
push
fistpll
cmp
push
movsl
add
cltd
dec
sbb
mov
mov
hlt
insl
ljmp
das
xor
pop
fldenv
or
mov
pop
mov
das
je
dec
jne
daa
inc
push
xchg
sahf
and
dec
sub
mov
vmread
and
cmp
sub
or
pushl
jmp
xor
cmp
test
xor
jg
or
jno
iret
or
mov
or
pop
imull
call
dec
cmp
ljmp
ja
nop
mov
add
xchg
insl
int3
mov
push
pusha
add
pushl
in
jne
xor
push
insb
insl
loope
imulb
mov
test
incl
loop
xor
je
jns
arpl
fs
sti
shrl
and
xchg
or
xchg
pop
add
insl
fstpt
pop
mov
cld
call
sub
aam
push
out
aam
xchg
aam
push
test
in
insl
push
sti
or
sti
dec
adc
lock
xchg
pushl
push
pop
scas
mov
push
hlt
push
cmp
jns
and
ss
addl
mov
les
mov
sahf
mov
mov
icebp
cmp
shll
jne
imulb
aad
sub
add
add
pop
lds
ljmp
mov
mov
daa
hlt
push
cld
daa
sbb
or
decl
std
push
pop
jge
push
mov
iret
test
pop
xor
xor
mov
into
jp
neg
adc
pop
imul
xchg
cs
cmp
das
hlt
adc
je
les
mov
add
es
jg
outsl
cld
jg
sub
xchg
jmp
shrl
enter
xchg
sbb
call
jecxz
push
push
jp
loope
or
xor
adc
outsb
lock
mov
or
arpl
inc
stc
add
xchg
or
pop
cli
push
cld
jp
mov
rclb
insl
push
mov
mov
cmp
jb
sub
dec
jne
xchg
jns
sbb
aam
aam
jmp
push
mov
addb
push
push
in
xor
mov
mov
mov
in
add
mov
fildl
aaa
mov
negb
sbb
xor
push
inc
lahf
or
jnp
jo
sbb
sbb
mov
aad
notb
dec
std
mov
scas
in
out
outsl
aaa
sbb
push
pop
pop
push
jb
dec
stc
lldt
sbb
push
ljmp
add
push
jecxz
adc
sbb
push
loop
adc
jl
mov
add
push
inc
ret
movsl
add
lds
fdivr
incl
or
push
pop
test
inc
lods
test
inc
lret
jl,pn
orl
and
jg
inc
mov
in
enterw
push
xchg
push
xchg
and
ret
hlt
mov
pushl
mov
jbe
pushf
xor
push
je
pop
push
cmp
fisubs
jmpw
ljmp
push
mov
rorb
jb
jge
and
clc
call
sub
bound
cmp
fadds
movb
cwtl
add
data16
pushl
pop
out
cmovno
sbb
into
mov
mov
shlb
insb
mov
fcomps
add
in
movl
pop
std
rorb
icebp
jg
cmpsb
sbb
shll
cmp
idiv
xor
mov
add
nop
fsubp
mov
lret
inc
pop
or
out
jg
imul
and
push
mov
pop
push
adcb
dec
stos
jg
dec
xchg
pop
daa
sub
cmpsb
jl
shl
icebp
cmp
jg
insb
mov
ss
lock
imul
cmp
loopne
divl
sar
ljmp
arpl
xchg
pop
rcrl
sbb
lret
lcall
jg
shlb
movsl
dec
fnstcw
sub
ljmp
hlt
test
call
inc
pop
dec
sbb
das
daa
test
push
mov
mov
cmc
ljmp
inc
adc
frstor
icebp
mov
icebp
in
xchg
add
mov
scas
cmp
add
or
popf
inc
aam
xor
cli
das
cmc
lea
push
loopne
jns
loop
outsl
xor
cld
call
popa
repnz
push
lcall
xor
cmpl
jb
enter
lcall
movsb
push
in
jnp
popf
or
adc
jo
enter
xor
out
xchg
pop
jge
mov
test
lds
sub
mov
mov
mov
es
pushl
xchg
pop
lods
pop
sub
adc
dec
sar
adc
mov
stos
shr
cmpsl
mov
lahf
ljmp
sti
jbe
iret
or
or
pop
sub
fwait
push
jae
lock
pushl
push
mov
lock
adc
or
loopne
xor
movsl
pushl
js
sub
or
mov
test
movb
pop
call
push
and
adc
js
mov
xchg
js
cs
stc
mov
cli
mov
sbb
ja
cld
push
sub
js
push
std
call
jmp
imul
mov
aaa
push
jge
xor
sub
xchg
xchg
or
cmp
adc
lock
xchg
clc
ret
push
mov
jg
shlb
sbb
and
pop
add
jl
notl
repz
pop
call
dec
lods
int
xchg
jno
mov
testb
das
cld
inc
iret
and
daa
push
leave
in
pop
xchg
sbb
sti
adc
jns
push
xchg
test
or
add
imul
xchg
ds
add
sub
inc
jno
arpl
dec
jbe
xchg
sbb
pop
movswl
fdivrl
jmp
in
call
jnp
sbbl
sbb
add
cmp
jle
mov
loope
adc
test
fucomip
mov
pop
mov
or
sub
add
sbb
mov
add
lea
in
pop
mov
inc
mov
decl
dec
jae
andb
out
sub
jbe
idivb
dec
xchg
mov
pushl
cmpb
testb
imul
push
inc
jp
xchg
xlat
xchg
stc
jmp
xor
add
adc
sbb
es
ljmp
je
adc
cmp
pop
cmp
sbbb
test
inc
incl
jl
into
cli
ret
push
adc
fsts
call
sub
aad
cmp
mov
fs
loop
fsub
sbb
sbbl
leave
test
mov
cmp
pushf
mov
jecxz
mov
enter
call
sbb
and
or
inc
das
jl
sub
aam
into
testb
pop
loopne
inc
in
jl
xor
lds
pop
and
pushl
je
jno
mov
sbb
push
xchg
push
pop
aam
or
dec
cmp
das
lock
cmp
push
or
add
dec
push
loope
mov
pop
cld
sbb
daa
data16
adc
adc
sahf
in
push
shlb
cmpsl
mov
notb
mov
mov
push
adc
mov
mov
int3
xchg
addb
mov
sbbb
jo
jo
or
mov
enter
push
mov
mov
popf
inc
cmp
aas
or
cmp
out
loopne
rcrb
fstps
mov
iret
inc
mov
cld
sahf
lods
lds
and
fcomip
mov
pop
sbb
je
loope
pop
jmp
sub
jne
sbb
mov
fnstsw
inc
or
mov
rcl
js
fdivs
inc
sbb
enter
mov
xchg
mov
leave
shl
jmp
divl
dec
sti
mov
test
mov
mov
cmp
fcomps
adc
aas
push
cli
pop
adc
dec
test
cmp
mov
insb
mov
jo
add
and
outsb
js
mov
test
in
repz
add
fimuls
add
out
das
and
jg
popf
xor
jle
fiadds
out
addr16
sub
pushl
call
jl
jle
pusha
or
test
inc
and
or
mov
mov
fprem
mov
fs
fdivrl
jmp
dec
dec
or
inc
pop
lods
mov
and
push
xor
mov
jg
pop
cmp
nop
inc
add
inc
xor
lock
push
out
push
add
and
sbb
fld
or
clc
je
pop
cmp
sbb
mov
ror
mov
enter
mov
sbb
push
dec
mov
mov
mov
mov
jge
mov
sbb
or
sbb
jl
push
jmp
jecxz
je
push
icebp
or
fldcw
fs
push
or
pop
jbe
mov
int
or
shrl
xchg
jge
dec
pop
inc
in
add
or
jbe
jl
jbe
outsl
cld
fidivrs
jnp
in
decl
mov
inc
clc
push
jecxz
js
sub
inc
xchg
rolb
pushl
and
stc
add
mov
loope
push
mov
pushf
insb
cmp
je
pop
icebp
cmp
mov
test
movsl
popf
jl
call
xchg
cltd
xchg
sbb
into
into
sbb
adc
test
ret
aam
pop
xor
popa
jbe
das
mov
and
inc
push
mov
out
inc
call
xor
daa
dec
xor
cld
addr16
push
add
mov
jg
push
hlt
add
mov
sbb
enter
inc
incl
enter
jl
cwtl
cmpl
lock
jg
mov
and
sub
adc
lock
jnp
cmp
ficoml
pusha
mov
dec
jg
das
cld
sub
out
lods
jns
cmp
pop
loop
sbb
cmp
rol
sub
and
xchg
ds
js
and
push
mov
ror
lret
je
arpl
call
lret
sub
and
adc
scas
cmp
ret
push
ljmp
mov
mov
shll
jge
enter
mov
in
decl
mov
jnp
cmp
pop
mov
jl
sbb
insb
jnp
hlt
ret
pop
das
sbb
in
in
loope
pushf
lock
cmp
mov
sub
push
stc
outsl
aaa
outsb
fcoml
mov
mov
sar
pop
pop
lret
sub
mov
jo
pop
fnsave
mov
sbb
lods
iret
push
iret
popf
lock
pop
test
or
adc
pushl
popa
stos
les
push
cmp
pop
cmp
xlat
dec
ljmp
popf
sbb
roll
stc
roll
xor
cmp
inc
dec
mov
fistl
xor
arpl
mov
call
fcoms
icebp
je
cli
jge
push
pop
repz
jl
test
jno
in
ljmp
push
add
loope
hlt
jns
in
mov
nop
jecxz
in
cli
mov
jne
xchg
jl
aas
dec
push
pop
mov
mov
lods
jbe
loopne
cmp
xlat
popf
pop
sbb
lods
sbb
je
jno
loopne
out
lahf
out
cmp
stos
mov
test
ja
dec
jns
jg
pop
clc
xor
je
jecxz
pop
jbe
jle
pop
sbbb
pop
ljmp
or
adc
xor
mov
subl
jns
call
lea
into
adc
mov
jg
inc
in
dec
aad
call
push
lcall
lock
jno
clc
out
jno
aad
iret
shll
xchg
popf
loope
arpl
cmp
or
in
cmp
int3
stos
aas
adc
adc
mov
cmp
cwtl
and
and
jl
in
pop
sub
sub
xor
xor
dec
cmp
cmp
xor
lcall
inc
imul
sub
fcoms
and
jno
movsl
test
and
cmp
mov
lcall
jbe
inc
sub
jno
movsl
je
insb
push
mov
add
fcomps
jne
incl
push
or
movsb
push
stos
push
push
popa
xor
insl
pop
dec
push
mov
sbb
push
sti
lods
xor
adc
sub
popa
subb
push
xor
jp
xchg
enter
leave
jb
mov
and
add
dec
mov
xor
das
leave
nop
mov
lret
add
inc
xchg
clc
pushl
enter
sub
push
ret
mov
adc
aaa
mov
cli
or
or
xor
decl
pop
and
jmp
mov
jle
sbb
sbb
sbb
dec
add
add
mov
fdivrl
adc
or
cmp
jg
cmc
inc
push
cmp
out
jb
je
jns
fnstcw
jge
adc
mov
std
decl
xor
push
inc
pop
cmp
push
icebp
lods
loopne
js
test
jl
int3
jo
fistps
add
fs
jl
cmc
das
aaa
pop
inc
add
orl
lcall
xchg
cmp
add
pop
jl
cmp
jg
pop
pusha
ljmp
imul
scas
std
subb
pop
mov
ljmp
out
xchg
push
adc
jne
cmp
pushf
fisttpl
mov
jmp
fadd
dec
in
mov
fsts
ds
popa
sbb
or
pop
rorb
or
dec
pop
or
add
mov
add
mov
dec
lea
das
hlt
fmull
or
and
push
add
push
dec
mov
jne
incl
decl
popa
pop
jg
jb
add
ret
idivl
in
push
cli
lcall
pop
sahf
rcll
dec
scas
jecxz
adc
mov
cmp
fistpll
adc
cmp
add
lea
or
inc
je,pn
sarl
shlb
xchg
cs
insl
dec
lret
movl
dec
lcall
in
es
sub
call
ret
mov
sbb
sub
jmp
mov
dec
fidivs
jge
cs
adc
decl
lcall
sub
add
adcl
inc
push
push
sbb
loop
int
mov
lods
mov
nop
push
push
into
popf
push
sbb
clc
mov
xor
insb
dec
shlb
or
cmpsb
scas
mov
repnz
pushl
fsubrs
adc
xor
sub
jae
shl
jge
pushl
mov
pop
cltd
iret
arpl
cltd
push
aas
xor
push
ljmp
lock
pop
repz
sbb
add
ds
push
incl
sahf
xor
jp
cmp
gs
mov
lret
mov
cli
xchg
into
aaa
and
pop
cmpsb
and
loope
fs
enter
jg
cmp
jne
jo
add
adc
cmp
mov
clc
daa
sbb
std
mov
fbstp
sti
adc
lods
test
sub
adc
or
jb
shll
cmpsl
xor
inc
push
loop
push
cmp
lods
outsl
mov
in
or
jge
mov
inc
test
lods
mov
sar
jge
push
ss
adcl
mov
mov
movsb
push
call
mov
daa
lcall
cmp
jecxz
cltd
and
jg
sbb
adc
outsl
add
fcomip
scas
mov
shl
arpl
or
add
pop
rcrb
push
es
lods
mov
rolb
mov
mov
shl
ret
xor
mov
adc
jae
sbb
push
mov
test
mov
cmp
aad
sub
adcb
sbb
mov
pop
aas
leave
adc
test
push
xor
sub
inc
push
push
jp
jmp
xor
ss
adc
fstps
incl
jne
iret
cs
jmp
or
add
sub
mov
scas
cmpsb
mov
sar
movsl
push
dec
pop
repnz
inc
mov
clc
add
add
stos
jle
roll
pop
call
and
sbb
je
lds
jns
cld
decl
pop
jae
jo
or
adc
lret
push
push
les
and
and
decl
dec
movsb
jp
add
adc
ja
loope
enter
cmp
rclb
dec
subl
push
pop
adc
and
lock
out
xor
push
mov
addl
xchg
addr16
pop
xor
aas
loopne
jno
xorl
icebp
je
and
ss
pushf
rol
mov
sbb
mov
jmp
nop
je
mov
mov
push
subb
fdivs
lea
fimuls
movzbl
add
jmp
nop
mov
xchg
inc
das
push
call
push
dec
insb
adc
pushl
jle
fst
sub
adc
mov
and
sbb
call
bound
mov
dec
outsb
dec
pushf
fs
sahf
xor
push
out
call
dec
sahf
cmp
sti
add
add
or
add
add
mov
pop
cli
incl
or
mov
std
shll
int3
push
jnp
adc
test
or
pop
push
lahf
cs
add
fcoml
jae
push
pushl
sbb
daa
fdivr
adc
mov
xor
dec
add
jle
mov
mov
dec
sub
inc
add
xor
sub
xor
xor
or
pusha
mov
ljmp
pushl
imul
clc
mov
add
xor
sbb
fdivrs
pop
outsl
icebp
incl
loopne
pushl
lcall
cmpsl
leave
mov
push
decl
jmp
adc
imul
rcll
clc
mov
add
push
inc
hlt
repnz
sub
pop
xor
adc
mov
adc
ljmp
dec
jne
push
push
fimuls
dec
cmpl
cmpb
jmp
pop
ja
or
and
fiadds
mov
sahf
add
xor
mov
mov
movsl
cld
dec
cmp
xor
pop
xor
aaa
clc
decl
ja
push
push
pushf
fimuls
and
arpl
add
pushl
or
push
mov
cltd
insb
dec
ret
xchg
sub
add
xlat
neg
test
lods
mov
or
pushl
fsubs
cwtl
push
lds
cmpsl
or
cmp
mov
jmp
and
adc
pop
jns
lcall
rol
int
aad
lret
andl
orl
lcall
and
pop
and
in
xor
adc
aaa
cld
add
scas
in
lods
xchg
mov
pop
nop
inc
insb
pushf
mov
test
dec
pop
pop
add
outsb
ret
push
repnz
aam
pop
xchg
add
mov
and
push
sub
test
adc
mov
add
into
mov
xor
das
cmc
fisubl
int
sub
xchg
inc
test
adc
push
pushl
fidivrl
cmp
cld
arpl
testb
pop
push
push
cmp
jp
inc
cwtl
ljmp
push
cmc
cmpsb
pop
sub
xchg
outsl
sbb
imul
pop
inc
xchg
xchg
pop
add
mov
movsl
ljmp
cld
jbe
fcmovne
mov
in
mov
pop
adc
jle
fcompl
add
in
push
pop
jbe
sub
xor
mov
adc
dec
lods
xor
test
jae
mov
popa
push
sete
out
lcall
xchg
xor
sbb
icebp
je
test
enter
jo
add
and
push
or
cs
jae
addr16
test
mov
xchg
shll
enter
cmc
shrl
incl
jns
mov
push
jne
cmpsl
popf
es
jns
int
in
and
mov
sbb
ljmp
insl
and
es
in
xchg
pop
or
in
xchg
jne
and
jmp
push
lea
jmp
adc
push
or
faddl
push
push
and
mov
std
sub
jle
cltd
lock
cmpsb
in
jge
cmp
sahf
gs
mov
xchg
jbe
xchg
push
inc
test
jmp
and
or
xor
test
and
lret
mov
sbb
movsl
push
fsubrp
jo
mov
mov
je
repnz
jo
repz
daa
add
dec
std
mov
ljmp
inc
adc
inc
sbb
daa
adc
in
mov
leave
xor
das
hlt
jmp
inc
mov
shrb
adc
stc
inc
add
lret
jecxz
icebp
lock
mov
loopne
push
push
sbb
int3
lcall
jle
jg
test
and
mov
lahf
jl
stc
push
xchg
mov
std
push
jle
jne
aam
sub
inc
popf
sbb
lcall
int3
mov
pop
pop
ss
outsb
mov
add
das
dec
push
mov
pushl
pop
cmp
test
xor
inc
sub
cmp
decl
sbb
cmp
lock
lea
inc
stos
cmp
xchg
mov
jl
adc
clc
outsl
sbb
hlt
je
pop
push
in
add
push
xchg
push
or
pop
cmpsl
and
mov
dec
std
pushl
fistpl
jbe
arpl
repz
push
cmp
pop
push
ljmp
test
sub
inc
cmp
jnp
jmp
and
pushl
mov
push
sbb
jo
incl
or
push
and
sbb
cld
pop
jge
icebp
push
push
out
sbb
pop
bound
sti
jecxz
pushl
sub
je
adc
aam
sbbl
or
mov
jnp
sbb
pop
je
or
jg
add
or
je
sbb
call
mov
push
inc
xor
rorl
nop
fmuls
or
pop
jo
jne
popf
dec
dec
sar
inc
jl
sub
je
lds
push
push
push
push
jle
inc
incl
add
lods
ja
lret
jmp
sub
push
dec
inc
push
adc
sub
xor
sub
sub
mov
test
push
sub
sub
jp
inc
fists
call
sub
mov
push
pop
js
or
push
mov
push
ret
in
mov
out
push
pop
loop
push
sub
add
sbb
pop
mov
pop
clc
aam
iret
call
jg
cmpsl
push
cmovns
in
call
cmp
xchg
push
jg
and
push
addr16
sub
mov
test
pop
arpl
mov
in
pop
push
push
cld
hlt
sti
nop
mov
call
and
das
mov
mov
pop
or
dec
add
loope
cmc
lds
roll
inc
push
sub
push
xor
add
stos
lods
scas
xchg
pop
loop
ror
cmp
pop
or
cli
decl
xlat
jnp
popf
dec
jmp
outsb
fs
movsl
mov
aaa
clc
xchg
fcoml
movaps
dec
pop
stos
pop
dec
addl
mov
push
push
pop
sar
mov
sahf
and
loop
push
repz
aaa
mov
adc
lea
cmpsb
cmpsl
cmp
inc
lds
jb,pt
push
jmp
and
dec
jl
stc
pop
sbb
int
cmp
call
mov
incl
lcall
or
jnp
int3
xor
add
push
mov
mov
mov
test
add
lcall
mov
repnz
jae
icebp
mov
aam
jbe
rcrl
mov
add
add
pop
lea
or
call
lds
pusha
push
mov
or
xorl
lcall
ret
add
rorb
dec
dec
ss
lret
dec
fistl
shll
mov
add
aam
call
outsl
cmc
dec
lahf
mov
and
in
ljmp
clc
stc
xchg
lock
push
adc
mov
idivb
ret
dec
push
xorl
pop
mov
ror
gs
fdivrs
cmpsb
xchg
test
fildl
inc
call
sahf
outsw
or
scas
addr16
shrb
ret
das
hlt
das
lock
xor
xchg
pusha
call
cmc
insb
cmpsl
les
cmp
jmp
jge
pop
cwtl
add
loopne
jle
and
mov
fucomip
aaa
and
push
les
sub
inc
cmp
add
fcmovu
push
xchg
fnstsw
sbb
fs
std
lcall
jns
dec
push
or
adc
ret
push
rorl
mov
xor
jne
sbb
notb
xchg
sahf
bound
hlt
fnstsw
jge
loop
push
out
mov
jecxz
int3
in
int3
out
sub
cmovl
imul
outsl
sar
dec
fdivrl
cmp
pop
loope
mov
push
bound
or
call
pop
stos
or
faddl
pop
shrb
dec
addr16
inc
sbb
inc
test
cmc
fdivrs
lret
jge
xor
jb
das
cs
xor
jmp
xchg
cli
decl
pop
test
fwait
mov
inc
into
dec
or
lods
fnstsw
xor
mov
fcoms
popa
dec
jne
je
addr16
cmpsb
sti
out
sahf
decl
decl
or
jg
pop
scas
cmp
adc
ljmp
mov
lret
or
cld
outsl
icebp
insl
push
add
iret
adc
data16
dec
mov
push
xchg
decl
rcrl
add
inc
mov
cs
push
push
decl
stos
xor
mov
mov
pop
dec
mov
rorl
dec
fidivrl
adcb
lea
mov
mov
adc
mov
jg
cld
fsubrs
pop
popa
rcll
rcll
cmp
jl
cld
je
or
sub
bound
je
aad
out
inc
in
pop
dec
dec
push
mov
dec
xchg
es
fldt
sbb
cmp
test
dec
sar
inc
decl
cmpsb
pop
cmp
push
or
stc
mov
push
lcall
fsubl
lea
and
test
jno
push
lea
mov
dec
xor
es
repz
adc
shr
push
mov
mov
sbb
and
insb
xchg
decl
std
jns
shl
nopl
inc
fsubl
mov
movsb
xchg
and
mov
sbb
jg
sub
adc
inc
mov
dec
adc
mov
ljmp
cltd
and
sub
pop
jle
xorb
xchg
xor
mov
cld
ljmp
jno
push
jmp
pop
addr16
lcall
xchg
insb
lds
lahf
shlb
ljmp
pop
cmpsl
pop
pop
push
mov
clc
push
data16
jle
pop
loope
jb
or
jle
mov
mov
push
mov
push
pushl
and
rcl
in
add
inc
es
sbb
hlt
inc
cmp
dec
repnz
xor
enter
or
or
call
pop
sti
shlb
jns
dec
data16
push
and
xor
pushl
aaa
repz
lret
dec
or
lahf
ljmp
push
pop
dec
pop
sub
repz
jne
jle
pop
call
ret
jmp
aam
cld
test
cmp
push
push
sbb
cwtl
mov
andb
mov
pusha
gs
sahf
out
into
sbb
dec
add
pushl
popf
orl
cmpb
or
mov
repnz
andl
mov
movsl
loope
test
scas
sub
scas
pushf
mov
mov
or
into
sbb
adc
das
sub
inc
and
or
xchg
loop
cltd
adc
and
loop
pop
pop
pusha
push
test
jne
pop
cmp
pop
dec
lods
rolb
mov
jl
sub
hlt
add
rcrl
adcl
inc
fwait
pop
outsl
push
mov
and
or
nop
or
cwtl
mov
add
dec
dec
ja
cli
ljmp
xor
mov
sbb
mov
mov
icebp
imul
jne
sti
test
jecxz
jg
pushl
inc
cmp
mov
cmp
xor
pop
dec
push
test
lcall
add
cwtl
pusha
hlt
mov
jae
mov
lods
int3
or
xor
pop
adc
jae
push
das
ret
ret
or
fiadds
jns
or
sub
sbb
adc
lcall
lcall
icebp
pop
push
jns
cmp
ror
shr
xchg
sub
mov
lcall
je
adc
add
and
xchg
sbb
push
orb
popa
mov
lcall
push
clc
jb
mov
push
mov
adc
ja
adc
mov
xor
jo
das
lock
jmp
test
pop
sub
and
add
xchg
sub
ljmp
std
inc
movsb
jge
sarl
push
push
pop
leave
fs
mov
das
ficomps
or
pop
jmp
jmp
sub
cwtl
pop
mov
inc
cwtl
xor
movsb
or
fcomp
call
cld
jl
in
in
adc
pop
lea
loopne
jp
lods
pop
call
mov
jno
orb
push
sahf
loopne
pop
cld
pop
push
nop
data16
push
push
movsb
sub
dec
add
push
pushl
inc
sub
push
loopne
cmpl
insb
xor
call
and
leave
pushl
inc
insl
loop
push
pusha
jbe
add
add
jae
xor
imul
lcall
jne
xchg
loop
jmp
mov
push
sti
lea
push
adc
sbb
popf
sub
sar
dec
cld
ljmp
push
adc
or
in
mov
aad
repnz
daa
outsl
cld
call
cmp
jo
dec
add
xchg
or
push
mov
stc
pop
pop
push
decl
pop
push
test
movsl
mov
xchg
aam
ljmp
icebp
popf
jg
jae
mov
adc
add
rcll
aas
mov
mov
mov
push
jne
cmp
mov
les
mov
pop
call
lret
xor
cmpsb
jne
xchg
daa
push
mov
pusha
insb
mov
call
mov
push
cs
fisubs
cmc
sbb
incl
xor
xor
je
ljmp
jb
or
push
cld
cwtl
xchg
scas
jl
add
and
cmp
scas
sub
aaa
cmp
pop
add
rcr
dec
stos
cmp
test
jecxz
jecxz
loope
fidivl
out
dec
decl
fstps
pop
push
adc
fnstenv
out
add
pusha
dec
cmp
sbb
imul
lcall
sarl
pushf
push
aam
cmp
push
int
aam
jmp
add
adc
jl
fwait
pop
push
push
add
pushl
xchg
inc
and
fwait
and
lock
jo
mov
mov
xchg
out
cmp
push
loop
into
jg
pushl
and
mov
pop
mov
lret
jne
jnp
cmp
xor
in
fucomip
jmp
incl
in
fildl
jecxz
jae
negb
testb
push
push
aam
add
push
mov
andl
call
mov
dec
pop
test
xchg
sbb
jo
mov
lods
mov
adc
decl
std
test
push
mov
jb
imull
in
inc
incl
pop
dec
push
pop
sub
into
push
ss
sbb
mov
ja
lock
fmull
enter
sbb
les
aam
or
xchg
jg
mov
int
adc
xchg
fistl
jle
adc
sub
fists
lcall
lea
fidivrs
push
test
mov
sub
lods
xor
inc
fs
jmp
sbb
inc
fildll
sub
cmp
or
mov
jg
dec
sub
je
mov
mov
dec
test
lock
fldenv
mov
pop
pop
imul
sub
or
push
cltd
xor
test
mov
cmp
pushl
iret
jmp
mov
jne
stos
nop
leave
fcoms
hlt
sbb
mov
sbb
or
subl
das
dec
cwtl
push
ljmp
outsb
sub
push
out
sbb
xlat
add
daa
mov
movsb
adc
sbb
inc
jae
pop
sti
cmp
ret
scas
inc
inc
push
outsl
ljmp
lret
mov
ss
bound
and
ljmp
jg
mov
call
pop
push
orl
sbb
shl
test
imulb
loope
lcall
pop
push
lea
pop
lods
adc
cmp
jne
mov
jg
sbb
test
add
fstpt
dec
jns
ret
stc
add
sbb
clc
push
mov
push
imul
sbb
orb
je
lret
mov
repnz
pop
loop
cmpsl
pusha
out
sub
stos
xchg
stos
or
idivb
lods
inc
outsl
pop
adc
xchg
mov
mov
dec
push
hlt
fldenv
fsubp
mov
cmp
ljmp
hlt
dec
int
and
xlat
or
outsb
push
sbb
sar
jmp
mov
jbe
cmp
fld
jne
push
dec
fucomip
mov
leave
or
sub
sti
ret
cmp
ljmp
lret
daa
mov
test
sbb
xchg
mov
mov
xor
push
mov
popf
inc
mov
lret
jmp
fld1
add
pop
je
outsl
push
xor
popf
mov
xor
mov
in
loopne
mov
push
fdivp
push
xchg
adc
incl
and
scas
std
sbb
fldcw
and
repz
in
sub
dec
lcall
xchg
outsl
jmp
aas
nop
xchg
add
gs
add
sub
inc
xor
adc
pop
stos
dec
mov
shl
mov
jmp
pop
push
imul
add
popa
push
je
movsb
ja
clc
clc
push
push
orps
clc
pushl
outsb
xchg
ret
jg
xchg
cs
push
or
mov
ljmp
into
mov
cld
pushl
cwtl
loope
add
sbb
jle
pop
ja
xchg
or
out
sbb
orl
inc
in
aaa
push
jne
or
shll
addb
loop
mov
sbbl
je
insb
loop
je
das
lock
lcall
sbb
mov
push
or
clc
je
stos
mov
adc
jmp
mov
mov
sbb
mov
add
push
jns
push
mov
xor
ret
mov
push
rclb
cld
pushl
js
ret
inc
sbb
test
cli
int3
lea
subl
sub
lds
clc
rolb
je
sar
pop
jl
cmp
or
arpl
mov
xchg
es
aam
mov
outsl
cld
inc
and
add
xchg
gs
addr16
insl
lcall
lea
xor
xchg
clc
cmp
jg
movsb
add
pushl
push
icebp
fnstsw
incl
cmc
insl
dec
ret
add
mov
lods
negl
mov
mov
cwtl
adc
jl
adcb
lcall
or
cmp
cld
in
pushl
push
std
jno
cmp
loop
out
or
mov
ss
lock
std
pop
clc
ret
testl
out
cmp
cld
push
pop
rcl
jnp
or
stos
dec
decl
decl
push
jne
pop
xchg
pop
mov
je
xchg
mov
je
mov
pusha
sbb
pop
or
pop
jl
push
jns
jmp
and
inc
pushl
jg
xor
push
mov
and
add
mov
jmp
ds
incl
clc
shl
mov
mov
cmp
orl
and
mov
popf
mov
jo
or
push
lods
in
outsl
fdivrs
mov
std
es
inc
pop
mov
pop
sub
push
imul
ds
xor
movsl
jb
and
push
dec
addr16
lret
mov
add
ror
push
les
pushf
fisttps
jmp
sahf
xchg
push
dec
mov
mov
inc
adc
xlat
xlat
cli
xchg
clc
pushl
stc
mov
filds
je
jmp
pop
xlat
jg
call
mov
inc
les
scas
adc
cmp
incl
decl
push
push
test
mov
sbb
ret
test
push
pushf
pop
daa
rcl
ljmp
in
ljmp
push
sub
xor
jnp
adc
adc
ljmp
push
or
in
cmp
cmc
push
roll
jo
inc
mov
cmp
fildll
sbb
jl
stos
mov
or
shlb
add
jo
add
popf
xchg
clc
xchg
push
cmpsl
jg
inc
lea
adc
punpckhwd
shrb
xor
in
mov
aam
xlat
sbb
int3
dec
cmp
lret
sbb
arpl
incl
cmp
inc
hlt
in
push
pushl
subl
push
jp
push
mov
or
das
aaa
sub
add
mov
imul
pop
clc
sbb
dec
adc
movsb
popl
push
ljmp
pop
clc
lods
mov
sbb
ret
jnp
pop
jg
mov
and
cli
lods
cs
incl
mov
cmp
inc
and
clc
or
lods
incl
inc
push
xor
mov
adc
shrl
repz
ret
sarl
pop
inc
pusha
xorb
mov
mov
cmp
xlat
cmc
pop
push
mov
mov
aam
mov
mov
cmp
sbb
xor
pop
xor
push
jle
add
mov
in
popf
inc
leave
add
jno
adc
mov
lcall
add
decl
pop
mov
scas
imul
xchg
push
sarb
mov
mov
or
lcall
std
outsb
call
adc
push
push
clc
and
push
sarl
decl
cld
testl
push
ficoml
stos
sbb
mov
sbbb
or
popa
mov
fimull
ret
lods
add
incl
xor
arpl
je
repz
call
adc
insb
fs
mov
adc
pop
push
aas
pop
mov
push
xchg
cli
or
clc
dec
in
dec
sbb
daa
addr16
fnstenv
ljmp
std
dec
aas
sub
icebp
mov
sbb
mov
mov
mov
adc
sbb
jg
sub
out
iret
push
xchg
pop
loopne
pop
aaa
pop
call
sarb
les
push
pushl
je
ja
sbb
imul
loop
addr16
sub
jno
mov
rsm
mov
push
into
xlat
sub
pop
cli
pop
xor
into
mov
aad
mov
dec
mov
adc
mov
lcall
pop
xchg
jg
sbb
jl
pop
arpl
xor
jno
jle
loop
fldl
aad
mov
push
or
fsubrs
roll
clc
adc
in
pop
mov
pop
movsb
pop
addr16
push
aad
inc
in
dec
push
sub
inc
xchg
dec
inc
inc
icebp
mov
loop
push
gs
sbb
lods
out
dec
call
add
lds
jge
push
test
or
mov
aam
jns
dec
pop
push
je
je
ljmp
inc
dec
iret
sbb
stos
je
sbb
sbb
adc
xchg
mov
clc
pop
in
int3
push
ljmp
cld
jg
aas
les
icebp
das
fnstenv
lods
mov
lcall
pop
sti
mov
pop
adc
loope
xlat
popf
int3
xchg
test
stc
pop
cld
mov
addb
xchg
inc
xor
in
test
push
jg
jg
nop
inc
insb
pop
aam
sbb
aam
dec
and
push
or
inc
push
inc
icebp
jmp
adc
xor
sbb
hlt
fistpl
sbb
xor
nop
jno
pushl
pop
mull
ja
cld
pop
rcrl
xor
and
xchg
mov
stos
cmp
mov
dec
mov
or
cmp
rcr
mov
mov
inc
rol
jle
cmp
mov
iret
lods
jecxz
scas
fdivl
aas
jg
sbb
js
mov
arpl
js
repnz
iret
fs
cmp
test
xor
icebp
cmp
jecxz
xchg
das
cld
jg
imul
popf
sub
mov
negl
xor
adc
ret
loopne
and
lcall
push
push
insb
mov
adc
cmp
cld
adc
cmpsb
jg
inc
mov
xchg
cmpsl
sub
jno
mov
push
inc
mov
cmp
jle
push
maxps
push
mov
aad
sahf
ficoms
jmp
clc
sub
push
pop
inc
stos
popa
stc
das
jl
aam
shlb
rorb
xchg
xor
push
cld
jle
jg
pop
sbb
test
aad
clc
movsb
aas
mov
jge
mov
jmp
mov
pushf
shlb
popf
jl
jg
pop
xchg
xchg
jg
stc
jl
ds
mov
rep
clc
ds
push
pop
fs
xor
mov
cs
pop
dec
out
push
xchg
sub
stc
inc
insb
inc
jg
pop
adc
repnz
lahf
cmp
shrb
clc
test
and
imulb
mov
xor
adc
mov
jo
cmc
mov
ror
pop
dec
mov
pusha
mov
pushf
cld
dec
or
push
aaa
clc
decl
or
cmp
mov
mov
outsl
mov
mov
xorl
psrlw
in
rcl
scas
call
sbb
ret
or
test
shll
cmp
clc
inc
arpl
adc
icebp
iret
mov
sar
mov
pop
push
std
mov
pop
aaa
or
aam
adc
mov
ds
mov
pushl
jne
cmp
testl
adc
std
stos
jo
lret
shld
or
pop
rcrb
arpl
shrb
shlb
decl
and
jo
xor
sbb
and
and
mov
jecxz
imul
sahf
bound
xchg
fldt
fwait
add
or
mov
cwtl
roll
mov
sbb
cltd
mov
orb
and
ljmp
out
hlt
pop
ret
fwait
mov
test
iret
idivb
xchg
add
in
outsl
cld
lcall
gs
push
adc
les
sbb
pop
test
cwtl
loop
test
pop
pop
or
push
push
fisubs
push
pushf
iret
mov
mov
bound
icebp
mov
lret
mov
cmpsl
push
arpl
adc
jns,pn
and
push
imul
mov
data16
pop
or
cmp
pop
add
inc
imul
push
fsts
div
sbb
cmp
cli
sub
xor
dec
xor
sub
or
cli
aaa
cli
adc
jmp
jno
cs
fucomip
incl
mov
adcw
mov
lcall
cmp
xchg
lahf
fstl
adc
mov
or
xchg
fwait
je
cli
mov
mov
stos
into
xchg
cltd
enter
push
sub
sbb
inc
cs
out
jo
pop
push
push
push
add
mov
push
xor
aas
xor
inc
push
and
into
fsubrs
and
into
sti
sbb
and
pop
insl
enter
loop
push
pop
insb
into
arpl
sub
outsl
es
and
pusha
or
pop
mov
push
push
mov
sbb
leave
jae
pop
negb
call
out
icebp
xchg
stc
cmp
psubb
sub
loope
and
dec
cld
and
add
xchg
pop
jmpw
pop
lahf
pop
inc
lahf
add
lret
cld
int
mov
ljmp
int
sbb
icebp
or
negb
icebp
fdivrs
outsl
pop
jl
sbb
lea
ror
arpl
jno
clc
fadd
jo
pop
pop
mov
lock
clc
mov
lock
mov
xchg
mov
ds
ficomps
xchg
pop
ret
xchg
int
nop
jl
nop
int
jns
add
push
jl
imul
or
adc
or
and
ret
jo
pop
jmp
pop
fs
leave
adc
jg
jg
push
loope
psllw
ds
push
roll
cmp
pop
or
fistpll
or
or
and
add
jns
and
sbb
imulb
gs
or
or
ds
pop
aas
add
and
movl
hlt
jge
int3
add
pop
incl
sub
lea
sahf
add
lds
ds
scas
add
ror
das
hlt
outsl
icebp
jmp
xor
js
popa
dec
or
push
lcall
mov
sbb
aaa
cmp
call
xor
daa
and
movsl
jle
lods
les
arpl
pushl
inc
out
mov
xor
int3
dec
push
mov
js
std
call
cmp
test
lea
mov
test
jmp
js
data16
cli
lcall
sub
fistps
sti
adc
xlat
mov
lahf
sub
fnstsw
adc
pop
test
cmp
loope
sub
fisttps
and
mov
jnp
stos
sub
push
dec
jae
subb
jbe
pushl
mov
jns
adc
std
cmpsb
les
fistpll
mov
cmp
gs
int
int3
cli
push
test
mov
mov
mov
test
sub
cli
jmp
test
adcl
push
or
arpl
sbb
mov
loope
push
pop
sbb
call
jle
ret
xor
or
adc
cmpsl
shlb
bound
mov
mov
aaa
push
pusha
fwait
inc
aas
pop
push
fnstsw
lcall
xchg
je
mov
push
sub
inc
push
push
or
addr16
call
mov
push
scas
or
jmp
jge
call
or
daa
cmp
lods
xchg
in
lcall
arpl
les
gs
arpl
cmpsl
xlat
rcrb
pushf
pop
add
call
adc
mov
sbb
nop
test
aaa
pop
push
mov
ret
repnz
and
roll
aam
pop
and
cmc
aad
jg
push
or
dec
je
stos
cmpsl
stc
sub
mov
xor
ljmp
mov
jmp
sbb
setne
cmp
repz
pushl
sub
popf
mov
loop
and
daa
clc
ret
sub
test
js
lret
in
call
cmc
ljmp
mov
das
cwtl
mov
ds
jo
adc
ljmp
aam
mov
adc
outsl
jl
call
and
jl
cmc
outsl
call
push
fsubrs
xchg
cmp
fldt
push
insb
lcall
sub
adc
jg
cld
or
xchg
sbb
cli
sbb
jg
stc
pop
jnp
stos
inc
test
xchg
in
fmull
inc
cmp
ds
jle
sub
mov
cmp
and
xchg
lret
into
push
mov
cld
lcall
push
movsl
aas
ret
inc
arpl
inc
les
cmc
fdivrl
aaa
inc
push
fs
cli
popf
adc
inc
push
xchg
and
mov
xor
sub
daa
repz
clc
lods
push
cmp
jecxz
push
shr
popf
imul
lcall
dec
ss
movsb
cmp
loopne
test
ljmp
lods
leave
cli
fs
fucomip
call
scas
add
fildl
mov
add
es
jle
xchg
jg
loop
sahf
push
lea
pop
push
jl
jl
xor
movsl
push
icebp
sti
inc
mov
clc
add
or
pop
pop
sbb
decl
sbb
test
jbe
dec
lea
add
std
jg
decl
gs
lahf
and
add
daa
xchg
rcll
fcoms
sub
add
call
sub
add
cmpsb
inc
loope
bound
cmp
inc
cmp
cmp
sub
call
pop
sbb
cwtl
imul
cmp
mov
lea
push
lcall
add
popa
jecxz
push
repnz
sti
mov
add
stos
mov
pushf
mov
lcall
js
cmpsb
out
ljmp
aad
jne
jecxz
and
mov
loop
movl
cld
lods
lock
sbb
inc
leave
fisubrs
sub
mov
push
call
aaa
inc
insb
inc
lds
test
rclb
add
add
mov
and
lods
or
add
orb
je
mov
loope
push
pop
sub
jl
inc
push
inc
frstor
icebp
jnp
mov
jg
call
das
jle
pusha
xchg
push
movb
js
das
xor
testl
ljmp
add
mov
pop
pop
dec
fsubr
jns
add
out
mov
in
mov
movsb
mov
mov
sub
in
mov
inc
adc
clc
mov
pop
add
sub
dec
jne
add
fistpll
sub
popf
ss
cmp
sar
pushl
mov
dec
push
lea
adc
and
ljmp
rolb
push
pop
push
hlt
int3
out
cmp
push
pop
pop
ljmp
push
jo
enter
mov
jg
push
ret
ret
cwtl
stos
jmp
push
sbb
sub
loop
jns
imul
call
call
adc
or
add
adc
shlb
push
jecxz
push
sbb
clc
jg
sbb
push
mov
sbb
test
int3
push
mov
or
add
shlb
cld
addr16
cld
lcall
ret
pushl
pop
movsb
jno
cmpb
int
aas
push
mov
call
je
int
lea
cmp
ds
sub
push
sub
out
jae
iret
pushf
fucomip
call
cmp
push
pop
push
stc
mov
mov
mov
sbb
cmp
clc
pop
adc
aad
push
mov
sti
mov
fdivr
lea
ss
cmpl
lcall
shlb
negl
fdivrs
push
and
data16
andl
aad
arpl
dec
xor
mov
inc
dec
dec
cmp
mov
in
push
push
mov
loope
in
push
sti
imul
lods
clc
loop
cld
jg
out
stc
and
sub
out
mov
sub
sti
push
mov
lcall
inc
aad
adc
push
in
out
cmpsl
addr16
clc
pop
cmpsl
adc
jge
pushl
sbb
mov
push
jne
sbb
or
sti
inc
popf
xchg
repnz
mov
or
dec
lods
ret
sbb
ljmp
scas
push
adc
repnz
pop
sbb
pop
jo
repnz
rolb
movzbl
test
movsb
jmp
rclb
lock
inc
clc
lcall
pop
js
mov
dec
cmp
dec
dec
xchg
cmp
mov
inc
inc
negl
das
cmp
xor
arpl
mov
jb
sub
in
clc
decl
dec
lahf
cmp
lods
in
aaa
fimuls
cmp
sub
call
mov
add
adc
repz
testb
or
clc
incl
fwait
jg
pop
mov
or
ret
aam
mov
dec
popf
cmp
out
out
jle
mov
cwtl
insl
leave
test
das
std
decl
push
mov
sbb
std
inc
pushf
loop
sbb
jecxz
pushf
outsl
jl
push
pop
cs
inc
in
adc
call
or
dec
in
and
mov
loop
sbb
pop
cld
jmp
test
jne
inc
fsubp
push
stos
push
out
inc
sub
xlat
loope
push
xor
jmp
fstpt
adc
inc
fsubr
push
out
aas
pushf
into
jmp
pop
jo
pop
ljmp
enter
fcomps
sbb
sub
incl
es
scas
push
repnz
push
xor
pop
mov
mov
mov
in
xor
mov
cld
inc
mov
fmul
stos
out
pop
xor
mov
pop
decb
add
mov
je
lahf
jp
test
push
jmp
xor
mov
clc
fwait
out
in
rcrb
xchg
lock
jnp
mov
sub
incl
ret
outsw
call
xor
lcall
cld
pop
jle
pushf
mov
cmpsb
jl
mov
movsb
jecxz
xchg
jl
push
lds
push
ret
xchg
push
aad
mov
add
cmp
les
sub
out
dec
insl
sbb
je
imul
or
jg
enter
push
inc
lret
jmp
icebp
dec
pop
arpl
pop
leave
push
in
lret
call
stc
jno
repz
scas
push
pop
sbb
jae
in
call
ss
cli
jb
xchg
pop
lods
adc
inc
stos
je
icebp
sbb
pop
mov
hlt
adc
imul
std
inc
mov
clc
adc
sbb
and
std
pop
stos
push
icebp
lea
adc
ljmp
lea
aaa
arpl
mov
mov
push
and
pushf
decl
and
sahf
lock
rcrb
cld
fdivrs
sbb
mov
xor
cmp
sub
dec
imul
or
insl
push
xor
mov
xchg
les
iret
pushw
nop
in
mov
addr16
pop
mov
inc
or
pop
lahf
sbb
dec
aad
adc
ljmp
sbb
bound
pop
push
mov
and
pop
decl
insb
repnz
mov
fucomip
cmp
jle
push
fs
pop
popf
pop
cld
lcall
push
fists
idivl
pop
and
dec
js
pop
push
popf
add
or
int3
pop
cld
incl
dec
inc
fldt
lcall
jne
mov
add
push
lret
pop
push
ljmp
stos
jle
push
ret
cld
and
cmp
ret
popf
lret
pushl
xchg
add
ret
pusha
jmp
push
push
jmp
addl
sahf
pusha
xor
xchg
push
xor
iret
sub
test
pop
jg
xchg
test
cmc
push
pop
sub
sti
mov
mov
cld
sub
arpl
lods
orl
lcall
stos
sub
mov
or
pushf
push
pop
sbb
fnsave
or
sti
xchg
ret
push
push
fmul
or
push
inc
bound
add
or
cli
fidivs
ss
insb
dec
rol
and
hlt
das
mov
test
mov
arpl
repnz
shll
insb
pushf
sub
mov
mov
repz
adc
xchg
inc
sti
mov
mov
lahf
push
in
int
pop
add
dec
ret
mov
sbb
out
sub
nop
mov
rcr
fdivl
or
shl
nop
insb
mov
push
shlb
sub
or
push
gs
inc
call
clc
test
or
jno
lock
je
dec
push
mov
inc
xorl
das
lcall
pushl
sbbl
sbb
adc
adc
fmuls
pop
and
adc
cmpsl
rorl
jle
push
dec
in
fcmovnu
pop
jnp
adc
pop
push
xor
cmp
cmp
dec
push
addl
jne
pop
stos
add
sub
leave
out
mov
or
daa
pop
hlt
add
call
jne
push
es
testl
jbe
push
sarl
call
hlt
pop
das
mov
rcr
out
dec
rcr
sub
or
call
xchg
aas
insb
iret
xchg
jne
pop
jne
cmp
insb
jl
inc
mov
je
push
stc
clc
push
test
lock
jge
scas
cmp
lret
cmp
inc
sar
adc
loopne
pop
fcomps
lcall
sbb
add
xchg
mov
ja
mov
jg
cli
push
je
mov
mov
lods
push
xchg
lea
mov
sarb
and
push
ja
mov
mov
mov
push
out
adc
cmpb
mov
pop
mov
mov
addr16
jecxz
sub
push
inc
ret
scas
dec
lret
ljmp
ret
decl
sbb
lcall
dec
mov
sbb
push
sbb
inc
xor
push
push
push
jo
lock
push
dec
insb
push
shll
jg
inc
bound
adc
add
aam
repz
mov
pop
clc
das
inc
inc
mov
push
mov
xor
cmp
jmp
adc
call
inc
mov
fcos
cmp
cmp
out
ret
call
je
mov
push
adc
jb
jp
loop
inc
pop
fistl
cli
xor
cmc
push
inc
jmp
mov
call
btr
ljmp
gs
xchg
movsb
jns
das
hlt
mov
outsb
inc
push
cmp
popa
jmp
inc
mov
call
inc
icebp
sbb
xlat
jg
int3
mov
imul
mov
bound
xchg
adc
outsl
lret
out
add
push
pop
inc
fmuls
sbbb
mov
dec
test
pop
frstor
jg
call
aad
and
push
mov
repz
test
push
shlb
test
je
aad
movsl
cmpsl
lcall
decl
int
je
pop
xor
jecxz
in
inc
roll
pop
int
add
decl
inc
jp
jmp
push
push
aam
xor
adc
inc
jg
mov
sub
adc
inc
iret
lods
pop
test
incl
mov
and
pusha
loope
shll
ret
xor
sbb
jmp
adc
push
lcall
jecxz
dec
loop
mov
and
mov
shrb
jle
scas
and
and
and
sbb
jg
xor
notb
cwtl
sbb
adc
popf
xor
pushl
mov
cwtl
mov
jbe
push
int3
add
add
or
jbe
or
insb
sbb
pushl
mov
loop
add
xlat
dec
movsl
rcrb
mov
mov
movsl
push
and
scas
insb
jg
adc
icebp
call
cmc
mov
xor
push
push
adc
add
out
xor
push
lsl
sbb
shrl
push
sub
incl
jbe
adc
pop
cmpl
sub
sub
push
add
jg
pop
negb
adc
test
add
enter
adc
add
fdiv
mov
push
xchg
mov
add
dec
hlt
mov
shr
ret
in
xchg
mov
incl
mov
xor
mov
and
test
jmp
cmp
pop
jne
xchg
iret
mov
xchg
inc
sbb
decl
enter
movsl
das
cmp
jmp
cmp
xchg
sub
stos
ljmp
inc
mov
movsl
mov
sub
arpl
or
pop
incl
mov
or
push
aas
aad
cmp
decb
aad
cld
imulb
mov
incl
fbld
sbb
push
jmp
andl
or
mov
fistpl
push
pop
ret
movsl
ljmp
cmc
cld
push
loope
iret
jnp
dec
ret
jnp
pop
xchg
lock
mov
inc
loopne
mov
jp
mov
mov
cld
cmp
sbb
fcompl
lea
mov
call
scas
popa
test
pushf
jne
adc
aaa
xor
mov
jp
movups
mov
push
in
add
rolb
xor
jg
pop
dec
in
shll
out
insl
push
loope
push
in
push
sti
jnp
cld
jecxz
loop
es
fldt
pushl
scas
roll
inc
push
sub
fs
xor
sar
stos
inc
push
cmc
mov
cmpsb
or
inc
pop
ljmp
pop
adc
jae
js
pop
lods
leave
leave
pop
cmpl
enter
pop
decl
xchg
shlb
push
movsb
lds
dec
lcall
fs
cmp
jg
dec
mov
mov
sbb
sub
cmpsb
cmp
mov
hlt
fbstp
shll
shll
in
push
aaa
add
xchg
fnstsw
outsl
pop
xchg
repz
shll
mov
cwtl
mov
call
pop
sbb
pusha
fcmovb
repz
mov
in
push
call
sub
mov
or
stos
je
jmp
adc
push
lods
call
push
icebp
sbb
mov
lods
decl
fnstcw
int3
push
push
pop
push
repz
mov
enter
lds
shll
jo
xor
cmc
outsl
xchg
pop
stos
test
mov
int
push
sbb
sbb
pop
hlt
jne
inc
push
sarb
outsl
mov
incl
jp
adc
rcrb
pop
mov
push
arpl
lods
jg
jmp
nop
sub
sarb
int
loop
adc
dec
std
push
mov
sbb
shrb
repnz
push
inc
and
imul
mov
mov
neg
sub
mov
mov
mov
push
hlt
push
jbe
mov
call
sbb
or
mov
mov
cld
and
mov
push
jle
push
mov
pop
and
aam
repnz
subl
add
xchg
mov
clc
pop
cli
ret
mov
sub
cmpsb
into
mov
cmp
dec
add
push
jge
imul
or
pop
add
adcb
cmp
jae
or
js
sarb
xchg
sub
loopne
icebp
outsl
dec
pusha
mov
mov
push
dec
cmp
pop
mov
dec
into
inc
out
inc
pushf
push
lods
sub
aas
push
cmp
mov
ja
dec
dec
loopne
and
test
stc
or
in
push
cltd
dec
seto
mov
sbbl
cli
ljmp
lock
rolb
adc
mov
lcall
loopne
lcall
push
fwait
lods
cmp
lds
xchg
lock
cmpsb
cli
cmp
sub
fistps
jp
xrelease
xlat
add
push
mov
xchg
sub
push
push
jge
movsb
dec
inc
hlt
nop
call
pop
mov
mov
ret
mov
inc
mov
xor
dec
add
inc
mov
mov
jmp
sub
cmpsb
adc
lcall
push
and
daa
pop
int
inc
mov
push
xor
test
mov
cmc
ds
cmp
imul
lea
sbb
hlt
cmp
out
pushf
push
scas
sub
gs
sti
dec
std
jbe
sub
add
dec
inc
idivb
mov
jl
cld
shr
outsl
sti
mov
jo
cld
xor
jge
sbb
cwtl
lcall
pushf
insl
pop
fwait
ret
shll
pop
cmp
subl
push
mov
icebp
insb
cld
das
lock
sub
xor
ret
js
jmp
ljmp
icebp
fdivl
or
sub
mov
ss
ss
push
mov
pop
aaa
lcall
daa
add
fwait
xor
and
mov
inc
dec
cmpsl
das
push
pusha
fstpt
ljmp
fisubrs
adc
mov
or
mov
jge
inc
sub
xor
mov
lahf
add
adc
fldcw
repnz
xor
or
xor
adc
sbb
pushl
ds
push
es
fldt
call
bound
outsb
decl
cmp
and
fsubl
mov
int3
dec
aaa
mov
aam
lcall
dec
into
xor
je
cmp
mov
hlt
call
test
fisubl
js
sar
bnd
pop
push
jg
mov
pop
push
ljmp
mov
dec
iret
divb
call
ja
push
dec
sub
mov
call
data16
push
sbb
sbb
jb
inc
lcall
fucomip
pushl
add
lods
es
insb
je
mov
ret
adc
std
fcomi
jno
jl
andl
jge
mov
xchg
enter
shr
push
lods
outsl
lock
jmp
or
push
pusha
mov
add
outsl
add
or
cli
mov
mov
push
pop
test
test
inc
push
popa
loop
int
rorl
lods
incl
mov
paddsw
inc
dec
mov
cmp
mov
xchg
push
dec
jl
push
push
jmp
sar
jg
pop
and
imul
sub
mov
test
or
dec
xor
mov
adc
push
pop
inc
or
jbe
or
in
jno
add
fnstsw
decl
loopne
push
in
mov
cmpsl
adc
fs
call
divl
repnz
cs
sub
add
popf
mov
inc
pop
dec
mov
adc
rolb
jge
test
insb
push
aad
in
decl
jmp
fdivrs
adc
out
ret
mov
fistl
mov
pop
cli
fucomip
subb
daa
lret
xchg
cmp
mov
scas
mov
jns
incl
mov
mov
push
adc
fisubrs
mov
std
test
movsl
inc
imul
pushf
mov
test
aas
mov
dec
pop
mov
imul
push
test
lcall
push
push
lret
loop
push
nop
incl
outsl
ljmp
gs
sub
daa
cmp
ljmp
mov
or
aas
lret
or
insl
jge
adc
ljmp
fcoml
je
loopne
je
movzwl
mov
sbb
pop
std
mov
jl
xchg
pop
scas
jecxz
mov
mov
mov
mov
movsb
add
les
and
cmp
cs
inc
arpl
enter
sbb
cltd
sbb
adc
mov
std
pushl
pop
add
stos
ss
mov
cmp
les
inc
adc
mov
lcall
adc
leave
inc
gs
in
movsl
arpl
inc
xchg
cmpsb
arpl
icebp
pushl
xchg
and
add
pop
inc
rorb
in
imul
mov
mov
fprem
faddl
or
pop
and
pop
in
gs
sbb
cmpsb
fstl
mov
push
decb
mov
inc
push
inc
pushf
push
mov
aam
mov
lea
push
imulb
pushl
sub
cmpsl
pmaxub
aad
inc
add
adc
mov
dec
xor
out
pop
lcall
cld
or
xchg
pop
lcall
into
mov
mov
mov
dec
pminub
rcrl
fucomip
decl
jle
push
ds
popa
push
inc
lea
out
adc
rcll
sbb
fcomps
and
ss
mov
js
push
fsubr
test
add
adc
or
mov
into
insb
and
sbb
lcall
xchg
cmp
in
sbbb
lahf
lock
inc
pop
roll
mov
push
test
insb
inc
mov
jg
or
mov
pop
leave
or
rorb
or
dec
push
push
test
mov
das
sbb
and
scas
xchg
add
push
cwtl
insb
stc
mov
inc
imul
xchg
cmp
fistl
loope
pop
imul
aaa
lcall
or
int3
cld
loope
jg
imul
insb
adc
out
or
rolb
in
mov
push
in
adc
jmp
mov
dec
and
arpl
fwait
shll
add
jne
pushl
sbb
mov
inc
xorb
clc
add
int
mov
jle
xor
and
cmc
push
add
push
inc
cmp
jb
mov
test
jl
hlt
and
jae
xchg
jl
je
stc
push
push
arpl
hlt
fidivs
movsl
ljmp
mov
inc
xchg
or
scas
push
dec
jnp
cs
sbbl
aad
pop
push
adc
ljmp
icebp
imul
pop
incl
lcall
sbb
push
mov
cmp
out
xor
roll
call
bound
in
mov
rcl
sub
out
dec
sub
push
xchg
dec
sbb
ljmp
subl
push
popa
fwait
jnp
xlat
daa
iret
jp
xor
repz
sub
call
clc
sbb
dec
xor
mov
int3
je
lds
clc
xchg
pop
xchg
arpl
pop
pusha
popf
leave
pop
push
cltd
pop
sbb
cwtl
dec
pushl
mov
sbb
or
or
fsubrl
jl
add
mov
jmp
idiv
sbb
popa
aam
mov
sbb
or
les
rorb
add
push
push
jmp
pop
add
xchg
pop
push
fsts
sbb
shl
fisttpll
inc
cmc
daa
push
push
push
hlt
call
mov
lcall
adc
dec
push
fucomip
rorb
add
js
inc
mov
pop
loopne
fcoml
mov
jbe
pop
negl
push
loop
sar
mov
mov
test
inc
hlt
sub
dec
or
sbb
mov
or
inc
ss
ss
sub
int
lret
jg
pop
test
and
icebp
sbb
lods
or
arpl
pop
jp
xchg
clc
xchg
mov
nop
popf
or
test
fwait
mov
in
nop
js
dec
mov
call
call
add
mov
mov
or
ljmp
mov
cli
sbb
pop
xor
andb
mov
iret
pop
add
cmp
dec
jmp
pop
pop
cld
or
fmulp
call
adc
pusha
add
sarb
loopne
aam
ds
cmp
pushl
push
lcall
and
push
cmovnp
imul
sub
outsl
mov
sbb
mov
gs
mov
in
lea
out
push
and
je
test
movb
je
pop
test
push
pop
jg
ret
and
mov
sbb
dec
dec
leave
mov
lods
push
daa
je
movsb
incl
jno
std
mov
lea
pop
push
fwait
xor
je
adc
and
enter
lcall
aas
rolb
inc
jb
push
mull
jne
and
test
xor
call
inc
loopne
jecxz
loopne
mov
loop
in
loopne
cmp
and
cwtl
sbb
xor
add
jmp
pop
add
cs
dec
inc
jmp
fwait
fs
xchg
leave
mov
movsb
movsb
nop
mov
jecxz
mov
sub
push
add
dec
lds
enter
mov
aad
daa
push
in
or
mov
pop
adc
mov
mov
or
pop
mov
sbb
std
test
pop
decl
out
into
enter
mov
fbld
into
jg
fstpl
and
push
ljmp
xchg
in
test
aas
imul
pop
rcll
xor
lret
push
fmull
lret
add
or
ret
or
jbe
and
adc
decl
adc
xor
jle
sub
jp
sbb
es
inc
cmp
jl
loopne,pn
imul
inc
pop
popf
pop
rep
movsl
pop
repnz
pushl
xchg
fwait
ds
cmp
sub
test
jle
xchg
mov
xor
pop
add
jl
andb
mov
decl
jg
push
jle
dec
xchg
cs
push
pop
ret
push
hlt
mov
insb
lret
sar
test
lods
pop
push
add
orl
push
pop
and
clc
decl
das
test
dec
xchg
push
push
in
nop
cmpsl
mov
pop
or
ret
and
cmp
std
and
pop
jne
mov
je
or
arpl
push
jl
add
test
or
cli
add
mov
or
pop
mov
sbbb
mov
das
cmc
pushl
pushf
add
jecxz
cmp
popf
add
adc
add
push
decl
lods
jns
mov
or
mov
cmpsb
pop
sar
addl
es
lea
xchg
sbbl
xor
pop
addb
mov
pop
dec
mov
es
jg
push
sbb
pop
adc
std
and
xchg
aad
or
lcall
jbe
or
in
loope
push
sti
jns
add
pop
mov
adc
stos
xor
jg
pushl
dec
jns
adc
mov
add
fistl
fdivr
lcall
add
dec
jb
jo
or
mov
js
int3
mov
decl
std
call
test
push
sbb
lock
inc
pop
lret
cmp
call
add
rcrb
jns
lsl
mov
pop
xorb
ljmp
pusha
sub
cmp
push
sub
imul
cmpsb
pop
pop
out
jg
jmp
xor
xor
in
xorl
cmp
cmp
adc
adc
mov
pop
cmp
test
dec
int3
xor
insb
inc
fisubrl
test
fistl
pop
xor
mov
mov
pop
push
push
in
or
outsl
lock
ljmp
andl
push
aam
cmp
rorb
cmpb
mov
ljmp
fsubl
nop
sbb
xchg
dec
imul
xchg
mov
cld
test
jl
jmp
jo
cmp
notl
pop
pop
ljmp
jb
push
lret
add
or
mov
sub
push
stos
insb
lock
inc
add
cmpsb
jne
push
add
inc
xor
ljmp
mov
jmp
sbb
cs
xchg
and
mov
adc
leave
loope
call
mov
ss
cmp
xorb
aad
jg
popf
shl
mov
mov
jne
cli
std
mov
add
sub
inc
or
insb
dec
inc
mov
xchg
mov
sbb
sar
push
lcall
clc
popf
or
push
adc
sbb
mov
in
sub
das
push
fcmovnu
xchg
cmc
jae
test
nop
loopne
test
and
cmp
mov
push
inc
jmp
jmp
jge
sub
xchg
push
arpl
fs
jmp
add
ljmp
jecxz
push
and
outsl
cmc
outsl
xor
push
popf
jae
pop
mov
movsb
inc
xchg
add
decl
cmp
divb
cmpsl
hlt
popa
data16
and
mov
mov
pop
js
sbb
inc
xorl
movsb
leave
sarb
cmpl
or
pop
mov
push
inc
mov
outsl
aaa
lcall
cmp
imul
add
test
clc
std
mov
jns
std
stos
mov
stos
inc
cmpsl
aas
dec
sbb
pop
mov
in
loope
push
decl
sub
mov
inc
push
mov
insl
and
push
rcll
stos
outsl
cld
outsl
cmc
and
and
loopne
dec
pop
aas
pop
mov
loopne
or
push
repz
cld
inc
ljmp
decl
mov
push
iret
loopne
mov
and
pushl
divl
jecxz
jmp
jns
aaa
clc
pop
loopne
insb
push
lret
dec
push
sub
mov
adcb
xchg
cltd
xor
mov
in
pop
fdivrs
orl
ljmp
mov
push
ss
cmp
cmpsl
sub
dec
cld
pushl
mov
loopnew
add
das
push
call
jmp
out
movsb
sbb
fwait
ljmp
in
mov
cmp
mov
shrl
ljmp
cld
scas
dec
cmc
cmpsl
xor
insl
pop
dec
insl
in
sbb
push
xlat
pusha
push
jle
cmp
inc
sbb
xchg
mov
rcr
push
mov
call
pop
mov
push
or
or
popa
inc
cmp
popa
mov
call
inc
jae
hlt
push
xlat
ret
adc
add
arpl
orl
outsb
cmp
pop
mov
mov
mov
gs
mov
push
pushl
insl
pop
push
inc
pop
mov
sub
leave
add
sub
dec
push
daa
add
push
add
pop
adc
or
ljmp
jmp
into
mov
xlat
add
push
jg
call
push
or
sub
lods
adc
mov
mov
add
push
inc
lcall
ds
add
nop
lcall
mov
and
add
dec
leave
xchg
mov
test
xor
incl
push
mov
jle
push
push
sub
sub
jge
lret
loope
into
in
pop
call
and
add
lea
jae
shll
adc
cmp
push
lock
test
les
pop
push
test
mov
call
mov
aas
mov
stc
and
nop
xor
pop
je
add
add
lcall
int3
popf
or
icebp
inc
leave
fs
movsb
test
aam
jecxz
pop
les
adc
or
lahf
mov
pushf
mov
cmc
mov
shll
mov
and
ljmp
aam
mov
sbb
and
test
mov
cmc
lods
arpl
lds
or
jmp
sbb
dec
and
ja
xchg
dec
hlt
dec
outsl
or
sar
sbb
mov
ljmp
cmp
cld
popf
xor
mov
inc
mov
mov
fisubrl
inc
dec
push
xor
out
cmp
add
mov
lock
mov
dec
or
or
test
pop
xlat
orb
inc
inc
adc
std
testb
lcall
sub
jle
pop
inc
rcrl
movsl
inc
icebp
jmp
aaa
xlat
xchg
xor
je
clts
dec
cli
sub
decl
outsl
jg
add
inc
sahf
add
loope
and
cmp
call
jg
mov
or
mov
or
push
in
pushl
jne
stos
add
cmp
or
hlt
add
cmp
je
cmp
fmuls
and
push
cmp
std
call
fcomps
pop
jecxz
iret
sti
sbb
or
sub
or
jl
lods
incb
mov
dec
and
xor
inc
jmp
mov
pop
dec
mov
inc
add
dec
das
std
out
pop
push
stc
lret
push
xchg
mov
pop
mov
ja
ds
cs
and
test
jmp
xor
jne
push
mov
or
loope
fwait
xchg
cs
dec
or
clc
push
xor
ud0
or
popl
inc
mov
xchg
adc
xchg
cmpsl
sbb
sub
nop
pop
xorl
xor
inc
in
hlt
imul
push
lock
bound
les
jg
push
stos
inc
in
push
lret
adc
subl
mov
xor
ljmp
decl
or
repnz
dec
rcrl
notb
pop
fisttpl
insb
loope
cmc
pushl
fsubrs
xchg
inc
in
imul
cmp
decl
push
pop
jge
or
test
mov
divb
jbe
jne
mov
push
and
test
pop
loop
mov
cmp
and
cmp
and
or
inc
movsl
in
cmp
add
les
fwait
int
aam
pop
cmpsl
or
arpl
mov
popf
xchg
int3
xor
jg
incb
sbb
aaa
mov
xor
jae
push
sub
dec
testb
inc
jb
in
sahf
xor
xor
cltd
xchg
xchg
mov
sbb
dec
xchg
xor
jmp
das
mov
xor
jno
xor
add
loopne
lcall
pop
mov
mov
outsl
inc
sub
adc
lahf
pop
push
sub
mov
cli
push
mov
mov
sub
in
lcall
jecxz
push
sub
and
cli
lahf
xchg
movsl
push
and
mov
cmc
pop
loop
sub
repnz
inc
aad
push
rcl
push
int
and
aad
inc
mov
cmp
nop
ljmp
jo
xchg
mov
je
dec
iret
pop
into
or
daa
inc
push
sti
or
pop
jge
mov
cmc
decl
fistl
xchg
mov
and
add
inc
arpl
and
push
push
xchg
or
out
jg
pop
push
rcrl
out
cmp
sbb
push
jmp
pusha
add
pop
cld
cli
xor
call
aam
stc
adc
jecxz
js
mov
test
cmc
sub
xor
pushw
mov
call
pushl
adc
aas
pop
xchg
cmpl
sbb
mov
lcall
and
and
cmp
out
cmpb
mov
pop
jo
xor
mov
rorl
cmp
jg
sub
in
jo
pop
rolb
mov
daa
std
data16
mov
lcall
cld
lods
ret
imul
daa
enter
js
incl
outsl
pushl
mov
adc
mov
adc
repz
or
dec
out
call
iret
sbb
pop
cltd
adc
ljmp
ret
add
add
inc
mov
push
out
nop
imul
into
les
shr
and
repnz
insl
int
fsubl
mull
imulb
push
stc
inc
lock
dec
aaa
mov
int3
push
loop
mov
pop
out
cld
mov
mov
cmpsb
dec
xchg
pushf
pop
mov
in
clc
jmp
cld
xchg
decl
mov
test
mov
call
jnp
lcall
lods
sahf
add
sub
pushf
push
shlb
adc
dec
jl
push
iret
cmp
sub
mov
sbb
idiv
jg
negb
pop
push
push
or
dec
mov
or
push
xchg
jo
sbb
dec
imul
xorb
adc
stc
sbb
sbb
jbe
or
add
mov
repz
bound
call
daa
dec
and
je
daa
jecxz
sub
dec
mov
lea
pop
std
mov
shlb
mov
dec
xor
popa
push
mov
arpl
cld
fnstsw
shrl
cmp
push
sbb
push
fdivrp
mov
cmp
std
test
divb
jb
fbstp
rcrl
push
fs
cwtl
jg
mov
or
shlb
pop
ja
pop
jb
addl
bound
pop
ret
dec
mov
call
cmova
inc
cmp
lahf
xor
and
ljmp
or
or
add
jo
sub
add
roll
ret
adc
xchg
push
ds
or
mov
push
mov
ss
jge
mov
lock
sbb
push
push
cmp
aam
in
xor
mov
imul
adc
cmp
or
adc
push
pop
fs
mov
into
pop
xchg
ljmp
sub
cmp
sub
pop
pop
pop
add
push
add
xchg
sub
cld
jl
xor
jne
jo
je
nop
mov
mov
and
mov
adc
push
popa
cmpb
lahf
sbb
pushl
shlb
in
movsb
out
jno
or
es
push
call
dec
mov
ljmp
fwait
cltd
inc
and
into
dec
cmp
jae
pop
scas
jnp
mov
inc
imulb
in
call
mov
sti
push
sub
pop
jo
sub
add
pop
lahf
cltd
sbb
ljmp
push
adc
out
and
or
and
push
mov
stc
adc
dec
sbbl
pop
test
dec
mov
clc
dec
or
inc
ss
out
push
jp
push
popf
xchg
sbbl
stc
jae
aad
adc
inc
push
in
cmp
xor
lcall
nop
rcll
pop
mov
pop
jb
pop
gs
dec
iret
js
sub
and
jmp
arpl
insb
cs
jno
cli
xchg
decl
scas
adc
ja
insl
jo
nop
sbb
add
pop
mov
mov
in
sbb
push
jns
cltd
ds
imul
push
push
out
mov
hlt
ljmp
cld
popa
pop
pop
iret
je
cmpsl
loopne
imul
bnd
ret
pushf
and
and
ljmp
jns
orb
mov
mov
sar
cmpsb
mov
jo
mov
jg
leave
push
mov
popa
lcall
push
decl
repz
sub
decl
push
shl
in
and
pop
pop
fistl
decl
xchg
push
bound
shl
cmp
call
clc
pop
push
dec
mov
ja
aam
pop
repnz
push
pop
decl
lods
jne
into
pushf
mov
into
xor
cmpsl
pop
ds
ljmp
mov
pop
xlat
xor
mov
xchg
push
jo
xchg
inc
sub
and
pop
ficompl
fcoml
fidivs
cmc
lock
shl
les
loopne
ret
pop
push
call
movsl
jg
out
adc
in
mov
dec
jl
mov
push
fistl
xor
shr
mov
dec
pop
ljmp
lds
pushf
push
mov
pop
pop
into
mov
adc
imul
test
jnp
cmc
sbb
jle
pop
mul
loopne
add
adc
ss
jb
lods
mov
push
mov
mov
movsl
ja
cmpsb
lea
sub
das
cld
rorb
into
push
in
cmp
aam
mov
pop
clc
pushl
fstl
js
mov
fimuls
push
call
push
pop
loop
sti
jle
jno
rol
sbb
std
test
dec
push
mov
es
mov
sbb
hlt
adc
pop
cmp
mov
jb
jge
idivb
scas
jge
sbb
lods
aam
jo
jge
jg
incl
inc
inc
pop
and
add
ss
lods
insb
inc
push
int3
lcall
pop
inc
ljmp
shr
mov
jb
pop
sbb
fcoml
add
jmp
clc
subl
cmp
sbb
dec
sbb
lcall
jmp
loope
aad
decl
filds
sub
gs
decl
sarl
push
bnd
ljmp
or
out
sub
pop
and
xor
pop
and
fnstsw
call
clc
jne
fs
fbld
out
mov
loope
mov
mov
mov
inc
and
in
add
insl
roll
jg
jecxz
sub
popa
call
push
jl
mov
in
ljmp
sub
imul
ret
jmp
mov
js
cli
push
in
cmp
mov
push
or
sub
sub
push
cmc
xor
mov
rcrb
dec
pop
inc
test
test
popf
mov
add
add
cwtl
sub
mov
cmp
loop
mov
lea
mov
adc
xor
adc
outsb
sbb
loope
mov
decl
jmp
and
xchg
loop
push
movsb
push
mov
push
xchg
or
faddl
mov
cmp
fwait
sbbb
pop
jp
rolb
xlat
or
call
sarl
incl
ds
push
inc
rcrb
sti
push
cmc
loopne
xor
cmp
adc
lods
add
in
fwait
pop
cmp
mov
clc
mov
clc
loope
add
leave
and
jmp
call
rorl
add
movzbl
arpl
leave
and
movl
xor
push
adc
push
xchg
dec
mov
imul
call
add
sti
jne
xor
add
push
loop
cmp
or
nop
jl
sbb
mov
test
test
mov
xchg
call
jmp
insl
sahf
decl
and
cwtl
mov
icebp
jg
push
mov
cmp
data16
or
add
sbb
jl
out
jmp
mov
lahf
rcrb
in
dec
mov
xchg
repz
cmp
xchg
test
push
pop
xchg
and
dec
andb
mov
inc
mov
jns
xchg
lret
and
cmp
or
sbbl
ljmp
leave
fcompl
jbe
orb
pop
or
ret
or
call
xor
iret
pop
jb
fcomps
cmp
cmp
test
loopne
in
lods
jle
jae
push
sbb
ljmp
add
mov
mov
add
pop
je
inc
mov
arpl
sub
mov
cmp
ret
pop
and
and
dec
test
add
out
lea
mov
add
lds
lcall
sbb
and
add
and
fdivl
inc
mov
loopne
shrb
mov
or
dec
mov
pop
clc
cld
dec
cmp
jle
inc
ds
push
dec
pop
add
int3
mov
clc
dec
inc
loope
xor
iret
xorb
in
mov
sbb
fcomip
popa
mov
subl
cmpsl
and
sub
xor
pop
je
adc
dec
pop
loop
sub
sti
lret
ja
lret
decl
jae
rorl
dec
or
call
outsb
mov
movsl
cmc
mov
add
sbb
cltd
or
out
adc
in
es
clc
add
decl
clc
into
test
ret
add
mov
xchg
test
shl
lret
inc
jnp
gs
cld
repnz
ret
jle
nop
mov
pop
push
movsb
test
fimuls
jmp
pop
pop
fstps
cmp
movsl
loop
cmp
pushl
stc
jmp
call
jg
xor
pop
push
sti
or
add
push
cld
fisubl
sub
mov
or
sbb
add
inc
and
ljmp
jecxz
ret
jbe
movsl
xor
mov
inc
or
pop
cmpsb
fsts
jne
sbb
cmp
call
dec
loopne
inc
loopne
lcall
js
pushl
mov
stos
jg
sub
ljmp
push
push
lds
jne
push
and
cmpsb
dec
pop
popa
cs
lock
or
in
cmp
or
je
add
sbb
cli
xchg
shlb
test
push
lock
flds
jg
das
pop
mov
push
out
pop
fistps
xchg
mov
jl
dec
movsb
jnp
jle
lcall
cld
icebp
or
sub
cmpsb
jl
ljmp
pop
add
mov
test
call
lcall
pop
subb
shlb
and
cmc
decl
int3
xor
inc
jno
or
stos
aas
sbb
ljmp
cmpsb
jecxz
xor
dec
mov
inc
and
mov
test
jne
jmp
or
and
and
pop
repnz
dec
adc
fsubp
lock
pop
dec
ss
int
ror
push
push
out
dec
jo
loopne
mov
and
inc
cmpb
cmpsl
cmc
adc
inc
shr
push
pusha
mov
fucomip
or
xor
dec
test
pop
cmp
jmp
add
enter
cmp
je
inc
lret
cwtl
cmp
jg
mov
adc
add
jg
mov
and
add
sbb
jmp
sub
add
xchg
jge
stos
dec
clc
cltd
adc
or
clc
call
or
mov
aad
mov
inc
mov
in
incl
sbb
sbb
mov
lret
push
sub
or
mov
jne
push
cmp
add
jmp
inc
mov
addr16
push
clc
adc
jg
fucomip
call
jne
cmp
sbb
pop
push
or
negl
mov
lods
js
test
incl
bound
je
into
inc
cvttps2pi
gs
call
mov
or
adc
outsl
jae
ret
ljmp
add
into
iret
aaa
push
cs
leave
mov
push
mov
add
incl
mov
addr16
lea
dec
loopne
inc
push
or
push
movsl
jg
movsb
ljmp
lcall
inc
pop
add
add
test
ljmp
subb
fmuls
adc
mov
ret
xor
push
jb
in
add
xor
mov
jle
aam
mov
movl
mov
mov
dec
hlt
push
movl
shr
mov
mov
sub
push
mov
loope
add
fdivrs
mov
pop
imul
out
jge
jno
dec
or
lahf
sar
decl
into
cltd
mov
jb
pop
push
call
orb
sbb
ljmp
lds
test
push
dec
mov
sub
jg
pusha
daa
ret
or
loope
xlat
or
packsswb
jmp
rol
inc
sahf
mov
pushf
inc
jo
test
sub
fldl
xor
sbb
jecxz
mov
cld
out
out
inc
xchg
shrd
test
popf
xor
pop
mov
ret
dec
inc
aaa
add
jg
adc
ret
int3
add
dec
rcll
roll
mov
adc
mov
pop
decl
or
cmp
cmpb
incb
jle
rolb
add
add
gs
call
test
test
xchg
push
fcos
cmp
popa
add
int
sub
cmc
call
or
mov
lods
cld
std
fiaddl
lods
cmp
movsl
incb
adc
or
jbe
shl
clc
in
cmpb
pop
mov
shr
jecxz
and
stc
jg
sub
and
cmp
pop
inc
in
xchg
mov
mov
and
sar
enter
push
push
loopne
lea
loop
jecxz
int3
push
lret
pusha
add
mov
cmp
clc
pushl
dec
lock
pop
add
or
pop
movsb
pop
into
mov
dec
outsb
sub
add
movl
lcall
js
inc
mov
mov
jns
das
jb
sbb
adc
or
add
lock
cld
cld
push
jecxz
iret
in
mov
mov
mov
sbb
pop
call
jecxz
in
dec
lock
hlt
cmp
clc
repz
iret
decl
std
pop
mov
es
lcall
mov
lock
add
pop
cld
jns
jo
bound
or
stc
std
adc
jmp
or
mov
addr16
dec
cld
jg
and
or
ja
pop
inc
idiv
fnstenv
sbbb
push
ds
cmp
sbb
pop
nop
call
pop
xor
les
into
mov
cmp
add
sub
out
dec
jne
lods
popa
jg
out
pop
arpl
xchg
nop
daa
mull
out
scas
dec
icebp
pushl
pop
icebp
test
mov
out
sahf
mov
das
iret
pop
sbb
adc
adc
adc
or
or
or
add
xchg
ljmp
cs
stc
aaa
xchg
mov
jnp
add
xor
mov
add
outsb
decl
dec
or
shlb
push
mov
push
xor
sbb
cli
imulb
incl
and
je
sub
pop
inc
dec
or
xor
call
jne
shl
jg
rep
je
loop
inc
dec
out
and
and
shll
sub
lock
pop
int3
xor
mov
sbb
ja
icebp
inc
dec
rorl
das
je
adc
or
mov
xchg
mov
adc
emms
aas
call
and
pop
rorb
jne
mov
mov
aam
jo
add
cli
add
and
dec
push
pop
sub
outsl
cmc
aaa
gs
inc
pop
int3
notb
lcall
jmp
decl
jns
xor
and
push
xchg
jo
pushl
jg
jb
lods
cmp
jae
test
inc
jae
push
dec
push
cmp
es
or
fisttps
mov
dec
or
incl
addr16
mov
cmp
push
inc
ret
jg
filds
frstor
pop
mov
and
jg
cmp
loopne
sbb
jne,pn
sbb
sub
pop
outsl
sub
lods
addr16
fiadds
dec
ljmp
hlt
jmp
std
jo
push
imul
bound
loope
xchg
jl
testl
mov
ds
or
add
cs
sahf
mov
mov
sahf
repnz
ret
and
out
or
lods
adc
jno
sbb
insb
jg
push
or
add
inc
mov
lret
fnclex
sbbb
push
add
lcall
fmulp
pop
sahf
or
and
and
outsl
stos
mov
jg
pop
lahf
or
push
sti
add
fstcw
mulb
lcall
incl
incb
cld
fldcw
fistpll
gs
adc
push
clc
xor
jmp
push
inc
or
pop
or
or
mov
push
test
inc
out
mov
and
mov
std
xchg
pop
cltd
ss
call
add
pop
pop
xchg
iret
or
push
mov
pushl
or
push
adc
push
cmc
insb
in
mov
sti
jg
das
lock
inc
sub
inc
std
cmpsb
xor
add
pushf
pop
lods
and
jg
jmp
imul
adc
push
into
add
adc
call
out
xor
loopne
in
xchg
adc
inc
gs
xchg
aas
and
lods
out
mov
aad
jg
mov
pop
clc
fidivrl
rcll
dec
dec
push
adc
cmc
lcall
mov
sbb
cld
push
movsl
test
pushl
jnp
or
jae
incl
jmp
ja
js
fdivs
ja
scas
push
pop
sub
pop
dec
in
sbb
hlt
inc
push
inc
and
add
sahf
sbb
pop
pop
mov
mov
fdivr
sbb
mov
push
popa
inc
shlb
sahf
cmp
les
push
in
mov
int3
scas
dec
push
push
xchg
pop
mov
pop
push
mov
aam
dec
push
add
pop
xchg
call
lods
pop
shrd
sub
stos
add
add
cwtl
jo
insb
mov
in
repz
sbb
or
neg
xor
or
pushl
jmp
dec
dec
das
sub
and
inc
mov
and
pushl
cltd
lods
jno
cmp
les
incl
cmp
cltd
add
mov
dec
cmp
mov
mov
addr16
add
mov
lret
add
adc
jg
add
cmp
jbe
sahf
inc
out
inc
mov
icebp
push
push
pop
mov
inc
jns
xor
ds
cs
lcall
dec
mov
scas
movsl
mov
add
adcl
adc
mov
inc
out
and
adcl
mov
jo
jge
jg
test
add
xor
adc
mov
aaa
jmp
dec
mov
jl
dec
add
inc
adc
lds
jno
pop
push
fstpl
ret
cli
fucomip
jmp
mov
mov
mov
mov
addb
jno
pushl
push
or
mov
mov
jne
or
dec
add
call
add
imul
push
je
out
adcl
call
lds
int
in
call
push
adc
sbb
stos
or
in
inc
cld
pushl
pushf
mov
adc
js
mov
andb
ja
xchg
or
xchg
mov
jnp
mov
pusha
lds
jmp
in
arpl
faddl
bound
pop
sti
jnp
and
add
cld
aas
cs
push
pop
sub
repz
or
icebp
cld
bound
and
or
cmp
add
jae
in
movsl
decl
fs
mov
or
or
pop
lret
add
in
pushf
sub
inc
jae
pop
paddw
pop
xchg
mov
sahf
lods
jns
mov
sbb
add
or
sbb
btl
lcall
dec
test
sbb
cmp
add
cmpsb
or
pop
or
lds
sub
fnstenv
xor
pop
stos
push
call
push
push
mov
popf
lcall
lcall
jg
ret
cs
rcrl
mov
add
inc
pop
push
call
cwtl
push
add
imul
dec
ret
std
call
fcmovbe
xchg
xor
bound
adc
outsl
aad
mov
inc
xchg
das
insl
aam
adc
cmpsb
or
or
leave
jg
incl
test
loop
into
dec
mov
imul
jb
lock
rol
cld
jns
push
icebp
or
jne
dec
outsl
lcall
sbb
aaa
jmp
add
adc
dec
outsl
lock
call
shlb
dec
jmp
mov
push
inc
pusha
push
xor
and
out
shll
lret
xchg
add
wrmsr
pop
pop
sbb
pop
pop
adc
out
lea
mov
mov
loop
push
addr16
in
sarb
divb
test
sahf
mov
inc
jmp
sub
or
mov
testl
dec
lds
jge
pushl
insl
andl
fdivl
mov
or
repnz
inc
ret
mov
sar
pusha
or
pop
mov
lea
cmpb
inc
pop
outsl
imul
arpl
jg
xor
xor
inc
adcl
and
lock
orl
cmp
js
das
dec
ljmp
out
mov
movsb
cmp
fldcw
decl
mov
je
scas
in
sub
push
dec
mov
sub
push
repz
fdiv
loop
or
push
pop
pop
test
lds
jne
test
mov
mov
inc
clc
outsl
std
jmp
add
and
jb
test
dec
mov
mov
xchg
in
scas
mov
and
sbb
cmp
sti
jb
adc
rcr
sbb
pop
add
adc
mov
decb
cld
mov
pop
adcl
xlat
fdivl
add
jmp
pop
es
popa
or
and
pop
cwtl
inc
xlat
mov
bound
sub
rcl
ret
sbb
jo
dec
add
jg
fmul
rcll
lret
ret
adc
mov
inc
inc
pop
dec
roll
lar
pushl
pop
inc
rcrb
rorl
mov
and
insl
push
cs
sub
ljmp
lds
nop
cmp
add
movzbl
and
scas
aam
lahf
jmp
mov
jnp
mov
xor
dec
or
pop
rorb
pop
jg
sub
inc
sub
cmovb
fcmovnbe
inc
inc
or
and
aaa
push
jmp
cmp
aam
sbb
fisttps
shlb
std
inc
push
ret
jne
dec
pop
jg
pop
cli
xchg
inc
inc
out
lds
fs
decl
mov
lods
ficomps
test
je
rclb
bound
push
pushl
loop
mov
mov
jge,pn
movsl
jmp
xor
addr16
jo
dec
call
in
sub
mov
pop
sub
and
fcoms
mov
loopne
cmp
scas
push
pop
jne
mov
xchg
inc
cli
push
sarl
iret
pusha
rolb
jecxz
add
loope
test
in
jle
fs
dec
dec
cmc
mov
lods
push
daa
lock
pop
sub
adc
shr
jecxz
fbld
fnstenv
pop
add
bound
incl
sub
and
shll
and
sti
push
push
inc
xorb
mov
and
pop
loopne
lea
lcall
and
fmuls
jae
sti
sbb
shl
je
nop
inc
adc
decb
test
in
or
push
push
rcll
adc
call
or
sbb
xor
loopne
nop
icebp
decl
lock
iret
xor
sbb
jne
mov
rcl
and
pusha
pop
or
jne
les
pop
jg
inc
fdivs
leave
out
cmp
in
out
xlat
adc
push
jmp
push
test
jmp
lahf
sub
aaa
mov
jmp
mov
jg
cmp
fidivs
ret
jb
mov
add
call
add
push
jmp
mov
gs
rorl
cmp
xor
divl
xorb
mov
inc
cmp
fs
insl
mov
mov
pop
adc
imul
iret
clc
sbb
jmp
shlb
or
pop
pop
lahf
fdivp
lcall
daa
add
jb
sub
adc
cmp
xor
mov
add
sbb
mov
fsubrl
or
mov
cmp
mov
and
pop
iret
inc
lcall
jmp
and
add
jge
aam
or
mov
sbb
inc
push
xchg
pop
and
movsl
lcall
adc
sbb
iret
test
mov
mov
sub
bound
pusha
and
neg
testl
inc
jg
incl
adc
xchg
inc
pop
and
inc
sbb
sub
movsb
stc
add
jg
jb
mov
das
or
sub
pop
adc
mov
cmp
dec
pop
jmp
cmp
xor
cmp
adc
pop
mov
push
js
mov
cmc
mov
sarb
sub
pop
sub
fdivs
jg
adc
sbb
dec
scas
adc
rol
test
push
jmp
dec
cmpsb
sub
std
mov
cmp
lea
sub
pop
add
out
dec
jmp
xchg
jp
adc
fildl
outsb
jge
test
hlt
lcall
or
incl
push
shrb
add
ja
les
stos
in
dec
push
fsts
les
aam
mov
pop
cwtl
ss
inc
inc
cld
dec
cmp
sbb
aas
mov
sbb
cs
dec
push
test
ljmp
sub
dec
and
jns
inc
lods
dec
push
stc
inc
dec
sar
aaa
cli
je
pop
adc
pop
and
push
cmpsl
icebp
dec
out
inc
jl
mov
ljmp
sbb
push
pop
xlat
fdiv
push
or
inc
push
aaa
clc
fnstsw
mov
mov
xlat
or
sub
pop
negb
push
call
xor
mov
dec
enter
dec
xchg
std
decl
xchg
sub
pushf
inc
loopne
jae
mov
adc
out
add
and
call
inc
jge
gs
jg
decl
xor
cmpl
addr16
out
push
pop
xor
jne
shlb
mov
ljmp
mov
sbb
prefetch
das
and
or
and
clc
mov
mov
jmp
and
sahf
pushf
push
push
mov
add
jne
lods
pop
mov
add
jno
test
ljmp
mov
cmpsb
dec
stos
fldenv
out
shll
inc
push
outsl
lock
jns
lret
std
das
add
lret
pushf
or
xchg
fdivr
lea
mov
cmp
and
jmp
cmpsl
adc
outsb
jle
scas
adc
loope
das
xor
fbld
mov
jp
dec
adc
lea
jl
or
inc
testl
cmp
adc
mov
pop
pusha
fistps
jmp
jno
stc
mov
loop
cmp
mov
je
iret
jp
and
push
jns
fs
mov
cld
aaa
cs
jns
sub
add
lods
shll
imul
je
xchg
or
sti
sub
imull
arpl
inc
add
sub
fdivrs
xor
les
cmp
movsbl
fdiv
mov
jmp
mov
cmpsl
push
dec
std
xor
das
cld
sbbl
je
mov
lock
dec
cmp
cwtl
inc
jne
pop
jno
sub
ret
push
add
mull
ljmp
add
loope
fcomps
dec
mov
pop
dec
repz
shr
jmp
enter
cwtl
cmp
push
sub
lret
fnstsw
inc
call
ljmp
lcall
mov
or
lret
jg
scas
div
push
sahf
icebp
fstpt
das
shr
inc
mov
test
rclb
shr
rcr
test
ljmp
hlt
div
lock
sbb
and
add
pop
fildll
push
cmp
xor
sub
add
jecxz
lcall
add
repnz
outsb
fistl
outsb
faddl
add
hlt
jmp
outsb
adc
cmp
enter
add
jl
push
push
int3
or
pushf
sub
mov
pop
cmp
divl
mov
add
push
push
jg
les
std
nop
inc
aad
and
rorb
adc
call
sbb
sbb
xchg
fcomps
leave
push
loopne
lock
cmc
test
pop
pop
fnstenv
cmp
sbb
decl
dec
popf
pushl
inc
push
daa
mov
mov
mov
data16
xchg
pusha
jne
mov
or
jp
jo
jg
sub
mov
and
dec
ljmp
mov
mov
push
int3
call
mov
outsb
adc
sub
push
push
shlb
xor
inc
push
or
call
aaa
xchg
dec
adc
or
sub
fs
cmp
loop
aaa
in
xor
mov
cmp
jne
sbb
dec
cld
inc
rorl
dec
add
push
or
cmp
callw
cmpsl
xchg
gs
fisttps
sub
cmpsl
data16
enter
push
cld
loope
adc
cmc
sbb
rclb
adc
jg
adc
mov
bound
add
pop
loop
outsl
daa
sha1msg2
cmp
jne
lea
fucomip
and
int
mov
and
xchg
or
push
ljmp
push
sbbb
ja
mov
sbb
orl
adc
mov
mov
cwtl
jbe
ror
cmc
xor
lcall
jo
push
popa
into
jnp
rcll
faddl
ret
mov
push
sub
jg
xchg
push
and
adc
je
cld
decl
and
or
cmp
js
sub
or
pop
nop
adc
fstpt
popa
dec
pop
jno
jne
insb
pop
add
xchg
xor
cmp
testl
pushl
movsl
adc
jnp
push
ror
sub
jno
cmp
jg
clc
or
sub
ret
sub
into
sub
push
in
or
incl
xlat
jae
mov
cmp
in
dec
adc
ljmp
jmp
lods
jecxz
or
mov
adc
arpl
mov
dec
fs
pusha
fistps
fdiv
rorl
pop
pop
sahf
push
addl
jg
inc
scas
pop
mov
loope
push
or
xor
loop
ljmp
sbb
imul
jg
lcall
fsubrl
and
jb
sub
add
fstps
leave
neg
add
dec
pop
cs
das
inc
add
cmp
mov
clc
add
mov
int
icebp
call
sub
inc
shrl
mov
cmp
cmc
incl
call
out
shlb
iret
loop
pop
cmp
pushl
ss
push
cs
enter
push
js
jns
jo
push
cmpsb
adc
adc
add
jno
xchg
outsb
mov
addr16
jg
aaa
mov
inc
and
pop
mov
pop
cmpsb
xchg
sbb
jl
sbb
add
ss
lcall
leave
mov
inc
js
mov
movsb
or
mov
dec
idivl
and
fsubrl
lea
xor
cmp
inc
mov
stos
and
loop
loope
mov
subb
push
stc
add
fistps
ljmp
jge
and
arpl
fisubl
pop
and
xchg
sub
mov
ret
jmp
fidivl
pushf
or
sub
andb
andb
inc
add
or
ljmp
inc
test
pop
ss
and
xor
or
push
push
dec
incl
stos
les
scas
cmp
test
jns
or
in
sbb
or
inc
jno
dec
inc
test
insb
inc
sbb
jg
xchg
faddl
data16
sub
rcl
dec
out
xor
xor
and
or
mov
movsl
fs
mov
sub
xchg
inc
leave
stos
mov
pusha
add
mov
rcl
aaa
cs
adc
inc
inc
les
in
cli
jmp
lea
or
cmp
xchg
shr
jg
mov
outsb
or
in
js
sub
mov
lea
mov
pop
and
mov
leave
js
add
inc
xchg
stos
aaa
lods
fsubp
lcall
add
push
sub
ljmp
jne
je
imul
jl
or
sbb
cltd
xchg
xchg
lcall
je
dec
push
sub
push
rolb
cmp
jg
push
out
sbb
push
pushf
pushl
or
jge
add
cmp
push
jmp
adc
cld
rcrb
ss
xchg
xchg
out
xor
pop
lods
and
adc
incl
push
fsubrs
cld
cmp
jb
mov
mov
add
jg
lcall
in
pop
push
ljmp
xor
test
pop
jne
xlat
and
and
dec
es
shrl
stos
jae
mov
cltd
adc
call
call
es
imul
jb
cmpb
jne
xchg
inc
inc
je
loopne
mov
mov
pop
mov
movsl
outsl
push
inc
inc
aam
pop
mov
mov
mov
and
leave
mov
loopne
add
aaa
gs
in
testb
dec
out
sbb
lcall
das
ret
loopne
pop
je
into
cs
mov
mov
mov
outsl
iret
cs
in
sbb
sub
ss
jae
icebp
adc
cld
ljmp
mov
fidivrl
ss
xor
in
or
outsb
and
lcall
pop
add
jb
daa
jle,pt
ja
mov
das
hlt
fucomip
mov
sub
es
cld
push
loopne
and
or
and
mov
stc
and
pop
push
iret
sar
shrb
lods
mov
push
rorb
pop
pop
dec
mov
outsl
cmc
dec
push
inc
rcrl
push
jo
jecxz
mov
and
test
repnz
jb
std
fists
mov
xor
adc
fs
or
pop
ja
aad
incl
not
pop
mov
and
stos
insl
pusha
outsl
out
dec
mov
add
cmp
mov
pusha
stos
pop
and
mov
dec
ljmp
incl
mov
pop
xor
xor
pop
and
popa
pop
call
mov
test
sub
mov
out
mov
sbb
shl
dec
add
jno
pop
outsl
scas
pop
push
sub
jecxz
pop
push
jmp
inc
add
fwait
inc
mov
mov
sarb
add
cs
xor
aas
mov
ljmp
lds
or
lret
js
call
pop
mov
mov
push
dec
pop
dec
mov
clts
outsl
cli
mov
pop
cli
decl
mov
enter
or
pop
arpl
js
decl
mov
mov
movsb
mov
andb
lds
rorb
call
dec
xlat
sub
pop
lcall
outsb
and
add
imul
cwtl
cwtl
test
push
mov
mov
add
call
jns
add
xchg
int3
mov
xor
xor
and
pop
and
clc
incl
shr
pop
or
movl
aaa
insb
xchg
inc
xchg
das
loop
in
pop
dec
notb
push
push
mov
inc
sub
xchg
mov
inc
xchg
mov
int3
insl
mov
aad
pop
adc
jne
ss
sbb
cmpl
add
add
sahf
jno
fnstsw
mov
dec
sbb
push
daa
xchg
daa
push
ret
push
sbb
daa
adc
push
loop
pop
mov
rolb
mov
ljmp
pop
pop
mov
sbb
int3
mov
dec
mov
in
dec
mov
les
incl
les
sub
insb
shlb
push
fwait
push
pushw
gs
cmpl
and
pop
ret
cmp
xchg
sub
orl
push
mov
ss
add
sub
test
push
pop
fsubrs
jle
cmp
js
jb
adc
or
jb
aad
ret
fmull
nop
dec
stos
pop
push
push
inc
jno
nop
ficompl
adc
xor
and
mov
mov
cmp
add
dec
or
add
decl
lahf
inc
or
ds
inc
mov
das
or
or
dec
pop
adc
push
test
movsl
dec
cmp
jae
lahf
add
push
repnz
cmpl
fsubs
push
and
and
test
fbld
cmp
mov
jmp
cmp
xor
lods
incb
ja
adc
add
mov
imul
cli
mov
mov
cmp
push
push
xchg
jno
jbe
adc
ljmp
jne
mov
mov
lds
mov
push
decl
fdivs
cmp
adc
mov
dec
jle
jb
scas
dec
sahf
xchg
mov
das
jl
push
cmpsl
mov
rcl
and
incl
push
xor
mov
and
test
dec
adc
xchg
lcall
mov
mov
shll
addb
or
cli
pop
add
pop
pop
lock
dec
adc
jmp
mov
aad
dec
dec
or
mov
pop
mov
decb
or
incl
popf
imul
mov
loopne
dec
lock
inc
loop
pop
ljmp
test
sbb
xor
call
leave
add
jg
ret
movsl
add
sar
dec
cmp
aas
jbe
add
pop
mov
cmp
dec
or
inc
std
lea
add
jae
mov
call
mov
add
shll
pop
mov
jne
orl
push
decl
push
mov
addr16
mov
mov
add
xor
dec
hlt
mov
or
repnz
mov
mov
mov
push
inc
jb
ljmp
lock
fucomp
hlt
mov
xor
into
mov
mov
add
decl
call
mov
add
cmp
jbe
ljmp
mov
adc
fucomip
call
cmp
je
into
bound
jno
mov
push
sbb
ror
out
not
inc
mov
mov
es
inc
xor
js
dec
push
sub
das
mov
cmp
cmp
cmp
dec
mov
or
or
out
jbe
dec
popa
mov
hlt
out
lock
clc
je
mov
ret
add
mov
jae
fsubrl
aaa
pop
jg
or
push
xor
mov
decl
and
and
dec
push
pop
outsl
jne
or
insl
jno
pusha
lods
or
jmp
sub
jg
es
and
mov
test
ljmp
jne
push
icebp
inc
xor
or
or
jge
out
inc
fsubl
decl
xor
rorl
push
add
push
mov
sub
call
mov
pop
mov
pop
loope
push
or
clc
cmp
push
andl
das
dec
inc
or
incl
incl
dec
adc
cmp
insb
adc
imul
das
mov
or
adc
sub
repz
loopne
sub
orb
push
das
aaa
cs
jg
adc
std
push
dec
sti
cmp
mov
inc
jmp
pop
cld
jbe
dec
insl
or
insl
push
mov
sub
mov
pop
jae
arpl
sahf
xor
push
lea
sbb
orl
loope
and
stc
push
mov
jp
mov
sub
imul
shr
mul
mov
fadd
fcoms
and
jg
adcb
iret
jne
or
pusha
push
xadd
inc
jmp
mov
mov
push
es
adc
out
incl
in
jae
scas
jnp
mov
sub
es
or
push
mov
addr16
xchg
push
add
push
je
xlat
decl
jmp
pop
sbb
mov
mov
cmp
inc
lods
sarb
lock
sbb
lds
cli
test
push
cld
subb
or
ljmp
add
inc
mov
mov
adc
adc
xlat
lcall
lcall
push
inc
sub
sbb
or
daa
lea
cld
sbb
xchg
imul
and
cmp
xchg
cwtl
sbb
jmp
bound
jmp
push
into
cmp
push
in
pop
xor
jl
add
loope
jmp
mov
and
std
ljmp
cld
or
cmp
icebp
mov
sar
dec
cmp
inc
jle
xor
cli
cmp
decl
dec
popa
orl
sub
mov
inc
xor
jl
push
repz
and
jo
mov
cmp
xchg
and
data16
and
jae
sub
lcall
sub
test
pop
push
ret
mov
mov
clc
decl
sbb
stos
rorl
test
mov
mov
mov
sar
pop
lock
sbb
or
scas
pusha
xchg
or
cld
sbb
std
mov
pusha
into
shr
sub
icebp
call
decb
fimuls
dec
das
sub
or
and
sub
push
mov
push
sbb
and
sbb
or
adc
xchg
add
add
inc
xor
jbe
shlb
sidtl
xchg
jne,pt
cmp
dec
inc
cmp
adc
incl
pop
sub
or
add
or
das
icebp
dec
outsl
jnp
xor
mov
jg
daa
sub
je
mov
lcall
push
inc
or
xor
mov
repz
inc
adc
shll
dec
sbb
mov
dec
dec
shlb
out
lods
lods
fs
mov
ss
adc
js
jle
call
bound
adc
jmp
push
loopne
fidivl
enter
jg
aaa
add
ret
loopne
ret
mov
imul
clc
sbb
subb
jmp
testb
add
in
sti
xchg
xor
sbb
jg
decl
push
dec
mov
add
pop
jo
psubd
ljmp
inc
ja
dec
repnz
add
cld
jo
movl
out
inc
push
push
pop
lret
add
sub
adc
ss
lock
push
push
sar
jg
orl
lret
mov
movsl
decl
rorl
mov
mov
enter
sarb
incl
decl
add
js
mov
not
jns
add
cwtl
and
call
js
cld
rolb
cltd
cmp
lea
sub
jmp
pushl
ljmp
dec
cld
dec
cmp
cmp
jle
ret
outsl
push
ljmp
loopne
fnstcw
push
repz
ficompl
cmp
call
push
inc
aas
lea
jbe
dec
lcall
pop
push
dec
push
adc
lods
push
lock
clc
lods
xchg
icebp
inc
nop
jg
and
pop
and
pushf
nop
clc
hlt
dec
pop
incl
ljmp
popa
mov
mov
nop
jnp
lret
das
hlt
mov
push
sar
add
inc
pop
xor
inc
cli
jo
cld
jg
hlt
or
cmp
pop
mov
out
add
into
or
outsl
mov
mov
xor
push
and
adc
iret
cli
addr16
das
gs
and
loope
test
mov
call
aam
xchg
push
jg
inc
inc
jae
pushf
js
fiaddl
mov
inc
popa
pushl
clc
mov
jae
lods
insl
cmpl
lea
push
pop
or
jbe
mov
incl
adc
sbb
xor
xchg
mov
pop
divb
scas
jg
adc
movsl
lds
cmp
rcrb
cmp
mov
jns
xchg
imul
mov
jbe
jns
ja
jno
ja
jg
cmc
and
pushl
outsb
in
es
xchg
push
dec
leave
jo
js
int
insb
push
jg
cmp
aas
cmp
into
mov
inc
dec
jns
addr16
ljmp
adc
add
cld
sub
cmp
mov
fisttps
fsub
mov
out
jg
push
ljmp
jb
sub
sub
mov
rorb
sub
sbb
ljmp
sahf
scas
pop
mov
push
jno
inc
bound
in
xor
data16
js
jmp
enter
incl
mov
mov
bound
xchg
lea
ret
adc
xchg
or
dec
ljmp
adc
mov
in
sub
std
adc
setge
dec
and
dec
inc
call
xchg
mov
jl
inc
jge
mov
mov
add
ret
cmp
jae
in
orb
addb
mov
sub
mov
jecxz
fstpt
mov
cmp
call
dec
and
dec
pop
out
pop
mov
xor
stos
movsl
sbb
push
sbb
into
or
inc
and
pop
lret
inc
mov
std
movsl
test
or
nop
iret
mov
sub
push
sub
push
sub
xor
mov
aas
push
pop
aas
mov
jl
xchg
shrl
fidivs
or
lcall
pop
add
call
je
arpl
lret
xchg
adc
int3
fs
or
andb
das
std
fstpt
movsb
and
mov
je
mov
lcall
jne
nop
roll
and
out
or
push
mov
lret
out
pop
jne
iret
add
inc
pop
cmp
mov
mov
add
cmc
pushf
lds
lret
or
clc
call
cmp
mov
xor
out
test
xor
mov
call
loopne
mov
and
decl
jmp
dec
mov
push
push
mov
inc
or
xchg
je
nop
loop
incl
ljmp
dec
xor
or
push
enter
or
mov
push
addl
mov
add
and
popf
loope
es
dec
and
sbb
mov
movsl
data16
and
mov
xchg
xchg
fsubrs
imul
movb
inc
ljmp
add
cmp
jo
jae
mov
int
cmp
jl
cmp
jbe
adc
lcall
adc
data16
or
int3
cli
inc
mov
in
aaa
jb
enter
sbb
fucomip
jle
xor
es
push
jl
dec
mov
push
push
push
pop
fisttpll
es
dec
cmpl
cmp
clc
jb
inc
ret
jle
ss
mov
adc
mov
sub
lret
js
incl
imul
push
add
stos
aas
sub
cmp
outsl
hlt
xlat
add
adc
aad
repz
xor
pop
clc
out
arpl
decb
cmp
out
jge
cmp
cmp
outsl
aad
divb
rol
loopne
shrl
push
push
mov
ret
std
jg
mov
sub
insb
pop
xchg
cmpsb
je
arpl
pop
adc
mov
mov
sbb
gs
orb
mov
scas
dec
pushl
incl
lods
sbb
pusha
push
jne
inc
les
push
out
mov
jae
sub
cmp
add
or
add
mov
aas
rclb
sub
sub
call
xchg
cmp
sub
in
or
loop
fbld
sbb
sbb
jne
jmp
sub
mov
fsubrp
call
and
sub
sbb
neg
lcall
xchg
insb
mov
jns
pop
cltd
xor
cltd
mov
cmpsl
dec
add
push
mov
jg
mov
pusha
movsl
jae
rcll
sub
mov
fs
sub
xor
jno
test
push
pusha
fs
dec
or
jae
sbb
pop
insl
mov
and
testb
jmp
fld
push
jae
cmp
ljmp
xchg
cmp
mov
cltd
push
mov
jmp
pop
mov
jne
mov
or
jae
jp
push
clc
sbb
pushl
add
jae
mov
mov
sub
push
push
and
call
cmp
inc
test
sbb
mov
xor
lcall
xchg
jae
inc
mov
es
out
push
jmp
popa
add
add
jmp
inc
aaa
push
mov
mov
xor
rdpmc
xor
and
push
clc
ret
ret
inc
or
mov
pushf
pop
mov
aaa
clc
pushl
jbe
sbb
sbb
mov
int3
insb
lret
std
pusha
jmp
outsl
inc
jmp
gs
and
sub
push
shrb
or
jmp
mov
hlt
cwtl
xchg
inc
pop
mov
mov
shrb
ja
mov
ljmp
mov
daa
jl
lock
xor
push
gs
cmpb
pop
mov
stos
inc
arpl
out
mov
inc
outsl
decl
cltd
nop
and
push
pusha
xor
loope
fldz
inc
rcl
out
xchg
jmp
pop
pop
clc
les
mov
dec
pop
adc
inc
cmp
dec
fucomip
sbb
pop
dec
daa
and
cmp
pop
out
sahf
lds
mov
or
fnstsw
push
dec
lock
sarl
mov
das
mov
icebp
fbld
cli
xchg
xchg
sub
into
dec
fnstsw
pop
adc
dec
cltd
push
popf
into
or
dec
cmpsl
repz
inc
push
sbb
xor
int
add
xchg
pop
push
add
dec
adc
rcll
lds
rclb
rorb
pop
add
je,pt
cmp
outsl
icebp
incl
test
adc
repz
and
mov
pushf
stos
pop
nop
adc
adc
adc
das
push
add
not
and
and
lods
fucomp
add
or
sbb
out
sbb
mov
pop
notb
cs
sti
pop
sahf
stos
cld
shll
iret
ficomps
cld
movsl
call
pop
insl
push
push
je
call
test
call
ret
or
or
mov
pushf
xchg
or
call
jae
subl
xor
xchg
sub
aaa
pop
lret
je
xchg
sub
in
mov
mov
outsl
mov
or
lret
pushf
dec
mov
call
xchg
call
and
and
aas
jmp
or
decl
jmp
stos
sub
push
into
push
in
mov
shrb
and
call
jbe
out
std
jg
js
and
jecxz,pn
jns
icebp
or
or
pop
adc
addr16
sar
mov
sbb
cmp
mov
js
or
rorl
sbb
pusha
add
andl
das
std
pop
sbb
mov
jbe
into
add
pop
loopne
cmpsb
mov
loope
or
mov
or
lea
out
xchg
incl
lea
and
or
out
es
add
outsb
add
std
test
jmp
push
mov
pop
cmp
pop
mov
push
test
and
adc
mov
loope
jmp
loop
shrb
xchg
sub
push
xchg
sub
add
ljmp
mov
pop
pop
adc
mov
xlat
sbb
imulb
add
jnp
sbb
jnp
ficompl
mov
pop
sahf
mov
and
mov
cmp
pushl
push
stc
fldl
fcoml
sbb
fldl
xchg
cmp
mov
or
fchs
frstor
pop
hlt
xor
outsb
mov
or
and
mov
mov
call
mov
push
mov
in
test
add
icebp
adc
les
add
test
and
lods
jo
add
inc
jnp
cmp
push
outsl
add
decl
sub
dec
cli
aad
into
popa
add
decl
cltd
gs
inc
adc
jmp
inc
mov
pop
in
lods
addb
and
or
orl
and
pop
jmp
hlt
xor
shrl
hlt
or
dec
jp
inc
pop
or
ljmp
pop
or
call
sub
das
pop
je
gs
mov
std
int
mov
mov
ljmp
sbb
mov
lcall
pop
leave
adc
psubusb
push
call
loopne
in
push
fs
divb
test
notb
decl
int
mov
scas
and
mov
and
push
leave
testb
mov
xor
int3
inc
push
xor
dec
pusha
cmp
popf
push
mov
lcall
cmp
adc
nop
push
inc
decl
ret
xor
mov
fidivl
les
cmp
icebp
decl
mov
push
or
addl
xchg
xchg
test
push
push
or
pop
inc
xor
loopne
mov
cld
sbb
sbb
mov
jb
incl
sbbb
cwtl
or
pop
cmpsl
sub
mov
lock
or
incl
push
cmp
pop
cmp
dec
sbb
enter
incl
push
pop
stc
xor
inc
mull
incl
inc
lea
sbbl
pop
shll
rcrb
dec
sub
push
aad
cltd
inc
xor
lea
push
cmp
dec
decl
inc
cmp
push
mov
fwait
mov
push
scas
mov
sub
cs
or
addb
orl
add
orb
dec
pop
cmp
into
push
stos
outsb
loop
ss
adc
jecxz
or
inc
add
movsl
mov
shlb
das
sbb
rcrl
lahf
sub
loop
test
jg
mov
inc
and
or
jo
insl
or
and
icebp
push
mov
std
mov
or
fldt
sub
pop
xor
fwait
mov
xlat
adc
subb
or
imul
inc
movsl
lcall
dec
rclb
pop
sbb
jne
ljmp
and
xor
loopne
into
lahf
pop
pop
fdivrp
data16
sbb
pop
stos
cli
push
xor
jne
sub
dec
add
mov
pop
pop
call
loopne
es
push
xchg
cmp
in
sub
add
lcall
adc
mov
jmp
jns
jmp
popa
pop
mov
mov
insl
or
fbld
je
inc
sbb
fmull
mov
stc
sub
cltd
push
pop
addr16
lret
aam
imulb
mov
push
inc
mov
mov
dec
jg
cli
roll
lea
adc
mov
cmp
pusha
decl
mov
jmp
incl
je
cmp
or
sbb
inc
or
dec
cmpb
je
cli
push
mov
jg
add
adc
jg
mov
sub
and
jg
xchg
cli
mov
pop
mov
jmp
rorb
dec
lcall
call
rolb
ja
sbb
out
sub
inc
stos
rcrb
pop
lock
dec
or
ret
dec
aad
fisttpl
lahf
rcll
sbb
sub
lret
rcll
lea
incl
mov
cs
scas
sbb
add
idivl
mov
inc
hlt
shrb
add
mov
jnp
fs
fisubrs
call
push
subb
jns
adc
jmp
aaa
push
or
add
inc
adc
or
mov
movb
cmpsb
mov
inc
es
mov
dec
or
neg
adc
sub
sti
add
fs
mov
fs
pop
idiv
addr16
pop
mov
push
cmp
dec
incl
fs
xor
mov
and
xor
push
xchg
or
sub
loopne
mov
xchg
fcmovnbe
mov
mov
mov
cmpsb
xchg
jl
mov
les
imul
icebp
decl
add
push
call
movb
jge
sub
mov
cmc
pop
lahf
pop
rol
xor
inc
mov
sbb
adc
shll
ret
pop
idivb
sub
dec
pop
ficomps
jl
ja
js
push
xor
stc
iret
call
xchg
mov
mov
pop
push
mov
adc
mov
mov
ljmp
cld
orb
out
dec
sub
pusha
setl
mov
jg
cmp
add
popa
sub
mov
and
aaa
jge
lea
jne
sub
mov
nop
add
sbb
push
xchg
data16
cltd
inc
into
cmpsl
adc
testb
rorb
repnz
and
fmul
clc
call
movsl
mov
cltd
insb
xor
sbb
mov
push
mov
sti
fs
adc
out
incl
cwtl
mov
adc
adc
jae
fdivl
rcl
inc
and
call
mov
loopne
push
les
cld
ljmp
out
add
push
mov
sbb
jmp
pushl
in
fs
jge
pop
jle
cwtl
movsl
outsl
in
or
popa
imul
das
std
outsl
jmp
xchg
in
jno
jmp
arpl
push
cmpl
loopne
js
in
mov
sbb
mov
and
push
cmp
lcall
cmp
or
mov
pop
mov
ficomps
icebp
push
xchg
inc
and
sbb
inc
adc
or
xchg
sub
add
jl
fs
clc
ret
xor
jle
pushf
jbe
cmp
mov
mov
imul
or
arpl
loop
loop
ljmp
aad
movsl
fisttps
push
cmp
stc
add
sbb
inc
and
or
hlt
dec
add
xchg
lret
loop
jae
outsl
fsub
outsl
idivb
insl
fmuls
jns
lea
sbbb
ljmp
cmc
jg
cmp
jg
mov
dec
push
xchg
inc
int3
into
popa
repz
mov
ljmp
addb
jle
sub
es
loope
incl
dec
testl
and
ret
sbbl
xor
pop
mov
and
mov
mov
aam
mov
js
xchg
mov
add
and
xchg
adc
out
or
sbb
adc
ljmp
lds
clc
inc
xchg
leave
lds
lcall
jmp
and
and
xor
mov
aam
ret
in
scas
shrl
jae
dec
jg
cmp
jl
cmp
jg
pop
and
push
push
sbb
lea
push
push
incl
mov
push
pop
pop
xlat
outsb
cmp
or
ja
jmp
shll
jl
mov
incl
decl
adc
inc
int3
or
cmp
push
call
jg
xchg
sbb
xchg
ds
jne
testb
push
testb
and
or
incl
jp
pushf
add
or
inc
jae
add
xchg
ljmp
sub
lahf
or
add
or
jg
scas
or
pop
add
and
ja
popa
and
movsb
or
pop
dec
push
incl
fs
mov
jae
xor
xor
push
dec
mov
sahf
push
icebp
ljmp
lock
jo
cmpsb
mov
and
lock
ret
pusha
aam
out
repnz
mov
call
mov
cli
sbb
adc
xor
cmp
xor
xchg
ds
add
dec
sub
jg
out
jae
icebp
outsb
push
fwait
or
push
popf
pop
jns
pop
mov
in
lcall
xchg
sbb
in
pop
mov
push
dec
mov
sub
cs
sbb
dec
aaa
arpl
mov
fmull
dec
sbb
cmp
in
loopne
loopne
movsl
call
pop
push
adc
push
mov
cmp
gs
sbb
std
add
jl
or
pop
mov
call
and
jle
xchg
jmp
aad
dec
mov
mov
leave
mov
jmp
xchg
jmp
mov
inc
mov
in
mov
push
inc
loopne
jge
cmpl
or
pushl
cli
call
xchg
pop
adc
mov
xor
test
jecxz
sbb
cli
aaa
outsb
xlat
pushf
mov
pop
incl
sbbl
addl
es
xor
lcall
enter
call
or
imul
out
adc
pusha
or
inc
mov
decl
xchg
testb
filds
test
push
pop
in
xor
cmpsl
jp
inc
aad
icebp
adc
call
xchg
sub
mov
xchg
adc
cltd
mov
fcomps
fisttpll
in
ljmp
es
push
mov
mov
lcall
ljmp
add
sbb
mov
mov
sbb
sbb
push
push
jne
mov
cmc
lcall
out
push
xor
push
pop
jmp
cmp
je
xor
outsl
cli
or
arpl
add
xor
out
and
sub
fistps
clc
jmp
pop
xchg
aas
push
sub
add
cmp
ja
int3
outsl
fucom
pop
push
ret
jecxz
mov
dec
in
adc
decl
push
pushl
dec
push
cmp
sub
push
data16
lcall
push
add
inc
or
mov
cmp
test
sarb
pop
xor
ljmp
pop
dec
adc
dec
mov
and
push
push
decl
inc
push
mov
dec
insl
dec
jp
push
push
outsl
adc
mov
decl
adc
xor
mov
sub
pop
mov
ret
lahf
mov
lock
or
mov
cwtl
pop
test
shlb
inc
sub
mov
fwait
dec
mov
push
jne
pop
stc
mov
add
ljmp
or
gs
sbb
ss
pushl
fmuls
test
xorl
test
mov
out
xor
sub
incl
mov
mov
add
jg
add
test
jbe
or
push
push
cwtl
mov
jmp
jne
scas
clc
sub
add
aad
pop
inc
int
or
sub
ds
pop
add
mov
sbb
push
bound
push
sarb
call
in
xor
sbb
mov
add
mov
and
cmp
enter
pusha
xchg
xchg
jne
cmpsb
and
inc
add
pop
test
ficompl
jmp
ffree
pop
cld
push
sbb
dec
or
jmp
ljmp
bswap
in
dec
xchg
mov
push
ret
addr16
ret
sar
ljmp
pop
push
xor
testb
lahf
and
inc
roll
lock
sar
inc
xchg
movsl
push
add
in
jl
sbbb
jl
js
push
push
pop
ljmp
jecxz
popf
and
je
into
lock
clc
gs
pusha
jmp
cs
inc
inc
mov
add
jno
sar
fdivr
jmp
sub
cmp
insb
push
add
scas
add
dec
dec
je
jmp
movsl
push
pop
push
pop
shll
mov
repz
in
and
mov
inc
mov
cltd
adc
jne
js
movsb
push
xchg
cmpsl
mov
decl
add
mov
sbb
jmp
in
add
cmpsl
fnstsw
pop
push
cmpsl
push
roll
lds
mov
jecxz
lods
push
push
dec
les
add
cmp
mov
nop
add
inc
jg
mov
mov
aas
push
ss
add
push
inc
pop
icebp
movsl
mov
ja
sbb
sbb
std
mov
and
xchg
inc
cmp
mov
shll
stos
sbb
jmp
pop
jmp
inc
mov
sub
sbbb
xchg
stos
rcr
pop
leave
movsl
xchg
cld
jg
js
inc
call
insl
jo,pn
pop
insb
adc
test
stc
mov
js
push
xor
inc
inc
int3
stos
mov
frstor
or
or
call
decb
decb
mov
leave
mov
push
or
jmp
cltd
jno
aam
cmpw
js
add
mov
mov
ret
repnz
adc
or
lret
ja
iret
jae
incl
lret
mov
ja
xchg
das
mov
xchg
xor
pushl
subb
adc
pusha
jo
lds
js
add
repz
jmp
mov
test
loope
add
xor
cmpsl
shlb
pop
inc
andb
mov
call
out
xor
mov
fdivr
dec
sbb
jg
mov
ret
fs
and
faddl
mov
int3
cld
in
inc
jnp
ret
lock
sub
or
mov
sub
lcall
test
adc
negl
xlat
xorl
call
fdivr
add
jns
mov
adc
push
out
imul
hlt
jmp
jne
cmp
add
arpl
mov
imul
imul
out
loopne
cmp
test
inc
je
xor
cs
xor
mov
and
xchg
mov
add
jmp
movsl
jbe
mov
test
cmpsl
add
cs
icebp
es
repnz
insb
ljmp
inc
mov
je
mov
pop
fimuls
ljmp
inc
mov
por
dec
stc
and
sarl
jo
add
xor
cld
xchg
ficomps
dec
and
xchg
loope
add
cmc
push
lcall
pop
lcall
imul
pop
jmp
mov
je,pn
add
aad
dec
push
bswap
mov
and
adc
mov
loopne
pop
xor
mov
jg
jl
mov
pop
std
call
dec
shlb
neg
xor
or
jmp
xor
jne
lcall
sub
out
mov
std
nop
out
lock
or
jne
or
inc
lea
sbb
popa
inc
mov
dec
out
jo
hlt
decl
push
push
push
fs
jbe
sti
and
mov
shlb
fisubs
jg
mov
jle
add
add
cmpl
jmp
push
sub
xchg
fs
ds
bound
lds
test
adc
pop
xor
lcall
sarb
cld
test
or
test
inc
mov
out
or
sub
ljmp
or
and
sub
hlt
sbb
js
test
push
push
xchg
jnp
mov
ljmp
pop
fldt
sub
ds
xor
daa
in
jle
cmp
dec
std
jmp
fstl
add
xor
mov
fimuls
sbb
xchg
in
pop
aam
ljmp
add
dec
das
adc
sub
ret
je
movsl
ljmp
loop
test
mov
insl
adc
scas
xor
cltd
jns
fsub
or
outsb
mov
incl
dec
add
push
mov
mov
adc
or
or
adc
or
push
adc
jns
adc
mov
mov
or
and
decl
mov
or
and
and
pop
mov
dec
iret
cmp
cs
mov
lret
xor
push
add
cmpl
ss
pushl
es
add
jb
push
hlt
or
int3
mov
sub
sub
stos
sbb
push
lea
jae
int
cmp
push
cld
cmp
jmp
cmp
push
xchg
pop
and
pop
lcall
jmp
in
in
add
sbb
popa
mov
jnp
and
mov
add
xorb
js
bound
fistl
mov
mov
push
loope
sub
cmpsb
mulb
stos
incl
lds
push
jbe
push
nop
pop
push
and
ljmp
cmp
and
mov
popf
push
mov
mov
ds
add
inc
lret
iret
add
repz
jo
call
jle
add
cmp
hlt
fcoms
dec
rorb
decl
push
and
xchg
fcomps
sub
mov
hlt
and
gs
jg
sub
bound
sub
sti
or
push
andl
pushl
aaa
mov
jmp
add
sub
add
cwtl
push
mov
icebp
call
add
imul
bnd
xorl
pop
xor
xchg
ja
cmp
icebp
decl
sub
push
loopne
sti
jmp
sbb
dec
repz
sti
cmpb
xchg
pushf
icebp
fucomip
or
shlb
sbb
mov
sub
aam
jmp
push
xchg
unpcklps
or
inc
mov
mov
dec
xchg
in
adc
add
and
leave
xor
andl
outsb
inc
or
je
pop
adc
jae
jnp
insl
cld
jg
nop
cld
lahf
outsl
xor
mov
scas
jg
and
loopne
cmp
ljmp
subl
pop
daa
mov
inc
loope
sub
shll
add
jle
idiv
jmp
pop
cmp
lods
dec
loop
outsb
popa
lcall
push
daa
add
lcall
scas
or
push
in
cmc
sub
and
andl
lea
call
sti
mov
or
cmp
ficomps
ds
push
mov
int3
decl
test
loope
jge
add
nop
hlt
pop
jae
jle
cltd
fimull
aam
add
fisttps
aas
imul
adc
fisttpl
jns
pop
pusha
movsl
ljmp
push
mov
lds
pop
mov
lret
ret
mov
pop
cmp
pop
mov
mov
sahf
xor
xchg
loopne
rcr
xor
movb
lcall
cld
ss
sub
inc
adc
push
sub
packsswb
cmpsb
das
std
lcall
adc
lahf
in
cs
mov
inc
pop
lods
dec
add
add
jmp
int3
andb
jne
mov
int3
aam
xor
dec
cmpsb
mov
lods
negl
ret
pop
popf
loopne
sub
mov
jle
or
add
inc
es
lods
incl
mov
call
push
xor
pop
mov
sub
and
push
lods
cmpsb
xor
mov
enter
sbb
frstor
lcall
mov
lcall
or
jecxz
dec
add
jno
xor
mov
inc
sbb
icebp
data16
or
pop
loop
xor
cmp
mov
cmp
sbb
das
les
pop
and
or
call
js
movsb
arpl
pop
mov
cmp
mov
adc
pop
iret
inc
inc
add
js
sbb
jnp
popa
call
pushf
adc
adc
clc
pop
call
add
or
and
mov
add
add
pop
inc
cmp
xor
mov
into
mov
cmp
jae
incl
sub
jmp
add
mov
cmp
ja
xor
shlb
lock
add
ret
adc
add
rcrl
add
jne
mov
aad
and
mov
rorb
pop
fwait
incl
cwtl
xchg
into
push
test
add
dec
jne
xchg
in
dec
mov
and
or
inc
push
add
mov
insl
xchg
xor
jle
dec
std
jg
fs
shrb
call
sar
add
dec
add
shll
into
cli
lods
fimuls
test
sub
cltd
push
nop
mov
xchg
lcall
mov
or
push
leave
push
cmp
sbb
shrb
xlat
dec
mov
call
mov
jecxz
ja
popf
adc
js
stos
dec
out
mov
mov
push
in
pusha
or
pop
jg
ljmp
add
int
jg
in
int3
inc
loop
jb
test
ljmp
std
popf
or
and
shlb
inc
leave
lea
aaa
jmp
pop
out
jno
rclb
cmp
mov
pop
icebp
jae
out
es
xchg
xchg
jbe
lahf
addr16
call
and
mov
and
push
pop
or
cmp
sbb
into
push
xor
dec
push
sarl
mov
cmp
push
dec
pop
xchg
lcall
sbb
arpl
pop
and
lcall
add
or
cmp
cs
xor
call
in
jmp
les
decl
sbb
test
xor
fldenv
mov
cmp
xchg
adc
mov
add
inc
cmp
pop
je
je
insb
roll
jne
out
aas
lea
mov
pop
loopne
xlat
dec
loope
aaa
push
bound
mov
pop
rcr
icebp
lods
mov
jg
add
mov
ffreep
mov
or
xchg
add
mov
sub
push
pop
dec
dec
adc
fsubrs
incl
repz
and
lods
pop
data16
sub
jmp
push
pop
mov
xor
imul
adc
fsub
adc
lds
enter
out
sahf
jb
ljmp
jg
sub
jne
pop
fwait
sbb
outsb
or
mov
dec
ret
push
or
lcall
xor
aaa
ret
dec
mov
xchg
pop
mov
fcompl
int3
ret
adcb
call
mov
loope
jle
shl
dec
test
lfs
shrb
insb
incl
pushl
es
sbb
pop
mov
pop
fildl
decl
or
or
mov
test
std
add
ret
stos
lods
out
arpl
pop
xchg
lea
roll
das
jo
sahf
mov
inc
out
jns
test
stos
lock
pushl
dec
or
xorl
xor
mov
ljmp
add
inc
push
outsb
lock
std
push
dec
jno
inc
or
jmp
sub
fcoml
push
rorl
mov
fmul
loope
decl
xor
or
popa
dec
mov
add
cmp
adc
test
rcll
pop
lea
out
xor
mov
push
inc
jg
pop
int3
je
and
xchg
mov
decl
xchg
push
jl
push
loop
add
sub
xchg
sbb
dec
std
ljmp
and
jns
xchg
in
in
pop
xlat
sbb
mov
aaa
pop
loop
mov
adc
inc
jmp
sub
adc
pop
outsb
push
js
or
xor
cmpsl
inc
sbb
pushl
addl
and
xor
mov
mov
add
sub
int
test
cli
pushl
das
ret
mov
psadbw
inc
cltd
scas
test
xchg
mov
sar
and
shlb
push
push
xchg
shl
jg
incl
cmpsl
cmp
aaa
push
test
sub
test
jle
jae
mov
decl
mov
and
test
or
push
or
lcall
nop
lret
pushl
pusha
out
rcrl
lea
enter
rclb
inc
pop
sbb
xor
dec
mov
repnz
call
call
insl
test
sbb
push
xchg
add
loop
mov
insb
js
push
rcrb
adc
fwait
cmpsl
adc
lcall
clc
dec
cmp
cmp
in
fdivl
je
popa
scas
aaa
dec
lea
jae
mov
out
daa
or
sbb
pushl
xor
int
sahf
imul
insl
sub
in
insb
loopne
pushl
mov
stos
ret
jne
pusha
dec
push
orl
mov
stc
sar
push
cmp
clc
pop
mov
mov
dec
loope
call
pushl
dec
subb
adc
jle
and
xor
lock
call
sub
cs
dec
push
xchg
dec
xchg
loopne
mov
and
sub
sbb
xor
xchg
jge
mov
imul
cmp
jb
push
cmp
pop
and
outsl
jne
mov
jmp
jl
or
lods
mov
xor
sbb
cld
pop
mov
jle
cmp
mov
fwait
rcl
movsl
clc
push
jg
ds
sbbl
add
mov
xlat
sub
dec
pop
lods
pop
dec
xor
push
add
insb
adc
cli
or
incl
mov
jge
or
jae
mov
mov
cld
pusha
je
into
lods
aad
orb
test
dec
jne
es
test
inc
push
sbb
dec
or
lea
jne
xor
pusha
cmp
inc
loopne
cs
push
dec
mov
inc
lock
push
cld
lea
pop
sbb
ret
fistl
sarl
pop
cld
jmp
andb
xchg
push
mov
mov
jg
outsl
xchg
sub
cmp
jge
movsb
xchg
adc
jo
in
lds
jp
jmp
and
jg
ljmp
mov
mov
fld
xchg
loopne
aad
jle
mov
mov
cmp
or
inc
xchg
popf
push
adc
inc
cmp
ret
add
mov
jmp
int3
repnz
lea
push
inc
xchg
popf
fisubrl
adc
dec
cmp
outsl
cld
sar
stos
or
out
inc
add
outsb
jnp
jbe
cs
incl
pop
pop
inc
popf
mov
jecxz
scas
cmp
add
into
stos
mov
mov
lret
ljmp
push
add
xchg
rcrl
add
pmullw
decl
pop
mov
bound
mov
inc
add
push
arpl
adc
cmp
dec
add
push
call
inc
test
add
add
sub
xor
sub
and
sbb
std
and
adc
int
cs
in
fs
and
jecxz
mov
dec
test
mov
hlt
add
cmp
xchg
mov
inc
das
push
nop
xchg
in
fnsave
or
add
add
pop
and
adc
pushl
incb
adc
pusha
call
ret
add
inc
mov
jg
add
lcall
cmp
jae
sbb
inc
adc
call
jmp
movb
pop
inc
inc
jmp
jae
jnp
xchg
or
into
jmp
or
inc
add
repnz
pop
adc
pop
inc
orb
sub
xor
add
jne
mov
cld
inc
mov
popf
push
or
sbb
mov
rorb
ja
loop
call
addb
cmc
adc
lods
int3
repz
iret
lcall
sarl
push
inc
sub
dec
mov
jle
mov
inc
cmp
sbb
dec
or
cmp
add
and
push
pop
repz
testb
enter
mov
or
scas
push
push
mov
cmp
xor
es
xor
inc
adc
sahf
xchg
push
inc
jo
cld
sub
dec
or
pushl
mov
pop
or
movb
inc
mov
inc
inc
inc
push
lea
push
mov
incl
jl
iret
icebp
cmp
or
and
ret
jle
or
call
sub
out
sti
mov
mov
scas
ss
movl
pop
shrb
decb
das
inc
or
jne
and
mov
mov
jg
movl
mov
cmpsl
mov
adc
mov
out
cmp
pop
int
mov
sbb
mov
les
lock
mov
mov
mov
inc
cmp
ljmp
call
jb
add
and
sbb
cmpsl
xor
add
jl
sub
cmp
xchg
jb
mov
lret
lods
jg
mov
push
popf
jbe
pop
and
mov
jecxz
cld
mov
ljmp
pop
push
push
sarl
jge
mov
sub
mov
aaa
mov
push
inc
out
dec
sbb
cmc
xor
test
adc
ljmp
dec
loop
add
lods
lahf
int3
sub
sbb
or
jge
addr16
dec
lret
mov
mov
shll
mov
and
jae
nop
pop
xchg
dec
inc
orb
push
mov
fistl
ret
and
fldcw
decl
inc
mov
xor
mov
loopne
fdivl
push
cmpsl
adc
and
sub
call
hlt
dec
mov
out
movsl
lret
or
loopne
outsl
insb
std
aaa
daa
testb
add
inc
xor
cmp
jg
mov
and
in
insb
push
adc
xchg
idiv
mov
ss
fmull
in
mov
decl
inc
xor
mov
jge
fbstp
fs
in
lods
je
pushf
vpcomd
dec
std
call
mov
loop
aad
mov
pushl
stos
push
sub
cltd
sub
scas
jno
cmpsb
imul
insb
add
xchg
cmp
rclb
jge
mov
adc
imul
shll
leave
jbe
mov
jbe
leave
insl
and
and
imul
aam
popa
or
test
mov
int3
sbb
int3
lret
mov
mov
test
xchg
ljmp
push
mov
cwtl
inc
pop
or
ret
add
sub
add
sub
outsb
hlt
fsubp
stos
add
insl
loopne
sub
mov
and
adc
add
lea
decl
xor
or
add
cmp
dec
sbb
add
dec
dec
mov
enter
sbb
lcall
addb
shl
adc
jp
sbb
push
mov
mov
fisubs
mulb
imul
cmp
mov
je
or
dec
std
xor
sarl
inc
cld
sub
add
cmp
adc
rorl
lea
and
js,pn
push
push
add
clc
incl
cltd
outsl
scas
repnz
pop
add
inc
or
push
jle
sub
pop
or
dec
bound
pop
pop
pop
add
and
xor
das
sar
push
inc
je
sub
or
sbb
in
push
inc
into
inc
sbb
mov
cmpsl
fisubs
adc
jg
sbb
clc
mov
cld
adc
sbb
xor
sub
jne
sub
jg
jmp
rorb
sarb
popf
je
bound
xor
push
jecxz
add
mov
jno
push
xchg
int3
stc
dec
jge
popa
push
dec
xor
stos
stos
cwtl
popf
les
mov
out
cmpsb
cltd
in
incl
xor
add
movb
sub
inc
pushl
xchg
xchg
std
dec
sbb
rorl
push
pop
cld
incl
jns
add
lea
push
add
loopne
jg
dec
inc
mov
test
pop
mov
cli
bound
lock
pushl
int3
push
xor
xchg
pop
stos
push
or
repz
inc
xchg
arpl
aaa
cli
call
adc
dec
sbb
rorl
cmc
mov
push
mov
ljmp
mov
cmp
movsl
pop
mov
pop
push
inc
jns
jmp
cmp
out
xchg
push
pop
inc
jb
dec
iret
loop
inc
loope
jg
pushf
out
jmp
lret
stos
add
cltd
pushl
mov
lods
int3
stos
xor
and
mov
out
or
cmp
lcall
and
xor
mov
sbb
dec
sub
and
and
inc
hlt
xchg
rcll
out
mov
mov
movl
push
cltd
insb
sbb
mov
pop
cmp
jg
lds
into
xor
mov
fimuls
insl
push
xor
rcr
clc
mov
out
lret
jb
hlt
mov
call
push
loop
and
fsubs
mov
sarb
ja
sub
enter
clc
fucomip
inc
inc
mov
cld
mov
stos
inc
or
mov
sub
ljmp
mov
imul
call
cli
out
and
std
popf
inc
push
push
mov
repnz
scas
xchg
das
call
xlat
daa
pop
xchg
js
pushl
xlat
pop
push
sbb
jb
pop
adc
xchg
sahf
cli
incl
mov
icebp
jmp
push
mov
je
sbb
jmp
andb
jmp
mov
and
cli
lcall
stos
dec
inc
enter
sub
pop
adc
ja
push
jo
jmp
jge
adc
sbb
jmp
test
test
test
adc
insl
fists
cmp
test
shlb
lds
arpl
lods
cmp
push
ret
sti
pop
mov
adc
in
sbb
mull
inc
jl
adc
nop
adc
sbb
aaa
jp
jmp
cmp
stos
xchg
add
dec
rclb
lcall
and
mov
mov
lret
lea
mov
push
cmp
jae
enter
decl
push
cmp
mov
lret
xchg
sub
mov
xchg
sub
fnstsw
dec
je
add
push
or
jb
jbe
sub
or
inc
mov
pop
mov
std
or
push
out
ret
mov
and
sbb
cmp
adc
cld
jge
mov
pop
pushf
jmp
pop
sbb
add
push
or
std
call
ret
add
inc
inc
jno
ret
shlb
adc
add
sub
into
cli
xor
pop
sub
cmp
das
mov
sar
add
pop
mov
test
cmp
cmpb
add
push
or
icebp
xor
xorb
and
popf
push
mov
mov
or
xchg
adc
or
dec
std
lcall
sbb
lret
data16
pop
adc
xlat
fists
cmp
mov
push
rcrl
pop
mov
test
mov
addr16
sbb
cli
aaa
lds
inc
cld
test
mov
sub
pop
cld
pop
jp
ror
inc
add
sbb
mov
inc
jmp
pushf
or
sarl
inc
push
push
ret
lds
sub
and
incl
mov
sbb
lods
xor
sub
call
clc
pushl
testb
pop
or
fimull
inc
cmp
dec
int
pop
loopne
fdivrs
or
repnz
rolb
inc
cld
fnstsw
jge
add
rol
add
loopne
xchg
pop
out
test
dec
jne
push
mov
and
test
adc
jo
nop
adc
repz
pushl
cmp
aaa
or
popf
addb
cmp
adc
jns
jmp
mov
test
lahf
or
mov
push
inc
adc
xchg
mov
jmp
dec
inc
dec
loop
pop
pop
xchg
push
sub
test
add
jmp
mov
adc
jae
call
push
push
jne
lea
pop
lds
lea
inc
pushl
sbb
stos
push
and
add
jne
mov
jb
dec
in
adc
rolb
in
cmpsl
dec
out
lret
scas
and
or
hlt
call
fldl
inc
pusha
or
ja
xchg
lds
cmp
jmp
mov
pop
iret
xor
cmp
xchg
rolb
push
mov
mov
jmp
jg
mov
push
rclb
nop
sbb
or
or
mov
cmp
inc
cmp
pop
je
push
lea
call
mov
and
cmpsb
pop
push
cs
fbld
cli
lea
filds
add
mov
jne
call
sbb
pop
inc
jno
xchg
mov
mov
push
lock
jmp
push
xlat
mov
orb
insb
dec
mov
lock
cmp
ja
xchg
mov
push
call
push
mov
jno
cmp
inc
pop
cmpsb
jns
or
test
incl
ret
xchg
jne
xor
jl
jo
mov
sub
decl
adc
jo
push
push
out
int
rcrb
aaa
data16
dec
cmp
test
cmp
mov
rolb
inc
xchg
cmp
rcr
mov
adc
aad
jmp
mov
add
sub
jo
dec
mov
pop
add
push
jno
inc
pusha
inc
cmp
sbb
sub
and
or
jne
dec
enter
into
mov
pop
xchg
lret
mov
out
sub
movsl
ljmp
mov
inc
enter
mov
inc
lcall
and
mov
sub
sbb
xor
or
mov
and
lahf
ret
push
mov
or
cmp
sete
add
rorl
mov
inc
dec
movb
inc
shlb
xor
add
mov
testl
lock
sbb
repnz
js
setnp
add
mov
icebp
test
incl
dec
movl
mov
bound
decl
xor
mov
and
inc
jmp
arpl
adc
jmp
inc
ljmp
imul
lea
cmp
ret
cmp
mov
inc
jmp
invd
sbb
mov
movb
mov
add
pop
add
mov
inc
dec
push
add
aaa
xor
adc
or
mov
push
add
das
icebp
sub
and
cmpsb
jnp
daa
sbbb
decl
enter
movsl
test
mov
je
popa
pusha
mov
inc
push
push
mov
pop
call
add
inc
into
mov
data16
popa
jmp
mul
int
mov
jmp
push
push
or
pop
add
push
or
inc
popf
movsb
adc
test
sbb
jae
inc
pop
mov
rcrb
dec
fucompp
das
lock
cmp
mov
inc
add
das
jge
sub
loop,pn
loope
lds
pushf
or
ret
arpl
fistpll
mov
fsubl
fdivrl
xchg
cld
lcall
jb
inc
lock
cmp
jge
cs
data16
lock
lcall
lea
jle
dec
or
andb
or
mov
andl
add
mov
mov
or
mov
rorl
dec
add
in
mov
xchg
xor
test
test
outsl
in
or
add
add
sbb
ret
mov
sub
inc
fdivs
cmp
add
incl
sub
jmp
xor
dec
shrb
cmc
mov
mov
data16
mov
mov
sbbb
mov
lahf
or
or
mov
xchg
add
cmc
ljmp
ss
movsl
test
push
inc
add
ljmp
pop
fs
push
add
adc
inc
lods
ret
jae
das
cld
ret
mov
jnp
pop
int
xchg
sub
jmp
push
fisubrl
call
fildll
cmc
dec
add
xor
sbb
push
pop
jmp
add
sbb
loop
ljmp
ljmp
jb
pop
cmp
out
xor
add
lock
sbb
adc
aas
pop
pop
sub
loopne
pop
clc
ljmp
mov
sbb
add
ret
mov
les
ljmp
mov
sub
or
push
int3
mov
sub
imulb
fcmovne
inc
lcall
cld
pushl
int3
fs
mov
cmp
sub
pusha
loopne
icebp
push
mov
dec
out
cmp
sbb
into
insb
movsl
push
mov
push
loop
cli
jne
or
inc
mov
sub
mov
pop
mov
lcall
adc
gs
xor
adc
add
sbb
dec
jb
clc
icebp
or
das
cmc
incl
pop
add
push
call
dec
xor
push
aad
outsl
adc
addr16
push
decl
sarl
adc
add
in
lahf
inc
daa
mov
test
lret
sbb
jmp
jae
lea
movsb
jb
mov
int3
pop
mov
push
fdivrl
inc
push
call
push
mov
xlat
jae
scas
mov
aad
test
inc
or
adc
rcrl
push
push
sub
mov
call
push
popa
les
xchg
repnz
mov
mov
inc
fistpll
not
and
push
inc
sbb
lock
jg
or
or
fldcw
sub
mov
mull
add
bound
lds
mov
push
cmp
outsl
sub
or
mov
sbb
decl
enter
or
sarl
pushf
inc
ljmp
inc
mov
jnp
fldl
js
or
data16
das
add
jmp
or
or
jno
incl
or
and
pop
popa
popa
cmp
pop
xchg
call
loopne
in
outsl
test
push
adc
fldl2e
xchg
sub
insl
mov
xchg
add
adc
sbb
ljmp
ret
mov
orb
mov
scas
pop
cmp
outsl
mov
dec
into
in
cmp
repnz
or
std
pop
push
xchg
test
sub
xor
sahf
jg
lcall
hlt
daa
bound
fnsave
pop
dec
jae
sahf
mov
push
inc
call
inc
push
cmp
lahf
cltd
bound
pop
rclb
sub
add
testl
daa
add
int3
stc
dec
mov
idiv
mov
shl
jl
mov
xchg
fdivl
aam
popf
jae
mov
adc
pop
decl
pop
pop
out
sub
shl
push
inc
stc
cwtl
in
push
pop
dec
js
xor
jg
das
lock
adc
sub
gs
out
out
ret
mov
pushf
sbb
mov
retw
pop
pop
cltd
mov
enter
cmp
call
pop
pop
inc
xchg
stos
sub
repnz
mov
bound
inc
xchg
ljmp
sub
push
cli
sbb
sbb
mov
pop
pop
mov
ljmp
adc
and
bound
inc
sbb
cli
loop
enter
xchg
jb
stos
adc
ret
adc
bound
into
sub
jo
mov
xor
add
lcall
xchg
dec
into
mov
jne
and
stc
lahf
rolb
dec
or
sub
jge
mov
dec
lcall
jb
add
into
gs
stos
in
mov
sub
movsl
dec
xorb
call
jg
dec
int3
nop
int
xor
jb
in
jne
orb
add
or
decl
adc
mov
rorl
out
sbb
ljmp
adc
dec
push
sub
loope
fistpll
sbb
aaa
mov
inc
push
cli
call
add
dec
push
mov
dec
add
das
movsl
jecxz
shrb
jmp
mov
clc
shl
call
clc
decl
sti
add
scas
cmp
pop
stos
hlt
and
stos
inc
shll
rorb
adc
call
rorb
sub
shlb
jno
call
das
add
shrb
push
mov
add
pushf
ret
sub
lock
inc
jmp
fcoms
jg
push
and
cmpb
jecxz
pop
sti
fbstp
pushf
inc
sbb
and
incl
sarb
cmp
xor
or
adc
sbb
mov
aaa
push
shlb
ja
flds
and
repz
mov
or
out
rcrb
xchg
es
add
xchg
imul
pop
or
add
hlt
and
in
xor
pushl
push
jno
xor
bound
and
fldt
lcall
lods
insb
adc
xor
mov
and
dec
adc
decl
lods
out
scas
paddq
and
ss
outsl
xlat
sub
dec
push
inc
out
mov
sbb
push
das
icebp
push
jle
add
or
pop
mov
push
mov
sub
mov
ljmp
adc
in
jne,pn
into
iret
mov
daa
add
mov
xor
cmp
add
xor
cmc
incb
roll
jmp
xchg
or
sbb
mov
clc
dec
push
jb
push
aam
xor
xchg
xchg
push
imull
in
icebp
sbb
cld
movsl
call
clc
jmp
subb
pop
push
ret
lahf
cmp
pop
xor
mov
push
movaps
jg
mov
rolb
lods
add
or
pop
xorb
jae
push
push
mov
enter
pop
jmp
xor
pusha
adc
flds
cmp
into
mov
jg
pop
mov
cld
sub
adc
mov
xor
push
inc
outsl
push
fdiv
jne
mov
pushw
sub
jmp
es
jno
adc
enter
mov
or
or
iret
es
enter
leave
mov
add
jmp
or
mov
jg
pop
mov
adc
fdivs
sub
iret
dec
ss
or
fistpl
pushl
call
test
leave
xor
pop
mov
and
insl
xor
push
cmpsb
push
push
pop
out
adc
cld
mov
scas
imul
loop
push
inc
jns
sbb
inc
sbb
xchg
cli
das
inc
shll
movl
or
lea
mov
call
cltd
addr16
xor
and
jne
jmp
decb
mov
pop
sbb
stc
xchg
mov
sbb
ret
mov
adc
sub
rcrb
jmp
sbb
jge
ret
mov
out
test
pop
mov
push
and
push
mov
ds
xor
sbb
stos
push
insl
xor
adc
shlb
subl
call
sarb
ret
sbb
test
subb
xchg
or
xor
ret
pop
xor
addb
adc
inc
ss
push
test
sub
adc
dec
std
test
andw
divl
pusha
jo
adcb
clc
mov
lea
or
ficompl
fcom
mov
and
xchg
insb
xchg
adc
stos
and
rcl
or
xchg
mov
test
pop
loop
add
xor
lea
mov
mov
sub
sbb
adc
cmp
je
xchg
jno
out
les
ljmp
arpl
dec
inc
adc
enter
xchg
shrl
sub
mov
sar
decl
cmp
das
jne
mov
jge
leave
rolb
ds
icebp
xchg
cli
xchg
loope
push
lret
mov
push
jbe
aam
cli
cli
mov
jo
cmp
sub
xchg
xor
jae
or
push
fisttps
cltd
arpl
loope
jns
ljmp
inc
and
push
dec
mov
mov
shlb
test
and
call
push
outsl
insb
mov
inc
xchg
and
cwtl
jne
adc
decl
test
subb
je
pop
sbb
in
shll
loopne
cmp
inc
mov
loopne
incl
and
push
sbb
fmul
jmp
test
or
mov
dec
lret
sbb
clc
call
jo
in
jmp
and
ret
and
out
rcll
lcall
dec
cld
in
and
ficompl
sub
dec
sbb
xor
lcall
pushf
sbb
cmp
sbb
jno
push
jns
movb
scas
sbb
incl
lcall
aaa
loopne
xor
mov
inc
movsl
in
notb
push
dec
pop
outsb
lcall
cwtl
or
imul
push
repz
popf
sbb
lock
adc
mov
scas
mov
outsl
jmp
mov
add
adc
lea
mov
mov
decl
push
sarb
add
popf
add
xor
or
or
and
inc
lods
pop
loopne
sbb
jne
and
xor
cltd
inc
xchg
mov
dec
push
imul
add
jmp
call
fisttps
cmpsb
jle
push
lock
push
jae
call
inc
push
fnstsw
fdivs
cmp
lcall
dec
loop
pop
bound
mov
shrb
jmp
pushl
pop
jecxz
cmp
dec
mov
pop
mov
mov
pop
fwait
sahf
testb
decl
jbe
rcr
and
cmp
pop
sbb
pop
adc
shlb
xor
pop
pop
push
sub
or
dec
jecxz
mov
loopne
or
cwtl
sarb
fstpt
xchg
cmp
rcrl
cmpsl
cmp
cmp
test
pop
lods
ds
jg
call
push
jl
mov
enter
adc
outsl
xchg
jg
adc
sbbl
jb
push
ljmp
lock
inc
or
sbb
mov
sub
mov
inc
pop
or
add
push
jno
push
add
std
lcall
sub
and
xor
sbb
roll
aad
and
ljmp
icebp
andb
gs
call
pop
pusha
sbb
xor
test
popa
mov
rcrb
decl
ficompl
push
lock
sbb
and
lret
ror
xor
adc
cmp
das
fucom
iret
push
and
xor
in
inc
aaa
in
jmp
add
cli
dec
test
jmp
lret
and
push
pop
add
loop
std
jg
sbb
clc
and
data16
loope
test
je
std
decl
or
aaa
or
andl
add
les
mov
neg
or
call
addr16
and
fiaddl
bound
fcompl
das
adc
das
icebp
addr16
jmp
mov
push
push
pop
std
xchg
mov
or
jns
inc
test
pop
xchg
adc
add
mov
mov
push
cmpsb
fwait
pop
or
or
incl
fisubrl
cmpsb
pop
xor
mov
mov
inc
or
or
sbb
int
js
fnsave
clc
add
pushl
sub
push
insb
lcall
xor
leave
aad
test
jmp
mov
adc
pop
jmp
or
ss
jne
mov
mov
incl
sub
jecxz
imul
push
sbb
or
fcompl
ret
ja
jns
sbb
and
das
cmc
add
jns
pop
fwait
aaa
sub
jmp
xor
push
pop
add
cld
adc
push
cmp
xor
mov
jo
test
pop
push
pop
inc
add
icebp
aam
pop
cmc
fsts
push
sbb
test
call
push
js
aad
movlps
push
mov
int3
xor
das
rclb
mov
cwtl
add
mov
imul
cmp
daa
fistl
and
xor
loop
cmp
ret
ror
push
cld
repnz
mov
jae
cmpsl
syscall
push
mov
xor
mov
jne
cld
pushf
push
push
std
mov
pop
lock
insb
sub
in
mov
les
or
inc
je
loop
fnstcw
sar
out
pop
clc
dec
or
test
loope
cmpb
mov
es
lcall
and
mov
push
mov
sbb
pop
mov
mov
xchg
jecxz
loop
mov
pop
sbb
adc
mov
push
ret
lret
in
movsb
push
bound
mov
ret
jle
sub
addl
pop
mov
int3
ret
leave
es
in
decl
test
and
cmp
jg
inc
jmp
pusha
xor
jne
pop
inc
sub
es
push
ja
sbb
daa
movsb
cmpsb
inc
push
lcall
stos
jmp
nop
inc
je
fnstcw
out
mov
imul
adc
xor
ret
jp
pushl
adc
ret
pop
add
adc
call
add
add
dec
sub
sub
lcall
daa
or
data16
adc
pop
lahf
sbb
or
lock
push
adc
int3
pop
adc
gs
addr16
adc
jge
enter
push
mov
lret
inc
sub
popa
mov
push
xor
popf
ljmp
iret
mov
rol
sar
jbe
cs
in
jmp
push
cmp
mov
or
jmp
push
dec
xor
fs
jge
adc
dec
mov
inc
mov
mov
jg
pop
add
mov
cmp
jge
pop
pop
mov
mov
jg
jle
std
pop
call
sbb
or
notb
cmp
jle
lcall
sub
add
push
inc
jno
nop
ud0
pushl
dec
leave
imul
shll
roll
pop
add
mov
mov
mov
pop
mov
ljmp
andl
fsubl
shlb
ret
xchg
sub
xchg
shll
imul
insl
rorb
clc
pop
stc
adc
test
pop
cltd
notl
mov
push
sbb
push
dec
pop
sub
add
bound
popf
xlat
or
dec
xchg
js
sub
inc
add
mov
icebp
cmp
mov
mov
sbb
std
push
mov
or
ljmp
jl
xchg
xchg
ret
add
test
add
push
jbe
or
out
or
sub
mov
or
cld
test
xor
sub
add
sti
jmp
sub
test
add
mov
jle
fucomip
fdivl
inc
xor
enter
push
jae
in
mov
nop
pop
test
rorb
sbb
pop
ljmp
push
mov
inc
popl
outsl
js
addr16
aaa
mov
add
mov
inc
jle
rcrb
jnp
cmp
add
xor
es
das
pop
pop
sub
adc
push
stos
das
std
decl
xor
push
mov
or
rclb
aas
js
pop
xor
clc
mov
jg
push
adc
fidivrs
dec
push
mov
mov
lcall
or
test
jb
lds
sbb
pop
mov
sahf
jl
mov
pushl
roll
pop
nop
pop
or
outsl
xor
js
mov
jg
pop
jg
cmpsl
cmc
xchg
sbb
adc
or
lea
pop
cli
xor
aas
shr
add
rcl
mov
fbld
inc
ljmp
jmp
and
fisubrs
sbb
add
out
sbb
mov
and
out
add
shlb
pushf
sub
and
cmp
in
adc
decl
std
outsl
mov
xor
push
andl
push
add
add
jbe
clc
aaa
mov
pop
repz
mov
xchg
lret
push
popf
rorl
jns
add
push
adc
mov
cli
lcall
std
add
mov
mov
arpl
xchg
push
xchg
aas
ret
pop
jle
xchg
paddw
out
adc
es
movsl
loop
enter
ret
xor
lret
jae
jmp
mov
pushl
gs
jmp
pop
jmp
mov
mov
or
in
pop
mov
sub
and
and
push
mov
insb
rcrl
fcompl
pop
aam
sar
sub
clc
push
in
mov
cmp
cmpsb
and
loop
stc
ret
inc
jmp
pusha
mov
icebp
clc
or
xchg
lcall
std
mov
sti
inc
pusha
sti
xor
pop
adc
lods
cmc
into
mov
call
mov
stos
mov
jbe
ljmp
repz
pop
aam
loope
fnstsw
fisttps
push
arpl
fmul
addl
xor
sahf
ja
mov
push
jl
lds
scas
out
adc
pushf
adc
add
cmp
push
shr
je
xor
push
inc
fisttpl
jle
jmp
or
add
loop
push
fdivrs
push
or
je
jnp
dec
decl
lea
push
pop
ja
dec
mov
ret
pop
push
jge
sbb
lcall
push
pop
hlt
adcl
inc
push
cld
std
in
pushf
aad
roll
add
addb
or
decl
mov
sub
mov
or
imul
pop
loopne
fdivl
mov
jbe
fst
xchg
repz
cmp
adc
sahf
mov
rorl
fs
decl
out
pop
iret
jne
pusha
jp
imul
lea
rorb
inc
jl
jle
and
inc
cltd
push
lahf
gs
jmp
int3
mov
xor
pusha
repnz
or
xchg
jnp
push
add
lea
dec
insl
or
xor
popa
cmp
sub
insb
pop
lcall
je
mov
push
push
loope
pop
insl
cs
pop
sbb
add
push
or
out
fiadds
ljmp
es
adc
mov
adc
push
jg
mov
loope
mov
outsb
dec
out
popa
rorb
fisttpl
ds
pop
loop
cmp
push
sub
cld
jbe
inc
mov
incb
and
mov
cmpl
movsl
out
dec
adc
hlt
ljmp
pop
xchg
cltd
das
mov
jno
in
xor
and
leave
enter
add
cli
outsl
adc
add
or
loopne
xchg
movsl
sbb
call
lock
cmp
xor
ror
mov
add
nop
adc
outsl
xchg
adc
cmp
add
mov
negb
jo
js
sbb
xchg
clc
ja
jl
shl
jno
sub
dec
jno
leave
sbb
jmp
mov
xchg
mov
aaa
cli
decl
ds
mov
cmp
add
mov
push
mov
or
hlt
ljmp
loop
pop
jno
push
add
cltd
inc
pop
or
into
mov
push
idiv
mov
les
dec
clc
jecxz
iret
negb
stc
jns
movsb
out
sahf
pop
xchg
push
movb
jo
pop
clc
lcall
mov
mov
leave
out
and
add
repz
out
hlt
cmp
iret
jmp
cli
jmp
in
in
icebp
out
sti
ret
mov
rolb
lcall
sub
lcall
test
adc
push
inc
add
add
add
add
insb
xchg
or
imull
sbb
jp
filds
cmp
jne
mov
maskmovq
mull
jle
cli
add
add
cmc
incl
xchg
je
inc
sub
cmp
pop
sub
ud1
and
incl
outsl
or
sub
das
mov
addr16
aaa
cli
jmp
sub
bound
sbb
jae
add
out
les
outsl
mov
inc
push
lds
dec
sbb
or
xchg
repnz
add
movsl
call
imul
pop
testb
mov
or
mov
sbb
repnz
mov
test
repz
jge
sar
in
jb
and
inc
mov
or
push
dec
test
fildl
xor
adc
xor
jg
fsubrl
jmp
ljmp
sub
call
mov
jne
or
std
movsl
aas
sti
adc
popa
lret
mov
sub
pop
jg
lock
pushf
add
neg
and
test
aad
incl
cmc
jp
into
and
sar
lea
pop
mov
sbb
and
incl
lret
or
adc
mov
roll
ljmp
adc
add
push
sbb
mov
dec
push
or
xor
xor
sbb
jb
add
icebp
aaa
sub
loope
jmp
or
lcall
incl
sub
ret
sub
mov
xor
lcall
add
xchg
hlt
sub
fpatan
mov
mov
jmp
add
stos
into
ret
mov
or
dec
add
inc
xlat
fs
idiv
test
push
out
cmp
inc
pop
inc
mov
xor
je
add
daa
inc
rcrl
pop
or
mov
pusha
push
mov
or
add
incl
int3
dec
adc
ficomps
push
mov
cmp
jmp
cmp
roll
sbb
add
mov
bound
lret
jbe
cmp
lahf
lds
sub
aam
push
push
lea
jg
incl
push
xchg
push
dec
in
pop
push
and
push
dec
daa
inc
jae
std
decl
jbe
loop
adc
add
mov
jp
sbb
aaa
lcall
push
daa
daa
mov
push
ljmp
hlt
daa
sub
xor
fistpll
fbld
imul
push
sub
pusha
ja
orl
stc
imul
jg
aaa
cli
test
add
mov
pop
mov
call
fdivrs
adc
jmp
push
loopne
pop
movsb
loope
and
cmp
push
pushf
xorl
rorb
es
movsl
ret
jmp
or
lcall
jmp
imul
pop
hlt
insb
inc
ficomps
das
testb
sub
movsl
push
xchg
sub
pushl
lcall
jbe
mov
sbb
add
mov
sub
cs
int3
jne
cmp
mov
cmp
inc
enter
jg
data16
jg
jo
or
pop
fcoml
adc
mov
ja
outsl
and
lcall
decl
data16
inc
call
ja
xchg
rorl
addl
push
lods
adc
ljmp
fists
mov
inc
jb
or
dec
jno
inc
jge
lods
ljmp
aas
adc
sub
xchg
and
adc
sbb
add
bound
faddl
insb
sbb
sub
jp
gs
daa
jae
mov
xchg
in
push
je
mov
cwtl
xor
inc
jno
cmc
mov
call
cmp
mov
mov
movsl
movsb
pop
nop
bound
mov
cmp
pop
sub
pop
adc
or
decl
xor
cmp
lret
arpl
mov
push
add
popa
movsl
mov
lcall
pop
push
addl
adc
das
stc
mov
clc
and
and
lret
or
inc
cmp
fwait
add
shr
test
lcall
cmp
mov
and
ja
add
data16
sbb
incl
inc
fs
in
hlt
dec
cwtl
cmovbe
das
lock
push
push
cmp
adc
fidivrs
cmp
insb
ret
mov
xchg
adc
call
and
rolb
add
bound
or
push
call
fdiv
dec
hlt
sarb
or
or
add
rcrb
shl
adc
cld
push
mov
pop
clc
cmp
hlt
add
call
cld
data16
mov
jg
mov
xchg
add
call
inc
and
and
clc
inc
into
clc
or
sbb
add
or
mov
add
cli
clc
ljmp
cmp
add
mov
mov
jb
sbb
fcompl
fbld
dec
push
pop
cmp
and
les
xor
fdivrp
incl
ret
loop
pop
jge
mov
xor
push
leave
cmp
ljmp
jns
loop
cld
cltd
jne
test
hlt
sbb
or
lds
xchg
mov
stc
lret
in
mov
fsubr
sbbl
fistps
ljmp
test
pushf
add
mov
lcall
mov
sti
sbb
pusha
or
arpl
lcall
outsb
jno
push
adc
call
cli
xchg
je
sub
and
inc
ret
push
inc
int3
add
and
mov
je
jmp
inc
out
nop
or
adc
jge
movsl
lret
add
negb
mov
ficoml
sbb
dec
arpl
adc
fnstcw
xor
jle
push
sub
dec
add
loope
lock
pushl
ds
mov
push
and
aam
mov
pop
push
testb
leave
cmpb
add
xchg
daa
lcall
cld
nop
decl
mov
inc
stos
repnz
pop
sub
sub
dec
adc
jnp
push
mov
incl
stos
ljmp
pop
push
mov
sbb
incl
sbb
push
mov
mov
js
out
mov
jecxz
loop
lcall
push
add
push
ss
sbb
push
test
add
xor
aaa
clc
mov
lods
mov
xor
ja
out
enter
out
lds
mov
xchg
push
xchg
fldt
push
cmp
cwtl
sbb
inc
repz
ljmp
dec
insl
mov
cmpsb
and
mov
adc
xor
adc
pop
sbb
inc
ss
jg
jmp
pop
mov
sbb
push
aam
pop
or
shlb
aaa
js
mov
jns
pop
cmp
lds
decl
sbb
inc
lret
pushf
cs
pop
pop
cmp
jg
inc
dec
stos
cs
jmp
les
cmp
mov
mov
cmc
jmp
cmp
pop
lret
sub
xor
shll
dec
inc
pusha
orb
stos
call
jbe
inc
pop
popf
xor
test
fnstenv
pop
insb
jl
movsl
fyl2x
xchg
sbb
or
cli
mov
jle
testl
inc
and
cmp
jge
lock
jg
iret
push
outsl
mov
push
movsb
and
imulb
fwait
mov
or
pop
push
pop
push
cmpsb
cld
lea
push
jns
pop
dec
jl
dec
jns
sub
mov
cld
adc
fmuls
xchg
xchg
fdivl
sbb
je
sbb
dec
inc
cmp
ljmp
push
cmp
jnp
mov
bound
mov
lea
mov
add
dec
xchg
xchg
sub
lcall
cld
push
loop
ret
pcmpgtw
adc
je
push
lock
cli
stos
pop
push
pop
test
nop
stos
mov
je
mov
add
sete
jg
mov
or
sub
sub
popa
or
cmp
insb
and
std
mov
inc
testb
cmp
test
out
add
pop
dec
cmp
je
add
pushl
jne
adc
into
cwtl
mov
xor
daa
dec
dec
mov
mov
pop
jl
outsl
sub
and
jb
xor
mov
sbb
call
ljmp
or
add
xor
mov
xor
in
ljmp
hlt
jp
xchg
mov
fs
or
adc
or
mov
mov
add
je
mov
jg
call
lahf
xchg
push
and
mov
int
arpl
mov
jmp
inc
neg
add
fcomi
shll
fdivs
adc
imulb
pop
mulb
xor
in
pop
xchg
jmp
enter
sub
mov
push
xchg
dec
mov
xlat
mov
sub
pop
enter
icebp
sub
insb
xor
test
jnp
pop
ret
leave
sbb
adc
xor
cmc
int3
add
inc
sub
shrb
fists
xor
sbb
stos
loop
jmp
jae
xchg
jg
std
cmp
mov
xchg
sbb
cmpsb
jne
cmp
nop
fwait
iret
ds
sub
aaa
cmp
inc
sarb
test
call
jp
push
shlb
push
xchg
cmp
cmp
adc
and
push
shlb
jmp
lods
jmp
push
cmc
adc
sub
pop
clc
decl
rcrl
dec
gs
or
pop
cmp
addb
dec
cld
add
jmp
and
sbb
xchg
push
cli
lea
es
or
inc
jb
aaa
js
add
lcallw
enter
icebp
jg
and
inc
inc
outsb
data16
repnz
je
jmp
test
sub
push
ljmp
sub
inc
mov
mov
pusha
or
inc
push
jbe
pop
pop
xchg
das
dec
fsubl
dec
rolb
sub
pop
mov
mov
sbbb
push
adc
mov
pop
dec
jae
test
or
add
jae
xchg
rclb
jp
cmp
push
pop
sbb
jle
mov
in
adc
lods
fucomip
and
fldenv
jge
inc
sbb
idivb
lods
xchg
pushl
push
popa
push
lods
xchg
mov
lods
out
cli
fisttpl
sub
mov
sahf
sahf
cmp
adc
sbb
lods
jns
lock
mov
mov
inc
pop
mov
push
add
cmp
movb
inc
xor
ljmp
test
mov
sbb
in
roll
mov
jmp
lcall
mov
push
push
mov
int3
popf
sbb
cmp
ss
cmp
js
fcompl
push
data16
jecxz
or
pushl
je
push
push
imul
xor
std
sbb
out
int3
outsl
lds
jl
cmp
mov
pushl
lds
cmp
aaa
rolb
inc
daa
xor
and
jg
lss
je
enter
sub
mov
test
cmpsb
shrb
sar
xchg
call
test
inc
cli
xor
dec
insb
adc
cmp
push
dec
cli
mov
mov
mov
les
aaa
mov
jnp
pushf
sbb
mov
lds
inc
cmp
adc
xchg
xchg
mov
inc
jmp
dec
add
pop
mov
icebp
xchg
arpl
insl
ljmp
mov
clc
jg
add
sbb
inc
ficompl
lcall
add
adc
aam
cmpsb
pop
clc
ljmp
mov
test
jne
outsb
push
push
jo
dec
add
mov
int3
or
xor
inc
push
xchg
enter
or
push
push
cli
popl
incb
ds
jle
enter
incl
sbb
enter
in
fcoml
loopne
cmp
jge
decl
enter
pop
and
rolb
mov
or
mov
xchg
mov
dec
pop
inc
sub
adc
pop
in
mov
xchg
clc
sbb
mov
loopne
clc
jae
push
lods
cmp
jo
mov
lock
push
mov
and
daa
pop
inc
xor
mov
das
add
in
push
and
and
add
xor
xor
outsl
cld
decl
jae
cmp
and
lret
outsl
jb
jp
je
mov
outsb
mov
pushf
inc
pop
gs
add
mov
sbb
jno
push
mov
cmpsb
lret
lds
jecxz
aas
jp
add
jg
ljmp
push
add
mov
insl
add
hlt
push
xor
sahf
gs
lcall
add
movsb
mov
mov
or
dec
mov
or
ljmp
sub
sbb
mov
sbb
dec
jno
push
repz
test
ljmp
sbb
add
mov
hlt
movl
cwtl
insb
adc
add
std
in
add
dec
mov
add
add
arpl
or
outsb
cmp
pushl
pusha
aad
jno
add
inc
aam
add
test
incl
adc
insb
cwtl
mov
inc
leave
mov
add
insb
fdivs
jne
filds
inc
iret
or
add
cmp
fiadds
ljmp
call
push
xlat
enter
add
push
mov
push
cltd
xchg
mov
add
fucomip
mov
or
movsb
and
xchg
das
adc
ljmp
pop
stos
sbb
data16
push
jno
add
aad
jmp
pop
out
mov
push
movsl
in
lahf
xor
call
xor
add
jle
cwtl
inc
loope
or
or
dec
add
push
imul
insb
add
xor
dec
add
repnz
xchg
push
insb
jnp
cld
ljmp
sbb
hlt
or
cmc
fnstenv
adc
enter
jl
pop
loopne
pop
pop
cld
fistps
fiaddl
adc
dec
aam
mov
add
mov
into
pusha
cmp
xchg
mov
aam
movsl
add
fadds
sti
hlt
sbb
shrl
sbb
xor
inc
mov
or
in
sarb
add
in
add
jmp
or
jl
fldl
cmp
add
daa
add
adc
mov
add
pop
clc
push
mov
outsl
and
aam
mov
repnz
ficomps
leave
fcos
incl
cwtl
shlb
pop
cmp
mov
add
pop
mov
mov
subb
lcall
mov
cmp
ljmp
rolb
popf
adc
jnp
or
test
fs
call
pop
push
jp
iret
push
in
decl
add
mov
pop
add
xchg
lcall
call
mov
repnz
inc
cmp
push
test
jno
cld
mov
push
mov
loopne
roll
mov
ficoml
int3
dec
fstp
mov
out
mov
mov
mov
aad
mov
call
imulb
jle
shll
cmp
fisttps
inc
mov
cmpsb
fstl
sbb
mov
fisubrl
data16
decl
scas
testb
ss
jp
inc
ret
out
add
push
fbld
out
mov
jns
sti
aaa
outsb
dec
inc
mov
mov
outsl
and
lock
call
add
mov
and
es
mov
mov
std
ljmp
mov
add
mov
cmpsl
incl
xlat
ret
shlb
sub
scas
ficomps
jmp
mov
repnz
pushf
mov
xchg
insl
add
push
jmp
addr16
ljmp
incl
pop
jb
push
add
jp
loop
sub
mov
cmp
mov
fwait
lret
jg
xchg
or
out
add
jl
or
roll
in
icebp
clc
cwtl
sbb
int
add
mul
mov
ja
ljmp
inc
mov
out
fdivrs
gs
cmp
pop
add
add
mov
clc
sar
imul
insb
xor
mov
mov
xor
mov
cmp
cmpsl
notl
cli
call
movsl
pusha
push
dec
inc
pop
add
shrl
jg
pop
xchg
or
inc
lock
add
mov
dec
lcall
jg
iret
mov
jmp
pop
mov
lret
xchg
mov
cmpsb
in
mov
sarb
add
push
ficoms
fldenv
add
jp
mov
dec
das
icebp
das
xor
sbb
xchg
sub
pop
mov
movsl
mov
pop
mov
add
mov
std
push
push
add
push
and
pop
add
and
imulb
dec
insb
add
lock
push
loop
out
pop
std
add
push
adc
xor
imul
and
imul
jg
pop
decb
jo,pn
cmp
sbb
adcb
sub
js
gs
jg
mov
in
iret
pop
shlb
add
dec
shlb
cmc
mov
push
pop
pop
inc
dec
dec
dec
inc
dec
pop
dec
inc
inc
push
pop
inc
call
dec
inc
inc
push
inc
cs
jmp
dec
push
push
inc
push
push
jmp
pop
outsb
inc
lods
into
lock
pop
jb
jo
adc
sub
push
mov
arpl
jae
fwait
ljmp
hlt
pop
clc
daa
jl
in
inc
popf
sbbb
lcall
cmp
cmp
std
add
jno
add
jo
adc
jl
jmp
and
xor
fildll
jbe
out
bswap
pop
or
xor
xchg
daa
bound
add
sub
add
adc
push
sbb
mov
jae
push
jb
mov
jae
xchg
push
test
incl
insb
sub
shl
prefetchw
outsb
test
inc
push
dec
mov
add
ss
sub
iret
sbb
sbb
cmpsb
inc
cmpsb
pop
popf
incl
jnp
cmpsl
loope
push
stos
popa
pop
adc
mov
paddusw
or
pextrw
cmp
pop
cmp
iret
cmp
call
push
mov
adc
pop
add
add
add
arpl
icebp
test
jg
xor
sub
sub
add
pop
or
shll
mov
out
or
pusha
inc
or
add
add
pop
dec
das
insl
adc
or
push
or
mov
jne
jg
pop
clc
xor
pop
sub
outsb
jne
insb
repz
jg
decl
fucomip
lret
stc
pop
int3
jno
dec
xor
imul
movsl
subb
ds
and
insb
ja
push
push
or
les
and
sub
inc
mov
mov
mov
xor
mov
pop
es
and
cld
divb
lods
mov
aaa
je
je
cwtl
in
mov
outsl
icebp
adc
cmp
addr16
aas
data16
fsubrs
jmp
sub
aaa
fucom
int3
jge
cld
xor
dec
mov
outsb
jo
inc
jbe
fsubs
incl
test
jecxz
inc
and
or
mov
daa
inc
xor
pop
sub
lcall
cltd
js
pop
das
popf
pop
push
cmp
shl
lods
pop
xor
testl
idiv
decl
sub
xor
out
leave
lret
orl
jmp
adc
loope
decb
loope
jbe
mov
arpl
das
dec
pop
fdivr
xor
mov
add
mov
add
inc
addr16
pushl
insl
mov
mov
xchg
ss
loope
cmp
fcoml
mov
out
dec
je,pn
jge
pusha
popa
cmc
or
pushl
jne
sub
pop
test
outsb
ljmp
nop
loop
je
cmp
adc
das
fs
dec
sub
rclw
push
incl
sub
push
clc
pushf
dec
imul
daa
or
push
xchg
inc
push
inc
and
cmp
add
sub
in
loopne
xchg
jne
mov
aas
push
jmp
orl
push
jne
gs
test
jle
fildll
mov
popa
xor
lods
data16
inc
push
bound
sub
dec
loope
jns
add
insb
inc
pop
loopne
jmp
adc
sbbl
push
pop
pusha
or
ss
ljmp
insl
jmp
aaa
inc
push
xor
and
movhps
cltd
mov
pop
loopne
xchg
popa
mov
jae
add
push
dec
inc
out
mov
pop
test
add
pop
inc
mov
fistl
mov
not
jg
or
or
lcall
loope
or
lods
ret
mov
push
push
ret
xor
loope
adc
sub
jecxz
jg
sar
mov
lock
inc
sub
mov
in
jg
incl
mov
add
pop
mov
pop
cwtl
adc
inc
pop
test
hlt
pop
test
xor
mov
rclb
sti
mov
ljmp
push
xchg
or
fdivrl
and
jg,pn
sar
push
jg
pop
sub
pusha
adc
ljmp
mov
out
inc
mov
popf
adc
popa
or
inc
fadds
in
stos
mov
xor
test
decl
cld
cmp
cmp
cmc
jp
jge
add
or
out
add
das
pop
cli
ljmp
sbb
das
js
dec
das
mov
iret
push
mov
ja
xor
sbb
inc
add
call
pop
sbb
lahf
sbb
das
pop
cwtl
add
inc
mov
stc
fwait
add
sbb
xlat
jmp
jae
pop
adc
insb
je
cli
imul
das
in
push
outsl
push
dec
xor
mov
iret
mov
xchg
mov
lahf
fdivrs
out
jg
daa
mov
pushl
pavgb
loope
push
repnz
pushl
sti
mov
sar
xchg
add
adc
gs
or
and
ljmp
adc
mov
jbe
inc
aaa
pop
sub
cmp
jns
cmpps
jns
mov
jp
push
pop
cmp
cs
push
js
repnz
fcmovb
int3
pop
push
orb
pop
enter
ljmp
mov
cmp
test
mov
ret
fdiv
out
iret
cld
sbb
xor
push
sahf
aaa
xchg
clc
pop
shlb
xchg
sahf
movsb
add
das
sahf
in
pop
mov
or
jecxz
iret
cmp
dec
jb
xchg
movsb
repz
cmp
std
jmp
lock
adc
push
and
push
out
sahf
test
stos
out
sahf
call
decl
repz
iret
fs
xchg
xchg
iret
test
mov
repz
lock
cmp
cmp
push
sahf
inc
jmp
pop
jns
xchg
sahf
cmpsb
jns
out
sahf
repnz
push
cmp
cmp
loope
cmp
dec
cmp
adc
aam
mov
cmp
mov
cmpsb
sarb
fbstp
addl
jg
sub
out
add
or
add
mov
adc
xchg
testl
xor
cs
sbb
mov
and
test
pop
inc
cwtl
xchg
je
sub
mov
outsl
sub
call
js
inc
imul
and
fs
xor
cmp
movsl
jmp
arpl
lds
xor
scas
pop
jns
push
pusha
adc
outsl
dec
test
cld
add
mov
lock
outsb
or
imul
xorb
push
fstpt
pop
outsl
adc
push
popf
jb
insb
andb
mov
insb
push
push
push
mov
pop
cmpsl
push
pushf
fistpll
mov
jmp
inc
or
cmp
lahf
mov
mov
push
sub
jae
or
ljmp
std
inc
imul
push
push
jne
push
jns
add
aaa
outsl
fildll
mov
xor
daa
jns
and
add
std
pop
inc
cmpsb
xchg
jbe
cld
or
gs
jmp
jb
adc
jle
cmpsl
inc
or
mov
push
jns
shlb
xor
mov
jle
incl
in
dec
dec
icebp
je
ljmp
cmp
xor
mov
cmp
insl
scas
outsl
adc
jns
pop
insl
nop
push
push
decl
insl
std
enter
fbstp
stc
push
dec
bound
aam
jg
or
stc
push
xor
iret
cmp
dec
lret
mov
lds
les
rclb
std
mov
mov
pop
sbb
ret
jne
push
jg
outsl
hlt
daa
lds
cmp
and
push
jl
test
cmpsl
or
pop
sbbl
push
xor
dec
pmuludq
pop
call
jecxz
addr16
pop
pop
pop
das
inc
or
nop
sar
pop
sub
push
mov
out
aaa
jae
leave
es
push
push
jo
push
push
shrl
mov
lret
shll
jo
inc
mov
ljmp
or
mov
leave
outsb
adc
dec
xchg
out
call
jp
gs
hlt
jnp
je
xor
test
and
popa
jecxz
popa
outsl
add
loopne
ja
rorb
decl
sbbl
cmpsb
pop
jbe
cmpsb
shrl
mov
mov
popa
push
mov
imul
shrb
je
icebp
outsl
push
mov
mov
repnz
xor
jns
jge
movsb
insl
sub
sbb
push
jbe
jg
jecxz
add
and
imul
jb
shll
pusha
xchg
jo
cmpsl
sbb
mov
divl
js
jbe
sahf
hlt
dec
repnz
clc
aaa
pop
clc
loop
cld
mov
cmp
outsl
fsts
mov
cmpsb
call
cmpsl
pop
dec
cmp
jae
jb
push
in
jo
js
insl
mov
jmp
push
xlat
fnsave
rcrl
inc
stos
les
icebp
ljmp
cld
cmc
xchg
xchg
stc
popa
jnp
cmpl
ror
sti
xor
or
call
shll
cltd
iret
fwait
jp
push
cmp
inc
ja
inc
pop
cmpsl
jmp
push
jl
inc
addr16
jg
push
out
or
or
adc
or
push
imul
test
icebp
dec
mov
push
push
fistps
mov
push
daa
dec
xchg
lods
lds
mov
jmp
fucomi
jmp
das
mov
in
fwait
adc
cmp
call
jl
xchg
aad
mov
inc
insb
bound
rolb
lcall
data16
jle
jecxz
xor
push
pop
out
gs
mov
adc
movsb
fstpl
pushl
and
sbb
jae
ret
inc
rol
add
test
mov
or
pop
faddp
nop
xor
mov
std
fstl
pop
loopne
mov
push
dec
lcall
mov
adc
addb
push
push
push
inc
decl
add
push
push
dec
inc
push
lret
dec
and
pop
add
mov
shrb
lret
mov
ljmp
fwait
aam
pop
xor
xor
sub
and
xor
or
cmpsl
cld
mov
or
and
or
xor
push
xor
mov
and
or
and
incl
dec
inc
inc
pop
inc
stos
inc
mov
inc
mov
cmc
lahf
add
sarl
incl
aas
add
inc
inc
dec
dec
dec
dec
mov
dec
cmp
push
push
mov
push
push
push
adc
sbb
and
subl
outsb
mov
jbe
jecxz
dec
mov
sub
xchg
push
cmp
repz
jg
or
and
addl
in
add
adc
arpl
lahf
cmp
adc
ljmp
add
imul
lret
or
sub
cli
bound
call
fisttpl
rcrl
push
in
pop
loopne
push
adc
or
push
std
call
stos
cmp
out
js
loopne
call
or
pop
add
cmp
addl
stos
push
andl
mov
dec
std
ljmp
shlb
fs
and
mov
ljmp
mov
mov
jns
je
inc
jmp
mov
jle
popl
pop
popa
ret
ss
mov
cs
pop
shlb
mov
adc
js
cld
stc
mov
lcall
or
add
mov
cmp
je
add
mov
mov
int3
inc
stos
mov
mov
in
outsl
push
lcall
cld
and
sub
aam
dec
add
inc
adc
mov
mov
pop
add
add
jecxz
dec
mov
incl
out
xor
adcb
ror
add
sub
add
jne
call
mov
or
arpl
sbb
mov
arpl
ret
add
call
repnz
xlat
cld
call
jl
mov
pop
shrl
movsl
incl
clc
rcrb
iret
ret
lds
popf
and
in
sahf
mov
jno
pusha
mov
mov
shlb
rcpps
sbb
orb
jmp
cli
cmpl
cmp
lock
jmp
push
adc
cwtl
decb
call
in
sar
ljmp
out
push
add
add
movsb
jbe
pop
adcl
add
pop
mov
das
pop
shrl
or
arpl
lcall
xchg
clc
das
or
sub
pop
into
lahf
jno
bound
ficoml
xor
or
incl
mov
and
adc
shll
mov
es
add
data16
and
cmp
shrb
cli
jg
add
inc
xchg
add
rolb
or
jnp
add
xchg
pop
imul
je
pop
jae
bound
mov
je
mov
mov
incl
push
mov
incl
dec
test
jne
shr
pop
jbe
cli
leave
mov
xorb
loop
jmp
call
cltd
cwtl
clc
lcall
imul
adc
adc
dec
or
xchg
adc
ljmp
jg
call
lcall
je
enter
or
clc
lcall
sbb
xchg
rolb
sbb
fdivrl
pop
jmp
call
push
add
fistpll
lcall
hlt
filds
mov
in
pop
rorb
arpl
outsb
pop
xchg
adc
lcall
or
add
iret
data16
gs
ret
ljmp
xchg
leave
repz
repz
call
pop
sahf
fwait
cltd
sahf
and
stos
pop
adc
popf
popa
mov
insl
iret
sbb
add
sbb
incl
inc
sbbb
adc
adc
add
fstps
jg
fbstp
fimuls
loopne
lret
movsl
pop
cli
hlt
std
adc
mov
push
enter
sbb
in
pusha
enter
cmp
shlb
pop
or
jnp
loopne
jno
sbb
fdivrp
in
dec
jg
cli
fadds
std
std
jmp
ljmp
in
pop
cld
adc
fcomps
in
or
clc
lcall
std
aad
sti
ret
loopne
sbb
ljmp
cmpsb
push
fmul
sbb
aaa
adc
divl
notl
std
lcall
jmp
push
push
outsl
je
insb
cmp
jmp
sbb
push
ljmp
scas
sub
stos
pop
push
pop
mov
pop
pop
push
lods
out
aaa
cs
dec
add
imul
outsb
shll
cs
sar
lcall
add
mov
pop
add
inc
sbb
inc
call
imul
jmp
fsubrl
and
insl
xchg
push
cmp
jg
cs
das
mov
insb
mov
jmp
outsb
lods
mov
and
pop
in
inc
popf
ss
sub
popa
fnstsw
dec
std
xor
or
mov
cmpsl
jg
decl
lahf
push
outsb
push
insb
pushf
sbb
xchg
pop
mov
add
fidivrl
into
pop
adc
cmc
mov
dec
sarl
sub
xor
dec
std
cs
mov
call
shrl
sub
iretw
ljmp
mov
push
insl
mov
gs
pop
fidivl
lahf
dec
arpl
adc
fisubl
lods
pushl
lds
cmp
pop
inc
bound
popa
or
loop
pop
sub
mov
sub
call
xchg
pop
xor
push
cmpsl
insl
and
mov
adc
add
add
pop
loop
adc
addr16
lret
outsb
clc
sbb
inc
insb
shld
push
mov
aaa
or
add
cmpb
ljmp
hlt
jp
inc
imul
jb
and
add
pop
hlt
jo
or
lcall
pop
loope
pop
cld
jle
jg
sahf
mov
jns
clc
mov
cmp
push
test
pushf
pop
jl
test
mov
iret
xor
cld
pop
js
in
pop
pop
int3
mov
out
movsl
push
sbb
push
sbb
rcrb
mov
pop
pop
pusha
lahf
into
hlt
mov
loope
push
push
test
cwtl
lahf
dec
lahf
sbb
fcoms
mov
push
shlb
rclb
lods
push
mov
xchg
loopne
lods
push
icebp
insb
in
lret
add
popf
das
pop
push
or
call
stc
xor
add
hlt
push
xchg
push
mov
cmp
push
call
cmp
movsl
je
movsb
jmp
lahf
push
cmp
idiv
jg
pop
loope
add
loopne
ret
mov
mov
jno
enter
outsb
cmp
loopne
loope
dec
ret
lods
dec
mov
cmpb
cmp
cmp
xor
pushl
pop
clc
dec
ret
enter
fbstp
xor
add
or
in
ja
add
jg
mov
sub
cli
int3
cmp
xor
mov
or
jae
fidivs
jge
inc
xor
insb
sahf
cmp
pop
aaa
cli
pushl
mov
xor
xor
outsb
ja
fs
jno
mov
fcoml
lret
mov
stos
jp
ja
ret
decl
scas
push
dec
pop
xor
and
xor
mov
insl
pusha
push
insl
data16
jo
bound
lds
bound
sub
lcall
xor
xor
outsb
inc
or
arpl
je
int
fimull
push
sub
and
pop
es
js
xchg
push
ja
insb
insb
cmp
jnp
xor
inc
imul
addr16
sub
xchg
sbb
gs
adc
repz
push
jmp
push
ficoml
mov
fidivl
cli
sbb
pop
std
ret
mov
jne
or
push
xor
incl
dec
pop
mov
jno
dec
or
bound
pop
adc
lds
incl
movsl
add
mov
xchg
int3
adc
lcall
and
call
stc
std
aas
mov
ja
fisubrs
cmpxchg
push
ja
dec
sub
pop
fldt
std
lcall
je
or
jp
pop
enter
xor
in
mov
call
push
ret
in
and
mov
out
fsts
add
inc
dec
push
inc
adc
incl
dec
inc
xor
xor
daa
xor
xor
xor
inc
insb
dec
sbb
ljmp
xor
or
push
inc
inc
push
cmp
or
mov
jmp
arpl
xor
dec
sti
xchg
scas
inc
lahf
cs
xor
call
xor
aam
ljmp
aam
pop
xor
clc
xor
pop
outsl
pop
cli
outsl
fisttpll
popa
dec
jp
cmp
cmp
insb
shll
test
out
push
hlt
add
dec
inc
addb
mov
stos
movsl
incl
outsl
and
aaa
outsb
jmp
cmp
or
into
pop
scas
jg
ds
outsl
or
pop
repnz
or
jg
movsb
jne
ds
lcall
fsubr
imul
dec
iret
cs
mov
pop
outsb
pop
inc
push
les
imul
aam
shll
pop
lea
lods
fdivrp
stc
dec
decb
jle
ljmp
test
inc
lods
outsl
incl
jg
out
dec
cmpsl
sub
into
and
pop
inc
test
pushl
sbb
pop
jae
in
aad
mov
inc
fnstcw
imul
out
push
mov
inc
jae
call
cli
jmp
pop
aaa
cmp
cmp
inc
repz
sti
scas
or
sub
roll
push
sub
push
out
push
out
pop
aam
inc
fbstp
or
sub
mov
jnp
xor
dec
inc
xor
jmp
inc
fs
std
gs
popf
mov
je
xor
cmp
inc
loop
mov
dec
mov
je
push
push
xchg
pop
pop
mov
jg
jg
push
xor
cmp
imull
push
mov
mov
je
mov
ljmp
xchg
push
pop
cmp
shll
das
arpl
clc
inc
imul
pushl
sti
cmp
dec
inc
dec
lea
cmp
inc
jbe
lds
das
imul
jg
and
sub
dec
xchg
insb
and
lea
sub
das
out
imul
xor
or
sbb
push
jo
cld
fbld
xchg
pop
push
sahf
mov
xor
xchg
adc
fistpl
int3
sub
jne
data16
cld
or
xor
mov
lcall
pop
bound
fisttps
dec
data16
movsl
arpl
push
aad
outsl
jg
js
xor
inc
xlat
aaa
mov
push
xchg
sbb
mov
mov
insb
pusha
dec
popa
addr16
cmp
aad
out
outsl
mov
xor
cmp
or
jb
lret
idivb
sbb
xchg
fbld
dec
outsl
or
outsl
inc
mov
fisttps
cmpsb
cs
sub
imul
in
pop
lods
aaa
clc
lcall
hlt
mov
inc
jne
enter
dec
jae
push
push
mov
mov
fucom
test
insl
adc
jg
dec
imul
push
imul
ja
or
or
pop
shll
stos
xor
cmp
outsl
lcall
subl
pop
sub
mov
out
sub
std
decl
movsb
ja
aam
dec
mov
mov
xchg
cmp
or
or
lea
pop
adc
cmp
rcll
icebp
ljmp
and
ljmp
or
mov
cld
pushl
mov
push
popa
jno
outsb
dec
sub
loop
push
pop
mov
decl
jb
dec
jae
lret
stos
das
push
movsb
inc
btc
or
or
push
pop
bound
and
jle
push
push
jnp
jne
mov
in
fidivl
add
imul
test
clc
incl
outsb
daa
int3
lods
js
jo
xlat
jns
sti
out
outsb
jae
and
out
outsw
lcall
rcl
icebp
out
aas
rcrl
aad
jmp
cmp
imul
xchg
testl
push
incl
sub
and
or
mov
cmc
ss
icebp
xor
sub
add
and
pop
mov
sbb
adc
das
xor
movsb
and
push
loopne
fs
lcall
push
jae
frndint
fbstp
or
aas
dec
push
das
std
pop
mov
inc
inc
ja
push
push
dec
cwtl
mov
lcall
lods
lret
jge
add
jo
shll
ss
rcrl
dec
add
jmp
fbstp
into
test
pop
cli
pop
or
fists
into
ret
fnstenv
inc
push
mov
clc
test
sbb
cmpsl
push
lcall
pop
and
pop
out
xor
cmp
sub
dec
and
incl
sbb
int
mov
cmp
fdivrl
or
daa
jge
aaa
out
pop
repz
sti
xor
mov
xchg
push
fwait
sbb
dec
mov
mov
xlat
add
insb
jmp
jg
dec
test
fs
lgs
add
mov
ljmp
dec
push
out
pop
mov
xchg
stos
sbb
sub
or
std
pop
insb
repz
jo
popa
jbe
dec
ret
test
mov
lret
es
lcall
inc
cmp
ds
sar
cld
add
dec
inc
test
pusha
cmp
negb
cltd
jecxz
xchg
cli
mov
out
sti
jae
divb
imul
push
inc
cld
push
and
cld
mov
jl
gs
enter
mov
sbb
dec
das
das
lock
mov
js
adc
inc
lret
std
testb
out
lret
daa
jnp
ds
mov
mov
in
test
jmp
mov
jno
popa
or
rol
lds
cmp
in
lcall
mov
andb
pop
popa
call
xor
or
push
das
sub
pop
ljmp
insb
xor
aad
inc
in
es
or
dec
add
icebp
inc
xchg
pop
or
adc
adc
or
inc
enter
leave
in
or
imul
sbb
je
xor
outsb
adc
adc
sbb
mov
jg
subb
adc
push
sbb
filds
dec
add
mov
imul
lock
insb
jns
or
outsl
pop
mov
dec
xchg
push
xor
or
mov
xor
inc
push
das
push
pop
or
loop
inc
clc
adc
fwait
call
jb
push
out
subl
call
or
jg
cli
adc
nop
dec
push
jns
add
stos
mov
add
dec
adc
sub
sub
mov
mov
sbb
sbb
pushl
dec
add
sbb
add
lret
adc
or
dec
call
es
sbb
stos
xchg
xor
sar
add
and
mov
lahf
mov
jg
lret
ljmp
lock
jp
and
ret
popaw
shlb
mov
dec
outsb
or
mov
or
mov
icebp
pushl
clc
cmpsb
cmpsl
sbb
mov
mov
cmp
ljmp
lret
aad
cmp
push
inc
push
push
mov
mov
push
push
imul
jg
sbb
int3
inc
data16
pop
add
jbe
push
sub
add
pop
loop
pop
sub
sub
add
rol
jp
sahf
dec
adc
mov
sbb
and
in
jns
sarb
dec
push
aam
enter
out
mov
and
xchg
dec
pop
mov
jg
in
loopne
aaa
and
and
and
fs
scas
mov
mov
xor
inc
push
sti
jmp
das
das
mov
pop
loop
stos
rcrb
inc
je
call
pop
pop
lea
mov
push
call
addr16
imul
lcall
push
xor
mov
push
inc
inc
push
push
inc
xchg
lret
xor
and
call
data16
or
jnp
push
xchg
pop
adc
lds
push
or
fwait
daa
arpl
incl
cld
lret
push
cmp
push
mov
push
push
in
sbb
and
fnstsw
xor
inc
outsl
or
cwtl
xchg
arpl
jg
out
mov
mov
jb
jae
pop
or
and
js
pop
out
pop
mov
sub
adc
push
and
cmp
xchg
test
mov
outsl
cmc
dec
mov
addr16
into
adc
inc
xorl
popa
arpl
imul
dec
dec
pushl
clc
pop
cmp
inc
push
insb
xor
lds
mov
cld
add
inc
addr16
arpl
or
sbb
push
sti
fucomi
dec
inc
cmp
fs
rorl
and
imul
lcall
std
js
das
outsl
enter
shr
mov
or
add
aaa
or
cmc
push
push
jp
rcrb
sub
aaa
outsl
pop
ljmp
loop
sbb
xor
insl
jecxz
dec
add
ds
push
imul
or
mov
xor
mov
inc
pusha
in
mov
loop
dec
dec
push
mov
dec
cmp
dec
test
jg
pushl
repz
insb
or
dec
inc
pop
or
lahf
pop
dec
dec
ds
incl
push
push
dec
push
mov
mov
pop
cmp
or
jp
jae
xor
and
ljmpw
lock
xor
icebp
insl
pop
mov
test
mov
dec
mov
decl
xchg
loop
into
and
mov
and
mov
repz
inc
jb
mov
lds
std
xor
add
imul
fidivs
cltd
cs
jae
pop
cmp
push
sti
out
call
lahf
jae
lret
cmp
jne
pop
sub
jae
mov
icebp
or
xchg
cmp
in
pop
or
mov
rolb
sbb
ljmp
ljmp
mov
sub
or
hlt
ljmp
das
add
je
test
jp
mov
dec
lds
add
mov
popf
xor
aam
andl
mov
mov
call
lods
and
xor
das
call
mov
aam
mov
ds
and
dec
cmpsl
inc
push
insl
mov
and
decb
push
dec
andb
enter
test
jbe
sar
jmp
jp
push
addr16
fneni(8087
mulb
icebp
add
push
sarl
scas
adc
cwtl
gs
shrb
outsb
out
mov
or
inc
dec
push
push
mov
push
das
or
and
jmp
rol
out
push
aas
xchg
mov
dec
fisubrl
jae
add
inc
out
push
mov
loopne
dec
inc
test
or
dec
test
imull
sub
sbb
mov
and
jg
mov
mov
adc
cmc
pushl
clc
pop
xor
das
popa
bound
cltd
and
sbb
js
orl
xchg
inc
mov
test
xor
mov
repz
fwait
push
cwtl
mov
dec
push
cmp
xchg
bound
cltd
bound
std
push
movl
sbb
push
jno
push
pop
push
into
add
jno
or
or
dec
fdivs
pop
jecxz
xor
popf
mov
aas
and
je
or
jmp
jne
or
testl
sahf
gs
repz
and
js
outsl
jg
xor
jns
ret
push
loop
jp
adc
icebp
xor
jnp
xor
fld
test
pop
mov
dec
push
xor
xor
or
aam
xchg
add
dec
pop
xor
int3
inc
jl
mov
pop
xor
call
jl
cwtl
xor
xor
xor
ss
cli
cmp
aaa
mull
cmp
ljmp
cmp
cmp
sub
dec
data16
leave
icebp
out
and
clc
gs
test
mov
shrl
adc
xor
mov
adc
negl
mov
or
inc
fstpt
stc
or
mov
sbb
inc
inc
push
daa
cmp
push
mov
or
add
mov
jae
lahf
daa
pop
fisubrl
jmp
in
out
dec
popf
jns
mov
pop
xchg
outsb
or
add
push
add
fcmovnu
dec
or
jnp
adc
frstor
jl
aam
ret
and
stos
fwait
int3
test
mov
rcr
jecxz
cmpsb
dec
or
fs
iret
data16
call
inc
inc
xchg
data16
add
dec
inc
dec
push
testl
dec
add
or
dec
js
add
fiadds
insb
or
mov
mov
cmp
outsl
sub
jmp
and
cmp
jp
fldt
or
dec
repz
movsb
xchg
movsb
mov
fildll
adc
fwait
push
gs
inc
inc
ficompl
outsb
imul
dec
mov
sub
addr16
sub
out
pop
push
jl
mov
xor
jg
ljmp
pop
mov
das
out
sbb
or
push
xchg
insl
or
lds
dec
jne
dec
fwait
mov
push
rorl
pop
dec
or
std
call
pop
adc
pop
out
in
insb
lock
add
pop
test
pop
cmpl
inc
lahf
jmp
pop
popf
out
stos
popa
jecxz
das
xor
inc
xchg
dec
and
push
ja
outsb
outsl
jge
shl
and
add
call
push
data16
pop
iret
push
lods
dec
mov
push
inc
dec
and
das
icebp
out
test
dec
cmp
nop
mov
sub
push
outsl
mov
decl
sbb
cld
xchg
pop
sub
mov
outsb
cmpsb
insl
fs
in
ljmp
cld
push
lods
mov
mov
push
adc
ljmp
mov
pop
data16
mov
push
mov
outsb
cmpsl
jecxz
test
loopne
incl
inc
pop
pop
push
lock
sbb
cmp
inc
lcall
in
pop
loopne
repz
int3
mov
rcl
dec
call
xchg
cli
ljmp
ss
and
int
sbb
push
fs
aas
decl
fdivl
xor
jo
je
mov
jb
movsb
sub
shrb
inc
mov
sbb
mov
inc
iret
or
mov
hlt
mov
rcrl
mov
adc
xchg
or
ljmp
cmovne
sbb
push
fcmovbe
mov
psllw
add
stos
pop
ljmp
dec
outsl
stos
adc
imul
jmp
sbb
sub
es
insb
xchg
jmp
sbb
pop
pop
inc
add
hlt
mov
sub
mov
jo
dec
lret
mov
jbe
dec
push
lods
in
jmp
push
lcall
push
mov
movsl
adc
outsl
aad
mov
pop
inc
mov
sti
jmp
in
and
lret
icebp
lret
adc
addb
fsubrl
jne
mov
fcomps
pop
push
dec
pop
lock
jg
inc
addr16
dec
cmp
repnz
or
bound
loopne
push
adc
mov
pop
gs
ja
pusha
jne
sub
fnstsw
pop
or
mov
adc
cmp
jb
call
jb
movsb
jge
or
testl
pop
jp
insb
adc
xchg
sub
push
xchg
sahf
gs
lret
lcall
outsl
adc
dec
popa
into
daa
mov
or
or
pushl
inc
cmp
sti
jle
sti
adc
daa
or
and
inc
jns
adc
ljmp
cmp
mov
sbb
sub
xchg
clc
in
incb
add
mov
fwait
cmc
pushl
jnp
bound
inc
fs
popf
mov
add
cmpsl
inc
dec
or
imul
dec
fs
scas
ja
pop
push
lret
rclb
mov
push
fsubrl
mov
pop
dec
cmp
je
mov
negb
push
mov
add
insb
shlb
mov
lock
add
push
mov
mov
push
adc
xor
ss
and
ud0
lock
xor
or
push
xor
popa
sahf
arpl
add
in
cvtdq2ps
pop
or
sbb
push
mov
xor
sti
movl
dec
popf
pop
mov
nop
jo
inc
rol
ds
fwait
test
stos
jne
adc
inc
mov
mov
xchg
lea
adc
xor
xchg
cli
jg
loop
cmp
cmpb
in
popf
cmpsl
out
jne
cli
push
cmpsb
xchg
pushl
mov
cwtl
cmp
cmpsb
lcall
push
mov
outsb
ret
adc
fdivr
or
dec
push
iret
ret
xorl
adc
and
push
outsl
ret
or
adc
jecxz
outsl
mov
repz
jmp
test
push
fisttps
das
jo
jmp
cmpsb
in
popf
push
rcll
push
mov
call
aas
fildl
inc
adc
or
xchg
gs
jg
cmpsb
cld
aad
adc
adcl
sub
outsl
lea
adc
fsubrp
mov
mov
dec
in
cwtl
jle
push
fisubrl
pop
mov
lds
cmp
lret
sbb
adcl
gs
pop
and
and
push
fucomi
mov
sti
lcall
cli
std
inc
aaa
xor
mov
mov
movsl
push
out
popa
cmp
je
aad
cs
push
decl
sub
shrl
rol
and
in
push
inc
setg
scas
mov
xchg
outsl
aad
aad
jo
outsb
aas
movsb
mov
jmp
hlt
cmc
push
mov
imul
cwtl
inc
bswap
gs
aaa
scas
and
ljmp
cld
icebp
push
cs
dec
xchg
dec
aam
sbb
push
lods
inc
aad
cmp
jo
jb
mov
sbb
sar
jmp
lahf
sbb
jbe
push
sub
sbb
xor
dec
div
sub
adc
jmp
push
adc
movsl
out
mov
jmp
jg
test
push
jnp
jle
ljmp
mov
scas
movsl
ret
or
push
flds
push
call
mov
dec
mov
lock
mov
incl
mov
adc
mov
and
add
mov
in
pushl
js
or
inc
jo
sub
and
xor
decl
imul
addr16
outsl
iret
add
loope
and
or
in
test
jl
add
incl
or
stc
mov
int
pushf
out
call
jl
add
mov
popf
or
dec
aaa
test
lcall
jno
jo
lcall
mov
pop
iret
mov
leave
inc
fs
pop
jge
fldl
fs
push
enter
aam
outsb
mov
and
xor
leave
dec
ljmp
and
xchg
insb
sbb
jle
loop
daa
ret
imul
aaa
decb
sbb
cli
fsts
aaa
insb
ja
mov
filds
dec
jae
movsl
jne
mov
cld
popf
push
mov
ljmp
xor
or
daa
xchg
mov
cmpsb
add
repz
rolb
mov
and
cltd
xor
out
je
push
push
adc
dec
adc
out
and
sbbl
mov
imul
es
cltd
decl
arpl
fwait
out
and
cmpsb
aaa
xor
jno
cltd
mov
mov
out
and
in
xchg
mov
mov
mov
mov
fbstp
mov
xor
mov
mov
pop
mov
and
inc
jae
scas
sti
push
repnz
add
inc
mov
in
int3
mov
xor
lods
jmp
pushw
add
lcall
jg
xchg
rorl
or
ds
sahf
daa
repnz
pop
inc
lret
xchg
sbb
cmp
icebp
jecxz
hlt
arpl
inc
repz
in
pushl
fs
cmpsb
loope
sub
int
imul
and
inc
mov
incl
dec
ljmp
jnp
bound
mov
decl
sub
mov
int
and
lods
add
cld
jge
aam
mov
shl
call
pop
xchg
fidivs
imul
jecxz
ljmp
fimuls
cmp
repnz
cmp
jnp
jge
clc
incl
insl
stc
push
movsb
test
jne
imulb
jnp
out
mov
mov
ljmp
mov
imul
fisttpl
push
daa
incl
lahf
mov
xor
inc
mov
dec
daa
push
mov
fldenv
ja
xchg
repnz
xchg
int3
in
xor
xchg
jbe
jnp
sbb
ret
negl
dec
sub
jp
and
and
incl
cmpsb
jbe
cs
pop
mov
test
pop
gs
imul
dec
mov
call
xor
insl
lret
in
add
incl
inc
ljmp
jns
and
arpl
fstpt
lcall
insl
fwait
hlt
fsubrp
dec
lret
or
pop
aad
sahf
mov
mov
inc
jne
sub
jg
inc
cs
sbb
inc
xchg
mov
fistpll
js
shl
jb
cmp
adc
filds
mov
dec
in
mov
push
imul
fsubrs
daa
inc
jne
imul
add
cmp
dec
xor
mov
cs
pop
pushf
mov
jne
xchg
outsb
dec
xchg
pop
je
ficomps
out
inc
dec
fstpl
pop
inc
xlat
push
mov
sbb
adc
xchg
push
cmc
decl
push
cld
mov
lret
sub
adc
inc
insb
sarb
lcall
ljmp
fbld
insb
lcall
jecxz
mov
and
push
pushl
popa
es
aad
fnsave
hlt
adc
mov
mov
inc
jne
notl
sahf
arpl
idiv
pop
dec
or
mov
mov
mov
ljmp
sub
clc
aaa
imul
out
scas
jle
fwait
rorb
dec
xchg
daa
xor
cmpsl
mov
mov
cli
sarl
jmp
cmc
call
ss
call
cmpsl
aaa
xchg
sub
push
aaa
push
outsl
movsl
test
or
jg
or
sub
data16
cmp
adc
jo
lahf
jns
cs
sahf
pop
cs
sarb
pushl
mov
gs
jae
xlat
das
frstor
jp
addr16
outsl
psadbw
xor
and
decl
sub
hlt
les
xor
push
imul
jecxz
jmp
xchg
or
xchg
mov
out
or
pop
icebp
dec
lods
jg
mov
xchg
fmull
fwait
lods
lds
pop
pop
shrl
jmp
test
and
jp
jns
jb
shll
adc
pop
pop
mov
sarb
cmp
bound
lcall
ljmp
loopne
cli
xchg
adc
cmp
or
stc
push
sbb
push
adc
or
in
mov
xor
push
pop
sub
mov
mov
inc
dec
pushf
push
jg
decl
xchg
and
fcoms
sub
mov
sub
lahf
lcall
push
lea
mov
jmp
je
loopne
pop
jns
pop
mov
ljmp
sbb
out
pop
lret
push
dec
dec
gs
aaa
mov
xor
das
lock
xchg
fistl
movsbl
pop
push
inc
sbb
das
add
pushl
sar
dec
xor
mov
xchg
nop
popa
incl
sbb
rcll
out
out
fbld
and
sbb
fcompl
fwait
inc
mov
xor
in
jmp
pushf
js
ret
push
cmp
cld
and
into
inc
cld
and
and
in
es
sub
pop
cmp
jmp
daa
cld
pusha
jle
and
cs
xor
fists
popf
and
inc
fistps
das
das
das
pop
stc
es
sub
stc
cmp
aas
stc
daa
pusha
stc
jle
stc
cs
mov
mov
pop
repz
and
sub
das
das
das
repz
cmp
pusha
jle
and
xor
test
scas
out
pop
into
and
and
pop
gs
jg
jmp
pop
jle
out
cmpsb
sahf
das
pop
js,pn
ja
out
jle
and
ljmp
pop
cmp
and
jo
and
pop
dec
pop
mov
repz
stos
add
stos
sub
push
inc
push
jmp
lcall
mov
sbb
push
push
pop
lds
mov
arpl
pop
mov
add
pop
add
sub
add
pop
out
lds
xor
fsubr
pop
cs
pop
repnz
lea
imul
add
sbb
ljmp
pop
inc
push
js
add
dec
push
mov
mov
outsl
std
push
cmc
mov
push
jne
or
imul
dec
pop
jge
lock
std
pop
pushl
sub
outsl
ret
pop
fcomp
jae
sub
ljmp
xchg
test
pop
add
sbb
push
inc
push
js
add
add
test
push
and
mov
addl
mov
outsl
je
jo
imul
int3
dec
pusha
jle
pop
mov
xchg
push
xor
lods
jg
add
aaa
mov
shrl
jp,pn
fldenv
imul
data16
add
jns
xor
sbb
inc
insb
xor
mov
and
sub
insl
ja
xor
cs
out
roll
rorb
xor
pop
xor
or
mov
lods
cmp
in
or
aam
ret
push
dec
mov
ja
rorl
sbb
dec
mov
sub
jae
lock
mov
jg
les
mov
jns
incl
out
sahf
sub
adc
or
add
clc
mov
repz
aam
int3
inc
mov
mov
pop
aam
mov
movsb
jo
cwtl
mov
nop
mov
test
js
cmp
clc
jg
jo
iret
push
push
iret
dec
cs
jns
and
sbb
adc
call
xchg
add
cld
mov
hlt
je
cmp
mov
jo
fdivl
enter
mov
sub
mov
xchg
sbb
mov
cwtl
mov
pop
nop
test
fistpll
or
pusha
mov
or
pop
cld
push
dec
fistpll
das
inc
mov
cmp
sbb
adc
adc
out
sahf
jg
incl
cmp
mov
repz
iret
in
repz
iret
enter
repz
cmp
test
movsb
iret
icebp
in
lcall
fstl
jl
lahf
insb
mov
push
cmp
decl
xor
and
iret
sbb
or
cld
scas
ret
in
scas
xchg
scas
push
fmul
mov
ljmp
les
scas
loope
push
xchg
nop
mov
ljmp
int3
cmpb
out
sahf
cmp
xor
out
sahf
add
and
scas
clc
cmc
mov
dec
add
bound
call
xchg
scas
paddq
loope
cli
jg
daa
fsubrl
js
mov
cmp
xor
sub
mov
iret
pop
cmp
push
hlt
rclb
scas
loope
scas
ret
inc
scas
xchg
or
push
and
push
sbb
sub
test
lods
call
out
sahf
int3
jns
clc
or
mov
mov
mov
pusha
push
out
sahf
inc
mov
sub
and
outsl
clc
or
out
lods
sbb
iret
in
cmp
fcoml
loop
push
test
movsb
cmp
pushf
repz
iret
mov
repz
push
push
mov
cmp
cmp
xor
sub
and
fisttps
cmp
cld
jno
hlt
out
sahf
in
and
fisttpl
jge
jns
mov
pushf
jae
sahf
cmpb
out
sahf
test
pop
pop
xor
sub
div
gs
and
mov
and
mov
jle
fadds
int3
repz
sahf
mov
lods
mov
cmp
je
push
fwait
xor
call
cmp
adc
jns
in
sahf
aam
das
hlt
out
jge
mov
movsb
out
xchg
jns
test
jl
xchg
icebp
ljmp
xchg
pop
sahf
push
jns
inc
out
sahf
xor
sub
test
popf
jno
jp
repz
pop
std
movb
jnp
xchg
cwtl
test
jecxz
std
mov
js
loop
sarl
mov
test
add
cmp
sub
adc
das
mov
xchg
cmp
jl
je
mov
dec
inc
rep
xor
sub
adc
dec
xchg
cmpsb
hlt
sahf
in
jns
cmpsl
std
incl
jne
jns
xor
je
sbb
cmpsb
cmp
decl
std
cmpsb
pop
jo
pop
mov
cmpsb
xchg
push
cmp
add
push
xor
inc
aas
mov
rol
incl
pushf
jnp
movsl
add
psrad
xor
mov
and
pop
xorl
cmp
pop
sub
pop
xchg
movsl
popa
and
push
ja
pop
add
inc
push
inc
inc
push
dec
push
adc
mov
cmp
add
dec
adc
push
or
xor
lcall
xor
and
mov
and
pusha
mov
inc
dec
or
push
dec
inc
pop
adc
roll
sub
xchg
and
icebp
cmp
jle
jo
jae
dec
outsb
push
xor
jl
sti
mov
call
mov
jle
je
call
jbe
cmp
push
aaa
cld
ss
xor
cld
xor
xor
xor
enter
cmp
aaa
ss
orl
push
mov
jno
pop
ret
repz
arpl
pop
mov
jb
dec
popf
pop
cmp
jmp
pop
call
out
push
fiadds
in
push
roll
cmpsl
push
pop
jb
push
jae
push
pop
ds
jbe
pop
jb
mov
aad
xor
repz
pop
pop
add
insl
or
sti
mov
fildl
cmp
pushf
pop
mov
pop
das
push
cmp
jns
aaa
clc
jg
xor
loope
xor
xor
clc
xor
xor
adc
imul
xor
push
test
xchg
das
ja
in
or
mov
repz
ja
inc
or
inc
out
mov
pop
or
xor
outsl
sub
imul
incb
pushl
push
mov
rolb
je
call
xchg
ret
decl
test
ja
js
jno
jp
jno
ja
gs
xor
push
add
ja
lcall
mov
cmp
jns
jae
lahf
xchg
movntq
cld
out
std
or
add
xlat
add
xchg
xchg
sbb
lods
rclb
xor
xor
xor
imul
sub
mov
adc
rorl
and
movl
or
pop
aas
cmp
or
pop
cli
pushl
flds
pop
or
and
pushf
add
and
or
out
filds
lahf
add
mov
cmovne
lods
add
or
iret
pop
scas
mov
fisttpll
fldenv
cmp
popf
or
ja
fdivr
clc
add
call
aaa
add
and
add
pop
leave
pop
lret
xor
pop
xchg
xor
clc
xor
inc
enter
add
out
mov
jb
dec
mov
flds
add
clc
test
xor
ss
xor
fdivl
mov
sub
dec
adc
rol
mov
pop
mov
add
jbe
das
cld
jg
aam
sub
mov
or
insl
bound
and
cld
adc
sbb
rorl
sub
pop
pusha
outsb
mov
push
add
cmp
test
mov
sbb
arpl
call
aam
or
insl
inc
cmp
lods
movsl
dec
aaa
cmpsl
rclb
sub
in
sbb
int3
add
loope
push
xor
mov
iret
mov
mov
push
push
test
outsb
and
sbb
fisttps
mov
out
sub
lret
ret
inc
push
addr16
jg
ljmp
cmp
insb
jne
popa
imul
dec
xlat
lcall
sub
jbe
sbbl
repnz
pop
arpl
or
or
insl
push
insb
cmp
adc
sbb
sbb
incl
xchg
dec
add
jb
ss
inc
or
aaa
daa
aas
xor
clc
pop
lods
push
loope
adc
jno
cmp
lods
incl
xlat
jno
jne
push
push
sbb
icebp
aas
insl
or
push
in
pop
iret
cmpsl
xchg
fstpt
popa
dec
std
lcall
mov
cmpsb
sub
lret
push
add
adc
shll
aad
inc
xor
addr16
lcall
je
in
mov
ja
ror
xchg
adc
mov
mov
xor
incl
outsl
ss
shr
pop
in
or
iret
ss
sahf
push
add
das
icebp
gs
jo
ficoms
insb
dec
jg
insl
lock
jne
push
movsb
jno
jnp
mov
insl
insb
std
pop
insl
call
xchg
out
sbb
sbb
ret
outsb
mov
push
xor
add
push
jns
or
in
mov
into
or
imul
testb
jecxz
lcall
push
addr16
daa
es
xlat
popf
dec
idiv
pushl
popa
cmp
add
iret
inc
push
inc
ror
or
incl
call
and
inc
jae
adc
fisubs
fdivrp
pushl
add
sbb
std
pop
inc
rcl
sub
out
and
pop
lret
inc
fistpll
xchg
ljmp
jae
and
insl
jmp
xor
push
sub
fcomps
adc
lea
and
into
pushf
jbe
nop
sbb
dec
fildl
loopne
pop
lods
add
das
in
jg
xor
je
das
int3
popa
dec
testb
notb
movsl
repnz
loope
aaa
decb
pop
xchg
and
cmpsb
push
or
adc
adc
add
lods
xor
push
adc
ljmp
cmc
outsl
or
leave
mov
dec
dec
sub
push
push
adc
cmpsb
mov
pusha
mov
mov
xchg
fwait
call
mov
lahf
push
dec
aaa
sub
and
dec
xor
pop
in
inc
xor
call
lcall
shlb
cmp
jns
aam
out
dec
pop
lcall
dec
jno
je
mov
clc
pop
clc
ljmp
popf
push
mov
pop
scas
jnp
pop
repz
push
lret
jecxz
imul
call
sbb
pop
sar
pop
ss
mov
stos
pop
inc
addr16
mov
mov
cmp
iret
pop
rclb
sbb
cmpsl
subl
inc
mulb
xorl
sbb
add
dec
ret
xor
xor
fbld
test
test
jg
push
ds
push
pop
lods
push
lds
test
data16
call
cli
outsl
mov
adc
nop
push
cmp
scas
jb
adc
push
xor
xor
xor
fs
jp
push
addr16
pop
clc
jg
ror
mov
mov
in
int
loopne
stc
in
adc
push
dec
ljmp
scas
xor
lret
dec
aaa
mov
mov
imul
cmpsl
inc
dec
inc
cs
repz
sbb
in
outsb
mov
ljmp
jnp
lea
mov
pop
fimuls
inc
pop
or
jg
mov
cmp
hlt
xchg
cmc
mov
sbb
outsl
and
inc
xchg
pop
test
ljmp
and
cvtps2pi
pop
mov
das
das
dec
inc
mov
push
mov
aaa
sbb
jp
sub
aas
gs
mov
arpl
ljmp
pop
or
pop
sub
cmp
mov
fidivs
daa
jnp
idiv
out
ljmp
imul
adc
pop
mov
dec
and
cmp
aaa
testb
push
xor
pop
mov
daa
jae
ss
es
subb
dec
inc
dec
mov
push
jl
aaa
push
fistl
shll
jmp
das
icebp
pushl
adc
test
mov
xor
cld
pop
dec
inc
outsl
ja
and
test
outsb
jle
push
outsb
pop
mov
mov
inc
jmp
jl
call
out
imul
cli
ljmp
jbe
sbb
call
outsl
and
pop
nop
addr16
mov
and
out
add
cld
cmp
dec
insb
icebp
adc
hlt
in
ljmp
pop
js
sbb
cwtl
loopne
and
sti
mov
outsl
and
xchg
jp
dec
les
pop
mov
or
daa
and
in
cmp
rorb
sub
sti
pop
fs
push
loop
mov
add
xchg
lahf
mov
dec
inc
scas
push
mov
jmp
dec
lcall
fwait
nop
jns
call
mov
pop
ficompl
inc
mov
jnp
jl
cs
ljmp
mov
ja
push
dec
dec
push
jmp
xor
outsl
pop
test
push
int3
test
fildll
dec
adc
mov
pop
and
mov
jl
lods
sub
xlat
das
std
incl
xchg
mov
aaa
aas
xchg
popa
adc
pop
jle
test
xor
cli
mov
xchg
enter
mov
cmp
pop
clc
testb
sub
jg
arpl
std
mov
cmp
cmpsl
ja
push
pop
loopne
call
cmp
js
mov
ret
ret
cs
cmp
and
divl
call
pop
mov
xchg
jge
rorl
call
int3
ja
das
shrb
add
insb
insl
cltd
and
push
inc
imul
fs
lcall
std
xchg
jae
movsb
gs
mov
arpl
xor
push
std
incl
out
xor
imul
mov
mov
in
inc
mov
add
in
movsb
aad
and
xchg
scas
imul
mov
insl
jae
rcl
stos
sbb
inc
pop
ja
sbb
pop
addl
jmp
aad
adc
pop
xor
push
pop
dec
dec
dec
scas
aaa
incb
ljmp
pop
jbe
jp
cmp
pop
inc
inc
push
in
decl
lcall
insl
scas
mov
push
push
pop
bound
shlb
lret
lret
fnstsw
inc
dec
push
jb
outsb
dec
pop
iret
das
lahf
call
xchg
das
pusha
stos
call
inc
inc
xor
imul
inc
pusha
inc
xor
xor
stos
rorl
jg
dec
inc
mov
in
stc
inc
lcall
mov
aaa
mov
sti
daa
mov
adc
xchg
cli
into
mov
add
inc
inc
aad
cmp
das
std
fildll
inc
inc
cwtl
inc
jns
push
test
mov
ljmp
pop
xchg
xchg
scas
jl
mull
insl
scas
nop
insb
jg
xor
inc
addr16
sarb
mov
mov
outsl
cld
mov
in
mov
pop
dec
mov
rcrb
dec
mov
movsl
scas
jno
sub
and
or
repz
xchg
outsb
cli
out
cli
dec
in
fistpl
mov
mov
test
dec
mov
scas
popa
push
imul
mov
and
clc
es
arpl
xchg
idiv
aaa
cs
add
cwtl
jle
ds
jg
push
pop
mov
pop
incl
bound
xorl
xor
repnz
mov
sub
inc
mov
sub
sbb
pushl
xor
sub
xchg
add
jnp
cli
rcl
push
jnp
inc
ds
incl
cmp
outsb
pop
loop
popa
repz
mov
hlt
fsubrl
mov
sub
or
popf
iret
push
jae
scas
notb
ljmp
inc
sub
dec
mov
das
fdivrs
int3
popa
mov
push
mov
aaa
and
add
push
mov
lcall
outsl
mov
and
cld
push
lea
and
mov
xchg
aaa
jae
nop
mov
or
or
sub
cltd
mov
push
popf
xor
cli
pop
and
pop
pop
clc
xchg
clc
xor
push
push
mov
out
cmpsl
jecxz
jo
adc
decl
outsl
jb
dec
jns
add
jo
mov
push
inc
mov
mov
xor
ljmp
je
sbb
fcoms
sub
dec
rclb
lds
out
clc
adc
jns
pop
mov
xlat
pop
push
push
fnstsw
ss
jno
stc
iret
jne
jl
xchg
arpl
jmp
insb
pop
sub
pop
pop
fidivl
cmp
and
dec
push
in
decl
dec
in
jge
das
inc
or
inc
jo
xor
or
jne
dec
je
data16
cmpsl
rolb
jo
pop
xor
sbb
je
cmp
mov
push
push
sbb
jne
xchg
sub
fwait
sti
xchg
inc
pop
loop
incb
arpl
mov
xchg
xchg
ret
insl
cli
ficoms
or
das
lock
ljmp
add
add
and
mov
nop
lock
shll
cli
pushl
cmp
imul
decl
pushl
jp
xchg
dec
pop
mov
lea
insl
jbe
xchg
sub
test
je
push
fistpll
movsl
jbe
cmp
dec
loopne
jno
outsl
icebp
call
jg
xchg
rcrl
fcmovnb
cmpsb
add
push
mov
outsl
out
int3
pop
jp
nop
call
shll
jg
aaa
and
add
jns
arpl
outsl
std
dec
mov
mov
sub
xchg
sbb
popf
int
popa
mov
addr16
addr16
mov
daa
push
aam
setbe
jecxz
ljmp
dec
cltd
dec
mov
test
sbb
jg
cmp
xor
lods
idivl
sbb
stos
jl
jo
insb
mov
subl
jmp
out
sbb
mov
popf
mov
loop
push
rcl
ds
lcall
fisttps
loope
or
mov
pop
ret
mov
hlt
xor
lret
stos
imul
out
mov
fistps
lods
add
jmp
inc
cmp
jnp
shlb
mov
decl
cld
outsl
sbbb
fdivl
jmp
xchg
imul
incl
dec
pop
es
sub
daa
fsubl
sbb
ja
lods
mov
pushl
dec
pop
inc
mov
je
push
cmpsl
cmp
leave
ja
xlat
in
mov
clc
incl
in
pop
pop
xor
xlat
add
push
pop
mov
pop
faddl
jmp
outsb
and
das
push
bound
loope
sub
ljmp
int3
pop
imul
or
or
cmp
ss
jnp
sub
add
insb
cld
push
ja
pop
cmp
test
mov
scas
xor
or
mov
sub
sbb
xchg
cmpsl
in
outsl
hlt
andl
rol
data16
stos
fwait
in
or
jmp
inc
out
fdivr
pop
inc
pop
outsl
test
incb
data16
pop
lods
xchg
inc
je
sar
xchg
ss
cmp
mov
add
pop
adc
dec
cmp
mov
cmp
ret
pop
mov
adc
or
pop
or
jl
xor
sub
or
pop
loopne
pop
push
jne
sub
enter
bound
jecxz
outsb
cld
pop
clc
rorb
call
jbe
pop
dec
jnp
mov
xchg
inc
mov
inc
imul
pushl
push
push
lock
jg
lcall
cmp
jb
lret
push
jae
xchg
sbb
pop
outsb
or
in
push
add
push
mov
push
adc
popf
jnp
pusha
jb
adc
idivl
imul
aaa
mov
ficoms
frstor
mov
mov
pop
cld
jne
mov
imul
dec
or
jno
pop
call
mov
push
aad
sub
fucomip
ljmp
jle
in
aaa
cmp
or
mov
repnz
or
or
leave
dec
jl
xchg
dec
call
and
aaa
inc
jmp
or
jle
fxch
repz
xor
incb
inc
imul
dec
mov
sub
insl
imul
shlb
push
push
popf
inc
lcall
mov
push
jns
mov
dec
fisubl
stos
popf
adc
cmp
cmpsb
adc
fisubrs
or
out
or
pop
add
stos
imul
mov
jnp
imul
repz
jg
dec
lcall
add
jae
mov
insl
setbe
test
fcoms
jae
mov
pushl
fisttpl
outsl
test
cmp
dec
mov
lea
lock
call
add
push
mov
push
add
insb
sbb
shl
js
sub
inc
and
je
pop
sub
lcall
sub
mov
enter
int3
lahf
das
ljmp
mull
push
mov
xchg
pop
inc
out
rolb
ja
addb
push
fisubs
add
gs
shr
lahf
ret
pop
andl
add
mov
or
push
pop
incl
inc
out
and
test
add
push
pop
dec
in
cmp
mov
mov
xchg
sti
mov
xor
ret
je
pusha
cmp
pushl
pop
andb
fcomip
mov
addr16
sub
dec
maxps
loope
jecxz
pushl
xor
and
jb
aaa
mov
das
or
cs
mov
ljmp
dec
jg
repnz
in
cmp
push
lcall
push
jg
into
inc
jne
call
add
mov
push
cli
or
aad
int3
cmp
es
mov
sub
cmp
xlat
sub
mov
or
jg
push
cltd
mov
cli
xor
wrmsr
sti
cmp
mov
out
mov
repz
enter
call
std
pusha
sbb
arpl
fbstp
scas
inc
test
sub
ljmp
aaa
cmc
cmp
idivb
dec
leave
push
cmpsl
pop
cmp
push
add
or
test
popf
mov
jp
lret
jg
call
or
rcrb
movsb
das
adc
lahf
jecxz
movsb
dec
stos
push
lahf
cmp
push
fnstsw
in
jns
jb
ja
test
pushl
movsb
sub
pop
insl
or
push
adc
pop
hlt
cmpsl
test
sub
jb
pop
mov
dec
inc
or
test
sti
or
mov
and
in
sub
scas
jb
adc
mov
push
push
push
and
inc
jg
call
outsl
jae
loop
in
mov
sahf
add
clc
sbb
sub
fists
cmp
int3
repz
iret
mov
sbb
repz
jo
fs
repz
nop
push
mov
ljmp
cmp
adc
or
add
cld
sbb
call
mov
push
cwtl
std
mov
js
insb
sahf
fs
push
out
push
cli
jg
xor
and
sbb
adc
out
mov
sbb
loopne
fdiv
sub
rep
cwtl
or
js
pusha
add
pop
out
and
adc
or
add
jno
in
insl
rcrb
sbb
mov
mov
andb
adc
loope
xor
sub
add
mov
aaa
pop
int
mov
xor
and
repz
clc
adc
inc
pop
ljmp
jg
je
dec
pop
push
mov
and
adc
jns
out
addr16
and
push
add
inc
iret
or
add
lock
call
out
xor
sahf
mov
sub
push
out
sahf
dec
test
push
push
movsb
adc
in
cmp
data16
or
mov
inc
dec
pusha
dec
iret
inc
cmp
sub
and
sbb
adc
lock
call
mov
sbbb
cmc
inc
test
sub
das
push
inc
xchg
adc
repz
jmp
mov
mov
jl
je
jge
mov
dec
nop
and
sbb
or
vmptrld
call
out
sahf
sarb
out
sahf
mov
sahf
jl
jo
out
sahf
push
jns
mov
sahf
xor
sbb
mov
jecxz
iret
call
sarb
mov
gs
gs
jns
dec
in
adc
or
mov
jns
enter
pop
lea
sbb
sbb
mov
mov
rolb
or
pop
xchg
adc
nop
rol
cmpb
mov
xor
inc
iret
repnz
repnz
hlt
out
loopne
aam
mov
mov
out
les
mov
hlt
or
insl
cmp
or
js
insb
sbb
mov
ljmp
adc
ljmp
jns
pushf
in
mov
ret
and
clc
or
ficoms
push
dec
xor
gs
and
ret
cmp
jns
test
js
lea
clc
gs
lock
stos
jne
dec
addr16
mov
hlt
test
push
popa
out
jbe
clc
jno
lock
fdivrs
push
shl
enter
adc
xchg
data16
insl
pusha
shll
jns
out
gs
int
mov
sbb
push
repz
test
jge
repnz
fidivrl
add
gs
test
jl
push
fsubl
adc
jecxz
jl
fwait
aaa
xor
mov
fwait
dec
xlat
repz
cmp
add
aas
pop
enter
sub
bound
pop
add
aam
pop
mov
pop
int
jl
mov
ljmp
imul
fcoms
js
xlat
and
inc
pusha
cmp
and
jo
pop
and
int
pop
cld
std
in
les
cmpb
ds
jno
sub
jl
es
and
and
xor
jp
test
add
jnp
push
hlt
and
inc
sub
xchg
icebp
push
cmp
and
clc
stc
pusha
mov
cmpsl
gs
lret
mov
push
in
sbb
adc
inc
cmp
or
or
inc
push
xchg
lret
nop
dec
mov
lock
idivb
in
enter
mov
iret
ja
imul
mov
add
mov
cmp
pop
fisubl
stos
xor
ficompl
cmp
andl
pop
les
mov
gs
add
add
repz
fiadds
sahf
cmpsb
nop
push
xorb
cmp
les
sub
repnz
ss
xor
cwtl
push
push
cmp
test
icebp
in
mov
cmp
xchg
js
or
je
mov
or
xchg
xchg
mov
pop
ja
add
mov
lcall
sub
pop
sub
mov
popa
imul
or
ud0
pop
add
test
cmp
add
mov
pop
incl
cli
arpl
arpl
pop
push
and
dec
or
jg
loop
or
add
cmp
lds
popf
pop
pop
ljmp
cmp
lds
popa
mov
bound
popa
je
repz
inc
pop
sub
hlt
cmp
adc
pop
jnp
es
or
je
hlt
pushf
pop
pop
jb
mov
push
mov
sub
into
pmaxub
call
icebp
sub
ja
dec
mov
jmp
adc
sahf
sub
pop
sbb
mov
outsl
lock
incl
xor
pop
mov
mov
jmp
outsb
and
or
imul
insl
mov
pop
mov
mov
testl
pop
std
fbld
pop
dec
bound
imul
add
cmc
jmp
mov
cmp
cli
jb
or
ds
das
movlps
lcall
pop
jns
popa
push
jp
push
jnp
out
xor
xor
loope
outsb
outsb
insl
pushl
lret
adc
je
insb
aad
iret
pop
mov
mov
dec
pop
jp
push
lret
test
dec
bound
sub
outsl
and
pushf
or
scas
push
or
and
outsl
decl
mov
xchg
or
iret
cs
jmp
mov
fnsave
mov
iret
popf
pop
pushf
cmp
push
pushl
sub
mov
imul
das
and
rdpmc
mov
jne
lcall
fsubs
jb
pop
addr16
mov
movhps
test
adc
lcall
cmp
in
xor
prefetch
jp
jl
and
or
into
in
pushf
decl
hlt
cmc
pop
mov
pop
push
imul
sbb
insb
push
rcrb
call
outsb
inc
and
repnz
xor
pop
jb
pop
pop
rcr
call
dec
pop
xchg
popl
out
fwait
xchg
je
inc
cmpsl
mov
xor
gs
das
jg
push
ss
out
jno
ja
cmp
pop
ret
das
fldcw
xor
jae
sbb
insb
outsl
addr16
ljmp
or
es
jae
repnz
fcmovnbe
mov
dec
test
jo
adc
jne
repnz
bound
insl
push
les
cs
outsb
orl
push
push
daa
jae
jb
inc
rorl
or
gs
test
add
fcmovb
pop
add
pushl
dec
and
pop
fiaddl
dec
loop
arpl
push
fisubrl
insl
in
decl
das
jp
sub
testb
test
cmp
out
sub
je
leave
sub
enter
or
fbstp
bound
push
push
cli
aaa
out
pop
push
xor
in
add
pop
out
sub
dec
popf
inc
je
jecxz
or
loop
push
cmp
dec
into
leave
pop
outsl
add
push
jg
test
ret
xchg
fdiv
aaa
or
jmp
out
pop
imul
pop
sbb
mov
test
ljmp
ljmp
or
xor
in
or
dec
ficoml
out
sbbb
mov
decl
daa
gs
add
sub
rorb
in
gs
adc
jmp
jne
fldt
lods
rcrw
fistpl
xchg
fs
cltd
fldl
mov
mov
inc
pop
in
outsl
incl
hlt
fimuls
mov
repnz
imul
jns
dec
or
and
mov
ret
in
pop
dec
adc
out
xor
gs
test
test
addr16
dec
mov
addl
jp
leave
xor
jo
xchg
jb
dec
jmp
sbb
dec
ret
cmpsl
or
cmpsl
outsl
daa
push
push
push
mov
js
jb
cmp
dec
bound
stos
or
insl
mov
insl
jecxz
call
sbb
push
mov
lods
jb
lock
inc
and
sbb
sbb
incl
imul
mov
in
jle
lock
xchg
xor
mov
daa
insb
aad
fcompl
fistpll
or
add
fldenv
fs
jg
mulb
jmp
and
lret
in
pop
push
lcall
test
mov
fidivrl
push
in
imul
jg
inc
stos
imul
lcall
insb
cmp
jl
fidivl
je
sahf
pop
sahf
mov
and
insb
xlat
cmp
std
lcall
mov
xchg
adc
sub
cmpsl
lret
pop
sbb
xchg
sbb
fs
sti
inc
incl
push
mov
aas
mov
repz
neg
jle
and
dec
pop
popa
aas
sub
es
pop
outsl
xchg
rorb
push
mov
sbb
out
shlb
ljmp
jmp
jns
pop
and
outsl
xchg
jb
into
mov
subl
xchg
test
pop
mov
mov
jg
xchg
decb
dec
sub
out
add
push
sub
popa
jns
mov
decl
mov
roll
test
xchg
cvtps2pi
xchg
popa
loop
push
add
ret
and
int
xchg
mov
loopne
jp
push
popa
test
dec
ja
pushf
insl
mov
sub
jmp
stos
sbb
popa
lret
rcrb
fwait
pusha
rorl
and
jne
dec
mov
or
push
outsb
dec
or
das
pop
das
insb
or
ljmp
mov
sbb
std
fisttps
add
ljmp
das
movsl
pop
filds
inc
jmp
loop
pop
nop
pop
insl
pop
mov
inc
or
fsubs
loopne
mov
leave
push
aam
in
push
jmp
mov
in
xchg
call
pushl
xchg
fmull
pushf
sub
dec
or
mov
cli
push
adc
imul
cmpsl
and
or
int
stc
cmpsl
or
insb
ljmp
or
fwait
mov
mov
jne
pop
sub
jns
repnz
fwait
push
cmc
fcmovnbe
jns
dec
imul
into
or
subl
frstpm(287
or
sarb
gs
jecxz
inc
dec
loopne
fsubrl
fbstp
add
ror
add
mov
repz
adc
idivb
pop
or
mov
push
fimuls
dec
arpl
test
cli
push
sub
adc
mov
sub
mov
mov
rcll
imul
fidivs
mov
jp
icebp
repz
ret
or
shll
cmp
cltd
add
fiadds
mov
out
mov
in
xchg
fnstsw
cltd
mov
lods
pop
dec
push
dec
push
lret
int3
cwtl
into
imul
out
jg
fnstenv
cmpb
or
xor
inc
jne
popf
or
jb
adc
call
mov
lea
shlb
aam
loopne
outsl
sub
or
pusha
cmc
jl
lods
mov
lods
adc
iret
jb
stc
inc
mov
lods
mov
mov
cltd
out
cmpsb
cli
sar
ja
jmp
lods
jg
mov
mov
xor
ljmp
lock
xor
pushl
addr16
cmpsb
sub
dec
je
mov
pop
cwtl
fs
popl
mov
mov
mov
pop
shll
mov
sarb
lds
sti
in
emms
inc
pop
lret
call
cmp
outsl
jg
xchg
and
lahf
sbb
das
shlb
lea
jecxz
pushl
js
push
xchg
lds
adc
mov
mov
dec
imul
incl
sub
cs
jmp
dec
js
dec
in
dec
test
fistpll
cmp
mov
adc
dec
lret
and
lock
mov
push
mov
fs
dec
dec
sbb
outsl
std
mov
xor
jmp
cmp
dec
mov
repnz
push
repnz
lods
leave
mov
outsb
icebp
imulb
jnp
xchg
cmp
mov
fistpll
fbld
xor
dec
sbb
je
mov
testb
sbb
push
lods
jecxz
mov
lods
rcrb
jg
sbb
fmull
fadds
inc
sub
pop
popf
lcall
dec
xor
popf
dec
into
or
decl
notl
movsb
into
lret
fildl
andl
es
mov
jecxz
inc
dec
jp
cmp
loop
sub
xchg
fdivs
dec
repnz
insl
pop
jg
xor
in
int
ja
pop
xchg
arpl
cmp
adc
dec
xor
pop
sbb
pushf
sbb
arpl
add
loopne
fcoms
aad
mov
xlat
adc
insb
lock
mov
das
adc
outsl
mov
fisubrl
test
lods
aad
jp
adc
mov
outsb
mov
std
ficoms
incb
filds
aaa
dec
jae
mov
cmp
imul
jp
test
roll
jne
mov
std
in
cmp
mov
inc
imul
push
and
pop
arpl
ja
pop
dec
cs
bound
mov
decl
popa
stc
pop
movsl
or
add
add
mov
fisubl
cmp
out
fadds
jle
xor
cmc
das
scas
push
lods
xor
cmpsb
cmp
lahf
jo
call
cmpsb
mov
mov
jae
push
popf
cld
aas
dec
cmp
je
or
pop
dec
push
push
mov
shlb
jns
in
or
into
shlb
jmp
mov
repnz
imul
addr16
pop
iret
rolb
and
mov
cmpsl
scas
repz
imul
adc
mov
lcall
pop
mov
icebp
ja
mov
ljmp
das
push
es
rcr
lods
jmp
sub
mov
xchg
fs
pop
arpl
in
mov
add
dec
outsb
xor
inc
pop
sbb
in
add
popa
rcrl
adc
inc
add
sbbb
dec
push
sub
fs
arpl
sub
icebp
sbb
lea
movsb
rol
dec
xor
shlb
loopne
outsl
mov
icebp
jbe
or
scas
mov
pop
jmp
out
insb
daa
arpl
dec
adc
adc
jnp
sub
fildl
lret
movsb
mov
loope
jbe
add
sub
cmpsb
das
repnz
pop
mov
daa
bound
fistpl
xchg
sbb
push
dec
push
cs
fdivr
jg
mov
inc
sub
jbe
xor
or
mov
fs
rol
mov
or
adc
mov
fidivrs
in
xor
mov
outsb
addr16
fnstcw
imul
ljmp
push
pusha
inc
pop
jno
cmpl
and
dec
xor
pop
outsl
sub
jmp
fstp
out
addb
loopne
das
adc
inc
push
fnstsw
imulb
push
cmp
fldenv
insb
data16
cld
dec
cld
jg
shlb
dec
or
dec
jne
jb
insl
xchg
int3
or
decl
xlat
inc
jge
dec
mov
fldt
pop
mov
repnz
mov
loopne
leave
fndisi(8087
sbb
insl
jg
mov
mov
arpl
outsl
pmulhw
ret
mov
xor
jmp
pop
mov
subb
pop
push
jb
std
in
fcomi
jecxz
ss
dec
mov
lahf
cmp
es
lock
lock
adc
jo
decb
cmp
stc
je
add
das
mov
call
xchg
adc
xor
push
das
icebp
sbb
je
stos
daa
sbb
out
and
cltd
xchg
outsb
shrb
sarb
cmp
sub
pop
clc
ljmp
dec
cmpsb
jl
int3
iret
stc
jmp
mov
out
loop
iret
xchg
inc
sahf
sahf
lea
push
xchg
imul
gs
mulb
subb
mov
sbb
loope
pop
insl
out
adc
cld
lahf
in
cmp
jo
fisttpl
dec
subl
out
push
das
mov
mov
sbb
xchg
mov
and
mov
andl
mov
and
mov
dec
fisubrl
stc
movsb
mov
mov
fisttps
out
ss
sbb
nop
pop
xchg
aam
jmp
popa
cltd
stos
sub
ja
divb
aaa
clc
push
pop
repnz
pop
adc
and
ja
pop
jl
sbb
insb
pop
lods
pop
leave
ss
lock
push
pop
movsl
bound
mov
addr16
imull
jg
adc
cmp
dec
inc
mov
xchg
cmp
out
stos
leave
dec
ret
out
call
pushf
daa
lret
cmp
lods
mov
mov
ljmp
leave
movsb
imul
or
mov
add
or
arpl
out
jne
sbb
movsl
call
ror
pop
lcall
mov
ljmp
es
sahf
andl
sbb
push
pop
and
les
movsl
ret
inc
ja
movsl
cmpsl
jmp
jb
in
icebp
gs
jo
dec
outsl
imul
and
aad
jmp
pop
or
in
pop
add
inc
mov
lcall
shl
fldl
xor
pop
pop
xor
ret
dec
inc
lcall
addr16
mov
ljmp
sub
pop
adc
dec
gs
mov
push
aaa
movsb
out
add
dec
jmp
movsb
mov
ljmp
cltd
push
mov
push
insb
jo
stc
jmp
xor
xlat
pushf
daa
imul
jg
je
pop
out
and
jp
sub
imul
dec
jns
repz
dec
jo
loopne
std
jg
lret
loope
das
mov
movsl
pop
mov
je
push
mov
inc
jb
movsb
xchg
pop
jbe
enter
pushl
test
dec
xchg
pop
mov
cmp
imul
loope
hlt
outsl
fs
inc
mov
push
push
xchg
jmp
fimull
ja
cli
pop
mov
fwait
sbb
dec
jecxz
push
ja
or
xchg
mov
dec
ret
outsl
out
add
push
fcomi
movsl
cmp
and
std
mov
inc
outsl
movsl
pop
pop
ret
gs
nop
inc
test
dec
mov
ljmp
cmp
xchg
decl
or
jb
add
or
mov
sahf
sbb
inc
sti
iret
pop
and
movsb
pop
addr16
dec
dec
xchg
imul
mov
out
inc
sub
lahf
rcll
test
mov
add
sub
iret
xor
dec
addr16
inc
inc
sbb
fimull
push
xchg
mov
or
outsl
sbb
sub
sbb
push
arpl
pop
ss
jg
inc
pop
je
xchg
dec
js
inc
xchg
stos
lahf
or
or
jge
mov
iret
cmp
jmp
or
mov
das
test
xor
pop
mov
int
jmp
xor
and
gs
fildl
adc
sbb
out
xor
hlt
add
or
jb
inc
fadd
testl
idivb
and
jle
pop
sub
mov
in
ljmp
fldl
mov
xlat
pop
mov
decl
fnsave
mov
inc
sub
mov
jne
mov
dec
mov
imul
add
sbb
in
call
adc
adc
jecxz
mov
jl
mov
cmpsl
mov
xor
daa
jae
icebp
push
insb
jne
cmp
push
outsl
lcall
cmp
jbe
leave
inc
cmp
inc
inc
xor
daa
mov
std
add
push
sub
imul
jp
out
or
jge
add
xor
aaa
fldpi
popa
js
inc
sbb
inc
mov
notb
jl
test
inc
push
js
inc
mov
loope
inc
movsl
jg
cmp
pop
pop
call
push
insb
mov
outsb
pminub
mov
dec
repnz
mov
mov
lea
insl
or
sahf
imul
int3
outsl
sub
jnp
lock
fs
sub
cld
jo
sub
std
outsl
cld
inc
and
inc
fnstenv
or
ja
sbb
pop
mov
outsl
xor
inc
enter
inc
aam
jp
into
inc
cmp
mov
push
inc
arpl
xchg
fisubs
addr16
je
xchg
insb
dec
das
pop
loopne
inc
mov
rcll
cwtl
into
push
lea
std
mov
lea
push
cs
lods
dec
push
imul
call
push
cmp
mov
insb
ret
lods
daa
data16
mov
sahf
daa
pop
int3
hlt
mov
mov
loop
mov
mov
test
je
out
pop
inc
lds
testl
hlt
xor
mov
fs
and
jae
sti
call
inc
sub
popa
sub
outsl
fsubrl
xchg
jns
outsl
mov
ljmp
xlat
push
ja
fwait
push
mov
hlt
xor
inc
push
add
mov
sbb
push
mov
insb
xlat
call
fs
lea
stos
jg
insb
xchg
mov
leave
out
or
in
insb
jg,pt
and
jmp
push
imul
incl
lret
jb
repz
jb
popa
pop
pushl
daa
push
jo
inc
jns
fs
inc
inc
leave
jmp
ja
fs
insl
rcl
std
mov
stc
in
inc
pop
inc
cltd
mov
mov
mov
mov
ret
mov
sbb
mov
cli
push
aaa
sbb
push
sub
push
fst
cmpsl
adc
out
ljmp
in
mov
pop
jae
mov
movsl
scas
pop
into
mov
in
clc
pop
mov
lcall
mov
je
sub
movsb
outsl
mov
bound
sbb
or
aas
gs
and
pop
jno
push
movsb
divb
clc
lea
loopne
jb
xlat
inc
cmp
nop
mov
movsl
or
hlt
loopne
pop
mov
je
fistl
incl
mov
std
dec
mov
push
or
jg
incl
ljmp
sbb
mov
mov
add
fs
mov
xchg
mov
xor
push
outsb
or
and
or
sub
dec
inc
jo
jb
outsl
out
out
ljmp
in
add
jae
orl
xchg
jbe
iret
inc
adc
scas
inc
mov
or
fistpll
mov
inc
ret
mov
inc
subb
mov
jo
stc
scas
mov
jns
cmp
dec
std
add
pushl
and
or
inc
outsl
insl
jo
fldt
sbb
mov
or
fisttpll
aaa
sub
push
pop
ret
jecxz
rep
ss
gs
mov
add
fidivs
and
cld
imul
inc
negb
mov
pop
loop
mov
push
jp
stc
imul
xchg
and
or
mov
xchg
mov
pop
imul
ffree
insl
sti
pop
js
mov
inc
lret
inc
xlat
jae
pop
int3
jno
lods
xchg
stos
es
mov
push
cmpsb
and
ret
mov
test
ljmp
mov
arpl
call
rcr
pop
outsl
cmp
lcall
inc
dec
imul
cli
outsl
insl
fs
pop
sbb
out
loopne
outsl
sahf
and
push
adc
outsl
ja
icebp
lcall
lock
xchg
outsl
mov
or
push
push
jecxz
mov
das
xorb
outsl
mov
outsl
cmpsb
sub
add
sti
pop
subb
cmp
dec
inc
int3
lods
inc
cmp
sarb
xchg
clc
or
out
cli
imul
es
cwtl
cmp
and
pop
mov
fcomps
mov
cmp
cmpsl
and
or
mov
out
mov
sbb
pop
sub
outsb
pushf
scas
mov
pop
test
jmp
loop
inc
pop
inc
bound
loopne
bswap
fdiv
fisttps
dec
jb
insb
adc
lds
decl
pop
push
lea
ds
sbb
xlat
inc
push
lock
je
imul
std
jnp
inc
int
outsl
aaa
or
mov
ja
lods
add
js
loopne
je
sbb
or
cs
loop,pn
data16
leave
in
sbb
cli
add
es
adc
ret
mov
arpl
hlt
inc
add
xchg
adc
ret
testb
cmp
push
fnstcw
cmp
sahf
iret
ss
jp
insb
and
rorb
or
adc
sar
repz
incl
pop
sahf
dec
jns
bound
jle
or
sub
xrelease
in
pop
sbb
aas
push
adc
mov
and
pop
push
lahf
jg
and
outsl
or
xchg
jb
insl
lret
fidivs
jns
sbb
addr16
mov
ffreep
mov
repnz
les
jne
pop
xchg
adc
sbb
sbb
mov
push
mov
iret
ret
js
cmp
cmc
in
incl
mov
rorl
mov
jl
jmp
das
ret
fidivs
ss
jl,pt
pop
jb
je
lods
lret
or
sbb
push
or
aaa
shll
jl
mov
push
inc
push
push
adc
outsl
push
mov
adc
aaa
outsb
cmovno
mov
pop
or
inc
xor
add
mov
add
cmp
inc
cltd
bound
cli
pop
mov
lods
shlb
call
pop
test
je
adc
loope
inc
insb
in
mov
pop
and
inc
repnz
and
fcomps
mov
jg
out
imul
sti
xor
ljmp
dec
mov
dec
imul
bound
popa
mov
sbb
or
in
and
inc
rorl
jl
int3
jl
mov
mov
pop
cs
add
xchg
mov
dec
pop
push
pop
xor
pop
add
pop
std
lret
call
idivb
pop
loopne
sub
repz
outsb
rclb
fcompl
inc
sbb
insl
lret
shlb
add
lock
jecxz
mov
addl
jb
dec
mov
dec
lret
mov
add
sbb
mov
sub
in
mov
in
jae
movsb
popf
and
cmc
decl
and
and
ds
aam
inc
cmp
inc
push
jae
sbb
ljmp
jg
out
jae
movsl
mov
ja
push
mov
xchg
inc
imul
mov
sub
stc
mov
out
loopw
ljmp
cmp
jbe
les
mov
inc
inc
das
dec
dec
cmpsl
sar
pop
mov
fdivrp
out
sbb
and
stc
lock
mov
int
add
dec
sbb
xchg
jo
test
mov
enter
cli
dec
call
push
jb
pop
lods
fwait
push
jne
lcall
in
negl
jb
inc
pop
pop
and
pop
sahf
cmpsl
xchg
sub
decl
cld
xchg
push
jae
push
cwtl
lds
pusha
subb
push
cmpsl
inc
jb
repz
fcomip
addr16
popa
jo
scas
xlat
pop
outsb
cmp
ja
dec
fwait
scas
jg
mov
mov
or
adc
jp
cmpsb
rorl
and
add
add
and
call
xor
incl
jae
push
incl
stc
in
pop
mov
adc
lcall
roll
inc
xor
jmp
or
push
lea
add
decl
lret
js
add
mov
add
push
cwtl
cmp
push
adc
adc
decl
xchg
jne
mov
popa
or
je
cltd
or
ret
stos
inc
fildl
add
je
add
add
push
sbb
subl
ret
lods
and
xchg
sub
ljmp
call
add
xor
pop
ret
call
test
movsl
incl
push
subl
sahf
add
mov
repz
push
push
push
les
out
lds
cmp
add
test
sub
add
cli
mov
cmc
das
mov
out
cmpsl
aaa
sub
popf
aas
int3
es
decl
fistpl
test
aas
mov
sub
cmp
xorl
cmc
aad
adc
insl
test
imul
push
cmp
ljmp
dec
cmp
inc
cmp
popl
push
push
fimull
inc
dec
sub
loopne
and
loopne
mov
andb
push
inc
dec
adc
push
xor
sub
jg
cmpsl
sub
cmp
imul
inc
mov
subb
cmp
js
xor
dec
test
inc
jne
cmp
sub
adc
jae
call
sub
inc
decl
and
out
out
aam
popf
cmc
sub
sub
pushl
shrl
lahf
or
cmp
cmp
jns
xor
jg
push
xchg
inc
dec
ds
and
jg
incl
mov
stos
jbe
das
add
imul
dec
push
pop
pop
add
pop
jnp
inc
cltd
outsl
cld
jmp
mov
into
dec
cmpsb
test
data16
aas
sar
ljmp
icebp
fwait
data16
mov
scas
fnsaves
push
mov
rolb
add
mov
js
call
enter
and
xchg
pop
push
and
aam
in
dec
add
rolb
aas
xchg
push
mov
mov
dec
fidivrs
cmp
push
dec
loopne
jg
insl
cmp
pop
stos
fadds
push
lcall
adc
jo
incl
cld
dec
popf
push
sub
push
fcom
mov
lods
in
shrb
cld
inc
push
xor
in
pop
adc
iret
dec
cmp
sbb
pop
loop
dec
push
or
bound
das
add
sbb
aas
ljmp
cmc
inc
push
add
lahf
inc
inc
pop
insb
xchg
sbb
arpl
popf
inc
sbb
pop
das
insl
incl
hlt
pop
xchg
push
pop
outsl
pop
xchg
hlt
sbb
aas
jno
mov
cwtl
arpl
jae
jb
bound
sbb
mov
sub
incl
pop
add
pop
and
push
ficompl
or
add
mov
decl
in
lds
icebp
inc
add
xor
adc
and
mov
imulb
inc
add
imul
lcall
jns
pop
out
movsl
inc
and
pop
and
clc
daa
push
sahf
lock
call
aad
jnp
test
sbb
add
adc
and
push
loopne
push
or
test
clc
adc
sbb
adc
xchg
jg
mov
pop
jns
and
js
and
and
jo
jg
incl
push
lock
enter
pop
out
bswap
popa
jmp
adc
scas
adcl
incl
add
or
cvtdq2ps
mov
pop
inc
add
jmp
adc
dec
je
mov
out
out
jne
popf
and
pop
call
xlat
lahf
adc
add
out
jns
fidivs
stc
cli
repnz
call
stc
and
insb
scas
dec
mull
arpl
pop
cmpsb
lret
mov
add
pop
add
outsl
push
loopne
or
insl
pop
pop
push
cmp
jg
or
or
or
push
cmp
push
das
xorps
das
adc
incl
mov
xor
inc
xchg
push
xor
push
cmp
aas
lcall
ret
inc
jl
insb
mov
sub
xchg
call
mov
or
push
lret
xorb
cmp
jl
xchg
sbbl
std
sahf
seta
cmpsl
in
repnz
into
sbb
clc
sbb
pop
outsl
add
add
movsb
shll
lods
mov
das
cmpsb
fildll
lahf
loopne
cmpb
ljmp
sbbb
sbb
cmp
mov
mov
cmp
iret
adc
outsl
in
call
pop
mov
mov
call
fidivrl
pop
ficompl
fisubrl
xor
loopne
xor
sahf
ljmp
shl
cs
sar
or
add
xchg
iret
lea
or
mov
dec
pause
mov
into
xchg
repz
repnz
cmp
dec
or
ss
jne
repz
loopne
lcall
aaa
sub
sub
ret
push
das
adc
sub
ja
sub
js
outsl
ffreep
sub
sub
aaa
sbb
sub
test
jecxz
cwtl
or
ljmp
cld
hlt
add
inc
jo
xchg
es
cld
mov
xor
mov
add
cld
outsl
jns
repz
and
mov
loop
test
std
lods
pushf
sub
pop
inc
iret
sti
ljmp
push
lods
das
ret
dec
jp
push
push
cmp
push
inc
add
xor
pushl
ja
cmpsb
fbstp
lods
aaa
lcall
das
cmc
add
adc
aam
or
insl
aam
dec
arpl
ja
jg
in
lcall
adc
das
jae
dec
enter
pop
mov
lcall
add
or
push
push
ret
cmpxchg
adc
pop
adcb
ds
sbb
add
leave
sbb
add
into
sbb
rorl
outsl
lock
mov
lods
ljmp
test
lds
popf
imul
add
mov
jmp
inc
jno
xchg
xlat
jne
push
decl
add
sahf
inc
stc
mov
adc
mov
iret
decl
mov
cmp
add
loopne
jmp
add
incl
cmp
inc
mov
stc
popf
sti
jmp
jle
inc
mov
out
jecxz
add
sub
test
pop
stos
clc
scas
adc
js
jg
lods
sar
mull
iret
inc
mov
pushf
xchg
push
cmpsb
scas
mov
inc
or
js
jne
pusha
test
pop
lret
cmp
xor
clc
add
pop
cmp
mov
cmpsb
lock
call
push
movsl
js
popa
sar
mov
add
and
addr16
in
pop
pop
cld
xchg
out
daa
mov
subb
fwait
xchg
and
jg
mov
push
pusha
les
insb
add
pusha
sti
pusha
cmp
jo
incl
clc
aas
pop
add
fisttps
xchg
outsb
adc
shrl
call
clc
pop
mov
icebp
dec
verr
test
inc
lods
lds
cmpsb
mov
insb
ljmp
loop
add
xor
aad
mov
dec
inc
std
std
into
popa
test
adc
stos
in
das
dec
add
dec
les
aas
sub
les
jne
add
adc
lcall
xchg
cmp
push
mov
outsl
icebp
outsl
call
mov
mov
popa
push
or
jle
call
adc
out
das
lea
mov
sti
inc
andb
movsl
jmp
ljmp
aas
jge
add
inc
rcr
add
arpl
int3
and
cmp
lcall
fnstsw
cmp
jp
and
cmp
mov
cmp
inc
add
fmull
call
add
movb
mov
cltd
jne
fldt
cmp
cli
sbb
and
xor
mov
nop
add
cmpsb
xchg
movsl
andb
js
cmpsl
push
lahf
inc
xchg
mov
shrb
sub
cld
or
and
rcr
jge
call
cld
push
mov
xchg
daa
mov
lcall
dec
dec
add
std
orl
adc
enter
and
pop
add
enter
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
enter
in
mov
inc
cld
insb
mov
add
push
push
add
ljmp
pop
jnp
rcpps
sahf
stos
or
ljmp
jo
mov
arpl
rorb
jb
insb
addr16
insb
pop
cmp
loope
add
call
push
mov
sarl
loope
loopne
cld
cli
sbb
test
je
addb
mov
incl
pop
pop
pop
mov
jne
add
jo
out
sti
adc
subl
call
add
ret
lea
in
jmp
fbld
pop
cmp
in
out
adc
sub
adc
mov
leave
pop
addb
push
mov
sub
repz
jmp
jmp
adc
loopne
mov
inc
xor
mov
cmp
fcos
lock
or
inc
lock
jmp
ja
mov
pop
ret
push
push
sub
xor
jle
pushl
jl
fmull
and
push
and
xor
jg
leave
mov
pop
adc
pushl
push
cwtl
inc
aam
push
adc
xor
sub
xor
inc
aas
inc
xchg
or
sbb
outsb
call
ss
mov
or
loope
sbb
mov
ret
mov
ret
incl
ret
add
cmp
or
pop
and
mov
call
decl
xor
pusha
xor
or
push
or
cmp
xchg
movsl
jg
cld
add
inc
sbb
push
or
mov
mov
and
mov
inc
incl
and
adc
sbb
jnp
cmp
adc
divb
mov
push
jnp
push
cli
xchg
lea
dec
push
sub
dec
loop
dec
insl
sub
nop
test
push
push
call
add
addb
dec
add
rorb
sahf
sbb
adc
mov
cmp
mov
or
pop
push
das
mov
loope
xchg
sbb
lea
or
lahf
adc
jmp
jg
sub
je
push
and
push
lea
push
xor
inc
mov
es
or
enter
nop
aas
or
adc
push
and
xchg
mov
sbb
adc
sbb
jne
push
cmp
jo
icebp
add
movb
jmp
dec
mov
inc
sti
or
xorb
mov
es
addr16
in
adc
pop
pop
pop
pop
jo
jmp
push
mov
sub
inc
outsb
je
jns
mov
imul
decl
inc
jmp
push
push
jb
arpl
fstpt
and
or
jg
arpl
insb
fs
pop
fidivrs
mov
popa
sub
mov
pop
jns
mov
and
decl
bound
jne
push
cwtl
fs
insb
frstor
jmp
je
pop
jns
jo
push
les
test
aaa
ret
xorb
jb
push
jb
cmp
dec
mov
xchg
js
pop
ja
lds
mov
data16
inc
icebp
int
dec
and
js
ljmp
push
fimuls
shl
dec
pop
mov
cld
fs
ret
orb
sub
dec
incl
lock
lret
push
call
cmp
add
rorl
incl
daa
sbb
test
in
jne
dec
lret
xor
add
ret
loopne
fiaddl
pushl
xor
lea
test
pop
leave
shlb
outsl
mov
dec
sub
movb
jbe
ret
je
lcall
ja
shl
push
add
repnz
sub
mov
lods
outsl
mov
mov
andl
or
adc
movw
js
aaa
cmpl
add
add
sti
inc
xchg
mov
clc
cmp
decb
lcall
cmp
fwait
cmpl
jecxz
shr
push
mov
call
jne
push
lret
or
push
imul
push
dec
cmp
adc
pop
into
add
add
jmp
and
push
xor
xchg
cmp
push
mov
pop
adc
dec
jge
dec
out
nop
add
orb
je
or
and
cmp
xchg
inc
decl
mov
xor
clc
pop
sbb
or
jmp
cmpsl
into
popa
rclb
inc
inc
xor
xor
add
mov
inc
scas
pop
pop
loopne
lret
push
cmp
mov
incl
adc
push
repnz
out
or
dec
enter
dec
sub
in
jg
call
adc
scas
push
inc
adc
popa
ds
orps
fbstp
ja
pop
mov
push
or
icebp
mov
mov
xchg
sarb
repz
pushl
cld
xchg
xchg
aaa
mov
xchg
and
push
add
jecxz,pt
in
lods
jg
loopne
lret
and
dec
in
jb
and
or
inc
or
xor
cmc
ljmp
inc
jmp
insl
into
xor
ss
push
rol
add
rep
inc
mov
pop
cmp
sub
sbb
mov
sbb
or
xchg
inc
mov
sbb
add
and
call
adc
fisubrl
cmp
add
lcall
dec
jmp
ljmp
jge
push
test
pop
or
push
sub
ficoml
mov
and
decl
lcall
mov
pop
xor
mov
movsb
enter
push
cmpb
pop
movsb
ljmp
cld
jmp
jae
loopne
std
dec
xor
nop
dec
or
dec
or
mov
stos
in
shlb
daa
and
inc
loop
insl
sub
sbb
decl
dec
dec
fs
sbb
adc
lock
movl
cld
sub
mov
cmp
je
mov
fisubl
inc
test
sbb
xchg
in
jle
stc
jmp
xor
push
add
sbb
adc
push
or
xor
leave
outsb
xor
lahf
xchg
outsb
ret
lcall
inc
or
adcl
imul
fisubrl
loope
xchg
decl
aas
xor
add
sbb
rorb
xor
dec
push
dec
dec
test
mov
orl
add
add
jo
ret
or
add
sbb
decl
jl
nop
adcl
mov
xchg
add
leave
or
add
fwait
xchg
decl
dec
in
fadd
pop
stos
int
enter
add
and
jl
sub
outsl
lock
xor
jle
sbb
mov
call
jnp
sti
divb
leave
call
shr
and
inc
mov
call
out
or
shlb
aas
stos
jmp
dec
or
add
cld
int
jmp
lods
shr
je
jne
fstp
rorl
call
jge
or
testb
clc
jg
inc
inc
xchg
mov
mov
xchg
mov
jmp
out
rol
jnp
insl
fbstp
out
incl
adc
jb
ret
sub
mov
sbb
mov
push
or
in
imul
mov
arpl
cvttps2pi
sbb
scas
mov
and
mov
lea
inc
test
or
mov
sbb
add
pop
add
cld
iret
ret
mov
popl
test
lea
fbstp
mov
mov
add
insl
pushl
push
mov
add
mov
push
cli
push
mov
inc
and
std
push
imul
sbb
pop
pusha
pop
mov
es
adc
sub
jl
ljmp
push
push
push
call
pop
add
aaa
lock
repnz
mov
xor
push
mov
xor
mov
call
mov
dec
sbb
sti
add
adc
pop
jmp
add
dec
or
inc
orl
mov
add
sub
adc
inc
or
add
fs
imul
popa
jb
inc
inc
gs
jb
arpl
fs
jae
orps
je
fwait
lods
std
jne
insb
inc
insb
insb
adc
inc
sbb
add
add
dec
addb
incl
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jle
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
sub
push
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
pop
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
push
mov
push
dec
repnz
push
call
pop
or
je
mov
add
jmp
popa
ret
popa
jmp
