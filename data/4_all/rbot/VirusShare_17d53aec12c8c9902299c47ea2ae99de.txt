sub
stos
daa
fstps
and
loopne
leave
push
mov
pop
add
mov
pop
rorb
adc
add
lret
xchg
push
rcl
aaa
fistpl
xor
sbb
jl
cmp
in
rcll
arpl
lret
imul
in
fwait
subl
pushf
shl
push
inc
sbb
adc
call
leave
gs
aad
scas
mov
icebp
ljmp
or
shr
jmp
sub
fcomip
out
jg
mov
mov
adc
insb
sub
lea
push
aas
shr
or
push
sbb
fs
shrl
int
dec
stc
lea
inc
jmp
icebp
push
xchg
push
dec
ljmp
push
inc
in
mov
cmp
leave
out
add
xor
cli
cmpsb
mov
mov
and
sub
dec
je
sti
jge
pusha
mov
adc
nop
and
push
cmp
and
cs
es
pop
add
pop
mov
mov
aaa
jp
rorb
rorl
cltd
sub
fstpt
into
xor
xrelease
fdivrs
xor
mov
jo
cmp
testl
inc
pop
jnp
insl
inc
pop
clc
clc
or
lcall
bound
sub
mov
mov
inc
daa
mov
insb
ret
mov
jb
sub
jecxz
loope
ljmp
jns
scas
jecxz
or
and
or
fidivl
adc
mov
repnz
sub
push
push
jno
mov
test
sub
or
das
lods
movsl
fstpt
cmp
pusha
or
lods
cmp
lret
mov
negl
mov
push
jle
pop
rcr
shl
push
sub
fldcw
bswap
adc
pop
pop
push
pusha
xchg
inc
in
out
insl
sahf
xorb
leave
ds
ret
fsubr
rcll
call
cmp
mov
sbb
pop
inc
pop
in
mov
cmp
mov
fldenv
cmpsb
cmpsl
test
adc
imul
pop
dec
bound
xchg
and
mov
popa
mov
mov
sbb
loop
je
sbb
insl
insb
jg
jl
aas
sti
testb
pop
and
inc
inc
add
jns
cmp
sub
inc
pop
or
fmull
popa
loopne
mov
jl
cmp
mul
sbb
inc
mov
dec
pushf
aad
jle
ret
in
cld
inc
jge
out
pop
outsb
fisubrs
pop
mov
pcmpeqd
or
test
xchg
loop
inc
loope
js
ret
sub
pop
mov
loop
add
add
int
pop
lock
loop
addr16
mov
pop
cli
adcb
push
xor
cmp
cmc
mov
cmp
push
nop
add
ficoml
xchg
sub
xchg
mov
sub
popl
inc
push
repnz
mov
test
push
rol
or
dec
repz
icebp
xor
pop
jo
push
out
jo
addr16
in
fisttps
rorb
imul
arpl
fmul
mov
jnp
push
xchg
js
push
icebp
cmpsl
das
add
lret
divl
mov
jmp
fsts
sahf
test
rcrb
decl
dec
pop
cld
sbb
test
cmp
shrl
mov
jae
fs
shll
repz
mov
xchg
loope
aaa
gs
mov
mov
jg
and
inc
insb
loope
aad
inc
sub
add
mov
mov
leave
dec
push
or
jecxz
imul
das
pop
jnp
fmuls
dec
aas
popf
out
cmpsl
mov
lods
lret
pop
rcll
pop
in
stos
aaa
add
mov
xor
jge
shrb
sarl
cmovg
xchg
dec
subl
or
sti
out
gs
sbb
sub
xor
mov
pop
arpl
mov
adc
outsb
dec
mov
push
push
push
pop
out
dec
outsl
mov
xchg
push
and
mov
outsl
pop
inc
xchg
fmulp
jne
adc
fisttps
loop
mov
adc
scas
xor
mov
outsl
jo
adc
adc
pushf
sbb
cmp
inc
popf
mov
popf
mov
adc
cwtl
enter
sbb
xchg
sbb
mov
es
or
lahf
stos
iret
mov
ror
jp
or
inc
or
jne
lcall
cli
jns
fidivrl
jmp
and
mov
out
sbb
fsubrp
lcall
mov
xchg
imul
dec
rcrb
test
inc
cltd
inc
mov
es
mov
mov
jb
xchg
inc
jecxz
mov
push
adc
cwtl
xor
adc
shrl
and
xchg
mov
js
dec
cmp
adc
andl
cwtl
mov
xchg
sbb
jl
js
stos
ljmp
xchg
es
shrl
mov
add
shl
cs
bound
sbb
sbb
and
jnp
pand
pop
push
nop
mov
outsl
cli
pushf
mov
sbb
pop
imul
push
xor
add
xchg
out
adc
cmpsl
jne
fcoml
insl
cwtl
pop
stc
repnz
dec
dec
cmpsb
es
adc
sub
adc
cli
roll
jl
and
sub
sub
inc
mov
lods
pop
dec
mov
jl,pt
jmp
nop
outsb
mov
sbb
add
mov
es
xchg
rcr
dec
sbb
cltd
std
mov
cltd
lahf
je
cli
xchg
dec
or
ja
bound
xchg
xchg
dec
jnp
cmp
into
fisubrs
and
dec
sub
sub
je
fistps
scas
mov
add
nop
stc
sbb
icebp
fnstcw
sbb
ljmp
gs
push
ljmp
hlt
rep
cmp
sahf
pushl
sbb
jnp
sbb
in
pop
xor
fsubs
mov
stos
and
stc
aad
out
sbbl
jnp
das
in
adc
xor
adc
mov
push
mov
sbb
rorl
ret
cmp
and
popa
es
jp
aaa
jb
rorl
mov
data16
nop
rcl
mov
cli
push
push
push
sbb
push
push
adc
repz
push
inc
or
push
pop
inc
sub
int
adc
dec
into
cmp
dec
movsb
jg
vmulsd
add
scas
mov
xchg
shlb
add
mull
nop
iret
test
hlt
xor
fwait
cwtl
xchg
push
xchg
push
mov
es
inc
fwait
jno
in
mov
ficompl
bound
mov
pop
push
fs
push
insl
lahf
adc
adc
dec
xchg
lret
rcl
jge
adc
sub
bound
xchg
dec
mov
cmp
fs
mov
cmpsl
inc
mov
cmc
jmp
pop
push
int3
in
dec
jnp
test
push
stos
repz
test
lods
sub
repz
dec
pop
or
cltd
lahf
lret
xor
nop
outsb
cmp
jp
push
sub
in
push
dec
jmp
sbb
inc
pop
pop
push
and
lahf
scas
pop
xlat
jnp
js
aaa
popa
xchg
bound
inc
in
inc
sub
mov
fiadds
sbb
pusha
lock
leave
loope
js
pop
mov
popf
in
jne
nop
inc
push
fprem
mov
push
aas
or
jp
testl
sub
xchg
fidivrl
imul
nop
std
movsb
lret
dec
adc
adc
cwtl
stos
mov
jne
or
dec
pop
mov
mov
sub
sti
dec
les
add
ss
and
push
push
jge
daa
jg
ret
cmc
xchg
sub
add
add
mov
xchg
jnp
inc
or
jl
pop
dec
jno
sub
cs
lret
mov
push
sub
mov
jecxz
and
add
xchg
pop
in
cmp
lahf
pop
mov
inc
dec
dec
ret
mov
push
adc
add
xchg
mov
movsb
jae
pop
xor
mov
pop
or
inc
sub
gs
test
fdivp
jmp
mov
addb
or
mov
shll
lahf
push
or
ret
mov
jne
cmp
add
and
lea
xchg
std
in
sahf
xchg
jno
mov
sub
sub
lret
repnz
clc
leave
mov
dec
rcl
lcall
adc
push
sub
das
sbb
test
mov
push
push
fldl
jle
push
push
mov
les
xchg
out
sub
imul
out
bound
loop
dec
xor
jb
outsb
jo
jecxz
cmpsl
push
xchg
jbe
jecxz
mov
jno
mov
pop
inc
adc
xor
clc
inc
add
lds
ret
push
in
stc
cmp
std
sbb
xchg
mov
arpl
cmp
add
subb
es
xor
cmp
inc
xchg
scas
stos
ror
mov
jle
cmpsb
jne
cmp
outsb
cmp
rclb
scas
filds
xchg
xchg
nop
pop
xor
cmpsb
xchg
adc
cmp
push
inc
sbb
and
cltd
mov
mov
aam
inc
in
out
repz
xchg
call
xchg
push
and
jnp
sub
dec
sbb
pop
aas
and
hlt
xchg
sbb
decb
pop
or
pop
aaa
loope
cmc
add
sbb
insb
shl
or
aas
dec
es
lret
xorl
andb
mov
iret
pop
aam
xlat
fsubrs
cmp
cwtl
mov
ds
dec
cmovns
inc
fucom
imul
imul
xor
mov
leave
fsubrs
leave
lods
int3
lods
mov
es
sbb
ss
jbe
or
mov
jge
push
xor
cwtl
mov
sub
loopne
lret
mov
cmp
or
les
mov
ret
mov
jl
aas
xor
push
lods
adc
je
jecxz
push
adc
xor
sbb
push
ds
imul
push
pop
or
mov
adc
push
cmp
xor
das
xlat
stos
sub
push
pushf
lahf
pop
mov
cld
shll
inc
push
arpl
ds
xor
sub
iret
mov
aam
adcb
pushf
xlat
cmpsb
pop
xchg
popa
ret
xor
mov
push
push
mov
xchg
inc
fistl
pop
loopne
adc
jne
into
sbb
pop
aam
rol
pop
mov
testl
movsl
punpckhwd
xchg
in
jp
jecxz
dec
shlb
divb
xor
add
jb
mov
mov
out
and
insb
rcrb
cmp
insl
aam
div
add
sbb
sub
mov
xor
fs
stos
sbb
pop
push
in
fisubrs
cmp
jne
cmp
repnz
inc
mov
mov
mov
hlt
cmp
enter
fsubs
push
shlb
and
push
jg
mov
aam
outsb
out
push
scas
int
xchg
test
xchg
and
lcall
and
inc
movsl
test
add
mov
jnp
out
sub
pop
enter
jno
aad
push
pushf
xor
and
out
push
sub
icebp
clc
xchg
mov
mov
xchg
test
mov
imul
andb
iret
mov
gs
lods
insb
aam
sti
decl
imul
rcrb
pinsrw
mov
fsubr
rcl
into
push
and
push
pop
sbb
out
cmp
sti
imul
and
jle
arpl
scas
push
mov
cwtl
mov
cmp
lock
xchg
cs
mov
mov
movsb
lret
xor
jle
aam
push
dec
scas
insb
ljmp
pop
dec
cmc
shl
ja
cmp
fxam
xchg
push
lret
sbb
in
jmp
test
lcall
cmpb
adc
fildl
jae
mov
imul
sti
rcrb
xchg
ret
mov
jp
xchg
jge
jle
sti
iret
in
mov
add
push
jmp
ss
sub
inc
sbb
out
aaa
jge
push
aaa
stos
jae
repz
testl
movsl
or
and
ret
aam
pop
pusha
push
aam
inc
mov
sbb
out
xchg
js
popa
popf
sub
adc
or
inc
dec
xchg
sub
test
dec
popf
mov
stc
movsl
sub
xchg
ret
or
add
aam
or
subl
jnp
xor
lods
mov
ret
lret
jmp
mov
sub
adc
ret
add
ljmp
inc
scas
daa
scas
pop
popf
xor
aam
adc
inc
fucomi
inc
mov
xchg
lods
xchg
push
sub
jo
imul
dec
je
push
hlt
push
jp
add
jmp
dec
out
mov
mov
icebp
rcrl
stos
or
test
cmp
xchg
call
ljmp
and
push
subl
aam
imul
arpl
dec
xor
mov
or
leave
jae
sub
in
xor
fldl
mov
jmp
insb
pop
leave
movsl
sub
xor
push
scas
push
inc
push
aad
lods
subb
mov
fimull
inc
mov
pop
mov
dec
sub
sti
out
scas
cltd
shlb
jmp
add
jp
xchg
or
je
jle
addr16
in
ret
or
imul
and
leave
add
sarb
lds
jne
test
add
pop
and
mov
stos
lret
pusha
cmp
jge
popa
lret
mov
adc
in
mov
cltd
sub
or
jl
insl
add
and
push
stos
and
lret
mov
out
dec
push
gs
loop
scas
inc
push
cltd
andb
lock
xchg
fldcw
or
arpl
ljmp
mov
jb
mov
lcall
nop
out
push
add
mov
jo
lret
inc
outsb
or
xchg
fistps
dec
mov
cmp
insb
movb
in
xor
negb
xchg
sysexit
cmp
in
mov
and
rorl
xchg
or
pusha
dec
fstps
push
cmpsl
add
sub
push
adc
push
loope
cld
ds
push
fmull
jae
sub
fimuls
sbb
mov
hlt
rcrb
mov
inc
pop
mov
outsb
or
addr16
pop
das
sub
xchg
ja
jnp
daa
fiadds
pop
adc
loopne
std
das
push
add
in
fbld
aas
mov
mov
data16
xchg
and
stc
inc
fldcw
aad
lret
add
aam
sub
lea
aam
nop
gs
adc
cs
xchg
dec
jmp
aad
mov
insl
mov
push
fcmovnbe
cli
adc
cmp
popa
daa
lret
stc
pop
pop
jmp
addr16
insl
rol
pop
xchg
insl
mov
subb
pop
cld
data16
rorb
or
shl
outsb
ljmp
sub
aam
aas
jmp
stos
or
insl
pop
in
cli
aaa
out
jg
dec
in
sbb
fiaddl
fs
lock
jp
pop
mov
shlb
or
and
add
cs
xchg
dec
inc
push
repnz
shlb
in
push
je
push
cmp
adc
stos
fdivrs
adc
pop
aad
cmpb
lods
clc
out
dec
jns
stos
es
push
xorb
gs
adc
sub
fcoms
iret
ss
lcall
cld
into
bswap
sbb
dec
test
and
lea
push
adc
into
lret
mov
push
cmp
add
adc
add
lret
subb
jnp
xor
test
orl
icebp
testl
lret
mov
lahf
icebp
mov
dec
fldl
ret
sbb
in
rorl
or
test
cwtl
sub
adc
out
xchg
push
lods
xor
mov
hlt
sub
enter
bound
or
out
mov
insb
sbb
sub
xor
dec
jae
stc
push
inc
fists
mov
rolb
adc
scas
push
cld
pop
jle
cli
xchg
lock
jg
popa
cld
or
mov
les
repz
inc
mov
in
jg
data16
icebp
fisttps
int
xorb
lcall
addb
adc
insl
mov
mov
cmp
popf
or
movsb
mov
mov
jne
in
in
push
sbb
lods
and
outsb
stc
scas
in
ljmp
xor
int3
roll
xlat
or
jmp
inc
mov
adc
in
es
xchg
daa
stc
push
test
pop
push
sbb
jne
jb
jae
mov
js
cltd
sub
add
out
push
hlt
mov
adc
add
mov
push
fiadds
mov
adc
arpl
jns
aad
gs
rcll
dec
xor
frstor
mov
out
negb
jp
cmpsb
fld
cmpsb
pusha
sub
mov
ja
push
out
int3
and
lret
aad
push
mov
fldcw
inc
ljmp
push
hlt
adc
clc
in
ljmp
push
cmp
aaa
xchg
mov
xor
mov
jbe,pt
out
pusha
adcb
cmpsb
pop
aaa
cltd
cmpsb
cld
dec
arpl
or
inc
mov
popf
fwait
enter
sbb
mov
jae
dec
jecxz
fwait
aad
je
inc
jb
cmp
mov
cwtl
cmp
ja
icebp
iret
xor
mov
leave
test
jl
adc
adc
jae
enter
mov
stc
mov
adc
dec
xor
push
pop
dec
hlt
je
push
pop
cmpsb
shlb
xchg
jp
pop
push
lret
fs
gs
pop
out
pop
adc
into
jg
xor
pop
loopne
or
clc
roll
mov
stc
sahf
insl
jmp
jno
movsb
jle
push
enter
mov
movsl
adc
mov
addr16
lcall
mov
jns
sbb
jle
push
push
mov
sub
mov
jmp
test
movd
aad
xor
push
and
or
int3
nop
xor
adc
pop
xor
pop
jnp
ljmp
sti
lahf
push
or
jg
jl
int
or
popa
int
shl
jae
adc
jae
adc
in
mov
add
mov
in
xchg
clc
mov
pop
scas
xchg
and
inc
loop
aaa
lahf
mov
mov
xchg
popf
xchg
adc
pop
aad
cmp
cli
lahf
and
bound
jl
mov
jo
leave
aam
xchg
mov
aas
sbb
xorb
arpl
repnz
and
ret
xchg
push
jbe
pop
adc
sub
loop
or
not
and
dec
mov
pop
or
jbe
inc
adc
add
xchg
or
ljmp
lea
dec
fadds
stc
xchg
and
ljmp
or
aad
ja
ret
out
xchg
push
and
je
insb
add
into
scas
push
add
data16
xor
out
xchg
test
inc
xchg
stos
ror
fdivl
add
or
mov
sbb
push
arpl
aam
inc
pop
mov
call
jne
cmp
sbb
mov
hlt
popa
js
mov
dec
pop
nop
ja
or
fs
pop
daa
push
mov
ds
cmpsb
cmp
sahf
jp
addl
int
pop
jne
inc
repz
cwtl
insl
fisttpl
mov
sarb
scas
xor
jle
dec
es
aad
test
call
or
imul
cmc
inc
push
xor
scas
sub
scas
scas
and
mov
cs
punpckhbw
inc
lcall
clc
push
sbb
es
mov
sub
ja
cmp
mov
xor
fistpll
and
cmpl
int
fistps
mov
adc
or
int
fidivrl
hlt
dec
inc
jl
ret
scas
xor
jmp
data16
xor
mov
or
mov
pop
lock
mov
out
inc
xor
jno
adc
lds
ret
push
push
xor
inc
mov
fxch
add
and
and
fdivp
and
rcrb
test
stos
fiaddl
cmc
fdivr
xorl
pop
adc
jg
pushf
and
fsubrp
in
xchg
cmp
pop
std
outsl
rcll
mov
push
enter
in
out
and
test
sub
mov
pop
xor
push
jg
int
pop
dec
push
pop
mov
mov
pop
mov
jne
fwait
movsl
adc
cmp
call
xor
sub
bound
push
jp
pop
iret
and
xorb
data16
add
mov
xor
movsb
repz
mov
push
or
sub
mov
andl
jle
mov
dec
cwtl
movsl
xchg
lock
mov
ljmp
jo
lods
sub
mov
imul
lock
rcrl
jns
mov
dec
push
lock
shll
mov
sbb
sbb
daa
xchg
push
bound
lea
fsts
xor
sub
jmp
mov
les
xchg
stc
mov
ja
js
int
pop
sub
int
int
mov
mov
or
add
sbbb
xorb
daa
jo
and
addr16
loopne
sahf
jbe
sub
stc
and
mov
jp
inc
lods
in
dec
rorl
lret
mov
fisubrl
push
mov
xor
pusha
xchg
filds
sbb
lcall
push
bound
mov
mov
lahf
lret
out
ds
xchg
push
in
adc
das
icebp
adc
shlw
js
mov
ss
or
or
dec
lret
loopne
or
iret
inc
mov
hlt
pop
cwtl
ret
dec
mov
sbb
repnz
push
cmpsl
cmp
aam
cmpsb
inc
mov
mov
loope
and
insl
cmp
dec
mov
cli
lret
popa
fildl
mov
fsubr
into
cs
sbb
push
mov
in
pop
cmp
xchg
xchg
jnp
mov
sub
jns
lods
test
add
fildl
and
fwait
rclb
pop
aam
or
pop
mov
and
fs
jle
bound
xchg
int
test
addl
xchg
pop
cmc
mov
push
vsqrtsd
or
loop
lret
inc
adc
je
sbb
or
xlat
loop
subl
cmpsl
hlt
dec
jle
lcall
jno
cwtl
insl
jo
push
popf
mov
cs
insb
xacquire
lock
stos
idivl
mov
in
imul
pop
sub
arpl
and
mov
aaa
xchg
push
aad
punpckhwd
aam
dec
daa
pushf
xchg
cmc
sub
mov
in
cli
push
sarl
testb
lods
mov
mov
in
ficomps
pop
mov
push
inc
sbbb
inc
xlat
mov
pop
sti
les
mov
or
pop
icebp
xor
inc
scas
shlb
add
inc
mov
fidivrl
fisubl
xchg
lret
jl
xchg
sbb
push
xchg
push
lret
scas
add
rolb
jb
mov
or
push
fwait
adc
mov
lcall
fisubs
lcall
repz
xchg
repz
daa
dec
ret
faddp
movsb
cmc
data16
or
jns
mov
decl
or
dec
icebp
mov
stos
movsb
fcomps
mov
adc
jbe
shl
stos
mov
idivb
pop
mov
jl
test
sbb
and
test
cld
mov
aaa
jae
adc
push
out
cwtl
orl
push
mov
jle
pop
inc
mov
adc
mov
mov
mov
es
fiadds
jns
mov
mov
ljmp
syscall
nop
dec
inc
insb
xor
out
adc
clc
pop
lret
lea
mov
lods
xor
push
lods
lcall
or
gs
ficoms
sub
mov
sbb
mov
sub
sbb
aam
inc
add
mov
cmp
sbb
fwait
pop
andb
mov
out
out
lea
sbb
xor
jbe
inc
lods
push
cli
pop
xchg
repz
xchg
in
jbe
add
lods
lret
cmp
ds
bound
push
and
jae
mov
adc
xchg
cmp
jae
push
movsb
xchg
cmp
inc
cmp
mov
sub
xchg
int3
lods
ljmp
mov
push
rcrl
pop
adc
xchg
mov
movsb
adc
int3
pop
or
bound
add
mov
lcall
imul
pushf
push
mov
sub
push
iret
popf
xchg
repz
test
outsb
loopne
pop
std
mov
xchg
sub
je
sbb
xor
aaa
fadd
mov
dec
xorl
test
or
mov
pop
lock
lock
and
mov
les
mov
aaa
cld
in
xchg
data16
xchg
pop
lahf
mov
fs
push
fcoms
ret
je
jecxz
bound
jae
pop
or
sti
inc
nop
cwtl
leave
sbb
enter
scas
lods
push
rclb
add
out
mov
xor
pop
movsl
popf
ds
pusha
add
cmpl
popf
idivl
loop
mov
stc
sub
dec
dec
xlat
jae
inc
jne
pop
pop
cmp
mov
sbb
cltd
jo
lock
xchg
negl
xchg
xor
jns
cmpsl
divl
scas
inc
cli
mov
mov
sbbb
pop
add
mov
fists
and
lret
adc
data16
or
jmp
mov
imul
xor
push
push
mov
mov
loop
enter
sub
stos
pushf
inc
pop
cli
arpl
scas
das
push
fidivl
fcmovnb
push
mov
int3
adc
popf
ret
scas
fwait
xchg
jle
fwait
cmpsl
xor
movsl
xchg
into
js
xor
lret
insb
and
std
clc
loope
and
mov
fwait
sbb
push
loope
rclb
cmp
or
pop
sub
xchg
add
xlat
jge
and
pushf
outsl
add
xchg
movb
sub
cmpsl
xchg
cmp
sub
cld
and
fnstsw
push
lahf
in
ja
cmp
mov
std
inc
pop
fwait
js
xchg
add
xor
push
cmp
js
sub
sub
dec
sahf
jne
xchg
dec
in
dec
test
sahf
lds
jmp
mov
imul
mov
out
ss
je
pushl
loope
jno
fildl
imul
jecxz
lods
cs
mov
outsb
and
in
das
cld
inc
xor
adc
pop
sub
pushf
mov
out
sub
into
push
stc
mov
into
jl
push
test
sbb
or
addr16
in
hlt
loope,pt
leave
or
pop
cmc
in
jl
call
sahf
cmp
movsl
in
int
repz
ret
test
sbb
cltd
dec
lds
mov
test
icebp
fs
sti
ret
sub
sti
inc
sahf
jne
aaa
or
push
repz
mov
sub
inc
repz
jg
sub
aas
adc
mov
xchg
pop
repnz
in
xor
addl
sub
cmc
subb
inc
mov
ja
inc
iret
ja
cmp
sub
psubusw
pop
divb
push
jb
jecxz
push
pop
lods
inc
push
fnstsw
push
rclb
jge
or
out
jno
sbb
push
jl
pusha
aaa
pop
jmp
sub
jp
lahf
pop
push
push
or
cmp
icebp
ret
sti
pop
pop
shlb
loope
testl
pop
lock
push
inc
cmpb
enter
mov
mov
sub
xlat
out
dec
and
rcr
hlt
xchg
dec
adc
shrl
add
xchg
cmp
mov
ret
push
and
mov
or
or
inc
jae
sub
cwtl
fs
mov
sahf
cmp
movsb
in
ret
sbb
call
aas
add
aam
dec
or
sbb
rcrl
cli
mov
cmp
sbb
mov
jp
fwait
cs
int
mov
movsl
pop
js
xchg
lods
push
add
add
stc
ds
cmp
lret
inc
xor
push
dec
jl
lret
dec
stos
add
inc
aaa
emms
xchg
es
xor
dec
inc
pop
idivb
push
and
mov
call
stos
rorl
shrb
xchg
daa
or
push
xchg
cmp
in
jno
pop
jae
scas
push
adc
das
xor
repz
add
xor
test
cs
jae
xlat
rclb
mov
popa
adc
dec
test
out
mov
mov
jb
jnp
arpl
add
test
jg
inc
sub
cmpsl
orl
pop
xchg
das
sbb
push
dec
add
mov
icebp
or
pop
dec
jns
mov
div
fisttps
imul
mov
mov
pop
mov
shlb
cmp
cmpb
jae
addr16
arpl
xor
je
loope
xchg
fisttpll
mov
aad
jge
mov
cld
jb
push
pop
ret
in
fisubs
cltd
fwait
sbb
mov
adc
clc
pusha
xchg
pop
iret
ss
push
scas
ret
mov
dec
pop
mov
pushf
shll
pop
popf
shrb
jbe
les
push
movsb
daa
dec
cmp
outsb
xchg
dec
insb
pushf
inc
movsl
movsl
dec
xchg
and
inc
add
dec
sbb
repnz
cmp
test
push
lods
xchg
pop
adc
imul
stos
addr16
mov
lret
inc
iret
push
cmp
xchg
pop
insb
insb
hlt
lods
ds
mov
icebp
or
es
iret
imul
nop
and
dec
pop
icebp
lret
ror
and
xchg
xor
inc
test
fimull
mov
fstps
rcl
mov
mov
pop
add
jbe
dec
add
scas
loop
inc
stos
xchg
mov
xorb
scas
lods
mov
adcl
cli
popa
in
inc
push
loopne
push
add
inc
cmp
pop
lock
in
mov
mov
test
sbbl
xchg
or
push
or
inc
mov
lret
and
or
pop
cmp
mov
imul
xor
cmp
sti
inc
cmc
dec
jo
ja
xor
mov
es
adc
cwtl
insl
aad
aas
mov
out
leave
xchg
adc
movsl
adc
cld
ret
mov
mov
adc
xlat
lods
insl
pop
cs
fs
cmp
fidivs
lods
stc
or
cmp
add
mov
ja
mov
inc
pop
or
aad
pop
cmp
sti
arpl
mov
andl
aam
push
clc
pop
mov
sub
enter
cmpsb
loope
ds
cli
jo
aad
add
call
xchg
leave
rcrb
push
adc
cli
mov
loope
dec
sub
add
mov
lahf
imulb
add
mov
les
in
push
scas
ss
test
adc
frstor
xchg
mov
sub
pushf
or
fisttps
in
imul
ds
cmp
jmp
cwtl
xlat
in
push
jmp
mov
lret
lea
jge
mov
and
imul
in
mov
cmp
mov
call
cmp
add
mov
pusha
cli
sub
mov
mov
cmp
movsb
jno
rcrl
pop
mov
sbb
stos
jmp
fsubrs
cmp
sub
sbb
push
inc
shll
cmp
inc
xorl
mov
es
lock
stos
leave
inc
in
jo
lret
or
mov
xor
push
loope
das
sbb
movsb
mov
sub
loop
add
rclb
stc
lret
imul
ja
fisubs
rcrb
sar
movsb
jmp
sbbb
jnp
movsb
xchg
adc
jne
sbb
mov
insb
sbb
dec
enter
adc
push
ret
pop
xchg
dec
sbb
movsb
mov
cld
fstl
pop
sbb
lcall
mov
and
fnstenv
fstpt
mov
push
out
xchg
dec
add
pop
scas
cmp
fs
cmc
adc
es
mov
mov
test
cmp
xchg
xchg
push
movsb
adc
sbb
insl
xchg
inc
pop
sbb
stos
int
mov
push
or
sbb
dec
xor
inc
or
pop
rorb
pop
stos
fistpll
scas
aaa
mov
sub
pop
fdivs
xchg
insb
push
es
and
and
inc
xlat
mov
inc
loopne
or
jno
dec
mov
fdiv
sub
dec
je
push
inc
stc
imul
push
jne
aad
mov
test
dec
jl
pop
xchg
add
xlat
jnp
jns
inc
cmc
mov
cwtl
es
flds
push
cwtl
xchg
mov
adc
jno
xchg
aam
xor
insl
bound
clc
hlt
jb
and
in
lds
es
xchg
fdivrs
scas
mov
fcomps
in
push
iret
mov
nopl
cltd
sub
shlb
dec
push
lea
aad
sbb
sub
xor
sub
enter
sub
add
pushf
outsl
add
cmpsb
adc
xchg
jle
mov
xor
test
stos
xor
je
stos
push
inc
and
cmp
xchg
clc
push
ficoms
add
les
jae
xorl
movsb
jl
shr
mov
mov
xchg
inc
es
shl
push
mov
cltd
mov
fs
inc
mov
js
pop
faddl
enter
inc
push
shll
test
xor
dec
pop
dec
pop
outsb
and
lds
cmp
jp
lret
es
shlb
xchg
dec
dec
mov
inc
ret
sarl
cltd
movsl
xchg
push
cmp
outsb
mov
jno
add
aas
xlat
mov
repz
mov
je
push
cld
ljmp
decb
fnstenv
mov
pop
cmpsb
rclb
mov
fists
rcrl
cs
jo
push
imul
lahf
daa
mov
cmp
jl
inc
push
lahf
fistpll
addr16
lret
xlat
and
por
jle
mov
pop
jne
inc
or
or
xor
push
push
in
mov
push
shlb
pop
and
stos
mov
mov
enter
mov
sub
cmp
out
pusha
lods
mov
mov
xor
jl
pop
imul
in
lds
cmp
push
es
aam
cmp
cltd
test
out
add
sub
and
lock
sbb
out
cmp
adc
cld
xor
fs
fildl
jno
lahf
cmp
addb
xchg
cmp
or
pusha
pop
xor
sub
loop
lds
fs
sbb
stos
mov
sub
jnp
call
fadd
repz
gs
inc
dec
lret
push
cmp
mov
jo
xchg
pop
imul
mov
dec
out
std
fildll
xlat
in
lds
divb
dec
sarb
mov
mov
fidivrs
xchg
repnz
xchg
and
test
pop
scas
nop
jp
iret
leave
add
xchg
dec
add
out
iret
sub
sbb
push
mov
push
das
xor
fiaddl
test
inc
sbb
adc
pop
mov
stc
daa
xlat
jge
mov
fisubl
into
and
mov
mov
loop
sarl
mov
icebp
enter
add
sub
nop
mov
and
stos
pop
push
fimull
mov
add
mov
aaa
in
sub
jno
je
pop
lods
cmp
jmp
loop
pop
inc
mov
addb
cmp
sbb
inc
leave
nop
jmp
adc
lds
fisttpll
sbb
cmpsb
mov
push
push
cmp
push
push
xchg
xchg
sub
js
jl
mov
pop
vpunpckhqdq
or
sti
call
out
sub
xor
stos
sub
es
adc
or
mov
sbb
repnz
jb,pt
lock
rorb
mov
mov
inc
adc
ja
roll
cmc
mov
or
test
mov
data16
or
dec
adc
std
int
or
jl
das
test
inc
jl
xor
add
pop
dec
mov
dec
mov
sub
imulb
mov
xor
sub
leave
xor
fadds
pusha
jo
lahf
decl
ds
xchg
cli
mov
imul
pop
fcompl
sbb
fsubs
add
inc
cmpsb
hlt
xchg
mov
mov
cld
loop
cmp
sbb
out
mov
dec
dec
and
jb
pushf
cmp
fnsave
cmp
aam
push
ror
lret
cli
xchg
sbb
jne
packssdw
inc
pushf
mov
pop
loopne
js
push
sub
xchg
inc
and
push
and
pop
push
fdivrl
add
imul
push
add
sbb
test
rep
xor
and
mov
mov
and
into
movsb
mov
mov
dec
mov
nop
pusha
dec
jp
adcb
and
cltd
clc
lcall
sub
cmpsl
rorl
pop
ja
sbb
jp
or
pop
push
xchg
pop
cmp
pop
mov
sbb
inc
ljmp
shrl
mov
and
pop
stos
inc
sbb
rolb
inc
mov
sub
sbb
call
cmpsl
idivb
xor
lahf
add
loop
jle
testb
lcall
lret
popf
and
jb
add
xchg
sub
out
scas
enter
add
jns
aas
testl
ret
sub
dec
jns
out
and
lds
sahf
push
iret
inc
mov
js
mov
sbb
cs
aaa
nop
out
and
outsl
dec
mov
or
cmp
xchg
imul
stc
xchg
lods
dec
fcoms
xchg
push
mov
adc
loop
push
shll
sub
shll
sub
ret
inc
fimull
lret
jae
popf
mov
pop
idiv
test
mov
jmp
sbb
and
sarb
aam
or
add
lcall
mov
sti
fdivl
repnz
scas
add
jns
pusha
xor
fcoms
jns
insl
inc
inc
cmp
mov
adc
add
and
jns
es
jbe
push
pop
mov
xor
fmuls
lock
mov
and
mov
scas
out
int
mov
insb
lret
jle
add
cmc
dec
mov
xor
lahf
mov
dec
test
pop
mov
cmpsb
movsb
adc
imul
jns
fidivs
add
mov
sahf
lea
mov
cmp
or
iret
ret
in
shll
in
mov
fwait
sub
cmp
mov
push
jnp
test
out
ret
int3
ficoml
daa
push
test
push
push
loope
jns
jmp
inc
into
cmpsl
xor
or
push
insb
in
push
outsb
dec
rorb
ljmp
jno
lret
sbb
mov
orb
mov
and
dec
xchg
pop
stos
rclb
xor
mov
sbb
in
imul
es
sub
sub
imul
jp
push
mov
arpl
lcall
mov
push
mov
pop
mov
clc
xchg
and
mov
inc
jge
cli
xor
out
enter
fs
xor
mov
sbbb
push
popf
mov
pop
sbb
les
aas
outsl
syscall
loop
pop
inc
lock
inc
mov
push
dec
les
jp
stos
adc
movhps
cwtl
out
mov
out
ret
leave
mov
mov
jg
fxch
pop
cwtl
outsb
or
adc
jns
mov
outsl
pushf
push
inc
push
mov
popa
repnz
arpl
iret
cld
out
and
xor
andb
sti
xchg
push
aad
loopne
add
in
mov
imull
movsb
jmp
lods
adc
lea
repz
inc
clc
or
insl
leave
es
ss
decb
dec
ss
lret
sub
out
mov
mov
ror
xor
es
adc
je
pop
fsubr
dec
sahf
jns
out
mov
test
xchg
jns
sbb
bound
mov
or
push
pop
cmpsb
jge
call
fisttps
inc
or
loopne
out
mov
cmp
sbb
push
in
aad
xchg
shrb
push
int
xchg
pushf
jo
pop
int
lds
jnp
pop
xor
cmpsl
shll
xor
push
mov
popf
sahf
outsl
jmp
mov
lcall
sub
aam
cmpsl
xor
test
dec
mov
jb
enter
movsb
lods
inc
insb
pop
push
je
dec
xor
lret
ja
jl
fsubrl
xor
ror
dec
stc
rcrl
and
sub
fs
inc
loope
push
std
std
fsubs
stc
or
xchg
movsl
sbb
lea
ljmp
movsl
dec
jp
movsb
xchg
aad
cwtl
fistpl
daa
data16
int
fnstcw
adc
pop
cmp
testb
adc
std
cmp
addl
iret
jb
shrl
lods
xor
push
jo
dec
mov
divb
lods
pop
sub
cmp
jecxz
mov
xchg
sub
out
faddl
insb
jecxz
ds
ja
shrl
dec
repz
ret
cmp
and
jbe
lods
jb
out
subl
push
js
push
sub
sub
mov
ss
push
sti
movsl
sahf
or
pushl
sbb
lods
sub
push
iret
enter
jecxz
xchg
or
fadd
pop
outsl
pop
insb
imulb
jnp
icebp
out
sar
push
jle
je
fs
sub
dec
push
mov
or
adc
and
shlb
sarl
leave
push
pop
cwtl
out
mov
adc
aad
fsubrs
inc
or
and
jo
xor
pushf
into
das
lret
stos
nop
inc
push
pop
dec
sbb
rcll
xchg
rclb
mov
jb
ss
imul
cmpsb
lcall
sub
daa
sub
lahf
mov
sti
nop
lock
mov
mov
je
nop
dec
hlt
mov
sub
fldt
es
sub
mov
addr16
jae
std
pop
pop
mov
xor
bound
sub
movsb
jmp
jo
dec
adc
nop
push
and
dec
mov
cwtl
dec
cli
sub
cld
lcall
loope
in
addr16
add
push
sbb
adc
cs
inc
pop
lds
rolb
insb
in
add
rorl
sbb
xor
les
inc
fwait
push
loope
or
outsl
mov
lret
adc
lret
inc
cmp
push
mulb
popa
cmp
inc
or
in
push
data16
or
lret
into
fistl
adcb
pop
pusha
xchg
lcall
sti
xchg
in
add
fdiv
or
xchg
jp
jecxz,pn
pusha
jno
aas
pop
test
or
xchg
dec
aad
mov
daa
cmpb
mov
cmp
mov
push
xor
add
jnp
jp
dec
lret
ds
mov
cli
rcll
xchg
xor
pop
ljmp
popf
cmc
aas
loop
sub
pusha
ds
mov
adc
testl
data16
push
push
lret
push
jp
cmp
jnp
jl
mov
jnp
arpl
or
data16
int3
mov
sahf
or
sbb
gs
mov
lods
shlb
pop
stos
add
or
movb
sub
mov
add
add
lcall
dec
pop
jl
lods
movb
das
shrb
and
std
pop
jmp
sbb
mov
xchg
outsl
inc
sbb
ds
mov
lea
xor
mov
std
and
js
inc
jg
popf
sarb
cmp
dec
inc
add
dec
pop
xchg
add
mov
insl
mov
hlt
rorl
movsb
in
sbb
arpl
xor
aaa
fisubl
test
repnz
js
mov
data16
mov
and
jg
ds
into
out
insb
inc
and
jnp
subb
imul
in
sub
lret
add
nop
pop
fsubrp
jbe
shll
add
fdiv
inc
dec
icebp
fdivr
xchg
pop
xor
daa
xchg
jl
fldl
fcmovb
loopne
push
pop
xor
dec
aaa
adc
scas
jne
dec
push
cwtl
pop
out
shrl
outsb
iret
scas
inc
bound
lahf
fcmovnu
cmpsl
fstl
movsb
rcrl
pop
xchg
dec
push
je
jg
jo
xor
push
jl
pop
int3
add
xchg
sbb
dec
sbb
out
jns
cli
mov
pop
and
and
sbb
mov
das
imul
xchg
and
and
add
jo
bound
filds
rorl
dec
lcall
call
out
dec
push
scas
gs
nop
pusha
into
pop
xchg
mov
divl
push
enter
out
andb
dec
mov
scas
nop
scas
dec
imul
arpl
sub
mov
and
push
jmp
mov
jl
inc
lods
dec
dec
pusha
mov
lds
insb
adc
andb
xchg
mov
and
repnz
dec
pushf
rclb
int3
scas
xor
jmp
add
orb
and
jl
inc
outsb
cmp
pop
and
outsl
test
or
push
icebp
xor
jne
pop
lods
sarl
das
cs
mov
fwait
adcb
andb
cmp
outsl
push
lods
pushf
adc
ficomps
mov
clc
sbb
test
dec
enter
arpl
into
popa
xor
sub
in
pop
mov
cli
cmpsl
dec
in
sbb
xchg
popa
jl
push
jo
mov
hlt
jl
nop
jp
or
sub
outsl
mov
mov
xchg
jmp
lock
popf
ds
push
dec
lock
mov
dec
adc
jle
cmp
bound
fwait
daa
sbb
or
add
cmpsl
push
fdivl
push
int
daa
dec
sub
adc
aas
aas
xchg
fcoms
pusha
and
lods
ljmp
xchg
pop
icebp
sbb
mov
jbe
iret
insl
aad
push
pop
or
and
rorl
sbb
xchg
inc
jp
mov
clc
fidivl
in
xor
int
push
insl
adc
push
cwtl
cli
or
jge
pop
rorb
push
jmp
fstl
fldpi
sbb
or
sub
cli
std
jge
xchg
hlt
xor
xlat
mov
jp
cmpb
sub
or
in
push
out
leave
pop
inc
fsub
popa
pop
xlat
mov
stos
dec
repnz
push
daa
pandn
lahf
orl
aaa
push
inc
data16
clc
pop
stos
int3
out
cmp
pop
sbb
pop
out
mov
enter
aam
push
cmpsl
sub
push
popa
jmp
mov
fmuls
orl
sub
lods
and
ret
push
cmp
popf
pop
insl
shlb
add
mov
mov
jle
adc
popa
ss
cmc
dec
arpl
inc
jp
fdivl
xor
or
lea
push
sbb
faddl
dec
in
das
sar
out
js
repnz
pop
test
pop
jnp
mov
test
add
adc
jae
xchg
jle
in
dec
jecxz
push
sbb
or
mov
push
iret
or
nop
lret
ljmp
iret
repnz
addl
pushf
pop
push
cmc
andl
outsl
imul
and
fnstenv
xchg
xor
daa
comiss
lret
mov
push
mov
and
std
dec
mov
dec
out
hlt
pusha
sbb
mov
aad
mov
sbbb
add
and
dec
mov
nop
repz
aad
sub
cltd
mov
push
insl
inc
aad
mov
test
int3
out
push
sbb
adc
push
test
cmpb
mov
push
out
andb
pop
aad
pushf
ret
cmp
adc
cmp
pop
lcall
rorl
mov
xorl
xor
cwtl
mov
mov
sbb
ljmp
dec
hlt
or
stc
fadd
imul
out
push
sahf
pop
outsb
sbb
sbb
mov
repnz
ds
and
in
mov
lods
push
mov
sbb
icebp
into
add
outsl
sbb
xor
or
mov
mov
call
push
notl
xchg
in
icebp
fsubs
pop
loopne
push
add
xchg
cmp
stc
idivb
and
adc
cld
cmp
leave
adc
icebp
test
mov
std
sahf
mov
daa
adcb
sub
jp
or
iret
or
dec
mov
mov
pop
sub
insb
and
out
pop
outsl
aad
cmp
outsl
roll
adc
int
hlt
jnp
int3
lahf
in
js
std
dec
and
cmovae
popf
push
lds
xor
xor
inc
lea
outsl
or
data16
push
push
mov
int3
mov
xchg
sub
sbb
xor
mov
cld
fdivr
jb
cmpsb
scas
cld
pushl
sarb
leave
mov
mov
cmp
mulb
bound
add
ret
pop
iret
mov
push
adc
into
pop
adcb
sub
test
sti
mov
sub
add
cmp
je
xlat
scas
jno
adc
fldenv
ficomps
add
and
pop
sti
out
std
inc
movsb
mov
sahf
repnz
stos
fsubrs
cmpsb
dec
bound
pop
jns
pop
cmp
ja
in
sub
cmc
sbbl
in
inc
inc
sub
cld
xchg
add
push
push
ljmp
pop
rcrb
inc
dec
jl
clc
mov
cwtl
jbe
mov
ljmp
push
movsb
mov
adc
dec
enter
loop
jb
jno
mov
in
and
and
sub
xor
mov
scas
lcall
inc
orl
lcall
push
leave
aad
shlb
sbb
out
mov
jne
push
cs
nop
std
push
rorl
ret
popf
fidivl
je
push
cld
pop
shrb
pop
sti
pop
in
or
jnp
cs
scas
movsl
imul
inc
jg
xchg
int3
adc
cwtl
or
insl
mov
dec
movsb
leave
cmpb
gs
aam
aaa
or
cmp
repnz
push
jno
or
mov
das
sahf
stos
sbb
test
es
sbb
fiaddl
mov
std
shll
mov
add
push
lods
je
enter
scas
dec
leave
pop
rep
out
jg
stos
dec
daa
xor
inc
cwtl
or
gs
dec
sti
push
dec
xchg
icebp
bound
or
loopne
not
fcomip
mov
dec
sahf
jnp
ljmp
cmpsb
xchg
push
push
insb
cmp
cmpsl
loop
std
sbb
push
shlb
add
ljmp
call
adc
loopne
push
dec
pop
ss
out
cmp
inc
and
jae
jbe
and
mov
xchg
lcall
in
and
aad
push
xchg
fsubs
xor
icebp
inc
dec
dec
test
push
jns
out
dec
mov
cmp
aas
popf
test
mov
mov
xchg
nop
push
pushf
cmp
cmc
jo
xchg
outsb
jge
pop
cld
fisubs
fwait
push
dec
adc
xchg
fcoms
nop
mov
or
rcr
mov
add
in
pop
push
andl
or
mov
les
dec
push
push
fsubl
mov
mov
std
add
mov
or
in
add
mov
call
mov
in
call
cmovo
shrl
int
mov
xor
jl
mov
sbbl
and
lods
fmull
push
sbb
out
mov
ret
aas
and
sbb
mov
add
jl
adc
shll
mov
cli
cld
cltd
rclb
xor
mov
es
jns
add
dec
clc
in
lods
test
cli
and
inc
jle
test
jno
dec
mov
sub
mov
dec
and
pop
pop
pusha
cmp
cmp
push
bound
imul
shll
pop
js
adc
or
inc
loop
aaa
lret
adc
sub
nop
sbbl
test
clc
aam
imul
mov
fcmovnbe
stos
es
lods
push
in
shrl
mov
sbb
das
icebp
stc
das
mov
mov
and
lahf
ljmp
ret
faddl
cmp
pop
mov
xor
add
mov
push
fsubl
call
dec
or
aam
mov
sub
out
lret
arpl
movsl
mov
mov
mov
xlat
stos
lock
pop
leave
cmp
ds
xchg
loop
orb
sbb
icebp
adc
or
push
insl
xor
push
xor
lods
or
inc
mov
xlat
xlat
jo
jl
out
adcl
xor
jge
mov
pusha
jo
arpl
xor
xchg
push
out
xchg
ret
adc
mov
mov
aam
push
in
addr16
je
rclb
add
sub
dec
push
jne
in
inc
cmp
mov
sub
sbb
sbb
adc
rolb
sub
xor
push
cmp
pop
and
dec
jno
aaa
add
clc
arpl
test
inc
popa
gs
sbb
gs
xor
or
add
adc
je
pushl
push
imul
jae
ja
push
and
cmp
mov
push
cli
pop
test
mov
jo
sub
push
mov
addr16
cmc
test
mov
cmp
sbb
out
push
xor
cmp
icebp
or
shll
negl
mov
insb
out
push
mov
add
int
outsb
push
hlt
shll
push
mov
gs
pop
inc
mov
lret
sbb
out
ljmp
lds
xor
mov
adc
cli
jge
push
outsb
push
cwtl
xchg
xchg
fildl
lret
mov
stc
outsl
sbb
in
pcmpeqb
sbb
and
mov
lds
cmp
subb
cwtl
outsb
sub
pslld
std
imul
lret
iret
in
pop
icebp
xlat
inc
std
jno
imul
dec
inc
mov
fwait
adc
repz
lods
orl
sub
pop
cmpsl
out
mov
ret
setns
sbb
cmpl
movsb
sub
jmp
mov
test
test
xchg
inc
mov
cmp
add
jno
cmp
arpl
rolb
sti
sahf
repnz
jnp
add
push
out
lret
sti
movsb
sbb
mov
rolb
fcmovnbe
mov
imul
out
pop
jmp
fdivrl
jmp
sti
lock
mov
sub
movsb
nop
imul
mov
testb
aad
addr16
xchg
push
jmp
push
decl
or
lahf
popf
es
sti
push
add
pop
fnstsw
std
ljmp
mov
jno
adc
jl
insb
or
jp
mov
sti
std
fs
cwtl
push
inc
cmc
push
jae
stos
test
data16
mov
mov
pop
push
lret
lcall
or
jns
lds
clc
test
pop
pusha
xor
push
sbb
aas
fnsave
movb
ds
jne
xchg
push
add
push
xor
dec
rcrl
jecxz
xor
jmp
cmp
jno
dec
push
mov
pop
inc
subb
clc
mov
scas
xor
test
int
adc
xchg
fldt
lock
mov
jns
out
popf
mov
aaa
jo
jge
sbb
xchg
js
sub
idivl
jp
mov
pop
filds
dec
outsl
shll
imul
cmp
and
out
pop
hlt
mov
xchg
add
data16
ret
in
inc
pushf
in
andl
jp
retw
icebp
push
sbb
js
mov
jmp
adc
jg
mov
inc
mov
jae
outsl
jp
cmp
hlt
shll
mov
leave
mov
in
repz
int3
mov
jge
and
mov
mov
pop
js
cld
mov
xchg
outsl
sub
call
fsubp
dec
in
stos
movl
mov
shl
fstpt
pop
mov
mov
xchg
xor
or
pop
mov
cld
mov
insb
lahf
add
fldcw
out
aaa
sahf
jno
imul
jns
jecxz
inc
mov
loopne
mov
fcoml
xlat
ljmp
push
lahf
add
push
adc
fcomps
adc
int3
faddl
push
into
es
cwtl
mov
push
not
xchg
movnti
adc
mov
pop
int
jge
pop
jb
test
loop
gs
mov
out
orl
in
in
and
cld
loopne
push
outsb
mov
aam
pop
add
out
mov
jnp
into
and
mov
push
test
jp
cmc
xchg
dec
sbb
cmc
xlat
mov
stc
mov
push
cmp
iret
fdivrl
push
xor
jp
mov
outsl
jnp
push
push
xchg
sub
cmp
xor
clc
and
cs
push
and
mov
decl
cli
lock
out
scas
mov
addr16
pushf
add
pushf
push
or
push
outsb
or
adc
dec
call
add
push
pop
in
clc
jmp
pop
es
test
jb
into
jmp
xchg
pusha
xchg
or
mov
hlt
push
loop
mov
mov
outsb
inc
in
test
dec
adc
paddw
cld
scas
call
stos
int3
push
pop
push
cltd
or
pushf
in
test
fs
js
push
cwtl
pop
and
jb
in
addr16
sbb
mov
addr16
pop
cmp
fidivl
sti
js
pop
jge
inc
gs
dec
xchg
dec
shlb
inc
add
mov
mov
or
gs
addr16
in
out
jb
sbb
popa
stc
out
push
or
ljmp
lock
mov
or
pop
scas
xor
test
xchg
sub
pop
into
in
rcll
int3
stos
push
mov
call
std
cli
fdivrs
or
cld
movsl
mov
hlt
pop
cmpxchg8b
jnp
inc
ja
mov
std
and
outsl
or
dec
inc
sbbl
inc
mov
dec
outsl
iret
outsb
fs
cmp
mov
repnz
lahf
inc
and
or
jle
fistpll
add
pop
cmp
mov
cmpsb
shrl
insb
imulb
mov
sahf
cltd
and
and
frstor
in
jnp
mov
leave
out
out
push
inc
cmp
mov
add
and
pop
jno
clc
jne
int3
stc
jmp
cltd
lods
into
cmpsb
test
inc
pop
fcmovnu
xchg
pushf
and
aad
popa
or
mov
cltd
dec
cmc
insb
ljmp
mov
xchg
cltd
mov
lret
xor
push
sub
dec
or
es
xor
fs
adc
or
pop
inc
test
sti
add
jle
mov
jecxz
jp
cmp
repnz
mov
rclb
inc
icebp
pop
lods
or
xor
or
push
scas
jb
push
repnz
pop
cltd
xchg
pop
pop
lcall
mov
leave
aam
in
xor
aad
scas
add
int
test
sbb
jno
repz
add
shrb
fisubs
jmp
push
scas
lods
jns
adc
sub
mov
js
xor
inc
cmp
and
push
ds
jmp
mov
pop
jnp
les
xor
daa
mov
xorb
repnz
inc
pop
movsb
arpl
dec
sub
xor
leave
repz
fstps
push
xchg
adc
xchg
xor
ds
mov
test
mov
in
pop
add
cltd
mov
inc
test
push
sahf
outsb
ljmp
mov
sbbl
xchg
lock
arpl
pop
imul
bound
mov
leave
push
jge
push
push
aaa
mov
jge
in
adc
adc
scas
dec
add
ja
pop
jns
sbb
stc
insw
fadds
add
and
test
push
movsb
sbb
mov
aam
jg
inc
dec
arpl
xor
ficomps
add
int
imul
jl
push
repz
dec
inc
stc
and
adc
movsl
push
fdivl
mov
icebp
adc
or
cmp
jmp
bound
insl
test
loopne
mov
lahf
mov
push
int
nop
mov
push
push
cmc
mov
jbe
sar
rdmsr
icebp
jp
fsub
mov
daa
imul
add
add
scas
aaa
out
sahf
scas
add
incl
mov
cmpsl
outsl
imul
sbbl
pop
lods
inc
loopne
xlat
stos
adc
mov
nop
sbb
scas
pop
fcmovbe
adc
clc
sub
mov
sahf
pushf
stc
int
test
mov
mov
iret
dec
cs
inc
jg
aad
pop
arpl
push
and
push
mov
xchg
push
mov
jmp
mov
testb
sahf
lock
and
cltd
push
aas
jo
ret
mov
rol
fcomps
ror
fcompp
jns
push
xor
xchg
mov
mov
inc
cli
addr16
fadds
mov
xor
sbb
bound
adc
lods
sub
mov
mov
sahf
adc
and
push
xlat
push
push
mov
sbb
pop
jp
nop
daa
ret
push
xchg
loop
repnz
aas
dec
cmp
pop
mov
jg
mov
xor
pop
cmp
repz
out
jg
fnstenv
aas
sbb
shll
divl
mov
cwtl
mov
pop
hlt
or
add
jbe
imul
insb
pop
add
je
test
ret
jbe,pn
popf
fidivrl
dec
icebp
popa
push
cmpsl
pop
addl
jge
sub
lcall
cmp
xchg
push
mov
xlat
cmc
or
jp
xchg
mov
in
inc
arpl
std
add
das
xor
pop
fiadds
jae
cmp
mov
out
pop
scas
cmc
fisttps
adc
fistpl
adc
popf
pop
shlb
cmp
jmp
pusha
aas
pop
ljmp
cld
xchg
lds
mov
out
out
adc
adc
inc
add
adc
adc
popa
mov
mov
shlb
rcrl
adc
icebp
dec
mov
cs
pmaddwd
movsb
rcl
into
mov
std
mov
loopew
fwait
sbb
scas
sub
mov
push
imul
and
mov
mov
stc
xchg
inc
or
cmp
ret
lock
icebp
inc
mov
daa
cli
je
test
xchg
clc
sub
loopne
push
scas
mov
les
xorb
cli
mov
cmpl
cs
sarl
ss
xor
adc
pop
mov
in
jb
add
sub
push
fs
call
push
cmp
mov
outsb
mov
repz
sub
dec
leave
push
stc
push
daa
cwtl
pop
dec
rcl
cltd
loop
push
pmaxsw
sahf
movsb
inc
dec
push
dec
inc
out
lea
enter
into
ja
mov
pop
jge
iret
out
push
mov
sti
leave
enter
and
xchg
adc
xor
aaa
xor
mov
inc
cmp
in
push
aam
rol
pop
jle
repz
jo
int3
xor
pop
cwtl
sub
sti
push
lods
dec
mov
mov
and
cmp
mov
or
jg
ret
lds
sbb
movsl
test
shrb
push
and
test
sub
jno
pop
xchg
mov
call
in
cmpsb
jbe
push
out
std
or
sbb
xor
mov
adc
xchg
decb
mov
xor
push
imul
mov
mov
dec
cld
cmp
sahf
cmp
xor
sbb
ret
bound
imul
xchg
inc
je
xchg
dec
pop
fiadds
inc
shrl
int3
popa
cmpsb
mov
lods
loopne
push
cmpsl
inc
dec
jge
ja
mov
push
adc
nop
pop
out
inc
add
fidivrl
adc
add
clc
cmp
xchg
push
ljmp
jno
sti
mov
sbb
sub
mov
jno
sbb
test
xor
pop
ds
push
out
inc
icebp
addb
and
pop
push
stos
sub
xchg
insl
mov
mov
data16
xor
sub
imul
ss
add
adc
das
xchg
lretw
orb
mull
in
mov
adc
mov
push
imul
jmp
in
jle
out
fcmovnu
pop
sbb
mov
mov
or
mov
das
rcl
fs
cmp
pop
clc
add
and
and
out
clc
adc
popf
into
scas
gs
in
aam
jle
inc
cmp
jmp
adc
loope
add
dec
xor
sbb
fcmovnu
pop
jmp
daa
into
js
add
ds
xor
arpl
insl
daa
xlat
pop
push
pop
loope
push
test
pop
cltd
arpl
mov
pop
std
push
xchg
xor
lret
shll
add
cmp
rcrb
mov
in
xor
inc
fldl
repnz
movsb
pushl
cmp
jbe
push
daa
stos
inc
sbb
inc
test
aas
mov
pop
mov
fists
adc
sbb
xchg
pusha
mov
push
mov
cwtl
das
and
movsb
push
outsb
mov
cwtl
int3
push
push
jne
and
clc
xchg
lods
cmp
sub
and
arpl
inc
sbb
sub
mov
inc
lods
in
push
or
mov
fs
dec
aaa
sahf
xchg
les
or
mov
mov
mov
std
dec
fs
adc
lret
mov
cmpsl
or
rol
cmc
mov
sub
pop
xor
cwtl
mov
lret
mov
sub
xor
jg
js
jge
push
test
ficoms
scas
leave
jge
pop
jmp
and
test
sbb
inc
cltd
add
adc
data16
lock
mov
pusha
out
xor
imul
mov
add
jp
lock
xchg
cmpsl
push
inc
pushf
adc
addr16
mov
filds
xchg
inc
inc
das
push
jmp
dec
jns
cmp
mov
mov
dec
jle
dec
jno
xchg
jne
aad
jae
xchg
mov
inc
push
adc
in
mov
fdivl
cmp
and
xor
inc
cwtl
decb
fcompl
int
dec
adc
jne
jp
add
jecxz
imul
push
dec
cli
jecxz
je
mov
jns
sub
imul
add
push
enter
incb
lcall
scas
fldcw
push
lret
sbb
movl
inc
mov
mov
mov
mov
lahf
xchg
dec
add
rcrl
lods
je
rolb
test
jl
int3
orb
fs
pop
mov
je
rorb
mov
fstl
mov
test
cmc
rcrb
in
lea
aaa
sti
lods
addr16
dec
movsb
pop
jg
xchg
inc
stos
mov
jmp
jb
mov
or
jge
rcr
xor
dec
shl
orb
sbb
pop
xchg
movsl
mull
out
ret
mov
push
pop
aad
insl
add
daa
inc
std
or
rorl
cli
jmp
mov
sub
mov
jb
dec
cmpsl
push
cmpsb
subb
shlb
imul
pop
dec
push
cmp
or
push
dec
dec
adc
pop
cltd
iret
jp
dec
mov
pop
hlt
pop
sub
jp
icebp
lods
push
mov
adc
test
pushf
mov
inc
sarb
in
inc
les
lret
add
pop
mov
adcb
jecxz
shll
repnz
push
add
js
mov
jmp
negl
test
cmpsb
xlat
adc
pop
push
push
mov
in
push
jae
fisubs
xchg
loopne
inc
xor
mov
in
and
sbb
cmpb
out
add
fdivl
aas
pusha
js
mov
loope
and
movsl
int3
pop
pop
int3
lret
xor
fcoms
movsl
test
add
xchg
lods
adc
into
mov
data16
ja
ljmp
lret
push
cs
push
push
cmpsb
call
pop
bnd
stos
jae
or
mov
mov
vphaddubq
xor
dec
push
add
ret
movsl
push
mov
jnp
rolb
pushf
cmp
push
lcall
adc
mov
leave
mov
mov
aas
loop
cmpb
cmpsl
das
inc
push
xor
dec
sbb
mov
pushf
mov
pop
fiadds
sub
pusha
pop
mov
mulb
xchg
jnp
inc
sub
lods
push
aaa
dec
fcoms
cmpsb
ds
dec
dec
ret
inc
jb
imul
cmpsb
stos
mov
mov
mov
cld
ffreep
bound
dec
loope
inc
cmp
es
popl
shlb
lret
adcl
adcb
lods
nop
mov
xor
sbb
jg
lods
mov
pop
ljmp
adc
fsubr
jnp
movsb
xor
xchg
mov
fidivs
push
push
inc
insl
pop
dec
out
jo
sbb
mov
xchg
mov
rcl
hlt
scas
add
addr16
int3
add
mov
xorb
sub
cli
ficomps
fnclex
dec
xchg
sub
dec
stos
shlb
ret
lea
data16
outsl
pusha
mov
add
jae
cmp
mov
clc
js
or
neg
out
and
add
scas
jle
mov
jge
movsl
push
mov
rcl
bound
popa
dec
pop
push
and
or
lret
dec
mov
lods
mov
sbb
push
push
mov
push
push
mov
popa
push
test
mov
stos
jmp
sub
or
in
ret
test
xorb
imul
mov
test
icebp
adc
aaa
dec
add
inc
shrb
je
popf
add
jge
mov
add
pop
sarb
or
mov
cld
mov
sub
pusha
test
cli
movsb
cltd
or
xor
push
aad
push
scas
rorl
arpl
mov
sahf
into
sub
in
daa
mov
mov
jno
fadds
cmp
inc
push
xchg
inc
xchg
sub
xor
je
mov
add
std
mov
aam
test
push
fcoms
in
stos
mov
push
aam
jb
push
ss
mov
mov
xchg
adc
les
mov
test
mov
movsb
push
sbb
mov
sub
sbb
and
loopne
loop
mulb
mov
dec
mov
imul
sub
mov
inc
inc
outsl
pop
ret
xchg
rolb
mov
fsubs
pop
or
into
jne
clc
call
fcmovb
mov
sub
hlt
arpl
xchg
xor
add
stos
lcall
push
data16
stos
pop
xor
mov
loopne
xchg
sbb
lock
mov
pop
inc
ljmp
pop
sub
sub
add
xchg
xchg
lret
rep
aas
fs
or
dec
or
lods
push
lock
aas
xor
arpl
cmp
cmp
xchg
adc
imul
xor
outsb
add
jns
xchg
and
mov
loopne
mov
xchg
jecxz
test
mov
test
sti
xchg
mov
test
xor
pushf
je
pop
mov
add
lods
jo
sbb
int3
xchg
xchg
stc
in
lret
movsb
add
and
jbe
mov
outsl
and
xor
imul
test
insl
adc
cli
push
inc
out
fstps
inc
lods
push
and
shr
xchg
lods
xchg
insl
pop
fwait
mov
push
inc
subb
xlat
test
test
pop
repnz
mov
ficompl
lahf
xchg
inc
shr
sub
or
xor
shlb
decb
cmpsb
shll
xor
into
sbb
mov
xchg
push
cmpsl
test
lcall
fidivl
jo
or
rolb
pop
inc
popa
cmpsl
xlat
cmp
xor
xor
jo
xchg
aam
push
mov
push
outsl
or
cwtl
jno
stos
add
std
stos
sarb
in
or
push
jp
shll
jnp
iret
and
or
ficoml
fsts
icebp
adc
cmpsl
pushl
ret
lcall
mov
inc
push
data16
mov
or
mov
mov
shll
xchg
lret
lea
lock
jl
adc
xor
ljmp
adc
jmp
int3
push
cmp
mov
sub
scas
mov
gs
jle
cmpsl
mov
cmp
call
sbb
int3
pop
or
popa
lret
pop
ret
andnps
es
or
push
fstl
fnstenv
mov
inc
movsb
and
mov
mov
loope
push
push
popf
repnz
push
and
std
inc
ret
push
xor
shl
pop
sub
shrb
loop
lret
cwtl
push
push
loop
mov
push
cs
pop
sub
sbb
aam
mov
mov
mov
stc
insb
dec
stos
pop
pop
cli
push
dec
and
imul
pop
sbb
cmpsb
lock
les
xor
xchg
lods
mov
jae
insl
and
ja
mov
pop
xchg
inc
mov
xchg
jecxz
add
fldt
inc
lea
sbb
add
sbb
test
ja
mov
loopne
pop
pop
faddl
ljmp
sbb
mov
push
int3
mov
push
push
inc
repnz
jbe
in
dec
addr16
stos
dec
cwtl
mov
adc
and
mov
mov
cmpsl
testb
rcl
movsb
in
pushf
into
jecxz
cmp
lods
push
sub
pop
inc
jbe
in
adc
sub
sahf
sbb
outsl
bound
jmp
mov
mov
or
fcomps
mov
and
scas
pop
data16
nop
lea
and
jb
nop
jecxz
add
into
mov
addb
nop
fimuls
inc
divl
pop
pop
cmp
or
cmovno
xor
adc
stc
fldenv
add
mulb
sub
xlat
pop
push
popa
lds
cmp
and
inc
dec
jmp
push
enter
movl
pop
jmp
sbb
sub
pusha
cld
jo
adc
sbb
das
push
scas
stos
inc
in
lods
jg
iret
adc
shlb
jg
push
test
pop
cwtl
ret
xchg
jge
fldcw
push
jne
lret
popa
push
fs
gs
mov
or
cmp
jne
cmp
pop
sti
push
rcr
in
enter
sub
pop
push
out
fldcw
xchg
mov
push
mov
lcall
rcrb
jg
not
pop
dec
sahf
inc
mov
std
mov
lcall
sub
mov
sti
repnz
mov
push
mov
cmp
icebp
push
adc
shrl
pop
int3
subl
neg
icebp
sub
or
xlat
aad
jp
jnp
int
lods
cmp
lea
cmpsl
and
push
push
cmpsl
movsl
pop
out
and
repnz
roll
fstp
pop
push
js
push
jbe
or
sbb
jns
jbe
aaa
pop
push
mov
daa
jo
mov
inc
jmp
es
stos
adc
dec
xchg
outsl
movsl
pop
mov
mov
hlt
fsubrs
pusha
adc
sbb
jno
ret
xor
cmpsb
and
repnz
mov
cmpsb
pushl
sub
xor
outsl
jge
testl
pop
cmpsl
lret
js
arpl
bound
mov
mov
mov
dec
jge
sbb
mov
sub
mov
jp
andb
out
sahf
cmp
enter
sbb
popf
pop
xchg
mov
cmp
sub
adc
xlat
je
es
lret
iret
popa
dec
pop
push
iret
jp
mov
dec
mov
push
imul
shlb
call
pop
inc
sbb
fwait
push
mov
or
test
xchg
sbb
dec
and
sub
out
iret
adc
sahf
cmp
or
sub
push
lods
jb
jmp
enter
sub
icebp
inc
mov
jl
aaa
adc
enter
pop
or
sbb
xlat
push
jns
sar
imul
xor
sbb
popf
adc
fwait
push
sti
in
xchg
sar
push
sub
lods
fsin
cmp
imul
mov
jmp
es
hlt
cmp
inc
hlt
rcl
cmp
js
add
dec
das
pop
and
jge
adc
pop
mov
sahf
cmp
dec
xor
arpl
lret
jecxz
sbb
xchg
loopne
fisttpll
mov
inc
xchg
mov
sbb
pop
sub
push
and
add
scas
jns
testl
inc
movsl
add
test
xchg
cmp
lods
divb
pmulhuw
push
lods
jp
fcompl
andb
xorl
push
cs
adc
and
inc
adc
bound
push
mov
lret
inc
inc
cmpsb
push
pop
cmp
stc
push
add
and
sub
jns
stos
xor
fistps
or
aad
mov
xchg
fmull
leave
insl
jge
out
xlat
idiv
lock
out
sti
js
incb
cltd
filds
or
mov
adc
lahf
pop
push
rorb
xor
inc
push
add
cmc
out
xchg
add
mov
test
lret
add
dec
mov
xchg
int
std
sbb
xchg
sahf
imul
hlt
in
jb
arpl
stos
sbb
lds
mov
test
int
inc
inc
sarl
cltd
cs
dec
or
add
jae
movsl
out
mov
aam
stc
cmp
jae
test
ljmp
aam
dec
es
sbb
xchg
cltd
dec
inc
sub
dec
push
jg
frstor
mov
negb
loop
pop
orl
outsl
xchg
test
les
or
pop
mov
dec
sbb
or
idivl
shlb
pop
mov
icebp
aas
pop
cli
repnz
pop
push
adc
pop
push
call
dec
fwait
lods
jo
mov
cmc
cmpsl
inc
jp
fmul
push
push
jae
mull
mov
movsl
xchg
dec
xchg
in
bound
xor
insb
lcall
pop
sub
imul
jge
inc
ret
push
add
add
addr16
arpl
cmp
sahf
jo
cld
and
ss
jle
das
jo
cmp
and
sbb
pop
das
imul
and
repz
push
jmp
into
inc
add
fildl
or
mov
fiadds
jle
or
fxch
fwait
mov
imul
push
dec
mov
inc
movsl
sub
pop
mov
out
mov
dec
mov
loope
dec
mov
les
pusha
loope
and
push
pop
push
in
hlt
sub
cld
mov
aad
sbb
sahf
or
mov
cmpsl
fisttpll
mov
add
jns
test
cwtl
mov
jno
lcall
xlat
and
sub
adc
cmpsl
sbb
scas
mov
test
push
xchg
mov
xchg
push
sbb
inc
insl
push
test
pop
ret
pop
pusha
or
mov
pop
pushf
xor
jecxz
cmpsl
jo
jg
cmp
js
inc
rol
jo
inc
add
out
jge
dec
xchg
xchg
xchg
lods
loopne
mov
popf
jmp
push
orl
sub
inc
loopne
fsubrl
adc
push
int
rcr
aaa
fnstsw
es
cmpsl
outsl
ret
xchg
knotw
mov
mov
hlt
add
cld
repnz
outsb
mov
hlt
clc
ljmp
jmp
aas
iret
rolb
cli
in
pop
loopne
in
ret
pop
dec
push
push
jo
pushf
lcall
push
ds
rol
das
dec
and
or
mov
sub
mov
add
in
out
fwait
mov
filds
xchg
mov
ffreep
cli
loop
mov
sbb
dec
fldenv
lods
jb
lahf
cmp
mov
sub
jnp
push
lret
scas
pop
xchg
pop
js
int
add
fst
stos
cmp
xlat
mov
inc
add
jo
jg
scas
inc
aad
xchg
inc
sbbb
xor
dec
mov
mov
addb
pop
xchg
test
or
mov
testb
push
or
shl
pop
push
inc
sub
pop
ficomps
loopne
loop
push
mov
sub
icebp
lods
jle
adc
lcall
mov
insl
stos
jecxz,pt
and
jp
dec
fcompl
stos
mov
mov
mov
pop
ds
mov
mov
or
sub
mov
in
jnp
fisubrs
in
xchg
aad
mov
call
stos
decl
add
repnz
xchg
popa
mov
mov
stc
mov
into
push
std
enter
or
pop
push
push
cld
lret
cmc
or
pop
jae
mov
pop
dec
cs
int
pop
bound
jp
aad
inc
jns
mov
inc
repnz
lahf
ret
out
in
out
adc
mov
cmp
dec
xor
arpl
jg
cmp
sub
pusha
add
cmc
mov
pop
cmp
inc
push
fisttpl
es
sbb
xor
jmp
outsl
jecxz
lret
popf
out
and
xlat
push
cltd
in
xchg
and
dec
jbe
push
ljmp
sti
or
inc
jb
shlb
inc
lcall
jg
sub
outsb
dec
inc
push
sbb
xchg
cmp
jmp
mov
clc
and
insb
jae
negb
popa
aaa
rorl
jo
mov
insb
dec
push
mov
jp
out
jmp
fwait
push
das
jne
dec
int
stos
aad
or
mov
mov
mov
adc
sub
inc
in
cmp
xchg
mov
jle
clc
lods
decl
lret
loop
mov
iret
loopne
popf
xor
std
and
adc
xchg
imul
clc
ds
push
dec
mov
push
out
clc
xchg
mov
pop
push
test
push
out
dec
lds
add
shrb
test
cmp
je
mov
sbb
imul
iret
jmp
push
xchg
dec
flds
mov
mov
xlat
rolb
in
cwtl
out
adc
cmpsb
shl
hlt
mov
sbb
add
pop
lcall
mov
cmp
and
inc
ss
fildll
out
repz
movb
fdivrl
stos
xchg
mov
pushf
rorb
inc
ds
sbb
jne
ljmp
inc
jbe
mulb
or
and
aad
out
sbb
and
clc
push
sub
aad
adc
dec
sbb
out
or
mov
out
cli
cld
bound
jp
mov
je
scas
adcb
xor
jecxz
cmp
push
repnz
and
xlat
arpl
sbb
in
fisubl
int
xor
ja
icebp
scas
pop
add
xor
clc
mov
aaa
inc
xchg
lcall
out
inc
cli
mov
sbb
sbb
outsl
cli
stc
out
push
or
mov
pop
push
sub
push
rorl
and
dec
movsb
mov
inc
ljmp
dec
sub
loopne
pusha
inc
xor
dec
xor
loopne
iret
aas
push
jge
fwait
insl
pop
mov
xchg
xor
jne
add
adc
cwtl
mov
out
movsl
in
pop
pushf
gs
and
lret
xor
xchg
dec
sbb
test
xchg
jb
add
mov
fisubs
jbe
add
out
mov
and
test
repnz
stos
jmp
mov
pushl
ljmp
add
cmp
add
lcall
dec
shll
sbb
mov
mov
pop
push
jb
nop
adc
adc
pop
mov
xchg
out
pop
fbld
arpl
xchg
pop
xor
pop
sbb
in
aam
mov
in
jp
xor
inc
xchg
addr16
adc
out
sarb
mov
push
punpcklwd
repnz
popa
mov
sbb
icebp
cmpsb
push
ljmp
or
shlb
sbb
xchg
mov
xor
push
push
adc
ljmp
sub
add
je
dec
leave
lea
sbb
add
xchg
mov
and
cmc
in
imulb
shl
xchg
mov
and
loop
mov
push
mov
or
mov
pop
xorb
and
fcoms
mov
mov
sar
mov
and
add
inc
push
pop
decl
mov
pop
addr16
ror
sbb
inc
xchg
mov
mov
daa
mov
jmp
cmpsb
jns
sbb
pop
int
cld
cmpb
sub
mov
aad
jo
scas
popa
adc
pop
mov
push
and
into
push
mov
push
mov
lds
jl
and
pushl
shrb
sbb
mov
out
orl
shl
sbbb
xchg
sbb
ret
cmp
test
cwtl
mov
aam
popf
hlt
mov
movsb
fiaddl
fidivs
stc
mov
shlb
mov
pop
xchg
lret
insb
insl
mov
pop
add
popf
movsl
jp
or
push
pusha
mov
call
lret
sbb
sbbb
pop
imul
in
cltd
adc
xchg
sbbb
ret
scas
or
repnz
jle
in
jmp
mov
aaa
sub
xor
lock
lock
ds
rcrl
bndstx
or
pop
push
push
xchg
dec
fisubl
cmovno
xor
je
aad
sub
out
or
jmp
add
sbb
cmp
lods
lds
into
pop
popf
ss
shr
pop
fdiv
call
mov
mov
cmc
pop
pop
pusha
jns
arpl
outsl
clc
in
jbe
int
pop
sub
dec
push
cmp
insb
insl
fnstcw
add
add
icebp
subl
sub
inc
scas
fnsave
aaa
xchg
mov
xchg
mov
mov
fcompl
mov
dec
in
or
xor
push
pusha
mov
repz
repnz
int3
fstps
test
mov
dec
pop
bswap
out
adc
pushf
sub
shll
out
cmp
lcall
nop
sbbb
adc
out
cwtl
shll
jb
dec
jb
dec
scas
inc
test
push
pop
test
pop
push
setp
jl
dec
adc
or
dec
popa
sbb
mov
sbb
mov
nop
aad
jae
loop
stc
xchg
push
in
mov
mov
ret
ret
es
dec
loope
xchg
sbb
icebp
push
or
adc
cld
adc
ffreep
mov
subb
lcall
dec
xchg
add
sarl
cld
pop
jecxz
push
into
cltd
xor
fucomip
cmpsl
pop
push
scas
fistpll
out
and
cmpsb
mov
adc
sbb
std
jmp
pop
mov
cmp
sets
std
stc
repz
pusha
or
in
hlt
pop
inc
xor
push
push
enter
jge
das
mov
popl
into
push
lcall
push
push
mov
dec
xor
dec
leave
mov
mov
mov
xlat
inc
dec
arpl
lret
popf
clc
adc
dec
xchg
and
int
lahf
sbb
and
sbb
or
nop
leave
test
aaa
adc
imul
inc
insb
ljmp
jmp
sub
cmp
xchg
enter
push
ret
nop
pop
outsl
and
movsl
jae
stos
jnp
fsubl
xor
mov
lds
lods
bound
lods
scas
pop
cmpsl
or
jecxz
mov
push
subb
sub
xchg
cmp
ds
dec
cmp
cmpsb
stos
fcmovu
mov
pop
pop
rorl
lods
les
add
sahf
lods
sbb
jno
daa
jo
fdiv
popa
int
adc
ret
and
add
mov
int
mov
test
pop
sub
cltd
cmp
push
lcall
ja
in
gs
pushf
repnz
sbb
mov
cmp
push
dec
cmc
jne
test
int
mulb
jns
cmpl
repz
xor
pusha
adc
orl
cwtl
cld
jbe
or
daa
add
in
stos
dec
inc
sub
inc
dec
and
inc
rorl
dec
pop
into
movsb
out
mov
test
inc
pop
jns
out
repz
inc
push
mov
hlt
jnp
mov
lret
in
dec
dec
in
or
into
mov
inc
mov
arpl
sbb
push
insb
xlat
ss
mov
xor
lods
icebp
jmp
xchg
mov
test
fbstp
pop
mov
cwtl
dec
movsb
lds
pop
loope
mov
cmp
call
mov
inc
cmovbe
popa
sbb
push
mov
insl
push
in
ljmp
cli
mov
mov
add
test
jmp
mov
add
xor
pop
in
cltd
repz
xchg
mov
mov
fisttpll
clc
cmp
mov
pop
jno
dec
dec
test
xor
jo
push
lret
fwait
sub
inc
xor
mov
mov
outsw
push
cld
call
int3
mov
sub
mov
pop
push
push
adc
dec
xorb
inc
sbb
sbb
jae
fucomip
dec
out
dec
icebp
data16
out
test
repnz
sub
mov
fmuls
mov
mov
sub
insl
mov
ljmp
pusha
lea
in
adc
je
out
fldl
bound
ss
imul
or
dec
cmp
mov
aad
pop
mov
fiadds
in
js
inc
hlt
or
hlt
xchg
lock
pop
gs
shl
test
pop
ret
lret
cld
mov
mov
scas
lcall
data16
mul
adc
push
or
sub
call
mov
add
cmp
add
das
or
pushf
scas
cli
sahf
xchg
sti
aam
xchg
push
pop
mov
les
jmp
pop
push
leave
mov
mov
mov
pushf
sbb
icebp
pusha
sbb
jecxz
inc
rolb
xlat
jge
es
xchg
mov
sub
or
or
push
popa
and
xchg
stos
into
sbb
out
dec
jbe
xor
aad
inc
sti
pop
scas
add
repnz
fwait
test
stos
push
bound
dec
mov
enter
inc
or
aaa
sbb
mov
int
push
sub
cwtl
call
xor
repnz
bound
sub
lret
inc
rorl
cmpsb
stos
inc
and
xor
mov
nop
pop
adc
cmp
xor
push
xchg
jno
fcmovb
pop
or
out
imulb
adc
xlat
mov
aaa
stos
notl
lahf
mov
or
and
in
js,pt
jge
fdivr
ret
sub
sub
fwait
add
enter
lret
jle
jb
repnz
not
into
aaa
out
or
cmpsl
pop
fdiv
push
into
cli
fiadds
add
adc
data16
or
in
adc
bound
sub
sbb
cmp
leave
mov
adc
pop
fwait
pop
mov
out
in
jne
mov
lock
js
stos
aaa
loope
mov
js
pop
into
add
outsb
mov
jmp
out
mov
inc
shlb
dec
ret
clc
add
jnp
je
add
add
pop
rolb
push
jb
cmpsl
popa
cmp
addr16
mov
jnp
sti
and
into
dec
mov
inc
dec
or
pop
add
std
in
adc
sub
add
mov
mov
inc
int3
out
test
mov
xchg
cmp
sbb
adc
push
jbe
add
sbb
sbb
fldcw
or
rcrl
inc
or
mov
sti
shll
push
mov
je
aad
xlat
sbb
jne
mov
test
cltd
mov
mov
arpl
loop
in
sahf
cmp
je
and
sub
cmp
or
jae
and
push
mov
mov
add
hlt
cmpsl
sti
insl
or
jle
xchg
xor
aam
insb
les
lea
loope
dec
negl
into
add
es
test
ret
out
cmpsl
das
mov
pop
enter
ret
mov
inc
shl
rorl
sti
out
xchg
ss
jl
add
aam
test
in
dec
fs
das
enter
lahf
aad
scas
in
cltd
and
dec
enter
das
out
sbb
mov
cmpsl
or
adc
pop
xor
mov
leave
xchg
pop
fldl
mov
hlt
lods
idiv
mov
lret
mov
xor
push
mov
xor
incl
pop
fidivrl
and
adc
xor
jno
pop
jecxz
push
pushf
xchg
xchg
pop
mov
stos
cmp
push
mov
leave
mov
push
ret
hlt
ljmp
mov
int3
repnz
jecxz
pop
mov
jmp
xor
or
add
lcall
and
test
inc
cwtl
std
fwait
push
stos
or
int
shl
adc
mov
lds
ss
ljmp
adc
scas
sub
sub
mov
imul
adc
mov
test
dec
inc
lock
lods
lods
stc
or
cmp
in
push
sahf
popf
movsl
inc
push
sahf
insl
sbb
pop
jnp
dec
adc
pop
and
movsl
addr16
hlt
cmp
in
shll
sub
sbb
stos
nop
out
pop
int3
imul
add
mov
rolb
cld
movsb
sbb
push
adc
sub
lret
mov
test
mov
or
test
outsb
sub
or
push
or
out
jne
fnsave
push
lcall
lds
pop
fidivl
mov
ret
mov
inc
pop
add
scas
mov
xor
mov
scas
lock
or
movsb
cli
fdivl
add
inc
mov
dec
rcll
imul
in
jae,pn
jo
clc
mov
fstl
daa
mov
mov
add
lcall
xchg
fiaddl
xchg
push
popf
icebp
cld
xchg
scas
sub
in
faddl
jnp
lcall
out
sbb
stos
loopne
mov
sub
cmp
in
pop
adc
cwtl
xlat
out
decb
clc
or
mov
bound
int3
adc
sub
pop
test
or
fs
shll
push
jge
mov
jp
stos
sub
mov
rclb
mov
out
lds
sbb
fiadds
push
dec
std
adc
push
xchg
lds
jae
out
push
in
scas
mov
adc
mov
rclb
loopne
inc
popf
push
sub
xor
sub
cmp
push
cltd
or
xchg
inc
lret
mov
xchg
xor
jge
xchg
jmp
cmp
lods
pushf
add
adc
enter
mov
dec
xchg
dec
clc
fdivr
out
sub
call
push
jno
lock
or
jne
imul
mov
jge
mov
ret
sbb
mov
add
inc
and
xor
mov
call
std
pop
lret
imul
push
pop
push
and
sahf
mov
xchg
stos
mov
test
sub
push
mov
sub
mov
test
dec
rcrl
lcall
push
imul
out
sub
scas
enter
ja
lahf
push
jne
add
outsl
js
push
pop
mov
outsl
pop
icebp
adc
aad
leave
xchg
aam
std
pop
stos
stc
xor
cmp
dec
jnp
dec
dec
enter
rolb
out
sub
fwait
sub
icebp
or
mov
mov
or
push
loopne
and
push
fldl
mov
mov
inc
jnp
sub
mov
or
mov
repnz
push
and
jns
cld
dec
sbb
cmovp
lds
fsubl
cmp
mov
shll
sub
pushf
icebp
mov
movsl
test
jecxz
or
shll
inc
and
divl
mov
and
or
lods
dec
push
inc
les
xor
sbb
add
repz
imul
arpl
aas
in
lock
adc
dec
cmp
je
rcr
insl
aaa
mov
inc
roll
enter
mov
jle
xchg
xchg
pop
jno
sbb
daa
pop
xor
jnp
mov
xor
pop
sbb
jp
xchg
das
mov
xor
pop
loop
js
subb
mov
mov
ljmp
mov
mov
dec
push
clc
jmp
ja
loope
aas
cmp
mov
pop
pop
sub
jnp
imul
mov
and
nop
fcmovu
in
lahf
sub
sahf
jge
mov
add
outsl
sub
inc
mov
and
repz
mov
add
sub
enter
mov
or
inc
add
xor
out
mov
jl
dec
out
mov
dec
or
xchg
xchg
daa
cli
aam
or
int3
mov
inc
xlat
inc
dec
xchg
in
in
and
cmp
inc
xor
fmuls
icebp
cs
test
sub
push
mov
int3
lods
inc
adc
notb
add
mov
push
adc
sbb
daa
frstor
push
inc
or
jnp
push
xchg
into
addr16
mov
add
mov
inc
cli
sbb
mov
dec
cmp
bound
cltd
xchg
testb
mov
lret
sti
sbb
mov
cmpsb
clc
xlat
loope
inc
sbb
cli
call
icebp
xor
jge
popa
ret
clc
pop
jbe
int
stos
mov
inc
mov
lods
mov
xchg
sbb
stc
cmp
push
adc
mov
push
fucom
aaa
xor
and
mov
rorb
in
dec
add
bound
xor
cs
mov
mov
pop
sbb
repnz
add
fimull
cli
and
dec
out
outsl
sub
mov
mov
mov
rdmsr
cmp
jo
and
pop
sbb
add
cltd
adc
xor
or
push
addr16
push
mov
stos
les
or
cmp
or
cwtl
test
out
in
adc
insl
inc
test
jnp
mov
sub
iret
lods
dec
push
insl
mov
mov
and
xor
xchg
test
add
sub
dec
adc
pop
mov
out
mov
xor
cmp
ret
xchg
add
mov
popa
int3
mov
scas
pop
movsl
jb
inc
push
cltd
jo
or
sub
movsl
jmp
fdivrs
xorb
mov
mov
jmp
push
inc
xor
imul
push
xchg
dec
or
or
mov
andl
xchg
cmpsb
arpl
fxch
or
push
inc
addl
imul
test
push
call
jge
sub
xor
xor
ljmp
inc
fnsave
pop
push
inc
push
insb
xchg
pop
test
jbe
icebp
sub
mov
xchg
or
ja
les
add
imul
pop
rclb
test
les
xchg
test
mov
push
sti
or
popa
sbb
loop
jmp
sbb
ret
xchg
cld
test
jl
fcompl
cmp
xchg
mov
push
movsb
movsl
adc
rcl
ljmp
inc
sub
sub
jb
adc
mov
xchg
cmc
cld
jge
fcompl
adc
pop
lods
mov
inc
dec
xor
idivb
test
js
imul
and
mov
lret
lahf
ret
inc
rolb
xor
loope
ja
jp
out
push
popa
xor
xor
aaa
mov
cmp
dec
jbe
adc
or
pop
nop
cltd
inc
rcrb
clc
fsubl
xor
xor
dec
int
xchg
mov
jbe
add
in
and
mov
js
pop
rcrl
sbb
push
ss
xor
and
jae
fldt
xchg
mov
inc
rcrl
cmp
fs
pop
mov
out
adc
arpl
lret
xchg
xchg
mov
inc
aaa
xor
push
mov
add
ret
test
sbb
pop
fimull
mov
jo
xor
xchg
loop
stc
push
lahf
test
push
push
xchg
mov
test
inc
add
jg
test
rcll
loop
cs
fcompl
das
outsb
in
jmp
push
jp
dec
xchg
ljmp
dec
movsl
fwait
and
inc
lahf
jmp
jge
push
test
jecxz
xor
scas
out
icebp
pop
push
mov
or
mov
adc
push
and
fidivs
mov
sbb
scas
mov
jno
insb
xor
lock
into
sub
push
sub
xor
push
dec
jnp
xor
dec
pop
smsw
jnp
mov
into
stos
cmp
in
mov
pop
mov
nop
icebp
mov
ds
data16
outsl
and
sbb
fs
dec
sbbl
mov
xchg
movsl
les
lock
xchg
push
mov
bound
xor
dec
and
test
fstl
inc
enter
testl
add
mov
std
adc
lret
popa
bound
xchg
push
pop
inc
or
cs
inc
jmp
push
cs
jns
and
popa
xchg
xchg
leave
sub
inc
lock
jb
cmpsl
and
xchg
mov
and
in
xor
push
gs
leave
and
inc
mov
jne
ds
iret
es
dec
test
xchg
jae
das
fxch
stos
pop
or
adcb
in
ffree
lcall
frstor
shr
adc
arpl
xchg
in
add
mov
lret
je
jns
dec
cmpsl
daa
out
pop
clc
mul
lcall
insl
xchg
pop
es
xchg
pop
mov
pop
pop
shl
sbb
mov
pop
push
or
sbb
inc
mov
fcoml
bound
jae
nop
inc
fistl
adcl
pusha
pop
cmp
cmp
sbb
aad
cmp
clc
pop
dec
insb
or
xchg
mov
lock
dec
push
mov
aas
mov
ss
sbb
dec
movsl
popa
sbb
add
aaa
or
cmp
test
cmp
mov
ss
jo
xor
movsl
sub
mov
mov
jp
arpl
cmp
imul
sub
stc
pop
jl
jbe
popa
cmp
fdivs
fisttpl
test
mov
cmp
loopne
mov
push
test
int
mov
daa
fildl
jp
and
add
mov
xor
or
rclb
or
and
cmp
bound
outsl
js
add
sbb
clc
pop
xchg
xchg
push
pop
dec
pop
sahf
movsl
sub
or
insb
mov
add
out
fmull
rcll
aas
movsl
push
stc
dec
sbb
imul
push
push
iret
sbb
rorb
or
mov
fwait
inc
mov
mov
xchg
jmp
mov
iret
popa
sbb
pop
add
fidivrl
push
jmp
in
cmpsb
popa
mov
aad
andb
push
arpl
push
cli
test
scas
rcrb
das
test
sub
add
int3
mov
cmp
push
loop
mov
mov
sbb
cmp
sti
lcall
pop
add
sbb
lret
ja
cltd
scas
loop
psubw
arpl
push
adc
xchg
divb
div
xchg
aas
add
xor
repnz
dec
shrl
cmc
xchg
ret
dec
mov
loopne
call
les
enter
add
xchg
mov
lds
mov
jle
bound
fmul
in
cmp
sbb
or
mov
out
push
popf
dec
inc
jne
lock
push
xor
arpl
add
int
filds
mov
lcall
jo
movsb
mov
pop
das
sbb
movsl
adc
fidivrs
mov
fmuls
sub
stos
ds
mov
push
in
flds
jmp
addr16
shlb
inc
das
or
scas
cs
jbe
sbb
xchg
mov
dec
movsl
cmp
or
add
ret
out
and
xchg
jo
sbb
pop
jns
sbb
movsl
addb
loopne
mov
in
inc
aaa
fs
jae
add
mov
or
mov
dec
rolb
lret
xorl
call
divb
mov
test
dec
mov
sti
inc
rorb
or
loope
ret
add
or
mov
clc
adc
fdiv
shll
mov
jge
les
hlt
push
hlt
sbb
mov
out
xchg
or
dec
imul
popf
test
imul
jnp
push
push
ret
lret
and
lods
jge
stos
aaa
aam
mov
dec
lcall
push
loop
loop
inc
sub
les
dec
add
fidivs
mov
cmpsl
leave
and
data16
mov
mov
movsb
cmovno
sub
cmc
xor
mov
mov
mov
dec
aam
scas
push
call
inc
inc
loop
dec
lret
jge
fadd
xor
loopne
pop
xor
rorl
cs
jmp
sbb
and
mov
push
mov
movsl
movsb
push
sub
jns
push
mov
sbb
sub
adc
sbb
stos
std
jl
mov
mov
insb
clc
cmpsb
push
and
cmp
sbb
push
mov
dec
fdivrl
cltd
xor
outsb
xor
test
div
hlt
push
aam
das
into
hlt
xchg
push
pop
adc
aaa
cmp
push
lock
cwtl
inc
pop
mov
fdiv
xor
cmpsl
jbe
mov
stos
mov
in
arpl
inc
jmp
cld
test
jb
repz
adc
sbb
sub
or
xchg
mov
rol
and
xchg
int3
sti
cmp
fistpl
xor
std
movsb
sub
faddl
cs
sbb
bnd
clc
lret
frstor
ror
stc
mov
fcompl
sub
or
sbb
push
pop
jmp
sti
fbld
mov
push
cmpsl
or
inc
cmp
icebp
outsl
dec
scas
ret
jnp
mov
jae
mov
std
xor
mov
or
and
out
cmpsb
aam
lock
sub
adc
mov
leave
popf
nop
mov
aas
popf
cmp
aam
hlt
rolb
test
scas
roll
cmp
btr
adc
sti
lret
mov
mov
fsts
lock
push
adc
pushf
xchg
ret
mov
stc
cltd
in
mov
test
es
xor
sub
into
sub
mov
sbb
cmp
sub
lret
sub
inc
jmp
or
pop
mov
adc
mov
pop
ficoms
xor
lds
mov
xchg
andnps
push
movsb
sub
mov
fwait
add
mov
mov
add
cs
subl
insb
mov
jns
xor
les
adc
pavgw
icebp
rcr
ret
mov
inc
jge
jecxz
push
test
mov
mov
imul
jecxz
push
mov
add
push
nop
js
lock
inc
sbb
cmp
adc
push
sub
mov
pop
mov
aad
pushf
imull
lret
lods
mov
movsl
pop
push
mov
ljmp
mov
arpl
mov
cwtl
adc
icebp
cmp
or
sub
jmp
pop
and
push
es
leave
daa
adc
fistps
push
sbbl
roll
aaa
fadd
lods
add
mov
mov
mov
jecxz
outsl
xor
push
add
ss
push
add
cmc
and
mov
test
fs
and
pusha
mov
addb
mov
add
rorl
cmp
fdivl
nop
mov
scas
aas
imul
out
sbb
push
enter
ret
jb
std
movsb
sbb
movsl
mov
int
jbe
sbb
jg
or
mov
test
xor
mov
xor
in
or
fdivrl
lret
xchg
ficomps
aam
lcall
cmp
imul
insb
mov
xor
dec
jnp
ret
mov
insl
ss
stc
and
cmc
dec
mov
test
pop
movsl
and
lea
incl
mov
xor
mov
rdpmc
inc
adc
orb
jns
fwait
add
push
dec
cli
aas
repnz
rcrl
xchg
mov
adc
sub
xor
sahf
and
dec
gs
xor
lods
push
pop
loope
jnp
fs
mov
sti
out
incl
push
sub
fists
push
mov
pop
in
je
dec
fwait
adc
std
jo
out
cmp
fwait
nop
mov
outsl
lock
jge
cli
inc
sbbb
jp
push
cs
clc
stos
cmpsb
sub
in
popf
sahf
pop
pop
stos
das
sbb
inc
rcr
addl
in
pop
or
mov
loopne
sub
xchg
cld
adc
pop
adc
fdivs
aaa
and
push
or
mov
mov
lahf
jne
mov
fwait
push
mov
mov
fimuls
push
mov
bound
push
fabs
xchg
mov
cmp
popa
adc
call
in
pop
jae
cmpsb
mov
mov
lea
jb
lret
lahf
pop
xchg
and
mov
pop
shl
loope
mov
cwtl
lret
and
sbb
icebp
xchg
scas
sahf
mov
std
in
out
outsl
jl
ret
js
test
or
or
pop
adc
aaa
bound
and
push
arpl
in
adc
mov
clc
ja
cmp
rcrb
and
jae
xchg
fwait
iret
mov
loop
aam
cmp
mov
inc
xchg
lret
out
jb
and
xchg
push
xchg
sub
jns
decl
movsl
rcl
adc
imulb
lea
sarb
jl
sub
pop
repnz
sbb
insb
scas
push
sbb
std
fsubrs
lcall
popf
pusha
or
add
or
mov
mov
test
add
push
mov
push
mov
popf
cmp
test
cmp
mov
pushf
js
dec
aaa
adc
sbb
mov
fmull
dec
adc
insl
pop
sbb
jo
hlt
mov
fldenv
push
mov
fwait
mov
push
addl
mov
lahf
iret
mov
xchg
shlb
sbbb
jb
pusha
fidivrs
cmp
jbe
xor
mov
mov
loopne
fcoml
inc
adc
inc
pop
lret
test
iret
enter
in
ja
inc
mov
cmp
fldt
cmp
mov
mov
and
xchg
out
les
mov
jno
cld
or
cmp
arpl
mov
xchg
filds
xchg
out
add
test
and
out
xor
loopne
test
sbb
adc
rcl
dec
mov
and
and
or
flds
hlt
mov
repz
loop
add
adc
push
lock
sbb
lcall
enter
cmpb
and
cmpsb
xor
sub
xor
xchg
mov
push
add
sarb
adc
fidivl
outsb
xchg
pop
jg
stos
inc
xchg
int3
lahf
xchg
jl
push
stos
sbb
bound
mov
fwait
push
adc
dec
cmp
sbb
inc
push
dec
jo
fdiv
dec
mov
push
push
jno
out
or
dec
rcll
shlb
lods
lret
jo
push
adc
lds
add
out
and
push
loop
add
jmp
add
and
mov
push
cmp
add
push
movsl
pop
out
push
ja
cld
fists
mulb
jns
push
pop
jb
ss
mov
insl
in
mov
xor
shll
ret
sbbl
mov
pop
arpl
aaa
cmpsb
mov
inc
or
sub
and
orl
imul
xchg
mov
mov
je
popa
fisubrs
dec
pusha
cs
or
jmp
mov
ret
fnstsw
jle
movsl
adc
push
jp
jmp
xchg
shrb
dec
and
out
pushf
mov
aam
js
push
sbb
loop
les
or
out
arpl
jmp
xchg
sub
sub
ljmp
xchg
jae
ret
popa
push
rorb
xchg
ds
fdivr
fsubrl
shl
push
pop
pop
sub
dec
fldcw
testl
fisubrl
movsb
jmp
fisttpll
mov
es
or
in
in
dec
xor
cmpsb
imul
fadds
adc
sub
lock
lock
sub
add
pop
stos
repz
mov
outsl
repz
das
inc
mov
out
add
or
jmp
mov
or
sbb
dec
sbb
add
test
fcmovbe
mov
mov
icebp
pop
cmpsb
shlb
bound
lcall
out
adc
lret
xor
xchg
lahf
add
es
xor
popf
or
mov
sbb
fbstp
mov
sbb
clc
cmp
or
gs
sahf
jge
sbb
mov
xor
lock
pop
jae
clc
mov
in
hlt
movsb
test
jo
mov
xchg
lock
inc
sub
dec
fsubs
cli
imul
fstl
cmpl
xor
push
mov
push
xor
sub
outsl
dec
mov
mov
adc
xchg
ds
mov
add
shlb
sub
xchg
subb
inc
fcompl
shll
notl
mov
jne
imul
out
cli
push
adcb
rcrb
add
mov
sub
lds
push
push
push
cmc
mov
lcall
mov
lret
and
jecxz
mov
jg
xchg
fwait
test
push
jb
jg
inc
inc
pop
sbb
sub
push
xchg
jns
xor
int
xchg
sbb
out
and
lea
pop
adc
and
sarb
cmp
push
sub
std
jbe
jmp
pushl
ficoms
or
std
sbbl
js
fisttpll
and
popa
xor
mov
mov
test
rcll
pop
or
es
mov
aaa
out
or
mov
adc
aad
push
fistps
adc
mov
mov
in
push
cmc
mov
inc
mov
cld
lock
out
xchg
mov
push
lds
gs
xor
icebp
mov
loope
sub
xor
xor
inc
push
cwtl
mov
jo
push
ljmp
pop
inc
dec
dec
and
fs
xor
test
lock
jo
xor
add
and
test
xchg
dec
mov
jp
outsl
mov
cwtl
mov
pop
fwait
mov
lds
add
jecxz
cmp
add
or
or
ret
cmc
rolb
mov
call
pop
daa
add
aaa
jmp
pop
cli
dec
aam
call
mov
sub
shlb
test
bound
jno
arpl
mov
mov
dec
jne
ds
add
xchg
push
test
stc
inc
setg
xor
mov
inc
sub
pushf
cltd
movsb
xor
into
adc
lea
scas
std
dec
shr
mov
ret
mov
testb
data16
xchg
jo
and
notb
xchg
adc
or
stos
push
iret
sub
jmp
pop
pop
bound
pop
imul
cmp
jl
rcrb
sbb
sbb
adcl
lods
decl
cmpsb
das
fidivl
pop
pop
jg
sub
sbb
add
icebp
jae
aam
jmp
scas
xlat
daa
and
fstl
or
icebp
inc
inc
ljmp
jbe
mov
fbstp
push
mov
stos
cmp
mov
mov
mov
imul
dec
cmp
push
mov
cmp
sub
jl
lods
insb
std
or
pop
lahf
jo
adc
cmp
jo
idiv
dec
push
mov
repz
movl
sub
mov
lcall
cmp
inc
cli
inc
push
das
cmp
popf
mov
mov
sub
push
and
sub
inc
cmp
sbb
sbb
inc
test
jno
arpl
and
mov
adcl
jmp
loopne
roll
and
pushf
sbb
mov
and
outsl
mov
movsl
sbb
jb
pop
mov
les
movsb
or
cwtl
cld
rorb
sub
sbb
adc
jae
iret
test
les
xlat
and
mov
int
fldcw
and
push
shrd
mov
mov
push
dec
inc
mov
add
int3
or
add
sarl
mov
test
fcoms
imul
idivl
mov
aam
testl
mov
subb
jns
jmp
dec
pop
add
pop
or
std
adc
jl
push
test
mov
bound
dec
movsb
sub
sbb
int
mov
jp
imul
mov
and
in
adc
lods
test
xor
ss
out
inc
imul
fimuls
enter
jl
cmp
jne
add
into
xchg
fiadds
cmp
cltd
out
xorl
mov
popa
iret
add
push
inc
push
data16
jo
outsb
aaa
lret
ja
testl
mov
xchg
jno
xor
dec
call
xchg
pop
jg
xchg
cwtl
mov
sbb
daa
sub
lock
fdivrs
xchg
imul
dec
out
lret
or
xlat
fisttps
and
popa
jns
dec
add
stc
in
jecxz
and
lahf
sbb
idivb
mov
test
sti
cmp
imul
adc
push
mov
mov
fdivl
jbe
outsb
fisubrl
sub
loope
cs
mov
loopne
jo
loope
lods
jns
enter
mov
call
xlat
and
sbb
fdivr
stc
adc
sbb
cmpb
mov
xchg
mov
mov
jbe
in
data16
xchg
popf
imul
cmp
xor
mov
add
outsb
arpl
notl
cs
jge
xor
dec
adc
xchg
in
lea
sahf
test
leave
push
dec
mov
les
xchg
or
sbb
int
test
faddl
repnz
pop
int3
shrl
or
imul
pop
xchg
es
mov
pop
xchg
lods
jae
sub
push
and
push
inc
lret
push
push
mov
in
subl
cmp
test
mov
pushl
and
push
add
xchg
lret
mov
jecxz
mov
push
test
add
out
mov
inc
fidivrl
and
xor
xchg
movsl
mov
xchg
or
cmp
pop
cli
cmp
cwtl
fstl
adc
cs
jns
mov
lds
pop
xchg
ljmp
lds
xchg
test
mov
lahf
mov
nop
lea
fwait
mov
mov
push
xor
and
xchg
pop
je
cli
out
test
aas
ret
inc
push
xchg
js
ror
push
pushf
or
and
fldenv
gs
or
fcoms
adc
js
cli
mov
scas
cmp
adc
inc
sbb
loope
mov
push
lea
hlt
push
mov
out
xchg
push
popf
sbb
xchg
flds
mov
mov
in
mov
test
gs
js
scas
dec
lds
aam
pop
jns
or
fidivl
rcll
stc
xchg
out
push
fcoml
mov
in
dec
lods
pop
aas
xlat
arpl
fldenv
sarb
in
nop
mov
int
ficomps
imul
out
cmp
xchg
jnp
movsl
sbb
sub
sub
pop
dec
lds
rcll
jbe
inc
jnp
dec
jmp
out
testl
xchg
ds
jmp
xchg
mov
cli
roll
push
inc
push
aad
in
in
xchg
xchg
pop
testb
arpl
push
sub
pop
adc
in
adc
jle
mov
out
loop
fcoml
js
push
xchg
out
lods
mov
mov
sub
lds
cmpsl
test
dec
sub
ss
xchg
jg
inc
out
inc
sti
shlb
add
shll
push
adc
pop
cmp
mov
rol
inc
push
jp
dec
add
and
hlt
mov
aaa
idivb
aaa
jl
sbb
insl
negb
mov
or
leave
inc
mov
pushf
mov
aas
inc
fadds
jmp
test
ss
mov
push
ret
push
push
les
jb
fimull
pop
push
cltd
divl
bound
fidivrl
sub
das
rorl
fidivrs
imul
dec
and
outsl
mov
jnp
pop
sahf
addr16
xchg
add
cmp
clc
popa
mov
rcll
ljmp
mov
test
mov
mov
xlat
std
xor
xor
enter
push
int
pop
fwait
popa
cmp
rorl
stc
int3
inc
xlat
xchg
mov
ds
adcb
test
fidivs
out
movsb
scas
call
mov
arpl
inc
nop
push
jb
rorb
xor
mov
rcrb
xchg
mov
jno
fwait
adc
fcomp
or
lret
push
pop
dec
sbbl
std
lds
mov
in
push
ja
cmp
arpl
call
sbb
jnp
sub
and
sbb
ss
adc
push
popa
dec
xor
out
das
or
adc
mov
cmpsb
sarb
shlb
daa
popa
adcl
js
enter
dec
and
lods
push
stos
fdivrs
and
hlt
in
xor
xor
outsb
jmp
add
xchg
scas
test
int3
jno
pop
andb
ret
cmpsb
pop
xlat
imul
pop
ljmp
jl
lret
lret
gs
inc
jg
incl
push
xor
scas
sub
sti
in
mov
lea
mov
ljmp
lret
xor
je
sbb
bound
lods
test
xor
dec
test
ja
mov
or
sub
shl
stc
xor
push
cmpl
ret
sahf
out
sbb
loopne
sbb
movsb
shlb
pop
out
mov
inc
mov
cmp
popf
jbe
cmpsl
pop
sbb
push
fiadds
ljmp
movsb
mov
fadd
fwait
and
mov
inc
fistl
pop
clc
into
jecxz
dec
jecxz
call
cmp
dec
xor
movsb
js
xlat
call
dec
sbb
pop
pop
pop
inc
inc
in
shrb
test
mov
popa
in
push
push
lret
dec
mov
stc
outsl
fimuls
aaa
repnz
and
bound
sub
push
imul
les
push
dec
test
sub
loopw
or
inc
cmpl
sub
adc
cmp
lret
add
scas
push
inc
sbb
test
or
scas
inc
test
mov
pop
mov
popf
xchg
mov
adc
and
mov
cld
jnp
test
xor
push
int3
mov
add
bound
fstpl
inc
lahf
cmp
or
negb
add
xchg
xchg
repnz
sub
mov
add
jns,pt
pop
sub
add
and
insb
jb
mov
cmp
icebp
jle
std
mov
shll
mov
rep
sbb
add
mov
pop
or
cwtl
rclb
push
jg
movsb
call
jp
inc
or
jnp
repnz
xor
inc
stos
fs
mov
mov
sarb
mov
push
inc
or
adc
mov
aaa
test
mov
repz
popf
sbb
leave
inc
mov
xchg
xchg
or
jnp
ja
pop
ret
cmpsb
dec
mov
push
sub
push
add
lret
add
mov
jbe
int
ds
add
xor
mov
sub
lcall
push
sub
fwait
pop
push
rcrb
fisttpll
pop
mov
lcall
pushf
mov
int
loope
loope
pop
cwtl
xor
daa
cli
push
push
mov
fprem
frstor
mov
cmp
xor
mov
mov
mov
aas
call
movb
into
push
sahf
inc
ja
jle
xchg
xchg
push
adc
pusha
mov
imul
arpl
sub
and
jnp
push
adc
jnp
add
push
stos
rcrl
add
dec
adc
xor
adc
push
imul
mov
push
and
sbb
out
mov
int
ja
xlat
pop
sbb
dec
push
push
cmp
rorb
aaa
pop
cmp
lcall
jne
push
test
push
xchg
mov
sub
inc
mov
jl
outsl
mov
aad
jmp
ljmp
addr16
stos
cmpsl
dec
iret
orl
sub
dec
filds
adc
imul
loope
testl
fists
push
dec
xlat
lahf
nop
outsb
pop
dec
in
push
sub
outsb
mov
mov
or
pop
cmp
mov
mov
les
movsl
cmp
fnstenv
jbe
pop
lret
dec
and
fcoms
addr16
xor
pop
xchg
aas
bound
sbb
sub
adcl
mov
and
in
mov
jg
pop
dec
nop
mov
jg
imul
pop
iret
xchg
testb
lcall
les
mov
jne,pt
cmp
mov
imul
adc
nop
push
fdivr
cmpsl
mov
inc
imul
xor
lds
mov
out
int
pop
out
dec
bound
ja
das
mov
loopne
divb
adc
test
inc
out
inc
adc
mov
loop
js
mov
test
orb
or
ja
out
popf
addr16
test
rolb
adc
pop
mov
pop
mov
and
aas
cmp
addb
outsl
and
mov
stc
push
jecxz
imul
and
cld
xlat
cmp
jnp
adc
sbb
xlat
xlat
push
clc
inc
imul
xlat
andb
pop
dec
jp
cmp
testl
push
adc
in
int3
fs
xchg
adc
xor
cmp
cld
in
xchg
int3
arpl
mov
or
mov
cmpsl
push
int
mov
inc
lcall
pop
cmp
push
jae
pusha
or
push
lds
lods
in
addr16
adc
adc
roll
jne
cmp
cmp
xchg
mov
bound
fsub
popf
dec
and
dec
xlat
mov
leave
xchg
inc
stos
inc
sbb
mov
mov
leave
push
hlt
and
inc
outsl
or
add
aad
sti
shlb
dec
xor
cmc
in
adc
and
cmpsb
mov
stos
mov
test
lret
jne
mov
fwait
shr
lds
pop
mov
and
pop
cmpsl
icebp
dec
jge
mov
cld
cmp
sbb
dec
dec
fucom
and
mov
adc
and
int
mov
rcl
loope
xor
pop
mov
stc
and
roll
and
in
in
xor
popl
lcall
js
sbb
add
jo
fwait
dec
xchg
xchg
or
imul
inc
cltd
jns
mov
mov
dec
fidivs
xchg
sbb
add
and
in
add
lret
add
mov
aas
andb
movzbl
mov
jb
pop
mov
roll
mulb
xchg
ljmp
js
mov
push
loopne
cmp
jmp
in
sbb
stc
bound
mov
movsl
push
frstor
rcrl
pop
iret
stos
mov
mov
cltd
lcall
test
xchg
sub
notl
mov
pusha
inc
inc
push
sbb
jnp
xchg
cmp
fimull
xlat
mov
sub
jecxz
daa
shlb
pop
jo
lahf
out
mov
test
shll
popf
sbb
mov
les
push
dec
clc
test
or
xchg
cmp
xor
dec
pop
or
cli
gs
ljmp
fnstcw
arpl
cltd
pop
js
cli
inc
xchg
mov
sub
int3
jb
pop
xchg
fstps
shlb
idivb
sbb
mov
cld
push
scas
stc
dec
cmp
pop
cmp
jl
mov
outsl
mov
add
inc
fimuls
cld
stos
sub
sub
or
adc
mov
xchg
push
lret
sbb
jno
pushf
add
and
arpl
and
mov
jl
mov
mov
jle
jnp
shrl
push
xor
lret
insw
shll
mov
inc
sti
mov
arpl
dec
xor
or
cmp
enter
pop
and
mov
fnop
shll
movsb
call
sbb
ffree
and
arpl
dec
jp
stc
enter
and
test
sbb
mov
cmp
push
mov
push
xor
mov
pop
ljmp
and
mov
mov
adc
jp
cmpsl
cmp
push
pop
adc
pop
notb
sub
push
adc
orb
divb
test
outsb
inc
sbbb
in
push
add
inc
push
mov
ljmp
cli
outsb
in
xchg
ds
daa
iret
xchg
mov
testb
mov
pop
ja
popa
sbb
gs
push
pop
xchg
mov
cwtl
icebp
lds
sbb
dec
jns
adc
jmp
mov
das
scas
jmp
push
clc
xlat
pushf
aas
add
sbb
jb
outsb
insb
cli
mov
cli
pop
pop
pop
sbb
add
das
add
and
dec
clc
into
leave
outsl
popf
adc
out
push
cmp
subb
in
dec
rorb
or
xor
cmp
mov
adc
inc
hlt
adc
xchg
fs
out
push
and
pop
addl
lock
outsb
push
loopne
pop
cs
jns
mov
into
sub
or
pop
mov
sti
shll
cmpsb
and
mov
lea
arpl
pop
cmp
aam
xchg
jns
decw
xchg
bound
es
imul
dec
cmp
pop
adc
xchg
test
leave
call
dec
popl
and
adc
sub
out
pop
adc
loopne
jp
scas
xchg
aaa
push
imul
xlat
call
mov
sti
or
lods
ret
ret
cmp
jae
pop
pop
cmp
adc
shl
movsl
loop
in
popf
fisttps
jnp
ljmp
pop
int3
push
pop
dec
adc
jg
shlb
mov
xchg
mov
mov
rcll
decl
mov
sub
popa
dec
inc
pop
dec
ret
and
xchg
mov
out
int3
std
adc
cmp
mov
dec
aam
cs
inc
imul
and
push
mov
pop
ss
stos
mov
mov
pushl
cli
adc
pop
icebp
pusha
mov
push
push
sub
mov
pop
add
popa
idivl
mov
or
pop
cmpsb
stos
scas
and
out
stos
push
dec
ss
adc
clc
mov
call
xor
inc
xchg
or
into
mov
jb
outsb
or
mov
inc
cmp
enter
in
enter
adc
lret
pop
jmp
and
dec
cmc
mov
sub
stc
add
dec
test
jg
xchg
mov
mov
insl
cmpsb
add
pop
outsl
xor
dec
test
sbb
adc
mov
xor
ficoml
hlt
fsubrs
mov
lahf
xor
mov
jg
dec
xor
sub
fdivr
xor
mov
insb
mov
inc
pop
lock
inc
mov
mov
jmp
loope
push
rol
mov
stc
scas
fisubs
roll
lea
or
iret
mov
ja
mov
test
mov
xchg
int3
or
rcll
bts
repnz
inc
and
lods
loop
pop
fldpi
ss
negb
movsb
fsubrl
push
or
push
imul
js
mov
sbb
inc
adc
add
jae
sub
lea
iret
pop
cmp
mov
mov
sub
jmp
mov
clc
sub
pop
movsb
lcall
jmpw
jle
jb
sbb
sub
jnp
clc
mov
loope
out
inc
dec
test
idivb
push
addr16
xor
in
mov
jg
clc
xchg
push
pop
subb
stos
jecxz
icebp
testl
iret
mov
or
rcr
xchg
flds
and
jae
stos
pop
popf
push
dec
mov
out
jmp
sahf
pop
push
in
shlb
out
dec
out
loopne
inc
lea
and
iret
jnp
or
int
sbb
cwtl
jno
adc
or
lahf
pop
ret
repz
loopne
mov
adc
jb
mov
dec
decl
lea
push
fistps
sbb
xchg
mov
loope
add
and
mov
inc
adc
movsb
xorb
mov
mov
inc
das
lods
aaa
in
fs
cmp
es
xor
pop
loop
test
mov
pushf
jo
bound
mov
test
lods
ja
mov
andb
xchg
pop
sub
and
inc
jl
insb
aam
popf
aaa
push
stc
mov
mov
xchg
mov
adc
adc
xor
mov
es
and
push
cld
adc
jecxz
and
jb
iret
push
pop
call
dec
adc
mov
inc
outsl
hlt
mov
or
jmp
add
je
insb
repz
and
fcoml
out
pop
push
es
mov
rcr
add
xor
scas
and
jae
and
hlt
lods
adc
inc
push
mov
imul
test
mov
test
ret
in
js
out
xor
jmp
mov
pop
pop
mov
mov
cmp
sub
and
lock
and
adc
xor
push
das
cli
dec
shrd
addb
push
xlat
and
xchg
jge
test
lds
sub
cmpl
maxps
mov
fsubl
pushf
mov
out
mov
lods
mov
push
mov
xlat
imull
mov
int
mov
inc
mov
cmp
mov
in
rclb
or
pop
add
loopne
xchg
xor
mov
add
mov
aaa
mov
jmp
adc
imul
pop
add
nop
cmp
idiv
and
xorl
add
mov
add
repz
movsl
xor
and
mov
in
daa
imul
bound
lret
mov
aaa
call
mov
sub
in
movsb
test
iret
dec
xchg
je
cmp
push
out
test
mov
push
sbb
gs
fisubl
sbb
cli
mov
jae
jne
aam
pop
fwait
ds
test
add
mov
gs
xor
inc
mov
gs
dec
or
pusha
mov
xchg
popf
pop
or
es
or
sbb
mov
mov
out
pop
bound
popa
mov
jno
mov
cs
ja
dec
dec
lods
adc
jne
mov
inc
je
jp
xchg
mov
or
ljmp
lret
push
outsl
and
sarl
adc
hlt
xor
shr
xchg
ffreep
adc
add
aaa
sub
popf
pop
into
dec
jo
cli
outsb
mov
xchg
xor
jle
dec
inc
inc
std
push
cmp
dec
jl
push
pop
sub
xor
sti
mov
cwtl
scas
sbb
jecxz
movsl
push
int
sub
cs
jnp
fcomps
jg
adc
adc
push
hlt
pop
pop
std
add
jmp
mov
in
sti
xchg
or
fcoml
cltd
sbb
push
cltd
add
xchg
lea
pop
pop
sahf
int3
pop
add
lock
sti
stc
and
stc
sbb
inc
insl
imul
xorl
xor
dec
xchg
xlat
dec
lods
push
in
std
outsb
inc
shll
sbb
cmpsb
xor
aas
loopne
lcall
clc
xrelease
movsl
mov
pop
mov
jb
adc
fsubl
jo
add
mov
dec
ret
out
inc
and
test
adc
jg
lret
stc
add
idivl
push
adcb
in
sbb
andl
ret
jne
aas
mov
sub
test
imul
cmp
push
mov
pusha
js
xor
xchg
cmp
out
push
adc
xchg
sahf
call
and
mov
inc
mov
sub
jbe
jecxz
mov
mov
loop
cld
pop
icebp
int
dec
or
mov
sub
cmc
test
je
push
xchg
pop
jecxz
lret
xchg
bound
je
popf
shl
jo
lcall
and
and
inc
pop
bound
int
flds
stos
and
push
out
push
mov
mov
jge
jnp
pop
sbb
mov
add
jl
add
aad
imul
cmp
ljmp
mov
push
ljmp
jecxz
shl
mov
jmp
mov
popa
mov
mov
dec
filds
xchg
outsl
imul
add
cmp
imul
jmp
jmp
dec
pop
inc
loope
pop
cwtl
and
mov
push
popf
je
stc
jne
add
jp
into
insb
push
outsb
clc
sbb
std
push
iret
mov
pop
dec
jecxz
jle
clc
aaa
adc
aad
out
lock
mov
lods
dec
fsubrs
out
push
cld
pusha
sub
jge
dec
sbb
pop
outsl
push
bound
add
mov
lods
adc
loope
xchg
sub
cmp
mov
pop
inc
xor
xor
in
push
push
fisttpl
notl
imul
jnp
scas
fs
lcall
mov
stos
out
or
mov
xor
mov
jge
pop
insb
push
pop
push
jnp
xchg
mov
jle
jnp
add
mov
mov
cmpsl
inc
pop
mov
loop
in
movsb
imul
mov
decb
lds
fs
adc
shll
push
xchg
std
or
jg
fstpl
fistpll
push
dec
clc
mov
jp
divl
and
or
cmp
lahf
inc
paddw
loop
stc
add
test
out
outsb
xchg
push
stc
bound
xorb
dec
inc
out
adc
stos
and
popf
lock
dec
in
cmp
mov
cmp
aaa
inc
push
stos
push
cmp
hlt
jns
or
rclb
test
call
adc
mov
out
or
test
cmp
cmpsl
xchg
xor
loopne
pop
mov
dec
ret
in
data16
cmc
xor
or
shrb
lcall
orl
les
fstl
xchg
sub
mov
sbb
lods
popa
inc
push
dec
pushf
rclb
bound
pusha
movsl
mov
add
inc
xor
je
jmp
mov
dec
or
shll
in
push
repnz
mov
jnp
inc
or
int3
pop
push
xchg
add
imul
repnz
loope
jg
pop
stos
inc
xchg
js
xor
lock
sub
pop
lock
mov
xchg
dec
popf
pop
and
popf
dec
cmpsb
cld
aam
stos
or
mov
test
jecxz
push
dec
hlt
adc
inc
mov
loopne
xchg
cmp
in
mov
jnp
push
lret
stos
aad
jmp
lds
pop
mov
cmp
inc
aaa
pop
test
cmpsl
gs
cmp
mov
jo
xlat
mov
adc
pop
aad
stc
adc
push
insl
mov
mov
cltd
adc
dec
movsl
mov
clc
mov
push
fldcw
mov
call
subl
adc
imul
lahf
arpl
mov
aam
lret
rolb
fisttps
cmpsl
dec
jo
xchg
inc
mov
sub
ror
in
sbb
or
xchg
stos
imul
pop
sbb
xlat
mov
push
pop
std
pop
in
jo
mov
ss
jnp
and
fimuls
xchg
insl
xchg
outsb
xor
lods
mov
add
sbb
fbld
adc
or
in
push
shl
in
pop
jecxz
pop
bound
add
push
mov
shll
sbb
daa
cmp
arpl
div
mov
loope
dec
and
enter
pop
mov
push
adc
add
xor
addb
and
push
mov
sbb
push
sub
xchg
out
sub
loopne
push
rol
lret
jno
mov
cmp
inc
jo
int
scas
cmp
outsl
xor
add
jno
and
popa
xor
inc
je
jno
pop
leave
fsts
shrl
jmp
je
cmpsl
inc
and
adc
mov
cmp
int
or
mov
popa
cs
jp
mov
movsb
cmp
lret
mov
add
mov
inc
je
cmc
gs
jb
stc
sbb
hlt
inc
jp
test
xor
testl
jp
adc
lds
lcall
pop
das
adc
mov
insb
or
inc
sub
incl
sub
sub
popa
fistl
mov
push
pop
cmpsb
mov
mov
dec
push
pop
mov
xchg
shrl
xor
push
loope
lock
or
xor
add
push
and
sbb
dec
hlt
push
lcall
rcrl
jle
das
in
cmpsl
in
stc
push
mov
lods
cltd
loopne
pop
sub
push
xor
mov
mov
cmpsb
and
js
push
mov
mov
inc
fbld
pop
repz
test
sub
or
test
adc
insb
fisubl
inc
mov
and
mov
mov
push
adc
fadds
mulb
mov
jmp
pop
mov
mov
or
add
ror
jle
loopne
movsb
mov
add
lcall
xchg
inc
push
ja
in
pop
cmpsl
dec
sbb
cs
pop
or
sub
mov
jl
sub
scas
cld
imul
rcl
mov
mov
cmp
dec
cmp
push
fimull
jbe
out
into
adc
es
xor
outsb
cli
mov
orl
inc
mov
jle
xor
lcall
xlat
adc
cmc
and
repz
push
cltd
pop
xlat
mov
loope
int
xor
mov
frstor
or
mov
mov
fucomi
in
lea
loope
sbb
aad
jmp
stos
fiaddl
mov
cmp
pop
jg
divl
pop
inc
fbld
xor
mov
mov
inc
lea
sbb
mov
dec
icebp
cmp
mov
mov
jp
sub
dec
pop
idivb
daa
pop
xchg
imulb
daa
or
pop
mov
aaa
jne
mov
and
movsl
push
ja
mov
negl
aaa
cmp
stos
sbb
shll
out
es
cmc
je
mov
dec
in
or
shl
loopne
cld
push
jae
lret
std
pop
jl
orl
cwtl
add
shr
popa
cmpsl
idivl
outsl
es
inc
xor
pop
push
push
and
push
mov
jg
xchg
enter
clc
xor
dec
inc
out
lea
adc
mov
outsl
jne
dec
push
dec
cmp
xchg
mov
les
add
bound
aam
imul
dec
dec
add
sar
mov
lds
mov
insb
mov
dec
ss
lahf
jno
into
fcomps
dec
sbb
fs
mov
add
mov
lods
sbb
sar
jp
imul
fsubrl
ret
mov
ret
cmp
and
mov
rcr
xor
pop
lods
test
inc
aam
in
add
jmp
xchg
mov
sub
or
mov
stos
lea
addl
cmp
mov
andl
sbb
testb
xchg
int3
mov
mov
lret
movsb
jb
test
pop
test
shll
out
fisubrl
mov
sbb
mulb
mov
sub
int
sub
xchg
add
sbb
rcrl
shlb
mov
mov
repz
or
and
imul
icebp
mov
xchg
pop
inc
xor
test
addr16
daa
jo
adc
or
aad
sub
inc
add
je
leave
loope
push
adc
in
fcoml
into
inc
and
push
inc
popa
cmpsb
dec
in
ds
enter
xor
shl
cmc
sub
int3
ret
jo
sub
pop
movsl
xor
lcall
and
xchg
lret
jmp
lods
or
hlt
mov
dec
jb
pop
xlat
mov
insb
pop
scas
popf
mov
cmp
cmp
repnz
fwait
xchg
cmp
mov
add
cmpsl
jnp
roll
xor
sub
jge
mov
push
sub
test
cwtl
pop
add
aaa
jbe
jl
repz
std
mov
pop
test
fwait
cli
repnz
pop
jno
mov
add
push
aaa
adc
jb
data16
adc
les
push
int3
ljmp
ds
adc
lock
dec
cmp
pop
sbb
mov
adc
sub
mov
fisubrs
shlb
jo
js
adc
jbe
subb
mov
fs
and
shlb
inc
dec
xor
dec
loopne
ss
out
call
aad
sbb
push
sub
push
mov
cmpsb
push
push
leave
cmp
or
push
inc
scas
aad
lahf
jl
mov
push
or
int3
pop
jae
popf
adc
xor
dec
and
out
adc
inc
mov
mov
push
pop
cmc
or
iret
cld
test
outsb
test
ljmp
xor
rcrl
jno
enter
xchg
adc
dec
sub
les
jecxz
xchg
icebp
inc
pop
in
inc
xor
mov
lods
insb
jle
xchg
jne
mov
adc
cmp
xchg
fimuls
loopne
dec
inc
mov
pusha
pop
adc
mov
stos
mov
cmp
inc
std
shrl
xor
mov
or
scas
lds
sbb
push
dec
std
push
jno
and
or
dec
leave
dec
pop
jle,pt
pop
cmovs
jmp
add
push
sbbb
xor
adc
dec
lret
mov
sbb
sub
xor
mov
jne
xchg
pop
jecxz
mov
or
int
jno
push
and
inc
push
out
outsl
xchg
mov
in
mov
jnp
decl
lea
pop
js
mov
in
inc
les
xor
or
or
xor
jecxz
in
lcall
movsl
mov
mov
nop
add
outsl
xor
push
push
mov
and
fistpl
xlat
iret
adc
inc
mov
test
sub
push
inc
addr16
push
repnz
popa
roll
dec
lcall
mov
arpl
aas
leave
out
push
outsb
movsl
dec
enter
cmpsl
cmc
xor
cmpsl
sbb
cli
outsl
pop
add
ljmp
out
push
pop
or
rclb
or
jge
out
clc
xor
inc
sbb
imul
stos
cltd
cmp
test
jae
cmp
pusha
jle
xchg
cmp
idivb
pop
rcr
push
inc
jle
xor
mov
dec
pop
dec
sahf
ffree
mov
imul
push
dec
xor
idiv
lock
sahf
sub
cwtl
jo
cli
mov
jae
cmc
dec
pop
int
lods
mov
inc
jl
addr16
mov
and
cli
pusha
popa
cmp
xor
cwtl
fstl
sbb
push
sub
lea
cli
popl
mov
mov
and
cmp
add
fldenv
jg
xchg
add
push
and
sbb
and
jno
pop
jae
xchg
pop
mov
inc
movsl
imul
out
mov
or
sub
sub
jg
add
push
scas
scas
jno
jbe
cmpsl
inc
cs
sbb
stos
les
and
adc
sahf
mov
push
xchg
inc
add
lock
cmp
cmpsl
mov
mov
mov
mov
push
inc
dec
insb
in
stos
jns
icebp
mov
mov
jp
mov
xor
movsl
lcall
in
jge
fistpl
daa
mov
mov
es
ljmp
adc
jmp
roll
jg
call
aas
add
movsl
cmp
push
add
lods
icebp
jb
xor
mov
cmp
dec
jl
insl
in
dec
cmp
mov
xchg
push
es
mov
outsb
dec
jle
add
cli
lods
pop
jmp
aam
jbe
xor
mov
enter
mov
or
xchg
rclb
dec
and
shll
out
loopne
mov
jno
xor
mov
adc
das
and
inc
lret
pop
jno
lods
xchg
sarl
aas
mov
jno
fisttpll
rcll
xor
popa
sbb
ljmp
fidivrs
xchg
adc
or
lock
int3
mov
arpl
inc
adc
pop
push
fisttps
stos
pop
repnz
mov
pop
stos
cmp
xchg
cld
imul
or
push
arpl
mov
xor
pop
dec
mov
inc
jp
pop
mov
int3
das
in
cmp
push
ret
movsb
insb
cltd
xchg
push
cmp
sbb
adc
mov
cwtl
scas
xchg
adc
jo
movsl
sub
jge
imul
mov
clc
cs
pop
push
jge
aad
mov
je
sbb
int3
adc
xchg
jmp
pushf
sbb
in
mov
mov
stos
cltd
push
aas
add
and
arpl
sbb
cmp
dec
and
aas
fistl
enter
lret
movsl
stos
jo
cmovp
icebp
dec
cmpsb
test
adc
add
call
pop
int3
xor
mov
in
cmpsl
popa
loop
add
leave
push
arpl
sbb
std
lock
fnstsw
fwait
lret
cmp
sbbb
ja
cmc
dec
xchg
xchg
jnp
mov
adc
aas
lds
jo
or
mov
mov
sub
lahf
aad
jbe
lret
arpl
mov
ror
lcall
cmpl
test
cld
idivb
pop
sub
add
mov
push
rcl
es
jmp
fldl2t
mov
mov
addr16
cli
inc
sub
add
ds
cmp
dec
mul
out
int
fcompl
jl
lds
inc
stos
fstpl
rorb
mov
in
inc
xchg
insb
pop
and
dec
movsb
fsts
gs
popf
mov
pusha
nop
dec
fisubrl
push
rorl
mov
cmp
cmpsb
sbb
adc
xor
and
inc
push
insb
mov
push
dec
les
cwtl
adc
xchg
repz
fs
inc
stos
xor
das
adc
sub
xlat
xchg
and
adc
not
cltd
mov
mov
test
push
xor
xor
arpl
cwtl
and
inc
push
mov
mov
mov
push
ret
repnz
ljmp
xchg
pop
dec
dec
add
adcb
xor
movl
cltd
inc
es
in
loopne
push
repnz
lds
sbb
pop
sbb
loopne
idivb
xor
std
sbb
jg
cmp
dec
repz
cld
push
pusha
xchg
mov
push
add
jns
icebp
jp
push
xor
pop
fdivs
mov
add
add
jae
loopne
sbb
jno
inc
icebp
sbb
xor
xchg
pop
or
push
imul
mov
push
pusha
mov
inc
push
pop
test
test
cmpsl
les
adc
in
dec
repnz
dec
jmp
add
ficomps
enter
insl
jg
cmpsb
imul
adc
imul
in
scas
jbe
aas
pop
scas
sub
or
dec
sbb
push
sub
pop
add
pushf
push
dec
sub
push
jle
push
ret
repnz
sbb
jno
in
add
ljmp
ljmp
cmpsb
hlt
add
repnz
xchg
outsb
or
cmp
dec
push
add
lahf
lahf
std
fidivrs
push
imul
ljmp
xchg
pop
rorw
sub
ljmp
jbe
jecxz
adc
sub
jb
dec
jmp
movsb
mov
mov
sbbb
out
int3
jp
cmp
jge
and
inc
xchg
aaa
cmp
jae
repnz
popf
mov
sbb
aaa
mov
sub
jmp
add
pop
xor
fidivrs
cli
outsb
hlt
inc
mov
movsb
xchg
mov
push
test
xor
aad
in
mov
xchg
dec
outsl
mov
push
cmpsl
xor
lahf
or
subb
mov
inc
sub
std
xchg
fdivrl
jnp
xorb
icebp
nop
and
jns
sti
mov
push
test
jo
adc
push
lcall
pop
test
call
hlt
lahf
cmpsl
xchg
scas
cmpsb
jp,pn
push
mov
pushf
in
shrb
pop
insl
mov
and
xchg
loope
pop
aaa
pop
ficoms
push
out
or
xchg
fisttpl
arpl
mov
mov
aas
popa
popf
addr16
sub
xlat
fiadds
aaa
stos
std
cmpsl
dec
mov
sbb
add
pop
dec
mov
cltd
lcall
push
ds
leave
adc
add
or
aam
int3
mov
sub
ficompl
shr
loopne
leave
lock
inc
cmc
mov
aam
imul
and
int3
fwait
shl
xchg
iret
sub
int3
add
pushf
sub
in
shlb
stos
adc
out
or
test
sbb
push
imul
stos
inc
mov
cwtl
inc
push
js
inc
and
pushf
mov
jno
xor
jne
xor
fs
inc
mov
inc
addb
sub
mov
fldcw
push
and
mov
stos
push
xor
jg
andl
ret
push
jbe
push
sbb
mov
imul
mov
dec
int3
out
in
mov
orb
jno,pn
lahf
cwtl
xchg
je
xor
fnstenv
enter
mov
hlt
fstp
jl
ljmp
jae
loope
sbb
mov
cmpsl
cwtl
sbb
fildll
mov
push
adc
cmp
add
jns
fcmove
xchg
push
xchg
pop
fiaddl
and
dec
es
out
push
xchg
mov
fcomps
jg
jmp
jbe
pop
mov
or
and
icebp
sbbb
jae
movsb
cld
push
pop
out
pop
sub
repnz
imul
outsl
sbb
ret
adcb
cmc
in
xchg
xchg
cltd
loop
xor
dec
xor
xor
mov
push
fldcw
mov
movsb
mov
outsb
addb
xor
xlat
lret
roll
daa
repnz
je
dec
mov
jne
cwtl
cmc
jno
jno
mov
sbb
push
mov
and
test
sbb
cli
ret
js
daa
test
scas
sbb
gs
sub
mov
inc
or
test
ficomps
or
shr
insb
mov
mov
clc
out
dec
stos
add
imul
push
mov
dec
mov
xor
lock
xchg
sbb
pop
fsubrs
or
sbb
inc
pop
fs
dec
lahf
xchg
ljmp
aam
clc
bound
sti
int
scas
inc
insb
xchg
xchg
inc
mov
and
mov
push
add
dec
mov
fnstcw
push
xor
sub
imul
adc
push
clc
nop
cmc
cmpsb
push
push
ss
sbb
push
push
push
push
imul
lret
and
out
jne
cli
sbb
or
mov
and
jmp
ss
cmpsl
mov
jg
and
mov
call
ret
jbe
outsl
out
mov
pop
sbb
pop
jnp
imul
movsl
xor
mov
gs
aad
push
bound
fists
fsubrs
ficomps
add
mov
lea
aaa
jl
add
fisttps
arpl
sub
je
inc
loop
xchg
pop
mov
or
test
sbb
je
arpl
dec
pop
fstl
push
lods
out
rclb
ret
add
aaa
push
pop
mov
sbb
mov
inc
mov
pop
mov
jmp
pop
dec
push
dec
mov
lods
inc
pushf
or
adc
cwtl
inc
pushl
cmp
and
iret
fbld
enter
jp
and
jbe
testb
push
mov
addl
leave
roll
js
leave
loopne
daa
loop
sahf
cmpsb
dec
je
ja
clc
dec
mov
sub
jo
mov
popf
ljmp
inc
ss
push
push
cmpsb
filds
stc
xor
xchg
pop
imul
pop
fistpll
into
adc
cld
and
ja
hlt
push
adc
dec
in
cwtl
fwait
pop
xor
stc
mov
mov
xchg
leave
movsl
lock
mov
sbb
cs
cld
mov
mov
pushf
scas
stos
data16
test
mov
nop
fidivrs
sub
lahf
mov
cmpsl
mov
aaa
aaa
or
push
aaa
dec
sahf
int
or
sbb
stc
and
lret
jmp
pusha
addr16
testl
jae
loopne
sub
add
xchg
fisttps
push
pop
inc
loopne
in
cs
sub
xchg
daa
adc
fildll
pop
insl
lahf
mov
dec
adc
fistpll
xchg
movsb
xor
stc
push
inc
fiaddl
incl
sti
fwait
and
in
jmp
push
mov
xor
mov
fucomi
aam
sbb
inc
and
push
mov
mov
mov
push
mov
insb
pop
mov
and
jge
movsl
fdivl
cs
jo
jl
cld
leave
icebp
pop
cmp
sarb
lods
xor
sub
lret
inc
movsl
and
jmp
out
lods
ret
call
xchg
bound
fucomp
mov
cmp
adc
cmp
test
ds
and
pop
mov
movsb
jns
pushf
shrb
xchg
mov
fbstp
inc
dec
sbb
add
hlt
andl
push
push
mov
add
test
mov
in
outsl
jne
pop
leave
inc
inc
bswap
add
jg
pushw
dec
cld
push
pop
add
dec
std
jne
insb
add
lret
movb
sbb
repnz
sarl
sub
xor
pop
mov
mov
add
sbb
inc
rcrl
je
add
xchg
movsl
out
mov
enter
or
add
aas
cmp
push
mov
add
jb
push
jnp
sub
xor
push
test
call
push
es
and
cmp
xchg
roll
and
jae
cmp
push
jle
iret
mov
test
push
cmp
push
cmpsl
xchg
lahf
inc
cmpsb
aaa
repz
jns
jg
cmp
push
sub
or
repnz
mov
dec
lds
ja
sahf
movsb
adc
incb
jne
mov
outsl
insl
mov
and
jb
and
popa
call
xor
rcl
jmp
scas
mov
dec
pop
mov
pushf
mov
ds
adc
jno
insl
mov
jp
xchg
fstpt
cmp
push
add
scas
xor
sub
jne
push
pop
adc
inc
jp
out
popa
bound
jns
adc
adc
mov
dec
cwtl
jp
add
jbe
cltd
jle
pop
imul
inc
mov
jnp
cmp
jp
mov
push
xor
xor
mov
mov
jae
insl
aas
ficoml
leave
test
push
and
cwtl
jb
inc
ja
pushl
int
icebp
inc
xchg
dec
sbb
or
fucomip
xor
sub
test
mov
push
hlt
adcl
rcrb
jg
je
movsl
addb
pminub
int
dec
popa
lret
icebp
jl
fmulp
aas
cmpsl
and
stc
adc
data16
adc
push
mov
test
and
xlat
push
mov
das
sarb
cmpsl
subb
adc
or
in
call
jmp
sbb
and
mov
arpl
popf
dec
pop
push
push
rolb
cltd
cmpsb
cmp
pop
int3
add
scas
in
std
lods
jno
lods
add
test
mov
mov
sub
xor
add
lret
sbb
shll
dec
lcall
pop
das
push
cld
mov
and
mov
fldt
inc
ja
jle
test
add
xchg
dec
dec
sti
cmp
lahf
sub
xchg
mov
sub
jns
clc
mov
and
mov
and
aaa
mov
mulb
call
pop
inc
pop
push
dec
mov
push
inc
out
xchg
out
popf
jnp
xor
mov
lods
dec
cwtl
xlat
imul
ljmp
dec
leave
fsubrp
or
pop
sbb
dec
pop
sub
fiaddl
repnz
faddl
and
sub
adc
rorb
and
and
xchg
mov
and
pop
pop
jno
jb
or
lret
addb
mov
xchg
movsb
inc
scas
outsl
xor
pop
dec
arpl
add
ljmp
cwtl
sbb
lds
add
or
aad
hlt
outsb
jns
cmp
es
pop
repz
dec
inc
notl
pushf
pop
cmpsl
mov
mov
and
nop
cmp
adc
lods
inc
xor
push
xchg
pushf
mov
pmaxub
loopne
aaa
and
data16
xor
and
add
out
pushf
in
jnp
lea
and
insl
jno
mov
cmp
roll
cmpsb
xor
pop
and
adc
arpl
mov
out
lret
call
aam
mov
adc
sahf
sbb
jle
jno
xchg
jo
add
faddl
xlat
and
sbb
push
imul
out
enter
mov
sarl
xchg
push
and
sub
adcb
mov
pop
inc
mov
aaa
hlt
ds
movsl
gs
cmp
mov
mov
loop
dec
or
data16
pop
cs
sub
rorb
test
mov
sub
fistps
repnz
dec
pop
xchg
sbb
ljmp
pop
mov
dec
rcll
in
in
cmp
subl
call
mov
pop
lock
ss
xlat
pop
mov
dec
cmp
push
test
aaa
mov
sarl
or
leave
jl
mov
adc
xchg
xor
and
lcall
es
mul
mov
pop
mov
pop
fcomps
out
popf
push
fstp
fisttpll
inc
inc
test
adc
jo
sbb
outsl
jge
dec
lea
mov
adc
sub
xchg
lcall
dec
sub
cmp
add
push
cld
inc
lret
sub
fisttps
mov
ret
sub
add
fldl
xchg
call
sarl
jge
inc
or
cmp
inc
lahf
sub
or
je
push
mov
inc
fnsave
das
inc
clc
jno,pt
fcmove
pushf
adc
out
in
rorl
lahf
lret
aas
test
mov
dec
cli
xchg
pop
mov
mov
or
loopne
test
jl
pop
fadds
mov
stc
pop
addl
pushf
rorl
mov
push
aad
outsl
insl
add
xchg
sub
mov
call
push
and
mov
or
test
fdivl
mov
fidivrl
mov
icebp
inc
xor
js
test
or
mov
xchg
pmaxub
push
nop
imul
ja
adc
mov
pushf
and
push
add
or
pop
cwtl
cltd
jmp
sub
adc
insl
dec
push
lods
loopne
dec
int
inc
push
adc
sub
inc
add
outsb
lahf
addl
idiv
sbb
adc
int
jno
and
testb
jo
sub
push
xchg
sbb
mov
adc
sbb
and
dec
not
mov
jle
rep
push
xlat
mov
xchg
pop
cli
xor
or
ljmp
icebp
add
jge
mov
lods
fisubs
aad
jns
cmpl
lds
adc
xchg
mov
jno
push
mov
cli
xchg
mov
scas
ds
pusha
sahf
aas
shll
push
xchg
fists
rcll
and
push
pop
scas
lds
cwtl
pop
les
lret
sti
cmp
push
test
es
jne
push
inc
bnd
sub
jl
icebp
dec
inc
mov
sahf
dec
dec
lock
and
mov
or
cld
inc
sub
jl
dec
or
cltd
and
or
mov
inc
iret
inc
xchg
inc
mov
cmp
pop
inc
test
inc
xor
call
xchg
mov
push
stos
sub
push
shll
mov
xchg
push
call
mov
inc
clc
cmp
sub
and
push
mov
dec
clc
mov
nop
push
xor
pop
or
cmp
shlb
lods
mov
xchg
popf
add
inc
jb
jle
rclb
lds
push
out
out
lods
xchg
dec
sub
dec
mull
cwtl
inc
les
fstp
stos
shlb
das
mov
popa
repnz
mov
push
je
xchg
stc
ret
pop
ss
test
push
shll
jge
sbb
mov
cmp
xchg
lea
mov
mov
jb
test
test
sub
sbb
imulb
add
in
insb
push
insl
push
fsts
inc
mulb
mov
and
pop
test
bound
push
xchg
jno
daa
cltd
and
idivl
xor
mov
mov
and
xchg
jns
push
fisttps
lcall
or
and
clc
mov
sbb
bound
cltd
in
pop
lea
scas
sbb
and
cli
add
nop
and
dec
outsb
inc
pop
xor
xchg
and
cltd
jbe
outsl
xor
dec
pop
pop
mov
into
movsl
xchg
mov
je
out
scas
xor
dec
sbb
test
mov
cmp
and
jae
cli
mov
icebp
cltd
xchg
lock
mov
scas
and
stc
or
addr16
cmp
mov
addr16
mov
fldcw
add
inc
xchg
cs
das
push
add
rorl
sbb
aas
mov
es
adc
fdivrs
jbe
push
ret
xor
mov
movl
test
xchg
aaa
push
cmp
roll
iret
pop
das
dec
data16
and
loop
ja
out
xchg
push
ljmp
iret
fmull
and
xor
sbb
xor
adc
xchg
orb
rcl
jb
mov
rcrb
daa
sbb
out
out
mov
scas
adc
dec
pop
hlt
popl
inc
popa
sub
jp
mov
jo
int
fiadds
pop
jbe
cld
shll
icebp
jg
xchg
xor
ror
cltd
jbe
mov
mov
pop
sbb
stos
cmp
out
icebp
in
sbb
cmp
inc
lock
movsl
jg
or
mov
hlt
mov
or
mov
mov
sub
or
call
shr
out
xor
lock
push
loope
dec
pushf
int3
adc
or
popl
aaa
inc
pop
xchg
cmpsl
aaa
enter
ljmp
jb
out
xchg
mov
fwait
and
lods
dec
aaa
push
das
sub
or
loop
int3
mov
jo
popf
or
inc
push
xchg
inc
rorb
ret
nop
or
sti
adc
inc
add
mov
and
push
or
and
jnp
xchg
gs
cmp
adc
mov
mov
xor
pop
test
fwait
lahf
sub
test
mov
cmp
push
dec
mov
or
mov
pushf
and
jbe
pop
cmp
adc
out
aaa
mov
cmc
sub
mov
dec
mov
xchg
adc
mov
jbe
push
dec
sbb
jle
push
xchg
push
add
iret
push
sbb
aad
test
add
lds
adc
mov
loope
into
adc
xorl
imul
dec
sarl
sbb
enter
lcall
scas
sbb
jmp
adc
add
call
and
xchg
lahf
es
fldcw
push
dec
std
aas
imull
addr16
and
ret
in
bound
and
stc
adc
push
jne
cmp
inc
add
sub
cmp
lcall
mov
out
mov
fbstp
mov
push
cmp
mov
xor
adc
scas
test
adc
lret
outsl
sbb
loopne
mov
testb
mov
dec
outsb
xchg
sarl
push
sub
cwtl
mulb
bound
pop
adc
sahf
negb
sbb
in
dec
ret
sub
inc
inc
xor
xchg
arpl
popl
lock
jge
bound
movsb
popf
push
jl
andl
das
stc
mov
leave
sbb
mov
pop
pop
sub
and
xor
sahf
scas
sub
cmpsb
and
xor
sti
pop
scas
out
cmp
lock
dec
cmp
imul
rolb
or
or
dec
mov
pop
add
push
js
ljmp
cmpsl
mov
mov
mov
pusha
jmp
jmp
mov
into
ret
inc
add
sbb
clc
and
mov
sti
add
mov
lock
adc
adc
push
pop
sub
xchg
pop
sbb
dec
xor
dec
add
adc
loope
adc
sbb
xor
aas
jg
scas
pop
push
les
jnp
cmp
or
xorb
movsb
or
test
push
incl
data16
cmpsl
test
push
subb
inc
jecxz
into
popa
fimuls
jg
rcll
cmp
or
pop
mov
iret
adc
xchg
das
adc
mov
pop
test
into
sub
cwtl
loopne
pusha
test
popf
ds
mov
mov
adc
outsb
and
adc
lret
and
lock
addr16
subb
push
push
fidivrl
mov
mov
pop
cmp
repz
mov
aad
loop
in
adc
das
outsb
adc
cmp
push
push
hlt
mov
movsl
ss
adc
mov
sbb
daa
pop
cmp
xchg
xchg
fs
mov
adc
push
data16
inc
sub
xor
mov
push
gs
jmp
or
icebp
leave
inc
les
pop
das
ffreep
adc
push
mov
into
jo
insl
cwtl
push
notb
add
pop
sbb
xchg
push
push
jne
mov
popf
movl
outsl
adc
aad
incb
and
mov
mov
sub
mov
andb
xchg
ds
fists
call
push
inc
cs
movsb
inc
lret
aaa
mov
xchg
xchg
dec
push
lods
add
rcll
dec
or
mov
loope
mov
mov
flds
es
rolb
scas
into
testb
dec
movsl
pop
test
test
aad
mov
dec
add
pop
popa
leave
inc
mov
mov
out
xchg
test
jb
add
cmp
ret
jecxz
out
fildl
cs
dec
add
fdivs
jb
and
or
fmuls
icebp
mov
bound
fimull
jne
das
push
push
jns
push
push
rorl
cli
pop
cmp
inc
xchg
mov
add
dec
roll
incl
and
movl
fwait
arpl
testl
push
add
rcll
lock
cmc
or
push
mov
sbb
sahf
inc
aam
incl
hlt
mov
iret
popa
pop
ret
fcomps
cltd
mov
imul
dec
loopne
pusha
and
in
inc
cld
sub
in
dec
ds
out
mov
mov
lock
and
mov
cmpl
pop
sbb
xchg
les
addr16
xchg
enter
bound
mov
je
pop
mov
lock
mov
pop
les
enter
imul
lods
xchg
push
loopne
xchg
cmp
leave
jge
push
fwait
push
rorb
add
out
aaa
iret
out
les
adc
sarl
add
mov
cli
mov
jb
std
repz
fldcw
add
cmpsl
inc
sub
sbb
addl
xor
mov
je
data16
pop
cld
cli
cli
mov
mov
pop
add
mov
int
pusha
lahf
adc
and
mov
loope
cwtl
pop
xor
daa
sub
jl
rolb
sub
dec
and
lods
pop
addr16
sub
mov
jecxz
push
or
cs
sbb
repnz
testl
test
inc
in
and
inc
lods
orb
imul
icebp
ret
aad
scas
lods
inc
xchg
stos
gs
add
jg
sbb
push
sbb
imul
xlat
leave
popf
loopne
test
icebp
cmp
xor
icebp
repz
xor
jmp
fistpl
testl
mov
js
sahf
inc
imul
push
jmp
aas
movsl
cmp
jo
jne
or
push
mov
sbb
fsubrs
mov
call
jnp
mov
cmp
insl
adc
rorl
loope
int3
rcrl
nop
add
mov
adc
adc
jge
cmp
adc
in
and
shrb
add
sbbl
and
adc
xor
jmp
adc
sub
pop
fstpl
addr16
les
fdivrl
mov
adc
nop
inc
push
lcall
divl
xor
lahf
repnz
jbe
mov
clc
shrb
jp
dec
stos
ret
icebp
dec
push
in
test
add
inc
push
aaa
out
or
movsl
jnp
xor
ss
mov
out
xchg
dec
and
out
fildl
mov
into
out
in
inc
loopne
int
stos
idivl
std
jnp
gs
adcb
daa
mov
dec
pop
jne
rol
dec
into
sbb
fs
icebp
call
repz
lock
repnz
test
cmp
aad
xchg
shll
stc
jae
ljmp
mov
mov
imul
adc
dec
dec
and
cs
stos
and
je
sbb
jae
repz
lret
in
jnp
xchg
ja
mov
js
jecxz
push
xchg
xchg
pop
add
pop
mov
in
icebp
ret
push
data16
pop
mov
adc
xchg
shrl
jmp
push
lret
int3
jne
out
ljmp
les
aas
test
jbe
push
jge
mov
push
xchg
pusha
pop
je
xchg
xchg
fnstsw
dec
mov
jecxz
push
adc
sub
jns
add
loopne
or
add
jge
enter
and
movsl
mov
in
and
xor
and
imul
xchg
or
and
sub
ret
jecxz
cmpsl
mov
ja
fdivl
pop
subl
hlt
lcall
lret
int
call
mov
jb
xor
stos
das
inc
arpl
dec
mov
xlat
orb
xor
sub
adcb
mov
in
clc
lcall
push
ret
imul
stc
das
cmp
arpl
and
or
lret
movsb
dec
push
pop
xor
enter
cmp
jp
inc
push
push
lret
xor
ret
fildll
adc
add
xor
sub
addr16
test
pop
push
dec
cmp
out
scas
repz
push
xchg
jmp
fildll
stos
xor
cmpsl
lds
xchg
adc
dec
cmp
fdivl
jp
mov
cmp
pop
pop
lods
insl
dec
scas
rcrl
test
mov
push
xchg
and
or
inc
cwtl
test
jp
jb
lods
inc
sarb
jg
jg
and
push
les
sub
push
pop
aaa
adc
out
les
jecxz
fisubs
ja
sbb
js
jg
or
push
mov
fiaddl
movsl
cld
mov
fnsave
cmp
or
push
push
and
movsb
push
rcrl
clc
scas
call
add
fwait
iret
adc
mov
loop
popl
cs
roll
and
adc
faddl
dec
data16
cmc
and
and
jb
insb
push
mov
adc
xchg
in
aaa
jmp
cmpsl
xchg
xchg
nop
cmp
xchg
arpl
in
divl
sub
mov
sub
sub
add
inc
push
inc
sahf
in
push
jge
cmp
ret
mov
xchg
mov
adc
mov
jle
pop
loopne
pop
bswap
imul
mov
and
jbe
aas
xchg
hlt
push
nop
pop
push
xor
xlat
negl
mov
cltd
push
stos
stc
and
int
stc
sbb
aas
adc
push
popa
sub
shrl
cli
sbb
xor
add
or
mov
icebp
jp
cwtl
dec
imul
adc
jnp
fs
and
jp
mov
lret
sbb
js
or
push
push
test
mov
pop
mov
xchg
mov
and
ret
sbb
xor
mov
fisubl
and
test
arpl
cmp
scas
cli
ja
cmp
cmp
jne
and
push
popf
movsb
imul
push
repz
sarb
sub
push
push
movsl
jp
sbb
scas
lea
xor
mov
push
cmp
dec
cmp
xchg
or
push
and
bnd
pop
mull
mov
outsl
gs
jae
xchg
enter
rcrl
iret
xor
dec
rcll
lods
jno
call
lret
jmp
and
push
jb
pop
dec
stc
push
pusha
xchg
stos
inc
mov
dec
cld
push
popa
gs
outsb
pop
add
mov
hlt
adc
dec
incb
movsb
or
jl
outsb
roll
adc
cmp
and
mov
jae
pushf
push
jg
movsbl
inc
or
and
push
stos
cmp
mov
test
sub
popf
and
iret
movb
iret
scas
jg
push
mov
jecxz
out
je
push
scas
push
ret
xchg
and
fwait
lahf
cmp
or
lods
jnp
test
cltd
in
das
stc
push
ja
pop
imul
pop
dec
xchg
dec
adc
push
addr16
sbb
fisttpll
sar
stos
in
arpl
fcmove
nop
loop
mov
loop
lea
int
xchg
mov
data16
shll
scas
dec
das
sahf
pushf
scas
imul
and
inc
or
popf
out
call
lcall
int3
repnz
xchg
loop
mov
dec
mov
push
cld
cmp
and
sub
xlat
aas
into
xlat
popa
in
lds
mov
mov
jle
jge
imul
bound
mov
cmp
pop
push
movsb
cmp
imul
push
imul
push
adc
or
test
jno
dec
push
lds
mov
push
xchg
and
or
movsb
or
sub
aad
add
mov
in
jp
sub
xor
iret
dec
mov
ret
into
push
dec
cld
adc
jae
mov
in
imul
neg
xor
pop
adcl
cmp
fcom
xlat
lods
movsl
scas
inc
insl
xchg
roll
xor
jbe
jg
jecxz
lds
jno
pop
pop
fs
leave
shrl
push
data16
sarl
gs
ret
adc
hlt
das
fiaddl
call
shll
or
js
or
lret
imul
cmp
sbb
arpl
es
xlat
pop
inc
imul
mov
dec
push
mov
in
dec
adc
inc
push
mov
lds
add
in
arpl
fs
jle
add
int
int
add
mov
jns
lods
jg
jae
pop
xor
mov
fadds
mov
mov
das
adc
cmp
lock
in
pop
es
aas
sub
pop
frstor
mov
repnz
jmp
lods
cwtl
mov
lods
xchg
jo
sub
xchg
insl
jbe
stc
jne
inc
fcompl
idivl
mov
arpl
dec
lret
mov
push
push
xchg
sub
pop
mov
ret
xlat
sub
and
mov
pop
or
add
aas
adc
xor
incb
lea
and
rcrl
xor
adc
mov
xlat
daa
aad
add
stc
pop
cmpb
jge
ret
inc
dec
add
pop
ja
pop
imul
test
sub
stos
mov
jno
dec
xor
mov
imul
add
xchg
cmp
lds
inc
jmp
lret
lret
popf
fcoml
sub
addl
mov
and
idivb
adc
jmp
sub
mov
cmp
mov
test
and
sbbl
jge
jnp
dec
xor
push
lods
xor
xchg
adc
popa
adc
mov
add
xchg
sti
test
out
enter
or
out
inc
cmp
adc
in
pop
stos
sub
cltd
inc
aas
out
cwtl
into
mov
mov
pop
fwait
and
shlb
pop
or
movsb
movsb
pusha
pop
pop
int
sub
sbb
test
mov
call
xchg
insb
ds
push
mov
mov
int3
test
sbb
das
aam
test
out
fsubr
sub
icebp
mov
xchg
xor
rcl
outsb
xchg
mov
popf
jmp
jae
xchg
push
adc
push
adc
dec
push
add
into
jmp
inc
sub
or
push
or
pop
mov
nop
sub
push
test
mov
cmp
es
into
xor
lds
dec
sub
mov
insb
sbb
or
xor
mov
popf
jbe
push
push
aaa
orps
cmp
stc
in
mov
loopne
mov
repnz
or
fcmovnb
mov
shrb
nop
mov
pop
int
sub
sar
and
push
add
jg
lret
mov
push
push
repz
les
arpl
mov
pop
fiaddl
les
or
sub
shll
cmp
jmp
repnz
scas
fmull
add
sahf
movsb
scas
gs
nop
mov
or
pop
mov
jge
in
andl
idivl
mov
inc
inc
push
lds
add
test
cs
pop
mov
jno
bound
mov
mov
jns
mov
lods
and
xor
rolb
jecxz
pop
mov
xchg
xor
jnp
mov
push
in
xchg
iret
sub
sub
add
sahf
je
jo
mov
and
dec
out
or
out
adc
mov
and
ficomps
xor
fs
pushf
lock
mov
push
idivb
pop
lock
xor
sti
sub
ret
rcrb
pop
loope
inc
and
mull
cmp
mov
lock
mov
ret
adc
cli
add
std
jecxz
mov
mov
jns
cmp
inc
cmc
lods
in
movsl
push
scas
jecxz
pop
pop
pop
lods
xchg
das
sub
cmpsl
and
daa
and
or
push
jp
sub
cltd
mov
ja
mov
leave
sbb
testl
fstps
mov
clc
fcomp
in
mov
mov
mov
out
sub
or
sub
lahf
lret
mov
and
xchg
pop
mov
cmp
xor
int
call
lods
fincstp
mov
mov
push
test
mov
sahf
ss
mov
int
xchg
aas
and
jg
adc
and
mov
inc
inc
rcll
imul
xchg
ret
xchg
loopne
sti
mov
sub
add
int3
xor
out
add
int3
and
sbb
rolb
push
push
in
jb
adcl
movsl
rolb
or
mov
add
and
ret
sahf
jle
sbb
push
scas
add
push
js
loopne
test
js
pop
mov
mov
add
or
xlat
lret
iret
mov
pop
fldenv
movsb
gs
and
fbld
dec
mov
out
dec
popa
test
mov
xor
rcll
pushf
xchg
mov
mov
jns
inc
inc
imul
xor
cli
test
push
stos
dec
sbb
ljmp
pop
pusha
jb
rorl
scas
lret
movsl
insl
movsl
shl
fdivrs
addb
cmp
lret
clc
loopne
add
jecxz
jecxz
fisubs
pop
sub
loop
sub
ret
mov
fldt
pop
lds
lods
jbe
sub
out
inc
setl
fs
pushf
mov
movsb
nop
add
dec
test
push
notl
cwtl
shl
mov
data16
rcrl
shll
mov
mov
jle
ficoml
push
daa
notl
mov
cmp
xor
xor
inc
dec
sti
jbe
mov
repnz
fdivs
rol
xlat
gs
data16
dec
outsl
cmpsb
testb
adc
out
or
sub
es
es
jno
dec
dec
push
sub
mov
xlat
dec
cmpsb
xchg
mov
andb
add
xor
adc
cmp
and
roll
sahf
pop
aad
lods
add
push
mov
mov
jmp
jo
cwtl
filds
mov
dec
mov
ror
mov
mov
loopne
inc
stos
mov
lret
int
in
xlat
ret
outsb
mov
das
insb
decl
stc
push
fbld
rorl
pop
xchg
pop
cmp
clc
imul
dec
into
xor
les
sti
ljmp
lahf
fbstp
add
sbb
idivb
sbb
divps
inc
pop
leave
aad
cmc
xchg
xchg
xchg
cmp
jnp
jae
fisttps
xor
jno
mov
js
testb
stos
sbb
jne
addr16
in
adc
movl
mov
xchg
pop
sub
inc
sub
bound
mov
decb
xor
fistps
jno
cmpl
adc
mov
ds
pushf
jmp
int
nop
or
xchg
cmp
loopne
jp
add
jne
out
xchg
aam
xchg
xor
sub
mov
sbb
mov
fisttps
sub
mov
in
sbb
mov
xchg
pop
cld
cmpsl
fnstcw
mov
jmp
pushf
cmp
data16
sbb
lahf
loopne
aaa
stos
adc
mov
pop
adc
xchg
repnz
and
inc
stos
lods
cmp
xor
icebp
add
int3
mov
dec
ret
fs
xlat
fnstenv
loopne
scas
jmp
push
add
lret
push
jb
and
mov
out
cmc
js
addr16
pop
pop
inc
nop
test
shlb
sahf
in
mov
popf
sub
cwtl
and
dec
cli
sbb
xor
pusha
int3
gs
pop
xor
push
mov
jae
xchg
inc
imul
mov
cld
adc
jno
dec
dec
push
adc
lret
mov
cltd
push
xor
jo
bound
jge
lahf
sbb
lods
mov
jns
imul
in
jno
jmp
jno
xor
mov
add
decl
sub
ds
xchg
sar
cli
das
shl
adc
test
icebp
add
aad
or
in
dec
xlat
scas
cwtl
fs
adc
and
outsl
stos
gs
outsl
cmc
inc
mov
mov
cmp
scas
fisttpll
mov
push
pop
mov
pop
movsl
fnstenv
repnz
mov
fsubs
mull
lcall
lret
add
roll
jg
xor
push
das
xor
jecxz
inc
jle
add
mov
cmp
enter
mov
xor
out
pop
sar
mov
dec
pop
mov
mov
lock
ja
pushf
jo
sti
ret
mov
repz
jp
cmpsl
stos
pop
inc
jne
cltd
add
sbb
cmpsb
cmp
add
insb
push
mov
pop
push
cmpb
xor
in
clc
xor
pop
fimull
movsl
ljmp
cmc
jge
lods
xchg
jmp
push
mov
xor
insl
xor
out
or
jg
icebp
mov
sbb
jl
sub
pop
adcl
push
mov
iret
cmp
aas
daa
push
xchg
loope
sub
dec
sbb
mov
mov
mov
imull
lret
sti
lret
aaa
in
push
aaa
test
outsl
enter
mov
sbb
mov
dec
clc
xor
sbbb
outsb
lcall
push
push
push
inc
add
adc
mov
repnz
adc
aas
mov
jle
pop
stc
test
push
sbb
lea
dec
testl
mov
pop
jbe
in
xchg
inc
fnstsw
sub
iret
aaa
sub
push
sbb
test
sbb
and
sbb
sub
add
in
aam
sarl
lods
je
add
aas
mov
fidivrs
call
std
jg
mov
vprotd
inc
pop
pop
inc
cs
lock
jmp
or
inc
hlt
leave
rclb
cltd
mull
sar
mov
out
dec
mov
pop
adc
lods
fcmovbe
aam
ljmp
mov
lret
xor
sbb
pushf
or
add
repz
mov
pop
jmp
es
add
lock
jo
xor
jns
pop
addl
rcrl
pop
or
inc
push
mov
add
sbb
and
or
int
xor
fcomip
push
stos
cmpsb
sub
xchg
xlat
call
mov
frstor
xor
lcall
gs
xor
mov
fcoml
jb
xor
gs
ret
add
ljmp
lods
movb
pop
test
rcll
aad
jp
lahf
jle
fnsave
roll
jle
and
into
adc
lcall
shrl
jns
mov
and
popf
sti
and
test
repz
je
or
cmp
jecxz
lock
dec
popa
inc
xchg
jge
cli
test
sub
arpl
sbb
mov
fiaddl
scas
out
add
add
ret
cltd
cmp
shll
xchg
in
pop
inc
lcall
clc
mov
add
hlt
psubb
mov
lahf
sbb
adc
test
xor
je
loope
dec
nop
pop
faddl
or
mov
das
pop
fildll
je
push
or
scas
cmp
stc
pop
into
test
xor
adc
test
mov
fstp
pop
pop
mov
inc
cmp
loop
xor
cmp
pop
mov
push
add
int
pop
popf
lret
scas
xor
mov
jl
mov
movsb
subl
sub
jg
mov
xchg
dec
clc
and
xor
das
jae
mov
push
xchg
pusha
fnstcw
jge
insl
mov
nop
push
jmp
scas
add
rcl
inc
mov
aas
addr16
mov
idiv
repnz
lods
jnp
add
xlat
fld
push
stos
inc
or
mov
loope
inc
fdivrp
imul
ds
rcrb
mov
sbbl
dec
rorb
iret
cmp
rclb
sub
adc
mov
jg
jae
push
jp
sarb
outsl
stos
jp
pop
std
out
fistl
cmpsb
cli
xor
mov
inc
addr16
sahf
adc
push
cmp
mov
or
cmpsl
dec
sbb
sar
pop
jp
mov
jl
jae
int3
fs
pushf
or
dec
jmp
cmpsb
push
xor
repnz
jp
fstps
mov
fisubl
hlt
call
js
dec
or
jbe
js
sbb
push
pop
out
xchg
lds
and
punpckhbw
adc
xchg
push
xor
sbb
mov
adc
fisubrs
mov
sbb
out
fidivs
xlat
sarl
push
inc
mov
cmc
fidivs
sbb
inc
cmp
mov
fs
lret
pop
loope
xlat
jne
add
inc
pop
mov
and
xchg
shlb
pop
je
push
or
popa
addr16
mov
add
xor
aad
sub
mov
test
xchg
pop
sub
ja
in
negl
sbb
mov
mov
push
adc
cli
or
or
imul
icebp
inc
lret
jg,pt
push
das
dec
arpl
pop
int
push
outsl
jecxz
test
pop
popa
pop
dec
addr16
sub
jp
add
int
andb
cmpsb
jno
mov
mov
lds
pop
push
pop
dec
push
dec
mov
pop
shrl
arpl
jae
into
fbld
sbb
pop
in
adc
mov
xor
inc
fisubs
das
mov
sbb
mov
aas
pop
mov
fs
pop
push
push
out
mov
fwait
iret
les
das
and
insb
push
and
lcall
shlb
lods
repz
add
in
daa
pop
inc
adc
out
add
ljmp
les
and
cmp
mov
fisttpl
xor
cmp
push
pop
out
cmpb
aad
cmpsl
movsb
inc
add
mov
stos
fmuls
nop
sbb
mov
lods
cmp
push
mov
lcall
cmp
nop
int3
mov
xchg
data16
mov
and
movsb
aas
loope
xor
xchg
jb
push
imul
sbb
das
daa
or
jnp
xchg
aad
jle
fisttpl
adc
jno
stc
cwtl
adc
and
cwtl
fadds
das
out
cs
jnp
or
lret
mov
daa
mulb
push
mov
xbegin
xchg
xorl
xchg
test
fcmovu
lock
je
test
insl
cmpsl
mov
in
and
ja
sub
cmpsl
ret
cltd
pop
jno
ret
mov
xchg
mov
or
popl
mov
pop
fisubl
fsubrl
xchg
jmp
mov
dec
rolb
repnz
jb
push
add
rorb
pop
push
push
dec
mov
xchg
inc
dec
test
or
test
shl
cli
xchg
dec
inc
pcmpgtd
mov
xor
js
mov
push
xchg
dec
mov
or
push
sub
cwtl
jno
push
sub
inc
or
pop
test
jmp
xchg
jb
movsb
xchg
pop
push
decb
arpl
test
mov
cmp
xchg
cmp
filds
std
lock
and
in
ficompl
stos
call
xchg
and
test
cwtl
or
inc
sbb
dec
mov
notl
sbb
lret
in
inc
shr
rorl
fwait
xchg
bound
fbld
scas
or
fisubrs
push
dec
cwtl
popa
pop
aas
repnz
out
xor
mov
scas
mov
nop
or
dec
mov
xchg
jmp
mov
incl
imul
imul
or
insb
adc
ret
mov
adc
push
ret
insl
xor
mov
popa
loope
adc
in
fdivrl
inc
push
lret
add
pushf
lock
inc
jbe
out
test
mov
aad
sbb
mov
jmp
add
ja
cmp
aad
or
sbb
or
mov
daa
jns
xor
fstpl
push
xlat
inc
dec
xchg
enter
cmc
mov
notb
or
xchg
push
sbb
sbb
add
pop
dec
fsubp
push
adc
and
lock
out
in
ds
mov
mov
mov
push
push
cmp
jne
push
lret
sub
iret
call
adc
xchg
loop
sti
sub
xchg
test
pop
xchg
mov
adc
jmp
sub
fstpl
daa
dec
xchg
mov
pop
pop
sbb
inc
fabs
data16
inc
jg
sub
arpl
jo
insl
and
mov
mov
roll
add
sub
fstps
inc
sbb
dec
int
incl
rcrb
fwait
cwtl
scas
jle
mov
cmpsb
lret
mov
rdtsc
shll
xlat
mov
mov
fsubs
inc
push
inc
cld
pop
popf
sbb
stc
xchg
xor
mov
mov
in
adc
outsl
es
jmp
sbb
cmpsb
xor
and
jo
pop
aad
push
xor
mov
test
aas
pushf
je
adc
pop
mov
pop
xlat
sub
popf
push
dec
inc
xchg
das
ror
icebp
adc
sub
cld
mov
fsub
cmpsl
mov
sbb
mov
mov
sbb
rcrl
sub
sbb
test
ret
add
jo
in
popf
fidivrs
pop
xor
jge
out
push
pop
push
jbe
sub
xchg
repz
shrl
jl
scas
rclb
push
adc
sti
mov
sub
sub
add
add
clc
aaa
inc
jmp
movsb
rorl
jg
push
scas
cmp
cs
test
mov
ss
push
xchg
pushf
sub
sbb
xor
lods
out
cmc
lret
push
inc
ljmp
in
jl
dec
jg
negb
add
cmp
pop
int3
inc
dec
dec
sti
adc
leave
mov
fiadds
addb
test
mov
cmpb
loop
int3
cs
loopne
inc
adc
jg
mov
add
inc
sbb
cwtl
mov
sahf
jmp
test
cmp
pop
mov
jmp
mov
sbb
sbb
mov
faddl
mov
cmp
or
mov
imul
stc
cld
xchg
scas
cwtl
insl
mov
adc
stc
mov
push
add
bswap
ja
not
adcb
call
xorl
mov
or
jnp
jecxz
movsl
fstpl
stc
inc
shll
pop
mov
xor
pushf
and
dec
jne
ja
jecxz
inc
pop
addr16
gs
jmp
cmp
jge
dec
adc
lahf
fildll
pop
aas
dec
add
repz
push
pop
or
idivb
addr16
sub
pop
sbb
outsb
pushf
mov
call
jle
pusha
mov
inc
aas
call
jb
pop
xchg
push
adc
je
cwtl
dec
or
cmp
inc
scas
lcall
test
lds
movsb
fimuls
scas
xchg
jl
push
or
bound
or
xlat
xor
xchg
fs
pop
ja
loop
insl
roll
mov
data16
loope
orl
dec
ret
int3
ret
jmp
push
mov
adc
mov
test
xor
sub
xchg
fisttps
addl
jns
jae
loop
js
testb
sub
in
call
mov
mov
in
jb
insl
xorb
jp
jae
cli
pop
adc
rorb
dec
in
adc
notl
push
jmp
add
aam
adc
fisttps
in
add
leave
lea
popf
xchg
jp
xchg
push
lods
dec
jle
das
mov
shlb
aad
lock
in
jge
mov
lods
test
imul
stos
sti
ss
inc
cli
test
mov
in
and
int
sub
mov
dec
aam
push
xchg
mov
daa
pop
nop
pop
imul
sbb
push
cmp
lea
bound
out
jne
mov
push
repz
stos
jne
iret
lret
or
jbe
jge
xchg
push
repz
sbb
popf
jnp
dec
or
call
dec
cmpsb
out
je
imul
leave
push
adc
stos
adc
cmp
inc
add
or
add
jae
jnp
ret
push
pop
ret
xor
push
xor
push
out
movsl
paddusw
push
inc
scas
mov
imul
roll
and
notl
push
popf
aas
push
cmc
xacquire
adc
adc
mov
arpl
notb
mov
add
in
sbb
sub
and
jp
repnz
sbbb
outsl
xchg
enter
leave
and
mov
mov
adc
sub
les
push
shl
xchg
inc
sbb
push
push
push
fldl
js
cld
sti
ds
orb
loope
pop
xchg
imul
mov
sahf
lock
pop
xchg
fidivrs
outsl
or
mov
sub
loope
jns
lret
mov
lcall
mov
fisttpl
push
xchg
xchg
sub
xchg
pusha
into
movsb
mov
mov
repnz
or
push
cmpsl
and
jae
subb
xchg
jge
addb
outsl
repnz
fldenv
pusha
hlt
dec
outsl
jns
cmpsb
jle
fdivl
and
cs
or
push
lret
mov
xlat
cmp
xchg
rolb
scas
out
test
jno
jne
mov
lods
sbb
sub
pop
dec
adc
mov
fdivrs
sub
addr16
cli
insl
hlt
test
cmpsl
pop
fildl
dec
outsb
sub
cmp
mov
inc
dec
rcll
and
push
jmp
and
idivl
orb
movsb
add
fisttps
or
es
sbb
enter
dec
and
icebp
sbb
add
sti
push
push
dec
mov
ret
repnz
shrb
sbb
ss
gs
arpl
int
push
pop
and
push
stos
cmp
xchg
aaa
mov
mov
scas
sub
loop
mov
sbb
add
mov
pushf
ja
cmc
pop
push
push
pop
mov
and
stos
sti
xor
inc
daa
fimull
cli
push
int
cmp
xchg
push
and
fistps
jne
loope
aam
inc
repz
sti
out
add
ljmp
int3
sub
je
xchg
dec
shll
js
lea
mov
xchg
js
pop
mov
fs
fwait
add
xor
mov
xchg
or
pop
cmp
and
sub
insl
mov
das
scas
dec
jne
aam
stc
orb
pop
push
sub
mov
mov
loop
popf
mov
jb
loope
rep
loop
test
or
and
out
cmc
addl
add
test
xchg
js
mov
xlat
xor
mov
jmp
shrb
sarb
adc
cmp
inc
aas
aas
fwait
push
cmp
pop
pop
or
mov
mov
adc
add
mov
imul
lods
daa
out
test
push
push
popa
mov
xor
int3
iret
popf
add
addr16
mov
add
in
sti
cltd
cs
dec
pop
movsl
or
aaa
imul
dec
fldt
xchg
sub
out
jmp
sub
je
roll
out
fwait
mov
je
sarl
jnp
lock
mov
mov
inc
into
dec
mov
insl
lock
in
mov
xchg
dec
lds
daa
mov
or
add
jecxz
and
mov
lock
push
pop
sar
cmp
xor
test
aam
iret
or
dec
xor
mov
cmp
jns
xchg
insb
popa
dec
xchg
mov
jecxz
mov
pop
int
dec
lahf
mov
shrb
outsl
mov
push
xchg
push
inc
inc
insb
faddl
xor
mov
lea
cwtl
movl
xchg
test
movsb
jmp
pop
ret
mov
inc
push
mov
mov
xchg
shlb
fwait
xor
mov
inc
les
sbb
ficomps
mov
in
dec
clc
flds
das
ja
mov
push
sub
fs
xor
movsb
mov
push
xchg
jne
xlat
test
jno
rcrl
int
std
nop
sbb
mov
sbb
aaa
xchg
mull
sbb
scas
mov
mov
sahf
mov
scas
jp
outsb
out
daa
push
subl
fwait
mov
jns
push
lock
mov
leave
xchg
icebp
dec
and
aad
mov
mov
test
mov
jbe
mov
lret
fldt
lods
and
sti
leave
stos
movsl
dec
out
jb
test
mov
pop
push
xor
jbe
in
or
inc
mov
or
lds
add
and
mov
and
add
roll
sbb
mov
cmp
mov
or
mov
jo
and
add
jg
rolb
and
call
or
mov
and
mov
rolb
xor
push
xor
lea
jno
inc
lcall
imul
jp
or
xlat
fs
dec
xor
xchg
jmp
and
cld
inc
cmpsb
add
cld
mov
lret
lods
jl
bswap
es
cli
jnp
jo
add
clc
std
pop
mov
outsb
mov
popf
addr16
jne
xchg
and
sahf
jnp
cmp
xchg
daa
jae
and
arpl
es
pop
test
dec
pop
lds
fistl
jne
out
ficomps
push
add
aas
cltd
or
das
int
mov
dec
pop
sub
dec
adc
test
push
sbb
daa
mov
mov
test
lea
movsl
or
pop
rorl
xchg
sub
scas
repz
pop
fidivrs
jp
sbb
popa
fistpll
and
daa
insb
dec
push
push
and
nop
lret
cmp
out
adc
cmc
push
pavgw
pop
outsb
hlt
add
add
pushf
enter
mov
lcall
push
mov
xchg
cmpsl
lret
insb
notb
out
add
dec
fldt
shll
fists
inc
stos
out
int
test
and
dec
and
xor
push
xchg
iret
cmp
out
ret
push
add
cmc
inc
mov
popa
loope
push
ja
cld
xor
or
mov
mov
lea
cmp
add
or
out
xchg
repnz
push
imul
pop
imul
adc
push
in
mov
hlt
aad
rorb
push
jns
pop
lea
sar
imul
movsl
in
mov
or
negb
movsb
jge
dec
sub
addr16
js
mov
cmp
dec
shll
movsb
arpl
lahf
in
ja
pop
xchg
xchg
jl
pop
pop
rcl
xchg
jns
pop
hlt
xchg
xorl
movsl
mov
jl
dec
in
and
push
add
mov
lods
hlt
xchg
mov
test
fcmovbe
and
jmp
in
test
push
cmpsl
xor
pop
ret
cmp
sbb
mov
out
sub
pushf
into
or
lcall
leave
dec
popa
push
enter
jmp
or
mov
cmp
mov
mov
ret
out
dec
ds
mov
daa
cmpsl
lret
push
clc
loopne
jo
lret
xchg
insb
cmp
adc
icebp
pop
add
xchg
pop
data16
pop
addl
xchg
out
in
in
dec
lea
lea
mov
aaa
adc
sbb
sub
cmpl
inc
cmp
scas
mov
out
xchg
mov
lds
mov
in
in
insb
mov
push
add
push
nop
and
sbb
and
jne
arpl
in
les
aam
flds
mov
mov
sub
pushf
jne
fdivrl
test
repz
sti
inc
xchg
std
push
and
add
and
pop
xor
test
pop
mov
lcall
popa
leave
dec
add
aam
xchg
cmc
mulb
pop
fimuls
push
arpl
ljmp
and
fimuls
scas
pop
clc
into
pop
add
cmpsb
fmuls
xchg
and
xor
mov
pop
or
sbb
or
pop
pop
cwtl
mov
sahf
popl
stos
dec
addb
testb
inc
push
xchg
iret
xor
cltd
js
pop
xchg
or
jmp
fs
adc
das
or
sbb
dec
jge
push
sahf
pop
jg
sbb
mov
fs
ss
pop
ret
jp
mov
into
push
sbb
fstl
mov
mov
rclb
pop
adc
fstpl
mov
enter
push
imul
xchg
jns
xchg
pop
ret
aaa
or
inc
cltd
ja
cmp
and
and
stos
scas
lods
daa
fwait
jns
push
mov
and
mov
adc
add
cmp
mov
adc
test
mov
aam
lret
cmp
shr
lods
arpl
mov
loop
pop
mov
inc
dec
adc
mov
mov
push
mov
sub
jns
pop
mov
stc
sub
and
repz
and
pop
push
xlat
or
sub
adc
xor
gs
hlt
xlat
sub
mov
icebp
push
iret
or
add
in
lock
mov
pop
xchg
lret
jne
das
loop
push
cld
test
fisubl
cmp
idiv
pop
push
loopne
fcoml
outsb
fnstsw
insl
cli
xchg
test
xor
mov
sbb
push
popf
push
and
dec
mov
mov
push
fs
je
mov
or
fstl
rclb
sbb
fnsetpm(287
and
jnp
out
mov
or
in
out
fwait
xor
add
fistps
sbb
jmp
jg
insb
insl
aaa
aas
fdivrs
inc
or
or
mov
xor
push
dec
das
add
pop
lea
inc
inc
notl
push
test
lret
jmp
cwtl
call
nop
aad
xchg
mov
cmp
sub
lds
adc
lds
popa
push
mov
mov
dec
inc
add
ja
jl
xor
jns
rolb
and
aam
xchg
imul
xchg
inc
jnp
fsubrl
jne
mov
jmp
mov
or
sub
xchg
or
ljmp
jle
cmpb
jl
lock
and
xor
loopne
xchg
pusha
cltd
js
repnz
scas
test
cmp
xor
movsb
push
xor
push
addl
pusha
mov
push
mov
test
shlb
mov
adc
aaa
dec
jg
push
push
test
adc
add
or
inc
cmp
pop
inc
mov
pop
cmp
inc
jmp
jb
in
leave
fldenv
addb
jno
add
sti
or
inc
mov
repnz
dec
add
daa
fwait
in
out
push
mov
std
cmpsl
xchg
mov
rorl
push
mov
push
jbe
inc
out
clc
pop
cmpsb
leave
outsl
es
nop
push
out
mov
test
out
mov
push
ljmp
cmp
adc
jmp
out
pusha
jmp
dec
loopne
pop
fimull
inc
push
push
clc
popa
sub
rorb
pop
mov
ja
xor
and
dec
fsubr
mov
cmp
call
jnp
leave
jbe
jbe
inc
inc
inc
hlt
mov
scas
aaa
aaa
cmp
jecxz
aaa
mov
ljmp
jle
dec
mov
push
loope
mov
sub
frstor
dec
bndstx
hlt
mov
gs
mov
add
mov
add
adc
insl
lahf
in
or
fldenv
jmp
subl
adc
loopne
inc
push
or
test
lret
std
imul
mov
fimuls
repz
and
jl
dec
sbb
sub
in
in
enter
fdivl
push
stos
fisubrl
out
jbe
cmp
or
mov
push
add
in
cmc
add
cltd
mov
pop
jo
test
xchg
pop
outsb
sbb
bound
cltd
add
or
jge
sbb
xchg
mov
loop
roll
movsb
push
dec
and
fwait
pop
dec
adc
iret
push
stc
add
imul
jne
push
jmp
xchg
jp
xchg
push
iret
push
movsl
mov
lret
dec
xor
mov
mov
lods
mov
andl
outsb
mov
cld
and
int3
mov
cmp
aam
xchg
push
insb
popa
arpl
das
adcl
jne
xchg
pop
inc
pmullw
fadd
mov
dec
jmp
jge
mov
out
iret
mov
jge
xor
jae
dec
arpl
and
jne
mov
lret
jno
das
addr16
sub
test
xchg
jne
jle
add
jecxz
mov
push
lods
mov
iret
into
or
mov
lret
movsl
xchg
add
cld
adc
nop
inc
xor
add
sub
pushf
bound
inc
mov
add
stc
call
les
repnz
mov
xor
iret
adcb
jns
ds
popa
xchg
in
push
sahf
rcll
out
jp
or
inc
inc
js
test
push
push
mov
add
add
pop
push
pop
jne
out
add
mov
jns
ljmp
adc
jbe
insl
ds
xor
rcll
sbb
fsubrl
sbb
mov
out
pusha
or
cmp
or
shll
fiaddl
lss
mov
femms
push
cmp
cwtl
mov
stc
movsb
rcl
xor
lret
paddsw
mov
dec
push
int
in
mov
mov
jmp
xor
jo
and
cmpsb
jg
out
sub
jae
inc
dec
mov
add
jbe
cmpsl
or
jne
cmp
imul
xor
dec
mov
inc
inc
sbb
push
int3
jns
xchg
outsb
jnp
xchg
push
or
loopne
xor
jb
testb
xchg
aad
xchg
push
jle
mov
xchg
repnz
xor
add
cld
jmp
in
mov
das
sbb
fadd
popa
push
call
mov
xchg
mov
cmpb
rolb
cs
inc
add
pop
mov
popf
sti
jecxz
into
in
sti
call
pop
into
cmpsl
pusha
imul
test
nop
mov
icebp
mov
xor
cld
mov
push
aaa
shll
add
gs
jno
popa
xchg
icebp
inc
push
inc
test
add
mov
cmc
push
and
jne
or
lds
outsb
jnp
xor
repz
iret
sub
arpl
enter
into
dec
push
sub
inc
inc
cmp
in
sub
ljmp
stc
lods
push
sub
iret
cwtl
stc
add
out
fs
cmp
or
jl
mov
nop
inc
sbb
scas
dec
pop
jl
out
stc
jp
in
enter
sub
movb
scas
add
dec
pop
lock
inc
adc
pop
pop
sub
push
xchg
es
inc
ror
imul
sub
lods
or
sub
shl
gs
sub
int3
add
out
popa
scas
lahf
out
xor
mov
push
push
stos
outsb
pop
jae
in
sub
insl
out
ss
add
out
and
dec
movl
fmul
in
outsb
push
adc
sbb
adc
sbb
sahf
or
sbb
inc
jg
leave
mov
or
mov
xchg
mov
xor
add
aad
cmp
ficoml
push
inc
push
ja
jl
xor
sti
sub
aad
sarb
mov
fisubrs
gs
add
enter
movsl
pop
adc
test
arpl
outsl
cmp
test
cmpsl
jecxz
xchg
mulb
lock
mov
xchg
mov
pusha
and
into
mov
das
loope
adc
repz
outsb
lods
or
scas
adc
sub
dec
ja
pop
sbb
jb
orl
add
rclb
pop
inc
lcall
in
cmp
xor
aad
push
in
mov
xor
in
aas
pop
pusha
repnz
popl
in
and
mov
pop
mov
jnp
mov
mov
dec
rolb
push
insb
xchg
lea
cwtl
jb
pop
sbb
add
daa
cld
xor
adc
xor
outsl
jp
in
push
aam
sub
pop
fcompl
cmp
ret
incb
addr16
inc
mov
mov
xor
setnp
repz
jne
cmp
sub
sub
arpl
cli
inc
in
dec
lret
sub
add
nop
xchg
jae
int3
add
push
xor
sbb
movsl
jae
sbb
dec
popa
adc
adc
lcall
pop
push
pushf
mov
icebp
lock
pop
popa
fidivs
inc
cmp
or
dec
sub
fs
fmul
insb
adc
test
inc
mov
pop
pop
xchg
stc
inc
inc
push
push
dec
jmp
popf
push
and
negb
test
fwait
enter
mov
xor
fmuls
sbbb
mov
xlat
rorl
inc
daa
loopne
sti
mov
pop
add
xchg
shll
dec
out
imul
arpl
les
nop
std
push
mov
js
sbb
push
lods
mov
jae
push
out
int3
es
jnp
jns
pop
mov
push
adc
lock
ds
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
mov
ficoms
fldenv
das
jnp
daa
lds
lock
cld
and
leave
or
jns
and
into
dec
add
jmp
adc
jg
xor
shll
lds
lods
scas
pop
sbb
movsl
rclb
test
xchg
push
sbb
dec
call
hlt
pop
ret
jae
mov
pop
xlat
mov
ds
shrb
xchg
fwait
mov
inc
dec
push
incl
inc
in
xor
pushl
aas
dec
pop
jnp
jecxz
outsl
mov
pushf
sahf
ljmp
add
pop
ljmp
jo
jnp
sbb
in
mov
jns
scas
jmp
and
jl
addl
dec
mov
fwait
enter
enter
mov
jecxz
sub
test
aam
stos
pop
and
cmpsl
push
popf
arpl
push
mov
ds
daa
in
stc
jle
rcr
cltd
jno
shlb
push
sbb
dec
mov
hlt
jge
sahf
mov
sbb
dec
xchg
adcb
xchg
les
sbbb
scas
test
hlt
or
out
mov
pop
mov
mov
repnz
mov
inc
pop
mov
out
ret
jns
push
ret
rcrl
or
jecxz
jecxz
dec
push
push
jecxz
dec
imul
jle
fiadds
fcomps
pop
dec
mov
loope
sbb
dec
push
pop
jo
lods
mov
cwtl
push
ret
lods
lret
addr16
xchg
mov
add
mov
iret
rorl
mov
sbb
ss
jecxz
add
pop
cmp
adc
or
push
imul
clc
in
and
add
pop
call
push
enter
inc
adc
sbb
cmp
inc
adc
sub
fldt
ss
dec
mov
xchg
jno
scas
lock
in
sti
pop
sbb
dec
ja
adc
dec
and
arpl
cmpsl
bound
stos
cmp
orl
xchg
iret
aam
loopne
jge
outsl
test
jmp
inc
fdivs
enter
mov
imulb
add
inc
inc
mov
andl
sub
cmp
scas
push
sub
lret
fidivs
inc
inc
jmp
incb
adc
push
add
lcall
jnp
lcall
insb
adc
pushf
sbb
cmp
loopne,pt
fldl
xor
icebp
adc
pop
mov
shr
ret
inc
xchg
js
test
popf
lock
out
xor
jg
xor
jbe
je
aam
pop
mov
popf
xchg
loopne,pn
outsb
dec
pop
ja
jns
xchg
add
divl
push
in
mov
mov
sbb
or
dec
mov
loope
aam
scas
sarl
imull
fstpt
push
or
sub
daa
mov
repnz
add
mov
lods
mov
xchg
lods
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
pop
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
mov
inc
lods
test
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
xchg
or
