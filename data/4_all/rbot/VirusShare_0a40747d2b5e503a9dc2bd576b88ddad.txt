push
add
push
mov
add
idivb
lea
push
incb
aas
pop
prefetchnta
pushl
add
aaa
push
adc
cmp
je
sti
pushf
or
add
test
adc
push
cld
les
cmp
add
js
push
or
mov
mov
mov
pop
pop
leave
ret
mov
call
push
or
test
je
pop
push
push
lea
mov
add
mov
and
inc
fnstenv
ret
stos
out
add
orb
orb
pop
pop
inc
or
rol
cmpsl
pop
xor
push
pop
sti
scas
or
push
pushl
mov
xchg
jle
clc
pop
test
cwtl
je
testb
or
jne
inc
arpl
stos
mov
add
lea
cwtl
or
das
stos
push
add
jmp
xor
inc
sbb
sub
insb
in
mov
sbb
push
push
pop
lds
mov
pop
scas
and
pushf
orl
repnz
vunpckhps
les
insb
ret
orl
shll
leave
lret
inc
lock
subl
jecxz
or
lods
pop
push
push
insb
mov
aas
mov
mov
test
add
inc
mov
push
fsubrs
loopne
sbb
mov
inc
test
or
jnp
fists
push
inc
lret
pop
and
nop
mov
push
adc
push
jnp
sbb
aaa
push
hlt
or
inc
adc
stc
mov
mov
and
mov
les
jno
sub
cwtl
jmp
push
add
jnp
or
push
sarb
add
mov
push
jle
leave
mov
pop
clc
push
hlt
subb
in
loopne
mov
mov
or
or
mov
sbb
mov
decl
mov
pop
and
mov
shlb
push
mov
and
cltd
jno
push
mov
cmp
pop
inc
lahf
inc
out
inc
notl
push
test
cmp
adc
adc
mov
push
sub
push
mov
jge
cmp
and
push
data16
cld
xchg
push
mov
fildll
sti
rorl
or
push
push
and
mov
and
push
xor
xchg
dec
and
dec
xchg
aaa
nop
call
nop
mov
cmp
mov
xor
mov
sbbl
add
testl
popa
mov
and
cmp
pop
lcall
sbb
sbb
stc
cs
lock
adc
les
pop
clc
or
adc
mov
movsb
push
xor
or
mov
lahf
xor
adc
sti
dec
sub
je
or
dec
pop
add
cwtl
cmp
divl
lcall
dec
or
dec
testb
cmp
stc
push
jno
inc
adc
test
rorb
popf
dec
mov
in
and
enter
ja
cld
adc
adc
js
subb
push
out
jmp
dec
mov
sbb
sub
dec
and
push
and
in
fwait
leave
adc
jne
cmp
roll
inc
mov
jo
jecxz
cs
adc
cmp
or
push
xor
nop
and
xchg
ds
shl
jne
ss
inc
ret
adc
mov
push
dec
adc
shlb
dec
adc
aad
cmp
ds
js
push
dec
aas
push
and
mov
and
mov
push
imul
dec
mov
sbb
leave
cmp
fs
or
xchg
sbb
pop
dec
jae
jne
sub
add
mov
fmull
xchg
js
fsubrs
jg,pn
loopne
add
pop
dec
push
pop
inc
pop
mov
or
aas
mov
test
push
mov
ds
push
push
adc
mov
or
xchg
sbb
jo,pn
pop
jmp
inc
lock
test
je
xor
dec
dec
mov
pop
cld
cmpl
jl
mov
add
test
pop
hlt
je
popf
and
nop
and
push
or
das
xchg
mov
sti
push
and
hlt
lods
clc
lea
movl
sub
rcrb
pop
cs
inc
nop
inc
lock
add
push
push
push
rcl
lea
rep
movl
mov
inc
or
inc
lods
jmp
lcall
repnz
adc
or
hlt
mov
sbb
aam
mov
sbb
xor
cmp
sahf
orb
rclb
push
shl
push
lret
int3
mov
xchg
mov
fwait
sub
mov
pop
push
mov
xor
mov
pcmpeqw
mov
hlt
inc
decl
push
jno
push
mov
cmpsb
adc
punpcklwd
jo
inc
sub
sbb
jp
cmpsl
xchg
test
sub
add
push
jmp
cwtl
orl
je
cmpsl
push
inc
or
popa
int3
insl
cmpsb
rcrb
mov
push
sbb
cmp
xor
push
ret
cmp
enter
pop
mov
add
jne
hlt
pop
aam
sbb
pop
xchg
or
pop
xchg
js
mov
es
xor
adc
sub
xor
xchg
sub
jbe
cltd
add
sbb
sbb
rcll
push
add
repnz
cmp
jo
sub
mov
sub
int
sub
add
cmpsl
pop
ret
add
dec
and
mov
sub
dec
mov
sti
or
and
push
or
aaa
test
or
subb
out
or
repz
push
movb
mov
and
sbb
test
cli
push
mov
loopne
jl
jmp
jmp
jns
sbb
sti
and
mov
or
add
jge
xchg
cld
cmp
fcmovnb
lock
leave
mov
sub
sbb
int
pop
sbb
rorl
arpl
cld
xor
dec
ss
or
mov
sub
push
adc
inc
adc
push
mov
push
add
mov
xor
mov
dec
and
mov
lret
or
je
sub
pop
sub
test
mov
pop
push
stc
cmp
pop
shlb
mov
sub
xor
xchg
mov
mov
popf
xor
sbb
clc
dec
mov
dec
in
push
pop
pop
pop
fimuls
cmpb
sub
add
mov
add
xor
and
cmp
dec
sub
jge
inc
and
cmp
je
rcrl
xchg
xor
or
hlt
icebp
scas
enter
pusha
rcll
in
cmp
test
or
push
inc
and
mov
sub
dec
mov
xchg
inc
jp
dec
push
pushw
mov
cmp
test
mov
mov
push
inc
scas
inc
pushf
xchg
adc
idivb
sub
xchg
xorl
mov
into
pushw
mov
je
inc
push
sub
jmp
cmp
insb
xor
loope
xchg
xor
stos
addr16
push
mov
push
stos
pcmpeqb
ret
fidivrs
xchg
pop
jnp
push
mov
inc
pop
mov
inc
add
cwtl
cmc
jne
ftst
mov
mov
inc
push
sub
cmp
loope
aam
xchg
test
data16
das
adc
pop
out
push
lods
nop
jge
inc
adc
push
push
data16
or
xchg
and
in
sbb
pop
mov
xchg
mov
mov
sub
xchg
push
jecxz
adc
sub
pop
inc
ljmp
js
xchg
lock
mov
bound
inc
jno
dec
adc
and
mov
rcrb
xor
push
inc
inc
cwtl
test
insb
xchg
fistl
or
mov
or
xor
cs
cld
sbb
push
sub
mov
mov
add
idivb
pop
sub
nop
push
mov
adc
sub
push
add
mov
jns
cmpsl
inc
or
enter
clc
test
std
repz
ja
je
shll
pop
xor
inc
add
xchg
push
pop
push
jno
adc
pop
inc
gs
push
or
cwtl
add
xor
adc
sub
clc
inc
mov
adc
cld
cmpxchg
dec
in
cwtl
mov
loop
inc
ret
push
or
rcrb
xchg
arpl
sub
mov
popf
inc
daa
pop
adc
fsubl
mov
push
pop
dec
xchg
dec
mov
sub
insb
add
push
mov
xor
fsubl
inc
sbb
xor
cmp
cmpsb
bound
rcr
shlb
jne
cmc
pop
mov
xchg
inc
sbb
cs
cmp
jo
fnstcw
xchg
sub
xor
subb
cltd
movsb
scas
add
push
push
testb
test
pop
xorl
add
xchg
shl
add
stos
shrb
lret
pop
xor
mov
in
push
pushf
repz
push
pop
rcrl
call
pop
xchg
add
adc
xor
pusha
in
notl
and
lods
cltd
cmp
mov
clc
jns
test
mov
adc
sbb
cmc
mov
add
jno
and
cwtl
pop
push
adc
lea
or
in
or
inc
fdivrl
push
add
adc
out
test
or
in
pop
dec
ljmp
jg
subb
decl
xchg
mov
js
rclb
je
push
mov
lret
xor
and
jmp
mov
push
addr16
sbb
hlt
dec
jns
cmpsl
mov
ret
icebp
pop
mov
xor
sbb
mov
or
push
mov
mov
sti
add
or
push
cld
std
dec
lea
je
sbb
test
insb
cmpl
push
push
mov
pop
cmp
or
sub
mov
sti
dec
es
adc
jb
cmp
xor
pushf
data16
pushf
cmp
jb
gs
mov
sbb
mov
push
push
sti
and
loopne
dec
fsubs
sarb
in
jno
aad
adc
hlt
inc
jae
adc
cwtl
dec
fldt
sbb
mov
inc
pop
test
sub
push
aad
cld
inc
lds
pushw
loop
fstpt
xchg
jmp
dec
add
call
cmpsb
and
dec
aas
push
enter
mov
iret
jne
jo
xor
mov
arpl
mov
adc
sbb
test
add
repz
adcl
sub
fbld
xchg
mov
leave
cli
js
shrb
mov
xor
dec
add
cwtl
adc
lea
call
call
add
mov
inc
xor
icebp
lea
sub
call
cltd
jns
shll
je
mov
xor
cmp
lea
gs
hlt
or
fs
aaa
jo
pop
lret
inc
jne
push
imul
push
inc
jne
das
sub
inc
push
mov
mov
fsubrs
dec
add
inc
mov
enter
adc
clc
pushf
push
pop
les
cmp
popf
hlt
or
pop
add
movl
sbb
pop
or
jb
mov
push
inc
movsb
push
push
fcomps
data16
dec
or
daa
push
dec
pop
or
sbbb
mov
sbb
xorb
mov
or
pushf
hlt
cmc
and
and
add
sub
push
fs
mov
sbb
cmpb
or
add
jb
stos
dec
mov
and
mov
rol
xchg
pusha
hlt
icebp
orb
and
sub
call
or
shl
scas
dec
jge
adc
push
mov
mov
xor
movsl
xor
stc
adc
mov
and
push
cmpsb
xchg
nop
or
push
ficoml
inc
and
mov
jmp
shrl
and
nop
jb
sbb
adc
xor
movsb
mov
test
mov
xchg
pushf
loope
and
hlt
pop
and
les
xor
inc
jl
rolb
fs
js
xchg
push
and
pusha
loope
sbb
push
frstor
cmp
and
or
cmp
adc
sbb
push
hlt
add
push
or
sarl
mov
xchg
sbb
or
push
fsts
sbb
in
test
inc
enter
inc
add
lods
les
jno
setle
sub
mov
adc
jno
jb
sbb
and
adc
cld
fdivs
test
push
les
inc
pushf
cmp
inc
xchg
lahf
daa
sub
pop
aad
andl
push
repnz
inc
push
lret
cli
jecxz
sub
pop
xor
jo
js
aas
leave
push
or
adc
adc
cmp
int
cmp
and
stos
and
cmc
dec
aas
mov
or
std
dec
jg
and
push
and
xchg
movsb
dec
xor
movsb
mov
xchg
test
sbb
in
cmp
inc
pushf
shrb
enter
popa
mov
dec
insb
dec
and
ret
push
jnp
mov
bound
adc
loop
sbb
and
insb
jge
pop
adc
xlat
and
cmp
and
inc
and
inc
xor
push
popf
js
lcall
negl
in
js
xchg
mov
sarb
xchg
mov
inc
adc
mov
lds
test
inc
xchg
and
inc
inc
and
and
adc
mov
mov
xchg
xchg
jl
sbbb
push
and
je
pop
sbb
jne
pop
js
adc
push
das
cld
add
in
jne
xor
imul
mov
sbb
mov
fsts
adc
sbb
push
and
adc
adc
mov
pop
or
adc
aad
adc
hlt
push
cmp
ret
les
gs
xchg
add
in
inc
pop
xor
mov
inc
or
testl
ret
int3
js
xchg
mov
outsl
push
loope
or
mov
adc
enter
or
adc
or
cmp
jnp
nop
js
dec
or
xchg
or
lea
inc
push
cmpsl
ds
pop
clc
and
push
aad
and
jb
gs
in
mov
jmp
add
cmc
xor
xor
notb
push
mov
les
sbb
incl
jl
bound
or
sti
mov
sub
sbb
mov
cmp
and
xor
push
xchg
adc
test
lock
mov
xor
inc
sahf
popa
subb
adc
xchg
adc
mov
lea
sar
or
and
mov
js
test
aaa
xchg
lods
loop
sbb
xchg
icebp
mov
sbb
inc
cmpb
inc
je
mov
inc
mov
push
dec
jp
dec
push
je
jb
leave
xor
movsl
clc
mov
pusha
aam
xor
in
int3
xchg
int3
inc
jnp
and
and
adc
lcall
hlt
cmp
jae
or
sarl
adc
popf
adc
bound
or
inc
mov
mov
xchg
int3
sbb
adc
mov
cmp
xchg
jmp
xchg
lock
adc
xchg
lock
lock
xchg
sarl
mov
mov
cmp
ret
mov
out
mov
add
jne
mov
sub
orl
and
setns
jge
outsl
shrb
pop
inc
out
jns
adc
int
mov
and
outsb
or
sar
sub
sub
movl
adc
adc
jmp
lea
out
adc
push
push
cmp
inc
cmp
jne
jmp
rorb
xor
outsb
add
loope
imull
mov
mov
frstor
dec
loopne
sub
fwait
pop
sub
mov
ss
cwtl
and
pop
mov
pop
xorb
or
shlb
add
test
mov
ret
dec
dec
pop
gs
subb
popf
xor
xchg
faddl
mov
sbb
ret
xrelease
jle
cmp
rcrb
movb
pop
push
incb
add
movsbl
cmp
jl
fidivs
push
jns,pn
cmp
jge
sub
cmp
testl
or
dec
or
out
xchg
dec
mov
or
mov
xor
ss
shll
xor
add
dec
sarl
sbb
add
push
mov
or
or
mov
jno
aam
or
sar
adc
and
js
clc
test
in
jne
and
jle
in
cld
pop
in
or
js
push
fbstp
test
ret
pop
xchg
or
push
sub
or
push
test
test
adc
push
mov
shl
mov
pop
in
out
xor
mov
sti
push
sub
test
mov
mov
jg
dec
fildll
popf
mov
xchg
pop
shl
stos
rcrl
add
sbb
repz
inc
push
add
aam
adc
imul
inc
je
rcl
mov
lds
mov
or
mov
pop
add
daa
add
sete
inc
and
es
es
pushf
xchg
enter
roll
or
adc
pop
out
fs
stc
adc
sti
mov
repz
js
enter
add
pop
jne
pop
decb
jmp
or
or
mov
clc
or
inc
mov
inc
cwtl
or
pop
inc
rcrb
push
pop
mov
lcall
shll
inc
add
push
movsb
lds
idivb
xchg
call
push
leave
xchg
pop
sarl
dec
or
test
push
xchg
mov
or
fsub
and
and
ret
push
push
sbb
cwtl
out
push
or
jns
mov
gs
and
xor
inc
scas
push
ljmp
cltd
cmp
push
gs
dec
adc
out
pop
pop
data16
test
sub
or
or
out
or
addr16
ds
je
lock
sar
fucom
jo
rolb
mov
repz
push
sbb
pop
xchg
out
inc
cmpsb
sbb
adc
shrb
jb
xor
leave
sbb
sub
pop
push
or
nop
pop
add
jecxz
sbb
testl
adc
pop
shrl
rcrb
bound
mov
xor
push
lret
lret
bound
sub
add
xchg
mov
cltd
pop
or
lret
mov
sub
jmp
clc
sbb
xor
xchg
sbb
xchg
or
adc
mov
mov
xchg
mov
pop
mov
adcb
div
cmp
jae
or
test
lret
cmp
jns
mov
movb
inc
xor
fisubrs
lods
mov
add
and
push
cmp
inc
stos
cmp
mov
mov
and
in
popf
pusha
rorb
sub
sahf
xchg
xor
rclb
or
cltd
cwtl
mov
cmc
or
inc
sahf
test
mov
je
shl
into
jecxz
xchg
out
adc
mov
into
hlt
repnz
lods
ret
mov
sbbl
lahf
hlt
and
push
bound
lret
or
les
adc
push
cwtl
data16
mov
popf
push
sbb
das
sub
sti
adc
adc
mov
pop
les
mov
adc
imul
arpl
jmp
mov
ljmp
adc
into
sub
mov
push
push
xor
xor
pop
xchg
mov
adc
hlt
ljmp
cmp
xchg
insb
hlt
scas
or
dec
fwait
push
adc
fcmovb
les
inc
xor
push
lock
testl
xor
mov
push
cwtl
fdiv
adc
mov
push
dec
and
mov
repz
and
xor
frstor
in
loop
int
loop
fstl
lods
dec
pop
lret
add
and
pop
sbb
xor
push
mov
mov
dec
outsl
xor
cmp
insl
xor
jmp
push
in
xor
mov
dec
push
fistps
fs
pop
inc
dec
enter
je
sbb
test
lcall
inc
mov
or
jnp
add
push
pop
call
adc
sbb
push
jae
sti
in
out
les
mov
adc
cmp
pusha
pop
push
mov
ss
pushf
jg
jmp
ret
and
je
movsl
xor
int
mov
loopne
mov
xor
fs
fwait
inc
pushf
int3
adc
adc
fdivr
or
inc
sbb
cli
test
pusha
int3
je
xor
and
and
mov
in
and
test
jmp
add
aaa
or
sti
pop
out
andnps
icebp
and
push
aaa
jmp
push
push
push
or
xor
mov
dec
push
mov
cmp
inc
mulb
inc
xlat
mov
js
je
pop
mov
pop
cmc
adc
mov
inc
loop
test
push
out
clc
insb
adc
mov
jnp
add
test
push
notb
and
mov
shl
xchg
mov
je
cmc
test
sbb
xorb
cmp
js
fwait
pop
movl
test
movsl
sub
or
pushf
ss
push
pop
pusha
add
clc
add
sbb
push
and
enter
cmp
adc
in
daa
fldenv
mov
lds
clc
lret
adcb
jb
sub
adc
loop
ds
inc
xchg
sub
jns
xor
repnz
aam
js
jge
cmp
push
nop
pop
nop
cmp
and
cltd
aam
mov
xchg
cmp
and
addb
mov
adc
adc
icebp
push
jnp
mov
cltd
and
push
xor
fwait
mov
mov
push
inc
lret
mov
push
mov
movsb
pushf
xchg
jge
fiadds
push
mov
push
lret
out
gs
xchg
in
mov
sbb
or
or
jae
pop
jmp
jo
es
out
in
mov
jmp
fs
test
loope
ljmp
movsl
out
or
leave
xchg
rcll
or
and
adc
dec
rorb
gs
xchg
in
adc
xchg
leave
inc
sub
jge
lea
in
dec
adc
and
cmp
jp
add
jb
ss
sbb
lock
lahf
adc
dec
mov
cmp
je
outsl
loop
test
out
sbb
push
js
sub
dec
and
push
leave
iret
cmp
stc
nop
xchg
inc
test
jne
mov
das
mov
pop
std
lods
daa
mov
jns
movhps
dec
leave
repnz
sub
inc
or
ss
adc
xchg
adc
outsb
adc
or
ret
enter
bound
fdivrl
test
sbb
es
lret
faddl
ret
pushf
sbb
adc
fwait
pusha
cltd
mov
xor
stc
xchg
popa
out
icebp
push
daa
sbb
movsb
imul
dec
cmp
push
aas
pop
outsb
fs
outsb
mov
cmpl
out
not
xchg
add
aas
push
sbb
sub
xor
in
fmull
inc
adc
push
mov
rcrb
cmp
enter
repnz
jnp
daa
dec
addr16
jo
cli
push
or
push
icebp
add
and
jp
fcoml
push
in
or
movsl
cwtl
adc
sbbl
pop
in
outsl
sub
sbb
adc
emms
fwait
addr16
cmp
call
dec
mov
or
push
dec
imul
mov
out
pop
out
fcomps
leave
dec
jecxz
test
test
xchg
inc
dec
push
sub
inc
inc
jne
cmc
inc
dec
jmp
cmp
stos
adc
cmp
clc
cmp
mov
cmp
or
mov
sbb
das
hlt
lea
add
ljmp
adc
sbb
push
mov
xchg
imul
inc
clc
fadds
stc
es
icebp
int3
movhps
mov
sub
sbb
or
add
dec
icebp
cmpsl
faddl
jne
aaa
xor
pop
push
mov
stos
adcl
mov
mov
xor
insl
cld
out
mov
das
pop
add
push
xchg
and
adc
insb
outsl
cmpsb
pop
and
enter
lcall
or
cmp
cmpb
pop
inc
jl
sub
fyl2x
insb
dec
pop
jo
or
pop
jnp
inc
test
inc
mov
jb
cmp
and
cmp
inc
push
and
xchg
cmp
mov
mov
sbb
lods
adc
pop
inc
lds
xor
push
and
cmp
push
and
test
aaa
bound
inc
lret
and
jl
or
gs
inc
lret
ss
cld
sbb
pop
xchg
hlt
loop
cmp
push
and
lods
rolb
test
dec
xor
lock
fsubrl
aam
jl
rorb
lock
mov
push
and
mov
sbb
dec
loop
sub
or
pop
jmp
nop
movb
inc
movsb
mov
or
add
sbb
pusha
mov
push
das
sub
push
dec
mov
data16
push
lock
mov
pusha
jnp
in
mov
or
movsb
ret
or
inc
js
icebp
xchg
popa
and
ret
push
sbb
xchg
popa
push
bound
mov
ret
mov
loopne,pt
push
icebp
xor
es
and
push
ljmp
loop
lds
mov
icebp
in
cmp
test
cmp
xchg
sub
push
inc
and
mov
lret
xor
xchg
adc
sub
lea
and
and
adc
les
fidivrs
call
or
push
push
dec
push
pushf
ds
cmc
adc
test
loope
jmp
jne
neg
out
lods
mov
shll
and
in
push
jge
lea
out
pop
and
enter
push
enter
insl
inc
lret
out
xor
je
mov
or
test
push
mov
pushf
je
cmpsb
or
ret
xor
je
push
mov
cltd
push
or
or
test
jne
fnstenv
or
xchg
sub
or
mov
aad
pusha
xchg
adc
jne
mov
inc
xor
or
mov
and
inc
pop
daa
fsubl
jnp
jmp
imul
push
push
and
lret
inc
and
or
mov
or
jecxz
sbb
push
das
jg
imul
mov
adc
mov
ret
cmpsl
lea
jnp
inc
lock
push
adc
pop
jmp
xor
fisubl
sbb
repz
xor
cltd
adc
int
stc
and
mov
or
mov
sub
sbb
inc
das
jno
mov
mov
and
adc
divb
test
pop
and
adc
xchg
inc
lds
mov
mov
out
dec
inc
inc
adc
pop
enter
sub
sub
mov
inc
leave
fs
mov
and
mov
and
mov
clc
enter
mov
mov
push
mov
push
and
mov
rcr
mov
mov
js
dec
and
cli
out
data16
pop
and
fcoml
mov
adc
and
shl
rcrl
aas
and
adc
loop
cmp
mov
les
popf
adc
mov
jbe
in
push
adc
js
mov
test
and
sbb
je
pusha
cmp
and
fs
sbb
pop
adc
dec
mov
pop
mov
sub
or
js
pop
sbb
pop
out
sbb
cmp
iret
ja
icebp
mov
and
sbbb
icebp
iret
ror
cltd
xchg
adc
andb
iret
cmp
dec
ds
cld
cmp
mov
mov
sub
mov
mov
ret
cmp
mov
orb
bound
push
xor
iret
xchg
iret
adc
inc
shlb
ss
push
mov
enter
or
pop
inc
leave
test
leave
js
inc
lret
lret
lock
xor
sub
popf
push
test
pop
imul
repnz
dec
and
inc
push
leave
sbb
lret
je
lret
test
mov
cmp
dec
les
popa
xorl
jge
mov
pop
mov
adc
cmp
sub
bound
cmp
adc
sub
or
xor
adc
adc
xor
test
test
mov
andb
ret
and
lock
mov
adc
lret
pushf
pop
loopne
sub
push
fsubrl
test
push
fdivs
into
jb
cmp
test
xchg
cmp
mov
cmp
adc
enter
xor
pop
in
popa
int
mov
sub
out
into
scas
dec
jg
xor
sbb
pop
mov
in
insl
rcll
imul
xor
and
sbb
mov
outsl
cltd
lcall
xor
pop
lods
lahf
push
shrb
mov
cwtl
mov
mov
mov
jbe
insl
repz
lock
in
inc
pop
lods
mov
or
or
pop
cmp
out
xor
je
sub
mov
dec
notl
lds
mov
dec
xchg
push
push
mov
sub
or
cmp
in
sti
lds
popf
out
or
and
das
mov
and
fnsave
and
xchg
inc
mov
xor
xor
test
add
mov
mov
stc
cmpsb
pop
cli
mov
xor
push
in
in
jg
popa
ds
mov
loopne
mov
push
cmp
jne
xchg
fmuls
push
das
adc
stc
xlat
in
shlb
in
pop
jle
pop
loope
sub
sub
fnstenv
lods
push
inc
pop
adc
fisttps
xor
mov
js
push
cmp
push
sub
xchg
cld
cmp
mov
mov
fwait
in
in
cmp
lret
je
push
jno,pt
outsl
mov
adc
or
and
in
sub
rolb
stos
adc
cmp
mov
push
xchg
pusha
xor
cmp
jle
add
mov
push
mov
stos
add
adc
out
into
mov
scas
lods
inc
test
inc
xor
and
inc
hlt
nop
inc
ds
fsubp
mov
imul
in
out
lods
push
rorb
lcall
mov
mov
test
out
xor
cmp
or
test
push
test
add
mov
pop
adc
cmpsb
stos
std
mov
and
push
pop
movsl
stos
fstpl
jae
and
mov
add
sbb
repz
cmp
fdivl
xchg
rclb
jge
xor
sbb
sbb
pop
and
ja
les
dec
and
int3
sti
dec
out
sbb
je
adc
call
rclb
jmp
push
cmp
popf
jb
bound
mov
out
inc
jo
cmpsb
add
lret
imul
repz
cwtl
dec
pop
loope
xor
adc
lods
push
rcrb
es
lahf
dec
ror
push
mov
shl
push
repnz
mov
cmp
inc
jno
adc
test
mov
in
inc
dec
mov
nop
repz
jl
mov
rcrl
loop
icebp
pushf
repz
aas
adc
sbb
lret
push
pop
mov
pop
push
rolb
add
ret
std
stos
add
test
faddl
xchg
scas
je
push
lahf
push
push
sub
int3
mov
and
push
and
mov
sbb
pop
test
das
dec
repnz
mov
cs
and
arpl
jp
mov
mov
add
js
rcll
pushf
mov
xor
cwtl
cmp
mov
lods
push
xchg
xor
je
and
mov
push
sub
dec
push
and
mov
mov
insb
sub
push
dec
mov
fnstsw
sbb
push
mov
or
fisttpll
addr16
jl
xor
rorb
add
cwtl
jmp
push
outsb
jecxz
and
jno
pop
push
xor
and
push
pop
movsb
or
cmp
pop
cmp
jbe
out
lea
or
dec
or
cwtl
sub
stos
or
adc
adc
mov
daa
je
xor
or
mov
push
add
mov
repnz
out
out
cmp
enter
cmpsb
lods
sub
enter
adc
push
jne
push
outsb
jl
inc
xchg
jo
add
je
cmpb
stos
sub
jg
mov
jno
sub
adc
mov
or
pop
pusha
mov
dec
pop
adc
and
jno
mov
movsb
adc
leave
sub
adc
or
inc
push
les
push
xchg
cmp
pop
push
divl
lret
push
mov
nop
imul
pushl
ror
add
cltd
roll
pop
or
inc
push
lret
mov
repz
ds
pop
mov
in
pushf
movsb
rorb
ret
jle
das
cld
fucomi
inc
sub
or
and
push
loop
mov
decb
fs
test
or
ds
inc
sub
push
jne
mov
adc
cmpsl
ds
aaa
or
adc
int3
push
lret
cwtl
pop
in
adc
sar
mov
iret
adc
movsl
pop
in
les
nop
arpl
sbb
and
outsb
mov
cmp
adc
sbb
and
and
mov
adc
mov
inc
lret
sti
cmp
xor
test
lds
pop
push
xchg
stos
xor
pop
cmp
cmp
mov
repz
sub
test
in
cmp
xor
push
adc
dec
mov
mov
icebp
sbb
cltd
fstl
decb
cmp
lea
jecxz
loop
xchg
out
dec
bound
fdivr
mov
pop
arpl
inc
sbb
mov
inc
ljmp
repnz
or
imul
fwait
cwtl
jge
inc
stos
leave
in
outsb
fs
fcmovne
push
lock
inc
sbb
repnz
xchg
dec
pop
loop
clc
sub
sbb
stc
shll
addr16
enter
clc
adc
ficompl
adc
mov
and
and
orb
inc
adc
dec
lea
xor
or
and
inc
loop
stc
sbb
ljmp
loopne
mull
es
push
in
lret
enter
and
out
pop
addr16
imul
test
mov
les
stos
adc
or
sbb
sbb
cltd
test
mov
js
out
test
and
test
inc
out
mov
inc
shll
sub
test
mov
stc
xchg
adc
popf
mov
push
leave
cmpsl
pop
dec
mov
in
adc
inc
mov
std
adc
xchg
fnstenv
lcall
sbb
and
push
and
dec
sbb
mov
sub
sahf
addr16
leave
sti
loopne
faddl
jb
fistps
and
jg
xor
test
shlb
shrl
sbb
addl
lret
test
push
adc
in
int3
sbb
jo
cmp
adc
test
mov
and
loop
int
and
mov
push
shrb
inc
js
adc
dec
call
xchg
inc
iret
test
js
inc
rolb
shl
pushf
in
nop
inc
iret
and
shll
inc
inc
test
test
repz
dec
inc
sbb
cmp
cwtl
ret
ret
cmp
cwtl
and
adc
stc
repnz
lds
jl
mov
ret
inc
sbb
and
jp
xchg
mov
sbb
shr
in
mov
test
push
pop
outsl
dec
sbb
pop
push
inc
jl
jbe
outsl
xchg
or
in
push
repnz
je
sti
dec
fnstenv
adc
inc
jmp
jge
xorb
fmul
mov
lret
iret
push
xor
int
ficoml
mov
mov
mov
call
inc
mov
dec
cmp
in
pop
mov
push
jo
call
adc
mov
cmp
jmp
cmp
dec
lret
jb
cwtl
loop
fcoml
dec
fsubr
adc
ja
lret
push
test
adc
jge
mov
and
dec
push
xorl
and
loop
push
or
xchg
or
dec
sub
lret
loop
jb
adc
popf
mov
xchg
outsl
dec
and
ffreep
jg
sbbb
sub
push
imul
lods
sub
or
pop
push
icebp
sti
push
pop
pop
out
leave
aad
adc
fimull
clc
rclb
hlt
je
push
and
stos
push
cld
sar
mov
sbb
sar
inc
adc
add
jae
inc
adc
jne
or
fstpt
loopne
test
je
bound
jo
loopne
xchg
leave
rorl
inc
mov
imul
jnp
xchg
cwtl
stc
push
shll
adc
adc
mov
enter
push
lret
mov
adc
jne
fdiv
and
pop
add
pusha
xchg
jae
sub
mov
clc
sub
cs
jae
int3
mov
pop
push
lods
sbbb
jmp
mov
inc
dec
push
in
push
jae
mov
and
mov
lea
int3
sbb
sub
xchg
ficomps
cs
push
jae
sub
push
ret
xor
das
hlt
sub
push
push
xor
int
fsubrl
mov
sbb
loop
fdivl
mov
cmp
inc
icebp
inc
fmull
lods
inc
fnstcw
test
mov
xor
adc
pushf
jno
dec
mov
ds
mov
fcoml
test
cmp
dec
faddl
mov
ja
inc
stos
pop
shll
cli
mov
lcall
cmp
repnz
xor
push
cmp
xor
aad
push
mov
push
jg
mov
arpl
sub
jle
jge
fstp
pop
add
mov
and
sbbl
popf
mov
xchg
jp
jmp
ljmp
jp
inc
adc
je
mov
mov
mov
and
mov
mov
adc
inc
adc
cmp
add
mov
mov
popf
mov
dec
lea
pushf
pop
add
mov
add
push
and
lods
imul
inc
les
xchg
incb
sub
movzbl
jo
filds
ss
xor
filds
testb
out
js
mov
sub
mov
push
and
cmp
aam
pop
aad
push
mov
aad
fcomp
mov
push
fdivrl
and
loop
fstl
faddl
jb,pt
icebp
loopne
jne
in
pop
mov
lods
dec
les
mov
or
ret
mov
sub
dec
mov
inc
movsl
or
mov
in
imul
mov
pop
jl
out
dec
inc
out
or
addr16
adc
mov
dec
and
push
xchg
xchg
mov
mov
shrl
xchg
or
adc
repz
loop
mov
sub
popa
push
orl
out
cltd
ja
jns
test
bound
cs
rcrl
pop
je
or
test
push
insb
adc
or
js
stc
mov
cmp
xchg
stc
jl
mov
sub
addl
loope
outsl
lret
cmpsb
test
pusha
cmpsl
cmp
mov
inc
and
cltd
mov
pop
mov
inc
and
or
inc
fcomip
push
hlt
pop
jb
or
imul
mov
sbb
int3
sub
dec
sbb
repz
dec
out
sub
in
stc
loope
or
xor
cmpsb
mov
cmpsl
cli
pop
inc
pop
cmp
addb
mov
mov
fimull
movsb
mov
mov
out
or
incl
mov
xchg
cmp
call
inc
xchg
sarb
adc
and
sbb
or
inc
out
xor
aad
or
pop
fs
mov
cmc
mov
imul
or
xchg
dec
lahf
push
lock
and
jo
test
fs
aaa
sub
fldenv
scas
lea
adc
sbb
adc
pushf
aaa
or
insb
cmc
test
push
shrl
lods
mov
cmp
adc
stos
and
push
scas
push
inc
mov
or
mov
mov
mov
mov
mov
iret
push
mov
test
insb
andb
popa
pop
jmp
pop
pop
and
das
mov
push
sub
sub
js
movsl
jl
or
xchg
dec
sub
inc
std
cmp
push
adc
push
hlt
fsubrs
test
scas
and
dec
add
lods
test
hlt
push
jl
fildll
ss
idivb
xor
test
loop
das
xchg
loopne
inc
pop
xor
js
pop
cmp
dec
loope
icebp
cmpsb
in
scas
jnp
in
jecxz
test
loopne
js
fists
loope
mov
or
and
stos
das
push
or
push
int3
mov
std
nop
fists
xchg
jmp
mov
mov
xchg
enter
loop
stc
pusha
ret
push
jecxz
cld
or
dec
in
int
adc
es
movsb
push
xchg
mov
pop
jnp
in
and
push
in
roll
movb
in
dec
icebp
xchg
sbb
cmp
shlb
push
scas
jbe
jbe
adcb
movsb
jecxz
inc
and
rorl
cs
xor
fnstsw
scas
mov
ficompl
ss
sub
xchg
inc
mov
in
sbb
push
mov
scas
pushf
gs
or
pop
xor
add
mov
mov
xor
pop
or
inc
adc
and
inc
ja
jp
outsb
pusha
ret
jmp
push
dec
icebp
jecxz
xchg
sbb
icebp
dec
sub
sbb
push
scas
stos
jns
cmp
loope
or
scas
movsbl
xorl
push
add
jbe
and
mov
mov
lods
dec
dec
push
stc
mov
xor
out
and
push
jl
push
pop
call
hlt
sub
sbb
xor
cwtl
sbb
sub
mov
outsb
and
lods
loop
push
jb
dec
jg
pop
hlt
test
jp
mov
sbb
mov
pop
inc
lea
sub
je
push
sbb
lock
lods
sti
xchg
pop
xor
inc
add
push
andb
lods
popf
cmp
jnp
push
popf
repz
dec
rolb
inc
sbbb
lea
jmp
push
jl
mov
jmp
ja
and
sbb
and
pop
sbb
cmpsb
add
sti
adc
les
sbb
jae
dec
outsb
enter
insl
pop
lret
dec
iret
daa
xor
pop
mov
je
insb
sbb
jmp
or
mov
mov
jle
xchg
adc
arpl
popf
icebp
jg
cmpsb
rcl
inc
adc
pop
into
dec
lods
in
mov
imul
in
push
cmp
pop
aam
loope
or
testb
inc
sbb
jno
mov
lea
jnp
or
repz
mov
mov
push
lock
mov
std
in
or
xchg
rcll
pop
clc
dec
stos
jp
push
and
stos
jnp
adc
pop
repnz
mov
inc
cmpsl
setns
xchg
dec
and
cmpl
loop
lock
stos
test
js
dec
cld
loope
test
xor
pop
jne
adc
or
mov
sub
lods
jg
in
cmc
mov
divl
adc
pop
push
lret
movsb
out
lret
repz
mov
scas
mov
push
inc
push
mov
lret
adc
sbb
test
dec
and
or
jo
add
adc
adc
andb
add
push
ljmp
sbb
je
movsb
inc
inc
add
and
mov
add
adc
push
or
cli
inc
cltd
sub
es
adc
xchg
cld
lods
pop
mov
jg
sbb
rcr
aad
jbe
enter
add
je
push
pop
outsb
push
sbb
and
xor
xor
mov
scas
sbb
xor
loope
inc
or
sbbb
sbb
inc
sbb
pusha
mov
ret
aam
xor
add
sbb
push
jl
and
xchg
je
pushf
and
push
push
jge
bound
je
or
xor
sbb
in
adc
fs
add
and
jl
sbb
push
cmp
adc
rclb
or
lds
dec
adc
or
or
add
cmpsb
xor
dec
mov
add
shr
adc
fsubrs
sub
rorb
daa
dec
or
mov
mov
mov
cwtl
or
movsb
or
repz
sbb
fs
xor
inc
or
jo
inc
push
inc
lock
sbb
in
les
push
adc
xchg
xchg
movsb
jp
adc
call
loope
mov
ret
inc
cwtl
test
call
inc
sbb
pop
jmp
daa
sub
loopne
addr16
in
push
cltd
es
loopne
in
rolb
test
ret
bound
ret
sbb
nop
sub
adc
xor
movsb
or
orb
or
xchg
adc
adc
or
dec
sbb
test
gs
and
sbb
sbb
icebp
adc
xchg
inc
xchg
sbb
or
or
cld
jecxz
lock
shrl
or
xchg
pop
insb
mov
or
fs
cwtl
sbb
pop
xchg
inc
ret
cld
dec
rorl
adc
or
xor
dec
scas
test
hlt
jg
into
call
in
sub
into
mov
and
fsubrl
out
dec
lret
inc
cmp
pusha
xor
sbb
inc
adc
cmp
adc
in
push
test
lock
rclb
hlt
jo
and
inc
dec
pop
sti
adc
pusha
pop
or
inc
sbb
xor
or
ss
inc
dec
loop
scas
rol
test
in
cmp
je
loop
loope
add
fsub
sbb
cmpsb
mov
mov
mov
and
outsb
adc
or
test
jl
insb
mov
adc
mov
ret
or
xchg
imul
cmp
xor
inc
aaa
inc
ja
inc
cmp
push
sub
fs
ret
sub
or
nop
sub
pop
mov
inc
outsb
rolb
jbe
dec
push
hlt
or
call
ljmp
dec
daa
rolb
rclb
and
mov
or
adc
adc
push
and
add
sbb
and
ror
fs
loope
insb
or
xchg
leave
test
xchg
mov
inc
mov
enter
dec
or
adc
sbbl
les
fs
dec
jno
js
imul
in
ret
adc
and
cld
ror
cmp
test
hlt
ret
mov
sub
adc
and
xchg
hlt
ret
loope
lret
sbb
and
jo
push
push
and
push
mov
mov
shll
ret
xchg
and
movsl
push
pop
fstpl
and
loopne
lods
sbb
and
xchg
adc
mov
inc
xor
inc
sbb
mov
mov
leave
adc
add
data16
lret
jb
and
xchg
adc
and
sbb
add
pushf
in
shr
int3
cmp
cmpsl
add
and
das
mov
loopne
and
je
scas
xorb
pushf
or
int3
jae
or
mov
push
push
or
in
sbb
scas
loopne
jg
mulb
inc
cltd
arpl
or
mov
jne
jg
adc
sub
cmp
mov
movsb
ret
sbb
or
movsb
sbb
sub
inc
adc
adc
xor
xchg
or
scas
fadds
and
pop
adc
shll
adc
and
jnp
daa
adc
jbe
xor
sub
and
sti
inc
adc
cld
cli
and
sbb
adc
or
and
jae
sbb
push
xchg
mov
ret
mov
data16
enter
dec
dec
and
nop
sbb
nop
loopne
push
and
dec
mov
and
push
ficoms
in
fisubs
mov
or
jl
fs
adc
cmpsb
and
mov
and
nop
and
mov
dec
mov
nop
pop
and
mov
mov
fs
test
dec
enter
addr16
fs
mov
inc
or
xor
xor
push
adc
sub
call
xor
mov
shll
adc
adc
inc
fs
scas
movsb
dec
pop
and
push
push
jg
or
mov
xor
inc
jge
je
push
repnz
add
cmp
les
sbb
dec
sbb
push
dec
adc
sub
or
loop
fs
and
jno
sbb
jo
and
movups
sbbb
lret
push
pop
pushf
adc
clc
sbb
fsubrs
push
inc
mov
or
or
adc
mov
sbb
jo
sbb
testl
and
sub
cmp
mov
xor
and
xchg
or
loope
out
shlb
enter
jne
adc
hlt
push
adc
pushl
mov
je
and
gs
or
cmove
xlat
jecxz
aad
fs
add
adc
test
or
shll
arpl
shlb
adc
xor
mov
cltd
pop
cld
mov
pop
iret
in
dec
popa
dec
sub
loope
scas
or
or
aam
lea
loopne
sbb
mov
sbb
nop
divl
bound
imull
adc
test
adc
divl
push
and
je
jmp
mov
mov
test
mov
lea
cld
in
mov
loop
xor
push
jmp
sub
jbe,pt
out
pop
add
mov
fwait
inc
adcl
jb,pt
icebp
jmp
fidivrs
pop
push
mov
loop
cs
add
aas
xchg
mov
repz
bnd
or
push
lock
call
out
pop
fildl
mov
popf
jecxz
clc
incb
jle
sbb
jmp
xor
movzwl
add
movl
jmp
and
test
pop
je
or
and
jmp
cld
call
ror
lcall
cmp
jl
pushl
push
or
push
fldcw
sub
xchg
ds
xor
out
and
enter
sub
or
or
jle
or
mov
push
push
push
int3
mov
pop
and
jle
pop
jp
jge
stos
xor
jns
imul
inc
cmp
jl
mov
mov
pop
mov
pop
fldenv
gs
or
cwtl
sub
pop
stos
insb
mov
lcall
adc
inc
sarb
das
movaps
pusha
pop
pop
cmp
shll
push
cld
loopne
stc
pop
add
pop
sub
jnp
mov
or
inc
or
xchg
mov
dec
pop
sub
call
out
pop
push
aam
fcmovne
sub
inc
pop
stos
xchg
out
cmp
inc
sarl
or
fadds
mov
or
inc
adc
mov
jl
mov
xchg
or
add
arpl
and
jmp
movsb
daa
add
and
adc
jne
mov
push
add
push
push
inc
sbb
and
add
adc
adc
pop
fmuls
and
mov
push
test
cmpsl
add
popa
cs
push
mov
sbb
cmp
sub
xchg
mov
push
imul
mov
dec
shlb
add
pop
jbe
jp
and
pushf
dec
xchg
call
inc
fnsave
test
test
add
jge
sahf
rcrb
add
lea
jp
mov
fsts
pop
sti
inc
or
pop
dec
aaa
aas
xchg
addr16
jne
add
inc
add
jb
add
ret
cmpsl
lea
mov
test
push
jmp
jge
test
xchg
mov
popf
or
rcl
insb
push
inc
mov
dec
and
and
bound
jne
sbb
or
xor
xor
xor
popf
mov
sub
xor
push
bound
mov
mov
je
dec
lea
or
lds
cmp
push
bound
enter
je
orb
mov
sti
push
and
aas
enter
jo
and
sbb
adc
scas
orl
call
clc
scas
or
out
imul
pop
cmp
popf
rorl
inc
adc
ret
jge
adc
call
adc
and
sub
jge
lea
add
icebp
loope
rolb
inc
cltd
or
gs
inc
pop
fcoml
aas
mov
sbb
ret
testb
enter
fdivl
sbb
call
adc
push
stos
mov
test
lcall
jns
movsb
andw
sub
adc
or
xor
fisubrl
adc
mov
or
lea
adc
inc
add
inc
or
pop
push
sub
push
mov
mov
je
movsb
sbb
ds
add
adc
addb
push
push
les
insl
push
and
and
push
fisubl
cltd
mov
or
enter
add
out
lock
aam
popa
cmp
mov
ja
cmp
add
sbb
mov
jns
scas
xchg
pushf
rclb
sbb
pusha
ret
or
push
popf
jnp
mov
scas
in
sbb
mov
pop
and
jl
pop
pop
mov
jp
add
leave
jne
inc
mov
mov
add
sahf
adc
addb
or
or
pop
inc
push
xor
incl
push
mov
jbe
pop
aam
shr
or
ljmp
dec
shlb
sub
and
inc
fldt
dec
mov
dec
repnz
andb
push
mov
rclb
jbe
push
mov
xor
loop
cmp
fwait
or
pusha
ret
ds
cmp
jb
in
into
mov
add
push
push
fmull
xor
rorb
pop
push
mov
mov
cmp
loopne
xor
add
mov
adc
repnz
test
loop
std
adc
and
daa
inc
cmp
out
jmp
nop
push
dec
imull
xchg
and
enter
push
inc
and
iret
mov
repnz
dec
cmpsb
push
or
push
pop
adc
xor
inc
push
cmp
decl
mov
rep
mov
sub
pop
in
cs
insb
stc
lahf
cs
mov
jae
push
in
adc
push
xchg
fmull
dec
mov
mov
dec
adc
mov
fistpll
add
mov
or
mov
sub
sub
and
or
and
dec
sbb
sar
xor
push
push
mov
enter
repz
ss
cwtl
mov
xor
xlat
test
lea
sbb
je
les
out
xchg
sub
sub
mov
test
xchg
in
imul
mov
mov
aaa
pop
sbb
xor
adc
push
adc
das
stc
and
sar
in
movsb
icebp
movsb
mov
push
inc
mov
cmpsl
pop
test
lock
cmpsb
mov
cwtl
pop
add
jne
test
jle
cmp
aas
unpcklps
test
push
je
rcrb
cld
xchg
dec
inc
add
iret
push
data16
nop
insb
push
mov
cmp
add
add
push
add
jmp
cwtl
loop
and
xor
adc
adc
mov
pop
pop
sbbl
mov
testb
add
push
cli
popa
out
rolb
push
adc
dec
sbb
mov
mov
jmp
sub
cwtl
leave
adc
and
cmc
imul
sarl
jns
xlat
bound
or
fs
xor
pop
or
mov
leave
sbb
jae
mov
pop
mov
adc
fidivrs
sub
rolb
stos
cs
js
xor
or
cmp
icebp
xchg
inc
pop
stos
ret
xchg
lea
or
cmp
sub
lea
jmp
adc
pop
mov
test
or
bound
jmp
inc
out
sub
or
sbb
or
mov
decb
lcall
add
enter
in
adc
or
jge
pop
cmpb
je
jne
push
inc
or
sub
mov
sub
or
cmp
insb
cmp
sub
cmp
sub
inc
sbb
jno
add
cmp
jge
cmp
pop
je
cmp
ds
cmp
std
mov
cmp
jl
inc
fdivrs
subl
adc
sbb
out
mov
add
push
adc
sbb
rclb
pop
stc
cmp
les
mov
rcl
dec
lea
lret
push
push
or
add
and
or
adc
pop
and
ljmp
orb
sbb
cmp
je
dec
outsl
int
or
sbb
add
ss
pop
arpl
mov
push
mov
mov
rcll
call
bound
xchg
add
dec
sbb
je
cwtl
int
clc
movsl
or
cmp
or
jno
inc
push
lret
in
inc
and
xchg
sbb
in
mov
add
mov
xchg
add
add
inc
loop
fucompp
sub
cltd
push
dec
adc
fstps
mov
inc
bound
inc
loopne
pop
mov
xor
cmp
add
push
pop
iret
xor
fisubrs
sbb
push
dec
jb
sub
jne
and
and
add
movsl
andl
pop
insb
push
push
mov
push
pushf
mov
rorl
clc
mov
cmp
or
inc
mov
mov
pop
lock
push
rolb
mov
dec
lea
push
mov
lret
fs
inc
or
or
mov
jo
pop
xchg
sbb
lock
inc
popf
and
dec
jmp
mov
jns
sub
jo
and
rcrl
clc
cmp
push
cli
sbbl
dec
mov
in
xor
dec
add
inc
mov
test
stos
int3
xor
or
or
push
pop
clc
mov
push
adc
fdivl
out
pop
mov
inc
cld
mov
lods
adc
movsb
in
dec
push
cmovb
jle
sub
and
xor
icebp
fcompl
mov
and
in
adc
xor
and
les
add
push
mov
dec
sbb
push
test
divl
stos
ss
test
adc
add
xor
test
inc
orl
out
dec
push
cld
mov
repnz
mov
mov
sub
cli
aas
jae
aam
push
sahf
movsl
imul
jno
inc
daa
mov
call
xor
pusha
test
scas
lret
inc
cmp
sub
or
jmp
push
nop
sbb
mov
outsb
sub
add
das
test
repnz
rorl
shl
orl
dec
mov
dec
dec
gs
sbb
pusha
jns
push
mov
mov
nop
adc
add
mov
xchg
out
lods
inc
sbb
leave
or
subl
mov
cli
mov
jns
sbb
push
push
push
movl
les
aaa
and
xchg
std
mov
pop
mov
inc
cld
popf
pop
and
push
cmp
and
or
sbbl
push
imul
imul
shrb
sub
scas
push
jbe
cmp
and
scas
insb
stos
out
push
and
out
pop
ret
pop
ljmp
xor
push
fs
sub
pop
ljmp
gs
pop
ljmp
push
fnstenv
ror
inc
lea
scas
sti
or
out
mov
inc
cmp
mov
inc
and
pusha
ljmp
pop
jle
ljmp
xor
adc
and
cld
or
adc
in
sbb
pop
inc
in
ret
or
inc
and
mov
mov
out
test
in
andb
sbb
shlb
sbb
in
inc
jp
mov
lock
inc
les
adc
in
mov
popa
xchg
adc
call
add
test
mov
dec
addl
push
push
pusha
jle
mov
ljmp
mov
and
aad
push
xchg
push
aas
mov
push
inc
dec
inc
push
add
mov
inc
es
sbb
mov
dec
adc
out
adc
sbbb
adc
cmp
cmp
pop
xchg
movsl
cmp
int
xchg
outsb
cli
sbb
or
pop
mov
inc
enter
mov
dec
std
dec
cwtl
sahf
push
push
int
out
adc
cmp
hlt
push
clc
cmp
andl
testl
hlt
add
jne
mov
sub
dec
dec
mov
sub
jmp
sbb
outsl
push
and
insl
out
movsl
mov
add
bound
and
clc
push
push
mov
andl
add
and
push
dec
add
mov
push
mov
ficoml
popa
pop
in
lret
ret
adc
sub
pop
out
adc
fs
push
loop,pt
fldt
pop
clc
stos
scas
adc
andb
pop
push
mov
rcr
adc
push
cld
push
icebp
dec
sub
fcoms
bound
enter
jne
movl
xor
ficomps
sub
xor
dec
adcl
push
hlt
xchg
repz
das
jge
dec
jl
mov
faddl
mov
pop
jmp
inc
or
push
mov
sub
push
loop
test
mov
cmp
movsb
adc
ss
stos
lock
xor
xor
sub
jnp
pusha
in
mov
mov
cmp
cmpb
pop
aas
call
enter
mov
ja
xchg
push
dec
je
cmp
sub
sbb
mov
insl
inc
clc
std
jns
loopne
jmp
mov
inc
sbb
into
pop
xor
or
sub
mov
std
test
in
mov
test
les
das
push
xchg
fsubs
inc
pushf
stc
push
cmp
test
add
and
les
sbb
sub
rep
jo
out
int3
add
loope
mov
add
rorb
sub
into
add
mov
nop
xorb
dec
mov
in
jecxz
xchg
or
loopne
js
push
cli
shlb
inc
xor
and
das
mov
pusha
cmp
push
pop
test
sbb
mov
mov
hlt
cli
movsb
loope
test
dec
jmp
sti
mov
ficompl
scas
loope
push
mov
add
aam
jge
rcrb
cltd
jl
or
dec
std
add
jns
mov
jns
mov
popf
call
xor
xor
add
jmp
cmc
sub
adc
push
and
mov
mov
jbe
sar
adc
aaa
xchg
lcall
movzwl
add
dec
mov
mov
leave
adc
inc
inc
ja
scas
xchg
ljmp
fcmove
cmpsb
jns
mull
and
xchg
aam
inc
push
insb
inc
ja
adc
mov
nop
stc
es
and
jmp
enter
and
add
mov
jge
jno
enter
or
push
inc
dec
ret
dec
or
and
outsb
mov
and
je
out
dec
fsubs
mov
int3
das
and
dec
call
loopne
call
lods
cmc
movsb
test
xchg
jmp
pop
bound
pop
xlat
and
dec
xor
loope
pop
into
repz
adc
es
movl
mov
fs
and
inc
cli
mov
push
mov
add
sbb
mov
sahf
push
mov
fwait
insb
or
bound
mov
pusha
outsl
sub
mul
nop
cli
mov
mov
mov
test
push
add
jnp
imul
sub
push
cltd
icebp
xor
mov
inc
aam
test
cmp
xchg
cld
and
adc
loop
sbb
or
adc
sub
or
sub
sbb
out
mov
add
mov
ds
shl
je
jo
dec
ret
push
adc
shll
icebp
sti
and
jmp
push
rcrb
ret
jno
and
out
dec
dec
push
sbb
mov
sbb
ret
adc
or
sbb
js
addb
lock
jge
adcl
cli
dec
lcall
lret
add
flds
imul
jnp
pop
xor
or
ret
adc
nop
test
cmpsw
cmp
dec
icebp
mov
mov
fnstcw
xchg
or
clc
jg
popf
ret
dec
out
jecxz
shr
add
in
dec
mov
shr
pop
sub
push
movsl
enter
sti
loopne
punpcklbw
jbe
jnp
lods
xorl
sbb
jecxz
push
test
and
sbb
adc
data16
fwait
mov
or
pop
cld
push
mov
pop
mov
lea
imul
add
shrb
addr16
shrb
or
fadd
xchg
xchg
mov
movsb
shr
and
add
ds
in
xchg
sub
jp
leave
mov
push
jl
push
or
js
cmp
mov
fstpt
dec
ljmpw
frndint
inc
pop
push
dec
sbb
adc
pop
fwait
and
popa
inc
ret
and
mov
sub
inc
aad
or
je
ret
imul
das
jg
stos
sub
aas
pop
dec
pop
xor
cmp
shl
cli
xor
adc
jg
or
lea
mov
xchg
shlb
adc
and
cli
rorl
rclb
enter
xor
std
push
aas
pop
aad
add
mov
xor
lcall
das
test
adc
out
lret
pop
outsb
or
adc
push
pop
and
mov
mov
sub
push
cmp
pop
enter
add
mov
adc
dec
sub
sub
push
bound
mov
arpl
inc
mov
sbb
push
mov
and
mov
cld
xor
xlat
loope
movsb
clc
mov
pop
daa
xchg
lock
pushf
jl
or
push
sub
pop
jno
add
std
pop
or
cltd
repnz
add
jbe
xchg
scas
daa
sbb
and
fs
sub
and
test
mov
pop
int
xchg
adc
push
and
nop
lret
outsl
jno
loopne
stos
mov
shlb
fdivs
mov
sbb
push
pmaxub
or
imul
jb
clc
sbb
push
fsubl
or
fsubrs
inc
push
imulb
sbb
sub
pusha
push
lock
inc
lock
sti
sbb
test
clc
adc
out
and
nop
mov
pushf
jb
out
sub
mov
add
push
adc
mov
mov
sar
adc
jp
inc
std
outsl
push
add
mov
adc
rorl
jo
adc
adc
sbb
leave
push
sub
adc
push
inc
add
icebp
shrb
sti
adc
lods
jle
lret
adc
shrb
fmull
or
fadd
jae
je
or
push
xor
pop
cmp
cmpsb
push
aas
fisubrl
aaa
xchg
sbb
sarl
icebp
and
pop
xorb
mov
sbb
xor
decb
fdiv
push
mov
stos
adc
jae
cmp
cmp
and
push
cmovle
adc
test
bound
sarl
dec
test
xor
jmp
cmp
jge
xchg
or
mov
adc
or
mov
push
enterw
outsb
mov
push
inc
dec
push
fs
movhps
push
cmpl
push
mov
pop
push
mov
xorb
xchg
xor
insb
adc
shl
loopne
fbstp
or
or
inc
rcll
adc
push
xor
hlt
rol
jle
out
jecxz
inc
cmp
push
js
jae
test
sbb
movsl
sub
and
lcall
mov
bound
leave
jae
dec
adc
xor
sub
icebp
fwait
jae
and
call
xchg
sub
push
lods
incb
sbb
jmp
adc
rorb
and
pop
mov
sub
cltd
in
add
xchg
mov
xchg
sbb
in
sub
mov
out
ljmp
inc
add
loope
sub
movsb
cwtl
pop
mov
jae
push
add
stc
add
add
icebp
push
add
invlpg
add
inc
icebp
nop
cs
and
bound
inc
movaps
idivb
add
out
mov
fbld
out
jbe
add
dec
in
inc
lret
movsb
fs
repnz
loopne
pop
jo
cmp
in
jb
mov
ud0
cmpsb
imul
in
dec
sub
inc
icebp
cmp
jecxz
sbb
sub
push
aad
push
cltd
jbe
std
icebp
sub
mov
dec
nop
push
push
inc
dec
jno
mov
and
test
inc
testb
mov
and
loopne
xchg
mov
push
inc
imul
mov
nop
xchg
adc
jmp
adc
and
scas
sbb
jl
fsts
mov
sbb
das
in
loopne
lea
dec
push
mov
roll
call
outsl
andl
in
cmp
add
push
push
push
das
lret
leave
xchg
mov
cmp
add
adc
lods
nop
out
mov
lods
imul
mov
mov
add
andb
fdivl
push
lea
sbb
stos
data16
mov
andb
push
xchg
xchg
xchg
xchg
in
out
loop
mov
icebp
cmpsb
and
repnz
push
outsl
hlt
sub
add
dec
leave
inc
fs
nop
out
or
daa
mov
xor
arpl
push
jg
pop
outsl
aas
std
mov
add
sbbl
stos
inc
test
jge
stos
stos
mov
popf
mov
pop
sub
cmp
lock
push
xor
call
jg
pop
push
stos
jne
ljmp
push
jne
mov
ret
mov
mov
repz
adc
and
push
dec
pop
and
leave
scas
das
mov
cs
push
inc
fiadds
sbb
xor
mov
jne
sbb
jmp
sbb
mov
xor
mov
stc
push
pop
leave
divb
mov
aad
push
nop
hlt
jae
add
mov
test
dec
je
mov
mov
subb
push
lea
mov
mov
inc
or
adc
inc
mov
int
ja
xor
pusha
xchg
test
jbe
mov
sbb
loope
pop
pop
add
movsbl
push
push
js
xor
pop
mov
imul
push
ret
push
andb
negl
pop
and
xor
lea
mov
cli
scas
xor
add
pop
imul
xchg
das
add
stc
cmp
jae
push
pop
pop
lcall
sub
mov
dec
jae
or
xor
push
mov
aas
aas
icebp
xchg
iret
push
out
xchg
pop
push
or
jns
and
jbe
sbb
jne
js
jo
mov
test
cmpb
jae
sub
imul
mov
cmp
aaa
dec
shrb
cmp
incb
jmp
push
add
sub
push
add
add
int
sbb
dec
xor
pop
pop
ret
in
sub
and
cmp
jbe
sbb
adc
cmp
add
inc
cmp
out
sbb
notb
dec
dec
push
mov
push
mov
mov
sub
popa
aam
test
out
add
mov
mov
movsb
adc
mov
pop
cli
cmp
jae
sbb
pusha
jmp
cmp
or
or
das
lret
xchg
push
xchg
addb
and
test
sbb
fisttpll
push
hlt
mov
mov
sub
rolb
or
shll
mov
cmp
js
push
lds
push
jno
sub
inc
lret
divl
push
mov
ja
mov
ret
jae
xlat
fcom
sub
mov
add
jmp
fstpl
rcrb
insb
cmpsl
sub
inc
lret
jbe
or
pop
xchg
push
cwtl
iret
mov
or
mov
jo
pop
sbb
mov
jo
in
sub
adc
add
jnp
faddl
leave
cmp
ret
or
mov
add
inc
mov
jl
or
shlb
data16
rcll
addr16
pop
inc
divb
jl
cmp
add
pusha
ret
sbb
sti
push
sbb
mov
insb
xchg
adc
jmp
and
adc
into
mov
push
shlb
xchg
add
testb
jne
orb
loop
pop
fisttpl
pop
ret
sub
lds
xchg
or
add
movsl
add
push
repz
movsb
shll
mov
dec
mov
jns
mov
stos
adc
les
das
push
push
add
cli
je
xchg
lock
mov
test
adc
adc
loope
or
sub
xor
int3
push
push
inc
rorl
add
adc
enter
mov
pop
fadd
xchg
push
sbb
je
es
sub
loop
fnsave
fldcw
pop
lods
jecxz
loop
xlat
mov
mov
push
popf
loop
fsts
pop
dec
ret
pop
push
inc
push
xchg
loopne
pop
pusha
jbe
add
xchg
insb
pop
pushf
push
and
bnd
pop
xlat
loop
enter
adc
daa
mov
scas
ret
mull
outsl
mov
xor
test
adc
lea
xchg
shrl
mov
rcr
add
inc
movb
mov
cwtl
sub
sub
lock
xor
mov
mov
xor
enter
add
pop
cwtl
adc
xchg
movsb
hlt
cmp
and
adc
pop
idivb
pusha
pop
rorb
xor
dec
mov
jnp
pop
repz
xor
data16
insb
repz
iret
xchg
cmp
cmp
mov
mov
cmp
or
pop
repnz
xor
pop
cltd
sub
sar
fisubl
or
and
inc
pop
xor
or
test
jl
ljmp
mov
mov
fs
sub
mov
ja
add
inc
push
aas
cwtl
mov
push
push
push
jl
out
mov
adc
popf
xchg
cmp
and
cmpsl
push
push
lcall
push
int3
dec
push
xor
ja
arpl
inc
add
dec
or
addb
inc
sub
fistl
adc
and
xor
shrb
addl
call
cmp
mov
push
add
pop
in
sbb
jmp
cmc
das
jp
cmpsb
int3
cmc
orl
clc
je
mov
ja,pt
test
sub
daa
test
jl
adc
cld
cmp
add
sbb
cmp
lock
cwtl
inc
adc
and
inc
xlat
into
adc
mov
xchg
cmpsb
sbb
mov
mov
add
loopne
cwtl
push
xchg
popa
push
sub
loop
cmp
test
cmp
sub
and
push
addr16
rcrl
popf
mov
loopne
stos
cmpsl
dec
loope
inc
ds
aad
inc
sar
adc
mov
pop
js
subl
lds
pop
dec
push
cmp
push
pop
into
std
inc
ret
ss
shl
in
mov
out
jb
fs
pusha
hlt
xchg
or
sub
pop
bnd
mov
and
sub
push
stos
jne
inc
pop
rorb
adc
std
and
data16
ds
push
adc
jns
fs
orb
fisubrs
jmp
adc
rclb
dec
and
sbb
xchg
push
and
lahf
int
and
adc
iret
and
adc
xchg
mov
add
and
pop
mov
cmpb
dec
sub
fmull
add
add
gs
jp
jae
xchg
lock
sbb
shlb
adc
add
xor
sbb
iret
adc
add
call
sbb
and
sbb
fwait
xor
pusha
pop
xor
xchg
mov
push
inc
jmp
sub
mov
fstpl
and
js
push
xchg
sbb
sub
cld
jnp
aad
mov
xchg
cmp
jne
push
mov
pop
je
pop
sub
sbb
stos
push
lea
aas
movsb
jne
arpl
mov
cmpxchg
mov
xor
pusha
sti
sub
push
call
lods
push
pop
filds
addr16
xchg
mov
insl
and
or
cmp
jg
and
shrl
dec
aas
inc
and
cltd
lea
sub
shlb
inc
add
jmp
add
mov
mov
add
adc
inc
xchg
fmuls
and
test
inc
syscall
pop
mov
mov
rcrl
cs
push
or
jl
enter
add
cwtl
mov
lea
push
fs
adc
pop
out
xor
mov
inc
fs
mov
jl
pop
rclb
and
xchg
pushf
cmp
xor
add
push
and
fs
mov
jbe
test
inc
int
push
push
lahf
jp
mov
imul
sub
push
dec
nop
aam
jmp
sti
xchg
shlb
push
sahf
jmp
xchg
inc
cltd
jge
xor
mov
xchg
shrl
add
sahf
js
dec
cld
mov
je
inc
aam
inc
xor
jmp
adc
popw
pop
xor
iret
xor
stos
hlt
inc
push
mov
mov
idiv
or
push
rclb
mov
xchg
jl
push
inc
pop
xor
popf
pop
sub
add
push
popa
fisubl
pop
dec
fsubrs
addr16
push
add
push
cmp
das
iret
add
pop
mov
test
cmp
adc
pop
jo
test
data16
pop
sub
sarl
out
outsb
sub
mov
sbb
popa
sbb
sbb
lock
arpl
es
orl
or
mov
es
imul
clc
cli
dec
rorl
rolb
add
iret
dec
movsl
push
xor
xchg
rclb
jne
xor
imul
fildll
fmuls
addb
pop
push
pop
sbb
repnz
xor
pop
and
xchg
add
jne
lods
adc
fld
push
and
imul
lds
sbb
andl
mov
xor
mov
lret
dec
es
push
les
int3
mov
into
jo
fwait
pop
mov
push
cmc
pop
stos
push
add
xchg
into
mov
push
inc
pop
mov
arpl
push
or
out
cmp
xchg
xor
cmp
mov
dec
cmpb
es
cmp
sbb
sbb
push
cwtl
sarb
jne
add
fmuls
outsl
test
loop
xchg
mov
repz
test
inc
jmp
pop
fstl
cmpsl
xlat
sbb
pop
in
and
maxps
add
sub
and
push
addr16
and
mov
les
adc
hlt
push
adc
cmc
add
xchg
aaa
call
sub
sub
adcb
mov
je
mov
mov
sbb
push
inc
ds
xor
adc
cmp
pusha
incb
sub
mov
les
push
cmpsl
jmp
push
fs
cmp
adc
fisttpl
fst
pop
test
lea
jl
fcoms
mov
adc
repnz
sub
push
pop
inc
decl
sbb
mov
push
ret
xchg
scas
je
cmp
xor
mov
sbb
sbb
adc
mov
test
jp
xchg
jne
or
push
es
xchg
stos
dec
icebp
sbb
push
mov
jns
adc
movsb
cld
mov
imul
or
and
jmp
repnz
cmp
xchg
lock
repz
push
cmp
cmp
je
cmp
push
mov
test
adc
idivl
cmp
and
add
dec
out
ret
and
pop
sti
das
cltd
imul
movsb
push
xchg
push
imul
pop
push
ret
pop
outsl
dec
fnstcw
jo
fisubs
cmp
push
jp
call
fldl
test
aam
xor
rorl
push
mov
jns
sub
add
add
or
or
jne
ds
dec
inc
mov
push
bound
decb
or
sub
cs
dec
dec
mov
mov
enter
iret
mov
ljmp
fsubl
repz
cmp
fdivrl
lret
inc
popa
enter
push
push
cmp
inc
inc
jns
dec
clc
sbb
rorl
in
aaa
fwait
and
sbb
sbb
cs
mov
adc
je
inc
out
out
mov
add
xchg
ret
xchg
push
into
jb
call
sarl
add
xor
mov
xchg
inc
and
or
push
test
or
in
xchg
xor
pop
pop
scas
inc
fsubrs
test
iret
and
mov
lret
insl
out
dec
xor
mov
insb
xlat
cltd
lcall
xchg
sub
add
jg
sbb
fidivrs
add
pop
lock
in
jle
sbb
push
movsb
and
cmp
jmp
scas
inc
adcl
dec
xor
test
jle
imul
js
imul
ja
sti
inc
sub
in
mov
jne
lahf
cwtl
jno
push
sub
mov
mov
lret
xchg
out
dec
nop
sahf
dec
adc
add
mov
std
adc
movsb
pop
test
mov
lret
in
dec
mov
or
ljmp
addr16
and
dec
adc
out
jp
pusha
sub
sar
inc
mov
sarb
jecxz
adc
sbb
shlb
nop
dec
rorb
insb
mov
mov
add
mov
int3
inc
aam
daa
mov
call
mov
mov
and
mov
mov
pop
das
clc
mov
xchg
adc
in
inc
adc
mov
sub
push
mov
or
dec
ja
ret
test
fbstp
or
int3
push
or
dec
and
rolb
in
nop
daa
les
jb
push
and
push
dec
rorb
jmp
out
xchg
pop
lock
push
xor
hlt
cmp
jne
cmp
test
call
popf
lcall
inc
test
mov
dec
push
test
xchg
mov
rorb
cmp
mov
iret
jns
or
rcrb
hlt
adc
aam
push
push
ds
cmp
adc
sub
jne
xchg
jnp
je
pop
sbbb
hlt
ret
int3
and
ret
aam
stc
inc
adc
lods
mov
lods
inc
xchg
test
fsts
or
in
add
and
jle
pop
or
outsl
mov
xchg
jno
sahf
mov
aas
leave
les
inc
mov
test
jns
and
mov
or
add
daa
loop
dec
xchg
lods
add
sti
mov
or
sbb
mov
or
enter
add
nop
cmc
loop
dec
out
push
mov
addb
std
aad
stos
mov
or
adc
sar
add
sub
and
mov
add
mov
adc
and
xlat
sti
mov
psubsb
dec
pop
sub
cmpsl
outsl
cld
addr16
sub
movsb
push
les
jg
adc
imul
enter
dec
mov
enter
mov
sbb
fcoms
or
adc
inc
jnp
sti
and
mov
push
leave
add
call
cmp
ljmp
std
jl
push
and
ficoml
dec
maxps
dec
adcb
mov
pop
jp
filds
loopne
std
mov
and
jns
leave
cmp
pushf
jbe
lea
scas
jle
add
add
cmp
inc
push
jb
dec
or
push
cmpl
test
sub
test
cmp
mov
pushf
push
jmp
push
push
mov
lods
dec
sub
xchg
jg
mov
jbe
cmp
test
je
or
add
jb
jmp
dec
ret
sbb
or
mov
xor
aaa
jb
push
mov
push
pop
mov
insb
xchg
lods
adc
dec
je
sub
adc
push
jle
bound
xlat
js
push
out
and
cld
or
dec
adc
inc
push
jmp
popa
and
dec
pop
or
inc
nop
xor
adc
push
sbb
push
add
push
push
int3
andl
dec
pop
out
inc
mov
and
lock
cmp
sbbb
mov
adc
mov
mov
int
imul
or
or
fdivr
sbb
cwtl
mov
mov
mov
decl
mov
movsb
dec
rorb
adc
mov
fsubl
cmovne
xchg
fists
mov
fmull
adc
jge
xchg
sub
cmp
punpckhdq
aas
fwait
aas
inc
xor
adc
inc
inc
pop
mov
adc
sbb
jp,pt
mov
push
test
adc
mov
push
sub
cltd
dec
aam
shl
fistl
idivb
cmpsb
dec
xchg
or
dec
and
fsts
icebp
bound
stc
push
in
adc
insb
pop
jne
xchg
stos
pop
loope
rorb
pop
or
push
dec
mov
or
push
rcll
scas
inc
xor
jns,pn
nop
stos
dec
dec
fdiv
sub
inc
fwait
push
sub
or
inc
dec
cmp
jmp
xchg
mov
xlat
cmp
adc
adc
loopne
loope
mov
mov
xchg
cmp
or
adc
jno
dec
aad
mov
jecxz
pushl
gs
bound
sbb
or
dec
mov
mov
enter
mov
dec
lock
scas
ja
xchg
pushf
sahf
test
pusha
call
jne
push
mov
push
cli
xchg
jmp
ljmp
mov
push
pop
ret
add
cltd
fwait
or
imul
les
adc
in
pop
xchg
cld
fisttpll
mov
add
testl
mov
and
imul
xchg
test
fcoml
push
xchg
adc
jnp
and
jp
aad
mov
dec
fidivrs
addb
jge
push
test
mov
push
push
mov
inc
fbstp
mov
jne
jp
loope
inc
fisubrs
adc
sub
movl
scas
add
loope
xchg
clc
jp
jl
ljmp
jns
dec
dec
mov
out
adc
or
or
jb
popa
sti
inc
jae
sub
inc
sbb
cmpsb
mov
cmp
jge
inc
xchg
mov
out
cmpb
push
push
stc
enter
cli
xlat
mov
lahf
xor
push
jmp
jg
fbstp
bound
mov
test
add
je
or
arpl
lea
enter
scas
xchg
adc
xor
jb
dec
mov
sub
sbb
imul
sub
pop
or
xchg
int3
add
push
cmp
mov
xchg
or
mov
lret
mov
dec
dec
pusha
clc
add
mov
sub
sbb
jo
mov
jge
ja
test
jmp
das
test
out
test
cmp
mov
push
inc
js
cmp
pop
jb
xchg
lret
inc
es
dec
loope
push
inc
or
icebp
jmp
and
mov
test
pop
adc
ljmp
mov
and
dec
loopne
cmp
sar
xor
cwtl
pusha
inc
lods
or
xchg
sbb
mov
mov
add
out
cmp
and
std
xor
jmp
mov
imul
imull
mov
push
mov
pop
stos
pop
jmp
mov
cli
mov
sbb
lret
adc
inc
mov
push
jbe
pop
push
push
push
pop
pop
repnz
mov
movl
lds
bound
lods
stc
adc
xor
cmp
pop
push
sub
mov
cmp
cwtl
call
push
nop
inc
imul
sbb
nop
and
push
and
mov
sbb
mov
enter
or
jne
xor
inc
xchg
fsubrs
loope
push
aaa
loop
aad
xchg
call
cmp
mov
sbb
call
daa
mov
add
frstor
std
out
xchg
sbb
dec
int3
in
adc
push
pop
dec
and
mov
inc
pop
test
cld
sub
sti
sbb
les
mov
lock
mov
jge
insb
cmpsb
dec
adc
int
das
je
je
insb
push
push
sahf
or
push
pop
stos
int3
aas
hlt
pop
cld
inc
in
je
mov
popa
jbe
ja
adcb
adc
add
cmpb
xchg
adc
sbb
hlt
adc
inc
movb
sub
mov
das
xchg
js
inc
pop
add
movsbl
mov
dec
pop
inc
inc
pushf
dec
push
push
inc
pop
cmp
lock
jb
lret
in
cld
jge
inc
int3
stos
mov
mov
adc
je
sub
sbb
pushl
in
add
adc
pop
je
xchg
mov
sub
or
mov
cmp
sbb
add
sbb
popf
cmp
jg
mov
xor
push
adc
pop
cmpsb
pop
loop
inc
inc
adc
jl
aam
mov
xchg
stos
mov
xchg
cmp
mov
jmp
cld
jg
in
jmp
mov
loope
repz
lahf
push
push
mov
push
xchg
subb
xor
mov
test
xor
and
xchg
bound
fldenv
jne
inc
gs
mov
es
sub
dec
out
ja
repnz
jno
sbb
int
adc
cs
jo
loop
xlat
cli
or
cld
pop
or
jbe
mov
add
jmp
in
adc
or
push
inc
call
lret
cld
jle
cmc
xor
jo
fcmovnu
mov
inc
cli
push
sbbb
push
clc
dec
hlt
cmpsb
in
push
pop
mov
adc
je
cmp
fs
pop
jecxz
xchg
scas
inc
jbe
movsb
push
lock
adc
test
push
push
pusha
xchg
mov
pushl
sbb
pop
adc
push
sahf
mov
and
das
jg
hlt
kmovb
push
push
and
movb
sub
stos
out
add
inc
sbb
adc
test
mov
mov
and
push
test
ljmp
ja
addr16
dec
out
add
cmp
jo
add
adc
inc
push
cwtd
inc
mov
les
adc
cwtl
and
popf
cltd
cltd
xor
fwait
jg
push
je
adc
sub
mov
jg
mov
popf
mov
enter
push
mov
pop
lahf
push
adc
cmc
loope
loope
or
push
mov
sbb
sub
or
pop
loopne
jnp
sbb
jbe
or
cmp
add
movzwl
jbe
inc
or
repnz
push
pusha
or
or
ljmp
add
adc
and
mov
dec
clc
cmpsb
mov
xchg
lret
call
ret
packssdw
icebp
mov
sbb
cli
jecxz
dec
mov
pop
test
dec
das
mov
push
or
arpl
jp
pop
test
mov
jg
repnz
sbb
push
pop
adc
sub
sub
sub
add
cwtl
add
mov
icebp
cmp
push
gs
adc
inc
and
adc
test
push
mov
pop
movsb
fadds
cmp
rcrb
push
push
xchg
dec
popf
xchg
adc
pop
fmul
stos
inc
inc
test
xchg
js
movsb
outsb
sbb
mov
mov
mov
mov
push
sbb
lods
adc
fcomps
cltd
leave
outsb
insl
cmp
adc
and
xor
xor
push
push
movsl
push
and
ljmp
ja
jmp
adc
sbb
fs
add
pop
ss
and
ljmp
add
sbb
fdivl
js
data16
imul
mov
test
push
xor
scas
insb
hlt
inc
dec
fnstenv
movsl
jno
arpl
jge
scas
push
mov
add
fdivrs
dec
cs
addr16
lret
repz
adc
hlt
subb
adc
xlat
push
test
fdivs
inc
sub
in
mov
sub
or
mov
cmpb
loopne
in
das
push
pop
inc
sub
mov
outsl
xor
mov
shrl
cmp
fdivrs
inc
adc
adc
cmp
out
xchg
jnp
loope
movsl
pop
push
leave
inc
je
xor
div
sbb
mov
mull
and
adc
push
sbb
adc
scas
push
mov
xchg
push
push
dec
push
dec
divb
adc
sub
pop
adc
xchg
paddb
das
or
push
adc
fists
inc
cmp
push
adc
pop
dec
mov
xchg
loop
sahf
pop
inc
in
dec
jno
xchg
mov
call
pop
dec
sub
ljmp
mov
inc
jle
insl
cs
loope
nop
mov
mov
dec
enter
sbb
fs
inc
mov
push
sub
movsl
shl
mov
mov
outsb
pop
enter
adc
nop
rorl
xchg
pop
fdivrl
daa
call
fsub
mov
sti
lret
sahf
es
sbb
pop
pop
xor
aas
push
scas
test
arpl
cmpsl
push
jle
add
dec
arpl
aaa
and
mov
adc
adc
or
mov
jp
add
push
add
and
adc
andb
mov
jg
movsl
jne
mov
add
lock
dec
repz
mov
lods
inc
lcall
adc
and
cltd
pushf
push
sub
mov
insl
push
or
mov
fsubs
xor
je
fiaddl
popa
les
rorb
shlb
pop
mov
mov
fnsave
mov
and
call
dec
mov
test
loope
les
inc
sbb
cmp
add
inc
gs
out
ds
and
outsl
rolb
adc
jge
cs
or
movsw
adc
daa
mov
rolb
cmc
loope
inc
jae
lret
lods
mov
add
or
lods
jge
call
shrl
test
lds
ljmp
lods
rorb
pop
unpckhps
cwtl
inc
jmp
enter
call
push
ljmp
insb
jge
push
pop
das
and
inc
inc
lock
pop
ljmp
dec
mov
pop
mov
xchg
dec
xchg
mov
in
mov
rolb
add
lea
sub
pop
pusha
push
fidivl
int3
or
adc
imul
push
push
loopne
jne
cltd
pop
icebp
mov
inc
mov
cltd
xchg
push
push
lods
ss
xor
pop
xchg
dec
fstpt
test
sub
pop
std
adc
xchg
mov
sub
lea
jl
fcomps
jl
cmp
and
fsubr
lahf
xor
mov
lcall
rcrl
inc
xor
mov
in
pop
adc
jnp
adc
jmp
cmp
dec
sub
mov
jbe
adc
dec
mov
dec
jg
mov
jp
add
sub
popf
or
dec
testl
mov
or
mov
dec
and
cli
ss
pushf
xchg
push
xchg
dec
outsl
les
lret
sbb
jp
std
push
testb
jp
push
or
push
pop
adc
aad
adc
xor
push
xchg
cmp
in
pop
popf
mov
xor
mov
call
or
mov
jmp
sbb
xchg
adc
mov
das
stc
out
loopne
ficoml
cmp
pusha
dec
jg
mov
jge
inc
sub
int
xor
cli
mov
or
rcll
pop
dec
cmp
movsb
sub
push
dec
add
and
or
inc
mov
adc
sub
push
and
push
stos
cmc
xchg
scas
mov
sbb
inc
adc
je
dec
push
daa
sub
fucomi
or
inc
imul
pop
jg
push
sub
xchg
sbb
jae
push
mov
jp
adc
mov
mov
and
inc
pop
sub
idivb
in
dec
loop
mov
sti
mov
inc
pop
cmp
adc
sub
pop
pop
fdivs
fsts
pop
daa
loopne
or
adc
or
and
je
mov
or
in
add
rorb
add
fs
shl
or
loopne
pop
hlt
xor
lds
mov
cltd
call
imul
fidivl
hlt
mov
lds
test
into
fs
enter
push
test
in
sti
and
pop
jns
in
sti
adc
push
or
cmp
push
jnp
cmp
faddl
push
and
push
ja
daa
mov
and
fsub
pop
daa
adc
xchg
cltd
popf
jne
clc
mov
testb
mov
imul
lcall
pop
popa
test
push
xlat
push
insl
ds
in
sbb
mov
cli
popa
lock
roll
cmp
inc
xchg
stos
mov
dec
outsb
push
inc
hlt
test
xlat
cmp
cmp
adc
out
inc
pop
sbb
adc
sub
xor
jne
sub
or
shrb
nop
addl
std
mov
movsb
call
hlt
xor
sbb
cs
xlat
addb
push
lret
push
dec
lock
sbb
xor
cmc
bound
push
addl
or
mov
lret
push
arpl
push
or
xor
push
xor
or
or
add
and
arpl
leavew
rcll
and
sbb
bnd
clc
sarl
inc
test
mov
or
ds
lock
mov
push
jns
mov
sarl
jbe
dec
iret
in
inc
jmp
ljmp
jg
sbb
inc
adc
mov
icebp
jmp
cs
and
fwait
inc
and
adc
lock
aas
sub
xor
loope
push
and
jo
imul
test
add
adc
sbb
cmp
leave
cld
push
and
loop
and
push
and
cld
sbb
sbb
icebp
push
mov
push
bound
test
adc
lods
into
les
or
adc
push
fmull
ficoml
scas
pop
test
xlat
adc
mov
lahf
test
push
jbe
or
push
sub
call
int
jne
icebp
mov
mov
dec
push
mov
inc
cld
pop
xor
jecxz
xchg
mov
jmp
inc
mov
xchg
dec
int
adc
push
stos
cmc
or
mov
inc
mov
bound
or
rcr
shlb
inc
jbe
mov
mov
xchg
push
cli
or
test
inc
mov
rorl
cmpsb
adc
adc
bound
add
cwtl
mov
loopne
insl
je
femms
mov
inc
nop
mov
mov
fcoml
xchg
mov
nop
fisubs
push
jne
dec
or
inc
and
jle
cmp
sub
test
fimuls
enter
push
das
hlt
stos
ret
cmp
sbb
jg
push
movl
xlat
mov
int3
push
mov
cwtl
ret
or
pop
add
dec
sti
mov
or
push
jmp
xchg
bound
cmc
cmpsb
sbb
ds
pusha
push
pop
jne
movsb
adc
gs
cs
add
cmp
jbe
dec
and
lock
cmpsb
clc
push
es
push
leave
xchg
push
lret
cmp
fdivl
ja
jnp
ds
add
lahf
int
hlt
jne
push
repz
ret
rcpps
mov
notl
lds
pop
subl
daa
testb
test
dec
push
into
es
int
nop
out
and
pushf
clc
movsl
dec
jle
push
mov
movsb
movsb
sti
and
or
adc
mov
sub
sub
clc
pop
mov
and
sub
inc
sbb
int3
dec
dec
xor
shl
test
mov
hlt
in
in
push
daa
mov
add
mov
push
push
mov
inc
inc
pop
or
jge
pop
mov
adc
push
dec
jno
inc
cmp
mov
sbb
enter
add
in
into
notb
roll
and
xchg
or
es
pushf
sub
dec
add
aam
push
roll
xor
sub
ja
test
pop
lea
push
adc
mov
xchg
test
outsl
lods
jne
dec
push
xor
cmpsl
daa
mov
mov
xor
or
stos
mov
pop
xor
xor
dec
add
es
xor
and
add
ja
mov
jb
push
mov
push
push
add
fstps
popa
jle
popf
inc
push
cmc
or
jbe
pop
add
fcmovnb
push
cmp
jmp
data16
sub
mov
mov
in
das
into
pop
pop
jne
fnstsw
enter
cmp
pop
xchg
clc
inc
mov
outsl
fs
pop
mov
rorb
jbe
adc
je
push
sbb
jne
pop
mov
cld
lods
inc
lcall
fs
popf
adc
leave
mov
testb
adc
iret
mov
lock
scas
sub
imul
push
xchg
xchg
in
adc
push
popf
dec
sub
sub
xor
icebp
jbe
sub
pop
shlb
xchg
out
test
sub
mov
inc
mov
dec
adc
inc
jmp
sub
adc
xchg
mov
repnz
into
repz
fstl
xor
push
in
pop
clc
xchg
subb
push
and
adc
popf
jns
xchg
int3
adc
clc
test
xchg
movsb
decb
clc
adc
xor
scas
jge
imul
push
stos
jb
push
stc
cmpsl
cmpsl
mov
push
cs
dec
loop
leave
push
push
shll
mov
jmp
jns
xchg
push
lods
mov
jne
scas
cmp
cltd
or
sub
lret
stos
daa
nop
cld
jnp
dec
push
fldenv
sub
call
cli
cmpsb
and
cmpsl
add
lahf
inc
pop
mov
push
xchg
scas
popf
cmpsl
inc
mov
and
lods
or
in
dec
idivl
test
movsl
out
sub
push
fisubs
cmp
mov
mov
iret
push
mov
fwait
mov
adc
lock
les
jne
push
dec
in
mov
enter
hlt
out
dec
mov
dec
sub
popf
sub
sub
mov
xchg
aam
push
push
icebp
dec
lret
fcoms
cmp
cmpsl
xchg
sbb
mov
add
add
mov
mov
xor
shl
pop
jbe
hlt
push
sahf
mov
or
and
fists
mov
add
in
and
jl
xor
js
jne
adc
shlb
cmpb
cltd
mov
push
rcll
lea
movzbl
push
pop
leave
call
popa
adc
sub
inc
lods
sub
and
add
mov
xchg
insl
mov
ja
add
cld
pop
mov
mov
jmp
jne
gs
add
xor
push
push
push
pop
clc
push
jg
mov
push
out
and
popa
sahf
pop
jne
scas
xlat
ja
jmp
ja
push
daa
adc
cmp
mov
je
push
mov
or
in
lahf
cmp
ficomps
jae
in
dec
sbb
xchg
sbb
sub
push
stos
pop
jmp
rolb
push
inc
dec
std
aas
mov
cmp
jmp
andl
push
ficomps
inc
gs
popf
jl
xchg
mov
push
cwtl
inc
mov
and
mov
push
push
arpl
xor
pop
or
and
mov
sub
cmpl
std
int3
aas
inc
and
in
je
bound
cmp
scas
bnd
fwait
and
psubq
push
add
mov
dec
scas
jnp
es
cmpsb
cmpb
push
fisubs
add
bound
popa
jbe
adc
fwait
mov
jmp
mov
jns
movsb
inc
lea
adc
mov
mov
lds
mov
loopne
cmp
add
mov
jle
rorb
lods
xchg
scas
push
test
insl
scas
xchg
mov
insb
lcall
sgdtl
sarl
js
push
lods
mov
je
push
nop
cmp
out
test
pop
loopne
jle
sbb
inc
ljmp
movl
sub
inc
sbb
call
sub
add
mov
movsb
xor
add
and
lcall
andl
in
mov
pop
push
sbb
push
andb
cmp
adc
cmp
and
push
gs
and
pop
jmp
cltd
pop
loop
or
add
mov
xor
sub
push
and
jb
ficoms
adc
repnz
bound
fmull
jle
sbb
add
lsl
rolb
das
movsb
mov
xchg
out
shr
cmpsl
fldenv
js
loop
ret
sub
jge
pushf
mov
test
or
adc
lret
mov
addr16
repnz
and
stos
pop
clc
andl
mov
lret
xchg
or
lret
icebp
or
js
mov
movsl
pop
nop
sub
inc
cld
repnz
mov
dec
jge
and
nop
dec
lret
aam
in
mov
test
rcrb
push
sbb
mov
in
nop
in
jne
pop
jle
nop
idivb
lock
mul
fnstcw
jg
cmc
push
push
rol
jbe
pusha
mov
sub
pop
subl
xchg
mov
mov
pop
sub
pop
dec
mov
push
push
jne
mov
insl
cmpsl
sarb
jne
mov
je
push
jb
jne
cltd
pop
inc
push
add
cli
push
pop
out
daa
inc
and
cmova
scas
or
inc
hlt
jecxz
repz
push
inc
ret
stc
mov
stc
mov
bound
frstor
mov
pushl
in
push
stos
iret
and
inc
xlat
and
in
pop
mov
pop
pop
jge
popa
cmpsl
lahf
lret
cmc
mov
ficoml
add
or
fbstp
sub
adc
orl
push
sub
dec
addr16
test
jle
js
test
and
pusha
jne
push
cmpsl
adc
xchg
push
loope
adc
push
mov
call
dec
leave
pop
ja
dec
pop
in
cs
je
nop
mov
mov
jbe
test
nop
pop
push
sub
xchg
in
and
jg
xchg
adc
jbe
cld
test
and
repnz
push
fadds
cmp
adc
icebp
sbb
gs
pop
mov
movsb
clc
sbb
stos
lret
call
punpckldq
mov
js
push
jnp
mov
das
out
mov
or
adc
sbb
mov
movswl
in
jp
push
jo
and
out
xor
je
popf
pop
and
add
jne
mov
mov
adc
addb
sbb
out
setb
lret
lahf
mov
out
cmovnp
sub
adc
xchg
push
fisttps
dec
and
inc
push
rclb
and
pusha
cmpb
iret
rcrb
mov
sub
loop
fucomp
shl
cmp
stos
into
adc
leave
movsb
movd
fistpl
dec
push
sub
push
ds
rolb
fstps
lods
loop
pop
mov
loop
sbb
inc
hlt
fldenv
je
push
inc
and
pushf
cmp
cmpb
test
jne
jo
or
cmpb
outsl
fidivrl
adc
fnstsw
int3
stos
test
je
adc
das
mov
and
inc
lea
xchg
insl
adc
and
movsl
cmp
pop
fiadds
adc
jg
jmp
and
ret
aas
nop
les
adc
andnps
xor
outsl
enter
pop
cmp
and
pop
fs
inc
movsb
inc
fldenv
outsb
insl
xor
sbb
pop
sbb
mov
xor
stos
and
nop
add
xlat
sahf
lret
xchg
mov
std
jp
out
lds
cmpsb
pop
mov
insb
sub
subb
mov
adc
push
sbb
test
std
xor
and
shlb
jge
or
test
and
push
push
xchg
dec
call
pusha
mov
mov
test
insl
inc
outsl
movsl
loopne
enter
mov
cmp
mov
bound
ja
xor
xchg
andb
push
ss
push
jge
shll
mov
rcr
test
outsb
int
cli
icebp
pop
sub
jbe
push
les
sti
adc
jge
push
pop
shlb
xor
orb
push
cltd
sbb
push
fdivrl
sub
out
xchg
sbb
sahf
inc
mov
repz
sbb
js
xor
inc
in
mov
aam
xlat
test
cmc
mov
int3
cwtl
hlt
test
push
add
push
out
xchg
in
sbb
adc
cmp
adc
stc
aas
movsb
aaa
mov
push
hlt
push
adc
pushf
sbb
rolb
mov
push
xchg
push
sub
cli
xchg
sub
lcall
lods
jg
in
inc
cmc
inc
popa
mov
lret
push
mov
insb
add
adc
mov
cmp
xor
outsl
cld
test
call
sub
add
cmp
in
inc
push
mov
shl
test
dec
sbb
test
ret
dec
or
outsb
imul
loop
mov
fcoml
mov
pop
nop
mov
xchg
xor
fmuls
mov
and
push
xlat
loope
sub
sbb
rcrb
or
xor
pusha
imul
jno
gs
xor
push
inc
mov
shll
sub
sub
jae
aas
mov
inc
adc
add
jg
leave
outsb
add
out
mov
les
inc
mov
and
and
push
leave
jbe
sbb
lods
pop
xchg
ja
pop
ficompl
out
xchg
out
mov
movsb
sub
sbb
sub
push
neg
xchg
clc
xchg
movsl
movsl
and
push
ret
adc
cmp
cmp
scas
xchg
dec
mov
dec
call
stc
mov
daa
pop
cs
mov
ljmp
decb
pop
mov
cmpsl
add
mov
cmp
jne
pop
fmul
inc
mov
adcl
jge
push
push
sbb
lahf
push
imul
jne
xor
push
fs
sub
push
sub
stos
rcr
sbb
jns
mov
or
cmpsl
fistl
push
pop
pop
addr16
adc
and
push
mov
xchg
out
repnz
addr16
lock
les
sub
fidivl
icebp
outsl
add
ja
sbb
pop
add
cmp
add
push
lock
sbb
inc
xchg
xchg
dec
cwtl
add
and
and
into
or
shl
add
or
push
xchg
pushf
inc
pop
jmp
xchg
out
xchg
push
mov
adc
icebp
int
add
and
adc
loop
sbb
ret
call
lods
mov
stos
inc
aam
lock
sub
push
test
xchg
pop
aaa
lcall
sub
push
testl
mov
cmc
dec
addr16
and
mov
xchg
push
jb
jne
cli
inc
push
imul
add
shr
ja
jbe
add
cltd
sub
mov
jns
or
add
dec
aad
aam
pop
or
pushf
ret
int3
xchg
fdivs
or
popa
cmp
shr
adc
mov
inc
adc
xchg
inc
pop
pop
cmpsb
popa
pop
cmp
lcall
cli
sar
mov
and
int3
iret
or
aam
imul
push
mov
cmc
shlb
pop
into
loop
sbb
inc
push
or
enter
or
testb
popa
xlat
push
rcr
cld
icebp
jne
lahf
icebp
shrl
push
add
movswl
aam
into
and
pop
xchg
push
cmp
ljmp
ret
push
xchg
add
mov
and
fmull
dec
push
or
test
test
cld
sub
lea
popl
test
int3
outsl
shl
loopne
inc
repnz
test
mov
dec
mov
ja
aam
and
mov
cmp
sub
dec
stos
and
pop
adc
shr
enter
aaa
jne
mov
int3
add
jle
in
or
xchg
xor
out
imul
filds
mov
jp
int3
push
xchg
jl
pop
or
aam
ret
dec
pop
fstl
and
pop
mov
dec
repnz
mov
adc
mov
test
aaa
dec
push
ja
adc
shll
test
aam
push
jo
pop
cli
repz
out
adc
xchg
lds
in
push
jns
lahf
iret
cwtl
dec
push
mov
push
je
into
mov
int
push
rol
dec
and
test
dec
jmp
pop
in
or
bound
push
jns
jmp
ret
cld
push
push
in
dec
push
lods
mov
add
dec
jne
pop
xor
jecxz
jp
ss
and
mov
and
push
sbb
repnz
or
nop
sahf
out
mov
clc
mov
push
jge
xchg
xor
cltd
sub
xor
not
xor
adc
ss
in
cli
sti
arpl
and
xorb
dec
enter
inc
push
and
daa
mov
inc
shl
inc
jne
test
mov
loopne
adc
loop
in
out
call
or
jne
lock
es
data16
sub
inc
xor
push
or
add
outsb
int3
sarb
push
inc
les
rorb
clc
mov
adc
cld
outsb
gs
fdiv
fadd
xor
sub
shrb
adc
in
or
or
fbld
adc
push
clc
faddl
lret
ljmp
ds
hlt
mov
outsl
xor
jg
fmulp
fs
or
ljmp
and
mov
sbbl
xchg
std
adc
inc
adc
and
test
mov
adc
push
insb
cld
add
adc
loop
xor
cld
test
cmp
movsl
js
xchg
jp
gs
test
sub
xchg
sbbb
mov
aaa
ret
or
test
push
mov
mov
mov
nop
or
xchg
adc
cwtl
push
xchg
pushf
sub
sbb
std
sbb
push
mov
mov
and
mov
adc
aas
sbb
int3
aad
or
stos
mov
push
popf
in
sti
xchg
lret
sub
mov
loope
and
repz
xor
push
movsl
or
dec
mov
jnp
dec
daa
cmp
les
push
sti
mov
mov
or
jl
pop
pop
hlt
cmp
sub
xor
cmp
movsl
cmc
xchg
mov
loopne
adc
sbb
mov
cltd
sbb
dec
or
or
add
xor
cmpsb
adc
or
xor
push
cmp
bound
in
sub
adc
mov
inc
in
std
hlt
fmull
and
imul
dec
clc
mov
push
jl
lock
cmp
call
xchg
mov
inc
add
mov
and
sar
rol
popa
add
mov
les
in
jo
pop
xlat
gs
rorb
mov
sti
and
mov
inc
pop
test
sti
and
sbb
inc
std
lahf
nop
sti
mov
inc
out
ja
push
and
and
push
jle
or
xchg
mov
mov
addr16
fcoms
outsb
inc
fs
dec
dec
add
push
push
mov
sbbl
daa
out
pop
ret
or
add
xchg
mov
mov
ficompl
dec
inc
xor
je
pop
mov
lock
sbb
dec
or
test
jmp
sub
xor
enter
sbb
jne
mov
cmpsl
int3
in
jmp
push
ja
aam
ljmp
adcb
bound
lods
test
push
stos
cmpsl
shr
add
add
push
pop
and
in
mov
cmp
in
std
adc
push
loop
xchg
loopne
inc
pushf
ds
or
sub
mov
movsl
push
test
and
mov
jbe
dec
xorb
cmp
clc
aam
test
lods
aam
test
daa
inc
mov
lods
inc
pusha
mov
inc
push
xchg
scas
dec
icebp
xchg
cs
les
mov
adc
std
les
shrl
insb
in
jmp
imul
test
xor
xchg
mov
jno
call
sbb
pop
test
xor
mov
jmp
jne
xchg
outsb
cmp
or
sub
cwtl
and
mov
and
adc
in
pop
sti
mov
mull
rcrb
push
pop
hlt
repnz
insl
mov
aas
scas
mov
lock
ljmp
js
test
xchg
clc
dec
cld
push
in
add
xchg
sub
ljmp
inc
cmp
or
push
scas
push
stc
sub
mov
movsb
xchg
lods
push
inc
pop
addb
ret
pop
inc
jl
jne
jne
popa
in
dec
cwtl
stc
cli
enter
inc
pusha
and
inc
sahf
test
fdivl
push
inc
sbb
test
or
adc
imul
mov
hlt
subl
lods
outsl
adc
xchg
sub
scas
sahf
or
cmp
xorb
xlat
and
mov
push
mov
adc
fsts
les
ret
xchg
and
mov
into
sbb
sub
int3
adc
mov
lock
sarb
int3
test
sbb
ds
loopne
inc
lret
test
push
imul
cli
xchg
pop
mov
pop
add
mov
and
loop
and
sti
popf
in
pop
lods
sbb
cmpsb
sub
push
je
push
inc
mov
and
push
int3
lret
rclb
pop
mov
shl
sbb
cld
push
pop
inc
inc
mov
leave
jge
sub
mov
push
jl
repnz
xor
and
jmp
movl
inc
jg
inc
das
test
loop
dec
shlb
enter
jne
ret
push
push
daa
mov
sbb
adc
xor
jne
add
lea
fimuls
pop
mov
out
pushf
mov
push
jne
mov
jmp
out
daa
sbb
push
and
scas
lcall
push
jnp
dec
xchg
out
push
mov
fs
fdiv
iret
out
and
adc
loopne
sbb
and
dec
jp
mov
pop
test
shl
jl
jns
xchg
int
push
fisubs
es
xchg
sub
add
cmp
lock
push
xchg
push
fwait
jl
rclb
rorl
addb
xor
lods
data16
push
movb
mov
and
add
mov
dec
inc
mov
cltd
adc
mov
mov
sarb
mov
inc
inc
lret
inc
xchg
mov
mov
xor
mov
sub
fnstsw
mov
sti
push
push
push
inc
fsubrl
push
out
imul
cld
mov
iret
or
fsubrs
add
scas
push
jbe
sti
xchg
in
stos
inc
and
imul
pop
jle
inc
jge
in
push
cmp
out
push
ret
dec
xchg
sub
sub
sbb
int3
xchg
push
sahf
or
push
or
test
jmp
fld
notb
std
xchg
xor
daa
inc
xchg
fimull
enter
adc
push
std
stos
lea
cmp
and
rcll
lret
lea
dec
shrb
dec
push
out
adc
cltd
repz
loopne
scas
enter
lock
or
jmp
stos
iret
lods
mov
cmp
out
dec
adc
rcll
mov
cmp
repz
add
add
cld
xchg
and
dec
or
mov
lods
cwtl
xchg
je
mov
pop
scas
shr
cmpsl
ret
fbstp
adc
push
add
rcrw
push
mov
int
scas
flds
add
xchg
add
push
lret
xlat
arpl
inc
adc
jg
cld
xchg
and
and
es
adc
push
add
pop
mov
nop
inc
push
adc
pushf
jno
mov
xchg
test
xor
or
sbb
cltd
add
enter
int3
and
or
sarb
adc
faddl
adc
nop
mov
stos
mov
add
stos
push
imul
pop
inc
fs
adc
add
test
push
clc
cmp
mov
leave
in
push
push
ffreep
push
inc
push
add
push
inc
inc
lods
jb
nop
push
cltd
lret
arpl
pop
out
or
dec
adc
mov
ret
cltd
inc
jo
leave
mov
test
xor
movsb
mov
in
sar
dec
inc
mov
ja
mov
adc
pop
inc
mov
lock
cmp
jmp
mov
mov
jmp
mov
clc
test
sbb
mov
sub
push
mov
adc
push
lock
jmp
repz
loope
sub
dec
dec
jnp
dec
popa
js
mov
orb
push
adc
pcmpeqw
push
add
decb
adc
in
cli
mov
push
mov
mov
sbb
test
mov
clc
push
shl
nop
pop
adc
push
mov
insl
mov
and
jo
push
adc
push
gs
lock
adc
jl
mov
jecxz
or
and
and
or
push
cmp
hlt
push
xchg
adc
add
adc
das
push
ds
movsb
shl
sbb
mov
jmp
rcrb
mov
adc
add
and
mov
sti
dec
ljmp
rep
mov
adc
sbb
outsb
sub
lods
mov
daa
sbb
xor
loopne
lcall
or
fadd
sbbl
fisubl
inc
lea
mov
and
add
mov
imul
cli
cmpl
cs
int3
bswap
add
testl
inc
pusha
loopne
imul
inc
sahf
mov
jle
pop
jae
xchg
xchg
nop
or
mov
aam
movsb
inc
mulb
mov
das
adc
in
lea
push
lds
test
sti
out
pop
mov
and
and
adc
sub
and
mov
sbb
movsl
call
decl
insb
adcl
push
mov
add
fidivrs
movzwl
push
lret
add
inc
mulb
repnz
outsl
enter
jae
pop
sub
and
into
sahf
pop
mov
roll
pop
mov
adc
or
add
dec
and
mov
pop
push
xchg
dec
push
adc
add
push
push
aaa
sbbb
mov
add
push
inc
int3
adc
popf
xchg
adc
fnsave
rcrb
cld
pop
lahf
les
hlt
cmpsl
pop
fs
cmp
stos
inc
dec
pop
cmp
or
cmp
mov
inc
push
jne
push
inc
je
mov
popa
xchg
push
or
jno
cmp
inc
inc
subl
cmpsl
adc
push
jmp
cld
je
in
jnp
or
out
cmp
jge
xchg
mov
pop
sbb
cmp
ret
sbb
jbe
xlat
push
push
jb
mov
insb
fbld
push
mov
cmp
lock
push
movsb
sbb
push
add
es
lcall
fdivs
jnp
adcl
jne
ljmp
iret
repz
arpl
cli
mov
stos
xor
loopne
or
and
add
cltd
push
or
fistpl
xchg
jmp
out
pushf
mov
fldcw
dec
xchg
out
fs
mov
inc
push
xor
fcomps
push
sti
iret
jne
push
ljmp
inc
aad
and
jge
sub
push
sbb
mov
sarl
out
rol
push
push
aad
add
dec
faddl
test
popf
icebp
pop
inc
lock
adc
mov
movsb
xor
out
mov
out
iret
jbe
loopne
cmp
mov
jns
mov
leave
jne
loop
jne
cltd
cmp
inc
ret
mov
add
cmp
mov
cmp
pop
mov
cwtl
mov
pop
in
mov
ret
pusha
call
push
mov
aaa
es
mov
imul
fs
mov
or
jmp
mov
cmp
movsl
dec
inc
das
xorl
and
inc
jp
fnsave
mov
call
or
sbb
pop
dec
sub
int
mov
or
jmp
and
dec
in
sub
xor
jg
cld
add
add
popf
jmp
scas
aas
push
scas
gs
add
add
and
popf
in
xor
cmp
das
and
pop
enter
adc
lret
pop
inc
sti
jns
and
jg
sub
jno
or
lods
push
in
mov
mov
dec
push
pop
mov
movsb
pop
jne
sbb
outsl
xor
jb
mov
xchg
cmp
mov
mov
pop
add
mov
insb
lods
cmc
imulb
inc
or
dec
fsubrs
ds
ljmp
push
mov
push
cltd
add
mov
popa
adc
inc
cmp
push
jl
cld
or
mov
les
mov
imul
mov
cmp
es
and
dec
sub
mov
and
stos
dec
popf
lcall
cmp
sub
xor
insb
popa
pop
test
addr16
mov
out
sub
jno
sbb
inc
dec
repz
lcall
out
xchg
pop
pop
clc
sub
ljmp
and
mov
pop
call
ja
in
rorl
ljmp
mov
jne
mov
push
xchg
aam
push
xchg
int3
push
jl
sahf
mov
dec
mov
pop
xchg
cmp
cmp
mov
sbb
jmp
cmpsb
lcallw
jp
adc
ss
ds
scas
popa
jl
mov
aas
dec
pop
cmpsl
or
jle
push
jmp
lods
orb
dec
mov
inc
lock
xchg
dec
std
testb
test
inc
daa
jle
jno
sbb
clc
aad
mov
sub
or
and
rorl
cmpsb
bound
les
push
or
jb
or
sub
mov
xor
repz
mov
testb
icebp
push
sub
and
sbb
das
pusha
popa
add
sub
shll
cwtl
fimull
and
jae
xchg
sbb
cwtl
cli
inc
js
xchg
fsts
lret
adc
std
into
xor
mov
mov
arpl
adc
push
dec
scas
xchg
xor
in
orl
adc
mov
or
and
and
push
sub
mov
pop
faddl
lahf
mov
pop
andl
jae
mov
sub
sahf
mov
lcall
stos
sub
jge
popl
mov
add
shr
mov
push
push
push
adc
stc
cmp
int
rolb
dec
inc
aaa
je
mov
jo
jmp
cmpb
js
and
pop
lret
and
inc
cld
jge
add
jmp
div
repnz
sbb
inc
adc
mov
push
inc
cmp
enter
xchg
cmpsl
xchg
and
test
aam
mov
mov
and
add
mov
sub
imul
jge
or
or
lods
sbbb
sbb
xor
and
xor
push
aad
push
lret
cld
rcr
or
jmp
or
cmpsl
enter
loope
sbbb
and
out
pop
push
push
mov
in
cmp
ficoml
lahf
iret
mov
aad
sub
mov
mov
inc
add
mov
push
and
dec
les
jl
sub
jne
mov
xor
mov
xor
ljmp
pop
pop
roll
enter
push
mov
xor
xchg
subb
adc
adc
inc
cmp
and
mov
ret
stos
ret
stc
pop
push
shlb
rorl
pop
mov
in
adc
mov
mov
hlt
fimull
stos
pop
test
jle
into
insb
cwtl
or
push
adcb
cld
mov
add
ret
or
push
das
or
pop
cltd
idiv
test
jo
push
sub
push
jmp
dec
adc
or
icebp
jb
femms
mov
andb
mov
mov
aaa
pop
lods
and
dec
xor
sub
and
push
sbb
ud2
push
mov
gs
outsl
mov
mov
test
mov
int
ds
or
mov
hlt
and
mov
adc
or
psubsb
pop
test
sarb
add
call
je
push
cwtl
add
or
pushf
jns
jge
repz
fs
movsl
mov
add
test
and
loop
sub
sbb
pop
insb
push
pushf
in
xchg
mov
loope
daa
lds
mov
push
push
imul
lds
push
mov
sub
bound
sub
push
jmp
xor
mov
pop
sahf
stos
xchg
jae
cltd
and
push
sub
daa
inc
cmp
data16
sub
out
in
mov
cmp
pushf
adc
fbstp
or
andb
subl
push
push
pusha
inc
sti
mov
addb
xchg
shlb
test
mov
sbb
daa
fstl
jmp
fcmovnu
push
inc
fdiv
jae
dec
pop
fdivrs
jmp
out
loopne
repnz
dec
lea
in
jecxz
push
xorps
dec
adc
jl
add
je
push
adc
jge
add
test
push
fwait
popa
je
pop
jne
sub
xor
test
std
adc
xchg
fs
and
xorb
xchg
fists
adc
jmp
cmp
pusha
movsb
push
test
mov
fnstcw
push
and
mov
dec
and
pop
daa
test
popa
dec
hlt
popa
int
fdivrs
xchg
movsb
sub
scas
gs
les
fwait
pushf
and
mov
dec
fdivl
push
push
orl
mov
imul
mov
jno
push
sbb
mov
sbb
add
jns
push
cmp
jns
mov
sbb
fistpll
sbb
aas
int
icebp
popa
dec
add
enter
xchg
lods
out
dec
or
ja
test
push
sub
scas
push
mov
loop
sbb
test
xor
push
jnp
mov
mov
push
xchg
mov
test
adc
jbe
xchg
ljmp
mov
pop
sahf
sbb
or
je
nop
inc
dec
add
cmp
sbb
test
mov
negl
push
mov
sti
int
and
and
or
sbb
xor
inc
push
pop
fistps
cmpsb
leave
push
mov
ja
test
addr16
repnz
push
lret
cwtl
mov
push
repnz
repnz
xchg
mov
add
in
rorl
packuswb
cmp
sahf
push
loop
es
inc
pusha
mov
mov
sbb
xor
inc
push
imul
pop
mov
lret
xlat
lds
push
and
test
mov
sbbl
sub
sbb
or
dec
int3
sbb
and
nop
std
out
bound
dec
aam
jp
lcall
and
xor
push
mov
mov
lock
adc
popa
call
sub
dec
pop
push
xchg
pop
adc
inc
push
flds
lea
dec
and
mov
push
scas
xor
daa
shr
inc
in
sub
sbb
aas
fstpl
in
mov
add
cmpw
jne
push
test
adc
aaa
inc
mov
loope
inc
loop
cmp
push
mov
lea
xchg
pop
pop
movl
inc
push
push
ffree
cld
push
sbb
out
mov
pushf
dec
mov
and
js
jne
jo
sub
pop
xor
adc
mov
mov
or
mov
test
sti
sbb
jb
pop
popf
imul
loope
pop
mov
in
imul
adc
xchg
repnz
loope
mov
mov
fwait
jo
nop
jnp
mov
ljmp
int3
mov
sub
sbb
pop
add
lock
jg
pop
daa
lock
xchg
adc
call
jne
fs
xor
inc
repz
cmp
loope
fiadds
add
adc
leave
pop
int3
adc
xchg
arpl
pop
inc
es
mov
push
cmpsb
dec
push
roll
mov
fs
imul
es
mov
int3
shl
inc
add
int3
cmp
jg
and
enter
lods
xchg
mov
bound
in
pop
in
jmp
mov
xchg
jl
or
call
inc
mov
insb
push
cmpsb
or
dec
mov
mov
sub
sbb
jo
test
cmp
add
xor
mov
and
lock
pop
movsl
out
rol
pop
testb
sub
into
sub
mov
mov
es
sarb
stc
mov
andl
fdiv
lods
sti
xchg
dec
je
je
mov
mov
jae
mov
and
sarb
adc
pop
jb
add
push
dec
insb
xlat
nop
mov
jo
gs
inc
inc
push
dec
push
insb
mov
imul
loop
xlat
jecxz
inc
mov
loope
and
add
jae
mov
inc
popf
aam
pop
inc
jb,pn
popf
imulb
xchg
aas
xor
mov
jecxz
add
push
scas
inc
ss
subb
lods
jnp
cmpsb
aas
mov
fnstsw
mov
push
lea
cwtl
inc
or
data16
cli
rorb
adc
dec
xchg
inc
leave
push
pushl
stc
iret
test
ljmp
adc
inc
out
sti
movsb
in
cmpsb
xchg
and
sbb
outsl
cld
stos
int
sbb
repnz
fwait
adc
mov
in
mov
pop
mov
inc
add
shrb
mov
lods
test
es
xchg
in
jmp
add
mov
dec
add
push
out
sar
mov
jne
fcomip
jge
jle
test
ret
sarb
push
jb
xor
xchg
out
mov
jmp
sbb
sbb
fisttpl
testl
testl
adc
lret
pop
mov
mov
dec
lods
inc
jbe
cmpl
adc
into
add
push
into
pop
rcll
adc
rcll
mov
mov
mov
mov
loopne
loopne
add
mov
dec
call
dec
cmp
out
add
in
es
pop
idivl
insb
aaa
jbe
loopne
mov
dec
dec
sub
fwait
mov
mov
js
inc
and
jle
loopne
in
mulb
sub
push
std
lcall
xor
jnp
jo
mov
or
out
lods
std
inc
mov
cli
jge
xchg
or
pusha
push
push
pop
or
fstpt
movl
sti
aas
pop
add
push
cwtl
clc
fisttps
call
test
mov
sbb
or
pxor
push
enter
cmp
cld
and
push
dec
and
rcll
hlt
xor
push
mov
hlt
inc
jle
jl
pop
push
inc
nop
or
test
daa
cmp
or
pop
sbb
or
mov
xchg
and
lds
dec
xchg
les
adc
cmc
loope
push
and
or
push
adc
jb
or
je
cmp
push
insl
jne
xchg
and
insl
sbb
stos
dec
pop
or
je
xchg
or
bound
out
mov
je
dec
add
enter
out
cmp
je
mov
lcall
or
mov
mov
mov
inc
inc
mov
nop
adc
push
scas
dec
lds
add
adc
fildl
push
aam
les
in
jge
fildl
fcoml
jmp
adcb
pop
data16
enter
xchg
mov
cltd
mov
inc
dec
jbe
movsb
pop
lcall
mov
rcrl
rcl
jb
in
cmp
lock
mov
sbb
dec
lahf
or
push
add
lcall
mov
jle
adc
ja
repz
add
pop
lcall
nop
nop
or
pusha
movsbl
sarl
pop
push
lahf
sub
fs
mov
inc
xchg
cltd
test
dec
lahf
jg
push
adc
leave
mov
mov
scas
push
adc
js
gs
jne
in
pop
jmp
jno
xchg
push
jl
mov
aas
mov
push
and
pop
inc
jge
dec
or
xchg
push
xchg
shlb
jl
push
xchg
and
cmp
inc
jmp
aad
stc
lea
inc
add
jo
sub
mov
mov
cli
mov
ficomps
lock
rol
mov
mov
sbb
push
test
mov
sub
mov
sbb
pop
mov
and
dec
mov
rol
inc
xchg
xchg
adc
mov
xor
sub
jmp
push
mov
dec
sub
xchg
jge
add
inc
inc
adc
or
mov
adc
dec
dec
inc
test
sbb
enter
xor
sbb
mov
xchg
add
lret
faddp
mov
pop
dec
ss
sub
adc
push
pop
shlb
xchg
adc
mov
out
mov
in
leave
push
jg
adc
mov
mov
sub
test
jle
mov
or
push
mull
jl
push
add
pop
ret
mov
xor
clc
jno
adc
xchg
inc
push
or
dec
push
cmp
ficomps
lds
inc
cmpsl
loop
dec
add
inc
push
in
push
ja
loopne
das
fcmovu
adc
mov
je
push
sbb
daa
push
sar
iret
and
push
xchg
mov
ljmp
mov
mov
cmp
pop
lock
pop
inc
xchg
sub
enter
mov
jne
jle
push
cmpsb
inc
sub
push
or
ss
xchg
imul
adc
or
push
cmp
popf
ret
inc
jmp
adc
pushf
mov
mov
push
outsb
cmp
aam
cmpsb
mov
mov
jb
cmp
loop
lock
insb
xchg
shlb
and
pop
sbb
out
xchg
out
mov
mov
inc
cs
cmp
pop
call
movsl
fbld
data16
leave
adc
mov
push
adc
mov
nop
lahf
mov
stc
aas
xor
mov
adc
pop
dec
mov
add
jmp
inc
xchg
popf
push
cmp
push
pop
popf
ljmp
push
movsb
inc
jae
cmp
lcall
or
or
lock
enter
rclb
cmp
push
jne
dec
cmpb
jne
sbb
add
dec
or
je
cmp
or
cmpsl
inc
cmp
jl
icebp
stc
or
pop
je
pop
addb
push
push
mov
in
adc
push
adcb
enter
mov
stos
lea
test
jl
sbb
fistpll
adc
add
pop
inc
sti
dec
clc
sbb
xlat
add
aas
jo
and
add
roll
cmp
pop
jl
test
jg
aam
cmpsl
cmp
mov
and
fs
scas
lods
xor
fldenv
pushf
daa
hlt
out
les
sub
vandpd
or
incb
popf
jle
dec
int3
inc
sahf
jg
mov
pop
xor
test
push
andl
dec
orl
push
roll
push
jge
dec
sub
lea
jb
dec
data16
ret
push
clc
xchg
dec
xor
shll
dec
dec
jmp
push
lds
stos
sub
add
dec
sbb
sub
push
push
in
sub
aas
pushf
xor
adc
adcl
inc
pop
rorb
jg
or
jne
pop
inc
mov
sbb
jb
sbb
add
das
sub
int3
mov
pushf
mov
pop
xor
mov
shlb
add
mov
cmp
push
pushl
sbb
sbb
jle
fnstcw
dec
xchg
fs
jbe
mov
add
push
popa
addl
leave
push
sbb
sub
cltd
pop
mov
repnz
mov
leave
cmovnp
leave
addr16
pop
loopne
mov
das
push
mov
and
and
int3
mov
xchg
sbb
jae
leave
mov
ret
adc
inc
push
xchg
stos
mov
dec
sub
adc
gs
mov
mov
mov
ret
outsb
jg
ljmp
push
gs
and
fwait
sbb
jmp
cli
jecxz
or
pushf
stc
fs
mov
leave
inc
push
sub
icebp
add
pop
das
pop
and
pmaddwd
pop
or
or
imul
addb
sbb
adc
and
cmp
xor
scas
cmp
decb
xchg
or
test
push
push
inc
adc
jo
hlt
mov
mov
inc
push
push
xchg
out
movsl
lea
pop
and
sbb
aad
stc
fstpl
test
xor
jo
xchg
push
mov
push
jmp
push
movsb
mov
icebp
scas
fcmovbe
push
adc
dec
jecxz
outsl
cs
and
js
pop
xchg
xor
mov
outsb
nop
cmc
in
insb
adc
scas
inc
xchg
lcall
lret
jg
adc
dec
xlat
outsl
test
cli
popf
sarl
iret
xor
outsl
cld
inc
mov
adc
jne
pop
jb
fs
xchg
xchg
fcoml
mov
push
addr16
xor
popf
inc
mov
arpl
and
and
jmp
pop
lock
xlat
xchg
lret
sub
cmp
sbb
ret
in
xchg
je
stos
and
add
sub
mov
pop
cmp
jle
inc
or
ljmp
sbb
push
ljmp
and
sub
in
inc
mov
aad
movsl
xchg
popf
inc
adc
adc
inc
or
dec
shr
pop
shr
inc
jb
dec
jbe
mov
pop
les
jp
cmp
inc
scas
or
or
push
mov
fmull
cs
jmp
push
jl
adc
dec
lea
xchg
shl
sarl
dec
popf
ljmp
jg
cld
xchg
sub
clc
sahf
ret
nop
ret
jl
sub
add
jge
call
cmp
add
and
cmp
inc
sbb
or
hlt
repz
test
push
cli
push
sbb
or
pop
sub
or
mov
push
fsubr
out
sub
add
jmp
repz
jo
sub
add
jle
test
push
jg
out
mov
pop
dec
adc
push
insb
test
pop
clc
rcll
pusha
mov
dec
fs
or
push
pop
inc
pop
mov
mov
rorl
aam
scas
pop
fwait
leave
repz
add
ja
je
mov
in
jmp
xor
into
xor
and
jl
jne
or
xchg
mov
and
mov
pop
cmp
cmp
enter
lods
sbb
push
mov
sbb
adc
test
sub
jne
sysret
jbe
hlt
icebp
aas
outsl
and
ds
mov
insl
je
lea
mov
push
ret
adc
pop
mov
clc
and
push
sub
addb
ss
addr16
movaps
mov
adc
stc
xor
adc
aam
sahf
or
mov
jle
inc
nop
add
stos
xor
ret
sahf
adc
in
inc
or
fdivrp
or
int3
out
sbb
loop
sbb
or
jmp
sti
adc
or
add
jmp
add
push
or
mov
add
and
mov
inc
hlt
out
movsb
shlb
xor
call
push
add
cmpsb
xor
mov
cmp
mov
or
in
mov
js
jae
fwait
or
je
push
cmp
sbb
adc
pop
mov
pop
ret
aas
push
inc
aas
inc
inc
aas
cmp
sub
aas
and
adc
cli
je
mov
cld
sub
cld
mov
jg,pt
mov
je
pop
cmp
inc
push
and
bound
mov
cmp
int
fs
mov
daa
pop
pop
sub
in
cmpsl
fldl
mov
push
cmpsb
nop
jne
shrb
mov
stc
or
mov
mov
and
jp
sub
push
pop
lea
jge
push
mov
in
mov
test
dec
inc
and
mov
jno
or
xchg
pop
pop
and
and
pushf
mulb
add
push
push
push
push
push
ret
cmp
push
mov
sub
sbb
xlat
testb
mov
or
or
jmp
mov
push
pushl
lds
pop
out
test
popa
xor
push
or
and
movsb
sub
in
pop
fadds
sub
aaa
gs
and
jb
and
push
push
in
push
adc
out
test
push
mov
xchg
insb
rolb
pop
adc
lock
sidtl
clc
lea
add
sbb
cs
xchg
stos
pushf
jnp
inc
push
ficoml
scas
movsl
movsl
scas
loopne
fstps
jns
dec
les
xlat
sub
xchg
mov
sbb
push
repnz
mov
xor
test
testb
lcall
add
sbbl
push
xor
push
jle
shll
movsb
popf
pop
movsl
xchg
xchg
std
add
jge
jb
std
and
jbe
mov
shll
jne
add
imul
int
and
sub
pop
xor
cmp
mov
lods
pop
ljmp
xor
arpl
push
jl
xchg
xchg
int3
sub
cmp
ds
mov
inc
sub
je
popf
dec
mov
daa
inc
cs
adc
push
addb
push
or
std
xchg
xor
cmp
inc
adc
mov
sub
dec
adc
inc
cli
push
mov
in
jp
out
sub
dec
mov
call
mov
xor
nop
rcrl
inc
movsb
rclb
adc
and
outsl
xchg
sarb
inc
fcompl
loopne
in
mov
inc
dec
mov
dec
mov
fsubl
call
cmpsl
push
or
cmc
shll
push
push
jb
push
cmp
sub
pusha
push
inc
xor
mov
add
cld
xchg
dec
xchg
popf
movsl
pop
jo
pop
xor
or
sbb
dec
les
mov
push
or
fs
sub
in
sub
jbe
inc
adc
dec
sbb
and
cmpb
pusha
cmpsb
daa
or
pop
adc
bswap
push
rcl
push
sub
push
inc
adc
sub
push
inc
sbb
sbb
or
inc
movsl
lods
sub
inc
fdivrl
loop
cmp
or
xor
nop
or
cmp
jl
loop
cmp
sub
dec
lret
push
adc
sub
push
inc
inc
and
add
pop
pop
jmp
lret
or
dec
adc
pop
mov
and
je
push
inc
dec
sub
xor
ficoms
loop
dec
inc
in
fs
shlb
ss
push
dec
clc
das
push
jle
adc
adc
xchg
fdivl
je
test
cmp
ret
imul
les
mov
loope
cld
ud1
lea
jbe
push
je
pushl
dec
inc
ret
dec
lock
mov
inc
push
cmp
add
inc
add
inc
cmp
jb
jmp
sub
adc
mov
or
or
cltd
das
sub
xchg
ja
add
cmp
sbb
pop
mov
adc
and
outsb
mov
addb
xor
clc
jnp
pop
je
cmp
add
shlb
pop
xor
and
xor
jne
in
test
hlt
aam
or
enter
or
jo
add
sub
enter
sbb
in
popa
jne
push
scas
xor
pop
jle
xor
adc
push
lds
daa
sub
dec
test
jne
inc
les
out
lret
inc
in
and
xchg
sub
mulb
and
xchg
popf
or
test
mov
push
ret
push
cwtl
mov
pusha
hlt
xor
jp
mov
adc
pop
dec
ret
jg
ret
mov
push
mov
int3
loop
pop
mov
clc
push
lret
clc
ficomps
test
cwtl
inc
mov
mov
sbb
or
or
ret
shl
cltd
push
sbb
push
xchg
and
in
add
addl
xor
lea
insb
push
push
dec
movsb
pop
dec
push
out
sub
mov
jno
ret
pop
mov
push
sub
jb
clc
stc
mov
add
xlat
adc
pop
xchg
lahf
jbe
nop
ret
test
or
jo
push
orl
add
jmp
addr16
arpl
and
imul
adc
les
sti
leave
adc
mov
aam
stc
or
rolb
rep
mov
mov
and
dec
mov
sub
and
inc
jns
std
lar
dec
jne
in
push
lret
lcall
es
cli
sub
mov
pusha
lea
mov
inc
mov
sbb
cld
pop
and
pop
push
pushl
jmp
adcl
subl
fwait
inc
mov
mov
mov
lods
inc
push
jle
xlat
dec
fwait
cld
scas
ret
loope
push
imul
xor
mov
lret
mov
or
pop
xchg
inc
inc
sub
faddl
cmpl
xchg
add
push
ffree
inc
lea
push
cmpsl
aam
rorl
dec
push
sti
and
test
and
jbe
push
and
lcall
repnz
movsb
xchg
dec
add
lods
dec
imul
and
xor
sub
pop
fsts
fldl
adc
push
es
xchg
mov
dec
insb
mov
push
xchg
or
add
aad
aas
xchg
sarb
repnz
or
scas
mov
lcall
lcall
dec
push
lock
sbb
jnp
cs
clc
dec
xchg
mov
pop
jns
lods
xor
adc
rcrb
pusha
lods
or
dec
movsb
sub
jnp
jmp
push
shr
pop
or
pusha
xchg
pop
jmp
push
lods
hlt
mov
es
xchg
adc
mov
lret
cmp
adc
add
adc
xor
cwtl
pop
jecxz
mov
es
sarb
mov
and
in
sub
insl
daa
lcall
cwtl
or
dec
popf
aam
roll
in
das
xchg
adc
rcl
dec
scas
mov
mov
outsb
sub
pop
sbb
mul
lods
xor
cmp
push
add
or
xor
push
sub
xchg
cli
push
push
cmpsb
ss
fstpt
sbb
xchg
mov
xchg
mov
scas
ja
xchg
sub
enter
xchg
sbb
or
cli
ret
clc
cltd
xchg
jbe
dec
push
popf
or
adc
adcb
push
inc
cmp
jb
sahf
mov
jge
hlt
mulb
ja
aam
and
pop
push
enter
fcoml
mov
xor
nop
dec
inc
xchg
xchg
or
scas
push
jb
stc
mov
adc
mov
sub
push
push
adc
aad
mov
decl
aam
push
mov
icebp
inc
add
pop
mov
push
repnz
push
or
int3
push
lock
xor
add
xchg
pop
cwtl
insl
push
dec
cmp
aad
scas
mov
fs
push
mov
xlat
int
sub
cltd
xchg
outsl
cmp
mov
ret
loope
out
mov
int
int3
push
cld
jge
fcmovb
or
add
mov
lret
ret
jge
mov
jne
jne
es
or
movsb
addb
xchg
cmp
xchg
and
sahf
add
addr16
clc
test
and
dec
or
or
dec
dec
pop
jecxz
shr
add
movsb
sti
aas
sub
inc
dec
lods
pop
add
mov
dec
fsubrl
and
ficoms
mov
andl
call
adc
shll
icebp
fmul
cmc
and
push
inc
ljmp
je
pop
lahf
xchg
mov
push
mov
mov
adc
adc
int3
cmp
xchg
sbb
adc
push
cltd
ret
mov
push
pop
dec
adcl
mov
mov
std
popf
mov
imul
pop
mov
xor
cmp
loopne
ja
imull
addr16
and
and
ret
adc
add
nop
scas
mov
ljmp
shll
pop
insl
fisubl
in
addl
jno
mov
xor
jl
cltd
cmpsl
shll
bound
sbbb
shrb
push
xchg
les
jl
adc
push
aad
adc
push
mov
scas
pop
mov
jbe
in
clc
aaa
xlat
std
push
out
adc
push
sub
adc
jl
popf
push
test
ja
add
mov
aaa
xchg
pop
mov
addr16
je
mov
addb
ds
jnp
add
cmpl
pop
jne
mov
imul
jb
sub
test
pop
stos
xor
mov
jl
push
cld
jbe
xor
clc
cltd
sahf
and
jl
les
fsubrs
push
pop
test
jne
lods
ja
rcrb
xor
cmp
and
bound
push
pop
adc
test
test
pop
mov
cmp
jg
xor
and
loopne
loopne
in
jl
test
push
movsl
mov
shlb
xor
mov
enter
mov
in
dec
push
lcall
pop
pop
push
frstor
daa
popa
jno
jno
inc
test
push
mov
shlb
js
dec
pop
inc
mov
pusha
and
cmp
inc
xchg
cmpsb
or
in
loop
repz
inc
lods
or
mov
or
cs
adc
in
pusha
loop
add
arpl
mov
inc
adc
rcll
lock
rcrl
scas
sbb
and
mov
loope
pop
xor
test
js
push
push
popa
mov
xchg
mov
jl
adc
ret
and
std
push
ja
dec
fsubs
daa
push
add
push
cwtl
outsb
pop
aam
push
ja
push
fstpt
jge
jle
insl
dec
lea
xchg
mov
fists
sub
movsl
mov
pop
push
sbb
push
cmp
aas
add
imul
test
repnz
jg
stos
or
xor
add
cmpsl
jmp
mov
popf
je
xchg
add
mov
dec
dec
mov
pusha
and
lock
hlt
je
popa
fisttpl
or
xchg
and
mov
push
jmp
shll
lock
sub
cmp
jae
push
hlt
add
stos
cmp
je
add
pop
or
fs
fs
sub
jmp
or
dec
adc
mov
ds
or
sbb
pop
sahf
jne
scas
pop
les
stc
push
call
jae
mov
cmp
clc
pop
fmuls
jae
or
jae
scas
lcall
jmp
push
adc
insb
mov
cld
add
mov
inc
enter
nop
or
inc
adcb
jo
fsubs
fcoml
loopne
inc
adc
pushf
adc
loope
movsb
and
mov
test
bound
js
xchg
mov
sarb
xchg
mov
in
inc
push
mov
xor
mov
and
clc
adc
mov
les
fldl
xchg
std
push
mulb
sbb
rcrl
lock
fsubrp
add
sub
xchg
fsubs
mov
lods
adc
cmp
sbb
adc
shr
and
mov
in
push
sbb
inc
or
or
mov
es
rdtsc
imul
sub
dec
add
dec
xor
mov
adc
and
shl
les
cwtl
mov
add
repnz
sub
les
cli
jnp
cmp
pop
shr
xlat
or
enter
push
out
sbbl
out
push
lea
sub
negb
cmc
pop
mov
repz
sbb
loope
repz
mov
xor
sbb
scas
loop
xchg
clc
or
inc
push
add
push
jno
inc
mov
mov
inc
add
jae
inc
adc
jmp
stos
cmpsb
ss
cli
or
xor
out
mov
and
fisubl
xor
test
jmp
arpl
adc
dec
nop
je
inc
psraw
xor
call
cli
lods
ljmp
add
xlat
push
push
dec
push
call
test
cmp
fidivs
shll
fs
push
data16
push
lock
or
jle
into
and
adc
inc
inc
inc
and
adc
and
adc
mov
xchg
and
sbb
or
or
shll
add
sbb
add
adc
mov
mov
push
add
lahf
imul
mov
fdivs
add
cmp
inc
xor
dec
stos
mov
subl
sub
jo
sub
sbb
nop
and
sbb
sbb
into
xchg
pop
test
pop
or
inc
sub
movsb
adc
pop
xor
andl
roll
or
push
jne
cmp
jnp
mov
sbb
jae
test
xor
mov
js
clc
test
fisubs
sub
dec
cli
dec
ljmp
dec
ds
pop
daa
jle
shrb
adc
movsb
dec
clc
mov
cli
dec
xor
movsb
mov
sbb
ds
adc
in
es
negl
cwtl
pop
push
ds
jno
lcall
pop
inc
sbb
and
enter
jge
cltd
test
mov
sbb
mov
lea
hlt
xchg
dec
test
outsb
test
clc
sub
aam
cwtl
stc
inc
adc
test
jmp
add
movsb
pop
std
jp
jae
std
pop
rcl
rcl
xchg
out
ljmp
cmp
cmp
mov
cwtl
mov
andl
push
hlt
sbb
mov
inc
rclb
std
lods
cwtl
repz
mov
sub
pop
inc
movsl
aad
or
add
pop
cmp
or
addb
pop
push
imul
cs
or
rcrb
andl
jo
shll
adc
mov
neg
inc
sub
sbb
sub
cmp
or
sbb
adc
push
jge
test
pop
shll
rcrl
inc
cli
adc
movsb
cld
fs
and
in
nop
stc
add
adc
dec
xchg
xor
nop
std
dec
shrb
cmp
push
mov
ds
ja
in
pop
adc
cmp
mov
pop
add
mov
push
mov
pop
arpl
fadds
loopne
inc
and
mov
aad
sub
fldl
jbe
ljmp
movsb
adc
jg
sbb
fmuls
mov
rolb
lcall
xchg
loopne
jne
cmpsl
lret
sbb
jbe
mov
and
test
in
push
lea
cs
push
movsb
push
out
testl
imul
je
shl
clc
push
sub
jns
cmp
xchg
and
imul
rorl
or
mov
addl
jge
jl
mov
jne
jno
mov
popf
and
or
lods
adc
movsb
cli
and
mov
test
daa
jle
movsb
scas
cmp
dec
sar
dec
fucomip
mov
dec
ljmp
mov
pop
mulb
daa
push
mov
je
imul
and
movsb
pop
lea
sbb
ljmp
or
sub
movsl
nop
pop
cli
sub
bsr
cmp
test
xor
mov
cmpsl
imul
mov
adc
sub
je
dec
inc
fs
scas
repnz
mov
loopne
cld
jmp
push
lods
cli
lods
push
dec
push
mov
pop
mov
inc
mov
das
sbb
push
loop
adc
add
pop
jmp
dec
xor
jo
mov
push
lcall
adc
sbb
imul
mov
bnd
enter
test
adc
data16
fsubrs
adc
ret
in
and
mov
hlt
mov
ljmp
into
push
call
pop
rorl
pop
push
jge
and
test
insb
fnstsw
or
jmp
push
adc
stos
imul
aam
ljmp
lock
mov
mov
and
cmp
outsb
jmp
ffree
ds
push
insb
xchg
pop
push
pop
mov
es
or
test
enter
cmp
push
add
test
je
in
and
cmpsl
aaa
mov
je
push
jge
cmp
jl
dec
in
adc
aas
test
inc
or
cmc
inc
out
mov
mov
not
cli
sub
push
push
stos
movsl
sbb
xor
cmp
adc
xor
shlb
movsbl
clc
push
in
pop
loopne
jno
inc
inc
or
mov
mov
stos
idivl
pop
and
pop
dec
stos
sbb
push
sbb
test
dec
jne
mov
ss
and
sub
nop
xchg
push
and
dec
cld
jne
out
xor
sub
movsl
in
xchg
xchg
sub
js
mov
fadds
test
pop
sti
xchg
int3
add
rorl
shrl
mov
inc
mov
pcmpeqw
add
lret
adc
rolb
ret
add
ljmp
std
jmp
pop
ja
pop
in
sub
movswl
add
jmp
lea
add
rol
adc
fs
sub
mov
or
cmovbe
inc
xchg
test
cmp
add
adc
bound
aam
je
inc
jge
sbb
adc
xchg
sar
xchg
pop
andl
pop
stc
xor
mov
das
sbbb
mov
mov
mov
pop
push
je
pop
adc
push
jne
lahf
inc
pusha
je
mov
data16
mov
lahf
out
lds
jmp
mov
lahf
push
push
mov
sub
imul
call
iret
test
mov
test
testw
mov
outsb
or
adc
xor
xor
jne
inc
pop
and
enter
add
push
jbe
pusha
mov
or
add
xorb
cld
jmp
add
dec
adc
cs
push
jle
shll
mov
adc
subb
and
or
aaa
sub
sbb
rorb
inc
jmp
hlt
mov
jbe
fs
adc
ret
orl
jmp
xchg
or
sub
call
decb
xchg
imul
xorl
sub
adc
mov
adc
mov
jnp
loopne
xchg
sub
rorl
cwtl
xchg
xor
dec
stos
add
aaa
sub
insb
ret
ss
sub
dec
mov
test
push
lea
outsl
out
sar
inc
adc
bswap
out
push
mov
pop
mov
lahf
and
lret
dec
push
sbb
lahf
jge
and
cmp
pop
jne
cmpl
test
xchg
or
test
cmpsb
and
adc
or
cwtl
ja
divb
or
mov
sub
cld
jle
shll
mov
dec
aaa
or
sub
add
mov
shr
nop
sub
jmp
dec
add
push
mov
pop
cmp
stc
sub
je
test
xor
push
xchg
sti
push
scas
sub
inc
movsl
inc
js
adc
sbb
push
and
out
aam
and
ds
inc
adc
and
and
push
xchg
imul
sbb
dec
fcmovnbe
push
cmc
cli
movsl
xchg
das
in
sbb
mov
adc
mov
pushf
mov
scas
mov
ret
mov
daa
out
or
mov
inc
inc
je
lcall
data16
mov
fadd
aas
fwait
mov
dec
test
test
stos
sbbl
pop
outsl
movsb
xchg
jmp
mov
or
int3
add
inc
inc
test
je
inc
mov
test
add
sub
add
pop
inc
dec
or
mov
jmp
inc
enter
lret
or
jmp
stos
xor
dec
dec
sub
pop
gs
or
daa
or
pusha
dec
jp
jnp
push
ftst
adc
test
lods
xor
and
push
inc
adc
cs
movb
or
out
jecxz
adc
and
jne
mov
into
test
cmp
sub
cmp
xor
xchg
mov
popf
ret
dec
and
mov
xchg
or
insb
subl
test
je
js
adc
test
or
gs
lods
je
jno
adc
add
rcll
or
mov
test
push
lcall
push
inc
outsl
movsb
fsubs
int3
jle
rolb
push
jl
lahf
out
mov
leave
sub
add
add
and
fldl
sbb
shrb
fisubl
test
out
mov
fsubrl
jne
add
xor
inc
pop
cli
adc
test
mov
xchg
push
or
pop
inc
rolb
xor
iret
cmp
xchg
jne
neg
ds
pushf
ja
dec
stos
popf
add
hlt
loopne
add
mov
push
cmpsb
mov
std
adc
invd
push
inc
out
mov
mov
adc
lea
cmp
adc
dec
or
rorb
or
shl
or
mov
sbb
mov
xor
or
lea
cmp
aas
jb
sub
cwtl
or
add
jae
pop
push
xor
adc
sub
add
jnp
xchg
sbb
cmp
ljmp
jmp
data16
loope
fdiv
outsb
xchg
inc
inc
jns
lods
jp
lret
sbb
movsb
push
jg
stos
lock
mov
dec
in
xchg
js
das
fs
rcrl
sbb
jbe
cmc
adc
and
and
pop
addb
sarb
lea
cmp
mov
and
push
dec
bound
les
xchg
jb
imul
dec
fincstp
xor
ds
cmpsb
adc
push
or
or
jne
xchg
pop
pop
push
daa
adc
sbb
lea
mov
push
xchg
loopne
les
sbb
and
fbstp
jmp
pusha
imul
jb
inc
insb
lcall
hlt
rorl
clc
jmp
in
bound
sub
stc
fdivl
adc
je
call
jns
and
jne
aam
divb
jle
test
inc
es
stos
pushf
pop
fwait
add
mov
decl
mov
cwtl
sub
inc
jmp
cmp
lock
or
add
jne
mov
dec
add
dec
or
icebp
push
push
iret
xchg
jae
push
jbe
pop
sub
cmp
mov
rcrb
push
adc
in
xchg
and
or
les
mov
leave
arpl
and
cld
add
cmp
jb
rorb
lea
xchg
adc
and
jge
adc
sub
dec
pop
addr16
push
loope
and
jp
jnp
inc
adc
sub
ret
and
sbb
pop
sub
cmp
es
adc
imul
jns
test
jae
or
sbb
push
add
add
iret
add
imul
dec
ss
or
les
adc
js
jecxz
and
cmp
push
jmp
mov
push
test
add
jne
andb
jns
jmp
or
icebp
test
in
cmp
inc
jns
cmp
push
movsl
nop
test
lea
and
mov
in
imul
jp
add
inc
jmp
cmp
mov
adc
add
imul
jl
call
cmp
cmp
xchg
jp
push
pop
jne
push
pop
xor
cmc
or
test
xor
add
mov
and
arpl
lret
cmp
push
jne
push
stos
adc
sbb
add
or
ljmp
adc
in
mov
outsl
pop
dec
mov
mov
xor
scas
in
loop
push
mov
xor
pop
and
nop
push
dec
pop
cli
inc
stos
cld
lcall
and
jae
xchg
loop
sub
push
mov
hlt
or
mov
test
lret
add
imul
xor
mov
daa
push
mov
xchg
cld
ds
jmp
jecxz
mov
or
xor
or
imul
addb
pop
sub
and
add
and
inc
push
cmpl
repz
jne
sub
inc
inc
jbe
test
add
add
and
test
jmp
cwtl
mov
pusha
neg
sbb
add
mov
int
add
popa
nop
shl
clc
neg
rcl
js
loopne
test
popa
and
xor
mov
mov
das
addb
leave
push
stos
stc
out
pop
adc
dec
mov
pop
xor
lods
jp
inc
gs
adc
std
pop
mov
xchg
and
jne
jp
add
inc
cmpb
adc
inc
cmp
je
incb
test
pop
leave
sub
and
jecxz
outsl
fnstenv
testl
fistpl
add
cmpsb
mov
mov
cmp
ja
add
dec
adc
rorl
inc
imul
lea
mov
or
fadd
cli
aas
or
xchg
sbb
push
push
ljmp
call
or
pusha
sbb
mov
mov
pop
inc
arpl
je
push
adc
leave
popa
xor
push
daa
cmp
xlat
shll
or
or
inc
add
or
or
xlat
out
jl
fs
inc
adc
inc
fsubrs
pop
push
sub
mov
or
roll
jne
or
sub
adc
adc
or
push
lret
add
inc
stc
xor
dec
stos
iret
cld
hlt
ret
and
and
pop
cmp
add
ljmp
cld
cmp
je
xchg
pop
out
ret
iret
cmp
out
call
cmp
and
jmp
mov
jo
pop
std
cld
and
mov
add
fsubrs
or
mov
or
adc
mov
inc
ds
xor
sub
add
dec
cmpsb
outsl
ss
rorb
lock
loopne
xchg
cltd
mov
das
fsubs
mov
and
int3
loopne
sub
sbb
pop
rorb
shrl
je
nop
insl
or
push
mov
loopne
stos
addl
je
lret
sub
iret
test
in
fldl
data16
les
hlt
repnz
push
add
mov
sbbl
pop
add
jecxz
out
add
test
jg
das
or
inc
jmp
mov
gs
pop
push
pop
and
or
shl
es
or
push
sbbb
sub
pop
std
movsl
mov
and
test
jecxz
xchg
in
inc
dec
push
adc
or
das
pop
mov
cmpsl
push
dec
cmp
int
push
insl
mov
imul
pop
and
cmp
cmpsb
es
enter
add
pop
mov
sbb
xchg
jne
dec
loopne
out
mov
add
or
enter
adc
sbb
push
je
dec
xor
jb
dec
mov
lret
hlt
rorb
dec
add
je
pop
mov
sub
rcr
rclb
sub
data16
or
inc
jmp
orl
jae
pop
dec
test
aas
pusha
sarl
enter
insb
test
adc
test
into
dec
popa
add
add
cmp
jbe
mov
js
inc
add
adc
js
in
sub
stc
or
add
movsl
jmp
add
add
das
dec
jnp
clc
enter
pusha
int
push
lea
aas
nop
adc
mov
or
mov
add
scas
xor
andl
inc
adc
pop
int3
or
out
test
adc
inc
addl
lret
sub
inc
aas
pcmpgtb
and
sbb
adc
or
add
stos
mov
rorl
xchg
jb
int
in
and
es
adc
cs
and
jmp
lea
xchg
iret
leave
mov
and
sahf
sub
sbb
insb
adc
notl
sahf
nop
or
fs
xor
push
movsb
push
mov
out
sub
xor
jl
rorb
inc
and
inc
lods
test
icebp
loopne
iret
adc
nop
je
aam
mov
or
sub
call
filds
nop
clc
cwtl
data16
inc
or
faddl
or
and
adc
add
cwtl
sbb
daa
cmpl
out
stc
or
mov
mov
pop
add
cmp
pop
rcll
adc
les
xlat
test
adc
mov
mov
mov
in
and
or
shlb
sbb
mov
mov
adc
mov
push
mov
xor
and
xchg
ds
sti
dec
push
push
rclb
lock
or
jne
cmp
jb
sub
sbb
mov
or
push
push
ja
pop
int3
bound
fsubl
test
rcrb
xor
mov
arpl
jae
jbe
rcrb
push
sub
inc
xchg
clc
add
test
jne
mov
dec
pop
or
or
sbb
adc
sahf
mov
or
loop
les
movl
mov
dec
xchg
mov
inc
lret
and
push
and
lods
xchg
pusha
hlt
fstcw
jge
pop
lods
mov
or
cmc
std
insl
int3
fistpll
hlt
or
es
int3
push
clc
xchg
inc
pop
dec
or
pop
loop
cmp
mov
ror
lock
sbb
stos
mov
icebp
arpl
out
or
loopne
testl
rcrb
aad
ret
mov
mov
inc
shrl
shrl
rcrb
add
xbegin
xor
inc
lds
cs
ljmp
add
push
cld
mov
rclb
mov
adc
pop
xchg
or
sbb
jbe
out
xchg
jae
cmp
jmp
pop
mov
xor
shrl
inc
or
and
lcall
loope
mov
or
push
in
enter
clc
rcll
es
clc
out
movsb
rcl
adc
scas
repnz
mov
adc
mov
in
sbb
call
cmp
pop
lock
fstps
das
sub
adc
insl
clc
dec
sahf
and
out
bound
dec
xchg
aam
pop
push
and
idiv
xor
pop
int3
ljmp
push
push
fadds
cli
inc
int
int3
mov
lea
data16
push
and
mov
sbb
dec
or
in
adc
push
adc
add
and
js
loope
in
ficomps
enter
xor
sbb
imul
mov
dec
lahf
mov
mov
jns
jge
ja
pop
lcall
jl
cmp
js
cmpsl
pop
dec
sahf
add
dec
lea
cmp
pop
add
jle
pop
sub
adc
movsb
imul
lds
adc
mov
or
jb
cmp
or
add
lock
dec
mov
repnz
cmpsl
enter
cmp
inc
dec
xchg
mov
aas
mov
push
push
mov
xchg
push
mov
inc
jb
mov
jg
push
sbb
andl
sub
push
xor
sbb
dec
xchg
shrb
xor
mov
or
mov
jl
add
push
adc
xor
jl
std
add
call
jmp
fs
cld
adc
pop
push
or
add
push
jb
mov
fcmovbe
inc
aas
sbb
shll
or
and
aaa
dec
push
xchg
add
imul
push
jo
xchg
push
cmp
fwait
or
cmpsb
in
insb
int3
push
lea
push
mov
push
stos
insl
cmpb
and
ret
and
cltd
mov
xor
or
xor
in
or
in
mov
or
stc
test
inc
xlat
test
sbb
or
int3
or
adc
dec
push
xchg
dec
dec
insb
push
or
clc
cwtl
inc
xlat
inc
icebp
xor
push
into
push
mov
xor
mov
fcomps
les
fmuls
int
push
push
or
push
jo
flds
or
and
repnz
sub
or
inc
cld
add
das
or
adc
daa
adc
push
mov
or
inc
insb
cmp
scas
in
roll
test
sub
aad
icebp
sub
xorl
pop
jae
push
push
pop
stc
shlb
add
jecxz
pop
les
das
sub
add
stc
add
inc
pop
lds
jecxz
add
shll
mov
dec
ret
xlat
xchg
insl
lcall
and
popf
pop
and
sbb
aam
mov
push
or
cmp
enter
adcl
mov
cmp
mov
jle
xor
stos
lock
icebp
pop
ret
mov
xchg
dec
push
imul
mov
subl
call
test
enter
and
mov
or
xor
sub
test
cmc
sbb
jmp
add
mov
add
add
adc
push
shrb
mov
sub
inc
pop
pop
mov
mov
inc
mov
sub
push
stc
mov
jbe
push
mov
lea
repz
shll
or
js,pn
out
push
inc
cmp
xor
leave
subb
adc
add
xchg
fdivl
rorb
pop
cmpsb
push
xor
imulb
daa
adc
add
add
jge
rolb
cld
ret
and
fcmovb
cmp
fdivr
loop
dec
repz
xor
mov
mov
lahf
pusha
mov
sbb
mov
and
pop
xor
pop
sbb
jl
add
cld
push
inc
jmp
repz
sti
or
cmpsb
test
rolb
and
adc
fsubrl
jmp
inc
and
push
gs
pop
jg
shrb
enter
or
add
loope
jo
push
push
cld
fs
or
adc
dec
aaa
test
sbb
fistpll
or
or
loope
mov
je
sub
mov
cmp
ss
movsl
jnp
fbstp
jle
mov
or
jns
or
test
sub
test
jbe
inc
cwtl
add
or
sbbb
jb
jbe
mov
sbb
push
jo
push
aad
inc
dec
add
sub
lret
test
push
push
cmovnp
push
je
fidivrl
cld
int
sub
mov
and
aad
or
inc
cmpsl
sbb
mov
or
mov
fistpl
add
sbb
sbb
mov
xor
adc
or
adc
jmp
mov
cli
outsb
pushf
ret
add
jmp
mov
or
add
div
mov
dec
scas
xor
adc
out
jb,pn
cmp
js
js
ret
add
movsb
ja
mov
sbb
outsl
push
push
outsl
push
in
data16
sbb
jmp
outsl
inc
adc
or
test
or
dec
insb
or
les
jbe
je
xor
and
jle
mov
andl
popf
dec
jecxz
test
inc
movsb
fimull
xor
in
sbb
and
les
daa
cmpsl
mov
in
sbb
shr
in
call
adc
inc
daa
inc
sbb
sbb
adc
dec
xor
or
les
mov
cld
dec
or
mov
push
sbb
lock
popa
jl
jp
add
add
cmp
jne
jmp
xchg
jp
outsb
push
add
or
in
and
mov
cmp
sti
je
push
inc
fnstcw
sub
push
jl
outsb
movsb
xor
pop
jne
jno
or
aad
sti
cwtl
iret
insl
stos
sub
sahf
outsl
pusha
mov
push
xchg
mov
adc
push
xchg
cmp
sub
or
jbe
xchg
cmc
sbb
push
test
call
test
add
cmp
jne
inc
inc
dec
cwtl
jmp
push
inc
pop
cmp
xlat
inc
orl
push
sahf
adc
rcl
pop
in
inc
fstps
enter
push
add
daa
loope
cld
int
iret
cmp
sub
dec
aaa
jno,pn
xchg
or
mov
sbb
pop
sub
insb
push
les
mov
add
cmp
jne
cmp
sbb
adc
inc
jl
mov
cmp
dec
jne
lret
or
cmp
jge
sbb
sbb
mov
nop
mov
mov
push
mov
cmp
pop
jge
cmp
popa
pop
push
mov
and
test
adc
movb
mov
rorl
mov
dec
add
or
ret
pop
or
sahf
push
in
ret
dec
adc
sub
pop
add
add
lods
xor
rcll
scas
lods
repnz
or
pop
mov
test
dec
sbb
repnz
mov
cmp
lahf
adc
loopne
testb
and
xor
add
push
je
dec
adc
mov
ficoml
jne
sub
xchg
sub
sbb
enter
rorb
dec
mov
inc
inc
jecxz
adc
in
mov
sbb
or
bound
push
bound
scas
or
hlt
das
dec
cld
pop
xchg
mov
xchg
inc
sub
mov
adc
int3
dec
jmp
outsl
lea
mov
or
and
fildl
movsb
test
pop
shrb
xor
add
jne
jmp
lods
in
ljmp
xchg
jmp
sbb
add
jmp
fwait
add
je
dec
push
jo
inc
push
push
test
pop
or
testb
cli
daa
shlb
lds
jmp
mov
lcall
xor
mov
sbb
fs
and
test
jbe
aam
dec
dec
inc
pop
xlat
mov
push
sbb
jl
pop
mov
add
addb
or
xor
sub
or
mov
xor
inc
pop
movsb
movsl
push
mov
pop
aad
pushf
mulb
add
cmpsl
and
or
jne
inc
cltd
gs
dec
sbb
aas
xor
aaa
or
cwtl
push
bound
es
xchg
or
lcall
sbb
xchg
adc
mov
insl
adc
loope
dec
mov
popa
push
and
je
xchg
gs
cmp
xor
leave
divl
aad
clc
out
pop
lea
roll
mov
inc
xor
mov
xor
xchg
scas
dec
push
repz
pop
sbb
pop
scas
arpl
sbb
ds
stos
xor
sub
xlat
les
cwtl
adc
pop
subb
in
adc
mov
pop
adc
and
arpl
or
cmp
cmp
add
sbb
jbe
sbb
and
jbe
cmpsl
push
inc
inc
or
sub
sub
sub
fcompl
jno
dec
divb
dec
and
adc
inc
adc
mov
fadds
push
inc
ds
push
cmp
hlt
add
test
repz
sub
or
push
push
out
es
or
cltd
dec
push
in
in
std
movsb
lcall
jmp
data16
cltd
and
daa
xor
popf
fistl
incl
pusha
fimull
jle
mov
add
mov
sub
test
lds
push
or
sbb
inc
mov
adcb
sub
lcall
jne
or
inc
cmp
jl
cmp
loop
jg
aas
mov
es
jb
xor
sub
dec
cmp
dec
prefetch
rorl
inc
sbb
inc
add
push
enter
sarb
ds
inc
sbb
xchg
adc
inc
insb
add
xchg
mov
sub
push
gs
xchg
mov
xor
push
testl
add
sub
add
and
sub
inc
or
push
jle
mov
stc
inc
xchg
or
xchg
dec
adc
pushl
cld
ret
or
push
cli
add
out
cmpsb
add
mov
sub
aaa
mov
xor
aas
cmpb
jne
mov
jmp
cmp
xorb
jnp
sbb
or
jle
sbb
dec
cmpb
pop
mov
testl
lods
pop
jae
aad
dec
mov
mov
ss
xor
mov
mov
push
fcomps
mov
xchg
ret
jne
fninit
push
roll
outsb
in
repnz
push
fwait
in
fs
inc
jne
mov
dec
inc
ds
nop
push
mov
adc
pop
test
or
mov
addb
shll
sub
cmp
leave
add
adc
call
mov
pop
stc
loope
mov
incb
lock
iret
imul
mov
inc
push
lcall
dec
mov
dec
sbb
xor
adc
jno
iret
std
scas
shll
adc
ret
pop
or
jle
cli
sbb
aas
jbe
push
pop
mov
cmp
or
jne
and
jae
push
mov
lret
lea
ja
add
pop
mov
sub
loope
dec
loopne
and
pushf
mov
push
or
add
cld
mov
push
push
pop
mov
add
and
mov
cs
or
jg
adc
sub
shrl
fadds
mov
sub
and
ss
add
cmp
jbe
push
cmpsb
nop
int
rorl
mov
je
into
test
sbb
loopne
inc
cmp
sbb
ror
out
not
sub
je
add
and
lea
pop
inc
sbb
inc
mov
setp
mov
or
aas
rcll
sbb
idiv
dec
ljmp
roll
mov
insl
push
pop
jo
orw
adc
mov
push
add
scas
sbb
jae
test
in
push
mov
in
or
inc
outsb
adc
scas
jg
sbb
adc
push
enter
ljmp
das
xchg
dec
push
xchg
inc
xor
adc
lock
jmp
imull
lock
fmull
fdivs
shl
add
lods
aaa
adcl
adc
xor
or
loopne
movsb
mov
ficompl
and
dec
push
inc
or
cmpb
test
adcl
ret
xlat
stc
imul
adc
xchg
hlt
pusha
add
shl
ret
push
enter
xor
in
push
popf
dec
adc
roll
jecxz
adc
or
and
test
insl
or
das
push
lds
cmp
sub
cmpsb
xor
int
mov
and
lock
sar
dec
cmc
shlb
jge
push
call
in
and
push
jmp
add
mov
call
inc
clc
push
mov
fistps
xchg
and
insl
and
decb
cmp
jne
add
jne
fnstenv
jb
out
jne
mov
fsubs
add
xchg
pop
dec
das
jae
fsubl
inc
mov
push
sub
in
cmp
mov
out
push
xchg
push
xor
sar
fistl
je
jns
or
jno
mov
inc
subb
fidivrs
fsubrl
repnz
or
cld
jge
and
nop
mov
out
jl
inc
mov
notb
push
inc
in
aas
mov
ds
cmpsb
or
aaa
sbb
pop
push
xchg
test
mov
sarb
cmp
xlat
je
add
xor
popa
lods
dec
sbb
jne
or
lret
pop
test
leave
jl
shl
inc
jmp
arpl
mov
sub
icebp
pop
xor
cli
dec
je
sub
jle
cmpsb
enter
cltd
or
and
popa
cmp
test
cwtl
add
mov
daa
loope
cmp
add
in
and
inc
loopne
decb
jne
mov
dec
dec
in
pop
and
jmp
lret
adc
sbb
push
outsl
adc
mov
sarb
mov
mov
in
sbb
adc
xor
and
push
cmpsb
inc
out
push
sub
fimuls
sahf
xchg
fs
push
adc
or
jge
or
mov
mov
shr
or
je
pop
nop
xchg
jl
adc
das
sub
loopne
xchg
push
jnp
pop
lea
push
or
leave
sub
rclb
mov
pop
add
into
jne
in
roll
mov
mov
lea
jnp
adc
cmp
cltd
mull
dec
pop
dec
data16
add
add
or
add
or
add
xor
pop
mov
jo
test
scas
jp
bound
mov
xchg
leave
dec
ds
inc
xchg
loope
cwtl
inc
test
repnz
xorl
inc
adc
xor
mov
adc
jo
sbb
push
cli
rcl
pop
cwtl
jge
dec
and
enter
add
andl
fmull
push
xchg
loope
push
hlt
jno
leave
inc
leave
xor
jno
and
loopne
inc
ret
cwtl
cmp
cltd
adcb
or
xor
or
push
pushf
cmp
and
pop
xchg
sti
xchg
shl
fnstsw
push
add
mov
lea
xor
cmp
ja
dec
inc
lock
mov
call
cs
mov
inc
xchg
lock
inc
lods
push
fcompp
cmp
dec
add
sub
cltd
outsb
sbb
add
jmp
mov
and
mov
lods
or
fimull
nop
push
fs
inc
xchg
xchg
in
mov
xor
rorl
je
mov
jne
or
mov
not
and
retw
mov
std
push
adc
aaa
aam
xlat
lea
daa
sub
ljmp
repnz
pop
dec
cld
sub
cmp
sub
pop
cmp
imull
mov
ret
pop
test
lsl
cmp
inc
popl
lcall
adc
or
pop
adc
orl
mov
lea
repnz
inc
sbb
and
pushf
nop
cmp
jbe
lret
or
push
jg
shll
sub
add
pushf
stos
or
mov
sub
incl
aaa
mov
xor
hlt
sbb
sti
add
pop
lods
inc
adc
sbb
or
bound
push
jne
rorl
dec
repnz
push
loope
iret
je
out
mov
and
xor
insl
cs
push
or
popf
push
inc
xor
or
xchg
jns
cld
inc
fldenv
sub
xor
jecxz
pop
daa
outsb
jo
jge
orl
mov
xor
pop
xor
not
push
mov
xor
cmpl
sub
sbb
inc
jne
dec
add
cmp
and
adc
adc
jp
mov
pop
dec
push
and
ja
aam
jp
ja
jno
pusha
repz
popl
out
inc
or
cmp
jnp
dec
push
jnp
and
pop
pop
sub
sbb
jecxz
inc
adc
cmp
test
pop
out
or
jns
bound
shrb
sbb
fisttps
cmpl
sub
add
mov
sbb
pop
cmpsl
jl
test
test
jae
mov
sub
jno
inc
sub
cmc
adc
xor
mov
mov
push
imul
mov
jne
shl
or
arpl
sbb
orb
adc
or
push
ret
or
mov
lea
cwtl
xchg
stos
stc
int
sbb
jmp
jle
jl
mov
sub
decb
pop
popf
ret
shll
inc
mov
xor
inc
cmp
jecxz
push
mov
add
ret
cmp
jae
xorb
jno
jbe
add
lock
sbb
fdivr
add
mov
int
dec
lods
je
dec
int3
movsb
mov
scas
outsl
and
add
xor
test
inc
and
mov
stos
and
aam
adc
push
aam
push
lds
or
pushl
jne
xor
xchg
jge
push
jmp
mov
inc
dec
push
add
dec
jp
lods
test
ds
or
lahf
test
adc
cmp
sahf
gs
js
popf
lock
cmpl
test
jge
xchg
and
nop
jbe
je
sub
jns
jg
es
adc
pop
shl
or
and
cli
xchg
out
or
or
cmpsb
pop
cmp
sbb
push
dec
daa
jmp
add
lret
sbb
jbe
or
popf
psubusw
out
test
es
push
adc
out
add
cmp
jb
xchg
mov
or
fiaddl
lock
push
lahf
inc
int3
mov
pusha
into
inc
or
das
and
adc
jmp
pop
stc
or
pop
enter
movzbl
add
adc
adc
movl
sub
add
push
dec
and
into
adc
in
pop
das
fucom
fiaddl
jge
repz
sbb
mov
add
cmpsl
push
lahf
shl
loop
cmp
pop
lock
mov
jecxz
loopne
jl
add
pop
add
adc
movsl
fwait
jecxz
or
stos
movl
jb
mov
fs
or
test
in
pop
es
test
addb
jne
cmpsb
or
push
adc
fstps
dec
es
cmpl
jge
jb
dec
inc
ss
dec
mov
dec
adc
mov
aad
mov
call
pop
push
jg
mov
push
or
test
sub
orl
jecxz
inc
es
xor
sub
movsl
out
sbb
pushf
add
addl
es
adc
mov
dec
and
push
out
shrl
push
add
push
pop
loopne
clc
sahf
pop
leave
push
fadds
loope
repz
clc
rcl
pop
mov
xchg
mov
mov
lcall
outsb
push
sbb
mov
adc
inc
xchg
popf
scas
push
xor
pop
jne
mov
dec
aaa
cmp
enter
cmp
arpl
sbb
shlb
push
inc
or
rcrl
add
roll
repnz
mov
testb
or
pop
xor
mov
mov
inc
jbe
shll
sub
sbb
mov
dec
adc
mov
lea
ret
add
pop
pop
and
add
pusha
sub
jmp
adc
xchg
jb
xorl
cmpb
in
imul
lea
cmp
jae
inc
mov
test
jne
fs
out
cmp
inc
inc
jmp
movsb
jae,pt
sub
dec
add
mov
cmp
mov
cltd
cmp
andb
call
lock
jae
notb
jg
lock
mov
pop
pop
addr16
movsl
pop
xor
and
sbb
js
adc
sub
out
xor
cwtl
daa
add
inc
add
jb
xor
rolb
jbe
jo
push
and
push
inc
roll
imul
jg
mov
push
and
or
sub
adc
or
add
jl
sbb
adc
mov
add
aam
mov
jmp
pusha
jae
sub
roll
xor
mov
jb
shll
push
jae
cmc
sub
jle
sbb
sbb
push
divl
ret
fwait
sub
jae
pushf
decb
inc
cmpb
pop
popa
inc
inc
dec
stos
arpl
in
rcl
stos
mulb
or
les
lds
rcpps
test
sbb
fistpl
jl
cltd
mov
push
loop
adc
mov
cmp
addr16
and
test
jne
rclb
stc
and
push
rol
mov
mov
in
iret
mov
mov
dec
add
and
fwait
stc
cmp
push
ss
out
jb
cmpl
dec
mov
lds
mov
xor
lea
push
mov
cmc
cmp
push
stos
std
shrb
test
lds
dec
pop
test
movsl
mov
scas
mov
pop
inc
dec
mov
cmp
or
dec
jmp
lea
aam
lret
popa
xor
jne
scas
or
inc
add
add
xor
dec
add
mov
movb
or
popa
adc
xor
xchg
fistpll
cmp
push
add
mov
lds
arpl
dec
divb
and
stc
xchg
insb
add
xchg
out
jbe
mov
enter
pop
icebp
sbb
dec
aas
test
and
jecxz
add
mov
lcall
enter
inc
out
lret
loope
and
xor
push
je
xorl
mov
jae
sbb
and
xchg
push
push
pop
push
pop
movb
inc
mov
jae
int3
xlat
pop
mov
push
adc
je
icebp
pop
dec
xchg
test
mov
inc
mov
add
dec
jne
adcb
sti
mov
pushf
cld
cmpsl
dec
pop
imul
or
and
mov
add
icebp
and
je
hlt
push
xor
loope
lods
mov
stc
je
addr16
leave
push
imul
mov
cmp
lret
sub
adc
leave
dec
rcrb
push
mov
pop
cmp
je
inc
jb
icebp
sub
xor
xchg
int
mov
hlt
add
lcall
add
mov
dec
jecxz
cmp
call
ret
int
clc
push
jg
ja
jns
sbb
lods
or
aad
call
fistps
repnz
add
mov
adc
mov
jge
xlat
rcrb
subb
popa
stos
cld
mov
addb
sub
dec
test
jne
or
and
in
pusha
pop
loopne
dec
bound
je
icebp
adc
add
testb
lds
int
pop
mov
clc
ljmp
mov
pop
inc
into
movsl
add
pop
mulb
jbe
adcb
push
test
js
jle
pop
cmp
jge
dec
sbb
dec
adc
add
sbb
or
dec
adc
xchg
adc
pop
xor
repnz
add
push
jle
mov
ret
psubb
je
sub
inc
pusha
sub
push
inc
in
push
jle
ret
jmp
mov
stos
and
clc
push
adc
out
ljmp
popa
jmp
xor
cmp
cmp
std
je
sbb
push
sbb
push
decl
clc
mov
cs
or
in
push
sub
pop
mov
inc
mov
push
add
sub
push
ret
orb
stc
mov
push
add
jo
sbb
dec
cld
ret
push
push
cs
jnp
icebp
test
mov
push
xchg
fldcw
sub
xchg
shll
test
or
int
aas
cltd
cmp
push
loop
pop
add
test
je
jmp
add
adc
aam
or
pop
mov
jmp
jecxz
and
mov
mov
test
ret
scas
or
adc
cwtl
bound
cmp
push
ficompl
mov
add
fs
pop
xchg
lock
movsb
mov
dec
dec
loope
fadds
dec
adc
iret
int3
jmp
mov
mov
and
enter
testb
daa
je
testl
fwait
mov
and
pop
push
pop
pop
je
mov
jmp
pshufw
jmp
xlat
jns
xor
mov
mov
and
add
xlat
jbe
aam
or
inc
push
dec
dec
lock
jo
inc
aas
rolb
adc
push
in
jl
sti
and
or
push
sti
rdmsr
mov
cmp
sarb
popa
and
loope
jns
inc
mov
pmaddwd
std
mov
xchg
clc
dec
xor
push
fadds
or
adc
es
notl
xor
or
stos
sub
cmp
imul
xchg
cmp
push
sub
inc
add
loope
xorb
inc
add
mov
adc
sahf
lea
and
neg
rcrl
sub
mov
mov
roll
jmp
sub
lock
and
and
add
sub
cmp
outsl
cmp
je
popa
in
popf
or
and
insb
mov
mov
mov
and
aas
ss
stos
jg
xor
push
inc
jnp
xchg
js
sbb
push
sbb
into
sub
je
ja
sbb
movsb
ret
inc
mov
in
inc
imul
adc
jns
gs
xchg
loope
xchg
pop
and
clc
sub
push
js
call
fldt
or
jmp
add
mull
adc
jl
daa
stc
out
pop
mov
shlb
jnp
inc
inc
enter
test
add
mov
es
pop
daa
lods
xchg
jb
dec
test
inc
aam
ja
mov
inc
and
sub
adc
mov
lret
int
iret
sub
lock
push
int3
adc
and
and
xchg
jg
jg
or
and
fadds
jmp
rcrb
xlat
cwtl
push
jne
push
add
mov
cld
fwait
push
cmp
dec
lock
jmp
add
dec
add
push
or
xchg
mov
mov
inc
pop
jo
out
xor
cmp
setb
pushf
push
xchg
ret
lret
adc
std
lods
lcall
mov
xchg
mov
push
mov
mov
pop
movd
lea
adc
out
outsb
je
stos
aam
test
ss
mov
notb
enter
popa
sub
popa
sub
mov
scas
repz
inc
cmpsl
push
pop
rcrl
xchg
xchg
add
rolb
je
push
es
or
sub
add
add
aam
inc
jmp
mov
and
or
sbb
dec
decl
adc
add
lahf
or
pop
mov
xabort
push
xor
mov
mov
push
dec
and
or
jmp
push
cwtl
leave
cmp
add
cmp
mov
jmp
adc
push
not
sub
lret
push
pusha
or
shlb
inc
mov
or
adc
rclb
and
aad
and
or
jmp
nop
or
shlb
in
pop
pop
jl
pop
jae
jmp
push
daa
arpl
fiaddl
cli
ss
sbb
js
add
and
mov
rorb
jbe
cmp
or
jne
adc
sub
bound
jg
mov
out
xor
hlt
cltd
push
and
aad
cmp
out
into
insb
out
movsb
mov
adc
push
dec
int
adc
cmp
jle
dec
pop
aam
clc
faddl
mov
mov
addb
adc
cmp
add
push
stos
sbb
dec
inc
xchg
movb
aaa
sbbl
pop
cld
notb
shll
ljmp
sub
or
sub
or
and
cmp
sub
int3
push
hlt
xor
jns
test
lret
mov
rcrl
ss
xor
or
pop
xor
dec
loop
sub
and
add
and
add
xchg
enter
fistpll
and
cmp
inc
sbb
pop
mov
dec
fcoml
jmp
pop
shr
repnz
js
lods
add
je
hlt
mov
adc
movsb
push
in
xor
add
add
add
pop
dec
imul
jb
cmp
lods
add
decl
js
hlt
adc
or
inc
push
mov
xor
mov
push
repnz
xor
jle
lea
or
xor
xor
ficomps
push
decl
mov
int
xchg
sbb
and
jecxz
dec
dec
add
mov
es
sbb
adc
and
push
inc
fildll
push
aaa
enter
nop
outsl
loop
pop
fs
push
add
test
push
xor
inc
fs
cld
sbb
mov
mov
popf
mov
adc
fsubl
xor
push
add
sti
outsb
push
hlt
xchg
push
dec
notb
mov
dec
je
mov
fld
sbb
mov
das
push
popf
and
push
push
mov
fcoml
shr
or
aaa
cmp
stos
mov
jbe
out
les
mov
xlat
or
out
mov
or
ret
xchg
push
mov
sub
push
dec
xchg
lea
xor
sbbb
out
stos
hlt
sahf
push
rclb
push
je
mov
mov
and
cli
cmp
ja
je
push
mov
nop
inc
popa
inc
sub
inc
ja
sub
movsb
mov
inc
and
pop
shl
add
sbb
dec
decb
js
lea
into
and
mov
cmpl
xor
push
pop
mov
dec
addr16
push
push
cmp
sub
push
sti
inc
or
ret
dec
dec
stos
add
or
adc
je
xor
inc
add
jl
push
loop
mov
push
xchg
jne
cwtl
stc
repnz
and
std
adc
adc
mov
xchg
dec
adc
and
or
sbb
sbb
add
ret
mov
xchg
adc
jl
or
adc
insl
mov
dec
shrb
mov
sbb
nop
fst
les
add
dec
cmp
xchg
adc
sub
add
test
je
push
hlt
push
xor
lret
adc
scas
add
push
push
lea
repz
in
push
add
inc
mov
add
adc
stos
jno
jae
imul
pop
push
call
or
shrl
push
mov
and
push
push
pop
out
push
xor
xchg
in
call
sub
lea
das
add
je
cwtl
sti
adc
xchg
add
mov
add
inc
and
jmp
andb
cmp
dec
daa
push
dec
mov
or
stos
dec
vprotw
xchg
dec
xor
xor
adc
or
push
mov
cmp
out
dec
insb
xchg
mov
aam
movsl
clc
shrl
std
flds
pop
inc
std
aam
mov
cs
dec
ljmp
cltd
outsl
repz
jno
jmp
or
push
shrl
add
add
jne
push
pop
je
inc
inc
xor
stos
push
scas
dec
adc
inc
or
into
jne,pn
add
andb
iret
lret
or
add
pop
popf
bound
dec
shll
sbb
pop
pop
lahf
int
daa
fcmovnb
adc
scas
nop
jp
cmpsb
and
mov
cmp
sub
aas
pop
add
inc
pop
or
cld
les
and
daa
fld
mov
sti
sub
sub
cmp
sbb
or
xchg
ljmp
ret
lret
enter
in
and
mov
sub
inc
cmp
mov
sbb
and
push
aad
mov
mov
stc
repnz
xor
adc
sub
inc
or
or
add
ret
dec
popf
arpl
ja
xor
mov
insb
adcb
sub
jne
adcl
test
or
and
repz
inc
adc
adc
pop
or
lret
out
mov
lods
pop
adc
int
ds
orw
push
lods
xchg
mov
mov
fisubrs
adc
andb
andl
add
pop
dec
inc
inc
mov
push
xchg
notb
test
test
adc
dec
or
int3
loope
cli
and
ss
rol
sbb
ret
fdivl
out
inc
or
and
mov
inc
add
rcrb
or
xchg
adc
xchg
out
cmpb
jo
fsts
nop
xor
or
jmp
adc
and
icebp
pop
ljmp
or
push
hlt
movb
push
rorb
aaa
add
dec
xchg
pop
addl
mov
sub
cmp
jg
je
into
push
sub
xorb
push
or
dec
jae
jo
sub
add
mov
jl
test
and
lock
into
inc
repnz
and
xor
insb
xchg
ja
or
icebp
jmp
outsl
jns
pop
pushf
pop
dec
adc
cmp
dec
aam
adc
jo
sahf
mov
mov
out
imul
or
add
je
lock
or
ret
lret
into
xor
popa
outsb
add
sub
aam
stos
mov
push
jo
xchg
jo
push
pop
std
outsb
mov
jl
lret
adcb
xchg
pop
outsl
fstl
pop
add
or
sub
adc
add
mov
packuswb
cmp
imul
add
dec
or
jmp
ljmp
sti
sub
test
fdivrs
pop
xor
mov
push
mov
adc
push
adc
jne
push
push
or
hlt
negl
adc
in
jg
pusha
cmp
jg
hlt
pop
dec
popf
jle
mov
adc
dec
fsubl
test
test
pop
xorb
pop
or
cmp
sub
pop
and
add
sub
push
call
pop
xchg
fs
or
and
cmp
push
push
gs
aad
bound
add
daa
push
lods
sub
sub
movsl
lods
or
or
xor
mov
testb
fsts
cmp
push
movsbl
dec
push
mov
int3
push
clc
push
push
mov
and
inc
jle
cmpsb
ljmp
sbb
mov
leave
jmp
adc
sub
xchg
adc
sbb
orl
add
loope
xchg
cli
aas
dec
sub
jmp
or
add
sub
bound
cmpb
into
dec
cmpsl
adc
push
jb
mov
in
mov
loopne
icebp
add
adc
jp
ss
xor
je
int3
imul
je
fists
mov
lret
inc
cmp
pop
lds
cmp
push
ss
xor
pop
inc
insl
cmpsb
mov
test
jmp
and
enter
add
lea
outsl
outsb
std
pushf
jnp
daa
testl
pop
cmpsl
or
cmpsl
and
add
popa
jle
je
inc
insb
ss
out
test
cmp
shll
or
jmp
ret
loopne
ja
mov
sub
sbb
mov
add
loope
mov
pusha
rol
aad
add
dec
jne
mov
xor
adc
shrb
mov
pop
inc
hlt
xor
fwait
movsb
in
cltd
mov
add
test
add
pop
js
cmpsb
aam
dec
mul
push
rcl
mov
xor
jmp
repnz
xor
enter
lret
pop
subl
sar
add
dec
or
test
je
mov
jne
push
or
mov
mov
pop
xor
dec
pop
iret
cs
mov
sbb
aam
in
inc
mov
aam
les
mov
sahf
aam
or
mov
mov
add
or
push
jb
xchg
mov
sbbb
adc
cmp
add
icebp
pop
gs
push
mov
and
rorb
sub
pop
imul
jb
xchg
ds
mov
fs
xchg
push
mov
xchg
push
fmull
pop
mov
sbb
push
pushf
adc
and
push
mov
repz
or
outsl
jne
ret
add
push
add
ret
rcll
fdivr
mov
jns
insb
dec
pusha
adc
add
adc
lock
and
xor
daa
jmp
in
jmp
inc
mov
insl
shl
mov
sbb
dec
and
mov
or
cmp
pop
inc
jbe
or
insb
shl
jmp
jge
decl
mov
hlt
cmp
or
lea
mov
testl
dec
inc
int
jae
and
xchg
iret
xchg
sub
ret
or
or
scas
mov
adc
ds
cmp
scas
data16
ja
pop
or
pop
xchg
inc
mov
sbb
ret
sti
jb
dec
push
sub
int3
sub
lret
and
out
ret
sub
repz
or
idivl
outsb
cmp
movsl
lock
mov
pop
adc
rolb
pop
mov
lret
pushf
ljmp
les
push
adc
cmp
cli
pop
int3
repz
ret
adc
xchg
loope
out
pop
insl
and
cmpsb
fsts
xor
out
pop
mov
bound
add
decl
js
cmc
or
leave
jns
ret
push
popf
stc
xor
cmp
push
sahf
fwait
sahf
mov
adc
cli
fstps
lods
jmp
testb
loopne
jg
leave
adc
or
jne
mov
or
out
rdmsr
pop
add
adc
in
in
sub
mov
in
pop
jno
insb
loopne
or
stos
push
xchg
aad
mov
jle
mov
sbb
or
push
aad
inc
and
loope
test
add
cwtl
or
xor
xor
sub
subb
popf
fisttpll
or
sub
ljmp
sbb
sbb
xor
push
mov
fstp
adc
mov
je
or
and
das
push
add
lods
nop
adc
mov
test
mov
xchg
sbb
iret
jb
das
inc
adc
nop
cmp
xchg
lcall
push
jo
shll
lret
add
add
lret
pop
or
andl
divl
int
movhps
addl
fsub
sti
pop
and
out
adc
std
mov
loop
push
inc
mov
pop
jmp
adc
jge
inc
add
sti
sbb
pop
or
jmp
sub
lock
and
je
dec
cmp
xchg
push
or
sub
aam
scas
cmc
jno
lods
mov
iret
clc
or
imul
inc
jl
and
adc
fbld
push
add
and
add
jecxz
sbb
out
leave
add
or
mov
cli
jne
mov
pop
sub
cmc
adc
sbb
adc
mov
push
sbb
daa
sub
pop
inc
push
jbe
idivb
sbb
adc
adc
in
push
xchg
shll
adcb
testb
add
andl
adc
mov
nop
add
sbb
add
addr16
loope
jmp
bnd
mov
push
mov
test
in
fxch
or
xchg
or
imull
cmp
sbb
and
insb
sbbb
imul
jmp
mov
lret
repnz
movsb
or
pop
fldl
xor
scas
mov
push
push
cmp
sbb
pop
xor
adc
test
pop
movd
sub
packssdw
inc
and
push
mulb
jae
jp
lods
sbb
push
std
jle
pop
lcall
push
xchg
and
push
fs
cmp
adc
sub
xor
test
add
sbb
lock
sti
add
ja
fldcw
loopne
outsb
movsl
and
dec
inc
jmp
dec
sub
les
ja
rcrl
dec
jo
test
sbb
adc
int3
test
test
fidivl
out
mov
popa
data16
cmp
push
xor
fs
pop
and
lods
push
idiv
enter
pop
lea
add
cmc
cmp
sti
lds
lds
jmp
cmp
mov
add
adc
dec
dec
pop
mov
mov
inc
sub
sub
test
ds
jnp
iret
sbb
xlat
loope
and
mov
jecxz
sub
cltd
movsb
and
pusha
pop
adc
push
sub
mov
push
aam
mov
push
pop
mov
pop
loope
cmp
push
pop
loop
inc
rol
adc
push
lahf
adc
push
push
xchg
push
inc
sbb
or
inc
or
and
lret
xchg
stc
les
xchg
pop
leave
cmp
sub
ljmp
inc
cmp
sub
insb
cmp
and
pop
idivb
pop
cmp
xchg
enter
push
in
xor
das
mov
cmp
sarl
cmp
jge
dec
add
outsl
sub
or
clc
push
cs
cwtl
mov
add
push
call
ds
adc
pop
ret
insb
fisttps
or
pushf
mov
or
cld
jne
push
jg
test
xchg
push
xor
mov
xor
addb
pop
or
lret
cmpl
or
jne
gs
xlat
cmp
adc
xor
jne
xchg
pop
mov
enter
daa
mov
popw
movsb
stc
imul
mov
mov
insb
outsb
or
fdivrs
jmp
mov
sub
nop
and
lods
pop
sbb
push
nop
andl
inc
dec
or
in
leave
dec
xchg
outsl
jae
cmpsb
adc
negb
or
shll
adc
dec
addb
adcl
add
or
jmp
mov
push
pop
out
mov
and
in
adcb
je
in
daa
lods
push
sbb
push
clc
jmp
ja
cmpsl
pop
movswl
sub
push
sbb
ds
lcall
dec
sbb
push
loop
xchg
scas
adc
enter
stos
dec
ljmp
insl
testl
adc
roll
or
sub
pop
stc
fwait
cmp
or
pop
or
sub
xor
mov
xor
nop
lods
imul
jmp
sbb
adcl
add
aaa
cmpsb
lret
pop
sbb
nop
pop
dec
das
add
sub
push
lock
dec
dec
fwait
push
insl
sbb
call
pop
sbb
mov
lcall
jo
icebp
std
cwtl
scas
pop
pop
repz
and
ret
mov
adc
ds
mov
pop
pop
je
cmp
xor
mov
scas
cmp
sti
pop
pusha
inc
push
inc
test
or
test
sub
mov
or
or
lret
rorb
inc
int
hlt
and
rsm
sub
or
xor
or
pop
and
ja
dec
iret
cmp
outsb
cli
xchg
unpcklps
inc
mov
inc
push
lret
push
notb
test
mov
dec
frstor
std
rcrl
add
add
or
dec
dec
ficompl
cld
inc
adc
xor
cwtl
int
cmp
sarb
mov
sub
setg
push
adc
cmpl
push
lea
pop
add
jnp
frstor
cmp
sahf
mov
aad
lret
pop
push
jbe
test
push
push
xchg
cmpl
in
mov
shrb
lret
aas
test
ss
stc
cwtl
gs
lock
les
adc
or
mov
xor
fcoms
jo
shrb
cmpl
jl
and
dec
enter
and
inc
daa
cmp
pop
add
jns
xor
fldt
sub
das
jl
push
or
cltd
sbb
data16
fisttps
das
or
stos
lea
ja
jg
push
dec
push
xchg
sbb
sbb
push
cmp
jne
inc
or
mov
push
shll
andb
jmp
xchg
xchg
adc
or
add
ret
and
sar
jne
pop
movb
jge
dec
jle
jecxz
add
push
cwtl
pop
cmp
xor
inc
adc
add
and
in
pop
mov
add
jbe
push
xor
scas
adcb
or
gs
or
push
sub
mov
mov
mov
dec
ljmp
push
mov
dec
mov
dec
or
jmp
rorl
or
cmp
pop
setl
mov
add
cld
lahf
adc
adc
and
ror
or
pop
inc
jnp
into
stc
and
push
hlt
xchg
push
cmpsl
mov
nop
inc
daa
adc
movb
add
adc
andb
or
daa
notl
adc
leave
and
sub
jge
push
inc
xor
or
jmp
pop
dec
in
sbb
add
insl
adc
not
cltd
test
sbb
jns
icebp
repnz
movsl
add
push
or
dec
dec
lahf
roll
jle,pt
push
mov
cmp
dec
je
inc
xchg
xchg
gs
outsb
sbb
mov
leave
outsl
pop
inc
clc
jne
adc
call
cwtl
inc
sbb
jg
push
ds
add
cmp
arpl
loopne
andb
jae
dec
or
sbb
push
rcrb
std
sbb
cmp
jge
or
shll
jmp
sbb
push
and
sbb
mov
popf
cmp
push
les
add
sub
nop
inc
or
test
inc
or
loop
stos
jg
mov
dec
sbbb
lahf
test
adc
std
popa
mov
mov
int3
mov
sbb
mov
loope
inc
mov
inc
xchg
lcall
or
jo
or
push
fistpl
inc
adc
mov
push
pop
jecxz
cld
inc
movsl
stos
push
push
cmpsb
jecxz
jb
les
mov
xchg
lea
jge
cmp
scas
ja
rclb
iret
bound
hlt
jle
mov
xchg
or
jle
adc
daa
aaa
xor
sbb
sahf
clc
sbb
xor
jg,pt
sahf
push
hlt
repnz
das
movsl
mov
fcmovb
lds
adcl
std
adc
imul
andb
add
push
jb
lods
xchg
rclb
jle
and
sbb
aad
pop
dec
push
mov
enter
pop
xor
fadd
xchg
repnz
mov
popa
clc
jae
aam
jl
inc
cwtl
jl
jg
push
sbb
hlt
inc
push
push
cmpb
fbld
dec
imul
push
mov
out
adc
test
daa
inc
push
js
lea
xchg
inc
mov
cmp
push
inc
shl
pusha
push
jnp
pop
shll
push
add
aad
movsl
dec
hlt
testb
test
rdpmc
or
into
xor
pop
push
jne
jne
nop
push
pop
data16
enter
sbb
jae
xchg
jne
pop
ljmp
je
push
add
imul
lock
add
dec
rcl
sbb
mov
xchg
pop
mov
push
mov
xorb
lock
mov
cmpsb
pop
andl
loop
jge
adc
cmpsl
dec
loop
push
mov
ret
sbb
jae
add
push
sbb
leave
sbb
mov
cmp
pop
inc
add
mov
bnd
cwtl
test
cs
or
add
scas
and
sub
mov
push
push
adc
pop
sbb
inc
inc
ja
pop
and
mov
sbb
cld
sbb
sub
and
jp
shll
or
in
shlb
loopne
and
xchg
mov
pop
cld
push
sub
dec
push
pop
lods
pop
test
or
aam
dec
shl
xchg
sbb
mov
sbb
mov
stos
adc
lds
pop
pusha
xchg
iret
xchg
dec
mov
mov
add
jg
loopne
jle
cmpl
pop
jg
aas
and
adc
xchg
adc
cmp
cld
adc
or
jbe
inc
sti
outsb
outsl
lods
popf
xorl
js
insl
adc
imul
daa
sub
dec
lock
add
push
inc
add
pop
mov
and
dec
adc
mov
mov
adc
inc
call
outsl
idiv
popa
loopne
outsl
lods
xor
sahf
jae
jno
daa
xor
mov
mov
cmpsl
pop
popa
movsl
loope
adc
sub
int
cmp
xchg
mov
xor
sbb
adc
in
sub
in
fs
push
mov
inc
lea
add
jne
mov
mov
xchg
xor
or
jne
xchg
pop
inc
mov
je
test
popf
sub
mov
data16
je
sahf
ss
dec
cli
sub
ljmp
push
inc
insl
inc
or
ret
jmp
sbb
jp
jmp
rclb
jge
push
mov
cmc
pop
dec
les
push
jecxz
ret
add
or
add
xchg
stos
add
jo
test
bound
sbb
setne
inc
mov
test
push
sar
iret
add
add
movb
and
sahf
and
out
lret
jl
roll
aas
repnz
adc
push
mov
lcall
or
fstpl
sub
imul
jne
add
and
pop
pop
cld
ret
inc
adc
add
test
mov
sub
mov
pop
pop
mov
xchg
mov
cltd
mov
push
sub
mov
faddl
imul
stos
dec
inc
sbb
aas
and
mov
faddp
sbb
push
cmp
sbb
daa
cmp
jne
pop
sti
xor
dec
jecxz
jl
test
in
adc
jg
pop
and
repnz
nop
cs
insb
in
sti
push
inc
jl
mov
or
pop
add
mov
jo
xor
ret
or
pop
shr
add
nop
mov
or
insl
into
cmpsl
aam
aas
or
mov
pop
rorl
mov
mov
in
inc
mov
enter
adc
dec
sbb
push
or
xchg
rorb
add
lea
mov
and
or
dec
jo
pop
mov
inc
outsb
lods
cmpsb
inc
into
push
enter
cmpsl
rcrl
xor
push
cmp
mov
add
and
and
xor
push
push
or
jne
cld
arpl
dec
mov
adc
jne
test
popf
dec
pop
std
stos
jnp
lea
cld
stc
mov
jp
test
xchg
sti
push
fnstcw
adc
imul
mov
jmp
push
hlt
data16
ret
out
sub
add
cltd
and
fdivr
fnstenv
ret
cmc
and
pop
aas
or
sar
pavgw
inc
adc
and
fcomps
pcmpeqb
rcl
shlb
repnz
or
clc
mov
inc
jmp
neg
adc
frstor
push
mov
mov
testb
add
cld
shl
or
shlb
and
add
cld
sub
test
push
std
jns
xchg
jecxz
in
dec
dec
mov
or
inc
shl
cmp
push
mov
or
inc
inc
inc
cmp
push
cld
xor
push
or
ljmp
jb
inc
decl
push
or
jmp
fnstsw
ss
fdivrp
and
movsb
hlt
shl
movsl
mov
pop
dec
jmp
push
inc
xor
lahf
push
es
pop
lock
or
and
lock
movsl
iret
xor
push
or
rcrl
ret
xor
xchg
push
xor
sub
sub
incl
stc
or
rorb
mov
pop
lret
jl
int3
mov
cmp
sub
mov
push
faddl
mov
hlt
add
add
mov
adc
jb
mov
test
jns
inc
mov
push
pop
and
dec
addr16
mov
es
mov
lea
inc
fsubl
or
jmp
xchg
sub
out
cmp
pop
sbb
xlat
cmp
subb
mov
cmp
or
mov
cmp
mov
adc
jne
inc
cli
idivb
add
push
loop
ds
adc
sub
ret
rorl
xor
pushf
and
adc
and
pop
popa
adc
adc
test
insb
jo
mov
push
mov
mov
sub
test
es
lahf
fs
roll
shll
in
push
fwait
jp
call
loope
xchg
push
push
push
xchg
mov
mov
cmp
xchg
out
xchg
jp
daa
add
push
notb
and
cltd
mov
push
filds
ljmp
cmpsb
jmp
jge
and
jb
hlt
je
xchg
sbb
inc
repnz
and
mov
cmp
cmp
je
push
testb
and
repnz
cmp
adc
xor
pop
and
lret
add
leave
dec
mov
pop
mov
loopne
adc
adc
and
fbstp
push
lret
in
push
xorb
lea
push
adc
and
insb
inc
xchg
xor
mov
sub
push
jmp
and
mov
adc
mov
daa
pop
push
dec
dec
sbb
and
notb
pushf
add
fs
in
push
or
cmp
orb
or
adc
rcll
cmp
xor
sub
fdivl
or
jne
mov
dec
xor
imul
nop
movsl
adc
xchg
push
inc
test
dec
cmp
aaa
and
and
popl
cmp
mov
mov
rcrl
pop
jmp
xchg
sti
push
scas
and
xchg
test
inc
adc
pop
xchg
fs
sub
cmp
add
push
sub
in
stc
or
mov
add
adc
hlt
dec
outsb
pop
or
push
adc
rcll
je
loopne
add
add
pop
call
jmp
fisubl
jne
aad
add
mov
cmp
inc
iret
inc
and
ds
or
and
mov
push
push
add
jmp
inc
call
pop
mov
cwtl
movl
cmp
mov
lock
xlat
js
jnp
or
sub
rcll
ret
xor
mov
adc
pop
je
cmp
cmp
mov
aas
subb
daa
and
cmp
dec
das
dec
mov
push
pop
add
add
jo
adc
pop
incl
test
or
push
adc
mov
sar
stc
or
dec
mov
sub
shrl
mov
pop
mov
decl
mov
xor
sub
int
xor
movsl
aad
pop
xchg
adc
mov
push
cmp
ss
mov
push
popf
sbb
cltd
jo
or
jne
pop
and
mov
sahf
sahf
xchg
mov
push
and
popf
or
jbe
cmp
pushf
inc
mov
inc
repnz
nop
mov
jne
pop
pop
movsb
sgdtl
adc
or
xchg
jmp
or
repnz
jmp
inc
adc
inc
mov
repnz
sbb
lods
xor
and
or
fwait
adc
add
mov
jge
sbbl
sahf
jl
sub
test
mov
add
mov
mov
iret
add
fcoms
xchg
inc
pop
or
jg
jp
inc
sub
adc
xchg
ror
sbb
int
js
and
ret
add
sti
push
nop
call
xchg
ret
rorl
jmp
rorl
and
push
inc
mov
movb
inc
mov
and
jp
pop
push
cmp
in
cs
push
sbb
repnz
dec
and
add
add
inc
xchg
sub
mov
push
enter
daa
sub
mov
leave
or
es
adc
testb
aad
adc
je
pop
inc
mov
mov
dec
mov
test
cltd
mov
or
inc
enter
cmp
aad
push
in
inc
cmp
sbb
stc
pop
or
sub
ffreep
cmpsl
es
sbb
inc
pop
dec
or
sub
xor
xlat
add
xor
xchg
mov
int
pusha
or
leave
cmp
arpl
fimuls
inc
jmp
and
adc
sub
mov
push
test
push
pushf
dec
xchg
dec
cmpsb
inc
xchg
mov
je
push
popa
adc
stos
sbb
add
xor
adc
fmul
shll
or
mov
and
mov
pop
out
inc
mov
inc
mov
xchg
sub
inc
data16
sbb
bound
jp
pop
and
and
push
xchg
sub
test
or
or
aad
sbb
loop
test
data16
xchg
or
negb
hlt
inc
mov
mov
jo
push
or
sbb
mov
jmp
cmp
mov
lret
mov
orb
add
jae
andb
adc
mov
out
dec
daa
sarl
push
dec
test
adc
or
add
jle
icebp
add
in
imul
or
jne
push
cmpsb
xor
test
jb
dec
iret
test
mov
popa
mov
inc
inc
add
cmp
es
push
and
add
decl
test
nop
add
add
mov
push
pop
mov
repnz
fs
mov
lea
pop
push
addr16
or
adc
mov
xchg
roll
or
cvtps2pd
or
or
cmp
add
mov
xlat
jns
push
inc
stos
inc
adc
pop
jmp
and
rep
outsb
sarb
inc
filds
scas
inc
subb
and
mov
lock
and
jnp
hlt
inc
popa
lea
add
cmovne
subl
pop
pop
test
mov
cmp
inc
mov
sub
add
cmp
xor
outsl
push
cmpb
and
lods
outsl
or
xchg
jnp
jbe
xor
jmp
mov
divb
pop
adc
mov
mov
scas
mov
sub
sbb
cmp
sbb
sub
cwtl
sub
test
enter
inc
inc
in
push
nop
dec
mov
pop
stos
aaa
pop
cmp
leave
xlat
cli
dec
movsb
leave
jnp
imul
or
icebp
push
xorb
sbb
insl
lret
cld
outsl
sbb
or
cmp
adc
ds
dec
dec
sbb
mov
adc
loope
inc
or
sub
sbb
push
inc
cmp
in
pop
add
xor
mov
adc
push
adc
push
jp
adcb
loop
cld
stos
aam
sbb
and
jbe
cmpsb
adc
call
pop
jmp
sub
jmp
movl
pushl
xchg
testb
mov
out
xchg
je
dec
std
xchg
add
idivb
jge
dec
lea
jae
mov
inc
popa
jmp
xchg
stc
popa
cmp
into
dec
int3
rclb
ret
xor
shll
cmp
jmp
out
cltd
shlb
test
push
mov
mov
jmp
repz
push
dec
lret
xor
push
jae
repz
adc
je
stos
in
stc
push
and
pop
adc
add
jmp
or
aad
add
test
sub
mov
mov
adc
rcrb
cmc
mov
or
adc
pop
push
int3
dec
adc
aaa
sti
dec
ret
mov
enter
mov
jmp
ljmp
xor
fmull
jae
movsl
rcrl
lock
in
testb
lahf
pop
jo
loopne
movsl
aas
enter
pop
out
jns
and
aas
enter
and
das
sub
pop
pop
dec
adc
jmp
push
sbb
popa
adc
pop
jne
das
and
push
cmp
jge
out
mov
and
jle
xchg
clc
je
movsl
sub
xor
push
mov
adc
push
int
xor
mov
scas
aad
and
cmp
ljmp
jb
dec
bnd
data16
shrl
jns
jns
les
inc
ret
jae
adc
aam
cmp
xchg
push
daa
add
ret
jp
subb
pop
pop
adc
fdivrs
inc
ret
daa
push
xchg
sbb
sbb
adc
ds
mov
xor
adc
jmp
jmp
mov
add
roll
mov
and
movb
adc
or
out
jo
sti
cs
add
add
cmp
cli
pushf
call
push
mov
sub
pop
sub
mov
mov
mov
and
inc
in
sbb
mov
or
push
sbb
xor
xor
mov
into
xchg
inc
mov
sahf
push
or
je
call
push
pop
and
and
mov
xor
lret
jp
js
dec
sbb
cmp
adc
imul
dec
dec
aaa
adc
outsl
cs
add
push
adc
rcrb
mov
fcoml
and
rcll
je
loope
sub
aam
dec
jp
sub
pop
dec
inc
test
mov
inc
adc
div
dec
les
or
or
jmp
inc
pusha
xor
shlb
cmp
dec
dec
out
mov
and
ds
stc
dec
daa
notl
hlt
jle
or
jno
add
push
jae
jne
jbe
int
outsb
jecxz
les
pushf
cwtl
push
sub
or
mov
lret
or
clc
popf
pop
cli
sbb
or
add
inc
or
ja
repz
mov
icebp
nop
stc
add
jmp
push
sub
inc
rcll
jmp
cmp
push
mov
pop
pop
pop
movsl
jge
adc
push
popf
clc
rolb
lret
dec
idivb
jb
xchg
notl
subl
addr16
or
jbe
pop
dec
in
lock
sbb
and
stc
sbb
dec
adc
dec
mov
jne
inc
dec
test
and
ret
ret
jmp
test
in
sbb
int
xchg
add
pop
mov
add
add
pop
in
and
psrad
xchg
adc
pop
sbb
movsb
sub
or
sbb
decl
mov
sbbl
jne
sub
lock
dec
push
mov
mov
adc
or
xor
xchg
loopne
dec
pusha
mov
and
or
xchg
inc
add
gs
push
pop
cmp
push
fs
push
cmp
mov
aas
xchg
or
lret
lar
stc
push
xchg
call
jns
cmp
cmp
mov
fs
ss
decl
shll
inc
fstpl
pop
xchg
imul
ret
inc
jns
push
mov
or
pop
mov
add
adc
dec
xchg
repnz
inc
pop
cmc
jns
subb
movsl
cli
pusha
sub
sbb
loop
push
mov
add
mov
dec
mov
jle
cmp
leave
lret
scas
or
lret
push
xchg
into
push
outsb
mov
rcrb
popf
push
jb
cmp
add
mov
mov
mov
sub
cld
jns
push
add
cmp
jae
cmp
and
shl
and
jl
loope
dec
loop
adc
sar
in
or
movsb
xchg
stos
sbb
or
icebp
xor
xchg
push
ja
fimuls
decb
mov
inc
roll
mov
sbb
decl
xor
mov
in
push
ret
adc
les
out
mov
repz
loope
test
push
mov
addb
push
push
mov
and
invd
mov
outsl
cmp
jle
je,pt
loop
push
pop
lods
sbb
xchg
mov
cmp
sbb
push
and
adc
out
arpl
or
mov
add
adc
jb
or
mov
add
sarl
stos
and
mov
cmc
sbb
ret
adc
adc
mov
or
lds
add
pop
pop
add
sbb
pusha
outsb
pop
pop
test
adc
sarb
mov
mov
mov
out
xchg
and
inc
add
test
xchg
lea
mov
mov
lret
sbb
or
into
push
clc
or
xchg
xchg
pop
je
mov
push
jne
or
pop
adc
inc
mov
sbbb
push
jbe
xchg
pop
pop
bound
adc
jle
mov
orl
jle
rolb
inc
hlt
incb
adc
xchg
push
sahf
sbb
mov
jl
jle
xchg
dec
std
cmpsb
sar
xchg
and
cmc
orb
push
pop
sub
mov
pop
pop
mov
movsb
test
cltd
aaa
and
dec
js
sbb
fimuls
inc
add
add
xchg
out
icebp
lahf
outsb
popf
mov
jmp
pop
lahf
jno
or
add
ret
sub
mov
enter
or
mov
cmp
addb
repnz
mov
mov
and
cwtl
js
daa
jb
mov
btc
cld
jmp
sub
test
cmp
xchg
lcall
ficoml
rep
mov
bound
fs
fistl
mov
nop
push
dec
jne
dec
pop
mov
lret
add
mov
or
push
and
xor
rcll
mov
popf
pop
adc
daa
stc
addr16
push
jp
cs
out
ficoml
loopne
enter
fcmovne
and
jecxz
xorb
and
sub
ret
out
jne
pop
cwtl
hlt
push
pop
notl
pop
shl
jl
cmpps
call
adc
dec
addr16
dec
sub
loop
insb
aad
add
sbb
leave
mov
ljmp
dec
push
das
movsl
push
push
nop
or
aaa
add
or
adc
loope
jmp
push
xchg
daa
clc
push
ret
and
add
idiv
sub
pusha
adc
inc
jne
les
mov
mov
into
mov
lcall
pop
es
adc
mov
jne
xchg
and
and
dec
mov
cwtl
icebp
push
or
mov
cmpb
jg
sub
hlt
inc
lret
jno
sbb
sub
dec
int
popa
addr16
cwtl
pusha
stc
cmp
jl
push
mov
or
sub
loope
ja
xor
add
mov
aas
and
jg
sub
repz
dec
dec
rorl
jg
adc
sbb
mov
xor
icebp
lret
aad
inc
nop
in
shrb
dec
ss
cmc
push
cwtl
jb
outsl
or
and
xor
ret
sbb
ss
xor
pop
mov
or
dec
frstor
sub
ds
jle
adc
sub
fistpll
dec
out
pusha
push
jle
add
push
xor
pop
jge
sti
xor
pop
push
fbld
mov
pop
mov
cld
lds
or
adcb
daa
jo
iret
push
jl
mov
xor
cmp
fistpll
xorb
ds
sbb
inc
add
adc
loop
xchg
shll
mov
push
movsl
popf
pop
inc
cmp
push
aaa
test
icebp
lods
cmp
xor
inc
mov
movsl
loop
out
cmp
mov
sbb
xchg
iret
or
mov
inc
or
mov
or
or
cmc
mov
or
mov
dec
and
jmp
inc
rol
mov
sub
and
pop
clc
in
je
mov
cmpb
xchg
mov
mov
rcrl
sbb
mov
xchg
jmp
and
pushf
sti
mov
scas
or
cmc
mov
jle
mov
xchg
nop
lret
dec
into
mov
fadds
leave
call
pop
or
lea
push
mov
pop
movsl
or
mov
dec
fists
sbb
iret
lcall
add
and
adc
push
push
movsb
mov
push
ljmp
inc
xchg
leave
lret
or
push
cmp
ret
std
jns
and
mov
rorb
adc
enter
insl
dec
sbb
pushf
cmp
sbb
insb
cmp
xchg
adc
js
or
sub
repnz
sarl
jo
or
add
ret
push
std
call
aam
pop
pushf
push
add
pop
lcall
or
pop
pop
push
mov
and
mulb
push
xorl
mov
add
cmp
es
xor
inc
push
adc
icebp
imul
add
adc
inc
cli
add
inc
xchg
lds
push
js
addb
adc
mov
push
sub
aas
inc
cmp
clc
push
push
aas
mov
xor
fs
pop
push
mov
cmp
pop
in
mov
aas
xchg
or
aas
pop
push
fdivrs
mov
push
or
call
fsubs
xor
es
adc
ja
xchg
pop
or
xor
frstor
jno
xor
scas
inc
movsb
lds
leave
push
fld
test
repz
les
and
xor
les
pop
mov
sub
dec
add
xor
dec
push
in
mov
sub
push
cmp
cmp
pop
add
jg
inc
jmp
mov
sub
sub
mov
sub
enter
inc
repz
cmp
sub
std
notl
sbb
or
les
mov
fcomps
and
jecxz
xchg
insb
push
xor
mov
cmp
test
mov
add
pop
mov
add
adc
push
sbb
add
imul
dec
add
enterw
push
add
enter
adc
xchg
inc
push
adc
rcrb
sub
or
push
push
jmp
adc
push
ss
mov
add
sub
movsb
dec
push
and
scas
and
mov
adc
cmp
dec
push
push
push
dec
xchg
sub
inc
pop
adc
and
sub
cli
jmp
fst
add
push
or
sbb
adc
inc
les
or
loopne
mov
sbb
cmp
jge
or
mov
rorl
mov
mov
je
adc
mulb
jg
sub
sub
inc
pop
mov
add
push
push
imul
add
jne
xor
xchg
add
mov
xchg
rdtsc
clc
rorl
pushf
xchg
sbb
jmp
xlat
add
jo
sbbb
sbb
decb
sbb
adc
cmc
nop
ds
imul
call
clc
pop
xor
push
add
test
and
cltd
mull
cmp
push
sbb
push
add
sub
add
stos
jne
cs
jmp
pop
push
and
ljmp
ja
or
push
adc
cmpb
jmp
test
in
or
cltd
addl
add
jge
test
in
ds
stos
sub
or
sub
mov
daa
xor
test
push
sub
push
addl
sub
out
andb
jo
cmp
dec
or
xchg
out
or
mov
inc
adc
pop
sub
aad
adc
out
fdivs
or
mov
adc
loop
pop
jne
mov
push
sbb
inc
mov
ds
stc
push
mov
fdivrp
dec
stc
lock
pusha
inc
push
dec
jmp
fstps
mov
outsb
push
adc
scas
mov
push
mov
fldt
sbb
or
push
repnz
sbb
adc
fnstcw
adc
test
clc
scas
xor
or
scas
xchg
loopne
loopne
push
mov
ja
jnp
dec
jg
repz
popf
push
pushf
jmp
hlt
movsb
dec
sbb
sbb
sub
jne
dec
std
pop
xor
ds
add
ljmp
and
adc
or
fidivs
fsubrs
sbb
jmp
mov
scas
inc
mov
mov
loopne
add
shlb
loope
testb
gs
cmp
das
test
mov
mov
scas
adc
ret
mov
mov
push
out
popf
dec
cmc
pop
sub
add
mov
adc
loope
inc
enter
adc
dec
jmp
je
dec
mov
sbb
sub
xchg
imul
push
mov
mov
pop
clc
rclb
test
mov
popa
cmp
jge
insl
push
push
sub
push
cld
pop
repnz
idivb
test
mov
xlat
test
fiadds
cld
and
inc
xchg
add
xor
mov
neg
sbb
or
sbb
dec
adc
and
and
or
or
pop
and
imul
and
enter
inc
xor
movsb
jb
sbb
pop
pop
mov
adc
dec
or
daa
fidivs
and
lods
outsl
aad
pop
pop
lea
les
adc
add
adc
pop
ja
ja
sbb
ja
sub
mov
add
rol
aas
cmp
hlt
pop
pusha
pop
xlat
iret
jo
mov
sub
mov
cs
push
ss
pop
repnz
cmp
arpl
xor
sbb
push
xor
iret
cld
jmp
mov
popf
sar
dec
push
shll
inc
add
roll
jbe
push
das
mov
repz
lea
movsl
aas
out
and
mov
sub
movsb
adc
ret
movsbl
cmp
push
cmc
shrb
cmp
push
sbb
enter
lods
test
jmp
push
rol
rolb
stos
imull
sahf
jnp
out
mov
icebp
push
jno
incb
jmp
sarl
adc
cmp
pop
data16
pop
test
inc
or
enter
out
movsb
jo
xchg
add
rcrb
sti
jl
adc
xchg
xchg
inc
loopne
adc
paddsb
pop
pop
push
or
test
cmp
inc
add
inc
jmp
push
pop
mov
mov
add
ja
scas
and
test
sti
xor
or
jg
ret
push
adc
cmp
ss
lods
cld
dec
inc
dec
and
fwait
jmp
aam
pop
jl
jns
cld
es
sub
fmul
or
cmpsl
jg
push
and
mov
movsl
jle
dec
dec
jge
retw
and
je
cmp
sub
inc
push
inc
or
mov
jle
or
sbb
xchg
xor
push
jle
ret
or
inc
nop
inc
add
pop
sbb
cli
mov
push
dec
popa
xor
cmp
cld
popf
dec
enter
pop
add
jmp
ljmp
je
clc
add
sbb
and
jmp
or
ds
ds
pop
sub
mov
or
inc
sub
mov
mov
sub
cmpsl
jno
sbb
adc
inc
mov
or
sub
ja
movsb
pop
shr
popa
stos
pop
jmp
dec
test
add
lea
mov
dec
enter
arpl
fs
add
test
jmp
mov
loopne
sub
jl
insb
or
push
push
and
jb
and
dec
or
add
inc
xorl
test
ljmp
jne
stos
add
mov
pop
out
nop
or
dec
repz
mov
ffreep
adc
mov
idivb
push
outsl
inc
mov
xor
cmp
jg
cmp
adc
ljmp
sub
dec
jecxz
sbb
jle
movsb
inc
fldcw
sbb
add
mov
jge
jns
sub
and
lahf
jmp
adc
movsl
push
lods
out
xchg
pop
mov
jno
push
movsb
mov
push
pop
push
in
jmp
add
stc
push
cmp
mov
adc
ret
xchg
and
sbb
sub
sbb
cmp
cli
int
jle
shr
movsl
pop
sbb
adc
fstpt
xchg
test
mov
mov
pop
cmp
bound
rolb
adc
in
aad
inc
add
jp
xchg
ret
sbb
sti
jmp
jb
lahf
neg
xchg
xchg
stos
or
xchg
jns
adc
pop
mov
xchg
or
jno
gs
add
lcall
mov
pop
loope
lcall
and
in
and
insl
mov
and
dec
xchg
fists
ds
in
inc
xchg
add
scas
and
int3
or
adc
and
inc
call
int3
adc
or
mov
adc
and
sti
add
aas
dec
shr
fldl
inc
add
andl
or
mov
push
adc
test
sbb
add
addb
insl
push
push
cmp
test
mov
cs
mov
movq
lret
sub
sti
push
in
inc
xchg
push
je
and
sbb
loopne
aam
inc
nop
and
push
mov
push
int3
roll
imul
es
addl
iret
pop
and
adc
mov
out
or
test
orb
cli
sbb
jge
cmpsl
mov
repnz
mov
jl
add
movswl
neg
mov
sbb
roll
cmpw
jb
and
push
cmpsb
pop
mov
popa
push
add
addr16
daa
insl
add
xchg
push
and
adc
pop
xchg
adc
outsl
sti
push
lods
add
mov
add
pop
jne
imul
pop
neg
and
or
sub
repz
add
addr16
cmp
enter
shll
or
lcall
leave
sti
mov
test
or
sidtl
or
rolb
add
shll
inc
xchg
push
or
icebp
mulb
xchg
rorb
sbb
xchg
ljmp
outsl
xor
pop
fldcw
mov
add
mov
fdivs
or
les
inc
pop
or
inc
popa
sub
decb
sbb
outsb
je
sahf
pusha
add
sub
mov
sbb
jne
inc
daa
xor
cmp
jo
jo
jb
out
or
and
addb
jne
lcall
push
loop
cmp
push
jo
inc
or
or
sbb
push
jo
ss
or
adc
sbb
or
out
dec
cmp
xor
in
or
push
lea
jo
ljmp
add
ret
jne
jmp
mulb
mov
push
and
loop
mov
adc
or
push
aam
sub
pop
nop
push
lahf
push
add
inc
push
mov
nop
hlt
push
fimull
adc
push
shlb
ret
je
and
sbb
jmp
jl
dec
pop
aaa
adc
mov
aam
xchg
dec
in
jl
daa
xlat
sbb
cli
clc
jne
ret
push
clts
cmp
pop
jbe
and
cmpb
jne
push
push
push
push
inc
inc
mov
push
or
cmp
fs
mov
pop
cmpsl
or
mov
cmpsl
jb
lahf
xchg
mov
andl
or
inc
mov
dec
movsb
in
mov
mov
fists
adc
jmp
ss
mov
push
lods
inc
dec
jle
sub
mov
in
es
or
stc
mov
clc
and
inc
lret
cmpl
push
and
add
mov
mov
push
lods
sbb
std
jnp
and
ja
int3
cmp
jg
bound
dec
push
push
pusha
sub
cmp
sbb
jp
xor
mov
push
test
push
add
cmp
cmp
scas
add
and
push
test
cwtl
jle
xchg
add
out
subl
mov
mov
xchg
cli
pushf
adc
or
sarl
sbbl
push
pushl
jl
loop
lret
lods
out
outsb
add
insl
je
mov
jp
or
adc
pop
jg
addl
pop
push
pop
jle
add
vpsubsb
and
jg
xchg
pop
cmp
pop
push
xor
mov
mov
fadd
je
rcll
pop
jmp
dec
in
xchg
fs
xlat
cmp
ja
mov
aam
aas
lock
cmp
xor
and
hlt
loop
adc
cmp
push
out
inc
inc
pop
xor
push
cmp
lret
insl
hlt
cmc
loop
and
fimuls
sbb
movl
or
sbb
push
xchg
jmp
cmp
fildll
xlat
xchg
jno
ss
or
rorl
or
sbb
or
push
jmp
cmp
mov
loop
mov
popa
cmc
push
pop
adc
mov
add
push
push
inc
add
cld
adcb
or
pop
add
daa
lea
pop
and
ja
ret
push
jb
fdivrs
movsl
aam
fs
sub
dec
sbb
enter
mov
inc
lahf
pop
insl
push
insl
leave
pop
cli
int
jle
mov
mov
xor
pop
jne
push
pop
mov
test
ret
push
lret
je
mov
clc
add
ja
roll
ja
out
in
push
inc
xor
ds
push
mov
mov
mov
add
rorl
imul
repz
xor
stos
or
mov
and
add
lret
ljmp
mov
pop
mov
jg
mov
cmp
ret
rorl
adc
test
and
adc
repz
push
fists
adc
xor
xor
hlt
mov
sbb
push
cld
dec
out
ret
cmc
and
mov
je
cmpsl
xchg
xor
clc
mov
xor
or
imul
mov
inc
lea
xchg
push
adc
cmpb
and
lret
out
pop
sbb
loop
dec
shl
and
jmp
jge
or
jbe
inc
push
jp
out
or
mov
jecxz
popf
mov
adc
xchg
jmp
pop
out
jecxz
shrl
or
mov
iret
loope
and
insb
loopne
and
sub
push
rcrl
in
inc
inc
push
pushf
test
js
lods
icebp
xor
mov
jns
lods
dec
test
jp
loopne
sub
push
dec
stc
fwait
lock
push
and
sub
dec
push
sbb
dec
lods
sti
dec
inc
push
cs
mov
lret
loop
mov
rolb
rclb
lea
push
or
rclb
icebp
dec
ret
shl
sbb
add
ret
jmp
mov
icebp
push
data16
pop
frstor
clc
mov
clc
mov
pop
sete
jecxz
push
dec
sbb
jbe
mov
jne
cmpsb
mov
sbb
and
mov
ds
arpl
or
add
bound
cmp
and
inc
int3
ss
mov
sub
pushf
sbb
push
out
and
jl
andl
loopne
xor
pushl
lea
pop
ljmp
daa
inc
jg
fucomip
lock
or
add
xor
xchg
test
xor
mov
xor
rcrl
test
and
test
pop
inc
movsb
call
mov
fs
ret
push
pop
sub
iret
inc
lds
mov
fs
scas
mov
out
cld
sub
enter
fmul
add
fistpl
xchg
inc
shll
fdivs
adc
out
popf
sub
xor
mov
sub
ja
dec
popa
and
mov
cmp
jo
test
inc
sbb
into
sub
cmp
ss
adc
and
test
movsb
ss
dec
ret
sbb
mov
push
stos
rol
notb
push
imulb
ljmp
adc
push
add
pushf
add
mov
sbb
jmp
xchg
jp
pop
pop
call
sub
xchg
mov
hlt
int3
mov
adc
mov
jg
divl
mov
jnp
cs
push
pop
ret
inc
ds
cmp
jmp
inc
movsl
daa
ljmp
addl
loopne
rorl
gs
push
mov
xchg
ffree
or
je
mov
fidivrl
call
sbb
jbe
xor
mov
sbb
and
xor
or
push
jge
inc
sub
imul
sub
inc
adc
add
xor
mov
je
test
inc
dec
or
and
pop
push
jl
push
xor
jne
adc
add
movsb
and
inc
add
and
hlt
enter
fmul
leave
rcrb
cmp
movsb
mov
mov
pop
ljmp
leave
dec
loopne
cmpsl
jl
outsb
jne
shll
and
pop
ljmp
rclb
dec
adc
mov
mov
sub
push
and
and
aam
int3
or
lret
jbe
lret
inc
adc
ds
lods
adc
pop
sbb
jl
dec
xchg
repnz
and
push
pop
adc
push
xor
cmp
dec
gs
cs
mov
xor
xchg
jp
sbb
xchg
mov
cmp
leave
outsb
sub
dec
fcompl
test
sub
test
sbb
adc
test
push
pop
jmp
adc
jmp
fsubl
jnp
jae
hlt
sahf
daa
cltd
cmp
in
jno
jno
movsl
ds
ljmp
cmp
inc
cmpsl
jge
xlat
push
stc
ficoml
cmp
mov
add
inc
rorl
mov
inc
pusha
addr16
fidivl
sbb
mov
lahf
add
adc
stc
jb
sub
dec
repnz
fsts
cmp
pop
xor
or
aaa
and
add
cmp
inc
and
mov
je
aaa
cmp
fmuls
inc
adc
sbb
inc
push
test
fcomps
pop
inc
sti
lret
scas
pop
mov
xor
fdiv
rorl
addl
sub
pop
movsb
xor
sub
mov
imul
iret
sbb
xchg
jno
xchg
icebp
or
jo
pushl
pushf
pop
pop
leave
sbbl
or
bound
or
jns
or
pop
cmp
rcrl
je
mov
adc
dec
pop
xorl
adc
inc
add
jno
mov
ret
jno
ljmp
add
mov
mov
mov
mov
mov
in
loopne
fwait
iret
dec
mov
stc
or
ror
adc
dec
adc
dec
and
negb
adc
daa
xchg
ss
and
jnp
xor
push
stos
mov
test
mov
arpl
mov
sub
or
mov
stos
sahf
inc
ret
xor
lret
xor
lea
cmp
dec
dec
sub
mov
jne
adc
test
and
pop
adc
gs
sbb
inc
jne
call
test
cmp
decb
mov
jns
pop
add
xchg
jmp
imul
or
jmp
scas
xchg
jbe
dec
push
pop
loopne
sbb
push
inc
shrl
mov
jmp
mov
add
aam
add
scas
dec
lods
add
add
fidivs
push
sub
popa
dec
xchg
jno
push
sbb
fs
mov
lret
es
push
and
mov
dec
lods
and
xchg
shrl
mov
add
lcall
fwait
cmp
mov
psubsb
pop
inc
popf
sar
mov
dec
sbb
add
or
lods
cmp
or
inc
es
mov
or
inc
data16
jno
daa
or
data16
or
and
mov
int3
cmpsl
cltd
jle
and
mov
mov
push
push
adc
mov
push
aaa
mov
ret
sbb
ficomps
dec
or
cmp
jge
data16
in
aam
sub
in
scas
test
aam
sbb
cmpsl
push
les
ror
pop
push
sub
adc
xchg
push
orl
sub
gs
mov
dec
insb
adc
xor
xlat
mov
clc
rcrb
pop
add
push
xchg
or
inc
fcomps
loop
rcrl
xor
adc
adc
dec
xchg
adc
int3
mov
mov
int3
add
movsb
xor
adcl
xor
inc
push
ret
mov
or
ret
nop
adc
adc
or
push
sbbb
js
push
nop
fwait
adc
pusha
loopne
test
and
int3
dec
adc
lock
les
ja
add
fildl
add
add
add
movsl
add
pop
xchg
xor
pop
ja
popa
push
out
mov
sbb
insl
rorb
xor
xchg
fs
add
mov
push
movsb
mov
cmp
rclb
add
sub
sbb
mov
repnz
mov
dec
jno
repz
mov
sbb
in
mov
hlt
movl
test
add
std
in
leave
mov
dec
pop
add
insb
push
arpl
cmp
or
add
pop
adc
in
add
jb
addr16
add
inc
aam
dec
std
test
or
insb
cwtl
add
fildl
pop
mov
xor
filds
iret
or
shrl
cmp
ficoms
enter
push
popa
sarb
add
les
iret
pop
shld
sub
mov
add
and
add
mov
jl
das
adc
pop
stos
sbb
add
nop
inc
fdivl
jno
fildl
mov
adc
aad
mov
mov
add
aam
call
js
stc
orb
test
or
mov
sub
insb
add
pop
arpl
hlt
push
jno
bound
sbb
xor
dec
ret
shl
in
xchg
jge
add
add
shl
addb
les
cmc
fnstenv
mov
ljmp
mov
bound
dec
sub
rorl
pop
popa
mov
into
and
mov
aam
movsl
push
fisttps
xchg
fadd
add
shll
add
imul
add
pusha
fidivl
sub
add
pop
add
leave
jl
fnstsw
jno
push
inc
inc
add
adc
and
and
cmp
aam
mov
into
push
stc
ficomps
leave
fnstcw
sub
adc
mov
xlat
pop
pop
cmp
mov
add
and
mov
lcall
mov
je
inc
aad
scas
ja
popf
adc
adcl
jae
add
arpl
test
fs
ds
push
or
lock
push
in
pop
decl
xchg
daa
scas
add
mov
pop
cmp
lock
repnz
inc
push
imul
xorb
insb
sbb
loopne
outsb
jbe
aam
loopne
rorl
adc
dec
frstor
fistpll
mov
pop
aad
mov
call
jle
shll
cmp
fisttps
addr16
add
dec
ss
dec
fisubrl
or
imul
dec
add
pusha
jp
inc
ret
jbe
cmp
push
sbb
outsb
xor
imul
lret
sbb
shrb
ss
add
ja
int3
add
add
das
es
mov
mov
add
sub
mov
cmpsl
add
xlat
ret
shlb
sub
scas
ficomps
cld
add
pushf
mov
xchg
insl
add
add
push
jmp
addr16
jb
jo
add
adc
mov
mov
cmp
mov
or
mov
xchg
or
mov
fdivrl
fstpt
or
xchg
xchg
pusha
icebp
clc
mov
add
sbb
int
mov
mov
jae
add
mov
out
sarb
dec
cmp
pop
or
jns
add
clc
shl
imul
insb
push
js
or
xlat
push
addl
add
cmpsl
testl
inc
imul
dec
push
scas
faddl
pop
fldenv
filds
fdivs
push
sarb
jg
mov
jmp
sbb
mov
lret
mov
push
cmpsb
mov
sar
in
push
xlat
add
sub
push
mov
jp,pn
mov
dec
popa
add
add
push
add
aaa
mov
or
ret
add
add
sub
add
inc
sbb
and
popf
dec
jnp
push
add
xor
je
cmp
and
in
hlt
jb
cmp
hlt
out
outsb
les
dec
gs
adc
sbb
sbb
sbb
jno
pop
mov
push
cmpsl
add
test
pop
and
or
jo
mov
and
test
je
adc
sbbb
lods
inc
xchg
adc
push
xor
or
xchg
pop
lock
mov
imul
pop
loop
pop
dec
dec
inc
cmp
dec
inc
mov
out
inc
jp
jo
iret
xor
push
outsl
push
xchg
movsb
or
push
add
add
addl
adc
xor
xor
sub
loopne
pop
jo
cmp
xor
push
pop
aam
push
jo
js
add
inc
aaa
cmp
sbb
out
orl
sub
insb
sub
jge
pop
pop
jns
or
push
enter
gs
cmp
insl
sub
and
pop
push
adc
bound
and
andl
aas
mov
pop
bound
insb
outsl
inc
mov
adc
imul
ss
adc
xor
xor
pop
cmp
dec
or
push
or
xor
inc
adc
push
inc
or
jle
push
adc
lock
jl
sub
sub
insb
lret
lret
outsl
and
outsb
jge
dec
inc
push
dec
inc
xor
mov
xor
adc
inc
loopne
fmull
sub
mov
adc
sbb
and
adc
sub
int3
into
sbb
xchg
cmp
int
lea
sbb
repz
rcrb
mov
xor
sub
jle
adc
mov
imul
repz
dec
push
inc
cmp
push
dec
cld
filds
dec
inc
sub
push
dec
cld
dec
movsl
adc
push
xor
cmp
inc
sahf
insb
push
nop
je
movsb
dec
cmp
jl
push
into
sbb
jle
jo
nop
sub
aaa
adc
loop
jne
push
xchg
dec
push
icebp
jbe
ja
cmp
mov
ret
mov
nop
xor
movsb
jbe
push
lea
cmpsb
push
arpl
mov
std
mov
pusha
cld
pop
rclb
add
pop
sbb
jecxz
pusha
xor
scas
clc
cmp
jo
mov
and
movsb
and
pop
cmp
and
leave
sbb
mov
andl
and
popa
test
and
arpl
lret
xchg
pop
push
sbb
add
andb
mov
xchg
jmp
aaa
pop
xor
cmp
and
loopne
pop
dec
sub
icebp
iret
cli
jne
sub
pusha
push
popa
add
mov
sub
xor
or
cmp
orb
aam
cmp
data16
xlat
jns
stos
inc
sub
in
push
aaa
popf
cmp
mov
jns
sub
mov
and
and
and
aad
cmp
inc
faddl
adc
out
sbb
dec
xor
imul
push
or
push
lret
aad
push
mov
xchg
ds
push
popa
rcrb
aam
bound
inc
mov
or
decb
push
insb
xchg
out
push
gs
sbbb
out
inc
dec
push
pop
sahf
or
je
mov
movsl
push
jbe
add
adc
mov
pop
fs
dec
dec
mov
inc
fidivrl
aas
xor
cmp
jb
cmpsb
adc
inc
sub
adc
xor
mov
jmp
imul
or
add
outsb
add
and
jo
js
and
or
jno
call
xchg
fs
push
jb
imul
les
pop
dec
inc
and
and
mov
sub
or
enter
inc
jae
push
gs
js
xlat
jo
inc
add
add
add
test
jne
pop
xchg
mov
and
je
mov
mov
pop
inc
movsb
mov
or
and
add
int
loopne
insl
loopne
add
movsb
or
sbb
pop
lret
dec
push
and
test
dec
pop
cli
push
inc
push
mov
aaa
xchg
movsb
hlt
or
mov
mov
insl
xor
lock
adc
cmp
clc
mov
xor
sbb
adc
sub
lods
adc
xor
movsb
and
rcll
xor
mov
mov
rorb
sahf
loopne
inc
mov
hlt
inc
mov
push
inc
sub
or
push
in
aam
adc
sbb
sbb
or
pop
mov
fs
dec
or
je
outsl
movsb
or
adcb
mov
test
cld
faddl
jl
test
into
jno
xchg
push
sub
mov
xchg
test
out
cmp
inc
xchg
in
mov
sbb
xchg
push
add
sbb
xchg
sbb
or
inc
adc
and
xchg
sbb
int3
pushf
sbb
clc
push
add
push
dec
dec
dec
cs
loope
out
ljmp
add
add
fisttpl
lret
lock
pop
adc
inc
add
inc
shlb
fisttpll
nop
push
inc
add
inc
or
push
push
push
inc
add
roll
jl
inc
push
or
bound
inc
or
push
inc
pop
xor
push
movl
cs
dec
push
adc
xor
lret
test
js
jae
out
push
pop
or
pusha
inc
add
xor
jp
jbe
jae
outsl
bound
leave
gs
test
push
dec
sub
arpl
and
jb
sbb
clc
jae
cmp
xorl
cs
xor
imul
cltd
sbb
outsl
ja
out
outsb
jbe
arpl
loopne
addr16
sbb
sub
jae
inc
cs
and
sbb
or
insb
outsl
or
jae
imul
add
mov
nop
dec
jo
push
add
data16
popa
jb
gs
dec
les
dec
ja
inc
jne
jb
jecxz
cld
lock
cwtl
xchg
sarb
mov
dec
dec
inc
xor
push
out
dec
lods
cmp
mov
jo
cmp
fimuls
dec
jae
xor
cmp
das
mov
add
popa
insb
jae
call
dec
push
sbbl
shlb
or
cmp
inc
cmpsb
fdivl
or
mov
add
cld
test
hlt
dec
call
inc
rol
mov
movsb
inc
pushf
cwtl
mov
add
in
dec
push
enter
and
push
and
dec
push
xchg
push
and
cmp
xor
or
and
mov
xchg
call
or
or
mov
inc
movsb
adc
aam
xchg
adc
js
je
push
and
cmp
mov
adc
and
dec
adc
or
add
cld
cmpsb
mov
mov
adc
and
dec
fcoms
enter
adc
xchg
pushf
and
mov
mov
jo
push
push
enter
and
xor
mov
adc
or
add
cld
movsl
sbb
or
adc
and
dec
fcoml
mov
or
mov
int3
mov
enter
push
and
inc
adc
or
mov
adc
adc
adc
movsb
xor
push
pop
fcoms
xor
ret
gs
lock
pop
insl
je
fdivrl
shll
imul
or
jmp
jo
sbb
stc
push
gs
sbb
jo
iret
and
xor
pop
arpl
push
push
jb
mov
fnsave
test
sub
pop
adc
adc
bound
xor
xor
mov
popa
jg
lret
sub
push
mov
adc
adc
and
adc
adc
and
and
sub
or
enter
icebp
pop
mov
mov
jne
bound
arpl
adc
jo
mov
push
push
sbb
shrb
xchg
or
mov
stc
cli
mov
or
adc
adc
mov
push
inc
mov
mov
xor
push
dec
xchg
lahf
je
fnstsw
bound
push
popa
dec
jae
jne
or
sub
dec
jg
enter
push
push
imul
mov
inc
fildl
cmpsl
mov
xorl
sub
jae
out
push
and
xor
scas
add
imul
inc
xor
cmp
mov
insl
sub
addb
add
lahf
test
cwtl
hlt
jne
mov
movsb
xchg
nop
int
daa
nop
pop
inc
outsl
or
mov
aas
push
imul
xchg
mov
jb
inc
inc
outsb
jne
cmp
imul
arpl
js
adc
cmp
outsl
or
mov
and
icebp
xchg
xor
enter
enter
xchg
and
cmp
rorb
and
adc
aaa
or
into
adc
sbb
test
les
sbb
and
xchg
or
cmp
in
insl
lcall
mov
hlt
lds
dec
and
addr16
in
push
addr16
loopne
clc
leave
push
jne
fs
mov
jne
mov
flds
scas
iret
mov
sbb
fistpl
loope
cmp
lods
cmp
rorl
in
jne
sbb
and
cmp
dec
push
inc
and
jbe
xor
fs
test
dec
or
mov
mov
or
jno
pop
test
aaa
jg
xchg
sub
movb
dec
imul
and
inc
popa
push
sub
mov
cmp
pop
sub
or
cmp
fs
xor
push
and
jmp
imul
pop
mov
pop
addr16
xor
adc
arpl
mov
inc
push
jmp
sub
repnz
inc
xor
dec
sub
cwtl
ds
jmp
ret
inc
test
loopne
and
and
cmp
pop
push
sub
mov
xor
test
sbb
mov
jne
dec
inc
dec
rclb
outsl
push
adc
push
cmp
push
xor
mov
xor
inc
aas
addr16
das
push
dec
dec
stos
push
adc
fs
push
and
cmp
aad
mov
dec
and
push
xor
test
adc
jne
test
loopne
inc
movsb
mov
sub
sub
dec
dec
push
mov
mov
dec
and
ss
sub
leave
push
pop
push
lret
pop
mov
arpl
pop
test
mov
sub
push
push
mov
fcoms
push
popa
addl
mov
imul
mov
mov
popf
mov
sbb
xchg
or
sub
insl
jmp
gs
jmp
shlb
inc
pushf
lahf
push
inc
cmp
xchg
adc
test
gs
and
aam
ja
and
jmp
jbe
add
testb
sub
sub
call
dec
outsl
cmp
sbb
add
data16
pop
sub
push
in
fiaddl
push
adc
loopew
enter
xor
imul
push
dec
jae
sbb
inc
enter
daa
xor
movsb
stos
add
push
and
inc
sub
rcrb
aam
mov
dec
inc
xchg
jae
jmp
pusha
cli
lret
outsb
mov
test
sub
cmp
jne
aaa
pop
aam
cltd
daa
arpl
aad
in
fcmovb
mov
movsb
ficompl
push
push
xor
sbb
lcall
lret
inc
xor
inc
and
cmp
adc
loopne
or
mov
inc
dec
gs
sub
mov
sahf
inc
dec
dec
adc
jbe
and
xor
pop
push
jb
sbb
push
push
dec
mov
sub
arpl
mov
scas
sbb
insb
ja
jle
outsl
mov
cmp
push
fs
jae
sub
inc
push
cli
les
lods
push
pop
lea
inc
or
in
mov
arpl
dec
and
stos
pop
mov
popa
push
outsb
imul
out
mov
jns
push
push
push
mov
and
sbb
lds
imul
xor
mov
mov
dec
push
inc
push
leave
jns,pn
mov
xor
xchg
dec
dec
and
inc
push
leave
add
in
andl
mov
jb
sbb
jecxz
cltd
insl
mov
and
mov
push
in
mov
gs
jge
and
add
ds
inc
pop
rcrb
mov
push
mov
push
inc
dec
push
cs
dec
xchg
movsl
ss
and
mov
dec
dec
push
sub
push
sbb
and
or
push
dec
dec
daa
dec
dec
sbb
dec
sbb
movsb
int
and
push
shll
movsb
dec
sarb
adc
push
aad
push
inc
enter
shlb
jecxz
dec
imul
or
popa
cmp
test
insl
sub
jno
pop
cs
jo
push
mov
test
les
lahf
dec
cmp
mov
rorb
xor
push
mov
sub
mov
cmp
test
loope
push
xor
leave
insl
jne
cmpsb
bound
aam
cmp
call
pop
pop
mov
dec
push
movsl
daa
dec
loope
outsb
inc
ret
test
es
popa
cmp
jbe
sub
bound
push
mov
pop
insl
fwait
mov
lods
mov
xchg
shll
adc
adc
and
push
mov
in
testl
cmp
stos
sub
xlat
xchg
jg
mov
sbb
xchg
and
mov
movsl
mov
insl
jo
adc
jbe
add
sub
push
pusha
mov
or
mov
and
adc
mov
mov
jb
mov
lret
cmp
inc
sbb
jl
sub
cmpsb
mov
pop
fwait
dec
imul
sub
push
outsl
jmp
je
cmp
sub
call
in
shlb
mov
sbb
rcr
and
lods
mov
cwtl
xor
inc
sbb
cmpsl
adc
fwait
push
mov
mov
movsb
iret
mov
xchg
push
nop
fisttpl
popf
jmp
sbb
aas
in
mov
push
pop
cmp
pushf
fnsave
bound
push
ss
adc
inc
inc
dec
mov
repz
aad
cmp
das
ja
aad
and
and
js
pop
ss
scas
subb
inc
adc
sbb
inc
push
dec
dec
pop
cmc
insb
dec
fstpt
add
cmp
movsl
in
or
and
je
jb
mov
movsb
xchg
xchg
cmovge
mov
repz
push
popa
insl
jne
mov
int
lock
mov
sub
sbb
jo
test
push
loope
or
lds
sbb
pop
data16
mov
pop
xchg
pop
pop
xor
xor
mov
xor
push
lea
call
daa
jns
cmpsl
cmpsb
popa
mov
xchg
imul
xor
dec
adc
mov
test
dec
mov
jecxz
sti
mov
cwtl
adc
add
sub
and
cmp
pop
test
jo
frstor
in
lods
jle,pt
je
mov
push
pop
adc
xor
dec
sbb
pop
mov
dec
loopne
popa
addr16
das
sub
jne
incb
jae
jns
sub
mov
inc
dec
mov
mov
imul
mov
aam
pop
shl
mov
cltd
shrl
popa
cmp
push
subb
test
and
clc
lcall
iret
pop
sahf
fcompl
push
inc
lret
sahf
nop
gs
cmpsl
aam
fst
scas
push
rcl
mov
adc
cs
testb
lahf
dec
push
jns
je
je
jnp
push
xchg
sub
dec
inc
dec
dec
data16
leave
dec
push
jl
push
jo
rcl
mov
jns
jo
or
adc
mov
nop
imul
int3
dec
pop
xor
insl
test
cmpsl
into
xor
and
mov
or
in
or
adc
xchg
test
andb
inc
stc
sub
testl
mov
fs
dec
inc
dec
dec
push
pop
push
pop
icebp
jecxz
into
cwtl
inc
push
mov
arpl
mov
repnz
inc
or
jp
dec
jne
xchg
and
movsb
ret
push
xchg
hlt
jo
adc
cmp
sbb
pop
adc
dec
push
dec
adc
jo
xor
test
fistpl
jo
lods
xor
adcb
inc
sbb
dec
adc
xchg
cmp
sahf
pushf
jns
jg
aaa
pusha
insl
jns
pop
ljmp
or
imul
sub
mov
cmp
mov
movsl
or
outsb
dec
mov
inc
jle
cmp
add
roll
or
xchg
cmpsl
movsb
jbe
inc
mov
imul
jge
add
sub
add
dec
inc
inc
inc
push
jmp
mov
jmp
pop
push
sahf
dec
inc
jae
sub
adc
test
fadds
push
daa
loop
push
or
dec
rcll
daa
or
jb
aad
movsb
pushf
test
xchg
cld
lea
popa
sub
jno
dec
and
imul
popf
or
jb
in
loope
or
cmpb
jne
lahf
jns
cs
pop
xlat
sub
aaa
mov
mov
leave
fisubl
jmp
lock
hlt
jmp
jns
xor
inc
and
sbb
push
and
ret
nop
gs
clc
cli
inc
inc
shr
sub
inc
bound
and
or
sub
xor
and
mov
ja
dec
adc
mov
fs
nop
or
mov
cmp
and
xor
lret
pop
jp
pop
aad
pop
jp
fs
inc
jmp
insl
rcrl
sub
test
cmpsl
push
sbb
ds
lea
sub
repnz
mov
test
mov
xchg
push
js
mov
inc
aaa
pop
fwait
clc
inc
push
sbb
add
or
xchg
sbb
ljmp
sub
sub
mov
in
vmread
std
test
in
mov
and
push
jb
scas
inc
inc
push
arpl
add
or
xchg
and
adc
xor
lcall
sbb
addr16
push
enter
dec
gs
or
mov
outsb
add
loope
cmc
das
outsl
xor
or
add
push
pop
and
mov
dec
fs
or
add
jne
push
leave
leave
cwtl
ja
js
push
outsb
mov
mov
les
cmpsl
das
inc
mulb
movsl
fiadds
leave
pop
sub
shll
mov
test
loop
add
push
dec
push
inc
sub
adc
add
push
out
pop
sub
add
inc
fisubrs
sbb
lret
insl
inc
sub
in
mov
dec
xchg
xchg
and
push
call
jecxz
loope
dec
fisttps
pop
dec
jae
add
outsl
sbb
and
mov
dec
mov
sbb
or
pop
push
mov
sbb
aas
rorl
or
cmp
mov
cld
mov
xchg
mov
or
inc
sub
es
cmpsb
cmpsb
push
scas
pop
mov
xor
mov
cmpsb
outsb
stc
pop
cmp
fsub
fsubl
hlt
and
sbb
clc
nop
mov
in
cmp
inc
sbb
test
inc
mov
repz
notb
cmpsl
jmp
addr16
adc
ror
inc
jne
jg
xchg
inc
gs
clc
je
jge
add
lods
insb
adc
out
inc
cmp
inc
sub
or
push
sub
imul
xchg
les
pop
pop
jne
popa
pop
fbstp
cmp
lds
lret
mov
sub
fists
imul
push
jns
push
push
loop
idivb
and
inc
push
cs
xchg
mov
push
jmp
and
and
sub
decl
sub
pop
popl
sbb
cmp
cmp
mov
mov
js
mov
call
dec
mov
xchg
ficomps
xchg
idiv
dec
lret
mov
imul
push
inc
sbb
add
xchg
add
pop
fs
test
push
dec
push
pusha
out
movsl
adc
or
sahf
lahf
cmpsb
sbb
mov
or
inc
mov
push
fxam
xor
cmp
mov
sahf
imul
dec
mov
cmp
icebp
repz
adc
dec
push
outsl
cmpsl
insl
jl
inc
lret
cld
cmp
adcb
push
pop
je
lcall
jo
sub
cs
xor
out
dec
sbb
push
push
fsubrs
push
jbe
push
sbb
push
pop
aam
lcall
sarl
jo
test
sub
jns
sub
adc
push
jno
iret
mov
and
pop
mov
mov
popa
mov
sbb
lods
ret
bound
xor
xchg
and
mov
xor
jne
adc
push
repz
push
push
push
arpl
push
cmp
sub
loopne
push
lret
fst
sub
inc
jl
inc
and
pop
inc
cmp
pop
pop
aas
pop
subl
sti
scas
test
cmp
jbe
movsl
jg
push
mov
fs
pusha
enter
testb
mov
js
mov
out
dec
in
fwait
shr
call
xor
or
add
dec
popa
push
push
mov
imul
xchg
es
aaa
fistps
inc
pop
cli
cmp
mov
pushf
rolb
xchg
dec
imul
lret
inc
adc
negb
pop
xchg
int3
push
jne
mov
cmp
push
push
imul
xor
fcmovne
ret
push
dec
out
pushf
lahf
inc
xor
dec
inc
mov
out
and
pop
aas
and
cmp
loopne
pusha
cmc
push
jp
xchg
addr16
call
xchg
mov
in
jns
arpl
movsb
push
sub
or
aas
popf
fsubl
call
adc
je
or
pop
mov
lods
push
xor
aad
xor
dec
mov
mov
repz
adc
or
pop
arpl
pusha
stc
sub
adc
mov
sub
mov
push
dec
fcmovb
dec
in
lods
pusha
adc
cmp
shlb
in
and
sub
push
dec
ja
pop
mov
jmp
mov
and
out
aas
lahf
jmp
inc
adc
js
or
test
aad
and
adc
lods
sbb
dec
cwtl
or
dec
dec
push
pop
ret
inc
popa
pop
xor
imul
or
stos
xor
or
adc
or
and
pop
loope
or
lock
and
hlt
mov
js
jbe
pop
xchg
call
sbb
ljmp
aad
test
sbb
or
and
cwtl
or
das
xor
lea
or
and
and
jb
or
movsb
xor
cmp
push
xor
cmp
push
aam
enter
lods
mov
xchg
jl
adc
es
out
cltd
dec
inc
imul
daa
dec
dec
adc
xchg
mov
adc
adc
pop
mov
je
je
lret
inc
inc
sbb
leave
in
or
jne
fs
dec
loopne
push
xchg
cmpsb
and
or
lcall
int
xor
xchg
adc
nop
push
nop
jge
push
or
dec
cmp
jnp
mov
mov
movsb
jae
push
inc
adc
pop
mov
popa
sbb
push
pop
xor
xor
mov
adc
sar
mov
and
jne
lods
sbb
cmpsb
cmp
sbb
sub
sbb
sub
xor
cmp
addl
and
adc
loopne
dec
pop
xor
mov
insl
sbb
js
cmpsb
sub
or
lahf
and
int
scas
cmp
pop
cmp
or
sbb
adc
repnz
sbb
jno
aam
mov
dec
jne
insb
fs
adc
adc
lods
push
test
xchg
call
cltd
xor
jp
lods
sbb
adc
dec
cltd
ja
in
aaa
lock
jne
mov
andb
adc
xchg
and
loope
sub
sbb
push
outsl
sbbb
icebp
outsl
cltd
cltd
loop
sbb
and
rorb
lods
dec
add
inc
dec
xor
mov
jo
mov
mov
push
add
push
cmp
xor
xor
je
std
scas
xchg
mov
xor
sar
in
scas
cmpb
insl
cmpsl
pop
add
inc
push
mov
xchg
push
rcll
out
dec
leave
je
rorb
cmp
aas
xlat
rorl
cmp
sub
or
add
push
mov
sub
aas
sbb
sub
xchg
add
scas
push
and
loope
add
stc
pop
inc
or
loop
cmpsb
je
adc
mov
lods
leave
and
and
imul
lahf
dec
cmp
or
outsb
fldcw
push
movsb
repnz
jae
dec
pop
cmp
nop
xchg
sbb
outsl
mov
xchg
call
mov
or
and
and
cmp
cmp
cmc
inc
cmp
ja
das
adc
int
cmp
lcall
jmp
mov
ss
lds
gs
pusha
push
dec
inc
jno
enter
pop
loop
fsubr
ja
movsb
adc
xor
inc
inc
das
or
pop
inc
outsb
jbe
out
ljmp
ja
cmova
jb
push
dec
push
cltd
sti
dec
cmp
sbb
and
pusha
adcb
test
xchg
push
icebp
daa
add
dec
mov
test
in
addr16
sbb
push
cld
or
push
mov
shl
int
push
push
dec
adc
outsb
adc
push
push
and
mov
inc
mov
push
mov
faddl
sub
and
dec
xor
add
push
cmc
mov
movsl
and
or
shrb
dec
push
cmpsb
sbb
xor
pop
xor
xor
adc
xchg
ret
inc
sbb
adc
push
dec
inc
inc
inc
lock
flds
fs
lahf
adc
bound
adc
pop
mov
ret
je
pop
sub
lcall
test
fs
adc
inc
dec
and
mov
inc
imul
cmp
outsl
outsl
jp
bound
xor
add
adcl
xchg
cmpsl
push
adc
sub
cmp
cmp
adc
dec
lock
xchg
and
cmp
daa
and
out
hlt
int3
fcmovb
clc
hlt
push
jae
nop
xor
adc
cmp
inc
aas
ljmp
js
sbb
mov
dec
arpl
dec
imul
pop
pop
imul
ds
sub
adc
je
fs
inc
or
mov
jo
jg
cmp
or
scas
hlt
mov
shl
cwtl
jle
jbe
outsb
or
lods
nop
les
mov
dec
or
in
push
shrl
inc
shrl
pushf
mov
jo
cwtl
in
sub
test
je
xor
rolb
pop
adc
dec
sti
inc
lcall
xor
test
jo
inc
inc
dec
jbe
mov
in
pop
nop
arpl
shr
out
scas
push
hlt
or
xchg
ret
ja
xor
xchg
xchg
pusha
aam
bound
jl
adc
dec
and
imul
push
or
adc
xchg
sub
notl
adc
mov
clc
pop
dec
xchg
sub
ss
xchg
gs
and
int3
sub
sub
movsb
les
lods
cltd
inc
cmc
push
cmp
mov
adc
mov
test
mov
or
adc
xchg
loop
adc
or
enter
adc
inc
dec
pushf
leave
jp
cmpsb
and
sar
imul
jmp
xor
dec
jle
push
push
push
pop
fnstenv
xor
push
mov
insb
addr16
xchg
and
setne
in
and
or
ret
or
adc
stos
packsswb
xor
inc
adc
andl
mov
dec
mov
js
inc
outsl
bound
push
sub
add
adc
push
outsl
xorb
and
cmpsb
imul
add
loop
cltd
mov
sub
inc
jb
inc
aam
sub
pop
movsb
lods
jae
pushf
jns
addb
mov
rcrb
adcb
add
push
sub
add
pop
jnp
xor
push
dec
insl
dec
pop
inc
shll
or
mov
popf
cltd
cmp
inc
scas
dec
into
cmp
push
jns
lods
jne
das
push
or
or
pop
jae
dec
sbbl
adc
xchg
les
mov
add
adc
mov
outsl
sub
xchg
js
hlt
xor
sbb
insb
add
jo
push
outsb
xchg
pusha
mov
mov
adc
mov
insb
and
xchg
stc
xor
jl
inc
jno
mov
flds
fsub
mov
fs
icebp
test
sbb
xor
fmull
jo
sbb
dec
cmp
xor
mov
cmp
xchg
and
sbb
sub
mov
pushf
cs
hlt
mov
popf
gs
inc
xchg
jbe
lods
gs
push
jmp
xor
fcmovne
dec
xchg
jmp
lahf
stos
in
out
nop
pop
pop
imul
mov
sub
fcompl
pop
pusha
fwait
jl
scas
push
and
dec
jecxz
dec
adc
loop
inc
xor
fsubrs
xchg
stos
inc
sub
adc
sbb
stos
sub
push
pop
adc
stos
sub
sub
adc
jne
inc
push
add
xor
sub
int
xlat
sub
test
add
scas
xchg
lock
inc
mov
adc
and
dec
mov
test
mov
mov
andb
push
inc
dec
inc
mov
adc
and
dec
and
adc
and
lock
dec
loopne
fsubs
int3
inc
sarb
pushf
dec
nop
xchg
mov
jl
je
mov
and
dec
dec
xchg
inc
and
inc
xor
mov
adc
or
clc
and
or
mov
adc
and
dec
mov
movsb
and
adc
push
and
xor
sbb
xchg
or
clc
and
shll
enter
shlb
rolb
mov
dec
adcb
dec
mov
xor
sub
and
or
mov
and
shll
or
xchg
shlb
enter
mov
dec
nop
xchg
mov
addb
adc
dec
dec
xchg
cmp
xor
sub
mov
or
add
cld
and
hlt
xchg
in
and
inc
mov
adc
and
dec
lods
xchg
movsb
and
adc
jo
push
inc
push
and
xor
sub
and
sbb
adc
or
add
cld
pop
stc
dec
mov
jl
in
or
dec
mov
inc
cmpb
adc
push
dec
dec
xchg
inc
and
and
mov
or
adc
clc
push
and
inc
in
mov
adc
and
dec
mov
lods
and
mov
andb
insb
xchg
pusha
and
dec
inc
mov
adc
and
dec
sbb
sbb
push
or
mov
movsb
xchg
pushf
and
adc
dec
fs
pop
and
and
xor
mov
sbb
adc
mov
in
mov
adc
and
dec
rclb
mov
pushf
and
dec
mov
je
mov
and
dec
dec
xchg
inc
and
dec
or
call
and
dec
mov
inc
mov
test
dec
je
insb
and
pop
dec
mov
xor
sub
and
sbb
adc
or
mov
sbb
in
adc
and
dec
rclb
mov
pushf
and
dec
mov
je
mov
push
and
dec
cmp
xor
sub
and
mov
or
add
cld
sbb
lock
call
int3
mov
adc
pushf
and
adc
dec
pusha
xchg
pop
and
inc
cmp
sbb
adc
or
mov
sbb
fmuls
xchg
enter
mov
mov
mov
pusha
pop
mov
and
dec
xor
adc
mov
xchg
in
fadds
mov
mov
inc
test
adc
dec
pop
xchg
push
and
cmp
and
xchg
or
hlt
push
sub
dec
rclb
lods
mov
and
dec
jl
js
je
insb
mov
push
and
dec
cmp
xor
and
sbb
mov
pop
or
sub
fmuls
mov
and
adc
dec
fs
pop
and
dec
cmp
xor
sub
dec
adc
or
add
cld
xor
dec
aam
int3
and
inc
mov
mov
xchg
mov
addb
push
dec
push
xchg
dec
and
cmp
mov
adc
adc
cld
adc
shrb
fmull
mov
and
test
jl
je
insb
xchg
and
dec
mov
xor
sub
sub
adc
cld
adc
loope
in
fsubl
dec
enter
mov
pushf
adc
je
push
push
adc
dec
xor
sbb
mov
add
cld
adc
dec
in
xchg
in
faddl
mov
adc
movsb
and
adc
dec
push
xchg
dec
and
cmp
mov
adc
and
dec
or
add
clc
adc
lock
call
int3
and
dec
mov
inc
movsb
pushf
mov
js
je
insb
inc
fs
mov
dec
and
dec
xor
sub
and
sbb
mov
add
clc
pcmpeqb
mov
pop
and
pop
enter
das
xchg
or
and
adc
dec
push
xchg
dec
and
xor
adc
or
in
mov
adc
and
dec
int3
xchg
les
mov
movsb
adc
xchg
andb
inc
push
inc
and
dec
xor
sub
and
sbb
mov
clc
or
dec
loopne
fsubs
int3
inc
sarb
cwtl
dec
mov
insb
mov
push
and
dec
cmp
xor
sub
mov
or
adc
hlt
or
in
inc
loopne
mov
adc
and
dec
lods
xchg
movsb
and
adcb
and
dec
fs
pop
and
inc
cmp
xor
sub
dec
sbb
or
loopne
fcoms
mov
pushf
and
dec
mov
insb
pusha
mov
and
dec
cmp
sbb
mov
pop
or
das
adc
pop
and
or
mov
mov
dec
js
jo
push
pop
adc
dec
xor
sub
and
mov
adc
cld
or
dec
in
xchg
in
fadds
mov
movsb
xchg
pushf
and
adc
dec
push
xchg
dec
and
cmp
mov
sbb
pop
and
hlt
or
mov
adc
and
dec
mov
test
mov
test
jl
jo
fs
pop
and
inc
mov
xor
sub
and
sbb
adc
inc
pop
lock
adc
and
dec
rclb
mov
pushf
and
dec
mov
je
mov
and
dec
dec
xchg
inc
and
inc
xor
adc
or
add
cld
push
or
xchg
in
and
inc
mov
adc
and
dec
mov
test
mov
js
jo
push
and
dec
cmp
xor
sub
and
sbb
adc
or
adc
add
dec
in
fsubl
fadds
mov
dec
mov
inc
mov
and
dec
pop
xchg
push
and
inc
cmp
sbb
xchg
add
cld
shl
call
dec
enter
mov
movsb
pushf
mov
je
insb
and
push
mov
and
dec
cmp
sbb
mov
clc
mov
add
lock
inc
loopne
mov
adc
and
dec
lods
xchg
mov
mov
jo
push
inc
dec
cmp
xor
sub
and
sbb
adc
or
add
inc
add
mov
adc
and
dec
rclb
mov
mov
dec
test
push
push
and
dec
xor
sub
and
mov
adc
add
lock
dec
fcoml
mov
xchg
and
dec
adcb
pop
mov
dec
and
dec
cmp
sbb
or
or
mov
adc
and
dec
les
test
mov
jl
je
push
dec
adc
xor
sub
and
sbb
adc
mov
loopne
in
fcoml
les
mov
and
adc
dec
dec
xchg
inc
and
xor
mov
sbb
adc
or
jmp
dec
int3
xchg
les
mov
mov
dec
test
fs
mov
cmp
xor
sub
and
adc
or
inc
std
lock
adc
and
dec
int3
xchg
les
mov
mov
dec
mov
insb
pusha
mov
push
and
dec
inc
xchg
cmp
xor
mov
adc
cld
sbb
hlt
and
inc
in
mov
adc
and
dec
mov
inc
pushf
xchg
mov
je
insb
and
push
mov
and
dec
cmp
sbb
mov
add
in
sti
stc
shrb
loopne
pop
jns
je
xchg
imul
repz
adc
out
leave
adc
rcr
cmp
and
cmp
aam
js
loopew
mov
or
ja
data16
mov
cmp
iret
test
sbb
push
imul
sti
pushf
or
or
jbe
or
test
outsb
sbb
je
add
adc
je
mov
cmp
adc
lcall
data16
mov
sub
push
jns
adc
jne
fs
enter
push
push
sarb
fnstenv
adc
or
or
xchg
xchg
adc
mov
je
or
fbstp
aaa
adc
ljmp
mov
es
outsl
push
sbb
aam
cmp
outsb
and
ret
sbb
or
ss
std
loope
push
and
hlt
jb
int
jae
loop
push
std
mov
das
or
push
push
dec
xchg
jle
mov
fucomip
ret
push
push
adc
incb
ret
lea
insb
mov
insb
stos
repz
ss
jecxz
xor
ss
adc
adc
imul
adc
jg
push
push
lds
push
or
inc
test
rcll
or
shl
push
jl
inc
ds
push
cmpsb
dec
fisubs
es
dec
aam
xchg
in
gs
sbb
xchg
mov
je
mov
mov
or
xchg
jbe
sub
jmp
sub
adc
push
movups
imul
aad
and
and
add
push
jp
and
jae
fnstcw
inc
mov
and
sbb
inc
cmp
les
xor
cwtl
push
push
jp
jge
jb
aad
cltd
popa
aaa
adc
or
imul
sarl
push
or
fs
xor
outsl
jbe
sub
test
adc
icebp
outsl
les
pop
pusha
dec
jns
movsb
adc
insb
stc
dec
adc
xchg
bound
sub
pop
xor
push
cmpb
or
xchg
sub
mov
or
xchg
pop
jo
insb
aaa
rorl
hlt
xlat
sbb
in
adc
or
jp
outsl
jne
or
and
xchg
hlt
imul
loope
stos
ret
test
mov
shlb
or
in
pushf
mov
jl
add
test
and
insb
insb
icebp
mov
and
enter
fimuls
aam
sub
adc
loope
cmpsl
adc
ret
jo
xor
popa
dec
int
jbe
repz
rol
mov
test
xchg
loope
jp
sbb
dec
lock
insl
mov
adc
int
or
lods
xchg
sub
adc
je
xor
iret
xchg
pop
or
repz
push
xchg
jbe
xchg
mov
sbb
pop
pushw
fdivs
adc
sahf
pop
and
sub
mov
imul
sub
or
or
push
jb
push
dec
sub
and
subl
imul
adc
or
data16
adc
bound
fs
lret
fwait
jge
adc
lcall
pop
mov
xor
lahf
jns
gs
out
arpl
mov
ds
repz
push
arpl
lea
in
pop
or
push
adc
imul
dec
insb
xchg
sbb
movsb
or
add
je
push
push
imul
and
lods
int
lcall
inc
or
mov
adc
or
mov
cmpsl
adc
insl
mov
arpl
popa
lods
jb
int
jg
mov
mov
or
push
xor
inc
pop
dec
gs
inc
or
mov
imul
push
imul
int
bound
adc
push
xor
xor
dec
mov
xlat
lahf
nop
fcomip
into
je
adc
es
or
xchg
loop
adc
in
adc
aaa
xchg
mov
and
aas
test
aam
mov
xchg
or
rcrl
outsb
pop
adc
cld
clc
movsb
adc
imul
xchg
jae
adc
insl
adc
dec
aad
dec
nop
shll
mov
or
adc
hlt
lds
nop
mov
cld
bound
es
jge
adc
movsl
les
in
jb
adc
loopne
jns
mov
mov
stc
push
or
or
jno
cmpsl
addr16
mov
push
mov
sbb
and
or
popa
popf
sarb
adc
inc
adc
push
outsl
cmp
dec
jns
mov
daa
ja
js
adc
je
adc
or
mov
dec
adc
or
sbb
test
icebp
push
mov
push
sti
inc
mov
dec
mov
js
in
and
inc
inc
or
and
xchg
je
popa
rclb
inc
jae
fisttpl
cmp
jp
fmul
sbb
rcrl
or
nop
mov
ja
or
lret
addr16
adc
andb
or
jbe
sbb
sub
or
mov
loop
or
xchg
xchg
jns
push
mov
out
stc
aaa
jl
aam
dec
sub
dec
jo
xor
ficoml
push
mov
xor
fistps
ret
jno
jg
in
dec
sbb
or
push
xchg
or
xor
stos
pop
xor
mov
and
mov
sub
mov
push
lock
sbb
cmp
lea
adc
inc
mov
push
movsb
xchg
xchg
pop
repz
fwait
xlat
jg
sahf
push
pop
xchg
sub
mov
dec
sub
adc
sub
movsl
sbb
jne
insl
jp
lea
gs
or
test
jo
pop
adc
insb
ficoml
pop
xorl
and
iret
sub
jne
sub
mov
mov
aad
sbb
inc
fwait
inc
pmaxub
mov
es
or
adc
imul
shrb
lcall
mov
js
push
jae
or
mov
pop
sbb
jb
jp
sbb
and
sub
int3
inc
or
shlb
mov
xchg
sbb
inc
fdivrl
adc
inc
adc
add
push
fs
sbb
je
cmpl
sbb
roll
jnp
adc
mov
sbb
mov
data16
push
mov
inc
int
mov
or
lahf
jecxz
jo
sbb
aaa
push
sbb
jp
outsl
lods
je
inc
jb
jo
out
scas
sti
jle
or
pop
in
adc
jne
adc
mov
dec
mov
je
pop
inc
repz
add
lea
js
adcl
je
shlb
sbb
nop
imull
adc
scas
adc
cmp
out
adc
pop
xor
or
aam
daa
and
jae
aad
push
cmpsb
or
adc
fstps
xor
test
leave
inc
jecxz
sub
das
int
repnz
vphaddwd
dec
adc
jns
daa
fmuls
xor
mov
xor
insl
sbb
ja
push
insb
data16
jmp
rorb
test
or
lret
push
dec
test
adc
popa
xchg
rclb
and
jns
js
test
mov
ret
ds
dec
sbb
xchg
adc
push
dec
fwait
imul
adc
push
adc
push
imul
fs
sbb
mov
data16
ss
inc
push
mov
push
sbb
adc
push
or
int
adc
adc
pusha
cs
lahf
and
adc
adc
push
jne
lret
sub
fsubs
add
daa
cmp
mov
inc
inc
cwtl
sub
mov
movsl
arpl
lcall
and
or
int3
inc
xorl
bound
iret
and
sub
push
and
sbb
fldenv
push
adc
mov
addr16
int
test
pop
adc
pop
or
outsb
inc
in
inc
or
and
or
push
sahf
adc
adc
aam
push
sub
ds
int
adc
cmp
sti
push
xor
push
push
mov
sub
and
sbb
jge
sub
dec
cld
lock
jns
bound
mov
test
cli
test
faddl
sub
and
sub
adc
cmpsb
sub
push
jb
outsl
cmpsb
or
xor
jb
bound
daa
das
sbb
or
sub
ficompl
jg
cmp
mov
das
adc
or
or
jae
inc
push
or
sbb
daa
repz
je
lods
je
stos
adc
pop
testl
mov
mov
mov
inc
cltd
push
xor
add
sub
hlt
xchg
test
jns
or
fs
rcll
arpl
js
cltd
addr16
lret
jle
mov
sti
dec
or
repz
subl
xchg
or
pop
js
je
ljmp
adc
adc
adc
fisttpl
adc
jp
outsl
ja
in
adc
ja
push
jae
bound
ret
ja
mov
sbb
or
adc
in
dec
call
arpl
je
das
popf
push
jp
adcb
jbe
inc
xchg
or
les
not
imul
jo
cmpsb
outsl
inc
or
rorl
sbb
and
bound
or
push
popa
movsb
adc
insl
or
dec
push
int3
or
or
mov
mov
cld
cmc
cwtl
jecxz
push
push
insb
daa
inc
pop
outsb
mov
sbb
gs
or
sbb
sub
jge,pt
adc
and
xchg
adc
dec
pop
dec
adc
xor
rcr
je
and
cmp
jae
xchg
fs
dec
pusha
insl
out
sbb
pushf
xchg
adc
je
xor
jne
sbb
dec
jmp
ss
sbb
push
jb
adc
jle
mov
push
jae
lods
adc
jbe
adcl
sbb
orb
rorl
fs
adc
jns
mov
insb
pop
insb
and
pop
mov
inc
adc
insl
shlb
push
aad
xorl
push
fsts
bound
js
mov
ret
lcall
xchg
das
mov
inc
adc
or
sub
cli
push
adc
xor
lods
outsl
sbb
fdivr
cmp
jo
cmpsb
and
jae
mov
leave
adc
mov
or
pop
fimuls
stos
jne
leave
push
mov
adc
xchg
lcall
test
add
push
and
stos
adc
or
adc
arpl
mov
xor
adc
aas
pop
or
or
andl
push
gs
adc
xor
lods
push
pop
mov
es
jbe
ficomps
scas
or
sub
sbb
les
dec
ror
push
or
adc
addl
lock
mov
push
push
sbb
or
sbb
aas
lods
adc
pusha
sar
ss
adc
mov
or
adc
ss
imulb
lds
mov
sbb
cwtl
mov
sub
adc
les
jns
sahf
sub
sbb
fcmovu
adc
lcall
sbb
sahf
and
fists
out
outsl
or
dec
sbb
imul
ja
push
or
push
push
nop
cmpsb
mov
jns
inc
xor
jne
je
scas
and
ljmp
and
xchg
pop
push
or
dec
es
sbb
pop
xor
fildll
fsubs
mov
sub
mov
int
xchg
adc
pop
adc
loop
inc
fmuls
test
fsts
cmpb
je
sbb
insl
mov
insl
fnsave
das
lea
in
insl
je
mov
inc
or
xor
push
and
call
fwait
xchg
daa
adc
push
in
fcompl
pusha
jb
pop
sbb
push
arpl
push
jae
dec
cmp
add
or
les
lods
shl
test
cmp
push
sbb
jb
enter
sub
pop
mov
imul
sbb
inc
and
mov
pop
leave
sbb
lcall
push
imul
adc
inc
xor
fisttpl
pushf
push
mov
fs
adc
ds
adc
test
push
or
stc
ds
xchg
xor
imulb
jae
mov
insl
adc
js
sub
and
cmpsb
xor
sbb
dec
mov
xchg
in
testl
mov
dec
or
jne
mov
in
gs
fisubrl
std
push
or
or
test
stos
sar
mov
std
xchg
scas
jae
sbb
test
push
pusha
int
add
push
cmp
outsl
test
adc
or
or
or
sbb
pop
cmp
pop
or
adc
jae
pushl
xchg
icebp
add
ljmp
out
insl
adc
test
push
push
mov
mov
insl
adc
mov
jl
adc
repz
sbb
arpl
adc
and
stc
push
sbb
pushf
rol
inc
jne
mov
insl
adc
push
xchg
sub
cwtl
fst
push
or
ljmp
or
or
daa
fs
inc
mov
or
lods
and
dec
adc
mov
inc
dec
les
inc
outsb
jp
or
jmp
pop
popf
in
xchg
adc
outsb
push
stc
push
and
adc
jo
or
jae
dec
stos
rorb
js
pop
outsl
les
mov
cmpsl
sub
pop
jne
jg
sbb
dec
pop
adc
cmpsb
call
iret
insb
fsts
popaw
adc
outsl
stos
adc
xlat
push
dec
jp
xchg
mov
sbb
idiv
inc
or
jge
xchg
jp
sbb
in
repnz
xor
in
daa
mov
push
or
popa
stos
sub
push
aad
fstl
sbb
lods
or
or
cmp
xor
dec
lea
movsl
divl
jge
sub
movsb
je
adc
jns
lahf
daa
loop
adc
outsl
inc
jae
ficoml
push
ljmp
mov
adc
insb
cltd
int3
lods
adc
lods
jae
and
sub
data16
or
or
lods
stc
mov
xor
jae
dec
fs
push
outsb
xchg
jl
sub
outsl
inc
push
or
jo
dec
sbb
lock
hlt
push
adc
lret
retw
daa
jnp
stos
iret
ret
leave
ficomps
cmp
or
sbb
and
or
push
jb
aas
push
mov
xchg
dec
adc
lock
outsb
mov
push
lcall
aaa
xchg
sbb
sarl
aam
insb
push
adc
mov
int
cmp
loop
pop
je
lock
sub
pop
jno
xor
cld
sbb
adc
loopne
pop
adc
cld
lcall
sbb
or
mov
adc
xchg
adc
ret
or
sbb
test
sbbl
test
inc
mov
daa
dec
popa
ret
fsubs
scas
ja
inc
sbb
ja
fmuls
cmp
in
mov
test
addr16
int
add
and
cmp
inc
ficoml
imul
dec
inc
pop
jge
and
xchg
mov
adc
jp
mov
dec
pop
cmp
js
and
sub
insl
adc
aam
dec
adc
and
adc
push
pop
or
mov
cmpsb
leave
ficoml
sbb
mov
adc
movsl
dec
test
jbe
adc
mov
int3
out
orb
test
push
dec
leave
pop
or
ds
dec
adc
cmc
mov
adc
imul
pusha
adc
stc
pop
or
std
push
and
out
cmpsb
xor
mov
sbb
dec
adc
push
mov
stos
sbb
and
push
or
stc
mov
jb
fsubs
sbb
scas
int
popa
cli
pusha
sbb
enter
loope
push
or
mov
sbb
mov
xlat
ret
or
or
les
or
sbb
repz
or
in
lea
or
rcll
call
shll
test
dec
pop
repz
sub
or
rorb
dec
push
inc
or
lahf
jae
adc
pop
sbb
adc
xor
push
push
int
add
mov
repnz
nop
xchg
daa
xchg
xchg
and
adc
pushf
bound
jo
lods
and
je
imul
stos
pop
or
inc
jecxz
imul
push
out
inc
adc
sub
jle
mov
arpl
pop
lea
jmp
xlat
div
in
insl
sbb
cltd
adc
mov
jbe
sbb
jae
js
sbb
addl
push
xor
adc
add
xchg
adc
adc
dec
orl
jp
jns
outsb
xchg
mov
cwtl
mov
adc
xchg
mov
mov
ret
push
or
push
and
pop
inc
sub
jae
pop
ss
push
or
into
test
push
dec
js
test
xchg
or
and
jecxz
or
cmp
adc
outsl
mov
insl
loope
jb
insl
adc
or
std
push
data16
cwtl
jecxz
jb
outsl
ss
adc
sbb
nop
fsts
adc
jl
insl
adc
xchg
scas
imulb
adc
out
adc
rep
xchg
sbb
mov
bound
sbb
scas
cmpsb
outsb
aas
push
or
mov
arpl
or
mov
and
push
jle
dec
push
loopne
sahf
jmp
adc
int
inc
mov
outsl
adc
or
mov
or
sub
cltd
xor
adc
mov
and
cmp
rorb
dec
loop
xchg
or
mov
or
gs
test
mov
or
sub
xchg
xchg
insl
adc
popa
test
mov
adc
cltd
hlt
int
popa
and
or
lret
add
adc
mov
je,pn
dec
adc
pop
jg
mov
adc
sub
and
repz
push
xchg
or
and
add
arpl
or
ds
sbb
or
fwait
popa
pop
jle
movsb
or
out
mov
pusha
xor
adc
imul
and
xchg
arpl
adc
jns
rclb
cmpsl
orl
adc
adc
jecxz
sbb
cmp
and
or
cli
xor
rcr
dec
loopne
adc
push
cmc
jns
adc
stc
push
push
jl
test
or
push
lret
sbb
mov
or
das
jmp
or
push
test
outsl
push
adc
rclb
mov
mov
jbe
xchg
ja
xchg
pop
aad
adc
dec
pop
jns
xchg
or
loopne
stos
rclb
arpl
adc
jns
pop
mov
cmpsb
pop
cmp
xor
inc
jp
testl
adc
lahf
aaa
fs
lods
shlb
js
cmp
mov
out
pop
mov
sub
je
mov
jb
xor
lret
cmp
lahf
or
fs
mov
pop
adc
lcall
inc
int
ds
adc
and
out
push
xchg
js
sbb
or
or
pop
subb
xor
adc
ds
filds
or
fs
cmc
je
sti
pop
adc
or
sbb
das
int3
jne
sbb
addr16
clc
adc
adc
adc
inc
pushf
lock
push
xor
das
mov
dec
cltd
xchg
dec
adc
bound
stc
xor
das
push
repnz
dec
fnstcw
aas
mov
xor
pop
push
or
inc
or
cmp
push
adc
pop
mull
xchg
mov
inc
sbb
mov
dec
xor
push
popa
dec
lcall
fistl
rclb
or
or
dec
jmp
and
add
leave
mov
xorb
inc
loop
cmpsl
sbb
addb
shlb
jg
jne
ret
push
jo
lods
or
or
or
xor
lea
or
jecxz
add
or
lahf
dec
js
inc
and
xor
enter
andl
or
dec
fs
add
xor
add
in
push
cmp
popa
test
je
sar
rcl
add
or
shl
lds
sub
mov
call
ret
icebp
push
and
adc
and
test
push
cmpsb
ret
pop
pop
add
push
add
inc
ljmp
stos
push
push
push
loop
jb
pusha
add
add
test
ret
dec
fs
xor
mov
inc
sub
out
mov
mov
std
cmp
flds
push
lods
adc
push
xor
inc
xchg
pop
aam
xchg
sbb
xorb
xor
pop
add
xchg
dec
cmpl
mov
hlt
add
inc
mov
jmp
pop
mov
enter
push
fwait
sbb
inc
repz
xchg
inc
mov
xor
das
inc
adc
bound
roll
cmp
inc
icebp
popf
aad
shll
or
test
ss
jae
cli
dec
adc
inc
fcoml
mov
sbb
add
pushf
or
xor
pop
loopne
adc
dec
xor
xor
cltd
loop
mov
out
jo
cwtl
out
loopne
and
adc
push
jmp
xchg
xchg
inc
mov
movsl
lcall
out
shll
xlat
lea
enter
imul
xchg
shrb
xchg
aam
sbb
pop
popf
fdivrl
adc
adc
mov
mov
filds
out
push
fldt
outsb
sbb
xchg
ds
repz
lret
add
xchg
lret
iret
data16
gs
shl
popf
es
lock
filds
pop
cwtl
cltd
fwait
sub
push
cltd
pusha
and
pop
adc
push
popf
repz
lret
insl
ss
sbb
jne
adc
inc
add
adc
fbld
fstps
mov
inc
int3
adc
mov
iret
insl
lret
fstps
movsl
cli
aaa
hlt
std
daa
jp
adc
je
jno
xor
enter
and
ret
shlb
ja
pop
jno
jge
cld
fiadds
cld
in
leave
jmp
cli
fdivr
jecxz
shr
mov
in
xor
addr16
lock
fwait
or
std
sar
sti
imull
loopne
out
push
ljmp
test
and
sti
lock
cmc
aad
mov
cli
fs
testl
push
and
outsb
jne
mov
add
adc
push
les
inc
test
stos
and
data16
je
sub
dec
inc
test
dec
inc
sbb
xchg
ja
jbe
dec
out
popf
stc
mov
cmc
sbb
lods
cmp
pop
push
test
movsb
gs
rolb
jl
dec
nop
pop
scas
or
enter
shll
lret
mov
pop
cmp
ljmp
andl
push
std
icebp
outsl
out
das
std
adc
cld
dec
sbb
stos
pop
mov
sahf
les
inc
jg
xchg
jg
cld
push
aad
js
xor
cmp
cmp
fstpt
xchg
icebp
pop
jl
icebp
mov
add
push
push
mov
sub
pop
lea
push
pop
je
sub
jg
or
cld
adc
pusha
nop
push
jne
push
sub
inc
cltd
xor
dec
adc
scas
stc
lcall
xchg
push
mov
call
test
jb
mov
cld
jp
sbb
mov
mov
pop
jb
filds
movsl
jae
pop
fs
xchg
popf
mov
inc
sub
stos
jno
push
sub
push
movsb
dec
xor
lods
imul
inc
add
add
std
push
jg
lcall
in
sub
push
pop
bound
and
push
push
dec
push
dec
fnsave
dec
push
xor
xor
jns
jp
roll
or
arpl
data16
stc
and
jo
push
xor
xor
push
dec
dec
xor
xor
pop
xor
outsl
cs
es
and
out
fists
test
pop
sbb
add
adc
sbb
aam
push
orb
adcb
dec
inc
ljmp
ljmp
add
repnz
add
repz
fdivr
inc
incl
addl
dec
dec
sbbb
push
push
push
push
push
push
pop
pop
add
bound
data16
push
insb
insl
jbe
adc
mov
js
jp
push
rol
mov
das
fs
ret
sub
call
ss
jecxz
nopl
adc
jbe
push
lret
adc
and
xchg
and
mov
sbb
fcomi
adc
add
push
mov
fadd
mov
or
xor
push
add
push
call
mov
pop
pop
pop
clc
loopne
xor
and
inc
and
or
pop
jl
inc
cmp
je
jo
dec
adc
xor
lock
mov
and
les
jl
ret
aas
shlb
cltd
mov
mov
in
mov
add
inc
jmp
movd
fs
loopne
popa
ret
pusha
mov
pop
mov
repnz
adc
sar
sbb
or
jp
jp
jns
testb
icebp
adc
dec
lock
add
or
ss
sbb
pop
sahf
outsb
push
sub
add
cld
insb
and
sub
inc
cmp
push
add
sbb
pop
js
por
cmp
xor
add
xchg
cld
lods
shl
je
sarl
or
cmp
jne
fisttpll
jbe
xor
adc
mov
inc
fnsave
repnz
adc
push
repnz
cld
call
jl
out
in
add
cs
sbb
mov
add
inc
push
and
jne
roll
popa
cmp
mov
ret
pop
mov
js
pshufw
or
push
or
xor
push
jl
push
mulb
jmp
repnz
dec
into
jb
add
jmp
call
aas
out
push
pop
sub
add
sbb
or
add
adc
push
nop
xchg
adc
pusha
fildll
jmp
jl
push
outsl
das
fisubrs
xchg
sbb
adc
mov
fbld
test
dec
push
adc
lret
dec
pop
add
sub
sbb
push
or
adc
fs
or
rclb
add
add
add
mov
rorb
test
add
mov
and
call
dec
pusha
add
and
add
daa
ljmp
movsb
mov
std
int3
inc
fs
mov
fldl
scas
je
xchg
shlb
or
sbb
adc
adc
xchg
icebp
adc
dec
into
adc
push
add
lods
sub
or
xor
or
or
pusha
loopne
orl
sub
dec
int3
mov
sub
cmpsb
sbb
add
shlb
add
or
adc
push
lds
sub
mov
fldenv
movsb
jl
xchg
stos
hlt
adc
pop
and
nop
inc
inc
and
add
in
inc
dec
mov
and
faddl
and
pusha
adc
add
inc
out
or
lods
movsb
xchg
adc
xor
js
or
mov
sbb
jo
cwtl
xchg
in
add
adc
xchg
and
adc
pop
leave
sbbb
xchg
pop
sbb
or
xor
nop
cmp
daa
loopne
add
jmp
icebp
mov
jp
add
xor
pusha
sub
adc
rorl
lods
or
in
sub
insl
sub
cltd
subb
dec
mov
daa
push
or
movsb
pop
mov
add
jl
movsl
or
or
and
xor
sbb
loopne
loopne
lods
js
and
sub
sub
and
dec
addb
or
xor
push
jg
cmp
add
add
adc
add
lea
mov
jl
mov
ja
cmp
fwait
cmp
scas
dec
jmp
xor
pop
push
ja
inc
jo
xchg
gs
sub
fs
fs
mov
scas
fldz
inc
je
hlt
pop
addl
shrl
jmp
cld
loop
inc
je
and
xchg
inc
jle
push
lahf
cmp
das
xchg
scas
add
pop
cmp
hlt
test
mov
xor
cmp
out
shrb
add
push
ljmp
mov
inc
idivl
js
lock
mov
add
rolb
xchg
mov
adc
pop
sub
mov
iret
call
rcll
add
mov
mov
fnsave
loopne
shrl
inc
in
sub
lock
ds
xorb
xchg
ss
cmp
fldt
je
xchg
add
or
mov
loopne
dec
sbb
nop
push
clc
ss
push
push
pop
mov
add
lret
flds
cmp
out
loope
add
pop
mov
sub
add
push
push
and
xchg
fmuls
cmp
xor
xor
add
loop
pop
jecxz
je
call
cltd
adc
xchg
inc
inc
cli
incl
stc
ss
adc
lods
lds
loopne
cmpl
imul
loopne
into
add
cmp
mov
add
dec
das
jmp
loopne
push
shlb
or
stos
rorb
out
pop
inc
add
xchg
test
pop
add
xchg
sub
sbb
lock
add
pop
sbb
pop
push
int
push
sbb
or
lahf
mov
push
dec
push
xor
cmpsb
xor
add
sbb
mov
jp
adc
dec
xor
jo
roll
adc
inc
or
or
bound
jle
adc
arpl
or
jecxz
imul
sub
bound
adc
or
adc
mov
xor
sbb
pmaxub
add
pshufw
add
leave
rcr
xor
out
xor
pop
inc
xor
pop
sub
popa
add
inc
bound
stos
cmp
mov
add
stc
inc
add
add
mov
push
add
add
sub
push
push
sub
dec
add
or
imul
repnz
insb
sub
mov
jmp
or
insl
lret
mov
jnp
and
xorl
cmpb
mov
mov
xorb
shll
sete
inc
in
pop
xchg
nop
mov
repz
sbb
jae
lea
scas
mov
loope
add
xor
xchg
lds
lret
add
hlt
push
movsb
std
arpl
or
add
inc
lcall
not
je
mov
cmp
xchg
getsec
nop
scas
mov
mov
ljmp
push
add
xchg
jnp
mov
push
lock
lcall
popf
mov
add
mov
mov
push
mov
fwait
mov
mov
push
sbb
psadbw
add
popf
mov
outsl
nop
es
out
insb
pcmpeqb
lahf
add
sub
xlat
pushf
lea
mov
pusha
mov
pop
push
shl
or
mov
push
ljmp
mov
das
out
call
bound
daa
cmp
adc
add
pop
cmc
lock
adc
mov
mov
xchg
sub
adc
xor
sbb
inc
mov
sbbl
or
dec
lcall
fwait
push
shrb
std
ret
sbb
cmp
jns
dec
pop
mov
sarl
inc
icebp
xor
mov
lea
mov
mov
scas
and
xchg
inc
ret
cmp
lahf
int3
dec
xchg
mov
push
out
outsb
fnstenv
xlat
mov
xchg
push
decl
push
cmp
xor
xor
into
rclb
xchg
mov
inc
add
xor
sub
jl
pop
sbb
xchg
xor
out
and
xor
pop
ja
jb
cmpsl
xor
xor
fimuls
xor
xor
pop
addr16
call
imul
lahf
xor
xor
std
lock
add
dec
inc
push
pop
ljmp
push
push
inc
push
je
dec
xchg
jle
sti
das
std
and
out
lret
mov
cltd
sbb
add
dec
sub
pop
pop
sub
sub
jl
loope
pop
leave
xchg
dec
push
and
jbe
gs
shr
cmp
inc
push
push
sub
test
mov
cs
add
inc
cmp
in
test
out
and
adc
push
push
jo
dec
xor
push
gs
xor
push
int3
lret
clc
daa
adc
inc
in
out
sbb
pop
dec
sbb
leave
push
mov
or
loop
popf
push
push
sbb
jno
jmp
inc
fldl
dec
or
in
sub
xor
sti
jns
into
cs
dec
pop
ss
lods
movzwl
sbb
mull
outsb
cmpsl
jmp
test
inc
xchg
mov
xor
test
dec
ss
stos
cmp
insl
jns
inc
divps
call
mov
ja
repz
arpl
sub
adc
mov
adcl
xlat
cmp
or
xor
pushl
jl
stos
aas
cld
mov
cmpsl
inc
adc
enter
inc
scas
and
push
push
sub
into
daa
inc
iret
push
inc
std
ljmp
push
and
movsb
std
sub
mov
bndldx
add
imul
cs
es
jmp
fdivrl
jae
push
sbb
add
or
dec
fldl
sarl
mov
jnp
push
pop
aam
cmp
out
gs
lahf
sbb
shrl
pop
cmp
and
xchg
push
and
enter
mov
push
dec
gs
xchg
or
inc
jge
mov
imul
dec
stos
jge
jbe
out
pop
scas
call
imul
dec
push
cmpb
cmp
ds
sub
das
inc
sub
ficoms
inc
dec
inc
pop
or
or
push
dec
dec
imul
jl
adc
gs
sub
fnsave
xchg
movaps
dec
mov
xchg
push
dec
cmc
icebp
dec
inc
xchg
adc
xchg
inc
mov
mov
jmp
jnp
loopne
pop
ret
lret
ret
imul
push
mov
out
push
adc
mov
es
push
cmp
xchg
in
mov
enter
ret
jae
stos
sub
sub
mov
cmp
scas
mov
insl
adc
cmpsl
aas
inc
dec
adc
mov
sub
xor
sub
sahf
xor
and
push
cmp
mov
xchg
jg
jecxz
test
or
fs
aam
test
cltd
cmp
in
lods
ret
push
stos
lods
rcrb
daa
les
stos
daa
push
js
lods
loopne
mov
xor
push
push
push
bound
mov
mov
push
and
cmp
movsb
mov
inc
inc
dec
jnp
in
dec
aas
dec
daa
aaa
fiaddl
dec
loop
jge
dec
push
xchg
xor
cmpsb
push
jb
or
jo
sbb
sbb
in
or
ja
je
mov
ss
repz
dec
mov
push
ss
in
scas
cld
lret
lds
cmpsl
rcrl
sbb
push
inc
push
sti
cmp
cmp
aam
mov
test
out
test
imul
subb
mov
rcll
repnz
mov
cmp
cltd
sub
aas
fistl
mov
test
push
xor
test
xor
or
mov
sarb
push
add
das
inc
push
out
mov
push
push
dec
or
push
aam
test
nop
clc
scas
dec
movsb
std
cmp
or
scas
mov
movsb
sahf
arpl
mov
inc
push
xchg
je
dec
sbb
jge
push
outsb
mov
mov
mov
jae
outsl
mov
pop
sahf
ret
arpl
out
popf
jl
jbe
cmp
push
and
mov
inc
inc
xchg
jo
jg
cmp
and
xchg
icebp
std
inc
dec
stos
lods
inc
arpl
popf
fdivl
inc
add
insb
test
push
jo
mov
sub
jg
inc
cmpsb
jp
inc
jb
test
mov
push
push
jno
mov
mov
dec
aam
jnp
xchg
and
insb
stc
xchg
je
pop
xor
stos
sub
jnp
inc
cmp
outsb
jg
jbe
dec
inc
or
lds
push
sbb
jb
into
adc
mov
repz
jp
imul
mov
cmp
js
bound
pop
mov
pop
mov
decb
subb
out
sub
cmpsl
cmp
dec
dec
pop
dec
inc
mov
popf
adc
add
ds
in
push
insb
jle
cmc
mov
insl
stos
test
repz
dec
dec
outsb
scas
pop
xorl
add
sar
adc
push
ret
ljmp
lcall
sub
cs
sbb
add
cmp
loope
lds
addr16
inc
push
test
popl
mov
shlb
nop
xchg
jp
mov
les
inc
pop
or
stos
andb
sub
sub
jnp
mov
jns
jne
in
in
xor
jp
mov
add
xor
jg
nop
cmpl
adc
lods
jae
xor
popa
orl
xchg
mov
push
incb
inc
xor
and
and
stos
sbb
cmp
cmp
mov
gs
std
push
push
mov
lret
es
loopne
fsubl
jb
push
push
in
push
dec
sbb
rorb
xor
jne
mov
fsubrl
fbstp
fs
lret
icebp
xor
cmpsl
mov
mov
cmp
mov
repz
bound
adc
or
adc
add
push
inc
pop
mov
adc
inc
xor
cltd
add
or
xchg
add
ds
pop
cltd
add
or
xchg
add
xor
jne
or
xchg
add
ds
rolb
cltd
add
or
xchg
add
ds
pop
cltd
add
lods
xor
pop
pop
xchg
add
lahf
mov
adc
popf
loope
shlb
les
sbb
xor
add
insb
add
sbb
cmpsb
add
add
adc
xor
insb
add
sbb
cmpsb
add
add
insb
add
sbb
cmpsb
add
add
adc
cmp
add
loope
cmp
adc
xor
add
loope
mov
xor
jae
sub
cmp
mov
xchg
pop
mov
pop
scas
pop
leave
add
clc
sbb
int3
fsubrs
add
push
sahf
out
sbbb
xchg
loope
push
fwait
or
or
call
push
je
xor
fsts
or
movsb
dec
add
outsl
movsl
or
add
rcl
roll
sub
fdivl
add
test
or
push
and
push
fst
or
xchg
or
or
or
or
addr16
or
push
dec
or
or
add
or
or
add
insb
or
cltd
mov
cmp
inc
and
or
or
test
arpl
push
and
or
jae
sahf
jmp
adc
outsb
or
mov
insl
movsl
or
add
or
or
adc
adc
xor
or
mov
aas
enter
mov
adc
dec
pop
lods
pop
lods
lock
push
ds
dec
push
pop
add
xor
sub
mov
pop
rclb
push
push
mov
lret
adc
push
dec
dec
divb
mov
fwait
icebp
ds
stos
pop
into
stos
pop
sub
int3
xchg
inc
jae
sti
pop
pop
sbb
hlt
inc
inc
mov
inc
sti
icebp
dec
in
jne
shrw
cmc
gs
cltd
inc
hlt
dec
inc
ds
push
pop
pop
sub
pop
es
sbb
dec
push
xor
int3
sub
mov
leave
push
not
dec
test
pop
leave
stos
pop
jl
mov
sbbl
cmp
mov
pop
mov
gs
into
pushf
ja
adc
fs
adc
js
arpl
ja
adc
push
gs
ja
adc
js
addr16
ja
adc
js
imul
cmp
adc
and
in
stos
out
xchg
sbb
repnz
sub
and
push
test
adc
clc
or
daa
pop
test
sub
push
sbb
xor
out
cltd
scas
cmp
cmp
cmp
pop
jl
xor
or
and
inc
cmp
insb
icebp
xchg
cmp
sbb
and
and
enter
pop
repnz
nop
sub
sub
and
stc
pop
bswap
cmp
daa
pop
nop
pusha
cld
jle
in
aas
and
adc
enter
and
nop
inc
cld
and
in
aas
and
es
sub
sub
das
cld
pop
xchg
cmp
daa
bswap
pusha
jle
jle
and
mov
imul
jbe
and
inc
pop
nop
and
and
and
stc
sub
enter
sub
das
pop
nop
pop
cld
cmp
and
stc
pusha
bswap
jle
inc
and
cs
test
in
and
in
aas
daa
cs
adc
lea
sbb
cs
cmp
push
and
and
jl
and
and
nop
and
inc
sbb
and
nop
and
and
inc
dec
cmp
inc
mov
hlt
clc
and
jne
xor
dec
sbb
push
xchg
jmp
mov
mov
popa
fldt
outsb
jmp
push
push
dec
mov
sbb
sbb
neg
lret
cltd
pop
push
dec
dec
sbb
or
subl
pop
mov
les
lock
pop
test
or
inc
ucomiss
pop
inc
dec
cltd
std
insl
push
movsl
std
add
sub
pop
pop
aam
sub
das
jne
jge
test
ja
in
lahf
aam
imul
and
dec
and
cmpsl
cmp
pop
push
push
pop
ror
and
xchg
je
add
and
enter
shrl
or
or
insb
bound
xor
ss
pop
js
xor
dec
test
arpl
das
mov
cmp
inc
outsl
jg
in
sbb
mov
dec
jl
and
rcrb
test
push
xor
test
push
sub
shrl
imul
push
les
cmp
inc
dec
cli
pop
cld
inc
dec
pop
xor
jb
sub
jne
mov
orl
leave
ds
push
sub
daa
std
cmp
mov
mulb
cltd
ss
or
mov
cmp
adc
aaa
scas
inc
xor
addr16
xor
push
fstpt
xor
sub
shll
mov
add
mov
outsb
out
mov
iret
jmp
xlat
loope
inc
das
sub
inc
sub
scas
xchg
adc
hlt
mov
adc
cmpb
mov
stos
push
out
sbb
adc
leave
addr16
ljmp
gs
cmc
inc
cmp
inc
dec
rcrb
fsubs
dec
mov
insl
and
lods
fsubs
jnp
jo
jle
jp
in
and
imul
and
lock
push
sub
push
sub
dec
sub
mov
mov
inc
xchg
in
mov
dec
xchg
fldt
test
cmpsl
sub
outsl
hlt
push
mov
dec
ficompl
mov
pushf
push
popf
lock
inc
or
lods
cmpsb
jne
pop
xchg
push
xchg
int
sbb
xor
push
mov
inc
test
cmp
pop
xchg
test
data16
imul
dec
sub
and
xorb
cltd
cltd
in
push
sbb
pop
lds
push
stos
jecxz
rolb
inc
mov
roll
jo
cmp
inc
cmp
push
stc
out
xchg
jmp
sahf
shl
and
push
pop
arpl
in
dec
bound
or
fs
sti
inc
jmp
adc
pop
inc
mov
sub
test
xchg
sub
mov
jp
lahf
xor
pop
jnp
cmp
add
aam
pusha
insl
arpl
fidivrl
dec
xor
sub
jne
mov
dec
dec
test
lahf
jg
imul
ret
ja
lahf
fnstenv
cmpsl
cmp
fs
mul
dec
shrb
add
or
mov
cltd
fisubl
int
sub
repz
adc
adc
mov
out
mov
mov
insl
loopne
adc
jne
jmp
mov
aam
ds
out
cmp
xor
movsb
jmp
stos
inc
and
adc
cmp
ja
mov
inc
pop
fstpl
push
cs
xchg
stos
lret
push
mov
inc
pop
dec
sub
add
loope
adc
mov
push
dec
pop
or
bound
fs
xor
das
and
mov
inc
lcall
movsb
mov
inc
aad
sarl
test
dec
mov
dec
ret
and
cld
faddl
popa
sub
bound
push
pushf
subl
cmp
icebp
mov
mov
bound
pop
inc
repz
or
mov
ss
or
sub
repz
inc
pusha
mov
or
adc
xor
dec
inc
in
xor
movsb
fisubrs
pop
lahf
aam
push
pop
dec
pusha
push
mov
xor
cmp
leave
pop
pop
daa
rcl
daa
out
push
sub
and
sub
mov
movsl
lea
sub
jnp
outsl
call
lea
inc
cltd
fcmovnb
aad
and
mov
notb
shlb
mov
ficomps
ljmp
shll
or
in
jnp
cs
push
shl
sub
mov
push
frstor
cmp
loopne
in
aaa
cmpb
arpl
faddl
cli
inc
or
dec
pop
cmc
jp
or
cld
hlt
cmp
mov
jo
mov
pop
xor
dec
jb
push
inc
inc
stos
sahf
call
pop
sub
cld
dec
dec
out
ja
frstor
icebp
insl
call
mov
and
dec
push
js
popf
fdivl
stc
orb
push
leave
inc
xchg
push
mov
push
pop
fists
sub
je
mov
sub
sbb
dec
pop
inc
gs
push
lods
add
inc
pop
dec
ret
int
orb
enter
xchg
sub
add
mov
inc
pop
and
adc
pop
dec
and
and
out
jecxz
dec
out
pop
push
and
dec
jns
mov
pop
test
sbb
mov
mov
cmp
je
adc
xor
inc
dec
sub
pusha
dec
cmp
pushf
xor
sub
das
divl
das
push
or
push
out
mov
or
or
dec
test
sti
and
sub
pop
dec
xor
call
scas
sbb
fwait
inc
or
rcll
int3
sbb
or
les
aam
or
adc
cmpl
or
and
test
sub
lock
and
or
xchg
in
xor
mov
cmp
adc
enter
add
mov
lcall
hlt
sub
lock
sbb
xchg
call
and
dec
fcoms
int3
enter
shlb
mov
inc
mov
test
dec
je
insb
and
push
mov
and
dec
xor
xor
sub
mov
adc
cld
cltd
add
dec
in
xchg
in
fadds
mov
movsb
xchg
cwtl
and
adc
pop
dec
push
xchg
inc
and
xor
mov
sbb
adc
or
call
and
dec
enter
mov
cld
dec
mov
je
mov
pop
and
dec
dec
xchg
inc
and
inc
xor
sbb
or
add
cld
xchg
loope
push
or
mov
adc
and
dec
lods
xchg
mov
mov
push
and
xor
sub
and
sbb
xchg
or
cld
xchg
shll
and
dec
les
lods
movsb
mov
test
push
push
and
dec
inc
xchg
cmp
xor
mov
or
adc
clc
xchg
and
inc
in
mov
adc
and
dec
lods
xchg
mov
pushf
adc
mov
mov
mov
push
xchg
push
and
cmp
mov
sub
dec
adc
add
push
dec
sub
enter
leave
ss
push
sbb
and
movsl
cltd
push
dec
rcll
adc
pop
lcall
adc
inc
add
and
xchg
add
dec
in
xchg
in
fcoml
orb
xor
sub
adc
enter
or
xor
cmp
or
inc
lods
sub
movsb
lret
inc
jno
sbb
mov
je
insb
xchg
and
push
mov
and
dec
xor
and
xchg
loope
xor
xor
loopne
jnp
jns
cmc
jge
adc
js
lret
jnp
sahf
cmp
mov
or
out
stos
xor
adc
sbb
inc
popa
pop
call
out
pop
mov
mov
addr16
sbb
ss
dec
jo
lahf
jle
iret
adc
mov
imul
cld
addr16
add
adc
popa
rorb
push
push
adc
pop
jl
nop
jno
test
inc
push
in
loope
sub
adc
insl
jns
insb
ja
loope
jg
or
jo
push
jb
addr16
mov
sub
mov
pop
jl
cmp
mov
push
jl
imul
ja
pop
gs
sub
mov
icebp
and
jge
adc
push
bound
mov
push
lock
or
sbb
and
adc
bound
insb
sti
repnz
jmp
fwait
jp
dec
sub
add
push
inc
inc
adc
add
jne
ret
xor
andl
inc
xchg
dec
mov
ljmp
jge
lcall
sahf
mov
dec
push
bound
xor
mov
sbb
cmp
loope
gs
xor
test
lods
xchg
xor
icebp
out
pop
imul
sahf
idiv
pop
mov
inc
sub
mov
movsl
add
insl
pushf
xchg
hlt
jne
dec
dec
push
inc
push
pop
nop
inc
enter
cmp
fstl
inc
mov
xor
dec
adc
cltd
push
cmp
out
lcall
jbe
inc
inc
jns
bound
inc
arpl
imul
xor
insl
xor
insb
cmc
mov
xchg
or
cmp
fs
imul
inc
dec
fwait
dec
sbb
arpl
gs
sub
shrb
int
inc
loopne
lds
xor
dec
xchg
lds
jo
orb
rolb
dec
sub
mov
fnstenv
je
dec
int
imul
dec
je
shlb
or
inc
push
test
and
or
push
imul
dec
hlt
data16
xchg
fsub
insb
je
filds
inc
dec
aam
movsb
lahf
push
insl
jns
cltd
dec
dec
dec
dec
push
pop
pop
clc
or
movl
inc
bound
xchg
fidivrl
sub
test
subl
pop
jecxz
clc
push
dec
dec
and
lahf
adc
push
push
xor
shll
data16
mov
das
fidivs
adc
inc
lds
cmp
jp
sbb
inc
outsl
sbb
jne
mov
sbb
and
xor
bound
jmp
dec
shll
jp
sub
shlb
ja
sub
nop
cwtl
dec
xor
mov
push
pop
movsl
and
mov
jge
xchg
adc
jo
push
cli
clc
add
pop
push
stos
mov
push
inc
adc
jae
sbb
xor
lds
push
dec
pop
cli
sub
outsb
jae
xor
test
cld
jne
rclb
xchg
pop
mov
inc
inc
pusha
dec
sub
lret
and
fildll
push
mov
jmp
or
sub
inc
adc
fidivrl
mov
push
mov
pop
inc
or
fimull
dec
fcoms
mov
jae
mov
out
cmpsl
cmp
push
pop
dec
cmp
xor
push
xor
pushf
or
hlt
adc
aaa
push
mov
xchg
leave
arpl
adc
xor
sbb
cmp
xchg
testl
inc
mov
imul
sub
dec
fs
jne
xchg
jl
lea
jnp
jb
leave
fisubrl
inc
js
out
cltd
loopne
jle
mov
inc
cmp
pop
cmpl
pushf
mov
push
mov
bound
fdivs
mov
arpl
jns
pop
and
push
fs
cmp
xchg
or
data16
xchg
push
mov
int
test
ja
fdivr
jb
xor
pop
xchg
mov
jns
cwtl
inc
in
arpl
pop
xor
js
pop
int
pop
pusha
mov
push
rorl
mov
or
inc
and
inc
pop
mov
dec
and
dec
dec
xchg
dec
and
inc
inc
mov
push
and
dec
push
mov
push
sub
sbb
push
adc
js
jp
push
mov
ja
test
and
xor
into
aas
std
cwtl
lcall
ret
std
sbb
cld
cmpb
cmpsb
xor
xor
sub
jnp
dec
pop
push
xor
push
addb
mov
jge
adc
xor
lret
sbb
jmp
push
add
test
shlb
cmp
es
sbb
inc
stos
jns
inc
imul
imul
scas
push
dec
dec
push
pop
push
mov
and
popa
push
into
lret
ret
cmp
fldcw
push
or
gs
inc
stos
xor
cmp
das
hlt
dec
and
push
adc
or
jmp
inc
pop
daa
mov
xchg
imul
bound
and
jno
std
clc
xchg
sti
inc
imul
sub
loopne
push
mov
push
xchg
mov
add
popf
shr
rorl
or
in
inc
in
faddl
and
inc
les
mov
lods
adc
mov
shrb
pusha
push
fs
and
sti
or
insl
and
cmc
rorl
jo
adc
testl
or
das
aad
test
or
stc
push
adc
push
pop
bound
pop
sti
xor
inc
and
sub
int3
sahf
sub
push
lea
loopne
add
into
lock
arpl
xor
xabort
push
push
pop
rcl
and
mov
popa
dec
loope
je
das
fistps
mov
cmp
mov
loop
adc
aam
push
in
sub
arpl
jl
inc
and
jl
adc
aad
mov
clc
das
push
jbe
dec
scas
jmp
dec
test
pop
popa
mov
pop
mov
jbe
push
pop
mov
cmp
mov
mov
push
mov
shll
inc
push
xchg
and
in
xchg
imul
popa
mov
xor
sbb
sbb
push
inc
mov
inc
aam
and
repnz
in
faddl
enter
inc
xchg
stc
push
mov
xchg
inc
mov
push
push
xchg
and
xor
movsb
fucomip
sbb
aad
xor
outsb
hlt
xchg
adc
std
shll
and
lea
fwait
cmpsb
mov
push
jmp
jp
insl
push
sbb
push
inc
mov
loope
stos
mov
out
inc
pop
dec
inc
test
jnp
rcr
pop
mov
mov
dec
mov
into
add
stc
push
cmc
mov
aad
js
xor
pop
rcl
out
movsl
jns
cmpsb
cwtl
inc
stos
xlat
cli
fs
mov
je
fwait
call
iret
test
icebp
sbb
push
ja
push
imul
lock
add
sub
sbb
xchg
sub
sbb
sbb
push
mov
int3
adc
dec
push
xor
outsb
pop
sti
lretw
je
cmp
jb
mov
inc
jbe
inc
cli
out
mov
fcmovnb
jp
xor
xor
adc
xor
ss
cmc
mov
lret
popf
dec
out
xlat
inc
xor
push
xor
push
sbb
add
jbe
or
or
add
mov
or
test
in
je
jne
xor
insl
out
sbb
shll
xchg
fwait
cltd
push
and
add
xchg
sbb
mov
aam
or
je
push
into
cmp
cld
inc
rorl
xor
pushf
int3
cmp
cmpsb
fbld
push
dec
dec
ret
mov
inc
aas
cld
add
lcall
out
xchg
jle
push
adc
lea
cmpsl
lods
inc
adc
int3
pop
loop
dec
adc
cmp
sub
push
dec
aad
xchg
sti
xor
jae
pusha
inc
popa
out
cmp
push
xchg
adc
inc
mov
and
jb
movsb
jb
mov
sbb
xlat
sub
xchg
js
pop
stos
and
xchg
out
jl
cli
daa
das
add
stos
test
iret
push
ja
add
xchg
push
and
mov
or
push
stos
and
cmp
das
and
xchg
es
mov
jo
lahf
out
in
clc
fstl
cs
mov
nop
lcall
addr16
xor
mov
sti
shlb
adc
jp
mov
push
adc
cmp
fldt
in
test
xchg
cmp
dec
sub
cmp
adc
stos
test
dec
imul
call
scas
adc
mov
push
mov
orl
dec
mov
pop
lods
dec
xchg
lret
daa
xchg
in
fidivl
mov
insb
test
out
fstpl
mov
dec
fs
xor
mov
sbb
lods
lahf
push
adc
inc
mov
stos
gs
push
andb
lret
insb
pop
inc
mov
mov
movsl
out
cmpsl
jno
dec
jne
rcr
loope
in
call
sbb
and
iret
pop
or
mov
push
jl
and
jne
addr16
shrb
mov
add
in
push
xor
adc
push
and
sub
negb
test
push
push
lea
lret
insl
ffreep
sub
hlt
daa
pop
je
xor
pop
stos
push
mov
adc
xchg
andb
inc
pusha
push
mov
cmp
xor
xchg
adc
or
cld
stos
inc
lock
aam
enter
imul
outsb
in
jae
imul
xor
sub
movsl
or
push
mov
or
push
or
xchg
loopne
dec
cwtl
jae
pop
push
xor
bound
insb
movsb
ss
push
mov
xor
xchg
mov
push
dec
push
inc
mov
insl
jae
arpl
and
out
int
or
int3
jae
inc
push
inc
nop
addr16
test
arpl
xchg
sub
repnz
sbb
lods
ljmp
fbld
jo
stos
or
xor
pop
xchg
sar
mov
shll
pop
lods
mov
lret
or
ret
mov
lcall
fdiv
jp
sub
call
into
mov
je
sub
push
cmp
in
mov
cld
dec
loop
xchg
test
shr
pusha
nop
aas
inc
inc
sub
xor
std
mov
sub
mov
xchg
cmpsl
push
sub
dec
dec
popf
jae
jb
sti
nop
dec
fisttps
fwait
mov
pop
test
mov
cwtl
or
xchg
cltd
nop
or
pop
add
xor
adc
dec
dec
jne
push
push
ret
call
movsl
sarl
dec
or
xor
pop
xchg
mov
jl
or
cmp
cmp
ss
push
rorb
push
mov
adc
inc
sub
negb
dec
dec
mov
or
scas
jecxz
popa
pop
cs
cmp
sub
xchg
jge
xchg
inc
sub
fcmovu
jns
enter
fmull
jns
dec
shlb
scas
adc
lods
fsubp
js
inc
movsb
sbb
or
cmp
stos
fs
gs
lret
mov
aad
in
mov
in
inc
push
push
mov
push
outsb
icebp
and
jne
mov
and
jb
bound
mov
xor
push
cli
das
jge
movsl
daa
xor
gs
sub
dec
sbbl
push
enter
and
add
je
scas
mov
adc
rol
popa
mov
xchg
out
popa
cmp
aam
xchg
add
ljmp
movsb
push
pusha
mov
test
punpckhbw
sub
jns
ret
and
sbb
mov
inc
jg
imul
inc
rorb
aam
jns
mov
inc
insb
nop
cmp
icebp
xchg
jns
xlat
xlat
pop
pop
push
inc
lods
mov
hlt
shlb
and
jne
jae
push
and
adc
adc
shlb
mov
xor
xor
loop
sub
adc
sbb
sub
in
fs
bound
adc
push
outsl
popa
inc
lret
sbb
das
mov
ja
insl
jne
sbb
sbb
push
xor
lahf
jmp
jl
mov
jne
sub
dec
insb
cmp
insb
jmp
pop
jge
lea
or
push
xchg
iret
add
xor
dec
dec
xor
and
cmp
sbb
sarl
in
int
and
daa
sbb
cs
inc
inc
jne
mov
dec
dec
push
es
pop
inc
sbb
fisubs
inc
xor
scas
mov
pop
adc
scas
push
adc
push
imul
push
aam
pushf
jge
dec
add
jns
adc
mov
in
aam
mov
les
cmc
inc
jnp
gs
cmpsl
in
add
mov
sti
dec
mov
jne
loope
outsl
mov
xchg
stos
bnd
out
into
mov
repz
pop
and
cs
pushf
jb
mov
sti
repnz
pop
repnz
cs
sub
sti
rcrl
ret
shlb
sub
mov
adc
decl
add
outsb
mov
xor
or
sub
sbb
xor
pop
or
add
add
inc
cmp
dec
add
repz
add
loopne
sub
push
adc
or
inc
add
mov
incl
lock
movsl
add
push
push
and
add
adc
add
add
sub
std
or
dec
adcb
nop
test
add
rolb
adcb
cmp
cltd
adc
jp
fcompl
enter
xchg
mov
add
sbb
movsb
add
cmpb
sub
cmpsb
fbld
or
lahf
loopne
addb
sbb
fisubrl
xor
lds
or
jb
and
mov
in
call
nop
sub
or
pop
lret
cmp
pop
cmp
and
jo
fcoms
fsubp
stc
sbb
jle
xchg
or
push
add
and
sbb
and
dec
pop
xchg
or
or
or
cmpsb
cmp
or
dec
pop
adc
cmpsb
add
sbb
sbb
cmpsb
adc
and
push
xor
push
sbb
xor
push
cltd
pusha
pop
dec
jl
cmpsb
sbb
ljmp
jb
lods
push
dec
xor
or
andb
or
dec
fs
dec
sub
in
xor
cmp
and
adc
pop
pusha
or
or
daa
mov
adc
jl
xor
enter
sbb
adc
and
fs
pop
dec
push
adc
and
dec
push
xchg
push
inc
je
aam
pop
iret
inc
push
and
xor
inc
adc
mov
adc
or
sbb
or
adc
adc
add
sbb
or
xchg
hlt
and
inc
in
push
mov
adc
and
dec
and
aam
mov
adc
add
jg
sbb
decl
jb
xorb
add
xor
add
cld
sub
cmovl
xchg
add
call
xor
mov
inc
or
mov
cmp
xchg
inc
xchg
leave
add
sub
dec
sbb
shlb
inc
cld
xchg
adc
mov
sub
mov
and
mov
loopne
loop
push
push
cmp
adc
push
and
enter
mov
nop
inc
jns
mov
jo
cld
inc
fcoml
adc
dec
outsb
and
adc
jb
in
cmc
and
xor
lea
subb
roll
add
subb
repnz
or
inc
and
adc
xorb
xor
icebp
cmp
push
scas
test
push
inc
scas
inc
rclb
pop
push
jge
js
adc
or
push
cmp
lods
xchg
enter
aam
repz
adc
xor
or
insl
inc
xor
cmp
jo
mov
mov
cltd
or
push
das
xchg
or
insb
test
inc
mov
add
or
adc
cmpxchg
adc
push
adc
and
leave
sbb
mov
mov
ret
clc
and
lock
mov
sub
imul
in
mov
dec
sbb
addl
add
add
loopne
mov
adcl
out
cmp
cmpsb
iret
or
jp
outsl
movb
mov
or
mov
mov
cmp
divl
jl
loopne
mov
add
popf
sti
jmp
stos
loopne
mov
int3
repnz
test
adc
stos
clc
scas
ljmp
jmp
aam
not
loope
add
iret
inc
gs
xchg
add
cmpsb
scas
mov
jge
pop
pop
or
addl
in
xchg
cmp
xor
push
mov
lds
pop
jp
add
push
movsl
mov
aaa
popa
sar
mov
fsubs
xchg
clc
repz
mov
subb
add
push
pusha
les
and
add
add
add
jno
or
mov
loopne
cmp
fisttps
xchg
outsb
adc
shrl
mov
shl
add
mov
inc
sbb
lods
lds
cmpsl
out
add
mov
insb
scas
add
jmp
xor
in
xchg
mov
std
into
popa
add
loopne
dec
pop
add
dec
les
clc
xchg
lock
pop
cmp
int
jecxz
scas
loopne
addr16
lods
push
mov
fnstsw
and
aas
loop
cmpl
popa
mov
inc
push
pop
sarl
push
jl
mov
das
add
adc
xchg
ljmp
lods
mov
inc
add
fstl
arpl
int3
add
push
ja
call
add
sbb
and
lods
cmp
mov
cmp
add
xlat
cmp
mov
add
mov
jecxz
cmpsb
add
movb
jne
fildl
cmp
jno
shlb
loopne
out
add
pop
cmp
push
fisubl
xor
push
push
lahf
inc
pop
mov
adc
xor
dec
push
scas
into
imul
rcr
jge
call
out
pop
push
xchg
cmp
add
and
dec
dec
bound
add
adc
pop
ficomps
fldl
fmuls
push
cs
inc
push
gs
in
push
roll
sbb
dec
push
arpl
les
or
cmp
fdivrs
jl
mov
je
dec
inc
fidivl
inc
xchg
pop
test
pop
scas
pop
out
cmp
mov
add
add
add
add
add
add
and
add
xor
add
nop
add
add
add
add
mov
add
lea
lea
xor
call
jmp
pushl
pushl
call
add
add
cmpl
jne
cmpl
je
cmpl
je
call
lea
push
push
push
push
push
call
mov
pop
pushl
push
call
add
mov
mov
jmp
inc
cmpb
jne
inc
mov
call
add
mov
jmp
push
call
test
je
mov
mov
jmp
mov
mov
test
je
xor
push
mov
movl
jmp
pushl
pushl
call
test
je
mov
add
mov
jmp
inc
cmpb
jne
inc
mov
cmpw
je
cmpb
jne
jmp
inc
cmpb
jne
inc
inc
mov
call
add
mov
cmpb
jne
push
push
pushl
call
call
call
popa
jmp
popa
ret
push
push
mov
or
je
mov
mov
sub
add
pop
pop
ret
pusha
mov
or
je
mov
mov
jmp
sub
add
sub
add
add
cmpl
jne
popa
ret
pusha
mov
or
je
mov
mov
mov
cmp
je
add
jmp
mov
mov
mov
add
add
jmp
movzwl
mov
shr
mov
imul
sub
add
add
cmp
jne
sub
mov
add
add
cmp
jb
cmpl
jne
popa
ret
pusha
mov
cmpl
je
add
jmp
add
mov
cltd
jmp
inc
cmpb
je
cmpb
jne
mov
bswap
sub
mov
add
add
sub
inc
dec
cmp
ja
popa
ret
pusha
mov
or
jne
mov
jmp
mov
add
mov
or
je
add
add
mov
or
je
mov
jmp
push
cmpl
je
push
push
pushl
call
pop
add
mov
or
jne
popa
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
cmp
str
sldt
add
add
jb
gs
xor
cs
insb
add
verw
jnp
str
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
or
add
add
inc
add
adc
add
push
add
add
add
inc
add
add
addb
inc
dec
add
mov
add
dec
pop
push
push
cs
push
add
xor
out
or
push
jae
push
dec
or
inc
cmp
dec
gs
ffreep
inc
outsl
outsb
pop
das
arpl
xor
ret
and
xor
push
orb
or
je
jae
mov
adc
sub
inc
in
arpl
xchg
int3
pop
or
or
add
xchg
adc
adc
mov
inc
imul
outsl
push
jns
je
out
or
lock
inc
outsb
jbe
jb
xchg
notb
popa
test
push
lahf
insl
jo
repnz
popa
je
outsb
addr16
pop
movaps
add
push
add
inc
popa
scas
iret
lcall
inc
or
push
popl
arpl
jo
dec
imul
jo
push
pop
punpcklbw
inc
insb
jne
push
push
jecxz
pop
push
dec
mov
dec
dec
mov
push
jb
sbb
dec
or
sarl
fnsave
pop
lcall
push
sbb
dec
inc
dec
and
jo
push
push
or
sbb
jp
test
jecxz
jae
je
and
push
mov
orb
outsw
dec
dec
fs
jl
mov
mov
insb
jb
out
or
gs
push
sbb
inc
push
mov
jns
pop
sbb
inc
dec
adc
pushf
jne
dec
xor
popa
ret
adc
cwtl
add
dec
subl
shlb
push
push
inc
fildll
push
leave
ds
add
and
outsb
jg
dec
fs
dec
popa
cmpsb
inc
mov
pushf
xchg
sub
push
xchg
test
xor
jne
and
das
adc
inc
ret
push
xchg
dec
leave
xchg
push
sub
push
dec
sub
movsl
mov
xor
mov
test
xchg
jo
int
push
ret
iret
dec
pop
cmp
jns
test
rorl
outsl
mov
pusha
arpl
jo
xchg
push
stos
xchg
inc
insb
ss
or
dec
inc
mov
xor
jae
rcll
and
fidivrl
das
push
inc
hlt
jmp
int3
fs
cmp
idivb
cmc
push
loope
movsb
jns,pt
gs
fs
sub
cmpsb
lret
fdivrl
outsb
jae
retw
dec
addb
add
or
inc
jbe
mov
aad
inc
jne
insb
out
and
arpl
dec
pop
mov
cmp
es
lcall
inc
jmp
popf
mov
ljmp
dec
adc
fs
push
insb
inc
push
insl
outsl
shlb
aaa
aas
jae
loopne
std
mov
lret
and
xchg
aam
mov
mov
jne
jns
or
mov
pop
arpl
nop
sbb
adc
push
push
cmp
xor
call
sub
push
dec
movsb
adc
lret
adc
test
into
xor
dec
bound
or
dec
aas
in
addr16
lahf
xor
mov
xor
cwtl
dec
jo
gs
fwait
lds
push
and
lcall
rcr
lret
pop
add
jo
pop
mov
xchg
sub
jo
inc
test
arpl
movsb
cld
shll
mov
cmp
in
dec
frstor
mov
mov
ror
mov
xor
adc
push
movsb
jne
pop
inc
nop
int
push
adc
cmp
iret
in
push
and
pop
xchg
jo
mov
sti
jo
leave
dec
mov
xchg
push
jns
pop
ss
mov
jo
add
add
pusha
nop
popa
popa
cmpb
nop
pusha
jne
push
ret
