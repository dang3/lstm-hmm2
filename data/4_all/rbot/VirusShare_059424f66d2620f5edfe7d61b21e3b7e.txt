call
test
xchg
xchg
xchg
cmp
cli
divb
test
rolb
sti
imul
fidivs
test
rol
lods
fs
sbbl
stos
dec
cmp
push
sbb
xorb
xchg
sbb
xchg
adc
adc
sbb
sbb
sbb
es
clc
sub
push
adcl
out
pop
or
sbb
gs
cld
test
dec
mov
std
and
and
inc
ret
cli
add
adc
leave
dec
add
or
mov
outsb
adc
out
shl
mov
test
popf
jle
fistps
mov
loopne
outsb
into
out
xchg
pop
mov
fprem1
push
jae
jns
mov
cmp
xchg
cmp
leave
ret
hlt
mov
cmp
out
inc
cmp
sbb
bound
aam
or
sub
sub
add
xchg
pop
scas
les
lret
and
push
mov
mov
stos
imulb
mov
push
nop
stos
decl
dec
insl
call
dec
pop
inc
aad
ret
sub
out
sarl
jnp
cld
push
or
scas
cmpsl
push
out
sbb
pop
jmp
iret
sub
nop
leave
jne
cmpsb
pusha
fsubs
cli
dec
stos
out
outsb
fstpt
imul
cltd
push
popa
loop
cmp
in
cwtl
or
inc
pop
xor
test
loope
mov
mov
sbb
hlt
push
jmp
loop
adc
jno
sarl
imul
adc
gs
cld
test
fisubrl
jmp
out
cmp
out
or
testb
in
mov
sub
pop
mov
and
xor
ss
mov
in
jns
or
inc
enter
jnp
xchg
loope
mov
pop
ficoms
mov
jo
add
std
pop
je
ds
test
mov
and
addr16
xchg
pop
hlt
mov
mov
clc
scas
int3
mov
push
pop
clc
and
sbb
cmp
sbb
push
test
movsl
dec
cmp
and
cmpsb
and
jp
cs
ds
jmp
seta
mov
sub
mov
sub
ret
add
lds
into
aas
hlt
bound
into
in
lret
or
loopne
lock
fisubrl
aaa
mov
cmp
icebp
movsb
insl
mov
push
cmp
jo
push
add
cltd
sbb
ljmp
out
les
ljmp
addb
shlb
add
dec
fwait
pop
sub
cmp
or
mov
inc
in
pop
outsb
inc
sti
mov
popa
jno
cmp
pushf
dec
cmc
mov
dec
fldcw
int3
push
push
sbb
jns
push
js
dec
pop
inc
and
xchg
xchg
fdivrp
jb
and
pop
pop
imul
pushf
js
movsb
sub
orb
dec
shr
mov
pushf
dec
adc
mov
sub
stos
xor
movsb
pop
mov
and
push
jbe
inc
imul
inc
or
cmp
addr16
in
scas
lds
daa
push
adc
sub
and
and
sahf
or
cmpsl
and
test
pop
fimull
repnz
cmp
es
cltd
push
sbb
mov
add
lret
popf
adc
das
inc
mov
leave
test
mov
outsb
outsl
les
inc
jno
jl
mov
sub
and
pop
xchg
mov
ret
fisubl
add
or
cmp
imul
jb
push
arpl
inc
sub
push
mov
out
jne
je
xchg
lock
mov
xlat
lds
enter
mov
imull
and
inc
mov
iret
bound
dec
cld
add
and
rcll
pop
pop
imul
sub
test
aam
mov
sti
sbb
mov
movl
adc
mov
push
mov
daa
mov
loopne
pop
fs
mov
hlt
loop,pt
inc
mov
add
push
mov
add
dec
or
loope
push
cwtl
mov
jbe
ljmp
pop
push
and
mov
or
pop
ljmp
dec
dec
jne
es
sub
jns
cmp
mov
mov
jno
and
fistl
fdivs
neg
outsb
scas
rorl
test
jne
jno
or
scas
jnp
inc
cmp
fdivs
mov
clc
mov
dec
mov
xor
rcll
push
and
and
lea
jbe
ret
fmul
mov
bound
push
xchg
inc
fistpll
jno
fsubrl
lret
push
pop
es
xchg
adc
push
jno
pop
clc
cmpsl
mov
mov
push
xor
mov
mov
jge
insl
inc
adc
loopne
aas
adc
fildll
outsb
sbb
jge
bnd
fdivrs
das
in
les
movsl
outsb
inc
inc
mov
xor
xchg
pop
mov
sub
mov
jns
or
enter
je
dec
and
ret
ljmp
mov
sahf
push
jbe
mov
lock
mov
mov
ret
out
mov
test
xorb
inc
xor
mov
pop
sub
into
sbb
jmp
enter
arpl
lret
pusha
cld
dec
movsl
mov
scas
dec
cmp
int3
jge
ret
movsb
cmp
in
cmp
stc
es
rolb
outsb
test
xor
dec
lret
sbb
push
std
and
nop
repz
notb
or
fiaddl
cltd
cwtl
jne
je
mov
loop
xchg
out
sbb
jg
xor
pop
mov
lcall
test
fwait
inc
sub
xchg
lret
insl
pop
cmp
push
bound
xor
cs
popf
or
test
in
push
and
adc
mov
out
dec
rclb
jnp
lahf
pop
mov
in
xchg
sub
shll
push
adc
push
mov
add
xchg
dec
sarl
or
add
sbb
mov
jne
imul
outsl
sbb
mov
aas
insb
mov
je
pop
pop
push
sti
cmp
popf
fnstenv
into
jmp
jle
ds
mov
or
dec
mov
out
mov
pop
fsubr
xchg
insl
icebp
pop
add
stos
pop
xchg
pop
sub
sar
xchg
cmp
pop
mov
je
ds
or
dec
adc
daa
cmp
push
lock
push
jecxz
xor
shll
loopne
jmp
xchg
test
sahf
xor
dec
inc
jbe
in
jns
out
aaa
jbe
mov
xchg
add
fmull
sbb
mov
repnz
mov
add
lret
push
inc
push
in
dec
movsb
dec
add
lods
repz
test
dec
cli
in
or
cmp
fsubr
push
push
pause
and
xchg
push
pop
jmp
aas
mov
add
out
pop
cmp
cmp
xor
push
arpl
sub
jge
outsl
sbb
sub
mov
jg
ret
sarb
dec
fmull
ss
push
jo
mov
out
pop
mov
lahf
push
xor
xchg
sahf
pop
dec
cmp
leave
adc
xchg
mov
and
and
stos
xchg
ret
loopne
lcall
out
dec
loop
imul
mov
ljmp
jo
fistl
jns
push
mov
in
inc
and
inc
sub
and
jmp
test
inc
aad
das
es
scas
es
shr
stos
pop
jmp
pop
mov
push
sbb
je
mov
mov
mov
dec
icebp
add
add
cmp
test
arpl
pop
adcb
mov
arpl
pushf
dec
test
cmp
xorb
fnstenv
mov
add
rolb
das
jl
lds
insl
push
fidivs
pop
xchg
sbb
mov
mov
data16
xchg
jp
sbb
jg
and
jl
inc
push
mov
shll
mov
jge
jo
and
cmp
inc
fimuls
cwtl
in
cmpsb
bswap
mov
jp
mov
pop
mov
or
push
daa
xchg
sbb
movsl
push
push
mov
xorl
mov
arpl
push
stc
jg
stos
pop
test
or
cmp
aad
jmp
rcll
shlb
add
mov
sbb
adc
pop
mov
jecxz
outsb
push
ret
pop
aad
fiaddl
dec
adc
mov
ja
lock
scas
movl
jbe
jg
arpl
cld
outsl
jno
and
mov
scas
shll
lods
mov
sub
fdivs
in
jge
in
into
inc
clc
inc
xchg
test
ljmp
jae
jno
jo
scas
pop
pop
loope
fldt
mov
add
mov
and
push
lret
adc
add
pop
xor
inc
dec
aas
ret
ljmp
movsb
sub
jae
movsl
mov
ja
add
loopne
mov
sub
mov
inc
loopne
stc
pop
xchg
fisubs
insl
mov
sbb
mov
icebp
je
sbb
or
lods
xor
fstpt
jb
repz
or
cmp
adc
add
in
jge
jae
iret
js
outsb
dec
mov
push
mov
sti
fisttpll
xchg
push
bound
test
lret
lods
bound
and
dec
and
pop
sub
jb
imul
push
mov
push
dec
cmpsl
fcomps
jne
pop
mov
mov
mov
lret
test
jp
shll
jg
cwtl
mov
jl
shl
out
subl
repnz
push
stos
bound
fucomi
inc
aad
cmp
sbb
add
out
or
mov
arpl
incb
inc
mov
adc
ss
popf
inc
jbe
js
adc
sbb
rorl
fnstenv
stc
adc
aas
les
and
adc
mov
push
push
adcb
adcb
xor
jle
or
mov
inc
popl
movsb
cmp
lock
pop
pusha
inc
mov
xor
in
cmp
andl
ret
or
sbb
enter
cmpsb
jl
test
out
js
mov
adc
subb
mov
pushf
jnp
mov
add
cmp
mov
push
outsb
pop
adc
das
in
adc
std
fsubrs
mov
fisttps
push
push
xor
push
aam
cli
mov
sub
movsl
loopne
lock
sbb
sub
bound
fstl
out
test
xchg
sbb
mov
jnp
jbe
arpl
lea
or
xorl
call
inc
push
outsl
cmp
adc
push
and
sbb
pop
or
adc
cmp
or
out
iret
add
test
lea
aad
and
inc
mov
cs
out
inc
push
pop
adc
mov
add
out
jp
mov
js
mov
cmpsl
xor
out
std
add
inc
hlt
stc
add
pop
and
mov
dec
insl
shrb
dec
pop
add
mov
inc
push
push
clc
xchg
push
out
aaa
jmp
push
mov
das
and
cmp
rclb
insb
loope
mov
xchg
fs
xchg
xor
xchg
sysenter
rol
loopne
adc
ret
or
data16
cmp
ret
lret
cld
fldcw
sar
adc
jns
dec
push
insb
xchg
fwait
sbb
in
scas
fstpl
incl
pop
test
sub
and
xchg
mov
xchg
or
and
lahf
inc
in
mov
add
in
leave
testb
add
push
inc
xor
aad
test
sbb
sub
xlat
xchg
leave
loopne
cmp
fcoml
enter
sbb
shl
ret
xor
test
insl
mov
daa
loop
sti
testb
adc
xor
mov
sbb
and
pushf
add
cmpsb
test
jge
mov
inc
cmpl
daa
test
es
adc
pop
xorl
call
push
inc
aad
push
bnd
add
imul
mov
daa
ljmp
lcall
cmp
fnstsw
loop
push
icebp
cmp
loopne
outsl
push
xchg
pop
pop
xor
pop
ret
sbb
repnz
andb
add
sub
aam
iret
pushf
outsl
lahf
lods
inc
xor
inc
jp
jnp
xor
scas
ja
jge
push
mov
scas
add
add
xchg
pop
xchg
icebp
fimull
fldl
rcl
sub
data16
jecxz
out
andb
xchg
jns
pop
aam
add
loopne
add
ficompl
insl
and
ficomps
mov
mov
test
mov
out
outsb
jmp
in
push
lods
std
fs
mov
bound
jmp
inc
pop
iret
hlt
push
push
hlt
xor
les
push
push
xor
cmp
fldcw
imul
jecxz
stos
ret
xlat
movsl
or
mov
pop
stos
add
push
inc
xchg
xchg
jne
aam
sub
mov
ljmp
cmp
mov
push
push
data16
shlb
pop
fcomps
pop
gs
cs
je
xorb
loopne
ljmp
xchg
pusha
pushf
inc
into
into
cmp
mov
roll
dec
inc
jns
pop
xchg
mov
iret
arpl
mov
mov
adc
sbb
dec
movsl
jmp
mov
repz
push
clc
xchg
lret
push
filds
mov
mov
std
inc
mov
or
lock
sub
push
xchg
add
xor
inc
divl
add
xor
imul
push
mov
movsl
pop
xor
jle
cltd
pop
mov
jnp
jecxz
jno
pop
sti
scas
mov
pop
cwtl
aaa
add
lahf
cmp
pop
dec
push
or
mov
cmp
movsl
adcl
idivb
lea
testl
out
ret
lret
inc
sub
mov
mov
dec
mov
mov
adc
imul
dec
leave
aam
roll
add
jmp
sbb
jecxz
test
fisubrl
dec
lods
pop
jae
xlat
jne
sbb
out
pusha
adc
inc
or
adc
jne
mov
ja
aad
push
jbe
test
shll
fbld
test
add
fmull
stos
inc
fsubs
jne
stos
inc
movsb
test
mov
xchg
jae
mov
jno
sub
jb
idiv
enter
in
ss
xor
in
cmpb
sbb
or
inc
xlat
or
ss
inc
inc
adc
jl
popf
jo
jo
mov
imul
sbb
stos
lea
out
mov
rcrw
rcll
subb
adc
push
xchg
cmpsl
add
aas
mov
out
adc
loope
xchg
data16
iret
imul
lea
add
pop
imul
mov
aas
data16
push
dec
outsb
bound
xchg
or
scas
in
add
aad
les
inc
push
pop
xchg
push
push
imul
inc
in
rcl
pop
adc
popa
push
mov
and
push
mov
xchg
or
in
addr16
xchg
jbe
push
sub
adc
outsl
fdiv
fisttpl
outsb
ja
push
or
sub
cvtdq2ps
lahf
adc
xor
sub
lea
shll
test
dec
mov
jno
sti
pop
sub
cmpsl
idiv
mov
stos
push
dec
mov
cwtl
filds
sub
sub
add
mov
hlt
pop
pop
das
mov
popa
je
or
lds
inc
mov
outsl
mov
ds
xor
cmpsb
push
xchg
xchg
mov
not
mov
fdivs
inc
mov
jne
dec
or
lods
jb
mov
inc
fisubrl
push
sub
ja
scas
js
jne
int
mov
dec
ret
xor
add
dec
fsubs
mov
fists
and
jg
hlt
push
loopne
popf
and
cmp
sbbb
outsl
testl
dec
jmp
pop
incl
shrl
scas
dec
test
sarb
sub
ret
mov
andl
test
mov
repnz
gs
stos
sbb
push
hlt
aaa
mov
jne
inc
ret
mov
lds
adcb
sub
sbb
insl
jnp
aaa
pop
or
imul
xor
jl
outsl
sbb
stc
mov
flds
pushf
popa
les
into
loope
imull
xchg
cwtl
int
cmp
jnp
push
adc
fildll
psrld
cwtl
loopne
jb
push
xor
iret
xchg
push
movsl
mov
stos
push
and
jp
and
adc
lea
xor
out
lret
push
jnp
std
fcoml
push
cmp
lret
jno
fisubs
and
rol
in
jno
sti
loope
lods
add
das
mov
push
sub
mov
fists
sbb
adc
pop
dec
test
mov
fiadds
fsubs
outsb
push
mov
inc
sub
fmull
push
jns
icebp
sbb
or
test
je
mov
ja
mov
pop
inc
sbb
in
call
mov
and
jns
in
das
mov
cmp
bound
scas
push
adc
jnp
push
or
dec
sub
mov
loop
daa
rorl
pushf
sarb
ljmp
es
jmp
ds
adc
push
lds
mov
mov
push
add
jbe
add
jae
mov
pushf
cmp
mov
aaa
mov
push
sub
xor
insl
pop
or
sub
inc
mov
rclb
sbb
adc
or
std
push
or
ss
shlb
xor
roll
test
add
dec
scas
or
push
loope
xchg
aas
xchg
mov
sub
add
pushf
xor
imul
cmp
pop
loope
push
add
add
pop
popf
rcrb
jmp
aaa
mov
lahf
adc
mov
mov
andb
pop
or
data16
loopne
addr16
cwtl
cwtl
in
jle
cmpsb
cmp
push
xchg
in
add
lcall
jle
jecxz
lds
scas
das
xchg
lds
loope
cmp
clc
and
push
shlb
imulb
jns
inc
aad
cld
loope
mov
pop
mov
adc
add
aaa
jg
mov
rcl
push
lock
cmp
test
aad
jecxz
mov
out
dec
cmpsb
test
jg
out
sbb
nop
push
stc
push
repnz
in
or
repnz
in
and
sub
cmc
add
push
cmc
mov
mov
scas
dec
mov
push
mov
sub
mov
js
iret
scas
psubsw
iret
popa
cwtl
lret
mov
nop
sbb
lea
out
push
pop
pop
or
fcoml
incb
roll
push
pop
push
dec
fs
orb
pop
push
xchg
es
jne
mov
jmp
andl
aam
scas
sub
repnz
push
xchg
sub
insb
out
lods
xor
jns
mov
push
shll
dec
scas
ljmp
cmpb
dec
push
mov
xchg
popf
push
xor
jbe
xchg
xchg
mov
adc
fs
ja
inc
push
fs
rcr
mov
leave
xchg
subb
lahf
cmpsb
adc
lds
data16
es
mov
in
jbe
sub
xor
pop
shll
mov
push
enter
push
mov
adc
pop
and
mov
shlb
dec
ja
in
cmp
xor
inc
mov
sbb
mov
outsl
icebp
ja
cmp
mov
add
dec
les
jns
mov
push
cmp
cld
mov
inc
ficomps
jp
or
loopne
push
adc
mov
cmp
sbb
mov
push
hlt
mov
fwait
dec
jp
jno
cltd
bound
mov
shlb
push
stc
lds
xchg
test
add
jge
cmpsl
icebp
jo
or
enter
call
mov
add
adc
push
test
shl
mov
gs
adc
push
test
or
jns
rcr
xor
lahf
adc
repnz
in
in
push
pop
pushf
enter
out
aam
enter
mov
pusha
dec
mov
ja
popf
push
push
cli
sbb
enter
mov
inc
jbe
lods
cs
push
sbb
or
fstps
das
cmp
push
mov
mov
test
jns
movsb
mov
jl
or
sub
ret
and
xchg
fwait
cmp
lret
lock
rorl
pushl
mov
lock
xor
push
or
imul
ljmp
cltd
jmp
loopne
mov
or
dec
xchg
mov
mov
fxch
popf
mov
push
les
sbb
idiv
jmp
mov
stos
jo
push
rorl
add
mov
push
xchg
stos
rorl
cmp
lods
jge
mov
inc
ljmp
shll
insb
push
out
jnp
js
std
pop
fmuls
or
mov
inc
nop
ficoml
push
pop
sti
fldt
jo
and
lahf
add
xor
inc
das
or
shrl
mov
xor
dec
aam
add
lods
cmpsl
inc
pushl
add
or
lods
xchg
add
cmp
jmp
sub
sub
in
call
aad
sarb
fwait
pop
cmp
mov
xchg
mov
xchg
xchg
les
in
mov
mov
and
fstpl
loop
mov
push
and
test
sub
add
push
push
sbb
ljmp
mov
pop
jae
ss
or
push
dec
loop
lret
ja
ljmp
loope
enter
pop
xchg
imul
and
aad
pop
test
add
scas
add
pop
xlat
dec
push
pop
outsl
stos
inc
test
cli
mov
jge
xor
and
inc
xchg
jge
out
shrb
sahf
xchg
out
fsubrl
jmp
or
push
mov
pop
mov
xchg
leave
cmpsb
jb
sbbw
or
cwtl
enter
mov
cmp
cmpb
and
cmc
push
sahf
jp
fidivs
stos
popa
jle
lock
dec
jns
mov
add
es
in
cmc
and
arpl
xor
ja
test
imul
inc
add
inc
popa
mov
insl
mov
push
pop
cmpb
rorl
mov
loope
addr16
adc
add
imul
fst
fnstcw
pop
ds
xor
xorb
inc
xor
pop
inc
and
adc
insb
imul
xchg
dec
cld
stos
or
dec
lods
jmp
aam
lcall
inc
or
cmp
lds
cwtl
fnstsw
outsb
sbb
cmc
sub
aas
cwtl
mov
iret
popf
mov
inc
adc
xor
fldenv
adcb
mov
push
push
insb
fdivr
rcr
mov
sahf
mov
xchg
xchg
xchg
movsl
mov
addl
scas
add
outsb
leave
ret
out
jg
out
test
jb
jmp
push
int3
dec
sbb
push
rclb
mov
adc
fcomps
or
adc
stos
loop
jae
cmp
xlat
icebp
mov
hlt
add
leave
pop
out
ja
push
mov
out
xor
outsl
cmpsb
pusha
in
and
mov
push
push
pushf
test
lock
add
in
test
cmpb
jno
add
mov
popf
pop
push
lock
cmp
les
ffree
jp
lds
xor
loopne
cld
mov
daa
jns
mov
xchg
in
inc
into
pop
add
jge
sbb
xchg
or
xchg
lock
outsl
mov
jno
push
lahf
int
pop
mov
sub
mov
fisttpl
ds
xorl
or
mov
dec
push
dec
popf
mov
fsubl
outsb
jge
jp
in
jle
or
jne
test
test
mov
iret
jge
mov
das
mov
jl
add
std
into
dec
movsb
lods
mov
fst
repnz
int3
adc
loop
pop
add
push
xor
pop
outsb
fmul
add
loop
or
test
shrb
flds
cltd
jp
aam
mov
or
cmpsl
ficoml
jnp
push
ljmp
movsb
negl
loopne
xchg
mov
jns
push
mov
js
bound
fmul
loope
sub
clc
outsl
mulb
jns
cwtl
mov
jns
or
jmp
push
pop
add
mov
xor
jmp
vmulsd
jnp
dec
and
fldenv
push
pop
pop
out
das
jbe
outsb
shll
xchg
mov
inc
pop
and
cmpsl
scas
lock
jno
and
sub
adc
push
mov
mov
cmp
sub
sbb
sti
xor
icebp
stos
insb
out
testb
cltd
xor
stc
out
jecxz
outsl
inc
clc
pusha
dec
sub
std
aam
or
gs
loope
and
movsb
jo
test
or
cmc
mov
jmp
mov
mov
lret
adc
popa
xor
jae
enter
repnz
in
cmp
popa
mov
mov
pushw
enter
mov
mov
xor
xor
cmpsl
jge
pop
inc
mov
loopne
sub
jno
cmp
adc
sbb
xchg
xchg
xlat
mov
jae
hlt
jecxz
gs
xchg
lods
fsubs
push
fwait
push
mov
mov
xor
pop
fdiv
mov
stos
xchg
push
mov
int
mov
xchg
mov
mov
filds
and
adc
push
es
jae
fs
negb
iret
jnp
cmpsl
and
or
lahf
in
addr16
sub
and
testb
and
cwtl
fsubs
stos
dec
inc
imul
jl
xchg
pop
xchg
out
xchg
loopne
fstps
stos
pop
or
or
pop
dec
divps
xor
push
xchg
in
inc
outsb
in
fs
fldenv
xchg
arpl
adc
aas
pop
sub
mov
data16
dec
sarl
leave
out
aaa
cmp
xchg
jp
scas
rep
rcrl
push
push
push
xchg
xchg
movhps
je
cmp
out
jne
and
sbb
jb
repz
xor
sbb
lea
and
shll
mov
push
or
sbb
inc
in
xchg
or
into
out
cmp
pop
mov
out
dec
lods
gs
mov
mov
xchg
aam
cmp
add
nop
aad
movsb
sub
push
add
push
sbb
leave
lods
aas
cmp
call
fs
cmpsb
aaa
cmp
sbb
negb
scas
lods
mov
sub
sti
ja
adc
aad
pop
xchg
add
cmp
xor
push
xchg
stc
out
adc
mov
jecxz
imul
lret
fimuls
les
inc
jne
pop
mov
aas
and
clc
sahf
mov
cmp
repnz
mov
and
in
rcll
pop
and
sbb
lcall
jmp
ja
aas
jo
inc
mov
pop
push
and
mov
fistpll
pop
popa
out
xchg
mov
mov
scas
in
mov
push
rcrl
xchg
sbb
dec
mov
push
test
insb
jp
ss
or
idivl
lahf
xor
clc
add
cwtl
mov
and
dec
out
push
movsl
jg
sbb
sbb
pop
call
mov
in
leave
cwtl
sub
mov
out
xchg
repz
in
xchg
insb
in
pop
and
lcall
inc
xor
pop
inc
or
mov
lods
pushf
sbb
inc
xor
dec
test
mov
xchg
decb
dec
mov
or
loop
mov
dec
ljmp
inc
inc
cmp
out
mov
insb
xchg
cmp
dec
mov
xchg
pop
ja
fld
or
sub
xchg
jo
pop
push
adc
push
lret
push
adc
repz
psllq
aaa
push
fs
fnsave
add
or
adc
cmp
adc
lret
fisubrs
inc
or
cld
ljmp
mov
mov
dec
mov
dec
adc
in
mov
xor
xchg
out
or
ja
aas
xchg
inc
sub
pusha
addr16
pop
xor
outsb
lret
inc
popf
mov
ss
fwait
dec
dec
sub
lods
aad
inc
push
fiadds
mov
mov
lret
les
xor
lods
mov
xchg
jmp
lcall
sub
sub
add
xor
inc
add
push
cmp
push
out
imul
test
out
sub
lods
sti
mov
jne
inc
fistps
or
idivb
add
push
cmp
jle
scas
sub
cltd
mov
dec
xchg
push
and
mov
mov
jecxz
pushf
add
xchg
mov
mulb
lds
push
push
sub
push
pushf
bound
jns
lret
mov
andl
pop
xchg
rolb
sub
dec
test
mov
xor
les
dec
xorl
sub
fldenv
mov
aas
cli
das
ds
lahf
sub
cld
inc
add
movsl
in
fcom
adc
sarb
xlat
sahf
jae
mov
scas
sarb
in
xchg
test
loop
and
jle
sbb
adc
shl
add
mov
push
jl
mov
add
popl
int
dec
mov
mov
add
cmpsl
ret
ja
dec
jns
outsl
xor
mov
sub
cltd
into
bound
mov
pop
es
int
es
sub
lods
and
push
nop
sahf
push
mov
fldenv
mov
adc
fisubs
sbb
fisubs
or
hlt
decl
jmp
push
sub
popa
roll
xchg
scas
in
xor
pop
dec
xchg
jmp
push
pop
mov
adc
pop
add
mov
xor
jg
pop
sub
sub
or
test
je
sub
sti
or
ss
jnp
testb
aaa
sbb
mov
xchg
inc
cmp
jne
xchg
jo
pop
outsl
addl
sbb
out
adc
sub
mov
in
inc
insl
xchg
js
jmp
push
fists
cmp
lcall
mov
dec
cmp
lods
clc
mov
jmp
sub
mov
push
mov
adc
mov
call
or
xor
mov
mov
cltd
gs
cltd
pop
jl
xchg
pop
add
or
lods
sub
mov
iret
ret
xor
mov
jb
imul
cmpb
sub
dec
jno
js
pand
add
push
pop
cmpsl
push
xchg
rolb
rorb
push
push
mov
and
mov
test
add
push
sbb
stos
popa
lds
sahf
xor
jmp
repz
jecxz
repz
negb
popf
in
add
push
jmp
stos
fiaddl
aaa
dec
rol
in
lods
adc
inc
cmpsb
outsl
sti
sub
frstor
sbb
push
push
es
fisubs
loop
subb
rclb
push
andb
and
adc
and
jle
mov
or
cs
add
mov
and
or
loopne
add
push
rol
aam
add
push
jbe
fcoml
div
xor
xchg
jae
shrb
test
push
xor
jbe
movsb
testb
rcl
xchg
pop
mov
inc
xchg
ljmp
data16
jnp
inc
int
cmp
jle
fnsave
fld1
dec
mov
jno
lods
inc
push
pushf
mov
ret
cmp
xlat
push
lcall
int
push
stos
mov
add
aas
xlat
cmc
ret
dec
dec
lcall
cmp
mov
jo
cmc
sub
push
add
mov
test
add
rorl
push
xor
cmpsl
int3
subl
mov
movl
xor
jl
push
push
or
push
mov
add
cmpl
push
subl
out
push
daa
and
loop
mov
inc
int3
lcall
xchg
push
dec
push
add
pop
js
lock
sahf
sub
and
arpl
and
arpl
ss
fwait
dec
loope
mov
rorb
js
int3
pushf
or
sub
jo
add
push
jo
mov
ficomps
outsl
rclb
sbb
jp
cmpsb
dec
cmp
pop
sub
and
dec
add
xchg
enter
out
jl
imul
inc
xor
addl
mov
xchg
push
inc
sahf
pop
dec
adc
mov
jge
sti
daa
arpl
aaa
jae
outsb
mov
in
and
adc
add
xor
jb
jecxz
xor
or
ss
fldl
pop
or
jecxz
out
in
js
mov
xor
stc
ja
idivb
repz
xor
movsl
nop
jo
std
mov
mov
mov
scas
inc
cmpsl
push
adc
icebp
in
inc
aaa
test
mov
pop
push
notl
mov
sub
insl
shr
in
sbb
pushf
inc
cli
jbe
sub
cmpl
test
jb
dec
jg
ljmp
cs
sub
clc
sub
push
push
sbb
adc
out
or
fdivs
jne
sub
sub
mov
pop
xchg
jne
sahf
popa
loope
or
out
clc
andps
sti
xchg
out
mov
cltd
nop
sub
jl
and
xchg
cmp
jg
push
sub
cli
faddl
out
cmp
jns
pop
aas
or
cmp
bound
mov
sbb
cmp
das
ror
test
mov
test
fcompl
mov
adc
and
xchg
or
mov
lds
outsl
mov
loopne
data16
jne
jae
ficoml
xor
sbb
or
dec
xchg
mov
outsl
nop
mov
stos
nop
divl
sahf
cltd
fistl
jle
jno
pop
leave
xchg
es
mov
inc
stos
push
loopne
jmp
leave
insl
or
shrl
pop
mov
and
and
mov
es
adc
push
pop
cmp
icebp
fwait
mov
push
push
out
adc
scas
or
jbe
xchg
push
jg
inc
lret
mov
out
insl
mov
pop
jbe
fsts
mov
stos
mov
fisttpll
insb
mov
sbb
pop
test
add
test
out
cmp
and
loope
push
aas
mov
and
adc
sbb
sti
push
lret
fnstenv
push
mov
jp
inc
pop
fs
cli
stos
cmp
out
mov
js
mov
xchg
cli
dec
adc
dec
je
ret
inc
mov
mov
cmpsb
shrb
fwait
jbe
pop
mov
push
outsb
pop
adc
js
pop
fdivr
jns
fisttps
popa
arpl
jno
sbb
and
lcallw
repz
mov
arpl
xor
jl
idivl
pop
call
sub
daa
popa
add
stos
adc
and
adc
cmpsl
shl
test
sbb
add
insb
jmp
jnp
clc
outsb
inc
gs
sbb
dec
dec
test
enter
and
sub
scas
push
pushf
mov
int
stos
inc
jno
mov
mov
pusha
imull
mov
push
inc
cmpb
or
pop
cld
mov
pop
mov
cmp
out
mov
sbb
mov
xlat
jae
sub
movsl
jg
xorb
pop
add
scas
mov
cmp
jmp
dec
ss
or
mov
test
rep
adc
sahf
dec
jp
mov
or
adc
mov
adc
xchg
fsubs
cmpsb
xor
pop
push
ljmp
das
outsl
fs
or
xor
sub
jnp
in
mov
push
sbb
mov
lahf
ret
adc
sub
mov
adc
push
pop
aam
lcall
add
xor
jnp
clc
jbe
inc
repz
xor
ret
pusha
push
sbb
cmp
sbb
sub
or
push
and
into
lds
out
test
xor
dec
negl
int3
sbb
frstpm(287
dec
call
inc
mov
ds
adc
arpl
jle
jl
cmc
into
jg
adc
mov
jmp
fists
sub
push
lret
test
add
mov
jp
cltd
xor
add
imul
popf
mov
mov
mov
and
sbbb
cmp
loope
mov
mov
popf
cmp
mov
inc
jbe
stc
movsl
movsb
push
inc
jnp
cli
enter
jp
mov
xchg
or
xchg
and
hlt
mov
mov
repz
scas
add
xor
inc
inc
mov
sti
lods
mov
ja
jno
nop
cmp
or
in
lds
bound
push
push
push
pushf
xor
push
cmpsb
fsubs
adc
pop
xorb
inc
and
stos
sub
xchg
ret
enter
adc
imul
and
gs
cmp
ljmp
pop
mov
outsb
rorb
jp
mov
sbb
xor
mov
stos
pop
imull
mov
jne
incb
xor
repnz
das
sub
dec
loope
or
nop
ss
repnz
dec
xchg
in
aas
sub
sub
push
mov
xchg
and
aad
dec
mov
xchg
or
jmp
insb
out
add
inc
pop
das
rcl
ret
mov
mov
push
cltd
outsb
and
mov
ljmp
adc
ss
mov
xchg
sbb
sub
add
xor
mov
add
shll
ja
pop
sbbl
adc
lahf
loopne
or
pop
cmp
mov
and
xchg
pop
jecxz
inc
and
mov
repnz
cmpsb
adc
mov
sub
inc
ds
mov
stc
leave
xor
rolb
xchg
test
xchg
in
enter
lock
pop
in
shl
mov
xchg
mov
insl
clc
cmpl
popf
icebp
insl
push
cmp
xchg
pop
sub
jle
test
scas
lret
fcomps
push
mov
rcrb
sub
imul
add
sub
insl
aaa
outsl
and
sub
pop
push
and
sub
pop
sti
or
call
aas
mov
cmp
jmp
add
lret
scas
addr16
add
xchg
xor
lcall
cmpsb
cmp
dec
out
mov
mov
mov
mov
js
in
das
mov
loopne
cmp
xchg
test
cmpsl
sbb
sbbl
add
xchg
inc
sub
incl
inc
and
pop
xor
xor
adc
dec
or
inc
mov
pop
mov
sub
cmpsb
jle
inc
fstpt
mov
sbb
add
stos
mov
inc
ljmp
and
movsb
jne
jno
mov
in
mov
pop
mov
cmp
inc
jbe
mov
outsb
pop
mov
enter
popa
push
jle
add
cltd
pusha
in
int
mov
lock
rorl
and
gs
fsubs
adc
dec
nop
loop
lds
sbb
pop
lods
cmpsb
inc
dec
cmp
addr16
hlt
fsubrs
jo
sub
sbb
cmc
push
push
sbb
dec
xor
in
jne
popf
pop
mov
xor
test
inc
xchg
in
es
mov
cmp
out
aas
test
addr16
pop
jecxz
popa
push
ljmp
or
xchg
mov
lds
roll
mov
mov
fwait
aad
or
xor
jge
cs
inc
int
ss
dec
and
jl
pop
scas
adc
push
sbb
adc
jmp
into
popf
test
xor
bound
cmp
mov
mov
ja
xchg
xchg
in
sub
xor
add
icebp
fwait
xchg
rcl
rorb
adc
push
xchg
dec
pushf
and
sub
add
movsl
or
mov
call
mov
cmp
add
test
fisttpll
mov
and
lret
push
andl
dec
sbb
rcrl
lret
pop
addr16
test
out
xorb
ds
mov
jne
push
and
cltd
lea
divl
mov
inc
cs
loop
lods
cwtl
pop
pushf
iret
push
outsb
xchg
cmp
mov
inc
pop
cmp
xchg
cmp
stc
pop
cmp
inc
aad
sbb
popl
xor
pop
fwait
sbb
adc
jb
rorb
xor
push
mov
repz
xchg
jle
pop
flds
xchg
addl
mov
and
pop
sbb
arpl
xor
cmp
aaa
stos
fcoms
push
push
inc
pop
jl
xchg
imul
xchg
imul
dec
std
mov
andl
sbb
lock
inc
repz
pop
stc
lods
mov
mov
pop
push
pushf
rol
sub
test
fwait
cmp
adc
lcall
pop
repz
cltd
fisubrs
fcoms
in
and
push
mov
fsts
test
outsb
lea
pop
xchg
adc
scas
add
mov
xor
mov
rolb
sbb
and
sbb
into
movl
xchg
jl
push
divb
xor
inc
mov
sub
xor
shlb
adcl
sub
mov
xchg
je
sbb
jecxz
pop
mov
mov
cli
adc
cmp
sbb
dec
add
jae
das
popf
mov
inc
test
cmpsl
and
pop
sub
xchg
sbb
push
shll
add
xchg
cmc
test
cmp
xchg
mov
push
mov
stos
xchg
sbb
loop
cmc
jns
loopne
call
sti
push
pop
mov
mov
aam
popa
jecxz
mov
push
movsl
mov
pop
test
test
sahf
jns
pusha
sbb
loopne
dec
enter
xor
in
push
lods
ja
stos
movsl
in
adc
mov
adc
mov
inc
mov
call
fcompl
mov
shrl
push
lret
sbb
push
scas
push
jnp
loope
inc
pop
in
stos
push
mov
xor
mov
mov
mov
add
insl
cs
mov
cltd
and
mov
push
push
pop
xor
test
int
fstps
fmuls
pop
mov
out
lret
int3
test
stc
cwtl
xchg
jno
ss
test
fwait
jle
cvtsi2ss
iret
pop
mov
cmp
inc
es
adc
test
pop
int3
shlb
mov
or
mov
sbb
rolb
cmp
sahf
push
lahf
leave
mov
arpl
ret
pop
jp
pop
sbb
imul
lcall
leave
iret
or
mov
or
stos
push
add
ds
xor
push
mov
xor
push
jno
ror
and
sahf
xchg
sti
mov
or
push
test
mov
sub
imul
inc
add
lods
sti
sbb
jmp
fldenv
inc
sub
lock
add
into
pop
int
push
fistpll
push
jp
xchg
mov
orl
not
and
or
lcall
icebp
ss
push
sbb
add
mov
into
mov
fcompl
cmpsl
lret
inc
sbb
into
mov
in
cmp
cmc
movsb
adc
pop
lret
mov
xor
xchg
sbb
imul
adc
les
inc
and
dec
add
iret
mov
mov
aad
test
and
out
adc
pop
cwtl
les
inc
es
stc
cmp
mov
add
or
cli
shlb
or
mov
and
adc
mov
sbb
fprem
inc
jo
test
or
or
jp
ss
xchg
jge
add
adc
cmovle
jnp
loope
xor
add
mov
out
rolb
test
ja
and
add
js
mov
js
push
lds
into
push
xchg
decl
or
out
push
sub
mov
sbb
cltd
cmp
mov
xchg
outsb
aaa
rcl
sbb
sbb
sub
sub
xchg
ljmp
fistpll
data16
cld
ds
mov
in
pusha
cmc
jecxz
mov
jmp
hlt
or
sbb
mov
aad
lret
or
gs
js
adcb
pop
fs
mov
mov
lods
jecxz
mov
jle
loop
in
push
xor
mov
ret
jae
scas
rcll
in
pop
stc
inc
pop
in
jge
sahf
dec
adc
sbb
fwait
cmc
sub
push
int3
cmp
rcrb
cmp
pop
lcall
test
sbbb
jne
dec
pop
sarl
inc
mov
lcall
dec
mov
xor
scas
popf
leave
js
mov
fistl
lret
jns
popf
out
addr16
pop
xchg
rclb
orl
lahf
cwtl
cmp
sahf
movsl
or
inc
mov
sbb
jne
loopne
cld
lahf
sbb
and
cld
and
xchg
mov
mov
fiadds
int3
aas
or
fisttpll
sbbl
sub
jl
outsl
xchg
mov
push
inc
clc
jecxz
add
lds
add
cmp
sahf
sahf
sbb
jge
popa
cwtl
jge
fstl
mov
push
pop
inc
mov
cmp
pop
inc
leave
lret
adc
notb
sbb
jno
mov
adc
inc
mov
cmp
mov
pop
mov
aaa
in
xor
dec
mov
scas
ffreep
mov
inc
popa
lret
jns
mov
adc
aad
cmc
pop
cmpsl
sbb
push
popf
cmp
cmc
sbb
push
jo
in
test
jmp
mov
mov
mov
or
pop
cmp
outsb
cltd
xor
sbbb
and
ret
or
fnstenv
lods
loope
and
pop
mov
mov
fdivs
aam
xor
xchg
or
repnz
jp
test
xchg
mov
lea
lods
jno
push
fsub
dec
leave
and
cmp
les
jl
mov
pushf
or
ja
js
push
ja
clc
lcall
into
jo
leave
and
xchg
scas
je
inc
push
cmp
pop
ret
adc
loope
inc
push
movl
cmp
sbb
xor
and
das
cld
fists
imul
cmp
xchg
push
sub
and
lret
rcrb
fildll
cmp
dec
xor
loope
ret
mov
ss
push
int3
int3
cmp
mov
sbb
jecxz
test
mov
sahf
clc
aad
dec
jbe
stos
aas
and
and
cmc
mov
aam
push
gs
popf
pop
mov
std
cmpsb
lods
pop
lock
sbb
dec
add
or
sub
sbbl
aas
pop
pop
pushl
jl
rcr
aas
daa
add
adc
aaa
xchg
push
pop
mov
ret
outsl
mov
mov
iret
sub
iret
pop
test
add
sbb
jbe
aam
dec
mov
add
jb
cltd
loope
adc
adc
cmp
enter
repz
mov
stos
test
pop
andl
adc
stos
in
gs
std
cmp
adcb
aaa
leave
dec
fdivrp
pop
dec
js
cmp
xchg
add
movsl
imul
aam
jnp
scas
add
data16
or
xchg
loope
into
aad
mov
cmovp
cmp
or
xor
mov
inc
sbb
or
sub
aam
push
test
jecxz
push
dec
mov
and
push
iret
dec
mov
and
xchg
jnp
and
imul
test
or
mov
sbbb
inc
das
stos
js
mov
xchg
and
dec
add
pop
add
dec
addr16
lahf
inc
cmp
roll
and
hlt
fadd
push
mov
jl
mov
mov
push
sbb
ret
dec
cmp
mov
cmpsb
push
lcall
push
mov
cs
or
and
imul
pop
pusha
rcll
addr16
imul
xor
jg
daa
and
lret
aas
sub
push
icebp
mov
xchg
adc
insl
or
stc
xchg
push
dec
les
clc
loopne
jp
or
call
sub
out
xchg
into
jecxz
shll
mov
aaa
outsb
test
cmpsl
scas
inc
jle
cs
xorl
aas
dec
jb
push
sti
fnstcw
js
pop
hlt
and
lods
jg
insl
push
push
push
test
ss
and
ret
scas
jmp
outsb
jg
mov
popa
shld
data16
sub
lea
mov
ds
pusha
push
pop
push
ret
jp
bound
push
icebp
mov
cmp
jmp
rolb
cmp
sbb
push
sbb
int3
add
adc
roll
xchg
pop
sbb
pop
sbb
jbe
ret
aas
sub
add
subl
mov
dec
out
shll
xchg
xor
cmpb
in
je
pop
fistpll
arpl
cwtl
lock
dec
mov
jge
test
cltd
fstpl
imul
and
popa
mov
aas
jb
in
je
fs
jg
lods
rcrb
mov
push
sbb
pop
mov
aaa
rcrb
pop
or
int3
shrl
add
cmc
ss
insl
loopne
push
jnp
pop
mov
inc
int3
in
fs
adc
cmp
jae
jno
mov
daa
pop
test
dec
shlb
cmp
sub
out
jmp
stc
lret
lcall
jg
out
or
iret
fistpl
or
outsb
rcrb
imul
aam
ljmp
into
cmp
lds
jge
cltd
pop
insl
jne
add
mov
inc
loope
stos
lahf
sub
imul
push
jo
in
insl
xor
xchg
sbb
mov
clc
imul
mov
xchg
xchg
cwtl
or
push
pop
add
and
iret
gs
icebp
test
add
fimull
pop
sub
mov
ss
cmp
sahf
icebp
leave
rcll
dec
cmpl
or
mov
mov
in
jecxz
flds
jno
loopne
imul
jge
dec
sub
and
std
pop
fldenv
fistps
subl
jae
stos
or
mov
repnz
or
lret
shlb
pop
hlt
inc
xchg
cs
or
out
jnp
or
sub
cmpsb
lods
mov
mov
adc
adc
fnstcw
scas
lret
pop
add
xchg
adc
shll
sub
pop
jnp
cmp
inc
xor
xor
xchg
ss
jecxz
xlat
pop
clc
pop
out
jae
fldenv
rolb
imul
cltd
pop
subb
in
sbb
xchg
push
cld
dec
xchg
inc
jmp
jne
or
sbb
mov
jae
xor
add
scas
mov
cmpsl
add
pop
xchg
jmp
inc
and
fistps
mov
pop
repz
xchg
into
lahf
jge
es
mov
call
sbb
pop
mov
cli
adc
push
inc
lret
jl
mov
popf
xchg
mov
cli
xlat
sbb
mov
lret
stos
flds
add
push
insl
cmpsb
xorl
pop
or
repnz
xorb
adc
add
push
mov
jecxz
std
jp
rolb
jae
jae
call
rcrl
neg
inc
imul
xchg
pop
and
lds
fsubl
daa
int3
jl
push
dec
sahf
mov
sub
push
push
mov
fistpl
inc
stos
xchg
xchg
push
jp
data16
lcall
cmpsb
cmp
and
add
fsubl
jge
fdivrl
xchg
hlt
sbb
mov
cmp
dec
pop
add
and
rcl
inc
gs
dec
mov
xor
or
loopne
cwtl
xchg
xchg
add
jmp
inc
xchg
xchg
and
test
mov
mov
jns
sub
mov
or
push
inc
std
jae
push
pop
jbe
js
dec
and
jp
dec
arpl
push
inc
jge
lret
movsl
xlat
dec
imul
push
pop
fisttps
pop
cwtl
data16
xlat
pop
or
sub
mov
and
sub
lret
sub
out
push
push
aam
in
xchg
das
fwait
push
add
or
into
dec
aaa
outsb
addr16
xchg
dec
inc
sub
or
iret
ds
or
and
cmp
inc
mov
popa
and
xchg
push
arpl
xchg
and
cmpsb
lahf
test
ret
lcall
push
test
rcrl
sbbl
jbe
lds
jo
into
rcl
jg
lahf
mov
popf
cltd
pop
xor
lock
in
mov
es
xchg
mov
mov
movsl
sub
inc
inc
jp
xchg
cmp
addr16
lcall
ja
call
jns
test
mov
sub
mov
or
xor
lahf
pop
push
rclb
pop
je
ss
sbb
jne
mov
pop
fdivrl
pop
pop
stos
cmp
xchg
in
negl
pop
push
pop
out
jmp
dec
dec
cmp
mov
jmp
xor
test
lds
sub
rcll
xchg
out
icebp
xchg
inc
bnd
fildll
aam
lods
add
cmp
mov
outsl
inc
cltd
pop
mov
push
push
cwtl
out
fmul
out
and
push
adc
rcrl
fimull
into
xor
rorb
mov
ljmp
in
xchg
inc
nop
popa
lods
in
and
adc
enter
mov
push
in
mov
fwait
lcall
ret
les
scas
addb
mov
stos
bound
add
inc
or
xchg
les
into
stc
xchg
pop
pop
pop
cmp
mov
xor
into
sbb
sarl
xor
xchg
lods
push
aas
mov
cs
js
lods
or
xchg
mov
bound
mov
mov
dec
jo
sbb
out
ljmp
dec
cmp
pop
push
loop
inc
enter
push
adc
repz
mov
test
mov
dec
movsb
push
lret
repnz
jno
arpl
das
xchg
push
dec
cmp
shll
adc
fstps
push
and
enter
mov
out
std
ret
and
xor
cld
and
mov
push
sbb
pop
pushf
rcrl
mov
cld
je
add
push
outsb
mov
jo
xchg
pop
rorb
pop
sbb
jb
hlt
dec
add
push
testl
add
insb
or
fldl
or
adc
push
out
push
dec
cmp
mull
mov
mov
bswap
push
push
mov
add
es
cmp
adc
arpl
fistpl
cmp
lret
mov
xchg
ljmp
or
jle
xchg
inc
push
dec
test
ror
rorl
popa
fmull
and
in
jg
jo
dec
mov
lahf
pusha
fidivrl
fiaddl
or
add
dec
pop
pop
movsb
dec
xchg
mov
fmul
push
sub
ucomiss
sbb
mov
cmpsb
mov
xlat
loop
add
test
xchg
sub
fwait
inc
lods
xor
jae
jnp
sbb
int
sub
mov
ss
sub
sub
jl
pop
push
cwtl
sub
iret
cmc
push
adc
hlt
ret
sar
jo
sbb
add
sub
lret
lods
jo
repnz
cmp
lret
xor
mov
sub
xchg
dec
imul
mov
pop
lea
stos
cmp
test
ja
sbb
test
inc
fstpl
sub
divl
je
jl
xor
pop
pop
mov
outsl
push
loop
mov
jg
or
cmp
mov
jno
outsb
loop
mov
data16
pop
adcl
fsubrs
mov
dec
pop
inc
imul
sbb
fiaddl
push
adc
add
jp
hlt
cltd
lods
lcall
fcompl
rorl
push
xor
xor
dec
out
add
pop
mov
jl
js
mov
loope
insb
test
or
in
and
dec
imul
leave
jns
push
cwtl
and
stos
sub
add
inc
jecxz
imul
jae
sti
mov
out
ljmp
pop
pop
jmp
push
lahf
test
rclb
mov
ror
pop
mov
vcmpss
pop
add
ret
jo
popf
out
xchg
push
bound
stc
jecxz
mov
xchg
or
jl
mov
push
clc
insb
jno
into
out
pushf
jb
ja
xchg
insb
les
sbb
mov
arpl
sahf
add
data16
in
xchg
sbb
pop
clc
or
arpl
mov
jnp
shl
xchg
mov
lret
ljmp
dec
mov
xlat
mov
lret
rol
sub
pop
push
imul
mulb
jecxz
fimuls
sub
mov
add
or
outsl
fwait
aaa
and
push
mov
mov
cmpb
xor
rorb
stc
xor
movsl
xor
inc
add
jne
jle
in
mov
mov
fs
stos
mov
sub
sahf
dec
cmp
sub
sbb
xor
xor
aam
dec
popf
pusha
inc
fdivrl
mov
pop
pusha
sti
dec
scas
into
fldcw
jb
movsb
mov
cld
or
ret
push
stos
std
fimuls
mov
add
arpl
xor
push
jns
shlb
les
mov
mov
pushf
icebp
push
mov
inc
push
jne
aaa
scas
fisttpll
ficomps
sbb
out
in
int
in
push
stos
jnp
es
push
imul
inc
popf
ret
and
pop
addr16
pop
or
jne
ljmp
jbe
aad
add
lods
push
lret
in
lret
mov
pop
sub
mov
cmp
and
sbb
js
mov
adc
jg
ds
fdivs
jnp
mov
or
loope
pusha
iret
ficomps
push
in
pushf
outsl
dec
sbb
pinsrw
enter
outsl
cwtl
pop
sbb
add
and
stos
es
imul
lahf
push
push
repnz
mov
mov
ds
sub
and
mov
ficomps
into
jl
gs
and
in
add
xor
into
scas
push
xchg
mov
fs
pop
cmp
mov
jl
jl
addl
and
mov
out
in
sbb
pop
sbb
shrl
test
fs
insb
add
cli
xchg
xor
aas
psubq
out
lret
in
mov
clc
dec
xchg
xor
cmpsl
adc
jmp
cltd
repnz
iret
mov
push
jmp
jg
mov
pusha
push
xchg
add
or
xchg
nop
inc
adc
mulb
test
test
pop
cmc
sub
add
mov
or
xor
or
or
jle
sub
icebp
stos
je
fcmovnu
mov
mov
lcall
jnp
push
mov
stos
mov
into
push
aam
add
xchg
cmp
aam
push
stos
mov
jmp
lret
arpl
push
jae
mov
xor
daa
lods
out
or
inc
lcall
lret
fisttpll
out
sahf
adc
idivl
pop
cmp
mov
or
or
jbe
sbb
scas
fwait
das
adc
adc
cs
shlb
test
fwait
out
lds
mov
ret
rcl
mov
popf
mov
test
mov
andl
cmc
out
pop
adc
pop
adc
lds
xor
cmp
loope
in
shl
stos
fidivs
adc
and
mov
test
lret
or
dec
popl
sbb
mov
fisttps
mov
in
jno
mov
sub
fldenv
andl
dec
imul
shl
movsb
ljmp
push
ljmp
je
lcall
rcrb
in
push
jmp
push
call
adc
cmpsb
and
push
jecxz
cld
cmpsb
add
int
push
adc
xor
dec
sub
pop
ss
addr16
sbb
cmp
xor
div
gs
movsb
xor
je
mov
in
or
and
movsb
dec
and
inc
std
cltd
jnp
aaa
mov
cli
insl
fisttpll
push
cmp
movsb
enter
cli
push
stos
inc
mov
dec
or
mov
push
jp
cltd
imul
mov
out
scas
cmp
es
or
js
aas
es
and
xchg
adc
jo
xor
cmpb
mov
movsb
scas
movsl
shl
xor
out
mov
shll
cmpl
inc
push
pop
or
xchg
mov
xchg
pushf
out
fwait
mov
iret
fs
in
mov
notb
in
negb
jb
je
pop
ficompl
adc
mov
aam
js
xchg
adc
test
xchg
adc
cmp
cmp
inc
push
aaa
rorb
mov
adc
and
arpl
inc
cmpsl
stc
in
inc
idiv
add
mov
in
jbe
dec
pop
inc
call
pop
cmp
pop
jl
dec
pop
fnstsw
and
bound
push
es
xor
out
jle
clc
xor
add
imul
ret
or
push
jge
into
xchg
mov
jbe
sbb
mov
xchg
adc
sub
cltd
jbe
rcrl
xchg
push
mov
inc
sbb
lret
pop
out
icebp
xor
and
dec
in
stos
mov
mov
sub
pop
push
rcl
and
loopne
sub
cmp
ja
adc
or
inc
stos
mov
mov
xchg
test
arpl
sub
test
adc
pop
adc
cmp
popf
outsl
or
mov
sbb
inc
cli
shlb
lock
pop
stos
inc
sub
xchg
jo
test
aam
popa
mov
sub
push
mov
mov
push
mov
fadds
stos
inc
mov
lds
hlt
or
insb
xchg
arpl
addl
icebp
mov
and
mov
aad
and
dec
stc
fwait
sbb
add
insl
xor
cli
into
repz
ss
inc
inc
dec
into
or
dec
scas
xor
fisubs
iret
lret
pusha
jecxz
cld
ss
shrb
cmp
mov
and
push
jge,pn
popa
add
xlat
lea
ja
adc
cltd
cmpsb
mov
ds
add
adc
cmp
mov
dec
loopne
add
cmc
and
popf
mov
jp
push
nop
inc
xchg
leave
xchg
arpl
fmull
test
stos
or
cmp
shr
andl
jno
lret
scas
cmp
mov
out
pop
call
jge
sub
jbe
shlb
iret
mov
test
lahf
dec
xchg
rcr
push
jmp
cmpsb
clc
movsb
cmpsb
xchg
mov
cs
ds
idivb
jmp
push
int
aad
push
inc
cwtl
mov
mov
mov
inc
jbe
shl
adc
push
push
jb
mov
lock
inc
and
shlb
lret
fdiv
cmp
mov
sub
pop
movsb
call
xor
mov
xor
sti
adc
cli
data16
imul
sub
pop
pop
aas
jle
dec
dec
pop
jg
pop
testb
enter
or
pop
jge
mov
repnz
xchg
and
adc
outsb
push
mov
popa
mov
mov
sbb
inc
dec
test
setg
xor
cs
sbbb
or
out
mov
sub
notb
jmp
cmc
imul
mov
test
hlt
leave
call
jns
mull
shl
mov
test
and
daa
cmp
cmp
fldcw
xor
inc
mov
cmp
mov
ret
inc
jp
lock
or
push
xorb
int
loope
sbb
fidivrl
fisubrs
dec
and
pop
mov
or
push
addl
stc
dec
lcall
xlat
shll
lcall
cld
pop
push
mov
jns
les
enter
xchg
cwtl
mov
xchg
scas
stc
or
and
inc
fldt
sbb
shlb
inc
sarl
dec
xlat
pop
jl
stos
sbb
add
fdivl
push
jns
xlat
push
insb
mov
push
and
pusha
in
ss
xchg
test
insb
rcrl
mov
and
hlt
sub
dec
sub
jge
rcl
and
test
jp
pop
xchg
pop
push
rcrl
fcoms
in
jecxz
subl
lcall
hlt
mov
push
mov
or
ret
movups
mov
in
xchg
xchg
sub
stos
xor
mov
icebp
rcrb
sub
push
xor
jecxz
je
arpl
cmp
and
mov
xchg
push
mov
pop
movsb
retw
pop
stos
mov
insl
out
lret
movsl
scas
out
sub
sbb
jg
adc
sub
pop
inc
xchg
pushf
pop
ja
sub
enter
iret
mov
add
insl
scas
sahf
ljmp
and
xchg
jnp
fistl
sub
inc
mov
ret
hlt
inc
inc
adc
inc
sbb
xchg
fbstp
int3
pop
sub
fcmovnu
pop
push
xchg
sbb
pop
or
daa
nop
dec
cli
nop
pop
cs
pop
mov
test
jns
sub
xchg
loop
pushf
call
xchg
sub
xor
inc
scas
mov
fmul
inc
dec
int
cmpsb
mov
das
add
aaa
scas
sub
cmpsl
nop
into
sbb
push
jo
sub
subb
sar
pop
stos
pop
xchg
sub
add
jbe
orb
mov
xor
pop
pop
outsb
jecxz
jmp
jecxz
loopne
add
and
mov
sub
pop
test
mov
and
mov
test
loope
mov
xor
mov
add
push
iret
js
push
aas
fadds
out
addr16
adc
js
inc
scas
js
rol
scas
mov
orb
pop
inc
pop
jb
les
xchg
cltd
push
xorb
sbb
out
dec
repz
aas
in
test
loope
pop
pusha
add
fsubp
dec
mov
xor
cmpsb
jnp
inc
outsl
nop
mov
sbb
sub
push
cmp
rolb
mov
aas
stc
push
mov
mov
xor
xor
pop
or
push
pop
push
adc
push
add
pop
sbb
or
std
icebp
loope
fisttpll
fs
inc
dec
add
and
popa
pop
movsl
mov
inc
cmpsl
call
xor
pushf
fsubrs
loopne
jmp
cld
xlat
cli
adc
push
mov
pop
mov
ret
mov
push
pop
mov
or
scas
mov
pop
mov
daa
sub
push
lea
fiaddl
xchg
jg
movsl
xchg
data16
out
mov
sbb
and
push
js
dec
inc
lods
mov
imul
cmp
idivl
popa
leave
sub
and
gs
xchg
xor
inc
outsl
pushf
test
rcrb
je
dec
aaa
mov
call
das
xor
int
xchg
jecxz
sarb
and
out
mov
shrl
cmpsl
push
popf
lcall
inc
mov
insb
mov
pop
or
les
cmp
vmwrite
ror
add
cld
xor
push
nop
pop
jns
xor
mov
inc
or
xor
push
out
push
cmc
xchg
cmp
sbb
test
push
adc
cs
movsl
xchg
adc
stos
popf
cmp
clc
shll
fistps
nop
adc
push
int3
xor
jp
popf
icebp
add
adc
mov
nop
btr
daa
mov
dec
push
jbe
lods
ret
in
addr16
and
sbb
pushf
xchg
stos
pusha
mov
pop
adc
push
js
cmpb
mov
push
imul
rclb
lods
int
jl
addb
push
les
lret
aas
les
jmp
inc
adc
push
sub
cmp
pop
push
adc
mov
inc
es
add
aad
sbb
aam
ret
add
mov
movsl
inc
mov
push
push
sub
pop
pop
push
in
ds
rclb
adc
adc
cltd
push
out
scas
in
mov
aaa
jns
sub
sbbb
cwtl
mov
add
cmp
in
inc
jae
jle
and
stc
adc
sub
mov
scas
pop
and
and
mov
pop
fsubrs
out
scas
sahf
mov
push
shlb
adc
jp
fldenv
mov
pop
add
adc
out
ja
jp
add
mov
stc
rclb
pop
jo
fidivs
inc
popf
add
mov
push
xchg
adc
xchg
adc
les
xchg
push
loop
sub
jne
mov
mov
outsl
fists
repz
sbb
lea
inc
jb,pt
in
mov
sbb
jb
push
jo
enter
scas
cmp
rorb
scas
rcll
mov
data16
sub
jns
mov
out
dec
inc
out
dec
push
cmp
and
in
imul
lahf
jp
sub
cmp
je
inc
xor
dec
adc
popa
adc
jmp
mov
mov
xchg
xchg
arpl
xchg
pop
nop
nop
mov
inc
repnz
out
ret
push
insl
test
or
test
cmp
int
arpl
imul
repnz
lods
and
clc
clc
ret
loop
test
hlt
clc
cmp
mov
fwait
pop
xor
and
cld
push
fdivs
mov
push
bound
cmp
adc
loope
mov
clc
lret
dec
sub
sub
xor
cmpsb
mov
xchg
insb
xlat
loop
mov
inc
or
dec
repnz
cmp
jp
xor
fcomps
out
and
test
or
inc
adc
dec
mov
das
mov
ret
or
int3
sub
sbb
popf
hlt
xchg
shrb
pop
cmp
loopne
xor
adc
add
fs
mov
jae
sub
js
inc
test
cmp
xchg
xchg
ja
popa
cmpsb
iret
or
mov
push
sbb
out
mov
pop
scas
test
pop
pop
push
cwtl
sbb
dec
std
jbe
iret
xchg
jle
mov
mov
sub
stos
add
movsb
pushf
into
xor
sub
jle
enter
mov
xchg
dec
inc
stc
inc
imul
sbb
and
outsb
xor
sbb
arpl
inc
fs
and
int3
add
xchg
inc
les
sub
xchg
fstl
xor
xchg
xor
jl
fs
in
sbb
mov
and
addr16
mov
fisubrs
shlb
jp
mov
imul
dec
std
dec
iret
insl
nop
pmulhuw
push
and
fwait
lods
mov
test
jnp
mov
cmpsb
mov
mov
mov
data16
dec
push
push
cmp
clc
jmp
jno
mov
push
test
push
push
fimuls
inc
fwait
cli
mov
or
sbbl
dec
pop
push
nop
rclb
fsubr
xchg
or
leave
in
cmpsb
inc
or
fildll
loop
inc
cli
icebp
pop
or
mov
popa
stos
jmp
jle
fsub
sti
shlb
adc
mov
and
lea
sbb
clc
loopne
int
popf
fbstp
les
ss
movsb
push
push
and
fisttps
insl
mov
sbb
push
stos
leave
int
js
add
std
cmp
cmpb
mov
xchg
aas
out
nop
dec
aam
inc
xchg
and
xchg
mov
dec
dec
icebp
jae
cmp
pop
mov
shrb
jecxz
sarb
sbb
rcrb
or
pop
loopne
sub
cmp
cmp
call
sub
push
cmove
add
mov
es
dec
xchg
scas
mov
adc
scas
push
icebp
xor
cli
xchg
mov
jo
in
pop
or
mov
jle
sub
xchg
mov
jae
test
dec
pusha
sub
notb
inc
mov
adc
fdivl
push
imul
fwait
push
dec
or
and
iret
mov
test
stc
pushf
xchg
or
js
pop
cmp
sbb
xchg
adc
stos
or
dec
cmc
sahf
cwtl
mov
pop
push
arpl
mov
or
bound
adc
pop
push
xor
movsl
pop
mov
adc
mov
push
shll
aas
pusha
xlat
xlat
stos
cwtl
sub
lcall
arpl
movsl
ficoml
ss
iret
or
push
mov
shrl
fwait
ret
mov
sti
aad
out
nop
xchg
sbb
jge
popa
or
lods
pop
adc
pop
cwtl
in
ficompl
cld
mov
add
test
and
sbb
lds
push
outsb
out
repz
enter
lock
lock
ret
insl
jo
cmp
dec
cmp
jge
mov
sbb
mov
shl
inc
xchg
xor
aaa
mov
mov
inc
jmp
mov
aam
test
or
add
xlat
mul
cltd
xchg
lods
cld
test
std
xchg
out
addr16
inc
push
or
xlat
cmp
ja
and
xlat
mov
jle
push
adc
test
incb
jg
xor
push
inc
pop
and
and
lret
int
mov
or
popf
popa
out
inc
pop
push
lods
xor
sbb
out
cmp
sub
or
jp
pop
mov
mov
lahf
mov
jne
inc
lods
vpsubusw
push
lods
pop
divl
inc
rclb
push
into
add
and
xor
movq
aas
lea
loope
out
lods
movsl
add
jne
cmp
addr16
xor
push
mov
push
popa
ds
je
aad
repnz
add
adc
test
imulb
mov
js
loope
adc
xchg
sub
jne
sub
daa
push
add
pop
inc
dec
mov
add
outsl
dec
pop
das
xlat
sti
inc
lock
mov
movsb
std
or
addr16
std
pop
xchg
mov
push
push
xor
mov
fildl
sbb
xchg
test
xchg
stc
lret
mov
dec
popf
into
mov
ret
jmp
pop
lcall
loop
adc
pop
mov
fisttpll
cli
rcrb
mov
jge
mov
lcall
shlb
inc
loopne
push
push
push
dec
orl
loop
enter
xlat
jmp
or
cmp
adc
cmpsb
sbb
cmc
or
test
clc
dec
sbb
shrl
scas
mov
dec
out
sub
stos
add
bound
jnp
aas
mov
std
mov
shl
dec
jl
mov
dec
cmp
test
fstpl
lods
jb
iret
xchg
sbb
test
add
cmpsb
xchg
insb
cmpl
les
stos
iret
and
repz
xchg
lcall
add
cmp
notb
data16
sub
add
sbb
dec
cmp
aas
clc
js
pop
les
in
lret
call
mov
cmp
daa
ret
pop
and
mov
shl
cs
out
shll
cmp
into
subl
mov
clc
adc
das
or
sbb
cwtl
cmp
enter
cs
add
daa
call
xor
loop
movsb
cs
or
xchg
cmpsl
mov
push
dec
add
xchg
outsl
popa
sbb
jge
inc
inc
cmp
or
inc
scas
mov
pop
clc
mov
inc
into
in
out
or
bound
test
or
sub
aam
clc
popf
mov
mov
loopne
gs
jns
mov
fs
call
popa
xchg
incl
sub
enter
aad
jmp
fmull
leave
cmp
xor
adc
enter
je
aam
idivb
clc
ljmp
jne
lret
add
mov
pop
adc
hlt
faddl
add
jo
ja
in
xor
lock
loop
dec
dec
loopne
jmp
jae,pn
or
pop
popa
fcomi
dec
pusha
in
je
out
test
aam
repnz
push
sub
lret
or
leave
fnstcw
or
stc
push
jb
sub
scas
js
add
int
stc
pusha
pop
imul
push
lods
loope
enter
jo
loopne
sub
insb
mov
sbb
cmp
mov
jnp
aaa
xchg
stc
or
ja
push
lods
cmp
cmpsl
into
pop
lret
lcall
sub
mov
mov
sub
mov
push
aam
clc
xor
mov
adc
inc
xor
out
cmp
dec
in
push
jnp
mov
sub
mov
in
ss
fldcw
popf
mov
and
out
push
lea
mov
jb
xchg
pop
xor
sub
in
add
inc
mov
jg
dec
xchg
add
andl
push
mov
xor
cmp
xor
push
addr16
popf
sbb
jne
sbb
popf
das
cmc
push
xchg
or
lods
test
mov
loope
jecxz
jno
ljmp
pop
pop
lcall
mov
cmpsb
xchg
loope
jl
mov
sub
jnp
sysret
xchg
push
sub
test
mov
lds
cmp
xor
xor
push
mov
mov
jl
jmp
jmp
rorl
popf
shr
cmp
or
mov
cld
sbb
cmp
jns
push
sti
sub
fidivrs
adc
lcall
pop
inc
imul
mov
shlb
push
jmp
decb
xor
test
xor
rorb
sahf
pop
cs
das
mov
js
mov
mov
adc
sub
inc
mov
cli
adc
sub
inc
mov
fisubrs
jns
adcl
pop
mov
add
pop
ja
test
fdivrl
inc
sub
fcomi
xchg
xor
imul
adc
xchg
mov
lods
repz
mov
dec
mov
fidivs
sub
or
stos
xor
mov
sub
xor
pop
mov
dec
mov
xlat
dec
out
sub
xchg
adc
cmp
decb
add
dec
std
popf
lret
mov
sub
int
mov
pusha
xor
fwait
xor
mov
xor
sub
enter
xchg
hlt
lods
pop
ljmp
sbb
inc
push
lods
or
adc
fildl
imul
pushf
fstpl
enter
popf
je
mov
addr16
adc
mov
setno
push
add
lds
enter
or
or
insl
je
pushf
mov
jo
push
xchg
xchg
xchg
mov
in
pop
stos
push
xor
and
add
mov
daa
pop
inc
cmp
outsb
fdivrp
jecxz
sbb
je
shrl
cmp
pop
or
pop
jb
cwtl
add
jne
ja
jns
mov
in
in
pop
cmp
mov
xchg
stos
xor
loope
loope
and
bswap
lock
test
rcrb
sub
add
mov
shll
rorl
shlb
cmp
add
sti
cmp
mov
sbb
pop
jns
cmp
insb
xor
test
mov
push
push
mov
jbe
adc
mov
es
lret
jae
mov
mov
jns
adc
push
jno
stos
shrb
push
dec
in
aad
incl
push
mov
mov
dec
xor
mov
jg
lcall
stos
jle
int3
xchg
jo
fsubl
int
std
stos
jecxz
dec
insb
sbb
jge
inc
lods
fs
inc
incl
sub
or
adc
shrb
ret
mov
daa
sti
es
pop
loop
add
leave
cmp
xchg
and
faddl
mov
test
and
sub
adc
sbbl
into
mov
rclb
xor
xchg
inc
or
outsb
icebp
xchg
jmp
and
dec
in
xor
sbb
xchg
pop
mov
sbbb
shrl
mov
jp
inc
fs
test
icebp
lock
repz
sete
in
mov
dec
mov
mov
cld
xchg
outsl
add
loopne
push
addr16
inc
fs
jo
mov
push
push
xor
cmc
ret
mov
jmp
scas
enter
movsb
sub
flds
xchg
stc
xchg
in
xchg
jbe
sbb
mov
lret
insb
movsb
mov
inc
cmc
jg
cltd
xor
in
repz
mov
lods
cmp
mov
or
xchg
sarl
push
test
dec
iret
imul
and
jl,pn
mov
push
xlat
cmp
mov
or
ficomps
add
push
rcrb
pop
iret
mov
loop
dec
std
rcll
add
and
sbb
jg
dec
pop
dec
pop
std
sbb
sbb
negb
xorb
lea
push
ss
nop
fcoml
add
shll
xchg
aas
or
adc
andl
je
or
call
pop
jb
test
cmp
popf
movsl
or
sbb
pop
leave
es
sub
in
push
call
dec
cmp
xchg
rorl
cmc
dec
mov
mov
imul
pushw
add
mov
pop
sub
dec
jl
rorl
movsb
jp
push
mov
ret
out
adc
mov
rolb
jg
push
lock
mov
outsb
lods
xchg
pop
adc
xchg
cmpsl
xchg
notl
in
pop
or
scas
sub
scas
in
push
jns
rcr
lods
divb
fwait
enter
or
adcl
or
loope
loop
call
mov
shrb
js
dec
movsb
enter
ror
in
lcall
mov
sbb
fsubrp
movsb
or
pushl
pop
sbb
lea
pop
pop
in
inc
add
xchg
add
jae
loop
mov
dec
inc
adc
aad
mov
stos
dec
sbbb
cmp
cs
xchg
cmpsb
lds
aad
btc
mov
and
pop
sub
push
add
xchg
insb
add
add
add
clc
iret
jmp
enter
and
lock
or
mov
mov
movsl
into
push
aaa
dec
lods
pop
xchg
cld
icebp
mov
test
fcmovnbe
cmp
jg
xchg
add
mov
les
ds
inc
xor
jne
fs
out
aas
hlt
ret
js
ror
mov
lcall
aad
scas
jb
sbb
into
std
jg
mov
rcrl
and
sub
dec
or
jo
fdivrs
sub
cmp
fwait
push
imulb
push
jg
xlat
sbb
xor
or
lret
cmpsb
mov
sahf
mov
ret
and
and
js
or
lods
jb
xchg
in
and
jecxz
stc
xorb
enter
jno
out
in
in
das
lcall
inc
cmp
jl
mov
adc
roll
mov
daa
cmp
aam
and
dec
jo
js
mov
lods
mov
data16
jmp
add
push
popf
mov
push
pop
loope
in
icebp
mov
fadds
xchg
dec
add
fldcw
mov
outsb
cwtl
ret
into
fisttpl
pop
lret
xor
loope
stc
mov
mov
hlt
shll
xor
and
mov
cmp
dec
or
sar
inc
push
mov
and
in
mov
movsb
push
fldenv
in
aad
xchg
and
out
xor
mov
fidivl
clc
and
add
mov
ss
push
aas
insb
fcompl
aad
cmpsb
out
pop
sbb
clc
dec
sub
dec
fcmovbe
jnp
pop
jo
jmp
mov
gs
insb
popf
xchg
and
adc
add
out
dec
lret
jmp
push
or
mov
loopne
push
pop
push
mov
jecxz
xor
fidivs
dec
dec
addb
rorl
add
add
ljmp
or
jge
outsl
mov
and
pop
out
inc
ret
adcl
cmp
shrl
push
sti
rorb
ret
enter
cmp
push
pop
movsl
loop
xor
jge
fistpl
cmp
and
push
pusha
mov
push
and
lret
lret
xor
je
inc
leave
es
lea
push
or
enter
test
mov
or
mov
sub
cmp
rcll
jle
cmp
pusha
sub
sub
mov
pusha
ljmp
ret
sbb
sbb
cmp
ss
les
cld
sbb
xor
push
fists
out
rcll
mov
push
and
pushf
jnp
and
push
frstor
movl
cmpl
ljmp
dec
sub
jne
movsl
inc
sete
mov
ss
bound
xchg
sub
clc
add
sub
lods
mov
rorb
adc
ficompl
or
mov
mov
pop
sub
ljmp
push
push
sahf
adc
insl
js
xorb
imul
push
test
sti
xchg
or
roll
cmp
push
fs
xor
test
movsb
mov
ret
out
into
shll
mov
jns
cmpl
inc
dec
push
inc
jo
add
mov
xor
jle
clc
ja
rcr
fldcw
ljmp
scas
xor
inc
pop
dec
xlat
jns
fcmovne
mov
hlt
mov
loopne
loope
and
in
idivl
pushf
push
movsb
stos
cld
mov
cmc
or
movsl
sbb
xchg
aas
data16
mov
push
or
add
xchg
cmp
jmp
mov
jge
inc
jb
cltd
shrb
pushf
xchg
inc
icebp
push
mov
add
cs
js
jne
push
or
outsl
in
mov
lret
cltd
fisubrl
adc
test
dec
lds
incb
rcrl
iret
repnz
and
mov
cmp
bswap
test
jno
ljmp
hlt
or
xorb
sub
pop
mov
or
jbe
lods
clc
pusha
mov
inc
push
push
fidivrs
xchg
xchg
and
fldenv
fcomp
jp
fistpll
mov
cmp
xor
sub
xchg
mov
mov
lds
fmull
dec
test
jae
jle
dec
popf
lcall
lret
xchg
and
and
add
mov
imul
jp
pop
push
out
push
xor
inc
pushf
pop
ljmp
fsubl
fnstsw
leave
lahf
xchg
pop
clc
negl
add
mov
and
cmp
pop
jle
cmpsb
mov
movsb
adc
jnp
mov
js
inc
pop
fcomps
aad
mov
outsl
mov
jl
pop
pusha
mov
push
icebp
std
xor
das
cmp
scas
fisttpl
arpl
xchg
aaa
in
or
std
rolb
test
hlt
mov
jnp
pop
cmpsb
enter
mov
fnstsw
push
stos
ret
repnz
pop
push
and
sbb
fbstp
pop
and
push
dec
dec
cs
xor
push
push
repnz
cmp
cwtl
mov
pop
test
sbb
call
xchg
fmull
push
call
or
out
or
sub
xor
lea
push
or
push
or
test
push
mov
add
pop
mov
mov
cld
add
pop
ljmp
xchg
addl
insb
imul
sbb
cltd
cmp
add
test
shll
jae
ja
xlat
mov
rclb
std
xchg
push
loope
leave
sbb
test
and
xchg
test
push
arpl
in
insb
xchg
enter
jbe
mov
inc
xor
out
or
cmpsb
pusha
pop
mov
or
fsts
mov
outsl
cli
push
daa
aas
std
jo
add
sub
push
stos
sbb
bound
js
sbb
adc
fisttps
orb
gs
push
pop
std
xor
jecxz
sub
fs
in
mov
or
fisttpl
add
nop
aas
xchg
cld
dec
in
jns
or
mov
jb
cltd
je
inc
stos
pop
fdivs
add
or
mov
add
sbb
xor
or
and
fdivl
lcall
repnz
push
jg
insl
nop
aaa
dec
clc
push
adc
fnsaves
pop
shll
imul
pop
fwait
js
cmp
pop
sbb
dec
sbb
sub
outsl
lea
jae
fneni(8087
xlat
or
mov
jl
addr16
in
mov
pop
testb
cmpsl
adc
loopne
ret
and
cld
mov
sar
mov
inc
ljmp
jae
xchg
jp
add
xchg
jbe
sarb
dec
idivb
jno
movl
sub
fmul
rcrb
aad
dec
mov
mov
push
push
lds
imul
cmp
pusha
fadd
out
test
lods
add
adc
enter
cmp
popf
jp
add
jne
adcl
jmp
clc
imul
sbb
cmp
mov
call
adc
dec
mov
mov
or
dec
aas
xchg
mov
mov
inc
mov
and
add
pop
jno
xchg
dec
add
xlat
and
add
add
jo
sbb
enter
popf
adcb
aad
sahf
mov
jnp
ds
pop
cmc
mov
cli
shlb
push
inc
das
js
jno
mov
enter
mov
xchg
xchg
push
push
dec
sahf
add
xchg
in
ljmp
add
dec
xor
pop
rol
mov
mov
and
imul
out
gs
xchg
inc
in
inc
lret
xor
icebp
sub
lods
movsb
fwait
mov
outsb
imul
ficomps
es
cmp
lods
aas
out
sub
xchg
out
popf
pop
xor
xchg
out
sbb
xor
push
daa
outsb
xor
push
mov
pop
hlt
enter
mov
jo
leave
andb
xchg
cld
fsubrl
sbb
sub
movsb
jp
pop
sti
xor
ds
insl
pop
mov
xchg
call
shr
or
les
stos
or
xor
push
inc
movsb
ja,pt
mov
cmp
loopne
mov
and
dec
adc
cs
xchg
out
jns
cmpsb
xor
outsb
pop
xchg
push
mov
adcl
inc
adc
mov
cmp
mov
out
pusha
fwait
mov
and
jo
jns
lret
push
xchg
int
jle
pushf
and
add
jecxz
xor
jmp
sbb
xchg
jno
imul
mov
je
enter
fisttpl
in
divb
jne
ret
jb
mov
dec
push
flds
jbe
bnd
pop
les
aaa
into
arpl
xbegin
iret
sbb
std
and
lods
adc
mov
lods
das
fcom
cs
sbb
and
inc
xchg
sti
jp
mov
and
fstpt
xchg
leave
test
mulb
pop
mov
rorb
push
mov
shll
sub
call
ljmp
add
enter
lods
pop
sub
flds
xor
ljmp
sbb
mov
mov
aaa
dec
mov
orl
sub
xchg
shll
add
int3
outsl
sub
loope
mov
add
xor
cmp
dec
push
dec
push
popa
jle
jmp
leave
mov
xchg
faddl
loope
sahf
imul
push
ret
xchg
cld
sbb
jne
mov
dec
addr16
inc
or
in
xor
sbb
push
mov
repz
lret
jnp
xlat
nop
xor
aam
xchg
es
jnp
and
and
in
xor
adc
daa
data16
gs
inc
mov
push
cmc
adc
jo
repnz
pushf
cmpsb
jmp
clc
sahf
cs
mov
add
loop
push
in
subl
ss
rorb
push
sahf
push
jb
in
xchg
mov
push
out
aas
push
push
cs
popf
lret
mov
cltd
mov
and
lcall
in
xchg
xchg
adc
or
jnp
xchg
fcmovnbe
jnp
sub
mov
les
push
imul
sbb
xchg
outsl
fistpl
loopne
jp
js
lock
jmp
adc
xor
sbb
aas
pop
pop
cmc
push
mov
aas
cmpsl
sbb
sbb
mov
ss
mov
cmp
sub
pop
adcl
fisubs
ret
mov
nop
inc
jbe
push
and
rclb
cmp
in
xchg
inc
int3
or
push
and
and
sub
adc
and
lret
jmp
push
dec
xchg
xorl
inc
xchg
cltd
stos
push
and
mov
fxch
cmp
shrl
sahf
fst
fwait
pushf
sbb
push
push
push
insl
mov
pop
mov
pop
js
pop
lea
sbb
lret
nop/reserved
stos
je
rcll
outsl
pop
repnz
adc
mulb
mov
sub
inc
notl
hlt
pop
pop
mov
sub
mov
mov
jno
fmul
mov
ficomps
cltd
add
xlat
out
inc
call
add
and
ficompl
jmp
lods
stos
cmp
pop
out
fcoms
xchg
or
pop
int3
dec
in
pop
pushf
ja
out
ja
test
cmp
push
cmp
push
mov
or
fnstcw
jmp
fildll
inc
std
out
pop
jmp
aad
shll
push
xorl
leave
sub
cmp
insl
imul
pop
ret
push
lret
mov
aaa
or
mov
inc
mov
aam
mov
add
mov
cmpsl
mov
shll
imul
xchg
or
hlt
xor
push
daa
mov
andb
mov
push
sti
in
xchg
sbb
fldcw
mov
scas
jmp
in
mov
cltd
lods
repnz
lret
sbb
imul
xor
and
lea
fs
fcomps
sbb
sti
jb
push
sbb
inc
fisttpll
mov
outsb
ret
je
fldenv
pop
test
jmp
jl
mov
std
arpl
icebp
mov
fwait
in
cmpsb
mov
cmp
xor
out
mov
inc
scas
mov
in
data16
mull
lcall
loop
sub
push
cli
je
dec
ja
sbb
insl
aad
sub
pop
sbb
subl
popf
mov
imul
lahf
push
roll
dec
cli
shll
mov
dec
sbb
jle
add
sti
lcall
or
fs
or
xorl
xor
jbe
out
aad
call
dec
lret
rcr
pop
into
jnp
jecxz
mov
jl
or
aaa
xlat
sti
outsb
sub
push
mov
cmpsl
movl
mov
jg
cs
lods
sub
cld
scas
mov
push
nop
and
popf
or
xorl
push
jmp
xchg
arpl
and
dec
cmp
daa
jb
imul
iret
push
jecxz
sbb
je
push
or
call
or
jno
or
data16
jecxz
fbstp
sub
cmpsl
cs
pop
adc
sub
xor
fsqrt
xchg
test
sahf
fsubl
fcmove
cmc
fsubrl
sbb
mov
hlt
fndisi(8087
andl
in
fadds
push
mov
popf
daa
mov
fwait
insl
test
scas
sbb
or
mov
scas
xchg
xor
push
pop
push
cli
push
cmp
cmc
in
and
inc
mov
loope
pop
jo
inc
sbb
jge
test
ss
cmp
mov
ret
in
jbe
adc
decl
push
cld
pop
xchg
xchg
mov
xchg
xchg
cmp
out
imul
popf
std
and
test
pushf
popf
pushf
je
mov
xor
mov
into
addl
sub
gs
sub
jbe
cmp
mov
mov
mov
les
sbb
enter
pop
loopne
filds
or
and
in
pusha
mov
lret
xchg
push
daa
out
push
mov
dec
movsl
xchg
mov
fistl
xchg
sub
jne
out
xor
lahf
fsubr
scas
jne
das
cmp
fsubs
xchg
inc
push
pop
inc
mov
sub
push
je
push
sbb
outsb
cmp
aad
inc
cli
mov
pop
imul
subl
cmp
cli
push
inc
int3
insb
clc
mov
call
stc
jmp
stc
sub
cmp
xor
repz
jae
mov
int3
mov
mov
dec
popa
xor
loop
sbb
enter
mov
cmpsb
insl
mov
movsl
dec
loopne
cmp
ja
pushf
adc
dec
or
pop
xor
int
test
xor
mov
inc
ss
clc
dec
subl
repz
lea
xor
jmp
jle
fcomi
test
pop
shll
mov
dec
lds
jmp
mov
mov
jg
or
cs
mov
push
es
pop
or
ss
test
jo
adc
cmc
lock
sub
adc
sbb
push
lds
scas
fisttps
pop
jno
cli
sub
push
in
in
leave
sbb
clc
addr16
enter
mov
fdivrs
lcall
lahf
mov
lcall
shll
inc
es
jbe
subl
leave
fwait
or
jg
pop
test
fbld
adc
jmp
dec
cli
aad
bound
xchg
dec
ss
lea
cmpsl
pop
inc
pushf
outsl
xchg
or
xor
jbe
outsl
dec
mov
dec
and
xchg
and
leave
xchg
add
lcall
or
loop
cmpsb
dec
ljmp
xor
xchg
adc
xchg
sub
cmp
nop
int
xorl
adc
hlt
lock
movb
mov
insl
or
andb
jnp
inc
and
xchg
andb
cli
addr16
add
xchg
shr
and
mov
dec
outsl
inc
lods
fidivl
inc
push
idivl
loop
vmread
das
pop
and
cmpsl
ja
pop
mov
mov
es
and
jae
pop
fs
jmp
pop
sub
shrl
and
mov
ja
push
push
idivb
mov
lods
pushf
xchg
jmp
dec
mov
xor
add
in
add
add
or
sti
lock
pop
das
mov
mov
sub
cs
pop
data16
in
adc
dec
scas
fmuls
js
pop
out
outsb
pop
out
lods
jno
std
mov
repz
mov
and
outsb
mov
mov
pop
mov
mov
inc
test
xchg
xor
shlb
mov
movsb
std
push
insb
mov
dec
inc
sar
add
push
adc
insl
push
mov
insb
popf
cld
mov
adc
bound
test
pop
mov
lods
xchg
xor
lret
inc
sbb
mov
ds
cmp
xor
xchg
fmuls
dec
add
fdivs
xor
test
insb
pop
mov
mov
mov
bound
sub
inc
repnz
stc
fildl
jne
ret
popf
cmc
daa
test
xchg
cs
xchg
push
or
loopne
jge
jmp
push
stos
sahf
pushf
mov
sub
sbb
mov
iretw
mov
repz
divl
std
mov
outsl
mov
mov
int
loopne
fnstcw
and
xor
insb
jns
jg
ja
add
loope,pn
out
sti
xchg
mov
test
test
push
in
mov
cmpsb
lods
or
cmpsb
mov
push
cmp
adc
jno
outsb
movsl
gs
rcl
mov
cmp
mov
pop
ret
out
frstor
jno
andps
popa
or
or
and
mov
xchg
sub
loop
dec
xchg
fsts
and
es
jo
jecxz
jmp
mov
pop
xchg
arpl
adc
cmp
int3
data16
or
and
push
lock
ficoms
adc
sbbb
enter
dec
jg
repz
ret
cmpl
jp
xor
adc
push
pop
lret
mov
mov
and
and
leave
cli
jmp
and
or
ja
aaa
xchg
ja
pop
loope
data16
sbb
or
push
mov
aad
xchg
mov
pop
sbb
negb
or
jnp
fnstenv
in
in
mov
lea
outsl
or
mov
adc
nop
cmpsl
mov
dec
mov
xor
mov
scas
addb
sub
cmp
test
icebp
mov
pushf
jns
ss
ja
sbb
and
sbb
mul
adc
outsb
rclb
sub
test
aam
adc
inc
idivl
int3
cmp
addr16
nop
mov
jne
out
mov
xor
mov
ds
mov
shrb
cltd
repnz
mov
lret
outsb
ret
in
rcr
add
cwtl
inc
inc
adcl
std
in
sub
je
add
mov
es
jle
mov
andb
ret
mov
cltd
push
and
syscall
sbb
jmp
cmp
cmp
loopne
inc
sbb
test
xor
hlt
jl
xchg
int
mov
push
fs
sub
inc
xor
adcb
xchg
ja
testb
loopne
loope
xchg
imul
jle
popf
mov
lods
repnz
outsb
push
fdivp
stc
and
push
xchg
and
out
fsubrl
mov
sarl
add
push
push
ja
idivb
leave
aam
dec
or
addr16
icebp
shll
adc
rol
pop
aam
inc
mov
lret
inc
insl
and
stc
dec
cmp
mov
mov
stos
xchg
repz
mov
add
cmp
jnp
or
in
sub
xor
cmp
push
sti
or
jle
pop
or
jb
sti
push
xchg
add
pop
or
negb
pop
push
je
sti
addr16
sub
add
scas
aaa
add
mov
dec
lods
int3
inc
xchg
in
pop
cmpsl
mov
add
or
mov
lahf
add
xor
lea
ficompl
cmp
cltd
adc
cltd
mov
push
std
outsl
sub
sahf
popf
jge
fwait
xor
mov
cmpsl
pop
xchg
daa
xorl
adc
xchg
inc
pop
flds
cs
pop
push
mov
rclb
jmp
adc
stc
jge
dec
sarb
mov
jecxz
push
out
negb
insl
ret
arpl
shrd
insl
jle
fsubp
pop
push
xor
dec
cli
jmp
mov
in
int
mov
adc
mov
addr16
mov
daa
ljmp
imul
or
pop
cmp
andl
call
cmpsl
pand
or
mov
add
lock
aam
das
shlb
and
adc
cmp
xchg
stos
dec
js
xor
sub
pop
pusha
xchg
scas
out
ja
jg
in
mov
and
dec
and
adc
xor
lret
icebp
sbb
sub
or
jnp
dec
stos
push
aad
xchg
jl
xchg
mov
xlat
mov
inc
mov
mov
das
into
scas
push
pop
pop
into
cmpsb
push
or
xlat
push
pop
dec
jae
addb
adc
xor
mov
dec
xor
xlat
jle
add
xor
xchg
sar
lret
fbstp
lret
mov
test
sbb
test
adc
jp
filds
int
xchg
xor
dec
dec
movl
mov
lcall
push
adc
or
sbb
data16
scas
daa
ljmp
sarb
mov
cmpsl
mov
ret
push
mov
jg,pn
loop
pcmpeqd
push
dec
mov
push
and
push
pop
push
ljmpw
sbb
jb
or
cmp
mov
lcall
negb
jp
adc
sbb
xchg
pop
adc
int3
or
fsubp
jb
lds
jnp
movsl
mov
sbbb
test
and
jnp
or
popa
loope
mov
nopl
sbb
adc
xor
iret
test
repz
in
ljmp
cmp
shr
jbe
cmp
dec
mov
sti
movsl
mov
sbb
or
add
dec
lds
mov
adc
or
stc
mov
hlt
push
aas
cmp
lock
push
das
mov
inc
popl
imul
dec
add
push
lret
mov
xor
jg
test
push
orb
out
rcrl
jp
push
push
dec
xor
pop
pop
jne
jnp
dec
cmp
icebp
xchg
push
lret
push
fwait
icebp
leave
pushf
xchg
stos
ljmp
inc
repz
mov
pop
ret
fldl
mov
xlat
in
or
pop
cmp
rcll
in
xor
lods
pop
movsb
jno
mov
xor
sub
lret
outsb
outsb
jecxz
mov
cmpsb
jnp
fistpl
or
rolb
cmpb
out
and
addb
sub
sub
and
push
xchg
pop
xor
dec
cld
insl
lcall
movsb
pop
jle
pop
lret
mov
jo
in
dec
sbb
mov
test
leave
outsb
aas
cmp
movsl
xchg
and
leave
adc
cmp
xchg
testl
and
xchg
inc
and
push
jge
daa
or
xlat
push
rorb
mov
dec
xlat
subb
sahf
mov
jecxz
addr16
lret
mov
cmpsl
mov
stos
adc
push
ret
rorl
dec
sti
and
insb
mov
cmp
sub
pop
inc
or
dec
lret
lds
scas
pop
jae
adc
shrb
pusha
push
nop
incb
in
mov
shlb
push
xchg
mov
lods
sub
push
xlat
mov
mov
adc
ficoml
adc
pop
int3
out
mov
cmp
pop
stc
mov
lahf
xchg
fnstsw
dec
dec
dec
ds
sub
cmpsl
mov
shrb
and
lret
pop
mov
mov
mov
cmp
test
push
int3
pop
add
mov
xchg
lahf
xchg
fnstsw
mov
loop
push
pop
call
pop
fidivs
addr16
add
jbe
mov
testb
sbb
sbb
mov
push
dec
cld
mov
decl
arpl
jbe
jo
push
inc
movaps
add
inc
je
or
ret
lods
leave
sub
aad
sbb
and
sahf
jmp
jae
jl
push
mov
mov
in
mov
mov
jmp
cmpsb
sub
ja
pop
pop
or
lods
leave
mov
in
mov
sbb
mov
xchg
sbb
pusha
cmc
push
les
and
mov
jbe
inc
inc
mov
lock
push
ror
jmp
jmp
jae
dec
mov
pop
xchg
pop
mov
cltd
pop
mov
add
push
sbb
outsl
sub
or
not
jns
mov
testl
repz
dec
add
or
add
adc
xor
fdivrl
and
loopne
pop
xchg
leave
fistpl
and
add
push
cld
or
sub
pop
mov
add
flds
and
or
shlb
scas
pop
lods
mov
jae
repz
les
jno
fucomp
mov
sub
fwait
stos
out
add
mov
iret
sub
cltd
fsubs
mov
fbld
push
xchg
mov
push
cwtl
imul
outsb
sub
mov
in
cmp
adc
jmp
in
fldlg2
push
jmp
sbb
cmp
lea
daa
jns
push
xchg
out
mov
jne
test
fisttpll
mov
cmc
cli
enter
fistl
mov
pop
or
outsl
cmpsl
xchg
adc
and
mov
loop
or
rorb
adc
inc
jne
mov
mov
daa
loopne
push
cmp
mov
shrb
daa
lcall
les
popa
jae
enter
aam
movsb
jp
in
xor
adc
inc
jo
push
lods
sub
fdivrl
imul
and
test
mov
pop
stc
adc
sub
dec
fisttps
leave
sbb
sbb
jecxz
pop
ljmp
aam
in
cmpsb
adc
or
jo
sbb
and
daa
decb
call
bound
cmp
inc
in
popa
mov
insl
fistpl
test
aam
mov
jecxz
adc
or
xor
mov
jmp
daa
fcmovnbe
mov
pop
insb
aaa
adc
mov
subl
es
fadds
ss
repz
sbb
rolb
mov
cmpsb
test
test
jns
mov
push
rolb
fisttpl
inc
adc
test
xchg
cvttps2pi
sub
pop
sub
jae
ret
push
jns
and
out
dec
sub
test
jb
and
pop
sbb
pusha
cwtl
jae
pushf
cld
je
or
stos
mov
xchg
inc
pop
jns
outsb
and
mov
or
test
cmp
dec
and
subl
jle
gs
push
mov
pop
push
sbb
hlt
xor
imul
icebp
jae
fisubrs
xchg
cmp
mov
add
push
cmp
push
dec
aam
pop
mov
xor
nop
xchg
cmp
lret
jne
loope
cmp
test
mov
stos
push
mov
popa
loop
repnz
test
jg
jb
inc
and
inc
jle
pushf
rcll
stos
dec
sbb
pop
mov
imul
pop
pop
or
subb
inc
cmp
sbb
jae
dec
inc
mov
aaa
mov
notb
pop
repnz
lods
stos
lret
sub
pop
fsubrl
andl
sbb
dec
aas
jns
out
mov
jg
ror
push
mov
dec
or
mov
shlb
inc
lret
pushf
aas
stos
aam
movsb
ret
sti
stc
fmul
sub
fists
sub
jmp
push
fabs
pop
clc
cld
movsl
enter
into
pop
cmp
insl
push
je
xchg
dec
xchg
daa
lea
xor
sbb
cwtl
mov
cmc
les
jns
ljmp
add
jl
aas
insb
daa
mov
test
insl
jns
lock
lret
add
aaa
push
ds
shrb
imul
pop
xchg
xchg
mov
push
das
and
and
pop
fistps
test
push
hlt
js
bound
and
and
outsl
movswl
js
fisubs
pusha
inc
xchg
nop
loopne
mov
xchg
ja
push
pop
jl
or
cmc
push
push
and
pop
in
jecxz
cmc
cmp
stos
fistpll
adc
xorb
mov
in
push
inc
pop
adc
xchg
in
repz
imul
ds
movsl
inc
ss
repz
mul
xorb
leave
setae
cmpsl
in
ds
icebp
jb
movsb
mov
aam
lds
pop
jmp
mov
add
push
mov
push
fldcw
pop
sub
mov
push
and
mov
mov
cmp
xchg
loope
inc
nop
xchg
stos
idiv
sub
sahf
popa
test
cmpl
dec
loopne
adc
push
dec
mov
call
outsl
xchg
push
xchg
lret
stc
cmpsb
lret
scas
pop
push
mov
shrb
mov
jmp
xlat
popl
dec
cld
aam
mov
mov
mov
mov
arpl
mov
sub
aam
add
xchg
and
lock
adc
popf
dec
cmc
lods
and
jbe
dec
in
cmp
rorl
mov
pop
aad
or
outsl
cmp
push
push
xchg
xlat
pop
test
fisttpll
frstor
ja
xor
and
xor
sbb
rorl
ja
sbb
pusha
xchg
and
dec
in
and
repz
inc
out
movsl
lcall
or
outsb
fbstp
iret
scas
sbb
mov
jns
mov
adc
sbb
adc
ret
int3
jne
ret
rorb
xchg
jo
out
dec
and
stc
push
cs
inc
xchg
dec
push
pop
mov
lea
xlat
aad
leave
mov
push
test
out
outsb
mov
xchg
pop
movsl
adc
adc
pusha
int3
xor
inc
cli
sbb
mov
jae
loopne
scas
je
fdivl
xchg
rol
xor
aam
or
sub
cmp
ja
stc
xor
adc
lock
jb
inc
loope
mov
inc
imul
sahf
inc
call
fisttpll
insb
mov
sti
je
xchg
sbb
jle
scas
add
out
mov
lcall
cmp
inc
cmp
test
add
jo
fwait
sahf
pop
out
mov
lock
mov
not
call
cmc
movsl
daa
xchg
mov
cmp
mov
xchg
or
aam
test
mov
mov
mov
lea
mov
imul
daa
in
mov
and
sbb
leave
inc
lahf
movsb
jle
movsl
and
xor
sub
inc
fs
popf
in
inc
aad
xor
mov
jge
push
add
jmp
jno
sti
mov
out
popa
jmp
xchg
add
vmovntpd
mov
xor
aas
xor
into
loop
outsb
mov
xchg
imul
in
mov
stc
add
addl
mov
rolb
xor
roll
fmul
loopne
test
inc
sub
cwtl
call
or
fldl
sub
not
push
xor
int
inc
insb
inc
mov
cmp
rclb
ds
lret
pop
mov
sub
inc
cmpsl
in
jmp
shlb
push
mov
addl
and
jo
aaa
and
mov
mov
sub
xchg
sbb
or
add
ljmp
in
pop
jnp
movsl
cli
aam
xchg
popa
and
xor
pop
psubd
or
xchg
adc
mov
arpl
mov
stos
mov
ds
xor
ljmp
sub
mov
and
jo
sbb
clc
out
jl
test
mov
push
movsb
push
ljmp
cmp
and
imul
cmc
clc
outsb
sbbb
loope
add
xchg
push
leave
les
inc
and
rcrb
ss
sahf
lods
inc
dec
inc
pop
imul
adc
xchg
call
mov
lods
xor
rclb
adc
fiaddl
fstps
or
sarb
stc
jne
dec
mov
fcmovne
xchg
push
pusha
js
rcll
and
loope
or
sub
mov
cmpsl
std
and
xchg
push
mov
sbb
sti
sbbl
mov
aaa
or
ljmp
test
adc
jl
js
dec
les
dec
push
addr16
mov
ficomps
and
aam
push
adc
or
cltd
xchg
lods
testl
mov
sub
shl
mov
xor
aas
stc
test
mov
call
pop
mov
lret
out
push
add
adc
outsb
push
xor
pop
imulb
pop
loope
scas
push
bswap
loope
inc
mov
pusha
xchg
fs
mov
xor
pop
movsb
aam
cli
es
fbld
ljmp
std
pop
push
out
or
dec
cmp
sub
imul
inc
dec
punpcklbw
cmp
and
test
jmp
and
stos
sbb
adcl
mov
lods
outsb
out
add
jno
add
pusha
jo,pn
dec
bound
lcall
push
sbb
sub
gs
ret
cli
adc
sub
and
arpl
or
das
cs
push
xchg
sbb
jl
es
pop
inc
insl
inc
js
ja
mov
and
push
jmp
ljmp
nop
lds
bound
movsb
fwait
jb
js
or
xchg
mov
mov
in
inc
pop
xchg
les
adc
lcall
sub
push
clc
stc
sub
fildl
mov
imul
jle
jb
icebp
shll
jmp
and
inc
xchg
dec
jl
in
jae
jge
jns
fiaddl
repz
fldenv
mov
xchg
mov
push
push
xor
xor
adc
lret
popf
nop
sarl
loopne
loope
adc
call
inc
mov
xchg
cmpsb
out
movsb
add
mov
adc
outsl
adc
and
mov
sbb
adc
dec
mov
add
pop
pushf
push
clc
in
fadd
or
pop
lea
pop
dec
lods
dec
mov
push
xchg
and
fldcw
mov
imul
fsub
iret
adc
push
push
xorl
sahf
test
dec
js
pop
pmuludq
or
sbb
repnz
loope
lcall
push
adc
and
or
xchg
or
mov
icebp
pop
inc
out
pusha
xchg
mov
mov
adc
mov
jl
lods
sbb
jno
ss
or
xchg
jmp
lods
xchg
adc
popl
cmp
adc
in
fidivl
jle
pop
shr
mov
push
addb
out
sub
rcl
shlb
push
outsb
lea
lock
das
xor
fsubrp
xchg
enter
sub
clc
loope
inc
jno
negl
pushf
push
js
dec
and
xor
or
push
sbb
lcall
movsb
jbe
cs
movsl
enter
pop
call
pop
push
lcall
and
testb
inc
push
ljmp
sbb
gs
jle
mov
push
cmp
mov
xchg
rcll
pop
or
xor
sbb
inc
sub
js
sbb
and
cld
jne
push
scas
or
jg
aam
push
xchg
clc
sti
cmpsl
add
cltd
lcall
cmp
adc
leave
mov
shl
out
and
lahf
mov
mov
pop
rol
sbb
and
cmp
sbb
push
test
rep
xor
cmp
ficomps
cld
xchg
mov
mov
inc
adc
mov
adc
mov
xor
rorb
scas
push
aas
cli
or
xor
out
lea
sbb
mov
into
or
iret
sub
xorl
cmp
mov
aad
jecxz
mov
popf
sbb
stos
ljmp
and
test
pop
jae
stc
pop
lahf
test
pop
xchg
pop
call
lcall
popa
out
or
in
movsb
cwtl
cmp
out
dec
lock
insl
pop
fisubrs
xorl
sub
inc
movsb
inc
dec
xlat
jg
xchg
jbe
jnp,pt
dec
dec
ret
in
mov
test
lods
stos
cmp
out
jnp
push
inc
mov
data16
dec
je
outsb
mov
imul
loop
or
mov
dec
jnp
pop
lods
in
dec
icebp
scas
and
cmp
hlt
les
sahf
lret
in
sbb
cmpsl
cmp
xor
pop
mov
jo
xchg
sub
fildl
sub
inc
push
stc
pop
inc
int3
std
out
fbstp
cmp
xchg
cmp
aas
out
aad
mov
push
jl
outsb
scas
cltd
mov
jns
lods
fs
lods
mov
dec
push
stos
adc
pop
xor
ret
mov
mov
jge
in
push
jo
test
mov
pop
mov
loopne
lds
dec
aas
js
adc
sbb
bswap
inc
xor
push
fs
xor
fsubrs
ret
lods
xchg
and
lahf
mov
rol
rcl
jg
sbb
out
push
cmc
shrl
rol
cmp
sti
loopne
add
cmp
dec
adc
mov
lret
movd
cwtl
fildl
test
pop
inc
cmp
shlb
int3
jbe
clc
push
xchg
lea
mov
cmp
push
cmp
cli
cmp
lcall
cmc
and
shr
movsb
stc
test
fsubs
inc
add
and
cwtl
out
sbb
stos
out
mov
jp
mov
clc
test
ret
dec
pop
push
adc
aad
mov
scas
cmpsl
jecxz
movsl
adcb
mov
ss
push
xlat
add
inc
push
sbb
or
lret
sbb
out
fidivs
roll
and
fwait
sahf
in
jle
xlat
and
addr16
dec
adc
push
stos
insb
ja
inc
sub
scas
sbb
rcr
movsb
mov
push
loopne
pop
out
mov
pop
addr16
cmpsl
sbb
shlb
pop
das
xchg
cs
rclb
inc
jle
jo
and
sbbl
push
pop
xor
cld
movb
lock
sbb
leave
rolb
es
in
mov
add
mov
pop
or
mov
cwtl
pop
shl
test
out
xor
adc
scas
inc
std
mov
jmp
enter
pop
adc
ljmp
push
or
les
xlat
or
movsb
ja
fimuls
jmp
and
mov
jbe
lahf
in
push
push
dec
popa
mov
test
pop
nop
incb
decb
sub
mov
out
lods
lret
lcall
mov
iret
enter
das
outsl
outsb
xchg
repz
mov
mov
rol
cmpsl
jmp
dec
sbb
ss
inc
cmc
dec
add
inc
in
lret
and
push
std
dec
subl
fcompl
dec
inc
sbb
das
inc
mov
outsl
dec
arpl
in
pop
and
in
lcall
dec
or
ja
stc
mov
xchg
push
dec
hlt
ljmp
mov
sbb
test
jmp
ret
add
xor
mov
aad
sbb
jns
xorb
adc
iret
mov
stos
mov
repnz
or
int3
push
gs
out
pop
pushf
loop
inc
popf
pop
mov
aaa
add
xor
aad
or
mov
aaa
and
xor
jecxz
dec
sbb
pop
std
jne
push
cmpsl
mov
adc
data16
mov
es
xorb
pop
std
scas
fldl
lods
movl
mov
ljmp
outsb
shrl
dec
jge
in
out
rcl
sti
leave
cltd
sub
dec
gs
repnz
jae
leave
mov
testb
mov
add
xor
mov
sbb
sbb
xchg
call
pop
negb
xor
ja
xor
xchg
jb
dec
mov
xor
movsl
xchg
mov
jns
adc
cmp
sbb
pop
out
sub
fidivrs
xlat
and
adc
inc
mov
mov
adc
lock
je
jmp
icebp
dec
push
iret
or
pushf
inc
cld
xchg
mov
adc
clc
pop
movsl
test
js
add
in
cmpsl
cmpl
or
bound
jb
or
and
sbb
mov
pop
popa
dec
xchg
inc
mov
dec
iret
sbb
js
cmp
or
mov
inc
sbb
xchg
inc
sub
leave
and
loop
jns
inc
mov
bound
imul
and
dec
push
and
lcall
cmp
push
sbb
pop
cmp
push
push
mov
jns
pop
into
xlat
cwtl
ljmp
pop
jmp
xor
lds
mov
data16
std
in
scas
loopne
imul
pop
fdivs
popf
adc
rcl
push
dec
daa
scas
xchg
or
jg
lods
mov
or
fwait
fwait
arpl
cmpsb
add
mov
pop
insb
push
add
mov
fsubrs
in
xor
test
add
stc
nop
fucom
fisttpl
cmpsl
scas
mov
gs
imul
ficomps
imul
push
loopne
aas
cmp
ja
insb
inc
dec
inc
cmp
sub
pop
test
xor
imul
sahf
out
in
or
repz
sbb
popf
and
lcall
mov
movsb
das
xchg
rclb
sub
sbb
and
lahf
ljmp
pop
jecxz
dec
adc
push
lds
xchg
sub
xchg
xor
test
subl
pop
popl
jmp
mov
mov
jae
xor
adc
mov
push
sub
or
es
mov
cmpsl
jl
jnp
popa
sti
repnz
mov
or
jg
xor
add
xor
enter
dec
inc
test
jg
mov
add
pop
inc
push
mov
fnstsw
adc
push
sub
inc
into
xchg
inc
clc
inc
mov
pop
pop
add
sub
pop
push
dec
pop
aam
or
inc
jae
cwtl
rcll
cmpsb
movsl
flds
loopne
pop
cwtl
dec
add
mov
add
outsb
mov
pop
scas
call
push
xor
addb
jecxz
xchg
push
data16
sub
xchg
rorl
fisubrl
arpl
loopne
mov
aas
std
scas
cmp
inc
push
mov
out
out
or
testl
lock
pop
movsl
aad
es
fcmove
jns
in
cltd
cmp
into
mov
mov
sub
mov
dec
ficoms
sbb
dec
sub
pop
ds
push
cli
and
lds
mov
adc
stc
lahf
ljmp
mov
push
test
lea
mov
jbe
mov
pop
in
mov
mov
lods
mov
mov
and
pop
loop
enter
in
and
adc
sub
jl
and
mov
mov
insb
jnp
rcrb
repnz
cmp
lahf
pop
out
xchg
les
mov
pop
add
je
pop
cltd
jg
or
shlb
stos
cmp
jnp
mov
mov
je
mov
jl
cmp
add
xor
test
and
xlat
mov
cmp
sub
test
in
xchg
mov
repz
jge
dec
pushf
fstps
enter
add
sti
cmpsl
add
sbb
js
fwait
sub
mov
push
jo
idivb
mov
sub
push
stc
sub
jbe
fwait
adc
dec
rcl
inc
inc
mov
push
mov
in
into
push
loope
aaa
mov
lods
movsb
or
cmp
mov
pop
cltd
cld
jb
cmp
and
xchg
xor
cld
and
dec
xor
ljmp
jo
inc
stc
loop
sbb
incl
dec
jg
add
push
jnp
xchg
pop
push
push
pop
xlat
outsb
cmp
add
pusha
xor
and
in
push
sub
shlb
imulb
push
xor
sahf
sahf
leave
adc
xchg
std
jmp
jl
inc
fs
xchg
mov
js
xchg
cli
icebp
inc
inc
xchg
popa
jp
repz
sti
jl
dec
aaa
push
xor
mov
stos
repnz
xor
mov
xor
cltd
jb
cmc
stos
jg
adc
pushf
jo
xor
jecxz
sub
stc
mov
push
sub
scas
sbb
xchg
xor
roll
lds
lcall
pusha
pusha
adc
leave
iret
adc
inc
xchg
push
fwait
or
pop
mov
mov
xor
je
pop
and
icebp
cwtl
sbb
push
push
aas
push
mov
orb
push
mov
jno
inc
push
jb
or
ljmp
mov
movsb
loopne
xor
mov
mov
lret
negb
lock
loop
jmp
mov
adc
xchg
inc
shl
push
mov
ds
xor
int
mov
adc
in
add
pop
mov
mov
pop
sbb
cmp
jg
cltd
in
iret
insb
jno
push
fdivr
out
ret
jno
jae
and
pushf
and
mov
loopne
mov
sbb
cltd
pavgw
subb
movsl
stc
in
and
mov
stos
bound
cmp
inc
loope
incb
push
xchg
mov
sub
inc
push
xor
dec
xor
add
out
repz
sbb
arpl
loope
lods
jns
mov
outsl
cmp
pop
pop
and
lret
sahf
in
lcall
out
push
cmpsl
cmc
and
cmpsb
mov
loopne
xchg
loopne
int
outsl
jg
repnz
loop
pop
cld
stos
cltd
sub
fucom
subl
stos
scas
adc
repnz
xor
leave
mov
insb
and
push
mov
jns
cmpsb
stc
adc
pop
mov
jb
mov
cmpsl
inc
scas
out
and
stos
and
cmp
cmp
jns
xor
and
iret
xchg
stos
xor
adcb
xchg
test
inc
pop
fs
sbb
scas
or
inc
nop
pop
jns
scas
sti
aaa
fisubl
jno
scas
sub
daa
repnz
jns
stos
pusha
fwait
out
or
enter
sbb
jg
add
add
pop
sti
sub
and
frstor
push
je
cld
pop
test
mov
rorb
fs
rcll
mov
mov
mov
jle
push
hlt
incb
out
fistpl
rcll
cmp
inc
cmpsl
repz
and
adc
jecxz
xchg
sbb
clc
dec
or
popw
xor
mov
add
loope
aad
test
mov
mov
mov
addr16
lds
dec
sbb
leave
pop
jno
mov
sahf
enter
xor
mov
mov
and
mov
mov
out
pop
xor
jl
sbb
mov
subb
push
dec
push
roll
mov
pusha
mov
imul
xchg
dec
mov
sub
jecxz
bound
mov
xor
jno
dec
mov
scas
sbb
jge
fnstenv
out
out
ds
ror
mov
test
orl
and
pop
jne
and
cmp
in
out
or
and
push
xor
jmp
pop
sub
fs
jne
mov
mov
dec
xchg
dec
shrl
daa
test
int3
rolb
xchg
repnz
pop
hlt
and
adc
fsub
scas
daa
jl
ret
xchg
xchg
outsl
push
sti
cmp
loop
cmp
sub
cmp
scas
test
adc
ljmp
mov
sub
pushf
sbb
adc
cmp
pusha
icebp
or
jg
jno
add
mov
dec
in
aad
jnp
cmp
cmp
mov
adc
dec
xor
jne
jecxz
ljmp
xor
out
fs
gs
imul
cmp
les
cmc
lods
and
push
data16
fisubrs
outsb
mov
lds
inc
mov
adc
cmp
jmp
ljmp
test
test
xchg
inc
faddl
or
cmp
push
push
push
sub
xchg
ret
cmpsl
xchg
pop
ret
fmul
fstps
pop
pusha
jo
mov
mov
dec
mov
out
ljmp
adc
faddp
mov
sbb
jb
adc
loop
loop
xchg
or
andl
mov
jl
out
add
aaa
cli
mov
inc
inc
lods
dec
fnstsw
mov
fldenv
in
xor
shl
jne
mov
add
in
sarl
push
inc
je
fcom
xlat
fcmovu
and
sbb
xor
xchg
pop
and
inc
fmulp
cmp
js
sahf
xchg
loop
xchg
movsb
inc
in
xor
add
icebp
ss
cmc
jo
cltd
xlat
call
pop
mov
test
mov
in
roll
pop
pop
std
mov
fldl2e
xor
bound
xor
push
xchg
mov
stc
add
fldenv
scas
incb
cmp
add
cs
lcall
test
xor
lcall
inc
enter
push
sub
add
sbb
je
and
mov
cmc
scas
mov
xor
cmpsb
mov
push
fists
icebp
push
repnz
ja
lea
xor
sahf
sbb
movsl
jp
mov
addr16
outsl
add
cmp
pop
dec
scas
sub
jb
or
cmp
jno
setns
add
rcrb
shlb
insl
xor
adc
test
xor
mov
push
sub
push
inc
adc
sbb
repz
sub
addr16
stc
enter
cmp
cmp
and
into
xor
mov
leave
xchg
xlat
or
xor
cmp
fwait
mov
push
out
adc
stos
add
mul
pop
ficomps
adc
je
repz
mov
test
xchg
mov
jmp
xchg
rcl
sub
int3
pop
mov
mov
jnp
jecxz
enter
sti
out
sbb
cmpb
push
andb
pop
clc
icebp
inc
push
fsubr
add
negb
cmpsl
int3
pop
stos
mov
cmp
pop
aad
adc
sub
sub
and
stos
hlt
xchg
sar
mov
fnsave
mov
sbb
push
leave
jg
fwait
adc
mov
cmp
pop
mov
and
fdivl
add
and
pop
mov
mov
or
mov
mov
or
fcmove
pop
mov
cld
fucomi
mov
adc
inc
dec
push
jns
jp
mov
fdiv
sbb
or
or
xchg
ret
push
inc
cwtl
xchg
push
push
ja
enter
cmpsl
cld
or
popa
fistpll
bound
adc
int
outsl
lock
mov
xor
in
clc
arpl
adc
adc
insb
dec
push
jl
gs
push
inc
imul
fidivrl
fidivrs
insb
dec
pushf
fstpl
inc
lods
shll
or
iret
jbe
jns,pt
repz
mov
testl
cwtl
jecxz
inc
jo
xor
clc
jne
fildl
in
rcrb
cmp
stos
shll
push
mov
mov
cltd
fcomps
mov
ja
imul
cmp
push
ds
add
xor
loopne
jmp
inc
je
hlt
mov
cli
mov
aad
sbb
pop
mov
fidivl
mov
inc
stos
lea
sub
das
pop
push
mov
pop
mov
xor
pop
je
pop
cltd
push
inc
adc
or
mov
mov
xchg
dec
xor
adcb
arpl
mov
addr16
addr16
and
aad
sub
test
or
stc
hlt
shlb
cs
in
loopne
lahf
add
aad
xor
jecxz
pop
mov
nop
cmc
cmp
dec
dec
push
sbb
add
inc
pop
pop
mov
out
stc
sub
in
mov
out
jno
mov
sbbl
jne
xor
cmp
or
pop
shrb
inc
int3
cmp
call
leave
clc
mov
push
mov
cmpsl
or
or
outsb
in
and
lcall
pushf
sub
pop
shl
inc
jb
add
scas
sub
push
xor
jge
jmp
aad
jmp
inc
test
or
inc
mov
jg
insl
push
pop
lret
fwait
das
test
sub
mov
push
ret
in
add
push
das
scas
xchg
rorl
mov
mov
shr
cmp
js
fld
shrl
stc
insl
mov
pop
mov
mov
mov
sub
push
fwait
addb
das
mov
xchg
cmp
cmpsl
mov
lcall
xor
scas
cmpsl
pop
arpl
daa
nop
jl
cmpsb
and
pop
push
sbb
scas
pop
jnp
push
add
popf
pop
jecxz
iret
add
jo
sub
paddq
mov
pushf
lods
notl
jo
in
pop
xor
fucom
dec
sub
shll
pop
sahf
adc
xchg
fists
stos
adc
dec
imul
inc
xchg
mov
call
rcr
pop
addb
pop
dec
add
dec
add
adc
shlb
ja
xor
push
sub
adc
loop
lahf
dec
aam
loopne
stos
mov
add
cmp
xchg
dec
in
sahf
cltd
add
push
out
arpl
cmp
mov
in
jne
jge
out
cltd
push
push
in
sbb
stos
jecxz
mov
push
xlat
inc
mov
cmc
push
mov
or
fbstp
mov
cmp
inc
in
outsb
pop
push
sbb
movb
mov
mov
arpl
rcl
jne
in
mov
lods
pop
rcll
push
aas
lcall
adc
mov
add
pop
mov
dec
mov
mov
push
jb
aas
fisubrs
test
pop
ljmp
mov
sbb
xor
cmc
xchg
movsb
mov
cwtl
lods
mov
fildll
fisubrl
sahf
cmp
leave
add
mov
dec
test
in
xchg
mov
push
xor
mov
js
inc
inc
or
call
and
mov
xlat
or
adc
lcall
sbb
shlb
sub
or
or
mov
cmc
test
sub
fistps
icebp
xchg
loopne
push
jle
jo
cmp
mov
sbb
pop
repz
jae
out
cmpsb
neg
mov
jae
dec
push
aas
jge
pop
xor
mov
cwtl
aaa
adc
mov
and
lret
sub
sub
fwait
add
pop
adc
or
cmp
adcb
xor
jl
movsl
xchg
hlt
scas
addb
loope
mov
imul
pop
push
cmp
inc
or
rcrl
or
hlt
inc
pop
test
scas
fnstcw
cmove
jo
cmp
std
negb
cmc
pushf
jecxz
jb
int
orb
fisubs
ror
call
icebp
popa
out
sbb
mov
inc
inc
add
xrelease
inc
daa
pop
jne
cmp
loope
insb
dec
sti
dec
pop
addb
out
mul
push
iret
sbb
popf
cwtl
ds
push
add
mov
ljmp
xchg
gs
push
stos
fucomp
lods
shll
repz
bound
xor
cmpsl
or
jmp
ret
or
jb
jecxz
out
popa
mov
xchg
jno
lret
adc
movsl
loop
lret
out
out
decb
add
test
call
lcall
movsb
dec
arpl
sbb
repnz
int3
inc
test
cli
call
xor
pop
notb
add
push
add
pop
shlb
fs
sarl
adc
jnp
ror
je
add
cmp
hlt
shll
adc
outsl
adc
ja
mov
in
dec
mov
sbb
push
cmc
and
arpl
xor
orl
xorl
pop
popf
out
sbb
sbb
jo
inc
test
loopne
add
jb
ret
xor
add
sub
sub
dec
lret
xchg
aas
sbb
arpl
fchs
or
add
loopne
sbb
mov
or
push
lahf
insb
xor
rcll
inc
hlt
js
clc
rcrl
jmp
imul
xchg
cmpsb
mov
lret
push
or
cmp
popa
cmp
test
daa
jg
arpl
out
dec
movsl
fnstcw
loope
pop
into
sub
scas
lcall
test
loop
mov
div
or
stc
ret
clc
clc
and
idiv
call
ficoms
hlt
adc
shll
outsl
jo
add
movsb
or
xor
aaa
loop
outsb
icebp
xor
sahf
lret
sar
fisttps
subb
outsl
mov
bound
aam
sahf
arpl
mov
notb
sbb
jne
push
stos
cmp
movsl
js
add
fldlg2
mov
jb
inc
inc
or
xor
adc
cmp
sarl
popa
pop
call
mov
shlb
inc
xor
ljmp
scas
pusha
push
cmc
xchg
scas
or
mov
xchg
scas
sar
fwait
pop
ds
shlb
aaa
out
cmpsl
jns
hlt
les
insl
xchg
push
xchg
aad
mov
sbb
xor
push
xchg
inc
inc
inc
sbb
xor
or
aaa
imul
retw
sub
int3
ljmp
das
lret
mov
or
and
jnp
gs
fisubrl
aaa
adc
in
xchg
imul
mov
xor
mov
std
ljmpw
inc
fisubrl
mov
lods
jo
cmpsb
jg,pt
inc
xchg
push
repnz
rcrl
sbb
mov
mov
sbb
sbb
mov
or
jle
cmp
dec
pushf
mov
in
lret
mov
xchg
nop
hlt
dec
inc
mov
int
int
ret
inc
cmp
jg
or
es
movsl
mov
inc
popa
das
or
icebp
dec
es
or
inc
call
sub
cmp
roll
nop
xchg
dec
push
mov
sub
push
xor
scas
mov
cwtl
adc
and
ds
xchg
xor
enter
or
inc
mov
jo
aaa
lods
adcb
or
xor
arpl
in
test
std
add
push
mov
pop
xchg
lret
or
lret
inc
test
lret
pushl
sbb
test
jge
xor
fildll
jns
adc
pop
negb
jbe
test
jl
jg
mov
in
push
pop
and
jl
in
insl
sbb
xchg
ljmp
insb
and
pop
fcoml
pop
sub
sbb
mov
and
clc
out
mov
mov
in
outsl
in
sub
add
js
cltd
xchg
pop
test
xor
sti
jo
out
test
adc
jbe
popa
stc
lret
dec
cmp
inc
packsswb
jnp
loop
arpl
push
fsubrl
xor
pop
sbb
pop
icebp
dec
xchg
in
pop
mov
enter
lods
dec
arpl
or
sub
pop
flds
call
xor
and
nop
fs
adc
in
cmp
imul
cmc
dec
adc
pop
adc
repnz
lds
jge
or
push
push
xor
ljmp
sbb
xor
adc
jge
mov
cwtl
outsl
pop
sub
int3
inc
int3
mov
push
and
push
aam
mov
aas
and
jbe
ss
frstor
outsb
push
push
lods
or
gs
mov
add
adc
and
push
xchg
xor
xor
aaa
mov
ffree
and
popf
mov
ds
pop
mov
addr16
pop
cld
ja
ds
enter
mov
add
or
lods
cmp
stc
dec
icebp
jns
repz
stos
sub
stos
sub
push
divb
xchg
arpl
mov
push
das
in
adc
xchg
orl
inc
cmc
push
cmpl
adc
stc
addr16
mov
inc
icebp
mov
das
stos
ud1
cmp
and
aad
or
pushf
enter
imul
push
scas
cmp
cmc
mov
adc
cmp
movsl
bound
and
adc
int3
inc
cmp
add
sbb
inc
sub
inc
or
test
pop
sbbl
push
shrl
or
push
sti
jecxz
lcall
mov
cmpsl
xchg
repz
clc
push
adc
push
add
fs
mov
sbb
adc
xchg
dec
outsl
push
push
dec
stos
mov
inc
imul
inc
xchg
pushf
inc
cmp
pop
cmpl
lock
insl
mov
test
xchg
fisttpl
rorb
test
insb
jle
sahf
andb
sarl
xchg
subb
clc
add
push
test
push
xchg
mov
mov
into
scas
divb
push
insl
sbb
mov
fcoms
mov
jnp
shlb
cmc
inc
testl
lahf
fwait
mov
stc
dec
pop
or
cld
stc
mov
scas
fildl
loopne
mov
fildl
jo
jecxz
adc
cmp
insb
stc
sbb
inc
les
inc
xor
sub
icebp
jg
pop
jb
jg
jle
mov
cmp
sub
add
cs
ffreep
fstpl
mov
imul
sbb
scas
and
mov
outsl
mov
shlb
pop
sbb
push
dec
push
and
imul
cmpsb
es
sbb
popf
add
pop
inc
shll
movsl
aam
aam
jne
lods
jns
cmp
mov
xchg
ret
push
lahf
scas
cmp
lret
jne
outsl
int3
into
pushf
mov
arpl
push
adc
cli
or
ja
repz
sbb
fisttpll
fs
cld
cmpl
adc
ret
mov
out
lods
cmp
sarl
dec
push
jmp
outsb
mov
pop
mov
jne
mov
xor
sub
lret
mov
mov
out
shr
pusha
xor
test
inc
add
imull
in
aad
shl
outsb
xor
mov
stos
sub
mov
and
xlat
fldl
add
mulb
cmp
out
pop
lret
imul
imul
push
pushf
mov
mov
dec
xor
mov
pop
popf
fisubs
jne
lcall
pop
dec
out
xlat
rclb
xchg
mov
call
xchg
cmpsl
push
dec
pop
push
cmp
mov
cltd
and
mov
lret
jge
in
lods
xor
add
pushf
cltd
lock
mov
gs
out
out
cmp
test
lods
lret
test
push
jno
popa
add
pop
dec
pop
sbb
fnstcw
out
xchg
pop
fwait
test
mov
jl
shrb
pushl
testb
nop
add
pop
sbb
dec
cs
jne
in
int3
call
xchg
test
bound
push
mov
adc
cli
mov
mov
mov
sub
insb
ret
sbb
xchg
jp
jo
xchg
lods
das
pusha
stos
jge
lods
les
repz
inc
sub
testl
and
les
es
lods
ffree
cmpsb
add
subl
mov
mov
loope
insb
jnp
in
sub
fsubrs
sub
dec
sti
push
dec
sub
rorb
xor
sbb
jae
add
leave
mov
mov
stos
sbb
jecxz
xor
sub
test
ficomps
dec
push
das
out
lcall
inc
pop
stos
enter
aam
cmpsb
movsb
add
pushf
sbb
add
cmpsl
dec
push
push
cld
push
out
jle
sti
mov
sub
dec
test
repz
sub
in
enter
jmp
shrb
inc
insb
loope
and
or
xchg
jno
notb
shl
sbb
shlb
and
sub
lcall
lret
mov
pop
lds
cs
mov
mov
push
rorl
adcl
mov
xor
adc
arpl
jp
ret
decb
xchg
clc
jg
pop
shr
scas
xor
std
mov
adc
or
lcall
inc
addr16
push
test
fs
fdivl
jge
cmp
ljmp
xor
mov
leave
test
xchg
xorb
mov
mov
aam
rcll
repz
ds
fbld
mov
scas
sub
int
cli
loop
dec
mov
sbb
lock
in
pusha
jmp
xchg
repz
cmp
shlb
pushf
iret
xchg
xchg
clc
or
je
lods
dec
mov
repz
aam
jbe
sahf
jns
dec
mov
push
push
ret
adc
add
ljmp
jecxz
or
pop
sysret
sub
xchg
mov
cli
andb
or
fidivs
push
fwait
test
fimull
cltd
push
sarb
iret
arpl
add
push
scas
dec
cmp
xor
xchg
adc
dec
mov
push
lods
inc
or
xchg
push
sbb
jns
fdivrs
ja
pop
mov
sbbb
std
push
pop
add
sub
and
clc
cmpsb
and
fwait
das
sub
mov
xchg
and
push
fiaddl
sub
mov
xchg
xor
popa
popa
dec
jg
out
adc
stos
fcmovbe
movsb
mov
ja
mov
and
bnd
mov
pushf
jns
movsl
push
icebp
dec
and
adc
in
scas
xchg
adc
out
mov
jg
cmc
movsb
xchg
ret
mov
and
dec
cs
mov
cwtl
push
lods
add
sbb
test
sarl
dec
inc
push
aad
push
push
aad
mov
stos
cltd
push
mov
push
inc
cli
xchg
loope
jp
jmp
cwtl
mov
enter
push
xlat
sbb
shlb
xor
movsb
notl
in
mov
jnp
pop
leave
mov
mov
fcmovnu
sub
sbb
add
cmc
inc
icebp
and
xlat
mov
xor
mov
push
clc
cmc
adc
inc
xor
lahf
cmc
ret
jecxz
pop
push
lock
adc
dec
xor
lea
sbb
out
scas
gs
mov
loope
inc
pusha
or
inc
jae
mov
xchg
pusha
sbb
pop
jecxz
pop
lea
adc
out
xchg
cmc
dec
enter
pushf
adc
pop
lock
ret
std
movsl
push
sbb
push
in
imul
xor
rcll
es
inc
iret
notl
lea
pusha
xor
pop
fmuls
mov
sbb
hlt
pushf
cmpsb
iret
mov
add
xor
lcall
incb
stc
xor
inc
xor
dec
and
xchg
lret
es
or
jl
sub
inc
mov
sti
push
je
ss
xchg
xor
xchg
dec
in
mov
ficoml
leave
clc
mov
test
or
lock
cmpsl
lahf
aad
loopne
mov
ret
sbb
popf
cld
jp
out
ss
mov
leave
jns
pop
cmp
and
js
mov
pop
in
imul
pop
and
sub
mov
push
jno
gs
out
dec
sti
imul
insb
mov
out
xchg
sub
stos
jp
xchg
les
rol
clc
sti
js
sbb
mov
mov
mov
in
lds
inc
arpl
aam
sub
jno
push
xchg
cmpb
es
mov
inc
imulb
outsb
lret
test
in
fcmovbe
mov
cmpsl
sbb
enter
repnz
into
js
mov
lock
shrb
fs
or
mov
int3
adc
sbb
xor
in
inc
lret
lock
pop
fstpt
xchg
iret
sbb
and
outsb
push
sub
call
pop
sub
pop
sub
stc
imul
repnz
push
xchg
popa
rcr
cmp
adc
push
or
xchg
adc
aam
fmull
sub
popa
leave
and
popf
lods
es
mov
push
sbb
push
ja
inc
clc
imul
int
dec
test
dec
bnd
lahf
mov
popa
sbb
xchg
dec
sti
out
cmp
testl
adc
add
sbb
into
inc
mov
and
mov
jmp
dec
imul
cwtl
divps
int3
add
push
sahf
insl
mov
cmc
mov
test
jmp
out
pop
in
jbe
leave
push
xchg
mov
in
and
inc
mov
inc
cli
xchg
call
inc
std
push
leave
invlpg
inc
xchg
xor
sub
sbb
mov
call
jbe
pusha
sub
sub
pop
loope
fxch
aad
pop
loop
lds
test
and
push
aam
add
add
xchg
add
sti
mov
mov
jb
pop
ss
outsl
dec
push
leave
out
pop
cmp
dec
inc
addr16
sub
cmp
inc
lahf
push
cmp
push
std
xchg
aam
int
mov
shlb
cmp
jle
xchg
pop
out
mov
ret
outsl
sti
xlat
negb
xor
iret
out
sub
andb
jns
adcl
add
inc
xchg
aad
mov
jns
cltd
jo
pop
add
or
mov
and
xor
and
mov
sub
stos
adc
mov
sbb
test
test
and
inc
jae
mov
adc
aad
sub
icebp
or
and
in
mov
mov
lods
lds
enter
js
insl
jmp
xchg
cli
das
add
xchg
sub
or
psrad
xchg
sub
push
aad
insl
mov
addr16
daa
pop
mov
push
ret
imul
shlb
cwtl
sbb
push
push
inc
pop
frstor
push
stos
std
mov
jno
das
ficompl
xchg
or
inc
xchg
gs
cld
je
sub
jecxz
or
dec
shlb
mov
pop
lret
mov
mov
cmp
jl
mov
scas
les
cmpsb
inc
and
cli
xchg
inc
in
inc
xor
xchg
jecxz
mov
add
and
pop
lret
fsubrl
mov
mov
test
jb
mov
mov
ds
dec
enter
sahf
in
into
negl
sub
mov
mov
test
dec
lods
jmp
sbb
fstps
pop
insl
or
mov
cltd
out
sub
inc
add
dec
jge
lret
push
out
repnz
aas
iret
push
test
adc
sub
in
not
pop
mov
adc
jo
fdivrl
in
into
inc
xor
das
scas
sbb
inc
sub
std
and
popf
jl
ficomps
lret
cmpsl
adc
mov
push
jbe
jae
js
fsts
sbb
lds
in
add
loop
adc
roll
hlt
in
and
mov
popa
je
pop
fistpll
nop
lock
pop
rcrl
add
imul
mov
jp
in
and
pushf
xchg
int3
mov
arpl
jecxz
pop
lods
add
jg
adc
mov
call
mov
or
xchg
adc
popf
inc
mov
xor
pop
imul
inc
aad
pop
and
jle
pushf
sub
lock
xchg
out
inc
dec
mov
add
popf
sub
jns
xchg
push
imul
add
mov
fcoms
cmpsb
iret
imul
jno
sub
fists
sub
add
or
inc
sub
sub
sub
adc
lods
shrl
ret
cwtl
jecxz
dec
clc
add
lret
mov
push
lock
and
ret
jno
pop
add
mov
jb
je
fwait
pushf
push
sbb
xor
bound
jo
andl
sub
and
leave
scas
cmpsb
fisubl
pop
test
mov
loop
cmc
push
iret
push
jno
loop
call
and
sub
insb
loope
mov
jge
push
hlt
sbb
cs
and
je
or
xchg
mov
jmp
mov
fbld
clc
inc
lock
int
test
shl
cmc
cmpsb
mov
pop
jnp
jge
xlat
mov
and
int
mov
cltd
pop
add
data16
mov
ror
int3
mov
lret
cmp
and
adc
lock
or
adcb
inc
test
mov
push
mov
outsl
jbe
aam
in
fcmovne
loopne
out
inc
and
mov
jb
xchg
fisttpl
mov
fmulp
les
cld
sub
and
into
dec
sub
lods
divb
xchg
push
fsubr
xchg
pusha
les
adc
loopne
pop
outsl
xchg
mov
xchg
popa
cmp
int3
aam
mov
push
mov
out
adc
jecxz
adc
push
inc
cmovae
and
fwait
inc
fisubrl
adc
addr16
bound
jno
or
push
ret
add
xchg
add
cmp
cli
cmp
sbb
xchg
movsl
xchg
out
loop
pop
xchg
add
dec
cmp
jg
fstpl
lret
test
dec
pusha
stos
push
adcl
jnp
out
enter
das
stos
fdivs
xor
push
xlat
jnp
popa
fiaddl
add
mov
repnz
xor
shlb
mov
inc
aaa
xor
ret
cmp
and
adc
cmpsl
inc
popf
dec
bound
xchg
jnp
aad
adc
movsl
push
sahf
roll
mov
mov
sbb
dec
mov
lahf
leave
ret
jo
cmp
xchg
nop
lock
push
andl
mov
or
scas
repz
mov
xchg
mov
test
repnz
adc
or
cmp
xchg
das
push
pop
fsub
mov
xchg
loopne
aas
lods
sub
ret
mov
push
push
mov
loop
pop
and
sbb
psubsw
jne
pop
pop
sbb
mov
outsb
subb
enter
cltd
rclb
rolb
aam
adc
dec
imul
ljmp
arpl
inc
mov
mov
jns
adc
lods
add
xchg
idiv
enter
or
pop
cwtl
or
enter
add
ficoml
icebp
dec
xorl
int3
or
or
aad
dec
aaa
movsb
cmp
dec
add
dec
lret
or
ret
shrb
stos
popf
sub
cmp
sub
int
push
xor
mov
jno
sub
mov
js
mov
mov
mov
add
loopne
out
ret
jns
mov
in
dec
stos
lea
xchg
xchg
cmpsb
mov
cmp
inc
inc
loopne
mov
nop
inc
push
int3
daa
in
cmp
add
cmc
dec
and
inc
lret
aam
call
xor
rol
xor
mov
scas
fdivr
add
int
cld
call
xchg
jecxz
push
loop
scas
push
lcall
arpl
cmp
dec
je
xchg
sahf
or
xchg
push
sbb
inc
sbb
aam
inc
lods
push
scas
pop
cmp
sarb
icebp
scas
ficompl
sbb
pop
add
out
jnp
sti
cltd
xchg
loopne
and
pop
popf
mov
stos
jbe
cli
mov
adc
inc
cwtl
or
popa
push
cmpsl
sub
test
sahf
das
pop
sub
pop
cmc
sbb
mov
fs
inc
sbbb
loope
xchg
rorl
cwtl
nop
push
sahf
insl
adc
insb
and
jbe,pt
movsb
cli
rcrb
push
pusha
cmp
sbb
cmc
fcmovb
add
adc
test
or
jnp
cmp
sbb
mov
cmpsb
int
xchg
addr16
and
pop
cmp
and
jg
push
sub
push
or
push
and
out
mov
adc
pop
add
clc
sbb
mov
fisubl
lcall
push
cmc
cmp
cmp
and
mov
test
mov
call
sbb
popa
mov
mov
pandn
push
int
mov
push
test
xchg
mov
sbb
mov
imul
shl
stc
sub
dec
mov
jno
lea
push
sar
sbb
bound
jne
icebp
push
test
cmp
and
imul
push
jns
aas
rclb
mov
xor
cmpl
stc
jmp
ds
push
lret
sbb
pushf
negl
dec
xchg
aad
out
lds
mov
cmc
cmpsl
mov
jnp
test
jnp
adc
clc
cs
or
arpl
mov
sub
jbe
adc
xchg
push
pop
cmp
loope
mov
repnz
mov
call
or
std
fwait
repnz
into
dec
lds
subb
stos
cmp
push
mov
jno
shlb
pop
rol
dec
jno
pop
out
add
mov
adc
push
mov
pop
or
dec
mov
mov
push
mov
sub
cli
push
lahf
je
cli
mov
hlt
xlat
mov
insb
sbb
fildll
mov
fadds
out
gs
cmc
popa
push
and
shll
repz
gs
scas
fdivrl
jge
stos
jmp
mov
jl
add
mov
icebp
xor
pop
lock
pop
into
jb
into
nop
sarb
sahf
int3
xor
shll
push
sbb
test
push
rcll
addr16
leave
loopne
mov
sub
or
mov
iret
lea
adcb
pop
push
dec
jae
mov
jecxz
fstpt
aaa
adc
pop
lret
ljmp
mov
pop
stos
insl
sahf
cmp
std
shr
in
rcll
test
cli
out
insb
test
add
xor
imul
mov
jne,pt
inc
mov
xchg
scas
push
sbb
imul
inc
icebp
out
test
in
popa
adc
arpl
mov
inc
dec
add
rorl
sbb
fwait
or
add
cmpsl
xor
xchg
data16
add
xchg
loope
in
arpl
xlat
fsubrl
mov
in
mov
and
push
pushf
cs
call
add
rorl
mov
dec
push
cmp
in
mulb
lock
xor
lods
pop
imul
push
loopne
fcmovnb
loopne
adc
shr
mov
insb
lret
jo
push
mov
scas
mov
pop
push
outsb
jno
in
js
mov
cmp
xchg
pop
push
outsb
gs
mov
cltd
or
out
pop
mov
insl
imul
pop
fwait
jbe
mov
cmp
stos
in
ret
cwtl
mov
lea
adc
jp
xchg
ret
sti
jne
aad
pop
xchg
addb
sbb
jno
add
loope
scas
inc
idivb
adc
sub
js
outsl
jg
shll
sub
popl
lea
cmp
ret
shlb
test
out
and
rolb
sahf
cli
cli
int
jo
lret
in
das
pushf
jl
call
mov
scas
ret
mov
inc
stc
or
outsb
mov
push
add
aas
mov
leave
xor
cmp
gs
dec
ficoml
jbe
es
jg
repnz
dec
fdivr
sbb
bound
andl
out
add
outsl
nop
daa
clc
rcrb
jo
daa
rcrb
add
dec
enter
push
aaa
imul
rorb
in
pop
int3
popf
push
jnp
cmp
jge
mov
testb
mov
pop
push
xor
and
mov
and
mov
stc
pusha
es
jecxz
push
xchg
cmc
inc
mov
fs
fnstsw
out
pusha
rorb
bound
pop
xor
lahf
add
leave
sub
pop
insl
xchg
bnd
rorb
mov
fdiv
xchg
jmp
xlat
mov
aaa
hlt
insb
nop
iret
std
push
or
popf
pop
pop
clc
and
fidivrl
stc
fwait
loope
test
loope
ja
xchg
pusha
pushf
lahf
popa
cmp
int
xchg
mov
aad
int
push
fs
xorb
sahf
imul
xchg
sbb
lds
dec
jl
es
iret
add
add
movsb
xchg
adc
insl
pop
mov
pop
imul
pop
hlt
add
adc
sahf
push
imull
push
pushf
enter
fisttpl
lret
sub
cmc
jae
push
push
add
jbe
leave
fnsetpm(287
cli
mov
stos
fcmove
iret
adc
or
inc
arpl
lods
inc
fcompl
inc
mov
mov
and
jg
in
mov
lds
dec
out
lret
and
cmp
cs
imulb
pextrw
cmp
bound
lret
movsl
mov
push
mov
shl
test
fst
outsl
or
scas
xchg
lea
pushf
das
rcl
mov
push
and
pop
gs
std
addr16
in
aas
jle
lcall
rcl
xchg
dec
decl
stc
mov
enter
pop
push
mov
inc
bound
idivb
cmp
pushf
xchg
out
and
stc
xchg
inc
imulb
sub
adc
jge
jle
or
dec
iretw
sbb
xor
dec
loope
cld
fsubl
adc
rcrb
push
data16
call
and
sahf
push
std
mov
xchg
loopne
int3
lea
mov
icebp
ljmp
xchg
jp
sbb
or
sbb
sub
imul
int3
dec
icebp
dec
out
xchg
mov
or
or
xor
push
push
cld
mov
jbe
mov
lods
xchg
dec
xchg
or
mov
enter
dec
outsb
mov
out
loop
rcl
cmp
movsl
bound
iret
mov
push
pop
jge
stos
std
jmp
out
fs
add
int
cld
mov
popf
cli
xor
loope
push
pop
xchg
fldl
cmp
or
xchg
insb
pop
movsl
inc
xor
sub
das
int3
aam
pop
in
pop
scas
xor
and
jge
das
xor
push
mov
ds
into
lcall
das
cld
popa
or
sahf
mov
sub
pop
shrl
mov
aam
xchg
aaa
push
jge
cwtl
cmpsb
das
cmp
mov
xor
xor
jp
outsl
fwait
shrl
push
push
out
cmp
xchg
push
or
and
hlt
sub
inc
aas
mov
fsubrl
mov
adc
fmulp
int
loopne
scas
in
ret
xchg
rcll
mov
cltd
sub
and
add
cld
adc
inc
xchg
int
mov
lcall
fidivrs
push
adc
fwait
sub
pop
stos
xchg
push
sub
scas
mov
shl
add
mov
scas
std
xor
jnp
sbb
jo
out
xchg
push
jns
xchg
or
inc
lahf
ds
out
enter
cmc
xchg
and
add
sbb
jecxz
inc
xor
mov
pop
arpl
dec
xor
xlat
xchg
jb
jl
lcall
xlat
jnp
mov
lock
enter
or
icebp
mov
out
mov
mov
addr16
adc
xor
mov
imul
xchg
les
vphaddubd
shr
je
adc
int3
icebp
push
add
dec
lods
cmpsl
sbb
cmp
xchg
pop
mov
scas
ss
scas
scas
aam
lret
sub
icebp
xchg
out
xchg
mov
add
stc
xchg
and
and
adc
aad
push
jg
test
jmp
and
imul
xor
adc
adc
test
mov
insl
into
movsb
icebp
data16
mov
loopne
push
jnp
push
mov
push
sub
and
jecxz
js
or
popf
adc
mov
mov
mov
lret
scas
adc
mov
mov
push
test
add
ret
mov
test
mov
in
xlat
fsubp
cmp
iret
fsubrl
hlt
fdiv
fisubl
dec
in
repz
jnp
jb
mov
popf
xor
lock
or
loope
push
inc
sbb
dec
in
je
mov
push
inc
idiv
nop
cltd
js
fcmovbe
xor
sbb
stos
fwait
cmp
lret
repz
shrb
jb
lcall
or
sti
cmc
dec
aam
push
add
mov
cmp
inc
xor
dec
jae
popf
adc
adc
addr16
sub
lock
addr16
popa
mov
or
mov
imul
aas
mov
xchg
push
aad
xchg
sbb
add
outsb
popf
icebp
ror
fiadds
addl
xor
jbe
cmc
dec
adc
roll
mov
pop
push
adc
fcmovnbe
push
stos
and
or
add
cmp
push
dec
fwait
repz
mov
cmp
cli
dec
sub
or
mov
iret
fimull
jnp
enter
cld
pop
push
jne
pop
xchg
cmp
std
mov
inc
add
cs
jle
bound
mov
ret
pop
cmp
lcall
enter
add
insb
push
subb
test
jns
push
mov
ffreep
loopne
pop
fcmovnu
jnp
xchg
js
xchg
outsb
inc
push
in
fistpll
xchg
pop
sbb
jno
mov
mov
xchg
ficompl
and
fildl
cmpb
adc
fcmove
out
lcall
scas
insl
jle
loop
movsbl
add
icebp
int
inc
cli
xchg
adc
dec
daa
cmp
xchg
leave
repz
int
dec
pushl
sub
lock
or
outsb
out
adc
mov
mov
test
test
mov
inc
daa
mov
addr16
or
mov
aas
fnstsw
jge
jb
fwait
addb
xlat
stos
xchg
out
inc
inc
imul
jbe
gs
bound
cmp
inc
jp
lds
mov
pop
mov
pop
fistpl
sub
ljmp
shll
gs
xchg
jp
jae
int
ljmp
xor
mov
lahf
gs
pop
inc
mov
jl
mov
xor
mov
push
out
fnsave
cmp
rcll
daa
sbb
dec
ja
xchg
jb
pop
gs
das
adc
sub
pop
mov
pop
icebp
out
ds
fwait
xor
or
push
pop
inc
adc
fwait
xlat
push
sahf
mov
int
test
sub
jns
pop
jmp
imul
into
xchg
lods
xchg
xor
sub
xchg
cmp
mov
stos
cmpsl
xchg
cltd
pop
xchg
cld
xchg
fcomps
ret
or
fwait
add
outsb
test
dec
decl
mov
out
push
cs
and
ss
pop
mov
pop
inc
jmp
cmp
popf
pop
sbb
fidivrl
cld
fwait
pop
sub
lds
es
cmp
gs
mov
jo
imull
or
jmp
jae
std
and
js
je
push
sbb
test
and
push
inc
adc
xor
ljmp
js
jnp
fwait
push
or
mov
xchg
xor
nop
call
call
lea
pop
and
mov
mov
mov
fnsave
xchg
adc
cmp
loope
movsl
inc
push
rdmsr
inc
jp
sbb
std
jl
jg
ljmp
imul
or
mov
ss
mov
dec
push
mov
jno
out
jg
outsl
mov
or
scas
inc
nop
mov
pop
push
lds
leave
out
sbb
ja
pop
inc
pop
insl
shl
lea
sti
pop
add
lret
insl
fwait
push
xchg
pop
dec
push
fnsave
popa
cmpsl
outsb
push
sub
lret
inc
and
push
in
ror
xor
aas
aad
lds
sahf
mov
addr16
sbb
jmp
aam
xor
imul
sar
enter
xchg
add
or
push
int
les
adc
negb
cmpb
xchg
or
insb
gs
sub
out
xor
push
mov
jmp
out
jne
mov
loopne
scas
sbb
push
into
push
xor
jne
repnz
inc
lds
je
pop
shl
adc
rolb
insb
into
mov
jae
enter
xchg
add
xchg
call
sub
fisubrs
fnstsw
sbb
add
mov
sub
clc
cmp
sub
dec
test
fmuls
out
pop
xchg
push
and
push
clc
ds
js
sub
insb
adc
mov
add
cmc
std
dec
sbb
cs
mov
push
leave
mov
cmp
iret
xchg
mov
inc
andl
loopne
cltd
jle
inc
jno
push
cmp
cmp
push
ret
movsl
dec
xchg
push
lea
adc
xlat
xlat
and
sub
arpl
mov
std
add
mov
xchg
fneni(8087
dec
fbld
push
add
sahf
test
out
mov
or
shl
sahf
adc
popf
push
add
sti
std
dec
sub
and
sarl
in
dec
inc
lods
aad
mov
mov
adc
fdiv
jb
pop
test
mov
pop
lea
outsl
xchg
adc
fildll
and
enter
insb
cmp
dec
or
bound
dec
pop
push
inc
cmp
cltd
or
add
adc
mov
jl
jo
sbb
ljmp
fcoms
ficompl
fsubl
or
or
mov
xor
data16
inc
cmp
cltd
pushl
mov
neg
sub
and
sub
push
xor
push
mov
push
inc
js
sub
xchg
je
and
xor
ret
jp
push
shl
dec
jmp
je
cmc
xchg
add
mov
jae
sbb
insb
sarl
cmp
adc
mov
outsl
and
dec
je
cmpsb
scas
aad
ljmp
aad
push
mov
adc
cmp
mov
pop
jg
or
jns
jecxz
icebp
dec
and
insl
push
mov
cmp
lock
repnz
ja
jno
dec
cmpsb
sub
adcl
jmp
mov
pop
movsl
mov
add
iret
int
adc
repnz
lods
jp
xchg
pushl
std
cmpsb
cs
les
sub
mov
xchg
xor
out
rorb
das
shll
jge
inc
sbb
mov
cmp
cs
pop
inc
dec
push
sub
js
sub
mov
bound
iret
mov
jmp
mov
in
mov
test
ror
jecxz
jg
cwtl
sbb
lret
push
dec
sub
repz
jge
das
lods
push
xchg
add
imul
sar
fldl
jns,pn
mov
iret
nop
repnz
cmpsl
mov
icebp
inc
and
lret
ljmp
call
mov
sub
outsl
pop
mov
inc
add
xchg
cli
mov
mov
imul
and
sbb
jno
push
xchg
setns
stos
adc
icebp
inc
fiadds
push
or
xor
pop
test
inc
and
push
daa
roll
xchg
jecxz
stos
pop
mov
movsl
and
sub
loopne
loopne
lcall
add
test
mov
and
aad
adc
pop
pushf
push
ret
jne
push
outsl
pop
cwtl
outsl
movsl
lods
sub
mov
iret
iret
sahf
mov
lock
cmp
push
lret
sub
rorb
or
call
jns
mov
int
int
adc
sub
into
mov
out
mull
pop
sub
or
imul
fs
cltd
cmp
mov
cs
fcompl
repnz
and
sbb
imul
sub
out
adc
scas
loope
rorb
add
or
in
clc
lods
jb,pt
push
push
cmp
push
mov
mov
jp
xchg
pop
sti
inc
jbe
cld
lods
pop
or
adc
into
xor
mov
mov
mov
sbb
dec
jecxz
scas
sbb
mov
out
lahf
fimuls
ret
xor
pop
pusha
leave
or
dec
bound
xchg
or
ss
push
sub
in
divb
int
push
into
arpl
imul
int
js
repz
aam
scas
mov
xchg
movsb
and
adc
xor
imul
push
movsb
mov
add
add
cmpsl
cmc
mov
movsb
test
xor
shlb
mov
gs
add
sbb
push
popf
xchg
push
outsl
dec
addr16
fildll
gs
pop
out
pushf
cmp
inc
push
repz
push
sbb
arpl
dec
rcr
outsb
dec
xchg
or
scas
jmp
and
orb
das
pop
xor
cli
fs
aaa
xchg
mov
mov
xchg
mov
int
jae
mov
mov
je
and
add
mov
ret
sbb
lsl
lret
je
or
cli
or
dec
test
cmc
or
push
add
push
inc
mov
pop
call
sbb
dec
repz
mov
cmp
inc
repz
cmpsl
cmp
sub
lock
jmp
or
icebp
xchg
sbb
sar
lret
jb
sbbl
mov
dec
out
mov
in
stc
loop
std
shlb
addb
jns
inc
mov
mov
inc
dec
lret
pop
shll
movsb
pop
jae
fs
les
lods
ret
jne
cmc
sub
mov
add
imul
sbb
fstpt
xor
fdivrl
mov
sub
jle
sbb
xor
inc
xor
aas
iret
xor
fmuls
inc
and
sub
xorl
jae
mov
scas
addr16
push
xor
ljmp
filds
mov
lret
mov
mov
lahf
ds
pop
icebp
cmp
push
jno
gs
aam
aaa
rcrb
xchg
jge
lods
fwait
ds
push
jp
icebp
push
gs
shll
cld
mov
ffree
pop
sahf
pop
cmc
or
sti
fwait
sahf
inc
xchg
jge
xchg
pop
cltd
push
mov
fmuls
mov
sbb
and
or
xchg
mov
mov
jne
xchg
iret
and
jbe
jbe
test
callw
dec
mov
je
ljmp
scas
xchg
dec
cld
cltd
enter
mov
lretw
lahf
ja
mov
pop
add
jp
pop
out
std
push
sbb
xchg
test
sbb
shlb
sub
add
orl
xor
adc
mov
mov
and
jns
shlb
mov
mov
xor
aas
ljmp
mov
adc
mov
sbb
ja
inc
add
jno
std
repz
xchg
es
into
sub
mov
push
repnz
sbb
popf
out
outsb
mov
loop
pop
cmp
outsl
sub
incb
and
ds
or
je
dec
cmp
mov
pop
lahf
cmpsb
sti
or
ret
pop
or
movsl
repz
rcrl
xchg
jmp
loopne
push
pop
jb
imul
push
adc
jnp,pt
es
xchg
push
xchg
push
fwait
stos
jno
out
shlb
push
inc
out
aam
lahf
clc
pop
adc
mov
mov
xor
push
add
dec
pop
les
in
testl
jmp
xor
bound
dec
inc
aaa
std
pop
push
cwtl
sbb
inc
insb
inc
shll
mov
push
andb
cli
adcl
in
inc
test
sub
mov
add
sbb
out
jecxz
jl
std
fisubrs
mov
popf
es
leave
bound
push
mov
clc
mov
adc
sbb
jns
lds
or
into
dec
out
sbb
int
adc
push
mov
mov
repnz
enter
sub
popf
stc
add
lea
and
lret
mov
adc
fucom
or
call
xor
mov
xor
mov
shlb
mov
test
lret
dec
add
mov
pop
stos
fs
call
dec
jo
inc
movsb
enter
aam
in
daa
je
stos
aad
cmp
dec
fucomp
in
pop
test
pop
lds
out
pop
mov
data16
out
cli
movsb
push
jae
sub
jmp
popa
hlt
jl
push
in
jbe
pusha
insl
dec
cmp
test
sbb
dec
cld
jl
pop
dec
cmpsl
xchg
pop
lods
sub
es
jp
dec
icebp
lds
xchg
in
jecxz
rorb
mov
xchg
lcall
push
mov
xor
and
fsub
out
push
bound
jne
mov
add
pop
aaa
mov
cmp
jae
xor
cmp
or
sbb
jbe
pusha
xchg
ret
popf
pop
adc
cmp
scas
ja
and
push
dec
pusha
sub
inc
jle
adc
mov
hlt
xor
int3
pop
xlat
inc
push
mov
xchg
repz
add
sub
cltd
lods
stos
test
xor
jl
xchg
pop
sub
cmp
fnstenv
jmp
in
xchg
loop
xchg
dec
and
adc
cmp
xor
test
cmp
jnp
mov
adc
imul
mov
aas
fsubl
je
xchg
push
xor
ljmp
gs
mov
xchg
jb
je
fs
clc
jns
or
mov
mov
pop
cmp
arpl
int3
pop
pop
add
hlt
xor
push
idivb
or
lods
popl
loop
add
push
or
dec
inc
xor
in
jne
popa
sub
dec
in
cmp
mov
iret
mov
bswap
push
and
jmp
dec
pop
mov
and
add
testb
leave
call
icebp
popa
mov
jg
sbb
fstp
jp
or
outsb
push
fbld
inc
xchg
mov
sub
sub
push
imul
inc
sub
insb
loop
cmp
insl
roll
adc
imul
mov
push
cmpsl
push
test
fildll
and
jnp
fcmovnb
ljmp
and
lods
cltd
cli
cmp
fiadds
push
movsl
mov
sti
xchg
dec
cmp
mov
push
es
push
xchg
sub
mov
cmc
lahf
sub
pop
pminsw
inc
fucom
adc
mov
cwtl
scas
es
cmp
sbb
add
rorl
adc
push
jl
jp
in
pushf
mov
iret
leave
ret
mov
int
xchg
mov
lcall
fwait
cmp
leave
sbb
mov
dec
imul
das
imul
testb
js
popf
xchg
nop
cmp
data16
jae
pop
add
mov
or
mov
cltd
sbb
inc
dec
mov
xor
mov
das
cmc
and
cwtl
gs
xchg
int3
mov
inc
out
data16
mov
or
cli
inc
sbb
sbb
xchg
ds
pushf
push
adc
adc
loope,pt
sub
les
fcom
and
int
movsl
outsl
or
dec
and
out
sub
jmp
jl
dec
sti
adc
push
lds
mov
push
add
outsb
popf
mov
in
sbb
cmp
fisubl
xor
xor
pop
pop
ss
jle
imul
sbb
ret
pop
sub
mov
mov
pop
pop
sbb
push
lock
cld
lcall
stc
sbb
cli
and
xchg
call
or
add
ret
sbb
ret
ret
mov
jns
ret
inc
idivl
xchg
sbb
push
xchg
adc
xchg
lcall
jne
idivb
cmp
cmp
push
sub
scas
inc
test
add
imul
out
adc
das
test
add
pop
mov
ret
in
add
dec
les
adc
add
mov
pop
and
jnp
mov
aad
lahf
pushf
idivl
pop
clc
stc
mov
pop
aad
cld
movsl
sbb
adc
dec
xchg
testl
pop
cld
pop
shll
daa
lret
les
movl
and
test
pop
inc
or
cmp
xchg
cmp
or
outsl
dec
imul
call
adc
das
sub
cs
sbb
adc
subl
rcll
add
sub
jne
enter
inc
je
out
sbb
jmp
and
fistps
push
outsb
in
xor
dec
mov
call
arpl
popa
sub
mov
or
sub
data16
arpl
push
sub
test
dec
push
das
cmp
ss
sub
mov
xor
les
mov
aaa
in
dec
xchg
adcl
jmp
or
dec
pop
inc
inc
cmc
inc
test
push
mov
cltd
stos
sub
lock
inc
push
inc
arpl
outsb
shlb
insl
js
jp
jnp,pn
mov
cmp
mov
shrb
mov
xchg
mov
mov
rclb
es
mov
adc
lret
insb
push
mov
nop
out
aad
cmp
xchg
fnstcw
jbe
cmovp
jnp
cmp
fisttpll
cwtl
pop
and
or
std
or
loop
fidivs
xchg
jb
xchg
outsb
scas
outsb
imul
jp
loopne
dec
pop
xor
inc
pop
popf
insb
jns
add
xchg
xchg
lcall
mov
add
push
imul
push
push
outsb
aad
mov
lret
cmp
or
scas
call
mov
or
std
lds
jns
add
ss
movsb
insb
int
mov
adc
add
sarl
add
or
mov
test
stos
rcrl
jne
mov
scas
or
repz
sbb
cmpsb
push
test
xlat
mov
jp
cltd
adcl
imul
and
adc
add
pop
sbb
sub
inc
test
dec
lret
lea
adc
inc
mov
neg
jns
clc
xchg
test
in
jae
adc
outsb
jae
jle
jg
xchg
hlt
fwait
adc
dec
je
pop
rcrb
lea
stc
and
fidivs
mov
imul
sarb
add
jg
cmc
js
rcr
es
shl
imull
decl
sbb
lods
add
ret
dec
inc
fwait
in
inc
ss
xor
or
jno
xor
pop
sub
das
lds
enter
or
fsubs
lods
pushf
pusha
rorb
add
int3
stc
push
pop
push
rol
aas
orb
mov
aaa
inc
sub
push
hlt
stos
pop
js
imul
jmp
in
testl
cmovl
mov
fcmovbe
sti
test
lahf
mov
cwtl
mov
mov
ja
and
jg
adc
push
dec
aad
jmp
and
ljmp
shlb
and
xor
in
lahf
or
dec
dec
sub
jmp
in
aad
stos
push
jecxz
push
mov
mov
pop
mov
ss
jno
fimuls
vpsubd
scas
aaa
sub
das
gs
mov
xlat
dec
adc
outsb
add
insb
stos
mov
test
addr16
push
lahf
int3
repnz
mov
sbb
imulb
jl
ljmp
jbe
pop
loopne
nop
dec
hlt
xchg
cmpsb
aad
cmpsl
or
inc
inc
stos
jp
mov
rcrb
xor
adc
lret
mov
out
sub
test
pusha
pop
push
repz
add
push
jecxz
and
jmp
in
or
lods
adc
push
in
das
fwait
cmp
rorl
cli
push
addb
fisubrs
imulb
add
scas
lcall
outsb
fcoms
movsb
gs
imul
mov
es
lock
stos
and
jae
jecxz
cs
add
pusha
in
out
aam
les
es
fcmovb
xchg
mov
sub
fsubl
rcr
cmp
pop
cmp
in
inc
sub
addl
jmp
sub
call
sbb
lret
idiv
pop
sti
in
dec
daa
into
inc
adc
mov
pop
movsb
scas
fst
adc
in
xchg
std
imul
jmp
pop
call
loop
inc
sub
fdivs
mov
arpl
mov
lcall
js
dec
jmp
mov
dec
loopne
mov
andl
push
sbb
lret
stos
fmuls
lods
pushf
mov
mov
xchg
nop
push
pop
lds
lret
dec
xchg
dec
test
insb
int
sbb
pop
push
leave
sbb
inc
sub
sbb
div
movsb
arpl
bound
shll
je
push
rorb
loop
fwait
xor
repz
ljmp
dec
mov
aas
xor
cmp
adc
xchg
shrl
or
xchg
jbe
push
aam
pop
mov
mov
jo
ds
gs
js
nop
popa
and
inc
xor
cltd
leave
notl
movsl
imul
pop
jnp
mov
inc
xchg
adc
arpl
sub
dec
mov
dec
movsb
call
jl
adc
loope
in
jecxz
pop
xchg
lret
sbb
push
adc
cmp
mov
xchg
test
jg
ret
enter
push
push
sbb
sub
sbb
sbb
add
sarl
pop
pop
fisubrs
imul
dec
rcll
sub
mov
pushf
insl
int
das
fiaddl
mov
testl
ret
fidivrl
mov
sbb
popa
sub
adc
into
xlat
adc
mov
jmp
xchg
pop
loop
pop
jg
dec
xor
pop
push
and
pop
std
pop
push
jl
push
jle
lods
jl
outsb
cmp
inc
push
mov
xchg
loope
popa
fstpl
jbe
sub
mov
push
and
inc
sub
and
ljmp
inc
jnp
addr16
sahf
or
pop
mov
mov
and
pop
insl
lret
clc
aaa
sbb
fs
fildll
push
add
lods
cmpsl
iret
cmp
mov
xor
dec
clc
out
xchg
fdivs
imul
leave
pop
mov
mov
add
sahf
mov
dec
bound
int
shll
sub
dec
test
push
add
pop
and
sbb
adc
sbb
lds
or
iret
push
lea
jle
arpl
call
inc
outsl
shrb
adc
pop
popf
lcall
inc
scas
push
incl
out
adc
mov
imul
fcom
lea
outsl
leave
insb
fstps
adc
stc
pop
xor
adcl
cmp
mov
aas
int
outsl
in
dec
imul
pop
aad
xor
push
sti
mov
jl
sub
or
mov
and
and
pop
ret
dec
and
fdivrs
cmpsb
inc
dec
push
mov
addr16
enter
push
test
push
jno
add
mov
jbe
inc
xlat
daa
lret
mov
mov
mov
pushf
mov
cmpsl
pop
sub
daa
dec
aam
xchg
sbb
ja
icebp
iret
fcmove
rcl
ret
cs
call
or
popa
daa
inc
dec
sub
hlt
pusha
jle
daa
mov
out
cld
ret
popl
mov
mov
inc
jl
popf
in
sub
stos
mov
sub
or
jae
or
icebp
mov
test
in
jbe,pt
inc
clc
jnp
dec
dec
jmp
cltd
inc
stos
imul
inc
lock
int3
pop
lods
push
incl
call
ds
sarl
cmpxchg
dec
pop
decl
mov
xor
dec
dec
mov
lods
xchg
call
mov
xor
pop
pusha
mov
pop
adc
out
test
cmp
cmc
stos
sti
push
or
sahf
or
test
in
arpl
mov
shll
add
dec
cli
push
fwait
xchg
dec
pop
ds
stc
and
pop
push
pop
stc
js
outsb
imul
addr16
add
jle
jmp
insb
mov
dec
xor
pop
test
mov
pop
lahf
bound
cmp
std
jl
push
movsl
insb
jns
lret
ror
add
add
in
ret
test
add
in
sbb
push
adc
xor
repnz
hlt
test
cmp
sbb
mov
sbb
test
into
xor
out
bound
mov
aas
daa
test
scas
ret
lahf
sub
sub
roll
add
xor
jmp
lcall
and
cmpsl
in
leave
mov
dec
mov
outsl
jmp
rolb
imul
ret
out
fstpt
dec
popf
inc
insb
push
push
mov
cmpsl
xchg
lods
lock
sar
ja
fiaddl
loop
fwait
cmp
outsl
sub
cwtl
cmp
out
ss
inc
scas
rclb
adc
testl
dec
and
push
mov
ja
jb,pn
adc
xchg
inc
fs
fstpl
sbb
mov
es
push
mov
xor
mov
lcall
nop
jl
xchg
shlb
xor
xchg
cs
cmpsb
pop
insl
add
xor
jne
dec
cmc
inc
out
xlat
lock
aam
cltd
mov
incl
mov
adc
aam
cli
lcall
sbb
sbb
test
cmpsl
jp
mov
cwtl
fwait
mul
mov
lods
fldt
es
dec
cli
scas
daa
pop
cmp
in
in
push
ja
pop
out
jp
jo
int
pop
lret
shlb
mov
ja
inc
scas
je
push
adc
sub
popa
pop
repz
enter
cmp
or
inc
les
out
imul
out
push
xchg
dec
out
push
mov
pop
rorl
das
xor
in
push
sbb
and
pop
or
das
cwtl
pop
call
in
pop
or
sahf
sub
lahf
inc
int
test
daa
xchg
sub
mov
and
xchg
jno
mov
insb
adc
add
mov
testb
mov
sub
bound
addr16
out
push
int3
mov
inc
dec
loopne
aas
xor
add
xor
pop
mov
pop
mov
mov
out
movsl
addr16
fdivs
aas
adc
icebp
test
inc
cmp
sub
adc
repz
inc
mov
cmpsb
jns
pop
clc
add
aas
or
icebp
sti
cld
pop
xchg
stc
daa
inc
call
sbb
insb
mov
push
mov
cmp
test
test
ret
mov
push
inc
xor
repz
cmp
in
mov
cltd
and
jle
imul
int
xlat
adc
rclb
cmp
jne
or
push
bound
ret
rcll
cmp
lods
inc
aam
xor
mov
rdtsc
dec
es
push
stos
and
ds
cmp
mov
repz
sti
mov
lcall
xchg
fstpt
pop
xchg
sbb
mov
lods
pop
add
lock
mov
mov
mov
rclb
insb
xor
add
and
scas
xchg
sbb
and
dec
dec
sbb
pop
xchg
ljmp
cmpsb
push
xlat
mov
and
mov
mov
inc
jb
pop
mov
mov
loope
push
popa
sti
aaa
xchg
mov
fidivrl
pop
pop
push
repnz
insb
xchg
dec
cs
mov
imul
cmp
adc
outsl
inc
sbb
push
add
test
push
jb
sub
inc
cwtl
or
cli
xchg
mov
push
jle
pusha
rcr
add
es
add
dec
mov
aas
push
adc
fucomi
aad
sub
xor
rol
ret
sbb
jecxz
and
cs
or
inc
jns
xchg
fiaddl
sub
iret
and
jmp
add
pop
mov
imulb
mov
mov
test
imul
mov
divb
std
jp
add
add
inc
xor
loope
imul
les
push
xor
dec
fdivrl
mov
pop
jns
pop
and
dec
fwait
sarb
mov
jb
push
sub
aas
push
pop
ss
mov
mull
xchg
cmc
repz
mov
add
cltd
jle
xchg
push
fidivrl
dec
push
mov
ret
mov
pushf
inc
push
js
cmp
cmpsb
or
jle
cli
test
xchg
cmp
jnp
scas
adc
nop
mov
lahf
dec
faddl
mov
call
sbb
testb
xchg
int
sub
add
int3
or
les
or
adc
sbb
jbe
int3
cwtl
in
mov
adc
ss
jl
das
or
and
rcrl
mov
cmp
outsl
shrb
push
inc
int3
xchg
cmc
push
ret
call
insb
xchg
js
filds
push
push
stos
pop
xchg
dec
je
pushf
hlt
mov
cmpsb
lea
into
add
xlat
push
push
aas
ljmp
mov
xchg
fimuls
inc
xchg
test
fucomip
push
dec
sbb
cmp
idivb
sub
sub
jl
pop
test
mov
and
sub
adc
jl
sbb
inc
test
mov
or
les
insb
scas
imul
sub
repz
lahf
mov
fcoms
pusha
cltd
out
outsl
pop
test
lods
testl
push
aaa
test
sarb
dec
mov
and
rol
or
push
fs
xchg
shrb
mov
lds
filds
imul
pop
test
push
adc
jb
outsl
jae
inc
add
les
psubusw
or
sub
or
test
shr
push
sub
rcl
inc
adc
sub
xchg
jb
mov
cli
sbb
mov
test
mov
mov
xor
addr16
mov
sti
mov
das
iret
dec
mov
insb
cmp
fbld
mov
mov
insl
int
mov
or
rcll
xlat
test
sbb
mov
cmp
sub
test
fwait
mov
pop
push
addr16
int
xor
addr16
test
jl
pushf
scas
cs
and
adc
xchg
imul
or
jne
cli
mov
add
bound
sbb
int3
fbstp
sub
jno
mov
in
sbb
inc
jo
sbbl
xchg
movsl
popa
jae
inc
insb
mov
outsl
das
test
dec
push
mul
cmpsl
mov
adc
iret
dec
hlt
sbb
lods
sahf
enter
clc
rorb
dec
jae
rolb
mov
xchg
cmpl
scas
sub
outsl
bound
lea
adc
cmp
or
mov
int
je
add
or
loop
fwait
bound
rorb
xor
cltd
jb
jo
fs
data16
inc
mov
xor
and
pop
jnp
push
cli
jnp
mov
lods
mov
out
aam
aas
xorb
jb
inc
cmp
hlt
in
js
xor
mov
leave
movsl
push
scas
and
insl
popa
lahf
mov
xor
xchg
cwtl
jg
mov
mov
mov
adc
mov
xor
mov
cli
mov
das
pop
pop
lods
arpl
xlat
pop
adc
dec
add
add
fxch
push
and
adc
mov
mov
sub
push
sbb
sti
xor
xlat
xor
sbb
scas
push
mov
mov
sbb
inc
outsl
shrl
push
dec
adcb
mov
xchg
xor
and
pushl
jge
loop
cltd
cli
sub
daa
push
or
shlb
push
std
test
xor
adc
xchg
je
mov
mov
shlb
aam
sbb
rcll
movsb
and
push
cmpsb
adc
dec
push
push
xor
and
lahf
inc
sarb
leave
jnp
outsl
scas
fimull
loopne
jo
test
mov
cmp
aaa
test
jge
das
jo
and
fidivrs
inc
dec
lock
add
mov
inc
cmp
and
stos
std
into
push
dec
rorl
inc
inc
mov
gs
mov
ss
mov
push
lea
leave
movlhps
cmp
sbb
xchg
lret
or
mov
inc
xchg
test
dec
es
and
mov
fildll
pop
loopne
push
jecxz
xchg
daa
jmp
inc
or
std
dec
ds
stos
hlt
dec
cs
pop
test
sbb
pop
cmp
leave
loope
mov
hlt
fisttps
das
jmp
mov
lea
cmp
mov
mov
imul
mov
cmp
daa
xchg
jb
scas
imul
insl
js
pop
jecxz
loopne
rcrl
insl
sti
lea
dec
enter
insb
rorb
lcall
mov
js
sub
sbb
sub
test
leave
clc
fistps
xadd
sub
or
adc
out
and
push
into
loop
xchg
stos
mov
stos
ljmp
fimuls
insl
jmp
gs
xor
ja
incl
std
roll
adc
fistpl
int3
std
fwait
jg
push
aad
mov
and
push
shl
pop
mov
xor
mov
daa
or
sbb
sbb
fs
repz
push
mov
repnz
pop
jb
lret
shll
cmpsb
shrl
mov
dec
aaa
xchg
test
and
hlt
adc
lahf
dec
dec
push
mov
mov
iret
insl
jb,pn
cmpsb
dec
adc
dec
jns
and
mov
adc
popa
cld
jg
sub
pop
mov
fs
mov
pop
aam
mov
push
in
xor
cli
ljmp
inc
sarb
js
addb
dec
mov
addl
or
sarb
mov
jnp
sbb
out
pusha
adcb
pushf
adc
pop
lcall
sbb
sbb
lcall
stc
jl
jmp
out
sub
xlat
mov
rorl
mov
aas
test
sbb
call
sbb
rorb
adc
jmp
inc
pushf
push
mov
leave
enter
xchg
mov
gs
ss
inc
jo
mul
decb
insb
xorl
repnz
into
mov
insl
mov
je
xchg
jge
popa
arpl
sub
push
adc
xchg
outsb
mov
nop
pop
ret
mov
mov
cmp
outsb
xchg
sbb
push
out
push
sarl
mov
frstpm(287
mov
lret
call
les
mov
mov
jnp
andb
repnz
push
sub
cmp
test
je
and
idiv
daa
mov
pop
mov
int3
insl
adc
jmp
inc
cmp
or
adc
sub
push
stos
les
scas
and
push
jnp
mov
push
inc
mov
cwtl
leave
add
mov
add
pusha
je
adc
enter
imul
leave
cmp
mov
adc
fistpll
xchg
pusha
sub
pop
sub
inc
and
sahf
xchg
xchg
push
fcmovne
or
adc
std
adc
nop
add
sbb
mov
cmc
call
fisubrs
cmpl
xchg
popa
mov
xchg
repnz
outsb
or
sarl
in
jp
adc
jne
xchg
and
sbb
addr16
add
push
sahf
inc
insb
scas
xchg
in
fs
pop
imul
mov
xchg
loope
push
cmc
xor
call
dec
mov
jbe
cmp
cmp
lods
adc
xor
fwait
adc
add
insl
es
loop
xor
mov
push
inc
sub
jmp
xchg
sar
jmp
je
movsl
imul
jb
imul
dec
dec
fbstp
hlt
enter
scas
inc
add
movb
adc
dec
lret
xchg
shrl
xor
mov
push
sub
or
inc
mov
push
les
lea
mov
mov
cmp
xor
pushf
lock
add
xchg
cltd
repnz
repnz
fmuls
enter
xchg
in
xor
dec
fistpl
xchg
test
pop
cmp
push
push
xor
jp
out
daa
arpl
mov
lock
add
mov
test
ds
sbb
cmp
inc
fs
mov
xor
das
fsts
jmp
push
shl
cmp
mov
jno
sub
inc
loope
pop
bound
inc
mov
jle
stos
push
lock
negb
mov
push
out
adc
sbb
add
ret
sub
dec
shlb
push
sbb
pop
pop
mov
lea
push
icebp
cli
push
inc
orb
jg
addb
aaa
jne
int3
dec
lret
sbb
jbe
mov
jmp
add
out
lahf
pop
cmp
xchg
add
xchg
xor
xchg
mov
lods
pop
ret
sub
xchg
mov
test
pushf
sbb
cltd
orl
ret
sub
push
mov
pusha
adc
in
bound
add
jae
cmp
test
rclb
cmp
sub
jg
fisubrs
popa
sbb
test
push
push
dec
insl
pop
push
inc
jno
xor
mov
xor
fidivs
mov
pushf
and
in
adc
sbb
movsb
mov
adc
cvtdq2ps
or
sub
push
cli
pop
push
fwait
adc
je
and
cmpsl
cmpb
add
jle
les
mov
jo
push
jge
sub
jp
push
cltd
out
mov
mov
inc
test
jae
jmp
mov
xor
insl
mov
in
loope
inc
lahf
outsl
pop
xor
scas
or
or
xchg
mov
dec
es
jmp
leave
xchg
mov
adcl
push
out
insl
dec
lods
mov
inc
mov
xlat
sbb
ja
lahf
inc
mov
sub
movsb
out
jl
xchg
inc
in
sarb
cmp
jg
out
pusha
xor
outsb
lcall
insb
out
dec
jge
scas
jnp
movsb
pop
jno
fidivrl
push
cmp
or
outsb
xchg
ret
xchg
or
iret
cmpsb
push
mov
fildl
cmpsb
jb
push
mov
iret
jmp
push
inc
xchg
mov
bound
add
xor
in
mov
fidivl
xor
jns
dec
lods
sti
sub
ljmp
hlt
jmp
mov
inc
xor
xchg
imul
inc
imul
push
out
and
mov
mov
lea
shll
hlt
test
sahf
cmpsl
jb
les
gs
clc
sub
mov
hlt
cmc
cmp
in
push
or
adc
inc
arpl
lea
js
jmp
outsb
ljmp
xchg
call
cmc
jp
sbb
inc
pop
call
xor
out
test
in
push
xchg
movsl
fisubrl
xchg
cmp
xor
add
pcmpgtd
pushl
div
sub
int3
adc
cli
fwait
mov
xchg
push
cmp
loop
and
les
orb
xchg
loopne
dec
lods
outsl
cmp
push
mov
stc
lds
out
daa
mov
mov
xchg
fdivrp
outsl
repz
add
mov
add
ret
mov
lahf
push
sub
mov
into
cmpsb
stos
mov
mov
andb
fcomps
loope
cmp
les
jp
cld
out
and
sbb
or
out
pop
mov
ret
push
ret
push
jp
xor
sahf
pop
and
inc
push
xor
sbbb
xor
mov
loopne
fnstsw
sbb
out
pusha
jge
jecxz
fwait
imul
mov
and
pop
xchg
sub
xor
mov
sub
aad
lcall
xchg
in
mov
push
into
or
scas
iret
fs
mov
mov
imul
xor
fildl
setbe
sub
lret
and
sbb
cld
jnp
sbb
push
shlb
fdivrl
stos
addr16
sub
leave
stc
mov
mov
sahf
mov
out
sub
push
int
push
test
loop
or
je
insl
adc
popa
repnz
insl
xor
xchg
int
sub
filds
mov
loop
dec
daa
xchg
sbb
pop
fdivs
sahf
mov
ror
push
data16
fildl
push
xchg
and
addl
jmp
push
jae
fwait
movsl
out
push
adc
icebp
xchg
jl
scas
out
pop
dec
inc
xchg
dec
jge
dec
pop
jge
xor
and
sub
push
and
push
push
sub
sbb
adc
int
jnp
xchg
mov
mov
adc
push
jb
mov
adc
pop
mov
pop
dec
jl
cld
sbb
push
ss
mov
mov
mov
test
int
in
mov
sub
lock
mov
jo
lret
test
mov
cltd
mov
or
pop
mov
inc
inc
ficoml
jo
jns
and
das
lret
sahf
fistl
pop
inc
inc
jnp
repz
rorb
push
mov
dec
ret
test
pusha
xor
cmp
ds
in
jb
and
movsb
sub
jo
xchg
pop
inc
sahf
jmp
xor
jns
cmp
aam
cmp
lods
and
js
subl
adc
sbbl
ja
xor
add
cmp
sbb
jae
icebp
lcall
pop
leave
cmp
sbb
mov
inc
cmc
jecxz
sbb
dec
add
cmp
and
repz
xor
mov
ret
sbb
arpl
cmp
mov
testb
outsl
lds
sbb
hlt
add
pop
sbb
aas
mov
int3
daa
mov
push
je
mov
daa
xchg
insb
jae
nop
stos
aam
sub
sub
pushl
sbb
xor
xchg
mov
or
jg
xchg
jnp
mov
mov
and
das
mov
lahf
pop
ret
dec
neg
xchg
cmp
cmc
or
jno
fmul
pop
testl
je
xchg
add
data16
outsb
cwtl
mov
pushf
sub
div
jl
lods
jmp
push
dec
adc
or
pushf
cmp
push
lea
dec
dec
xchg
mov
das
movsb
das
jae
je
mov
push
cld
fs
xor
cmp
push
sti
mov
arpl
mov
enter
scas
xchg
movsb
xor
shrb
mov
shrb
lock
jle
sub
cmc
es
fwait
scas
fdivrl
jb
mov
mov
dec
cmp
add
lock
or
xchg
pop
test
shrl
stos
xor
jl
mov
cli
mov
sbb
imul
testb
sbb
xor
fcomip
into
push
push
test
mov
in
outsl
add
mov
and
sahf
in
shl
out
xchg
xchg
mov
data16
test
adc
xchg
push
fcomi
dec
inc
push
sarl
imul
imul
push
jmp
jecxz
lods
inc
sbb
hlt
jnp
xor
push
pop
or
dec
inc
pop
or
inc
pop
sub
mov
jno
cwtl
xchg
shll
ja
fbstp
or
push
push
popa
lds
aaa
jecxz
bound
fstpl
or
jo
xchg
cmp
xlat
rorb
test
sub
mov
repnz
push
cli
int
add
push
lods
push
dec
in
and
sub
loope
mov
shl
cmp
hlt
rol
jae
popl
xor
cmp
out
lods
cmp
in
push
mov
or
adc
inc
pop
and
rcrb
xor
sub
fcoms
roll
add
pop
in
mov
inc
lock
mov
lds
iret
ret
pop
xchg
push
daa
push
fiadds
sarl
in
std
ficoms
fidivs
sub
xchg
sarl
mov
sub
aas
popa
and
mov
mov
pushf
xchg
stos
xor
dec
js
bound
stc
in
pusha
dec
mov
mov
rcrb
mov
stc
call
push
nop
fidivrs
sub
shll
stos
shlb
mov
inc
sub
adc
add
pushf
ljmp
imul
or
inc
mov
popf
xchg
lds
lahf
jo
mov
jno
jnp
jbe
pop
push
scas
pop
jle
dec
arpl
push
shlb
gs
ljmp
jecxz
push
dec
cmp
xchg
xor
mov
sub
ret
arpl
fidivrs
pop
mov
lea
sbb
jg
jno
js
mov
ret
lock
dec
push
sbb
or
in
xchg
xchg
ror
and
cmpsb
ret
lock
mov
or
sbb
insb
imul
and
outsl
test
inc
jb
lock
inc
fadd
xchg
movsl
mov
mov
xor
test
lods
cmp
loope
pop
mov
and
and
stos
int
jle
loop
mov
mov
dec
cwtl
loope
cmp
jge
das
mov
iret
das
icebp
or
xchg
sub
adc
mov
popa
or
mov
in
aaa
jmp
loop
repnz
xchg
or
push
cmp
add
outsl
in
xor
or
stc
iret
push
xchg
in
cmp
fisubs
movsl
mov
inc
nop
and
adc
fwait
mov
addr16
sub
add
arpl
mov
repz
popa
stc
add
cltd
bound
pushf
inc
mov
sbbl
inc
jnp
rclb
shlb
push
sub
or
cli
dec
bound
cmp
movsl
int
adc
cmpsb
cli
ja
bound
jecxz
cmp
aaa
sbb
or
hlt
push
inc
lds
js
outsb
or
push
dec
test
jle
sbb
jp
fistpll
cwtl
and
pop
jb
cmpsb
pop
sarb
loopne
outsl
mov
outsl
out
jge
dec
sub
inc
add
mov
lods
cli
insl
xor
mov
out
rcll
sub
mov
adc
imul
mov
mul
jecxz
ja
cltd
sbb
test
sub
jno
test
enter
ja
repnz
push
mov
shl
push
neg
test
ljmp
fsubs
je
rcrl
lea
std
and
lea
std
nop
xor
cmp
xchg
xlat
jnp
xor
sbbb
jb
mov
adc
in
cmc
test
xchg
ficoml
shrl
lods
pop
insb
loope
xchg
inc
in
xchg
dec
iret
test
jnp
inc
sbb
mov
outsb
insl
fstps
mov
cli
mov
sbb
mov
sbbl
call
subb
mov
call
incb
jle
aam
mov
push
cmpsl
add
outsb
mov
jnp
push
test
lret
pop
mov
mov
mulb
cwtl
xchg
idivl
mov
lcall
dec
or
ds
test
inc
mov
xchg
aas
js
mov
mov
sub
jno
out
cmc
scas
ret
ret
mov
mov
xor
jno
xchg
aas
jbe
aad
hlt
stc
fisttpll
clc
jnp
lods
out
sub
shll
sbb
test
shll
mov
sbb
outsl
push
cs
movsb
pop
sub
mov
idivb
int3
pusha
add
aaa
add
out
js
das
gs
aam
pop
pop
or
dec
xor
inc
imul
pop
cmpsb
lods
xchg
mov
out
xor
out
lret
jl
fidivl
es
push
std
clc
js
xchg
loope
jmp
jns
mov
cwtl
popf
push
xchg
or
insl
dec
or
jle,pt
mov
jne
pop
cmp
ss
push
loope
or
mov
ret
imul
addl
andb
enter
stos
int
fisubrs
push
test
cmpsb
xchg
js
sbb
sarb
cmpsb
imul
insb
add
in
fsubl
int3
negb
mov
cwtl
data16
xchg
cmp
add
outsb
cld
inc
xchg
fsts
jne
or
pop
and
addr16
mov
or
fdivs
or
in
xor
dec
adc
test
mov
sti
rcrb
or
xchg
mov
dec
clc
sub
jb
stc
cmp
mov
orl
add
or
cmp
mov
mov
jmp
inc
adc
jmp
ds
lahf
or
jnp
in
imul
inc
dec
cmp
pop
lds
pusha
mov
jno
mov
adc
jecxz
cs
decl
stc
or
shrb
test
push
flds
sub
into
push
insb
cwtl
out
adc
out
pop
ss
insb
test
xchg
scas
push
scas
arpl
lock
icebp
jge
pop
pop
daa
inc
mov
leave
andb
es
shrl
push
lods
ja
mov
aad
mov
jp
dec
jge
cmp
cmc
xchg
cmp
mov
call
jl
or
cmp
inc
std
jno
inc
mov
into
dec
mov
aad
inc
xchg
mov
loope
leave
sub
stos
int3
pop
ja
movsb
rolb
repz
sub
movsb
into
adc
ret
inc
adc
fnstenv
pop
mov
xor
ds
sub
xchg
nop
cmc
pop
and
xlat
pop
add
movsb
iret
or
pop
xchg
jno
adc
cmp
inc
out
movsb
outsb
shrb
nop
xor
and
cmp
cmp
out
ror
sahf
cmp
add
ret
ss
push
inc
js
int3
outsl
xchg
fmulp
pop
les
aas
adc
hlt
xor
sbb
inc
cmp
pusha
iret
ficoml
xchg
stos
orb
jne
mov
push
mov
fbstp
in
jl
sbb
sub
mov
sbb
pop
xor
or
mov
xchg
jge
mov
insb
pop
loope
inc
out
xchg
inc
bswap
jecxz
inc
sub
notb
sub
dec
jbe
dec
ja
cltd
aad
pop
loope
adc
sub
adc
sub
fwait
inc
mov
mov
pop
ljmp
fstpt
mov
cmp
mov
xchg
mov
mov
and
iret
loopne
cli
aaa
imul
sahf
mov
jns
sbb
icebp
sbb
fcmovbe
sbb
test
xor
out
inc
fdivr
inc
cmp
test
out
cmpsl
xchg
fimuls
cld
sbb
ja
loope
ljmp
jp
andb
jbe
dec
sub
sbb
fsts
test
sub
dec
cmp
daa
jno
push
and
mov
push
xor
cmp
rcrb
push
and
push
inc
arpl
xchg
pop
mov
test
lock
movsb
insb
xor
pop
mov
cltd
and
xor
cmp
fisubl
clc
imul
mov
push
jmp
or
xchg
mov
lcall
std
addl
mov
outsb
jg
pusha
mov
mov
push
mov
ret
inc
xor
dec
or
mov
test
fs
lret
or
popf
jecxz
push
cmpsl
dec
cmpsl
inc
adc
dec
or
jecxz
adc
js
push
or
jge
add
add
insl
mov
idiv
push
dec
mov
cmp
enter
loop
out
adc
inc
xor
mov
push
xchg
jae
jbe
orl
inc
xchg
push
or
pop
mov
in
push
jp
jb
mov
adc
into
and
xchg
pop
insl
bound
inc
jmp
test
orb
aam
subl
sbb
int
out
inc
lahf
pushl
sub
inc
scas
sub
add
jecxz
ds
and
inc
dec
sbb
xchg
inc
or
loope
jmp
orl
inc
and
loope
xchg
and
lea
sbbb
dec
mov
call
fcompl
roll
cmp
jnp
sub
cmpsl
lds
mov
fcmovne
cmp
or
mov
push
inc
scas
xchg
xchg
lds
jmp
xchg
lahf
push
and
jo
dec
out
je
in
fldl
cmp
mov
outsl
loope
out
aaa
mov
mov
push
fists
pop
jno
cltd
pop
mov
inc
movsl
jmp
inc
mov
jmp
add
cli
idivb
lea
in
cli
ljmp
mov
mov
cli
dec
adc
mov
mov
xchg
shl
lahf
stc
rcrb
xchg
cli
mov
lock
pop
xchg
push
adc
lret
pop
push
fwait
or
scas
outsb
dec
pop
pop
sub
ss
mov
les
jne
loope
pop
push
data16
xchg
xor
sub
jb
clc
jecxz
test
dec
js
push
sub
mov
mov
or
add
cld
mov
and
xor
xchg
mov
js
sbb
cmp
jg
popf
pop
test
testb
repz
pop
pop
and
nop
cltd
cmp
jg
mov
xchg
clc
ja
xlat
inc
jns
lahf
cli
lret
mov
mov
push
lods
add
cmpl
mov
ficoms
ret
lea
je
rcr
cmpsb
mov
leave
test
and
push
sbb
xor
adc
es
dec
or
call
push
or
pusha
add
ja
xlat
and
leave
add
jbe
xor
cltd
mov
add
stos
into
xchg
adc
insl
pop
repz
sbb
xchg
sar
out
repz
lods
lahf
xchg
fcoml
fsubrs
cmp
mov
mov
outsb
out
fiadds
dec
or
push
test
jno
loopne
fwait
xor
test
popa
and
mov
loope
out
loop
inc
and
xchg
std
and
flds
imul
cmpsl
cmp
lock
push
sbb
inc
inc
rolb
ficomps
fwait
outsl
pop
orb
pop
fmulp
jb
push
push
jge
add
aad
stos
and
sbb
stos
xor
inc
arpl
cmp
push
dec
sub
and
cmp
in
aaa
je
mov
xchg
push
push
and
lds
dec
cmp
pop
repz
and
nop
nop
or
xchg
aaa
pop
sti
ret
and
imul
pop
sub
pop
test
xchg
jo
or
movsl
or
lods
popf
mov
in
dec
push
out
call
push
aad
dec
mov
mov
shrb
test
jno
ja
clc
mov
sbb
das
insl
imul
lock
dec
push
out
data16
repz
shlb
in
ret
gs
testb
sbb
or
into
icebp
and
lcall
dec
or
add
xor
sub
int
sbb
sbb
mov
imul
shrl
sbb
call
shlb
sbb
mov
repnz
mov
cltd
imul
pop
cs
enter
pop
mov
std
mov
ret
lahf
pop
adc
pop
lret
and
mov
and
mov
lahf
pushf
in
xchg
mov
xchg
loop
arpl
pop
enter
jae
stos
adc
nop
test
test
rclb
add
insb
push
daa
xchg
cltd
push
xor
test
push
stos
pop
lock
pop
jnp
lods
pop
push
movaps
jnp
cmp
lods
mov
cmp
cmp
mov
in
addl
adc
insb
inc
mov
jge
push
xchg
es
xchg
mov
adc
xchg
mov
xor
mov
add
add
pop
and
push
in
inc
and
mov
je
pushf
ljmp
sbb
sbbl
cmp
dec
les
repnz
or
adc
sti
fs
push
pushf
xorl
xchg
gs
stos
arpl
mov
push
idivl
mov
and
mov
aas
mov
adc
dec
fwait
xor
jl
fbld
or
mov
sub
testl
add
add
xchg
cmp
mov
cmp
xchg
adc
imul
not
cmp
mov
xor
mov
cli
inc
and
dec
pusha
push
mov
push
pusha
xchg
xchg
inc
icebp
loopne
subl
addb
out
or
jle
mov
fwait
pop
hlt
push
lcall
out
enter
jl
and
sub
or
add
in
jbe
push
dec
sti
lds
pop
adc
mov
je
rcll
sub
sahf
add
cmp
pushf
cld
in
dec
pop
sub
and
mov
and
mov
in
dec
sub
notb
aaa
fiaddl
add
xchg
orl
add
add
fwait
xchg
lea
mov
inc
xchg
xor
push
faddp
sbb
xor
sub
pop
stc
cmp
xchg
mov
out
pop
dec
dec
lock
xor
cmp
pop
push
push
cwtl
adc
icebp
lret
or
mov
nop
outsl
and
dec
arpl
dec
sahf
sbb
icebp
jge
mov
ret
loop
fst
pop
or
pop
into
int
shrl
inc
insb
shll
xor
inc
and
mov
jle
insb
pusha
sub
dec
xor
and
and
jnp
push
inc
cltd
out
fsubrs
jle
in
sub
mov
mov
mov
adc
sub
leave
jb
popa
pop
jmp
pushf
mov
dec
insb
mov
xchg
mov
outsl
aas
push
lock
daa
and
rcrl
ja
aas
js
pop
sub
xor
sbb
sbb
cld
lret
lcall
cmp
cmpb
das
mov
jmp
xchg
push
outsb
dec
xchg
dec
lods
inc
mov
jnp
push
sbb
sbb
inc
and
shr
andl
arpl
push
cmp
sub
add
adc
scas
inc
in
xchg
jmp
or
arpl
and
dec
movsl
xchg
mov
jns
ja
das
push
out
and
adc
imul
pop
mov
out
push
mov
xchg
or
dec
in
jne
or
jmp
or
push
push
xchg
pop
montmul
cmpsb
pop
mov
adc
inc
sbb
mov
addr16
lods
test
loop
xor
lods
inc
addr16
adc
daa
cmpsb
jl
call
ret
adc
in
push
movsb
fistps
adc
loope
push
mov
pushf
xchg
xchg
movsl
movb
pop
adc
cmp
push
mov
in
sbb
test
dec
ss
loopne
out
test
xlat
scas
mov
xlat
mov
push
sbb
push
imul
pop
popa
lds
sbb
cmp
jmp
xchg
xchg
jp
cmpsl
jno
xchg
movsb
addl
ja
fbld
push
loop
in
xlat
es
imul
push
sub
jno
adc
popa
push
clc
or
add
jmp
test
aaa
cwtl
scas
into
sub
mov
ret
xchg
and
xor
test
insb
incb
add
adc
and
pop
or
xor
loop
or
or
fincstp
jmp
pop
jb
sbb
fscale
mov
pop
push
lret
inc
dec
pop
or
loopne
xchg
repz
cmp
xchg
icebp
adc
scas
sbb
pop
mov
nop
loope
test
and
xchg
mov
test
push
fists
push
dec
mov
jmp
or
jne
pop
cli
sbb
adc
xlat
or
in
cmc
imul
inc
subb
cltd
pop
mov
jnp
mov
jne
sbb
sub
inc
subl
jge
into
std
bound
or
add
mov
pushf
dec
stos
jno
inc
push
ret
mov
cmp
mov
es
in
pop
xchg
and
incb
fidivrl
in
fs
lret
or
lret
xchg
lock
lret
mov
in
jo
xchg
push
dec
lcall
sbb
repnz
and
add
mov
add
jns
cltd
scas
cmc
pop
xchg
into
loop
notl
insb
push
mov
mov
sub
pop
jno
fsubl
push
xchg
cmp
out
mov
push
dec
sbb
sbb
push
mov
push
dec
fnstcw
add
jecxz
xor
cmp
jl
push
in
inc
enter
sbb
mov
adcl
out
mov
push
adc
xor
mull
lahf
int
xchg
insb
aad
sti
dec
pusha
int
mov
xchg
mov
stos
pop
lock
outsl
ljmp
dec
sub
xor
jbe
xor
sbb
adc
pusha
push
jecxz
adc
aas
inc
pusha
mov
fcomip
aaa
stos
lret
mov
jg
and
lret
and
pop
pop
jmp
shlb
fwait
test
pop
mov
ss
test
pop
sar
scas
jne
rclb
jo
das
loopne
cmp
imul
lea
loop
inc
test
pop
out
mov
dec
in
jp
fidivs
shrb
lcall
sbb
push
addr16
ffree
cltd
std
addr16
pusha
sbb
inc
imul
xchg
xor
popf
xor
mov
or
jecxz
jecxz
lahf
mov
fildll
inc
adc
lret
sbb
inc
in
adc
cmpsb
in
sub
push
ja
insl
mov
xor
mov
push
sbb
xchg
and
and
push
jns
adc
sub
rcl
movsb
inc
out
and
mov
cltd
mov
test
repnz
xor
mov
mov
scas
xchg
cmp
ss
pop
les
shll
test
mov
imul
mov
inc
ret
xor
dec
clc
inc
inc
in
mov
rep
fiadds
or
mov
cmpsl
sti
jle
add
repnz
mov
inc
fiadds
or
push
push
movsl
add
pop
jg
fstl
icebp
jo
in
es
popa
imul
outsl
nop
rdtsc
scas
mov
addr16
std
seto
xor
or
add
ds
ret
fists
pushf
sbbl
jecxz
jge
or
stos
mov
in
dec
mov
mov
dec
push
insb
cld
and
or
and
jmp
test
cmp
xchg
pop
adc
push
dec
pop
mov
cmpsb
xor
xchg
push
mov
sub
cmp
add
orb
hlt
arpl
mov
lock
enter
mov
sbb
ljmp
mov
out
and
insb
jp
mov
aam
or
nop
sub
ss
or
lds
out
mov
push
jg
test
jno
pushf
or
pop
mov
xor
and
popa
xor
loope
addr16
repnz
repnz
and
push
cmp
jnp
inc
mov
xchg
cs
jb
hlt
add
scas
cmp
or
pop
xor
shll
into
xorl
cmp
in
push
and
xchg
pop
aas
cli
sbb
jbe
leave
mov
mov
rol
addr16
mov
mov
insl
fisttpl
aam
inc
repnz
xchg
or
inc
test
loop
cmpsb
pop
je
test
add
sarl
out
xor
or
ret
xor
xor
mov
movsl
shl
pusha
sahf
xor
add
mov
pusha
dec
sub
inc
push
sbb
icebp
loop
jne
inc
out
sub
movsl
fmuls
push
into
dec
jp
xor
inc
shlb
repz
les
jbe
jmp
xor
push
ja
dec
push
add
test
rcrl
adc
adc
xorb
and
sarl
adc
out
sub
sti
mov
movsl
adcl
and
mov
push
mov
ret
xor
inc
mov
cmp
fisttpll
js
lret
out
pushl
cmp
add
std
jb
les
imul
leave
int3
test
xor
stos
jl
push
xchg
mov
dec
xchg
dec
movsl
jnp
lret
out
jne
cmp
test
mov
or
mov
mul
ret
popf
jecxz
pop
mov
sbb
jecxz
inc
adc
sbb
movsb
add
mov
adc
push
push
int3
stc
std
gs
mov
push
and
pop
addb
or
shrb
pop
jne
pop
bound
lds
outsl
rclb
cmp
bound
dec
inc
xor
xor
aaa
outsb
xchg
test
inc
sahf
fidivrs
mov
adc
cld
std
or
push
pop
orl
xchg
and
inc
jno
scas
push
cmp
lods
pop
ret
lcall
xor
aaa
mov
and
jg
push
aas
jecxz
add
jae
push
iret
xor
push
sbb
repnz
jns
xchg
cmp
in
xchg
loopne
fcomps
dec
in
frstor
cmc
mov
pop
movsb
mov
push
out
adc
jecxz
and
adc
push
in
ret
clc
loope
jo
cmp
jp
ret
sub
pop
sub
or
cmp
xor
mov
rcll
xor
cld
mov
or
lret
lds
add
adc
fwait
scas
mov
dec
pop
lret
stos
ja
and
xchg
sbb
and
sahf
fwait
aas
jnp
xchg
lock
add
push
and
push
fldcw
lret
xor
mov
jmp
pop
jle
cs
jp
test
in
scas
aas
clc
pop
lcall
cmp
repz
test
add
in
and
adcb
outsl
inc
mov
mov
lcall
stos
add
aam
push
and
scas
out
lods
ret
pop
push
add
mov
in
imul
xor
dec
shrb
jae
cld
sti
or
jno
cmp
mov
pop
xchg
xor
xchg
stos
jo
sbb
gs
cmpsl
subb
fistps
test
fwait
xchg
out
xchg
mov
adc
xor
lret
fwait
sub
or
int3
mov
pushf
xor
enter
in
or
adc
cmc
and
fnstsw
dec
mov
cltd
lock
loopne
imul
ss
es
aad
dec
xchg
xor
bound
lahf
or
roll
sbb
push
sbb
sub
mov
adc
and
cmc
sahf
pushf
and
mov
or
jae
stc
adc
sub
mov
cli
push
jae
push
in
ret
adc
xchg
mov
call
into
shrb
lahf
mov
push
mov
mov
push
inc
pusha
dec
xchg
jae
and
int
pushw
sbb
in
pop
push
dec
repz
shll
and
or
xchg
mov
test
leave
cs
mov
jbe
xchg
movsl
aaa
mov
xchg
cmpsb
mov
sub
inc
add
xchg
in
mov
addr16
xchg
or
jno
xchg
mov
cs
in
movl
sti
fimull
fisttpl
xchg
xchg
aaa
xchg
xchg
xchg
ret
cmp
add
xchg
xor
outsl
push
push
xacquire
cwtl
xor
movsb
test
cmp
jne
es
xor
push
push
or
sub
and
xchg
cmp
pop
shlb
in
rol
add
sbb
or
inc
adc
pop
pop
mov
pop
mov
inc
xor
aas
adc
rorl
sbb
mov
pop
sub
or
cmp
sti
mov
pop
sub
punpcklbw
mov
ss
movsb
sbb
icebp
adc
repnz
sbb
leave
int3
subl
insl
clc
fnsetpm(287
xlat
pop
adcb
mov
add
inc
out
xchg
xchg
or
inc
in
out
mov
mov
stos
jns
insl
mov
sub
lahf
mov
andb
jo
loop,pt
pop
sub
dec
out
inc
or
xchg
add
pop
push
mov
aas
add
jle
jge
arpl
loope
jmp
jmp
adc
pop
pop
leave
sbbb
std
adc
push
push
add
outsb
inc
outsl
sub
xchg
lcall
push
enter
int
add
xchg
push
test
cwtl
mov
sbb
dec
xor
and
jecxz
loopne
movsl
push
loopne
mov
mov
jg
out
icebp
mov
jb
add
lods
div
aaa
frndint
in
sub
xchg
or
imul
loope
loop
cmp
inc
movsl
inc
sahf
sub
shl
and
cltd
ss
pop
popa
cmpsl
das
cmp
and
jmp
mov
adc
cmpsb
mov
xchg
sub
fwait
jge
xor
xchg
popf
mov
mov
dec
mov
repz
negb
push
dec
jbe
pop
mov
and
dec
rcr
dec
iret
das
addb
hlt
aad
loop
data16
sarl
mov
iret
xchg
jne
movsb
adc
shl
add
int
jno
lcall
sub
loopne
adc
mov
in
push
xlat
mov
in
les
shrb
mov
jae
mov
push
mov
sub
dec
mov
dec
add
mov
pop
jns
scas
aam
aas
mov
rol
mov
pop
push
and
push
out
and
pop
sti
icebp
mov
rclb
mov
lock
mov
scas
in
cmpsl
lds
sbb
xchg
mov
pop
fcmovnb
orl
jb
inc
push
mov
not
xor
add
dec
add
lea
fidivs
shll
out
mov
mov
mov
xchg
lret
pop
ds
adc
out
and
sbb
fnstenv
pop
pop
pop
aam
int3
pop
and
mov
sbb
jb
lods
cs
pop
jno
test
jp
xchg
sbb
push
add
gs
fwait
dec
xchg
jg
inc
mov
cmpl
outsb
jp
mov
adc
cli
cld
test
mov
mov
das
add
wrmsr
push
cli
inc
pcmpgtd
rclb
fwait
push
pusha
lcall
pop
fmuls
adc
enter
bound
mov
cli
aam
xchg
mov
ret
mov
daa
adc
and
je
mov
out
pusha
and
jg
cmpsl
out
sti
nop
xor
sbb
mov
pop
xchg
add
jecxz
sub
cwtl
test
add
xchg
ds
mov
mov
leave
mov
pop
adc
ljmp
fstps
cmpsb
xlat
fildll
xchg
pop
cltd
call
addr16
and
push
in
pop
adcb
int
icebp
imul
or
fcompl
mov
lret
cmp
mul
mov
out
mov
dec
mov
repz
sub
movsl
outsl
shl
adc
fnstcw
jns
insb
inc
lahf
xchg
pop
sbb
sbb
mov
outsl
pop
dec
bound
out
out
fsts
pusha
sub
dec
in
outsl
shl
cmp
test
daa
out
mov
cmp
scas
cmc
mov
je
loopne
jbe
mov
sbb
inc
lret
bound
mov
repz
inc
fcmovnbe
inc
add
dec
fstl
popa
inc
test
mov
sbb
mov
mov
mov
dec
enter
xchg
pushf
iret
das
aam
inc
jg
cwtl
inc
aas
inc
push
xchg
out
das
movsb
push
lret
aaa
cmp
mov
rcll
loopne
xor
imul
push
icebp
xor
pusha
fildl
add
subb
sarl
mov
outsb
sub
je
xchg
and
sahf
shll
mov
jmp
addr16
adc
sti
mov
std
ja
aad
cmp
jmp
scas
stc
push
sahf
std
lods
stos
jno
jne
adc
xchg
jnp
or
shrl
sub
lret
mov
xor
mov
imul
jecxz
addr16
mov
mov
inc
orb
mov
push
mov
in
mov
pop
mov
and
push
repz
adc
push
push
cmc
jmp
ljmp
push
mov
add
cmp
enter
sub
aad
cmp
dec
popf
pop
push
fcompl
insb
in
es
shr
sahf
fcompl
cmpb
jg
jle
cmc
lahf
jbe
adc
pop
jmp
enter
dec
pop
sub
push
pop
movsl
iret
or
int
pop
mov
push
mov
mov
add
je
enter
loopne
in
adc
pushf
jmp
and
pop
les
test
js
sti
test
dec
rorl
xchg
mov
fimull
or
mov
inc
popa
xlat
int
imul
xor
cld
outsl
cmp
mov
iret
push
cmp
es
cmp
hlt
dec
ss
mov
jne
xchg
xor
das
subl
mov
cwtl
daa
xor
pop
xchg
insb
jo
xlat
cmp
pop
push
mov
adc
sub
sub
shll
icebp
insb
ds
jg
aad
cmpsb
bnd
and
jp
imul
es
push
mov
jecxz
aad
nop
push
fisttpl
inc
jae
pop
fnsave
push
sbb
or
push
stos
test
dec
repz
and
push
dec
pop
xchg
lret
fs
test
jo
out
pop
fisubrs
jae
and
fdivp
dec
mov
mov
add
inc
jo
xor
xchg
sbb
pop
pop
movsl
xchg
rcrb
lcall
mov
xlat
cli
mov
mov
pop
dec
out
test
cld
mov
or
insl
sub
xchg
pop
cmp
xor
push
inc
xor
xchg
aam
fcmovnb
mov
daa
aas
mov
int
push
mov
adc
and
sbb
into
inc
fstpl
xchg
xchg
sahf
pusha
cmp
or
or
pop
xor
inc
lods
mov
xlat
sbb
jl
or
mov
shrl
popf
adc
mov
and
repz
dec
arpl
push
add
push
mov
jae
inc
rcl
pusha
xchg
cld
dec
idivb
pop
aam
jge
mov
jg
ljmp
xchg
lods
sbb
mov
fimuls
repnz
popf
daa
cmp
xor
leave
lods
xlat
jae
arpl
cmc
clc
mov
pop
jbe
ja
cmp
int3
push
int3
rorb
push
mov
jl
lds
dec
shlb
and
nop
mov
stos
mov
mov
pop
dec
add
shr
dec
sub
mov
sub
sub
lds
nop
testl
dec
xchg
scas
cmp
pushw
insl
je
add
or
insl
push
mov
fscale
inc
cmpsl
xor
dec
cwtl
addr16
xor
mov
adc
xlat
sub
pop
adc
ljmp
ja,pt
icebp
ljmp
mov
outsl
sahf
iret
mov
push
int3
int3
sbb
add
pop
lds
ja
push
mov
jb
fucomp
push
xchg
push
shlb
push
lahf
fcompl
and
push
std
popa
and
test
jo
adc
int
jmp
test
sub
clc
xchg
push
in
mov
clc
and
mov
shrb
xor
out
xchg
stos
ljmp
push
jmp
jle
imul
xlat
rorb
roll
mov
jb
xor
xchg
out
sbb
push
sbb
inc
or
sbb
adc
jle
jb
jb
mov
lret
and
loopne
mov
fstl
out
adc
jle
inc
adc
dec
push
fldcw
pop
push
or
in
adc
cmpl
ds
mov
icebp
sbb
dec
cmc
imul
fimuls
or
sub
pop
xchg
sub
cmp
ss
std
adc
std
or
add
loop
adc
fisubrl
cli
jl
push
inc
fnsave
mov
inc
jle
imul
cmp
mov
jo
daa
in
cmovne
jle
adc
into
pop
sti
addl
shlb
aad
clc
scas
fdiv
cld
sub
repz
xchg
sbb
lret
push
in
and
fildl
addl
or
mov
or
pusha
xchg
cmp
dec
orl
and
pop
ss
mov
mov
inc
xor
adc
rorl
xchg
dec
pop
and
fwait
mov
adc
push
movsb
movsl
sbb
insl
mov
jecxz
xchg
adc
sbb
mov
add
mov
loop
add
and
in
mov
aas
addr16
sub
into
enter
ljmp
outsl
popa
mov
insb
ret
sub
and
cwtl
mov
mov
je
xor
lea
xchg
daa
fnstenv
mov
jle
inc
lods
rorl
inc
push
dec
mov
push
xchg
pop
xchg
enter
xchg
xchg
dec
dec
add
cmpsb
sub
stc
cli
xor
sbb
dec
mov
cs
sub
adc
or
rolb
lahf
xchg
xchg
jb
push
xor
je
iret
ss
dec
ret
or
aas
outsl
adc
or
fstl
cmp
enter
push
adc
inc
xchg
mov
into
inc
xchg
pop
mov
out
or
das
mov
mov
jbe
shrl
pop
jge
rorb
clc
and
mov
xor
loop
cmpsb
or
adc
add
aas
repz
outsl
and
cltd
jae
or
add
stos
scas
mov
sarb
enter
lods
mov
sbb
inc
xchg
push
mov
mov
push
dec
jecxz
iret
shll
out
enter
xchg
jl
stc
mov
negl
test
cmp
jmp
ss
mov
divl
ljmp
je
sbb
popa
call
repz
jae
jl
jno
mov
mov
mov
adc
cld
cmpsl
idivb
fistpl
sahf
es
pop
fdivrl
out
and
shl
push
sbb
out
ret
mov
dec
popf
pop
push
int3
add
sub
loopne
mov
test
lret
mov
sti
lds
je
arpl
inc
mov
mov
fdivp
mov
imul
lahf
std
fs
pushf
insb
out
jle
adc
xor
lds
js
pusha
and
xorb
in
pop
mov
dec
jae
xor
push
mov
adc
cli
dec
cs
pop
movsb
jl
sbb
ret
xor
push
push
inc
inc
int3
daa
and
inc
stc
fidivrl
test
es
mov
sahf
lea
pushf
add
cli
mov
push
adc
mov
mov
pop
adc
outsl
push
cmpsl
addr16
into
cmp
notb
je
rorl
and
dec
or
cmp
mov
mull
data16
or
je
jge
orb
nop
popa
out
scas
sti
mov
inc
fmull
xchg
outsb
pop
adc
rcrl
push
jns
mov
push
repnz
add
sbb
out
dec
not
loop
data16
mov
div
out
pop
je
push
mov
mov
mov
adc
mov
fstpl
scas
push
mov
subb
pop
adc
iret
iret
mov
and
in
aaa
and
mov
and
mov
mov
jge
lahf
ss
adc
xor
jo
hlt
cld
bound
or
xchg
in
fcmovu
xchg
icebp
mov
notb
inc
icebp
testb
mov
incl
in
das
pop
rcrl
roll
xchg
and
out
push
push
repz
in
mov
cmc
jmp
fildl
dec
out
jne
jbe
jge
jmp
push
xor
and
scas
das
cmp
inc
jmp
pushf
cltd
push
jns
jno
insb
xlat
cmpl
pop
add
sbb
jl
adc
add
stos
or
cmp
scas
cwtl
or
jb
xchg
push
jae
cmpsl
outsl
push
xor
inc
inc
jo
leave
in
add
mov
inc
ret
adc
lcall
push
ret
jge
in
xchg
aas
sti
lds
mov
and
mov
gs
gs
mull
jns
scas
test
fwait
sbb
sahf
aam
or
cmc
repnz
mov
cmp
or
cltd
leave
cltd
les
repz
and
mov
std
push
and
lcall
dec
lea
popa
mov
xchg
out
mov
mov
jae
nop
insb
test
adc
mov
mov
mov
lods
sbb
loope
inc
sub
mov
and
or
inc
adc
in
out
addr16
inc
xor
int
or
out
lret
dec
mov
or
sti
arpl
roll
outsb
js
fisttpl
jns
aam
and
cltd
sbb
jae
xchg
les
call
mov
pop
cmp
cmp
push
xchg
mov
pusha
pusha
rclb
push
mov
std
inc
and
xor
xor
iret
int3
js
or
loopne
pusha
aad
xchg
les
mov
sbb
mov
jo
jae
sub
scas
es
or
mov
daa
in
popf
cmp
cmpsl
shlb
clc
push
adc
rcr
js
sbb
xchg
xor
or
bound
and
stos
ret
repz
ds
mov
sbb
cwtl
mov
repnz
sub
imul
mov
nop
inc
mov
push
mov
repnz
sub
aad
test
out
cmc
out
push
jne
aam
pop
mov
or
dec
jmp
cwtl
lcall
pop
pop
xor
jo
clc
lods
nop
mov
std
add
xchg
push
pushf
popa
push
add
repnz
sbb
cmp
mov
mov
lods
int
xchg
out
aas
jg
xor
mov
mov
mov
adc
mov
in
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
test
mov
sbb
aam
pop
mov
adc
hlt
leave
fnstsw
or
jl
or
dec
cld
test
enter
xchg
orb
rcrb
pop
xchg
je
lcall
js
mov
and
jbe
mov
lahf
sub
or
sti
cwtl
adc
dec
jge
and
stc
clc
lret
cwtl
repz
push
xlat
jp
mov
push
out
sahf
mov
xchg
add
aas
adc
pop
in
jae
lods
popf
adc
stos
xchg
jl
arpl
xchg
adc
or
call
lods
mov
stos
stos
sbb
adc
xchg
dec
in
jmp
push
imul
cwtl
adc
gs
inc
mov
mov
push
repz
pop
inc
adc
jle
or
mov
mov
je
add
and
js
cltd
jmp
pop
jne
out
fnstcw
pop
enter
imul
pop
iret
cs
push
xchg
pop
out
test
dec
pop
test
adc
fidivl
push
fs
jno
cmpl
int
mov
neg
divl
in
leave
cltd
push
nop
cltd
sub
xor
insl
mov
sti
xor
sbb
loop
rol
or
xchg
xchg
leave
push
mov
loop
pop
std
fcoms
pop
fsts
ret
shll
and
cmpsl
test
enter
cmp
daa
divb
adc
xor
comiss
dec
mov
ljmp
add
jae
xor
mov
addl
xchg
jbe
std
adc
jl
push
stc
adc
ljmp
cmp
xchg
repz
loopne
inc
push
dec
mov
loop
adc
sbb
js
cmp
aas
sti
jge
repnz
dec
push
mov
xlat
into
adc
ljmp
or
cli
and
mov
pop
xor
nop
sbb
in
lret
repz
int
out
lea
fstpt
out
and
or
sub
and
xchg
enter
jb
int3
sub
dec
test
ss
adc
cmc
jne
jp
loope
ret
pop
test
js
mov
mov
dec
dec
sbb
xor
sbb
inc
pusha
xchg
adc
xor
addb
lahf
sbb
out
lcall
sub
push
jp
cmovns
cli
mov
mov
adc
lds
cmp
add
mov
in
sub
ja
in
into
cmp
cmp
xchg
or
jae
or
sbb
push
add
aam
push
push
mov
mov
cmp
inc
xchg
popf
jmp
cld
mov
shrl
cmpsl
sub
xor
scas
mov
dec
or
xchg
jmp
mov
xchg
ret
sub
insb
leave
mov
push
jo
fidivrl
in
mov
cmp
std
mov
pop
pop
xchg
test
scas
scas
xor
outsl
lock
mov
das
negl
inc
or
inc
rolb
mov
icebp
mov
add
add
xor
pop
sbb
stc
repz
adc
push
add
mov
cmp
mov
xchg
fcompl
orl
data16
test
inc
inc
push
shrb
sbb
dec
jmp
push
enter
fstpt
mov
mov
add
sbb
xchg
xorb
mov
push
arpl
xchg
lret
cwtl
push
jg
imul
cmp
cmp
add
iret
fstpt
gs
or
pusha
jg
cld
mov
adc
inc
jle
imul
addr16
mov
pop
xadd
push
mov
notl
cmp
dec
scas
js
nop
jae
add
insl
push
lret
dec
mov
rclb
push
xor
loop
sub
out
push
jmp
fcmovnu
inc
push
das
push
test
jle
dec
nop
sub
mov
les
push
mov
mov
icebp
or
stc
sub
jl
lcall
or
fdiv
fldl
inc
dec
jns
mov
ljmp
clc
cmc
dec
sbb
mov
arpl
sub
fisttpll
xchg
jg
pop
push
pop
pop
mov
ret
mov
jae
push
pop
mov
mov
in
std
xchg
cmp
rcll
adc
fucomi
cmp
mov
sbb
arpl
pusha
loope
enter
add
mov
flds
imul
fldt
sbb
inc
lret
pop
adc
xchg
loope
cmpsl
cld
fsubs
fdivrs
sub
xor
inc
pop
inc
dec
ret
xor
jge
xchg
and
insb
test
push
stos
repnz
jp
movsb
inc
pop
lods
or
jbe
or
xor
mov
in
mov
jno
test
jl
inc
xorl
int
test
jae
mov
adc
ss
mov
rorb
inc
add
aaa
rclb
sub
int3
insl
shl
int
fs
adc
sub
and
mov
pusha
mov
std
pusha
stos
movsl
fmuls
push
xchg
xchg
jl
into
movsb
pop
mov
ficompl
pop
int
mov
pop
xchg
fucomp
cmp
icebp
xchg
lds
and
jp
mov
push
lahf
in
adc
lret
pop
push
dec
ret
lock
leave
mov
and
xor
jbe
push
push
xorb
cmc
xor
scas
les
push
stos
ficoms
dec
je
in
add
mov
nop
sbb
sub
dec
mov
mov
scas
adc
pop
insb
xor
scas
cs
jbe
or
mov
xchg
xlat
xor
jmpw
sbb
outsl
xor
inc
icebp
mov
lret
inc
xchg
mov
ja
mov
push
pop
lcall
inc
frstpm(287
out
fiadds
js
mov
cltd
daa
mov
movsl
aad
mov
les
mov
and
sub
jno
push
js
test
sbb
or
aam
test
push
jge
shlb
push
aad
and
jo
and
addr16
or
or
cmp
sub
dec
inc
mov
int3
jge
fildl
addr16
enter
test
jle
and
into
dec
jge
dec
jne
cmp
stos
jp
in
ror
repz
rorl
jbe
inc
fwait
xor
pushl
leave
mov
xchg
mov
das
xor
icebp
mov
xor
mov
mov
addb
sub
adc
add
aaa
shll
fisubl
mov
cmp
dec
pop
or
add
inc
ficoml
loop
xor
mov
xchg
ficompl
sbb
mov
adc
pusha
popa
jg
xchg
out
xorb
add
js
ret
scas
or
lea
stc
cmp
or
jmp
mov
push
add
int3
pushf
stos
xor
xchg
fs
cli
fstpl
test
or
fsubl
jmp
imul
add
xor
insl
xor
dec
iret
shlb
repz
imul
ficoml
and
and
mov
sbb
xlat
insb
add
fistl
add
pop
nop
push
mov
xchg
add
data16
fstps
sbb
imul
rorl
fcmovnu
mov
repz
sti
mov
pop
mov
sahf
and
push
pop
add
enter
xchg
testl
test
dec
or
lea
mov
fbstp
sub
mov
sub
mov
icebp
out
gs
and
add
mov
jp
or
sbb
xor
jo
es
in
push
sbb
ret
pop
leave
cli
insl
lcall
mov
mov
insl
hlt
xor
mov
mov
or
std
and
jg
cs
lds
pushf
jl
loop
cmp
pop
imul
lret
mov
icebp
hlt
mov
pop
mov
sbb
lret
in
movsl
lds
push
mov
cmovo
pop
or
movsl
inc
repz
mov
rolb
jecxz
sbb
clc
jne
pop
mov
dec
addr16
mov
sbb
in
shrl
or
jbe
inc
loope
push
fs
and
sub
call
outsb
mov
fsubrp
sub
loopne
dec
sti
jle
push
pop
xchg
push
add
shlb
lahf
repz
mov
jg
or
ss
cmp
adc
xchg
ja
insl
lret
pop
pop
gs
mov
jbe
dec
test
jns
movsl
inc
dec
jae
daa
incb
rorl
push
arpl
fs
jmp
fucom
inc
frstor
push
add
call
adc
rcrl
sbb
out
sbb
push
pmuludq
jmp
push
inc
les
cmp
imul
test
js
insl
cmp
or
cli
mov
imul
cld
cmpsl
and
pusha
dec
aad
addb
in
dec
adc
xchg
fcoms
es
int
or
orb
xlat
inc
jnp
lahf
inc
ror
pop
and
sti
test
adc
bnd
loop
dec
jecxz
jno
in
mov
fdivr
shl
fistl
test
jne
fwait
sbb
mov
mov
mov
inc
push
fnsave
inc
pop
scas
scas
repnz
icebp
pop
xor
mov
sbbb
dec
push
aam
and
addr16
mov
sub
lods
dec
sbb
jno
stos
adc
inc
in
push
roll
jmp
je
ret
iret
rcrl
test
mov
mov
xchg
xlat
mov
cwtl
cmp
lea
dec
scas
ds
sub
movsl
dec
enter
inc
add
push
dec
and
add
lahf
push
mov
pop
jle
jmp
inc
test
cmp
out
lods
imul
push
data16
sbb
xchg
sub
dec
incb
loope
inc
stos
adc
fstpl
les
push
lods
lea
sub
lds
popf
adc
fdivs
pop
pop
neg
dec
mov
xchg
addb
in
ret
lods
xor
push
sub
movb
fwait
adc
and
jmp
je
mov
inc
mov
loope
and
cltd
jae
into
das
fwait
adc
out
mov
cmpsl
xor
dec
adcl
daa
mov
mov
inc
jne
or
xchg
mov
mov
ja
dec
outsl
pop
std
es
push
add
subl
sub
adc
dec
add
sub
adc
jne
mov
fidivrl
pop
sbb
mov
push
mov
mov
in
imul
xchg
cmp
sbb
lahf
pop
xor
jp
lahf
mov
sahf
insb
ja
pop
mov
cmp
xchg
popf
dec
shr
arpl
outsb
dec
test
inc
ret
aad
rcll
mov
and
jbe
mov
cld
cmp
jnp
das
lock
icebp
mov
lahf
jp
cld
mov
inc
cmp
bound
jne
addr16
push
inc
mov
test
fwait
testb
push
push
imul
jle
xlat
out
fsubrl
xor
xor
jge
movb
jns
sub
ret
fdivs
pop
test
pop
ja
dec
into
cs
push
mov
mov
mov
inc
stc
sub
lret
icebp
mov
lret
pop
hlt
pushf
sub
addl
jns
je
xchg
ret
xor
scas
cmp
les
ret
jne
repz
repnz
lock
rclb
xchg
cltd
xor
movsl
xor
push
sub
sbb
fcoml
sub
xlat
mov
mov
jp
hlt
add
jns
jae
push
insl
ja
adc
ss
in
cmp
arpl
inc
xchg
pop
aam
mov
cmc
mov
outsl
out
addr16
stos
js
push
stos
dec
scas
push
dec
jns
mov
mov
xchg
pop
test
dec
xor
mov
loopne,pt
cmp
addr16
cmpb
gs
je
mov
arpl
dec
aas
pop
pop
dec
pmulhuw
je
mov
fisttpl
adc
testl
adc
push
scas
xor
repz
aam
jg
dec
ficoms
adc
shll
jl
sub
adc
fisttpl
push
or
cmp
ss
jne
in
cmp
mull
gs
inc
jecxz
or
loop
mov
sub
mov
jecxz
adc
mov
or
mov
push
insb
pop
pop
dec
sbb
or
inc
hlt
or
xchg
test
inc
pop
xor
mov
push
jl
cmpsl
es
mov
arpl
push
xlat
xchg
pop
xchg
daa
imul
xchg
xchg
test
leave
fstps
outsl
sahf
cmp
scas
adc
pusha
test
lret
popa
xor
icebp
sahf
adc
mov
icebp
cwtl
jmp
daa
lods
push
adc
push
adc
fmuls
and
leave
aad
js
in
xor
pop
push
sbb
lea
push
add
sbb
in
in
xchg
or
cmp
push
lcall
cli
dec
dec
jb
xor
int
jmp
cmpl
jmp
xorb
gs
sub
xchg
inc
sbb
mov
jb
lods
fs
add
pop
int
bound
hlt
mov
inc
mov
ss
ret
lods
mov
jle
mov
adc
cmpsl
enter
jle
lea
fwait
arpl
mov
mov
clc
out
add
pop
addr16
mov
xchg
xchg
das
xchg
or
mov
inc
mov
test
mov
and
dec
mov
push
mov
fnstenv
xor
pushf
and
pop
enter
fs
movsb
mov
arpl
xor
pop
and
sub
aas
lea
push
cli
inc
cs
cmc
xchg
xchg
dec
pop
shrl
jecxz
stos
notb
leave
int
lods
aad
mov
jno
out
je
test
shr
sbb
sbb
inc
xchg
ret
adc
decl
mov
pop
fs
int3
out
clc
lret
call
sub
cmp
inc
outsl
das
cli
mov
pop
mov
or
movsb
ret
fdivp
ljmp
xorb
jo
xor
mov
sub
imul
cld
ret
lea
inc
cwtl
mov
out
fsts
mov
sbb
add
push
mov
xchg
pop
imul
loop
push
mov
xchg
pop
xchg
orb
push
arpl
shll
or
or
rcl
cmp
and
outsl
ret
nop
call
mov
xchg
negb
pop
add
xchg
xchg
out
ror
repz
dec
addr16
sarl
pusha
cs
jp
jmp
mov
test
xor
mov
push
mov
mov
xchg
notl
mov
and
pop
cmpsb
aas
aam
push
imul
or
mov
js
sbb
inc
push
fsubrs
gs
pop
rcrb
or
test
call
hlt
rolb
pop
add
jmp
jae
xchg
mov
mov
ds
lods
push
leave
sahf
scas
xor
lea
dec
sub
xchg
lret
add
mov
adc
mov
push
divl
shl
cmp
fs
adc
and
dec
mov
add
jns
adc
fcompl
inc
ret
push
bound
lea
adc
mov
in
push
sub
add
push
sbb
and
sbb
or
cmp
pop
outsb
es
sarb
ds
pop
adc
adcb
push
lret
push
das
or
mov
imul
mov
jge
inc
mov
pushf
notb
mov
imul
pop
cmc
and
mov
adc
loopne
push
test
mov
cmp
iret
std
je
sub
xlat
negb
pop
fwait
add
lcall
test
or
pop
lret
fistpl
jnp
dec
out
out
mov
cmpsl
ja
insl
xchg
mov
pop
ljmp
sbb
mov
les
out
adc
mov
xchg
ja
xchg
jmp
mov
stos
dec
sub
mov
cmp
sarl
clc
xor
adc
adc
lahf
ret
in
and
cmp
adc
inc
ror
ss
je
fisubl
enter
pop
sub
cltd
cmp
loopne
and
orb
je
fcmovnb
add
cli
mov
cmpsb
scas
hlt
sub
fidivrs
scas
or
pop
xor
repz
aad
inc
and
inc
enter
push
and
inc
sbb
mov
mov
mov
lds
inc
jp
pop
xchg
sub
out
or
push
addr16
fs
xchg
xchg
daa
pop
divl
mov
mov
or
sub
aam
add
imul
ds
addl
sbb
insl
add
mov
addr16
cmpsl
dec
inc
mov
push
dec
cmpb
pusha
in
xchg
sub
adc
cmc
lds
stc
cld
insl
add
inc
gs
icebp
stc
jnp
int3
test
mov
jle
xor
pusha
inc
outsb
mov
aaa
xchg
mov
imul
sub
or
clc
js
jno
sub
int
inc
mov
test
lcall
add
adc
xor
imul
in
push
add
inc
icebp
push
push
jb
shll
sub
popa
cmp
sbb
loope
sub
repz
and
cmc
mov
arpl
sti
cli
aaa
sub
add
xchg
cmc
fisubl
ffree
or
push
push
push
gs
inc
sysenter
dec
jae
xor
or
aam
loope
in
xorb
xor
xor
and
pop
call
aaa
pushf
dec
mov
loop
cwtl
sub
cmp
cmp
test
xchg
push
cli
xor
mov
mov
or
adc
into
shll
dec
fsubrl
cmpsb
dec
mov
and
pop
add
iret
insl
hlt
push
adc
testb
fiadds
sarl
mov
lcall
push
fstl
mov
test
mov
outsl
lea
bswap
add
jle
in
jae
insl
mov
or
rcll
mov
ficoms
shl
out
fisubs
stc
mov
sub
aad
icebp
loope
sti
jno
loope
xlat
jle
test
sub
fs
lret
add
fcmovnbe
jecxz
jmp
pop
and
push
lcall
pop
push
pop
xor
xchg
xchg
negb
data16
cmp
shlb
adcl
xchg
sub
popa
push
pop
stc
pop
into
pop
mov
popf
xchg
sbb
stc
xchg
iret
fnstcw
int3
dec
aad
aas
out
outsl
pop
xor
mov
push
movsb
sbb
add
cmp
push
repnz
int
mov
sahf
add
out
sbb
aas
fmul
gs
push
sub
jb
xor
inc
mov
adc
insb
stos
mov
sbb
pop
imul
mov
ror
andl
push
inc
jmp
aas
loopne
jp
xlat
push
jne
out
enter
push
es
pop
and
es
jns
lds
sbb
cmp
fstps
scas
inc
ficoml
pop
cli
stc
out
fstpt
jns
scas
sbb
jo
lds
stos
cltd
pushf
sbb
lock
cltd
mov
or
mov
in
mov
push
dec
clc
fsubrs
xchg
sahf
push
lret
bound
mov
xchg
mov
outsl
jne
sarl
jnp
push
sbb
pop
bound
inc
adc
adc
das
imul
adc
dec
pop
dec
xchg
mov
cmp
sub
push
and
inc
ja
xchg
je
mov
add
aam
xchg
mov
dec
jg
sbb
xor
and
pop
gs
or
jbe
add
lds
movsl
subl
inc
clc
sbb
sub
add
lret
aaa
inc
mov
test
cmpsb
repnz
mov
push
adcl
pop
in
jle
ret
cs
xchg
pop
ja
add
leave
int3
loope
pop
filds
repz
outsl
sub
scas
xlat
pop
pop
jne
hlt
lcall
push
add
repz
sbb
in
fsubrs
lds
lea
aas
sub
lea
jnp
fdivrs
xor
test
add
mov
outsl
jg
mov
call
cwtl
aaa
aam
mov
cmp
out
sub
popa
push
mov
mov
or
jns
sahf
sahf
je
into
mov
mov
adc
pop
sti
insl
dec
mov
scas
jg
sarb
popl
jnp
pop
fsubrs
out
pop
xchg
xchg
lahf
or
shl
stos
or
adc
adc
dec
mov
xorb
fcompl
jl
lods
or
xor
xchg
fwait
add
jmp
sbb
xchg
pop
push
sti
lock
cltd
shrb
shrl
xchg
mov
imul
mov
sti
out
cmp
pop
mov
push
mov
mov
mov
pop
xchg
pop
push
cmp
inc
pop
add
pop
cmp
and
cs
movsl
mov
and
movsl
jne
subb
jmp
jae
mov
xor
ds
mov
pop
push
loope
mov
cmp
push
add
cmp
mov
vpmaxub
ror
xchg
xlat
aas
fcmovnu
push
pop
xchg
or
adc
fwait
dec
pop
mov
inc
pushf
lods
push
jb
add
inc
sub
jnp
jl
aaa
mov
ret
mov
mov
ficoms
clc
xor
cmp
mov
and
in
dec
pop
push
fsubs
imul
pop
add
add
add
push
enter
sub
xor
outsb
lock
jmp
xchg
adc
in
das
arpl
sbb
add
or
or
ret
pop
xchg
gs
sbb
test
das
or
clc
xchg
out
aas
test
fdivrs
mov
mov
mov
adc
movsb
dec
jge
aad
xlat
or
cs
mov
mov
or
mov
test
mov
dec
fptan
cld
in
jno
imul
add
cmc
je
pop
jnp
inc
mov
out
sub
adc
jecxz
out
jge
popf
call
xlat
mov
sbb
jg
outsb
jae
aad
ja
es
pop
loope
cmpb
add
fistl
or
sahf
stos
sahf
lret
push
mov
repnz
push
lock
fldt
xchg
add
sbb
call
pop
or
adc
divl
ds
out
mov
mov
xchg
dec
imul
xor
add
movsl
jg
fnsave
push
idivl
insb
adc
in
packuswb
stos
scas
pop
push
mov
sbb
cwtl
aaa
enter
loopne
inc
scas
icebp
fildll
pop
aas
cmp
ss
xchg
pushf
fcoms
sti
add
mov
mov
or
mov
mov
dec
dec
adc
aam
jno
popa
cmp
sub
push
lahf
stos
add
fistps
outsl
jmp
imul
sarb
aaa
push
push
cmp
and
leave
mov
les
mov
pop
sub
jl
sub
jmp
add
sub
cli
fisttpll
mov
mov
sahf
or
sbb
arpl
fldl
xor
and
push
and
mov
pop
fsubp
sbb
cmp
inc
andl
jle
inc
jp
xchg
movsb
int3
mov
sbb
adc
sub
and
push
jle
or
xchg
push
movsb
push
lea
jae
mov
push
mov
cmpsl
mov
clc
lahf
outsl
icebp
test
int
outsb
in
mov
cmp
inc
ficoms
daa
xchg
hlt
sbb
imul
push
incl
xor
sbb
xor
push
fstps
ljmp
scas
clc
xchg
std
and
dec
imul
mov
mov
repz
push
xor
and
fcmovne
cmp
out
mov
mov
test
sub
in
dec
xchg
pop
cmp
not
jecxz
or
and
push
pop
daa
push
push
adc
pop
mov
fs
aam
jo
fs
lahf
dec
mov
jg
dec
dec
in
jge
adc
sti
add
pop
cltd
lahf
cs
adc
jg
push
in
popl
cltd
hlt
gs
addr16
push
int
pushf
hlt
pop
leave
imul
dec
hlt
mov
out
xchg
shlb
jmp
mov
jnp
adc
mov
or
xor
lods
jno
or
pop
popl
jno
pushf
fisttpl
inc
sub
xchg
cs
sub
jmp
daa
adc
out
adc
and
mov
cmp
movsb
push
call
xor
sti
mov
mov
mov
xor
cmp
popf
inc
test
movsb
mov
adc
aas
stc
scas
mov
or
fstps
sbb
clc
pop
lret
inc
sarb
pushf
cmp
lret
inc
cmp
leave
testb
ret
cmpsb
lea
push
vmovsldup
jno
sbb
ret
psrlw
mov
lea
mov
aam
loopne
mov
mov
fnsave
adc
dec
jb
inc
sbb
add
push
arpl
jae
test
pop
mov
imulb
jns
cmc
dec
mov
lahf
es
mov
mov
sbb
mov
scas
sbb
cld
leave
and
bound
mov
mov
fcompl
sub
jmp
pop
in
rclb
iret
fmuls
or
pop
sbb
pop
test
rcl
fsubrl
xchg
test
push
sarl
leave
cmp
shlb
out
call
mov
fldcw
leave
dec
pop
movsb
stos
shrl
clc
and
testl
xor
xor
xor
rorb
pusha
ds
jp
imul
pop
mov
or
ffreep
pop
aaa
dec
and
mov
pushf
ret
inc
fiaddl
int3
xor
xor
stos
incb
ss
sbb
cmpsb
xchg
in
jl
imul
jle
js
testb
xchg
lds
pop
lock
pop
lret
sbb
mov
pop
inc
xor
push
dec
push
or
sbb
in
in
adc
and
pop
fmuls
xchg
jl
push
sub
inc
add
repz
mov
add
in
xchg
mov
add
in
pop
push
mov
lcall
xor
rcrl
shrl
jnp
inc
xor
je
roll
fdivr
jnp
bound
and
jecxz
clc
lods
flds
jnp
mov
xor
outsl
and
xchg
xor
jo
aam
sbb
inc
std
fisttps
mulb
cmp
mov
sbb
lahf
int3
jecxz
addb
pop
add
push
daa
adc
sahf
popf
andps
int3
int
ret
jmp
fcmovnu
adc
inc
out
adc
lahf
pop
hlt
das
ret
and
sub
pop
jne
je
jns
andl
ljmp
test
pop
or
mov
jp
dec
js
sub
mov
shrl
xor
rcll
shlb
loop
jb
jo
out
or
sbb
into
mov
ds
xor
out
mov
push
jp
push
sub
push
fstl
lcall
add
aad
pop
insl
out
inc
outsb
cmovs
lods
xor
scas
mov
in
addl
and
xor
mov
mov
jmp
shrl
test
push
pop
xchg
sbb
xor
jns
int
fcmovb
push
lahf
mov
push
test
mov
sbb
imul
shr
pop
xchg
iret
mov
dec
inc
js
daa
push
ss
fsubrp
sub
sub
es
dec
inc
icebp
mov
pushf
test
out
xor
mov
lcall
out
daa
cld
pop
insl
dec
sub
or
jo
imul
test
out
sbb
sahf
movsl
aam
out
jo
shrb
mov
push
and
inc
cltd
xor
ret
je
rorl
dec
imul
lods
dec
daa
fisubs
in
dec
jge
dec
push
decb
int3
jne
xchg
call
mov
push
mov
xor
push
out
cmp
movsl
xor
inc
clc
mov
push
sbb
dec
int
pop
fildll
or
inc
stos
imul
mov
pop
cmpsb
aaa
fstpl
mov
xchg
in
xchg
xlat
pop
adc
fnop
cmpsl
push
jo
or
iret
test
or
fwait
test
ret
fprem
mov
sub
sub
pop
push
lock
xor
fmul
xor
aaa
push
pushf
mov
dec
ret
shll
test
cmpsb
xor
lcall
in
out
fs
pop
mov
inc
jle
imul
andl
xor
icebp
hlt
sbb
pop
xchg
aas
and
push
add
fwait
and
cld
sbb
outsb
sbb
inc
fists
imul
movsl
adcb
gs
in
stc
pop
out
dec
rcrb
pop
int3
roll
xchg
aad
pushf
fldenv
out
adc
rolb
cmp
add
fldenv
cmpsl
ljmp
out
fidivrs
sbb
push
jns
mov
pushf
pop
mov
jp
or
cmpsb
inc
ret
or
jae
test
add
xchg
mov
in
xor
jmp
lds
movb
pop
ljmp
movl
adc
inc
pop
mov
and
xchg
inc
jo
popa
movsl
hlt
test
sub
pop
mov
fistps
xor
jnp
decl
pop
rclb
pop
adc
mov
lahf
push
fstpl
shlb
mov
xchg
sbb
in
int
jnp
fdivrs
inc
sbb
fiadds
outsb
das
push
sub
sbb
pop
cmpl
aad
xchg
push
cmp
test
xor
jle
push
push
jle
cmp
push
pop
test
rorb
insb
clc
pop
test
je
sub
mov
mov
lret
mov
lcall
or
push
test
mov
imul
push
test
rcll
pushf
lods
mov
jmp
inc
ds
mov
leave
adc
aas
or
pop
mov
add
frstor
cmp
mov
cmpsb
cs
outsb
xor
shll
mov
dec
loop
clc
inc
inc
and
daa
roll
dec
jne
jmp
inc
inc
sti
mov
lock
data16
outsb
adc
xchg
and
or
xchg
leave
and
outsb
jge
jl
les
sub
mov
out
jp
or
xor
mov
iret
pop
mov
add
popf
inc
fsubl
sti
dec
push
and
sbb
aam
push
sar
in
or
mov
test
pop
insl
xlat
add
arpl
pop
aad
xor
xor
movsl
je
xchg
jnp
push
fisttpll
pop
nop
pop
mov
inc
lcall
jle
jbe
fidivrs
out
cli
adc
cld
movsl
in
stos
push
xor
dec
pop
popf
bound
cld
test
bound
dec
pusha
pop
stos
sarl
xchg
call
fdivr
clc
cmp
daa
cmp
mov
jo
lods
jp
mov
fsubl
pop
xor
dec
imul
lret
imul
loope
mov
std
inc
popl
or
fdivl
push
mov
scas
dec
xor
cwtl
add
nop
cmp
push
popa
fs
xchg
jnp
push
sub
pop
inc
adc
lods
lret
add
inc
data16
inc
pusha
movsb
mov
or
and
or
lods
cld
add
inc
mov
push
cmp
pop
imul
cmp
jecxz
jp
inc
ss
in
ret
aam
mov
and
arpl
inc
mov
cld
pop
das
test
inc
adc
jl
jb
into
test
dec
sbb
mov
xchg
out
or
out
xor
push
mov
cmp
mov
stos
pop
adc
movsl
cltd
pop
adc
das
xchg
xor
mov
shrl
ja
rcrl
sbb
fwait
jmp
into
jo
enter
outsl
jg
andb
lret
push
das
mov
push
movb
mov
gs
jecxz
js
mov
inc
call
mov
cmp
sub
sbb
jge
xor
mov
or
or
mov
cmpsl
popa
jo
flds
jnp
inc
add
xchg
test
pop
lods
fstps
xchg
test
add
pop
mov
and
fdivrl
repz
inc
js
test
pop
std
gs
mov
inc
int
dec
popf
pop
rcr
rolb
stos
cmp
adc
outsl
xor
movsb
lcall
xchg
push
inc
jne
mov
or
lock
loope
and
jb
xchg
loopne
jb
xchg
in
daa
xchg
sub
sub
les
push
or
xchg
roll
popa
sub
cmp
jbe
xor
stos
scas
jmp
aam
mov
dec
pop
push
add
lea
mov
sbb
stos
cli
mov
adc
add
sub
icebp
gs
jge
xchg
or
add
rdtsc
xchg
push
cmpsb
movsb
mov
imul
jnp
mov
xor
xor
insb
ds
mov
mov
mov
pop
hlt
cmp
es
mov
jne
scas
push
pop
mov
sbb
pop
add
int
rcrl
xchg
gs
test
xor
xor
lods
repnz
mov
shld
aam
mov
fnstcw
jno
inc
push
inc
push
pop
pop
push
and
inc
stos
or
cmp
mov
sbb
or
jno
sbb
outsl
shl
movsl
pop
test
in
shll
sub
pop
int3
fwait
add
les
mov
js
ljmp
cmp
test
sti
lret
jmp
outsb
jmp
sbb
pop
ds
cmp
mov
loop
sar
mov
and
fisttpll
adc
xchg
jae
arpl
clc
mov
ja
testb
loope
lcall
imul
and
movsb
sbb
sahf
push
shrb
call
xorb
mov
hlt
aad
jb
int
cld
dec
xchg
inc
push
or
std
dec
and
mov
mov
add
or
jge
pop
test
roll
add
cmp
fs
pop
add
repz
sub
pop
es
sbb
add
pop
adc
adc
xchg
fwait
pop
sub
fildl
int3
jae
cmp
cmp
mov
mov
push
mov
xor
clc
stc
cltd
xor
xchg
das
or
rcrl
cmp
push
push
adc
adc
insb
push
sbb
int3
les
pop
rcll
es
mov
pop
push
xchg
stos
std
and
lcall
je
pop
mov
lods
xchg
imul
xor
data16
sbb
in
inc
mov
cs
in
cltd
mov
mov
cs
pop
push
jne
dec
sarl
push
adc
xchg
loope
ljmp
xchg
cmp
outsl
pop
cs
mov
fmulp
std
or
or
cmp
lock
shlb
dec
lods
jbe
aas
in
mov
and
repz
outsl
inc
pop
pop
xchg
and
adcl
add
push
adc
leave
dec
fiaddl
mov
mov
mov
pop
out
sub
lahf
enter
xchg
out
leave
aaa
cmc
jnp
hlt
push
pop
rclb
jnp
leave
mov
push
fwait
or
dec
repnz
sub
mov
outsl
adc
adc
and
rcrl
add
out
into
das
ficomps
lcall
sbb
mov
mov
clc
lahf
outsl
and
stos
arpl
inc
orps
sub
lahf
pop
mov
aas
inc
mov
mov
ljmp
and
out
adc
mov
cwtl
inc
pop
arpl
mov
je
add
mov
mov
jge
pop
jecxz
inc
add
daa
setl
dec
pop
xor
sarl
fmul
lock
jge
push
pushf
dec
into
jo
mov
scas
mov
mov
clc
inc
mov
arpl
pop
pop
lds
pop
test
cld
ret
negl
jbe
cld
rolb
push
and
xchg
cmp
mov
or
pop
sbb
push
jno
jg
psubsw
movsb
pop
dec
clc
in
into
mov
jns
shr
sarl
pop
sbb
movsb
fs
je
and
cmc
pop
xchg
shrl
daa
mov
andl
adc
cmp
es
decl
jg
cmp
lea
aad
insl
push
adc
dec
stos
and
cld
adc
sub
loope
iret
sub
arpl
dec
jge
pop
push
push
in
cmp
cmp
add
fs
jp
push
mov
das
movsl
dec
ja
in
add
outsb
mov
mov
push
jns
in
fsubrs
stos
lea
jp
push
push
sub
push
jmp
scas
sti
mov
jle
les
pop
jb
scas
jne
movsb
sbb
dec
adc
lcall
pop
rclb
aas
loope
loop
add
js
mov
daa
shlb
or
or
xchg
mulps
lret
xor
fldl
fimull
insb
jnp
out
pop
imul
mov
add
test
aam
out
arpl
cld
in
mov
ret
push
push
or
dec
adc
push
or
mov
push
shll
and
jno
mov
rol
or
lea
jne
sbb
mov
sbb
cli
add
inc
loopne
cmp
sbbl
clc
pusha
outsb
pusha
and
icebp
lret
or
movsb
or
loop
aad
mov
mov
dec
ss
aaa
jecxz
mov
pop
ja
nop
nop
shll
movsl
data16
add
mov
leave
push
jp
sub
xor
lea
adc
xchg
inc
out
repz
mov
push
cmp
sbb
mov
adc
movsl
mov
scas
in
dec
and
mov
sub
jns
shll
lahf
mov
pop
or
jo
icebp
dec
leave
cmp
xchg
or
shll
popf
sbb
push
adc
jecxz
push
push
jne
rcrl
jmp
or
cmpsl
gs
inc
jle
test
aam
mov
inc
cmp
sub
xlat
xchg
pop
sbb
or
stc
shll
sub
inc
push
dec
adc
mov
add
sbb
sti
orps
push
out
mov
cmp
xchg
dec
and
sub
add
mov
in
andb
adc
fs
ss
icebp
jbe
inc
or
mov
adc
lock
movsl
lds
xor
mov
push
in
in
sbb
test
ror
cmpsl
lds
rep
cmp
xchg
sub
int
adc
xor
imul
push
fstl
pop
xlat
push
addr16
icebp
in
lods
stos
add
enter
dec
dec
into
sub
inc
bound
sub
adcl
or
xchg
jae
dec
inc
push
jmp
jl
mov
mov
sub
push
push
sub
and
cmp
iret
ja
cmpl
fcoml
sbb
test
xchg
inc
sbb
pop
xor
add
add
lret
sar
cmpsb
sbb
inc
pop
xor
push
lods
gs
add
loop
dec
mov
dec
or
ds
scas
in
insl
mov
pop
sahf
daa
inc
and
ds
xchg
mov
insl
cmp
ficoml
cmc
push
jg
pop
push
fdivrs
lcall
mov
dec
addr16
inc
cmc
mov
or
cld
pop
add
adc
lahf
push
fsubrs
mov
cmp
outsl
ljmp
cmp
lahf
mov
pop
jae
sar
mov
xchg
jg
adc
adc
push
inc
mov
jl
dec
pop
das
aaa
xchg
push
push
insl
or
mov
mov
fwait
sub
mov
dec
cmp
dec
stc
xchg
push
xchg
jge
sbb
shlb
xor
in
aad
int3
loopne
sbbl
ret
sbb
cmp
dec
mov
adc
adc
pop
mov
insb
inc
push
dec
test
jle
pop
andb
inc
add
push
inc
sahf
lcall
sub
mov
mov
les
sarb
and
pop
sbbb
add
sbb
lds
and
sti
lret
inc
ds
in
xchg
sub
pop
cmp
enter
in
xchg
and
xchg
or
mov
imul
inc
or
or
ja
xchg
das
push
mov
aas
ss
arpl
sbb
sub
rcrb
popf
lret
fs
xor
fwait
mov
popa
xchg
fld
pop
pop
cmp
cmpsb
and
ffree
jg
pop
xor
iret
fwait
sbb
or
nop
roll
push
jg
and
test
stos
lret
test
rcrb
push
xchg
adc
test
xchg
jg
mov
dec
dec
iret
cmpb
aam
mov
gs
pop
imul
cmpsl
clc
sahf
jno
push
push
int3
dec
iret
rorb
push
sub
inc
jl
ss
in
sub
jecxz
xchg
push
outsb
ficomps
fcoms
add
xchg
jmp
cmp
mov
stos
xor
push
inc
cmp
jmp
dec
lea
paddw
sbb
aaa
xchg
pop
jns
dec
decl
shlb
xor
xchg
addb
into
loope
ds
push
jns
mov
sub
push
dec
mov
ds
lahf
rclb
sbb
push
adc
loop
sub
inc
in
push
test
andl
ja
aaa
shr
ds
out
mov
dec
fwait
fwait
and
shll
addr16
stos
pop
sahf
ret
rolb
mov
not
cmp
jns
jno
pop
repz
scas
je
push
xchg
gs
jo
das
mov
int3
xor
push
inc
mov
pop
mov
sti
lahf
push
jae
in
addr16
xor
ja
xchg
xchg
in
scas
pop
ja
mov
icebp
mov
xchg
sbb
or
ret
inc
push
nop
dec
mov
outsb
jnp
mov
or
dec
add
lcall
mov
pop
mov
popf
lods
test
cmp
mov
lahf
sbb
add
pop
nop
fldcw
fidivl
out
sbb
lds
outsl
mov
adc
mov
dec
and
sarl
stos
mov
mov
jg
ret
dec
lods
sub
jg
inc
test
out
mov
mov
dec
stc
lea
adc
add
xchg
enter
lock
mov
nop
push
imul
in
mov
cmpsb
cmp
jecxz
add
xchg
cmp
les
aas
jae
pop
dec
jle
iret
shll
leave
das
add
mov
mov
pop
lods
pop
sbb
and
rcll
xor
push
insl
pop
inc
sbb
mov
lret
stos
mov
or
adc
mov
rcrl
dec
mov
icebp
loop
imul
icebp
repnz
cmp
dec
push
cmpsb
cmp
inc
orl
adc
add
insb
cmpsb
dec
add
mov
sbb
pop
cmp
pop
push
mov
js
sub
sub
es
add
and
andb
fisubrs
lock
mov
decb
xchg
xor
adc
or
clc
pop
jne
fwait
cmp
jmp
push
imul
lcall
mov
loop
in
jbe
ret
sbb
jl
out
jbe
lret
mov
xor
fists
repnz
ja
cltd
idivl
lods
mov
lret
movsl
add
xchg
jne
inc
dec
test
jge
mov
xchg
jnp
cmc
call
jg
or
cmp
js
stc
sub
cli
cmp
imul
into
das
cmpsb
cld
and
jmp
out
inc
pop
xor
pop
jnp
fs
cmp
dec
repz
adc
inc
dec
inc
push
arpl
add
fsubrs
pushl
nop
cmc
xor
adc
lret
iret
add
add
pop
dec
adc
pop
sti
std
nop
inc
cmc
mov
ret
outsl
ljmp
xchg
mov
repnz
mov
lock
test
mov
int3
dec
sub
clc
fmull
iret
test
into
dec
frstor
or
test
xorl
popa
sti
jmp
push
mov
les
push
shll
stc
vmovd
out
push
fs
test
mov
cmp
push
insb
mov
xor
xchg
incl
leave
dec
push
xor
cmc
cmp
aaa
jae
add
int
nop
fildll
mov
lods
push
fmull
push
mov
fwait
mov
mov
cli
sub
stc
bound
cwtl
sub
scas
addr16
daa
xchg
in
imul
mov
arpl
es
cmp
cmp
push
test
mov
xor
push
inc
cmp
mov
pop
sub
test
xor
aaa
push
push
out
mov
out
pop
mov
jmp
adc
and
xchg
jp
or
shr
jo
sbb
loop
mov
jecxz
inc
add
stos
or
mov
rcr
pop
test
sbb
frstor
daa
sub
in
cmp
or
mov
dec
mov
push
cld
or
pop
ret
or
push
mov
pop
push
outsl
mov
and
and
mov
imul
dec
dec
push
adc
pop
aas
or
dec
popf
add
repz
pop
ret
cmpsb
jg
in
dec
or
sbb
mov
fstpt
inc
pop
xchg
and
mov
pop
movb
xchg
leave
pop
repnz
or
push
out
push
push
pushf
mov
xlat
jbe
je
inc
dec
inc
and
fdiv
pop
fsubrl
add
ja
insb
rcrb
or
jp
lea
sahf
mov
adc
xor
iret
test
dec
jbe
and
lea
sub
mov
mov
outsb
mov
and
flds
lahf
test
cld
or
xchg
stos
mov
inc
jmp
pop
arpl
xor
jno
jno
mov
sbb
pop
aaa
shl
outsl
and
lea
stos
mov
xor
xorb
rcrb
pop
jo
out
test
xchg
lods
pop
cltd
inc
push
test
jl
push
sti
inc
fwait
sub
mov
jnp
xor
jmp
stos
dec
shll
cmc
arpl
jp
inc
out
sbb
mov
or
shr
in
sub
cmp
xchg
loopne
mov
or
subb
rclb
mov
rolb
mov
add
sbb
stos
xor
mov
scas
imul
rcr
mov
fdivrs
mov
xchg
xor
push
dec
sbb
aam
mov
faddl
push
test
add
mov
in
icebp
xor
cmpsl
aaa
cmp
mov
pop
pusha
mov
cli
sbb
aas
or
mov
jae
push
mov
sub
daa
mov
lret
push
pushf
paddb
xchg
pop
lds
push
sarb
mov
std
jbe
fs
cmc
adc
ret
pop
pop
rcrl
cltd
rclb
enter
out
movsl
ja
push
ss
sbb
inc
cltd
movb
imul
push
adc
pop
xchg
or
pop
test
mov
xlat
cli
mov
aaa
rol
xchg
mov
ds
sbb
xchg
push
jg
iret
jno
cmp
and
and
jmp
dec
mov
es
divb
mov
aas
sub
jmp
pusha
add
sub
xorb
popa
fsts
ds
add
mov
cmp
sbb
fidivs
loope
adc
jne
fimuls
pop
push
cmp
or
js
mov
fistpl
int
jle
ss
ss
mov
mov
sub
enter
dec
fisubs
cmp
jne
and
insb
mov
dec
dec
xchg
fsubs
dec
gs
test
int3
mov
pop
daa
mov
in
push
jp
push
jmp
inc
cs
and
sub
ljmp
jbe
adc
mov
mov
pop
sub
shrl
repnz
call
in
add
aaa
clc
in
jne
xchg
cmp
bound
push
das
adc
or
loopne
dec
push
xor
pop
cltd
mov
add
dec
add
pop
adc
sub
fcoms
movsb
push
add
sbb
mov
ds
jp
jae
imulb
push
in
cmp
pop
push
out
inc
mov
and
stos
jb
and
enter
les
nop
mov
fwait
mov
push
bound
mov
jle
ror
cmp
fucomp
jge
jp
test
xchg
lea
pop
adc
gs
xchg
cmc
pop
imul
cmc
sbb
cmp
push
icebp
out
xlat
pop
dec
es
push
call
js
lods
mov
inc
ss
cmp
or
xor
push
mov
test
sahf
inc
enter
jae
add
scas
mov
push
addr16
js
cli
sub
fisubrl
sub
dec
sahf
sbb
xlat
jle
sahf
nop
sahf
roll
sub
sbb
rcll
fstpt
sub
inc
add
sbb
jns
mov
hlt
cli
jne
cld
scas
mov
fadd
inc
adc
lock
mov
loope
mov
xor
out
or
movsb
sbb
inc
int3
push
sub
in
notb
test
fsts
inc
mov
stos
rcll
cmpsl
arpl
imul
les
jecxz
adc
xchg
hlt
ja
fcompl
cmpsb
pop
sub
mov
gs
enter
mov
cmpsl
mov
rolb
test
int3
aas
cmp
outsl
leave
mov
into
mov
cmpsl
xlat
shrb
into
std
mov
mov
cmpl
aam
sbb
insl
adc
imul
cld
xchg
mov
jle
adc
pop
or
pop
repz
or
inc
cmp
gs
ljmp
std
pop
cs
out
mov
aad
dec
ss
push
and
xor
testl
push
inc
stos
aas
sbb
pop
popa
adc
stos
stos
pop
mov
jmp
sbb
inc
mov
inc
sbb
or
enter
push
ss
das
mov
xchg
cmp
es
mov
popa
jp
jg
daa
dec
mov
cli
adc
sub
jnp
mov
sbb
adc
ljmp
es
or
sahf
mov
out
inc
adc
repz
push
in
pop
fsubrs
iret
mov
fcom
mov
je
loopne
fcmovnbe
jge
fmull
das
pop
xchg
xchg
arpl
pusha
jo
mov
insl
or
pop
out
xor
cwtl
push
rolb
test
sbb
push
ja
repz
mov
mov
arpl
mov
push
int3
sbb
mov
movsl
sub
inc
hlt
dec
sarl
xchg
push
into
imul
dec
stc
enter
js
pushf
and
outsl
mov
iret
lock
or
loop
mov
cmp
nop
mov
cmp
adc
out
inc
stos
enter
adc
or
inc
and
mov
sbb
aad
mov
ljmp
push
ficomps
fdivp
sti
mov
mov
inc
jg
push
push
cmp
xor
mov
cld
sahf
mov
icebp
add
pop
data16
add
pop
stc
adc
lcall
daa
loopne
xor
sbb
sbb
bound
mov
mov
dec
and
repnz
jg
mov
mov
cltd
adc
outsl
xor
inc
rorl
mov
sti
call
aad
shll
lret
test
mov
cmpsb
mov
mov
fwait
push
pop
enter
shll
mov
mov
sbb
das
rcrb
pop
insb
imul
clc
sbb
cmp
outsb
sub
das
jle
pushf
cld
or
jmp
cmp
loope
jp
mov
cmp
sub
shl
decl
daa
hlt
pop
pop
jbe
push
add
cmc
pop
push
fnsaves
daa
mov
shrl
pop
stc
gs
sbb
dec
iret
sbb
push
hlt
or
sbb
sbb
dec
inc
adc
mov
enter
inc
loopnew
into
cmc
call
call
push
inc
test
cmp
or
mov
xchg
stos
dec
mov
add
and
ret
push
rcr
in
sub
pushf
aaa
add
mov
jge
rcll
pop
mov
dec
cwtl
xchg
or
push
or
repz
or
add
mov
sbb
int
mov
js
int3
pop
fwait
xor
and
inc
or
fists
adc
adc
cmpsb
cltd
out
adc
adc
inc
nop
sub
or
icebp
out
xor
jbe
adc
push
pusha
int3
les
cltd
cwtl
mov
mov
xlat
cmp
and
push
jb
sub
scas
out
cmp
inc
xchg
pop
bnd
fildll
fdivp
imul
jg
xor
cld
xor
xor
rcrl
inc
aam
dec
arpl
movsl
lret
sbb
sti
xor
ds
lods
std
mov
aad
aas
jl
cwtl
jle
gs
dec
test
xor
sub
int
lods
jae
or
shrl
cltd
pusha
int
negb
mov
popa
sub
pop
movsb
bnd
mov
movsl
mov
int3
pop
movsb
loope
ret
scas
mov
scas
mov
div
test
scas
lret
push
roll
mov
mov
push
in
xchg
dec
add
mov
cmp
mov
int3
sbb
mov
or
pop
mov
aam
mulb
scas
jae
ss
lds
mov
nop
sbb
hlt
inc
icebp
inc
jnp
push
mov
mov
frstor
push
push
popf
hlt
xchg
mov
cmp
daa
push
nop
fcmovnb
out
cmc
mov
popa
repz
sbb
jb
test
je
sbbl
or
inc
fldt
stos
and
sub
aas
sub
aas
mov
pusha
cmp
hlt
cmp
outsb
jge,pn
xor
push
xchg
mov
or
xor
xor
in
jp
loope
pop
ljmpw
push
aaa
lcall
adc
dec
cmp
cmp
adc
xchg
xchg
das
scas
stc
rcrl
lret
and
test
lea
add
iret
sub
dec
push
lods
lods
xor
mov
mov
rcl
mov
ljmp
out
adc
adc
pop
push
mov
loopne
inc
or
js
mov
iret
add
cmp
jg
dec
leave
jp
lods
pop
es
neg
and
testb
test
xchg
xor
adc
repz
sbb
push
lcall
sbb
inc
negl
sub
insl
andl
test
test
xchg
mov
sbb
inc
pop
mov
or
and
mov
or
push
jo
call
pop
dec
cmp
xchg
inc
cli
loope
pop
inc
int3
sub
out
inc
jg
dec
daa
jecxz
insb
sub
mov
pop
mov
adc
mov
aad
pop
jecxz
cmpsl
nop
testl
cmp
rorl
sti
or
sub
gs
lods
scas
cmpsl
cmp
outsl
jp
mov
les
and
js
rclb
mov
xchg
mov
mov
or
inc
pop
pop
sbb
stos
pop
cmp
and
jp
addl
cmp
std
fdivl
sbb
std
cmc
and
pop
repnz
sub
iret
add
test
add
mov
dec
mov
fadd
fiaddl
lods
sarb
pop
sbb
add
dec
and
push
cmp
sbb
mov
mov
dec
cmpsb
je
jns
mov
mov
sbb
dec
movsb
cld
lods
mov
ret
lock
adc
cmp
sbb
mov
imull
imul
mov
and
sub
daa
cmpsl
push
stos
and
bound
or
lods
fdivl
test
xor
in
cmp
imul
loope
sbb
sahf
push
mov
repz
cld
push
pop
cltd
loope
sub
dec
out
push
out
jmp
dec
sub
xchg
dec
in
cmp
add
aaa
mov
xchg
xchg
and
in
loop
movsl
xchg
dec
loop
dec
hlt
mov
xorb
stos
mov
div
xlat
nop
inc
mov
and
fs
aam
sub
mov
adc
les
mov
push
mov
cmpsb
js
paddd
jae
aad
addr16
outsb
xor
arpl
cmc
addr16
xor
data16
xlat
insl
out
arpl
and
mov
ss
loope
mov
loopne
sti
stos
xchg
lods
incl
push
push
mov
mov
push
repnz
push
in
jno
push
xchg
inc
push
int3
and
rcl
int3
mov
dec
cmp
test
xor
cmovp
rcrl
sar
sbb
lea
and
out
xor
adc
adc
inc
or
out
out
ljmp
mov
test
stos
jge
in
mov
xchg
lock
ljmp
and
scas
ficompl
jg
in
cltd
xchg
in
xlat
push
das
mov
sbb
add
inc
sbb
lods
or
xor
imul
rcrl
aas
fnstenv
jle
divl
cli
shrb
stos
ret
out
adc
mov
in
clc
xchg
sub
out
popa
addr16
cli
jno
inc
xor
pop
add
push
arpl
xchg
or
mov
minps
and
xor
lea
mov
cmpl
sub
test
or
mov
fwait
jge
or
jle
in
bnd
jecxz
addr16
jp
mov
inc
testb
stos
and
cmpsb
call
into
jnp
into
orl
hlt
mov
fs
inc
pop
push
cmp
scas
cmp
xchg
rol
cmpsl
cmp
inc
cmp
pop
repz
adc
js
push
lcall
lea
stc
jne
push
jnp
sahf
movsb
mov
loope
repz
mov
xor
mov
iret
jbe
xor
dec
or
arpl
in
sahf
shlb
dec
daa
jo
pop
push
push
xchg
loopne
dec
add
or
push
dec
cmp
cltd
cmc
ds
fcomip
lret
jne
mov
ret
lea
xor
dec
push
outsb
push
cmpsl
std
ror
mov
jbe
mov
adc
ljmp
iret
and
sbb
scas
mov
inc
pop
push
adc
gs
pop
push
sbb
lret
js
lret
mov
fldt
outsb
cmp
adc
sbb
in
out
pop
out
or
outsl
inc
movsb
ljmp
add
fs
mov
cs
loope
inc
mov
inc
clc
jno
pop
ja
push
cwtl
cmp
sub
cs
jo
inc
mov
out
mov
pop
pop
inc
jle
add
add
jg
xchg
pop
jmp
ror
mov
mov
sub
xchg
push
ficompl
xchg
cmp
ss
adc
movsb
negb
xchg
outsl
xor
and
dec
adcb
in
xor
jo
aad
jecxz
inc
mov
push
xchg
cmp
adc
and
in
enter
lcall
adc
nop
inc
add
cmp
add
push
int3
mull
test
fldcw
out
cwtl
stos
xor
inc
inc
push
cmp
fs
or
jl
es
sbb
lds
push
daa
cmp
mov
mov
bound
leave
addr16
pop
gs
mov
dec
mov
pushl
les
mov
push
mov
jns
subb
fidivrs
jecxz
sub
or
in
leave
mov
ja
cwtl
lret
mov
push
xchg
fadd
jnp
fnsave
icebp
mov
psadbw
xorb
mov
inc
das
std
push
fmull
jge
cmp
xor
inc
add
in
cli
lret
and
jp
sub
in
xchg
adc
imul
cmp
scas
and
push
fsubrs
inc
mov
or
lcall
jno
cmp
call
xorl
cmp
gs
testb
stos
out
sti
and
pop
bound
sahf
leave
mov
ret
xchg
popa
ret
aad
clc
call
adc
cwtl
mov
pop
loopne
jb
fs
or
in
mov
mov
xor
loopne
push
sub
outsb
push
filds
loope
insl
pop
test
inc
pop
xchg
mull
jl
movsb
loopne
push
jns
into
popa
xor
pusha
stos
daa
add
push
mov
pop
insl
pop
sbb
mov
mov
je
or
and
add
imul
icebp
push
lret
sbb
mov
or
xor
xchg
je
pop
test
ret
mov
jg
fistps
cli
and
push
lea
iret
leave
or
xchg
jb
mov
in
inc
movl
mov
jmp
aam
scas
jnp
adc
push
sub
daa
sbb
enter
jmp
out
xchg
xchg
jp
push
fucomp
inc
into
push
cmp
sub
push
xor
nop
jecxz
xor
cmp
mov
xchg
lcall
inc
push
sbbl
mov
call
insl
fcomip
jg
add
pop
loopne
dec
jecxz
orb
out
int
xchg
push
inc
mov
or
push
fdivr
cmp
aaa
push
lds
and
roll
movsb
push
or
pushf
and
mov
ret
push
out
sbb
sub
cli
sti
jp
and
vmread
stc
inc
loope
int3
adc
sbb
xor
adc
jp
fldenv
xchg
stos
in
fstp
daa
int3
and
jno
inc
aad
test
nop
int
shr
cmp
daa
add
ret
jmp
loop
pop
mov
lock
adc
xor
sub
or
fildl
gs
mov
sbb
cltd
push
xchg
mov
add
push
rorb
or
idivl
gs
mov
inc
jp
mov
sub
jle
cltd
adc
loope
pop
cmc
push
aas
jb
xorl
outsb
push
lock
aam
push
sbb
pop
arpl
sahf
jb
fdivrs
ffreep
pop
ljmp
push
fsubr
pop
and
fistl
je
rcl
and
cmp
or
and
std
in
mov
mov
mov
jge
mov
fstl
stos
and
dec
mov
xchg
inc
lret
sbb
cmc
daa
in
push
pop
jmp
adc
push
or
add
data16
jbe
imul
or
mov
ds
xor
xchg
cld
cwtl
add
mov
mov
add
and
fs
add
notb
sub
mov
sub
rsm
push
cltd
dec
movsb
push
lock
and
mov
xlat
cmp
push
push
imul
push
push
int
dec
repnz
cwtl
mov
les
sbb
mov
test
jecxz
xor
jne
add
inc
inc
and
icebp
cmp
mov
pushf
and
or
rorb
pop
lds
insb
into
jae
inc
push
jb
cmp
and
pop
mov
and
les
xor
mov
cmpsl
mov
cmp
xor
ljmp
or
pusha
mov
jl
stos
push
leave
xchg
into
mov
fildl
cltd
pusha
dec
sub
lret
jno
inc
lret
or
push
inc
jmp
xchg
sub
fst
sub
scas
mov
dec
fsub
rolb
mov
jecxz
jg
imul
into
out
test
mov
pop
mov
loop
xchg
fmuls
mov
lock
movsb
push
mov
pushf
mul
xor
cli
xchg
push
jb
or
add
adc
fstps
jns
sahf
shlb
imul
xor
loopne
mov
into
fwait
sbb
ds
jae
aaa
ret
inc
std
imul
cs
les
jl
xor
fidivrl
in
cmp
inc
fbld
jecxz
andl
or
lret
test
inc
xor
xor
out
mov
out
lret
ficompl
push
repz
push
jb
and
ss
lods
das
lret
cmp
jmp
push
sahf
rcl
adc
in
sbbl
sub
and
rorb
fidivs
ret
nop
cmc
fisttpl
fstpt
or
je
mov
pop
outsb
rolb
hlt
fabs
fwait
sub
imul
stos
jnp
mov
pop
std
add
sub
add
cmp
pop
mov
sub
test
sbb
xchg
or
xor
sub
out
fsubl
stos
sti
add
jns
test
and
or
cmp
dec
shl
inc
or
jnp
shlb
push
inc
lods
lods
aaa
pop
loope
push
jmp
mov
aaa
mov
fisttpll
and
dec
pop
cmp
test
enter
jne
inc
jnp
hlt
int
icebp
mov
dec
movsb
movsl
into
data16
cmp
test
jl
mov
in
aaa
pop
mov
pop
push
add
pop
mov
inc
jo
fwait
adcl
ret
lcall
es
loop
sub
jnp
and
mov
movsb
cltd
mov
in
fnstenv
cmpsb
sbb
fsubr
xor
icebp
or
fadds
mov
cltd
jmp
adc
cmp
and
icebp
out
mov
mov
pusha
adcb
push
cmp
and
fs
movsb
dec
lret
adc
lahf
out
push
incb
cmp
add
mov
xchg
lds
pop
sub
push
in
jne
push
int
dec
or
in
inc
push
fmuls
test
xchg
scas
outsl
dec
mov
fmul
xchg
lahf
jae
jp
imul
fisttps
cmp
adc
stc
cmc
out
adc
push
int
jmp
scas
mov
or
jo
and
insb
in
xlat
xchg
sbb
jne
aas
clc
int
lods
xor
in
pushf
lock
xchg
mov
and
jnp
sub
loopne
sbb
test
movsl
pop
push
sub
pop
in
lods
adc
sbb
out
pop
inc
shll
adc
xchg
sub
lahf
lds
jns
pop
inc
mov
sti
shll
loope
xchg
ds
pushf
push
test
xchg
mov
add
fldl
movsb
cli
enter
insb
push
shrl
clc
push
cmpb
xor
dec
clc
push
psubq
jle
popa
mov
and
andb
mov
cmp
test
xchg
mov
cltd
test
xchg
push
jge
add
cmp
adc
mov
fwait
scas
into
adc
add
xor
into
sbb
or
jge
mov
mull
pop
push
xchg
mov
shlb
pop
lds
lods
sahf
notl
inc
dec
sahf
addr16
and
cmc
aad
dec
pop
cmp
xchg
adc
dec
and
jl
sbb
test
mov
in
sahf
xchg
fwait
sbb
or
cs
cmp
jno
rclb
jle
jge
xlat
dec
insb
int3
mov
rclb
repnz
dec
and
repz
inc
adc
pop
jne
adc
enter
jb
cmc
dec
sahf
lcall
adc
jmp
dec
sbb
ljmp
gs
aad
inc
cltd
sub
daa
xor
sahf
cmpb
cld
aad
pushf
addr16
inc
inc
outsl
test
dec
mov
outsl
and
aad
test
data16
movsl
jns
nop
out
pop
add
das
outsl
lret
xor
mov
xor
push
push
adc
loope
add
enter
dec
mov
mov
nop
push
pop
inc
xchg
cmp
sub
mov
cmpsl
dec
scas
enter
lahf
add
mov
push
cmp
out
cmp
es
push
or
inc
push
push
aad
add
jecxz
cmp
inc
mov
ror
mov
out
xchg
push
imul
insb
xchg
pop
dec
inc
mov
mov
mov
out
and
stos
out
pushf
inc
xor
mov
pop
jge
insb
xchg
outsl
sarb
jne
sarl
mov
addr16
aaa
push
pop
ret
xor
fldenv
or
stos
aam
xchg
call
jmp
pushf
pop
fwait
and
cmpsb
jp
lret
jl
mov
lods
mov
mov
jmp
fdivs
add
xchg
dec
mov
andl
push
jge
dec
jle
or
lods
and
adc
mov
xchg
insb
xchg
adc
pop
push
mov
lods
push
ljmp
inc
fs
ret
xchg
jae
and
andb
dec
cmp
fisubrs
mov
nop
inc
lea
jg
cmpsl
xor
pop
inc
jae
sub
lret
test
mov
push
out
xchg
xor
pop
out
int
mov
push
test
insl
lods
cmp
inc
or
nop
fistps
stc
int3
dec
subl
cld
adc
call
stc
or
mov
imul
mov
jmp
ljmp
fs
lahf
aaa
cmpsl
loopne
push
fidivrs
ja
popf
out
xor
dec
and
cld
sub
nop
lock
loopne
int
leave
imul
lock
pop
jae
repnz
pop
rdtsc
arpl
cld
lcall
push
pop
lret
mov
addb
inc
mov
push
addr16
and
int
xor
lcall
sub
xor
fwait
lock
aad
jmp
mov
push
ljmp
into
push
adc
push
in
add
mov
int
cli
push
loope
pop
xchg
mov
lcall
lods
jp
test
scas
xchg
xchg
or
mov
xor
or
enter
dec
mov
xor
jno
push
out
lcall
fiaddl
sub
movsb
xchg
rcll
in
pop
mov
pop
shlb
inc
jmp
movsb
dec
gs
lcall
bound
xchg
loope
sbb
outsb
movsb
or
dec
and
or
or
xor
inc
sbb
imul
lods
mov
xor
in
shr
inc
xchg
aad
jp
sahf
popa
aas
pop
addr16
std
ss
scas
out
add
arpl
into
xchg
lods
sti
adc
es
popf
push
test
out
xor
push
jl
call
dec
xlat
sub
inc
cmp
push
pusha
inc
xchg
das
pop
xlat
out
jo
cmp
sub
pop
jp
sub
inc
xor
les
mov
push
jmp
xor
dec
sbb
pop
mov
mov
out
test
jns
fnsave
popf
push
stos
add
imul
cmp
inc
fcomp
dec
or
pop
jmp
test
lds
mov
and
aam
or
and
in
inc
mov
fs
add
and
ret
daa
cmpb
call
imul
mov
movsl
pmaxsw
test
pop
out
cmpsl
jo
jecxz
cwtl
and
or
inc
mov
call
push
pop
shlb
test
sti
sbb
add
fmul
cli
les
lock
mov
pop
push
repz
xor
pop
adcb
sbb
sbbl
xchg
xchg
sub
adc
xlat
lahf
xor
adc
jno
jb
dec
rolb
xchg
fdivs
inc
pop
aad
lods
movsb
mov
xchg
mov
jmp
in
bound
sub
lret
test
xor
shr
aad
jp
sub
test
nop
scas
push
int3
pop
mov
push
cmovae
lea
pop
and
mov
cmp
and
aas
inc
add
mov
ret
scas
enter
mov
or
aad
or
mov
or
xor
push
das
pop
cmp
ljmp
and
and
sbb
mov
sti
sbb
xor
lds
sti
and
aad
jle
clc
fdivs
cmp
ss
xlat
or
pushl
pop
cltd
lods
mov
mov
inc
popf
and
xchg
aam
xor
in
lret
fcomp
and
imulb
hlt
pop
cmp
mov
jl
movl
ljmp
js
dec
dec
aas
or
lret
xor
out
mov
adc
stos
sar
std
leave
jne
mov
gs
aam
inc
inc
push
inc
imul
xor
test
addr16
dec
subl
xor
cli
jg
xlat
and
fwait
jp
sub
jae
pop
inc
xchg
push
or
push
fsubl
jle
or
sub
xchg
mov
mov
dec
neg
insb
xchg
filds
sbb
test
or
idivl
xor
adc
lahf
shlb
sti
lcall
mov
push
mov
adc
jge
xchg
fmuls
pslld
fwait
cmp
inc
xchg
scas
mov
scas
daa
inc
addl
lds
sub
notl
addr16
push
repz
sub
mov
ja
rep
cs
popf
add
pop
lahf
dec
fsub
ret
hlt
mov
inc
aam
mov
pop
cmpsb
sub
cli
dec
iret
jnp
mov
pop
es
or
sbb
jg
mov
call
xor
arpl
lock
pop
add
daa
gs
cmp
pop
cmpsb
cmp
jl
push
sub
xlat
out
mov
mov
cmp
enter
sub
jae
cltd
sub
outsb
mov
lea
jmp
pop
pop
mov
jne
push
mov
push
out
ds
mov
mov
enter
iret
jg
sbb
scas
out
fildl
mov
sbbb
int
sub
mov
loopne
loope
or
int
or
sub
scas
ss
pop
xor
adc
push
sbb
stos
push
jnp
adc
adc
jp
fstps
lcall
pop
scas
test
jno
jp
cwtl
jge
add
aaa
fidivs
imul
mov
push
mov
lret
or
outsl
and
popl
and
jne
mov
jnp
add
xor
fxch
aam
mov
pop
add
fs
pop
xchg
push
push
mov
dec
ljmp
pop
dec
cmpsb
das
into
inc
aam
icebp
xor
movsb
nop
ds
xchg
push
shll
clc
sub
jbe
mov
les
lods
insb
dec
xor
sub
sbb
int3
xchg
sbbb
mov
cmc
pop
cmpb
lcall
ja
pusha
jecxz
push
arpl
sbb
sbb
push
es
jne
jl
add
pop
lds
es
cmp
mov
push
insl
push
push
mov
pop
push
xchg
lds
dec
cli
arpl
push
scas
adc
xor
sub
mov
sub
jge
out
ret
in
inc
inc
inc
xor
ljmp
ror
or
lods
scas
pmullw
jmp
rcr
dec
mov
les
or
sub
pop
imul
jge
dec
stc
cmp
add
pop
push
mov
or
add
push
fists
aam
add
or
test
lcall
cmp
cwtl
sahf
mov
shr
testl
jno
dec
clc
repz
divb
fsubl
popl
mov
test
inc
jecxz
repnz
xor
add
or
loopne
adc
cmp
mov
mov
insl
iret
xchg
arpl
int3
jl
scas
sbb
js
pusha
faddl
xchg
add
fwait
test
or
or
jp
inc
sbb
aas
sub
adc
adc
insb
mov
jae
fmul
adc
cmpsl
and
clc
mov
out
mov
je
ja
mov
sbb
mov
jb
xchg
daa
daa
jns
push
cs
inc
out
sub
sub
sbb
xchg
sbb
sub
pop
jns
pop
adc
lods
dec
ss
sbb
and
sti
subl
sbb
cmpsl
xor
hlt
lds
or
lcall
and
or
loop
pusha
pop
lcall
jecxz
inc
mov
rcrb
pop
jl
xor
mov
imul
cld
clc
dec
dec
js
mov
adc
mov
out
xchg
lret
pop
cmp
test
inc
imul
in
imul
adc
mov
repz
es
jp
repnz
das
sbb
xor
or
inc
lea
call
add
js
ss
mov
push
sbb
or
ret
or
div
jb
bound
pop
das
nop
sarl
sahf
jo
popf
xor
ss
sbb
inc
cwtl
dec
push
xchg
sub
in
adc
je
lock
push
mov
outsw
xor
cmp
movsb
fbstp
dec
adc
daa
cmp
test
pop
jmp
inc
cli
mov
sub
mov
lret
push
in
andl
sarl
enter
mov
pop
push
in
sbb
sbb
enter
jbe
cmp
jle
push
xchg
fisttps
inc
jo
fwait
pop
arpl
and
xchg
mov
push
push
xchg
push
pop
inc
add
xchg
mov
loope
push
xchg
repz
insl
fcomp
sti
sub
fnsave
test
push
lret
in
ret
dec
clc
data16
call
in
mov
insb
rclb
sub
cmp
daa
shrl
fmull
sub
cli
add
in
orb
or
inc
fimull
push
pop
push
jns
lret
or
push
add
sbb
xchg
sub
xor
js
cltd
sub
std
sub
adc
subb
xchg
xorl
mov
popa
negb
xchg
mov
xchg
jle
or
mov
iret
inc
lret
int
jb
incl
lcall
sbb
or
cli
pop
fistps
fwait
dec
xor
mov
sub
xchg
or
push
cmpsb
mov
loope
inc
insl
xchg
pushf
mov
dec
jl
mov
imul
sti
enter
mov
faddl
das
enter
into
xchg
mov
mov
xchg
cmpsl
movsl
push
loopne
outsb
imull
je
jge
jb
sahf
sub
dec
jne
cmc
mov
dec
je
shrb
pop
adc
bound
int3
jmp
dec
push
jg
mov
add
sbb
loopne
bound
popa
xor
bound
popa
mov
mov
push
mov
iret
and
cmc
mov
outsb
aad
lods
sub
add
sbb
add
sub
xchg
lret
jecxz
lahf
loope
cmp
test
and
push
scas
dec
int3
in
shrb
sub
add
jne
mov
and
addr16
fistpl
in
pusha
jbe
inc
sti
aas
andl
imul
insb
ret
mov
pop
push
adc
call
sub
xchg
sbb
and
sub
scas
mov
out
cmc
inc
inc
fstl
cmp
sbb
call
cmp
push
mov
cmp
or
lcall
push
mov
lret
sub
aad
mov
push
xchg
ja
mov
imul
push
or
stos
dec
sahf
lahf
test
xor
pop
mov
add
pushf
test
mov
iret
in
adc
or
dec
sbb
seto
lods
sbb
imul
ret
pop
daa
dec
xor
xchg
dec
mov
pop
push
dec
lcall
hlt
lock
lcall
cmp
loop
sbb
sub
inc
jbe
jle
push
sbb
or
loope
xchg
pop
jns
push
lods
sbb
dec
aad
push
add
call
or
mov
cltd
fisttpl
sarl
outsb
test
push
lcall
test
jo
mov
jbe
push
push
push
mov
xchg
xchg
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fsub
test
xchg
xchg
xchg
sub
lcall
xchg
xchg
xchg
das
data16
cs
push
das
xchg
in
xchg
aam
jle
push
sahf
pop
rorb
pop
data16
push
or
jp
cld
arpl
xchg
pop
jp
cld
sub
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
or
cld
sbb
addr16
mov
xchg
adc
push
pop
nop
mov
or
jb
mov
adc
in
xchg
xchg
push
mov
pop
jp
pop
mov
sbb
jecxz
push
jb
mov
mov
push
call
out
xchg
adc
jbe
pop
daa
fs
cltd
out
adc
mov
adc
sahf
xchg
jmp
xchg
xchg
xchg
sub
mov
jne
cltd
loopne
sbb
pushf
sbb
mov
xchg
xchg
xchg
xchg
addr16
mov
cwtl
xchg
xchg
jmp
xor
fwait
xchg
xchg
jmp
pop
lock
push
cmp
push
lcall
adc
pop
mov
jnp
fbld
xchg
xchg
inc
mov
pop
call
aam
jbe
out
xchg
aaa
loope
sbb
test
xor
mov
xor
xor
pop
leave
adc
xchg
xchg
xchg
cltd
cmp
cwtl
push
shrb
adc
inc
jge
addb
scas
pushf
push
lods
rcrb
adc
fnstsw
repz
dec
aam
rcrb
push
rcr
idivl
and
push
push
addl
fwait
push
ljmp
push
xchg
xor
push
pushf
aas
mov
jl
leave
cmpsb
je
jae
xchg
sub
pop
pop
fcmovnbe
rcll
rcrb
imul
fsubrl
mov
aaa
fisubrl
movsb
icebp
push
fmull
imul
mov
inc
rcll
fmul
outsl
out
sub
shlb
xor
scas
sti
cmpsl
das
push
mov
ficomps
ja
xchg
jb
movsl
ja
inc
mov
cmp
xor
out
xor
jb
insl
xchg
sub
push
xor
mov
out
cmp
push
or
gs
or
ds
pop
and
stos
das
loope
and
ljmp
lds
fs
repnz
insl
decb
adc
xchg
add
adc
mov
ret
test
ss
mov
pusha
int3
bound
push
outsb
insl
push
jb
xor
adc
xlat
xor
dec
pop
retw
jb
fs
cwtl
add
sbb
test
mov
insb
jb
das
jg
outsl
xchg
into
add
jns
dec
mov
and
mov
out
and
out
cmp
inc
test
add
mov
enter
hlt
dec
std
stc
and
js
loopne
and
jb
std
mov
sbb
insb
jl
orl
icebp
fistpll
js
mov
and
loopne
mov
mov
hlt
fiaddl
mov
ret
pusha
iret
mov
and
imul
lret
mov
and
push
cmp
jecxz
mov
or
sti
mov
rorl
test
icebp
lods
mov
mov
mov
jle
enter
jp
mov
sarb
bnd
inc
sub
sub
jbe
je
cwtl
jbe
xor
mov
les
jno
into
inc
fnstsw
jno
mov
popf
ds
xor
mov
test
jle
repnz
mov
inc
cmpsl
mov
push
xchg
out
imul
mov
pop
fsts
aad
mov
mull
pushf
nop
lds
test
cltd
lds
push
outsl
mov
pop
and
out
jle
bnd
cmp
mov
sub
and
xchg
mov
imull
mov
jno
mov
sbb
cmpsl
xchg
test
ror
and
insl
idivl
jno
jle
repnz
add
idivl
or
pushf
lds
adc
cli
sub
lods
sub
je
sub
inc
aas
inc
add
or
cmpl
int
mov
hlt
xor
outsb
mov
popf
or
sbb
ss
jmp
mov
hlt
sbb
pusha
add
hlt
sbb
aam
xchg
je
cmp
cmp
sbb
lret
test
sbb
popa
popa
hlt
sbb
xor
mov
dec
dec
jbe
add
cmp
hlt
sbb
cmc
popa
hlt
fistpl
inc
ljmp
addr16
mov
add
hlt
insl
cmc
stos
pop
xchg
sahf
mov
hlt
lock
rorl
dec
mov
sbb
lds
mov
gs
cs
adcb
sbb
and
hlt
sbb
cmc
popa
hlt
js
push
hlt
inc
addr16
sub
popa
jne
inc
xor
sbb
addr16
stos
cmpl
hlt
test
mov
hlt
test
hlt
sbb
xchg
add
hlt
sbb
xor
pop
xor
inc
push
flds
sbb
addr16
popf
jbe
hlt
mov
adc
dec
mov
xchg
dec
enter
pushf
addl
xor
test
sub
popa
test
shlb
flds
sbb
lods
xor
pop
xor
mov
pop
xor
ret
dec
ret
cs
mov
xchg
mov
loop
dec
add
addr16
stos
cmpl
hlt
test
hlt
sbb
cs
and
ret
or
popa
hlt
js
cmp
or
hlt
sbb
xor
hlt
sbb
xor
mov
lods
rorb
adc
mov
pop
test
test
and
mov
jnp
mov
cmp
jo
sub
cmc
fs
mov
inc
mov
jne
xor
jp
cmp
cmp
jo
aas
hlt
jo
ret
pop
popf
inc
jge
aam
jle
fmuls
sahf
sub
pushfw
inc
cmc
fs
mov
dec
push
cmpsb
pop
stos
leave
rclb
mov
xor
sbb
xchg
fmuls
sahf
sub
pushfw
inc
cmc
fs
mov
imulb
inc
or
addr16
sbb
xchg
fmuls
sahf
sub
pushfw
loopne
out
mov
imulb
mov
sub
orb
xor
adc
js
pop
pop
cmp
and
hlt
sbb
pop
popf
inc
jge
ss
jle
fmuls
sahf
sub
pushw
repz
hlt
hlt
popa
lcall
xchg
mov
sub
orb
xor
xchg
mov
mov
and
xchg
addr16
imulb
lret
out
push
nop
mov
sahf
fcoms
cmp
cmp
cmp
jl
adc
push
xor
xor
mov
addr16
jo
hlt
mov
cmc
popa
iret
fmull
in
sub
sbb
hlt
add
pushf
aas
sub
sbb
cs
jge
hlt
sbb
imul
arpl
lret
fisttps
or
jecxz
aas
les
cmp
and
test
shl
dec
xchg
outsl
mov
testl
and
jl
or
mov
cmc
pop
pop
enter
es
pop
xchg
jecxz
inc
negl
push
cmpsb
cmp
jbe
fadds
sub
loope
je
add
imul
loope
mov
cli
hlt
sbb
sbb
xor
sbb
xor
sbb
xor
sbb
ja
sbb
mulb
push
hlt
popa
hlt
sbb
xor
hlt
sbb
xor
sbb
ds
sbb
xor
sbb
sbb
sbb
pusha
pushf
hlt
sbb
addr16
hlt
repz
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fcoml
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
cltd
xchg
sub
cltd
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
or
stos
stc
mov
shl
jns
or
or
jno
xchg
xchg
xchg
shl
jns
xchg
stc
popa
mov
stc
mov
xchg
mov
rorl
xchg
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
scas
inc
fcmovnbe
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmp
jae
stos
stc
mov
loope
jae
stos
stc
mov
mov
stos
stc
mov
loope
popa
jns
or
adc
cltd
xchg
xchg
xchg
xchg
xchg
sbb
cltd
xchg
xchg
xchg
xchg
xchg
push
outsl
cltd
xchg
xchg
xchg
xchg
xchg
lea
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cli
loope
loope
loope
loope
imul
xchg
push
jno
or
test
xchg
xchg
sbb
or
sbb
cmpl
push
or
subl
inc
sbb
loop
xchg
xchg
xchg
xchg
xchg
lret
fwait
in
in
fcompl
adc
add
popf
int3
fwait
pushf
scas
stos
pushf
jns
jbe
int3
xchg
mov
ss
test
mov
test
mov
adc
cld
fdivr
ret
dec
mov
sub
in
mov
mov
les
in
lcall
cltd
arpl
shrl
popf
jb
loopne
les
test
jo
xchg
cli
shr
fdivr
push
out
or
sbb
jge
sbb
or
xchg
mov
aam
pushf
les
jo
xchg
fnstsw
xchg
or
pop
fidivrl
rcl
jo
xchg
mov
out
mov
shl
jo
xchg
aam
or
stos
cli
rcrl
notb
insb
mov
mov
mov
mov
xchg
pop
mov
arpl
mov
cmc
aaa
lahf
push
xchg
loop
or
sahf
xchg
cli
xchg
mov
shl
pop
xchg
mov
lock
addr16
add
ret
mov
roll
fnstsw
sbb
arpl
mov
repnz
sbbl
xchg
push
imul
cli
cltd
mov
and
pop
cmp
sbb
in
mov
jo
adc
push
cwtl
cmp
sbb
popf
xchg
test
hlt
cltd
sti
pop
xchg
adc
cmc
push
scas
rclb
xchg
pusha
fsubl
jns
loopne
xchg
in
test
fwait
cmp
js
adcl
xor
cmp
xchg
sbb
cld
lret
xchg
cwtl
adc
add
sbb
faddl
pop
sub
orb
jnp
lcall
fcoml
les
xchg
push
clc
addb
test
sbb
push
lahf
aam
stc
lcall
std
ja
push
adc
push
push
jl
xchg
and
adc
mov
push
paddb
les
out
gs
inc
pop
sbb
xchg
mov
test
xor
ja
shr
sbb
push
mov
in
fldenv
mov
adc
adc
iret
pop
push
rcrl
pop
das
sbb
lcall
push
mov
cmp
push
icebp
das
mov
push
mov
adc
lods
roll
xor
mov
enter
pop
adc
xchg
test
pop
xchg
cmpsl
jnp
push
xchg
lock
pushf
popf
lahf
push
sbb
mov
scas
test
xchg
push
popf
lcall
and
mov
sub
xchg
pop
adc
mov
ljmp
stos
sbb
hlt
test
bound
scas
ja
ljmp
mov
fs
and
jg
add
mov
xchg
in
ja
push
xlat
shll
clc
movsb
add
mov
clc
sub
jmp
hlt
push
test
rcrl
jbe
cmp
add
lcall
push
hlt
fsubrl
ja
sbb
xor
popf
out
push
pop
pop
in
add
adc
push
push
repnz
fstps
pop
in
scas
inc
xchg
pushf
je
push
pop
jnp
push
sbb
lods
pop
cld
adc
mov
dec
sbb
mov
mov
cmp
xor
xchg
xchg
or
mov
cld
xchg
lods
mov
movsl
xchg
mov
stos
add
sar
insl
js
jp
cmp
and
jae
notb
in
aad
sbb
fwait
sub
daa
push
nop
sbb
mov
test
pushf
lahf
jbe
ret
popa
movsb
adc
xor
leave
dec
test
adc
sbb
fldenv
rorb
adc
xchg
repz
das
xchg
sbb
push
cmp
aam
jl
pop
popf
xchg
pop
sub
push
sbb
or
fcomps
mov
lock
jp
ss
xchg
adc
sahf
mov
adc
mov
push
mov
sbb
xchg
test
popa
sbb
push
xchg
pop
sar
adc
pop
js
xchg
cmp
lahf
es
cmp
jecxz
or
mov
xchg
pop
testb
xchg
sahf
cltd
test
das
jae
push
xchg
int3
jno
pushf
sub
out
xchg
shrb
inc
ret
jmp
xchg
aam
bound
ja
dec
aam
ffree
movsb
ret
pop
loop
cmpsl
dec
mov
enter
repnz
test
and
call
sahf
mov
inc
adc
loop
addl
fmul
sub
les
xchg
jns
repnz
sbb
adc
clc
leave
pop
outsl
xchg
js
push
cmc
loope
fisubs
xchg
pop
lock
lret
jge
sbb
jl
outsl
or
dec
xchg
cmp
aam
clc
or
xchg
cmp
sub
cs
movsl
push
push
addr16
cmp
and
sbb
mov
jno
mov
pop
daa
rolb
xorl
ja
cwtl
aam
cmpb
divb
hlt
sbb
ret
sbb
xchg
jecxz
out
mov
mov
add
ljmp
cmpsl
mov
call
jbe
ds
pop
adc
shll
and
scas
mov
nop
jg
mov
push
pop
jbe
cltd
fimull
inc
addb
xorl
xchg
hlt
jbe
enter
xchg
repnz
or
mov
jmp
sbb
sbb
cltd
out
mov
outsb
inc
dec
pop
cli
aam
cmp
xor
sti
lea
pop
mov
fcomps
and
dec
shrb
std
lahf
inc
pop
je
mov
and
xchg
andl
xchg
and
xchg
xor
sbb
lock
lcall
add
mov
cmp
sub
cmpsl
movsl
cld
xchg
clc
lahf
xchg
dec
stos
test
xchg
movsb
fwait
arpl
fisubrl
add
out
mov
cwtl
push
adc
dec
popf
push
lock
outsb
xchg
add
push
sbb
arpl
sbb
add
pop
orb
push
sub
fcmovne
popa
sbb
clc
xchg
inc
mov
das
xor
xor
sbb
aaa
sahf
jne
xchg
sbbl
lds
add
adc
pop
sub
xchg
pushf
lcall
cmp
pop
cltd
pop
cltd
sahf
pop
imul
mov
mov
cwtl
rcrb
adc
sbb
dec
movsb
stos
xchg
stos
xchg
adcb
add
test
mov
in
sahf
sbb
sysexit
mov
jb
int3
clc
lcall
sbbl
cmp
cwtl
icebp
fnsave
and
sbb
cltd
rol
orl
loop
ljmp
sbb
mov
xor
scas
lods
stc
xchg
mov
rcrl
in
dec
jmp
cltd
mov
mov
xchg
xchg
loopne
jae
xchg
dec
mov
pop
lods
out
nop
xchg
lahf
mov
xchg
add
adc
popa
xor
stc
xchg
test
xchg
cmp
sbb
jmp
push
cmpsb
inc
push
pop
in
bndstx
adc
test
das
cmp
dec
xchg
outsl
push
arpl
ret
jmp
push
das
sbb
xchg
pop
stc
inc
gs
mov
xchg
mov
mov
and
cmc
xor
aam
iret
nop
jle
call
lahf
pop
adcb
jb
xchg
sub
adc
out
push
clc
dec
int
dec
and
sbb
mov
inc
fwait
adc
xchg
popf
jmp
pop
mov
xchg
xchg
out
mov
mov
xchg
mov
inc
pushf
push
pop
pop
out
movsb
addr16
sbb
sbb
test
add
inc
mov
adc
rcrl
fwait
jo
sbb
inc
lods
jae
sbb
jb
push
lea
aam
aad
sbb
push
jo
js
fcomps
pop
das
cmove
lcall
ficompl
jp
fiadds
sbb
add
stc
insb
sbb
ror
outsl
mov
jo
pop
adc
dec
add
push
adc
jb
cwtl
xchg
mov
jecxz
sbb
mov
inc
xchg
or
test
sbb
push
adc
mov
cmp
xlat
mov
cmp
pusha
or
push
pop
insl
mov
cmc
repnz
fsts
ret
sahf
jbe
mov
cltd
xchg
icebp
pop
mov
mov
fistl
pop
mov
sbb
mov
iret
pop
xor
mov
lret
mov
nop
mov
cmpl
aam
mov
in
scas
add
fisubrl
lea
aam
push
ljmp
fimull
add
push
pop
ret
add
and
sti
add
aaa
xchg
mov
imul
gs
andl
pop
adc
sub
mov
cmp
or
cmp
ficoml
jbe
lock
xor
mov
xchg
lahf
adc
das
sbb
jmp
int3
fs
push
sbb
mulb
add
mov
das
xor
xchg
je
xchg
push
sbb
dec
xchg
out
out
popf
std
aad
xchg
ljmp
add
cwtl
inc
dec
negl
sub
sbb
xchg
test
or
add
add
pop
cmp
mov
mov
movsb
xchg
push
adc
inc
adc
ds
fidivrl
repnz
test
push
xchg
pop
xchg
mov
sti
hlt
cld
xchg
mov
mov
xchg
pop
push
xchg
mov
cmpl
fldl
jbe
cli
pop
push
xchg
lahf
ret
jle
ficompl
push
pop
fs
jecxz
sub
xchg
stos
das
cwtl
push
sti
test
nop
sbb
leave
mov
je
call
xchg
sbb
mov
bound
les
ret
sbb
test
pusha
or
mov
cli
jo
xorl
cld
int3
cs
sub
lds
aam
mov
test
sbb
sub
incb
call
xor
mov
jp
les
iret
cld
cwtl
xchg
shrl
adc
ljmp
mov
ret
sbb
jae
jg
popa
pop
stos
mov
ficoml
or
shl
adcb
lcall
pop
aad
xchg
pop
jae
js
popa
in
cmpsb
add
xchg
sbb
in
lcall
jno
cwtl
adc
or
push
cmp
rorb
movsb
push
add
add
inc
inc
fisttpll
cmpsl
jp
ficoms
leave
dec
sti
int3
sub
jecxz
mov
mov
fwait
xchg
mov
jle
das
dec
daa
mov
cmp
clc
cmp
sbb
and
inc
out
xchg
ss
leave
nop
push
push
lock
cmp
notb
xchg
sub
sbbl
adc
out
lcall
ss
and
lds
sbb
pop
popf
mov
jl
xchg
pop
xchg
pop
mov
xchg
jb
imulb
dec
cmp
xchg
out
fisubrl
lea
or
xchg
arpl
add
xchg
dec
popf
sub
sbb
jb
add
add
dec
lret
adc
or
add
or
xchg
dec
js
rorb
mov
stos
or
push
xchg
popf
loope
cmc
or
das
mov
xchg
mov
popf
inc
hlt
fnstcw
xchg
clc
aaa
and
xchg
stos
or
pop
lea
clc
sahf
jo
movsb
les
mov
lcall
loope
add
ss
mov
xchg
xchg
aaa
xchg
push
mov
sub
xchg
fmuls
movsl
cmp
adc
pop
xchg
xchg
das
icebp
out
repz
sbb
adcb
xchg
push
jge
push
fwait
lock
cld
xchg
jg
mov
pop
sbb
inc
je
or
insb
cmpsb
push
hlt
xchg
fwait
lahf
adc
and
fidivl
lret
xchg
pop
xchg
cwtl
pop
cmp
repz
cltd
sbb
aam
pusha
cmp
mov
int3
adc
das
jecxz
push
xor
popf
sub
xlat
sarb
lods
add
dec
sbb
cs
xchg
push
pop
test
jp
pop
scas
sbb
or
cmp
cmp
mov
mov
movsl
and
sub
stos
sub
cld
lock
aam
pop
mov
fbstp
mov
cld
enter
fcmove
add
mov
pop
fmull
cltd
mov
xor
xorl
rorb
adc
dec
lods
pop
ja
sbb
mov
out
sub
xchg
sbb
leave
xchg
je
jecxz
lock
cmp
fwait
in
dec
sbb
outsl
mov
imul
sbb
xchg
mov
movsb
hlt
pop
xchg
bound
test
popf
mov
ljmp
dec
push
xchg
in
sub
and
loopne
aas
sub
pop
xchg
ret
aam
and
xchg
mov
pusha
lock
sbb
jmp
in
stc
mov
roll
popf
push
cmp
add
lahf
sbb
hlt
mov
adc
xchg
sub
cmp
jae
lahf
call
and
sub
xchg
movsb
sbb
mov
or
mov
mov
mov
and
std
outsl
add
xchg
outsb
sbb
testb
mov
push
rcrl
add
adcl
fistps
add
je
call
and
in
fwait
stos
popf
lods
aas
xchg
xchg
sbb
pushf
pop
push
mov
xchg
mov
add
xchg
jl
fdivrs
cld
fldenv
mov
pushf
pop
sbb
dec
scas
adcl
push
pop
mov
pop
notl
stos
aam
stc
lock
cld
xchg
ret
jno
mov
daa
xor
sahf
filds
test
mov
es
fiadds
add
jne
out
mov
jne
faddl
pop
xchg
jb
mov
cmp
mov
mov
sbb
adc
inc
mov
sbb
mov
andl
xchg
mov
adc
aad
rclb
jbe
pop
pop
push
scas
adc
jl
mov
mov
hlt
fdiv
adc
and
sbb
test
pushf
sbb
xchg
sbb
leave
cmp
lods
lcall
dec
xchg
dec
sbb
cs
sbb
pop
fmuls
xchg
out
mov
sbb
jl
xchg
push
imul
jecxz
mov
xchg
add
aam
jbe
cld
adc
repnz
into
pop
fidivs
loopne
adcb
pop
aam
cmp
pusha
pop
adc
nop
adc
popf
add
mov
into
xor
inc
fcomi
or
xchg
sahf
cld
sbb
push
xchg
in
pop
xchg
jbe
sti
push
adc
shr
fdivl
lea
jl
scas
nop
aas
in
sbb
jg
jp
les
idiv
xchg
imul
test
mov
cmp
xchg
outsl
cmc
repz
jne
movsb
xchg
and
mov
pop
ftst
lods
cld
xchg
ds
nop
call
xchg
cltd
pop
pop
int3
add
int
arpl
pop
sbb
in
mov
inc
mov
nop
mov
cmp
outsl
dec
fwait
jae
aam
jge
repnz
xchg
je
jp
sti
insl
sbb
xchg
out
fs
ljmp
call
loop
aam
cld
bound
loope
out
sbb
add
cmp
enter
xchg
shl
scas
in
fwait
mov
popf
je
mov
popf
add
mov
xchg
test
icebp
mov
push
xchg
shll
mov
sbb
scas
xchg
push
sbb
sub
adc
xchg
xchg
cwtl
enter
inc
pop
adcb
ljmp
mov
adc
enter
adc
loopne
sbb
adc
mov
push
mov
aam
dec
pop
jg
add
daa
pop
cmp
lcall
adc
stos
ret
mov
jl
addr16
xchg
pop
cs
faddl
das
jo,pn
mov
pop
pop
cmp
xchg
cltd
mov
sbb
test
ja
sub
xchg
cmpsb
lahf
jo
mov
mov
adc
int3
jl
sbb
inc
xchg
pushf
cmp
mov
je
add
and
jmp
xchg
pusha
ljmp
xchg
or
mov
xchg
xchg
pop
mov
cwtl
xchg
sbb
sbb
lcall
sbb
faddl
pop
xor
mov
fsts
cmpsl
or
xchg
aam
and
and
inc
fwait
cwtl
mov
scas
xlat
in
or
xchg
cld
xchg
xchg
fndisi(8087
xchg
pop
roll
lea
mov
lcall
sahf
test
lahf
xchg
addr16
and
mov
sarb
mov
test
test
pushf
adc
sbb
sbb
aam
mov
add
jno
mov
aam
test
rcrl
shlb
mov
daa
sahf
xorl
dec
ljmp
movsb
dec
int3
pushf
lcall
push
push
xchg
jnp
xchg
ret
sbb
hlt
sbb
cmpsb
jle
je
aam
sub
or
das
sbb
sbb
add
adc
aaa
xchg
or
xchg
dec
push
outsl
sbb
clc
in
and
les
out
push
mov
sbb
mov
shl
test
sbb
mov
xchg
push
adc
mov
pop
xorl
scas
pop
idiv
push
in
xchg
clc
adc
xchg
test
xchg
jmp
fisubrl
xchg
subb
loopne
push
xchg
jo
xchg
sub
xchg
out
ljmp
or
push
xchg
mov
mov
test
lods
rclb
push
mov
popa
pop
jecxz
cld
dec
testl
push
xchg
das
jbe
sub
xchg
shrb
clc
lcall
cmp
mov
cmp
loop
mov
dec
xchg
mov
cmp
and
mov
adc
int3
mov
in
insl
push
mov
cmp
push
jns
dec
cld
cmp
lret
dec
adc
lds
fdivr
or
pop
xchg
cwtl
je
sub
xchg
mov
xchg
jecxz
jle
sbb
mov
xchg
lahf
sub
xor
sbb
or
nop
in
nopl
pop
insb
movsb
pop
cmp
sarb
sub
ret
adcl
push
xchg
add
ljmp
fmuls
sub
rolb
test
mov
xor
cmpb
pop
je
pop
mov
sub
pusha
push
hlt
loope
cli
lock
stos
out
push
fnstcw
lret
loope
sub
push
or
mov
add
arpl
int3
sbb
and
fisubrs
sbb
sbb
hlt
scas
or
stos
out
cwtl
mov
loope
xchg
mov
adc
add
arpl
mov
cmp
xchg
sub
pop
loop
mov
pop
clc
xchg
push
lahf
loope
pop
adc
sahf
xchg
in
lcall
adcb
or
xchg
xor
dec
sbb
sbbl
insl
sbbb
sbb
mov
rclb
test
lret
std
stos
adc
bound
cmpb
cmp
cmp
loop
std
xchg
fs
pop
xchg
shl
sub
jnp
add
pop
push
test
xchg
cmp
std
das
in
lock
insb
adc
cs
xchg
icebp
adc
adc
sbb
lock
inc
sahf
cmpsb
stc
xchg
add
cltd
mov
notl
or
mov
popf
int3
mov
pop
in
ds
mov
cmp
xchg
std
sbb
mov
cmp
cltd
mov
ja
das
adc
hlt
jecxz
test
scas
test
xchg
ret
adc
fwait
jne
pop
jb
jbe
ret
in
or
hlt
add
inc
or
ja
pop
sbb
mov
jnp
adc
sub
adcl
data16
xchg
dec
cli
xchg
sub
or
mov
out
push
sbb
adc
shlb
andl
xchg
xorl
dec
mov
mov
fs
mov
cmp
arpl
adc
adc
adc
jle
add
sbb
shlb
cmp
sahf
cmp
lcall
arpl
nop
push
jae
movsl
out
lcall
push
lods
lds
push
ss
test
mov
xchg
pop
dec
cmc
mov
sahf
lret
dec
loop
xchg
jae
daa
loop
in
pop
xchg
fidivl
aad
xchg
push
jecxz
or
xor
mov
scas
in
jl
mov
popf
je
push
movsb
xor
dec
pop
sbb
pushf
pop
test
int3
ficompl
push
mov
lods
lret
into
xchg
pop
xchg
jle
push
push
jp
xor
sbb
aad
lock
cwtl
test
xchg
test
sub
jp
scas
movsb
and
mov
clc
pusha
mov
add
popf
adc
mov
xchg
es
loopne
add
mov
add
nop
cli
ret
icebp
clc
fimull
inc
arpl
xorl
fsubrl
pop
aam
or
xchg
jge
or
xchg
std
clc
sbb
adc
fmull
negb
cmpsb
aam
or
xor
xor
adc
aam
mov
mov
repz
jge
or
cld
push
pop
ret
push
aam
aaa
cli
pusha
in
adc
sbb
xchg
fwait
popa
xor
or
cmp
enter
pop
sbb
ficomps
xchg
xchg
cmc
fsub
shlb
push
sbb
jbe
add
test
mov
xchg
divb
bound
ret
sbbl
out
push
sbb
or
xchg
or
ficompl
rcl
jns
and
xorl
dec
test
pop
int3
das
sbb
dec
add
imul
xchg
and
mov
sbb
fwait
popf
sbb
mov
xchg
cltd
pop
jnp
sahf
sbb
dec
jp
ljmp
adc
xor
pop
adc
ja
lcall
das
and
fdivrl
xor
shlb
xchg
sbb
ja
xchg
insl
mov
push
or
pop
or
popf
cld
insl
rcl
test
in
push
test
jns
call
imul
or
lock
outsb
rorl
sbb
aam
sub
pop
aam
lea
sti
pop
pushf
push
call
mov
aam
nop
cmc
js
aam
lods
adc
adc
sti
sub
loopne
stos
in
sahf
mov
add
xchg
sbb
popf
repz
mov
mov
jl
out
sarb
xchg
mul
mov
andb
jmp
mov
pushf
xor
cli
xchg
lahf
sbb
popl
adcb
xchg
pop
bound
xchg
mov
out
adc
sbb
mov
mov
in
xchg
jae
mov
dec
xchg
adc
sbb
xchg
xchg
lods
leave
inc
mov
lods
inc
ljmp
aaa
push
in
mov
jne
imull
xlat
sbb
push
jne
lret
mov
mov
dec
xchg
call
sahf
cld
arpl
sbb
or
aad
lods
sbb
mov
xchg
jae
scas
mov
add
jl
mov
sbb
xchg
aam
mov
mov
pop
stos
test
mov
call
sbbl
sti
negl
stos
shrb
fwait
xchg
pop
sbb
pop
imul
in
push
sbb
test
push
push
or
inc
mov
ja
out
test
mov
sbb
push
sahf
fistpl
cwtl
subb
stos
call
not
inc
test
divb
sti
clc
xchg
fcompl
and
push
add
adc
sub
ret
sbb
xchg
in
and
sbb
jb
call
repnz
push
rol
pop
adc
push
xchg
xchg
test
mov
xchg
popf
std
mov
add
dec
mov
adc
int
fs
inc
sti
les
pushf
sub
sbb
hlt
cld
sub
or
pusha
sub
or
sub
sbb
xor
mov
jg
cmp
fistps
arpl
inc
jne
cmpsb
aam
nop
xchg
insb
pop
sbb
popf
into
mov
jb
cld
xchg
leave
adc
pop
inc
pushf
ja
out
mov
cmp
mov
xorb
mov
loop
push
sub
push
dec
sub
pushf
out
loopne
xchg
mov
xchg
movsb
iret
ljmp
mov
leave
push
inc
call
int
push
in
popa
int3
aad
push
fwait
adc
jecxz
std
scas
xchg
inc
sub
call
xchg
cwtl
gs
pop
mov
xchg
pop
cmpsb
test
xor
mov
mov
lcall
negl
mov
adc
mov
or
adc
das
or
sub
add
out
xchg
pushf
dec
xchg
scas
lret
dec
fwait
mov
mov
sbb
lcall
pop
push
mov
arpl
pop
xchg
aam
mov
add
sbb
popf
cmp
sub
icebp
nop
xchg
pop
aad
or
xchg
mov
lock
not
aam
cmpsl
push
add
pop
adc
sbb
push
sbb
xchg
xchg
cmp
imul
testl
and
out
andl
pop
mov
lahf
fcoms
mov
xchg
lcall
aad
pop
xchg
sub
cmp
adc
notl
xchg
pop
mov
lods
aad
sarb
and
push
or
fcomps
jge
jle
xchg
adc
rolb
fistps
aad
andb
aas
xchg
ja
adc
cmp
rcrb
out
adc
je
dec
nop
sbb
aad
out
fcoml
xchg
mov
or
mov
ja
push
adc
test
dec
mov
pop
aam
mull
push
fcoml
orb
ret
mov
xchg
xlat
clc
sbb
jl
mov
sub
jg
xchg
cld
sub
repz
xchg
mov
mov
adc
pop
cmpsl
addr16
and
adc
mov
lock
scas
mov
inc
mov
sti
out
xchg
testl
or
rsqrtps
insl
fucomp
or
bound
fmuls
mov
or
sarb
leave
ret
ret
popf
mov
jecxz
jo
push
pop
cmp
and
cld
ja
cmpl
cli
arpl
insb
enter
push
shlb
jmp
pop
xchg
add
lods
outsb
clc
dec
sbb
xchg
mov
scas
lds
xchg
cmc
or
mov
cld
pop
xchg
outsl
mov
xchg
adc
aam
xor
pop
loop
sbb
xchg
push
mov
push
ljmp
sbb
fisttpll
xor
xchg
push
lahf
mov
lods
jecxz
adc
sbb
loopne
jmp
cld
and
mov
adc
pop
and
lea
aas
fwait
pop
sbb
lcall
push
ja
xchg
jae
jb
js
insb
push
xchg
mov
mov
jnp
lcall
mov
int3
je
add
xchg
jecxz
inc
loopne
decl
jnp
mov
sub
fwait
mov
pop
fsubl
stos
mov
push
out
inc
test
in
add
aam
bound
xlat
xchg
stc
mov
pop
or
aaa
je
inc
adcb
js
test
data16
or
jg
or
cmp
int
vmwrite
shrb
cld
loope
jae
xor
adc
insb
add
popa
mov
nop
xchg
mov
test
rolb
bound
popa
std
add
cmp
xchg
test
cwtl
xor
mov
mov
xchg
xchg
push
rorl
push
jmp
mov
movsl
mov
push
fiaddl
cmp
stos
mov
push
in
push
push
cmp
dec
jb
or
mov
add
pop
lock
orl
flds
push
xchg
fisubl
cwtl
clc
or
sbbb
outsl
dec
out
loopne
in
mov
push
shrl
fdivl
cmp
cmp
aad
hlt
jo
and
loopne
fnstenv
insb
rclb
mov
ret
fsubl
cld
ja
inc
mov
xchg
dec
test
mov
pop
std
xchg
xchg
enter
and
jl
lcall
in
pop
jp
neg
push
xchg
cmpsl
pop
pop
call
adc
push
cwtl
iret
stos
mov
xchg
dec
lock
or
aam
lock
dec
xchg
aas
inc
ljmp
push
xor
mov
jmp
mov
or
insb
sbb
push
stos
lds
das
mov
mov
xchg
sbb
insl
mov
call
loope
into
ret
test
mov
push
sbb
sbb
sbb
sub
dec
nop
dec
jnp
fcompl
das
repnz
out
push
cmc
dec
or
arpl
xor
sub
mov
push
mov
xor
jmp
mov
loopne
movsb
mov
aas
push
in
cmp
or
push
data16
inc
arpl
xchg
sub
aam
jno
push
fldt
xchg
leave
or
jbe
lret
sbb
xchg
pop
cwtl
add
inc
mov
adc
mov
jb
xchg
mov
ret
aas
inc
inc
jbe
dec
aam
lea
jg
xchg
repnz
mov
ja
add
lahf
sbb
out
popa
imul
mov
xchg
xchg
addr16
push
stc
cli
testb
pop
push
pop
dec
aam
sub
pushf
mov
daa
xor
mov
or
int3
loop
in
sbb
mov
cli
xor
adc
cltd
hlt
lcall
pop
stos
jo
addr16
xchg
push
lret
test
rorb
nop
or
mov
test
fwait
lahf
cltd
dec
in
cmp
aam
sbb
xchg
ret
sbb
stos
out
xchg
mov
push
push
jg
in
push
scas
cltd
xchg
mov
jp,pt
sbb
pushf
pop
test
ja
lcall
repnz
jne
outsb
aam
sub
es
popl
fistps
sbb
nop
mov
adc
outsb
xor
jg
hlt
lods
dec
call
fucomi
aam
add
clc
and
fadds
int3
notb
in
insl
mov
pop
dec
ds
cld
outsb
xchg
and
bound
xchg
sbb
jnp
sub
or
aam
cmpsb
negl
push
shrb
addr16
subb
aam
fistpl
out
dec
hlt
sbb
jl
adc
inc
loope
sbb
adc
dec
mov
pop
stc
adc
mov
call
ljmp
cmp
push
adc
mov
push
cmpsb
lret
sbb
hlt
cld
arpl
jb
in
mov
cmp
mov
movsl
mov
imul
pop
cmc
stos
test
sbb
mov
clc
mov
xchg
jnp
je
push
into
hlt
lods
popf
jno
les
rcl
and
gs
dec
and
mov
in
xchg
xor
jae
ljmp
pop
in
imul
fs
std
mov
mov
sbb
dec
or
mov
outsl
shll
popf
adc
jp
add
movsb
scas
cmpsb
sbb
xor
repnz
mov
mov
mov
int3
insb
mov
test
popf
in
mov
lret
dec
cmpsb
iret
cmp
movsl
cld
xchg
push
loopne
xchg
pop
xchg
push
call
cmp
jp
outsl
sub
mov
cmp
test
out
sbb
mov
pop
add
xchg
aam
ss
xchg
lahf
dec
pop
sub
mov
lods
mov
inc
and
fwait
mov
or
xchg
jg
push
lea
pushf
sbb
cmp
jnp
push
int3
sbb
arpl
mov
sub
jns
jae
mov
aam
lret
push
xchg
mov
adc
mov
js
mov
or
xchg
xchg
xchg
cmp
mov
lock
in
inc
push
mov
adcb
into
pop
jo
mov
pop
xor
decb
fists
orb
add
jno
divl
jo
cmp
loope
popf
ss
fsubl
test
test
xchg
mov
jb
dec
andl
sbb
repnz
test
xchg
ja
sbb
push
sahf
or
loop
das
xchg
lea
pop
push
scas
addl
xor
sbb
scas
aam
mov
stos
lods
aam
cmc
inc
xchg
jae
jbe
push
test
xchg
fdivl
push
popl
xchg
sbb
add
test
or
push
xor
sbb
mov
sub
mov
faddl
cwtl
adc
rcl
sahf
cld
pushf
rcrb
popf
js
mov
shrb
loop
test
mov
adc
pop
loope
jbe
lcall
sub
clc
jae
ficoms
adc
adc
aam
test
add
or
adc
sbb
mov
stc
sahf
cltd
xchg
pushf
add
sbb
push
clc
in
movsb
lea
fidivl
mov
in
mov
jmp
stc
mov
das
or
mov
sbb
or
xchg
in
fimull
mov
xchg
cmp
shll
xchg
fwait
in
stc
clc
mov
adc
pop
cltd
push
xchg
aad
xor
cmp
dec
insb
add
xchg
loop
pop
addr16
sbb
cmp
push
ret
xchg
movsb
cmp
fsubs
mov
dec
jecxz
xchg
lret
fs
pop
rcll
ficoml
out
lcall
inc
sar
mov
xchg
inc
push
xchg
dec
lahf
btc
sub
add
fs
mov
or
loopne
out
aad
xchg
in
adc
xchg
ja
int3
dec
or
outsl
inc
aad
pushf
icebp
fwait
push
xchg
loop
xchg
daa
pop
xchg
mov
fdivs
sub
js
rol
xor
push
ret
push
lcall
dec
movsl
popf
lcall
add
xlat
cli
xchg
mov
aad
loop
pop
xor
int3
xchg
fcoms
faddl
lahf
xchg
sbb
mov
loopne
mov
adc
xchg
sub
xchg
dec
adc
shrb
jne
pop
aam
outsl
lahf
shlb
xchg
xchg
add
loop
cld
pop
and
add
scas
je
mov
shlb
add
xor
xchg
push
loop
mov
sbb
push
xchg
xchg
xor
ja
notl
pop
adc
fistpll
mov
xorb
fistpl
mov
call
xchg
xchg
jbe
ja
lret
add
je
xor
cld
rcrl
loopne
xchg
shll
add
jb
imul
add
xchg
int3
fiadds
fcomps
sub
xchg
cmp
fs
sbb
aam
push
sbb
pushf
movswl
aam
js
xchg
add
testb
sbb
push
lea
das
add
sete
mov
addr16
idivl
jno
das
ds
sahf
in
scas
cmp
push
stos
outsl
xchg
arpl
sbbb
sub
sbb
cltd
or
adc
xor
clts
ror
push
fmul
push
sbb
mov
xchg
adc
mov
sbb
mov
int
pop
fs
lods
mov
mov
sbb
xor
xor
jns
mov
inc
sbbb
xchg
add
sbb
test
xchg
push
adcl
xchg
add
aam
xchg
pusha
loopne
cmpsl
adc
jg
mov
push
jbe
les
xchg
jl
xchg
push
mov
pusha
js
shlb
cmp
sbb
push
mov
xor
mov
aam
pop
popf
adc
aad
lods
sub
fidivrs
cli
mov
mov
and
push
cmp
xchg
xchg
mov
test
aas
aad
je
xchg
cmp
mov
out
sub
xchg
faddl
and
add
loop
sub
test
rcrb
add
fcoms
int3
ja
or
dec
mov
sbb
cmp
nop
icebp
lahf
pop
sbb
int
in
xor
cmp
out
lret
js
lods
sbb
popf
xchg
pop
cmpsb
iret
xchg
xchg
xchg
int
cmp
test
xchg
punpckhbw
inc
daa
mov
push
mov
pop
hlt
repnz
adc
jp
fcmovnbe
daa
and
jne
es
stos
add
sti
bound
movsl
cmp
shlb
mov
sbbl
aad
mov
xchg
aam
jp
sahf
cmp
orps
cli
mov
dec
movsb
add
dec
inc
pop
aam
stc
push
mov
jo
xlat
aam
clc
adc
unpckhps
lahf
pop
jne
les
sbb
xchg
add
stos
movb
sbb
mov
rolb
mov
pop
mov
xchg
adc
mov
cmp
test
sbb
hlt
cmp
xchg
xchg
test
les
gs
mov
ficompl
lret
dec
jno
rcll
pushf
test
xchg
jnp
or
fcomip
aam
adc
cmp
rorb
je
dec
xlat
add
popf
mov
mov
in
lcall
xchg
mov
lahf
jne
popf
pushf
call
cs
and
sbb
pop
fs
imul
xor
xchg
bound
pop
jbe
mov
sbb
nop
shlb
push
push
in
out
sub
xor
and
pop
inc
xchg
gs
and
cmp
fucomp
subb
xchg
insl
xchg
push
lds
in
xchg
nop
dec
cmp
lods
xchg
and
cmp
rcrb
mov
dec
addb
orl
movsb
xchg
fisubrs
sahf
sbb
sbb
inc
add
xorl
pop
adc
jbe
aam
cmp
sbb
in
sub
sbb
das
aad
jl
jnp
or
xchg
mov
aaa
sbb
sub
push
test
fsubr
daa
push
or
mov
ror
int
pushf
sub
jbe
aam
pusha
int3
sbb
lods
mov
xchg
ljmp
das
and
xlat
jbe
cmp
hlt
sbb
jo
stc
cmp
int
sbb
jbe
dec
aam
sahf
push
push
flds
cmpb
inc
jo
ja
mov
mov
arpl
xchg
data16
cmp
movsb
out
leave
lods
inc
test
jno
mov
inc
aam
pop
xchg
adc
imul
es
inc
test
or
stos
jmp
xchg
jb
mov
stos
xchg
mov
mov
mov
inc
sahf
sbb
fnstsw
or
jnp
fidivs
mov
xchg
sbbb
push
cwtl
mov
and
cmp
fistpl
lods
pop
and
jae
adc
repnz
and
push
daa
xchg
xchg
pop
or
ret
dec
xchg
sbb
xchg
cmp
movsb
rclb
shll
test
push
xchg
lcall
pop
ja
hlt
sbb
or
shlb
sbb
pushl
add
mov
pop
and
rcrl
push
sbb
mov
push
cmp
xchg
mov
jno
add
test
jp
or
or
test
add
testl
in
fimull
aas
sbb
shll
xchg
inc
jl
xchg
std
mov
pop
fdivs
or
sbb
jb
call
test
pop
sub
mov
cltd
dec
and
dec
popl
nop
xor
lods
pop
xchg
mov
and
clc
adc
popf
sahf
les
xchg
inc
stos
clc
mov
fdivr
arpl
outsl
ret
xchg
inc
push
jb
or
sbb
out
insl
test
sahf
repnz
decb
jmp
scas
xorb
fistl
xchg
nop
callw
repnz
add
push
sbb
mov
ret
ljmp
testb
sbb
mov
jmp
sbb
dec
push
inc
push
aam
sbb
ret
add
sbbb
loope
cld
jne
das
out
into
mov
sahf
test
fwait
push
fsts
pop
push
push
mov
mov
inc
adc
xchg
incl
dec
mov
repz
xchg
adc
mov
sbb
xchg
ja
loop
inc
xchg
adc
les
jno
cwtl
xchg
stos
xchg
jl
nop
xchg
pop
scas
pop
arpl
jnp
jbe
out
add
stos
or
xchg
xchg
hlt
or
mov
test
xchg
inc
sti
or
jnp
xchg
push
jbe
push
movsb
add
test
jge
xchg
test
mov
xchg
sub
push
or
nop
adc
pop
cmp
add
sbb
push
mov
adc
js
cmp
xchg
pop
xchg
jmp
push
fdivl
xchg
adc
mov
outsb
xchg
cmp
fistl
in
repnz
adc
mov
and
arpl
gs
not
add
cmc
add
repnz
ret
mov
js
xchg
sahf
lahf
inc
enter
popf
xchg
mov
mov
loope
stc
cwtl
push
js
mov
xchg
add
add
or
lods
inc
scas
pop
mov
jb
frstor
dec
test
andl
mov
push
jp
andb
xor
mov
xchg
int
inc
repz
ljmp
cmpsb
cmpb
sbb
cli
leave
in
cmp
cmp
fcoml
mov
addb
sahf
xchg
les
xchg
sarb
fidivrs
xchg
dec
rol
in
stos
out
shr
jmp
rorb
pop
loop
cld
stos
rcrl
hlt
mov
or
pop
repnz
int3
jo
test
scas
fisubrl
stos
inc
pushf
movsb
cwtl
cmpsb
aam
mov
mov
sarl
jo
sahf
ret
inc
sbb
sbb
loopne
ja
stos
inc
or
dec
add
jae
xchg
lods
rolb
pop
jnp
xchg
loopne
ret
adc
mov
ja
lret
test
xchg
mov
sti
ficoms
pushf
xor
mov
cwtl
imul
xchg
mov
rcll
jo
and
xchg
xchg
or
adc
xchg
mov
adc
push
jo
xchg
nop
or
sbb
mov
lcall
stc
imul
add
cwtl
xchg
mov
lods
jo
mov
mov
xlat
xchg
and
mov
cmpsl
daa
xchg
or
stos
and
xor
mov
mov
push
stos
cmp
sti
jo
xchg
pop
add
dec
xchg
adc
mov
in
xor
mov
pop
ss
test
jbe
cmpsb
xchg
jle
fldt
test
sbb
jg
nop
int3
xor
mov
or
inc
sub
fwait
popf
mov
lret
sbb
mov
shrb
in
push
xchg
in
jne
out
cmp
pushf
add
ret
xchg
pop
jne
lahf
push
in
sbb
fdivl
add
in
sahf
xchg
jp
push
rorb
subl
lods
test
jbe
out
xchg
cmpxchg
jp
js
ss
mov
sti
jmp
lcall
ss
out
fadds
add
push
sbb
pushf
xchg
mov
in
sub
data16
lahf
les
cli
push
hlt
aaa
sbb
fimuls
ljmp
adc
in
imul
ds
mov
jge
rorl
add
or
xchg
repz
hlt
push
ljmp
adc
xor
fsubl
inc
lock
in
pop
mov
add
ljmp
scas
test
xchg
cli
xor
mov
mov
cltd
clc
in
xchg
add
adc
shr
fs
mov
les
in
ljmp
test
adc
sbbw
adc
pop
xchg
loop
in
ret
sahf
push
mov
not
fnstsw
push
shlb
neg
sbb
insl
mov
xchg
cmp
xchg
and
ja
push
pushf
xchg
jp
imul
push
stos
loope
mov
out
fs
mov
and
in
fildl
sub
push
stos
push
sbb
and
lods
mov
shlb
ret
sbb
test
leave
hlt
mov
in
ret
rcrb
test
rclb
fwait
push
push
ret
mov
hlt
std
hlt
cmp
fs
insl
ljmp
jb
mul
fcomps
and
aam
ss
xchg
into
push
jnp
cs
mov
jo
scas
pop
scas
rcll
mov
or
insb
sbb
test
mov
xchg
hlt
and
cmc
fwait
adc
inc
cbtw
xor
xchg
les
lcall
inc
ljmp
cmp
ret
mov
xchg
sub
out
or
jg
or
push
repnz
cmp
xchg
iret
cmc
mov
dec
xchg
inc
imul
scas
push
fmull
mov
lods
adcb
mov
pop
xor
cmp
rorl
cmp
adc
cwtl
pop
lahf
xlat
push
lods
or
jp
push
roll
xchg
lock
shlb
xor
and
mov
cwtl
xchg
mov
test
dec
xchg
mov
push
jnp
adc
adc
xchg
adcl
ret
fldcw
add
cli
jno
nop
xor
mov
xchg
and
adc
movsl
shl
popa
sbb
out
sbb
xchg
pop
xor
mov
xchg
jmp
add
sbb
fwait
mov
ljmp
test
mov
jne
inc
mov
or
xchg
nop
jge
sbb
repnz
jmp
lods
out
adc
loop
ljmp
cli
or
push
pop
dec
ja
ss
movsb
lcall
ret
aam
and
xor
xchg
iret
xchg
dec
xchg
or
aam
stc
inc
xchg
sub
jl
lods
mov
fistl
pop
or
les
inc
out
xchg
test
sbb
mov
mov
jl
lods
lds
push
fcoms
jle
mov
or
mov
popa
sbb
cmc
faddl
cmpb
outsl
loopne
xchg
std
pusha
mov
xchg
cwtl
inc
push
adc
fwait
nop
cltd
jge
xchg
pop
adc
lods
fstl
and
push
push
subl
xor
push
mov
pusha
inc
fdivrp
out
xchg
lock
clc
sub
or
xchg
cmp
mov
xchg
sbb
push
adc
jae
xchg
mov
dec
scas
xchg
test
xchg
mov
xor
popf
cli
loopne
jle
sahf
push
jge
xchg
clc
ljmp
push
sub
in
addr16
cmc
lods
out
movsb
adc
cmp
inc
int3
or
sub
mov
mov
xchg
sub
scas
and
mov
in
xor
sub
leave
xchg
cmp
and
add
rcl
mov
idiv
mov
mov
or
shrb
cmp
adc
nop
sar
jns
in
gs
cld
xchg
sbb
mov
loop
int3
adc
or
xor
cld
rcll
and
iret
scas
bnd
stos
fcoms
cld
dec
lret
xchg
mov
das
loopne
push
mov
hlt
and
aas
or
xchg
sbb
repz
jno
and
lret
push
nop
sbb
xchg
popa
mov
pop
shrl
and
xchg
fdivrs
je
xchg
nop
clc
enter
icebp
mov
mov
adc
out
adc
nop
mov
pop
addr16
mov
xchg
adc
pop
add
test
out
push
clc
adc
cld
adc
jg
nop
mov
test
mov
pop
mov
push
ret
loopne
or
dec
mov
ss
push
mov
mov
lods
ret
sub
insl
dec
or
push
out
setge
jmp
rcrb
data16
mov
adc
push
xchg
addl
mov
xchg
lahf
into
test
shlb
dec
sub
inc
pop
test
xor
aam
das
xchg
or
into
push
test
addr16
push
xchg
lahf
es
mov
and
mov
lea
inc
mov
movsb
pop
push
cmpsb
jl
jecxz
roll
repnz
call
fcoml
or
daa
cmpsb
push
das
mov
lahf
in
jo
lcall
xchg
pop
aas
fs
int3
test
iret
xchg
lcall
repz
adc
xchg
mov
je
out
pop
pusha
pop
lds
mov
orb
shl
divb
push
test
daa
mov
mov
shr
cmp
sbb
ret
repnz
sub
pop
mov
adc
popa
push
adcl
mov
xor
shl
flds
jge
cmpsb
xchg
enter
xor
rorl
movsb
pop
mov
sahf
pop
repnz
int3
cltd
int3
test
mov
lret
outsl
mov
shr
test
fdivs
outsb
add
sbb
inc
popf
jne
add
sbb
cmp
ljmp
xchg
xchg
jecxz
push
test
mov
mov
jle
or
dec
and
arpl
jmp
sbb
ja
add
adc
xchg
rol
hlt
bound
loopne
mov
das
pop
or
jnp
aam
not
add
pop
pop
clc
pop
les
test
out
mov
cltd
in
xchg
xchg
arpl
pop
push
dec
dec
xchg
lea
sbbl
mov
add
mov
and
push
std
orl
sbb
orb
sub
or
jo
push
sar
lahf
xchg
mov
sbb
sti
add
sbbl
jbe
movsb
inc
xchg
pop
sbb
mov
in
sbb
rcrb
scas
mov
arpl
mov
lods
add
rcl
mov
jecxz
rcll
add
adc
fldt
into
hlt
lret
mov
mov
jmp
hlt
sbb
movsb
sbb
inc
insb
lods
mov
xchg
das
loop
add
enter
xchg
push
sarb
jle
push
rclb
in
sqrtps
xor
jge
xchg
adc
lcall
out
pop
stos
int
mov
das
fwait
jae
push
xor
sub
adc
xchg
fwait
sbb
sub
std
and
jle
inc
test
lcall
cltd
jo
rorl
mov
notb
dec
xchg
push
pop
je
add
or
mov
sbb
push
pop
nop
push
lcall
cld
mov
xor
sbb
jge
fsubr
xchg
xchg
cmp
and
fisubrl
sbb
mov
xchg
into
and
in
imul
sahf
sbb
and
shl
mov
xchg
xchg
push
jl
sbb
cmp
push
mov
clc
push
rclb
push
stos
cld
shl
lret
cmp
hlt
cli
lods
aaa
xchg
mov
push
ljmp
xor
jns
mov
xchg
jecxz
xchg
push
jb
in
mov
pop
pop
xchg
xchg
out
sub
sahf
push
hlt
push
inc
movsb
lock
aam
sbb
leave
sbb
out
cmpsl
jg
fs
bound
jns
jo
adc
popf
push
pop
xchg
jp
sbb
sbb
ficomps
lret
repnz
mov
jg
dec
xor
popf
push
sbb
inc
push
cmpsb
jb
mov
cltd
lret
sbb
inc
lcall
jns
xchg
mov
jp
dec
ja
xchg
xchg
adcb
ja
notb
jns
adc
mov
test
mov
mull
xchg
mov
push
xchg
jno
and
fnsave
cmp
test
fldcw
sbb
sbb
pop
cwtl
sbb
fbstp
aam
lret
aam
insb
popa
jecxz
sbb
mov
bnd
pop
and
or
ficoml
jge
adcl
lock
sar
in
push
xchg
push
xchg
jp
jno
pop
mov
pop
movsb
sbb
aam
add
andb
mov
ljmp
pop
mov
fcompl
mov
out
xor
aam
xchg
mov
xchg
cld
jmp
push
mov
xchg
call
xchg
mov
inc
push
sbb
xchg
jmp
mov
or
push
aad
push
sbb
mov
sbb
xchg
mov
push
sbb
add
clc
mov
jmp
sahf
je
push
adc
or
les
sbb
fisubrs
outsb
jne
cmp
xchg
sub
lods
dec
hlt
dec
clc
xor
xchg
adc
push
sbb
mov
push
jl
xchg
add
mov
xchg
cwtl
stos
insb
jecxz
push
fcoms
pop
sti
das
xchg
jno
lret
test
mov
test
stc
data16
cwtl
adc
cmp
xchg
mov
pop
cmp
xchg
loope
mov
shl
xchg
cwtl
mov
int
xchg
mov
imul
sbbl
inc
mov
js
movsb
xchg
jle
adc
insb
xchg
push
sub
cmp
xor
add
push
cs
aam
pop
jmp
xchg
or
jecxz
gs
pop
lcall
mov
negl
xlat
ljmp
dec
insb
xchg
add
dec
pushf
out
sbb
push
xchg
xchg
lods
xor
fwait
mov
fcoml
sar
xchg
fidivl
cmpsl
popf
or
sarb
out
mov
fisubrs
rcrl
sbb
mov
das
and
lock
sahf
nop
icebp
cmpsb
sub
clc
mov
rclb
inc
mov
cltd
cwtl
xchg
pop
lea
sbb
js
movsb
gs
xchg
mov
fcmovnu
stc
pop
aaa
sbb
popf
inc
lahf
loop
in
push
push
add
leave
sub
mov
pushf
subb
add
jno
lcall
xchg
xchg
sbb
mov
call
mov
sub
in
js
ret
adc
in
sbb
or
lds
out
test
out
pop
outsl
xchg
fisubs
je
test
aas
movsb
aam
enter
ljmp
cmc
sub
xchg
mov
mov
fistps
test
ficomps
call
dec
xchg
ljmp
std
ja
dec
adc
mov
dec
js
push
sbb
rorl
xchg
xor
ret
inc
xchg
mov
jnp
clc
test
pop
in
mov
mov
lods
xchg
pop
pushf
lock
xchg
jnp
fldenv
ficoms
adcb
cli
fcompl
loopne
sbb
inc
int3
add
pusha
nop
xchg
rcrb
mov
or
std
popa
mov
insl
jg
xchg
test
mov
pop
sbb
mov
lret
pop
out
in
push
cwtl
push
xchg
dec
fldcw
mov
out
aaa
sub
adc
fdivr
xchg
mov
mov
mov
dec
lcall
lahf
mov
xor
lea
xchg
mov
mov
cli
lock
add
sar
mov
mov
sbbb
clc
inc
dec
sub
popa
sbb
sub
mov
pop
jge
dec
les
xchg
pop
mov
cld
stc
mov
or
add
add
push
mov
push
rcrl
jle
int3
out
lcall
js
mov
dec
xchg
mov
lret
cmp
xchg
shl
lcall
sbb
mov
add
mov
lcall
fdivrs
and
rcrb
dec
push
lock
xchg
out
mov
jbe
xchg
or
inc
int3
jb
in
xchg
popa
add
push
mov
pop
add
jecxz
adc
fsubrl
mov
or
cli
sbb
xchg
std
xchg
mov
xchg
loop
mov
ja
pop
bound
xchg
inc
sub
add
in
xchg
mov
fld1
sarl
imul
xchg
je
into
in
sbb
mov
add
fwait
jl
mov
sti
jle
sbb
and
add
mov
jb
pop
sbb
or
push
sbb
mov
aad
mov
pop
pop
sbb
movsb
dec
sbb
das
loope
or
enter
xchg
popf
mov
adc
pusha
rcrb
movsb
add
adc
sbb
pop
mov
pushf
lods
mov
lcall
imul
sahf
xchg
scas
or
aam
out
in
xchg
decb
addl
push
sbb
dec
mov
xchg
adc
jbe
xchg
mov
cwtl
pop
jns
cltd
push
movsb
pop
les
scas
mov
ja
cld
aam
test
das
add
push
adc
std
xchg
cmp
sub
adc
inc
pop
sbb
inc
mov
dec
mov
sahf
out
cmp
jmp
test
xchg
sbb
xchg
imul
fcoml
addr16
popf
add
pop
lret
and
xchg
add
roll
mov
loopne
push
adc
xor
rorb
add
inc
mov
push
add
sub
and
lret
mov
lahf
or
out
adc
sahf
imul
mov
fsqrt
mov
xor
mov
pushf
mov
xchg
sbb
mov
push
mov
ss
dec
call
out
xlat
fmulp
fnstenv
pop
jnp
mov
sbb
lea
fcompl
mov
insl
fidivrs
mov
test
pop
push
mov
xchg
cmc
lods
jmp
hlt
xchg
stos
or
sbb
out
add
out
nop
enter
out
cmc
sub
call
jno
pop
mov
pop
das
jns
lahf
in
hlt
dec
and
sub
adc
jns
lcall
das
mov
repnz
lret
fadd
je
dec
push
rorl
push
test
in
jle
ret
fwait
push
out
xchg
stc
xchg
cmp
cmp
daa
dec
xchg
sti
push
sub
aad
pusha
mov
repnz
js
stos
mov
sbb
jne
je
mov
fwait
jmp
dec
insl
mov
lcall
icebp
popa
xchg
popf
push
sbb
mov
cwtl
in
xchg
and
out
xchg
test
cmpl
xchg
sbb
es
mov
xchg
mov
popf
add
pop
test
int
in
decb
popf
aam
mov
mov
xchg
and
push
loopne
lahf
xchg
add
in
xchg
sahf
pusha
out
xchg
fcomps
push
stos
xchg
arpl
or
cltd
sbb
rcrl
inc
nop
add
es
xchg
cli
xchg
sbb
lcall
clc
sub
jecxz
push
cld
xchg
cmpsb
pop
push
push
sub
repz
movsb
adc
xchg
stos
cmp
xlat
mov
pop
andl
les
mov
cmp
stos
mov
xchg
push
scas
popf
lods
aad
pop
test
xchg
js
aam
stos
cld
test
xchg
bound
jle
mov
and
adc
jg
shlb
sbb
hlt
or
fdivrp
pop
xchg
addr16
bound
xchg
jg
imul
dec
push
adc
push
dec
mov
push
xlat
pop
pop
call
shlb
lret
fldt
mov
cmp
xchg
out
pop
inc
sbb
ja
xchg
add
bound
mov
jno
pop
inc
arpl
pop
xchg
jb
mov
or
test
popf
pop
int3
sbb
out
sbb
inc
fwait
sbb
cwtl
mov
sahf
hlt
jne
popf
aaa
adc
in
call
mov
mov
arpl
and
cltd
in
int3
sbb
test
xchg
or
cmpb
pushf
test
dec
xchg
push
cmp
mov
idivb
xchg
add
push
pop
nop
sahf
lret
hlt
mov
sbb
addr16
cwtl
daa
xchg
test
aam
fcmovb
mov
jmp
dec
popf
clc
cmp
xchg
pop
pop
aaa
mov
cld
xor
jno
mov
popa
orl
jecxz
mov
sub
add
mov
popa
pop
ljmp
mov
mov
xchg
pop
pushf
mov
push
dec
das
out
aam
fsincos
shl
scas
stc
sbb
add
pop
enter
fwait
cwtl
sbb
cli
into
lock
push
iret
aam
dec
cmp
xor
mov
fwait
mulb
pop
mov
xchg
scas
mov
xlat
or
pushf
sbb
stos
xchg
imul
shrl
and
lahf
push
mov
cmp
jae
push
mov
loope
push
rcrb
shl
je
mov
mov
mov
jmp
ret
pusha
cltd
cmovnp
adc
ljmp
mov
sub
mov
sti
cli
add
mov
jl
lret
lahf
in
push
cmc
mov
dec
cmp
lea
sti
rclb
in
loopne
xchg
pop
xchg
mov
push
cmp
iret
rcrb
aam
push
jp
negb
dec
push
dec
fiadds
enter
xor
mov
jo
fiaddl
andb
jae
mov
lret
jbe
xchg
mov
sbb
mov
inc
xchg
xchg
mov
jo
or
cmpsl
sti
pop
rorb
add
cli
sbb
xchg
fsubl
pushf
out
xchg
adc
ret
xchg
mov
sbb
test
in
cmp
clc
nop
cwtl
xchg
xchg
mov
cmpsb
mov
jo
pop
xchg
jecxz
xor
aam
in
xchg
mov
ffree
pushf
outsl
das
repz
lods
testb
popf
sbb
pop
mov
sbb
aam
std
ss
mov
mov
fistps
xchg
test
dec
sbb
xchg
aam
sbb
cmp
xchg
in
test
mov
adc
fbld
lock
test
gs
rorb
fdivl
aam
inc
push
push
mov
xorl
in
fcoms
sete
test
sbb
xor
ret
xchg
out
add
lods
sbb
les
hlt
test
es
mov
nop
cli
xchg
movsl
scas
cmp
shlb
mov
add
dec
enter
fnstsw
cmp
push
cmpsb
mov
cmp
pop
mov
pop
out
mov
jb
cmp
test
push
jp
fiaddl
rclb
sbb
in
xchg
lcall
lds
xor
das
mov
or
fcomps
in
popa
pop
jne
popa
xchg
inc
cmp
into
xor
xchg
jae
das
sbb
adc
cli
jb
jns
hlt
stos
mov
jnp
add
sbb
jno
xchg
mov
xchg
pop
push
mov
lahf
push
jne
adc
mov
call
cwtl
into
movsb
push
test
outsb
mov
xchg
cltd
xchg
cmc
popa
xor
in
sbb
lods
jmp
push
sbb
cld
test
mov
adcb
pop
int
add
sub
mov
in
sbb
dec
mov
fxch
lods
arpl
lea
mov
repnz
mov
jns
sub
xchg
idiv
lret
sub
dec
adcb
sbb
lods
xchg
add
aam
jbe
dec
ljmp
repnz
mov
xchg
fisttpl
mov
shll
test
add
scas
and
xchg
mov
dec
mov
push
sbb
dec
pop
or
mov
les
divl
lods
and
mov
mov
lods
bound
jmp
mov
or
sub
jge
pop
aas
xchg
inc
sbb
jns
jmp
xchg
dec
dec
dec
ja
imul
popf
jne
or
mov
in
jmp
pushf
test
mov
mov
push
nop
xchg
sti
clc
roll
call
xchg
mov
xchg
sahf
cmp
or
dec
mov
xchg
push
ljmp
xchg
sahf
shrb
xchg
mov
adc
in
xchg
xchg
mov
mov
mov
jo
ljmp
test
shrl
mov
aam
jl
push
sti
call
xchg
or
adc
je
sar
and
sub
and
lea
mov
push
mov
jge
arpl
mov
mov
push
jg
ljmp
inc
pop
jnp
mov
mov
sbb
push
repz
sub
lahf
andb
pop
or
or
jbe
cltd
out
mov
fdivp
mov
nopl
aam
push
rcl
xchg
arpl
fnstcw
je
mov
jg
or
and
dec
mov
xchg
push
mov
mov
adc
mov
mov
inc
enter
xchg
les
mov
pop
xchg
mov
inc
in
movsb
add
sbb
pop
mov
into
pop
call
in
mov
mov
clc
mov
hlt
cli
movsb
lock
mov
mov
mov
mov
cmp
or
pushf
fs
cwtl
cmpsb
stos
mov
shl
push
nop
testb
mov
add
push
aaa
pushf
xchg
lret
clc
leave
scas
movsb
or
xchg
jnp
cmpsb
sbb
mov
fcoms
mov
sar
sbb
mov
rcrl
mov
mov
mov
mov
andb
out
cmc
int3
xor
enter
insl
xchg
sbb
ficompl
test
xchg
in
mov
push
scas
in
fisttpl
fiadds
test
ss
cmp
je
mov
mov
les
mov
adcb
sub
lock
and
loop
enter
arpl
fimuls
push
push
aad
testl
adc
xchg
xor
add
xchg
stc
cmp
icebp
stos
xchg
inc
notl
adc
add
lret
adc
sbb
mov
loope
ljmp
sahf
cld
rcrl
pushf
hlt
rcrl
xchg
pop
xchg
in
test
push
mov
or
xchg
movsb
push
adc
push
xchg
xor
mov
adcb
popa
mov
lret
mov
sub
pushf
aam
mov
pop
pop
lcall
fs
aad
fwait
xor
xchg
loopne
stos
xchg
pop
mov
adc
mov
subb
cs
sbb
mov
sbb
fmuls
push
iret
scas
xchg
into
outsb
sarb
push
ja
hlt
sahf
push
add
xchg
xchg
cmp
or
cmc
push
les
push
jno
adc
test
cmp
xchg
pop
rcl
add
add
fistps
sub
popf
repz
clc
xchg
pop
xchg
mov
cltd
jae
xchg
add
inc
loopne
negb
fists
push
mov
xchg
mov
mov
mov
les
bound
pop
dec
mov
fcoml
dec
test
cmpsl
xchg
aaa
push
cld
stos
dec
fistps
mov
pop
cmpsb
sbb
adc
adc
push
push
pushf
push
jnp
xchg
pop
and
cs
sbb
lcall
loopne
push
out
movsb
pop
notl
sub
out
sub
mov
fcomp
and
inc
xor
clc
xor
sbb
in
fnstsw
push
sbb
xchg
sbb
das
test
cmp
xchg
xchg
call
xchg
mov
adc
push
js
xchg
ret
jae
pop
add
sub
xchg
sbb
rcrl
es
movb
sbb
cmp
negb
int3
jl
mov
mov
mov
fwait
sahf
adc
jne
in
ljmp
stos
cmpsb
inc
loopne
out
in
arpl
and
push
cmp
sbb
movsb
add
or
dec
sbb
xlat
ds
xor
pop
xchg
xchg
xlat
daa
sbb
add
add
pushf
loopne
mov
mov
in
mov
add
push
sbb
sbb
jns
pop
sbb
jge
xor
xchg
push
aad
cwtl
pop
in
lds
fwait
imul
test
push
cmp
add
loopne
rcr
pop
lods
jge
xchg
adc
or
mov
orl
xlat
or
call
add
test
push
test
jecxz
xchg
jo
mov
mov
mov
add
cmp
xorl
ja
lods
iret
nop
push
scas
xchg
imul
adc
sub
into
testb
cmp
test
cmc
pushf
in
sub
ljmp
jecxz
push
fwait
cmp
mov
adc
sub
rclb
inc
xor
fsubs
cltd
fcompl
or
mov
or
cmp
test
jae
cli
jb
nop
jp
idivl
mov
cmp
and
jo
cld
sti
rorl
and
xor
pop
aam
add
scas
sbb
jbe
nop
adc
xchg
mov
insb
jnp
repz
push
dec
inc
lss
xchg
adc
xor
das
jmp
outsl
sbb
xchg
sbb
sysenter
sbb
and
test
jnp
out
sbb
in
fimull
dec
add
mov
rclb
loope
xchg
psrld
mov
imul
gs
mov
cmc
loope
sbb
cmp
adc
sub
orl
fwait
mov
fwait
mov
sbb
mov
nop
mov
div
xchg
xchg
xchg
lahf
lcall
lods
add
je
insb
or
ror
xchg
insb
sbb
fbld
cmp
xchg
inc
nop
addr16
fcoms
mov
pop
xchg
push
or
xor
ror
xchg
push
aaa
jp
xor
sbb
dec
je
or
pop
add
movsb
sub
mov
jmp
shr
mov
lds
xchg
movsb
xchg
add
movsb
gs
loopne
mov
mov
cltd
xor
js
and
out
xchg
xchg
lock
xorl
cmp
gs
mov
test
jbe
sbb
xchg
sbb
adc
cltd
lret
test
aad
mov
mov
hlt
adc
popf
mov
pop
loope
cwtl
lea
mov
les
hlt
mov
sbb
mov
xchg
daa
cmc
mov
ret
inc
mov
xchg
cmpsl
xchg
test
and
adcb
iret
outsl
inc
xchg
add
je
mov
test
jmp
stos
xchg
movsb
jmp
repz
sbb
push
adc
add
sahf
mov
rclb
mov
jb
or
sbb
push
xchg
xchg
cld
sbb
jo
push
cs
incb
or
jmp
gs
push
addl
sub
pushf
loope
in
imull
pop
push
sbb
arpl
cmp
out
add
lcall
sbb
xchg
push
inc
aad
aad
xchg
jb
fistl
adc
aam
adc
xor
push
aam
ljmp
fwait
movsb
push
push
xchg
xchg
js
lret
mov
rclb
mov
sbb
mov
mov
mov
incl
and
ret
push
pop
mov
xchg
int3
mov
add
inc
pop
fs
mov
jge
xchg
or
cli
jo
adc
int3
fistps
cld
sbb
rol
jne
adc
das
xchg
int3
xchg
insb
mov
and
sbb
in
inc
inc
push
xchg
xor
stos
cmp
inc
gs
pop
pop
lods
test
ficompl
xor
cmc
aam
fnstcw
sbb
adc
aad
pop
jbe
out
xchg
fisttpl
stc
lock
adcl
mov
mov
fs
pavgb
mov
mov
jne
mov
cld
jmp
adc
mov
fdiv
lcall
daa
push
xchg
mov
popf
mov
int3
mov
or
pop
fildll
fsubl
into
sarb
mov
notl
sbb
or
test
push
popf
cltd
mov
fistps
adc
jp
jge
scas
or
mov
xchg
xchg
movsb
xchg
scas
xchg
mov
and
fdivrs
sbb
xchg
mov
icebp
subl
popa
shll
cmpl
aaa
adc
mov
repz
sbb
repnz
jbe
popa
xchg
jb
in
sti
pushf
add
jnp
lret
cli
sbb
nop
add
sbb
mov
lahf
stos
cwtl
mov
jl
pop
xchg
add
jmp
test
mov
fidivrl
inc
int
enter
stos
xchg
mov
xchg
push
push
or
orb
stos
cmp
add
push
aam
cmp
xchg
lock
xchg
inc
pop
in
dec
pop
insb
fcomps
imull
hlt
pop
shlb
push
stos
rcll
mov
stos
pop
mov
push
fisubrl
mov
mov
loope
mov
push
rol
pop
push
data16
in
cmp
dec
jle
xchg
or
sub
out
adc
les
movsb
adc
sbb
cltd
insb
xchg
daa
negl
das
adc
cmp
fs
mov
test
mov
xchg
data16
cwtl
popf
ds
xor
rcll
arpl
arpl
push
push
nop
xchg
cmp
fwait
xchg
pop
xchg
shrl
stos
ljmp
xchg
sbb
fnsave
xchg
jmp
sbb
sbb
add
inc
das
inc
pushf
cmc
cltd
push
and
push
xchg
xor
mov
add
xchg
aaa
lods
mov
das
xchg
add
rcrl
pushf
mov
lcall
stos
xlat
jne
dec
xchg
mov
sbb
add
inc
mov
push
int3
push
jl
mov
ret
xchg
pushf
les
loop
sahf
xlat
gs
cmp
pop
fwait
loope
sbb
mov
nop
sbb
sbbb
cwtl
xchg
add
xchg
add
scas
test
and
repnz
jbe
fdivr
arpl
dec
movsb
aad
fists
stc
cmc
xor
jmp
mov
je
pop
lcall
negl
sbb
xor
adc
fsubr
cwtl
sbb
xorb
adc
movsl
imul
sbb
aam
pop
je
lds
fs
adc
pop
jb
std
mov
les
arpl
sub
jg
daa
shl
jnp
sbb
cmc
stos
data16
jnp
and
sbb
test
adc
pop
xchg
fsubs
mov
push
sbbl
pop
push
mov
pushf
mov
int3
outsl
push
fwait
xchg
aam
test
mov
push
sbb
jae
mov
adc
push
push
aam
jmp
adc
scas
xchg
inc
clc
gs
xchg
int3
pusha
jnp
fcomps
pop
cli
push
mov
cmp
jmp
lods
in
fwait
sbb
les
pmaxub
out
xchg
test
jg
pop
je
cld
ret
jae
pop
add
mov
push
rolb
gs
stos
xchg
xchg
jp
xor
xlat
and
push
stos
aas
addr16
aam
or
mov
inc
sbb
or
push
jno
fsub
bound
inc
insb
xchg
repnz
sbb
lcall
pop
jo
test
enter
push
sub
mov
lahf
xchg
xchg
add
add
lret
fldt
jno
pop
mov
pop
sbb
xchg
xor
inc
mov
scas
jb
dec
imul
insb
pop
xchg
inc
push
cli
outsl
std
test
fmull
sub
xchg
ret
scas
leave
xchg
or
cli
fidivrl
pop
jle
sbb
or
ljmp
cmpsl
adc
jg
sub
xchg
inc
cmp
xor
mov
std
test
ljmp
or
mov
out
sbb
sbb
jp
aad
int
push
lods
xchg
fsts
cmp
jbe
jle
lret
pop
movsl
mov
mov
aad
mov
repnz
into
sbb
lock
repnz
popf
lds
dec
aam
sbbb
add
stos
mov
cmpsl
and
mov
cli
inc
mov
out
xchg
les
repz
inc
push
js
aam
outsl
int3
mov
sar
xchg
inc
lock
sarb
mov
sbb
push
sarl
hlt
mov
jns
mov
cmc
inc
mov
xchg
rcll
sub
repnz
test
aaa
add
xor
adc
lcall
aad
shr
xor
push
xchg
stc
ja
jge
mov
mov
shll
clc
mov
xchg
push
or
xchg
pop
pusha
out
mov
sbb
push
ds
out
or
mov
jl
insl
mov
cmp
js
mov
aam
mov
xchg
imul
mov
jmp
cltd
mov
test
xchg
push
adc
push
xchg
das
or
mov
xchg
add
mov
xchg
dec
mov
insl
js
jnp
xchg
jns
pusha
insb
ljmp
mov
fistps
push
pop
loop
adc
negb
insb
stc
loopne
ret
pop
sbb
loope
mov
and
ret
mov
adc
mov
outsl
fcoml
jle
ja
xchg
push
ss
hlt
nop
jne
xchg
scas
lea
pop
cmpl
or
fsubrl
xchg
sbb
nop
clc
fcoml
mov
xchg
dec
adc
out
fistps
cld
loope
out
xchg
mov
in
negl
add
pop
jbe
pushf
ss
ret
xor
iret
movsb
and
loopne
xchg
fmuls
sub
inc
inc
loope
insb
push
sub
mov
nop
jge
adc
sub
mov
fistps
ffree
ja
sbb
mov
fwait
ret
xchg
xorl
icebp
cmp
cltd
xchg
stc
insb
or
dec
jmp
lret
inc
push
aam
dec
xlat
clc
mov
or
ds
sbb
jge
repz
push
pop
int3
xchg
jp
dec
xor
cwtl
decl
jle
jecxz
cmp
les
fisttpll
lret
in
pop
xchg
in
lock
inc
xchg
sar
add
or
inc
xchg
dec
or
mov
or
jmp
les
adc
out
aaa
push
adc
les
pop
ror
sub
test
xchg
stos
mov
xor
xchg
pop
addr16
syscall
test
xchg
jnp
ret
out
xchg
xchg
incl
push
jle
xchg
jne
cld
push
xor
hlt
inc
cmpsb
mov
leave
xchg
jns
mov
xchg
test
movsl
push
test
adc
or
mov
out
pusha
stc
or
jmp
lea
xchg
xor
and
jl
ret
nop
xchg
das
add
movsl
adc
or
in
pusha
xchg
push
mov
cmp
push
jne
mov
pop
aas
mov
xchg
test
fmul
adc
rcll
loopne
xlat
jmp
cmp
fadd
bound
cwtl
in
aam
xchg
cld
fcmovbe
out
and
aaa
adc
sbb
pop
mov
stos
xchg
mov
mov
xchg
leave
dec
fcoms
push
add
mov
movsb
aam
xchg
aas
iret
mov
clc
xlat
or
ljmp
test
fisubrs
mov
sbb
jl
push
cmpsb
push
stos
out
xchg
push
mov
fiaddl
xchg
mov
and
aaa
jg
in
mov
fcoml
test
xchg
cmovnp
mov
mov
insb
movsl
lahf
in
aam
mov
xor
je
xchg
cld
insl
lds
xchg
in
cmp
fiadds
mov
int3
push
into
fwait
xchg
mov
mov
cmp
mov
mov
out
lret
test
movsb
sub
addr16
adcl
mov
xorb
sbb
sbb
loopne
enter
add
test
mov
inc
cmp
subl
and
aad
mov
clc
in
sarl
cwtl
jo
fcoml
and
hlt
cld
sub
std
ret
lods
lock
call
xchg
mov
fwait
xchg
add
stos
in
std
orb
mov
test
scas
stos
scas
inc
nop
cmpsb
movsb
xchg
popf
mov
pop
lcall
xchg
pop
loop
sub
dec
std
popf
stos
adc
and
mov
sahf
mov
je
mov
xchg
lret
int
pop
xchg
pop
mov
int3
adc
push
xchg
fwait
insl
mov
hlt
sub
and
or
pop
pop
xchg
sub
fisttpl
shlb
nop
and
xchg
xchg
and
cmp
push
out
add
add
jnp
push
inc
sbb
sub
adc
lahf
xchg
lods
adcl
or
in
add
data16
cmp
mov
xchg
fimuls
pop
mov
scas
or
adc
xchg
add
pop
ret
fistl
sahf
dec
mov
ljmp
pop
daa
dec
or
xor
in
fcomps
test
push
push
xchg
fsin
push
call
rorb
sbb
xchg
ret
inc
mov
pop
push
fcoml
mov
push
sbb
or
inc
xor
roll
sub
pop
in
xchg
xor
xchg
xchg
ret
jne
inc
jmp
xchg
dec
push
mov
adc
int3
sbb
arpl
sbb
stos
inc
or
aam
xchg
xchg
and
cli
xchg
outsl
sbb
lock
adc
pop
pushf
jecxz
sbb
mov
aam
sbb
aas
mov
js
sbb
xor
or
xchg
icebp
les
lcall
mov
mov
sub
add
cltd
cld
jl
push
or
mov
mov
xchg
jnp
leave
jo
repnz
int
ret
xchg
sbb
fsubrp
popf
mov
mov
dec
popf
or
inc
sbb
pushf
lods
or
pop
adc
es
cmc
push
mov
sub
jge
int3
dec
dec
adcl
aam
push
jge
aam
repz
inc
ficoms
enter
mov
int3
aam
mov
xchg
mov
jl
test
jg
pop
inc
xchg
jo
xchg
fmull
dec
xchg
and
mov
xchg
cmp
sarl
outsl
xchg
mov
call
xchg
lret
push
aas
xor
jecxz
or
and
std
mov
cli
xchg
stc
mov
jns
xchg
xor
or
pop
enter
ljmp
mov
sbb
cmp
jge
push
xor
aam
or
or
mov
push
or
in
fwait
ret
stc
pop
mov
fmull
mov
arpl
sbb
fdivrs
pop
das
add
nop
fimuls
ja
jb
dec
stos
rclb
nop
rolb
cld
mov
push
ljmp
scas
xchg
and
out
push
mov
inc
pushf
cwtl
popf
or
aad
jl
xchg
jae
jg
sti
xor
pop
adc
cmpsl
clc
popf
nop
stos
movsl
scas
pop
in
xchg
fs
push
stos
neg
mov
jge
xchg
pop
out
jo
setg
pop
xchg
inc
andl
dec
jae
mov
fdivrl
shl
cmpsl
addl
xchg
add
sbb
jno
jl
fadds
rorb
test
sbb
hlt
sbb
cmp
mov
push
mov
test
aad
inc
sbbl
int3
mov
pusha
lret
jp
adc
mov
out
pop
xor
xchg
dec
icebp
jmp
push
xchg
ret
stos
xor
push
incb
imul
cld
and
ret
mov
stc
sub
xchg
ja
enter
int
rcl
lcall
test
pusha
mov
push
lahf
subl
fistps
repnz
push
rorl
xchg
xorl
out
dec
lret
lock
pop
or
xchg
cli
add
xchg
repnz
pop
xchg
jnp
arpl
ja
xchg
int
stos
and
push
xchg
fxch
adc
scas
test
addr16
or
hlt
sub
xchg
fstps
push
add
jne
push
insb
test
jp
aaa
xor
adc
scas
or
push
ss
imul
xchg
test
add
xchg
mov
jnp
xchg
adc
push
jmp
popa
jmp
pop
test
shrb
mov
and
test
sbb
hlt
incb
mov
shl
rcr
xchg
sub
mov
adc
xchg
dec
push
mov
pop
pop
xchg
rorb
filds
cld
in
out
lea
xchg
jecxz
mov
dec
adc
xchg
hlt
sbb
adc
mov
jo
and
pop
inc
fnstcw
pop
lea
or
push
sbb
mov
adcb
jmp
nop
test
stc
aam
cwtl
incl
mov
pop
sti
xchg
subb
mov
sbb
or
jo
jo
cmpsb
push
sti
fbld
xchg
mov
dec
jle
dec
lret
movsb
dec
mov
or
mov
sbb
xchg
test
movsb
jne
cld
adc
imull
lcall
sbb
das
rcrb
cli
testb
mov
adc
add
mov
mov
ret
and
inc
push
adc
xchg
cs
fisttps
mov
out
cltd
xchg
movsb
push
jle
xor
adc
xchg
fcoms
or
sbb
cmp
mov
sbb
test
adc
jge
shrl
jmp
pop
xchg
push
dec
jne
push
cmpsb
or
xor
xor
out
mov
lds
sbb
cli
push
ret
aam
add
mov
jb
push
or
mov
mov
push
movsl
xchg
in
pop
mov
js
sub
mov
pushf
dec
fsubs
in
xchg
stc
ja
mov
faddl
xchg
sbb
bsf
cli
arpl
or
jecxz
stos
adc
or
iret
cmp
clc
int3
mov
sbb
fnstsw
out
pop
xchg
mov
lahf
lret
push
lods
roll
das
pushf
ud1
xchg
pop
mov
push
ret
pop
pop
rcl
mov
xor
mov
push
xchg
lods
xor
cmp
lds
inc
mov
mov
fists
or
divl
xchg
lret
xchg
cwtl
push
popf
jp
push
mov
or
push
aas
and
dec
cld
or
xchg
push
xchg
cmp
lds
fiaddl
test
inc
add
aas
push
push
jg
mov
sub
popa
ja
or
cs
xchg
rclb
scas
sbb
jno
mov
fwait
xchg
cltd
mov
jo
xchg
adc
adc
dec
sahf
test
repnz
pop
mov
out
xchg
xchg
cmp
pop
lret
fwait
pusha
pop
xor
pop
movsb
xchg
inc
pop
mov
fwait
shlb
xchg
jb
dec
pushf
cmp
and
sbb
adc
adcl
xchg
add
add
jl
popl
je
sbb
sbb
imul
int3
mov
iret
cmp
testb
mov
mov
jo
out
push
pop
iret
mov
xchg
cld
jecxz
adc
xchg
mov
sbb
les
into
mov
push
cltd
push
movsb
xchg
pop
adc
aam
push
lods
js
xchg
sbb
fldt
in
xlat
addr16
lea
pop
pushfw
sub
int3
pop
xchg
sbb
mov
adc
or
stos
dec
jge
test
xchg
xchg
cmpsb
mov
rclb
adc
cmp
xchg
sbb
mov
ja
cltd
push
leave
adc
xchg
push
icebp
test
nop
sbb
add
jl
repnz
ds
cmp
lcall
cld
movsl
pop
shlb
pop
xchg
stos
ret
pop
push
fldt
rol
cmp
sub
test
int3
iret
ja
add
and
adc
nop
lock
cmp
cli
sbb
inc
xchg
in
loop
iret
imul
mov
xchg
mov
popl
mov
nop
and
rcrb
sar
adc
cld
sub
sub
or
lock
jp
sbb
lret
test
xchg
adc
adc
sbb
cmp
adc
xor
ret
andl
sub
les
pop
jle
cwtl
push
stos
daa
in
incb
adc
movsl
imul
lods
xor
pop
sbb
mov
cmp
xlat
xchg
mov
imul
cmp
pushf
sbb
sbb
addb
ja
adc
xchg
test
enter
xchg
inc
inc
push
mov
lcall
ja
mov
dec
add
xchg
mov
dec
addr16
fwait
mov
out
push
xchg
aam
sbb
adc
repnz
insb
rclb
mov
fstsw
leave
xchg
push
fdiv
lcall
adc
jmp
test
imul
xchg
xor
bound
xor
cli
mov
scas
out
mov
jle
test
adc
std
pushf
mov
cmp
lret
lcall
jnp
or
scas
arpl
negb
mov
mov
xor
sahf
test
sbb
mov
loopne
xor
xchg
aam
addb
loopne
mov
cmp
test
cwtl
aam
dec
add
xchg
and
xchg
imul
push
xchg
adc
cmc
adc
cwtl
test
xchg
insb
push
pop
xchg
rorl
inc
int3
sbb
mov
push
test
xchg
sti
shl
sbb
sbb
jae
pop
popa
xchg
add
fwait
cli
scas
mov
xlat
mov
hlt
pushf
dec
sbb
movsl
jg
push
je
in
aaa
xchg
addr16
test
stos
xchg
xchg
hlt
push
mov
mov
into
nop
or
pop
mov
xchg
sub
sbb
fcoms
add
mov
fsubrs
inc
andl
pop
je
nop
lret
add
loope
into
xchg
mov
mov
mov
fwait
xchg
mov
insl
xchg
sub
add
pushf
xchg
fdivrs
pop
xchg
mov
lahf
in
push
xchg
dec
or
clc
dec
cmp
pop
xchg
aam
jo
mov
xor
pop
xchg
addl
pusha
addr16
fildl
pop
xchg
hlt
sti
push
xchg
xchg
sub
sbb
xchg
ficompl
int
fwait
jge
xchg
enter
hlt
mulb
into
adc
jnp
add
dec
pusha
repnz
inc
sbb
sti
mov
int3
xchg
adc
mov
adc
xchg
add
ss
cwtl
mov
mov
mov
xchg
pop
and
das
xchg
pop
pop
in
cltd
fstpl
fndisi(8087
sahf
gs
push
mov
dec
lcall
push
mov
aam
add
rcrb
clc
sbb
and
pop
mov
scas
lock
sti
jnp
mov
test
js
jg
jle
xchg
jge
jl
arpl
lock
pusha
out
jmp
in
ljmp
out
outsl
out
movsb
outsb
adc
insl
in
insb
rcll
mov
rcrl
push
rclb
mov
repz
pop
jb
jno
push
jo
or
lock
push
push
mov
push
xchg
gs
mov
sbb
in
xchg
mov
test
pop
pop
scas
add
repz
push
fwait
aam
sbb
sbb
mov
sub
test
out
xlat
mov
xchg
inc
dec
cmc
xchg
mov
xchg
push
mov
mov
stos
jle
xchg
fucomi
sbb
dec
sub
das
inc
add
xchg
fisttps
jecxz
mov
insb
jbe
xchg
jo
xor
cmp
cmpsl
jb
push
sbb
pop
mov
fisttpll
mov
in
push
sub
jns
xchg
jg
aam
nop
and
dec
or
out
jae
lods
test
repz
aam
xor
pop
cmpsb
les
loopne
aam
add
xor
xorl
das
sbb
xchg
jg
fldt
aad
and
call
xchg
xchg
int3
sub
xchg
push
lods
les
aad
in
xchg
xchg
xor
mov
adc
sub
xchg
enter
push
ret
xchg
call
sbbl
mov
in
cmp
movsb
xchg
pop
or
push
lcall
jb
call
sbb
mov
and
fwait
or
adc
xchg
and
dec
xchg
fs
nop
aad
xchg
pushf
lcall
lods
sarb
in
test
jae
mov
xor
cwtl
push
sbb
mov
pop
cmp
push
jg
push
lods
rorb
loope
xchg
je
hlt
fcomps
movsb
dec
mov
jne
out
or
or
fstl
fdivl
dec
mov
call
into
aad
xchg
and
mov
inc
fwait
mov
adc
mov
xchg
xchg
push
xchg
insb
xchg
test
pop
mov
in
outsb
sub
xor
gs
mov
sbb
sbb
out
mov
testl
sbb
loopne
adc
add
arpl
xchg
loop
aam
out
xchg
push
daa
pop
lea
lcall
xor
xchg
or
adc
add
stc
stos
xchg
jns
lds
cmpsb
or
out
fdivl
xchg
sbb
sbb
mov
cmovne
aad
fsubl
cs
cmpsb
sbbb
xchg
adc
pop
dec
bound
cmp
xor
jg
cs
ds
sub
mov
call
nop
push
xor
pop
mov
out
push
mov
jbe
mov
xchg
xor
test
ja
in
xchg
push
sahf
mov
cmp
push
sbb
or
mov
mov
add
jo
xchg
sbbb
or
popf
xor
jnp
cmpsl
adc
rclb
xchg
fldenv
xchg
mov
add
aam
pop
push
or
xor
and
pop
xor
loop
push
adc
or
xchg
xchg
xchg
sbb
xchg
sub
jne
xchg
jmp
cmp
xchg
ficompl
rclb
aam
xchg
xchg
sbb
jo
pop
adc
js
jne
mov
cli
data16
shlb
les
push
pop
push
sbb
cmp
aaa
jne
push
lock
inc
mov
jno
mov
call
mov
xchg
or
cmp
or
push
les
or
movsb
adc
sbb
nopl
cli
in
scas
xchg
iret
mov
loop
xchg
pop
dec
shlb
sub
and
aaa
stos
das
jge
jnp
js
sbb
and
jmp
mov
mov
pop
sub
orl
xchg
pop
push
orb
and
jmp
icebp
push
adc
push
sbb
jb
xchg
push
cmpb
pop
or
adc
cmp
cmp
mov
mov
adc
andl
jb
stc
sahf
pop
fwait
and
jnp
pop
push
not
sti
jle
inc
test
or
push
cmp
sbb
or
out
sbb
in
mov
pop
lret
mov
in
xchg
add
add
add
xor
sahf
add
xchg
xchg
cmp
popf
cltd
xchg
ja
out
push
or
imul
out
jo
pop
repnz
push
push
imulb
int3
fs
dec
xchg
jge
mov
mov
add
scas
sub
cmp
repz
jge
push
xor
xor
xchg
cwtl
nop
sbb
fbstp
ljmp
xchg
xchg
jae
fmull
out
lods
jecxz
inc
add
movsb
sub
adc
js
fwait
xchg
es
cwtl
inc
das
mov
xchg
stos
clc
pushf
cmp
ret
mov
fcompl
xchg
clc
test
hlt
mov
sbb
xor
repz
in
adc
xchg
fadds
stos
mov
jnp
pop
ficoml
std
popf
mov
fsubr
pushf
hlt
cld
add
mov
push
cmp
xchg
cmpsl
push
out
pop
mov
lods
sbbl
adcl
xrelease
int
sub
enter
xchg
adc
sbbl
test
sub
fstl
andl
xchg
movsb
mov
xchg
mov
push
inc
xchg
sub
and
pop
into
jp
and
pop
shrb
push
xor
in
sub
mov
pop
nop
sub
dec
and
xchg
mov
mov
loop
bound
and
xchg
mov
mov
out
xchg
add
les
xchg
add
push
mov
test
sahf
mov
push
jbe
mov
fstpl
sbb
cmc
lods
in
test
mov
mov
fcoml
js
sbb
loop
insl
ret
test
xchg
bound
xor
mov
pop
ss
das
xchg
aad
mov
xchg
push
xchg
sbb
jnp
outsl
mov
sub
fistps
ja
sbb
fwait
or
add
jg
orb
pop
xchg
pop
adc
es
outsl
mov
cwtl
push
sbb
popa
js
add
inc
sub
add
clc
les
lock
notl
add
popf
push
sbb
fdivrs
dec
lret
lock
sbb
in
lret
out
rol
xchg
jl
jecxz
mov
iret
ja
push
popf
adc
pop
mov
sub
addb
fwait
lods
jge
stos
dec
dec
hlt
outsb
repz
popa
ret
imul
push
jns
or
mov
xchg
popf
mov
test
sub
sbb
sub
ret
sti
mov
adc
sub
nop
pushf
rclb
dec
pop
jnp
cmp
jg
imul
sbb
sti
test
cmc
push
mov
push
std
cmp
jne
or
bt
decl
sahf
jl
pop
lahf
sbb
xchg
xchg
mov
add
dec
xor
cmc
adcb
xchg
and
inc
jae
mov
lahf
mov
or
push
cmpsl
imul
in
jbe
push
aam
je
test
inc
js
aam
cmp
out
lcall
shlb
movsb
mov
or
stc
mov
aam
pop
or
fwait
dec
sbb
adcb
jecxz
inc
in
xor
arpl
push
xchg
dec
or
sub
ljmp
clc
out
mov
sahf
xchg
jl
mov
pop
push
aas
lret
idivb
xchg
cli
scas
or
add
lock
lods
adc
nop
sahf
xchg
fildll
adc
sbb
arpl
andl
or
push
adc
fwait
pop
dec
add
ja
out
or
stos
loope
mov
xchg
ret
mov
cli
popa
push
arpl
sub
or
mov
dec
aaa
mov
lea
pop
jg
pop
mov
js
xchg
push
push
sub
dec
push
xchg
add
mov
sub
push
lahf
cmp
sub
push
movsb
lcall
mov
mov
and
xor
loop
add
test
hlt
add
fcomip
fdivrs
and
les
int3
add
sbbl
movsb
add
popf
insl
mov
cwtl
mov
jbe
add
dec
sahf
movsb
adc
call
fsubs
ds
add
je
xchg
mov
pop
lahf
cmp
cmp
arpl
das
lcall
pop
xor
repz
pop
test
sbb
addr16
lock
aas
dec
add
sbb
and
gs
stos
and
xchg
cltd
daa
dec
inc
das
mov
xchg
cmp
xchg
and
out
stos
mov
test
add
inc
les
lcall
push
sbb
call
cwtl
in
cld
jnp
hlt
loop
xchg
or
xchg
das
xchg
and
negl
cmp
sub
jbe
sbbb
loop
mov
xlat
push
lcall
or
test
mov
popf
adc
movsl
and
cwtl
mov
ret
jae
add
nop
or
in
leave
push
xlat
xchg
sbb
and
das
xchg
jno
pop
cmpsl
mov
inc
ja
sbb
sbbb
xchg
stos
sub
xchg
in
add
push
ja
insb
shlb
xchg
pop
sbb
roll
in
xchg
xor
xchg
enter
xchg
dec
xchg
fmull
add
repnz
inc
fwait
mov
testb
push
test
into
sahf
push
hlt
dec
jo
cmc
aam
xchg
cmp
sbb
dec
lods
push
sbb
jp
ficomps
xchg
or
cwtl
insb
mov
cmp
jmp
sahf
sub
xchg
fwait
out
test
lods
add
mov
aam
xor
dec
push
out
mov
add
cmpsb
lahf
mov
lret
lods
inc
xchg
inc
ljmp
xchg
xorl
jbe
jl
int3
sti
popa
iret
sbb
test
sbb
ret
pop
jmp
ds
orb
or
push
mov
mov
mov
xchg
adc
pop
mov
int
mov
jge
into
icebp
adc
mov
xchg
loopne
in
out
push
in
xchg
mov
cwtl
inc
jne
dec
push
notb
aam
and
xchg
jae
fcompl
test
mov
lcall
or
dec
popa
xchg
pop
xchg
test
sub
insb
xchg
add
into
bnd
inc
cwtl
loopne
arpl
xchg
lods
lahf
push
mov
sub
sbb
ret
in
mov
lds
fcompl
mov
mov
mov
cmp
mov
test
lret
xchg
or
repnz
movsb
sbb
sti
sahf
dec
push
sub
popf
xor
pop
and
ljmp
mov
inc
xor
lret
jecxz
or
nop
jae
aam
sbb
dec
cld
push
xor
stos
sub
mov
jle
adc
clc
fistpl
sar
fimull
sti
loop
test
add
clc
xchg
dec
adc
rorb
cmp
pop
mov
addps
es
test
loop
push
popf
xchg
loopne
and
cmp
out
mov
mov
cmpsb
xchg
sbb
sub
lcall
xchg
out
sbb
xchg
rorb
or
roll
cli
int3
push
adc
sete
mov
adc
add
jl
rorl
xchg
jle
iret
inc
and
and
loopne
cltd
xchg
hlt
pop
jg
mov
cmp
push
jo
gs
xor
fisubs
cmp
xchg
push
cmpsl
in
fcmovnb
sub
xchg
pop
cmc
mov
inc
jb
shlb
pushf
mov
out
dec
pushl
aas
pop
pop
das
jge
dec
xchg
out
ljmp
xchg
and
mov
sbb
xchg
inc
in
mov
cmp
jle
out
xchg
cmp
outsl
bound
mov
xchg
orb
xchg
test
xor
lods
hlt
xchg
sbb
mov
xchg
inc
and
xlat
push
add
mov
repnz
imul
hlt
adc
imul
xchg
xchg
fdivrs
add
sbb
sbb
and
repnz
inc
or
lret
push
sbb
aas
mov
lahf
adc
sbb
xchg
inc
test
xorb
sbb
popa
ret
sub
jne
mov
or
and
sbbb
loop
xchg
mov
stos
xchg
in
into
jns
pop
sbb
pop
fadds
test
and
xlat
xchg
cmp
test
or
xor
mov
add
lahf
sub
dec
xchg
cli
sub
cmp
push
test
xor
mov
mov
jne
jp
in
cltd
xorl
dec
nop
testb
les
jnp
lods
enter
scas
repz
ficomps
fidivs
mov
pushf
and
and
fimuls
sub
je
nop
popf
push
adcl
rorb
rcll
mov
rcll
sbbb
adc
pop
xchg
sbb
lahf
jmp
and
and
shl
lret
sbb
cmp
jge
pop
mov
inc
mov
or
pop
sbb
inc
out
rclb
mov
adc
aam
jecxz
fidivs
mov
and
sbb
scas
xchg
stos
test
or
xor
xor
data16
test
jecxz
xchg
sbb
xchg
mov
subb
sahf
loopne
xchg
add
rcrb
dec
push
xchg
dec
es
mov
lods
pusha
shrb
jae
fdivl
xor
xchg
sub
mov
cmp
popf
xchg
xor
lret
cmc
push
sbb
push
mov
xor
xchg
lock
fldt
mov
hlt
add
inc
xor
out
fstpl
cmp
pushf
loope
aad
mov
pop
pushf
cmc
addb
aad
mov
mov
dec
test
xlat
jge
mov
dec
movsb
cmp
leave
jbe
dec
push
cmp
stos
push
loope
subb
repnz
xor
daa
test
arpl
xchg
stos
enter
lods
jmp
mov
and
mov
jl
inc
sbb
sub
push
push
cwtl
notb
test
repz
mov
cltd
or
pop
cli
xchg
sbb
push
sbb
lahf
aam
and
cmp
inc
ljmp
fistps
pop
stos
loope
jmp
mov
mov
cld
push
sahf
lods
test
lock
mov
jns
into
hlt
sbb
ficoms
leave
mov
jae
into
sbb
jl
sbb
or
pop
sahf
sbb
fcompl
fs
jge
mov
rorl
and
mov
retw
rol
loopne
lock
pop
mov
pop
rclb
mov
je
ret
fstpl
xor
aam
cwtl
cld
mov
xchg
test
fs
stos
inc
mov
imul
cwtl
xor
in
iret
sub
std
jecxz
and
clc
aaa
adc
jae
xor
rclb
inc
lods
xchg
gs
sub
jge
stos
hlt
xchg
dec
lea
pop
xchg
cltd
jecxz
pop
push
jle
jne
sbb
hlt
pop
push
imul
lods
addr16
push
test
repnz
pop
and
push
scas
sub
xchg
mov
daa
lods
sti
lret
cwtl
cmp
adc
xchg
idiv
cmpsl
mov
sub
cmp
sbb
xchg
cwtl
cmpb
not
stc
and
int
xchg
mov
mov
das
or
mov
aam
jbe
sbb
adc
insb
sbb
lods
ljmp
sbb
and
ficoms
sub
stos
lret
mov
push
xchg
jnp
xchg
mov
hlt
sbb
les
adc
mov
popf
test
mov
push
insb
xchg
add
lock
aam
xor
mov
sbbl
pushf
sub
outsb
lea
popf
mov
movsl
cwtl
adc
movsb
ret
scas
adc
pop
lahf
repz
test
into
push
movsl
or
leave
jno
xchg
repnz
push
test
xchg
xchg
rol
cmp
push
xchg
outsb
ljmp
fmull
xchg
cmpsl
xchg
add
dec
or
xchg
mov
pop
movsl
test
insb
addb
je
out
push
jp
cmp
div
sbb
xchg
icebp
arpl
jno
sahf
add
jnp
jns
fcoms
mov
stos
sahf
fwait
push
movsb
add
push
mov
loop
mov
test
imulb
addr16
pop
jno
cmp
xchg
jp
ljmp
sub
dec
fmuls
in
adc
lock
sahf
or
sub
dec
std
test
rcll
sbb
in
push
add
and
mov
es
jge
mov
mov
ja
push
cmp
xchg
shl
push
sub
idiv
lret
fcomps
sbb
push
movsb
test
dec
sahf
or
jmp
call
outsb
xchg
mov
inc
stos
lret
sbb
mov
fcompl
scas
jnp
xchg
cwtl
pop
lret
movb
xchg
sbb
or
lret
cwtl
lcall
jne
xchg
cld
pusha
aam
or
or
fadds
mov
stc
cli
dec
sbb
repnz
sub
repz
xchg
add
dec
xchg
jb
imul
and
fcmovbe
loopne
add
mov
mov
shrl
pop
fisttpl
jns
xchg
sbb
lods
hlt
pop
push
pop
das
push
xchg
int3
mov
adcl
inc
dec
pop
push
mov
pop
xlat
xchg
jno
sbb
nop
or
adc
test
and
mov
call
xchg
shrl
or
cltd
mov
dec
faddp
mov
out
dec
sti
sbb
mov
or
mov
lahf
test
stos
cmp
pop
jecxz
cmp
sub
pop
rcrb
sbb
sahf
sub
cmp
xor
add
aam
cltd
push
test
adc
bound
push
lret
add
sbb
mov
dec
xchg
aas
add
cmp
in
cwtl
inc
movsl
add
arpl
xchg
insl
mov
sub
and
in
cwtl
cmpsl
inc
add
sbb
daa
ja
jae
lods
in
les
fwait
pop
icebp
xchg
rol
xor
ret
sbb
xchg
stos
mov
add
xchg
push
or
sub
mov
lret
xchg
pop
mov
pushf
aam
movaps
inc
cmc
daa
sbbb
pusha
mov
dec
inc
stos
or
sbb
enter
movsb
lock
pop
mov
sarl
fidivrl
je
or
lret
sahf
test
push
stos
or
test
aam
jmp
fwait
adc
adc
mov
lahf
or
test
xchg
mov
addb
add
pop
fdiv
inc
push
mov
push
jo
mov
sete
mov
not
cmc
pushf
fsub
or
or
sbb
mov
es
jmp
xchg
add
xchg
lods
fldt
clc
xchg
nop
ds
inc
andl
mov
imul
jne
fsubrs
xchg
sbb
loope
repnz
or
lea
shll
push
loopne
lods
inc
or
adc
mov
aas
adc
sub
mov
lds
bnd
adc
push
cmpb
aam
cs
neg
sbb
pop
push
push
jnp
xchg
test
adc
mov
mov
xchg
je
push
xchg
cmp
add
pop
sub
sahf
push
arpl
out
movsb
cld
andb
sbb
int
je
cmpsb
cmp
jge
adc
clc
pushf
lods
xor
xchg
lock
or
add
xor
sahf
push
xchg
dec
andb
popl
xchg
sti
imul
pop
int3
inc
add
dec
nop
lret
test
push
movsb
clc
sub
mov
sbb
inc
add
sbb
xchg
pop
sbb
sub
pop
xchg
lods
pop
push
out
jbe
sbb
dec
test
mov
fidivrs
inc
sbb
aam
add
testb
sbb
test
jecxz
adc
ret
xchg
fcomps
divb
cmp
push
divb
sub
mov
xchg
cltd
xchg
out
rclb
cmc
test
cwtl
push
stos
mov
xchg
jo
push
bnd
lret
cmc
inc
xchg
aas
sub
addr16
add
fcomp
sbb
imul
movsb
xor
dec
arpl
mov
ss
xchg
push
sbb
sbb
xchg
sub
or
and
xchg
lock
inc
xlat
mov
or
jne
cmp
mov
fs
sub
bound
sbb
lret
mov
mov
jae
xchg
mov
jne
adc
pop
jg
pop
mov
mov
movsb
jbe
lcall
inc
push
inc
xchg
fwait
cmpsl
ljmp
add
adc
inc
fwait
inc
fwait
adc
or
jnp
and
stos
jb
aad
mov
insl
fistl
push
inc
adcb
push
notl
cmc
iret
pushf
push
pop
mov
not
insl
test
inc
cmpsb
jnp
xchg
jge
cmp
jo
add
insl
int
push
sbb
xchg
jle
xchg
dec
push
test
jg
clc
js
mov
mov
cmp
add
test
xor
cltd
cwtl
into
xchg
aad
lret
xor
or
push
cmp
mov
add
and
call
mov
add
test
out
adcb
addr16
adc
imul
repnz
mov
or
mov
hlt
sbb
sbb
das
adc
sahf
pushf
lods
nop
xchg
scas
push
in
cmpsl
sbb
inc
adc
jno
ja
xchg
and
in
cmpsl
loopne
orb
pop
lock
fnstenv
xor
dec
xchg
mov
hlt
cwtl
mov
push
mov
xchg
jg
pop
pop
mov
and
lods
jbe
enter
xchg
push
addr16
lods
mov
push
jl
xor
lret
pop
into
add
lds
add
mov
mov
out
cld
sbb
pop
loope
insl
adc
sbbb
pusha
loop
cmp
and
scas
in
sbb
xchg
sub
adc
xchg
xchg
sbb
cmpsl
jns
jbe
aam
cld
jne
and
mov
xchg
scas
mov
or
arpl
push
mov
mov
hlt
pop
xchg
jp
pop
sub
sahf
lret
sbb
pushf
sub
xchg
insl
pop
subb
scas
popa
xchg
or
xchg
in
sbb
mov
cld
dec
and
add
scas
in
jns
clc
sub
imul
loopne
cltd
xchg
push
pop
mov
mov
subb
sbb
mov
cmp
xorb
mov
movsb
sub
icebp
into
sbb
cmp
push
insb
lahf
das
adc
cmpl
out
sbb
jnp
jae
movsb
fcompl
xchg
iret
mov
cld
lret
mov
repz
cmp
fcmovu
clc
in
mov
inc
xchg
test
mov
xchg
mov
js
pushf
test
repnz
loopne
xchg
push
aam
lods
xor
in
adc
adc
popw
mov
fadd
hlt
aas
pop
repnz
push
mov
adc
push
pop
aam
fwait
test
xchg
mov
dec
repnz
adc
in
orl
into
repz
dec
mov
mov
mov
test
lret
sarl
jl
sub
sbb
xchg
add
repnz
dec
clc
popf
lock
sub
das
mov
pop
xchg
pop
or
sbbb
pushf
and
xchg
aam
xchg
ljmp
mov
hlt
mov
mov
stos
bnd
inc
and
add
xchg
stc
cli
mov
xchg
pop
adc
pop
xchg
cld
jb
xchg
loop
and
sbb
hlt
xchg
int
jecxz
out
loope
adc
rcll
xchg
mov
push
and
aad
mov
push
sub
insb
lea
in
pop
rcll
mov
mov
dec
adc
inc
xchg
xchg
out
jmp
pop
or
xchg
xchg
rcl
ficoms
faddl
xchg
test
pop
jl
test
les
cli
lret
mov
sbb
mov
push
push
jecxz
xchg
sbb
gs
test
stos
sahf
pop
ja
pop
clc
js
xchg
dec
insl
fdivrp
shll
int3
aas
inc
sub
fists
cmc
adc
sarb
mov
push
sbb
jmp
mov
lret
bound
xchg
cmp
scas
movsb
jo
test
mov
aam
mov
sub
aam
mov
xchg
mov
fld
cmpsb
mov
xchg
sti
call
dec
test
xor
xchg
lea
scas
aam
xchg
sahf
hlt
lods
dec
hlt
push
mov
fstps
mov
mov
sbb
popf
or
and
cmpsl
ret
das
dec
cwtl
movsb
dec
lea
outsl
mov
adcb
xchg
or
xchg
mov
fwait
mov
pushf
mov
lock
enter
hlt
xchg
cli
jne
addl
aaa
test
movsl
mov
pop
mov
dec
pop
gs
mov
cmp
aas
xchg
xchg
mov
fwait
mov
xor
or
fsub
pop
in
cwtl
xchg
xor
push
scas
xchg
out
cmp
xchg
repz
mov
push
loopne
sbb
cld
xchg
jecxz
sub
xchg
movb
loopne
mov
mov
addb
out
rcrl
js
jne
ljmp
popf
arpl
xchg
jl
movsl
mov
xchg
cmpsb
out
es
out
pushf
adc
imul
lds
xchg
fwait
lret
std
dec
mov
mov
aad
cmp
mov
add
xchg
mov
dec
imul
rclb
add
sbb
pushf
rclb
in
adc
mov
xor
mov
xchg
xor
xchg
imul
mov
pushf
push
add
push
xchg
sbb
sbb
jns
and
fwait
xchg
sbb
sahf
iret
jp
pshufw
push
cmp
sbb
push
adc
mov
xchg
sbbb
test
xchg
push
jl
iret
sbb
or
sub
jns
mov
mov
sbb
in
jb
and
add
sti
das
pop
mov
mov
and
sbb
mov
jg
or
movsb
arpl
mov
ja
test
ficoml
sbb
fdivl
xchg
jl
pop
in
xor
sub
lods
xchg
aaa
or
add
stc
xchg
jecxz
xchg
sbb
xchg
sbb
mov
or
repnz
mov
cmp
sarb
cmc
xchg
pop
ja
adc
push
xchg
xchg
int
inc
jl
dec
pushf
jge
xor
gs
adc
fwait
mov
mov
cmp
xchg
xchg
mov
pop
insb
and
mov
xchg
popf
xorl
dec
xor
mov
push
hlt
adc
xchg
jg
cmp
cmc
dec
push
and
cwtl
xchg
pop
subb
fidivl
sub
sub
push
imul
addl
movsb
fstpl
sbb
imul
addl
xchg
fiaddl
dec
cmpsb
mov
jne
imul
xor
sbb
lcall
ds
pop
lahf
xchg
mov
insl
je
jl
nop
sbb
sub
jecxz
adcb
jp
rcll
test
lahf
cld
sahf
leave
mov
or
cld
xchg
jl
test
clc
adc
hlt
fists
mov
xchg
pushf
add
push
push
jl
aam
cmpsl
xchg
xlat
stos
imul
cmp
xor
sbb
test
clc
leave
hlt
mov
pop
xchg
ret
lock
test
pop
lcall
cmp
pop
lcall
loope
mul
addr16
in
sbb
sbb
push
gs
xchg
stos
jge
fsubr
add
adc
icebp
sbb
out
aam
loope
mov
mov
lcall
and
sub
sahf
fdivl
out
int3
push
jo
negl
mov
enter
xchg
test
jl
mov
push
inc
xchg
xor
pop
in
sbb
in
setg
popf
inc
aas
adc
sbb
lods
dec
int
pop
out
sbb
push
test
dec
xchg
bound
cmpsb
lods
sbb
out
sbb
add
adc
pop
shrb
cld
sub
adc
repz
mov
repz
xor
test
insb
ret
cwtl
lcall
orl
das
and
cltd
mov
cli
sbb
test
sbbb
add
into
mov
xor
xchg
add
push
mov
leave
and
pop
cld
in
cwtl
xchg
insb
xor
andb
sti
mov
add
stos
rclb
push
ret
popa
lea
mov
pop
xchg
lods
aas
int3
push
jle
xor
sbbb
rcll
hlt
out
or
jecxz
xchg
rcrl
rolb
addb
out
mov
xchg
xchg
bswap
les
mov
fwait
xorb
mov
iret
pushf
into
adc
aam
js
adc
dec
fcomps
scas
adcl
jb
pop
lahf
cli
dec
cmp
cmp
push
enter
lea
shrb
ja
repz
adcl
sbb
mov
pusha
sbb
sbb
in
mov
xchg
push
ja
xchg
mov
pushf
pop
and
push
nop
dec
adc
jmp
pop
sbb
sbb
pushf
sbbb
push
mov
fstpt
add
xchg
rol
loop
sahf
leave
mov
xchg
inc
or
cli
jl
jg
out
scas
xchg
adc
sahf
jne
ficoms
test
push
xchg
sbb
mov
pushf
mov
jae
or
cmp
sahf
xchg
icebp
in
aad
fsts
fcmovnu
inc
xchg
aam
mov
lea
dec
je
xchg
sbb
test
enter
cld
xchg
pop
push
mov
repz
bound
adc
cld
test
inc
cmp
sahf
ds
inc
int3
xchg
adc
test
push
mov
aam
mov
push
movsb
and
pop
or
andb
xchg
in
iret
cmpsb
lcall
jl
sbb
fstps
aam
xchg
popa
xchg
out
clc
sbb
sbb
scas
jp
cltd
xchg
dec
xchg
or
enter
mov
mov
sub
xor
std
movsb
mov
and
sti
es
mov
mov
lods
mov
test
inc
sbb
gs
popf
int3
xchg
pop
xchg
mov
sub
mov
fwait
mov
adc
jmp
iret
pusha
repnz
loope
xor
push
mov
mov
call
xchg
mov
aam
push
xor
dec
out
sti
xchg
pop
mov
daa
pop
and
je
addl
ret
adcl
xchg
mov
cld
mov
cmc
mov
xchg
sbb
add
pop
or
jae
in
iret
sti
dec
aam
mov
jl
xor
test
fstl
sbb
xor
test
hlt
rclb
mov
sbb
out
mov
rolb
and
cmpsb
hlt
sbb
adc
sbb
mov
jp
xor
popf
cltd
xchg
inc
cmpb
add
ret
push
adcb
fidivl
sbb
bound
orb
or
jmp
mov
sbb
sti
mov
in
sub
jp
leave
cwtl
add
test
push
or
cmpsb
push
nop
ja
stos
aam
sub
xchg
pushf
mov
clc
data16
sti
cmp
test
and
inc
loop
jnp
sbb
mov
inc
mov
and
pushf
subb
push
shlb
push
xchg
adc
pop
mov
imul
hlt
cld
int
mov
adc
push
testl
dec
xchg
lods
add
or
jne
aam
sbb
test
xchg
xchg
push
ljmp
adc
inc
mov
lcall
add
aad
lret
mov
or
dec
mov
pop
mov
cld
cmpsb
fs
sbb
add
popf
inc
xchg
aad
data16
add
ret
mov
lret
aam
out
pop
xchg
outsb
pop
pop
adc
scas
jmp
hlt
addl
in
xchg
mov
out
arpl
dec
loopne
sbb
subl
xchg
cmp
scas
cs
or
arpl
flds
xchg
repnz
jl
orb
adc
sbb
cmpsl
in
leave
mov
xchg
fwait
inc
mov
xchg
pop
add
xchg
inc
adc
aam
push
lods
mov
sahf
lock
pushl
jnp
mov
xchg
addb
mov
in
jo
adc
cwtl
clc
inc
lds
push
pop
aam
mov
insb
adcb
ror
pop
lret
jg
add
stos
test
iret
pusha
ljmp
sub
inc
xchg
jns
mov
pop
push
push
mov
cmp
sbb
jle
jecxz
xchg
push
mov
xor
jp
fmuls
or
aam
mov
xor
out
test
clc
iret
xchg
fdivrl
in
push
pop
xchg
aad
xchg
cmp
arpl
push
or
adc
mov
rcrl
hlt
xlat
inc
push
popa
ja
sbb
add
fcomps
xchg
cmp
push
inc
pop
shlb
xchg
out
aam
push
ret
je
push
repnz
sub
fwait
sbbl
mov
ret
andl
inc
push
xchg
pop
mov
les
mov
test
mov
loop
sbb
aas
xchg
xchg
xchg
mov
xor
sbb
cli
mov
push
out
cmc
out
pop
pop
das
lcall
dec
sbb
notb
fdivl
insb
pop
pop
pop
adc
popf
call
dec
out
cmp
ret
ja
xchg
or
orl
add
inc
xchg
repnz
rorl
jae
add
clc
mov
cmp
sbb
leave
gs
enter
adc
ret
int3
mov
addb
cmpb
dec
jle
xchg
pushf
xchg
inc
xchg
repnz
fcoms
mov
xchg
cmp
daa
jge
jg
out
or
and
sbb
pop
dec
cmc
pop
dec
mov
mov
dec
pop
cmp
xor
mov
lea
orb
repnz
ret
ljmp
loope
inc
arpl
dec
sbb
cld
jnp
inc
inc
xlat
mov
push
mov
jge
dec
xchg
outsl
adc
or
ficoml
and
fdivr
add
or
adc
push
jge
mov
xchg
dec
lods
adc
lret
adc
and
sbb
cmpsl
mov
mov
lds
fisubl
pop
lock
fcomps
push
dec
aam
sbb
hlt
in
xchg
sbbl
push
inc
into
adc
pop
out
aam
imul
xchg
sbb
sub
int3
pop
iret
xchg
ds
fisubl
out
cmpsl
xchg
or
jg
fwait
dec
dec
fwait
orl
lret
and
in
cmp
mov
rorl
xor
ss
inc
push
xchg
dec
mov
enter
stos
sbb
fldt
fcmovbe
in
xchg
pop
xlat
sar
or
mov
mov
hlt
mov
xchg
loopne
popf
or
jecxz
fs
or
push
loop
icebp
fwait
cltd
cmpsl
and
push
push
add
pop
xlat
push
ljmp
nop
sbb
lcall
push
adc
popa
scas
add
and
fimull
push
pop
sbb
aam
inc
xor
fistl
pop
jns
sbb
mov
into
sbb
loopne
sbb
shlb
jb
stc
lea
push
int3
cmp
mov
sbb
pushf
mov
jo
fists
in
add
hlt
dec
ja
pusha
mov
xchg
or
inc
inc
xchg
sub
jecxz
out
adc
push
out
leave
hlt
xchg
or
xorl
cli
adcb
pop
cmp
push
cmp
mov
mov
test
add
outsl
sbb
cli
fwait
int3
mov
popf
or
in
lods
js
cmp
fisubs
xor
and
pop
mov
stos
xchg
repz
test
xchg
ret
push
inc
cmp
ds
or
adc
out
mov
jbe
add
push
ja
sarl
and
add
pop
or
test
ja
inc
aam
int3
pop
xchg
cmp
or
xchg
add
xchg
insl
add
dec
xor
inc
cmpsb
xchg
push
inc
arpl
mov
hlt
pop
sub
out
std
fistps
das
sbb
aas
test
ficoms
xchg
test
repz
fwait
mov
ljmp
pushf
xchg
aaa
stc
xchg
les
xor
fiaddl
es
stos
enter
cmp
mov
sbb
nop
jns
lcall
mov
addr16
xchg
xchg
adc
jecxz
imul
mov
xchg
in
ds
in
rcrb
adc
inc
popa
or
cmp
mov
mov
lcall
inc
fcmovb
stos
sbb
jmp
or
insl
xchg
movsb
push
jno
mov
rcrb
sahf
xchg
out
outsb
repnz
lret
movsb
repnz
je
jl
inc
xor
pusha
stos
cli
mov
xchg
call
dec
shr
fwait
in
fbld
xor
pop
cld
sbb
adc
pop
add
neg
pushf
in
pop
idivb
sbb
popf
xchg
imul
lcall
xchg
mov
divl
xchg
push
cmc
sbb
push
push
sahf
andl
ja
mov
jecxz
and
pop
jno
mov
add
sbb
lfs
das
or
test
lods
pop
cltd
and
ja
aam
ficompl
xchg
mov
ds
xchg
les
inc
inc
cld
popf
inc
inc
push
aam
rclb
mov
dec
icebp
xchg
adc
mov
xchg
cmp
xchg
sub
hlt
jg
sbb
sahf
rorb
neg
sbb
pop
arpl
rcrl
adc
pop
scas
mov
cmp
adcl
jae
xchg
or
lret
push
dec
mov
cmc
pop
in
adc
stc
das
jne
push
loopne
pushf
xor
xchg
sub
mov
test
aam
and
cmp
out
xchg
push
das
enter
and
aam
jmp
lcall
mov
ret
jnp
lahf
sub
adcb
ret
cmp
div
mov
and
test
roll
ljmp
xchg
add
or
imul
sbb
ja
xchg
movsb
adc
mov
xchg
jno
out
xor
push
pop
jbe
mov
call
push
or
scas
pop
mov
xchg
movsb
xchg
xchg
or
imul
push
fistl
jbe
adc
inc
movsl
test
and
push
iret
cmp
fwait
idivb
lahf
cld
xchg
adc
loop
shl
fldenv
adc
movsl
pop
xchg
sahf
sbb
inc
add
add
and
cmp
mov
xchg
lock
and
fwait
lods
inc
bound
out
insl
icebp
xchg
cld
in
jb
adc
aam
sahf
mov
xchg
pop
and
out
je
push
cmpb
ljmp
int3
inc
push
arpl
incl
fisttpl
sub
push
and
lods
xchg
in
or
daa
xor
adc
sbb
or
movsb
in
out
loope
xor
pop
jmp
jae
push
mov
sbb
jnp
popa
fistpll
cli
jnp
lods
or
xlat
out
lcall
mov
sbb
lahf
int3
jmp
cltd
je
xchg
inc
jne
push
lahf
xchg
jnp
mov
lret
push
pushf
mov
add
cmp
xchg
mov
adc
stos
adc
fists
mov
sbb
rcrb
rclb
jae
ds
loopne
mov
cmp
imul
xorb
cmp
mov
lods
mov
pop
hlt
cltd
aam
lods
les
xchg
pushf
test
cmp
jo
xor
aam
enter
adc
fsts
cmpsb
dec
pop
xchg
mov
xchg
test
add
dec
popf
xor
lret
jae
fwait
mov
pushf
das
lret
mov
inc
mov
pop
int3
inc
push
push
xchg
fdivrs
dec
xchg
xchg
rcrb
or
or
or
cltd
sbb
hlt
rolb
mov
mov
aam
pop
nop
sbb
js
mov
push
sub
cltd
shl
xchg
cs
pop
add
jae
fwait
and
pop
fadds
aam
in
jns
mov
ret
jnp
pop
rclb
lahf
fcmovbe
je
out
gs
sub
lock
lret
int3
divl
in
nop
xchg
mov
mov
cmpb
adc
gs
dec
or
scas
mov
daa
and
pop
scas
popa
sub
sbb
call
or
push
jg
xchg
jae
jl
mov
cltd
push
push
pop
out
adc
xchg
jg
cmp
sbb
xchg
outsl
sub
adc
mov
popa
mov
xchg
roll
rclb
xor
jbe
pop
pushf
mov
sti
ror
mov
or
cmp
fwait
neg
pop
pushf
mov
add
xchg
fsubr
outsl
scas
push
mov
xchg
rcrb
add
dec
adc
add
xchg
push
cli
dec
add
rclb
loopne
inc
pop
sbb
test
xchg
ret
iret
inc
movsb
pusha
das
adc
scas
shlb
fcomps
lret
aam
push
pop
xorl
rclb
lcall
push
scas
sbb
push
jp
xchg
imul
or
add
xor
and
cltd
imul
test
and
sbb
aam
ja
push
add
jp
aas
xor
mov
pop
push
les
jmp
add
das
cwtl
and
sbb
aad
les
add
dec
fdivrs
in
imul
cwtl
out
les
loop
or
lods
mov
sbb
nop
xchg
fdivrs
inc
xor
loope
arpl
test
xchg
shlb
mov
aam
sub
les
xchg
stos
movsb
dec
cmp
sarb
sbb
in
pop
mov
addr16
es
add
and
push
or
pop
mov
test
adc
jg
inc
sar
sbb
inc
hlt
js
int3
cmp
int3
add
adc
sbbb
movsl
stc
xchg
jmp
mov
ficomps
mov
rolb
jo
sub
jecxz
into
mov
xchg
dec
sub
inc
lds
push
mov
jmp
mov
insb
add
dec
lahf
sbb
xor
arpl
and
dec
xchg
dec
or
sar
divb
push
mov
cmp
cmp
fildl
jb
or
sbb
pushf
xchg
push
fsubl
and
xchg
scas
repz
ret
mov
xchg
mov
cld
push
ja
arpl
xchg
movsl
mov
lea
jg
rclb
imul
ja
sarb
insb
lahf
lock
xorb
nop
fbstp
mov
jb
fldl
test
jge
ja
sbb
push
push
clc
sbb
mov
and
cmpsb
pop
pop
xchg
stc
aam
jg
xor
dec
or
xchg
hlt
fcmovb
xchg
ret
mov
fmull
add
lret
aaa
dec
loopne
cwtl
insb
push
pushf
cmpsl
outsl
stos
push
popf
rcr
xor
popa
sbb
sub
arpl
xchg
pop
mov
clc
sbb
fists
xchg
and
jbe
push
pop
addr16
xchg
ljmp
mov
xor
into
mov
mov
push
sbb
jge
adc
out
xchg
jae
arpl
xor
into
leave
addr16
jecxz
add
or
aam
sbb
mov
xor
jnp
int3
xor
sbb
jp
lcall
mov
mov
test
mov
fwait
xchg
mov
push
addl
in
xchg
cld
testb
mov
rcrb
in
cmp
lcall
xchg
and
and
clc
mov
fdiv
jo
mov
xchg
mov
cmp
gs
xchg
insl
add
mov
sbb
mov
ljmp
cwtl
das
clc
cld
fs
stos
popf
mov
hlt
push
push
jnp
cmp
adcb
jns
ja
in
sbb
xchg
jecxz
mov
mov
mov
iret
test
or
orl
push
sbb
xchg
movsl
out
xchg
xor
int3
movl
push
imul
add
adc
sbb
or
sti
fbld
lret
test
mov
cmc
rclb
aam
push
and
pushf
stc
ljmp
jp
pop
shrb
aas
adc
in
xchg
sub
jge
mov
push
push
jns
push
test
in
shl
mov
push
jg
jnp
insl
lods
jmp
adcb
out
jmp
push
out
mov
imul
in
clc
stos
rcl
hlt
push
imul
rcr
sbb
test
int3
outsb
fs
xchg
jmp
hlt
in
outsl
mov
sti
xor
push
out
add
addb
sbb
jmp
xchg
jg
push
xlat
fs
clc
fwait
jecxz
inc
xchg
rcrb
stc
imul
jmp
lahf
outsb
jmp
lods
sarb
mov
or
jmp
scas
clc
jnp
out
dec
in
xchg
ret
rcrl
shll
sbb
and
jecxz
insb
hlt
mov
sbb
jmp
aaa
xor
xchg
repz
sbb
lock
enter
cltd
pushf
test
js
mov
mov
mov
pop
inc
nop
mov
add
sbb
insl
add
jns
push
test
clc
jne
es
in
in
adcb
dec
adcb
xchg
ds
mov
push
cltd
mov
adc
sbb
stos
and
mov
cmpsl
scas
cmp
rcrl
call
push
and
add
popa
mov
repnz
out
mov
fists
push
adc
out
and
mov
xchg
inc
rorb
clc
mov
hlt
add
or
push
xchg
jge
pop
sti
sahf
jne
cli
pop
hlt
test
or
or
mov
nop
xorb
dec
pop
movsb
pop
adcb
inc
xchg
adc
nop
mov
cmp
or
lock
mov
mov
jcxz
call
int
and
jb
dec
adc
xlat
repnz
inc
pop
mov
jp
mov
aam
adc
cmp
pop
lcall
ljmp
into
mov
xchg
hlt
sub
pop
andl
xchg
lea
lods
leave
or
cmpsl
aad
xchg
cmp
sbb
fstps
mov
add
test
jg
shlb
dec
in
xchg
sahf
pop
mov
jne
test
mov
lock
mov
aam
xchg
adc
leave
mov
subb
sbb
and
xchg
and
test
in
aad
pop
out
jecxz
jl
test
cmp
rolb
xchg
pop
pusha
push
cmpsb
filds
sahf
popf
loopne
sbb
rorb
aam
adc
cltd
sbb
fdivrl
in
test
imul
out
loopne
adcl
arpl
pop
mov
push
add
repz
mov
sbb
gs
enter
sbb
push
sar
adc
cs
xchg
xor
xchg
or
xchg
incl
pop
test
loopne
notl
jb
or
icebp
inc
pushf
add
push
test
xchg
std
fdivp
mov
lods
rclb
outsb
pop
pop
xchg
jle
cmp
xchg
in
negb
movl
xchg
mov
loope
jl
loop
xchg
mov
dec
mov
pop
pop
jno
stc
pop
mulb
sbb
push
aaa
lahf
mov
jne
std
mov
imul
mov
adc
or
popf
sbb
iret
int3
jnp
xchg
mov
xchg
inc
fwait
mov
lods
mov
adc
adc
inc
loop
lods
xchg
call
sbbl
leave
es
fwait
ja
adc
addr16
lods
and
jp
aas
mov
xchg
sbb
ljmp
xchg
test
lahf
popa
xchg
fwait
cmc
filds
xchg
pop
push
stos
roll
mov
xchg
mov
dec
pop
clc
fcompl
mov
xor
ffreep
mov
sar
adc
hlt
je
pop
mov
cltd
std
xchg
xchg
mov
dec
push
ss
mov
mov
js
pop
sbb
cld
inc
xor
movsb
fistpll
hlt
xchg
sbb
pop
lahf
in
das
int
mov
xchg
inc
xchg
xor
adc
test
xchg
push
gs
out
cmc
jo
div
jmp
xchg
xchg
push
divl
xchg
stos
fwait
and
adc
call
repnz
xor
mov
xchg
fiaddl
jge
xchg
cmp
pop
cmpxchg
scas
mov
outsb
loope
xor
mov
xchg
jbe
nop
js
and
xchg
xchg
stc
push
in
mov
fistpll
fwait
mov
mov
bound
cmp
sub
xchg
push
sahf
hlt
mov
xor
and
push
movsb
not
xchg
pop
ret
xchg
int3
mov
cli
cs
out
mov
mov
xchg
cwtl
ja
or
sbb
in
push
push
jnp
rolb
out
and
pop
or
xchg
nop
lahf
hlt
call
pop
add
xchg
cli
pop
adc
jo
loopne
xor
test
adc
jae
mul
das
xchg
cwtl
and
sub
lods
sbbl
mov
adc
dec
in
push
xchg
mov
iret
mov
out
xchg
imul
add
and
subl
mov
or
sbb
push
add
les
adc
sbb
rorl
pop
lcall
dec
xchg
das
sub
sbb
cmpsl
test
gs
cli
notb
mov
mov
popa
pushf
or
xchg
scas
neg
xchg
loopne
sub
pop
xchg
push
xor
pop
jne
or
xchg
inc
shlb
jns
pop
push
movsb
xchg
das
mov
jnp
or
mov
push
push
mov
inc
xchg
scas
lret
jle
cmp
add
out
data16
pop
test
mov
adc
add
lcall
sbb
push
fdivrl
xchg
cmp
lds
in
push
xchg
imulb
fdivl
mov
mov
xlat
or
stc
xchg
lahf
bound
out
rorb
xor
in
xchg
dec
or
jg
pop
fwait
sub
jb
aas
xor
add
lods
lret
orl
int3
pop
adc
jnp
jbe
push
jle
hlt
mov
xchg
orl
je
or
pop
stos
fstpt
clc
sbb
pusha
test
imul
pop
sbb
in
sbb
push
aam
fsubr
sahf
movsb
es
add
add
pop
push
test
dec
lea
inc
jnp
sbb
rcrb
hlt
push
bswap
or
push
orb
aas
stos
rcll
sti
jg
xchg
and
pop
call
xlat
scas
lret
xchg
push
cmp
sub
add
xchg
lahf
or
std
sbb
mov
cmp
div
mov
ficoml
rcrb
adc
lcall
xchg
in
pop
movsb
insl
je
aam
popa
inc
pop
sti
xchg
loopne
mov
je
pop
sbb
popa
in
mov
push
adc
lods
jno
gs
xchg
stos
aad
xchg
mov
adc
testb
imul
xorb
movsb
pop
shl
xchg
in
rcrl
call
xchg
lret
mov
xchg
dec
pop
pop
loope
dec
nop
or
cmpsl
xchg
xchg
xchg
mov
push
arpl
inc
or
pop
sbb
push
loop
jae
in
popa
mov
xchg
pop
push
mov
xchg
sbb
fldt
jnp
call
test
aam
fld
scas
mov
dec
add
pop
test
push
mov
xor
call
nop
cmp
add
in
fwait
insb
inc
mov
xchg
push
cmc
pushf
xchg
movsb
and
xorb
aas
stc
cmp
stc
xchg
fcomps
xchg
lock
lcall
mov
in
mov
lahf
sbb
sbb
cmp
in
out
mov
divl
movsb
dec
pop
xchg
or
shl
cmp
xchg
mov
sahf
out
inc
ds
imul
sbb
int
add
pop
push
xchg
push
cmp
push
fwait
loopne
jae
push
adc
mov
stos
call
aam
ja
push
mov
adc
adc
bound
xchg
fsts
jge
ja
sbb
out
xchg
mov
pop
fcoml
sbb
jae
jecxz
pop
fimull
insl
loope
xlat
cld
pushf
cmp
movsl
shlb
xchg
cmp
fdivs
xchg
xchg
mov
out
scas
or
repnz
stos
inc
inc
jb
repz
movsb
adcl
pop
xlat
push
fwait
mov
jnp
js
xchg
negb
mov
xchg
mov
jecxz
insb
sub
aam
jp
push
std
cld
pop
idiv
jbe
call
aam
test
in
fs
stos
dec
xor
jne
imul
shr
pop
in
xlat
rcr
jmp
gs
sbb
std
les
sub
push
inc
in
pop
in
lea
test
aaa
pusha
mov
push
and
mov
sub
jmp
xchg
in
adc
imul
in
xchg
cmp
sarb
lea
xor
inc
cmp
xchg
daa
fistps
sbbb
push
jne
xchg
lret
cmp
pop
xorl
fisubrl
xor
mov
sub
sbb
in
sahf
loop
push
fwait
data16
pop
jecxz
je
cmp
xchg
out
lahf
xchg
std
xchg
ds
inc
add
xchg
popa
cmp
je
jge
xchg
loope
mov
outsl
xchg
out
push
aam
sbbl
mov
loopne
or
int3
iret
sbb
aam
outsl
lds
sbb
mov
out
das
sbbl
sete
add
aas
jns
dec
in
test
das
or
sti
xor
popf
push
xchg
jbe
push
or
mov
xchg
pushf
into
mov
out
adc
add
outsl
int3
push
dec
sbb
in
or
lods
pop
cmp
adc
xchg
xchg
out
inc
test
dec
mov
mov
lcall
xchg
sbb
inc
xchg
cmp
xchg
fsts
xor
sahf
xchg
into
cmp
movsb
sbb
cltd
xchg
pop
in
lcall
pop
cmp
push
mov
iret
sbb
das
gs
pushf
jmp
subb
mov
aas
pop
add
xchg
nop
pushf
dec
sub
xchg
inc
ja
adc
push
out
adc
lret
push
popf
repz
mov
rorb
rcrl
addb
imul
das
lcall
dec
aam
sub
jo
pusha
popf
sbb
movsb
sbb
sbb
mov
and
nop
int
out
loope
outsl
pshufw
aam
rorb
std
pop
lods
mov
test
mov
pop
cmp
outsb
lcall
or
repz
test
cmp
cmp
cld
sub
sbb
xchg
lcall
or
jb
imul
mov
in
adcb
jg
xchg
push
fldenv
or
cwtl
cld
xchg
adc
pop
aaa
lea
test
add
dec
test
cmp
mov
jno
test
ljmp
push
add
cmp
pop
decb
negl
mov
cmpsl
cmc
call
bnd
dec
and
and
lds
pop
xchg
fstl
call
in
pop
clc
in
scas
adcb
mov
sbb
loopne
ror
shlb
jg
cwtl
iret
sti
jmp
sbb
and
or
jbe
and
es
sbb
inc
cmc
pop
mov
or
fidivl
add
lahf
subl
mov
notl
mov
and
mov
push
test
or
in
xchg
jbe
dec
fcomps
mov
pop
jae
cltd
add
mov
mov
lret
push
test
faddl
test
repnz
andl
es
cmpsb
jecxz
fsubr
cmp
xchg
push
adc
mov
les
notl
popf
pop
sbb
jge
xchg
popf
mov
and
sar
pop
mov
test
jns
hlt
inc
dec
mov
enter
repnz
bound
xchg
jbe
mov
jnp
lcall
mov
sahf
stos
inc
pop
mov
fmuls
clc
and
mov
xchg
mov
add
sbb
incl
jge
cltd
dec
mov
xchg
leave
xor
les
jmp
xchg
xchg
pusha
mov
jge
jl
lahf
adc
std
xchg
loop
andb
fucomip
sarb
popa
cltd
pop
xor
ljmp
adc
pusha
or
sar
cmp
test
sbb
rcl
inc
add
cmc
or
pop
mov
nop
cld
add
int
jns
stos
xchg
add
push
cmp
jmp
js
leave
aad
sbb
xchg
pop
lods
pop
sbb
mov
pop
xchg
or
scas
xlat
mov
orb
dec
pop
xchg
cld
clc
xchg
pop
mov
dec
push
fadds
push
mov
fistl
or
in
lret
sbb
in
test
jecxz
xchg
stc
xchg
dec
ss
fcompl
xchg
rcr
out
adc
andb
dec
scas
test
xchg
jbe
aam
adc
lods
xchg
jle
movaps
decl
les
fcomps
pop
pushf
jle
adc
xchg
mov
out
adc
sbb
mov
scas
out
and
mov
mov
ret
int3
sbb
inc
jo
rcll
adc
adc
enter
or
dec
adc
mov
mov
pop
notl
mov
rcll
sbb
fwait
mov
cli
test
pop
mov
push
add
inc
scas
xchg
sub
lcall
push
inc
lahf
faddl
hlt
repnz
add
xchg
cmp
icebp
push
add
xchg
lods
push
push
xchg
push
pop
xor
mov
mov
out
aam
mov
xchg
lcall
frstor
out
jmp
jle
ljmp
in
xor
div
mov
mov
call
adc
pop
xchg
aam
mov
push
lock
lods
pushf
xchg
push
out
mov
not
fcmovb
pop
cli
xchg
mov
hlt
cld
in
sbb
jl
aaa
pop
pop
sub
pop
mov
popf
ds
in
mov
popf
push
jl
sbb
stc
sbb
xchg
add
xchg
add
loop
jp
sbbb
lcall
mov
inc
push
ja
jns
repnz
push
pushf
std
lret
idivb
dec
loop
xchg
into
fimuls
lock
pusha
fcompl
and
push
add
pop
xchg
dec
rcrb
outsb
jns
mov
fs
jmp
xchg
cli
mov
hlt
jecxz
adc
jp
insl
cmc
sub
cmc
push
cmp
mov
mov
in
clc
lods
les
in
lahf
cmc
and
loope
and
nop
push
sbb
aam
push
je
xchg
aad
inc
out
aaa
mov
pushf
mov
cmp
jae
xchg
testl
sbb
fidivrl
stos
push
xchg
and
rep
xchg
mov
inc
dec
mov
out
clc
mov
xchg
mov
xchg
mov
push
orb
mov
and
pop
xchg
add
or
push
hlt
xchg
mov
cmpl
and
cwtl
test
inc
movsl
mov
in
lahf
in
adc
pop
mov
adc
test
or
add
xchg
xchg
rcrl
das
fwait
mov
push
aam
and
lods
xchg
pop
sbb
cmc
mov
mov
ljmp
sete
bound
mov
enter
icebp
add
inc
notb
loope
xchg
js
add
mov
cmp
in
xchg
clc
xchg
test
aaa
dec
push
adc
xchg
mov
dec
es
mov
je
not
add
xor
stos
scas
cld
ja
adc
and
inc
mov
test
mov
rclb
sbb
out
pop
jl
push
stos
fistl
cld
adc
xchg
inc
mov
mov
jle
inc
or
xchg
movsb
mov
sar
push
fsubs
xchg
out
mov
xchg
fldcw
je
sbb
inc
int
adc
mov
xor
mov
xchg
lahf
xchg
mov
ret
cmp
hlt
lcall
adc
test
mov
cmpsb
sub
sbb
xchg
xor
or
xchg
shl
mov
mov
jg
cwtl
xor
mov
fyl2xp1
xchg
sbbb
mov
jne
stos
xchg
xchg
les
loop
sub
stos
pushl
pushf
or
in
mov
testl
jge
mov
mov
xchg
xor
sub
xchg
lods
mov
bound
xor
pop
cmp
push
dec
xchg
ret
das
in
out
pushf
xchg
xor
or
shl
fwait
std
lcall
js
clc
call
mov
sbb
lcall
push
sub
cmpsb
movsb
cmp
jmp
mov
stc
test
aaa
pusha
int3
ja
mov
lock
cs
shlb
in
sbb
insl
xchg
push
push
sub
je
jo
fwait
jne
shlb
add
ja
pusha
sahf
lock
push
lods
test
xchg
jp
jg
adc
mov
xchg
jae
xchg
or
jb
sbb
and
cld
xchg
push
xchg
push
arpl
rclb
rcrb
xlat
je
ljmp
mull
xor
jns
jmp
std
movsb
cmp
in
inc
and
cld
adc
xchg
gs
jae
test
fstl
fld1
rol
enter
lret
jge
aam
repnz
add
jge
sbb
push
fadd
mov
sbb
scas
je
rcll
movsb
mov
cwtl
xchg
xchg
push
pop
aaa
sbb
adc
arpl
add
mov
dec
mov
xchg
aas
xchg
mov
pop
push
int
sar
fcmovnbe
xchg
adc
push
push
sti
stos
dec
xchg
inc
adc
and
xchg
in
jge
mov
or
cmp
js
dec
mov
inc
cwtl
mov
adc
call
cmpsb
dec
stos
test
xchg
sub
xchg
stc
jl
mov
xor
or
sub
pop
sbb
pop
js
orb
mov
rcr
lods
imul
cmp
lcall
mov
sub
xchg
les
iret
adcl
lahf
and
rclb
sub
push
xchg
icebp
insb
cmpsl
lods
pusha
movsb
push
mov
xchg
jne
mov
fistpl
xor
scas
mov
jbe
std
leave
out
push
fistl
xlat
rclb
fisubl
cli
pop
xchg
cmp
aam
inc
or
sbb
mov
neg
ret
enter
out
and
push
mov
cltd
je
test
aas
inc
add
sbb
jno
ja
and
in
cli
pop
pop
or
iret
cmp
add
adc
mov
sub
scas
test
test
lock
xchg
notl
iret
sbbl
mov
inc
shl
test
push
xchg
test
mov
push
test
xor
inc
inc
mov
push
movsl
adc
sbbl
jbe
loopne
out
lods
ljmp
or
shr
fists
or
ss
dec
xchg
repz
lahf
xchg
sbb
xchg
mov
rclb
jecxz
sarl
xchg
sbb
jno
out
les
repnz
adcb
jbe
push
std
jecxz
loop
xchg
sbb
xchg
cld
xor
mov
pop
xor
jnp
add
jmp
xor
movzwl
add
xchg
jns
or
jo
sbb
rcll
out
lods
lea
scas
int3
lret
sbb
xchg
push
imul
test
clc
idivl
push
aam
outsb
out
push
xchg
shrl
outsl
xorl
xchg
xor
jb
jge
in
idivl
popa
adc
std
cmp
mov
sbb
hlt
scas
lods
je
xchg
jle
stos
aad
mov
push
cmp
or
loope
push
xchg
mov
sbb
sbb
pop
add
out
fwait
cwtl
sub
hlt
xlat
jno
adc
clc
imul
loope
cli
and
sbb
pop
add
pushl
adc
adc
cmp
jnp
xchg
loop
add
test
fistps
out
xchg
movsl
or
imul
xchg
adcl
xchg
in
jle
or
stos
aad
flds
das
ljmp
sbb
mov
inc
aad
test
jo
nop
mov
clc
pop
cmp
test
call
ficoml
aam
push
addr16
imul
aam
mov
sbb
sbb
mov
xchg
sbb
jecxz
popa
push
movsb
subl
inc
mov
sub
aam
ror
je
inc
xchg
fs
flds
movsb
sbb
jp
push
xchg
gs
add
fs
adcb
in
cli
mov
lods
fcos
xchg
data16
and
xor
sub
push
lret
repz
add
jo,pn
test
jp
xor
xchg
add
xor
mov
inc
cmp
lcall
loope
js
xchg
dec
in
mov
or
popa
xchg
xorl
cmp
sbb
bswap
cmpsl
pop
lea
xchg
cwtl
push
lahf
pushf
jnp
cli
jl
loope
mov
notl
les
loop
jle
daa
sbb
mov
aas
loope
filds
inc
aam
xor
aad
popa
push
xchg
sbbb
mov
inc
insl
cmp
xchg
xor
mov
lods
or
mov
rcrb
cld
lret
sbb
xchg
mov
mov
imul
xor
outsl
cltd
ret
jnp
mov
ja
add
pushf
pop
rclb
push
in
mov
mov
aam
mov
stos
ret
fdivrs
sub
rcl
popa
gs
outsb
jae
lahf
pop
mov
aam
mov
clc
mov
push
lock
rcrl
cmp
push
sub
insl
adc
pop
add
cld
lahf
mov
pop
adc
sarl
cmpsb
xchg
sbb
inc
pop
int3
aam
xor
cmp
sbb
test
test
lcall
fstps
mov
mov
shll
cld
cmpsb
sbb
mov
pop
testl
aaa
stc
xchg
add
cmp
int3
mov
mov
pop
mov
xchg
sbbl
xchg
xchg
inc
jae
pop
in
ret
pop
test
sbb
xchg
xor
inc
sahf
adc
or
popl
mov
mov
lahf
inc
xchg
sbb
sub
mov
in
fildll
xchg
xchg
adc
enter
repnz
sub
test
repz
and
xchg
sahf
aam
mov
cmp
jns
sub
xchg
mov
jbe
inc
gs
xchg
shll
cmp
pop
push
stc
xchg
inc
rcll
adc
mov
cmpsb
pop
sahf
xchg
ret
mov
lea
xchg
push
jl
stos
lcall
sti
loope
mov
rolb
je
mov
jb
shrb
movsl
adc
rcll
mov
mov
ds
adc
xchg
std
dec
hlt
dec
mov
sbb
cmpsb
sbb
lea
fistpl
cwtl
cmp
xchg
pop
lcall
xchg
mov
repz
inc
xchg
jecxz
jmp
push
xchg
pop
mov
jg
out
repnz
mov
xlat
jp
add
xchg
mov
jg
add
fs
imul
pop
aam
aaa
xchg
xchg
int
cltd
test
cli
scas
mov
sub
xchg
add
subb
push
sbb
mov
pop
xchg
cmp
cltd
insb
mov
adc
cmp
cld
sahf
clc
sbb
jmp
mov
xlat
sti
enter
xchg
int
test
mov
mov
lahf
push
pop
sbb
mov
mov
mov
xor
push
sbb
mov
push
clc
jo
or
pop
dec
push
xor
mov
adc
fwait
push
jl
aam
stos
js
xchg
adc
sbb
rcrl
mov
popl
loope
jg
das
xchg
inc
xlat
aam
aas
mov
in
add
adc
fiaddl
pop
cwtl
lcall
lds
pop
mov
add
rclb
lods
enter
cli
xchg
xchg
lcall
and
pop
mov
shlb
xchg
call
insb
inc
xchg
sbb
sbb
and
inc
adcb
adc
icebp
mov
hlt
push
sbb
sahf
push
cmp
sbb
xchg
sub
sbb
les
push
insb
mov
dec
cld
mov
cs
push
fwait
mov
popfw
push
ret
hlt
mov
xchg
mov
sahf
outsb
sbb
jb
jp
sti
pusha
mov
push
cmc
inc
lods
xchg
mov
hlt
inc
pop
test
sbb
mov
ja
push
pop
das
testb
cld
dec
nop
cmpsl
xchg
inc
call
neg
ror
cltd
add
mov
mov
mov
dec
or
sbb
aam
in
mov
outsb
xor
test
das
loope
fmulp
int3
xchg
xor
notb
dec
pop
mov
test
test
sbb
rclb
adc
sub
push
icebp
mov
negb
fstpl
dec
add
cltd
mov
das
jae
dec
cmp
hlt
data16
nop
xchg
test
xchg
push
pop
add
stos
loopne
cmp
push
stc
sbb
in
imul
lods
cmpsb
mov
call
adc
xchg
pop
mov
sbb
sbb
aad
mov
repnz
cli
loopne
out
inc
idivb
and
dec
xorb
mov
pop
and
mov
lea
in
cmp
popa
mov
push
fs
imul
xchg
in
call
mov
jg
mov
mov
push
outsb
or
leave
mov
mul
inc
xchg
sub
pushf
aaa
mov
mov
inc
mov
fmull
mov
and
in
mov
or
data16
testb
jle
ljmp
dec
clc
ret
xchg
dec
out
push
into
cld
xchg
jmp
mov
mov
mov
add
stc
cmp
ja
arpl
inc
aam
mov
add
insb
pop
fidivrl
loopne
xor
push
pushf
lahf
out
in
imul
adc
out
xlat
movsb
in
stc
cltd
jle
mov
sbb
cld
out
pop
xchg
ret
add
stos
testl
mov
pop
repnz
outsl
xor
stc
and
aad
mov
stos
adc
sbb
ret
xchg
sahf
test
repz
mov
mov
xchg
ds
lods
xor
cmc
jmp
sbb
loopne
xchg
mov
inc
shll
xchg
insb
ret
xor
cld
mov
scas
loopne
push
sbb
sbb
cmp
cwtl
pushf
mov
clc
scas
aaa
aam
xchg
mov
mov
rcl
cwtl
add
rcrb
arpl
sbb
ss
hlt
inc
dec
push
add
nop
and
lcall
mov
cwtl
xchg
jl
xchg
push
subb
sbb
push
sbb
clc
pop
fsubr
and
arpl
or
inc
or
cwtl
aad
movsb
test
call
lods
xchg
jle
pop
out
pop
outsb
hlt
xchg
mov
jecxz
or
xchg
mov
push
push
push
jg
mov
and
fmuls
add
cmp
inc
dec
aad
mov
imul
mov
dec
xchg
outsl
or
dec
test
clc
insb
xor
xchg
std
mov
nop
lock
aam
das
pushf
out
aad
xchg
push
mov
ljmp
int3
sbb
rcll
push
out
xchg
add
push
xchg
insl
adc
mov
xor
xchg
mov
adcb
out
xlat
in
enter
fimull
xchg
push
sahf
popf
in
fdivrp
insl
or
xchg
xchg
rcr
push
jns
stos
rorb
cld
jp
lret
sbb
add
add
xor
mull
stos
rcll
jg
and
in
sbb
mov
adc
xorb
jne
call
fdivp
fcompl
jle
ret
aam
push
push
stos
pop
fdivl
movsl
push
movsb
jge
in
pusha
adc
in
insb
cwtl
das
imul
call
mov
dec
loope
cwtl
sbb
stos
dec
or
sub
push
shl
jae
lahf
frstor
xchg
mov
fwait
das
sbb
scas
aam
lcall
jnp
insb
adc
or
push
lods
pop
mov
cmp
adc
xchg
xor
lcall
test
repz
xchg
lahf
fmull
xchg
xchg
sbb
mov
xchg
adc
or
lods
add
dec
sarb
fdivs
shrl
mov
sub
ja
mov
divb
imul
pusha
mov
inc
pop
xchg
cmpsb
add
or
je
or
push
enter
xchg
fdivrs
pop
add
push
aas
pusha
inc
mov
inc
sub
push
add
int3
jo
pop
cmpsl
xchg
push
dec
fisubl
adc
lods
adc
inc
and
push
fcoms
lret
or
mov
pop
or
dec
xchg
cltd
leavew
sti
pop
iret
adc
xchg
mov
jg
or
fdivl
mov
add
lcall
mov
aam
jbe
popf
filds
call
sbb
loope
xchg
dec
xor
negl
xchg
and
ror
xor
sbb
in
into
push
dec
sbb
cmp
dec
scas
cmc
sbb
aam
pusha
addr16
loopne
add
jl
cmp
adcl
mov
clc
fisubrl
pop
shrb
push
sbb
pop
ret
jb
call
pop
xchg
insb
aam
rcrb
push
mov
das
in
jecxz
jo
lret
pop
sbb
lahf
movsb
inc
in
loope
std
jbe
fiaddl
shrb
popa
enter
mov
mov
arpl
pop
pop
fbstp
scas
jne
dec
or
jmp
fimull
xlat
cmp
inc
jnp
addr16
pop
pusha
xchg
aad
mov
or
ret
cmp
std
mov
std
loopne
andl
add
jle
fwait
xor
adc
sahf
cmp
lods
pop
lods
dec
sbb
cld
inc
cld
pop
mov
mov
ss
add
jns
mov
lock
lods
xchg
test
dec
cwtl
cmpsb
xchg
and
orb
pop
lock
in
je
mov
addb
scas
jecxz
sbb
xchg
aam
addl
lret
mov
arpl
sbb
lahf
xchg
adc
dec
and
pop
inc
sbb
int3
dec
fidivl
xchg
cld
jae
dec
xor
sbb
xchg
sbb
mov
sbb
subl
sbb
outsb
sub
cwtl
mov
addr16
gs
js
xchg
test
xorb
sahf
or
fmull
inc
aam
loop
mov
pop
mov
lea
int
sbbb
adc
fisubrl
mov
xchg
xchg
mov
jg
xor
fsub
mov
adc
cld
fsubr
mov
ljmp
movsb
xchg
jecxz
jbe
xchg
pop
xchg
dec
aas
loopne
iret
int3
or
xchg
xor
aam
xchg
add
dec
sarl
or
cli
fcoms
les
pop
pop
jbe
aam
mov
xchg
jp
aad
mov
mov
pop
sbbl
jb
cld
call
outsl
xchg
push
lret
push
and
adc
dec
pop
pop
cmpsl
adc
dec
push
lahf
fisubrl
lods
aam
xchg
fdiv
add
push
xchg
and
add
aam
pop
rclb
push
sbbb
test
cmc
fldl
repnz
pop
and
jl
add
shlb
xchg
shrl
insb
sbb
sar
xchg
push
mov
jle
push
in
adc
testb
lods
cmpl
or
adc
mov
shl
sti
hlt
out
and
add
mov
jnp
rclb
xchg
sbb
xchg
xchg
std
push
ja
and
sti
adc
and
movsl
cmp
pushf
pop
das
sahf
bound
or
pop
in
xchg
mov
pop
int
lcall
lods
ficoml
and
sub
int3
sbb
lods
in
test
orl
aam
jo
lcall
mov
xchg
mov
adc
pop
mov
cmp
add
pushl
mov
int3
ja,pn
adcb
sbb
pop
sub
lods
dec
sub
and
xchg
mov
inc
jg
push
enter
mov
xchg
push
add
mov
xlat
xchg
jle
add
aad
push
das
repz
cld
sbbb
pop
jnp
loop
adc
push
fcoms
sbb
jnp
xchg
enter
lret
mov
lea
in
sbb
fisubs
sbb
xchg
das
cmp
dec
cs
mov
mov
pop
ja
rep
mov
js
xchg
pushf
fcoml
jmp
xchg
jo
push
data16
gs
xchg
xchg
clc
test
dec
js
mov
ljmp
aaa
pop
pop
xchg
or
jae
fsubrl
lods
cmp
mov
pop
pop
and
fisubl
pop
mov
jns
out
xchg
jmp
add
nop
scas
lahf
or
sub
cmovae
dec
mov
add
push
sarb
call
cmp
xchg
scas
dec
ret
hlt
jp
in
pop
sbb
push
sahf
xchg
dec
xchg
mov
jle
fcoms
rolb
xor
ror
mov
sbb
dec
sbbb
cltd
adc
lahf
pop
dec
aam
push
lods
push
sbb
sbb
cvtps2pi
jo
sbb
xor
sub
cli
xchg
cltd
dec
pop
ds
sub
jmp
adc
xor
arpl
das
je
lahf
mov
mov
ja
push
jbe
pop
enter
fstpt
lret
filds
mov
xstore-rng
cmpsl
add
sbb
aad
jge
lods
or
and
je
pop
rcrb
cld
pop
in
cwtl
insl
mov
sbb
jae
mov
mov
cmpsl
inc
sub
lock
hlt
gs
out
rorb
add
stc
fwait
adc
mov
aam
mov
jo
mov
cwtl
or
and
pop
js
stos
nop
sti
sbb
and
xchg
adc
stos
mov
fisubl
xchg
xor
dec
xchg
mov
pop
adc
insl
xchg
cli
std
push
in
stos
das
push
jne
add
pop
shrb
sbb
add
mov
pop
lahf
push
adc
adc
aas
pop
sub
xchg
inc
adc
push
sbb
mov
pop
mov
sbb
stos
test
xor
inc
and
pop
fstpl
xchg
mov
or
push
sbb
ja
cmpsl
loopne
xchg
lret
adc
xchg
fisttpll
aam
mov
sahf
sar
xchg
push
mov
arpl
cld
push
xchg
test
push
push
test
or
xchg
sub
jb
cmp
mov
sbbl
sub
loop
add
pop
lcall
pop
aas
push
sbb
and
pop
adc
lea
mov
ss
cmp
andl
pushf
adc
push
inc
fistpl
mov
mov
adc
sbb
sbb
push
arpl
mov
push
scas
orb
push
mov
sbb
cmp
mov
repnz
hlt
xchg
sahf
ficompl
pushf
scas
push
rcr
add
mov
ljmp
das
push
popf
lcall
or
pop
xchg
jns
sti
cld
addr16
sbb
dec
je
fsub
mov
sbb
dec
inc
add
pop
cmp
cmc
pop
mov
int3
les
fwait
lret
xchg
test
movsb
lods
mov
lods
mov
in
sahf
xchg
jl
out
pushf
bound
cmpsl
and
pop
insl
cmp
pop
lods
xchg
shlb
xchg
push
and
lock
ljmp
cmpsb
cwtl
aam
and
stos
xor
addb
and
mov
xor
sbbb
gs
push
mov
jecxz
mov
xchg
and
xchg
push
cs
jp
fwait
jb
movsb
sti
fidivs
repnz
fisttpl
mov
add
lds
out
sub
scas
and
xchg
fcompl
std
push
mov
push
sub
cmp
cwtl
aam
inc
push
cld
popa
xorb
loop
add
sete
popf
inc
shll
cmc
xlat
nop
fidivrl
lcall
mov
shlb
xchg
mov
jmp
push
or
rcrl
das
movsb
push
in
xchg
dec
lock
rol
lret
pop
push
pop
add
push
adc
xchg
dec
adc
add
mov
mov
stos
mov
jne
sbb
loopne
leave
xchg
and
pop
xchg
mov
xchg
pushf
sbb
ret
inc
or
pop
jbe
jns
pop
call
jecxz
cld
stos
xor
push
mov
jmp
adc
addr16
aad
mov
aam
and
mov
div
push
jne
xchg
mov
insl
dec
xchg
rolb
push
int3
fstpl
sahf
into
popf
call
out
orl
push
jle
pushf
mov
adc
dec
or
into
in
clc
lret
jg
clc
jp
jge
cmp
cmc
mov
xchg
push
push
repnz
mov
jg
dec
scas
lods
xchg
aas
adc
pop
ret
xchg
mov
pop
mov
xchg
enter
aaa
test
xchg
aad
pop
repnz
xchg
or
clc
test
mov
cmp
ja
movsb
sub
test
es
dec
inc
inc
pop
xor
pushl
adc
and
gs
mov
cld
add
or
pop
adc
in
stos
repnz
into
in
cmp
or
stos
iret
xchg
pushf
mov
rorb
js
test
jecxz
and
mull
mov
pop
mov
xchg
push
jecxz
cld
loop
lods
jge
testl
popf
xchg
cmpsb
pop
mov
rclb
aad
dec
cmp
je
xchg
push
int3
loope
pop
push
xchg
or
cmpsl
aad
jle
xchg
mov
inc
mov
dec
ja
mov
scas
lahf
cmp
popf
divl
movsb
mov
jl
cmp
mov
int3
push
arpl
lahf
outsb
mov
sub
enter
mov
adc
adc
je
arpl
mov
int
push
lods
push
xchg
cmp
sbb
push
jmp
xchg
xchg
mov
push
inc
das
xchg
sub
adc
out
fs
imul
xchg
rorl
arpl
push
lock
into
push
xlat
add
shrl
jp
test
insl
hlt
mov
loopne
jmp
dec
xchg
lahf
mov
xchg
clc
arpl
sub
rcll
fisubrs
cmp
nop
xchg
cmpsl
bound
fldpi
daa
shrl
add
add
enter
arpl
push
jl
call
mov
jp
stos
fcompl
dec
sbb
xor
pop
xor
and
push
or
aaa
cli
sbb
pushf
add
sbb
cltd
mov
mov
sbb
add
dec
or
test
fs
in
lahf
push
add
sarb
aam
jmp
xchg
popf
xor
loope
inc
sbb
sbb
or
jns
test
sbb
testb
insl
std
in
aam
pop
loop,pn
xchg
rclb
sahf
repnz
adc
jmp
outsb
lret
add
shrb
in
pop
ror
testb
xchg
loopne
xchg
and
xchg
mov
mov
adc
xchg
push
inc
lahf
jge
mov
xchg
or
insl
lea
push
fsubs
ja
cli
pop
out
add
pop
pop
imul
test
xchg
adc
inc
mov
mov
dec
popa
mov
flds
adc
cld
xor
in
ret
andl
imul
mov
jle
sub
notl
aam
and
test
call
xchg
add
cwtl
inc
mov
xor
push
aas
mov
xor
negl
mov
add
nop
cmp
cmp
dec
loop
out
call
sahf
fistps
outsb
xchg
aaa
mov
mov
test
testb
push
jne
pop
jbe
xchg
out
sahf
fsubr
dec
cwtl
sbb
lds
fs
adc
xchg
bound
jno
ja
xchg
adc
or
ljmp
pop
movb
xchg
jae
jge
fsubl
call
ja
lret
inc
mov
xchg
mov
sti
add
sbb
fstl
fwait
mov
sbb
stos
fwait
movsl
shrb
mov
xor
nop
scas
notw
mov
xor
call
jle
loopne
sahf
lods
hlt
pop
test
dec
xor
clc
xlat
mov
adc
gs
mov
fiaddl
xchg
mov
and
xchg
xchg
mov
jne
imul
mov
sahf
jnp
push
sbb
out
push
xor
pop
pusha
shlb
les
xchg
cmpsb
out
stos
sbbb
test
mov
mov
xchg
inc
mov
mov
aas
mov
or
aam
std
mov
xchg
cmpsl
adc
rcrb
lcall
test
leave
add
xor
xchg
movsb
sbbl
jmp
mov
ljmp
arpl
dec
pop
xchg
out
sbb
rcll
xchg
pop
out
flds
mov
push
mov
inc
cmp
fistl
push
push
loope
add
jnp
test
hlt
mov
sahf
xchg
dec
mov
xchg
fwait
mov
lcall
sbb
hlt
scas
xchg
lods
mov
fdivl
pop
sbb
adc
jg
sti
inc
sub
jl
jp
push
or
sbb
mov
mov
add
sti
add
jo
shld
sbb
jg
sub
mov
xchg
inc
jnp
pop
ds
adc
nop
mov
inc
jno
nop
mov
call
daa
pop
inc
insb
jae
mov
and
stos
xchg
mov
out
rorl
push
xchg
xchg
call
jnp
jbe
jae
cld
add
sbb
call
in
push
jno
scas
mov
mov
insb
xchg
outsl
in
jne
xchg
aam
or
sbbb
xchg
lret
imulb
dec
sub
xchg
inc
jo
jno
aas
pop
push
and
gs
adc
fcoms
sbb
sahf
mov
ljmp
les
xchg
cmp
mov
arpl
rorl
xchg
add
ja
mov
cmp
int
out
xchg
cmp
pop
inc
ret
in
cmp
sbb
int3
mov
cltd
mov
movsb
sbb
out
mov
xor
jmp
lret
ds
mulb
jl
sub
popf
aad
outsb
idivl
lock
les
test
sub
push
jno
jecxz
lods
and
mov
rcll
jns
int
mov
loop
jnp
cmp
fcmovu
rcrb
notl
sahf
inc
adc
int3
in
mov
and
ljmp
cmp
cmp
adc
xchg
jns
test
jge
sti
fstl
mov
lret
int
xchg
mov
pop
nop
xchg
inc
js
push
adc
pop
test
dec
mov
jecxz
xchg
hlt
push
cli
xchg
movsb
cld
inc
mov
mov
mov
les
mov
idivb
adc
cwtl
enter
mov
mov
adc
pop
xchg
sbb
lcall
cmp
xchg
add
dec
cmpsb
xchg
push
mov
out
jno
rcrb
mov
cmp
mov
fwait
ja
xchg
pop
adc
lods
dec
mov
jae
xchg
or
mov
jl
xchg
sub
movsl
popf
repz
xchg
popa
ljmp
jno
jbe
clc
adc
imul
outsl
scas
mov
cli
pop
xchg
jnp
movsb
rolb
xchg
mov
xchg
pop
jne
andl
jge
bound
arpl
fs
pop
ds
lahf
sub
int
dec
into
fwait
adc
jl
xchg
push
mov
je
test
push
add
xchg
adc
mov
jb
xchg
arpl
movsb
mov
cltd
xchg
ja
pop
dec
push
xor
xchg
adc
inc
add
test
jo
outsb
jmp
dec
sbb
fucomip
bound
adc
lods
imul
clc
add
cmp
out
jne
imul
lea
testl
hlt
aas
add
pop
sar
lock
push
add
pop
neg
cmc
lret
xchg
or
xchg
push
decl
push
fmull
addr16
pop
xchg
xlat
lahf
xchg
pop
ret
scas
add
sbb
call
movsb
ja
mov
jnp
add
jmp
jp
aam
mov
rorb
cmpl
xorb
xchg
jg
fcos
xchg
pop
xchg
pop
scas
fldt
cmp
cwtl
mov
stos
mov
sbb
fimull
jb
icebp
je
xchg
repnz
mov
gs
out
aam
rcll
push
pop
ljmp
push
sbbb
stos
sbb
iret
mov
in
xchg
push
pop
in
xchg
sti
push
xlat
or
arpl
mov
mov
inc
add
icebp
or
xchg
out
hlt
call
negb
clc
jns
sub
enter
xchg
out
pop
movsl
out
or
push
push
test
sbb
addr16
cmp
cld
outsb
xchg
push
rcl
pushf
jl
ljmp
push
in
rorl
adcl
rorb
add
jg
mov
scas
xchg
mov
popl
loope
inc
dec
fimull
pop
mov
xchg
sbb
mov
fistpl
popa
jmp
pop
mov
shrl
adc
stos
lret
ja
loope
push
inc
adc
or
sub
or
adc
repnz
aam
ljmp
pop
sub
loopne
outsl
pop
xchg
xchg
lock
push
inc
sbb
jmp
lret
fildl
xchg
dec
pop
jge
and
fwait
shlb
lahf
popf
sbb
js
mov
lcall
cmp
out
mov
aaa
xchg
xchg
sti
push
test
jmp
add
xchg
or
mov
add
xchg
add
mov
popf
test
cwtl
or
inc
or
adc
out
ficoml
xchg
xchg
lahf
pop
add
pop
lcall
add
call
mov
movsl
add
bound
sbb
lock
test
lret
sarl
ljmp
adc
shrb
push
mov
or
adc
dec
dec
jp
xchg
lods
mov
xchg
aam
fsincos
int3
stos
xchg
add
cwtl
mov
stc
lret
mov
add
dec
and
and
cwtl
mov
push
lods
xchg
pop
dec
ss
lcall
stos
adc
push
sbb
jecxz
sahf
xchg
inc
xor
movsb
dec
std
stos
xchg
fdivl
popf
jae
mov
nop
and
add
cmc
mov
pop
add
sahf
xchg
or
aaa
cltd
movsl
xchg
test
stc
fcmovbe
xchg
cmp
int
leave
and
sbb
cmp
jae
dec
mov
arpl
jecxz
orb
sbb
jne
imul
hlt
mov
imul
cld
scas
xchg
push
sarl
mov
pop
aam
xor
aas
sti
inc
push
arpl
dec
or
rolb
fwait
xchg
scas
push
loop
test
mov
es
subb
mov
fdivrl
int3
cmpsb
xchg
jecxz
pop
push
mov
test
and
cmpsb
sbb
and
mov
pop
repnz
xor
xchg
hlt
push
push
aad
test
xchg
mov
sbb
push
xchg
xchg
lahf
call
mov
xorb
push
lcall
add
pop
xchg
mov
mov
inc
push
or
std
add
push
xchg
or
dec
mov
mov
adc
ja
xchg
test
fcoml
rcrb
pop
cmp
pop
add
aam
lock
mov
cmc
inc
insb
xchg
cmp
mov
lcall
mov
cld
test
fbld
cmpsb
test
cltd
xlat
mov
sbb
loopne
test
imul
add
mov
lock
aam
mov
fisttpll
push
xchg
cmp
cwtl
dec
cld
fs
sbb
fstl
adc
mov
pushf
xchg
out
mov
ss
movsl
adcl
mov
xchg
or
or
mov
out
mov
sub
loopne
test
stc
xor
mov
pop
xchg
dec
mov
dec
xchg
pop
add
mov
fsubrp
addr16
pushf
fsubrs
fcomip
xchg
inc
out
daa
or
jb
cmc
inc
fcomi
pop
ficoml
dec
pop
lcall
test
repz
movb
pop
fistpl
sub
lcall
loop
and
jno
inc
gs
in
sbb
sahf
xchg
mov
push
add
addb
cmp
and
and
pop
dec
xchg
out
mov
fsts
leave
out
xor
aad
push
sete
xor
or
mov
in
mov
xchg
push
dec
mov
pusha
int3
addr16
sbb
sub
xchg
jg
dec
add
sti
out
ja
xchg
mov
out
arpl
push
clc
loop
jecxz
sub
push
mov
xor
into
insb
movhps
test
jl
mov
xchg
xchg
in
int3
cmp
pop
hlt
adc
int
inc
jbe
fsubrs
xchg
rcll
ds
and
xchg
cmc
mov
push
xchg
push
imul
cmp
aam
inc
bound
fistpll
dec
xchg
xchg
xchg
jb
sub
ljmp
mov
je
sbb
iret
cmpsb
pop
aam
stos
sbb
fmull
cwtl
in
cmp
pop
dec
xchg
out
mov
dec
out
xor
mov
mov
add
js
aam
sbb
andb
pop
lock
cwtl
sub
mov
mov
sbb
adc
repnz
cmp
sbb
aam
xor
sbb
test
jbe
lock
bound
jne
pop
ret
test
sub
aam
xchg
dec
movsl
pop
cmpsl
aad
inc
xchg
xchg
ss
jmp
mov
jl
in
sub
lods
sti
dec
xchg
xlat
push
jmp
rol
movsb
pop
fwait
rolb
sbb
xchg
je
in
enter
out
xchg
add
jne
test
xchg
jl
sahf
adc
test
aam
push
repnz
out
jno
sbb
mov
fwait
sub
std
movsb
int
in
jge
movsb
lret
push
xchg
inc
push
xchg
iret
add
cmpl
clc
popf
out
pop
mov
cli
dec
mov
mov
sbb
lcall
inc
xor
pop
out
pop
loope
xchg
aas
fcomi
adc
mov
push
dec
xchg
or
aam
push
incb
xchg
cmp
lods
dec
or
popa
pop
in
and
fisubrs
and
sub
cltd
dec
std
xchg
fwait
push
dec
ja
or
incb
enter
xchg
inc
test
and
pop
test
insl
mov
sbb
test
mov
fisubrs
fcom
loope
imul
xchg
sbb
rol
les
das
ljmp
mov
pop
pop
mov
dec
push
pushf
roll
popf
mov
cs
lahf
jg
and
nop
cld
mov
mov
movsb
push
mov
mov
push
loopne
mov
pop
adc
hlt
loope
mov
std
cs
shlb
pushf
sbb
stc
popf
pop
loop
lods
hlt
cmp
lcall
aam
pop
sbb
jne
gs
xor
sbb
test
int3
push
mov
leave
xchg
out
inc
sets
ficoml
lret
adc
sbb
cmpsl
pop
mov
mov
aam
and
sbb
aas
out
je
push
sbb
in
mov
pop
das
mov
or
pop
outsb
sahf
jb
and
neg
pushf
out
xchg
loopne
jp
dec
cmpsb
xor
sbb
mov
aam
je
xor
xchg
push
and
push
xor
jle
mov
aas
clc
xchg
push
lods
xchg
mov
movsl
or
xchg
cmpsb
inc
pop
pop
loopne
mov
xchg
dec
sbb
lret
aam
fwait
loope
xchg
fstpt
sbb
data16
loop
xchg
rclb
jl
jecxz
mov
fwait
roll
adc
mov
sub
aas
or
sbb
sbb
push
lods
les
pop
sbb
sbb
xlat
aaa
mov
fwait
xchg
jg
mov
xchg
mov
mov
add
jle
sub
xchg
cld
xor
xchg
and
out
xorb
rolb
adc
das
inc
lea
ficoml
enter
psubsw
imul
adc
xchg
cmp
ljmp
sbb
adc
mov
call
scas
xchg
jl
xchg
pop
lods
mov
sbb
dec
cli
or
xchg
leave
ljmp
in
push
mov
mov
js
or
xchg
mov
repz
ret
test
inc
rorl
hlt
xorb
mov
xchg
fidivrl
orb
shlb
orb
negl
repnz
xchg
inc
sahf
xchg
cltd
cs
inc
mov
std
nop
add
aam
pop
inc
daa
fdivrl
cmp
adcb
dec
sbb
adc
fadds
dec
sbb
push
in
rcrl
mov
and
add
jl
decb
xchg
inc
lods
or
pop
xor
fs
and
dec
mov
pusha
sbb
fwait
mov
lock
in
rcl
xchg
inc
not
jg
aam
out
pop
push
xchg
add
inc
sub
test
aam
sti
fwait
mov
cld
outsl
lds
xchg
int3
int3
push
xchg
rorl
adc
mov
lods
mov
xchg
ret
movsl
int
adc
pop
aam
jle
lret
loope
push
xchg
and
cwtl
cmp
mov
addb
fxch
mov
idivl
das
xchg
aad
int3
push
lret
xchg
jl
xchg
mov
aaa
ss
cmpsb
call
xchg
jae
clc
sub
gs
shll
mov
in
sbb
jne
jo
jns
xchg
mov
push
paddsb
and
shlb
enter
pop
cli
lods
or
lods
xorps
inc
push
popf
cmp
push
stos
mov
mov
inc
fwait
cmp
sbb
pop
iret
int3
sbb
das
pop
mov
xchg
xchg
mov
adc
bound
xchg
ret
jle
dec
fsubrl
mov
jge
pop
cmp
inc
xchg
or
aad
stos
call
cwtl
mov
mov
inc
xchg
adc
and
mov
scas
pop
or
mov
jne
jp
pop
jns
stos
or
pusha
sbb
pop
insb
lahf
mov
xchg
mov
inc
jno
insl
dec
std
adc
push
aaa
adcb
cmpsl
aad
in
jb
subl
mov
mov
mov
push
xchg
data16
push
sbb
xor
fsubrl
adc
xchg
loop
bound
jle
stc
xchg
mov
ja
push
xchg
xchg
cmp
dec
xchg
cwtl
repz
inc
nop
xchg
cltd
adc
cmp
jl
out
add
cld
mov
adc
mov
add
push
add
inc
fwait
int
cwtl
lcall
sbb
mov
std
or
cmp
push
jp
jbe
test
mov
xchg
lea
jb
xchg
mov
stc
dec
mov
cwtl
ja
lock
aad
lcall
aam
fsubrs
adc
aam
push
and
mov
xchg
add
clc
movsl
xchg
cltd
pop
inc
jg
fcmovu
pop
push
sete
push
sbb
cltd
outsl
mov
mov
push
loop
push
dec
movb
mov
adc
aas
rorb
pushf
mov
add
lcall
call
das
sahf
iret
cmp
in
insl
lds
std
data16
jge
xchg
gs
daa
mov
jbe
push
pop
fnsave
mov
shl
clc
jg
dec
aam
movsl
leave
addb
mov
sbb
push
mov
mov
jo
into
adc
idivb
in
js
mov
test
iret
push
dec
enter
adc
push
ffreep
cwtl
sti
in
mov
dec
dec
cmc
xchg
int3
push
xchg
xchg
inc
cwtl
push
lahf
pop
mov
jo
lock
hlt
into
mov
insb
xchg
mov
sti
not
mov
orb
loope
lock
lods
xor
xchg
and
int
adc
cld
mov
in
adc
mov
xchg
push
sahf
mov
and
jne
xchg
fbstp
mov
xchg
push
xor
add
lods
jl
push
xchg
cli
and
mov
dec
mov
es
pop
arpl
sbbb
pushf
inc
shl
mov
das
jno
inc
ds
xor
pop
ljmp
dec
adc
cwtl
add
and
negb
push
mov
mov
mov
in
jb
int3
adc
push
fimull
mov
movsb
dec
xchg
fstpl
test
xchg
or
pop
and
xor
add
inc
aam
cli
js
xchg
mov
sub
fcmovu
sahf
sbb
xchg
aad
adc
test
xor
xlat
sbb
jnp
dec
ja
cmc
xchg
jl
mov
xchg
xchg
jge
inc
insl
or
xchg
sbb
cwtl
clc
jnp
or
in
mov
mov
mulb
or
push
fwait
mov
shlb
inc
sbb
cmc
push
ljmp
out
adc
xor
hlt
mov
call
fisubrs
js
data16
push
mov
fcomi
mov
insb
sti
xchg
scas
sbb
add
pop
jp
pop
inc
in
in
xchg
repnz
into
push
jmp
mov
jae
mov
stc
les
inc
jbe
cs
inc
fsts
mov
xor
icebp
daa
ljmp
lods
sbb
xchg
sarl
loopne
sbb
fisttpl
or
rcll
xchg
pop
gs
mov
jl
sub
lock
pop
mov
popf
into
cld
jl
add
sub
dec
or
xchg
add
push
int3
repz
stc
mov
pusha
out
push
sahf
sbb
mov
inc
push
clc
test
dec
add
xchg
mov
fadd
mov
xchg
mov
sbb
mov
js
lahf
pop
mov
adc
pop
popa
loope
cli
xchg
mov
imul
call
push
dec
test
test
sub
xchg
fistps
sub
cmp
in
mov
adc
lods
test
sub
pop
sub
inc
aad
xchg
imul
xchg
test
dec
js
addr16
call
int3
mov
ss
sbb
xchg
inc
xchg
xchg
jns
mov
jg
nop
xchg
outsl
push
mov
cmp
int3
cld
xchg
loopne
call
xchg
mov
cwtl
orb
enter
icebp
gs
mov
loopne
fs
aam
mov
jbe
rcrb
hlt
data16
xor
xchg
pop
shrb
push
repz
mov
push
cli
pop
xchg
sbb
test
int3
push
jnp
xchg
inc
ja
inc
cmp
out
aas
add
add
insl
test
loope
les
ljmp
xor
lcall
fldpi
inc
mov
dec
int
cmpl
lods
call
pop
sbb
push
in
sbb
test
negb
fwait
push
or
data16
in
enter
jp
mov
xchg
xchg
add
stos
adc
xchg
lret
lea
enter
das
repnz
into
lock
mov
adc
leave
cwtl
mov
shl
fdivrl
pop
insb
dec
and
push
xchg
jno
or
xchg
sub
add
mov
rcrb
or
call
xor
stc
shrl
fdivl
pop
xchg
rorb
lock
jge
xchg
pop
js
mov
sbb
aas
xor
xchg
xor
add
xchg
out
mov
and
adc
lds
jl
xchg
mov
cmp
sbb
sub
and
mov
xchg
jl
cbtw
or
sbb
cmc
mov
pop
push
xchg
mov
jne
jns
enter
call
mov
xchg
les
adc
lock
add
adc
out
test
aad
mov
data16
or
cmc
and
out
xchg
mov
xchg
xchg
jbe
lahf
inc
mov
xchg
inc
mov
push
mov
mov
in
xchg
or
aaa
xchg
xchg
daa
outsb
jae
hlt
inc
pop
das
sbb
in
lods
imul
loopne
test
in
aam
pop
imul
xchg
adc
or
fisttpll
movsl
jns
pusha
inc
cltd
xchg
clc
pop
in
cmp
sub
popf
mov
cmp
pop
dec
adc
jg
xchg
loop
jb
movsb
rclb
jecxz
xchg
xchg
pop
inc
jns
dec
ret
sbb
les
xchg
hlt
or
and
lock
lret
xchg
jmp
data16
xchg
push
jg
orb
inc
orb
push
mov
out
mov
xchg
sahf
in
mov
xchg
xlat
sub
std
test
adc
andb
out
lods
pop
shl
neg
sbb
cmp
aam
test
std
xchg
dec
mov
inc
push
add
cli
xchg
pop
or
pusha
xchg
les
out
enter
sbb
scas
push
addr16
into
ds
popa
jne
and
jge
lcall
inc
xchg
incb
or
sbb
cmp
inc
mov
repnz
scas
sbb
jnp
fcomps
add
scas
shlb
and
iret
popf
in
xor
mov
and
xchg
mov
cmp
in
sahf
addb
pop
and
aam
sbb
test
jbe
mov
push
aad
xchg
fcoml
sbb
popf
test
imul
inc
repnz
ficomps
xchg
sub
jp
mov
gs
xchg
pusha
popa
lock
cmp
xchg
dec
push
xchg
nop
test
xchg
cmp
js
ljmp
xchg
mov
rcrl
repz
repnz
mov
adc
into
lods
xchg
mov
jb
jns
rcr
jecxz
aam
inc
sub
and
test
mov
mov
lock
jp
pusha
push
xchg
test
pop
cmp
fwait
cmp
xchg
jecxz
sub
mov
leave
push
sbb
lahf
adc
paddsb
inc
sbb
xchg
sub
jg
scas
adc
pop
inc
and
cmp
into
xchg
int3
push
xchg
jnp
in
sahf
xchg
scas
jg
xor
sbb
and
push
lods
jo
xor
xchg
popf
adc
pop
xchg
sbbl
sbb
cwtl
cmp
aas
jno
sahf
out
dec
mov
mov
adc
xor
test
cmp
xchg
aas
test
pop
adc
popa
jecxz
sub
lahf
xchg
icebp
and
inc
mov
mov
fidivrl
cmpsb
adc
xor
leave
stos
push
pop
mov
mov
jp
sub
loope
les
pop
mov
mov
xchg
xchg
push
mov
loope
popf
xor
lahf
in
adcb
loope
xchg
push
inc
leave
dec
inc
or
fchs
seto
sbb
adcb
ja
xchg
fndisi(8087
mov
dec
mov
aam
pop
ret
sbb
mov
mov
inc
xchg
sahf
test
lods
rol
xor
pop
cltd
in
pop
jns
jl
loop
mov
cmp
pop
lods
and
adc
pushl
js
hlt
rolb
mov
xchg
add
sbb
cmpsb
add
pop
cmc
loope
bound
xchg
leave
mov
jns
or
add
xor
test
inc
mov
push
sub
mov
sbb
cmp
nopl
pop
push
add
adc
cs
out
xchg
std
je
in
add
data16
sbb
ljmp
add
pop
xchg
and
jp
adc
mov
lds
dec
xchg
idivl
and
pop
iret
xchg
js
jno
pop
fistl
repnz
xchg
xor
mov
xchg
xchg
out
insb
or
cmp
or
fistl
fistps
cmpsb
mov
int3
dec
xor
movsl
dec
pop
xchg
adc
mov
cmp
pop
adc
xchg
add
pop
in
mov
clc
mov
ret
sbb
movsb
lcall
aam
movsb
ja
lea
call
movsb
pop
xchg
cmp
push
jo
xchg
adc
fwait
sub
icebp
pusha
inc
xchg
fs
adc
mov
push
mov
gs
pusha
fdivrl
enter
adc
xlat
pop
dec
xor
int3
std
xchg
das
repnz
int
jmp
and
jle
int3
mov
push
pop
adc
mov
lea
int3
or
lret
mov
jl
jae
pop
mov
cmp
mov
lea
in
mov
sbb
xlat
mov
icebp
pop
sbb
xor
push
fcoml
gs
inc
xchg
mov
mov
sete
cmp
fsubs
inc
test
orb
push
fidivrl
xchg
pop
ror
divl
jne
cld
xchg
inc
xchg
rcr
jae
lea
lret
and
cmp
xchg
jbe
pop
pop
sbbb
loope
aam
arpl
and
jg
mov
pop
scas
fs
add
cmp
mov
and
add
aam
stos
adc
sbbl
or
xchg
mov
dec
pop
mov
jns
fcmovne
mov
xchg
dec
addb
ret
lods
xchg
int
xchg
mov
lcall
or
bound
popf
mov
clc
cltd
adc
or
pop
daa
sbb
mov
out
mov
jnp
aam
jae
stc
int
sub
pop
cmp
xchg
hlt
cmp
jne
or
xchg
mov
push
lret
rorb
popf
daa
pop
add
pop
cmp
push
shl
xchg
dec
pop
cmpsl
pop
in
dec
adc
loop
push
xchg
cld
jle
lret
sbb
xchg
hlt
in
mov
xchg
add
pop
pop
mov
pop
sbb
dec
or
xchg
pop
test
je
jno
fdiv
fs
xchg
xchg
pop
push
pop
nop
pop
adc
mov
xchg
inc
jge
cmp
lahf
xor
dec
mov
dec
out
aam
bsf
pop
aam
call
and
sbb
gs
mov
js
and
ror
xchg
int
and
jecxz
test
xchg
adc
cmp
lea
arpl
jl
xchg
std
cli
xor
lods
lods
adc
fsubs
inc
adc
out
lods
addl
push
push
push
adc
cmc
addr16
enter
pop
add
xchg
add
xchg
sbb
jl
jp
mov
sbb
fsubrl
mov
mov
test
aam
shrl
mov
mov
lret
fdivl
mov
and
in
in
inc
mov
jae
sahf
sti
clc
sbb
push
xorb
int3
sbb
cmp
ss
dec
les
xchg
ljmp
add
mov
lds
lcall
xchg
mov
xchg
cmp
push
mov
fs
divps
xchg
push
and
xchg
pop
mov
das
in
xchg
aad
inc
ret
sbb
xchg
or
xchg
and
pushf
sahf
cli
mov
incl
fwait
push
mov
xchg
cmpsb
jnp
cmp
xchg
xlat
andl
in
scas
loope
xchg
push
xchg
int
sbb
sahf
xor
adc
loope
insb
xor
daa
xchg
xlat
popa
add
pop
sbb
sbb
pop
jnp
pop
sbb
fcmovbe
xlat
add
lods
add
mov
xchg
xchg
stc
in
in
cmp
insb
or
jno
scas
xchg
js
sbb
in
sahf
push
mov
nop
std
loop
aam
xchg
jnp
fwait
jge,pt
or
dec
mov
stos
lret
mov
jge
nop
imulb
xchg
pop
pop
loope
fbld
mov
adc
xchg
call
dec
movsl
or
mov
sti
mov
mov
subb
xchg
fsubs
jno
xor
mov
xchg
mov
loope
arpl
insl
jg
nop
or
sbb
jno
imulb
push
push
lods
pop
lcall
js
sub
nop
xchg
xor
cs
movsb
aaa
xchg
mov
or
xor
sbb
aam
dec
dec
cmp
jns
sbb
or
xchg
data16
pop
xchg
jecxz
arpl
ret
shlb
cmp
xchg
fidivs
clc
lods
jge
cmp
cmp
mov
add
adc
jo
push
sub
sbb
mov
jecxz
xchg
xchg
test
inc
xchg
push
pushl
jecxz
or
in
cwtl
pop
mov
add
out
mov
pop
mov
inc
jb
nop
lea
sbb
xchg
ret
and
cmp
mov
xchg
pop
pop
adc
mov
aam
adc
jle
or
mov
fdivp
iret
out
or
popf
sub
pop
pushf
test
gs
movsl
xchg
clc
pop
out
xorl
or
mov
outsl
xchg
mov
rclb
add
movsl
jns
xchg
ficoms
adc
aas
lcall
mov
inc
in
inc
test
adc
insb
mov
sub
les
mov
lea
inc
pop
mov
ja
xor
pop
shll
jbe
xchg
pop
cmp
adc
pop
aam
sbb
sbb
fwait
mov
sbb
aam
mov
dec
push
push
cmc
sbb
clc
daa
fcmovbe
aam
shll
jl
cmp
stc
xchg
lock
mov
lds
mov
pop
scas
xor
notl
or
ror
lcall
dec
jecxz
out
arpl
cltd
cmp
roll
dec
out
inc
es
dec
jl
pop
loop
pop
aam
xchg
mov
cmpsl
scas
sbb
pop
xchg
rorl
pop
loopne
adc
xchg
out
pop
test
push
adc
lcall
adc
push
sbb
hlt
mov
xchg
adc
out
add
cmp
adc
jecxz
cmp
test
or
gs
insb
fwait
sbb
mov
mov
sbb
mov
pop
add
aam
push
mov
js
lcall
ret
push
lods
xchg
pop
decb
popa
adc
int
sub
loopne
in
aam
rcrb
lock
icebp
lret
aad
call
xchg
cmp
xor
insl
in
movsb
cmp
push
test
push
fistl
xchg
and
aaa
mov
adc
push
jno
scas
xchg
and
nop
inc
dec
xchg
adc
lcall
loop
es
inc
push
xchg
lods
popf
sub
adcl
add
pop
jne
aam
adc
test
inc
xor
and
inc
lods
pushf
xchg
add
ucomiss
mov
mov
subl
fnsave
lods
xchg
ljmp
movsl
sub
sub
mov
xor
popf
imul
pop
cld
xchg
add
in
mov
push
ss
pop
test
and
je
cwtl
sbb
popa
xchg
jo
mov
arpl
rcrb
test
call
test
xchg
xor
dec
push
sbb
imul
test
pcmpeqd
cmpsl
xchg
cmp
sti
push
jnp
xchg
lods
cltd
mov
lock
xchg
addr16
lcall
mov
mov
ret
ficoms
xchg
int
mov
adc
xchg
loopnew
sbb
jl
mov
and
xor
scas
sub
xchg
pop
ljmp
xchg
movsl
jmp
addb
jb
push
xchg
inc
push
lcall
cwtl
jnp
lods
mov
mov
sbb
test
pop
sbb
stc
mov
adc
mov
sub
sbb
outsb
inc
pop
lods
pop
aam
aam
xchg
lock
lret
sbb
pop
adcl
out
pop
xchg
pop
push
movsw
xchg
adc
pop
jne
scas
int
cs
fwait
mov
fdivr
jnp
inc
fsubl
sbb
xchg
adc
ret
adc
jge
cli
cmp
mov
push
div
pop
out
dec
push
jbe
ror
leave
fmul
xchg
push
push
pop
jg
sbb
xchg
pushf
push
scas
jbe
sti
into
xlat
xchg
push
cs
adc
aad
push
adc
mov
loop
cmp
pop
sub
jbe
mov
pop
in
std
vmptrld
mov
mov
pop
clc
movsl
xchg
or
xchg
arpl
pop
dec
xchg
out
fucomip
in
jle
adc
ljmp
or
push
adc
hlt
pop
and
xchg
dec
sbb
push
jmp
mov
hlt
insl
cld
inc
inc
mov
and
popf
xchg
jae
or
pop
and
aam
mov
hlt
and
jl
jae
jge
hlt
xchg
sahf
jp
xchg
out
jbe
icebp
mov
lock
fs
pop
push
test
mov
stc
cmp
push
notl
aas
rolb
les
popf
push
nop
dec
jns
mov
mov
in
ret
repnz
outsl
xchg
lcall
icebp
sbb
stc
jle
pop
cld
adc
popa
ficoml
mov
pop
adc
nop
cs
ss
sub
shll
mov
cld
scas
stos
add
mov
movl
popf
orb
cwtl
test
imul
jg
xchg
push
xor
scas
and
pop
gs
addr16
pop
rorl
push
lds
inc
cld
imull
pushl
jl
add
cmp
mov
int3
sbb
push
sahf
cmc
shlb
mov
or
xchg
cld
jecxz
mov
testl
call
and
xchg
jmp
imul
into
xchg
xchg
cmp
xchg
lock
xchg
cmc
sbb
or
mov
loopne
mov
rcrb
xchg
rcrl
stc
popf
mov
icebp
sbb
inc
int3
imul
sbb
cmp
cmp
aam
das
push
inc
repz
daa
add
pop
mov
test
xchg
sub
mov
sub
xchg
ljmp
aaa
fstl
loopew
xchg
mov
fstpt
push
faddl
mov
xchg
pop
shrb
push
add
dec
hlt
adc
in
mov
imul
push
add
outsl
nop
xor
xchg
inc
orb
roll
cmp
sbb
sti
mov
in
leave
lds
and
sti
mov
cmp
add
and
ljmp
lds
xchg
jg
rolb
push
xchg
xchg
std
enter
jecxz
add
mov
lcall
mov
or
xchg
sbb
push
dec
pop
xchg
mov
fnstcw
and
das
gs
sub
xchg
lods
stos
popf
mov
les
xchg
aam
int
jne
jo
xchg
or
xchg
movsl
pop
in
xlat
js
shlb
cmp
xchg
adc
into
sbbl
or
loop
xorl
jecxz
xchg
or
dec
or
sub
cli
xchg
sbb
adcl
pop
shrl
out
xchg
les
push
adc
xor
loopne
dec
inc
popf
or
mov
mov
xchg
out
cmp
testl
cmpb
xchg
sbb
out
inc
stc
mov
dec
xchg
cltd
push
push
jle
jmp
xchg
mov
in
cli
sbb
dec
rorb
and
test
movsb
cmp
xor
adc
xor
mov
sbb
fs
aaa
je
sbb
push
in
fs
mov
test
lods
xchg
mov
mov
ljmp
adc
and
cmp
enter
xchg
popa
scas
mov
add
lods
aam
test
arpl
adc
mov
test
in
xlat
or
push
mov
cmp
jge
and
cmp
cld
mov
ud1
std
sbb
loopne
lods
call
flds
addb
aam
sti
mov
mov
inc
aam
xor
sbb
int3
out
mov
inc
push
xchg
je
pop
add
cmp
pop
loopne
mov
cld
inc
mov
xchg
and
cmpsb
cwtd
adc
outsl
mov
es
jp
cs
mov
fwait
loope
scas
je
clc
cwtl
adc
xchg
mov
and
xchg
push
and
mov
imul
ja
ds
xchg
xchg
mov
add
test
nop
and
cltd
repnz
outsl
xchg
scas
out
imul
out
sbb
mov
xchg
jmp
addr16
xor
add
xchg
inc
std
sar
stc
sub
jb
lret
cmc
xor
jbe
pop
sti
popa
sahf
aam
sub
add
hlt
lahf
cmp
and
xchg
daa
cmc
ficompl
mov
cmpsb
mov
push
fs
xor
pusha
mov
pop
mov
js
sbb
out
popf
pop
popf
dec
mov
pop
cmp
divb
repz
insl
rclb
stos
pop
add
adc
pop
insb
lcall
jle
sbb
adc
fstpl
mov
mov
test
fisttps
xchg
lahf
mov
mov
adc
sbbl
xor
and
sbb
movsl
sbb
xor
mov
mov
data16
xchg
sub
or
add
pushf
cwtl
sbb
pop
pop
mov
fists
setb
scas
sahf
xchg
or
mov
jp
scas
dec
jnp
adc
xchg
cmp
lcall
shlb
pop
push
sti
xchg
pop
jns
cmp
sub
int3
jmp
mov
mov
jae
pusha
pop
add
xor
xchg
inc
inc
xchg
mov
xchg
je
mov
add
cmc
pop
sbb
mov
sbb
xchg
and
aam
popf
mov
mov
mov
scas
xchg
mov
cmp
sbb
bound
inc
push
mov
mov
jg
pop
test
push
lcall
pop
xchg
sbb
cs
and
cmp
cmpsb
dec
add
jb
cld
out
xchg
out
push
cmp
ret
xchg
mov
les
pushf
dec
xor
ja
in
jb
xchg
and
lcall
mov
lock
sbb
xchg
mov
sbb
push
fstl
cmp
in
and
cmp
and
or
arpl
lcall
sahf
pop
fcoml
xor
mov
and
daa
test
test
cmp
mov
jnp
xlat
xchg
outsb
call
fildl
xchg
test
add
mov
call
sbb
sbb
test
jecxz
xchg
pop
mov
jp
rcrb
int3
adcb
fwait
dec
xchg
pop
clc
arpl
and
cli
add
shl
addr16
pop
xor
cltd
push
pop
scas
fistl
jge
addl
fadd
sbb
xchg
in
mov
repz
adc
lcall
xchg
pop
jnp
sbb
sbb
and
int3
aad
notl
or
adc
adc
xor
cmp
cs
aam
mov
dec
mov
mov
jp
jns
mov
push
mov
cld
je
dec
jecxz
hlt
pop
mov
xor
mov
sbb
lret
leave
fsubrl
fdivl
shrb
fwait
jl
sbb
in
push
ss
sbb
imul
sub
xchg
or
inc
mov
pop
jecxz
mov
pop
and
xchg
movsb
out
pop
inc
repz
pop
popf
mov
adc
jns
push
loope
popf
shll
inc
in
pop
dec
iret
out
xchg
cld
jns
cwtl
inc
mov
into
xchg
jmp
xchg
cmp
or
sbb
inc
jae
loopne
sbb
sbb
pop
cli
cmpsl
jg
xchg
fdiv
xor
push
mov
xchg
mov
xchg
jb
jp
jnp
sahf
lods
xchg
xchg
mov
push
pop
movsb
mov
jecxz
fwait
inc
adc
and
sti
dec
lods
popf
les
xor
sbb
mov
or
mov
xchg
ljmp
ja
int3
xchg
testb
mov
pop
packssdw
push
xchg
bound
mov
movsb
rcrl
and
xchg
push
jmp
adc
aam
jmp
inc
mov
or
xlat
pop
outsl
call
push
and
outsl
xchg
cmc
je
test
sbb
aam
jns
popf
adc
fwait
aas
jo
sti
push
mov
sbb
out
movsb
push
call
stos
xchg
and
mov
xor
in
pop
hlt
andb
and
jnp
data16
sbb
mov
fdivr
jmp
test
in
jp
mov
js
addr16
xchg
stc
lahf
out
add
fwait
jecxz
mov
xchg
cld
or
lods
add
rcll
xchg
adc
and
sub
pop
xchg
xchg
and
test
insl
sbb
adc
cmc
rcrb
pop
shlb
jge
inc
cmpl
enter
sbb
dec
cwtl
sub
push
xchg
adc
sbb
xchg
mov
loope
adc
lcall
mov
jmp
inc
addr16
cmp
xor
xchg
sbb
int3
push
mov
mov
mov
lods
xchg
cmp
and
xchg
lods
mov
fucom
cli
mov
jg
cmc
gs
pop
in
mov
or
sbb
popf
push
popa
cmp
lret
or
and
aaa
sub
sbb
pop
test
mov
pusha
inc
cmpl
shrl
std
in
out
adc
ljmp
jmp
sub
xchg
mov
inc
stc
mov
mov
or
lcall
adc
cli
fiaddl
mov
xchg
imulb
sbb
pop
rcrb
mov
push
and
inc
int3
out
xor
sahf
popa
or
push
les
jge
mov
sub
lods
cmp
out
daa
add
scas
ja
xchg
dec
xchg
pop
mov
sub
adc
sbb
mov
movsb
inc
test
xchg
decb
or
out
push
or
sbb
or
xchg
mov
out
inc
xchg
push
mov
cltd
jns
cmc
xchg
add
sub
xchg
adc
mov
movsb
cmc
lahf
pop
mov
xchg
in
pop
push
mov
cli
xchg
sbb
test
push
popf
mov
and
cs
cmp
and
mov
shl
cmpsl
push
movsl
or
push
rcr
mov
add
pop
aam
lea
push
inc
sbb
fiadds
push
cmpsb
pop
pop
sbb
in
jne
add
cld
cs
jae
adc
ljmp
xchg
inc
add
jne
pushf
pop
inc
int3
mov
mov
jb
inc
test
sbb
shll
popf
imul
pop
dec
sbb
ja
pop
push
inc
jp
dec
pop
int3
lods
mov
movsb
out
mov
dec
outsl
in
push
xor
add
mov
xchg
insb
faddl
lret
xchg
sbb
pop
popf
call
sub
xchg
movb
and
mov
pop
movsb
movsb
mov
lret
in
scas
adc
mov
sbb
xchg
mov
fucom
jae
scas
or
out
mov
jmp
ds
leave
xchg
push
bound
mov
shrb
xor
push
mov
sbb
mov
jl
das
sbb
cmp
jb
imul
fs
stos
push
xchg
mov
mov
lock
test
ret
movsb
fists
int
sbb
cld
push
add
add
lahf
cwtl
pop
ds
xchg
add
mov
push
loopne
mov
cmp
pusha
mov
popa
xor
hlt
xchg
jl
sub
cli
sbb
nop
jns
or
dec
inc
cld
adc
mov
push
aam
lcall
movsl
repz
jno
cmp
ficompl
les
fistpl
xchg
cld
ffree
xor
mov
sbb
aad
jp
sub
sub
xor
adc
stos
sbb
outsb
push
sub
xor
lods
xchg
in
ss
dec
sbb
popf
popf
mov
add
pusha
xchg
loope
xchg
xorl
pop
xlat
sar
adc
fisubs
xchg
lock
and
bswap
xor
insb
jns
cmp
mov
sbb
sbb
rolb
sbb
pusha
out
mov
leave
hlt
cmpsl
xchg
mov
imul
rolb
jnp
mov
jno
das
xchg
xchg
cli
sahf
lahf
pop
push
nop
test
and
scas
xchg
ret
sbb
popa
dec
pop
sti
dec
lret
jo
aam
mov
xchg
fwait
jbe
ret
xor
xchg
adc
cmc
mov
xor
cmp
cli
mov
xchg
push
sub
mov
xor
sbb
out
xchg
mov
sub
dec
or
mov
and
mov
inc
xchg
dec
fucomip
js
cmp
inc
dec
std
adcl
xchg
into
in
adc
mov
jp
xchg
dec
mov
shll
cmpsb
pshufw
push
adc
das
mov
xchg
push
aas
int
nop
push
mov
fwait
and
in
lock
jl
cld
xorl
cli
cmpsl
clc
mov
cmp
in
out
daa
add
scas
sbb
icebp
adc
aas
addr16
mov
test
cmp
jl
daa
jecxz
int3
xchg
xor
xchg
jo
cmpsl
cmp
dec
xchg
mov
lods
xor
mov
jne
out
sbb
popa
js
xchg
pop
test
mov
shlb
sbb
pop
aas
add
insl
aaa
push
inc
sahf
adcb
jp
xchg
out
sub
lods
stos
xchg
xchg
push
jge
outsl
jb
xchg
dec
pop
jne
fdivr
push
lods
add
lods
imul
iret
mov
xchg
xchg
or
adc
lea
stos
jb
and
test
pushf
xchg
jno
or
movsb
xchg
call
lret
add
xchg
xor
das
mov
int
sbb
mov
int3
sbb
xor
enter
xor
adc
clc
rclb
lods
jbe
sub
xchg
mov
push
pop
mov
pop
jne
sub
adc
pushf
fadds
repz
cmpsb
test
push
push
lcall
xchg
daa
loope
xchg
cmp
outsb
sbb
fwait
stos
cld
sbb
xchg
sbb
pushf
xchg
sahf
scas
sub
sbb
mov
mov
shl
fwait
push
ljmp
fsub
cltd
pop
push
dec
xchg
jge
dec
mov
aad
popa
xchg
in
mov
xchg
out
pop
in
mov
add
mov
add
fwait
xchg
jg
lahf
jle
data16
xchg
pop
mov
jecxz
xchg
rcrb
mov
movsb
xchg
xor
loope
xchg
mov
pop
xchg
mov
rcrl
clc
les
hlt
and
sbb
mov
repnz
sbbl
stos
fdiv
mov
or
movsb
divb
push
mov
in
cmc
aam
lcall
fs
xor
sub
pop
cmp
add
or
cmpsl
adc
push
popf
int3
lsl
shl
shrb
adc
lods
cli
cwtl
xor
jne
inc
ret
mov
ficompl
mov
xchg
xchg
out
adc
add
xor
aad
inc
fwait
dec
fcmovne
or
adc
sbb
movsb
int3
das
rclb
test
inc
hlt
sbb
test
test
sbb
negb
in
xchg
pushfw
mov
sahf
aad
subl
enter
jno
inc
add
adcl
test
scas
lods
xchg
sbb
imul
lock
call
add
sbb
pop
clc
and
mul
rcrl
ret
lcall
ljmp
xchg
jg
enter
mov
jl
add
aas
sbb
xchg
daa
adc
lahf
inc
out
pop
pushf
lods
lret
arpl
sbbb
enter
idiv
or
aam
movsb
repnz
mov
add
sbb
adc
lods
test
and
jecxz
mov
xchg
setg
sbb
and
jbe
mov
sub
push
jo
xchg
push
nop
addb
sahf
pop
add
mov
lcall
cmp
aad
xchg
mov
lcall
mov
xchg
mov
sahf
jl
fwait
call
pushf
movsl
mov
xchg
into
xchg
ret
mov
jnp
pop
fadd
xchg
bound
sahf
cmp
push
fwait
xchg
mov
mov
mov
stos
xor
scas
cmp
sbb
insb
push
mov
scas
sahf
stos
cmp
insb
pop
xchg
aaa
cmp
lods
push
loope
push
sbb
mov
or
mov
xor
cltd
adc
and
cmp
xchg
lahf
loopne
call
cld
das
cmpsb
aam
ret
push
xchg
jecxz
sub
push
mov
scas
movsb
fwait
xchg
cmp
rorl
loope
xchg
push
lcall
iret
loopne
pushf
mov
or
loope
fistl
test
pop
xchg
mov
xchg
pushf
xchg
xchg
adc
xchg
inc
leave
cmp
xchg
push
xor
xor
in
std
lret
incl
mov
test
fwait
xchg
pop
mov
cli
push
xchg
in
shl
pusha
jae
mov
mov
in
hlt
xchg
or
cld
mov
pop
sbb
loop
jbe
aam
pop
add
xchg
jo
sbb
in
xchg
adc
mov
imull
test
jge
lods
mov
rcrl
mov
and
dec
mov
mov
hlt
lcall
sbb
loopne
xor
cld
mov
lock
out
int
xchg
inc
push
adc
jp
cmc
xchg
cmpsb
and
lock
iret
mov
ljmp
orl
sub
inc
xchg
dec
mov
lret
xor
lods
pop
mov
loopne
into
dec
fwait
sub
xor
lahf
and
aaa
adc
test
fsubs
push
adc
aam
lock
aam
das
lds
pushl
out
xchg
sbb
clc
or
lock
aam
aam
pop
xor
xchg
pop
xor
xchg
pop
push
mov
xchg
xchg
or
outsb
and
and
sbb
aam
scas
adc
sbb
pop
jmp
shl
int
xchg
sahf
xor
dec
jmp
adcb
aad
adc
push
in
or
pop
adcl
out
scas
xchg
fdivs
or
test
fistpll
push
ljmp
rcll
shl
repz
xchg
push
nop
pusha
push
jl
movsb
rclb
lods
std
jne
sarl
mov
cmp
or
add
hlt
dec
adc
dec
push
mov
divl
jne
lret
pop
xchg
adc
xchg
add
fsubrs
cmp
js
nop
jmp
cli
or
xchg
push
xchg
jge
pop
fwait
aaa
mov
adc
push
adc
mov
xor
testl
outsb
xchg
fcmovb
mov
xchg
mov
jle
daa
fwait
xor
xchg
aam
sbb
jae
popf
call
movsb
sbb
cvtps2pd
or
add
in
in
bound
jl
test
sbb
xchg
mov
in
push
mov
xlat
xchg
loope
mov
test
into
stos
lcall
cli
mov
pushf
xchg
arpl
into
aas
adc
in
nop
notb
aam
daa
adc
pop
xchg
dec
jmp
xchg
aas
popl
mov
pusha
arpl
sbb
movsb
pop
daa
xor
mov
inc
xchg
xchg
add
push
sahf
loopne
das
mov
sbb
aam
in
out
sub
xchg
push
jno
std
jbe
push
fstp
dec
movsb
xchg
pop
mov
scas
fbld
arpl
iret
add
loopne
xchg
lods
xor
push
bnd
or
xchg
add
add
mov
mov
int
popl
mov
lock
test
ss
es
in
mov
mov
test
arpl
mov
cli
adc
sahf
adcb
mov
outsl
pop
adc
xchg
or
repz
sub
mov
mov
xchg
aam
mov
dec
mov
sbb
add
xor
imul
rcrl
int3
xchg
aas
mov
xchg
jecxz
lret
data16
xchg
cli
mov
or
lods
and
stos
dec
xchg
dec
sub
movsl
add
jbe
loope
mov
shrl
xchg
jo
les
call
pop
adc
in
xchg
xchg
pop
adc
xchg
or
cmp
dec
sub
fwait
add
shl
xchg
fists
arpl
mov
cli
test
xchg
pop
mov
add
push
jns
or
jb
xchg
mov
xchg
loop
in
in
xor
push
xor
repz
xchg
popf
xchg
sbb
mov
jl
punpckhbw
xor
arpl
in
cmp
push
inc
xchg
into
fistl
mov
xchg
jbe
mov
aam
dec
clc
into
xchg
cmp
xchg
cmp
das
fwait
add
and
mov
lock
add
sbb
mov
scas
add
scas
cmp
imul
mov
inc
movsb
jp
xor
call
push
xchg
loopne
rorb
sbb
scas
xor
cwtl
int3
outsl
idivb
aam
push
pop
push
es
adc
xchg
jae
cmp
cmpsl
lods
xchg
sub
sub
xchg
popa
inc
xchg
stc
in
xchg
xorl
aad
loope
std
xchg
imul
pop
and
adc
jo
shlb
xchg
shll
testl
push
rorl
out
pop
sub
xchg
test
ret
xchg
or
popf
and
mov
movsb
lret
lahf
movsl
mov
xchg
pushf
jecxz
jp
mov
lcall
int3
cli
xchg
xchg
push
add
mov
push
cwtl
xchg
fsubr
add
cmp
loopne
inc
movsb
xor
sub
xchg
mov
jae
arpl
in
popa
xchg
jge
mov
call
xor
mov
pop
hlt
cmp
loope
xchg
call
mov
mov
and
pop
add
imul
inc
pop
inc
sbb
xchg
movsl
dec
mov
lret
pop
loop
mov
mov
fiaddl
adc
fmull
cmp
xchg
xchg
xor
sbb
popf
push
or
das
and
fstpt
sbb
adc
or
js
xchg
fwait
leave
je
scas
pusha
cmpsl
xchg
shlb
sub
xchg
or
sub
fldt
out
pusha
addr16
loop
mov
aas
jecxz
dec
in
lcall
pop
fwait
loopne
movsb
mov
test
and
test
subb
sbb
pop
add
pushf
push
dec
cmp
xchg
jae
shrb
scas
adc
movsb
ja
mov
and
sahf
cld
int3
sub
xor
adc
and
nop
cmp
scas
pop
cmc
xor
dec
mov
cld
jo
ja
add
pop
pushf
mov
fistpl
mov
movnti
cld
inc
pop
sahf
sub
or
xorb
test
fistpll
xchg
out
xchg
xchg
push
das
or
xchg
xchg
inc
dec
inc
mov
xchg
aam
jl
xchg
push
loope
movsb
mov
dec
and
jbe
repz
clc
rcll
out
inc
fidivrl
xchg
sahf
xor
cltd
std
jl
add
test
movsb
call
pop
adc
and
das
in
mov
mov
jns
xchg
shlb
sbbl
pop
or
repnz
cmp
call
mov
add
xor
lock
pop
adc
push
xchg
jns
xchg
lcall
popf
sbb
aam
out
gs
sti
js
fwait
jge
mov
aam
pop
rorb
jl
xchg
sub
test
lret
les
imull
mov
shrb
and
inc
fisttpl
xchg
je
imull
xchg
loop
and
mov
sti
sbbb
sub
fwait
cmp
cmpsl
add
jl
xchg
cwtl
or
sbb
movsb
mov
dec
scas
pop
jns
cmp
out
loope
add
pusha
or
xchg
mov
subb
es
jb
addr16
rclb
test
xchg
les
xor
sbb
out
js
push
cmp
xchg
jns
jecxz
lock
xchg
stos
rcll
mov
roll
ret
idivl
nop
sti
orl
fisubrs
xor
xchg
cmp
lahf
insb
or
xor
inc
movsb
or
out
lods
clc
pop
ljmp
sub
fs
test
movlps
pusha
inc
test
imull
test
inc
hlt
push
out
jb
loopne
movsl
sti
cmp
lahf
das
scas
push
mov
xchg
mov
sbb
jns
pushf
fwait
add
and
sbb
cmc
dec
cld
push
mov
push
out
ss
xorl
fwait
arpl
sub
inc
mov
iret
and
xchg
pushf
ret
js
clc
pop
sub
xlat
std
dec
aam
hlt
iret
roll
xor
mov
jne
icebp
jo
pop
mov
mov
call
mov
daa
fnstenv
sbb
jecxz
repz
ds
clc
add
xchg
lock
mov
xchg
mov
ss
negb
sbb
sub
test
xchg
adc
pop
or
adc
push
add
cmpsl
lret
adc
adc
mov
aaa
jae
lods
or
jbe
cmp
mov
call
lods
ficoml
push
nop
pop
in
popf
ret
popf
and
or
cmp
or
xchg
jge
mov
fists
mov
lret
stos
xchg
mov
aaa
std
div
cmp
fcmovne
lods
mov
out
mov
cmp
push
testb
aam
sbb
xchg
sbb
lea
xchg
dec
and
loopne
cmp
in
sarb
sti
out
adc
mov
lea
loopne
aad
xchg
out
jp
sbb
sbb
lcall
rorb
aas
and
mov
cmc
push
dec
push
push
mov
stos
pop
nop
les
pushf
into
add
jnp
lcall
sbb
xchg
xchg
sti
scas
mov
cwtl
jb
add
mov
push
scas
arpl
mov
cmp
dec
xchg
fsts
xlat
popa
xchg
fwait
add
push
rcrl
fsub
mov
push
push
pop
nop
adc
cmc
or
xchg
xchg
fnstenv
nop
xchg
inc
cmpsb
inc
mov
dec
movsb
sar
dec
fildl
cld
mov
dec
sub
outsl
aam
cmp
xchg
test
adc
sbb
jl
xchg
sub
xchg
mov
fs
loop
mov
add
in
adc
push
xor
xchg
xor
test
stos
movsb
xchg
scas
inc
sbb
or
ficoml
xlat
xchg
mov
pop
cmp
xchg
push
sbb
or
dec
rcrb
xor
pop
inc
fsubl
xchg
cltd
add
pop
lahf
xchg
mov
lock
xchg
jb
gs
and
mov
mov
cmp
xchg
pop
notb
loop
sbb
jg
sbb
adc
test
adc
lock
or
pop
cmp
sbb
test
jge
pop
mov
mov
or
mov
jg
mov
xchg
cmpsb
xor
or
xor
inc
sti
xchg
cmp
out
mov
jo
scas
push
out
movsb
jle
add
andb
arpl
sub
xchg
add
pop
mov
cmp
fmul
xchg
test
mov
push
xlat
add
add
lcall
jecxz
hlt
sub
call
nop
mov
mov
xor
pop
test
xchg
mov
push
cmp
fs
inc
in
in
fidivs
sti
aam
das
push
pop
sub
aam
rorb
jb
repz
xchg
stos
mov
out
xchg
and
lret
fcmovbe
xchg
add
adc
push
push
nop
sbb
dec
xchg
inc
push
xor
mov
lods
out
xchg
add
pushf
lahf
data16
cmp
cmp
mov
nop
mulb
rorl
push
stos
lret
into
xchg
cmp
dec
or
xchg
jae
xchg
addr16
movsb
pop
push
loope
loopne
and
popf
and
xor
pop
les
mov
fwait
xchg
ret
and
into
lock
mov
xchg
popf
out
mov
leave
inc
call
mov
adc
xchg
jns
xor
nop
mov
in
cwtl
ja
imull
ret
mov
xchg
xor
lea
lock
dec
adc
pop
popa
test
std
sbb
mov
xchg
and
hlt
lcall
add
iret
clc
xor
ret
xchg
scas
addl
lock
xor
and
pop
sbb
inc
ljmp
bound
inc
cwtl
or
lcall
xchg
cmpl
adcl
push
sbb
sbb
xor
add
mov
sbb
aam
scas
in
mov
sbb
add
jl
lods
shll
out
lods
mov
push
popf
sbb
shl
pop
adc
or
pop
inc
bound
jae
push
popa
dec
rclb
jne
fstl
call
xchg
sbb
fcmovnb
cwtl
adc
jb
test
in
movsb
dec
ficoml
jae
ret
lahf
xchg
mov
push
scas
mov
sbb
mov
xchg
lock
add
xchg
inc
pushf
lods
sbbl
inc
xchg
jg
cmp
inc
out
add
xchg
mov
xor
pop
arpl
pop
adc
cmp
adc
ret
sbb
sub
testl
rcrb
stos
das
jae
cld
rolb
sbb
jbe
lods
sbb
je
push
or
and
mov
lahf
mov
pop
lods
sahf
test
pminsw
push
push
xlat
cmp
xchg
adc
mov
sahf
inc
fdivs
and
mov
int3
rcr
cld
pop
sbb
test
scas
adc
adc
mov
mov
in
into
or
sbbb
imul
xchg
int3
ret
decl
rcrl
xor
addr16
sbb
mov
addr16
out
adc
pop
lret
mov
test
mov
cmpsb
or
aam
xchg
ljmp
in
in
scas
mov
ja,pn
std
aam
imul
xchg
inc
or
lahf
xchg
lds
xchg
adc
daa
outsb
clc
and
ss
aam
test
cltd
pop
xchg
sbb
cli
sti
add
adc
push
cwtl
subb
lods
xchg
clc
adc
lret
cmpsl
sub
adc
fwait
inc
rorb
mov
lahf
js
sti
add
mov
leave
clc
fists
mov
dec
mov
add
xorb
fwait
sbb
lcall
mov
aas
mov
daa
fmull
xchg
jb
dec
pushf
xchg
cwtl
or
xchg
incl
int3
test
cwtl
or
insb
out
adc
lcall
push
push
sbb
aam
mov
and
mov
ljmp
push
adcl
or
add
inc
xchg
push
in
enter
inc
addb
mov
jl
lret
pop
dec
ficompl
ljmp
inc
notl
or
call
ljmp
mov
mov
imul
mov
push
popa
sbb
cmp
insb
aam
fildll
sbb
mov
xchg
test
mov
mov
test
mov
dec
xchg
movsb
les
xchg
inc
popa
pop
xor
sbb
test
aaa
sbb
fwait
rclb
repz
lea
movsl
inc
mov
mov
cmp
and
icebp
in
xchg
mov
mov
test
xchg
push
sbb
mov
cmp
popf
ljmp
test
pop
xchg
aaa
xchg
sub
xchg
loope
insl
mov
sbb
in
or
cmp
ds
int3
adc
xchg
lcall
fsts
and
sbb
pop
in
lock
sub
mov
xchg
lock
xchg
into
out
pop
aam
popa
pop
xchg
sti
ljmp
lock
sbbb
scas
push
xchg
out
cmp
cltd
xchg
call
inc
adc
xchg
adc
add
xchg
mov
mov
sbb
jne
aad
jp
les
xchg
nop
xchg
lahf
adc
lret
mov
lods
cwtl
nop
mov
xchg
or
mov
pop
aad
xchg
stos
xchg
shrb
lea
sub
inc
test
push
stos
in
sbb
fcmovnb
lahf
rcr
jo
ret
pusha
mov
adcb
orl
mov
xor
push
lods
cmpsl
xchg
xchg
xor
cltd
test
hlt
pop
andb
and
sahf
adc
addb
pop
and
push
cmp
aam
ficoms
fcmovnu
sub
hlt
cmp
fwait
xchg
outsl
xchg
shrb
inc
xchg
or
mov
cmpsl
lds
mov
xchg
lods
adcl
aam
sub
pop
xor
xchg
mov
das
or
xchg
data16
inc
fxch
aaa
cmp
mov
jo
in
lret
cli
xchg
fs
shrl
add
rcll
and
loope
adc
subb
add
mov
fs
mov
xchg
sbb
add
loopne
mov
mov
pop
mov
dec
pop
push
fs
js
sub
xchg
dec
je
popa
andb
out
enter
sbb
in
in
mov
leave
addb
fs
push
jb
cmp
jl
or
pop
cmc
aad
ja
pop
lds
adc
repnz
sti
add
cli
imul
xchg
nop
xor
popa
inc
adc
aam
pusha
loopne
andl
add
mov
dec
xchg
jo
repz
and
adc
jb
popa
mov
aaa
lea
adc
aam
test
xor
sbb
lock
jle
test
fildl
add
pushf
xchg
repnz
mov
xchg
mov
mov
xchg
je
das
sbb
cld
xchg
inc
mov
mov
sbb
ja
lahf
xchg
imul
mov
jo,pn
mov
xchg
xor
pop
or
pop
fdiv
xchg
mov
lock
xchg
jo
negb
fcomps
cmp
dec
adc
mov
and
test
or
pop
add
fiaddl
je
js
hlt
cmpb
xchg
mov
aad
shll
aam
leave
hlt
xchg
add
cmpsl
decb
loop
ja
xchg
in
and
pop
aad
xchg
scas
and
es
je
cwtl
outsl
iret
push
pusha
int
inc
add
sbb
dec
mov
sbb
sub
je
out
outsb
clc
jl
xchg
and
cwtl
sub
xchg
aam
sub
add
sti
xchg
sbbl
nop
outsb
pop
push
xchg
and
dec
mov
xchg
movsb
xchg
test
pop
dec
xchg
sbb
xor
and
xchg
sbb
andl
loope
xchg
lret
mov
jne
aam
mov
add
add
xchg
testl
mov
fcmovne
mov
push
jnp
fdivrl
dec
mov
popf
inc
ljmp
adc
xchg
mov
sti
ret
mov
jg
rclb
push
push
loopne
xchg
pop
rcll
push
mov
leave
add
mov
notb
sbb
dec
jl
sbb
push
popf
pop
idivl
call
xor
xchg
lret
mov
or
rcll
scas
call
and
inc
out
aaa
ret
in
jl
lea
in
sbb
fwait
stos
dec
add
xchg
jns
jnp
cmp
pop
ret
cld
jl
xchg
or
sbb
xor
jno
sbb
lods
and
sbb
addb
mov
hlt
cld
in
lods
aam
mov
movsb
adcb
pop
fwait
mov
cli
sbb
jne
pushf
pop
cltd
fldt
rcrb
rcrl
push
aad
aad
sbbb
jl
cmp
inc
sub
scas
popa
jo
sahf
adc
in
push
mov
nop
arpl
hlt
fsub
inc
xchg
dec
mov
sbbl
adc
xchg
mov
xlat
lcall
int
xorb
push
sbb
or
sete
test
ss
or
xchg
adc
pusha
mov
xor
dec
push
dec
or
aaa
mov
push
je
xchg
cs
rolb
arpl
popa
xor
lea
mov
xchg
adc
push
lods
into
cmp
ja
lods
pop
add
test
movsb
notl
out
mov
jnp
lods
hlt
ja
xchg
pop
add
subb
add
pop
jmp
add
xchg
ret
inc
adc
loop
lcall
in
mov
xchg
and
adc
pop
mov
fistps
icebp
mov
in
popf
data16
pushf
sbb
mov
cmpb
push
cmp
test
mov
xchg
sbb
aas
sbb
xlat
xor
out
xchg
and
das
clc
xor
jmp
xchg
dec
push
mov
pop
and
sbb
iret
xor
cmp
mov
shl
cmp
mov
add
test
xchg
sarl
repz
mov
fs
lret
xchg
cli
fcmovnu
add
inc
sbb
ja
mov
sbb
sarb
mov
jp
jle
mov
fcompl
mov
stos
andb
push
sbb
clc
divb
mov
int3
jnp
inc
aam
pop
sub
popa
xor
rorl
je
loop
sbb
jmp
and
fnstcw
cmpsb
int3
mov
or
mov
adc
xchg
mov
mov
mov
mov
mov
ljmp
mov
les
jno
filds
das
ja
jnp
mov
cmp
mov
sbb
pop
jge
mov
sahf
sbb
add
lea
push
rcr
xchg
pop
xchg
lahf
les
insb
aad
out
pop
popf
push
jl
movsb
cli
sbb
fnstsw
in
dec
out
adc
adc
call
rcr
xchg
sbb
sub
xchg
repz
js
popf
and
sbb
ror
xor
mov
test
jge
cld
call
fsubs
sahf
lods
rcrl
inc
pop
les
dec
mov
pusha
add
pop
pop
in
hlt
std
sbb
cmp
xchg
cmp
sahf
stos
cs
in
rcll
sbb
aam
adc
out
sahf
rcrb
xor
enter
push
loopne
xchg
ds
sahf
out
adc
xchg
mov
lods
loopne
jne
mov
and
xchg
outsl
dec
mov
mov
mov
arpl
repnz
leave
push
fdivr
xor
adc
pop
xchg
add
mov
push
shlb
adc
fwait
repz
ret
pop
out
sbb
cmp
xchg
mov
sbb
sub
nop
in
aam
stos
sbb
mov
das
mov
mov
adc
mov
push
mov
xchg
repnz
fsubrs
int3
jle
ja
scas
test
aam
sbb
out
sbb
sahf
popa
sbb
add
add
clc
stc
dec
add
sbb
xchg
cmc
cmp
fstpt
jecxz
inc
dec
sbb
fimull
popf
mov
inc
pop
cmp
push
mov
adc
mov
mov
xchg
mov
rcpps
into
dec
fwait
lods
das
sbb
mov
mov
sub
je
std
push
adc
jns
cltd
test
sbb
fdivr
xchg
adc
sti
xchg
mov
data16
xchg
mov
pop
jbe
popa
aam
lret
cmpsb
mov
popf
xchg
mov
jnp
push
std
pop
call
xchg
push
add
xchg
je
dec
mov
pop
sub
add
sbb
sub
pop
test
lods
sbb
rorb
out
jle
fucomp
into
int3
jg
std
shlb
sbb
or
repz
test
and
add
dec
loope
add
std
xchg
add
aad
out
fwait
xchg
lea
xchg
imul
outsb
lret
ret
xchg
fmul
cmp
jp
sbb
adcl
int
call
fwait
test
ret
clc
out
movsb
inc
xchg
rclb
not
insb
into
stc
jp
sbb
sbb
or
adcl
mov
or
ss
xor
nop
sbb
arpl
scas
popa
inc
cmp
nop
lock
cmp
int
lcall
jmp
adc
push
sub
rcl
ret
movsb
xchg
xchg
xchg
mov
xchg
out
pushf
test
enter
xchg
stc
negl
and
adc
mov
pop
push
out
xchg
pop
pop
sbb
xchg
sbb
xorl
xchg
lods
mov
loopne
sbb
pop
cmpl
push
pop
movsb
sbb
scas
fiadds
es
sbb
cltd
push
test
lock
mov
test
xchg
filds
cmpsl
xchg
mov
push
stos
pop
or
cmp
pop
mov
sub
mov
adc
adc
out
pop
inc
aam
scas
andb
dec
sahf
or
sti
stos
mov
cmp
add
sbb
xchg
call
dec
add
mov
mov
insb
xchg
dec
pop
fmulp
rolb
inc
scas
adc
push
push
push
fcoml
mov
daa
or
aas
notl
and
xchg
sbb
arpl
xchg
loopne
in
hlt
addr16
sbb
aam
cmp
sbb
ljmp
inc
lcall
pushf
sbb
rep
insb
rorb
adc
cli
lock
out
mov
test
hlt
test
fdivs
lods
jne
cmpsb
leave
sahf
aaa
sbb
sbb
mov
xchg
lods
sbbb
mov
nop
je
int3
xchg
sbb
fs
lock
cwtl
rolb
ja
adc
aam
pop
mov
cltd
mov
push
mov
hlt
xchg
sbb
pushf
sti
mov
test
nop
mov
ficoms
in
xor
cbtw
movsb
in
int3
xchg
andl
cld
into
mov
test
stos
cmp
sbb
mulb
inc
daa
js
pop
push
enter
mov
dec
jmp
sbb
mov
lret
xor
incb
sahf
ljmp
push
xchg
clc
int3
sub
xorb
xchg
mov
stos
sbb
mov
inc
cmp
xchg
fiaddl
push
adc
sbb
mov
mov
or
xchg
dec
addr16
adc
mov
mov
xrelease
xchg
pop
mov
pop
hlt
add
fiaddl
int3
or
mov
repz
in
rclb
shrl
pop
adc
movsb
scas
mov
add
jl
fwait
ljmp
lock
jo
mov
adc
push
bound
push
xchg
cli
xchg
jne
inc
test
add
dec
lahf
cmp
mov
and
jmp
sbb
xchg
out
sbb
insb
cwtl
xchg
mov
mov
cli
mov
pop
xchg
xor
loopne
in
pop
in
adc
mov
into
fsubrs
enter
mov
mov
mov
cmp
and
lea
pushf
nop
addb
leave
movsb
jns
or
pop
xchg
ljmp
in
loopne
fimuls
mov
shlb
xchg
stos
clc
in
les
jne
jmp
out
mov
xchg
fisttpll
sub
xchg
ljmp
aam
imul
pop
inc
repnz
cmp
sbb
mov
xchg
pop
or
repnz
test
nop
out
xorl
ja
in
sub
bnd
xchg
test
adc
jne
mov
jbe
loop
aas
adc
add
jmp
in
int3
and
negb
adc
cli
mov
jnp
xchg
jg
daa
adc
cli
into
mov
test
adc
pop
ss
or
xchg
xlat
outsl
popf
cmc
jg
movsb
jl
dec
mov
jo
xchg
push
cs
out
ret
insb
leave
mov
out
ja
inc
adc
fcmovbe
stos
lcall
fcoml
enter
hlt
lahf
test
or
xorl
popf
xchg
js
in
adc
int
mov
sbb
pop
sahf
push
popf
xchg
lcall
out
mov
hlt
and
in
in
les
mov
add
aad
xchg
sti
mov
js
mov
fcoms
pop
jg
rclb
aam
mov
mov
xchg
ret
mov
hlt
mov
loopne
fiaddl
sbb
cmpsb
sti
xchg
faddp
fsubrl
pop
loopne
xchg
fcmovb
call
mov
sbb
adc
sbb
je
lcall
aam
cmpsb
mov
push
lock
pusha
nop
fisubs
jbe
xor
mov
jo
push
int3
jb
fstl
xor
sbb
in
cmp
rcrl
or
pushf
cmpsb
mov
sbb
loopne
xchg
clc
divl
pusha
scas
fidivs
int3
push
aam
enter
xchg
mov
mov
or
cwtl
xchg
mov
loop
and
mov
lret
pop
test
int3
xor
movsb
pusha
add
pop
shl
add
add
fiaddl
xchg
loopne
lds
popf
cld
inc
ror
in
mov
jo
mov
outsl
shr
sahf
mov
jp
xchg
je
lods
mov
mov
or
jecxz
loop
mov
pusha
mov
and
jae
or
xchg
push
xor
fstps
nop
ret
push
iret
push
adc
xor
cwtl
jnp
pop
lods
pusha
orb
mov
fidivs
jecxz
adc
test
dec
adc
mulb
sbb
push
fnstenv
test
into
cmpb
mov
popa
scas
pop
fidivl
lret
jecxz
xchg
xchg
mov
enter
lods
shlb
nop
xchg
mov
cli
mov
adc
decl
mov
dec
cmp
mov
clc
xchg
sbb
sahf
loop
mov
lock
fdivr
pop
out
sub
pop
ret
pop
lret
xchg
mov
stos
add
testl
mov
jne
xor
and
xchg
loop
hlt
sub
mov
mov
sbb
in
ret
xchg
mov
mov
xchg
call
cltd
mov
xor
repz
dec
mov
int3
sub
mov
xchg
test
inc
xchg
lock
cli
call
or
mov
mov
mov
mov
popl
clc
out
in
mov
cli
sar
sbb
pop
pop
sub
popf
out
sbb
icebp
repz
sbb
inc
xchg
pushf
fiaddl
mov
mov
lcall
sahf
negb
mov
cli
out
pop
adc
lret
repz
jo
add
sub
mov
clc
cmc
ljmp
fists
push
sub
repz
jnp
insb
shrl
fs
mov
stc
and
xchg
adc
imul
in
insl
in
mov
mov
testb
push
jp
dec
int3
andb
daa
insl
dec
adc
xlat
jb
push
aas
enter
xchg
mov
scas
sub
popf
mov
sbb
imul
inc
xchg
add
xchg
and
push
sbb
mov
fs
insl
xchg
jle
out
fnsave
repnz
sahf
out
lea
push
xchg
ja
push
sarb
push
sahf
add
cmp
sub
add
push
cmpl
rclb
pop
xchg
pop
mov
aas
call
insl
je
xchg
cld
xchg
shll
cmc
mov
sub
push
xchg
xchg
imul
add
fs
sahf
je
adc
fdivrp
push
outsb
xorl
jecxz
ret
jo
leave
jo
aam
outsb
cmp
mov
pop
mov
ficomps
cwtl
roll
cmpl
push
xchg
push
add
inc
xchg
popa
xchg
loop
aam
add
arpl
call
notb
inc
outsb
jae
jecxz
xchg
lahf
xchg
mov
cld
insl
ret
or
jp
jge
jle
xor
xchg
adc
and
xorb
and
jl
adc
arpl
mov
adc
rolb
in
sbb
or
dec
lock
jmp
cmpb
adc
jg
push
jmp
mov
arpl
cmc
idiv
aam
lods
fldt
jle
jge
fs
insl
shlb
clc
xchg
sbb
mov
rolb
ret
aam
sbb
loope
pop
leave
popf
fwait
scas
or
ds
in
mov
add
nop
pop
outsb
or
push
rol
sbb
cmpsl
in
stos
fld
cmp
lods
mov
cmp
dec
ljmp
clc
sbb
dec
loopne
push
leave
sbb
sub
addb
lcall
jns
fiaddl
sbb
clc
popf
les
std
cs
add
jmp
pop
add
dec
sbbl
xchg
js
push
in
sub
aam
in
xor
jno
mov
sbb
enter
cld
ss
sub
sbb
jecxz
xchg
mov
repz
inc
xchg
mov
sbb
pushf
enter
scas
xchg
dec
test
and
xchg
xchg
rolb
stos
add
push
add
mov
xchg
push
cmp
lds
out
test
enter
push
inc
xchg
cli
sti
inc
sarl
out
xchg
fsubrl
je
mov
xor
lods
lret
xchg
das
mov
inc
add
inc
lahf
xlat
push
aas
xor
test
or
fstpl
adc
fadds
enter
subb
add
insl
push
loop
push
jns
adc
jnp
inc
aam
imul
hlt
or
out
dec
xchg
mov
mov
adc
popa
add
enter
pop
js
xchg
rorl
je
cmpl
cmpsb
mov
push
int3
iret
sbb
ficoml
push
or
enter
ror
xchg
loop
pop
or
sahf
subl
popf
pop
or
popa
mov
mov
outsl
pop
xchg
xor
clc
out
xor
lods
add
sarl
push
sbb
push
xchg
adc
pushw
xor
icebp
clc
addb
je
pushf
xlat
out
sti
xchg
dec
out
sbb
push
mov
adc
clc
push
loope
in
add
cs
xchg
lcall
mov
sbb
cwtl
daa
insb
and
rol
clc
in
cmpb
in
scas
call
xchg
mov
inc
add
lods
lahf
adc
in
pop
cmc
adc
mov
pushf
movsb
clc
in
xchg
adc
sbb
lock
cmp
cld
push
loop
jmp
out
inc
roll
filds
inc
movl
inc
mov
mov
inc
cmpsl
inc
stos
inc
scas
inc
xchg
aam
and
or
cmp
cmpl
mov
xchg
adc
inc
incl
jecxz
out
mov
inc
xlat
inc
fildl
inc
ret
inc
movl
inc
mov
test
aam
nop
cltd
repz
test
or
clc
popf
cld
aad
je
xchg
repnz
inc
ds
add
movsb
fs
icebp
bound
hlt
cmp
mov
in
movl
test
inc
and
pop
xchg
sbb
or
jns
imul
cmp
out
in
dec
into
pop
and
sub
enter
aaa
adc
daa
arpl
scas
lods
xchg
lods
sbb
mull
lea
dec
hlt
cmp
rcrb
inc
mov
xchg
cmp
inc
and
cmpsb
xchg
lea
jno
hlt
sbb
addr16
out
xor
and
cmc
inc
rcll
mov
push
and
and
sub
dec
adc
ret
xchg
pop
pop
test
cmpsb
cwtl
xchg
ja
mov
inc
ljmp
pop
inc
pop
add
les
repz
stos
lods
xchg
cmp
nop
loop
sbb
mov
pushf
mov
xchg
xchg
push
rcll
ret
test
xchg
pop
fwait
jae
or
shrl
sub
inc
notb
xchg
mov
push
pop
cmp
xchg
xor
xor
add
call
jmp
pop
xchg
jne
inc
cmp
and
mov
and
lea
outsb
notl
ja
testb
movsl
lock
jne
jne
jne
xchg
shrl
xchg
hlt
nop
or
sbb
inc
test
and
push
popf
shlb
and
lods
fnstsw
mov
inc
dec
xchg
pop
mov
fisubl
lds
sbb
inc
or
xchg
fs
add
mov
mov
pushf
inc
xorl
jno
jns
bound
imul
and
pop
mov
push
xchg
xor
ret
jne
imull
pop
testb
cmc
into
sbb
daa
pop
fldl
mov
not
int3
xchg
jmp
in
xchg
cwtl
or
cmp
pop
and
add
xor
lcall
sarl
mov
cmp
and
xchg
lods
fwait
jno
sbb
leave
xchg
jecxz
mov
pop
clc
jo
xchg
or
or
xchg
hlt
push
ja
idivb
movsb
xchg
popf
add
std
mov
test
sbb
xchg
sbb
repz
xchg
xchg
js
in
add
sbb
arpl
push
xor
and
inc
js
dec
adc
adc
adc
adc
xchg
popf
repnz
jns
imul
loope
in
jmp
fsubrs
mov
js
and
sti
cmp
or
push
cmp
int3
xor
and
icebp
sahf
jbe
add
jge
dec
jecxz
inc
add
mov
lods
cmpsl
mov
pop
xchg
dec
scas
fbld
jns
sub
imul
pop
lock
imul
rolb
enter
mov
mov
mov
inc
movsb
inc
test
lods
aam
pop
push
jo
cmp
and
push
in
xchg
or
out
cltd
loopne
in
call
stos
aam
jnp
fsubrl
xchg
adc
lds
test
lods
xchg
nop
cmp
ja
sbb
in
lock
lods
clc
loope
mov
call
jne
jne
jne
jne
sbb
js
sbb
mov
mov
mov
dec
movsb
cmp
in
jo
push
cwtl
negl
je
fwait
in
push
out
das
out
cmp
or
ficoms
jno
ret
sub
sub
inc
and
adc
xchg
xchg
negb
sahf
imul
jnp
out
push
ljmp
into
ret
int3
jge
mov
mov
mov
mov
shlb
xchg
orb
xchg
test
sub
inc
mov
adc
cmp
cmp
and
and
sub
sub
nop
int3
xchg
xorl
mov
hlt
repnz
cwtl
jo
pushf
testl
rorl
shl
xlat
in
call
aad
aad
aad
aad
add
shrb
mov
nop
inc
mov
mov
testb
rorb
aad
adc
cmp
and
and
sub
mov
fimull
ret
inc
mov
inc
mov
add
test
scas
xchg
mov
jo
adc
sbb
ljmp
loop
shrb
fisubrl
fmull
xor
xchg
mov
sub
dec
clc
scas
dec
rcll
dec
repnz
stos
cli
sub
std
ljmp
js
lret
mov
into
adc
inc
xchg
xchg
test
xor
in
xchg
mov
ret
cmp
stos
loop
hlt
pop
adc
mov
in
data16
pusha
mov
mov
mov
jecxz
lcall
addb
mov
sub
pop
sub
pop
in
ljmp
mov
int3
popf
aad
inc
sbb
stos
mov
mov
xchg
mov
in
sub
xchg
mov
adc
js
addl
fidivrl
lret
fimuls
mov
jns
imul
jb
jecxz
in
jns
push
inc
or
mov
mov
test
lds
inc
leave
push
push
iret
xchg
int
mov
out
mov
mov
mov
lods
mov
xchg
cmpsl
xchg
movsl
xchg
stos
xchg
cmp
stc
inc
adc
lret
das
mov
test
orb
ljmp
sub
repz
or
pop
xchg
or
adc
popf
cltd
jb
std
data16
or
inc
mov
jne
sbb
dec
sahf
pop
and
nop
lods
xorb
dec
sbb
hlt
xchg
xchg
add
divl
xchg
ret
jo
std
xchg
into
pop
mov
mov
dec
mov
aaa
repnz
and
xchg
out
ja
or
movsb
pop
dec
dec
xor
cmp
xchg
cld
test
or
pop
inc
mov
cmp
cmc
je
scas
mov
add
pop
into
aam
sbb
std
imul
xchg
adc
or
ret
stc
in
xchg
mov
mov
xchg
mov
sub
stos
sbb
and
test
mov
pop
mov
aad
or
jmp
jg
sbb
jmp
je
xchg
adc
inc
xchg
adc
cmc
js
lcall
fdivrs
cwtl
popf
jb
or
bound
loopne
jo
cmp
push
lea
aam
icebp
or
stc
cmp
in
sbb
pop
sub
xor
mov
xchg
xchg
push
jo
jne
std
ja
in
jmp
mov
fisttpll
lds
mov
mov
lcall
icebp
jbe
xchg
mov
mov
sarb
xchg
cli
mov
loop
xchg
mov
mov
mov
mov
data16
inc
ret
dec
xchg
cmpsb
lret
into
sub
mov
mov
lea
scas
cmpsb
mov
mov
xchg
push
lods
jo
fidivs
xchg
mov
xor
jae
ljmp
xchg
out
xchg
cmp
inc
xchg
int3
sbb
or
xchg
mov
xchg
cli
lcall
cltd
mov
inc
inc
arpl
xchg
loop
out
je
call
or
lcall
sbbb
int3
cmp
jle
notb
pop
dec
adc
gs
inc
and
mov
test
movsl
sarb
push
shrl
cmc
addl
xchg
jle
sbb
sbb
in
int3
scas
jge
fwait
leave
rorb
int
jnp
test
pop
stos
push
dec
xchg
xchg
and
jb
cmp
mov
fwait
hlt
mov
gs
push
aad
pop
rcrb
rorb
dec
jge
add
sbb
adc
push
jbe
jae
popa
aam
js
in
pop
jno
roll
lret
xorl
jns
xchg
mov
xchg
testb
stc
xchg
test
or
xchg
jns
push
mov
stc
cld
shl
mov
pop
shlb
xchg
push
repz
sbb
lcall
aam
pusha
enter
mov
iret
sbb
mov
xchg
rclb
cltd
jno
lock
aam
xlat
mov
and
inc
jecxz
movsl
in
stos
xchg
xchg
sub
xchg
popf
mov
pop
mov
xchg
ja
imulb
dec
shll
sahf
cli
cmc
les
jne
cmp
xchg
test
outsl
negb
mov
dec
cmp
xchg
shl
cmpsl
mov
aad
movsb
jge
nop
jbe
jno
jnp
cmp
aas
jne
cli
loopne
ljmp
in
imulb
mov
hlt
fsubrl
xor
aad
rclb
xorl
test
or
je
and
in
rolb
push
cmc
std
pop
repz
popf
call
fdivr
inc
fldl
dec
sbb
and
das
rorb
sub
aaa
xchg
cltd
push
cld
test
add
push
cmp
stos
mov
popf
andb
outsl
sbb
insb
sbb
pop
pop
addr16
hlt
iret
mov
mov
fnsave
and
xchg
les
sar
sbb
inc
jl
pusha
hlt
push
adc
jecxz
call
cmpsb
aad
hlt
and
and
sbbl
sbb
stos
sbb
push
or
pusha
sti
xchg
xchg
fdiv
mov
stos
sbb
or
mov
popf
xchg
divb
xor
negl
mov
and
xchg
mulb
imul
fcoms
mov
xchg
repnz
lcall
incb
add
lock
divb
cli
adc
mov
pop
jg
in
aam
or
sbb
lock
xchg
sub
int3
mov
xchg
enter
ret
xchg
sbb
jne
or
sub
movsb
lods
xchg
sahf
fucomip
popa
imul
xor
cmp
mov
lcall
sbb
mov
mov
pushf
rolb
lock
and
rcll
test
cmp
sub
mov
pop
js
call
sbb
xor
nop
clc
repnz
loopne
lock
pop
or
or
std
push
jo
cmp
mov
repz
sub
movsb
push
mul
ja
jmp
rolb
xchg
add
aam
mov
jbe
jo
mov
xchg
notb
xchg
mov
test
sti
fadds
mov
adc
and
sub
lods
jg
sub
shll
xlat
gs
xchg
push
mov
outsl
inc
scas
mov
popf
das
jae
sub
sbb
cmp
lret
enter
int3
cwtl
cld
jne
push
pop
push
push
popf
jle
jl
adc
dec
test
fucomi
mov
xchg
gs
popf
les
dec
cmpsb
div
pop
fwait
sti
nop
jl
xchg
jmp
cli
mov
cmp
xor
add
adc
sbb
repz
int3
add
mov
mov
xchg
push
lret
jne
jb
push
inc
xchg
sti
adc
rclb
xor
xchg
and
mov
stos
test
idivb
push
jl
pop
pusha
push
mov
and
add
nop
incl
fldt
stos
mov
cmp
and
sub
stos
mov
push
inc
sbb
jge
ret
fsubl
push
std
ja
je
xchg
dec
sub
sub
adc
shll
cld
shrl
push
out
mov
inc
push
inc
fdivl
fistpll
cmp
xchg
cwtl
jne
rcrl
jl
rclb
aad
out
jmp
roll
sbb
xchg
xchg
cld
scas
rcr
mov
stc
aas
imul
jne
cs
jne
popf
mov
add
mov
lret
into
mov
mov
mov
xor
mov
scas
push
xchg
jno
cmp
xchg
pop
and
and
sub
scas
lock
popf
sbb
cld
jg
xor
rcl
fldcw
dec
sub
jo
cmp
pop
add
mov
testl
mov
lds
cmc
jno
rcrb
fs
shr
mov
out
jno
ja
lea
aad
ret
aaa
sbb
jns
fs
nop
mov
mov
push
add
xchg
imul
shrb
pop
xchg
lock
insb
adc
jo
fwait
ja
mov
mov
rclb
mov
sub
mov
cmp
and
push
out
mov
xchg
out
in
lcall
or
jns
push
mov
jne
xchg
sbb
or
push
cwtl
xor
int3
stos
ljmp
shrb
out
jl
in
mov
cmp
xchg
lea
dec
pushf
adc
ja
popf
or
push
les
loop
lcall
xchg
mov
mov
add
jno
sub
sbb
cmp
fucomp
xchg
xchg
pop
pop
and
xor
inc
in
scas
popf
shlb
aas
mov
xchg
and
xchg
add
cmp
loopne
fmull
inc
or
jg
pop
orl
push
js
lock
xchg
and
and
loope
lcall
mov
sti
jbe
cmc
jge
xchg
arpl
inc
in
std
xlat
nop
shr
xchg
rcrl
loope
mov
push
dec
and
mov
test
jbe
flds
jno
jnp
stc
jne
dec
inc
in
xchg
fistl
clc
out
cltd
mov
adc
in
pop
fwait
mov
cmp
ror
movsb
insb
repz
xor
pop
nop
pop
mov
add
xchg
dec
ret
cmp
cs
adc
sub
or
sbb
jge
jmp
mov
shl
jne
inc
fcmovnb
rcrl
adc
xor
push
push
test
mov
add
xchg
jecxz
sbb
test
or
lods
jle
xlat
vmovmskps
xchg
mov
jecxz
nop
sbb
jge
rcrb
and
adc
mov
mov
ja
mov
adc
xchg
dec
nop
dec
xchg
dec
mov
aaa
and
test
mov
cmc
aad
fldt
loopne
movsb
hlt
fiadds
sub
adcb
in
xchg
sbb
cmc
dec
or
xor
xchg
aam
nop
sbb
jae
out
lahf
shll
daa
pop
xchg
mov
push
scas
notb
int3
pushf
mov
push
sbb
movsb
cli
outsl
mov
sub
push
jb
pop
dec
inc
in
mov
sub
mov
lds
mov
cmpsl
adc
test
sub
cmp
cwtl
icebp
xchg
inc
orb
mov
call
xchg
ficoml
xchg
or
movsb
mov
mov
mov
es
fldl
sti
inc
xchg
lock
loope
orl
stos
inc
test
inc
mov
add
xor
sub
xchg
test
xchg
fisttpll
imul
mov
inc
mov
pop
popf
mov
cmpsl
jo
stos
imull
sbb
mov
rclb
jne
or
lods
push
popa
jnp
ret
mov
jge
ja
cltd
dec
mov
aad
xchg
xchg
or
inc
jle
add
mov
add
push
xlat
xchg
or
mov
xchg
mov
jbe
or
pop
lret
add
cwtl
xchg
hlt
push
lock
mov
mov
xchg
cmpsl
popf
pop
jno
std
lea
hlt
in
mov
mov
push
cwtl
pop
shlb
cmp
jne
push
sbb
xor
insb
sbb
xor
lods
and
xchg
ja
setg
jmp
int
mov
push
mov
jbe
mov
xchg
test
lret
fsubs
add
xchg
mov
sbb
rol
xchg
xlat
push
mov
shlb
or
inc
jg
xchg
sbb
lods
int
popf
insl
iret
jne
jg
xor
mov
sbb
xchg
fisubs
inc
div
sbb
xor
leave
sarb
nop
and
jb
test
add
mov
add
pop
sbb
mov
push
add
lock
jbe
cli
xor
lods
mov
sbb
mov
rcrl
dec
or
int3
xchg
mov
das
movsb
lods
lahf
push
ja
sbb
je
ljmp
notb
les
mov
mov
sbb
and
and
sub
fsubrs
adc
mov
jne
popf
adc
sbb
sbb
add
mov
or
cmp
mov
jb
loop
fucomi
dec
jnp
jno
iret
sbb
xchg
dec
mov
push
mov
arpl
movsb
xchg
aad
negl
in
lea
pop
iret
and
jbe
cmp
cmp
stos
ret
out
push
test
mov
sub
sti
pop
xchg
sbb
cmp
lods
popf
call
xchg
fdivr
and
sub
xchg
insb
movsb
mov
mov
aad
xor
sbb
stos
cs
xchg
mov
mov
fwait
mov
adc
jnp
jge
out
in
xchg
xchg
push
mov
addl
int3
lods
and
jbe
jns
jl
mov
pop
repz
push
loopne
shlb
test
adc
ret
ret
sbb
paddb
mov
sbb
test
xchg
cmp
pop
xchg
mov
mov
ret
lcall
mov
js
cmpsl
jbe
cmp
pop
cltd
mov
add
xchg
xor
and
sbb
xchg
pop
jmp
lahf
scas
push
movsb
mov
lea
shlb
sub
jns
xchg
in
push
xchg
lock
sbb
aam
cmp
jg
je
xchg
call
sub
and
adc
xor
adc
or
out
push
stos
cmc
nop
in
popf
adc
inc
test
outsb
stos
jbe
jecxz
add
or
in
enter
negl
and
and
push
mov
test
sbb
jbe
std
mov
xor
cmpsb
xchg
push
mov
pop
cmp
ret
and
dec
sub
add
mov
movsl
cmp
in
xchg
cmpl
mov
sub
pop
movsb
or
out
jne
cmp
and
sbb
push
ficomps
dec
sti
dec
arpl
add
mov
xchg
les
jnp
std
ret
hlt
cmp
xchg
in
lods
push
mov
ljmp
cmp
sahf
mov
notb
ret
std
notb
pop
test
sbb
or
aaa
fcomps
mov
jo
pop
add
add
or
js
jo
jmp
imul
dec
cltd
dec
leave
test
sbb
mov
fsts
cmp
arpl
call
testb
pop
lods
sbb
les
repnz
out
sub
or
cmp
and
jecxz
inc
jne
xchg
lea
inc
mov
push
mov
sbb
lods
loopne
imul
in
scas
push
or
rorl
xchg
insb
sbb
mov
scas
loop
repz
mov
shrd
xchg
mov
addr16
xchg
and
stos
mov
popf
xor
add
aam
movsb
lcall
xchg
adc
add
movsb
in
out
xchg
pop
ret
lret
xchg
cwtl
pusha
jmp
mov
fsubs
fnsave
js
xchg
add
jmp
pop
lods
pushf
lcall
mov
movsl
in
sbb
add
or
icebp
aam
cltd
add
clc
xor
sbb
testb
pop
sub
adc
cmp
mov
mov
addr16
mov
sbb
jp
not
jo
in
subb
aam
fwait
out
js
jmp
in
xchg
push
lcall
in
clc
pop
jg
xchg
pop
shlb
sbb
insb
subb
mov
popf
or
test
div
xchg
lock
clc
sub
cmp
je
shl
adc
mov
test
mov
lods
xchg
into
lret
int
adc
xchg
pop
fildl
xchg
mov
xor
ljmp
out
dec
aad
xchg
jp
mov
int3
push
sarl
xchg
adc
adc
mov
hlt
xchg
std
mov
sbb
aam
mov
mov
out
nop
cli
mov
ficoml
mov
sbb
cmp
test
stos
clc
inc
lcall
lahf
aad
aam
pop
sbb
jl
cmp
mov
loope
nop
int3
or
fs
mov
loopne
out
sub
cmc
sbb
mov
push
push
mov
mov
mov
int3
xchg
fsts
pop
call
dec
mov
mov
mov
or
ficompl
fdivrp
movsb
out
cmp
xchg
mov
aad
std
call
cmp
pop
clc
cmp
fmuls
in
or
or
adc
mov
clc
xor
scas
mov
xor
stos
cli
aam
cs
call
mov
adc
lcall
enter
aad
rolb
mov
sbb
cli
in
aas
cld
fs
loopne
adc
sbb
sbb
sbb
xor
inc
ret
cmp
fidivl
push
mov
add
mov
xchg
movsb
ljmp
lods
lods
adcb
sbb
in
hlt
cltd
add
pop
daa
fdivl
lea
jle
aaa
mov
or
sbb
jl
mov
and
pop
cmc
sbb
or
adc
pop
xchg
cmpsb
mov
pop
nop
pop
inc
cs
fldz
push
push
mov
push
inc
pop
enter
loope
out
lcall
mov
in
cmpsl
call
idivl
cmp
pop
mov
mov
lret
or
aam
icebp
sub
popa
pop
popf
push
pop
jl
and
adc
hlt
add
imul
test
jecxz
ficomps
pushf
sbb
mov
mov
adc
movsb
xchg
pop
inc
bound
xchg
daa
rcrb
pusha
xchg
lds
pop
cltd
pop
xor
lock
cmc
push
sbb
clc
xchg
pop
xchg
lcall
arpl
inc
cmpb
loope
test
inc
xchg
mov
jl
pushf
test
xchg
fwait
push
aam
in
push
mov
push
decb
pop
jne
sbb
sbb
mov
aam
loope
les
pop
sub
sbb
les
daa
sbb
aam
xchg
xchg
popf
cwtl
push
sub
xchg
or
mov
lcall
aam
loopne
jmp
clc
or
adc
adc
pop
and
sub
in
out
pushf
aam
inc
stos
inc
lods
push
xchg
adc
pop
jp
adc
testb
add
mov
mov
fistpll
add
adc
std
pop
fstpl
inc
dec
jmp
das
sahf
xchg
pop
jae
rcrb
adc
iret
sbbl
mov
sbb
pop
mov
adc
sbb
cli
hlt
sbbb
sarb
fwait
xchg
stos
mov
lds
cmpsb
fs
xchg
jmp
xchg
hlt
in
pop
clc
xorl
mov
xchg
je
xchg
jp
test
jle
cmp
mov
jb
mov
xlat
pushf
es
iret
or
xchg
xchg
sub
int3
mov
jae
xchg
daa
lret
pusha
adc
lcall
arpl
fwait
xchg
push
into
xor
mov
xchg
imul
out
sar
mov
test
jp
js
test
mov
imul
sbb
and
xor
imul
push
or
lods
adc
aas
xchg
or
das
cmpl
pop
or
pop
dec
fstps
xchg
cltd
sub
je
and
lods
mov
xchg
mov
fcomps
ret
pop
sbb
mov
aam
push
cwtl
add
js
adc
cmp
imul
add
inc
loope
aaa
mov
cmp
add
or
incb
mov
gs
mov
push
xor
inc
xchg
mov
fbld
xchg
in
sbb
jg
in
cmpsl
int
js
shll
cmp
dec
jo
mov
or
movsl
movsb
jbe
adc
xchg
sub
daa
jne
xorl
mov
or
or
leave
jbe
sub
adc
cs
dec
int3
push
inc
jg
out
xor
out
pop
fwait
scas
negb
ffree
movsb
sub
mov
mov
mov
iret
mov
stos
dec
xchg
out
inc
ret
xchg
in
adc
dec
mov
or
pop
xchg
movzbl
shlb
xchg
add
cmpsl
add
xchg
inc
es
sub
cmc
out
jne
mov
dec
pop
aad
inc
xchg
push
push
lret
clc
into
repnz
imul
pop
add
sub
stos
sbb
push
dec
pop
mov
inc
into
in
xchg
std
xlat
pop
fisubl
add
rorl
pusha
or
aam
xchg
xchg
cmp
add
xchg
and
mov
adc
mov
lods
mov
inc
jno
or
lods
into
sbb
loopne
push
leave
sbb
sbb
jb
xchg
and
std
sub
cld
sub
test
mov
movsl
clc
push
xchg
cltd
out
or
je
int
xchg
push
mov
push
icebp
xchg
ficomps
jo
fnsaves
out
and
lock
sbb
test
jle
js
xchg
aam
push
mov
xchg
int
pop
frstor
cwtl
lret
movq
inc
xchg
stos
sub
mov
add
adc
adc
int
pop
and
sbb
push
mov
xor
int
jb
xchg
data16
aaa
sbb
in
mov
js
xchg
xchg
loope
test
push
push
fst
lcall
insl
lret
sub
movsb
shlb
loop
mov
pop
jbe
sub
mov
clc
test
xchg
dec
adcl
sbb
cmp
xor
insl
jbe
notl
sbb
xchg
hlt
xchg
in
mov
and
mov
xchg
lret
add
ficompl
push
lret
lahf
in
mov
ds
cmpsb
xchg
hlt
enter
fstps
or
mov
cmp
sar
xchg
fwait
repnz
inc
aad
xchg
jns
jae
mov
cmp
outsb
int3
popa
ret
iret
testl
in
jns
xchg
addr16
jbe
sbb
js
mov
sub
pop
sbb
cmp
push
mov
mov
outsl
loopne
scas
lea
inc
cmp
pop
outsl
push
mov
lcall
jne
je
cmp
cmp
mov
scas
xchg
jl
pop
inc
sub
sbb
cwtl
je
jnp
jp
lods
cmp
mov
movsb
lock
push
xlat
adc
lcall
pop
mov
mov
hlt
jge
bound
popf
jb
push
sahf
xchg
mov
xchg
fistps
fwait
mov
xorl
pushl
int
sbbl
sbb
mov
cltd
popa
seto
das
les
shrl
mov
dec
test
xchg
movlps
lret
loopne
xor
clc
xor
cwtl
jl
pop
test
or
jbe
push
icebp
push
ljmp
je
pushf
lods
fadds
push
sbb
pop
orl
adc
sbbl
fwait
mov
xchg
xchg
sbb
pop
mov
xchg
fs
jmp
in
push
and
fcom
push
pop
cmc
in
lock
loope
jns
push
fs
imul
stc
push
sahf
add
jbe
in
addr16
in
add
push
out
jp
push
mov
or
inc
jmp
je
push
scas
in
rcrl
cmp
jge
cli
jp
test
int
in
pop
cmc
ljmp
jno
test
arpl
jb
ljmp
leave
pop
fs
daa
test
adc
sub
pop
outsb
sub
lea
outsb
push
call
xlat
push
push
outsl
jnp
fdivl
fwait
xor
pop
sbb
clc
orb
jns
sub
je
xchg
into
adc
or
sbb
dec
insl
stc
into
je
push
insl
adc
xor
mov
lret
daa
xchg
push
xchg
adc
xchg
xchg
js
xchg
xchg
movsl
cmpsl
sub
clc
lret
cmc
outsb
xchg
rep
jo
push
je
test
add
clc
mov
jge
lahf
or
ja
fisubs
add
popa
cmp
cli
ja
pop
ljmp
movsl
ror
loopne
outsl
jecxz
sbb
and
jmp
filds
pop
les
inc
xor
shll
fmull
xor
xchg
bound
xor
into
mov
xor
mov
cmp
lock
inc
sub
mov
xchg
sub
pop
push
add
push
xchg
mov
clc
add
fsubrp
add
lds
popa
mov
push
or
lret
xchg
js
sarl
jl
inc
xchg
mov
movsl
pop
mov
xchg
ljmp
outsb
pop
xchg
jns
mov
and
xor
rorb
pusha
sub
lock
inc
and
test
lahf
pavgw
xchg
aaa
movb
scas
mov
test
pop
pop
stc
inc
push
xor
mov
sub
mov
fucomip
enter
sbb
fs
aad
and
cmpsb
push
repnz
add
jns
pusha
cmp
sub
mov
sbb
adc
enter
inc
aad
lds
bound
mov
add
nop
mov
lret
ror
out
or
stc
aad
test
push
sub
jp
or
test
movsl
mov
jp
enter
and
adc
imul
out
cmp
cmp
stos
gs
lods
xchg
cli
adc
shlb
push
pop
add
mov
nop
sub
lahf
jno
lret
cs
push
xchg
cmp
mov
and
add
insl
or
adc
lret
dec
sub
push
in
imul
add
jg
cmp
pop
add
xor
mov
dec
add
add
mov
test
mov
pop
jnp
mov
mov
sbb
inc
ret
adc
or
mov
fucomp
loop
mov
es
mov
cli
inc
pop
movsb
js
stc
fisubrl
les
fcoml
fldl
leave
push
ret
jmp
mov
xchg
mov
sub
mov
push
add
imul
icebp
pop
cwtl
cltd
mov
les
dec
ds
das
jnp
int3
ljmp
shrb
and
cmpsl
pop
test
xor
dec
push
pusha
insb
and
hlt
pop
mov
jmp
sbb
xchg
addl
bound
jg
out
loop
sahf
movsl
sub
pop
in
je
pusha
xchg
sti
sbb
fdivl
pop
cld
or
imulb
dec
inc
pop
outsb
cmpsb
addl
sbb
push
jo
jno,pt
pop
mov
inc
add
add
adc
mov
dec
add
aad
test
push
mov
push
dec
fs
sarl
call
jge
cld
sbb
jmp
push
adc
mov
sub
rcl
xor
subps
negb
out
lods
fs
out
fistpll
out
xor
push
fisubl
rorb
lahf
adc
in
mov
or
sbb
dec
add
xchg
add
sub
lds
jnp
pop
sub
movsl
mov
call
xchg
lahf
sbbl
cmp
ret
push
xlat
mov
xor
aam
add
or
and
icebp
dec
das
scas
mov
loop
out
in
xchg
outsb
inc
sbb
mov
push
enter
or
pop
daa
xor
in
fwait
mov
cwtl
sub
cmc
movsl
inc
iret
lret
sbb
fcomps
jmp
mov
cmp
cmp
dec
ss
inc
imul
sub
dec
in
fbld
mov
test
scas
jmp
out
rcr
mov
jo
fimull
cmp
dec
notl
in
fisubrs
lock
xchg
shlb
ss
sub
add
adc
ja
shrb
jg
xor
dec
cli
and
jae
mov
adc
pop
add
pusha
xchg
into
jb
clc
into
push
adc
cld
sbb
in
add
je
je
xor
jl
and
lcall
xor
jle
push
inc
loop
cmp
aad
daa
xor
inc
into
push
fmul
push
jg
cltd
xor
or
xor
imul
mov
mov
and
dec
mov
call
jg
out
mov
lret
jg
js
xchg
leave
xor
and
les
jae
sub
cmpsl
out
ss
xchg
scas
lea
xchg
inc
inc
or
out
add
nop
in
push
pop
jae
cmpsl
aaa
movsl
sbb
adc
inc
pop
jae
movsl
incl
pop
bound
shll
xchg
leave
mov
cmpsl
jbe
dec
pusha
jne
xchg
lret
or
jle
pop
pop
scas
shrl
jae
addl
lret
inc
dec
lods
ss
jge
bound
dec
test
mov
dec
paddb
inc
notb
sbb
mov
cmpb
imul
pop
insl
shrl
cmp
mov
xchg
mov
data16
ret
outsl
int3
adc
dec
es
insb
mulb
xlat
jecxz
insb
jbe
dec
mov
mov
jl
pop
mov
add
test
add
inc
movsb
dec
mov
daa
mov
daa
rolb
jl
cmc
xchg
jb
mov
mov
dec
jno
cli
lahf
movsl
adc
or
pop
loopne
out
sbb
push
push
scas
aas
pop
ficoml
jmp
inc
pusha
into
mov
push
cltd
jp
inc
inc
sub
fs
rcrb
out
push
std
mov
pusha
pop
xor
dec
pop
in
in
jp
adc
int
lcall
fsubrs
scas
jae
and
inc
mov
jge
out
js
adc
aad
daa
push
adc
xlat
rcrl
pop
lods
cltd
je
test
fcomip
std
inc
sub
clc
dec
sbb
cs
push
int3
or
inc
jo
push
lahf
xchg
andl
out
js
add
sbb
out
xchg
outsb
jne
pop
push
subb
mov
sub
mov
adc
rep
bnd
mov
and
ja
dec
mov
aaa
xor
dec
cld
pop
ret
xor
mov
rcrl
inc
sbbl
sbb
xor
pop
in
pop
ljmp
jo
icebp
xchg
and
and
inc
aaa
or
push
es
rolb
push
cli
xor
dec
xor
cmpsl
bound
outsl
scas
cltd
imul
pushf
pop
push
enter
cli
xlat
add
cmc
rorl
and
jnp
fistps
cmp
aad
adc
xlat
cli
mov
stos
scas
mov
mov
mov
mov
jo
cltd
xor
imul
dec
mov
gs
test
orl
jnp
inc
or
push
jnp
cwtl
cli
xchg
pop
rcl
sbb
mov
pop
shrb
lahf
inc
mov
leave
mov
mov
test
addb
rcr
xchg
mov
out
fbstp
popa
jg
lods
mov
mov
loopne
pop
adc
orl
mov
jae
daa
and
lds
ret
mov
and
int3
mov
arpl
fcoml
cmpsb
loop
jno
icebp
pop
std
dec
jmp
sbb
gs
adc
int
pop
jo
mov
jg
loop
cmp
sbb
push
mov
out
lea
adc
dec
mov
push
mov
push
adc
loopne
loop
imul
sub
das
rclb
orl
repz
sbb
mov
mov
adc
xchg
mov
ficoms
or
int3
idivl
inc
mov
cli
out
sbb
cltd
or
fisttps
test
pop
mov
jmp
ret
sub
push
ja
shr
movb
outsl
les
roll
lds
sbb
mov
pop
and
jge
jl
fidivl
movsl
mov
fistpll
fadd
mov
or
jnp
adc
inc
out
pop
mov
jnp
mov
shll
jle
mov
nop
pusha
je
add
shl
jno
sbb
push
test
dec
inc
pop
cs
dec
cs
xchg
stc
orl
hlt
mov
dec
lea
push
js
jnp
jle
sub
inc
lods
jne
jl
mov
cmp
pop
in
dec
test
bound
cli
sub
and
pop
xor
mov
xchg
add
sub
sbb
and
and
fiaddl
repz
rcl
pop
insb
push
jmp
add
or
mov
push
hlt
or
cmp
enter
repz
mov
or
add
movsb
fwait
jp
pusha
pusha
sub
dec
popl
pop
xchg
jne
mov
cld
mov
lcall
jbe
mov
sub
jo
loop
outsl
enter
mov
scas
or
xor
inc
dec
js
cli
mov
push
movsb
and
data16
addr16
mov
sbb
mov
cmpsl
xor
in
adc
testb
cmpsb
inc
in
mov
fbstp
mov
xor
dec
aam
jecxz
fsubrs
jg
pop
call
fcompl
dec
fstps
add
push
mov
sub
adc
push
inc
push
cmp
jg
les
imul
xchg
cld
xchg
sbbb
adc
cmpsl
dec
dec
jno
pop
fmuls
pop
daa
sbb
es
fidivs
adc
outsb
add
sti
pop
dec
shlb
push
cld
test
fadd
adc
mov
mov
jns
lds
int3
xor
pop
stos
cmp
cmp
mov
scas
fucomi
rcrb
xchg
daa
nop
popa
xchg
hlt
and
jp
mov
dec
stc
ja
clc
mov
pop
sahf
mov
in
pop
push
in
neg
or
in
mov
inc
mov
ret
sub
jmp
push
xor
xor
je
mov
nop
add
pop
jae
filds
pushf
int
xchg
mov
test
sbb
sbb
mov
jns
or
out
pop
push
push
inc
cs
stc
add
lcall
xchg
into
fbstp
fnsave
and
int
jo
jge
sub
xchg
mov
into
xor
insb
cmp
pop
or
lret
loop
pslld
lods
sbb
add
or
out
insl
pop
inc
adc
inc
aam
xchg
fs
outsb
sbb
and
jns
dec
mov
ljmp
sahf
sub
push
dec
out
adc
add
xor
adc
loopne
xor
cld
idiv
stos
in
xor
lock
pop
and
in
bswap
lahf
push
out
out
dec
imul
scas
sub
mov
push
daa
cmpsl
mov
push
jb
jle
test
out
cmp
jmp
out
cmc
mov
lods
mov
out
std
dec
das
xchg
xchg
insl
mov
lret
xor
lea
call
inc
mov
mov
sub
lods
out
mov
stos
cmp
pop
xchg
je
lahf
sbb
int
or
fldenv
fsub
cs
mov
jecxz
xchg
cmc
jbe
mov
fwait
adc
or
sub
cmp
sub
xchg
add
ds
data16
cmc
mov
mov
lods
nop
lahf
dec
inc
pop
inc
arpl
ss
lcall
daa
mov
repnz
xlat
daa
mov
jp
jnp
mov
js
jo
xor
aaa
cmp
sbb
pop
mov
cmp
imul
jno
pop
fists
xchg
cwtl
movsb
subb
mov
xchg
and
push
mov
mov
or
rcll
ret
js
lods
sbb
in
out
in
pop
push
jbe
les
push
dec
daa
out
inc
dec
es
push
lock
lahf
jno
ljmp
sar
inc
lret
adc
mov
push
cmpsb
push
jbe
jae
arpl
mov
lcall
adc
fdivs
and
fisttps
jbe
mov
lcall
loope
cmp
inc
mov
sbb
sbb
shll
inc
test
adc
jp
dec
mov
push
out
in
lea
xchg
add
dec
push
inc
xchg
fadd
and
adc
pop
repz
enter
jo
fwait
dec
sub
xor
aaa
icebp
test
xchg
movsl
add
imul
subb
stos
jnp
out
mov
clc
inc
mov
bound
cld
jne
fst
lea
std
mov
sarb
mov
xchg
sub
movsl
ja
outsb
jl
jae
mov
xor
arpl
lret
in
adc
mov
xor
jno
in
ja
je
pop
and
xor
and
das
mov
or
push
jne
sbb
or
in
or
movl
outsl
sub
mov
ror
or
mov
xchg
mov
sub
xchg
jo
inc
aam
jecxz
ret
add
or
mov
cwtl
scas
dec
add
mov
ret
push
aad
stos
int
ja
shl
mov
aad
pop
lods
xlat
loopne
dec
pushf
sbb
adc
xor
sbb
stos
cmp
dec
cli
js
xlat
loopne
and
or
push
or
sub
push
pop
mov
subb
addr16
inc
lret
push
sub
mov
xlat
fadd
jmp
xchg
xlat
popa
enter
adc
dec
dec
fprem1
data16
movsb
mov
push
pop
lds
xor
ret
cs
fldenv
xchg
jle
sub
out
cmp
xor
and
in
data16
jmp
xabort
pop
pop
mov
sub
mov
pop
mov
test
mov
sbb
cs
cmpsb
jnp
lret
inc
jl
mov
les
mov
dec
out
cmpb
sub
mov
fsubl
lret
xor
or
fsub
cmp
lods
mov
lahf
or
js
testl
sub
lcall
popf
add
sbbb
mov
xchg
cmpb
je
popf
xchg
cmp
jns
fidivl
fsubs
fldt
fdivrs
data16
pushf
dec
das
xchg
shl
lods
aam
test
push
es
cmp
adc
shlb
xchg
push
pop
jns
pop
out
cmp
and
lret
or
icebp
repz
stc
out
push
enter
sub
nop
ficoml
and
in
mov
adc
scas
fstps
cmpsl
in
popf
sbb
push
mov
jne
pop
push
shll
in
pop
lcall
imul
ljmp
mov
jb
xchg
push
jl
cmp
out
fidivs
insl
repz
cmp
adc
pop
pop
add
imul
dec
psubusw
adc
iret
aaa
fmulp
stc
xor
jge
inc
aam
push
in
pusha
fs
adc
add
test
and
adc
or
xor
and
xor
pop
cld
push
ljmp
xlat
aad
arpl
or
inc
xor
inc
gs
push
into
lds
cld
xchg
gs
dec
shll
test
cmp
imul
lret
aad
jno
test
paddusw
ss
add
pop
stos
int
mov
notb
rolb
jae
xchg
stc
pusha
dec
jnp
aad
mov
imul
and
lds
xchg
or
cmp
mov
in
loope
sbbl
or
adc
cwtl
mov
flds
sbb
out
sub
inc
mov
subb
xor
cwtl
jge
jb
int3
adc
push
cs
mov
nop
loop
ljmp
jae
adc
cli
das
inc
sub
mov
pop
in
arpl
cmc
sbb
and
mov
inc
dec
pop
addr16
js
lea
flds
xchg
mull
es
fdivrl
outsb
inc
push
and
inc
les
arpl
push
in
xchg
es
ja
sub
and
xchg
sbb
cli
push
mov
mov
or
inc
or
cli
cmpsb
dec
jne
mov
mov
fmul
js
addb
stc
mov
stos
push
pop
jmp
insl
lds
insl
dec
push
mov
cltd
adc
addr16
fisttpl
dec
and
add
cmpsl
sbb
mov
push
pop
adc
pop
data16
mov
loop
push
dec
and
stos
xchg
in
jge
mov
jbe
xchg
mov
or
add
mov
cmpsl
jmp
orb
js
dec
or
into
test
xchg
xor
xchg
pop
push
sub
sahf
push
adc
ja
js
sub
aad
adc
ja
mov
lock
fidivrl
sahf
outsl
or
mov
cmp
mov
jecxz
xchg
ficoms
xlat
push
in
bound
dec
test
mov
add
and
std
cmp
les
movnti
pusha
stos
push
lret
xor
frstor
jno
xlat
dec
mov
or
iret
shlb
pop
push
and
cmp
mov
or
js
and
test
push
or
gs
js
imul
jae
and
and
jge
jae
adc
mov
movsl
mov
ret
ds
test
sbb
ljmp
in
cmp
sbb
cmp
push
mov
jmp
ds
pop
jo
repz
imul
loop
aam
xchg
jle
outsb
dec
into
push
jno
fwait
dec
pop
dec
fcmovne
jle
aad
test
sub
insl
lcall
pop
and
out
mov
xor
jo
test
dec
pop
out
test
dec
jmp
pop
dec
hlt
mov
repz
aaa
lods
rorl
jo
sub
sub
stc
xchg
imul
adc
lods
dec
data16
jae
icebp
inc
out
adc
test
rol
cmc
inc
test
lods
jge
mov
sbb
test
xchg
cmp
js
je
sub
js
xchg
push
push
movsb
cmc
ljmp
mov
jnp
jae
xlat
cmp
and
insb
es
in
popa
repnz
fdivrl
jp
sbb
add
mov
sbb
dec
dec
mov
xchg
xchg
jne
mov
mov
jp
out
push
shlb
xchg
lds
sbb
fcomp
jge
dec
jns
rorb
or
fadd
jp
mov
fldenv
adc
lds
jns
push
into
push
inc
lret
mov
arpl
xor
mov
mov
jnp
popa
ret
sahf
and
mov
inc
scas
rcrb
imul
out
inc
xchg
ud0
ds
outsb
cmp
and
add
mov
dec
push
pop
pop
cmp
into
and
sbb
fwait
enter
pop
dec
outsl
xchg
jmp
fwait
out
mov
lods
adc
in
fwait
mov
test
dec
fmull
aas
and
inc
mov
cmp
test
sub
scas
pop
sub
add
daa
test
loop
mov
inc
sub
lret
mov
sbb
shrl
aam
scas
stc
inc
negb
cs
push
cmp
out
xchg
add
lods
push
mov
jbe
xchg
mov
pushf
mov
mov
push
pop
andl
push
push
fwait
test
push
mov
inc
adc
jbe
add
ljmp
push
call
pop
shlb
mov
sub
pop
pop
pop
cmp
pop
or
imulb
lret
jg
addr16
pop
jnp
mov
div
ss
js
enter
fwait
sub
movsb
xchg
in
jne
fwait
negb
shl
es
es
mov
push
clc
jnp
cltd
icebp
andb
testw
aam
fnstsw
or
sbb
in
inc
push
outsb
stos
cmp
repz
jno
cmp
pop
out
sahf
je
jmp
mov
or
bound
xchg
stos
int
cltd
push
dec
jno
loop
pop
test
xchg
leave
pop
xchg
cmp
xchg
xchg
jbe
cs
and
mov
sbb
mov
or
mov
cmp
ss
scas
add
int3
xchg
cs
adc
inc
xchg
mov
inc
xor
scas
sub
mov
pop
pop
insl
dec
xchg
fnstcw
mov
push
rcrl
xor
cmp
lret
inc
repz
dec
xchg
sub
pusha
repnz
lods
mov
sub
cmpsl
or
xchg
push
clc
jbe
in
popa
jmp
pop
and
push
add
les
adc
sub
cmpsb
dec
cmp
bnd
and
sbbl
pop
jp
lret
lret
mov
mov
scas
pop
xor
sahf
and
test
fdivrl
iret
xchg
daa
sbb
lret
fwait
jecxz
or
add
adc
rep
in
mov
scas
out
push
cli
test
inc
stos
jg
lret
insb
std
push
push
adc
mov
js
pop
xor
nop
sub
pop
sub
pop
loop
lret
xor
cmp
jmp
mov
aaa
ret
sbb
add
mov
movsb
inc
jbe
mov
rcpps
jne
rorl
fs
adc
xor
adcb
add
jnp
lods
int3
and
sub
mov
xlat
aam
sub
in
sbb
cltd
mov
cwtl
pop
and
out
or
les
push
lret
in
and
sbb
sahf
mov
inc
mov
xchg
push
in
cmpsb
mov
ffreep
and
inc
dec
shrl
add
sbb
mov
pop
sarb
pushf
mov
test
mov
in
xchg
stos
mov
xchg
cmpsl
mov
insb
inc
push
dec
lock
ds
pop
or
inc
mov
adc
inc
cli
mov
or
mov
mov
push
rcrl
push
int
inc
test
pop
or
mov
rcrl
sub
hlt
inc
cmp
js
or
xor
lcall
std
icebp
jle
mov
and
inc
call
or
cs
mov
clc
fdiv
dec
pop
mov
jns
sub
repz
mov
pop
es
cmpsl
jmp
push
scas
dec
cmp
in
hlt
sbbl
sub
mov
jo
aaa
je
cmp
pop
stc
cltd
xor
sahf
sub
sbb
dec
adc
leave
fst
cmpsl
out
ds
cmpsl
or
js
xor
dec
sbb
outsl
rolb
js
call
sub
movsl
xchg
xchg
fdivrs
sarb
or
jl
mov
jae
fs
jecxz
ret
mov
mov
sbb
pop
loop
xor
mov
cmp
bsf
sub
cld
mov
dec
adc
cmpl
jg
dec
mov
sub
or
ds
ja
inc
mov
pusha
sbb
mov
pop
jne
jle
out
adc
pmulhuw
jmp
cmp
je
mov
negb
push
movsl
icebp
negb
loopne
stc
sahf
xor
outsl
cs
dec
shll
pop
sbb
sub
icebp
sub
inc
push
jbe
popa
movsl
or
pop
jl
shlb
insl
sbb
and
or
repnz
out
pop
shl
mov
je
aas
xor
cltd
sub
push
xor
cmpsb
cmp
stos
and
inc
xchg
repz
in
ret
fcmovne
scas
jmp
into
xor
fsubs
inc
sub
xor
icebp
add
sbb
test
in
xchg
gs
pop
mov
dec
xor
jge
cmpsb
test
loopne
or
testb
lock
andb
lock
pop
je
lds
idivl
mov
pop
js
popa
xor
or
adcl
aas
in
push
push
mov
stc
pop
pop
mov
lods
adc
mov
pop
ret
sbb
cmp
sub
mov
dec
call
jecxz
mov
movsl
daa
fldt
loopne
testl
add
inc
cmpsb
and
pop
jge
inc
sub
pop
loope
mov
jmp
daa
jmp
adc
pushf
lock
shll
in
leave
dec
and
or
out
xchg
or
adc
cmc
cmp
in
mov
add
fildl
jo
adcl
in
sub
pop
sbb
pop
or
lock
pushf
mov
hlt
scas
lret
mov
fadd
xor
cmp
inc
sbb
shrb
xbegin
and
sbb
fcomip
mov
inc
dec
scas
lcall
pop
ret
push
ret
xor
aas
xorl
or
adc
sbb
inc
push
aas
xor
xchg
cld
push
and
dec
adc
sub
xchg
je
scas
xor
fs
das
mov
add
lock
xchg
and
add
cmp
push
mov
pop
pop
std
out
cmp
mov
mov
sbb
sbb
xchg
popf
and
sub
cwtl
iret
adc
hlt
adcb
sub
insl
lods
repnz
ja
mov
dec
lahf
xchg
out
mov
into
xor
sub
imul
test
scas
push
dec
test
pop
adc
ficoml
xchg
ja
xchg
or
insl
mov
aas
jmp
inc
add
int3
mov
cs
fstl
jno
mov
scas
faddp
adcb
imull
jg
cmpsb
pushf
lods
sbb
aam
in
xchg
inc
inc
in
hlt
scas
pop
ja
shrl
cmp
inc
mov
sub
popa
lods
jmp
scas
repnz
inc
sahf
sarb
imul
mov
push
fidivs
out
cwtl
enter
push
push
das
sbb
and
imul
mov
push
popa
ds
iret
stc
fucom
mov
cmp
inc
decb
push
push
lret
lahf
in
dec
mov
cmpsb
push
push
or
xchg
push
cmp
mov
inc
fs
out
sub
mov
mov
out
stos
fsts
inc
addl
out
adc
imul
sbb
or
repz
push
je
inc
insl
sti
xchg
mov
mov
imul
fdivp
dec
aad
push
or
fstpl
pop
push
jecxz
andl
mov
inc
mov
pop
fs
loope
pop
lret
pavgb
mov
movsl
jle
jmp
out
xor
xchg
pmulhuw
sti
xor
mov
or
mov
sub
fwait
add
adc
xchg
test
sbb
add
inc
ror
or
jne
xorl
add
sub
mov
addr16
lods
mov
insl
sub
pop
xchg
or
rcll
insl
dec
lcall
stos
arpl
addr16
and
dec
test
clc
sbb
mov
lods
cmc
movsb
sahf
out
jg
cmp
cltd
fbld
push
addr16
inc
outsl
icebp
dec
cld
xchg
sti
mov
in
mov
aas
sub
sarl
lcall
push
jl
xlat
jno
adc
or
into
insb
loop
jmp
ljmp
add
ljmp
lcall
jle
sbb
inc
dec
cmc
push
push
insl
lea
in
ljmp
mov
or
push
cmovg
stos
pusha
movsb
push
xchg
push
and
std
and
loopne
popf
icebp
xor
pushf
xorb
and
divb
xor
jle
stos
mov
and
dec
in
add
loope
cmc
cld
out
inc
xchg
xchg
push
mov
movb
push
movsl
dec
jo
or
nop
je
mov
js
mov
dec
into
imul
testl
xor
pop
jnp
int
pop
cmc
and
jle
jle
push
mov
pop
cmp
sbbl
jbe
imul
ret
movsl
in
clc
or
outsl
dec
jle
loopne
int
pop
jno
icebp
xchg
adc
sbb
lret
lret
and
jbe
aaa
pop
jae
lock
jno
push
sbb
cwtl
cmp
or
pop
mov
arpl
scas
sub
cmp
push
xchg
ficompl
mov
add
dec
out
fimull
aam
xchg
lret
xchg
dec
or
jns
je
jne
ds
push
add
test
xor
pop
xor
sbb
mov
pusha
xchg
insl
xchg
lods
gs
sti
stc
lods
jo
push
orl
repnz
push
mov
add
xchg
sub
outsl
push
jl
cmp
cmp
js
fimull
pop
loop
mov
mov
int
ret
sbb
shlb
fimuls
mov
sahf
or
jle
xor
int
xor
adc
in
das
add
pop
jno
or
pop
or
iret
scas
imul
inc
lahf
nop
fbstp
data16
xchg
dec
aas
jmp
arpl
push
lret
aaa
sbb
fdivl
outsb
jle
idivb
push
sti
adc
add
inc
sarb
and
shlb
xchg
mov
iret
and
dec
jo
and
fisubrs
fcoml
jge
call
aas
add
xorl
dec
mov
sbb
int3
pop
testl
fistl
das
sub
sub
mov
adc
mov
arpl
pop
push
clc
mov
or
xchg
pop
mov
bound
mov
dec
mov
out
or
test
cld
int3
and
add
jmp
mov
rol
stos
push
and
stos
cmp
or
out
in
dec
test
js
clc
sbb
dec
mov
dec
xchg
xchg
and
pop
mov
outsl
jb
stos
dec
xchg
aas
stos
outsb
mov
ja
pop
arpl
jbe
mov
lods
nop
call
jnp
xor
jo
lret
adc
fnsave
push
leave
lahf
andl
sub
mov
xor
mov
xor
and
sbb
xchg
push
movsl
or
sub
xchg
dec
and
insl
mov
imul
or
test
orl
push
inc
test
xlat
test
repnz
mov
xchg
je
ret
sbb
adc
inc
imul
pop
sub
xchg
inc
inc
sbb
rcrb
sar
adc
mov
rorl
cmp
jae
jp
xchg
sub
sub
push
mov
rcrb
push
or
push
sub
mov
cltd
inc
cwtl
sbb
and
push
push
outsb
arpl
lcall
stos
addr16
insb
cltd
sub
scas
inc
jg
lods
adc
and
push
js
mov
pop
xchg
and
xor
lcall
scas
adc
or
jne
jecxz
xchg
and
sbb
mov
mov
jmp
stos
lret
std
sti
cwtl
sti
outsb
mov
push
mov
jg
push
test
xchg
stc
imul
in
pop
das
mov
test
aas
daa
scas
jl
rol
push
add
repnz
bound
in
cmp
add
icebp
outsl
aaa
xchg
rcr
lcall
or
and
cwtl
or
jae
push
daa
push
xchg
jp
addr16
or
lea
push
popf
jno
xor
push
mov
mov
push
adcb
or
lret
jae
jb
mov
sarb
xor
ret
jno
xchg
loope
xchg
rol
push
sub
roll
out
add
std
and
pop
sub
clc
mov
sbb
pop
xchg
fists
jmp
push
inc
addb
imul
or
test
mov
mov
mov
mov
in
daa
mov
xor
notb
push
jp
or
fstl
dec
add
testb
adc
and
pushl
mov
push
fimull
cmc
es
pop
sbb
das
push
mov
lods
jmp
shl
insl
mov
dec
testl
rorb
inc
out
push
push
adc
fs
pop
aad
cli
mov
cmc
sbb
andl
decl
mov
or
push
dec
sarl
sti
fsubrp
pop
ja
shrb
jmp
cltd
out
adc
imul
adc
jno
les
push
lds
add
lock
xchg
std
jecxz
ljmp
repnz
ss
mov
xchg
data16
cwtl
aad
pop
rorb
dec
hlt
adcl
or
inc
sub
pop
adc
xchg
pop
loop
adcl
lds
xchg
xor
sahf
test
setp
push
mov
xor
or
mov
cmpl
jmp
xchg
stc
mov
jge
mov
jl
inc
testl
mov
in
pusha
adc
shrl
add
pop
or
mov
inc
cmpsb
scas
mov
iret
jmp
call
inc
in
jb
adc
lock
scas
pop
dec
jae
imul
aad
in
pop
inc
or
cmp
popa
xchg
rcl
mov
arpl
in
push
pop
sub
pop
and
addl
push
dec
and
push
xlat
sbb
sbb
xchg
ljmp
adc
inc
or
in
xor
dec
ljmp
mov
cmp
les
icebp
pop
xlat
mov
in
test
add
sbb
mov
push
pushf
fwait
pushf
insl
sub
out
orl
adc
dec
push
movsb
hlt
push
push
add
mov
aam
mov
fcompl
xor
push
ret
dec
adc
out
mov
pop
mov
fwait
mov
cmp
pop
insl
xchg
xor
lret
pop
divb
xor
add
fisubl
outsl
shrb
sarl
movsb
adc
mov
sti
lret
xlat
leave
and
in
adc
cltd
push
fxch
or
sbb
stos
push
nop
div
aam
call
sbb
xchg
nop
sub
stos
mov
mov
cmp
in
les
nop
xor
nop
mov
pushf
sbb
pusha
iret
in
mov
push
push
and
ljmp
stos
out
sub
xor
mov
sub
mov
ret
stos
mov
insl
push
push
jae
insb
sti
test
xchg
mov
nop
mov
ret
je
jnp
jmp
je
pop
inc
cld
dec
iret
shlb
mov
pop
xor
and
insb
loopne
popf
repnz
pop
xchg
clc
mov
mov
adc
xor
fidivrs
aad
negb
mov
int3
or
jae
mov
arpl
js
jmp
pop
mov
cld
fnsave
and
rcrb
push
sub
fld
shrb
jl
pop
xchg
lahf
cmp
call
in
icebp
repz
and
mov
cmp
xor
fadds
adc
sahf
loope
or
icebp
sti
not
mov
sbb
push
in
mov
stos
sarl
add
inc
jle
jl
push
leave
mov
shlb
pop
insb
movsl
jbe
pop
mov
jns
outsb
mov
sub
dec
dec
xchg
sub
pop
mov
jne
adcl
xchg
stos
test
and
fs
nop
mov
out
hlt
push
push
push
jp
cmpsb
xchg
out
mov
leave
imul
mov
hlt
pop
jmp
lock
aad
inc
aam
jbe
push
jbe
mov
std
in
das
das
lods
fcoms
xchg
push
push
mov
sub
dec
out
add
data16
mov
pusha
xor
imul
or
loope
sub
sub
aas
scas
sub
xchg
mov
mov
push
int3
mov
cltd
inc
push
fdivrp
inc
out
xor
rol
cmp
test
lret
sub
adc
cs
fucomi
ja
push
fstps
sbb
jne
xor
jns
out
pop
mov
add
xor
cmp
sub
xor
dec
out
lahf
xor
mov
mov
push
sahf
push
enter
out
testb
cmpsl
stos
arpl
pushf
testl
mov
cmp
popf
lock
fisubs
je
rcrb
or
inc
scas
and
repz
mov
lds
sub
fimull
sbb
js
lods
pushf
inc
pop
cltd
inc
push
cmpl
fbld
adc
pushf
inc
xchg
fdivrs
mov
mov
mov
call
jg
mov
loop
jb
test
pushf
pop
test
popa
inc
inc
pop
add
mov
adc
inc
dec
push
sub
movsl
mov
sub
xor
push
inc
hlt
scas
data16
icebp
or
subb
sarl
cmpsl
mov
pop
cmp
mov
xchg
cmp
daa
mov
incb
pop
mov
push
push
sbb
sbb
mov
fwait
push
out
into
or
mov
xlat
sbb
rcll
or
cwtl
pop
and
popf
sbb
pop
jge
cmp
mov
pop
outsl
push
cli
insl
int
pop
flds
and
push
outsl
or
dec
fstp
mov
loopne
push
mov
cmp
fdiv
rorl
lds
jno
inc
imul
xchg
or
push
aad
sub
mov
sub
jp
xor
pop
sub
jl
mov
int
shl
das
dec
and
xchg
pop
push
dec
mov
fcmovnb
mov
add
dec
sbb
lahf
mov
les
inc
test
scas
in
ret
mov
data16
add
mov
and
xchg
jne
jmp
lds
mov
xchg
repz
call
and
inc
inc
push
andb
lds
pop
rorb
adc
ffreep
call
push
js
shlb
xor
ds
pop
rcrb
mov
movsb
dec
xchg
mov
aam
cmp
xchg
icebp
arpl
es
je
pop
dec
push
mov
inc
or
lock
sub
ret
or
mov
jg
jle
leave
dec
jle
and
and
fldcw
arpl
mov
pop
add
clc
shrb
and
jl
test
imul
mov
popf
scas
inc
cmp
jae
test
sub
dec
and
mov
push
ja
enter
hlt
dec
mov
popf
out
xor
push
cmc
xchg
into
xchg
push
mov
mov
shrb
cmp
pop
cwtl
jle
jae
aad
je
mov
test
push
cld
out
sbb
cmpsb
shll
mov
pop
orl
cmp
pop
sbb
xor
push
out
inc
mov
fdivp
insl
lahf
fcomps
fstpl
and
jno
mov
push
xor
jmp
cmp
add
js
lock
push
sbb
fbld
push
sti
out
gs
in
stc
movsb
ret
jne
and
adc
mov
pop
fnstsw
sbb
pop
push
mov
mov
cmp
mov
fdiv
mov
mov
mov
inc
xchg
les
xchg
push
mov
push
les
mov
stos
mov
mov
mov
xchg
sub
pushf
or
push
leave
loopne
rolb
cs
or
ret
or
fldcw
cmp
js
inc
adc
pop
mov
dec
scas
push
aas
dec
sti
cmc
loop
lods
movsl
jb
cltd
sbb
into
xchg
mov
fs
mov
mov
bound
adc
testb
into
gs
mov
scas
dec
cli
xchg
int3
push
into
lcall
neg
mov
push
push
jo
outsb
out
pop
mov
cmpsl
push
arpl
mov
stos
add
les
mov
fsubl
and
sbbb
addr16
push
mov
or
add
ret
mov
leave
jmp
clc
jp
jb
movsl
dec
xchg
ja
mov
loope
sarl
pop
popf
lds
int
jae
loopne
mov
sbb
sarb
fistpl
nop
mov
mov
dec
out
xor
add
pop
adc
jecxz
int3
mov
cmp
lret
adc
cld
ja
and
mov
in
lahf
xchg
das
adc
in
roll
xchg
ret
fimull
ret
or
inc
and
xchg
jbe
inc
xchg
divb
xchg
and
imul
jge
cmp
add
sub
jecxz
lods
cltd
xlat
dec
lock
outsb
dec
sub
scas
outsb
loop
inc
ret
inc
cmc
jne
xchg
sbb
push
jae
jns
jno
xor
movsb
repz
mov
dec
or
sbb
aas
into
fsubl
mov
adc
dec
call
fcoms
jmp
xchg
add
scas
and
lock
mov
popl
fidivrs
push
repnz
or
jmp
lock
cmpsl
adc
dec
fistl
aas
pop
pop
push
ds
sarb
aam
push
imul
inc
out
mov
ja
lock
outsl
gs
in
push
xlat
stc
xor
jp
adc
cmp
iret
scas
bound
sahf
dec
jbe
int3
sub
jne
clc
push
lret
jl
out
xor
cmp
add
push
out
lds
mov
xor
insl
aad
jbe
pand
stos
lret
push
xchg
es
dec
dec
insl
inc
adcl
cmp
sti
jae
or
pop
mov
push
sti
pop
cli
pop
popa
xchg
jo
popf
mov
repnz
xchg
dec
mov
out
mov
lea
xlat
lcall
shl
icebp
in
and
cmpsl
std
fnstenv
cmpsb
addr16
fs
imul
lahf
jo
addb
sbb
adc
scas
inc
shr
pop
cwtl
mov
rep
repnz
push
in
adc
xchg
divb
roll
jno
mov
cmp
mov
mov
mov
adc
stos
mov
adc
pop
ret
mov
pop
cmp
push
jno
outsl
call
jb
flds
pop
aas
insl
jb
pop
lock
arpl
pop
fstps
cmp
mov
incl
fistpl
mov
jb
push
mov
out
push
fwait
pushf
dec
rcrb
insb
test
adc
call
jo
les
test
fadd
sbb
pop
cmpb
aam
xor
lret
adc
mov
xor
sub
jmp
pop
lcall
or
jmp
lods
sarb
test
inc
aad
enter
nop
mov
data16
decb
shl
arpl
loop
mov
cmp
add
sub
outsb
push
jle
jnp
pop
stos
mov
or
aam
mov
dec
gs
lock
inc
inc
aas
mov
mov
add
mov
iret
jb
or
adc
es
mov
push
and
mov
aaa
bound
data16
mov
adc
and
test
or
cs
lds
pop
insb
sub
or
xor
sub
dec
cmpsl
or
jge
movsl
dec
add
mov
sub
dec
icebp
lret
lods
fiadds
mov
jae
adc
addr16
mov
pop
mov
pop
out
shll
pushw
push
rorl
lods
mov
jne
xchg
popf
fcmovnb
mov
into
cmpsl
adc
test
lods
mov
sarl
movsb
setae
add
stc
cld
fidivrs
jmp
mov
in
mov
cmp
ja
xchg
xor
jo
call
xchg
inc
adc
mov
or
ds
inc
dec
mov
and
jb
in
pop
jbe
pop
call
scas
test
lea
sbb
iret
xor
mov
sahf
sbb
push
push
add
in
dec
mov
sbb
mov
pop
lret
test
push
es
std
sbb
mov
cmpsl
mov
ficoms
ljmp
mov
iret
imul
mov
mov
clc
push
decl
ret
jp
jge
jne
and
jg
mov
cmp
mov
pop
ret
lahf
popa
jo
out
pop
fisttps
xor
cmp
stc
push
xor
mov
xor
ja
jno
rdtsc
daa
inc
cmp
aaa
cmp
or
fimull
cmp
daa
sbb
wrmsr
cltd
mov
data16
xor
dec
jne
mov
gs
or
call
dec
rcll
push
or
pop
add
and
cmpsl
ret
loop
addr16
jle
hlt
dec
xor
mov
iret
fnstenv
andl
cltd
outsb
jnp
test
lods
movsb
push
dec
cmc
rol
into
pop
popa
mov
fisttpl
hlt
scas
lds
lods
xchg
repnz
pop
lcall
dec
and
adc
sbb
push
shll
mov
popf
sub
sub
cltd
add
rcll
cli
das
fbld
in
fcmovnb
lcall
cltd
mov
out
in
jb
pop
push
xchg
in
sub
add
xchg
imul
adc
roll
sub
out
push
es
imul
push
out
xchg
push
pop
sub
idivl
xchg
xlat
in
sbb
or
jmp
pop
andb
cwtl
call
std
in
cs
inc
pop
es
mov
insl
mov
fcmovne
xor
pushf
mov
and
jbe,pt
aaa
repnz
and
jg
in
sub
mov
out
incl
popa
mov
lods
inc
jg
or
xchg
enter
lret
inc
or
stc
dec
push
cmpsb
stc
pop
jg
inc
addb
and
mov
or
sbbb
negb
mov
loopne
xchg
out
xor
xor
pop
pop
dec
cmp
xchg
xchg
add
in
dec
mov
mov
in
jmp
insb
or
pop
push
iret
int3
sub
gs
cmc
mul
jae
pusha
sbb
push
aad
xor
pop
and
out
out
in
push
daa
xor
jns
cli
mov
dec
fistl
popa
cmp
test
in
lret
pop
pushf
xor
insl
sete
xchg
mov
pop
inc
inc
lret
lds
addr16
mov
sub
fcomps
dec
arpl
lahf
jae
aad
arpl
js
fnstenv
mov
subb
xchg
add
std
repnz
adc
pop
int3
test
pop
aaa
xchg
mov
sub
cltd
jae
rcrb
push
push
les
notb
aas
das
xchg
push
push
cwtl
sub
aas
or
xor
xchg
push
xchg
sub
ss
sbb
lcall
add
out
jmp
lret
add
cmp
lret
imul
mov
mov
int3
push
jno
movsb
shll
add
or
xchg
mov
aaa
adc
sub
cmp
mov
lock
sub
out
imulb
mov
fsubrl
aas
outsb
mov
add
ds
das
mov
ds
cmp
ljmp
mov
daa
or
jl
jb
cmp
ljmp
pop
mov
dec
cmpsl
scas
out
xchg
xor
outsb
pop
div
push
mov
flds
add
divb
mov
xor
mov
add
jle
js
test
lahf
repnz
outsb
jl
stc
out
add
jmp
push
cmpsl
inc
loop
mov
jmp
pop
scas
lock
dec
sbb
xor
stos
daa
std
loopne
mov
stos
ficompl
in
fdivrs
push
adc
pop
lret
je
inc
sub
and
add
jmp
pop
inc
sahf
std
out
cmp
out
std
inc
push
repnz
insb
jo
and
lods
sbb
jnp
inc
push
outsl
daa
lock
imul
mov
aaa
lods
add
cli
sbb
sahf
fucomi
fwait
aad
insb
push
daa
mov
mov
jle
xor
jmp
data16
test
pushf
mov
add
sub
imul
push
sub
into
pusha
jmp
mov
inc
push
xchg
out
into
sahf
test
sub
cli
test
cld
mov
add
jge
fcmovu
add
out
inc
sbb
push
mov
pushf
sti
insl
aas
inc
mov
fs
inc
sub
push
das
sbb
pushf
jnp
jle
push
jmp
xchg
xchg
imul
call
aam
inc
adcl
imul
xchg
pop
mov
pop
cs
cmp
movsl
dec
xor
dec
mov
mov
and
movsl
in
mov
fmuls
iret
fsub
es
sahf
mov
ret
sub
out
mov
repnz
data16
js
aas
int
divl
repnz
popa
xchg
adc
jns
pop
pushf
and
fucompp
xor
mov
mov
shll
lods
dec
aaa
mov
sbb
xorl
insb
cmc
sbb
sub
dec
sub
icebp
movsl
mov
out
pop
mov
ficomps
loopne
cli
dec
sub
stc
dec
jmp
loopne
and
lods
cli
jnp
sub
loop
out
sub
push
mov
rorb
mov
cmpsl
into
test
push
addr16
xchg
cmpsb
xchg
daa
cmp
popf
xor
jl
lds
fcomps
imul
fsubrl
sbb
sti
addr16
jl
stc
test
cwtl
inc
negl
dec
xor
jmp
mov
xchg
cmp
inc
inc
mov
xchg
scas
insb
cmp
rcrb
pusha
jns
push
in
cld
push
jecxz
out
adc
dec
andl
mov
cmp
mov
inc
pushf
repz
testb
xor
fsubl
adc
dec
xchg
mov
pop
shlb
xchg
aam
push
mov
fmulp
in
xchg
in
inc
push
cmp
mov
mov
loop
sbb
mov
mov
or
push
jmp
testl
cmpsb
sbbb
stos
psubw
repnz
jne
pusha
loopne
push
in
fcoml
imul
fstpl
push
pop
ja
in
sbb
test
and
jnp
cltd
push
aam
in
cmp
fucomi
sub
push
xchg
cmp
hlt
and
std
jecxz
aas
cmp
ss
xor
sbb
popa
mov
mov
xchg
jle
mov
hlt
cltd
mov
mov
mov
repnz
jl
test
cmpsl
outsb
nop
push
pop
dec
sbb
fisubs
jle
fstps
pop
xor
cmc
fimuls
mov
fcomps
int3
or
fadd
push
dec
cmp
pop
add
mov
scas
cmp
cmp
fdivrl
add
mov
ljmp
lcall
cmp
sarl
movsl
add
movsl
push
lahf
dec
aaa
or
jl
pop
cmp
cmp
repz
shrl
xor
int3
xchg
cld
cmp
dec
ficoml
push
aas
or
ret
xor
lahf
imul
mov
popf
push
sub
nop
inc
adc
rol
push
cmp
stc
pop
fisttpll
gs
loopne
cmp
int
andl
xchg
jnp
jno
pop
mov
mov
fisttpll
fisubrs
inc
xor
mov
imulb
sub
jg
jbe
mov
pop
pop
loop
aam
sarl
outsb
and
push
push
test
fcomps
mov
jne
mov
mov
aad
popf
dec
int3
loopne
stos
mov
mov
fwait
and
sub
xor
cltd
xor
js
cmp
subl
mov
jbe
mov
mov
nop
and
call
push
inc
lds
js
cs
test
negl
jl
xorb
mov
push
ret
push
inc
or
hlt
mov
cwtl
call
mov
or
mov
lea
cmpb
outsb
xchg
adcl
scas
loop
pusha
loopne
mov
mov
adc
xchg
fsubs
mov
mov
rol
rol
xor
or
dec
dec
arpl
cmp
xlat
fldenv
mov
cwtl
xchg
movsl
arpl
dec
int3
std
mov
testl
insl
xchg
test
jecxz
call
push
pop
sar
out
dec
inc
adc
inc
pop
jne
outsl
imul
mov
ss
divb
cli
mov
data16
sti
sub
mov
sbb
add
fdivrl
popa
lret
and
xchg
or
mov
in
jmp
lock
cmp
or
or
cmpsl
arpl
ficoms
and
sub
adc
jnp
xor
loop
add
adc
adc
shr
stos
std
int
lock
sub
mov
sahf
adc
mov
xchg
insb
push
add
add
stos
push
scas
push
sub
jl
push
mov
bound
jb
mov
pop
and
or
sahf
mov
jecxz
lahf
jno
mov
test
cmp
mov
addb
imul
das
cmpsl
into
aad
fcompl
lahf
fildl
and
push
fisubl
mov
loope
mov
test
sbb
pop
rcll
mov
mov
repz
mov
mov
cltd
std
fisubrl
xlat
lods
sub
andb
outsl
push
fwait
add
repz
dec
xor
inc
je
sub
mov
in
xchg
lcall
outsb
sub
xchg
pushf
out
fistpl
lock
cs
clc
seto
ljmp
mov
subl
and
in
or
mov
repz
and
mov
or
out
dec
push
push
sbb
dec
sub
dec
ds
into
push
lret
mov
sub
xor
cmpsl
or
aam
cwtl
scas
ja
in
add
or
lods
cmp
mov
adc
ljmp
sbb
dec
imul
add
xchg
int3
mov
sbb
and
arpl
push
dec
pop
rolb
shll
test
movsl
in
mov
imul
sbb
stc
pop
sub
lcall
push
mov
repz
adc
push
jb
xchg
out
and
jnp
mov
sub
stos
xor
jne
sub
or
mov
jmp
sub
incb
xlat
mov
adcb
arpl
dec
mov
das
in
cmp
jne
mov
fs
outsl
adc
inc
sti
xchg
dec
test
mov
cmp
fistpl
jno
cmp
push
mov
push
sahf
mov
sbb
cmp
sub
lahf
cwtl
mov
fmull
fistps
inc
shl
cwtl
xor
mov
leave
movsl
cmp
fimuls
jb
push
out
jl
jns
mov
adcb
inc
adc
xchg
dec
aad
lahf
mov
cld
sbb
jecxz
aas
inc
add
scas
jns
pusha
xor
xor
mov
in
push
sub
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sub
or
xor
add
add
push
outsb
inc
insb
xor
cs
insb
add
adc
add
or
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
add
add
pop
sub
mov
lea
mov
lods
stc
jmp
ret
outsl
jmp
call
rclb
in
pop
mov
xor
or
dec
addb
add
add
or
addb
ret
or
add
addb
adc
xlat
dec
addb
or
dec
addb
roll
sbbb
mov
addb
or
add
mov
pop
sti
sbb
repnz
addb
mov
enter
adc
xchg
nop
xchg
add
cltd
pop
fbld
enter
mov
js
call
ret
or
cmpb
add
add
adc
sbb
andl
add
or
xor
cmp
dec
addb
orl
dec
addb
or
dec
addb
ljmp
into
dec
addb
loope
or
dec
addb
or
dec
addb
sub
or
dec
addb
or
dec
addb
or
add
adc
dec
dec
addb
or
addb
call
or
addb
or
addb
movb
add
or
or
movsb
add
add
or
or
addb
add
or
dec
addb
or
dec
addb
pusha
add
add
or
dec
addb
or
dec
addb
add
add
or
dec
addb
or
dec
addb
sbb
add
adc
cs
addb
or
xchg
dec
addb
out
or
dec
addb
add
add
outsb
enter
add
add
pop
sbbb
sbbb
addb
add
xlat
cmp
add
sub
dec
addb
movsl
repnz
hlt
adc
ljmp
mov
pop
jnp
dec
addb
js
imul
test
or
aam
mov
addb
sub
addb
or
dec
addb
add
add
or
add
rorb
add
add
jnp
dec
addb
aam
ljmp
ja
addb
add
add
add
aam
aam
aam
rolb
add
add
addb
icebp
ljmp
icebp
aam
scas
ljmp
push
dec
addb
rorl
sub
sub
sub
aam
sbb
xchg
dec
addb
lods
cmpsb
scas
ljmp
out
dec
addb
xchg
popf
cmpsb
scas
shll
add
add
or
dec
addb
mov
or
xchg
icebp
andw
adc
mov
mov
in
daa
xchg
addb
mov
dec
addb
pop
or
add
add
rcll
add
add
or
addb
xchg
icebp
push
js
out
add
movsw
add
in
ljmp
in
in
add
faddl
jl
lret
ljmp
in
fsubr
add
mov
jl
xchg
add
add
mov
enter
xlat
mov
cld
sub
call
add
add
jo
pop
pushf
and
mov
sbb
in
sub
loope
test
adc
in
sbb
loope
add
add
xlat
cs
std
pop
icebp
icebp
adcl
pop
clc
pop
mov
ret
push
test
jbe
or
or
incl
addb
cmp
xchg
push
adc
and
add
mov
mov
addb
js
aas
addl
add
push
push
cmp
xchg
popl
add
add
pop
or
dec
addb
sub
dec
addb
or
pop
add
add
imul
addb
or
dec
addb
add
add
xchg
lods
sbb
dec
addb
xchg
xlat
cs
lods
or
sub
or
je
ljmp
or
ljmp
add
out
ret
mov
mov
addb
sub
ret
push
adc
add
add
cmp
cmp
xchg
adc
add
sbb
testl
scas
pop
loope
icebp
pop
adcl
mov
into
dec
addb
sbbl
add
addb
add
add
sbb
or
addb
pop
xchg
nop
add
add
xchg
ljmp
mov
addb
lods
or
sub
xchg
add
out
add
add
add
xchg
pop
add
addl
add
pushl
mov
dec
addb
sub
push
add
add
dec
addb
add
add
sbb
or
pop
shll
adc
xor
add
add
dec
addb
sub
add
or
dec
addb
add
add
mov
jnp
dec
addb
call
add
loopne
adc
idiv
out
in
sbb
push
xlat
adc
testl
add
cmp
lods
sbb
dec
addb
out
or
fs
lea
rorl
lea
adc
mov
pop
test
pop
jb
push
or
incl
lea
pop
cld
or
push
or
jmp
addb
add
add
xchg
or
dec
addb
add
add
xor
jnp
dec
addb
js
sahf
test
imul
add
cmp
add
xlat
add
sarl
add
addb
xchg
adc
add
xlat
add
xchg
jnp
inc
addb
out
jae
add
add
pop
push
addl
in
loop
mov
or
data16
ret
jp
xlat
add
in
fdivrl
mov
fucomp
adcl
jge
loop
rcl
aas
jle
insb
inc
push
push
mov
jb
jp
push
push
cwtl
fcompl
push
fs
and
aaa
jecxz
out
sbb
or
orl
or
and
pop
ds
idivl
lahf
xchg
div
repz
push
int
add
cmpl
ja
scas
lods
stos
enter
inc
inc
mov
mov
jmp
mov
mov
cmp
push
xchg
jbe
jae
decl
and
or
xlat
or
jo
ljmp
pop
mov
pop
jno
add
add
outsl
dec
addb
add
add
adc
add
add
add
add
add
add
add
fldcw
jno
add
add
outsl
dec
addb
add
add
adc
add
add
add
add
add
add
add
addb
and
add
add
add
rorb
leave
rorb
add
add
popa
aam
add
aam
add
add
add
or
rcl
or
add
add
xchg
aam
add
aam
add
add
add
aam
add
fsubs
pop
enter
add
add
mov
call
fmul
nop
ret
fmul
addb
add
add
fsubs
call
add
enter
mov
fmul
pushf
ret
addb
add
add
lret
fmul
addb
add
add
fadds
add
add
add
fmuls
add
add
fmul
add
add
add
fmul
cmpsb
shl
lret
add
add
nop
ret
fmul
add
add
add
ljmp
lret
fsubr
add
