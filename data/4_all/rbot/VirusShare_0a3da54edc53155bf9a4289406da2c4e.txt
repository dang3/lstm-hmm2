fwait
nop
xchg
imul
jnp
xor
out
cmpsb
lods
icebp
addr16
fwait
rcrl
nop
mov
push
mov
and
cld
ljmp
mov
pop
insl
push
xchg
imul
insb
pop
adc
out
add
repnz
or
jle
sbb
gs
sub
shlb
movsb
cmp
iret
out
pop
ret
and
movsl
sbb
iret
fiadds
dec
jge
mov
jne
mov
jbe
ret
jg
push
mov
inc
mov
cmp
xor
movsl
ds
cmp
iret
hlt
test
int
pop
mov
shrl
mov
mov
sbb
stc
orl
in
insl
fcmovnu
loopne
sub
mov
icebp
xchg
sbb
call
das
sbb
pop
sahf
mov
fs
adc
popf
jne
negb
mov
clc
xchg
fsub
adc
sub
cmp
leave
fcompl
fucom
scas
mov
sets
inc
in
icebp
or
aaa
push
xchg
out
stos
shr
lcall
mov
in
js
add
fidivrl
xchg
test
pop
or
push
iret
pusha
int
aam
jmp
mov
mov
and
xlat
test
xchg
iret
in
addr16
pop
fs
fnstenv
cmp
mov
or
mov
stos
lret
rolb
mov
sbb
movsb
stos
outsl
pop
push
fisttpll
cmp
shll
jae
jo
test
into
ret
mov
or
xor
loope
stc
arpl
xor
or
mov
sub
ss
rcr
push
xor
pushf
push
addr16
mov
les
ljmp
push
adc
iret
jo
das
sub
inc
pop
lds
imul
push
mov
mov
fstpl
mov
ss
daa
lock
push
repz
jb
repz
dec
xor
sbb
push
sub
and
jae
lods
adc
adc
fistl
mov
js
in
repz
addr16
test
adc
in
dec
dec
push
es
outsb
cli
xor
pop
insb
sbb
push
sbb
sbb
dec
daa
jae
aaa
sub
cltd
xchg
pop
sub
cmp
lods
push
roll
pushf
out
adc
dec
out
mov
dec
inc
and
jns
aas
mov
in
mov
mov
ret
push
fistps
mov
jno
cmp
addr16
addr16
test
jmp
out
push
outsl
pusha
xor
jl
bnd
or
pop
or
dec
stos
jl
call
sub
ret
jbe
or
pushf
mov
ficompl
inc
enter
insb
test
lods
sub
negl
ret
insb
rdmsr
and
push
sbb
cmc
xor
mov
out
fs
int
cwtl
inc
and
jno
dec
insb
sti
sub
sbb
inc
sub
xor
and
xchg
pop
push
andl
or
lret
push
sub
mov
jp
pop
and
xor
out
and
and
lret
xchg
fadd
leave
mov
ds
mov
sub
xchg
xor
push
jnp
push
js
in
push
notb
jmp
push
ds
sti
test
shl
mov
fistpl
loope
push
push
ret
mov
xor
pop
insl
sbb
lods
jmp
xor
mov
cmp
xchg
stc
insb
movsb
daa
pop
pop
sbb
adc
repnz
xchg
pusha
pop
jl
xor
mov
add
repnz
dec
cmp
outsb
lea
jne
mov
add
dec
into
insl
test
push
in
jg
mov
ljmp
dec
xchg
mov
cli
jns
push
insb
imul
jnp
xchg
out
xchg
inc
xor
js
lods
cmp
jo
pop
in
mov
jnp
mov
add
outsl
pop
test
jae
fdiv
xor
inc
popf
mov
insl
mov
inc
addb
das
es
int3
ret
mov
cmpsl
xor
push
jp
icebp
imul
cmp
lret
mov
or
lret
push
xchg
fsubr
les
dec
out
test
mov
ljmp
add
jl
xchg
sti
xchg
mov
xor
sar
ss
mov
push
ret
lret
bound
mov
or
and
add
cmp
mov
xor
dec
mov
adc
insl
dec
fwait
cmp
imul
adc
push
pop
add
xor
and
adc
ss
movsb
repnz
add
xor
dec
dec
setb
popa
inc
in
lret
cld
mov
dec
lods
decl
sbb
xchg
mov
fbstp
jmp
jae
adc
bound
cmc
xor
sarl
adc
push
es
cwtl
icebp
mov
sub
cmp
pop
xchg
fistpl
sahf
xor
dec
out
xor
inc
or
outsb
jo
imul
gs
mov
add
pop
cs
or
adc
ret
insl
mov
xchg
mov
rcll
outsb
and
adc
push
shrl
out
push
in
xor
xor
fs
jne
pop
mov
pop
pushf
aaa
mov
rcrl
ljmp
mulb
cmp
inc
xlat
cmpsl
es
inc
orb
into
pop
dec
xchg
scas
fcoms
rolb
mov
dec
and
jecxz
pop
xor
cmp
insl
mov
roll
sub
adc
push
mov
std
lcall
or
stos
sti
aas
inc
and
push
sub
jns
movsb
repz
push
push
inc
add
push
ss
add
mov
sbb
pop
jns
push
sarb
pop
scas
xchg
int
mov
push
imulb
mov
jo
inc
idivl
and
daa
push
add
sbbb
push
pop
mov
pop
repnz
in
cltd
int3
xor
popf
pop
fs
push
or
mov
insb
mov
imul
dec
adc
push
lods
or
mov
adc
pop
push
or
pop
and
in
push
inc
mov
imul
cmp
add
gs
add
cmp
fs
dec
dec
jle
sbb
loopne
mov
pmulhw
nop
jmp
mov
dec
cmp
push
mov
fmull
jp
mov
xor
xchg
das
fstp
lea
add
jae
xlat
adc
hlt
sbb
sbb
daa
loopne
clc
sub
sbb
jecxz
mov
lods
or
stc
adc
repnz
push
inc
xchg
ds
or
or
adc
mov
sub
dec
lahf
cmp
test
or
jo
jns
leave
sbb
sbb
imul
sub
push
pop
fst
lds
cltd
cvtpi2ps
into
pop
adc
mov
cmpsb
mov
mov
add
mov
in
inc
arpl
jge
push
and
ja
dec
dec
fsubl
call
mov
pop
mov
inc
jge
push
jne
and
jecxz
fwait
mov
or
jo
adc
jmp
lcall
int
repz
dec
ljmp
xor
rcr
sub
sub
test
stos
shll
out
popa
test
lds
test
cli
int3
cmp
call
cmp
xchg
and
push
or
or
scas
mov
inc
rcr
pop
or
dec
out
adc
mov
sub
lret
das
cli
dec
xchg
jge
outsb
xor
cmpb
lahf
int
inc
mov
pop
into
inc
and
enter
iret
and
jp
mov
cli
imul
add
insb
in
xchg
cwtl
pop
xor
adc
push
pop
cmp
arpl
xchg
outsl
push
loopne
sub
dec
aas
stos
movsb
fistps
sbb
arpl
mov
out
ja
ljmp
mov
inc
cltd
cmp
pop
mov
sbb
fucomip
xor
cs
test
inc
dec
xor
movsb
add
add
xor
push
std
imull
test
and
mov
outsl
sbb
cmp
clc
in
xlat
adc
dec
pop
push
dec
in
int
imul
pop
loopne
jnp
lods
lea
pushf
sbb
jmp
std
sbb
push
test
mov
fcmovne
stc
inc
xor
pop
jge
mov
mov
mov
and
fs
sub
sbb
stc
sbb
roll
lahf
mov
or
and
in
push
mov
cmp
dec
sbb
xor
test
insl
mov
push
jge
in
into
mov
inc
repz
cmp
test
pop
or
xchg
lods
sbb
fneni(8087
mov
aaa
sbb
or
jnp
xlat
pop
cmp
test
mov
cmp
and
movsl
xor
dec
dec
mov
imul
pop
das
test
xchg
inc
jnp
divb
mov
cwtl
sbb
data16
lds
popa
scas
cmpsb
out
xchg
lock
sub
xchg
inc
inc
scas
xchg
dec
lods
cwtl
adc
jbe
adc
sbbb
jle
xchg
pop
decb
cmp
sub
ret
loope
rorb
mov
pusha
test
or
repz
or
jge
imul
adc
sbb
mov
das
mov
sahf
xchg
movsl
test
test
bound
jmp
repnz
das
xor
incl
push
mov
addr16
hlt
adc
stos
aad
pop
xor
or
negb
sub
inc
cmp
cltd
mov
fstps
dec
scas
es
or
std
pop
in
shrl
lahf
and
bound
mov
dec
mov
push
mov
adc
add
jecxz
out
lcall
call
push
inc
fsin
xchg
leave
stos
fcmovnb
sbb
lret
rorb
mov
sub
aas
push
pop
sbb
pop
fdivl
xchg
idiv
cmp
hlt
dec
adc
mov
orl
outsl
add
add
lea
aaa
fimuls
xchg
cmpb
std
pop
pusha
dec
outsl
lods
cld
in
ljmp
pop
adc
inc
push
stos
pusha
cwtl
aad
adc
ds
lret
inc
outsb
mov
xchg
jmp
sub
sbb
sub
jns
inc
stc
fwait
jmp
pop
inc
bound
loop
pop
dec
mov
and
cmp
mov
dec
and
je
mov
aas
shld
mov
int3
fdivs
inc
push
mov
jns
lea
mov
xlat
fs
and
faddp
xor
jns
pushf
stos
push
mov
in
sbb
ret
lock
data16
cmpsl
stc
mov
inc
stos
outsl
mov
mov
icebp
push
enter
and
sub
jne
sbb
dec
or
aaa
cmp
mov
push
and
mov
enter
jmp
test
int3
repz
cmp
xchg
or
adc
adc
mov
ror
out
test
cmpl
push
imul
pop
push
cmpsb
jcxz
repnz
sahf
mov
sbb
dec
dec
repnz
aaa
dec
scas
add
arpl
dec
fidivs
ss
int
pushf
pop
lahf
push
fdivr
cmc
jg
bound
sub
imul
test
repnz
mov
xchg
jae
imul
mov
lret
rorb
mov
mov
dec
stc
add
cwtl
add
stos
daa
pop
shr
mov
mov
pop
loopne
scas
jle
rol
xchg
cmp
shlb
mov
movsl
pop
mov
push
fnstsw
movsl
mov
clc
mov
fimuls
das
faddl
or
sbb
jo
cmp
arpl
ds
push
popa
sbb
test
mov
in
cmp
outsb
adc
imul
mov
or
dec
lock
sbb
jno
shll
data16
aaa
in
popl
jbe
lcall
int3
shr
mov
popa
mov
adc
fxch
xor
mov
jecxz
pop
and
pusha
xorl
fldcw
sub
sbb
xor
add
jp
in
xor
jmp
pop
int3
cmp
jecxz
aam
mov
sbb
cmp
push
sub
nop
adc
movsl
cli
cli
jo
push
imul
aad
popf
ds
orb
cmp
in
sub
mov
cmpsb
sub
fdivrs
xor
int3
jbe
xchg
popf
or
mov
repz
bound
cmpsl
jle
mov
sub
push
sub
enter
lcall
sub
sub
xor
pop
jecxz
cli
fdivrs
inc
pushf
add
xlat
jecxz
aad
push
mov
and
jnp
lods
xor
sub
and
lret
mov
repz
adc
adc
xchg
incl
sub
bnd
xchg
jne
jns
jmp
ret
xor
dec
repnz
pop
insl
push
xor
gs
xlat
int
out
out
cltd
push
sub
mov
pop
cli
mov
inc
in
mov
cwtl
jle
je
sub
adc
jnp
or
xchg
fst
dec
ljmp
jge
cmp
jge
xor
xchg
mull
xchg
leave
in
aam
jbe
shlb
fisttpl
dec
dec
pop
dec
stos
hlt
push
insb
adc
lahf
adc
adc
das
jno,pt
lar
in
sti
imul
cmpsb
push
xchg
xchg
push
ljmp
fdivrl
sub
jge
popf
fs
xchg
scas
dec
rcll
mov
jle
xor
lahf
and
mov
and
push
mov
decl
repnz
inc
sub
mov
pop
fwait
mov
adc
lret
data16
mov
sub
mov
into
out
cmp
addr16
jp
dec
lods
pop
push
jge
jg
jle
lahf
inc
pop
hlt
pop
adc
cmpb
xor
sbb
rcrl
in
outsl
mov
pusha
cmp
call
outsl
test
out
fcoms
or
xor
in
and
xchg
dec
leave
push
js
push
or
mov
aam
push
jecxz
sbb
cmc
ss
jmp
jmp
roll
adc
mov
and
es
sbb
add
cmp
stc
pop
jl
cmp
dec
push
dec
or
pusha
mov
dec
nop
fisubl
cltd
nop
mov
inc
repz
stos
in
mov
push
aaa
notb
shrl
sub
orps
notb
xchg
sub
insb
dec
mov
mov
pop
xchg
xlat
jo
outsb
and
daa
ret
jne
fidivs
push
sbb
repz
les
orl
xchg
cmc
or
shl
clc
ret
add
or
cmp
mov
mov
xlat
bound
jg
push
pop
jnp
out
mov
cmp
inc
jmp
sahf
enter
xor
jae
adc
outsl
inc
loopne
sub
daa
fwait
cmpsb
lods
jl
flds
xor
ljmp
push
sbb
xchg
xchg
das
sarb
or
and
dec
pop
jb
test
stc
pop
fldcw
push
rcrb
jne
aas
mov
fnstsw
adc
inc
sbb
pop
mov
popf
inc
cmp
pop
or
sbb
mov
in
iret
ljmp
sub
js
cmc
pop
mov
xor
rcrb
cmp
xlat
js
jmp
push
mov
push
or
push
xorb
dec
inc
lods
stos
jbe
mov
xor
cmp
cmpsb
iret
sub
jns
mov
das
mov
clc
ljmp
add
les
lret
sub
pop
mov
and
scas
xchg
xor
leave
cmpsb
ja
fildl
fdivrs
dec
cmp
es
insb
stos
out
sti
xchg
sub
out
push
inc
dec
gs
xor
lods
mov
ficoms
add
in
sbb
mov
fwait
and
in
push
imul
imul
jo
in
inc
cli
xchg
int3
ljmp
arpl
inc
lcall
insb
pop
scas
mov
in
push
pop
cmc
xor
out
cmp
test
push
lea
push
call
inc
clc
es
mov
call
jb
in
clc
or
ret
rclb
xor
test
jle
aad
inc
inc
out
aas
mov
icebp
cld
cmp
std
jb
pop
loope
lret
int
push
xchg
mov
jecxz
mov
xor
test
testb
cli
iret
imul
stos
hlt
mov
in
loope
cwtl
or
cld
push
sbb
jo
push
test
and
addr16
outsb
xor
xor
mov
or
or
xchg
and
cmpl
idivl
out
inc
fnstcw
sub
in
enter
mov
stos
es
or
sti
cmpsb
fmuls
mov
dec
arpl
repz
sub
sbb
xchg
and
jp
dec
xchg
jmp
sub
inc
mov
pop
xor
adc
fiaddl
and
hlt
xor
jmp
mov
mov
mov
inc
mov
adc
push
push
fsubrs
lock
adcb
fiadds
xor
mov
rclb
xchg
sub
insl
mov
add
ds
jb
mov
jecxz
test
inc
rcrl
mov
push
dec
cmpsb
jle
jle
mov
jno
sbb
or
mov
or
movsl
imull
cmpsl
loop
xor
aas
dec
lds
sahf
subl
ja
mov
xchg
lods
cltd
lret
xchg
pop
or
shl
sbb
mov
or
sbb
movsb
jmp
inc
mov
cmp
xor
jne
pop
divl
ljmp
mov
cmp
or
stos
test
imull
ds
inc
dec
scas
mov
and
sbb
xchg
or
shrb
mov
in
lock
xor
dec
mov
mov
into
push
add
xchg
sahf
out
adc
lds
mov
sbb
jb
xor
push
xorb
mov
mov
jns
shll
mov
ret
lods
clc
and
mov
inc
outsl
pop
add
inc
das
jp
sub
fnstcw
mov
push
sbb
push
sub
cs
or
push
sbbb
pop
call
out
clc
or
mov
inc
pop
enter
mov
mov
and
xchg
or
dec
and
lret
cmp
pop
jnp
sbb
mov
f2xm1
mov
cli
lods
dec
mov
mov
fnsave
fdivs
pop
pop
adc
xchg
adc
xor
xor
test
adcl
add
or
les
in
and
ret
cs
xchg
mov
mov
adc
mov
or
cmpsb
or
mov
mov
mov
iret
arpl
dec
cmp
sbb
and
cmp
mov
jge
test
dec
aas
and
jmp
mov
sub
shl
or
es
push
lret
loope
pop
push
jmp
cld
adc
pusha
pop
jg
popf
or
popf
clc
stc
les
inc
insb
and
pop
sbb
fsubrl
jmp
in
and
sbb
ds
inc
push
pop
pushf
xlat
mov
fucom
fmuls
cmp
jnp
mov
cltd
outsl
xchg
ret
hlt
loop
push
dec
jecxz
xor
and
cmp
mov
stc
aas
sbb
and
js
cwtl
and
and
out
hlt
mov
das
sbb
push
add
aaa
aaa
mov
sbb
inc
inc
fcoml
mov
outsb
mov
in
mov
mov
jnp
mov
inc
nop
cmp
inc
leave
inc
call
and
or
loopne
insb
rcrb
cs
pop
hlt
add
test
jns
jmp
addl
or
mov
cwtl
out
mov
out
int
cmpsl
inc
mov
push
mov
out
subl
das
xchg
movsb
lock
in
sbb
mov
sti
push
popa
ret
xchg
bound
rol
xor
clc
jo
sbb
xlat
push
adc
cmpsb
js
je
popf
add
pop
push
lock
and
sbb
mov
xor
push
adc
jp
fimuls
cmp
mov
sbb
pop
cmc
xor
or
out
sbb
fwait
cs
sbb
xchg
jp
shrl
jmp
shlb
ja
sbb
dec
mov
mov
call
xor
int3
insb
test
add
push
enter
testl
fwait
mov
or
xchg
xor
hlt
les
add
jns
cmp
adc
das
jne
bound
and
adc
fdiv
addr16
xchg
push
mov
mov
pushf
ficoms
lret
enter
cld
xchg
sahf
xor
repnz
mov
sub
std
test
leave
mov
mov
test
sbb
jbe
mov
je
mov
data16
dec
dec
adc
adc
and
daa
pop
adc
fs
xlat
shll
aam
or
inc
aam
mov
xor
fxch
test
mov
jns
out
add
sbbb
mov
out
push
andl
aas
push
loop,pn
mov
addr16
ud2
ret
int
or
mov
jle
inc
pop
inc
push
sti
sbb
mov
push
pop
xor
or
out
nop
jg
add
inc
mov
andps
ret
add
outsl
and
inc
lret
or
inc
or
std
std
jns
inc
repz
inc
dec
mov
loopne
mov
lret
and
clc
dec
sbb
inc
cmp
pop
jecxz
fisttps
jp
mov
clc
ficompl
dec
xchg
repz
add
adc
mov
test
lcall
ljmp
arpl
lcall
push
imulb
popa
scas
mov
jnp
iret
jno
xchg
push
push
jmp
mov
test
incb
out
or
mov
sahf
mov
mov
imul
in
or
pop
and
ret
push
pop
sub
dec
lods
mov
sbb
and
sub
scas
into
xchg
sahf
or
mov
adc
push
or
stos
in
mov
sub
aas
adc
dec
outsl
adc
lds
iret
sti
lret
mov
mov
out
mov
cli
call
xor
pop
loope
ja,pt
ss
and
mov
mull
leave
repnz
std
lar
fs
xor
add
jbe
lcall
mov
es
enter
fwait
mov
mov
mov
addr16
lret
mov
loopne
filds
imul
dec
xlat
lock
fstps
lds
movsb
and
pop
shrb
fsubrs
jno
or
arpl
jge
loope
jecxz
mov
dec
in
xchg
pop
mov
aam
push
out
dec
push
js
inc
sub
movsl
add
or
xchg
outsb
push
rcrl
sahf
aas
mov
test
xorl
fwait
mov
pushf
xor
xlat
fs
ret
flds
jb
mov
xchg
push
xor
cmc
int3
ja
lcall
mov
lcall
jns
push
loop
fisttps
cs
leave
jae
std
lods
xchg
test
and
sbb
mov
push
movsl
cs
mov
je
push
into
outsb
insl
and
loop
mov
mov
cmp
and
and
xor
mov
mov
jmp
push
adcl
fidivrl
mov
xchg
jns
push
out
cwtl
pop
mov
repz
jge
dec
subl
in
sbb
mov
jle
call
and
les
pop
push
inc
lock
rorl
faddl
mov
bound
xchg
and
hlt
aad
xor
or
fcompl
xchg
repnz
xor
sub
clc
loop
mov
pop
addr16
nop
xor
mov
add
cmpsl
inc
mov
xchg
or
mov
dec
rcll
adc
pop
pop
xchg
testb
dec
clc
sti
mov
and
test
lea
inc
jecxz
movsl
fwait
jnp
lahf
ljmp
lcall
movsb
and
testl
aam
int
adc
sbb
or
and
divl
lds
and
mov
leave
lret
mov
mov
scas
ljmp
cmc
cmp
push
push
or
in
fsts
push
subl
pop
pop
and
mov
aas
test
in
mov
fwait
xor
push
mov
testl
xor
popf
add
int3
rcll
cmpsl
cs
std
arpl
adc
xchg
jmp
data16
lcall
mov
hlt
sub
arpl
ss
mov
add
or
adc
or
imul
mov
dec
push
and
out
rcrb
outsl
jb
shl
shl
add
jge
cmp
repz
jae
test
push
cld
dec
add
data16
mov
pop
movsl
cmc
lret
mull
imul
dec
pop
push
pop
aas
adc
js
cld
dec
out
mov
testl
mov
outsl
call
pop
dec
adc
xchg
les
or
adc
fsubs
mov
or
push
sbb
pusha
in
ja
dec
and
les
mov
mov
lock
dec
dec
mov
adc
xor
popa
pop
adc
fsubrs
outsb
in
or
in
aam
xor
insb
cmp
lock
pop
jno
add
jp
enter
xor
idivb
scas
clc
fs
inc
popa
sub
cmp
insl
sub
je
test
mov
push
sub
out
loopne
jmp
pop
mov
pop
aaa
xchg
inc
fisttps
sub
or
push
xor
fst
mov
popa
dec
insb
cmp
stos
in
fstl
iret
jb
dec
ret
stos
fisttpl
or
xchg
xor
and
push
xchg
and
mov
cmp
in
pop
subb
sarb
pop
popf
lcall
push
loope
ja
inc
lock
je
mov
lret
aam
lods
jnp
cmp
push
pop
jg
xchg
dec
add
xor
or
mov
xor
jmp
jns
popl
leave
adc
leave
xor
sub
sbb
enter
lret
sub
jl
test
sbb
out
xor
inc
jge
xchg
arpl
mov
fisubs
je
sbb
jecxz
xlat
ljmp
mov
addb
imul
push
jecxz
inc
cli
mov
mov
or
jb
lahf
stos
lods
jo
add
or
iret
dec
xchg
cld
aam
nop
scas
mov
push
cmp
aaa
fadd
add
dec
sub
rcll
push
pop
lret
sub
test
inc
test
sub
in
js
outsl
into
std
xorb
sub
pop
lock
movsl
cmc
cmp
sub
or
mov
fcmovbe
inc
dec
sbb
test
sbb
jp
inc
sti
repnz
or
lcall
sarb
dec
popa
int
sub
mov
xor
xchg
sub
sub
inc
mov
fmuls
ret
push
pop
adc
lret
mov
dec
mov
dec
ficoml
aam
mov
imul
sahf
push
cmp
aas
orb
jno
cmp
daa
repz
stos
shlb
add
es
mov
xor
cmp
std
add
iret
xlat
cmpsl
and
sbb
daa
scas
or
lock
aaa
and
mov
rol
or
and
inc
cmp
add
or
cmc
xchg
inc
lret
cltd
mov
mov
shrb
inc
out
xor
mov
sub
or
jo
fsubs
lods
inc
jne
fsubrp
js
pop
popa
fcompl
mov
xchg
mov
imul
movlps
dec
mov
xchg
pop
xor
mov
push
je
mov
xor
mov
sarb
aad
movsl
jne
repz
popf
push
mov
out
push
xor
inc
jns
mov
insl
jp
adc
int
enter
out
mov
aam
jb
xor
xchg
or
ret
adc
fistpll
pop
fcmovnbe
pop
inc
aam
adc
and
jb
adc
inc
adc
ljmp
xchg
or
cmp
rol
movsb
stc
sub
adc
push
inc
cmc
push
and
jns
out
xor
out
push
add
mov
adc
cli
mov
mov
push
ja
jp
mov
dec
inc
xchg
jg
pop
add
push
mov
ret
inc
xchg
mov
adc
les
aas
push
inc
xorb
cmp
or
lcall
dec
ja
loop
hlt
and
mov
xchg
sub
or
and
repz
jns
js
ret
push
add
in
inc
inc
out
fwait
xchg
push
in
sbb
adc
dec
push
dec
ss
imull
cwtl
jnp
inc
pop
nop
sbb
outsb
leave
sub
arpl
cmc
fldl
xchg
aad
shlb
pop
popf
mov
inc
xchg
cmpsb
das
ret
xchg
lahf
fnstenv
inc
scas
ljmp
icebp
pop
add
add
inc
daa
xchg
pop
cmp
adc
lret
pop
int
in
sbb
fcmovnu
mov
cld
adc
inc
negl
movsb
addr16
cmp
scas
fstpl
inc
and
or
das
sub
mov
adc
fisttpll
call
sub
leave
jae
mov
sahf
mov
cmc
push
iret
lcall
repnz
lock
out
test
pop
mov
pop
jns
setb
sub
sbb
push
pop
mov
xlat
add
xlat
int
popl
sbb
mov
add
sbb
cltd
scas
sub
out
orl
mov
push
cli
imul
outsb
lret
icebp
mov
aam
scas
lods
je
aaa
mov
outsb
int3
push
add
mov
movsl
mov
adc
or
push
mov
jbe
jae
fcoml
idivb
repz
and
stos
stc
test
scas
xchg
xchg
adc
hlt
push
mov
adc
jnp
sbb
shl
mov
sbb
mov
jmp
xchg
sbb
dec
mov
int3
mov
fs
cld
xchg
add
lock
xchg
lds
sbb
inc
mov
addr16
shlb
dec
dec
fistpl
int3
cld
mov
pop
stos
sar
out
adcb
sub
push
test
lock
jno
dec
shrb
mov
mov
add
add
jecxz
mov
dec
fdiv
inc
jne
fnstsw
mov
out
push
sub
inc
das
imul
pop
add
cmpsl
int
mov
push
insb
bound
subb
repz
std
sub
arpl
xor
movsb
out
xlat
sar
daa
iret
mov
pusha
mov
xchg
adc
test
xchg
fwait
loopne
mov
inc
add
test
push
je
aad
imul
fst
outsb
mov
out
aaa
ret
inc
jge
cmp
sub
push
shll
mov
js
icebp
xchg
mov
shrl
lds
jne
jle
imul
cs
xchg
cld
or
mov
aas
addr16
add
ja
pop
test
icebp
add
testl
push
insb
addr16
aaa
sti
add
mov
mov
xor
loope
pop
pop
mov
push
cmp
mov
cmpsl
fsubrs
xor
sub
inc
call
enter
pusha
fisubrl
jecxz
test
mov
jmp
inc
andl
ljmp
xor
imul
int
xor
into
out
add
fbld
add
bound
pop
mov
mov
dec
imul
imulb
je
pop
xlat
out
push
outsb
mov
cli
ja
and
xchg
call
cmpsl
pushf
adc
fnstenv
adc
or
fildll
inc
cmp
xchg
leave
daa
js
daa
cmc
jnp
xor
dec
pop
adc
daa
aaa
arpl
jmp
add
jns
push
addr16
cwtl
daa
fisubrl
outsb
movsl
add
inc
sbb
jmp
sub
pop
cmp
xchg
mov
mov
fsubrl
repz
mov
sahf
in
ds
ljmp
xchg
cltd
or
jae
xlat
iret
into
jg
fmuls
bound
dec
das
push
mov
lret
adc
int3
dec
xor
xchg
xorb
pop
push
pop
adc
outsl
xor
lahf
shl
and
popa
xchg
jbe
mov
cltd
stc
xchg
inc
mov
jmp
jbe
mov
shrb
sti
test
inc
mov
push
sbbb
mov
or
adc
pop
jecxz
pop
mov
jecxz
imul
lds
ss
es
mov
dec
fsubrl
cmpb
in
xchg
ret
popf
outsl
cltd
push
shlb
and
imul
into
lcall
loopne
xchg
pop
push
enter
fbld
sti
and
and
ret
test
xor
ret
mov
and
neg
negb
cli
mov
cmp
cmp
mov
leave
xchg
nop
fdivl
add
fidivrs
ljmp
jp
push
dec
jmp
sbb
dec
dec
enter
ficoms
sarl
or
rol
mov
xlat
jg
sub
imul
sub
sbb
je
lods
cmp
std
pop
incb
dec
call
cltd
jno
jnp
shrb
lahf
jp
add
mov
addb
decl
or
stos
push
cs
movsl
dec
or
xchg
xchg
jecxz
popf
pop
divb
cmpsl
fisttpll
es
fld
xchg
shll
loop
and
ss
clc
jl
cmp
mov
scas
les
stos
dec
push
out
sub
push
gs
sarl
scas
pop
jns
xor
ljmp
push
out
pop
movsb
cmc
lods
add
shlb
cs
inc
outsb
lods
dec
xor
mov
rorb
jmp
aaa
pop
dec
sbb
ret
sbb
xchg
ficoms
mov
cmp
push
mov
nop
push
sti
pop
call
lods
ds
pop
pusha
mov
ja
add
add
jne
jb
pop
je
jno
adc
add
in
sbb
std
mov
loop
out
mov
mov
lods
mov
push
adc
sarl
aam
test
add
xor
fwait
mov
mov
adc
andl
sbb
movsb
clc
xor
int
movsb
imul
clc
dec
mov
fldl
push
xlat
loopne
xorl
mov
jns
test
and
cmpsb
fstpt
xchg
lfs
pop
into
gs
mov
int3
mov
mov
jno
fildll
scas
xor
push
and
cmp
push
jecxz
popf
rcrb
loope
or
rorl
sub
add
lahf
adc
sub
jmp
cmpsl
inc
xchg
rol
mov
mov
out
push
adc
and
pop
jge
mov
mov
ret
sbb
or
xor
inc
jo
arpl
and
iret
and
mov
addl
test
dec
push
xchg
push
or
pop
mov
mov
outsb
adc
loop
mov
mov
and
push
xchg
nop
sbb
and
xorl
push
add
andb
adc
outsb
das
jp
jecxz
and
fwait
cltd
stc
data16
pusha
fisttpll
pop
sub
jne
push
mov
adc
add
stc
push
jmp
add
cmc
cmp
fiadds
insl
movsl
andb
aaa
sbb
dec
push
sahf
add
into
xchg
lods
sbb
rclb
mov
push
xchg
adc
insb
or
and
push
xchg
push
push
add
out
js
sarl
inc
xchg
out
lret
push
and
sub
push
dec
cmp
and
and
lds
inc
fistpll
or
stos
push
cld
out
rclb
sti
andb
or
xchg
push
test
sbb
js
lret
iret
mov
inc
sbb
stos
jle
sub
shll
popf
clc
jo
loop
out
mov
ljmp
cmp
call
pop
ss
push
mov
cmp
int3
loopne
daa
dec
xchg
movsb
jg
stos
adc
loope
iret
scas
mov
inc
xchg
ja
sti
inc
leave
or
popa
aaa
and
addb
notb
mov
nop
sub
out
jne
or
addb
cmp
jb
mov
jmp
cmpsb
lods
popf
jns
xchg
add
xor
lcall
add
cli
jg
cld
pushf
jnp
jnp
and
das
test
jb
fdivs
ljmp
loop
cli
popa
mov
aad
or
aam
mov
cmp
or
add
mov
movsl
dec
sub
add
mov
sbb
jmp
cmp
mov
add
sub
lods
or
sub
mov
clc
sahf
sub
dec
mov
cmp
sbb
adc
sub
xor
lods
lods
xchg
jg
ret
call
add
in
cmp
fs
rcrb
adc
mov
roll
inc
xchg
stos
mov
lea
ficoms
cmp
data16
xchg
out
or
dec
fcoml
out
in
mov
lods
mov
push
orb
and
mov
push
mulb
xchg
mov
insb
dec
mov
or
in
push
add
xchg
call
lods
sub
loope
xor
mov
dec
int
sub
jb
mov
fwait
push
push
sarl
imul
fwait
insb
adc
xor
inc
loope
inc
mov
negl
lds
xchg
xchg
or
gs
fisubrl
test
sahf
gs
and
add
loope
jecxz
fs
divl
scas
push
sub
aam
xor
nop
repz
xchg
jne
sub
xorb
out
fcomps
outsb
mov
cmp
add
and
mov
ljmp
xchg
je
daa
lods
dec
sub
mov
mov
clflush
cltd
fistps
add
cmp
inc
adc
out
in
sti
ljmp
cs
sbb
sbbl
mov
lahf
aam
push
fsubrs
mov
aad
pop
jecxz
les
xlat
and
enter
ffree
pop
mov
fisttpl
dec
lcall
test
popf
mov
push
dec
cmp
mov
das
sub
mov
stc
jns
add
pushf
mov
sti
icebp
test
in
add
pusha
sbb
loop
inc
mov
mov
xor
push
popa
repnz
sbb
lea
jmp
xor
movsl
or
cmp
imul
addr16
std
stc
dec
in
lret
mov
mov
repz
dec
mov
fimull
stos
ret
idiv
sub
jg
xor
mov
jle
mov
imul
out
cltd
pop
cmp
movsl
sub
or
loope
sbbl
jno
add
push
cmp
inc
jb
test
enter
push
mov
mov
loopne
ret
outsb
pushf
push
cmpsl
push
daa
pop
lcall
or
stos
into
pop
rcrb
test
lds
push
inc
xorb
call
clc
mov
cli
jnp,pn
xchg
arpl
cmp
dec
popf
mov
loope
jmp
iret
or
data16
aad
pop
fwait
rcl
jns
scas
movsb
gs
test
stos
add
pop
xor
ret
ljmp
fistpl
push
test
insb
test
push
loope
inc
lret
cmp
push
pop
fidivrl
and
mov
sbb
xchg
movsb
ljmp
push
shr
pop
mov
inc
sbb
scas
inc
or
movl
loop
aaa
jns
inc
xchg
pop
push
dec
das
xchg
jne
shr
mov
xchg
jnp
test
loopne
scas
fisttpll
lods
rclb
cmpsl
std
push
mov
leave
inc
push
jge
push
lock
cmp
cld
xchg
lods
fisubrs
pop
loopne
jae
add
sbb
aaa
shll
mov
out
or
cmc
lods
int3
push
imul
repz
sub
enter
and
decl
es
lock
std
shlb
out
imul
xchg
scas
dec
int3
sub
arpl
in
popf
or
mov
or
daa
mov
sarl
addb
ljmp
pop
jge
int
data16
popa
mov
or
out
sbb
adc
test
sub
xlat
push
dec
lock
repnz
mov
cmp
adc
or
shl
std
andl
push
pop
idivl
enter
xor
or
pushf
rcll
scas
cmp
push
lahf
xchg
mov
xor
out
popf
mov
repnz
sbb
stos
xlat
adc
scas
jnp
dec
mov
sahf
ret
pop
rcr
mov
cwtl
inc
out
pop
xor
loop
ja
inc
scas
adc
mov
cmpsb
add
int
testb
loope
pop
pop
jbe
popl
add
dec
jbe
mov
dec
mov
xchg
cmp
sub
push
dec
lret
or
ja
loope
fsubs
repnz
cmpsl
pop
inc
inc
pop
add
dec
xor
push
xchg
push
les
mov
icebp
inc
adc
xchg
jno
ret
loopne
bound
std
dec
mov
clc
xor
out
fisttpl
lret
push
fidivrl
mov
add
pop
jl
adc
outsl
fisubl
int
xchg
mov
inc
out
mov
jno
sbb
out
aad
stc
or
push
rcrl
pop
inc
xorb
jnp
daa
add
adc
mov
mov
adc
sbb
cltd
leave
fucomp
or
pop
imul
push
and
loop
out
mov
das
xchg
sarb
lods
pop
shr
jne
mov
jle
xor
xchg
xchg
test
pop
jle
adc
or
sahf
xchg
inc
pop
daa
ret
loopne
fs
push
or
inc
repnz
xchg
inc
jo
cmpsb
pushl
hlt
adc
iret
push
scas
add
or
mov
and
iret
sub
stos
bound
cmp
ds
jle
and
jge
mov
cmp
in
and
sbb
mov
fs
cld
push
xchg
test
mov
inc
cmp
jp
shr
and
gs
sub
mov
rcrb
repz
push
stos
mov
leave
jno
fists
lea
sub
cmpsb
pop
or
gs
imul
shr
push
scas
shr
add
jp
xorl
xchg
scas
or
insl
in
aad
xcrypt-ecb
cmpsl
lea
inc
movsl
mov
mov
or
ja
cmp
xchg
xchg
dec
lahf
jnp
dec
mov
test
inc
cmpsb
add
leave
repnz
push
popf
or
cld
lcall
xor
andb
push
push
sub
aam
mov
gs
fsubl
jb
sub
rorb
mov
cmp
sub
mov
inc
mov
fistpl
aaa
stos
or
mov
das
mov
add
jnp
mov
pop
push
out
arpl
pusha
lea
inc
repz
mov
mov
bound
jmp
xor
in
cmp
fsubrs
outsb
mov
ss
add
mov
notl
jmp
addl
mov
cmp
std
jg
lods
outsl
loopne
jbe
mov
mov
sub
lret
mov
out
repz
lock
lcall
enterw
sahf
adc
lods
enter
inc
out
sti
mov
push
sbbl
in
cmp
lock
jae
mov
int3
dec
sub
aas
xchg
xor
jnp
sub
adc
mov
inc
imul
push
into
sbb
fdivl
cmc
into
loope
fidivl
pop
mov
jmp
fistps
lds
iret
or
and
cld
iret
fwait
dec
xor
sub
ljmp
jno
sahf
test
roll
pop
rcll
divb
xor
rorl
popf
dec
cmc
sbb
stc
xchg
in
sbb
jo
mov
jmp
dec
popa
in
sbb
pop
mov
jecxz
std
and
or
inc
mov
leave
or
pusha
sti
xchg
sub
mov
lcall
xchg
addr16
int3
sbb
xor
pop
xlat
pushf
dec
fdivs
inc
ja
data16
mov
or
lret
mov
mov
inc
pop
loopne
mov
mov
or
stos
and
into
stc
inc
xor
sub
mov
or
mov
hlt
mov
or
pop
popa
dec
das
fmuls
add
cltd
xor
out
sub
cmpsb
inc
call
xchg
xchg
loop
mov
jmp
sbb
ss
lahf
jge
pusha
test
adc
sbb
scas
dec
jle
arpl
mov
stc
inc
mov
aam
pop
daa
cmp
outsl
loope
pop
push
jb
sbb
sub
testl
adc
aad
cmp
out
xchg
dec
or
push
and
nop
cmp
pop
xchg
cli
test
mov
stos
leave
cmpb
adc
stos
mov
pushf
lods
cmp
add
test
add
mov
lcall
or
movsl
ficoms
scas
mov
adc
mov
xor
lods
xchg
in
lods
mov
testl
mov
xchg
mov
gs
and
mov
cmp
addr16
xchg
xchg
out
dec
pop
fistpl
jle
or
xchg
jecxz
or
pop
mov
cli
push
lds
std
add
ljmp
repz
inc
divb
push
stos
adc
in
enter
in
pop
and
add
popf
leave
cmp
or
arpl
hlt
lods
lds
xor
call
xor
jle
das
lods
filds
xchg
pop
aad
leave
sar
iret
inc
jmp
sbb
cmc
pop
sti
cld
test
ja
jb
pop
cmp
gs
negl
ja
vpmullw
or
out
jp
adc
cltd
out
testb
sti
adc
sahf
test
xor
jge
and
and
inc
aaa
push
and
enter
jecxz
lcall
or
fsubl
enter
cmp
int3
pusha
or
mov
repz
sahf
fidivl
cmp
xor
insb
jno
mov
int
ret
ret
js
dec
ljmp
adc
cld
dec
stos
push
test
jl
ja
inc
repz
xchg
cltd
jp
aad
ficomps
jno
xor
fbld
std
movsb
imul
mov
add
xchg
adc
inc
sbbl
sbb
sti
mov
loopne
fnstenv
pusha
pop
xor
dec
popf
pop
mov
addr16
gs
rolb
enter
iret
sub
adc
inc
inc
nop
sub
int
dec
test
inc
mov
dec
dec
in
mov
push
xlat
add
adc
icebp
test
test
sbb
cmp
dec
adc
fwait
mov
xchg
jecxz
dec
inc
out
inc
or
xor
pop
push
mov
cmc
scas
inc
jbe
pusha
xchg
pop
pushf
rcl
inc
push
int
cmp
fsubl
push
call
mov
xor
repnz
stos
jecxz
pop
cmp
jno
cmp
sahf
lock
in
adc
sbbb
jp
addl
mov
iret
xor
mov
ja
mov
shrl
jno
idiv
xor
push
fcmovnb
fcompl
in
punpckhbw
mov
jb
xchg
push
and
jo
jnp
loopne
rorl
xchg
sahf
sahf
lods
inc
and
adc
pop
insl
add
ret
lds
adc
negb
push
negb
xchg
sti
push
xor
in
fidivrs
or
popf
push
bound
in
jb
sub
inc
subl
les
fwait
ud2
sub
fsubrl
das
jge
ja
sbb
fucomi
cmp
jle
cmp
lret
enter
jecxz
cmp
les
and
xor
mov
dec
int3
add
shll
pop
jo
pushf
sub
cld
pcmpeqb
xchg
das
mov
adc
shl
lods
push
mov
push
test
adc
and
nop
jge
cltd
fwait
addr16
push
icebp
mov
leave
ds
inc
movsl
lret
add
cli
dec
andb
or
into
add
fcmove
fcmovbe
insl
loop
js
and
mov
adcl
sub
enter
es
rorb
sub
push
xor
mov
or
mov
push
cmpsl
icebp
test
rcr
push
aad
mov
cmpl
pop
mov
inc
add
dec
mov
xchg
hlt
mov
imul
call
mov
push
inc
out
jnp
xor
push
clc
push
daa
sub
decl
std
stos
mov
ss
inc
imul
mov
ror
mov
stos
ds
pop
dec
fdivr
int3
xor
icebp
pop
adc
mov
adc
sbb
jae
ds
sbbb
jle
jbe
add
test
adc
mov
incl
loopne
pop
fnstenv
out
or
fstpt
fimuls
sub
cltd
in
aas
or
aaa
ljmp
and
stos
sarl
icebp
push
andl
loope
pop
lds
js
out
lods
sub
jbe
push
xor
sbb
stos
iret
leave
cwtl
and
dec
xor
mov
pop
inc
push
and
pushl
pop
add
stc
fcomp
fildl
in
mov
cmp
sub
addb
loope
mov
dec
mov
loope
test
leave
call
cli
sbb
fwait
jmp
fmuls
sub
xchg
add
stc
arpl
gs
repnz
ljmp
adc
cld
dec
aas
rcll
sti
sbbl
pushf
bound
cli
sub
xor
pop
jp
icebp
push
mov
incl
or
adc
mov
aaa
push
lea
idivb
out
mov
adc
lods
mov
dec
pop
lock
test
mov
mov
push
in
enter
int
fs
insb
mov
push
mov
popf
mov
push
repz
sbb
adc
in
and
mov
or
in
stos
xlat
cmpsl
jle
ret
and
mov
add
xchg
dec
fldenv
shll
xchg
inc
in
inc
xchg
xchg
into
jns
cltd
flds
add
sbb
out
int
int
xor
adc
mov
outsb
add
xor
fnstcw
cmp
lahf
lds
or
in
inc
jnp
inc
inc
dec
add
lret
adcb
arpl
mov
mov
jle
adcb
ds
xor
jns
pop
and
jbe
xor
dec
sbb
enter
fists
xor
notl
imul
dec
iret
xor
les
ja
push
jle
rol
in
lods
les
sbb
aam
adc
int
pushf
sub
jg
xchg
mov
cmpsb
push
not
dec
sbb
pop
sti
ret
jne
dec
or
jle
jecxz
cltd
and
xorl
inc
sbb
addr16
fcoms
inc
les
sbb
addr16
int3
sbb
cmpsb
mov
lds
push
or
inc
leave
inc
sub
movsl
sub
negb
shr
nop
shlb
in
je
loopne
xor
addb
xchg
cli
shr
jne
mov
sti
sarb
add
cli
xchg
cwtl
mov
mov
fisubs
pop
mov
std
inc
popa
jl
xchg
inc
inc
jno
daa
mov
mov
mov
push
sbb
ffreep
inc
es
insb
subb
das
dec
jg
ljmp
pop
and
dec
cmp
stos
sub
dec
out
adc
or
or
bnd
mulb
or
jl
mov
and
stos
pop
lret
in
imul
mov
xor
cmp
gs
int3
xor
xchg
stc
cld
in
or
inc
pop
dec
gs
iret
xchg
xchg
inc
mov
and
lds
sbb
and
cli
rclb
mov
jne
daa
gs
mov
addr16
je
test
push
ljmp
jnp
cmp
repz
mov
outsl
out
lds
sti
jo
imul
fbstp
push
xchg
xchg
movsl
inc
jp
pop
leave
stos
into
mov
insb
leave
arpl
movsb
jle
cmpsb
inc
mov
push
aam
mov
adc
loopne
xlat
rorl
addr16
call
pushf
jno
test
lods
bound
push
mov
mov
in
push
int
mov
arpl
xor
jecxz
mov
cmp
out
movsl
loope
xchg
aam
pop
stc
sub
aad
in
mov
push
cmp
in
jbe
std
push
mov
cmp
mov
movsl
mov
fisttpl
test
jnp
out
ljmp
test
int3
sub
pop
sarl
sbb
testb
inc
jle
jp
and
sbbl
and
pop
sbb
sahf
movsb
mov
ljmp
mov
mov
sbb
imul
mov
and
daa
xchg
lret
xor
daa
or
xchg
mov
dec
rcr
out
test
and
pop
xchg
sub
jno
dec
push
jae
cmp
cmpsl
addr16
pushf
lret
push
pop
icebp
xchg
loope
cmp
adc
dec
and
repnz
bound
adc
mov
dec
cs
leave
fwait
fwait
xchg
fisubs
mov
sbb
cld
mov
popa
ret
notl
mov
mov
insl
adc
cmp
stc
pushf
test
xor
xchg
rcrl
inc
roll
mov
cmp
int3
fnstenv
jne
pop
lds
imul
mov
pop
ja
jbe
stc
insl
les
movsb
dec
lock
dec
xchg
pop
mov
out
jno
push
cmp
stc
out
push
or
pusha
ljmp
jp
and
ljmp
repz
mov
add
test
inc
jge
aaa
es
mov
push
sbb
mov
jle
pop
lahf
mov
cli
cmp
or
leave
sar
negl
mov
sbb
lret
and
xor
cmc
adc
pop
loope
add
fld
shl
lret
mov
xchg
inc
aaa
sub
imul
ret
cwtl
mov
rep
inc
sti
cmc
pop
cmpxchg
push
fwait
cmpsl
test
xlat
sbb
mov
sbb
insl
jo
sbb
inc
sahf
cmp
bnd
sahf
inc
andl
pop
jg
sahf
sub
push
andl
in
popf
mov
sub
rol
sbb
mov
dec
add
or
push
aad
mov
insb
xchg
sub
clc
pop
xchg
in
push
mov
cmp
push
fdivrs
aam
mov
sahf
xorb
fidivs
xchg
xchg
jne
cmp
pop
push
or
mov
and
adc
inc
sub
pop
cmpsb
and
cmp
xchg
movsb
ficoml
pop
and
enter
ja
je
sbb
mov
jge
mov
mov
ror
les
out
sbb
jg
in
divl
int
popa
sti
cmpsl
mov
mov
sbb
and
push
aaa
in
mov
and
xor
push
push
cmc
push
mov
enter
imul
dec
cmp
je
jnp
or
cmp
mov
popf
out
jl
inc
push
and
arpl
mov
scas
ss
inc
subl
mov
inc
push
sbb
lock
les
cld
insl
inc
mov
stos
aas
push
hlt
jecxz
lods
mov
mov
imulb
mov
out
pop
bound
sbb
mov
sbb
enter
jl
roll
mov
into
mov
push
dec
jl
add
out
sahf
fs
xchg
mov
and
or
pop
adc
sbb
sub
orl
mov
fistl
sbb
xor
test
in
inc
data16
rolb
test
add
xchg
pop
mov
push
mov
pop
mov
push
inc
aas
sbb
and
mov
rcrb
mov
andl
sahf
push
and
bound
xor
jl
inc
cmpl
sarl
outsl
std
inc
or
mov
insb
lahf
loopne
or
sub
and
pop
jbe
xchg
jo
xchg
dec
cmp
fistpl
xchg
and
or
or
rorl
xchg
lock
cltd
adc
lds
cmp
mov
es
jne
inc
or
fldcw
mov
cld
fmuls
push
test
inc
jmp
test
push
add
push
rolb
cld
sub
xchg
adc
movsl
push
movsl
testl
xchg
xor
fadd
int3
xchg
call
dec
lds
jp
dec
dec
sbb
inc
push
xchg
mov
fbstp
cs
add
lahf
sbb
and
pop
ja
cmp
addl
popa
and
repz
mov
inc
call
dec
sbb
int3
lcall
leave
or
xor
mov
xchg
sub
dec
push
loopne
and
pop
out
xchg
outsb
cmp
add
mov
into
shl
ljmp
inc
dec
lea
cmp
movsb
test
mov
inc
cmp
loope
adc
xchg
lcall
sahf
fnsave
push
jl
xchg
inc
mov
push
cltd
call
sbb
and
jo
outsl
ret
or
xchg
iret
ja
pop
add
adcb
cmp
and
iret
mov
mov
lods
inc
pop
fsubrs
mov
bound
movsl
imul
xlat
xchg
and
add
and
data16
lret
jg
jbe
loope
popf
out
mov
popa
aas
lcall
pop
int3
pop
mov
pop
cmp
pusha
sbb
orb
xchg
rolb
stos
vbroadcastf64x2
loope
pusha
hlt
in
inc
fs
ret
cli
cld
push
cmp
icebp
shrl
jge
iret
decb
push
in
out
sub
inc
les
ret
orl
adc
pop
aas
lods
loop
push
inc
inc
loop
sbb
pop
aam
jg
adc
sub
iret
push
inc
insb
mov
and
sub
scas
cmp
dec
scas
aaa
xchg
push
dec
add
cmp
pop
std
add
not
pop
aad
xchg
or
fwait
cmp
adc
xor
enter
mov
push
cmp
nop
adc
leave
jne
shrl
rcrl
out
and
lcall
test
pop
loope
sub
imul
scas
fidivl
roll
lcall
ds
lds
push
jb
sub
mov
addb
xchg
pop
sahf
mov
dec
movsl
mov
and
mov
or
dec
push
sbb
lock
jne
xor
aad
jg
aad
ja
mov
push
jmp
and
bound
mov
mov
pop
ds
sub
aaa
int
push
aam
cld
cmp
fistps
lock
and
leave
push
xchg
nop
and
out
pop
test
cltd
add
sub
out
cmp
mov
or
cmp
sbb
lea
adc
dec
lods
and
mov
mov
mov
mov
mov
adc
cmpsb
sub
pushf
cs
sahf
mov
bound
push
popf
adc
inc
gs
mov
fucomi
mov
test
xor
dec
cld
orl
loope
pop
mov
movhps
std
pop
movsl
pop
xor
mov
test
xlat
pop
cmp
fldcw
jp
pop
rorb
scas
imull
cmpl
mov
jmp
mov
push
ljmp
or
sbb
dec
fwait
sub
fldl
leave
cmp
xor
pop
incb
mov
loop
sub
scas
push
pop
mov
cltd
iret
loopne
xlat
in
into
shll
or
in
clc
arpl
pusha
pop
and
call
or
stc
fists
imul
movsb
cmp
add
std
push
push
mov
cmp
mov
push
fnstcw
lea
sub
xor
adc
sti
jl
rolb
jmp
into
xchg
mov
adc
das
xor
clc
mov
icebp
jecxz
mov
movsl
xlat
xchg
cmp
mov
mov
push
mov
mov
std
test
lret
mov
scas
sub
loop
cvtpi2ps
dec
xor
cwtl
fwait
push
cld
xor
sbb
jnp
popl
int3
sbb
lods
scas
xchg
scas
dec
insb
insb
je
fsin
pop
pop
sbb
test
adc
popl
std
stc
fadds
ds
jne
test
leave
in
js
aas
iret
ljmp
call
dec
jge
pop
sub
dec
jp
fwait
clc
push
push
sbb
jl
gs
xlat
inc
mov
jne
lods
in
stos
shll
push
mov
mov
or
test
jmp
xchg
pop
sbb
into
push
xchg
sbb
test
jmp
loopne
dec
ds
inc
cmc
cmp
jnp
pop
dec
inc
inc
add
fcmovnu
insb
push
mov
sbb
add
movsl
jae
call
andb
mov
out
xor
les
mov
pop
lret
js
andb
nop
mov
nop
xchg
cli
inc
ja
pop
push
push
rcr
cmpsb
test
pushf
push
jmp
divb
out
xor
ljmp
xor
xchg
or
jno
push
or
add
out
aas
pop
adc
fldpi
xchg
add
lret
outsl
stc
test
stc
or
push
fiadds
jge
loope
repnz
pushf
ds
xor
pusha
out
ds
mov
or
idivl
jb
mov
mov
shrb
pop
arpl
push
shlb
mov
js
mov
in
push
push
sub
xchg
lods
xchg
jae
notb
jb
mov
mov
mov
mov
sahf
xlat
hlt
into
xchg
mov
lods
cmp
cmp
aaa
xor
test
mov
lods
pop
fstpl
adc
or
faddl
lods
wbinvd
outsl
jne
mov
aaa
pop
gs
inc
jl
pop
or
cwtl
xchg
stos
adc
pop
cmpsl
dec
aas
jae
ss
dec
out
jle
cs
je
push
lret
sbb
jmp
ljmp
sub
in
je
sbb
dec
enter
mov
insb
pusha
mov
stos
xorl
roll
es
dec
in
into
enter
cmp
fs
data16
adc
fwait
dec
aam
or
mov
mov
aad
ja
pushf
jne
movsl
clc
loopne
icebp
add
xchg
das
dec
sti
aaa
int
je
dec
jae
mov
test
push
jl
addr16
mov
xchg
pushl
xchg
sbb
pop
imul
inc
and
xchg
inc
sbb
test
mov
cmpsl
cmp
push
ret
pop
xchg
add
dec
lods
sarb
and
push
pusha
dec
sub
jp
sub
sub
jnp
lcall
jmp
mov
fs
fiaddl
jo
test
mov
mov
xchg
sub
cli
fistps
fnstcw
shlb
sbb
loope
loope
xchg
sbb
pop
aaa
xor
daa
mul
jecxz
pop
sub
pop
movsb
sti
test
xrelease
dec
rcrl
mov
out
push
adc
cmp
push
inc
inc
and
imul
xchg
sbb
inc
add
sbb
push
xchg
mov
dec
jmp
inc
int
push
sbb
jnp
sbb
cmp
pop
roll
xchg
fdivrs
pop
jb
mov
lds
lods
sub
cmp
sti
frstor
mov
scas
pushf
mov
cmc
lcall
jbe
pop
mov
xor
aam
jmp
js
pop
iret
insb
std
push
in
push
stos
pop
inc
roll
inc
dec
mov
sub
fsubrl
jle
div
xchg
adc
inc
xchg
jno
test
sbb
clc
jmp
pusha
cmc
sbb
mov
lret
pop
dec
js
imul
loop
inc
adc
pushf
jns
lock
and
sub
xchg
cli
lcall
push
jl
mov
jae
and
and
sbb
lahf
lods
push
nop
test
sbb
faddl
mov
dec
pusha
mov
sahf
push
imul
ljmp
rclb
sub
mov
push
push
enter
xor
sbb
fmul
shll
push
cmc
push
push
int
mov
xchg
and
stos
dec
xchg
shrl
jae
lea
pop
fcoms
inc
sarb
decl
add
rolb
leave
aad
push
hlt
or
fistpl
mov
adc
pop
push
stc
mov
cs
dec
lods
mov
enter
sub
fwait
sub
pushf
adc
inc
js
mov
cwtl
adc
mov
push
cmp
lock
inc
pop
xchg
scas
or
inc
sbbl
pop
lods
xor
lcall
loop
lods
int
xor
addr16
les
dec
mov
hlt
cmp
test
mov
mov
pop
mov
or
sub
mov
addl
jge
ror
pop
xchg
je
das
push
sbb
outsl
les
lods
push
mull
ret
add
and
movsb
cmp
jle
movsb
fwait
mov
aam
and
sub
stc
or
jl
iret
insb
lret
cwtl
push
dec
pusha
inc
repz
add
pop
sub
cmp
xor
add
inc
jge
xorl
js
testl
jae
fistpl
stos
jecxz
sbb
out
or
out
fsubrs
xchg
loope
rorb
mov
jb
pop
pop
aas
insl
xrelease
mov
sbb
and
mov
jecxz
outsb
test
or
icebp
loope
aas
xor
scas
and
sub
mov
repz
cwtl
mov
lret
mov
fmuls
and
mov
push
jl
in
lods
add
mov
dec
ds
mov
stos
mov
add
addr16
and
mov
and
add
add
mov
pop
adc
testb
pop
cmpsl
mov
xlat
xchg
cltd
sahf
jp
xlat
fstpt
push
and
clc
add
cmpl
cli
jbe
push
add
cmp
mov
adc
adc
lahf
fs
or
jb
cmp
push
jbe
mov
mov
mov
push
mov
push
cmpsl
aam
cmp
add
sub
xor
mov
add
lea
pop
xor
lods
das
shrl
orb
xchg
xor
and
adc
jle
xor
mov
push
adc
in
pop
imul
mov
mov
stos
inc
out
push
add
sbb
cwtl
imul
xor
inc
paddq
gs
lret
daa
sub
jp
jp
sub
dec
push
push
cmp
sub
xor
mov
popa
fldcw
int3
test
inc
sub
fcom
fst
pop
sbb
add
insl
adc
push
jle
adc
mov
loop
mov
jns
sti
ficoms
mulb
xor
into
loope
test
ret
mov
push
rcrl
pop
icebp
mov
push
int
pop
dec
subb
mov
cmp
call
mov
aas
mov
sub
jecxz
inc
test
ficoms
sub
stc
adc
xchg
xchg
xor
dec
scas
xchg
add
pop
cld
sub
pop
inc
es
cmp
mov
rclb
mov
push
fwait
shrl
stc
in
mov
sub
jg
sar
sub
rcrb
xor
cwtl
sbb
inc
pop
mov
add
in
sti
inc
push
xor
ljmp
or
pop
mov
psrlw
rcll
add
out
fiadds
pop
inc
push
push
push
ret
scas
imul
mov
cmp
arpl
fnsave
ficomps
mov
push
adc
rcr
ljmp
stos
mov
and
aaa
inc
xchg
ds
jno
lcall
adc
cmpsl
adc
stc
addr16
fs
push
mov
outsl
jmp
push
outsl
and
xchg
jno
mov
shlb
in
sbbb
sbb
adc
xor
pushf
push
dec
rclb
nop
jle
and
les
idiv
push
test
xchg
aaa
lods
in
mov
lret
notl
pushf
leave
adc
cmc
icebp
lea
std
rep
out
add
movsb
xchg
add
in
lret
insl
sub
lds
add
dec
sbb
push
aas
std
xchg
daa
sar
sbb
sbb
fadd
mov
lods
jne
adc
mov
cmp
fs
shll
or
mov
inc
or
sbb
mov
inc
loopne
test
test
hlt
cmp
mov
adc
mov
xchg
cmpsb
mov
int
push
rorb
loope
cmp
popf
lret
popa
and
pop
or
fcoms
jo
adc
loop
ljmp
mov
mov
push
in
dec
test
mov
or
sahf
cld
outsl
pusha
outsl
iret
sbb
inc
xchg
pop
negb
shlb
mov
mov
imul
dec
xchg
lock
adc
dec
inc
inc
inc
inc
fnstenv
int
rolb
push
mov
or
xor
mov
xorb
jne
into
pusha
mov
xor
shlb
mov
mov
mov
fidivl
jecxz
push
sub
cmp
adc
cwtl
lock
mov
loope
pop
jecxz
in
jb
fisubrl
test
jmp
jl
aad
fs
push
cs
mov
mov
mov
cmp
aaa
popa
xchg
clc
insl
xor
popf
jle
dec
adc
mov
jg
cld
loopne
repnz
mov
jge
jl
out
jns
in
xor
in
mov
test
or
mov
add
xchg
xchg
cld
inc
mov
cmpb
lock
sbb
loopne
mov
inc
in
stos
xor
mov
ja
pop
ja
popa
or
xor
fdiv
mov
ret
aaa
out
push
gs
je
sbb
popa
pop
enter
imul
out
repz
and
dec
sarl
dec
test
out
fistpl
aam
add
lods
test
test
cwtl
dec
jne
data16
jbe
test
pop
fsubrs
sub
fldcw
imul
rclb
cwtl
nop
and
adc
or
aaa
xchg
xlat
lods
inc
les
add
sub
pop
daa
out
cmp
inc
loopne
and
sub
jl
cltd
add
sub
fnsave
ljmp
sub
pop
stos
iret
pop
clc
mov
adc
mov
push
or
cmp
and
xchg
sbb
cmp
stc
xor
jne
shrl
aad
mov
jge
push
pushf
fstpt
mov
inc
cmp
sub
and
mov
xor
or
les
aad
push
mov
jns
rolb
mov
sbb
mov
inc
inc
push
sub
adc
mov
mov
cmpsl
cmp
in
pop
aas
mov
jb
mov
aas
es
mov
faddl
pushw
add
add
add
mov
add
mov
jg
arpl
lret
bound
lock
cmp
xor
or
in
insl
jp
stc
xor
pop
mov
les
mov
std
movsb
adc
scas
aam
xor
add
push
adc
pop
mov
jns
xchg
add
mov
fsubr
push
push
pop
push
cmpsl
pop
and
mov
fistpl
scas
pop
cwtl
int3
inc
jae
pop
pushf
movsb
xor
cmc
popa
push
ret
pop
in
add
pop
int
mov
gs
loopne
popa
cmpsb
fwait
mov
or
sbb
ss
adc
inc
sub
mov
jp
sbb
xchg
xor
fcomip
pushf
jmp
adc
cmp
and
mov
push
dec
pop
call
pop
sti
inc
das
outsb
pop
shll
inc
aas
repz
sub
in
mov
sub
and
mov
xor
jns
scas
inc
mov
pop
stos
divb
inc
ss
sbb
int
jbe
jle
mov
clc
sub
adc
mov
lcall
repnz
out
mov
mov
mov
push
bound
lock
ret
pop
idivb
jae
idivl
push
out
std
pop
add
shlb
repnz
jmp
ret
fstps
insb
rorl
jns
icebp
lret
inc
inc
pusha
into
stos
ljmp
repnz
mov
cld
xchg
jae
adc
jns
add
sbb
ret
pop
mov
rorl
mov
sbb
ds
mov
mov
jne
xchg
out
jp
rolb
xor
ja
in
jae
xor
xor
sbb
leave
fcomip
add
hlt
xor
sahf
jmp
jmp
sub
xchg
adc
imulb
mov
adc
adc
fimuls
or
inc
fwait
loop
dec
lock
adc
pop
sbbl
xor
or
rcrl
scas
rolb
loopne
std
mov
popa
sti
stc
arpl
into
push
loop
jnp
xchg
ficoms
test
cmpl
bound
inc
fmull
adc
adc
call
jmp
out
mov
in
lods
cmp
inc
dec
sub
sub
adc
popl
sahf
push
xchg
mov
std
or
mov
out
dec
sbb
sbb
or
and
push
mov
in
jecxz
push
movsl
sub
ffree
lods
inc
cmp
pushf
mov
sbb
xchg
cmp
mov
pop
rolb
dec
ficompl
jp
in
pop
push
pop
pop
sbb
push
addl
sbb
orb
cmp
xor
xor
fwait
sahf
jecxz
jg
mov
cmc
inc
adc
add
lret
enter
xchg
cmp
in
mov
mov
or
lea
mov
adc
push
in
mov
in
jle
jb
adc
jge
hlt
aas
xchg
lret
xchg
mov
sbb
leave
into
filds
cmc
mov
push
stc
aaa
cmp
mov
push
jo
ret
cld
es
cmp
je
aad
pop
gs
imull
sbb
mov
arpl
addb
pop
xchg
loope
push
test
xchg
mov
xor
sub
call
pop
jns
in
jb
shll
dec
or
add
addr16
loope
addr16
das
loope
adc
dec
or
push
push
int
jnp
cs
pop
insb
enter
cmp
cmpl
sbb
stos
outsb
sbb
loop
inc
das
pushf
mov
movsb
xabort
push
leave
or
in
in
lahf
mov
inc
js
add
pop
rcll
lret
push
cmp
popa
cwtl
repz
and
shrb
clc
add
adc
aad
xor
xchg
bound
adc
clc
and
mov
bswap
fs
daa
testl
jno
test
jle
mov
mov
push
lahf
in
and
pop
sbb
repz
pop
les
ret
stos
vmread
add
sbb
in
hlt
sub
test
icebp
sub
stos
fimull
or
jmp
lods
push
jne
dec
sbb
fs
xor
push
dec
popa
adc
push
jo
mov
and
xchg
pop
push
and
scas
loope
lahf
dec
pop
xor
das
mov
arpl
adc
out
mov
xor
cli
jo
cmp
sbb
mov
pop
and
lods
js
pandn
cwtl
sub
mov
aam
jmp
sbb
fwait
lret
dec
mov
addr16
mov
lods
lods
sbb
inc
insb
jp
adc
inc
ja
incl
inc
mov
or
xchg
jmp
jp
sbb
mov
ret
punpckhwd
scas
xchg
xor
in
add
clc
orl
js
popa
clc
pop
andl
or
push
dec
xor
xchg
repz
mov
inc
out
mov
mov
xor
sbb
icebp
insl
cs
mov
sbb
inc
pop
out
insb
scas
rorl
jmp
loope
aad
scas
inc
je
cli
pop
and
sbb
push
stc
sbb
or
mov
cmp
out
inc
je
push
sbb
mov
js
in
enter
adc
movsl
aas
je
mov
ret
and
cmp
fldcw
xchg
ljmp
rclb
jg
cs
aad
mov
adc
and
dec
popf
jmp
mov
mov
mov
inc
jns
mov
push
in
repz
clc
and
xor
dec
cmc
dec
push
xor
leave
jno
sbb
adc
mov
push
cmp
dec
imul
adc
loopne
pop
mov
jg
rorb
sbb
cmpsl
out
pop
sbb
dec
cmp
jbe
lds
mov
jp
cltd
or
jne,pt
daa
mov
dec
pop
sub
inc
int
ret
xor
ret
es
loope
decb
add
dec
int
ljmp
inc
clc
pop
lods
jns
mov
cs
jp
imul
enter
clc
xor
popa
repz
daa
mov
ljmp
notl
sbb
and
and
pop
repnz
dec
lret
add
cld
sub
jle
arpl
and
icebp
mov
mov
xchg
fldenv
and
sub
push
dec
setno
cmp
dec
out
clc
sub
dec
mov
loope
push
or
insl
pop
sub
sbb
stos
bound
ljmp
jno
and
mov
aas
dec
pop
es
fsubrl
pushf
jecxz
in
mov
add
ret
inc
and
rorb
cwtl
cmp
addr16
and
xor
decb
std
xor
ja
mov
andl
insb
js
dec
sbb
lret
xchg
mov
leave
sub
insb
movsl
insb
ljmp
xor
fcoml
outsb
into
cmpl
stos
dec
xor
cs
xchg
push
sbb
cmp
push
nop
or
pop
subb
shlb
outsb
mov
lods
aas
daa
cmp
mov
cld
fmuls
js
cs
sub
rolb
dec
les
jb
mov
fsubrl
xchg
cmpsb
push
and
imul
int
sbb
xchg
mov
or
orb
pop
jecxz
inc
ds
jmp
icebp
std
test
dec
mov
sahf
sub
mov
bound
xchg
inc
xchg
movsb
pop
das
inc
call
jmp
lods
pop
out
jge
dec
mov
or
mov
mov
xor
lcall
in
push
push
mov
aaa
xor
sub
mov
inc
or
add
pop
hlt
ret
arpl
test
andl
xchg
lock
sub
iret
test
push
xor
stc
xchg
stos
jecxz
lock
mov
ljmp
sar
notb
xor
mov
pusha
notb
in
jb
sysret
repz
dec
mov
adc
nop
call
cs
add
xor
in
movq
xor
fistpll
push
ja
out
push
mov
inc
in
push
mov
cld
loop
or
mov
pop
cmp
lods
xor
inc
repnz
inc
les
fs
push
sbb
cmpsl
cwtl
push
fyl2xp1
jecxz
arpl
or
mov
mov
inc
push
fildl
mov
jno
push
xchg
mov
or
lods
xor
das
outsb
test
nop
jecxz
mov
nop
dec
addr16
cltd
hlt
push
je
jp
mov
lods
adc
mov
sub
in
lds
sahf
inc
cmp
adc
mov
fidivl
mov
addr16
aam
data16
sub
out
flds
jne
xor
movsl
sbbl
adc
loope
dec
cld
fwait
cmp
pop
and
stc
lret
mov
jle
and
xor
fstpt
dec
sarl
push
pop
xchg
dec
sarb
dec
cmp
adc
enter
ljmp
jecxz
fs
call
dec
or
xor
cld
mov
sub
fsubl
cmc
cmp
orb
jnp
push
pop
nop
inc
sub
push
aam
mov
xchg
add
leave
xor
subl
shrb
or
jae
dec
mov
jae
int3
lock
push
and
pop
xchg
and
pop
or
cmp
iret
inc
adc
pop
addb
push
jns
xchg
lods
filds
fs
inc
shlb
fadd
in
cmp
xchg
je
adc
shll
pop
roll
xchg
cmc
fsubl
not
jecxz
xor
pop
push
lea
stc
lret
mov
fs
push
shll
push
jne
sub
nop
testb
mov
test
imul
lahf
xor
sbb
test
push
testl
xchg
loopne
push
push
addr16
stc
or
adc
cmp
je
or
loopne
fcom
or
je
bound
popa
idivl
ja
test
pop
pop
stos
cmp
sti
lea
aam
adc
jmp
out
or
cmp
loopne
lds
test
jg
mov
repz
fsubl
cltd
jns
cmp
jl
je
adc
or
dec
test
inc
push
cwtl
inc
ret
cmp
arpl
movl
inc
cld
jge
sarl
adc
lea
movsb
adc
scas
int
in
sub
movsb
push
cmc
pushf
xlat
clc
sahf
les
adc
push
mov
and
je
shlb
scas
adc
sub
push
gs
mov
xor
pop
inc
pop
shl
sub
fmull
fldt
mov
mov
lock
xor
ja
into
mov
jmp
stos
add
dec
sbb
cmp
or
clc
cmc
cmp
andb
pop
xchg
push
cltd
mov
jns
xor
in
cwtl
or
cld
pop
sbb
hlt
xchg
xchg
rorb
inc
and
in
ds
xor
mov
xor
cltd
out
sub
sbb
xchg
jne
movsl
inc
or
fnstenv
sub
pop
cmp
mov
jmp
cmpsl
inc
xchg
sub
mov
cld
sbb
int3
inc
cmp
lahf
imul
push
xchg
or
dec
add
pop
xrelease
je
bound
dec
adc
sbb
movsl
adc
or
int3
pop
mov
outsl
mov
jnp
in
rcl
leave
orl
and
mov
out
loop
push
subb
das
adc
jnp
ja
and
cmp
sub
jg
cwtl
sub
push
add
into
lods
mov
add
fs
movsl
pop
aam
xor
xchg
rolb
dec
jp
and
xor
cltd
sbb
push
in
or
inc
push
pop
xor
in
pop
push
push
mov
scas
sub
xor
dec
jl
cmp
xor
lcall
pusha
mov
pop
out
cli
pop
imul
dec
cmp
out
pop
iret
jmp
std
mov
mov
ret
cmpb
cmc
fcmovne
mov
push
mov
inc
pop
pop
shll
scas
fists
xor
ret
push
or
push
jnp
popf
jbe
imul
mov
xchg
mov
sub
dec
sahf
bound
or
or
mov
jle
xor
repnz
mov
lods
lods
push
xor
fisubrl
loope
sub
es
and
or
mov
test
jb,pn
jecxz,pn
dec
dec
or
add
dec
mov
cs
imul
inc
mov
lods
sub
sbb
fmul
insl
push
mov
sbb
add
and
jbe
movsl
fcom
and
orb
lods
sbb
pop
cltd
sbb
rorl
lahf
pushfw
movsl
add
and
call
addr16
mov
mov
sub
xchg
outsb
push
and
outsb
ret
mov
push
dec
imul
pop
aam
sbb
add
ficompl
lcall
mov
or
push
mov
aas
or
pop
cmp
pop
jns
mov
cli
push
mov
lods
jne
call
inc
loopne
je
jp
pop
loop
loope
or
rorl
pop
sbb
gs
sbb
mov
add
test
rorl
movsl
inc
cli
mov
jb
push
adc
mov
fwait
cmp
jno
dec
scas
in
cmp
cmp
mov
scas
jno
fimull
call
jns
fwait
push
lcall
test
xor
pusha
add
pop
andl
push
jmp
mov
fnstsw
jno
inc
je
scas
dec
add
jne
inc
out
xorb
in
push
bnd
mov
jg
lods
cmpl
pop
pop
pop
es
push
sbb
sti
arpl
daa
out
and
out
in
sbb
pop
push
dec
shlb
lods
leave
test
inc
xchg
add
add
lcall
ret
xor
out
shll
dec
js
sarl
popa
xchg
jge
fldl
adc
ljmp
iret
call
jns
or
push
cmp
repnz
cmp
jle
jnp
fwait
jns
test
cs
push
in
inc
jg
clc
test
and
xchg
cmp
add
fisttps
xlat
je
adc
inc
ss
push
dec
push
inc
mov
add
test
jns
js
int3
xchg
int3
xor
aam
xchg
fldl
je
and
mov
jecxz
cmpsb
test
jmp
mov
out
jmp
int3
dec
mov
mov
dec
inc
dec
xor
std
imul
std
in
jnp
subps
ss
testb
sti
cmp
push
inc
push
mov
inc
adc
test
decb
loopne
cmp
mov
mov
jle
xchg
ret
int
pop
and
pop
popf
add
lahf
mov
mov
test
hlt
pusha
inc
mov
hlt
dec
cmc
add
inc
pop
jo
push
push
sbb
mov
adc
scas
out
pop
push
inc
jnp
out
out
shll
add
jb
adc
adc
xchg
lcall
loope
cltd
mov
push
aad
sahf
std
inc
xchg
jmp
mov
jb
add
loopne
or
mov
pop
fstenv
sub
sub
push
xor
jnp
jp
push
mov
stos
aaa
call
fsubl
sahf
adc
lods
pop
sub
xlat
pop
stc
out
shrb
test
sbbl
lret
shlb
jne
inc
cli
add
inc
popa
cs
jno
add
add
leave
mov
js
xor
lock
outsl
xchg
movsl
js
scas
mov
icebp
mov
jo
ss
sahf
mov
loop
adc
dec
xor
scas
dec
add
adc
lds
pop
xchg
sbb
xchg
ds
mov
in
stos
arpl
ret
cmp
int
and
mov
pusha
out
lret
cmp
mov
xchg
icebp
and
je
icebp
lods
xor
sbb
inc
out
jmp
enter
clc
icebp
in
xchg
mov
daa
mov
popf
ljmp
mov
mov
shlb
mov
loopne
movsb
cmp
adc
mov
mov
jg
mov
mov
jl
and
stos
pop
or
pop
cmp
jne
sub
addb
push
adc
lea
inc
xor
cltd
jg
mov
push
cmp
add
adc
stc
mov
jno
pop
sbb
xor
fsubrp
jo
rcrl
js
cwtl
pop
or
cmpsb
insl
sbb
sbb
mov
add
lcall
cmc
and
pop
addb
xchg
int3
or
pop
test
mov
xchg
fwait
pop
shlb
rclb
test
popf
xor
rcrb
and
cmp
adc
das
stc
inc
addr16
test
xor
sub
bound
cmc
sti
std
add
ja
pop
test
mov
mov
sahf
inc
jnp
insb
jne,pt
xchg
jmp
scas
movzwl
push
pop
aam
push
test
dec
ljmp
and
sub
mov
mov
sbb
jg
dec
add
std
aaa
push
add
and
mov
xor
mov
pop
shrb
adc
jo
add
pop
in
push
fistpll
in
unpcklps
jp
jb
pop
and
jns
push
inc
add
outsb
sbb
ja
fs
jo
cmp
repnz
push
sbb
out
xor
xchg
xor
adc
mov
and
or
add
loop
ret
inc
mov
push
fisubrl
pop
rorb
fwait
bound
popa
or
stos
les
pop
pop
jp
mov
sbb
inc
fcomip
imul
data16
fs
sahf
push
jbe
testb
ljmp
movsb
jno
repnz
fidivrs
push
mov
add
mov
add
push
loope
jecxz
cmc
cwtl
xor
xchg
movsl
inc
dec
dec
fs
dec
popa
jno
pop
push
cmp
mov
sarb
or
aaa
loope
or
test
fdivp
lret
inc
jo
cmp
enter
cmp
or
fdivl
pmaxsw
dec
int3
cmc
in
add
dec
jns
jae
xchg
in
popa
xor
cmp
lret
icebp
inc
mov
rclb
xchg
cmp
dec
fs
push
lock
fwait
sub
les
cltd
daa
adc
lret
ljmp
insb
jno
xchg
cmp
scas
mov
push
xchg
mov
es
pop
mov
add
fldt
and
mov
test
xor
mov
hlt
sahf
push
into
stc
andl
add
iret
das
mov
clc
movsl
adc
cmc
in
in
mov
push
leave
test
jle
lahf
cli
sbb
mov
das
imull
test
xchg
xchg
jno
jge
imul
cmpsl
mov
pop
and
cwtl
mov
jns
pop
xchg
pop
leave
aam
cmp
movsb
pop
les
frstor
push
notl
in
and
arpl
and
push
cmpsl
andl
daa
das
icebp
mov
testl
gs
stc
mov
mov
ret
pop
into
jns
sbb
movsl
ss
sahf
repnz
xchg
fwait
imul
push
je
rcrl
mov
jae
loope
pushf
mov
cmc
mov
imul
test
cld
sbb
dec
jp
dec
push
mov
lods
xchg
enter
daa
mov
out
test
mov
test
lret
mov
add
xchg
out
mov
fldcw
sti
lds
push
mov
sbb
or
push
jmp
jno
jo
add
mov
jne
imul
and
mov
data16
int3
shll
lods
sbbb
push
aas
ja
lock
and
jmp
shrb
sbb
es
and
out
shlb
out
ret
mov
stc
xor
lahf
arpl
adc
adc
iret
sub
cmp
push
fcomp
test
inc
sub
lock
xlat
in
cld
push
divl
lods
jnp
jb
pop
lods
dec
leave
mov
push
ja
push
mov
int3
jns
inc
inc
jle
dec
xorb
dec
or
xor
pop
adc
stos
inc
test
push
pop
pop
ss
mov
push
out
je
lahf
icebp
mov
add
cmp
mov
ljmp
sbb
daa
addr16
dec
mov
pushf
inc
xor
cmp
sarb
shrb
and
sar
loopne
xor
in
jns
inc
mov
out
scas
bound
aaa
mov
adc
xchg
fcoml
imul
cmpsb
js
jno
lcall
lea
dec
xor
push
negb
addr16
popa
imul
rol
imul
aam
out
sarl
mov
cs
jae
jnp
sub
sbb
and
stos
gs
aam
adcl
xor
jno
fsubl
or
xor
cld
mov
push
lods
cmc
aaa
jbe
repnz
sarl
xchg
lods
pop
sbb
cmp
pop
rcrb
adc
inc
adc
je
mov
pop
or
dec
sbb
pop
imul
jle
sbb
xor
sbb
dec
or
push
push
sti
test
popa
ficomps
dec
mov
dec
xor
and
aas
in
push
repz
jle
fdiv
mov
xchg
sub
add
lea
xchg
ljmp
es
sbb
popl
cmp
mov
leave
mov
sti
mov
dec
cmp
mov
xor
add
xor
cmp
cwtl
xchg
scas
jnp
jmp
mov
pop
sarl
mov
pop
sub
dec
pop
dec
cmp
xchg
jb
sbb
jge
out
in
insb
sbb
sbb
push
mov
push
loop
ss
or
xor
ss
xchg
mov
cld
mov
fsubrs
scas
shlb
ret
movsb
out
add
mov
pop
mov
mov
push
stos
fcom
into
pop
testl
sub
sub
xor
cmp
and
or
sbb
rcr
test
fcoml
pop
sub
imul
outsl
jns
std
xchg
add
mov
leave
idivb
adc
notb
fsubr
cld
or
inc
adc
int3
xlat
lcall
push
je
sub
les
sbb
mov
scas
movsl
ja
mov
pop
xor
mov
mov
les
call
cli
and
call
dec
jae
xor
sti
fdivrl
scas
mov
lahf
outsb
sbb
incl
dec
cld
jmp
fmull
cmp
nop
mov
cmp
insb
sub
adc
add
dec
aad
xchg
scas
fnstsw
shll
hlt
pop
scas
inc
add
ja
sbb
imul
push
inc
test
mov
je
data16
cmp
mov
in
loope
sbb
push
mov
jg
jge
out
xchg
gs
out
mov
cli
xchg
in
fnstenv
iret
mov
in
add
shr
mov
jns
popf
jo
push
popa
or
jg
das
loope
dec
les
dec
out
shrl
enter
cmpsb
pop
pop
out
loop
mov
cmc
jecxz
js
mov
mov
add
dec
pop
mov
pop
lods
adc
and
notl
ja
mov
add
shll
adc
cmpsl
sub
sbb
ljmp
inc
inc
and
jg
cmc
call
fdivl
cs
loope
xchg
pop
and
mov
mov
add
js
and
stos
cmp
stos
imull
clc
mov
mov
dec
or
sub
xchg
fs
sbb
daa
sub
pushf
or
jnp
cld
or
lods
and
sarl
gs
mov
shll
xor
push
sbb
pop
loopne
iret
sub
into
js
mov
pop
sub
mov
mov
push
add
lcall
mov
test
push
outsl
roll
xor
jns
inc
xor
into
movsl
mov
addr16
test
push
iret
fs
mov
and
pop
popa
in
jo
xor
jnp
adc
jbe
shl
andl
aaa
fbstp
movsb
fisubrl
mov
and
je
sbb
adc
xor
jnp
sub
mov
leave
ret
mov
adc
scas
add
fistpll
in
push
icebp
fdivrs
fcmovne
jb
decb
loop
movsb
hlt
lahf
jl
sub
or
or
xchg
ljmp
pop
jno
or
in
out
adc
inc
or
jo
adc
and
leave
push
jno
insb
mov
adc
loope
sti
or
fistpl
xlat
aas
and
inc
pusha
pop
add
sbb
or
mov
aas
push
sub
repnz
sub
test
cmpsl
fistpll
ror
in
sbb
pextrw
inc
pusha
xor
aam
mov
mov
xchg
pop
aaa
dec
and
push
outsl
sbb
sbbb
inc
sbb
ss
adc
ret
push
sahf
std
jmp
xor
xlat
stos
pop
sbb
xchg
loope
cld
inc
js
mov
mov
mov
shrl
icebp
jmp
pop
loope
mov
out
cmp
dec
aad
mov
dec
ror
add
fcoml
ljmp
clc
mov
cmp
scas
test
pop
lret
popf
call
insb
pop
mov
pop
nop
add
adc
sbb
jmp
int
fsubr
push
ret
fsubp
inc
sub
popa
cmc
hlt
push
or
stos
jb
outsb
sub
dec
test
sub
or
cmp
jns
push
mov
push
push
cltd
jg
cli
jb
aam
sarb
cmc
scas
subb
fmuls
adc
inc
inc
mov
dec
daa
mov
push
cmp
xchg
jnp
lds
add
xor
inc
jg
fldcw
dec
push
mov
fldz
je
idivl
fs
inc
cmp
ss
shlb
xchg
fnstcw
push
pusha
add
cld
cmp
out
push
imul
ret
jmp
xchg
test
xor
addr16
mov
jo
sbb
push
cmp
repz
nop
pop
inc
mov
fbstp
cmp
xchg
addr16
call
xchg
aaa
sbb
xchg
fucomip
push
cmpsl
ja
dec
jecxz
js
gs
scas
mov
sub
xchg
lds
jnp
and
pop
addr16
cli
call
fwait
lahf
cltd
mov
mov
xor
mov
roll
mov
sub
jno
ret
mov
push
sbb
pop
gs
or
sbb
xchg
xor
popa
mov
clc
mov
push
movsb
pop
pop
xchg
jo
negl
ljmp
movsb
xor
mov
ret
popa
or
mov
mov
xchg
lock
xchg
fldenv
push
or
cld
shrl
dec
mov
mov
mov
xor
pusha
cmp
cwtl
mov
test
jl
mov
inc
mov
cli
lods
ljmp
cmpsl
cmp
js
popa
dec
dec
cmp
mov
xor
xor
int
dec
lcall
sub
repnz
and
repz
into
out
mov
mov
xchg
sub
adc
mov
pop
jbe
and
ds
push
sbb
cmc
pop
cwtl
aas
sbbb
sbb
ljmp
popf
pop
inc
lret
dec
mov
xchg
xor
adc
sbb
mov
popf
sub
sub
add
leave
insl
in
pop
xor
add
fisubrl
outsb
stos
je
inc
sub
push
es
insl
lret
cmp
nop
fsubp
fsubrl
mov
pusha
jg
or
cmp
or
data16
add
in
lea
loope
loope
dec
adc
mov
cli
cmp
imull
inc
cmp
test
xchg
push
ljmp
mov
or
cli
push
les
add
xor
das
push
sub
scas
out
adc
sbb
lahf
mov
xchg
push
inc
add
mov
fwait
lret
cmp
imul
in
fnsetpm(287
movsb
xchg
sbb
movsb
adc
rcrl
lea
dec
jg
notb
fmull
shl
dec
loope
insl
ret
cld
imul
lret
cmp
sub
je
jb
lret
xchg
and
loop
inc
inc
addr16
mov
ja
add
jge
or
push
fs
je
inc
pop
imull
hlt
lds
mov
sbb
js
ljmp
pop
inc
xchg
jge
add
enter
sbbl
es
or
pop
daa
int
xchg
mov
push
cli
fiaddl
mov
lods
jb
push
rolb
sti
imulb
insl
or
in
imul
es
xchg
data16
gs
sub
rcr
int
adc
mov
mov
or
std
std
mov
sbb
leave
jne
and
mov
sbb
in
js
xor
scas
pop
into
push
or
mov
aas
dec
es
pop
mov
xchg
fcoms
lcall
out
jg
je
fwait
sub
mov
popa
insb
ja
in
jmp
loop
and
lret
daa
or
aaa
and
xchg
fwait
dec
ret
inc
sbb
inc
call
adc
adc
adc
sub
jno
fnstsw
pop
test
inc
int
lods
lods
mov
pusha
fsub
outsl
push
push
sbb
divb
and
inc
jmp
sbb
cmp
cld
jecxz
pop
rcl
lret
repnz
pop
mov
mov
call
add
shrb
nop
inc
xchg
mov
nopl
or
mov
inc
sub
inc
cmpsb
roll
fldt
push
or
pusha
mov
inc
aam
xchg
cmp
clc
and
dec
lds
insl
or
xchg
xor
mov
or
xor
fstps
ja
sub
sub
sbb
inc
jae
sub
ljmp
ljmp
adc
lret
test
jle
sub
adc
push
leave
push
cwtl
int3
cmp
sub
lret
adc
xor
mov
test
push
test
lods
scas
rcr
mov
outsl
xchg
push
mov
dec
mov
pop
out
xor
aad
push
popa
jge
and
cmpsl
test
filds
daa
insl
adc
sbb
sbb
mov
lcall
out
sub
mov
pop
xor
ret
jle
sbb
mov
leave
faddl
cmp
in
lret
adc
insl
mov
sbb
jne
push
ljmp
adc
loope
rep
mov
lds
test
xchg
jmp
adc
mov
shlb
add
lahf
js
loopne
and
repnz
imul
cmp
popa
push
pop
loopne
es
ficoms
mov
push
and
sbb
mov
clc
mov
cltd
push
push
es
xchg
mov
xlat
int
mov
fstl
mov
jp
cmp
adc
inc
jl
aaa
xor
mov
xor
xor
ljmp
mov
decb
arpl
leave
int3
dec
mulb
adc
enter
daa
adc
outsb
inc
insl
test
mov
mov
dec
andb
jecxz
jb
add
push
fistpl
ljmp
movsb
jno
iret
or
data16
pushf
movsb
add
push
sbb
pop
nop
ficoml
dec
dec
out
inc
mov
lret
jne
mov
nop
add
dec
in
lahf
pop
mov
push
mov
inc
cltd
lock
sub
js
fstl
dec
sbb
int
inc
addr16
cmp
cmpsl
jo
shrl
add
cmpsl
or
test
xor
hlt
or
hlt
daa
mov
and
lock
aas
loop
out
ds
out
mov
lcall
dec
adc
outsl
movsb
test
mov
xor
and
pop
shll
cltd
out
popf
jp
sub
daa
push
js
bound
pop
pop
insl
inc
arpl
std
repz
loop
add
outsb
adc
sbb
lods
jno
cmp
stos
jl
addr16
rcll
divb
add
enter
cmp
xor
add
jno
push
mov
in
inc
insb
aas
frstpm(287
sbb
lret
lock
nop
fisttpll
mov
mov
pop
lahf
cmp
jbe
cmp
dec
jnp
push
stos
or
std
mov
cmp
push
xchg
subb
cltd
mov
sbb
xor
fldl
dec
stos
shrl
test
pop
mov
jns
adc
sbb
xchg
push
scas
icebp
or
stos
push
pushf
mov
cmpl
lcall
int3
mov
mov
push
cld
and
lods
repz
mov
hlt
dec
push
adc
es
out
xchg
ror
jb
test
jno
push
fildll
mov
lahf
rol
cmp
jnp
rcrl
sbb
std
jb
inc
std
sub
add
cld
shlb
mov
xchg
aaa
mov
lret
mov
ljmp
sbb
pop
mov
mov
test
popf
dec
mov
pop
mov
idivb
pop
add
push
shlb
dec
in
lcall
idivl
sbb
and
adc
cmc
add
mov
fst
clc
int
out
inc
sub
mov
ret
dec
mov
jb
shl
int
aaa
ljmp
push
stc
adc
cmp
xchg
insb
mov
test
adc
adc
je
push
mov
or
adc
push
sbb
push
mov
push
in
sbb
push
loop
mov
cld
xor
loop
pop
pop
in
inc
fsubs
out
adc
mov
xchg
je
cli
jge
pusha
push
lret
push
xorl
call
je
lcall
mov
mov
mov
mov
mulb
lahf
imul
mov
jmp
clc
test
xlat
sbb
shll
repz
xor
or
push
push
std
add
add
ret
jg
add
scas
inc
inc
scas
push
or
ja
or
sub
push
fcmovne
sarb
scas
sub
xor
insl
fisubs
mov
mov
icebp
push
enter
aaa
fcmovne
lock
jne
jno
cli
cmpsl
cmpsb
pop
outsl
jecxz
push
lret
inc
ret
test
loope
ds
cli
bound
out
addl
cwtl
shll
iret
xor
jae
sub
call
fcmovu
sbb
sub
dec
inc
loopne
test
add
int
add
jnp
or
cld
ljmp
incb
mov
je
bound
sbb
xchg
fldenv
xchg
push
or
sbbb
enter
cld
pop
add
in
add
mov
gs
mov
in
popf
dec
js
cmp
ret
fisubs
pop
data16
mov
adc
cmpsb
rol
mov
pop
jb
nop
cmc
adc
mov
leave
gs
imul
icebp
xchg
jp
jo
jge
ljmp
and
idivl
in
dec
pop
jbe
shlb
dec
jge
pushf
push
inc
mov
push
xchg
cld
add
out
or
xchg
sahf
lds
lea
dec
popa
xchg
fistl
popf
insb
jne
dec
ret
imul
dec
mov
out
repz
sbb
pop
push
or
jl
pop
push
push
sbb
mov
nop
shlb
out
push
sub
leave
or
adc
adc
mov
jo
movsb
inc
sarl
mov
movl
push
xchg
ret
xchg
sub
out
inc
pop
mov
push
xor
fldt
sahf
xchg
out
gs
js
je
xor
xchg
mov
scas
cmp
xor
jae
cmpb
call
das
push
ss
mov
push
pop
inc
mov
inc
adc
ss
loopne
int
inc
mov
jo
enter
fisttpll
incl
add
rcrb
stos
push
xchg
mov
sbb
cmp
cmp
sbb
or
pusha
jge
jg
fdivrs
inc
sbb
push
loopne
pop
aad
dec
sarl
shrb
mov
sub
lea
sub
mov
sub
cmpsl
imul
iret
int3
popa
mov
sub
inc
adc
push
ja
sub
xor
jo
cwtl
pushf
js
bound
rcrl
fisttpl
test
and
xchg
and
loopne
pop
mov
sub
out
ret
loopne
cmpl
sbb
sbb
repnz
mov
fs
daa
out
icebp
shlb
out
pop
xchg
inc
lock
xor
rcr
add
sbb
pop
insb
mov
cmp
sbb
rcl
adc
mov
pop
mov
add
push
mov
mov
loope
push
paddusb
stc
sarb
dec
and
sub
adc
mov
mov
jb
test
jg
jbe
dec
repnz
bound
aad
les
and
push
xor
cmp
test
test
mov
clc
nop
xchg
xlat
pop
mov
push
loope
xor
push
std
jbe
hlt
rolb
fsubl
push
and
xlat
repz
into
lods
in
je
xlat
cmpsl
stos
aaa
dec
push
sti
dec
push
or
xchg
leave
frstor
movsb
lahf
ljmp
pop
mov
sbb
out
xchg
fisubrs
mov
cmp
scas
inc
iret
es
dec
inc
lea
bound
ds
dec
and
push
int3
and
je
mov
jle
hlt
outsl
xchg
push
push
mov
cltd
icebp
pop
pop
mov
pop
xchg
pushf
stc
fsts
dec
cli
out
stc
cmp
sbb
sub
jno
inc
inc
inc
pop
xchg
cmp
jns
imul
roll
xorb
ds
test
sbb
mov
xchg
ret
inc
rcll
rorb
stos
jb
push
xor
int3
pusha
lret
loopne
push
inc
push
ljmp
lods
int3
call
sbb
adc
mov
gs
jne
adc
add
xchg
jo
sbb
sub
cltd
test
movsb
and
sub
jbe
hlt
rcl
imul
mov
add
pusha
pop
add
mov
aas
cltd
sahf
jle
dec
jle
add
fwait
adc
mov
test
cmp
jmp
jno
or
cmpsl
stos
int
push
adc
cmc
pop
jo
arpl
popf
push
call
das
test
lods
jle
mov
sub
cwtl
pusha
xlat
test
mov
sub
sti
push
and
inc
ror
jae
lods
mov
into
cwtl
jle
loop
mov
dec
jbe
test
xadd
cmp
loopne
ss
leave
scas
inc
mov
xor
dec
in
pushf
inc
push
or
and
fisttpll
or
jmp
fmull
in
cmp
and
jne
out
jp
push
in
mov
adc
cmp
adc
stos
data16
add
call
mov
push
mov
aad
sub
out
cld
out
jmp
dec
in
mov
sbb
int3
faddl
sbb
aad
or
es
es
adc
push
xchg
jnp
xor
hlt
xor
test
sbb
or
jbe
xchg
lahf
jb
fst
sbb
cmp
test
mov
cmp
xchg
aam
mov
jo
inc
xor
fsts
std
inc
sub
gs
in
inc
dec
jmp
inc
dec
jge
pop
call
mov
mov
jbe
aad
insl
roll
adc
xchg
pop
pop
and
push
mov
pop
push
out
fcoml
cltd
pop
sub
dec
aam
xchg
adc
mov
xchg
pop
in
popa
fwait
inc
and
pop
inc
fisttps
dec
movsb
mov
into
push
sub
orl
and
inc
out
clc
loopne
mov
lods
jne
add
inc
mov
les
push
jge
push
xchg
add
loop
aas
mov
sbb
lds
push
test
jmp
rcll
lcall
mov
fidivrl
pop
fimull
adc
mov
insb
rol
stos
sbb
mov
sahf
mov
or
scas
mov
jg
jp
test
sub
cmp
adc
dec
dec
nop
cld
arpl
pop
add
pushf
and
adc
stc
lret
fbld
test
lret
jae
mov
mov
das
mov
sub
mov
jg
into
xchg
push
cld
sbb
ret
cltd
or
out
sub
push
bound
mov
ja
sub
hlt
loop
pop
xor
adc
jmp
sbb
or
adc
xchg
pop
data16
test
inc
int3
idiv
inc
xchg
xor
scas
mov
lea
into
cld
jge
or
adc
inc
or
sbbb
and
and
fdivs
cmp
shlb
push
push
mov
into
dec
outsl
shlb
fwait
push
add
shlb
add
mov
adcb
mov
insl
rolb
hlt
nop
sbb
in
cmp
testl
sbb
ficomps
cmc
dec
push
mov
sbbb
js
cs
add
addr16
and
xor
pop
xor
and
jg
jle
add
addl
fs
adc
xor
imul
mov
mov
rcrb
test
repnz
sub
adc
inc
jl
out
addr16
jg
mov
dec
jmp
add
add
shl
loopne
test
iret
aas
jecxz
js
sub
push
or
push
int
mov
fwait
sub
pop
xor
imul
or
loopne
arpl
add
mov
xor
lock
enter
mov
cld
loopne
sbb
adc
dec
add
loope
lret
add
pusha
es
sub
aas
cltd
sti
jo
xor
mov
push
dec
jbe
loope
sub
mov
sti
popf
cmp
mov
divl
sti
mov
adc
push
lret
or
inc
and
fcompl
mov
xor
pop
jecxz
shr
ss
fwait
aad
sub
adc
in
lods
mov
sti
fsubs
mov
movd
inc
pusha
push
jge
popa
rclb
outsl
fsubrl
sbb
xor
filds
cwtl
sbb
aam
and
sar
hlt
inc
bound
mov
iret
fstpt
mov
inc
add
adc
push
mov
ret
js
gs
mov
push
lcall
les
lcall
pop
or
es
mov
and
ljmp
imul
or
notl
or
jbe
jno
lods
push
subb
fcmovu
sub
jmp
std
push
pop
or
insb
adc
or
imul
xchg
sub
cmpsl
out
test
call
push
inc
mov
sbb
sub
lods
aaa
addr16
adc
in
mul
push
es
and
sbb
outsb
jb
adc
mov
insl
jno
out
hlt
jno
jnp
mov
int
jp
xchg
movsl
hlt
jno
mov
push
es
je
lret
cli
pop
fldt
mov
add
lea
popa
cmp
push
and
pop
pop
mov
test
insb
adc
push
dec
mov
icebp
mov
mov
repnz
out
ja
in
leave
daa
and
lods
push
mov
and
xlat
cmp
xchg
mov
and
test
xchg
sahf
fcoms
ret
enter
loope
aaa
movsl
aas
arpl
adc
jne
sarl
adc
test
xchg
mov
xor
arpl
ss
dec
push
adc
add
push
dec
dec
loop
outsb
push
scas
and
aad
dec
fucomp
dec
mov
push
jns
lcall
xchg
setnp
aaa
in
cmpl
stos
loop
ja
xorb
mov
add
push
cltd
stc
sbb
dec
jecxz
arpl
add
and
fs
iret
or
dec
int3
out
xor
mov
pop
lcall
sbb
adc
ja
lods
fs
xchg
adc
mov
and
test
sub
pop
xchg
push
addr16
mov
jnp
mov
mov
sbb
iret
mov
jmp
cltd
shll
push
stos
mov
push
inc
cwtl
xor
into
andb
jae
cltd
stos
shll
inc
push
fisubrs
cli
enter
or
mov
sbb
jbe
dec
pop
test
fwait
xor
ss
outsb
aaa
jns
jnp
insb
lret
jbe
mov
mov
jecxz
push
add
je
insl
and
out
jp
pusha
xchg
inc
push
or
jmp
cltd
xor
outsl
mov
mov
mov
jbe
mov
jne
jl
cld
add
inc
into
das
or
pop
mov
cmpsb
lea
lahf
and
mov
loope
test
cli
adc
outsl
jge
arpl
dec
or
ds
pop
scas
jae
mov
addr16
xor
xchg
cld
or
mov
xorb
sbb
sbb
and
adc
mov
shr
subl
rcrb
cs
mov
adc
mov
aaa
cmp
jmp
enter
bound
dec
icebp
mov
cmp
push
pushl
pop
push
hlt
pop
or
jno
pop
lock
repnz
pop
test
push
fistps
clc
call
adc
aad
and
lcall
jmp
sbb
pop
push
xorl
in
ret
lods
leave
cs
dec
push
scas
fcoml
adc
stos
inc
fmulp
adcw
leave
cmp
ret
pusha
xchg
adc
bound
cld
pop
mov
adc
and
fsubrl
xchg
in
data16
and
mov
add
mov
xor
popl
xchg
xchg
ret
adc
ret
jl
lods
rorb
test
gs
pushf
xor
enter
loope
mov
add
testb
pop
mov
pop
pop
movsl
and
cmp
imul
mov
jae
add
out
mov
cmpsb
subw
jno
movsl
sub
mov
adc
jnp
out
mov
sub
inc
push
loope
push
loopne
add
aam
pusha
cld
adc
rcll
xlat
dec
fsubrs
adc
jp
pop
imull
ret
outsb
call
mov
test
cmp
xchg
inc
jecxz
mov
lock
inc
or
lock
jmp
dec
add
shl
loope
and
shll
mov
fldl
mov
fs
mov
cwtl
shll
adc
jae
jno
dec
cld
aad
add
js
push
repz
jg
xor
dec
out
pop
jo
mov
movsb
mov
lock
loope
jo
inc
nop
loope
les
mov
popa
pop
jl
int
push
stos
lea
nop
mov
hlt
popa
xorb
add
aad
cmpsb
dec
dec
scas
loopne
inc
repnz
and
in
pop
aas
inc
scas
out
leave
rolb
rcll
or
push
in
cmp
sbb
lds
iret
mov
ljmp
adc
mov
cli
and
sbbl
clc
dec
push
fld
pop
ss
jl
addr16
adc
sahf
push
push
dec
int3
sbb
popf
insl
cmp
lock
inc
sbb
js
pop
and
push
pop
or
mov
andb
adc
leave
or
aaa
and
sbb
mov
dec
dec
push
addr16
dec
daa
add
inc
cmpsl
push
aam
jno
dec
aaa
and
sub
out
adc
mov
push
jns
cwtl
pop
int
add
std
ds
mov
xchg
xor
jb
push
jg
clc
mov
or
outsl
stos
fisubs
and
mov
dec
in
xor
jecxz
mov
roll
lcall
js
ds
sbb
insb
or
push
js
out
mov
dec
rcr
xor
fstl
mov
insl
ljmp
pusha
daa
push
sbbb
push
pop
mov
mov
adc
mov
fsubp
mov
xchg
nop
test
push
pop
lods
sub
or
pop
cltd
cmpsb
fstp
lret
adc
pop
addl
cmpb
and
arpl
mov
mov
push
pushf
xor
cltd
ficoml
mov
arpl
xlat
jp
addr16
test
adc
enter
addr16
and
loopne
or
xor
pop
std
push
xor
add
lcall
xchg
cld
hlt
les
shlb
shr
into
sbb
in
jecxz
inc
stc
jo
imul
dec
pop
jl
and
sub
sbb
xor
cmp
cmp
jbe
mov
push
push
pop
cmp
dec
pop
repz
jle
mov
xlat
aam
add
xchg
cmp
push
fcompl
vmwrite
insl
aas
xchg
or
push
cmpsb
mov
out
cwtl
mov
cmp
rsqrtps
addps
push
shr
fninit
call
stos
stos
data16
loopne
aas
mov
sahf
inc
push
leave
lret
mov
sub
jecxz
scas
lock
movsb
bound
push
cmpsb
lock
add
pop
push
xor
sbb
add
aas
mov
sub
mov
pop
arpl
movsb
lock
cmc
test
out
push
test
call
test
xor
xor
xchg
sbb
sbbl
fbstp
and
mov
push
cwtl
inc
scas
fiaddl
loope
lock
stos
sbb
push
insb
and
cmpsb
xlat
or
and
movl
leave
loope
in
rcll
loopne
jp
push
enter
mov
push
dec
mov
pop
inc
lock
mov
jmp
sbb
adc
call
lds
lds
jo
mov
call
inc
fcomps
mov
shlb
push
dec
dec
add
aam
push
mov
xchg
sub
jl
jns
scas
cmp
outsl
inc
repnz
pusha
stos
dec
lods
dec
pushf
mov
mov
icebp
mov
and
outsl
xorl
sub
mov
lahf
out
sbb
inc
push
adc
pop
daa
push
pop
pop
aam
pop
xchg
pusha
imul
push
mov
stos
dec
and
data16
mov
xchg
xor
mov
outsl
fstps
aam
daa
pop
leave
icebp
push
cmpsb
out
inc
daa
or
out
arpl
sarb
xorl
sbb
sbb
or
xchg
sub
push
in
xchg
or
sbb
sbb
repz
loop
or
push
sub
scas
xor
scas
cmp
hlt
mov
in
push
in
test
or
inc
pop
push
push
into
jl
ljmp
sbb
and
sarb
pop
xor
fildl
pop
inc
mov
addr16
in
push
cmp
pop
mov
sub
aam
rcrb
repnz
mov
ds
inc
loopne
xchg
adc
mov
or
addr16
jnp
outsb
cmpsl
cwtl
das
mov
out
xchg
push
clc
rclb
push
cmc
int3
lcall
mov
and
ss
addb
divl
enter
movsl
leave
sahf
jbe
sbb
ret
ja
idivb
out
mov
cmp
fdivrs
pop
push
cmpsb
cmp
sahf
movsl
and
shl
cmpsl
mov
je
nop
dec
jle
mov
jecxz
pop
loope
and
jecxz
lret
js
adcl
mov
test
jge
push
sbbb
std
movsb
out
push
mov
lock
ja
lret
jnp
lods
fistpl
in
aam
in
push
in
jns
pop
xchg
cmp
push
jmp
fs
push
cmp
in
repnz
test
jle
lea
adc
push
add
aaa
arpl
sbb
rcrl
xlat
loop
lret
dec
pop
add
dec
iret
loopne
xchg
arpl
loop
mov
insl
insl
adc
fwait
pop
mov
mov
jl
inc
repnz
leave
push
jmp
idivb
inc
push
add
pushl
dec
imul
mov
or
pop
test
fwait
jb
lock
jbe
inc
jnp
mov
jns
push
in
aam
mov
fists
mov
daa
mov
enter
outsb
adc
cmp
push
imul
fwait
pop
fs
xor
jnp
mov
leave
movsb
jle
jns
fwait
mov
cmp
dec
lds
out
in
js
pop
cmp
fwait
sbb
mov
ja
jne
sbb
stos
test
in
je
pushf
mov
aas
pusha
xchg
popa
adc
scas
je
orb
scas
clc
push
push
cmp
and
and
and
or
or
inc
pusha
lods
push
mov
and
cmpsb
pop
leave
mov
pusha
lahf
test
dec
mov
sub
mov
subb
mov
fsubp
push
imul
dec
aaa
into
mov
pop
pop
int
push
in
shlb
add
xchg
sti
mov
mov
popf
lds
xor
subl
mov
cmp
fcompp
sarl
mov
jnp
cltd
lret
jnp
test
sbb
jp
mov
push
sub
xchg
shll
mov
inc
cmpsb
mov
enter
mov
sarb
and
rclb
sub
sub
shll
and
fs
push
and
and
lds
stc
bound
and
test
and
mov
push
nop
lods
inc
mov
and
shrb
in
or
mov
outsl
cli
ds
mov
call
movsl
hlt
aaa
add
and
push
jg
ss
insl
push
xor
stos
fldpi
pop
popf
jne
xchg
add
add
mov
shrb
and
in
test
lahf
popf
fdivrl
pop
sarl
sbb
push
mov
add
test
aam
aad
dec
push
lret
rorl
and
jnp
mov
cmp
mov
lahf
dec
jo
pop
mov
stc
lret
jge
out
ficomps
enter
xor
xchg
in
xchg
sub
or
add
xchg
mov
ljmp
fwait
xor
push
push
xorb
jmp
mov
aaa
or
outsb
ja
pushf
sub
aad
in
jnp
xchg
cmp
mov
lods
insl
pop
outsl
sbb
repnz
bound
add
mov
pop
xchg
xchg
inc
mov
pop
xor
dec
cmpsb
daa
push
lret
pop
or
ds
pop
inc
pop
pop
sarb
gs
ret
addr16
clc
test
pop
es
shl
jo
fmul
scas
sbb
insl
test
std
push
out
bound
jae
data16
fisttpl
or
adc
sahf
mov
or
xor
loop
add
clc
xchg
mov
js
stc
or
xchg
in
clc
cmp
jnp
loope
cmp
mov
outsb
mov
cmp
xchg
fldt
loope
push
sub
addr16
sbb
adc
or
or
push
inc
cmp
cwtl
push
mov
fidivs
inc
repnz
cmpsl
mov
stos
outsb
cmp
test
ds
xchg
popa
jp
adc
dec
stc
xlat
stos
ret
lods
add
inc
add
ja
mov
fstpl
scas
fdivs
ds
js
and
inc
xorb
les
and
jne
push
fcmovne
push
nop
mov
mov
stos
aaa
push
mov
pop
js
sbb
mov
roll
sbb
inc
dec
aam
into
jmp
ret
xchg
sbb
rorl
inc
mov
and
sbbb
iret
and
insl
pop
push
dec
fldenv
add
out
shrb
je
lret
xor
iret
cmp
shll
cmpsl
outsl
xor
insl
ds
sbb
lock
inc
jne
out
popa
orl
add
or
jno
fcomps
sahf
cmp
lods
cs
iret
cmp
mov
fmul
mov
cwtl
arpl
dec
bound
negb
inc
lods
or
cmpsb
loopne
je
cmc
jl
sub
loopne
xlat
shrl
test
mov
popa
leave
mov
rol
cmc
and
cld
dec
lods
xor
imulb
nop
inc
jg
xor
add
sbb
repnz
mov
std
xchg
inc
xor
jg
stos
sbb
or
xchg
xchg
mov
mov
mov
cmpsl
add
cwtl
xchg
cwtl
xor
or
out
jmp
inc
out
xor
out
mov
jne
xchg
xchg
fisubs
imul
hlt
outsb
fistps
cli
cmp
inc
adc
push
and
loopne
sub
jmp
pop
inc
push
into
xor
xchg
xlat
add
jo
aaa
adc
xlat
loopne
or
fistpl
or
rcll
xor
mov
sarb
xlat
aam
movsl
stos
lods
mov
cld
inc
stos
sbb
jl
mov
int3
in
jge
rcrl
mov
jo
lret
in
idiv
btsl
inc
sahf
pop
shlb
sub
sahf
dec
cmp
movsb
aaa
xchg
lret
pop
and
jo
pop
ret
jle
add
ror
aaa
dec
mov
jne
loop
pop
mov
test
jne
sti
mov
mov
dec
pop
movups
push
add
dec
jnp
or
scas
xchg
pop
gs
cmc
lock
popa
je
xor
int3
jp
inc
jp
imul
or
jne
sub
hlt
push
scas
jo
pop
aad
cmpsb
and
xchg
sub
imul
cmp
mov
xor
fucom
xor
lds
xchg
jmp
add
outsb
in
mov
mov
adc
fistps
sub
es
fisubs
shll
je
fstps
clc
stos
sbb
fcomps
nop
daa
push
ljmp
cltd
iret
cmpsb
insl
inc
xchg
mov
add
inc
call
fs
scas
in
inc
xchg
sarl
aas
cmp
call
sub
xchg
icebp
pop
sbb
mov
ljmp
loop
jecxz
sti
leave
aam
sbbb
pop
in
nop
jecxz
or
push
mov
lret
sub
lds
push
out
data16
cmp
std
shlb
out
xchg
int
std
shll
popf
mov
add
movsl
in
xor
or
sbb
push
stos
subl
cmp
jl
orl
jg
add
inc
sbb
jo
mov
cmp
lods
mov
into
scas
fisttpll
in
cwtl
jg
mov
add
mov
loop
test
sub
mov
or
xchg
sub
mov
jbe
aad
loop
shll
jp
and
mov
popa
and
aas
sbb
xchg
shrl
fs
push
lds
fstpt
stos
cmp
mov
mov
dec
dec
mov
xchg
rcrb
outsl
or
jbe
stos
cmp
xchg
pop
shrb
mov
adc
scas
mov
dec
popa
les
dec
pusha
mov
cltd
mov
std
push
les
cmpb
mov
shrl
inc
mov
sbb
icebp
out
pop
es
jbe
pop
adc
rcrl
add
les
nop
arpl
dec
jle
mov
mov
push
daa
imul
mov
stos
shrb
mov
popa
or
xchg
cltd
mov
roll
mov
fisttpl
add
sbbb
test
mov
adc
push
mov
loope
cwtl
or
lock
push
mov
dec
xor
xor
lods
shlb
cmp
mov
fnstenv
dec
bound
cmpsb
lds
push
push
sub
add
aaa
push
inc
dec
fdivs
dec
shrl
stos
gs
iret
jnp
sahf
sbb
mov
pop
adc
mov
lcall
mov
je
dec
add
add
ret
popa
xorl
cmc
orl
cmp
cmp
cltd
push
mov
mov
sub
inc
test
ljmp
lret
xor
xor
mov
pop
add
fnsave
cmp
mov
xor
push
jle
push
pop
dec
das
inc
and
rorl
add
jmp
imul
inc
xchg
dec
popa
cmpl
pop
sarl
out
mov
cmpsb
enter
sbb
add
add
clc
bound
lods
inc
in
xchg
mov
push
imull
pop
mov
out
lret
mov
subl
xchg
daa
jnp
jae
fwait
mov
inc
inc
push
mov
pop
data16
shrl
iret
mov
mov
mov
xchg
out
jecxz
xchg
xorl
dec
out
insl
cli
mov
push
or
sti
lret
cmp
cmc
imulb
jns
sahf
cld
shrl
stc
add
shlb
add
lret
inc
xchg
add
pop
sub
gs
cs
fcmovbe
ljmp
sahf
or
push
xor
cwtl
stos
daa
dec
js
cli
mov
ret
lea
sahf
mov
dec
jno
mov
push
je
sbb
and
cs
shl
ret
test
push
fistpl
test
mov
rcrl
lret
push
arpl
jns
fisubrl
xchg
inc
sub
test
sti
or
xor
cmpsl
iret
test
pop
scas
movsl
add
psubb
mov
mov
xor
icebp
sbbl
push
lret
sbb
push
int3
and
fwait
outsb
lret
mov
mov
sbb
iret
int
pusha
sub
adc
cwtl
or
xor
cmp
adc
rol
adc
pop
push
adc
xlat
dec
jl
sub
inc
inc
loop
xor
pop
clc
xor
cmpb
sar
std
shlb
xchg
mov
popa
pop
sbb
into
dec
jge
cmpps
xor
pushf
lahf
mov
cld
loopne
inc
lods
jae
adc
cmc
xchg
call
mov
movsl
sahf
and
mov
dec
enter
pop
mov
leave
iret
mov
int
jle
jb
decb
jl
imull
or
roll
aaa
test
add
call
xchg
mov
sub
mov
loope
imul
xchg
jl
leave
or
dec
shlb
and
push
xor
in
pop
dec
mov
or
mov
into
push
mov
mov
in
jo
sbb
mov
push
stc
push
popf
lcall
mov
lahf
fisubs
xchg
imul
cmpsb
xlat
inc
pop
movsl
cltd
mov
movsb
insb
mov
push
mov
testl
jb
in
jecxz
les
pusha
xor
cmp
or
cmpsl
push
cmp
fstp
push
or
add
mov
scas
testb
cmc
dec
mov
iret
pop
adc
dec
fldln2
test
mov
out
outsb
push
notb
sbb
out
adc
push
loop
jb
aad
daa
adcl
cld
pop
cmpsb
or
xor
mov
push
stc
jp
in
js
ret
push
lock
xor
js
loop
pop
popa
mov
cmp
dec
orb
aam
ljmp
xorb
fildll
sbb
insb
cbtw
test
sub
fstpt
mov
loopne
jno
sbb
add
inc
jno
cli
sti
into
sbb
aas
xlat
imul
xchg
mov
cld
lahf
mov
sbb
cmp
sbb
jbe
jg
sbb
push
sub
fdivrl
pop
aaa
inc
push
aas
cmp
mov
mov
roll
lock
xchg
sti
out
jb
pusha
outsl
add
inc
test
bound
dec
pushf
aaa
xchg
outsb
ss
in
mov
imul
js
repnz
mov
xor
cmpsl
in
adc
andl
stc
pop
and
jb
cmp
mov
jmp
push
xchg
movsb
test
std
sub
pop
stos
push
xor
negl
xchg
mov
sbbb
sub
aaa
push
jo
call
popa
es
mov
mov
in
cmpsb
ss
dec
adc
ret
inc
cmp
pop
dec
fcomps
jmp
xor
mov
push
cmp
andl
insb
fidivl
cmp
xor
aam
add
sbb
out
mov
push
icebp
adcl
rclb
les
pushf
or
mov
out
adc
adc
and
loopne
mov
insb
pop
inc
jns
push
out
sbb
adc
daa
ret
adc
mov
js
jg
loope
outsb
mov
stos
mov
lcall
es
mov
sbb
aas
inc
aaa
lret
xchg
pop
cli
jle
ja
add
mov
outsb
add
inc
jnp
xchg
xor
mov
dec
sahf
inc
push
push
pop
es
lods
daa
cli
push
mov
xor
cltd
outsl
fwait
ljmp
loope
mov
fs
pop
xchg
stc
into
mov
mov
test
jp
pop
or
mov
popa
jl
clc
test
or
iret
pop
sbb
data16
dec
pop
repnz
enter
and
gs
addr16
or
sub
push
jo
sti
ret
mov
xor
push
shll
cmpsl
frstor
sub
gs
or
mov
shll
xchg
adcl
and
add
mov
mov
movsb
pop
push
notrack
sub
and
js
jp
sub
sub
jo
adc
hlt
or
jmp
lock
pop
jl
fsubl
or
into
sarb
inc
push
xchg
add
jno
xor
fs
fiaddl
hlt
aaa
pop
jmp
adc
jecxz
shll
xchg
lcall
xor
sbb
popf
sub
lcall
imul
and
fimull
xchg
pushf
outsb
pop
xchg
out
mov
ljmp
dec
insb
add
and
gs
mov
mov
icebp
adc
and
mov
jl
daa
idivb
in
rcr
das
out
stos
push
rorl
mov
adc
mov
add
ret
addr16
int
imul
decb
cmp
or
lea
inc
mov
add
inc
mov
inc
lods
fldenv
push
xchg
pusha
pop
ds
mov
pop
gs
jb
rorl
sub
shlb
sub
mov
jbe
push
push
inc
mov
cmp
xor
mov
inc
pop
or
push
sub
cmp
cld
dec
imul
ja
sub
sarl
xchg
and
jnp
jo
sub
stos
arpl
pop
jp
inc
pop
push
loop
arpl
sbb
sub
dec
xor
jle
pop
imul
pushf
sbb
sahf
loopne
cmpsb
inc
les
fwait
dec
push
or
jns
sbb
insb
adcl
cmp
notb
xchg
ss
cltd
insb
out
sub
dec
inc
xor
sbb
add
mov
pushf
dec
inc
dec
test
push
inc
and
jns
add
and
jl
dec
push
inc
fwait
loope
xchg
rclb
mov
js
loope
sub
mov
rolb
push
mov
mov
push
leave
subb
into
mov
cs
filds
into
jp
cli
cmpsb
sbb
adc
je
pop
pop
add
cld
lret
ljmp
jnp
and
lea
dec
das
sbb
jo
sarl
dec
xor
es
jo
scas
cs
sbb
add
imul
push
jl
mov
int
jbe
lcall
lret
aad
mov
call
mov
sti
in
ret
xor
daa
push
scas
enter
pushf
mov
xchg
shrb
or
dec
mov
test
sub
int3
imul
fcmovb
xor
sahf
mov
data16
inc
jno
mov
dec
out
cmp
test
xchg
insb
lahf
mov
add
push
flds
push
rcrl
push
loop
outsl
addb
pop
xchg
mov
loopne
inc
clc
cli
popf
js
xchg
mov
xchg
in
jnp
add
adc
dec
in
or
mov
xor
jmp
sbb
les
xchg
sub
xor
mov
pop
mov
jl
cld
cwtl
mov
pop
jnp
inc
ss
sahf
lods
fcmovbe
imul
ljmp
mov
mov
jbe
mov
adc
je
mov
mov
nop
xchg
xor
enter
rcr
ljmp
adc
aas
fstps
jne
out
pop
jg
es
mov
xor
stos
inc
add
dec
roll
pop
push
xchg
adc
lret
sbb
pop
mov
ss
pop
addr16
lret
shll
or
add
dec
nop
pop
pop
adc
push
xor
adc
pop
mov
shll
mov
xchg
mov
lcall
subb
cwtl
cmp
sti
test
xorb
or
xor
xchg
mov
xchg
add
inc
add
sub
cmp
or
insb
ss
stc
scas
xor
jbe
xor
inc
test
cwtl
pushf
rcll
aas
sbb
andl
jmp
mov
flds
cmp
pop
add
mov
sahf
dec
mov
pop
sub
and
lods
cmp
pop
mov
sarb
mov
xchg
xchg
leave
mov
adc
lahf
rcl
stos
push
jmp
add
cltd
in
test
fldt
imul
jae
adc
loop
mulb
push
lahf
mov
mov
aaa
lock
pushf
mov
mov
out
cmp
jg
pop
insl
fcmovnbe
scas
stos
cwtl
pushf
shlb
mov
dec
stos
mov
out
iret
jnp
hlt
sub
fsubr
adc
imul
mov
aas
push
mov
mov
jmp
test
push
subl
daa
lcall
hlt
add
sbb
cli
sbb
data16
inc
insb
clc
adc
inc
aas
movsb
jb
fisubl
add
push
jnp
out
repz
repz
mov
movsb
and
mov
pop
sub
mov
pop
or
outsl
cwtl
int3
es
jbe
sbb
inc
ss
out
ja
arpl
repz
sahf
ficompl
and
in
cld
rorl
push
imul
aad
aam
scas
gs
test
jno
inc
imul
mov
and
lock
std
inc
insl
cmp
leave
fimuls
mov
fldl
pop
imull
pushf
hlt
cmpb
xchg
mov
test
gs
pop
push
add
add
jae
jecxz
test
inc
jp
xchg
sub
out
sti
or
add
fidivl
out
jb
push
adcb
mov
cmp
fmuls
fcompl
fisttpl
sub
pushf
dec
inc
push
mov
mov
cltd
push
fildll
xchg
sub
push
test
jg
test
filds
inc
mov
mull
xchg
sarl
cmovae
arpl
sbb
in
test
fstpl
push
in
movsb
sub
sbbl
popf
cli
aaa
and
test
push
mov
adc
dec
inc
mov
lds
cwtl
mov
loope
cwtl
xchg
jge
stos
sub
xor
mov
test
stos
pushf
mov
xlat
mov
pop
pop
jge
xlat
sbb
xchg
jg
push
stos
xchg
cmp
cmpsl
dec
cmp
scas
imul
mov
dec
xchg
cmp
inc
sbb
in
push
push
popf
addb
mov
xchg
lock
stos
pop
sbb
xchg
in
dec
mov
andb
pop
add
jns
mov
std
pause
ds
fdecstp
jno
add
mov
lret
aas
sbb
icebp
sbb
iret
dec
in
test
xor
add
push
or
mov
cmp
dec
inc
sbb
xlat
cmp
jnp
push
sub
orl
sbb
xchg
sbb
xchg
mov
dec
push
stos
loope
push
lock
xor
xchg
repnz
pushf
bswap
arpl
stos
push
pop
fldl
lods
dec
out
jns
pop
xchg
test
sbb
inc
sbb
push
xchg
jmp
or
push
ss
pop
xchg
mov
cmpb
push
movsb
dec
mov
push
fisttps
pop
xor
ss
xchg
push
fidivrl
adc
aas
fistl
mov
xor
push
jg
div
or
jecxz
jb
and
sub
mov
ss
jno
xor
ret
ljmp
adc
bound
rcrb
aam
movsl
mov
cmpsl
xchg
push
ja
stos
fcoms
xor
dec
and
push
arpl
stos
cwtd
clc
imul
jle
notb
add
add
add
push
pop
pop
dec
mov
pop
rcll
lret
test
idiv
cmp
mov
stos
dec
adc
adc
repz
scas
in
ljmp
mov
sub
aas
sbb
fdivr
add
xor
cmp
int
push
sbb
inc
lods
xor
xchg
sub
add
lret
enter
or
sti
dec
inc
mov
fildll
cmp
push
shl
rolb
movsb
in
fimuls
xor
xchg
push
jge
add
fsubl
xchg
fucomi
add
xlat
clc
mov
addr16
sub
es
push
int3
loope
cltd
push
jnp
pop
adc
mov
push
sub
xor
pop
arpl
fwait
adc
lods
sarb
in
lahf
cltd
mov
sarb
mov
fbld
push
rcrl
cli
fisttpl
lds
xor
cmc
stc
subl
jecxz
mov
jl
pop
push
inc
push
wbinvd
std
fsubl
add
push
inc
addr16
xor
fdivrs
aam
lea
mov
lea
in
mov
daa
cmp
or
clc
andl
jnp
xchg
enter
xchg
pop
into
lds
pop
jecxz
sti
dec
dec
mov
sub
xchg
mov
mov
jns
dec
pop
adc
loope
hlt
sti
fwait
aad
addr16
ja
fwait
outsl
cli
mov
ja
and
sbb
jns
xor
jl
jbe
sbb
lret
imul
add
pop
dec
sbb
fnstsw
pop
dec
call
addr16
fldl
cmp
pop
lock
je
dec
inc
ds
loope
pusha
push
push
xor
daa
jb
mov
or
push
ret
jmp
pushf
imul
int3
mov
lods
les
popa
mov
pop
add
rorl
and
pop
repz
fs
push
xor
sahf
std
mov
push
aas
push
xor
es
xlat
add
repnz
loopne
mov
jbe
std
pushf
sbb
mov
fstpt
leave
aaa
and
cli
imul
bound
add
pop
sarl
jp
in
pop
xor
cmp
dec
loopne
xor
ror
pop
icebp
call
mov
cmpsl
arpl
nop
xchg
jmp
inc
or
inc
jo
and
aam
fstpl
testl
pop
jg
cmp
test
inc
inc
add
leave
insl
jg
test
xchg
ret
out
and
push
adc
sarl
pop
pop
push
mov
scas
push
cmpb
movsb
jb
rcrl
into
push
push
pushf
cli
test
and
adc
aas
leave
je
js
movb
cmp
xchg
popl
std
aaa
mov
jge
into
addb
int
mov
push
aad
mov
rclb
hlt
jmp
sub
mov
xchg
icebp
arpl
test
push
push
cmpsb
xor
aaa
sub
ss
push
jno
cmp
jmp
push
ds
fidivl
add
lea
xchg
and
out
dec
shlb
xor
mov
push
shlb
popa
mov
adc
or
ljmp
cmp
lea
fisubrs
int
pop
inc
filds
or
aaa
hlt
xor
test
lahf
popa
inc
jno
ljmp
insb
sbb
add
sbb
rcll
shll
mov
xor
cmp
add
es
push
loope
cmp
lods
pop
jno
das
fmull
je
and
lret
lods
pop
sub
pop
adc
jl
pop
jge
in
sbb
imul
gs
call
add
arpl
jnp
es
and
add
push
jnp
mov
dec
adc
or
or
xor
in
loope
clc
add
sub
shll
shlb
cmp
ja
push
dec
lret
in
add
pop
pop
mov
jp
push
mov
aad
mov
pop
ljmp
xchg
out
and
lods
jp
pusha
out
cmp
pop
xchg
cwtl
xor
loopne
jge
inc
insl
ja
pop
sub
cli
push
inc
inc
jbe
add
fisubrl
push
jae
dec
dec
and
in
ret
aad
jg
ja
pop
adc
sub
cmp
fstpl
shr
xchg
movsb
inc
push
push
or
les
js
setns
dec
jmp
adc
add
dec
popf
aad
dec
leave
mov
rolb
dec
xor
pop
rolb
push
ds
xor
sub
jmp
es
lret
xchg
fisubrl
inc
nop
fldenv
subl
leave
sub
mov
and
mov
dec
pop
jecxz
push
and
and
adc
in
and
pop
mov
arpl
lea
mov
dec
jge
fildll
mov
daa
loop
mov
dec
mov
ret
imul
insb
ret
andb
fldl
add
push
jg
and
or
mov
and
shlb
rcll
test
shlb
and
frstor
enter
or
lea
sbb
pop
call
xor
jne
out
and
enter
jmp
std
inc
lret
pop
das
inc
mov
leave
push
xchg
mov
push
mov
sti
adc
inc
cld
aam
lcall
mov
or
mov
xlat
scas
xchg
inc
in
push
js
es
sbb
push
movsb
or
mov
xchg
lret
jb
or
arpl
mov
inc
in
adc
cs
pusha
xor
mov
fmulp
mov
sub
cmpb
cmc
jp
sbb
or
push
pop
inc
lea
sarl
mov
das
xor
xchg
mov
pushf
enter
xchg
xor
lods
sub
sub
sti
aam
cmpl
mov
add
or
pop
clc
clc
sub
adcl
jnp
arpl
loop
fucomi
fwait
xchg
jl
and
sbb
sbb
add
xor
mull
xchg
pop
add
cmp
pop
fdivrl
adc
dec
rclb
jle
sbb
nop
sahf
popa
push
jmp
arpl
ret
xlat
xchg
pop
call
iret
and
neg
xchg
repnz
lods
sahf
xorb
cmp
push
mov
out
pop
xor
inc
sbb
mov
mov
hlt
sbb
inc
int3
mov
add
sub
sbb
in
and
mov
jnp
push
popf
mov
jmp
stc
push
dec
cmp
pop
cmp
movsl
std
inc
scas
aad
sahf
push
fstp
clc
sub
inc
mov
mov
jbe
movsl
repz
inc
gs
mov
ss
inc
inc
mov
loop
xchg
cld
faddp
inc
lret
sbb
jp
xchg
and
popa
inc
ficoml
ds
lds
xchg
cs
mov
lods
iret
aas
pop
push
jo
outsl
das
notb
cmpsl
mov
enter
push
out
fisttps
imul
out
xor
leave
popa
lods
mov
movsb
cmpsb
dec
push
cmp
or
sbb
xchg
sbb
arpl
jo
mov
xchg
or
ljmp
jo
cwtl
es
sbb
out
loop
sbb
call
pop
cmp
jl
jle
iret
mov
andb
or
or
jns
and
cwtl
shl
lea
cmp
pop
data16
mov
sub
imul
pusha
into
ret
sti
outsl
inc
inc
and
test
loop
flds
sub
inc
cmpsb
data16
sub
jecxz
sbb
lds
or
rcrl
xor
iret
out
ljmp
andb
xor
xor
inc
adc
scas
push
dec
jo
xor
xchg
xor
sub
add
mov
and
packssdw
sarl
jo
xor
call
mov
and
mov
adcb
jne
gs
dec
loop
mov
loop
shrb
hlt
xchg
sbb
lods
and
js
dec
xor
mov
and
push
xchg
icebp
cmpsb
sahf
and
insb
sub
pusha
and
add
lahf
adc
pop
mov
mov
mov
mov
cltd
xor
inc
inc
inc
sti
fdivr
clc
sti
xor
sbb
jne
jae
xor
insb
sbb
and
aaa
shlb
cmpsb
jecxz
out
mov
fcompl
test
stos
push
test
fsqrt
loopne
test
aad
fidivrs
jmp
mov
shl
int3
shlb
jae
cli
jo
cmp
movsl
xchg
xorl
add
rclb
jmp
and
icebp
push
cld
fistpl
jecxz
test
repnz
mov
call
sbb
ja
stos
lock
inc
mov
adc
aam
mov
cmpsl
cmc
out
mov
hlt
mov
js
mov
xchg
pop
fisubl
pop
pusha
lret
insl
cmc
notb
dec
sbb
sbb
xor
pushf
or
jns
sahf
and
adc
sbb
loope
enter
and
sub
sahf
cs
fidivrl
shl
xchg
dec
xchg
aaa
sub
jmp
mov
ffree
dec
cmp
pop
jl
lret
lcall
inc
inc
aaa
mov
mov
andb
jecxz
out
insl
mov
add
jns
jge
aas
jo
in
jg
pop
xor
mov
insl
cltd
mov
push
repnz
mov
add
inc
dec
lahf
std
jp
subl
inc
je
add
lahf
movsl
leave
xchg
cmc
ficoml
or
mov
shll
out
repz
jg
or
mov
xor
xchg
dec
sbb
xor
fimull
sarl
stc
mov
and
les
pop
lret
xchg
test
and
inc
jecxz
mov
leave
mov
or
push
fidivs
fistpl
adc
fs
out
in
mov
inc
jl
jns
jmp
je
dec
jmp
jo
cmpb
mov
or
xchg
in
call
call
inc
lock
mov
call
xchg
xor
ds
inc
xor
popa
ret
xchg
inc
in
mov
scas
aas
lahf
mov
daa
push
inc
jae
pop
cmp
das
repz
ds
pop
insb
push
mov
or
xor
loop
xchg
lock
lret
outsl
pop
pop
in
mov
push
call
fldt
sub
mov
in
mov
sbb
jnp
cmp
adc
cmpsl
das
or
xchg
hlt
rolb
adcb
pushf
jp
jecxz
mov
mov
arpl
push
lret
dec
mov
stos
push
mov
sarl
fildll
int3
mov
or
fs
inc
daa
mov
pushf
sbb
fcompl
dec
pop
jle
xor
sbb
jae
scas
xchg
inc
pop
sub
bnd
adc
and
xor
fiadds
adc
push
mov
fidivrl
add
repz
jbe
in
sbbl
or
imul
add
ficompl
insb
dec
setp
fisubl
or
or
ret
xchg
dec
arpl
nop
mov
adc
in
sbb
xor
and
jle
fdivrs
cmp
fdivrl
push
cs
push
pop
mov
inc
xor
sbb
jmp
aas
repnz
xchg
aaa
loop
clc
mov
das
jbe
cli
xchg
mov
addr16
outsl
mov
in
rcrl
aad
fisttps
push
sbb
das
mov
movsl
loop
es
mov
sbb
ja
jp
xchg
xchg
loop
rcrl
sbb
xchg
inc
sub
jge
aaa
dec
dec
jno
jmp
aas
jmp
mov
adc
and
mov
pavgw
sub
mov
xor
cmp
push
cvttps2pi
dec
xchg
enter
sub
adc
xor
movsb
shrb
fwait
cmc
pop
lods
fisubrs
test
sahf
popf
addr16
xchg
pop
test
ss
xor
jge
xor
xchg
out
mov
or
outsl
jo
fcmovb
hlt
imul
xor
ss
ret
mov
lods
cmp
movsb
jbe
or
test
cmp
cmp
fdivs
push
xor
jg
bound
jbe
mov
aas
dec
pop
pop
mov
or
lret
insl
loopne
jecxz
mov
jg
and
add
sbb
sub
mov
iret
pop
ret
mov
dec
rcrl
test
mov
cmp
outsl
fsubrl
addb
imul
cmc
mov
mov
std
mov
cwtl
gs
mov
jp
push
cld
lods
mov
add
pop
sbb
loope
xor
js
mov
call
mov
mov
shl
hlt
imul
out
xor
insl
pmaddwd
scas
jns
cmp
stos
sahf
adc
outsl
rolb
mov
js
mov
inc
inc
push
sub
mov
aam
jno
xlat
addb
repz
sbb
cmp
cli
pushf
test
imul
push
mov
enter
mov
xchg
pop
repz
nop
mov
inc
cwtl
xorb
outsl
xlat
out
dec
daa
cmp
xchg
arpl
pop
int3
cmp
movsl
test
rcrb
add
dec
inc
es
gs
and
cmp
sub
es
scas
int3
add
cmp
sti
mov
cmpl
in
fstpl
push
mov
jae
cmp
mov
out
sub
clc
imul
jecxz
push
ss
pusha
pop
scas
push
xchg
ficompl
icebp
xchg
lock
test
ret
nop
enter
xor
adc
imul
jns
push
xchg
in
mov
adc
aas
shlb
sbb
dec
push
jb
mov
test
in
ljmp
popf
orl
mov
push
pop
push
sarb
imul
stc
je
in
add
or
push
ret
mov
xchg
lcall
push
lds
mov
and
mov
adc
aas
cli
movsb
add
mov
push
xchg
cmp
in
and
imul
cmp
jp
nop
mov
sub
adcl
push
in
cmpsb
ret
stc
add
adc
pusha
or
roll
xor
lods
addr16
mov
rcrl
repz
sbb
mov
add
xchg
mov
cltd
cltd
pop
testb
sti
lods
aas
imul
loope
leave
cmp
test
or
cmp
sub
repnz
pop
add
or
jle
push
xor
mov
inc
ss
pop
pop
negb
bsr
sub
cs
mov
mov
jecxz
pop
aad
mov
mov
movsl
repz
dec
ljmp
cmp
and
sub
lock
push
test
fdivr
push
mov
mov
int3
or
sbb
xchg
and
test
cltd
insl
daa
hlt
or
push
jecxz
pop
in
sub
es
les
fimull
mov
pop
rol
push
xor
fdivl
mov
mov
xor
dec
push
adc
pop
sub
or
insl
xlat
adc
mov
fsubrs
xchg
scas
ljmp
lcall
add
and
pop
out
lods
divb
mov
lret
dec
icebp
pop
in
xchg
cld
jae
aam
pop
scas
add
adc
sbb
mov
ss
dec
sub
inc
cmc
sbb
cld
jnp
xlat
imul
inc
fisubrs
out
cmp
stos
jno
imul
mov
push
dec
mov
add
or
sbb
fucomp
hlt
cmp
pop
test
nop
dec
int
inc
add
mov
arpl
fldz
mov
and
hlt
roll
mov
jmp
mov
cs
mov
xchg
rorb
divl
pop
jl
sahf
xlat
call
cmp
pusha
xchg
lods
adc
imul
or
cli
incb
jbe
mov
pop
inc
xor
cld
mov
jne
cltd
and
xor
pop
pop
sbb
sahf
or
loop
pusha
and
xlat
cltd
daa
rclb
add
inc
pop
ja
pop
pop
mov
ret
ss
and
leave
inc
mov
or
inc
mov
cmpsb
or
jnp
add
daa
xor
fs
bnd
popf
jmp
xor
xchg
in
icebp
std
add
cmpsb
aam
lcall
sub
mov
adc
inc
iret
pushf
lcall
mov
jb
aas
mov
aaa
jp
repnz
and
loopne
pop
cmc
xchg
movsl
jecxz
pop
inc
xor
mov
mov
ss
jle
ret
aaa
or
xchg
shll
mov
add
or
mov
mov
inc
scas
cld
adc
repz
test
aam
jmp
mov
jl
ss
imul
mov
mov
shlb
mov
xchg
out
scas
inc
pop
cmp
sbb
arpl
cld
lret
scas
sbb
cltd
scas
rorb
jmp
xchg
repz
add
push
jne
add
repz
jmp
adc
aad
add
stos
dec
sub
rclb
push
fcmovbe
pop
ljmp
adc
lods
cmp
test
roll
lock
mov
xchg
sub
xchg
push
out
daa
xor
cwtl
hlt
add
mov
pop
adc
outsb
stos
lock
mov
sub
and
cmp
push
dec
outsl
dec
lods
sub
inc
push
pop
scas
push
addb
jecxz
mov
mov
push
or
cmp
les
int3
insb
xor
out
xor
adc
pop
sbb
rorl
pushf
cmpsb
mov
dec
adc
cmp
arpl
dec
repnz
leave
bnd
sbb
js
jne
xchg
ret
or
jp
sub
repnz
jl
mov
rcrb
scas
jmp
push
pushf
inc
jecxz
sbb
repz
pop
mov
inc
lds
dec
push
ret
inc
push
pop
fnstcw
pop
imul
je
adc
aaa
test
mov
in
fists
cmc
insb
sbb
or
and
repnz
dec
xchg
bound
popf
mov
jmp
inc
mov
ret
xor
sub
inc
loopne
xchg
jg
mov
lahf
iret
out
cmpsb
mov
sub
and
aaa
out
inc
and
test
xor
movsl
mov
mov
xor
loope
hlt
rorb
rdpmc
and
add
rcrl
mov
mov
push
lea
pusha
xor
popf
aad
mov
pop
ljmp
xchg
push
and
push
dec
xchg
sub
fistpll
icebp
filds
sub
ds
mov
ja
loopne
xor
and
jge
and
jns
mov
dec
sub
aaa
push
lods
fisubl
hlt
or
xchg
xlat
lea
cmp
into
jmp
jecxz
shr
dec
pop
push
fidivl
mov
add
fdivrl
mov
dec
fwait
push
pop
inc
add
loop
mov
push
mov
sbb
addr16
mov
add
in
xchg
cltd
jne
add
addr16
es
bound
iret
dec
xchg
mov
repz
cmpsl
testb
pop
pop
sub
daa
test
nop
mov
call
push
loop
into
mov
loop
xchg
leave
cmpsb
shrb
pop
sbb
or
popa
inc
hlt
cmc
inc
push
pop
lds
mov
add
dec
gs
add
adc
mov
xchg
sbb
out
jae
pop
pop
jae
shlb
out
fisttpl
mov
sbb
push
int
clc
xchg
jae
jne
inc
jnp
out
jns
int
inc
nop
repnz
inc
add
std
pop
inc
xchg
mov
xchg
or
das
cmp
popf
adc
test
fwait
int3
mov
mov
jne
adc
hlt
jle
push
dec
fsubp
pushf
and
mov
int3
inc
xor
and
mov
pop
fs
sub
pop
xor
test
mov
dec
data16
andb
out
jle
ret
mov
cld
and
pushf
arpl
scas
ja
mov
pop
sbb
ffreep
das
cmc
bound
add
sub
mov
fsin
testb
insb
repz
pop
dec
jns
mov
add
sub
test
cld
popf
es
and
jecxz
xchg
xchg
test
dec
lret
fcoms
ja
sub
jl
xor
testl
leave
icebp
or
in
inc
jl
push
sub
adc
mov
gs
test
mov
inc
jge
pop
sbb
and
pushf
mov
imul
dec
cltd
or
adc
lret
insl
fwait
mov
jbe
jb
pop
shlb
dec
inc
pop
repnz
pop
lret
xorl
or
outsb
inc
loopne
cli
mov
sub
cmpl
int3
sub
in
xor
adc
loop
xor
jmp
and
or
adc
xchg
xchg
adc
push
pop
dec
bound
mov
sub
cmp
shrb
xchg
mov
mov
mov
arpl
add
stc
push
dec
in
inc
xor
clc
jbe
dec
xchg
mov
cmpsl
das
popl
inc
xchg
mov
lods
dec
xchg
push
xchg
push
inc
sbb
cmp
cmpsl
or
sbb
lret
and
cs
push
cmpsb
inc
jb
mov
dec
or
sub
jae
mov
jae
dec
pop
xor
dec
pop
or
sub
adc
dec
mov
or
cs
push
mov
mov
inc
jmp
into
push
jmp
daa
jecxz
lds
mov
mov
mov
mov
xchg
mov
push
adc
aam
sub
sbb
inc
arpl
icebp
ffree
rcrb
lods
mov
cld
dec
push
std
loop
push
divl
in
xchg
js
pop
adc
insb
xor
in
mov
cmp
outsl
xor
jae
sub
xor
or
in
push
in
test
in
stos
imul
icebp
das
int3
pop
hlt
inc
outsl
mov
sub
shr
mov
repnz
subb
cmp
adc
daa
int
icebp
ficomps
ljmp
push
push
test
adc
push
fldl
pop
lea
arpl
popa
dec
inc
mov
xchg
pop
sub
mov
pusha
bound
out
loope
rcll
sub
sub
dec
add
add
rcll
mov
mov
or
inc
iret
leave
mov
or
add
xor
aam
inc
xchg
stos
jg
sbbl
xchg
scas
or
js
cmp
cmp
dec
fildl
cltd
dec
fisubrs
cmc
ljmp
ljmp
add
push
mov
cwtl
jp
cmpsl
iret
popf
out
stc
mov
ret
out
cmp
ret
jg
inc
jae
jne
xor
movsl
add
inc
push
lcall
xchg
out
adc
or
lods
lock
push
and
mov
adc
or
jbe
sub
repz
stos
mov
push
sbb
sbb
inc
dec
adc
xchg
gs
arpl
jb
mov
add
stos
or
pop
mov
cmp
std
inc
sub
or
das
stos
xchg
dec
cmp
cmp
dec
in
add
fidivl
inc
jp
std
add
leave
xchg
out
mov
inc
mov
or
dec
ret
mov
mov
sub
sbb
cmp
xchg
aaa
push
jge
pusha
pushf
lea
jmp
inc
in
mov
jb
xchg
lds
clc
imul
insl
cmp
xchg
xchg
loop
lods
lods
cmp
and
adc
push
add
icebp
fcoml
cmc
ja
sbb
pop
adc
into
in
mov
pop
cli
add
ret
aaa
mov
outsl
pusha
dec
pop
stc
and
push
pop
pop
jb
ljmp
fwait
out
cmp
outsl
or
movsb
dec
xchg
cmp
movsl
pop
jge
aam
pushf
jb
sub
add
mov
test
imul
cmc
mulb
xor
fwait
out
data16
mov
mov
shlb
rcrl
pop
mov
adc
test
jle
inc
stc
mov
pushf
mov
fdivl
mov
ja
repnz
inc
fdivrs
jle
fisubs
xchg
xor
and
or
decl
dec
adc
fstl
aam
loope
adc
dec
cmp
dec
xchg
gs
dec
in
pusha
xchg
stos
pop
arpl
push
push
insl
std
mov
in
pop
jae
out
je
sub
shlb
leave
dec
clc
ss
stc
cmc
mov
or
xchg
adc
mov
inc
ret
popa
add
ret
sub
incl
fisubl
ficoml
inc
sbb
xchg
push
adc
imul
inc
mov
mov
movsb
mov
enter
rcrb
fidivs
test
lret
sub
xor
xchg
mov
stos
mov
jle
movsl
ret
addb
mulb
inc
dec
push
sub
iret
fnstenv
clc
dec
out
jno
mov
rolb
mov
arpl
scas
add
data16
ljmp
in
scas
cli
pusha
adc
test
or
pop
push
mov
sub
sub
xor
aas
fdivp
filds
test
xchg
mov
pop
sbb
push
or
push
lret
call
mov
insb
pushf
mov
xchg
or
pop
jge
jae
mov
cmc
sahf
mov
cmpsb
repz
mov
push
adc
sub
mov
or
fs
add
mov
jb
jp
jecxz
mov
lds
adc
lea
cltd
out
mov
xchg
sbb
inc
out
add
cli
imul
lret
fldcw
addl
call
sub
sti
lret
mov
les
push
jmp
nop
outsb
lea
imul
mov
mov
cltd
mov
mov
jge
in
push
movsb
jbe
imul
fbld
into
inc
out
pop
nop
loop
add
ljmp
mov
aam
out
aam
mov
xchg
sbb
les
mov
xchg
call
adc
fcomi
add
cmp
inc
sahf
jno
jecxz
rcll
jbe
movsb
aam
cmc
xor
aam
pop
dec
xchg
lret
inc
dec
pop
adc
adc
ds
xchg
jne
jmp
insb
mov
inc
aam
mov
mov
jl
jmp
fmull
fstpt
lds
fpatan
fmuls
inc
in
xchg
clc
or
int3
push
in
repnz
lahf
out
dec
sbb
inc
pusha
call
add
lahf
add
gs
cltd
loop
mov
test
sarb
push
inc
sbb
insl
pop
dec
addl
inc
push
sub
cmpb
lods
gs
jmp
inc
pop
fwait
call
call
sub
mov
cld
in
roll
movsl
adc
test
push
popa
les
in
addr16
fwait
ret
js
in
das
mov
imul
xchg
or
add
jo
repnz
in
and
imul
sub
movsb
add
out
out
pop
testb
cmc
shlb
enter
mov
pop
icebp
push
cmp
xlat
and
mov
mov
fs
shlb
loop
shr
jge
mov
jecxz
dec
fwait
imul
fsts
jno
add
filds
mov
mov
imul
ja
pop
scas
inc
lret
push
das
push
inc
data16
iret
xor
mov
mov
ret
jmp
pushf
outsl
es
scas
in
fst
lods
popa
rolb
add
cli
outsl
push
in
mov
xor
test
ficomps
lock
aad
lahf
sub
push
test
mov
dec
push
xor
sbb
sahf
aad
or
add
dec
loop
push
fs
scas
mov
or
adc
jo
cmpsb
sahf
aam
cwtl
lcall
fmull
andb
lret
mov
movsb
fld
cs
adc
add
movsl
xchg
xchg
mov
mov
cmp
iret
mov
xor
push
fcmovb
jmp
loopne
mov
fs
add
dec
xchg
imul
cld
mov
jg
mov
jns
jo
mov
loopne
sbb
mov
jno
imul
lret
or
sti
xor
and
lods
sbb
inc
pop
ret
outsl
movsb
jle
and
jp
dec
mov
cwtl
jne
popl
mov
scas
jl
xchg
jno
scas
loopne
and
movsl
pop
andb
mov
loop
in
dec
jmp
ror
fdivp
lods
jnp
leave
adc
call
ljmp
mov
imul
lods
dec
lds
add
inc
mov
nop
mov
add
popa
test
fisttpl
sbb
cld
sub
fisubrs
das
inc
adc
fidivl
mov
xchg
outsb
jl
mov
rcrl
out
jnp
adc
movsl
sub
cs
sbb
in
push
push
in
pop
and
xchg
mov
cmp
fstpt
sahf
xor
fnstsw
in
xchg
ficomps
xchg
or
jmp
rorl
sub
adc
fsubs
out
cmp
cmp
in
push
mov
das
push
cmp
inc
ja
mov
nop
sub
fwait
jecxz
mov
mov
shl
jbe
into
push
push
mov
iret
out
push
in
cli
fisttpll
xchg
fidivrs
aas
or
inc
inc
ss
dec
rcrb
shll
daa
jns
ficomps
mov
lea
nop
lret
add
mov
rclb
jae
icebp
sbb
cmp
stos
in
lahf
andb
sub
ds
push
bound
inc
notl
and
arpl
shlb
mov
pop
mov
push
xchg
push
ret
rcrb
stc
sbbl
ja
xchg
lcall
imul
in
lea
sub
out
mov
adc
inc
jae
movsb
daa
hlt
cwtl
test
repnz
inc
mov
xor
cmpsb
in
dec
loop
mov
hlt
pop
std
jp
repz
sbb
dec
roll
push
shl
mov
sbbb
fisubl
push
and
push
lods
in
popfw
push
enter
cmp
pop
imul
cmp
adc
rcrl
cld
push
sub
push
mov
popa
test
icebp
inc
and
data16
mov
xchg
nop
xor
stos
or
ljmp
push
sub
dec
xchg
fstps
imul
fldt
xchg
and
cmp
pop
or
test
ss
mov
lahf
cmc
mov
fistpl
shrl
lock
sbb
rcr
mov
fcomp
add
push
repz
pop
sahf
dec
les
test
sbb
or
in
adc
cmpsb
mov
enter
in
out
push
push
loop
mov
add
xchg
fldenv
sbb
aam
outsl
dec
xorl
out
push
mov
dec
push
out
dec
mov
hlt
pusha
xor
mov
mov
sub
outsb
and
mov
dec
push
out
and
jg
add
xchg
sub
mov
mov
popa
jl
xor
and
sbb
and
les
leave
mov
out
mov
dec
add
es
nop
add
xor
mov
inc
pop
xchg
cmp
out
in
jecxz
ret
sub
data16
lret
push
es
jle
mov
sbb
lea
mov
or
adc
fildl
jae
pop
jb
test
popf
xchg
or
aam
xor
mov
jns
lea
push
aas
mov
movsl
cmp
fs
or
dec
mov
jmp
inc
in
mov
idivl
mov
jle
mov
pop
push
push
mov
pop
mov
je
test
insl
or
stos
andb
shrl
or
xchg
and
xlat
mull
mov
pop
or
pop
in
add
xchg
addr16
movsb
pop
jae
leave
cmp
mov
dec
cmp
ret
data16
lea
mov
add
pop
es
jns
test
imul
add
jl
loopne
mov
out
test
cmp
jns
or
dec
mov
mov
ja
mov
mov
xrelease
mov
inc
or
movsb
xchg
ficoml
cmpsl
xor
dec
mov
mov
cmp
cli
stos
or
push
cltd
add
lret
div
pop
sub
repnz
shll
cwtl
inc
xor
jns
push
sub
or
push
xchg
cwtl
adc
sbb
xor
jo
sbb
and
stc
and
push
sbb
popa
inc
or
pusha
pop
mov
adc
xchg
and
xor
stos
adc
shlb
pop
stc
aaa
mov
flds
mov
repz
aad
test
loopne
mov
repnz
mov
call
inc
mov
scas
mov
mov
inc
test
sbb
push
mov
outsl
stos
mov
mov
sbbb
or
inc
adc
mov
or
jnp
mov
mov
ret
or
shlb
cmc
dec
popf
ret
test
dec
loop
adc
mov
addr16
dec
xchg
cmp
scas
inc
cmp
adc
in
pushf
bound
cmp
cmc
mov
stos
push
leave
outsl
rorb
push
mov
jae
fdivs
xor
mov
lds
shrb
push
loop
cmp
aam
push
mov
stos
iret
daa
sub
lret
sti
jle
pop
lods
jbe
xor
nop
jb
inc
bound
add
adc
cmpsb
mov
aas
push
subb
movb
int
mov
lods
add
push
test
mov
pop
in
xchg
sarb
enter
push
pop
out
je
repz
jmp
sub
xor
loope
and
jle
loope
je
fidivrs
xchg
jge
sbb
fmull
xor
movsl
dec
ljmp
test
xchg
clc
xchg
es
cli
xorl
sbb
xor
mov
daa
or
addr16
jns
mov
pop
push
popf
xchg
pusha
and
fisubrl
mull
cltd
flds
testb
xchg
lret
add
aaa
cmpsb
stos
sbb
jo
pop
aas
and
lods
jl
enter
out
faddp
xchg
nop
out
sub
and
pop
ror
jno
popf
jp
stc
ret
gs
xor
insl
test
loop
or
xor
loopne
ja
cltd
pusha
sbb
cltd
pusha
stos
xor
xchg
sub
sti
push
sahf
jecxz
cltd
fisubs
pop
in
push
std
clc
jb
daa
in
mov
int
dec
sbb
aam
pusha
or
push
aam
or
scas
or
and
mov
ficomps
push
mov
sbb
scas
insb
lret
cltd
dec
into
repnz
push
xchg
loopne
cmpsl
jecxz
inc
mov
jmp
sub
inc
int
xor
sbb
pop
xor
shr
jno
sub
jge
insb
loopne
call
jne
stc
push
mov
stc
dec
fwait
lret
cmp
outsl
inc
pop
pusha
ret
insb
pop
pop
dec
cmp
in
fisttps
sbb
stc
loope
mov
mov
or
inc
adc
jae
cmp
out
hlt
jns
ds
pop
lds
mov
or
outsb
aam
lods
dec
shlb
cli
pop
inc
jmp
add
mov
fs
jbe
shll
dec
jno
in
cmpsl
pop
xchg
test
mov
shlb
sarl
xchg
lods
xchg
sbb
test
ret
sbb
mov
add
jns
int3
pushf
cmp
loope
mov
mov
subb
push
rolb
clc
mov
ss
cs
mov
dec
mov
daa
sbb
push
mov
sbb
push
pushf
jno
shr
divb
xor
cmpsb
in
inc
and
fs
and
in
and
xchg
sub
jb
decl
ljmp
pop
xchg
sahf
cmc
shrb
or
inc
push
xlat
jmp
dec
fisubl
adc
sub
pop
add
mov
mov
adc
mov
jle
push
dec
mov
pop
repnz
pop
xchg
in
insl
fsubr
aas
dec
sti
push
or
es
call
mov
mov
aad
sub
rcll
scas
sub
mov
mov
cmpsl
xor
cli
or
and
outsb
in
dec
scas
pushf
clc
inc
jmp
cltd
icebp
ja
xor
gs
jb
xor
sbb
cmp
cmp
lcall
ret
out
adc
mov
test
sbb
mov
lds
mov
shlb
in
xchg
sbb
ljmp
add
fdivs
mov
jb
xor
popa
mov
push
adc
daa
add
mov
mov
leave
data16
adc
inc
ds
pop
mov
call
ret
bound
inc
lods
xchg
jp
xchg
jl
out
pop
and
imul
loopne
insl
sti
xchg
adc
ja
in
inc
cwtl
xor
andl
data16
sbb
sbb
test
cmp
pop
lods
shll
rolb
add
and
lock
jge
shlb
add
mov
pop
or
cmpsl
xchg
ret
test
fs
cld
xor
mov
sbb
arpl
jmp
sbb
jge
mov
xchg
mov
mov
addr16
mov
rclb
lret
stos
clc
mov
jbe
int
sbb
fadd
popa
fidivs
xchg
hlt
pop
or
and
jmp
ljmp
sti
ljmp
mov
mov
xor
jnp
imul
leave
es
jp
xlat
add
inc
dec
add
mov
test
mov
mov
mov
sarl
dec
xlat
ja
mov
mov
mov
cmpsl
jbe
pop
in
xor
push
in
icebp
ljmp
pop
test
sbb
sbb
lds
jbe
cmp
mov
jb
or
mov
jmp
leave
mul
sbb
jmp
inc
lret
fldcw
sbb
lea
jae
adc
xchg
mov
jmp
lods
movsl
pop
scas
pop
hlt
sbb
dec
in
or
push
jle
sub
push
subl
adc
mov
ja
ret
add
jg
movb
mov
adc
iret
mov
sub
fcomps
and
sub
push
or
push
xchg
pop
fs
or
or
xchg
mov
xchg
clc
fcomps
jo
push
inc
daa
jge
call
mov
cmp
movsb
rcll
inc
aas
push
scas
stos
int3
frstor
jecxz
xchg
test
mov
inc
jge
sub
sub
lret
ss
jle
rol
addl
nop
jne
cwtl
sub
hlt
dec
inc
test
pop
aam
inc
cmp
stos
stos
cmc
mov
je
xor
out
popa
xor
mov
faddl
imul
xchg
ret
mov
dec
out
in
add
push
mov
std
adc
pushf
xor
push
jge
ljmp
popa
imul
ret
mov
sub
add
out
icebp
pop
sub
roll
je
int3
and
xlat
mov
jp
mov
push
std
xchg
mov
pop
mov
sbb
xor
ficompl
and
jbe
cli
pop
repz
lods
cli
fs
ret
lret
xchg
cmp
shll
rcrl
call
pusha
roll
sti
loop
jge
xchg
push
mov
fistpll
inc
lea
sbb
stos
inc
dec
imul
outsl
in
je
popa
dec
jl
stc
mov
sub
cmp
jne
clc
fwait
imul
lods
repnz
push
aaa
mov
scas
mov
add
xor
in
add
shrl
test
sub
adc
xor
pop
xchg
mov
fdivr
jae
movsb
mov
add
icebp
test
mov
mov
dec
je
ds
pop
out
int
xchg
sub
shrl
push
dec
xor
adc
jp
mov
jno
imul
mov
adc
cmc
inc
push
push
jecxz
addb
xor
xchg
lods
adc
pop
pop
pusha
dec
subl
jnp
jecxz
mov
movntps
xchg
mov
adc
nop
pop
sbb
cmp
mov
mov
orb
pushf
pop
fldenv
push
xchg
mov
adc
push
or
lds
fildll
in
hlt
pop
push
mov
aaa
jno
scas
ds
sbb
lahf
stos
out
cmp
pop
pop
add
push
and
test
add
dec
or
mov
and
cmp
xor
aaa
in
into
fwait
mov
dec
lods
test
outsb
pop
test
je
orb
mov
enter
push
js
push
lahf
ret
adc
mov
sbb
sbb
gs
push
call
jae
aas
xor
lret
aas
inc
insl
dec
into
dec
int
push
loopne
pop
or
xchg
sub
inc
sub
in
push
sub
mov
xor
scas
and
cmp
dec
jo
and
in
mov
xor
sub
scas
int
mov
sbb
pop
cmp
xchg
div
inc
xchg
push
pop
lahf
mov
jnp
xor
lret
daa
push
imul
cmp
adc
sbb
add
push
ds
mov
out
mov
jne
in
xor
inc
cld
cltd
les
jb
mov
pop
lcall
pop
pop
outsb
sbb
in
test
lret
pop
xchg
cld
jae
in
or
xor
addr16
push
cmp
sub
shl
dec
cltd
outsb
hlt
xlat
dec
testb
jns
jmp
dec
cmp
adc
popf
insb
jecxz
popf
sub
imul
test
push
into
addr16
sub
enter
add
xchg
pop
mov
shr
cmp
imul
push
pushf
lahf
mov
xchg
add
cwtl
pop
xchg
lahf
dec
pop
nop
repnz
iret
adc
js
enter
lds
sbb
aad
xchg
lret
mov
insl
cwtl
or
adc
push
stc
cmpb
outsl
adc
push
xor
imul
adc
xor
scas
inc
adc
test
push
dec
xchg
insl
bound
iret
cmp
sbb
bound
stos
lds
out
mov
mov
jge
cs
sbb
inc
adc
cmc
jne
mov
pusha
pusha
inc
rclb
lret
stc
aad
mov
mov
stos
add
inc
loop
negl
add
cmp
andl
data16
mov
inc
in
jge
cmp
sub
xor
push
adc
mov
arpl
xchg
pop
push
fimull
push
fldt
jnp
fsts
pusha
fs
sti
lret
mov
cltd
nop
pop
mov
loop
dec
lea
mov
outsl
cld
movsl
daa
push
rcr
dec
push
sahf
pop
and
insl
xor
out
adc
jl
push
mov
inc
movsl
xchg
mov
jb
adc
pop
fld
cmp
fmull
mov
jg
lret
add
cmp
dec
divl
dec
ss
cmp
mov
sahf
adc
movups
std
cld
or
xor
stos
and
and
test
fistpl
pop
dec
ret
std
or
mov
rclb
jbe
js
stos
sbb
push
mov
fstps
rcr
inc
xor
movsb
pop
add
clc
push
xchg
in
outsb
xchg
shll
push
dec
stc
fisubrs
orb
adc
xlat
jo
adc
insb
pop
aas
add
adc
ds
fisubs
adc
mov
xor
or
add
lds
orl
inc
sbb
lret
fisubl
sarw
push
add
imul
adc
mov
sarl
xchg
test
ret
popa
mov
pop
and
or
pop
xor
pop
out
sub
inc
enter
in
addl
jp
lods
xor
addr16
push
mov
pop
in
in
mov
notl
leave
push
pusha
stos
js
mov
pop
fsub
sub
lcall
jl
divl
pop
clc
in
mov
ljmp
repz
mov
shrb
mov
pop
mov
cmp
ret
insl
jb
or
fwait
xor
pop
inc
push
mov
mov
leave
adc
mov
enter
adc
pop
inc
lret
nop
add
sbb
popf
fistl
in
adc
daa
hlt
repnz
jecxz
icebp
mov
stc
sub
xchg
xor
inc
mov
lret
add
aam
mov
jmp
subl
xor
jae
in
insl
or
or
iret
clc
ljmp
add
adc
and
jnp
imul
inc
sbb
stos
outsb
idivb
add
xchg
jno
dec
sub
or
loope
mov
dec
stc
and
xor
or
aad
outsl
outsb
mov
xor
insl
aam
cmpsl
xor
dec
popa
movsl
cmpsb
fs
sbb
and
mov
mov
iret
lret
cld
mov
addr16
or
in
dec
ret
inc
out
push
sub
and
lcall
sbbl
inc
ja
aad
sub
clc
dec
shll
int3
lock
xchg
test
rcll
adc
jnp
push
inc
fisttpl
fsubrl
dec
in
xor
fcoml
rcr
add
sbb
inc
xor
nop
ret
scas
mov
out
pop
ret
push
scas
leave
popf
sub
shlb
das
mov
inc
pop
cmpsl
int
dec
call
or
xlat
cmp
dec
repnz
jl
inc
out
fisubrs
mov
fcomip
push
jl
xchg
stc
inc
cltd
xchg
push
out
repz
out
jnp
jno
repz
pop
lea
mov
sahf
cmp
mov
out
into
loopne
mov
adc
push
test
xor
ss
js
mov
xchg
cltd
xor
pop
mov
das
out
jb
repnz
inc
mov
jne
jns
push
pop
shrl
push
pop
sbb
das
arpl
ja
jp
pop
fstpl
or
sarl
mov
repnz
fwait
sti
cld
xlat
jp
sbb
loope
and
mov
mov
lret
pop
in
clc
pop
adc
adc
xor
mov
testb
adc
call
shl
mov
push
mov
loop
xchg
mov
pop
in
test
cltd
jb
xchg
test
jl
ss
into
sahf
loope
ret
out
lods
mov
movq
pushf
dec
shll
inc
ficomps
mov
call
push
loop
mov
or
mov
inc
dec
stos
js
mov
xlat
in
das
push
aad
insb
mov
mov
sub
dec
out
mov
leave
outsl
mov
pop
or
xchg
and
xchg
add
jnp
xchg
push
mov
test
ficoms
sub
pop
jno
lods
pop
xor
add
aaa
loopne
push
xchg
roll
in
add
add
push
popf
mov
cmpb
sbb
pop
jb
cmpsb
xchg
test
fimuls
fwait
jp
cltd
adc
ficompl
jne
lock
dec
ret
addr16
xchg
mov
outsl
shl
push
and
mov
jae
dec
pop
jns
in
subb
popa
cli
js
or
shll
cmp
xchg
ret
les
push
xchg
les
nop
dec
loopne
mov
mov
adc
in
sub
mov
mov
stos
pop
lock
jmp
jno
xchg
mov
cwtl
sbbl
je
inc
sbb
and
mov
jmp
pop
cld
add
scas
jns
push
shll
jns
outsl
ds
sub
hlt
inc
cli
sbb
rcll
gs
and
sbb
sbb
sub
stos
outsl
mov
push
mov
das
dec
mov
pop
enter
rol
lahf
int3
xor
pushf
bound
js
imul
popf
mov
xchg
imulb
and
or
insl
das
add
cwtl
sub
mov
xadd
jp
fs
in
xor
call
insb
push
add
in
loopne
jo
popf
insl
add
pop
nop
cli
inc
cld
inc
xchg
int
fsubs
fs
hlt
fidivrs
add
xrstors
push
lcall
pop
xor
test
push
outsb
rcrl
mov
daa
cltd
rcrl
and
icebp
fcomps
sbb
fistpll
enter
xor
sub
push
cmc
dec
mov
hlt
xchg
test
ret
adc
popf
cwtl
popa
gs
lods
add
add
imul
and
imul
mov
dec
pop
xchg
xlat
mov
cs
adc
sbb
inc
or
sbb
fbld
andl
lods
xor
sub
jne
jg
dec
enter
mov
int
mov
lret
addr16
jb
xor
mov
and
mov
and
add
pushf
xchg
bound
js
pop
mov
icebp
cmpsb
test
xor
addr16
lcall
xorb
ds
mov
push
lock
fistpll
adc
push
push
or
push
or
or
jmp
jne
mov
inc
test
push
fmull
std
aam
jmp
scas
shll
icebp
mov
movsl
cmpsl
lods
sar
or
out
and
sbb
jle
pop
and
cmpsb
lret
pusha
sbb
insl
push
ret
mull
xlat
cs
sbb
call
pusha
pop
xchg
iret
and
jge
cwtl
out
fiaddl
jle
inc
insb
mov
add
jl
aaa
popa
mov
ss
ss
shlb
pop
mov
andl
cmp
ret
sub
or
add
in
roll
and
cmp
cli
push
ja
add
push
in
je
xor
cmp
push
mov
pop
xor
mov
push
call
dec
daa
add
fldl
jmp
or
push
and
and
add
pop
inc
pop
xchg
sub
and
or
jne
bound
sub
fstp
sub
divl
jbe
test
in
adc
xor
ret
in
into
dec
add
dec
dec
loop
mov
insb
mov
hlt
fcmovb
sub
lock
into
ss
add
test
mov
dec
pop
cwtl
and
pushf
push
cmp
and
pop
mov
and
pop
into
xor
lret
lret
pop
cmp
mov
shll
pop
sub
aam
xlat
adc
test
std
inc
in
xlat
pop
stos
or
dec
testl
enter
clc
out
mov
stos
sub
adc
xchg
sti
jnp
ljmp
sar
and
xor
jge
inc
stc
jg
call
fs
cmpsb
lret
rolb
pop
fisttps
sub
xor
dec
dec
xchg
mov
jl
sbb
fcompl
and
push
insb
or
inc
push
mov
xadd
adc
ret
adc
dec
repnz
insb
mov
stos
xor
jae
sbb
popa
stos
mov
pop
pop
cli
nop
xchg
data16
lret
pop
and
inc
mov
addr16
mov
in
mov
orb
pop
movsb
cli
out
aaa
pop
daa
jmp
dec
or
sbb
mov
cmc
jbe
dec
fs
jl
lock
repnz
sbb
or
xchg
add
sbb
xor
repz
pop
arpl
int3
popa
clc
decb
lcall
outsb
imul
movb
mov
fwait
insb
lret
jbe
std
pop
or
or
push
pop
or
xchg
or
inc
adc
push
ret
ret
adc
jg
push
push
lret
push
mov
fdivl
jnp
xor
jp
lret
movsl
mov
ret
fwait
jnp
pop
mov
mov
mov
in
in
inc
imul
push
dec
or
xchg
sub
sub
adc
jmp
std
popa
pop
mov
mov
testb
pop
dec
js
mov
test
xchg
mov
cmpb
and
mov
rcl
sahf
and
adc
cmp
jle
mull
inc
cmpb
ret
fwait
sbb
lahf
outsb
push
push
insl
xor
mov
out
leave
push
cmp
push
into
add
aas
or
push
sti
push
xchg
ja
cmp
popf
xchg
add
cmp
mov
mov
xor
mov
dec
jnp
js
push
jp
push
dec
inc
and
pop
xor
jp
xchg
aam
rclb
push
aam
lcall
dec
lea
sbb
jae
stos
inc
shrb
dec
push
in
mov
mov
ficoms
cwtl
dec
sub
cs
cmpsb
sahf
sbb
fsubr
cmp
inc
push
sbb
in
push
inc
mov
leave
in
push
sbb
sbb
in
fsubrs
jo
sub
mov
or
fidivl
sub
fucom
test
push
cmp
mov
mov
mov
push
xchg
mov
adc
ffree
adc
lock
dec
sbb
cwtl
fbstp
or
les
test
cmp
xchg
punpckldq
pop
add
mov
pop
mov
ja
sbb
adc
or
inc
out
xchg
int3
add
jl
pop
xchg
fnstsw
xchg
cmpb
adc
leave
out
test
test
movsl
test
adc
ljmp
sbb
mov
jbe
out
ljmp
and
mov
loope
imul
mov
jge
cmpsb
jg
cli
rorl
in
cmp
or
cmp
lret
dec
and
pop
movsl
xchg
pop
adc
sbb
dec
mov
fs
stos
xorl
and
add
lea
sub
cli
stc
inc
lds
lahf
pop
pop
loopne
mov
sub
loope
or
sub
movsb
cltd
pop
lea
stos
in
fsts
lea
adc
sub
and
pop
mov
in
jge
lret
frstor
subb
roll
dec
add
sti
mov
inc
lret
xchg
mov
jne
in
push
inc
lock
repnz
jns
inc
stos
shl
push
std
pop
inc
in
mov
pop
push
arpl
jl
daa
mov
stc
in
pop
fbstp
ret
popa
dec
mov
and
jae
ss
cld
push
sbb
inc
push
jae
push
push
and
push
out
cmp
and
push
pop
xchg
dec
inc
push
pop
mov
mov
cmp
mov
pop
fs
out
xlat
sarb
or
xchg
in
call
rorb
sub
outsb
inc
out
inc
mov
cli
bnd
fsubrl
sbb
cmpsl
jae
jg
xchg
data16
repnz
lea
mov
push
pop
notl
das
cmpsb
cmp
xchg
xchg
mov
int
mov
mov
mov
pop
inc
imulb
inc
enter
push
jl
fiadds
cmp
lds
push
rorl
inc
mov
hlt
mov
js
int3
fsts
popa
gs
nop
mov
cmpsl
and
cmp
or
aaa
test
xchg
nop
cmp
push
add
push
cwtl
imul
xor
mov
mov
sbb
inc
mov
sahf
xchg
int3
dec
xchg
fcoml
add
mov
mov
fninit
push
lea
ficoms
js
loope
add
stos
pop
inc
sahf
add
jg
cmp
sub
je
push
push
daa
push
cmc
shll
sbb
out
out
cli
aad
cmp
ret
cmp
sub
jne
dec
movsl
call
cs
loope
add
dec
sbb
jg
mov
iret
test
mov
xchg
xorb
je
clc
xchg
aaa
pop
outsb
mov
adc
jae
movsb
int3
add
xor
dec
outsb
into
int3
adcb
aad
scas
mov
inc
inc
lret
dec
inc
push
sahf
popa
push
dec
cli
stos
sbb
repnz
shrl
aam
divb
stos
out
push
pop
insb
in
pop
xchg
lret
test
add
dec
xor
pop
mov
mov
push
inc
out
leave
stos
fstpl
dec
cld
mov
cmc
mov
mov
jns
cmp
shl
xchg
aas
pop
pop
shrb
xlat
lret
out
push
mov
or
test
lret
fwait
aas
fisubs
aaa
pushf
push
rcl
inc
sub
lret
mov
mov
push
insb
jg
decb
jns
mov
sbb
das
leave
push
loopne
jle
enter
jle
mov
jns
shll
inc
dec
scas
adc
aam
mov
repnz
pushf
or
iret
dec
mov
cmp
lret
test
pop
fwait
ljmp
movsl
push
das
in
scas
push
repz
xor
add
mov
xchg
mov
call
inc
pushf
out
aas
roll
xchg
test
pop
push
lods
push
sbb
lahf
sahf
imul
fsubrl
out
shl
push
jg
pop
jne
inc
cmp
mov
pusha
or
xor
insl
aaa
mov
inc
xchg
add
cmp
std
ret
cmp
call
pop
and
dec
imul
call
mov
or
negb
and
pushf
movsl
ljmp
js
mov
leave
in
mov
dec
shr
and
mov
xor
repnz
cwtl
and
pop
sub
mov
push
xchg
cmp
out
hlt
adc
stc
add
mov
add
or
xchg
ds
sub
gs
mov
imul
mov
sbb
fistpl
jbe
mov
jecxz
icebp
lret
fcoms
mov
call
add
jae
adc
call
and
dec
xchg
fs
int3
mov
sub
lret
adc
scas
std
pusha
and
fildll
dec
in
outsl
xchg
lods
test
xor
or
aaa
xlat
jb
mov
fsubs
mov
and
out
mov
mov
jl
jns
lret
jmp
push
mov
and
lock
jl
cmp
repz
sbb
or
insl
add
fdivl
mov
mov
mov
and
xor
divb
cmc
test
mov
mov
into
gs
daa
mov
or
icebp
cltd
xlat
push
xchg
int
pcmpgtw
mov
in
scas
adc
cmc
xchg
xchg
and
add
inc
pusha
cli
lock
mov
das
mov
mov
mov
fwait
bound
fsubrs
or
pop
mov
mov
and
jno
insl
sub
dec
jae
nop
push
sub
xor
jmp
and
jae
das
gs
mov
leave
orl
pop
stc
aas
aaa
sbb
sbb
xlat
jecxz
jne
cmp
pop
lahf
dec
cmp
dec
out
add
jge
sub
mov
dec
mov
iret
jle
pop
in
jcxz
into
std
jnp
mov
ss
jecxz
xlat
test
ja
xor
or
mov
jecxz
or
cmp
dec
out
sub
xor
mov
adc
xchg
shlb
cli
fwait
test
pop
pop
repz
pop
inc
idiv
or
sbbl
insb
js
adc
xchg
cld
lods
jle
mov
adc
sbb
mov
fucom
es
mov
popa
mov
imul
sbb
add
movsb
adc
mov
movsb
inc
cmp
jle
adc
xchg
or
pop
mov
jno
dec
xor
inc
testb
popf
adc
mov
xor
lods
mov
test
lods
push
dec
test
add
ss
mov
stc
pop
adc
jle
push
in
xchg
mov
pop
cmp
lcall
pop
add
bound
jns
mov
movsl
decb
mov
xor
pop
sub
xor
cmc
pop
sahf
mov
mov
shll
add
sub
aas
inc
ds
mov
mov
test
fnstsw
mov
in
add
xlat
add
xchg
sbb
jnp
fnstenv
movb
mov
mov
xor
popa
mov
mov
mov
pop
jmp
rcll
adc
mov
mov
xor
andb
adc
or
imull
sti
jae
push
out
pop
movsl
jp
nop
push
ljmp
or
xor
cli
mov
sbb
stos
mov
jg
fidivl
mov
repnz
repnz
push
clc
xchg
push
pop
leave
shll
sub
dec
and
jbe
mov
loopne
std
inc
pusha
pop
mov
loop
daa
fcmovnb
imul
shll
jb
out
mov
inc
mov
int
insl
sub
and
dec
fisttpl
xor
js
test
movsl
in
in
xor
push
rcrb
mov
cmp
sbb
int
push
jmp
fistps
hlt
dec
mov
mov
jmp
pmaxsw
stc
jmp
adc
adc
fs
call
repz
mov
push
jae
and
xor
rcll
test
outsb
add
cli
popl
sbb
mov
cwtl
dec
lods
sahf
movsl
mov
push
and
xchg
out
je
fmuls
int3
repz
mov
jne
sbb
fistps
and
cs
cmp
mov
js
fsubl
aas
aad
pop
dec
std
mov
in
mov
jp
mov
push
mov
test
mov
pop
cwtl
loop
enter
clc
mov
add
fs
pusha
fistl
jl
ljmp
cmp
popf
aad
adcl
cld
or
mov
pop
inc
push
pop
push
mov
pushf
data16
ja
scas
or
jg
push
sar
movsl
les
dec
pusha
jo
sahf
mov
lret
in
pop
push
and
jle
iret
push
dec
insb
cmp
jo
clc
test
inc
sbb
scas
js
cmp
pop
sub
cmp
sub
stos
jno
gs
push
push
aas
stos
fcmove
fwait
arpl
aaa
inc
jno
rclb
loopne
fwait
pop
sbb
cmp
sbb
xchg
pop
fcom
fisubl
ret
cmc
shrl
shl
je
mov
mov
jge
mov
aad
sarl
mov
std
mov
mov
out
movsl
scas
mov
inc
popa
call
jp
and
add
add
adc
repz
scas
dec
rclb
add
imul
xchg
mov
fisttpl
inc
fisttps
cltd
jp
pusha
es
adcb
mov
jle
int3
mov
xchg
fcmovnbe
clc
inc
mov
add
inc
dec
dec
dec
imul
shll
cmp
inc
mov
out
in
mov
les
in
mov
jns
dec
mov
imul
fistl
test
jbe
add
lods
inc
cmpsb
lret
imul
mov
mov
ljmp
mov
xchg
xchg
lds
jmp
out
leave
mov
into
imul
mov
outsb
mov
fcomps
push
sbb
ret
xor
ja
test
or
mov
sahf
in
js
in
cli
inc
ljmp
sbb
adc
iret
insb
in
pop
sbb
les
mov
ja
pop
inc
push
jo
popf
inc
andl
pusha
pop
hlt
add
popf
sub
mov
imul
icebp
enter
sub
mov
fcmovne
mov
movsl
dec
inc
fwait
sarb
mov
sub
push
movsb
jnp
xchg
faddl
mov
dec
add
push
subl
add
add
cli
fsubr
push
mov
bound
ss
outsb
pop
or
and
and
pop
adc
lock
and
rcrb
pop
testb
ljmp
pop
push
fwait
push
or
out
adc
xchg
jmp
repnz
fistpl
aad
cmpb
add
pop
and
add
ss
ljmp
dec
mov
inc
hlt
shlb
aam
inc
stc
lret
xchg
xchg
lret
or
outsb
test
sub
add
jb
int
xorb
fnstsw
int3
sub
dec
inc
jnp
adcl
fildll
mov
sbb
dec
adc
divb
mov
mov
adc
out
lds
mov
lret
jecxz
movsb
ja
xor
push
inc
jmp
xor
adc
mov
call
sub
test
and
adc
roll
lods
idivb
cmpsb
add
movsb
arpl
addl
sub
or
xchg
mov
xor
push
cmp
mov
xlat
stc
and
xor
imul
xchg
xchg
fdivr
rol
or
sti
in
mov
mov
test
xchg
insb
dec
in
leave
aas
outsb
shrl
push
cmp
int3
or
inc
and
jns
notl
adc
mov
sbb
jb
jne
mov
imul
lret
cmp
cmpsb
int
add
xlat
in
into
xchg
jnp
out
cwtl
push
dec
adc
jg
mov
imul
into
xor
enter
stos
push
stos
jns
jbe
lcall
xchg
nop
push
mov
int
in
andl
sahf
cmp
jo
cli
xor
jb
sbb
mov
pop
push
fucomip
call
lret
out
out
pop
lock
mov
inc
mov
loop
xor
rcl
fdivs
mov
sbb
dec
std
push
fcmovnu
iret
push
adc
outsb
das
push
jno
sub
and
or
mov
dec
lret
in
fisubrs
leave
popa
mov
xor
lret
daa
cmp
lahf
xchg
sti
pusha
lods
popl
inc
adc
ljmp
jb
test
fistl
cmp
push
and
mov
inc
mov
and
pop
lahf
test
sbb
mov
hlt
adc
push
rcll
ret
pop
movsl
push
lret
rcrb
popf
std
pop
movsb
mov
xor
jb
mov
outsl
add
pcmpeqb
js
mov
in
scas
popa
inc
or
lock
pop
mov
push
and
repnz
dec
pop
pop
jne
xchg
popa
sub
pop
jmp
cmp
sbb
mov
push
outsb
clc
shlb
pop
mov
xor
jecxz
lds
pop
mov
add
stc
std
loope
lret
xchg
push
push
scas
outsb
lret
enter
dec
mov
rcrl
xlat
cmp
stos
sbb
xchg
bound
lea
jb
mov
lcall
dec
test
incl
shr
sub
outsb
ja
sbb
cmp
push
popf
and
xchg
mov
pusha
repnz
insl
push
fdivrp
sbb
xlat
cmc
repnz
in
mov
rorl
push
imul
jbe
js
jae
jnp
xchg
push
inc
cmp
incb
repz
notl
xchg
mov
out
adc
jecxz
jecxz
out
add
adc
push
adc
cmpsb
or
mov
or
xchg
fnsave
sbb
insl
adc
sarb
aad
add
lds
andb
xor
xor
loopne
dec
fwait
xchg
adc
cmp
adc
mov
jg
lcall
fwait
mov
sbb
arpl
shlb
pop
mov
inc
or
jecxz
dec
ja
pop
std
jmp
fs
mov
filds
jg
sbb
cmp
int3
cltd
fmulp
mov
shlb
pop
es
iret
xchg
or
sbb
push
nop
mov
ja
lods
xchg
push
bound
push
push
xor
add
sarl
stos
call
sbb
fisubrl
xor
addr16
in
push
cli
insl
cmp
arpl
into
scas
inc
inc
xchg
dec
scas
mov
das
dec
mov
jmp
ljmp
int3
in
repz
mul
mov
dec
xchg
mov
arpl
and
cmp
mov
dec
nop
call
outsb
pop
mov
stos
xor
mov
mov
stos
sub
mov
and
fdivl
mov
jb
test
mov
fwait
cmc
jno
jg
mov
dec
lods
add
out
mov
jge
jl
or
xchg
or
mov
sbb
and
cld
lcall
and
adc
into
jo
roll
dec
iret
and
add
xor
outsb
mov
test
out
dec
add
les
stos
mov
insb
cwtl
sahf
or
sub
pushf
xchg
nop
stos
and
cmpsl
and
sub
jo
test
add
jg
jmp
push
inc
pop
sarb
aas
cmc
les
mov
push
push
fcoms
pop
push
jp
adc
push
xchg
sbbl
pop
jb
aam
push
data16
xchg
rcrl
imul
mov
xchg
outsl
aaa
dec
imul
sar
in
loope
out
stos
jbe
popf
rorb
or
cwtl
dec
dec
mov
fcoml
cmp
xchg
inc
ficoml
mov
xchg
daa
lcall
xchg
sub
enter
or
aaa
std
outsl
jnp
add
sub
lret
fidivrl
ljmp
mov
mov
adc
push
nop
mov
or
out
pop
lcall
out
ret
mov
inc
mov
mov
jb
movsl
xor
pop
movsl
es
int
clc
mov
stc
cwtl
dec
add
out
nop
add
popa
xchg
adc
add
cmpsb
jb
sbb
dec
icebp
add
mov
or
adc
test
divb
pop
sub
test
jg
out
cmp
je
call
cmp
aad
xchg
xchg
lahf
mov
ret
dec
in
mov
into
idivb
adc
sub
loope
xchg
cld
xlat
mov
xor
pop
popa
cwtl
arpl
dec
adc
pop
cld
nop
in
cmp
std
sbb
add
mov
xlat
ljmp
adc
pop
pop
lahf
imull
pop
outsl
mov
test
ljmp
adc
sub
aad
and
cmp
xchg
cmpsb
insl
jp
in
and
jb
pop
pop
loopne
dec
mov
jno
cltd
mov
xchg
ret
adc
repnz
jae
sbb
arpl
adcl
cli
add
subl
xchg
and
jge
outsb
in
mov
xchg
je
arpl
jae
cmp
jns
hlt
inc
pop
js
insl
insl
loop
repz
pushf
scas
repnz
sub
cs
xor
add
cmp
sub
int3
hlt
mov
test
add
pop
sub
sub
aad
adc
imul
xchg
in
shl
push
addr16
mov
out
mov
in
mov
inc
std
xchg
dec
in
pusha
mov
fsubrl
aam
fisubs
loope
add
pop
scas
lcall
icebp
addb
in
dec
xchg
ffree
lds
sub
mov
enter
push
xchg
cltd
fcmovne
dec
in
imul
sbb
es
dec
out
xor
movsl
int
int
insl
fdivrs
pop
data16
sub
das
nop
arpl
add
inc
inc
jle
stc
in
sub
jp
xchg
lods
jo
repz
ss
mov
mov
cmp
cwtl
ficomps
and
sbbb
push
ss
mov
loope
imul
xchg
or
scas
stc
mov
fnstsw
aaa
and
les
jb
mov
in
scas
jae
sbbb
lret
push
hlt
inc
jno
mov
push
sti
mov
push
inc
je
and
mov
inc
rcrl
sbb
mov
mov
jg
mov
jns
int3
dec
leave
inc
add
adc
fsub
push
insb
ljmp
mov
xor
xor
shrl
js
xchg
icebp
scas
mov
lock
xor
js
enter
jecxz
sar
outsb
cmp
dec
int3
and
mov
sub
fnstcw
cwtl
inc
sub
adc
sub
arpl
inc
les
sahf
flds
cmp
add
std
push
or
mov
dec
mov
mov
orb
mov
int3
add
xchg
pop
sbb
xchg
div
add
pop
fwait
mov
bound
insb
or
jne
sbb
dec
fiaddl
mov
pop
xor
inc
jge
jmp
jge
inc
ja
data16
xchg
mov
and
push
mov
push
pop
mov
mov
cmp
aam
stos
push
adc
or
push
cld
mov
outsl
push
out
insl
std
rcr
cmc
jg
add
sbb
inc
fsubrl
fisubl
addr16
gs
xchg
in
div
dec
push
push
rcrb
jne
mov
imul
lods
pop
mov
mov
cwtl
add
out
stc
or
sub
jae
das
test
mov
dec
jne
in
xor
pop
lods
mov
add
mov
or
xlat
push
push
cs
fimuls
or
mov
inc
mov
loop
mov
push
inc
pop
jecxz
inc
in
gs
add
jns
cmpsl
loope
jle
rclb
xchg
mov
test
fnsave
rclb
adc
jo
dec
aas
clc
frstor
int
je
enter
pop
loop
popf
sbb
push
stc
dec
jo
sub
dec
push
loope
in
mov
xor
inc
fnstenv
push
fld
ljmp
int
mov
outsb
push
lds
dec
xchg
sarl
in
sar
adc
sub
dec
test
lea
adc
in
filds
les
cmp
sub
xor
or
test
fcmovnb
jecxz
pop
jg
lods
mov
mov
loop
sub
sub
pop
bound
or
pop
mov
mov
fst
arpl
jp
lock
mov
cmpsl
pop
or
rolb
inc
push
cwtl
dec
lcall
popa
lret
xchg
mov
inc
outsl
repz
fldt
pushf
mov
pop
es
push
mov
test
xchg
jb
loope
dec
or
mov
mov
dec
insl
jns
data16
xor
cmpsl
shlb
jg
xor
push
jp
xor
pop
aas
push
int3
in
adc
out
aad
andl
mov
popf
lahf
xorl
jne
je
and
cmpsb
push
cmp
jl
xor
mov
lock
imul
in
pop
insb
ret
cmp
test
test
inc
mov
push
test
inc
les
and
mov
insb
test
mov
push
jno
jae
xor
test
mov
xlat
inc
push
inc
jge
fstpl
jecxz
xchg
stos
loopne
adc
jecxz
pop
lds
scas
jl
mov
test
andb
jne
mov
pop
sti
lret
xchg
dec
movsl
pop
mov
pop
jl
mov
in
int
fwait
xor
sti
xchg
pop
inc
data16
test
push
and
mov
adc
sbb
adc
or
fildl
sbb
adc
aad
push
sti
movsl
mov
testb
fs
or
jmp
mov
dec
lea
cmp
jb
dec
frstor
push
mov
push
mov
xor
cmp
mov
jno
xchg
test
arpl
or
sub
stos
add
pop
push
mov
repnz
or
add
jae
mov
push
cli
mov
in
dec
cs
xchg
inc
push
sbb
aas
add
jbe
jne
add
clc
cmp
lods
push
lret
insb
out
and
test
movsb
xchg
outsl
dec
ss
icebp
pop
mov
dec
lret
or
mov
push
lret
inc
fiaddl
lcall
cmp
in
dec
iret
notl
adc
test
negl
popa
dec
mov
sub
inc
xchg
jg
cmp
sbb
mov
cmpsl
lret
bound
iret
push
push
clc
push
stos
inc
insb
pop
fisubl
or
and
inc
mov
lock
mov
lds
jbe
lcall
jbe
sbb
and
push
cltd
jnp
pop
je
inc
inc
and
or
sub
pop
pop
cmpsb
cmp
das
cmp
fidivrl
std
and
mov
outsb
mov
daa
cli
mov
das
mov
movsb
loopne
push
adc
movsb
and
pop
inc
fidivl
adc
nop
shl
inc
out
pop
and
adc
jmp
leave
jg
ss
mov
jns
cmp
inc
add
mov
cmp
adc
ja
jo
jo
mov
test
orb
mov
adc
mov
xor
addl
xchg
test
sbb
fidivl
into
dec
cmp
jae
fsubr
add
push
push
jnp
jecxz
fisubl
push
jge
pop
or
mov
fimuls
int3
and
and
aas
aad
dec
aam
push
jno
es
xchg
sbb
jge
xchg
pop
iret
shll
xchg
pop
push
stos
orb
popf
add
mov
add
sbb
push
mov
or
je
aas
push
sbb
pop
outsb
cmp
sbb
inc
jae
inc
cli
lahf
jl
cmpb
lods
movsl
pop
leave
lods
xor
inc
inc
iret
fwait
mov
rcll
daa
jns
xor
jno
jo
add
mov
push
and
push
and
fs
sbb
ds
and
xor
jb
jecxz
ja
or
add
rolb
mov
popa
in
xor
pop
push
stos
inc
daa
in
fsubl
adc
sbb
out
adc
ret
inc
das
inc
pop
inc
inc
push
es
mov
push
addr16
or
ss
adc
repz
adc
ja
mov
jnp
cmc
mov
xor
insl
test
or
mov
xorl
imul
leave
fcompl
pop
fnstcw
out
stc
mov
push
cmpsl
dec
cmpsb
js
insb
add
loopne
les
pop
cmc
pop
repnz
cmp
mov
mov
movsl
gs
push
sarb
arpl
lods
insb
push
fsubs
es
xlat
and
sbb
mov
addr16
sbb
lretw
xchg
mov
mov
mov
in
sub
sub
fiadds
ja
orl
mov
mov
cmp
xor
add
mov
loope
dec
pop
xlat
jno
adc
mov
dec
les
nop
dec
push
leave
fmul
sub
aas
jnp
mov
pop
sahf
dec
push
inc
or
sub
cmp
push
gs
lahf
sbb
adc
xchg
les
std
imul
roll
mov
enter
cmp
pop
push
movsb
mov
xchg
mov
dec
repz
push
lea
or
jnp
sub
sub
push
dec
repz
out
sub
nop
adc
enter
outsl
cld
pusha
xor
xor
sbb
in
or
leave
lcall
cmpsb
mov
fsubs
adc
push
mov
frstor
jp
std
out
jbe
and
repnz
and
cmpxchg
xchg
push
repnz
mov
dec
aas
mov
insl
sub
pop
lahf
add
sub
add
testw
bound
aaa
and
mov
jmp
push
ja
jge
ja
cmp
mov
js
aad
jb
and
out
inc
lods
test
cmp
sti
arpl
push
sysexit
mov
cmp
mov
sbb
ficoml
scas
jecxz
pop
pushf
mov
pushf
out
mov
imul
xchg
lods
cltd
jo
xorb
in
jmp
mov
and
lea
scas
enter
scas
and
dec
mov
mov
in
pop
cmp
inc
dec
add
and
sahf
push
out
lea
fs
shl
push
mov
sub
xor
xlat
fdivrl
cld
xchg
jno
fldenv
push
out
stc
outsb
and
setge
repz
bound
pop
and
lods
sbb
sbb
roll
in
mov
int3
inc
push
mov
mov
mov
rcrl
cmp
fsts
xchg
xchg
orl
mov
dec
or
aaa
jmp
fnstsw
dec
push
sub
dec
dec
lret
cmpsb
jbe
jae
das
or
std
add
push
sbb
in
pushw
xchg
jne
dec
cmpl
mov
addr16
adc
dec
lods
sub
push
cmp
ret
cmp
inc
mov
in
mov
les
sbb
lods
scas
push
pop
and
rorl
sub
cmp
lock
xchg
or
cmpsl
adc
pop
adc
pop
inc
xor
jmp
pop
sarb
fcompl
loopne
inc
xchg
ljmp
adc
in
push
jns
add
xchg
sbb
and
in
stos
rcl
lret
scas
push
clc
lret
dec
inc
jns
xor
mov
leave
xorb
adc
rcrb
and
mov
lods
bound
jmp
sub
into
mov
jno
lcall
push
arpl
mov
jg
imul
ds
push
mov
xor
adc
cmp
jle
mov
dec
into
lea
mov
dec
jb
xchg
jge
dec
in
mov
push
in
rclb
aas
sub
leave
inc
mov
shlb
outsl
into
xchg
jge
pusha
notl
pop
add
jbe
ja
cmp
icebp
hlt
sbb
cmpsl
and
mov
rcl
ret
mov
pop
cld
sub
sub
stos
out
xchg
aas
aas
mov
add
pop
jo
and
push
ds
in
cmc
adc
mov
call
jno
xor
out
mov
fnstenv
mov
inc
jns
add
fldcw
add
outsb
sub
mov
xchg
fldenv
xor
push
clc
xchg
je
jl
add
clc
jge
in
add
std
out
push
jle
cmp
mov
xorb
sub
cmpsb
mov
push
daa
add
mov
gs
sbb
sbb
sbb
jne
add
call
sub
or
sub
insb
xor
js
stos
xor
and
xchg
call
sbb
fs
and
xor
xchg
mov
jns
pop
inc
call
imul
mov
add
jg
dec
adc
pop
jbe
out
push
loopne
jge
mov
ds
aad
cmp
insl
mov
add
xchg
mov
dec
mov
cmp
enter
cmc
pop
rcr
push
push
fcmovu
das
imul
gs
fcomps
jle
xchg
inc
test
lds
and
mov
or
leave
ror
dec
sbb
sbb
jae
cld
daa
jae
push
or
pusha
mov
dec
cmpsb
sbb
inc
test
daa
fs
in
dec
lret
xor
fimull
sbbb
push
push
pop
sbb
in
in
lods
inc
xor
sub
mov
sbb
adc
push
xlat
cmc
scas
gs
cmp
cmp
or
add
in
out
insl
pop
mov
fiaddl
adc
xchg
mov
lods
mov
adc
and
in
or
mov
sbb
pop
mov
ret
insl
inc
adc
adc
pop
adc
test
ja
shrl
dec
cmp
outsb
cmp
pop
push
pop
xor
arpl
outsb
ja
dec
cld
xchg
leave
gs
xlat
int3
adc
pop
and
gs
add
and
jb
je
jo
pushf
es
push
cmp
cmpsl
sbb
fbstp
pop
push
out
xchg
jl
xchg
aaa
fnstcw
mov
and
or
cmp
cld
or
fs
and
test
adc
mov
jnp
idivl
sub
jmp
pop
or
enter
xor
pop
ret
xor
popa
xor
scas
subl
arpl
insl
fnstsw
test
mov
pop
and
pop
push
shll
adc
into
push
cmp
aas
ret
scas
add
sbbb
lock
iret
push
scas
sbb
jnp
pop
cli
scas
fnstcw
int3
fisubrs
mov
push
arpl
int3
mov
outsb
sub
mov
add
mov
es
scas
and
ret
mov
adc
dec
and
sbb
arpl
ret
cmp
pop
daa
mov
mov
test
jg
sub
sti
push
sahf
in
outsl
fidivs
sub
scas
lea
hlt
mov
subl
jl
mov
cli
cli
mov
push
pop
lret
imul
ds
ror
push
sbb
movsl
jno
inc
mov
inc
xchg
sub
mov
mov
mov
dec
je
cmp
fldl
sbb
clc
int
gs
add
fs
icebp
ret
mov
pop
and
adc
test
mov
insb
repz
adc
lods
sub
xchg
fdivr
lret
fnsave
add
dec
or
sub
sahf
sarb
mov
pop
pop
fildl
adc
and
cmc
in
inc
rcrl
jle
rcrl
lods
xor
pop
rcrb
mov
addb
in
repz
and
pusha
xlat
sti
cmp
dec
xlat
jae
adc
bound
cs
sbb
repz
xchg
sarl
or
push
cmp
xchg
addl
fwait
push
inc
sbb
pop
out
and
leave
mov
cmp
faddl
adcb
jae
sbb
pop
pushf
ljmp
mov
cltd
push
shll
and
xchg
and
mov
mov
fcoml
xor
jmp
shlb
popa
jnp
ja
xchg
je
rol
pop
lret
push
xchg
push
fsubrs
xchg
mov
sarb
mov
aaa
mov
lods
jbe
and
pop
dec
sub
xor
pop
mov
std
mov
jl
fldcw
imul
rcl
push
xchg
and
fiadds
add
jns
aas
out
fwait
lret
loop
mov
lock
dec
leave
add
mov
mov
scas
fcomps
cmp
outsb
xor
aad
xorl
int
pop
bound
push
cmc
lret
lods
scas
mov
xchg
fsubl
mov
leave
jl
xchg
fdivl
aas
ljmp
add
loope
in
pop
pop
or
daa
out
filds
xchg
test
push
movsl
mov
sub
insb
mov
jge
loope
pop
and
inc
lods
lds
cmp
push
push
pop
lret
sbb
cmpsl
cmp
xchg
push
mov
jmp
aam
inc
dec
scas
jns
pop
fwait
inc
mov
daa
pop
iret
add
mov
inc
jbe
sub
fmul
adc
sub
std
in
out
popa
and
push
mov
fs
xchg
popf
aad
jmp
cmpsl
sbb
sub
xor
jo
notl
roll
xlat
jge
mov
mov
or
outsb
call
push
lea
lods
aas
pop
inc
jmp
daa
pop
out
bnd
fucom
call
sbb
leave
outsl
mov
pop
jg
push
addl
out
gs
aaa
int3
movsb
ds
cmc
pop
mov
push
lock
sbb
loopne
xchg
jl
lahf
leave
daa
lock
push
add
sbb
push
mov
cmpsb
movsb
or
testb
mov
prefetch
or
or
push
gs
pop
add
ret
mov
jbe
xchg
sub
repz
jg
dec
or
fwait
out
inc
scas
out
push
pusha
or
test
mov
adcl
jno
push
fnstcw
xchg
subl
push
popf
lret
loop
dec
dec
mov
fisttpl
lret
fistps
fwait
movsl
mov
inc
cs
cmpl
jmp
shll
jo
sti
cmc
loope
dec
dec
sbb
push
mov
mov
inc
aam
jo
cli
mov
mov
movsb
cmp
mov
sbb
cmpsl
test
pop
orl
leave
xor
mov
arpl
movsb
in
fwait
test
cmp
aaa
daa
sbb
rcr
sub
aad
pop
mov
lcall
dec
inc
push
or
fsubp
sar
sub
ja
mov
mov
imul
push
ds
xlat
inc
gs
xchg
mov
cmp
iret
add
das
sbb
mov
cltd
add
mov
hlt
stc
call
es
aad
mov
mov
andb
push
repnz
sub
xchg
addr16
loop
ret
mov
and
mov
mov
dec
add
adc
jo
mov
and
stc
cwtl
or
sub
jmp
sbb
jg
xor
pop
ljmp
jae
jno
in
call
test
addr16
or
cmp
sbb
lds
cld
shr
sub
pop
and
dec
subb
xchg
lods
sub
inc
push
mov
xor
adc
or
int
xchg
pop
mov
and
pop
shll
in
jecxz
pop
stc
fdiv
pop
mov
negb
dec
repz
fwait
repz
mov
jl
nop
in
xchg
daa
inc
sub
mov
mov
aas
or
sahf
sbb
and
rol
mov
out
mov
jecxz
ds
mulb
stos
mov
mov
mov
idivl
icebp
enter
jne
shll
test
jns
dec
popf
jge
lock
xchg
mov
dec
movsb
cmpl
mov
pop
adc
or
int
push
lock
shlb
jecxz
shl
mov
loop
xor
and
dec
jg
dec
sbb
mov
in
jge
or
fbld
xchg
enter
cld
pop
stos
bnd
and
aam
sbb
and
mov
mov
cmp
pop
hlt
in
xchg
icebp
add
pushl
add
popf
iret
adc
imul
fldt
sub
pop
sbb
fldl
mov
scas
mov
push
cmpsb
pushf
cmc
pusha
daa
pop
imul
cmp
loopne
jo
adc
push
mov
mov
insl
push
dec
imul
movsl
push
ret
cmp
add
xor
data16
dec
adc
lahf
loop
test
pop
in
filds
jnp
cld
nop
lcall
loopne
test
stos
insl
adc
lods
outsl
pop
xor
fwait
or
add
gs
adc
pop
popf
adc
cltd
fucom
jns
mov
mov
rcrb
stc
test
js
push
jae
dec
es
call
sub
dec
add
xchg
adc
cs
pop
push
int3
lea
fcmovbe
leave
cli
xchg
popf
mov
mov
inc
imul
adc
aam
mov
push
repz
es
inc
xor
pop
test
in
adc
xchg
pop
pop
jae
dec
mov
mov
jp
jg
cmpsl
aam
add
ret
jmp
inc
and
pop
inc
jl
decl
dec
sahf
xor
int3
mov
inc
xchg
xor
or
lret
xor
shrl
mov
dec
stos
es
sbb
sti
std
sub
in
xchg
aam
pop
iret
and
jno
and
cmp
mov
sbb
addr16
sub
popf
lret
stos
cmp
inc
add
push
xor
in
and
xchg
fstps
dec
in
mov
aaa
mov
and
sarl
dec
imul
push
lret
sub
ss
scas
xor
sub
jae
pop
add
mov
insb
xlat
dec
dec
fs
aam
movsb
or
mov
pop
mov
sbb
xchg
bnd
or
push
arpl
mov
fwait
cmpsb
shlb
cmp
and
mov
add
ljmp
mov
push
add
sbb
or
popa
sub
mov
stos
lock
add
xchg
iret
inc
insl
mov
mov
clc
ret
cmpsb
pop
jbe
aas
jne
sbb
jae
push
or
jge
cmp
fisttpl
pop
sbb
jp
cwtl
mov
xchg
adc
insl
push
div
sbb
lcall
cmpsb
clc
insb
or
pop
test
aaa
negb
ret
rolb
in
sub
aas
and
rcl
ds
xor
xchg
sarb
cs
jo
jle
inc
outsl
scas
xchg
pushf
push
mov
iret
orl
hlt
in
xchg
pop
lods
inc
adc
in
andb
mov
rcll
fdiv
clc
pop
xor
mov
dec
sbb
lods
lods
repnz
sub
js
or
and
dec
add
and
ds
push
push
pushf
cmp
sub
sbb
and
and
repnz
sti
mov
jecxz
jae
lahf
mov
inc
mov
pop
movsb
sarl
repnz
dec
mov
cmpsb
out
add
adc
cmp
mov
adc
add
fdivs
and
add
mov
fdivrs
push
leave
sub
std
rcll
in
cmp
outsb
sahf
jle
ds
test
jo
in
adc
push
mov
cld
mov
cmp
pop
cmpps
in
ja
xor
mov
shll
mov
mov
and
shr
loop
and
mov
or
lahf
cmp
cmc
arpl
dec
push
xor
ljmp
shrb
adc
dec
hlt
test
mov
jnp
scas
xor
mov
rclb
or
push
test
cmp
or
adc
and
in
int3
dec
or
movsb
fldl
adc
sub
rcrb
add
aas
lods
cld
loopne
push
shl
mov
mov
out
cmp
xlat
dec
pop
xchg
lahf
lds
mov
mov
xchg
arpl
inc
adc
bound
push
push
rolb
mov
pop
and
inc
adc
jge
jecxz
xlat
cmpsl
or
stc
fwait
or
dec
mov
sbb
mov
imull
push
dec
out
dec
lods
outsl
cltd
das
fsts
pop
popa
jae
dec
sub
pop
mov
cld
lock
fisttpll
push
xor
xchg
lret
stos
fistpll
dec
inc
ds
mov
or
xor
dec
lds
sbb
dec
ret
cltd
inc
cmpsb
lods
rorb
fwait
insb
scas
xor
fldl
cmp
out
pop
ret
push
mov
or
out
mov
out
xchg
dec
add
and
into
outsl
leave
test
cltd
pop
add
hlt
call
or
mov
pop
push
add
jb
mov
jae
inc
push
xor
fisubrl
popf
mov
jge
aas
fucomp
push
pop
lahf
add
mov
mov
scas
dec
fdivl
mov
sub
es
mov
dec
loop
adc
adc
mov
cmp
cmc
pop
mov
imul
cld
outsb
cmpsl
insb
mov
dec
xchg
add
stos
in
xchg
fstpl
subl
mov
rcll
cld
add
push
inc
dec
push
or
mov
out
pop
daa
sbb
dec
fmuls
mov
pushf
xor
sahf
and
shl
inc
lahf
mov
mov
pop
xlat
lea
aas
leave
jae
fildl
cmp
ljmp
mov
shlb
sbb
push
lea
cmpl
mov
xor
cmp
iret
dec
cmp
push
xor
call
xor
mov
ja
cmc
daa
pinsrw
cmp
inc
jbe
in
je
xchg
lret
loop
movsb
int
test
inc
pop
lock
jne
mov
les
mov
xchg
cmpsb
lret
adc
in
icebp
cmp
icebp
adc
push
or
adc
les
jmp
mov
mov
insb
into
and
mov
out
data16
hlt
push
mov
psrad
rorb
cltd
sbb
test
xchg
idivb
pop
inc
arpl
push
cmp
inc
xor
sub
jbe
das
jmp
scas
and
imul
xchg
sbb
xor
rorl
sbb
js
sbb
mov
adc
sbb
cmpsl
jecxz
sub
testb
and
cltd
xor
jb
les
xchg
pop
xor
lock
cmpsl
fdivrl
scas
xchg
std
ds
xchg
dec
lea
stos
stos
cmp
cmpsl
or
push
mov
fisubrl
repz
into
xor
mov
mov
xorl
sub
test
in
imul
inc
jne
fcoms
dec
add
inc
xor
mov
or
std
movsl
fidivl
push
cwtl
lea
and
bound
insb
inc
clc
xchg
mov
test
insb
fimuls
inc
test
leave
rclb
ret
fstl
cmp
mov
seto
sbb
pop
and
adc
int
mov
aas
xchg
ss
lods
and
inc
es
jg
andl
lahf
sub
data16
push
push
mov
ret
inc
pop
aad
mov
cmp
ds
xor
std
mov
adc
ret
data16
dec
and
dec
loope
adc
jp
inc
sti
fldt
addr16
out
xchg
push
stos
push
out
inc
jne
sbb
aaa
sbb
mov
adcb
mov
lahf
enter
push
cmp
ret
imul
add
shr
fwait
dec
mov
mov
adcl
mov
decb
enter
sub
sub
mov
lcall
mov
cld
cmp
out
inc
shlb
cwtl
insb
dec
arpl
loopne
and
adc
lea
mov
push
jp
jae
ljmp
sbb
imul
jno
popf
mov
jl
mov
mov
cmp
sub
cli
pop
xchg
int
sub
icebp
inc
mov
pop
lds
jecxz
ss
aad
mov
dec
stc
fwait
das
mov
fwait
sbb
data16
test
negb
pop
push
lock
stos
cmpsb
scas
sub
insl
xor
mov
dec
xchg
aaa
addb
cmpsb
les
in
out
fidivs
out
sub
pop
out
mov
ljmp
adc
aad
addl
stc
pushf
cmp
mov
and
and
or
scas
lret
fwait
cmp
inc
fimull
rcrl
xchg
cmc
out
test
mov
int
mov
loope
push
xchg
push
je
into
rcr
ret
fistps
lret
add
rcrb
out
push
aaa
scas
inc
fists
jle
cld
sbb
cmp
nop
into
out
mov
lea
cld
mov
inc
in
inc
ret
lcall
movsb
cmpsl
jnp
repz
mov
adc
sub
call
mov
stc
ret
xchg
pushf
aaa
in
shrl
push
pop
mov
das
xchg
mov
js
lret
add
frstor
cmp
sbb
in
int3
out
pop
push
cli
and
add
enter
frstor
cmp
mov
mov
xor
pop
sbb
ds
scas
stos
cmp
fcoml
gs
cld
daa
push
cltd
mov
jmp
mov
xchg
sbbb
mov
mov
test
or
push
push
dec
pop
inc
test
mov
bound
push
decl
inc
pop
and
mov
cmpsb
cmpsb
jae
cmp
jne
arpl
or
add
and
popf
xlat
scas
sbb
xchg
mov
add
jnp
push
sbb
test
and
aas
sbb
test
in
push
shlb
inc
sbb
xor
les
shll
push
std
insb
ljmp
sbb
cmc
pop
push
lea
or
rcl
in
stos
stc
sbb
or
es
addr16
lods
bound
je
dec
sbb
int
and
push
lahf
insb
or
popf
mov
push
loope
xchg
addr16
repz
and
or
std
and
pop
or
fimull
lcall
das
movsb
push
in
clc
jecxz
cmp
nop
out
rcrb
ljmp
xor
mov
fmul
test
mov
sub
movl
push
and
push
push
jns
popa
lock
push
scas
dec
fdivs
add
mov
test
aas
bnd
push
test
daa
xor
mov
xchg
inc
push
fiadds
pop
cmp
leave
inc
ss
aad
sub
cmp
ret
arpl
daa
mov
mov
dec
call
jmp
repnz
loop
jno
rol
stc
les
subl
les
insl
xchg
in
add
jo
pop
adcb
push
xor
lret
and
in
lret
add
movsl
push
fmul
loope
fsubrs
fcmovnbe
mov
stos
push
aad
sti
pop
icebp
add
jb
cmp
fidivs
add
outsb
xchg
jo
rcrl
dec
push
sub
sar
sub
cmp
iret
repnz
jno
push
lret
insl
xchg
or
out
loope
es
icebp
mov
or
mov
xlat
mov
and
adc
je
imul
and
add
pop
add
or
out
jbe
push
lods
rorl
ss
je
push
ret
cmp
jb
pusha
clc
pop
jno
xchg
int
stos
in
and
xchg
loopne
xchg
mov
jecxz
xor
cld
fs
mov
jbe
cmp
mov
mov
mov
jo
cli
fmulp
sbb
add
mov
inc
mov
cli
sbb
sbb
sbb
push
dec
mov
xor
popa
sub
inc
xchg
dec
cltd
inc
inc
pusha
adc
mov
inc
pop
mov
pop
out
rorl
pop
leave
outsb
les
adc
xchg
out
jle
cld
imul
icebp
sub
js
mov
test
in
xchg
jne
test
xlat
arpl
sbb
lods
das
in
out
jo
cmp
fnsave
orl
jecxz
out
lea
ss
or
inc
dec
sbb
push
cmpsl
shrl
and
pusha
sbb
out
insl
push
icebp
push
add
add
lret
into
rclb
mov
mov
mov
scas
inc
xor
lods
sub
scas
xchg
mov
in
xchg
out
adc
lahf
pusha
sub
lock
or
mul
inc
lcall
pop
gs
or
mov
test
dec
pop
xor
data16
cmp
enter
pop
dec
cli
adc
pop
mov
jle
mov
add
mov
aas
sbb
jp
sbb
push
inc
rclb
mov
pop
push
inc
fsubrs
fwait
cmc
xchg
cli
xor
sarl
in
cmpsl
xchg
sbb
or
inc
push
clc
xor
ja
mov
bound
test
mov
loopne
jne
inc
add
call
mov
mov
lds
xchg
and
sbb
dec
adc
gs
mov
push
sbb
into
pop
pop
mov
aad
pop
cmc
adc
mov
in
orb
das
pushf
pop
loop
lret
test
xchg
addr16
sub
sub
pusha
cmpb
inc
push
lds
cmp
dec
jno
je
pushf
mov
inc
ss
insl
or
and
cmp
in
fmull
mov
pop
jg
outsb
jp
mov
orl
rorb
jbe
scas
xor
ja
cmc
xchg
les
into
out
cmp
imul
out
clc
mov
movsb
bound
push
push
mov
iret
xchg
addr16
cmp
sbb
xchg
mov
cmc
inc
jmp
std
cmc
push
mov
cmp
gs
ja
xor
lret
xchg
mov
ffreep
cmpsl
rol
shr
popa
adc
sarb
dec
lock
sahf
sbb
mov
std
mov
je
ret
in
sbb
pop
push
cmpl
stos
std
rolb
add
scas
adc
mov
or
lods
shll
pusha
xlat
inc
rorb
push
addr16
rcll
and
cli
add
cli
mov
mov
pop
clc
xor
push
jge
mov
xchg
mov
inc
mov
ds
cmp
dec
leave
inc
popa
stc
mov
cmp
jle
cmpsl
stc
mov
push
adc
shrl
and
pop
sbb
pop
inc
hlt
fwait
aam
or
pop
cld
pop
push
sub
lods
das
mov
sbb
mov
and
xor
ss
and
dec
sarl
leave
std
test
sbb
xchg
test
inc
jo
mov
bound
loop
popf
ss
stos
adc
or
and
adc
fsubrs
aas
out
ds
outsb
xchg
hlt
xchg
mov
cmp
inc
cs
fidivrs
inc
mov
mov
mov
xlat
sbb
push
cltd
outsl
inc
dec
cltd
popf
imul
js
lods
arpl
jb
sti
adc
jge
stc
jge
xchg
jmp
sbb
sbb
dec
and
outsl
xchg
and
aaa
in
rcrb
mov
aaa
xor
icebp
adc
jp
push
cmp
pop
int3
and
mov
pop
sbb
sub
pop
pop
das
fsubl
push
rorl
cltd
fiaddl
xchg
jl
jp
pop
sbbl
imul
lret
stc
inc
test
int3
or
sub
ljmp
mov
pop
out
out
call
lods
mov
gs
add
or
xchg
push
imul
mov
cvtpi2ps
jmp
aas
hlt
lds
mov
insl
fwait
in
adc
addr16
hlt
ret
out
movd
stos
lods
jg
mov
test
xchg
jnp
loope
rcll
push
icebp
les
dec
sbb
je
jae
xchg
cmp
mov
xlat
ss
pop
stc
clc
mov
jae
cltd
and
mov
mov
sbb
mov
outsb
into
es
fisttpl
dec
ret
imulb
jmp
mov
rcrb
jae
lods
test
shr
cmpsb
sub
incb
lods
leave
jmp
mov
sbb
movsb
fisubs
cmpsb
cmc
testl
xor
inc
cmc
pop
mov
push
mov
stc
enter
leave
jnp
ret
mov
jnp
inc
shll
mov
mov
int3
push
mov
rclb
mov
mov
movsl
and
adc
or
out
popf
bound
jno
dec
xlat
imul
push
and
xor
sub
and
pop
inc
sub
push
cli
call
shl
mov
dec
call
cmpsl
pop
push
sbb
jne
add
jbe
fnop
sti
and
dec
jp
in
test
dec
repz
sbb
mov
loope
pop
in
mov
mov
mov
ffreep
mov
mov
cmp
or
pop
inc
test
test
push
fidivs
push
xor
jae
sub
subl
mov
pushf
and
pop
pop
cmc
xor
in
jnp
jo
out
js
push
adc
fdiv
ret
in
jl
add
call
shll
pop
jo
and
scas
sbb
cs
adcl
lock
outsl
ds
popf
out
pop
and
je
push
xor
lret
xlat
xchg
movsb
pop
icebp
lock
and
jo
into
lcall
xchg
adc
mov
pushf
inc
inc
outsl
inc
jle
push
repnz
sahf
mov
fcoml
nop
cld
outsl
pop
xchg
add
and
adc
mov
call
inc
sbb
mov
aas
mov
test
fnstenv
dec
push
ficompl
sub
lds
sbb
mov
ds
sbb
jbe
negb
shrb
notb
sbb
inc
inc
pop
adc
push
jecxz
inc
dec
repz
sbb
mov
int3
and
cmovno
fisttps
pop
inc
sbb
adc
mov
xor
enter
xchg
outsb
inc
int3
inc
dec
jb
es
add
test
iret
inc
popf
fadd
jge
aam
fdivs
iret
mov
add
es
dec
mov
inc
jge
cmc
push
inc
movl
sub
fstps
push
lret
cmp
mov
xchg
pop
jg
pop
je
push
jge
popa
xor
ds
enter
stos
mov
and
jmp
fsubs
gs
pop
out
std
mov
aaa
pop
jne
repnz
push
mov
mov
lret
xchg
xlat
aaa
xchg
roll
pop
mov
jno
sub
adc
lret
es
inc
jb
shlb
xchg
dec
sub
fstl
xchg
out
aas
or
jge
push
scas
and
lcall
pop
outsl
sti
test
mov
in
dec
mov
mov
inc
xor
daa
pop
arpl
mov
insb
push
xor
sbb
xchg
pop
gs
and
and
cs
sub
push
lahf
push
and
ja
cmpsb
ljmp
push
jno
xlat
insb
fsts
jae
sbb
xchg
xchg
fcomi
sbb
pop
jmp
jae
fidivrs
mov
and
jecxz
or
fildl
nop
cmp
aam
out
stos
and
pusha
xlat
mov
mov
push
seto
or
aas
icebp
mov
fsubs
addr16
lods
mov
std
push
outsl
push
push
push
out
adc
mov
mov
mov
push
inc
or
lock
jl
mov
in
mov
outsb
inc
jo
mov
jmp
jp
pop
jo
mov
jbe
fdivl
call
dec
rcrb
add
mov
mov
aad
addr16
cmc
cwtl
cwtl
mov
lahf
adc
loope
push
and
jb
lods
push
rcll
popf
roll
mov
lock
xlat
pop
lea
pop
mov
xor
rcrb
xor
sub
test
and
pop
xchg
ss
push
es
into
jbe
xor
pushf
loope
sbbl
jno
std
or
loopne
jmp
out
mov
stos
add
sbb
negb
xor
arpl
pop
jmp
scas
xor
push
fisubrs
fcmovb
push
call
stos
cmp
fwait
mov
cs
push
das
add
int
dec
icebp
mov
adc
adc
insl
jge
and
fldcw
hlt
mov
jle
mov
mov
cmp
pusha
pop
es
lods
aaa
loopne
cltd
mov
adc
pushf
data16
mov
enter
test
cmp
out
dec
and
in
dec
aas
pusha
lock
out
clc
mov
jp
cmp
mov
mov
and
ret
mov
jge
inc
rolb
push
and
movsl
aas
pop
xchg
inc
int3
inc
call
push
lret
mov
sub
push
push
mov
push
push
xor
sbb
lea
cli
push
out
orl
adc
jns
dec
shl
and
pusha
in
push
mov
ja
enter
sti
xchg
pop
jp
stos
ret
dec
jl
jp
loope
jbe
fs
and
push
adc
xorps
sub
dec
mov
int
dec
out
mov
popl
mov
ret
dec
jg
loope
cmp
and
sbb
ret
mov
jecxz
fdivr
pop
in
xlat
stos
sti
pop
jo
movsl
roll
icebp
adc
les
xor
push
xchg
movsl
shl
cwtl
mov
ljmp
xchg
shrb
mov
cmp
popf
fistps
pmaxub
jno
or
push
inc
jns
inc
fdivs
lret
sbb
dec
je
mov
mov
stos
jne
sbb
inc
push
push
roll
fistpl
mov
pushf
inc
jo
scas
jbe
fabs
mov
jge
jl
jg
cltd
mov
insb
inc
out
jne
stos
cmp
faddl
push
and
ret
adc
sbb
aas
cmpsl
jmp
test
ss
sub
mov
sti
int
mov
mov
cmp
pop
jge
mov
in
nop
stos
jb
int3
adc
imul
ficoml
sub
iret
sub
xchg
mov
xor
dec
call
push
daa
in
mov
and
push
adc
add
mov
test
popf
shr
adc
mov
cmp
adc
mov
sub
je
mov
mov
out
jl
push
sbbl
sub
or
fstpt
push
mov
mov
or
call
mov
mov
mov
pop
cmp
or
pushf
pop
hlt
std
push
ret
mov
test
lahf
ret
shlb
jecxz
repz
and
fidivl
shlb
mov
xchg
dec
lods
mov
sbb
mov
mov
dec
notl
cmpsb
mov
stos
inc
xor
pop
data16
xchg
xor
sub
xor
inc
jns
adc
lcall
and
mov
hlt
adc
fimuls
loop
dec
insb
adc
fcmovnb
loope
sub
add
xchg
add
aaa
push
loop
rclb
push
inc
sahf
push
ficoml
inc
bound
pop
jle
jl
sub
jbe
sbb
inc
xchg
stos
sub
sbb
shrl
data16
mov
mov
aam
or
jo
push
mov
rcr
es
test
pop
pushf
movsl
dec
out
mov
cmp
rorl
mov
repnz
push
je
cmp
shl
out
push
pushl
test
clc
test
dec
test
push
jl
xchg
jbe
mov
cmp
pop
out
fnstsw
stc
cmp
aad
movsl
cmp
mov
rcl
sub
outsb
jle
into
aam
add
ds
cmp
aam
lods
cli
in
fsubs
cmp
sbb
stos
inc
mov
inc
inc
sbb
mov
jne
pop
scas
cwtl
jns
pop
pop
sbb
rolb
scas
pusha
orl
mov
sbb
xlat
sub
rcll
mov
sbb
or
inc
pop
mov
add
sbb
adc
cmp
jle
and
hlt
xlat
xchg
cwtl
jne
lahf
sub
lretw
mov
push
mov
jnp
gs
pop
mov
jb
pop
mov
add
mov
adcb
out
xor
pop
adc
jne
lahf
sub
mov
ja
cld
popl
inc
mov
and
lfs
sub
imul
or
jnp
into
push
out
icebp
push
mov
les
ret
scas
jge
add
test
sbb
int3
aas
cmp
pop
mov
mov
mov
neg
or
xchg
testl
mov
aam
syscall
inc
mov
dec
sbb
insb
js
adc
loopne
shrb
mov
pop
push
fs
lods
into
test
shll
in
cwtl
jge
mov
popf
ljmp
inc
or
add
mov
outsb
pop
pop
arpl
add
scas
ja
test
jmp
fcmovu
mov
inc
das
mov
pop
orl
dec
mov
adc
jbe
dec
aam
inc
loope
enter
orb
dec
dec
stc
add
iret
gs
sbb
dec
mov
lods
stos
xchg
jecxz
sub
add
incl
push
pop
sbb
push
addr16
iret
stos
addr16
rcll
pusha
lret
jo
or
cmp
sbb
xor
adc
and
sub
fisubrl
int3
out
jb
push
push
hlt
call
add
inc
sbb
xor
fldcw
inc
push
xor
inc
in
cltd
pop
push
push
mov
cmp
bound
and
fists
negl
fwait
into
mov
fs
out
push
push
mov
incl
in
cmp
aas
add
jge
sti
incl
dec
andb
aas
scas
repz
repz
pop
push
inc
xor
in
mov
and
jns
lret
scas
lods
mov
adc
cld
cltd
fsubrs
mov
sbb
and
dec
add
das
ljmp
inc
add
je
rol
sub
jnp
adc
mov
sub
mov
pop
std
dec
push
add
sti
popf
sbb
dec
jns
jnp
cmc
arpl
scas
fstps
lahf
int3
jne
pop
xchg
sbb
xchg
sub
cs
outsl
imul
xor
jmp
dec
jo
push
aaa
sbb
adcl
pop
jge
mov
mov
mov
pop
outsl
mov
adc
lods
or
mov
loope
sbb
clc
or
sub
cmp
testb
stos
leave
add
mov
jbe
jecxz
idiv
and
sub
cld
sub
nop
stc
lret
sarl
jnp
les
stc
cmpsb
inc
pop
mov
js
scas
xchg
leave
dec
imull
dec
adc
inc
lods
sub
jbe
popf
add
adc
jns
out
out
sub
xorl
dec
xchg
inc
lods
jns
lcall
mov
fs
mov
jae
fcomp
repz
cmpsl
mov
sti
mov
out
push
or
test
leave
in
rclb
push
jecxz
loope
mov
mov
adc
sbb
dec
and
rcr
repnz
out
std
push
sub
xchg
jg
ljmp
xchg
sub
fwait
or
arpl
rcrl
ret
add
ret
adc
imul
push
sbb
sbb
mov
add
xorl
ret
and
push
add
sbb
iret
test
mov
daa
cmp
push
sti
mov
sahf
imul
daa
movsb
dec
test
push
lahf
shl
lahf
cmp
aaa
dec
bound
xchg
cltd
pop
add
cmp
loop
faddl
xor
je
stos
jmp
pushf
cmp
mov
repz
dec
test
add
arpl
or
das
scas
stc
mov
jle
and
test
fdivrl
lock
xchg
enter
shll
xchg
inc
lods
adc
les
xchg
jmp
fiaddl
mov
push
fisubrl
mov
cmp
in
pushl
daa
push
pop
imul
int3
xchg
dec
movsb
nop
jg
pop
xor
pop
insl
into
imul
outsb
cmp
loope
stos
adc
add
test
push
sub
aam
dec
mov
push
mov
lds
jecxz
aam
xor
repz
push
mov
jo
mov
mov
and
dec
push
sub
stos
mov
cmp
jmp
or
xlat
test
loopne
mov
sbb
stos
das
inc
adc
stc
testb
int3
inc
jno
sbb
loop
mov
in
push
imul
mov
sbb
adc
fnstcw
sub
dec
mov
mov
and
xor
pop
les
arpl
mov
mov
mov
test
jae
popf
loopne
inc
jae
xor
mov
push
repnz
ror
cmp
dec
es
aad
movsl
pop
jnp
pop
push
js
in
and
mov
sbb
je,pn
mov
cld
in
mov
popl
cmp
xor
push
add
ds
sbb
rcrb
sbb
stc
pushf
xor
fcoms
mov
adc
jnp
leave
jno
xchg
dec
loope
cmp
mov
ss
popf
and
dec
xchg
mov
aas
hlt
popa
cmpb
sub
stos
dec
popa
insb
cmpsb
or
ficoml
sub
or
insl
inc
fsubr
shll
rcrb
dec
aaa
pop
inc
repz
in
push
fildl
or
sbb
in
lret
dec
call
stc
test
mov
dec
pop
inc
inc
inc
mov
and
lcall
movsb
xchg
dec
mov
dec
iret
xchg
pushf
rcrb
add
inc
and
push
fimuls
stc
ds
and
lods
jg
sbb
int3
mov
jecxz
fidivrl
fsts
add
jno
cs
test
adc
repz
cmpsl
sub
mov
dec
mov
xor
mov
fistpll
sub
gs
push
inc
std
aam
add
and
jmp
cmpsl
jecxz
es
test
pushf
push
adc
lea
inc
outsl
in
inc
loope
inc
push
jge
ss
or
or
in
add
inc
xor
lcall
or
mov
std
pop
dec
je
pop
aas
inc
ret
imul
adc
lret
sub
inc
fldl
pop
out
arpl
int
clc
pop
shlb
repnz
test
shrd
jmp
rorb
stos
test
cs
jle
pop
daa
dec
dec
popa
xchg
aam
jae
int3
jecxz
or
in
mov
lcall
mull
jle
mov
rorl
jge
cmp
mov
arpl
icebp
pop
jmp
pushf
mul
mov
mov
ret
cmp
int3
jne
lds
mov
add
in
out
push
inc
in
popa
or
xor
xor
in
mulb
xor
push
xchg
movsb
sti
xor
decb
mov
das
dec
or
clc
pushf
std
cmp
ret
add
daa
adc
mov
inc
inc
pop
mov
mov
test
int
int3
pop
cmp
lods
testb
xchg
lahf
or
fwait
jne
sbb
mov
and
cltd
or
pop
or
rcrl
shr
dec
gs
cmpsb
jp
cmp
out
cmp
jl
ds
adc
outsl
jge
subl
mov
ss
push
test
gs
popf
mov
adc
loop
xor
cmp
out
cmpl
scas
mov
rorl
aaa
leave
lret
mov
pop
and
loopne
lock
pop
xchg
into
jp
dec
pop
jnp
xchg
call
xor
or
xor
leave
cmp
pop
aas
sbb
ret
aad
inc
sahf
in
in
xlat
xor
int
arpl
ret
inc
gs
mov
xor
stos
aas
dec
fisttpll
xlat
addr16
aaa
repnz
in
push
pop
inc
push
into
ret
jnp
jp
xor
push
push
cmp
cwtl
dec
shrb
pop
test
push
jnp
mov
push
fnsave
les
movsb
andl
lock
or
mov
jle
mov
inc
push
loopne
or
movsl
sbb
imull
mov
fsubrl
jp
lret
fidivrl
bound
pop
xor
out
mov
add
cmp
dec
mov
jge
in
out
enter
cmp
add
or
xor
sub
pop
or
mov
cmp
push
icebp
rorl
sbb
jbe
fstps
xchg
scas
mov
fadds
test
cmp
loopne
lock
and
mov
inc
shlb
cmpl
dec
mov
add
lret
das
inc
or
cmpsb
inc
xor
mov
lods
push
iret
pop
or
frstor
popf
mov
ss
add
sahf
mov
add
sbb
int
xor
xchg
incb
es
mov
lret
shr
or
addr16
idivb
orb
lcall
pop
loope
mov
or
inc
cli
js
lret
bound
mov
xchg
and
mov
lahf
loopne
adc
adc
pop
adc
sub
out
inc
outsb
sbb
inc
mov
adc
fwait
xchg
lods
pop
pusha
iret
shrl
fxch
enter
pop
lahf
lea
push
fnstenv
aas
pop
pop
jb
cli
add
dec
jns
mov
cmpsl
js
push
pop
sbb
insb
aaa
jae
mov
arpl
ljmp
adc
insl
fwait
sub
and
stos
mov
xchg
cmpsb
lahf
jecxz
adc
cltd
xor
ret
inc
mov
or
scas
fsub
rclb
loop
pop
pusha
sub
or
jno
push
sbb
or
push
testb
mov
jmp
scas
pop
lods
mov
mov
mov
aas
or
mov
lcall
imull
mov
cltd
xor
mov
mov
xchg
cmpsl
hlt
mov
scas
or
push
cmp
pop
scas
test
out
dec
in
sub
jae
cmpsb
xor
movsb
push
add
mov
add
jl
pop
test
outsb
fndisi(8087
or
out
int3
call
mov
mov
rcr
ret
lods
jmp
or
pop
test
call
outsl
jmp
in
aad
cmp
repz
loopne
test
fnstenv
and
lret
xchg
xchg
outsl
adc
fsubr
mov
inc
in
inc
shll
aaa
dec
js
cwtl
sti
gs
jecxz
inc
pop
aaa
aas
dec
mov
or
xchg
pop
jnp
push
or
dec
int
xchg
and
lea
jno
inc
daa
stos
nop
adc
jno
stc
add
int
cmpsb
add
adc
adc
pop
iret
xchg
clc
push
push
sahf
push
mov
push
mov
jno
cmp
inc
inc
test
mov
dec
icebp
cs
in
pop
stos
or
sbb
inc
add
mov
pushf
mov
ret
or
in
cmp
mov
or
mov
jmp
dec
adc
adcl
data16
insb
pop
mov
sub
fxch
sysenter
into
in
pusha
jl
movsl
lods
fidivs
dec
or
jno
mov
inc
bound
add
repnz
mov
loop
xor
adc
sub
ret
jns
sbb
xchg
xchg
out
cld
arpl
shll
cs
ja
loopne
sbb
cld
pop
cld
hlt
mov
and
mov
adc
xorl
mov
push
xor
push
movsb
mov
stos
or
leave
daa
aad
test
xchg
pop
inc
lods
jg
sbb
mov
jg
insb
sahf
pop
divb
xchg
jp
popf
mov
push
cld
out
pusha
testb
xchg
outsl
movsb
push
sbb
adc
inc
dec
hlt
out
shrl
cwtl
into
add
ficomps
pop
push
cmp
mov
fbld
push
push
cmp
adc
in
out
pusha
lcall
out
pop
jo
cmp
movsb
or
outsb
aaa
repz
pusha
xor
loope
stos
xor
aad
fisttpll
mov
push
add
hlt
into
je
adc
repnz
cmpsb
ja
and
out
mov
imul
orb
push
insl
mov
push
mov
xor
sub
jns
rolb
mov
lea
pushf
jmp
mov
mov
xchg
int
xor
xchg
je
ja
sbb
xchg
das
in
outsb
jg
push
xchg
movsl
popf
push
xchg
sbb
mov
push
lcall
outsl
adc
subb
mov
fdivrl
dec
fnstcw
xlat
push
inc
or
push
jmp
js
pop
sbb
sub
jbe
cmc
imul
jecxz
push
out
scas
mov
out
mov
pop
sub
mov
xchg
int3
jl
cltd
bound
daa
insb
push
push
push
cwtl
adc
lods
mov
mov
test
mov
data16
shr
icebp
bound
test
stos
in
push
fs
sub
add
jg
add
test
insl
jge
cmp
and
jbe
sub
lock
popa
repz
sar
aas
lret
pushf
dec
into
or
out
sbb
inc
out
cmc
jo
xor
pop
cs
mov
dec
pop
int
mov
xchg
pop
jae
fcmovnbe
jg
pop
fbld
and
sarl
cli
mov
ljmp
sub
inc
dec
jbe,pt
pop
pop
leave
cld
adcl
mov
inc
inc
xor
inc
xor
cmpsl
mov
out
xchg
or
inc
add
pop
fwait
sub
cmp
fsubrl
mov
scas
lds
sbbl
mov
xchg
pushf
add
push
sbb
sub
jp
and
push
mov
ret
xchg
leave
add
rcrb
faddl
pop
add
mov
fwait
mov
cltd
out
mov
xchg
xchg
inc
dec
adc
sub
hlt
enter
xor
scas
inc
cmp
pop
jnp
add
xchg
pop
dec
pop
test
adc
jne
pushf
xor
fcmovnb
and
icebp
mov
shll
outsl
cltd
stos
rorb
lret
cmpsb
repnz
jne
xor
fwait
test
repz
inc
inc
fsub
xor
sub
jnp
inc
nopl
loop
sarl
add
lahf
inc
cs
pop
add
inc
jmp
xchg
leave
das
ljmp
adc
loopne
jns
xchg
in
rclb
mov
dec
lahf
lock
ret
xor
sbb
push
cld
addr16
fld
or
fbstp
mov
mov
movsb
or
fstpt
add
mov
sub
pusha
in
mov
xchg
push
mov
add
ds
fs
push
test
inc
push
inc
outsl
jnp
pushf
fs
cmp
loope
fimull
sub
ret
fwait
push
fucomip
lcall
outsl
xor
aam
adc
add
xchg
add
sbb
addl
int
xchg
shll
cmp
adc
fiadds
jl
ret
hlt
inc
push
adc
xlat
jg
or
mov
out
xchg
lock
ja
mov
push
sbb
jecxz
cmc
mov
xchg
call
popa
cmp
insl
dec
mov
or
jmp
imul
xchg
xor
and
in
aaa
stc
bound
sarl
cltd
mov
les
cld
dec
jecxz
test
jmp
jno
pop
push
dec
in
push
adc
cs
cltd
call
arpl
aam
addr16
adc
jg
inc
add
gs
push
mov
or
push
mov
push
add
lods
ja
inc
and
jnp
cmpsb
or
fistps
into
xor
cltd
mov
xorb
das
aam
mov
pop
call
jge
inc
sub
ret
and
daa
addr16
addr16
call
xor
cwtl
test
xchg
sti
shl
add
sub
pop
sbb
sbb
jo
and
dec
pop
xchg
jp
mov
cmpsl
jl
das
in
aas
imul
movsb
sti
cmc
mov
sub
adc
insl
scas
pop
add
add
mov
ret
pusha
mov
stc
add
sub
pushl
psrlq
out
mov
xor
or
dec
lds
cmp
mov
repz
sub
fisttpl
outsl
cli
repnz
test
jo
mov
sub
pop
cmp
icebp
shlb
inc
int
aaa
adc
mov
jl
sbb
jg
scas
jnp
push
jg
repnz
dec
lds
mov
out
or
sbb
shr
fisubl
gs
sub
xlat
mov
imul
nop
cmp
pop
inc
nop
mov
jl
fwait
loop
movsb
daa
cmp
aas
dec
mov
dec
mov
rcl
sbb
imul
xor
bnd
inc
aaa
adc
stc
jmp
mov
sbb
arpl
aas
ds
insb
pop
lods
mov
or
mov
pause
dec
and
jae
outsl
inc
mov
pushf
jle
and
adcl
push
movsb
or
jno
mov
or
pop
cmpsl
sbb
dec
sub
cmp
scas
int
inc
repz
mov
xor
dec
mov
ja
into
orl
push
lret
cltd
test
inc
cmc
xor
cmpsl
fidivs
mov
jbe
cmp
repz
jle
je
jg
mov
add
or
lret
ret
rclb
mov
imul
cmp
fidivrl
fistpll
add
cmp
jno
dec
jle,pt
cmpl
fisubrl
sbb
mov
pop
jb
stos
sbb
iret
je
stos
out
sub
push
sub
shr
roll
jg
cld
scas
mov
xchg
add
pop
in
xlat
dec
mov
aam
dec
mov
and
iret
loopne
nop
lock
xchg
add
pop
popf
mov
or
xchg
adc
pop
mov
inc
mov
jl
jns
lds
aas
mov
cmp
mov
add
dec
ret
mov
jle
dec
mov
cmc
and
inc
jle
cmc
sub
xchg
cli
scas
lock
add
jb
inc
cmp
bound
xchg
popa
add
stos
and
in
jle
xchg
dec
xchg
mov
stos
js
xor
pop
ss
sub
inc
in
sub
or
cs
push
std
lret
out
xchg
sbb
rcll
bound
push
ds
push
sub
push
cmpb
dec
sbb
and
ret
test
lock
add
lahf
repnz
fnstcw
ret
push
popf
and
ljmp
daa
out
push
stc
xor
mov
cmpsw
and
jmp
mov
sub
pop
inc
mov
lds
dec
xchg
inc
in
push
mov
jno
mov
sar
add
mov
lret
enter
jne
jbe
aam
or
outsl
cmp
pop
push
or
jo
data16
mov
jnp
jnp
repz
pop
icebp
js
outsb
jp
jae
cmp
mov
or
push
add
lcall
outsb
insb
mov
cmp
add
push
mov
mov
fisttpl
lret
pop
fisttpl
or
jns
mov
xchg
xor
mov
pop
or
nop
insl
std
scas
sbb
shr
mov
cmp
cmpsb
adc
lds
xchg
loop
test
fwait
or
test
sbb
or
outsb
push
mov
lcall
jg
in
push
push
pop
or
push
fwait
arpl
aaa
mov
sbb
stos
cmpsl
pop
out
or
fists
xlat
add
inc
in
lret
pop
inc
dec
mov
cmpsb
sub
inc
inc
arpl
mov
push
stc
movsb
push
daa
ret
sbb
push
mov
test
lahf
jno
add
mov
shll
and
notl
cmp
push
divl
push
sbb
cmp
push
mov
add
jl
cli
cmc
mov
fildll
and
xor
mov
int3
test
push
jns
movl
jl
pop
cmp
pop
int3
mov
rcl
or
fsubs
dec
push
int3
dec
pop
pop
lods
push
popa
aad
adc
mov
cmp
test
rcrb
pop
mulb
inc
lods
and
xchg
ficompl
test
aaa
push
mov
jne
movsl
es
xchg
add
sub
adc
push
nop
xlat
rorb
iret
mov
cmpsb
xchg
loopne
lret
sub
sbb
lcall
mov
dec
sub
pop
mov
repnz
push
cmp
mov
aaa
je
mov
and
dec
flds
decl
sub
sbb
xchg
test
inc
or
iret
ret
pop
sbb
les
lods
aam
adc
loop
mov
clc
push
inc
cs
mov
inc
arpl
xor
pushf
scas
sbb
push
int3
xlat
xor
arpl
cmpsb
loope
cmp
les
push
or
dec
loopne
or
push
mov
dec
mov
in
dec
arpl
popl
in
or
sub
dec
xor
les
or
and
mov
movsb
dec
aad
push
xchg
mov
inc
out
rclb
sub
addr16
sbb
or
push
push
out
or
mov
pop
jecxz
test
lock
adc
shr
pcmpeqd
jo
fstpl
ret
gs
or
rclb
out
dec
sub
pop
repz
cli
sbb
and
and
mov
adc
dec
stos
pop
mov
push
xchg
ja
push
fnsave
testl
or
cs
mov
loop
and
jmp
ss
sub
mov
aas
lock
mov
aaa
cmpsb
fldenv
add
jnp
and
cmp
pop
aaa
jp
sub
lods
or
popf
dec
rcrb
and
cwtl
xor
ljmp
pusha
inc
mov
mov
sbb
adc
das
sti
cmp
scas
fmul
mov
mov
xchg
ja
aas
out
jbe
pop
rcl
mov
icebp
sahf
jae
xchg
jns
add
loope
push
aas
cs
pop
xchg
adc
cltd
mov
and
push
lret
stos
jae
sti
pop
icebp
dec
shl
loop
repnz
xor
lahf
mov
pop
adc
adc
iret
xor
and
cmp
sti
ja
push
scas
loope
test
xor
adc
xlat
mov
sahf
push
mov
arpl
mov
sub
addr16
push
xor
sub
mov
xchg
push
aaa
mov
mov
or
sbb
dec
in
sarl
lret
mov
pop
mov
cmp
jecxz
in
dec
mov
mov
ret
push
adc
sbb
popa
push
iret
mov
inc
in
xor
sti
inc
and
sti
imul
faddl
movsl
pop
push
loopne
es
jle
add
xchg
pop
paddw
xchg
mov
icebp
loope
mov
xchg
fisttpll
stc
or
and
movsl
push
jg
iret
test
out
sub
lret
addr16
adc
jo
lcall
pop
pop
imull
ds
mov
add
out
mov
and
add
xor
jp
les
rclb
and
and
fucomi
repnz
popa
push
or
xchg
rclb
push
pop
fistpl
xchg
stc
shrl
push
mov
and
sbb
and
jmp
leave
mov
leave
mov
inc
dec
mov
adc
popf
inc
push
rclb
sbb
test
add
jge
inc
sub
sbb
int
test
rol
xor
repnz
cmp
pop
cmpsl
and
xlat
jmp
rcrl
stos
arpl
mov
imul
mov
test
divl
sub
hlt
xchg
cmp
cmp
cmp
fisubl
pusha
sbb
pop
pop
inc
gs
ljmp
das
cli
pop
add
aas
test
scas
sbb
jmp
inc
jl
out
adc
jp
dec
in
xchg
into
push
inc
inc
mov
insb
shll
test
out
stos
xchg
sbb
cmpsb
mov
mov
lods
std
inc
xchg
lea
dec
pop
stc
and
mov
jmp
repnz
mov
inc
mov
jne
lods
imul
pusha
cmp
pushf
pop
xor
ret
xchg
sbb
mov
add
xchg
aad
xchg
out
xchg
stc
pusha
lahf
xor
add
test
arpl
ss
push
out
outsb
add
out
stos
ja
pop
cmpb
cmp
pushf
mov
lea
adc
and
mov
std
xchg
or
test
mov
das
cmp
push
pop
test
push
pop
sub
shrb
push
inc
inc
lahf
mov
pop
dec
orl
andl
inc
cmp
sub
adc
xchg
lods
jmp
mov
jl
fwait
push
call
imul
shll
jnp
aas
cld
aas
xor
les
fildl
mov
inc
or
or
sbb
jb
push
lret
ret
ret
ss
js
icebp
adc
outsl
das
inc
lret
adc
add
add
cmpl
pop
mov
xor
rclb
outsb
adc
out
in
out
testb
adc
xor
ret
stos
add
sbb
push
movsl
fsubr
xchg
iret
xlat
pushf
xor
jge
pop
push
das
mov
push
js
hlt
andb
lcall
ja
movsb
lret
rolb
xchg
pop
out
jae
mov
jo
and
movsb
add
dec
imul
xor
sub
mov
leave
insl
lahf
cmp
mov
pop
pop
cwtl
sub
out
shrl
insl
sub
or
xchg
push
lods
pop
mov
xchg
add
sub
jb
data16
decb
and
data16
mov
aad
mov
or
jnp
push
xor
and
int3
sub
mov
xor
dec
mov
lret
pop
hlt
mov
in
xchg
push
mov
or
xchg
stos
aad
cmp
xchg
jg
popf
loop
jbe
outsb
lret
add
negb
fsubl
stos
jecxz
cli
cmp
nop
push
xor
pop
mov
outsb
leave
sub
adc
cmp
sub
fscale
push
mov
mov
add
js
mov
mov
popf
xchg
mov
add
pop
xchg
or
test
xor
mov
test
lods
jo
cli
xchg
insl
xchg
xchg
push
imul
push
das
into
push
bnd
dec
std
fs
movsb
jg
ds
adc
and
sbb
jp
inc
insl
mov
inc
sbb
dec
mov
jne
sbb
push
test
mov
sbb
scas
inc
jo
and
out
lahf
fsubr
mov
gs
sub
adc
push
lock
mov
out
iret
aad
jmp
fnstcw
leave
xor
imul
lret
sub
push
push
incb
xor
jle,pn
popf
sbbb
into
cmp
xlat
xchg
mov
inc
mov
cmp
sarb
aas
xor
xchg
mov
fs
push
add
addr16
push
dec
faddl
mov
cli
and
xlat
rorb
cmp
dec
mov
mov
xchg
mov
mov
jo
ret
arpl
es
loope
cmpsb
mov
xchg
aas
cmp
adc
mov
or
les
pop
nop
push
ss
jnp
lret
test
inc
pop
push
add
enter
fcoms
adc
cmpsb
cmp
aaa
xchg
movsl
stos
xor
jo
push
sub
xor
pop
pop
xor
xchg
mov
fstpl
jecxz
rolb
loope
js
mov
adc
pop
inc
jecxz
iret
sarb
pushf
inc
mov
loop
or
push
or
outsb
sbb
mov
xor
and
or
fwait
cmp
je
ret
fs
sub
and
rol
and
xchg
xchg
movsb
jl
in
push
int
rolb
push
pop
dec
or
and
call
nop
inc
push
incl
mov
jp
rcrl
in
rclb
repz
sub
aaa
inc
xlat
imul
dec
dec
ret
or
int3
sbb
cmp
int
sbb
inc
and
por
das
in
jne
insl
sub
inc
dec
and
sub
xchg
sti
and
lods
mov
pop
mov
lahf
stos
mov
mov
rcll
pcmpgtd
add
push
aam
xor
xor
dec
clc
in
loope,pt
jle
xor
xchg
and
pushf
std
or
sub
or
out
push
leave
add
cmp
imul
imul
rolb
inc
inc
lock
or
jge
mov
xor
sub
inc
cmp
and
pop
and
hlt
mov
mov
push
xorb
cmpsb
daa
nop
ljmp
and
notl
adc
sub
add
ja
sti
cli
aas
jecxz
and
dec
mov
sub
inc
and
test
ror
inc
jp,pn
addl
ds
xor
bound
inc
aam
adc
sbb
push
fwait
sbb
push
sub
bound
outsl
push
adc
out
out
mov
int
xchg
icebp
je
jno
jg
mov
push
pusha
shlb
lods
push
stos
pop
loope
movsb
sti
or
dec
sbb
popa
cmp
call
mov
ret
mov
mov
adc
inc
mov
pop
addr16
fildl
scas
adc
xor
inc
or
lock
xchg
inc
cli
jmp
sbb
leave
push
xchg
gs
lcall
sub
fbstp
mov
xor
or
mov
arpl
sbb
test
in
inc
shrb
imul
aad
inc
cmpsl
int3
in
pop
push
mov
dec
or
sub
and
inc
je
jb
out
ja
xor
jmp
sbb
iret
adc
add
pop
std
fdivrs
add
lret
adc
lahf
mov
ljmp
fsubrp
pop
gs
clc
xchg
mov
jmp
pop
insl
test
scas
pop
push
xchg
xor
mov
mov
and
jecxz
js
ljmp
pop
dec
sbb
mov
pop
inc
inc
pop
cmp
stos
cmp
in
and
fcomps
mov
test
push
ja
mov
mov
and
nop
jge
jl
and
add
mov
push
add
sbb
icebp
sub
pop
frstor
lods
xlat
les
aaa
movsl
mov
mov
or
in
stc
adc
popa
mov
es
les
out
faddp
fcomip
imul
push
icebp
subl
mov
mov
mov
adc
outsl
and
das
mov
aaa
divl
inc
add
or
cmp
stc
sbb
test
std
popf
testb
mov
and
and
cmp
in
mov
sub
push
repz
mov
ret
jo
pop
dec
sahf
pop
xchg
cwtl
dec
flds
aaa
andb
xlat
cld
mov
mov
mov
jns
call
in
xchg
mov
in
stos
xchg
sub
jbe
add
dec
push
jns
fistl
push
loope
mov
pop
xor
and
xchg
les
inc
dec
lcall
dec
stc
pop
push
leave
push
call
out
xchg
popa
adc
or
dec
jge
cwtl
test
and
mov
cmc
lds
xchg
das
test
sbb
mov
mov
dec
jg
mov
sub
add
xchg
pop
mov
lods
std
cmp
jns
enter
adc
jp
rcrb
incb
mov
scas
aam
roll
divl
pop
shlb
jmp
add
lods
fidivs
pop
or
pusha
push
mov
out
js
jp
inc
sub
xchg
xlat
push
cli
mov
jge
nop
loopne
dec
sub
inc
iret
xchg
pop
adc
addr16
jne
adc
add
dec
popa
aaa
pusha
jmp
cmpsb
jecxz
ficomps
add
adc
sub
push
sub
test
ja
popa
xor
jnp
xchg
and
enter
dec
or
push
jp
in
mov
inc
into
push
sbb
pusha
aaa
cmpsb
lods
iret
pop
push
ds
pushf
cmp
push
mov
loop
mov
ror
add
add
icebp
mov
loop
into
add
insb
cmp
rcrb
sbb
push
ljmp
add
mov
lahf
xchg
push
jb
jg
pop
push
sbb
add
jnp
fisubs
test
pop
sarl
fldl
mov
std
push
add
loope
repnz
shrl
clc
test
jo
jns
or
xchg
push
dec
push
push
int3
hlt
addr16
xor
imul
mov
test
scas
cmp
fs
jle
mov
or
fs
add
mov
add
cs
xor
dec
xchg
jne
pop
popa
sbb
addr16
sbb
fmul
sub
shll
lods
in
repz
jg
xchg
imul
mov
adc
add
out
inc
cmp
jle
cltd
pop
lret
jle
mov
fdivl
jp
imul
fwait
jns
fcomps
xor
fs
push
fnstcw
fxch
xchg
push
jg
into
in
test
cmpl
jbe
test
nop
rclb
pop
roll
cltd
or
xlat
mov
push
push
push
lret
test
loop
mov
jnp
sahf
push
nop
icebp
mov
push
daa
jno
in
push
push
cs
push
fiadds
push
cwtl
out
jo
cmp
pop
sbb
fistps
cmp
xchg
ficoms
or
or
aam
sbb
insl
push
push
inc
fldl
inc
and
dec
les
ret
repz
inc
arpl
jmp
mov
add
fildll
daa
xorb
jl
inc
cmc
hlt
cmp
out
outsl
mov
lret
jns
cmpsb
mov
or
ljmp
sbb
push
push
sub
into
out
mov
pop
lret
scas
cs
sbb
lcall
add
or
lods
rcrl
pop
pop
jge
inc
cwtl
xchg
fcmovne
rorl
mov
jg
pop
insb
push
jmp
or
sbb
ljmp
loope
mov
cmp
jg
loop
cmc
mov
mov
adc
pop
adc
imul
jp
cmp
loopne
cmp
adc
dec
data16
cmpsb
sbb
icebp
sti
mov
mov
loope
ljmp
pop
or
or
int3
sub
in
cmp
es
out
std
mov
fwait
call
push
stos
mov
mov
jb
add
sub
and
adc
pmaxub
es
xor
test
fwait
mov
cmp
cld
inc
xorl
xor
lock
cmp
inc
xor
mov
pop
aas
fistps
dec
push
lret
or
repnz
push
adc
subb
imul
sbb
jge
lods
dec
lcall
sbb
cmpsl
leave
mov
lahf
sbb
jne
xor
xchg
jbe
out
cmp
dec
jecxz
sarb
push
pop
push
pop
jne
sar
sbb
dec
popa
dec
pop
pop
xor
imul
int
push
loopne
inc
loope
orb
mov
pusha
cmpsl
call
arpl
push
iret
sub
popf
subb
cmp
pop
test
test
inc
ljmp
ja
mov
aas
push
cmp
cmc
sbb
loope
pop
test
lods
sub
scas
aaa
and
or
inc
sbb
loopne
imul
outsl
xchg
jb
sbb
lea
mov
roll
pop
sbb
lret
into
jne
xor
shll
pop
lcall
jo
fists
stos
mov
inc
imul
outsl
sbb
dec
popa
xor
pusha
mov
inc
repz
sti
addr16
ret
adc
shrl
bound
loopne
sbb
add
test
imul
pmuludq
js
jbe
sbb
push
jbe
mov
fstl
lods
cltd
or
cmc
fwait
adc
mov
cld
push
lods
add
je
popa
xchg
or
mov
jae
sub
repz
loope
or
test
mov
adc
jmp
mov
loope
inc
mov
orl
repnz
mov
rclb
push
mov
in
cmp
sbb
iret
adc
mov
mov
fmul
mov
inc
inc
sub
ret
dec
mov
cmc
or
adc
pop
push
popf
clc
les
adc
addr16
jno
pop
mov
mov
ja
pushf
mov
mov
inc
dec
mov
cmp
shrb
shll
xor
call
mov
add
lahf
jb
xchg
add
addr16
mov
loope
jmp
sub
dec
jmp
mov
rcll
sti
or
sti
xor
scas
orl
repnz
aas
out
repz
lock
ret
ficoml
in
mov
cmp
ror
arpl
xchg
out
sub
mov
dec
repz
hlt
insl
or
sbb
aad
cli
inc
sti
shll
mov
jmp
push
int
push
adc
mov
ljmp
jae
sbb
hlt
xchg
dec
lcall
scas
je
xor
cmc
shll
imul
rolb
fdivp
dec
mov
dec
and
push
std
iret
jo
dec
sbb
in
mov
into
sbb
pop
bound
dec
ljmp
cli
notrack
sub
test
pop
lea
fdivrs
push
sub
inc
ljmp
inc
or
faddl
and
test
pop
mov
fiadds
testl
stos
clc
hlt
xchg
rcll
or
adc
fildl
pop
dec
outsl
cli
dec
pop
jge
imul
xor
push
fcom
cltd
outsl
pop
lahf
dec
pop
and
xchg
or
insl
test
mov
lret
push
sar
notl
xchg
les
jb
mov
jmp
adc
mov
cmpsb
out
iret
xor
mov
ja
ljmp
sub
subb
sbb
mov
stc
fldt
outsl
xorb
mov
sub
fstpt
sahf
add
and
sub
xlat
adc
inc
pop
add
jo
inc
outsb
ljmp
in
ficoml
test
aas
inc
fadds
sbb
mov
push
add
adc
lods
movsb
test
shll
add
and
jns
lret
dec
stc
mov
int
in
test
add
jne
sub
dec
xchg
and
or
cmpsl
mov
ljmp
popf
mov
pop
movsl
inc
push
mov
sub
inc
sqrtps
jg
add
aaa
lods
add
out
out
dec
mov
inc
xorb
push
xor
jecxz
dec
in
cmp
stos
pop
shr
popa
mov
aam
je
out
test
xchg
mov
in
jp
popa
ret
pusha
cmpsl
out
xorl
mov
jns
inc
inc
into
das
imul
inc
insb
push
jns
pop
sbb
xchg
inc
jbe
ljmp
imul
push
or
xor
mov
jp
cltd
cltd
mov
push
pop
les
sbb
repnz
push
mov
stc
pop
fdivrl
add
cmc
dec
or
push
movsb
shlb
fnstcw
and
cmp
stos
out
lahf
mov
insb
cmp
mov
loop
and
cmp
xor
mov
inc
stos
outsl
loop
xor
into
xchg
iret
movl
pop
xchg
aam
dec
insb
inc
sbb
or
or
dec
popf
jb
and
add
hlt
jge
fwait
adc
pop
outsl
sub
loop
xlat
gs
mov
xchg
sbb
js
pop
subb
push
shrb
adc
in
out
in
pop
fcoms
add
stos
cmpsl
jbe
sbb
cmpsl
xor
sbb
lcall
cmp
in
adc
pop
in
outsl
dec
inc
loop
adcb
std
xor
mov
aad
loop
aaa
lahf
pop
repnz
add
cmpsl
das
and
fists
les
inc
cs
pop
add
xchg
jne
jle
xchg
xchg
and
cmc
negb
xor
insb
sbb
xchg
ljmp
adc
bound
adc
ja
nop
dec
mov
cmp
jbe
aam
lret
js
xor
or
loop
les
sbb
jle
xlat
imul
ljmp
imul
dec
inc
push
cmp
loop
mov
xchg
fabs
icebp
cmp
shrl
mov
xor
lds
into
dec
mov
sbb
add
sub
push
call
mov
roll
adcb
in
test
add
xor
adc
lods
fwait
jmp
fcmovb
sub
addr16
pop
sbb
push
and
stos
je
mov
ja
iret
stos
inc
add
in
fdivr
lcall
sbb
nop
outsb
cld
mov
xchg
adc
xor
xchg
call
or
xor
cmc
mov
mov
lea
in
xchg
out
lcall
sahf
in
push
into
nop
cmp
aas
mov
xor
orb
fld
aad
daa
stc
xchg
cmp
jmp
les
cmp
bound
hlt
xchg
jg
test
lcall
push
inc
std
fadds
imul
cmpsb
xchg
rcrb
test
ljmp
pushf
repz
pusha
cmpsl
lods
pusha
call
in
jo
sub
xchg
dec
push
push
pop
xchg
lock
pop
and
popf
in
cmp
xchg
add
adc
xchg
test
rep
jne
popf
out
cmp
js
add
mov
jnp
xchg
divl
test
xor
dec
push
push
xor
negl
push
xor
mov
cli
repnz
adc
arpl
sbb
xchg
lds
repnz
out
insb
popf
fstl
adc
cmp
sahf
adc
jmp
jmp
cmp
in
cwtl
lcall
fists
adc
jnp
loope
int
push
popa
jge
mov
push
sub
jbe
push
sbb
into
xor
dec
aad
and
mov
test
ret
sub
sub
pop
inc
cli
in
jno
adc
pop
dec
jmp
dec
cmpsb
dec
movsb
sub
stos
pop
jo
mov
inc
leave
sbb
sbb
mov
lea
sbb
push
xchg
rolb
dec
int
test
das
sbb
test
fimuls
mov
xlat
scas
cmp
push
jnp
jl
enterw
pop
ffree
mov
cs
sub
lds
fcomi
xchg
adc
icebp
fiadds
pop
mov
or
pop
fistpl
xor
fwait
lods
xor
stos
jg
adc
mov
shrb
popf
andl
dec
cld
loope
enter
lock
adcl
outsb
repz
fimull
pop
loope
mov
or
sbb
pusha
xlat
mov
fsts
adc
dec
repz
out
aam
outsl
psllw
or
cmp
loopne
cmp
testl
sbb
sahf
lds
stc
rol
inc
in
inc
bound
scas
js
mov
in
and
and
pop
sahf
jg
sti
xor
hlt
sti
loopne
in
dec
roll
std
bnd
daa
cvtps2pi
gs
or
rcl
jo
insl
mov
rcrb
push
cmp
push
inc
les
mov
pop
test
dec
loope
movsb
mov
adc
mov
sbb
in
sub
pop
rolb
dec
inc
fstpt
add
and
adc
paddq
int3
jnp
cmp
sbb
lahf
in
xor
aam
arpl
inc
and
bound
add
cmc
int
mov
adc
les
mov
mov
mov
jne
sahf
mov
out
mov
lods
insb
pop
outsb
cmp
mov
out
and
in
adc
fwait
dec
adc
sub
jo
aaa
cmpb
shll
and
sbb
and
dec
xor
mov
xchg
inc
jae
mov
imul
mov
rcll
loopne
mov
xchg
fucomp
inc
push
add
movsb
or
cmp
std
iret
jecxz
mov
popf
jno
push
sti
pop
inc
mov
add
xor
jge
dec
jp
arpl
jg
push
or
dec
das
cmp
pop
add
xchg
mov
push
and
out
xchg
in
hlt
out
and
pushl
push
loopne
mov
mov
xchg
push
shlb
aam
cwtl
dec
push
sub
jg
fisubl
mov
insl
fisubrs
cmc
xchg
jae
cld
int3
test
inc
dec
cmc
pop
adc
aas
ret
popa
push
ds
out
pop
icebp
scas
or
fld
jecxz
sahf
pop
xor
inc
fidivl
inc
add
jo
xchg
jecxz
sahf
mov
gs
cmpsl
xchg
stos
or
int3
insb
dec
xchg
pop
fldl
hlt
arpl
jb
loop
ficompl
cli
mov
test
dec
jae
or
jns
pusha
cmp
arpl
mov
aaa
in
jne
xor
xor
cmp
inc
mov
inc
test
cld
sbb
leave
pop
andl
fwait
jg
cmpsl
jne
xor
dec
fmulp
ja
fmull
std
ja
movsl
sbb
cmp
xchg
aam
cmc
fimull
cmc
cmp
mull
pop
cli
add
popa
jle
cltd
push
adc
negl
sarb
cmc
add
mov
repz
jo
push
std
add
mov
mov
push
sub
imul
popa
sahf
ret
aas
enter
add
sbb
stc
pusha
pop
push
jl
test
jno
enter
negl
stc
data16
mov
dec
xor
lods
scas
das
loopne
sub
and
dec
ds
lcall
and
or
xor
cli
sti
adc
mov
in
fiaddl
xchg
xchg
out
out
jl
dec
add
sar
sub
dec
push
pop
mov
mov
daa
jl
ret
in
or
sbb
jno
inc
adc
inc
sbb
cmp
and
shll
sbb
push
cwtl
dec
sub
sahf
add
stc
xor
iret
and
stos
push
outsl
push
in
lret
add
dec
mov
jge
inc
fwait
jp
cmp
lcall
inc
mov
jo
lret
xchg
ss
int
mov
push
add
sbb
push
xchg
add
xchg
push
imul
dec
add
jae
out
pop
mov
mov
insb
enter
mov
test
jmp
pop
add
test
mov
dec
push
sti
rcll
xchg
call
cmp
mov
adc
and
cli
xlat
cwtl
or
xchg
xor
orb
rcrl
test
jno
xchg
inc
negl
jbe
jecxz
or
in
xchg
lds
mov
jb
stc
aaa
and
dec
adc
test
hlt
negl
mov
or
or
cmpsb
mov
sub
jmp
mov
movl
in
mov
mov
idivl
push
aad
inc
fildl
xlat
lods
scas
pushf
iret
pop
fsubrl
jo
push
lcall
add
pop
inc
pop
cld
imul
leave
incl
push
nop
leave
fidivrl
and
pop
shl
loop
testb
aaa
mov
xor
dec
jecxz
sub
xchg
sub
imul
mov
and
inc
das
and
aaa
inc
inc
jbe
test
icebp
pop
cmpsb
movsl
icebp
lds
inc
lea
sub
or
out
sub
dec
inc
sub
inc
pop
mov
in
decb
out
mov
pushl
mov
or
add
xchg
xor
jbe
ds
fcoml
push
iret
add
shlb
cli
mov
cmp
inc
cltd
idiv
subb
sbb
movb
notb
xchg
mov
pusha
mov
adc
mov
mov
xchg
imul
mov
xchg
int3
or
lds
mov
mov
push
and
cmp
fsubs
repnz
sti
data16
fwait
es
sub
add
dec
xchg
xchg
jle
inc
mov
sub
lret
sbb
cmp
push
js
mov
add
jno
sbb
ds
and
nop
aaa
add
ss
movsl
push
hlt
mov
mov
int
arpl
push
mov
xor
mov
rclb
sar
xchg
push
xor
mov
pop
fimull
add
jbe
lods
jl
jecxz
int
adc
dec
mov
enter
fucomip
push
xor
sub
lock
cmp
loope
ja
dec
repz
pop
pop
dec
and
pop
cwtl
mov
inc
loopne
ljmp
cmp
adc
push
fistps
test
nop
inc
test
into
add
or
mov
jg
sbb
gs
xchg
jno
jo
dec
sti
sahf
test
jg
lock
lahf
imul
jb
popf
mov
xor
xor
sub
pop
jne
cld
xor
adc
inc
fwait
pushf
mov
mov
lock
push
mov
cmpsl
pusha
sbb
inc
dec
outsb
add
xor
andl
das
call
pop
add
sub
sti
mov
dec
pop
aas
sbb
enter
jo
pop
mov
aaa
mov
and
ljmp
and
aad
addr16
fnstenv
popl
cwtl
pop
mov
or
or
dec
push
addr16
jbe
jmp
inc
pusha
loope
mov
mov
subl
jmp
outsl
jge
lcall
faddl
xor
mov
dec
movsl
loop
xchg
ret
cmp
mov
jno
mov
pusha
add
jmp
rorb
lcall
push
les
push
out
je
loope
mov
int3
ret
sub
mov
fdivrl
pop
mov
pushf
pop
xchg
fdivr
jno
and
push
mov
dec
xor
jp
or
andb
jmp
jb
lret
jb
pop
xchg
inc
dec
aad
sbb
cli
sub
push
add
lods
arpl
lods
js
rorl
scas
mov
ja
mov
fistl
cmp
hlt
jg
push
add
mov
pushf
jmp
cmp
lahf
push
add
cmp
lret
dec
sbb
nop
or
push
pop
loop
jg
repnz
or
scas
xchg
popf
or
rol
lds
jecxz
push
xchg
lods
mov
hlt
xor
repnz
add
lods
mov
push
test
iret
add
jae
add
push
xor
jmp
cwtl
sbb
ds
addr16
pop
pxor
repnz
popf
imulb
dec
rorl
inc
lret
and
xchg
iret
push
popf
inc
xchg
sub
ss
mov
std
test
adc
repnz
lret
in
mov
and
les
decb
pop
jns
and
aam
arpl
xor
outsl
pusha
mov
je
add
push
cltd
out
cwtl
lods
fmuls
xor
jb
pop
cmpsl
push
jg
incl
ret
adc
enter
xchg
inc
in
decl
mov
dec
int
cmc
and
adc
pop
push
cmp
das
jbe
xchg
adc
cs
shrb
stc
popf
mov
push
push
rdpmc
mov
repz
mov
testl
cmp
popa
sub
mov
xor
mov
xchg
xor
pop
mov
rorl
xchg
jp
mov
or
jnp
test
pop
mov
arpl
lea
ds
or
lock
push
jo
mov
push
jno
jb
pop
testl
jo
mov
lods
push
xor
out
inc
insb
adc
add
adc
sbb
dec
cmp
sbb
and
and
insb
fstpl
mov
adc
mov
adc
adc
popf
fs
gs
dec
cld
adc
insb
and
mov
loop
sbb
scas
adc
movsb
mov
or
jecxz
mov
enter
mov
stc
insb
lods
pushl
ss
lods
add
in
sbb
or
adc
popa
jnp
mov
pop
sbb
xchg
repz
xor
ja
mov
mov
data16
sahf
mov
ljmp
sti
push
loope
xor
xchg
inc
fdivrs
cmpsl
mov
push
loope
sbb
stos
aam
ja
mov
or
mov
daa
std
add
cmpsb
aad
popa
in
and
dec
jae
pushf
fistpll
inc
call
inc
fdivs
mov
cwtl
pop
movsb
divb
aas
mov
out
pushf
inc
mov
jbe
popa
inc
lods
xchg
das
or
or
pop
fcomi
cwtl
sbb
jg
fisubl
mov
xchg
and
fdivrs
imul
out
inc
add
imul
into
dec
pop
sub
test
sbbl
aad
mov
call
mov
or
dec
inc
addb
int3
ja
data16
fisubrl
test
pop
stos
push
jns
lret
addr16
adc
cmp
xchg
dec
insb
clc
sub
lds
pop
lods
loopne
ficomps
jnp
mov
sbb
sbb
push
hlt
leave
mov
dec
xchg
mov
adcb
in
repnz
loop
cmp
push
bound
imul
sbb
xchg
js
lock
mov
mov
cmpsb
movsb
inc
gs
or
movsw
mov
repz
mov
pop
xchg
pop
mov
fwait
pop
xchg
xchg
div
xchg
mov
mov
pop
inc
outsb
pop
jle
mov
pushl
cmc
push
pop
and
fdivr
sti
movsl
pop
vprotb
loop
sub
pop
or
mov
cwtl
pushf
cltd
sbb
inc
das
idivb
push
aad
lcall
xor
test
and
sbb
mov
stos
popa
fs
test
fstl
jbe
mov
xchg
cmpsl
sbb
push
mov
mov
stos
inc
cmp
mov
out
jb
and
stos
mov
mov
pop
sub
pop
cmp
sub
adc
lcall
xor
sub
ret
push
fs
mov
in
inc
lahf
pop
daa
xor
jg
sub
fidivrl
hlt
push
push
push
into
cs
mov
xor
inc
test
repz
mov
out
mov
jno
pop
push
sbb
push
leave
fs
inc
fnstcw
or
cmp
adc
imul
out
add
jae
ss
adc
out
push
dec
jecxz
jb
enter
mov
movsb
cltd
mov
adc
hlt
out
adc
test
pop
jmp
push
xchg
movsb
jp
rcrl
fistpl
js
pusha
fistps
jbe
jbe
nop
fwait
scas
lods
cmp
push
or
inc
xor
loope
cs
pop
and
cmpsb
xchg
inc
test
jge
aam
inc
pushf
or
push
xor
ret
arpl
push
xchg
push
stos
enter
xchg
sub
and
fs
xor
mov
aaa
addr16
mov
jns
shlb
push
jne
int
clc
outsl
dec
add
cmc
lret
xchg
das
adc
insb
mov
int
jno
sub
test
jno
fisubrl
lock
add
push
xor
pop
mov
sbb
mov
lret
in
insb
cmpsb
adc
das
pop
in
ss
mov
flds
ds
push
imul
cmpsl
fadd
aam
or
jge
insl
in
jns
stos
scas
lds
add
sarb
push
mov
fidivl
inc
flds
mov
rorl
or
shlb
les
sbb
xchg
xchg
dec
repz
int3
xor
cld
dec
xchg
mov
test
jbe
gs
inc
iret
pop
mov
stc
popf
and
shll
xchg
rclb
jg
testb
adc
cwtl
adcl
sub
mov
lahf
push
int
adc
mov
out
sbbb
test
mov
cmp
notb
mov
out
sti
stos
push
scas
inc
cmp
popa
in
vmovsd
adc
lcall
sbb
xchg
popa
lds
outsl
adc
mov
movq
add
in
xchg
mov
stc
les
jmp
jmp
or
pop
cmpsl
cwtl
sub
je
xchg
lods
fisubl
cwtl
mov
inc
jb
in
dec
jecxz
clc
pop
mov
into
pop
cmp
push
in
loop
or
inc
pop
mov
sbb
dec
je
xchg
nop
mov
jno
sbb
sti
mov
pushf
xchg
hlt
dec
push
or
mov
push
iret
push
add
add
mov
cmp
sbb
mov
push
mov
push
pop
push
jae
dec
dec
inc
bound
orl
adc
push
xor
in
ret
sub
int
adcl
fucomi
out
or
push
and
xchg
test
jb
popl
jp
int3
mov
dec
or
mov
in
mov
or
sub
or
jnp
dec
push
pop
push
jnp
pop
add
lea
cwtl
les
push
int3
cmc
mov
in
out
mov
jecxz
scas
cltd
jno
sbbl
cmc
mov
cwtl
add
pop
inc
mov
jne
pop
cmpsl
inc
mov
std
sub
sub
xchg
popf
adc
xchg
loope
sbb
or
cltd
rclb
sub
in
repnz
add
repnz
xchg
rclb
inc
dec
sbb
xchg
pop
adc
outsl
push
sbb
outsl
jl
arpl
mov
jge
xchg
pop
mov
sub
cmp
jp
gs
sbb
fists
fimull
adc
dec
jae
inc
mov
or
hlt
out
mov
dec
add
add
fidivs
push
movsb
addr16
add
ds
cs
lds
lret
out
mov
out
adcb
add
popf
aas
push
inc
std
adc
cmc
out
dec
or
sbb
stos
cmpsl
insl
loop
les
inc
push
rorl
shlb
es
std
xor
ffreep
fmulp
adc
mov
mov
jb
out
sahf
sbb
mov
push
xlat
cmp
iret
sub
sbb
jmp
ds
loop
movsl
cmc
xchg
push
insb
movb
setns
lret
ficoms
aaa
std
xchg
xorl
inc
pop
xchg
and
bound
mov
jp
or
push
sub
xor
mov
aam
fiadds
sub
popf
inc
loope
std
jae
mov
clc
push
imul
inc
and
jge
out
cld
mov
call
and
sbb
mov
popa
mov
mov
mov
sbb
outsl
sbb
out
and
stc
std
js
cmovnp
jbe
push
andb
pop
out
sbb
dec
jge
and
in
jle
or
icebp
fidivs
scas
fcomi
insb
movd
fdivrl
inc
ja
lods
sbb
sub
fdivl
sub
xchg
push
daa
mov
gs
ret
dec
setbe
sbb
inc
mov
inc
mov
sub
mov
mov
stos
mov
into
or
hlt
call
mov
test
clc
xchg
aas
mov
lret
cs
pop
cmp
jle
jmp
sbb
push
daa
pop
scas
jge
scas
mov
addr16
das
mov
adc
cld
xor
add
cmp
fldcw
lret
imul
jno
dec
cmp
fcmovu
mov
sub
test
cmp
mov
enter
xchg
dec
mov
scas
inc
jno
pop
jge
pop
cmp
call
pop
in
xor
cmpb
mov
inc
inc
cmpsl
mov
pop
bound
pop
and
mov
sub
vpcmpeqb
cmp
mov
shlb
stos
scas
add
filds
xchg
pop
mov
xchg
in
movsl
mulb
xchg
sub
add
mov
notl
cmp
mov
icebp
jmp
clc
fdivrl
xchg
xor
mov
out
lret
mov
add
dec
test
xor
data16
aad
mov
fs
push
adcb
shll
out
jns
sbb
je
cmc
enter
mov
xchg
mov
push
andl
scas
mov
mov
out
mov
cli
push
jb
cmpsb
lock
mov
inc
pop
jecxz
pop
loopne
fs
or
and
push
fwait
cmp
hlt
rorb
aas
xor
nop
outsl
sub
mov
mov
jnp
repz
out
fidivrs
mov
mov
out
lret
pop
imul
enter
loop
sarb
std
ret
lea
mov
dec
pop
mov
stos
movsb
sbb
stos
cs
inc
sahf
daa
pop
fistps
jmp
insb
jne
insl
jae
fcoms
mov
scas
fimuls
loopne
cmpsb
gs
lock
jg
shlb
dec
sti
cmpsl
dec
shrb
int
cmp
or
add
cmpb
icebp
cmpl
mov
sub
into
xor
add
nop
sub
xor
sbbb
adc
or
cmpsb
xchg
movsl
jb
out
sbbb
mov
popf
jb
inc
in
mov
dec
cmpsl
xorb
test
int
movsb
sbb
sub
mov
ret
ret
dec
or
cmc
fs
push
sub
mov
xchg
mov
or
mov
je
jns
dec
jl
mov
cs
mov
sub
arpl
mov
addr16
sbb
inc
mov
adc
loope
or
push
rcrb
ds
neg
adc
out
adc
dec
xchg
arpl
icebp
pushf
out
cmp
loopne
test
outsl
sub
dec
fwait
xchg
xor
orb
sub
imull
inc
xchg
pop
push
add
mov
incb
cld
xchg
insb
pop
xor
sbb
jno
dec
xor
cli
clc
daa
mov
xor
divl
add
hlt
inc
pop
scas
xchg
cmpsl
repz
test
mov
add
cld
iret
jns
daa
out
lret
in
fists
mov
and
icebp
std
sbb
mov
inc
in
sbb
insl
sub
fstl
aas
cmp
insb
xor
inc
aaa
jmp
sbb
mov
xchg
dec
ljmp
sub
out
dec
ds
fiadds
mov
cmp
inc
push
addr16
inc
testb
lcall
or
bound
push
rol
xchg
mov
je
pminsw
scas
leave
shll
pop
les
stos
das
push
nop
insb
sahf
xor
and
imul
push
push
mov
sti
inc
jno
xor
jnp
pop
aad
dec
xchg
sbb
pop
push
fs
lods
or
insb
xchg
or
adc
add
push
fwait
adc
sbb
loope
test
jns
notb
dec
cmpsb
xchg
lret
jg
mov
inc
jno
jmp
mov
repnz
add
bound
aas
gs
repz
cmp
idivl
push
aas
dec
add
jbe
push
adc
cld
mov
lods
adc
xchg
add
push
idiv
inc
pop
out
addr16
sarl
sbb
push
mov
mov
add
and
xchg
ja
push
push
icebp
or
lods
mov
cltd
xchg
mov
inc
push
imul
dec
xchg
popa
scas
call
out
push
out
push
or
ret
and
fstl
lea
xor
outsl
inc
sarb
mov
es
sub
or
lahf
add
jge
test
jle
das
frstor
imul
mov
pop
orl
rolb
mov
je
movsb
ficoms
cmpsb
cmp
test
faddl
enter
sbb
mov
inc
xor
push
mov
pop
or
icebp
fucomip
loopne
add
adc
insl
arpl
negb
jle
bound
mov
sbb
sbb
hlt
lea
dec
xorl
pop
adc
icebp
loopne
int
push
cmp
in
out
pop
sub
iret
inc
add
push
and
faddl
lock
push
int3
mov
loopne
mov
xor
lea
adcb
push
cs
fldt
sbb
ud0
lds
mov
mov
xchg
imul
stc
pop
fistpll
in
sbb
ss
cmp
fstpt
out
xchg
nop
ja
adc
je
daa
jnp
ret
in
jp
xchg
ficoml
and
ds
adc
cmp
lods
in
xorb
mov
lret
pop
in
sbb
pop
iret
aam
add
adc
mov
and
jl
or
imul
adc
add
cs
in
arpl
jb
sbb
data16
push
movsb
fs
jae
dec
inc
sbb
je
xchg
cmp
sbb
in
pop
pushf
add
jp
add
sti
mov
inc
mov
fadds
adc
cmp
add
and
mov
inc
pushl
push
cmc
arpl
shl
add
mov
pop
and
faddp
xchg
out
push
add
sub
enter
mov
out
mov
outsl
in
popf
insb
push
repnz
jbe
xor
push
pop
sbb
fildll
cwtl
xor
sub
inc
and
mov
push
rcl
outsl
jnp
cld
sbb
xabort
xchg
loope
test
addr16
cmc
hlt
ds
loope
stc
mov
movsl
std
lea
mov
sti
sbb
iret
push
and
push
push
and
cmp
int
stos
xor
lods
push
adc
pop
pop
iret
push
xlat
clc
mov
jbe
lds
fidivl
addr16
outsl
movsl
push
mov
xchg
and
hlt
cmc
out
lods
cltd
outsb
jg
lods
in
cmp
mov
push
sub
test
cmp
jnp
into
loop
mov
in
clc
scas
aam
cmp
mov
inc
push
mov
or
jmp
dec
mov
icebp
adc
idiv
sbb
jno
sub
cmp
insb
into
outsl
cmp
je
xor
jg
daa
loop
and
mov
in
dec
in
xor
cmc
adc
clc
pop
jb
orb
int3
mov
inc
pop
bound
imul
mov
mov
lss
js
pop
inc
jno
mov
dec
filds
push
jns
sbb
jp
gs
out
mov
das
xlat
push
jne
or
or
or
mov
roll
add
mov
xor
psadbw
add
imulb
aaa
aad
lods
stos
out
inc
xchg
rcl
jno
iret
or
xor
sbb
shlb
xorl
mov
testb
enter
push
xchg
xor
jp
mov
imulb
subb
jmp
orl
leave
loopne
xchg
push
cli
call
jp
icebp
rcl
adc
or
rolb
dec
cld
ja
enter
mov
jle
addl
dec
cmp
jg
xorl
mov
incl
fwait
jg
jnp
sbb
xchg
arpl
pop
cmpsb
sub
iret
push
mov
xchg
cltd
stos
and
sbb
out
out
sbb
xchg
cmp
rorb
incl
jle
or
movsw
out
in
fdivr
cmp
pop
push
sbb
pop
ja
add
fisttpl
cmp
adc
mov
pop
ret
in
push
jae
xchg
lcall
sbb
mov
cmp
clc
in
push
lcall
cmp
mov
lcall
loope
xchg
xchg
xchg
mov
or
pop
push
pop
addr16
shl
mov
mov
push
in
and
and
xor
mov
pop
aaa
jno
pop
lret
outsl
jns
addl
lock
and
out
repnz
movsl
mov
xchg
mov
push
adc
pop
dec
shrl
orb
mov
mulb
add
pop
and
lock
test
cmc
dec
adc
pop
mov
push
int3
sbb
jmp
inc
leave
push
sub
lds
jecxz
pop
cmc
xchg
jns
je
insl
lods
xor
push
cmpsl
loop
adc
or
repnz
rorb
sub
and
xchg
out
sbb
scas
jecxz
call
ds
in
xchg
mov
cli
push
outsb
rcrb
push
mov
xchg
push
lea
adc
in
ja
xor
jl
inc
bound
xchg
mov
test
rolb
add
mov
xchg
pop
push
movnti
jecxz
jbe
out
test
cmpsl
jp
cmp
insl
cmp
xchg
xor
and
push
add
je
push
test
and
loopne
movsb
stos
outsl
push
les
int
lret
or
pop
push
add
insb
pusha
inc
mov
and
rorl
repz
jecxz
in
jns
xor
dec
dec
aaa
and
push
xchg
inc
push
pop
push
sub
and
out
mov
data16
mov
loopne
fcomip
nop
push
mov
mov
push
cmpl
inc
inc
sub
jne
js
or
inc
pushf
icebp
push
in
ret
mov
popa
lds
dec
adc
or
or
test
iret
xchg
mov
pop
in
test
mov
sti
je
dec
fcom
rcl
sarl
out
xor
add
mov
aam
imul
fsubrl
leave
push
and
push
dec
scas
lret
jg
sub
ss
xchg
out
cmp
dec
hlt
jb
mov
add
pusha
push
das
xchg
push
sbb
xchg
mov
stos
mov
mov
cli
push
lea
pop
popa
dec
jmp
xchg
lods
lret
test
gs
mov
fidivl
imul
test
jle
dec
loope
int3
inc
push
xor
in
xor
mov
mov
daa
pop
xor
arpl
int
in
push
push
sub
loope
push
fdivrl
mov
cli
cmc
stos
movsb
push
ja
aaa
rclb
mov
pop
ret
dec
test
cld
popf
jnp
out
jecxz
adc
sbb
mov
inc
jecxz
sarb
lea
ret
pop
into
cmpsl
lcall
cmp
and
mov
push
sub
test
pop
aam
add
cltd
or
mov
fidivl
iret
outsb
fxch
dec
iret
cmp
xlat
out
dec
dec
add
cmpsb
loope
dec
insb
addb
insb
out
pop
dec
out
push
mov
push
xchg
insl
push
or
shlb
aas
daa
and
shll
mov
call
in
xchg
jbe
mov
leave
adc
cmovno
xchg
xor
mov
scas
enter
and
pop
enter
je
mov
in
test
mov
rcl
test
movsl
gs
inc
loopne
mov
xlat
fwait
loopne
es
xor
aaa
or
addr16
sub
es
xchg
imul
nop
test
cmp
push
add
movsl
mov
scas
dec
icebp
arpl
and
fmuls
and
adc
dec
into
enter
mov
add
mov
pushw
mov
jnp
in
mov
mov
mov
ret
pushf
xchg
dec
out
std
or
in
adc
or
push
repnz
jmp
or
push
daa
dec
nop
mov
jbe
pop
fildll
add
sbb
push
and
adc
or
cwtl
jp
pop
aas
ret
iret
das
push
ret
dec
aaa
mov
xor
xchg
mov
icebp
push
mov
pop
add
xchg
aas
mov
push
outsl
xchg
aad
testb
add
fcmovnb
cmp
and
inc
or
xor
add
inc
lret
cmp
push
jge
xor
xor
xorb
inc
cmp
mov
fldt
or
add
add
inc
aad
mov
out
push
stc
shlb
je
aam
hlt
or
jg
dec
std
jne
mov
cmp
jb
aad
jns
fsubs
add
in
push
sbb
test
jb
popa
repz
iret
jl
outsb
leave
xchg
sbb
sbb
repnz
xchg
addl
xchg
out
mov
sub
cmpsb
popf
cmp
mov
sbb
push
call
or
ja
push
cmpsb
dec
xchg
jo
mov
xchg
dec
jg
xchg
sub
fsubr
push
sti
pop
pop
add
int
shll
out
jb
sbbl
push
xlat
add
mov
or
outsb
jge
jle
add
and
mov
adc
jmp
inc
and
jp
mov
or
jg
push
and
aaa
xchg
xchg
fiadds
out
mov
es
enter
pop
sbb
mov
out
jno
push
jne
or
sub
or
lret
movsl
pop
cltd
and
mov
pusha
adc
inc
cmp
adc
pop
xor
sub
scas
sti
negl
movsb
js
jp
aaa
mov
mov
or
add
add
stos
jge
and
sti
pusha
inc
sbb
inc
fisttps
xor
rcll
jge
and
sbb
lcall
mov
mov
outsl
out
int3
add
adc
dec
pop
mov
push
cmp
nop
subl
cmpsb
push
pop
out
rorl
mov
or
xchg
add
les
push
push
out
adc
shr
lret
dec
pop
repz
and
leave
or
adc
jmp
dec
mov
cmp
xor
scas
mov
mov
push
aaa
fs
and
shll
daa
mov
jnp
iret
or
cmp
lea
sub
sti
mov
add
test
shll
orl
xchg
lcall
ds
iret
rolb
add
dec
adc
inc
enter
pushl
ja
cmc
repz
rolb
int
mov
dec
xchg
ja
mov
pop
rolb
ds
out
icebp
in
loop
mov
jb
lret
in
sbb
or
cmp
stc
pusha
adc
sub
dec
std
in
ljmp
inc
pop
pop
into
jp
jp
movsl
rcrb
adc
push
mov
rolb
cmc
mov
bound
fnstcw
test
jg
arpl
ret
mov
push
popf
xor
xchg
stos
pop
add
jmp
mov
sarb
mov
mov
in
shlb
insl
repnz
pop
mov
outsb
adc
xchg
mov
cltd
or
inc
mov
stos
xchg
xchg
cmpsb
lods
push
mov
arpl
or
popf
sarl
jae
loopne
fldenv
pop
les
cmp
cmc
ficompl
dec
adc
ret
aaa
insb
shl
fucomi
mov
cmc
xor
fisttpll
jmp
adc
xor
pop
fistps
sahf
sbb
mov
inc
test
push
pop
and
aas
in
sahf
subb
dec
test
leave
xchg
into
cwtl
loopne
pop
jmp
dec
lea
dec
rolb
scas
or
dec
jg
inc
xchg
adc
inc
or
ret
push
pop
ljmp
inc
pop
fdivrs
imul
mov
out
cmp
or
push
jns
in
inc
aas
xor
cwtl
inc
sbb
push
jae
xchg
mov
mov
jae
stc
pop
inc
fnstsw
sbb
mov
sub
xchg
imul
test
sub
aam
data16
lods
nop
xchg
addl
nop
and
pop
nop
and
adc
dec
cmp
fisubrl
mov
fistpl
xlat
test
imul
cmp
lret
and
cmp
popf
cld
fwait
or
mov
fwait
adc
push
mov
js
in
xor
jne
lahf
pop
pop
cmp
dec
xchg
mov
cmp
or
jne
je
outsl
and
imul
test
hlt
lcall
test
mov
pop
aam
ret
sbb
pop
fsubs
mov
sub
imul
add
fwait
xor
arpl
test
lret
enter
js
cmc
inc
fidivrs
outsl
dec
jge
test
add
aas
push
mov
jae
jge
xlat
jae
enter
enter
fnstenv
aas
dec
pop
adc
outsb
adc
in
lahf
or
imul
stos
adc
xor
jnp
jmp
and
leave
lods
inc
arpl
out
dec
lds
push
scas
icebp
and
jmp
fidivrl
or
and
add
pop
mov
xchg
jp
push
jns
iret
cmp
cmp
or
dec
lock
sub
rcr
push
in
dec
inc
lods
outsl
sbb
into
cmp
xor
lea
push
inc
push
jb
insl
fs
mov
cwtl
sub
dec
inc
inc
pop
int3
add
mov
pop
lret
ds
enter
out
imul
push
orl
lret
xor
lret
ljmp
fs
adc
jmp
inc
hlt
fcom
cmp
dec
in
movsl
xchg
sbb
icebp
outsb
aas
mov
insl
icebp
adc
test
mov
sti
xor
rcrb
or
adc
filds
nop
mov
xor
stos
cmp
adc
jge
pop
dec
lcall
pop
inc
dec
adc
dec
sub
in
add
fcomi
test
mov
call
movsb
push
xchg
adc
sub
jl
and
notl
mov
jmp
add
sub
outsl
loope
and
ret
loopne
mov
dec
sub
and
fcmovnb
pop
mov
cld
push
jmp
pop
stos
xor
arpl
leave
xchg
mov
jmp
stos
mov
and
adc
lahf
je
mov
sarb
aaa
cltd
pop
cld
lea
mov
fdivs
push
cld
xchg
repz
sub
aaa
fsts
add
mov
sbb
push
loopne
aam
mov
add
inc
inc
shr
or
cwtl
push
sub
gs
inc
sub
jb
outsl
fsubs
xchg
popf
pop
push
in
test
or
insl
in
fsubrl
cs
add
lcall
add
dec
pop
clc
add
xorps
mov
loop
fdivs
adc
pop
fimuls
mov
fwait
sbb
mov
dec
pop
and
ds
leave
dec
or
rclb
sbb
incl
test
shlb
gs
pop
insl
sub
push
xor
push
push
or
push
xlat
fldt
in
sbb
pop
outsl
daa
out
int
pop
test
adc
mov
je
cli
pop
mov
xor
div
lret
aam
add
mull
add
cmp
sahf
mov
fsubs
negb
dec
dec
bound
ficoms
jge
jbe
add
add
js
enter
cmpsb
or
insb
inc
cmp
outsl
insl
cmp
movsb
sbb
mov
inc
jp
test
xchg
pop
cwtl
test
and
adc
push
and
sbb
sahf
adc
pop
ret
sti
push
jmp
mov
addl
in
push
je
mov
pop
fpatan
jmp
add
lahf
aam
sti
add
jle
dec
fwait
or
mov
fnstsw
add
xchg
push
mov
pushf
push
fwait
mov
bound
dec
inc
aad
sarb
aas
pop
inc
push
mov
jl
outsb
push
push
cwtl
cmp
cmpsb
aas
sahf
fsubrl
xchg
adc
mov
shll
test
mov
jmp
mov
cmp
mov
mov
or
in
push
insb
jl
adc
notb
mov
push
dec
je
sbb
enter
and
adc
lea
jnp
pop
sub
sub
xor
push
test
xor
push
inc
mov
bnd
pop
sub
cmp
int3
mov
xchg
pop
loop
ss
dec
lsl
jne
or
enter
jle
sub
jo
loopne
movsb
xchg
inc
cwtl
daa
xorb
bound
into
pop
iret
push
gs
enter
xor
mov
pop
or
in
add
xchg
sti
imul
sti
sti
inc
stos
cmp
movsl
add
sbb
inc
fsubrs
jle
popa
cli
into
out
pop
clc
add
dec
stos
push
dec
rcll
ss
or
sub
jg
or
js
sub
shrb
jl
sbb
mov
out
mov
test
xchg
loop
dec
sarl
mov
jmp
add
flds
inc
mov
pop
or
cld
dec
out
adc
cmpsl
jp
dec
stc
lds
fsubs
push
inc
and
dec
mov
mov
dec
lods
js
push
scas
cltd
jb
loop
push
cmp
mov
arpl
jno
lds
adc
lcall
xchg
sarb
mov
es
in
jae
pop
outsb
sub
arpl
mov
ljmp
mov
sbb
and
adc
cs
fists
cld
stos
xchg
mov
outsb
aad
js
ficoml
cmc
mov
push
out
push
add
or
cmp
inc
out
js
pop
icebp
mov
shrd
add
xchg
mov
std
aas
add
or
lcall
dec
into
mov
sbb
inc
lcall
pop
hlt
mov
pushf
adc
jmp
xor
repnz
xchg
rcll
mul
es
lahf
xor
cmp
or
or
scas
mov
sub
cmp
cwtl
sub
in
test
xor
dec
pushl
int
fnstenv
mov
jl
sti
gs
push
sbb
push
ds
mov
sti
ljmp
lock
push
aad
jp
rol
arpl
sub
push
fcom
mov
mov
js
daa
and
dec
xchg
xor
aas
dec
das
mov
jle
and
add
idivb
mov
pop
lcall
ds
in
xor
test
test
xor
faddl
imul
in
clc
xor
das
push
cltd
cli
push
sub
nop
sbb
mov
mov
add
leave
lods
jo
add
fwait
dec
xlat
mov
daa
filds
testl
mov
fildl
xorb
mov
push
in
out
adc
xor
mov
sbb
stos
dec
push
imul
push
rcrl
jb
rolb
repnz
in
or
sbb
sbbb
inc
inc
scas
fcmovu
mov
push
adc
scas
dec
push
jp
push
dec
mov
in
lods
and
mov
jne
in
aas
sub
adc
xchg
ja
adc
ljmp
adc
mov
cmpsb
sub
jg
jmp
adc
or
pop
repnz
enter
iret
pop
mov
adc
daa
sbb
xchg
mov
sub
mov
jb
or
nop
add
jns
enter
xchg
add
xchg
pop
pop
popf
and
sub
mov
pop
aas
ss
inc
aas
cmc
lahf
icebp
sbb
lahf
push
add
jo
jno
mov
pop
es
and
and
outsl
cmp
xor
or
aaa
sbb
dec
sahf
sub
adc
rcrl
aam
xchg
inc
push
insl
scas
and
mov
jb
sbb
push
jmp
in
int3
pop
dec
mov
jo
shll
out
cmpl
es
neg
sub
xchg
ret
cmp
inc
andb
insl
inc
sbbl
pop
std
jecxz
cmp
sub
gs
push
dec
mov
jge
or
movsb
rcr
add
int
xchg
shr
mov
push
push
data16
push
adc
mov
pop
das
sub
popa
rorb
pop
fmull
pop
lret
test
inc
and
arpl
mov
enter
sub
repz
pop
cmpsl
pushf
hlt
out
cmpsb
ss
mov
jge
dec
inc
icebp
pop
je
jl
fcmovnu
loop
aam
add
adc
cmp
xchg
fwait
jae
jo
xor
dec
enter
jb
sub
mov
xchg
imul
mov
inc
int
inc
add
and
xor
push
bound
jg
ja
cld
loope
push
dec
add
xor
xorl
xor
inc
cmpsl
jl
in
bound
js
lock
mov
imul
lea
adc
fists
pop
notl
sbb
loopne
mov
sub
xchg
movb
mov
out
lahf
daa
push
out
nop
divl
stos
mov
cmc
cmpl
lcall
push
lods
add
outsl
sub
aam
pop
stc
pop
add
les
inc
xlat
sbb
enter
add
out
fiadds
or
xchg
inc
or
xor
jne
mov
fcmove
ljmp
xchg
mov
jns
or
out
pop
push
sub
mov
sarl
xor
or
cmp
push
mov
nop
sub
int3
cmp
daa
lea
push
push
sub
out
pop
jno
jecxz
push
dec
dec
mov
aad
push
cmp
and
out
push
cmp
pop
jmp
imul
inc
addr16
in
iret
add
xlat
push
cmp
insb
pop
cli
stos
pop
sub
push
cmpsb
or
test
nop
lcall
jmp
dec
into
imul
sbb
pcmpgtw
dec
es
jge
loope
or
pop
call
push
jecxz
ss
or
push
popf
xchg
sub
cmp
mov
cmpsb
jo
jbe
dec
frstor
lret
insl
outsl
mov
mov
fistl
mov
nop
or
fiaddl
lahf
cmp
lods
dec
lahf
jecxz
add
add
rorl
sub
orb
adc
add
cld
faddl
mov
xchg
addr16
aaa
pushf
sub
call
ljmp
loop
and
adc
cs
popf
lock
andb
lret
loopne
cmc
inc
mov
nop
cs
cmp
push
fxch
pusha
adc
sbb
jmp
cmp
inc
shll
clc
ss
fcomps
xchg
std
jae
ss
or
jae
or
out
mov
push
xchg
movsb
xchg
in
in
cmp
sti
gs
cmpsb
stos
gs
jmp
jp
fs
lock
ret
sbb
xchg
mov
cmpsl
sbb
add
and
pop
mov
outsb
aas
push
fmulp
in
cmp
xor
mov
sahf
popa
and
xor
lcall
fs
mov
adc
pop
test
mov
mov
jecxz
out
mov
or
enter
cmp
push
fdivrp
adc
int3
inc
pop
mov
stos
cpuid
sub
roll
pop
ds
xchg
decl
adc
adc
fsub
pop
xchg
lahf
push
pusha
bound
clc
jp
out
pop
test
insl
mov
loope
sarb
inc
cltd
jne
mov
cmpl
jle
xchg
dec
sahf
jae
xchg
lds
mov
jg
dec
push
xchg
inc
lret
popa
pop
sbb
insl
fcoms
add
addr16
pop
pop
xchg
fnsave
fisubs
sahf
fyl2x
pop
out
cmp
xchg
stos
xchg
mov
popa
out
or
les
pop
mov
insl
add
inc
adcl
pop
test
pushf
xchg
je
cld
pushf
subb
or
cs
es
dec
sub
push
jns
inc
fs
nop
mov
ret
mov
sbbl
adc
sbb
bound
cmp
pop
mov
jno
xchg
xlat
stos
jecxz
mov
pop
cmp
ficoml
idivl
into
ret
outsb
xor
add
or
subb
aad
jmp
push
push
sub
sbb
out
sar
lret
sbb
cmp
clc
stos
xor
xchg
pusha
adc
cli
mov
loopne
inc
fnsave
jecxz
dec
xchg
lret
add
arpl
cwtl
inc
add
push
cs
or
dec
xor
mov
fcomip
and
in
leave
inc
out
jmp
cwtl
mov
stos
outsb
ss
xor
int3
pop
test
hlt
mov
imul
cmp
bound
inc
mov
popf
mov
leave
cmpsl
movsb
dec
out
or
push
jne
lret
in
jne
sub
fidivl
pop
add
push
jecxz
negb
sub
sub
ret
cmp
adc
test
aam
or
inc
inc
aaa
push
adc
jp
arpl
cmpsb
mov
inc
jae
pop
cltd
fwait
mov
shlb
push
mov
jmp
inc
in
mov
sub
repnz
das
dec
mov
inc
in
jnp
repnz
ss
pusha
dec
xor
push
or
xor
ret
test
fwait
inc
push
test
in
adc
mov
push
or
jp
inc
jne
adc
fldenv
inc
jp
fimull
lock
ljmp
lods
sbb
xchg
xor
in
cmpsb
and
push
icebp
ret
ja
mov
lock
fildl
mov
sbb
push
adc
and
cltd
addr16
add
push
lahf
loop
imul
adc
pop
and
cltd
imul
ret
push
int3
pop
xor
and
xor
aam
lea
sbb
lret
lods
pop
lea
fwait
xor
or
loop
fucom
cmp
inc
iret
jne
sti
pop
mov
sub
fisttps
cmp
dec
inc
es
xchg
sub
cmp
jns
pusha
push
inc
jbe
cmpsl
jle
scas
cmp
mov
adc
shll
xchg
add
jne
fs
dec
test
out
mov
xor
shll
out
mov
shl
ja
xor
xchg
lret
jl
push
xchg
adc
xchg
add
mov
lds
jle
shll
pop
in
test
pop
imul
pushf
mov
scas
dec
in
popl
in
pushf
xchg
rclb
js
test
ja
mov
in
jno
push
leave
sub
ss
cmp
lret
repnz
fidivl
lret
pop
loop
andb
daa
sti
xor
dec
fldcw
or
mov
into
mov
xchg
addr16
rcrb
xchg
add
mov
loope
pushf
lds
cwtl
gs
cld
push
shrl
arpl
sub
and
cmp
cmp
clc
mov
out
push
inc
mov
test
mov
jg
mov
stc
sub
or
cmp
int
mov
rorb
jns
imul
push
push
mov
popl
in
fidivs
cmp
test
mov
mov
pop
jl
stos
les
xchg
loop
and
mov
mov
add
test
sub
push
and
jns
mov
xor
cmp
icebp
push
int3
cli
mov
daa
ret
out
daa
and
mov
fs
mov
iret
cmp
xor
mov
dec
jbe
jbe
or
addr16
dec
cmp
xor
xchg
or
adc
adc
xchg
movsb
cmp
xor
stos
xchg
adc
sbb
adc
cmp
mov
pop
mov
out
mov
lret
xchg
loopne
hlt
cwtl
mov
add
into
inc
stc
fdivl
mov
add
cmp
nop
je
lods
sti
add
adc
subl
and
push
into
hlt
mov
cltd
aam
into
add
in
push
loopne
and
xchg
lcall
sub
fsub
movsl
pop
and
movsb
test
out
ret
popf
xchg
data16
gs
or
mov
js
stos
adc
pop
in
lea
dec
test
pop
sub
adc
xchg
adc
or
sbb
add
pop
popf
aad
pusha
sbb
insl
popf
lret
ret
sarl
adc
daa
mov
dec
pop
icebp
pop
lcall
pop
sub
pop
jl
nop
fnsave
adc
jbe
inc
imul
sub
shl
fbstp
xor
fstl
xchg
and
or
insl
sub
mov
daa
popa
pop
jbe
mov
mov
add
cmp
flds
sub
iret
pushf
ja
test
sub
test
fstps
mov
in
adc
xor
lret
inc
adc
mov
inc
pop
mov
sub
decl
mov
repnz
ja
sahf
cmpsb
xchg
xor
mov
xchg
les
cmpsb
adc
aad
mov
lods
jl
cmp
and
test
test
outsb
dec
mov
sub
out
in
jns
and
xor
push
sarl
push
pusha
sti
out
xchg
gs
push
jecxz
jne
adc
xlat
mov
subb
ss
mov
push
aad
pushf
int
xchg
sub
push
popa
sub
mov
add
cld
fldt
sub
movsb
mov
and
and
in
fidivrs
sub
push
adc
sti
pushf
dec
or
and
pop
shll
cwtl
mov
xchg
and
cli
pop
ds
sti
dec
fmulp
popf
xor
pop
xchg
add
sub
and
lds
add
fwait
inc
out
xchg
jecxz
ret
push
push
push
fucomp
outsl
xchg
add
mov
je
rol
mov
movsb
test
mov
mov
and
ret
fucomp
cmpsb
aam
and
lods
out
repnz
cmp
std
mov
mov
cltd
imul
jnp
add
cwtl
sub
jb
push
aaa
loope
cmp
addl
push
xchg
dec
das
mov
sub
mov
scas
loopnew
pop
xor
jbe
cmp
push
mov
push
xlat
jnp
mov
cli
xchg
mov
lods
shrl
xor
or
fcos
bnd
loop
lcall
lret
loop
mov
lods
xchg
pop
out
dec
add
inc
mov
mov
adc
inc
and
stc
mov
inc
push
fimuls
int
lcall
movsb
retw
je
leave
mov
sbb
cmc
jecxz
bound
fnstsw
pop
jg
rcrb
xor
test
lahf
fildl
cmp
stos
or
sub
lods
aad
std
bound
pop
inc
xor
pushl
in
ret
in
in
call
cltd
xlat
out
sub
notb
xor
out
adc
negl
jmp
and
std
adc
or
or
aaa
cltd
dec
xor
inc
xor
in
and
aaa
in
jmp
mov
push
les
cmp
ja
xchg
pop
jl
lcall
loop
outsl
mov
hlt
jp
mov
movsl
sub
cmpl
test
clc
inc
xchg
cmpsl
ret
xchg
sbb
shl
or
jbe
inc
mov
pop
lds
cmp
jno
add
jbe
pop
pop
insl
or
mov
cmpsb
movsb
cmp
push
arpl
shll
or
repz
mov
js
lods
mov
pop
cmp
jmp
pop
ss
orl
dec
mov
cli
dec
andl
pop
jp
mov
xchg
xchg
or
adc
pop
sbb
cwtl
jl
imul
xor
ja
cmpsb
sub
mov
and
adc
inc
dec
dec
mov
mov
or
pop
lods
push
cmp
loopne
mov
inc
int
insb
andl
enter
pop
jmp
and
mov
rcl
dec
aam
lea
mov
pop
lock
ret
add
imul
insl
mov
mov
adc
sub
add
and
ret
pop
pop
cmc
adc
aad
jle
rclb
fs
shll
cmpsl
js
pop
movsl
sub
inc
and
jmp
cli
icebp
and
movsb
cmpb
push
xadd
call
scas
lret
cld
fcoms
sti
ror
push
adc
adc
rcll
dec
test
in
inc
jno
cmp
sub
in
xchg
lahf
or
aaa
dec
nop
pop
mov
stos
pop
repnz
push
cmp
inc
cmp
fsubrs
bound
scas
cltd
cmc
push
int
in
push
fsts
xor
inc
into
filds
daa
mov
cmp
and
mov
lcall
sub
push
ficomps
std
mov
push
dec
rcrb
aad
lds
mov
sbb
jl
mov
push
push
shll
ror
lods
xchg
jae,pt
push
int
pop
cmp
mov
sub
jae
ljmp
lcall
mov
push
test
daa
pop
mov
or
inc
jb
mov
push
loopne
fdiv
mov
xchg
jg
cmpsb
mov
and
adc
mov
jmp
jl
pop
lock
shl
cmc
or
sbb
xchg
shl
stos
cmp
sub
ja
push
mov
leave
in
push
inc
jno
mov
dec
pop
gs
out
push
int3
hlt
aad
cmp
sub
rcl
loope
movsb
insl
cltd
iret
test
xchg
shr
mov
or
aad
cmc
das
and
pop
inc
push
push
pop
lcall
sahf
ja
std
jns
aam
nop
aad
ficompl
in
icebp
addr16
jne
push
gs
out
enter
cmp
enter
ftst
cmp
sub
mov
roll
jns
xchg
jae
add
mov
xchg
and
and
xor
lods
jne
mov
sbb
xchg
xchg
sbb
and
leave
cmp
dec
add
lahf
outsb
ffreep
mov
je
push
dec
lds
lcall
enter
imul
mov
fs
mov
add
add
iret
movsb
test
pop
jle
pop
lahf
test
fdivr
insl
test
fcomp
lret
lret
cmp
daa
movsl
out
lret
inc
sbb
fcmovb
call
fdivrp
push
sub
dec
jp
sub
int
lret
fmull
adc
je
ret
stos
mov
mov
mov
pop
mov
pop
mov
cwtl
stos
jb
lret
xor
cmp
fs
xor
stc
pushl
add
xchg
jb
dec
loopne
sbb
fldl
sbb
jnp
cs
jnp
cmp
pop
push
dec
js
outsb
jl
pop
mov
imul
mov
mov
loopne
jge
stos
test
testl
adc
push
or
shrl
dec
mov
cmc
mov
cltd
or
sbb
xchg
mov
mov
loope
pop
lea
jns
xchg
test
mov
mov
mov
mov
inc
lods
push
push
cmp
cmp
iret
mov
and
dec
adc
sahf
mov
int3
outsb
adc
jae
mov
in
pushf
js
ss
inc
dec
std
out
fiadds
imul
adc
dec
mov
adc
adcb
inc
inc
inc
mov
inc
and
inc
rorl
mov
sub
pop
outsb
mov
leave
mov
test
into
jo
jne
andb
lcall
sarl
push
jg
imul
loopne
stos
movsb
dec
jo
xor
aad
scas
inc
adc
mov
sbb
int
dec
or
inc
mov
add
mov
cs
lea
push
flds
mov
sub
inc
out
jg
pop
mov
jno
adc
inc
sub
push
int3
andl
call
test
add
aad
cmp
out
es
cmp
fstp
ds
push
cmc
rolb
jae
and
cli
lods
jo
jecxz
mov
and
test
cwtl
jle
adc
xlat
xor
jmp
mov
or
jbe
pop
aad
mov
repz
shrl
sbb
pop
in
scas
cwtl
cli
adc
mov
push
mov
pop
scas
std
mov
xchg
add
jae
pop
cmp
jmp
rclb
or
mov
dec
mov
inc
aam
jl
adc
add
push
movsl
fidivrl
loopne
lds
and
pop
cmp
int3
sbb
inc
stos
ret
mov
cmpsl
into
cwtl
fisubl
loope
lcall
jae
orb
sbb
iret
clc
lea
stos
xor
filds
popf
aam
xor
mov
into
imul
int
xor
lods
insb
js
repnz
add
int
nop
pop
xchg
push
fs
daa
jmp
int
rol
xor
push
mulps
outsl
cmp
push
push
scas
ja
enter
jle
add
sti
cmpsb
add
stos
rorb
divb
ds
mov
xchg
add
xchg
push
js
imul
cmp
and
or
cmp
mov
sbb
hlt
jb
push
push
pusha
cmp
push
dec
push
jl
or
mov
push
or
mov
in
mov
out
popa
fs
stc
in
das
pop
movsb
pop
add
ficoms
out
das
add
adc
sbb
pushf
and
je
add
sbb
push
ja
xchg
jo
scas
jne
in
jle
divb
sti
xor
sbb
fnstenv
dec
mov
in
inc
lret
frstor
and
mov
hlt
push
insb
cmp
push
xchg
mov
rolb
sub
mov
js
and
xchg
sub
sub
out
push
mov
xchg
insl
xchg
inc
test
jecxz,pt
imul
movsl
inc
inc
std
cmp
add
ja
pop
dec
adc
push
pop
aaa
bnd
andl
pop
iret
jno
aam
xorl
mov
fidivl
or
stc
int3
jae
or
scas
in
aad
add
xlat
jne
adc
cmp
push
dec
clc
jp
decl
stos
shrl
or
xchg
lcall
inc
inc
cli
sbb
mov
loope
in
lea
adc
mov
inc
movsb
bound
sbb
xor
cmc
ljmp
sub
insb
mov
lds
push
das
dec
dec
sub
mov
xor
jge
mov
outsb
aad
push
mov
pop
push
call
push
scas
sbb
lods
cmp
mov
mov
aam
xchg
icebp
pop
pop
sub
push
pop
mov
stos
jns
mov
sub
add
notl
sub
and
xor
gs
aaa
xor
icebp
push
push
pop
cmc
ret
test
call
push
clc
or
cld
jae
jge
je
rorl
out
mov
popa
in
push
ficoms
lds
mov
xchg
sbb
cld
rcrl
pusha
dec
enter
lahf
movsb
mov
push
and
xor
lods
cmpb
mov
shll
sbb
and
ret
jno
inc
fnstenv
lds
in
push
adc
sub
pop
push
out
lds
ljmp
sub
hlt
jnp
out
mov
fiaddl
xchg
adc
fmuls
out
mov
mov
test
adcb
add
add
insl
js
outsl
and
xor
pop
pushf
inc
pop
mov
popl
xor
adc
sub
mov
dec
hlt
inc
and
ret
push
incl
jecxz
lds
repnz
les
mov
jne
fstpt
sub
imul
into
cmovns
aaa
cmc
cmc
cmp
xorb
mov
mov
cwtl
or
cmp
dec
pop
sbb
sub
push
lcall
jae
dec
vpxor
dec
pop
movsl
fdivr
stos
movsl
jbe
lods
xchg
dec
and
push
mov
int
scas
sti
jle
outsb
nop
in
icebp
adc
lea
push
call
push
aad
jecxz
inc
shrl
in
imul
rcll
out
dec
lret
stos
js
std
sbb
stos
push
lods
adc
dec
mov
inc
aam
xor
lea
ret
dec
outsb
xchg
mov
jne
xor
push
out
jl
mov
dec
mov
stos
iret
xor
fsubl
cmpsb
rolb
add
loopne
inc
lock
and
mov
add
xchg
pop
fidivs
and
cli
test
popf
and
inc
jge
mov
jge
xor
add
ljmp
push
js
dec
sub
into
pop
imul
movsb
push
mov
adc
lods
adc
mov
dec
ret
insb
jecxz
cmp
movsb
sbb
je
cwtl
sbb
ret
movb
dec
inc
scas
sti
cmp
or
cmp
pop
pop
cmpsl
sub
and
xor
cmp
out
inc
mov
sub
sbb
add
loope
adc
push
mov
insb
fcmove
jmp
popa
sbb
add
push
sub
cltd
cltd
add
push
mov
out
jno
adc
scas
in
push
fwait
mov
popf
pop
xlat
cmpsl
lods
push
das
cltd
or
mov
ss
inc
lea
mov
cmp
mov
jge
loop
mov
das
and
adc
imul
aaa
pushf
popa
and
sbb
test
sbb
mov
ret
jne
lods
push
mov
adc
mov
jno
add
pop
cwtl
adc
dec
in
imul
pop
add
out
mov
mov
pop
mov
mov
outsb
cmc
jecxz
ljmp
inc
enter
push
popa
xorb
sbb
fmuls
dec
mov
sub
loopne
popf
jno
addl
cmpb
imul
cli
jmp
adc
push
mov
push
push
jne
push
les
jge
mov
imull
arpl
xor
shr
mov
fwait
inc
mov
iret
out
sbb
sahf
out
jecxz
clc
movb
jg
jne
sub
int3
cmpsb
mov
jo
sub
out
out
std
mov
push
fcmovb
es
clc
cmp
and
in
cwtl
sahf
jae
scas
cli
call
adc
pop
dec
jp
lret
cmp
aas
xchg
adc
sbb
mov
mov
dec
push
test
and
add
mov
arpl
xchg
cmp
pop
add
loopne
push
dec
ja
cmp
mov
cmpl
sbb
and
js
sbb
stos
add
xor
lret
sti
popf
sahf
jmp
bound
adc
xor
testl
jl
insl
pop
push
test
and
lods
push
mov
mov
imul
orb
rolb
xor
mov
cmp
adc
pop
push
test
std
jecxz
fdivp
pusha
shll
jmp
fidivrl
lret
shl
lahf
jmp
ror
lods
mov
or
push
mov
push
int
scas
mov
test
mov
jg
lret
sub
mov
sbb
add
and
movsl
or
fs
adc
push
jb
insb
sub
cmp
subb
sbbl
cmp
adc
push
sbb
mov
shlb
lea
cltd
lret
shll
test
adc
dec
mov
mov
shlb
aad
or
lcall
aad
or
mov
mov
in
push
jae
jge
dec
inc
mov
gs
leave
and
icebp
or
mov
add
jecxz
orb
fildll
sub
or
adc
in
cmpsl
in
push
push
out
int
jb
jmp
inc
fadds
or
xchg
lret
cli
jecxz
add
mov
dec
daa
call
xor
loop
ss
in
jg
arpl
fisttps
or
fldenv
loope
je
lds
jne
push
repnz
lret
xor
imul
popf
ljmp
xchg
pop
arpl
or
dec
popf
pusha
add
adc
cmp
xor
push
and
inc
add
xchg
enter
pop
xor
add
xchg
jp
pop
pop
inc
pop
lcall
lods
push
or
lock
mov
pop
push
aad
scas
call
addr16
js
mov
icebp
or
xchg
sbb
sub
xchg
fucom
push
jbe
daa
mov
aam
in
and
lea
sub
sbbb
add
inc
adc
movsl
inc
loopne
lock
outsb
popa
sub
xchg
mov
iret
add
ljmp
sahf
cltd
daa
xchg
and
xchg
cld
mov
jl
and
xor
xor
mov
and
sub
js
cs
push
cmp
cmpsb
call
sbb
sub
push
xchg
lods
sbb
dec
inc
push
arpl
lock
int3
aas
mov
push
add
jge
push
out
dec
ret
jmp
call
mov
mov
ss
xchg
leave
cmpsl
inc
xor
xor
mov
int3
push
fnsave
inc
inc
xor
imul
add
push
or
jns
mov
inc
push
int3
xchg
lods
mov
or
pop
dec
call
and
flds
sbbb
insb
sub
stos
data16
shl
mov
lcall
fidivrs
push
sub
sbb
fildl
and
mov
sub
sub
imul
jecxz
sbb
push
repnz
xchg
push
fiaddl
pop
jns
xor
mov
mov
sbb
add
in
daa
and
sbb
fsubrs
addb
pop
jne
lret
popa
mov
mov
icebp
jbe
icebp
jne
iret
int
lods
fisubs
inc
and
in
and
das
add
mov
add
push
bound
or
clc
lock
stos
sbb
sbb
xor
popa
and
xor
and
in
scas
divb
mov
out
mov
xchg
pop
add
push
test
xchg
test
push
mov
pop
int
and
pop
and
scas
hlt
push
rcrb
jmp
clc
test
js
xlat
push
mov
inc
sbb
pop
in
sub
in
sub
sub
ja
fidivs
xchg
jae
test
pop
push
in
mov
cli
inc
cmp
mov
shl
icebp
and
inc
add
or
mov
lahf
mov
cwtl
xor
pop
shll
rorb
push
fdivrp
or
idivl
fcoms
mov
arpl
and
pop
jns
or
popf
cltd
push
mov
rcrb
or
sbb
fmull
faddl
in
mov
mov
sub
insl
dec
pop
jnp
or
mov
sahf
cltd
sahf
loop
sbb
pop
sub
popa
xorb
sbb
push
je
adc
scas
icebp
and
inc
jg
cmpsl
pop
push
lcall
cmp
cmp
add
mov
sub
cmp
lea
aas
adc
fst
mov
inc
or
nop
or
sbb
mov
push
rcrb
add
lds
add
loop
cmp
dec
mov
dec
or
mov
xchg
mov
sub
inc
or
xorl
jecxz
mov
lock
pushf
repz
leave
push
and
xchg
and
addr16
mov
lahf
call
sub
and
mov
fildll
mov
je
and
inc
push
in
stos
orl
sbb
scas
sub
pop
insl
das
scas
mov
cwtl
fcoms
jle
dec
loop
in
lahf
cltd
sbb
aas
lahf
or
hlt
mov
daa
hlt
inc
mov
sarb
jecxz
push
repz
lods
adc
notb
and
or
jl
push
cmp
add
push
mov
sbb
xlat
roll
jno
ret
aam
inc
aam
jmp
scas
and
jnp
jbe
inc
jp
adc
sbb
cld
bndstx
mov
scas
idivl
mov
adc
mov
js
shll
jg
jecxz
push
scas
push
sahf
jo
cmp
jae
std
fwait
and
and
jecxz
xacquire
rol
jecxz
cmc
rolb
mov
sub
mov
dec
out
xchg
and
or
dec
mov
int
xor
iret
pop
in
cmp
cmpsl
pop
xchg
out
les
ss
jne
xor
mov
loope
xor
pop
ds
sub
arpl
push
mov
xchg
in
add
xchg
mov
aam
insl
lds
jbe
je
out
mov
insb
ja
xor
test
inc
in
cld
push
scas
cmpsl
or
dec
sub
psraw
jge
mov
inc
dec
lcall
xchg
adc
js
mov
jb
fdivrs
sbb
or
pop
fildl
outsl
cmpsb
xchg
aad
sub
sbb
xor
hlt
xchg
inc
cmc
mov
or
or
mov
push
out
adc
mov
sarl
stos
and
insl
push
cmp
add
cld
cli
repnz
jle
pushf
adc
sti
js
pop
addr16
jbe
inc
fldt
clc
push
cmp
dec
lea
jnp
mov
inc
es
sub
xchg
mov
xchg
and
movl
mov
out
sahf
mov
mov
cmp
or
stos
mov
aaa
add
or
add
dec
add
loope
inc
icebp
jae
sbb
outsb
xor
ja
or
xlat
push
mov
xchg
inc
andl
ret
testl
out
pop
mov
xor
pop
or
movsl
int3
loope
sub
mov
cld
cmp
sbb
push
xchg
mov
ret
outsl
movsl
call
ret
arpl
adc
dec
adc
pop
jmp
mov
sub
jbe
cli
jne
mov
ret
xorl
cltd
xor
adc
jae
add
fldt
push
jo
test
pop
inc
addr16
mov
mov
sahf
sub
mov
mov
aaa
aaa
mov
shrb
or
cmpsb
ret
incl
and
or
xor
adc
es
pop
lock
mov
cmpsl
lods
pop
mov
fnstenv
push
push
jae
xlat
repnz
inc
jbe
cmp
cmp
sub
dec
das
push
clc
outsl
lods
sub
lret
cmpsl
sbb
inc
sbbl
push
notb
es
or
mov
or
dec
inc
orl
jg
shll
mov
adc
mov
adc
inc
or
hlt
aas
sahf
mov
sub
xchg
xchg
push
stc
pop
scas
negl
testl
xchg
sub
lret
test
dec
fisttps
cmpb
xchg
in
fiaddl
lods
imul
and
adcb
notb
test
xorl
push
notb
lret
cmp
sbb
lcall
inc
pusha
mov
adc
cmc
out
push
ja
rcrb
cmp
jnp
scas
xor
pop
pop
daa
jmp
jnp
movsb
xchg
test
add
mov
cmp
or
xor
push
in
insl
mov
jecxz
push
movsl
lret
mov
xchg
pop
test
rorb
call
cwtl
loope
mov
mov
pushf
cmp
jg
mov
pop
pusha
ds
cmpsb
cs
fcoml
mov
je
roll
pop
aam
pusha
fs
pop
popf
inc
das
in
jb
cmpsl
mov
daa
xor
nop
sub
inc
xor
lret
or
int
data16
popa
push
test
pop
mov
aas
add
das
and
jne
loop
sub
mov
and
adcb
or
sub
cmpb
jge
pop
repz
inc
or
cmp
shll
pop
fcmovbe
mov
jno
outsl
inc
mov
mov
daa
sahf
arpl
scas
or
mov
pusha
sbb
ss
jmp
fiaddl
jne
outsb
popaw
out
jne
sub
and
shr
int
jae
mov
lea
push
or
mov
push
aas
jge
jbe
pop
repnz
scas
fs
sbb
inc
stc
addr16
cmp
sub
lods
push
shr
add
repnz
jmp
push
pop
adc
int
call
cmc
or
movq
out
inc
stos
inc
call
dec
dec
ret
xor
jne
push
push
mov
mov
mov
iret
xchg
aad
adc
repz
aas
lahf
jno
mov
xor
lcall
pop
mov
mov
sbb
inc
out
test
inc
ret
xchg
cmp
pop
sub
sbb
add
push
stos
out
cmc
cli
and
mov
jge
xchg
push
mov
out
outsl
fsubrs
mov
jecxz
push
xorl
jnp
inc
cmc
mov
lret
out
push
xchg
push
sub
mov
adc
pop
xchg
popf
es
sar
sub
push
gs
lret
sub
inc
mov
push
push
stos
and
pop
inc
jmp
mov
jle
xchg
cmp
and
mov
cmp
arpl
fwait
arpl
cmp
fistpll
jb
in
stos
sahf
stos
cmp
mov
push
notl
in
repnz
and
mov
rclb
sti
push
jg
jbe
repnz
subb
movl
testb
adc
push
xor
out
push
mov
add
out
push
mov
inc
sbb
or
dec
jmp
xchg
vpsadbw
daa
jbe
and
mov
lea
divl
leave
cli
loopne
or
ds
stc
sbb
lahf
fcoms
xor
ss
pop
add
jecxz
xor
pop
hlt
sub
cmp
jns
lds
popf
int
scas
pop
invd
jle
les
push
neg
push
jae
popf
dec
test
sub
movsl
inc
ljmp
push
cltd
mov
call
iret
jbe
gs
jg
push
adc
add
outsl
cmp
imul
and
cmp
fcmovne
notl
dec
paddsb
and
sub
inc
clc
lds
aad
mov
movsl
ss
dec
xor
fdivs
jmp
jo
fsubrs
cs
sbb
cmpsb
mov
scas
sub
and
incb
push
js
sbb
or
cmp
xor
sub
mov
outsl
dec
je
cwtl
test
out
jl
adc
sub
xor
lret
orb
je
scas
adc
addr16
and
aas
mov
sahf
cmp
add
push
sbbl
mov
mov
imul
ret
outsb
mov
fnstcw
incl
aaa
int3
push
aaa
insl
outsl
fsubrl
push
mov
xor
xor
pushl
xchg
add
mov
clc
pop
mov
out
ds
sbb
mov
mov
sbb
in
dec
or
iret
ret
loop
outsb
push
adcl
addl
mov
push
test
push
xchg
scas
jecxz
icebp
push
push
mov
into
or
or
mov
and
push
xor
mov
ds
cmc
sub
push
mov
push
daa
fs
dec
jmp
cmpsl
test
jecxz
out
iret
pop
roll
mov
scas
movsl
in
repz
sub
sti
push
setnp
cltd
dec
icebp
add
jmp
aad
outsb
mov
ret
ret
xchg
loope
push
rol
mov
outsb
lods
jecxz
je
cmpsl
mov
fnstenv
jmp
out
pusha
inc
stc
jb
jecxz
cmpsb
cwtl
push
pop
gs
aam
inc
pop
into
cli
push
test
dec
test
call
in
jg
xchg
cld
cmp
dec
mov
rcrl
neg
mov
pusha
or
dec
add
and
mov
sub
xor
mov
dec
mov
leave
dec
in
ret
sub
inc
into
or
jnp
sti
and
sahf
and
push
jns
pop
dec
call
sub
enter
mov
and
push
push
outsl
daa
scas
mov
or
mov
cmp
gs
pop
cmp
popa
xor
pop
sbb
pusha
add
imulb
out
xchg
lahf
mov
and
in
dec
inc
pop
outsl
inc
rcll
fcmovb
sub
xor
pop
repz
fimull
cmp
sahf
jne
push
test
sub
test
inc
in
push
jno
fistl
in
imulb
ja
pop
mov
call
ror
dec
push
addr16
cmp
adc
xchg
mov
clc
cwtl
shlb
xchg
add
sub
leave
mov
das
test
out
xchg
bound
xchg
movsl
call
imull
cltd
mov
adc
mov
js
pushf
sar
pop
das
fwait
sub
jnp
xor
jge
imul
test
mov
xchg
sti
and
mov
loop
pop
push
jne
fs
cwtl
in
lock
jge
and
cmp
lods
test
sub
push
out
or
push
stos
and
cmp
fildl
je
cmp
aas
fucomi
xor
testl
mov
sub
pop
ret
xchg
repz
xor
cmp
pop
fdivs
xor
jno
xacquire
jo
cli
sti
push
sub
cmp
jmp
jo
and
push
cmc
and
je
sub
aam
or
fcmovbe
mov
mov
pop
add
aam
push
lret
adc
rorb
cli
jne
aam
or
jnp
push
add
in
push
cmp
outsl
cmc
rcl
push
ret
sahf
jmp
adc
lea
data16
add
mov
sbb
popa
imul
jb
cltd
pop
mov
jmp
in
stc
pop
lret
dec
stc
or
mov
xor
aaa
or
ret
cmp
xor
movsl
pop
xorl
ret
inc
test
xchg
fs
xor
jns
std
int3
inc
leave
push
call
push
xor
fcompl
mov
sbb
int3
into
aas
jb
in
clc
stos
mov
aas
mov
sub
daa
push
mov
xchg
cmp
pop
lock
lret
cltd
cmc
enter
xchg
jbe
adc
pop
sar
dec
cs
rorb
mov
out
jns
add
aas
mov
push
jb
das
cld
mov
pop
pop
pop
and
insb
mov
lahf
outsl
push
sti
pop
pop
out
pop
push
leave
aad
xor
cltd
xlat
mov
subl
xchg
movsb
mov
cmp
imul
mov
push
push
mov
pop
add
push
in
icebp
xor
rclb
pop
xor
cld
loope
push
call
mov
sbb
and
cmpb
xchg
lahf
xlat
mov
fstps
sub
lret
ss
sub
cld
jge
or
xchg
fsubs
hlt
jo
aam
xlat
faddl
gs
adc
addr16
imull
sbb
sub
mov
xor
lahf
icebp
mov
sti
popa
iret
mov
adc
jecxz
movsl
xlat
fisubrl
decb
or
ret
push
push
call
jmp
arpl
mov
sbb
stc
popf
out
inc
repz
inc
daa
repz
push
notb
movsb
test
mov
jge
cld
pop
push
xor
xchg
dec
aad
ljmp
cmc
fimull
test
out
sub
jge
cmp
daa
movsl
sbb
aam
lds
test
movsb
or
dec
test
aas
xchg
aaa
loopne
xchg
push
call
sub
adc
jae
out
jne
adc
sbb
lahf
lahf
cmp
pushf
push
dec
fs
fstps
xor
clc
push
idiv
sbb
daa
dec
test
adc
mov
std
dec
icebp
imul
inc
orl
leave
or
fmulp
mov
cmp
pop
sti
popf
pop
das
jle
adc
jae
cmp
je
int3
call
jo
shlb
icebp
imul
pusha
xchg
or
enter
or
fimull
cmpsb
gs
inc
sahf
sbb
leave
lret
inc
xor
push
xchg
andb
repnz
pop
push
xlat
aas
dec
fcoml
jnp
or
cmp
inc
pop
outsl
jle
scas
inc
clc
add
rcrb
jmp
pop
lods
mov
cmp
jne
sbb
fmuls
jnp
scas
das
cli
and
sub
inc
inc
mov
push
and
xchg
in
jle
es
stos
sbb
and
lret
arpl
jp
test
inc
cwtl
dec
lgs
out
xchg
movsb
ss
jb
dec
imul
inc
ja
cs
paddd
aad
mov
pushf
in
sbb
insl
subl
loop
cmp
repnz
xchg
imul
add
sbb
movsb
mov
or
sbb
push
dec
and
popf
and
fwait
cmpsb
fs
out
out
or
sti
xchg
xorl
outsl
gs
stos
add
loopne
jne
dec
pop
in
out
test
into
fs
add
lea
inc
sti
jns
aam
not
sbb
outsb
push
je
cli
mov
shlb
int
push
aaa
movsb
lret
and
jae
sbb
mov
jne
jb
aad
out
or
cmc
jmp
mov
push
iret
pop
push
bound
fstpl
or
out
mov
adc
cmpsb
sbb
jae
mov
rol
adcl
jecxz
loop
repz
in
sub
popf
lds
inc
rcl
inc
sti
sti
std
sti
es
shr
rcll
push
mov
adc
cmpsb
jmp
xchg
lcall
loopnew
cmpsl
popa
cmc
fiaddl
sbbl
jo
mov
fstpt
and
cwtl
push
xor
cmpsl
out
test
shll
mov
mov
add
jecxz
pop
ljmp
add
das
repz
cmp
ljmp
icebp
rclb
test
xor
fs
scas
add
rolb
jle
cs
inc
fwait
js
mov
int3
adc
js
sbb
and
jmp
dec
cld
pop
jns
xor
add
fcmovu
sub
clc
jl
std
repz
xor
dec
xor
mov
pop
xlat
adc
jns
mov
xchg
dec
or
mov
cs
clc
test
fisttps
xor
xchg
daa
mov
add
enter
in
mov
test
adc
and
test
inc
imul
fisubs
shrl
test
xor
dec
cmp
add
dec
push
inc
mov
dec
je
fs
je
sub
jne
sbb
sbb
adc
jae
adc
movsl
pmaddwd
pop
push
dec
push
mov
int3
inc
xor
xchg
enter
jne
mov
sti
sarb
and
push
push
pusha
lods
pop
pop
inc
inc
jg
fmuls
xchg
adc
ss
in
enter
into
das
or
shl
inc
mov
adc
movsl
inc
bnd
mov
das
pushf
xor
ret
les
push
cmc
roll
jno
stos
xor
mov
clc
sbb
sub
dec
lret
sbb
cltd
xchg
clc
mov
aad
jmp
icebp
mov
push
scas
jno
stos
dec
push
jecxz
mov
fldt
mov
aam
ljmp
jns
addr16
push
pop
je
movsl
jae
shrl
push
pusha
addb
sub
mov
das
scas
dec
data16
jge
pop
add
repz
fnstsw
in
test
test
mov
in
fdivr
cwtl
dec
inc
pusha
ret
lahf
test
sbb
push
adc
std
sbb
pop
cwtl
mov
call
addr16
test
add
popa
aaa
daa
cmp
xchg
mov
stc
pop
mov
jb
pushl
add
cwtl
and
lea
std
loopne
ljmp
shl
insl
push
adc
int3
pop
and
mov
in
aad
rcr
in
rolb
inc
jl
and
sbb
loopne
fstl
inc
insl
inc
fs
sbb
push
adc
jl
jb
sub
adc
cmc
ret
dec
cmc
push
data16
movsl
jle
inc
pop
dec
push
adc
out
popf
gs
test
mov
mov
and
sbbb
xchg
pusha
in
or
imul
and
push
xchg
in
fidivs
push
jb
ja
je
cmp
pop
stos
xchg
jb
sub
lods
idivl
sub
and
int
ret
pushf
push
xor
cltd
lock
sbb
dec
pop
lret
das
loopne
movsl
fstpl
sbb
or
jl
push
dec
jle
orl
sar
insl
fiaddl
popl
mov
push
gs
push
dec
jae
outsl
das
pop
mov
sub
push
lcall
sbb
push
cmp
popa
push
lcall
fcompl
or
pop
jg
faddl
pop
jno
cltd
or
bound
adc
sbb
dec
in
cmp
mov
xchg
arpl
rcll
ret
subl
js
mov
sbb
jge
mov
lret
fisttps
xor
push
loop
mov
mov
mov
mov
repz
sub
das
mov
inc
or
inc
xchg
mov
loopne
mov
es
mov
inc
sbb
xor
out
cmp
sti
dec
nop
adc
sti
cmpsb
orb
push
call
lret
lahf
pop
out
cmp
sbb
popa
xchg
dec
cmp
dec
pop
xchg
fildl
popa
ds
push
pop
daa
sub
cmp
add
iret
or
xchg
xchg
lods
js
dec
out
mov
inc
inc
pop
push
mov
adcb
mov
jmp
push
testb
icebp
adc
cmpsb
loop
outsb
jp
xchg
add
fisubl
push
sub
mov
jmp
push
sub
ljmp
xor
xchg
mov
jne
test
lcall
enter
inc
loop
nop
data16
push
ret
mov
mov
adc
pop
leave
xchg
lds
subb
lock
stos
ret
subl
cmp
mov
lret
sahf
aam
arpl
outsb
rclb
std
hlt
test
andb
adc
xchg
pop
xchg
xchg
pop
ret
mov
sbb
mov
das
push
dec
add
cmpb
test
sti
sub
add
jb
sahf
movsb
push
repz
das
ss
outsl
mov
cwtl
xor
xchg
ret
push
ret
daa
aas
cmp
test
push
xchg
and
xchg
and
or
jge
scas
jmp
fmuls
leave
adc
add
aas
fistpll
loope
mov
xchg
test
mov
add
dec
fcmove
jmp
enter
cmp
add
or
ret
lahf
or
dec
hlt
push
nop
sahf
xchg
cmc
add
push
adc
pushl
add
push
lds
dec
in
std
sub
cmp
mov
jno
sub
mov
cmp
out
add
cwtl
outsb
xchg
mov
gs
cmp
fs
leave
push
fwait
mov
mov
xor
push
dec
aam
sub
adc
inc
sbb
jge
loopne
push
jge
aas
mov
movsb
stc
mov
mov
adc
and
bound
jb
xchg
push
mov
cmp
xchg
inc
adc
lods
test
cli
inc
aad
xchg
jp
sbb
inc
add
push
sbb
mov
idivl
or
mov
inc
lds
rorl
shrl
arpl
inc
jmp
push
inc
out
insb
push
dec
dec
jmp
ja
nop
add
add
xor
ljmp
imul
push
dec
xchg
movl
jnp
shll
sbb
mov
cmp
or
push
lret
mov
fsubrl
inc
ja
scas
adc
mov
jae
push
in
dec
arpl
aad
pop
add
push
push
out
lea
xor
xchg
ss
inc
mov
fildl
jge
pop
or
fcoml
xchg
mov
lahf
data16
lahf
hlt
adc
icebp
cli
pushf
dec
sub
in
mov
shrl
dec
shrd
mov
inc
sub
push
push
mov
mov
cmc
lahf
xor
push
dec
xchg
and
push
jns
sar
aad
inc
es
icebp
pop
pusha
in
sub
cwtl
icebp
pushf
inc
sahf
clc
and
xchg
pop
je
outsb
lock
in
xchg
jl
pusha
stos
fmull
test
fiadds
fbld
mov
mov
push
adc
arpl
call
ror
das
fsubr
out
int
lret
lds
mov
sbb
jae
sub
push
test
inc
mov
rep
xchg
pop
test
sbb
dec
pop
xchg
jnp
in
xchg
add
xlat
push
fidivs
pop
pop
inc
out
les
pop
insb
movsb
and
aaa
sub
push
and
xchg
mov
or
shlb
arpl
lods
xor
xchg
mov
loop
mov
xchg
sbb
sub
loop
dec
movq
lds
xor
adc
pop
mov
scas
lock
jo
pop
sub
xchg
push
out
cwtl
pushf
test
xor
js
xchg
shrl
leave
into
adc
push
xor
and
test
mov
or
sub
int3
mov
lock
shrl
add
sbb
ret
or
lods
rol
fwait
mov
aad
sbb
fidivrs
out
mov
outsl
lock
mov
jo
in
xor
aad
add
push
inc
leave
stc
pop
mov
or
shr
in
dec
loope
fld
orl
cli
pushf
iret
cmp
mov
cmpsb
out
in
test
out
mov
or
aas
or
cli
sbb
scas
lahf
mov
out
adc
or
nop
test
mov
loope
rcrb
movsl
rcl
test
or
xor
stos
das
or
dec
inc
jnp
rorl
sub
sbbb
mov
data16
or
push
xchg
mov
sbbl
pop
push
sarb
mov
dec
pop
pop
sub
pop
insb
je
hlt
in
je,pn
xor
mov
sbb
or
xor
jne
adcb
adcl
mov
dec
push
jae
faddl
lret
lods
pop
pop
stc
dec
out
xchg
inc
and
insb
aad
jg
hlt
sub
push
movsl
push
inc
mov
add
test
je
test
sbb
lea
daa
cmp
ss
test
cltd
dec
ds
add
jg
popa
jp
fmull
pop
and
xchg
cli
fld1
enter
pushf
int3
jnp
sub
inc
pop
mulb
lods
or
push
and
or
mov
mov
and
mov
daa
into
push
lahf
push
leave
outsl
rclb
jae
pop
pop
rcl
xor
xchg
sti
lock
in
js
popf
mov
lods
push
xor
ljmp
push
test
subb
inc
add
shrl
aas
xchg
rclb
sub
jp
in
xchg
movsb
into
aaa
sbb
mov
into
not
dec
ljmp
call
stc
decb
push
movsb
inc
push
or
aad
repnz
clc
shl
sbb
aad
mov
xchg
adc
adc
sub
cli
out
sub
sub
adc
jae
bound
sub
pop
push
mov
xchg
xchg
adcb
add
ja
cwtd
inc
lods
popl
int
jmp
aas
test
dec
lret
mov
dec
adc
lods
lods
mov
in
repz
xor
out
imul
xor
cwtl
xor
cs
addr16
scas
lret
adc
mov
xor
xchg
int
vpsadbw
inc
cmp
mov
xchg
inc
xor
inc
dec
or
insl
lcall
je
push
push
mov
xchg
fldt
outsb
mov
xchg
sub
jge
sub
jecxz
jg
sbb
cmp
mov
mov
mov
adc
pop
adc
or
pop
mov
add
pop
pop
cmp
or
sub
int
push
in
add
hlt
xchg
sub
add
out
mov
repnz
cmovnp
nop
mov
cli
pop
mov
adc
lret
pushw
cltd
outsl
hlt
pop
add
push
xchg
xlat
fs
fldl
push
mov
mov
bound
insb
mov
pop
inc
and
push
cmp
or
pop
push
mov
jp
aaa
or
pop
loopne
or
add
push
test
xchg
or
dec
arpl
mov
ja
sub
mov
or
mov
jmp
mov
shll
jmp
ret
push
adc
cmp
adc
cmp
fnstenv
push
cmp
pop
pop
pop
push
adc
sahf
ja
repz
or
aas
mov
das
fdivrl
lcall
jecxz
cs
xor
test
outsl
movsb
mov
sbb
or
pop
mov
push
mov
outsb
adc
push
add
push
lahf
popa
mov
adc
fnstenv
data16
loopne
push
cmp
pop
aam
loop
jmp
hlt
es
fs
ficoml
push
stc
jbe
lret
int3
ss
into
hlt
repnz
mov
loopne
sbb
cmp
xchg
setno
pop
sbb
add
out
in
jo
push
pusha
cld
mov
inc
sbb
cmp
mov
pop
pop
das
jecxz
jo
ja
pop
jl
movsb
sarl
inc
outsl
in
mov
cmp
outsl
in
mov
mov
sahf
xor
imul
inc
pop
bound
inc
repz
ljmp
sub
jmp
in
movsl
push
shlb
and
cld
or
jae
stos
mov
adc
or
insb
mov
out
adc
xlat
shll
pop
jbe
and
clc
lahf
cmp
dec
mov
sbb
sub
jmp
aam
push
sarb
mov
in
jecxz
ret
add
fidivrs
sbb
cmc
mov
push
ja
inc
nop
mov
scas
mov
test
mov
dec
jl
inc
pop
sub
adc
cmp
jno
ret
dec
push
inc
loopne
lods
cli
or
lock
outsl
adc
notl
imul
jo
xchg
sub
xor
cs
cmp
pop
lcall
flds
out
and
mov
sahf
bound
xchg
cmpl
jge
lret
sbb
fcmovne
push
push
sbb
sti
xor
test
out
inc
gs
mov
out
mov
mov
lret
js
into
int
dec
cmp
mov
adc
roll
mov
sti
mov
add
adc
cmp
mov
cmp
in
rcl
leave
mov
imul
jbe
clc
nop
push
jecxz
gs
add
outsb
enter
sbb
xchg
adc
and
movsl
sbb
push
and
or
hlt
lods
je
movsl
inc
adc
lret
push
cmp
stos
jecxz
add
jns
into
fnstenv
push
ja
push
add
cmp
outsl
test
shrb
iret
ret
jbe
movsl
mov
xchg
bound
adc
lock
out
pusha
fcoml
xchg
sar
cmp
xor
jnp
lock
rorb
mov
sbb
stos
add
mov
jo
enter
jns
jmp
push
jae
cld
dec
jno
mov
icebp
subl
dec
popa
inc
rcll
push
jmp
inc
stos
push
jmp
mov
push
andb
pop
cmp
mov
mov
adc
loope
lods
aad
cmpsb
aaa
pop
adc
dec
insl
jl
sub
imul
popa
adc
add
push
mov
push
imul
jge
jle
pop
adc
jle
push
fnstsw
sbb
or
mov
mov
popa
push
or
jnp
in
fbstp
mov
and
xchg
lcall
outsb
jbe
sbb
sbb
xlat
jecxz
cli
xlat
popf
mov
gs
adc
cmp
jl
jnp
hlt
jno
out
subb
push
ja
sub
enter
stos
add
pop
dec
mov
pop
shrl
cmpsb
cmpsb
jp
lds
stos
jb
sbb
jne
cli
mov
test
mov
push
das
sub
fistpl
mov
rorb
adc
pop
push
sar
lahf
cmpsl
arpl
scas
pusha
xchg
add
rcrl
int3
dec
fidivrs
jle,pn
fs
sub
jecxz
repz
inc
cs
xor
test
ds
jge
leave
pop
das
repnz
mov
pop
imul
pop
loope
test
push
das
and
inc
out
jecxz
jle
dec
les
push
pop
inc
dec
sbb
dec
out
lahf
jl
fstl
pop
lahf
and
xchg
into
dec
sub
test
push
daa
jle
scas
cmp
fimull
and
inc
ja
cmpsb
add
pop
cwtl
pop
xlat
aam
sahf
mov
pushf
call
mov
mov
mov
movsl
pop
mov
fdivr
icebp
pop
test
xor
jecxz
aad
jno
addl
push
sbb
ja
push
fincstp
in
shrl
push
fbld
fwait
pushf
aad
xchg
in
add
and
cli
mov
pusha
xchg
scas
adc
cmpsb
icebp
cs
pop
in
xchg
pop
nop
pop
mov
into
mov
je
into
mov
ds
dec
mov
pop
mov
push
ja
xchg
mov
xor
xchg
das
or
loopne
and
sbb
leavew
and
in
sub
movsb
adcb
mov
cmpsb
sbb
dec
fisttpll
ficomps
inc
lret
idiv
sub
cld
cmp
jmp
in
shlb
sti
sti
sub
mov
insb
mov
fsubrl
sbb
dec
push
lea
movsl
mov
jle
ljmp
xor
adc
testb
call
mov
movsb
ficoml
xorb
hlt
insb
cmp
mov
xchg
jp
shlb
cmp
in
fstps
push
and
dec
ror
dec
xor
stos
test
out
loope
dec
push
xor
jb
push
push
push
jo
ficomps
pop
jge
cltd
dec
fldt
mov
pushfw
cmp
lret
cmp
adc
mov
xchg
gs
add
sbb
jne
shll
mov
jp
idivb
cmp
mov
push
popa
xlat
cli
xor
mov
sub
push
cmc
mov
shr
icebp
xchg
hlt
pop
outsl
push
out
pop
sub
in
lahf
sbb
fsts
cld
cmp
mov
push
cmp
subb
cmp
add
mov
inc
push
repz
enter
testl
popf
repz
and
nop
sbb
shlb
pop
outsb
fstl
cld
lods
and
ret
psubw
mov
xor
push
xchg
shr
fimull
mov
jne
lcall
mov
aam
mov
jl
mov
into
stos
pushl
push
xor
add
or
orl
icebp
lods
addr16
nop
lods
loopne
popa
repnz
sbb
call
data16
std
or
dec
lods
daa
jo
xchg
sbb
ficompl
jo
push
dec
addr16
sub
push
arpl
arpl
push
mov
repz
js
int3
mov
mov
sbb
sbb
push
inc
dec
jnp
and
jg
mov
push
movsb
mov
aas
jle
nop
xchg
push
mov
clc
and
and
ds
pushf
mov
mov
stc
lock
push
mov
inc
fsubr
push
cltd
sbb
call
test
and
imul
outsb
add
cwtl
pop
je
stos
inc
dec
push
pop
xchg
sbb
mov
push
movsl
pop
mov
fs
aas
into
lock
mov
aad
push
push
mov
aad
inc
lret
imul
gs
mov
test
lret
ficompl
icebp
push
xchg
dec
shl
cmp
loope
dec
lcall
fmull
sahf
push
mov
dec
movsb
out
popf
roll
cmp
mov
pop
jecxz
xor
xchg
pop
sahf
int3
imul
shrl
sub
sub
daa
fists
cmp
lahf
sub
xchg
jmp
sahf
inc
popf
fcom
insl
mov
push
dec
data16
imul
xchg
stc
cmp
fisttpll
shrl
aas
sub
popa
push
pop
sbb
lods
fbstp
testl
out
mov
ja
and
adc
daa
dec
xchg
pushl
mov
sbb
in
push
pop
add
into
adc
xor
scas
loop
or
pop
rorl
stos
mov
in
into
mov
test
ljmp
pop
jmp
dec
sti
shrb
xchg
loop
dec
nop
rclb
out
insl
xor
lretw
mov
mov
xor
dec
int
fldcw
mov
push
mov
andb
cmp
les
cltd
dec
cmp
xor
mov
or
xchg
adc
out
pop
daa
lods
mov
inc
jl
inc
cld
lea
jmp
pop
dec
stos
sbb
rcrl
adc
imul
cmc
movsl
jmp
fisubl
pushf
cmp
sub
push
pop
sets
aad
sbb
and
xchg
cmpsl
popa
adc
push
xchg
jmp
ljmp
xchg
fisttps
jbe
mov
rclb
jle
add
lret
mov
cmp
pop
and
jno
jo
stc
sub
xchg
sbb
sub
data16
pushf
adcl
jns
mov
inc
gs
push
fstl
or
sub
and
pusha
mov
sbb
insb
hlt
jle
sbb
sub
mov
loopne
mov
es
dec
cmp
ret
jl
js
xor
outsb
je
fwait
jp
out
add
mov
jmp
das
mov
cmp
ds
add
jecxz
sbb
inc
xchg
outsb
dec
mov
sub
xchg
cwtl
js
mov
sbb
imulb
jmp
loope
and
pusha
mov
aam
mov
mov
lcall
mov
jmp
test
gs
sbb
js
mov
daa
fdivr
xor
push
ss
dec
xor
push
and
out
jle
xchg
xchg
or
mov
push
test
ss
test
jb
clc
iret
adcl
testl
cmc
loop
std
lods
fs
imul
fdivr
cmp
sbb
adc
outsb
and
mov
lcall
lret
inc
enter
pop
pop
adc
push
aaa
pop
call
outsb
xor
aam
pop
loopne
pop
mov
mov
fmull
scas
jg
xchg
push
xchg
inc
xorl
pop
mov
push
movsb
fstps
jbe
xchg
add
xor
jae
bnd
cmp
movsl
ds
jnp
mov
pop
or
div
dec
mov
orb
add
mov
push
push
mov
jb
dec
ficomps
sub
rcrb
movsb
bound
arpl
xchg
ret
mov
dec
or
pop
push
sub
loop
cmp
cmpsb
xchg
fdivs
jg
fiadds
daa
dec
cmp
xor
jge
or
cwtl
ret
xchg
sub
push
aad
mov
cmpsb
mov
fiaddl
bound
cld
dec
jo
loopne
mov
cmp
out
mov
add
jnp
pop
or
push
imul
movsl
mov
pop
mov
imul
xchg
arpl
sub
push
add
fistl
iret
and
cmpsl
jle
dec
push
xchg
xchg
dec
leave
lret
pop
aam
aas
fstl
lcall
addr16
sti
inc
nop
ds
scas
inc
test
cmpsl
sbb
mov
xor
mov
lds
testl
in
cmc
mov
dec
in
divb
lret
mov
nop
lock
inc
cld
mov
imul
int3
stc
pop
pop
jmp
in
in
mov
adc
push
std
mov
cmp
dec
push
repz
loopne
pop
jmp
test
and
sarl
jb
int3
add
out
sbb
fbld
adc
xor
push
inc
divl
push
xlat
ret
dec
mov
shll
sub
test
adc
movsb
mov
push
and
int
lods
pushf
or
jno
mov
adc
xor
icebp
or
xchg
dec
inc
loop
mov
scas
popf
daa
inc
adcl
dec
push
or
cmpb
mov
popf
lods
cmp
sbb
int
push
out
jp
sbb
sbb
inc
fstpl
mov
push
and
test
cld
movntq
push
mov
push
outsl
or
iret
mov
cmp
call
mov
jne
cmp
repz
adc
mov
add
imul
xor
in
test
inc
fninit
ret
sbb
mov
sbb
int
fidivrl
daa
inc
das
into
cmp
mov
call
inc
cmp
lcall
imul
pop
icebp
push
std
loopne
inc
out
test
fisubrl
mov
jo
sbb
adc
mov
sbb
out
inc
insb
mov
and
push
shll
inc
inc
fisubrs
and
and
shl
data16
in
scas
sub
cmp
and
xchg
fs
jg
adc
push
hlt
xchg
mov
out
xor
stos
sti
rorl
add
sbb
add
sti
push
out
lods
adc
dec
cmp
std
test
lods
int
push
pop
ljmp
inc
icebp
mov
mov
pop
fsubr
fs
andl
mov
push
add
js
fsubr
xor
cmp
rcrb
inc
shl
pop
call
js
xchg
jns
mov
jo
mov
or
add
lret
lock
repnz
jle
sbb
pop
add
inc
loope
inc
rorl
inc
sahf
cwtl
or
adc
sbb
gs
nop
lret
push
loop
testl
push
lock
push
outsl
testb
out
push
scas
jl
rolb
scas
lret
out
or
jmp
jmp
cli
sahf
xchg
push
pop
push
mov
loop
jmp
insb
ds
jns
stc
adc
add
pop
cmp
xchg
int
mov
mov
jb
cmp
das
int
pop
dec
add
lds
push
pop
jmp
xchg
jge
or
xchg
and
rolb
fisubrs
addr16
xchg
xchg
in
and
sbb
mov
xor
sub
cld
jae
aas
jecxz
cli
mov
cwtl
or
adc
push
cmp
out
gs
imull
and
out
jo
jle
ljmp
push
ficoml
pop
bnd
adc
mov
insl
pop
push
sbb
mov
sub
sub
mov
int3
pop
out
scas
mov
mov
jl
cld
adc
mov
addr16
pusha
adcl
push
and
test
mov
ja
or
jmp
fidivs
xchg
xchg
sub
pop
aas
mov
push
test
jle
pop
lods
push
inc
call
and
pop
sbb
cwtl
mov
jnp
movsb
xchg
gs
mov
in
or
inc
sbb
xchg
xchg
ret
push
push
sbb
jbe
pop
xorb
ret
loopne
mov
ss
cli
scas
out
jg
adc
ret
das
repz
jle
ja
mov
sbb
shll
inc
mov
or
or
lock
pop
hlt
sbbl
mov
push
gs
mov
std
mov
mov
sub
mov
pop
adc
dec
mov
inc
out
sub
push
fisubrl
cld
inc
shll
mov
jno
int
lea
mov
push
mov
mov
inc
stos
xor
and
insb
out
sub
fwait
loopne
push
popf
test
mov
fistpl
lods
outsl
xor
int
mov
cmpsl
stos
sbb
jge
sti
or
test
addl
popf
rcll
mov
cmp
or
aad
imul
stc
ror
ficomps
lods
data16
sub
push
inc
inc
icebp
in
fidivrs
push
lcall
out
insl
adc
stos
inc
movsb
pop
cltd
xchg
fildl
inc
push
mov
icebp
imul
sbb
push
mov
fwait
cmc
shl
lret
push
outsl
add
mov
xchg
sbbb
push
cmp
mov
insb
adc
lahf
int3
cmp
pop
call
mov
cmc
and
out
push
rcll
ljmp
cld
and
dec
xchg
mov
imul
fnstsw
push
outsb
das
inc
pop
xor
pop
push
fisttpl
sbb
dec
push
sbb
inc
jle
scas
inc
and
cmpsb
les
push
stos
popf
mov
imul
or
add
cmp
mov
cmp
sub
call
jge
jnp
push
pop
jns
or
test
nop
std
cmp
movsl
mull
outsl
push
rolb
outsl
jmp
adc
adc
mov
sub
or
jle
out
out
mov
pusha
clc
out
pop
mov
les
dec
pop
lret
jnp
or
cmp
daa
mov
dec
mov
push
jmp
inc
cmp
inc
sbb
bound
push
mov
fsts
xor
push
out
mov
or
lods
fcompl
mov
paddq
data16
adc
gs
testl
dec
jle
lds
pop
sub
xchg
mov
mov
cmp
imul
fdivl
aaa
lcall
addr16
ss
test
mov
rcrb
popf
push
adc
dec
ret
fnsave
xor
loope
push
stc
sahf
xor
movsb
or
fadds
dec
fmul
test
adc
js
ss
pop
bound
or
out
mov
stc
es
xor
xchg
mov
idivl
cmp
pop
mov
aaa
dec
dec
ret
enter
or
aam
cmpsb
rcr
aad
call
xchg
adc
aam
insb
jo
insb
dec
es
rol
rorb
xor
push
push
je
iret
inc
popa
lret
add
test
lea
mov
sbb
cli
pop
stc
rclb
test
push
bound
add
mov
adc
adc
pop
lock
pop
jbe
test
int
cmp
add
push
push
push
test
not
sub
sahf
insb
xchg
loope
rcll
jp
xor
pop
mov
rcrl
mov
push
xchg
cmp
les
pop
aad
es
dec
adc
mov
pop
ja
movb
rclb
xorl
dec
inc
lcall
sti
hlt
outsl
sub
test
push
dec
add
ljmp
inc
addb
mov
or
mov
jbe
dec
and
xchg
cmp
jecxz
rol
fs
sbb
xlat
mov
jl
jmp
lret
fnsave
leave
sub
xchg
xor
das
mov
xchg
cld
inc
xlat
pusha
sbb
orl
push
mov
lret
dec
mov
scas
jmp
gs
popa
pop
in
loop
rcrb
inc
subl
arpl
pop
in
sbb
mov
sub
push
dec
mov
loopne
imul
push
adc
jl
lock
vpandn
ja
nop
add
cwtl
cmp
imul
adc
and
in
push
daa
rcrb
jg
xchg
dec
jbe
decb
fcmovnbe
mov
adc
mov
arpl
aad
sbb
dec
fiaddl
arpl
add
jecxz
sub
push
sub
sub
mov
mov
jp
pop
sub
pop
and
call
mov
nop
jecxz
lods
jge
call
sbb
xor
icebp
push
jo
aas
cmpsb
jbe
sub
push
mov
cwtl
repnz
or
test
push
mov
xchg
cmpb
outsl
aaa
push
mov
xchg
push
out
xchg
or
xchg
push
lods
push
leave
add
jl
pop
daa
dec
test
dec
xor
mov
pop
mov
pop
or
mov
mov
pop
loopne
or
sbb
out
or
add
or
dec
adc
imul
mov
add
inc
shl
inc
xor
jb
mov
sbb
sbbb
xor
push
push
lret
enter
insb
lods
sbb
push
call
inc
nop
adc
popf
ss
cmp
push
xchg
dec
inc
mov
gs
out
call
movsl
cmp
adc
mov
sahf
push
adc
loope
into
mov
inc
ja
insb
xchg
out
shrl
lahf
dec
mov
xor
das
lods
ljmp
jmp
push
fwait
xlat
out
sub
popa
jb
adc
and
adc
sbb
mov
cltd
outsb
push
cmp
adc
cs
gs
fwait
or
mov
bound
pushf
dec
xchg
mov
imul
mov
pop
dec
in
mov
fstpl
mov
adc
adc
in
lcall
out
dec
add
dec
cs
dec
add
xchg
mov
add
negl
clc
xor
lods
xor
bound
pop
jl
xchg
fldenv
add
out
jbe
mov
lods
jecxz
or
daa
add
pop
lds
adc
sub
adc
test
or
icebp
int
push
outsb
sub
rclb
dec
leave
fldt
das
adc
adc
stc
push
lds
shrb
cmp
in
lcall
setae
mov
adc
addb
jg
jnp
push
or
mov
loopne
jne
mov
imul
test
dec
lods
mov
cmpsl
adc
sub
dec
jl
pop
push
cld
ljmp
jno
pop
mov
add
out
cs
xchg
testl
movswl
xlat
lea
imul
fcom
lahf
enter
fimuls
cs
mov
and
inc
loop
ljmp
ds
dec
ja
popf
cmp
ljmp
leave
xchg
xchg
xor
mov
insl
insb
mov
fisubs
ljmp
stos
jae
rcrl
dec
ljmp
lahf
mov
ret
in
xlat
ret
shlb
popf
mov
mov
ds
and
jmp
icebp
repnz
ss
lods
jg
sti
xchg
aam
add
rcrb
lret
push
sbb
sbb
dec
andb
jne
cmp
scas
out
nop
mov
bound
push
mov
inc
mov
xor
mov
out
mov
cltd
mov
pop
cmp
cwtl
pop
cld
jne
pop
xorl
pop
dec
in
in
sbb
daa
mov
cld
hlt
incb
adc
lock
int3
je
cmp
incl
test
adc
fsubr
adc
cltd
push
fldenv
dec
js
daa
cld
and
dec
aas
inc
add
lea
sbb
ret
inc
cmpsl
mov
sbb
and
aam
jg
mov
int
inc
mov
test
pop
sar
xchg
shl
test
test
mov
mov
arpl
out
clc
repz
out
adc
cltd
pop
stos
cld
cmp
adc
push
pushf
nop
mov
xchg
loope
adc
test
mov
sub
aad
or
xchg
icebp
adc
inc
neg
dec
roll
scas
popf
fsubl
lock
push
sbb
xchg
shll
push
inc
fisttpl
adc
or
es
aam
mov
ret
test
ss
popa
inc
add
mov
push
out
push
mov
daa
dec
lds
scas
fdivrs
daa
movsl
notb
dec
lods
dec
cltd
arpl
pop
push
data16
add
jb
testb
jl
xchg
xchg
test
and
test
mov
push
adc
jecxz
mov
push
pop
iret
clc
out
dec
dec
mov
test
cmp
jb
mov
xor
cmp
cmp
add
push
roll
lahf
cmp
sbb
mov
sbb
idivb
push
ret
lcall
jecxz
roll
mov
stos
push
movsl
xlat
fwait
mov
dec
jne
adc
add
jge
jle
shlb
pop
mov
pop
and
dec
or
movsb
loopne
and
or
push
mov
out
push
dec
xchg
std
loop
xor
repnz
adc
stos
fdivrs
xchg
xor
sub
nop
popa
push
cmp
pop
lods
xor
aam
test
test
cmp
dec
pop
xchg
lret
mov
sub
dec
lret
ret
fwait
jecxz
sti
test
xchg
cld
sub
scas
leave
mov
and
sarb
ret
add
sub
push
push
jo
cmp
imul
adc
mov
xchg
cld
in
pop
popf
inc
xchg
xlat
imul
lret
ds
push
dec
mov
push
call
inc
pop
ljmp
mov
mov
jmp
insb
mov
js
movsl
mov
xchg
sbb
rorl
insl
push
and
sub
xor
mov
gs
push
and
cmp
lods
xchg
in
and
and
fdivrl
add
test
push
lcall
call
xchg
or
loope
jbe
xor
xchg
pop
dec
add
sub
test
cmp
cmp
or
fsubp
pushf
push
and
popf
icebp
pushf
xchg
data16
mov
js
std
cmp
xchg
cmp
mov
sbb
lock
push
jnp
jne
xor
imul
test
jmp
mov
dec
mov
sbb
or
push
sbb
lret
rol
dec
ja
sbb
pusha
shlb
push
das
test
mov
rorl
and
xor
iret
in
dec
lret
test
push
push
fdivl
iret
lcall
leave
dec
mov
dec
ljmp
cmc
data16
loopne
push
jnp
cltd
insl
xor
pop
mov
push
and
mov
imul
cltd
push
mov
sbb
outsb
and
repz
lcall
dec
movnti
pop
mov
pop
fnsave
inc
fmuls
push
sti
sub
mov
push
ret
cmp
adcl
popf
rcrb
imul
mov
cmp
jmp
cmp
fists
cld
adc
lahf
mov
jge
loop
lds
pop
cmp
outsl
jmp
and
pop
pop
adc
dec
sub
fidivs
cmpsl
push
inc
aam
add
out
pusha
cltd
add
sbb
inc
and
scas
cwtl
in
sbb
sbb
push
add
hlt
push
cld
dec
lock
mov
adc
pop
lar
cwtl
push
push
push
cwtl
jbe
pop
mov
cmpsb
clc
pop
jns
mov
add
dec
push
outsb
sbb
jl
repnz
sbb
flds
jg
jl
jmp
cmp
fldl
xchg
xchg
popf
dec
sbb
add
shll
dec
sub
lods
mov
xor
sub
dec
jbe
or
cmc
cs
push
xchg
in
lock
gs
cmp
lods
jle
bound
mov
js
add
jns
sbb
mulb
in
popa
in
push
loope
and
jge
scas
into
cltd
enter
sub
cmpsl
scas
movsl
les
add
pop
movsl
sbb
mov
or
fidivrl
push
ret
rol
mov
das
scas
rorl
add
inc
pop
mov
vmwrite
sbb
outsl
icebp
shll
pop
push
not
jmp
in
jno
sbb
shrb
sbb
call
js
les
cmpsl
pop
ja
pop
das
call
mov
pop
sbb
imul
sahf
inc
cmp
xor
cmc
movsb
xchg
pop
mov
push
xor
sti
sub
scas
cmpsl
jp
gs
mov
in
lcall
cltd
stos
mov
sbb
mov
mov
xchg
sub
lret
fbld
adc
ret
mov
aaa
ror
mov
pop
cli
jno
fimuls
outsb
adc
lock
pop
ja
push
lods
nop
fwait
aam
push
dec
mov
push
lret
xor
lods
stc
test
mov
dec
mov
push
sahf
mov
sysexit
movsl
push
into
stos
cmp
jne
or
in
inc
dec
dec
mov
xor
xor
push
cltd
xor
jns
mov
inc
inc
mov
inc
mov
test
dec
xchg
ss
sub
xor
mov
int3
call
mov
adc
cltd
sub
fs
sbb
inc
imul
mov
rcrl
mov
subl
shll
xor
cmpsl
adc
push
adc
xor
mov
das
inc
mov
aaa
sahf
sub
pop
fisttps
lods
adc
cmp
push
ljmp
push
addr16
and
movsl
scas
shll
cmc
imulb
fldenv
imul
xlat
lcall
call
dec
add
imulb
sub
aam
mov
out
pop
sahf
jb
xor
movsb
dec
ficomps
mov
fsubrl
js
pop
inc
ret
adc
lahf
and
mov
cmpsl
daa
mov
testl
mov
cmpsb
sub
cwtl
scas
cmpl
jmp
push
subl
imul
ja
xor
jns
cmp
xorl
pop
lret
cmpsb
push
js
push
std
mov
addr16
mov
repz
jae
loopne
xsave
cld
or
imul
addr16
data16
xchg
sub
cmp
repnz
push
icebp
lsl
icebp
das
adc
adcl
mov
adc
scas
inc
mov
movsl
or
cmp
jbe
xchg
sti
inc
pop
sarl
cli
push
mov
pop
in
fists
dec
fucom
and
aad
movsb
xor
cmp
xor
hlt
js
dec
lods
test
cmc
or
jns
ds
xchg
push
idiv
nop
xor
stc
jne
cmc
aad
or
sub
push
fldcw
cmp
mov
in
dec
xchg
sub
mov
and
sub
xor
add
outsl
aad
and
or
popf
xor
mov
movsl
mov
dec
mov
and
mov
and
call
mul
decl
or
movsl
add
enter
inc
dec
pop
or
jo
in
inc
ds
cmp
dec
inc
shlb
call
cmp
sbb
inc
mov
lods
out
dec
jb
addr16
push
call
and
aas
fs
mov
das
or
and
test
adc
adc
ja
icebp
dec
movq
daa
dec
cmp
add
xchg
xor
pop
mov
add
and
cmp
mov
push
cmp
pop
mov
sub
addw
test
icebp
in
bound
and
xchg
adc
insl
pushf
dec
addl
bnd
mov
pusha
and
lods
xor
push
sub
mov
int
fidivrl
adc
dec
add
sbb
mov
das
mov
inc
mov
jge
pop
lahf
sbb
lea
lahf
inc
add
xchg
leave
push
lcall
imul
outsl
sahf
repnz
jmp
add
add
sti
mov
out
js
lret
insb
fwait
or
push
jle
pop
dec
add
xchg
loopne
cmpsl
ss
mov
mov
jl
fstl
adc
push
mov
and
add
repz
xchg
mov
xchg
je
ror
mov
outsl
cmpsl
jl
dec
incl
jp
cmp
sub
pop
cmpsl
test
sbb
adcb
and
loopne
pop
add
xchg
mov
mov
mov
xchg
cwtl
xor
int3
fnstcw
adc
into
push
cmp
lcall
test
lret
or
jmp
push
or
addr16
bound
ja
js
mov
push
push
mov
push
or
dec
incb
ss
push
xchg
loop
inc
push
jl,pt
adc
inc
test
pop
es
std
sarb
ret
pop
ret
xchg
jp
xchg
shrl
insb
lods
andl
or
dec
inc
dec
mov
jb
xchg
loopne
mov
jb
mov
fwait
pop
dec
imul
and
inc
shll
push
xor
jb
mov
clc
loopne
adc
adc
test
mov
enter
mulb
lahf
aad
arpl
out
sub
pusha
sub
mov
icebp
es
hlt
cmp
loope
jb
mov
je
add
mov
fs
subb
ret
cli
and
add
imulb
push
ds
enter
shlb
xchg
adc
sbb
cli
and
lds
jecxz
xchg
mov
into
and
jb
jne
stc
fnsave
and
imul
pop
lret
addr16
jne
data16
clc
jno
out
mov
cmc
roll
push
aad
add
sub
outsb
dec
push
xor
xor
stos
dec
cmpsl
inc
sarl
cmp
sub
lods
clc
jmp
xchg
insb
mov
hlt
aaa
push
mov
add
mov
push
out
fs
sub
push
sub
lods
nop
out
mov
ss
cld
adc
cmpl
dec
cmpsb
xor
cwtl
sub
js
lds
jecxz
or
fadds
and
lods
lods
popf
outsl
xlat
fsub
inc
xor
cli
loopne
ja
sbb
jno
pop
add
jle
lea
pop
xchg
mov
push
inc
xor
mov
cmp
ret
mov
ja
out
push
adc
popa
mov
jns
xchg
and
mov
clc
cmpl
cmp
xlat
mov
inc
outsb
xor
mov
dec
mov
mov
add
sbb
push
movsb
iret
adc
sti
fistl
sar
sub
mov
inc
insl
shl
jg
mov
jnp
cli
sbb
mov
fistl
daa
adc
sbb
std
or
sti
lea
out
dec
loop
leave
in
xor
push
pop
cmp
scas
loopne
rol
sbb
lds
out
enter
imul
aaa
dec
lods
push
jno
pop
cmpsb
adc
fidivrl
lahf
jmp
mov
movsl
stos
pop
xchg
jnp
pusha
sarb
fimuls
lods
repz
inc
xor
inc
movsb
or
push
call
xor
push
or
add
nop
je
push
icebp
int3
arpl
inc
sarl
push
sahf
addr16
lods
xchg
andl
jmp
lock
push
xor
xor
cmp
rol
and
cmp
fistps
pusha
jb
loop
mov
push
mov
iret
cs
popa
xchg
add
lret
hlt
fadds
dec
andl
jg
jecxz
les
lock
push
adc
xchg
ret
je
int3
popa
pop
es
cmpsb
test
popa
stos
into
loopne
cmpsb
xor
jg
push
popf
inc
add
jl
insl
xlat
add
sbbl
add
test
int
fs
mov
sbb
out
jno
cmp
je
testl
daa
add
mov
dec
repz
add
iret
push
orb
adc
ret
xor
sub
sbb
nop
lock
repz
cmp
push
cltd
je
in
dec
jl
fstpl
or
or
jmp
aas
jmp
into
inc
xchg
aaa
sbb
adc
dec
xchg
mov
push
lock
fmull
lods
pop
arpl
fwait
lret
scas
insl
faddp
pop
add
fnstcw
push
pop
lret
sbbl
mov
insl
or
push
fwait
inc
repz
das
mov
push
ret
adc
aaa
cmpsl
jp
dec
adc
scas
test
jne
cmp
rorl
mov
push
mov
cmc
xor
pop
div
loope
fnsave
inc
stc
outsl
push
jae
push
pop
arpl
pop
inc
rorl
push
in
mov
mov
shrl
pop
sbb
outsb
mov
cmpsl
sub
mov
loope
testl
adc
lahf
movzwl
jne
in
subl
test
pop
test
leave
lcall
adc
mov
lock
ss
or
mov
cmpsl
popl
or
jns
lds
mov
adcb
int3
inc
gs
cwtl
xchg
mov
mov
stc
dec
aam
xchg
sbb
lds
push
pop
shlb
aaa
push
loopne
push
or
cmp
cmpsl
ret
or
and
adc
lea
sub
mov
sub
fimull
orl
xor
inc
adc
stc
fucomi
lcall
inc
in
scas
je
negb
xor
nop
pop
dec
icebp
out
test
inc
push
lods
mov
mov
lcall
mov
or
jne
shlb
imul
ljmp
fdivs
js
cmc
jge
in
cld
cmp
mov
xor
xor
push
add
aam
lret
jns
jne
jecxz
sbb
add
cmp
test
or
outsb
cmc
or
dec
cmp
xor
into
inc
das
insl
outsl
in
add
inc
repnz
ds
pop
data16
cmpsb
xor
jnp
cmovg
adc
test
lock
add
fucomi
mov
arpl
jmp
jl
push
or
sub
push
sub
cli
rolb
ret
movsb
mov
sahf
loop
lea
pop
jae
adc
mov
xor
inc
xchg
inc
or
and
ret
mov
insb
cwtl
push
lret
int
sub
push
inc
int
and
pusha
sbbl
cwtl
test
pop
out
shrl
mov
xor
or
xor
lods
sub
jne
jns
int
and
aad
leave
adc
test
xor
sub
xor
pop
je
adcb
xor
popa
adc
ffree
mov
das
mov
or
lods
push
cmp
aad
les
mov
jne
mov
dec
sbb
lods
out
repz
sarl
mov
aad
push
outsl
scas
aas
jns
clc
push
or
outsb
cld
gs
fs
add
xor
mov
sub
push
pop
jmp
sbbl
sub
dec
bound
pop
mov
je
sbbb
ljmp
xchg
inc
out
jmp
daa
jns
cltd
mov
and
jne
ss
repz
inc
mov
adc
sbb
sub
pop
sub
dec
arpl
fists
imul
pop
pop
add
push
cld
mov
push
movsb
inc
ja
shrb
std
mov
dec
dec
xlat
lea
js
mov
mov
das
xor
cld
sbb
inc
andb
xlat
push
in
dec
or
call
mov
lcall
ror
gs
sbb
dec
sahf
push
scas
shlb
adc
sub
stos
imul
stos
xor
xchg
jle
ljmp
jo
cli
add
jg
and
dec
lea
and
or
test
lds
sbb
dec
jge
out
push
lret
jle
int
out
mull
pusha
int
mov
rcr
mov
cmp
mov
inc
add
iret
inc
and
mov
and
xor
arpl
cmp
int3
xlat
lahf
or
andl
push
or
mov
jmp
data16
dec
add
out
or
rcrb
mov
mov
pop
xlat
mov
ds
hlt
push
in
cli
ljmp
xlat
nop
fisttpll
insl
xor
lcall
fdiv
faddl
or
ret
fbstp
mov
mov
jae
xorb
popa
inc
push
xchg
mov
or
scas
pusha
into
popl
adc
or
or
ljmp
push
push
inc
inc
mov
gs
iret
arpl
addr16
dec
popf
mov
add
sub
mov
in
adcl
inc
adc
mov
cmpsl
push
mov
mov
or
insb
in
pop
mov
movsb
pop
mov
aam
inc
mov
out
lds
pop
mov
sbb
xchg
pop
mov
cli
and
jle
repz
inc
pop
adc
or
dec
outsb
push
jnp
cmc
mov
clc
lods
push
in
cli
insb
aas
js
mov
xlat
jle
dec
mov
shlb
movsl
sub
dec
roll
ss
shr
and
pushf
fcmovnbe
mov
rcrb
jp
nop
or
pop
imul
adcl
popf
xor
jns
lret
mov
jbe
cmp
mov
out
inc
xchg
jno
push
adc
inc
cmp
sub
pop
dec
cmpl
scas
dec
addr16
js
sub
fwait
or
jb
lret
loop
shl
outsb
aaa
ljmp
xchg
and
xchg
xor
ror
sub
mov
push
push
xchg
add
inc
jl
or
out
push
mov
cwtl
adc
jecxz
mov
pushf
dec
or
xchg
sub
dec
sahf
ja
push
fidivrl
adc
getsec
xchg
or
xchg
stos
sti
test
or
cs
push
add
xchg
and
cli
add
arpl
movsl
add
add
xor
data16
mov
js
and
rcl
jl
lret
es
movsl
jle
outsb
scas
popf
stos
into
add
js
xor
fsubl
rep
aam
adc
dec
test
push
dec
xorl
pop
push
mov
cld
dec
repnz
and
cmp
movsb
test
lock
and
xchg
cs
aas
cmp
pop
xor
mov
dec
pop
mov
out
pop
cmc
sbb
pop
mov
pop
mov
cmp
sahf
push
pop
add
xor
call
cmp
jg
dec
add
cmp
shll
cld
xor
test
xor
int
arpl
ret
lods
cmp
imul
cmp
jnp
insl
or
pop
xorb
push
int
xchg
and
cli
das
dec
andb
push
dec
movsb
xor
fistps
add
cmp
jbe
jp
pop
notl
xchg
pop
daa
mov
shl
sbb
mov
sbb
imul
mov
pushf
stos
cmp
in
lahf
mov
pop
addl
cmp
add
dec
loopne
xlat
lahf
or
or
jno
inc
loopne
in
xor
ja
and
and
stos
pop
dec
pop
pusha
cmp
xor
and
and
gs
inc
inc
or
and
out
jle
addr16
imul
or
test
jg
repz
ficomps
icebp
fsts
pop
pusha
xchg
mulb
int
mov
loop
push
dec
pusha
sub
sbb
mov
jbe
dec
push
cmp
repnz
movl
pop
ret
push
xchg
cmp
fwait
push
ss
pop
jge
pop
imulb
bound
movsl
into
loop
imul
clc
stc
imul
cs
lcall
xchg
push
push
das
cmp
mov
cld
mov
mov
aas
xchg
inc
jmp
filds
jns
jmp
ds
push
jecxz
mov
xor
pop
mul
lahf
out
jmp
mov
arpl
stos
imul
sbb
jle
sbb
sarb
js
and
push
leave
ds
stc
lret
ret
jg
and
xor
jge
mov
bnd
jb
ss
jno
fidivl
aam
ja
ja
jg
add
sti
inc
insl
rcrb
movsb
mov
aas
sub
and
imul
mov
jne
mov
jne
mov
add
pop
in
push
sbb
fsubl
adc
jmp
add
pushf
push
int
mov
inc
mov
pushf
cmp
dec
mov
push
movsb
ljmp
test
rclb
not
or
dec
lret
adc
inc
add
push
aas
out
cld
mov
inc
dec
pop
inc
dec
shr
add
jnp
add
cmp
add
sbb
imul
sbb
test
xchg
sbb
test
adc
xor
stos
push
inc
into
stc
inc
out
jbe
cmp
into
jne
and
and
adc
pop
or
cli
push
into
fnstcw
xor
pop
daa
adc
inc
jb
mov
sahf
mov
dec
ja
sub
jecxz
jnp
cmp
jecxz
and
xchg
adc
jl
sub
push
iret
fnsave
mov
and
cld
adc
out
fdivr
xchg
jle
pushf
roll
mov
jbe
bound
dec
xchg
fsubrs
pusha
cmp
sub
push
pushf
pop
or
idivl
and
sbb
lret
push
dec
stos
cld
add
or
mov
mov
cmp
sbb
cmp
loope
cs
xor
jmp
sahf
cltd
mov
xlat
movsl
cwtl
sbb
jmp
lcall
loope
or
bound
test
addb
jbe
pop
push
andl
xor
pusha
insb
sub
test
andl
sbb
adc
in
ja
xor
mov
xchg
xchg
mov
mov
and
loopne
fwait
clc
nop
jo
dec
push
pusha
stos
sbb
addr16
ret
mov
dec
push
cltd
jbe
jae
mov
clc
je
mull
fiadds
xchg
xlat
fs
fs
pop
outsb
and
cmpsb
xchg
sarb
nop
mov
stos
sbb
cltd
shrl
xchg
ljmp
pop
call
loope
jnp
adc
test
into
fsubs
call
lret
jne
jmp
or
mov
daa
jg
cmp
sub
and
cltd
xor
pop
shlb
cmovl
mov
lods
repz
or
pop
fwait
loop
xor
cmpsb
mov
push
xchg
cmpb
mov
loop
inc
push
sbb
or
fst
mov
adc
push
and
loopne
fistl
mov
push
dec
int
out
cld
adcl
rcrl
repz
mov
scas
and
pop
int3
jle
adc
outsb
ficoms
repnz
ss
hlt
push
shrb
push
outsl
cmp
jnp
push
rclb
lock
test
cmpsb
push
xchg
pushf
sub
loopne
pusha
cmp
test
movb
mov
jl
jecxz
movl
sub
mov
les
pop
sub
jl
std
enter
into
jmp
ss
sahf
mov
pop
mov
mov
les
jno
xchg
icebp
pushf
or
add
xchg
or
mov
ja
sub
mov
imull
dec
cmp
push
push
push
jecxz
sub
push
mov
pop
insl
cwtl
scas
xor
das
fs
or
dec
cmp
pop
mov
sbb
dec
ret
scas
jl
xor
xchg
mov
mov
out
pushf
dec
sbb
mov
mov
pop
pop
and
scas
iret
xchg
push
push
test
cltd
mov
mov
push
add
adc
mov
xor
mov
fidivrl
sub
xor
pop
push
and
fisttpll
outsb
shlb
jl
mov
lds
pop
aas
xchg
and
pop
mov
mov
jle
std
fisubl
pop
mov
xchg
push
mov
push
inc
cs
cmp
or
xchg
ss
fidivrl
adc
push
out
jmp
xchg
xchg
fmul
and
xor
je
mov
into
mov
add
fidivrl
push
jl
mov
push
fwait
mov
lods
xor
mov
add
xchg
ljmp
push
lea
mov
mov
lds
pop
pop
imul
jno
push
xchg
repz
es
or
sbb
mov
mov
ljmp
jae
and
lahf
popa
dec
scas
setne
sub
fsubrs
sub
mov
xchg
sahf
push
pop
xor
xchg
mov
push
or
aaa
outsl
fcmovnu
fisttpl
dec
ja
cmp
push
and
mov
stc
cmp
pop
aas
shl
jge
ljmp
push
adc
sub
repnz
inc
cltd
pop
fldl
dec
inc
jo
test
xchg
sarl
loop
out
jg
rep
add
lds
add
int3
dec
mov
shrl
stc
dec
ja
xchg
mov
or
gs
xor
js
xor
xlat
mov
test
test
inc
rcrb
xchg
push
mov
pop
jle
dec
and
lea
jno
jmp
inc
bound
inc
imul
pminsw
sub
dec
mov
ljmp
cmc
lahf
mov
fdivrl
mov
mov
sbb
iret
in
pop
rolb
mov
roll
jl
loopne
sbbl
cltd
mov
or
sub
fwait
pop
adc
xor
lea
jb
xchg
cli
outsl
sbb
pop
xor
push
cmp
mov
fwait
cwtl
scas
cmp
xchg
enter
cmp
pop
mov
aam
lea
das
pop
xor
js
push
jecxz
les
adc
push
idivb
xchg
pop
in
popf
fcom
xor
cmpsb
xchg
les
mov
sub
test
xor
lods
push
faddp
and
pop
test
mov
pop
lock
fwait
mov
jnp
or
rcr
xor
movsl
sahf
mov
sbb
jno
push
cmp
cmc
or
clc
rcrl
sub
jne
cltd
jg
and
adc
fsubs
xor
adc
js
bnd
sub
mov
jnp
adc
jno
inc
dec
je
xchg
push
or
or
cwtl
cld
scas
call
lods
stc
jae
les
in
pop
lret
push
loop
faddl
bound
cli
dec
add
stos
iret
pop
xor
inc
cmpsb
dec
adc
lret
xchg
nop
cmc
into
sub
mov
dec
inc
cs
mov
xchg
mov
mov
pop
or
sahf
or
inc
jnp
mov
js
mov
cmp
inc
push
out
cmp
adc
sbbb
mov
test
xor
pop
loope
int
or
out
lods
ljmp
leave
adc
fwait
sahf
repnz
and
mov
xor
add
or
das
cmp
jns
sbb
cld
test
test
lods
adcb
jecxz
cld
adc
sbb
sbb
pop
fwait
imul
sarb
in
or
jbe
mov
test
sbb
scas
push
cmp
into
lds
add
add
in
mov
sub
lcall
add
mov
in
icebp
call
cmp
and
fcoml
daa
ret
push
cwtl
push
enter
push
cld
jmp
setge
loope
mov
mov
stos
add
mov
test
add
mov
outsb
sbb
fldcw
lcall
jns
sarb
jo
xchg
pop
call
out
mov
or
pop
arpl
addb
lock
test
int
push
sub
mov
jns
test
mov
sbb
sub
test
lods
mov
mov
shr
incb
mov
repz
pop
sub
sbb
add
cmp
inc
test
aam
xlat
lahf
or
mov
xlat
mov
movsb
sub
jb
subl
ja
adc
xchg
mov
iret
fisubrs
inc
jp
mov
test
fidivs
pop
out
test
nop
and
test
jge
push
push
loope
lds
fwait
dec
loope
aas
gs
push
dec
repz
cmc
xor
push
mov
fsub
sbb
jmp
out
mov
or
sub
pop
popa
callw
sti
and
and
adc
scas
or
popa
out
xlat
mov
gs
imul
call
sbb
push
aad
test
push
gs
lds
adc
pop
popa
lahf
inc
sbb
and
jge
adc
and
outsb
pusha
cs
sbb
inc
into
popa
lahf
sbb
dec
pop
cmp
dec
push
imul
mov
dec
icebp
fstl
sub
daa
nop
jb
push
mov
dec
push
daa
sti
add
xor
jb
ret
mov
dec
mov
cld
or
pop
js
outsl
addr16
pop
jne
lcall
mov
int3
push
push
xor
addr16
add
xor
pushf
xchg
dec
daa
jnp
adc
lea
mov
fcmovb
dec
sarl
sti
adc
dec
xor
ljmp
jg
add
push
rolb
aam
lods
ss
scas
ret
pxor
sub
repnz
je
enter
or
jle
push
jne
adc
adc
scas
loopne
icebp
xchg
sbb
bound
mov
test
jmp
jle
pop
cli
pop
mov
jle
inc
clc
push
mov
xor
and
push
in
push
cld
rcrl
loope
rolb
int
outsb
sbb
cmpsl
cmpsl
pop
fwait
push
loopne
fimuls
enter
stc
in
lret
lock
push
mov
jo
out
ret
pop
mov
jle
in
lahf
sub
outsl
jae
adc
dec
pop
push
inc
lret
inc
xor
js
aad
pop
sub
int
mov
xor
add
add
add
add
inc
pop
lea
mov
mov
mov
xor
lea
movzbl
movzbl
lea
movzbl
movzbl
mov
mov
add
movzbl
movzbl
xor
inc
cmp
jg
jmp
call
imul
add
lea
add
adc
lods
inc
testl
movsl
ljmp
jg
pop
out
add
lret
dec
jae
mov
clc
ss
es
xor
cmpsb
mov
repnz
lcall
push
dec
or
stos
nop
stc
xor
or
add
pop
outsl
sub
adcb
and
mov
adc
push
push
mov
lock
xchg
repz
xchg
xchg
jb
mov
addr16
xchg
fildll
fstl
push
int3
ret
and
inc
insl
aam
sbb
push
ds
sbb
loope
xor
mov
in
fsubs
jp
or
xor
jnp
cmp
jno
fmulp
incl
cmp
and
push
cli
mov
rcl
push
mov
test
add
mov
jge
aas
scas
popf
dec
ror
fcmovnbe
mov
arpl
stos
cmp
push
push
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
lea
push
cmp
jne
sub
jmp
