mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
add
cmp
pop
and
mov
mov
mov
fcoms
inc
ficoml
cmp
out
ret
push
add
add
pop
add
add
cmpl
jne
pop
pushl
jae
shrl
push
push
push
push
pushl
push
imul
xchg
dec
pop
loop
add
add
xchg
mov
pop
leave
ret
add
add
pop
push
push
dec
test
pop
jle
mov
pushl
add
adc
rcr
mov
jmp
jmp
pop
adc
or
cmp
lods
adc
cmp
push
je
rclb
fs
popa
sbb
and
push
jne
jo
mov
push
mov
test
add
push
mov
add
xlat
inc
mov
or
push
test
push
inc
cmp
cwtl
pop
or
jo
les
mov
call
xor
jg
adcb
sbb
add
or
wrmsr
ret
jmp
mov
pop
loop
and
fs
std
push
push
sbb
push
mov
jae
push
or
xlat
jo
and
and
push
adc
inc
and
mov
xchg
roll
adc
ret
mov
out
cmc
loopne
inc
push
rolb
mov
pop
add
jnp
xor
icebp
lahf
sbb
cmp
push
push
add
icebp
add
mov
push
push
cmp
or
pop
pop
fistpl
mov
add
lock
mov
mov
fs
mov
hlt
into
sbb
inc
out
inc
push
mov
pop
lea
addb
pushf
movsb
pop
push
aad
ret
stc
push
popf
add
push
fstpl
and
pop
inc
popf
scas
mov
xor
jbe
inc
fsubs
jb
sub
pop
pop
or
mov
fst
or
pop
or
lret
sub
push
int
xchg
pop
or
jmp
inc
out
sub
inc
push
outsl
sti
aad
and
mov
mov
sub
or
add
decl
lds
cld
lock
mulps
xor
jmp
lock
jo
inc
push
clc
push
cmp
fwait
hlt
lods
and
push
cmp
int3
add
sbb
pop
xor
lock
jne
shl
add
xor
hlt
clc
push
or
add
cmp
and
add
push
jo
xor
sbb
inc
push
mov
or
lock
leave
mov
fsubl
inc
in
call
pop
data16
push
mov
add
push
hlt
enter
in
push
fists
shll
jg
cmpl
push
sahf
lds
mov
loope
sahf
inc
push
mov
or
pop
cmp
setg
pop
pop
cld
jp
mov
cmpsb
push
pop
lea
das
mov
jne
movl
sub
add
pusha
pusha
bound
ficomps
fistpl
mov
jge
repnz
mov
je
xorb
js
pop
jmp
je
shlb
popa
xor
pop
rolb
std
fsubl
ret
or
push
sbb
add
xchg
xor
sub
mov
add
xchg
jo
xlat
jnp
shrl
mov
adc
mov
or
sub
push
sub
sub
xchg
sarl
outsb
xor
push
lods
sbb
stos
adc
add
adc
mov
cmp
loopne
dec
cwtl
push
add
es
mov
jmp
mov
in
or
xchg
cltd
mov
roll
pop
call
and
sbb
pushf
call
loop
push
cmp
mov
cld
movsb
mov
notrack
add
les
lock
mov
cmpl
add
or
jnp
cmpsl
adc
and
mov
mov
sbb
enter
push
shlb
aam
cmpsb
inc
mov
aad
insl
cltd
fisubs
cmp
dec
jae
push
add
or
push
mov
and
mov
insl
xorb
jg
push
pop
and
pop
jne
push
jl
aas
mov
mov
les
mov
pop
rcrl
and
ret
aam
xor
sti
mov
jne
shl
arpl
inc
andb
aam
popf
out
xchg
ljmp
shll
add
rcrb
call
sbb
push
xor
dec
fmuls
jb
dec
pop
mov
push
push
in
push
call
inc
cmp
xchg
shlb
loop
dec
shlb
push
sarb
or
pop
cld
je
out
mov
jmp
xor
test
call
mov
lods
mov
sub
push
aam
out
scas
mov
sbb
int3
push
mov
xlat
popf
aas
xchg
add
and
xlat
xchg
aam
add
xchg
push
andl
mov
add
ds
popa
dec
push
mov
adc
arpl
lods
incl
and
add
cmp
bound
adc
test
and
sahf
icebp
add
push
inc
cmp
jmp
xchg
or
incl
lea
cld
mov
int
lods
adc
pop
xor
inc
aad
insl
lea
hlt
mov
push
sub
xor
rorb
out
leave
std
lea
xor
fstps
jb
or
mov
nop
push
into
ja
adc
inc
cmpsl
push
or
push
pop
inc
stc
sbb
sub
cmp
jge
movzwl
arpl
cs
cli
sbb
lock
inc
jge
ss
push
sub
sub
lea
adcb
test
pop
movsl
adc
sbb
mov
add
imul
mov
xchg
les
push
pushl
push
sbb
pop
inc
push
cmp
inc
clc
ret
push
adc
jns
ror
nop
xor
xorb
int3
call
frstor
fistpl
sbb
xor
mov
in
rol
adc
mov
sahf
or
jge
cmp
mov
xchg
pop
inc
mov
pop
arpl
in
inc
shrb
rorl
mov
out
in
imul
aam
je
orl
jns
cmp
jp
cmp
cmp
push
fdivrs
ljmp
push
enter
push
jmp
inc
popa
dec
in
daa
xor
mov
aam
jne
push
jbe
or
mov
add
call
ret
rolb
lock
sahf
and
mov
mov
mov
cmp
rcrl
andb
pusha
dec
inc
inc
jno
adc
push
sbb
mov
or
jecxz
sub
push
adc
jp
or
outsb
adc
arpl
xor
add
cmp
jb
xor
test
sub
inc
scas
inc
bound
mov
lea
shrb
pop
push
or
lock
cmove
push
jecxz
dec
add
sbb
add
test
push
aam
inc
movsb
in
rcrb
adc
outsb
inc
in
test
sub
lcall
in
fsubs
arpl
in
mov
sbbb
in
xlat
mov
mov
add
add
repz
or
addr16
inc
sahf
pop
jo
mov
popf
jae
xor
cli
call
xchg
mov
ret
int3
push
lock
mov
and
and
mov
push
addr16
cmpsb
in
pop
sbb
int3
push
cld
mov
mov
jae
mov
in
mov
test
cmp
sbb
dec
scas
popf
int
imul
inc
cld
daa
sbb
xor
aam
pop
push
jne
mov
pop
dec
daa
xchg
test
sub
adc
inc
lret
fstl
or
cmp
addr16
das
pop
sbb
mov
jl
or
push
leave
xor
ja
cwtl
mov
push
sub
gs
cmp
mov
mov
addb
lock
or
mov
push
inc
shrb
jl
mov
sub
dec
addr16
jne
nop
xchg
cwtl
dec
or
stc
popa
pushf
in
push
clc
cwtl
loop
outsb
inc
and
push
add
inc
andb
cmp
int3
add
clc
or
push
mov
xor
add
je
xchg
inc
jns
sti
push
or
add
outsb
mov
mov
mov
imul
data16
mov
out
add
loopne
andb
ss
sbb
sub
dec
pop
jg
shrl
test
adc
rolb
shrb
add
sub
mov
push
cmp
test
add
mov
mov
enter
push
les
dec
push
insb
cmp
push
xor
push
pusha
fcoms
inc
pop
push
xchg
shl
sbb
push
insb
mov
lods
push
mov
les
and
and
and
sahf
sub
push
jmp
imul
test
push
xor
or
loop
hlt
push
enter
push
pop
mov
sti
cld
jne
sub
jbe
cs
lcall
or
or
cmp
sub
sarb
testb
mov
push
push
and
xlat
hlt
adc
adc
lock
outsb
push
inc
mov
pusha
or
add
mov
stc
and
pop
cltd
jp
repz
xchg
mov
out
mov
adc
sub
adc
dec
adc
lret
jg
mov
rcll
movl
inc
or
adc
adc
sbb
and
sbb
xorb
sub
je
mov
xor
push
sbb
jno
jbe
adc
sbb
mov
push
pop
bound
inc
or
jo
cmpsl
icebp
xlat
scas
jge
xchg
rclb
xchg
push
jb
test
mov
je
sub
xchg
mov
jle
das
or
test
jl
cld
adc
aam
ljmp
pop
push
jne
lcall
sub
pushf
stos
test
sbb
sbb
rclb
int
mov
int3
fadd
cmp
aam
pushf
push
jg
test
imul
fidivrl
fwait
les
not
sub
cmpsb
inc
aas
mov
das
or
add
clc
leave
sbbl
shll
ljmp
or
sub
mov
ss
mov
mov
jbe
lds
adc
clc
fs
xor
lods
jne
add
cmp
cld
push
int
arpl
fwait
jge
imul
jmp
adc
rclb
adc
mov
xor
push
xchg
add
jne
jmp
push
jae
mov
imul
dec
or
jo
shlb
adc
test
mov
stos
jge
push
jmp
stc
adc
arpl
fcomps
imul
sbb
sub
mov
or
cmp
xchg
ja
mov
xor
and
test
xchg
shrb
and
add
xchg
and
and
xor
shr
mov
push
pop
lock
dec
jne
pop
pop
not
cmc
mov
and
fistl
leave
cmp
int3
pop
sub
fadd
orb
pop
add
inc
inc
push
shll
sub
xchg
pop
or
mov
bound
inc
push
add
scas
testb
je
dec
loop
inc
out
pop
imul
enter
xchg
loop
add
arpl
das
es
xchg
pop
shll
push
add
sarb
cld
sbb
in
sub
mov
fstpl
add
sbb
fs
in
aas
adc
ds
push
dec
xor
push
dec
arpl
imul
lea
mov
andb
push
pusha
dec
add
mov
mov
imul
push
bound
cmp
int3
popa
pop
cwtl
roll
out
jo
mov
mov
test
jne
or
mov
xor
sub
inc
lods
jne
pusha
divb
adc
stos
push
push
ja
ja
cmp
push
add
xor
push
fidivrs
jmp
mov
in
ljmp
add
push
je
loopne
mov
or
xor
fdivs
loopne
mov
ret
in
cld
enter
push
pop
and
mov
dec
mov
add
call
sbb
outsl
xchg
and
pop
sbb
add
jecxz
enter
test
stos
push
arpl
xor
into
fistpl
sub
lea
adc
push
daa
outsb
push
push
jp
bound
mov
repnz
jbe
push
mov
into
xchg
mov
daa
ja
arpl
pop
dec
jmp
popa
push
push
sbb
add
imul
pop
dec
sti
nop
add
mov
mov
int
lret
add
loopne
nop
xchg
lea
sub
mov
pop
pop
cltd
in
bound
mov
gs
xchg
jge
dec
fisttpll
pop
cltd
inc
xchg
and
mov
add
mov
lcall
mov
scas
icebp
mov
jns
cmp
clc
lods
push
sbbb
cld
in
mov
imul
out
lcall
fdivrl
test
mov
push
or
jp
push
and
cld
test
loope
mov
into
add
mov
jne
cmp
mov
fs
sub
jmp
add
or
fldcw
pop
jmp
push
pop
cmp
je
or
sub
inc
push
imul
push
mov
xchg
insb
adc
mov
insb
mov
or
loop
int
ss
inc
repnz
xor
mov
cmp
fsts
sub
jne
cs
push
jmp
jmp
mov
inc
adc
add
pop
cmp
in
je
cld
push
mov
mov
sbb
add
clc
lcall
push
inc
ljmp
or
jbe
add
insb
xchg
popf
sbb
lock
fcmovu
adc
scas
sbb
push
sbb
pop
cmp
std
stc
and
push
ljmp
jecxz
fstpt
adc
add
nopl
jae
imul
loop
and
add
mov
adc
lock
ljmp
lock
cmpsl
test
loope
mov
jbe
scas
add
scas
andb
cli
mov
inc
adc
and
dec
add
mov
jne
push
inc
fisubl
std
rcrb
inc
fisttpl
rclb
jecxz
popa
rcl
push
jbe
cmp
inc
jg
ror
add
in
adc
notl
sar
jnp
xchg
rclb
and
mov
mov
cmp
jne
push
out
sub
rorb
mov
dec
cmp
int
sbb
dec
lahf
enter
push
push
sub
daa
fucom
push
and
cmp
clc
sbb
jne
insb
inc
jo
imul
aam
sbb
fdivrs
int
bound
mov
mov
sbb
xor
cs
inc
call
add
push
mov
test
add
jg
push
adc
enter
lcall
jl
sti
in
in
pop
mov
adc
xor
mov
lcall
loope
jnp
mov
cmp
arpl
mov
add
data16
cmp
jge
lods
or
cli
cld
cmc
mov
out
adc
neg
test
mov
adc
clc
pop
dec
addr16
cmp
mov
jle
shr
aam
nop
push
cltd
add
loope
loop
adc
dec
hlt
ror
jl
mov
test
test
es
adc
push
lds
mov
sub
jne
jne
jne
std
sbb
sbb
xor
dec
add
pop
mov
idivb
mov
adc
jo
dec
adc
push
add
adc
jge
jecxz
sbb
out
hlt
push
out
cmp
push
jmp
out
sub
mov
iret
adc
das
adc
repnz
scas
push
es
push
mov
inc
jmp
push
and
popa
mov
pop
bnd
xchg
fadds
rcrl
pop
icebp
loopne
push
or
push
cmpsl
mov
je,pt
cmp
and
aad
in
mov
pop
ret
sarb
dec
in
lcall
lret
push
jecxz
iret
data16
sub
xchg
fmuls
mov
subb
xchg
mov
cwtl
push
push
push
cmp
stos
popf
aam
inc
push
gs
and
dec
outsb
in
dec
mov
fsubs
push
rcll
loope
js
andl
push
jnp
bound
fisubrl
flds
cld
pop
je
pop
int3
lds
jbe
jo
cmp
sub
dec
push
or
sub
pop
inc
jge
mov
movsl
mov
call
lock
push
shlb
pusha
sub
test
clc
push
mov
pop
stos
ja
insb
pop
lea
in
lds
xor
sub
mov
mov
lods
jo
pop
fmul
aad
jne
daa
jo
push
sbb
cmp
jle
adc
fldt
xchg
clc
add
sti
mov
mov
out
inc
xorl
imul
add
fsubrl
in
lds
dec
test
fldt
cltd
int
lcall
or
mov
mov
hlt
or
loop
inc
xchg
dec
aas
insb
add
dec
and
mov
lahf
cld
hlt
lods
jnp
iret
and
sbb
mov
inc
mov
push
mov
jno
cwtl
in
pop
or
test
cmp
loopne
nop
fs
mov
shl
lea
xlat
jmp
cli
inc
icebp
out
in
xorl
je
xor
add
mov
cltd
push
pop
idiv
cmp
jne
cmpl
adc
push
call
test
jne
push
xor
dec
punpckhbw
gs
jo
push
push
inc
pop
cmpsb
daa
jne
in
imul
cwtl
subl
cmp
clc
test
mov
push
pushf
and
cmp
cmp
in
hlt
shll
cltd
sub
roll
sti
es
add
cmp
xor
mov
mov
or
addr16
popf
or
jl
jbe
fstps
mov
addr16
popf
jne
mov
int3
and
loopne
mov
lea
adcl
push
push
sbb
daa
xor
pusha
aam
les
cmp
cld
mov
push
stos
enter
xchg
subl
and
adc
dec
enter
inc
es
or
int
xorl
mov
mov
inc
mov
jne
mov
cli
inc
test
cmp
in
into
inc
mov
mov
in
into
fsubrl
daa
xchg
dec
int
insb
add
je
mov
sbb
add
shl
xchg
movsl
les
or
scas
push
dec
push
int
dec
fmuls
cmpb
mov
push
dec
lock
fnstenv
nop
dec
pop
sub
popl
data16
cmp
adc
xchg
dec
cmc
add
fstl
fildl
test
add
xlat
or
inc
push
mov
clc
add
pusha
mov
push
cld
ds
push
jp
fcoml
aas
imul
sahf
or
rorb
ret
pop
or
jne
shlb
fucomi
js
jge
add
jne
push
jmp
popf
pop
cmp
cmp
sub
enter
dec
lcall
pop
adc
mov
bswap
ljmp
cmp
dec
in
int3
std
fs
pop
sub
xor
or
push
faddp
inc
push
cmp
fsubrp
push
push
into
sub
jno
test
int3
push
insb
popf
test
lods
jns
loopne
adc
out
mov
cwtl
ret
movb
hlt
push
cmp
jecxz
cmpsb
add
call
jnp
ja
out
inc
nop
inc
mov
nop
adc
insb
sub
lods
push
out
test
pop
or
inc
push
clc
shr
shll
pop
andl
dec
inc
sahf
dec
pop
lock
pop
stos
xchg
aaa
inc
xchg
push
ret
sub
mov
test
insb
mov
cmpl
push
mov
push
push
sub
push
hlt
in
cld
cmp
cmp
insb
out
jo
movsb
lret
cmp
pop
push
jmp
testb
rorb
mov
int
jne
pop
cmpb
into
jns
add
fbstp
imul
call
mov
xchg
sbb
aas
in
cs
mov
and
movsl
inc
bound
imul
fbstp
adcb
jno
fdivrs
dec
int
cmpsl
push
std
cmp
mov
push
test
push
push
lea
push
std
hlt
cwtl
aaa
hlt
insl
adc
cs
out
mov
jbe
dec
mov
push
mov
lock
sub
or
pop
adc
xchg
mov
int3
inc
jl
add
add
incl
fmul
enter
es
cld
xchg
add
shrb
inc
pop
push
jge
mov
leave
cltd
fdivrl
sub
pop
test
scas
in
pop
mov
sti
pusha
adc
or
movb
lret
lahf
adc
or
ret
rcrb
aam
jae
sub
aad
int3
pop
ds
sbb
in
movzwl
cltd
mov
or
push
push
shll
fmull
push
xchg
push
adc
test
hlt
cmc
dec
aaa
or
add
push
push
pop
je
adc
cmp
add
ss
and
and
add
add
ficompl
rolb
mov
push
test
clc
push
fdivs
sbb
adc
adc
lcall
push
mov
cltd
mov
add
add
pop
adc
das
enter
enter
imul
jmp
ja
mov
pop
subb
lock
icebp
in
repnz
sbbl
mov
fmull
push
loop
push
xchg
push
xlat
inc
insl
inc
mov
addl
cmp
xor
pop
enter
fnstsw
push
pop
int3
lock
cmp
es
sub
movl
xor
mov
adc
jg
call
adc
mov
xor
rorb
shlb
sub
mov
lock
xchg
rcrb
in
mov
mov
popa
test
inc
sub
rcll
and
mov
push
pop
test
imul
popa
inc
mov
sub
and
pop
push
std
shl
mov
lea
xor
sbb
add
xchg
jno
lcall
inc
mov
add
mov
xchg
js
movsb
mov
jg
lock
pop
shlb
add
call
cs
pop
insb
in
outsl
adc
inc
cmp
jae
cmp
fwait
mov
cli
mov
xchg
mov
rcl
lret
cmp
aam
std
repnz
lahf
jne
xchg
jns
push
mov
dec
xchg
add
push
pop
ss
in
dec
in
and
imull
bound
dec
add
in
call
adc
mov
pushf
fucomp
out
mov
or
and
cmp
add
pop
add
add
lcall
add
aas
mov
sarl
adc
or
xor
cmp
push
mov
push
sub
jl
cmp
xchg
add
xchg
sbb
dec
daa
xchg
iret
je
les
mov
push
lods
movsl
nop
push
data16
pop
pop
add
sub
cmpsb
push
iret
xor
ret
mov
insl
div
mov
cmpsl
and
jbe
in
inc
adc
and
enter
fwait
arpl
clc
and
mov
sbb
mov
daa
sbb
xchg
ret
mov
in
das
add
push
mov
cmp
nop
inc
mov
jne
fildll
push
or
and
out
ret
push
inc
sub
stos
mov
mov
enter
xor
pushf
out
out
push
int3
ja
mov
xor
test
scas
and
mov
and
and
xor
sbb
cld
cmp
sbb
lret
inc
inc
sub
fwait
es
sub
inc
movl
push
sbb
mov
cmpsl
rorl
adc
mov
jl
pop
sbb
test
xor
jmp
push
pop
dec
jle
rcrl
xor
decb
mov
xor
sub
jle
mov
push
adc
adc
inc
cmp
dec
ret
dec
daa
jns
imul
rcrl
xchg
adc
inc
pop
sub
dec
mov
and
fimuls
shrb
or
inc
ljmp
pop
loopne
xor
pusha
sub
or
or
push
mov
or
aam
popa
cld
pop
cltd
test
leave
or
push
sub
jmp
sbb
add
mov
mov
inc
dec
lea
cmp
jae
andb
push
mov
pusha
std
sbb
add
cmp
call
sbb
bound
and
or
mov
popf
popf
popf
adc
ss
popf
mov
or
pushf
xchg
jo
sbb
sbb
hlt
clc
cld
mov
sub
lock
sbb
push
call
cwtl
cmp
xchg
xchg
call
adc
sahf
push
cwtl
add
xor
mov
pop
jge
ljmp
adc
and
loope
inc
cmpsb
add
hlt
sahf
sbb
cld
mov
mov
jmp
clc
pop
xor
mov
call
dec
inc
pushw
adcl
add
push
push
insb
sahf
pop
es
xchg
jne
mov
rolb
das
mov
mov
sbb
das
sbb
loop
mov
pusha
mov
lods
hlt
dec
fwait
jg
dec
dec
mov
or
setle
jle
ret
cltd
and
cmp
adc
inc
add
or
and
push
ss
push
adc
add
or
push
xor
sub
in
add
iret
xor
push
aas
xorb
call
punpckldq
movsl
stc
xchg
data16
ja
dec
adc
in
addr16
sub
in
and
xor
add
aas
lea
jmp
add
je
push
inc
adc
stos
insb
test
cwtl
addr16
lea
push
jne
push
enter
pop
repz
and
or
hlt
mov
icebp
cli
push
int3
mov
lds
mov
jge
xorl
push
inc
lods
pop
push
inc
push
std
adc
pop
dec
les
std
pop
sbb
es
jge
sti
sbb
test
scas
es
scas
lods
push
int3
xor
enter
cwtl
fcoms
scas
xor
push
scas
sbb
xchg
adc
addb
dec
jge
mov
mov
or
lods
lret
mov
adc
pushf
add
jg
aas
cmpsl
fs
adc
pop
add
cmp
mov
or
popf
outsb
mov
fisubrl
shll
insb
mov
push
fs
movsl
dec
adc
xchg
add
std
dec
fcomp
addr16
xchg
arpl
ja
jg,pt
push
outsb
and
das
xor
and
inc
pop
dec
add
sbb
test
mov
and
ret
movsb
mov
xor
xor
ja
push
xlat
mov
je
testb
push
cmpb
jmp
inc
je,pn
ret
push
mov
inc
icebp
inc
sbb
pop
sub
sbb
clc
in
daa
ret
mov
pop
sub
jge
shl
mov
pop
mov
xor
out
sbb
jnp
mov
push
mov
jbe
inc
lds
leave
xor
aas
js
jbe
mov
push
dec
adc
test
arpl
push
lcall
rolb
out
and
movsb
xchg
xchg
rol
xchg
jno
or
pushf
dec
cmp
or
cwtl
push
fsubrs
push
push
mov
mov
shlb
aam
xor
mov
push
or
in
and
pop
inc
mov
cmpl
fdivs
loopne
mov
push
mov
jae
lret
es
xchg
cmpsl
fisubl
orb
mov
push
sbb
sub
push
mov
xor
lock
mov
mov
shrl
cmove
pop
and
inc
cmpl
push
jbe
andb
cmpsb
shr
xor
std
inc
xchg
mov
pusha
sbb
or
and
fldcw
cmp
hlt
inc
push
lock
call
jns
insb
jbe
cmp
adc
add
sub
push
dec
mov
adc
push
std
jge
push
inc
insb
movsl
fs
add
or
push
push
push
push
leave
pop
mov
add
or
sub
adc
add
push
push
mov
fdivs
nop
fisubl
jb
adc
test
arpl
mov
push
cltd
pop
jle
xchg
flds
sbb
push
pop
xorb
mov
inc
cmp
mov
jb
cmpw
jne
aad
dec
push
adc
xor
dec
jae
lahf
jo
in
out
aaa
add
fsubs
xchg
pop
or
push
or
xchg
pop
inc
jecxz
adc
ret
cmp
dec
mov
and
pop
pusha
es
jb
sbb
and
add
lods
xchg
ret
mov
or
mov
test
repnz
pusha
pop
je
sbb
and
les
inc
in
rolb
fs
xor
adc
aam
hlt
lock
and
cmp
pop
inc
int
add
mov
sti
cwtl
xor
les
mov
mov
xchg
push
sub
add
std
jg
addr16
shl
jbe
nop
mov
shrb
xchg
insl
lahf
xchg
or
call
mov
and
cmp
jne
add
in
cmp
inc
push
repnz
test
hlt
push
imulb
jb
or
sbb
sbb
popa
pop
insb
aam
test
mov
je,pt
add
adc
int3
hlt
inc
add
inc
cmp
jb
and
sbb
jmp
imul
sbb
out
push
and
jno
mov
pop
or
call
sti
adc
add
clc
cmp
lds
add
sub
mov
sbb
loope
lds
in
lea
sahf
cmp
add
pop
mov
pop
mov
pop
insb
pop
hlt
jne
or
push
andl
pop
or
mov
pop
push
sbbl
cmp
xchg
fsubs
cmp
fdivrs
adc
js
push
call
fimull
cmp
jne
mov
pop
add
add
push
xlat
adc
fsubrs
cmp
scas
clc
cmp
push
push
push
xchg
sbb
xor
mov
sbb
sbb
pop
cld
cmp
das
ret
bound
mov
xchg
jnp
ret
loop
add
add
sahf
mov
inc
and
push
add
add
or
inc
cmpb
xchg
rorl
andl
orl
mov
aam
mov
lea
xchg
inc
and
mov
mov
loop
xor
jmp
push
pushl
fs
jns
mov
cmp
call
mov
lock
mov
sbb
cmp
push
mov
sahf
xor
ljmp
test
jne
xchg
adc
mov
or
fcomps
popf
mov
add
repnz
push
call
sahf
lock
call
push
clc
add
add
push
mov
dec
mov
test
mov
jb
pop
jns
push
add
jne
cmp
and
jge
jle
test
cmp
into
sbb
push
orb
sbb
sbb
out
jo
inc
push
sbb
dec
adc
sub
xchg
or
shrl
mov
test
mov
fsubs
push
mov
xor
mov
jnp
sbb
xchg
or
idivl
rclb
add
clc
mov
mov
or
dec
push
je
dec
dec
lea
into
dec
xchg
inc
or
pop
inc
test
cmp
and
sar
stos
addl
stc
es
decl
rclb
mov
daa
lock
inc
dec
pop
and
pop
aas
stos
sbb
push
mov
mov
lods
push
loopne
test
sbb
pop
sbb
lock
test
faddl
jne
das
mov
jg
vcmpss
je
dec
ds
in
je
add
repz
mov
push
adc
sub
and
mov
out
into
and
popf
ret
inc
jmp
js
jns
sbb
mov
out
fdiv
ret
pop
hlt
inc
enter
mov
mov
ret
adc
add
push
gs
push
mov
lahf
inc
test
xchg
test
pusha
pop
cwtl
push
dec
nop
aas
fimuls
dec
push
sahf
push
pop
jo
mov
mov
push
xor
inc
int3
pop
in
add
stc
sbb
movsb
fs
fs
popa
out
jbe
loope
push
xchg
add
mov
inc
jge
out
inc
cmpsb
int3
bound
mov
and
mov
or
push
mov
mov
aas
push
jge
mov
test
cli
test
hlt
movl
je
mov
clc
stos
push
call
test
test
je
inc
cmp
jb
mov
sbb
mov
inc
cmp
xor
fldcw
cmp
dec
dec
sub
xlat
push
rcll
xor
test
inc
loope
jg
dec
lret
xor
pop
cmp
cmp
add
mov
ret
mov
mov
xor
or
pushf
inc
lea
jb
dec
xchg
movsl
mov
mov
adc
mov
dec
or
mov
xor
jne
imul
outsb
pop
xchg
dec
add
add
fs
push
roll
icebp
pop
pushf
xchg
dec
mov
fsubl
les
jmp
in
xor
push
pop
loope
xor
sbb
push
inc
cmp
pop
jbe
xchg
inc
xor
loope
cmp
and
out
jmp
or
jp
mov
iret
add
cmp
lock
inc
ret
add
jae
dec
xchg
inc
lcall
and
lods
xchg
in
fbstp
jmp
push
dec
add
fiaddl
cltd
cld
outsl
enter
std
daa
inc
sub
test
test
adc
lcall
cmc
popf
mov
and
cmp
imul
vpmacsdql
popf
or
mov
scas
pop
insl
in
icebp
mov
daa
inc
or
lods
xchg
rcll
cld
mov
inc
and
mov
xor
inc
js
mov
aam
inc
cmp
pop
pop
pop
roll
cmp
cwtl
pop
mov
jno
dec
adc
test
stos
push
and
push
cmp
cmpl
pop
cwtl
loopne
into
in
jne
xchg
mov
jmp
sub
sbb
popf
hlt
add
loop
jo
sub
pop
fadds
outsl
xchg
cltd
daa
fwait
movsl
xchg
out
cmc
or
mov
xor
jmp
push
cwtl
popa
and
push
mov
cmpsb
mov
push
les
daa
dec
or
dec
iret
shl
jae
mov
cmpb
push
push
mov
movb
push
dec
into
lods
arpl
pop
adc
fdivl
ljmp
jnp
nop
mov
xor
cmpb
pop
and
xor
divb
jne
test
and
jmp
sub
ret
cmp
inc
call
nop
lahf
dec
inc
addr16
test
and
dec
in
or
popf
or
imul
push
shlb
lret
adc
je
or
push
mov
cmp
es
add
filds
cmp
lds
cmp
cmc
add
and
je
in
out
fadd
int
dec
shl
xor
lea
adc
aaa
jo
orl
jmp
jo
xchg
test
push
fwait
push
push
ror
or
lret
repz
xor
leave
and
in
inc
outsb
test
cmpsb
mov
andl
cmp
push
push
movsl
push
jnp
cmpsl
aam
out
mov
jae
lcall
jb
add
cmp
mov
fcmovu
enter
cmp
js
fists
test
shrb
fstps
add
lock
xor
ja
cmp
iret
adc
push
pop
pop
clc
fs
in
inc
cli
pop
aaa
push
ljmp
and
cmpsl
adc
push
pop
pushf
mov
lods
push
cmovle
cld
push
adc
and
cmpsb
data16
mov
jo
adc
outsb
lahf
xchg
sub
mov
mov
push
popf
adc
mov
mov
add
movb
push
fstpl
sbb
into
sbb
and
fldenv
xchg
je
push
inc
jmp
push
shrl
call
mov
das
je
dec
jne
inc
push
add
js
arpl
in
and
mov
test
js
int
mov
lea
push
push
inc
mov
mov
pop
test
mov
sbb
movsb
push
push
in
mov
test
adc
cmp
cwtl
sbb
mov
cmp
mov
in
mov
pusha
pop
push
dec
repnz
inc
inc
les
out
ljmp
jl
sbb
insl
and
adc
push
je
push
outsl
fs
sti
movsl
ret
push
test
cmp
mov
fdiv
clc
sub
jmp
ret
fdivs
jae
test
push
lock
adc
test
push
icebp
jne
std
push
pop
into
sub
jbe
pusha
xchg
lret
xchg
mov
scas
inc
mov
clc
fsubrs
jne
mov
dec
cltd
push
mov
and
xchg
in
cld
xchg
or
sub
mov
cld
mov
fnstenv
jmp
test
divb
ljmp
addr16
cmp
mov
ss
xor
xchg
sbb
es
cmp
push
jne
idivb
push
lods
lds
jne
mov
xchg
pop
test
pusha
pop
rorb
mov
mov
mov
hlt
lcall
jmp
mov
stc
je
jl
cmp
xor
adc
lahf
enter
inc
inc
repz
mov
push
subl
xchg
outsb
xor
mov
cmp
movsl
enter
push
cs
insb
push
cld
sti
lods
sub
cmp
adc
mov
mov
xchg
sbb
neg
jns
cld
pop
lret
push
inc
insb
iret
mov
movlps
ret
or
xchg
inc
xor
push
mov
mov
or
mov
inc
push
push
jmp
jne
ds
push
jle
push
mov
sbb
pusha
int3
movsl
inc
mov
mov
push
jno
sbb
mov
inc
cmp
add
xor
push
push
into
rcr
out
sub
push
mov
sahf
jmp
inc
shrb
aad
sbb
test
xor
pop
popa
out
cmp
cwtl
adc
dec
pop
int3
sub
test
push
mov
gs
inc
add
je
inc
rep
dec
mov
mov
jne
cmpsb
mov
pop
sbbb
mov
cmp
push
cwtl
fcoms
ret
aam
sub
dec
cs
fbld
xchg
enter
push
lea
dec
imul
add
mov
hlt
pop
jecxz
jne
pusha
mov
push
negb
pop
test
cld
pushf
enter
mov
ljmp
in
or
cwtl
pushf
mov
add
dec
call
clc
inc
insb
adc
add
inc
or
aam
mov
mov
add
push
mov
xor
or
and
icebp
or
pop
jbe
fadd
jecxz
add
push
jmp
jno
lcall
mov
ljmp
mov
cmp
mov
repnz
loop
out
pop
sbb
mov
aam
push
sub
dec
fs
push
movsb
jle
sub
inc
or
mov
cltd
add
int3
xor
div
cmp
jbe
or
in
inc
add
or
xor
jne
shr
push
jno
jmp
xchg
sub
pop
mov
jno
sub
les
test
and
mov
jbe
cltd
cmp
sbb
push
fs
sub
inc
cltd
arpl
dec
push
push
sub
push
and
and
push
pop
xor
pop
push
outsb
and
jecxz
and
das
adc
push
push
call
add
cmp
inc
aam
hlt
cmp
mov
inc
mov
push
push
lret
enter
popf
cmp
fwait
popf
in
adc
mov
inc
jo
xchg
sub
lahf
push
nop
jns
cmp
ljmp
cmpsl
cmp
hlt
pop
pop
push
cmp
enter
push
outsb
leave
imulb
lret
cmp
ja
fnstsw
mov
push
xor
dec
les
xor
inc
in
and
and
mov
imul
inc
push
scas
pop
dec
iret
subl
push
addl
mov
sbb
fidivrs
sti
mov
mov
pop
lock
insl
xor
dec
mov
adc
xor
sub
pop
stos
mov
test
xlat
es
adc
xchg
sarb
sarb
sahf
and
push
hlt
data16
push
mov
pop
push
pushw
add
adc
jmp
gs
pop
cmp
push
je
arpl
mov
push
aaa
test
sub
data16
jge
scas
xchg
aas
iret
mov
flds
and
rcr
push
add
andl
mov
inc
xor
and
scas
repnz
add
imull
stos
loopne
lcall
cmpsb
sub
sbb
outsb
mov
cmp
cmp
push
arpl
and
loopne
cmp
sbb
test
lea
out
les
push
das
iret
dec
inc
pusha
push
cmp
subb
movsb
push
ss
add
mov
and
ljmp
dec
jbe
mov
and
js
rolb
fs
les
data16
jle
cmp
jle
pop
jge
movl
mov
popf
cmp
jne
test
lock
out
add
mov
repnz
repz
add
pop
jne
andb
cmp
push
pop
cmp
jmp
or
cmp
jmp
pop
clc
dec
pop
stc
cltd
push
inc
iret
cld
jmp
roll
push
adc
je
add
sti
adc
add
sbb
push
ret
add
scas
shll
sub
or
mov
clc
inc
xchg
mov
jns
les
movsl
push
mov
xchg
loope
push
add
mov
push
xorl
or
test
shl
sbb
cmp
or
inc
push
mov
push
ret
movsb
lock
push
scas
add
mov
rorl
or
push
xor
xor
setne
dec
or
mov
or
dec
in
or
dec
or
add
mov
and
pop
test
add
lods
sbb
xor
jns
jl
mov
cmp
imul
enter
and
addr16
shlb
adc
insb
inc
jmp
jmp
insb
mov
mov
xor
shrl
shlb
stos
test
push
loope
mov
cmp
jns
and
dec
repz
movl
push
push
inc
inc
inc
add
shll
sub
or
push
punpckhwd
test
je
push
sar
insb
nop
and
clc
cmpsb
push
shll
jae
add
cmp
neg
fcomps
xor
jnp
xor
jmp
cmp
push
mov
insb
mov
adc
sub
lea
push
dec
inc
ss
dec
movsl
sahf
add
or
addr16
push
push
dec
xchg
sub
clc
xchg
cld
jne
mov
mov
sbbl
push
add
and
sub
jo
inc
lcall
loope
jp
std
outsl
sbb
push
add
add
int3
outsl
sbb
push
fdiv
lods
js
cwtl
and
clc
in
clc
adcb
cwtl
in
clc
fs
in
adc
test
daa
cmp
inc
cld
jb
je
nop
mov
je
sbb
and
lods
xchg
mov
sbb
pop
mov
lcall
stos
mov
inc
shlb
stos
xor
xor
jmp
mov
int
and
jle
push
push
cmpsl
gs
popa
jae
outsb
mov
pop
je
in
fs
sub
in
clc
les
push
xchg
and
mov
sub
mov
nop
shll
fbld
pop
jle
lret
cli
sar
or
fisubrs
sbb
hlt
outsb
mov
jl
icebp
fnstcw
and
cmp
xor
loope
mov
mov
shll
adc
jmp
ljmp
cs
cmp
aad
cmp
cmp
sub
enter
sbb
jl
mov
cmp
fsubrl
or
outsl
mov
fcmove
sti
cmpsb
clc
jle
jne
cmp
and
ljmp
adc
insl
adc
rorb
ds
and
insl
js
xchg
insl
inc
pop
insl
addr16
bound
push
addr16
xor
and
movw
mov
pop
aas
aas
testl
pop
sbb
or
hlt
insb
out
pop
cmp
cmp
and
insb
mov
icebp
fsubrl
inc
mov
cmp
pushf
movsb
insb
movsb
xor
xchg
js
lret
mov
cwtl
sbb
gs
out
mov
mov
jno
pusha
xor
sbb
je
xor
xchg
xchg
lods
cmc
mov
cmp
xor
les
fyl2xp1
jns
movsl
add
icebp
fnstenv
sub
sbb
pop
fcmovu
je
mov
cld
imul
insb
lock
call
mov
sub
clc
enter
jl
mov
sub
lods
imul
mov
pop
push
pushf
imul
mov
ss
test
mov
js
mov
int
outsl
fs
push
pop
inc
addr16
addr16
pop
orb
movl
mov
addr16
fmull
adc
adc
les
sub
psraw
mov
lods
jbe
lret
scas
inc
xchg
add
in
loope
jbe
sub
aad
fnstenv
mov
add
cwtl
cltd
pop
lea
fcmovnu
fsts
adc
jno
inc
aam
je
jno
sbb
jo
xor
adc
rcll
dec
xor
jae
in
cmp
mov
jae
dec
aaa
cli
adc
aas
cmp
push
rclb
loope
loope
add
push
push
cmp
lock
push
outsb
nop
push
mov
push
call
sub
push
fnstenvs
inc
push
xor
jo
icebp
cmp
pushf
mov
push
mov
cmp
ror
je
mov
mov
add
lret
and
aas
and
jo
std
mov
add
shl
adc
or
stos
pop
mov
inc
in
xchg
jnp
sbb
imul
cmp
imul
les
jo
inc
mov
sub
lods
shrb
ljmp
call
imul
sbb
imul
imul
dec
imul
and
rorb
mov
cmc
mov
pop
xchg
mov
sub
inc
stc
push
mov
sub
xchg
cltd
imul
cmp
scas
fs
dec
cmpsb
sbb
cld
push
push
mov
jbe
leave
bound
inc
pop
jne
mov
nop
sub
jecxz
xchg
jae
pmaxsw
push
into
pusha
add
sbb
clc
xor
subl
lock
lock
mov
cmp
push
repz
add
int3
int3
xchg
cmp
pop
and
jl
sbb
ret
lock
loopnew
sbb
mov
cmp
sbb
fsubrl
imul
ja
sti
sbb
pop
xchg
das
outsb
je
aam
jno
je
jl
aaa
xlat
insb
cmp
aas
cmp
mov
mov
jl
jno
or
pop
inc
pop
inc
mov
sub
dec
cmp
adc
xor
mov
sbb
ret
inc
push
je
xchg
mov
sbb
ja
push
sbb
jle
sbb
jle
sbb
jle
sbb
jle
sbb
cld
cld
paddsb
push
out
cld
test
rclb
cld
test
mov
test
pushf
fs
jo
jo
xor
lahf
ja
stc
js
pop
fdivr
stc
jl
xor
pop
sahf
jg
pop
outsb
push
mov
jne
je
mov
mov
cmp
jge
add
inc
cmp
je
add
test
xor
sub
loope
fistl
inc
mov
imul
inc
sub
push
push
sbb
fstl
lods
sbb
rolb
lret
pop
pop
mov
and
fwait
es
push
outsb
dec
pop
test
push
mov
inc
push
nop
sub
and
inc
jecxz
mov
pop
das
adc
push
xor
and
sbb
lods
xchg
mov
adc
mov
add
rolb
adc
add
je
or
xor
enter
shlb
add
jle
cmp
jle
push
rorb
sbb
incl
mov
mov
jl
cmp
pop
pushaw
fs
push
and
lcall
adc
xor
lea
sbb
cmpl
adc
add
sbb
mov
mov
dec
cmp
jle
pop
popa
mov
movsbl
add
cmp
pop
jl
cmp
jg
popa
sbb
std
push
cwtl
mov
sahf
adc
test
and
adc
cld
and
inc
hlt
out
push
fadd
jo
add
dec
popa
push
pusha
or
jmp
push
mov
into
test
movsb
orb
mov
mov
sub
dec
push
xorb
mov
add
cltd
xor
jb
test
pop
sahf
xchg
mov
cmpsb
add
dec
shll
dec
fwait
imul
xorb
dec
out
lock
sub
cwtl
aad
cmpsl
push
xor
loop
mov
mov
or
mov
cmp
jg
movsb
xchg
sbb
or
and
lea
jb
je,pn
dec
add
push
push
mov
cwtl
mov
xchg
mov
fisttpll
lea
shrb
sub
addr16
sbb
mov
mov
insb
lea
sti
and
mov
and
scas
adc
dec
call
xchg
sub
pusha
or
les
mov
push
push
mov
fsubs
push
push
dec
repz
xor
xchg
ror
in
inc
add
ja
mov
sub
fmul
xor
sbb
push
add
mov
lea
push
out
jo
call
loopne
and
ja
push
push
leave
xchg
in
je
stos
cmp
clc
lock
jmp
jne
call
loope
sbb
lods
out
jecxz
jp
push
push
enter
push
and
int3
jno
add
mov
add
bound
sub
sbb
pop
fs
js
or
les
mov
or
pop
add
andb
push
pop
jecxz
std
push
out
adc
call
jbe
push
push
inc
lcall
fdivl
push
xor
or
and
stc
fdivl
xchg
bound
and
dec
xchg
jge
mov
push
inc
rorb
xor
mov
je
cwtl
xchg
or
cmp
adc
pushf
push
aam
ds
ja
adc
popf
fmull
sbb
aaa
sub
inc
or
push
inc
push
cmp
push
in
lods
aaa
mov
push
mov
mov
in
jnp
or
ret
mov
add
clc
jb
sbb
orb
adc
cmp
cli
addb
pushaw
cmp
in
loopne
test
fisubs
popf
lret
xchg
notb
shufps
sarb
jno
lahf
push
popl
jnp
movsb
fldl
scas
push
push
mov
dec
call
xor
dec
mov
or
mov
push
aas
sbb
push
out
fsubs
insb
icebp
xor
inc
imul
cmp
dec
adc
sub
cmp
push
test
pushl
dec
addl
add
push
jne
or
dec
mov
push
push
pushf
mov
fsubs
stc
xchg
xor
pop
data16
nopl
pop
inc
outsb
das
scas
xlat
push
jge
mov
je
rcll
rcrb
ror
pop
test
scas
sub
dec
aad
sub
iret
test
cmc
call
sbb
adc
and
dec
jb
push
inc
rcl
pusha
fsubp
popf
and
sarb
mov
cmp
push
mov
dec
lret
lahf
dec
mov
andl
xor
int3
mov
pop
and
jno
add
sarl
or
lods
outsb
jp
push
sub
push
js
xchg
jbe
xchg
dec
andl
jne
out
lock
rcr
inc
cltd
repnz
cmp
jae
cmp
add
xlat
sub
dec
cmpsl
hlt
sub
pop
insb
mov
popa
clc
xchg
mov
push
in
xor
pop
mull
mov
adc
pop
cmp
push
and
inc
testb
add
enter
insl
pop
inc
cld
daa
ror
fs
mov
xchg
in
push
jbe
addr16
addr16
mov
and
mov
lea
insb
jmp
mov
adc
xorb
xor
shl
xchg
addr16
xchg
mov
into
push
or
push
pop
loop
sbb
sbb
sti
inc
push
pop
jns
sub
mov
xor
cmp
push
add
scas
add
inc
mov
ficompl
jae
repz
iret
jae
and
add
cwtl
adcl
adc
fs
jo
jne
imul
fsubr
jne
add
mov
push
les
cmpl
dec
fs
sub
clc
push
adc
jle
jno
and
mov
adc
mov
jmp
sbb
mov
pop
shrb
lods
push
cmp
pop
test
pop
test
ror
mov
xor
rorl
popa
rolb
inc
push
push
or
dec
dec
je
add
push
je
and
mov
xor
inc
rorl
js
sub
popf
jne
mov
push
imul
addr16
ja
or
mov
adc
sbb
dec
setbe
xchg
or
inc
ja
jge
loope
mov
fdivs
push
add
outsl
pop
ja
je
lea
sbb
stc
adc
movzbl
and
push
inc
ljmp
jbe
jne
enter
das
push
jno
and
nop
jno
push
sbb
push
mov
or
mov
xchg
mov
jb
add
pop
pop
sbb
shll
xchg
mov
xchg
repnz
sbb
cmp
icebp
ljmp
test
xchg
add
add
add
or
mov
push
add
imul
sbb
and
test
pop
xchg
inc
jns
pop
ss
push
cmp
cmp
callw
xor
sti
sbb
es
jns
sbb
cmp
lock
cld
jle
and
mov
je
cmp
jo
xor
push
adc
xchg
add
push
jns
jno
xchg
xor
and
cmpsl
popf
mov
and
jns
lahf
arpl
or
js
test
test
pop
pushl
pushl
sbb
aaa
js
pop
mov
pop
mov
aaa
sub
xchg
mov
fcomps
cmp
imul
es
mov
xchg
push
and
add
inc
inc
out
popa
addb
cmovs
push
push
and
in
xchg
dec
cmpl
mov
push
push
sbb
cmpsb
add
push
pop
xor
add
push
jne
cmp
jns
jmp
adc
jb
lock
testb
mov
out
xchg
mov
ss
mov
lahf
sbb
mov
test
add
adc
adc
mov
cwtl
push
mov
sub
add
mov
add
or
jne
pop
mov
jle
push
pushl
mov
pop
pop
pop
and
lds
push
xchg
gs
les
pop
mov
push
mov
sub
push
cld
jg
add
mov
ljmp
cmpsl
in
and
xchg
in
jbe
insb
cld
jo
adc
and
pop
ss
mov
push
mov
xchg
push
call
fmull
lea
xorb
push
dec
nop
addr16
pop
adc
fstpl
icebp
test
mov
jg
ficoms
test
in
andl
sub
push
push
mov
lock
and
mov
xchg
call
ljmp
fisubl
cmp
sbb
push
cltd
or
inc
int
lock
mov
dec
bound
inc
cmp
rolb
jb
jo
dec
add
xor
cmp
mov
decl
xor
sub
in
push
fcmovbe
sub
mov
stos
cmp
dec
inc
enter
shll
repnz
cmp
sete
jne
mov
test
jecxz
xchg
add
je
jne
cmp
or
add
push
and
out
xor
dec
test
and
or
and
fs
ja
xchg
pop
mov
xchg
inc
addr16
std
mov
addr16
sbb
arpl
insl
popf
add
sarb
hlt
repnz
sub
sbbb
cmp
adc
lcall
push
faddl
mov
xchg
hlt
sub
dec
std
rclb
push
ja
add
jb
cmc
hlt
push
inc
icebp
ret
or
test
mov
jp
addb
xchg
pushl
push
ljmp
arpl
mov
inc
pop
pop
mov
ret
pushl
jmp
aas
aam
mov
mov
inc
add
push
and
adc
cmp
sbb
mov
mov
sub
jl
inc
dec
call
cmp
lahf
push
lret
mov
jnp
lcall
sar
repz
sbb
movsb
xor
jl
repz
aas
sub
cld
iret
stos
cmp
cmp
jecxz
cld
xor
cmp
incl
inc
cmp
cld
hlt
jp
jne
ja
pop
pop
jmp
aam
mov
sub
push
rorl
push
je
xor
mov
cmp
and
push
xor
sar
and
ficoms
aaa
jp
jno
inc
mul
jl
jmp
outsl
shlb
push
fs
test
je
cmp
call
xorb
push
mov
loope
daa
jno
and
mov
push
jbe
push
sbbb
aaa
push
lds
movl
cmp
das
fcompl
ret
jmp
or
push
inc
icebp
sbb
and
es
fdivrp
out
push
inc
adc
sbb
dec
pop
clc
push
sbb
dec
and
fcom
inc
hlt
pop
xchg
dec
cmpsb
mov
jl
pop
or
xchg
cmp
ja
je
sbb
dec
jae
or
movsl
sbb
xor
je
inc
leave
xchg
inc
jg
push
mov
nop
mov
je
pop
addr16
pusha
push
cmp
add
jl
sub
push
mov
or
js
and
jle
les
fsubr
jle
push
xor
ja
mov
lds
jbe
xor
lods
je
mov
es
dec
adc
mov
scas
xchg
mov
dec
push
shlb
ds
lahf
test
lret
fs
and
and
call
push
pop
jge
push
fcoms
lock
xchg
in
mov
je
lcall
sub
jne
push
int3
pop
add
fnsave
ja
cmp
aas
out
lcall
fdivrp
fildl
xor
int
cmp
or
push
inc
jbe
and
mov
sub
cmpsl
mov
dec
pop
xchg
push
push
repnz
push
imul
loope
mov
les
or
lds
xchg
movb
push
jae
ja
inc
call
std
mov
mov
mov
xorb
pop
imul
in
leave
inc
lods
pop
insb
add
fs
inc
imul
fsubl
xchg
mov
sbb
add
mov
roll
in
incb
gs
xor
in
addb
fbstp
pop
out
mov
imul
or
outsl
dec
fcompl
xchg
and
add
or
jnp
sub
mov
or
lods
jnp
incl
jb
sub
sub
adc
into
jmp
push
xor
pop
mov
push
div
add
inc
sbb
div
jne
inc
leave
fsubrl
mov
enter
imul
adc
mov
add
jno
xchg
rorb
addr16
fdivr
cmp
rcr
adc
inc
fidivrl
pop
or
add
add
and
mov
push
shll
rclb
sbb
mov
cmp
sbb
xor
mov
sub
insl
aam
sub
jbe
ret
push
int
mov
incl
aam
inc
pop
pop
das
mov
cmpl
push
inc
je
fadds
outsb
dec
lea
inc
call
add
inc
hlt
xor
and
dec
aam
and
inc
fstps
mov
sbb
cmp
adc
fnsave
ret
inc
lcall
cwtl
jp
inc
dec
cli
lods
inc
inc
stos
cmpsl
push
push
and
in
or
inc
mov
mov
js
push
jb
std
adc
sub
jb
push
push
sarb
push
int3
mov
or
mov
push
push
pushf
cmp
jg
sbb
and
and
ja
and
xchg
packssdw
xor
dec
dec
jge
cmp
hlt
pop
or
cmp
push
xor
push
sahf
cld
adc
mov
pop
cli
push
xlat
or
je
inc
sbb
xor
fwait
pushf
daa
push
push
xor
faddl
into
call
jp
insl
dec
xchg
mov
cmc
add
cmc
push
fsubrs
lock
dec
dec
clc
cmp
sbb
push
movsl
or
in
push
mulb
mov
push
and
adcl
inc
mov
xor
cmp
clc
pop
xlat
testl
shrb
sub
daa
cmp
jne
inc
scas
sbb
stc
jbe
stos
cwtl
cltd
or
or
push
mov
int3
jb
xor
sbb
cmp
out
xchg
push
jnp
lds
xchg
repnz
clc
jne
dec
xchg
in
mov
pushf
shrb
icebp
inc
fdivrl
dec
cs
mov
jmp
push
pop
push
mov
daa
add
or
gs
xor
push
mov
out
mov
mov
mov
test
rclb
out
cmpl
or
adc
mov
adc
sarb
pop
mov
out
cmp
dec
xor
adc
xchg
je
mov
out
sub
adc
adc
xor
mov
out
push
jne
or
add
add
pop
hlt
xor
shll
hlt
jnp
xchg
push
lock
aaa
pop
push
je
push
and
or
fdivl
adc
sbb
sbb
jns
jne
pushf
xchg
pushf
cmp
iret
cmp
repz
pop
push
add
aaa
mov
gs
xor
jmp
ss
jl
mov
xor
push
xchg
mov
or
lar
push
push
leave
or
mov
cltd
movsb
bound
mov
mov
movsl
lret
lret
ss
jae
lret
add
pop
inc
push
cmc
push
in
in
sbb
push
jae
adc
enter
popf
int
leave
outsb
xchg
jmp
into
mov
pop
xorl
cld
mov
in
dec
adc
sbb
cmpb
mov
iret
and
shr
xor
cmpl
xor
cmp
mov
popf
mov
fcmovnb
out
mov
jns
mov
pop
hlt
outsb
xor
fs
xchg
lods
xor
pop
mov
mov
mov
or
push
bound
in
push
cld
outsl
inc
sbbb
jbe
testl
faddl
push
push
loope
or
and
loope
sub
mov
push
inc
push
xor
loop
add
aam
xor
je
sub
and
or
je
cmp
push
js
fadds
or
pop
push
arpl
es
sub
sub
cmpsb
in
pop
iret
or
push
push
or
outsb
sub
cmp
jbe
lea
shl
xor
sbb
ret
sbb
jb,pt
jmp
push
scas
pop
in
dec
inc
bound
pop
cmpsb
mov
shrb
adc
push
cmc
fs
pop
fldlg2
dec
xchg
push
lea
pusha
xor
repz
mov
mov
clc
add
mov
jp
adc
add
jle
lea
push
shr
inc
int3
sub
aaa
neg
lea
mov
movzwl
add
inc
inc
dec
jne
pop
jmp
or
push
es
push
add
mov
and
shr
add
pop
mov
shr
not
test
lea
inc
mov
or
push
lret
dec
lret
xchg
pushf
hlt
movsb
movsl
xchg
imul
aas
sbb
dec
cwtl
daa
xchg
loope
cld
and
add
out
inc
bound
icebp
xchg
xor
inc
or
sarb
or
pop
mov
adc
jl
push
xchg
stos
dec
mov
nop
outsb
icebp
mov
out
inc
movb
dec
pop
adc
xchg
test
mov
mov
popf
daa
divb
fdivl
sbb
jo
pushf
mov
pop
scas
add
fwait
div
dec
pusha
push
test
and
test
pop
test
pop
push
inc
adc
stc
imul
push
add
jg
dec
jno
stc
aad
mov
hlt
jb
add
roll
hlt
bound
ret
test
push
jmp
test
cmp
ret
ret
stos
cli
push
push
jne
xor
mov
mov
pop
hlt
inc
imul
jmp
cmp
cmp
jb
ds
inc
sbb
cs
je
inc
lea
cmp
add
pop
push
rorb
push
xchg
imul
loop
or
fs
adc
push
cmp
add
pop
pop
stos
hlt
sub
mov
enter
fildl
test
jmp
les
sahf
mov
add
push
stos
add
clc
incl
mov
shlb
and
push
addb
jnp
mov
adc
pop
or
push
cmpl
or
jle
mov
dec
cmpl
fcomps
xchg
mov
aas
out
push
xchg
xor
or
test
cld
jmp
xor
dec
add
dec
call
and
mov
cmp
jle
xor
cmp
jge
jge
inc
jo
pop
sarb
jge
enter
push
loopne
cwtl
push
jae
lock
sarb
sub
clc
and
adc
dec
adc
sarl
jns
lds
sbb
mov
lahf
lea
sub
pop
sub
and
inc
test
int3
insb
jno
mov
sbb
clc
in
rcrb
int3
adc
stos
sbb
stos
popf
shrl
orb
xor
aaa
stos
dec
shrl
push
incl
push
cmp
pop
or
mov
lods
add
rcrb
shlb
cmp
or
aam
jb
mov
xor
sarl
dec
insb
mov
pop
cmp
repz
dec
add
sub
xchg
aam
pop
ds
cwtl
outsb
into
jne
mov
push
fwait
mov
cmpsb
js
ljmp
push
xchg
aad
pop
or
sub
fidivl
and
cmp
sbb
and
adc
pusha
or
jne
arpl
in
xchg
imul
add
std
or
jecxz
fwait
aas
leave
les
push
cmp
daa
mov
dec
addl
in
aam
aam
xchg
push
shlb
cli
jno
mov
adc
pop
add
filds
cmovno
dec
pushf
js
je
sub
sub
push
xor
push
inc
dec
adc
arpl
push
in
stc
xor
sbb
test
or
daa
push
push
or
xorl
mov
and
and
fsts
push
mov
pusha
mov
imul
pop
sub
in
arpl
fwait
cmpsl
dec
imul
jne
shrl
cmp
js
push
jae
mov
lcall
pop
mov
xor
sub
mov
fists
xchg
mov
adc
out
fildl
inc
int
nop
ljmp
and
push
lock
js
dec
hlt
rep
sbb
cmpsb
pop
sbb
pop
xchg
sti
in
leave
pop
ljmp
outsl
dec
mov
insl
in
adc
lahf
jmp
add
lcall
std
movsl
sbb
shrl
fmuls
js
and
repnz
inc
push
or
inc
adcb
push
inc
jmp
in
leave
dec
or
push
inc
cmpsl
xchg
push
or
mov
xchg
sub
sbb
loope
std
jo
in
lods
sbb
aam
in
jecxz
push
dec
dec
push
jge
xor
jg
push
cmp
jle
popf
in
fs
stc
nop
mov
xor
and
push
orl
add
mov
cs
add
fstpl
xor
xor
dec
aas
test
cmp
dec
jmp
jns
push
push
jne
mov
fs
sbb
out
xchg
sub
test
sub
xchg
push
test
xchg
popf
adc
xchg
xor
mov
jecxz
jge
lods
sub
in
jecxz
test
pop
and
daa
inc
xchg
sub
mov
pop
and
mov
xchg
jmp
fildl
pushf
mov
sbb
pop
sub
ret
pop
aaa
inc
stc
or
shrb
sbbl
sbb
std
or
mov
or
leave
or
hlt
mov
icebp
mov
adc
adc
addr16
add
inc
push
aad
movl
cmp
add
movsl
or
loop
shll
imul
test
les
fwait
xchg
into
add
test
xor
sub
imul
ds
push
push
sbb
nop
enter
movsb
mov
ss
sbb
sti
stos
inc
cld
lods
push
data16
aas
mov
rol
xor
in
inc
fisubrl
jno
scas
mov
and
cltd
and
pop
adc
mov
fisttpll
pop
xchg
ret
push
shlb
jg
out
adc
cmc
jp
in
and
add
sub
mov
cwtl
cmp
sub
push
jmp
loope
cmp
jnp
pop
cmp
popa
pushw
push
mov
and
dec
cwtl
push
mov
cwtl
enter
jb
xor
enterw
xchg
push
jbe
fldt
lea
push
xchg
daa
adc
imulb
xchg
push
mov
xlat
push
jbe
sbb
clc
pop
mov
push
push
inc
mov
mov
sub
cmp
loopne
imul
mov
add
jle
mov
pusha
mov
sarl
adc
dec
add
or
hlt
mov
add
inc
out
adc
or
or
sbb
xchg
adc
dec
inc
push
or
xchg
jmp
test
or
push
nop
lret
ja
sub
mov
je
sub
hlt
rcll
outsb
inc
xchg
xchg
jmp
or
xchg
push
inc
int3
pop
fcoml
pop
cmp
int3
lret
push
test
loopne
pop
or
mov
sub
push
out
and
adc
adc
fsubs
and
or
push
dec
inc
mov
cwtl
inc
pop
jmp
out
xor
sub
jl
dec
popf
movb
mov
pop
cmp
lret
sbb
decl
push
or
jp
mov
mov
mov
popf
jb
leave
dec
movsb
pop
cmpsl
add
sub
mov
push
sub
cmp
pushf
int3
and
int3
add
imul
lret
push
pop
jo
or
pop
dec
pop
xor
sbb
inc
cld
fwait
xchg
pmulhuw
dec
lret
push
cmp
in
or
das
inc
jno
rclb
int3
mov
sbb
xchg
jne
out
mov
stos
dec
mov
lock
arpl
sbb
sbb
xchg
mov
mov
inc
int
jo
pop
xchg
or
fs
lds
fcoms
cltd
jmp
bound
or
or
fnstsw
cmp
es
sbb
mov
push
cmpsl
int3
and
sahf
push
pop
popf
imul
sbb
enter
add
pushf
xchg
inc
std
js
adc
jne
dec
mov
add
push
sub
lea
jno
sub
adc
sbb
notl
mov
push
je
xchg
push
sbb
push
and
outsb
inc
add
adc
outsb
repz
outsb
jle
mov
gs
test
insb
pop
mov
cmp
cmc
mov
inc
test
add
mov
popf
inc
push
and
add
pushl
mov
sub
cmp
inc
dec
jle
inc
sub
sbb
mov
sub
je
movsb
mov
sbb
and
arpl
imul
and
mov
popa
into
pop
repz
jge
lret
or
and
sbb
in
in
test
jmp
repnz
insl
xchg
std
test
clc
sbb
sbb
adc
jmp
clc
hlt
sub
pop
xor
sbb
fsubrl
clc
cmp
cmp
dec
sub
pop
mov
xchg
cmp
mov
pop
dec
or
and
mov
mov
dec
out
mov
pop
and
ljmp
insl
push
push
enter
jo
rcrb
lret
pop
add
hlt
sub
leave
or
push
pop
lea
mov
cmpb
mov
pop
add
movsbl
mov
movb
stos
xorb
dec
jns
and
lahf
je
lret
clc
lcall
insb
stos
addb
jnp
or
and
cmp
and
sub
and
dec
pop
cltd
inc
movsb
pop
push
test
and
mov
inc
jg
clc
mov
fwait
sbb
push
inc
push
test
jle
push
icebp
mov
stos
inc
xchg
inc
ret
pop
sti
pop
mov
mov
pop
ds
mov
push
xor
test
js
push
push
mov
dec
inc
mov
rclb
mov
hlt
xor
adc
aaa
insb
je
push
sub
and
mov
fs
lock
push
lcallw
or
and
inc
add
idiv
lea
cmp
fsts
adc
lcall
jbe
xor
rcrb
je
ja
jmp
mov
sbb
inc
mov
sub
and
xchg
dec
and
mull
dec
test
mov
xor
mov
mov
addb
fcmovb
sbb
roll
adc
xrelease
mov
or
orl
fwait
loopne
xchg
and
out
add
push
and
test
push
dec
sahf
mov
loop
shlb
or
sub
and
sbb
gs
dec
bswap
xchg
xor
sbb
and
mov
xor
je
dec
pusha
popf
cmp
push
inc
add
add
into
cmp
je
or
mov
xchg
pushf
add
pop
clc
das
cmpb
sahf
shl
mov
push
jae
push
cmp
imul
arpl
call
adc
or
out
mov
ret
fisubrs
mov
mov
and
xor
mov
and
sbb
add
and
cli
mov
ret
ljmp
jae
outsb
pop
jbe
xchg
mov
inc
out
js
mov
stos
lahf
and
repnz
inc
mov
inc
push
dec
pop
add
and
gs
lea
popf
mov
pop
iret
cmp
push
arpl
push
dec
sub
adc
lea
xchg
mov
lds
push
or
lea
mov
movsb
add
mov
lock
push
add
int3
add
loopne
xor
fisttps
cmp
inc
divb
imul
or
and
and
andl
out
call
popf
push
cmp
sub
jb
mov
push
fmul
in
inc
inc
push
fwait
mov
out
enter
xor
add
fisttps
insb
mov
push
test
adc
test
movb
mov
mov
je
sbb
pop
je
scas
movsl
lahf
rcll
sbb
in
push
pushl
stos
add
push
dec
addr16
dec
xchg
hlt
adc
jno
and
pop
jmp
jecxz
int
mov
leave
mov
ja
or
cmp
cmp
mov
add
les
mov
loope
std
nop
into
std
fldcw
cmpb
dec
inc
or
xchg
xchg
repnz
push
push
sbb
sbb
les
sti
adc
test
mov
mov
adc
leave
sbb
dec
cmc
mov
inc
adc
lret
pushf
stos
outsl
mov
adc
mov
cmp
adc
stos
int3
test
mov
aam
gs
cmp
js
jne
test
jo
and
lea
mov
cmp
popa
int
aas
shll
pop
xchg
mov
into
loope
test
push
adcb
pusha
mov
test
jne
jp
mov
mov
add
jle
push
sub
sbb
ret
subl
or
lds
test
xchg
adc
dec
push
mov
imul
mov
push
insl
add
add
imul
xchg
paddw
das
adc
jl
lods
xchg
mov
sbb
mov
push
mov
bound
adc
inc
hlt
push
pushl
adc
movsb
hlt
or
jmp
push
add
pop
or
orb
jne
es
stos
or
js
jb
mov
push
iret
add
sbb
dec
sub
or
lea
fcoml
cmp
sbb
je
sbb
jo
adc
mov
cltd
xchg
add
movsb
mov
lcall
dec
adc
mov
push
lods
jbe
das
pop
in
or
push
dec
sub
push
je
lds
inc
add
and
arpl
push
adc
mov
inc
xchg
cwtl
dec
in
sbb
sbb
xor
jl
cmp
push
push
cmp
xchg
cmp
xor
jmp
and
dec
push
lret
and
jb
adc
in
in
movl
sbb
push
or
fwait
ljmp
lret
leave
mov
push
inc
cmp
les
movsl
loop
jno
andb
or
push
or
es
push
repz
sbb
or
lea
test
cwtl
mov
cmpb
mov
xchg
jmp
repnz
mov
jg
sub
mov
sbb
and
mov
cmp
ja
and
fcomp
movl
inc
xchg
cmp
adc
dec
adc
cld
fyl2x
add
pop
cld
mov
ds
call
and
nop
xorl
je
mov
push
test
dec
les
mov
jecxz
movsb
pushf
sbb
push
jge
test
pandn
call
inc
pop
or
cmp
fbstp
pop
or
and
out
jo
pop
push
push
out
lods
jecxz
or
mov
mov
rol
imul
mov
cmp
jo
pop
scas
clc
clc
leave
cwtl
push
out
mov
mov
int3
sbb
pop
mov
mov
jcxz
mov
aas
cmp
fcomp
mov
cmp
mov
sbb
push
cld
shl
iret
adc
jg
xchg
add
add
sub
mov
inc
inc
lahf
sbb
jne
dec
xchg
jecxz
in
jo
pop
aam
mov
lcall
push
or
xchg
shll
lcall
pop
je
jae
inc
movsb
mov
cmp
mov
iret
cwtl
and
inc
nop
or
inc
add
mov
cmp
jne
pusha
clc
mov
iret
insb
and
pop
sbb
inc
pop
call
push
jo
push
mov
cmp
pop
inc
sbb
fcomp
pushf
sub
pop
sbb
sub
cld
fyl2x
and
pavgw
ds
in
clc
mov
jo
insb
xchg
cmp
loope
cmp
mov
call
jmp
or
out
jne
sub
push
mov
or
add
pop
movsl
int3
mov
andb
imul
cwtl
les
mul
adc
out
mov
cmp
cwtl
mov
cmp
pop
cmp
cmp
js
arpl
cmp
cmpsb
cmp
mov
cmp
cmp
mov
pusha
mov
mulb
mov
cmp
mov
cmpsl
cmp
mov
cmp
or
sub
mov
inc
fstpl
jne
mov
shll
gs
sbb
xor
ficoms
and
sbbl
lock
mov
ss
cmp
mov
mov
add
mov
call
xchg
sub
jg
sub
jecxz
pand
cld
clc
xchg
int3
xorb
aas
enter
pop
ds
mov
push
xor
inc
mov
jg
clc
xorb
imul
pop
cwtl
lock
aas
clc
nop
les
pushf
push
insb
mov
push
mov
sbb
cld
in
jecxz
mov
and
pop
pop
mov
jl
jo
cld
stc
icebp
xor
movq
pusha
xchg
cld
clc
repz
inc
push
movl
cld
stc
icebp
pop
inc
in
loope,pn
aas
inc
cmp
sub
xor
sub
lahf
pop
xor
and
clc
lock
sub
cwtl
icebp
movl
idiv
add
xor
fucomi
add
dec
into
dec
add
ljmp
xchg
mov
cmpsb
or
mov
in
or
cmp
test
cmp
jecxz
xor
roll
dec
push
push
xchg
xchg
sarb
push
icebp
jge
mov
mov
aas
push
test
into
mov
jo
mov
xorb
inc
cld
loope
jl
mov
and
and
jle
inc
xor
lods
aam
mov
push
adc
lods
and
mov
frstpm(287
sub
ds
mov
cmpsb
mov
mov
mov
paddusb
movsl
emms
test
pop
add
mov
mov
aad
mov
dec
inc
xchg
pop
je
cmp
js
sbb
test
ja
jno
sbb
ljmp
jno
mov
dec
cmp
lods
nop
inc
or
les
arpl
daa
mov
sarb
stos
sbb
icebp
andl
push
jne
les
or
fnsave
adc
mov
add
adc
inc
cmp
dec
mov
es
repz
sbb
inc
and
push
pop
test
add
js
aas
xchg
or
hlt
imul
add
add
nop
in
cld
push
mov
push
mov
mov
cmp
movl
jecxz
xchg
cmp
add
xlat
sub
movsb
pop
xlat
push
jecxz
fisubrl
and
or
jb
cmp
or
or
jmp
dec
out
push
in
call
sbb
mov
sahf
out
into
add
mov
mov
movsl
sub
test
and
dec
pushf
dec
dec
mov
in
push
outsb
push
imul
je
jmp
insl
jecxz
pop
add
mov
lods
dec
push
pop
push
inc
cmp
cmc
xchg
imul
cmp
insb
pop
and
nop
bound
dec
sahf
sbb
nop
ljmp
gs
fstpl
insl
lods
mov
outsl
popf
xlat
aad
ret
lahf
pop
or
sti
mov
clc
add
or
pop
ss
push
lods
mov
sbb
jecxz
dec
adc
and
cld
stc
icebp
out
bound
iret
aas
ds
sub
and
clc
repz
and
pop
pop
out
adc
cld
stc
icebp
out
aaa
or
add
cld
stc
flds
jg
xor
xchg
mov
push
das
mov
jl
sbb
repz
pextrw
sbb
scas
rcrb
jg
clc
cld
sbb
in
in
lahf
les
lods
lds
mov
fmuls
movl
cld
stc
mov
loope
mov
repz
sub
fbstp
xchg
push
or
push
mov
adc
outsb
sub
mov
adc
sub
jle
stc
les
je
clc
lock
adc
pop
test
clc
lock
orb
movl
cld
stc
icebp
dec
cmp
loope
aas
xor
pop
or
jp
icebp
and
movntq
jl
jg
sbb
movsb
out
loope
lahf
mov
or
mov
aas
jl
add
pop
mov
sti
lock
pop
hlt
scas
int3
add
in
scas
mov
call
xchg
daa
sahf
add
jl
lds
fsubrs
jmp
jle
shl
push
and
addl
adc
and
dec
rorb
shr
sbb
or
xchg
push
scas
or
mov
mov
in
out
sub
dec
gs
lds
loop
into
mov
movw
inc
xor
xor
out
data16
jecxz
push
shll
aam
xchg
cs
scas
lock
mov
add
loope
adc
into
les
fdivrs
or
fistpl
arpl
subl
mov
daa
mov
push
sarb
dec
sbb
cmp
or
add
xor
mov
movsb
mov
and
cmp
ret
dec
scas
test
subb
jne
push
mov
cld
cmpsl
dec
and
std
vmread
or
aas
movsb
or
cltd
mov
sub
push
sub
push
fstl
mov
fcmovnu
push
sahf
push
xor
or
add
sub
test
fmuls
xor
mov
cmp
push
mov
push
and
xor
es
adc
arpl
hlt
sbb
popa
push
mov
jmp
test
mov
pop
and
in
push
jbe
dec
push
aad
mov
mov
rcll
sahf
adc
xchg
clc
sbb
adc
adc
lret
inc
out
jne
push
cltd
dec
push
sub
xchg
scas
push
gs
shrl
lcall
jg
popf
push
hlt
add
mov
add
ret
fisttps
or
xor
cmp
adc
testb
repz
jb
inc
nop
sub
sub
popf
cmp
pop
fisubs
clc
and
xchg
fidivl
mov
lret
cmp
xchg
and
aaa
dec
in
sti
inc
mov
movsl
push
out
adc
sub
les
mov
ljmp
add
sub
movsl
jg
or
cld
mov
jnp
sbb
inc
cmp
aad
rorb
test
sub
dec
movsb
icebp
jge
pop
adc
pop
or
jns
sbb
jno
fxch
cli
add
dec
je
test
push
dec
mov
js
push
inc
popf
prefetchw
sti
adc
std
cmpsl
cwtl
icebp
out
sbb
xchg
lods
sti
test
js
out
or
mov
fcomps
xor
or
stos
loopne
push
cmp
je
push
ret
cmp
pushf
into
movsl
arpl
jmp
mov
leave
xchg
mov
jne
lret
lods
mov
push
inc
push
xor
ljmp
aam
je
push
sub
push
add
jle
xor
dec
xor
push
xchg
js
clc
sub
clc
and
push
cmp
and
aad
into
or
mov
xchg
add
or
pop
mov
push
subb
cmp
jbe
cmp
int
pop
mov
mov
dec
cmp
cmp
lea
mov
and
fiaddl
inc
lret
mov
rcr
cmp
adc
cmp
jp
ss
sbb
enter
int
or
cmp
mov
jne
cmpsb
inc
mov
push
jl
push
add
je
cmpb
je
dec
push
mov
add
cmpsb
push
nop
aam
aam
pop
imul
jl
cmc
in
lea
sbb
xchg
sbb
cs
or
pop
adc
jle
or
gs
lds
sbb
and
mov
xchg
and
add
cmp
je
das
cmc
pusha
push
jae
js
push
inc
inc
mov
xor
mov
or
pop
das
jle
movb
loopne
cmp
incb
mov
call
das
cmp
jl
cmpsb
jno
pusha
pop
scas
mov
xchg
pop
pushf
push
sbb
adc
stc
ds
sbb
test
adc
mov
inc
jmp
or
add
fistpll
cmc
enter
or
adc
lods
mov
cmp
and
xor
cmp
push
mov
inc
pop
push
lret
pusha
cli
jmp
pop
xor
adc
insb
xor
stos
test
ret
push
ret
insb
pop
cmp
je
push
mov
pop
bound
mov
nop
pop
sub
lea
inc
mov
movsb
out
mov
bound
icebp
nop
inc
hlt
pop
or
mov
sbb
or
fdiv
in
lcall
sub
jbe
mov
inc
cmpb
stos
sub
mov
inc
lret
add
jb
in
mov
dec
xchg
cmp
inc
sub
fnstcw
addr16
sub
mov
cmp
inc
or
call
scas
mov
cld
pop
jg
pop
pop
cld
aam
enter
sbb
pop
cld
fdivrs
sti
xor
addr16
fcompl
cld
xchg
cmp
pop
inc
jno
fs
aam
dec
into
jecxz
ret
add
cld
fcomps
roll
add
clc
cwtl
fdivl
pop
pop
inc
out
mov
out
ljmp
out
inc
inc
jns
int
js
inc
mov
div
fsubs
mov
adc
and
repnz
leave
pop
pop
pop
lret
add
lock
jp
cmp
test
int3
stos
mov
fbstp
out
sbb
hlt
adc
ljmp
aad
inc
pop
clc
add
sub
arpl
cmpsl
icebp
add
sub
test
push
test
sbb
bound
adc
jns
test
push
movsb
jae
cmp
xchg
cwtl
repnz
pop
lea
movzbl
mov
enter
lock
lahf
jno
sbb
pushf
fs
adc
dec
sbb
out
sbb
inc
mov
cmp
sbb
mov
cli
ds
sbb
out
mov
push
or
and
ss
les
arpl
xor
sbb
inc
cmc
test
and
jl
mov
inc
push
mov
inc
or
out
outsb
dec
dec
push
dec
out
mov
cmp
enter
lock
cwtl
loop
jecxz
jecxz
jecxz
pop
sbb
push
in
lods
out
adc
sbb
loope
push
sbb
pushf
nop
loop
jecxz
jne
or
stos
aas
inc
ljmp
into
xor
add
sub
aaa
int
sbb
and
push
and
jmp
aam
insb
test
add
int3
shlb
push
mov
lds
mov
ret
lcall
ds
inc
out
push
pop
push
lcall
test
mov
add
mov
add
adc
jmp
nop
stos
hlt
push
xchg
rorl
stos
mov
movsb
div
add
xor
movsb
clc
inc
push
mov
nop
fsubrl
or
and
ja
mov
mov
rol
inc
push
add
test
mov
jmp
cmp
jl
leave
mov
lcall
popa
mov
push
loopne
jns
push
mov
outsb
add
push
popf
jp
mull
sbb
mov
je
cwtl
push
call
in
test
jmp
insl
cmpsb
sarl
xchg
dec
int3
in
shl
cli
jg
pop
sub
int
loope
or
sbb
in
xor
fsubrp
jecxz
dec
mov
cmpsl
push
test
in
add
mov
xchg
mov
xor
data16
add
add
dec
mov
jne
pop
and
call
mov
inc
repnz
inc
dec
dec
pop
push
push
fisttpl
or
push
push
push
pop
lcall
enter
shlb
pop
xchg
mov
lea
push
pop
daa
enter
testl
xor
and
push
ss
cmp
movsb
cmpsl
into
inc
jb
mov
fwait
jecxz
mov
mov
cmp
push
mov
cmpsl
mov
daa
push
jae
lods
les
inc
cmpsl
push
insb
adc
add
cli
push
push
sub
arpl
adc
lds
push
jmp
orb
add
lods
sbb
cmpsb
push
es
mov
push
dec
dec
sub
leave
aam
jle
mov
push
adc
loopne
add
sub
inc
jle
mov
jbe
fiaddl
push
jp
inc
stos
xor
inc
jecxz
dec
cmpsl
je
sahf
fildll
pop
test
jb
mov
cmp
call
push
jle
add
arpl
sti
jl
fisttps
push
sbb
and
jmp
pop
push
dec
xchg
sub
push
sbb
ret
push
scas
mov
gs
adcb
push
ja
js
jne
stc
cmp
sbb
pop
and
add
or
mov
ljmp
pop
cmp
sbbl
jne
jno
xchg
mov
mov
pushf
mov
and
ljmp
push
daa
push
sub
dec
sbb
sbb
pop
test
inc
add
xorl
add
jnp
es
lock
sar
jmp
push
mov
add
sbb
jle
xor
call
sub
xor
nop
jmp
jns
adc
dec
ds
inc
pop
les
ss
jp
ret
in
fmuls
sub
mov
ja
xchg
rcl
inc
or
fsubl
jg
sub
test
push
jmp
mov
add
cltd
add
scas
push
cwtl
movsl
int3
insl
iret
fidivrs
in
fistl
sbb
fbld
je
push
mov
push
cwtl
pop
mov
sub
inc
push
stos
pop
pusha
add
fildll
pop
pop
xchg
cmp
outsb
push
mov
and
pop
xchg
inc
or
xor
icebp
xor
push
cmp
arpl
mov
add
push
cmp
mov
add
inc
scas
lds
cmp
stos
cmp
inc
aam
or
push
loopne
push
daa
lock
sarl
sbbb
bound
in
xchg
mov
mov
xchg
test
in
loopne
popf
push
sahf
mov
mov
xchg
decb
xchg
imul
jle
xchg
jne
inc
daa
mov
insb
jl
dec
inc
add
je
push
jnp
inc
lea
mov
lcall
and
sbb
in
mov
mov
add
jg
rolb
push
je
jge
icebp
hlt
je
movsl
rorl
popa
xor
sub
pop
push
in
add
into
dec
mov
or
inc
jle
and
jnp
lds
push
aam
aaa
movsb
push
inc
sarl
pop
incb
adc
int
xchg
fisubs
jo
je
mov
add
pop
jg
sbb
sub
add
xchg
sbb
fsubl
mov
testl
or
je
lcall
outsb
dec
push
sbb
aam
pop
shll
es
push
inc
cli
insb
lcall
sub
inc
add
pop
mov
js
xor
loope
dec
pop
insl
lds
ret
cld
cmp
xchg
inc
add
adc
push
adc
mov
mov
jge
push
mov
add
call
xchg
xchg
mov
out
loopne
nop
mov
lods
mov
push
mov
mov
or
call
mov
xchg
dec
mov
mov
push
repz
cmp
and
sbb
and
inc
xor
inc
pop
sbb
call
push
inc
and
das
push
mov
push
test
push
mov
push
lcall
add
mov
xchg
movb
add
adc
gs
cmpsb
fnsave
xor
dec
sub
int3
push
and
ret
mov
push
imul
inc
xor
cmpsl
adc
iret
push
adc
aas
jne
jp
mov
incl
fcoml
inc
dec
testl
into
push
in
aad
push
xchg
push
sbb
arpl
pop
sbbb
or
lea
pop
out
pop
push
jecxz
mov
jl
push
mov
push
xchg
sbb
dec
sub
mov
adc
adc
enter
xchg
cmpsl
dec
lods
push
cmc
and
push
cwtl
add
pop
in
pop
mov
in
mov
mov
lock
jno
and
mov
test
lods
sahf
mov
mov
jmp
mov
in
and
cmp
pop
push
mov
fisubrs
mov
or
mov
sti
lea
jmp
mov
mov
inc
dec
sbb
push
xchg
or
pop
fldenv
xchg
ds
push
arpl
xor
jb
jmp
push
icebp
lcall
sahf
shl
add
jl
push
adc
jnp
jle
mov
xor
mov
gs
movsb
push
lds
int
lahf
cld
pushf
mov
adc
jb
dec
jne
sahf
adc
std
or
gs
pop
inc
loopne
dec
push
test
sbb
rol
aam
fsubl
in
out
xchg
icebp
mov
dec
dec
faddl
aad
mov
pop
call
push
push
inc
dec
mov
adc
test
or
and
jmp
mov
mov
mov
aam
insb
add
cmp
in
push
pop
test
in
cmp
xor
inc
in
ret
inc
xor
in
pop
xor
pop
and
mov
nop
xchg
inc
pop
mov
and
in
cmp
mov
dec
outsb
xchg
sub
loope
sahf
push
test
xchg
pop
mov
adc
loopne
loop
pop
mov
lea
adc
dec
dec
inc
mov
inc
push
adc
jmp
push
movsb
mov
mov
in
fs
sbb
dec
xchg
xchg
rcl
mov
into
cmp
mov
rolb
add
test
xchg
mov
pop
or
jmp
mov
push
jns
dec
or
leave
mov
jno
shll
dec
inc
pop
add
mov
cltd
lret
aaa
lret
push
push
hlt
mov
xchg
cmp
mov
cmp
repz
and
dec
mov
adc
inc
stos
out
xor
push
xrelease
pop
mov
and
or
pop
arpl
dec
xchg
pusha
and
push
sbb
add
adc
mov
sub
cmp
popf
imulb
push
mov
xchg
mov
adc
cmp
mov
push
lds
leave
push
or
cmp
or
enter
mov
rcrb
popf
sub
in
and
jo
jmp
lods
je
fwait
int3
adc
popf
and
lea
jmp
cld
pushf
dec
in
jp
fwait
mov
punpckhbw
lret
jno
out
push
aaa
popf
mov
test
mov
lea
cmp
mov
inc
push
je
or
jae
je
push
nop
mov
cmp
or
push
inc
lret
xchg
and
mov
mov
cmp
adc
adcb
jae
mov
aam
jp
adc
pop
and
test
sti
sub
mov
lea
sbb
nop
push
sbb
sub
sub
inc
scas
push
repz
cmp
pop
xchg
idivb
jo
cmp
or
add
jg
add
push
mov
outsl
mov
dec
lds
jl
mov
mov
mov
fcomps
ficomps
aam
repnz
fwait
stos
cmpsb
ficoms
sub
xor
loope
add
inc
test
jmp
push
sbb
nop
fwait
cmp
test
or
orl
sub
push
fcmove
nop
repz
mulb
hlt
and
mov
xor
and
divl
mov
xor
icebp
xchg
push
mov
sbb
jo
dec
fwait
adc
out
divb
test
sbb
cmp
xlat
adc
cli
sbb
sti
in
lods
sub
jo
inc
mov
sbb
enter
pop
insb
jno
adc
jmp
fwait
rclb
lea
inc
push
adc
lret
mov
jns
push
je
mov
xchg
pop
js
mov
mov
enter
lds
and
out
mov
cmpsb
jbe
daa
jnp
xor
call
lcall
cmp
cltd
inc
or
pop
ret
jl
fs
hlt
jno
dec
xor
subl
push
shl
xchg
xchg
out
mov
push
sub
sbb
adc
mov
xchg
add
push
xor
lret
insl
xchg
pop
sbb
outsl
mov
sbb
adc
and
add
sbb
fcmovnu
pop
inc
mov
ss
jmp
pop
cmpsl
xor
cmpsb
movsl
je
mov
out
jns
sbb
addb
sar
mov
ss
test
add
dec
push
inc
jne
adc
movaps
lahf
adc
jge
fs
xchg
rcl
push
test
pop
and
and
clc
cmp
shr
mov
arpl
adc
push
mov
mov
xor
push
inc
bound
push
jg
mov
fldl
push
add
cltd
inc
jl
cmp
jge
mov
mov
shl
xor
adc
sbb
shrb
mov
mov
inc
dec
inc
or
cmp
testb
movsb
push
scas
enter
sub
pop
mov
stos
pusha
pop
out
je
jge
insl
test
sbb
pushf
xchg
shlb
shll
xchg
xor
mov
sbb
outsl
xchg
mov
imul
push
stc
cmpsb
movsl
jbe
cmp
insl
mov
add
cs
push
inc
push
inc
jl
mov
push
push
push
mov
adc
xchg
inc
and
push
dec
insl
sub
cwtl
xor
js
insb
push
popa
inc
jo
cwtl
or
mov
ret
in
pushl
or
dec
sbb
add
jge
loope
push
push
inc
sbb
xchg
jmp
bound
enter
xchg
mov
xor
sbb
push
rcl
push
shr
push
rcr
xchg
cmp
sbb
sti
or
lods
xchg
adc
leave
nop
pushf
xlat
lods
rcr
sbb
xchg
inc
sub
cmp
mov
sahf
or
mov
in
jbe
mov
rep
pop
push
dec
and
and
notb
pop
mov
mov
or
jne
subl
rcrb
int3
push
push
pop
mov
aam
in
xchg
fsubr
hlt
les
movsl
into
sahf
lahf
dec
mov
cmpb
fildl
mov
xorb
inc
fcmovb
mov
xor
and
faddl
and
pushf
push
lea
push
push
inc
les
pop
cld
cmp
and
push
lret
add
xor
loope
ljmp
lret
pop
jmp
dec
cmp
rorl
adc
or
xchg
or
or
xchg
mov
pusha
clc
lods
mov
inc
adc
pop
add
mov
xor
inc
rorb
ret
imul
sub
and
sbb
cmpsb
add
cmp
out
xor
test
push
enter
pop
adc
mov
and
cmp
cmp
stc
jmp
test
cmpb
ljmp
mov
mov
mov
mov
subb
mov
pop
sbb
push
js
or
mov
in
rolb
dec
add
dec
rclb
nop
std
dec
fs
insl
ja
sbb
xor
mov
lret
or
mov
push
sbbb
add
push
jnp
xchg
icebp
push
jle
cmpsb
in
je
ret
push
popf
arpl
sub
xor
out
popa
ljmp
and
ret
mov
sub
cmpsb
aas
dec
inc
mov
or
outsb
jae
pop
xchg
sbb
mov
cmp
mov
sahf
inc
xchg
xor
fisubs
les
nop
cwtl
push
push
adc
add
mov
jae
arpl
aad
mov
sbb
fucomp
adc
add
cld
push
adc
add
mov
stos
or
xorb
arpl
sbb
or
daa
push
dec
sbb
addl
mov
sub
lods
or
pusha
adc
mov
jg
xchg
leave
lcall
or
inc
adc
push
mov
xchg
movsb
mov
sbb
push
clc
fiaddl
icebp
xor
cld
jne
mov
xchg
mov
add
clc
add
adc
jmp
jbe
mov
cmp
or
cmp
test
inc
mov
cli
in
cmp
insl
push
insl
cmc
lea
xor
mov
sbb
xchg
scas
push
imul
xchg
inc
sahf
push
sbb
push
int
mov
mov
js
das
sbb
testb
cmp
mov
repnz
or
pop
lock
push
or
sub
jbe
xlat
cwtl
aam
xor
addl
ret
orb
outsl
and
jmp
mov
lret
jg
enter
pop
int3
mov
xor
sub
push
mov
push
test
int3
popa
mov
jb
pop
adc
xlat
and
add
jbe
pop
add
lock
pushf
loop
mov
aam
sbb
or
adc
add
push
mov
push
movb
pushf
mov
push
rcrl
call
lock
pop
push
scas
push
jbe
fwait
int3
xchg
push
xor
jae
daa
jae
popa
insb
mov
lods
or
aas
jl
adc
cld
test
sub
adc
push
fmull
cmp
push
orl
push
mov
imul
mov
repz
adcl
add
mov
mov
dec
add
mov
icebp
addr16
sbb
cwtl
inc
icebp
sbb
or
push
adc
mov
dec
sbb
in
dec
les
dec
adc
stos
sbb
lds
dec
out
dec
call
call
mov
xor
sbb
sbb
stos
fdivl
hlt
xchg
cmp
pop
dec
xor
fnsave
sbb
movsb
sub
push
adcl
adc
xor
subl
or
mov
push
repnz
jae,pn
jl
repnz
xor
and
lock
add
cmc
add
mov
inc
decl
je
test
inc
insl
mov
push
push
pop
jmp
xchg
cwtl
loope
xchg
xchg
mov
je
hlt
and
outsb
dec
out
test
fdivrs
js
std
xchg
mov
movsl
adc
dec
repz
cli
sub
jmp
push
sbb
clc
shlb
jb
inc
sbb
addr16
sahf
jne
xor
ljmp
adc
mov
loopne
xchg
test
mov
bound
inc
loop
cmp
in
cmp
sbb
jno
dec
dec
push
dec
jnp
fcoms
xchg
test
mov
ss
subb
lcall
int3
aam
sub
or
mov
dec
or
add
inc
stos
je
into
arpl
push
xor
shr
sti
cwtl
inc
cmp
rolb
out
xor
pop
inc
out
mov
mov
fimuls
dec
cmp
inc
mov
add
enter
pop
adc
arpl
movsb
sarb
les
pop
and
in
fwait
into
xchg
or
insl
and
lcall
push
pop
shrb
adc
test
cmp
add
jl
movsb
stc
xlat
xchg
or
dec
filds
push
test
mov
adc
xor
jp
es
fcoml
rcrl
inc
cmp
lds
push
pop
jae
mov
and
imulb
add
mov
add
idivb
mov
add
inc
cmp
jl
andb
jmp
rcrl
sarb
loopne
int
or
jae
mov
or
das
push
or
xor
nop
lock
or
sbb
mov
fldcw
mov
mov
pop
inc
dec
sub
int3
dec
xlat
lea
imul
in
add
ljmp
or
jl
jae
mov
insb
cs
jo
jne
mov
sahf
add
mov
pop
jne
mov
call
roll
into
addr16
add
add
jnp,pt
std
sub
test
sbb
pop
imul
pop
es
daa
mov
lock
xchg
add
and
dec
call
mov
daa
pop
push
jmp
pop
sub
fisttpll
lret
mov
repz
pop
sub
mov
pop
pop
pop
dec
aad
loop
xor
fwait
jg
jle
call
lea
movsl
push
cltd
aad
pop
push
les
mov
mov
pusha
xchg
data16
push
movsb
aaa
add
adc
jb
cmp
into
add
call
mov
fildl
aaa
sbb
adc
or
pop
mov
lret
dec
enter
pop
adc
inc
mov
fldcw
int3
pop
movsl
mov
and
adc
int3
pop
mov
aam
shrl
test
aad
xor
sbb
push
incb
je
loopne
inc
and
cmc
add
fsts
sub
and
idivb
lods
sbb
push
xor
mov
mov
xor
pop
cltd
aad
shlb
aam
in
sarl
dec
and
mov
dec
sbb
outsl
jmp
xor
mov
insl
cld
call
add
cmp
bound
jge
je
ljmp
xor
mov
mov
iret
and
mov
lock
dec
and
arpl
shl
adc
push
inc
insb
cmp
inc
mov
arpl
add
pop
dec
inc
pminub
sub
push
cmp
pop
cmpsl
push
inc
sbbb
xchg
sub
pop
xor
stos
enter
in
add
inc
xchg
popf
stos
cli
pop
xchg
push
xlat
push
sub
in
mov
jns
aam
mov
lret
add
repz
push
outsb
adc
sbb
int
wbinvd
and
adc
xor
fldl
cmp
sub
sbb
je
xchg
ret
sbb
cmp
loop
mov
enter
fs
sbb
mov
aad
dec
rorb
movsl
push
cmp
fs
lock
adc
add
sbb
xor
aaa
xlat
adc
mov
call
ficoml
addl
jb
inc
xchg
mov
sub
mov
psrad
and
add
jle
mov
jne
cmpw
nop
mov
dec
xchg
push
js
inc
in
enter
ljmp
sbb
cmp
out
xor
and
push
or
jl
pop
test
push
mov
ret
mulb
and
and
cmp
cmp
xchg
mov
push
aam
push
push
pop
xlat
loopne
lds
loopne
loopne
out
jle
push
inc
or
jne
push
addr16
scas
pusha
test
movsb
iret
cmp
loopne
jl
ja
enter
imul
mov
xor
loope
lock
les
cmpsb
xlat
fsubrp
pop
sbb
or
jb
and
xchg
and
inc
daa
dec
xlat
adc
sbb
add
mov
cmp
movsbl
test
in
inc
push
movsl
into
push
call
sub
and
cli
xchg
inc
mov
xor
cmp
and
sysret
in
xchg
insl
push
jmp
dec
cmp
shrl
vphsubwd
xor
inc
imul
leave
mov
push
test
rclb
and
or
dec
sub
daa
call
xchg
push
or
and
push
or
gs
ret
mov
dec
dec
or
lods
hlt
push
xlat
jne
or
inc
adc
dec
mov
movb
js
inc
sub
stos
jp
cli
push
or
bound
push
jno
push
adc
test
mov
mov
inc
test
lock
je
dec
test
dec
adc
jmpw
das
jo
lret
lods
xlat
adc
sbb
shlb
mov
jbe
mov
repnz
ret
scas
xor
push
mov
inc
dec
and
shlb
adc
inc
adc
stc
mov
daa
xor
ds
mov
push
xor
pop
sahf
push
jae
xchg
fmull
call
xchg
xchg
lods
and
or
and
arpl
shrl
jmp
fnstenv
mov
lds
lret
jle
cld
gs
mov
data16
jne
push
push
movsl
push
add
je
es
and
cmp
or
jl
shlb
push
mov
cmpsb
xchg
icebp
cmp
inc
push
arpl
mov
sub
mov
mov
mov
xor
inc
mov
sub
adc
lret
mov
ret
lea
push
fcmovb
inc
aam
cltd
jb
in
dec
xchg
sub
jo
and
cmp
xor
enter
and
mov
mov
jmp
call
jae
mov
cmp
cld
dec
and
dec
call
loopne
sarb
jmp
xor
mov
jbe
mov
xor
mov
cli
or
add
inc
push
inc
mov
cmpsl
jo
mov
daa
inc
ja
es
nop
sbb
icebp
test
xchg
lcall
call
insl
je
inc
andl
and
or
mov
enter
ret
and
xor
in
cmp
and
enter
inc
pop
mov
cmp
hlt
inc
pusha
add
je
cmp
je
cmp
rclb
cmp
jne
mov
sub
and
pop
stc
pop
cli
sti
cld
or
aaa
add
jmp
xor
mov
or
mov
xchg
cmp
sbb
inc
cmp
or
cmp
jbe
dec
or
inc
or
testb
in
jl
cmp
push
adc
or
jae
add
add
sbb
mov
add
jne
jmp
push
jle
inc
lock
jl
pop
mov
xor
push
cwtl
dec
in
sbb
inc
mov
inc
pop
push
cmp
mov
shlb
xchg
subb
inc
or
inc
int
imul
jecxz
iret
or
popf
pop
sbb
in
lea
mov
shlb
push
je
mov
sub
push
ret
and
or
xor
jns
push
inc
dec
or
add
add
adc
imul
jo
sbb
sbbl
enter
repz
imul
pop
pop
mov
jge
jb
xor
mov
dec
pop
adc
dec
xor
xor
pop
cmp
jmp
or
sub
jnp
mov
pop
repnz
and
jne
sub
dec
sbb
xchg
pop
xor
lods
mov
pop
pop
add
rclb
add
cmp
mov
add
add
out
popa
cwtl
mov
inc
pushf
xlat
inc
pop
je
pop
add
mov
in
xor
jbe
mov
shr
cmp
jecxz
or
add
andl
stos
push
xchg
subb
xor
add
cmp
ljmp
add
jbe
adc
add
xor
int
sahf
leave
or
lds
add
inc
cmp
jb
mov
inc
rcr
and
push
fimull
arpl
out
push
jmp
push
push
cmp
dec
jae
pop
in
inc
inc
mov
lret
or
cmp
lret
mov
push
jb
dec
in
fdivs
in
adc
mov
data16
fs
jp
and
int3
pop
pop
inc
push
or
dec
and
addr16
add
dec
jns
xchg
test
mov
test
push
sub
jno
daa
test
icebp
adc
enter
fbstp
dec
out
and
jmp
cwtl
jecxz
aam
arpl
pop
mov
dec
push
dec
adc
and
outsl
jbe
xchg
mov
mov
push
enter
pop
je
pushf
pop
adc
mov
cli
test
fists
aam
sub
push
sub
enter
inc
lods
xchg
adc
gs
mov
inc
lea
test
movsb
lods
aaa
push
sbb
mov
push
dec
movsl
jo
xor
xchg
mov
sub
xchg
cmp
push
mov
dec
lahf
mov
xor
mov
and
push
pop
jmp
jg,pt
mov
add
loopne
push
int3
xor
loopne
pop
mov
insb
ja
jns
push
adc
mov
repz
es
cwtl
mov
xor
movsb
subl
je
adc
in
mov
mov
call
xor
dec
push
cwtl
mov
test
dec
das
push
lods
pop
adc
lahf
mov
jmp
out
enter
pop
pop
ret
pop
mov
mov
jmp
fdivrl
add
jae
mov
mov
inc
xor
lods
mov
fs
cmp
je
inc
jb
rolb
add
sbb
push
adc
movsb
fstl
scas
sbb
adc
inc
imul
je
sub
aad
out
std
inc
or
bnd
lods
roll
vpdpwssds
inc
imul
dec
add
xor
dec
mov
xor
add
dec
mov
xor
repz
je
cmp
in
sub
mov
leave
or
jg
fwait
sub
dec
loopne
cmp
pusha
inc
int3
shl
cmpsb
out
mov
mov
sete
push
and
leave
mov
sub
test
ret
in
push
sub
or
sbb
loope
and
mov
dec
ret
test
adc
push
push
and
test
addr16
lock
sbb
jg
xor
test
test
xchg
xor
call
cmp
loop
pop
adc
dec
xchg
cmovne
dec
daa
pop
hlt
mov
jns
push
fwait
rcll
movsb
cmp
stos
push
mov
adc
sbb
inc
ror
iret
mulb
in
mov
je
mov
fdivr
ror
adc
movsl
aad
adc
add
nop
xchg
aam
xchg
aaa
and
add
xlat
push
add
iret
mov
in
out
and
push
sbb
mov
test
test
out
adc
and
xchg
jo
in
adc
inc
pop
hlt
xor
andl
in
jo
aam
dec
sar
jne
and
jmp
push
hlt
jl
lret
push
and
enter
cmpl
mov
cmp
out
jno
mov
adc
inc
out
sahf
in
call
leave
daa
arpl
and
into
aam
xor
fcoms
add
rclb
adc
clc
pop
out
les
clc
mov
inc
aam
repnz
fmull
shrb
mov
call
sar
out
int3
push
outsb
pop
xchg
inc
push
sbb
push
add
push
dec
jno
inc
inc
hlt
aas
add
fprem
cld
cmp
sbb
xor
clc
test
push
sbb
lret
cli
mov
xor
cmp
pop
dec
or
inc
pop
mov
out
mov
sub
jp
mov
mov
mov
div
xor
pushf
notl
jp
enter
push
mov
mov
movsl
bound
or
gs
imul
in
jne
cmp
inc
and
add
jb
inc
inc
rcr
add
add
out
ret
jmp
add
in
je
ds
out
fiadds
jmp
mov
pop
cwtl
lds
test
imul
inc
inc
rdtsc
cwtl
adc
mov
rclb
mov
add
push
sbb
push
jno
xor
test
and
jl
add
fbstp
push
sub
das
mov
mov
into
cltd
jle
or
test
pop
ja
jb
xorl
dec
add
pop
ja
mov
mov
clc
cmp
xor
and
mov
sbb
or
cmp
dec
sub
pop
pop
xchg
ret
adc
and
push
leave
adc
mov
add
push
jnp
xor
mov
or
jbe
inc
es
pop
into
nop
inc
push
inc
pop
mov
xor
iret
xchg
jo
rclb
xchg
fwait
cld
enter
push
rcrl
sub
les
mov
cmp
test
jl
push
sub
icebp
pop
add
xchg
je
and
pushf
jne
cmp
je
movsb
cltd
xorl
sub
dec
out
andb
mov
push
cmp
cmp
cmpsb
cltd
push
add
mov
clc
or
adc
lea
shlb
and
xchg
inc
inc
out
push
test
push
test
add
sbb
inc
and
adc
test
and
fldt
cltd
jmp
fs
lods
jnp
cmp
mov
enter
outsb
xor
jmp
sub
jb
xchg
and
push
jb
js
sbb
xor
xor
xor
fildll
in
ss
cmp
popa
add
cmp
dec
xlat
shlb
xchg
les
aam
call
inc
sbb
pop
aas
lret
rcrb
inc
mov
and
dec
fmuls
push
shll
mov
and
push
shrb
push
cmp
enter
mov
push
jb
adc
xchg
scas
add
or
je
push
mov
es
push
jmp
mov
push
rclb
mov
xor
inc
lret
lds
mov
and
inc
push
mov
push
mov
push
jo
mov
fs
pusha
adc
inc
xchg
jp
cmc
or
pop
data16
xlat
adc
fwait
popf
pop
out
faddl
push
push
in
sbb
in
rorb
inc
shlb
jne
sbb
inc
aad
pusha
sbb
inc
test
std
mov
loope
pop
inc
out
adc
push
mov
mov
mov
push
rorb
rorb
push
or
int
push
movsb
cmpsb
lcall
jo
pop
fisubl
fstp
je
in
pusha
cmc
nop
lock
add
mov
and
push
push
inc
mov
insb
loopne
or
mov
in
mov
jmp
ds
sbb
ljmp
aaa
jb
in
sub
mov
fwait
addr16
or
dec
mov
ja
pop
pop
xchg
scas
adc
cmp
test
stc
mov
mov
xchg
sbb
and
mov
in
adc
xchg
pusha
lock
push
mov
sbb
cmpsb
lea
or
adc
in
in
fdivrl
aam
movsb
xchg
pextrw
fwait
inc
cmpsb
inc
mov
iret
addl
js
cs
mov
cmp
mov
mov
mov
movsb
orl
dec
loope
mov
jae
mov
or
inc
cltd
pop
jp
jno
clc
lret
sbb
and
inc
std
push
sub
sbb
inc
mov
adc
es
xor
jge
and
adc
mov
sbb
cwtl
imul
and
sti
mov
and
mov
push
lret
rorb
cmp
out
aam
ret
and
mov
xchg
pushf
or
stos
ret
nop
decb
arpl
lret
gs
cmpsl
jp,pn
cwtl
cmp
mov
test
pop
out
sub
decl
popf
lret
dec
std
jmp
xor
xor
inc
outsb
jmp
push
push
pop
sbb
sub
dec
jecxz
cwtl
inc
mov
mov
addl
push
dec
sub
aam
movl
xchg
int3
xchg
pusha
dec
push
inc
mov
or
dec
cmpsb
mov
mov
jle
cmp
cmp
xor
cmp
aam
cwtl
add
sub
imul
js
mov
test
lods
cmp
xor
shrl
pop
sub
orb
add
sub
sub
bound
dec
hlt
add
add
dec
mov
call
push
push
push
jb
test
inc
push
popf
mov
and
test
xchg
leave
cmp
cli
add
dec
aam
and
or
dec
hlt
push
in
jae
cmp
pop
push
ljmp
lret
mov
mov
mov
icebp
jb
and
cltd
loop
jg
insl
leave
icebp
add
insb
lds
add
mov
mov
xor
inc
xor
dec
leave
add
sub
inc
mov
adcb
rcr
mov
leave
pop
xor
inc
or
push
push
mov
popa
xchg
leave
jp
fimull
and
jne
cmp
jne
cmp
mov
ror
push
cmp
dec
pop
or
int3
push
mov
or
jg
mov
push
test
sahf
and
or
adc
out
and
lret
pop
sub
mov
xor
pop
or
loope
add
cmpb
push
mov
push
addl
les
and
sub
cmpsb
push
sbb
mov
mov
mov
lea
fwait
hlt
pop
outsb
outsl
movsb
mov
inc
test
cmp
popa
xchg
scas
jecxz
xchg
int
shl
insl
and
inc
nop
push
in
or
cmpl
dec
inc
test
pushf
xchg
cmp
nop
jno
mov
mov
xchg
into
xchg
mov
mov
in
cmp
jle
lret
xor
test
mov
push
mov
aaa
lock
je
inc
mov
lock
mov
loope
and
adc
js
push
out
xchg
pop
lret
jmp
or
xchg
add
pop
pop
pop
push
fmull
push
jb
push
inc
xchg
icebp
testl
and
or
loopne
ret
cld
cmp
test
jle
je
and
cmp
push
add
cwtl
adc
ret
jl
iret
xchg
sbb
dec
add
add
or
pop
add
pop
hlt
push
jmp
sbbl
mov
dec
sbb
mov
and
jnp
cmp
sub
xor
and
test
js
jle
std
movsb
mov
push
pop
or
ja
arpl
mov
xchg
aam
out
adc
cli
and
shlb
push
pop
xor
push
pushf
mov
cltd
mov
into
fisubs
push
mov
fwait
je
imul
mov
mov
inc
orb
add
sahf
mov
push
lods
push
xchg
scas
dec
loope
repz
loop
jecxz
in
in
sbb
sbb
out
arpl
fs
mov
ljmp
fisubs
inc
addb
aam
icebp
adcb
or
push
jne
adc
rcll
pop
clc
fidivl
push
ret
and
adc
ljmp
jns
sub
ja
cmp
cwtl
and
lcall
xchg
and
lcall
flds
or
mov
jg
aad
dec
mov
and
aad
fucomip
outsb
mov
inc
push
aam
insl
mov
mov
pop
push
jns
fdivrs
pop
push
push
movsb
xchg
inc
popf
inc
shlb
sbbb
shrb
xchg
adc
fmul
sub
sub
push
pop
int
cmp
int
es
xor
inc
mov
es
fstl
test
test
sbbl
test
loopne
fcoms
xor
jmp
mov
mov
jbe
call
pop
adc
pop
fmuls
mov
rcr
jmp
enter
sbb
loopne
jns
add
fsubr
nop
mov
shr
mov
xchg
sub
cld
or
jb
xor
lea
sub
jge
mov
outsb
push
loope
fwait
lahf
and
cmc
and
movsb
arpl
inc
push
push
mov
int
dec
jmp
mov
mov
push
je
pop
pop
lret
nop
jmp
ret
imul
push
xchg
sub
rol
fnsave
pop
xchg
pop
movsb
and
icebp
push
sub
inc
sub
std
jle
mov
inc
and
xchg
out
pushf
dec
mov
pop
inc
out
call
scas
jg
mov
sub
mov
pusha
xchg
cltd
repnz
dec
cld
pop
gs
dec
pusha
mov
hlt
jno
lret
and
push
pop
jae
clc
xor
fs
push
push
inc
fs
mov
inc
xchg
or
lcall
dec
into
sub
ror
sbbb
dec
xor
inc
subl
pusha
add
js
lea
loope
inc
add
xchg
push
mov
jb
mov
lret
aaa
nop
inc
push
daa
and
lock
loopne
push
jns
stc
jb
rcll
jo
push
add
push
push
movsb
inc
mov
mov
mov
movsb
shrl
inc
mov
or
or
lock
jae
add
ret
xchg
data16
sbb
fimuls
lods
pusha
mov
sub
outsl
add
push
push
ss
ret
mov
adc
outsl
mov
cmpsb
rcr
jecxz
es
fdivl
push
outsb
xlat
add
push
bound
add
mov
mov
test
je
cmp
je
inc
jns
add
je
pop
cmp
daa
nop
js
inc
mov
inc
xchg
cmp
mov
jmp
xlat
adc
insl
mov
shll
mov
rorb
cs
mov
mov
fwait
inc
movsb
jmp
and
add
push
nop
mov
mov
jns
and
mov
adc
xchg
fisttps
or
jge
inc
cmpb
mov
inc
mov
push
push
das
add
mov
cmp
cmp
jnp
dec
test
add
int
sub
dec
decl
sbb
pop
je
sub
pusha
sbb
xchg
inc
mov
sbb
adc
fdivrs
push
test
add
add
sbb
int3
add
inc
incl
andl
int
es
clc
movb
mov
cmp
lcall
inc
adc
aam
in
push
push
test
and
sbb
incl
jmp
or
push
mov
cmp
jno
dec
sbb
jne
aas
add
mov
mov
mov
cmp
jne
jmp
inc
mov
pop
les
jb
push
add
mov
cmp
jne
cmp
je
jae
lret
push
cmc
dec
test
pop
push
push
clc
push
scas
cmpb
pop
mov
jmp
cmp
inc
je
push
add
test
or
shlb
xchg
std
adc
rcr
adc
jae
in
push
push
xchg
int3
daa
mov
xchg
add
pusha
jns
mov
push
test
les
xchg
mov
or
movl
add
inc
test
je
jne
inc
xor
mov
add
xor
add
pop
add
push
test
mov
lcall
je
push
pusha
adc
add
das
iret
dec
jmp
sub
jmp
test
cld
or
cltd
mov
movb
sahf
fld
jmp
sbb
push
inc
fldl
sbb
xor
and
and
out
xor
lret
jmp
icebp
xorb
add
cvtdq2ps
pop
ret
int
cmp
adc
and
mov
mov
mov
push
add
inc
jle
test
je
test
adc
xor
mov
and
xor
mov
nop
movsb
mov
lea
dec
push
pop
inc
mov
mov
cmpb
cmp
stos
push
jl
les
aam
in
or
andb
or
add
jnp
mov
in
pop
test
sub
rolb
neg
dec
mov
pop
aaa
add
add
mov
push
mov
sbb
andl
pop
add
repnz
push
sahf
mov
fwait
push
in
dec
cltd
movsb
lahf
insl
jns
hlt
jo
out
mov
iret
xchg
mov
jg
scas
sub
dec
add
popf
or
sbb
iret
in
push
add
xor
outsb
shlb
cli
xchg
jne
test
pusha
jne
sbb
aam
fsubs
inc
jnp
dec
adc
cmp
pop
cmp
jbe
jb
test
sbb
and
adc
movups
jb
and
pop
jo
add
jg
sub
jb
or
pop
or
add
enter
out
lea
mov
icebp
pop
nop
in
outsl
cmpb
cmp
shlb
shll
lock
inc
add
jb
mov
sbb
jno
mov
cmp
cs
lea
mov
lods
add
add
nop
inc
cli
pop
xchg
sub
imul
repz
and
adc
cmp
mov
inc
in
repz
repz
iret
repz
hlt
hlt
clc
clc
cld
testb
sub
lea
sub
add
push
sbb
shll
out
pop
jp
jne
nop
hlt
call
mov
lret
xor
decl
into
jl
cld
and
xor
or
cmpsb
jecxz
jno
push
xchg
in
jecxz
sahf
xchg
stc
sub
jo
or
cmp
sub
shll
add
fadds
jmp
mov
outsb
pop
lods
out
mov
mov
pop
pop
nop
push
jno
sub
cwtl
xchg
cmp
pop
push
dec
arpl
movsb
lods
jns
out
mov
int3
aam
pop
sahf
out
sbb
repz
repz
adc
adc
repz
adc
or
xchg
mov
sub
test
stos
out
sbb
dec
out
imul
enter
loopne
inc
mov
lock
inc
add
clc
stos
pusha
aad
clc
adc
push
cmp
test
call
inc
in
test
sub
adc
test
adc
add
jbe
xor
and
rcrl
xor
es
fs
lea
jne
or
nop
jmp
sahf
repz
push
mov
stos
scas
orb
cmp
inc
int
repnz
rol
sub
or
enter
xchg
adc
dec
jge
gs
rep
push
xchg
scas
jp
dec
lret
jo
pop
adc
lea
adc
mov
mov
jae
sub
sbb
in
mov
or
loope
inc
add
ret
jle
sahf
add
adc
mov
cmp
add
add
or
and
aam
cmp
or
xchg
mov
cmp
in
sub
mov
push
add
cmp
popa
subb
rcl
inc
ret
test
add
ret
jmp
mov
into
mov
cwtl
push
es
add
add
cmpsl
loop
push
adc
push
adc
adc
fnstenv
iret
cmp
das
push
mov
cmpl
nop
add
movzbl
push
mov
pop
mov
mov
sbb
mov
sbbl
gs
jmp
sarl
mov
push
or
mov
jne
inc
or
or
add
out
or
hlt
cmp
add
lea
adc
adc
stos
jp
push
jne
neg
pop
add
fwait
mov
ret
mov
sub
or
jb
cmpb
xor
xchg
jle
loope
imul
inc
inc
jmp
stos
mov
inc
add
or
cs
je
mov
add
testb
inc
jmp
cmp
je
sbb
and
inc
jne,pn
push
pop
inc
test
lea
mov
iret
sbb
test
mov
imul
sub
jb
cltd
ss
xor
pop
add
lods
pop
push
scas
out
das
inc
mov
jge
sbb
add
mov
jle
adc
sbb
sub
loop
xchg
cld
push
addr16
cmp
js
adc
sub
push
les
xchg
je
jmp
cmp
sbbl
cmp
cmp
mov
mov
xor
pop
push
cld
and
adc
mov
mov
mov
xchg
imul
test
jp
outsb
hlt
fadd
xor
insl
addr16
orl
pop
add
ja
rorl
mov
push
cmp
sbb
test
fimuls
adc
insl
or
loope
ja
cltd
fcmovne
mov
sub
or
pusha
pop
add
lock
push
pop
pop
repz
pop
sub
xor
add
cmp
pop
xchg
mov
add
add
out
xchg
addb
inc
ret
push
lea
xor
inc
or
inc
or
inc
dec
test
push
test
aam
xchg
jbe
test
dec
cltd
mov
mov
sbb
mov
push
and
add
sbb
int3
cmp
pop
adc
nop
dec
or
or
push
lea
loopne
pop
pop
mov
mov
xorb
lret
and
add
jecxz
inc
mov
sbb
add
jne
test
mov
jl
lock
pop
add
fs
jecxz
out
dec
xor
popf
xchg
dec
pop
add
push
cmp
ficompl
in
outsl
jecxz
mov
loopne
jne
out
mov
mov
pop
mov
rcrb
and
mov
decl
test
int3
jecxz
pop
pop
fimull
adc
mov
inc
cmp
test
cli
pusha
or
in
or
push
add
lcall
mov
dec
inc
loopne
xor
or
iret
dec
jl
xor
and
jne
and
arpl
and
xorb
inc
ja
mov
cmp
mov
fdivl
xor
repz
adc
xchg
pop
cmp
jl
idiv
cld
push
cmpsb
jge
sti
sahf
inc
ja
jg
jge
mov
sub
add
pop
enter
or
orb
dec
inc
insl
and
jne
lret
add
jne
andb
andl
and
lock
or
mov
add
mov
in
loopne
test
fiadds
fiaddl
inc
cmp
lret
dec
or
dec
cmc
pop
andb
lea
xchg
int3
or
mov
sub
loopne
sbb
or
data16
mov
mov
jmp
lea
jo
pop
inc
push
mov
ret
push
imul
push
dec
cmpsl
popa
jmp
sub
push
pop
add
scas
pop
inc
outsb
in
iret
xchg
call
inc
dec
push
sarb
xor
adc
testl
xor
rclb
adc
ret
and
xchg
outsl
out
mov
sub
cmp
lea
stc
dec
mov
pop
sub
jle
add
and
adc
add
jmp
cmp
shll
adc
cs
jnp
popa
je
cld
sub
stc
jge
push
push
lods
sbb
sub
adc
xchg
add
jmp
mov
mov
pop
mov
dec
ds
inc
call
pop
xchg
or
and
cmp
or
xchg
adc
adc
push
xor
lds
in
in
jp
jae
adcb
push
fwait
mov
and
and
or
add
frstor
loopne
xchg
add
cli
aaa
sub
push
sub
pop
lods
pop
cmc
mov
push
mov
les
push
xchg
inc
fmull
dec
sbb
jo
jb
push
ret
xchg
in
mov
cli
gs
popf
in
xchg
iret
jb
mov
fldt
arpl
out
mov
rolb
sbb
xchg
xchg
fwait
and
pusha
aam
or
orl
push
adc
add
adc
jbe
sbb
int3
filds
call
sbb
and
pushf
sub
hlt
shll
roll
shr
or
xor
dec
cmpsl
stos
push
push
sub
jmp
push
shrb
in
jbe
add
push
jmp
adc
cmp
xchg
scas
pusha
mov
xor
pop
inc
dec
enter
out
movsb
sbb
repz
ds
mov
dec
mov
ret
inc
daa
push
or
push
leave
cmpb
cmp
push
pop
iret
jle
nop
and
lea
sbb
jns
jno
sub
jmp
std
inc
mov
or
enter
mov
imul
add
out
mov
mov
aaa
nop
xor
imul
inc
mov
or
inc
add
inc
mov
push
and
dec
jne
pop
xchg
pushf
out
pop
mov
lods
rorl
jmp
and
fmul
lods
das
xchg
nop
fiaddl
out
fbld
inc
les
and
scas
inc
and
or
sti
sub
dec
cwtl
cmp
xchg
scas
adc
add
sub
sub
cmp
jb
xor
adc
movsbl
lock
outsl
cmp
jmp
pop
lret
or
movsl
jae
stos
fsubrs
sub
cld
pop
ss
sub
fisubrl
ret
enter
push
test
or
cmp
push
mov
push
mov
xchg
inc
pop
fdivs
inc
inc
data16
push
add
pop
adc
push
int3
adc
test
or
bound
push
test
clc
xor
dec
push
mull
call
add
pop
jo
gs
and
push
or
loop
ret
mov
sbb
sbb
mov
xchg
insb
fs
cmp
cmp
mov
push
add
and
and
add
add
mov
enter
sbb
jg
lcall
jns
push
cwtl
add
and
fcomps
iret
es
push
jmp
adc
loope
sub
or
jmp
into
insb
popa
pushf
mov
add
je
jmp
rcr
or
jne
div
mov
cmp
cmp
inc
divl
out
out
shll
cmp
jb
cmp
retw
dec
fisubs
test
mov
sub
ret
ja
jmp
adc
pop
popf
int3
xchg
adc
adc
push
or
outsl
jo
sbb
push
mov
lahf
orb
neg
add
push
push
sub
cwtl
call
inc
jb
and
mov
sbb
sbb
out
sbb
mov
das
sbb
lret
xchg
lahf
adc
push
mov
add
shr
rcr
out
icebp
sbb
inc
stc
stc
pop
adc
dec
and
inc
fadds
sbb
inc
jae
int
dec
mov
add
push
and
xchg
push
popa
jl
push
xor
add
sub
mov
jne
jmp
dec
xor
or
jl
inc
mov
cmpsb
pop
push
push
and
sub
pop
cmp
push
inc
inc
cmpsl
add
movsb
cs
xor
xor
push
popa
jle
inc
xor
lret
insb
inc
xor
inc
and
or
les
inc
lods
add
pcmpeqw
inc
dec
xchg
add
cmp
jne
mov
mov
dec
adc
xor
xchg
sub
jne
lret
cmp
subb
cmpsl
cs
popa
push
cld
jne
dec
pop
adc
cmc
sub
adcb
ljmp
add
or
dec
add
les
lret
sbb
cwtl
stos
xor
out
jne
adc
loop
sub
mov
int
cs
dec
sbb
test
es
jp
inc
inc
and
push
mov
and
pusha
and
sub
stos
inc
jl
mov
rol
dec
stos
jne
lds
in
adc
test
cmp
pop
jge
cmp
jle
or
aaa
inc
or
movb
gs
and
mov
rolb
dec
push
xchg
add
popf
inc
add
jmp
fsubl
jo
add
in
mov
pushf
out
sub
jns
push
scas
sub
test
push
mov
xchg
out
std
ljmp
adc
rorl
add
leave
stos
lea
cmp
in
or
inc
inc
popw
imulb
rcl
dec
aaa
out
mov
inc
xorb
push
dec
lcall
jl
pop
nop
fidivrl
add
xor
xchg
mov
add
inc
xchg
out
rcrb
cmpb
orl
inc
xor
mov
cmp
or
jge
mov
dec
push
jp
sub
dec
aam
loope
imulb
mov
lea
outsl
push
cmpsb
mov
fmul
dec
push
sbb
je
mov
xchg
fs
test
mov
push
add
xchg
jno
das
jmp
add
mov
imul
push
lods
arpl
pop
dec
dec
dec
dec
add
iret
add
shrb
mov
xchg
mov
jle
ss
ret
push
dec
xchg
push
sti
test
cmp
push
pop
cmp
mov
cmp
in
rcll
pusha
mov
or
mov
ret
xchg
mov
pusha
push
lea
cmp
jb
mov
sub
aam
and
cmp
and
push
push
xor
jne
mov
arpl
pop
xlat
inc
jne
or
adc
xor
add
gs
or
fdivs
mov
lea
pushf
xor
sub
lret
aam
pusha
xchg
add
rclb
inc
pop
pop
orl
jmp
mov
sbb
rcrb
mov
mov
andl
test
jp
mov
je
add
or
or
add
cmp
cmp
popf
mov
roll
jne
or
sti
push
jne
add
jno
outsb
pop
add
pop
lods
xor
inc
jne
mov
inc
mov
or
mov
in
stos
or
rdtsc
and
inc
ret
mov
ret
mov
ds
aaa
cmp
sbb
xor
xor
pop
inc
jb
and
cmp
jbe
shrb
or
scas
add
xchg
sbb
bound
mov
lods
fsts
js
mov
pop
inc
xor
or
mov
sub
dec
scas
or
push
mov
jne
or
and
clc
movsl
popa
sub
ja
push
jbe
mulb
cwtl
push
inc
ja
dec
pop
adc
neg
sbb
neg
mov
xchg
fdivl
add
mov
push
cmpsb
bound
mov
sub
xchg
cmp
cmpsl
push
mov
mov
push
xorb
roll
shl
sbb
jo
jp
push
adc
mov
fincstp
and
mov
repnz
lret
mov
sarl
in
cmpsb
mov
cmp
fs
dec
not
mov
leave
xor
fisttpl
xorl
sarb
mov
out
pop
inc
mov
mov
jbe
mov
mov
or
sbb
add
adc
and
adc
dec
and
loope
cmp
cwtl
mov
jbe
aaa
push
pop
adc
push
add
add
insb
aam
add
push
pushf
insb
lcall
dec
gs
sti
das
mov
mov
sbb
test
sbb
or
lret
adc
and
mov
sbb
sub
gs
pop
xor
cmp
add
out
rclb
adc
cmp
mov
rcrb
lret
inc
movsb
cmp
sbb
xor
adc
sbb
push
aam
push
ret
xor
pop
pushf
sub
shll
test
lods
sub
jbe
dec
push
push
sub
or
adc
cwtl
push
push
mov
fnsave
call
or
call
xchg
lds
jmp
js
cmp
divb
xchg
pop
leave
pop
or
dec
int3
and
pop
xorb
test
jmp
in
movsb
arpl
andl
mov
mov
sti
fidivrs
decb
mov
sbb
push
or
test
arpl
and
jns
addr16
jne
das
inc
out
bswap
mov
pop
lea
sbb
xor
or
ds
leave
stos
orb
dec
inc
pushf
sub
dec
add
adc
nop
adc
xor
mov
sar
movsb
shl
loope
test
ljmp
enter
shll
cmp
inc
js
sub
push
xchg
shrb
or
icebp
add
dec
mov
cmp
pop
push
dec
stos
dec
inc
ja
andl
cmpsb
xor
dec
xchg
dec
cmp
adcb
add
inc
sahf
test
in
mov
aam
pop
hlt
push
dec
lock
push
or
rorb
leave
cmp
faddl
mov
pop
in
jl
xor
jg
mov
mov
sub
dec
lret
test
mov
add
add
push
pop
rorb
xchg
stc
xchg
mov
pop
push
mov
lds
xchg
loopne
cld
fsubl
xor
sbb
call
cmp
je
int
faddl
dec
dec
je
or
pop
jb
pop
repnz
or
fsts
add
addb
sti
sub
adc
je
jbe
divl
ss
add
lret
into
inc
loopne
xor
roll
inc
inc
shr
jmp
pop
test
xchg
push
roll
mov
jne
negb
pop
cs
adc
loopne
adc
adc
cmp
adc
aas
ss
add
pop
jg
xor
push
inc
inc
sbb
xchg
sbbb
fs
dec
xchg
sbb
rorl
sbb
xchg
push
or
adc
test
jns
inc
data16
imul
cmp
gs
xor
cmp
scas
call
movsb
jo
outsl
inc
lret
insb
or
sub
cmp
add
push
and
adc
inc
or
push
bound
mov
add
xchg
outsl
push
or
or
movsb
roll
dec
rorl
cli
aam
and
sbb
inc
inc
data16
cs
int3
add
arpl
mov
out
pop
iret
add
mov
lock
adcb
jnp
and
ja
ljmp
xor
out
hlt
xor
out
pop
xor
je
loop
dec
orb
lds
jmp
cmp
imull
fxtract
dec
dec
ds
mov
test
add
push
je
mov
sub
add
fidivs
mov
cmpsb
jmp
cmp
fnsave
jl
fcoml
or
popa
inc
mov
roll
es
and
push
jno
add
add
sub
inc
lock
mov
mov
mov
mov
repz
negb
and
and
ljmp
insb
pop
popf
addr16
cmp
xchg
cli
or
adc
out
sti
pop
sub
nop
test
rcrb
je
cmp
add
test
dec
test
lret
imul
pop
cmpsl
inc
icebp
jmp
jl
paddsw
add
xchg
xor
add
filds
jae
insb
sbb
or
pop
leave
ds
xor
pop
mov
add
adcb
add
add
or
jmp
inc
popa
add
xor
and
data16
lock
in
mov
inc
mov
push
ljmp
jle
mov
or
pop
jmp
pop
test
inc
je
inc
jle
dec
pop
or
push
fcoms
cltd
jmp
loope
rolb
jmp
jecxz
in
xorb
je
jg
jl
and
mov
mov
add
pushf
gs
inc
inc
notl
add
or
jge
add
leave
insb
testl
in
mov
sbb
sub
push
iret
jno
gs
rolb
hlt
cltd
push
push
push
push
push
les
out
mov
xor
jo
sbb
jno
je
in
adc
int3
mov
add
dec
push
jmp
sub
lock
insl
push
mov
fldl
mov
cmp
jne
and
xor
push
insl
loope
add
pop
ret
sbb
movsb
adc
cld
test
test
gs
xchg
sub
or
je
and
pop
add
or
sub
hlt
or
pop
push
pop
push
inc
adc
push
dec
repnz
sub
in
lods
xchg
aad
cmpb
jns
xor
sbbb
inc
mov
pop
es
das
les
call
push
push
sarl
pop
xor
xchg
sbb
orb
loop
mov
shrb
aad
and
cmp
or
in
mov
mov
lea
jmp
shl
js
sub
dec
dec
or
dec
add
push
mov
mov
jl
and
or
xor
cwtl
lea
incl
pop
jo
cmp
add
repnz
cmpl
nop
orl
ret
dec
stc
gs
or
pop
das
sbb
push
xchg
mov
sbb
imul
pop
addl
pop
inc
mov
sbbb
iret
bound
aam
mov
xchg
les
andb
xchg
push
push
divb
add
sbb
or
xor
xchg
cmovae
lahf
pop
rorb
xchg
pop
pop
stos
adc
push
or
add
push
mov
adc
out
cmpb
push
mov
push
sahf
out
call
and
pop
sti
add
jmp
loopne
mov
add
sub
je
push
add
or
or
sbb
inc
hlt
jmp
sbb
dec
inc
dec
jg
je
les
inc
je
daa
pusha
pop
adc
sti
dec
jne
incb
inc
cmpb
jne
add
shrl
jne
ror
and
pop
mov
shrb
daa
je
pusha
pop
bnd
push
insb
ja
xor
addb
ja
jmp
decb
sti
cmpb
or
and
push
mov
ljmp
roll
ret
cmp
pusha
es
das
mov
cmp
sub
jns
jp
dec
xor
mov
arpl
mov
je
dec
jg
fs
xchg
push
out
les
jae
mov
in
loopne
dec
push
mov
pop
add
out
jg
rorl
add
nop
sub
fs
add
and
out
mov
jle
imul
add
js
add
lods
xor
mov
sub
jle
add
mov
jp
mov
sbb
ret
lret
mov
cmp
pop
mov
mov
mov
cmp
jmp
push
mov
lds
pop
add
fisttps
pop
aad
and
in
dec
pop
push
fldl
in
push
inc
inc
pop
mov
mov
data16
mov
pop
mov
mov
inc
push
and
scas
in
cli
lds
sti
gs
inc
pushf
push
test
pop
mov
movb
clc
mov
gs
into
sub
inc
je
pop
push
and
jecxz
mov
jae
or
sub
in
aaa
jae
push
sbb
mov
sbb
leave
fisttpl
pop
adc
es
or
stos
movb
dec
call
mov
jno
jne
inc
pop
das
imul
scas
ljmp
loop
dec
dec
mov
jo
sbb
and
push
leave
popf
xchg
shrb
mov
mov
cmp
sbbl
mov
sbb
mov
nop
aas
sub
cmpb
test
inc
movl
jmp
test
adc
fmul
pop
sti
xor
lods
enter
push
mov
or
push
js
adc
mov
in
mov
inc
aad
lahf
pop
and
addr16
subl
iret
adc
dec
ljmp
jge
jnp
pop
andb
or
dec
or
lret
mov
dec
cmp
cmp
xor
adc
add
inc
cmp
jae
mov
jmp
cmp
sbb
mov
cmp
ja
rorb
add
lret
and
mov
cs
ficompl
shr
mov
repnz
adc
mov
mov
jmp
pop
insb
dec
cmp
loop
insl
push
add
lret
push
jns
cwtl
popf
sbb
rclb
dec
shll
dec
dec
inc
cmp
mov
push
pop
shrb
dec
pop
call
sbb
inc
pop
add
xor
test
je
push
mov
ljmp
enter
dec
lods
cmp
push
sbb
cmp
faddp
dec
mov
nop
enter
inc
rclb
addw
aam
inc
xchg
scas
dec
mov
andb
push
int
sub
jg
cmpsl
mov
pop
sub
adc
bound
jne
xchg
cmp
jmp
lods
mov
wrpkru
xor
mov
jecxz
test
jne
lds
fildll
or
and
mov
mov
xchg
dec
push
mov
add
stos
jne
push
pop
sarl
jge
dec
repz
xor
ret
addb
jo
es
fisttps
cltd
add
mov
lds
pop
pop
cmp
fmul
sti
jmp
dec
test
add
mov
xor
mov
add
je
popf
push
les
jo
cmp
add
sbb
add
aas
lea
shl
jmp
inc
mov
push
add
mov
xorl
lea
add
filds
mov
adc
add
les
data16
insl
mov
sub
pusha
or
or
add
cmp
adc
jmp
fisttpll
cld
imul
inc
test
js
movsb
into
sbb
lds
ljmp
js
bnd
das
bound
and
pusha
scas
outsb
jne
mov
mov
test
or
push
divb
cmp
addr16
pop
lret
and
dec
int
out
fs
adc
pop
adc
cmp
test
mov
sahf
sub
pop
sub
dec
iret
loop
jae
js
fsub
out
pop
sub
push
fwait
enter
decl
js
mov
or
ret
push
mov
insl
dec
pushl
or
lods
leave
push
ss
lcall
movsb
push
leave
push
les
and
adc
push
or
xor
or
sbb
jmp
xchg
mov
xchg
xor
scas
add
inc
push
pop
outsl
fsubl
andb
mov
add
mov
dec
or
sbb
jbe
push
jmp
xchg
mov
in
inc
or
xchg
inc
xor
sbb
push
out
pushf
sub
repnz
inc
cmp
push
fistpl
xchg
sub
push
sarb
fnstsw
xor
shlb
cmp
dec
and
add
mov
fsubs
sbb
and
inc
adc
inc
call
xchg
xor
stos
mov
lea
xchg
dec
sub
push
adc
xor
fcmovne
inc
call
inc
jle
ret
xchg
mov
xor
inc
jmp
push
subb
xor
lea
andb
add
lea
or
je
mov
pop
imul
and
cli
cmp
ja
orb
mov
xor
sub
inc
sbb
mov
xchg
xchg
mov
jb
sbb
jp
add
ljmp
lea
mov
movsl
movsl
pop
mov
lahf
inc
pusha
jns
cmp
inc
adc
inc
cmp
jb
push
inc
cmp
jmp
test
rorl
mov
pop
stos
mov
in
fdivs
sbb
xchg
outsb
adc
movsb
or
addl
mov
gs
push
mov
test
mov
jbe
xchg
and
xorb
add
or
mov
mov
adc
jbe
lret
mov
dec
sbb
aaa
stos
ss
cmp
shlb
add
incl
lret
or
mov
jb
mov
movb
test
push
mov
jne
cwtl
sarb
ja
sub
lea
sub
mov
inc
inc
mov
pop
push
fidivrl
pop
pop
push
sbbl
dec
mov
push
push
leave
hlt
mov
jle
and
nop
cmp
or
mov
lea
mov
test
pusha
jge
adc
push
inc
mov
arpl
fadds
movsl
jmp
andb
xor
mov
xchg
mov
test
push
xlat
enter
add
shll
mov
cmp
adc
popa
jb
jp
push
xor
call
loopne
and
dec
mov
and
mov
jmp
nop
add
jle
mov
mov
add
xchg
stc
mov
or
xor
xchg
adc
arpl
push
push
adc
mov
add
popl
xchg
flds
mov
je
inc
inc
sbb
cmp
cmp
enter
pusha
sub
or
sub
add
adcb
xor
dec
pop
jmp
add
mov
pop
pop
ror
or
or
cmp
das
adc
sbb
lock
sbb
mov
aas
pop
push
mov
popa
adc
mov
jl
sbb
xor
lcall
mov
dec
andl
nop
adc
dec
das
sub
push
inc
push
push
ljmp
dec
pop
inc
and
adc
and
cmp
jg
sub
and
insl
in
push
sbb
cmp
stc
or
lds
jecxz
xchg
movsb
repz
sub
shrb
leave
adc
and
mov
ds
lock
inc
xchg
sbb
jne
insb
pop
inc
sbb
repnz
push
popf
sbbl
ja
inc
sub
sub
dec
cld
or
xorb
insl
addb
sbb
mov
sahf
leave
push
mov
xor
sbb
inc
bound
or
inc
push
add
mov
mov
out
push
inc
xor
mov
mov
clc
jmp
add
lret
xchg
jl,pn
push
cmp
jmp
hlt
mov
mov
dec
in
adc
in
mov
sub
cmp
mov
cmp
sub
imul
jb
mov
and
popf
mov
push
xor
inc
add
sbb
add
sub
shr
mov
stos
push
sbb
imul
lock
xchg
dec
dec
mov
xchg
out
inc
add
mov
lea
mov
mov
dec
nop
add
enter
jle
cli
add
cmp
jbe
push
addr16
add
dec
add
dec
dec
and
cmpsb
andb
push
xorb
add
shr
lea
not
and
decb
jne
andl
or
negl
pushf
mov
je
pop
add
orb
mov
push
sbb
pop
push
or
dec
adc
push
enter
rcrl
dec
mov
addl
or
es
dec
pop
cmp
jbe
mov
cld
push
adc
rcl
shrb
cmp
je
loopne
aaa
push
mov
inc
cmp
push
fsub
sbb
lret
shr
not
and
mov
dec
add
sub
jge
jnp
mov
inc
sub
push
xchg
add
mov
test
mov
or
or
or
test
push
cmpsb
mov
and
add
fidivrs
pop
rol
fisttpll
cmp
mov
mov
cmp
test
add
push
lds
outsl
or
mov
or
jmp
scas
mov
cmpsl
lcall
mov
push
mov
or
inc
xor
pop
repnz
mov
sbb
or
or
inc
lcall
dec
or
mov
repz
push
push
call
cmp
or
fmuls
cmp
inc
adc
ljmp
arpl
jns
movsb
es
inc
pusha
add
rcrl
js
push
mov
or
xchg
fsubl
inc
mov
adc
mov
cmpsl
sbb
push
lea
and
mov
or
cmp
adc
or
lock
mov
je
in
imul
test
sbb
dec
js
lock
add
sar
dec
cmp
jge
or
stos
in
mov
jmp
cs
inc
aad
call
mov
sub
orl
sbb
bound
decb
iret
jbe
push
sub
adc
add
jb
jne
mov
cmp
mov
notb
cmp
jae
negl
out
in
es
cmp
xchg
cmp
test
ret
pop
push
add
mov
decl
sbb
mov
cld
flds
adc
nop
inc
sub
mov
mov
test
nop
dec
inc
or
and
ja
inc
or
sub
xchg
and
add
cmp
xlat
je
hlt
shll
dec
imul
dec
into
int
pop
push
shlb
shl
clc
push
orb
jmp
mov
xchg
fidivs
or
icebp
dec
add
incb
cmp
jle
lea
imul
repz
dec
popa
cmp
xchg
sub
test
cmp
pop
mov
jo
mov
pcmpeqw
inc
xor
cwtl
dec
in
and
jmp
fidivrl
sbb
push
shlb
sbb
push
movsl
pop
test
sbb
jp
lods
daa
adc
mov
xchg
inc
push
int3
or
dec
daa
in
stos
xchg
sarl
jl
mov
push
mov
push
aas
leave
fs
imul
scas
roll
or
mov
into
shr
or
jo
rorl
jl
rolb
dec
loopne
ficomps
xor
lods
fldl
lds
aaa
clc
sbb
mov
jns
cld
dec
or
jne
add
add
outsl
or
cld
loopne
or
lea
jne
gs
in
and
sbb
cmp
cmp
decb
mov
or
ret
ret
shrl
lea
or
daa
and
adc
mov
and
sti
sbb
xchg
jne
or
clc
push
popa
scas
iret
repz
xor
xchg
cltd
and
push
add
mov
shll
xchg
rcl
and
xor
cmpsb
jl
add
xchg
dec
pushf
add
add
andl
mov
xor
inc
ret
push
push
push
lahf
sub
inc
ret
mov
pop
dec
pop
add
xor
mov
inc
or
or
test
or
shl
push
loop
dec
mov
xor
add
push
mov
add
cli
ja
lea
jns
testl
dec
adc
mov
scas
xor
movl
jno
and
inc
or
sub
sbbb
pusha
adc
and
mov
or
clc
dec
jae
ds
mov
fsts
or
iret
in
or
mov
sahf
mov
jge
xchg
sub
fwait
or
dec
inc
jne
or
mov
adc
shlb
push
inc
stos
pop
sbbl
jg
mov
lea
sub
xchg
ss
sbb
pmulhw
dec
dec
cld
dec
cmp
cmp
mov
pushf
push
mov
dec
add
fldcw
xadd
stos
aas
push
or
jbe
pop
pusha
sbb
and
xor
jae
mov
add
sub
stos
lock
pushf
nop
xchg
es
dec
or
jg
mov
into
add
stc
dec
cld
and
mov
stos
add
lds
aad
push
les
pushl
pop
mov
pop
hlt
lea
nop
fstpt
dec
jno
pushf
in
or
pushf
in
jne
xchg
movsl
cmp
pop
call
aas
jmp
mov
and
iret
push
lahf
xchg
imul
loopne
iret
jmp
adc
pop
mov
repnz
mov
call
lea
mov
inc
cmp
and
inc
adc
add
sub
mov
mov
mov
sub
pop
xor
sahf
xchg
push
cmp
sahf
pop
push
push
lret
bound
je
jne
xchg
imul
dec
mov
push
push
fcompl
dec
push
addr16
mov
jecxz
cmp
ja
ja
and
xchg
add
test
push
movsb
into
dec
or
cli
test
push
cmp
sub
sfence
inc
dec
cmp
sbb
mov
pop
in
stos
ficomps
dec
lea
xor
sub
ret
dec
sar
cs
stos
mov
sub
sbb
scas
pusha
xchg
xchg
mov
mov
inc
shll
inc
sbb
sbb
xorl
jno
inc
cmp
mov
cmp
sub
mov
mov
push
mov
xor
mov
inc
out
xchg
enter
test
stos
add
mov
add
rolb
ret
rorl
mov
adc
cmp
jl
push
dec
loop
fs
add
ret
cmp
jae
orb
inc
pop
movl
add
jmp
jmp
icebp
mov
lods
lods
sbb
adc
adc
push
pop
pusha
xchg
sbb
mov
repz
fsubrs
leave
and
mov
dec
cmpsl
in
sbb
or
and
push
cmp
cmp
loopne
int3
mov
jle
aas
and
mov
jecxz,pt
push
daa
adc
mov
mov
pushf
shr
inc
sbb
in
add
rcr
add
enter
or
add
out
or
add
je
cmpl
movl
inc
and
inc
repz
sub
out
loop
add
push
xor
mov
or
push
in
imul
bound
jbe
adc
loopne
or
je
jmp
test
jne
mov
and
and
sbb
xchg
lds
mov
cltd
mov
icebp
orb
or
push
mov
sbb
pop
mov
sbb
cmpsl
fsubs
inc
xor
and
imul
and
mov
dec
xchg
mov
and
and
mov
mov
xchg
push
sbb
sub
movsb
dec
or
and
add
filds
cmp
jae
mov
sbb
push
sbb
inc
out
mov
xchg
mov
jne
adc
js
pop
push
or
jb
inc
mov
dec
inc
dec
jle
lods
or
adcb
xor
mov
dec
push
cld
outsl
gs
andl
clc
jb
rcrl
adc
movsb
mov
or
cmpsb
cmp
push
in
jg
and
or
dec
mov
daa
aas
es
mov
call
aaa
add
sub
sub
lahf
or
out
cmp
xor
or
sub
shrl
loopne
aaa
xor
push
clc
jnp
inc
mov
mov
bound
jae
inc
sahf
inc
mov
adc
negl
orb
push
push
cld
mov
adc
jne
jno
inc
push
adc
xchg
mov
xchg
jne
mov
cmp
jae
testb
cmp
jmp
sbb
and
aad
inc
or
pusha
sbb
or
add
pushf
cmp
lahf
mov
add
xor
sub
push
pushf
push
mov
mov
cmc
sub
or
les
sub
sub
ret
sub
lea
or
ljmp
mov
pop
popa
mov
push
cltd
adc
jmp
inc
sbbb
pop
mov
bound
jae
sub
dec
popa
add
and
or
mov
cltd
add
mov
loope
or
xor
cmp
jae
mov
test
jne
pop
add
subb
add
inc
jmp
push
popa
push
adc
cmp
mov
testb
sbbb
jmp
int3
xchg
add
cli
add
sbb
jle
and
jae
inc
xor
loope
push
lea
pop
lcall
mov
ret
mov
popf
add
jmp
jae
sub
mov
jmp
jl
or
rolb
jmp
push
or
sbb
inc
mov
lret
loope
leave
jg
stos
loopne
pop
and
xor
adc
clc
or
adc
lea
jbe
pop
or
sub
mov
or
repnz
xorl
and
jb
sbb
or
shlb
pop
jne
mov
jl
add
sub
or
adc
xor
push
jecxz
inc
mov
xchg
mov
pop
ljmp
bound
push
xor
fmuls
add
sbb
mov
inc
jne
or
and
pop
adc
addl
in
out
or
aaa
stos
adc
mov
add
inc
xor
je
pop
test
iret
out
pushf
movsb
enter
pop
or
push
mov
add
add
jmp
pop
lds
mov
push
dec
call
in
insb
popf
insb
add
fs
cmpsb
and
in
je
push
mov
in
push
in
adc
adc
and
and
xchg
xchg
mov
test
xchg
mov
andl
sbb
or
sti
cltd
inc
or
jge
pop
jae
mov
inc
jne
sbb
adc
cmpsb
out
xlat
or
daa
testb
add
and
fsubs
popa
les
push
add
test
and
xorl
addr16
je
cmp
andb
push
popa
sbb
test
xorb
pop
loope
aad
or
insb
fimull
ror
movsl
sbb
sub
lcall
repnz
jle
mov
cmp
and
mov
xor
mov
stos
add
inc
jmp
or
jmp
adc
shrb
jne
or
ret
pop
arpl
inc
cmp
sbb
push
insb
into
dec
cltd
je
test
inc
mov
loopne
dec
stos
sub
jge
xor
cmp
mov
ds
jae
inc
and
xor
loope
insb
mov
lds
popf
ret
xor
add
adc
stc
sar
fsubs
outsl
cmp
cmp
mov
mov
pop
and
loopne
sahf
mov
sub
xchg
push
push
xor
mov
sti
lds
cmp
xchg
sbb
daa
xor
jae
and
leave
lock
out
sub
loopne
pusha
popa
je
cmp
cmp
mov
add
xor
jmp
leave
xchg
push
or
and
inc
add
ret
dec
popa
or
cmp
mov
inc
clc
or
push
jg
and
mov
je
push
pop
xor
xlat
dec
lods
push
cwtl
jo
cmp
leave
cmpb
push
and
mov
adc
mov
inc
jne
ja
insb
cwtl
jne
add
cld
add
or
adc
jmp
mov
or
xor
adc
jbe
je
loop
daa
or
std
and
cmp
imul
jne
pop
insl
std
xorb
pusha
mov
xlat
push
adc
cmp
push
mov
rolb
push
lcall
lret
jge
jns
mov
in
cmpsl
mov
pop
test
rolb
mov
adc
mov
sbb
mov
or
pop
mov
test
cmp
testb
push
inc
add
cld
jl
jmp
mov
inc
pop
or
jmp
push
shl
out
xor
or
mov
sbb
cmp
cmp
je
cmp
add
aam
decl
cmc
outsb
outsb
inc
or
popa
cs
shll
mov
mov
rcll
pop
js
jne
js
jae
int
push
orb
ret
into
nop
data16
xor
inc
call
gs
imul
inc
sub
bound
les
cmp
push
push
adc
mov
mov
add
mov
or
push
sub
xor
and
or
push
pop
push
scas
mov
mov
dec
pop
sub
cwtl
mov
adc
adc
sub
mov
cmp
inc
mov
xchg
sbb
add
cmpb
jl
add
and
mov
daa
mov
inc
xchg
and
mov
mov
cmp
sbb
xchg
or
mov
into
dec
adc
inc
push
mov
push
adc
cmp
pop
movb
inc
ja
das
and
jae
out
and
stc
push
push
xchg
leave
inc
je
enter
stc
lea
add
mov
jmp
cmp
dec
shlb
jge
add
or
push
add
loop
lret
lahf
je
jne
test
jb
dec
adc
cli
xor
add
push
sub
mov
loopne
test
push
cmp
je
cmp
jns
rorl
int
jnp
push
mov
pop
sbb
mov
test
ret
cmp
jno
push
xor
sub
das
inc
into
mov
and
add
inc
cli
push
pusha
adc
inc
xor
dec
cld
dec
sub
xchg
push
gs
sub
pop
sub
leave
and
pop
lock
inc
sbb
adc
pop
xchg
sub
cmp
int3
mov
fwait
jae
mov
dec
xor
cmpsl
shlb
jl
loop
int3
sub
ret
add
xor
bound
pop
mov
push
xchg
pop
cmp
pushf
cmp
mov
mov
mov
add
jmp
lea
mov
push
test
adc
pushf
enter
cmp
or
rcrl
push
scas
lret
sbb
cmp
jmp
lock
adc
sub
shrl
pop
push
add
subb
lock
jne
fmull
sub
or
call
test
sbb
jbe
pop
int
test
shl
xchg
test
xor
cld
sub
je
int3
mov
rol
push
push
inc
iret
ss
dec
add
and
rcrb
push
sub
mov
jne
rcrb
dec
aam
or
sub
push
inc
mov
pusha
imul
roll
pop
xchg
repz
sub
cmp
je
mov
inc
push
je
loope
sbb
pushf
insb
inc
add
dec
mov
add
je
cmp
jne
dec
mov
inc
dec
sub
test
fldl
mov
jb
jae
adc
repz
shll
mov
sub
int
scas
dec
add
loope
dec
fcomps
jno
jae
cmpb
je
dec
mov
pop
mov
xor
setg
push
push
add
test
sub
xor
mov
xchg
jnp
push
cmp
shll
fstpl
loope
jp
cld
push
insl
xchg
fcoms
das
inc
adc
push
jl
rolb
lret
test
fadds
sub
inc
or
sarb
push
dec
xor
xor
push
enter
jge
push
arpl
or
enter
cmp
xor
and
and
xor
mov
adc
add
jns
neg
sub
sti
fs
fs
pop
idiv
add
andb
mov
fisubl
mov
or
mov
and
adc
mov
iret
push
clc
mov
fs
pushf
imul
mov
add
and
gs
hlt
and
add
ret
rorl
add
push
data16
xchg
test
or
enter
push
inc
add
xor
mov
data16
clc
inc
call
outsb
add
pop
test
jge
add
fsubrp
push
add
jl
xor
pop
push
push
push
dec
push
mov
xchg
je
fs
pop
and
dec
or
push
push
pop
inc
lods
mov
push
jp
xor
jae
pushf
rorl
xchg
dec
mov
mov
inc
adc
or
adc
inc
stc
and
push
mov
mov
into
push
mov
int
aad
adc
add
mov
add
xchg
xor
inc
or
lds
mov
mov
sub
popa
divb
bound
pop
sub
ss
data16
sub
jecxz
cmp
sbb
subl
jne
mov
or
aam
sub
sbb
push
add
test
pop
jbe
test
and
mov
fsubs
inc
cmp
push
hlt
cmp
jb
add
xor
and
sbb
aad
mov
ret
cmp
slwpcb
xor
xchg
testl
jne
ds
sbb
mov
fs
xchg
push
pop
push
push
js
dec
push
popa
push
sbb
jmp
push
sbb
movsl
je
test
shll
add
jle
mov
aam
mov
adc
push
test
adc
add
mov
les
shll
clc
push
xor
cmp
jae
xchg
mov
and
adc
in
fistps
dec
mov
add
pop
xchg
nop
lods
add
call
les
decb
adc
cmp
jl
jl
je
mov
and
dec
js
daa
fsubl
jmp
leave
fcmovb
scas
xchg
xor
ja
fdivrs
div
inc
lock
je
sbb
push
lea
cmp
inc
sub
lods
xchg
push
movsl
or
gs
jo
das
push
sahf
sbb
mov
pop
xchg
aaa
xor
cmp
mov
je
push
in
lahf
aad
pushf
ret
cmp
xor
loopne
pusha
adc
jp
and
cltd
aad
fsubl
xchg
mov
jno
scas
fsubl
movb
stos
dec
xchg
add
test
push
lea
cmpsb
stc
dec
addb
enter
cwtl
jp
xor
add
or
add
hlt
je
cmpsb
xor
or
ja
arpl
sub
insb
cwtl
jne
cmpl
leave
sbb
jae
movsl
xchg
add
icebp
pop
lods
mov
sbb
or
add
add
mov
jmp
mov
mov
shlb
pop
pop
jle
insl
add
add
orl
roll
mov
sbb
and
push
mov
inc
xor
popf
andb
andl
inc
mov
test
shr
js
pop
push
dec
dec
pop
and
jp
jmp
pop
cmpsb
mov
scas
mov
stc
pop
adc
push
xor
push
imul
dec
dec
jg
jo
push
cld
in
and
dec
enter
xchg
fldcw
pushf
adc
lods
push
cmp
jae
pushf
cwtl
adc
sbb
cmp
shrd
dec
xor
and
jb
arpl
dec
sub
cmpsb
ret
sahf
sbb
adc
or
and
xor
lea
insl
inc
pop
inc
sub
lods
adc
fisttpl
lds
mov
sub
push
inc
les
push
or
adc
sub
pushf
adc
and
fsubrs
fdecstp
ret
cmp
rclb
je
aaa
add
cli
jecxz
mov
fiaddl
mov
xor
jae
cmpb
jne
inc
jmp
mov
pop
icebp
xorb
push
sub
xor
testb
or
lea
and
sub
movsl
dec
sbb
loope
dec
pop
push
adc
jne
sub
mov
stos
adc
lea
or
ds
jae
adc
mov
add
jmp
cld
adc
inc
lds
ja
and
sbb
add
jns
je
sbb
fmul
and
sub
jmp
cld
add
push
pop
add
movsl
imul
adc
add
ret
sbb
mov
je
or
inc
je
mov
mov
mov
test
pop
cmc
add
pop
add
push
cmp
jge
lea
sub
mov
mov
pop
xor
or
jne
mov
fs
cmpl
enter
addl
cmp
mov
cmpb
mov
xchg
cmp
or
inc
xlat
roll
or
dec
pop
push
nop
xchg
cli
mov
cmp
jnp
mov
push
in
pusha
cmp
push
mov
push
loopne
add
adc
lea
pop
inc
stos
push
ret
lea
jmp
add
xchg
adc
mov
enter
inc
mov
jne
mov
xchg
sbb
les
push
adc
pusha
test
ficompl
mov
inc
out
ds
loopne
test
push
inc
clc
or
pusha
and
je
shll
mov
pop
int
mov
test
mov
loopne
jbe
sub
cmp
je
inc
adc
aaa
sub
in
mov
xor
jecxz
xor
jnp
add
pop
je
push
push
xchg
or
mov
pop
inc
cmpb
pushf
dec
adc
push
push
cwtl
push
jno
push
movsb
sahf
sub
sarb
std
jne
pop
lcall
fadds
pop
mov
pop
sub
repnz
xchg
loope
aaa
push
push
mov
or
je
shll
int3
mov
xchg
sbb
fmull
inc
int3
mov
fisttpl
dec
mov
or
mov
push
push
xchg
ret
dec
add
mov
lea
fildll
add
andl
adc
movsb
and
mov
nop
jmp
inc
add
inc
mov
inc
cmp
push
dec
bound
shl
arpl
add
xchg
push
push
mov
mov
inc
inc
int3
bound
aad
into
adc
push
gs
push
inc
and
mov
inc
jbe
sbbb
or
dec
inc
pop
and
nop
or
jne
pop
divb
gs
lcallw
push
imul
sbb
mov
add
rorl
mov
push
mov
adc
inc
pusha
sub
adc
clc
push
repz
and
cmp
jmp
fdivrs
mov
adc
sete
adc
shr
mov
dec
push
inc
ss
push
inc
movb
inc
xchg
add
pop
dec
mov
test
je
adc
pop
je
sbb
data16
cmp
add
fiadds
dec
jo
in
andb
mov
pushf
xchg
movsb
xor
xor
sti
or
mov
or
mov
inc
divb
sbb
flds
xor
outsb
or
jmp
js
jp
add
xchg
mov
xor
mov
mov
push
jg
dec
or
push
js
ret
push
add
sbb
mov
movb
inc
loope
push
test
sub
inc
cmp
je
dec
inc
popf
xchg
xchg
or
and
sub
aad
and
sbb
arpl
negl
lret
xchg
cs
xor
aaa
orl
inc
mov
cmp
push
sti
sti
imulb
movl
movsl
jmp
or
test
lret
and
cmp
mov
cltd
xlat
or
in
inc
push
in
adcb
xor
inc
ret
gs
and
sbb
movb
mov
or
jmp
lea
jno
dec
inc
dec
jno
rolb
cmp
lret
jp
inc
mov
xor
int
inc
addl
enter
mov
cltd
add
daa
mov
mov
sbb
andb
rcrl
mov
jo
push
cmpl
dec
push
jmp
mov
and
jle
aad
aas
test
mov
mov
inc
sbb
mov
pusha
push
push
mov
iret
jmp
mov
or
inc
inc
add
cmp
jl
inc
push
or
fdivs
add
lds
push
call
pop
jmp
je
or
push
add
les
push
or
xchg
push
mov
jno
inc
adc
orb
rcrb
or
jmp
addb
filds
add
mov
mov
addb
sub
stos
inc
push
cmpsb
loop
jmp
mov
nop
loope
ljmp
test
jo
movlps
test
mov
mov
mov
add
push
pop
and
push
les
out
cmp
fwait
add
mov
mov
xlat
add
push
or
jne
test
push
or
inc
call
popl
fcoms
add
addb
or
cmp
mov
dec
xorl
xchg
inc
xchg
push
inc
sbb
add
sub
or
pop
ret
add
int3
int3
push
inc
xor
pop
inc
xor
adc
stc
shll
inc
bound
ror
pop
jo
xor
inc
pop
lods
test
cmp
jae
or
xchg
mov
andb
je
push
push
lea
orl
inc
pop
pop
xchg
or
cmp
int
ret
outsl
xor
sub
xchg
fimull
add
mov
or
push
pop
or
sbb
fs
sub
adc
xchg
cmc
pop
fildll
mov
mov
push
sbb
sbb
mov
jbe
and
dec
sub
xor
and
adc
js
inc
rclb
pop
nop
movsb
stos
test
sub
xor
fs
cmp
mov
adc
pop
mov
add
xchg
lret
rcrl
add
inc
dec
mov
jle
imul
cli
dec
dec
sub
lea
pop
lret
aam
daa
jno
in
pop
inc
mov
mov
adc
mov
imul
shlb
push
add
push
cwtl
fdivrs
out
push
lcall
adc
mov
outsb
stc
xchg
push
xchg
mov
and
push
aas
fisubl
pop
jmp
xchg
repz
ss
add
inc
ss
xchg
and
stc
nop
or
fld
and
in
inc
pop
inc
sbb
or
lods
dec
orl
movl
adc
pop
jo
inc
adc
aam
dec
mov
mov
pop
xchg
mov
or
push
enter
push
stc
pop
xchg
add
sahf
mov
inc
ret
mov
push
push
mov
add
xchg
or
cmp
jge
aad
sub
xor
ljmp
and
jmp
and
cmp
adc
shlb
nop
clc
lahf
inc
push
cltd
ljmp
mov
imull
lods
dec
shlb
lock
leave
or
and
test
addb
or
ret
xor
fistpl
dec
xor
imul
and
data16
sub
ja
push
rcl
push
pop
lea
nop
mov
stc
jmp
subb
adc
clc
fadd
sub
nop
push
or
pop
testl
mov
arpl
push
push
inc
std
adc
mov
call
xor
xchg
jbe
test
pop
data16
les
push
cmc
or
add
inc
fsubrs
pop
loopne
jl
mov
inc
in
dec
push
iret
xor
pop
arpl
jb
cmp
rorl
jmp
aas
sar
cmp
js
lods
jns
and
lret
add
int
aam
pop
xchg
mov
stos
test
adc
and
shld
shl
shlb
shl
xchg
cwtl
hlt
or
inc
mov
or
lret
je
adc
inc
pop
or
fs
imul
lret
xchg
xchg
jle
and
je
decl
adc
push
mov
ret
mov
call
sbb
test
xor
xchg
inc
push
loope
repz
rorb
mov
cs
movsb
adc
ds
xor
pop
push
and
orl
jmp
rcll
mov
jmp
nop
xchg
add
int
lea
and
jl
test
in
mov
out
mulps
lea
xchg
flds
push
mov
sbb
adc
stc
loopne
or
lcall
sbb
fmull
dec
sbb
jmp
jp
cmpsl
pop
lahf
dec
das
cwtl
filds
lods
push
into
mov
push
mov
faddl
mov
int3
sbb
repz
and
fsub
cmp
fcoml
loope
clc
or
mov
fildl
jnp
sti
jge
pusha
pop
sbb
ljmp
repz
jae
dec
inc
cmp
jge
pusha
iret
sub
and
cmp
loopne
mov
mov
pop
adc
rcr
fstpl
outsl
nop
sub
mov
mov
xor
test
adc
daa
int3
jns
out
aam
in
outsl
add
out
pop
fsubp
outsl
hlt
stos
and
sbb
lds
cmp
or
add
mov
mov
mov
cmp
lea
dec
mov
popa
push
inc
test
and
dec
clc
jmp
xchg
dec
add
add
mov
jmp
dec
pop
shlb
xor
mov
cmovge
inc
adc
xchg
xchg
sub
add
jmp
shl
mov
pop
mov
int3
push
jae
mov
xor
fs
or
push
sub
adc
cmp
or
push
jmp
icebp
das
loop
cmc
jmp
negb
mov
mov
pop
pop
fsubrs
mov
xchg
adc
push
fsubl
and
rorb
fimuls
xor
stc
adc
test
dec
dec
push
push
push
daa
les
shlb
in
ret
clc
testb
repz
adcb
cmpsl
cmp
loop
mov
and
jge
add
mov
lret
xchg
mov
inc
sub
stc
push
test
push
mov
and
call
in
decl
andb
sub
pop
movsb
fildl
adc
cmp
leave
rcr
lea
in
sbb
subb
and
sub
add
mov
mov
rcll
push
cmp
sub
inc
inc
jmp
addb
inc
jno
adc
je
leave
or
mov
lock
stos
les
and
test
push
mov
mov
test
push
adc
je
dec
mov
je
push
out
sub
and
cmp
xchg
aaa
clc
rcrb
sub
push
test
inc
fs
push
rcl
adc
imulb
or
sbb
pop
test
je
mov
push
mov
dec
rcrb
cmp
mov
les
dec
push
or
aaa
insb
aam
or
roll
test
mov
push
pusha
and
mov
arpl
sbb
fildl
xor
and
sub
fs
adc
sbb
cmpsb
mov
shrl
and
inc
push
jne
addb
into
cmc
pop
or
dec
cmp
mov
or
repz
mov
mov
add
jo
cmpl
js
push
loopne
je
add
add
mov
enter
add
aaa
fmuls
divb
aas
adc
add
inc
mov
xor
out
pop
sbb
push
test
fcomi
or
ror
in
es
test
pop
sbb
push
pop
sbbl
ds
and
andb
aam
mov
fstcw
jns
adc
sarl
inc
arpl
or
shlb
or
push
mov
aam
or
fldcw
mov
mov
inc
and
idiv
push
shll
jo
cmpsb
push
arpl
pop
lea
je
subl
and
xchg
cmp
jecxz
add
add
add
jecxz
add
aam
mov
add
add
dec
mov
xor
pop
mov
pop
je
or
cmp
jne
or
xor
lds
into
push
adc
fcoms
mov
and
mov
test
pop
mov
sti
sub
push
scas
imul
ret
xchg
test
mov
lret
daa
and
ret
into
jne
loop
stos
fmuls
mov
or
lcall
out
or
inc
cwtl
hlt
dec
pop
cmp
cmp
adc
add
test
pop
push
subb
loop
rolb
xor
fcoml
jge
mov
inc
mov
push
fisttps
sub
bnd
sub
or
push
and
dec
cmp
roll
orl
fisttpll
ret
pop
sbb
loop
add
mov
cwtl
out
xor
xor
jo
mov
daa
adc
dec
pop
pop
add
adc
ss
or
dec
pushf
and
sub
pop
xchg
shrb
inc
mov
dec
out
sub
push
push
loop
sub
fidivs
mov
jmp
xorb
enter
inc
ss
xor
sub
fldenv
bound
mov
add
cmp
xchg
nop
test
push
push
xor
sbb
popf
pusha
jle
or
jge
pop
call
inc
xor
and
fstps
hlt
xorl
je
sub
not
adc
into
call
outsl
mov
int3
clc
mov
pop
es
fdiv
rorl
pop
mov
push
pop
add
pcmpeqb
inc
xchg
push
cwtl
mov
xorl
fmull
loopne
sub
and
cmpsb
jge
ja
dec
or
rorl
enter
dec
add
push
and
sub
sub
pop
loopne
add
incl
xor
and
inc
lods
aad
insb
push
mov
roll
or
aad
pop
adcb
mov
inc
mov
pushl
cmp
test
adc
adc
add
inc
add
dec
or
gs
xor
stc
jmp
cmp
jg
mov
lret
adc
fs
xlat
les
xchg
or
pop
test
pop
sbb
xchg
and
clc
cmp
jl
mov
mov
testl
inc
xlat
pop
mov
adc
mov
ss
fwait
add
cmpsb
and
adc
push
aaa
mov
or
or
jge
xchg
fcoml
js
sub
mov
sub
push
push
xchg
xor
push
pop
test
mov
test
or
add
sbb
jne
popa
pop
sub
jmp
sub
das
fcoms
add
dec
or
add
push
xor
xchg
jle
in
es
call
pop
adc
pop
mov
inc
jmp
sbb
add
jl
cmpb
jl
orl
ds
push
add
jmp
push
and
lcall
inc
jno
or
pusha
pop
lea
push
cmp
mov
movsl
movsl
movsw
pop
imul
jecxz
mov
rcrl
add
mov
add
mov
sbb
ficompl
cmc
add
invd
shlb
mov
andb
mov
add
lds
shll
or
fldl2e
mov
jne
adc
add
inc
lcall
jmp
or
or
mov
in
popa
cs
add
inc
or
leave
xor
enter
push
dec
loop
jb
mov
add
adc
leave
mov
shr
or
lea
mov
adc
or
aad
sub
dec
or
push
and
fidivl
movzbl
and
xor
mov
subl
roll
and
adc
mov
and
sbb
dec
xor
addr16
push
and
xchg
cs
inc
mov
je
push
out
or
mov
lea
push
call
popa
push
add
push
sbb
es
or
jne
imul
or
ja
insb
bt
imul
adc
mov
xchg
jne
sub
mov
add
mov
adc
leave
dec
or
gs
inc
test
jne
pop
xchg
cmp
je
jmp
mov
or
in
cmpsb
dec
gs
add
popw
xor
push
xor
das
testb
xchg
add
movb
xor
arpl
sub
push
outsb
sub
add
in
mov
arpl
add
and
add
int
loopne
inc
enter
pop
pop
dec
inc
add
loopne
xchg
inc
pminsw
testl
mov
leave
daa
je
cmpsb
xor
out
adc
add
jge
test
cs
push
mov
mov
push
sbb
xlat
sbbl
mov
mov
fs
int
xor
xchg
subb
cmp
sbb
iret
out
test
and
and
test
js
adc
mov
adc
iret
pop
jmp
test
mov
sub
jb
cmp
outsb
cmp
into
jae
out
and
pop
mov
jl
or
mov
pushl
and
scas
dec
pop
or
stc
inc
pushl
nop
mov
dec
add
inc
or
ja
iret
jmp
add
or
pop
inc
xor
mov
xor
add
add
xor
or
mov
xorb
xlat
mov
shr
shl
or
pop
pop
push
jnp
push
or
pop
sbbb
jmp
jecxz
mov
shl
ljmp
inc
fnstenv
mov
adc
xor
addb
mov
clc
sub
orb
push
push
repz
lock
fnstsw
lds
and
fmull
hlt
iret
cmp
xchg
push
cmp
stc
lods
push
popa
insb
sbb
sbb
aad
jno
cmp
adc
test
inc
sub
out
adc
loope
xor
cwtl
pop
lock
orl
or
jmp
mov
and
mov
jmp
sar
movsb
pop
data16
and
pop
sbb
testb
add
inc
fs
sbb
jno
loopne
shl
clc
sub
mov
and
je
ret
and
inc
jmp
lods
xchg
jo
pop
inc
rcrb
ja
sbb
lock
push
xor
jg
adc
jbe
loope
cmp
pushf
xor
sub
mov
push
inc
gs
add
mulb
xorb
lcall
jns
mov
sahf
lock
mov
xor
mov
sub
rol
je
inc
jle
and
adc
mov
inc
jnp
jg
mov
jle
push
push
fisubs
pop
shlb
cmpsb
int
sub
fs
mov
fistps
add
cmp
dec
es
sub
or
jmp
gs
mov
je
in
sbb
push
adc
xor
mov
xor
jmp
dec
fwait
inc
inc
loope
xchg
in
add
jne
cmp
jns
repz
sbb
scas
les
inc
mov
or
lcall
daa
test
test
lea
lret
mov
xor
nop
shll
test
add
test
mov
ret
cmp
enter
clc
xchg
int3
cmpb
or
adc
mov
inc
jmp
and
lcall
adc
je
mov
inc
imul
test
fmull
dec
pop
adc
mov
adc
loop
xchg
xchg
insb
scas
lods
dec
push
inc
sbb
sbb
shll
mov
gs
ret
mov
mov
ja,pt
dec
jl
xchg
mov
pop
cmp
sbb
movl
add
mov
hlt
dec
mov
mov
movsl
aaa
insl
adc
push
mov
push
inc
test
insl
ficoms
in
inc
adc
and
jge
pushf
jno
add
sbb
mov
and
sub
cmp
pop
and
and
loope
adc
sub
xor
mov
aad
add
inc
cmp
jmp
or
adc
mov
call
movl
mov
inc
bound
xchg
movsl
add
mov
mov
setl
or
push
mov
adc
or
and
out
iret
popa
mov
jecxz
sbb
lock
and
imul
cmp
iret
mov
mov
cmp
mov
or
jno
test
push
int3
jns
out
in
out
jmp
out
in
in
out
sti
out
aas
movsl
cld
push
push
shrb
subb
add
push
xchg
or
ds
sbb
inc
nop
inc
sbb
add
and
add
add
out
data16
sbb
data16
lds
jne
xor
test
inc
push
inc
mov
pop
inc
movsl
push
or
or
call
jne
push
test
sub
mov
push
cld
or
dec
les
loope
mov
mov
or
jmp
dec
out
or
mov
or
push
cli
imul
jns
add
lea
mov
repnz
sahf
push
inc
ds
sbb
or
adc
jge
aas
jb
inc
andl
sbb
out
sbb
xor
pop
das
pushf
adc
sub
or
and
daa
inc
or
or
pop
jne
sub
inc
jle
cli
push
rolb
adc
cs
sbb
jne
test
fiadds
insl
mov
lcall
cmp
sbb
and
xor
enter
push
movsl
mov
stos
mov
dec
mov
inc
sti
mov
xchg
add
cmp
add
and
push
fs
adc
lea
shll
ret
push
dec
jmp
rorb
inc
incw
sub
push
sub
ret
sub
mov
cmpsl
test
sbb
xor
fxch
stos
sub
add
rol
arpl
or
lea
xchg
xchg
push
ds
and
add
jne
sbb
or
addl
or
xor
and
pusha
test
lfs
ja
sub
and
in
jo
mov
fcompl
push
test
cli
xchg
clc
and
and
and
cmp
add
jae
jg
loopne
jbe
cli
std
mov
aas
ja
pop
repz
dec
sbb
push
repnz
aad
inc
arpl
repnz
call
xchg
enter
inc
push
push
cmp
cmp
shlb
mov
nop
sbb
scas
dec
idiv
mov
ret
mov
rorb
cmpsb
jle
sub
pop
or
pusha
adc
inc
into
jb
call
xchg
inc
mov
add
add
push
push
pushl
push
cmp
out
add
or
and
sub
inc
mov
fdivrs
addl
pop
jle
adc
out
or
lock
pop
sub
cmp
sub
sub
add
faddl
inc
add
sbb
mov
jbe
pop
xchg
xor
ja
movss
fdivl
test
cmp
jne
fsubrp
inc
mov
inc
jl
or
loop
loop
les
jge
xor
push
add
rolb
nop
dec
pop
push
data16
inc
loop
mov
sbb
mov
push
sbb
inc
fimuls
push
adc
cli
enter
adc
in
inc
adc
push
jmp
fistps
dec
pop
inc
lahf
loop
sub
add
xchg
and
push
mov
lcall
arpl
enter
and
cwtl
pop
dec
jae
adc
adcb
inc
push
push
add
inc
sub
cmp
je
lea
add
lea
cltd
int3
mov
notb
fcmovu
inc
mov
ret
or
and
cs
pop
shrb
dec
sbb
nop
dec
sub
pop
ja
inc
jb
and
pop
add
adc
sbbl
outsl
or
je
fdivs
xor
jmp
push
inc
pop
xor
pop
jbe
pop
inc
push
inc
pop
hlt
push
jae
mov
enter
ret
rcll
or
push
lods
mov
nop
mov
push
push
in
ret
add
push
fs
lret
mov
sbb
and
ror
int
lea
push
dec
jbe
int
jae
adc
add
xor
dec
jbe
test
xchg
inc
nop
mov
repnz
pop
pop
xchg
sbbl
mov
je
add
or
cmp
pop
adcb
js
jmp
fisubrl
mov
mov
movsb
out
mov
ja
push
in
mov
xor
mov
push
mov
adc
shl
inc
push
mov
mov
out
cltd
fisubs
sbb
or
push
and
test
shl
sbb
imul
movsb
dec
addr16
in
push
mov
mov
or
aam
decb
icebp
out
fdiv
scas
push
icebp
fidivs
push
pop
ret
dec
out
ret
mov
mov
push
hlt
es
insl
rorb
add
cmc
popa
push
es
mov
jmp
clc
push
jnp
and
es
pop
xorb
orl
fisubrl
sar
pop
mov
jmp
je
repnz
shlb
prefetch
or
jmp
and
nop
adc
xchg
fisttpl
xchg
or
push
jl
pop
inc
fisttpll
dec
pop
mov
enter
mov
and
and
dec
add
xchg
cmp
out
mov
jo
fsts
xchg
stos
addr16
lcall
pop
or
sbb
mov
aam
pop
xorb
test
aam
xchg
dec
fadds
lea
movsl
push
stos
subl
mov
mov
inc
inc
inc
pop
add
dec
jp
pop
push
fsubr
in
add
icebp
enter
je
fs
arpl
adc
xor
addr16
add
add
loopne
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
add
add
xor
fdivrl
jmp
rclb
mov
sub
mov
add
sbb
dec
jno
repz
test
add
add
sbb
in
insl
push
mov
hlt
movl
imul
std
in
leave
mov
add
or
add
insb
push
arpl
psubd
or
add
add
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
add
add
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
add
add
or
or
and
or
adc
stos
sbb
data16
inc
fdivl
add
add
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
test
and
test
xchg
sbb
add
add
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
add
add
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
add
sbb
ficoml
gs
aam
pop
popa
mov
into
xorb
cmp
mov
fisttps
xchg
add
adc
shll
jmp
outsb
xor
mov
add
add
jae
add
in
add
pop
dec
or
cmp
add
daa
adc
or
add
add
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
add
pop
cmp
mov
cmp
lods
insb
mov
mov
lcall
mov
cmp
ljmp
add
add
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
add
add
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
or
ss
sbb
push
imul
aam
loopne
add
add
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
add
add
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
cwtl
leave
add
scas
testb
pusha
jp
out
pusha
fists
add
add
test
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
add
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
rolb
add
add
sbb
ret
es
pushf
mov
insl
add
ss
add
add
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
add
in
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
add
adc
mul
ja
outsl
ja
mov
out
jo
ud0
cmp
and
add
pop
or
adc
sahf
gs
clc
sar
imul
add
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ja
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
add
add
jmp
repnz
lret
mov
cmpsb
mov
sarb
sub
push
add
add
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
or
aas
ljmp
movsl
or
outsl
fwait
test
cmp
add
mov
adc
add
add
add
sahf
je
add
add
and
cmp
pop
or
aaa
xor
mov
lahf
add
jb
add
jo
js
xchg
or
push
dec
arpl
add
add
jne
insb
lret
daa
sub
outsb
jne
insb
mov
add
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
dec
movsb
dec
push
push
inc
push
push
add
aas
sarb
inc
add
popl
push
jb
arpl
cmp
add
jae
jb
gs
je
jb
pusha
and
outsb
je
inc
push
dec
add
mov
add
xor
loope
cmp
in
icebp
cmp
adc
jo
jb
imul
shrl
jb
push
sti
ret
push
push
or
adcb
inc
add
add
push
xor
cmp
adc
insb
movsb
or
dec
je
outsb
imul
push
jo
or
cmp
outsb
outsl
je
pop
add
jne
push
arpl
pop
repnz
insb
imul
jecxz
ss
fs
call
jbe
lock
lea
pop
xor
and
filds
add
inc
pop
pop
gs
mov
cmp
cli
xchg
les
xor
outsl
jo
mov
icebp
lds
repz
out
arpl
xchg
iret
pop
cmp
es
fs
mov
jg
aaa
insl
lock
pusha
daa
je
popa
fs
sbb
arpl
jae
and
cs
int
popa
ret
test
sbbl
or
add
jb
insl
insl
ret
divb
cmp
jmp
pop
inc
mov
mov
add
jne
fistpll
adc
popa
mov
rorl
je
cld
dec
cwtl
fs
repnz
test
push
imul
sub
and
imul
jns
addr16
pop
mov
test
push
addb
cmp
loopne,pn
lret
cmp
mov
cmp
or
das
ret
js
call
fiaddl
gs
popa
into
sub
push
clc
sub
add
icebp
jae
fs
dec
in
pop
fsubl
js
pop
or
xor
push
dec
inc
sub
sbbl
add
pop
jbe
inc
push
mov
sti
mov
pop
push
push
lahf
add
sbb
sbb
std
add
pop
pop
js
gs
dec
add
add
xlat
adc
sub
repz
dec
pop
insb
test
cmp
repz
lods
aam
cld
out
push
or
sahf
out
sahf
push
data16
stos
cmp
out
add
adc
cmp
repz
pop
push
repz
jbe
mov
repz
lock
adc
and
out
cmp
jl
out
sahf
out
mov
shr
xor
sahf
out
cmp
pop
jo
out
sahf
jle
stos
mov
jns
out
adc
push
ss
repz
pop
insb
xchg
mov
sahf
out
sbb
adc
sbb
jns
out
push
pop
outsb
jle
stos
jecxz
sahf
out
fdivp
adc
and
repz
xor
pop
jo
add
cmp
xchg
dec
add
pop
mov
and
shll
inc
gs
mov
push
inc
mov
jne
ret
inc
mov
jne
jmp
jnp
inc
add
leave
mov
jmp
cmpb
pusha
sbb
loop
outsb
shll
aad
or
inc
push
imul
and
outsb
sbb
dec
push
stc
in
sub
loopne
jo
push
mov
adc
mov
lret
xchg
popa
mov
insb
xchg
daa
dec
popa
lahf
mov
add
sub
lods
sbb
sbb
mov
je
in
imul
fisubrl
push
add
push
jns
insl
inc
mov
clc
and
inc
adc
add
and
inc
inc
jns
hlt
add
popa
into
sub
add
add
ja
cmp
push
imul
add
jns
adc
les
xchg
gs
insb
mov
es
jno
inc
push
inc
scas
mov
push
jg
std
mov
xor
lds
inc
and
push
imul
dec
mov
outsb
iret
or
int3
es
jae
out
add
inc
xchg
stos
push
mov
inc
loop
push
imul
insb
inc
fs
pop
adc
ja
dec
cmp
pop
adc
push
push
inc
insb
push
stc
bound
add
xchg
imul
push
idivb
xor
add
imul
sbb
cmp
imul
lret
cltd
test
jae
test
jl
dec
push
cmp
shrl
dec
inc
xor
dec
pop
je
je
inc
roll
arpl
je
sbb
pop
bound
cmp
inc
ljmp
into
mov
inc
add
dec
fcoml
add
add
gs
or
pop
jo
int3
pop
add
dec
pop
lods
fxch
cmp
ss
fs
fnstenv
push
pop
cltd
mov
aam
loopne
push
iret
icebp
push
je
insb
out
and
out
push
jo
imul
mov
and
xor
out
cmpsb
pop
lahf
jb
adc
ss
jns
add
fsubl
jne
and
pop
push
mov
imul
mov
xchg
jl
mov
sti
cmp
insb
mov
cltd
imul
jnp
bound
xchg
sbb
in
daa
cmpl
roll
into
mov
std
outsl
jbe
loop
push
lods
shl
xchg
push
lea
mov
inc
lcall
jns
mulb
or
js
add
add
cwtl
addr16
insb
xchg
mov
xor
leave
dec
gs
push
fildl
jae
pop
loope
jo
scas
call
inc
jb
ljmp
mov
das
into
xchg
int3
hlt
outsb
scas
test
inc
jbe
nop
mov
cmp
jne
mov
xchg
adc
icebp
xor
scas
ss
inc
mov
int
and
push
jecxz
mov
or
add
push
pop
js
push
mov
dec
inc
dec
cli
fst
push
leave
or
sub
inc
imul
inc
jge
xor
in
int
arpl
fbstp
cmc
enter
mov
cmp
lret
shrl
dec
enter
fsubs
imulb
insb
rcrl
out
xor
pop
mov
incb
dec
xchg
dec
mov
sbb
mov
jp
mov
mov
rcrb
flds
lret
jmp
mov
mov
fdivs
mov
cltd
js
inc
jne
data16
mov
mov
pop
fldcw
icebp
xchg
adc
insb
int3
mov
xlat
inc
ljmp
das
add
loope
and
push
inc
clc
pop
cmp
push
mov
add
mov
mov
add
out
cmp
ret
mov
mov
ficompl
loopne
jae
push
pop
aam
add
mov
fisubl
xor
jb
xor
test
fcomi
xchg
cmp
xchg
push
xchg
divb
cmc
pop
jae
clc
xor
mov
add
leave
xor
pop
ljmp
pop
outsl
jno
dec
push
push
push
dec
loop
jp
add
pop
bound
mov
into
movsl
rorl
mov
dec
sbb
mov
out
insl
jns
outsl
cmc
cmp
push
jns
icebp
fistps
push
aaa
or
nop
outsl
fnstenv
je
lods
fs
jle
cmp
push
lods
add
jo
push
dec
push
inc
xchg
lods
cmc
add
sbb
arpl
or
insb
pushf
sub
push
inc
mull
scas
add
inc
rorb
jne
mov
and
sub
jne
pop
leave
xor
sahf
jo
xchg
add
aaa
push
xchg
frstor
shrl
xchg
and
and
cmp
and
es
subb
daa
sub
push
inc
inc
dec
pop
lea
xchg
pop
ret
imul
push
adc
push
in
outsb
popa
out
inc
rcll
or
and
cmp
ret
dec
push
inc
cmp
inc
insb
inc
popa
fs
ljmp
shr
sub
jb
loope
lock
cmp
fbld
push
jle
and
iret
or
xchg
cmp
mov
sbb
mov
xlat
jp
popf
out
sbb
sbb
xchg
pop
push
je
sbb
pushf
and
daa
outsl
push
and
push
shrl
lods
jnp
outsb
mov
mov
xchg
into
dec
xor
mov
cli
or
xlat
xor
cs
mov
mov
insl
push
data16
inc
mov
repnz
sub
adc
adcb
mov
mov
push
ja
dec
dec
adc
dec
push
das
pop
jecxz
std
add
pushf
test
mov
push
outsb
and
insl
or
popa
popa
dec
bound
and
test
mov
pop
hlt
sub
inc
push
in
dec
mov
imul
push
decl
adc
cld
sub
cmpsb
repz
sbb
test
mov
mov
sub
hlt
add
out
cmpsb
syscall
mov
sub
mov
jmp
out
das
xor
sbb
push
mov
inc
loopne
je
das
pop
sub
addr16
jae
xor
in
jne
add
inc
dec
push
push
dec
inc
pop
add
jne
fs
hlt
sbb
ret
fadd
jl
out
pop
sbbb
jl
iret
iret
aas
iret
pop
inc
and
xchg
icebp
lock
cmp
cmp
cmpsb
out
out
xchg
push
mov
sbb
adc
or
sbb
cmp
aaa
mov
xlat
loop
mov
stc
stc
out
xor
call
sarb
aas
pop
ss
test
icebp
iret
iret
cmp
enter
iret
aas
aas
pop
dec
adc
icebp
iret
add
sbb
loope
lock
xor
cmp
xor
cld
loope
xor
out
cmp
aam
int3
lods
clc
ret
xchg
xor
pop
clc
mov
xor
pop
pushf
push
stc
sbb
das
fsubrl
stc
stc
out
mov
sbb
decb
cmp
jg
shrb
enter
cld
imul
dec
and
or
xchg
icebp
in
sub
mov
pushf
test
pop
popa
jns
add
sub
popa
jno
int3
sub
lods
jle
mov
pushf
xchg
push
pusha
xor
in
add
gs
cmp
ja
pop
add
addr16
shl
or
dec
xor
dec
xchg
ret
sub
push
outsb
inc
adc
xor
aam
jge
xor
push
cli
fnstcw
xor
shrb
outsb
arpl
fisttpl
cmp
jmp
push
mov
or
je
pop
call
dec
xor
mov
push
dec
xchg
or
imul
mov
push
gs
jo
bound
leave
jp
adc
and
pop
xor
loope
mov
sub
xchg
test
aam
and
mov
insb
dec
outsb
out
icebp
pop
insb
insb
or
xor
in
adc
dec
mov
jb
rorl
fisubs
xor
ror
scas
in
push
sub
mov
pop
cs
mov
add
dec
jne
jb
divb
push
xchg
cs
or
fs
imull
sub
int
push
outsl
loopne
popf
outsl
pop
insb
sbb
sbb
imul
jb
inc
pop
dec
xor
pop
sti
in
stc
xchg
adc
push
and
wbinvd
jp
arpl
push
popa
cli
or
call
dec
xor
adc
push
push
and
push
insl
and
mov
xlat
lods
inc
inc
push
inc
dec
push
dec
xchg
dec
inc
dec
inc
popa
push
push
cwtl
call
adc
xor
xor
inc
repnz
sbb
arpl
and
imul
mov
jb
jo
test
pop
addr16
icebp
jge
xor
jmp
scas
ss
dec
mov
fistps
xor
lahf
add
pop
inc
dec
inc
inc
mov
jnp
inc
inc
cmpsl
xorb
cmp
xor
cmp
das
and
push
inc
sub
insb
pusha
mov
xlat
rcrl
es
inc
inc
dec
inc
push
pop
pop
orb
jp
stos
movsb
negl
jne
test
cwtl
cmp
cs
mov
dec
repz
add
repz
jne
jae
imul
mov
stc
dec
mov
lret
outsb
fadds
pop
imul
pushf
bound
add
pop
pop
outsb
outsb
pop
lahf
inc
aad
dec
inc
jb
add
xchg
aam
popf
xor
lods
loopne
xchg
pop
jne
pop
push
imul
xlat
ss
stos
add
push
jle
xchg
xor
jne
dec
push
into
call
lods
xor
cmp
sub
xor
pop
mov
daa
jg
sub
lods
test
cmp
inc
imul
jb
bound
arpl
adc
out
aad
mov
inc
inc
sbb
data16
cs
je
sub
scas
cli
pop
fisubl
xor
lock
sub
mov
push
push
lret
fnsave
inc
es
cmc
mov
dec
and
les
in
test
xchg
iret
mov
rcrb
jp
lods
dec
out
int3
fs
lret
inc
imul
lock
dec
inc
dec
xchg
les
into
cmp
jmp
sbb
gs
mov
sbb
jns
jmp
adc
mov
xor
xor
add
lea
test
pop
mov
insb
lcall
push
push
adc
xor
sub
mov
mov
jno
dec
fcmovne
push
mov
pop
pop
xchg
inc
xchg
lds
pushf
xchg
mov
data16
testl
sbb
sbb
sub
repz
rclb
xor
mov
xor
hlt
dec
gs
in
and
cmp
imul
lcall
ja
xor
cs
cmp
jns
jl
mov
jbe
pop
mov
dec
outsl
push
outsl
outsl
inc
inc
fisubrs
out
add
dec
sub
lretw
addr16
push
popa
pop
mov
jne
inc
lret
and
das
mov
mov
inc
leave
xor
sub
rclb
mov
mov
pop
nop
int3
and
lods
jno
enter
mov
sub
imul
sbbb
ret
dec
inc
and
leave
popa
cmp
mov
shr
or
adc
cmc
sub
inc
or
or
adc
xor
mov
xorb
loop
jmp
call
jo
cwtl
cltd
cltd
ret
and
push
add
adc
adc
xchg
adc
ljmp
out
xchg
add
adc
lea
adc
push
in
add
pop
add
popf
fdivrl
adc
mov
lcall
push
call
filds
pop
js
fimull
add
sbb
adc
lcall
sub
xchg
lret
iret
data16
gs
pusha
jns
or
popf
lock
push
mov
repz
repz
imul
and
pop
adc
popf
repz
lret
lret
loop
popa
enter
sbb
adc
inc
rolb
mov
adc
fbld
mov
add
jo
adc
mov
iret
lret
xor
pop
fisubs
adc
inc
stc
jge
jno
pusha
add
pop
in
pusha
enter
adc
shlb
ja
jno
addr16
in
leave
jmp
cli
fdivr
roll
cld
ljmp
cltd
add
fsub
lock
add
cltd
aad
clc
std
aad
sti
jmp
jmp
out
ljmp
aaa
stos
cltd
fmul
repnz
adc
pop
mov
ljmp
stos
and
in
cltd
dec
dec
dec
dec
push
dec
inc
cli
push
pop
add
adc
dec
das
add
ret
bound
jne
cmp
xor
pop
sahf
ja
jae
mov
jno
lahf
sub
cmpsl
cli
cmp
mov
jnp
jno
aad
jae
or
xlat
or
cmp
xor
cmc
mov
lcall
add
jns
jbe
clc
popf
fbstp
es
cmpsb
orb
lret
jae
in
mov
mov
and
sub
pushl
mov
or
mov
push
in
sbb
sub
or
xor
aaa
xor
xor
cs
xlat
mov
aas
xor
sbb
popa
jp
jo
push
mov
xor
shrl
sahf
dec
xchg
mov
andb
push
dec
ret
ja
daa
inc
inc
inc
es
mov
aam
dec
pushf
and
cld
jl
leave
subl
pop
outsl
pop
das
jb
outsl
inc
jecxz
push
mov
jo
push
dec
sbb
push
cmp
les
or
test
inc
cltd
gs
sbb
fldenv
add
bound
adc
mov
imul
jmp
inc
jne
mov
dec
inc
mov
shlb
outsb
push
and
mov
js
int3
andb
out
repnz
bound
mov
les
mov
push
scas
loop
cmpsb
jle
cli
in
imul
data16
test
data16
pusha
rorl
and
bound
daa
xchg
int
pop
gs
imulb
add
add
shl
sub
jg
push
pop
sub
vmovlps
mov
lea
pop
mov
lahf
call
add
pusha
or
dec
pop
in
mov
add
add
pop
std
int3
inc
fs
mov
fstpl
mov
scas
je
xchg
shlb
or
jae
jl
adc
inc
lret
adcb
adc
outsb
jb
and
orb
inc
out
pop
aam
lock
mov
add
mov
inc
add
lcall
pushf
push
xlat
xor
sub
adc
cmp
adc
enter
test
fcomps
add
sub
pop
clc
jecxz
xchg
mov
jg
mov
movsb
mov
stos
cmp
popa
shll
nop
inc
xchg
xor
repz
and
mov
and
mov
ret
mov
dec
data16
jns
cmp
add
or
js
or
fcmovnu
out
fadd
jl
add
adc
xor
jp
jne
pop
xchg
sub
pusha
stc
inc
fldl
cmp
xor
add
push
jmp
mov
jp
add
jge
popa
out
fwait
outsb
fcomp
or
and
or
dec
shr
pop
dec
iret
push
or
daa
xor
or
xor
les
rorb
sub
and
pop
mov
inc
test
push
xor
sarl
out
inc
add
jbe
xchg
sub
sub
in
add
mov
dec
pop
mov
mov
xchg
sbb
shll
jg
xlat
add
cltd
popa
rcrl
mov
imul
pushf
push
pop
aad
xchg
add
adc
pop
jo
gs
lds
stos
jo
and
bnd
pop
xor
inc
cmpl
js
push
add
jb
out
add
dec
mov
incl
in
pop
cmc
xchg
mov
and
sub
xor
mov
repz
add
cmp
dec
adc
jl
mov
add
mov
inc
ja
lret
cld
ja
inc
inc
outsl
inc
mov
nop
push
cltd
outsl
imul
das
inc
push
lock
adc
arpl
outsl
jae
mov
add
enter
inc
and
dec
dec
inc
shlb
adc
push
push
dec
sub
repz
dec
and
or
call
xchg
push
push
data16
xor
jne
daa
jg
jmp
pop
dec
dec
ja
sbb
xor
mov
es
mov
notl
xor
int
movsl
inc
xchg
mov
leave
jg
in
and
outsb
repnz
iret
inc
push
inc
popa
cmp
in
and
faddl
xlat
jae
jb
leave
imul
movsl
cmp
cmp
jns
mov
fs
sti
aam
cmp
cld
cmp
in
movsl
inc
or
jno
dec
push
inc
imul
mov
sub
scas
add
and
ret
mov
cmp
inc
dec
add
addr16
cltd
pop
insl
cltd
adc
mov
jne
dec
and
sub
mov
xchg
fisubrl
xchg
dec
jge
popf
cs
aad
je
cmp
fstps
lret
adc
mov
pop
inc
scas
xor
inc
dec
inc
adc
mov
inc
and
jo
lret
in
shlb
jno
sbb
test
xchg
pop
sub
mov
push
inc
push
push
sbb
popa
xor
inc
gs
inc
bound
out
dec
inc
bound
loopne
cli
inc
sub
sub
inc
add
xchg
xor
out
and
adcb
aam
out
mov
pop
xchg
or
mov
repnz
sub
icebp
aas
mov
and
stos
aam
and
inc
xchg
test
xchg
jecxz
inc
add
push
xchg
shrb
das
sub
and
or
add
popa
dec
cmp
dec
pushf
mov
inc
jne
inc
cmc
leave
jb
fimuls
mov
or
jecxz
inc
xor
sbb
cmp
sub
push
dec
cli
mov
clc
inc
mull
ljmp
cs
cli
loop
cs
je
push
insb
aam
dec
shll
push
inc
dec
dec
cs
mov
iret
sbb
dec
push
pop
bound
jo
outsl
aad
mov
sub
rorb
push
dec
push
inc
loop
jns
inc
push
push
push
lods
adc
orb
imull
loopne
jae
das
inc
cld
addr16
incb
shlb
mov
fcoml
jge
adc
pop
xchg
sti
pop
out
pop
ret
add
xchg
jno
add
lret
adc
or
adc
aaa
rol
stos
jns
imul
popf
push
shr
dec
repz
sub
ds
dec
in
hlt
push
sbb
or
das
xor
inc
inc
push
add
xor
xor
test
and
insl
jns
fldenv
and
popf
and
pop
sub
test
fisubrs
sub
cmp
pop
pop
jb
mov
sub
sub
popa
daa
inc
sub
addr16
xor
pusha
push
sub
mov
mov
inc
or
add
and
insb
pop
add
lea
sbb
lods
fisttpl
and
ja
push
cmp
cmp
xor
rol
and
jns
push
inc
cmp
popa
jo
loop
das
outsl
dec
sub
xor
insl
mov
add
das
push
pop
pop
call
mov
test
push
mov
sahf
movsl
dec
movsb
jle
jp
adc
ret
out
imul
push
push
add
inc
and
dec
push
dec
cmp
pop
test
ds
cmp
jno
pop
imul
inc
inc
outsl
sbb
pop
push
loopne
orb
push
push
dec
push
daa
xchg
data16
cmp
imul
jecxz
inc
jae
sub
jne
sub
stos
loope
sub
bound
test
inc
push
dec
cmpsl
xlat
test
cwtl
fsubs
inc
jns
dec
ja
sbb
dec
inc
jb
mov
lahf
pop
imul
adc
inc
rcrb
xor
jae
sub
das
fstpt
outsb
xchg
in
out
imul
jg
xor
sti
daa
jae
jbe
imul
cmp
jge
shrl
add
test
inc
and
lods
call
int3
add
aam
jge
push
enter
xor
or
mov
mov
add
xchg
dec
fsubs
xor
imul
insb
ljmp
popa
iret
sbb
jns
cmpsb
bound
arpl
mov
push
outsl
push
xor
xchg
xchg
mov
sbb
test
sahf
push
xor
dec
mov
xchg
mov
jbe
shll
mov
xor
jno
daa
sbb
popa
jge
inc
inc
dec
push
pop
cmp
lahf
cmp
daa
lahf
xchg
push
dec
shll
xor
mov
gs
and
out
or
test
pop
dec
inc
dec
push
je
hlt
adc
or
jo
jae
sub
push
sub
out
dec
sub
push
dec
ljmp
push
mov
mov
lret
jns
inc
lods
push
es
dec
inc
sub
sbb
pop
jmp
rcr
ja
adc
cmp
sub
js
sub
jnp
dec
sbb
and
or
mov
and
nop
push
lahf
jns
mov
pop
and
xor
inc
mov
and
arpl
lods
sub
sbb
cs
repz
leave
aaa
xchg
test
bound
gs
lea
loopne
inc
push
inc
pop
movb
pop
sub
jae
pop
sub
xor
add
xor
sub
jae
inc
cmp
xor
je
int3
xor
test
pop
int3
inc
cmp
test
bound
pop
addr16
sub
cmp
jbe
and
out
add
int3
outsb
jns
pop
shll
mov
addr16
xor
xor
scas
sub
rcl
xor
jae
add
add
shll
mov
and
mov
xor
mov
mov
mov
iret
mov
cmp
filds
mov
xor
mov
into
sub
icebp
jns
sub
cld
push
sub
pop
xor
adcb
xor
mov
into
xchg
repz
dec
cmp
and
sub
popf
sub
add
mov
push
pop
jns
lret
imul
add
lcall
cmpsl
sub
add
popf
sub
jg
int3
pushf
mov
fstpt
fnstsw
pop
jge
popa
fmull
in
push
jae
xchg
ret
mov
xor
cmp
dec
add
push
shll
inc
dec
mov
add
xchg
ret
push
dec
pop
push
xor
push
dec
mov
sbb
daa
push
xchg
inc
sbb
inc
lea
pop
cmp
inc
dec
mov
push
xchg
inc
push
jbe
pop
sbb
mov
pushf
mov
push
outsb
int3
jb
je
dec
insl
iret
mov
sub
iret
mov
loope,pt
iret
mov
faddl
add
jo
add
icebp
test
pop
inc
fbld
gs
pop
lret
and
pop
xor
cmp
out
jae
add
mov
add
lret
mov
outsl
dec
dec
pop
cwtl
pop
pop
ret
pop
push
push
int3
lea
add
arpl
inc
pop
add
push
inc
push
sub
dec
xchg
mov
dec
sbb
xor
mov
push
popa
mov
dec
cli
push
mov
jno
add
pop
rolb
pop
fisubl
add
arpl
into
lret
add
inc
dec
pop
insl
in
and
xor
mov
ss
dec
dec
pop
ret
insb
mov
cmp
sub
sub
imul
push
inc
sbb
fnstsw
test
push
xor
sbb
arpl
btc
cmpsb
jb
jo
sbb
inc
cltd
cbtw
cmpsl
push
aaa
aam
sti
cmp
push
out
clc
pop
je
cmp
out
mov
outsb
cs
inc
pop
ret
or
fs
and
pop
repz
and
int3
mov
jle
ds
xor
insb
or
mov
push
fs
jl
cmc
xor
mov
and
cs
loope
sbb
jo
mov
pop
arpl
pop
and
inc
mov
inc
fiaddl
in
popa
jbe
repz
insl
in
pop
les
jl
je
inc
roll
daa
push
je
mov
arpl
nop
mov
loopne
xor
mov
xor
outsb
test
dec
iret
cmpb
push
jae
movsl
jnp
push
loope
or
push
inc
pushf
xchg
in
xchg
insb
popf
sub
ja
je
cmp
xlat
insl
jo
lods
cltd
and
dec
adc
push
pop
jo
mov
nopl
imul
imul
push
cwtl
int3
adc
outsl
insb
dec
pop
inc
pushf
xlat
lods
mov
mov
in
lret
iret
adc
dec
adc
jne
dec
push
insl
fidivl
xlat
leave
xchg
imul
xchg
stc
pop
into
shrw
push
mov
je
pop
dec
outsl
bound
lss
jmp
mov
jp
std
or
arpl
mov
es
outsl
mov
sahf
and
mov
dec
or
outsl
jp
popa
das
xor
rclb
pop
sub
sub
pop
dec
jnp
fsts
cmp
xchg
mov
sti
add
push
jb
inc
pop
mov
fcmovnbe
int
cmp
dec
mov
sbb
cmp
and
cld
inc
in
inc
cli
or
js
and
jle
mov
and
stos
pop
loopne
pop
add
daa
and
pushf
push
xchg
mov
jae
pop
push
cmc
lods
push
mov
pop
fcoml
imul
push
sbb
in
pop
lods
push
dec
je
jae
push
stc
jle
je
fcomi
ret
jns
push
sbb
pop
imul
mov
sti
mov
imull
inc
xorb
dec
sub
or
dec
repnz
pop
sahf
ljmp
push
inc
cltd
inc
mov
arpl
iret
std
sbb
pop
xchg
dec
inc
lret
cmpsl
cltd
hlt
decb
popf
mov
imul
inc
iret
pop
sub
inc
insb
inc
xchg
sbb
push
inc
jmp
nop
scas
xchg
mov
out
in
cmp
dec
dec
daa
pop
stos
pop
test
rcll
inc
dec
sbb
or
fs
jmp
nop
xlat
xchg
mov
push
testb
inc
add
stos
mov
push
jae
sub
push
inc
fwait
sbb
outsl
frstor
mov
mov
andl
inc
dec
jno
sbb
mov
outsl
pop
and
testb
pop
sarb
addr16
dec
jl
inc
lahf
adc
jo
mov
dec
push
test
lret
sbb
jnp
push
cmp
fisttpl
lods
or
out
pushf
mov
imul
sub
push
loopne
inc
outsl
cmpsb
inc
push
mov
push
dec
jmp
outsl
int
jge
dec
pop
into
call
mov
pushf
orb
xorb
incb
xchg
inc
popa
mov
dec
cmp
gs
ror
xchg
jb
and
das
ret
xchg
sub
insl
or
xchg
lcall
nop
jge
sahf
pop
sub
sub
ficompl
mov
pop
push
xor
sahf
sbb
pusha
push
add
xchg
mov
mov
in
pop
xchg
mov
mov
loope
cwtl
stc
aad
dec
mov
rclb
das
sti
xadd
jbe
popf
xchg
call
sahf
sti
cmp
add
dec
shlb
push
out
sbb
xor
cs
call
in
ret
jbe
ret
jb
jae
push
in
dec
sub
dec
mov
ja
push
mov
es
push
mov
repnz
adc
mov
mov
mov
dec
stos
stc
fidivrs
and
das
insl
dec
push
mov
dec
fldenv
test
dec
lret
enter
adc
clc
adc
cmp
jae
and
inc
lea
arpl
cwtl
add
inc
jl
adc
enter
sub
imul
outsl
js
push
dec
jae
xchg
mov
mov
addr16
jbe
in
into
sub
movsb
and
xchg
push
or
inc
pop
inc
inc
and
aaa
cs
adc
xchg
push
and
push
stos
divl
es
push
repz
adc
cmp
xlat
jge
ss
sub
dec
push
add
push
dec
inc
cmp
lret
push
mov
daa
dec
in
insl
jle
shll
or
cmp
mov
jae
push
mov
repz
mov
movsb
iret
repz
pushf
xchg
add
add
add
jp
mov
sub
stc
and
fs
jae
push
shlb
add
in
sbb
lea
gs
arpl
bound
mov
fs
fistl
out
popa
sub
sbb
sub
or
lahf
dec
add
dec
lret
cmp
std
in
fcompl
outsb
lret
insb
push
test
xchg
lds
jb
mov
mov
push
es
arpl
xor
movsl
jge,pn
mov
push
adc
loope
mov
jns
pop
in
inc
xchg
pop
shll
adc
ds
xchg
mov
lea
frstor
popf
enter
lret
scas
cs
pop
scas
popa
insl
shlb
imul
dec
push
fs
dec
mov
in
arpl
mov
icebp
pop
fidivs
and
fimull
push
fwait
popa
xorb
xorl
push
mov
jae
stos
pop
sub
push
jo
out
popf
shll
nop
cld
xchg
push
outsl
jns
push
popa
jo
mov
inc
cwtl
pop
ficoml
vcmpordss
lret
jg
and
fnstsw
inc
add
pop
in
es
mov
push
clc
pop
sub
inc
mov
ds
into
sub
in
repnz
jns
hlt
insl
in
filds
sahf
push
sub
insb
jae
mov
sub
inc
push
mov
and
dec
mov
or
dec
arpl
sbb
das
fs
xchg
dec
stos
mov
xchg
cmp
inc
mov
cmp
aas
mov
cmpsb
fidivrs
sub
jb
pop
dec
add
lret
jns
mov
lods
fidivrl
pop
mov
dec
sahf
pop
inc
mov
cmp
ljmp
push
and
in
bound
sti
shll
add
jb
sbb
lcall
ds
push
xlat
popf
push
aam
jp
mov
rol
and
xchg
xor
iret
push
cld
insb
dec
int3
jb
mov
test
add
outsl
sbb
fisttps
xchg
jmp
push
jp
mov
sub
xchg
pop
lods
ss
xchg
mov
pop
gs
xor
pop
mov
bswap
popf
xchg
xchg
shrb
mov
jo
inc
mov
cltd
lret
add
and
jge
fidivrs
jbe
shrl
xchg
dec
lods
out
mov
cli
test
sub
mov
push
jbe
sti
push
push
or
jp
mov
popa
js
sbb
les
call
daa
imul
cmpsb
test
jae
pop
pusha
fs
jg
lods
sub
test
push
dec
add
aas
mov
mov
cs
cmc
fdiv
outsb
icebp
inc
sub
movsb
dec
fisubrs
cltd
inc
cltd
out
sub
add
jae
xchg
sbb
mov
push
dec
inc
ret
mov
inc
jne
imul
fmull
mov
repz
mov
nop
ss
cmpsb
pop
movsl
xchg
mov
aaa
xchg
push
adc
in
adc
dec
pop
int3
mov
int
dec
imull
jnp
mov
dec
mov
es
adc
lcall
pushf
sub
push
popf
fidivl
std
sub
dec
sub
clc
sbb
pop
lds
xchg
mov
dec
in
in
push
scas
mov
mov
ljmp
hlt
push
xchg
pop
dec
mov
xchg
mov
outsb
inc
sub
xchg
xor
mov
mov
mov
outsl
movsl
faddl
or
sbb
cs
mov
enter
mov
cmp
dec
outsl
ljmp
jns
ss
mov
dec
mov
daa
lock
cmpsb
sub
push
mov
nop
addb
push
xor
into
imul
pop
sahf
mov
sub
clc
fcomp
and
rcl
inc
mov
in
jg
push
iret
popf
and
inc
insb
das
imul
push
stos
add
pop
ret
sti
test
xchg
push
pop
iret
push
out
ss
sti
imul
pop
stc
cmpsb
sbb
int3
fidivrs
adc
cmp
xchg
outsb
fisttpll
sarl
inc
mov
jno
fisubl
sbb
sub
mov
arpl
sub
add
nop
shlb
ja
or
ret
xor
jb
and
and
je
pop
imul
iret
inc
aas
sub
pop
pop
sbb
lret
add
scas
ja
or
mov
sub
pop
lcall
imul
inc
cmp
xor
pushf
pusha
jmp
push
mov
push
in
icebp
daa
fldenv
push
cmp
add
pop
inc
dec
push
push
dec
std
lea
dec
lods
and
push
out
mov
fwait
mov
jl
add
push
and
mov
fucomi
add
je
int3
sub
mov
addr16
xor
lods
mov
lods
push
inc
cs
inc
inc
repz
loope
cmp
sub
mov
push
inc
push
js
push
clc
inc
inc
pop
in
ds
xor
pop
jl
xor
xor
xor
or
lods
lods
jbe
jb
xor
out
mov
pop
stos
or
jg
inc
push
inc
je
and
mov
in
imul
or
xor
cmp
imul
sub
push
cmpb
xor
inc
mov
popf
cmp
and
jae
inc
cmc
jl
xor
sbb
arpl
nop
mov
xchg
jae,pt
lret
testb
dec
cltd
pusha
xchg
pop
push
inc
push
outsl
adc
xchg
add
bound
andb
and
mov
sub
cli
cmp
sbb
sbb
xlat
test
pop
cwtl
mov
iret
jae
nop
mov
cs
add
imul
repz
repz
repz
sub
cmp
aas
repz
or
cmp
xchg
jne
popf
fbstp
and
popf
inc
and
popf
fistps
popf
popf
sub
stc
das
pop
cmp
aas
daa
popf
popf
pusha
jle
push
mov
stc
cs
xor
add
mov
repz
mov
sub
mov
das
repz
mov
pusha
xor
or
jne
xchg
xchg
popf
and
cs
inc
les
xchg
lret
out
ja,pn
divl
ja
out
and
cmp
hlt
cmp
icebp
popf
and
and
call
dec
mov
push
mov
dec
dec
inc
dec
mov
fldl
add
xchg
mov
das
lds
es
fsubrl
push
push
dec
aad
cmp
or
jns
scas
lods
or
imul
jnp
dec
add
jnp
cs
jnp
cs
dec
dec
nop
outsl
mov
dec
outsl
imul
popf
jno
jg
lea
and
inc
add
xor
pop
xlat
inc
add
call
add
push
cmp
arpl
jne
mov
inc
cld
dec
inc
adc
add
jb
cmp
adc
scas
and
dec
push
cli
fiadds
sbb
out
test
ret
es
push
add
sub
xchg
push
sbb
inc
push
jb
inc
and
nop
xor
ss
add
and
imul
std
aaa
aam
nop
cmp
mov
fs
add
movsb
test
mov
pop
mov
adc
popa
lods
mov
push
jae
mov
sub
int
jl,pn
sbbb
sub
popa
fcoms
jnp
out
js
add
pop
sbb
out
mov
jae
dec
movsb
testb
inc
dec
je
repnz
pop
dec
jae
jl
ljmp
sub
hlt
pop
and
or
cmp
jno
sbb
xchg
lock
call
out
sahf
out
sarb
cmp
shll
xchg
mov
xchg
xchg
xchg
mov
iret
repz
push
sub
push
dec
inc
cmp
and
adc
pop
shl
js
clc
xchg
lock
sbb
call
xchg
rclb
fnstsw
cmp
xchg
movsb
xchg
pushf
xchg
xchg
xchg
sbb
xchg
nop
xchg
mov
loop
cmp
pusha
xchg
push
xchg
dec
sahf
out
sahf
dec
inc
xor
and
sahf
out
sbb
or
add
xchg
repz
jecxz
hlt
lock
call
loopne
ror
rorb
cmp
mov
test
out
sahf
mov
out
in
cmpb
sahf
out
sahf
pusha
pop
dec
inc
cmp
out
sub
sbb
adc
sbb
out
cld
xchg
hlt
xchg
call
filds
rclb
mov
mov
mov
sbb
test
jne
or
ret
out
pusha
xchg
pop
xchg
push
sahf
out
push
dec
inc
cmp
jns
out
xor
sbb
or
int
out
add
in
and
adc
pop
lods
fnstenv
popa
adc
sbb
and
bound
sbb
lahf
pop
dec
sti
xorb
sub
jb
push
and
mov
fnstcw
sub
push
in
xchg
bound
out
dec
pop
inc
inc
mov
sarb
bound
xor
lea
jae
add
gs
imul
push
mov
in
push
ret
xchg
dec
lret
lods
out
mov
pop
out
add
fldl
dec
insb
jne
das
or
je
data16
push
xchg
cmp
shll
in
je
stos
sub
fnstenv
xchg
sbb
push
pop
in
imul
inc
clc
rorl
imul
cmp
push
add
aas
mov
aad
dec
into
je
inc
mov
ret
jo
ret
sbb
test
bound
or
cmp
mov
loop
jne
bound
add
jmp
xor
jp
xor
push
jae
popa
jp
in
and
sub
jecxz
inc
xor
add
lock
add
insl
ja
pop
outsb
or
loop
jmp
ror
xchg
push
sbb
cmpl
stc
pop
sbbb
jl
gs
pop
lea
cmp
lds
sub
jns
cli
cmp
addl
mov
and
jecxz
pop
mov
outsl
sahf
enter
xor
xchg
std
pop
xchg
push
xchg
std
pop
ror
jecxz
xor
rorb
xchg
out
mov
jl
add
add
into
arpl
imul
aam
cmp
push
mov
inc
shrl
iret
xor
mov
mov
or
addr16
and
mov
fidivl
xchg
rorb
shlb
sub
incw
mov
jae
or
jmp
pushf
add
ss
dec
shlb
pop
xchg
dec
xchg
stos
subb
xor
out
cmp
lret
and
fcmovnbe
lea
inc
in
push
pop
pop
xchg
aam
jne
xor
xor
ss
mov
sub
or
mov
mov
mov
fldenv
xor
mov
adcl
pushf
mov
dec
dec
push
push
xchg
inc
cmpsb
sti
mov
enter
lods
je
outsb
mov
out
lahf
sub
gs
add
and
pop
or
mov
lods
inc
rcll
inc
sub
loopne
xlat
mov
xchg
jg
out
xor
push
aam
jecxz
xor
in
scas
in
notb
arpl
mov
push
dec
and
enter
mov
imul
mov
subl
sbb
bound
lahf
push
out
leave
cmp
cmc
iret
fwait
jnp
cmpsb
aad
inc
push
push
inc
sbb
dec
hlt
sbb
jge
addr16
inc
dec
mov
mov
pop
leave
dec
mov
xor
jae
imul
movsb
dec
sub
sti
test
fisttpll
shlb
dec
fldl
dec
add
out
add
hlt
js
push
dec
fidivrl
push
scas
test
mov
fsubrs
dec
stos
fs
mov
or
repz
mov
cmpl
cli
push
imul
and
mov
push
inc
gs
xor
imul
dec
mov
pop
jmp
bound
lods
cltd
jae,pn
pop
push
ljmp
jl
cmpsl
xor
push
nop
mov
lahf
cs
outsl
pop
lods
xchg
jne
mov
mov
jnp
xchg
mov
mov
dec
hlt
cli
mov
in
adc
std
push
icebp
bound
dec
inc
pop
push
push
xchg
cltd
jge
jnp
dec
inc
mov
daa
les
or
xchg
jb
in
xor
fists
dec
and
pop
lds
mov
pop
sub
aam
xchg
cmp
hlt
cld
or
stc
lcall
dec
and
fidivs
cmc
scas
sub
cmp
jp
xchg
cld
cmpsb
jmp
test
fidivrl
jl
in
adc
jge
lods
adc
iret
aaa
xchg
push
aam
pop
dec
ja
push
enter
clc
dec
outsl
inc
jecxz
test
mov
dec
lahf
lods
xor
xor
imul
or
dec
outsb
out
and
dec
movsl
in
loop
sahf
jno
jecxz
mov
add
and
mov
insb
mov
push
mov
out
sar
frstor
adc
dec
inc
dec
dec
jno
test
sahf
daa
pop
jae
std
in
aam
fs
mov
fidivrs
mov
inc
mov
imulb
mov
xchg
in
and
xchg
xchg
jmp
or
lahf
leave
pop
out
cld
mov
test
enter
ja
stc
lods
test
enter
jmp
movsb
xchg
fwait
pop
mov
pop
rcrl
or
sahf
or
push
hlt
push
je
jb
inc
or
test
stos
call
movsb
push
mov
jle
lods
pushf
jl
push
aam
ds
movsb
lcall
and
xor
mov
dec
xchg
inc
inc
push
push
cmp
fmul
xchg
mov
pop
les
jbe
adc
test
mov
jl
imul
lcall
out
and
mov
inc
les
fisubrl
jbe
lcall
add
pushf
pushf
sub
cltd
in
jno
push
xchg
dec
dec
fwait
data16
cmp
pop
cmpsl
sbb
jbe
xchg
and
gs
xchg
arpl
xor
scas
dec
repz
call
push
std
jno
leave
fdivl
push
pusha
inc
aad
jae
pushf
les
pop
push
adc
je
dec
cs
and
pop
push
mov
insl
pushf
stos
jne
push
bound
push
insl
jae
cld
in
push
popl
cld
dec
mov
inc
jns
insb
or
push
movsb
cmp
push
mov
jg
daa
push
cmp
inc
dec
dec
dec
push
inc
inc
aaa
hlt
jne
popa
fisttpll
xor
inc
mov
push
cmpsb
stos
lret
sarl
or
sub
push
iret
dec
xor
xorl
out
cwtl
shll
push
aad
cmc
rcr
cmc
push
push
inc
inc
push
and
insl
jne
lea
cmp
add
xchg
nop
add
mov
xor
shrb
test
popf
pop
sbbb
xchg
cmc
jae
mov
fwait
daa
mov
lahf
xacquire
push
outsb
or
cmp
jp
inc
imulb
movsb
cli
sbb
push
cli
imul
cli
cmp
aam
jg
imul
and
stc
ja
scas
inc
fsts
ljmp
notl
rcr
outsb
fwait
aam
imul
fstpl
rol
movsl
push
in
sub
out
ds
rclb
movsb
sub
or
fucomi
test
jg
repz
daa
mov
std
repz
dec
mov
insb
aas
sub
sti
scas
xlat
pop
jecxz
aaa
pop
xchg
xchg
aas
xor
inc
incl
fidivrs
push
inc
push
sub
aad
lret
add
adc
cmp
or
arpl
mov
call
xor
add
ja
xchg
pop
jae
and
out
sub
inc
dec
dec
and
pop
mov
shlb
sbb
lcall
sbb
push
xor
push
cld
lret
test
jl
popf
jno
sub
sbbl
fwait
or
sub
outsl
outsl
or
fimuls
movsb
jge
xor
and
sbb
je
adc
fists
jns
inc
repz
or
aas
movsl
movsb
sub
ret
jp
xor
push
test
in
fisttpl
fwait
in
adc
and
into
xchg
jmp
inc
aas
pop
out
insl
or
mov
test
inc
les
dec
in
jne
jo
sub
aam
movl
fistpll
int3
push
xchg
bound
xor
cld
scas
xchg
cmp
sbb
es
pop
mov
xor
sub
or
cmp
bound
orl
adc
stos
cli
mov
outsb
cld
in
jne
inc
inc
cmp
in
mov
addb
inc
dec
xchg
cmpsl
out
ficompl
cmp
sub
jb
mov
mov
cs
or
test
daa
pop
inc
dec
mov
or
cld
movsb
or
or
add
jo
shll
lds
fidivrl
out
inc
stc
jo
or
sbb
xor
jo
push
xchg
dec
popa
add
arpl
cmpsb
adc
cmpsl
jo
pop
outsb
std
test
xchg
out
add
mov
out
fs
lds
jp
imul
inc
outsb
loope
jb
add
test
insl
jbe
push
mov
add
pop
sbb
add
sahf
imul
xchg
push
mov
mov
jo
or
jb
push
cmpsb
in
xchg
dec
clc
dec
fisttps
pop
insl
outsl
or
into
sti
adc
popa
ja
jmp
scas
lret
orb
and
popa
lcall
call
aam
mov
add
ljmp
inc
insl
imul
shrb
fidivrs
pop
xchg
int
adc
sbb
xor
jo
add
scas
mov
repz
xchg
jmp
pop
adc
push
mov
jg
lahf
mov
mov
inc
xchg
fdivrl
jbe
inc
sbb
xchg
lods
out
fidivrs
push
pop
imul
mov
and
sbb
sahf
mov
mov
insl
test
fisubrl
cs
adc
jae
lods
xacquire
insl
add
pushf
dec
and
lahf
icebp
popf
addr16
sub
xor
repnz
xlat
in
mov
push
data16
fwait
xlat
lcall
xchg
or
lret
ja
loop
xchg
out
xor
mov
lods
jno
sub
push
jecxz
fistl
into
jno
inc
pop
test
repnz
jmp
lds
dec
ret
stc
sub
gs
add
add
xor
jge
test
dec
jae
imul
ffreep
ss
sti
ss
adc
gs
outsb
push
mov
cmpsl
push
test
pop
out
push
pop
jo
test
and
jb
xor
inc
jmp
and
pushf
cmpsl
mov
sub
cmpsb
jae
jne
into
lock
jno
push
imul
or
out
in
inc
dec
cmpsb
lds
jo
mov
mov
arpl
mov
jo
mov
sbb
xor
jno
inc
xor
sub
iret
dec
aas
adc
ja
jnp
xchg
jno
mov
sub
push
loop
outsl
pushf
scas
add
movsb
pushf
push
ja
test
xchg
enter
je
dec
pushf
mov
cmp
add
xchg
mov
jo
jb
cli
jae
insl
dec
cmp
mov
jo
jae
pop
jbe
outsb
mov
mov
addr16
adc
movsl
jae
xchg
add
pop
xchg
xchg
fs
inc
dec
cmpsb
movsb
jns
rcrb
sahf
sub
mov
enter
xchg
lret
in
cmp
add
adc
mov
jno
mov
adc
stos
lcall
cwtl
pop
into
mov
push
int
stc
sbb
jge
mov
xchg
in
gs
and
arpl
jge
inc
sub
stos
stc
xchg
xor
push
mov
pop
sarb
xchg
push
push
sar
adc
cmp
insl
ljmp
adc
push
xchg
jns
je
sbb
mov
fisttps
pop
loop
movb
sbb
jnp
or
fmull
setb
mov
dec
insl
fbld
jle
mov
gs
push
add
add
and
xor
jp
jno
cs
incl
ret
adc
arpl
into
dec
mov
incb
cwtl
cmp
sahf
push
shll
push
xor
scas
shlb
rorl
popf
dec
fstpl
add
pop
sahf
and
and
adc
xchg
repz
push
dec
mov
or
and
jne
cmp
popf
test
push
push
in
inc
mov
jl
xor
shlb
inc
push
dec
testl
sub
insb
xchg
mov
jge
out
mov
mov
xor
inc
loop
sbb
mov
dec
out
xor
cmpsl
mov
inc
dec
mov
pushf
out
xor
xor
pop
add
insl
pushf
xor
pop
jmp
xor
dec
dec
adc
push
insl
enter
mov
xchg
lcall
add
xchg
sbb
les
mov
xor
xor
dec
cmp
iret
add
data16
pop
mov
test
sbb
jmp
pop
or
lock
add
jmp
stos
jle
xchg
rol
inc
xchg
pop
dec
mov
sub
dec
mov
sbb
jnp
xor
cmp
cs
jmp
jmp
mov
mov
xor
lods
mov
jns
mov
mull
les
jae
inc
pop
push
jae
stos
inc
fldt
jle
cwtl
push
fsubs
out
popf
xor
sub
cmp
push
icebp
cmp
aaa
xchg
or
gs
mov
insb
inc
xchg
dec
gs
outsb
mov
cmp
cmp
or
push
rcll
ret
push
fisubs
std
mov
fidivrs
push
dec
jno
enter
sub
jecxz
fidivs
fsubr
pop
mov
add
sub
and
pop
push
stos
xor
daa
push
mov
add
or
pop
aam
sub
add
es
sub
push
pop
push
pusha
jne
add
call
pop
sbb
add
in
xchg
imul
jl
mov
add
add
dec
jecxz
or
in
pushf
dec
inc
pushw
mov
dec
push
xor
pop
cmp
lret
xor
xchg
negb
subb
out
xor
lss
loop
ret
xchg
out
cmp
xor
mov
repz
and
sbb
jp
bound
cmpsb
cmp
adc
pop
lea
cmp
push
sub
mov
dec
inc
dec
in
icebp
sub
dec
fisttps
push
mov
pop
mov
sbb
xor
test
mov
jae
fbld
pop
mov
add
jbe
push
sarb
dec
les
and
leave
xchg
fwait
add
mov
std
jge
out
es
cmp
loopne
jmp
xchg
enter
outsb
jge
popf
into
cmpsl
inc
jecxz
mov
int3
inc
imul
stc
lods
add
jmp
das
add
jno
fcmove
push
repz
out
sbb
mov
sbb
push
outsb
jb
imul
shlb
mov
xor
pop
imul
jge
popa
inc
std
jns
std
dec
and
mov
gs
lods
jne
movsb
pop
or
xchg
mov
notl
adc
cwtl
jp
aad
mov
lahf
pop
jecxz
scas
jmp
das
jno
inc
mov
or
xchg
andl
cwtl
call
jmp
or
dec
cmp
mov
xorb
inc
loop
mov
outsb
addr16
xor
dec
add
add
js
sub
push
jo
lods
or
or
inc
jl
mov
add
add
and
dec
js
inc
and
faddl
dec
or
or
cmpl
inc
jne
mov
add
push
mov
nop
ret
add
divb
pushl
repnz
push
call
iret
xchg
push
shrl
pop
xor
mov
add
call
pop
call
add
pop
push
sub
mov
lea
mov
je
popa
add
stos
mov
stos
push
push
push
push
push
add
push
push
call
add
test
ret
add
cmpsb
in
punpckhbw
sahf
nop
mov
cmp
pop
pop
int
pushf
lods
push
lcall
xchg
jle
in
std
xchg
jg
lods
sub
xchg
lahf
push
push
dec
xor
or
xor
test
add
es
push
inc
push
xor
push
dec
inc
add
push
add
or
sbb
xor
xor
xor
nop
aaa
xor
cltd
shll
js
ja
jb
xchg
aam
mov
xor
mov
dec
push
add
pop
inc
push
push
and
dec
dec
jp
inc
dec
movsb
cmp
mov
xchg
jle,pn
mov
imul
rclb
inc
adc
mov
fmull
jne
movsb
je
sub
mov
leave
shl
add
jns
ret
dec
or
push
imul
orl
mov
cmp
fucomip
add
jns
hlt
add
call
je
cwtl
pop
sub
cmp
sbb
enter
bound
andb
dec
inc
sub
xchg
sub
dec
outsl
mov
xor
dec
mov
in
or
shl
inc
test
push
das
adcb
add
or
mov
fidivs
adc
pop
testb
inc
test
int3
jne
xor
cmp
dec
push
ds
adc
push
dec
cs
push
inc
sbb
cwtl
testl
ret
mov
xchg
ljmp
cs
aam
insb
and
mov
out
cmp
cmp
mov
inc
cmpsb
fsubr
jns
pop
mov
or
ja
jbe
dec
sub
sub
mov
xor
push
mov
add
shl
jmp
cmp
js
insb
test
push
cmp
dec
and
push
or
or
cmp
jb
mov
pop
out
addr16
inc
push
cmp
add
lds
push
ret
xchg
lds
sbb
adc
popa
flds
and
rep
cmp
jae
push
lock
xchg
cmp
mov
add
cwtl
or
das
pop
adc
mov
cmp
push
inc
inc
push
inc
dec
and
mov
jne
sub
cmp
movsb
cmpb
xchg
dec
push
add
and
sub
cld
rolb
addb
cmp
and
adc
ds
mov
adc
add
xor
jmp
add
stos
or
call
adc
add
add
movsb
scas
add
andb
xchg
movsl
sbbl
subb
sub
mov
jmp
jl
mov
jmp
shl
iret
mov
in
call
lock
mov
fimull
mov
pop
fisubrl
xor
fcomp
loopne
out
sub
adc
sbb
cmp
inc
push
jmp
pop
push
lock
add
sub
push
outsb
aaa
sub
sbb
inc
lcall
pop
xor
add
jge
roll
gs
and
or
jle
xchg
or
out
jl
or
push
stc
xor
adc
lret
repz
mov
stc
stc
inc
inc
push
in
repnz
push
test
or
xor
sbb
enter
xchg
iret
fwait
out
addb
subl
jle
test
sahf
mov
movsb
cmpsl
sub
sbb
xor
sbb
add
rcrb
xchg
repz
cmp
or
out
mov
cld
sbb
add
mov
jbe
dec
dec
pop
push
and
add
xor
xor
inc
jno
gs
fmuls
or
jns
out
adc
jns
adc
or
sti
lret
rolb
sbb
dec
sbb
sbb
sub
repz
loopne
test
inc
fildl
inc
movl
and
and
arpl
inc
xor
fistl
scas
xorb
sbb
stc
xor
pop
incl
and
and
in
sbb
imul
add
add
cli
or
or
ret
paddq
adc
je
mov
mov
sbb
into
sbb
rorl
add
add
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
lea
scas
sahf
inc
stc
mov
adc
mov
decl
js
add
rolb
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
lds
add
add
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
add
add
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
incl
add
add
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
add
add
subb
fwait
xchg
and
and
int
int3
sti
aas
jno
add
adc
or
mov
fs
dec
lea
aas
add
add
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
add
xchg
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
add
add
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
add
add
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
sbb
adc
jmp
jg
sub
jge
mov
add
add
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
sbb
add
cmp
std
xlat
cmp
mov
mov
add
add
jecxz
cmpsb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
add
rclb
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
add
and
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
push
xchg
jge
ficomps
frstor
in
mov
add
out
and
add
add
add
add
add
lock
add
add
add
lock
add
add
add
decl
add
lock
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
add
push
add
add
mov
sub
push
push
lea
push
push
xor
call
roll
dec
loope
push
push
push
push
mov
jl
add
rcrb
cld
push
add
test
je
cmp
addb
mov
sub
fnstsw
and
lea
mov
jae
cmp
jae
mov
add
in
mov
lea
fbld
jg
sub
jno
cmp
out
adc
sub
cs
pop
push
leave
or
sub
shl
sub
rep
pop
mov
sub
ds
sarl
jl
rolb
rcrl
sbb
fcos
addl
or
pushl
adcb
ds
pop
pop
ret
sbb
inc
add
mov
sbb
sbb
adc
mov
adc
out
mov
push
popl
or
and
and
xchg
or
xorb
sbb
push
incb
sub
sbb
dec
dec
inc
inc
add
xor
and
mov
adc
pop
mov
cmp
mov
add
jp
aas
or
or
push
push
call
xor
test
mov
inc
cld
xor
out
xchg
push
or
sbb
ret
xor
sbb
and
or
pop
sub
rolb
jge
cmpl
je
jae
test
dec
jne
sbb
mov
jnp
cli
outsb
enter
lea
outsl
add
ret
and
es
xor
mov
repnz
sub
sub
ficoms
adc
fwait
lahf
mov
rorb
mov
push
add
filds
xor
leave
mov
mov
or
inc
add
add
xchg
cmpsb
sbb
or
adc
sub
je
push
and
lea
or
call
or
enter
and
sbb
push
mov
fistps
add
ss
bts
sbb
inc
or
inc
dec
pusha
add
icebp
add
movb
add
inc
mov
test
jle
hlt
orb
sbb
icebp
pusha
or
adc
sub
pop
pop
ret
jecxz
add
mov
adc
jmp
adc
nop
adc
lret
push
call
add
mov
mov
daa
add
xor
jne
inc
pop
xor
stos
add
jmp
aas
push
jne
outsb
out
fisttps
dec
ror
mov
add
loop
in
lret
rorl
stos
pop
push
mov
jmp
cltd
nop
xchg
and
scas
xchg
or
je
movsl
lods
sbb
pop
mov
add
inc
mov
sbb
and
add
cmovs
push
lcall
inc
push
and
add
cmp
jge
push
inc
xor
mov
add
sub
je
ds
inc
pop
enter
jmp
shll
cmp
sbb
add
rclb
les
out
cmp
add
jmp
pop
pop
adc
outsb
and
adc
inc
cmp
inc
mov
xchg
les
and
adc
jmp
push
scas
out
clc
ljmp
adc
push
dec
pop
push
call
sbb
test
mov
bound
adc
or
inc
add
int
dec
cmovae
je
in
xor
jge
dec
or
pop
adc
rep
rolb
clc
push
nop
xchg
cli
pop
xor
sbb
test
xor
inc
test
jne
movsb
call
test
test
inc
sub
lock
cmp
inc
enter
add
push
push
jl
push
fcoms
fisubl
in
mov
mov
ss
pop
jns
adcl
sub
orl
push
daa
or
jle
inc
sub
push
in
xchg
mov
iret
ror
inc
je
inc
decl
out
adc
adc
jbe
push
jmp
pop
dec
nop
cli
cmp
jne
stc
jmp
cmc
out
or
decl
stos
cmp
sti
out
pushf
fs
mov
and
sub
mov
in
stos
ret
pop
push
pop
and
cmp
mov
inc
sbb
inc
xchg
dec
scas
sub
test
and
lret
push
push
push
push
call
or
jmp
inc
lods
dec
mov
fstpt
adc
subl
pop
or
inc
mov
hlt
xchg
imul
cmpl
push
lock
adc
rol
in
cli
hlt
add
testb
push
cmp
mov
xchg
dec
dec
test
cs
pop
push
push
cli
inc
or
sbb
movsb
insl
push
inc
cmp
sbb
dec
pop
outsl
adc
and
lods
lcall
add
hlt
dec
xor
icebp
mov
adc
sbb
dec
or
daa
inc
cli
or
ss
cmp
subl
mov
or
lahf
inc
and
and
clc
add
sub
ss
rorl
adc
add
ss
imul
jo
cs
hlt
jne
inc
outsb
jns
mov
imul
adc
push
fsubrp
arpl
stc
repnz
adc
jae
insb
outsb
fistpll
fwait
inc
bound
xor
jecxz
out
imull
inc
dec
jp
xchg
inc
cs
insb
and
push
roll
pop
out
lcall
jne
gs
xor
in
jbe
popa
addr16
mov
push
sbb
js
ja
cmpsl
add
fwait
adc
cmp
js
je
in
jmp
es
inc
dec
mov
fisttpll
or
test
sbb
add
sbb
sbb
jae
add
add
add
je
and
jl
sub
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
lock
add
add
add
sub
pop
add
lock
add
pop
add
add
adc
pop
add
pop
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
