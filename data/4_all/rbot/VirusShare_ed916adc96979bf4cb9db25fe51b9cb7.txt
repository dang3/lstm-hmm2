and
lcall
ljmp
adc
call
iret
mov
nop
adc
leave
pushf
mov
imul
popf
gs
popf
insb
jb
xor
scas
mov
cmp
sub
out
mov
and
idivl
inc
sub
adc
adc
lods
push
adc
mov
mov
loop
test
or
test
jge
mov
jne
mov
cltd
jmp
inc
jno
pusha
xchg
jns
imul
jecxz
bound
fcompl
rol
ret
mov
testl
cmp
lods
mov
mov
jle
mov
inc
mov
jae
mov
mov
cmpsb
and
pop
sub
xchg
loopne
cmp
mov
sub
ret
jnp
mov
pop
les
mov
ljmp
loop
in
cmpsb
pop
cmpsl
mov
fcmovu
jno
ljmp
adc
jnp
push
std
fimuls
add
xchg
hlt
inc
inc
pop
inc
aaa
cmp
aad
pop
xchg
xchg
mov
in
xor
addb
sub
es
pop
and
insl
add
es
lahf
dec
sub
sbb
popf
cwtl
hlt
and
adc
sub
sbb
pop
or
or
xorb
inc
insb
mov
clc
aam
outsl
jb
mov
test
repz
pusha
clc
xorps
fs
popf
cmp
pop
add
or
push
push
xchg
dec
leave
adc
sar
fldenv
mov
mov
lret
cmpsl
inc
mov
fcmovnbe
sub
pop
stos
scas
cmp
mov
push
movsb
sbb
pop
nop
lcall
inc
pop
and
or
add
xor
cld
xor
out
repnz
or
imul
in
loopne
adc
popl
iret
loope
fstpl
ds
cltd
cld
aad
int3
xchg
pop
cmp
jno
ror
enter
mov
dec
pop
or
jns
popa
cmpsl
into
cmp
sub
data16
mov
inc
and
mov
push
ds
pop
sbb
mov
push
adc
adc
add
push
push
sbb
add
cmp
or
sti
inc
sub
jbe
jno
pop
idivb
and
pusha
pop
sbbl
push
gs
push
arpl
dec
icebp
pop
cmc
mov
popf
push
jne
in
push
loopne
adc
pusha
sarb
mov
inc
ret
mov
sarl
addr16
test
mov
cs
cwtl
xor
test
movsl
xchg
xchg
push
sbb
inc
cmp
adc
xor
int3
mov
pop
push
mov
aaa
sti
imul
jmp
outsb
cltd
daa
jl
jo
cmpsb
sbb
pop
pop
and
loopne
rolb
lret
xchg
push
add
mov
or
push
inc
cmp
pop
enter
mov
mov
js
lods
mov
cmp
mov
and
popa
push
sub
push
xchg
lcall
pop
and
mov
mov
adc
adc
add
mov
icebp
cli
inc
xorl
in
hlt
cmp
imul
jno,pt
fs
test
fucom
sub
pop
rcr
push
popa
push
push
aad
cwtl
arpl
sbbb
inc
lret
rol
add
cmc
xor
sub
scas
mov
sub
jmp
mov
mov
cmpsl
lcall
lcall
xchg
aad
int3
xor
ss
ret
sti
xchg
pop
add
icebp
outsl
into
cmc
call
jmp
pop
adc
jecxz
pop
pop
fwait
or
mov
mul
iret
shlb
xchg
jl
push
jg
dec
dec
int
inc
outsl
ror
movl
cmp
mov
lock
jg
cmpsl
mov
cmp
mov
and
and
into
push
pop
ret
repnz
adc
push
push
or
movsb
jns
push
xorl
xchg
sti
jb
jle
or
jae
pushf
out
bound
cmpsl
outsl
xchg
loopne
daa
gs
std
cmpsl
add
pop
cmp
push
push
rclb
lea
dec
sahf
adc
in
jg
dec
ret
push
xor
xor
out
jmp
mov
je
sub
mov
lahf
fcmovnbe
dec
fnstsw
pushf
pushf
xor
jno
xchg
push
pop
xchg
or
icebp
mov
mov
xchg
add
push
push
ud2
div
sub
std
ja
mov
or
call
add
loopne
adc
out
pop
mov
rclb
loopne
xchg
enter
inc
subb
mov
cmp
jbe
push
pop
xor
cmp
pop
push
mov
scas
jne
push
aaa
pushf
and
es
pop
movsb
outsl
sbb
sbb
adc
pop
mov
pusha
mov
push
subb
jl
pop
stos
xchg
jle
outsl
jno
jle
mov
repz
loop
jno
jmp
popa
fs
push
xlat
mov
mov
push
dec
fistpl
jl
dec
dec
and
into
int
sarb
cmp
insb
cmp
scas
out
mov
mov
std
push
loope
icebp
sub
jne
mov
sbb
mov
adc
mov
and
sbb
cwtl
mov
or
mov
lock
jb
call
adc
xchg
jp
movsb
and
mov
rclb
in
imul
aam
aad
dec
push
add
dec
dec
ja
push
test
cmp
cmp
cmp
mov
scas
cmp
ret
xor
adc
cmp
dec
dec
rclb
mov
pop
sbb
sbb
lods
andl
mov
mov
fidivrl
dec
ja
jns
cmpl
arpl
push
out
cmc
and
pop
stc
call
outsl
mov
sbb
aam
pop
gs
push
mull
mov
neg
mov
mov
cli
mov
inc
dec
enter
fisubrl
xor
lods
mov
mov
in
sbb
scas
fwait
sahf
sub
pop
rclb
mov
dec
sti
shll
incl
add
imulb
js
mov
push
repnz
fisubl
xlat
daa
out
in
imul
repnz
inc
fcmovnu
push
push
lahf
rcl
aam
addr16
sbb
dec
or
or
sar
addb
imul
clc
sub
xor
adc
push
scas
jne
cs
cmp
es
mov
fwait
sbb
test
lahf
mov
jns
fld
xchg
addb
imul
mov
mov
subb
arpl
stos
ja
gs
pop
pop
pop
pop
dec
in
nop
push
dec
popf
addr16
xchg
into
stc
leave
push
es
mov
cmp
inc
mov
mov
stos
aam
scas
in
mov
mov
fsubrs
xor
mov
shll
lods
and
sbb
sahf
xchg
xchg
sub
xchg
xchg
mov
dec
push
or
add
xor
jle
adc
sti
lock
jno
mov
stos
sub
sbb
xlat
cld
fs
out
adc
pop
arpl
jg
iret
loopne
pop
fcmovne
push
loopne
dec
dec
jo
leave
xor
inc
inc
jne
fcmovnbe
cmp
cmp
xor
mov
inc
iret
cmp
sub
stos
jg
es
ficomps
shlb
cs
fisubs
pop
or
les
jg
jg
mov
test
test
pusha
jle
lea
je
je
jnp
push
push
add
repz
gs
jle
pop
pop
xlat
cmp
push
fstpl
push
inc
dec
rcl
pop
into
int
or
in
ret
mov
adc
mov
mov
pop
fisttps
aas
push
jae
stos
shrl
movsb
and
sbb
scas
pop
sahf
popf
dec
inc
cmp
xchg
pop
scas
into
or
add
les
orl
sub
cld
cmc
mov
cmp
cmpb
jmp
adc
push
mov
cld
pushf
xlat
xchg
iret
dec
inc
stos
adc
and
xchg
das
lcall
mov
cmp
cli
jge
fs
lds
sub
mov
and
mov
and
jns
pop
sbb
xchg
int
push
or
sbb
movsb
add
ja
cli
inc
jp
jl
shll
mov
mov
addr16
or
mov
arpl
and
lods
dec
and
pop
out
or
push
push
dec
and
int3
lret
into
std
aas
mov
pop
filds
mov
xor
push
shll
cmpsl
stos
xor
lods
mov
movsb
es
sbb
pop
fcoml
rclb
lods
pop
lahf
scas
mov
cmp
sub
mov
idivl
int3
mov
mov
pop
pop
pop
push
adc
push
out
out
cmp
sbb
and
nop
and
xchg
sbb
inc
adc
lsl
mov
call
cld
jmp
scas
into
dec
aad
dec
xor
outsb
pop
data16
outsl
das
inc
scas
aaa
sub
mov
hlt
mov
fldt
sbb
xchg
xlat
mov
rorb
and
adc
int
mov
ja
inc
push
xchg
js
jnp
jo
imul
push
insb
pop
jmp
xlat
imulb
xchg
lock
mov
adc
lret
testb
mov
mov
mov
lods
cmp
inc
sub
into
inc
nop
iret
fsubl
cwtl
and
lcall
adc
pop
mov
cmpsb
xchg
test
xchg
xchg
aas
add
std
jns
out
je
sti
sbb
in
adc
pusha
daa
out
sbb
ficomps
cltd
dec
push
jmp
jmp
aas
jg
or
cmp
xchg
addb
lds
scas
dec
ds
jnp
push
out
outsl
sub
pop
sub
cmc
add
sbb
and
adc
xchg
pop
xor
mov
out
jg
inc
jno
jmp
pop
imul
popf
jne
sahf
lcall
ljmp
arpl
or
pop
push
fcompl
mov
xchg
inc
inc
in
arpl
icebp
fdivl
test
cmp
into
mov
mov
in
jecxz
test
xor
cs
lret
movsb
movsl
cwtl
xchg
xor
pushf
xchg
mov
xchg
sbb
and
mov
or
inc
insl
dec
incl
push
sub
sti
and
jb
roll
hlt
repz
shrl
push
loope
mov
loopne
xchg
fstps
out
inc
push
data16
aad
jmp
xchg
cwtl
lea
mov
sti
or
cmp
cmp
scas
mov
push
repz
sahf
iret
jne
pop
ret
into
call
test
and
mov
sbb
sbb
ss
movlps
faddl
or
xchg
addb
jp
sti
bound
xlat
lds
icebp
xor
repz
jb
insl
jp
pop
arpl
fldenv
adc
xchg
jbe
push
add
repnz
gs
aas
mov
hlt
pop
mov
mov
ds
shll
jg
lods
and
mov
movsb
mov
xor
popf
mov
mov
or
dec
xchg
sbb
xor
sti
ja
std
loopne
mov
repz
addr16
out
jmp
adc
and
sbb
test
insb
dec
jmp
jb
jge
mov
push
lret
inc
vaddps
cmp
out
das
xor
push
xchg
push
inc
scas
int3
and
inc
push
mov
pushf
mov
leave
ret
and
adc
xchg
stos
adc
sbb
jne
add
stos
jb
sub
push
cmpsl
push
jns
pop
bound
fwait
inc
movsb
pop
add
pop
test
fs
push
or
dec
leave
aad
mov
ret
cmc
push
mov
mov
iret
les
lahf
pop
jg
lods
sub
popa
lds
cmp
pushf
xchg
inc
dec
xchg
or
inc
or
gs
call
and
jnp
les
std
lock
add
repz
insl
nop
ss
xchg
xorps
fiadds
push
sub
jecxz
lret
aas
pop
repnz
ror
aad
inc
mov
mov
ds
jb
mov
int
lods
mov
sub
sub
and
xlat
cmp
sbb
mov
adc
lds
mov
addb
jp
cmp
mov
stc
and
js
imul
popa
fs
jge
jp
pop
insl
push
push
dec
mov
inc
xchg
int3
dec
mov
out
inc
dec
icebp
dec
fistpl
cmp
jg
mov
gs
mov
aas
cmpsl
and
scas
pop
ljmp
movsl
cwtl
lret
mov
push
xchg
xchg
sub
fistpll
or
aad
jg
mov
sbb
mov
clc
fistpl
inc
popa
test
je
ljmp
fbld
sub
jecxz
lea
fisttpl
rcll
push
aad
pusha
aad
or
rol
out
inc
mov
rcrl
cmp
insl
enter
xor
out
daa
fs
jg
cs
inc
and
dec
dec
das
fstpt
lcall
xor
mov
andb
xchg
adc
adc
sti
cmp
js
push
jmp
mov
pusha
pushf
xchg
jl
jp
pop
in
leave
mov
fstp
pop
sbb
lret
cltd
jno
inc
xchg
inc
add
inc
test
add
imulb
repnz
mov
jecxz
sbb
cmpsl
stos
and
in
lods
mov
cmpsb
iret
pop
and
sbbb
mov
push
lock
das
and
cmpsb
xchg
add
jne
idiv
sub
andb
imul
jmp
sti
loopne
sbb
sar
fcom
pop
and
mov
pop
loopne
rolb
inc
push
mov
in
in
inc
lahf
jnp
test
les
sbb
cmp
xor
test
dec
jecxz
sub
jns
cmp
call
in
sbb
lcall
mov
mov
xlat
mov
jo
cmp
sarl
jo
mov
je
lahf
call
imul
sti
lock
out
xchg
pop
add
pop
daa
push
rcrb
in
add
push
into
int
repnz
repz
mov
lock
mov
pusha
sub
xor
fsubl
sub
stos
mov
lcall
or
adc
mov
or
addb
sbb
add
pop
mov
imull
xchg
iret
nop
std
outsl
jp
mov
ljmp
loopne
stc
iret
clc
out
jle
pop
fs
fcmovnu
push
sub
out
lret
mov
je
inc
inc
jbe
mov
imul
das
xor
mov
ss
sub
movsl
fisubrl
push
cmp
cmp
sbb
cmpsl
sbb
adcl
mov
in
lea
pop
jg
add
stc
add
cmpl
lahf
xchg
jb
fisttps
push
imul
lret
bound
nop
sti
in
add
mov
imul
aam
pop
lret
into
fsubrs
rol
inc
inc
je
mov
in
push
rcll
scas
lret
mov
sub
adc
test
lahf
sarb
and
adc
adc
cmp
xchg
xchg
inc
and
xor
divl
push
push
cmc
orl
sti
out
repnz
push
xor
jbe
mov
ja
js
pop
pop
ljmp
fcompl
movsb
iret
rcl
push
xchg
inc
rorb
test
in
out
cmp
inc
les
push
cmp
add
sbb
jp
lds
movsb
imul
push
fwait
stos
xor
fistl
xchg
pop
pop
mov
dec
pop
or
in
addb
inc
sbb
mov
jb
jae
out
mov
imul
jno
jne
fsubr
pop
inc
in
pop
pop
pop
iret
lcall
mov
enter
dec
cmc
mov
cmp
imul
insb
mov
mov
scas
cmpsl
lcall
and
lods
mov
lcall
sub
xchg
xchg
sub
inc
or
lds
add
icebp
add
test
lock
cs
repz
shrb
adc
jp
xchg
and
pmulhw
xchg
mov
fistl
fldl
jmp
inc
push
mov
jge
inc
cmp
mov
fiadds
cmp
aad
lret
xor
mov
dec
arpl
les
pop
scas
inc
cmc
and
es
scas
cmpxchg
nop
and
mull
or
adc
rcl
pop
or
cmpsb
mov
mov
sbb
ja
cld
xchg
jae
into
mov
mov
jnp
push
outsb
insl
in
pop
pop
sbb
pop
pop
repz
shlb
push
lods
push
cltd
fcomps
dec
xchg
mov
ret
fadds
clc
mov
mov
cmp
lds
lods
stos
faddp
out
mov
mov
jae
sahf
popf
nop
aas
adc
clc
inc
xchg
and
lahf
jecxz
or
lea
cwtl
xchg
incl
xor
gs
clc
idivl
int3
sti
std
jns
push
mov
repz
xor
xchg
sub
add
cmp
xlat
fcmovu
push
fcmovnu
fisttpll
lcall
adc
jb
ret
fdivrs
add
mov
ds
xchg
cmp
pop
das
sub
or
xor
sub
mov
mov
popa
es
sbb
xchg
pop
adc
mov
xchg
sbb
jmp
addb
stos
mov
jbe
mov
fs
push
loop
insl
pusha
negl
lahf
arpl
xchg
pop
fsubs
in
repnz
fldt
pop
push
push
add
add
cmp
push
mov
mov
xor
mov
or
mov
mov
sub
mov
scas
fxch
fsubl
cwtl
inc
xor
pushf
fwait
sahf
xor
dec
xchg
or
push
xchg
or
out
xor
add
xor
xor
hlt
push
sarl
hlt
repz
aaa
xchg
and
jecxz
mov
jecxz
psubw
jo
push
pop
repnz
imul
jnp
fsubp
mov
add
dec
inc
int
add
inc
notl
push
cmp
dec
cmp
ss
pop
sarb
xor
xchg
or
and
loope
pop
sbb
cwtl
fldt
adc
push
push
lahf
sysret
test
lea
xchg
push
adcl
jnp
jge
das
jl
sbb
xor
imul
js
pop
cld
arpl
xchg
jb
pop
repz
rcr
imul
dec
leave
int3
sti
dec
mov
fistl
push
into
mov
mov
mov
xor
stos
test
pusha
repz
and
movsl
pop
pop
pop
rcl
xor
cmp
inc
inc
inc
push
dec
or
push
cmp
add
sbb
sub
lahf
xchg
mov
out
popf
xor
sbb
in
loopne
sub
and
pop
in
add
pop
pop
push
jg
pop
aam
rcl
pusha
xlat
sti
or
mov
lret
inc
lret
pusha
push
ret
cmp
cmp
xor
mov
jnp
cmc
adc
in
push
and
sbb
xor
aad
push
int
xchg
cltd
adc
adc
lods
cmp
push
mov
add
pop
addl
lea
mov
jae
jne
repnz
imul
pop
fs
pop
jo
mov
pop
fsubp
pop
bound
add
push
dec
aam
xchg
jmp
inc
inc
pop
ret
lds
pop
mov
inc
or
std
mov
jmp
scas
scas
xchg
stos
jp
movsb
shll
lcall
stos
mov
xchg
xchg
adc
push
mov
push
or
inc
push
xor
cld
and
adc
jb
icebp
push
hlt
repz
sbb
sbb
js
mul
cmp
fsubr
xlat
fimull
pop
popf
cmp
popl
enter
rorl
inc
inc
outsl
ret
je
mov
push
repnz
iret
jne
sbb
mov
and
mov
std
xchg
push
push
push
mov
mov
cmpsl
mov
js
imul
xchg
mov
or
push
test
mov
jp
push
fnsetpm(287
les
pop
fstps
push
cltd
inc
cmp
dec
xor
cld
mov
aas
enter
rcr
pop
sbb
stos
ds
shl
mov
aaa
leave
cmpsl
stos
ss
inc
loopne
lahf
mov
sbb
fwait
sahf
popf
inc
daa
ljmp
xchg
lock
ds
shl
sbb
stc
jnp
add
std
lock
add
insl
push
jp
push
std
pop
or
fldenv
ds
push
push
fiaddl
or
mov
jge
cmp
mov
xor
lea
xor
jp
scas
mov
out
cs
shll
jg
push
pop
adc
adc
mov
xchg
adc
mov
test
jp
cmp
clc
test
gs
push
test
outsb
pusha
arpl
xchg
fisttpl
add
pop
pop
dec
call
push
push
push
dec
sbb
cmc
mov
out
mov
xor
cmp
mov
jl
cli
and
mov
mov
aas
shl
lods
and
aaa
and
xor
out
dec
sub
cmp
xchg
stos
xor
add
xchg
or
dec
add
add
push
lcall
sub
hlt
or
or
out
mov
fucomp
or
cmp
pop
arpl
in
addr16
mov
into
push
ror
inc
aas
push
dec
jae
push
out
aaa
cmp
clc
sbb
mov
aaa
data16
sarb
imul
pop
and
ret
pop
fwait
sbb
pop
sbb
adc
push
pop
rorl
xchg
test
leave
mov
scas
roll
jl
int3
jle
cmpsl
shlb
pop
xchg
test
fwait
push
cmp
bound
bound
stos
aas
adc
leave
pop
push
push
ljmp
aam
repnz
rcll
in
mov
mov
lret
mov
mov
shl
imul
andl
or
aaa
fistl
xchg
adc
pop
sub
movsl
mov
mov
add
imull
cmp
je
xor
repz
cmc
inc
and
sub
popa
loopne
mov
loope
data16
fcom
or
xorl
out
mov
sarl
inc
push
dec
dec
push
hlt
mov
fadd
in
inc
cmp
inc
dec
cmp
push
cmp
dec
push
fidivl
xor
pop
dec
insb
sub
pop
mov
mov
dec
pop
push
dec
leave
adc
mov
mov
inc
mov
adcb
add
lds
push
insl
cltd
cltd
mov
les
lahf
lret
addb
fs
cltd
mov
insl
pop
pop
ljmp
jnp
push
rclb
dec
aam
pop
lret
into
lock
pop
lret
jmp
dec
das
clc
test
enter
jge
out
stos
sub
mov
int
movsb
and
movsl
xor
fistl
or
or
push
add
sbb
mov
js
icebp
and
mov
or
and
jmp
jp
pop
jnp
pop
jo
pop
jno
hlt
addl
ja
shlb
mov
gs
adc
jle
pop
shll
mov
mov
mov
jns
cmp
lret
mov
adc
aaa
lds
and
insl
xor
and
setne
lods
sbb
mov
int3
adc
inc
nop
jg
xor
jl
cmp
cmc
mov
xor
pop
jae
je
mov
jecxz,pn
pop
fisubl
add
pop
mov
jae
jne
push
push
push
add
out
filds
xchg
jb
call
dec
scas
mov
into
cmp
mov
mov
sub
mov
out
mov
cmpsb
sub
pushf
inc
adc
mov
sub
das
xchg
pop
inc
mov
mull
add
ss
add
sti
outsl
cmp
jbe
stc
add
add
insb
jae
lock
in
sbb
push
sbb
fcom
push
stos
sti
loopne
fst
dec
jge
adc
jg
iret
movl
adc
xor
push
jae
sarb
test
sub
mov
repnz
and
add
push
sbb
adc
pop
cmp
push
orl
mov
inc
push
js
sti
sub
outsl
jb
std
outsl
xor
nop
scas
lods
insl
pusha
push
out
aaa
pop
arpl
out
pop
or
int3
fstp
and
push
add
stc
push
push
dec
std
outsb
push
arpl
dec
int
cmc
inc
int3
fnstsw
cli
mov
scas
lods
mov
hlt
mov
sub
inc
mov
push
in
mov
cwtl
xchg
sbb
scas
fwait
sahf
inc
adc
xchg
push
rcll
or
and
sub
fldl
sar
icebp
hlt
jo
xchg
cmc
cmpb
cvttps2pi
in
fidivrl
pop
jecxz
jo
adc
fdivs
pop
insl
jecxz
shrl
cli
adc
jmp
aas
lret
or
cmp
mov
cmp
into
dec
test
ret
cmp
sub
test
and
and
sub
sbb
sbb
jecxz
adc
rolb
mov
cmpl
lds
jae
fidivrs
jae
jbe
jae
cmpsl
insb
fwait
in
call
xchg
jnp
sbbl
movsb
jl
push
mov
push
add
rolb
inc
dec
cld
arpl
imul
dec
lea
mov
cmp
mov
xor
jbe
mov
fisubrl
mov
mov
sbb
push
dec
adc
cmpsl
lods
sahf
popf
adc
test
xchg
mov
gs
add
xchg
jns
je
idiv
jge
sahf
and
jp
add
hlt
pop
mov
jbe
mov
mov
hlt
loop
mov
fcom
outsl
sub
iret
rcrl
fimuls
dec
dec
inc
push
repnz
xor
test
iret
jns
ds
xor
pop
into
daa
daa
and
or
push
movsb
inc
mov
sbb
mov
xchg
and
adc
sbb
add
lret
lea
or
test
mov
repnz
inc
aaa
jo
insl
add
push
cwtl
cmpsb
push
or
jne
push
dec
push
ljmp
enter
int
xchg
mov
xlat
adc
hlt
mov
mov
mov
mov
loopne
lahf
cmp
call
fbld
sub
mov
mov
cltd
dec
mov
mov
aaa
fiaddl
cmp
stc
inc
mov
fimull
cwtl
xor
cli
sub
adc
icebp
hlt
jo
loope
jb
sti
jmp
in
loop
pop
test
xor
fisttpl
or
sub
fxch
ds
jo
mov
hlt
lret
push
in
xor
xchg
aaa
cmp
popa
mov
das
xor
fildll
loope
scas
mov
xor
pop
mov
dec
das
mov
nop
xchg
imul
test
inc
mov
pop
jg
xor
xor
inc
gs
repz
mov
test
mov
mov
pop
pop
add
fstps
pop
pop
push
movsb
sbb
iret
mov
lret
nop
sti
dec
in
out
mov
mov
pop
add
or
mov
dec
or
icebp
mov
mov
sub
mov
cwtl
xchg
and
xor
sahf
dec
enter
add
inc
xchg
mov
mov
add
test
sbb
pop
nop
stc
cld
sub
cmpsl
std
or
andb
sub
adc
fldln2
mov
bound
jmp
fdivl
lcall
rolb
enter
movd
pop
das
jl
int3
adc
inc
inc
inc
push
fisubrs
cli
aas
cmp
out
dec
fisttps
pop
lods
test
xor
and
and
pop
fwait
fs
fcoms
adc
push
or
inc
mov
addb
jl
andl
je
and
xchg
xchg
outsb
push
add
fsubrs
or
int
clc
push
push
push
out
test
inc
dec
dec
xchg
clc
inc
arpl
dec
jmp
out
in
mov
push
cli
mov
mov
push
mov
xchg
mov
mov
lods
mov
das
xchg
cmpsb
fildll
sahf
pop
fimuls
pop
and
push
or
jbe
dec
inc
clc
xor
scas
mov
lock
sub
out
dec
in
jmp
pusha
push
mov
out
cmp
push
cltd
cmp
inc
adc
jp
adc
push
add
in
inc
inc
inc
jb
push
cmp
push
cs
call
into
sub
mov
sub
stos
in
sbb
mulb
insb
sbb
mov
cmp
xchg
mov
mov
xorl
jle
jge
outsl
or
mov
add
fcmovnb
insl
pusha
in
vcvtsd2si
gs
push
fsubrs
sbb
push
or
add
shrl
clc
clc
inc
xchg
icebp
sarl
test
xor
shl
test
sti
test
pop
sub
mov
mov
lds
icebp
mov
ret
and
xchg
cmp
push
xchg
xor
leave
dec
push
xor
sub
ret
cmp
add
lea
and
loop
mov
sahf
mov
icebp
push
iret
rcl
push
push
lret
adc
arpl
int
aas
inc
jno
iret
in
cmp
gs
ljmp
test
cmpsb
and
and
push
jmp
scas
daa
pop
dec
jp
dec
loope
inc
dec
adc
jne
lds
popf
pusha
imul
push
ja
push
cmp
adc
xchg
movsl
das
lahf
cmp
cmpsl
insb
jmp
insl
cld
dec
pop
std
rcrb
movsb
scas
pop
pop
jmp
push
add
int
sbb
push
push
push
rcrl
xor
jg
mov
ret
xor
mov
cld
lods
in
fisttpl
fisubrs
mov
lods
mov
out
push
inc
out
shrl
nop
xchg
or
mov
xchg
mov
and
cmp
pop
xchg
xchg
add
add
cltd
adc
xchg
cmp
sub
dec
pushf
add
repnz
dec
cmc
call
mov
loop
dec
insw
jge
fcom
mov
hlt
cld
fst
pop
xchg
js
push
fisubl
into
adc
push
jbe
dec
xchg
das
insb
jg
mov
inc
int3
push
cmpb
xor
ss
sbb
mov
and
push
push
das
cwtl
popa
sbb
rcrl
xchg
popf
sub
mov
fisubrl
adc
ja
push
cmp
mov
je
jbe
jp
aam
insb
out
enter
jbe
popa
sti
push
xchg
jg
pop
test
arpl
loopne
add
push
fisubl
inc
dec
pop
inc
lds
sarb
mov
jno
sub
push
mov
stos
fnstsw
movsb
cmp
cltd
pushf
inc
inc
popf
mov
jno
xchg
xor
aas
mov
into
enter
fstpl
cli
jl
ljmp
sub
loope
and
and
outsl
cmc
jmp
mov
fidivs
fdivs
hlt
addl
rolb
insb
aam
test
rorb
movsl
lea
cmp
push
dec
cmp
inc
cmpsb
jns
ds
inc
das
sub
or
xor
sub
insb
and
cltd
arpl
sbb
aam
fwait
shll
push
iret
mov
push
ss
inc
bound
push
inc
cmp
jae
jns
paddusw
movsl
add
popf
loopne
jne
sub
xchg
outsl
adc
pop
mov
push
loop
les
addr16
cmc
dec
shr
fwait
push
lock
ljmp
daa
sarb
xchg
roll
and
xchg
mov
sbb
cltd
pushf
sbb
mov
jmp
mov
movl
or
subb
sub
test
and
mov
or
hlt
in
jmp
sub
sbb
or
pop
ljmp
jne
out
mov
into
xchg
mov
dec
dec
ja
ret
roll
push
jns
ds
fwait
pushf
outsl
xor
lock
outsl
aas
pop
mov
daa
cs
pop
pop
movsl
mov
mov
push
sbb
mov
inc
or
add
mov
add
lea
xchg
sbbl
jo
or
xor
mov
xchg
fucomip
jb
popa
fs
adc
ftst
movsb
outsb
pop
pop
add
lods
arpl
fbstp
mov
ret
pop
pop
leave
mov
push
mov
xlat
in
mov
dec
pop
cmc
test
sub
mov
cwtl
push
loope
aad
cs
nop
popl
fldt
mov
cmp
cltd
scas
mov
jl
repz
clc
repnz
mov
repz
add
fadd
leave
and
daa
jle
jno
fdivs
pop
data16
jecxz
rolb
aad
jle
adc
test
inc
iret
enter
pop
cmp
cmp
push
jnp
addl
cmpsl
repnz
jnp
and
daa
mov
stos
xor
and
sbb
int
fisttpl
adc
rorb
mov
xchg
dec
mov
cld
das
xchg
push
push
jae
repnz
cmp
xor
test
sbbb
gs
in
sub
gs
inc
jl
pop
rclb
push
push
push
dec
inc
pop
xchg
sti
mov
ret
mov
shlb
mov
addr16
dec
mov
mov
inc
in
cmp
jmp
sub
xor
fisttpl
xchg
xchg
inc
or
cltd
xchg
or
push
pop
mov
xchg
push
add
push
sti
decb
jbe
add
add
hlt
out
in
insb
scas
cmp
fisubrs
and
cmp
sub
call
outsb
neg
jecxz
clc
into
add
add
jbe,pt
xorl
push
fcom
push
int3
in
pop
ret
mov
cmp
sub
inc
insl
xor
and
fmulp
mov
pop
mov
xchg
mov
rclb
lods
push
daa
push
mov
mov
xchg
incb
mov
jne
adc
imul
outsl
push
pop
outsb
pop
push
out
mov
call
push
push
push
rcl
sbb
enter
rolb
aaa
fimuls
xlat
mov
xor
ret
data16
push
icebp
mov
xor
test
rolb
rcl
sbb
cmpsl
mov
mov
clc
out
cs
movsb
lds
cmc
push
mov
fdivs
jns
or
sti
std
or
clc
cmc
call
std
out
in
mul
dec
in
pop
mov
loop
fisttpl
rcll
xchg
sarl
push
scas
lret
lretw
lret
or
inc
inc
jno
push
xor
jns
push
sub
or
jl
xlat
pop
mov
sub
sub
and
cwtl
lahf
daa
and
sbb
ret
cmp
adc
adc
add
lret
adc
aam
mov
or
push
jno
idiv
test
addr16
test
outsb
insl
in
cs
scas
popa
gs
fimuls
popa
iret
mulb
out
push
or
dec
fistps
int3
insb
ss
aas
lret
rol
test
in
ljmp
mov
mov
psadbw
jns
out
mov
movsl
cwtl
and
or
lock
adc
cltd
xchg
xchg
xchg
and
cmp
add
add
xchg
push
add
sti
ja
in
jb
add
hlt
repz
jmp
out
sbb
cld
mov
in
jge
pop
arpl
loop
fnsave
mov
push
xchg
xor
popf
fst
inc
aas
les
dec
aaa
cmp
jl
push
ds
test
adc
xor
cmp
cs
jnp
dec
xchg
mov
dec
int
xchg
loope
and
push
jg
ljmp
cmpb
roll
mov
jne
sarb
js
jne
add
mov
jmp
xchg
lock
ja
pop
fsubp
insl
push
dec
add
push
dec
aam
int
out
fsubs
leave
ret
mov
jbe
cmp
sarb
lds
lods
stos
daa
imul
lahf
lcall
or
rcll
mov
or
xor
add
and
inc
jecxz
scas
inc
xor
call
pop
call
call
fdivs
scas
loope
inc
fucom
jae
shl
mov
fst
xchg
inc
ret
xchg
out
int
lret
jno
dec
or
sub
pop
dec
mov
sub
stos
pop
and
ljmp
mov
push
xor
push
sbb
adc
adc
lds
inc
das
cmpb
test
mov
xchg
je
ret
jg
jp
mov
jns
add
xor
test
mov
push
stos
jae
push
iret
pop
rcll
xchg
je
shll
sti
adcb
mov
inc
push
mov
xchg
hlt
cmc
call
fwait
out
inc
movsl
filds
je
leave
in
mov
loop
bound
pop
jmpw
xchg
pop
pop
out
aam
push
push
cmc
cmpsl
lret
dec
rep
inc
add
cmp
loope
mov
je
xchg
mov
add
xor
popa
sub
into
push
lret
and
insl
movsl
je
pop
sbb
or
fmuls
shll
enter
inc
js
dec
jne
pop
imul
jne
aam
cltd
das
xor
pop
pop
sub
sub
cmp
pop
and
dec
xchg
xor
mov
shrl
xchg
pop
sub
sub
testb
outsb
lret
ud0
jl
jle
mov
pop
mov
gs
insb
imul
cli
arpl
hlt
je
sarl
dec
add
insb
ficomps
push
or
push
inc
mov
dec
fisttpll
mov
in
push
jecxz
mov
cmp
dec
mov
mov
stos
inc
mov
mov
cmpsl
movsl
cwtl
lret
es
popf
nop
dec
inc
lods
jecxz
xchg
mov
icebp
and
aaa
push
pop
xchg
lcall
fwait
shll
xchg
fiadds
std
pop
pop
je
mov
div
and
add
xchg
out
in
imul
ficompl
loopne
fisttpll
aad
push
loop
dec
dec
js
fdivrs
int
inc
cmp
jae
rol
ljmp
jge
into
inc
pop
lods
add
xor
sub
les
loope
fwait
cmp
adc
lret
xchg
ret
jg
mov
mov
addb
stc
dec
jl
jnp
mov
mov
jne
popf
in
cmp
jo
insl
loop
loope
xchg
andl
fcompl
rcr
in
mov
add
pop
pop
int3
lret
hlt
lock
ds
inc
inc
inc
mov
mov
dec
fildll
mov
je
lret
add
lods
mov
mov
in
dec
lret
mov
sub
mov
push
xchg
or
add
xor
cld
js
fstl
jno
hlt
clc
repz
sbb
jmp
xlat
cli
xlat
jecxz
pop
pop
xlat
jmp
iret
pop
nop
cmp
jns
xchg
test
fbstp
icebp
push
jno
push
cmp
push
sub
push
xor
inc
daa
lret
xor
mov
pop
dec
dec
push
push
pop
sub
and
fistpl
push
les
mov
out
push
pop
push
push
adc
pop
cwtl
das
sub
push
sub
cmp
or
je
imul
imul
push
fwait
jl
adc
pop
lahf
push
arpl
ljmp
imul
inc
std
ljmp
inc
pop
out
lds
xchg
mov
scas
scas
lods
movsb
mov
mov
adc
lods
lods
movsl
rorl
mov
jecxz
sbb
sarl
xor
lret
out
xchg
sub
or
xchg
das
cmp
dec
test
sub
sub
sti
jp
xlat
jne
dec
call
jmp
sbb
xchg
sub
and
nop
and
xlat
fcmovnu
fnstsw
popa
add
adc
leave
push
movsb
fisttpll
jp
addr16
cmp
test
mov
test
inc
xor
gs
int
mov
clc
xor
and
push
lret
es
pop
sbb
fisubrs
dec
adc
and
inc
mov
cmpb
int
cmp
jnp
xlat
mov
iret
jne
addr16
sub
outsb
push
xlat
inc
mov
fdivrl
jo
pop
pop
push
aam
leave
or
inc
dec
leave
dec
pop
dec
adc
push
mov
inc
and
mov
mov
mov
out
pop
data16
test
cmpsl
les
xchg
sbb
mov
test
int
xchg
cmp
mov
mov
xor
mov
and
lock
repnz
and
jecxz
call
xor
imul
in
jno
mov
jne
ror
adc
enter
dec
dec
dec
or
ror
aad
inc
jno
mov
ds
mov
leave
inc
xor
ss
inc
cmp
and
push
cwtl
lahf
ret
sub
sbb
ret
inc
push
adc
mov
add
lods
adc
adc
jle
lahf
outsl
dec
nop
xchg
and
imul
jbe
fs
jge
jne
pop
pop
imulb
mov
cli
call
jmp
mov
in
lock
mov
mov
mov
xor
jle
mov
inc
stc
dec
ljmp
movsb
mov
in
and
arpl
push
lcall
mov
test
fisubs
xchg
xchg
std
lock
and
or
sbb
mov
icebp
in
and
cmpsl
in
fcmovu
cmp
ljmp
mov
gs
fcomip
inc
inc
inc
push
cs
cmp
xor
and
ret
and
sub
ja
pusha
mov
sbb
sbb
sti
notb
lret
mov
loope
addl
mov
xchg
stos
movsb
mov
es
out
cmc
xor
pop
xchg
jecxz
cs
adc
out
add
fisubrs
push
dec
inc
xchg
mov
dec
enter
ret
scas
frstor
mov
dec
fbld
mov
mov
xor
aaa
shlb
nop
scas
jecxz
pushf
fwait
pop
pop
call
xchg
xchg
inc
inc
mov
jno
lret
rcrb
cmp
jb
inc
idivl
loopne
and
mov
sub
sub
inc
add
fisubrl
jno
loop
iret
push
and
in
fidivl
mov
cmpsl
push
rcl
pop
arpl
sbb
lcall
jae
xchg
inc
fnstcw
jno
rolb
cs
divb
ss
outsl
sub
mov
gs
les
loope
and
sbb
fucomi
push
or
mov
jne
jmp
xchg
imul
hlt
pop
push
je
clc
fs
and
xlat
mov
mov
push
dec
fistpl
pop
push
dec
loope
lret
into
int
mov
ret
shlb
push
roll
scas
in
sti
mov
lcall
in
mov
imul
ficoms
outsb
xchg
ret
jne
add
push
add
add
xor
mov
std
or
bnd
lret
xor
cmp
fisubrl
out
in
loopne
mov
add
jecxz
outsl
push
outsl
inc
jae
sti
sbb
iret
insb
enter
lods
adc
data16
dec
shl
inc
inc
jo
inc
push
cmp
cmpsl
xchg
jnp
mov
xchg
mov
sub
sub
data16
add
es
lahf
daa
aaa
sbb
push
into
xor
popf
iret
xchg
push
pop
mov
int
data16
push
jnp
clc
adcb
jb
mov
imulb
pop
js
push
pop
jmp
insl
fmuls
push
int3
xor
xor
push
decl
pusha
ffreep
int
inc
or
ret
mov
int
sbbb
ucomiss
mov
sbb
aad
cmpsb
movsl
cltd
pushf
adc
adc
or
movsl
xchg
xchg
mov
popf
or
push
imull
inc
add
sahf
pop
scas
idiv
sub
and
cmc
pop
mov
adc
repz
fistps
loop
xlat
pop
aam
lds
psrlq
inc
adc
pop
enter
pop
inc
aas
inc
inc
jge
push
aam
xor
ja
leave
pop
xor
xchg
inc
or
pop
and
and
rcrb
pop
jmp
push
adc
or
mov
mov
jp
loopne
orl
cvtps2pd
stos
jno
cmp
mov
in
fcoml
imul
and
arpl
xor
fwait
shrb
jns
push
push
cld
sbb
sub
dec
ret
repnz
hlt
jmp
loopne
test
xor
cmpsl
scas
lods
stc
mov
xor
mov
aaa
sbb
xchg
dec
inc
scas
mov
xchg
cmp
fwait
mov
clc
testl
and
or
and
out
test
loopne
xor
insb
pop
pop
or
fst
jg
pop
or
rcl
js
popa
in
inc
add
xor
jae
aaa
cmp
out
adcb
cs
fnstenv
sub
jo
mov
insb
test
dec
xor
outsb
fwait
inc
sub
sahf
jecxz
and
mov
xchg
orb
adc
lea
js
mov
or
sbb
es
insl
pusha
cltd
loope
add
data16
mov
pop
push
mov
dec
fsts
roll
movl
orb
push
call
scas
idivl
jle
add
int
popf
in
cli
outsb
inc
fwait
sub
cs
mov
mov
sbb
cltd
pushf
pop
pop
pushf
aad
inc
and
xchg
imul
jnp
push
add
stc
cld
jo,pn
sub
repnz
and
adc
out
test
xchg
sub
psubd
pop
adc
fcmovu
jae
clc
sbb
sub
add
aad
xchg
xor
dec
ja
cmp
loopne
inc
fmull
push
cmp
jb
gs
pop
xlat
sub
mov
push
mov
mov
xor
into
adc
adc
dec
xor
or
xorb
scas
sahf
jp
dec
sbb
jb
repz
mov
inc
or
punpcklwd
and
repnz
idivb
test
push
rolb
dec
leave
int3
out
insb
push
ret
push
js
mov
mov
inc
push
repnz
mov
fisubrl
shl
aad
pop
pop
cltd
pushf
inc
and
adc
inc
lcall
or
movsl
push
roll
daa
mov
sub
cli
xor
cmc
adc
cltd
cmp
xchg
xor
imulb
and
ljmp
adc
dec
movsl
out
mov
xorb
pop
xchg
jecxz
shrb
adc
ja
dec
push
dec
dec
je
pushl
inc
jge
xor
out
cmp
or
xor
mov
pusha
xor
sarb
sub
inc
push
loop
and
jecxz
mov
mov
pop
sbb
es
and
mov
xchg
xor
jmp
test
lea
mov
and
orb
sahf
bound
pop
test
adc
push
fsts
imul
lods
jmp
sbb
xchg
icebp
inc
setae
fistps
out
inc
add
jg
mov
sub
std
test
and
frstor
in
dec
mov
push
nop
popl
push
cmp
adc
mov
mov
ficoms
mov
add
add
sub
xchg
pop
jno
add
jne
xchg
pop
imul
or
in
adc
rcr
jg
lock
rcl
dec
rorb
sbb
dec
dec
jge
cld
add
inc
mov
mov
ds
lret
xor
ss
sub
cs
mov
dec
pop
and
mov
xlat
pop
nop
xchg
pop
movlps
test
addr16
mov
leave
and
rorl
repnz
mov
xchg
xorb
lret
pushf
notl
fiaddl
push
pop
pop
je
popa
dec
push
rcr
add
dec
loop
jne
into
std
pop
pop
xchg
ljmp
mov
xchg
fstps
mov
mov
cmpsl
inc
mov
cmc
jne
mov
mov
mov
mov
pushf
nop
sbb
mov
es
test
mov
adc
idiv
sub
inc
lds
jb
hlt
repz
fcoms
cmpsb
loopne
imul
fcom
je
adc
iret
rcl
scas
lcall
bswap
dec
dec
outsl
aas
pushf
and
inc
inc
shl
sub
cmp
cli
sub
xor
dec
pop
dec
daa
sub
adcb
mov
cmp
sbb
mov
cmp
push
dec
or
mov
cmpb
roll
incb
stos
movsb
mov
xor
je
icebp
pop
push
in
push
pop
jge
insl
pop
pop
repz
imul
add
add
pop
cs
sarb
call
mov
std
mov
mov
mov
mov
movsb
test
jmp
mov
in
inc
push
loope
lcall
xchg
xchg
mov
push
or
orl
call
gs
std
ljmp
cmc
and
inc
pop
dec
sub
loopne
popf
mov
mov
sbb
sub
jns
nop
lea
push
out
aad
dec
dec
ja
dec
roll
pop
inc
inc
aaa
cmp
cmp
sub
jge
mov
cmp
xor
push
pop
cmp
and
ss
lahf
xor
mov
xor
fs
or
mov
adc
adc
test
inc
imul
jo
jno
mov
test
imul
pusha
popa
pop
sahf
inc
mov
lret
ljmp
push
push
cld
push
mov
lret
mov
sarl
mov
out
push
jns
or
test
push
sbb
fwait
sahf
ss
stos
jl
loopne
mov
xchg
or
incb
ja
lcall
mov
pop
mov
cmpsb
out
hlt
hlt
int
imul
out
jecxz
ret
sub
sbb
ja
lea
mov
stc
out
push
iret
push
fstps
ror
push
jecxz
push
pop
enter
dec
cmpsb
aam
inc
pop
xor
cmp
mov
xor
jo
mov
fisubl
sub
add
imul
lods
pop
and
and
cltd
les
or
call
adc
mov
push
and
add
mov
clc
xchg
sti
pop
jle
jae
pop
jmp
jnp,pn
insb
loope
sbb
xlat
imulb
mov
ss
pop
pop
push
add
add
ffree
pop
dec
inc
stc
dec
xchg
push
inc
imul
roll
and
mov
mov
cmp
add
sub
popf
mov
lahf
rcr
movsb
popf
sbb
or
outsl
sahf
xchg
out
lahf
sub
ret
decb
dec
mov
push
setae
hlt
lock
cmp
jns
out
loop
imul
call
test
pusha
push
mov
in
shlb
arpl
in
and
insb
aaa
push
xlat
adc
lret
call
dec
dec
les
cmpb
jg
cmp
mov
lods
outsl
das
dec
sub
cs
and
and
mov
sbb
mov
movlps
adc
and
dec
insb
push
or
jl
scas
cmpsl
jge
out
lret
std
xor
arpl
stos
pusha
mov
loopne
arpl
fsub
punpcklbw
cmpsb
mov
adc
pop
bound
sarb
shlb
int
mov
daa
mov
cmpsl
stos
xor
mov
xlat
sbb
dec
lods
lcall
jmp
sub
xchg
xchg
mov
adc
or
aaa
xor
test
outsl
push
imulb
hlt
jo
in
cmpsl
xlat
jae
ljmp
pusha
out
push
in
cs
push
push
xor
inc
pop
inc
aad
cltd
outsb
hlt
pop
dec
int
xor
aas
inc
jle
divb
cmp
sti
popa
leave
push
xor
gs
mov
sub
sub
jl
mov
inc
cltd
movsb
mov
push
dec
mov
push
mov
cmp
sbb
addl
jns
scas
adc
std
das
data16
icebp
pop
subl
xchg
jnp
sbb
sbb
ljmp
push
push
jmp
mull
mov
into
lret
dec
add
or
bound
mov
mov
std
lods
fistpl
stos
les
mov
dec
xor
sbb
lods
fwait
sahf
adc
cmpsb
fsub
pop
or
adc
fmulp
sbb
add
mov
jns
push
cld
sti
jb
sti
cmp
lods
cli
call
insl
sbb
xor
outsl
cli
sbb
nop
jmp
dec
push
jecxz
rcll
arpl
push
stos
rorb
outsl
fidivrl
inc
inc
mov
dec
cmp
insl
enter
xor
ds
mov
sub
push
mov
and
insl
sbb
sbb
ljmp
or
or
sbb
dec
adc
lea
scas
cmpsl
or
jno
lock
pusha
movsb
push
pop
inc
stos
pusha
in
jne
test
insl
fcomi
outsb
dec
out
insl
pop
pop
jbe
gs
push
fsubs
dec
ret
mov
or
out
inc
dec
mov
ret
rclb
push
mov
jo
stc
sbb
xlat
and
cmpsl
mov
cmpsl
cwtl
xchg
dec
sbb
push
mov
imul
xchg
xchg
lahf
jecxz
or
pop
leave
cld
orb
nop
pop
mov
out
dec
das
hlt
hlt
int
imul
out
mov
in
adc
fdivrl
and
test
cmpsb
mov
iret
shr
setb
aad
adc
jno
loop
inc
aas
ret
rol
xchg
xchg
lret
shll
das
cmp
mov
cmp
sub
std
and
push
cmp
loope
sbb
sbb
lcall
mov
mov
mov
test
adc
xchg
mov
idiv
xchg
jne
addr16
test
sub
xchg
loope
dec
mov
pop
fs
pop
out
cmpsb
or
or
push
cli
stc
or
xchg
leave
dec
xchg
outsb
jecxz
out
pop
add
out
in
icebp
mov
sbb
stc
mov
sub
mov
test
sub
adc
and
mov
sbb
mov
sbb
orl
adc
cmp
pop
adc
or
and
pushf
clc
test
in
dec
sub
out
bnd
adc
cmc
call
add
in
ja
or
jecxz
std
mov
xchg
ss
push
mov
rcl
jl
in
pop
xchg
lret
jnp
dec
movsb
out
inc
je
popf
xchg
dec
cmp
cmp
repz
jnp
xchg
xor
shlb
mov
xor
pop
sub
and
mov
pop
sbb
mov
repz
push
sbb
mov
xchg
fstl
cmpb
das
test
jns
lret
jo
insb
fs
mov
jne
scas
push
insb
xchg
or
cmp
iret
jno
jae
leave
push
push
std
movsb
inc
loope
dec
into
int
lret
rol
cmc
cmp
into
push
scas
jg
mov
jo
ss
add
lahf
in
mov
mov
in
sbb
stos
lahf
popf
nop
inc
test
adc
mov
xchg
nop
push
or
xor
test
loop
hlt
repz
add
ljmp
loop
sub
mov
push
scas
xor
in
fcmovnu
aaa
push
push
cwtl
cs
xlat
aad
sbb
xchg
sbb
sarl
inc
adc
ss
ret
sub
cmp
sbb
xor
sbb
mov
inc
cmp
sub
jle
sub
push
ljmp
push
sbb
adc
dec
adc
and
adc
pop
mov
stos
std
clc
adc
outsl
jb
push
push
push
add
pusha
pop
loope
js
arpl
imul
or
cmovg
adc
inc
dec
cld
int3
lds
and
ret
inc
into
mov
shll
mov
lret
xor
dec
mov
mov
lods
and
popf
jmp
scas
adc
push
popa
test
xor
sbb
movsb
xchg
incl
sbb
fwait
inc
clc
daa
xchg
aas
mov
jo
xchg
push
repnz
and
test
out
sbb
lds
hlt
mul
out
out
jl
pop
pop
loopne
iret
rolb
jns
lds
xor
inc
cmp
mov
xlat
inc
ds
cs
sub
cs
push
lds
dec
pop
cmpsb
lods
cmp
pop
mov
sbb
popf
rclb
vrsqrtps
mov
xchg
sbb
cwtl
pop
or
xorb
test
jo
cmc
inc
adc
jbe
nop
movsb
push
inc
dec
lods
pusha
cltd
in
adc
arpl
push
mov
xchg
pop
iret
call
pop
push
push
jmp
jg
mov
sti
mov
ret
dec
mov
lds
push
mov
mov
mov
addr16
cmpsl
lods
stos
daa
imul
lahf
lret
fbld
sub
aad
xchg
cmp
imul
cmpb
aam
cli
stc
dec
mov
jl
mov
cmp
xorl
call
pop
jecxz
notl
fcom
dec
mov
outsl
mov
aam
push
push
sbb
lret
jecxz
inc
outsl
fidivl
mov
imul
fnsave
das
mov
and
lahf
inc
stos
inc
sahf
sub
and
int
dec
mov
sbb
sbb
adc
lds
mov
es
jg
push
xchg
jnp
mov
jl
jge
cld
ds
mov
add
cmp
push
outsb
outsb
testl
lock
pop
xchg
push
jne
and
fisttpll
ret
inc
dec
leave
mov
rol
pop
pop
pop
mov
xor
add
mov
dec
lcall
mov
mov
and
and
scas
fwait
sahf
dec
aas
stos
jg
xchg
xchg
cmp
or
push
fwait
or
cmp
sti
mov
adc
popf
cmp
jo
mov
repnz
sub
ljmp
cmpsl
icebp
loop
adc
std
pop
stos
fcmovu
jg
pop
pop
cwtl
loop
rolb
add
pop
xchg
inc
inc
pop
pop
pop
scas
cmp
cmp
cmp
xor
int3
pop
je
stos
mov
cmp
push
push
aaa
jmp
and
lahf
loope
lcall
shlb
in
adc
sbb
mov
jl
fadd
test
incb
stos
movsb
mov
cmp
repz
pusha
insl
bound
dec
ja
pop
and
pop
xchg
addr16
push
push
iret
adc
int3
lret
cli
lock
mov
aaa
inc
or
mov
scas
lods
insb
mov
mov
fisubl
cltd
mov
and
lcall
xchg
push
lods
nop
cmp
or
dec
add
sbb
cmp
inc
ss
sbb
cli
stc
cld
adc
mov
repz
mov
out
sbb
scas
add
fbld
lods
mul
out
pop
repnz
inc
push
pop
pushf
out
xorl
je
ret
roll
inc
push
cmp
repz
jnp
mov
mov
pop
sub
popf
or
mov
and
pop
adc
sti
pop
sbb
lret
adc
mov
xchg
adc
jg
add
jg
js
add
cmpb
adc
push
xor
sub
pop
jmp
jecxz
inc
imul
pop
or
push
cli
fstl
push
lret
into
inc
xchg
inc
dec
aaa
dec
mov
mov
or
stc
mov
xor
push
in
mov
enter
jne
mov
fwait
lcall
cmp
mov
xchg
push
movsb
cmp
push
inc
nop
xor
lret
inc
nop
daa
out
inc
popf
cs
lds
mov
jae
mov
jmp
loopne
imul
fcom
dec
dec
push
popa
iret
iret
sbb
sbb
push
test
dec
dec
jo
mov
rorb
cmp
cmp
cli
xor
test
out
pop
lods
mov
das
cs
and
and
xor
dec
mov
push
xchg
aam
sub
push
scas
jnp
or
nop
and
jl
mov
mov
xchg
popf
xchg
sbb
imul
dec
loope
sub
arpl
xchg
and
add
rcr
sbb
push
add
ret
andl
rolb
dec
inc
or
mov
incb
mov
in
jmp
test
pop
sub
mov
mov
pushf
inc
dec
adc
push
mov
and
add
popa
dec
push
addb
xchg
add
xor
xchg
push
repnz
and
sub
add
test
add
scas
call
hlt
jecxz
fst
pop
sahf
inc
push
pop
sahf
fcom
enter
adcl
or
inc
inc
addr16
push
xor
mov
sti
int3
jns
mov
or
and
mov
mov
int
xchg
push
adc
popf
movsl
sbb
pop
mov
mov
jmp
test
stc
add
cmpb
xchg
or
jp
push
fwait
xchg
xor
out
and
pop
pop
mov
jmp
push
push
cs
push
dec
lret
lret
std
aas
mov
icebp
inc
dec
and
lds
rcll
mov
outsl
cli
in
movsl
xor
inc
mov
mov
bound
jmp
xchg
xchg
adc
pop
adc
or
cmp
add
ss
mov
sti
or
lock
push
jmp
repnz
loope
sarb
out
and
out
iret
rcrb
aas
push
push
nop
fcmovb
lret
out
xchg
aas
inc
push
cmp
imul
out
outsl
xor
mov
pop
inc
xor
and
add
pop
leave
mov
mov
xor
sbb
or
scas
sbb
dec
addl
inc
mov
test
jae
pushf
cwtl
ljmp
insl
cli
bound
cmp
pusha
pop
pop
sbb
push
add
fwait
sbb
cltd
clc
filds
lret
out
pop
push
ret
mov
push
filds
cmpsb
push
sahf
mov
sbb
repz
and
mov
jne
out
rcrl
data16
fistps
xchg
adc
mov
push
popf
push
or
lret
push
add
les
sti
and
mov
icebp
out
scas
into
ss
sbb
ja
test
ficomps
lds
xlat
pop
fs
fiadds
dec
mov
or
push
psrlw
aas
pop
cmp
cmp
subb
or
arpl
shrl
daa
push
dec
pop
lahf
push
cmp
inc
es
cmpsb
out
sbb
stos
xchg
sub
mov
mov
push
dec
mov
xchg
jb
add
mov
mov
mov
popl
loope
sub
arpl
repnz
icebp
int3
jae
pop
add
sbb
adc
int3
lret
cli
lock
mov
aaa
inc
or
mov
scas
lods
insb
mov
mov
flds
imul
ret
sub
movsl
rcl
repz
aad
xor
xchg
xchg
xchg
or
mov
add
sub
idivl
test
sti
out
jl
repnz
hlt
sub
dec
sub
xor
test
in
pop
popa
in
in
pop
and
lahf
aam
dec
xchg
dec
sbb
dec
enterw
les
in
jb
jae
xor
sahf
jl
mov
inc
outsb
arpl
sub
push
cs
arpl
pusha
and
movsl
mov
ror
test
adc
xchg
adc
mov
out
jg
pop
pop
addl
ret
outsl
xchg
jmp
aam
jbe
lcall
icebp
int3
arpl
das
pop
push
loope
push
dec
frstor
push
xchg
movsl
lock
popa
jg
into
int
dec
cmc
iret
pop
cmp
ljmp
sbb
xor
mov
inc
stos
test
lods
jns
cmpsb
cmp
pushf
xchg
movsl
jne
xchg
push
mov
or
cltd
xor
cmpsb
mov
incl
mov
mull
mov
stc
push
loop
out
inc
das
hlt
hlt
fstl
outsb
xor
add
aad
loopne
gs
sub
or
ss
iret
pop
pop
dec
nopl
add
xchg
jns
lea
xchg
inc
inc
inc
cmp
push
and
dec
inc
xor
xor
rdpmc
rorb
mov
pop
cmp
stc
and
loop
xchg
mov
ret
int
mov
adc
mov
mov
xlat
mov
or
push
xlat
dec
outsl
jb
xor
lock
addr16
movsl
sahf
lcall
mov
lcall
push
rcr
push
push
dec
cli
dec
rcrl
into
int
pop
mov
ret
or
mov
loopne
mov
mov
mov
movsl
fsubrs
cmpsb
mov
inc
dec
pop
arpl
sbb
popf
xchg
xchg
adc
push
inc
pop
adc
sbb
add
add
ss
ror
cli
stc
test
add
icebp
mov
and
in
adc
pusha
addr16
loop
adc
jo
fcom
xchg
mov
ficoms
out
ror
push
pop
cmp
jbe
mul
addb
clc
fildl
mov
das
das
int3
sub
mov
inc
addl
test
movsl
mov
mov
ss
adc
ret
fists
adc
mov
addb
sbb
mov
das
dec
call
imul
ds
mov
pop
pop
or
dec
push
leave
mov
xchg
push
rcl
scas
dec
ljmp
ret
mov
jge
cmc
imulb
nop
jl
std
mov
fmull
imulb
insl
sub
lods
lock
ljmp
sahf
xor
cmp
or
push
mov
clc
and
push
cmp
stos
pop
jp
das
repz
shrb
jmp
loop,pn
int
shlb
fcoms
test
jmp
out
dec
je
mov
pop
sbb
xorl
cmpsb
inc
movsl
jl
cmp
jb
pop
xchg
iret
jmp
sub
lds
cmp
leave
add
popw
pop
shll
sti
in
push
push
push
inc
pop
jns
in
mov
fsubr
rolb
sarb
pusha
lock
mov
test
clc
mov
mov
dec
insb
inc
cwtl
pop
call
sub
mov
fdivrs
add
sarb
outsl
les
scas
mov
dec
pop
mov
arpl
push
mov
shlb
xchg
jge,pt
jnp
insb
rcll
or
push
or
aas
add
lock
push
inc
stc
jge
aas
add
jnp
icebp
hlt
repz
jmp
loop,pn
int
mov
jno
call
dec
stos
adc
sar
pusha
mov
or
sub
pop
rolb
xchg
jl
cmp
jb
pop
xchg
imul
sub
fadd
push
cmp
and
add
shll
sti
aad
push
push
push
inc
pop
jns
loope
mov
sub
rolb
sarb
pusha
push
enter
ret
sarb
imul
cmp
dec
cld
xor
rclb
push
loopne
xchg
adc
mov
into
leave
out
sub
sbb
jle
or
idivl
push
into
out
mov
pusha
sub
and
mov
loop
dec
movsl
push
xor
jns
addr16
xchg
xchg
shrb
push
mov
clc
and
push
cmp
stos
pop
mov
das
repz
push
sub
jmp
loop,pn
int
shlb
fcoms
sarb
xor
cmp
mov
adc
mov
xor
cmp
andl
fwait
jb
ret
hlt
rcrl
ss
outsb
pop
sub
fnsave
data16
sbb
mov
cs
adc
or
inc
mov
mov
push
fcmovb
addl
mov
mov
gs
push
sbb
cmp
fs
push
pop
icebp
aam
cltd
pop
add
popa
xchg
push
std
xor
and
xlat
push
add
in
pop
dec
and
out
sti
scas
xlat
push
xor
inc
loope
ljmp
movsb
movsb
push
cmp
inc
js
ja
lret
sub
movsb
aam
xor
jbe
push
push
mov
add
bound
push
cmp
stc
mov
loopne
dec
xor
pop
imul
addl
outsl
dec
sub
jnp
sub
pop
shlb
jae
and
mov
sbb
mov
enter
cmp
inc
or
sbbl
add
jnp
outsl
xor
ss
sub
fidivl
movsb
or
cmp
sbb
mov
leave
in
push
push
dec
rcpps
inc
mov
mov
mov
jg
mov
aas
jge
outsl
mov
jne
add
ja
outsb
xchg
dec
divl
lahf
fs
xor
movsl
pop
add
and
sahf
dec
dec
mov
das
popa
xchg
dec
lock
jp
xor
ret
jmp
inc
adc
mov
lret
mov
sbb
test
inc
xor
jmp
mov
mov
mov
pushf
inc
ja
jne
xchg
xchg
into
sub
movsb
roll
dec
or
sbb
inc
add
cld
pop
xor
inc
das
hlt
jg
cmp
mov
daa
in
ja
xor
imul
xchg
les
fsubl
and
imul
xchg
adc
pop
lods
jg
dec
xor
add
fidivrs
jle
sahf
or
xor
push
sub
das
bound
es
pop
sbb
bound
sbbb
push
es
mov
push
int
test
ja
xor
mov
jbe
call
cmpsl
imul
popa
sbb
pop
add
cmp
pop
arpl
and
dec
push
add
in
pop
lods
sbb
rcll
sti
scas
xlat
push
dec
sbb
inc
pop
mov
cmpsl
ja
movsb
movsb
push
cmp
inc
js
jne
lret
sub
cmpsb
aam
xor
popa
dec
push
push
mov
add
bound
cmp
stc
mov
leave
add
repnz
lret
xor
call
sub
adc
jecxz
jo
ljmp
sbb
mov
mov
mov
dec
dec
stc
pop
mov
mov
cmp
push
mov
jge
pop
nop
out
push
jbe
daa
jecxz
cmpsl
ds
and
aad
popa
es
ret
cli
or
push
adc
dec
out
shr
or
mov
cmp
pushf
adc
test
jnp
daa
mov
iret
xchg
dec
mov
push
add
dec
inc
cmp
gs
popf
insb
lcall
push
push
sub
push
xchg
leave
icebp
sub
es
mov
push
add
loopne
movsl
adc
mov
shr
fistl
sbb
inc
cltd
mov
mov
jecxz
cwtl
push
xor
fisubrl
xchg
xchg
mov
or
movsl
push
add
mov
inc
cli
data16
push
cmp
in
jnp
icebp
hlt
repz
fdivrl
in
loopne
xor
in
arpl
inc
xor
adc
inc
dec
aad
sbb
dec
cmp
inc
mov
fsubl
cmp
cmp
je
and
sub
sbb
pusha
and
lahf
and
je
pop
sbb
adc
pop
js
fisttps
jns
decb
dec
fadd
test
push
jns
jnp
pusha
add
mov
add
mov
imul
dec
mov
dec
adc
cwtl
pop
call
sub
mov
fdiv
xchg
mov
sbb
rcl
or
enter
fmull
lock
idiv
cwtl
adc
call
nop
movsb
ja
mov
dec
jo
cltd
sub
loope
cld
push
fprem
js
enter
shl
xchg
pop
inc
add
testl
or
aas
mov
and
xor
repz
jmp
sub
jp
icebp
and
out
stos
mov
and
inc
pop
inc
iret
rcl
insl
add
adc
gs
lea
mov
aaa
repz
xchg
dec
jl
pop
fwait
leave
sahf
jno
ss
lcall
clc
pusha
and
fnstsw
ret
repz
adc
dec
test
mov
mov
rolb
jp
xchg
mov
fnsave
jns
outsb
xchg
dec
rorl
fs
int3
push
xor
sahf
dec
dec
mov
inc
dec
int3
mov
or
sub
pop
inc
iret
push
or
iret
and
mov
out
out
mov
push
cld
xchg
lahf
jg
lods
aaa
push
hlt
iret
ja
movsb
das
push
ljmp
js
nop
sub
fadds
ja
rorl
pop
push
int
cld
mov
cld
cli
std
lock
mov
daa
and
and
jg
cli
daa
jmp
pushf
xor
jo
cld
cmp
jnp
sbb
rorb
mov
or
dec
dec
dec
inc
aas
in
inc
inc
inc
out
movsb
pop
xchg
jp
repz
xor
xor
xor
push
cmp
sbb
push
sbb
cmp
movlps
mov
sub
jmp
addl
jl
xlat
or
or
mov
adc
lods
insl
insl
sbb
inc
xchg
das
xchg
pop
pop
or
inc
jno
push
stc
xor
sub
in
pusha
or
call
mov
iret
inc
pop
idivl
lock
insl
dec
dec
dec
imulb
jmp
mov
loope
dec
test
inc
sub
mov
xchg
cmp
lds
mov
push
add
pop
inc
add
mov
std
mov
inc
in
pop
xor
test
cmp
in
jl
xor
in
xor
inc
pop
mov
sbb
dec
pop
xor
inc
push
xor
cmp
lret
and
cs
imul
pop
and
es
push
sbb
or
out
pop
adc
pop
mov
mov
cmp
scas
loope
in
jl
sub
pop
aaa
fsubrl
mov
push
insb
mov
pop
pop
sbb
jmp
mov
xor
pop
pop
push
dec
push
jmp
push
ret
xchg
aas
push
xchg
push
ficomps
mov
outsl
pop
cld
mov
sbb
mov
mov
cltd
lds
js
mov
das
xchg
mov
sbb
fwait
pop
outsb
rorl
and
dec
cld
dec
arpl
jns
dec
push
or
push
int
ds
lods
mov
ss
loopne
jns
push
and
les
sbb
fildl
aam
scas
cmc
lods
adc
cmp
scas
hlt
lods
test
sub
cmp
aam
je
les
jnp
ret
sbb
es
popa
ficomps
mov
push
sbb
dec
adc
sbb
push
mov
push
lcall
xor
cmpsb
fldcw
scas
je
and
enter
pop
fs
std
push
jns
push
adc
dec
ss
push
or
sub
push
push
dec
inc
dec
loope
outsb
or
int
push
and
ret
aaa
int
int3
dec
aam
pop
cld
mov
scas
imul
test
adc
pop
aaa
mov
sbbb
lods
mov
xchg
cmp
imul
mov
and
repnz
inc
add
scas
adc
push
gs
cmp
in
int
ljmp
inc
xor
in
inc
sub
inc
inc
lods
adc
fs
sbb
dec
pop
inc
adc
pop
xor
ds
repnz
divb
stos
mov
xor
xor
leave
pop
pop
push
jmp
aaa
and
pop
push
sahf
lret
cmovs
imul
mov
pusha
mov
fmul
addb
or
mov
scas
adc
scas
idiv
jne
push
imul
ja
jle
fbld
mov
cltd
pop
jmp
sub
push
enter
dec
leave
jecxz
push
or
mov
cmp
into
mov
scas
dec
lods
lret
fcmovnb
mov
xor
repnz
cmp
jo
lcall
daa
mov
lods
mov
mov
sub
add
lock
jecxz
stc
cld
ja
rolb
xor
dec
call
out
pusha
addr16
loop
jnp
lock
or
mov
or
shl
aam
jle
test
fs
jecxz
fisttpl
lret
or
nop
test
push
adc
mov
xor
ss
sub
mov
cmpsb
lods
and
int3
dec
sbb
adc
shrl
popa
mov
sbbb
roll
jns
fimull
mov
dec
jbe
mov
insb
imul
jnp
jae
pop
jecxz
mov
popf
push
in
test
lods
in
and
push
into
int
inc
pop
inc
negb
adc
mov
in
mov
mov
lods
daa
imul
loope
xor
cwtl
icebp
sub
adc
movsb
xchg
xchg
sub
mov
mov
push
or
xchg
add
sub
adc
xchg
fisttpl
std
lock
aam
dec
add
in
inc
jne
sub
call
hlt
pop
fisttpl
rorl
enter
js
pop
cmp
jecxz
inc
inc
mov
int
jns
leave
adc
mov
scas
daa
cmp
sub
jb
imul
cmp
lcall
ror
lods
mov
push
gs
int
popf
pop
test
rol
jp
add
jle
xchg
scas
jae
lea
out
cmc
insl
jb
pop
mov
jecxz
pop
pop
xlat
sbb
xchg
push
loope
dec
mov
inc
mov
mov
push
mov
mov
mov
mov
in
inc
movsb
ret
fstpt
ljmp
lock
cmc
test
xchg
adc
xchg
cwtl
xchg
xchg
pop
lcall
push
add
xchg
and
sti
or
xchg
add
hlt
outsl
mov
push
jmp
pushf
sti
sub
rcr
sub
push
aam
rcl
jge
or
inc
out
rolb
into
add
dec
aaa
cmp
idivb
pop
jmp
arpl
mov
xor
insb
in
mov
mov
lods
scas
xchg
pop
adc
stos
ret
out
imul
pushl
cmpsl
test
aad
jnp
lea
mov
cs
nop
mov
insl
insl
cli
push
out
mov
pop
jno
inc
pop
pop
add
rorl
inc
in
arpl
mov
lock
sbb
push
rcll
mov
cmp
sub
test
rol
mov
enter
mov
nop
dec
dec
sub
or
xchg
or
and
das
lcall
out
xor
jg
std
jns
loop
out
sbb
mov
bnd
jmp
mov
in
pusha
cwtl
imul
jecxz
imul
fcmovbe
insl
rorl
and
push
out
lock
add
mov
push
inc
cmp
orl
stos
outsb
ja
mov
lods
xor
sub
pushf
adc
pop
pop
dec
movsb
inc
fwait
movsb
or
mov
jge
xchg
pop
adc
mov
mov
popf
jns
fcmovnu
jns
clc
cmp
cmp
cmpsb
daa
xor
mov
pop
movsb
xchg
in
out
dec
pop
xor
popa
fs
jb
pop
jecxz
loop
or
outsl
nop
scas
dec
push
push
cli
popa
mov
or
mov
cld
or
dec
data16
loop
lahf
xor
mov
rcrb
lods
out
dec
aam
movsb
mulb
and
cmp
pop
pop
adc
pop
mov
xchg
xchg
mov
cmp
ss
pop
push
add
inc
call
jbe
jbe
add
in
test
arpl
stc
xchg
jecxz
popa
mov
gs
gs
sbb
inc
cwtl
rcl
ja
dec
movsl
dec
dec
ret
mov
xor
pop
xchg
cmp
popa
cmp
into
popa
mov
cs
xor
pop
inc
mov
pop
cmpsb
mov
sbb
sahf
shlb
enter
iret
adc
pop
xchg
sbb
add
lea
jns
sub
jl
mov
push
inc
addr16
loopne
jne
cs
xor
pop
jnp
frstor
add
pop
adc
leave
inc
lret
into
test
ret
aaa
push
fidivs
mov
mov
jecxz
mov
cmpsl
stos
jecxz
stos
inc
lods
sahf
lahf
mov
in
sbb
cltd
cltd
pushf
fwait
adc
sahf
push
pushf
or
xchg
dec
lods
lcall
add
add
dec
or
jb
jle
rorb
jp
addr16
ljmp
mov
fnsave
hlt
sbb
jae
fcmovnbe
iret
mov
fbstp
xor
xchg
jge
mov
inc
inc
cmp
cmpl
cli
push
adc
ds
push
xchg
test
mov
ret
push
push
data16
fldl
outsb
and
sub
adc
mull
sbb
shl
pop
setae
mov
iret
enter
mov
pop
dec
mov
stos
xchg
iret
mov
lock
ret
sahf
scas
cltd
or
push
movsl
add
insl
pop
push
inc
lahf
arpl
icebp
mov
push
leave
jns
xchg
push
push
in
dec
je
mov
ret
std
fadd
shrb
mov
insb
or
mov
dec
mov
imul
pop
test
mov
test
xchg
aas
lcall
popf
cmp
xchg
loop
sub
push
inc
jg
mov
das
das
rcll
add
std
sub
mov
repnz
and
add
jmp
out
xlat
das
mov
jno
cwtl
pop
fisttpl
xchg
mov
ja
adc
insl
aad
push
out
dec
dec
push
inc
inc
inc
ret
jbe
repnz
dec
jno
jp
popa
mov
ds
jb
pop
gs
dec
add
pop
movsl
push
push
add
mov
ret
mov
mov
cmpsl
adc
pop
movsb
test
adcb
stc
les
lods
jb
adc
mov
mov
and
add
mov
pop
pop
add
cmc
push
dec
pop
push
ljmp
leave
push
jae
lea
mov
inc
push
inc
pop
in
mov
add
pop
mov
mov
inc
cmpsb
sti
add
sub
mov
insb
mov
adc
movsl
popf
nop
inc
sub
mov
or
add
lea
clc
notl
mov
xchg
mov
push
leave
sti
in
jmp
sbb
out
fcoms
or
sarl
sbb
push
fisubl
out
push
dec
rol
lret
stos
fisttpll
outsl
ror
dec
inc
inc
push
lahf
aam
cmp
mov
lock
mov
cmp
pop
lods
mov
ss
and
int3
dec
lcall
lds
mov
hlt
push
push
mov
inc
mov
mov
mov
js
nop
vshufps
movsl
test
jbe
icebp
xor
sti
inc
sub
pop
in
aas
push
xchg
adc
push
or
inc
hlt
inc
jecxz
lret
mov
hlt
les
cmp
pop
sarb
adc
mov
scas
cmpsl
inc
lcall
cmp
cmpsb
movsl
enter
jl
sahf
adc
jnp
xchg
xchg
inc
adc
mov
adc
sbb
mov
mov
clc
hlt
repz
sbb
pop
hlt
in
jmp
in
rcrl
gs
pop
pop
and
mov
pop
push
imul
fisttpll
js
jp
cmp
movsb
addb
incb
mov
gs
sbb
pop
stos
xchg
sub
lds
and
xor
fs
dec
xor
fisttpl
mov
inc
mov
movsl
fcmovne
sbbb
bsr
jl
idivl
pusha
adc
mov
push
cmp
fs
jle
inc
push
pop
out
inc
outsl
ror
xchg
and
and
data16
in
dec
or
es
xor
loop
jmp
cltd
loope
add
in
scas
sahf
mov
xor
cwtl
sbb
out
lods
ss
sahf
xchg
jb
xchg
or
mov
add
add
pop
pusha
inc
clc
jl
dec
xchg
push
hlt
out
push
xor
push
xor
jne
jmp
out
jo
push
pop
sub
stc
adc
inc
mov
dec
cmc
mov
lret
dec
gs
inc
ds
aaa
jbe
xor
mov
pop
inc
mov
mov
mov
bound
lret
ud0
sbb
fidivrl
dec
jb
mov
addb
ja
push
aaa
cmpb
cmc
sub
mov
mov
movsb
cld
int
js
out
dec
loop
ret
inc
in
pop
pop
pop
call
push
push
dec
inc
loop
push
mov
fs
ret
decl
mov
mov
mov
ja
mov
inc
push
mov
lods
mov
loop
mov
sbb
fwait
xchg
xchg
and
dec
and
dec
es
aas
cld
adc
sbb
cli
stc
cld
adc
add
out
xchg
test
test
add
test
and
cli
jo
mov
pop
pushf
gs
jns
lret
clc
fcmovbe
enter
push
outsb
ds
and
push
jp
jnp
roll
dec
test
add
imul
jo
mov
jl
sbb
lods
xor
push
mov
into
andb
fwait
scas
ret
ja
test
lret
jae
mov
popl
push
fs
cmp
pop
pop
ficompl
sbb
sub
mov
cld
int
fldl
rcr
push
lds
mov
out
divb
ss
lods
mov
lcall
xchg
xchg
xchg
xchg
xchg
test
stos
mov
xor
mov
inc
add
add
das
jl
push
hlt
mov
sub
or
fdivr
xor
out
ja
cli
xlat
cld
in
bound
pop
sbb
jg
sbb
adcl
fld
lret
dec
dec
inc
outsl
pop
dec
pop
adc
aam
xor
jns
mov
sub
je
jp
sub
sbb
jge
imul
sbb
nop
out
and
adc
push
rcrl
sahf
insb
mov
jbe
xchg
jno
outsb
cmpb
test
outsl
test
test
data16
out
jp
xchg
pop
outsl
dec
call
push
xchg
leave
insl
push
out
push
push
ret
arpl
pop
mov
ds
mov
mov
sub
inc
mov
mov
lahf
sarb
cmpsb
sbb
lahf
fwait
sahf
popf
sub
inc
xchg
mov
mov
xlat
aaa
mov
ffreep
or
jle
stc
cld
sti
inc
pop
neg
jl
hlt
repz
addb
jecxz
dec
sub
cmp
xorb
lcall
repz
lretw
cmp
dec
dec
dec
ret
ret
or
fildl
xor
push
ds
xor
push
pop
imul
aaa
jnp
and
leave
mov
mov
int
mov
xchg
adc
leave
mov
mov
jp
adc
fistpll
cld
ds
adc
nop
add
aaa
outsb
insl
pusha
in
cs
std
push
xlat
arpl
add
idivl
fsubrl
xchg
push
loopne
pop
mov
add
ret
mov
movsl
cmp
mov
fcomps
cld
mov
add
into
mov
mov
mov
bound
dec
pop
enter
cs
or
xchg
loop
cmp
inc
xor
aaa
cmp
das
push
clc
lret
stc
clc
sti
decb
fwait
out
adc
add
xorb
mov
aaa
mov
iret
test
addb
mov
aas
inc
push
pop
push
jb
cmp
cwtl
cmp
arpl
outsb
cmpsl
dec
mov
or
es
push
pop
and
and
dec
sbb
mov
xchg
pop
xor
stos
pop
ja,pn
pop
or
mov
add
push
add
adc
lea
cltd
lea
jne
out
mov
adcl
pop
jmp
push
fisubrl
pop
jb
ljmp
xchg
in
orl
mov
sarb
xor
fsub
in
test
aas
cmpsl
fldt
in
loope
mov
aas
adc
inc
dec
xor
sub
xchg
shll
push
cmp
lcall
add
xlat
out
jb
xchg
icebp
hlt
sbb
out
and
out
inc
fists
sbb
fs
fcomp
fmull
or
int3
aam
and
int
fadds
pop
xor
push
dec
dec
jp
ds
xor
int3
sub
fcmovnbe
xor
scas
jne
push
mov
insl
adc
popa
sub
sub
adc
adc
hlt
inc
mov
ss
xor
xchg
mov
mov
jo
movsl
mov
jne
add
js
aad
fs
in
push
test
pop
ljmp
je
inc
or
fisttps
cmp
into
cmp
cmpsl
mov
sub
icebp
mov
push
stos
inc
test
imul
test
xchg
lcall
sub
sub
movsl
aam
aaa
mov
and
orb
movntq
cli
adc
sti
or
xchg
popf
icebp
hlt
outsl
mov
je
inc
and
jge
jp
cmp
loope
ljmp
pop
fcomip
ror
rolb
das
rcl
aad
mov
insb
jo
mov
jle
fnstenv
imul
lahf
xor
xor
testb
mov
es
mov
mov
sbb
mov
mov
push
xchg
aam
sub
mov
cmpb
cmpsl
sbb
xchg
push
xchg
outsb
stos
movsl
pop
clc
jno
jae
xor
call
mov
sub
xor
out
addr16
dec
ljmp
mov
or
scas
int
shl
mov
scas
scas
or
test
out
mov
mov
pop
push
mov
outsb
xor
nop
adc
lods
mov
popf
dec
or
add
jg
cld
jl
sbb
and
jle
iret
outsl
adc
out
ljmp
jnp
push
in
lock
jmp
dec
push
sbb
jmp
push
xchg
dec
rclb
inc
push
aam
pop
inc
shll
fs
jno
pop
arpl
outsl
aas
fbstp
cs
and
test
fnsetpm(287
push
sbb
and
adc
lahf
jb
or
and
mov
cmpb
ret
js
inc
mov
psubw
jl
jb
std
sahf
jp
mov
int3
jge
insl
pusha
stc
gs
jle
addr16
push
add
ficomps
add
push
int
sub
inc
xchg
lds
ret
aaa
add
inc
jp
cmp
mov
mov
xlat
mov
ss
inc
add
in
lods
shlb
pop
xor
sbb
xchg
sbb
adc
movsl
mov
xor
xlat
test
xchg
add
test
adc
cmp
pop
mov
repz
std
sti
in
jmp
adc
sbb
xlat
add
out
and
cbtw
sbb
insl
enter
jecxz
shrl
or
jecxz
mov
aas
pop
inc
ret
into
lret
cmp
push
das
mov
aaa
xor
xor
mov
cmp
lds
and
push
cmp
sbb
mov
fwait
cmpsb
and
sbb
shrb
xor
pop
push
push
ja
jno
sbb
push
fs
mov
lea
push
pusha
xor
insb
sub
arpl
outsb
pop
pop
call
add
inc
inc
dec
filds
aad
dec
sarb
fbld
mov
inc
stos
xor
mov
inc
andl
pop
lahf
mov
test
dec
inc
mov
mov
lcall
mov
sbb
add
cld
sti
adc
outsl
jp
add
hlt
and
xchg
jmp
daa
repz
insw
jmp
int3
fcompl
fldl
shrl
push
dec
dec
js
jne
fcmovbe
in
inc
mov
jl
into
and
xor
mov
inc
lds
movsb
stos
daa
xor
ret
fstpt
sbb
imul
into
xorb
popf
test
add
jle
test
fistl
jo
sub
jmp
jne
gs
sahf
pop
xchg
pop
push
jne
lret
ljmp
dec
push
sti
repz
pop
jecxz
ret
or
cmp
mov
push
mov
mov
int
and
sub
dec
shlb
adc
mov
and
adc
mov
or
lcall
jp
or
and
sub
xlat
xchg
repz
ljmp
jl
jecxz
fadds
repnz
fcmovnu
jae
push
pop
in
aam
jg
jo
loope
in
dec
dec
rorl
into
add
rorl
cmp
xor
fs
lds
stos
mov
xor
push
filds
pop
sahf
arpl
sbb
and
lods
sbb
push
mov
cwtl
addb
or
test
test
sbb
ja
xor
divb
insl
pusha
cli
adc
jo
pop
pop
icebp
pop
rcl
arpl
push
or
jecxz
leave
int3
aas
mov
add
dec
dec
lds
mov
mov
dec
mov
das
mov
fnstenv
pop
loopne
and
fstps
mov
bound
mov
push
or
mov
pop
ss
fistpl
rcll
sbb
std
sti
in
jmp
pop
icebp
sub
push
fcom
jo
pop
data16
fst
iret
insb
cmp
shll
enter
fcomi
dec
dec
int3
push
and
push
lret
ds
push
inc
cmp
xor
jnp
pop
in
icebp
bound
sub
pop
pop
pop
leave
jo
es
adc
and
adc
mov
adc
jmp
lcall
jg
xchg
jo
xchg
jne
jecxz
jb
lock
mov
cltd
jmp
xchg
jecxz
push
gs
push
xchg
pop
cmc
jno
dec
outsb
cmp
xchg
in
sahf
fs
mov
pop
mov
mov
loopne
ds
push
mov
mov
mov
mov
fsubs
daa
mov
mov
enter
cltd
ss
mov
rorl
sbb
mov
test
adc
adc
incb
jns
add
repz
lds
fistpll
arpl
call
dec
mov
push
in
fildl
sub
lret
mov
jae
push
add
sbb
cmp
dec
jae
outsl
xor
dec
mov
stos
mov
xor
push
and
xor
dec
push
sbb
cmpsb
sbb
mov
xchg
into
jg
xor
or
adc
jns
jnp
stc
jl
outsl
jb
test
outsb
popf
push
outsb
outsb
mull
in
jl
arpl
mov
xchg
pop
or
dec
dec
push
or
fisubrs
push
dec
inc
in
sti
lret
fadd
rcr
pop
lds
xchg
jnp
enter
mov
jno
notb
mov
sbb
movsl
cwtl
xchg
xchg
sbb
inc
adc
xchg
push
sbb
mov
or
add
jmp
mov
sub
call
jmp
adc
popf
jecxz
in
daa
jecxz
fdiv
xchg
fst
iret
push
fstl
in
xchg
lret
aas
mov
cltd
inc
inc
inc
pop
roll
cmp
popf
cmp
cmp
mov
out
sub
pcmpgtb
mov
cmp
pop
sbb
mov
sbb
adc
cltd
adc
scas
add
push
or
sahf
mov
and
js
mov
jae
jge
ds
pusha
addr16
lcall
pushfw
fwait
std
mov
jae
xchg
pop
jo
cmc
sbbb
jne
out
and
dec
outsb
sahf
jecxz
int3
push
mov
mov
inc
push
movsb
lret
inc
cltd
dec
lods
xor
or
mov
scas
ret
xchg
mov
xor
xchg
xor
mov
cs
mov
mov
add
dec
or
add
into
std
push
inc
cli
and
outsl
xchg
jnp
hlt
repz
jmp
imul
loop
adc
adc
xlat
fisubl
iret
pop
sbb
mov
xchg
iret
fmul
dec
jnp
pop
cmp
frstor
dec
cmp
jne
mov
movl
xchg
daa
sub
dec
cmp
in
aad
int3
sahf
movsl
xor
xchg
sahf
sbb
mov
xlat
mov
je
xchg
mov
mov
out
push
out
in
test
pop
nop
jecxz
jle
gs
xchg
or
pop
pop
push
and
xor
rcll
int3
add
ret
scas
aaa
jg
jle
mov
cmpsl
ja
out
mov
mov
inc
mov
loopne
sub
mov
sbb
adc
pop
adc
xchg
leave
adc
sbb
or
xchg
sbbl
sti
and
cmp
inc
repz
adc
pop
jle
fs
fdiv
mov
cmp
ror
pop
call
enter
filds
fs
sub
rol
aaa
cmp
jnp
pop
lret
xor
mov
sub
les
jo
mov
pop
sbb
mov
sub
xchg
adc
xchg
aam
pop
adc
mov
adc
ja
xor
cmpl
idiv
std
jne
addr16
test
fldt
xchg
xchg
in
jmp
data16
insl
or
gs
push
add
push
dec
dec
xchg
pop
out
in
lock
jl
or
data16
jmp
icebp
mov
xor
cmp
lds
xchg
jecxz
dec
adc
mov
xchg
inc
stos
mov
mov
aad
xor
sbb
push
cmp
jmp
aaa
or
ret
or
xor
in
xor
sbb
mov
mov
push
mov
dec
ror
pop
popf
cmp
nop
ja
xchg
or
mov
sbb
inc
xchg
test
insb
cmp
pop
xchg
jge
mov
icebp
stos
jno
pop
ja
sub
push
push
popw
mov
test
enter
adc
adc
adc
pop
mov
stos
or
mov
stos
mov
xchg
cmpb
scas
je
xchg
jnp
fs
dec
test
sbb
jnp
fs
pop
xchg
test
lahf
adc
mov
dec
adc
mov
inc
lds
mov
lea
ja
stos
test
inc
lods
mov
jge
lcall
out
insl
jle
xchg
push
adc
xchg
or
or
pushf
rolb
push
add
in
sti
call
jge
rep
das
sti
xlat
jne
ljmp
loope
fwait
pusha
xchg
jmp
adc
in
dec
push
scas
push
lret
and
stos
mov
ljmp
int
inc
inc
inc
mov
testb
outsb
ds
inc
das
sub
popf
je
scas
out
mov
sub
sub
dec
push
adc
sbb
adc
dec
adc
aaa
sbb
adc
out
jecxz
adcb
add
mov
pop
jns
jge
dec
icebp
cld
inc
ja
jbe
nop
addr16
lods
insl
insl
cmp
jae
fs
and
mov
pop
jno
dec
sub
gs
push
rclb
leave
int3
incb
cmovs
rcr
roll
ljmp
jnp
xor
cmpl
fisubrs
pushf
mov
and
inc
fwait
inc
mov
xchg
xchg
xchg
sub
fwait
or
movsl
push
jle
add
mov
sub
addb
cld
sti
dec
movsb
add
repnz
out
in
dec
sub
in
jp
data16
in
adc
sbb
pop
nop
push
jp
or
jb
cmp
dec
stc
jnp
les
test
fimull
cmp
or
push
fs
insl
stos
dec
mov
xchg
sub
mov
mov
lcall
dec
sbb
sub
pop
or
decl
mov
mov
adc
movsl
or
lods
cmc
lock
push
push
jp
fucomip
push
bound
xchg
data16
out
push
pop
pop
jae
xchg
fistpl
shr
dec
leave
int3
clc
test
push
faddp
lds
mov
jno
lods
dec
xorl
and
mov
cmpsb
enter
pushf
fwait
loope
cwtl
inc
inc
sub
dec
adc
mov
es
add
push
dec
maskmovq
stc
xchg
loopne
jge
imul
out
add
int
in
loopne
add
fmuls
jb
sbb
outsl
orl
xor
dec
gs
xor
inc
inc
ds
movsb
xorl
dec
ret
aad
daa
push
das
insb
xor
aaa
xchg
je
mov
les
gs
sub
and
push
popf
das
out
push
push
adc
js
add
mov
cwtl
insb
add
mov
lock
addl
repz
loop
je
mov
mov
movsl
sahf
test
pop
pop
lcall
xchg
pop
dec
in
nop
push
push
mov
dec
hlt
inc
xchg
jne
scas
push
sarb
sbb
mov
dec
mov
mov
mov
test
cmp
mov
cwtl
sbb
scas
fwait
sahf
sub
xchg
iret
xchg
inc
scas
mov
dec
call
sbb
mov
mov
sub
and
out
repnz
int
cmc
call
jmp
imul
repnz
mov
fcmovnu
addr16
ljmp
add
dec
rorl
push
xor
push
adc
cmp
xor
xor
add
push
mov
stc
popa
es
xchg
mov
mov
adc
shrl
lea
ss
pusha
mov
addl
push
scas
jle
jo
jb
cmpsl
jae
jne
jecxz
imul
jae
arpl
pop
add
pop
inc
mov
in
test
aad
int3
repnz
into
mov
and
std
inc
add
ljmp
mov
mov
scas
sub
sahf
push
jle
xchg
lret
iret
lods
sahf
popf
daa
xchg
rclb
mov
adc
cmpsl
sbb
xchg
cli
adc
out
repnz
and
shrb
ljmp
scas
frstor
sbb
in
or
push
mov
fiadds
stos
adc
aad
cli
loope
lret
dec
dec
jae
aas
cmp
mov
cmp
sti
ds
addr16
aaa
xor
mov
sub
mov
sbb
sbb
and
adc
sub
adc
orl
incb
addb
inc
jmp
outsb
clc
punpcklwd
inc
push
pop
add
sbb
call
push
ficoms
loope
dec
stc
sar
aad
dec
push
mov
lds
stos
idivb
cli
stos
cltd
xor
into
cmp
cmp
mov
aam
jge
cmpsl
test
js
nop
add
inc
xchg
sub
popa
lret
orb
or
clc
clc
test
cmp
outsl
jp
add
hlt
mov
xor
out
in
adc
jmp
in
pop
mov
jae
or
adc
rcl
aam
add
push
jns
dec
dec
jge
lcall
icebp
cmp
xabort
mov
xor
or
cmp
or
bound
push
mov
fwait
cmpsb
push
and
adc
lds
jmp
mov
sub
mov
xchg
sub
je
movsl
jne
scas
push
insb
xchg
sbb
out
and
loopne
push
pop
or
xor
add
sarb
jle
mov
std
ret
mov
pop
add
cmp
cmp
pop
loop
sub
mov
repnz
mov
repnz
xchg
xchg
xchg
or
sbb
fdivrs
or
cli
cli
mov
xchg
cmp
sbb
lahf
div
call
sub
ja
jl
jecxz
rcr
ficoml
adc
push
rolb
adc
sbb
dec
dec
pop
cmp
inc
cmp
sarl
cmp
sub
jle
sbb
or
and
and
pop
push
sbb
sbb
push
pop
adc
mov
test
or
mov
jl
in
sarb
test
mov
sub
pop
xchg
bound
inc
movsb
pop
push
insl
pop
pop
or
push
push
push
add
shlb
std
pop
adc
rol
dec
mov
mov
scas
les
lret
icebp
mov
xor
fnstsw
es
dec
sbb
push
mov
iret
lea
adc
cld
adc
enter
ds
leave
cmp
or
out
or
div
jno
notb
js
push
das
popa
ja
dec
mov
jmp
pop
xchg
ja
ret
cmp
in
or
enter
outsl
adc
pop
out
ret
enter
push
cmp
push
or
jge
fs
lds
sbb
mov
xor
pop
push
and
cli
add
sbb
and
adc
mov
int3
addb
ffreep
xchg
ljmp
jp
test
lock
jb
shlb
and
sub
mov
lods
popa
mov
std
mov
arpl
pop
out
call
fwait
dec
inc
inc
les
or
aas
lret
rol
cmc
aaa
inc
mov
push
jne
cmp
rolb
sub
cmpsb
mov
push
adc
mov
adc
shrl
aaa
cmp
lcall
fistpll
pop
mov
push
sub
xor
push
push
movsl
mov
sbb
sbbl
loope
sbb
fcmovu
rcr
mov
cmp
aam
test
push
cmp
mov
inc
pop
int
test
imul
mov
shlb
jb
pop
stos
mov
xor
jnp
push
xchg
mov
inc
int
lcall
jg
ljmp
xchg
cmp
mov
lds
xchg
sbb
inc
lahf
shlb
jg
and
add
pop
fwait
bound
inc
movsb
pop
in
pop
inc
xchg
pop
pop
loop
cmp
push
fcoms
lock
lret
into
hlt
inc
dec
fadd
inc
mov
repz
scas
sbb
cld
rcrb
mov
flds
iret
cltd
cltd
sub
rclb
mov
pop
dec
add
xchg
sub
jno
aam
repz
push
mov
arpl
out
fcoms
mov
push
data16
push
pop
xor
aam
test
pop
mov
dec
arpl
inc
inc
aas
jnp
les
mov
mov
das
dec
mov
xor
jae
mov
mov
and
fwait
and
pop
sbb
adc
xchg
and
testl
xchg
jae
mov
test
jbe
xor
in
pop
jl
mov
stc
dec
push
fisttpl
pop
xchg
pop
jbe
push
dec
push
ficomps
nop
fs
into
xchg
scas
mov
mov
cmpl
mov
mov
xor
xor
cmpsb
movsl
jmp
mov
xor
sub
mov
lahf
cmp
add
pop
inc
sbb
testb
xchg
xor
mov
addr16
hlt
mov
loopne
pop
jmp
loopne
imul
je
fcmovu
and
rorb
rolb
insb
rcl
aad
inc
popa
inc
dec
orl
inc
jp
mov
jns,pt
push
jge
sbb
jb
pop
xchg
dec
sub
inc
xor
mov
push
das
cmp
jl
pop
sbb
adc
adc
mov
mov
in
les
lods
xor
out
pop
out
push
movsl
xchg
add
mulb
pop
jae
adc
pop
push
dec
pop
push
push
push
in
pop
sti
data16
mov
loopne
incl
mov
cmpsl
inc
pop
out
mov
sub
sub
inc
mov
leave
mov
mov
loop
mov
test
push
adc
mov
mov
or
inc
clc
clc
shrl
cmp
sub
hlt
push
lea
xchg
jmp
mov
out
cmp
fistl
sub
addr16
imul
pop
dec
rcr
pop
add
adc
inc
pop
daa
mov
cmp
outsb
xor
lea
sub
adc
sbb
cld
popa
es
mov
adc
hlt
push
push
sub
or
or
xchg
lcall
insb
les
jns
xchg
xor
jno
cmpsb
call
imul
mulb
pop
decl
push
pop
push
add
insb
xchg
push
push
dec
aam
mov
mov
sbb
les
mov
pop
int3
mov
test
adc
xor
cmpsl
cmp
lahf
fs
mov
and
sahf
inc
ss
cmp
inc
dec
push
xchg
mov
lods
push
icebp
or
add
das
das
sub
jb
add
icebp
hlt
sbb
out
imul
cli
bound
in
in
jae
jno
fstl
aaa
paddq
insl
dec
loopne
push
lret
mov
imul
inc
pop
data16
aaa
push
sub
das
leave
xchg
sbb
xor
sub
cmpsl
jmp
and
dec
dec
das
mov
lcall
lahf
jg
test
lea
pop
jg
jne
popf
jge
jb
sarl
outsl
jb
imul
mov
pop
push
popa
fs
in
adcl
fisttps
ficoms
inc
aad
push
jno
dec
push
clc
dec
xlat
mov
mov
aas
ja
jl
inc
mov
xor
scas
push
mov
xlat
ret
lods
stos
aam
imul
xor
test
popf
xor
repnz
popl
push
mov
test
daa
notl
cld
adc
repnz
repz
das
add
stos
inc
sbb
insl
out
push
jb
rcr
movl
movsl
push
fcmovu
data16
rcrb
int3
aam
xor
aaa
test
repz
aas
mov
jae
sub
ret
sub
and
cmp
sbb
push
popf
das
out
pop
movlps
setae
adc
or
mov
xchg
mov
jb
je
movsl
test
fisubl
nop
push
scas
gs
jb
loopne
pop
repz
inc
pop
push
push
push
fildll
into
int
mov
inc
loope
mov
fld
mov
out
in
mov
test
in
sub
mov
cmp
sarl
sbb
aaa
scas
sahf
popf
daa
push
rclb
mov
jg
lcall
cmp
pushf
cli
stc
sub
ret
mov
push
or
in
sbb
in
mov
fcmovu
fcompl
pusha
ror
rorb
pop
jp
aad
daa
dec
dec
dec
js
fadds
insb
shl
cmp
leavew
mov
dec
ss
cmpsl
in
sub
pop
jne
mov
and
adc
sbb
xchg
fwait
daa
sub
and
dec
xchg
sbb
std
jp
cmp
repnz
nop
jne
push
pop
cmp
sub
mov
data16
pop
pop
pop
enter
dec
dec
push
push
aam
push
popf
js
orl
lret
sub
dec
mov
jecxz
sub
mov
push
inc
cs
sub
mov
cmp
cltd
pushf
push
fcomps
xlat
xchg
xchg
xchg
aaa
mov
addb
incl
add
xchg
jl
std
jns
shrb
mov
xor
lcall
in
jmp
push
loope
jbe
in
movsb
and
mov
cs
out
movsl
or
into
adc
inc
or
xor
add
inc
cmp
push
xor
mov
jo
xor
sub
out
daa
sub
pop
and
movsl
mov
and
imul
mov
xchg
ds
mov
test
push
add
lods
add
mov
jb
scas
or
ret
mov
orb
outsb
xchg
out
xchg
cld
mov
push
push
xor
pop
pop
pop
push
cli
xchg
adc
jecxz
or
sub
int
out
mov
inc
mov
push
add
enter
mov
push
xor
rolb
fldenv
cmpsb
cmpsb
out
mov
test
aaa
xchg
xchg
xchg
sub
or
and
add
add
jns
popf
out
sti
jb
iret
cmpsl
jl
hlt
repz
out
jmp
loopne
imul
sbbl
pop
adc
enter
dec
dec
ret
inc
inc
pop
in
mov
cmp
push
pop
lea
dec
push
mov
sub
jmp
and
and
jl
sbb
sbb
orb
test
and
mov
mov
addl
js
inc
jo
or
jae
pushf
push
imul
mov
bound
jle
out
pop
add
sbb
call
push
push
push
dec
mov
pop
lret
into
fcoms
pop
mov
inc
lahf
int
mov
mov
mov
aas
push
imul
stos
stos
cmp
and
lcall
sbb
nop
fwait
xchg
jmp
adc
or
push
or
add
adc
pop
js
sti
and
es
icebp
mov
push
aas
out
fsubl
test
and
loope
movsl
nop
xlat
fisubl
dec
jae
ja
addl
sbb
dec
jecxz
int3
inc
aas
jne
add
xor
addl
mov
xor
jo
xor
jne
lahf
stos
cmp
and
dec
xor
sbb
movsl
ffree
stos
pop
xchg
fwait
cmpsl
sub
mov
xorb
popa
xchg
fs
push
incb
jnp
jns
hlt
test
stc
push
imul
hlt
popa
fs
push
and
pop
arpl
inc
jmp
push
push
dec
rorl
int
xchg
hlt
cwtl
mov
loope
mov
cmp
mov
lret
push
xor
insb
rolb
inc
nop
lahf
cmp
movsb
cmp
cltd
pushf
sbb
mov
xchg
xchg
or
ljmp
incl
xor
sahf
push
js
cli
and
cmp
je
div
jno
call
out
in
loopne
insb
js
jecxz
jle
or
outsl
dec
andl
inc
push
dec
inc
push
in
lret
out
push
aas
inc
inc
pop
pop
mov
rorb
inc
fs
lods
in
aaa
xor
ljmp
mov
sbb
lds
pushf
rcrb
push
shll
sbbl
add
sbb
mov
mov
imul
repz
fwait
repnz
mov
out
pop
push
loope
push
mov
fildll
loop
push
and
dec
leave
int3
repz
inc
ret
dec
xchg
aam
add
jno
mov
scas
cmp
cmpb
cmpsl
stos
inc
fwait
cld
jmp
mov
and
xchg
fwait
sahf
popf
popf
push
xchg
xchg
xchg
xchg
and
lahf
pop
or
xor
shlb
clc
test
mov
cld
cld
push
cmp
inc
xor
add
pop
ljmp
gs
movsb
add
push
dec
out
gs
ror
adcl
bound
fdivrs
int
cmp
imul
xor
shll
xor
and
push
sub
stos
jecxz
mov
fwait
cmpsb
andb
adc
xchg
fwait
cmpsl
adc
adc
pop
int3
lea
loopne
addb
ja
cmp
mov
bnd
cltd
and
xchg
stc
test
cmp
popa
arpl
jo
xlat
pop
pop
add
sbb
sub
push
push
push
fistpll
mov
push
sarb
jmp
mov
mov
mov
xor
cmpl
mov
lret
dec
mov
test
addr16
xchg
xchg
cmp
push
sbb
xor
mov
lea
cmpl
std
adc
repz
sbb
adc
jmp
stos
or
pop
jp,pt
in
pop
xor
push
rolb
int3
aam
rol
dec
or
push
cmp
leave
fxch
inc
inc
outsb
push
adc
ja
rcll
xor
gs
xchg
jb
sub
loop
outsb
pop
cmp
and
int3
lahf
xlat
int
cwtl
sahf
gs
adc
mov
mov
sbbl
add
lahf
insb
add
mov
sahf
mov
imul
push
fcomps
push
pop
adc
dec
notl
stos
outsb
push
xlat
inc
dec
lock
int
les
cmpl
hlt
mov
dec
int
stos
stos
scas
scas
ja
lahf
mov
daa
xchg
lcall
dec
fldenv
fstpt
mov
or
mov
xchg
incl
sbb
roll
clc
push
adc
xlat
addr16
pop
jle
sbb
repnz
pusha
addr16
loop
pop
insl
jno
fcom
and
arpl
inc
pop
fxam
aam
dec
dec
lret
push
adc
daa
pop
push
ret
into
stos
dec
inc
cmp
jg
ds
cmp
ljmp
inc
pop
mov
mov
mov
movsl
in
xchg
out
movlps
sub
mov
scas
pop
or
cmpb
or
loope
ja
mov
outsl
or
jae
pushf
out
daa
popf
pop
repz
jo
insl
in
std
popa
fs
stos
test
ret
push
xchg
push
aam
fdivrl
les
cld
cli
out
fwait
or
ret
in
iret
and
inc
scas
mov
cmp
cmpsb
das
hlt
mov
js
mov
xchg
and
test
sub
std
add
lock
fmull
movsl
hlt
xchg
add
sbb
stc
push
notb
pop
cmp
jmp
gs
out
out
in
fcmovu
fcoml
fistl
into
rcll
ror
rorl
mov
mov
lods
aas
inc
inc
int
inc
je
iret
cmp
cmp
mov
std
sub
jge
and
jbe
cs
mov
es
jne
sbb
ss
fwait
mov
push
adc
and
xchg
push
inc
xchg
cld
rcll
mov
out
call
cmpsb
lea
lock
addr16
xchg
cld
xchg
jecxz
mov
bnd
iret
in
pop
add
enter
dec
leave
sti
lret
fdivrs
les
cmpl
xor
mov
mov
mov
sub
mov
mov
sbb
and
fwait
sahf
popf
aas
sub
stos
cmp
xchg
mov
push
hlt
or
std
mov
fimull
jne
idiv
stc
jle
enter
loope
repz
imul
jne
in
loopne
jns
xor
pop
pop
jo
iret
rolb
push
dec
dec
dec
mov
inc
lcall
lds
add
mov
cmp
dec
cmp
xor
sub
sbb
push
adc
shlb
push
adc
adc
mov
add
out
inc
jg
xorl
xchg
arpl
add
add
mov
fwait
lea
addr16
divb
stc
cld
mov
gs
pop
pop
sub
push
dec
push
in
repz
xor
cli
stc
inc
dec
loope
out
in
mov
or
cmp
cmpsl
ss
aaa
out
loop
dec
mov
pop
xlat
jmp
sub
stos
rcll
mov
into
decb
add
lock
fildl
jl
cld
or
es
jmp
imul
sub
fisttpl
rcrl
cmp
addr16
lret
push
inc
rclb
inc
xor
mov
cmp
xor
aaa
scas
sub
mov
and
and
clc
test
ret
lcall
cld
pushf
or
and
daa
xchg
lods
cmpb
pop
call
xchg
jae
jne
cltd
mov
in
push
stc
pop
fcomp
notl
pop
mov
jne
out
push
push
aad
rorb
push
cli
dec
shr
lret
into
int
fldcw
mov
jmp
cmp
mov
mov
mov
lods
sarb
test
mov
sub
call
pushf
pop
sahf
fwait
xchg
adc
das
cmpsb
xchg
xchg
xor
aaa
or
add
and
jl
pop
nop
std
pop
mov
jl
imulb
adc
jmp
fists
stc
jl
out
popa
mov
fcmovnu
fstl
popa
rcl
rorl
comiss
dec
dec
dec
gs
inc
jle
jl
inc
cmp
cmp
outsl
pop
gs
test
or
daa
sub
and
jbe
adc
loope
sbb
cmpsb
xlat
sbb
mov
adc
mov
mov
push
xchg
cmpb
inc
stos
jae
addr16
jns
xchg
into
int3
mov
jae
pushf
out
daa
popf
pop
call
mov
lds
out
pop
pop
jmp
push
add
fisttpl
in
mov
push
int
testb
mov
mov
fwait
or
mov
pop
cmp
xchg
xor
aad
xchg
lock
mov
inc
and
push
sbb
in
xchg
cmp
add
aad
mov
xor
ret
jg
xbegin
lret
mov
icebp
hlt
sbb
sbb
jbe
ds
push
js
cmp
insl
fcom
lea
dec
pop
test
rcl
jns
shlb
loop
push
dec
dec
je
pushl
rolb
inc
mov
aad
mov
xor
negb
mov
push
lds
outsl
pusha
and
scas
and
mov
movlps
or
pop
xchg
mov
cltd
push
or
ja
xchg
mov
les
addr16
insb
inc
stc
insl
pusha
pop
sti
push
jle
sti
push
pop
out
mov
dec
cli
in
xsha256
cmpsb
xchg
dec
pop
pop
ror
lret
icebp
enter
mov
lds
bound
add
mov
jp
inc
test
jmp
mov
dec
das
xchg
xchg
jne
sub
sub
xchg
and
or
jbe
sbb
aas
add
push
mov
imull
in
lret
dec
xor
jg
cmp
jmp
jns
sub
jecxz
lea
sub
fcomi
push
gs
sarb
xchg
jns
xor
cmpsb
and
dec
dec
dec
inc
pop
jne
addl
iret
test
ds
jno
dec
push
mov
sub
out
push
mov
pop
std
jnp
and
and
imul
bound
sub
mov
sbb
addl
push
jle
jo
bound
mov
lcall
stos
imul
cld
push
mov
pop
outsl
pop
loop
pop
add
adc
jmp
in
dec
inc
jecxz
popf
push
mov
pop
jns
mov
loope
into
push
scas
dec
dec
dec
mov
fsubrl
fldl
lods
jp
xor
ds
call
in
fcompl
xchg
cmp
mov
dec
and
ret
jg
lret
pop
adc
mov
hlt
sbb
sbb
jbe
cmp
stos
das
pop
in
push
outsl
fcom
lea
dec
pop
xor
imul
dec
dec
je
pushl
shlb
inc
cmp
or
leave
xor
push
mov
daa
add
sub
je
and
sbb
test
sbb
fs
adc
mov
push
rcrb
xchg
repz
mov
mov
mov
push
mov
sti
arpl
loopne
push
icebp
rcrl
in
pop
push
dec
out
jmp
cmpsb
xchg
inc
loop
cltd
or
fs
mov
xchg
push
mov
dec
sarl
in
xor
cld
mov
rolb
stc
jmp
mov
dec
xchg
and
fistps
rclb
mov
adc
das
cld
or
incl
sub
roll
pop
adc
sti
and
fistpll
cmp
cmc
sbb
jmp
push
ja
loop
imul
test
sub
outsb
aad
push
mov
inc
push
adc
aas
addr16
and
inc
rcrb
cmp
vpacksswb
mov
pop
rolb
addr16
push
mov
in
adc
shll
dec
stos
adc
mov
mov
push
lea
roll
lahf
push
movsb
insl
sti
sbb
je
fwait
or
test
insl
pusha
xchg
jmp
dec
mov
dec
stos
fwait
push
addr16
in
push
push
stc
rorb
mov
rcll
into
xchg
add
pop
push
aam
mov
enter
jae
mov
jne
mov
mov
insb
add
mov
cmpsl
cwtl
xchg
dec
mov
sub
clc
cmpsb
xchg
xchg
xchg
and
push
or
fisttpl
clc
add
xchg
sbb
mov
pop
xchg
in
adc
adc
outsb
inc
sub
out
jo
cmp
fdiv
push
imul
jp
push
xor
lret
arpl
dec
push
inc
inc
insb
mov
fmuls
cmp
push
jno
dec
push
ret
sub
dec
mov
push
sbb
and
mov
xor
stos
sbb
mov
xchg
dec
pop
pop
or
adcb
popf
test
addr16
movsl
xchg
push
mov
mov
addr16
repz
popa
fs
sarl
out
pop
add
adc
ror
mov
inc
lods
or
pop
pop
fcmovnb
ljmp
xchg
mov
xchg
out
mov
push
inc
test
fnsave
rcrb
mov
out
mov
xor
dec
inc
add
ret
loop
mov
and
push
sbb
add
mov
sub
or
cld
sti
and
or
jg
call
fsubrl
cmp
loop
jl
cmp
fsubr
pop
jbe
fildl
pop
jns
aad
pop
bound
or
push
pop
aas
inc
push
les
adc
cmp
push
pop
adc
dec
dec
shlb
pop
mov
push
sbb
inc
mov
xor
sbb
movsl
ffree
sbbb
mov
and
cmpb
inc
stos
jae
cltd
push
jp
mov
outsl
or
jae
pushf
out
daa
popf
pop
call
mov
cltd
mov
pop
pop
jmp
push
add
fstpt
in
pushf
test
fmul
shl
and
mov
loop
add
aas
mov
fnstenv
push
cli
scas
lods
aad
repnz
mov
lcall
das
in
xchg
xchg
cmp
in
ljmp
or
icebp
jg
aam
negl
adc
fnstsw
hlt
sbb
sbb
jle
in
loopne
fidivrl
and
outsl
sarb
sbb
icebp
jns
ror
jp
iret
sub
enter
dec
dec
jno
add
push
pop
jbe
push
je,pn
push
inc
push
lret
das
das
or
xor
ss
repz
test
subl
js
push
pop
mov
in
jb
adc
int
nop
jl
pop
or
sbb
cmp
insl
mov
xchg
jae
jne
add
outsb
insl
in
cs
loop
in
push
pop
out
pop
loop
call
imul
dec
std
pusha
cmpsb
xchg
into
int
xlat
push
movsb
add
pop
push
shll
loope
cmp
add
xchg
stos
rorl
lods
shrl
enter
cmc
cwtl
xchg
aas
xor
fcompl
xchg
cmp
lahf
push
sbb
aas
add
push
adc
imull
jns
inc
repnz
sbb
add
jmp
adc
lahf
adc
in
xorb
sbb
cmc
push
outsb
rcl
ja
xchg
jl
push
mov
gs
and
inc
cmp
stc
pop
sub
or
mov
jae
aas
pop
mov
loopne
shrd
stos
jl
sbb
push
stos
movlps
xchg
inc
imul
dec
xchg
xchg
imul
xchg
or
pop
add
sub
mov
xchg
mov
in
push
dec
add
sarl
jecxz
mov
aam
in
aas
ja
stos
cmp
lret
icebp
mov
push
aaa
stos
test
popf
sub
movsb
mov
fcomps
nop
inc
sbb
cs
or
sti
cltd
mov
and
loopne
pushl
cltd
mov
push
add
pop
push
loop
outsl
jp
add
hlt
repz
out
js
jmp
in
jp
stc
xlat
lods
jecxz
popa
mov
in
jg
push
push
aam
push
aam
adc
dec
dec
pop
pop
mov
inc
fdiv
aaa
cmp
adc
lret
xor
pop
scas
out
sbb
dec
mov
cmp
mov
fwait
addr16
adc
or
outsl
or
lods
jnp
push
add
cwtl
sti
xor
imul
jns
repz
sbb
leave
xlat
adc
push
mov
push
pusha
pop
xlat
leave
int3
repnz
repz
cmp
ret
out
shlb
push
dec
mov
in
je
mov
test
out
lahf
mov
dec
pop
push
dec
mov
popf
nop
cmp
lods
call
sbb
xor
mov
jmp
add
sbb
xchg
push
mov
lock
pop
in
mov
out
adc
pop
jb
jecxz
pusha
cwtl
mov
gs
inc
test
xor
gs
lret
or
int3
shrl
inc
inc
insb
pop
in
test
rorl
ds
and
dec
rcl
insb
sub
and
lods
in
or
test
jbe
adc
push
cmpsb
or
mov
or
addb
ja
dec
or
movsb
imull
movsl
lock
dec
jne
nop
add
shrb
popa
xchg
es
jecxz
pop
pop
add
sbb
jecxz
dec
rorl
test
setp
mov
mov
lahf
cmp
fnstsw
mov
push
inc
lahf
mov
xchg
and
add
hlt
fstl
xchg
cmp
dec
xor
pop
popf
jmp
jmp
sbb
add
cld
and
mov
repz
or
daa
in
add
loopne
adc
popa
mov
jae
xor
iret
ljmp
xchg
dec
sub
sbb
cmp
pop
fs
xor
nop
mov
inc
push
shrb
adc
fldl
xchg
adc
pop
mov
adc
xchg
in
mov
ret
push
lcall
outsb
cld
mov
jno
pushf
push
in
int3
mov
orl
and
pop
push
push
fsubrl
hlt
push
push
cli
fstl
lods
lret
into
neg
shll
fdivrs
loop
cmp
mov
or
cmpsl
ret
stos
scas
aam
pop
aad
and
push
movsl
cwtl
inc
xor
lock
xchg
aaa
push
push
cmp
adc
jmp
sbb
inc
add
cmpl
mov
lret
lcall
in
jmp
push
je
out
lea
cmp
outsl
iret
sarb
xchg
jns
push
cmp
dec
dec
je
jns
lea
dec
inc
inc
imul
pusha
sub
push
leave
fs
je
inc
pop
leave
sub
mov
push
adc
into
mov
jle
sbb
push
mov
pextrw
pushf
aam
adcl
mov
sbb
addl
clc
mov
jo
mov
dec
mov
lea
push
imulb
xchg
pop
jmp
push
arpl
std
mov
cwtl
pop
je
std
pop
push
push
fsts
test
dec
dec
jecxz
out
movsb
or
mov
lret
inc
jnp
scas
aaa
push
mov
mov
sahf
int
fldcw
das
cmpsb
aaa
sahf
add
mov
lahf
punpckhwd
sub
imul
push
out
xchg
add
orb
cli
adc
shrb
repnz
ss
and
pop
in
jmp
push
gs
adc
arpl
frstor
rcl
roll
dec
lret
push
xor
dec
inc
pop
fldenv
mov
mov
xor
dec
pop
pop
sub
mov
mov
cmpsb
insl
xor
sub
cmpsl
rcrb
xorb
fcoms
adcb
lret
inc
out
cli
push
mov
out
jp
push
imul
lods
popa
test
movsl
pop
or
cs
dec
rcr
mov
pop
mov
mov
fs
ret
ficomps
cltd
add
mov
fmuls
fisttps
mov
shl
imul
xor
out
mov
fistl
xchg
xchg
inc
mov
xor
aam
xchg
mov
jp
in
or
sti
incb
add
repnz
jg
div
adc
push
js
inc
pop
in
push
jp
xlat
lea
dec
pop
lahf
fst
rcll
inc
adc
bound
pop
das
pop
cmpl
imul
dec
and
stos
cld
add
sub
push
sbb
es
and
sbb
rcll
scas
mov
or
dec
mov
inc
test
scas
inc
or
ja
inc
cmp
movsb
idiv
pop
ja
add
test
or
and
push
pop
pop
pop
call
push
push
push
push
bound
mov
dec
adc
add
mov
out
mov
popa
mov
cmpsl
cmpsl
inc
xchg
inc
add
lahf
mov
dec
pop
push
dec
xor
pushf
xor
xchg
in
enter
and
add
mov
daa
push
sti
push
pxor
add
jp
or
pop
into
xor
push
push
mov
ljmp
loopne
fnstcw
stc
and
inc
jbe
xor
shr
dec
imul
jo
inc
dec
pop
cmp
fdivrs
inc
inc
inc
push
and
adc
pop
dec
xor
mov
jle
mov
jne
dec
cmp
and
and
push
mov
or
mov
lea
xchg
jl
cmp
pop
jge
je
jae
jl
inc
add
mull
hlt
and
inc
loope
call
popf
push
push
loopne
mov
int
mov
sahf
mov
mov
dec
iret
mov
in
cmp
mov
test
mov
fnstsw
movsb
cmp
lcall
aaa
daa
vpmacswd
mov
adc
push
or
lsl
add
push
sub
sub
or
sbb
jne
out
loopne
jns
sti
and
or
mov
cltd
cmp
pop
rcl
sarl
pop
fcmovnb
movsb
pop
dec
dec
dec
dec
pop
inc
fldcw
repnz
inc
roll
cld
inc
xor
adc
into
jge
jne
dec
outsb
sub
adc
and
push
mov
fadd
mov
popa
and
jbe
scas
sbb
fbld
movsl
orl
cli
add
jl
xchg
push
mov
xchg
push
adcb
mov
gs
mov
push
lock
push
cld
sti
sahf
stc
push
jecxz
testl
call
mov
dec
xlat
xorl
xchg
scas
mov
sub
arpl
cmp
cltd
out
xchg
lods
push
pop
mov
das
push
into
xor
mov
add
sub
xchg
push
push
std
lock
pop
in
jnp
out
outsb
push
loopne
scas
push
cs
fs
fcmovu
test
xor
aad
push
mov
inc
aaa
xor
loopne
test
pop
push
cmp
vpacksswb
mov
pop
rcr
addr16
push
lds
pop
push
lods
in
adc
shll
dec
lods
adc
mov
mov
lcall
jp
lahf
push
movsb
insl
sti
mov
jae
or
test
insl
pusha
xchg
jmp
test
pop
add
pop
mov
push
addr16
jmp
or
mov
loope
into
int
xlat
sbbb
mov
loopne
jnp
scas
cmp
lods
mov
fmull
or
stos
rorl
lods
shrl
enter
nop
cwtl
xchg
aas
xor
fcompl
xchg
cmp
mov
sbb
aas
add
push
push
clc
imull
jns
ljmp
ss
dec
sub
adc
in
xorb
sbb
cmc
push
push
xchg
jl
push
mov
gs
addb
pop
inc
cmp
stc
pop
sub
popf
sub
xor
lahf
mov
aas
pop
ret
push
test
push
shrd
scas
mov
sbb
push
mov
adc
xchg
adc
cmpsb
add
dec
pushf
xchg
imul
xchg
or
dec
mov
sbbb
insb
xchg
cmc
sub
pop
arpl
lock
xchg
pop
jae
notb
add
shll
jecxz
movsb
push
mov
in
aas
ja
stos
cmp
lret
icebp
mov
push
shrl
aam
sub
movsb
mov
fcomps
nop
inc
sbb
add
ljmp
loope
add
sub
sub
adc
xor
push
push
adc
ljmp
fucom
in
jle
cmp
sbbl
inc
dec
mov
popa
je
mov
pop
insb
inc
inc
push
add
sub
ds
pop
adc
dec
sub
pop
mov
push
sbb
leave
mov
xor
sbb
les
fisttpll
adc
pop
leave
mov
cmpsl
push
inc
lods
jne
aad
jl
mov
jno
push
nop
jne
sahf
icebp
sub
pop
bound
pop
outsl
pop
add
fcoms
push
mov
push
std
fistps
push
out
ret
sub
inc
lods
mov
mov
mov
mov
jo
lock
lods
stos
cmp
add
inc
cwtl
xchg
dec
and
inc
or
lcall
in
xchg
xor
mov
testl
push
sbb
icebp
pop
jle
sbb
jae
fucomip
jmp
test
inc
and
cld
push
in
mov
jg
pop
push
iret
sarb
sub
enter
dec
dec
jno
add
int
cmp
insl
dec
xor
jp
push
push
das
xor
repz
es
sub
xor
and
dec
into
es
mov
mov
and
adc
mov
push
into
jl
xchg
jl
push
cwtl
jo
movsl
cld
xor
arpl
bound
imul
arpl
fists
or
pop
push
aam
lods
fcoms
cltd
adc
xchg
mov
sarb
mov
mov
lahf
cmp
fnstsw
push
add
stos
push
dec
lahf
mov
xchg
and
mov
int
fstl
xchg
cmp
dec
xor
push
jg
add
lcall
xchg
sub
mov
or
sbb
loope
ss
pusha
addr16
loop
adc
xlat
xchg
fcmovu
jae
pop
pop
je
iret
rolb
bound
or
add
addb
sbb
cmp
imul
fs
rcll
mov
jl
mov
xor
pop
push
mov
sbb
and
xchg
andl
adc
adc
mov
lea
mov
ja
xchg
pop
lock
jno
je
jmp
loopne
in
ret
pop
bound
pop
jmp
iret
out
pop
pop
push
rcr
sbb
push
push
clc
lret
pop
int3
lret
std
aas
lret
rol
cmp
fistl
mov
int
mov
ss
inc
sub
in
lods
shlb
pop
popa
or
and
cltd
pushf
fwait
xor
aas
dec
xchg
or
imul
dec
mov
pop
pop
fwait
add
sub
das
add
sti
jge
or
repnz
out
adc
jne
push
loopne
adc
in
popf
mov
data16
fst
ja
mov
dec
shrl
movsl
mov
aas
cmp
lods
test
ret
cmp
push
push
pop
jo
mov
sbb
xor
pop
cs
push
sub
mov
push
sahf
movsl
sbbl
pop
push
fbld
movsl
sbbl
add
sbb
fs
movsb
xchg
movsl
dec
mov
jbe
fwait
repnz
pusha
pop
xchg
xchg
mov
add
add
sbb
dec
push
push
lret
lret
mov
mov
add
mov
lahf
cmp
or
shr
stos
scas
shrl
enter
cmp
sbb
add
mov
xchg
xchg
adc
mov
or
add
popf
cmp
sub
lock
or
push
sbb
cld
pushl
pop
in
jmp
or
out
adc
sub
icebp
fcomp
fucom
out
pop
jo
rcl
xchg
push
xlat
dec
dec
pop
xor
jg
jae
mov
ret
push
lret
inc
sbb
outsl
push
sub
lods
xor
adc
push
pop
mov
sbb
adc
stos
jnp
and
or
subb
clc
decl
std
clc
subl
pop
lret
mov
xchg
xorb
ret
loope
dec
arpl
xchg
mov
js
pushf
pop
call
add
dec
and
enter
mov
mov
xchg
cld
mov
mov
jb
sti
fidivl
sub
stos
aad
jb
lcall
jecxz
xchg
xchg
sqrtps
adc
fwait
or
cmp
add
testl
jne
out
jle
out
mov
jae
or
in
insl
push
adc
std
je
xlat
sti
add
addr16
shrb
shll
fcomip
addr16
dec
jno
dec
pop
sub
dec
inc
push
dec
cmp
ds
xor
into
sahf
xor
dec
popf
jg
sub
and
pop
pop
and
mov
cld
mov
les
adc
adc
cwtl
bound
mov
xorl
lea
jo
test
addr16
pop
xchg
inc
pusha
pop
out
and
jns
mov
pop
pop
repz
jbe
decb
push
jmp
dec
shlb
dec
fs
in
int
rcr
aaa
dec
dec
leave
lds
mov
mov
mov
inc
test
mov
movsb
cmp
dec
in
xor
nop
xchg
sub
scas
clc
xchg
push
or
add
pushf
or
cli
pop
adc
push
repnz
jo
cmc
imul
out
das
fidivs
adc
outsl
xor
jbe
push
adc
jae
aad
push
mov
aas
dec
or
int3
notl
fldcw
divb
dec
jmp
shll
mov
and
inc
sub
jae
pop
adc
mov
adc
push
lcall
mov
clc
jmp
mov
xchg
outsb
lods
or
mov
sahf
cmpb
insb
call
push
and
fchs
dec
push
pop
outsl
pop
pop
pop
push
xchg
inc
xchg
outsb
push
push
loopne
cmp
data16
lret
fdivrs
iret
ret
mov
mov
movsb
ss
lods
aad
sub
lods
stos
scas
shlb
xor
popl
outsl
xlat
pushf
adc
cmp
repnz
add
mov
add
push
dec
fcomi
cli
stc
cld
cmc
stc
dec
cmp
cmpsb
cli
cmc
call
out
in
imul
push
ss
and
adc
ror
addr16
int
or
lret
ror
push
rorb
jb
fbstp
inc
imul
push
test
int
std
ss
sub
jge
aaa
jmp
and
sub
into
int
out
pop
imul
inc
lret
and
mov
adc
test
xchg
jp
jl
clc
adc
jp
out
pop
jns
imul
data16
fs
pop
push
pop
fsub
jnp
pop
pop
clc
add
stc
push
push
dec
jecxz
aad
pop
ret
fstpt
leave
lds
in
mov
jle
push
mov
lock
jae
movsb
sub
mov
lods
rol
shll
out
xor
fcmovnu
sahf
test
inc
xchg
xchg
cmp
cmpl
jno
xchg
add
int
loope
stc
adc
cltd
fidivrl
cli
div
push
cltd
std
in
jmp
mov
mul
loope
mov
fidivl
mov
aad
dec
xor
dec
jle
mov
int
cmp
dec
xor
push
outsl
das
xor
cmp
daa
sub
stos
shlb
and
push
mov
jl
sbb
inc
push
pop
mov
xchg
and
aas
push
mov
ljmp
ret
js
je
jmp
lea
pusha
stc
jno
jae
or
push
outsb
addb
xchg
lock
les
pop
push
shr
mov
inc
dec
loopne
xchg
int3
int
testb
mov
xchg
movsb
mov
mov
mov
rorb
and
cmpsb
cmpsb
das
mull
popf
nop
pushf
fldcw
aam
mov
movsb
shll
or
mov
xchg
push
add
cmp
sub
hlt
jo
aad
cld
xlat
jne
out
in
sbb
lock
jecxz
movsl
mov
pop
xchg
cmp
fiadds
call
es
enter
lret
cmpsb
sub
jl
int3
sub
inc
inc
jno
aaa
push
sbb
clc
bound
xor
jg
xor
and
insb
sub
and
clc
dec
pop
sbb
adc
push
pop
mov
lea
mov
test
jnp
js
ds
movsb
je
push
add
cmc
push
outsl
pusha
pop
xchg
jl
push
gs
xchg
ftst
shrb
pop
ljmp
push
dec
inc
in
arpl
sub
rorb
pop
lcall
cmc
push
clc
loop
mov
je
mov
test
repnz
xchg
or
mov
es
clc
fwait
sahf
test
cmp
mov
push
push
pop
fisttps
or
inc
xchg
stc
push
divb
aaa
lock
mov
call
xlat
das
repnz
dec
in
adc
cld
or
fldenv
orl
out
clc
ja
lret
lret
jae
rcll
pusha
aaa
push
sbb
clc
pop
das
xor
jg
xor
and
insb
sub
and
clc
inc
pop
sbb
adc
push
pop
mov
lea
mov
test
jnp
js
ds
movsb
je
push
add
cmpsl
insb
subb
pusha
pop
cld
int3
fs
sub
repz
dec
push
insb
hlt
add
sarl
cmp
rcrb
ret
cmp
mov
lret
mov
cmp
mov
cmpsb
mov
nop
mov
mov
cwtl
xchg
and
adc
or
xchg
xchg
xchg
mov
popf
or
test
arpl
jno
clc
idiv
push
pop
std
lock
and
jmp
sub
adc
fcoms
fs
out
fcmovnu
jbe
sub
mov
aad
xchg
sub
push
scas
iret
dec
dec
ret
je
int
dec
cmp
jbe
push
dec
shll
imul
push
xchg
jae
stos
lods
nop
xor
cs
out
pop
and
loopw
cmpsb
push
fcomps
stos
mov
loop
adc
test
jmp
lea
and
movsb
jecxz
test
jnp
clc
subb
mov
lahf
push
mov
jne
ljmp
imul
jmp
push
push
or
dec
or
lret
into
int
lret
rol
iret
lahf
ljmp
xor
cmp
xchg
shrl
scas
lods
lods
cmp
cmpsb
movsl
scas
lock
pushf
fwait
adc
adc
in
sbb
out
iret
dec
sbb
sbb
cmp
idiv
xchg
add
imul
ja
insl
xor
jle
push
sti
clc
or
xlat
lea
push
in
fmull
dec
aad
movsb
push
ja
dec
dec
rcrl
roll
cmp
mov
scas
inc
ds
xor
lods
incl
sub
pop
inc
aaa
dec
pop
and
mov
pushf
test
and
xchg
popf
jns
or
add
notl
lea
mov
mov
incb
xchg
mov
addr16
sub
loope
call
scas
jbe
xlat
loop
bound
xchg
push
add
push
mov
inc
dec
aad
sarb
mov
cmpsl
jns
mov
lods
clc
and
mov
jnp
lods
stos
inc
mov
cmpsb
mov
jl
sahf
dec
sub
stc
iret
xchg
stos
adcb
push
push
xchg
or
xor
cli
adc
xchg
clc
and
repnz
xor
jmp
and
push
adc
xor
xor
pop
sahf
inc
and
or
push
push
iret
dec
dec
jp
fisubrl
insb
inc
inc
ret
mov
ds
mov
xor
mov
das
cs
and
push
xchg
mov
mov
ja
adc
sub
ret
les
xchg
jo
mov
push
mov
pop
lock
jle
repnz
cmp
pushf
add
loope
pop
fwait
sahf
popa
pop
add
push
fcmovnu
dec
outsb
pop
pop
repz
scas
dec
push
push
xchg
adc
or
xor
inc
sub
or
mov
leave
mov
enter
faddl
mov
lahf
lds
mov
xor
pushf
xchg
add
xchg
sbb
pop
repnz
pop
out
adc
sahf
or
or
out
inc
add
cld
sub
jle
fisttps
jns
out
xor
pop
mov
loope
gs
dec
ljmp
sarb
fisttps
aaa
in
jno
dec
dec
dec
push
daa
ror
dec
inc
inc
push
inc
inc
cmp
out
das
xor
inc
ret
or
ret
mov
mov
and
leave
push
into
mov
int3
sahf
movsl
xchg
and
xadd
mov
mov
test
jns
adc
stos
jo
repz
jo
addr16
mov
loope
shlb
in
outsb
shll
pop
fsubp
aad
push
dec
add
pop
push
dec
cli
loope
cmpsl
or
aas
lret
rol
mov
mov
cwtl
mov
dec
pushf
fcmovb
push
cmc
scas
lods
sub
sbb
pop
lods
cmpsb
movsl
sbb
test
cwtl
nop
dec
inc
sub
inc
or
sub
incl
push
sbb
aas
mov
xor
sbb
pop
push
out
jmp
shl
loope
xor
rclb
mov
fscale
icebp
fcmovne
jo
sbb
xor
in
or
dec
dec
arpl
inc
addr16
push
scas
jge
cmp
sarb
ss
push
lods
pushf
mov
sub
sub
add
es
sbb
lods
pop
mov
pop
or
mov
sbb
push
xor
push
ja
or
rcrl
mov
xor
mov
out
icebp
imul
mov
or
or
xchg
dec
aam
out
in
stos
add
push
leave
mov
in
cwtl
stc
mov
mov
dec
xchg
dec
adc
call
lods
mov
cs
xchg
and
fwait
sbb
xchg
inc
sub
add
imul
add
add
lea
adc
cs
aaa
sub
icebp
jae
cmc
call
out
in
adc
dec
call
bound
jbe
cmp
rolb
enter
push
dec
dec
dec
leave
or
push
or
cmp
cmp
ds
scas
cmp
xor
pop
inc
jnp
cs
stos
fwait
sub
and
xchg
and
sbb
adc
push
pop
and
jp
and
mov
jg
clc
or
mov
jmp
test
pusha
dec
cld
lahf
lea
push
call
imul
bound
in
pusha
pusha
push
pop
iret
cs
pop
push
add
call
dec
xchg
pop
dec
jecxz
inc
enter
ret
into
cmp
daa
sarb
mov
dec
or
hlt
mov
mov
shll
daa
xchg
mov
mov
pop
out
pushf
sbb
adc
sbb
cwtl
aaa
mov
xchg
or
cmp
sbb
xor
icebp
and
outsl
ja
repnz
or
ds
imul
shrb
push
int
fcom
je
jno
faddp
pop
mov
aam
call
or
dec
xor
aas
inc
pop
rcrl
cmpl
shlb
cld
xor
cs
sbb
xor
imul
and
leave
insb
inc
pop
pop
movsb
iret
sbbl
leave
xchg
cltd
test
adc
push
lahf
sbb
mov
test
jp
xchg
cs
mov
jae
pushf
out
daa
popf
pop
call
mov
jge
fucomip
adc
push
hlt
mov
fucomi
push
push
add
sarb
fcmove
int
mov
mov
fidivrs
cltd
std
mov
int3
test
xor
lods
scas
mov
popf
mov
rcrl
test
dec
xchg
xchg
adc
cmova
or
mulb
pop
ret
sahf
add
imull
pop
cmp
or
xor
or
insl
ss
adc
push
out
loope
jecxz
push
or
sbb
out
aam
jns
mov
push
fyl2xp1
dec
dec
adc
xor
cmpsb
daa
inc
cmp
dec
enter
xor
into
lds
cmp
pop
pop
and
push
mov
sbb
cmpsl
sbb
sbb
adc
push
fists
in
lea
les
jl
std
clc
subb
je
jne
xchg
addr16
xorl
pusha
pop
pushf
in
inc
jne
gs
loop
lcall
push
rcr
mov
popa
push
fcmovne
into
int
stos
pop
hlt
inc
lds
add
xor
dec
fwait
into
clc
fbld
rol
loop
lahf
mov
cwtl
mov
fwait
sub
adc
add
enter
cmp
lds
add
lcall
fwait
clc
xor
testl
icebp
hlt
hlt
fldl
cld
es
loopne
adc
in
pop
popa
dec
jmp
fisttpl
aam
insl
cmp
dec
bound
sbb
inc
push
xchg
shrb
cld
xor
xchg
sbb
ss
mov
sub
and
mov
pop
sbb
xor
dec
adc
shrd
or
xchg
aad
and
mov
push
addl
stos
push
mov
or
cld
mov
pop
call
dec
arpl
jo
xchg
pop
pop
scas
push
push
dec
add
push
dec
lret
pop
int3
lret
std
fdivrs
pop
clc
hlt
mov
sarb
mov
test
hlt
mov
test
inc
or
loop
mov
es
add
fadds
add
sahf
decb
push
pop
fwait
lcall
cs
xchg
pop
pop
cmc
daa
outsl
jp
add
hlt
mov
shll
sub
in
jbe
mov
cld
adc
fsubl
test
xchg
cmp
sarl
cld
test
dec
sbb
dec
dec
inc
jbe
les
ret
cmp
push
xor
jge
pop
dec
clc
bound
daa
int
js
cs
fbld
cmp
push
les
sub
mov
jno
addb
sbb
std
mov
std
cmpsb
pop
jbe
jmp
hlt
xchg
insl
pusha
ljmp
pop
push
pushl
mov
lahf
imul
cli
ret
enter
leave
push
jecxz
jne
mov
mov
ja
mov
mov
jge
mov
mov
rolb
jmp
mov
enter
xchg
lcall
sub
stos
sarl
mov
xchg
xor
mov
sbb
stc
push
repnz
movsl
pop
out
repnz
in
jns
jmp
lods
fildl
out
xlat
fcmovu
jae
sub
iret
ljmp
xchg
dec
in
sti
dec
dec
inc
pop
and
cmpl
push
cmp
cmp
hlt
fs
xor
rsqrtps
sbb
sbb
divb
sbb
sbb
popa
push
adc
lods
hlt
mov
test
gs
test
idivb
sahf
pop
jno
je
pop
orb
jge
mov
jno
repnz
or
push
enter
mov
mov
mov
mov
push
mov
cli
mov
mov
ss
out
lods
inc
xchg
lods
cmp
cmpsb
rcrb
cld
fistl
xchg
sqrtps
scas
xchg
repnz
shll
pushf
lock
pandn
es
mov
repz
das
add
test
cmp
adc
cmpsb
dec
sub
cmp
rorl
das
fs
jecxz
mov
inc
jl
pop
sub
test
shr
pop
cmp
shll
xor
jp
inc
and
sub
mov
cmp
int3
and
mov
adc
rcll
jle
push
stos
pop
or
jae
addb
stos
adc
add
jno
or
or
ljmp
pop
push
pop
movsb
imul
rclb
dec
add
pop
arpl
repz
in
aam
hlt
cmp
lahf
int
mov
mov
mov
aaa
cmpsl
stos
test
mov
in
enter
pushf
fwait
sbb
xchg
sub
xchg
xchg
mov
xchg
mov
cmp
mov
xchg
push
add
rcr
cmp
pop
mov
mov
out
inc
add
fbld
enter
jo
inc
pop
fmull
sarb
ljmp
push
das
fisttpll
inc
pop
aad
pop
cmp
and
fwait
cmpl
mov
push
ret
sub
les
inc
fistpl
mov
pop
mov
jp
sbb
adc
cs
pop
or
jle
sbbb
xchg
bound
addr16
jge
ja
movb
push
call
sahf
xchg
jle
add
dec
in
in
mov
push
rcr
mov
in
sti
lret
sbb
sarb
fbstp
mov
loope
inc
mov
in
dec
xlat
test
xor
rcrb
icebp
shlb
pop
and
lods
cltd
pushf
ss
sti
fstl
xchg
mov
stc
lahf
mov
push
or
pop
loope
clc
sahf
outsb
cmc
cld
sti
inc
and
jle
jmp
div
jg
out
clc
add
adc
fbld
pop
sub
mov
arpl
loope
push
rorb
enter
xor
dec
or
leave
add
pop
leave
and
ds
jb
dec
out
daa
sub
aaa
sbb
and
xor
les
push
les
lds
or
mov
pushf
mov
ret
js
push
ja
jnp
leave
pop
mov
jbe
push
call
imul
dec
xchg
jl
lcall
pop
pop
pop
fstps
push
cmpsb
insl
ffreep
jmp
lret
dec
int3
lret
div
push
cmp
mov
scas
les
mov
mov
sarb
test
lods
cmp
cmpsb
movsl
sbb
mov
popf
nop
adc
cwtl
or
mov
out
popf
push
or
add
popf
mov
jle
loope
lock
pop
loopne
push
push
cmp
ljmp
cmc
arpl
notb
pop
lea
fcoml
aam
jg
aas
jae
or
rcl
aas
pop
testl
add
xor
sub
mov
sbb
ret
jle
sbb
bound
cmp
sbb
mov
test
jb
adc
out
or
ret
or
xchg
mov
sbbl
xchg
and
jno
mov
jbe
push
push
stos
pop
jmp
lock
mov
call
imul
dec
cli
dec
shrl
ret
ret
negb
out
mov
push
push
pop
scas
mov
dec
sahf
int
jmp
fdivl
mov
enter
jmp
xor
mov
sub
cmc
xchg
push
xor
jg
cld
dec
sub
jmp
lock
add
std
sbb
lds
loopne
loop
xlat
fists
xlat
cbtw
icebp
mov
ror
mov
fiadds
imul
ret
aaa
push
and
xor
pusha
pshufw
bound
push
inc
pushw
pop
and
pandn
push
sbb
es
xchg
pop
or
dec
jg
adc
in
adcb
lret
xchg
stc
add
mov
mov
scas
je
mov
sub
sub
popa
pop
push
cmpsb
push
stos
es
aam
push
movsb
push
int
and
out
lods
or
push
mov
push
mov
mov
xor
mov
dec
ss
xchg
stos
inc
pop
aaa
out
mov
and
xchg
lcall
stos
mov
xchg
xchg
adc
sub
or
and
jmp
std
cwtl
inc
cli
ss
idiv
push
ds
out
mov
jle
sub
jmp
data16
loop
pop
inc
and
sti
push
push
and
aam
aad
aad
cltd
lret
sub
inc
das
inc
inc
inc
push
and
lock
cmp
std
arpl
mov
and
ss
sub
jo
and
inc
adc
lcall
movsl
mov
adc
cs
or
lcall
mov
cmp
jmp
jb
call
lock
insb
imul
xchg
push
in
pop
arpl
jo
sahf
pop
pop
sub
add
loope
dec
inc
loope
lods
or
cmc
push
lock
xchg
lds
mov
std
mov
lods
and
stos
mov
enter
mov
cwtl
cltd
pushf
inc
fwait
insl
xchg
pop
rclb
xchg
clc
inc
incl
sbb
iret
add
clc
cs
std
ljmp
cld
sub
jmp
loopne
pop
pop
int3
iret
mov
push
jno
sub
rcl
ja
into
mov
fucomip
push
dec
dec
inc
pop
sub
cmpl
pop
outsl
cmp
popa
mov
dec
mov
sub
sub
insl
and
mov
emms
push
sbb
adcl
xchg
pushf
mov
adc
mov
aaa
jg
add
aad
test
lock
dec
out
mov
lea
and
mov
pusha
jp
stos
arpl
or
sbb
ret
jbe
jmp
mov
inc
dec
aam
pop
lret
into
lock
mov
cmpl
shll
test
inc
test
mov
mov
and
scas
fwait
sahf
inc
cmpsl
pop
cmp
xchg
aas
push
or
xor
jg
in
add
sub
incb
xlat
out
mov
or
and
out
stc
wrmsr
notl
jecxz
jge
jmp
cmc
movsl
ror
mov
aaa
push
in
rorl
push
daa
pop
movsl
and
shrb
inc
pop
dec
test
cli
xor
sub
testl
movsl
jbe
sbb
mov
movsl
or
jnp
lods
jp
or
mov
mov
movsb
push
les
lods
in
jnp
jge
pop
or
outsl
push
dec
lods
adc
test
movsl
pop
leave
xlat
in
push
pop
push
roll
push
sahf
into
rclb
int3
xchg
mov
gs
or
les
lock
fnsave
mov
and
mov
sbb
std
aad
lahf
mov
and
xchg
lcall
stos
mov
xchg
xchg
inc
pop
adc
pushf
or
sbb
add
add
insb
sti
jns
rorb
jno
ljmp
cmpsl
mov
in
insl
jmp
ficoms
rorl
aad
into
mov
les
pop
add
es
add
test
mov
xlat
insb
popa
dec
push
outsb
xor
dec
mov
cs
stos
fisubrl
xorl
adc
and
adc
dec
pop
or
shll
mov
sub
addb
ja
clc
and
jle
xchg
hlt
mov
bnd
insb
sahf
in
inc
pop
cld
pop
fs
sarl
push
jns
adc
mov
push
push
dec
leave
lret
into
lods
mov
sbb
mov
mov
xor
mov
cmp
lods
stos
imull
adc
mov
xchg
adc
fcoml
cmpsb
adc
mov
scas
out
xchg
xchg
js
iret
adc
enter
sar
jnp
scas
add
lock
or
das
call
adc
fidivs
mov
fcmovnbe
mov
ficoms
out
pop
repz
aad
adc
fs
dec
dec
inc
leave
inc
roll
mov
imul
and
xor
xor
xor
sub
out
pop
and
movsb
adc
and
sbb
ss
push
movlps
movsb
jo
or
stos
adc
test
jp
add
out
xchg
js
jae
xlat
push
jns
imul
stc
insb
sub
shlb
pop
pop
ror
jg
push
push
push
sub
dec
and
into
int
sbb
cmp
lret
mov
lock
lret
cmpsl
jecxz
xor
lcall
and
std
scas
mov
movsb
inc
adc
mov
es
loop
add
cmp
inc
cli
jle
or
std
push
mov
repnz
mov
jne
cmpsl
sub
jns
ss
in
jo
jge
fcmovbe
adc
rorb
mov
enter
xor
dec
dec
pop
subl
jae
mov
clc
das
andl
mov
fs
sub
mov
mov
and
sahf
movsl
sbbl
gs
push
adc
cmp
pusha
inc
push
or
adc
inc
jns
xchg
jns
xchg
mov
je
ss
cli
dec
jmp
outsb
clc
ret
push
lahf
fs
jle
mov
jb
push
push
dec
rcr
stos
jecxz
push
push
pushf
adc
mov
mov
lret
mov
lret
mov
ljmp
jnp
push
mov
cmpsl
sub
mov
scas
aad
cwtl
sbb
hlt
sub
pushf
repz
mov
adc
xchg
or
xor
add
fs
cmp
adc
mov
out
bnd
sti
cmc
call
pop
in
loopne
pop
imul
out
pop
popa
dec
loop
fisttpl
aam
sbb
iret
dec
dec
mov
mov
mov
imul
fs
sbb
sub
sub
pop
xor
sub
and
mov
sahf
movsl
sbbl
ret
cs
fs
or
mov
push
mov
add
lods
mov
test
pop
xchg
lret
loopne
imul
fs
lods
and
xlat
inc
sbb
inc
cmp
mov
into
jecxz
sarb
pop
mov
mov
out
mov
dec
stos
test
sub
cmp
cmp
loop
lcall
cmpsl
lock
push
or
or
xlat
sbb
add
jp
mov
clc
not
mov
lock
loop
mov
add
pop
out
jmp
push
call
lock
xor
fcom
shrl
lret
dec
inc
mov
jge
int
inc
cmp
jbe
mov
das
popa
dec
mov
sub
xor
and
jg
es
pop
sbb
rol
mov
mov
jg
mov
mov
test
jp
lock
jno
cli
orb
andl
pusha
jp
mov
pop
fucomi
pusha
fcomps
push
rcr
push
push
push
aad
rcrb
dec
aas
push
inc
push
int
bnd
int3
mov
push
cmpsl
mov
movsl
ret
mov
dec
cmp
cmc
test
mov
xchg
dec
mov
in
popf
nop
sbb
icebp
pop
push
adc
pushf
cmp
add
aaa
cli
ss
bnd
outsl
cld
div
mov
xor
and
jno
cs
shl
fisttpl
addr16
jg
or
dec
aaa
pop
mov
add
mov
cmp
mov
mov
xor
jp
ret
es
inc
hlt
push
and
lret
cmp
mov
adc
xchg
or
lea
mov
or
test
jge
mov
push
repz
cs
std
pusha
sub
fstp
shlb
push
in
push
push
push
dec
mull
sahf
lret
into
into
pop
fstpt
test
mov
mov
add
inc
lods
sub
xchg
cmpsb
pop
and
mov
arpl
xchg
insl
adc
pop
jnp
push
or
add
sub
jp
in
or
sti
adc
and
lds
call
iret
std
out
in
test
adc
push
xor
fsubs
dec
pop
jecxz
rclb
in
push
push
pushf
iret
lret
data16
in
jg
jle
inc
cmp
mov
cmp
xor
jp
scas
mov
out
cs
sub
push
lahf
addr16
sbb
mov
push
pop
inc
repnz
adc
sub
jg
ljmp
int
sbb
rcll
jns
jnp
mov
push
mov
scas
jne
mov
fs
pusha
pop
mov
xchg
pop
push
pop
or
bound
jmp
push
push
push
in
leave
pusha
push
push
dec
leave
enter
sahf
vpinsrw
pop
push
mov
xchg
cmpsl
mov
stos
dec
add
inc
movsb
sahf
in
lods
rcrl
mov
cltd
pushf
and
push
clc
rcll
mov
and
or
pushl
cltd
push
add
cld
adc
ds
xchg
sahf
aaa
incb
lock
mov
in
fdivp
xlat
push
fcmovnu
pop
fwait
dec
mov
outsb
aam
lret
movsl
pop
dec
inc
aas
inc
pop
aaa
mov
pop
jl
shl
xor
xor
sub
test
sub
mov
adc
and
sbb
test
daa
mov
adc
mov
movsb
andl
push
js
add
jl
lods
or
cltd
mov
jns
outsb
insl
cltd
loop
push
jae
arpl
imul
pop
push
jmp
push
push
aam
lds
dec
int
rcr
rcr
psrlq
mov
xor
mov
dec
in
mov
cmpsl
test
cmp
mov
jle
cmpsb
movsl
cwtl
xchg
xor
mov
xor
nop
mov
push
xchg
xchg
adc
mov
or
or
jl
aam
cld
sti
incb
jne
in
jg
pop
add
xor
cmc
popa
sub
ds
stos
data16
xlat
fucomip
sub
ror
inc
pop
cmpsb
dec
aad
test
out
xor
jge
dec
ss
inc
pop
aad
test
imul
insb
mov
sbb
ss
push
mov
mov
and
sbb
shlb
les
adc
into
xor
pop
lahf
jle
push
pop
cmpb
cmpsl
xchg
pop
int3
cmpsl
jg
add
dec
jnp
test
pop
push
mov
push
imul
jp
out
fs
and
jge
cs
pop
pop
daa
jmp
push
push
fnsave
dec
lret
into
int
push
jmp
mov
mov
xchg
mov
daa
lock
lods
stos
and
cmpsl
sub
call
stos
lcall
sub
stc
aad
mov
xor
ret
stc
mov
cli
idiv
std
outsl
jp
add
hlt
mov
fnstenv
xor
loopne
popa
insb
enter
jle
or
push
cmp
dec
dec
pop
scas
xlat
aad
adc
jl
push
sub
je
adc
jbe
ss
popf
jnp
mov
nop
cmp
ss
out
xchg
sub
outsl
ljmp
mov
imul
cwtl
sbbl
adc
sub
xorl
jle
lahf
ja
push
lods
je
jns
xchg
pop
cmpsl
insb
insb
inc
stc
insl
pusha
pop
sti
push
jle
fistps
out
inc
pop
call
sub
push
push
mov
arpl
xor
sar
mov
hlt
cmp
mov
mov
cmpsl
out
xchg
stos
test
ja
lahf
mov
mov
and
fimuls
sbb
mov
or
add
sbb
xor
fdivrp
testl
repnz
mov
or
test
iret
sub
negl
loope
stc
movsl
stc
fcom
fidivl
fldt
shrb
pop
dec
loop
jo
dec
in
xchg
aas
inc
pop
jbe
mov
cmp
mov
or
xor
xor
inc
les
inc
xlat
pop
pop
and
loopne
mov
inc
mov
xor
push
nop
xchg
xchg
adc
stos
xchg
adc
fists
lea
dec
jb
fisttpl
add
jl
xchg
lock
jb
movsb
mov
mov
pusha
add
push
scas
pop
in
pop
arpl
mov
insl
pop
pop
aam
pop
faddp
pop
push
dec
dec
aam
pop
lret
into
lock
mov
cmp
stos
leave
mov
dec
pop
xchg
mov
xor
sub
scas
mov
mov
and
cmpsl
mov
imul
nop
or
pop
or
incl
int
xor
testb
push
out
loop
in
mov
ljmp
clc
loop
add
fadds
jb
inc
sbb
hlt
cld
mov
fcmovbe
lahf
arpl
lret
gs
fcom
jne
inc
pop
out
sub
cmp
aam
inc
das
xor
push
ret
sub
cs
push
ds
pop
sbb
addr16
movlps
mov
push
push
sidtl
add
jnp
push
out
push
dec
cmpb
push
or
pop
mov
mov
outsb
jbe
push
and
xor
jge
roll
fs
push
rcr
mov
adc
mov
inc
inc
lods
dec
mov
rcrb
mov
outsl
mov
stos
test
and
add
das
sahf
movsl
xlat
fwait
lret
jno,pt
xchg
pop
or
mov
ret
add
ror
ja
repnz
push
out
outsb
dec
add
lock
or
loopne
inc
xor
fadds
jnp
dec
xlat
pop
fs
out
fcmovnu
and
sbb
rorl
dec
dec
push
cmp
jecxz
clc
inc
inc
pop
mov
les
dec
cmp
dec
push
sbb
arpl
jge
sub
mov
xor
push
and
mov
pop
sbb
mov
xor
popf
iret
jbe
mov
data16
pop
addl
jns
xchg
mov
mov
mov
hlt
push
jle
outsb
insl
cli
jbe
popa
ds
push
hlt
push
jae
fistpl
fistpl
push
dec
dec
and
int
pop
fstpl
xchg
hlt
mov
cli
scas
mov
add
xlat
inc
icebp
xchg
jmp
mov
and
mov
sti
fistl
mov
cmp
push
or
inc
push
push
psubq
adc
or
push
div
je
in
jne
jmp
loop
jl
dec
and
fdivs
hlt
mov
cli
cmp
shr
pop
jo
push
mov
pop
or
inc
inc
pop
dec
inc
xchg
push
cmp
cmp
dec
xor
xchg
jne
xor
inc
dec
sub
sub
xchg
adc
fiaddl
fsts
movhlps
outsb
cmpsb
push
adc
xlat
jno
adcb
jns
js
mov
jo
pop
je
cltd
lock
push
scas
pop
jp
mov
data16
lret
pop
pop
in
add
dec
or
sub
push
push
dec
leave
int3
int3
and
inc
dec
lahf
inc
mov
cmp
out
mov
xor
stos
std
sbb
mov
scas
and
add
lods
push
and
pushf
fwait
adc
xchg
adc
xchg
push
jnp
or
xchg
push
jo
inc
add
mov
inc
idivl
loopne
sti
decb
out
lock
hlt
and
out
out
imul
in
loopne
enter
cmp
xlat
arpl
loope
iret
push
sbb
xchg
daa
fcmovne
dec
js
gs
addb
inc
xor
cmp
xor
xorb
xor
sbb
insb
sub
lock
es
xorb
pop
rdpmc
xor
mov
mov
decl
mov
mov
aaa
jb
mull
jb
mov
addr16
imul
fs
fs
mov
cmpsb
push
ftst
shrb
add
lods
push
push
iret
adc
outsb
pop
jns
int3
aas
sbb
mov
cld
icebp
push
lock
out
clc
cmp
sub
or
out
nop
and
xchg
xor
in
dec
push
and
sub
loope
xchg
cmp
pop
leave
add
hlt
cmpsb
daa
xor
stc
jmp
cli
sahf
cmp
push
cltd
fdivrs
test
inc
add
les
negl
in
mov
mov
es
xchg
pop
ror
rcrb
rcrl
jmp
mov
inc
mov
pop
inc
inc
inc
addr16
lea
jns
mov
and
xor
mov
call
mov
or
and
lret
sbb
lods
adc
adc
scas
or
xchg
jp
mov
addl
xchg
cs
mov
jae
pushf
out
daa
popf
add
pusha
pop
fwait
bound
inc
movsb
pop
pop
ss
pop
pop
pop
test
insl
push
push
lds
stc
dec
xor
sarb
call
mov
scas
mov
dec
add
cmpsl
cmpsl
inc
mov
mov
mov
add
fwait
mov
lret
push
push
out
pop
shr
scas
out
or
pop
xlat
ud0
add
jl
test
sti
incb
cs
hlt
jecxz
loope
out
test
sub
loopne
test
in
std
test
jbe
rorb
rorb
enter
xor
dec
jge
test
sub
jns,pt
aad
ja
xor
ret
outsl
lods
mov
sub
sub
and
mov
test
push
cmpsl
adc
lods
cmpsb
adc
mov
dec
mov
xorb
inc
pop
adc
mov
push
insb
mov
popa
xchg
es
mov
movsb
mov
fchs
mov
mov
enter
dec
leave
hlt
incb
xchg
mov
std
mov
scas
push
movsl
inc
mov
dec
xchg
popf
mulb
push
cli
mov
pop
in
outsl
movsl
cwtl
loop
xor
lcall
xchg
sbb
dec
lea
orl
in
inc
std
lock
aad
jb
add
in
test
sbb
das
jecxz,pt
bound
inc
or
push
imul
mov
dec
pop
inc
xlat
jecxz
inc
inc
mov
lea
cmp
insl
dec
pop
outsl
xor
clc
xor
ret
push
outsb
pop
pop
mov
and
pop
push
push
cmpsl
ja
dec
jns
push
push
lahf
mov
lods
fwait
mov
pushf
je
push
push
ja
xchg
jo
mov
cmp
push
push
add
imul
fs
movsl
pop
in
pop
jmp
das
cmpsl
dec
push
dec
aam
dec
fmuls
into
jp
mov
int
rol
jmp
out
push
loopne
dec
scas
int
add
cmc
mov
loop
aaa
movsb
rcl
cmpsb
das
xchg
hlt
hlt
popf
rcrl
iret
xchg
sbb
push
rol
pop
ljmp
mov
js
sti
cld
std
lock
cs
repz
pop
inc
in
jmp
push
jl
frstpm(287
fcomp
rcll
mov
aas
push
pop
aam
rcl
aad
dec
popa
mov
xlat
mov
add
fcompl
cmp
mov
xor
sub
sub
mov
sub
stos
in
and
es
imul
pushf
adc
adc
mov
xchg
into
jg
inc
add
ja
cmp
aaa
test
adc
adc
mov
imul
pushfw
data16
xlat
loop
insb
pop
pop
add
push
rclb
leave
xchg
pop
repnz
sti
dec
enter
ret
ret
nop
movsb
mov
lcall
das
pop
mov
cmpsl
std
cmp
inc
jmp
out
shlb
cwtl
cwtl
xchg
stc
ja
sahf
sbb
xchg
adc
fwait
xchg
mov
push
or
cmp
inc
add
aas
mov
pop
loopne
cld
add
repz
andl
cmp
data16
push
insw
icebp
out
xlat
orb
popf
enter
jge
fs
push
fxch
inc
aas
jno
push
and
jge
aaa
xor
fwait
jns
mov
into
push
mov
inc
cmp
xchg
gs
cmp
ss
mov
sbb
pop
xchg
pop
es
or
pop
ret
or
add
pop
add
addl
cmp
jge
imul
jnp
insb
push
test
mov
jb
outsb
pop
pop
pop
out
push
test
mov
dec
ret
fildll
or
xlat
push
popl
ret
out
jecxz
repnz
mov
dec
lods
lret
mov
jne
aam
cwtl
inc
jg
mov
mov
enter
je
xchg
xchg
loopne
or
jg
mov
inc
ds
sbb
inc
divl
repz
push
cmp
jp
loop
mov
cmc
insb
xor
int
in
push
pop
pop
repz
and
iret
sarb
sbb
or
in
into
popa
loope
hlt
push
or
inc
inc
lds
addl
ja
bound
fnstcw
sub
sub
jge
add
mov
pop
push
mov
sbb
cmpsl
pop
adc
insl
repz
or
add
cmp
pop
ja
mov
cwtl
lods
mov
push
daa
push
in
sub
lods
jo
lods
sbb
mov
call
pushf
enter
add
push
clc
push
or
cli
inc
dec
cmp
ret
bnd
mov
dec
test
cmpsl
xor
mov
test
lods
sbb
dec
jl
sahf
sahf
lds
mov
hlt
or
or
add
add
stc
das
stc
stc
movsb
outsl
cmp
inc
mov
pop
psubsb
call
in
sbb
jecxz
jecxz
mov
jg
je
push
jmp
xor
lret
ror
mov
fs
sbb
inc
rolb
mov
cmp
popa
int3
int
jne
popa
sub
inc
push
insb
and
cltd
psraw
mov
sbb
mov
xchg
pushf
or
adc
mov
mov
addb
or
lods
jl
cli
cmp
lret
xor
mov
sbb
pop
jecxz
pop
nop
nop
push
imul
push
dec
out
mov
leave
std
pop
xor
rol
dec
int
mov
sarl
mov
stos
je
cmpsl
add
bt
pop
xchg
inc
cmp
sbb
movsl
xchg
xchg
cmp
daa
arpl
or
sbb
add
push
out
out
aaa
cld
cld
adc
icebp
hlt
sbb
neg
mov
in
adc
sub
fstl
and
je
adc
jmp
inc
adc
pop
fdivs
inc
inc
int
inc
cmp
dec
jl
cmp
enter
xor
repnz
das
push
sub
imul
es
adc
push
pop
push
cwtl
shrb
jmp
or
mov
sbbl
jb
jge
xchg
shrl
mov
ljmp
imul
mov
int
bnd
push
push
ss
push
call
faddl
push
push
clc
pop
mov
mov
hlt
dec
fisttpl
in
lret
icebp
mov
add
scas
hlt
out
cmp
das
scas
sbb
lahf
fwait
sahf
inc
adc
inc
xchg
xchg
xchg
inc
pop
rol
cmp
into
icebp
mov
sbb
adc
cmp
std
dec
out
in
lods
int3
xor
cmc
inc
out
fadd
sub
in
jp
stc
movb
mov
sbb
dec
pop
adc
aam
dec
lsl
in
sbb
inc
inc
pop
cmp
cmp
cli
sub
xor
push
xchg
jae
pop
shl
insb
sub
and
sbb
ficoml
leave
adc
mov
mov
lcall
mov
jbe
mov
das
data16
jne
push
dec
cmpsl
imul
fs
data16
data16
push
pop
dec
dec
sub
loopne
dec
loope
inc
xchg
lret
inc
dec
or
inc
js
iret
mov
mov
mov
and
call
cmp
mov
movsl
mov
fcompl
mov
sub
xchg
and
xchg
or
ljmp
sub
cli
or
idiv
mov
ljmp
jmp
stos
loope
lahf
stos
ja
mov
std
mov
sbb
mov
pop
jl
xlat
leave
pushf
loopne
dec
dec
dec
fldt
aaa
cmp
pop
dec
das
xor
ss
xor
addr16
cmp
mov
jge
sbb
jmp
test
daa
mov
adc
rorl
leave
lea
addl
add
xchg
push
jge
xchg
shrl
ret
test
lods
outsb
insl
xchg
xchg
bound
inc
mov
je
mov
push
lret
out
xchg
dec
add
mov
lock
mov
cmpl
scas
lods
cmp
aas
stos
aad
call
mov
xchg
sbb
and
in
xchg
xchg
or
popa
imull
or
inc
add
cli
repz
push
cmp
jp
loop
fdiv
cmc
call
insb
pop
out
xlat
lret
mov
in
cmpsb
pop
in
jae
sub
iret
xchg
aad
into
popa
in
data16
in
cmpl
addr16
dec
repnz
cmp
jnp
bound
sub
adc
sbb
int
pop
stos
adc
adc
mov
dec
mov
jb
into
cmp
xor
jnp
and
jge
mov
movsl
out
mov
insb
push
gs
bound
pop
jge
pop
pop
or
push
cld
aad
insb
pop
inc
dec
loop
gs
mov
shll
mov
js
mov
mov
jnp
sub
jno
test
icebp
pop
fsubrl
xor
fcmovnbe
cmp
fcoms
dec
sahf
xchg
jb
xchg
or
pop
sub
out
or
iret
inc
orl
repnz
adc
std
adc
push
xor
or
ljmp
jp
xor
out
in
xlat
fidivrl
out
ficoml
lret
cmp
push
loopne
dec
dec
pop
mov
jg
jae
mov
clc
das
orl
mov
daa
in
pop
lods
test
xor
and
cmp
sbb
xor
cmpsl
sbb
cltd
fisttpl
push
adc
mov
jno
roll
mov
fnstenv
lea
movsl
imul
lods
popa
xchg
mov
lods
movsb
ret
dec
enter
add
xchg
push
add
int3
inc
shrb
in
mov
push
clc
mov
jmp
mov
add
xor
add
lods
in
lods
xor
mov
cmp
dec
inc
xor
sub
cmp
adc
fisubrl
inc
add
stos
jns
pop
sub
sub
es
ljmp
cmp
ljmp
fistpll
gs
inc
ror
mov
loop
jmp
sub
fistps
loop
sub
arpl
mov
lret
add
mov
pop
jb
dec
ret
sbb
xor
out
push
pop
hlt
popa
scas
inc
pop
pop
stos
inc
xor
pop
leave
fsubrl
sbb
sbb
sbb
cmpsb
std
pop
cmpps
addr16
adc
fidivs
mov
les
dec
test
mov
mov
pushl
jo
out
xchg
repz
decl
fstl
jecxz
jecxz
add
mov
lret
into
lcall
cs
mov
mov
mov
test
xlat
mov
out
add
stos
inc
xchg
aad
jmp
movsb
mov
jmp
test
adc
inc
leave
push
aas
mov
ss
add
popf
cmp
cli
stc
pop
jle
or
cmc
and
jmp
out
in
dec
sub
popa
jb
fs
push
jge
xor
fnstenv
xor
sub
shrl
push
and
sub
xor
stos
outsb
aas
inc
push
push
jno
jge
inc
sbb
lea
sub
ja
and
and
dec
lcall
xor
adc
mov
mov
iret
mov
push
lcall
jnp
push
jno
aad
addr16
xor
bound
bound
nop
jecxz
call
ljmp
push
push
loope
push
dec
cwtl
or
dec
adc
rol
ret
iret
in
dec
xchg
stc
mov
dec
mov
mov
aas
mov
scas
ret
jno
mov
jmp
sahf
mov
sbb
and
jmp
or
add
notl
fldl
in
int3
or
sti
sti
or
ret
or
cmc
or
jae
js
jmp
out
mov
cmp
jecxz
loopne
xorl
push
insl
aad
xchg
adc
insb
cmp
jmp
dec
dec
pop
xlat
leave
or
or
stos
cmp
daa
adc
cmp
cmp
fs
shrb
sub
adc
jmp
and
loop
bound
push
pop
push
mov
lret
or
xchg
sub
loopne
sbbb
xchg
lods
xchg
cli
inc
mov
or
sub
imul
lret
fs
and
push
idivb
push
jmp
push
insl
xchg
push
mov
mov
pushf
mov
xor
ss
in
fildl
mov
movb
daa
xor
mov
movsl
xor
popf
movsl
mov
push
push
cmp
stos
push
mov
int3
rorb
std
jnp
mov
push
clc
add
das
js
and
cmp
xorl
repz
ljmp
adc
xchg
jae
fidivl
negb
fst
iret
js
nop
inc
adc
xchg
test
loope
aas
inc
inc
lds
adc
dec
mov
xor
aas
nop
pop
scas
cli
xchg
sub
cs
adc
push
cmp
movsl
xlat
adc
adc
lods
dec
adc
mov
int3
sub
subb
jl
test
mov
js
add
jmp
popf
lcall
ficoml
pop
pop
pop
fsts
enter
xchg
dec
jecxz
dec
jecxz
lret
fsubrs
mov
cmc
test
repnz
scas
xlat
leave
mov
mov
dec
cmpsl
sub
lods
stos
scas
lods
cmp
lret
jge
movsl
cwtl
xchg
mov
sub
fistl
inc
xchg
arpl
fadd
xor
jl
js
dec
stc
std
lock
and
sub
add
imul
int3
gs
lds
xlat
mov
fstp
iret
rcl
sub
enter
inc
lret
aas
jb
lret
repz
mov
jp
outsb
aad
sbb
xor
sub
sub
sub
pop
mov
outsl
and
sbb
sbb
pop
sbb
xor
popf
iret
jp
dec
or
mov
mov
bound
movb
fstpt
mov
testl
pop
cld
push
cmpsb
pop
pop
xor
and
or
imul
mov
pop
iret
mov
mov
test
sbb
mov
jecxz
lock
jmp
and
pushf
cmp
dec
mov
popf
nop
sbb
xchg
cmpsl
out
xchg
xchg
inc
mov
add
orl
sbb
jnp,pn
jnp
push
std
lock
repz
jns
in
movsb
outsb
pop
loopne
loop
in
out
pop
jnp
fcmovu
fdivl
adc
imul
fistpll
dec
dec
dec
fadds
dec
inc
inc
rolb
inc
push
and
cmp
sub
je
bound
sub
pop
pop
dec
jge
imul
cmpsb
sbbl
in
adc
imul
mov
outsl
bswap
mov
push
mov
mov
jmp
jo
mov
sahf
test
int3
bound
xchg
in
outsb
xchg
pop
add
sahf
movsb
sahf
dec
dec
in
pop
push
int
sub
xlat
ret
in
xchg
add
gs
faddp
or
int
mov
mov
test
mov
out
lahf
ret
sahf
and
mov
shl
sahf
dec
test
lock
xchg
cmp
fcoml
add
out
and
incl
add
divb
adc
xchg
fists
lock
jle
fbstp
or
out
sbb
gs
loopne
fs
push
jge
xlat
flds
iret
mov
dec
jmp
adc
push
mov
adc
push
inc
insb
pop
add
aas
repz
xor
xor
sub
mov
mov
lds
mov
pushf
mov
mov
push
mov
mov
and
pop
into
ret
js
adcl
jno
cmpsb
lea
xchg
mov
pop
cli
dec
negl
in
jns
pop
push
pop
repz
push
pop
out
dec
in
int3
imul
push
dec
rcll
dec
sarb
lds
or
adc
mov
mov
mov
sub
mov
cmp
shll
out
mov
dec
sbb
cmpsb
xor
xchg
xchg
ds
add
movb
pushf
add
into
mov
dec
sbb
imul
push
sbb
js
ja
sub
jecxz
loopne
cmpsl
pop
pop
fcompl
icebp
iret
imul
fucomip
sub
or
push
push
cmp
mov
fimuls
cmp
pop
das
int3
sub
sub
test
sbb
and
cmp
movsl
in
les
adc
mov
mov
mov
jae
clc
ja
jns
int
adc
sahf
lock
scas
jp
popf
add
xchg
xchg
cli
arpl
fstpl
out
dec
pop
cmpsl
xlat
psubsw
inc
fwait
xchg
dec
insb
push
loope
xchg
or
aas
lret
rol
mov
mov
cmp
popf
inc
test
ss
mov
mov
xchg
mov
xor
adc
stos
cwtl
xchg
mov
mov
xor
or
test
cli
stc
push
push
out
dec
das
hlt
jb
add
fldenv
out
in
loopne
insb
clc
mul
out
and
pop
fmull
sarb
js
inc
inc
push
out
fmull
xor
inc
jno
lds
inc
cmp
or
push
and
mov
aad
xor
ss
pop
sub
and
loope
lcall
sub
adc
mov
mov
and
and
test
imul
insl
cli
imul
cmp
insb
jmp
add
popf
sti
pop
push
cmpsb
push
xchg
pop
push
jae
fwait
push
ficoml
in
or
xchg
dec
repz
xchg
push
inc
xchg
pop
jg
mov
out
add
jmp
mov
repnz
inc
mov
jmp
xchg
cmp
jmp
xor
fstps
xchg
xchg
inc
scas
mov
das
or
xchg
or
add
or
cld
push
movsl
cmp
shl
call
xlat
test
xchg
popa
insb
add
jecxz
in
lret
jbe
fisubs
ljmp
inc
leave
push
in
fimuls
jo
pop
addb
mov
jns
sub
jb
pusha
ss
aas
jmp
mov
mov
mov
push
mov
fs
push
push
cmpsl
and
cmc
in
push
or
push
rolb
lds
add
lea
lahf
or
fwait
push
xchg
inc
scas
pop
addl
test
icebp
movsb
pushf
pop
iret
fidivl
push
push
push
insl
mov
repnz
lock
inc
dec
gs
mov
out
mov
lods
lret
fisttpl
test
jne
cs
sarl
or
or
xchg
cmp
loope
or
or
add
das
popf
cmp
repnz
jp
mov
mov
ss
hlt
test
sub
bound
repz
mov
out
jmp
push
cltd
inc
orl
push
ljmp
outsl
aas
pop
cmp
shl
pop
cmp
mov
rolb
dec
pop
addr16
sub
xor
jnp
and
clc
push
sbb
out
dec
test
push
push
ja
jb
loopne
test
mov
jo
pop
inc
lea
push
mov
add
nop
ja
push
arpl
pop
push
push
push
rclb
dec
xchg
insb
sti
lret
mov
dec
lret
mov
pop
in
ds
leave
inc
xor
xor
cs
rcl
xchg
cmp
xor
pop
scas
mov
lods
out
mov
adc
sti
add
sbb
js
xchg
or
stc
cld
adc
cmc
icebp
mov
or
jne
fisubl
push
loop
adc
pop
and
cwtl
or
inc
pop
sbb
dec
out
lret
jle
mov
jb
mov
inc
inc
imul
pop
shlb
mov
iret
inc
xor
lret
push
jle
daa
pop
inc
mov
cs
adc
cmp
sbb
test
mov
lods
lea
jecxz
or
mov
adc
test
jp
xchg
jns
mov
call
mov
gs
ja
pusha
fs
data16
pop
pop
adc
push
adc
lret
dec
leave
int3
inc
std
push
inc
repnz
cmp
mov
mov
pop
add
mov
in
in
dec
es
divb
fsubrl
xchg
cmp
in
dec
xor
jecxz
xchg
xchg
adc
or
add
xor
sbb
cmp
jns
mov
cs
movsl
inc
mov
dec
cmc
loop
leave
daa
jmp
test
loope
out
mov
rcr
orl
dec
cmp
loopne
dec
dec
dec
rorl
fnstsw
iret
scas
ja
mov
inc
mov
dec
bound
xor
and
insb
and
jns
mov
sbb
mov
stos
icebp
pop
push
push
sub
scas
mov
pop
add
loopne
subl
mov
mov
sbb
lods
je
mov
push
push
imul
lods
popa
cli
bound
push
pop
push
insl
cmp
pop
pop
ljmp
push
push
jo
jecxz
int3
jae
fidivl
ret
outsb
vshufpd
stos
mov
int
pushf
stos
test
dec
rcl
pop
insl
ficoms
mov
inc
out
notl
popf
mov
sbbb
mov
ljmp
xchg
sbb
je
sti
imul
movsb
xor
loope
jbe
sahf
pop
repz
fisttpl
psrlq
pop
dec
movl
pop
push
addb
mov
fimuls
imul
cmp
loop
out
and
imul
mov
xor
imul
sbb
sbb
mov
mov
int3
jns
sahf
or
jns
idiv
push
pop
mov
push
insb
out
je
xchg
std
imul
and
fs
ljmp
enter
jecxz
stc
leave
je
xchg
lret
int
ret
outsb
repnz
pusha
lahf
mov
push
mov
sub
pop
push
dec
fstp
dec
cmp
cmp
mov
push
in
lret
sub
stos
mov
mov
mov
sti
add
ja
lock
std
test
jno
or
test
imul
sbb
push
jle
pop
outsl
mov
je
push
jne
push
push
dec
imul
fs
ret
push
pop
out
mov
inc
inc
aaa
cmp
pusha
insb
das
fisubl
lea
aas
pop
mov
pop
pop
mov
inc
insl
pop
push
inc
sbb
adc
push
jl
int
mov
addl
out
repz
mov
shll
fs
test
mov
arpl
lods
pop
push
fdivp
pop
add
sbb
add
imul
sbb
into
int
stc
inc
mov
and
dec
mov
push
mov
mov
xor
mov
mov
pop
stos
test
lods
pop
sub
inc
out
notb
mov
out
daa
notb
xchg
xchg
or
xchg
add
int3
lea
xor
jno
push
cs
std
lock
push
aaa
and
movsb
jg
sbb
adc
adc
imul
rclb
popf
bound
sbb
imul
lret
add
inc
jno
mov
lods
mov
cmp
out
aaa
push
int
xor
rorb
sub
loope
sub
push
inc
fsub
push
fwait
cmp
adc
lret
lret
insl
cmp
and
mov
mov
test
jbe
mov
cmc
adc
pushf
jl
jne
lahf
outsl
adcl
scas
push
push
sub
in
pop
pop
pop
pop
int
sub
int
cli
in
dec
fyl2xp1
xchg
lret
fdivrl
add
add
jge
mov
aam
cmc
mov
imul
test
xchg
xor
in
lock
xchg
xchg
shrb
aad
xor
jmp
push
add
add
aaa
push
std
xchg
out
inc
add
icebp
in
xor
out
jns
mov
pop
and
pop
mov
data16
dec
or
pop
mov
cmp
inc
lds
ret
pop
cmp
cmp
das
xor
xchg
mov
mov
push
and
insb
inc
xor
sbb
movlps
or
push
dec
push
sbb
mov
push
push
test
inc
mov
mov
pop
mov
jae
add
jns
adcl
xchg
loope
scas
and
pop
push
or
xchg
shlb
pop
ljmp
push
dec
inc
sahf
xchg
mov
push
fcmovnb
nop
xchg
hlt
loop
scas
push
pop
xchg
mov
mov
mov
xchg
lods
stos
pop
mov
rcrb
out
xchg
test
ficompl
vpsrld
or
and
mov
xor
inc
add
cmp
xchg
xlat
in
out
repnz
xor
xlat
sbb
iret
xlat
out
in
imul
pop
in
mov
xlat
dec
iret
rcrb
fidivrs
pop
inc
leave
aad
jnp
xlat
cmp
inc
dec
dec
pop
ss
testl
sub
xor
bnd
icebp
sbb
daa
adc
mov
push
cmp
adc
and
and
pop
adc
sub
jg
or
sbb
mov
inc
dec
orl
cmpb
or
je
jbe
xor
xor
dec
xchg
repz
or
pop
mov
xlat
dec
mov
loope
cmpsb
mov
div
cld
pop
mov
ret
rol
mov
stos
mov
cmp
sub
fsubp
shl
roll
rcr
mov
aam
xor
icebp
xchg
xchg
xchg
inc
or
or
leave
in
test
ret
out
js
adc
icebp
hlt
repz
mov
cmpsl
jae
ljmp
sbb
notl
gs
jne
pop
insl
dec
iret
imul
arpl
jp
rolb
inc
dec
data16
dec
pop
cmp
inc
inc
inc
mov
push
sub
sub
daa
ret
and
mov
test
imul
and
pop
pop
mov
xor
pop
or
jg
mov
inc
pop
cmc
xchg
mov
insl
std
pusha
test
into
and
add
push
mov
pop
repnz
lods
pop
mulb
push
pop
bound
jg
cwtl
and
mov
enter
fisttpl
aam
xor
sub
mov
daa
imul
fcomps
adc
mov
fstp
enter
cld
or
sbb
iret
lds
dec
inc
cmc
push
out
sub
jb
loopne
out
inc
test
xor
sub
test
pop
fwait
movsb
adc
test
enter
shrl
lret
nop
into
jl
aas
sbb
xor
dec
push
xorb
test
ds
lods
cmp
aaa
push
mov
xor
dec
sahf
out
and
loope
or
adc
mov
andb
test
inc
popa
std
inc
fwait
lahf
lahf
movsb
cmp
mov
push
mov
xchg
pop
jecxz
in
arpl
aaa
movsl
pop
leave
stos
scas
sbb
dec
ret
jp
add
insl
mov
aas
jne
rol
sarb
sarb
dec
pop
movsb
mov
sub
add
cs
aam
lods
sub
cmp
and
pushf
sbb
sub
adc
or
xchg
dec
adc
sbb
test
add
aad
lcall
in
insl
cmc
enter
dec
mov
pusha
fcompl
dec
aam
mov
cli
and
ds
jb
fnsave
das
imul
xorb
sub
loope
xor
insl
and
stos
outsl
and
and
sbb
gs
pop
adc
nop
in
adc
mov
jg
fwait
insl
dec
les
jp
xchg
jae
mov
repnz
mov
out
cmp
cmc
inc
pusha
pop
bound
stos
addr16
mov
in
inc
mov
leave
insl
push
adc
or
xchg
cli
mov
cli
mov
mov
inc
add
sbb
test
pop
jmp
movsl
mov
pushf
fwait
sahf
fwait
sub
xchg
push
or
xchg
repnz
add
lret
jle
das
repz
cmc
cmpl
in
loopne
cmp
push
out
fmuls
pop
arpl
shrb
insb
xor
adc
ja
mov
dec
dec
rolb
inc
inc
rolb
mov
jae
jl
push
outsl
pop
cmpsl
mov
pop
xchg
scas
std
xchg
and
ds
add
shll
sbb
fstpl
lds
out
mov
sahf
jp
scas
add
lahf
stos
jnp
cmp
mov
out
jle
jbe
mov
add
outsb
push
cmpsl
aaa
lahf
fs
icebp
fs
stos
jle
repz
lahf
sahf
dec
rcr
mov
pop
mov
inc
cmpsl
push
ret
faddp
ret
mov
jmp
sti
scas
xor
lds
inc
mov
in
lods
fnstenv
lods
movsb
mov
xchg
fwait
sbb
xchg
sub
inc
sub
inc
cmp
push
negl
inc
add
out
aas
scas
xor
xchg
mov
std
lock
cmc
jae
scas
and
daa
jmp
sbb
cli
push
adc
insl
dec
jmp
mov
fst
push
sbb
test
cmp
in
adc
gs
aam
lds
aad
push
pop
scas
mov
cmp
xor
test
cmp
pop
cmp
and
mov
mov
int
lcall
repz
mov
mov
addl
lock
jb
mov
addr16
inc
scas
outsb
insl
pusha
pop
cmp
arpl
xor
call
cmp
push
push
clc
dec
xchg
test
arpl
cli
lock
lret
jmp
imul
lret
mov
mov
cmp
icebp
fbld
xchg
xor
mov
or
adc
xor
inc
jg
mov
xor
idiv
stc
ss
mov
lock
pop
hlt
and
mov
out
jbe
fbld
adc
and
in
sbb
fcomps
jne
pop
adcb
test
dec
insl
mov
lret
data16
rolb
inc
inc
pop
into
pop
xchg
push
mov
ds
inc
xor
and
mov
addr16
jne
push
aaa
mov
int3
cmp
push
xor
stos
arpl
xchg
push
adc
mov
decl
mov
adc
cmp
mov
or
scas
imulb
nop
pushf
out
cmc
stc
insl
pusha
pop
xchg
jecxz
outsb
xchg
lock
lods
xchg
pop
repz
pop
push
dec
dec
in
int3
imul
dec
inc
dec
xchg
enter
xchg
pop
inc
scas
mov
xor
cmpsl
test
icebp
icebp
mov
aaa
push
adc
cmpsl
clc
dec
movl
mov
imul
xchg
push
adcb
lcall
add
or
add
sti
jae
add
out
in
lret
sub
in
fcmove
mov
pop
push
loop
fnstenv
push
push
iret
sub
inc
aad
xchg
dec
adc
pop
sub
into
dec
inc
cmp
xchg
and
ds
mov
movsl
inc
xor
gs
sub
fists
pop
scas
loopne
movsl
mov
int3
xor
sbb
and
jg
mov
cmpsb
loope
xor
call
imul
lods
ljmp
mov
sahf
test
pop
pop
lcall
pop
xor
push
lret
xlat
sub
push
dec
xchg
adc
scas
repnz
maskmovq
idivl
lret
mov
mov
fisttps
call
mov
lahf
mov
mov
adc
mov
xchg
inc
lods
outsl
out
mov
das
rolb
or
sbb
sbb
clc
div
hlt
xor
cmp
outsl
jp
add
outsl
addr16
adc
mov
out
adc
pop
in
fcmovnu
cmpsl
inc
iret
rcl
adcl
fld
lret
movsl
leave
aam
aas
imul
cmp
aad
mov
xor
push
cmpsb
aaa
xor
sub
stos
in
ja
and
mov
fs
sbb
sbb
pop
or
icebp
adc
push
xchg
fisttpll
add
xchg
jns
jnp
mov
jae
jne
mov
loope
imul
repz
gs
outsl
mov
sbb
adc
fcoml
dec
add
jmp
inc
dec
xchg
mov
scas
xor
ds
sub
mov
mov
cmpsb
movsl
cwtl
mov
inc
jge
mov
adc
movsl
inc
push
ffree
cmp
in
or
sbb
add
sub
out
xor
cld
cld
adc
bnd
into
xor
pop
imul
sub
jecxz
in
lret
rorb
sub
aam
aam
push
jo
dec
dec
int
sarb
inc
je
xorl
aaa
mov
ds
mov
pop
inc
jg
cs
and
push
xchg
mov
into
xor
popf
iret
adcb
mov
sbb
xchg
jns
adc
je
xor
daa
push
hlt
cmp
insl
cltd
pushf
pop
cld
insb
jnp
rcrl
hlt
fs
fldenv
dec
dec
inc
rcrl
adc
enter
dec
cli
in
icebp
cmp
inc
lret
lds
mov
lods
mov
das
jno
sub
gs
idivb
cmp
ror
aad
and
lahf
cltd
pushf
dec
inc
popf
mov
push
xchg
adc
mov
aad
xor
xchg
roll
test
sub
out
jnp
in
gs
call
insl
push
loope
lret
fmuls
pop
arpl
iret
lods
push
xlat
rcl
loopne
jb
dec
dec
mov
mov
inc
jbe
pop
or
cmp
cs
das
das
int3
cmp
shlb
inc
jo
and
sbb
cld
fs
sbb
nop
push
out
xchg
fwait
imul
adc
mov
addl
js
adc
jnp
stc
cmp
sub
jne
cmp
push
insb
push
out
bound
fxam
mov
jecxz
pop
pop
pop
iret
gs
dec
inc
pop
push
dec
adc
push
lret
into
leave
fidivl
cmp
mov
mov
push
mov
jno
das
xor
sub
xchg
jle
xchg
outsl
pop
mov
pop
pop
mov
repz
inc
xchg
sub
or
and
xchg
add
sbb
daa
xchg
pmaddwd
jp
jecxz
stc
jae
mov
test
sbb
in
sbb
imul
in
xlat
je
add
outsb
daa
dec
dec
mov
int
cwtl
outsl
pop
mov
push
dec
aaa
cmp
push
inc
mov
jmp
outsb
dec
sub
lods
jp
sub
rolb
outsb
pop
jne
xor
sbb
sbb
push
pop
jg
dec
adc
lods
sbb
mov
movsl
test
test
jns
xchg
addr16
filds
push
data16
pop
cli
jns
arpl
dec
cmp
popa
push
dec
repnz
clc
mov
push
inc
out
cmpsb
leave
adc
mov
mov
mov
xchg
lds
mov
scas
inc
push
push
call
les
lods
scas
mov
xchg
pop
and
mov
add
stc
adc
adcb
leave
dec
add
add
test
mov
jle
mov
call
sub
in
adc
lods
push
push
stc
arpl
ret
fisttpl
enter
jp,pt
in
lcall
dec
pop
sar
les
cmp
cmp
lds
xor
xor
aas
data16
mov
and
mov
sbb
mov
push
pop
mov
push
adc
mov
sub
mov
sahf
jbe
lock
jb
xchg
xlat
scas
je
repnz
ret
push
imul
pusha
fbstp
push
push
icebp
push
in
pop
pop
push
dec
push
in
mov
sti
enter
dec
leave
jecxz
mov
mov
mov
cmp
mov
loope
dec
stos
mov
lahf
ret
lods
stos
sub
imul
cmpsb
movsl
frstor
lods
mov
xor
inc
dec
aas
mov
idiv
in
xlat
mov
jg
xchg
add
testl
cs
int
mov
out
mov
in
fcmove
rcrb
sub
in
fmuls
popf
paddq
aad
adc
or
or
ror
cmp
bound
lock
scas
xchg
sub
push
in
outsb
pop
pop
push
push
push
std
popw
cltd
repz
pop
sbb
adc
or
scas
scas
mov
mov
push
js
jns
mov
push
jne
mov
sub
sub
in
pop
xchg
pop
fistpll
rcrl
push
sbb
add
cmpsb
jge
aas
rol
inc
icebp
push
push
mov
add
or
cmp
inc
mov
inc
inc
scas
fadd
fwait
lods
mov
xor
out
popf
nop
fcompl
xchg
sbb
mov
nop
sub
xor
int3
fcmovnb
inc
add
inc
clc
jl
dec
sub
cli
or
das
jge
inc
icebp
div
jae
pop
jmp
jmp
add
cmp
sbb
and
push
enter
pop
aam
enter
mov
out
push
lds
push
mov
xor
sub
ret
hlt
sbb
sub
test
push
es
ret
rclb
push
lahf
jnp
movsb
je
fmulp
into
jg
sbb
inc
jbe
bound
out
cli
jb
jno
jae
push
call
stos
stos
imul
in
pop
push
loop
push
pop
hlt
ret
rcl
dec
fs
push
push
in
loope
leave
out
gs
mov
cmp
mov
mov
xchg
mov
fsubs
daa
icebp
xchg
mov
pusha
aas
imul
mov
in
sbb
lcall
pop
rclb
xchg
or
inc
add
clc
mov
out
ds
mov
or
ljmp
or
xrelease
ret
out
fcmovu
call
push
rcl
sarl
stc
into
lcall
dec
mov
inc
inc
outsl
jne
push
mov
aas
repz
stos
jb
xor
mov
sub
dec
lods
mov
xor
sub
pop
es
sbb
dec
shlb
sbb
adc
or
out
mov
jg
test
pushf
mov
jge
jae
xor
ss
and
gs
mov
repz
jo
jmp
push
dec
cli
dec
shll
push
into
int
mov
lds
ja
inc
imul
dec
stos
mov
imul
lods
stos
cmp
mov
and
dec
les
sub
sub
xchg
sub
xchg
cwtl
cmp
add
ret
sub
popf
outsl
jp
repnz
hlt
repz
push
jecxz
adc
jge
out
out
pop
fs
push
sub
push
xchg
dec
test
dec
or
inc
pop
inc
jbe
mov
imul
outsb
arpl
cmpb
sub
es
push
outsb
pop
mov
dec
push
lcall
adc
adc
mov
mov
cmpb
ret
js
inc
lock
jg
shrl
insl
insl
dec
mov
hlt
sub
arpl
test
pop
jle
fsubp
cmp
dec
jmp
clc
pop
mov
fcomps
data16
fcmovnb
add
aam
sti
sti
mov
cmp
sarb
hlt
lsl
pop
and
push
inc
push
sbb
cmp
pushw
or
add
add
jns
pop
add
and
sbb
cmc
loop
ret
jmp
hlt
loopne
lds
das
in
fcmovu
repz
mov
dec
push
adc
addr16
xchg
cmp
outsb
mov
bound
mov
sub
outsb
test
mov
mov
jae
mov
rclb
pop
adc
mov
or
cmpl
test
lods
mov
je
icebp
mov
push
arpl
cld
pop
js
in
mov
pop
call
int3
push
loope
dec
xchg
ret
mov
sarb
mov
jnp
xor
loop
rolb
movsl
or
in
add
loope
xor
adc
or
es
aam
xchg
sbb
add
enter
adc
jno
cld
outsl
mov
addr16
hlt
cmp
ja
ds
shlb
jo
jp
adc
push
lret
and
pusha
inc
and
pop
dec
push
ljmp
adc
push
dec
pop
inc
popa
inc
inc
ret
cmp
arpl
xchg
cmpl
gs
xor
das
jo
mov
and
xchg
faddp
fsubp
push
popf
das
leave
dec
dec
xchg
test
mov
push
or
test
jns
daa
int
xchg
outsb
out
outsl
sti
cmpl
jnp
add
loop
outsb
push
fs
js
fisubl
mov
push
jno
rorl
lret
pushf
or
mov
fcmove
cltd
jg
rorb
mov
aam
fcoms
mov
into
sarl
imul
hlt
mov
cwtl
sbb
daa
nop
sbb
fcmovb
and
movsb
addb
call
fstpl
add
xchg
cld
addr16
inc
test
mov
test
jecxz
enter
out
sub
fstl
push
sbb
jb
js
xchg
leave
adc
aad
add
or
pop
cmp
pusha
ret
push
inc
mov
pop
mov
pop
stos
xorl
lds
in
pop
jl
adc
and
sbb
sbb
popf
xchg
jb
sub
or
or
nop
jb
gs
outsb
jle
pop
jle
sbbb
out
daa
popf
add
mov
dec
pop
test
mov
xchg
jbe
mov
cli
in
mov
loop
lock
dec
imul
lds
mov
mov
jo
imul
or
sbb
add
mov
mov
mov
and
jmp
test
inc
pop
xchg
cmpl
jl
mov
jno
jnp
std
mov
repz
add
jae
jp
pop
fcoms
pop
jnp
push
and
cmpsb
pop
pop
cmp
cltd
xchg
xchg
xchg
mov
lret
in
jno
mov
xor
push
ds
push
addb
test
and
xor
ss
cs
lods
inc
pop
mov
xor
cmpsl
adc
mov
adc
or
test
mov
idivl
jl
pop
lock
jb
jno
je
call
bound
sbbl
les
rcrl
dec
nop
push
adc
inc
add
movl
dec
dec
mov
mov
sti
scas
xor
mov
popa
sub
stos
imul
sub
movsl
and
ja
decb
hlt
lds
addl
lret
cmpsb
add
lea
popa
cli
fdivs
lock
jno
hlt
adc
xor
sub
sub
daa
in
sub
xor
and
das
in
fdivrs
fstps
fdivl
fstpl
inc
rcll
aam
adc
into
push
mov
fadd
mov
fdivrl
jp
inc
mov
mov
inc
scas
jbe
cmp
outsb
xchg
sub
bound
and
adc
sbb
jae
mov
lea
test
js
jns
jl
jge
jo
mov
xor
in
je
popa
loopne
gs
add
fstpl
movsb
pop
aam
pop
rclb
adc
or
dec
push
inc
roll
cmp
int
push
sarl
cmp
mov
fdivl
and
dec
add
mov
mov
stos
scas
cmp
lds
stos
test
mov
add
xchg
or
mov
dec
incl
lret
add
cli
stc
test
cli
mov
jl
aad
repz
in
sub
in
lret
shrb
and
pop
fcompl
fdivrl
sbb
push
sbb
cmp
mov
aam
pop
pushf
aam
scas
lret
mov
sub
mov
ds
lods
je
out
sub
gs
xor
mov
cs
clc
and
jle
adc
push
adc
jne
push
mov
test
ret
adc
mov
stc
adc
xorl
jo
lret
rcr
push
mov
daa
push
pushf
push
and
cmovs
ja
or
jae
add
pop
mov
clc
mov
ss
and
negb
xchg
and
pop
pushf
es
adc
push
out
or
fimull
xchg
push
fiadds
add
lret
xchg
add
cli
stc
add
fldt
loope
imulb
xlat
xlat
sub
rcr
sub
aaa
iret
and
daa
shll
pop
and
mov
rclb
int3
mov
dec
jl
decl
mov
jl
mov
cmp
cmc
movsb
test
xor
movsl
insb
and
int3
mov
aam
aad
lret
pop
mov
add
imul
add
test
jp
jl
jle
idivl
jno
jae
add
imul
movsb
pop
xchg
and
out
jmp
mov
pop
add
ret
inc
test
ret
cmc
jg
mov
hlt
mov
lock
outsl
loopne
lret
xor
or
cmc
movsl
fisubl
jmp
sbb
xchg
mov
sahf
popf
nop
aas
adc
mov
sub
mov
or
cmp
add
ret
cmp
jb
jb
hlt
mov
push
in
add
lret
adc
pushf
mov
out
ds
pop
mov
jmp
adc
int3
adc
push
loop
inc
aas
inc
mov
xor
mov
sub
xor
scas
icebp
sub
imul
mov
and
sbb
sbb
out
jle
adc
dec
aam
dec
inc
aas
inc
inc
inc
inc
inc
inc
cmp
cmp
cmp
mov
jp
outsl
jb
pusha
jmp
push
test
pusha
pop
stc
jo
arpl
pop
fsubl
pop
insl
pusha
fistps
mov
sub
fstps
or
xchg
inc
arpl
movsl
btc
or
lret
insb
sub
stos
and
or
in
sbb
add
pmaxub
ljmp
inc
jmp
mov
jl
in
and
mov
jnp
icebp
hlt
repz
fbld
mov
sbb
rcrb
sbb
jae
loop
fcomp
fst
push
push
dec
cltd
rcl
ficompl
stc
push
fisttpl
push
int3
testl
push
sarb
int3
adc
xor
and
cs
push
cmp
adc
pushf
pop
sbb
sbb
mov
sbb
std
je
clc
sub
test
push
jnp
jno
push
add
pusha
cld
mov
pop
loop
negb
cwtl
aad
mov
jg
pop
or
popa
aas
mov
incb
test
test
in
in
fiaddl
mov
mov
mov
pop
daa
mov
sahf
and
jnp
movsl
cwtl
pop
daa
rcrb
sub
sbb
push
xchg
xchg
into
incl
add
push
sarb
in
and
push
mov
mov
bound
ljmp
lret
inc
aad
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
mov
lret
pop
sub
arpl
inc
inc
mov
cmp
cmp
xor
shlb
jae
ljmp
pop
and
sub
and
insb
rcrb
adc
xchg
movsl
and
leave
adc
sahf
outsb
add
xchg
imul
jp
jl
jo
jo
jb
add
sub
mov
icebp
outsl
adcl
fsubr
imul
mov
dec
push
push
loopne
dec
les
inc
mov
push
mov
rol
fstl
ret
inc
je
cmpl
scas
xor
cltd
sub
test
ret
and
call
cwtl
push
xchg
xchg
xchg
xchg
and
nop
dec
or
or
push
movsb
mov
jmp
sbb
and
outsl
cmp
out
sub
repz
sub
out
test
aas
fiadds
adcl
mov
loope
adc
ja
adc
fstp
mov
aas
syscall
flds
repnz
pop
icebp
cli
hlt
repz
call
lods
outsb
adc
mov
lret
test
pop
jecxz
sbb
sbb
stos
mov
sub
mov
or
js
mov
xchg
pop
jg
test
jge
adc
sbb
or
hlt
adc
outsb
in
stos
xlat
push
lcall
jae
cwtl
mov
add
lock
push
push
push
dec
jecxz
inc
roll
dec
inc
ret
int3
jnp
mov
xor
push
mov
jmp
aas
mov
mov
sub
push
and
lcall
push
mov
adc
bound
or
mov
mov
mov
flds
std
std
out
mov
stc
mov
cmc
call
aam
aad
or
pop
dec
stc
fldenv
push
cmp
add
es
pop
inc
sbb
lds
int
inc
jl
aas
ret
out
push
lds
push
out
stos
je
ss
or
insb
sub
bound
mov
sbb
fadds
ja
cld
repnz
push
adc
sbb
mov
or
cmp
jnp
lods
repz
mov
jns
loopnew
pop
in
test
loope
test
mov
mov
pop
xlat
sbb
push
sbb
mov
dec
inc
add
or
mov
mov
dec
pushf
test
push
inc
pushf
addr16
sahf
repz
cmp
out
inc
mov
cltd
sbb
xchg
in
push
jl
into
mov
add
add
idiv
adc
inc
decb
orl
mov
insl
mov
mov
pushf
addr16
and
imul
rolb
mov
jo
dec
xor
fnsave
and
dec
loope
inc
imul
and
in
and
sbb
xchg
and
xchg
jne
sub
or
sub
je
subl
inc
test
cmpsl
movsl
hlt
push
pop
pusha
lock
mov
push
gs
mov
pop
push
or
push
rcll
xchg
xchg
push
dec
push
xchg
aam
rcl
fimull
fs
push
or
inc
dec
lcall
xchg
lret
mov
jmp
pop
xor
test
xor
sahf
hlt
cwtl
xchg
dec
inc
mov
fstl
mov
adc
or
dec
mov
pop
dec
ds
test
or
jo
or
clc
lcall
adc
add
jmp
in
push
stos
sbb
inc
fisttpll
and
fstps
aam
sbb
jecxz
sbb
jl
dec
fildl
cmp
aaa
push
sub
outsl
mov
das
mov
mov
dec
sbb
mov
sub
pop
cmpsb
jg
les
adc
sub
add
jbe
cmpsl
outsl
sti
sub
jl
add
mov
imul
gs
vpscatterqd
repnz
fldenv
outsl
push
adc
push
push
push
dec
or
notb
into
ficoms
js
mov
dec
mov
or
cmpsl
stos
cmpsb
add
stos
lods
repz
sbb
lods
mov
sub
xchg
or
or
stc
or
add
call
sti
ja
hlt
jp
lea
testb
add
sbb
xorb
out
loopne
lea
push
xlat
push
sbb
sbb
adc
adc
inc
dec
cmp
push
dec
inc
aas
mov
arpl
incb
jle
sarb
je
adc
jmp
out
jno
xor
and
pop
mov
dec
lahf
dec
mov
jns
daa
ss
sub
push
or
xchg
cltd
cmpl
lods
push
cmp
adc
jo
lret
jb
test
in
daa
push
insb
cwtl
xchg
push
pop
out
mov
js
jecxz
pop
pop
pop
lahf
test
nop
push
in
mov
lret
mov
lret
sarb
pop
fwait
icebp
push
adc
out
mov
daa
repnz
test
mov
rcl
mov
or
sahf
sbb
xchg
add
push
xchg
mov
and
xor
das
push
div
aam
aam
std
std
ljmp
outsl
call
repnz
lods
push
adc
faddl
or
cmp
aam
xchg
inc
jmp
enter
int3
or
int
outsl
jno
cmp
adc
adc
xor
insl
jb
stos
xor
jge
sbb
and
or
sbb
orb
adc
adcl
test
pop
int
test
inc
test
jge
pop
popa
jno
push
cmpb
pop
sub
pop
data16
ret
pop
jno
pop
pop
pop
fstps
push
push
insb
rclb
pop
test
clc
ret
sahf
mov
addl
push
mov
ljmp
lods
gs
mov
loop
inc
jecxz
dec
movsb
add
fcompl
leave
sahf
not
xchg
cmp
or
dec
dec
add
add
loop
add
sti
ja
std
or
bnd
push
xor
pop
add
imul
inc
rcr
addr16
inc
or
aad
add
loope
test
inc
aas
inc
out
adc
add
je
mov
lock
sbb
je
sbb
enter
sbb
lcall
ret
xchg
into
jge
mov
mov
cmp
test
adc
gs
jo
add
cmpsb
push
pop
hlt
data16
gs
int
std
popa
xchg
mov
push
add
or
or
test
mov
add
movsb
mov
das
stc
pushf
cmpsl
mov
xor
xlat
sub
iret
mov
and
mov
leave
lds
mov
testb
or
clts
enter
xor
incb
fld1
mov
xor
out
and
out
sub
out
sbb
out
mov
push
bound
xlat
mov
xchg
xchg
xchg
xchg
mov
test
sub
inc
add
jnp
je
sub
inc
in
fsubrs
mov
adc
test
jne
nop
scas
sbb
push
jg
cs
and
inc
sbb
int
jnp
aad
outsl
or
push
jnp
das
mov
imull
orl
repz
cmpsl
push
pop
jmp
cmpsl
dec
pop
sbb
lea
icebp
jne
push
insl
gs
mov
xchg
mov
dec
jae
jp
mov
dec
mov
cmpsb
test
outsb
xor
loop
lods
mov
dec
lods
rcl
dec
outsb
mov
pop
pop
sbb
add
fcoml
std
nop
dec
cmp
cmpsb
mov
cmc
cld
add
iret
push
add
add
incb
or
cmp
sub
shlb
cwtl
xorl
pop
jmp
pop
loopne
xchg
jge
popa
nop
fsubs
fsts
fisubrs
jb
nop
inc
or
fisttps
and
cwtl
pop
sbb
test
mov
push
sub
enter
and
je
imulb
in
lahf
dec
and
cmpsl
ficoml
lret
int
outsl
push
sub
push
sub
add
ja
jp
shrb
das
cmpsl
mov
icebp
mov
cmc
xchg
jbe
lcall
fsubr
data16
pusha
fsubrs
push
out
ret
pop
adc
ret
lcall
mov
lds
add
xor
sti
cmp
test
cs
hlt
into
pop
sub
cmp
and
xchg
cmpsb
mov
xor
or
xchg
pop
sar
adc
cmpb
add
add
testl
pop
in
mov
jg
push
cmp
loope
daa
iret
fsub
in
divl
pop
loope
popa
push
xchg
dec
aad
in
daa
rorb
daa
rcl
pop
xor
aaa
andb
test
das
jge
lods
mov
js
ss
fildll
pop
and
pushf
pop
xor
sbb
cmpsb
pop
lods
adc
pop
cmpsb
pop
mov
in
sbb
test
or
inc
ss
or
or
hlt
mov
insb
xacquire
pop
push
or
popf
sahf
dec
cld
push
jecxz
mov
pop
out
mov
cmp
inc
pop
decl
sti
stos
movl
aas
ret
cmp
lods
cld
push
stos
cmp
and
mov
sub
popf
mov
rcrl
call
add
cmp
clc
cmp
mov
mov
loop
xor
addr16
filds
and
mov
xlat
pop
jae
call
pop
out
shll
push
pop
rorb
dec
into
push
inc
dec
add
dec
push
adc
test
cmp
cmp
pop
xor
xor
xor
xor
aas
sbb
bound
mov
mov
pop
inc
and
lcall
or
lcall
cli
int
stc
ret
jge
lds
das
push
outsl
out
mov
and
lret
push
lock
dec
jno
outsb
pop
pop
fstps
ret
enter
mov
int3
dec
xchg
pop
lock
call
mov
mov
xor
dec
mov
xchg
fildll
out
dec
imulb
xor
inc
sbb
lcall
xor
mov
lock
dec
add
jmp
std
pop
call
testb
in
jmp
in
fimull
rcrb
pop
in
in
dec
data16
jne
jp
popa
xchg
aam
push
push
sti
lret
popa
dec
jne
cmp
add
inc
mov
mov
and
pushf
fwait
sahf
popf
push
xchg
fistps
bound
ss
adc
insl
sub
fbld
mov
push
sub
sbb
and
test
push
sbb
add
jl
inc
imul
jp
cmp
push
lahf
lahf
jmp
arpl
cmpl
push
ss
int3
sub
rcrl
mov
xorl
push
insb
ret
mov
dec
jge
insb
inc
mov
ds
scas
divb
movsb
add
imul
insb
ret
in
ret
and
xor
es
sub
mov
and
clc
fs
int
or
mov
mov
jle
rcrl
ds
xchg
jno
repz
mov
dec
cmpsl
push
hlt
xchg
shlb
sbb
inc
mov
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
ds
push
and
ret
pop
mov
aaa
mov
leave
insl
mov
mov
mov
sub
es
in
mov
imul
push
mov
mov
xchg
pop
pop
and
mov
test
pop
cli
aas
xchg
mov
pop
ljmp
mov
mov
mov
fldenv
jno
pop
pop
fistl
mov
dec
insl
test
ret
std
jmp
cmpsl
cmp
mov
ret
stc
scas
xor
mov
mov
mov
test
add
adc
enter
cwtl
pushf
fwait
xor
loope
inc
and
xchg
rcl
mov
or
jmp
xchg
sti
arpl
cli
and
mov
addr16
adc
clc
sub
mov
repnz
fcomps
pop
ja
shlb
lret
sbb
jno
inc
into
push
cmp
add
aaa
mov
insb
pusha
mov
sub
orb
sub
sub
stos
jecxz
imull
mov
mov
and
adc
pop
es
sbb
sub
inc
dec
cmp
cmp
cmp
mov
fstps
jno
notb
fildll
pop
sub
rcll
pop
pop
pop
jmp
pushf
jp
test
mov
clc
push
mov
sarb
cmp
mov
xor
inc
daa
je
mov
outsb
mov
cmpsl
mov
mov
out
push
icebp
popa
and
sbb
sub
xchg
xchg
xchg
push
es
repz
or
sbb
subb
sub
and
mov
cmp
cmpb
cmpsl
xchg
xor
jp
insb
or
lahf
sti
sub
pushf
add
add
fcompl
pop
add
ret
int3
or
mov
push
insb
pop
insl
clc
mov
data16
leave
xor
les
and
inc
sub
push
push
jmp
pop
jg
mov
push
sbb
push
push
mov
imul
adc
lret
es
mov
adc
int
mov
jno
call
push
cmc
adc
insl
mov
add
arpl
mov
adc
pop
rcll
ret
pop
mov
xchg
into
mov
les
add
or
gs
adc
mov
push
repnz
inc
lods
xlat
inc
mov
fsubl
mov
adc
xor
adc
xchg
stos
std
inc
fadds
add
jg
add
cld
outsl
mov
in
outsl
test
add
mov
loop
jno
pop
pop
sbb
sbb
adc
pop
xchg
insb
push
jl
xchg
aad
inc
jns
popa
dec
dec
pop
dec
cmp
sar
pop
fimuls
adcb
xor
mov
push
aas
adc
mov
mov
pop
push
push
push
pop
pop
repnz
adc
shlb
mov
mov
xchg
addl
jle
push
xor
jbe
cmpsl
imul
and
data16
dec
es
hlt
pop
pop
jmp
push
insb
into
push
push
dec
aam
int
loope
jecxz
rcr
mov
mov
test
rolb
mov
cmpsb
cmpsl
inc
mov
in
mov
js
lcall
adc
std
add
in
add
cmp
sbb
pusha
rcr
cmp
jge
dec
xor
divl
add
jae
jp
in
imul
sub
jbe
lea
nop
push
shrb
xchg
adc
loopne
lret
jb
gs
lea
pop
push
test
iret
sub
fs
arpl
and
ret
scas
jns
pop
fs
xchg
add
fisttps
mov
adc
jp
test
shll
rorl
and
and
js
sti
lods
je
mov
jb
lock
fwait
add
mov
push
in
gs
repnz
gs
xchg
je
mov
push
aam
push
push
xchg
xchg
imul
fcmovne
inc
movsb
ret
aas
loopne
mov
push
mov
scas
mov
daa
scas
inc
iret
sub
mov
mov
mov
daa
or
adc
call
popf
lods
xchg
lea
xchg
inc
orl
test
mov
jb
cmc
ja
mov
jge
out
test
dec
cmp
icebp
pop
push
loope
std
stc
xor
fstps
dec
pop
pushf
rcll
dec
roll
inc
int3
jns
in
inc
mov
pop
dec
ret
and
dec
dec
les
inc
jb
inc
int
mov
adc
mov
pop
and
pop
sbb
adc
jle
adc
pop
lea
lcall
inc
adc
popf
xor
lea
outsl
sti
cmp
push
push
cmc
outsb
cld
dec
ret
cs
out
arpl
addr16
xchg
add
cmpsl
push
dec
fistpl
dec
dec
xchg
mov
mov
dec
inc
lahf
ret
call
pop
inc
dec
scas
mov
fidivl
addr16
add
add
fsubs
or
fcoml
xchg
mov
dec
stos
or
mov
sbb
js
aaa
aad
prefetch
aaa
sti
adc
mov
mov
js
addb
jl
out
loop
ffreep
and
bound
jge
push
shl
shlb
xchg
push
mov
jns
cltd
sub
stc
inc
add
add
jbe
cmp
jae
xor
cmpsl
inc
cmpsl
jb
pop
sub
and
mov
cmp
and
es
setnp
push
xor
adc
fstsw
mov
mov
inc
inc
inc
inc
inc
inc
cmp
cmp
cmp
sti
sbb
scas
pop
sbb
sbb
clc
pusha
in
outsl
sub
inc
jbe
insb
and
jbe
std
pop
jno
shlb
xchg
push
xlat
pop
loopne
or
std
jmp
mov
inc
frstor
mov
das
inc
pushf
stos
cmp
mov
mov
test
mov
mov
das
lcall
or
mov
or
xor
sbb
inc
sti
fwait
cmc
push
cli
or
dec
out
cmc
push
scas
repnz
xor
in
jmp
jle
shl
jo
lock
fcompl
shrl
xchg
pop
inc
int
mov
xchg
out
dec
add
jmp
inc
inc
inc
ret
push
imul
dec
dec
fwait
jb
int
push
jne
dec
mov
sub
xchg
mov
and
les
xchg
mov
icebp
push
or
cmp
test
jo
addb
add
xchg
jp
jnp
outsb
mov
ds
push
daa
sbbl
dec
xchg
popa
mov
push
pop
pop
jmp
push
call
and
push
push
sti
dec
loope
sbb
in
pop
add
and
add
jmp
cmpsl
stos
ror
scas
lods
mov
sbb
dec
cltd
xchg
jl,pt
xchg
xchg
mov
jnp
aam
mov
xchg
dec
dec
mov
and
notl
xor
push
xor
and
les
call
push
add
gs
pop
rcrb
sbb
mov
jp
xchg
leave
jb
lret
out
roll
into
adc
push
inc
aam
jle
xor
into
sbb
sub
ret
sub
cs
iret
bound
dec
leave
loop
push
or
sbb
adc
adc
int3
mov
addl
imul
je
sbb
sub
cli
imul
and
mov
std
pop
mov
push
mov
push
add
xchg
aad
sub
mov
mov
mov
mov
mov
add
imul
mov
xchg
hlt
cld
hlt
rcrl
iret
xchg
sbb
inc
or
or
ljmp
iret
xor
sti
adc
pop
ffreep
sub
lods
std
in
dec
and
fldlg2
jmp
adc
sbb
fstps
dec
xor
fistpl
dec
and
outsb
inc
dec
xorb
sub
dec
inc
rorl
xor
push
cmp
add
fcmovbe
adc
push
jae
sarb
sub
stos
push
mov
mov
cmp
popf
fisttpll
sbb
or
dec
mov
cli
lds
aaa
jp
mov
mov
xor
or
stos
mov
lods
pusha
mov
imull
icebp
gs
dec
popa
test
xchg
iret
nop
push
fsubl
in
mov
push
dec
inc
lret
dec
add
int3
dec
addr16
add
rcrb
add
fwait
cmp
je
mov
daa
arpl
in
scas
stos
leave
add
fs
lcall
rorb
dec
add
mov
or
inc
incb
js
repnz
add
divb
jae
scas
hlt
bnd
daa
xor
sub
jmp
pop
sbb
enter
fcmovnu
xor
jecxz
adc
xchg
outsb
or
test
xorb
addl
mov
scas
inc
mov
dec
lock
arpl
shrl
xor
mov
movsl
push
and
cmpxchg
pop
adc
ficoml
push
adc
rorb
push
outsb
mov
nop
pop
cld
mov
pop
stc
adc
je
jbe
and
mov
rcl
and
push
insb
push
repz
nop
dec
mov
pop
lret
dec
add
add
inc
add
out
mov
lock
test
aas
push
mov
cmpsl
cli
inc
test
lods
stos
pop
loopne
and
sbb
mov
xchg
movsb
adc
mov
aas
popl
dec
xchg
mov
lea
rolb
sbb
jp
sti
add
in
add
fidivs
in
sub
pusha
fs
sahf
add
dec
stos
fistpl
or
mov
sub
pop
xor
outsl
loope
inc
inc
inc
mov
xor
fs
pop
shl
xor
xor
test
ljmp
push
xor
mov
jg
sbb
push
adc
mov
addb
mov
dec
xchg
mov
jge
push
push
imul
mov
gs
mov
mov
pop
es
push
push
aam
insb
int3
clc
mov
into
inc
mov
cmp
mov
and
test
xchg
mov
mulb
cwtl
add
lods
and
xchg
and
loopne
xor
jp
not
sbb
or
sub
mov
or
add
push
cmc
push
div
aam
aam
std
std
ljmp
dec
and
outsb
jecxz
inc
es
out
popa
lahf
add
pop
nop
xor
fldt
xchg
dec
adc
jg
mov
ja
nopl
ret
lret
or
sbb
daa
adc
leave
cmp
sbb
pop
sub
pop
inc
movsl
outsb
push
add
dec
sbb
imul
rorb
xchg
sub
lds
jl
pop
mov
test
movsb
std
sar
mov
call
jl
lods
jge
jbe
cwtl
in
push
call
adc
push
aad
pusha
push
roll
pop
inc
fstps
push
into
and
nop
out
mov
xor
stos
dec
xchg
sub
mov
cld
xchg
in
mov
mov
pop
cmp
enter
xchg
sub
push
mov
jmp
add
inc
mov
in
xchg
divl
call
or
in
jl
jmp
fsubl
flds
jb
pop
add
push
push
jg
imul
pop
dec
aad
rclb
cmp
loopne
call
inc
inc
inc
mov
outsb
ss
sub
lret
xor
pop
test
mov
pop
mov
adc
mov
pop
test
or
add
dec
addl
xorb
mov
in
jbe
push
cmpsb
jbe
idivl
or
arpl
popf
movsb
pop
adc
repz
rorl
push
push
push
push
nop
pop
mov
push
aad
dec
inc
push
lods
xchg
imul
cmp
mov
mov
xor
mov
mov
stos
and
mov
loope
jmp
arpl
cmpsb
pop
sbb
arpl
cli
iret
xchg
das
sbb
pop
popf
les
dec
lcall
fadds
jns
jge
add
add
xor
xchg
mov
sbb
fisubrl
jmp
in
xor
xlat
cmp
lahf
fst
iret
push
push
add
out
pop
fcmovne
pop
adc
sar
ret
jb
cs
scas
xchg
push
xchg
enter
subl
sub
arpl
movsl
test
xchg
xlat
push
sbb
ja
orl
mov
add
sbb
cmpsl
outsl
sti
scas
je
add
stc
add
out
jb
scas
jae
out
fs
gs
jmp
popa
fs
cwtl
je
out
push
shl
pop
enter
add
dec
add
cli
movb
xchg
idivl
movb
ss
xchg
ret
outsl
xor
test
out
mov
inc
lahf
outsb
mov
gs
mov
in
push
cltd
pushf
fwait
push
adc
lahf
push
rcll
stos
ficompl
jp
push
lcall
mov
test
push
bound
and
mov
in
xchg
cli
ficomps
pop
sbb
gs
insb
aam
movl
lret
mov
shlb
inc
cmpl
cmp
jl
dec
mov
mov
mov
das
stos
js
push
jl
and
push
movsb
popa
xor
pop
pop
mov
movsl
xchg
jbe
movlps
xchg
stos
mov
addr16
mov
pop
mov
mov
dec
jnp
cmp
cmpsb
xor
jne
push
dec
ret
cmpsb
pusha
mov
les
cmp
fistpl
or
xor
mov
movsl
clc
ret
cmpsl
fwait
mov
mov
xor
test
push
sub
lahf
repz
pop
in
xchg
xor
cmp
sahf
popf
sub
xchg
add
jbe
or
les
add
repz
iret
xlat
iret
xor
cld
cmc
sub
mov
pusha
bound
in
ljmp
enter
pop
movsl
jnp
cltd
or
jg
adc
into
push
cmp
int3
add
dec
hlt
fadds
jle
out
ds
xor
pop
test
ja
sub
mov
sbb
mov
nop
pop
mov
fisubs
sbbb
or
subb
test
aaa
xchg
jno
xor
jmp
fdivl
push
scas
in
cmpsb
push
in
lcall
push
pop
pop
fcmovnbe
into
push
dec
pop
xchg
pop
arpl
push
dec
dec
ret
dec
pop
into
int
cli
int
inc
pop
mov
mov
stos
mov
scas
mov
in
ret
imull
pusha
sub
mov
movsb
cmp
adc
xchg
sbb
or
rclb
or
jo
add
add
inc
jl
mov
xchg
xor
out
repnz
insl
mov
dec
adc
pop
lahf
xchg
mov
pop
hlt
rcll
dec
dec
sbb
into
pop
aas
mov
outsl
aaa
mov
sub
in
not
sub
xor
ss
ss
sub
mov
xor
push
pop
fwait
int
pop
popf
mov
sbb
and
or
mov
sub
jne
sarl
out
mov
test
lock
jmp
jb
jbe
stos
xchg
jecxz
push
add
push
push
repnz
out
mov
push
push
aam
addr16
dec
or
stos
repz
cmp
mov
lahf
push
lcall
mov
leave
sub
mov
fildll
adc
cwtl
test
fstl
inc
or
ss
mov
orb
inc
cmc
fnstcw
lea
lock
inc
hlt
repz
sti
imul
jmp
sbb
pusha
jecxz
jb
jo
jns
jmp
addl
aam
jge
int
les
lds
mov
aaa
jg
sub
cmpsl
push
pop
mov
movsl
sbb
mov
sbb
push
popf
xchg
inc
dec
ss
push
mov
rorl
xor
ja
imul
outsl
jb
sub
outsb
popf
jne
out
sub
in
subl
push
into
rolb
xchg
mov
add
leave
inc
stc
lds
sarl
cmp
idivb
dec
out
mov
cmpsl
xchg
sub
stos
scas
lods
and
cmpsb
clc
cmp
fldt
adc
add
inc
xchg
xchg
dec
lea
or
inc
ss
dec
or
call
jb
add
divl
sbb
psubusw
pop
out
je
scas
ficomps
xchg
or
push
pop
rcl
fldl
aas
push
pop
ret
test
sub
and
ds
push
push
sahf
cltd
call
es
test
and
adc
lahf
ja
cmp
outsl
mov
mov
xchg
scas
mov
cld
xchg
pusha
jp
repnz
out
pop
xlat
mov
cltd
arpl
add
pop
mov
dec
mov
aam
test
mov
push
lret
rcl
inc
test
aam
jl
mov
insl
les
call
call
lahf
mov
add
sub
iret
mov
xchg
xchg
xchg
adc
add
xchg
add
cmp
jl
xchg
hlt
loopne
cmp
lock
adc
adc
mov
adc
pop
outsl
fistpl
rclb
dec
test
aas
pop
in
rcl
aad
pop
aaa
push
in
dec
dec
dec
cwtl
dec
pop
cmp
insl
inc
inc
nop
daa
daa
ds
inc
stos
sub
test
sub
lods
leave
and
es
pop
xchg
pop
adc
pop
push
adc
mov
int3
lea
dec
xchg
jno
push
xor
sahf
jl
imul
test
loope
ret
imul
fcompl
xchg
pop
in
stc
add
insl
data16
pop
ret
ret
arpl
mov
cmpl
jp
mov
mov
push
xchg
in
cmpsl
sub
nop
jmp
mov
xchg
xor
xchg
xchg
sbb
incl
mov
dec
sti
and
sub
pop
inc
sti
jp
repz
call
xor
fisttps
frstor
dec
in
in
cld
rcr
cmp
sbb
pop
xchg
addl
push
in
test
dec
jns
addr16
push
aaa
bswap
mov
mov
dec
mov
test
daa
and
lods
outsb
jp,pt
inc
sbb
enter
push
das
mov
xchg
sbb
addl
add
sbb
ja
cmp
cld
cmp
jge
hlt
jb
fbstp
insb
popa
fs
lods
movsl
pop
in
outsb
pop
rorl
dec
add
add
push
push
inc
divl
dec
into
ret
mov
test
pushf
cmp
dec
xchg
cmp
inc
lcall
stos
movsb
mov
mov
sbb
mov
xchg
xchg
adc
sahf
mov
jg
xchg
test
cmpl
xchg
sar
out
bnd
dec
shlb
ficompl
add
call
or
push
push
aad
pop
sbb
dec
sbb
jmp
into
adc
cmp
ret
jg
cmc
mov
cmp
das
mov
or
sbb
push
xor
push
cwtl
imul
cwtl
shll
sbb
movsl
pop
cs
xor
sbb
adc
adc
dec
ds
dec
mov
xchg
pop
cld
adcb
add
jp
pop
icebp
dec
jae
outsb
in
lahf
jb
js
outsb
data16
outsb
leave
outsl
frstor
push
fcoml
push
dec
inc
lret
out
dec
dec
into
sahf
fadd
cld
sti
inc
testl
shll
arpl
test
out
test
jp
mov
xor
sbb
mov
or
adc
xchg
mov
inc
test
add
adc
call
sbb
lock
jnp
call
out
mov
fstl
jecxz
in
jg
pop
push
ficomps
ja
ret
aad
push
push
dec
dec
inc
in
xor
mov
jo
dec
jno
inc
push
mov
xor
xor
jl
lds
mov
mov
mov
out
sbb
push
popf
xchg
pop
add
pop
mov
push
movd
ret
mov
or
xchg
je
jb
mov
jae
test
and
insl
loope
jecxz
cmpsb
out
adc
in
gs
pop
add
fiadds
dec
push
push
xchg
mov
xchg
jg
int
mov
add
or
ss
mov
test
pop
hlt
mov
pop
mov
fildll
push
rcrb
xchg
push
or
sbb
cmpsb
fldl
mov
mov
inc
std
jns
imulb
jge
ja
lahf
xor
ljmp
cld
mov
popa
out
fnsave
adc
call
dec
iret
aad
fcomip
aad
dec
jno
inc
xchg
inc
inc
cld
roll
cmp
mov
xor
xor
daa
test
cli
sub
and
dec
movsb
iret
cmpsl
jb
push
and
lods
jns
rcll
adc
push
sbb
addb
jns
cmpsb
and
mov
bound
jae
shlb
push
mov
push
ja
gs
repnz
fldcw
cmc
push
adc
push
push
lret
inc
in
enter
mov
std
sarb
cmpl
jecxz
xor
cmpsl
stos
fsubrl
cmc
jne
mov
cmpsb
sbb
stos
and
sbb
sub
mov
or
adc
push
or
inc
inc
add
adc
test
mov
call
out
adc
mov
hlt
loope
inc
jo
push
sbb
xlat
pop
lods
movsb
iret
dec
arpl
jnp
pop
out
lret
rorb
lret
fsts
ret
aaa
cmp
aam
sub
insb
and
mov
daa
sub
pop
cmpsl
inc
sub
scas
xor
and
pop
push
or
lcall
push
adc
mov
dec
xor
add
xchg
jb
jo
scas
mov
out
jle
xor
and
repz
gs
std
insl
mov
jge
push
pop
pop
push
xchg
pop
dec
push
push
push
mov
int3
gs
push
inc
js
pop
mov
mov
ljmp
add
mov
test
and
int
out
out
and
scas
sahf
movsl
cwtl
xchg
ss
sbb
lods
fwait
mov
adc
add
scas
cli
xchg
xchg
xor
push
sub
inc
xchg
and
add
jno
mov
lcall
cmc
ljmp
sub
xlat
in
out
pop
ljmp
and
iret
aam
jns
adc
adc
sub
sub
pop
roll
push
cmp
repnz
cmp
popa
cs
out
movsl
sbb
xor
daa
pop
sbb
jmp
cmp
push
popa
mov
rdmsr
repnz
push
les
das
sub
adc
push
mov
adc
lcall
jg
inc
xchg
jbe
and
js
icebp
mov
jno
jle
jbe
jl
je
cmpsl
jb
cld
insl
loopne
gs
push
jmp
adc
push
push
dec
dec
push
rolb
les
mov
add
ds
mov
xor
inc
sti
cs
fcmovnbe
enter
arpl
shlb
mov
pop
adc
push
pop
jecxz
and
inc
mov
mov
pop
add
mov
inc
push
das
imull
xchg
into
jne
mov
ss
daa
repnz
sub
jb
pop
sbb
pop
pop
sub
push
vphaddubw
ficoms
sbb
or
int3
push
jmp
cmp
cmp
jo
sbb
jmp
jb
mov
cmp
sub
ja
sbb
jecxz
test
fcomps
outsl
pop
xor
push
adc
insl
cmpsb
sub
sbb
js
je
mov
jae
xchg
push
pop
push
jo
jae
xor
mov
pushf
out
mov
insl
cli
pop
sti
jg
jge
pop
pop
in
into
sbb
mov
lret
cld
int3
in
cli
in
pop
imul
lds
stos
inc
dec
pop
mov
int
inc
imull
out
ret
sub
mov
ss
lret
out
aam
in
pop
enter
call
dec
inc
and
push
aad
inc
mov
add
aad
xor
jg
call
mov
jno
mov
repz
addl
insl
lahf
out
pop
jmp
jne
pop
and
dec
mov
in
arpl
lret
xchg
ret
mov
mov
xor
jp
push
pop
jmp
sub
jnp
and
outsl
popa
and
pop
jbe
sbb
push
adc
lret
jg
les
int
lock
imul
outsl
or
mov
jle
push
imul
dec
stc
insb
in
pop
arpl
and
mov
fstl
test
clc
into
fsubrl
mov
sbb
mov
inc
ja
cmp
mov
stos
xor
sub
fisubrs
and
or
dec
pop
push
sub
sbb
sub
add
gs
rorb
cmpsb
sbb
idivl
add
xor
and
repz
call
rep
data16
loop
fmul
pop
rcrl
out
mov
fwait
push
adc
rclb
ror
dec
jbe
mov
or
in
xlat
add
mov
addr16
ss
pop
lods
das
stos
pop
ds
mov
dec
sbb
xchg
test
cmp
sahf
stos
adc
cltd
bound
pop
push
adc
xchg
test
dec
mov
test
jbe
jp
mov
xor
jle
std
adc
xor
les
outsl
xchg
loopne
jae
xchg
jl
pop
gs
push
or
pop
push
shrb
popf
push
insl
data16
dec
leave
aad
ret
fcmovnb
mov
or
pop
xchg
mov
das
add
mov
cmpsl
sub
insl
stos
cs
dec
mov
es
mov
sbb
push
cmp
ds
xchg
mov
mov
cmp
dec
sahf
jp
mov
push
sub
inc
js
std
cmp
jecxz
mov
negb
add
loope
loopne
adc
icebp
sbb
push
fstps
pop
repnz
bound
adc
lret
int
rol
mov
mov
ret
dec
jle
or
mov
scas
cmp
data16
bound
mov
cmp
stos
pop
jne
jno
mov
adc
jno
push
cmp
stos
addl
clc
jg
or
sti
xchg
lock
popa
jle
jns
bound
jle
scas
addr16
imul
ret
push
push
push
fsts
inc
in
xlat
mov
or
xor
stos
das
std
les
stc
insl
xor
shll
xchg
and
hlt
fdivrl
xchg
call
fisubrl
fsubs
add
loop
leave
ljmp
sbb
mov
or
cmc
outsl
cmp
and
out
cmc
call
xchg
out
daa
repz
jnp
jecxz
mov
ss
and
sbb
inc
push
stc
dec
lret
pop
cmp
xor
ret
dec
gs
adc
das
xor
xor
sub
sbb
stos
xor
mov
mov
xchg
mov
movsl
and
or
sbb
cmpb
jns
xchg
adc
jg
insl
cli
add
je
xor
push
outsb
loop
and
test
arpl
insb
mov
mov
sub
push
pop
mov
mov
add
loopne
jnp
mov
xor
sub
lahf
xor
stos
cmp
mov
loope
dec
lcall
rclb
xchg
inc
movsb
lcall
add
divl
and
sahf
stc
ja
mov
jne
add
daa
add
js
jmp
or
aam
loope
ljmp
push
push
test
div
movsl
sbb
adc
adc
int3
add
push
jg
pop
sarl
ds
jge
lods
xor
pop
inc
jne
jo
insb
pusha
and
mov
mov
adc
push
lock
adc
sub
xchg
dec
pushf
outsb
add
adc
bound
sbb
bound
mov
addr16
adc
loope
test
push
in
pop
pop
pop
fcomps
in
push
fst
dec
inc
dec
dec
xchg
push
lret
add
fstp
shl
mov
outsl
mov
scas
xor
xor
inc
mov
test
shrl
sbb
mov
fsubrl
fldcw
pushf
xor
subb
aad
inc
inc
cli
clc
mov
adc
sub
sbb
in
push
add
in
pop
imul
outsb
cmpsb
jno
pop
and
fstps
ljmp
out
into
aaa
adc
fwait
lret
jae
fcomps
inc
inc
rclb
outsb
insl
sub
scas
sarl
and
push
jae
scas
pop
and
and
jmp
lret
adc
xchg
aam
sub
push
inc
pop
cltd
ja
into
adc
mov
jnp
add
mov
stos
cmpsl
insb
sbbb
pop
jecxz
in
jnp
push
in
pop
pop
pop
fdivs
int
push
push
push
push
or
int3
lret
gs
mov
mov
ret
inc
push
movsl
test
push
lahf
cmp
mov
lret
sub
mov
scas
mov
sbb
mov
adc
mov
shrb
inc
adcl
icebp
mov
clc
idivl
jnp
stc
xchg
arpl
repnz
jge
movl
add
jle
scas
cs
in
xlat
je
fsubl
rcl
dec
jl
jp
push
fstpl
cmp
dec
inc
inc
inc
pop
ds
jg
sarb
cmp
mov
data16
mov
js
ds
mov
stos
xor
es
test
movlps
stos
mov
dec
sbb
and
mov
mov
push
addl
jae
jb
xchg
call
add
lea
lock
hlt
insl
cs
jl
and
fistpl
aam
aaa
in
push
clc
pop
mov
mov
dec
rorl
add
out
repz
or
push
mov
jecxz
cmp
sub
xchg
pop
lods
dec
sub
shl
lret
sub
pop
dec
test
mov
adc
pop
mov
xchg
aas
jns
jnp
test
mov
mov
pop
loop
sub
add
mov
not
cmpsl
fcompl
push
adc
mov
lret
mov
lret
dec
dec
inc
inc
mov
inc
scas
into
xor
loopne
jne
pop
sub
dec
lahf
fiadds
sub
and
lahf
test
pop
mov
popf
data16
dec
sub
adc
adc
push
mov
or
xor
popa
inc
movsl
lea
adc
addr16
xor
in
adc
neg
in
push
cmc
or
loop
push
loopne
dec
xchg
mov
inc
inc
shll
push
outsl
mov
sti
push
add
mulb
pop
ljmp
cwtl
inc
sbb
pop
sbb
cmp
pushf
fcmovnu
test
lea
mov
decl
sub
add
and
xchg
pop
cld
repnz
pop
sbb
sbbb
out
insl
outsl
std
loop
imul
fsubs
popf
outsb
lcall
rcll
out
lret
adc
push
inc
addr16
pop
inc
fsubs
inc
mov
cmp
cmp
mov
lret
or
xor
jbe
sub
sub
es
xor
sbb
pop
adc
test
jae
jg
test
sub
test
add
sub
outsb
jnp
jb
add
push
insb
call
jmp
mov
inc
icebp
fcompl
pop
or
pop
push
push
stc
cld
imul
inc
int3
out
inc
js
inc
es
push
xor
pop
dec
mov
sarb
call
mov
sbb
inc
cmovle
xchg
fst
xchg
xchg
sbb
and
add
xor
xchg
cmp
outsl
clc
and
cld
jp
lea
jo
xchg
jae
xor
pop
bound
xchg
mov
mov
mov
dec
jae
jne
shrb
shll
fildll
dec
dec
rorl
jns
inc
mov
mov
and
push
xor
cmp
adc
xor
jnp
and
lcall
outsl
push
sbb
adc
sbb
pop
pop
pop
mov
and
test
sti
les
mov
and
sbb
adc
loop
outsl
arpl
ss
pop
pop
in
out
popf
fsubl
cltd
iret
cwtl
dec
xchg
mov
inc
ffree
jecxz
cld
pop
cmpsb
ret
in
jmp
mov
mov
push
scas
cmp
mov
mov
xor
mov
out
pop
inc
mov
in
loop
xchg
xchg
pop
add
or
movsl
mov
sub
aaa
cld
jno
and
hlt
jle
cmpl
fbld
pop
pop
adc
imul
push
xor
insl
fcmovnbe
adc
fs
dec
adc
inc
inc
mov
pusha
cmp
ds
aaa
pop
dec
pop
sub
dec
push
scas
mov
pop
mov
daa
bound
push
lcall
push
adc
mov
or
ret
mov
mov
call
call
mov
stc
insb
out
xchg
fldcw
mov
je
push
fwait
push
sti
insl
jae
dec
leave
dec
jae
mov
lea
cmc
pop
cmp
mov
leave
lock
mov
mov
icebp
repz
inc
xchg
lods
cmc
mov
mov
mov
jb
in
push
adc
aam
adc
mov
mulb
orl
mov
repnz
mov
jg
out
lock
test
add
fbld
mov
std
pop
xlat
fcmovu
jg
out
inc
fstl
out
test
gs
mov
in
aas
inc
inc
int
ss
aaa
push
daa
mov
icebp
mov
leave
xor
jle
shlb
loop
dec
sub
push
xlat
loopne
push
pop
push
mov
mov
pop
or
add
mov
std
xchg
add
mov
adc
pop
insl
in
xor
xor
pusha
cwtl
insl
in
pop
xlat
pop
push
xor
iret
push
pop
or
push
push
push
cli
psrld
mov
dec
fdivrs
frstor
mov
loopne
js
xor
fidivl
mov
jnp
lods
stos
and
mov
dec
xor
adc
inc
pop
dec
push
test
pop
rolb
or
pop
xchg
push
or
incl
add
inc
mul
ret
sub
sub
dec
pushl
xor
mov
loope
lds
popa
push
outsl
fsubs
jmp
push
sbb
jne
test
jge
enter
lret
jg
pop
inc
pop
inc
pop
inc
jae
mov
cmp
or
xor
repnz
call
mov
fcompl
jns
adc
xchg
dec
outsl
or
or
dec
jo
mov
cli
les
sbbb
mov
jb
pushf
sub
cwtl
movsl
xchg
xchg
in
int
test
test
nop
pop
dec
in
pop
pop
push
aam
pop
adc
shll
dec
mov
outsb
stos
add
cmp
mov
fistl
mov
inc
sti
xor
lods
lods
cmp
cld
xchg
lcall
repz
xchg
aaa
fcomps
and
das
mov
xor
cld
xor
inc
add
stc
negb
pop
cmp
jae
xchg
icebp
aas
mov
jmp
ljmp
insl
clc
je
adc
movsl
rcr
fldl
call
cmp
in
das
ja
aaa
inc
inc
inc
shr
pop
outsb
outsb
pop
cli
push
into
sbb
add
adc
mov
and
ret
sbb
ret
xchg
sbb
pop
mov
dec
adc
rol
or
sbb
test
lods
stos
inc
mov
pop
jo
jb
xor
add
pop
addr16
xor
sti
dec
push
jle
mov
add
ret
stos
adc
adc
decl
mov
movsl
jo
inc
mov
inc
jns
bound
add
adc
sti
lods
sub
mov
aam
scas
cmp
cmpsb
and
push
xor
adc
rorb
stos
add
incl
add
jge
sbb
pop
and
cmc
call
adc
idivl
xchg
cmp
daa
cmpsb
inc
sbb
mov
fisubs
leave
jg
jecxz
dec
pop
sbb
aas
pop
xor
sbb
cmp
mov
and
sbb
les
and
sbb
pop
pop
shlb
imul
loope
sahf
jne
or
lret
add
mov
cld
xchg
gs
mov
std
xor
jne
cmpsl
push
hlt
xor
insl
cmp
push
pop
ret
fstps
pop
pop
push
pop
cli
ss
push
popf
dec
loopne
add
test
into
hlt
popa
dec
inc
or
mov
mov
enter
mov
mov
jb
sub
mov
insb
aaa
inc
sub
fstpl
cmc
sbb
cmpsb
sub
xchg
xchg
adc
mov
mov
mov
je
cld
adc
jb
stc
jae
icebp
push
dec
bound
loope
jno
loope
jecxz
jo
pop
sbb
negb
cltd
or
xor
cmp
rolb
mov
sahf
inc
cmpl
pop
mov
sub
jecxz
dec
jmp
aaa
sbb
pushf
mov
shll
jl
adc
or
xchg
ss
dec
adc
add
and
js
push
pop
mov
jnp
ljmp
cmc
fisubrs
insl
jmp
negb
out
pop
fimuls
pop
jmp
loope
dec
mov
fidivl
mov
outsl
add
mov
incb
mov
dec
stos
fldcw
ficomps
fnstcw
lcall
das
jb
xchg
sub
add
xchg
stos
std
inc
incl
clc
nop
out
stc
dec
stc
std
lock
adc
in
aas
mov
inc
cmc
jmp
in
loop
testl
pop
adc
fcoms
and
leave
adc
dec
rorl
inc
dec
lock
aaa
ret
cmpl
inc
ds
fnstsw
sbb
ds
sub
sbb
in
jmp
scas
in
es
sbb
test
adc
adc
ret
jle
sti
jg
xorl
mov
jl
mov
xor
mov
cld
loope
jo
xchg
mov
hlt
pop
add
pop
push
mov
daa
xchg
leave
rorl
loop
inc
dec
test
lock
dec
dec
mov
int3
std
add
out
inc
mov
mov
mov
loope
mov
xchg
sub
cs
dec
or
mov
or
repz
add
mov
hlt
mov
mov
xor
fisubrl
jmp
in
add
in
data16
in
in
sbb
fcmovbe
fiadds
ss
leave
pop
ror
adc
in
aaa
inc
sub
das
ja
inc
cld
dec
loope
jo
xor
ds
gs
gs
js
sbb
mov
jno
popf
int3
and
int
xchg
or
mov
js
xchg
jns
insb
mov
addl
jp,pt
jne
jbe
jno
lock
jbe
fbld
push
out
mov
stos
adc
mov
into
and
fistpl
aam
loope
aam
scas
fcoms
pushf
dec
pop
lock
sbb
ffreep
lahf
cmp
mov
mov
repnz
sub
ret
push
stos
xchg
pop
sbb
mov
sbb
mov
pop
les
push
mov
cmpsb
or
cmpsb
pushl
jle
jno
repz
jmp
movsl
ja
jecxz
divl
out
fs
adc
imul
inc
dec
in
shlb
jecxz
or
rolb
fdivrs
inc
inc
mov
push
push
hlt
test
das
xor
scas
fnsave
divb
sub
je
daa
mov
and
pop
sbb
adc
jns
adc
ror
mov
jno
lea
jno
test
in
jnp
jle
pop
lods
jb
imul
and
sub
and
insl
mov
mov
int3
xchg
push
loop
sti
push
dec
mov
repnz
mov
clc
scas
fcomip
cmc
jp
cmp
call
or
or
cmp
cs
mov
es
call
in
and
dec
sahf
out
pop
stos
stos
aad
out
lods
out
xchg
es
lcall
sub
ss
loop
push
fildll
call
jp
popa
call
pop
pop
enter
fcoms
rcll
lret
dec
push
jnp
jo
gs
aas
dec
inc
pop
inc
inc
inc
cmp
pop
adc
popa
fs
push
aad
push
fsubrs
scas
xchg
push
iret
sub
dec
sub
popa
sub
es
dec
pop
inc
mov
inc
lds
jnp
call
repz
mov
cmp
aaa
xchg
in
mov
aad
addr16
sub
pushw
in
lret
xchg
popa
pop
es
mov
data16
pop
pop
jg
push
add
les
jno
les
int
out
popf
push
cmp
mov
movsb
mov
fld
lcall
xchg
xchg
push
fwait
adc
fistpl
popf
sbb
rorl
test
push
jnp
jnp
jge
inc
js
adc
cmp
hlt
xor
jmp
jl
sub
jecxz
xchg
jae
push
aad
pop
xchg
insl
sub
dec
push
or
leave
iret
jbe
inc
rcl
pop
dec
adc
mov
mov
js
leave
xor
jne
mov
mov
mov
and
or
add
cmp
add
frstor
sarb
mov
jno
push
adc
push
jnp
repnz
movsl
cwtl
cmc
mov
in
pusha
in
test
and
loop
push
xchg
jnp
mov
push
add
rorb
adc
add
stc
ficomps
add
out
mov
aaa
fs
adc
ljmp
or
movsb
fidivrs
dec
dec
mov
dec
dec
mov
stos
inc
call
cld
sbbb
dec
add
sarb
addr16
loop
mov
movsl
icebp
lods
and
in
imul
out
fdivrl
push
pop
add
inc
mov
jnp
push
ret
dec
lret
aas
ret
cli
popa
mov
mov
push
lahf
icebp
xor
xor
pop
inc
shr
cs
dec
leave
lcall
push
adc
xchg
pop
fs
pop
mov
adc
mov
push
adc
inc
nop
movsl
fildll
repz
jl
ljmp
pop
loop
add
push
inc
popa
insl
iret
adcl
fwait
inc
clc
cli
notl
pushf
add
add
sar
inc
fcomps
nop
sbb
stos
repz
xor
cmpsl
sti
jbe
in
fs
add
mov
fwait
out
sbb
in
shl
add
inc
mov
cwtl
dec
out
add
sub
in
mov
jge
cli
cli
mov
inc
aad
cmpsl
repz
add
shlb
cmp
jno
cmpsb
fidivs
dec
fstl
iret
pop
xchg
push
aaa
pusha
enter
dec
inc
aas
jne
cmp
imul
loopne
jl
ds
dec
into
xor
xor
sub
cmpsb
mov
scas
xor
pop
push
push
sbb
xor
cmp
mov
lea
lods
btc
jns
idivl
insb
nop
repz
cmpsb
xchg
xor
xchg
fcomip
pop
sahf
popf
adc
push
dec
shll
pop
pop
cmp
or
xbegin
mov
into
lcall
mov
add
mov
mov
mov
pxor
movsl
sub
mov
xchg
mov
cltd
dec
xchg
sahf
adc
fwait
lret
xchg
outsl
dec
add
sbb
out
mov
sbb
test
add
std
or
sbb
div
call
fucomi
js
sbb
jl
mov
fstp
xlat
fisubl
dec
jnp
addl
inc
orb
sub
aas
pop
and
inc
push
and
rclb
cmp
mov
xor
scas
icebp
sbb
daa
lds
pop
call
and
and
sbbl
push
pop
sbb
or
or
and
xchg
jb
nop
push
decl
add
insb
outsl
or
je
imul
imul
xchg
sub
repnz
pop
repz
pop
call
push
push
les
mov
jecxz
lret
fadd
rcr
pop
dec
mov
xchg
inc
fwait
mov
mov
pushf
fildll
inc
xchg
lods
out
xorl
loop
fisubs
xchg
cltd
pushf
sbb
inc
xor
enter
mov
mov
fmuls
aad
adc
xorl
or
fdivs
jb
movsb
cmc
or
sbb
in
jecxz
mov
and
aas
pop
rcrl
lret
dec
roll
inc
aas
inc
cli
dec
fbstp
jle
das
cmp
cmp
xor
aaa
push
sub
popa
scas
inc
pop
cmpsl
jo
push
push
and
mov
cmpsb
and
mov
popf
sbb
mov
addb
mov
jl
or
mov
insb
or
ja
insl
xchg
xchg
xchg
jb
cmpsb
push
shlb
fdivrs
xlat
psubsw
adc
dec
ret
mov
aas
or
jnp
add
cmp
mov
daa
stc
test
mov
lods
sub
mov
cmp
cmpsb
xor
pminub
xchg
mov
push
movsl
lods
incl
add
adc
add
adc
add
das
cli
xlat
ret
sub
test
push
xchg
mov
incb
push
aad
hlt
jbe
aam
dec
ficoml
cmp
mov
dec
dec
int3
rol
inc
inc
inc
xor
scas
cmp
cmp
mov
xor
jno
xor
sub
outsb
cmp
jnp
pop
fwait
out
push
sbb
rcrb
adc
inc
or
add
jnp
clc
jl
sti
les
lds
out
jae
xchg
daa
mov
test
or
mov
scas
pop
out
repz
popa
fsub
jnp
or
iret
leave
fstp
mov
enter
mov
fisubrl
nop
faddl
add
iret
stos
cmp
imul
cmpsl
mov
test
mov
xor
ljmp
pop
mov
sbb
das
cltd
xor
fisttpl
xchg
xor
mov
or
sub
sbbb
and
loopne,pn
repz
sbb
sbb
mov
loop
in
adc
pop
mov
outsb
dec
inc
inc
addb
daa
jno
ja
xor
ja
jle
inc
xor
cmpsb
test
ret
sti
sub
jmp
daa
sub
sub
jno
sbb
adc
mov
das
or
sbb
rol
pop
mov
rolb
movsb
jnp
movsl
jno
lcall
push
xchg
jbe
addr16
mov
or
jne
addr16
pop
cmc
sbb
bound
inc
out
xchg
pop
shlb
in
rclb
xchg
mov
je
mov
pusha
mov
icebp
rcr
scas
add
clc
mov
pop
add
das
sbb
mov
stos
xchg
sub
or
movsl
cwtl
sbb
adc
ret
sbb
cwtl
xchg
cmpsl
add
xchg
xor
cmpsb
fimull
inc
mov
jns
cmpsb
inc
mov
mov
jg
sub
xchg
xlat
sub
and
outsb
cmpsb
jno
cmpb
jbe
fisubs
iret
insb
dec
aam
push
mov
lret
ret
adc
pop
pmaxub
int3
and
or
das
xor
xor
adc
mov
pop
mov
and
sbb
adc
pop
aad
mov
push
lret
sbb
addl
jle
jo
jle
std
xor
jl
sbb
imul
xchg
sbb
insb
pop
jnp
repnz
push
sbb
cli
push
push
mov
inc
dec
jecxz
outsb
fcompl
cld
inc
fisubs
iret
imul
mov
mov
jne
sbb
cmp
aam
cmp
cmp
rcl
xor
fwait
nop
sub
xchg
or
mov
incl
add
pushf
sbb
idiv
jge
jno
fdivrp
jnp
and
call
out
jns
pop
arpl
pop
outsb
lock
push
and
mov
xor
ficomps
leave
jmp
in
xor
js
dec
pop
cmp
mov
insl
mov
xlat
sbb
mov
sub
scas
int3
xor
daa
sbb
cmp
test
jge
out
or
insb
cmpsl
lods
lcall
push
adc
and
mov
rolb
js
jnp
mov
je
stos
jne
cli
subb
or
movsl
pop
jnp
cmp
push
popa
mov
insb
pop
pop
push
iret
loope
push
rcrb
dec
inc
dec
dec
or
dec
jge
dec
es
mov
adc
add
daa
cs
mov
and
out
ret
loop
fs
add
lcall
inc
cmpsb
push
mov
pop
or
iret
or
jp
add
push
cli
jmp
push
inc
cmpsl
jp
push
pop
xor
jmp
pop
loope
sub
pop
pop
fstpl
out
popf
dec
dec
pop
pop
mov
push
inc
push
shrl
jp
inc
inc
inc
cmp
in
je
aad
das
xor
mov
lcall
fs
pop
add
push
gs
pushf
mov
dec
adc
adc
adc
xchg
or
mov
test
jns
jnp
fidivrl
jno
jle
push
lods
addr16
insb
imul
push
jbe
cltd
arpl
xchg
pop
xor
xor
movsl
fadd
or
leave
bound
lret
into
gs
mov
push
ret
mov
out
loopne
jp
sti
sahf
mov
in
cmpsl
stos
ss
inc
popf
gs
sub
cwtl
xchg
xchg
add
jp
popf
sbb
popf
sbb
or
push
push
out
insl
inc
add
push
or
call
mov
ja
sub
repnz
call
out
leave
jmp
pusha
loope
inc
arpl
adc
popf
fwait
rcl
enter
cmp
dec
dec
or
decl
add
mov
repnz
imul
in
mov
or
pop
add
dec
sbb
hlt
repz
xchg
test
mov
mov
pop
and
ja
je
fidivrl
sti
insl
jno
push
push
insl
fsubr
imul
shlb
fs
push
mov
adc
dec
push
push
mov
test
jb
add
mov
xchg
xchg
xchg
xchg
sub
shrb
int
mov
in
and
inc
xor
pushf
xchg
xchg
mov
xchg
loope
push
push
xlat
stos
out
cmp
test
sub
mov
xlat
icebp
hlt
mov
push
jmp
sbb
sbb
insl
stc
ljmp
sub
sub
shr
movsb
aad
lret
dec
dec
inc
sbb
and
push
cmp
addr16
inc
xor
xor
xor
inc
movsb
xor
sub
jecxz
cwtl
cmp
pop
sbb
nop
mov
ficomps
scas
mov
jp
clc
push
and
lea
mov
aaa
jp
outsb
std
call
push
in
loope
mov
imul
cmpsb
movsb
mov
jo
stos
adc
push
push
push
push
iret
pop
xchg
in
push
icebp
sarl
stc
ret
mov
jo
test
cmc
scas
push
xchg
cmp
xor
das
xor
xlat
mov
mov
jnp
clc
aad
xchg
shl
pop
and
cmp
push
push
fcmovnu
jecxz
add
sbb
sbb
mull
mov
rcl
xor
repz
and
jae
lock
and
loopne
arpl
jne
outsl
xlat
je
fdivl
test
cmp
dec
in
jae
cmpl
dec
pop
adc
xorl
inc
jle
xchg
dec
lds
pop
jne
ds
jae
fadd
pop
sub
sbb
mov
and
cwtl
fldt
aas
xor
pop
sub
add
or
mov
jb
mov
sub
jge
cmc
sub
adc
test
mov
or
rcrb
dec
outsl
jne
pop
pop
in
add
xlat
shlb
nop
xchg
dec
loop
cmpsb
mov
dec
push
mov
ret
fbstp
mov
test
dec
jecxz
sti
xor
fxch
and
sub
xchg
ficomps
fwait
xor
bound
mov
and
mov
stc
es
add
inc
testl
in
imul
sbb
adc
fnsave
mov
cltd
mov
rorb
xor
in
dec
cmp
jp
push
in
inc
pop
aaa
fld
arpl
mov
xor
repnz
imul
data16
and
lret
leave
jecxz
pop
ja
dec
popa
sbb
jge
adc
mov
or
or
bound
inc
add
cmp
js
outsb
or
mov
imul
sbb
push
sahf
pop
pop
pop
pop
pop
jo
pop
in
mov
loop
mov
sub
int
addr16
push
rcr
scas
xlat
sbb
mov
cmp
cmpsl
jecxz
popf
ret
ror
or
cmpsb
and
lods
mov
loop
movsb
sbb
mov
add
xchg
xchg
leave
sahf
mov
dec
xchg
lds
ja,pt
sbbl
mov
push
hlt
outsb
addl
push
sti
and
in
arpl
pop
jecxz
xchg
lret
xchg
inc
enter
xchg
inc
inc
inc
mov
mov
adc
cmp
fs
mov
xor
cmpsl
lret
push
pushf
inc
sbbb
arpl
pushf
cmpsl
jbe
dec
fs
scas
jb
pop
mov
leave
pop
sbb
dec
add
mov
jae
jnp
cli
sub
xor
repnz
add
loopne
jne
cmp
popa
fs
pop
arpl
cmp
rolb
lret
mov
push
outsb
cmp
int3
lret
lahf
mov
lea
mov
ret
cltd
mov
mov
pop
scas
sub
sub
inc
inc
lods
cmp
and
push
xchg
loop
mov
push
or
call
add
add
std
cmp
xchg
dec
adc
repz
sti
jmp
outsb
mov
pusha
fstps
iret
call
jmp
iret
leave
xorb
adc
lret
dec
dec
inc
dec
aas
inc
jg
mov
inc
mov
cmp
push
pop
pop
loopne
data16
inc
pop
and
and
mov
xchg
mov
xchg
adcb
xchg
orl
jl
pushf
test
jnp
cmpb
mov
ljmp
lods
gs
data16
push
sahf
pop
fcoml
into
xlat
pop
push
push
push
enter
xchg
dec
dec
ret
inc
mov
ror
sti
xchg
jns
mov
xchg
std
sahf
mov
and
lock
popf
mov
jb
loopne
mov
scas
and
mov
sbb
push
cmpsb
xchg
xlat
fimuls
cmpsl
and
int3
es
xchg
dec
aas
add
push
add
addr16
mov
call
out
jmp
loopne
mov
fldenv
and
fdivp
and
xchg
insl
dec
or
dec
int3
dec
inc
aas
jecxz
adc
repnz
das
js
xor
and
daa
sub
ret
and
sub
pusha
and
jb
arpl
mov
sbb
pop
push
push
or
scas
test
clc
int
loope
jne
jl
ss
jbe
or
je
in
mov
sahf
fwait
sub
cltd
int3
imul
pop
lods
movsb
gs
push
shlb
lcall
or
cmpsb
and
xchg
or
dec
jg
xchg
mov
ret
rclb
mov
loopne
mov
sub
repnz
je
mov
cltd
cmp
icebp
add
das
mov
fwait
adc
ljmp
and
adc
aam
push
cld
add
hlt
cmc
push
mov
std
lock
sbb
addr16
sub
add
xor
out
sub
loopne
out
sahf
imul
dec
nop
ja
test
decb
and
test
jl
pop
dec
ficoms
adc
das
cmpsl
jns,pt
shll
jns
daa
fs
inc
pop
out
pop
and
mov
and
pushf
sbb
sbb
sub
adc
or
mov
cmpl
jns
dec
inc
ja
lahf
lock
imul
mov
imul
mov
les
pop
mov
jmp
dec
adc
lock
int3
cwtl
xlat
push
mov
shr
leave
add
mov
mov
or
pushf
in
and
mov
xchg
fwait
sahf
popf
inc
pop
dec
push
test
inc
inc
loope
loopne
inc
or
pushf
xchg
or
add
sti
push
stc
sti
out
repnz
ss
cmp
rcrb
jecxz
out
aas
jbe
pop
jecxz
sbb
jg
sbb
cmpl
fisttps
or
les
jne
xor
mov
lret
sub
sub
sub
push
sub
pusha
sub
mov
test
adc
xchg
pop
sbb
arpl
jns
andb
test
pxor
lods
lods
out
push
push
loopne
popa
and
arpl
mov
push
shlb
in
rcrl
stc
inc
or
scas
mov
jne
aaa
mov
repz
scas
rolb
lcall
sub
xchg
loope
pop
cltd
lcall
xchg
fstl
and
dec
lods
enter
cltd
push
or
repz
inc
jge
cmp
push
movsb
xchg
fsubrl
hlt
out
sub
divb
js
fs
shrl
fs
mov
pop
in
addr16
pop
ljmp
mov
inc
push
in
enter
inc
int3
imul
xor
cmp
cmp
push
aaa
stos
jbe
sbb
and
bound
adc
dec
dec
jg
mov
mov
add
sbb
dec
or
jnp
pop
into
jno
add
icebp
addr16
in
popf
imul
out
js
fsub
dec
fucomi
push
test
movsb
xchg
or
xchg
or
pop
sarb
mov
std
inc
xor
xor
test
mov
out
and
xor
and
daa
add
push
lods
push
std
dec
xchg
xchg
and
or
xchg
div
push
test
jp
fdivs
lock
mov
xor
icebp
div
daa
or
push
dec
jecxz
out
aas
fcmovu
fsubl
insb
fcompl
aam
sbb
lret
xchg
das
jns
outsl
jo
sbb
cltd
ja
push
dec
lea
repnz
cmp
mov
adc
and
sbb
cmp
out
pop
adc
xchg
and
add
mov
addb
jns
clc
xchg
std
jno
jae
cmp
addr16
jnp
jp
jmp
popa
arpl
lods
dec
fsubl
mov
xchg
lock
mov
pop
scas
push
inc
popf
pop
and
ret
lock
add
cmc
call
scas
pop
xor
add
stos
scas
icebp
insb
aad
loopne
xchg
xor
aam
aam
pushf
sub
cld
dec
dec
dec
xchg
mov
xchg
popa
add
sub
loop
jns
out
ss
cmc
inc
push
bnd
mov
jb
cmc
subl
pop
jecxz
in
sub
jbe
and
dec
xchg
insb
aad
sbb
xlat
adc
sub
jp
ss
inc
inc
mov
push
aaa
pop
shll
pop
outsb
dec
rorl
xor
push
sub
pusha
ljmp
movsl
in
aaa
and
mov
lret
rol
fstps
mov
mov
cs
addb
cmpsl
push
adc
aad
jnp
mov
lods
jbe
outsl
pop
push
mov
pusha
loop
popa
pop
arpl
push
push
pop
ficoml
sbb
pop
leave
xor
add
push
ret
push
int
mov
add
fcompl
stc
mov
repnz
xor
stos
test
daa
pop
sub
sbb
sbb
cwtl
arpl
mov
xchg
mov
inc
add
xor
mov
testl
mov
jg
jb
xchg
and
dec
popa
out
push
loop
in
daa
movsb
jno
pop
jns
fistl
fstpl
inc
push
mov
push
mov
dec
loope
lret
cli
inc
or
int
sarb
mov
iret
push
push
xorb
inc
mov
ss
cmp
xor
adc
bswap
sbb
adc
inc
or
or
bound
mov
cld
js
out
jb
addr16
jno
mov
ss
mov
fwait
gs
sbbb
xchg
fiaddl
loopne
in
fs
insl
sarl
clc
dec
push
test
push
call
cli
mov
mov
pushf
lods
outsb
cmp
sbb
and
rcrb
pushf
nop
sub
add
jg
mov
rcrb
call
adc
ss
es
add
sbb
sbb
jecxz
in
dec
test
jne
call
xchg
jns
icebp
jl
rolb
dec
inc
inc
inc
add
cmp
sub
pusha
lods
ss
xor
sub
out
pop
dec
mov
mov
push
sbb
adc
or
pop
or
add
incl
test
pop
or
into
or
addr16
in
lods
push
loopne
pop
out
cmp
cld
push
sti
popa
fs
push
push
dec
push
push
add
into
push
repz
push
int3
lret
into
int
mov
loop
call
cmp
inc
mov
inc
cwtl
sub
lods
sub
xchg
cmp
fs
insl
add
fistl
pop
dec
xchg
add
and
add
mov
inc
pop
cmp
or
loop
es
icebp
popa
adc
sub
jmp
in
fcmovu
fmull
ror
rorb
fildl
cmp
adc
lret
push
les
mov
aaa
push
push
mov
lahf
cmp
pop
stos
lret
sbb
push
fwait
sub
mov
mov
lahf
outsb
sahf
lods
adc
repz
adc
ja
and
adc
add
fwait
cmp
ljmp
repz
ljmp
in
lock
stc
jecxz
sarl
sub
jge
es
push
dec
push
jbe
push
aad
mov
cmp
mov
mov
loopne
pop
fistpll
call
sub
popf
fsubl
jmp
mov
movsb
pop
popa
nop
lret
pushf
jp
or
sbb
dec
and
push
sbb
sbb
push
add
cld
sti
pop
insl
out
sub
sbb
xor
xchg
sub
jmp
add
pop
mov
inc
xlat
fcmovnu
push
pop
sub
enter
dec
dec
push
inc
mov
mov
jb
aad
out
jg
or
xor
mov
xchg
jno
fs
sub
shrd
es
movsl
outsb
lret
nopl
or
mov
push
addb
js
xchg
js
jle
mov
or
mov
repnz
pusha
pop
stc
cmp
mov
xor
add
fiaddl
arpl
sti
add
leave
int3
popw
and
inc
into
or
sahf
cmp
mov
or
xor
mov
icebp
inc
stos
scas
lods
cmp
jecxz
aas
mov
jno
sahf
sbb
adc
xor
pusha
or
movsl
xlat
incw
orl
sub
jns
icebp
hlt
repz
xor
in
loopne
mov
push
bound
mov
mov
shrb
aam
dec
push
imul
lea
fisttpl
add
scas
jp
mov
pop
jo
sub
sub
test
add
and
mov
cld
pop
push
int
or
icebp
dec
adc
sub
test
jno
xchg
jle
inc
cld
xor
xchg
jp
repnz
jno
push
imul
test
sbbl
jne
pop
mov
push
enter
inc
dec
leave
aad
dec
fcmovnb
dec
into
int
ret
mov
mov
aad
mov
mov
sub
dec
cmc
test
mov
add
cwtl
add
xsha256
cmpsb
adc
lret
rclb
inc
or
inc
or
adc
push
adc
out
jno
hlt
shlb
pop
ss
insl
lods
in
popf
in
loopne
imul
aad
xor
mov
or
inc
jp
lret
mov
mov
push
jnp
mov
xor
int3
je
stos
shrb
les
mov
sbb
mov
adc
test
adc
push
xchg
push
cli
sub
dec
lcall
push
into
repnz
ret
inc
ljmp
mov
out
out
mov
js
stos
fildll
scas
shrb
xlat
insb
fisubs
rclb
push
push
pop
arpl
push
mov
and
mov
inc
int
fadds
les
sar
mov
xor
test
sbb
cmc
movsl
rolb
outsb
adc
mov
cwtl
adc
cltd
adc
xchg
push
adc
addl
cmp
ds
jl
icebp
cs
mov
clc
jbe
cmp
lock
imul
jmp
js
scas
add
jmp
push
loope
cmp
adc
dec
aad
std
lret
fisubs
aas
sarl
sti
or
cmp
lds
lret
xor
sarb
adc
pop
lret
push
pusha
ret
insl
and
mov
pop
adc
push
into
adc
aad
or
adc
out
or
mov
std
mov
cmc
mov
scas
jno
mov
daa
subb
jmp
loopne
arpl
outsb
push
out
outsb
cmp
mov
push
cmp
push
mov
inc
push
leave
inc
or
cmp
les
add
test
xor
mov
shll
iret
test
or
cmp
xchg
sbb
pushf
cmpsl
das
fcoml
or
enter
dec
add
es
add
sbb
push
cmp
jo
outsl
in
ds
fsubrs
shrb
pop
aam
sub
cs
rcrb
push
enter
dec
push
sbb
push
push
ret
adc
into
push
mov
dec
mov
cmp
cmp
inc
dec
aaa
inc
cmp
jb
stos
xor
push
ret
mov
pusha
and
mov
adc
mov
pop
push
or
jp
aas
enter
add
jg
ret
mov
lock
nop
xor
jb
mov
out
outsb
in
pusha
fcompl
cli
prefetcht1
int
push
push
lret
add
sar
mov
lret
mov
jp
mov
cwtl
ds
xchg
in
cmpsl
jne
mov
cmpsl
and
out
scas
jns
xchg
and
xchg
lcall
and
push
loope
lods
xor
sbb
pop
add
popf
and
mov
jb
cld
mov
out
mov
jmp
xor
pop
sub
pop
push
ficoms
repz
rorl
fldcw
or
mov
push
and
adc
mov
mov
push
xor
jno
sub
loopne
mov
and
xor
test
mov
je
xchg
pop
pop
lods
adc
sbb
add
adcb
jo
xlat
lds
cmp
jo
jnp
cs
insb
jmp
jo
mov
mov
push
out
fidivl
stos
adc
out
pop
push
dec
movsl
in
fcomip
jmp
out
popf
xchg
out
xchg
mov
les
push
test
mov
mov
stos
rcll
hlt
test
icebp
mov
mov
xchg
mov
lcall
push
sub
mov
add
or
add
lock
outsb
cli
adc
xchg
popf
pushf
lock
sbb
xor
cmc
sub
loop
daa
jecxz
sub
aam
cwtl
ljmp
push
rolb
rcl
dec
and
out
inc
and
sub
xor
cmp
inc
in
je
xor
das
xor
pop
out
repz
xchg
sbb
and
ds
pop
rcrb
xchg
push
mov
addb
mov
jg
jo
mov
jbe
mov
xor
call
jbe
fildll
loop
lret
outsb
mov
add
pop
cmc
arpl
fldcw
adc
leave
addr16
int3
inc
mov
and
iret
test
jle
test
mov
mov
dec
mov
je
mov
or
mov
jl
lcall
sbb
cs
sub
inc
or
add
pop
gs
xor
test
mov
mov
scas
mov
ss
xlat
mov
loop
popa
xchg
cmp
xlat
sub
gs
dec
int
mov
into
out
and
inc
mov
mov
dec
mov
mov
sub
imul
stos
rorl
xor
aas
sbb
popf
pop
jnp
dec
adc
mov
mov
leave
jns
inc
popf
andl
mov
jo
pusha
fwait
cmc
mov
repz
imul
push
mov
add
xchg
pop
pop
cmpsl
dec
fwait
push
add
nop
int3
in
push
stc
in
int3
int
rcrb
scas
inc
sbb
mov
cmp
test
scas
push
lcall
sub
mov
mov
out
loope
cs
inc
push
and
lea
not
into
adc
and
mov
inc
fisttps
in
sub
mov
push
fistpll
scas
js
or
mov
jns
stc
push
pop
fsubr
sbb
adc
rcll
or
dec
enter
pop
mov
leave
adc
xor
test
outsb
das
int3
sub
pusha
lret
sub
cmpl
and
out
sbb
mov
popa
pop
subb
add
ss
mov
jg
cmp
into
test
lods
jge
push
outsl
lods
or
jne
cli
pop
mov
aas
lods
popa
jmp
push
loopne
pop
push
pop
jge
xlat
mov
dec
in
jmp
dec
out
les
ja
shl
lea
add
cld
stc
mov
push
lods
jo
imul
mov
cmp
xchg
mov
lds
dec
negb
dec
mov
les
mov
cmc
add
push
cmp
dec
xchg
fcomip
jp
sti
push
clc
adc
push
jge
dec
dec
out
mov
outsl
ja
out
loop
add
lock
loopne
data16
sub
arpl
adc
jmp
push
popa
inc
enter
adc
pop
cmp
sti
inc
imul
mov
mov
xor
adc
lods
jae
mov
and
inc
inc
pop
lcall
pop
sbb
adc
icebp
adc
test
jne
cmpb
sbb
scas
lods
mov
mov
int3
and
cmp
adc
add
sahf
fs
leave
cmp
pop
rcrb
je
aam
outsl
push
jmp
mov
test
les
mov
jns
mov
sbb
mov
mov
xchg
sub
nop
lock
nop
fldenv
xor
cltd
ss
sahf
daa
xchg
or
jbe
mov
pop
xchg
or
mov
add
dec
daa
fists
icebp
push
mov
ss
fldcw
call
dec
testb
es
rcll
mov
icebp
and
jp
int3
adc
push
leave
decl
enter
inc
cmp
mov
jecxz
outsb
outsb
dec
mov
xor
inc
pop
ret
sub
cmpsb
lret
cmp
jno
mov
sub
adc
mov
cmpb
ret
inc
xchg
push
xchg
scas
cmpsl
jge
push
imul
push
out
xchg
and
mov
gs
push
testl
mov
fistl
push
mov
push
add
aas
int3
jg
mov
mov
mov
ja
lahf
dec
std
mov
jae
dec
ret
xor
stos
or
lods
insb
es
and
pop
cwtl
aam
push
lock
movsl
mov
dec
xchg
sbb
rcrl
mov
or
add
xchg
fidivl
lock
jno
ret
xchg
iret
cs
jmp
fs
mov
loope
fs
cmpsb
sbb
rcll
pop
xchg
dec
rolb
ljmp
imul
jno
push
lds
inc
jb
inc
fstps
je
leavew
insl
mov
mov
icebp
cmp
mov
or
pop
and
dec
and
sbb
dec
push
adc
rolb
xchg
and
jns
sahf
outsl
mov
adc
jno
xchg
adc
mov
pop
aad
addr16
fisttps
mov
in
into
jle
popf
push
pop
adc
into
xchg
push
push
push
push
push
rorb
dec
add
bound
out
cmp
ds
jp
mov
clc
ds
xchg
in
cmpsl
jne
mov
mov
lods
lahf
das
jmp
loopne
ss
out
dec
fstp
popf
sub
loopne
ljmp
inc
sbb
das
sbb
pushf
add
adc
cmp
jmp
or
iret
pop
loope
pushf
in
add
adc
rcr
fcmovnu
pop
mov
outsl
sbbl
shr
sub
into
in
add
ds
lret
cmp
les
sub
test
inc
adc
and
cs
adc
sbb
xchg
aad
fcoml
adc
jae
mov
das
dec
or
jnp
sbb
jle
mov
pop
cmpsb
fldt
push
fwait
imul
lods
popa
jmp
std
pop
gs
cli
cmp
psubusw
loopne
das
insl
mov
addr16
rol
jle
xor
mov
push
gs
shlb
hlt
dec
lahf
scas
lods
mov
lcall
or
sbb
push
or
std
fwait
lret
inc
sbb
divb
sti
or
jo
out
jno
lock
aam
dec
mov
dec
and
fistpl
rcr
fcmovnu
push
aas
out
or
ljmp
fmuls
dec
add
xor
mov
inc
inc
cmp
xor
xchg
cmp
jnp
scas
cmp
xor
mov
mov
scas
in
popf
mov
xor
adc
daa
mov
sbb
mov
mov
lret
test
jp
jl
push
xor
mov
int3
mov
sbb
arpl
repz
fcomps
push
pop
push
rcr
push
push
push
mov
lret
pop
xchg
test
pop
lcall
les
cltd
xor
mov
movsb
mov
cltd
pushf
fwait
scas
xchg
push
ficompl
or
or
or
or
sbb
xchg
xchg
idivb
clc
add
mov
out
and
jne
in
jmp
jmp
lahf
jno
mov
addr16
pop
xchg
iret
rcl
dec
call
aam
push
dec
dec
dec
xor
gs
inc
mov
shr
mov
push
daa
mov
xor
jmp
aam
pop
sub
cs
pop
and
sub
sbb
shrd
push
sbb
adc
pop
jecxz
test
aaa
xchg
outsb
mov
jne
sarb
mov
xchg
andb
sbb
loop
gs
arpl
sahf
pop
popf
jno
fistpl
out
push
aad
dec
ret
arpl
shl
or
jmp
mov
cmp
sub
test
stc
daa
inc
xchg
loop
push
stos
and
push
loope
mov
sub
stos
ficoml
xchg
mov
sub
lret
push
mov
jns
mov
cld
js
xchg
out
ss
icebp
hlt
jg
mov
outsb
xor
push
cld
sub
frstor
jne
push
bound
imul
fadds
je
aas
push
pop
aaa
jae
sub
sti
ss
popa
aas
fldcw
sub
stos
fsubs
inc
or
xor
adc
stos
adc
pcmpeqd
aad
mov
inc
dec
mov
ljmp
push
ret
jo
jb
test
mov
jns
mov
dec
cmpsl
arpl
sahf
jnp
gs
push
or
test
push
rcrl
push
or
lret
ret
int3
push
into
lock
mov
mov
das
loope
cmpsl
or
int
mov
inc
mov
pushf
sarl
movsl
pushf
mov
sahf
movsl
mov
push
sub
repz
mov
xchg
add
cli
add
int3
mov
jns
int3
stc
lock
mov
ljmp
jge
in
in
xlat
fidivl
and
testb
ljmp
jo
inc
adc
pop
cmp
inc
inc
aaa
fildl
cmp
push
popa
dec
jmp
sub
sub
sub
pop
mov
jecxz
das
loope
mov
mov
daa
flds
scas
invd
mov
adc
or
pushf
lea
xchg
xchg
addb
jne
or
jb
daa
cmp
push
push
and
insl
outsb
pop
std
push
loop
arpl
cmc
dec
mov
or
push
rorl
leave
imul
inc
xchg
mov
mov
mov
mov
jge
mov
jne
mov
stos
scas
test
and
xchg
bound
jecxz
xchg
xor
test
movsl
daa
icebp
or
jo
xchg
xor
mov
movsl
jmp
in
jnp
std
xchg
push
in
xchg
daa
imul
orb
push
push
cmp
outsb
daa
lret
jge
aaa
mov
aad
ret
rol
jg
xor
mov
sbb
or
loop
push
daa
jb
pop
sub
and
insb
hlt
mov
mov
adc
gs
push
adc
xchg
sbb
mov
xchg
pop
mov
stc
sbb
stos
stos
cwtl
icebp
stc
jno
push
pushf
icebp
xchg
jle
jmp
imul
insb
imul
and
lcall
push
lret
aas
xchg
ret
cmc
inc
cmpl
mov
cmpsb
add
mov
mov
mov
jbe,pt
aas
test
fildll
out
stos
dec
sbb
sahf
es
pushf
cmovg
mov
push
or
push
add
add
sarb
lcall
pop
and
out
push
shl
and
xor
loop
movsl
in
jno
mov
lret
test
stos
jne
lret
adc
leave
pop
inc
pop
inc
cmpb
rorb
pop
cld
mov
std
outsb
cmpsl
dec
mov
cs
jae
push
push
push
lds
mov
fst
and
movlps
sbb
or
or
out
adc
mov
xor
pop
xorb
lock
xor
mov
cmc
sub
lea
outsb
loopne
loopne
jne
and
sbb
xchg
imul
push
testb
add
adc
sarl
adcb
mov
cli
stos
ds
mov
ljmp
rcl
arpl
mov
loop
inc
or
xchg
adc
mov
inc
xchg
add
into
clc
jl
jmp
lock
jge
icebp
xor
cmc
imul
test
fldt
jmp
push
cs
cmc
mov
fcmovbe
iret
rcrb
jns
dec
push
lret
into
adc
roll
imul
cmp
mov
dec
bound
cmp
sub
mov
mov
xorl
sbb
dec
push
xchg
dec
push
cltd
lea
push
sbb
subl
out
out
mov
andb
out
mov
lcall
in
dec
fldenv
push
dec
or
add
fs
push
into
int
mov
lds
xchg
xor
lret
loop
out
lds
sub
mov
and
mov
mov
es
xchg
out
sahf
mov
xchg
xchg
xchg
xchg
sbb
mov
popf
xor
popf
cmp
idiv
pop
and
mov
and
addr16
movsb
xchg
outsb
sub
repz
shll
out
fdecstp
fistpl
enter
lret
data16
shlb
inc
dec
dec
pop
pop
dec
lds
insb
outsb
out
clc
push
jge
jge
xor
cvtpi2ps
les
cs
stos
cmp
es
mov
sbb
jns
daa
mov
adc
rorl
and
mov
adcl
inc
mov
jae
add
mov
pushf
addl
pusha
jmp
rcrb
nop
fnstcw
jge
test
or
jmp
aad
int3
testl
sarl
add
xor
mov
jne
jmp
dec
sub
xchg
jecxz
fistpl
and
cwtl
dec
and
jmp
and
adc
mov
adc
mov
aam
jle
cmp
cmp
adc
shl
jnp
jp
push
and
xor
stos
in
div
ljmp
ficomps
fcomi
aas
jns
add
enter
test
pop
in
aas
into
add
arpl
push
je
iret
mov
xor
mov
sub
data16
inc
pop
inc
pop
sub
sub
inc
mov
mov
mov
xchg
xor
es
sti
mov
or
orb
jno
jecxz
mov
out
imul
jne
xor
insb
and
and
bound
pushf
sub
pop
push
adc
mov
jae
or
std
icebp
dec
xchg
lret
mov
inc
jns
ret
inc
lds
insb
xor
mov
lock
pop
jns
test
lods
nop
mov
test
sub
xchg
xchg
mov
push
xchg
adc
fsubrs
mov
out
jge
clc
jb
pop
jae
ljmp
out
pusha
sbb
pop
mov
add
xlat
popf
pop
and
ficomps
fistps
fldl
pop
xchg
lret
cmp
add
inc
out
cmp
mov
mov
xor
sub
ficoml
and
push
fsubr
mov
pop
sbb
mov
adc
pop
sub
mov
push
jp
jg
mov
mov
add
jns
push
mov
push
arpl
mov
pop
xchg
mov
push
pop
fisubrs
push
push
push
out
jge
add
ret
repz
xchg
mov
mov
mov
out
aad
cli
iret
sti
mov
mov
fsub
mov
iret
cltd
sub
out
pop
jo
dec
xchg
jmp
testl
lock
fnstsw
xor
adc
cs
or
es
push
inc
outsb
sbb
xlat
pop
and
loopne
sbb
push
xchg
daa
enter
and
jle
out
jle
pusha
aaa
adc
sub
cmp
and
adc
shrl
das
popa
imul
ret
cmp
add
pop
pop
sbb
add
test
rolb
cmpsb
pop
jns
subb
ja
xor
cmp
mov
xchg
repnz
dec
insl
cmpsb
lods
jl
pop
pop
fsubrl
pop
push
push
xor
ret
fwait
adc
mov
ds
dec
test
test
mov
xchg
stos
ljmp
in
jg
stos
scas
loopne
mov
and
test
xchg
nop
add
mov
cmp
and
cmp
fsts
aaa
je
cli
push
pushl
cmp
jl
jge
loop
or
ljmp
out
sub
push
sti
jg
in
lea
xchg
aas
aam
aam
aad
mov
pop
pop
cmp
mov
inc
sbb
dec
jb
insb
dec
mov
jle
lods
cs
fsts
pop
nop
and
mov
push
pop
sub
xchg
pop
pop
mov
xor
jg
add
ja
xor
jle
mov
outsl
call
outsb
mov
xorb
sti
pop
push
fisubl
fwait
movsl
pop
dec
cs
sbb
jmp
push
fistpll
movsb
int3
add
shll
sti
push
mov
test
push
stos
adc
stos
lret
iret
aam
lret
jmp
cltd
xor
xchg
xchg
or
icebp
clc
sub
cli
rolb
push
cli
lret
xor
cld
in
jp
sti
out
repnz
in
call
jmp
fidivs
jecxz
jg
sub
adc
dec
cmpsb
iret
arpl
aam
inc
sahf
pop
inc
orb
aas
inc
cmp
jb
sub
je
imul
xor
and
arpl
out
sub
sbb
pop
dec
pop
inc
adc
sbb
les
dec
adc
rol
les
mov
mov
jle
cmp
pop
mov
mov
mov
pusha
stos
jne
pop
das
je
pop
mov
insb
rclb
mov
mov
and
dec
xchg
dec
testl
roll
stc
mov
clc
ret
fnsave
mov
xchg
push
lock
in
cmpsl
fcmovbe
cltd
je
cltd
fsubs
xchg
dec
mov
xor
inc
cmp
nop
inc
aas
inc
mov
xor
ss
sbb
add
xchg
jg
lock
jnp
sbb
in
jmp
shlb
sub
popa
and
ss
jbe
sub
and
aam
sbb
pop
cmp
add
xor
or
jbe
or
leave
rorb
mov
test
cmp
xor
jmp
sub
ret
loope
and
mov
sbb
aam
lea
sbb
stc
enter
dec
pop
inc
push
mov
test
inc
push
mov
jbe
lods
call
icebp
loopne
imul
pop
in
push
loopne
push
popa
fsubrl
pop
sbb
rcr
mov
xchg
push
addr16
adc
dec
testl
cld
ret
xlat
mov
out
mov
ss
stos
mov
sub
out
xchg
bts
and
rorb
sub
xor
icebp
pop
fdivr
push
lret
lods
add
int3
add
lret
or
testb
adcb
mov
decb
call
xor
mov
insb
les
and
out
xor
fdiv
lret
rep
fdivs
push
rcrl
or
ljmp
mov
andb
push
cmp
sbb
jae
das
push
icebp
js
jge
stos
sbb
pop
push
mov
test
pop
and
mov
rdpmc
int3
xchg
pop
jb
pop
jnp
inc
mov
pop
cmpsb
inc
inc
jg
add
push
xchg
xor
jnp
je
mov
cmpsl
insb
repnz
push
xchg
inc
fwait
cmpsb
push
jnp
and
mov
movsb
adc
push
test
xchg
xor
int
push
or
cld
add
sarl
popf
test
mov
test
xor
push
scas
pop
fdivr
lcall
add
and
mov
xchg
rcrb
in
mull
lds
push
ret
maskmovq
mull
mov
dec
movsb
inc
in
loopne
cmc
and
andl
loopne
fnstenv
loopne
jmp
jno
xor
imul
enter
test
cmp
pop
pushf
test
pusha
aaa
repz
and
sub
xchg
cmpsb
es
sub
popf
sbb
lods
in
adc
enter
dec
cmpsl
adc
or
inc
adc
or
push
xor
lcall
test
je
push
mov
jge
mov
xchg
pop
cmp
jne
fimull
loopne
in
notb
pop
add
sbb
shlb
mov
aam
xchg
scas
jae
inc
dec
sbb
in
mov
xchg
out
dec
scas
mov
xchg
loop
lods
movsl
loope
out
mov
xor
and
in
xchg
sahf
popf
sub
dec
test
cmova
cmp
jmp
cltd
scas
lea
push
add
and
mov
sub
out
das
inc
scas
lret
je
mov
pop
out
arpl
pop
pusha
xchg
in
mov
lret
dec
je
dec
ja
das
dec
mov
cmp
or
xor
pop
mov
sti
addr16
loop
pop
and
lret
in
xor
jb
or
or
push
mov
push
jno
pusha
mov
test
lock
repnz
jp
std
adc
je
or
imul
imul
push
gs
std
gs
xchg
jae
pop
pop
push
fistpl
dec
xchg
ret
pusha
into
int
in
sti
std
pop
and
mov
mov
mov
fldt
aaa
stos
or
cmp
sub
rorl
sbb
xchg
xchg
inc
mov
or
or
leave
add
push
add
jge
jo,pn
out
add
icebp
and
or
jne
loop
call
jmp
out
aas
sti
add
testb
fldcw
cmp
dec
dec
add
pop
cmp
fstpt
aaa
cmp
sarb
adcb
lret
daa
pop
dec
and
inc
xlat
inc
sub
push
and
or
sbb
sub
inc
push
nop
sbb
lahf
cmpb
sub
lea
addb
ja
adc
xchg
jo
or
mov
and
repz
andl
gs
push
pop
pop
in
pop
incl
push
sbb
add
mov
movsl
mov
sahf
xchg
js
rorb
loope
out
lods
loop
test
out
sub
mov
fsubrs
movsb
mov
and
daa
add
ficompl
out
pop
mov
or
sbb
add
test
add
testl
jge
ljmp
jecxz
daa
fmuls
fildll
in
std
pop
fcom
fisubl
sarb
pushf
push
sbb
leave
pop
lret
push
enter
fcmovb
adc
adc
mov
mov
ds
aam
in
inc
mov
mov
int3
xchg
push
adc
and
cmp
daa
or
or
adc
add
sbb
jo
jb
inc
mov
adc
adc
mov
push
ret
pop
mov
jae
mov
fistl
or
cltd
rcl
aad
pop
xor
push
xor
into
int
sti
pop
fcmovb
ret
aaa
add
cmc
push
mov
leave
fidivl
shll
mov
loopne
sbb
test
mov
notl
stc
and
mov
sbb
ja
add
lds
call
mov
in
xchg
imull
div
loope
out
jno
pop
out
mov
pop
insl
dec
insl
inc
sbb
leave
or
inc
aas
inc
inc
push
fisubl
orl
fs
imul
arpl
mov
mov
lcall
arpl
dec
sub
es
cmp
cmp
dec
xor
lret
pop
stc
rolb
outsb
rep
out
test
idivb
pusha
jmp
loopne
popa
cld
insl
pushf
ja
arpl
mov
rol
push
push
push
push
mov
jle
xchg
dec
push
fwait
rol
inc
push
mov
faddp
pop
lods
mov
mov
stos
dec
scas
into
hlt
cmpsl
lods
stos
fwait
outsl
imul
fnsave
and
sahf
xchg
test
xchg
xchg
xchg
cs
mov
or
lea
scas
add
outsb
jnp
dec
jae
add
jp
xor
call
imul
cmp
pop
in
ds
push
in
insl
adcb
inc
leave
int
dec
dec
into
rolb
push
xor
aad
xor
mov
int
xor
xor
sub
pop
rcrl
loopne
and
movsb
sub
sbb
dec
push
sbb
push
push
adc
mov
fdivrl
xchg
inc
push
imul
imul
pop
inc
cmpsb
fwait
xchg
xchg
popa
or
fistpl
pushf
pop
int
sbb
push
xchg
scas
bswap
pop
out
aad
push
mov
scas
inc
or
les
mov
push
mov
xchg
out
leave
jo
pushf
test
in
lods
aaa
cmp
imul
sub
adc
sub
adc
dec
xchg
sub
cld
add
inc
add
lds
out
repnz
sbb
jmp
cs
sarb
mov
pop
insl
loope
insb
dec
push
sbb
rcll
faddl
sbb
fimull
mov
fimull
mov
push
sub
mov
adc
xor
sub
inc
jecxz
sub
jae
and
and
or
fmuls
sub
mov
mov
jg
fisttpl
add
inc
add
imul
repz
out
mov
fbstp
negb
jb
call
sti
fldt
ffree
push
inc
dec
ffreep
pusha
cmc
inc
negl
push
xchg
fmulp
cmp
rorb
xor
mov
mov
mov
movsl
sbb
test
and
in
and
dec
mov
lahf
nop
adc
push
adc
or
jecxz
push
lret
test
add
popf
fnstcw
jmp
in
jp
icebp
hlt
rep
sub
call
popa
lock
loopne
fimull
jo
mov
pop
int3
aam
in
gs
lret
ds
aas
inc
inc
stc
mov
inc
cmp
cmp
mov
xor
and
push
int
pop
inc
lcall
adc
sbb
neg
xchg
sbb
xor
test
dec
or
in
cltd
lret
das
or
test
adc
stos
imul
push
adc
mov
mov
insb
push
pop
pop
cmp
mull
jle
sub
add
jo
rorb
xchg
push
les
adc
xchg
insb
inc
aad
fmull
mov
pop
lds
sarb
mov
cld
movsb
xor
stos
aas
xchg
shl
call
xor
sub
out
adc
stos
lret
fwait
cmpsl
xchg
mov
cmpsb
push
sbb
add
add
xchg
adc
cli
cmp
sti
cmp
xchg
add
es
lock
xor
fbld
ljmp
pushf
popa
mov
insl
frstpm(287
neg
sbb
sbb
adc
adc
mov
push
jbe
cmp
int3
mov
xchg
cmp
das
xor
sbb
stos
scas
mov
and
sbb
sbb
pop
daa
adc
or
sub
lea
addl
out
mov
jo
push
sahf
sub
imull
jecxz
sbb
and
xor
addr16
sbbl
leave
sarb
jne
shll
mov
arpl
inc
mov
test
sub
movsb
mov
cmp
aas
sbb
nop
push
jecxz
inc
aaa
adc
inc
dec
pop
jle
aam
mov
orl
jns
clc
xor
cld
mov
test
xor
pop
insb
xor
dec
imul
out
sub
push
pop
and
push
push
stc
popa
sti
dec
pop
and
push
jg
mov
movsl
rcll
push
call
sub
insb
int3
imull
in
add
jecxz
clc
js
repz
jl
out
jo
jmp
je
fucomip
push
inc
xlat
loopne
cmp
in
cmp
fcomps
and
pop
and
sbb
or
or
jg
sbb
decb
outsl
cwtl
clc
mov
push
pop
mov
xchg
call
pusha
shrl
pop
and
pop
push
stc
mov
push
dec
inc
lret
dec
leave
int
inc
fxch
dec
mov
jb
mov
lret
repnz
repnz
pusha
cmp
mov
sub
inc
je
nop
mov
out
cs
adc
decl
arpl
orl
clc
mull
cmp
clc
and
hlt
mov
hlt
call
sub
pusha
sub
adc
iret
pop
jecxz
mov
out
cld
dec
cwtl
nop
push
add
xchg
jmp
insl
or
dec
dec
or
cmp
outsb
inc
pop
inc
mov
push
cmpsl
movb
ss
lock
lahf
push
xchg
outsb
xor
in
pop
inc
int3
sahf
gs
adc
rorl
lret
fwait
jo
leave
sub
or
jle
mov
popf
jmp
cld
pop
pop
sub
imul
je
pop
push
fsubrp
inc
xlat
pop
inc
loope
out
hlt
ret
push
fistps
imul
int
dec
jmp
test
cmp
into
in
dec
loop
mov
mov
cltd
fildl
xor
ds
mov
cs
mov
xchg
sbb
test
popf
nop
aam
sub
rcll
hlt
adc
js
out
test
mov
icebp
arpl
cmp
pop
pop
or
sti
repz
cli
sbb
imul
in
bound
fsts
sub
loop
fcompl
loopne
ljmp
fmul
mov
lret
jne
inc
int3
push
cmp
sub
jns
mov
push
xchg
xor
insl
test
subl
imul
loope
imul
push
mov
insl
shrl
add
jge
inc
add
ret
scas
mov
add
mov
mov
mov
lret
popa
mov
arpl
pop
scas
pop
push
out
sti
addr16
mov
cli
cli
inc
cltd
lds
loop
push
shll
out
inc
fcmove
or
inc
fisubs
mull
mov
loop
dec
add
loop
stos
jg
xchg
xchg
cmp
mov
xor
mov
push
jnp
inc
aas
or
sbb
out
jbe
fbstp
jl
imul
pop
es
lock
nop
jo
xchg
sbbl
dec
pop
jne
stc
int
and
inc
mov
jbe
mov
lock
cmc
sub
pop
mov
and
js
mov
nop
ds
adc
dec
mov
pop
sub
jnp
bound
test
cmp
jae
jne
mov
jbe
pop
movsl
pop
gs
fs
sbb
jno
or
add
or
dec
push
ret
testb
cmp
cmp
pop
add
xor
mov
js
xor
push
lods
and
and
xchg
cmpsb
sbb
gs
xchg
cmp
lcall
or
sub
popa
add
mov
scas
xchg
aaa
push
jle
mov
adc
sub
push
fnstcw
das
movsl
sub
out
frstor
fsubrs
negb
aam
pop
xchg
jb
add
adc
pop
or
dec
lea
ds
sub
dec
dec
xor
sub
inc
cmpsb
imul
arpl
pop
fstpl
dec
bswap
xchg
addb
adc
dec
test
rcrl
jg
mov
insl
cmp
inc
xor
test
hlt
xor
mov
popa
loopne
pop
fists
mulb
cmpsb
negl
fistpl
push
inc
or
out
lret
rol
push
ret
clc
mov
cmp
cmp
cmpsl
mov
mov
shlb
aaa
lahf
stos
cmp
cmp
mov
pop
out
sahf
popf
xchg
cmp
adc
xor
lea
add
hlt
sti
shr
mov
jmp
loopne
xchg
add
loopne
add
lock
fcmovu
adc
cmc
aam
rclb
sti
aad
inc
pop
repnz
rorb
mov
sub
mov
cmp
out
int
mov
fsubrl
mov
dec
cs
stos
int3
inc
and
movsb
cmpsl
inc
pop
sbb
mov
xchg
sub
mov
push
and
mov
outsl
movsb
int3
jns
xchg
hlt
mov
jne
nop
in
push
test
loop
mov
mov
pop
jl
add
mov
push
iret
insb
push
push
dec
aad
int3
dec
lret
dec
dec
test
jecxz
jmp
dec
aaa
push
mov
andl
icebp
mov
imul
out
out
mov
es
addr16
in
mov
sbb
blci
jg
roll
sbb
sub
stc
add
idivl
call
jne
sub
jne
jne
outsb
pusha
cmp
jo
arpl
sarb
jne
or
imul
jle
call
lea
or
jae
cli
pushl
fcmovnb
int3
sub
push
cmp
mov
adc
daa
les
lds
sub
sbb
push
sbb
pushf
adc
adc
lahf
adc
mov
adc
mov
push
push
int3
outsl
idivb
sub
stos
in
pop
jns
stos
outsb
xchg
xchg
mov
sti
arpl
fidivs
jmp
fsts
decb
test
ficompl
fcmovb
ret
in
ffree
mov
mov
lahf
into
pop
mov
stos
mulb
repz
outsb
repnz
cmp
inc
push
sbb
mov
dec
or
pop
or
xchg
sub
sub
clc
daa
es
sti
std
lock
inc
sub
incl
das
ficoms
and
jle
mov
mov
dec
dec
mov
aad
xchg
mov
aas
jecxz
imul
push
insb
push
xchg
jo
mov
sub
sub
xor
pop
and
es
dec
push
cmpsl
jg
or
adc
mov
mov
xchg
jb
fwait
adcl
aaa
jns
mov
rcr
pusha
stos
jne
outsl
push
push
insl
cli
dec
fwait
popa
push
out
pop
push
hlt
push
pop
push
push
xor
push
push
cltd
xorb
xchg
repnz
mov
mov
add
add
mov
loope
mov
cmpsl
sti
inc
nop
inc
cmpsb
inc
scas
mov
in
daa
or
sbb
xchg
out
adc
or
push
cmp
mov
add
push
cli
stc
dec
mov
out
adc
xor
shll
xor
and
shrl
and
push
adc
sbb
insl
out
outsb
aam
mov
jle
dec
sbb
push
or
jg
subb
mov
js,pt
shrb
outsl
and
es
adc
pop
pop
xorb
lret
into
into
adc
test
mov
clc
lret
pop
inc
inc
jne
daa
jns
jnp
mov
xor
push
jns
sbb
push
loop
test
sub
lods
or
movsl
imul
pop
shl
stos
xchg
push
jp
xchg
dec
jecxz
in
in
xchg
icebp
jne
aas
das
lds
mov
dec
mov
sub
testb
pop
ds
shlb
add
xchg
fwait
sub
nop
int3
push
movsb
or
sub
xchg
orb
rorl
idiv
outsl
es
jb
jbe
cltd
jge
cli
testb
sub
test
or
cmp
loope,pt
and
stc
sub
js
insb
cmp
insl
cmp
sub
inc
mov
dec
xor
cmp
cmp
ds
xor
int3
sub
sub
dec
sub
mov
xor
cltd
sbb
pop
sbb
mov
dec
xchg
xor
mov
sbbl
jl
cmpl
mov
mov
mov
or
insl
push
movsb
outsb
mov
push
iret
pop
stos
pop
inc
push
xchg
pop
notb
push
cli
das
leave
ret
add
and
fisubrs
std
mov
test
push
ret
cmp
push
xor
aad
lock
sahf
daa
mov
mov
lcall
xchg
and
clc
inc
or
adc
lret
arpl
out
decb
mov
addr16
out
jmp
in
jp
stc
xchg
jecxz
in
out
testb
insl
es
mull
enter
setae
insb
inc
aas
inc
rolb
mov
ss
test
hlt
enter
ret
das
inc
das
lods
and
dec
stos
jecxz
mov
cmp
sahf
arpl
xchg
sbb
xor
pushf
inc
scas
pushf
nop
and
or
js
addb
js
mov
cld
scas
outsl
jb
call
cmp
mov
push
dec
arpl
fs
pop
pop
rep
pop
repz
jbe
fcoms
xchg
xchg
add
loope
inc
dec
pop
repnz
repz
xlat
dec
mov
cmp
cmpsl
in
sti
mov
scas
pop
popf
push
mov
or
xchg
aam
fs
sahf
inc
in
push
test
movsl
xchg
xchg
inc
mov
or
orl
ja
in
pop
sub
pop
fucompp
mov
repnz
jo
jmp
insl
cmc
fs
pop
cmpsb
jno
pop
and
movsl
ficompl
push
push
sahf
sub
dec
inc
or
aam
shl
insl
jno
push
sbb
xor
clc
inc
cmp
dec
gs
sbb
xor
int3
out
insl
pop
mov
lcall
dec
test
int3
leave
xchg
adc
les
lea
test
sbb
nop
jo
dec
lock
cmpsb
repz
adc
xor
xor
pop
fsubrs
pop
or
and
outsl
fdivrs
add
hlt
str
rcrl
fisubrl
shlb
mov
xor
lods
frstor
imul
mov
cmpsb
mov
xchg
ficompl
lret
sub
lcall
add
ret
push
cmpsl
add
dec
rcl
add
mov
dec
das
sti
push
std
aaa
nop
mov
je
hlt
and
outsb
xor
aas
stos
cmc
xchg
mov
pop
movsb
adc
push
imul
pop
aad
jp
sub
dec
jae
add
cmp
rcr
ret
bound
stc
mov
arpl
out
jmp
xchg
cs
mov
pusha
.byte
sub
pop
add
add
add
jb
gs
xor
cs
insb
add
xor
add
pop
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
pop
push
push
popa
jb
sub
imul
push
je
popa
insb
je
sub
arpl
je
arpl
jne
jo
jb
inc
ja
bound
insb
insl
popa
jae
gs
arpl
and
ja,pn
bound
insb
insl
popa
jae
gs
arpl
add
add
add
in
mull
inc
add
add
add
jmp
jmp
add
jmp
jmp
sub
add
jmp
add
sub
mov
nop
lea
mov
lods
stc
stc
nop
sub
stc
sub
stc
sub
dec
add
stc
xor
clc
add
add
stc
xor
clc
xor
add
add
stc
clc
dec
stc
stc
nop
sub
stc
sub
stc
sub
dec
add
stc
xor
stos
loop
jle
pop
mov
repnz
sub
and
sbb
cmp
push
aas
into
mov
lea
mov
test
jle
sub
lret
in
jecxz
jge
push
test
dec
dec
addl
gs
mov
sbb
call
mov
stos
rorl
rclb
movb
and
ret
mov
sahf
nop
mov
inc
ret
push
ret
sub
scas
sub
xchg
das
pop
lahf
add
incb
nop
mov
ds
push
test
or
and
jmp
pop
jmp
or
fpatan
mov
dec
ret
push
inc
lds
fldl
mov
jbe
mov
sbb
sbb
gs
mov
pcmpgtw
sarb
js
je
stc
pusha
sbb
or
pop
inc
loope
push
push
aad
leave
jbe
inc
aad
leave
push
cmp
mov
mov
push
out
mov
mov
ficompl
mov
adc
pop
mov
shlb
out
icebp
sahf
adc
add
push
cmp
iret
or
ds
sti
bound
pop
sub
test
lods
out
dec
ficomps
nop
imulb
mov
sub
mov
aam
push
lret
pop
out
jne
dec
lcall
push
mov
cmp
js
push
inc
xchg
xchg
nop
adc
xchg
pop
ret
mov
jb
outsb
insb
int
dec
fs
push
or
pusha
leave
inc
push
aas
dec
lds
ss
xor
mov
adc
movsb
popf
lahf
push
pop
roll
inc
aam
adc
fwait
adc
cmp
jbe
cmc
lods
ficompl
scas
insb
jmp
pusha
aad
lret
push
pop
push
dec
dec
pop
in
inc
inc
inc
cmpsb
cmp
cmp
lds
insb
stos
jg
movsb
and
jl
jp
mov
data16
jp
jbe
leave
out
pop
xchg
push
test
fists
add
enter
fbld
outsb
cmpb
and
mov
push
out
movsl
pusha
xchg
lcall
pop
ss
enter
lret
push
sti
xchg
inc
and
mov
int3
jb
pop
pop
ret
push
lods
lahf
fcmovnbe
push
addb
mov
add
mov
sbb
jecxz
adc
push
ss
push
std
xchg
out
mov
lret
aam
test
xchg
pop
pusha
pop
pop
inc
pusha
push
push
push
loope
jbe
mov
std
ret
mov
cmp
scas
cli
es
test
repnz
bound
negl
mov
imul
scas
je
jo
cs
dec
dec
pop
imul
adc
mov
cmpsl
inc
dec
sub
inc
ds
cli
movsb
popf
xchg
lahf
cmpsl
xor
mov
cmpl
mov
addr16
fldcw
xor
bound
fistpl
or
mov
dec
dec
xor
scas
dec
mov
xor
cmp
negl
xchg
push
cld
ret
or
mov
jle
jnp
in
js
je
daa
icebp
out
mov
bound
or
aam
test
loop
int3
adc
xor
sub
mov
test
sbb
pop
cwtl
lahf
or
mov
dec
cmp
mov
daa
leave
jp
cmc
mov
in
sbb
cwtl
push
in
icebp
xor
dec
add
dec
lds
push
popa
jo
mov
inc
cmp
jecxz
dec
fcompl
scas
dec
mov
insb
lea
loopne
mov
repz
bound
in
pop
xchg
push
push
adc
std
addb
pop
out
xor
shl
pop
call
dec
fcompl
jl
data16
leave
xor
fisttpll
pop
aam
test
inc
pop
popf
fstps
push
rorl
dec
leave
push
dec
ret
dec
inc
inc
cmp
addr16
aas
xor
xor
and
fwait
push
lea
inc
or
fbstp
adc
rclb
les
push
push
jecxz
push
std
mov
lcall
cli
lods
aam
imul
rolb
nop
pop
dec
cltd
add
addl
insb
outsb
insb
push
js
jmp
setl
aaa
cwtl
dec
dec
dec
fwait
leave
xchg
dec
inc
add
lods
rcll
ljmp
add
fcoms
mov
test
mov
jo
not
sbb
fstp
fnstenv
sahf
xchg
leave
loope
jo
inc
inc
cld
xor
mov
stos
jge
test
test
xchg
xchg
xchg
nop
jp
fwait
adc
incl
dec
jno
jo
icebp
push
jecxz
or
mov
je
inc
lret
add
xor
mov
inc
movsb
mov
inc
rclb
stc
test
cmc
jmp
data16
or
push
pop
mov
movsb
flds
mov
push
cli
sub
repnz
cmpsl
push
pop
loope
lahf
jbe
or
add
orb
in
cmp
insb
fs
mov
fcmovnu
add
xchg
int
dec
mov
lret
xor
cmp
ss
pushf
inc
scas
imul
in
fwait
popf
push
sbb
clc
cmp
test
fdivp
or
jb
js
push
leave
popa
enter
xlat
cmp
shr
les
inc
outsl
std
lods
inc
pop
aaa
pop
xchg
pop
das
sbb
imul
sar
cwtl
xchg
xchg
cmp
cs
inc
inc
jle
mov
in
lea
push
leave
pop
pop
push
fs
les
push
mov
scas
mov
movsl
stc
call
scas
fwait
xor
in
jns
ja
test
adc
fucomp
out
sub
cli
enter
out
into
jns
movlps
push
adc
dec
mov
movups
jle,pt
arpl
xchg
xor
pop
fs
mov
cmp
adc
shrl
sub
int3
nop
and
dec
dec
es
ss
adc
xchg
jle
sbb
xor
rcl
iret
int
jp
and
inc
or
inc
in
ja
push
or
push
add
iret
repnz
lock
adc
pop
inc
sbb
std
ret
inc
pop
movsb
addb
subl
cmpsl
jne
xchg
cmpsb
mov
push
xchg
mov
and
int
int3
xor
outsb
lods
bound
and
jno
fbld
mov
jl
clc
scas
je
jo
movsb
xchg
push
mov
push
push
push
push
xchg
inc
mov
push
mov
shrb
dec
fcompl
nop
mov
ret
test
js
je
jo
movsb
push
shlw
add
or
inc
inc
ds
cmp
xor
xor
into
movsl
cmpsb
mov
mov
lea
mov
jp
jbe
jb
outsb
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xchg
xchg
nop
mov
cmpb
js
je
jo
insb
push
bound
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
ds
cmp
xor
xor
sub
test
movsb
mov
cwtl
xchg
xlat
jnp
xorb
xor
pop
bound
jbe
mov
les
dec
test
dec
mov
mov
dec
dec
mov
fwait
mov
fwait
mov
movsb
imul
jae
jae
arpl
mov
jbe
pusha
pop
lret
pop
push
mov
dec
dec
popf
pop
pop
pop
pop
push
fwait
mov
lods
test
mov
ds
cmp
jnp
lahf
mov
mov
fs
insb
fdivs
jno
test
rcrb
mov
bound
xchg
mov
lods
inc
test
mov
inc
inc
inc
andl
js
lea
.byte
.byte
sbb
