mov
xchg
in
xchg
cs
cld
outsl
xor
test
jg
dec
jp
stos
leave
lret
js
mov
bound
daa
cmp
mov
sbb
cmpb
sbb
repnz
stos
popa
out
and
sub
int3
push
mov
dec
pusha
icebp
xchg
pop
xor
pop
scas
push
arpl
sub
mov
mov
cmp
push
gs
dec
push
adc
xchg
mov
or
sub
dec
addr16
les
adc
stos
sahf
pop
xor
lods
cs
adc
cwtl
mov
pop
mov
iret
cld
xor
cmp
repz
or
fdivr
push
lods
fldt
push
jo
sbb
pop
cmpsl
mov
data16
in
out
rcrl
gs
rcrl
clc
testb
movsl
push
or
aaa
pop
cltd
sbb
mov
out
jmp
repz
in
scas
scas
lcall
mov
inc
or
sub
add
loopne
mov
psubq
out
jo
out
cmc
push
mov
cmp
or
mov
cltd
jg
jl
xlat
aad
cltd
xor
adc
cs
jbe
adc
mov
rcl
xor
inc
int3
std
push
cltd
pop
add
xchg
pop
inc
sub
pop
in
fildll
insl
mov
fwait
repnz
gs
mov
lods
lret
sbb
fbstp
inc
xchg
xchg
pop
jle
add
sti
xor
add
mov
sbb
test
mulb
shlb
inc
fcmovnbe
pushf
aas
and
imul
cli
mov
mov
cmpsb
mov
into
jecxz
addr16
sub
and
mov
aam
pushf
inc
dec
push
push
repnz
loope
add
push
cltd
pop
push
adcb
cmp
testl
pop
xchg
imul
adc
sub
in
jg
loope
dec
lock
inc
jl
jg
pusha
pop
mov
sub
mov
testl
cmpsb
in
add
insb
lcall
out
ret
mov
stc
mov
ret
repnz
aas
inc
rorb
push
pop
sbb
std
icebp
push
test
jnp
popf
fcom
mov
test
scas
test
and
inc
pushf
adc
or
idiv
push
cmp
pop
push
sbb
push
sub
lods
jne
test
mov
jmp
inc
test
int3
ret
push
jmp
insb
sti
mov
sbb
pusha
ss
jae
scas
jne
dec
or
mov
test
and
cmp
pop
gs
xchg
jl
dec
sahf
jmp
jle
jg
and
popf
jmp
mov
xchg
imul
orl
or
dec
int3
hlt
fdivr
sub
dec
std
rcll
nop
mov
add
mov
ds
stos
inc
ds
xchg
push
dec
ffreep
sti
adc
lahf
mov
push
sbb
stc
mov
mov
test
arpl
cltd
push
lods
push
into
push
pop
outsl
mov
pop
lods
jle
insb
ja
sahf
dec
shlb
jg
daa
cs
outsl
xlat
int
aas
mov
imul
subl
lds
cmp
mov
and
lods
rcrl
insw
loopne
fs
cmp
add
lods
in
sbb
ret
dec
cmpsl
ljmp
clc
in
inc
adc
std
adc
pop
ljmp
dec
inc
cmp
and
xor
cmp
cld
or
inc
mov
call
mov
int
push
aas
push
inc
mov
jecxz
mov
pop
xchg
out
sub
insl
inc
cmc
test
arpl
lahf
fsubr
sbb
loopne
adc
repnz
mov
enter
cmp
xor
out
arpl
lahf
cmp
adc
add
pop
fsubrs
seta
adc
add
adc
ljmp
mov
dec
jbe
stos
dec
fsubr
cmp
lret
imul
orl
movsb
nop
jnp
stos
sub
pop
mov
push
push
sti
nop
sti
mulb
mov
adc
adc
clc
cmp
sti
insl
sbb
adc
push
and
lods
fldl
arpl
dec
loope
pop
in
addl
test
out
lret
push
out
enter
lahf
pop
insl
and
es
adc
mov
pop
out
negb
or
dec
aad
loop
adc
add
repnz
mov
add
mov
out
sub
ds
cmc
mov
push
bound
add
xchg
dec
int3
jg
jp
stos
pop
icebp
out
lret
aam
jno
lahf
or
mov
lock
loope
mov
aaa
popa
iret
xor
xchg
jo
nop
xor
sbb
push
std
sti
in
mov
mov
or
arpl
loope
in
sub
ss
jns
adcl
sbb
repz
fdivs
subl
push
mov
cltd
xlat
ret
loope
add
and
xchg
xor
sbb
repnz
cmp
adc
aaa
negl
jl
lea
mov
in
lret
stc
xor
jle
mov
xor
sub
ss
fidivs
jbe
cs
std
dec
jo
fst
dec
pop
lea
or
xchg
stos
xor
ret
imul
pop
mov
xchg
cmc
pop
notb
and
sbb
popa
addr16
in
adc
xlat
xchg
mulb
sbb
gs
repz
dec
xchg
mov
push
pop
repnz
call
out
and
loope
xchg
dec
push
xchg
and
push
movsb
lret
aad
push
sbb
sub
or
mov
addl
dec
add
xlat
push
imul
loopne
jge
mov
sbb
push
inc
push
je
jne
mov
xor
ds
js
mull
mov
or
in
sahf
sbb
call
imul
ficomps
frstor
fdivp
dec
jmp
scas
pop
arpl
inc
inc
sbb
roll
pusha
and
and
jl
jae
and
or
lea
roll
mov
add
xor
in
xor
and
lahf
loop
dec
dec
fdivrp
stos
cmp
lret
fcomip
adcb
fildl
jecxz
jmp
sub
shl
mov
outsb
cmp
jge
sarl
push
or
mov
lods
sbb
pop
sub
sub
xlat
fiaddl
inc
outsb
gs
mov
outsl
sbb
xor
stc
mov
cwtl
jo
imul
push
test
aas
into
cltd
aaa
mov
lret
xor
cmp
stos
xchg
jge
adc
pop
lds
dec
push
push
addr16
dec
pop
rcrb
dec
cmp
fucomi
adc
or
pop
pushf
xchg
cwtl
hlt
cmp
cld
add
stos
mov
sub
mov
add
mov
clc
dec
out
fwait
sbb
pop
push
out
sbb
and
in
popa
test
fwait
dec
call
adc
pop
mov
pop
dec
mov
insl
lods
dec
sahf
in
aaa
sbb
fldcw
mov
push
push
outsl
push
cmpsl
iret
iret
jle
push
push
arpl
fisttps
dec
mov
fcoms
xchg
mov
insl
roll
lcall
test
mov
movsb
fxch
push
arpl
movsb
hlt
imul
cs
adc
fs
sbb
push
pop
test
mov
xchg
cmp
pop
sbb
mov
scas
dec
xchg
pop
int
lea
push
push
ficompl
push
lret
aaa
inc
lahf
pcmpeqb
jnp
shlb
mov
pop
jb
cltd
jp
rcll
mov
shll
mov
lret
out
jp
mov
jnp
mov
ret
push
test
insl
ret
cmp
or
dec
add
push
incb
sbb
jne
add
and
mov
pop
sub
or
mov
adc
arpl
fdivs
rclb
xor
test
stos
push
pop
inc
xor
stc
xor
sub
jge
shl
fistps
adc
icebp
mov
xor
lock
mov
fwait
inc
cwtl
mov
sub
lods
cmp
pop
jo
jo
dec
pop
or
xor
adc
ja
sbb
hlt
inc
test
mov
lret
into
je
fs
aas
jmp
pop
jl
push
mov
out
sub
jbe
test
les
push
inc
movsb
mov
lods
into
cmp
addr16
jns
inc
loope
inc
adc
lds
inc
scas
test
sbb
push
sub
pop
pop
cli
mov
mov
xorl
lods
lret
jge
call
dec
xor
inc
mov
aam
adc
jecxz
mov
sbb
and
scas
daa
inc
ds
gs
push
popa
loop
rcrb
pop
mov
lock
loop
es
stos
popa
cltd
stos
movsl
cmp
xor
push
inc
cli
js
jmp
push
mov
and
pop
cmpsl
mov
mov
pop
mov
and
jbe
and
mov
out
jecxz
in
inc
jo
movsl
mov
bound
mov
jbe
loopne
ret
or
lret
mov
int
jnp
aam
sbb
or
in
adc
jecxz
fldenv
sti
xchg
imul
in
add
cli
dec
in
call
arpl
mov
pop
adc
cli
in
fstpt
sbb
jg
push
loopne
out
sub
cmp
outsl
testl
icebp
lods
ret
mov
add
jecxz
mov
rclb
adc
jp
pushf
nop
xor
and
mov
jbe
pop
adc
scas
outsb
adc
icebp
mov
popf
adc
ss
dec
pop
addl
rcl
and
clc
cld
lds
pop
cmpl
pop
outsl
jno
popf
jo
ret
ret
push
jae
leave
inc
mov
xchg
ficoms
adc
aam
test
mov
pop
xchg
sub
cmp
loop
mov
mov
inc
push
pop
jo
idiv
push
out
int3
push
lahf
in
popa
jnp
xor
xor
sbb
int3
popf
pop
push
int3
repz
inc
inc
hlt
sahf
push
push
stos
cmp
bound
ret
push
mov
movsl
adc
xor
add
inc
mov
dec
test
into
fdecstp
cs
nop
xchg
pop
push
xstore-rng
cmpsl
xchg
and
lods
or
mov
addb
dec
decb
shll
faddl
pop
xlat
or
test
or
test
push
in
js
push
not
clc
or
iret
test
rcll
mov
sahf
lods
xchg
pop
int3
and
sbb
pop
vmovupd
and
dec
dec
sbb
jae
shlb
adc
jl
add
mov
clc
push
scas
xchg
mov
dec
cmp
rcr
test
lahf
mov
or
es
jns
test
xor
dec
and
dec
out
shlb
mov
and
repz
add
or
xor
pop
es
mov
loope
or
sbb
jb
and
sub
xchg
push
cmp
mov
movsb
dec
xchg
outsl
loope
data16
stos
repz
sub
mov
and
sub
les
out
pop
fcomip
jp
popf
mov
and
and
mov
cmp
pusha
mov
popa
lods
add
aam
pop
xor
and
xchg
insl
lret
icebp
in
xlat
mov
aad
pop
push
mov
sti
push
mov
dec
push
mov
lea
test
add
mov
add
or
out
fs
cmp
xchg
xchg
dec
rol
xor
xchg
lods
aad
fimull
dec
sti
adc
out
cmpsl
lahf
repnz
or
loopne
mov
push
push
sbb
xor
std
jnp
test
js
cltd
mov
sbb
sub
or
iret
test
adc
cmp
fdiv
adc
add
pop
mov
lea
pop
mov
sbbb
mov
repz
push
addl
stc
in
pop
and
aam
mov
jecxz
flds
jnp
lds
dec
jbe
fcoms
push
inc
stos
stos
push
mov
popf
enter
sbb
jb
pop
loop
dec
mov
sub
lods
out
lea
dec
adc
pop
imul
ds
test
dec
jge
mov
cmpsb
iret
sub
sbb
test
jl
mov
add
mov
jge
lds
jb
fs
mov
sub
pushf
popf
lret
xlat
orl
dec
xchg
ret
push
mov
mov
repnz
scas
xor
pop
call
clc
push
and
cmp
movsb
push
out
mov
add
push
sub
inc
in
cwtl
std
rep
icebp
icebp
xor
xchg
mov
pushf
ret
xor
xchg
adc
add
cmp
sbb
adc
ret
push
inc
cld
add
dec
int
cmp
or
pop
sbb
cmpsb
inc
cs
aaa
xchg
in
mov
js
sbb
mov
pop
sbb
cli
adc
nop
mov
push
fwait
ja
mov
fwait
or
out
add
fs
idiv
xchg
shll
dec
jmp
lods
push
mov
cmc
xchg
aaa
sub
dec
mov
or
add
popf
gs
dec
add
mov
push
push
sub
cmpsl
push
scas
push
pushf
mov
mov
gs
or
inc
dec
ss
insb
cmp
int
sbb
sbb
inc
sbb
jle
mov
pop
cmp
cmp
sbb
inc
test
and
lcall
fstp
push
xchg
sub
or
test
push
rol
scas
adc
jg
and
outsl
push
scas
add
cli
push
xor
xchg
xchg
enter
inc
xor
adc
sbb
mov
into
sbb
pop
push
cmp
inc
sub
adc
lods
mov
mov
sbb
int3
insl
xor
mov
in
and
inc
sub
xor
repz
jg
ret
push
fs
inc
test
dec
push
xchg
push
cwtl
iret
int
push
dec
xor
das
lock
jg
in
xchg
sub
pop
notb
or
inc
sbb
scas
adcl
test
mov
sbb
pop
lret
mov
cli
mov
inc
push
movsb
sbb
pop
inc
sbbb
push
pushf
in
cmp
xchg
and
sub
mov
add
cmp
mov
in
xchg
add
pop
loopne
stos
xchg
test
lods
adc
sti
out
outsl
in
add
pop
cs
sub
cmpl
insl
in
jle
mov
sub
call
dec
xor
inc
inc
out
shlb
jns
xor
inc
mov
adc
jae
add
cmp
xorl
xchg
push
lret
pop
sub
inc
sbb
xchg
dec
loopne
pop
test
sub
mov
sti
rolb
sub
xor
mov
popa
cmp
mov
fdivl
push
jne
aam
mov
adc
xchg
clc
inc
and
push
movsl
popf
sbb
cmp
lret
in
aam
sub
jnp
pop
adc
inc
filds
jmp
sti
lret
jns
push
fwait
mov
xchg
test
scas
test
mov
mov
lea
lods
cmpsb
xor
sub
les
jns
neg
pop
leave
sub
test
fldenv
jns
mov
xlat
sbb
arpl
jg
jne
lea
mov
jnp
out
shll
pusha
sub
shll
popa
fsubrl
cmp
inc
imul
fsubp
call
inc
jb
jge
mov
cmpsl
jbe
xor
cmp
add
cmp
mov
leave
rcr
les
xor
sub
xchg
ret
fldcw
incl
xchg
ret
mov
loop
adc
mov
jne
es
aam
mov
mov
add
lods
sub
pop
ret
call
jno
pop
shll
aas
lock
xchg
and
push
mov
cmpsl
mov
cmp
sub
xor
idivb
sbb
xor
iret
clc
inc
jno
sbb
in
je
adc
clc
cmc
jmp
lahf
cli
std
jle
movsb
stos
fwait
xor
sahf
in
fcoml
fs
aad
stos
outsb
inc
ss
jmp
push
or
xchg
rcrl
dec
add
mov
movsb
ficomps
dec
lahf
sbb
push
inc
fwait
dec
mov
dec
push
dec
ljmp
arpl
cli
mov
xlat
dec
loop
and
cmpsb
sbb
adc
and
cli
cmp
out
jl
sbb
ret
sti
pop
sub
jne
adc
loope
cmpsb
mov
xor
dec
cli
shrl
mov
pop
jge
scas
les
mov
loopne
daa
or
xchg
xor
push
add
ss
mov
push
push
dec
mov
mov
stos
mov
sub
addl
repnz
pop
xchg
ret
pusha
jmp
mull
cmc
or
mov
subb
sbb
push
sub
xor
hlt
cmpsb
push
outsb
add
int3
fstl
adc
imul
xchg
test
pop
xchg
cmpsb
xchg
jecxz
or
mov
es
pushf
xlat
into
lock
jg
push
adc
mov
xor
lods
sub
or
add
repnz
andl
jecxz
push
pop
adc
adc
scas
cmp
xchg
adc
dec
jne
adc
add
repnz
stc
and
aas
push
shrl
lods
mov
icebp
cmp
inc
mov
adc
dec
sbb
dec
aad
ror
mov
jo
push
inc
pop
ret
or
pop
dec
mov
mov
add
sbbb
cmpsl
aad
sub
cmp
mov
test
pop
push
pop
push
popf
cmp
cmpsl
xorl
adc
sub
adc
js
or
or
or
inc
or
jmp
push
fistpll
xchg
cmpsb
jbe
mov
icebp
pusha
xchg
push
iret
push
cmp
dec
cmp
mov
mov
mov
and
adc
notl
jbe
mov
aaa
adc
out
es
push
lock
mov
sub
jmp
in
cmpsl
into
xchg
xchg
aam
sub
xchg
fcmovnbe
repnz
scas
mov
pop
jmp
aad
mov
xchg
int
mov
mov
nop
xor
xor
gs
stc
jg
fs
call
fcmovnb
int3
cmpsb
jne
xor
xor
fistpl
mov
movsb
push
les
inc
lods
or
iret
inc
sub
scas
mov
negb
movsl
ror
mov
outsl
lret
nop
or
fst
mov
fstpl
cmp
inc
mov
das
inc
sbb
cltd
pop
jnp
stc
adc
and
inc
out
cmp
out
cs
fmulp
idivl
cltd
cli
outsb
sbb
and
lods
out
fwait
pop
push
inc
push
in
xchg
and
icebp
xchg
sbb
fsubrs
popf
not
movsb
xchg
dec
pop
xchg
mov
pop
push
inc
dec
lods
sbb
ret
mov
ret
enter
mov
movsl
xchg
mov
and
jge
mov
jmp
cltd
sub
mov
add
cs
xchg
xchg
mov
xor
icebp
add
or
and
sub
repz
mov
sub
or
push
lret
jl
js
cmp
rcll
lods
lret
pushf
cmp
jp
hlt
or
xchg
out
or
push
cmp
sbb
or
in
cmp
inc
push
jmp
xchg
loop
cmp
gs
insl
dec
negb
in
shrb
orl
mov
pusha
add
push
fld
jbe
ret
stos
out
cmp
add
pminsw
filds
pop
cmpsl
movsb
push
adc
jecxz
call
jae
lret
push
jmp
jmp
mov
adc
and
or
adc
scas
out
and
mov
jnp
mov
and
aas
aas
pop
adc
cmp
lods
out
xor
fcoml
pop
adc
mov
in
testb
jb
adc
js
pushf
call
movsb
scas
adc
push
dec
mov
mov
imul
push
nop
incb
out
std
mov
jb
lahf
jge
push
nop
fildll
and
push
mov
lcall
xorl
enter
dec
sbbl
fistpll
sub
fadd
jb
xchg
outsl
push
push
fdivl
mov
fwait
and
test
shrl
and
cmc
add
icebp
adc
pop
das
mov
push
sub
movsl
imul
cmp
sbb
cmp
stc
push
dec
sub
push
sub
enter
lret
jae
mov
push
xor
test
int
mov
arpl
mov
add
lahf
adc
ja
movsl
adc
xor
lock
mov
mov
popa
push
fisttpll
fs
adc
dec
add
lock
pop
dec
sbb
inc
lods
sbb
shl
adc
mov
add
xor
in
push
fnsave
inc
lods
test
lods
add
push
mov
in
dec
lahf
push
out
mov
add
dec
mov
add
ret
cltd
ret
inc
testl
sbb
leave
pop
sub
fdivrp
jbe
sbb
pop
pusha
adc
and
sbb
pop
lock
jmp
xchg
dec
out
xlat
add
and
push
arpl
lahf
inc
stos
pop
and
mov
inc
add
int
gs
pop
mov
ljmp
out
into
popa
dec
ljmp
mov
mov
hlt
mov
jl
idivb
inc
aas
and
test
mov
add
fisubl
mov
jg
imul
arpl
je
jecxz
add
pop
shll
loope
xor
inc
xor
push
out
popa
aaa
jb
mov
loop
mov
jp
daa
jb
xor
xchg
or
jp
xlat
cmpsl
sbb
in
loop
cmpsb
std
mov
pop
push
jo
popa
fmulp
mov
add
lret
jnp
xchg
lock
jne
jmp
pop
cmpsb
call
fsub
or
out
xlat
adc
inc
adc
xchg
cwtl
lret
faddl
push
push
in
xchg
jns
ret
jle
popf
cmp
fiaddl
jge,pn
sbb
and
hlt
lock
jecxz
ja
sbb
jmp
jmp
inc
push
adc
xchg
mov
int
pop
mov
jne,pt
rorb
lret
pusha
inc
mulb
test
imul
push
ljmp
cmp
push
adc
mov
mov
dec
aas
insb
or
sti
data16
xchg
mov
add
roll
scas
mov
xor
cmpsl
rolb
xor
push
and
mov
sbb
int
gs
gs
push
test
in
inc
test
cwtl
cli
dec
sbb
mov
push
into
loopne
out
popf
cmpb
ret
mov
shl
xchg
xchg
lea
bound
loop
insb
xchg
lret
adc
mov
dec
ds
add
outsl
xor
aam
cmp
push
sbb
idivb
fidivl
mov
mov
inc
addr16
push
sbb
mov
and
rolb
mulb
or
std
cmpl
fldcw
sbb
lock
dec
loopne
cwtl
push
decl
mov
repnz
pop
dec
mov
test
pusha
dec
lahf
pop
mov
aas
or
ljmp
movsb
in
mov
pop
mov
mov
xor
pop
jnp
sbb
call
cli
xor
pushf
outsl
add
std
in
adc
dec
seto
loope
mov
hlt
adc
cmp
jge
or
inc
div
es
mov
xchg
lret
mov
cli
inc
jno
mov
out
pop
cmp
repz
setge
add
sub
xchg
sbb
pop
mov
push
mov
mov
mov
aam
xorb
test
dec
and
xor
data16
dec
mov
lahf
cmp
push
xchg
fldt
jne
adc
cs
mov
mov
rol
movsb
pop
cmp
shl
inc
sbb
mov
lods
imul
jp
mov
xor
push
jg
fstp
movsb
fstpt
ret
jl
mov
leave
sub
lcall
outsl
adc
xor
mov
in
sub
pusha
pop
mull
or
aad
mov
ljmp
mov
add
inc
or
imul
insl
or
arpl
inc
nop
mov
ficoms
imul
sub
mov
dec
into
push
iret
js
push
xchg
fwait
mov
xchg
stc
cs
ficoms
ret
dec
sar
insl
test
or
mov
mov
cmp
add
jbe
add
mov
in
mov
and
jns
push
jne
insl
xchg
loop
jo
arpl
sbb
sub
in
movsb
out
dec
or
mov
ljmp
shll
xor
ret
loop
aad
add
loope
int
in
add
int3
stos
or
popa
xor
jno
xchg
add
cmp
lods
adc
test
popf
jge
sub
loop
add
xor
lret
mov
rolb
test
rcr
adc
cmpsl
inc
cmp
jo
ss
or
sbb
js
loopne
adc
or
push
adc
and
loope
cmp
sub
int3
ret
mov
sbb
shrb
sahf
rorb
cli
es
les
pop
xor
loope
mov
push
out
jnp
pop
lahf
mov
mov
dec
sti
lods
pop
push
inc
adc
jge
mov
pop
xchg
and
js
enter
add
mov
ja
ret
push
or
rcll
inc
mov
rcrb
xchg
jno
mov
movsb
lret
jg
and
test
mov
lahf
mov
popl
add
dec
add
daa
stc
gs
cmp
pushf
mov
imul
jae
incl
push
lock
mov
sub
jmp
out
out
mov
dec
bound
push
inc
xchg
jmp
hlt
inc
inc
xor
jg
mov
stos
insb
push
jecxz
mov
repnz
stos
movsb
push
leave
xlat
sub
pop
jge
push
xchg
inc
mov
sub
and
push
sbb
jae
pop
clc
call
mov
mov
insl
jbe
cwtl
sub
push
lock
pop
icebp
and
decb
mov
fcoms
add
jne
lock
into
nop
shrl
and
cmp
cmpsb
add
pop
jne
xor
dec
insl
hlt
xor
or
repnz
push
or
lea
fwait
pushl
ret
leave
inc
int
jmp
ror
popa
jno
shlb
xlat
sub
xchg
pop
test
adc
out
sbb
pop
cmp
jmp
add
insb
xor
dec
icebp
out
adc
push
bound
lods
dec
rcrb
add
sub
lcall
mov
push
pop
lret
scas
mov
inc
js
push
arpl
pop
out
sbb
xor
cmp
subl
mov
out
fnstsw
xchg
cld
pop
aas
mov
js
jo
xor
std
insw
imul
je
xchg
mov
inc
push
and
shll
pop
hlt
xor
rcrb
hlt
adc
xor
movsb
and
out
int3
mov
sbb
incl
mov
sub
loop
push
mov
mov
mov
jmp
test
push
cmp
or
out
jno
decl
pop
push
and
aas
fistps
movsl
jge
stc
imul
cmp
adc
rol
mov
and
cltd
and
pop
cmp
inc
jmp
mov
cltd
scas
inc
mov
lods
or
push
scas
insb
adc
les
mov
stos
xor
sub
dec
fildl
add
xor
fbstp
lods
aas
aad
rcl
iret
jecxz
jns
adc
xchg
xor
arpl
and
jnp
push
mov
add
or
repz
mov
jmp
adc
sbb
mov
loop
jecxz
and
out
cwtl
into
push
and
mov
andl
das
call
jecxz
lods
pusha
mov
fldenv
ds
lahf
ds
int3
stos
push
push
dec
push
mov
fsubs
sahf
lret
ss
push
adc
mov
scas
insl
mov
mov
gs
pop
mov
inc
int
adc
mov
insl
mov
and
mov
jl
enter
bound
and
std
jg
lahf
xchg
xchg
test
dec
mov
mov
or
jns
and
adc
cmp
mov
mov
jo
into
mov
cmp
cli
mov
or
dec
fiaddl
divb
leave
adc
addb
mov
out
es
sbb
loopne
adc
cmpsl
jg
jmp
adc
daa
in
test
xor
jbe
jne
fwait
lret
xor
test
add
daa
aaa
ficompl
adc
shr
pop
jbe
fdivs
popf
sbb
cwtl
dec
mov
lods
add
or
adc
dec
sub
lcall
in
xor
and
adc
xor
xchg
jnp
jae
jl
or
mov
clc
loopne
sbb
lock
sbb
lods
push
in
push
jl
sub
jno
sbb
sub
jp
scas
in
mov
into
cmpsl
sub
adc
adc
sbb
in
and
jp
jecxz
and
xor
xor
inc
mov
cmc
call
out
sbb
pop
nop
lcall
lock
mov
jns
test
xorl
mov
xchg
mov
adc
xor
aaa
fsubs
bound
or
jecxz
ss
jg
xchg
sbb
adc
sarl
stos
or
sub
jp
jmp
addr16
jne
jle
daa
xor
pop
stos
push
clc
rclb
fcoms
and
and
in
or
xorl
add
bound
pop
cli
in
push
outsb
pop
mov
lea
inc
loope
pop
nop
adc
jge
cld
enter
loopne
lcall
mov
mov
subl
shlb
rcl
xchg
test
addl
adc
stc
cmp
xor
cs
cmp
fstl
lds
cmp
push
ret
lock
pushfw
decl
mov
dec
inc
sub
push
in
mov
mov
jne
push
outsl
xor
les
loope
mov
sub
push
bound
cmc
adc
clc
mov
cmp
xor
jno
adc
xchg
pop
leave
fbstp
mov
aas
sbb
push
cli
mov
add
jae
cmpsl
mov
inc
div
insb
cmp
pop
sub
or
push
mov
out
dec
cmp
loopne
nop
ja
or
add
ljmp
jnp
sub
cmpsl
mov
pop
nop
adc
dec
mov
into
push
jno
jns
pop
les
ja
fsubrl
or
mov
int3
jns
adc
arpl
mov
sbb
icebp
sub
in
push
jmp
jne
xchg
push
leave
jmp
cmp
add
test
sbb
out
xchg
popa
lock
repnz
mov
mov
mov
sbb
fs
jge
dec
mov
ret
dec
fistps
jbe
gs
loopne
jecxz
mov
ret
stos
cmpsl
push
mov
xchg
mov
fcmovnu
repz
lret
and
or
lret
jle
sarb
push
xor
xchg
insb
popa
xchg
femms
fwait
lret
in
repz
mov
jecxz
mov
or
das
ss
cld
push
sub
sub
push
sub
std
stos
push
dec
ret
pop
cmpsl
cmpsl
stos
push
in
out
cltd
mov
mov
inc
cwtl
nop
ret
aaa
jle
dec
pop
sub
mov
mov
xor
pop
xchg
jecxz
jmp
pop
fwait
stos
dec
aad
clc
push
popf
mov
ja
ja
pop
ret
loope
fsts
fwait
ret
sbb
clc
adc
shlb
rol
cltd
jp
xor
add
mov
inc
int3
lods
leave
into
push
cld
ljmp
ljmp
orb
out
dec
das
mov
shrl
and
loop
sub
sub
scas
add
rcrl
aas
jno
and
sbb
das
shll
in
aaa
or
push
or
dec
movsb
subb
jmp
add
stos
push
pop
sbb
and
mov
ljmp
cmp
or
dec
jo
pop
dec
jl
adc
fimull
add
lock
jecxz
dec
mov
cwtl
or
mov
arpl
inc
or
sbb
out
movsb
lcall
push
call
or
decb
js
es
outsb
sbb
mov
shl
or
jg
jbe
lret
daa
push
inc
aad
loopne
add
adcl
mov
xor
xchg
mov
test
repz
bound
inc
pushf
sub
or
ret
cmp
inc
pop
mov
pop
movd
pop
stos
aas
in
mov
cli
lea
movsb
push
xchg
loopne,pn
xchg
stos
sarl
jp
div
jecxz
orb
addr16
xor
push
inc
adc
mov
cmc
push
lods
push
inc
enter
sub
lods
shlb
adc
scas
movsl
mov
fwait
xor
test
scas
jbe
sbb
lea
push
jmp
lods
lcall
lods
inc
andl
sbb
mov
inc
cmp
popa
outsl
ss
sub
pop
iret
mov
xchg
loopne
ss
mov
ret
lahf
scas
mov
adc
ret
sub
dec
sub
addr16
je
xor
pop
sarb
stos
inc
int
mov
das
lods
jge
xchg
xor
fildll
sub
push
jns
clc
add
arpl
aaa
jo
lods
insl
dec
stos
repz
cmp
loop
lea
fs
scas
xchg
mov
adc
aam
les
adc
xchg
in
dec
lods
jb
xchg
jo
sbb
xor
dec
loop
dec
mov
scas
push
sub
sub
repnz
cmpsb
and
push
push
das
fdivl
dec
xchg
insb
bound
xchg
ret
test
lds
jmp
lock
push
sub
and
pushf
jecxz
test
inc
mov
ror
sub
roll
and
into
shrl
shlb
xlat
stos
push
mov
sub
mov
dec
jle
pushfw
and
outsl
decl
and
xorb
mov
dec
std
jg
cmpsb
xchg
js
adc
mov
push
iret
movsl
mov
stc
insl
roll
call
inc
movsl
out
push
dec
call
inc
insl
outsl
xor
or
mov
lods
push
jns
adc
mov
out
cmpsb
or
rcll
push
and
mov
fldcw
sbb
shlb
or
dec
cltd
xchg
or
stc
push
jbe
pop
andb
imul
aas
and
xlat
sar
and
adc
mov
sti
dec
cmp
adc
xchg
dec
sbb
xor
add
and
das
notl
mov
mov
add
xchg
mov
addr16
cwtl
adc
sbb
in
int3
movsb
ljmp
inc
shlb
repnz
mov
idivb
sti
pop
jmp
xchg
mov
call
idivl
ret
imul
fs
popf
xchg
pop
mov
lods
into
xchg
add
xlat
aas
xchg
mov
cwtl
in
loope
inc
xor
pop
into
dec
jl
inc
xor
mov
or
rcl
outsb
int
adc
addl
insb
aas
mov
stos
mov
mov
jbe
add
sbb
movsl
mov
call
cmp
out
pop
add
shl
or
cli
sti
jmp
add
adc
out
mov
stos
jecxz
mov
jp
movsl
mov
jbe
push
fildl
push
mov
int
fxch
int3
test
lods
outsb
ja
in
push
adc
adc
add
xchg
ret
mov
pop
xor
pop
sbbl
test
mov
aam
or
xor
cmp
cli
test
jl
std
dec
pushf
lds
roll
xor
movb
push
sbb
sub
gs
addb
sahf
dec
repnz
xchg
or
cmpsl
out
es
mov
add
testb
daa
out
dec
addb
addr16
mov
jns
pop
inc
add
rcrb
mov
std
lcall
dec
pop
mov
pop
es
mov
enter
ret
inc
inc
mov
xor
pop
add
mov
push
cltd
jle
in
lea
addb
mov
inc
adc
lock
mov
jo
mov
mov
clc
pop
lock
loopne
jl
loope
iret
jl
adc
out
jecxz
inc
enter
cmpsl
into
mov
or
js
cld
lea
mov
shlb
dec
pop
xchg
push
mov
cs
fcmovbe
mov
cli
mov
xchg
nop
dec
not
insl
ds
mov
pusha
bswap
inc
cmp
loop
jno
int
inc
fildl
insl
out
jmp
dec
mov
test
push
add
mov
jns
lret
test
xchg
sbb
loope
setnp
xor
cmp
and
xchg
cld
add
pusha
cmp
test
movsl
and
mov
cmp
adc
push
xchg
int
sbb
jo
xchg
jae
scas
or
loop
cmpsb
pop
cltd
in
push
push
push
loope
xchg
push
mov
cmpsl
addb
imul
test
dec
mov
shlb
xchg
dec
push
pop
push
aad
shlb
add
sbb
cli
xchg
stos
repz
pop
sub
inc
ret
stc
lock
pusha
sbb
in
bound
lea
and
xor
inc
stos
inc
mov
jg
or
pop
popf
add
imul
and
and
repnz
fidivrl
fdiv
jae
bound
jp
mov
fdiv
icebp
test
hlt
adc
or
insb
cld
mov
jmp
jbe
ss
and
dec
dec
adc
or
pushf
jecxz
xor
pop
pop
in
shl
inc
sub
xor
pop
in
xlat
das
xor
cmp
jns
adc
cmc
adc
imul
cld
loopne
xor
pop
mov
sub
sbb
pop
push
mov
xor
push
insb
fimuls
and
or
sub
push
mov
xchg
in
push
adc
mov
movsl
xor
sub
jbe
push
imul
jno
clc
repnz
icebp
dec
int
loop
cmc
and
push
ret
add
dec
jg
push
cltd
inc
sarb
jns
xor
call
je
mov
loopne
xor
cmpsl
push
test
clc
icebp
cmp
into
bound
xor
ljmp
or
add
mov
xchg
fildl
push
dec
loop
pop
sbb
and
mov
outsb
dec
cmp
mov
push
mov
cs
rorb
jno
daa
jecxz
out
insl
dec
push
sbb
inc
adc
inc
cmpsl
inc
pop
ret
shrb
sub
popf
loope
jne
or
jno
ret
mov
cs
fdivs
mov
ret
mov
stc
aad
push
ljmp
mov
sub
in
jnp
mov
dec
cs
push
rcll
mov
lds
xor
push
jns
in
add
imul
mov
sub
movsl
sub
sub
push
aaa
adc
arpl
cld
sub
cld
dec
fldenv
sahf
nop
mov
jmp
fildll
mov
fcoms
sub
cmpsl
decl
mov
in
jecxz
leave
mov
xchg
loope
pusha
xor
sbb
fwait
je
roll
xchg
lds
jno
subl
jnp
cmp
leave
mov
mov
sub
in
into
data16
lds
push
lock
nop
add
inc
jnp
rcrb
mov
fiaddl
cmpsb
ja
pop
mov
push
dec
cwtl
leave
xchg
test
and
sbb
clc
mov
lock
inc
add
fadds
das
cmp
inc
xor
lea
int3
cmpb
stc
push
dec
sahf
test
jno
push
lds
sbb
daa
clc
sbb
dec
cmp
repz
adc
roll
stos
adc
mov
not
mov
pop
jecxz
mov
push
dec
xor
cmp
cmp
sbb
ljmp
lods
cld
adc
ja
mov
iret
and
dec
mov
addr16
sub
in
inc
mov
pop
cmc
mov
das
es
fs
xchg
mov
clc
push
movsl
loope
js
pushf
stos
shl
cltd
daa
xchg
sbb
xchg
fistpl
jge
jno
jno
call
cmp
sub
lock
xor
mov
and
jecxz
xor
leave
popa
dec
lret
add
sarl
dec
jecxz
call
int3
arpl
push
push
jo
cmp
adc
and
subl
mov
movsl
xchg
add
loope
ret
repz
cli
dec
or
imul
sub
sbb
lods
jbe
fdivrs
stc
pop
popf
pop
sub
ret
jmp
push
or
push
repnz
cmc
in
jno
enter
pop
xor
cmp
xchg
xor
dec
divl
inc
andl
mov
sub
inc
out
and
test
sbb
sbb
jne,pn
andb
fstpl
mov
test
pop
sbbb
notl
aaa
test
lods
data16
aad
scas
shll
inc
cmc
xlat
cmpsl
adc
fs
cmpl
inc
xor
cmp
cwtl
hlt
lea
adc
aaa
je
ret
pop
mov
sbb
adc
rcrl
push
mov
in
adc
push
arpl
xor
scas
ret
out
in
sbb
leave
test
jmp
push
push
xchg
fs
fsubs
jae
cmp
pop
cmp
mov
cmpsb
test
gs
xlat
mov
xchg
mov
jg
cmovns
cmc
inc
inc
lret
push
adc
push
xchg
insb
nop
outsb
cmpb
repz
add
mov
sub
scas
ljmp
out
sbb
xchg
in
out
enter
dec
sub
mov
cli
mov
and
dec
in
test
int
add
add
mov
aas
xchg
fstl
notl
xlat
mov
dec
add
gs
sub
push
lahf
mov
rcll
inc
add
xchg
jp
test
inc
sub
add
sbb
mov
inc
outsl
into
cltd
push
cmpsl
push
xorb
test
sub
jne
and
bound
inc
mov
sbb
movsb
jmp
popl
dec
pusha
sbb
xor
out
xor
adc
push
je
nop
std
sahf
lds
mov
lods
test
jg
dec
mov
mov
fbld
mov
fbld
rcrl
xchg
shlb
xchg
pmulhuw
xor
addr16
mov
nop
jmp
ds
or
das
outsb
roll
jb
inc
xlat
je
loope
lods
jmp
jecxz
mov
push
cld
outsl
mov
pop
mov
mov
inc
jo
mov
decb
xor
pop
mov
insb
push
std
stc
inc
dec
fidivrs
pop
leave
xchg
insb
push
jnp
std
sub
shl
lea
lahf
pop
push
hlt
fnstcw
push
iret
and
fistps
jae
push
jmp
mov
nop
push
jmp
or
mov
inc
arpl
mov
lret
fimuls
lock
iret
mov
xor
call
orl
test
loope
imul
int
pushf
sub
inc
ret
imul
mov
pop
jnp
ret
sbb
ret
xchg
enter
fcmove
cs
ret
cmp
and
mov
pop
mov
std
movsb
add
sub
pop
mov
repnz
shlb
jo
aas
out
or
jno
adc
adc
inc
pusha
adc
xor
fiadds
repz
stos
in
outsb
imul
cmc
lcall
xchg
jae
test
mov
jns
jmp
and
dec
sub
sahf
inc
sti
mov
into
cmp
pushl
gs
mov
divb
aas
mov
fdiv
inc
sbb
ror
pop
cmp
add
scas
jne
fscale
arpl
ds
jae
subl
js
rcll
dec
mov
add
jbe
rolb
shll
and
dec
hlt
inc
mov
clc
dec
jns
push
inc
jecxz
jae
fisubrl
out
mov
lods
mov
push
out
std
jmp
in
sbb
fsubs
loopne
jbe
inc
or
xor
sub
jp
jge
pop
add
cmpsb
sbb
xor
mov
inc
pop
cmp
push
mov
test
mov
adc
les
and
dec
push
jmp
sub
pop
cld
pop
es
addr16
jg
test
sarl
dec
cmpsl
loope
jnp
pop
rolb
or
out
lcall
lods
out
rolb
xchg
mov
test
dec
mov
adc
mov
cmp
inc
cmp
insl
je
jle
rep
jo
cltd
push
pop
sahf
mov
mov
sbb
lret
sbb
arpl
shlb
fdivrl
les
jl
negl
scas
lret
mov
lahf
sbb
xor
jmp
push
hlt
cmpsl
mov
in
and
sub
cmpl
jge
stc
test
nop
pop
push
loop
stos
out
pop
add
movsb
fwait
outsb
pop
jecxz
mov
test
loopne
cmpsl
mov
dec
inc
loope
xor
pop
inc
ljmp
test
dec
lea
in
repnz
and
movsl
pop
xchg
sahf
inc
cmpsb
es
xchg
lods
aas
cli
dec
out
inc
div
or
rorl
mov
out
ficomps
jns
cmc
sub
sub
clc
jmp
leave
movsl
faddl
notl
das
inc
lock
hlt
sub
mov
icebp
das
dec
pop
cmp
outsl
ljmp
mov
fdivr
or
roll
ret
jg
addl
rorl
and
push
or
jno
inc
loopne
xchg
sti
out
ret
mov
push
stos
sub
dec
outsl
sub
and
pop
outsl
js
xchg
lret
push
inc
jbe
call
xlat
adc
pop
inc
imul
dec
inc
cmp
mov
jp
repnz
jmp
ja
pop
in
add
adc
addr16
sbb
out
bound
push
out
mov
daa
push
fadd
test
dec
sbb
scas
jnp
jecxz
mov
xlat
mov
xchg
data16
fwait
push
jnp
ljmp
daa
add
or
ss
sbb
lods
loopne
test
pop
ja
cli
cmp
inc
sub
xchg
push
xorb
mov
imul
loope
test
sbb
xchg
push
jp
clc
xchg
cmpsb
lcall
sub
adc
movsb
lods
pushfw
cmpsb
mov
repnz
mov
sub
sar
in
inc
arpl
out
pop
scas
adc
xchg
cmp
adc
mov
and
mov
sub
xchg
jne
jb
dec
call
mov
loop
lret
xchg
inc
jnp
in
hlt
sbb
bound
mov
add
cmp
aad
or
cmpsl
jle
aad
jl
sub
out
mov
sub
push
pop
pop
jne
mov
rcr
fxch
imul
inc
iret
sbb
or
fists
pop
mov
xchg
xchg
cs
popa
add
clc
xchg
adc
mov
pop
es
mov
dec
or
rcll
cmp
push
gs
push
mov
sub
lods
sti
mov
xor
cmp
jae
inc
aaa
pop
mov
sub
movsl
rcll
push
ljmp
inc
jmp
inc
and
sbb
pushf
inc
xchg
add
fistpll
aas
pop
call
xchg
push
aam
cmp
mov
add
pop
or
mov
scas
xchg
xor
sub
and
jo
lock
je
scas
and
sbb
sbb
rep
jmp
stos
pop
inc
stos
mov
xchg
cmpl
xor
int3
adc
mov
repnz
or
fisubs
pop
push
xchg
sub
pusha
test
bound
inc
ja
mov
sub
mov
loop
ret
das
cmp
popa
mov
jle
pop
xor
sbb
inc
xorl
inc
jo
jg
arpl
jp,pn
push
cld
and
dec
cmp
add
jo
cmp
clc
mov
push
lret
aas
lahf
cmp
xchg
ds
sub
cmp
or
jae
in
inc
sahf
jb
jo
vpacksswb
fadds
pop
or
mov
pop
xchg
pop
mov
cmpsb
and
mov
cld
push
popf
add
stc
dec
gs
call
pop
jne
add
push
mov
pop
or
xlat
sub
fcmovu
test
and
pop
pminub
ret
sbb
into
rcll
bound
jl
mov
aad
cwtl
rcr
xlat
mov
sbb
pop
adc
or
xor
fdivrs
lahf
mov
xor
xor
fldcw
inc
cmp
sub
in
fadds
xor
out
dec
mov
push
dec
mov
cmp
inc
outsl
cwtl
adc
jle
outsl
loopne
int3
sbb
xor
jne
cs
cmp
jo
pusha
in
mov
mov
aas
xor
repnz
mov
inc
mov
loope
sbb
adc
hlt
inc
divb
push
pop
lds
sbb
fstl
ljmp
jg
in
push
jle
xlat
mov
push
popa
negb
jae
dec
into
ret
addl
movsl
xor
xchg
test
fmuls
mov
mov
mov
mov
pop
pop
shlb
xchg
bound
loope
insl
add
loop
jbe
add
mov
cmpsb
iret
daa
sub
cld
outsl
repz
inc
jns
and
fwait
je
mov
leavew
inc
in
lds
into
jge
or
shll
std
push
dec
pop
addr16
sub
and
inc
jnp
push
fmull
pushf
aad
lea
sahf
lock
cmpsl
or
rclb
outsb
mov
fbld
mov
jle
jl
arpl
push
testb
and
add
fidivs
mov
mov
jle
push
movsl
iret
pusha
aaa
push
in
mov
pop
test
mov
jle
sub
sub
loop
dec
sti
push
movsb
clc
mov
arpl
mov
and
data16
fidivrs
jg
inc
dec
dec
cli
clc
mov
mov
scas
pop
insb
scas
xchg
jmp
icebp
inc
sar
mov
out
stc
mov
lods
stos
jo
cmp
test
lea
mov
les
sar
into
ficoms
cmpsl
pushw
jns
arpl
cmpsl
aad
ror
lods
call
sti
sub
jno
stos
popa
or
or
roll
inc
movsl
pushf
mov
decl
push
gs
int
dec
stos
repz
xor
push
and
mov
add
mov
mov
jb
mov
add
mov
je
jge
bound
pop
lcall
cwtl
xor
add
mov
adc
mov
sbb
jb
mov
push
sub
jo
push
ja
call
xchg
pop
push
and
lahf
lcall
rcrl
push
pushf
mov
pop
mov
int
clc
cmpsb
mov
mov
add
rcrb
sti
ss
sub
or
cmpl
dec
nop
mov
mov
mov
xor
sbb
cld
testb
pop
std
add
out
insl
sbb
inc
stos
sub
xor
jbe
fisttps
push
mov
rcl
jmp
and
jb
mov
ja
gs
je
ja
cmp
xlat
jne
popf
cmp
mov
adcb
cmp
into
or
push
inc
or
imul
push
in
ljmp
push
cli
dec
dec
dec
push
sbb
push
cmpsb
xor
sbb
mov
mov
cmp
fdivl
cmp
aas
fildl
mov
jo
dec
icebp
pushf
adc
push
and
add
lret
es
add
ss
sub
or
inc
cmp
std
fdivs
push
inc
push
daa
sarl
mov
inc
jnp
cld
fdivs
enter
and
and
push
add
sub
mov
jp
mov
out
cmc
lea
rcll
cmp
push
mov
arpl
testb
dec
pop
xlat
das
pop
ret
sub
mov
jnp
aad
daa
pop
das
daa
xchg
arpl
lock
lock
shlb
imul
cmp
dec
jns
xchg
dec
or
mov
mov
fsub
xchg
scas
int3
movsb
mov
out
movsl
adcl
xor
stos
sarl
fstps
xlat
fcompl
mov
push
adc
cmp
fwait
dec
cmpb
pusha
push
outsl
cwtl
inc
icebp
push
aad
sub
xor
mov
xchg
movsb
sbbl
ret
xchg
imul
cmp
test
cmc
jecxz
xor
inc
xchg
xor
pop
adc
xor
popa
pop
mul
pop
mov
inc
and
mov
out
outsb
iret
imul
mov
and
pop
xchg
test
movsb
aas
sbb
rolb
sub
lea
inc
ss
aad
frstor
and
sbb
mov
pop
or
lea
mov
lea
mov
push
or
rcrb
je
mov
orb
scas
inc
pop
jmp
pop
xchg
push
dec
jl
cmp
leave
and
mov
call
xchg
andb
in
mov
mov
lods
adc
shll
mov
fnstenv
cmp
lock
inc
mov
fnsave
cmp
sub
mov
adc
dec
int3
and
stos
jo
mov
jno
aas
cltd
dec
xor
scas
add
jmp
adc
lds
mov
pop
mov
or
pop
outsl
adc
push
jnp
jne
nop
dec
lret
sbb
shrb
xor
jg
sbb
or
out
dec
out
je,pn
push
push
stos
jns
jecxz
rcrb
push
mov
rcrl
jge
mov
loope
mov
fstl
xchg
pushf
movsl
loopne
mov
add
insl
test
jne
add
fnstenv
mov
out
adc
mov
and
push
scas
or
adc
scas
xor
cmp
cmpsl
cwtl
cmp
dec
mov
arpl
xor
out
lahf
data16
fcmovbe
xchg
add
fldt
addb
jno
mov
fsub
push
pop
sbb
test
leave
mov
das
test
and
xor
in
pushl
inc
cltd
sahf
jns
outsb
push
xchg
xor
lods
push
xor
xchg
mov
sbb
jnp
push
pop
dec
je
shll
adc
or
mov
cmpsl
shlb
aam
call
adc
jno
scas
xor
mov
mov
fcomps
fistpll
mov
lea
stc
jl
push
jo
out
pop
loop
mov
xchg
sbb
jp
mov
ljmp
dec
or
shlb
xchg
fnstcw
push
xlat
popa
test
bound
or
xor
adc
pop
xor
lods
xor
in
fs
sub
icebp
mov
outsl
mov
jo
mov
out
push
addr16
fcoms
dec
loop
popf
addl
rcrb
mov
lods
xor
add
or
dec
pop
and
inc
xchg
ja
jmp
push
sub
enter
sti
in
dec
add
in
fadd
push
cmp
or
loopne
push
fwait
cmpsb
fsubs
and
add
jmp
call
mov
mov
lcall
rcr
int3
xor
and
dec
les
jbe
fsubrl
or
jo
sbb
inc
lds
xor
lcall
mov
divb
hlt
and
pop
data16
std
aad
ficoms
in
lcall
movzbl
and
sbb
dec
mov
dec
repnz
and
inc
mov
mov
cld
cld
aad
movq
xchg
jl
mov
mov
jbe
imul
movsb
iret
and
fxch
mov
jns
xchg
and
call
cmp
mov
mov
jb
cmp
add
push
mov
mov
ds
push
fisubrl
lcall
popf
je
jg
pop
clc
mov
int3
mov
idivb
push
sbb
or
adc
xchg
pop
dec
rol
cltd
mov
sbb
aam
clc
mov
xor
ret
jl
je
ja
add
enter
hlt
scas
adc
jl
stc
call
or
outsl
js
fcmovnbe
enter
cmp
je
mov
mov
outsb
push
adc
ljmp
pop
sarb
mov
dec
pusha
loopne
inc
lods
add
mov
enter
bound
outsl
movsb
add
out
fs
out
popa
pop
cmp
in
mov
sub
lret
sbb
movsb
mov
test
sar
pop
or
mov
jns
cmpsb
mov
sub
aam
mov
dec
sbb
push
fs
push
add
lcall
sub
push
pop
pop
adc
or
in
xchg
mov
hlt
xchg
rcll
iret
xlat
repz
imul
mov
mov
cmp
add
pop
sbb
iret
fcmovnbe
aaa
xchg
int3
loopne
imul
test
mov
jg
jb,pn
ljmp
pop
sub
cli
popf
inc
inc
insb
stos
pop
pop
sbb
pop
addb
stc
xchg
push
lock
mov
mov
or
sub
pop
cmp
pop
lret
xchg
mov
jb
inc
or
or
ss
xorb
scas
hlt
adcl
in
cmpsb
mov
enter
sub
mov
push
daa
addl
popa
mov
sbb
cld
lret
sbb
cs
ljmp
lahf
pop
fnsave
icebp
jb
and
xchg
pop
jne
push
push
repz
pop
lahf
pushw
shrb
in
out
leave
faddl
mov
mov
or
movsl
lock
mov
xor
pop
and
rol
pop
cmp
xorl
push
movsb
xchg
dec
push
cmp
stc
and
adc
pop
sahf
insb
jmp
sub
cld
xor
stos
cs
out
push
iret
mov
jb
mov
dec
xchg
cmp
pop
cmp
testb
test
shrb
sub
push
xor
filds
push
mov
jge
sub
xor
mov
lods
or
mov
mov
xor
dec
repz
test
jmp
pusha
sbbb
cltd
add
and
mov
cld
std
mov
psubw
icebp
jmp
pop
nop
xchg
data16
or
cmp
push
jmp
call
dec
xor
ret
scas
xor
fmul
push
dec
scas
insl
mov
lret
sub
jge
or
add
stos
test
cmpsl
cmp
incb
push
mov
popf
pop
scas
loop
mov
ss
cmpsl
or
out
xlat
pop
ret
js
mov
or
dec
xchg
mov
dec
mov
ret
aas
cld
hlt
in
incl
and
insb
stos
jne
outsl
pop
clc
cmc
jae
push
sub
ret
outsl
movsb
pop
dec
adc
sub
inc
cmpsb
cmp
in
push
insb
inc
lcall
arpl
sub
into
aas
mov
lds
cli
dec
dec
cmp
imul
cmp
xlat
dec
aad
outsl
cmpsl
pop
pop
call
cli
jae
adc
nop
dec
pop
test
clc
mov
inc
nop
xlat
sti
lea
cld
adc
xor
cmp
cld
mov
out
jecxz
lods
pop
pop
ret
mov
add
xchg
rcrb
mov
lods
std
stos
inc
fistpll
jle
or
dec
std
push
aad
in
aaa
lahf
sub
sub
xor
jp
mov
imul
or
xchg
fimuls
sub
push
mov
enter
rorl
push
ljmp
cld
jge
cltd
jl
mov
mov
dec
jmp
clc
sahf
div
loope,pn
fstps
lods
xchg
pop
cmc
loopne
inc
add
lds
inc
cmpsb
mov
sub
test
cmp
ds
push
pusha
sub
gs
ficomps
pop
sbb
js
jno
clc
lahf
lods
icebp
inc
or
aad
loope
sub
cld
outsl
ss
mov
push
pushf
dec
xor
ljmp
and
xchg
xlat
mov
xor
or
add
xor
fiadds
pop
dec
adc
and
jecxz
jnp
mov
shrl
hlt
mov
xchg
pop
add
jns
add
add
cmp
jl
outsb
sahf
xchg
je
lods
mov
or
pop
fimuls
hlt
sbb
insl
or
movsl
mov
jne
ss
xchg
add
fildl
pop
imul
sub
sbb
in
lods
adc
scas
pmulhw
in
inc
cmc
add
in
xor
dec
out
into
or
pop
mov
leave
repz
or
add
sub
fcom
mov
lahf
sbb
xchg
adc
insl
or
mov
loop
or
dec
mov
dec
dec
pop
pop
fs
hlt
push
insl
push
pushf
cmpsb
inc
jno
mov
mov
xor
pmuludq
nop
shrl
inc
mov
aaa
scas
pop
mov
push
and
imul
push
cmp
sbb
dec
test
dec
std
xchg
pop
adcl
roll
divl
mov
mov
mov
or
pop
jbe
push
pop
sti
int3
or
shlb
bound
jbe
insb
jae
insb
xchg
mov
sbb
pop
mov
scas
sub
jmp
enter
cwtl
sti
push
dec
in
iret
xor
cli
cmp
dec
dec
xor
pop
mov
sbb
data16
fdivrl
mov
aam
aad
dec
cltd
xchg
addl
pop
cmp
cld
xchg
sub
dec
shlb
inc
nop
mov
jns
push
and
add
push
sub
incl
aam
inc
mov
out
loope
pop
push
cmc
rorl
roll
int
xor
pop
push
inc
inc
adc
inc
stos
scas
mov
cwtl
add
movsl
pmuludq
js
mov
enter
rolb
or
imul
or
and
mov
mov
or
cmp
add
fadds
cld
pop
push
mov
mov
mov
imul
data16
cmc
lods
cmp
sti
stos
mov
jmp
or
push
stc
cmp
movsl
pushf
in
clc
aam
xor
out
mov
mov
ljmp
jae
add
pcmpgtb
push
je
nop
mov
jl
pop
cmp
jecxz
flds
or
inc
push
in
lods
mov
jmp
lahf
addr16
or
orl
shrl
xchg
filds
cmp
stos
ljmp
xor
sti
mov
dec
or
dec
incb
pop
imulw
imul
orl
xor
adc
xchg
inc
les
sbb
cwtl
cmp
push
je
fs
int3
mov
sbb
add
cmpb
push
inc
lock
sbb
lock
ret
fs
xor
icebp
pop
aaa
mov
in
dec
int
fisttpl
cmp
or
outsb
inc
xlat
lds
fidivs
fdivs
outsl
stos
ret
jbe
fsubrl
inc
out
mov
xlat
cmp
cmpsl
cmp
fistpll
inc
dec
inc
xor
gs
pop
adc
add
leave
pop
xor
sub
pop
test
cmp
cs
jmp
testb
jae
cltd
daa
loopne
cwtl
sbb
inc
jno
test
pop
sbb
push
xorb
pop
sub
pop
addr16
jmp
movsl
inc
push
cmp
stos
dec
adcb
gs
fdivr
sub
xchg
jae
and
cmp
test
push
jge
xchg
sub
push
mov
test
sub
xchg
push
loop
push
imul
sbb
stc
aas
xor
ficoml
das
xchg
mov
call
push
repnz
xor
or
inc
fsubp
jge
pop
push
nop
call
testl
mov
inc
jae
dec
stos
lret
in
mov
test
loop
cltd
pop
scas
inc
push
lock
sub
mov
mov
outsb
out
test
sub
sbb
cs
outsl
rcrb
insb
add
mov
int
ds
xchg
outsl
cs
cmc
xchg
cmp
xor
or
imul
or
jl
pop
out
sub
jp
adc
xchg
and
es
sbb
daa
xor
dec
cmp
cmp
hlt
and
adc
fstpl
push
jne
fucomip
rolb
dec
push
clc
fimuls
loopne
pop
push
in
xchg
inc
lds
and
jns
sub
cltd
sbb
xor
mov
mov
push
imul
mov
hlt
inc
sbb
jnp
push
dec
or
adc
aaa
sub
scas
adc
ja
adc
fistps
bound
loopne
cmp
aas
xor
mov
adc
leave
xchg
xor
pop
and
lcall
push
testb
jg
lds
mov
jbe
lock
int3
push
cmp
or
out
test
mov
mov
sbb
es
mov
mov
dec
popf
pop
pop
add
test
aaa
xchg
imul
ljmp
inc
call
loope
fs
adc
jg
jbe
adc
jl
ret
dec
push
bound
pop
dec
addr16
lcall
sar
mov
fistpl
add
xor
cmpsl
sub
dec
stc
ja
sbb
push
iret
or
out
adc
cli
jb
dec
repz
mov
mov
pusha
mov
rclb
xchg
lea
lcall
int
insb
insb
aad
es
mov
mov
xor
pop
add
aas
push
add
adc
push
push
nop
mov
addr16
push
sub
pusha
jnp
add
pop
lahf
nop
mov
push
jle
push
xor
std
cmp
xor
in
mov
pop
inc
out
imul
cmc
imul
pop
lock
cmp
scas
xchg
mov
sub
addl
xor
aad
inc
mov
stc
push
xchg
lods
cs
dec
inc
and
inc
mov
sbb
inc
enter
fadds
inc
push
cmpsl
js
pushf
lock
jae
clc
lret
xor
push
das
pop
pop
aas
xchg
push
adc
repz
js
and
clc
sti
pop
add
stos
icebp
inc
inc
adc
test
test
insb
cmpb
lcall
add
ljmp
cmpsl
mov
sti
inc
pop
into
push
imul
jnp
mov
jecxz
dec
cld
lea
fldl
xchg
aad
push
sbb
arpl
cmpsb
into
sbb
inc
mov
mov
and
in
or
and
popa
fs
xor
int3
fdivl
mov
mov
add
nop
out
and
add
lods
push
or
lea
fstpl
cli
js
fldt
shll
and
add
shld
pop
out
cmp
push
insl
inc
cmpb
pushf
loopne
cmp
fnstenv
push
out
test
add
jg
xor
jae
dec
popf
xor
mov
out
iret
dec
pop
in
pusha
fnsave
xchg
std
cwtl
les
pop
inc
mov
hlt
ljmp
int3
into
sbb
ss
gs
jbe
inc
fcomps
bound
inc
mov
add
aad
or
adc
xchg
add
ja
and
and
jg
jno
jns
cmp
aas
mov
insb
enter
mov
inc
sbb
fwait
jle
repz
mov
repz
cmp
jae
dec
ret
cmp
and
add
mov
ljmp
push
js
out
jbe
push
movsb
push
or
fisubs
imul
jmp
and
mov
fisubrs
faddl
mov
push
push
push
sub
inc
enter
cmp
lods
ljmp
pop
xor
scas
mov
lret
test
sbb
out
fisttps
and
adc
push
cmc
dec
mov
jb
int
repnz
xlat
mov
mov
enter
or
push
or
pop
sub
add
incl
xchg
push
cmp
xor
lcall
cmp
add
pop
lods
dec
lcall
fsave
test
jp
cmpsb
inc
cltd
cli
rorb
nop
add
in
cwtl
push
inc
pusha
pop
imulb
jbe
shrl
pushw
test
les
mov
dec
ret
xor
int3
xor
sbb
pop
es
xchg
dec
js
jp
lcall
pop
addb
lods
jp
push
sub
and
adc
mov
sete
jno
inc
push
loop
inc
xchg
inc
adc
or
sbb
ud1
test
jo
pushf
scas
xchg
call
dec
scas
xchg
jp
fs
out
icebp
and
xchg
dec
mov
and
and
out
fs
jecxz
sbb
jge
xchg
jns
out
and
addl
and
xchg
jno
jecxz
add
aam
lock
ret
bound
jg
outsl
xchg
xor
aas
and
or
xorb
decb
push
sub
fwait
and
pop
mov
pushf
pop
andb
sbb
cmp
push
cs
cmp
pop
fwait
cmp
fsubs
hlt
inc
out
popl
rorl
adc
dec
add
imulb
sbb
arpl
sbb
and
popa
into
loopne
jo
jo
rcll
faddl
pop
clc
xchg
bound
into
icebp
sbb
pop
sub
loope
lahf
inc
jnp
xchg
adc
movsb
mov
rclb
mov
sbb
leave
jns
mov
cmpsl
and
sub
sub
ror
ds
test
inc
aaa
cmp
dec
cmp
f2xm1
scas
sub
add
xor
into
add
std
pop
addr16
movsb
js
fmul
mov
orl
dec
mov
lret
push
lock
stos
jae
enter
faddl
scas
sub
stos
push
outsl
pop
sbb
jnp
je
add
cmpsb
aas
cld
mov
shl
jmp
cmp
filds
dec
mov
and
cmpl
jns
push
sbb
cld
insl
push
test
daa
mov
sbb
add
inc
aad
ret
pop
add
pop
pop
stc
mov
adc
in
adcl
mov
jnp
imul
icebp
jb
sub
out
mov
lock
addr16
sub
sub
pop
jno
dec
lods
stos
lret
push
dec
sbb
jle
add
ret
adcl
insl
vsubpd
jp
nop
pop
inc
inc
add
adc
mov
outsb
push
xor
fiaddl
popf
mov
in
sub
loope
add
adc
pop
in
push
mov
xchg
testb
xchg
adc
fstpl
lods
cld
sub
xor
cmp
push
or
int3
lock
xchg
pop
or
jnp
or
fcomps
dec
dec
pop
xor
outsb
pusha
in
push
xor
mov
int3
cmp
lods
xor
jp
int3
and
loopne
fs
pop
jmp
gs
xor
rorl
mov
bound
iret
repz
pop
movsl
rorl
mov
std
mov
pop
pop
int
popa
das
xchg
inc
mov
add
cmp
iret
or
in
out
sahf
outsb
test
or
adc
jmp
xor
or
pop
and
lret
mov
cld
mov
call
loopne
popa
addr16
add
push
mov
je
clc
mov
rorl
aas
mov
inc
push
xchg
out
imul
orl
xor
test
out
jae
nop
xor
shrl
sub
jge
outsl
mov
movsb
out
lcall
cmp
in
rolb
popf
pop
fcom
push
fsubr
sub
jl
ret
mov
jbe
mov
mov
sti
jns
jecxz
or
shrl
mov
std
jl
inc
pop
cmp
in
push
insl
lods
stc
out
xor
pop
ret
mov
mov
cmp
and
jae
mov
mov
and
roll
rcll
and
jmp
sbb
andl
jp
scas
fdivrs
push
ljmp
mov
out
push
pop
xchg
cmpb
jb
mov
xor
js
mov
aad
lods
pop
pop
mov
nop
stos
mov
addr16
mov
stos
sti
mov
fmul
es
arpl
mov
mov
xchg
bound
jns
push
jno
jmp
adc
and
jge
mov
lock
cwtl
fisubl
fstps
push
pushf
aad
inc
mov
jecxz
xchg
cmp
sub
cmc
nop
jl
push
push
aam
fisubrl
fcoml
add
add
into
inc
or
in
arpl
xor
jge
sahf
adc
xchg
outsl
insb
push
in
and
int
mov
out
push
popa
subl
push
or
mov
cmpsb
sub
in
jecxz
imul
loopne
pop
pushf
loope
mov
lods
loopne
mov
in
pop
ss
jo
push
ds
mov
push
in
sbb
adc
mov
jge
jnp
cmpb
jecxz
out
add
push
ljmp
bnd
popa
dec
addl
popf
icebp
test
hlt
sub
xlat
add
scas
sbb
cld
call
add
cmc
mov
popa
sbb
ret
adc
cmpsl
subb
or
mov
dec
cmp
shl
sub
adc
shrl
add
jne
mov
lds
dec
js
lock
sbb
sbb
inc
insl
xchg
es
pop
add
ret
mov
xor
lods
pop
imul
cwtl
xchg
ljmp
imul
pop
sbb
pop
ljmp
sub
add
in
pop
xor
subb
ret
mov
ds
xchg
outsb
adc
inc
mov
add
imul
das
subb
mov
pop
or
mov
push
inc
inc
int3
lock
divl
jbe
adc
rcrl
imul
xor
dec
inc
js
push
iret
adc
sar
ds
xchg
pop
cmp
dec
frstor
add
ljmp
push
xchg
xchg
xor
cmpsl
in
shlb
roll
push
ret
movsb
or
adc
bswap
xchg
lods
in
jle
xchg
test
xchg
mov
add
imul
cmp
sbb
jo
push
sbb
loope
mov
pop
push
mov
inc
ret
xor
stc
inc
mov
enter
xor
xor
call
dec
movsl
cltd
fnstcw
lret
outsb
add
mov
cmp
or
gs
push
int
sub
out
repnz
lds
out
and
negb
outsl
cmpsb
dec
jb
lods
jecxz
leave
cmp
mov
ss
mov
sub
sub
pusha
clc
std
js
fs
sub
jecxz
and
mov
fld
push
push
cmp
sbb
pop
bound
sbb
movsb
loope
lcall
fcompl
loop
inc
test
sub
aam
or
pop
fimull
sbb
dec
cmp
cmp
dec
xlat
cmp
aad
js
dec
sub
sub
push
jle
cli
xor
fisttps
add
pop
mov
outsl
repnz
xlat
stos
pusha
iret
xlat
leave
cmp
pop
repnz
iret
xchg
shrb
fistps
in
sbb
dec
mov
and
mov
mov
adc
push
out
lock
dec
pop
cmp
cmp
push
out
dec
xor
jp
add
mov
push
push
test
test
rorb
js
mov
imul
xchg
inc
cmovl
lcall
mov
sti
inc
mov
call
xor
aaa
movsb
jg
movsl
outsl
xchg
dec
je
xor
cmc
or
daa
jns
push
leave
adc
push
xor
imul
fists
sti
fs
xchg
cmc
lods
push
jmp
mov
mov
adc
mov
loop
jb
lds
jmp
fdivrl
jnp
fiaddl
and
mov
fsubl
jae
js
add
sub
jmp
xchg
adc
push
sub
push
ds
cs
rcr
lret
cmp
popf
push
nop
jle
sub
icebp
inc
pusha
fisubrs
mov
clc
jecxz
lods
ss
lcall
adcl
dec
push
jl
enter
or
aad
pop
push
pop
call
ror
mov
cmp
add
cli
cmp
sti
inc
inc
push
cmp
clc
das
loop
jg
pop
shlb
cmc
lret
jbe
bound
es
cmp
testl
pop
jno
and
aaa
iret
pop
jns
inc
mov
sub
mov
enter
cmp
dec
pop
cmpsl
pop
pop
ret
lods
and
clc
dec
add
test
add
scas
cmpsb
sbb
fisubs
adc
mov
sbb
shrl
push
pop
jmp
add
stc
dec
ficomps
push
mov
push
cmp
xchg
sub
ss
outsl
pop
jnp
in
xchg
in
mov
sbb
sub
bnd
fadd
sub
jmp
push
idivb
pushf
imul
insb
inc
pop
mov
jl
add
mov
cltd
js
js
gs
mov
push
mov
ret
shrl
xchg
fwait
mov
cs
cmpb
push
jmp
test
mov
jae
and
dec
sub
std
sub
pushf
lret
roll
js
xchg
dec
in
pop
les
xor
sbb
or
enter
ljmp
stc
xor
ret
sbbl
je
in
jg
mov
repnz
scas
xchg
divb
dec
je
sub
mov
lcall
aad
jg
loope
ret
xchg
je
icebp
daa
repz
add
cli
add
add
jnp
push
or
dec
movzwl
lods
pop
test
sbb
fimull
pop
push
mov
cmpsl
mov
inc
adc
mov
or
out
cli
sub
mov
adc
fs
pop
lahf
sbb
clc
mov
push
xor
mov
mov
cmpsl
inc
mov
aam
jb
and
mov
dec
mov
cmp
jno
lret
aaa
inc
add
and
lods
imul
hlt
jnp
inc
or
mov
es
out
add
pop
cli
not
cmpsb
hlt
xor
in
mov
scas
mov
add
popa
rcrl
mov
push
fiadds
xchg
cmpl
into
fldenv
adc
scas
dec
scas
out
arpl
push
add
sub
ja
popa
mov
dec
lea
jno
es
ret
cmp
inc
fld1
arpl
inc
mov
popa
jo
stos
mov
ret
pusha
push
inc
xchg
pop
mov
push
sbbb
inc
jp
add
push
pop
jle
loope
fwait
inc
in
out
subl
mov
jp
pop
cmp
mov
push
mov
addr16
or
mov
cli
sbb
mov
dec
out
add
adc
mov
call
ja
and
jl
jg
sbb
mov
jae
ret
in
lcall
sbb
out
push
pop
mov
movsl
xchg
pop
aaa
js
xchg
fcmovbe
mov
inc
andl
cmp
movsb
fwait
out
dec
faddl
inc
dec
int
jae
scas
jp
shll
xor
cmp
lret
inc
jmp
add
mov
push
bound
inc
fisubrs
adc
pushf
push
fstps
ret
iret
test
cmpsl
fs
cli
fistps
ds
sub
mov
test
adc
and
sbb
pop
push
subl
mov
cwtl
cmp
xchg
push
hlt
mov
cmp
test
popl
xchg
mov
xor
clc
es
lret
push
mov
push
and
out
lock
add
dec
shll
cltd
aaa
rcrb
ss
loope
cmp
pop
jg
fimuls
out
dec
add
leave
xor
sub
std
ljmp
fwait
pop
jp
loop
fisttps
cmp
or
dec
aaa
lods
add
adc
dec
fstps
mov
xor
dec
cmp
and
dec
shr
mov
pushf
xchg
dec
movsb
add
pop
out
push
xchg
mov
adc
bound
adc
pop
aad
xor
jp
push
push
sub
pusha
push
popa
mov
or
and
fsubl
push
xorb
add
iret
add
jg
and
sub
sahf
insb
je
out
mov
pop
dec
fidivs
ficomps
shlb
idivl
sbb
test
fwait
mov
mov
mov
add
or
out
mov
push
xchg
in
aad
iret
dec
idivb
mov
and
cmp
notl
cld
dec
adc
stos
sti
scas
out
xlat
pusha
jge
add
test
jnp
imul
rorb
push
sahf
dec
imul
jecxz
jbe
outsb
lret
and
or
add
inc
int3
jo
mov
mov
test
loopne
mov
loopne
imul
js
ja
xor
jg
push
jp
pusha
fwait
mov
adc
or
insb
fidivl
sbb
push
shrb
imul
xchg
sbb
cmp
ljmp
fadds
out
cs
and
out
push
bound
orl
in
push
pop
dec
adc
std
cltd
dec
mov
or
mov
mov
cmp
dec
out
shr
cltd
adcb
bound
xor
insb
xor
cmp
push
and
mov
ds
cli
inc
std
in
filds
ljmp
mov
pop
sub
in
les
mov
inc
and
gs
jmp
sarl
out
fwait
in
jg
inc
fsubp
js
pop
mov
loop
repnz
and
xchg
repz
rorl
mov
test
imul
cltd
jecxz
or
shrb
jne
fcmovu
add
fadds
and
dec
sbb
imulb
sarb
dec
imul
fsubrl
lcall
pop
sub
out
int
shr
int3
lahf
lret
rorb
jo,pt
inc
add
mov
pop
push
subl
enter
mov
push
jbe
jae
rorl
fs
hlt
mov
hlt
shlb
add
mov
frstor
pop
push
fxch
add
mov
sbb
xor
mov
cmp
jnp
dec
insl
fmull
insb
lcall
movsb
sar
std
les
sbb
test
movb
psrld
aaa
loopne
icebp
fnsave
insb
test
jb
loop
fcmovnu
cmp
cmp
jmp
xchg
imul
pusha
dec
ret
mov
xchg
sti
pusha
add
dec
stos
out
insl
shll
and
sbb
sub
xor
or
inc
xor
pop
mov
mov
dec
jp
leave
cmp
mov
out
daa
mov
iret
sbb
insl
mov
add
pop
outsb
ss
cmp
lods
cmpsl
mov
into
clc
repz
add
sbb
jnp
stos
add
nop
out
push
daa
data16
int
add
nop
addr16
mov
sti
add
adc
mov
inc
popa
jmp
xchg
adc
mov
inc
pop
mov
mov
or
ja
push
stos
jne
jmp
cli
pop
xchg
in
imul
sbb
scas
xchg
jno
mov
lods
shll
hlt
mov
sarl
push
adc
sarb
mov
xor
sub
les
pop
mov
pop
out
push
sbb
int3
mov
jb
pop
or
cmpsl
xchg
sub
inc
mov
cmpsb
jno
mov
out
xchg
xor
fisubl
std
jg
call
data16
in
pusha
in
jno
pop
sbb
cmc
mov
sub
aam
hlt
aas
cmpsb
xor
pop
push
pop
in
repz
pop
push
mov
xchg
loope
mov
sarl
mov
push
pushl
jns
push
mov
out
fimuls
mov
imul
fstps
dec
xchg
cmp
pop
pop
popf
pusha
jb
mov
movsl
push
xor
fisubl
ret
mov
dec
fadds
test
xchg
hlt
ss
call
movsb
hlt
xchg
cmp
dec
push
loopne
cltd
fists
mov
jge
in
adc
jb
inc
inc
sbb
dec
adcb
jae
dec
imul
enter
pop
out
dec
sub
imul
jge
fcoml
sahf
xchg
popf
dec
lahf
fistl
ss
sbb
adc
mov
jge
push
pop
rolb
outsb
jecxz
pop
in
outsb
push
xchg
shll
lcall
into
ret
outsl
adc
sarb
xorb
adc
fsubrp
pusha
sahf
stc
mov
or
mov
in
cltd
cwtl
push
push
hlt
stos
xor
sub
push
test
les
sub
rcl
mov
push
leave
stc
aaa
out
ljmp
imulb
and
xlat
pusha
jle
xor
lock
insl
jns
daa
inc
inc
push
call
sti
ja
jmp
cmpsl
jns
lods
jmp
sub
shll
jge
scas
test
fistpll
xchg
mov
ss
pushf
mov
js
mov
mov
lods
or
xor
pop
gs
rcrl
push
push
cwtl
iret
into
pop
push
out
and
in
and
dec
mov
cwtl
jnp
divb
incb
adc
popf
jnp
jae
mov
adc
add
mov
pop
or
aaa
inc
repnz
aam
adc
mov
scas
mov
pop
add
xchg
fst
cli
mov
dec
push
xchg
idiv
rcl
sub
or
pushf
aaa
cmpsl
in
lret
ljmp
sub
shlb
pop
les
loopne
loopne
pop
out
mov
fxch
addb
push
es
outsb
sbb
mov
cli
decl
popf
inc
sahf
adc
jl
cmpb
sti
or
xchg
out
xchg
dec
fadds
push
xor
jae
jnp
movsb
sub
xor
cli
add
adc
dec
pushf
dec
test
and
lods
insl
adcl
dec
insb
outsb
ret
xlat
inc
cwtl
jp
shlb
loope
or
lods
jbe
sti
ret
dec
daa
push
xor
xchg
in
push
push
cmc
stc
pushf
pop
fnstcw
popf
out
mov
std
jns
and
fidivrs
dec
xor
stos
int3
sub
movsb
out
or
out
sbb
lret
inc
sarl
inc
push
mov
mov
xor
inc
icebp
push
mov
js
jecxz
push
mov
mov
pop
add
xor
stos
mov
xchg
and
dec
add
push
jmp
je
mov
adc
push
imul
movsb
jmp
or
add
xchg
pop
xchg
cmp
xor
or
aas
push
sti
lret
mov
push
mov
fists
movsb
out
mov
cltd
cli
fsubrs
cs
push
cmc
xor
xor
in
adc
mov
cmp
call
sub
fidivl
sti
sbb
xlat
lret
jle
lods
mov
mov
call
cld
fisttpll
dec
nop
mov
xchg
inc
test
out
inc
jge
push
jg
scas
cli
rorb
lret
xchg
loopne
pop
mov
add
and
fmull
out
lods
adc
daa
add
dec
push
xor
fstp
ret
pop
adc
rorl
cmp
mov
cmp
fst
enter
xlat
scas
mov
jo
mov
in
call
xor
jns
and
int
cld
ss
in
adc
idivb
dec
pop
sub
push
lret
stc
lock
xchg
enter
pop
test
std
cwtl
lock
addl
jle
pop
cmp
mov
iret
or
sbb
lret
pop
pusha
outsl
mov
xchg
mov
add
fidivrl
jb
fmull
mov
lahf
mov
shr
outsb
enter
leave
cld
call
cld
data16
mov
scas
xchg
bound
in
pop
push
cmp
and
push
mov
icebp
ds
orb
shll
sub
imulb
test
cltd
or
jl
mov
xchg
loope
je
xchg
sub
in
lds
xchg
dec
xor
cmpsb
mov
dec
cmp
test
pop
pop
mov
inc
inc
push
fisttpl
sbb
and
push
mov
mov
stos
pop
adc
sub
xchg
aaa
in
xor
mov
jecxz
cmp
cmpsb
cmp
dec
fdivrs
pop
add
daa
pop
dec
push
and
ja,pt
jae
pop
mov
mov
pushf
cmp
clc
push
and
mov
xor
dec
das
sbb
sub
push
scas
lods
inc
dec
jb
or
push
inc
jle
inc
inc
inc
jp
sub
xor
fwait
push
jo
frstor
insl
out
js
pop
cmp
inc
xor
fxch
cli
mov
je
adc
jl
xor
jbe
nop
mov
scas
pop
inc
mov
daa
push
ljmp
mov
adc
cmpsb
std
mov
push
mov
dec
fildl
add
addr16
jmp
jp
jae
pop
scas
lahf
subb
out
in
sbb
in
movb
shl
pop
sbb
or
mov
xor
mov
outsb
mov
or
ljmp
imul
add
negl
xchg
pop
stos
mov
mov
adc
mov
dec
mov
cmp
xchg
lcall
outsl
add
pop
xchg
sar
mov
in
dec
cmp
dec
push
inc
inc
mov
push
cmp
mov
mov
dec
xchg
int3
jae
sub
lret
in
xor
mov
dec
mov
lock
push
jae
and
data16
mov
pop
mov
ret
ljmp
mov
jo
jae
push
xchg
shlb
push
mov
push
dec
xchg
cmp
aaa
imul
cld
ljmp
xchg
xor
or
ljmp
stos
orl
cli
pop
fisttpll
mov
stc
pushl
dec
stos
sub
ja
int3
ret
jo
jle
sbb
pop
mov
cs
sub
ret
stos
xchg
or
dec
jp
push
shl
fldl2t
cmp
movsl
or
loop
jae
bound
mov
outsl
xor
mov
sbb
ret
xor
lcall
out
aad
into
cmp
imul
cmp
push
pushf
add
subl
xchg
jae
sub
push
idivl
int
aad
xchg
sbb
call
xchg
mov
fwait
xchg
sub
out
pop
lcall
xchg
xor
dec
or
into
xor
sub
lcall
insb
mov
bound
inc
repnz
push
fsubl
sub
repz
or
jb
mov
xchg
js
or
jne
and
inc
inc
mov
fs
jg
dec
push
inc
pop
sub
or
arpl
inc
shlb
and
dec
mov
int3
adc
push
nop
aaa
xor
mov
dec
gs
leave
or
inc
jb
mov
cwtl
pop
movsb
jae
ja
xor
das
dec
inc
mov
dec
inc
push
mov
iret
negl
jbe
pop
dec
push
fs
mov
adc
jne
lahf
popf
imul
int3
cmc
rcrb
jns
pop
shrl
inc
mov
in
pop
fldl
std
pop
lcall
xchg
inc
xchg
and
mov
or
inc
jecxz
rcll
jns
ja
cmpsl
mov
sub
test
shr
jl
mov
dec
jl
pop
fwait
push
push
adc
pop
jmp
mov
call
xor
arpl
sub
jg
mov
mov
mov
dec
cmp
ss
orb
dec
lds
sub
mov
andb
sti
loopne
push
clc
imul
lock
jp
fdivrl
xchg
aas
cmp
cmp
cmp
mov
jmp
pop
or
xor
arpl
cmpsl
or
mov
loope
loopne
incl
xchg
fildll
dec
pop
aaa
stos
out
fimuls
movsb
xor
stos
and
pop
or
and
addb
xor
mov
inc
outsl
dec
mov
orl
outsb
stc
lcall
ja
sti
adc
sub
jp
lahf
mov
rclb
sbb
add
mov
push
int3
mov
jecxz
adc
mov
mov
jg
rol
or
sub
pop
xor
mov
lret
and
mov
mov
pop
negb
mov
mov
mov
mov
adc
dec
dec
inc
sub
inc
sar
jns
aam
pop
cs
pop
pop
rcrb
and
incl
mov
movsl
movsl
dec
mov
sub
jo
pop
xor
dec
adc
repz
dec
fsubrs
mov
pop
ds
jbe
jecxz
mov
leave
and
into
sbb
rorb
jae
push
cmpsb
mov
push
lret
psubw
out
jle
into
sub
in
insb
loope
jg
aaa
dec
jg
int3
xchg
int
push
aam
out
sbb
js
xor
cmp
add
stc
xchg
mov
push
popf
fisttps
cld
pop
pusha
jmp
pop
testl
push
inc
push
and
mov
lahf
jg
xor
mov
or
mov
add
and
imul
add
imul
inc
pop
inc
pop
in
mov
mov
jmp
xor
sbb
lret
xchg
mov
into
ds
iret
mov
divb
sub
mov
shll
pop
fsubs
inc
add
repnz
loopne
lret
scas
loope
sbb
inc
aam
and
sbb
adc
xchg
dec
push
mov
pop
or
jno
mov
loopne
sti
xchg
or
bound
cltd
bnd
xor
or
popa
mov
pushf
test
add
push
ja
jge
dec
lahf
pop
push
insl
enter
mov
mov
test
pop
adc
sbb
scas
pop
stos
jg
cmpb
pop
pop
add
jne
popa
dec
lock
add
decl
mov
adc
scas
leave
add
dec
dec
sbb
push
jb
mov
sub
les
test
outsb
subl
jge
cld
mov
jne
or
jne
or
sub
dec
push
mov
push
dec
cmc
shrb
push
scas
test
sub
jle
jle
ds
insb
dec
sub
jp
xchg
sbb
imul
clc
xor
fdivrl
xor
aam
das
push
cmp
sti
fbstp
pop
cmc
pop
mov
repnz
or
and
jmp
cmp
pop
sbb
pop
cmp
cmpb
xchg
xlat
ljmp
pop
lret
ds
test
jb
xor
pop
mov
incb
movsl
aaa
mov
xchg
shll
jp
jns
out
outsl
test
fistpll
cmp
mov
xchg
lea
out
lds
dec
test
inc
push
testb
and
cli
jbe
mov
mov
inc
std
imul
dec
mov
mov
and
cli
mov
ja
es
imul
ret
xchg
insl
xchg
lcall
les
out
hlt
sub
or
hlt
mov
xchg
or
mov
pop
out
cmp
pushw
mov
mov
popf
inc
int3
std
rorl
insb
loop
xchg
lods
stos
adc
xchg
js
xorl
loop
lea
outsl
movsl
jg
adc
xchg
inc
pop
int3
sub
push
cmp
sbb
loop
imul
int3
mov
sub
xor
outsl
mov
xor
inc
lock
mov
out
clc
lret
xchg
dec
pop
sbb
and
ret
xor
repz
dec
imul
dec
mov
bound
mov
cmp
sbb
lret
in
clc
pop
dec
inc
int3
and
xor
xor
sub
jg
bound
aaa
cli
repnz
push
lahf
pop
ja
pop
inc
or
outsb
into
pop
sbb
and
test
sbb
mov
shlb
cmpsb
push
cmpsl
or
mov
loopne
cmpsl
pop
and
push
ja
icebp
lods
in
sub
repz
aaa
xlat
adc
mov
icebp
pop
sub
stos
cmp
repnz
push
xchg
rol
jmp
stos
jo
mov
dec
xchg
iret
or
filds
xchg
int3
lods
insl
divb
shlw
fwait
cs
movsb
rcl
lret
imul
mov
push
add
and
pop
xor
push
add
push
imul
and
cmp
test
testl
pop
stos
repnz
cld
sbb
sub
insb
test
arpl
jbe
mov
lahf
adc
xchg
dec
jmp
mov
pop
ret
xchg
addr16
ffree
lcall
push
cmp
xchg
jnp
in
sbb
std
in
in
dec
psrld
xor
mov
or
loopne
bound
insl
mull
fcmove
loopne
mov
popf
les
dec
clc
fisttps
mov
sub
dec
out
in
les
test
xchg
jo
mov
leave
mov
shll
out
rcll
mov
jmp
jno
pop
fcoml
adc
mov
inc
test
add
mov
hlt
aad
inc
inc
or
inc
adc
sbb
pop
push
bnd
imul
cmp
cmp
pop
add
sahf
int3
cltd
hlt
pop
imul
mov
adc
test
test
in
mov
roll
and
pop
xchg
push
inc
movsl
sti
lds
dec
ret
push
movsl
jp
stos
inc
push
push
cs
jp
mov
jbe
shl
push
scas
and
pop
jmp
movsb
fisubl
xor
or
outsb
xor
cld
mul
xor
dec
mov
dec
addr16
int
aas
dec
scas
mov
fs
mov
sahf
jmp
mov
icebp
movsb
stos
cmp
push
insb
cmp
cmp
sub
mov
jbe
inc
movsl
push
add
xor
jmp
inc
leave
enter
fdivrl
outsl
mov
mov
loop
imul
pop
mull
ror
sbb
scas
cli
aaa
cmp
dec
mov
jg
movsl
push
xor
sahf
je
jne
sub
add
pusha
xor
sub
pop
and
pop
xchg
mov
pop
int
pop
pop
js
cmp
and
xor
adc
cmpsl
iret
jmp
int3
cmp
dec
sub
arpl
mov
xchg
xchg
mov
jnp
mov
jge
stos
test
test
ss
inc
pop
mov
adc
insb
xor
xchg
lods
sub
repz
scas
outsl
add
inc
mov
ret
xor
mov
pop
sub
insl
push
pushf
out
insl
in
jno
rep
xchg
bound
insl
adc
leave
loop
mov
sarl
loop
mov
sbb
xor
add
push
and
inc
out
xchg
loope
test
jne
ljmp
sbb
xchg
adc
inc
into
push
lds
and
mov
sub
and
xchg
outsl
mov
dec
mov
or
test
pop
cmc
add
enter
imul
and
push
in
cmp
mov
test
adc
fs
mov
adc
dec
cmp
ret
out
orl
pop
mov
outsl
repz
inc
xor
mov
sub
leave
mov
mov
test
test
mov
data16
popf
fisttps
test
mov
xchg
sub
inc
mov
adc
or
jmp
stos
pusha
rcrl
adcb
jp
sti
cmp
out
jnp
mov
jge
push
fsubrl
ja
jmp
loop
dec
pop
cmp
outsl
jns
pop
mov
fistl
in
addr16
mov
rep
dec
lcall
dec
das
lret
clc
adc
mov
out
int
mov
aad
push
subb
adc
inc
pop
ret
adc
leave
loop
dec
incl
out
dec
fsubrl
cs
push
sub
cli
loop
mov
fld
sub
repz
cmp
mov
xchg
mov
mov
xor
add
inc
sar
or
lret
ljmp
push
loope
sbb
mov
push
cli
mov
sub
jle
mov
out
and
jb
in
icebp
repnz
mov
adc
cltd
das
push
or
mov
add
adc
aam
subb
or
mov
ljmp
sub
ficompl
push
lret
nop
mov
push
mov
mov
cld
hlt
bound
cmp
out
ja
jo
fdiv
outsl
xor
ja
pop
lods
fmuls
test
sub
imul
bnd
cmp
or
sti
push
es
xor
dec
mov
jl
insl
pop
adc
cld
dec
nop
inc
dec
add
pop
test
cmp
lret
inc
nop
dec
out
push
xchg
inc
orl
mov
xor
jbe
mov
iret
out
aaa
mov
pop
push
xchg
dec
test
ret
ret
fisubs
or
jns
pushf
sub
aam
mov
fmuls
pop
aas
lods
adc
sti
jmp
sbb
ret
imul
mov
out
cmp
popa
sub
jae
fimull
test
lds
mov
insb
hlt
cld
scas
or
fsubrl
mov
pop
xchg
stos
pop
ficompl
jo
mov
pop
sar
jge
adc
sub
cli
cmp
stos
repnz
lods
adc
sub
and
fists
arpl
out
cwtl
mov
daa
hlt
mov
xlat
xchg
push
fidivl
or
pop
fwait
shll
icebp
mov
fwait
stos
ficompl
ret
xrelease
xor
pushf
into
xlat
xor
stos
sbb
xor
pop
jle
stc
jl
dec
ret
repnz
ljmp
lahf
popl
ret
mov
xor
jns
jbe
shll
ljmp
push
sti
aad
stos
out
icebp
inc
aaa
mov
mov
and
jmp
mov
hlt
lods
add
mov
mov
andb
cmova
push
ret
or
test
aaa
out
das
dec
mov
stos
movsb
pop
jae
or
bound
popa
sub
mov
in
sub
nop
add
sahf
insl
movsl
and
cmc
ljmp
int
jno
xchg
punpcklwd
loop
aaa
add
loopne
adc
mov
loope
inc
mov
stc
mov
push
inc
xchg
ret
inc
push
xchg
fucomi
mov
lods
mov
lods
dec
xchg
sti
adc
mov
jl
rclb
test
std
int3
mov
frstor
test
fwait
scas
fdivs
dec
dec
add
aaa
mov
fisttps
test
pop
hlt
jbe
loop
sub
mov
cmp
pop
cmp
jmp
addr16
ficoml
lods
lret
jl
jp
push
in
mov
ror
out
movsl
push
inc
cmp
push
and
push
pop
in
popa
xor
xor
pop
push
pop
dec
sub
in
icebp
push
imul
sub
out
sub
push
sti
lret
pop
pop
out
sahf
and
repnz
rolb
jmp
out
dec
xlat
hlt
ljmp
pop
and
or
xchg
arpl
ret
pop
in
push
push
ljmp
inc
cmpl
and
xchg
pushf
scas
repz
popa
pop
imul
xchg
inc
enter
arpl
sbb
add
inc
jbe
xchg
loope
or
lods
cmc
push
lock
adc
cmc
stos
mov
mov
sub
hlt
dec
iret
mov
dec
dec
and
sarl
jmp
call
mov
lods
cmp
stos
push
hlt
cmpsb
insb
jl
xlat
aas
xor
sbb
sahf
ljmp
mov
fdivrs
repnz
sub
mov
rolb
in
leave
popf
cmpsb
mov
sub
push
xchg
sub
dec
mov
loop
lock
jno
inc
daa
icebp
cmpsl
mul
and
sbb
sarb
xor
xchg
jnp
mov
movsl
orl
arpl
arpl
push
bound
jg
js
aam
dec
or
addl
mov
adc
inc
movsl
pushf
cmp
inc
sub
loopne
ljmp
cmpsb
pop
push
xchg
adc
pop
into
rcr
pusha
pop
xlat
movb
push
ljmp
js
xor
bound
inc
xchg
pop
pop
cmp
push
aam
mov
stos
mov
je
pop
shrb
pop
add
sub
jp
loop
shlb
push
xlat
out
cmp
cmpsb
iret
test
fistps
or
mov
mov
inc
or
cli
outsl
sbb
add
jmp
mov
je
mov
popa
sub
std
push
popa
aam
ljmp
fdivrs
enter
loope
cwtl
or
out
jns
mov
sbb
inc
pop
sub
inc
je
dec
movsb
lret
subb
mov
jp
xorl
lea
cmp
in
in
aad
or
xchg
cmp
cmpsl
dec
adc
sub
rclb
jp
jecxz
xor
and
js
push
xlat
sbb
add
and
adc
es
sbb
xchg
les
push
xchg
push
bnd
dec
scas
out
cltd
lds
mov
mov
repz
xor
cmpsl
jbe
push
lds
lock
pop
xor
rol
pop
pop
fisttps
xor
adc
push
mov
jle
rol
xor
mov
cli
fs
push
inc
sub
test
mov
outsb
pop
adc
pmaxub
fisubs
sub
fcoms
pop
mov
xchg
and
movsl
mov
dec
inc
sarb
aad
les
bound
xor
mov
xchg
and
mov
test
add
sub
mov
ret
or
mov
push
pop
lock
push
movsb
xchg
cmovg
in
test
jl
test
imul
rcll
mov
adc
fwait
test
xchg
clc
sbb
das
stos
add
daa
daa
xor
das
movsb
fcoml
dec
out
sahf
ret
fnsave
cs
inc
xchg
dec
jl
ds
push
inc
aam
and
rorl
or
fldcw
mov
pop
xchg
insl
in
cmpl
push
mov
popf
scas
pop
inc
jecxz
jb
xchg
cmc
hlt
gs
daa
stc
sub
lret
stos
add
cmc
mov
adc
test
fistpl
in
mov
jmp
jge
xchg
mov
jae
loopne
hlt
push
arpl
inc
and
xchg
cld
popf
mov
push
dec
inc
adc
xchg
popa
ja
out
rcl
or
push
enter
ljmp
or
jnp
jb
jnp
xor
jle
sahf
insl
and
test
lock
popa
adc
rcrb
mov
lock
mov
mov
ret
clc
cmpsl
push
out
mov
hlt
xchg
dec
cmp
lret
aam
lods
loop
ficoms
je
cltd
inc
jge
fcomps
shlb
xor
mov
rcrb
fisttps
xchg
pop
rcrb
sbb
in
or
subl
jecxz
in
repnz
fstl
into
test
mov
xor
lcall
unpcklps
pop
hlt
mov
call
pop
adc
in
daa
or
ja
and
loopne
jge
xchg
fdivr
dec
ds
in
pop
xchg
push
ret
cs
pop
jbe
pop
push
pop
iret
data16
xor
dec
test
push
pop
or
sti
jmp
hlt
lret
xchg
jle
pop
fsts
xchg
test
mov
mov
push
fwait
mov
test
mov
adc
pop
xchg
pop
jno
push
xor
inc
scas
dec
add
inc
jmp
fyl2x
loope
mov
lahf
nop
add
xchg
pop
cmpsl
jge
sub
jne
mov
xor
adc
fstps
xchg
mov
cmp
pop
sbb
rclb
jno
dec
pop
addr16
sbb
pop
movsb
xor
push
sbb
xchg
push
rorl
insl
mov
lea
cmpsb
ss
mov
std
pop
stc
pop
pop
fwait
push
dec
call
sbb
cmp
dec
sahf
pushf
faddl
in
dec
into
cmp
or
pop
cmpsb
jb
imul
mov
or
nop
int
pop
das
mov
jmp
mov
add
inc
and
shrb
sbb
or
scas
dec
xchg
inc
push
adc
es
push
lea
sub
add
jp
negl
stc
mov
sbb
mov
imul
dec
movb
dec
add
fisubrl
adc
or
sub
add
sahf
nop
lret
aas
sarl
aad
xor
stc
mov
jnp
cs
sbb
dec
xchg
scas
mov
push
daa
pop
add
nop
lcall
imul
xor
cli
adc
pusha
ud0
jo
dec
xchg
test
inc
insb
push
sbb
lods
push
mov
out
mov
inc
jmp
or
mov
test
pop
ror
fadds
dec
xorb
mov
loopne
ljmp
or
mov
shl
cmp
inc
cmp
add
pop
insl
loope
pop
pop
cmpsb
imul
jmp
das
in
xor
fdivrs
imul
jns
sar
xchg
imul
cmp
or
ret
lea
in
in
stos
aas
dec
xor
sahf
or
inc
leave
push
gs
pop
int
in
test
mov
lock
xlat
je
movsl
iret
adc
jecxz
test
aad
jg
inc
cmp
scas
mov
dec
lock
mov
stc
push
divb
sahf
and
out
stos
stc
imul
xlat
cmc
push
jge
mov
sahf
xlat
iret
cmp
push
pop
in
in
out
mov
add
inc
dec
outsl
and
iret
mov
enter
ret
pop
cmp
fcmovu
lock
push
inc
mov
into
mov
xchg
mov
insl
lahf
movsl
je
shlb
or
push
sub
pop
sub
mov
and
xchg
aaa
ljmp
inc
jp
cmpsl
mov
lea
clc
scas
push
mov
mov
mov
push
pop
mov
or
dec
sub
pop
into
lods
lods
popa
cli
movb
sub
jmp
enter
cmp
sbb
push
testb
test
sbb
or
sbb
dec
inc
push
femms
out
out
mov
xor
ret
out
cmc
repnz
in
or
mov
sbb
insl
fisubrl
xor
shll
sbb
push
loop
mov
xchg
or
fs
add
mov
push
mov
repnz
pop
fsubs
loopne
maxps
jp
ljmp
dec
scas
sub
mov
movsb
nop
insl
pop
mov
mov
jnp
xchg
mov
adc
mov
jno
cmp
sub
out
xorb
xchg
js
std
shr
movsl
popa
and
fucomip
mov
aas
push
out
out
pop
sbb
mov
jnp
jmp
inc
int
jnp
mov
popf
sahf
fcmovbe
jp
inc
dec
repz
add
cmp
push
scas
mov
jle
mov
mov
outsb
lds
push
jmp
fcompl
sti
add
sub
inc
out
or
sub
adc
jae
inc
fisubrl
dec
mov
in
orl
adcb
adc
mov
adc
xchg
cmpsl
and
fwait
xor
mov
ss
popa
push
orl
outsl
push
cmc
inc
adc
cmc
popa
insl
pop
sbb
pusha
loop
pop
mov
fldl
mov
in
adcl
sbb
stc
mov
and
mov
sbb
sub
sar
push
icebp
aam
testl
sub
flds
lret
fldl
mov
stc
dec
sub
outsl
push
xchg
stos
pop
sbb
push
mov
sub
sub
mov
je
movsl
aam
xchg
mov
sbb
out
jnp
hlt
jns
int3
addr16
dec
dec
pop
push
outsl
rorl
dec
insb
mov
mov
dec
iret
mov
sbbb
fwait
xor
pushf
inc
push
mov
mov
lret
iret
ja
outsl
jle
jns
ret
push
cmp
push
push
sub
mov
mov
cmp
inc
mov
mull
outsl
and
lcall
pop
out
cmp
ss
and
daa
fcmovbe
push
dec
sub
add
outsb
js
es
pop
dec
testl
sub
test
xchg
mov
ret
in
inc
jbe
xor
lret
or
fadd
faddl
jmp
out
cmc
mov
jp
fildll
pop
add
jle
sub
inc
mov
rorb
push
popf
mov
fsubrl
stos
push
sbb
shrl
sub
push
push
inc
jne
sub
pop
add
ss
in
loope
lret
sbb
fucomp
inc
dec
push
in
movsl
pop
mov
push
lock
and
in
mov
pop
call
xchg
je
jae
lds
pop
jp
inc
pop
in
xchg
aas
sbb
out
or
in
adc
pusha
aam
xor
mov
mov
into
loope
adc
mov
es
cmc
sbbl
xchg
leave
sbb
inc
int3
mov
iret
xchg
in
out
pop
cltd
lea
jb
push
jle
sub
cmp
addr16
stos
mov
daa
das
shrb
xor
fdivr
cmp
and
xlat
pop
popf
int
ffree
inc
pusha
xor
lcall
push
push
mov
repz
and
mov
cmc
or
mov
add
sub
xchg
outsb
push
aad
in
test
mov
rcll
add
cmp
mov
test
dec
insl
xchg
sub
fmulp
dec
and
lds
repnz
popf
push
aam
or
dec
shll
push
lea
cld
mov
iret
in
pushf
daa
inc
std
mov
inc
aaa
call
lock
loopne
sahf
les
xchg
shlb
stos
insb
inc
add
repnz
cmc
pushf
dec
jecxz
xchg
push
dec
ljmp
in
stos
xor
test
xor
in
lea
xchg
or
dec
in
sub
push
and
xchg
add
dec
add
inc
enter
xchg
pop
leave
pop
ja
fsubs
cmp
mov
pop
sub
jnp
jns
mov
inc
adc
popf
fdivs
cmc
adc
fsubrl
mov
addr16
loopne
xor
sbb
out
cmp
enter
mov
adc
fnstenv
loop
mov
mov
jmp
cmp
gs
pop
adc
scas
sub
leave
int
mov
mov
testb
sarb
mov
outsl
mov
inc
sub
push
sub
pop
push
mov
adc
sti
stc
push
outsl
mov
daa
fs
mov
mov
dec
push
pop
xor
pop
push
gs
jp
xchg
mov
jge
pushf
out
adc
sbb
cltd
mov
jns
ret
jno
dec
pushf
xchg
pop
sbb
lock
les
sub
cltd
push
fidivrs
pop
daa
ret
and
xor
sbb
sbb
les
ds
sbb
sub
add
xchg
into
push
or
sbb
push
cmc
fs
sub
test
lret
pop
sarl
ja
adc
fsubrl
sub
fldenv
pop
repz
jno
enter
das
adc
inc
fnstcw
sbb
xlat
dec
mov
bound
jecxz
lahf
xor
cs
inc
loop
aas
push
push
xorb
push
xchg
fldcw
fwait
popl
loop
ret
aas
out
daa
push
inc
int3
aam
cltd
sbb
push
sub
cld
adc
sahf
or
jg
cmp
addr16
mov
rcl
ja
lret
push
fiaddl
xchg
aas
jne
out
pop
into
jg
mov
cmpsb
dec
nop
data16
lods
lods
add
imul
jns
cli
sahf
pop
out
cld
clc
scas
pcmpgtb
cmpsb
rorl
fimuls
out
xor
and
push
add
repz
sbb
shll
mov
xor
divb
addl
js
test
cmp
add
int3
scas
data16
outsl
and
xchg
mov
pop
pop
stc
mov
subl
xchg
call
xchg
pop
ffree
dec
sub
jmp
dec
in
daa
xchg
push
mov
push
adc
movsl
mov
in
add
xchg
push
jg
loopne
xor
cmp
test
jo
les
sbb
mov
push
pop
pop
mov
outsb
fistl
in
inc
in
mov
sub
mov
xchg
mov
loopne
inc
inc
and
ljmp
inc
cli
rcrl
popf
adc
out
add
sbb
xor
sub
inc
xchg
daa
mov
cmp
cmpsl
enter
push
movsb
fisttpll
push
sub
dec
in
push
push
mov
cs
aaa
xchg
push
jno
xchg
loop
and
push
dec
and
add
clc
in
push
dec
lods
cwtl
inc
and
xchg
mov
mov
push
jnp
out
inc
stc
xlat
adcl
push
or
lods
mov
inc
push
scas
subb
pop
xor
jp
gs
xchg
mov
popa
out
adc
leave
movsb
test
cli
push
jae
jmp
call
pop
bound
lods
mov
pop
sub
pop
pop
xor
movsb
mov
data16
pop
mov
and
pop
in
pop
pushf
mov
adc
and
je
and
inc
scas
push
mov
xchg
push
mov
fsub
mov
test
pop
push
shlb
lock
stc
adcb
inc
pop
arpl
ret
mov
loopne
fs
nop
aas
mov
push
gs
sub
jne
pop
sub
push
out
dec
into
push
icebp
jb
xchg
popa
jp
xchg
aaa
jp
test
cld
stc
xor
lock
adc
adc
lea
pop
jg
push
rcll
xchg
or
clc
push
dec
dec
mov
shl
jecxz
hlt
aaa
xchg
cmpsb
pop
dec
aaa
push
adc
add
adc
pop
sbb
adc
mov
imul
pop
loop
add
iret
jmp
out
outsl
xchg
ja
pop
sarl
pusha
jns
jmp
mov
xor
div
push
enter
aaa
dec
cmp
adc
int
mov
inc
sar
inc
and
mov
or
sub
clc
and
lds
lahf
bound
sbb
out
push
das
andl
cld
pop
push
adc
orb
insl
jle
sbb
movsl
shll
sahf
out
mov
nop
push
sbb
xchg
test
and
jnp
jecxz
add
rcl
mov
push
jle
jo
ja
mov
pop
and
aas
add
mov
jecxz
adc
pop
addb
inc
inc
mov
add
data16
push
stc
sbb
and
mov
addr16
ficompl
inc
push
push
sbb
sub
push
repz
sbb
mov
rcr
pop
clc
ljmp
add
jge
std
mov
movsl
popa
test
or
jmp
adcb
lret
or
jp
imull
push
imul
push
sub
pop
push
mov
notl
cli
inc
and
insl
pusha
push
xchg
sbb
je
sub
addr16
jo
popa
xchg
sahf
cmpsl
mov
adc
cmp
mov
ficomps
in
frstor
pop
lahf
into
xlat
data16
xor
jnp
test
add
or
mov
mov
pushf
adc
xor
les
out
outsl
decl
mov
add
ret
rcrb
movsl
cmp
nop
adc
dec
push
test
cmpsb
les
pop
fdivl
lock
notl
xchg
jnp
js
sub
es
mov
mov
movl
pop
cmp
add
inc
rorl
int3
pop
xlat
xor
mov
inc
adc
cmc
and
stos
cltd
add
or
daa
sub
jle
push
jp
repnz
imul
shl
orb
lcall
xchg
lods
inc
xlat
adc
inc
pop
andl
inc
rcl
jp
mov
and
xchg
ljmp
insl
mov
out
xchg
mov
es
cli
dec
sub
mov
jmp
jnp
mov
pusha
adc
es
out
jp
leave
repz
push
sbb
rcr
mov
mov
xchg
mov
mov
bound
mov
aaa
pop
ljmp
fstps
mov
jmp
loopne
and
jb
scas
es
xlat
popa
mov
mov
add
adc
xor
jne
mov
adcb
xor
or
les
cmp
adc
pop
pop
stc
lea
cmp
mov
dec
lock
xchg
xchg
fnsave
sub
mov
sbb
dec
outsb
adc
jmp
outsl
xchg
aas
jae
test
adc
add
insl
mov
or
ljmp
mov
dec
inc
xor
jne
stc
xchg
xlat
nop
lret
mov
aad
and
cmp
sub
sub
mov
cltd
cmp
jmp
cs
pop
test
xchg
mov
pop
adc
inc
xlat
cmc
jno
adcb
push
jg
jno
mov
ljmp
pop
and
add
mov
and
lds
gs
xor
xchg
mov
mov
shll
dec
sub
mov
mov
inc
xchg
adc
outsl
cmp
lea
dec
mov
push
ds
dec
ss
jge
aam
and
jne
jmp
lahf
int
inc
cmp
dec
outsl
jbe
push
jle
rorb
hlt
cvttps2pi
fnstsw
and
aas
lods
loop
xchg
adc
cmpb
xchg
mov
mov
popf
inc
ret
cmpsb
jl
outsb
inc
enter
push
jno
stc
xlat
add
mov
cmp
and
das
inc
popf
push
pop
jecxz
sub
cmp
or
or
mov
xor
scas
cmc
xor
fsub
dec
push
jnp
punpckhbw
sub
enter
xor
faddl
insb
jecxz
fstl
sub
rolb
or
lds
scas
xchg
dec
xchg
push
popa
lcall
bound
xchg
sbb
lods
jecxz
xchg
dec
ret
pop
lea
jmp
jo
sub
mov
int3
add
popa
and
daa
jmp
cld
repz
mov
mov
jecxz
dec
mov
xchg
fdivrl
xor
test
jg
imul
add
bound
inc
subb
mov
mov
jecxz
mov
aad
repnz
outsl
adc
ret
mov
xor
adc
and
adc
lahf
adc
and
iret
leave
pop
fnstsw
jbe
dec
std
sub
cmpsl
aas
ret
push
xor
notl
sbb
jbe
pop
insl
fnstenv
mov
or
ret
fwait
mov
imul
icebp
add
sbb
xlat
test
rcr
jge
ds
pop
mov
push
mov
cmc
call
in
push
pushf
vpaddb
les
sbb
and
in
mov
fcompl
lods
nop
insl
add
add
ljmp
popa
or
sbb
jge
es
push
add
mov
xchg
and
cld
fiadds
ljmp
ljmp
sub
addr16
mov
push
stos
xchg
or
daa
mov
xor
cmp
sbb
shll
pop
jo
in
push
cwtl
push
mov
vmovdqu
push
rol
push
sbb
les
mov
ljmp
sbb
loope
mov
fdivl
xchg
adc
stos
cld
mov
mov
pop
mov
cs
les
cmp
mov
ret
and
out
outsb
or
mov
fwait
fwait
pop
movsb
and
sbb
cmc
mov
push
mov
mov
pushf
mov
jo
cmp
test
sbb
push
ret
daa
sbb
test
mov
daa
and
repnz
sub
cmp
pop
or
inc
mov
fstps
add
add
xchg
in
cmc
mov
rep
mov
in
and
jp
jg
insb
lds
pop
dec
idivl
repz
pop
inc
adc
scas
loopne
cmp
add
lret
jo
addr16
jne
call
cli
mov
nop
pop
lret
pushf
ret
push
jecxz
mov
dec
xchg
sahf
and
out
jmp
jp
adc
and
outsl
inc
sbb
jns
inc
nop
cmp
dec
adc
rclb
dec
jns
sub
mov
insb
pop
shll
pop
les
repnz
mov
rorb
cmp
xor
jmp
les
ljmp
js
inc
inc
jp
and
fsubr
sub
stos
leave
das
sub
sti
mov
jbe
mov
filds
cmc
jns
sub
data16
xchg
test
mov
xor
add
inc
outsb
sbb
sub
mov
ss
ss
cmp
int3
loop
aaa
movsb
sbb
xchg
shrb
enter
mov
insl
pop
inc
testl
aam
imul
aaa
or
andl
cwtl
test
push
sub
mov
rolb
pusha
subb
stos
daa
jl
mov
jno
das
loope
jle
sbb
mov
bound
lds
in
rorl
inc
shll
or
xor
pop
popa
push
jo
cmc
xchg
movsb
jns
cs
pop
sub
add
xor
dec
adc
or
ror
jb
test
enter
push
jbe
out
scas
or
push
hlt
cmp
inc
aas
scas
inc
stos
je
dec
cmpsl
mov
enter
repz
ds
cmpsb
insb
push
pop
fsts
inc
add
pop
sti
or
jle
xchg
loop
je
inc
or
cs
mov
push
xchg
mov
mov
lods
lds
imul
pop
cli
pop
sbb
adc
xchg
stos
xor
jns
mov
mov
jl
mov
sbb
xor
movsl
ljmp
lahf
xchg
or
xchg
pusha
mov
movsb
xchg
sub
inc
test
mov
inc
aas
inc
cmc
mov
fnstenv
sbb
sbb
imul
xor
jb
and
or
xor
outsb
xchg
inc
int3
xchg
loope
push
mov
adc
lock
ja
sbb
inc
jmp
stos
mov
mov
cltd
jmp
mov
xchg
pop
and
mov
xor
in
lods
lods
mov
jl
mov
add
hlt
jnp
add
scas
pop
xchg
ljmp
jne
dec
add
mov
mov
adc
push
or
mov
jmp
push
repz
aas
divl
mov
repz
inc
xchg
je
push
mov
inc
out
cmp
test
lods
jno
dec
push
xlat
cs
rol
shrb
xchg
scas
pop
xor
mov
push
adc
xlat
in
xchg
in
jns
leave
stos
cmpb
scas
cmp
ret
mov
mov
aam
roll
adc
bnd
leave
pushf
push
pop
inc
fcmove
daa
mov
jnp
lret
add
movsl
test
inc
stos
add
mov
and
cmp
aas
outsb
inc
aad
jp
xchg
mov
mov
imulb
fmulp
mov
dec
push
dec
fisubs
inc
mov
ds
sub
xchg
sar
xchg
enter
push
ror
shrl
ret
scas
cmpsb
daa
ja
fisttpl
nop
pop
nop
pop
pop
push
xor
loope
fst
pushw
into
cmpsb
mov
fstpt
cmp
push
inc
aad
inc
and
add
pop
jp
cld
add
stc
cwtl
sub
or
push
dec
les
jle
and
lahf
scas
test
fcomp
inc
xchg
roll
mov
testl
movsl
jmp
lcall
add
jg
mov
int3
cmpsl
mov
loope
pusha
lock
jg
out
enter
adcb
dec
cld
pop
ljmp
sub
test
mov
xchg
push
in
nop
pushl
out
test
aad
rcr
pop
cltd
mov
jg
jge
sbbb
xor
rol
test
jb
in
xchg
adc
mov
mov
into
testl
sub
sbb
mov
push
shl
mov
leave
mov
and
iret
and
in
imull
add
pusha
lods
fldl
stos
aam
xchg
repnz
imul
cld
xchg
jb
cmpsl
sub
push
inc
dec
loopne
pop
pop
pop
cmpsl
push
iret
xchg
xchg
inc
lcall
xor
stos
or
or
sbb
or
cmp
loope
stos
ret
jg
nop
xchg
xor
jge
pushf
pop
clc
sbb
dec
sbb
dec
mov
cld
adc
push
loope
lcall
jbe
cmc
rolb
movsl
or
loopne
mov
cltd
sub
or
and
jnp
push
and
mov
std
daa
dec
xchg
dec
fwait
test
lea
dec
ret
xor
stc
mov
pop
xor
lods
cmp
adc
mov
pop
call
rol
xchg
jnp
fsubl
pop
pop
jo
push
or
inc
cmp
test
cmc
test
sub
pop
flds
mov
mov
xor
out
xchg
xchg
mov
push
dec
jle
push
push
or
xor
lock
std
out
push
cmp
cmc
call
cmpb
cmpsl
inc
inc
xchg
loope
js
scas
scas
sti
jge
mov
outsb
adc
test
sub
inc
jae
add
ljmp
pop
pop
jecxz
std
sahf
adc
bound
popa
cltd
xchg
arpl
leave
dec
test
sbb
lahf
sahf
and
jo
xchg
repnz
inc
movsl
push
cli
lock
push
pusha
push
scas
ret
bound
pop
and
jo
cmc
cmp
fstl
stc
push
sti
sbb
insb
or
dec
cmpsl
inc
jbe
mov
adc
jnp
and
call
add
out
mov
jns
xor
pushf
rcr
jg
xchg
ret
adc
mov
xchg
inc
js
xor
mov
jl
mov
mov
adc
inc
aam
mov
cmp
int
imul
in
out
inc
mov
dec
inc
mov
xor
fisubrl
mov
mov
mov
jl
pop
daa
fildl
lock
lods
push
in
lock
jno
orl
inc
add
adc
clc
jo
sbb
mov
popl
xchg
fstl
leave
test
jg
lods
ret
aad
repnz
mov
pxor
daa
inc
jp
adc
mov
cli
stos
push
push
dec
hlt
adc
adc
pop
and
scas
push
stos
xor
imul
mov
and
mov
xchg
imul
stos
rolb
jmp
rcrl
ljmp
cli
adc
insl
lods
mov
xchg
clc
imul
mov
out
mov
idivl
shl
pop
push
mov
test
ret
jl
pushf
arpl
sub
dec
jo
ds
imul
pop
adc
ja
sbb
loope
inc
sub
mov
das
mov
sub
push
outsl
rol
mov
mov
sbb
mov
rsqrtps
and
cmp
cli
mov
inc
push
andl
movsb
mov
cmpsb
std
jnp
dec
or
and
andb
add
xor
lahf
cmp
insb
lcall
push
xor
in
int
fcompl
cmpsl
cwtl
pop
pop
les
mov
cmpsl
jg
sbb
ret
into
in
jge
xchg
lret
mov
outsl
pop
ljmp
aaa
aaa
pop
xor
mov
cli
sub
cmp
daa
and
enter
fidivl
and
sub
cli
push
pop
mov
push
int
pop
cmp
hlt
add
jmp
dec
stos
in
jp
cmp
in
arpl
push
sub
push
sarb
push
std
jmp
mov
in
test
cmpsl
das
call
arpl
cs
cmpsb
mov
rorb
ret
sbb
mov
and
inc
mov
outsb
mov
jns
test
and
repnz
push
pop
enter
imul
mov
xor
roll
addl
test
or
divl
sub
and
mov
pop
mov
push
cltd
pusha
jmp
jle
daa
ret
scas
cmp
cmpsl
jmp
dec
das
mov
mov
popa
lea
std
into
adc
jae
pop
inc
cmp
adc
test
xor
outsb
iret
cmp
lds
and
mov
dec
int3
negl
gs
rorl
sbbb
mov
and
bound
xchg
xor
or
jnp
int3
ljmp
and
pushf
inc
ficomps
xlat
mov
add
out
movsl
xor
xchg
ja
mov
sbb
sbb
icebp
sbb
imul
dec
and
iret
mov
iret
push
lds
jno
fsubs
filds
fdivrs
outsb
inc
nop
es
sub
fcmovnb
fwait
xchg
and
jae
cwtl
subl
das
or
fmul
test
mov
decl
pop
pop
insl
or
ja
mov
daa
xchg
loope
pop
scas
dec
mov
pop
shl
mov
rcr
std
xor
out
cmpsb
lock
and
mov
aam
lret
lret
pushf
jne
mov
pushl
and
enter
data16
insb
fwait
ja
cmpsb
aas
jae
lds
testb
out
hlt
dec
es
das
imul
lods
dec
into
inc
cmp
dec
es
mov
sbb
jne
inc
push
pop
and
cltd
pop
shlb
pop
es
push
jnp
lahf
rolb
xor
pusha
rorb
aad
lods
in
dec
pop
lods
enter
dec
cmp
push
or
xchg
data16
js
mov
sbb
push
addr16
mov
push
pushf
push
inc
movsl
adc
dec
aam
mov
and
stos
fnstenv
cmp
rcrl
rep
jae
fisubs
mov
cmp
jl
cld
add
jo
xchg
in
jge
repz
inc
fisubrl
sbb
jg
out
and
jno
imul
jo
aaa
stos
fcomps
into
jbe
jl
cwtl
aad
lret
xchg
mov
pop
or
xchg
lea
rol
fmuls
neg
pop
lret
and
ror
mov
aaa
xchg
call
movb
lahf
in
in
int
jmp
movsl
cmp
adc
add
or
fcoml
push
sbb
mov
lahf
pop
mov
and
sbb
pop
lock
aas
out
jge
enter
jnp
nop
mov
lds
sub
jmp
cmp
jo
cmpsl
pop
push
jns
mov
add
lock
mov
mov
dec
iret
xchg
sbb
add
imul
push
push
inc
jle
xor
mov
stos
inc
push
aaa
jecxz
jmp
and
testb
adc
sti
inc
add
js
call
aaa
push
mov
cmp
inc
nop
inc
data16
jae
mov
xlat
addr16
fcomp
cmp
aaa
dec
in
cltd
xchg
rolb
pop
xchg
aam
cwtl
mov
or
mov
mov
jae
lods
lret
pushf
push
xchg
jbe
xchg
cwtl
fwait
jnp
ret
mov
xchg
addr16
std
push
pop
mov
pop
pop
jge
decl
xchg
ficoml
mov
add
sbb
aam
es
dec
mov
xlat
adcb
int3
push
mov
pcmpeqb
push
in
das
sub
or
dec
iret
nop
subb
mov
lock
stos
in
cld
shll
nop
push
fdivs
cmp
dec
jmp
push
jmp
lea
das
cmpsl
and
mov
sbb
int
stos
cs
daa
adc
popa
into
shl
inc
loopne
fdivrs
dec
mov
nop
lahf
mov
pop
fcoml
sti
test
daa
divb
jp
xor
flds
push
sbb
test
push
fadds
loopne
inc
sbb
push
mov
push
xor
outsl
mov
pop
push
xchg
jne
pop
gs
mov
mov
mov
imul
ljmp
jo
push
dec
or
lea
push
xorl
and
xchg
xor
sub
mov
xchg
nop
xchg
sbb
loop
jp
cmp
cli
sbb
cltd
xor
call
fs
pop
or
sbb
loopne
inc
bound
sbb
cmp
xor
cli
xchg
push
scas
jg
fcoms
jae
pop
inc
cmp
cmp
arpl
loopne
inc
mov
lock
xor
data16
mov
cmp
daa
lcall
dec
adc
out
pop
add
inc
adc
cltd
outsb
testb
mov
lods
jge
call
mov
dec
js
lcall
mov
jno
inc
mov
adc
fs
mov
insb
aam
divl
mov
mov
mov
repnz
mov
sub
icebp
adc
cltd
push
and
dec
push
add
out
in
or
or
mov
xor
inc
fimuls
nop
push
inc
pop
mov
sbb
iret
push
adcl
ja
jb
and
add
sar
test
lods
dec
movsl
ljmp
popf
dec
xor
jmp
test
insb
pop
jbe
out
jo
pop
or
mov
gs
je
bound
aaa
pop
andb
scas
or
ret
push
int
or
or
add
jg
lret
lcall
dec
imul
inc
ret
inc
mov
das
out
and
insl
sub
adc
mov
xor
les
loop
imul
aaa
shl
pop
das
pmulhw
adc
lock
cmc
mov
in
cmc
and
dec
pop
int
sbb
fstps
xchg
push
inc
jo
jl
pusha
movsl
or
dec
outsb
mov
mov
and
or
inc
and
rorl
cwtl
inc
pop
jmp
mov
jo
ljmp
cli
movsb
jp
mov
repz
out
popf
lcall
xor
inc
push
call
push
mov
fxch
xchg
adc
ljmp
xchg
adc
pop
push
cmp
outsl
lods
cmp
dec
test
bound
cwtl
out
adc
inc
ljmp
in
xchg
in
fisubs
jp
or
jno
iret
outsb
cmp
push
sbb
js
dec
pop
push
adc
push
cmp
pop
add
push
sarl
mov
cmpsl
test
sub
loop
mov
pop
xor
pop
in
scas
leave
pop
inc
jno
repz
push
fwait
out
lods
xchg
xor
inc
fwait
dec
es
loopne
imul
cld
sahf
jg
add
cmp
lcall
mov
aam
pop
or
adcb
inc
test
repnz
inc
adc
dec
mov
mov
xor
movsl
xchg
sub
inc
or
adc
xchg
cmpsl
cltd
and
lahf
xor
mov
xor
loopne
in
sbbb
pushf
pushf
lret
adc
sti
cmp
xor
add
sbb
icebp
and
mov
and
shll
mov
addb
push
imul
or
dec
dec
adc
dec
hlt
repz
adc
cmc
popf
mov
fucomi
fwait
xor
cltd
stc
imul
ret
cli
push
sbbb
insb
dec
mov
les
mov
cld
pop
aam
out
xor
jge
dec
cmpsb
jge
or
iret
add
jo
lods
push
test
cltd
scas
sbb
into
sahf
cs
mov
loope
loopne
adc
push
std
loop
push
rcrb
jg
or
std
xchg
scas
xchg
enter
push
mov
popf
add
pop
pop
push
int
pop
fistpll
push
add
pop
mov
addr16
adc
inc
push
ss
xchg
adc
push
and
xor
mov
xchg
jns
cltd
shll
mov
aas
repz
inc
inc
and
bound
out
das
adc
inc
adc
sbb
push
sub
call
out
mov
popf
inc
pop
std
cld
int
icebp
push
add
and
add
jno
leave
mov
push
mov
cs
decl
add
xchg
bound
mov
fld
xchg
sbb
jbe
arpl
cmp
sub
mov
mulb
cmpsl
movsb
sub
ret
xor
inc
divl
subl
xor
sbb
cmp
xor
xchg
sbb
sub
je
arpl
imul
es
mov
xor
imul
daa
xor
shll
push
mov
incb
xor
mov
int
xchg
ss
pop
sbb
sub
mov
cmp
loope
popf
cmpsb
dec
mov
lcall
or
jle
jmp
cmpsb
hlt
and
in
inc
dec
aaa
cmpsl
fnstcw
and
and
or
xchg
daa
adc
sub
insb
add
addr16
jecxz
mov
adcb
xchg
mov
lods
orb
adcl
sub
jo
outsl
xchg
loop
test
mov
ljmp
in
cmp
push
movsb
clc
cmp
insb
jae
inc
out
adc
push
lods
adc
fisubl
add
sbb
loope
dec
push
fcoml
cmp
cmp
popf
push
je
jnp
ror
rolb
fisttpl
push
lcall
in
dec
jne
push
xchg
dec
into
mov
lods
leave
gs
mulb
lods
adc
mov
ja
std
and
mov
xchg
dec
lock
pop
cmp
mov
int3
aas
fisubrl
push
xchg
xor
mov
scas
daa
and
mov
jo
jns
mov
add
dec
adc
jnp
data16
inc
pusha
lods
jno
dec
hlt
mov
mov
les
fidivrs
pop
pop
pop
inc
cmp
or
mov
dec
test
sbb
and
out
jg
loop
rorb
mov
pop
je
pop
mov
and
aaa
lret
out
add
aam
dec
push
pop
fwait
imul
push
lcall
jmp
dec
sbb
das
ds
aas
dec
sub
fists
and
cld
pop
sub
adc
sbb
arpl
jno
sub
loopne
sahf
sbb
call
mov
imul
mov
lret
sbb
jns
out
cmp
xchg
fmuls
test
lock
mov
push
outsb
pushf
mov
mov
sahf
xorl
scas
into
dec
fiaddl
pop
test
mov
lods
xchg
mov
xchg
insl
adc
js
mov
or
add
cmp
test
sarb
dec
outsw
mov
sbb
insl
jmp
cli
push
sbb
xor
cmp
add
pop
push
fwait
mov
mov
in
add
fadds
mov
pusha
sarb
inc
fidivs
adc
and
cmc
pop
dec
inc
sbb
orb
mov
rolb
and
cmc
into
aad
fistpll
adc
inc
xchg
aad
les
mov
jne
addb
mov
mov
sbb
mov
sbb
clc
in
mov
in
cmp
pushf
sahf
cltd
stos
lods
test
mov
sub
lea
in
push
in
inc
push
into
xlat
pop
mov
pop
sbb
leave
jne
jb
enter
sbb
lods
lock
push
and
cmp
ja
shlb
cmp
cmpb
and
imul
lret
iret
pop
pop
adc
fwait
aaa
je
sbb
lret
fs
mov
mov
data16
xor
loop
or
jmp
jle
and
insl
gs
aad
fdivs
das
inc
mov
xchg
ja
nop
mov
pusha
xchg
jge
ja
sub
add
out
xchg
cmp
jmp
push
cld
cmp
sti
or
jp
mov
repnz
add
adc
int
and
pop
loop
test
daa
pop
outsl
mov
or
fadd
scas
icebp
loope
and
in
push
push
adc
mov
sbb
sbb
outsb
push
hlt
lcall
loopne
inc
mov
adc
lret
mov
push
mov
mov
inc
push
arpl
loope
and
pop
faddl
jp
fidivl
adc
xor
xchg
pop
sbb
sub
inc
ret
push
adc
mov
aaa
xchg
arpl
dec
test
cmp
sub
arpl
and
pushf
movsb
and
scas
mov
xorb
popa
gs
cmp
mov
dec
leave
adcb
ss
xchg
mov
cltd
lahf
sub
push
repnz
gs
test
xor
out
movsb
or
adc
add
pop
push
or
cs
mov
push
test
ljmp
movsl
xor
arpl
add
push
pop
std
test
sbb
cmpsl
push
jno
int3
push
insb
lds
or
mov
and
loop
loope
push
mov
aad
cmp
movsb
mov
aad
sti
in
pop
lea
xchg
fbstp
gs
and
fiadds
in
gs
xchg
pop
jg
call
xchg
dec
jb
mov
cmp
mov
xor
or
pop
pop
add
pop
push
daa
inc
cmp
ljmp
pop
xchg
xor
stos
push
add
mov
loopne
dec
jge
push
pop
mov
movsb
andl
jbe
push
pop
or
pop
jb
inc
fadds
xor
mov
mov
sar
dec
mov
cmpsb
repnz
xor
popf
sub
push
les
mov
int
jns
das
mov
jno
sub
and
leave
ficompl
jno
dec
sub
js
inc
cwtl
pushl
movsb
lds
enter
xlat
sub
leave
mov
xchg
push
pop
jmp
sub
jl
pop
lret
adc
fnstcw
jno
mov
adc
iret
popa
mov
and
push
insl
jae
nop
push
xor
out
or
ds
aaa
iret
mov
sbb
add
cs
iret
mov
xor
xor
fucomip
add
mov
cmp
xchg
inc
jp
adc
nop
fdivrp
dec
jo
mov
in
or
pusha
mov
and
sbb
fs
jb
mov
xchg
icebp
dec
ret
test
mov
xchg
mov
out
sub
fwait
mov
mov
xor
lahf
das
add
jge
test
std
sub
scas
sbb
mov
mov
pusha
loope
movsl
inc
fstps
push
xchg
lgs
and
mov
fdivl
jmp
cmp
or
pop
pop
popa
mov
sti
mov
stos
mov
imul
cli
xchg
rcrb
lret
sbb
xor
aaa
xchg
dec
cmpsb
enter
mov
xchg
jp
xor
mov
fstpt
scas
insb
push
inc
nop
add
add
cmp
jge
mov
mov
leave
mov
lcall
adc
mov
daa
pop
ds
mov
movl
sbb
aam
scas
pop
pop
mov
pop
mov
loopnew
cmp
daa
cmp
inc
cli
test
jns
pop
inc
inc
push
xchg
int
ljmp
repnz
cmpb
in
popa
inc
test
add
or
or
mov
sti
and
out
mov
sbbl
stc
or
mov
cwtl
aas
out
xchg
xor
popf
adc
sahf
or
lds
hlt
leave
fcompl
or
shll
mov
mov
push
imul
xor
cmpsb
xchg
push
mov
xor
jns
adc
push
js
popf
std
imul
cmpsl
cmp
and
cmp
jp
ja
sub
arpl
dec
cs
sbb
ss
scas
aam
sbb
mov
jae
popf
out
ljmp
and
add
sbb
movsl
pop
pusha
mov
scas
push
inc
pushf
fsts
stos
sub
mov
sub
lahf
xchg
xor
fists
sahf
icebp
mov
cld
mov
jb
loopne
dec
mov
dec
inc
cmp
or
sbb
cmp
adc
cmpsl
cli
mov
or
mov
xchg
cwtl
inc
imul
push
nop
fbstp
jae
repz
addr16
or
xor
inc
add
mov
lods
xchg
and
inc
pop
or
lods
loopne
jmp
jnp
aas
jmp
xchg
push
outsb
sub
daa
es
les
xchg
pop
and
lods
xchg
dec
dec
jle
icebp
aam
insb
xchg
add
push
data16
xchg
ret
cltd
lock
lods
idivb
ds
jae
jbe
pop
xchg
push
dec
out
mov
pop
mov
xor
push
mov
fists
sbb
cli
pop
push
jp
and
mov
fs
sti
outsl
repnz
icebp
jb
rcrl
cwtl
loop
sbb
cmp
lret
sbb
clc
cmp
xchg
xor
testl
lahf
or
fdivs
push
sbb
hlt
jmp
push
cmpsb
ss
ds
rorl
rcr
dec
stos
pushf
ret
imul
jl
mov
mov
popa
or
xchg
push
pusha
std
mov
into
jns
jo
mov
add
cmpsl
pop
sub
inc
push
stos
sti
cwtl
cmp
test
arpl
jbe
lret
aam
js
mov
jns
inc
pusha
leave
lds
cmp
cli
inc
lcall
xchg
fiadds
inc
pop
mov
daa
add
arpl
mov
mov
and
bnd
mov
push
cmp
mov
ret
cwtl
push
addr16
repnz
je
push
cld
or
rcl
mov
and
cmp
mov
rcrb
xchg
popa
je
push
cmp
xor
xchg
adc
adc
insl
jb
out
lcall
and
stos
mov
or
xchg
mov
jno
or
scas
cwtl
cmc
test
test
and
cwtl
and
and
scas
ret
test
inc
in
sbb
sbb
and
aas
out
pushf
dec
lret
cs
insb
ficoml
mov
addr16
lods
popl
pop
in
in
aad
aas
mov
push
or
insb
clc
add
jecxz
std
push
test
rorb
ror
mov
xchg
pop
movsl
xlat
ret
gs
sbb
fsubrl
xchg
jbe
sti
cmpsb
lahf
ret
test
push
jns
imul
pop
hlt
and
fdivrs
in
adc
fsub
stos
es
adc
sbb
les
ffree
mov
push
pop
out
mov
pop
imul
fsubs
ret
push
int
addr16
mov
enter
inc
pop
and
rcrl
mov
es
fisubs
xchg
imul
sub
mov
push
push
pop
cmp
out
add
push
pop
jp
dec
mov
lret
dec
xor
scas
lds
adc
cli
pusha
insb
cmc
inc
mov
lret
test
test
pushf
das
lret
sahf
push
cmc
rolb
pop
cmp
xorb
xor
cmc
and
jmp
xchg
loope
inc
mov
stos
jp
mov
push
in
lods
enter
inc
or
bound
inc
sub
fstps
mov
fadds
loop
or
loop
imull
xor
in
xchg
xchg
test
jmp
and
push
dec
adcl
mov
mov
popa
test
testb
sbb
pop
nop
daa
sbb
jns
xchg
ljmp
adc
jmp
arpl
xor
mov
xchg
clc
mov
cld
push
loopne
loopne
daa
in
push
std
and
mov
push
adcb
cmpsb
dec
and
mov
int
cmp
xor
mov
cmp
sbb
loope
xor
test
addr16
sbb
mov
and
loopne
lds
aaa
or
enter
imull
sbb
sarb
push
fiaddl
mov
or
testb
pop
jmp
gs
jns
push
movsb
xchg
cld
cmpsl
jmp
push
int3
int3
rolb
xchg
mov
movsb
daa
mov
ljmp
or
out
mov
dec
rcll
scas
push
aam
sub
outsl
jmp
adc
mov
rcrl
cwtl
dec
xchg
and
popf
push
inc
cmp
pop
xor
mov
xor
sarb
cs
mov
mov
jmp
jge
mov
push
mov
mov
shl
fbld
mov
sbb
dec
and
push
sbb
or
lods
sbb
int
rolb
jbe
decl
test
stos
push
loop
mov
jmp
getsec
jecxz
mov
fdivl
mov
mov
addl
ficompl
lods
fists
test
movsb
dec
call
lds
jge
xchg
xchg
fadd
cmp
sub
daa
js
sbb
cmovge
dec
shll
pop
enter
xlat
xor
cmp
sub
notl
or
xorb
jbe
dec
adc
xor
add
mov
push
hlt
pop
jnp
mov
imul
add
pop
push
das
cmc
jb
repnz
cmp
mov
out
fstps
jle
cmp
sub
adc
or
lds
mov
or
lds
sbb
fnstcw
icebp
or
xchg
sahf
pusha
xchg
cli
pop
mov
mov
arpl
dec
cmp
aad
ds
iret
sarb
jl
push
cmpsb
add
add
dec
xor
mov
call
add
arpl
mov
ret
mov
jne
inc
leave
pusha
nop
add
adc
cs
fdivrp
sti
sub
and
or
lods
mov
das
xchg
loope
or
es
adc
inc
pop
movsb
addb
xchg
xchg
ds
enter
pop
rcl
in
out
mov
sub
test
and
in
sbb
out
fsubrs
jbe
popf
dec
inc
movsl
outsl
pop
popa
inc
xor
mov
movsl
xor
int3
mov
push
sarb
fsubs
ret
xor
inc
cmp
mov
inc
dec
jo
dec
rep
fildll
faddl
jns
clc
xlat
fs
cld
sub
jle
xchg
loope
xor
or
sbb
pop
or
push
cld
inc
les
pusha
fisttps
test
rorl
push
gs
pop
bound
mov
inc
cmp
outsl
ljmp
test
xor
dec
jnp
jp
pop
pushf
mov
ror
out
push
lods
mov
and
test
mov
insb
lcall
add
lret
push
sub
mov
xor
aam
jmp
mov
dec
das
push
inc
ret
sbb
es
shlb
xor
movsl
fistps
pusha
cmp
sbb
rcr
add
ja
or
loop
adc
shll
cmp
in
push
call
mov
adc
fldenv
add
test
sahf
stos
and
aam
lods
mov
inc
ds
cmp
les
push
push
push
cli
lock
or
mov
nop
loopne
pop
add
outsl
test
ficoml
push
and
aas
gs
mov
js
mov
ret
jl
cs
jae
cli
mov
adc
mov
pop
xchg
mov
lret
cmpsl
mov
adc
cmc
pop
push
inc
and
dec
inc
pop
jecxz
xor
aad
gs
and
mov
push
pop
mov
push
inc
push
dec
or
push
xor
mov
das
ret
push
or
ja
in
dec
inc
mov
je
jne
test
shrb
sub
jbe
jne
mov
andb
loopne
nop
mov
and
in
repnz
mov
popa
jmp
dec
mov
xchg
mov
mov
test
jno
adc
add
imul
sbb
mov
inc
mov
subb
mov
adc
add
push
aad
loop
aas
sub
cmp
mov
mov
mov
push
popf
sub
xchg
in
dec
cmpsb
lds
movb
shlb
xchg
outsb
or
sub
fiadds
dec
mov
cmc
sbb
mov
mov
aaa
mov
xchg
sub
pop
negb
or
adc
mov
pop
setno
out
std
arpl
mov
jmp
pop
push
popa
aam
in
jl
sub
leave
mov
adc
sahf
cmp
lcall
ds
push
sbb
mov
mov
pop
cli
inc
add
fpatan
insb
out
cmpb
inc
push
and
lcall
mov
pop
aaa
sbb
xchg
mov
imul
jne
fcmovbe
add
test
loopne
and
mov
dec
sar
into
repz
xlat
fadds
jp
insl
or
lcall
jmp
mov
push
mov
je
inc
ret
inc
xor
jp
adc
inc
adc
mov
ljmp
inc
adc
push
rcrl
cld
rclb
cld
cmp
addr16
add
lds
cmp
add
adc
cmp
fwait
outsl
sub
orl
loope
adc
fwait
sahf
sub
sub
inc
out
or
push
mov
sti
mov
mov
and
xor
push
jb
inc
dec
pop
jnp
dec
ss
in
and
mov
dec
dec
xchg
jp
in
out
aam
and
push
mov
imul
out
xchg
call
aam
notl
imul
dec
jae
out
add
cli
in
cmp
cmp
ja
mov
xchg
dec
cmp
testl
int
call
inc
mov
lret
and
filds
inc
jae
jae
popa
mov
negb
scas
cmp
adc
dec
sub
popl
jle
mov
push
jp
push
mov
sbb
sub
jecxz
int
scas
cmpsb
gs
mov
jae
mov
stos
outsb
lret
or
jle
inc
lds
stos
in
mov
aam
scas
jns
adc
xchg
in
adc
sub
jle
lahf
cmp
pop
pop
inc
imul
mov
inc
rorb
cli
loopne
arpl
dec
pop
push
adc
andl
out
lds
jecxz
push
push
movsl
push
inc
cmp
std
insb
scas
mov
jecxz
sub
rorb
push
add
mov
fsts
jns
jb
mov
addl
adc
pop
xor
mov
xor
and
push
fmull
fisubrl
outsb
push
jmp
push
out
cmp
mov
jb
jmp
inc
jbe
shl
jnp
push
sub
mov
ret
pop
cs
add
cmp
push
out
movsl
add
aam
sti
jmp
xor
mov
sbb
test
jno
jg
scas
cld
mov
xchg
jecxz
rclb
jmp
jo
aaa
repz
push
jl
daa
inc
cmpl
jecxz
hlt
jmp
test
cmp
add
mov
and
xchg
xchg
fistpll
jp
push
push
out
gs
push
daa
daa
sti
lea
shll
mov
pop
add
xchg
jo
bound
xor
stos
lock
inc
aaa
into
dec
xor
int3
and
xor
cmp
mov
mov
inc
and
rcl
jecxz
adc
bound
sbb
lcall
ror
movsb
cli
pusha
in
call
lret
pop
scas
xor
xchg
pop
pop
inc
hlt
push
pusha
out
shr
mov
les
jecxz
dec
enter
jno
sub
pop
mov
test
jp
inc
enter
popf
mov
mov
subl
sub
in
sub
jp
fcmovnb
mov
inc
sahf
lods
inc
or
clc
xlat
lods
rcrl
shr
adc
xor
cmc
mov
adc
in
out
and
mov
cmp
aaa
jl
push
shrl
sub
das
dec
insb
movsb
add
test
es
shlb
add
jp
mov
jno
hlt
test
les
bound
lcall
daa
cmp
es
sahf
cwtl
out
xchg
sbb
adc
clc
mov
cld
mov
xchg
lds
clc
or
adc
out
sbb
int
rol
orl
inc
imul
pop
loopne
sub
xor
mov
scas
repnz
int3
sbb
rcll
insl
xchg
mov
ljmp
inc
cmp
adc
aam
shrb
add
push
imul
cltd
dec
xor
out
dec
mov
push
mov
inc
mov
inc
mov
adc
lods
ds
mov
mov
fisttpl
push
fsubl
and
nop
ljmpw
mov
jno
add
pop
stos
rclb
mov
mov
out
mov
xchg
sbb
add
mov
popa
and
jecxz
xchg
fs
push
pop
pushf
sub
cmp
fstps
ror
sbb
imul
repnz
mov
jle
adc
mov
jne
sti
mov
fiaddl
outsl
and
push
mov
push
enter
popa
pop
mov
or
lock
sti
inc
jae
cmp
mov
xrelease
pop
aad
aad
jp
add
mov
nop
cmp
psubq
jp
fmulp
sbb
sbb
pop
adcb
lock
pusha
cmc
icebp
push
repnz
inc
addr16
cmp
into
mov
pop
js
lock
mov
fists
push
mov
cwtl
repnz
pop
ja
icebp
jbe
add
shll
push
mov
xorb
out
sub
je
jnp
dec
add
loopne
mov
aam
movsl
sbb
jp
xor
pusha
out
dec
aam
test
std
dec
dec
xchg
push
sub
sbb
mov
or
cli
xor
xor
and
fcmovnu
adc
jmp
test
in
out
push
into
lret
pop
mov
mov
xchg
xchg
fs
imul
test
mov
mov
and
rcr
pushf
int3
jo
addr16
xchg
sti
enter
xor
cld
cmp
loope
xor
mov
fucomip
push
enter
lahf
test
mov
movsl
fwait
mov
mov
or
in
pushf
ljmp
jg
cmpsb
xchg
pop
pop
fdivs
sub
inc
inc
ficoml
dec
jnp
add
jnp
mov
dec
pop
jg
xchg
sbb
and
fidivl
lea
and
popf
inc
sub
dec
lds
fiaddl
iret
out
iret
push
or
loopne
rolb
ret
icebp
es
in
jnp
sub
in
int3
bound
dec
popa
shll
push
cmp
mov
jnp
mov
rcrb
insl
adc
repz
jnp
sarb
cmp
inc
adc
shr
rcrl
push
adc
cli
test
dec
jb
mov
xchg
inc
js
cltd
push
aaa
enter
sbb
dec
fsubrs
sub
push
sub
out
sbb
push
push
adc
pop
and
push
add
out
xchg
mov
enter
mov
dec
add
repnz
add
mov
cmp
cld
pop
pop
fsubrp
ljmp
inc
and
fsubrs
jno
push
mov
out
xor
and
cmpsb
test
cmp
jnp
mov
ret
pushf
pop
das
cmc
jg
pop
dec
sbb
xorl
mov
push
mov
mov
inc
out
aaa
jo
bound
and
testl
xchg
adc
mov
imul
lcall
inc
sarb
jo
sti
das
out
cltd
pop
adc
mov
xchg
ret
pop
js
shrl
lret
ret
xor
scas
je
mov
fstl
adc
adc
in
xchg
sub
xorl
mov
pushf
jne
clc
dec
ret
out
pop
mov
xor
dec
jnp
aaa
popa
add
jmp
ret
lret
xor
adc
stc
aas
pop
xchg
movsb
shlb
mov
push
shrl
cld
mov
add
adc
jle
inc
sbb
jo
and
repz
pop
adc
movl
mov
dec
adc
outsb
inc
xchg
push
pushf
imul
pop
repnz
in
pop
or
shlb
das
out
sub
inc
push
mov
loope,pt
movsl
fs
and
mov
stos
xchg
jecxz
mov
sub
mov
jg
imul
aaa
mov
ficoml
inc
sti
lret
mov
hlt
push
sbb
cmp
and
mov
inc
out
lods
ret
add
es
xchg
int
dec
jb
cwtl
and
stos
jne
jns
xchg
mov
out
sub
dec
dec
mov
pop
data16
jl
cmp
outsb
mov
lcall
cld
mov
int
mov
jmp
or
adc
push
adc
loope
or
adc
scas
cmpl
shl
notl
es
int
mov
push
mov
jno
mov
data16
mov
out
pushf
fneni(8087
mov
fcoms
and
repz
xor
sbb
stos
in
inc
pop
xorb
dec
outsl
lds
cmp
gs
sbbb
xchg
pop
aad
xchg
add
and
lock
rolb
leave
cmp
pop
out
das
add
mov
and
aad
jp
jmp
fidivrl
fisttpll
mov
out
xor
data16
cmp
mov
sub
fdiv
loopne
xchg
and
out
add
push
or
add
sbb
imul
jae
sub
shll
cmpsl
xlat
mov
mov
out
mov
and
jg
lods
or
icebp
scas
enter
sbb
inc
or
popa
push
popf
ret
inc
out
imul
inc
or
outsb
cmp
int3
add
out
mov
shrl
jmp
add
mov
xchg
adc
sbb
inc
rcrb
cmp
xchg
jecxz
mov
gs
jbe
xlat
movsb
aad
or
cld
mov
or
mov
sbb
xchg
cli
pop
sub
sahf
pop
mov
jne
fxtract
fsub
push
or
cs
mov
mov
pop
in
popf
imul
lret
enter
xorb
lods
xchg
add
scas
mov
movsb
addr16
sbb
rcll
les
dec
xchg
sbb
sbb
inc
push
push
test
into
dec
lret
iret
cmpsl
cmp
in
mov
frstor
clc
cli
sub
out
std
bound
sar
movsl
in
aam
mov
xor
inc
inc
xchg
push
pop
inc
leave
lret
mov
dec
add
sub
push
js
test
std
xor
stc
jno
adc
add
push
imul
testl
and
jecxz
adc
cmp
add
cmpsb
lock
push
xchg
jo
stos
fdivrs
push
shll
rolb
push
leave
or
cmc
inc
enter
aas
mov
rclb
push
mov
mov
pop
push
aam
stc
or
mulb
iret
in
inc
aam
xchg
dec
cmp
incb
mov
cli
frstor
push
xor
ret
jmp
push
cmpsl
jle
push
pushf
lcall
loop
adcb
loop
sbb
dec
jnp
mov
xlat
pop
lds
enter
xchg
push
and
inc
call
das
nop
inc
cmp
jg
inc
xor
test
lods
add
aas
mov
nop
mov
mov
aas
hlt
adc
ss
or
or
mov
cmpsb
loopne
mov
pop
cmp
and
stos
sti
xchg
int3
xchg
pop
mov
mov
rcr
sahf
insb
push
jl
jg
and
mov
out
std
outsb
data16
sbb
add
arpl
adc
shlb
imul
sub
mov
out
aaa
push
xor
sub
popa
or
ret
jp
sbb
jl
mov
lods
mov
jnp
mov
push
xor
rclb
pop
fisttpll
jecxz
pop
cmpb
mov
xorl
mov
sub
nop
int
fdivr
cmpsb
or
adc
clc
in
inc
jo
adc
imul
dec
cmpsl
push
mov
stos
or
stos
aam
les
out
fwait
lds
fimuls
pop
dec
mov
outsb
sarl
fiaddl
imul
and
adc
icebp
popf
jge
sbb
aad
test
rorb
in
adc
mov
imul
push
adc
xchg
push
call
testl
dec
inc
cmp
xchg
or
lods
sub
push
data16
ljmp
test
sbb
jns
push
hlt
aad
mov
loopew
loope
movsb
insl
sbb
xchg
repz
nop
clc
push
rorl
mov
inc
pushf
jb
or
les
iret
sar
pop
push
roll
add
pop
call
dec
repnz
sbb
mov
in
call
inc
mov
daa
push
out
js
cmpl
cmp
jnp
inc
es
push
inc
fs
ficompl
rcl
jge
addr16
pop
enter
push
ret
fildll
mov
and
push
mov
test
push
ror
aas
or
push
mov
or
or
inc
cmp
dec
jl
rorl
pop
and
sbb
mov
cmpsl
pop
into
xor
loopne
sti
aam
jecxz
mov
shll
mov
xchg
test
and
out
mov
sbb
inc
stos
jmp
sti
fsubp
inc
daa
cld
sbbl
out
lahf
jo
mov
fs
inc
into
mov
add
fs
inc
loope
push
clc
add
outsl
and
test
scas
push
jp
cmp
push
xchg
test
fstpt
lods
xchg
jne
loop
sbb
loop
movsl
lods
xorb
cmp
mov
sbb
sbb
roll
inc
arpl
sbb
movsl
shll
push
stos
test
rorb
sbb
test
fmul
int3
inc
inc
aas
std
loop
aam
out
or
out
sub
sub
mov
add
jg
dec
fwait
adcb
xorb
out
lret
jg
addl
jns
loope
gs
loopne
fbld
mov
mov
outsb
and
jno
pop
fistpll
clc
xchg
mov
aaa
je
ret
lods
sbb
lods
jae
das
sub
jle
mov
inc
inc
pop
dec
repz
or
arpl
push
jo
mov
fbld
pop
mov
inc
mov
sub
test
repz
lods
adc
dec
cli
shll
lods
jl,pn
xchg
pop
sbb
jmp
mov
push
out
test
pop
jl
movsl
icebp
xor
scas
add
adc
add
es
mov
mov
pop
aad
mov
xor
sarl
mov
cmp
and
ret
mov
mov
fdivl
andb
gs
repz
xchg
test
fbld
shlb
arpl
sbb
stos
inc
inc
fisubl
es
jb
mov
into
test
iret
jne
xor
int3
xchg
loope
cmpsl
roll
adc
sbb
cld
xchg
inc
pushf
and
ja
jns
xor
or
mov
imul
dec
fs
fcom
test
scas
mov
arpl
in
mov
mov
daa
or
adc
cld
pop
or
mov
mov
arpl
jnp
cs
pop
push
xor
flds
or
mov
js
inc
mov
call
ficoms
inc
or
mov
sahf
push
dec
es
jl
in
mov
lret
scas
in
cmp
nop
cmpsb
shll
cltd
pusha
and
or
int
cmp
in
hlt
adc
fs
dec
xchg
add
mov
fsub
dec
add
pushf
sti
jmp
adc
cmc
pusha
mov
xchg
push
lret
push
xchg
sbb
ret
jge
arpl
push
mov
push
and
adcb
addl
push
rcrb
mov
aad
mov
ror
popf
pop
xor
dec
js
xchg
leave
cmc
jbe
mull
add
sbb
bound
jl
adc
lock
jl
dec
in
add
and
mov
adc
mov
je
les
pop
cmp
cmpsb
push
add
andl
add
mov
loope
cmp
cmp
lds
outsb
int
int3
pop
repz
cmp
xor
stos
fildll
cli
aam
loope
inc
mov
jnp
pop
ljmp
lods
push
adc
xchg
cmp
jo
adc
add
jmp
adc
and
dec
and
jle
adc
add
push
xlat
jp
or
inc
mov
mov
lods
cmpsl
pop
test
loopne
add
pop
ror
sbb
test
xor
insl
adc
mov
mov
out
cmp
xor
and
push
imulb
das
jno
add
bound
sti
and
fsubs
cwtl
and
add
mov
mov
popf
push
mov
add
jb
or
testl
lock
dec
nop
fstl
test
push
jno
xor
adc
lock
fidivrl
cmp
sti
es
dec
cmp
add
adc
shrl
imul
inc
mov
mov
xchg
test
mov
add
bound
lock
out
pusha
xor
push
dec
iret
out
loopne
mov
and
addr16
lcall
movsb
mov
in
fwait
gs
add
cmp
sti
push
mov
incb
ljmp
mov
fdivr
xchg
mov
dec
aaa
out
inc
int
sbb
add
mov
mov
lcall
or
ficoms
popaw
cwtl
out
popf
cmp
cmp
sub
sbb
add
lds
mov
cmc
pop
mov
pop
add
fs
daa
incb
dec
inc
inc
jg
ss
jnp
sbb
pop
jmp
scas
xchg
xchg
push
add
sti
adc
or
fwait
pop
jo
into
repz
lret
into
push
outsl
jecxz
pop
push
repz
pushf
hlt
cmpsl
cmp
push
pop
pop
mov
fisubrl
add
aas
popa
inc
xor
xchg
ljmp
ss
push
or
pop
cmc
sbb
mov
scas
push
sbb
mov
push
lret
pop
or
das
mov
xrelease
xor
lods
push
fs
push
sahf
inc
out
jnp
sbb
lret
ds
inc
cltd
mov
push
pop
ja
push
stc
out
mov
test
out
cmpsl
sbb
sub
mov
or
xor
adc
mov
lahf
rcl
cmc
mov
or
mov
or
jecxz
mov
jns
mov
mov
mov
dec
xchg
aaa
ss
jecxz
mov
fisubrl
mov
incl
fdivp
or
loopne
pop
pop
rolb
xchg
daa
fidivl
mov
addr16
pop
dec
sbb
add
cmp
lcall
xor
push
arpl
std
add
sub
inc
xchg
mov
jae
mov
nop
rcr
xor
out
mov
sbb
and
or
std
subl
jns
xor
dec
scas
mov
int3
aad
outsb
iret
and
jmp
lret
xor
sbb
push
or
dec
jecxz
jnp
or
pop
repnz
jno
cmp
mov
les
pop
sub
inc
dec
cwtl
and
out
mov
push
jae
dec
push
dec
push
xchg
xchg
mov
test
aaa
jp
subb
dec
mov
mov
pop
rcll
push
mov
mov
loope
mov
repnz
addl
xchg
outsl
sar
outsl
or
or
sub
inc
jmp
cmp
add
pop
cmpsb
add
xchg
push
inc
clc
pushf
pop
jo
sub
addb
int3
imul
jae
jbe
fprem1
lahf
out
xor
out
push
enter
xor
pop
daa
cmp
add
out
fiaddl
push
mov
push
cs
jo
xchg
pop
cld
test
pop
fcompl
xor
and
cwtl
adc
push
daa
je
mov
cmp
test
pop
std
in
aam
mov
ds
mov
lcall
std
cmpsl
mov
fs
sub
jnp
loopne
pop
sub
test
sbb
nop
mov
sub
popf
xor
mov
in
cs
cs
mov
inc
ja
inc
insb
ja
dec
cmp
inc
xor
into
push
aad
js
fsubrp
repnz
push
pop
or
push
inc
jb
das
es
or
addl
mov
mov
xlat
inc
jbe
and
scas
into
xchg
test
pop
aam
xor
cmpsb
sub
repz
cmp
mov
mov
mov
pop
cwtl
sub
cmpsb
push
in
in
inc
adc
sbb
pushl
inc
ret
jbe
jecxz
dec
push
rcrl
sub
add
inc
ljmp
loope
sbb
rorb
mov
xchg
insb
adc
jno
js
push
cmp
in
data16
sub
hlt
xchg
repz
mov
xchg
das
sbb
add
jmp
jmp
jne
push
add
cwtl
in
rol
push
sti
jl
dec
mov
dec
mov
mov
sar
fsincos
and
pop
push
repz
mov
cmp
frstor
test
out
adc
cld
push
iret
sub
sbb
sarl
push
out
push
or
pop
mov
leave
dec
sub
mov
push
jmp
sahf
call
cmpb
push
imul
jl
test
in
add
cli
sub
mov
push
in
lcall
jg
pop
lods
out
aas
ds
sbb
jb
icebp
mov
cmc
stos
jnp
inc
push
add
xchg
xchg
push
and
nop
insb
or
jmp
sub
adc
js
dec
and
mov
dec
aam
jge
fcmovnb
adc
cld
cmp
mov
in
mov
sub
inc
sbb
and
cltd
movsl
test
push
inc
repnz
arpl
adcl
jg
dec
xchg
enter
loope
cmp
mov
push
fucom
mov
lret
pop
cmp
push
pop
push
sub
jne
out
push
xchg
shll
pop
bound
imul
xor
jle
adc
stc
lods
mov
aaa
flds
sbb
jl
inc
add
dec
rclb
outsb
adc
inc
sbb
mov
push
cmp
sbb
push
push
xchg
mov
loope
cmpb
stos
lret
push
adc
mov
mov
sbb
mov
movsl
movsl
add
sbb
mov
divb
data16
cli
push
mov
dec
mov
sub
movsl
lods
sbb
cli
dec
daa
sbb
js
xchg
orb
xchg
pop
insl
xor
xchg
add
xchg
movsl
sahf
jo
mov
push
lahf
mov
sub
inc
cmp
push
es
ja
cmp
mov
xchg
mov
enter
mov
cmc
adc
ja
cmp
stc
inc
sbb
add
adc
push
and
aad
rcll
xchg
add
cmpsl
out
sub
adc
inc
fmull
lret
out
call
cmp
inc
testb
das
icebp
or
push
push
pop
ja
int3
fcomip
lock
or
test
push
aam
lret
add
push
filds
pop
and
sbb
and
imul
fwait
test
lcall
addr16
sbb
mov
out
and
mov
inc
dec
ss
mov
cmp
xchg
xor
xchg
sbb
fisttpl
stos
ret
inc
or
insb
or
icebp
sbb
sub
shll
push
inc
pusha
movsl
mov
leave
mov
push
sbb
push
pop
jns
jb
clc
aaa
iret
adc
pushf
mov
popf
mov
ljmp
mov
lods
and
pop
xchg
xor
jmp
out
push
nop
leave
aam
fldt
imul
dec
cmp
lods
inc
and
cs
std
mov
in
dec
into
ffreep
push
mov
das
int
movsl
jo
test
xchg
mov
inc
mov
cmpsl
test
daa
jp
mov
or
out
enter
mov
mov
gs
sbb
cs
adc
imul
rcrl
call
es
xchg
and
lcall
hlt
xor
je
leave
or
shll
xchg
mov
jmp
add
sub
xor
push
adc
cmp
mov
inc
popa
test
loop
sbb
gs
ja
repnz
inc
mov
arpl
mov
mov
xorl
inc
inc
lahf
imul
mov
aas
sbb
push
xchg
repnz
or
stc
sbb
mov
cmp
cmpb
jp
or
je
mov
fs
cmpsl
sub
cld
or
pop
rcrb
push
inc
and
inc
or
ret
in
out
insl
sar
call
dec
gs
jbe
xchg
push
sbb
mov
mov
dec
push
cmp
sub
inc
sub
ss
xor
adc
pop
jne
xor
int
jne
in
in
repz
cltd
xchg
push
cmp
arpl
lret
into
push
js
std
pop
ljmp
arpl
mov
mov
mov
test
adc
xchg
jo
ds
outsl
add
repz
int3
push
sbb
cmp
fdiv
ret
mov
lods
push
inc
push
and
enter
jno
xor
mov
jns
stos
sbb
lea
mov
dec
movsl
mov
scas
xchg
int
arpl
scas
iret
icebp
mov
mov
sub
sbb
pop
jnp
cltd
and
sub
xor
xor
mov
mov
lcall
jge
mov
inc
mov
and
pusha
cmpsb
mov
xor
lahf
shrl
inc
in
mov
inc
cmp
pop
ss
add
in
push
lahf
inc
mov
call
or
test
jl
xor
mov
jnp
je
test
xchg
xchg
xchg
cmp
mov
xchg
outsb
xchg
add
gs
cmp
sbb
adc
aad
leave
fwait
bound
dec
repnz
inc
pop
push
and
cmp
fsubr
add
repnz
int
xchg
mov
xor
aaa
xor
xchg
jecxz
sbb
mov
jge
sbb
ss
cmpsl
loop
mov
fstp
sti
xorl
mov
lret
xor
xchg
pop
or
mov
out
xor
and
stc
mov
es
pop
mov
mov
out
lods
fmul
sahf
loope
adc
aad
imul
lea
jp
push
xor
adc
in
fldcw
lcall
mov
mov
jo
aaa
jg
adc
push
pop
outsl
cmp
mov
xor
mov
pop
enter
int3
arpl
scas
test
pop
xchg
sbb
ljmp
fwait
lret
loop
push
dec
dec
lds
sub
cmp
push
adc
or
dec
rcrb
movl
ss
mov
mov
cmp
cmpsl
rcl
inc
and
sub
fnsave
les
pop
leave
dec
xchg
or
gs
loope
out
test
jns
stc
icebp
stc
xchg
xor
jmp
insb
daa
outsb
outsb
push
sahf
inc
es
adc
movsb
js
xchg
iret
fcmovb
std
xorl
scas
push
enter
scas
inc
lods
xchg
cmp
pop
jle
outsb
mov
pusha
test
jb
push
pushf
xchg
out
pop
sub
insl
mov
sub
dec
iret
sub
or
xchg
fistpll
pop
xor
aad
pusha
fstps
xchg
jo
sub
push
aaa
pop
cmp
lcall
mov
mov
movsl
les
ja
lret
add
adc
or
ja
fnsave
inc
sbb
cmpsl
addr16
sub
cmp
adc
xchg
ret
pop
sub
lret
hlt
stc
sbb
in
mov
std
or
sahf
lods
xor
cltd
insb
push
or
cltd
and
sahf
mov
jmp
inc
nop
or
repz
mov
dec
or
bswap
test
mov
pop
sbb
inc
test
and
xor
adc
or
aad
mov
loop
mov
mov
or
adc
sbb
xchg
jne
pop
leave
add
mov
jo
xor
pop
dec
cmpsl
xchg
into
out
lods
pop
mov
adc
inc
mov
push
data16
cmpsb
cwtl
out
packsswb
not
nop
lods
pushf
mov
sbb
sbbb
xchg
jle
stc
and
pop
loopew
push
xchg
mov
je
mov
mov
sub
push
in
xor
dec
lods
je
icebp
cmp
negb
or
and
imul
fidivl
mov
add
xchg
iret
scas
and
and
mov
loopne
in
scas
cmp
clc
adc
rolb
inc
push
repz
popa
or
push
dec
push
outsb
gs
xchg
sbb
add
xchg
mov
and
lret
ficoml
sbb
shlb
fcmovnb
loop
xor
pop
cmp
jno
sub
pop
mov
cli
mov
shlb
stos
push
ja
pushf
xlat
sub
push
pop
clc
inc
mov
aas
cmp
iret
out
clc
outsb
cli
fdivrl
mov
mov
inc
inc
lods
adc
xchg
sub
mov
mov
jg
add
xchg
idivb
incl
adc
xchg
inc
shll
xlat
out
adc
sub
rorl
add
iret
ret
test
dec
lret
cmp
sbb
scas
jge
into
call
cmp
js
add
sarl
jecxz
lret
xchg
pop
xlat
xor
mov
ret
cwtl
movsl
or
dec
call
imul
pop
repnz
fstpl
cmp
outsl
mov
int
mov
add
repz
rclb
xor
scas
test
xor
push
ret
pop
jo
xchg
dec
ds
sub
lret
cmp
stos
adc
add
jns
les
and
push
lcall
adc
or
out
mov
xor
inc
cmpl
push
rorl
shll
ficomps
or
shll
js
push
pop
or
jp
sub
xchg
sub
fistpl
sub
lret
sub
sbbl
xor
push
and
jecxz
repnz
cltd
shl
xchg
jns
adc
in
aas
push
cs
insl
sbb
outsb
leave
xchg
lods
or
out
mov
adc
movsb
ss
push
add
xchg
setb
dec
lret
sbb
mov
and
cli
leave
popa
and
cltd
push
pop
aaa
xor
add
sbb
pusha
in
rcrl
pop
loop
xchg
push
mov
daa
mov
stos
repnz
and
push
mov
outsb
daa
add
push
xchg
into
cmp
cmp
jns
in
or
rorb
je
pop
out
lea
add
push
cmp
jae
adc
sahf
add
sbb
imul
mov
mov
pop
mov
mov
in
xchg
cmpsl
and
aaa
out
cmpb
mov
in
sub
and
jbe
daa
lahf
push
inc
aad
popa
mov
outsb
fbstp
ja
dec
mov
push
jmp
xor
lahf
stc
mov
addb
test
fistpl
inc
pushf
fadds
and
subb
dec
fadds
add
or
cli
or
mov
jmp
push
cmp
jae
subb
lods
arpl
mov
pop
mov
jno
popa
and
push
outsl
mov
stos
cmc
data16
adc
clc
xor
test
xor
gs
xor
xchg
mov
inc
jle
fisubs
icebp
gs
and
fwait
push
push
lods
adcl
pushw
mov
out
xor
or
xchg
subb
jp
add
jmp
dec
mov
sub
xor
lock
aad
das
aad
cld
push
gs
xor
mov
dec
push
int
and
xlat
inc
sbb
mov
sbb
jle
push
mov
mov
jbe
std
and
popa
inc
pop
pop
stc
cwtl
or
mov
aaa
scas
pushf
test
pushl
flds
movsl
mov
xchg
sbb
and
ljmp
ret
mov
clc
jb
cmpsl
daa
arpl
psrlq
cmpsl
jl
xchg
push
in
ds
movsl
dec
out
mov
xchg
pop
rcrb
clc
adc
inc
test
jnp
shll
mov
in
add
inc
mov
cld
sub
int
stos
jge
xchg
dec
cwtl
mov
sahf
out
decl
test
shl
outsl
or
and
shlb
out
lea
lds
sub
add
dec
adc
fsubrl
test
jns
jno
xchg
ljmp
mov
sti
xor
ficoml
jl
mov
xchg
aad
cli
jo
enter
insl
sbb
in
bswap
repz
fiadds
mov
mov
xchg
and
aas
test
les
fstpl
fnstsw
aas
or
push
mov
adc
mov
pop
mov
cmp
sbb
push
addr16
orb
cmp
cmp
arpl
addr16
xchg
add
add
jge
cmp
rclb
xchg
pusha
shr
hlt
mov
addr16
xor
ret
rol
sbb
and
jge
push
pusha
mov
inc
jge
popa
jne
adc
push
jmp
pop
inc
dec
xchg
fistpll
movsl
xor
int3
add
pop
aas
xchg
jbe
sub
loop
pop
xchg
push
mov
and
jge
or
in
dec
idiv
les
push
pop
pusha
int
cmp
insl
push
jp
mov
jge
sub
hlt
push
and
add
add
loope
inc
jecxz
lret
sar
or
or
add
xor
mov
mov
and
jae
out
xor
push
add
movsl
pop
push
pop
cmpsb
xor
inc
notl
bound
outsl
adc
jl
push
inc
scas
add
cs
mov
cwtl
jns
aaa
xor
xchg
mov
inc
fwait
jae
das
cltd
jge
and
repz
mov
data16
sbb
or
icebp
insb
loopne
adc
sahf
and
inc
faddl
mov
jg
clc
mov
stc
mov
lock
int
pop
call
mov
cmpsb
inc
push
xlat
add
xor
add
push
repnz
ret
lea
xchg
jecxz
jg
imul
aas
jns
out
add
adc
adc
xchg
mov
test
fcmovne
adc
fs
jo
mov
pop
or
lret
sti
adc
lret
add
mov
push
adc
out
dec
jno
jle
iret
mov
pop
pop
inc
js
ljmp
dec
mov
in
clc
das
mov
popa
sti
icebp
jns
adcl
pop
push
and
dec
xchg
lock
jns
mov
aas
mulb
dec
pop
faddp
shlb
xchg
mov
pop
or
dec
pop
pop
stc
loopne
and
push
mov
aad
cmp
cmp
cmp
mov
xchg
clc
fnstenv
popa
insb
cmpsl
test
inc
lds
xor
data16
stos
imull
iret
clc
jne
scas
lds
ss
in
dec
negb
lret
inc
push
out
pop
or
fisubrs
xor
test
dec
test
icebp
fbld
orb
iret
pop
xchg
out
adc
repz
pop
inc
pushf
repnz
jns
sahf
stc
mov
pop
cli
ljmp
and
push
xchg
mov
pop
add
mov
or
pop
push
cmpb
fdivl
dec
fs
fmuls
call
dec
cmp
mov
lcall
nop
stc
in
shlb
stc
mov
in
cmp
sbb
or
lea
jecxz
lret
sub
into
mov
lock
and
dec
dec
mov
dec
lcall
lods
aaa
lock
cmpsl
test
adc
fwait
xor
mov
shrb
es
mov
movsb
clc
push
mov
mov
nop
xchg
loope
push
adc
cli
test
ficomps
out
pop
int3
lea
adc
sub
sub
repz
xchg
into
notl
push
push
cmp
insb
sub
mov
add
cmp
mov
push
out
mov
scas
loope
jb
cmpsb
or
and
adc
mov
in
xchg
in
icebp
out
mov
xor
xchg
xchg
add
sub
pop
andl
stos
fs
and
dec
adc
mov
or
sub
imul
inc
mov
pop
xchg
pop
add
out
mov
mov
add
xchg
and
popa
and
add
cs
sbb
ja
ja
mov
jg
es
nop
scas
push
and
ret
sti
cmp
pop
or
addl
aam
push
xchg
and
insl
or
inc
mov
repnz
xchg
dec
lods
movsl
mov
inc
int3
mov
xchg
shr
pop
cmp
adc
lcall
or
push
and
aas
test
inc
lret
rclb
push
data16
push
or
imul
pop
inc
jg
mov
mov
push
ss
es
adc
loopne
pop
cmp
pop
das
xor
add
sub
cmp
clc
and
cmpsl
mov
inc
inc
add
jno
dec
hlt
jae
mov
pop
or
jle
lcall
or
mov
mov
add
inc
and
mov
aaa
or
popf
cmp
cmp
cs
lock
cli
insb
add
inc
fwait
mov
iret
pusha
inc
out
inc
fstps
sbb
lret
aad
cmpsb
xchg
sub
sub
into
cli
les
mov
leave
stc
fsubs
roll
pushf
mov
mov
fistpll
cmp
mov
inc
test
cmp
push
jg
jno
fwait
sarl
dec
push
data16
jp
sti
cmc
ret
int
mov
fcompl
call
addr16
pop
jno
pop
or
push
jne
adc
loop
pop
scas
mov
jbe
stos
sub
pop
and
lea
add
ret
mov
jle
sub
pushl
mov
add
stos
std
sbb
cmp
sbb
and
pop
mov
mov
fisubl
insb
jecxz
insl
add
out
push
sarb
lret
lods
into
subl
daa
jne
mov
fsts
cs
fdivrs
popa
sti
cltd
push
push
sub
cmp
int
aad
fs
adc
xchg
push
jge
jmp
repnz
lret
jg
into
test
imulb
repz
scas
push
mov
add
fistpl
mov
pop
stc
or
stos
fnstcw
popf
xchg
pop
or
add
xor
dec
and
xchg
lcall
pop
negb
lods
out
ljmp
sbb
xorl
adc
pop
sahf
sar
out
pop
enter
inc
xchg
jle
icebp
or
pop
xchg
inc
test
lret
jnp
shrl
mov
mov
cmp
popf
add
push
sub
fldenv
jmp
pop
inc
sub
jl
nop
aaa
pop
orl
add
sbb
mov
loopne
fistpll
dec
pop
ficoml
scas
pop
ljmp
shr
out
out
mov
add
aas
bound
dec
gs
shl
ljmp
xchg
aam
mov
lds
sub
inc
push
push
ja
loop
mov
pop
in
xbegin
ds
dec
push
pop
dec
mov
pop
loopne
hlt
cmp
jb
xor
pop
adcb
sub
ret
jae
push
test
xor
cmp
nop
pop
sbb
fcomps
mov
fldenv
pop
or
mov
std
lods
cmp
mov
mov
or
ret
jno
in
pushf
pop
mov
mov
nop
jo
push
push
imul
stc
pop
into
les
sub
lods
out
adc
inc
adc
or
mov
addr16
mov
fmull
int
fcmovnbe
ljmp
pop
mov
out
jnp
inc
xor
movsb
js
jno
rcr
ss
ret
or
aam
xchg
xor
xchg
xchg
pop
jo
sbb
ret
xchg
and
jecxz
lret
cwtl
pop
daa
bound
jbe
sbb
sub
imul
sub
or
lret
stos
sub
movsb
movsb
fdivl
std
stos
cmp
cmpsl
lea
push
hlt
imul
test
jbe
sub
fyl2x
fistpl
mov
test
adc
ljmp
or
cmp
js
mov
popa
xchg
in
pop
dec
adc
into
sub
and
inc
add
mov
jo
imull
dec
sub
mov
notb
pop
loopne
mov
and
add
or
sub
sbb
icebp
sbb
adc
or
movsl
xchg
pextrw
in
jmp
pop
mov
sub
pop
jbe
js
sbb
cld
push
jecxz
push
push
ja
popa
xor
jne
push
inc
xlat
ret
sbb
mov
xor
es
cwtl
movsb
ds
cmp
in
into
into
and
xchg
fcomps
in
insb
or
or
mov
xchg
jle
cs
mov
mov
or
arpl
popf
jmp
xchg
push
mov
in
lods
mov
lret
repz
push
push
ds
xor
jae
sahf
fcomp
fstl
xor
addb
xchg
xlat
fwait
xor
xor
lds
inc
loopne
insl
daa
popa
inc
xchg
in
xchg
dec
jecxz
divb
inc
jg
test
movsb
sbb
das
fstpt
sbb
ret
scas
sub
ds
xor
data16
jge
inc
inc
ja
mov
fs
popa
xchg
stos
div
sti
pop
xor
pop
fs
mov
in
icebp
mov
in
push
adc
sbb
test
jo
out
sub
jg
pop
aas
xor
lea
sbb
sub
lds
mov
cmp
xor
cmp
ret
lock
pop
loop
popf
push
mov
or
imul
scas
jle
call
aas
push
fisubrs
aaa
fwait
nop
mov
repnz
adc
pop
mov
mov
fstpt
add
push
push
sbb
xor
xlat
clc
popa
in
rolb
xlat
mov
and
push
out
pop
or
jge
push
jo
int
inc
mov
hlt
xor
mov
mov
mulb
adc
test
xor
xchg
lcall
and
daa
addr16
xor
stos
push
mov
sub
adc
cltd
outsl
sub
mov
fstpl
jge
adc
xchg
pop
cmp
shll
mov
ret
addr16
lods
aas
insl
sub
mov
push
std
jmp
js
std
mov
je
pop
shlb
mull
or
int
mov
jo
jo
rcrl
fbstp
xor
adc
pusha
dec
or
jns
xchg
out
sbb
outsb
fisubrl
sbb
mov
cld
stos
ret
and
das
pop
dec
cmp
or
cmp
outsb
pop
sub
mov
test
add
scas
jne
jmp
xchg
inc
or
push
fisttpl
aam
test
sbb
pop
test
cld
sub
add
xlat
and
xor
adc
outsb
fwait
sub
cwtl
xchg
dec
out
sbb
mov
mov
xlat
cmpsl
roll
xchg
cmp
cmp
sarl
adc
jb
inc
inc
sub
in
mov
jg
aam
rcll
popf
lret
mov
sub
pop
or
int
lret
shlb
push
push
xor
popl
xchg
repnz
mov
adc
pop
in
aaa
movsl
out
rclb
push
xor
hlt
int3
test
in
mov
mov
jle
sar
jne
loopne
ficomps
out
lods
fldl
and
sbbb
mov
xchg
divl
roll
aas
int3
pop
jbe
ds
sarl
int3
lahf
push
orl
push
adc
sbb
push
mov
jb
push
sbb
jae
clc
sbb
cs
sub
mov
or
mov
inc
mov
fs
or
xchg
cmp
decl
insl
lds
rolb
inc
int3
divb
jne
cwtl
mov
inc
jo
bound
out
dec
jbe
int
cmp
cmc
mov
and
mov
repnz
pushf
xlat
xor
enter
jmp
xlat
cld
or
ja
xchg
xchg
mov
fs
jmp
push
mov
add
dec
push
push
cmpsb
add
pop
mov
lcall
es
mov
les
xchg
in
insb
jbe
jo
stos
sub
xchg
daa
les
les
inc
xchg
mov
xchg
in
mov
jnp
movsl
and
sbb
out
cmp
lret
pop
inc
outsl
ja
xor
adc
inc
outsb
inc
scas
jp
mov
imul
jge
or
out
sub
mov
add
cltd
xor
pusha
pusha
add
cmpsl
imul
stos
or
out
fwait
pop
and
jge
jne
cmpsl
inc
xchg
clc
test
mov
xlat
inc
cld
pop
clc
shll
sbb
mov
out
leave
scas
xor
xchg
jno
sbb
jmp
in
std
and
xor
cmp
mov
in
pushf
data16
inc
ss
cmp
imul
adc
nop
cs
mov
arpl
xorb
push
sub
hlt
sbb
cs
test
aas
adc
xor
pop
sub
dec
movsl
data16
mull
jne
jno
mov
dec
xor
rorb
enter
outsl
xor
xorl
lcall
test
fcom
jp
jns
push
inc
dec
push
cvtdq2ps
test
ret
inc
paddsw
sbb
lahf
xchg
lahf
imul
push
fxam
addl
hlt
nop
sti
add
jle
cltd
jp
push
sbb
push
out
imul
cli
cli
pop
dec
iret
dec
ret
xor
mov
fcmovb
lods
out
jge
pop
lcall
mov
stos
ss
mov
popf
lods
insl
bound
mov
mov
je
dec
push
ljmp
jno
daa
int3
sub
ret
enter
fmul
out
mov
mov
test
mov
sub
movsl
pop
mov
js
enter
and
es
call
pop
cwtl
incl
mov
int3
imul
adc
jo
inc
mov
xor
jle
push
adc
test
mov
js
pop
call
sub
push
jg
pusha
and
mov
lret
sub
jp
out
jle
add
sbb
sub
xlat
jecxz
pop
mov
mov
adc
sbb
sub
sbb
adc
cmp
ret
shl
movb
and
inc
popa
dec
xchg
pop
lods
int
test
insl
mov
push
js
into
in
pop
and
ja
sbb
add
inc
add
dec
call
ret
jnp
test
sub
add
stos
pop
cmp
stc
in
mov
push
insb
in
out
xchg
outsl
mov
cwtl
jg
add
rorb
mov
imul
fists
imul
jge
sbb
pushf
stc
out
sub
mov
enter
fldt
adc
aaa
sub
es
dec
out
test
adc
mov
icebp
cs
or
psubd
push
adc
or
nop
pop
fldenv
adc
jb
mov
add
insl
clc
mov
daa
push
dec
ss
adc
dec
push
fs
add
xchg
in
push
pop
sub
inc
xchg
neg
repz
fsubl
pusha
sbb
mov
ljmp
aas
dec
call
xchg
jnp
xchg
xchg
xchg
rclb
sbb
dec
insb
and
outsl
dec
jbe
xchg
add
push
repz
add
or
pop
lods
and
xchg
add
out
stc
cmpsb
xchg
mov
in
sbb
and
cmc
inc
add
outsb
pop
stos
je
outsl
test
es
aas
sti
dec
lcall
imul
aas
sbb
sbb
sti
inc
lret
mov
xor
or
and
mov
test
sahf
jae
stc
xchg
out
jo
into
lret
xor
pop
add
insl
stc
jp
imul
sahf
cli
repnz
cmp
ljmp
inc
sbb
sbb
sub
loope
das
out
jl
scas
ret
push
ds
xor
stos
ljmp
popf
ret
sub
push
sbb
add
ss
clc
sbb
mov
jmp
call
jmp
xor
mov
clc
imul
sbbb
dec
xchg
mov
mov
addl
addr16
dec
in
lock
mov
sarb
stc
negl
repnz
lods
loopne
xchg
divb
or
dec
repnz
mov
test
addb
rol
adc
lret
lcall
loopne
pop
ds
pop
rorb
dec
cwtl
jg
jnp
addr16
or
fsts
pop
lahf
push
fcomps
or
and
jp
in
inc
mov
int
or
jl
shrl
je
jne
stos
lods
and
sub
mov
loop
or
aad
mov
insb
add
fstl
adc
xchg
adc
stos
gs
pop
clc
push
ljmp
jle
gs
rclb
mov
fisttps
jbe
pop
jmp
inc
movsl
xchg
mov
loopne
stos
pop
in
lea
push
xor
into
mov
adc
ja
pop
sub
inc
hlt
test
inc
aas
int3
adc
dec
xchg
ds
aam
inc
push
jecxz
and
jg
push
mov
jecxz
xor
shr
sbb
adcl
subl
scas
dec
test
repz
test
stc
jp
jno
test
popa
leave
cwtl
stc
cmp
jge
int3
popf
dec
push
int
out
inc
xlat
addr16
jns
fcompl
out
jnp
pushf
mov
mov
dec
push
es
test
shl
imul
inc
rolb
mov
dec
xor
fldl
sbb
mov
xchg
out
fistps
mov
test
nop
fisttps
aaa
rcr
insl
pusha
and
loopne
mov
jl
addr16
add
fs
imul
inc
mov
mov
repnz
mov
adc
pop
lds
ja
in
xchg
sbb
clc
xor
adc
add
inc
mov
in
outsb
sub
jg
dec
in
push
fsubrp
xor
xchg
out
jmp
inc
jns
loope
std
or
push
out
jmp
mov
push
jmp
cmp
adc
sbb
mov
adc
aam
mov
pop
lds
or
jg
jb
jae
or
sub
inc
adc
repnz
and
sahf
and
xlat
pop
xor
jne
jp
mov
daa
mov
mov
mov
cmp
in
ljmp
std
push
jl
mov
sub
fwait
mov
std
add
xchg
in
fadd
repnz
movsb
in
pushf
add
in
lock
mov
lret
push
xlat
clc
xchg
cmp
pop
dec
insb
jp
xchg
hlt
in
shl
dec
test
sub
jae
mov
cwtl
shl
test
ret
cltd
push
leave
cs
jns
imul
in
pmovmskb
push
push
mov
lea
xchg
mov
aaa
jecxz
cmp
dec
and
imul
mov
push
cwtl
out
mov
sbb
pop
inc
lahf
cli
les
sub
mov
lret
mov
xchg
out
mov
adc
bound
adc
cmpsl
or
ljmp
mov
pop
xchg
adc
pop
adc
xor
cmp
mov
pop
movsb
sub
out
bound
sbb
and
ret
adc
mov
pop
inc
enter
lock
dec
xchg
ret
orb
mov
frstor
fwait
adc
mov
sbb
adc
xchg
add
test
push
hlt
cwtl
mov
test
mov
cmpsb
cld
jo
lret
movsl
nop
adcl
shr
sbb
incb
or
jne
hlt
push
rcll
je
push
xchg
push
repnz
jge
aad
popa
pop
push
movsl
inc
ret
add
rcr
mov
fs
pop
orl
xchg
shrl
das
call
add
sub
push
shlb
inc
ret
sbb
rolb
push
loope
fildl
stos
enter
cmp
push
xchg
mov
lcall
xor
fstps
lea
in
insb
in
xor
inc
fadds
jb
xlat
dec
sub
sahf
inc
loope
ds
adc
je
pop
aam
jb
icebp
cltd
inc
fdiv
faddl
mov
ss
arpl
flds
shlb
push
and
sbb
jl
mov
pushf
mov
fcomps
addl
repz
popf
sub
cli
pop
jle
jbe
test
push
mov
cmp
xor
bound
cmp
lret
addr16
sbb
dec
inc
jno
xchg
mov
loop
dec
nop
lahf
inc
loope
sub
or
sarl
and
adc
lds
sub
add
mov
mov
shrb
sbb
pop
mov
inc
lahf
pop
test
xchg
es
xchg
mov
jno
jle
cltd
repnz
mov
adcb
cwtl
cwtl
xorl
sbb
xor
xor
leave
mov
adc
popf
adc
call
test
shlb
test
xchg
add
leave
enterw
pop
jp
sub
push
mov
xchg
movsl
pop
out
or
popa
sub
mov
ljmp
xor
lock
ss
push
in
lret
mov
xor
push
ja
insl
push
mov
aaa
and
fstpt
add
push
jecxz
test
xor
movsl
mov
mov
loope
push
mov
jo
hlt
sbb
aam
lock
mov
jecxz
push
movsb
sbb
lock
loopne
je
sbb
push
lods
lahf
aam
leave
stos
ficomps
enter
push
enter
hlt
jbe
lahf
adc
outsl
or
repnz
imul
and
xchg
dec
jno
push
jecxz
loope
xor
repz
push
mov
lods
jl
imul
in
sbbb
inc
in
icebp
test
scas
hlt
cmp
enter
pop
adc
mov
sub
fcoms
mov
mov
add
lock
or
and
js
add
aad
sub
popf
push
sbb
and
pop
inc
je
movsl
and
cmc
xor
inc
push
daa
pop
scas
clc
adc
popa
and
in
shl
shll
mov
out
xor
sahf
daa
sub
mulb
aas
pop
mov
push
lret
jne
mov
adc
sbb
sub
mov
sbb
enter
dec
push
or
jno
mov
enter
into
push
lret
inc
adc
arpl
jns
adc
inc
sbb
flds
adc
cmpsb
outsb
cmpsb
leave
hlt
leave
add
pop
fcom
pop
dec
xchg
roll
movb
movsb
shrl
pushf
inc
out
xor
outsb
dec
push
cmp
es
movsl
rorl
pop
adc
maxps
jb
negl
push
jae
sub
cwtl
shl
xor
daa
jb
lds
bound
xor
shrl
mov
test
popa
xchg
adc
das
int
or
daa
andb
repnz
xchg
mov
lret
sbb
cwtl
sub
mul
cmpsb
push
xchg
xchg
sbbb
xchg
mov
dec
rolb
lods
xchg
insl
xchg
dec
mov
fcomps
mov
push
mov
cltd
ret
iret
bnd
ja
sbb
imul
outsb
jnp
cmp
push
lods
enter
sbb
int3
add
js
lret
stc
pop
imul
js
xchg
scas
addb
aam
xchg
div
cmp
push
pop
mov
or
wbinvd
adc
test
pop
lret
bound
mov
stc
mov
jmp
bound
fs
addl
shlb
xchg
push
xchg
ret
xchg
loop
stc
js
mov
dec
movb
fwait
adcl
mov
cmc
pop
mov
mov
or
test
incl
mov
and
jg
pop
xchg
je
call
add
mov
dec
sbb
sbb
and
jmp
mulb
dec
sub
outsl
std
les
cmp
jae
mov
mov
je
mov
ja
pop
aaa
cmp
int3
rorb
mov
cmp
mov
cmp
jle
shrb
xchg
lods
xor
cmp
cmc
add
aam
cld
adc
pusha
jge
push
push
sbb
dec
dec
fsts
outsb
les
out
push
shll
pop
xchg
xor
fs
inc
jmp
push
lock
add
push
cmp
pop
ja
sub
fld
xor
stos
loop
xor
jnp
dec
xchg
pop
fisubs
jge
jae
dec
ds
xlat
inc
cmc
out
repnz
sbb
push
push
xchg
push
xchg
xchg
pop
aas
mov
mov
aad
mov
lds
adc
mov
jb
dec
cmpsb
xchg
pop
or
and
sbb
sbb
sub
xor
icebp
xchg
mov
dec
inc
or
jp
cmp
ds
jp
push
mov
in
xchg
testl
xor
inc
daa
add
or
cmp
test
xor
mov
inc
lahf
stos
jmp
rcll
sub
daa
fcomip
insl
inc
pop
fildl
pop
sbb
ret
add
lahf
jbe
sbb
or
lcall
outsl
and
out
outsb
jnp
jge
sahf
mov
inc
movb
lret
mov
pusha
pop
es
loop
dec
dec
mov
xor
sti
popa
lahf
test
adc
pop
mov
int
outsl
rcrb
mov
popf
fwait
sbb
fst
mov
mov
adc
test
inc
jmp
fidivrs
rcrb
push
cmp
xlat
xchg
sbb
test
push
das
and
or
popa
outsb
xlat
pusha
insl
xchg
add
jnp
xorl
dec
pop
and
std
and
mov
xor
jnp
ficomps
cmp
je
fsubrs
adc
rcrl
jae
jno
adc
jp
pop
pop
movsb
or
pop
out
ss
daa
fs
dec
xor
or
push
out
or
nop
xor
mov
loop
xlat
xchg
mov
fsubrp
and
xor
inc
push
pop
imul
arpl
cmp
dec
lds
xor
rclb
mov
and
or
fisubrl
mov
jns
jns
add
test
cwtl
pop
cld
push
loope
jg
jecxz
cli
sbb
xor
das
sbb
test
sub
mov
out
outsl
pop
shr
icebp
add
shrb
and
shr
flds
pop
stos
mov
jo
and
push
shlb
loope
dec
iret
stos
jae
rorl
js
jmp
adc
mov
or
les
icebp
or
enter
repz
add
adc
fimull
bound
ret
adc
mov
mov
mov
test
push
inc
fisubs
push
fadd
adc
cmp
jno
test
rcll
rcrl
xor
push
mov
xchg
jns
push
cmpsb
inc
push
lret
outsl
pop
jg
scas
fucom
and
mov
inc
pushf
and
mov
mov
pop
mov
cld
repnz
fdivs
xlat
sub
sbb
mov
xor
out
loopne
xor
sbb
frstor
pop
movl
popa
test
and
adc
adc
cltd
mov
jne
loop
gs
outsl
mov
xchg
cmp
int
xchg
int
sub
mov
add
out
add
testl
xchg
ss
movsb
inc
cmove
out
fwait
sbb
jnp
mov
xchg
dec
out
dec
xchg
aas
in
xor
mov
test
fadds
cmpsl
mov
jnp
dec
xchg
repnz
clc
lret
fidivrl
pop
gs
lods
outsl
insb
push
add
pop
cmp
sbb
cmp
lea
jge
push
leave
fistps
push
adc
xor
dec
mov
lcall
cmpsb
cli
push
test
and
mov
push
loopne
cmp
sarb
iret
push
jl
push
leave
int3
cli
sarb
dec
push
and
mov
icebp
or
hlt
jb
dec
dec
insl
fisubrl
sti
inc
bound
xor
push
mov
in
dec
push
cmpsb
and
adc
add
shll
ds
lods
jle
shll
lcall
inc
popa
sub
dec
icebp
push
xor
cmpsb
add
stos
ror
push
mov
or
inc
out
inc
xchg
add
push
outsl
mov
idivl
lods
pop
cli
push
incl
add
insw
in
sbb
lds
loopne
mov
pand
mov
int
fwait
push
icebp
cmpl
pushf
aaa
fwait
xchg
jg
stc
std
push
mov
repnz
outsb
pop
addb
nop
xor
cmp
push
cmc
mov
out
push
xor
mov
repnz
cwtl
mov
lds
divl
int3
inc
xchg
insl
int
adc
add
mov
push
fcoms
in
sbb
in
out
ret
mov
xor
mov
sti
cmp
mov
push
or
jb
lods
aam
push
shlb
lea
push
sub
out
add
mov
fdiv
add
movl
sub
jne
dec
adc
insb
or
lcall
push
ss
cmp
push
out
adc
adc
movl
xchg
rorb
inc
aaa
or
mov
or
sarb
sbb
int3
xor
sbb
push
loop
mov
test
push
imul
and
out
adc
mov
jle
sbb
fiaddl
les
les
lcall
xor
sbb
inc
test
xchg
adc
push
cwtl
inc
ret
sti
or
push
fs
test
scas
mov
lcall
mov
insb
jne
lods
sub
jl
jbe
addb
jecxz
push
sbb
xchg
fs
mov
mov
sbb
dec
insl
xor
invlpg
lds
hlt
adc
fldcw
mov
imul
cmpl
pusha
je
rcrb
pop
push
es
pusha
push
loopne
ljmp
stos
int
data16
push
jecxz
mov
jns
add
mov
les
cmp
testl
iret
into
inc
mov
dec
daa
fisubs
movd
cmp
fsubrl
cmp
daa
ficoms
push
in
mov
cli
sub
or
mov
mov
pushf
pop
out
sbb
inc
adc
or
add
pop
es
push
test
sbb
xchg
call
jnp
in
push
mov
dec
jne
sti
dec
pop
xor
sbb
pusha
sbb
ret
fdivrs
insl
pushf
pushf
sub
frstor
icebp
es
mov
inc
pop
ja
pop
and
xor
adc
out
lahf
repnz
or
test
shrl
xchg
inc
setbe
cli
fiadds
popf
mov
popf
cs
fwait
dec
sar
dec
sbb
push
xor
inc
sub
test
ret
or
mov
rorl
in
jo
in
subl
and
ss
push
dec
aam
dec
pop
out
pop
xor
xchg
mov
mov
imul
ret
cmp
push
lret
je
inc
sbb
inc
je
outsl
add
movsb
shll
cltd
add
rcrb
xor
push
lcall
shll
and
fldt
sub
pop
das
mov
add
sbb
fistpll
sub
adc
aad
stc
mov
outsb
and
cmp
fiaddl
aam
sub
movsl
jo
sti
add
outsb
push
xchg
insl
sub
lds
iret
cmp
or
out
or
dec
out
inc
inc
icebp
sub
add
sub
jp
dec
dec
inc
pushf
inc
insl
inc
mov
pop
fwait
sbb
pop
imul
mov
xor
outsl
pop
int
outsl
sbb
sti
xchg
sub
jns
int3
cld
outsl
cld
sahf
cwtl
push
add
icebp
leave
fcmovb
aas
ret
je
pop
into
mov
jae
fstpt
dec
pop
add
jnp
xchg
shl
jno
adc
cmp
push
fs
cmp
cmp
mov
addr16
adc
mov
mov
lds
xchg
pop
sub
cmpb
jns
ds
cmpsb
lret
add
das
inc
pushf
insb
not
mov
pop
inc
mov
pop
rep
xchg
negl
cmc
sti
xlat
fistps
push
add
daa
add
dec
sbbb
push
adc
jo
mov
loopne
sub
outsb
es
jle
and
sbb
cltd
and
stos
dec
cld
xor
sub
sub
jo
add
std
pusha
push
xor
cmp
lret
inc
lods
test
mov
dec
outsl
xor
rolb
and
pushf
add
xchg
jmp
pop
in
stc
xchg
nop
lret
out
mov
das
in
jl
mov
dec
xor
jecxz
mov
test
mov
mov
rolb
jg
mov
inc
mov
addr16
mov
xchg
subl
fcmovnu
inc
rorb
add
or
mov
pop
shlb
ss
cmp
adc
mov
ret
aad
pop
lahf
pop
push
shlb
cs
aaa
dec
iret
fdivs
lret
add
mov
pop
xor
cmp
std
add
xor
inc
cmp
loopne
mov
ret
cmpsb
xor
aas
loop
pop
aas
pop
sahf
not
loope
mov
sbb
notb
push
sarb
adc
push
adc
imul
xor
out
jmp
mov
or
push
cld
loope
mov
pop
adc
out
xor
iret
mov
mov
mov
fnsave
xor
dec
ljmp
aas
js
movsl
jb
sbb
pop
jle
aam
adc
lret
sub
loop
shl
icebp
sub
xor
push
je
mov
ret
sbbb
enter
xor
lock
jns
les
push
add
outsb
lret
mov
loop
out
xlat
sub
push
fstps
adc
rcrl
pop
mov
sqrtps
stos
add
mov
stos
aas
push
sbb
inc
or
jnp
mov
sub
or
or
fdivrp
cmc
or
pop
insl
inc
repz
jb
add
iret
mov
cmpsl
jbe
out
sub
add
and
sbb
xor
les
pop
pop
dec
push
inc
sbb
adc
xor
lcall
fstps
aad
add
mov
loope
jno
lea
adc
out
xor
adc
push
loope
mov
xchg
insl
dec
adc
cld
out
aad
test
inc
cmpsb
int3
repnz
gs
into
aam
aad
push
shr
jmp
adc
pop
pusha
iret
lods
addr16
pop
outsb
xchg
jl
push
call
push
sbb
sbb
mov
int3
inc
push
jl
mov
push
scas
mov
or
out
xchg
and
and
cmp
pop
ljmp
push
mov
movsb
pop
adc
mov
int3
lcall
jp
ljmp
rcl
bound
test
fwait
mov
arpl
pop
xchg
adc
loope
pop
push
dec
add
loopne
mov
outsl
fadds
cmpsl
addl
add
into
sub
stc
ret
fcmove
jo
and
sbb
int3
inc
mov
sbb
push
and
movsb
test
push
clc
fdivrl
jbe
rcl
lahf
lret
lods
mov
mov
sbb
aam
add
cmp
scas
xlat
pop
fimuls
into
inc
ja
test
insl
scas
cmpsb
js
cwtl
jns
repnz
es
sub
sahf
les
and
sub
adc
add
jne
dec
jmp
push
add
sub
out
and
jle
xorb
popa
scas
jge
pop
push
jo
jl
mov
jg
stc
imul
scas
xor
adc
push
cmp
add
cmc
jne
mov
fsub
add
pop
push
pop
or
jne
push
nop
ja
lret
sbb
cmp
fistl
mov
jecxz
xchg
ljmpw
pop
sub
sbb
cmp
lahf
xchg
adc
ds
pushf
out
aam
lea
in
in
fdivr
das
into
add
pop
mov
aad
pop
andb
mov
sbb
push
pop
cmpsl
inc
pop
out
movsb
and
cmp
rcrl
inc
sub
xor
fisubrs
mov
mov
sbb
inc
xchg
in
or
xchg
cmp
jl
dec
xchg
sbb
cltd
ret
pushf
xchg
stos
je
clc
ljmp
iret
pop
les
jns
cli
jmp
arpl
and
adc
test
stc
es
pop
movsl
ja
jae
in
out
sub
mov
je
push
or
cltd
movl
adc
xchg
in
adc
sbb
or
jecxz
icebp
filds
mov
inc
in
xchg
out
stos
adc
fildll
out
or
push
icebp
clc
cmp
ja
pop
pop
xchg
outsl
addr16
shlb
dec
push
in
rorb
or
in
iret
scas
xchg
xchg
out
gs
sbb
mov
and
loope
test
sub
mov
jg
dec
jmp
idiv
xlat
lahf
outsl
stc
cli
jns
mov
dec
xchg
xchg
out
clc
xor
lret
push
roll
xchg
out
and
mov
jle
out
and
add
add
lret
inc
cltd
inc
ljmp
stc
es
xchg
inc
lock
push
jno
xchg
imul
dec
int3
incb
and
mov
pop
insl
scas
xor
or
test
push
xchg
and
pop
add
cwtl
insb
add
fdivs
popf
sub
xchg
aaa
jp
aam
cwtl
sub
push
add
stc
xchg
mov
jl
sbb
fdivrs
cwtl
loop
jg
dec
push
push
lret
shll
or
sbbl
mov
push
sbb
cmc
and
addl
pop
jecxz
icebp
stos
in
mov
cmp
sbb
mov
jmp
faddl
outsb
ljmp
pop
ret
sbbb
loope
pop
sbb
mov
add
cmpb
js
push
add
push
fistpll
cli
std
pop
insl
mov
and
and
add
movsl
shll
cmp
add
cmp
shlb
pminub
push
jbe
cmpsb
rclb
jg
jae
mov
xor
test
stos
dec
push
push
cmp
xchg
dec
mov
pushf
or
pop
test
fidivrs
cld
fwait
push
popf
pusha
add
cwtl
xchg
stc
fsubrl
dec
nop
push
xchg
popf
out
xchg
dec
pop
inc
mov
sbb
sub
mov
movsl
push
mov
jnp
sub
data16
push
add
icebp
rcr
loopne
dec
push
push
addb
cli
dec
inc
scas
xchg
bnd
leave
ret
test
loope
repnz
popa
dec
xor
cwtl
lret
test
jecxz
stc
fdiv
sub
cld
fwait
mov
clc
ret
cld
clc
cli
cmp
nop
lahf
xchg
and
add
fsubrl
in
inc
fs
inc
xor
mov
xor
jmp
pushf
cmp
mov
xor
jge
push
mov
in
addr16
mov
stos
inc
xchg
nop
pop
jno
daa
inc
iret
fldenv
pop
imul
mov
and
insl
or
ret
dec
jne
jbe
mov
sbb
mov
adc
sbb
jp
bound
xchg
push
inc
push
scas
rorb
in
and
ret
sahf
mov
pop
stc
cli
mov
xor
loop
pop
add
lahf
mov
inc
inc
mov
shll
sub
js
inc
test
sub
or
lds
or
or
sub
ja
cmovno
pop
sbb
jle
out
push
jno
jge
out
push
dec
je
scas
fldcw
dec
pop
lods
cmp
lds
and
xchg
inc
mov
cld
pop
cltd
ror
cmpsb
adc
mov
inc
orb
sarb
pop
cmp
addr16
cmpsb
sub
call
sub
ret
mov
mov
stos
loope
repnz
sub
shrb
enter
or
lods
pop
sub
pushf
call
lds
dec
xchg
sub
popa
divl
push
mov
lods
out
add
cmpl
lcall
lahf
xor
lds
sub
dec
add
sub
fistpll
mov
mov
push
push
mov
das
dec
mov
cmp
add
or
xor
jge
xor
lock
shrb
out
nop
xchg
add
lret
fbld
movsb
ljmp
dec
repz
les
mov
stos
hlt
mov
adc
jo
mov
cmp
pusha
stc
add
jae
ljmp
mov
jmp
jae
mov
push
xchg
and
negb
fists
pop
lock
nop
mov
stos
push
cmp
repnz
sbb
iret
push
stos
xor
repz
mov
std
cmp
pop
lahf
scas
xchg
aad
pop
mov
gs
fistps
mov
popl
cmpsl
scas
cmc
outsb
insl
cld
les
inc
shl
sub
xlat
jo
sarb
aam
xchg
out
test
stc
mov
adc
pop
lock
lock
out
or
nop
pop
sbb
std
in
cmp
sbb
mov
pop
mov
mov
jnp
dec
out
xor
daa
push
xor
mov
lahf
and
xlat
jl
loope
mov
add
aaa
shrl
sbb
xor
stos
xor
imul
cmp
jb,pt
sub
lods
adc
lock
adc
push
inc
aam
mov
rcrl
pop
push
lret
fdivs
lahf
and
decb
pop
inc
in
xchg
adc
mov
xor
add
sahf
shlb
lea
jbe
pop
jmp
sub
rcrl
add
pusha
push
orb
mov
pop
pop
in
jl
lcall
push
test
int3
mov
mov
iret
dec
cmpsl
scas
jecxz
test
insl
test
push
xchg
lods
in
xchg
out
mov
inc
jecxz
cmp
cwtl
dec
sbb
std
mov
jnp
pmulhuw
out
shlb
cs
sti
repnz
aas
sahf
adc
push
inc
test
add
cmp
xchg
adc
push
dec
mov
call
jp
and
adc
hlt
jae
or
dec
mov
mov
popa
inc
mov
in
cmpsb
mov
subb
int
testl
mov
imul
jb
jae
fcmovu
add
loope
jl
fdiv
ja
adc
cmpsb
add
jne
addps
xor
pop
add
or
dec
out
lods
inc
inc
pop
lcall
xchg
inc
aad
dec
mov
jno
push
bound
add
xor
pop
jge
mov
shlb
loope
inc
ljmp
mov
mov
push
jge
inc
and
inc
jmp
mov
shlb
ret
inc
arpl
stc
xlat
jmp
fdivl
cmp
pop
jnp
int
and
mov
cmpsb
sbb
loopne
fsubr
add
aas
and
push
shr
pop
hlt
test
mov
lock
popf
mov
fwait
arpl
arpl
pop
and
add
xchg
pop
lret
daa
mov
xchg
aam
dec
and
adc
ret
mov
mov
mov
sbb
jp
inc
pop
or
cmp
popl
and
add
mov
jne
dec
push
sbb
dec
mov
push
or
int
dec
xor
icebp
jbe
cmp
jbe
and
xor
rcrl
sub
sbb
jecxz
adc
pop
or
into
mov
addr16
jae
jmp
cwtl
mov
adc
aad
stos
pop
sbbl
jo
sahf
movsb
adc
adc
xchg
cmp
adc
add
mov
jmp
or
mov
lea
loop
xorb
or
push
add
push
jmp
jmp
mov
lret
test
mov
sbb
or
push
sbb
repz
cs
jmp
movsb
mov
pusha
cld
stos
mov
test
cmpsl
pop
sub
daa
xchg
sub
fwait
data16
xor
push
inc
lret
jle
ficomps
fstpl
lea
inc
dec
xchg
iret
adc
cmpsl
xchg
sub
mov
inc
jmp
sub
lods
outsl
bound
std
mov
ja
push
jno
jno
add
pop
fstpl
lcall
rcrl
mov
add
jg
xor
sbb
mov
andb
add
mov
flds
xor
pop
mov
dec
sub
pop
dec
and
sub
sbb
loop
outsl
mov
jp
sbb
mov
es
shlb
and
inc
imul
jge
lret
jl,pt
lahf
sti
mov
or
outsl
lret
icebp
hlt
push
shrl
outsb
incl
aas
mov
or
lret
rorl
cmp
mov
pop
jecxz
xchg
pop
fdivrl
ljmp
sbb
lods
mov
movb
add
nop
test
ljmp
push
out
jae
lcall
xchg
or
jge
cmp
nop
stos
jg
int
rol
and
mov
sahf
pop
mov
pop
ja
fildl
and
mov
xor
cmc
out
jne
insl
subb
gs
sub
jne
mov
mov
cmp
fcompl
leave
add
dec
addr16
stos
ret
sarl
in
mov
enter
xchg
das
and
pop
lods
add
jle
pop
xchg
and
sahf
pushf
cli
dec
aad
js
adc
dec
popf
sbb
push
shrl
stos
not
mov
sub
test
sbb
popa
dec
imul
sbb
pop
pop
cmpsb
jbe
xor
push
aas
dec
and
je
mov
xchg
push
jmp
dec
jge
arpl
js
pop
xchg
adc
clc
mov
mov
ss
cs
imul
andb
mov
fsub
cmp
and
xchg
or
faddl
or
jno
mov
fadds
sbb
pusha
cmp
test
jecxz
xor
daa
mov
dec
pop
arpl
popa
xchg
jb
das
jnp
xchg
in
add
add
adc
xorl
test
cmpsb
imul
jns
daa
add
dec
inc
es
sub
xlat
sub
lret
xor
mov
sbb
push
fwait
jmp
int
into
imul
loopne
stos
push
mov
in
mov
and
jp
inc
addl
push
pop
fstpt
cmp
loop
cmpsb
stos
sbb
xor
xor
jae
fdivl
xor
push
scas
out
dec
sti
pop
pop
clc
les
inc
pop
xchg
adc
pop
push
subl
in
mov
testl
sub
push
mov
leave
mov
lret
mov
js
in
mov
or
push
add
loope
and
js
mov
lds
jmp
or
pushf
ja
mov
xchg
jb
imul
lock
fisubl
call
xor
out
mov
mov
ljmp
mov
sbb
xlat
jl
xorl
andb
jno
adc
xchg
mov
mov
fwait
test
lock
std
xor
cmpsb
dec
adc
aam
jle
ds
mov
lcall
das
adcl
xchg
sbb
mov
out
mov
cld
test
ja
push
mov
xlat
xor
fs
mov
test
jg
enter
loop
lret
or
popa
pop
push
sbb
xor
add
pop
in
repnz
jae
pop
cwtl
popa
pop
xor
and
sub
arpl
fldenv
nop
cli
xchg
scas
std
push
sti
shrb
mov
int
pop
pop
jns
lock
xchg
add
mov
pop
std
jbe
mov
jmp
xor
xchg
xchg
cmovle
inc
vcvttps2dq
sub
fdivl
pop
in
xchg
shl
sbb
xchg
orl
sub
imul
out
dec
dec
or
jne
jne
outsb
sti
repz
cltd
xchg
lret
jge
mov
int3
cmpsb
lcall
aas
rcl
mov
mov
mov
test
pop
inc
mov
nop
push
in
xchg
and
cmp
mov
mov
dec
mov
sbb
adc
push
mov
sub
add
mov
rolb
push
pop
lea
addr16
cwtl
mov
movsb
cmc
mov
imul
fnstsw
bound
dec
std
push
xchg
inc
adc
test
sub
pusha
adc
cmp
aam
push
inc
ljmp
test
jae
adc
xsaves
loop
inc
std
lock
mov
sbb
test
jbe
loop
std
sub
out
xor
mov
adc
xchg
and
xchg
inc
adc
pop
sbb
testb
sbb
mov
xor
ret
pop
scas
je
sub
pop
jno
in
cmc
fadds
pop
cmp
adc
ja
ja
iret
and
pop
lret
mov
sub
jge
xchg
xor
sub
outsb
adc
xchg
sbb
mov
dec
cmp
pop
fsts
mov
adc
mov
add
or
and
and
pop
sbb
fistps
es
lret
enter
jmp
call
dec
jb
sbb
sub
aas
int3
imul
arpl
push
ficomps
iret
dec
dec
ss
mov
inc
fidivrl
mov
jle
push
jnp
dec
int3
or
push
xlat
xor
and
jp
es
test
pop
and
lea
call
ljmp
jle
xchg
fstl
fwait
insb
ljmp
push
mov
add
xchg
movsl
std
cli
inc
add
adc
xor
add
das
adc
and
ljmp
pop
mov
jns
sub
cmp
jl
push
stc
mov
jl
jo
idiv
repz
fstpl
jge
es
popf
and
repz
xchg
sbb
out
sbb
mov
rcrb
hlt
popa
cmc
loop
and
inc
fldcw
push
sub
push
jmp
push
sub
outsl
stc
lods
negl
mov
sbb
stc
cs
rorb
andb
lret
ret
jmp
dec
aas
and
xor
xor
pop
shlb
enter
xor
jne
cli
xor
lea
dec
add
mov
pop
inc
or
scas
adcl
and
pushf
pop
inc
push
sbb
insl
loop
cwtl
sub
movsl
xor
jb
push
inc
popf
out
xchg
pop
cmpsb
mov
adc
lods
fs
add
jno
dec
dec
jecxz
aaa
or
sbb
int
sub
mov
push
int
push
into
sub
pop
mov
cmp
push
ficoms
gs
ds
icebp
adc
mov
out
mov
sub
jno
shll
pop
mov
cmpsl
scas
hlt
mov
pop
sub
inc
xor
or
movsl
push
xchg
fs
add
nop
outsb
pop
ss
stos
es
inc
jl
mov
mov
jae
shrd
pop
hlt
pop
fldl2e
mov
push
jb
pushf
sahf
add
cmp
stos
adc
cmp
ret
js
jne
xor
or
out
adc
pop
mov
cld
outsl
in
mov
popf
repz
and
sbb
push
es
leave
test
dec
xchg
in
jg
mov
fwait
mov
mov
aam
cltd
and
shlb
adc
sbb
xlat
or
adc
fisubl
jns
jg
sbb
jbe
dec
loopne
pop
loope
xlat
nop
out
pop
out
aam
sbb
push
adc
mov
push
or
aam
pop
outsl
lret
push
pusha
fucomp
pop
xor
dec
rdseed
xor
ret
fnstcw
pusha
setp
imul
test
das
test
es
mov
and
std
lods
aaa
mov
mov
cli
arpl
adc
and
mov
js
sub
std
push
xchg
or
sub
push
js
lods
rclb
inc
sbb
mov
call
sub
nop
jno
in
loopne
outsb
jg
faddl
cmp
dec
mov
stos
fsubrl
ja
repz
jno
pop
xchg
push
lock
lret
xchg
dec
inc
leave
xor
pop
mov
sbbl
xchg
cmp
mov
sbb
lahf
js
sti
jmp
push
sub
sbb
xchg
fucomip
xchg
jp
jmp
jns
scas
jns
dec
clc
out
fisttpl
inc
mov
sbb
and
jp
adc
pop
pusha
mov
dec
pop
out
out
jne
addl
sub
mov
repz
push
cltd
inc
aad
adc
mov
ficoms
push
jge
add
mov
cmc
inc
xlat
ja
cwtl
in
testl
inc
test
notb
repz
aam
xor
mov
cmp
sbb
cld
repnz
insl
es
leave
out
sub
cmp
arpl
xchg
mov
dec
sbb
mov
jecxz,pn
into
out
loope,pt
in
inc
jge
jl
jb
inc
mov
movsl
stos
inc
xchg
mov
mov
xchg
or
pop
std
aam
mov
xor
ja
cli
or
jecxz
add
outsl
rorl
ljmp
idiv
cmp
testl
cs
les
mov
ds
pusha
scas
push
lcall
leave
mov
shrb
fcmovu
and
xchg
call
or
mov
scas
les
pop
hlt
repnz
out
aaa
loope
test
mov
xchg
jne
test
push
mov
push
enter
je
fwait
hlt
mov
shl
ret
aam
xchg
clc
bound
lods
mov
gs
sub
jo
stc
inc
imul
test
lcall
sub
dec
adc
push
ror
sahf
sub
mov
sub
jne
cmp
dec
lea
cmpl
fisubrs
or
xor
test
mov
xchg
pop
and
add
xor
mov
sbb
sti
cmc
lods
dec
mov
or
inc
jp
mov
ret
scas
xor
test
leave
dec
lret
sbb
inc
adc
jne
imul
mov
sub
int3
jl
mov
dec
sub
cmc
in
pop
xor
movsb
xchg
mov
or
lods
or
or
pop
outsb
gs
mov
push
add
scas
iret
fdivr
jg
push
ja
mov
dec
adc
sti
cli
test
int
jp,pn
daa
leave
addr16
jmp
cmp
and
cmp
dec
adc
sub
mov
xor
cwtl
addr16
stos
mov
push
in
jae
jle
nop
sub
mov
xchg
pop
gs
daa
pushf
ficoml
mov
fisubl
cwtl
clc
cmpsb
inc
pop
and
or
lods
test
dec
cmp
lret
shlb
gs
test
jns
adc
mov
adc
mov
push
lea
mov
xor
std
scas
test
sbb
adc
insb
and
mov
mov
shll
lret
pushf
mov
add
das
lods
into
dec
push
fwait
pop
or
in
dec
movsl
lahf
mov
inc
hlt
xchg
jnp
fnsave
mov
daa
enter
jnp
mov
cmp
aad
in
aaa
nop
lods
ret
push
enter
jmp
es
pop
aas
shl
xor
insb
aam
std
repz
xchg
push
push
inc
cmp
and
mov
pushf
sbb
aam
outsb
pop
mov
ret
pop
dec
ss
or
sbb
pop
out
mov
lods
push
movsl
sbb
cs
in
pop
dec
or
icebp
sahf
fstpl
inc
pop
lret
xor
mov
std
inc
ss
gs
pushf
jmp
shrl
cmp
mov
pop
mov
loope
add
out
mov
dec
jno
push
mov
xchg
divl
mov
xchg
push
data16
dec
lods
out
inc
inc
or
xchg
pop
jmp
shll
nop
adc
call
aaa
cmp
inc
leave
sub
push
aaa
add
imulb
in
lret
and
inc
testb
adc
lds
mov
loop
imul
outsl
jns
inc
dec
lea
popf
aam
mov
movsl
leave
push
and
jl
out
dec
jae
aaa
sahf
cmp
push
mov
pushf
add
jmp
xor
cmp
and
add
divb
imul
test
aam
mov
jg
and
mov
sbb
xchg
lret
cs
sbbb
sahf
aam
movntq
pop
andb
mov
or
push
add
inc
ret
push
aas
lea
cmp
xor
lahf
and
lods
sahf
rcll
rclb
dec
movsl
js
and
test
mov
dec
jl
shl
mov
sbb
mov
mov
and
movsb
outsl
ret
lahf
movsb
idivb
repnz
data16
jbe
and
cwtl
xchg
mov
scas
jecxz
andl
cmp
mov
adc
sub
cld
jae
out
adc
push
dec
in
jae
xor
stos
test
cmp
in
add
iret
pop
test
and
int
lahf
movsb
ljmp
add
outsl
or
enter
lcall
xchg
inc
in
hlt
nop
cmp
insl
or
jmp
dec
outsl
lahf
xor
ss
cmp
cs
inc
insb
add
inc
stc
pop
xor
lahf
test
mov
jae
add
test
push
fwait
mov
xchg
stos
jg
push
aad
xchg
cmpb
cld
loop
bnd
push
test
xor
stc
repnz
sbb
cmp
and
mov
fdiv
mov
call
dec
loope
sar
sub
mov
jnp
test
nop
pop
xor
loop
arpl
faddl
adc
popf
fcompl
lds
jno
jb
inc
jne
scas
jns
shll
fistl
out
jnp
mov
aad
xlat
or
mov
sbb
shr
cmp
sbb
jle
cwtl
and
pop
int3
cli
ss
push
pop
mov
cmp
sub
ljmp
jp
pop
xor
arpl
or
xchg
adc
gs
out
push
ss
mov
sub
sti
push
in
std
mov
aaa
jno
push
add
jb
out
leave
inc
jecxz
andb
out
sbb
mov
mov
dec
cld
sti
and
mov
dec
jle
fbld
jge
std
jge
test
mov
jmp
inc
inc
add
mov
repz
lahf
jb
cmc
adc
and
jae
fisttps
push
and
inc
fsub
add
pop
mov
repz
jo
pushf
mov
gs
or
fisubrl
loopne
outsl
add
testb
or
rolb
enter
mov
shll
inc
push
mov
scas
mov
dec
jmp
push
dec
jae
pop
jbe
stos
sub
cmp
jo
mov
ret
push
enter
sbb
pop
std
pop
iret
push
dec
push
scas
lahf
xor
jp
cli
jne
sbb
idivl
xchg
test
leave
nop
mov
ja
sti
jne
rorb
cwtl
insb
jo
int3
xchg
push
inc
gs
stos
lret
inc
jg
cmp
test
sbb
jecxz
rcrb
data16
cmp
and
insl
cs
or
push
and
xchg
loop
jmp
inc
and
and
cwtl
js
xchg
in
push
push
pushf
cld
mov
ret
jge
pop
mov
ret
std
cmp
pop
xorl
stos
fldcw
in
ja
pop
pusha
in
push
lcall
push
mov
mov
dec
repnz
cmpsb
fldenv
push
adc
or
cld
int
repz
cwtl
sbb
xchg
or
sbb
enter
insl
dec
push
lods
ss
inc
lcall
jne
xchg
bound
testb
jl
shrb
jp
repz
addr16
xor
add
xchg
rorb
dec
push
pop
out
mov
mov
sbb
mov
pop
inc
rclb
rolb
fistpl
addb
sbb
inc
cld
mov
popa
add
push
jns
mov
std
outsl
add
sub
inc
inc
in
loope
repz
mov
push
mov
inc
test
stc
loope
add
lahf
add
test
jo
cmp
xor
push
icebp
inc
and
mov
lret
outsl
cmp
data16
xor
or
dec
movsb
add
adc
or
sahf
add
mov
mov
aas
sbb
std
je
and
or
daa
adc
cli
push
call
ljmp
fsub
mov
out
addr16
push
flds
dec
aad
loopne
inc
daa
cmpsb
xchg
inc
nop
mov
xchg
or
pop
inc
push
out
add
mov
idivb
dec
xchg
add
addl
push
xor
mov
dec
adc
cmp
inc
sbb
xchg
hlt
jnp
mov
rcrb
out
daa
mov
arpl
sarl
dec
xlat
mov
dec
add
dec
fucomp
add
add
inc
sahf
loope
mov
xchg
mov
loope
adc
nop
cmp
es
aas
enter
add
mov
adc
mov
push
xchg
stc
lds
into
or
outsl
or
xlat
add
pop
adc
push
lret
shl
pushw
sbbl
or
aas
xchg
rcll
or
cmp
inc
mov
rclb
mov
inc
xchg
dec
cmp
xchg
scas
sub
add
aad
jmp
dec
xchg
mov
in
data16
dec
mov
dec
adc
movsl
inc
or
movsl
push
fiaddl
jmp
imul
jecxz
push
jmp
mov
inc
aas
dec
mov
fimull
push
sub
xor
pop
shl
xor
outsb
bound
movsb
repz
inc
daa
outsl
aas
cmp
fidivrl
lahf
call
clc
sahf
flds
lock
cs
aad
in
xor
pop
xor
push
cmp
xchg
sbbl
mov
insb
stc
mov
xchg
ss
xor
jge
lcall
push
xlat
cld
jp
sub
xchg
sahf
lret
inc
cld
das
adc
and
pusha
adc
into
pusha
jne
pop
sub
or
xchg
jb
xchg
cltd
cld
mov
inc
add
ret
jmp
les
jo
in
or
out
rclb
adc
adc
jg
stos
dec
or
sbb
cld
fmull
idivl
cmp
loop
adc
xrelease
addl
cmp
xor
dec
shll
loope
aad
push
sti
xor
fwait
sarl
es
mov
pop
adc
loopne
call
pop
hlt
inc
xor
test
inc
pushf
pushf
neg
xor
push
mov
fisubs
mov
push
into
lcall
dec
insb
xchg
push
insl
divl
xchg
fucomi
loopne
and
mov
adc
lea
mov
addr16
jae
dec
mov
pop
mov
cmp
push
repz
fiaddl
xchg
pop
sub
repnz
push
sub
push
xor
xlat
lahf
fisubl
rorl
insb
inc
cmp
insb
mov
mov
mov
insl
xor
push
and
ret
add
es
cld
ss
jl
in
sub
xchg
int3
sub
mov
testl
xor
scas
inc
mov
sbb
jns
aas
imul
call
push
push
xchg
mov
les
mov
push
popf
mov
sub
lcall
push
stc
jmp
dec
sbb
xor
sbb
mov
jb
inc
popf
dec
sub
sahf
es
and
imul
add
add
sub
nop
nop
dec
test
pusha
ret
mov
add
iret
jg
mov
or
scas
cltd
mov
popa
fldenv
xor
or
mov
add
popf
xchg
dec
out
sub
out
mov
cli
push
pop
push
mov
push
imul
add
arpl
adc
xchg
loopne
dec
aad
stos
mov
lods
out
xchg
inc
stos
ss
lcall
lcall
adc
mov
sbb
dec
rcrl
imul
add
incl
sub
loop
xor
nop
xor
cltd
vunpcklps
shl
call
jno
rcrl
and
cmp
inc
sbb
lods
mov
jbe
jne
ret
push
mov
adcb
lahf
shrb
inc
lret
insb
push
xor
lds
push
sbb
jmp
adc
and
cltd
daa
xchg
popf
cltd
sbb
loop
cltd
fdivrl
lret
test
sub
sub
push
lea
sub
fmull
sub
shll
sbb
sbb
repz
insl
mov
mov
int
mov
sbb
and
or
lea
add
dec
mov
sub
call
imul
iret
dec
imul
das
adcl
xchg
push
das
or
and
stc
cmp
pop
into
push
aaa
jl
addr16
aam
cvttps2pi
sbb
idivb
dec
adc
inc
test
aam
addb
dec
add
xchg
jge
rorl
outsl
bound
push
cltd
sub
xor
and
lret
jnp
sbb
insb
pause
loop
adc
cmpsl
imul
fmul
mov
lods
fnsetpm(287
push
mov
jo
jg
divl
adc
dec
jp
pop
movsb
lret
hlt
cs
in
xlat
das
xor
cwtl
stos
rclb
xchg
mov
cmpsl
addr16
shr
test
push
mov
mov
sbb
ret
add
pop
iret
out
xor
push
cmp
cmp
and
sete
in
out
adc
cmp
mov
sub
sahf
mov
ds
dec
sahf
loop
pop
mov
lods
mov
outsb
pop
lock
insw
test
insl
pusha
jecxz
add
jmp
cli
insl
into
aas
pushf
enter
xchg
pmulhw
mov
mov
dec
es
rolb
jne
scas
and
jns
pop
push
fildl
jge
add
pop
xchg
cmp
or
ror
push
scas
xor
fldenv
jbe
push
leave
pushf
data16
decb
inc
cmp
cmc
and
jno
push
xlat
add
adc
add
stos
sti
mov
sub
shll
outsb
into
mov
cmc
and
jns
rcrl
xor
nop
xor
lock
adc
shr
shrb
sbb
or
out
cmpb
dec
std
push
inc
call
dec
mov
inc
mov
push
adc
jecxz
das
dec
add
dec
std
or
jno
dec
nop
dec
xchg
inc
mov
vminss
sub
push
jmp
sbb
roll
test
mov
pop
sub
leave
pushf
mov
popa
imul
lods
fsubrp
out
push
fists
cs
iret
daa
and
cli
repz
xchg
repz
lods
leave
xor
movsl
js
arpl
xor
mov
xor
sbb
or
mov
sahf
aam
cmpsl
int3
push
insb
pop
push
cwtl
inc
sub
xor
repz
cmp
dec
jl
movsl
clc
and
cmp
repnz
xchg
inc
das
add
add
clc
ds
leave
xchg
jg
lods
inc
movntps
fdivs
add
pop
out
cwtl
pop
adc
aaa
orl
push
pop
cmp
push
pop
andb
jle
lret
lahf
push
ja
mov
pop
in
dec
jmp
adc
xor
addr16
pop
vhaddps
xchg
loope
push
scas
jmp
xchg
mov
push
out
or
xchg
lods
cmpsl
xor
ljmp
flds
cmp
aad
pop
and
stc
add
icebp
jge
outsl
mov
pop
dec
cli
cs
mov
jmp
lods
jns
add
push
dec
and
repz
stc
sbb
adc
test
mov
mov
js,pn
es
in
push
ja
scas
sub
inc
fwait
dec
jb
inc
shll
push
rol
rcr
dec
xchg
and
pop
fnstenv
adc
add
fsubr
xchg
pop
adc
test
icebp
inc
xor
inc
or
mov
outsl
fs
out
jns
jne
lcall
sub
fwait
cltd
push
js
pop
mov
pop
mov
dec
das
xor
xor
test
nop
loopne
push
inc
xchg
pop
add
inc
rcrl
repz
jp
int3
inc
test
daa
ja
sti
dec
test
mov
cmc
jp
jo
sbb
ficoml
lcallw
movb
xor
or
add
push
jne
aad
in
fsubr
dec
jl
cmpsl
sti
int3
pusha
push
mull
fcmovbe
insl
jo
sbb
mov
nop
insl
cmp
ret
pop
push
bound
push
lods
add
mov
aad
in
jl
popa
ret
fisubl
fiadds
push
lcall
popf
dec
rcrl
roll
xchg
rcll
cmp
repnz
mov
stos
loop
inc
jmp
ret
xor
pushf
repnz
pop
xor
enter
test
inc
push
adc
and
ror
out
ss
mov
pop
sub
and
jae
es
add
in
iret
xchg
sbb
inc
push
xchg
inc
jge
daa
je
or
fmuls
cs
mov
or
nop
sbb
sahf
push
int3
dec
loopne
cmp
dec
loopne
jnp
xchg
in
sub
cltd
pop
arpl
xchg
sbbb
leave
mov
push
pop
push
aam
sti
or
mov
stc
mov
mov
cmp
imul
mov
jge
xor
and
jb
mov
push
mov
int
jl
mov
mov
sti
test
pop
mull
testl
lock
xor
jnp
sbb
jnp
mov
xchg
dec
ds
sbb
cmpsl
int3
and
test
push
xchg
xchg
mov
movsb
xor
sbb
aad
xchg
cmp
mov
sbb
xchg
xor
xchg
jne
mov
xchg
lea
cmp
or
jbe
push
pop
pop
test
inc
or
fldcw
stos
outsb
xchg
lahf
jg
mov
popf
sbb
xor
out
data16
push
shll
push
in
push
nop
mov
add
xchg
sbb
fidivrl
inc
enter
andl
data16
sub
divb
outsb
movsb
loop
insb
jno
aaa
mov
sarl
cmp
mov
push
mov
mov
sar
rorb
jg
jg
xchg
in
movsb
mov
out
ds
loope
inc
popa
imul
push
rcll
jge
jns
jne
mov
sti
aam
pop
mov
ds
mov
aad
jmp
test
shll
inc
aaa
stos
lcall
mov
test
or
xor
jl
push
add
outsb
out
push
into
and
push
inc
add
jae
movsl
insb
sub
xchg
enter
int3
enter
mov
lcall
movsl
add
cmp
jmp
call
loop
lcall
scas
dec
dec
les
fcompl
fidivrs
xor
pop
mov
movsl
jge
or
dec
jmp
stos
and
and
mov
sub
mov
mov
pop
sub
jp
dec
jns
mov
xchg
mov
cmpsb
testl
dec
shl
dec
std
stc
mov
xor
dec
jmp
push
cwtl
std
cmp
mov
push
lds
and
out
sti
test
sahf
sub
jbe
add
mov
xor
xchg
jno
imul
sbb
out
xor
mov
mov
sbb
mov
pop
sub
cli
psubusw
insb
pop
dec
hlt
idivb
in
mov
jg
aas
adc
jg
test
xchg
outsl
push
adc
notb
inc
pop
mov
adc
fs
pop
sbb
add
out
lret
bound
or
push
jp
fildl
inc
loop
mov
xor
out
cmp
pop
mov
and
push
cmpsl
cmp
sahf
xlat
jl
ds
fisubrl
sarb
fsubrl
stc
push
les
add
push
in
xor
daa
pop
dec
out
mov
in
int3
subl
shll
ja
jl
mov
push
push
sub
inc
mov
out
push
and
mov
adc
test
dec
shrb
addr16
lods
sub
outsl
jecxz
mov
push
loop
call
repz
inc
popf
lods
les
cmp
jl
cmp
add
mov
into
mov
dec
shr
xchg
iret
push
push
inc
scas
pop
mov
sub
inc
lret
movsb
and
and
dec
mov
or
stc
sub
imul
test
enter
int
mov
mov
repnz
jbe
gs
movsb
xor
pop
out
inc
and
mov
pop
aaa
pop
outsb
mov
outsb
xchg
cmp
xchg
push
les
cwtl
mov
not
cli
xchg
cli
push
outsb
mov
ficoms
jg
mov
mov
repz
sarl
ret
add
cmpsb
adc
sub
mov
dec
push
ret
loope
aaa
push
mov
scas
push
sbb
push
cld
js
push
sbb
mov
shl
sbb
jae
mov
sub
pop
mov
push
mov
mov
sub
cltd
xchg
dec
cmp
xor
dec
jae
sbbb
sbb
inc
out
cmp
push
in
loope
pop
stc
push
xor
dec
or
or
or
in
xchg
sbb
addr16
and
pop
xchg
mov
cli
dec
fdivrl
adc
sub
xor
cmp
popf
imul
mov
jb
mov
sub
mov
dec
and
jne
lds
test
ret
lcall
loope
inc
mov
sbb
fcompl
pop
inc
cli
ss
movsb
repz
int
cmp
rolb
cld
test
add
mov
or
mulb
cltd
mov
push
xchg
inc
aas
or
sub
insb
push
cmp
data16
mov
and
imul
clc
je
push
pop
sbb
and
dec
jp
xor
insl
sub
pop
or
andb
sub
gs
es
mov
add
pushf
fwait
arpl
jge
pop
int3
cwtl
mov
pop
imul
imul
bound
sbb
mov
sub
shll
or
cmpb
xchg
inc
xlat
xor
or
or
or
pop
push
ljmp
in
mov
test
dec
inc
fs
sarl
pop
and
fdivrl
ret
in
outsb
adc
enter
iret
les
dec
orl
popf
mov
out
fiadds
call
es
push
nop
xchg
fs
or
pop
cmc
xor
das
into
mov
mov
add
std
andb
cli
push
fsub
bound
cmpsl
cld
mov
push
fidivrl
fcomip
andl
js
imul
into
insb
or
out
push
nop
jle
dec
flds
fimull
shl
les
pop
jl
jp
pushf
icebp
in
mov
cmp
rorl
mov
sbb
js
xchg
cmp
test
das
imul
adc
sahf
push
xchg
cmpsl
jnp
push
mov
sarb
test
ret
add
inc
push
adc
sbb
mov
popa
dec
and
xor
ret
dec
cmp
test
mov
mov
sahf
ds
xchg
add
cmpsl
pop
mov
cmc
clc
aaa
cmp
gs
push
lods
xchg
leave
add
mov
xchg
jge
jbe
xor
outsl
arpl
loope
push
ss
push
jno
leave
push
jno
ret
int3
int3
xlat
ret
xor
mov
jb
out
fsubl
sub
jle
lcall
js
or
mov
insl
les
aas
pop
nop
insb
aas
mov
jae
inc
sarl
jo
je
mov
or
popf
cmpsl
test
add
mov
shlb
push
mov
pop
test
xor
rclb
rol
je
sbb
out
outsl
xor
stos
jp
es
ljmp
lock
in
imull
adc
or
stc
add
lods
mov
xor
dec
or
lahf
repz
por
aad
xor
sar
iret
out
testb
mov
jo
insb
jmp
aas
jmp
fiaddl
cli
mov
lret
cltd
mov
or
movsb
cld
js
clc
add
or
int
dec
pop
jae
mov
xacquire
arpl
ss
leave
inc
mov
lds
scas
outsb
inc
mov
sbb
pop
dec
popf
rcrb
loop
dec
adc
movsl
jge
dec
mov
packsswb
rorl
xchg
hlt
daa
push
out
ficomps
sub
repnz
repz
adc
cli
xchg
pop
and
push
inc
roll
cmp
add
mov
lock
jmp
push
sub
cmp
jg
and
pop
mov
lds
and
sbb
inc
lahf
add
or
sbb
enter
lahf
xchg
popa
hlt
jecxz
js
pusha
sbb
fstpl
mov
pop
sub
pop
fisubrs
adc
dec
ja
or
test
or
adc
jg
stos
jle
ds
out
jmp
shlb
or
and
xchg
pop
or
mov
push
mov
icebp
rclb
rolb
mov
rdmsr
xchg
adc
xor
sub
adc
lds
push
xor
mov
and
sbb
sbb
pop
jno
lcall
or
cmp
lea
xor
xchg
mov
cmp
test
mov
fimull
cli
pop
sbb
icebp
mov
mov
and
or
pop
push
xor
mov
subl
pop
jmp
out
cld
mov
xlat
stos
pop
ds
add
mov
sub
adc
clc
mov
lds
and
mov
jp
std
add
into
pop
jecxz
jl
cli
and
incl
and
hlt
clc
cmp
jo
imul
cmp
or
push
dec
jmp
jg
fs
je
or
cmp
mov
sub
loop
insl
xchg
mov
add
sub
jae
cld
out
test
cltd
imul
mov
lea
loopne
or
mov
and
fcomip
mov
push
mov
in
gs
cmp
jle
xchg
cmp
and
mov
out
shlb
push
or
sub
mov
cmp
je
mov
pop
pop
mov
loope
jb
repz
pop
fsub
cmc
std
imul
sahf
jl
pop
das
in
jp
stc
lods
lcall
mov
ljmp
cmpsb
xor
xor
lods
adc
push
sbb
int
pop
ds
pop
loope
mov
jns
and
iret
jno
je
xchg
push
xor
inc
rorl
imul
leave
inc
mov
je
fwait
xor
jge
shll
mov
mov
and
mov
push
xor
inc
dec
cmp
inc
js
adc
out
daa
mov
in
push
jp
push
pushf
bound
dec
and
insb
addr16
movsb
aas
pop
je
push
loope
pop
lea
notl
pop
iret
lock
xor
sub
or
jbe
dec
sub
pop
mov
fistl
sarl
xor
mov
ljmp
mov
jb
imul
and
stos
dec
dec
icebp
fcompl
or
addr16
jl
or
sub
jns
mov
dec
add
test
jl
dec
sub
pop
xor
out
imul
ret
jp
insl
cmp
or
mov
leave
stos
out
jecxz
out
mov
cs
sub
mov
pop
pop
or
xchg
dec
lods
mov
shll
jmp
ljmp
lcall
mov
imul
dec
outsb
scas
push
xchg
jae
out
adc
add
mov
cwtl
push
lcall
out
rol
dec
faddl
pop
push
in
jo
mov
cmp
popf
adc
add
aad
imul
jae
lea
xchg
pop
jno
sbb
fwait
daa
push
dec
jbe
inc
pop
mov
or
push
es
push
pop
shlb
je
pop
adc
rcrl
nop
subb
out
dec
rcr
popa
jae
xor
pop
loop
gs
mov
pushf
ficoml
push
pop
mov
nop
bound
xlat
icebp
pop
sbb
aas
sub
lds
add
jae
call
cmpsl
popf
cmpneqps
jnp
arpl
mov
mov
ds
andl
stos
mov
test
aas
sub
pushf
clc
and
rcll
lret
cltd
mov
mov
rorl
xchg
pop
sahf
inc
dec
fsubrl
and
push
sub
js
xchg
fsubs
gs
xor
add
das
mov
inc
add
imul
mov
call
push
mov
test
sbb
pop
scas
sbb
out
mov
cld
dec
mov
mov
xchg
mov
dec
mov
mov
jnp
fcmove
cmp
pop
mov
adc
sbb
cmpsl
dec
sbb
lods
cmc
fidivrl
stc
cmp
xchg
movsl
cs
into
aas
push
fnsave
sbb
lahf
out
xor
jg
mov
cli
xchg
std
fldl
popa
rorb
std
nop
mov
popf
fisubrl
daa
cld
test
push
jge
dec
push
inc
adc
sahf
xor
push
pop
jbe
mov
sbb
loopne
xor
test
in
aam
movsb
sub
mov
aam
add
xor
scas
jecxz
adc
mov
lret
hlt
jg
cmp
push
imulb
bound
popf
data16
insl
mov
mov
ret
pop
in
out
adc
sub
fldcw
pop
sbb
mov
xchg
std
sub
inc
push
mov
daa
push
mov
sub
jecxz
cmp
bound
jecxz
mov
adc
hlt
jle
add
and
cwtl
test
add
xchg
adc
sbb
dec
in
and
xchg
or
cmp
inc
push
sbb
pusha
andb
or
push
push
scas
xchg
insl
imul
je
xor
xchg
loopne
loop
clc
or
dec
pop
scas
in
lods
ljmp
mov
push
hlt
push
inc
test
pop
shrl
mov
aaa
psubd
shll
roll
outsl
sbb
cmc
jl
sub
mov
dec
mov
sbb
xchg
sbb
mov
jg
lcall
dec
cvtps2pd
imul
int
add
jo
cmp
pop
stc
int3
add
and
push
test
lret
jns
mov
and
in
js
movsb
out
push
push
jle
adc
cmpl
mov
xchg
inc
jb
push
mov
sub
pop
push
iret
pop
leave
push
lods
inc
rol
sub
leave
mov
aas
icebp
mov
dec
cmp
pushf
lcall
outsl
ja
push
mov
rolb
xchg
jbe
push
pop
pop
cmp
pop
sub
xor
jl
stos
or
cld
mov
dec
fwait
mov
pop
sbb
push
int3
adc
mov
aam
push
xor
and
gs
jl
test
cmp
icebp
mov
scas
stos
sahf
sahf
dec
idivl
jo
in
xor
ljmp
xlat
ja
cmp
xchg
inc
lret
add
iret
push
mov
mov
push
mov
adc
test
cwtl
das
sbb
repz
lds
sbb
sbb
loop
mov
lret
loope
sbb
mov
dec
call
cmpsl
cmp
sub
bound
sub
jo
inc
add
sub
popf
iret
xchg
ret
xchg
out
rorl
inc
mov
jb
rsqrtps
mov
nop
push
stos
xor
loop
push
pushf
mov
cmp
or
cmp
sbb
xchg
addr16
lds
out
aaa
in
stos
mov
fisubrl
std
aas
dec
dec
xchg
test
mov
and
push
jo
sub
scas
xchg
push
jb
adc
cmp
mov
ret
dec
mov
mov
mov
outsb
jo
xchg
sahf
push
fs
iret
mov
cli
cwtl
outsb
mov
fnstcw
xor
scas
cltd
mov
lds
dec
js
cmp
push
fadds
ret
or
mov
inc
das
fcoml
jmp
adc
mov
mov
mov
adc
mov
mov
dec
xlat
push
int3
test
xchg
fidivl
pop
scas
into
mov
add
jne
dec
xor
les
aam
adc
stc
add
dec
inc
cmp
lds
or
push
push
or
mov
fs
cwtl
or
out
shll
lea
jge
cmp
lods
lret
andl
push
scas
sbb
mov
loop
adc
cmp
adc
push
xor
cmp
jp
lods
into
mov
pop
mov
push
push
idivl
mov
in
outsl
leave
ss
mov
adc
stos
shlb
rcrl
dec
ret
cmp
sbb
xor
daa
push
adc
mov
adc
xor
outsb
popa
aad
dec
mov
mov
bound
pop
orb
sti
loope
sub
cmp
cwtl
push
xchg
xor
lods
popf
sbb
push
pop
sub
and
aas
jnp
and
mov
jmp
pop
ja
mov
bnd
jge
dec
sbb
sahf
mov
ficompl
test
ja
scas
mov
dec
test
loopne
loop
cmp
pop
popa
xchg
popf
mov
icebp
mov
pop
pushl
pop
fadds
jle
adc
jbe
jae
loopne
leave
inc
mov
clc
dec
push
popl
mov
fadds
pop
xor
scas
push
jns
rcrb
or
jg
loope
mov
lock
call
lret
imul
or
xchg
lret
or
fstl
pusha
jb
push
sub
inc
lcall
cmp
data16
xchg
out
and
mov
stos
fnstcw
je
cmpsl
insl
push
imul
inc
jp
pop
inc
pop
xchg
std
jecxz
icebp
fidivrs
je
jg
loopne
push
sub
loope
sbb
fcomps
out
mov
mov
das
cmp
mov
rcr
jnp
es
sub
cs
xchg
ja
mov
jae
xor
cmpsb
out
faddl
hlt
and
outsl
adc
sbb
push
mov
and
xchg
adc
fnstcw
xchg
movsb
popa
icebp
push
jg
mov
std
ljmp
lahf
rclb
xorb
bound
mov
inc
cwtl
movsl
jl
add
xchg
in
out
std
repnz
xor
dec
insb
mov
ret
jae
insb
rcr
xchg
unpckhps
test
mov
aad
dec
shl
pushf
jmp
lahf
fcmovnb
cmp
pmulhw
xor
lcall
jmp
aas
adc
in
lcall
dec
mov
lret
sub
push
clc
dec
fs
in
xchg
mov
jo
sbb
push
mov
mov
nop
dec
lock
aas
and
cmp
lcall
push
cmp
lds
push
sbb
mov
stc
mov
cmc
mov
mov
pop
push
dec
pop
xchg
and
mov
jg
jbe
mov
pop
movsl
popl
movb
enter
adc
popf
mov
call
movsl
adc
loopne
xchg
dec
push
divl
and
pushf
sub
dec
imul
inc
loope
popl
sub
cmp
jle
push
fisttpl
pushf
popf
arpl
mov
mov
push
xchg
pop
lcall
ret
pop
aam
push
mov
mov
loope
out
cwtd
or
mov
jge
fdiv
sbb
mov
cmp
mov
jb
shrb
inc
repz
sarl
lret
pop
aaa
sbb
aam
clc
mov
adc
pop
pop
aas
xor
test
push
push
fcompl
sarl
xor
data16
mov
loop
das
sti
xor
mov
cmp
xor
push
sbb
or
jge
scas
add
mov
mov
test
fildll
sub
faddl
test
cltd
xlat
or
les
or
icebp
mov
push
or
cmp
stos
aam
push
in
add
imul
addb
cmp
pop
insl
dec
add
cmp
adc
repnz
dec
jnp
sbb
inc
scas
jnp
xchg
jp
bound
jle
mov
mov
xchg
fiaddl
mov
mov
mov
mov
mov
dec
aam
xor
mov
mov
bound
pop
push
and
es
imul
add
movsl
add
jmp
outsl
test
sub
ja
xchg
in
jmp
push
jns
test
or
jge
pop
outsb
pushf
xchg
mov
sbb
cmp
pusha
mov
cmp
scas
aas
xchg
xchg
fcoms
leave
aas
movl
cld
jno
mov
enter
dec
js
cmp
test
loope
ror
or
je
enter
ljmp
shr
rcll
xlat
cmp
cld
mov
xorb
xor
xor
ljmp
mov
sub
test
in
clc
in
adc
lahf
subl
sarb
lods
scas
adc
inc
push
mov
stc
inc
jge
addb
xor
lods
cmc
je
insl
fiaddl
sub
mov
nop
jbe
jle
aam
movsl
jae
push
bound
out
inc
enter
adc
cmpsl
mov
movsl
fwait
cmp
inc
or
xchg
mov
shll
jp
lea
dec
xchg
xchg
std
xchg
pop
pop
add
test
mov
push
pushf
or
inc
jae
aaa
sbb
pop
lahf
das
cmp
mov
mov
call
pop
leave
and
loopne
popa
mov
sub
dec
mov
ret
and
sti
movsb
hlt
ja
pop
xchg
adc
xlat
xlat
imul
xor
cmp
push
xchg
xor
stc
mov
xchg
int
inc
fwait
in
xor
xor
shrl
aaa
scas
sbb
gs
xor
jb
negb
mov
and
dec
fnstsw
sbb
xor
xchg
inc
loope
andl
ja
jp
fwait
sbb
xor
push
xchg
jmp
or
lods
or
jnp
push
inc
push
mov
or
imul
shlb
fisttps
xor
std
sbb
shlb
out
lds
lds
or
aas
xchg
std
fistpl
iret
and
xchg
mov
ss
push
aad
dec
in
ror
loopne
je
sahf
push
or
ret
cmpsb
cmpsb
stc
xlat
insb
frstor
fcoms
fistl
mov
jmp
inc
mov
jge
clc
jne
cli
hlt
fucomip
lret
pop
xor
mov
in
pop
fiaddl
leave
jge
popa
sub
sbb
lock
cmp
test
scas
loop
lock
into
cli
push
jnp
fs
pushf
jge
mov
cli
fsubrp
cmpl
mov
or
mov
mov
movsl
inc
sbb
adc
push
sub
push
sbb
in
fucomip
sar
rclb
xchg
mov
stos
adc
adc
mov
nop
jl
sti
jb
aas
icebp
mov
jo
dec
jb
adc
xor
push
xor
stos
fwait
test
sbb
ret
fcmove
push
mov
or
fnstsw
fwait
xor
lret
inc
push
ret
das
into
stc
test
or
leave
sbb
fwait
add
inc
push
cmp
adc
movsl
cli
push
jecxz
mov
jl
mov
lods
popf
mov
ret
add
sub
pop
fsts
cmc
jae
test
xor
cmp
mov
and
jge
mov
jmp
cli
ljmp
or
pop
add
mov
cmpsb
ljmp
pop
mov
hlt
bound
popf
mov
aad
lea
push
pop
lcall
cmp
and
mov
aam
movsl
push
sti
inc
mov
test
pop
cmp
ja
xor
xchg
ret
orl
je
xlat
into
adc
push
jmp
or
and
and
addr16
pushf
adc
mov
sbb
jg
push
or
push
and
xlat
pop
out
mov
dec
lcall
mov
mov
sub
sub
jl
mov
push
imul
lahf
lret
rcr
mov
add
push
mov
lret
outsl
dec
dec
js
dec
pop
xchg
jge
dec
neg
push
movsb
jno
mov
mov
push
cmp
negb
out
mov
push
xchg
push
outsl
stc
into
mov
sub
push
adc
jno
clc
jns
insb
leave
adc
sbb
lret
mov
jb
sbb
mov
ret
fildll
pop
pop
es
hlt
rol
mov
sbb
leave
arpl
and
aaa
mov
imul
les
jl
out
adc
popa
and
xor
movsl
cltd
inc
out
pop
cs
mov
leave
pop
jb
mov
js
sbb
add
and
lcall
outsl
jle
int3
and
imul
cmpsb
push
cwtl
clc
push
xor
inc
xor
xor
xor
dec
cmc
mov
xchg
xchg
fbld
inc
repz
movsl
enter
enter
out
cli
clc
jecxz
bound
push
shll
mov
mov
sub
cmpsl
inc
lahf
mov
es
adcl
jge
or
icebp
loop
cltd
out
jp
push
sub
cmpsb
add
loop
lret
jmp
stos
jecxz
shll
shll
mov
call
mov
xchg
pushf
outsl
xlat
mov
out
stc
iret
pop
adc
jp
in
nop
and
out
repz
sbb
rcrb
adc
jne
xchg
push
cmc
bound
mov
push
push
dec
sbbb
in
inc
sbb
push
out
negb
sbb
pusha
push
or
mull
hlt
mov
inc
dec
rcll
adc
bound
sub
insl
movsl
fistpll
sub
mov
imul
imul
icebp
push
int3
cli
imul
in
pop
out
adc
pop
mov
pop
test
test
inc
sbb
imul
xor
cli
dec
ss
fcom
pop
dec
inc
ljmp
outsl
sbb
jno
push
test
push
pop
hlt
xchg
cs
je
jl
add
repz
cmpsl
stc
cmp
pushf
rcrb
nop
jecxz
out
pusha
enter
dec
out
aad
sbb
clc
adc
leave
sbb
fstl
daa
inc
xor
sbb
pushf
out
xchg
das
xor
push
jge
jb
loope
cmc
cli
pop
mov
pop
nop
pop
les
pop
loop
cmc
jno
cmp
xchg
fidivs
hlt
sbb
jo
jae
add
ficoms
pop
sbb
addr16
adc
fs
adc
hlt
mov
inc
scas
mov
xchg
aas
sbb
jo
loopne
jns
imul
push
pop
imul
jmp
sahf
out
js
mov
jno
dec
sub
xor
xlat
ja
fs
addr16
addr16
in
hlt
sub
jp
sbb
dec
sub
sbb
jl
aam
out
sbb
pop
sbb
imul
mov
jbe
jmp
gs
push
icebp
add
fimuls
loope
sub
pop
push
inc
pop
or
sub
dec
aaa
stos
mov
int3
mov
pop
aaa
adc
mov
je
xor
inc
cmp
xchg
fcoms
and
repnz
xor
add
xor
data16
cmpsb
cmc
add
call
mov
sub
ja
pusha
or
lret
adc
and
outsb
cltd
sub
call
arpl
inc
mov
xchg
push
pop
mov
inc
out
rclb
mov
mov
pop
jo
dec
mov
das
mov
daa
in
and
call
add
dec
fwait
jo
sarl
inc
ja
push
aam
dec
push
je
js
inc
in
sbb
cmpsb
ljmp
sbb
adc
das
mov
sub
fld
pop
jns
das
push
adc
jbe
jp
mov
mov
scas
mov
orl
dec
inc
fmul
arpl
push
adc
mov
sbb
add
inc
cmp
hlt
or
pusha
ficomps
mov
xor
mov
ret
sub
bound
movsb
dec
int
dec
dec
cmp
fisttps
int3
sbb
and
xchg
add
mov
aad
push
ss
enter
int3
mov
push
jg
dec
mov
sbb
cmp
ret
rcll
addr16
cmpsl
xor
push
pop
dec
rcrl
xchg
rorb
add
jae
add
int
jl
loope
mov
inc
jae
cmpsl
mov
shll
push
mulb
mov
ficoms
sub
stc
push
cmp
test
shl
and
mov
mov
mov
lcall
js
inc
inc
imulb
mov
gs
out
sbb
mov
jle
out
dec
push
mov
outsb
push
leave
mov
push
or
repz
lods
or
adc
imul
cltd
push
pusha
out
add
push
mov
mov
lods
iret
incb
fistpll
dec
subl
xchg
mov
lret
sahf
ss
dec
sub
jno
mov
icebp
mov
adc
pop
add
dec
inc
inc
out
push
pop
outsl
in
out
hlt
rcrb
push
subb
outsl
jp
ffree
loop
pop
not
scas
xchg
lods
push
and
sub
and
iret
dec
into
clc
movb
int3
stc
jl
ss
jp
ret
cmp
xchg
icebp
mov
and
iret
lock
pop
sahf
mov
movsl
mov
int3
loope
pop
pop
push
lret
push
cmp
jge
jnp
sub
int3
ljmp
outsb
or
dec
mov
pusha
mov
mov
idiv
fnstenv
push
mov
iret
and
out
aas
outsl
rclb
repz
jbe
pop
rcrb
adc
in
mov
stos
mov
cli
xor
xor
push
inc
xor
xor
lods
in
push
mov
in
adc
xchg
aaa
dec
rcl
adc
jne
sti
sub
sbb
nop
aam
jno
jnp
and
push
mov
sbb
data16
inc
enter
pushf
mov
stos
cmp
mov
xchg
pop
mov
aas
pusha
sub
orb
pop
sub
pop
xchg
fldl
push
xchg
stos
dec
out
call
insb
push
outsl
mov
sub
mov
out
mov
sbb
mov
sbb
repz
andl
andl
sbb
out
jae
mov
in
lea
addr16
movsb
mov
ljmp
xor
popa
jns
xor
gs
out
cld
insb
mov
add
jns
inc
aad
cmp
in
dec
repnz
ds
imul
xchg
jle
lret
and
push
stos
aad
dec
jle
cmpsl
mov
mov
repz
les
hlt
cmp
je
mov
sub
sti
xchg
xor
pop
andl
jp
imul
loop
and
cli
into
loopne
stos
stc
xor
sub
mov
jno
or
mov
jne
pushf
jo
aad
pop
stos
fisubs
add
mov
cmp
hlt
jae
scas
xor
inc
and
js
add
cwtl
or
push
sbb
mov
add
ja
stos
mov
push
add
xchg
in
xor
sub
daa
fisubs
mov
in
outsb
sub
insb
dec
imul
mov
add
stos
xchg
andb
inc
add
scas
out
cmp
pop
lret
in
leave
cs
testb
movhps
sub
sub
test
loopne
aas
das
mov
aam
fadd
xlat
dec
into
inc
push
lods
nop
xor
aam
lahf
out
ds
adc
outsb
jnp
mov
loopne
add
std
cmpsb
adc
iret
fsubrs
add
ds
cmp
lret
incb
lret
and
mov
mov
lahf
in
cld
dec
mov
sub
mov
cwtl
jg
mov
sub
aas
mov
ret
sbb
pop
popf
nop
dec
aas
pushf
push
mov
fsubl
sti
repz
or
mov
addl
add
sbb
aam
dec
sub
mov
mov
inc
lret
bound
xchg
movsb
pop
add
imul
pop
cmp
mov
fcompl
xchg
js
push
lret
subb
lcall
mov
mov
mov
pop
mov
or
shrb
call
in
lods
jp
enter
cmp
lea
sub
dec
jp
push
jg
cmp
and
sub
je
adc
adc
bnd
into
sub
sub
sub
push
inc
adc
daa
cld
add
mov
add
aam
imul
leave
movsl
jle
lds
pop
xor
inc
mov
add
push
or
stos
dec
pop
lods
sti
dec
testl
mov
std
mov
mov
mov
imul
paddd
test
inc
nop
rcl
push
fistpll
inc
cmp
cli
fsubp
mov
fs
mov
out
lock
mov
add
or
jp
mov
jne
mov
xor
dec
sysenter
mov
sbbl
sti
pop
add
mov
aad
popf
jl
pop
enter
add
popf
pop
push
mov
add
fimull
aad
add
xor
aaa
fs
push
test
movsl
pop
ljmp
loop
lea
mov
fs
lahf
ljmp
xchg
mov
into
sub
orl
mov
aam
adc
jge
movsl
sti
sub
aas
mov
lods
sbb
std
scas
and
and
mov
adc
jnp
popa
sub
dec
inc
mov
mov
mov
cli
scas
dec
sahf
cmp
les
cmp
sbbl
imul
lret
pop
lds
push
add
les
pop
inc
cltd
test
push
or
sub
xor
out
pop
inc
rcll
rcll
lea
dec
pop
lcallw
out
imull
loope
sti
ljmp
fstl
pop
repnz
shlb
sbb
jo
mov
dec
les
jmp
ja
sbbl
pop
pop
inc
mov
les
cltd
add
decl
insl
or
mov
add
stos
mov
insb
lahf
dec
ja
gs
jae
addr16
add
sbb
sub
test
dec
and
mov
lret
xchg
mov
leave
cmpb
int3
jae
mov
pop
jmp
shr
hlt
pop
fbld
cmpsb
incb
popf
mov
inc
lahf
stc
push
pop
cmc
fmull
cmp
aam
xor
or
clc
mov
pop
rcr
sub
xlat
lds
hlt
sbb
push
ds
lock
out
jmp
in
movsb
or
sub
enter
fs
ds
icebp
xchg
popf
sub
inc
fsubr
and
and
inc
scas
mov
cmp
jge
mov
les
fistpll
repz
ror
xchg
in
out
fldt
pop
fs
mov
mov
setno
push
adc
jecxz
mov
xchg
pusha
add
es
mov
fisubrs
adc
push
aam
inc
mov
xor
cld
add
mov
pop
into
movsl
sbb
stos
adc
ret
and
cmp
out
mov
jns
lods
cmp
popf
jbe
adc
jns
cmp
fwait
icebp
pop
jmp
aad
repz
mov
inc
adc
in
dec
insl
jecxz
jb
int3
rcr
pop
and
testl
push
add
outsb
fwait
sahf
jmp
std
sti
iret
shlb
jne
jae
xchg
xchg
add
xchg
or
adc
push
jmp
push
lea
inc
popf
and
xchg
dec
aam
lret
mov
cmp
bnd
sub
mov
fwait
outsl
sbb
or
lock
sbb
mov
add
and
dec
mov
movsb
in
ret
aaa
sahf
mov
xchg
out
rol
sbb
ja
aad
mov
pop
pop
add
and
lock
int3
push
add
adc
fs
cmpl
jo
sub
cmp
lea
enter
or
sbb
jno
arpl
and
loop
in
test
shl
dec
or
gs
push
jns
test
cmp
ret
das
lods
push
xchg
sub
cs
pop
cmp
push
ja
or
in
mov
fs
cmpsl
mov
or
call
std
and
in
push
daa
inc
out
in
push
push
jb
xchg
mov
xor
loope
dec
in
outsb
mov
aad
jl
xchg
sti
xlat
outsl
fsubrs
mov
inc
push
mov
mov
xor
pop
cmp
scas
scas
and
movb
sahf
pop
ret
mov
sbb
jns
shlb
push
daa
cmp
jbe
adc
ds
leave
mov
sbb
push
lods
stos
pop
int
or
push
or
in
dec
test
mov
clc
add
fidivs
and
inc
cltd
in
and
outsb
cmpsl
jns
rolb
movsl
cmpsb
test
add
movsl
push
xchg
int3
jmp
dec
lret
test
xchg
jle
jecxz
mov
shlb
push
mov
mov
ficoml
jmp
or
insl
inc
into
xor
and
mov
or
inc
and
data16
movsl
and
sbb
mov
sbb
xchg
jbe
push
cmp
push
jnp
dec
test
fisubl
mov
enter
stos
mov
sub
mov
lea
pushf
mov
jmp
test
stos
sub
push
jg
cmp
xorl
mov
js
inc
sbbb
rolb
lahf
jno
push
aad
push
pusha
test
out
outsb
shrb
shlb
les
sbb
insb
mov
or
jnp
dec
out
xchg
xchg
xor
test
xchg
push
dec
lret
imul
push
imul
and
mov
icebp
push
scas
mov
fs
jb
jnp
adc
inc
sbbb
ljmp
call
or
pop
pop
sahf
dec
insl
push
rorl
dec
mov
push
jo
lret
sbb
adc
pushf
and
das
aaa
sbb
add
lcall
outsl
sbb
sub
pop
cmp
test
sti
xchg
mov
insl
daa
fidivrs
xor
mov
mov
jmp
mov
hlt
sub
mov
movsl
cli
push
push
inc
stc
adc
inc
add
imul
leave
ret
icebp
insl
sahf
inc
pop
xor
mov
push
ds
mov
dec
jnp
push
mov
cmpsb
jo
push
scas
mov
sbb
loop
and
fisubs
sub
inc
inc
das
push
mov
mov
cmpsb
mov
sbb
add
adc
loope
shll
in
push
mov
outsb
mov
inc
shrb
in
sti
jbe
insb
lods
xchg
xor
cmp
mov
mov
pop
sub
or
out
jl
sbb
mov
fsubl
lret
add
pop
int
jge
adc
jnp
lret
sbb
and
cmp
add
mov
inc
mov
pop
sbb
pop
in
push
xchg
aas
push
ds
ficomps
aad
aad
push
imulb
jae
cmpb
insb
mov
sub
add
movsl
inc
sbb
mov
push
xor
inc
fstp
jmp
dec
add
inc
ret
cli
add
outsl
sub
cmp
imul
imul
es
fisubrl
lcall
aad
out
stos
jne
mov
test
jns
ljmp
or
xchg
push
out
addb
sbb
dec
or
cli
xchg
mov
add
mov
lea
inc
and
outsl
out
push
sti
out
aad
int3
negb
js
xor
cmp
into
jle
xorl
popa
dec
or
fcom
mov
pop
repnz
sbb
push
movsb
pop
loopne
mov
xchg
jmp
int3
in
lods
xchg
enter
dec
fldl
pop
cwtl
add
shll
adc
pop
push
adc
or
imul
and
imul
jle
in
dec
jbe
mov
mov
and
mov
insb
sbb
jbe
adcb
and
inc
loope
xorb
mov
push
mov
jnp
mov
test
std
ffree
push
imul
stos
inc
cmpsl
xor
shrl
xorl
mov
sahf
out
std
imul
mov
cmp
int
sbb
leave
movsb
mov
bnd
std
mov
xchg
mov
ljmp
pushf
and
cmpb
sbb
fldpi
rcrb
sbb
jp
mov
insb
inc
add
cwtl
pushf
test
pop
lcall
push
adc
sbb
xor
dec
jecxz
mov
rcrb
fisttps
jle
daa
aas
and
adc
rcll
les
cltd
push
mov
jae
adc
push
cmp
in
scas
adc
mov
mov
clc
fisttpll
xchg
out
cmp
add
inc
and
addl
insl
lcall
pop
movb
fisttpl
dec
flds
sub
popf
and
xchg
lds
jg
daa
and
sub
xchg
addr16
pop
mov
out
dec
xchg
rcrb
mov
loope
push
push
stos
xchg
or
jno
cmc
inc
pop
scas
xchg
pop
imul
fadds
pusha
test
xor
sub
lret
or
out
push
mov
pop
in
test
add
mov
jne
roll
sbb
mov
scas
mov
sub
mov
jmp
ds
mov
or
mov
push
mov
movsl
mov
fstps
out
jp
fwait
mov
scas
inc
lahf
out
lods
bound
shll
scas
push
pop
pop
mov
or
mov
outsl
sub
fnstsw
mov
test
jge
mov
cltd
inc
xor
push
xor
adc
lea
inc
mov
rorb
push
ljmp
jno
mov
add
mov
sbb
enter
lock
ret
mov
push
imul
roll
sbb
stc
xchg
jge
ja
sbb
mov
fnsave
cli
mov
addr16
enter
and
jb
jbe
adc
adc
push
jne
jle
xchg
cld
addb
push
jne
imul
fcom
or
insl
dec
test
mov
out
enter
push
jmp
fs
fadds
addb
mov
out
out
fcomip
movsl
and
sti
mov
jecxz
and
scas
andl
bound
jae
sbb
addr16
das
ljmp
push
xchg
cwtl
fs
adc
or
xchg
mov
lret
divb
fmuls
fmulp
dec
add
inc
call
bound
bound
sbb
xchg
test
cwtl
pushf
or
js
arpl
cs
scas
movsb
xchg
and
push
lcall
mov
and
call
lods
sub
mov
sub
xor
mov
pop
adc
add
ljmp
lea
sahf
or
rcrl
repnz
sarb
add
dec
jle
xor
cld
stos
xchg
rcl
inc
jbe
pop
and
das
pop
fisubrs
sti
cmp
mov
mov
inc
inc
sbb
mov
or
pop
sarb
nop
jecxz
cli
jo
rcll
sub
xor
lods
xchg
inc
sahf
out
das
call
test
gs
fwait
xor
mov
adc
xchg
mov
sbbb
inc
sbb
push
mov
push
mov
out
mov
leave
or
stc
adc
jo
inc
pop
sub
mov
lock
sub
shr
pop
xor
inc
and
js
xchg
stos
lcall
call
jp
mov
jno
xchg
xchg
iret
add
xor
dec
gs
inc
std
test
jno
scas
mov
sub
imul
and
lahf
outsb
and
mov
ds
insb
mov
sbb
sbb
fcomps
adc
lret
loop
or
sti
daa
mov
or
ss
loopne
negl
jne
aaa
mov
ja
dec
in
mov
cltd
dec
push
scas
xchg
and
std
mov
shlb
mov
insb
xchg
jge
mov
movsb
fs
mov
test
xchg
lds
sbb
add
nop
jmp
or
out
adc
cmpb
add
add
xchg
inc
loop
push
mov
ljmp
push
icebp
mov
dec
test
cmp
sbb
sahf
inc
std
lcall
call
xchg
dec
daa
mov
or
xor
push
fisubs
mov
cmpsb
std
mov
and
mov
test
shll
mov
stc
push
aas
js
push
adc
add
pop
and
xchg
add
xchg
jb
mov
xor
cmp
icebp
popf
scas
sub
adc
js
repnz
test
dec
sub
and
leave
daa
scas
cmpsb
sub
or
or
jns
inc
jg
cmp
cmpsl
ljmp
or
cmp
cmp
js
and
stos
in
xchg
out
or
cmp
dec
push
cld
adc
or
mov
test
jmp
hlt
dec
push
test
add
fists
sub
jnp
jecxz
daa
sub
cmp
push
cmp
test
popa
in
add
sti
adc
cmc
fcompl
fwait
pop
mov
push
jo
test
and
jge
mov
xchg
outsl
inc
fst
insl
pop
xlat
inc
sbb
aam
shl
ret
pusha
scas
mov
mov
jmp
call
aad
push
loop
adc
and
cmp
and
lahf
loope
jbe
mov
cmp
in
mov
inc
xchg
ljmp
enter
add
dec
push
fdivs
leave
xchg
movsl
pop
test
int
scas
pop
jb
inc
insb
pop
js
outsb
andb
xchg
rorb
push
into
rolb
pop
push
and
jle
sub
add
push
xor
fidivrs
mov
mov
jo
out
xor
dec
adc
lea
lods
cmp
jp
out
push
or
push
stos
enter
fnstcw
into
add
lods
fwait
and
call
pop
push
sahf
sub
sub
inc
sar
je
adc
enter
into
and
cli
aam
mov
dec
lcall
adc
loopne
adc
test
lcall
mov
imul
xchg
ror
lock
push
mov
push
stos
or
sbb
pop
popf
pop
inc
lret
xchg
jns
orl
fildl
into
ss
xor
loope
cmp
enter
inc
pop
push
xchg
mov
hlt
cli
mov
cmc
pop
jp
loopne
out
subb
imul
cmc
mov
pop
dec
popf
fcomi
repz
mov
inc
sbb
add
inc
cmc
sbb
push
mov
clc
or
imul
aas
in
inc
sahf
std
test
in
inc
jne
sbb
add
ds
idivb
add
or
add
mov
mov
and
mov
mov
mov
jecxz
pop
dec
sahf
out
mov
pop
aaa
jl
shll
test
negb
pop
jnp
insl
dec
add
adc
and
insl
loopne
call
push
cmp
mov
es
clc
jno
jmp
or
fcomi
sbb
into
test
int
mov
mov
sbb
in
sbb
test
mov
jnp
jge
adc
imul
das
ret
int3
andl
ds
add
jmp
xchg
dec
add
lea
adc
jbe
push
pop
daa
addl
lods
xchg
push
dec
loope
cmc
leave
cmp
fistpl
stos
mov
mov
das
in
adc
dec
loop
sub
sub
cmp
sub
ljmp
orl
movsb
or
or
cmpl
or
lods
lock
lret
xor
imul
sbb
add
add
sub
mov
or
sub
cmpl
fidivs
rcr
push
push
pop
xlat
pop
or
in
xlat
dec
fists
and
push
scas
xchg
inc
cmp
inc
jns
popf
pop
lock
dec
adc
adcl
xchg
push
push
mov
mov
sqrtps
add
lea
sub
loopne
jg
call
movsl
gs
sar
mov
outsb
notl
cmp
dec
lock
add
in
andl
pusha
and
sub
out
sub
adc
das
enter
int
movsb
stc
cmpsb
addr16
jne
push
mov
cmc
dec
jns
sub
int
cmp
jno
adc
push
je
iret
jmp
scas
sub
icebp
outsb
push
loope
ret
cmp
bound
rcrl
push
loopne
sarb
mov
out
fwait
pop
xor
cmpsb
mov
xor
ja
cmp
out
mov
in
mov
push
jg
pop
call
and
movsb
lds
pusha
inc
in
cmp
sub
xchg
pop
mov
test
dec
add
sti
cwtl
jg
dec
inc
jecxz
cmp
inc
xor
mov
xchg
imul
stc
jo
mov
lock
mov
sub
adc
pop
inc
sub
movl
je
stos
mov
jecxz
andb
call
jnp
mov
insl
sbbb
sub
fisttps
add
xor
clc
out
in
ljmp
jno
outsl
ja
mov
imul
inc
into
aaa
in
cli
stos
lods
nop
lcall
testl
adc
jmp
movsb
pushf
in
dec
jno
daa
lea
cltd
push
sub
cmp
daa
push
jae
orl
jnp
jb
fnsave
popa
test
mov
test
mov
mov
std
fwait
lock
lahf
popf
cs
or
sahf
clc
or
bound
jb
adc
bound
cld
inc
clc
aas
push
adc
inc
adc
es
mov
pop
pop
lds
nop
mov
fcmovbe
movsb
ret
pop
inc
xchg
push
push
and
outsb
test
sbb
push
xchg
dec
push
dec
sti
sbb
sbb
dec
add
lods
test
xor
xor
pop
out
dec
mov
jge
shrb
dec
push
pusha
scas
rol
pushf
push
ucomiss
jnp
adc
les
addb
cld
mov
cmpsb
ja
shlb
out
out
jae
repnz
xrelease
cmp
orb
clc
cmc
mov
mov
dec
jns
jbe
xor
jecxz
mov
cmp
mov
clc
sub
xchg
dec
mov
arpl
rorl
decb
inc
mov
mov
addl
cmpsb
mov
lahf
and
pop
cmp
sbb
push
pop
mov
pop
mov
mov
sbb
mov
lcall
xchg
xchg
inc
xchg
add
xor
fwait
push
mov
push
fwait
xorl
mov
lock
jo
in
popa
xchg
xor
and
mov
test
sub
xchg
sti
add
cltd
insl
sbb
dec
mov
ret
scas
or
cmp
popa
dec
idivb
mov
push
sub
stos
call
outsb
add
adc
lahf
shrb
sar
xor
mov
push
outsb
lahf
lods
sbb
dec
icebp
outsb
sbbl
mov
sub
imul
es
movsl
adc
imul
in
repz
mov
jle
pop
nop
add
or
or
fxch
mov
or
mulb
sub
adc
je
dec
loope
cltd
sub
mov
loope
fwait
inc
movsl
movsl
aam
jp
enter
out
fsub
lods
idivb
fcomp
aaa
jmp
add
negb
pop
push
cltd
std
xchg
imul
jnp
xchg
jbe
jp
dec
loopne,pt
jo
mov
hlt
push
sbb
adc
out
xchg
inc
mov
xchg
enter
or
inc
out
add
push
inc
jle
rcll
fs
dec
add
push
push
leave
stc
cmp
jns
idivb
jbe
jge
jmp
lahf
xchg
adc
ds
fisttpl
xor
lods
jmp
or
lods
xchg
adc
or
fstl
dec
sti
lock
insb
push
decl
bound
fwait
adc
dec
out
dec
cltd
fyl2x
rol
cmc
or
ret
jp
in
orb
ficoms
popl
xorb
outsb
inc
add
test
xor
js
clc
subl
add
jp
jle
and
add
inc
sti
pop
fcompl
insl
insb
nop
gs
shrl
sbb
push
test
es
ja
and
int
sub
sbb
aaa
mov
jmp
sub
sbbb
popa
or
or
xchg
xor
mov
shr
xchg
iret
push
push
mov
dec
push
inc
and
in
cli
test
insl
cmpsb
leave
jae
lahf
xor
cmp
dec
xor
cmp
cltd
jnp
push
jb
inc
adc
int
lods
fs
jl
inc
adcb
in
repnz
lea
je
aas
nop
and
insb
ret
cmp
cld
mov
ror
add
orb
rcrl
jae
inc
push
sbb
js
cmpsb
mov
hlt
xlat
shlb
movsb
jg
sahf
dec
mov
rol
mul
pop
mov
sbb
ret
mov
inc
mov
lds
adc
add
mov
xor
add
ffreep
dec
lret
lret
push
test
in
lret
rclb
xchg
je
shl
dec
and
jle
add
std
push
xor
mov
cmpl
into
incb
add
cmp
loope
mov
nop
cmp
insl
inc
imul
lods
or
inc
loope
pop
jnp
add
loop
sub
xchg
dec
xor
cltd
sahf
or
rorl
sbb
sbb
repnz
mov
lea
dec
xor
adc
popl
sbb
pop
imul
int3
dec
in
inc
sub
jb
imul
aas
dec
adc
andl
jecxz
negl
into
push
int3
or
and
adc
xchg
xor
leave
cli
in
xor
imul
in
imul
dec
cmpsb
lock
loop
lock
shll
dec
cmc
ljmp
mov
stc
jecxz
adc
inc
xchg
mov
jecxz
dec
xchg
mov
gs
and
dec
fldcw
inc
push
aad
addr16
pop
xor
je
mull
pop
ret
outsb
sahf
mov
dec
out
push
dec
cmc
in
test
aad
xchg
es
ds
jbe
pop
bound
sbb
outsl
mov
cmp
icebp
lea
fists
into
bound
sub
pop
fs
mov
cmp
pop
repz
es
aam
jne
ja
dec
sub
scas
mov
outsl
mov
ret
push
addb
aas
cwtl
enter
sub
lds
lods
jno
add
cwtl
inc
pop
test
fs
cmp
and
jne
subl
inc
cld
inc
ds
fs
pushf
neg
jl
jbe
inc
fs
jne
cmpl
cmp
std
lea
cltd
repz
mov
jbe
dec
movl
nop
shrb
repz
push
mov
int
dec
cmp
insl
cld
mov
dec
in
push
push
inc
aas
pop
cmpsb
mov
mov
mov
out
aad
sub
inc
test
fisttpl
repz
add
jmp
pushf
test
sbb
sub
subl
jmp
sbb
roll
adc
jne
push
sbb
mov
jmp
pop
dec
inc
adc
mov
fildll
pushf
insl
jb
sbb
imul
pop
adc
mov
cs
jns
push
clc
aad
pushf
push
push
mov
testb
adc
das
mov
je
mov
push
jb
shlb
out
sbbl
dec
fs
push
inc
lcall
and
test
in
mov
and
fisubrl
data16
in
xorb
lea
cld
std
lea
xchg
lret
movsb
scas
push
inc
adc
sarl
pop
xor
jne
add
in
fcoms
loop
add
cwtl
cwtl
xor
ret
inc
cli
shlb
sbb
mov
cmc
imul
and
mov
add
sub
mov
xchg
leave
lret
mov
add
lahf
mov
xor
or
aaa
xchg
sbb
shl
rol
subl
pop
je
xchg
pop
xor
dec
mov
inc
mov
push
sub
pusha
pushf
dec
aam
jp
inc
and
and
ljmp
repnz
movsb
mov
inc
out
pusha
mov
lret
in
aam
outsl
out
fwait
xchg
pop
mov
or
cltd
xor
xchg
sub
mov
shl
xchg
sub
push
cmp
adc
arpl
les
sub
fcompl
jb
bound
frstor
negl
test
dec
push
cwtl
dec
stos
inc
mov
jno
jge
out
push
leave
fildl
jnp
push
cmp
xchg
xor
test
and
add
cmp
fs
dec
push
jbe
adc
sbb
sbb
dec
fdivl
pop
aad
jo
cmp
pop
movsb
mov
mov
pop
xchg
adc
fists
push
test
pop
or
sbb
sbb
sub
fstp
fwait
cmp
push
cmp
and
repnz
and
sahf
lods
add
and
addr16
cli
popf
icebp
pop
xor
out
stc
or
cmp
pavgb
in
lret
ja
fnstcw
jae
pop
les
push
fldenv
mov
mov
xor
or
mov
lods
cmp
sahf
adc
jnp
sbb
in
xchg
out
add
sbb
adc
adc
and
xorl
loopne
or
sahf
adc
pop
push
outsl
inc
shrl
xchg
or
aaa
roll
insb
repz
add
ljmp
mov
mov
push
mov
pop
addb
test
outsl
xchg
push
je
push
insb
ljmp
push
adc
les
sub
inc
mulb
sbb
dec
cwtl
pop
lock
outsl
cwtl
in
gs
hlt
test
mov
movsl
adc
mov
jnp
addr16
inc
sbb
in
pop
fincstp
sbb
les
icebp
adc
cltd
sbb
and
add
adc
jle
pop
dec
sbb
mov
test
or
cli
imul
mov
add
sub
sbb
mov
or
pop
xor
jmp
jns
in
xor
fisubl
sbb
cmovnp
xlat
push
sbb
mov
into
lods
test
push
in
xor
xlat
mov
xchg
fldl
ss
sti
stos
mov
dec
inc
fsubr
sbb
adc
sbb
repnz
push
mov
mov
push
das
test
and
mov
push
stos
xchg
test
xor
movsb
sti
dec
test
fdivrs
pop
int3
outsl
jns
test
int
aad
int
xchg
and
rclb
ja
stos
outsl
sbb
shrl
repz
fistpl
push
push
loop
push
adc
subl
sarb
xchg
cltd
pop
aaa
iret
mov
scas
push
fistpl
xchg
shrl
mov
lock
pop
arpl
xchg
cltd
andb
popf
sahf
movsb
je
insl
addl
cmp
sub
xchg
jle
es
loope
ss
sbb
xchg
flds
pop
bound
add
sbb
add
push
sub
cltd
cmp
lret
lret
add
mov
cmc
jns
adc
cs
test
hlt
ds
std
scas
popf
cmpb
add
pop
push
leave
jg
sub
mov
outsb
in
es
enter
xchg
stc
fcom
or
inc
and
inc
cld
or
out
sti
cmp
shl
inc
lods
out
cltd
pop
cmp
jge
push
dec
push
push
jb
push
xorb
outsb
ljmp
sub
adcb
mov
lds
mov
fsubl
xor
lds
jp
mov
ret
mov
ljmp
sbb
es
and
pop
xchg
je
jb
jne
mov
imul
mov
out
js
icebp
or
sbb
sub
pop
sub
jne
fmulp
jnp
mov
dec
popa
cmp
add
jge
mov
outsl
mov
call
xor
mov
jp,pt
inc
sub
push
mov
mov
xlat
cmp
add
adc
cmp
ret
sar
hlt
in
pop
dec
je
cltd
lahf
cmp
int
mov
or
test
mov
xor
frstor
push
add
mov
mov
cld
addb
or
mov
hlt
clc
cmp
sbb
jle
push
loopne
fcomps
pop
lret
fmulp
and
fists
sub
and
dec
scas
sbbb
fxch
cmpb
unpckhps
pop
dec
jge
ret
sub
out
xchg
push
inc
mov
adc
push
jb
enter
sub
inc
pusha
mov
jmp
jg
push
jmp
push
xchg
jo
inc
insl
xor
es
mov
sahf
pop
stos
cmpsl
int
sub
dec
mov
mov
cli
mov
push
xchg
mov
xor
call
repnz
push
adc
stos
dec
fstpt
push
out
addr16
loopne
jbe
pop
inc
jb
fwait
or
inc
or
and
sahf
leave
sub
xchg
negb
pop
sahf
stc
adc
fldenv
xchg
stos
mov
mov
pop
insb
repnz
scas
leave
and
mov
clc
and
adc
cmpsb
add
xchg
data16
push
pushf
add
cmpl
ficomps
nop
ds
jp
loope
xchg
lods
or
pusha
xchg
and
xor
jbe
and
add
adc
inc
fcomps
mov
jg
data16
or
ja
pop
mov
dec
test
sbb
lea
xchg
inc
sbb
clc
jle
popa
or
xchg
or
stos
fstl
subb
adcl
ja
nop
pop
fiaddl
xor
imul
push
enter
cld
in
cld
and
std
inc
mov
push
std
fbstp
outsb
dec
xor
pop
lret
mov
dec
xchg
cs
ja
sbb
scas
test
cmc
vminsd
insb
jne
mov
sub
pop
jl
stc
jp
mov
xchg
hlt
inc
xchg
shrb
mov
into
jl
mov
hlt
pop
pop
iret
adc
xlat
ljmp
fidivl
int
mov
ficoms
xchg
sti
stos
or
nop
nop
push
loop
pop
jnp
cmpl
cmc
mov
movsl
inc
cmp
pop
cmp
mov
and
pop
jp
xchg
xchg
scas
jge
gs
out
jno
fsubs
cmp
or
push
lea
ds
inc
lcall
lods
mov
lods
jle
loopne
or
jb
cmpsl
jns
cmp
test
lods
hlt
xlat
and
sbb
mov
fwait
ss
xlat
iret
bound
push
and
sbbl
nop
fstl
sub
mov
add
push
out
icebp
je
mov
inc
hlt
scas
and
int3
repz
scas
jne
in
cmp
jnp
lock
xor
inc
int
adc
shlb
mov
insl
shrb
ja
inc
rcll
sbb
jnp
mov
gs
mov
adc
xchg
jecxz
or
imul
push
arpl
data16
mov
cld
hlt
stos
and
add
push
or
mov
xor
adc
xchg
jb
hlt
and
jmp
loope
push
arpl
pop
cmp
push
dec
push
scas
xor
ds
pop
adc
call
push
xor
jmp
shrl
out
in
scas
jg
ds
cwtl
sub
sti
bound
out
or
jge
inc
dec
fs
sbbb
sub
addr16
adc
xchg
pop
jle
fidivl
popa
pop
mov
ror
mov
adc
adc
mov
aas
mov
pop
and
rcrb
pop
sti
xor
xchg
push
adc
adc
dec
pusha
insl
mov
lods
scas
and
mov
out
dec
loop
outsl
or
scas
mov
repz
push
lcall
mov
xor
sub
jae
notl
out
ret
imul
cmp
jge
add
inc
pop
js
mov
sub
inc
inc
mov
mov
adc
inc
xor
ss
pop
dec
scas
jnp
movsl
add
cltd
enter
jno
mov
ror
lods
movsb
mov
inc
rol
push
add
add
fcmovne
push
sti
stos
sbb
or
push
push
dec
sbb
mov
or
call
mov
incl
push
mov
add
adcl
test
xchg
adc
pop
sub
shll
jne
sbb
mov
fistpll
andb
cmp
or
dec
lcall
leave
push
ja
aad
xchg
lock
mov
sub
mov
std
dec
leave
sbb
js
hlt
ljmp
adc
jmp
xor
shrl
push
lcall
leave
movl
test
in
xchg
ds
and
cmp
jb
movsb
fisubrs
pushf
push
push
jbe
into
mov
push
xor
aam
jnp
adc
push
ret
divl
fsubl
lret
add
inc
das
jmp
sub
xchg
fsubl
dec
ljmp
arpl
lods
push
dec
or
jnp
sub
sub
jne
pop
jge
loop
icebp
std
leave
shll
mov
test
jbe
add
or
mov
inc
push
mov
jge
fidivrl
xchg
ds
mov
clc
xor
hlt
sbb
push
movsl
shr
out
add
jecxz
or
fistl
orl
cmp
ficoms
dec
dec
mov
test
js
outsb
fwait
ljmp
inc
lods
cs
cs
push
leave
aaa
add
fsubrs
ds
jmp
rcrl
call
cmp
xor
push
add
faddl
stc
push
mov
lahf
push
lret
dec
jecxz
pop
bnd
mov
fnstsw
loope
outsb
push
sub
sub
loopne
mov
push
lods
rclb
cmp
filds
jbe
xor
fcomps
scas
jmp
push
inc
filds
jno
in
mov
call
and
in
insb
mov
push
inc
mov
inc
incl
adc
jle
add
xchg
sub
pop
xchg
mov
push
scas
arpl
or
push
pop
or
jae,pt
lcall
xor
mov
punpckldq
movsl
lods
scas
adc
push
lcall
imul
cli
cmp
pop
popa
cmp
and
sbb
aas
cmp
jecxz
pop
or
xchg
lds
pop
mov
jmp
out
cmpsb
and
xor
rolb
dec
add
leave
loope
xchg
cmp
fdiv
fcmovu
dec
sub
out
jmp
dec
mov
push
cmp
test
ret
xorb
mov
subl
in
fstp
scas
cld
je
je
jmp
xchg
push
sbb
and
cmp
cs
mov
cmpb
in
out
sti
sub
shll
push
scas
aad
adcb
pushf
push
dec
cwtl
cli
xchg
popa
inc
repnz
xor
add
mov
sbb
add
sahf
cmpsb
repz
rdtsc
dec
cltd
arpl
in
inc
sbb
ret
js
iret
cmpsl
jge
push
mov
xchg
inc
xor
pushf
cltd
push
shll
sub
pop
mov
jle
mov
test
mov
sub
ss
std
sti
xchg
imul
jo
xor
addr16
addl
mov
aad
dec
xchg
mov
mov
mov
je
mov
xchg
cmc
and
or
jp
sarl
inc
sbb
jge
rcrb
xlat
add
xchg
dec
xchg
out
jae
mov
aad
inc
sub
xchg
dec
or
mov
repnz
or
push
in
add
jo
js
xchg
xor
rclb
sub
shll
sub
lods
sub
sbb
mov
pop
insb
and
mov
xchg
mov
add
subb
fst
push
cmpsb
ja
cmc
enter
in
jae
sbb
xor
insb
adc
fsubs
xor
aad
lods
sub
sti
loop
mov
pop
nop
adc
cmp
cli
iret
xor
push
iret
pop
dec
jnp
sbb
hlt
jecxz
fwait
mov
aaa
popa
mov
jne
addb
push
push
xchg
std
mov
popa
in
mov
or
xor
xor
imul
mov
xor
mov
stc
fdivl
add
mov
fwait
repz
cmc
les
popf
lock
mov
adc
cltd
mov
mov
push
ss
mov
sub
jge
jnp
jae
pushl
push
outsb
jb
adc
insb
cmpsb
imul
push
inc
inc
push
or
mov
outsb
jae
pushf
ficoms
xlat
aad
fwait
cmpsl
mov
fsubl
out
or
pop
inc
dec
dec
pop
adc
add
push
enter
iret
sbb
lock
cmpsl
add
inc
insb
adc
dec
test
push
sbb
jp
sub
jbe
test
xchg
adc
mov
inc
dec
xchg
insl
or
push
lret
inc
jnp
ljmp
addr16
jo
push
mov
test
fildl
movsl
jbe
negb
nop
test
adc
push
and
test
jl
mov
roll
dec
jge
cmp
cwtl
inc
in
jmp
nop
push
dec
inc
in
cmp
iret
mov
scas
adc
rcll
out
cli
popa
mov
sbb
mov
cmc
mov
jo
sbb
or
fildll
sub
cs
testb
add
mov
cli
insl
in
aaa
cli
lock
mov
loope
inc
xchg
movsl
sub
fdivl
repz
push
xor
movsl
mov
aas
mov
roll
subb
add
jbe
mov
mov
inc
lds
xchg
push
lahf
xchg
sbb
cli
outsl
xchg
sbb
sub
ljmp
mov
cld
movsl
jp
adc
push
mov
and
jg
cmpsb
jae
mov
or
movsl
mov
sub
adc
add
mov
mov
jge
gs
push
imul
cmp
lahf
push
mov
xor
inc
cmpsb
push
leave
jl
stos
push
stc
push
push
xor
inc
pop
push
mov
lea
inc
out
int3
mov
xchg
push
fwait
or
orl
out
lea
add
xchg
push
aad
dec
pop
stc
hlt
add
imul
push
orb
aas
btc
and
movsl
push
adc
xor
dec
push
adc
mov
movsl
inc
xor
les
pop
stc
fwait
or
imul
out
jle
into
in
xor
dec
mov
lds
hlt
sar
xchg
pop
ret
jbe
stos
push
jbe
sub
push
or
mov
adc
push
and
mov
daa
and
mov
dec
mov
insb
addr16
sbb
mov
jne
icebp
push
psllw
inc
jns
cmp
not
cli
lods
cmpl
mov
pop
sbb
std
xchg
cmp
jb
push
xor
adc
pop
xor
pop
mov
out
pushl
push
ss
dec
jns
mov
mov
fs
push
sub
frstor
adc
dec
lsl
std
pop
inc
add
stc
call
sbb
imull
lcall
mov
mov
jae
dec
aad
pop
and
iret
push
repz
pushf
aaa
pop
sarl
sbb
jae
add
pusha
fbstp
mov
pop
in
movb
cmp
cmp
xor
sarl
psubq
jl
bnd
xchg
cs
xor
pop
daa
xlat
mov
out
pushf
cli
xchg
lods
test
outsl
insl
adc
mov
addr16
stos
sbb
xorl
and
cli
repnz
push
lret
ret
add
adc
mov
fucom
loopne
cwtl
mov
cltd
xor
mov
ret
out
lea
inc
xchg
stos
jg
cmpsb
mov
sti
dec
sti
jmp
out
sbb
add
outsl
push
sbb
cmp
and
dec
fs
mov
xchg
adc
cmpsl
push
dec
sbb
xchg
adc
pop
cmpsb
fwait
jmp
jae
pop
push
pusha
xchg
loopne
out
pop
test
or
ja
add
in
jo
fs
sub
pop
push
or
dec
and
cmpsb
nop
mov
xchg
adc
pop
sub
push
filds
xchg
fnstenv
scas
push
jmp
shrb
sub
movsb
out
jg
in
fldcw
mov
push
addl
add
das
and
stos
iret
mov
fbld
mov
xor
mov
cmp
dec
xor
adc
cwtl
int
lahf
stos
jle
push
mov
int
adc
insl
subl
roll
inc
pop
enter
mov
mov
mov
push
je
mov
sbb
std
lods
mov
dec
mov
test
popa
mov
dec
lock
xor
dec
or
jo
xor
pop
mov
cmc
shlb
xor
aaa
xchg
xchg
pusha
xchg
jmp
ficompl
shlb
xchg
jae
mov
push
xor
mov
sbb
pop
xor
mov
ret
and
dec
mov
add
js
and
pop
pushf
push
sti
test
jno
sub
lods
clc
fstl
mov
pop
les
and
aaa
sbbl
jg
sbb
cs
mov
mov
jl
inc
les
ljmp
cmc
adc
repz
mov
cwtl
jns
es
cmp
pop
jg
fdivr
hlt
dec
pop
cmp
stc
pop
icebp
mov
sbb
sar
bound
mov
cmp
out
or
adc
jmp
in
sti
add
jecxz
jae,pt
js
add
mov
sbb
push
outsb
incb
mov
push
daa
dec
cmp
inc
in
xlat
mov
sbb
clc
shll
xchg
inc
mov
nop
pop
in
sar
sub
dec
loop
push
sbb
xor
xchg
jae
arpl
mov
leave
pop
xchg
xlat
jg
jl
mov
hlt
loope
pop
cmp
xchg
jo
test
test
stos
sub
adc
push
push
xchg
xor
mov
dec
or
sbb
lahf
and
jle
stos
fadds
cmp
icebp
test
push
outsl
int3
dec
mov
pop
es
pop
xchg
fdivl
adc
xor
je
xchg
adc
mov
push
je
mov
fisubrl
icebp
movsb
mov
mov
fwait
lods
or
and
mov
repz
rorb
cmp
inc
nop
cltd
jno
scas
out
push
cmp
test
jnp
lock
sti
lahf
fdivs
mov
cmp
sub
push
shll
nop
xor
add
sbb
xlat
mov
popa
data16
add
jge
in
and
fmul
dec
cli
jae
or
test
sahf
add
pop
jp
pop
cmp
jno
jge
vpinsrw
into
cmp
jns
jne
sub
xchg
dec
out
and
in
cmp
dec
imul
ja
lcall
cmp
adc
data16
xchg
dec
imul
mov
add
adc
out
rcrl
fiaddl
sub
rclb
gs
ficoms
mov
xchg
ljmp
cmpsb
ljmp
test
jne
sbb
xchg
pop
xchg
arpl
dec
fistps
jo
es
inc
jl
popa
aaa
flds
add
into
push
lds
push
push
jo
pop
lds
fimuls
dec
adc
inc
ljmp
scas
pop
push
dec
and
push
lret
cs
push
int
xchg
cmc
mov
in
jno
mov
pushf
pop
dec
xchg
int
cmp
sbb
add
cmp
cmp
ds
loope
cmp
sbb
add
bound
cmp
fistpll
cmp
add
cmp
sub
cmpsl
or
pop
ret
fdivrp
jno
pop
test
sbb
ss
stos
xchg
xchg
sahf
cmc
mov
scas
daa
fiaddl
add
mov
dec
addr16
mov
or
cmp
cmp
mov
xchg
pop
sbb
ror
lods
inc
push
sub
cmp
mov
out
mov
sub
or
lock
cmpb
xor
js
push
adc
and
scas
into
cld
rorl
mov
rolb
jns
mov
rcrl
das
sbb
stos
lods
imull
xor
das
popa
aas
mov
pop
popf
and
push
or
nop
xor
mov
dec
sti
and
lcall
daa
sti
test
jl
xchg
dec
jg
out
inc
arpl
dec
dec
xchg
fwait
jg
or
jmp
jecxz
aam
fildl
mov
push
pop
xchg
movsl
cmp
adc
push
sar
arpl
inc
in
repnz
sub
push
jecxz
pop
out
cmp
push
dec
adc
pop
sbb
pop
mov
mov
pop
adc
mov
mov
int3
xchg
scas
or
sbb
sbb
dec
and
xchg
mov
in
cmp
xchg
lahf
and
cs
or
cmp
out
aaa
jbe
mov
adc
ret
cmp
mov
hlt
lods
ss
pop
dec
jo
push
popa
js
mov
jp
jl
clc
push
mov
cli
das
pop
cltd
popf
jmp
clc
add
in
movsl
pop
mov
sub
inc
popf
jno
fisttpl
cmp
adc
sbb
mov
xor
ja
daa
push
lods
fwait
pop
outsl
je
test
push
pop
or
rcll
ljmp
stos
push
adc
subl
ljmp
fstpl
in
and
cmp
loope
sahf
imul
pushl
into
cli
cli
cmp
and
out
jae
mov
mov
or
mov
addl
hlt
push
lods
movsbl
mov
fsub
xorb
fwait
bound
jo
sub
dec
or
pop
stos
add
roll
mov
push
mov
or
xchg
inc
sub
fwait
inc
sub
or
in
popf
xor
adc
jle
clc
jge
cld
pusha
hlt
push
lods
ret
mov
dec
call
jecxz
daa
cltd
out
xorl
in
or
mov
fwait
int3
aaa
mov
stos
adc
jge
jbe
add
leave
cmp
in
add
pushl
je
and
outsb
js
insb
fisubrl
push
cmc
pop
scas
fiaddl
in
push
aaa
ret
and
inc
test
icebp
adc
adc
mov
aaa
cmc
xor
mov
pop
out
pusha
ret
data16
in
in
ljmp
test
fwait
pop
xor
mov
fimull
sbbb
xchg
in
xor
fisubrs
mov
inc
fucomip
repnz
dec
inc
inc
cmc
push
xorb
out
arpl
movl
push
mov
mov
mov
outsl
jae
repnz
mov
xchg
jp
cmpsl
enter
sbb
sbb
test
sub
xor
int3
scas
dec
xor
dec
cmpsl
mov
jae
lods
and
mov
inc
sbb
mov
inc
and
pop
jo
pushf
out
mov
aas
insw
movsl
ljmp
add
sub
pop
iret
iret
mov
mov
pushf
fsubl
cmc
mov
test
lods
dec
fisttps
push
imul
cwtl
sar
out
or
dec
aas
out
or
loope
scas
orl
add
xchg
mov
mov
pop
cmpsl
shlb
pop
push
xchg
and
in
in
adc
movsb
mov
cmpsl
cmpsl
popa
into
leave
ljmp
pop
imul
inc
lods
sbb
out
push
mov
sti
xlat
vmovaps
mov
sub
jl
xchg
push
sub
lret
push
push
xchg
pop
out
lahf
pop
and
jnp
adc
mov
das
xor
jne
xchg
jae
push
xchg
xor
xchg
dec
popf
add
mov
sub
fs
push
mov
mov
push
and
lods
add
xchg
test
shr
xchg
inc
stos
pop
jmp
data16
testl
aas
inc
popa
aam
fmuls
pop
mov
sub
push
addr16
pop
sbbl
sub
push
xor
xchg
xor
hlt
ret
lea
je
outsl
adc
pop
cmp
jmp
leave
add
inc
aas
lods
cs
out
dec
shll
outsl
loope
subb
imul
pop
hlt
lcall
lret
mov
and
jmp
push
mov
sub
clc
mov
jmp
js
sbb
mov
cmp
repz
stos
rcrb
jno
dec
fwait
stc
cmc
js
push
push
ja
sbb
sbb
fimull
mov
ret
cmp
call
inc
cmc
dec
mov
push
lcall
arpl
pop
test
sub
test
clc
or
fldt
arpl
mov
mov
jns
push
jmp
xlat
cmc
push
jne
mov
lahf
movsl
cmpsb
jp
add
fadds
push
scas
mov
test
cmp
fmul
mov
mov
mov
cmpsl
mov
movsb
in
cmp
loope
test
and
sahf
ret
out
lret
shrb
loope
push
aas
insb
jno
adc
fists
and
movl
xchg
outsb
lret
idivl
xchg
mov
inc
inc
rcl
cmpsl
inc
and
mov
xchg
stc
hlt
in
pop
sbb
pusha
mov
mov
sub
or
stos
adc
mov
add
mov
incl
mov
jo
cmp
xor
jne
fimuls
xchg
loope
stc
or
aam
imul
jbe
and
mov
ficoms
lret
in
fucomi
test
jo
cmp
pusha
aam
push
mov
xchg
arpl
in
in
fstl
divl
push
out
dec
inc
in
or
retw
sbb
inc
test
imul
xchg
lods
xor
sti
mov
mov
cmp
inc
sbb
insb
mov
jp
mov
mov
out
iret
xchg
pusha
daa
push
fcoms
imul
xchg
into
cmp
adc
sahf
jb
outsl
push
and
push
popf
fimuls
ds
cli
fs
mov
add
sub
inc
test
dec
push
mov
lods
push
pusha
mov
out
bound
or
push
jl
mov
xchg
push
push
mov
and
pop
inc
adc
dec
or
fbld
int3
enter
popa
sbb
sbbb
imul
into
movl
adc
das
jae
repz
and
je
or
addl
xor
sti
adc
repnz
sbb
scas
pusha
call
xchg
or
inc
adc
xor
mov
nop
mov
addb
nop
push
xchg
das
out
test
mov
or
leave
lock
mov
mov
repz
cli
cmpb
sti
test
push
sub
jmp
lock
mov
sbb
ja
jbe
lods
sub
or
cmp
mov
cwtl
in
repnz
repnz
jb
sub
mov
das
arpl
notb
lret
push
xchg
xchg
sub
sub
pop
aas
popf
and
adc
sbb
pop
dec
and
xlat
adc
fs
add
cmp
push
fisubrl
test
aam
mov
icebp
lods
mov
fstl
xor
sarl
xchg
xchg
inc
shrb
xor
lea
xor
gs
fdivs
push
addr16
loopne
push
es
lds
xchg
test
add
dec
lret
daa
sbb
inc
jp
push
mov
test
pop
mov
dec
xor
xor
mov
shll
adc
lcall
cmc
insl
mov
sub
sub
mov
clc
test
js
fdivrs
mov
or
dec
inc
xor
rcll
mov
cmpsb
cmpsl
shlb
jp
sub
xchg
mov
mov
add
jle
xlat
in
add
dec
xor
ret
iret
out
push
aad
pusha
push
dec
in
xchg
dec
sbb
sub
fisttps
push
aad
fldenv
cmp
repz
inc
hlt
xor
insl
jnp
outsb
xor
aam
mov
lahf
test
sbb
xchg
mov
mov
mov
aaa
xchg
in
out
sahf
or
mov
test
dec
test
sti
cmpsl
call
sub
add
nop
dec
out
test
out
les
sbb
out
leave
stc
fwait
add
scas
lea
xor
mov
stc
shr
jo
mov
imul
loopne
bnd
mov
int3
inc
cltd
insb
stos
popa
sub
js
repnz
cltd
sbb
pop
mov
dec
ljmp
xor
addr16
add
lds
mov
cmp
sub
out
mov
test
je
orl
or
bound
xor
es
movsl
movsb
xchg
movsl
int
sarl
nop
daa
dec
push
cmp
popf
add
lods
xlat
pop
xor
or
mov
mov
mov
mov
repz
mov
mov
dec
adcl
jge
xchg
out
jmp
or
dec
ret
xchg
jmp
mov
hlt
aaa
test
call
dec
mov
int3
pop
sbb
xchg
push
dec
inc
push
arpl
push
pop
push
call
stos
lods
jmp
inc
inc
sbb
loope
or
mov
pop
xor
loopne
outsl
jns
sub
adc
sbb
mov
mov
cwtl
or
popf
push
adc
hlt
mov
data16
fcoml
jns
pop
pop
loopne
jmp
or
push
or
mov
add
in
and
or
scas
js
adc
mov
imul
xchg
or
imul
or
add
stos
lret
mov
js
sti
pop
xchg
push
or
rcrb
into
mov
jecxz
jge
mov
xor
and
inc
cltd
test
shr
pop
jb
jb
cmpsl
pop
mov
cmpsb
leave
fsubrl
cmpsb
add
xor
cli
xchg
aam
cmc
js
sbb
push
imul
loopne
addb
push
xchg
inc
cs
aas
insb
xchg
push
fsubrl
adc
inc
mov
mov
loope
ja
mov
lret
and
lret
std
lock
insl
repnz
cmp
sbb
nop
mov
stc
outsb
aam
pop
push
and
aas
fs
cli
pop
jmp
adc
sub
dec
daa
sub
adc
xchg
jno
pop
push
pushf
jp
scas
into
or
mov
insb
push
inc
dec
mov
dec
es
mov
shrl
les
stc
adc
jbe
outsb
mov
mov
push
shrb
sbb
lret
xchg
outsl
adc
clc
mov
push
inc
inc
add
test
dec
jo
out
xor
pop
insl
xchg
or
out
jg
adc
out
mov
lret
sahf
sub
dec
mov
jo
mov
sub
es
loope
negb
aas
inc
cmp
repnz
push
stos
ret
daa
aad
js
cmpb
sbb
pop
cmp
movsl
ret
cmp
mov
repnz
fldlg2
inc
dec
fsubl
cmp
sub
dec
mov
scas
mov
jno
cmpsl
xchg
adc
lret
aad
lds
push
xchg
sbb
les
xor
out
insl
fcoms
test
lret
cmp
push
push
aad
scas
nop
arpl
pusha
xor
ret
loopne
pop
lcall
cmpsb
aam
dec
add
cmp
repnz
rorb
cmp
cmc
into
js
mov
and
std
mov
pop
jns
leave
testl
jmp
pop
push
outsl
xor
lock
test
push
fisttpll
adc
sarb
mov
fnsave
stos
sahf
dec
adc
icebp
inc
jae
jle
cltd
lods
lods
iret
ljmp
push
ficoms
les
movb
dec
outsb
push
les
ja
pop
pop
add
ret
jae
test
and
xchg
ja
sti
mov
jge
push
mov
enter
xor
outsl
or
dec
repz
lret
mov
popl
imul
dec
cmc
lahf
fsub
xchg
daa
adc
data16
sbb
aas
orb
cmp
xor
cmp
and
pop
cmc
ja
and
out
fbld
mov
rol
aam
in
push
pop
repz
mov
test
loopne
sahf
push
mov
jb
pop
pop
cmp
mov
out
push
lock
sbbb
inc
sub
sbb
lock
loope
or
jbe
movsl
hlt
mov
adcb
mov
pop
jbe
xchg
mov
jbe
mov
insl
les
addl
xchg
cmp
push
jb
xchg
pop
es
shlb
mov
mov
and
lods
or
fnsave
mov
cmp
mov
lods
jo
int3
mov
pop
mov
and
in
lahf
andb
xor
jmp
movsb
cmp
in
movsb
jle
stc
jecxz
outsb
imul
mov
inc
xchg
push
sbb
dec
dec
subl
lock
inc
test
and
mov
sub
xchg
pop
mov
faddl
jne
jns
push
fwait
mov
out
cmp
xchg
ret
into
into
push
mov
imul
mov
loopne
mov
push
xchg
cmp
sbb
and
inc
pop
and
mov
aas
lahf
mov
pop
cmp
rcrl
mov
sbb
orb
sbb
test
ljmp
inc
add
test
and
idivl
inc
call
sbb
int3
push
data16
mov
xlat
mov
inc
mov
add
mov
shl
sbbl
jns
mov
leave
mov
enter
shll
nop
cmp
xor
inc
orl
fwait
or
fisttpl
jns,pt
scas
lods
dec
cmpsb
iret
mov
scas
and
daa
roll
inc
lret
xchg
jb
and
jmp
add
push
test
imul
fidivrl
sub
andb
fdivrs
dec
pusha
les
addr16
sbb
mov
pop
add
pop
xchg
loope
test
and
mov
push
cmp
xor
or
mov
mov
sub
shll
jb
std
js
add
outsb
ja
ret
inc
aaa
dec
inc
shlb
leave
push
cmp
jle
and
mov
in
push
int3
cmp
movsl
adc
jmp
out
jecxz
adc
shll
jecxz
jo
jmp
aas
jnp
stos
push
sbb
fadd
add
mov
xor
add
aaa
std
stos
jnp
ja
push
test
imul
popa
add
adc
add
sbb
test
cmp
fstpt
std
mov
xchg
jge
out
and
shll
inc
pop
aas
dec
jp
gs
in
mov
mov
loope
or
sbb
xchg
ret
icebp
int3
sbb
ficoml
sbb
jns
fucomp
sub
shrl
xlat
lahf
stc
bound
cmp
jnp,pn
dec
mov
shr
imul
push
ret
fwait
add
popa
mov
or
push
test
adc
xor
jmp
stos
pop
insb
test
lock
lcall
loop
adc
jnp
inc
insb
jl
lret
or
push
adc
push
lods
add
xchg
xchg
push
enter
jecxz
xchg
dec
jae
xchg
mov
adc
xchg
rcr
dec
push
insl
out
data16
test
ficoms
dec
loopne
jecxz
inc
or
mov
stc
pop
push
lock
lret
aam
push
jno
and
das
stc
jmp
out
adc
ret
lcall
mov
cmpsl
faddl
stos
pop
lea
inc
pop
pop
pop
aam
mov
insb
out
adc
dec
sub
sarl
ds
jg
add
jne
pop
filds
xor
cs
add
orl
daa
repnz
adc
mov
add
cmp
movsb
and
jmp
sub
hlt
mov
xlat
mov
lcall
mov
push
xor
mov
inc
pop
fdivp
cltd
mov
xor
add
mov
or
cmc
mov
lahf
sbb
xor
jo
mov
rolb
fdivp
test
in
ja
xchg
xchg
mov
rcrb
push
adc
or
jl
gs
jne
or
mov
imul
xchg
iret
jecxz
and
lret
rolb
mov
ss
mov
sub
out
clc
rorb
and
sub
jnp
pop
and
xchg
xor
and
inc
sub
stos
gs
mov
mov
mov
and
ret
sub
das
jp
cltd
mov
push
sahf
cmp
jo
mov
jmp
jns
ret
loop
imul
fnstsw
xchg
push
paddusb
xchg
push
xor
scas
test
jmp
sahf
inc
cltd
out
xchg
ret
inc
and
mov
add
mov
add
jl
pushl
mov
mov
std
jo
xchg
les
std
stos
cli
adc
aam
ds
mov
ret
mov
ret
pop
bound
ss
cmp
cld
jecxz
lods
les
lret
loop
sub
mov
aam
mov
js
pop
clc
dec
jnp
out
sub
xchg
mov
jnp
imul
dec
pop
sarl
lret
lcall
int3
icebp
dec
aas
sub
sbb
fsts
cltd
mov
inc
fstpl
sub
movsb
ss
pop
xchg
fcomps
push
lahf
sbb
push
mov
sbb
push
or
les
popa
xchg
lcall
ds
mov
mov
sti
dec
sbbl
dec
cmp
shrb
aam
dec
aas
xchg
popa
ja
jns
jl
pusha
ss
data16
rcrb
ljmp
mov
lock
xchg
cbtw
xor
jle
insb
aaa
mov
lahf
push
into
insb
push
jmp
adc
push
ds
or
lahf
mov
xchg
ss
push
pop
movb
jecxz
sbb
mov
sahf
int3
inc
je
ljmp
fistpl
test
fwait
sbb
insl
and
inc
lcall
or
push
fsubr
sbb
mov
iret
push
dec
add
add
andl
sbb
test
push
cmp
pushf
pusha
and
pusha
sub
pop
mov
arpl
or
std
mov
movsb
leave
mov
icebp
jne
cld
jge
pushf
jbe
out
dec
jmp
ror
cmc
outsl
cmpsl
lods
inc
inc
mov
dec
movsl
lahf
xchg
shr
mov
mov
push
xor
test
movsl
fcoml
lods
clc
sub
push
sub
mov
push
test
or
xor
mov
add
cwtl
in
bound
aam
in
fcomps
fsubs
push
lahf
aam
scas
pop
ljmp
jg
mov
mov
mov
jo
fisttps
outsl
popf
incl
sub
xlat
cld
fs
jnp
adc
scas
movsb
daa
test
and
push
xor
cmp
or
cmpsl
and
xor
aad
mov
dec
cmp
in
testl
stos
and
aad
and
jmp
test
popl
push
mov
lods
aas
jae
sbb
cmp
mov
mov
sbb
stos
out
jle
sub
in
adc
cs
dec
in
xor
shl
nop
call
add
sti
test
sbb
cmpsl
xchg
aaa
sub
jbe
pop
int3
push
call
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
mov
mov
fisttpl
lcall
mov
push
lods
arpl
fbld
nop
push
push
mov
sub
out
imulb
xchg
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
mov
adc
jne
movb
mov
gs
cmp
push
add
jnp
push
jno
mov
jno
xor
mov
and
das
jge
mov
int
dec
adc
mov
das
scas
inc
lret
test
gs
mov
lds
sub
fsubrl
xchg
clc
mov
ficoml
inc
cmp
sbb
mov
fnstsw
call
mov
aam
adc
nop
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
movsb
inc
repz
mov
push
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmpl
jne
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
lea
push
pushl
call
pushl
call
mov
pushl
pushl
call
mov
push
push
push
pushl
pushl
pushl
push
push
pushl
call
pushl
pushl
call
pushl
call
lea
push
pushl
call
xor
jmp
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
andl
lea
push
pushl
call
call
cmp
jne
mov
cmp
je
pushl
call
andl
pushl
call
pushl
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
movl
movl
movl
push
call
mov
push
call
push
call
mov
push
call
mov
mov
sub
cltd
sub
sar
mov
mov
sub
cltd
sub
sar
mov
mov
add
mov
mov
add
mov
movl
push
push
pushl
lea
push
call
push
push
push
push
mov
sub
push
mov
sub
push
pushl
pushl
pushl
push
push
push
call
mov
mov
mov
push
push
pushl
lea
push
call
test
je
mov
cmp
jne
cmpl
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
andl
jmp
mov
inc
mov
cmpl
jge
push
push
call
cmpl
jne
jmp
push
call
jmp
pushl
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
pushl
call
pop
mov
cmpl
je
push
push
pushl
push
push
push
call
push
call
push
pushl
call
leave
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
call
mov
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
push
add
add
pop
xor
add
add
inc
or
add
add
addb
loopne
push
pop
xor
add
add
mov
add
push
or
add
add
inc
add
loopne
push
pop
xor
add
add
adc
add
add
add
add
add
mov
add
add
je,pn
js
add
add
add
add
push
add
mov
add
mov
add
add
jb,pn
popa
je
add
cmp
sldt
push
add
add
inc
add
loopne
fs
je
add
add
jo
add
inc
sldt
sbb
add
jb
add
add
add
add
xor
xor
call
pusha
call
push
fs
dec
mov
jecxz
sahf
ja
test
js
mov
js
mov
xchg
stos
aaa
std
mov
jo
mov
pusha
jne
andps
dec
cmpsl
push
cld
dec
cmpsl
push
add
jmp
jmp
call
jle
add
clc
xchg
add
bound
and
dec
loope
sub
movsb
int
movsl
mov
cmpsl
add
mov
in
fdivrs
jle
sarb
lret
jno
add
sub
or
lret
shll
fcoms
jl
std
add
jge,pt
inc
sub
insb
adc
cwtl
inc
sbb
dec
aad
insb
sbb
sub
pop
lret
mov
decl
clc
call
inc
jb
jle
rorl
data16
arpl
pop
mov
sbb
and
outsl
out
lahf
mov
and
ret
cmpb
jne
popa
xchg
out
sub
mov
dec
jge
lea
in
xchg
pusha
das
dec
fsubl
push
decb
fwait
xchg
and
imul
lret
pop
mov
lods
test
push
lret
push
dec
pushf
xor
lea
mov
arpl
loopne
out
cmp
je
faddl
mov
dec
repnz
add
mov
stc
jo
mov
jecxz
lea
mov
loop
fnstenv
xchg
daa
ror
nop
lcall
mov
jle
adc
leave
adc
test
cmp
cmp
jecxz
jle
jg
andb
sub
orb
outsb
mov
mov
and
mov
hlt
aad
mov
mov
adc
aam
js
push
push
and
stos
cli
in
rclb
mov
xor
mov
sbb
push
mov
pop
or
mov
cmp
int3
test
das
lds
push
aas
xor
and
jae
jl
imul
sub
hlt
xchg
mov
dec
int3
dec
or
cmp
jecxz
inc
sbb
les
in
adc
xor
leave
pop
icebp
insb
fcomps
mov
mov
fwait
pusha
ja
pop
lret
les
jle
inc
lcall
cwtl
xor
xor
in
fnstsw
adc
jnp
mov
pop
sub
into
pop
rcrb
xchg
xor
mov
mov
or
rorb
or
sub
mov
addr16
jns
xor
mov
lahf
aas
mov
in
je
and
push
mov
in
ret
leave
jl
adc
pop
push
sub
push
xlat
add
test
sub
lds
mov
xor
mov
ror
rclb
mov
jecxz
mov
enter
inc
sahf
jle
mov
bound
cmp
in
rcl
cld
imul
outsl
inc
xchg
mov
fcomps
cmpsl
cmpsb
pop
inc
pusha
mov
jno
adc
lods
jmp
sahf
orb
sub
aaa
popf
lods
ret
cmp
pop
add
lods
test
push
hlt
imul
inc
dec
int3
mov
mov
imul
push
inc
push
cmp
cld
dec
mov
add
dec
dec
xchg
cmpsl
push
push
movsb
mov
popa
popf
lahf
popf
pop
pop
jl
sbb
push
jmp
stos
mov
xor
inc
in
js
adc
sbb
loopne
out
pop
orb
in
cld
insl
daa
sbb
jp
loopne
sub
lcall
push
sahf
dec
stos
jno
sub
adc
testb
mov
xlat
pop
sbb
push
mov
lahf
lret
rorl
outsb
jae
push
dec
jae
subl
cmp
stos
jg
push
add
scas
out
aas
data16
or
xchg
outsl
sub
sub
sahf
test
xor
imull
shl
mov
push
cli
lcall
ss
mov
jmp
push
cmpsb
sbb
jmp
push
jo
add
pop
and
jg
add
fldl
inc
or
mov
lret
or
mov
sub
add
ja
dec
std
arpl
lret
ljmp
jbe
add
subl
nop
inc
xor
insl
mov
lret
sub
rolb
jne
popf
clc
call
sahf
std
xchg
pusha
pop
push
xorl
enter
je
and
mov
addb
push
mov
pusha
adc
dec
shr
jo
lods
sbb
fildll
test
adc
xchg
pop
dec
aam
fmull
loop
popa
enter
pop
push
jbe
xchg
mov
sbb
adc
nop
leave
imul
out
xchg
enter
popf
adc
cmpsb
popf
inc
inc
out
roll
add
nop
cmp
mov
xor
mov
sub
and
push
push
jno
ja
test
out
iret
push
dec
sarl
add
push
sub
aas
mov
add
testb
aad
xchg
data16
xor
adc
mov
test
leave
mov
in
insl
loope
jmp
sub
xchg
push
bnd
mov
dec
fistpll
inc
and
cmp
rclb
lahf
pop
ljmp
add
and
pop
fwait
out
cmp
xor
pushf
fsts
sub
xchg
lods
icebp
aaa
push
pop
orl
add
jae
adc
scas
jle
rorb
or
adc
repz
call
push
jne
call
pop
push
or
xor
sahf
fsubrl
jge
fisttpl
sbb
leave
mov
push
dec
mov
add
inc
in
ss
ds
xchg
rorl
jmp
jge
lds
cmove
push
stc
inc
popf
movsb
int
xor
pop
adc
mov
xchg
outsl
enter
pop
xchg
lds
push
add
stc
lret
call
ss
jae
xchg
push
or
sbb
jg
pop
jle
push
nop
fimuls
lcall
sub
cli
mov
dec
xor
rcr
ja
and
ljmp
mov
pop
xor
out
push
repnz
out
inc
xchg
mov
push
push
xorb
or
imulb
dec
pusha
ficomps
push
mov
int
sub
lret
mulb
push
dec
jle
int
and
out
loope
push
push
xor
cld
cld
js
push
pop
pop
imul
pop
mov
mov
sbb
stos
mov
sbbb
push
sarl
ret
jecxz
adc
ret
sbb
out
mov
and
mov
push
jg
rol
mov
movsb
test
mov
int
push
enter
in
push
repnz
mov
jmp
jns
and
jne
pop
in
iret
mov
hlt
shlb
cs
lods
iret
jl
js
int
adc
lcall
shrb
fwait
sub
pushf
cld
stos
int
pop
cmp
outsb
ss
add
and
out
sbb
jnp
xor
out
xchg
rorl
lock
push
xor
fnstenv
call
fdivs
cmp
pop
push
mov
sub
mov
out
and
mov
in
orl
sub
push
je
jecxz
and
inc
loop
out
shll
loopne
xchg
sub
cmpl
loopne
cli
jb
call
out
jne
stc
nop
push
push
repz
jnp
mov
test
cs
out
cwtl
jg
test
lret
push
dec
int3
dec
mov
fdivs
sahf
mov
dec
ret
cmp
lcall
test
ljmp
xchg
fcompp
jecxz
jno
cltd
adc
sbb
sti
dec
pop
and
fwait
loope
push
push
jno
rol
sahf
pop
cmp
mov
pop
mov
fiaddl
adc
scas
hlt
addr16
mov
leave
arpl
add
fdivr
shrb
daa
leave
call
inc
outsb
jno
or
lret
xchg
adc
lcall
mov
add
mov
sub
cli
lahf
in
jle
shrb
pop
icebp
xlat
push
jp
aad
xchg
push
and
xchg
adc
push
test
popa
mov
hlt
fsts
cmpl
or
jnp
sbb
mov
mov
lock
push
push
dec
and
sbb
pop
aas
cmp
imul
lahf
sub
sbb
fcomps
jecxz
popf
xchg
rcr
das
xor
or
cmp
push
cmp
rol
pop
popa
cmc
push
lods
jge
push
xchg
push
jg
in
xchg
xor
inc
loop
pop
add
and
sbbl
add
shl
sub
cld
push
mov
imul
or
jbe
int
mov
push
cltd
loope
in
cmp
cmp
add
je
inc
jmp
out
lea
dec
setl
js
out
mov
pop
mov
jge
pop
fwait
in
dec
xlat
xor
jbe
xchg
scas
sub
sub
inc
hlt
in
loope
popf
mov
test
mov
xchg
cmpsb
jb
loop
inc
adc
xchg
js
stos
cltd
jae
pop
jo
test
dec
lods
mov
inc
rcrb
inc
mov
movsb
outsl
lock
cmpsb
mov
mov
mov
pop
test
cs
inc
inc
adcb
pop
stos
dec
mov
ret
pop
jle
daa
pop
test
jnp
pop
jns
ds
lock
insl
in
sbb
cld
daa
loopne
iret
ljmpw
sub
inc
push
jle
cmp
adc
pop
pusha
faddl
add
sub
scas
mov
in
lahf
jno
sub
push
mov
enter
pop
pop
aaa
push
jl
cmc
or
inc
jnp
dec
gs
mov
lods
das
hlt
out
popf
cmp
cwtl
lcall
pop
fsubrs
adc
add
pop
popf
pop
inc
mov
mov
add
push
jnp
enter
lret
xor
repz
leave
repnz
lcall
insb
dec
and
mov
dec
in
imul
hlt
push
push
adc
push
lret
pop
push
popa
mov
cmp
dec
sub
fstp
mov
pop
cmp
push
outsl
notb
mov
jno
inc
push
nop
notb
das
jge
cld
xor
push
shl
add
jo
imul
sbb
das
push
mov
repnz
imul
in
cmp
sbb
xor
dec
lds
inc
js
xchg
sarl
les
jns
mov
iret
mov
or
inc
mov
out
shrl
loopne
jno
les
mov
jo
push
dec
push
jle
aad
adc
je
outsb
rclb
push
adc
daa
dec
sbb
push
push
xchg
xchg
jmp
stos
and
sbb
ja
inc
mov
pop
movsb
mov
pop
sub
and
ret
mov
adc
jle
pop
shlb
in
push
mov
insb
neg
sbb
lea
adc
add
add
sbb
mov
call
dec
add
add
daa
outsb
fucom
push
lea
inc
cmp
std
pop
mov
dec
push
jle
dec
cwtl
orb
pop
adc
dec
sub
mov
pop
insl
sbb
push
es
stos
dec
sub
mov
jmp
sbb
fstl
ja
xor
imulb
mov
ss
lret
daa
mov
gs
mov
and
jl
jno
xchg
jecxz
mov
popf
inc
sub
adc
add
popf
mov
mov
enter
out
mov
aad
out
sub
js
lods
mov
cmc
jg
add
mov
mov
and
push
xchg
cmc
adc
test
or
aas
inc
shrl
cmp
test
dec
lea
gs
lret
add
add
jo
dec
cmp
lods
aam
sbb
xchg
jb
push
and
or
loope
mov
and
mov
mov
or
pop
inc
xchg
push
adc
scas
xchg
inc
dec
std
insb
loope
out
lods
cmp
movsb
pusha
fsubr
dec
lahf
iret
xor
cmpsl
and
scas
and
pop
and
inc
cmc
pop
fisubrl
pop
push
cmp
sbb
mov
inc
repnz
jnp
test
std
cltd
sbb
mov
xor
loope
pusha
xchg
icebp
and
adc
sbb
ljmp
int3
insb
rcrb
jb
jmp
inc
hlt
xchg
ds
fcmovb
mov
clc
aas
sti
push
jp
roll
stc
test
int
ret
sub
out
scas
xor
jae
mov
pop
or
ret
insb
hlt
subl
stos
xlat
test
into
imul
loopne
insl
mov
mov
inc
fsubl
or
imul
jp
loop
jo
nop
jb
jne,pt
pop
mov
testl
test
jbe
lret
in
push
mov
out
jbe
mov
cmp
aam
adc
pop
xchg
or
dec
jg
sbb
pusha
fisubrl
out
aam
shr
adc
ljmp
mov
ss
sub
iret
popl
push
xchg
and
mov
add
push
enter
fsubrs
movsl
hlt
aam
pop
add
fimuls
xchg
jge
imul
sti
xlat
cmp
push
sub
int
negl
ret
xchg
mov
lods
insl
mov
mov
jle
int3
testb
cmp
clc
test
sub
popa
orl
xor
loopne
push
hlt
movsl
pop
lods
iret
xchg
push
sahf
mov
mov
adc
nop
mov
ja
add
xchg
rolb
in
or
loopne
push
mov
fstpl
lret
mov
push
lods
insl
outsb
pop
cwtl
xorl
in
dec
fidivrl
movsb
jo
gs
jae
dec
rorb
xchg
aas
sub
dec
sbb
xor
pop
int
shrb
cmc
push
int
or
rcrl
mov
in
scas
xchg
xchg
mov
and
imul
aaa
inc
movsl
or
scas
push
push
add
rcrl
rcll
out
fcmovb
mov
loopne
cmp
sub
fildl
outsl
out
jns
adc
pushf
cmp
pop
icebp
test
test
jne
imul
daa
and
aad
cld
xchg
jecxz
out
pop
scas
scas
out
mov
scas
push
cmp
sahf
or
cmp
xchg
shll
dec
stos
popf
fwait
lret
jl
mov
jle
inc
push
dec
rorb
jmp
pop
inc
fadds
lock
cmp
dec
pop
add
adc
or
fimull
jb
mov
cmp
xlat
movsb
pop
sub
lahf
addr16
scas
pop
mov
add
mov
ss
loope
adc
mov
in
xor
push
cmp
rcrl
and
jo
push
or
adcl
shrl
mov
in
iret
sbbb
in
mov
mov
das
and
nop
push
pop
dec
call
divb
add
inc
push
in
loope
dec
cwtl
or
out
jbe
sub
fiadds
adc
subl
jnp
gs
rclb
xor
adc
lret
push
dec
lea
or
pop
add
rorl
aaa
imul
jb
cmp
sbb
jmp
and
int3
and
inc
add
pop
cmp
clc
pop
cmp
jns
mov
insl
out
aaa
cmp
or
adcb
sub
stos
leave
cwtl
int
aaa
int
cld
adc
push
adc
aaa
shrd
in
and
sahf
adc
mov
push
orl
js
fadds
lahf
push
aaa
in
mov
sarb
cld
inc
lods
cmp
xor
cmpsb
leave
cmp
xor
testl
sub
sub
inc
int
pop
test
jle
xor
pop
xchg
dec
repz
jne
lock
mov
movsb
fistpl
arpl
and
icebp
bound
xchg
addl
adc
mov
repz
push
mov
mov
repnz
push
icebp
movsb
cmc
sbb
push
loop
lds
lods
mov
rcrl
fadds
aad
and
xor
test
dec
in
pop
sahf
mov
or
mov
jle
push
fimuls
push
adc
shl
lods
mov
lea
stos
cmp
je
pop
mov
insb
jne
lock
outsb
test
fidivrl
fstps
dec
ficomps
push
insb
imul
outsb
push
mov
cmp
mov
stos
or
mov
leave
repnz
jo
sbb
mov
mull
inc
test
out
cwtl
je
sti
pushf
icebp
cmp
clc
push
imul
or
push
and
adc
pop
xor
out
mov
push
call
repnz
mov
inc
adc
fwait
pop
in
shr
push
push
sahf
xlat
mov
jmp
test
mov
jge
adcl
test
adc
call
or
enter
fiadds
ljmp
cmp
ret
shrl
int
adc
xor
xchg
bound
sti
xchg
scas
lock
daa
jbe
fdivrl
and
add
into
sarl
imul
cmpsl
andl
xchg
rclb
sbb
adcl
lods
dec
rcrl
xchg
pop
iret
xchg
cmpsb
add
xor
mov
stos
addr16
push
push
inc
push
movsl
add
ret
notb
subb
cltd
adc
jecxz
sub
out
adc
iret
das
imul
mov
daa
stc
xor
loop
sub
add
sbb
imul
cltd
nop
lods
cmp
stos
mov
pop
jle
xchg
into
xchg
fdivrp
and
jge
jl
lcall
icebp
loopne
test
divb
mov
jge
sub
movl
mov
xchg
nop
add
xlat
insl
mov
stc
mov
or
orb
outsb
mov
push
stos
sbb
in
or
jmp
sbb
sbb
mov
xchg
push
mov
add
das
lahf
outsl
adc
shl
into
pop
popf
pop
inc
std
push
adc
stc
push
or
push
shll
mov
xchg
loopne
xchg
jb
jb
loopne
jp
pushf
pop
lcall
movsl
inc
sub
adc
pusha
inc
aas
mov
lds
std
int3
inc
loop
loop
sti
leave
bound
out
int
aad
incb
in
shl
and
jmp
mov
cltd
dec
cmp
popa
xchg
sbb
cld
adc
ds
icebp
fidivl
inc
pop
sbb
jb
mov
fiaddl
nop
scas
rol
jns
das
ficomps
push
cmc
mov
dec
mov
scas
in
xchg
jnp
jns
in
movsb
repnz
ljmp
lods
test
mov
jb
call
dec
in
jnp
loope
or
sbb
or
insb
pop
out
add
lcall
pop
in
aam
fwait
push
popf
out
repnz
filds
ljmp
mov
loop
adc
mov
push
cmpb
jge
lds
jns
pop
fisubl
push
mov
fisubl
mov
sbb
cmp
lret
push
leave
into
mov
push
ffree
sub
cs
bound
in
cmp
test
pop
pop
inc
cmc
jp
add
rorb
push
nop
cmp
add
stos
fstp
jmp
xchg
ja
in
insl
outsl
sti
test
mov
inc
clc
jns
fisttps
popf
and
hlt
sbb
ds
xor
mov
outsl
movsb
cmp
push
adc
pop
add
jg
jmp
dec
dec
mov
jne
xchg
push
xor
xorb
xorl
aam
push
lods
and
sahf
fmuls
int
mov
shlb
cmp
clc
or
xchg
push
push
jo
xchg
xchg
add
cmp
dec
pop
fucomip
gs
loop
mov
jecxz
fwait
dec
and
push
xor
inc
mov
mov
or
dec
lret
jge
jae
and
xlat
add
icebp
test
out
lods
cvtps2pd
in
das
movsb
lret
jl
sub
mov
xor
stos
and
aas
add
cmp
std
cmp
ja
andl
jbe
mov
dec
push
xor
xchg
pop
sub
pop
scas
les
jbe
adc
sbb
test
movsl
in
inc
push
out
cwtl
divl
dec
jmp
add
adc
aas
jmp
loopne
jecxz
cwtl
adc
cmp
outsb
add
xor
inc
idiv
pop
dec
or
jl
cli
cmpsb
js
sarb
faddp
imul
fadd
sbb
daa
push
add
push
sti
dec
dec
jg
dec
gs
jp
push
repnz
insl
insl
int
inc
push
dec
sub
pop
cmp
shlb
mov
pop
test
cmc
sbb
jl
call
mov
xlat
mov
push
add
imul
pop
xchg
cmp
mov
into
mov
rol
jbe
push
bound
xchg
enter
pop
icebp
sub
cmp
add
mov
loope
push
cs
dec
sub
test
jns
fsubs
mov
or
jo
push
rcl
lret
mov
and
or
pusha
push
or
outsb
pop
cmpsl
push
mov
icebp
add
imul
nop
or
mov
or
sbb
aaa
loope
bound
test
sti
loop
jae
push
sub
push
mov
jp
ljmp
hlt
mov
or
in
in
cli
cmp
pop
shrb
movsl
adc
push
ljmp
sub
pop
mov
add
bound
jmp
adc
mov
out
out
pusha
push
sub
mov
popa
xchg
push
hlt
cmc
sub
dec
pop
xor
andl
loope
imul
movsl
dec
andb
pop
xchg
push
mov
popa
fildll
dec
adc
arpl
inc
lretw
cmpsl
pop
rcr
pop
or
dec
inc
xchg
ljmp
lods
mov
ds
div
ss
shl
inc
pop
nop
cmc
cmp
test
cmpsl
outsb
push
iret
jmp
sub
and
imul
mov
aas
ds
jbe
xchg
pop
cld
imull
xchg
xchg
jb
xorb
push
jne
pop
mov
sub
dec
loope
lock
mov
in
outsl
sbb
imul
cmp
scas
jmp
in
fwait
insl
repnz
pop
rcr
in
jne
and
fxch
sbb
mov
pop
into
and
ds
push
dec
lods
fcmovu
jb
or
xor
and
scas
test
enter
pop
imul
mov
iret
jmp
lret
inc
imul
fstps
lea
stc
shll
into
and
andl
adc
push
mov
inc
lods
notl
sub
pop
scas
jnp
into
lret
enter
lock
xchg
sahf
mov
dec
sub
mov
cmp
inc
popf
xor
addl
pop
hlt
xchg
mov
jl
push
enter
pop
and
fcmovnb
mov
arpl
testb
sbb
mov
cmp
ljmp
repnz
pop
icebp
das
rcll
lcall
or
xchg
xchg
cmp
scas
jne
xchg
or
inc
xor
mov
out
push
js
mov
insl
jb
mov
or
loopne
mov
mov
nop
insb
stos
ret
jmp
movb
cmp
pop
xchg
pop
sbb
pop
mov
pop
and
add
lcall
and
std
dec
jno
push
pop
adc
sub
sbb
ret
or
inc
in
fcom
pop
dec
popf
fcomp
mov
jns
jno
push
xor
add
push
inc
test
xor
xchg
or
xor
dec
dec
pop
stos
add
xchg
xchg
xorl
out
cltd
in
and
adc
cmp
pop
mov
and
cmpsl
iret
or
inc
int3
jecxz
inc
sub
pop
mov
or
jmp
je
test
jmp
xchg
fchs
fldenv
push
mov
ss
pop
inc
jle
or
mov
jl
adc
xchg
pop
aad
sahf
lock
mov
stos
daa
test
sub
inc
stos
add
push
adc
or
iret
jl
outsb
aam
sti
inc
push
dec
push
mov
daa
mov
push
sbb
sbb
ror
adc
mov
into
cmp
idivl
pop
sbb
mov
jl
jno
sub
js
mov
mov
sub
out
cmp
xor
icebp
sbb
data16
jl
rolb
stc
push
pop
loop
mov
add
adc
xor
aaa
dec
xchg
rcll
mov
loope
cltd
sub
cli
fwait
imulb
xlat
add
add
or
xor
inc
mov
add
jno
imul
lock
jecxz
jnp
xchg
pop
jb
xor
pop
mov
and
sub
scas
fs
test
adc
mov
xchg
and
aad
fstl
adc
lea
pusha
xor
movsl
or
push
nop
dec
jg
shlb
push
xchg
adc
or
add
mov
ljmp
test
mov
fsubrl
mov
frstor
jb
movsl
adc
bnd
mov
sbb
std
or
je
sahf
add
loopne
inc
mov
push
loopne
and
mov
sbb
loopne
mov
sbb
ds
dec
xchg
hlt
inc
dec
faddl
dec
mov
in
sbb
push
mov
adc
aas
or
sarb
push
cmpb
faddl
cmp
fstps
imul
test
dec
fs
xorb
rcll
loope
scas
add
pusha
ja
call
push
aas
sbb
cmc
push
aam
outsl
inc
adc
pop
mov
je
xchg
in
je
cmp
lods
cmp
sub
enter
pop
sbb
xchg
mov
cmpb
mov
or
fldl
inc
lds
xchg
stc
inc
add
mov
cmpsl
push
fbld
add
fcmove
lea
je
xchg
popa
int3
outsl
aam
lods
mov
pop
stc
add
jae
jne
push
push
imul
cmp
xorl
insl
jo
repnz
repz
imul
and
mov
dec
xchg
mov
and
cltd
sbbl
push
sub
fidivrl
push
sti
dec
cld
ljmp
sbb
dec
pop
cmp
jbe
sub
pop
jmp
jmp
es
loop
mov
aam
jno
fcmovne
int3
cltd
dec
jecxz
loopne
arpl
mov
cmp
cmpsb
mov
adc
fimull
les
out
mov
xlat
insb
dec
arpl
mov
dec
jbe
push
xchg
push
imul
sbb
decb
inc
adc
xorl
stc
imul
sub
dec
sahf
push
or
jno
int
ds
xor
mov
aad
jp
adc
out
sub
scas
and
sarl
xor
lods
dec
mov
in
in
jns
aam
ret
jle
in
pushf
pop
movsl
push
push
xchg
sbb
dec
ljmp
iret
outsb
bound
pop
call
cltd
hlt
or
xor
mov
dec
jno
dec
subb
mov
xchg
repnz
cwtl
lret
iret
pop
xchg
fs
cld
loope
ja
add
sbbb
mov
jo
shlb
pushf
inc
and
pop
mov
orb
ret
dec
or
xchg
pop
in
lret
xchg
jne
cmpb
fdivrl
xchg
xchg
aad
sbb
cmpsb
loopne
hlt
dec
out
pop
push
test
or
lock
aam
mov
fistps
ss
clc
hlt
jo
ds
hlt
cmpsb
shrl
sarb
rcr
mov
pop
call
lea
lea
out
pop
sub
cmp
push
imul
fdivr
mov
mov
lahf
leave
pop
sbb
loopne
inc
les
push
xchg
xlat
pop
movsb
and
aas
jb
xchg
push
cld
cmp
out
mov
or
and
sub
and
inc
lds
test
test
movsb
stc
adc
filds
loope
lret
notb
nop
mov
data16
into
insl
ljmp
and
jbe
arpl
xchg
cmp
pushf
nop
pop
add
les
adc
mov
jp
jnp
adc
push
sub
outsl
push
dec
js
lods
shrb
push
cli
mov
loop
aam
xor
push
not
scas
adc
adc
xchg
xchg
cmpsb
jle
dec
cwtl
out
out
mov
xor
jno
mov
mov
pop
jge
fcmove
xor
xor
out
pop
test
push
ret
cmp
pushf
xor
sub
sbb
cmp
int
mov
jno
repz
cmp
icebp
jb
jecxz
pop
dec
dec
repz
or
lret
and
push
jp
popa
outsl
fldlg2
jmp
sbb
call
cwtl
fs
cld
aad
or
add
push
mov
cmp
scas
daa
pop
lds
mov
push
arpl
adc
cmpsb
pop
les
in
stos
adc
shr
je
iret
push
push
push
push
outsl
sbb
mov
into
jecxz
rcr
test
jne
hlt
subl
dec
orl
ja
cmpl
pop
cmp
hlt
mov
pop
mov
mov
mov
xlat
test
test
insb
sub
cs
jecxz
ret
dec
xor
loopne
push
xor
push
push
push
mov
movsb
sbb
mov
rclb
insb
jmp
sub
ret
aaa
push
mov
add
xchg
or
jns
mov
enter
push
ljmp
adc
or
sahf
pop
or
xchg
push
push
mov
cld
lea
push
xchg
mov
call
fldenv
adc
bound
call
jnp
in
mov
mov
out
mov
mov
jle
push
fstpt
cmp
xchg
xor
mov
clc
rorb
xlat
mov
add
sbb
es
lods
or
sub
inc
pop
cmp
bound
mov
pop
test
iret
sbb
sub
mov
pusha
push
xchg
or
out
dec
push
mov
adc
xor
cmpsl
cmc
icebp
adc
pop
aaa
xchg
mov
inc
inc
cwtl
xor
insb
inc
xchg
ret
in
ficompl
das
mov
mov
sti
mov
cmp
imul
lods
test
lcall
popf
jae
or
adc
loopne
mov
jne
or
adc
mov
int
mov
sbb
push
and
movsb
push
sti
out
jge
cld
ljmp
pop
sub
stos
insl
xor
xor
cli
imul
mov
into
dec
sub
mov
push
fs
inc
out
hlt
mov
mov
daa
inc
sub
dec
pop
lahf
xor
cmp
addr16
in
push
xchg
mov
or
in
push
fs
and
cmp
dec
xchg
mov
test
scas
std
pop
inc
outsb
int3
xchg
stc
and
scas
add
mov
fcmovnb
mov
addr16
shlb
cmpsb
out
not
xchg
pop
adc
mov
mov
pop
inc
xchg
jns
jp
or
in
inc
cmpsb
sti
shll
pop
stos
in
jne
jmp
or
ljmp
lahf
inc
dec
into
out
mov
mov
or
jge
pop
push
pop
adc
pop
xchg
les
xchg
loope
sahf
jg
faddp
insl
mov
rcrb
and
mov
adc
stc
push
cld
fwait
add
pop
xor
addr16
push
push
stos
out
repz
push
bnd
and
sar
pop
movsl
test
xchg
mov
loope
or
roll
shl
and
mov
pop
lods
sub
das
gs
xchg
repz
ror
sbb
sbb
in
inc
les
cld
loop
and
pop
jmp
bound
add
cmp
sahf
das
dec
add
pop
cmpl
inc
push
ret
jo
lret
faddp
cwtl
or
cmpb
and
cmpsl
jg
add
out
scas
mov
cmp
roll
lcall
cltd
or
test
std
nop
in
push
mov
pop
test
sub
or
popf
hlt
jle
jbe
in
lret
mov
bound
sub
jmp
cmp
iret
mov
adc
xchg
mov
lret
or
icebp
in
sbb
mov
sbb
stc
push
jo
mov
push
fisubrs
negb
sub
xor
sub
out
stos
inc
popf
ds
lret
hlt
and
sub
mov
mov
lock
xor
add
repz
push
push
and
clc
scas
inc
dec
loope
push
sbb
icebp
and
add
mov
in
andb
add
and
movsl
sub
jb
pushl
add
adc
xor
stc
and
adc
sub
fs
fwait
in
jne
lds
mov
and
dec
addr16
loop
roll
mov
pop
es
maskmovq
testl
and
dec
sbb
jns
clc
mov
pop
pop
leave
pop
cmp
lods
xchg
cmp
jle
lea
hlt
jbe
sub
inc
sbb
push
sbb
mov
leave
idiv
scas
loopne
mov
fwait
inc
sbb
or
jmp
test
imul
dec
and
mov
outsl
jl
inc
mov
int3
lcall
mov
jl
sbb
pminsw
jmp
loope
in
adc
fistps
clc
push
xor
and
push
mov
movsl
fld1
enter
cld
mov
mov
or
and
and
cwtl
xor
push
fidivl
repnz
out
jnp
cmp
inc
xor
sub
popf
mov
adc
imul
je
cmp
mov
in
cmp
sbb
push
popf
popf
shl
imull
imul
cmp
or
jb
jp
and
clc
add
xor
divb
pushf
or
xchg
push
out
jbe
gs
bound
int
insb
mov
mov
pop
clc
push
sarb
mov
hlt
dec
xchg
xor
cmpsb
jle
ret
pusha
adc
add
mov
jl
sub
rorb
notb
inc
cmc
movsb
out
mov
push
pop
push
lock
adc
mov
mov
cmp
and
loope
push
xchg
push
stos
adcb
ds
out
cmpsb
pushl
mov
adc
adcl
orb
outsl
jg
push
imul
sub
adc
jecxz
inc
sub
pop
lea
test
mov
and
fwait
push
test
imul
mov
mov
jp
sbb
mov
push
int
frstor
scas
push
xlat
ret
xchg
add
in
fstps
je
mov
lret
in
cltd
movsb
insb
cwtl
xor
lock
mov
push
mov
js
inc
dec
fwait
mov
mov
pop
nop
push
aam
ljmp
scas
push
xchg
adc
stc
dec
pop
dec
push
jns
negb
fidivrl
and
movl
adc
lcall
mov
lret
int
xchg
and
rolb
pop
add
mov
push
pop
cwtl
mov
push
push
xchg
mov
xchg
lret
ret
mov
inc
push
imul
or
outsb
or
inc
cld
xor
popa
les
sahf
sbb
xchg
rcrl
shll
stos
repnz
sub
arpl
push
or
sub
ds
fwait
xchg
imul
mov
push
lods
repz
or
and
dec
and
test
xchg
rclb
mov
xchg
out
or
gs
lret
sbb
jno
sbb
mov
mov
xor
int
daa
mov
or
dec
les
jle
lea
sbb
push
daa
jmp
lods
in
andl
ljmp
loopne
sahf
int3
and
aas
mov
call
inc
pop
test
std
xchg
je
mov
outsl
mov
stos
dec
gs
mov
repz
loope
and
aam
inc
icebp
xchg
jmp
outsl
xchg
adc
push
xor
xor
mov
dec
in
das
clc
mov
cltd
pop
pop
pushf
outsb
aad
scas
pop
mov
inc
add
xchg
xchg
push
push
add
mov
add
scas
push
xor
xor
sbb
inc
or
dec
lods
mov
into
invd
jbe
and
mov
sub
out
sub
loop
into
xchg
dec
jl
sub
pop
mov
mul
sbb
or
sub
int3
push
cmpsl
jbe
xor
fadd
pextrw
push
imul
dec
notb
inc
lock
sar
mov
mov
xchg
hlt
sahf
cmp
jo
inc
push
lds
jmp
jecxz
ret
sbb
decb
movsb
sbb
push
out
lret
lret
clc
cmp
bound
cmp
fmuls
dec
sub
cmp
jbe
push
aad
call
adc
or
leave
mov
sub
ror
fistl
mov
fsubs
jg
jo
mov
jo
lret
push
imul
or
sahf
ja
imul
mov
cmpsl
inc
aam
int
sarl
and
jbe
das
mov
mov
adc
lea
sub
jg
or
xchg
daa
lds
fimull
movsb
xor
ljmp
dec
or
add
xchg
imul
cmpsl
les
push
and
xchg
pop
bound
int
loopne
push
inc
dec
push
adc
xchg
or
test
gs
leave
add
inc
daa
loopne
pop
add
mov
fiaddl
mov
add
imul
fsqrt
pusha
pop
xchg
and
shrl
idiv
mov
and
pop
and
imull
test
adc
mov
rolb
pop
repnz
aam
rorb
sbb
pushf
je
and
push
cmpsl
sub
ljmp
sbb
inc
dec
mov
mov
xchg
push
xor
xor
fstl
add
aam
and
int3
out
mov
pop
addl
mov
rcrl
popaw
bound
xor
loop
addr16
add
jg
cs
dec
jge
jno
xorl
or
cmp
insl
nop
lret
scas
loopne
sub
or
lret
mov
scas
js
mov
or
insb
fwait
xor
pop
mov
les
mov
dec
aad
xchg
pop
icebp
and
jae
jle
pop
xlat
shrl
adc
inc
out
sbb
insb
mov
pop
pop
adcb
or
or
test
mov
cmpsb
mov
xchg
int3
xchg
add
mov
jmp
mov
outsl
fdivs
xchg
hlt
mov
int
jg
pop
fiadds
pop
out
jmp
and
sbb
mov
sbb
push
cmp
mov
cmp
pop
sbb
and
sub
das
sub
jae
cs
shl
das
push
rcr
enter
es
adc
das
popf
push
pop
test
push
mov
and
jne
or
das
scas
ja
push
cmp
mov
outsl
add
in
and
dec
jb
xchg
cmp
mov
mov
out
lds
dec
sbb
test
mov
sub
pop
sti
aad
sub
inc
jbe
insl
inc
xchg
enter
lret
sub
scas
mov
and
fbld
inc
mov
pop
adc
mov
enter
pop
sbb
mov
scas
lahf
dec
lods
leave
adc
sbb
lea
outsb
cli
insb
aas
jmp
jbe
fstpt
repz
aam
mov
idivl
bound
les
push
sub
push
sbb
pop
jb
inc
sti
pop
adc
push
jne
mov
and
sbb
js
rcl
insl
loop
mov
stc
sahf
dec
and
mov
lahf
dec
loopne
rclb
xchg
das
sub
mov
xlat
mov
dec
push
jmp
pop
mov
adc
xchg
xor
push
xor
ret
push
imul
jae
loop
sbb
repnz
je
sahf
cld
and
cmp
adc
sbb
mov
mov
xor
xchg
dec
add
jno
inc
loope
sbb
jmp
adc
dec
movsb
xchg
adc
sbb
adcl
and
mov
dec
loopne
push
xor
movsb
add
sti
or
nop
fwait
out
insb
int3
shrb
jae
cmp
cmp
cmp
bound
js
roll
mov
out
cld
inc
ds
sbb
scas
movsb
pop
and
push
mov
mov
movb
xchg
shlb
int
sub
mov
mov
sahf
add
popf
add
adc
lret
inc
and
movsl
popa
in
dec
sub
jmp
pop
sbb
aas
aas
in
jns
sub
mov
jno
add
jne
dec
in
insl
cmp
lret
stos
xor
sub
xor
insb
pop
jns
mov
add
repz
stos
cmp
dec
add
cmc
add
sarl
add
shll
or
call
xchg
repz
popf
sbb
loopne
lret
ret
sub
inc
inc
sbb
pop
mov
push
ljmp
cld
out
pop
ret
cmp
xor
int3
negb
mov
inc
push
push
test
mov
xchg
mov
movsb
in
pusha
inc
popa
insl
adc
lcall
call
push
sbb
inc
nop
in
int3
lret
jp
mov
int3
loopne
dec
dec
aaa
int
rcll
cmp
push
fsub
icebp
lods
lcall
out
fisttpll
mov
jmp
push
imul
sti
mov
xchg
repnz
iret
stc
es
add
sbb
jnp
mov
adc
jnp
jg
in
jg
fcom
loope
out
cmp
xchg
mov
xor
movsb
mov
repnz
out
mov
fdivrp
jnp
repnz
push
add
sub
inc
fwait
dec
xchg
and
imul
pop
faddl
jbe
sub
int
push
ret
icebp
xchg
jecxz
cld
aam
xchg
push
in
push
testl
icebp
test
jb
imul
cmp
imul
mov
inc
mov
insl
test
mov
push
mov
dec
ljmp
popa
std
and
loop
dec
ret
fsubs
pop
repnz
and
sbb
cmp
cmp
mov
mov
mov
inc
push
das
xor
mov
push
adc
pop
add
popa
clc
cwtl
out
shlb
sub
loopne
mov
sti
pushf
dec
lods
int
dec
fidivrl
sub
mov
imul
int3
jae
mov
xchg
rcll
xor
addr16
mov
adc
sbb
or
or
inc
xchg
ljmp
notb
mov
out
aam
mov
iret
lret
in
aaa
pop
test
inc
mov
adc
lahf
outsb
fstp
lock
out
cltd
aas
stc
xor
inc
add
dec
clc
js
cmc
pop
xor
scas
sbb
outsl
jecxz
and
mov
cmp
ds
inc
mov
sub
gs
xchg
xor
shll
shll
jbe
add
mov
jnp
dec
mov
imul
icebp
data16
out
and
ret
addr16
mov
or
cmc
jmp
pmulhw
aas
lds
lods
or
push
sub
adc
or
int
imul
mov
add
adc
movsl
add
dec
lods
outsl
and
jb
das
inc
imul
rorl
jbe
mov
add
fildll
shll
mov
cs
push
mov
mov
mov
xlat
or
push
and
jge
pop
dec
sti
pop
stos
pop
jne
std
pop
jbe
mov
xor
repnz
movsl
pop
fwait
js
pushf
shl
lcall
fwait
cmpb
adcb
mov
xor
fiaddl
mov
add
lods
push
into
test
or
sbb
mov
cld
imul
ds
dec
and
out
push
cli
push
push
and
jno
push
jbe
jp
push
and
mov
std
xor
iret
jno
or
mov
fwait
in
loop
mov
mov
inc
or
pop
or
mov
in
jp
lahf
das
inc
adc
cmp
cwtl
bound
add
and
mov
bound
xchg
jo
ret
cmpb
popa
jb
jae
inc
scas
ss
push
and
mov
daa
fs
ficoms
sbb
push
arpl
mov
xor
enter
xor
mov
mov
scas
adc
push
xchg
xchg
fldcw
dec
pushf
jl
add
cli
fs
push
aaa
pop
negb
lea
sahf
dec
loop
jns
mov
rcrl
rep
scas
xor
scas
pushf
dec
faddp
in
xchg
dec
jns
and
popf
sbb
jbe
adc
or
imul
ret
cwtl
push
popf
mov
inc
xchg
xor
jecxz
jle
push
push
test
iret
out
nop
insl
nop
mov
jbe
das
mov
push
int3
ja
js
cmc
push
xchg
rol
idivb
das
out
out
test
sub
sbb
cmp
aam
cmpsb
xor
fnstenv
aas
push
repnz
sub
mov
clc
mov
cli
fldt
sub
ror
xor
hlt
sbb
push
fisttpl
gs
mov
out
test
xor
push
xor
and
mov
adc
xor
add
inc
dec
data16
pop
in
jl
lahf
sbb
in
jae
adc
add
dec
leave
in
add
mov
pop
call
cmc
mov
cli
add
lds
jns
pop
jbe
mov
mov
xchg
add
mov
fwait
xor
mov
mov
push
cmpsb
or
pop
leave
adc
inc
cs
dec
mov
ja
or
inc
xchg
mov
inc
mov
mov
sub
lock
jl
dec
in
sbb
push
imul
xor
or
fisubs
or
scas
jno
adc
cltd
mov
arpl
out
jge
sbb
lds
mov
ja
in
aam
test
int
lcall
adc
sub
cmp
mov
das
dec
inc
stos
sarl
out
push
mov
push
sbb
insl
mov
pop
pop
push
lock
push
adc
dec
outsb
push
cmp
sub
cmp
shlb
popf
mov
jge
lahf
pop
jbe
push
add
aaa
mov
icebp
xchg
cmp
or
orl
stos
adc
push
testb
mov
jno
enter
and
push
test
push
sub
adc
inc
jnp
shll
jl
outsl
pop
lea
dec
pop
and
and
sub
iret
fs
test
mov
ljmp
xchg
filds
xchg
test
in
in
jle
test
cmp
xor
xchg
fs
call
xor
int
test
sti
sbb
mov
xor
in
push
dec
mov
jb
dec
adc
mov
mov
push
lret
into
lcall
and
jp
mov
iret
leave
mov
and
adc
jo
mov
sub
push
inc
mov
pop
push
mov
jge
cwtl
mov
cmpsl
mov
sub
es
push
test
dec
sub
mov
mov
cmp
xrelease
into
int3
mov
lahf
sbb
cmc
mov
imul
jg
lods
das
lds
popf
adc
test
dec
or
testb
out
outsl
mov
mov
dec
cs
out
xor
icebp
fisubrl
push
cmp
lds
jp
sti
aas
pop
dec
mov
xchg
mov
or
mov
cmp
push
inc
mov
or
xlat
pop
cld
cmp
stos
aas
add
fisubrl
adc
cmpsb
repz
stos
daa
dec
cli
xor
insl
movsl
inc
iret
sarl
mov
jbe
stc
hlt
adc
cmpsl
or
sub
and
adc
xchg
mov
fdiv
clc
adc
or
loopne
pop
fmul
inc
pop
fimuls
icebp
ret
mov
fldcw
pop
push
and
adc
mov
or
movsl
fistl
push
push
loopne
mov
imul
sub
pushf
cld
cs
xchg
sub
cmpl
sbb
scas
fsubrs
xchg
sbb
jb
push
lcall
iret
sub
add
xchg
pop
repnz
divb
xchg
add
mov
lret
mov
mov
pop
imul
jbe
push
mov
jle
push
and
lds
and
arpl
pop
pop
inc
movl
jle
push
ljmp
xlat
sti
xor
cmp
sbb
xchg
repz
pop
lcall
out
cld
fs
pause
test
pop
loop
repz
xchg
sub
xchg
inc
xchg
adcb
sub
imul
dec
dec
decb
inc
das
cmp
popf
jnp
imul
mov
cmp
add
jbe
jb
add
enter
cmpsl
cmpsb
add
scas
push
push
sbbb
or
inc
inc
jno
push
shlb
inc
pop
jge
xor
sbb
sub
xor
mov
ss
neg
jl
wrmsr
xorl
or
outsl
lea
test
das
mov
lret
gs
in
rcrl
push
xchg
pop
inc
cmp
scas
fiaddl
into
dec
dec
xor
xor
cmp
test
push
inc
xchg
or
in
cs
jl
cmc
stos
or
ljmp
dec
mov
sub
call
roll
in
mov
dec
pop
lret
fidivrl
jnp
dec
push
jbe
mov
lret
xor
lcall
push
xchg
in
add
mov
ja
lcall
sub
sub
cmpsb
fisubl
lahf
pop
add
xabort
lret
pop
pop
and
push
or
xchg
jle
or
sbb
mov
mov
mov
int3
sub
mull
push
mov
cli
mov
mov
mov
push
jp
mov
mov
inc
xchg
pop
mov
dec
ljmp
jo
lods
jp
mov
fistpl
cmc
lods
in
push
cmp
rcll
hlt
cmpsb
sub
or
fistps
aad
nop
ja
inc
xor
inc
push
jecxz
sub
sub
sbb
out
ret
inc
sub
movsl
and
mov
pop
pop
subb
xchg
xlat
in
insl
sub
inc
repnz
xor
xlat
pop
ljmp
mov
add
rcll
fisubs
inc
push
dec
push
orl
jecxz
and
mov
xchg
shlb
es
fwait
data16
push
adc
pop
stos
cmp
inc
loope
fstpt
or
int3
fiaddl
inc
mulb
imul
adc
daa
dec
mov
and
pop
enter
mov
dec
cmc
addr16
mov
lret
push
dec
pop
xor
and
inc
add
fstpt
das
jae
jns
xor
mov
mov
outsb
inc
sbb
mov
std
adcb
test
orl
dec
jno
mov
out
push
jle
jmp
leave
imul
lret
xchg
addr16
sub
mov
mov
sbb
ljmp
mov
call
dec
cltd
jge
icebp
std
leave
xchg
fwait
inc
push
push
test
enter
sub
in
in
mov
cld
dec
push
xchg
jae
sbb
jl
xchg
push
mov
add
out
popa
shr
mov
adc
mov
mov
pop
push
sbb
aas
mov
ror
shl
jbe
ss
scas
push
jb
xchg
js
cmp
xchg
pop
dec
xor
jmp
jge
xchg
xchg
in
lds
inc
lret
loope
jnp
xchg
jmp
movsb
push
inc
mov
pop
je
lcall
or
cltd
inc
jno
orl
aam
add
xlat
push
mov
in
xlat
add
test
aam
fldl
mov
fucom
lahf
or
lahf
rorb
pusha
shlb
mov
inc
fisttpll
adc
cmp
movl
sub
push
add
or
bound
movsb
xchg
and
xchg
mov
jecxz
notb
das
les
jmp
mov
fisubl
call
das
dec
add
jbe
xor
std
cmpl
cld
stos
in
push
repnz
xchg
mulb
mov
add
cld
enter
cmpsb
inc
shlb
out
xchg
xchg
cmpsb
in
jae
popa
cli
or
int3
jns
imul
bound
roll
enter
mov
adc
loope
orl
lea
mov
out
mov
jne
aas
jnp
in
movsb
inc
push
gs
aaa
or
inc
test
push
mov
xchg
in
jg
dec
icebp
std
dec
and
repnz
pop
daa
sub
pop
clc
jno
fs
sar
pop
out
stc
xchg
jnp
xchg
cmp
and
leave
les
or
add
mov
stos
test
mov
addr16
es
imul
jae
dec
jp
subl
push
enter
inc
xchg
hlt
int3
icebp
mov
cmp
mov
rclb
dec
sub
in
cmp
mov
add
cmp
pop
mov
mov
lods
mov
mov
mov
xor
adc
mov
in
cld
jo
sub
dec
cs
stos
ja
and
bswap
loopne
cmp
xor
xor
add
icebp
xor
mov
or
dec
js
jae
test
mov
repnz
sbb
dec
enter
adcb
aas
push
popa
mov
adc
cmpsb
out
stc
push
mov
or
bswap
jo
in
jo
cmp
divl
sbb
pop
lahf
sub
out
and
and
ljmp
shlb
pop
mov
rcl
cltd
lods
push
mov
addr16
push
xchg
call
hlt
sub
icebp
and
fldcw
jae
dec
or
xchg
imul
stos
mov
popf
je
sahf
mov
movsl
adc
mov
add
aad
or
insb
fs
dec
or
iret
fisttps
rorb
pop
dec
ja
call
xchg
testb
das
push
mov
xor
lea
mov
cmpsb
xchg
test
add
shlb
fsubl
push
insb
and
out
addr16
divb
xor
cwtl
jge
dec
dec
aad
pop
rcl
icebp
sti
shl
mov
jnp
daa
cmpsb
out
js
cld
push
inc
pop
stos
lea
mov
xor
cmp
test
jecxz
xchg
sbb
fidivrl
dec
cli
push
lret
cs
mov
roll
push
into
lds
push
ret
dec
ljmp
pop
pop
fdivrp
sbb
imul
movsl
jg
ds
enter
sbb
test
pushf
mov
mov
xor
mov
out
cld
mov
fildl
mov
mov
push
xorb
les
lds
sbb
es
int
popa
in
jno
loop
jnp
push
iret
leave
inc
adc
dec
add
aaa
adc
sbb
adc
rorb
aaa
sub
jecxz
sbb
pop
pop
imul
test
inc
jbe
fildll
cltd
stc
sub
ret
pop
test
pop
xchg
push
xor
sbb
pushf
idivl
test
dec
popa
dec
adc
mov
cwtl
jmp
sbb
les
mov
mov
in
dec
les
pop
ret
push
or
cmp
push
cmp
xlat
sub
ret
mov
push
in
push
leave
popa
mov
into
adc
xchg
mov
mov
test
shrl
mov
stc
mov
loop
fistpl
arpl
fistl
xlat
sahf
ficompl
xchg
int3
and
shl
mov
sti
pushf
out
mov
stos
sbb
add
into
hlt
sub
push
jns
mov
stos
hlt
out
iret
mov
inc
loop
xchg
jns
lcall
mov
ja
inc
scas
xchg
mov
and
fistps
std
testl
test
movsl
movsb
inc
add
adc
jmp
pop
lret
xchg
or
arpl
lock
adc
shlb
es
xor
dec
leave
or
dec
jecxz
out
mov
add
mov
testb
mov
xor
rorl
lcall
sahf
jae
lcall
repnz
jbe
sar
gs
mov
push
cmp
add
jno
inc
fwait
and
dec
call
fnstsw
mov
aad
inc
lahf
repnz
cltd
fsubs
mov
sub
sarb
sub
testl
mov
repz
sbb
in
aad
popf
orl
faddl
nop
in
adc
and
and
dec
int
imul
fwait
mov
jne
mov
imul
mov
push
push
js
push
dec
push
lds
call
mov
in
mov
add
mov
adc
mov
or
rol
test
and
mov
inc
into
pop
dec
or
in
mov
ljmp
data16
shlb
bound
sub
popf
stc
pop
bswap
pop
adc
enter
xchg
test
sbb
popa
aam
push
dec
add
test
dec
mov
sti
inc
adc
bound
mov
fcoml
lret
fistpl
jl
movsb
or
mov
js
scas
xchg
das
lret
in
jne
lahf
shlb
dec
adc
mov
mov
fs
inc
jmp
ficoms
push
sub
adc
pop
divl
pop
dec
adc
lret
loopne
cmp
pop
imul
mov
xchg
pop
lret
es
adc
mov
sbb
and
scas
addr16
xchg
test
imul
add
leave
xchg
movsl
xchg
xchg
lds
sbb
cmp
adc
sub
ljmp
test
push
sub
mov
cmp
psubusb
movsl
cmc
or
hlt
adc
fstl
movsl
xor
mov
loope
mov
mov
cltd
xor
lods
aas
xchg
jo
add
inc
in
push
int
inc
push
repz
ffreep
or
les
incb
adc
jo
lret
sbb
andl
adc
push
mov
jno
cmp
lock
xor
mov
rolb
lods
jae
xchg
xchg
mov
jecxz
aaa
mov
xor
add
fs
out
pushf
jl
cmp
xchg
cmp
jecxz
xchg
popf
push
mov
int3
das
ljmp
pop
stos
add
int3
xchg
adc
dec
sahf
lahf
push
mov
mov
lds
iret
pushf
dec
hlt
inc
int
lock
xchg
in
mov
pusha
testb
pop
repnz
mov
imulb
mov
jle
je
fscale
inc
pop
cmp
pop
lret
mov
or
add
jno
mov
mov
mov
decb
aad
or
cmp
mov
jmp
in
test
push
add
mov
in
xchg
pop
inc
xor
mov
and
pop
and
and
fsubr
dec
daa
inc
cmp
int3
and
in
cmp
sbb
cmpsl
movsl
data16
sbb
roll
je
cld
cmpsb
sub
jecxz
jns
fiadds
xor
jmp
adc
mov
ret
mov
ror
jge
mov
adc
inc
cwtl
inc
xor
sub
push
pop
mov
xor
adc
xor
push
mov
mov
pop
add
fucomi
add
dec
dec
jno
mov
ss
inc
fildl
les
adc
imul
sbb
or
jbe
push
nop
sub
inc
popa
repz
das
push
and
bound
cli
mov
add
xor
mov
jae
je
iret
xchg
xchg
in
and
les
xor
xchg
push
out
mov
in
dec
lea
push
jl
dec
daa
cs
sub
aaa
cmp
mov
fists
jo
push
xchg
pop
aad
call
fs
mulb
cld
sbb
out
sbb
lds
mov
cmp
push
fimull
lods
xchg
mov
shll
cmp
xchg
mov
sub
cmpl
sbb
mov
jae
adc
jl
adc
test
mov
sbb
sbb
decl
ret
add
xchg
dec
pop
mov
or
push
jnp
imul
ja
ficompl
dec
cmp
test
fstpt
into
mov
roll
lea
push
or
push
lret
mov
mov
pop
inc
mov
sbb
repz
pop
insl
scas
dec
cmp
lcall
imul
gs
ja
mov
je
shlb
xchg
jle
push
push
sbb
sti
adc
pop
mov
xchg
pushf
mov
divb
mov
xchg
sbbb
sti
or
cmp
pop
jp
mov
mov
rcrl
add
mov
mov
push
pop
push
fsubl
rorb
sbbl
ror
test
sarl
sub
adc
dec
mov
dec
movsl
adc
outsb
dec
fst
rclb
cmp
push
xlat
insl
in
cmpsb
lds
jo
jecxz
dec
lahf
in
call
ja
mov
cmp
push
divb
sti
cmpsb
ror
pop
sub
dec
dec
add
adc
movsb
mov
inc
test
jmp
pop
adc
inc
mov
mov
xchg
dec
outsb
inc
rcrb
cmp
gs
adc
insb
dec
int3
leave
sbb
jbe
push
xchg
fidivrl
out
add
or
enter
inc
fidivrs
int3
clc
sub
je
pop
cli
and
popa
scas
xor
pop
add
repz
jp
pop
add
cld
lahf
inc
aaa
into
pop
or
pop
sub
int3
sbb
pop
cmp
jo
mov
or
adcb
repz
xor
pop
dec
mov
ja
in
jnp
jns
mov
out
inc
xlat
in
repz
adc
sub
xchg
out
loope
outsb
mov
push
push
jnp
pusha
cltd
xor
ds
imul
and
popa
push
adc
leave
fmull
jge
pop
loope
mov
mov
pop
sbb
test
in
push
xchg
sbb
in
push
std
popf
or
cmp
out
mov
jnp
jne
jns
sub
int3
rcrl
jecxz
fidivl
stos
int3
dec
aad
sti
sbb
add
pop
inc
aas
ret
fnstcw
out
xor
cli
adc
pop
push
jmp
inc
add
mov
js
inc
jecxz
sbb
adc
dec
cmp
xchg
jle
stos
push
cmp
popf
into
aad
repz
sub
mov
xchg
push
mov
xchg
sbb
rol
aad
sarb
or
sbbl
and
cwtl
je
daa
cmpsb
test
fstpl
sub
pop
shlb
gs
and
pop
enter
mov
aad
xchg
daa
iret
data16
inc
jno
push
sub
cmp
mov
insl
xor
mov
xor
jnp
mov
sbb
stos
sub
aaa
push
shlb
shll
fwait
movsl
inc
lea
sbb
or
data16
sbb
rclb
mov
test
xchg
mov
rcrl
fwait
add
xor
pop
repz
jae
mov
pop
sbb
div
aam
test
fldl
sub
add
sbb
outsb
inc
fwait
jp
sbb
inc
xor
scas
xor
pop
mov
in
sahf
cmpsl
stc
aaa
int3
aam
pop
fldenv
lds
pop
pop
jb
jle
adc
aad
not
icebp
adc
dec
mov
pushf
cmp
fcomi
lea
pop
jl
sub
test
push
mov
in
jno
push
sbb
movsb
cmp
mov
jno
fnstenv
outsb
jnp
inc
pop
lods
lcall
xchg
in
addr16
dec
arpl
jne
xchg
gs
jmp
adc
cmp
dec
sbb
sub
adc
imul
xor
sbb
data16
adc
lods
push
into
cld
sbb
xchg
or
cltd
rcrb
movsl
test
mov
sbb
or
enter
cmp
jnp,pn
cmp
into
test
pop
push
push
lret
aas
imul
adc
pop
aam
cmpsb
lahf
push
add
jne
stos
mov
add
ljmp
mov
mov
mov
loop
lock
mov
xor
xchg
cmp
cmpsb
mov
fiaddl
test
stos
sub
cmp
sarb
fidivl
and
movsb
nop
in
mov
ret
fs
add
in
or
jge
subl
mov
bound
mov
int
addr16
jecxz
adc
mov
sbb
or
fs
cli
add
ror
fisubrl
mov
pop
std
jg
xchg
mov
mov
out
mov
movsb
jge
jp
rcll
fdivr
scas
repz
pushl
push
adc
adc
xchg
out
push
stc
xchg
lock
cmp
test
mov
in
adc
iret
stos
or
add
adc
stos
setle
xchg
aad
fadd
dec
arpl
cmp
mov
fldcw
jb
jecxz
xor
rcr
mov
jl
mov
negb
or
aaa
pop
cmp
sub
mov
lock
std
das
or
xor
pop
xor
pop
adc
add
les
out
add
sbb
sbb
xchg
pop
into
daa
pop
xchg
shrl
pop
orb
std
jp
push
in
xor
mov
adcl
inc
gs
test
mov
inc
mov
add
mov
outsb
jl
cmc
xor
sbb
movsl
or
jne,pn
nop
cmpl
je
adcl
adcl
cltd
out
subl
sub
outsb
sbb
adc
cmp
hlt
mov
popf
divl
test
mov
shlb
jecxz
adc
loopne
dec
fprem1
sub
mov
notb
mov
out
aaa
pop
mov
mov
or
inc
xchg
clc
std
repnz
cld
fmull
xchg
and
push
int
ret
int3
xchg
les
sub
addl
mov
cmp
or
shlb
adc
aas
addb
leave
les
ja
push
dec
or
pop
mov
stos
aaa
into
fnsave
dec
xor
sbb
fsubrl
out
inc
mov
push
add
int
sub
stos
cmp
lcall
or
fcmove
lcall
dec
pusha
sub
mov
xor
mov
xchg
jo
pop
and
mov
sbb
fcmovnbe
js
clc
ss
push
mov
das
push
sti
jae
repnz
add
jp
mov
pushf
mov
inc
aad
inc
mov
rclb
lds
cmp
arpl
dec
ss
mov
xlat
call
ja
hlt
xchg
rcrb
aam
sub
filds
loopne
push
dec
push
push
orl
add
xor
rorl
xchg
fs
inc
loope
shlb
fmul
daa
xor
push
int
inc
sub
jge
fmuls
or
mov
insl
or
inc
push
cwtl
test
into
dec
cmpsb
fldl
pop
push
push
in
sbb
jl
jg
adc
cmp
add
jae
add
xchg
std
out
and
push
or
pop
jno
hlt
xchg
dec
sub
loope
push
out
andl
add
mov
lock
pop
inc
rorb
xorl
repz
sbb
jno
add
pop
hlt
fstps
sub
int
xchg
mov
daa
sbb
into
stc
cmc
in
sbb
fwait
loope
sbb
dec
bound
mov
neg
adcb
mov
push
test
and
cmp
pop
stos
out
push
cmp
scas
adc
js
and
sbb
lret
sar
mov
sub
stos
mov
cmpsb
jb
or
pop
out
push
lahf
ret
fstps
mov
cmp
jne
sub
lds
mov
mov
xchg
sbb
sub
scas
shrb
mov
call
cmc
enter
push
xor
sub
fadds
push
lret
sbb
hlt
adc
ret
mov
int3
cmp
adc
stos
out
fmulp
je
scas
aam
cmp
test
xlat
das
sti
mov
jmp
pop
in
ljmp
add
nop
aad
pushf
mov
xchg
and
into
add
sub
inc
aad
scas
pop
loopne
mov
xor
xchg
dec
mov
pop
insb
lods
add
jmp
pop
scas
imul
inc
xchg
mov
mov
jnp
movsb
int
std
ljmp
loop
fs
movsl
bnd
sub
jl
fisubs
dec
push
daa
cmpsl
andb
clc
mov
mov
jno
xchg
adc
aam
ja
scas
lcall
inc
add
out
push
inc
cli
lea
arpl
mov
aam
xchg
fs
aam
xor
xchg
imul
mov
pop
mov
in
pop
std
rorl
jl
jne
mov
jb
mov
mov
push
pushf
lock
rcr
bound
or
jnp
push
mov
xchg
fidivrs
fistl
movsb
mov
sub
data16
xchg
cmp
shll
out
push
adc
xor
push
fistl
xor
sbb
jae
das
pop
pop
movsl
mov
das
push
in
jmp
pusha
cmp
faddp
add
es
filds
sub
adcl
jb
scas
bound
ret
jbe
rorl
lahf
addr16
aas
sub
repz
jo
add
leave
and
dec
iret
test
stos
adc
jae
ret
or
or
mov
and
icebp
clc
adc
xor
bound
fsubl
adc
stc
leave
push
mov
cmpsl
add
sahf
sub
and
add
cmpsb
popa
jnp
inc
sub
imul
mov
sbb
fld
push
mov
sbb
mov
jne
mov
pop
and
push
cmp
psubb
xchg
fidivs
add
or
pop
fdivrp
mov
out
sub
addr16
mov
mov
jmp
in
in
xchg
dec
inc
notb
sbb
xor
cmc
or
outsl
cld
stos
mov
movsb
or
jbe
cmp
repz
gs
clc
adc
cmp
mov
and
out
inc
fists
sub
push
sbb
iret
add
clc
sub
add
adc
lock
mov
out
aad
repz
in
sbb
xor
xor
movsl
push
push
insl
mov
orl
imul
mov
sbb
dec
sub
push
push
sub
sub
sub
roll
or
in
xor
xchg
mov
mov
popf
sub
aad
fistpl
push
adc
mov
mov
mov
out
jbe
jae
adc
pop
mov
stos
xchg
fmull
mov
dec
outsb
pop
ds
mov
fisubs
inc
xchg
rorl
add
sub
sahf
jp
push
dec
push
cmpsb
mov
out
mov
push
jmp
jp
in
dec
push
js
or
xor
outsl
data16
leave
mov
popf
mov
jbe
loopne
push
andl
sbb
xchg
xchg
mov
xchg
movsb
out
fsts
mov
mov
push
movsb
clc
inc
test
pop
mov
hlt
in
inc
idivb
fsubrl
sahf
rcl
and
add
cltd
rol
xchg
jge
leave
mov
fstps
lds
std
rolb
fwait
mov
out
sarb
jg
popf
and
imul
mov
mov
out
fnstcw
sti
mov
push
xchg
lods
rolb
sbbb
mov
shlb
push
fmuls
loopne
push
shlb
pop
ret
std
dec
xchg
mov
out
je
stc
xchg
jnp
jmp
xor
arpl
popf
inc
scas
std
mov
cmp
inc
mov
ljmp
add
jo
push
test
jns
or
pop
aas
shll
in
sbb
imulb
movsw
icebp
fbld
int
arpl
adc
leave
push
mov
cmp
inc
pushf
xchg
mov
add
adc
movb
aam
loope
cmp
negl
clc
ret
fidivs
cli
dec
mov
fnsave
popa
dec
push
mov
std
ror
fsubr
mov
fstps
enter
push
arpl
mov
xchg
xor
cli
cwtl
cli
xorb
ret
xorl
ss
pop
sub
or
pop
sbb
sub
jecxz
adc
jmp
push
ret
or
pop
lods
xlat
cmpsl
jmp
push
xor
mov
aad
cmpsl
lret
cmp
repnz
popf
fsub
push
bound
insb
loope
nop
scas
fisubl
stc
and
adc
inc
aad
and
into
dec
mov
loop
adc
test
insb
xor
or
int3
cmp
adc
mov
lods
mov
loopne
pop
leave
sub
mov
inc
or
iret
or
xor
imul
sbb
pusha
adc
js
addb
lcall
pop
cmp
out
clc
daa
imul
sbb
jbe
imul
mov
clc
push
mov
xor
orl
arpl
fists
mov
pop
addl
bound
xchg
aad
rcrb
fdivrp
loopne
sub
aas
cmp
inc
and
xor
and
popa
mov
mov
mov
pusha
push
mov
mov
aas
inc
or
imul
shll
gs
inc
push
test
cmp
add
loope
scas
pop
inc
cs
cmp
cli
adc
sub
xchg
ds
les
lret
das
cmp
xchg
ds
lods
repnz
jp
repz
dec
repz
inc
push
jno
jmp
ljmp
jno
out
push
test
out
mov
ret
adc
xor
in
jmp
ret
inc
loop
arpl
scas
xor
inc
popf
xchg
daa
int3
enter
add
push
push
stos
cmpsb
jmp
jle
or
push
stc
jbe
idiv
adc
push
outsl
enter
or
mov
cmp
sbb
int
xchg
pop
jae
cmp
popf
mov
cmp
adc
and
cmp
xor
xchg
std
adc
xchg
inc
jns
sub
lcall
cmp
ficompl
outsl
or
es
xchg
push
jmp
and
out
test
aaa
dec
fdivr
xchg
pop
push
movsl
mov
imul
rolb
jnp
test
push
pop
inc
adc
sub
jb
in
lcall
pop
mov
sbb
nop
mov
cmp
fidivrs
sub
repz
sahf
push
sub
mov
or
lods
mov
adc
lcall
int3
sub
pop
arpl
cmp
lock
or
push
ss
jle
mov
arpl
cmp
mov
rclb
cmpsb
and
cmp
pop
push
loop
inc
cmp
push
or
and
inc
pop
cmpsl
adc
push
sbb
cmp
sbb
dec
adc
or
push
arpl
fstl
int
adc
add
in
dec
das
lcall
leave
cmpsb
mov
cmc
out
cli
sar
repz
loopne
push
jmp
mov
xchg
inc
jle
inc
imul
xor
mov
lds
pop
lahf
sti
dec
adc
mov
dec
jae
mov
mov
ret
mov
sub
and
pop
lds
repnz
mov
xchg
out
icebp
sti
loopne
xchg
pusha
gs
inc
adc
je
xor
inc
mov
dec
push
dec
xchg
mov
xchg
bt
push
popf
test
dec
not
je
stos
xor
jb
insb
inc
das
out
aad
sub
mov
mov
mov
adc
das
ret
aaa
xor
int
lods
jbe
add
cmp
cli
popa
hlt
mov
push
cld
out
jns
jne
cltd
xor
push
mov
mov
mov
scas
in
adc
add
outsb
cmp
mov
xor
jb
and
aaa
push
inc
mov
aad
adc
lret
dec
xlat
xchg
adc
iret
lea
xor
xor
cmp
xor
mov
jbe
aam
xchg
cmp
out
xchg
and
sarl
sub
xchg
scas
or
or
mov
icebp
pop
jae
insl
subb
popa
inc
fwait
leave
xor
pop
push
insl
test
mov
mov
jecxz
loop
sub
xor
es
fidivrl
fbstp
inc
mov
mov
dec
fcomi
push
cltd
jns
dec
sbb
nop
mov
outsl
pop
add
out
add
mov
jae
inc
movb
out
out
out
xor
pop
inc
sbbl
jb
cmpsl
aas
push
daa
int
lret
scas
xchg
icebp
sbb
repnz
movb
sahf
sbb
int
jo
lcall
cli
clc
mov
ja
push
call
int
movsl
xor
cwtl
mov
push
dec
pop
lods
js
jmp
enter
loop
pop
sub
push
push
pop
jecxz
fcoml
xchg
loopne
clc
leave
xor
int3
ret
dec
inc
add
inc
test
and
inc
decb
shl
mov
push
scas
mov
jbe
sub
jb
andb
mov
es
inc
pop
jg
xlat
mov
nop
mov
int3
test
aam
add
fdivrs
arpl
lds
ss
sbb
fstl
cmp
or
fwait
mov
inc
xor
cld
clc
mov
cwtl
adcb
in
arpl
mov
cld
push
jns
rcrb
push
xor
ss
aad
nop
dec
adc
or
xchg
dec
out
pop
sbb
or
andb
loopne
stc
out
sub
les
pushf
mov
sti
daa
push
add
sbb
xor
mov
std
cmp
aam
push
and
inc
cmp
imul
push
sub
addr16
mov
cmp
push
test
aam
mov
add
mov
lds
leave
cwtl
jge
ja
andb
inc
lods
cmpl
lahf
fidivs
jns
pop
and
sub
in
and
cltd
cmpsl
dec
push
xor
sbb
sahf
jle
adc
dec
or
cmc
rcll
sbb
inc
mov
push
test
cmp
xor
insb
pop
js
mov
outsb
add
xchg
out
or
pushl
mov
mov
cwtl
stc
loope
iret
push
fistps
into
push
lgs
shrb
cmp
pop
lret
leave
shl
and
mov
dec
add
cltd
fs
xor
leave
ds
fs
mov
pop
mov
lock
repnz
adc
daa
dec
jnp
push
add
inc
js
lahf
aaa
negl
cmp
outsl
dec
scas
xchg
mov
sbb
mov
push
ja
cmc
call
jg
pop
mov
push
pop
push
les
push
adc
mul
pop
pusha
cs
xchg
xor
icebp
insb
jg
sub
lret
pop
in
add
pusha
cltd
sbb
je
in
cmc
repnz
inc
mov
or
scas
and
jl
cmpsb
jb
insb
xchg
and
test
and
push
rcrl
inc
xor
lret
dec
iret
fildll
cmp
dec
addr16
inc
or
sub
and
cmc
mov
dec
daa
and
and
data16
dec
lds
ret
lret
popf
test
sbb
sub
inc
out
add
adc
addl
xchg
cmp
loop
rcll
and
filds
sbb
or
jle
aaa
rcrb
aaa
xchg
cmp
push
push
jg
mov
pop
mov
mov
bnd
add
in
repz
mov
jo
sbb
mov
hlt
ja
sub
lcall
pop
fucomi
mov
inc
cltd
dec
jl
pop
mov
rclb
daa
aaa
ret
add
or
xchg
adc
adcl
mov
stc
pop
sarl
and
lcall
cli
sbb
cld
dec
pop
inc
adc
xor
shlb
mov
adc
pop
ficoml
add
ja
xchg
lret
clc
add
sbb
sub
mov
fiadds
or
subb
pop
pop
rcrb
loopne
sub
or
lret
jmp
das
dec
mov
enter
lcall
mov
insl
mov
xor
std
fidivrs
daa
inc
fbstp
xchg
in
jmp
mov
int
pop
in
jnp
ficoml
mov
iret
inc
or
fsubs
out
mov
pop
fidivrl
and
jecxz
stc
in
push
mov
add
daa
js
lea
adc
arpl
xor
dec
ljmp
push
test
pop
ret
insb
jg
test
mov
jae
mov
jmp
inc
aaa
mov
rcl
mov
arpl
and
inc
jle
push
test
popl
ja
jns
sbb
scas
lods
lds
addr16
push
adc
int
push
jge
aam
pop
stos
pop
jg
test
cmpsl
iret
cmp
xorl
es
push
inc
adc
aam
fdivs
nop
sbb
cld
add
in
fistpll
mov
mov
in
dec
ret
int
aad
mov
dec
in
je
aas
pop
jle
addr16
xchg
push
add
insb
pop
cmp
cmp
loope
push
popf
aaa
data16
jl
mov
push
lret
bound
xchg
pop
nop
cwtl
add
mov
sbb
cmp
inc
pop
mov
in
inc
lds
ds
pop
shlb
mov
mov
mov
mov
imul
sub
jp
stos
push
pop
and
icebp
xor
test
aam
mov
fbstp
or
sbb
movl
insl
inc
mov
insl
ja
cmp
dec
in
adc
sahf
xchg
push
xorb
ds
fwait
sub
ljmp
outsl
pop
jg
push
or
dec
pop
mov
lahf
popf
sbb
cmp
cmp
jmp
and
es
popf
and
movsb
daa
push
xchg
aas
sub
jp
insl
adc
adc
dec
loop
mov
dec
hlt
mov
leave
sbb
add
mov
mov
in
add
adc
mov
xor
outsl
lods
repnz
sbb
stc
call
sbb
lea
jno
enter
stos
and
pslld
fwait
lahf
adc
dec
jp
je
cmp
mov
sub
add
jno
cld
shrl
mov
cmpb
or
mov
jb
inc
mov
clc
pop
jp
adcl
mov
mov
mov
fbstp
mov
cli
mov
sbb
jne
repz
mov
daa
cmp
orl
sub
outsl
jge
mov
movsl
out
fldenv
lret
in
popa
sbb
pop
out
mov
pop
je
rcl
loope
dec
mov
mov
scas
inc
jb
out
push
xor
movsb
xor
cmp
mov
jo
je
mov
ds
icebp
cmp
or
jo
leave
lods
mov
mull
xchg
mov
daa
imul
cld
enter
lds
xchg
data16
fnstsw
mov
sbb
imul
mov
clc
lock
aam
loopne
imul
sahf
loopne
cs
add
add
cmc
mov
xor
cltd
mov
js
xor
clc
lods
popa
xor
arpl
dec
jmpw
pop
outsl
enter
jle
imul
out
aas
pusha
sub
nop
test
mov
and
jae
cmc
mov
jl
iret
mov
jp
fisubl
xlat
or
pop
scas
nop
dec
mov
jge
mov
imul
int3
jae
fwait
mov
add
mov
test
cmpsl
je
hlt
faddl
test
or
in
dec
jge
addr16
mov
jg
iret
pop
bound
aad
sbb
inc
or
out
push
mov
lods
out
aad
xor
push
inc
xor
xor
cmp
pop
out
sbbb
sbb
push
inc
jo
pop
aad
xchg
out
inc
imul
dec
lea
cmp
jbe
sub
or
push
pop
pop
test
or
adc
jb
add
dec
mov
out
lret
mov
repz
repz
lods
mov
popf
les
dec
xor
shrb
mov
add
sub
out
std
ds
push
stos
mov
lcall
ret
cltd
adc
aad
xor
xchg
pop
xor
mov
mov
cmp
or
js
hlt
cs
outsb
repz
mov
repz
pop
cld
fwait
nop
xchg
ljmp
push
mov
add
sbb
and
mov
jns
fisttps
mov
xor
push
adc
addl
std
cld
pop
or
or
in
out
fisttpll
cmp
leave
ret
insb
popa
cmp
mov
cmp
push
in
sub
lret
adc
pop
or
mov
add
jp
xchg
test
addr16
js
std
xchg
lret
rorb
sbb
in
loop
mov
iret
and
cmpsb
fists
imul
xchg
pop
xchg
cld
adc
pop
sbb
pusha
mov
inc
mov
scas
ss
in
test
bound
adc
and
add
ffreep
repz
nop
insb
jo
aas
shll
lahf
sub
cli
loope
test
loop
or
adc
adc
or
mov
fdivrl
xlat
inc
mov
ret
mov
shlb
fcoml
pop
imul
in
pusha
shr
bound
outsl
shl
int3
pop
popf
fdivs
pop
cmp
pop
into
and
sarb
add
enter
hlt
sub
pop
jmp
shr
inc
addr16
pushf
out
or
mull
out
imul
or
jb
inc
dec
push
push
push
cmc
pop
mov
outsl
int
add
insb
push
push
js
fsubr
cmpsb
cmp
pushf
and
movsb
aam
mov
push
sbb
loop
add
popa
js
inc
or
out
mov
loopne
adc
mov
mov
insb
jge
sbb
push
mov
and
dec
xor
jnp
mov
lcall
pop
xchg
pop
int
jb
test
enter
mov
lds
xlat
sahf
clc
mov
mov
xlat
pop
adcl
stos
out
add
xchg
or
sub
push
shll
jl
insb
xor
aaa
xlat
stc
fxch
dec
aad
js
loop
shrl
push
lcall
inc
fld
pop
call
daa
add
fmuls
pop
mov
rcr
fdiv
imull
adc
pop
mov
movsb
jle
fs
jbe
pop
pop
pusha
mov
jg
mull
sbb
faddl
fwait
sbb
leave
mov
add
mov
idivb
clc
fsubr
pushf
loopne
cwtl
xchg
sub
cmp
inc
gs
push
pop
jne
inc
xchg
and
mov
aad
test
pop
push
cmc
fists
mov
fs
mov
push
test
sub
add
shrl
push
sbb
mov
jne
push
dec
xchg
push
orb
inc
mov
fwait
lods
xor
cmpl
or
pop
test
pop
and
push
stc
out
xchg
push
sub
and
sbbb
rclb
aam
fwait
imul
xlat
mov
gs
mov
pop
adc
sahf
xor
das
xchg
sbb
push
movsb
outsb
mov
fcomi
in
adc
mov
or
addb
inc
icebp
xchg
mov
push
pop
movb
mov
mov
mov
pop
aad
fildll
and
addr16
mov
out
xchg
and
add
push
out
in
lock
loope
pop
adc
fdiv
add
jmp
sbb
shll
mov
fmuls
inc
pop
popf
mov
ds
pop
dec
test
jno
jl
ret
pop
inc
scas
std
mov
add
bnd
rclb
cmpsb
insl
in
pop
insl
aaa
sti
ljmp
loopne
sbb
xor
lods
mov
mov
jge
test
pushf
cltd
push
pop
push
jecxz
cmp
in
loop
dec
jmp
xchg
sbb
jno
sub
ds
aad
scas
pop
in
mov
or
orl
jmp
loopne
ss
push
rorl
ja
xchg
xor
mov
aaa
cmpsb
stos
cs
xchg
arpl
divb
into
mov
adc
scas
pop
lea
les
mov
adc
or
lahf
lahf
jmp
jle
add
and
jle
push
daa
jmp
je
imul
xor
cmpsl
pop
sub
mov
fdivr
out
scas
ret
mov
jmp
fs
push
fists
mov
dec
sbb
dec
scas
and
into
test
lods
insb
adc
addb
cmp
or
test
jb
in
addr16
push
jl
fstpt
loope
push
cltd
test
and
mov
daa
fcompl
mov
ret
xchg
xchg
sahf
leave
xor
ja
adc
pop
mov
add
inc
mov
jo
movl
sbb
aam
jnp
or
mov
hlt
out
cwtl
cmp
or
lods
dec
loopne
and
aad
cmc
out
pop
pusha
scas
and
mov
rclb
jns
inc
lods
sbbl
popf
adc
pushf
dec
jno
jae
fisubs
adcb
lret
pop
sub
push
in
cmp
sarb
ss
and
sbb
xchg
dec
and
enter
dec
jnp
mov
dec
movsb
jne,pt
push
nop
imul
inc
xchg
leave
add
inc
push
movsl
mov
imull
das
shrb
fildll
push
jl
cwtl
fstl
jge
dec
sti
sbb
stos
imulb
les
test
test
pop
dec
mov
jb
out
ret
popf
mov
push
inc
idivl
mov
lods
cwtl
or
mov
test
adc
sti
mov
pop
test
int3
dec
mov
subl
mov
sub
pop
mov
lret
jl
mov
notb
nop
mov
jo
lahf
and
scas
test
adc
inc
jmp
xlat
cmp
sub
test
popa
mov
jmp
lds
fsubs
xor
enter
dec
mov
movsb
sbb
cld
mov
and
mov
lock
insb
dec
pop
ljmp
notl
jl
xor
or
sbb
mov
fistpll
test
icebp
fwait
repz
inc
les
call
dec
jbe
and
adc
out
sbb
arpl
insb
pop
test
dec
pop
jno
adc
dec
in
mov
icebp
and
push
movsl
mov
inc
fidivl
xchg
ret
imul
sbbl
insl
xchg
jmp
add
sbb
push
cmp
dec
and
imull
mov
sub
xor
shll
mov
addb
jns
sahf
lret
mul
xchg
mov
cwtl
xor
cwtl
ficomps
scas
cli
movsl
lret
rorl
push
pop
sub
and
mov
out
push
in
sbb
adc
pop
scas
sub
addl
leave
mov
out
pop
sub
arpl
dec
faddl
and
out
mov
adc
fmul
or
lods
popf
adc
dec
lods
repz
jge
xor
into
dec
jmp
push
lock
push
and
or
lahf
push
rclb
out
cmp
in
inc
push
adc
lahf
shrl
mov
adc
jns
cmp
aas
ja
mov
push
mov
add
mov
sub
cmpb
and
imul
and
dec
ror
mov
call
fwait
setge
add
pusha
pcmpeqw
push
and
loopne
pop
in
inc
js
and
push
daa
fisubs
in
xor
or
aad
jg
push
mov
nop
push
add
mov
dec
in
insl
test
mov
fs
cmpsl
add
es
sub
movsb
lcall
mov
push
and
push
sub
js
data16
mov
adc
stos
mov
std
int3
and
lret
add
js
mov
jg
cli
jo
dec
sbb
dec
mov
jns
push
and
inc
xchg
popf
clc
stos
hlt
inc
scas
bound
sbb
sub
call
push
pusha
aaa
and
push
movsb
adc
push
fnstcw
cmp
sbb
adc
cmp
test
mov
inc
cmp
fdivs
fs
test
negl
insl
mov
roll
mov
push
xchg
sbb
or
in
add
scas
fs
outsl
dec
add
adc
scas
mov
push
xor
movsl
sbb
jg
in
or
inc
jne
enter
cld
js
add
lea
jecxz
insl
push
fs
inc
inc
mov
int3
sbb
ja
sub
xchg
sub
sub
call
jg
push
sbb
adc
add
mov
ret
or
jnp
imul
dec
roll
sbb
ja
pop
lret
cs
mov
sbb
loop
push
and
push
fcmove
testl
fwait
aam
push
hlt
adc
and
out
push
xor
frstor
adc
sarl
sub
lods
sarb
jle
ja
xchg
xchg
add
aas
mov
test
lods
pop
sbb
fmul
add
and
popa
and
push
pop
push
jl
push
push
xor
orb
ljmp
imul
ss
icebp
sbb
or
mov
pushf
andl
aaa
xlat
icebp
enter
push
sbb
scas
xchg
pop
pop
jl
jnp
add
sbb
cld
dec
ja
outsb
aaa
dec
aad
fdivs
inc
jnp
daa
outsl
add
xor
pop
test
xor
or
lods
inc
xchg
mov
push
fcoml
ret
pop
push
dec
test
and
frstor
cmp
cltd
xchg
adc
jp
inc
loop
loopne
mov
imul
scas
lret
test
sub
cmpsb
xchg
sahf
adc
add
xchg
iret
mov
jo
push
rcr
cwtl
and
inc
imul
fdivs
mov
jns
pop
fucomi
inc
das
daa
and
add
cmp
imul
and
mov
test
push
stc
data16
mov
sti
and
ljmp
cmpsb
xchg
add
insl
leave
ja
in
push
jge
test
out
movsb
mov
add
push
or
or
scas
lahf
sub
pusha
jne
aam
inc
movsl
sbb
hlt
xor
or
nop
test
jge
fsts
lods
jmp
lret
push
mov
adc
xchg
dec
outsb
test
add
xchg
lods
lahf
dec
arpl
aad
fdivs
push
mov
cmpsl
ds
mov
jo
in
push
lret
dec
fs
inc
pop
push
jbe
es
iret
mov
into
mov
mov
ficompl
cltd
js
mov
adc
dec
mov
jmp
sti
dec
sahf
mov
and
pop
outsl
pushf
dec
cmp
ffree
aas
imull
dec
stos
div
pop
daa
xchg
daa
mov
aaa
sub
shrb
daa
cltd
imulb
outsl
ljmp
mov
btr
push
popl
or
in
sub
out
mov
inc
enter
inc
pop
jmp
mov
inc
mov
pusha
push
aam
orl
mov
andb
je
out
sbb
xor
jb
in
or
lret
cmp
loop
clc
sti
imul
lds
sarl
scas
jbe
push
icebp
xchg
inc
add
sub
inc
cmc
add
cld
insl
aaa
xchg
sbb
xchg
xor
and
xor
push
arpl
add
sub
and
lods
fidivrs
cmc
in
fidivrl
out
in
mov
sbb
add
and
jo
outsl
ja
fwait
int3
aad
test
pop
aad
add
jb
fisttpll
sbb
cmp
xor
sub
jge
mov
dec
mov
testb
pop
xor
or
mov
lcallw
std
jg
cmp
and
sbbl
idivb
out
adc
cmp
repz
ja
mov
out
stos
hlt
mov
pop
jb
scas
dec
out
xor
inc
addr16
cmpsl
sub
sbb
lods
nop
xor
out
adc
cltd
into
outsl
popa
pop
cmc
inc
xchg
inc
cmp
add
sbbb
xchg
nop
or
mov
fcomps
in
xchg
pop
insl
cmp
inc
loope
test
scas
jns
jp
fdivrp
dec
gs
pop
xchg
iret
pop
sbb
shrb
sub
out
jle
sahf
cltd
pop
das
cs
pop
xor
lcall
nop
popa
jbe
jns
mov
fisubs
mov
adc
mov
addr16
les
xorl
cmpsl
ljmp
dec
jae
xchg
mov
mov
jmp
sub
mov
test
test
ja
es
lods
cmp
mov
popf
aam
cs
js
and
repnz
pop
call
push
cs
jns
jnp
pop
sbbb
clc
xchg
fwait
jnp
mov
into
xlat
fs
aaa
inc
stc
cmpsb
pop
mov
int
in
push
gs
cwtl
mov
inc
movsl
mov
dec
nop
scas
push
in
pushw
xor
inc
xor
and
out
imul
xor
rclb
std
outsb
jmp
and
inc
add
out
xorl
xchg
sbb
adc
push
mov
pop
sahf
loop
inc
enter
push
lea
loopne
or
adcb
lods
dec
in
mov
aad
xchg
jae
cmp
lods
es
repnz
out
scas
adc
jg
mov
fwait
pop
stos
shlb
iret
sub
mov
and
pusha
popf
jo
rcl
add
je
jge
mov
inc
test
mov
shrl
fidivl
lcall
and
push
sarl
popf
cmpl
xor
dec
into
mov
in
inc
push
in
or
out
adc
popf
adc
jb
add
cmp
mov
pop
add
cmpsl
push
cmp
dec
cmp
mov
jae
add
out
test
dec
push
pop
adc
jb
cltd
or
enter
adc
cmpsl
cmp
dec
sbb
or
or
insl
pop
inc
mov
lahf
movsl
and
inc
sbb
pop
push
push
dec
fmul
test
xchg
lea
lods
test
xor
in
mov
sbb
fmull
and
push
pushf
bound
fsubr
xchg
ret
jne
pushf
push
sbb
sbbl
cwtl
icebp
mov
xor
pop
inc
sar
xchg
jmp
push
cmp
sti
out
data16
adc
jno
or
jb
sahf
mul
pop
enter
mov
pop
ret
add
hlt
cmp
popf
xorl
push
mov
loopne
mov
xchg
iret
xchg
pop
pop
mov
in
dec
aas
test
xchg
jbe
ss
cmp
fdivs
pushf
xor
add
fstps
xchg
mov
cmpb
imul
imul
add
inc
daa
dec
loope
adc
pushf
call
pusha
add
loope
cltd
out
adc
mov
add
push
aam
add
cmp
aam
popa
movsl
fdivrs
pop
sbb
mov
test
enter
das
mov
lods
jb
push
pushl
jl
mov
xchg
aas
popf
cmpsb
jo
insl
gs
jnp
jae
mov
push
lcall
dec
pop
jle
inc
xlat
dec
test
out
push
notl
mov
inc
stc
adc
ja
pop
inc
pop
mov
scas
xchg
fnsave
arpl
cld
push
push
push
add
dec
and
xor
repnz
jbe
mov
sub
pusha
xchg
sub
inc
cwtl
aaa
or
cmp
popl
inc
jae
hlt
xchg
fimull
stos
fildll
adc
mov
mov
ja
icebp
mov
dec
into
dec
and
scas
jnp
xchg
cmp
cltd
mov
jp
mov
sbb
xorl
xchg
cmpsb
xor
pop
repz
and
call
test
sbb
xchg
mov
add
imul
inc
inc
inc
sub
pop
mov
mov
imul
test
aam
dec
pop
sub
or
sub
or
adc
mov
enter
int3
inc
cmp
add
ret
bnd
jecxz
push
test
pushf
scas
jle
mov
popl
div
mov
and
repnz
icebp
repnz
loopne
call
ret
jb
push
pop
out
int3
and
fdivrl
push
js
pusha
inc
lahf
adc
gs
out
pop
sti
aaa
testb
adc
or
rorl
jb
sti
mov
cmp
mov
adc
shlb
scas
rolb
popa
pop
adc
ja
out
cmp
fnstcw
ret
out
out
arpl
movsl
divb
push
cmp
sbb
sbb
test
or
jmp
push
popl
sub
mov
fs
fisubrs
js
pop
idiv
and
cmpsl
mov
test
inc
loopne
jbe
pop
or
inc
and
ret
std
gs
xchg
mov
shl
hlt
lcall
adc
clc
addr16
lods
mov
scas
mov
cltd
dec
adc
sbb
lcall
stc
lods
add
mov
fcmovb
call
in
outsl
push
or
dec
sbb
push
adcl
fsubr
cmpsl
inc
add
dec
xchg
lods
loopne
mov
mov
add
jne
jo
lret
lret
dec
js
sti
jmp
out
leave
lcall
and
aas
mov
cld
pusha
cltd
jmp
pop
mov
push
lea
rclb
inc
outsl
lcall
outsb
inc
mov
shll
inc
fdivrs
mov
add
xor
xor
andl
cmp
jne
push
ss
pop
sub
add
xchg
js
aaa
adc
and
enter
mov
and
ljmp
mov
sbb
js
mov
inc
es
jne
shll
fcomps
outsl
test
cwtl
inc
es
add
mov
fsts
lds
jnp
in
in
popf
add
stos
cmpsb
daa
jl
or
add
inc
mov
mov
pushf
dec
sbb
popf
mov
cmp
shrl
movsl
inc
push
add
ljmp
mov
add
sub
fdivrs
andl
pop
dec
pop
int3
cltd
push
pop
ret
cmp
aam
mov
mov
push
inc
xchg
mov
mov
xchg
shrb
mov
fwait
adc
mov
jo
mov
ljmp
add
aam
inc
movsb
dec
nop
push
cmpsb
les
pusha
cmp
sbb
dec
es
shll
incb
add
inc
fcompl
sbb
mov
andl
bnd
add
mov
mov
jl
cs
sub
adc
daa
aas
jb
stc
dec
popf
cmp
sub
pop
vcvtpd2dqx
xor
dec
dec
out
push
or
dec
jbe
xchg
mov
daa
testb
push
cwtl
rcrb
call
cwtl
mov
push
jae
xchg
push
cmpsl
test
andb
jns
roll
fildl
out
flds
mov
sub
std
test
ret
inc
mov
pop
pushf
mov
or
aaa
pop
xchg
xchg
rcr
ret
ret
pusha
insl
insb
pop
outsb
cbtw
xor
ljmp
std
gs
sbb
xor
leave
mov
jecxz
mov
jnp
jb
fcmovnu
aaa
int
dec
push
sub
jp
push
stc
push
mov
and
idivl
mov
sub
mov
dec
cli
in
inc
fs
ljmp
dec
lds
hlt
pushf
imul
dec
xchg
dec
mov
mov
aad
lock
fisttpl
lods
cmp
or
pop
push
mov
pop
data16
mov
adc
jg
push
add
nop
in
fisttpl
insl
insl
jbe
xor
arpl
cmp
adc
jne
push
adc
mov
mov
popa
xchg
pop
push
pushf
std
cwtl
xlat
paddb
sbb
stc
mov
or
jmp
ror
rolb
mov
es
int
and
cmp
mov
inc
icebp
push
sub
mov
mov
push
cmp
pop
push
movsl
mov
inc
sbb
mov
sbb
icebp
mov
outsb
sub
or
push
stos
xchg
mov
mov
xor
inc
stos
mov
xchg
mov
inc
jmp
mov
cmp
mov
sbb
clc
mov
mov
xchg
mov
out
jecxz
mov
cmpl
pusha
sbb
jbe
sub
jbe
cmp
push
add
xor
jecxz
pop
je
sbb
push
xchg
push
out
push
mov
sub
mov
dec
xor
jl
stos
and
mov
and
mov
aas
xchg
mov
pop
mov
sub
cli
adc
adc
das
sub
in
sub
jecxz
ret
loopne
rcr
pop
xchg
inc
push
test
jecxz,pn
xchg
push
hlt
cmp
stos
and
int
or
popa
sbb
inc
test
cs
loopne
insl
mov
sahf
mov
inc
pop
sub
imul
add
lret
xlat
leave
fnstcw
dec
lock
pop
stos
outsl
subl
ja
je
xor
int3
push
mov
cmp
out
mov
cmp
xchg
add
pop
test
dec
fisubs
shrb
sbb
lea
mov
push
jp
cmpsb
inc
pop
and
loop
push
std
pop
or
push
xorb
sub
fisttps
jecxz
ja
xchg
nop
lahf
xchg
lods
mov
aam
pop
lahf
lcall
loope
push
adc
test
pop
lret
fidivs
das
xchg
push
sbb
cmp
in
jge
inc
mov
or
sub
mov
pop
dec
adc
orb
push
mov
scas
xchg
or
inc
jns
repz
jb
outsb
out
jecxz
out
loope
testl
jmp
cmp
xchg
out
add
ja
inc
inc
rcrb
cmpsl
adc
sbb
outsl
dec
repnz
sbb
fbstp
push
add
cli
pop
jecxz
mov
pop
popf
add
push
mov
mov
leave
mov
ret
mov
adc
cs
or
xlat
or
mov
outsl
out
cmp
fcmovne
icebp
or
sbb
jbe
psubsw
mov
jg
mov
adc
dec
mov
cltd
loope
mov
mov
xchg
sbbb
fnstenv
sbb
mov
add
mov
lods
sbb
sbb
mov
fbld
lods
mov
outsb
add
hlt
sub
gs
inc
mov
in
in
iret
add
rol
adc
sub
xchg
jl
jmp
icebp
inc
or
int3
aas
in
pushf
rolb
je
aas
es
mov
push
jne
inc
jle
cltd
lret
dec
jl
cld
shlb
push
mov
pop
stos
mov
xchg
mov
jne
inc
vpmulhuw
sub
jnp
push
sbb
addl
mov
stos
icebp
add
leave
lret
lret
or
add
mov
lds
push
mov
jl
sti
push
push
inc
and
pop
cmp
jno
in
and
push
xchg
aam
mov
fnsave
jle
cmp
lahf
imul
pop
push
mov
xchg
mov
xchg
and
daa
mov
sbb
adc
and
ljmp
or
hlt
pop
adc
dec
sti
dec
aas
mov
repnz
insl
xchg
aam
or
xorb
decb
sbb
adc
pop
das
lds
aam
fwait
cwtl
mov
xchg
add
or
adc
int
mov
jo
mov
inc
cmp
test
daa
sbb
adc
dec
xchg
jo
test
sub
add
sub
arpl
pop
scas
mov
xchg
xchg
pop
js
push
lret
add
push
or
icebp
or
mov
mov
sub
movsb
ret
mov
nop
pushf
js
push
stc
xor
test
divl
data16
mov
into
stc
xchg
imul
xchg
add
and
neg
and
xchg
push
sti
cltd
push
jae
mov
xchg
push
scas
xlat
testl
add
cs
sbb
stos
inc
iret
mov
ficompl
leave
pop
shr
fiadds
cld
sbb
rcrb
ss
add
loopne
or
stc
cmp
mov
push
adc
sub
fwait
das
fwait
adc
cmp
mov
icebp
mov
cmp
cmp
jbe
sahf
movsb
cmpsl
ret
push
cmp
sub
sbb
shrl
rclb
ljmp
push
into
or
or
outsl
rcrl
sub
dec
roll
mov
add
adc
xor
and
xchg
rolb
inc
fldcw
insl
out
lea
int
jbe
pop
adcl
in
xchg
dec
outsl
sbb
push
ds
sub
ss
mov
xchg
and
clc
testb
in
lods
fsub
lock
inc
cmp
mov
xor
pop
fcmovbe
clc
test
enter
jnp
add
loopne
sbb
inc
push
mov
sbb
das
inc
mov
aaa
stos
ljmp
cmp
sub
mov
xchg
inc
push
push
mov
xchg
push
mov
ror
add
ret
popl
adc
jns
adc
inc
mov
mov
int3
inc
dec
pop
stc
ss
add
add
arpl
cs
out
divl
addr16
jne
mov
sbb
add
add
out
and
mov
movsb
stos
push
and
and
gs
hlt
mov
and
xor
imul
hlt
scas
mov
jbe
out
mov
push
pop
in
push
scas
lods
or
pop
shll
les
pusha
jl
sbb
sbbb
mov
mov
bound
les
add
fcompl
cld
or
aad
jl
stos
mov
hlt
dec
or
fbld
add
test
mov
sbb
dec
nop
data16
imul
hlt
dec
adc
and
fistpll
cld
pop
ljmp
aad
in
jge
insb
sbb
mov
xchg
cmpsl
stos
outsl
popa
mov
int3
xchg
pop
in
repz
in
rol
add
call
xchg
insl
xchg
adc
and
into
loop
xor
pop
jne
fisubrs
fimull
adc
jmp
ljmp
dec
xchg
icebp
push
add
xor
push
jecxz
add
jo
pushf
loopne
pusha
pop
lahf
aad
data16
sbb
push
push
xlat
cmp
mov
shlb
xor
mov
mov
pop
scas
mov
aas
enter
lret
xchg
mov
shlb
xor
into
je
lea
xorb
stos
pushf
popa
sahf
mov
pop
lret
adc
daa
popf
stos
in
jp
push
inc
es
ret
nop
js
mov
stc
push
ret
sahf
icebp
sbb
movsl
iret
jle
adc
sti
push
fdivrs
mov
xor
or
xor
addr16
sbbb
jo
stc
xchg
fldenv
cs
pushf
inc
pop
out
pushf
aaa
xchg
rorl
push
xor
dec
push
mov
mov
stc
iret
bound
sub
rorb
add
and
insl
je
push
add
in
aad
fdivs
gs
loope
pop
iret
outsl
gs
iret
repz
inc
inc
sub
push
fldl2e
push
add
out
leave
pop
cmpsl
fwait
mov
sahf
movsb
mov
les
fcmovb
xchg
mov
pop
arpl
arpl
inc
xorb
push
dec
out
lock
push
imull
mov
xlat
mov
movsl
out
inc
icebp
lahf
jnp
sub
mov
ror
test
mov
fildl
enter
pop
cltd
push
and
push
in
push
into
movsb
or
mov
aam
sbb
push
arpl
adcb
xchg
pop
or
call
iret
pop
ja
push
inc
fadds
mov
cmp
les
jae
dec
orl
icebp
mov
push
push
xlat
rcrb
nop
sbb
int
out
movsl
into
jb
gs
xor
xchg
or
repz
xchg
sarl
ja
cwtl
lods
ret
stos
or
iret
test
lret
test
sbb
daa
push
hlt
jo
sub
mov
mov
fcmovb
sahf
mov
jb
jp
xor
dec
xchg
jle
push
faddl
pushl
push
pusha
jo
sub
movsb
pop
aam
aam
movsb
lahf
add
xor
dec
in
stos
pop
mov
frstor
dec
jp
data16
add
mov
pop
xchg
aam
fmull
std
cmp
aaa
cs
into
fidivl
popf
mov
insl
inc
scas
iret
jmp
repz
scas
inc
arpl
pop
negl
cmpsl
stos
xchg
popf
rcll
sahf
pop
test
hlt
lds
xlat
int3
pop
sbb
sarl
test
pop
jnp
sbb
nop
sti
fistl
das
stos
shlb
dec
icebp
mov
or
imul
addr16
out
cmp
shlb
mov
push
fst
adc
cwtl
and
insb
stos
xchg
cmp
sbb
ja
dec
nop
xor
in
pop
sbb
pop
pop
mov
cmc
and
outsl
outsl
arpl
adc
fdivrl
sbb
mov
movsb
and
in
xor
pop
call
xlat
repnz
xchg
or
sahf
inc
es
jle
adc
fbld
out
xchg
pop
push
sbb
pop
pop
ljmp
stc
push
addr16
mov
cmc
fcmove
sbb
in
outsb
or
test
loope
loope
xchg
jb
xor
popa
mov
jne
out
xchg
pop
add
push
push
mov
enter
dec
clc
sub
sbb
movsb
jno
sti
aam
movsb
xchg
fdivl
fiaddl
lcall
aas
cwtl
jae
mov
insb
push
nop
in
push
lods
cmp
inc
push
jg
or
clc
mov
cmp
adc
test
subb
sbb
lods
pop
mov
cli
sbb
mov
jbe
dec
bound
inc
lods
sub
lods
xor
pop
xchg
mov
ljmp
add
fwait
jmp
inc
fs
jno
mov
idivb
jmp
xlat
lahf
mov
push
or
and
xchg
pop
pop
mov
or
fcmovne
cwtl
xor
xor
mov
popa
arpl
sarl
sbb
int
xchg
fdivl
imul
jmp
and
push
test
shlb
and
sub
sub
xchg
push
fs
push
adc
jno
ljmp
add
aaa
movsb
or
push
cmp
cmpsl
add
data16
call
and
sub
lea
mov
sub
lcall
push
mov
sahf
dec
push
sub
in
cmp
cmpb
push
movsl
scas
in
mov
aam
push
adc
popa
jnp
xor
gs
loopne
dec
lahf
mov
iret
data16
dec
xor
sbbb
mov
dec
cmp
push
sub
mov
cld
pop
xchg
into
loop
mov
inc
dec
sbb
out
imul
and
pop
lods
cmp
inc
cmp
andb
sbb
lea
leave
loop
repnz
sti
leave
movsb
jns
mov
aas
jbe
out
stc
orb
jae
test
fsub
int
enter
rorb
cmpl
or
push
pop
in
lahf
sti
mov
test
call
stos
rcrl
xchg
insl
mov
iret
fs
mov
data16
insb
xor
out
push
adc
mov
ret
insl
in
add
cmc
push
cwtl
ds
imul
ss
dec
cwtl
mov
cmpsl
inc
pop
inc
xorl
or
movsl
pusha
push
lret
pop
and
push
or
xchg
ja
xor
mov
repz
outsb
xor
and
aad
dec
in
lods
bound
out
xchg
mov
ret
cmpsl
mov
rorl
ja
adc
pushf
pop
pop
push
dec
dec
cs
add
pop
push
mov
mov
mov
mov
jl
add
sub
pop
cmp
push
fwait
sub
roll
mov
iret
cmp
cld
xor
xlat
jo
xchg
in
adc
test
movsb
adc
adc
adc
insl
rolb
adc
ljmp
push
mov
enter
outsb
mov
lcall
cld
pop
mov
sbbl
cmp
repz
lret
cmp
test
call
leave
mov
je
scas
inc
jge
and
sti
push
cld
jnp
test
mov
imul
shll
xor
arpl
dec
imul
fisttps
xchg
dec
push
mov
mov
stos
aaa
shr
jb
jmp
int
stos
cmp
mov
jbe
sbb
rcr
mov
xchg
sahf
mov
add
lods
in
icebp
pop
pop
adc
sbb
mov
mov
xchg
fbld
sub
stos
lret
pop
jecxz
movsb
and
add
nop
cmp
fcomi
cli
mov
pop
sbb
sahf
repz
into
cmc
outsl
enter
sbb
mov
divb
xchg
das
push
fs
addr16
mov
das
push
inc
and
popa
loopne
jno
fcomi
adc
rorl
pop
sbb
mov
pop
or
push
stos
iretw
jnp
ds
inc
pop
cmpsl
mov
mov
call
insl
mov
and
dec
cmp
repz
sahf
movsl
in
mov
dec
inc
dec
mov
icebp
and
cmp
push
std
jl
or
leave
int3
lods
enter
fmuls
imul
clc
movsb
aaa
jo
inc
mov
cmp
out
inc
add
shl
dec
je
lods
icebp
push
cmp
sbb
mov
mov
add
fs
pop
sbb
mov
and
mov
inc
aas
inc
xlat
inc
pop
push
cmp
gs
mov
gs
test
test
aaa
je
adc
pop
out
fnstsw
dec
pop
sbb
and
orb
push
mov
sbb
into
xchg
aad
fisttps
bound
fistps
leave
or
sbb
clc
push
jecxz
lahf
xchg
adc
pusha
pop
ljmp
sub
scas
mov
outsb
mov
adc
or
int
xor
hlt
gs
cmpl
lock
jge
mov
mov
insb
mov
jno
or
f2xm1
dec
push
jb
lods
jge
or
jl
divl
dec
in
mov
jmp
out
rclb
insl
cmp
dec
adc
and
out
pop
test
scas
ffreep
rcrl
aas
fimuls
adc
fdivrl
in
movsb
dec
mov
adc
push
and
push
push
sbb
adc
pop
jmp
or
xchg
fmul
push
mov
or
neg
jp
cmpsl
xchg
and
js
fildl
push
push
mov
push
aas
dec
sub
adc
cmp
mov
pop
xor
sub
push
clc
sub
push
int3
or
fisttpll
mov
je
stos
ja
mov
inc
idivl
push
add
and
pop
enter
cmp
movsl
mov
pushf
cld
push
cli
fisttps
push
dec
lret
or
jnp
jno
imul
lock
popa
inc
pusha
jle
pop
fcomps
xlat
mov
add
adc
dec
dec
and
and
adc
fs
insb
and
mov
xchg
es
pop
test
ljmp
outsl
fbstp
sbb
andb
push
pop
nop
in
lock
add
rolb
lret
in
jle
stos
imul
les
mov
inc
xor
pusha
pop
mov
movsl
call
dec
pop
dec
addl
pop
pop
rcrb
mov
pop
pop
shll
out
xlat
lods
incl
mov
imul
aas
and
adc
les
mov
dec
hlt
fidivrs
and
xchg
cmpsl
fisubl
inc
movaps
insb
mov
xchg
push
bound
push
ja
mov
mov
or
test
xor
ret
push
add
ja
push
jne
sbb
loop
inc
fistl
and
pop
mov
addb
bound
ljmp
xor
mov
rcrb
mov
push
xchg
push
jbe
cwtl
insb
inc
fidivrs
stos
xor
outsl
adc
cltd
test
negl
cli
dec
in
dec
test
sub
xor
fsts
sbb
fs
cwtl
pop
loopne
bound
or
testb
xchg
xchg
cwtl
cld
rcrl
ror
adc
or
sbb
xor
outsb
sub
sub
xor
shlb
mov
js
sbb
mov
les
add
jg
push
jmp
add
imul
xchg
xchg
and
in
adc
push
ja
mov
stos
add
jnp
xchg
dec
stos
repz
or
into
jg
leave
jne
lcall
test
jp
and
mov
sahf
mov
lock
adc
movsl
faddl
mov
or
jae
jecxz
into
dec
test
mov
inc
adc
sbb
aad
sysexit
mov
jb
in
dec
pop
fisttpl
loopne
xchg
or
flds
daa
or
divb
pusha
xor
fdivr
jg
ljmp
lods
mov
mov
jae
out
push
jnp
sbb
stos
arpl
stos
stc
pop
es
adc
pusha
int3
or
add
ret
sahf
mov
mov
xor
sub
push
mov
pop
mov
daa
in
movsb
rcl
pop
inc
jns
sub
push
pusha
pop
out
cli
out
mull
adc
addr16
cld
pop
cwtl
outsl
gs
cmp
mov
nop
aaa
sbbb
sbb
iret
lods
stos
aam
hlt
jmp
jae
roll
mov
push
cwtl
pop
movsb
roll
and
dec
or
loopne
push
xor
fisubrs
aas
jae
sti
add
sub
test
test
insb
or
inc
mov
sbb
aam
mov
pop
add
and
lock
add
das
int
xlat
les
dec
nop
xchg
push
dec
repz
clc
lods
mov
inc
decb
testb
jbe
sar
or
data16
nop
pop
test
and
jmp
loopne
les
inc
lea
push
sub
rorl
std
and
inc
icebp
loope
enter
jnp
xchg
cmpsb
clc
adc
cmp
adc
mov
out
int
cmc
dec
ja,pn
fwait
ja
mov
bnd
adc
pop
outsl
cmp
pop
sbb
xlat
or
call
repz
adc
movsl
loop
orl
mov
lods
sub
faddl
jb
mov
jle
imul
aaa
mov
sahf
ljmp
fs
shlb
jmp
lcall
cmp
cmp
fwait
scas
mov
imul
gs
pop
pop
add
dec
pop
das
mov
jg
mov
popf
rcrb
rorb
sbb
fiaddl
push
cli
out
and
adc
enter
es
add
stos
mov
inc
outsl
pop
cmp
inc
repnz
sub
cltd
daa
jl
push
mov
xchg
shll
add
hlt
andb
mov
mov
imul
sub
popf
push
sarl
sbb
ja
mov
enter
pop
rorb
test
adc
or
cmp
sub
sti
mov
jp
jge
stc
sti
jmp
sbb
push
pop
ret
cmc
mov
fistpll
and
repz
adc
pop
xlat
lods
sub
punpckhbw
pop
xlat
stc
lret
out
push
lock
fistpl
fcmovne
sub
add
test
sbb
sbb
inc
frstor
and
xlat
stc
dec
rcr
in
cwtl
aas
mov
pop
enter
jp
repz
je
loope
lds
subl
dec
push
or
mov
cs
out
push
in
pop
or
bound
popf
pop
sub
pushf
adc
mov
int3
stos
fsts
jne
pop
push
loop
insb
decl
scas
add
add
insl
movsb
pop
and
inc
add
scas
and
xchg
cmp
pop
int
mov
fsubs
les
inc
jnp
fildl
dec
loop
iret
and
cmp
rorb
push
xchg
jg
hlt
scas
and
xor
ja
pop
je
xchg
sub
mov
lods
xchg
cmp
mov
mov
jbe
out
lods
or
daa
arpl
fwait
push
inc
iret
pop
xchg
bound
dec
mov
aas
enter
in
and
add
outsb
out
lahf
xor
jmp
fldt
movsb
push
cmpb
adc
pusha
push
adc
adc
punpckhwd
jge
add
xchg
pushf
cmp
fs
cwtl
lods
sub
clc
cmp
mov
insb
out
repnz
xor
sub
lock
subl
mov
sub
add
stos
mov
scas
mov
mull
xchg
mov
cltd
mov
cmp
or
es
jp
inc
aaa
pop
mov
add
cwtl
add
push
mov
sahf
cli
or
and
sub
mov
orb
cmp
jbe
jle
add
scas
jmp
shll
mulb
cltd
iret
and
inc
and
xchg
andps
push
adc
sub
idivl
mov
mov
xorb
and
or
inc
and
pop
jg
fistps
call
and
push
inc
aad
inc
enter
lds
pop
insl
pushf
filds
mov
loopne
insb
decl
cld
inc
call
dec
jne
pop
add
les
pop
and
xchg
leave
subl
andb
aad
test
mov
xchg
dec
pop
fmuls
mov
and
jnp
iret
fs
scas
movsl
shr
mov
pop
movsb
mov
sub
stos
cld
fstpt
and
iret
xchg
ficompl
movsl
mov
fsubrs
add
icebp
iret
dec
lods
ss
xchg
xchg
push
ret
lods
hlt
xor
mov
in
ret
inc
cmp
inc
jl
pop
dec
mov
fcoms
negb
aas
dec
inc
pop
in
jbe
inc
out
inc
int3
dec
adc
dec
nop
ficoml
mov
in
cld
or
test
jno
or
shl
outsl
call
bound
xor
adc
cld
in
negl
xor
scas
sbb
aad
dec
sub
push
repnz
xchg
ljmp
dec
jbe
mov
stc
es
cmc
movsl
stc
adc
mov
push
mov
and
loope
outsl
jne
mov
out
xor
into
mov
and
and
inc
mov
test
sub
sbb
outsb
xchg
pop
addl
test
inc
mov
stos
test
aam
ret
mov
aaa
pop
stos
das
adc
dec
add
fidivs
imul
cmc
das
inc
pushf
mov
pop
push
jmp
aad
push
enter
lock
fildll
decb
icebp
sarw
mov
inc
aam
xchg
dec
ficoml
mov
push
stos
inc
mov
aad
dec
imulb
xlat
inc
stos
rcrb
xor
ror
xor
lock
in
xor
aaa
push
or
ljmp
pop
cmp
ljmp
pusha
xor
cmpsb
daa
notb
jle
into
stc
adc
jl
jmp
outsl
shl
mov
mov
adc
divb
sbb
push
test
and
push
sti
jg
add
mov
jae
call
loop
dec
mov
dec
xorb
clc
pop
mov
pop
out
ljmp
and
addr16
data16
pushf
cmp
cltd
nop
sub
lcall
mov
dec
xchg
mov
jne
push
ret
stos
jne
and
enter
cmp
test
mov
xor
sbb
mov
jmp
pop
push
mov
enter
push
cs
stos
fistpl
subl
mov
insb
dec
fcoml
ret
mov
mov
scas
ja
test
cmpsb
insb
int3
pop
pusha
jg
insl
inc
adc
or
mov
xchg
mov
imul
aas
mov
aad
and
invd
mov
push
xchg
dec
sbb
fwait
jb
mov
mov
out
dec
jl
and
cld
lcall
cmp
cmp
loope
out
les
mov
jle
jno
call
push
jg
jae
push
jae
cmpsb
add
imul
mov
andl
add
push
dec
pop
shll
inc
lods
mov
stc
pop
aad
out
adc
jns
push
jmp
inc
jb
jmp
ss
xchg
decl
call
fwait
sarb
test
or
scas
ss
mov
in
mov
or
aad
dec
stos
mov
popa
js
mov
inc
mov
adc
sti
int
mov
adc
push
xchg
adc
lds
andl
push
in
dec
push
push
or
xor
cmp
in
rol
push
add
pusha
js
cmp
mov
int3
out
data16
rclb
push
gs
pop
dec
cmpsb
push
and
int
pop
and
push
jmp
notb
xor
fdivrl
sbb
cltd
adc
xchg
sbb
test
test
lods
repz
aas
out
xor
push
daa
jno
dec
xor
insl
xor
aad
xor
add
mov
mov
xor
inc
jg
mov
scas
testl
pop
aam
push
and
jg
jb
sbb
addr16
xlat
and
.byte
mov
mov
verw
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
ltr
lldt
hlt
cmp
add
ltr
cmp
add
cmp
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
cmp
add
movsb
cmp
dec
add
incl
add
add
aas
dec
add
add
add
incl
add
add
inc
dec
add
add
add
incl
add
add
inc
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
inc
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
add
add
incl
add
add
fs
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
jo
add
add
add
incl
add
add
dec
add
add
add
orl
incl
add
add
dec
add
add
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
add
add
ljmp
dec
add
dec
add
add
add
sahf
dec
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
test
add
add
add
sub
dec
add
add
add
incl
add
add
mov
add
fbstp
dec
add
add
add
add
add
add
add
decl
mov
dec
add
dec
add
add
pop
dec
add
lcall
into
dec
add
add
add
incl
add
add
rorl
add
add
incl
add
add
rorl
add
add
incl
add
add
add
add
jmp
dec
add
dec
add
add
add
incl
fimull
or
dec
add
add
add
call
dec
add
dec
add
dec
fmull
rcr
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
loop
add
add
add
incl
add
add
jecxz
add
jb
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
imul
bound
gs
js
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
je
arpl
fs
outsb
outsw
inc
jb
insl
inc
jne
fs
add
je
arpl
fs
outsb
outsw
inc
jb
insl
push
jns
gs
outsb
outsw
add
add
fs
gs
jns
gs
imul
fs
jns
gs
imul
cmp
dec
add
dec
add
call
dec
add
add
pushl
dec
add
dec
add
incl
jmp
add
ljmp
jmp
add
mov
jmp
add
incl
add
add
in
dec
add
add
add
incl
add
add
add
add
incl
add
add
out
dec
add
add
add
incl
add
add
add
add
incl
add
add
repz
add
add
add
incl
add
add
testl
incl
add
add
clc
dec
add
add
add
decl
stc
dec
add
incl
add
add
cli
dec
add
jle
dec
add
add
add
incl
add
add
dec
add
call
sbb
incl
add
dec
add
mov
push
dec
add
cmp
add
sldt
xor
add
add
add
add
add
xor
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
ltr
lldt
hlt
cmp
add
ltr
cmp
add
cmp
add
mov
add
add
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
push
jb
arpl
fs
jae
add
push
add
popa
insb
inc
jb
add
jae
inc
js
gs
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
popl
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
into
add
popa
jb
push
inc
add
add
jae
insl
gs
push
add
popf
add
imul
jae
dec
gs
outsl
jb
add
nop
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
mov
inc
gs
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
push
push
inc
push
xor
cs
insb
add
lret
je
push
outsb
ja
outsb
add
gs
push
dec
jne
je
inc
jns
add
dec
jne
je
inc
jns
gs
outsl
push
imul
cmp
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
mov
inc
gs
je
imul
push
jne
cmc
adc
sar
cld
adc
test
pusha
fmull
popa
jnp
adcl
scas
push
lea
mov
add
shlb
lahf
xchg
ss
ljmp
dec
add
mov
push
cwtl
stos
pop
ret
mov
out
push
xchg
pop
adcb
outsb
std
cmp
jae
int3
xchg
aad
xor
mov
test
sub
and
mov
xor
subl
test
lods
mov
jl
mov
or
test
sbb
fucomip
pop
lahf
dec
es
cmp
push
fistps
int
out
insb
loope
sbb
jp
push
aam
fildl
jnp
imul
in
jl
aad
sub
push
das
loope
jl
aad
int
lcall
insb
mov
imul
jecxz
imul
nop
cmpsl
movsb
xor
es
popa
sub
xchg
rcl
dec
or
adc
filds
jns
clc
ret
pop
sbb
cmp
clc
std
in
and
mov
cli
les
dec
pop
std
out
adc
push
mov
add
pop
and
movsl
dec
add
push
mov
jecxz
scas
outsl
clc
xchg
inc
xchg
dec
cmp
movsl
mov
pop
mov
shll
sub
aaa
imul
adc
test
in
test
inc
inc
loopne
cwtl
push
inc
dec
bound
pop
jae
cmp
fidivrs
xor
adc
cld
inc
xor
addl
adc
ret
add
mov
push
push
lret
and
out
repnz
aam
mov
arpl
rol
push
or
inc
mov
jbe
mov
mov
cmp
cwtl
add
inc
xchg
cmp
mov
ja
movsl
xchg
jne
ds
iret
loop
int
sub
ret
mov
xlat
out
sbb
jno
push
loopne
jne
or
adc
xor
jno
push
cmc
cld
inc
int
dec
scas
mov
lds
in
enter
jge
repz
mov
dec
call
mov
mov
scas
lods
mov
dec
sub
lahf
ret
cmp
jno
call
insb
jmp
int3
orb
xchg
and
fcomi
adc
mov
rorb
es
xchg
dec
test
adc
testl
cmp
std
out
jge
mov
addr16
xchg
cmpsl
fcomps
cmp
div
adc
cmp
lea
fs
mov
mul
leave
bound
dec
dec
stc
pop
out
stc
std
sbb
cmp
sbb
sub
popf
lcall
popf
fnstsw
testl
jbe
push
pop
out
inc
repz
mov
insb
stos
adc
inc
pushf
sti
cld
lahf
loope
fwait
pop
aad
cmp
loop
jle
cmc
sub
inc
out
pop
xor
jp
dec
push
jmp
in
add
or
cmpsb
pop
aas
and
mov
stos
push
negl
mov
mov
mov
cmp
sti
lahf
push
mov
and
dec
xorl
int3
push
jae
cli
andb
cmp
jnp
mov
test
les
and
in
pop
pop
sub
mov
xchg
cmp
and
sbb
shl
mov
in
and
push
ficoml
push
std
push
andb
inc
dec
dec
in
cwtl
jnp
xchg
mov
jmp
arpl
test
adcl
and
cmp
mov
jbe
inc
push
sub
xor
repz
repz
daa
inc
mov
in
mov
js
mov
add
sbb
xchg
adc
cmp
pop
xor
xchg
out
cld
out
mov
in
adc
imul
adc
in
sti
movsb
pop
imul
mov
mov
inc
lods
xchg
dec
rorb
ja
loope
hlt
push
sub
add
pop
cmp
jb
xor
lret
fs
mov
movsl
mov
cmp
adc
pop
inc
pop
xchg
adc
cmp
mov
subb
push
leave
rolw
popa
js
jns
mov
sbb
xchg
xchg
adc
dec
mov
cmp
cld
inc
inc
pop
out
add
xchg
lods
and
dec
fwait
dec
sbb
adc
dec
loopne
pop
mov
pop
mov
or
or
mov
fcomip
jns
add
sahf
mov
rcll
idivb
ret
ds
adc
scas
sbb
push
xor
enter
sub
jl
mov
mov
jmp
ret
in
xchg
xor
sbb
xor
mov
int3
leave
inc
dec
pop
push
pop
mov
clc
push
xorb
xlat
inc
and
xchg
mov
sub
shlb
flds
fcoml
inc
leave
outsb
or
aas
pop
mov
cs
xor
pop
jne
jecxz
aad
push
fnstsw
add
fisubrs
adc
rcr
push
int
lret
mov
add
jmp
dec
call
inc
mov
cwtl
push
cs
mov
xlat
js
arpl
stos
dec
js
inc
pop
push
mov
lea
sahf
ret
push
stc
jge
fsubrl
cmpsl
ljmp
outsl
mov
pop
sarb
lods
push
push
fistl
cmp
mov
into
lret
dec
inc
jge
nop
fldl
mov
push
imul
loope
daa
mov
dec
enter
push
and
jmp
inc
lds
inc
inc
incl
outsb
xlat
dec
out
nop
and
gs
fcomps
cmp
sbb
pop
or
leave
jb
or
lds
insl
mov
jl
xor
sub
xlat
cmp
jg
in
arpl
out
push
mov
xchg
loopne
fwait
dec
popa
fcoml
loop
add
ret
pushf
loopne
jp
mov
and
jbe
xor
xor
or
sub
insl
es
mov
data16
sbb
arpl
xor
scas
add
sub
sahf
dec
mov
test
fmull
enter
xchg
int3
test
jne
outsb
ljmp
sbb
and
sbb
pushf
ljmp
cmp
dec
pop
inc
in
imul
or
xchg
xor
je
pop
rcr
mov
jno
in
sbb
xchg
ss
sbb
repz
push
xor
or
rcrb
jge
inc
lods
adc
xchg
push
push
sahf
ja
jns
push
int3
sahf
xor
inc
inc
push
ljmp
mov
fdivl
mov
popf
cmp
lahf
cli
add
mov
and
mov
lods
adc
pop
cmp
add
loop
in
add
insb
push
movsb
xor
xor
cmp
inc
pusha
inc
lea
xchg
mov
in
mov
pop
icebp
mov
or
dec
lahf
ficompl
jb
adc
xchg
push
and
mov
int
dec
fcomp
call
and
movb
xor
dec
and
mov
inc
aad
mov
dec
sub
cs
aam
lds
mov
daa
push
aaa
xor
sbb
stos
loope
stc
or
test
lock
dec
mov
mov
loope
pop
mov
adc
jge
push
lahf
sub
inc
ja
mov
mov
ficoml
pop
js
mov
push
adc
mov
fwait
adc
leave
add
aas
aas
ret
push
data16
incb
mov
or
inc
aad
nop
fcomps
popf
xor
mov
dec
and
add
push
into
imul
xlat
add
test
out
cmp
or
fs
mov
mov
or
dec
pop
cmpsl
mov
cmc
mov
or
lahf
push
lock
js
rorb
stc
movsb
push
sbb
fwait
push
cmpsl
push
mov
out
push
xor
and
jns
data16
mov
arpl
aad
jge
sti
jmp
sbb
xchg
adc
xor
fimuls
push
das
mov
xor
or
gs
rolb
hlt
xchg
mov
xor
xor
jg
sub
aas
mov
ror
sarl
cmp
and
cmpsl
shll
adc
cmp
jle
gs
cmp
mov
push
xor
insl
mov
mov
jns
lods
add
icebp
or
pop
ds
lea
pop
xor
adc
fwait
hlt
mov
movsl
xchg
rorb
push
out
loopne
call
mov
aad
inc
mov
adc
lret
dec
sbb
xchg
rcrl
dec
pusha
mov
orb
dec
mov
mov
mov
popf
push
inc
sarb
mov
test
add
jl
sub
jg
andb
lahf
cld
push
sub
arpl
xchg
xor
push
out
lret
xor
call
pusha
xor
stc
mov
sub
fwait
popf
sahf
movsl
sbb
or
mov
mov
cmp
out
rcr
std
pop
pop
fildll
and
and
roll
insl
scas
and
xchg
ljmp
test
test
ret
inc
test
push
push
sbb
hlt
xlat
dec
pusha
fstpt
test
pop
add
cmpsl
jb
add
sbb
xchg
xchg
fiaddl
shlb
repz
pop
sti
iret
cmp
xor
inc
in
mov
pop
add
ja
xchg
jp
in
sbb
xor
mov
das
push
mov
mov
fisubl
clc
dec
testl
lret
and
movsl
popa
mov
scas
or
call
mov
push
cltd
xor
es
push
cwtl
std
inc
jne
cld
and
paddq
jg
and
popf
push
lds
adc
ret
xchg
xor
xor
decl
icebp
sub
cs
push
bound
arpl
lods
movsl
movsl
xchg
sub
rdtsc
jno
sahf
inc
sbb
mov
je
lret
inc
fstps
add
mov
and
cmpsl
xor
sub
push
sti
sbb
xor
ret
add
in
bound
scas
jae
and
out
arpl
mov
stos
xchg
loop
test
mov
add
cs
aaa
lock
mov
inc
lock
sub
loop
dec
jo
adc
sbb
cmp
pop
sbb
ret
push
mov
and
cld
sub
sub
sub
cli
dec
xchg
jnp
lock
loopne
js
mov
data16
sbb
mov
or
mov
sahf
jge
dec
je
xor
bnd
imul
jl
loopne
shl
popf
sbb
pushf
and
add
mov
in
xchg
fnstsw
pop
iret
dec
jge
scas
scas
sub
fs
fiadds
mov
sahf
mov
mov
dec
test
pop
rclb
aas
into
mov
jae
mov
xchg
xor
lods
inc
repz
jnp
push
and
bound
xchg
das
inc
sbb
mov
adc
jmp
add
shll
jg
xchg
push
xchg
scas
pop
xchg
divl
pop
ljmp
pop
jg
adc
imul
mov
je
test
fs
jbe
jp
mov
testb
xor
jl,pt
sub
or
cmp
add
or
mov
xor
xchg
and
push
stos
enter
outsb
je
push
jmp
dec
xor
fs
push
inc
scas
sbb
cmp
je
dec
sbb
push
xchg
loop
add
cmc
pushf
cmp
cmc
add
daa
jl
or
ror
sbbl
outsb
in
push
test
sbb
push
sbb
aaa
mov
ljmp
dec
sbb
cmp
sub
xchg
stos
jmp
jg
mov
popf
cmp
push
push
stc
in
push
hlt
or
xor
popa
mov
into
mov
aam
in
jno
mov
push
mov
mov
ss
mov
sarl
mov
and
jge
movsb
sub
xor
punpcklbw
push
jne
lds
adc
mov
lret
xor
ja
call
lea
push
pushf
inc
or
lret
outsb
sub
dec
dec
enter
repz
mov
sbb
jecxz
mov
sbb
xor
div
cmp
into
pop
jp
scas
lods
jb
in
lds
out
xchg
cmp
sbb
lcall
jge
fldl
sub
mov
cmp
insb
stos
paddw
add
lods
jne
sbb
test
pop
adc
xor
test
mov
inc
inc
push
out
mov
dec
rcrb
or
dec
sbb
iret
inc
dec
ret
jno
inc
aam
inc
cwtl
adc
das
or
dec
xor
clc
push
sahf
push
insb
addl
aas
sbb
mov
sub
mov
push
out
dec
cmp
push
rcl
cs
xchg
dec
test
testb
mov
mov
fisttps
push
inc
sub
fldt
ds
push
call
sub
adc
xchg
fsubrs
clc
inc
cwtl
loop
mov
cmp
mov
adcl
mov
dec
push
sarb
jge
fwait
cmpsl
aas
mov
imull
xchg
or
add
and
inc
scas
lods
pop
mov
int
repnz
stos
mov
aam
sub
pop
mov
mov
or
test
jp
rcll
xchg
cvtpi2ps
and
and
pop
push
cs
adc
fstpl
testl
lods
loopne
ja
mov
mov
xlat
mov
xor
push
add
cli
jno
daa
inc
cmp
mov
or
push
xor
jns
mov
adc
cmc
addr16
lds
jns
lret
stc
dec
testb
repnz
xor
xchg
mov
call
scas
stos
adcl
jne
pusha
das
and
lock
or
test
or
push
imul
push
or
inc
ja
push
pop
aam
or
pop
mov
test
aad
ja
or
ror
cld
cs
movsl
mov
jne
mov
cld
lahf
test
or
cwtl
ficoms
pop
or
xchg
cmc
pop
lods
jg
jmp
or
push
stos
call
mov
daa
sbb
xchg
scas
arpl
pop
push
std
das
sbb
sahf
sub
mov
or
xor
adc
ret
fiadds
mov
or
and
flds
movsl
cltd
outsb
cmp
shll
adc
xchg
mov
andl
mov
data16
jns
enter
cld
jg
je
mov
into
aas
pop
decl
test
push
mov
inc
inc
adc
movsb
into
jo
imul
insl
cmc
pop
ds
test
adc
xchg
sub
stos
mov
jno
lods
xchg
sbb
int3
mov
push
and
push
sbbb
pop
xor
loop
scas
xchg
pop
mov
cmpsb
adc
xchg
ror
nop
mov
cwtl
sti
sbb
sbb
lahf
sbb
cmp
sbb
fstpl
mov
xor
enter
testl
add
das
test
repz
mov
fwait
addr16
ljmp
xchg
xor
in
pusha
lahf
mov
loopne
mov
notl
loop
iret
cltd
or
push
xor
jno
mov
xor
mov
ja
repz
dec
mov
add
insl
lcall
add
andl
jg
xor
xchg
pop
add
in
fs
pop
xor
push
and
nop
and
dec
fidivl
lock
fmuls
in
cmp
adc
sbb
jb
pusha
ds
adc
aaa
xor
mov
loopne
ljmp
in
js
imul
out
pop
mov
add
scas
fstpl
jmp
push
mov
mov
add
push
mov
jno
push
push
sarb
sahf
ret
adc
inc
mov
sti
out
add
in
push
lret
push
std
shll
adcb
clc
out
arpl
mov
lds
sub
inc
push
sbb
fcoml
jle
test
out
orl
or
test
cmpsb
push
mov
add
push
fs
mov
jle,pt
enter
lcall
mov
xchg
mov
pop
adc
dec
jnp
nop
jp
adc
inc
aad
imul
mov
inc
push
loope
aas
or
jns
mov
movsl
arpl
outsb
sbb
hlt
insb
pusha
in
mov
mov
xchg
lcall
and
jle
clc
fldl2t
movl
mov
inc
stos
call
xchg
or
ret
mov
push
mov
repz
fisubl
imul
fcoms
add
push
mov
std
mov
and
mov
adc
leave
roll
jbe
adc
fdivl
imul
xor
xchg
or
or
xchg
mov
adc
shrb
gs
jl
lods
jecxz
arpl
mov
mov
sub
icebp
fbld
leave
stos
mov
mov
push
in
sub
fidivs
dec
and
xchg
mov
fwait
jl
xlat
and
mov
pushf
aam
and
jle
lock
cli
insl
popl
test
fisubrl
xlat
push
sub
jbe
cmp
shll
mov
inc
xor
pop
test
adc
fldl
sbb
fs
pushf
psubq
mov
lea
hlt
fmull
and
test
mov
sub
cmp
mov
pop
mov
testb
xor
cmp
je
add
popf
sub
xor
xchg
mov
adcb
jns
dec
jns
je
jl
jnp
inc
stos
lcall
stc
cmp
outsb
push
lea
mov
sbb
push
fwait
mov
mov
xchg
insl
xchg
je
insl
sub
pop
inc
mov
or
aaa
rorl
sbb
cmp
stos
jo
push
sub
push
ficoms
lods
repz
fimuls
data16
lds
cwtl
or
cmpsb
push
ret
mov
pop
cmc
mov
arpl
hlt
push
mov
dec
clc
pop
jns
lcall
pop
add
push
xlat
sub
push
and
in
mov
or
jg
std
addl
rorb
lea
repz
mov
mov
push
adc
cs
jp
pop
jno
cmp
hlt
insl
mov
dec
add
aas
stc
arpl
mov
add
mov
sbb
fbld
mov
jge
push
mov
lods
pop
es
stos
ds
dec
int
sub
push
stos
xchg
and
sub
shlb
jg
int3
int
pop
or
iret
mov
aam
mov
mov
cwtl
xor
jge
pop
leave
mov
add
pop
or
and
loopne
cmp
loope
insl
mov
sub
add
xor
out
and
outsb
push
sbb
push
rcrb
fldl
xor
cmpsl
shll
movsb
decl
ds
stos
dec
mov
fsin
jle
pop
scas
adc
xor
jmp
popf
aaa
call
cltd
in
inc
loop
hlt
setle
jne
fildl
inc
add
xor
mov
fsubs
insb
inc
jo
and
jmp
negb
and
inc
add
or
mov
sahf
test
aaa
pop
add
adc
push
push
inc
repnz
das
shlb
pop
insl
imul
popa
stc
dec
jecxz
in
inc
in
shr
aam
into
or
in
mov
mov
xor
mov
and
mov
jl
push
cmp
add
daa
cltd
repz
xlat
cmpsb
xor
aaa
aas
sbbl
ds
inc
rorl
inc
xchg
aad
mov
shlb
sub
push
fsubrl
data16
mov
sbb
inc
mov
sbb
adc
lret
je
outsb
and
jge
icebp
lods
addr16
rcr
sbb
dec
lds
fsubl
xor
incb
icebp
jge
xor
and
sbb
test
inc
sbb
push
jnp
push
iret
les
adc
or
out
scas
mov
stos
sbb
push
leave
push
ds
xchg
cmp
sub
aad
gs
sbb
sahf
adcb
adc
lds
dec
push
pop
jo
dec
nop
pop
inc
xor
mov
jb
sbb
in
sbbb
iret
pop
das
push
inc
inc
filds
cmc
es
or
in
mov
mov
push
sti
lds
insl
sub
and
inc
add
stos
test
inc
sbb
mov
clc
mov
in
push
mov
push
lahf
cmp
and
lea
xor
dec
test
repz
or
fisttpll
int
aas
iret
addr16
arpl
popa
pop
leave
ss
addb
cs
aas
je
div
fwait
cmp
fistpll
pop
ljmp
mov
cmp
icebp
inc
mov
cmp
and
loop
popa
pushf
jno
lds
inc
push
js
jg
pop
cli
mov
nop
out
or
repnz
mov
sub
pop
nop
cmp
arpl
jge
dec
inc
in
ficompl
ds
mov
cmpsl
jg
mov
inc
lods
pop
inc
mov
dec
mov
notb
loopne
sub
xchg
dec
into
dec
fidivl
pop
or
xchg
jg
pause
mov
jb
pop
aaa
call
and
mov
push
psubd
fs
bts
inc
xchg
lea
sub
inc
and
pop
pushf
xlat
ss
out
add
clc
mov
inc
insb
imul
popf
xchg
pop
adc
test
popf
adc
pop
xor
cmc
popa
sub
mov
popa
jbe
out
xchg
js
mov
mov
push
add
xor
xchg
fcmovnb
inc
out
decl
sbb
sbb
mov
pop
inc
hlt
sub
hlt
aas
clc
es
mov
cmpsb
cld
sub
inc
std
imul
hlt
jmp
inc
mov
xchg
ja
or
je
arpl
nop
cmp
outsl
xchg
lock
dec
aad
data16
pop
cmpsl
outsb
adc
cmpsl
inc
cmp
fnstsw
js
test
cli
pop
cwtl
stc
gs
lods
test
insl
add
cmp
push
outsb
adcb
mov
dec
nop
xor
sbb
es
push
icebp
dec
push
insb
repz
test
push
sub
sub
lods
mov
adcl
les
scas
ret
or
push
loop
cmpsl
aad
pushf
adc
mov
inc
aam
push
mov
fimuls
dec
pop
subl
ss
daa
hlt
movsl
fucomip
mov
xchg
pop
jl
idivl
loop
xchg
iret
xchg
notl
sahf
sub
in
xchg
out
cltd
ret
stos
push
mov
lods
in
cwtl
sti
or
cli
xchg
das
inc
jl
fidivrl
jo
and
fstps
sbb
inc
movsl
mov
xchg
dec
and
jp
jnp
xchg
inc
dec
aad
sub
fs
call
leave
and
or
insb
xor
mov
into
xchg
out
inc
lcall
testb
ret
sub
xor
pop
jmp
pusha
jmp
jp
shr
lods
adc
xchg
repz
movsb
xchg
sub
cmpsl
les
xor
xchg
pop
or
aam
subb
push
inc
xor
jae
xchg
es
addps
sbb
call
mov
sub
jl
fsubl
mov
dec
scas
jae
sub
inc
fstl
xchg
shrb
jmp
in
adc
aaa
test
fwait
xchg
mov
loop
mov
ret
and
in
out
mov
rcr
repnz
jnp
sbb
sbb
xor
add
pop
cmc
adc
adc
add
in
add
cmp
and
push
lods
cmp
mov
or
mov
imul
aas
addr16
call
.byte
mov
push
