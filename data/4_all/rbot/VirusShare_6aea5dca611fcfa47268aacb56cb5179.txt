adc
add
add
add
add
or
add
add
xchg
icebp
or
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
lret
add
or
and
or
xor
or
inc
icebp
or
push
icebp
or
or
add
add
or
add
cld
lock
pushf
lock
or
or
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
inc
add
add
add
add
add
add
add
pusha
add
mov
add
aas
add
pusha
call
pop
sub
lea
mov
cmp
je
lea
mov
cmp
je
movb
mov
sub
mov
add
lea
add
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
mov
loopne
add
sub
popf
stos
pusha
leave
fildll
push
dec
and
cmp
ja
sti
and
adcl
mov
pop
lahf
inc
movsl
push
push
adc
lcall
cmp
arpl
dec
shrb
jle
push
xchg
pop
fmul
fidivrs
pop
or
sbb
sahf
stos
and
cmp
fucom
mov
popf
test
xchg
and
mov
movsb
fldt
aaa
arpl
stc
push
mov
mov
mov
pushf
stos
test
scas
xchg
jg
push
mov
aas
arpl
xchg
nop
in
sbb
nop
push
mov
cmp
pop
cmpsl
sub
pop
in
xor
push
repnz
cmpsb
push
ljmp
and
jo
fs
mov
test
aad
sbb
mov
movsl
dec
inc
cli
aaa
xchg
push
sub
jnp
and
push
mov
ja
jmp
sbb
jnp
and
sub
mov
xor
shll
push
mov
ja
adc
and
cwtl
add
aaa
mov
inc
cmp
or
and
inc
aaa
std
icebp
xchg
dec
mov
stc
dec
push
and
scas
add
jge
rcl
mov
shll
mov
cmc
mov
inc
aaa
insl
sbb
push
lret
int3
scas
xor
lods
fwait
mov
jne
pop
hlt
cmp
adc
xor
adc
out
cs
lods
fwait
pop
out
and
pop
adc
test
lcall
inc
daa
mov
cs
or
in
rclb
std
pop
aad
into
xor
dec
push
std
mov
push
xor
lods
arpl
in
in
aaa
mov
jmp
repnz
sub
lahf
or
out
add
je
dec
cmp
push
dec
inc
aad
sub
xchg
test
fimull
push
ss
push
mov
int3
fwait
addb
jecxz
adc
sti
and
lret
mov
cwtl
cmp
out
ja
xor
cmpsb
mov
orb
adc
xor
sub
sbbl
cmp
jp
dec
xchg
in
mov
in
lret
lret
inc
and
testl
pop
push
or
jns,pt
jo
fdivrl
push
es
test
cld
sub
adcb
mov
int3
and
xor
scas
mov
mov
jp
add
repnz
push
out
out
loope
in
inc
jnp
mov
fsubr
xlat
ret
imull
xchg
outsl
addl
xlat
movsl
je
popa
clc
pop
mov
jl
add
mov
repnz
ss
out
jo
dec
lahf
cmp
pop
mov
rclb
test
push
out
push
sahf
adc
xor
adc
inc
sbb
ficompl
cmpsl
sub
jp
and
not
cli
test
decl
pop
sub
test
add
pop
shll
and
jle
lret
fs
popa
decl
pop
sbbb
iret
push
mov
ja
xor
das
jne
stos
xor
inc
outsb
call
and
pop
and
mov
fisubl
add
popa
pop
push
ret
xchg
xlat
mov
hlt
out
mov
lds
jmp
add
rcrl
mov
add
lods
imul
cmp
cmp
mov
push
in
mov
dec
pop
xchg
jecxz
cmp
push
psubq
or
das
js
sbb
aam
std
mov
js
cmp
lods
push
cmp
add
stc
mov
fstps
mov
ds
xor
ror
push
in
mov
jb
test
cmp
out
iret
mov
dec
rcrl
adc
jmp
lret
rcl
addl
dec
inc
inc
mov
scas
jno
push
jmp
mov
sub
add
fbstp
push
inc
cmpsb
push
addb
jle
in
lahf
call
or
ret
push
pop
mov
inc
inc
imul
fimull
mov
cwtl
cmc
adc
mov
mov
xchg
stos
imul
sub
or
test
cmp
popa
push
xor
pop
pop
pusha
xchg
out
jns
push
jl
int
sbb
ljmp
movb
adc
mov
sub
adc
int3
xor
je
pushf
add
jle
mov
sub
jecxz
rclb
stos
cmc
push
cmp
leave
das
push
xorb
fistpl
loop
cmc
dec
cwtl
movsl
push
xchg
push
pop
mov
mov
xchg
pop
jns
jp
adc
push
jg
das
and
mov
jmp
xor
sbb
fstl
inc
aad
sub
mov
sbb
out
mov
cmp
and
xchg
aaa
call
adc
push
xor
mov
outsb
loopne
loop
into
xchg
sub
xor
lcall
inc
push
negb
pop
dec
inc
xor
es
insl
xchg
and
sti
je
cmp
mov
push
ret
and
js
inc
jl
xchg
mov
xor
or
mov
add
pusha
or
cli
sbb
sbb
push
movsb
fbstp
in
cmp
xchg
push
stos
jmp
xchg
out
icebp
cmp
or
movsb
xchg
xchg
cmc
xchg
push
cwtl
icebp
add
pop
mov
xorl
jb
inc
inc
mov
loop
xor
out
nop
sar
sahf
lods
xor
mov
xchg
daa
pop
jo
cli
add
jmp
adc
jp
fsubrl
xor
pop
dec
mov
pop
js
inc
push
push
dec
into
dec
out
mov
adc
mov
add
push
invd
mov
push
add
dec
pop
mov
inc
fs
jmp
jbe
push
sub
pop
and
clc
je
pop
or
mov
push
imul
add
push
cmp
pop
addl
cmp
lret
push
repnz
imul
nop
jecxz
pop
pop
adc
dec
and
adc
je
cmpsl
fmull
sub
rcr
repz
stc
test
lods
ret
ja
push
or
loop
stos
je
movsb
push
stc
sbb
lods
outsb
cmpsb
mov
fs
jns
push
ret
push
popf
add
and
push
or
ja
push
push
mov
loope
push
incb
add
fnsave
dec
xchg
shl
sbb
test
hlt
and
std
out
out
jecxz
roll
in
and
jb
mov
and
inc
or
inc
fildll
stos
adc
ljmp
aad
loop
std
lds
rcrb
adc
jb
dec
add
je
mov
dec
xchg
push
repz
xchg
jns
push
sbb
add
inc
scas
test
pop
adc
or
pushf
jecxz
leave
sub
out
mov
pop
mov
cmp
pop
in
scas
xor
push
daa
or
shrb
test
push
jge
mov
sub
lock
arpl
dec
repnz
sti
repz
scas
clc
pop
rcrl
mov
mov
shll
push
sbb
add
stos
stos
sbb
adc
out
and
sbb
pushf
pushf
mov
dec
jo
jo
xchg
aaa
mov
sti
jo
xchg
scas
popf
outsb
adc
sbb
inc
mov
je
and
stos
sti
in
jne
ja
repnz
in
add
in
and
sub
mov
mov
sub
mov
xor
xor
loopne
sbb
aad
and
adc
push
cmp
fdivrp
pop
sub
fs
popa
mov
aaa
lock
cli
fdivr
xchg
nop
andl
mov
inc
imul
jbe
js
pop
pop
es
nop
or
fldl
xchg
scas
fsubrl
sbb
les
inc
cmp
hlt
adc
cmp
imulb
inc
push
repnz
xchg
test
and
mov
xchg
cmp
cld
mov
jg
adc
adc
out
push
aas
dec
lahf
and
sub
mov
adc
or
lods
fsubl
mov
xor
mov
test
mov
cmc
mov
inc
out
popf
cmpsb
es
test
nop
push
fcoml
outsb
scas
shll
xchg
por
pop
scas
dec
mov
xor
lret
int3
xor
aaa
daa
mov
cs
std
aad
call
and
jl
lea
cltd
leave
js
push
xchg
sbb
addr16
popa
push
dec
data16
inc
lds
fiadds
cmpsb
sbb
or
and
pop
lods
into
imul
and
push
cmp
add
mov
cwtl
xor
mov
jmp
daa
mov
les
add
lods
xchg
pop
adc
jbe
sub
cmc
stos
jl
int3
jg
mov
jb
jle
mov
jg
jg
out
scas
xchg
mov
dec
mov
test
cmpsl
or
push
cmp
jl
insb
xlat
and
int
add
daa
out
push
sub
popf
xchg
mov
sub
cmpsl
pushf
pop
mov
mull
subb
repz
repz
xchg
push
addl
pop
int
loopne
insb
pop
cmpb
es
xchg
jns
out
dec
cmpsl
sub
mov
push
ja
add
xchg
ret
inc
lods
aam
ret
sbb
clc
xchg
xor
daa
jle
jae
xchg
orb
push
es
test
push
push
cmp
in
lcall
fmulp
cmp
jbe
mov
fdivp
in
and
leave
jmp
int
or
cs
pop
jge
bound
adc
insb
and
jbe
nop
fists
aam
mov
leave
test
je
pop
fsubrl
insb
pop
pop
je
shll
sbb
dec
sbb
mov
mov
sub
push
aam
cmp
mov
mov
movsl
sub
divps
aam
push
imul
lea
movsl
outsl
jg
iret
inc
xor
fwait
bound
test
push
fsubs
lcall
data16
pop
js
dec
lret
pop
dec
inc
adc
ficoms
clc
xor
mov
push
incl
fldenv
loop
and
je
mov
cmp
cwtl
adc
inc
lds
pop
cmp
push
and
jno
jmp
daa
adc
and
outsb
jo
adc
push
out
sarb
repz
clc
add
xor
rcrl
push
js
leave
test
and
testb
mov
push
loope
lea
cmp
push
cltd
call
aas
in
iret
jl
repz
ds
inc
push
js
cmpsl
push
mov
adc
test
mov
lock
outsb
cmp
push
mov
sbb
jb
lcall
jae
out
jae
out
or
cmpsl
pop
nop
sub
sbb
mov
push
xchg
dec
mov
or
cmpsb
adc
add
dec
popf
cli
mov
scas
jnp
sbb
sahf
push
fbld
into
push
sarb
push
lods
lret
jno
mov
sbb
in
add
clc
sub
add
push
lods
jnp
shl
adc
mov
xchg
dec
pop
cli
lcall
xchg
mov
pop
in
push
jp
shl
es
cld
and
jne
sub
jno
inc
pop
jo
sbb
loopne
outsb
out
mov
scas
call
pop
adc
fnstenv
testb
les
pop
mov
cmpsb
fimull
mov
ss
or
shlb
add
mov
pop
xchg
mov
push
cmpl
scas
push
lret
fwait
xor
and
push
insl
xchg
inc
add
or
jmp
mov
int3
xor
or
or
stos
loopne
pushf
mov
fdivs
adc
mov
out
subl
jo
clc
push
or
mov
fwait
inc
or
stos
adc
rcrb
xchg
nop
push
lret
sahf
pop
rcrb
mov
popf
jecxz
jp
out
sbb
and
pop
mov
sub
adc
and
sub
mov
pusha
dec
or
clc
add
enter
ja
xchg
push
add
dec
lods
daa
fcompl
rcr
imul
ret
cmp
loope
xor
inc
sbb
mov
cli
cmp
push
inc
adc
lea
daa
sbb
movsl
rclb
xchg
jg
and
push
or
adc
pop
and
arpl
ret
xlat
aaa
mov
mov
sbb
sahf
pop
in
cmp
pop
pop
mov
nop
inc
sbb
xchg
jbe
loop
sbb
fdiv
push
xlat
scas
in
and
pop
aaa
push
jl
dec
xor
lods
sbb
sub
xchg
icebp
and
cld
popf
addr16
sub
xchg
xchg
outsl
cmp
lret
xchg
mov
adc
mov
stos
jg
das
scas
mov
hlt
fdivl
out
mov
adc
cld
mov
enter
push
cs
and
push
sub
add
movsl
mov
js
jmp
adc
mov
test
psadbw
pop
inc
test
out
xor
aad
cmpsb
sbb
jb
mov
scas
les
xor
ret
mov
test
insl
outsl
inc
lcall
push
xchg
movsb
or
cmpsl
cmp
test
fistps
lds
cmp
fdivrl
inc
mov
cmp
dec
lcall
or
mov
pop
out
dec
xchg
jge
mov
out
mov
pop
out
out
mov
adc
jne
xor
sbb
enter
sahf
pop
xor
add
imul
mov
fucomi
shlb
pop
into
out
mov
push
dec
xor
cmp
cmp
xchg
dec
jmp
cmp
jae
fstpt
jle
aam
and
cltd
cli
sbb
xchg
jg
mov
sti
adc
cs
cld
enter
sub
pop
and
push
jmp
push
xchg
stos
and
sti
arpl
xlat
mov
imul
fucom
cmp
xchg
mov
stos
scas
mov
sbb
lds
pop
mov
in
notl
ljmp
pop
insb
lds
xorb
inc
das
push
xor
loopne
lea
sub
cmpsb
or
icebp
aas
call
std
cmc
test
lds
jle
mov
lods
mov
mov
clc
scas
clc
jmp
xchg
and
and
inc
cmp
in
int3
loope
and
adc
cmpsb
or
hlt
fbld
add
and
rolb
outsb
or
xchg
jge
mov
outsb
add
cli
in
scas
in
mov
int
sti
gs
adc
loopne,pn
xchg
shrl
nop
loope
in
add
inc
and
add
cmp
lods
cmp
repnz
xor
xchg
movsl
mov
mov
push
mov
or
xchg
mov
iret
dec
mov
ljmp
daa
repnz
sbbl
test
or
cltd
jle
into
cmpl
cmp
divl
dec
xrelease
jmp
in
ror
xor
push
add
or
out
leave
jg
aam
lahf
test
mov
mov
test
xchg
mov
xchg
mov
fiaddl
aaa
mov
leave
inc
dec
int3
mov
jge
shlb
adc
sub
std
or
sbb
jbe
hlt
inc
pop
xor
pusha
ds
rolb
shlb
mov
xchg
test
inc
xor
mov
xchg
ss
inc
add
cs
add
or
sahf
scas
mov
jl
xorl
xchg
pop
insb
cmp
jnp
inc
filds
andl
test
int
and
movsb
shlb
mov
inc
mov
repz
inc
fmull
daa
xchg
pop
mov
jnp
lock
in
mov
xor
in
xchg
out
fimuls
dec
mov
cmp
incl
push
repz
push
push
insb
test
fninit
adc
mov
pop
adc
push
adcl
push
lock
dec
mov
mov
aam
lret
adc
sahf
je
movsb
out
mov
jge
popf
adcb
inc
out
mov
cmp
jae
lcall
andl
nop
jnp
sarl
push
cmp
jbe
mov
or
xor
imul
aam
mov
aam
ret
mov
aad
xchg
inc
pop
call
cltd
clc
repnz
sub
push
test
jge
sbb
lret
add
mov
stc
repnz
repnz
shlb
jp
lods
lahf
stos
mov
add
mov
mov
jge
cmpsl
sub
leave
sub
loopne
sbb
dec
xorl
enter
mov
xchg
stc
inc
int
sub
in
fbstp
adc
enter
or
js
adc
xchg
pop
sub
sbb
pop
adc
push
mov
add
fldenv
mov
aad
xor
sub
dec
cli
add
inc
test
repz
and
gs
lret
sbb
jmp
mov
aas
mov
clc
mov
mov
push
stos
mov
adc
pop
fimuls
add
aaa
jo
aam
xchg
leave
dec
xor
in
lahf
pop
add
stos
pop
push
jb
push
pushw
dec
hlt
mov
xchg
cli
insl
push
test
lcall
mov
enter
and
add
or
in
int3
cmpsb
popa
sti
pop
mov
inc
outsb
inc
lods
pusha
mov
mov
mov
icebp
pushf
jns
leave
icebp
and
int
ljmp
mov
aaa
add
adc
data16
sbb
aas
mov
sbb
dec
mov
int
clc
adc
lock
cmp
pop
xor
cmpsb
cs
add
and
sub
aad
mov
ret
xchg
lret
inc
fisubrs
lcall
mov
cltd
mov
mov
repnz
cld
fistl
arpl
push
test
idivb
adc
test
add
inc
notl
sbb
addr16
or
cltd
addb
jbe
push
mov
fidivrs
iret
movsl
ficompl
add
add
popf
nop
xchg
pop
cmp
push
repnz
in
outsl
add
mov
pop
xor
and
xchg
sbb
rolb
enter
shlb
test
inc
push
push
popf
adc
addl
popf
in
cs
mov
enter
lods
jp
push
dec
xchg
jle
arpl
sbb
push
dec
sbb
add
outsl
xchg
aas
add
scas
ljmp
ss
jae
jno
cmp
pop
dec
pop
and
lods
xchg
jno
out
inc
lods
adc
stc
jecxz
cmp
or
push
cmp
pusha
fidivs
mov
xor
pop
lret
sub
sub
cmc
push
daa
sub
sub
cbtw
shrb
and
sub
inc
mov
and
sarl
insl
sbbb
sahf
jge
mov
insb
pushf
fldl
xor
in
fwait
js
js
rcll
test
xchg
adc
mov
mov
dec
sbb
outsb
jnp
pinsrw
int3
fcomip
daa
pop
mov
fisttpl
cmp
and
out
int
adc
xorb
jnp
adc
inc
lahf
js
or
lods
mov
mov
cmpsl
inc
ficoms
push
mov
and
dec
mov
jbe
add
inc
cmpsb
or
fidivl
mov
call
pmaxub
push
mov
push
pusha
sbb
scas
mov
mov
xlat
or
mov
clc
xchg
sub
inc
adc
mov
jmp
ror
out
in
pop
icebp
cltd
jno
mov
xchg
and
sub
xor
fmull
int
fildl
jno
popw
into
push
out
inc
in
or
jg
or
push
sbb
lahf
adc
popa
leave
inc
xchg
std
ss
fmulp
stc
adc
into
cmp
nop
cltd
pop
fndisi(8087
jno
jle
add
shlb
jge
adc
adcb
jge
xchg
and
and
inc
aam
sti
out
sub
in
or
arpl
or
stc
xor
dec
adc
dec
repnz
sub
push
sbb
aas
adc
roll
sbb
add
xor
or
mov
imul
es
inc
cmp
fs
xor
cltd
push
push
outsl
xchg
js
out
pusha
je
int3
stos
push
shr
in
cmpsb
add
or
pushl
mov
mov
jns
push
mov
and
push
sar
ds
dec
pushf
and
les
bound
adc
imul
lcall
pop
inc
bound
stc
xchg
fisubl
addr16
jge
out
loopne
mov
jl
cld
enter
jecxz
adc
mov
add
sbb
mov
pushf
pop
sarl
aad
fisubl
or
add
aad
cld
mov
fildl
into
js
leave
mov
int
icebp
dec
cmpsl
sub
rorl
test
and
in
sbb
in
or
mov
inc
pop
xchg
or
inc
in
fcomps
mov
insl
dec
roll
xor
lahf
mov
call
inc
ja
testb
xchg
loop
fisubrs
ret
fidivs
cmp
mov
and
dec
cwtl
popf
cmc
out
pop
mov
xor
push
fistpl
fstpt
fimuls
cmp
xchg
stos
aad
rcrb
jae
mov
jnp
sub
sub
jno
add
in
repnz
loop
add
rsm
jne
jl
lret
lods
cs
sub
in
stos
dec
jne
push
ret
fcomps
fwait
xchg
pop
mov
jg
mov
jno
rcrb
push
sbb
nop
adc
and
and
decl
sub
mov
out
sub
pop
shlb
scas
sarb
sbb
out
and
stc
sahf
fisubs
dec
jb
cmp
push
hlt
push
add
mov
stos
mov
mov
jns
sub
fucomip
jnp
add
or
inc
lret
ds
inc
lds
test
shrb
xchg
stos
dec
jmp
add
loope
popf
stc
lcall
bswap
arpl
and
push
stos
ss
jecxz
push
icebp
outsl
adc
jecxz
sbb
xchg
xchg
mov
xchg
leave
mov
inc
das
pop
add
mov
and
scas
mov
pop
mov
sbbl
test
mov
xchg
adc
mov
jns
mov
ror
fisubrs
mov
and
sti
adc
scas
aaa
mov
pop
dec
mov
out
dec
jno
enter
mov
push
cs
imul
push
fistpll
sub
js
pop
inc
int
jecxz
adc
loopne
sahf
sbb
and
push
rcrl
stos
repz
sarb
orl
cmp
xchg
not
mov
or
daa
pushf
cmp
cmpsb
add
lods
sahf
add
jg
loope
cmp
fucom
jnp
xchg
arpl
mov
mov
in
mov
jns
dec
js
loope
xlat
inc
inc
in
test
inc
out
adc
xchg
add
cmp
notb
push
ficomps
clc
mov
nop
mov
nop
and
fildl
mov
call
add
xor
repnz
cld
fistl
add
mov
test
push
push
fldl
lods
jmp
mov
js
xor
xchg
mov
mov
jp
mov
cwtl
outsb
into
jg
jbe
add
stos
test
mov
das
sub
adcl
jl
aas
or
cwtl
dec
dec
pop
hlt
in
rcrb
jecxz
loop
adc
aas
jno
std
icebp
stos
mov
test
sub
sahf
scas
adc
cmc
jle
pop
test
sub
pushf
and
dec
sbb
mov
push
mov
mov
into
test
imul
stos
push
js
mov
push
jb
cwtl
sub
lret
in
xchg
inc
mov
mov
sbb
xor
iret
aad
movl
inc
rcll
mov
into
mov
mov
sahf
in
inc
adc
dec
jb
js
push
add
sbb
lcall
lret
pop
notb
cmp
sub
xor
add
mov
in
xor
mov
mov
imul
aaa
pop
push
mov
mov
xor
sub
jge
loope
out
or
sbb
lds
pop
lret
cmc
cmp
mov
fisubl
sbb
insl
pop
dec
fs
das
sahf
jno
cmp
jmp
addb
and
les
pop
xor
pop
popf
add
jmp
mov
in
sahf
aad
test
jecxz
cmp
sbb
cmc
or
dec
dec
and
mov
mov
cmc
mov
mov
rorb
cltd
in
adc
addr16
pop
cs
mov
jmp
inc
mov
std
aas
push
sbb
dec
enter
rorb
or
mov
sub
or
out
xor
pop
dec
jge
mov
pop
dec
popf
stc
and
es
popa
and
loop
movaps
testb
out
pop
sbb
and
in
js
sbb
pushf
loope
cs
into
sub
and
fcmovu
dec
mov
pop
fadd
jecxz
pop
shlb
cmc
cmp
out
and
rcl
sbb
xchg
fisubrl
iret
and
sub
push
fcmovbe
push
ffreep
xlat
xor
xor
jns
in
dec
mov
ljmp
imul
dec
sahf
xchg
lret
dec
je
pop
sbb
dec
dec
xor
adcl
ja
inc
push
scas
cvtps2pd
mov
add
in
xor
or
dec
jle
gs
jnp
sti
mulb
fcoms
inc
xor
iret
aaa
mov
add
fisttpl
fsubrp
pop
call
pop
sti
inc
daa
adcl
push
pop
xor
mov
jecxz
cmp
jb
test
jle
push
ja
call
int3
xchg
inc
or
jl
jns
jl
mov
loopne
in
push
jg
jne
pop
or
stc
addr16
pop
loopne
ss
mov
ficomps
cli
adc
mov
fildl
mov
sbb
or
pop
and
rclb
js
inc
fsubrp
pop
dec
add
insb
dec
dec
adc
lock
out
fsubs
pop
dec
aam
cli
lods
cmp
mov
adc
inc
xor
test
xor
or
shrb
xchg
xchg
mul
outsb
dec
jb
sbb
pop
xchg
pop
xchg
jno
call
and
xchg
add
mov
lods
pop
xor
into
inc
xorb
ds
pop
xchg
loop
loopne
xchg
cmpsl
repnz
std
dec
cwtl
lcall
rorl
sub
cmp
push
aaa
dec
sbb
gs
fsubrl
mov
mov
sub
and
push
mov
mov
aam
mov
fcomi
icebp
adc
popf
inc
hlt
adc
xor
sub
sti
cmpsl
arpl
or
and
xor
mov
inc
and
jmp
and
push
push
inc
aaa
jns
mov
mov
shl
test
int3
in
daa
mov
xor
xor
xor
sub
mov
xchg
in
in
scas
shr
jne
and
inc
sti
pusha
push
fildl
dec
inc
pop
xchg
mov
pop
xchg
xor
lahf
ret
adc
dec
stc
cmp
cmp
popa
jle
nop
pop
lret
je
mov
dec
jg
mov
mov
fisubl
imul
cmp
lods
pop
xchg
fwait
std
add
and
xchg
fisubrl
sub
pop
xor
and
mov
sub
mov
mov
ficompl
push
xor
jecxz
xchg
ss
sub
adc
xchg
add
roll
arpl
sub
ret
pop
jno
inc
or
int
shlb
hlt
in
inc
mov
push
mov
xchg
pop
adc
pop
out
xor
sbb
push
or
cmp
adc
shrl
mov
jb
add
ror
adc
add
fprem
and
add
cmp
dec
leave
ja
pop
outsb
sub
outsl
imul
adc
mov
push
mov
cmp
enter
push
lret
stos
add
fldenv
sbb
xchg
ret
add
xor
xlat
jecxz
stos
fnstcw
insb
popf
xchg
test
sub
imul
add
xchg
sub
mov
xchg
mov
daa
mov
pop
adc
add
divb
in
mov
pop
push
push
dec
sti
popa
in
loopne
sub
es
lret
lahf
pop
cmp
xor
or
aas
adc
add
shll
rcrb
jae
xchg
dec
filds
or
dec
and
mov
dec
and
cld
fbstp
fisttpl
pop
adc
movsl
pop
hlt
or
ss
fstl
xchg
iret
jne
inc
in
or
movsb
cs
mov
in
push
mov
popf
mov
xchg
push
mov
sub
stc
sub
xchg
xor
mov
sub
sbb
stos
pop
sbb
gs
dec
adc
push
rcrl
imul
dec
inc
adc
insl
mov
mov
dec
sbb
aaa
adc
imul
or
test
lods
mov
bound
fildll
xchg
ficomps
or
xor
je
cwtl
rcrl
jp
xchg
sahf
lret
fistl
out
movsb
jmp
adc
and
adc
dec
cmp
or
stos
cmp
xchg
or
pop
mov
dec
cmp
dec
inc
test
popa
push
push
dec
aad
sub
adc
inc
push
push
mov
lods
lret
mov
jge
inc
add
in
loope
cmpsb
ficomps
js
es
fwait
sbb
pop
adc
lret
or
aaa
mov
lods
dec
or
inc
mov
notb
or
push
pop
inc
or
pop
loope
jg
scas
pop
inc
repz
mov
dec
and
xchg
aad
cmp
aam
pop
jle
mov
icebp
cmpsl
sub
xchg
jecxz
movsl
scas
fstpt
pop
push
in
sbb
push
sbb
push
aaa
sbb
fstpl
addr16
mov
jno
sbb
pop
jl
push
js
outsb
shr
or
push
pushf
inc
mov
negl
push
insb
sub
into
jns
addr16
addl
flds
scas
je
out
push
mov
jae
dec
mov
inc
inc
ret
negb
jle
push
mov
pop
jle
daa
push
out
sub
pop
shll
pop
mov
arpl
dec
out
insl
push
loop
push
aam
dec
add
addr16
inc
cmp
outsl
ret
sbb
loope
jnp
in
mov
push
pop
mov
sub
xchg
jmp
out
push
push
xchg
aaa
mov
mov
sbb
inc
rcll
inc
testl
mov
cmpsb
cmp
xchg
scas
xor
arpl
cmpsl
add
ljmp
cwtl
cmp
mov
sub
mov
cmpsb
imul
mul
and
xlat
sbb
imul
ret
stos
stos
xor
cwtl
daa
mov
xchg
jecxz
mov
movsb
mov
jmp
imul
fwait
sbb
ss
xchg
es
push
sti
ret
lds
xor
into
cmp
dec
fdivrl
xor
lcall
xchg
cmp
aas
xchg
push
pop
and
call
test
lahf
aam
jnp
pop
das
mov
addb
pusha
mov
pop
scas
aas
orb
push
mov
pop
stc
mov
sbb
add
gs
dec
dec
mov
push
enter
repz
adc
out
pushf
lcall
pop
test
lcall
mov
push
sub
lea
jl
lret
int3
pop
jno
push
jmp
lret
push
push
push
jb
sbb
pop
xchg
xorl
sahf
xlat
hlt
shll
daa
pop
sub
or
popa
push
int
sti
add
inc
mov
jnp
clc
iret
mov
mov
inc
or
pop
lods
test
loope
adc
test
loopne
mov
out
jmp
cmp
cmpsl
pop
stos
scas
lahf
imul
mov
dec
add
mov
push
mov
mov
call
repz
ss
lahf
xor
sbb
push
aam
ret
push
out
xor
clc
sbb
dec
fs
push
add
fdivr
les
fsin
jl
and
mov
and
cmp
push
dec
xor
dec
xchg
lret
or
clc
xor
cmc
push
push
jno
fwait
add
cs
mov
cwtl
mov
imul
pop
vpaddusb
sbb
popf
pop
movaps
xor
sub
push
mov
nop
or
rclb
or
xor
fcom
in
xchg
inc
xchg
dec
in
fsubr
stos
cmp
test
push
sbb
mov
int3
insl
in
cwtl
mov
mov
test
into
repnz
adc
xchg
jb
lock
mov
push
dec
out
sub
mov
out
dec
push
add
outsb
cmc
in
iret
outsb
pushf
in
adc
js
fs
out
adc
in
and
pop
mov
lret
pop
lea
cltd
lahf
mov
inc
lods
adc
insl
lcall
adc
adc
pop
shl
cltd
or
cmp
dec
adc
loop
sbb
in
push
pop
and
xchg
pop
call
inc
stos
mov
outsb
inc
cmpsb
pop
and
cmc
add
pop
pusha
dec
in
jg
mov
or
mov
push
mov
lods
subb
fstl
push
or
xchg
adcl
arpl
ja
das
aas
dec
mov
imul
scas
lock
dec
adc
push
fldcw
mov
or
pop
cmp
jg
inc
inc
and
aam
les
pop
mov
pop
add
or
xchg
test
fucom
lea
lock
loop
xor
int3
push
or
adc
in
test
cmp
sub
or
sahf
aad
ljmp
test
es
dec
pop
scas
clc
mov
mov
xchg
sub
push
outsb
movsl
mov
out
pop
bound
mov
repnz
pop
roll
nop
mov
cwtl
pop
adc
add
aaa
lahf
mov
pushf
fiadds
repnz
nop
dec
sbb
sbb
aaa
adc
subl
jbe
sbb
jmp
lds
sub
cmp
inc
sub
scas
outsl
cmp
xchg
scas
push
jbe
ja
dec
dec
dec
sbb
inc
out
ret
sbb
push
insb
pop
xchg
rorb
rcrl
cltd
cmp
movsl
aaa
xor
lock
scas
pop
fsts
dec
mov
add
fisttps
mov
lds
pop
mov
lret
shlb
std
call
adc
incb
popw
mov
mov
insb
mov
js
mov
lods
sti
mov
insb
mov
inc
sbb
stos
adc
and
and
cmp
sbb
stc
shlb
lock
sti
mov
cmp
in
and
jo
fsin
pop
call
cld
cld
fs
or
mov
inc
sbb
rolb
adc
jbe
lods
sbb
out
scas
int
xchg
xchg
jns
mov
xchg
cs
sub
stos
or
sub
loop
hlt
inc
inc
repz
mov
push
sbb
loope
jo
lock
xor
aaa
push
iret
push
sbb
nop
inc
icebp
or
mov
int
add
fimull
out
daa
lods
inc
add
xchg
and
ljmp
mov
pop
gs
xor
sub
lds
addl
popf
fs
loop
das
inc
nop
jge
out
sub
dec
addr16
leave
mov
js
test
pop
xor
aam
stos
cmpsb
push
scas
sti
inc
repz
push
testl
cmp
and
push
mov
adc
divl
movsl
les
dec
pop
inc
mov
or
jmp
xor
mov
add
sbb
fs
ret
push
inc
or
fisttpll
les
cmp
dec
enter
inc
jb
icebp
testl
mov
lret
popa
push
and
inc
jbe
shll
lods
and
push
dec
sbb
adc
inc
dec
dec
jbe
push
mov
sub
in
jnp
adcb
push
imul
addl
ret
jae
imul
adc
call
fidivl
shlb
push
out
shll
int3
mov
jp
inc
pop
sub
mov
ss
inc
les
cmp
repz
dec
div
fistps
mov
xchg
ss
mov
push
add
repnz
push
in
shll
dec
cmp
push
test
lret
fildl
jne
arpl
jbe
subl
jp
mov
mov
mov
xor
test
shlb
ficompl
repz
fcom
cmpsb
or
call
hlt
insb
int3
mov
leave
lock
adc
adc
cmpsl
mov
rorl
test
xchg
popf
enter
pop
popa
rcrl
ret
enter
fldt
xor
jmp
aaa
xor
pop
xor
pop
dec
mov
sbb
cs
dec
fcmovnb
mov
test
sub
push
pop
loopne
xor
sbb
jg
int
cltd
fs
mov
mov
fsts
xchg
mov
les
push
test
push
jnp
rorb
or
xlat
cmp
mov
pop
in
sbb
fildll
add
pop
mov
or
test
inc
xchg
pop
pop
ret
insl
xchg
insb
mov
lret
pop
ja
adc
jge
repnz
sub
xchg
mov
push
pop
aaa
xor
outsl
fcmovnb
mov
cld
fiadds
clc
call
insl
dec
cmc
test
shl
cmpsb
aam
jbe
mov
pop
sbb
xchg
xlat
xchg
dec
je
inc
and
sbb
mov
insl
fadd
sub
fsubrl
lods
rcrb
daa
and
stc
pop
mov
jge
xchg
dec
mov
sub
ret
xlat
bnd
push
add
xchg
lret
xchg
xchg
cmpl
sub
inc
inc
and
mov
cmpsl
popa
imul
aas
jmp
jnp
adc
xchg
js
jmp
shll
leave
cmpl
mov
outsb
lret
ficoms
cmp
lea
insb
xorb
add
addb
out
xor
inc
pop
jnp
out
es
aas
out
and
push
xchg
cltd
test
fsubr
push
bound
out
or
in
vphadduwd
pop
add
ljmp
xchg
jbe
push
jnp
lock
cmp
cwtl
pop
and
and
pop
lret
dec
add
jmp
lods
mov
data16
mov
push
add
ret
lcall
xor
and
or
nop
sbb
lock
jbe
mov
jne
sub
dec
aas
out
dec
cmp
jno
or
stos
sahf
sbb
cs
je
pop
xorl
xchg
xchg
fwait
pop
movsb
xor
in
lods
add
xorl
ljmp
xor
inc
cmp
imul
iret
icebp
adc
fs
or
pop
stos
dec
push
nop
lods
mov
dec
sub
xchg
insb
pop
xchg
rcl
test
enter
leave
cmpsl
xor
push
mov
pop
xchg
inc
lret
dec
xor
or
out
fldt
push
cmpsl
popa
inc
lds
aam
dec
dec
push
mov
in
push
and
and
xchg
push
push
test
jo
xchg
xor
pop
jns
cld
std
shrb
arpl
pavgw
dec
cmpsb
add
test
arpl
dec
loopne,pt
adc
pop
xchg
gs
fisttpll
adc
rcll
jg
add
sub
sbb
insl
mov
mull
jge
sbb
imul
dec
add
and
cli
sub
dec
lret
fimull
mov
mov
or
fwait
or
imul
xchg
repz
mov
std
inc
adc
pop
sub
inc
sbb
mov
dec
jecxz
lea
and
insl
add
out
stos
enter
cmp
mov
lahf
and
std
jns
pop
cwtl
daa
cmpsl
cmc
scas
bound
xchg
ret
jl
into
dec
cs
dec
inc
mov
inc
xchg
mov
inc
xchg
sbb
dec
mov
test
cwtl
dec
fildll
sub
xor
jae
cmp
and
pop
xchg
xchg
or
jle
sbb
push
cmp
sub
mul
cmpsb
int3
jl
aam
sahf
pop
inc
push
xchg
mov
mov
add
push
jecxz
test
leave
add
adc
cmp
repnz
movsb
cs
dec
sub
movsb
inc
sub
jmp
push
adc
inc
add
pop
add
cmp
xchg
xchg
test
mov
in
lods
jbe
js
xor
mov
inc
lcall
or
filds
inc
cmp
out
dec
mov
push
add
sahf
push
enter
and
push
mov
inc
sbb
imul
loope
in
out
lds
dec
push
ret
dec
mov
mov
clc
stos
sahf
pusha
cmp
loope
mov
xlat
xor
aaa
xchg
and
pop
rorb
add
sbb
pop
mov
pop
and
cli
jmp
adc
insb
cmp
sbb
inc
icebp
in
mov
or
mov
mov
jbe
xor
aaa
cwtl
scas
loope
and
sub
aam
jns
mov
sarb
stc
xchg
mov
jge
movsb
es
xchg
dec
in
mov
or
push
pushf
add
pop
adc
rcl
cmp
pop
stos
mov
popa
xchg
jge
rcrl
pop
or
sbb
not
adc
add
test
pop
mov
mov
repnz
and
aaa
loop
and
jae
push
pop
push
push
push
jno
sub
loopne
mov
loope
or
sbb
dec
pop
fwait
pop
push
sub
cmp
rcll
or
xchg
repz
out
bound
inc
xor
cmpsl
scas
push
call
xor
xchg
add
cmc
adc
es
in
and
into
dec
add
dec
cmc
test
jl
cld
enter
jge
pop
incb
sub
in
and
push
test
or
aad
cmp
xor
insb
or
xor
dec
movsl
out
lea
out
xor
test
mov
ficoms
call
sbb
iret
mov
xchg
sti
mov
lahf
lcall
push
fbstp
mov
adc
push
popa
cmp
jg
lret
lret
fwait
call
add
push
lods
je
movl
push
lret
xor
xor
jmp
in
xor
dec
or
mov
or
inc
lods
aam
jb
test
outsl
push
mov
mov
test
lcall
xor
ret
ds
cwtl
pop
xorb
jno
dec
mov
jg
notb
pop
mov
mov
sub
loope
push
add
or
mov
inc
jae
inc
rorl
mov
and
std
lret
lcall
mov
xor
sub
lret
daa
std
lods
ficoml
push
or
out
clc
fiadds
hlt
mov
pop
in
or
aad
mov
or
je
or
pop
cs
mov
mov
jle
mov
sub
mov
imull
fucomip
lods
je
incb
jmp
cmp
mov
fisubrs
jp
stos
orb
out
fstl
xchg
in
lahf
or
addr16
xchg
push
dec
add
inc
cmc
mov
scas
data16
adc
aaa
xchg
inc
stos
mov
add
hlt
jae
in
es
and
xchg
mov
nop
leave
mov
mov
jge
add
mov
mov
push
fistl
xchg
imul
ljmp
mov
ss
mov
xorb
sbb
repnz
xor
sbb
mov
jns
jmp
inc
sbb
cvttps2pi
add
in
dec
cmpl
leave
fs
xor
mov
fisttpl
inc
dec
rcrl
out
adc
xchg
inc
xor
or
lret
das
cmp
addr16
fwait
dec
into
mov
cltd
mov
gs
pop
imul
shrl
sbb
xor
pop
das
dec
inc
xlat
lods
mov
aas
fldl
xor
call
ja
test
jae
sbb
add
mov
pop
and
dec
rorl
xor
push
mov
add
mov
loopne
push
jb
rorb
js
push
insb
lods
xchg
ljmp
sbbl
mov
pop
out
mov
push
loopne
test
jb
aad
lea
clc
incl
sub
sbb
das
cmp
jge
mov
scas
bnd
pop
dec
mov
lret
xor
or
bswap
add
fwait
dec
jecxz
pop
xor
mov
call
xchg
mov
cmp
pop
push
ret
and
push
mov
and
in
or
enter
test
push
push
push
push
push
add
out
pop
inc
movsb
aaa
loope
adc
xor
or
pop
outsl
or
fcmovne
idivb
divb
push
shll
clc
fimuls
ss
fs
mov
cld
lock
or
ljmp
mov
push
mov
hlt
xor
pop
lock
push
cmp
adc
ss
mov
int
xlat
das
out
mov
outsl
insl
movsb
in
mov
sub
aad
es
mov
or
xchg
repnz
mov
out
cmc
cs
repnz
shr
stos
dec
outsb
shlb
mov
insl
add
test
rcrl
rcrl
imul
adc
lahf
lods
adcb
pop
jecxz
scas
fsincos
cmp
pop
stos
add
mov
in
sub
and
mov
add
jne
dec
push
cmp
outsl
pop
testl
test
aas
in
xchg
into
inc
daa
jle
sbb
adc
or
das
ret
push
lods
sub
cltd
push
insl
out
or
rcr
adcl
pop
cmp
cs
dec
mov
subb
in
dec
mov
adc
jbe
lret
cmp
jl
out
or
in
outsl
je
sub
call
es
inc
test
jnp
insb
test
xor
out
or
testl
cmp
insl
dec
sbb
pop
push
dec
sub
inc
lret
adcb
ss
fldt
push
cmp
cmc
mov
cmp
sub
jae
test
ljmp
dec
xor
stc
popl
scas
adc
aaa
pop
cmpb
rol
add
push
mov
test
push
insl
sub
lods
aad
iret
aas
mov
aas
out
fisttps
sbb
pop
cmp
xor
mov
jmp
mov
cltd
daa
shl
addr16
stos
lcall
xchg
sbb
stos
adc
jge
lea
into
push
int3
stos
fwait
and
xor
inc
add
iret
enter
push
jno
mov
scas
mov
inc
pop
pop
mov
and
sbb
or
pop
jecxz
and
adc
cmp
jns
in
pop
sahf
mov
inc
jecxz
jcxz
xchg
js
ljmp
pop
in
pop
dec
push
test
adc
lea
into
mov
jmp
adc
xor
or
mov
sbb
sbb
je
xor
out
repz
xorb
and
cltd
mov
out
add
jo
aam
xor
mov
sbb
leave
sti
scas
mov
inc
mov
pop
sub
cmc
ds
mov
ret
pop
sbb
sub
mov
mov
mov
imulb
pusha
stos
ss
cs
out
push
sarb
cmc
adc
imul
pmuludq
pop
fs
sti
cmpsb
push
and
push
sub
sti
mov
test
test
push
fcom
out
je
hlt
sub
clc
mov
inc
stos
and
add
inc
or
ja
pop
lds
pop
das
xchg
aam
lcall
pop
sub
dec
mov
insb
fsub
push
lcall
fsub
mov
and
ficoml
aam
lods
or
mov
and
shrb
dec
icebp
aad
jae
mov
inc
je
add
xchg
pop
push
stos
sub
lcall
in
sbb
rol
sbb
xlat
daa
stos
xchg
mov
xor
in
and
lds
test
mov
jb
or
jne
push
and
sub
xchg
sbb
loopne
xorb
inc
testb
fs
int3
out
fsts
sub
lds
cmpsb
sbb
mull
iret
lret
cmc
mov
je
fisubrs
pop
or
mov
mov
std
leave
clc
test
push
inc
call
cmp
sar
imul
inc
pop
xchg
sub
outsb
inc
push
in
sahf
outsb
je
inc
test
inc
roll
xlat
inc
and
mov
ret
sub
and
adcl
push
mov
out
xchg
imul
negb
mov
mov
icebp
inc
cmp
sub
sub
or
sbb
hlt
loope
xor
fisttps
in
lret
pop
loope
flds
cmp
push
jno
pop
inc
mov
xchg
jns
push
and
cwtl
pop
adc
adc
pusha
mov
cs
cmp
and
fists
movsb
mov
repnz
lods
add
or
mov
mov
call
fnstenv
mov
jmp
dec
das
adc
pop
mov
or
sbb
sbb
std
mov
inc
fstpt
xor
push
loopne
cmp
or
stc
jo
test
xor
sbb
or
imul
shll
cli
pop
push
in
xor
dec
mov
data16
ss
sub
add
mov
mov
xor
fimuls
mov
inc
jmp
aaa
adc
lcall
test
nop
xchg
jecxz
stos
jbe
jne
add
push
imul
inc
call
sub
repnz
mov
xor
test
xor
into
pop
push
ja
add
lahf
jns
mov
xchg
push
jae
fidivs
mov
xchg
addr16
cltd
jp
iret
jns
loopne
add
jae
divb
in
and
mov
scas
xor
dec
mov
adc
jp
cltd
pop
push
aam
mov
cmpsb
jae
push
jp
or
popa
call
jo
xchg
jmp
add
push
fadd
jge
shl
daa
jb
dec
in
add
repz
sbb
pop
ret
xor
fsubs
sub
push
psllq
mov
or
push
shlb
push
imulb
add
lods
jo
sti
gs
adc
jecxz
rorl
xor
push
inc
out
sbb
dec
or
mulb
cmc
idivb
jb
testl
mov
out
cmp
jmp
dec
fnsave
dec
mov
cmp
fldenv
pop
dec
aad
sbb
out
out
or
movl
add
stos
cmp
or
or
ljmp
adc
jmp
cmp
cmp
add
lock
inc
add
inc
rcr
and
addr16
nop
jg
mov
icebp
test
mov
mov
clc
and
in
mov
sbb
add
popf
dec
scas
pop
out
in
in
jbe
fsubrl
jbe
mov
or
add
lea
jge
xchg
cmp
xorb
jg
dec
aas
jnp
pop
sarb
cmpsl
jbe
sub
pop
andl
mov
mov
lret
sbb
xor
test
pushf
or
jns
push
xor
xchg
add
ds
loope
sub
xchg
push
xor
inc
pop
leave
pop
sub
xorl
adc
pop
sbb
mov
pop
fstpl
mov
stos
sub
movsl
not
adc
cmp
jne
neg
mov
xchg
dec
sbb
dec
jecxz
push
in
loope
fsubs
sbb
aad
jno
imul
in
sub
or
rorl
xor
ljmp
pushl
inc
arpl
pop
push
ss
jb
push
and
and
loop
push
dec
ss
les
insl
int3
push
xlat
mov
insl
pusha
xchg
mov
adc
and
ja
ja
fs
rolb
repz
sbb
inc
or
push
push
push
adc
subl
or
popa
cs
shlb
and
ljmp
jle
iret
mul
pushf
loopne
nop
out
inc
ja
ss
popf
bound
mov
gs
out
add
aaa
and
cmp
xchg
loopne
cmc
jbe
idiv
xchg
and
imul
lahf
iret
jne
les
cwtl
sbb
fisubl
aas
aad
rorb
mov
mov
mov
sub
jbe
out
fmuls
xchg
aas
insb
test
xchg
push
dec
dec
jmp
in
pop
pop
or
mov
ss
rol
lods
sbb
add
xchg
icebp
sbb
push
cmp
daa
mov
into
pop
or
nop
push
mov
jb
xor
xchg
bound
mov
mulb
or
out
cld
ja
in
fucom
add
xor
cmp
push
sbb
xor
adc
pop
pop
je
dec
pop
and
adc
pop
or
cs
and
cmp
dec
and
pop
push
jl
aad
cmp
leave
sub
hlt
push
fistps
and
push
idivb
jp
mov
jmp
icebp
push
lahf
mov
rcl
xor
mov
in
iret
mov
sbb
or
iret
incb
adc
loop
mov
pop
hlt
rcl
std
test
pop
mov
sub
je
rcl
out
lret
inc
outsb
das
cmp
pop
mov
fsubrs
rcr
repz
mov
mov
mov
daa
xor
sub
jl
dec
dec
in
push
jmp
test
fs
xchg
sarb
mov
daa
and
and
cltd
ret
adc
in
add
pop
lods
mov
mov
into
sbb
idiv
ficoms
movq
test
and
inc
jp
push
mov
pop
int3
pop
push
cltd
jge
or
arpl
adc
movsb
in
std
add
test
cmp
inc
dec
inc
js
incb
out
jge
repz
sub
dec
cmp
sub
rcll
loope
xchg
inc
test
jge
lock
cmp
popf
iret
jae
add
jg
sbb
add
jge
aas
sub
xchg
mov
out
sar
pop
sbb
lret
jl
cltd
mov
xchg
cli
cmp
int3
mov
mov
mov
pop
xlat
ret
add
jp
cmpsl
fcoml
sbb
or
enter
push
dec
xchg
ficomps
push
out
dec
shll
and
pusha
pop
lahf
je
mov
cld
and
jo
daa
aam
xor
loope
jmp
test
cmpps
mov
loope
lods
jnp
or
arpl
push
jnp
insl
hlt
inc
dec
xchg
jno
jmp
mov
cmp
cmp
add
xor
xor
mov
jmp
lahf
cs
stc
push
faddl
gs
call
jnp
idivb
out
adc
loope
dec
mov
pop
dec
fcmove
in
xchg
push
imul
or
leave
dec
add
arpl
aas
pusha
enter
cmp
testl
movl
jne
cltd
and
xchg
pop
arpl
mov
xchg
repz
fldcw
mov
or
jb
test
cmp
mov
loope
or
xchg
cmpsl
and
inc
clc
call
lret
fwait
jecxz
add
rcrb
fwait
outsl
jae
mov
push
jbe
pop
jns
adc
cmpsb
orb
sbb
cltd
mov
into
shll
cld
dec
fimull
aaa
mov
jno
test
jge
call
ds
mov
push
pop
cmpb
test
std
xchg
mov
jp
jecxz
cmp
aaa
in
aam
negb
mov
pop
ficomps
mov
lods
jle
pop
xor
cld
movsl
rolb
push
into
imul
decl
push
mov
cmp
fs
movsl
sub
je
push
mov
mov
mov
mov
inc
cmpsl
or
mov
adc
jg
rorb
iret
cmpsl
inc
xor
sub
rcrl
cmp
adc
out
add
adc
cltd
mov
mov
cmpsl
or
mov
icebp
push
add
mov
insb
xor
mov
push
dec
pop
jmp
dec
xor
xor
outsb
aam
movsb
pop
repz
aad
gs
popa
cmp
cs
and
or
cmp
jno
popf
cmpsb
jg
loope
or
or
in
sub
and
les
pop
xchg
loop
adc
xchg
int3
enter
mov
adcl
push
jmp
dec
xor
sahf
inc
sbb
mov
shll
jle
xchg
inc
into
adc
std
mov
cmpl
push
xchg
jmp
aas
pop
jmp
add
pop
mov
scas
dec
iret
mov
jo
mov
mov
stos
mov
out
and
jle
cmpsb
cmp
or
out
and
adc
add
mov
inc
cmp
jecxz
cmp
enter
add
popa
mov
loope
push
out
and
ffreep
mov
inc
xchg
jns
mov
ret
movsl
add
sbb
das
sub
gs
jno
sbb
pushl
or
clc
xchg
scas
cmpsb
jo
cli
and
int3
mov
scas
jnp
jecxz
xchg
mov
les
and
mov
mov
push
pushl
testl
sbbl
fistpll
inc
testb
rol
cli
out
mov
ret
andb
mov
inc
aam
inc
out
mov
int
add
xchg
pop
ss
pop
xlat
mov
adcw
xor
push
cmp
inc
adc
xlat
out
out
mov
pop
in
js
lea
jp
daa
lds
cwtl
aam
jecxz
pusha
jmp
cmp
lret
pop
mov
sbb
sbb
jl
cmc
ljmp
jns
sbb
jl
hlt
mov
sub
fst
jnp
xor
or
cmpsb
mov
aaa
jns
pop
aas
mov
repnz
fs
dec
dec
sub
popf
lcall
sub
je
sarb
popa
pop
dec
out
cmp
fwait
xchg
or
repnz
mov
mov
dec
mov
lock
sahf
in
xor
shrb
mulb
pmullw
bound
into
add
iret
sbb
dec
xor
movsb
fcomip
iret
call
ret
pusha
dec
lods
push
mov
sahf
hlt
inc
int
pop
je
gs
jle
outsl
jns
gs
jnp
cs
aad
dec
aam
idivb
fcoml
mov
in
dec
pop
sub
adc
aad
mov
push
repnz
ja
fucomi
push
in
push
jmp
fwait
addr16
mov
jbe
push
pop
mov
rolb
dec
jge
ficoms
inc
out
xor
cs
fmuls
popf
mov
fdivl
adc
loopne
or
jp
fbld
cld
or
inc
add
push
es
rcrl
mov
cwtl
lods
add
bswap
insb
dec
sbb
mov
cmp
int
lods
xor
xor
sub
xor
jns
or
push
ret
sub
xor
fstps
mov
popa
xor
fstl
out
movsb
sub
shlb
push
ja
and
mov
aaa
inc
jge
test
int
fldcw
fcmove
jmp
mov
hlt
leave
loopne
mov
sub
lock
lea
test
sbb
mov
inc
pop
and
scas
out
pop
pop
fstl
mov
fchs
sub
lea
sub
pushf
and
out
fstps
mov
mov
js
cmp
cmp
fsts
mov
mov
popa
adcl
mov
aas
pop
sub
cmpsb
or
leave
shr
adc
xchg
ret
fdivl
int
sub
jmp
mov
add
jo
mull
shl
inc
pop
lods
rorb
inc
mov
cmp
cmpsb
xor
iret
inc
popa
jl
sti
cmpl
ror
pop
daa
mov
mov
imul
push
jnp
cltd
inc
inc
movsb
fwait
mov
outsb
dec
mov
inc
cwtl
movsb
loop
pop
mov
mov
mov
les
cmp
adc
or
xchg
mov
jmp
incl
push
fmul
icebp
shll
mov
mov
icebp
pop
lea
je
mov
scas
jno
clc
add
xchg
imul
std
add
push
xchg
fwait
iret
insl
jo
and
cmp
pop
es
loop
sbb
jecxz
std
dec
insb
and
mov
add
jmp
push
lea
mov
test
fucom
push
xchg
sbbl
mov
loope
mov
mov
jno
fwait
cli
mov
out
mov
ret
mov
pop
lds
mov
inc
xchg
jg
lahf
cmc
dec
out
adc
sbb
icebp
or
jb
mov
jbe
push
pushf
es
xchg
xchg
sbb
mov
xchg
imul
movsb
sar
adc
or
ss
xor
dec
pop
repz
sub
fldl
sub
aas
mov
add
adc
xchg
push
jb
mov
adc
dec
mov
loop
dec
shr
scas
aaa
cmp
adc
push
sar
pop
push
pop
and
push
adcl
inc
xchg
jle
push
scas
jae
popf
ds
push
loope
rorb
in
inc
add
adc
mov
in
addr16
jne
lea
out
xor
arpl
movl
adcb
xor
loop
pop
imul
ds
pop
js
and
dec
loop
std
or
and
aam
ret
cmp
push
cmpsb
sub
cwtl
and
outsb
jb
pop
inc
pushf
subl
js
push
and
leave
add
movzbl
call
xchg
outsl
lock
mov
inc
push
cs
jge
inc
jge
lea
lods
jle
push
imul
sti
filds
cmp
insb
add
pop
xchg
stos
das
xor
xor
xlat
jno
mov
or
fisubrl
xchg
gs
xor
pop
add
aaa
cli
or
lcall
xchg
subl
pop
lea
shrl
pop
mov
pop
icebp
mov
or
pop
sar
lods
mov
es
adc
rolb
or
dec
sahf
sub
mov
inc
sbb
pop
xor
inc
or
jp
inc
sbb
incl
ficoml
in
xchg
mov
leave
or
test
divb
in
lss
sub
sbb
sbb
and
fsubs
ja
push
and
inc
mov
stos
sbb
and
rcr
fistpll
push
pop
inc
pop
sahf
mov
ret
sub
out
pop
mov
lcall
xor
jne
mov
jg
iret
jge
icebp
xchg
mov
push
jo
or
in
jg
dec
adc
jnp
xchg
sbb
sub
lods
mov
imul
scas
jmp
sbb
push
pop
adc
jae
xchg
ret
int3
xor
imul
sbb
test
inc
outsb
imul
lds
cmp
cmpsb
xchg
pop
fwait
cwtl
pop
imul
adc
rcl
sbb
mov
fldl
sbb
jecxz
mull
lcall
out
dec
mov
fwait
addb
xchg
out
test
sub
nop
sbb
lahf
addb
movsb
inc
pop
cmpsl
xchg
outsl
and
cmpsb
shr
shl
add
outsl
mov
push
and
push
test
pop
lcall
sbbl
push
testl
in
fwait
cmp
cmp
enter
xor
inc
xchg
xchg
rcrl
cs
push
loope
fucom
stos
sbb
pop
pop
xorl
jg
add
push
mov
aad
icebp
lock
push
adc
in
insl
jnp
mov
add
add
loopne,pn
push
insb
push
push
mov
xor
and
mov
mov
adc
pop
fs
cltd
js
lods
cs
or
shlb
or
jp
lock
cmp
jl
pop
out
xchg
pop
sbb
and
jbe
repnz
or
bound
test
push
insb
sti
incl
mov
lock
shl
fsubrs
outsl
pop
jge
shlb
lds
out
cmp
ret
maskmovq
cmp
lods
pop
jp
jae
add
mov
loopne
das
imul
ds
in
push
into
push
jle
iret
pop
and
push
insb
andl
lcall
and
adc
xor
loope
cmc
and
mov
add
jne
ds
int
jo
push
repnz
or
popa
lret
jb
inc
arpl
mov
cld
test
repnz
pushf
std
cli
cltd
out
sub
adc
mov
scas
fnstcw
lahf
mov
lcall
or
icebp
fcompl
dec
lock
push
xchg
sub
xor
jle
xchg
push
pop
ficompl
popa
movsl
into
stos
jg
xlat
jae
icebp
test
nop
stos
stos
int
dec
cmp
int3
inc
loopne
inc
mov
xlat
mov
and
je
fisttps
lods
loope
imul
in
std
mov
mov
mov
ret
jp
xchg
push
js
mov
pop
ds
int
and
adc
fnstenv
daa
mov
push
in
and
inc
incb
cmp
xchg
mov
pusha
frstor
or
mov
push
daa
or
ss
or
cmpsl
mov
out
imul
addr16
out
mov
rol
bound
add
jnp
loop
cmp
push
cmp
push
adc
lret
mov
in
in
add
inc
mov
xor
adc
leave
vpsubsw
arpl
jne
sub
mov
out
push
jae
mov
loopne
fnsave
jo
push
dec
add
mov
fistpll
stc
pop
subb
lods
mov
pop
xor
xchg
mov
push
cmp
repnz
es
jb
cltd
or
jecxz
mov
popf
cs
hlt
push
or
xchg
std
dec
out
or
adc
fistl
push
push
nop
loop
mov
jo
pusha
subl
stos
std
pusha
ret
and
sub
in
test
add
fsub
popf
fnstenv
and
pop
jbe
mov
cmpsl
jl
lock
and
pop
pop
mov
xor
stc
jp
adc
add
inc
movsb
outsb
mov
mov
ljmp
fdivl
mov
aas
icebp
aam
mov
mov
cwtl
outsb
add
sbb
cmp
pop
add
subb
jecxz
add
xor
jmp
add
repz
jnp
inc
sbb
and
push
cmp
dec
in
fsub
sti
test
call
adc
lret
and
push
dec
popf
lods
lret
xchg
enter
jecxz
in
cmpsb
or
sub
cmp
mov
dec
push
and
xor
sbb
lea
inc
stos
rcrl
negl
call
nopl
out
sahf
add
and
ret
lahf
adc
popa
xor
insb
jns
jecxz
sbb
push
cmp
nop
mov
pop
xchg
daa
pop
lcall
xor
push
shll
jno
jbe
clc
cmpsl
jl
or
push
insl
dec
jne
leave
pop
push
adc
sub
xchg
sbb
mov
inc
adc
cld
inc
dec
test
cmp
stc
out
and
out
lret
test
sub
adc
enter
fcom
loopne
cmpsl
jmp
xor
fisubrl
pop
stos
jo
ffreep
test
rcrb
fs
push
stos
xor
mov
lock
outsl
lds
xchg
and
xchg
inc
push
mov
sub
pop
jecxz
mov
jle
dec
sub
cs
int
jbe
cmpl
daa
dec
xchg
xlat
mov
adc
dec
xchg
sub
adc
xorb
mov
mov
pop
movsl
dec
mov
xor
lahf
sbb
xchg
leave
fidivrl
dec
scas
cld
aas
sub
cmp
test
mov
int3
movsl
add
inc
mov
xchg
push
popl
jmp
mov
and
fsubrl
mov
lods
pushf
mov
insb
cmpsb
jp
and
pop
lods
and
test
ret
jmp
dec
fnstenv
shrb
xlat
out
cmp
arpl
arpl
jecxz
sbb
clc
es
mov
out
stc
cs
xchg
int3
pop
fmulp
adc
outsb
add
scas
imul
ret
pop
fsubl
mov
test
mov
pop
out
loop
mov
into
cmpl
and
mov
xor
gs
add
push
xor
mov
cli
orl
ss
cmp
lods
stc
sub
gs
mov
sbb
int3
sbb
int3
and
cld
inc
add
sub
dec
cmp
lods
xor
add
fadds
add
inc
scas
jle
dec
xchg
lea
jle
lods
stos
insl
push
adc
inc
lahf
outsl
cmpsl
jge
aas
jae
ja
test
out
mov
adc
stos
mov
fwait
push
jb
xor
test
hlt
or
out
push
mov
xor
lods
ljmp
mov
push
arpl
dec
sar
lahf
add
inc
mov
dec
sbb
cmpl
adc
test
push
pop
cmpsb
mov
mov
sbb
adc
std
xor
stos
loopne
inc
sarl
imul
fxch
mov
int
add
lret
xor
push
outsb
mov
lds
inc
aad
stos
mov
shrb
call
ljmp
pusha
and
mov
xchg
jmp
ror
or
stos
mov
loopne
push
movsb
xchg
addr16
xorb
add
add
int3
sbb
repnz
dec
jo
cmp
cmp
fdivrl
ljmp
mov
movsb
iret
mov
add
mov
mov
pop
inc
adc
and
fld1
sub
inc
or
ret
imul
pop
insb
xchg
add
push
rcrl
fstpl
or
cmp
sbb
pop
hlt
ret
pushl
and
sub
fwait
pop
sbb
or
or
cmp
inc
mov
lock
mov
scas
movsb
mov
icebp
pop
popa
imul
or
lods
inc
jne
add
js
clc
fdivrs
jle
or
pop
add
clc
push
andl
mov
mov
and
push
xchg
arpl
subl
fs
ja
xor
fidivrl
and
mov
cmp
pushf
add
rorl
sbb
mov
ljmp
int3
or
int
mov
mov
out
push
mov
into
pop
sub
jae
or
outsb
icebp
xchg
dec
jge
xor
inc
imul
sbb
jp
lret
mov
and
dec
xlat
sar
stc
sar
xlat
test
push
push
fisubs
dec
sub
mov
imul
sbb
jp
adc
call
lods
aas
jo
movsb
xchg
pusha
jno
pop
daa
rclb
das
pop
push
and
sahf
sbb
stos
lds
insl
xor
lret
movsl
add
lds
jl
mull
mov
pop
jl
inc
fsubp
hlt
movsb
lret
lock
dec
and
pop
inc
outsb
xchg
lahf
dec
test
push
shl
or
sbb
add
jae
in
aam
or
dec
in
jbe
mov
xchg
lods
pop
lcall
int3
insb
movsb
jnp
loope
push
data16
and
mov
mov
scas
fisttpl
dec
sub
cmpsb
and
mov
movsl
fildll
sahf
adc
gs
lods
jecxz
sbb
inc
arpl
test
ja
push
xor
mov
test
out
add
test
ret
jg
or
cwtl
fimull
andb
sub
loop
inc
fldt
and
push
or
push
subl
adc
xorb
in
sub
add
punpcklwd
shrb
enter
in
mov
jbe
pop
cltd
xor
int
xchg
jle
inc
cmp
ss
clc
popw
dec
mull
adc
in
out
jge
or
sub
jle
sbb
push
mov
add
out
pop
jne
cli
fadds
mov
lahf
dec
add
pop
mov
push
ret
mov
xchg
and
stc
mov
stos
in
es
test
cmp
repnz
push
jp
aaa
push
andb
xlat
imul
jno
dec
jg
cmpsb
or
sbb
imul
rcll
stos
js
sub
dec
fwait
cld
ret
pusha
lods
stos
dec
fldenv
std
lods
dec
push
push
pop
jne
jmp
in
cwtl
les
mov
jmp
push
cmp
xchg
movsb
jmp
stc
and
xchg
push
jp
cmp
pop
sbb
mov
popf
adc
and
insb
inc
gs
dec
setnp
stos
insb
std
sbbl
int
fwait
movsb
test
push
jle
cltd
std
sbb
pop
or
cli
js
flds
sbb
mov
inc
xor
xor
popf
jne
xlat
add
pusha
aaa
scas
xor
jmp
aaa
or
adc
decl
or
mov
push
push
jecxz
mov
jne
lock
mov
in
int3
add
mov
loop,pt
xlat
mov
cltd
xchg
inc
sbb
clc
fbstp
stc
sti
orb
add
cmp
push
mov
js
aaa
lock
xor
mov
shll
cmp
push
xchg
or
xchg
in
dec
outsb
and
inc
mov
cmc
push
pop
xor
sarl
adc
and
jnp
sahf
push
cs
mov
cld
popf
xchg
loopne
arpl
test
or
pop
lret
arpl
mov
mov
dec
aaa
or
add
push
xor
jle
sbb
push
aaa
sub
mov
movsb
fnstcw
cmp
push
lahf
or
push
sbb
mov
pusha
cmp
test
je
or
mov
es
sub
xor
inc
aad
push
sti
lea
sbb
fiaddl
mov
pop
daa
mov
popf
add
int
inc
jmp
fildl
out
enter
outsb
pop
fisubl
jns
mov
jb
sub
in
add
sbb
adc
mull
push
ljmp
jle
mov
repz
scas
cmpsb
push
push
cltd
add
pop
mov
pop
add
jmp
es
sub
sub
fcmovbe
test
dec
in
arpl
nop
cmp
shrb
fbld
jnp
lret
push
nop
pop
mov
jne
jae
or
mov
or
pop
xchg
dec
cmp
fincstp
sbb
push
addr16
ss
mov
push
or
jb
cmp
pop
mov
adcb
xchg
or
xor
cmc
pusha
xchg
jno
loop
jae
add
mov
es
push
repnz
mov
mov
or
enter
pop
mov
pop
sbb
inc
dec
in
lods
jg
popf
int3
lock
dec
shlb
jb
xchg
pop
sti
mov
clc
rcrb
cmc
xchg
call
push
fs
negb
mov
outsb
stc
jns
movsb
dec
xchg
in
subl
xor
and
shr
mov
push
imul
mov
xchg
and
divb
aas
clc
cs
into
push
sbb
pop
pop
xchg
outsl
mov
hlt
sti
sub
movsb
lock
inc
sub
sub
imulb
out
xchg
ret
jnp
inc
inc
xchg
imul
xchg
shlb
shl
add
cmp
fxch
addb
cwtl
mov
out
jp
std
and
fwait
dec
ss
pop
nop
std
popf
pusha
jmp
adc
stos
scas
xchg
pop
and
sbb
sbb
repnz
fsubs
add
test
mov
add
cld
mov
add
pop
and
xor
sti
gs
sarl
imul
pop
pop
subl
dec
jae
and
sub
out
push
inc
scas
daa
jecxz
jge
shl
idivb
jo
lea
aam
test
rcr
xorb
repnz
lods
push
fdivl
adc
cli
mov
xchg
outsb
popa
cmp
jl
pop
sbb
inc
outsb
and
jp
js
xchg
push
out
sub
lods
xchg
in
div
xchg
cli
jmp
push
cmp
lcall
sub
test
fsubrs
cmp
sbb
jl
inc
addr16
push
gs
mov
lods
iret
xchg
std
mov
loope
xchg
cmp
data16
sub
addr16
add
test
shrl
test
dec
pop
neg
test
dec
jbe
sub
jns
pushf
jg
rcrl
and
pop
dec
mov
mov
ja
fsts
stc
push
inc
pop
adc
xchg
xchg
xlat
fdivrp
inc
std
pusha
or
ret
or
fnsave
in
cmp
mov
mov
xchg
xorb
inc
mov
nop
lahf
cmp
je
ret
insb
out
in
jae
push
sub
fmull
cmp
fwait
or
xor
dec
rolb
and
or
push
mov
pop
add
adc
xchg
cmp
ljmp
and
icebp
mov
mov
andb
fucomi
stc
cmp
ja
sub
inc
dec
lret
pushl
mov
repz
mov
cmp
cmp
mov
dec
sti
or
jmp
dec
inc
divl
adc
sub
js
shrb
mov
dec
mov
dec
in
xchg
fadds
hlt
add
push
sub
rorb
sub
fcmove
das
fisubl
sub
in
add
testl
test
sub
lcall
clc
xor
cmp
mov
xor
and
inc
mov
nop
xor
cmp
xor
cmp
sub
in
push
cmp
mov
mov
cld
dec
sub
out
inc
dec
into
adc
dec
mov
pop
sub
fs
mov
push
pop
addl
outsb
loop
mov
sbb
loop
clc
dec
out
cmc
test
hlt
push
mov
int
sar
in
jnp
rcrb
sub
cltd
jmp
pushf
jmp
ret
pop
jne
fwait
jbe
imul
fadds
fmuls
movsl
movsl
out
dec
mov
movsl
push
inc
shll
xlat
cmp
push
push
mov
leave
stos
in
push
mov
pop
fwait
sbb
lods
cwtl
mov
leave
adc
or
and
mov
imul
dec
inc
ja
js
cld
xchg
cmp
aaa
ja
lods
in
jnp
and
mov
inc
scas
push
outsb
jns
sti
sub
fsub
loope
movsl
arpl
jp
cmpsb
xor
sarb
jg
sub
imul
nop
pop
sti
dec
cmpsl
mov
fdivl
nop
test
arpl
push
mov
popa
pop
loopne
pop
xchg
rorb
cmpsb
mov
stc
out
in
and
dec
ljmp
xchg
loopne
dec
in
inc
or
in
out
or
push
fisubs
pop
pop
xor
inc
out
dec
in
cli
stc
jge
daa
repnz
mov
lds
jne
shlb
stc
inc
test
xchg
cmp
or
jnp
adcb
jo
xor
lret
int3
daa
nop
and
adc
imul
sbb
imul
mov
push
out
in
xor
sub
push
mov
lret
sub
inc
push
xchg
pop
ds
mov
pop
fdivl
push
cmpsb
hlt
cmp
cld
adc
popa
and
in
pop
mov
xchg
mov
xor
nop
and
jp
fnstenv
int3
fisubrs
stos
and
push
pop
bound
out
insb
lahf
aad
push
mov
pop
test
lods
xor
push
dec
and
mov
xor
rorl
xor
mov
arpl
mov
cmp
jae
addr16
inc
stos
iret
rolb
mov
lods
pop
and
dec
fs
dec
xor
dec
lds
out
mov
adc
inc
lcall
cmpb
sbb
imull
mov
pop
cmp
pop
cmpsb
sub
jns
cmpb
mov
into
lret
nop
call
nop
daa
call
cmp
xchg
inc
outsl
cmp
ret
push
xlat
jg
jnp
cmp
inc
xchg
fsubs
push
push
or
dec
jecxz
or
pop
mov
push
aaa
je
jo
mov
push
sti
add
and
mov
adc
sarb
cmp
test
sub
push
je
iret
sub
ss
mov
and
in
call
jecxz
jl
lds
testb
cmpsb
push
xor
add
inc
push
xchg
ret
xor
mov
sbb
imulb
ret
mov
xor
or
cmpsb
sahf
dec
cmpsb
or
out
mov
fnstenv
xchg
jl
and
ss
inc
cli
in
out
sti
dec
inc
in
mov
loop
or
std
dec
xor
inc
pop
stos
scas
test
cmp
sub
stc
cmpsl
ud2
fwait
push
shrl
clc
jle
rcl
or
cmp
lds
cmc
hlt
mov
sbb
lea
idiv
add
mov
or
mov
jmp
mov
addl
sar
and
call
sbb
dec
leave
mulb
pop
mov
lods
jno
xor
xorl
push
test
enter
sub
cmp
mov
add
xor
and
testl
out
sbbb
lret
sahf
jo
aad
hlt
or
push
nop
lock
mov
bound
inc
imul
jne
flds
shll
scas
and
add
mov
and
cmpsl
loopne
pop
lret
sub
rcll
enter
lahf
cmp
aas
test
hlt
test
mov
pop
pop
mov
xor
repnz
jmp
or
or
mov
test
push
cwtl
jl
loopne
mov
mov
std
mov
mov
mov
in
fdivr
cmp
cmp
lds
sub
cmp
push
dec
aas
stos
test
pop
sbb
xor
je
fidivl
test
add
ljmp
addl
sahf
ret
fstps
adc
mov
adc
pop
cltd
insb
leave
and
pop
icebp
dec
push
mov
xchg
cltd
xchg
aas
inc
fistpll
pop
test
outsb
inc
xchg
xor
mov
dec
jae
pop
in
dec
jl
jecxz
mov
and
lcall
jle
lods
decb
or
push
mov
push
insb
not
jge
dec
fwait
adc
and
sbb
adc
xchg
orl
and
push
xchg
adc
out
dec
sbbb
call
pop
shlb
test
addr16
clc
push
lock
leave
lcall
push
xor
pusha
or
jg
out
adc
stos
stc
cwtl
jbe
xor
pop
jge
and
inc
pop
and
addr16
mull
xlat
pushf
sar
jmp
or
jo
ljmp
pop
pop
mov
lods
loop
jg
cmc
js
test
push
loope
idivb
pop
jge
dec
adc
sbb
mov
cmp
cli
jecxz
mov
mov
addr16
into
loopne
pushf
dec
mov
test
fcmovu
ret
ss
aam
dec
setb
xchg
jbe
pusha
aaa
cmp
pop
out
jns
pop
adc
fisubrl
out
mov
bound
xchg
js
shrl
mov
repnz
sub
dec
cmpsl
scas
xor
xchg
xlat
or
loopne
aam
push
cmpsb
xchg
in
push
loop
cmp
cwtl
mov
and
jg
or
fcmovne
cmp
xchg
mov
popa
xchg
aaa
mov
cs
or
xchg
dec
sbb
push
adc
sub
pop
sub
mov
fsts
movsb
pushl
mov
loope
outsl
push
mov
xchg
or
lods
call
push
cmp
imul
cmp
lock
cmp
or
xchg
scas
push
cmc
dec
fcomps
jmp
sahf
dec
xor
or
dec
enter
push
push
les
jg
and
or
cs
mov
push
mov
mov
jnp
pushf
jecxz
mov
inc
xor
fstpl
dec
mov
sub
xlat
mov
decb
mov
push
jmp
push
mov
movb
cmp
scas
mov
out
fdivl
mov
pop
movsl
fisubrs
ret
hlt
mov
or
push
push
andb
adc
in
xchg
test
push
dec
push
insb
dec
pusha
fbstp
test
cmc
pushf
inc
divl
jg
push
sub
sub
pop
or
ljmp
lret
xchg
fsubs
ja
mov
sub
loop
cwtl
mov
movsb
or
xchg
outsb
in
cltd
push
flds
fs
popa
sbb
ret
sbb
js
scas
lods
lcall
out
mov
movsb
dec
out
js
or
cmp
aad
inc
mov
fs
clc
pop
dec
ja
je
cwtl
popa
repz
out
dec
cmp
sbb
mov
popa
mov
push
add
pop
dec
cmp
mov
ret
jns
push
nop
pop
lcall
inc
adc
push
cmp
pop
mov
sub
outsb
inc
cld
movsl
ja
jmp
cmp
out
jp
stc
imul
cmpsl
cmc
xorb
jnp
jne
pop
scas
dec
lcall
int3
xlat
cmp
iret
outsl
jne
adc
loopne
addb
incl
add
push
out
mov
cmp
cld
jae
out
lods
test
mov
xchg
lock
nop
pushf
test
sub
cmp
fldcw
mov
sbb
ja
inc
xchg
adc
in
or
into
fpatan
sbb
roll
push
movsb
sub
xor
jge
mov
mov
add
jnp
scas
mov
or
adc
mov
and
or
in
cmc
pop
sub
pop
lock
subl
stc
inc
jno
inc
lahf
aam
iret
add
ss
lret
mov
fnstsw
in
outsb
loop
xlat
dec
out
mov
out
test
mov
nop
frstor
and
or
lock
jmp
and
pushf
cmp
and
xchg
into
or
jp
mov
scas
adc
incl
sbb
fildll
jge
or
ljmp
push
mov
or
ret
or
fcmove
pop
mov
iret
nop
ljmp
lea
lods
fcomp
sub
arpl
dec
pop
mov
push
push
popa
push
js
cmc
lret
fadd
into
dec
loop
mov
div
mov
shrb
outsl
test
jmp
addr16
aas
ffree
mov
dec
and
aam
ljmp
int
fucom
ljmp
test
icebp
js
daa
data16
xlat
mov
push
enter
jnp
jnp
xchg
jb
fbstp
iret
mov
or
dec
sbb
xor
dec
mov
mov
xor
hlt
pop
and
push
call
cmpsb
dec
dec
sbb
testb
call
nop
sub
xor
clc
icebp
lock
aas
inc
mov
or
incb
sahf
loope
push
cmpsl
ljmp
and
inc
loope
arpl
fldcw
cld
inc
iret
fsubs
and
pop
sub
stos
xor
adcb
push
cs
repz
pop
push
ret
cmp
xor
adc
test
or
lock
ret
pop
pushf
dec
ljmp
bound
push
cmp
mov
pop
xor
popl
das
jg
fimuls
xchg
mov
inc
or
cwtl
pushf
jno
and
sub
hlt
cmp
in
clc
or
fisttpll
pusha
repz
mov
mov
ret
std
and
lea
sub
outsb
push
push
sub
imul
aaa
andb
lock
mov
sub
mov
sub
jecxz
out
lcall
add
mov
xor
jo
push
stc
mov
inc
rcpps
xlat
jo
inc
sbb
out
push
arpl
int3
in
push
and
and
test
leave
jo
dec
rorb
bound
rcll
mov
out
lahf
jge
pop
pushf
scas
adc
fcoms
push
jbe
icebp
lea
leave
fnstcw
lods
push
mov
dec
xchg
mov
xchg
push
sbb
mov
adcb
mov
cmp
or
and
dec
out
jns
or
mov
jmp
mov
in
dec
fnsave
mov
xor
aad
mov
jne
pop
mov
pop
mov
sbb
lods
loop
dec
add
movsb
xchg
scas
lcall
cmpl
adc
dec
orb
fiaddl
outsl
mov
dec
sbbb
mov
mov
or
mov
add
cmp
add
clc
adc
sti
scas
aas
adc
negb
ss
fadds
movsb
cmpsb
out
and
fistpl
xchg
push
push
cmpsb
dec
mov
dec
adc
rolb
lcall
jle
lcall
push
rcll
lea
xchg
daa
mov
cli
mov
jo
lods
shll
shl
mov
loopne
sbb
aad
repz
push
pop
fiaddl
sarl
mov
outsb
dec
push
jmp
inc
stos
mov
xchg
daa
cmp
aaa
add
gs
imul
mov
andb
mov
cwtl
mov
dec
sbb
jmp
out
ss
mov
aam
hlt
push
sbb
out
dec
shlb
push
or
inc
inc
sbb
sahf
jo
sahf
sbb
dec
and
gs
mov
enter
jecxz
decl
jns
cmpsb
inc
cltd
loope
movsb
loopne
mov
dec
out
movsb
icebp
std
je
mov
inc
pushf
sarb
call
pop
adc
sub
lcall
jmp
scas
pop
bound
xorl
adc
loopne
push
xchg
arpl
out
pop
or
lds
cmp
fsubl
jnp
fnstcw
loope
test
sub
dec
mov
mov
mov
inc
stc
fwait
test
xchg
dec
outsl
jp
mov
jae
rclb
pop
mov
xchg
and
inc
cmpsl
push
cwtl
pop
and
leave
or
lret
stos
negl
divb
stc
in
in
lret
in
test
inc
jge
add
test
clc
call
or
xchg
and
push
pop
mov
stc
pop
jg
mov
xchg
cmp
lcall
xor
xchg
sbb
cmp
xchg
or
scas
pushf
jo
push
js
fldenv
mov
roll
cmp
lret
mov
sub
xor
shll
jo
sahf
mov
inc
pop
pop
add
movsl
add
sub
jl
push
mov
movsl
in
mov
inc
xchg
lea
jge
inc
jg
sbb
mov
jmp
into
mov
icebp
sbb
stos
lods
insb
xchg
dec
pop
xor
gs
mov
es
mov
push
scas
mov
inc
add
ds
stc
inc
sbb
jns
ret
adc
lcall
xor
mov
mov
les
xor
popa
push
mov
push
loopne
mov
loop
fisttpl
lret
test
pusha
dec
fs
outsb
es
lret
outsl
cmp
adc
js
sahf
loopne
testb
push
push
test
sbb
cltd
orb
mov
mov
sub
aad
fadds
xchg
cmp
xor
pop
call
enter
shlb
pavgw
push
outsb
scas
pop
xor
lods
lahf
testl
mov
add
cmp
jge
movsl
icebp
push
cmp
ss
aas
lea
sub
xchg
xchg
sbb
push
and
pop
mov
popf
xchg
mov
stos
js
push
scas
bnd
into
loope
fnstsw
lret
mov
mov
xchg
dec
push
in
xlat
xchg
pop
and
test
out
es
sahf
pop
stc
jns
ss
pop
mov
pop
fwait
and
xchg
jno
cmpsl
mov
xlat
inc
push
inc
pop
push
inc
push
inc
or
inc
jae
insb
lods
xor
gs
rcrb
ljmp
ja
mov
sub
push
leave
shl
or
pop
loopne
outsl
pop
rorl
out
dec
adc
fisubrs
mov
xchg
xchg
cmp
movsl
mov
rorl
sahf
cld
movsb
jns
add
cmp
and
cmpsb
xchg
jle
xlat
mov
mov
mov
sarl
mov
xchg
insb
inc
dec
cmp
cmp
pop
test
jl
add
mov
bound
adc
add
mov
inc
sbb
adc
lea
xor
ror
mov
std
loope
out
cmp
add
xlat
push
xchg
jl
popf
shlb
sub
sub
aad
mov
dec
fwait
xor
ljmp
jae
and
dec
pop
movsb
mov
push
icebp
inc
les
test
jae
xchg
cmc
jp
fnstenv
in
frstor
pop
stos
pop
jns
sub
mov
and
push
lahf
movsb
add
inc
sub
adc
insl
push
mov
in
mov
mov
mov
cmc
aam
ret
jl
clc
lods
sar
cli
dec
xchg
in
lret
shrb
loop
cmp
ret
add
jns
lods
incl
imul
les
xor
out
xor
jg
xchg
popl
push
icebp
cmp
and
addr16
insl
gs
add
mov
mov
cmp
adc
xor
adc
jle
loopne
scas
loope
xchg
sub
sub
jno
add
inc
mov
inc
bound
mov
or
mov
pop
xor
mov
xor
jo
dec
or
out
idivb
pusha
xchg
nop
lods
sarb
stc
push
fistl
and
rcrl
cmpb
push
mov
sbb
mov
jmp
mov
cld
or
cwtl
dec
inc
dec
shll
into
xchg
lahf
sub
dec
sub
rcr
pop
xchg
pusha
movsl
testl
adc
fcmovb
xchg
cmpsb
imul
std
cli
addb
mov
inc
and
movsl
cmp
mov
imul
lret
xchg
ficoml
adc
decl
inc
and
mov
scas
in
sub
mov
mov
and
or
jno
inc
cwtl
mov
shll
lods
and
ret
lahf
push
jae
xor
mov
push
sbb
add
ja
cmp
mov
cwtl
adc
dec
xchg
outsl
cmp
mov
add
cmpsl
rclb
dec
out
int3
inc
or
cltd
test
fs
loope
jg
or
ja
or
sub
lods
notl
sub
ss
mov
imul
icebp
xor
scas
sbb
dec
dec
push
daa
movq
jno
ja
fistpll
push
jne
adc
fistps
pop
and
std
jb
addb
push
pop
test
ffree
hlt
ret
mov
jns
outsb
or
bound
cltd
cmp
jne
scas
xchg
fwait
add
mov
data16
push
cltd
mov
clc
movsb
ljmp
insb
push
mov
int
shlb
adc
mul
sub
sarl
lds
adc
lret
push
lods
push
mov
jns
add
cmpsl
int
pop
jmp
stos
lahf
ljmp
mov
xor
aam
rcr
and
sbb
hlt
test
and
inc
mov
xor
stos
jo
dec
xchg
ljmp
adc
xchg
adc
sti
in
stos
fadds
je
pop
xchg
enter
lret
inc
daa
fwait
lret
xchg
adcb
adc
xchg
adcl
loop
inc
sahf
add
push
insb
dec
mov
out
lahf
jg
je
sbb
lea
arpl
jae
lahf
insb
jo,pt
mov
inc
fcomip
and
fmuls
sub
aad
fwait
pop
inc
push
out
lea
push
aam
daa
ljmp
mov
stc
ret
hlt
fcmovne
xor
test
repnz
shlb
repnz
push
gs
cmp
adc
jecxz
cli
sub
mov
nop
lret
fldl
lcall
rcrl
add
xor
ljmp
or
pop
xchg
xchg
in
cmp
fucomp
aad
lds
pop
push
cmp
jge
push
or
mov
xchg
cmp
pop
scas
pmaxub
iret
ret
xchg
mov
xlat
sbb
ret
dec
add
pop
movsb
and
in
inc
mov
sbb
movsl
jo
rclb
or
cmpsb
add
or
xor
outsb
adc
imul
dec
out
jg
lds
cmc
or
cmp
sub
mov
push
or
jne
push
dec
add
in
cmpb
push
gs
or
imul
enter
pop
icebp
or
lea
out
inc
movsb
add
lods
adc
push
setle
cmp
repnz
clc
imul
fstp
add
shll
fiaddl
xchg
jae
addl
jg
jecxz
fldt
arpl
fbstp
mov
add
jmp
je
adc
bound
lret
mov
jb
xlat
push
jl
std
roll
sub
aas
xchg
xchg
out
fwait
mov
in
jno
cmpl
push
out
icebp
lods
frstor
dec
inc
sbb
jecxz
push
scas
dec
fdivs
mov
mov
lret
subb
inc
add
out
pop
dec
mov
adc
sar
push
cwtl
add
gs
imul
out
jbe
adc
lods
std
hlt
scas
xchg
addr16
rolb
cli
dec
and
pusha
ret
dec
mov
leave
aam
mov
outsb
pop
sub
cmp
inc
sbb
jnp
adc
cmpsb
lock
js
jno
xor
popa
or
or
mov
or
lods
mov
adc
inc
push
pop
icebp
jae
mov
stc
shll
add
push
or
aaa
dec
mov
xchg
pop
sbb
sub
insl
dec
popf
je
stos
dec
xchg
cmpsl
test
shr
call
mov
push
push
in
inc
inc
sub
or
cmp
les
mov
test
jbe
mov
sbb
mov
mov
mov
pop
sub
inc
imul
es
push
mov
pop
lret
fldt
dec
ja
leave
sbbl
pop
add
enter
outsb
es
sub
adc
cmpsb
pop
daa
out
ror
lds
rorb
sbb
stos
xor
push
cmpsb
mov
and
xchg
push
cmpsl
jge
in
adc
sub
movsl
sbb
icebp
fnstcw
cmc
mov
aam
insb
pop
mov
movsl
jb
sub
mov
adcl
pop
jp
sarb
sbb
pop
mov
rorb
jb
push
inc
jmp
sub
pop
mov
adc
in
mov
jnp
sbb
xchg
jns
xchg
mov
inc
outsl
inc
inc
or
add
addr16
push
test
out
jmp
cltd
lea
cmp
je
jecxz
lret
pop
divl
loopne
je
xorl
sbb
jns
int3
mov
and
je
mov
pop
mov
rcll
pop
fisttps
mov
out
int
out
xor
cltd
imul
scas
push
sub
cmp
mov
mov
dec
mov
sbb
jge
fcoms
in
inc
daa
push
insl
sub
rcrb
and
mov
mov
out
out
sub
pop
js
jb
mov
jle
test
rcll
std
push
mov
aam
pop
xchg
jmp
sbb
lcall
pusha
lahf
cli
out
addl
xor
andl
dec
xchg
and
adc
ja
fsubrs
jge
call
xor
sbb
jge
inc
push
push
in
fisubs
jo
sub
cli
int3
pusha
cmp
add
or
shrl
xchg
into
das
mov
adc
mov
aad
xchg
enter
fnstenv
ds
xchg
loop
ret
inc
pop
mov
and
mov
mov
js
loop
cmpsl
roll
enter
sbb
dec
aam
jmp
out
int
enter
xchg
test
and
js
out
iret
aad
dec
inc
pop
xchg
xor
or
inc
xor
sub
xchg
out
adc
push
mov
push
sub
ljmp
xor
inc
add
ja
and
sbb
adc
mov
and
jmp
inc
xlat
out
mov
xchg
cwtl
add
dec
lret
lcall
jg
jnp
jle
cld
sub
sbb
ds
push
hlt
fstp
neg
push
xor
sbb
or
shrb
mov
outsl
sub
cmpsb
jo
dec
testb
sbb
inc
jns
mov
in
stos
and
add
cmovge
jp
jmp
pushf
adc
aad
fisubs
mov
pop
or
str
test
sarl
pop
sub
push
mov
xchg
pusha
sbb
test
repnz
stos
add
mov
arpl
jg
cli
jns
or
push
rclb
loope
insl
pop
jl
cmp
cmc
mov
data16
aaa
mov
cmp
pushf
add
pusha
ret
bound
and
jbe
clc
outsl
dec
gs
lcall
mov
ja
aam
add
or
negb
mov
scas
ficoml
add
pop
lcall
shlb
jno
mov
dec
out
dec
shll
mov
adc
fisttps
lock
adc
xor
jne
push
je
cmpl
sbb
sub
adc
aaa
cwtl
in
imulb
cmc
or
or
js
pop
add
adc
or
push
mov
pop
pop
xchg
jmp
pop
jbe
sarl
mov
repnz
or
mov
jne
xchg
call
or
inc
inc
xchg
add
pop
stos
add
iret
movsl
shlb
xchg
fildll
xor
add
cmp
fcmovbe
loop
pop
xor
popf
jecxz
inc
les
ljmp
iret
push
pop
adc
xchg
sub
sub
pop
movsb
dec
jle
sbb
iret
jns
push
add
jle
lret
mov
pop
dec
jmp
mov
mov
stos
shrl
mov
dec
arpl
shrb
daa
fdivs
ret
call
in
mov
pop
or
mov
mov
jbe
repz
sbb
ja
inc
sahf
stc
mov
test
repz
cmp
or
mov
lock
sbb
xchg
sub
mov
pop
lahf
adc
adc
ss
xor
mov
jo
cmpsb
cbtw
pop
mov
inc
lcall
insl
fwait
mov
inc
shlb
jge
or
dec
aad
add
stos
push
ja
outsl
cs
sbb
leave
add
cmc
or
cmp
inc
jne
lcall
jle
dec
sbbl
in
push
add
out
sbb
fcomps
xor
mov
xchg
pop
cld
cmp
clc
xlat
ljmp
sbb
stos
jnp
push
in
adc
inc
fists
stc
negb
cs
pop
dec
mull
or
fidivrs
lods
or
fbld
fmull
inc
jno
and
mov
and
jecxz
leave
icebp
ret
dec
mov
test
mov
lods
ss
orb
je
add
inc
ja
mov
or
ror
out
inc
push
mov
jne
test
push
ja
loope
out
xchg
inc
push
enter
fidivs
jo
pop
lds
pop
les
jae
cwtl
push
mov
stos
jno
xor
stos
xor
xchg
out
pop
mov
test
in
sub
cmp
cmp
sub
in
pop
icebp
xchg
adc
int
data16
cmp
mov
repz
mov
add
sbb
in
sahf
int3
xchg
xor
jae
jnp
lret
push
or
push
hlt
fistl
negl
inc
dec
out
dec
orl
xlat
xor
rorb
push
push
inc
fcmovnu
int3
aaa
dec
push
and
and
fisubrs
jne
sarl
iret
cmp
adc
sar
push
movsb
fstl
test
jne
imul
xor
inc
in
ljmp
lret
jg
fimull
cli
mov
push
sarl
fwait
jns
xlat
mov
sbb
push
pop
sbb
mov
decb
push
jbe
xchg
out
js
ret
mov
add
ja
inc
sbb
inc
xor
sbb
movsb
push
xchg
pop
imul
mov
adc
mov
pop
ffree
in
mov
cli
inc
scas
push
jae
into
cwtl
test
fidivl
into
or
mov
mov
fbld
mulb
ds
sub
ret
aam
jge
inc
adc
inc
and
xchg
add
mov
divl
test
xchg
jbe
aas
lahf
pop
mov
pop
test
lods
push
mov
push
adc
jbe
sbb
das
shrl
dec
inc
xorl
mov
stc
flds
jbe
int3
inc
das
sub
gs
xor
sahf
aam
cmp
leave
jp
cmp
out
xor
jle
sub
push
mov
pop
mov
cmp
add
adc
ret
dec
rorl
out
cld
je
and
mov
push
mov
daa
outsb
lret
int3
lcall
pop
lret
aam
adc
jmp
cvtdq2ps
adc
jns
filds
pop
mov
jnp
insl
cli
or
push
jp
in
add
ljmp
mov
or
jmp
cli
lret
dec
scas
aaa
or
dec
push
push
xor
ret
xlat
shll
imul
cmpb
outsb
mov
inc
pop
xor
aas
push
sub
fsubrs
out
push
out
scas
lock
lcall
xchg
ret
push
sub
xchg
lock
stos
dec
cmpl
pop
sbb
adc
and
daa
rcr
or
inc
lret
mov
and
xchg
movsb
popa
int3
fadd
mov
rorb
and
out
shll
push
js
in
cmp
int3
loope,pt
xchg
xchg
call
into
jl,pt
aam
js
int
rclb
and
subb
mov
fmuls
add
clc
ret
mov
andb
rorl
clc
ret
mov
test
sahf
push
adc
xor
xchg
cmp
fwait
xchg
jns
jnp
mov
adc
sub
add
in
mov
loop
mov
shlb
aaa
into
loopne
lcall
mov
test
fidivs
ds
sbb
inc
inc
fcomps
stos
js
and
push
and
mov
xor
test
jb
push
pop
mov
in
jle
pusha
cld
mov
fcoml
sub
or
pop
adc
mov
das
nop
pop
outsl
outsb
fcmovb
movsb
inc
and
negl
loope
or
outsl
stc
stos
jb
mov
xchg
lahf
cmpsl
or
std
mov
cmp
dec
gs
push
sub
sbb
outsb
scas
sbb
shlb
cli
add
cwtl
and
out
inc
push
xor
out
push
repz
ljmp
lret
stc
push
arpl
mov
shrl
xchg
push
sbb
bound
mov
and
mov
mov
inc
mov
ret
mov
iret
shrl
inc
lcall
mov
iret
divb
and
sub
nop
repnz
icebp
lret
mov
repz
iret
sbb
leave
and
cmp
movsb
test
out
jl
cmp
and
xchg
and
push
test
mov
xor
cli
xor
jle
xlat
inc
ret
mov
or
mov
xor
cmp
inc
icebp
ljmp
jecxz
jns
jno
jbe
in
xor
mov
mov
xchg
iret
out
xchg
mov
dec
cmpsl
mov
into
adc
cmp
and
imul
enter
mov
aad
ss
mov
aas
sbbl
daa
sub
cli
or
notl
test
mov
or
in
inc
sti
in
fisubs
pop
dec
test
repnz
xor
repnz
jg
xor
cli
out
sbb
test
aas
xchg
pop
add
xlat
loop
je
popf
mov
sbbb
outsb
dec
repz
mov
cmp
nop
negl
jl
xchg
cmp
and
xchg
xorb
sbb
mov
pop
ljmp
add
sbb
in
pop
icebp
cli
jg
aam
popfw
in
xor
mov
fcompl
mov
pop
lods
lods
dec
cmp
xor
into
iret
shll
dec
es
sbb
jne
add
jne
and
icebp
pop
insl
loop
sbb
lcall
jo
adc
and
inc
add
insb
cmp
xor
dec
add
orl
mov
fs
jl
jl
xchg
sub
test
push
out
js
popa
mov
sbb
aaa
xlat
and
xor
rcll
mov
inc
mov
je
lcall
sbb
xor
jo
jmp
inc
fidivrl
mov
jg
int3
add
cmpsb
mov
sub
adc
loope
nop
inc
aad
inc
shr
sub
add
mov
xor
insl
inc
ja
dec
cmp
dec
out
sahf
xor
in
push
testb
mov
dec
aaa
inc
xor
xlat
xchg
in
xor
jle
push
in
aad
sti
test
cltd
sbb
add
test
faddl
push
fcmovbe
jno
adc
cmpsl
xlat
xlat
pop
xlat
aaa
mov
mov
jbe
dec
mov
mov
icebp
jecxz
xchg
int3
aas
lahf
add
mov
mov
and
hlt
das
test
lahf
mov
jbe
into
pop
fisttpl
or
jae
in
inc
or
mov
sahf
scas
les
xchg
adc
test
enter
aaa
inc
push
inc
out
pop
icebp
xchg
dec
sub
lods
pushf
iret
or
insb
jl
and
add
imul
push
mov
dec
lods
scas
lods
int
ja
mov
loope
sub
add
xor
and
mov
pop
push
xor
shrl
pop
sbbb
mov
fs
adc
dec
mov
xor
dec
mov
xlat
testl
cmp
test
fs
cmp
mov
cmp
pop
out
cli
adc
mov
loope
push
pusha
push
push
push
in
push
mov
testb
dec
mov
jp
jecxz
ds
push
add
ret
loope
fwait
shl
dec
loop
dec
add
loopne
jbe
jl
inc
mov
jmp
push
xor
mov
idivl
cld
bound
shrb
and
inc
xorb
lret
fdivl
pop
lods
mov
jecxz
cli
adc
insb
iret
xchg
fcomp
mov
push
jb
bound
jle
pop
flds
enter
lcall
sarl
movsl
int
add
dec
or
pop
bound
inc
in
cmc
xchg
push
insb
sbb
inc
sahf
mov
or
sub
jmp
jecxz
mov
or
mov
xor
xchg
iret
mov
jns
pop
xor
or
add
and
in
push
popl
mov
cs
xor
mov
call
leave
sbb
aad
sub
cs
jnp
add
test
xor
dec
notl
je
push
jmp
lret
imul
inc
jbe
sub
arpl
jae
xor
pop
scas
pop
sub
lret
add
jne
or
les
sub
pop
in
iret
cmp
stos
cli
insb
inc
jb
fcoml
sbb
dec
iret
cmp
cmp
scas
movsl
lret
bound
aas
add
or
mov
rcrb
xor
out
mov
jp
inc
lods
mov
xor
sub
mov
mov
clc
push
adc
pop
aam
mov
fwait
mov
mov
stc
sub
nop
xor
xor
push
and
nop
lret
cmp
cmp
nop
lahf
out
and
repnz
popf
stos
orb
xlat
stc
inc
xorb
in
jl
lods
gs
and
outsl
cmp
and
mov
dec
dec
push
pop
xor
xor
rclb
ljmp
jle
inc
dec
xor
push
and
or
cli
subl
les
mov
mov
xchg
mov
aam
repnz
imull
mov
xchg
clc
fwait
test
push
mov
mov
dec
sbb
aad
jbe
sbb
inc
int
pop
lock
xor
and
jb
pop
mov
lret
jo
pop
cmp
incl
test
jo
aas
or
push
sub
aam
loopne
xor
int
push
insl
cld
mov
in
add
cwtl
stc
xchg
stc
negb
in
and
mov
ljmp
loop
add
cmpsl
and
fisubs
xchg
das
xor
stc
cli
movsb
add
or
leave
push
mov
or
push
pop
out
pop
shrl
mov
pop
sbb
in
push
adc
jbe
inc
xlat
mov
inc
jmp
jnp
inc
test
sbb
push
cld
lcall
addr16
jecxz
ss
mov
pop
or
jo
sbb
cmp
adc
and
in
xlat
cmp
mov
jmp
mov
out
cmp
repnz
push
out
push
pop
jno
daa
icebp
mov
push
xor
in
xchg
cltd
les
add
push
ljmp
ljmp
addr16
jbe
mov
inc
ds
cmp
push
mov
mov
out
sub
stc
pop
dec
outsl
jle
xchg
movsb
ds
inc
dec
jg
movsl
mov
loopne
inc
mov
pusha
mov
sub
pop
adc
std
lret
sbb
orb
aas
sbb
movsb
jl
mov
insl
into
sahf
push
into
mov
lahf
push
mov
test
inc
aas
int
fisubs
out
movsb
and
mov
lock
lods
stc
aas
cltd
ror
inc
jecxz
push
fimull
xchg
mov
xchg
push
mov
add
sub
sarb
or
mov
cmp
into
mov
or
push
jnp
and
test
insl
daa
or
mov
fistpl
subl
movsb
loop
dec
or
popf
scas
push
movsl
mov
stc
aam
mulb
push
jecxz
rcll
jae
orl
push
xchg
jns
lods
ldmxcsr
xlat
push
inc
enter
cmpsb
jmp
mov
icebp
popa
js
and
jns
ja
pop
test
aas
jmp
aam
data16
shll
push
cld
movsl
or
repnz
or
or
addr16
dec
jbe
enter
out
pop
cmp
jb
adc
movsl
jae
cmp
push
shr
cld
mov
pushf
jnp
sbb
mov
lcall
ret
idivl
test
and
test
xchg
xchg
dec
mov
das
cmp
push
xor
fstp
jne
sub
push
jnp
cld
inc
pop
push
lds
cmc
add
add
mov
adc
push
xor
aaa
and
sbb
push
aaa
pushf
add
xor
pop
push
jp
jnp
imul
pop
ret
fcmovb
mov
sbb
cld
mov
pop
outsb
fiadds
xchg
mov
xchg
xor
jmp
leave
in
lret
ljmp
jae
jecxz
fidivs
in
xchg
je
mov
push
std
loope
inc
cmp
hlt
lods
mov
lods
adc
add
insb
adc
repz
lret
xchg
xchg
xchg
scas
insl
decl
mov
insb
push
stc
fdivr
pop
mov
sub
sbb
das
add
push
jbe
pop
push
jge
jmp
dec
sub
lahf
sub
mov
xchg
dec
cmp
pop
add
aam
mov
pop
adc
and
subb
int
fisttpl
add
push
outsl
cmp
das
aam
cmpl
aad
cmpsb
dec
hlt
fistl
mov
insl
xchg
cli
dec
mov
push
xchg
orl
pop
mov
and
outsb
jbe
or
mov
repnz
cltd
sbb
aam
sub
xchg
push
cs
mov
paddq
sbb
cmp
inc
cli
rcl
aaa
push
sbb
in
leave
dec
mov
mov
xlat
mov
fidivrs
mov
sbb
mov
test
dec
out
push
or
cmpb
xchg
mov
and
sub
add
cmp
pop
sbb
adc
sbb
lods
outsb
and
cld
push
inc
sub
cmp
test
mov
mov
je
push
iret
int3
xor
push
scas
xchg
jmp
mov
andl
push
arpl
hlt
or
pop
adc
xchg
and
xchg
and
jnp
push
subb
or
fcompl
sbb
scas
rcrl
js
xchg
jae
cmp
int
loopne
sbb
push
or
pop
orl
int3
sub
nop
inc
cmpsb
cs
pop
adc
das
add
stc
xchg
inc
inc
subb
adc
loop
or
into
cmc
scas
bound
mov
inc
push
jl
stc
lods
ds
bound
scas
sbb
push
mov
clc
or
jecxz
in
sbb
sub
sub
mov
repz
aaa
data16
cmp
xor
xlat
sub
or
neg
xor
movsl
push
lods
mov
jge
mov
adc
xchg
cmpsl
scas
and
fisttpl
sarb
jl
mov
ss
mov
in
inc
ja
fsubrs
pop
negb
push
out
pop
jl
adc
mov
jne
xchg
shrb
arpl
bound
int3
mov
in
aam
adcb
mov
loopne
fildl
push
idivb
mov
add
pop
iret
fldl
insl
icebp
sbb
xchg
push
imul
sbb
stc
jle
dec
mov
int
jmp
inc
ja
test
cmp
lret
mov
or
inc
fdivrs
dec
shll
mov
shll
mov
lret
gs
or
push
xchg
pop
int3
pop
test
ffreep
dec
and
test
xor
dec
insl
push
test
mov
clc
das
jle
mov
and
dec
rorl
repnz
mov
add
outsl
loope
xchg
mov
xchg
hlt
in
xchg
inc
push
cmpsl
jecxz
stc
push
aas
mov
fs
fistps
inc
xor
jns
aam
loop
or
mov
mov
dec
inc
out
mulb
sbb
xor
adc
jmp
xor
fwait
int3
sbb
ficoms
jle
jmp
jne
mov
mov
pop
fstps
xor
and
mov
xchg
push
movsb
ds
sbb
lcall
aaa
cmpsl
push
out
mov
mov
rcrl
ficoms
les
inc
aas
lret
sahf
and
js
push
xor
in
fsubs
pop
sbbb
lods
mov
push
pop
hlt
out
ja
movsl
js
sub
add
ss
mov
popf
mov
insb
ficomps
inc
xor
dec
sub
push
pushf
out
inc
xor
or
jmp
ljmp
jbe
adc
and
sahf
inc
mov
inc
mov
test
out
push
xchg
pop
add
fdiv
xchg
sahf
pop
data16
dec
dec
push
imul
gs
js
xchg
pushf
sub
mov
in
xor
sub
leave
sub
movb
test
addr16
cs
pop
cltd
cld
or
std
outsb
mov
pop
add
mov
adc
sbb
xlat
jnp
mov
mov
in
inc
mov
repnz
and
mov
sub
pop
or
cs
cltd
xorl
and
xlat
cmp
or
mov
jg
daa
icebp
adc
xor
mov
mov
sbbb
inc
and
pop
scas
fisubl
sbb
hlt
sbb
jbe
fisubrs
leave
push
iret
xchg
hlt
adc
inc
xorb
in
jl
or
xchg
sub
sub
leave
lret
jno
iret
lret
pop
in
cmp
lret
pop
aad
ficoms
lahf
push
add
pop
xor
mov
insb
pop
ja
cltd
insb
mov
lods
fisubs
mov
adc
js
cltd
mov
adc
xchg
mov
cmc
xor
push
and
xchg
ret
imul
mov
nop
jle
jp
mov
jp
stos
inc
xchg
inc
fldl
popa
jle
push
mov
mov
divl
xor
sbb
cwtl
dec
cwtl
arpl
fisttpll
mov
aad
out
inc
int
test
inc
repz
cmpsb
mov
adc
sti
popf
out
repz
push
out
mov
mov
out
jae
jle
and
rcr
jb
lock
push
inc
xor
outsb
lcall
cmp
adc
repz
out
xor
mov
sub
fneni(8087
push
pop
pop
mov
icebp
xchg
fstpl
push
pop
andl
pop
cmp
or
jmp
out
dec
ficomps
test
lret
jg
cmp
test
stos
sbb
repnz
mov
xor
sbbl
daa
lahf
rcr
mov
enter
sti
jbe
xor
out
insl
lcall
std
loop
imul
pop
push
dec
je
jl
cmp
gs
inc
scas
push
nop
addr16
arpl
pop
or
mov
sarl
pop
inc
push
mov
loop
fcoms
lcall
das
dec
mov
push
cli
into
mov
pop
mov
int
cltd
mov
dec
inc
sub
test
xchg
jb
xor
xor
jae
jp
jmp
lret
ret
xlat
inc
jmp
cmp
adc
loop
bound
loop
jb
cmpl
pusha
inc
ljmp
adc
int
jbe
fadds
or
adc
jmp
adc
push
or
out
cmp
movsb
test
sub
add
sbb
aas
das
push
cltd
pop
push
je
loope
push
lock
gs
xlat
inc
movsb
lds
pushf
es
ja
cmp
xchg
xor
pop
mov
data16
addb
pop
xor
xlat
jp
add
orb
inc
test
gs
mov
push
jp
arpl
std
sbb
aas
jecxz
pop
push
dec
push
push
mov
loopne
sub
mov
int3
out
ret
enter
push
inc
jae
cmp
push
lods
cmpsb
stos
aaa
adc
xor
test
mov
inc
mov
and
inc
jecxz
add
mov
fs
xor
shlb
pop
jbe
andl
mov
sub
and
jle
int3
in
iret
mov
cmpb
adc
cmp
cmpsl
or
in
addr16
mov
jns
pushf
notb
repz
daa
push
addl
jno
jmp
adc
loop
mov
push
pop
fsubrs
mov
inc
popa
dec
xchg
lcall
cmp
sbb
loop
and
and
movsl
dec
mov
xchg
cltd
fsubrs
xor
pop
popa
lcall
sbb
or
sahf
das
leave
push
scas
out
pusha
sub
lock
pusha
and
push
jp
enter
repz
push
popf
xor
mov
test
sahf
inc
jae
loopne
sub
shl
and
icebp
push
in
pop
scas
jnp
push
mov
or
loope
div
lret
repz
jns
in
enter
or
or
fwait
push
lock
fisubl
dec
pop
stos
in
stc
lahf
sub
dec
mov
outsb
fisubrl
imul
mov
lahf
lcall
cmp
dec
mov
mov
sub
arpl
xchg
pop
xlat
cli
jo
sbbl
clc
into
cmp
xor
testb
jne
stc
mov
add
insl
pop
out
clc
jge
out
push
xor
in
or
jle
jns
aam
sub
sub
notb
pop
sub
jns
xchg
mov
pop
or
jno
sub
mov
cmp
std
or
les
jl
and
inc
lcall
leave
test
xor
pop
test
cmp
xchg
push
push
push
loop
stos
je
cmp
cmpsb
push
dec
xlat
sahf
stos
pop
ja
mov
pop
push
sbb
pop
arpl
out
mov
inc
lahf
shlb
cmp
shlb
pop
cmp
pop
leave
adc
jge
int
mov
sbb
les
inc
jne
jmp
sbb
jnp
sub
orl
push
dec
jecxz
fsubrs
jae
mov
idivb
jmp
leave
lds
dec
es
jmp
cmpb
dec
insb
jg
nop
jge
inc
leave
jne
in
xchg
jg
xor
add
movsl
addl
loopne
jecxz
stc
jne
xor
mov
inc
inc
nop
mov
shr
inc
jg
sahf
inc
jb
loope
jae
mov
jnp
push
pop
mov
fsubl
fs
imul
xchg
mov
loop
dec
test
repz
int3
mov
int
sub
test
das
sub
and
xchg
test
pop
mov
push
push
ja
dec
lahf
mov
icebp
adc
xchg
int3
adc
daa
ret
cmpsb
mov
mov
lret
jae
out
daa
mov
mov
jg
mov
push
push
jbe
xor
shl
leave
cltd
lods
cmp
lea
aas
insb
adc
stc
xor
cmp
add
cmp
or
scas
cwtl
jge
or
xor
fnstenv
rclb
mov
mov
fldenv
dec
test
imul
in
nop
sahf
cmovg
call
iret
or
sub
mov
shl
mov
pop
enter
xchg
mov
pop
out
ss
mov
adc
dec
sub
inc
mov
jecxz
repnz
mov
lds
mov
sti
in
push
pushf
ss
stc
insb
mov
test
mov
add
out
pop
ljmp
sbb
enter
lds
mov
gs
je
mov
push
out
cmp
aad
fsubs
xlat
jecxz
les
mov
in
pop
push
outsl
mov
jge
lds
pushf
mov
ds
cmp
mov
pop
je
stos
mov
cld
rolb
fadd
lea
jmp
test
and
imul
jecxz
mov
insw
mov
push
ss
in
pop
jno
nop
sbb
pusha
inc
jecxz
mov
jne
inc
lret
xor
test
mov
movsb
iret
ret
xor
mov
xchg
add
sub
test
mov
lds
mov
pop
xchg
jmp
movsl
stos
xor
pop
xchg
shlb
or
sahf
subl
scas
sbb
pop
scas
push
orl
mov
sub
mov
fnsave
pop
in
mov
mov
jg
daa
mov
rclb
xchg
loop
xor
lods
mov
cli
and
into
sarb
sbb
push
shlb
mov
js
ret
xchg
xchg
dec
unpckhps
dec
cld
out
rclb
mov
jecxz
imul
pop
test
mov
stc
xchg
outsl
push
and
daa
movsl
cmpsl
or
sbb
mov
iret
jmp
push
mov
jl
inc
cmp
pop
xor
andb
push
pop
mov
mov
out
sub
jns
addb
shlb
inc
lret
idivb
lock
scas
fcompl
xchg
push
xorl
test
push
push
cmpsb
hlt
rcrb
pop
fmull
iret
pop
push
mov
pushf
inc
adcb
mov
mov
push
icebp
int
inc
push
and
push
inc
ljmp
loop
pop
adc
mov
sbb
hlt
ss
mov
out
mov
mov
dec
push
cli
jmp
cltd
gs
scas
cmpsb
cmp
sub
out
push
cmp
sbb
push
push
stc
das
mov
push
loope
mov
movsb
outsb
mov
xchg
sbb
cld
jmp
cld
xchg
jp
aad
or
cwtl
cltd
and
inc
repz
popf
test
pop
xor
cld
mov
rol
js
je
and
test
mov
mov
xor
and
sbb
inc
mov
dec
out
fstl
mov
lds
data16
dec
mov
lods
mov
adcl
icebp
adcl
jb
xor
jl
pop
icebp
xor
pop
and
jp
fdivs
cmp
push
popf
aam
fldt
shlb
stos
repz
outsb
dec
pushf
int
push
mov
stos
mov
sub
sub
cmp
xchg
imul
ja
jl
pop
sub
lret
iret
jne
inc
lods
stos
test
outsb
test
adc
testl
mov
lret
cmpb
dec
cmp
ss
dec
dec
inc
pop
rcr
adc
and
data16
sbb
call
fidivrl
and
sbb
jo
xor
int
sub
daa
pop
test
xchg
xchg
or
adc
add
jg
sbb
je
and
push
shrb
cld
xor
fs
jl
popa
xor
sub
sbb
and
cmp
fstps
outsb
mov
mov
mov
or
push
mov
add
sahf
call
test
mov
in
in
mov
sub
push
sar
and
outsb
adc
cmpsb
dec
clc
stos
fwait
adc
mov
fucomp
or
mov
cli
shr
out
pop
sbb
out
repnz
mov
into
lret
loopne
cltd
es
fs
cli
shrl
inc
pop
loop,pt
sbb
inc
loope
sbb
bound
adcl
sbb
fbld
and
xor
jb
lcall
xor
int
into
jl
cmc
pop
aad
and
inc
out
in
dec
adc
movsb
lcall
enter
data16
dec
push
test
jle
jae
ds
divl
gs
jns
es
pop
pop
test
push
add
fwait
cmp
xchg
add
insb
inc
cmc
cltd
lock
xchg
mov
and
jae
sti
adc
pop
jb
push
out
dec
dec
stc
mov
aad
adc
sbb
data16
les
sahf
enter
add
jmp
inc
adc
xor
mov
fsubrl
push
rorl
or
and
sub
pop
outsb
push
and
scas
cmp
fisttps
lcall
inc
shl
jns
int3
pushf
pop
xchg
sti
roll
cld
and
jecxz
sbb
and
mov
dec
sub
sub
cmc
cmpsb
or
or
scas
dec
outsb
fisttpl
fists
repz
push
rcll
add
xlat
dec
pop
and
sub
adc
scas
inc
cmpsb
mov
daa
fstps
cmc
xchg
add
or
data16
xchg
cwtl
adc
aas
fmull
xchg
cli
daa
inc
aas
xor
and
mov
pusha
lahf
shrb
add
mov
xchg
rcl
nop
inc
movsbl
popl
inc
push
pop
leave
add
push
lret
pop
iret
stos
jno
mov
push
loop
xchg
in
cmp
data16
pusha
dec
or
popa
call
int
xchg
sbb
int3
cmpsb
xor
les
mov
sub
xor
dec
and
rcrb
xchg
mov
das
mov
jb
lcall
insb
push
cmp
mov
cmp
addl
loope
inc
or
dec
inc
adc
push
in
lock
and
sbb
dec
add
xor
ljmp
aas
jecxz
flds
push
aad
mov
ss
mov
in
or
sub
sbb
lahf
dec
dec
icebp
int
dec
subl
push
mov
inc
xchg
inc
xchg
add
icebp
test
stos
pushf
rcl
ljmp
cmpsb
je
js
sub
rolb
popf
mov
mov
icebp
das
movsb
sbb
mov
aam
or
sub
add
shll
nop
pop
mov
push
mov
stos
xchg
mov
mov
jo
pop
xchg
lcall
and
mov
jns
subl
sub
daa
jmp
add
cmp
mov
daa
fld
roll
idivl
gs
xor
ss
xlat
loopne
pushf
jl
sub
cltd
addr16
sahf
popa
pop
inc
add
sar
cmp
adc
out
or
mov
add
std
cmp
and
inc
lds
sub
test
jno
jo
out
mov
adc
cmpsb
mov
mov
mov
stos
pop
dec
mov
ror
sti
adc
aam
fidivs
pop
jo
cli
and
mov
outsw
jnp
sahf
lret
sti
in
push
push
gs
push
mov
cld
adc
adc
in
test
out
into
lock
shrb
xor
insb
ret
jbe
pop
sti
loop
hlt
test
arpl
lea
sarb
popf
inc
inc
lds
xor
fisubrs
cmp
push
fs
fdivr
jns
cmp
mov
clc
scas
fcmovnb
pop
call
push
mov
pop
repnz
mov
jns
mov
test
pushf
call
sti
idivb
pop
mov
adc
push
adcl
imul
pop
icebp
icebp
ficompl
sub
aam
inc
cmpsl
push
ffree
and
mov
xchg
popa
sbb
cmp
xlat
scas
or
or
cmpsb
rorb
or
cli
or
push
mov
cmc
pop
std
jo
test
call
inc
cmp
mov
clc
sbb
dec
pop
pop
sti
mov
xchg
jmp
out
xor
popf
fs
ret
sarl
or
push
and
aas
sub
push
push
arpl
xor
push
xchg
add
add
sub
ficompl
dec
and
gs
lret
add
pop
js
daa
mov
lock
mov
mov
jnp
adc
das
mov
xor
push
mov
dec
cld
mov
or
jnp
imul
xor
outsb
dec
fnsave
and
je
je
dec
das
jecxz
sbb
ds
notb
cmp
xor
sbb
cmp
loopne
jle
jmp
lds
jmpw
movsb
jne
push
cmpsl
notb
js
pop
jg
sub
std
xchg
mov
xchg
shll
addr16
mov
jl
scas
pop
pop
xchg
dec
and
adc
std
sbb
fidivrs
fnsave
icebp
and
jl
adc
xchg
into
ret
nop
hlt
jecxz
out
stos
xor
insl
sub
test
dec
arpl
push
xchg
fdivl
ret
lods
jnp
lods
mov
das
movb
add
cmpsb
add
mov
xor
push
mov
push
push
cmpsb
push
dec
aas
ss
xchg
push
mov
xorl
jge
xchg
sbb
push
xorl
inc
jo
push
je
or
mulb
and
lcall
int3
pop
aam
xchg
mov
imul
jle,pn
js
xchg
push
sbb
adc
mov
jmp
add
cmp
neg
inc
sarl
xor
jl
sahf
push
xor
dec
lahf
push
adc
cmp
outsl
mov
outsl
jmp
leave
insl
dec
sti
lods
mov
cmp
mov
xorb
mov
inc
je
repnz
adcl
shl
sbb
mov
cwtl
sti
das
arpl
inc
scas
ret
cwtl
cmp
sub
mov
cmp
cmpsl
sbb
push
dec
fwait
jg
inc
iret
mov
dec
outsb
lea
cli
stc
js
dec
aas
pop
pop
iret
rclb
mov
xorb
mov
xchg
xchg
test
and
adc
cmp
repnz
or
lret
cwtl
push
add
nop
dec
ror
ja
in
je
jne
rorb
push
push
sbb
orb
movsl
or
mov
fcomps
pop
mov
ficoms
hlt
push
test
test
std
test
clc
jle
out
inc
dec
icebp
decl
iret
sub
push
mov
jp
pop
mov
lods
sbb
inc
fld
aas
ljmp
inc
adc
dec
fistl
std
jle
clc
stc
mov
jecxz
mov
and
arpl
and
aad
movsl
jl
data16
lea
jmp
lret
sub
and
jl
ret
cltd
sub
data16
nop
inc
in
jbe
sub
les
xor
pop
sar
jbe
insb
loope
mov
jecxz
dec
sbb
jmp
jecxz
mov
scas
jmp
inc
lods
lock
rorb
inc
or
sub
and
aad
and
lods
jg
sbb
xchg
js
adc
cmp
ret
and
add
push
das
xchg
das
imul
aaa
push
jns
pop
jle
adc
clc
add
mov
cmp
dec
imul
and
xor
out
ja
dec
fldl
lea
xchg
es
fsubrl
inc
push
sub
or
or
cwtl
mov
mov
test
sbb
push
repnz
cmpb
in
and
addr16
jne
pop
lret
pop
fisubrl
cmp
jno
pop
mov
sbb
lea
jmp
mov
leave
fsubrl
outsb
pop
insl
pusha
lods
sbb
subb
mov
movsb
fucom
aaa
stos
mov
or
fldt
xchg
mov
das
cmp
jbe
dec
xor
gs
aam
pop
mov
mov
dec
icebp
cmp
std
xchg
adc
mov
dec
sahf
or
inc
sbb
mov
pop
fsubl
mov
pushl
sub
aad
imull
cmp
icebp
fldt
push
cmp
sub
xchg
and
xor
outsb
iret
iret
sub
adc
jmp
adc
loop
adc
jb
sub
pop
xor
pop
xchg
pop
xlat
nop
mov
sub
inc
lds
and
xor
enter
rcl
lods
mov
pop
mov
in
lods
cmc
fisubrs
out
inc
xchg
rol
mov
sbb
nop
in
loop
jg
scas
stos
test
ds
sub
gs
out
scas
outsb
out
jecxz
cmc
and
mov
stc
lods
add
add
add
cld
lcall
xchg
inc
mov
or
cld
jl
sbb
sbb
or
inc
push
mov
scas
xor
lret
mov
mov
imull
jp
sbb
nop
jmp
sbbl
or
call
sub
cmpsl
sub
mov
sbbl
xor
jge
cmp
jmp
fdivp
insb
ljmp
mov
sub
cmp
scas
arpl
filds
bound
jns
addl
push
jg
lcall
add
xchg
mov
xchg
fdivrp
mov
cmp
adc
cltd
mov
mov
jp
out
push
sbb
ljmp
jno
jnp
adc
cmp
stos
mov
sbb
sbb
mov
out
sub
mov
nop
sbb
and
mov
movsb
xchg
add
push
lcall
cmp
mov
ja
pop
mov
add
push
xchg
push
int3
arpl
call
dec
mov
mov
or
nop
cld
js
in
pop
cld
cmp
and
add
push
sahf
or
cmp
aad
popw
cmc
mov
lahf
stos
fisttpll
lods
lret
pop
jb
pop
xchg
push
xorl
add
movsl
inc
push
mov
outsb
push
xor
lock
fs
test
repz
mov
jle
adc
rorb
je
and
ret
sub
mov
scas
arpl
rorl
pop
addr16
or
mov
fisttps
dec
pop
das
jecxz
mov
xchg
push
sub
imul
aad
or
rorl
mov
rorl
int3
cmp
lea
mov
cmp
sbb
jmp
or
sbb
ljmp
cmp
into
jnp
xor
cmp
jg
inc
fmull
insl
push
dec
je
jg
sub
iret
repnz
cwtl
jge
faddl
rcl
push
dec
mov
sahf
fistpl
icebp
es
stos
outsl
dec
cmp
repz
mov
pop
daa
lods
cmp
mov
xchg
jne
frstor
pop
add
mov
dec
mov
xchg
mov
ret
add
mov
ret
aam
loopne
xchg
cmc
or
sbb
jl
adc
inc
adcl
pop
and
cmp
jl
das
push
pop
inc
and
out
mov
call
ds
pop
xor
ret
xorb
popf
clc
sbb
mov
popf
les
fistpll
sub
or
jmp
pop
xchg
aam
mov
out
dec
into
dec
or
sbb
sbbl
and
dec
data16
pop
leave
mov
in
cwtl
push
pop
in
loop
pop
inc
mov
imul
aaa
stc
inc
cmp
mov
cltd
std
xchg
xor
pop
stc
lds
into
popa
fnsave
ret
test
jle
sbbl
sbb
mov
cmpsl
sbb
out
call
cmp
mov
sbb
mov
stc
pop
pop
jp
loopne
pop
mov
test
in
in
fcompl
clc
pop
sub
pushf
add
and
xor
and
jne
and
mov
sbb
push
mov
ret
shll
push
sub
test
into
pop
outsb
mov
test
ss
pop
rclb
repz
jp
xchg
sub
ror
popa
into
or
adc
daa
ljmp
cmp
xchg
sbb
lahf
jno
movsl
int3
loopne
fisubl
addr16
in
jbe
xchg
jecxz
pop
jg
insb
push
sbb
mulb
mov
adc
shrb
repnz
out
mov
movsl
movswl
xchg
xor
lods
rclb
loop
dec
sarl
jg
or
dec
outsl
dec
mov
in
xchg
xchg
cltd
jg
lea
lea
push
ja
mov
xor
pushl
dec
pop
negb
enter
jg
and
mov
pushf
cld
rcll
cmp
cmpsl
cmp
fwait
leave
adc
cli
adc
add
enter
mov
jo
imul
push
ret
sahf
mov
or
mov
and
js
fsubrl
lock
sbb
jne
test
cmp
and
xor
xchg
rcrl
inc
pop
cwtl
adc
inc
inc
sbb
cmp
cmp
int3
addr16
xchg
add
mov
and
mov
pop
dec
mov
pop
xor
cmp
cmpl
aam
xchg
pop
out
ret
adc
xchg
lods
imul
mov
out
arpl
sub
scas
inc
and
push
int3
lods
mov
imul
lahf
mov
cmp
adc
das
fmull
stos
push
mov
stc
insb
ljmp
jbe
stc
cltd
sti
adcb
jae
dec
cmp
inc
jg
sbb
les
mov
jbe
xchg
xlat
cmp
jne
or
test
xchg
ss
cli
repz
cmp
jmp
pop
enter
and
in
shl
mov
ja
and
pop
gs
repnz
or
lahf
xor
mov
xchg
nop
cmpsb
push
lods
fldt
dec
int
inc
pop
ret
test
adc
hlt
dec
std
push
iret
filds
je
xor
mov
lds
or
test
or
lock
es
in
xor
sets
testb
loope
cmp
mov
jg
cmpb
add
icebp
xlat
pop
or
loope
xchg
adc
cmp
add
aad
xor
divb
mov
dec
loope
and
fadd
pop
shlb
lret
aad
repnz
push
sahf
push
adc
pop
xchg
das
popa
mov
jecxz
xor
add
call
jmp
loop
sub
sahf
cmp
stc
push
js
ret
add
sub
in
sahf
push
into
outsl
mov
add
imul
cltd
sbb
dec
lret
adc
sub
inc
mov
xchg
mov
pop
cmp
jmp
lods
jmp
js
pop
xlat
sahf
pop
xor
adc
mulb
nop
cmp
cmpsl
aas
enter
mov
lds
int
leave
mov
insb
dec
ja
js
push
mov
mov
mov
push
cs
pop
push
addr16
or
ret
and
lock
jg
incl
scas
ja
mov
lret
mov
adc
jno
cmpsl
xor
cmpsl
xor
adc
out
mov
repnz
mov
inc
call
pop
icebp
add
and
add
mov
mov
ret
pop
push
test
cld
adc
jns
lea
sahf
adc
inc
scas
adc
sub
add
aam
mov
pop
push
es
dec
hlt
popf
imul
or
pop
arpl
adc
mov
data16
js
push
scas
push
push
in
jbe
mov
outsl
adc
cmp
mov
andl
pop
lds
jg
lods
repz
or
in
rol
mov
jp
int3
inc
sbb
sub
subb
xor
jae
xchg
mov
inc
out
mov
insb
mov
mov
xor
pop
inc
jecxz
jne
mov
mov
inc
cmpsl
xchg
aad
jecxz
mov
in
out
mov
aad
push
adc
divl
xchg
mov
in
roll
push
loop
cmpb
jbe
cs
ss
inc
dec
jne
test
arpl
repz
int3
mov
out
test
fldln2
mov
add
add
roll
pop
repz
popl
sbb
cli
push
je
aad
imul
out
or
enter
out
mov
lea
mov
xor
xor
repnz
mov
inc
scas
stos
dec
mov
jbe
fucomp
xorb
mov
pop
xchg
aad
push
jg
loopne
fists
icebp
mov
dec
arpl
sub
call
push
xchg
insl
mov
pop
xchg
mov
cmp
dec
pop
dec
gs
out
lods
mov
pop
lea
pushf
insl
imul
xchg
sahf
pop
adc
nop
xchg
std
add
repz
push
sbb
or
mov
int
pop
roll
and
mov
cwtl
mov
addb
repz
xor
mov
pop
mov
xor
iret
lret
cli
imull
enter
mov
in
imul
jne
mov
fmuls
inc
push
pop
cmp
mov
insb
xchg
aam
or
inc
stc
mov
fwait
test
es
je
sbb
mov
and
scas
dec
sbb
cmp
adc
inc
fsubl
or
test
adc
fwait
ret
jge
dec
or
sbb
pop
add
mov
add
inc
dec
push
add
mov
push
hlt
adcb
jae
mov
popa
es
push
iret
inc
sar
fcompl
mov
lds
aam
mov
add
popa
inc
mov
les
adc
jbe
xchg
mov
jae
or
push
test
into
stc
add
pop
clc
fs
xchg
mov
mov
sbb
adc
iret
add
ret
insb
out
movsb
mov
in
mov
xchg
push
out
add
inc
fcoml
mov
push
flds
or
imul
daa
mov
dec
add
sti
mov
or
jbe
mov
adc
lock
rorb
pop
cmp
je
dec
in
cld
call
cli
sub
scas
jmp
xor
andl
orl
bound
pop
or
dec
or
adc
jnp
daa
cmp
out
jne
imul
les
test
xchg
lret
jo
sarl
mov
jbe
dec
mov
mov
repz
movsb
xchg
stos
jge
and
test
xchg
push
push
mov
rorl
pusha
or
repz
and
call
in
insl
ja
xchg
sub
mov
cmp
stos
es
into
jne
fs
xchg
dec
xchg
xchg
mov
inc
jl
inc
mov
cmp
lea
pop
addr16
incb
insl
mov
repnz
push
or
push
and
sub
dec
add
or
outsb
outsl
push
push
adc
xchg
push
push
ss
clc
push
lods
sar
dec
or
in
push
or
jmp
sbb
pop
cmp
dec
bound
mov
dec
mov
fisttps
mov
loope
adc
notb
mov
in
loope
test
sbb
call
lret
sbb
test
inc
bound
into
arpl
mov
movsl
jns
fwait
push
push
fmuls
mov
sub
into
cwtl
mov
push
lret
mov
mov
dec
and
fldl
xchg
lahf
lds
fcomps
pop
cmpsl
sub
push
cs
push
loope
xchg
pusha
insl
jae
inc
add
movsl
stos
and
lods
mov
dec
scas
jae
into
xor
iret
call
cmp
pop
loope
cmc
jle
mov
iret
dec
mov
popa
adc
lods
adc
das
adc
mov
cltd
push
push
fadds
pushf
push
and
lea
aad
xchg
pop
and
loopne
test
divb
jno
call
pop
imul
mov
inc
jle
fs
addr16
leave
add
xor
push
mov
mov
or
sbb
iret
jbe
xor
cmp
push
lock
adc
add
fwait
mov
mov
mov
or
fstpl
divb
xor
scas
inc
in
dec
arpl
aaa
outsb
cs
mov
adc
jno
fimull
aad
xchg
adc
dec
test
pop
es
pusha
iret
add
mov
imul
mov
dec
jmp
arpl
sahf
xlat
xchg
sbb
sahf
insb
sbb
bnd
and
xor
pop
xchg
outsb
test
data16
cmpsb
jae
dec
mov
or
pusha
dec
in
inc
daa
in
inc
xchg
imul
lret
icebp
es
incb
push
push
dec
sahf
xlat
andb
cwtl
cmc
repz
imul
addb
shl
pavgb
add
mov
cmp
test
mov
pusha
jmp
xchg
or
gs
xlat
fldl
mov
lods
lods
cmp
push
xchg
inc
aad
stos
rorl
je
out
test
add
add
adc
in
add
ljmp
fistl
jecxz
xchg
cmc
mov
test
and
fildl
mov
add
sub
xor
rcr
dec
dec
dec
divb
fsubrl
test
push
pop
sbb
xlat
and
pop
mov
pop
inc
rolb
pushf
ss
clc
aas
cmc
fstl
inc
out
pop
and
je
mov
jecxz
lods
mov
xchg
ja
or
rcl
hlt
mov
xor
dec
sub
jmp
cltd
test
cld
leave
mov
jno
dec
push
sub
pushf
test
pop
addl
and
sbb
xchg
sbb
aas
pop
dec
rorl
imul
inc
dec
lahf
sbb
mov
or
fcom
and
iret
pop
pusha
push
aad
and
push
add
pop
pusha
movsl
adc
addl
mov
cmpl
test
pop
pop
and
sub
jmp
jo
into
or
sbb
aam
iret
and
jbe
cmp
sahf
jno
push
dec
or
and
pop
dec
lret
push
std
repnz
sbb
shll
aam
cmc
js
push
das
xor
ds
pop
xor
shrl
aaa
imul
mov
sub
sbb
insl
sbb
xor
inc
adc
and
push
dec
loop
jb
ret
iret
ficoml
pop
inc
add
rol
add
std
pop
jp
adc
imul
mov
dec
cltd
fists
movsb
in
bound
lods
sti
xor
out
pop
push
out
xor
xor
enter
popa
pop
or
in
test
loope
cmp
cltd
fdivr
adc
sbb
mov
mov
test
sub
negl
push
mov
shlb
sub
aam
fdivrs
imul
cwtl
dec
sub
mov
push
sub
in
mov
push
mov
xor
mov
js
or
jecxz
cmp
je
pop
xchg
jmp
mov
mov
jl
sarb
dec
in
or
or
movsb
push
aaa
cmpsb
sub
inc
repz
fcoms
push
mov
call
loopne
sbb
inc
sub
movsl
inc
popf
inc
das
insb
jmp
mov
push
outsb
lcall
test
sbbl
lret
in
xchg
pop
out
addr16
cmp
clc
adc
push
out
inc
lods
std
add
insl
fstl
jecxz
cmp
ja
repz
jg
outsl
mov
test
sbb
add
cmpsb
jns
push
push
mov
xor
stos
adc
std
fidivs
inc
mov
scas
xchg
repz
pusha
sbb
dec
sub
jns
dec
or
or
cmp
test
faddp
jae
imul
sar
es
cwtl
dec
xor
sahf
out
jo
adc
dec
jns
rol
xor
das
pop
xor
in
stc
fwait
push
enter
outsl
xor
xor
jae
in
pushf
cwtl
dec
mov
ja
imul
dec
jno
mov
inc
xchg
subb
inc
adcl
adc
test
and
or
bound
xchg
cmpsb
mov
pusha
mov
push
mov
clc
out
pop
rorl
mov
xor
rclb
or
push
jl
inc
adc
add
jb
scas
jg
push
add
adc
mov
test
cmp
fsubl
sbb
insl
fimull
sbb
movsb
pushf
jmp
call
inc
add
add
in
and
int3
dec
push
stos
jecxz
movsl
inc
jno
jp
cwtl
in
aas
outsb
gs
jg
shll
pop
data16
clc
sbb
int
data16
pop
mov
or
fdivrs
and
data16
xchg
xchg
test
jae
in
jns
and
push
pushf
xorb
cmp
jge
push
testb
dec
adc
xorb
push
fnsave
je
pop
nop
inc
mov
dec
and
data16
pushf
lods
jmp
popa
mov
push
add
cmpsb
ret
inc
jp
or
push
out
add
sbb
jo
stos
stos
push
xchg
call
xchg
xor
fnstsw
addr16
xchg
pop
filds
cmp
std
cmc
inc
or
addr16
cmp
subb
fcmove
ret
cmc
cmp
cli
lea
aaa
jnp
test
push
lock
inc
dec
add
push
mov
movsl
adcb
repnz
mov
flds
xor
mov
adc
pop
sub
push
sbb
fsub
push
or
addl
shrb
push
js
es
inc
sbb
loopne
pop
or
sti
and
nop
mov
out
lea
inc
outsb
sti
sbb
pop
or
or
aad
push
adc
push
fstps
inc
in
jp
loop
and
xor
xchg
mov
adc
xchg
es
ror
add
ljmp
dec
mov
mov
mov
imul
fdivr
enter
add
hlt
mov
xor
cltd
ss
fsubl
xchg
cmp
mov
lahf
sbb
jne
gs
int3
gs
push
stc
cmpsl
js
xchg
add
jecxz
ds
mov
xchg
cmp
pop
sbb
in
inc
ljmp
insl
sar
scas
loop
xchg
sub
jmp
in
and
stos
inc
mov
jae
outsb
insl
aam
ljmp
popf
mov
pop
shrl
scas
aaa
clc
leave
cld
pop
sub
js
repz
stc
pop
or
mov
out
mov
push
cmpsl
jbe
mov
push
rolb
cmp
je
cltd
lock
imul
adc
call
pop
xchg
xor
and
in
shrl
std
mov
scas
test
inc
lahf
fldcw
test
jmp
pop
bound
fwait
mov
dec
mov
mov
int
adc
fdivrs
xchg
mov
aaa
mov
popa
mov
inc
loop
adc
jb
adc
pop
in
sub
jge
add
dec
dec
stc
cli
sbb
sahf
lods
jbe
pushf
das
into
popf
lea
cld
push
push
pop
cltd
enter
pmullw
xchg
pop
mov
sub
sub
scas
leave
mov
dec
out
clc
sub
fisttpl
mov
and
cmpl
xlat
sbb
rcr
rcrl
push
push
lret
sub
sbb
cmpsl
sbb
xor
jge
mov
mov
ja
aam
les
inc
outsb
popa
xor
data16
dec
dec
mov
adc
fbstp
mov
cmp
jne
loope
add
add
pop
stc
jp
push
pop
test
pushf
xor
sti
pop
imul
push
movsl
xor
mov
fdivr
sub
imul
je
xorb
shrb
inc
outsl
adc
sti
test
pop
jge
push
stos
inc
xor
cmpsl
je
cmp
out
lcall
adc
push
jne
out
sub
loopne
mov
test
cmp
scas
or
fsubrs
je
decb
or
sahf
fidivrl
ret
inc
xor
or
xchg
cmp
jo
out
inc
xchg
lods
and
je
push
jmp
add
jle
push
loop
inc
dec
iret
mov
xchg
int
jae
xor
rcl
xor
pop
mov
lret
push
imul
sbb
and
ficoml
pop
or
jae
jmp
fisttps
mov
xlat
mov
and
inc
icebp
movsl
fdivr
mov
inc
pop
das
es
mov
xor
mov
sbb
push
xlat
dec
pop
mov
cmpsb
mov
xchg
lcall
add
mov
push
repnz
fst
sbb
lds
cmp
add
fisttpl
jbe
ljmp
mov
cmp
pushf
add
aas
mov
fwait
ss
loope
lret
mov
add
gs
cmp
popf
xor
in
enter
mov
inc
loop
adc
shll
lea
lock
push
push
hlt
and
inc
inc
lahf
sbb
loopne
cltd
adc
dec
enter
fsubrs
jbe
movl
sub
jb
push
add
insl
mov
mov
adc
add
sub
cmp
ja
sub
mov
out
les
notl
into
inc
stc
fwait
leave
arpl
stc
sub
iret
fwait
out
add
out
mov
inc
insl
cmp
jae
imul
pop
xor
sub
mov
scas
lcall
adcb
adc
pcmpeqb
push
mov
aad
stos
addr16
stos
gs
xchg
inc
cmc
jecxz
or
movsb
mov
stc
inc
and
jg
and
and
nop
in
inc
dec
stos
fnstsw
sbb
mov
loope
push
pop
into
mov
fcmovb
add
mov
loop
cmc
sar
xor
imul
pop
repnz
pop
in
orb
aad
push
pop
iret
fcmovbe
pop
addr16
push
rol
sbb
push
mov
mov
jb
loope
data16
jo
add
mov
sbb
mov
jle
mov
mov
mov
leave
mov
mov
es
jae
hlt
cwtl
movsl
and
fadd
arpl
fidivs
aas
mov
jl
popf
pop
jne
sub
scas
dec
ljmp
mov
xchg
std
cs
xchg
popa
push
scas
adc
xchg
outsl
aas
cmp
jne
notb
scas
into
jnp
arpl
call
xchg
xor
data16
fcoml
call
cmp
adc
addl
and
neg
pop
or
js
mov
fisubs
mov
inc
pop
jecxz
and
sarl
movsb
xchg
imulb
sub
inc
bound
xchg
adc
mov
and
xor
frstor
and
lods
jge
fincstp
mov
or
and
loop
sbb
mov
xor
in
inc
jp
mov
sbb
mov
sbb
push
je
test
aam
sub
inc
rcr
cltd
inc
mov
xchg
ret
or
out
inc
lahf
xchg
xor
xor
jecxz
pop
sub
stc
mov
push
or
xchg
sti
int3
jne
mov
xchg
push
xchg
test
sbb
jns
push
dec
call
and
fsubrp
or
out
mov
jl
add
jns
aas
mov
sbb
test
ja
frstor
stos
fbld
cmp
and
push
lds
inc
pop
lcall
stos
in
mov
add
cmpsl
mov
nop
jae
and
mov
aaa
jbe
mov
jecxz
js
das
lcall
lea
hlt
pop
sub
pop
xchg
leave
mov
jae
xchg
inc
sub
push
jns
xchg
popa
lahf
clc
iret
sub
setp
mov
and
in
pop
xchg
jno
jl
pop
lcall
sub
pop
xchg
rclb
xchg
repnz
mov
jp
mov
lods
or
es
je
mov
xor
dec
sbb
add
call
repnz
fistl
orl
adc
jmp
xchg
insl
sub
xor
mov
cmpsb
in
adc
sahf
dec
test
mov
jge
sub
or
sar
mov
or
jecxz
or
sub
mov
push
in
stos
addr16
test
mov
xchg
shrb
cmpsl
leave
push
ret
aad
js
mov
xchg
in
shll
sbb
sub
jno
mov
push
fmul
fcomps
fadds
mov
fcomp
xlat
mov
dec
xor
rclb
push
xor
bound
cmp
sub
push
push
je
outsb
sbb
js
fmul
arpl
inc
push
and
aaa
sbb
ret
lret
out
es
inc
dec
icebp
push
aad
dec
jmp
out
mov
movsl
sbb
arpl
iret
cld
orb
pushf
mov
test
in
sub
xchg
xor
leave
pop
adc
mov
es
push
push
and
adc
scas
leave
push
push
dec
test
js
or
add
stos
aam
or
adc
test
mov
jb
icebp
repz
add
mov
rcll
mov
je
add
sbb
lcall
push
xchg
adc
jp
dec
sbb
outsl
sbb
adc
cld
sub
mov
insw
out
out
div
cltd
jmp
test
cmpsb
mov
push
xchg
push
decl
fwait
jmp
popa
nop
xor
add
cmp
insb
stos
movsl
mov
out
inc
hlt
cmp
pop
clc
loope
dec
outsb
mov
mov
xlat
inc
lock
sub
outsl
jge
dec
add
inc
adc
xchg
push
scas
lahf
ds
mov
cli
out
pushf
pop
adc
dec
add
sub
lea
dec
push
push
sub
sub
inc
xor
inc
adc
jb
dec
jae
mov
leave
das
mov
ret
lods
and
push
mov
popa
xorl
pop
dec
out
icebp
addb
out
out
js
aaa
lret
dec
repz
inc
mov
dec
add
xchg
fstps
cs
mov
cmp
or
cmp
lret
dec
mov
jp
cwtl
xchg
jns
out
mov
xchg
lret
test
in
ja
adc
pop
jb
popa
lds
ss
cmp
adc
lahf
daa
and
inc
int3
ret
adc
xchg
or
daa
cmp
mull
adc
sbb
xor
pop
pop
add
xchg
cmp
mov
pop
in
xlat
gs
jbe
mov
mov
mov
pushf
or
sub
dec
mov
mov
xchg
mov
adc
dec
daa
sub
xor
dec
call
cmp
je
lods
xchg
xor
push
jae
les
gs
incb
fwait
sub
jne
loopne
xchg
or
adc
imul
je
std
xor
inc
movsb
xlat
insb
in
and
lahf
xor
dec
jo
pop
xchg
mov
fnstenv
sub
push
ljmp
cs
sti
sarl
adc
jnp
jb
jmp
scas
lock
rcr
xchg
outsl
cmp
insl
or
jecxz
lods
test
std
sbb
fildl
push
mov
insl
and
nop
add
xorb
test
mov
or
inc
and
movsb
jge
push
or
divb
sbb
sbb
rorl
sarl
fcomps
imul
xchg
dec
pop
call
bound
xor
jl
cmp
clc
mov
sbbl
lock
nop
adc
mov
jnp
sahf
pop
stos
stc
std
sbb
repnz
test
jge
mov
insl
xchg
rolb
addr16
notl
xor
adc
jnp
cmp
sahf
jnp
or
aas
xor
loopne
pop
lds
ss
repz
das
xor
in
add
xor
mov
adc
scas
xchg
or
loope
mov
cmp
sub
jne
add
jae
or
cmp
aaa
lret
int
outsl
sahf
mov
xchg
iret
fcomps
xor
rorb
inc
jno
sbbl
lods
popf
lret
pusha
jne
inc
fisubrl
adc
dec
adc
dec
and
dec
cmp
or
jno
addb
pop
add
orb
mov
inc
fstps
adc
cmp
inc
mov
lret
cmp
popl
pop
out
loop
lret
sbb
cwtl
cmp
adc
aam
mov
pop
insb
add
cld
jne
test
pop
mov
add
mov
cmp
cmp
and
push
fbstp
fdiv
jle
mov
pop
xor
in
inc
or
inc
jnp
data16
ficoml
es
dec
pop
or
cmc
inc
inc
jae
std
shr
mov
fcoml
fcoml
aaa
jp
test
mov
pop
mov
mov
xchg
leave
dec
cltd
xor
xchg
mov
push
out
bound
int3
imul
inc
aas
mov
lcall
cmpsb
fidivs
flds
loop
loopne
fnstcw
sub
jns
gs
decl
imul
rcrl
and
cltd
mov
out
insb
adc
lahf
cmc
mov
mov
sub
and
out
rcl
pop
xor
xchg
xchg
aam
call
std
sahf
mov
xchg
lods
adc
insl
mov
addr16
sub
ja
pop
xor
insl
movsb
inc
cmp
decb
mov
lods
lods
lret
nop
rorl
pop
and
pop
pop
jmp
mov
mov
mov
or
cmpb
mov
cmp
mov
jle
jns
mov
test
cltd
pusha
daa
cmpsl
mov
stos
js
fnstenv
movsb
in
and
add
xchg
sbb
cmp
xlat
push
mov
mov
fisttpll
xchg
ss
inc
outsl
ret
cmp
inc
and
enter
lret
loopne
psubb
aam
jae
xchg
addb
ret
pop
imull
inc
sub
adc
adc
je
or
lock
push
mov
ss
rclb
dec
js
rcr
jbe
xor
leave
mov
jmp
pop
lods
imull
inc
mov
decb
sbb
add
loopne
iret
lods
or
inc
pop
jbe
repz
jae
push
je
fnstsw
xchg
jns
lahf
jg
arpl
jbe
bound
and
arpl
test
or
shrl
pop
imul
xor
movsb
push
cmpsl
xchg
pushf
add
jp
mov
loopne
dec
mov
mov
jno
mov
mov
dec
mov
or
mov
ret
adc
imul
mov
xchg
inc
xchg
test
test
mov
insl
arpl
mov
outsl
mov
mov
in
inc
mov
cmpb
xchg
or
in
sbb
adc
jl
or
adc
mov
pushf
inc
int3
out
int3
sbb
inc
xor
addr16
jbe
loop
pop
add
data16
inc
ret
pop
add
fldcw
data16
stos
pop
xlat
pop
sub
fidivrs
jns
cmp
cli
je
mov
rcll
sahf
inc
scas
xor
adc
testb
shr
cmp
and
iret
sbb
imul
inc
pop
and
push
lahf
fbld
fs
ret
add
push
sub
jae
daa
shll
or
data16
mov
inc
lods
push
aad
leave
in
scas
lock
test
push
xchg
into
mov
rolb
dec
sbb
cli
sbb
pop
pop
or
xchg
and
sub
cwtl
jo
cmc
lods
arpl
sub
xor
jmp
js
dec
popf
faddp
push
push
mov
or
loop
sahf
sbb
js
jns
or
add
inc
pop
sub
loopne
cltd
mov
push
shld
aad
pop
add
xchg
pop
cmp
xchg
push
data16
aad
inc
fwait
aaa
movsl
push
mov
or
xchg
cmp
imulb
jne
mov
inc
push
iret
lret
inc
loope
sti
pop
movsl
ja
sti
push
sbb
push
lret
bound
in
jnp
and
scas
push
pop
movsl
mov
test
add
test
js
sbb
cmp
sub
inc
sbb
cld
outsb
and
out
jo
out
stc
pop
inc
out
add
mov
and
sti
gs
ret
jle
fcoml
lock
cs
test
dec
pusha
popa
sub
sti
test
rorl
mov
inc
xchg
xor
lcall
sub
insb
inc
xor
jmp
movsb
pop
enter
mov
xor
dec
and
adc
arpl
xchg
and
jne
or
loope
or
int3
imul
inc
cmp
iret
cmp
fucomp
paddsw
mov
aas
jge
lcall
push
mov
xchg
xchg
lds
and
jecxz
mov
subb
cmp
inc
dec
outsl
int
les
jmp
sub
lods
shll
lods
jg
insb
sub
push
ds
xor
sbb
mov
mov
loope
inc
movsb
enter
lcall
faddp
fst
xchg
es
mov
cmp
pop
xorb
dec
mov
stos
jg
push
xchg
jle
pop
jl
push
cmp
push
xlat
test
and
push
out
aam
daa
out
mov
add
orb
daa
scas
mov
xchg
sbb
mov
iret
jns
pushf
mov
ljmp
sub
pusha
jg
xchg
add
or
mov
cmp
xchg
mov
dec
xchg
int3
lds
jo
mov
mov
aaa
sbb
dec
testl
bound
pop
daa
popa
adc
push
mov
shrb
pop
mov
inc
mov
or
mov
xor
test
push
cmpb
dec
jl
daa
stos
dec
inc
or
mov
and
mov
inc
lret
xchg
mov
out
cli
aad
xor
push
xchg
shll
mov
fisubrs
mov
xor
pusha
ret
aas
or
mov
jne
cmpsl
or
mov
sbb
jmp
xchg
and
stc
shll
sub
daa
imul
sub
jnp
jmp
cmpsb
sbb
or
test
dec
mov
pop
sub
lock
repz
and
sub
cli
daa
mov
iret
jge
xchg
pop
or
addr16
dec
mov
xchg
jp
cmp
hlt
int
cwtl
mov
inc
jmp
xlat
icebp
mov
mov
xlat
insl
cltd
sub
ss
mov
out
jb
ss
cmp
sbb
jo
or
movsl
mov
icebp
ds
mov
pop
adc
out
or
xor
cmp
faddl
in
mov
je
mov
lret
lahf
in
sbb
jle
pop
insl
inc
sub
add
push
out
jecxz
pop
pop
jl
fstsw
mov
dec
lcall
inc
pop
addr16
dec
mov
cmp
fdivrs
mov
adc
mov
pop
lods
push
adcl
pop
aaa
pushf
or
sub
sub
jae
or
in
imul
jne
leave
sub
shlb
ja
notl
mov
mov
push
das
pop
and
sti
je
ficoms
jae
dec
mov
dec
jo
pop
popw
mov
jns
inc
mov
mov
jp
popf
adc
push
insl
or
pop
mov
bound
push
pop
enter
lret
popa
int
popf
mov
or
aas
mov
cmp
lods
outsl
rcrl
jae
lods
cmc
or
lret
mov
into
daa
ds
mov
mov
xor
sahf
daa
dec
add
movsb
int3
xchg
push
sub
scas
sub
push
out
jecxz
lds
pop
lahf
xchg
push
ret
mov
dec
mov
es
pop
insl
fisubrs
lea
mov
pop
add
pusha
jae
movsb
hlt
mov
arpl
xor
pop
cmp
xchg
roll
mov
push
lahf
mov
xor
mov
div
xor
adc
std
in
sub
jns
mov
mov
ljmp
ljmp
insb
out
cmp
inc
outsl
push
jno
test
aam
xchg
outsl
adc
push
dec
ret
push
je
mov
push
add
rcll
cltd
lds
aas
or
ds
mov
xor
adc
jge
imul
mov
cmp
sub
lret
dec
imul
mov
pop
insl
jg
push
push
add
cmp
clc
push
mov
pop
xchg
out
lea
sub
mov
and
push
cmpsl
mov
aas
subl
ss
in
cmp
inc
xorb
jmp
sbb
arpl
mov
jl
movsb
in
xor
pop
inc
and
push
pusha
enter
xchg
popf
or
lahf
cs
hlt
hlt
fidivl
mov
adc
sub
push
mov
bound
arpl
push
gs
jae
ds
sub
xor
popf
aam
pop
inc
leave
cmp
adc
push
mov
sub
mov
jg
hlt
shlb
mov
push
mov
jp
push
mov
push
test
or
inc
adc
lock
ds
std
mov
dec
int3
icebp
push
loopne
mov
pop
mov
out
aas
mov
jnp
xchg
hlt
les
push
mov
xchg
xchg
out
push
or
xchg
mov
std
xorl
out
jo
jnp
inc
or
add
dec
push
inc
cmp
push
out
mov
sub
and
ss
mov
xchg
jle
or
bound
lock
int
mov
pop
sti
push
mov
adc
xchg
sti
xor
jns
mov
aas
and
addb
xor
xchg
subl
nop
inc
hlt
mov
sbb
outsb
jo
ret
dec
fidivs
mov
lcall
iret
std
xor
mov
movsl
mov
jmp
shll
adc
and
cmp
test
push
lods
push
fnstenv
insl
cwtl
cmp
jl
in
lcall
jbe
adc
jae
push
cmp
sti
cmp
sub
cmp
mov
push
xchg
mov
and
ret
movl
or
popa
sbb
ljmp
or
scas
into
pushf
mov
sub
jo
ret
mov
cli
mov
lret
jns
mov
push
pushf
in
jle
stos
pop
push
sahf
data16
mov
jmp
jb
adc
es
imul
mov
int3
jne
dec
mov
in
or
inc
jnp
data16
fildl
push
jnp
mov
iret
and
aas
or
sbb
vandps
mov
test
hlt
loopne
dec
data16
lods
inc
jbe
mov
lods
pop
movsb
mov
mov
sbb
enter
jbe
mov
pop
pop
jae
or
jmp
xchg
cli
cld
jne,pn
loopne
mov
adc
into
mov
fidivs
mov
fmull
sbb
decb
jmp
adc
mov
movsb
ss
sub
fwait
xchg
lea
pop
enter
in
pop
jno
test
fidivrl
xchg
jmp
jge
sbb
faddl
dec
xchg
ljmp
iret
jnp
cwtl
bound
andb
add
loopne
les
js
mov
pop
cmp
cmp
sbb
and
pop
pop
out
jmp
xchg
adc
jne
int
daa
xor
outsb
ljmp
sub
xchg
fwait
lods
or
mov
aad
out
sub
jnp
and
xchg
punpcklwd
inc
dec
aaa
iret
shll
stos
mov
data16
test
repz
dec
jl,pt
jb
movsl
jae
loope
mov
cs
fdivr
stos
dec
xor
fwait
adc
lahf
mov
xor
mov
jg
aam
fs
cmp
jmp
sbb
or
stos
outsl
dec
mov
mov
scas
mov
punpckhbw
repz
and
lcall
iret
ljmp
mov
or
das
std
or
mov
fwait
jge
push
cli
movsb
sub
cmp
mov
sti
mov
add
xchg
cmp
push
mov
mov
roll
mov
pop
rcrl
lret
lods
xor
adc
sbb
inc
jg
jbe
dec
dec
cli
movsl
shlb
sub
mov
push
xlat
divb
jp,pn
and
mov
popf
xchg
insl
xor
add
cmp
push
scas
sub
push
idivb
inc
orl
lock
inc
adc
js
dec
fsubr
arpl
outsl
test
cmc
aam
xchg
push
js
fs
jecxz
sahf
pop
add
mov
inc
jg
mov
adc
shrb
stos
xchg
pop
fistpl
test
sub
cmpsb
push
cmp
idiv
clc
dec
mov
jmp
in
scas
loope
ret
aas
add
es
xor
lret
xchg
imul
mov
cmpsb
xor
pop
pushf
xor
cmp
je
loope
push
out
push
mov
jns
pop
das
repz
adc
xor
and
popa
andb
push
jmp
cmpl
popf
icebp
ljmp
into
push
adc
pop
movsl
mov
cmp
cwtl
cmp
sbbl
gs
push
mov
sub
jl
xchg
out
ss
ss
hlt
inc
xor
in
mov
lock
cmpsl
push
fnsave
divl
jns
insb
add
xlat
es
std
pop
vmread
frndint
fildll
insl
lds
arpl
int3
jg
sbb
xor
jae
mov
loop
add
mov
scas
inc
mov
dec
and
imul
xchg
mov
cmp
pop
pop
sbb
cmp
pop
jle
loopne
repnz
jg
pop
sub
lods
xchg
fsubrs
stos
push
pop
cmc
sub
das
rcll
dec
dec
mov
nop
jmp
dec
int
cmp
inc
mov
push
or
out
mov
push
xlat
adc
sahf
fidivrl
inc
test
cmp
aaa
stos
mov
jp
mov
inc
adc
mov
sub
push
shrb
sbb
adc
adc
mov
adc
jbe
adc
mov
inc
fisttpll
gs
cld
sub
and
insb
mov
pushf
imul
add
out
push
xchg
lret
pop
mov
lahf
jb
sbb
fidivs
cs
jns
bsf
icebp
fildll
fists
shl
cmp
mov
jnp
fcomps
xchg
adcb
mov
cmp
andb
pop
push
and
sub
mov
fwait
and
inc
shlb
icebp
inc
hlt
jo
lea
test
rolb
in
cmpsb
fidivl
cmp
jg
and
push
mov
cs
dec
stos
in
push
inc
jp
push
pop
or
push
sahf
repnz
mov
enter
cld
jl
ret
ds
mov
mov
sub
mov
cld
or
add
pop
xchg
icebp
shll
xchg
sub
push
cmp
sub
jmp
xor
add
or
add
arpl
movsb
fwait
lods
and
insl
hlt
data16
jge
aaa
xor
or
sub
cmp
out
repz
scas
cli
sub
add
dec
lahf
inc
xor
push
adc
cmpsb
into
or
fmuls
mov
mov
sarl
hlt
jecxz
je
push
leave
add
sub
xor
or
insl
push
sbb
test
cltd
or
dec
lcall
mov
dec
in
pop
xchg
outsl
fsubrs
lahf
and
arpl
adc
jmp
idivb
jmp
mov
sub
inc
push
test
scas
dec
push
mov
ja
adc
mov
cmp
daa
bound
inc
cmpsl
push
fmuls
mov
mov
pop
jle
mov
outsl
pop
sub
lret
fsub
jbe
fwait
into
push
inc
sub
test
test
cmp
call
fidivrs
sbb
mov
xor
adc
xchg
pop
xor
sahf
inc
jl
js
mov
mov
jl
fldt
lret
addr16
pop
stc
ficoml
aad
mov
popf
and
cmpsl
xor
add
add
repnz
jmp
and
scas
out
in
out
lret
pop
popf
mov
jmp
sub
pop
xchg
loopne
and
xchg
mov
pop
imul
sbb
mov
adcl
lea
out
pop
fchs
jnp
decl
jl
xchg
out
addr16
fldl
mov
or
push
pop
out
scas
pop
fs
scas
jecxz
stos
mov
sbb
stc
dec
cwtl
cwtl
mov
es
jge
cmp
lods
pop
lcall
jo
fxch
orl
es
push
orb
cli
mov
mov
enter
mov
cmpsb
lahf
sbb
cmpsb
and
fs
repnz
inc
mov
cmp
dec
cmpsb
dec
scas
loop
xor
pop
aas
sub
lds
add
sub
mov
cs
mov
jb
lea
jne
xor
sbb
dec
ljmp
jmp
mov
and
pusha
and
dec
sub
mov
dec
cmc
rcr
or
mov
ficomps
or
lret
push
xor
push
pop
jno
jo
in
and
call
mov
jg
push
out
ret
adc
push
pop
add
jbe
les
scas
jo
dec
shlb
leave
inc
jmp
jecxz
jae
sbbb
hlt
or
mov
sub
adc
xchg
jnp
call
jnp
aad
push
pusha
ds
fcomp
lods
sbb
adc
sbb
ret
fists
lcall
pop
or
pop
clc
and
adc
sbb
or
jb
push
xor
in
shll
cmp
jae
jo
adc
cmp
pop
aas
push
insl
nop
xchg
test
cmc
popa
stos
dec
mov
push
push
and
fdiv
movsl
loop
add
call
push
xchg
pusha
jg
dec
or
sbb
and
rep
mov
jp
loope
into
repz
popa
pusha
xchg
pop
adc
inc
or
ja
mov
dec
out
gs
aas
dec
pop
jbe
lods
jb
push
andb
cli
int3
push
or
and
popa
out
cmpsb
hlt
cmp
lds
inc
adc
in
popa
mov
xchg
mov
jnp
jae
sub
dec
xorl
dec
dec
scas
push
push
xor
cmpsb
fldcw
hlt
jge
popf
mov
jmp
mov
ret
popa
push
push
xchg
add
mov
mov
inc
push
mov
stc
rorb
adc
mov
mov
cmp
pop
andl
sarb
test
pop
mov
or
daa
push
or
inc
scas
cld
sbbb
and
add
es
push
xchg
imul
lret
and
add
lods
test
jne
jo,pn
xchg
xor
mov
hlt
shlb
lods
stc
push
pop
aad
push
xor
lock
pop
fnstsw
push
leave
ficoml
testb
jmp
pushf
push
jp
ret
out
push
out
lods
mov
inc
dec
sbb
fnsave
lods
jmp
insl
cvtpi2ps
gs
inc
out
and
mov
xor
mov
sarl
aad
xor
enter
sbb
add
repnz
in
mov
fldl
mov
stos
js
mov
sub
dec
addb
icebp
ljmp
sub
int
bound
push
pop
repnz
movsb
fwait
pop
dec
repnz
sbb
inc
ja
test
enter
inc
cld
movsb
push
jbe
movsb
in
push
sub
stos
lret
icebp
imul
jl
xor
add
mov
mov
addb
sahf
dec
iret
leave
lock
dec
dec
mov
cmp
xchg
in
mov
cwtl
pop
mov
call
cmp
inc
push
jmp
sbb
dec
mov
jle
push
xor
lods
push
aaa
dec
pop
xchg
hlt
push
out
xor
pop
xor
inc
bound
lods
dec
and
lcall
dec
adc
push
aam
addr16
jle
pop
pop
or
and
daa
lea
mov
push
dec
mov
jne
sub
hlt
mov
add
call
dec
daa
and
std
pusha
jg
xchg
hlt
popa
test
call
cmp
dec
stos
std
mov
rcll
shll
pop
jmp
pushf
leave
popa
mov
or
push
movsb
cmc
mov
jae
inc
mov
push
jne
mov
ret
xor
into
sti
jge
int3
push
inc
notl
xchg
add
dec
xor
jb
jmp
mov
push
cwtl
xor
pop
xchg
add
or
mov
test
outsl
test
and
jmp
cld
mov
pusha
mov
cmpsb
mov
mov
push
hlt
mov
pop
lahf
pop
add
push
rcr
push
inc
pop
push
mov
inc
js
dec
fistpll
and
add
out
jno
stc
lahf
mov
xor
sahf
dec
mov
repz
jecxz
jne
pushf
mov
xor
aam
rcrl
in
mov
hlt
mov
out
xor
les
in
mov
adc
adcb
mov
fistps
lods
loope
jbe
mov
mov
pop
push
insb
int
outsb
iret
push
sub
testl
insb
jmp
sbb
mov
daa
or
testb
mov
inc
in
mov
outsb
nop
and
dec
negl
adc
ja
lods
sub
sarl
add
cmp
popa
jecxz
or
xlat
cmc
in
into
std
aaa
daa
dec
out
adc
inc
call
xchg
jg
adc
push
inc
or
ljmp
ds
lods
inc
js
push
movsb
sbb
testl
fstpt
jl
outsb
xchg
mov
test
xor
out
pushf
adc
bound
inc
arpl
in
pop
jnp
and
pop
movsl
fstpt
push
or
inc
cli
fs
out
push
scas
push
push
jae
adc
inc
hlt
push
imul
jg
inc
lcall
pop
test
imul
mov
lret
jg
subb
push
dec
dec
fxch
inc
xor
add
jle
pop
sub
add
jno
sbb
push
xlat
mov
jno
mov
cmpsb
add
jmp
bound
jns
fsubs
mov
mov
daa
jns
int3
push
xchg
mov
sbb
push
int
repnz
jmp
outsl
adc
xor
add
or
lds
into
stc
subl
fldl
icebp
out
xchg
aaa
mov
lock
ja
or
sahf
push
inc
cltd
xchg
fldenv
sub
sahf
dec
cmp
or
shll
cmpsb
add
std
cmp
lcall
js
inc
into
ret
jae
xchg
or
pop
aaa
and
loopne
les
icebp
ss
outsl
jmp
lds
dec
lock
hlt
or
mov
inc
mov
mov
mov
addr16
xchg
movsb
pop
inc
das
stos
sub
bound
outsl
sbb
adc
inc
lock
inc
dec
lods
gs
inc
pushf
fwait
or
xchg
sarb
sbb
jg
dec
cmpsl
pushf
cmpsl
cmpsb
push
jbe
mov
mov
into
jp
sub
fnstcw
xchg
mov
add
in
mov
sub
mov
and
cli
call
inc
dec
call
mov
lcall
iret
xchg
pop
xchg
xorb
sub
fistl
pusha
in
rcll
inc
or
icebp
fcmovnu
clc
ljmp
push
popf
xor
jl
dec
cli
aaa
sarb
in
and
jno
and
icebp
sub
sbb
popf
push
int3
cmp
cmc
mov
push
aas
movsb
jo
mov
out
xor
jb
insb
and
mov
mov
mov
cmp
jae
mov
push
test
sub
push
aaa
pop
push
jmp
mov
push
fmuls
rcrb
mov
push
rclb
test
push
outsb
jecxz
roll
in
aam
aaa
out
repz
sbb
or
insb
mov
daa
or
and
adc
in
mov
or
xor
xchg
call
stos
and
sbb
outsl
iret
stc
mov
xchg
mov
mov
imul
std
scas
stc
int3
xor
adcb
out
stos
push
je
ss
iret
add
and
daa
pop
inc
add
pop
or
add
jp
push
jge
cmp
jg
lock
stc
mov
iret
popa
xchg
adc
ljmp
cmpsb
xchg
out
jbe
in
clc
imul
pop
sbb
push
jne
and
repz
stc
sub
fsincos
sbb
sub
in
inc
add
inc
mov
mov
in
vpsubq
scas
int
cmpsl
mov
jle
add
xchg
lock
mov
lahf
add
insl
notl
popa
into
pop
test
add
push
jbe
mov
cmovbe
push
jl
cli
xor
sub
das
dec
stc
sub
ss
data16
ret
fs
adc
jne
stc
mov
dec
jg
lcall
lret
push
test
loope
push
nop
jle
inc
test
jo,pn
std
out
clc
inc
dec
lea
popa
jns
scas
or
stc
push
lods
scas
pop
pop
inc
sub
popl
mov
stos
mov
inc
dec
in
dec
dec
aam
pop
cs
push
xlat
adc
mov
push
xchg
iret
inc
cmp
inc
mov
add
ret
jge
sbb
or
mov
xor
lds
pusha
xor
cmp
imul
lds
ds
xor
mov
mov
jno
into
leave
push
fcomip
or
aaa
jecxz
lock
test
out
push
mov
sub
xchg
es
add
xor
cld
mov
adc
jnp
cmp
xlat
arpl
sub
inc
sub
movsb
mov
outsb
push
mov
adc
fisttpll
out
js
dec
add
or
mov
dec
divb
aas
loopne
dec
pop
cmp
orl
imul
mov
mov
sti
cwtl
push
test
jb
push
movsl
push
in
push
into
jnp
in
stos
lcall
or
aad
jp
jno
push
mov
nop
add
std
add
add
cwtl
xor
fbstp
add
int
cmpsb
pop
sbb
int
cmc
sub
pop
ret
dec
ds
pop
imul
xor
mov
sub
bound
stc
mov
lods
out
out
cmp
fwait
rol
inc
stos
imulb
out
push
dec
push
andb
rorb
sbb
xchg
jne
mov
push
testl
mov
xlat
cld
dec
cmp
sbbl
dec
jg
into
inc
dec
mov
icebp
in
jge
push
sbb
gs
cmp
mov
aad
dec
pop
shl
sub
hlt
neg
bound
out
xchg
aam
imul
xchg
fsts
pop
jns
dec
data16
into
lahf
vxorps
sarb
pop
xchg
enter
jmp
imul
ret
adc
int3
aaa
pop
and
not
lock
pop
add
jnp
aad
mov
xchg
ret
mov
mov
mov
add
rolb
scas
mov
icebp
mov
xlat
xchg
in
shl
sub
or
mov
aam
movsl
popf
adc
jns
jmp
decb
push
xchg
push
int3
mov
stos
xchg
xchg
mov
mov
or
cmp
imul
imul
sub
addb
or
or
mov
pop
outsb
rclb
adc
iret
dec
insl
mov
push
mov
lcall
mov
push
sbb
xor
jle
inc
adc
sub
mov
hlt
cs
inc
add
mov
in
sub
push
sub
mov
int3
and
fcompl
jnp
test
mov
cmc
ret
cs
pushf
sbb
mov
mov
cwtl
in
insb
fnstenv
and
push
fxtract
dec
mov
leave
popf
nop
hlt
add
into
cmp
cwtl
cmc
mov
sub
cltd
data16
and
inc
dec
xor
scas
movsb
clc
ss
inc
xlat
and
int3
popf
or
xchg
cmpsb
jne
cmc
mov
nop
push
mov
mov
push
push
or
push
mov
icebp
das
adc
cmp
ficoml
jl
lea
lcall
add
mov
out
adc
mov
push
ss
adc
scas
ja
sub
loop
dec
sbb
imul
cmpsb
out
cltd
outsb
or
cmpsb
insl
jl
imul
dec
xchg
jl
pop
aaa
aam
sbb
mov
cmp
in
jns
push
cmc
jle
in
xchg
in
loope
push
sbb
xor
sub
sbb
adc
add
stos
add
and
xchg
test
mov
push
fdivs
wbinvd
or
mov
repz
dec
push
aaa
insl
cmpsb
ja
jecxz
mov
aad
add
push
xor
inc
flds
movsb
rcll
add
or
fdivl
pushf
xor
cmp
or
les
add
popa
add
inc
fwait
loop
sbb
mov
mov
das
push
ja
pop
mov
dec
ret
sbb
and
or
test
loopne
mov
mov
dec
and
add
rcrl
mov
andb
jae
bound
cmc
aas
sbb
sarb
lods
push
loopne
sub
out
sub
test
adc
loopne
mov
loop
cwtl
xchg
mov
jno
push
mov
mov
jecxz
pop
jae
sub
int3
mov
add
loop
stos
mov
or
icebp
outsl
fcomps
push
out
sub
bound
fiaddl
add
mov
test
cli
filds
mov
stos
pop
jno
sbb
das
inc
mov
sub
leave
and
sbb
pushf
mov
xor
notl
fcmovne
jp
and
jae
xor
jge
and
cmpsl
das
mov
movsb
and
or
mulb
daa
lock
sti
mov
aam
jg
sub
test
push
and
mov
ljmp
cltd
or
cs
adc
jae
scas
scas
push
cmpsl
push
or
mov
sbb
push
xchg
sbb
pop
out
jnp
or
fildll
mov
aaa
lret
mov
jne
or
pop
mov
dec
out
sub
adc
pop
push
jecxz
cli
mov
cmpsb
jge
sub
fdivrl
lcall
dec
setns
cmpsb
movb
adc
or
rcll
insl
popl
mov
loopne
push
mov
push
push
fwait
xor
xor
imul
rcll
int
fidivrs
std
aam
imul
inc
lods
ds
lods
movsl
xchg
jle
inc
cmp
inc
or
and
jp
mov
pop
gs
pop
cwtl
lods
pop
jns
mov
jp
jg
mov
cwtl
inc
jo
add
add
add
cld
jg
add
shl
inc
adc
inc
sbb
jae
jge
std
fistpll
popf
fnstcw
in
cld
test
pusha
push
add
fisttps
inc
out
push
int
xor
jge
mov
pushf
sub
add
add
ss
ret
xor
or
cmp
stos
add
lret
adcl
stos
mov
or
pop
aad
mov
clc
es
add
cmp
scas
xchg
pop
dec
jae
stos
mov
add
push
and
repnz
arpl
sbb
cmp
add
sub
orb
stos
jg
cmp
xor
mov
pop
mov
es
pop
int
dec
rcr
sbb
jne
jns
xor
mov
movsl
cmp
adc
push
mov
dec
jge
fadd
scas
je
lcall
pop
out
push
cmp
adc
jbe
negl
dec
xchg
scas
dec
pop
fs
int3
cwtl
adc
arpl
pop
fs
jle
out
mov
jne
push
leave
jo
test
mov
test
sbb
mov
xchg
cmp
aad
lods
jge
scas
cmp
push
xchg
sub
xorb
and
jg
mov
jns
push
cmp
sbbl
sbb
test
fimuls
ss
dec
stos
test
shlb
xor
inc
push
dec
rcrb
popf
lahf
test
rolb
cmpsl
repz
or
dec
shl
test
sub
mov
dec
mov
leave
leave
push
shll
mul
movsl
pop
in
stos
pop
loopne
shlb
xchg
pop
aas
outsl
jnp
lahf
and
xor
xchg
push
js
pop
es
pop
push
out
cmpsb
aam
mov
mov
inc
pop
adc
dec
outsl
sbb
lret
push
stc
int
incl
and
sbb
shl
rol
lret
lahf
mov
jecxz
xchg
lods
push
push
inc
aas
jge
mov
push
dec
notl
loop
adc
xor
fcmovne
sub
cwtl
repz
jg
cmp
popf
pop
inc
xor
or
xor
daa
cmp
push
mov
push
mov
sti
jp
cmp
test
fucomip
out
inc
sub
mov
add
mov
sbb
cmp
jne
outsl
scas
push
dec
mov
push
nop
call
sub
popa
xor
addb
jp
mov
inc
dec
mov
data16
pop
in
test
mov
xchg
aaa
in
insb
dec
add
mov
inc
inc
jmp
push
aam
jno
jge
mov
dec
add
add
test
jle
pop
push
jae
pop
xor
mov
dec
or
adc
fidivrl
push
pop
lock
jle
ds
stos
pop
outsl
mov
cmp
scas
xchg
into
xchg
sbb
mov
stos
out
jno
ja
adc
push
fldcw
or
iret
lcall
mov
xor
lcall
lcall
xchg
into
add
mov
sub
adc
jbe
fnstsw
test
mov
fs
aad
adc
popa
cld
lcall
stos
jno
dec
into
mov
stos
fucomip
mov
sbb
mov
mov
mov
dec
shll
roll
insb
test
push
and
popf
scas
dec
bound
nop
sub
xor
jge
xchg
aam
dec
cmp
pop
or
imul
sqrtps
cli
push
cld
clc
and
dec
outsb
cli
cmp
scas
mov
cli
push
mov
dec
fscale
jg
xor
cmc
add
dec
mov
xlat
mov
xchg
dec
xchg
mov
je
or
popa
stos
fdivrs
nop
enter
aas
daa
mov
xor
dec
add
and
cmpsb
add
or
mov
out
sar
subl
mov
adc
jp
sbb
lock
jmp
push
jmp
push
mov
fistps
imul
es
mov
and
jno
adc
dec
jb
cld
lock
rclb
push
call
shlb
mov
inc
fsubl
rol
clc
push
lcall
push
cli
in
jl
inc
int
inc
enter
xchg
cmp
sub
jnp
jge
ss
dec
std
ds
or
mov
push
inc
ftst
and
sbb
mov
fmulp
mov
mov
fs
pop
xchg
pop
aas
subb
fsubrl
xchg
sub
mov
push
jg
mov
sbb
rorb
fldenv
pop
mov
imul
scas
jne
lret
mov
std
in
jne
cmp
mov
and
jnp
adc
stc
mov
movsb
xorl
enter
add
sbb
dec
dec
data16
fdivl
and
rcrl
je
sub
test
jbe
mov
xchg
subb
sahf
int
xchg
ja
jmp
fnstsw
sbb
cmp
lahf
int
adc
push
push
leave
jecxz
sbbb
aaa
push
and
test
sarb
andl
movsl
jge
rorl
aam
imul
cli
ds
add
leave
testl
sbbl
jns
mov
les
repnz
pop
stc
mov
scas
sbb
pop
ljmp
lcall
out
dec
or
xor
sub
push
pop
xchg
xchg
fsubrs
nop
in
jo
adc
ljmp
sub
xchg
jb
cwtl
in
fwait
cld
divps
lret
pop
sub
add
pop
mov
mov
das
rcrl
sbb
pop
stos
sarb
cwtl
mov
xor
aad
dec
repnz
pop
dec
sub
call
cs
sub
mov
sbb
div
imul
fwait
movb
hlt
in
pop
mov
push
xor
pusha
les
out
andb
repz
jmp
or
rcl
jne
ss
out
mov
xchg
mov
jmp
inc
hlt
into
sbb
sbb
outsb
mov
mov
sbb
outsl
aam
or
pop
cs
xchg
cs
dec
sbb
xchg
lret
or
xchg
pop
outsl
inc
mov
jecxz
xlat
fstps
mov
xchg
repnz
adc
lods
fdiv
test
js
or
dec
test
dec
mov
or
mov
xor
les
push
push
dec
dec
jecxz
pop
sub
jmp
push
jp
aam
inc
popf
loop
fwait
repnz
mov
push
cmpsl
fs
ficomps
xchg
jbe
mov
cmp
jle
test
xor
adc
xor
sahf
jmp
mov
cld
js
imulb
and
mull
push
pop
adc
insl
fisubrs
inc
and
jno
sbb
shrl
cmpsb
sub
ds
inc
enter
or
cmp
mov
mov
jbe
lcall
ss
aaa
jbe
inc
push
mov
je
mov
and
and
stc
cmpsl
lcall
mov
dec
add
scas
mov
dec
pop
inc
mov
mov
fcoml
repnz
or
adc
inc
push
push
inc
pop
mov
dec
lds
mov
cs
adc
divl
sub
and
les
push
sub
inc
aam
xor
shlb
mov
dec
pop
jns
sbb
mov
out
lcall
xor
call
jg
jmp
mov
lret
fwait
pop
idivl
lret
outsl
imul
and
xchg
inc
push
in
aam
xchg
pop
mov
lahf
bnd
add
test
sub
mov
xlat
stos
cwtl
mov
sbb
popf
lcall
push
or
push
ror
gs
pop
xor
movsb
or
outsb
out
mov
cmp
sbb
xor
or
mov
fdivs
mov
aam
xchg
mov
pop
cs
bound
mov
scas
jbe
xchg
rcrl
lods
mov
mov
sub
repnz
lds
adcb
stos
ds
pop
or
lea
jmp
xchg
xchg
aas
mov
aad
adc
inc
mov
push
sub
nop
out
sub
mov
xor
out
push
push
xchg
xor
test
inc
into
lds
push
xchg
test
push
mov
out
push
cmp
inc
cwtl
dec
adc
adc
sub
imul
xchg
push
mov
jne
mov
ja
lret
xchg
xchg
aad
cltd
adc
daa
xchg
adc
mov
scas
pusha
lock
into
in
sub
adc
pop
mov
add
sbb
adc
in
xor
pop
inc
inc
mov
xor
mov
cmp
arpl
and
and
pop
sbb
dec
fldcw
dec
mov
jle
or
arpl
mov
shll
jecxz
adc
in
leave
lahf
lds
out
call
pop
pop
movb
xchg
inc
pop
fdivrs
pop
jmp
jb
fdivl
inc
ret
iret
xchg
sub
bound
sub
push
add
dec
sub
test
shl
or
ret
or
cmp
nop
fbstp
rcl
adc
aas
xchg
ss
cmc
cmpsl
fs
out
mov
popa
sub
out
or
xor
pop
repz
imul
pop
divl
fs
jp
iret
in
mov
aas
pop
les
aas
push
mov
jl
fisttpl
mov
inc
sbb
shlb
shrl
pop
lret
pop
in
dec
pop
and
sbb
mov
fincstp
insl
scas
jne
pop
and
sub
repnz
pop
push
push
imul
xchg
add
xor
jle
pop
sub
dec
sti
mov
nop
push
arpl
cmp
lods
xor
cld
into
pop
or
mov
dec
sbb
lcall
shr
adc
jns
add
loopne
sub
push
insb
xor
push
enter
pop
bndstx
ss
filds
cld
add
xchg
sbb
xchg
mov
cmp
jmp
lcall
fldl
jecxz
ja
out
dec
pop
and
push
inc
sub
add
mov
out
and
cwtl
rcrb
jmp
insb
aad
cmp
mov
sub
xchg
inc
xchg
adc
push
mov
iret
in
mov
sbb
out
dec
fiadds
jns
fwait
in
fists
pop
ja
mov
fsts
lret
cmpsl
jp
ret
mov
cwtl
repnz
jo
mov
stos
data16
and
sbb
movb
inc
dec
jmp
mov
push
outsl
movsb
or
aad
push
addr16
mov
jo
gs
mov
mov
pop
js
rorl
xchg
pop
inc
cld
add
aam
imul
inc
mov
add
jecxz
ljmp
cmp
push
adc
and
dec
push
addr16
sbb
daa
xchg
sub
insl
push
pop
adcl
addr16
sbb
xchg
cli
data16
das
dec
popa
inc
int3
jbe
sub
in
mov
and
frstor
test
cltd
cmp
cmp
addr16
cmp
in
jg
jnp
imul
je
jbe
je
rorb
add
dec
aaa
in
scas
push
jg
jmp
push
push
push
xorl
jo
sbb
pop
dec
lds
stc
das
clc
mov
das
xlat
std
cmp
sub
jmp
dec
push
adc
data16
fiadds
add
jl
sub
daa
cmp
test
push
int3
outsl
das
sub
mov
pushf
pop
fcomip
add
fistpll
sti
rcrl
mov
cltd
xlat
stos
ja
push
or
jp
mov
jge
hlt
subb
cwtl
jmp
aas
ss
lret
inc
add
sub
mov
jbe
cli
aas
jle
push
jge
stos
mov
pop
mov
push
push
adc
inc
sbb
and
xorb
fidivl
add
sbb
mov
std
cmp
push
pusha
or
sti
lret
push
and
in
fucomip
mov
test
lock
push
mov
push
push
std
lock
xchg
dec
push
pop
lcall
jo
and
dec
pop
mov
push
mov
inc
xchg
lds
out
call
mov
lods
pop
sub
shl
sbb
pop
aam
xor
pushf
into
inc
xchg
out
cmp
xor
pop
mov
pop
ja
pop
pusha
mov
xor
push
popa
outsb
ljmp
stos
or
jb
xchg
insb
fsubs
lcall
push
inc
pop
mov
dec
mov
pop
clc
sub
xor
mov
mov
sub
je
dec
fstps
pop
fimuls
mov
push
iret
scas
mov
cmc
loope
jge
inc
mov
push
mov
lock
xor
out
dec
and
sti
cmc
test
fisubrs
and
mov
test
leave
push
fcomps
fisttpl
fcoms
cs
push
push
jge
and
imul
sub
test
addr16
call
dec
sbb
mov
mov
pop
mov
jnp
add
repz
idiv
push
inc
dec
pop
mov
test
fdivs
ss
test
scas
leave
out
cmp
repz
nop
std
inc
sti
test
outsb
roll
sbb
and
stc
gs
sub
mov
std
fistps
xor
jno
cs
mov
fisttpl
das
inc
fwait
or
lods
lods
adcl
loop
sti
cwtl
mov
das
movups
mov
punpckhbw
mov
adc
push
mov
jecxz
daa
iret
xchg
out
pop
outsb
add
out
movsb
das
jp
push
stc
adc
aam
es
cmp
insl
push
movsb
dec
push
and
mov
pop
scas
out
xchg
mov
mov
out
in
adc
jno
loope
ret
mov
sub
dec
sbb
pop
mov
mov
xchg
mov
push
fildl
insl
cmpl
lds
movsb
in
fiadds
ds
lcall
insl
bound
lods
lock
sbbb
pop
push
dec
xchg
push
fwait
add
shlb
into
adc
xor
adc
and
adc
jbe
call
addb
xor
inc
jecxz
popf
mov
sbb
cmp
lahf
arpl
and
push
sbbl
adc
fwait
jb
inc
mov
mov
data16
pop
ret
out
and
or
cwtl
mov
cs
sbb
mov
or
adc
cmp
test
xchg
aad
push
sahf
aaa
and
outsl
imul
add
add
imul
add
pop
jbe
or
xchg
sub
sahf
stc
pop
sub
movb
xor
dec
add
cwtl
std
add
pop
incb
dec
decl
xchg
push
cmp
aam
pop
sub
fdiv
aaa
rclb
mov
xchg
shll
andl
ljmp
ret
lret
and
xchg
adc
push
mov
aad
add
addb
aas
dec
popa
aad
rcrl
outsl
aas
jecxz
dec
xor
or
xor
dec
mov
xor
movsb
aad
mov
ret
pop
jp
xlat
je,pt
test
jmp
xor
out
fistpll
jg
and
movb
or
mov
sub
movsb
adc
roll
les
loop
cli
cmpsl
shrb
mov
fldcw
xchg
add
cmp
adc
rcr
lahf
dec
in
loop
repz
ror
loope
add
or
loope
push
mov
or
or
sti
mov
pop
in
sbb
aam
xor
pop
filds
pop
movsl
push
add
jecxz
fwait
sub
scas
jo
inc
rcll
jno
push
out
pusha
push
xor
mov
pop
into
pop
loopne,pn
inc
push
sbb
shll
pop
and
enter
fs
add
sti
movsl
mov
incb
and
and
and
sub
mov
cmc
lock
and
and
sub
js
sbbl
or
add
sbb
loop
into
sbb
jns
mov
mov
aad
mov
out
ds
pop
pop
push
sub
pop
jg
icebp
jbe
cmp
mov
adc
pop
jp,pn
jle
into
sbb
orb
iret
xchg
sub
mov
popf
sahf
andb
stos
adc
mov
fadds
das
loop
mov
fwait
jle
mov
dec
cld
pop
push
jle
push
push
movsl
loopne
call
inc
pop
add
mov
push
lret
push
cmp
cmp
shrb
movlps
bound
mov
cmpsl
in
fisttpll
sbb
sbb
adc
daa
cmp
dec
pop
aas
test
mov
push
orb
xor
daa
in
fcomps
xchg
fstps
mov
outsl
sahf
sbb
fidivrs
lock
aam
mov
sbb
vminps
jmp
sbb
loop
mov
insb
jae
scas
sarb
in
xchg
push
rorl
scas
cmc
dec
sub
jg
inc
mov
xchg
js
dec
movsb
popa
or
xor
mov
and
pop
sbb
mov
call
inc
jmp
sbb
sub
or
and
repz
js
jae
xchg
sbb
popf
mov
decb
test
arpl
or
aas
gs
js
in
cmp
pop
arpl
loop
lock
mov
cmp
les
mov
mov
lock
aaa
jp
js
movsb
fcomps
xchg
sarl
dec
insl
cmpsb
out
push
lcall
jl
or
mov
pop
or
movsl
or
add
push
add
pop
mov
push
mov
insl
or
jecxz
out
inc
jge
aas
je
fdivrl
rcr
loop
jle
and
movsb
pop
call
jmp
and
dec
popa
pop
sbb
jp
aam
xchg
sbb
push
xor
xchg
pop
mov
add
rorb
mov
ss
sbb
or
out
mov
add
dec
add
das
xor
push
cmp
mov
cmp
mov
decb
push
jge
xchg
roll
dec
outsb
aaa
addl
add
dec
xor
adc
sub
das
sbb
pop
xchg
outsl
test
inc
in
movsl
mov
scas
pushf
sbb
xchg
outsl
pushf
inc
rolb
aas
mov
pop
lahf
mov
repnz
jbe
pop
outsl
xor
test
cld
jno
or
out
and
sti
rcrl
inc
xor
xor
inc
std
xor
mov
push
or
lock
mov
fadds
push
and
aaa
mov
rcrb
and
dec
add
mov
sub
insb
add
call
mov
in
imul
mov
inc
test
mov
sub
xor
xchg
xchg
pushl
jle
lahf
loopne
in
push
mov
fidivs
sti
std
loop
mov
push
fstps
jb
fldl
aad
push
xor
nop
push
out
aas
pop
and
jg
mov
int3
fsubs
jb
jmp
into
mov
inc
pop
mov
cmp
stos
call
add
lahf
mov
xchg
bound
pop
xchg
push
sbbb
mov
adc
scas
subl
pcmpgtw
dec
inc
mov
ret
movlps
repnz
fistps
or
dec
inc
mov
mov
cmp
push
fdivp
daa
mov
xlat
xchg
mov
and
idivl
fisttpll
and
pop
inc
shlb
leave
in
aad
lahf
aas
xchg
adc
testb
jmp
outsl
mov
xchg
cmp
lea
push
lss
xchg
dec
add
mov
pop
sub
ret
cmp
jg
pushl
ljmp
sbb
lds
inc
das
adc
addr16
xor
in
push
sti
fwait
pop
mov
test
or
paddq
rcll
jb
xor
adc
mov
or
xchg
rorb
popa
xor
out
sbbl
sbb
mov
and
js
shl
or
movsb
imull
jno
int3
mov
lods
xchg
es
lret
mov
out
inc
add
stc
mov
and
out
out
or
and
shll
sbb
add
mov
cmp
nop
jno
fwait
cs
sub
lahf
mov
rorb
adc
mov
jmp
jae
ds
xor
aas
or
leave
scas
dec
leave
adc
lds
xor
pop
inc
nop
jge
jecxz
testb
imul
push
rcrl
sbb
in
jmp
fcoml
push
push
fimull
cmp
loope
cmp
fdivrl
sbb
add
adc
bound
lods
out
out
adc
mov
and
mov
xlat
inc
les
jmp
mov
cmp
cmpsb
pop
in
add
iret
jb
imul
inc
push
jge
cltd
dec
push
ret
push
jp
mov
sbb
inc
mov
push
jae
std
xacquire
out
clc
sbbl
call
clc
inc
sbb
inc
fdivr
sbbb
push
or
ljmp
dec
inc
and
scas
fwait
sbb
ficoms
imul
repz
and
mov
ljmp
sub
mov
or
sbb
or
push
lret
push
test
dec
push
jmp
mov
push
es
insb
lcall
lahf
fwait
xor
jne
bound
dec
push
sahf
movsl
or
cmpsl
daa
mov
scas
loope
push
push
sbb
mov
div
lods
pop
mov
ljmp
fimull
adc
mov
clc
int
jb
pusha
mov
ljmp
idiv
out
out
vmovd
xchg
mov
sub
leave
pop
nop
cwtl
mov
scas
mov
jns
cvtps2pd
mov
pop
inc
sbb
movsb
or
xor
sub
push
pop
fwait
imul
outsb
push
aaa
lock
mov
cli
xor
les
and
jle
dec
mov
pop
xchg
xchg
movsl
cltd
fdivl
aad
fs
xor
or
shlb
jl
negl
adc
insb
dec
xchg
inc
mov
inc
mov
cmp
call
in
adc
dec
ret
mov
jge
addr16
test
ss
out
xor
mov
lods
xlat
and
inc
orl
jp
mov
cmpsb
jb
xlat
ss
in
and
jmp
shll
adc
xchg
mov
xor
dec
xchg
push
jmp
neg
pop
mov
xchg
pop
cmc
aaa
xchg
pop
jle
ljmp
mov
add
sub
lea
mov
lods
pop
push
xor
dec
es
mov
test
push
lods
pop
jnp
dec
pop
sti
loopne
jmp
pop
push
xchg
xor
sbb
xor
faddl
daa
jge
ja
pushf
jb
test
push
mov
int3
lea
aad
scas
mov
test
cwtl
dec
jg
mov
jg
mov
pop
fs
int3
scas
pop
inc
dec
lahf
hlt
insl
out
adc
dec
push
mov
arpl
insl
add
leave
sub
dec
fists
sub
stc
mov
push
mov
pusha
inc
pop
push
pusha
lds
aam
sbb
sbb
pop
gs
cmpsb
adc
or
add
dec
stos
mov
outsl
loope
xor
loope
jmp
adc
adc
outsb
stos
adc
xchg
ss
mov
pop
add
and
call
aad
and
inc
adcl
in
mov
or
push
mov
loopne
fucomi
int3
cltd
stos
mov
ret
repnz
or
sti
arpl
mov
repz
enter
pop
dec
out
sub
cmp
push
aad
testb
nop
jmp
pop
jns
jge
cmp
nop
adc
lret
and
test
ja
cmp
ja
cmpsl
xor
and
lret
pusha
stos
popf
clc
mov
jle
loope
aad
sub
add
cmp
jb
add
sbb
xchg
inc
cmp
std
les
hlt
cmpsl
cmp
sbb
pop
shlb
movsl
fldl
out
les
cld
jl
mov
mov
mov
js
int
or
aad
adc
dec
push
push
mov
jnp
stc
xor
lea
rcll
dec
ja
pop
shll
pop
add
in
fldcw
test
pusha
filds
jl
lea
data16
mov
inc
xor
and
gs
inc
sti
dec
add
cld
ret
pushf
stc
cmp
mov
cmpsb
xchg
rcll
mov
test
and
sbbl
jae
adc
mov
test
mov
test
iret
ds
test
xor
cmpsl
fprem
pop
addr16
js
pop
adc
sub
or
sti
hlt
pop
cltd
push
mov
lds
loope
ret
push
into
cmp
sub
mov
cmp
push
dec
cwtl
or
imul
das
das
fwait
mov
push
and
and
jno
dec
xchg
aas
ret
cmp
push
dec
sub
lods
arpl
mulb
xchg
mov
dec
and
outsb
cwtl
mov
sbb
add
mov
aam
movsl
xchg
stc
mov
mov
pop
test
inc
pop
adc
jb
inc
das
aad
xchg
sahf
and
jge
push
adc
push
or
adc
incl
xchg
add
jnp
sbb
pop
or
mov
leave
add
xor
out
data16
addr16
jo
add
scas
clc
loope
pop
cltd
or
mov
pusha
mov
add
inc
mov
sub
and
fdivs
jnp
in
jb
jge
mov
xchg
sbb
icebp
insl
es
push
flds
js
divb
cmpsb
dec
jle
xchg
push
sbb
ljmp
mov
dec
test
out
cwtl
xchg
pop
jg
jge
inc
mov
push
inc
in
dec
imul
xchg
jmp
mov
cmp
popf
adc
cs
sbb
clc
inc
stos
mov
repz
test
sti
jns
ret
test
lea
add
insb
jbe
cmpsb
xor
cmp
shll
sahf
sbb
repz
cmp
xchg
mov
fwait
and
lret
shr
fsubp
sub
dec
inc
sbb
mov
and
scas
jmp
jl
aam
adc
flds
sarl
js,pt
add
sub
addb
jl
mov
stos
test
jbe
push
aam
test
adc
xor
aaa
jae
mov
mov
arpl
mov
scas
sbb
xchg
cmc
xorb
movsb
ds
xchg
repz
cmp
push
add
clc
pop
out
push
scas
push
and
cli
std
ljmp
and
cmpsb
cmp
push
jg
jmp
daa
outsb
mov
loop
fadds
aas
dec
jmp
sub
stos
mov
xchg
push
mov
sub
xchg
inc
pop
jns
adc
loop
push
or
mov
daa
or
dec
arpl
shrb
ss
xor
dec
adc
sub
lock
jne
mov
and
add
inc
mov
add
sbb
mov
sub
push
cmpsl
pop
inc
cmpsb
mov
sbb
lcall
pop
sbb
jno
mov
shl
fmull
arpl
movsb
or
mov
daa
movsb
mov
leave
inc
dec
shll
insb
insl
mov
cli
cs
std
cmp
stc
inc
jmp
sub
inc
fidivs
inc
lret
pop
fidivrs
ja
cmp
fdivr
inc
mov
movsb
xchg
sarb
add
xchg
inc
jns
push
mov
mov
aaa
jbe
mov
ss
enter
adc
movsb
and
mov
in
mov
jmp
and
mov
dec
push
cmp
mov
stc
pushf
fld
call
fidivrs
xor
mov
inc
cmpsb
inc
scas
add
mov
xchg
mov
jnp
jl
add
pop
imul
cmp
fs
adc
aas
and
dec
mov
fs
and
add
ja
imulb
and
insl
daa
ret
mov
lahf
lret
lods
int3
movsl
and
xor
mov
mov
ja
stos
xchg
adc
sub
jecxz
jno
push
sub
lret
cmpsl
push
sub
inc
addr16
aaa
std
cmp
insb
shl
test
mov
push
mov
add
pop
fldl
jnp
jle
sub
lcall
lods
mov
mov
leave
xchg
inc
mov
xchg
xchg
movsl
fcoms
daa
mov
mov
das
in
push
icebp
sub
jmp
les
movsl
sub
and
sbb
jo
scas
aad
imul
add
in
cmp
push
xlat
das
mov
pop
ljmpw
push
repz
andb
icebp
sub
sbb
rcrb
js
insb
dec
aaa
xchg
and
or
or
cmp
push
out
insl
xor
lea
in
fidivrl
mov
daa
imul
mull
adc
mov
dec
rcr
aad
mov
mov
push
xchg
mov
jg
sbb
cmpsb
adc
popf
into
jnp
jno
xchg
pop
sub
pcmpgtw
in
lods
push
scas
cmp
int3
pop
pop
sbb
addr16
fdivl
popw
xor
push
xchg
add
adc
lds
sbb
popl
add
movsl
push
push
fs
lcall
pop
sub
stos
outsl
mov
cwtl
mov
mov
sbb
jp
or
sub
imul
dec
xchg
dec
fisubs
mov
push
pop
jl
sahf
out
cmpsb
arpl
push
mov
movsl
jp
scas
jno
lret
jg
add
jb
loopne
and
xchg
daa
mov
bound
dec
les
adc
mov
jl
idiv
adcb
sbb
movsb
jg
sub
mov
iret
popa
jmp
xchg
hlt
fdivrp
sub
loop
and
fsts
mov
roll
xchg
fisttps
mov
adc
arpl
mov
int3
ret
stos
mov
fistl
rclb
test
outsb
cld
push
cwtl
add
fisubrl
loop
jb
dec
lea
and
mov
push
pusha
mov
xchg
mov
cli
jbe
js
push
inc
pop
hlt
push
cmp
xchg
push
push
mov
jb
pop
add
inc
mov
sub
aaa
sbb
jbe
insb
mov
add
inc
or
sar
les
fbld
fildll
jns
out
ds
inc
je
xchg
call
fimuls
sbb
mov
push
dec
out
cmp
nop
sti
dec
sub
pop
adc
mov
je
aam
pushf
stos
dec
sbb
dec
pusha
adc
flds
pop
call
or
pop
sbbl
push
outsb
movsl
daa
into
shl
mov
outsl
insl
fldln2
dec
out
ljmp
pop
repnz
jg
cmpsl
enter
push
je
sbb
xor
cmc
out
sbb
movsl
imulb
ds
pop
shlb
insl
sub
scas
iret
ss
imul
rclb
jo
xor
pop
add
aas
inc
jl
jne
pop
jo
xchg
lds
shl
ucomiss
js
add
xchg
xor
shlb
jae
inc
int
mov
dec
mov
xchg
or
sbb
xor
jecxz
daa
fldenv
jp
out
and
cmc
xlat
repz
cmpsb
jle
in
add
in
sub
and
mov
mov
icebp
arpl
repnz
xchg
std
scas
loope
push
mov
leave
mov
mov
and
add
fwait
mov
addr16
mov
fisubl
mov
testl
push
xchg
dec
adc
fnstenv
lds
loop
sbb
sbb
mov
imul
and
fisubl
test
inc
adcb
out
lock
les
xor
jb
or
sub
ljmp
mov
scas
mov
or
fs
outsb
push
and
and
lea
inc
cmp
leave
push
stos
ss
arpl
jbe
ror
pop
sahf
ja
lahf
sbb
xchg
call
sub
dec
decl
sarb
dec
shrb
cmp
mov
xchg
mov
mov
push
xor
inc
inc
outsb
scas
jle
mov
inc
jns
orl
imul
jl
sub
out
aam
sarl
enter
rorb
fwait
add
push
fbld
push
sub
xchg
add
sbb
jmp
xchg
rcrb
icebp
jo
lods
inc
int
icebp
cld
icebp
fldcw
push
jns
pop
fisubrs
stos
or
mov
mov
sbb
jno
and
push
out
mov
mov
xor
cli
subb
add
mov
mov
repnz
aam
cmp
stos
sbb
shlb
ds
ret
fs
mov
mov
mov
inc
and
std
cli
push
xchg
gs
dec
fldcw
jo
jnp
out
mov
adc
push
das
bound
cmp
mulb
push
jg
mov
and
les
push
daa
adc
out
mov
sahf
inc
cmpsl
xchg
push
adc
pop
mov
popa
outsb
fwait
mov
rcll
sbb
cmp
fisubl
sbb
mov
rcr
js
mov
ds
stos
aas
jo
inc
scas
in
cwtl
jp
sub
repz
fwait
dec
cmc
mov
ss
cmp
jns
push
out
pop
pop
jecxz
mov
sahf
cli
pop
cmp
dec
shll
jae
subl
aaa
mov
mov
gs
dec
cmp
addl
or
push
mov
cmp
jae
add
dec
mov
cmp
jmp
ficoms
test
pop
mov
sbb
inc
dec
add
pop
out
pop
sbb
add
ret
ja
sti
imul
push
dec
or
mov
mov
es
sub
imul
sub
jbe
rorl
sbb
cltd
aam
mov
sub
cwtl
pop
adcb
aas
cltd
and
jle
es
iret
and
divl
add
xchg
cmpsb
adc
push
ds
loopne
out
push
add
cmpsb
sbb
and
out
sti
add
scas
ds
cltd
ror
popf
mov
fisubl
pusha
lea
adc
xlat
mov
xor
dec
imul
jns
add
add
loopne
shl
jne
add
out
aam
push
int3
and
cmp
nop
xchg
inc
loope
lcall
test
shrl
xchg
inc
mov
arpl
add
or
sub
loopw,pt
pop
movsl
fbld
cmpsb
icebp
sbb
out
sbb
in
aas
out
inc
sbbl
lock
out
jo
sub
jg
imul
mov
test
cmp
cs
push
jns
push
inc
adc
ffree
call
lock
cmpsl
add
mov
add
mov
aam
add
imul
mov
into
nop
fnsave
sbb
ljmp
mov
xlat
cmp
dec
ds
leave
push
add
pop
jae
mov
mov
pusha
push
pause
movsl
mov
add
mov
cld
xchg
cmp
jge
xor
js
mov
jne
clc
in
les
fscale
test
test
sahf
xchg
pushf
mov
xor
push
cmpsb
and
dec
push
adcb
push
lock
add
out
mov
into
fwait
cmp
loopne,pn
into
push
fisubs
pushf
xor
fists
and
fwait
and
mov
or
scas
sub
sti
lret
cwtl
fildl
stos
lret
add
and
sub
lahf
cmpsl
dec
or
dec
addb
repz
sbb
insb
pop
ret
pop
cmp
test
mov
lock
jp
test
sub
sbb
daa
out
lods
outsl
sbb
shl
mov
jl
or
jno
popa
push
sub
lcall
negl
arpl
inc
mov
jne
sub
sub
pop
arpl
lea
lahf
xorb
inc
clc
cmp
aas
in
test
out
sub
pusha
jnp
or
enter
jb
lods
icebp
lcall
add
fnstenv
cmp
rorb
pop
jecxz
aaa
mov
mov
push
stos
add
push
loop
sbb
aam
cld
mov
mov
test
cwtl
cmp
repz
lods
or
movsb
xor
xchg
mov
push
cld
push
mov
xchg
sarb
xchg
sar
push
call
fidivl
movsl
les
pop
gs
call
cmp
xor
jae
mov
push
mov
pop
dec
jecxz
pushf
mov
ret
imul
ja
rclb
and
jle
repz
and
test
jno
cmpsb
movsl
inc
sbb
xchg
ja
ja
out
mov
loope
or
xor
adc
imull
ja
jbe
jl
mov
not
lret
imul
addr16
push
out
push
leave
lcall
fdivrl
inc
data16
popf
insb
or
repz
sub
xchg
pop
sbb
mov
xchg
xorl
mov
adc
mov
pshufw
shlb
pushf
push
stos
cs
jb
xchg
xlat
mov
das
repnz
mov
xchg
int
add
sbb
sahf
outsl
lahf
fwait
dec
ds
add
cld
xchg
and
pop
enter
fbstp
jl
icebp
arpl
cld
xor
pop
ret
scas
out
add
or
lds
mov
add
bound
pop
sub
lods
mov
popf
push
inc
adc
sub
sub
jge
in
xchg
cmc
mov
mov
sub
es
fstps
pop
rclb
je
dec
pop
fdivr
adc
adc
mov
hlt
ret
mov
outsl
movsl
add
or
sbb
sbb
push
jno
lahf
adc
mov
ficoml
cwtl
ja
inc
cmc
jecxz
jno
dec
add
push
addl
sbb
dec
sub
clc
mov
push
push
dec
push
jmp
popf
aam
jae
int3
ljmp
jb
inc
push
aad
mov
dec
andl
dec
sub
rcl
cmpsb
scas
sub
inc
xchg
push
mov
enter
or
cmp
and
mov
nop
das
adc
lea
inc
push
fidivl
sub
xchg
xchg
shll
dec
mov
aam
inc
test
add
repz
jnp
mov
inc
add
mov
mov
pop
inc
lcall
push
and
pop
sub
stos
pop
jg
addr16
cli
jb
cmpsl
shll
in
les
mull
push
pop
mov
jmp
mov
pop
test
jl
push
xor
iret
jno
hlt
clc
subb
in
cmc
clc
aam
xchg
in
adc
pusha
outsb
cmp
stos
ds
mov
aam
and
cmp
push
mov
out
daa
mov
pop
dec
sbb
cmp
pusha
mov
cmpsb
and
inc
jbe
cmc
insb
mov
or
jmp
jge
adc
sbb
pop
mov
testb
xor
dec
xchg
lods
or
cmp
mov
sbb
adc
mov
lcall
jb
jle
jecxz
das
rclb
inc
je
cmp
gs
out
xchg
rol
pop
lret
mov
loopne
adc
xlat
cmc
testb
push
out
sbb
mov
leave
testb
aam
push
ficoml
loop
rcrb
dec
cmpsb
int
mov
jg
stos
xchg
xchg
pop
push
xchg
mov
mov
jle
sbb
xor
push
jp
sbb
and
icebp
mov
sbb
lahf
ret
jns
arpl
mov
cmp
jo
cmp
popf
xchg
sub
mov
mov
add
jp
and
mov
aas
lock
or
sub
sbb
mov
into
add
pop
wrmsr
push
fwait
lcall
pusha
fstl
push
xor
dec
and
cmp
pushw
cld
inc
rcr
aas
pop
nop
mov
add
mov
adc
xor
jo
xor
fs
imul
stos
push
cld
ss
lods
popl
mov
movsl
sub
fwait
jne
jecxz
add
cmp
stos
and
lds
in
insl
adc
or
jg
push
jmp
xchg
notl
subl
pop
out
jbe
out
shlb
faddl
inc
pop
or
xchg
icebp
dec
mov
fsubs
clc
and
lahf
sahf
sub
pop
cltd
push
repnz
xor
inc
pop
imulb
call
ljmp
dec
xor
push
aad
and
push
out
inc
xchg
inc
push
xor
jmp
mov
mov
cs
mov
ret
push
add
mov
fmull
cmp
inc
pop
mov
cmc
sub
mov
push
push
adc
cmp
cmp
loope
in
mov
stos
jecxz
jns
jb
xchg
adc
ljmp
inc
test
or
outsb
mov
aam
push
pop
cmp
or
mov
enter
push
push
xor
mov
adcl
shlb
inc
lcall
aas
xor
cltd
mov
insl
xchg
popw
ss
sbb
push
aam
mov
aaa
inc
cmp
std
stos
push
push
push
fisttps
mov
enter
jl
out
xor
incb
inc
mov
repz
fdivrl
lea
popf
and
es
or
mov
cld
je
repz
cmp
mov
repnz
push
and
repz
clc
or
pop
jne
jle
and
mov
adc
jmp
mov
mov
sub
data16
sbb
pop
lods
js
fadds
xchg
leave
add
or
mov
not
inc
movsl
xchg
int3
aas
jno
push
ret
xor
ss
fistpl
jns
imul
jecxz
dec
cmp
sub
rcr
ljmp
xor
shrb
sbb
inc
inc
test
pop
add
push
jns
popf
popa
sahf
pop
aad
insb
inc
pop
mov
add
cmpsb
add
icebp
adc
pop
bound
repnz
gs
mov
mov
mov
ret
repz
push
mov
jle
lret
fnsave
stc
xor
and
jb
lcall
bnd
lcall
jg
pcmpeqw
outsl
add
dec
adc
call
out
or
insb
clc
mov
sub
pop
xchg
sub
repnz
icebp
xor
pop
mulb
movnti
es
mov
fidivrl
lods
cmp
inc
aaa
setl
pop
fsubr
push
popa
shlb
bound
jmp
xchg
jns
push
repz
pop
fldt
inc
fcom
sti
add
ret
mov
leave
rcrl
mov
xor
xchg
jmp
ror
sbb
cmp
sar
movsl
adc
mov
push
imul
cmpb
xor
es
fldl
or
insb
loopne
dec
leave
into
mov
test
jl
sbb
mov
rcll
inc
enter
pop
mov
jp
decl
icebp
imul
adc
lds
push
jno
sbb
pushf
aas
cli
lods
loope
repz
inc
mov
jecxz
lods
loop
add
rcrl
into
xchg
xchg
in
push
or
cltd
scas
sub
das
add
xor
cli
test
stos
cmpsb
loop
cmc
bound
and
imul
fistl
mov
jle
dec
ja
inc
in
mov
jmp
sbb
dec
dec
pop
arpl
leave
test
push
xchg
ficomps
cmp
pop
ficoml
pop
aaa
daa
xorl
decb
lcall
das
cs
ret
jns
inc
or
inc
adcl
inc
scas
and
pop
jae
jg
in
imul
jno
fs
mov
in
jb
fists
mov
cli
hlt
in
xchg
outsb
xlat
fistps
imul
cmp
xchg
cmp
jg
movhlps
push
cmp
pop
nop
mov
orb
outsb
outsl
enter
push
pop
mov
out
in
mov
cmc
cs
les
adc
sbb
mov
push
aad
aam
addr16
pusha
xchg
add
push
icebp
or
mov
fiadds
jae
cmp
adc
enter
lret
int
jg
fwait
inc
fimuls
xorl
iret
enter
inc
hlt
pop
into
ljmp
or
hlt
push
loop
lea
andl
jmp
add
push
lds
test
or
out
ljmp
add
pop
jecxz
xchg
jmp
mov
adc
shlb
stc
lcall
scas
pop
insl
inc
dec
xor
cwtl
and
add
in
out
mov
push
sub
sbb
jmp
inc
mov
testb
scas
icebp
fnstenv
cmpsb
jnp
jb
xchg
nop
icebp
in
dec
leave
pop
mov
jns
sub
icebp
mov
or
out
scas
lods
enter
lea
fidivrs
sahf
sbb
push
pusha
xor
sahf
sti
icebp
cmp
sti
mov
xor
scas
mov
in
in
jmp
arpl
into
fsub
xor
fcos
iret
out
push
mov
ficoms
rolb
xchg
jge
mov
inc
jns
sub
roll
addr16
xchg
int
test
shr
in
test
ss
xchg
add
mov
addb
repz
stos
out
xor
add
mov
cmc
mov
or
cmp
js
sub
loop
pop
sub
sahf
mov
push
rorb
stos
dec
inc
dec
mov
cmp
aad
jnp
call
scas
cmp
mov
mov
mov
pop
mov
sbb
jmp
addr16
pop
cs
cmp
sbb
fsubl
xchg
shlb
jl
jne
es
fcomp
popf
cmp
sbb
mov
call
mov
cmpsb
inc
xorl
or
xor
dec
ret
loop
dec
and
cmp
pop
mov
test
add
or
xor
lods
js
sub
mov
sub
mov
scas
sti
ljmp
bound
xor
fsts
and
clc
push
jp
subl
jmp
push
push
lods
sbb
dec
push
pop
mov
stos
js
sbb
pop
jg
adc
rcr
out
mov
pop
inc
mov
fldl
push
fwait
jg
je
mov
fcoms
dec
shrb
jb
fld
shrl
lahf
mov
lret
mov
sub
jp
je
mov
mov
jae
cld
adcb
fwait
or
imul
or
add
cmp
mov
xor
insb
repz
xor
pop
dec
fiaddl
pop
or
xlat
mov
mov
aad
movsl
mov
jb
mov
loop
jle
rcl
ss
pop
mov
xor
repnz
jge
jmp
add
xor
sub
and
jbe
in
sbb
dec
fldl
outsl
pop
jmp
inc
xchg
enter
imul
cmp
jg
iret
mov
inc
repnz
mov
aaa
cs
push
jno
pop
sar
adc
cmpb
xchg
pop
ss
lock
mov
adc
shll
sub
inc
sbb
jae
lods
and
push
aas
lock
add
jns
out
sahf
jno
adc
lods
pop
jno
call
std
or
jne
mov
dec
aam
jo
xchg
test
inc
adc
push
popa
jnp
mov
in
fucomp
or
cmp
push
in
pop
dec
mov
out
mov
lds
dec
ret
loopne
jns
lret
xor
and
jge
imul
test
mov
shrb
pop
jb
cltd
mov
and
stos
daa
jecxz
cmp
dec
sbb
out
test
flds
xor
lahf
std
aam
int
sub
loop
ret
lods
addr16
outsb
jae
or
sbb
cmp
ror
xchg
addr16
lock
fwait
ds
call
fadds
and
add
xor
add
and
xor
mov
mov
push
mov
sbb
cmp
je
sbbl
adc
fs
cmp
xchg
verr
pop
mov
lret
xchg
add
repz
mov
and
push
jp
out
lock
cwtl
xor
gs
cvtps2pi
inc
mov
sahf
rorl
das
jno
sbb
dec
into
add
shrb
push
sahf
nop
lock
cmp
in
mov
add
fistl
clc
test
xchg
lods
mov
es
test
pop
aaa
jae
cmp
scas
cmp
cmp
popa
mov
les
jmp
icebp
sbb
mov
xchg
or
mov
sub
filds
sub
push
xchg
push
adcb
sbb
pop
data16
jne
sub
scas
movsl
pusha
test
ja
sbbb
sbb
mov
xlat
jnp
sub
push
add
addr16
notl
xor
mov
ffreep
and
cltd
jne
push
jmp
test
mov
push
repnz
fildll
in
jecxz
cmc
jmp
inc
mov
add
inc
add
add
enter
push
aas
fdivrl
test
jmp
jo
fistps
icebp
jno
cmp
pusha
jle
out
sbb
mov
cli
pop
push
mov
jo
pushf
aam
jns
mov
or
jg
push
mov
xlat
ret
push
or
and
and
jge
sahf
add
lahf
lcall
sti
mov
in
mov
inc
popf
push
xchg
gs
fwait
aas
add
std
lcall
push
xchg
idivb
lock
cmpsb
test
inc
inc
jmp
imul
mov
mov
rcrl
hlt
cmpl
push
outsb
xor
outsb
lcall
ss
jmp
pusha
xchg
add
mov
adc
sbb
xor
lds
rcrb
arpl
and
sbb
dec
or
aaa
in
mov
insl
sti
dec
mov
sbb
js
cld
inc
pop
push
ret
scas
test
add
stc
cmp
notl
jg
addb
scas
dec
imul
fiadds
lea
mov
push
sub
test
and
xor
pop
repnz
clc
mov
add
scas
sbb
dec
clc
cmp
pop
pop
or
sub
out
mov
jmp
jp
stos
and
sub
pop
mov
aam
push
inc
scas
sbb
sub
addr16
xchg
pop
add
stos
inc
data16
push
addr16
pop
jbe
imul
lahf
pop
ror
push
inc
push
in
adc
pushf
jecxz
mov
rcr
sub
cmpsl
cmp
adc
ret
xchg
ljmp
shrb
sbb
out
add
enter
xchg
inc
adcb
loop
lods
cmpsl
pop
in
sti
test
or
std
ds
data16
stos
es
movsb
sarb
push
das
push
push
push
fbld
jbe
adc
fcomip
sbb
aas
lcall
cmp
jle
xchg
cmpsb
insl
cmp
movsb
or
fcmovnu
jl
test
mov
daa
ret
jmp
lea
sub
xor
aad
std
mov
sub
fldcw
push
ret
mov
popf
cmp
out
sbb
mov
daa
cmp
popf
mov
adc
test
adc
fwait
cmp
scas
mov
test
hlt
pop
aas
std
sahf
push
cmp
jmp
xchg
cli
push
test
cwtl
ljmp
adc
mov
pop
and
shlb
std
or
js
fsubrs
pop
shlb
jp
out
lea
jno
lahf
xchg
popf
les
pop
dec
and
pop
ljmp
pusha
push
loop
pop
repz
and
cmpsb
adc
mov
fwait
xchg
jmp
cltd
cmc
mov
dec
jecxz
inc
shl
data16
mov
fidivs
stos
stos
bound
cmp
inc
jno
leave
jb
addr16
dec
fisubl
das
into
rcrl
jo
sub
loopne
push
or
test
sub
inc
incb
loop
add
push
sbb
mov
adc
ficoml
loop,pn
mov
xor
std
mov
xor
addl
dec
imul
fistps
mov
jecxz
mov
outsb
dec
xor
out
scas
inc
and
loop
out
ficoml
mov
sbb
adc
mov
inc
loopne
xor
sub
jle
rolb
xchg
add
dec
lock
das
jecxz
inc
dec
nop
adcb
mov
pop
cli
adc
inc
lods
inc
cs
mov
leave
inc
aaa
ja
orb
fwait
inc
add
inc
mov
mov
push
mov
je
inc
jecxz
js
outsb
imul
and
sti
jnp
loope
rorl
in
popa
dec
or
inc
pop
inc
mov
inc
xchg
inc
mov
inc
mov
mov
rcll
les
out
test
lock
inc
and
adc
outsl
adc
loop
jb
fdivrl
add
ja
pop
scas
cld
dec
push
lods
sbb
sti
push
or
xchg
ds
fcomps
jle
dec
mov
cmp
pop
ljmp
jl
cmp
int
in
jle
gs
adc
xchg
xchg
sub
add
leave
subl
dec
ret
cs
sbb
jo
in
xorl
inc
push
outsb
loope
add
sbb
mov
dec
xchg
lea
cmpsb
ret
inc
cmp
push
add
pop
add
jne
or
rorb
fnstcw
mov
and
lret
cltd
fbld
pop
cmp
mov
mov
sub
into
mov
sbb
loopne
push
add
punpckhdq
into
xor
les
mov
push
loopne
mov
mov
std
mov
sbb
addr16
pop
and
mov
mov
cli
pop
stos
ja
sbb
inc
repnz
icebp
and
add
sbb
loope
xor
push
popa
rcll
pop
in
jno
xor
inc
cmp
leave
xor
fists
mov
xor
xchg
sti
mov
lret
mov
stc
sbb
add
testl
pop
pop
cwtl
in
data16
imulb
addl
pop
das
test
gs
or
add
jae
dec
pop
mov
xchg
inc
lcall
popa
lcall
cltd
sbb
push
imul
and
cmc
mov
mov
pop
insb
xor
cmc
mov
cli
xor
fsubs
push
leave
leave
sbb
insl
cmc
mov
loopne
pop
in
lret
dec
adc
les
mov
sub
cs
cmp
mov
dec
mov
arpl
add
jl
outsl
lret
stos
jecxz
je
xchg
sti
lds
pushf
add
outsl
cmp
xor
xchg
insb
dec
add
xlat
and
sbb
or
sbb
cltd
jnp
andl
add
jmp
inc
mov
pop
add
xchg
push
ja
adc
mov
ds
repnz
insl
ret
inc
pusha
mov
jp
stos
xchg
mov
mov
std
repnz
jg
stos
mov
pusha
push
insl
in
int
xchg
sti
hlt
mov
clc
and
mov
outsb
add
add
jbe
scas
sbb
add
or
mov
push
pop
es
lret
dec
mov
xchg
xor
jo
mov
xchg
dec
out
mov
pop
cltd
pop
sbb
dec
xchg
out
xor
xchg
fs
gs
xor
ja
mov
in
xor
xor
lret
adc
or
je
sub
dec
or
inc
ret
mov
pop
push
out
or
stc
jbe
sub
rorl
cmpsl
inc
mov
aam
cli
std
data16
stos
jmp
fcom
ds
aad
or
enter
adc
jmp
sub
dec
push
mov
clc
dec
movsl
negb
push
pop
les
rcrl
outsl
pop
insl
popf
ret
in
daa
cmp
pop
test
cmp
outsb
mov
loop
xchg
dec
pop
fcoml
add
outsb
sbb
or
fwait
pop
les
mov
insl
jle
dec
xchg
icebp
and
negb
mov
mov
shlb
call
jo
bound
inc
sti
lret
daa
hlt
push
std
mov
lods
adc
mov
rcrl
movsl
fcompl
out
mov
es
incl
cli
les
mov
cmp
cmc
mov
je
pusha
jb
fsubr
sahf
dec
andb
xchg
xor
and
pop
std
adc
imul
shl
add
xor
push
jnp
and
jns
xchg
xchg
jno
adc
repnz
rorb
out
adc
dec
sti
cld
xor
push
push
out
dec
mov
pop
mov
sub
sub
inc
aam
ljmp
add
stc
xchg
xchg
and
pop
dec
icebp
test
mov
outsb
xor
or
mov
sbb
sahf
dec
push
das
leave
adc
xor
arpl
rolb
adc
cwtl
and
pushf
xchg
adc
cmp
fwait
test
adc
cltd
xorb
cmpsl
inc
insb
les
sarb
push
popa
mov
lahf
xchg
lods
pop
or
lcall
adc
popa
xor
fwait
or
xor
sub
out
sub
jnp
cmp
mov
xchg
aad
push
push
adc
stc
push
mov
ds
cmp
fimuls
jg
sbb
inc
add
mov
and
pop
jb
and
cmp
rcr
jne
sub
shlb
ds
xchg
pop
enter
in
andb
outsl
movsb
fnstsw
pop
jb
mov
jo,pn
xor
inc
add
jae
xchg
cmp
test
cmpsb
scas
in
clc
or
xchg
jne
xchg
add
jns
mov
lods
repz
sub
mov
jmp
mov
push
pop
adc
sahf
aas
dec
mov
cmpsl
fisttps
xor
lods
data16
inc
imulb
pop
mov
popf
jge
inc
mov
addb
dec
cmp
jnp
adcb
sub
jp
cwtl
aaa
lcall
mov
addr16
aas
cmp
insl
iret
adc
and
aam
je
sub
mov
stc
mov
or
mov
lds
xor
dec
cmp
mov
jmp
pop
or
in
aaa
jp
mov
mov
int
mov
arpl
in
arpl
shll
pop
xor
notb
loope
xlat
frstor
xchg
add
sbb
xor
fmulp
cld
xchg
test
adc
push
int3
and
ljmp
mov
or
push
movsb
stos
xchg
cli
push
mov
fwait
push
ljmp
mov
test
ret
sub
jno
divb
and
popa
test
repz
jns
shrb
mov
data16
inc
or
in
jle
add
or
pusha
xor
lret
imul
inc
inc
sbb
jecxz
mov
lahf
das
adc
insl
cmp
xor
push
mov
pop
jo
dec
jecxz
fimull
and
rcll
push
shll
lock
test
mov
les
mov
jbe
cltd
add
pop
pop
aam
dec
inc
push
out
stc
aam
orb
ret
or
outsl
and
ret
cmp
fwait
xlat
aad
pop
inc
cmpsl
cmp
cmp
insb
or
movl
xor
shrb
sahf
jmp
repz
push
add
movsl
les
adc
repz
push
or
pop
popl
addr16
mov
mov
add
add
pop
mov
inc
arpl
jb
pop
sbb
mov
in
bound
jne
pop
xor
inc
mov
jg
ds
sub
inc
push
loopne
in
pop
daa
jl
and
stos
xor
hlt
mul
fwait
roll
out
test
adc
daa
add
fs
dec
add
stos
push
or
pusha
inc
mov
in
mov
stos
push
mov
xchg
xchg
pop
xchg
or
pop
daa
test
cmp
out
mov
mov
pop
lcall
subb
inc
add
inc
mov
inc
xchg
push
rclb
testl
xor
bound
andb
stos
mov
sahf
lds
jmp
stc
movsl
loop
lods
nop
cmp
mov
lock
rcrl
jg
fistl
jle
popa
dec
inc
xor
dec
or
xlat
or
int3
xchg
jge
outsl
int
ds
mov
popa
and
inc
mov
xor
pop
pop
dec
scas
cmpb
fs
pop
xor
test
cld
push
cmpsl
and
repz
push
sbb
ds
mov
pop
es
sbb
pop
lds
ds
nop
inc
in
sub
xlat
or
pop
scas
bound
cmpsl
xchg
xor
mov
pop
imul
scas
fdivrl
fistpl
and
fsts
add
dec
ficomps
add
clc
nop
stos
in
jle
lret
or
movsb
sub
in
xor
mov
pop
inc
xor
bswap
pop
xchg
aam
lods
mov
cwtl
fcom
out
pop
idivb
leave
push
mov
rorb
adc
lea
push
insb
lods
pop
fcomip
mov
jnp
test
mov
iret
xchg
cmp
js
jo
ljmp
cmp
dec
mov
andl
mov
inc
jno
dec
sbb
lahf
adc
or
sub
ljmp
sub
lea
jmp
mov
or
test
mov
scas
stos
or
sub
and
dec
mov
cmp
fdivp
xchg
movsl
dec
test
pop
loope
popf
out
jl
imul
cmp
xchg
movsl
icebp
clc
inc
mov
mov
testl
in
jnp
lds
xchg
cmp
call
mov
pop
mulb
pop
sub
cmp
into
fldcw
and
in
pop
sbb
fsubl
outsl
scas
sub
stos
and
in
xor
imul
fimull
mov
xchg
mov
adc
jns
xor
lods
push
lds
jbe
pop
fldenv
push
sbb
stos
push
fpatan
std
add
or
insb
cmc
lcall
dec
sbb
xor
cmp
call
popf
mov
ds
jnp
in
sbb
sarb
shrl
imul
aad
rcrb
repz
test
mov
cs
cmc
imul
sbbb
adcl
repnz
pop
dec
mov
and
jae
mov
ja
jl
mov
mov
cmp
addr16
cmp
fsubrl
dec
push
push
or
sub
fistpl
mov
jecxz
stc
lret
fsubs
xchg
sub
bound
lahf
ret
in
orps
mov
jge
movsb
aad
aad
stc
in
cmc
shll
jo
dec
xor
xchg
mov
jns
push
fs
add
je
add
xchg
add
inc
sbb
btrl
push
movsb
inc
inc
push
imul
adc
sbb
cmp
ret
add
cmp
cwtl
cli
add
mov
popa
hlt
xchg
sub
call
addb
pop
cltd
adc
adc
jne
fsub
lcall
pop
sbb
push
inc
cmp
fld
dec
inc
pusha
lret
popa
cmp
xor
dec
mov
mov
xor
les
pop
or
into
add
sbb
out
adc
inc
arpl
push
hlt
in
in
or
sarb
mov
mov
dec
push
cmc
insb
add
testl
and
jg
pop
mov
outsb
inc
lcall
dec
mov
test
push
mov
xor
pause
pop
cli
fimull
addl
fldln2
xadd
aam
and
jns
icebp
xor
nop
sub
int
mov
test
fs
clc
lret
inc
sbb
mov
push
mov
push
mov
incb
xor
lret
aas
pop
stc
scas
jmp
jb
mov
push
lods
in
sbb
or
or
fildll
lret
mov
arpl
xor
cld
jmp
test
test
and
fstl
cmc
mov
es
call
in
add
and
fsub
sub
rorl
xchg
aam
or
jg
mov
fcoml
fldenv
movsl
ficoml
jg
fwait
and
jp
in
roll
pop
xchg
jecxz
xchg
repnz
jge
adc
ds
sahf
adc
test
cltd
mov
aaa
jbe
mov
sbb
notb
loop
cmp
mov
test
and
ret
insl
in
xor
pop
das
xchg
adc
movsl
jl,pt
push
iret
xchg
mov
imul
rcrb
jae
addb
mov
sti
aam
iret
jns
push
gs
push
and
push
cs
sbb
inc
sub
xchg
movsl
cmp
scas
outsb
insb
or
int3
cli
dec
outsb
repz
cmpsb
aaa
in
pop
sbb
test
cmp
lcall
push
mov
imul
inc
scas
fstl
fldl2e
mov
call
cs
icebp
jmp
push
adc
push
push
jo
xchg
sub
loop
les
inc
cmc
adc
js
cmp
icebp
add
xchg
movsb
xor
xlat
jo
loope
std
inc
pop
mov
inc
enter
fwait
adc
or
jne
imul
inc
fcmovu
enter
or
pop
rclb
notb
sub
ss
mov
push
xchg
mov
mov
js
mov
cltd
dec
mov
and
dec
pop
mov
xchg
and
sbb
push
fwait
cmpsl
loope
data16
cmpsl
sar
popf
repnz
repnz
imul
leave
sbbb
push
push
jns
mov
and
rorl
sahf
shrb
push
adc
and
jb
out
add
pop
add
popf
xor
mov
loopne
fcoml
repnz
call
ds
add
sbb
jae
jge
leave
data16
in
cmp
and
and
xor
fisubrl
fs
scas
test
cli
push
cltd
sub
pop
sti
pushf
daa
mov
roll
test
jbe
xchg
adc
jge
shl
pop
pop
ret
mov
lret
mov
insb
cltd
mov
cmp
mov
lock
adc
or
test
aad
stos
lret
ret
cmp
cmpsl
mov
push
jl
mov
popa
push
and
mov
or
bound
stos
mov
aad
shlb
aas
and
in
fs
cmp
icebp
xchg
fistpl
out
pop
mov
add
push
cs
dec
dec
add
pop
mov
push
enter
cmc
nop
jl
mov
jno
mov
outsb
or
and
aaa
jge
popa
fcoml
cld
pop
sahf
adc
jns
push
enter
aaa
hlt
or
int
mov
ja
mov
and
jl
sbb
push
cmp
adc
mov
cmp
mov
pop
es
loope
mov
call
imul
sub
repnz
cmpsb
xchg
aam
xchg
push
loope
mov
mov
and
inc
idivb
sub
dec
jns
test
hlt
push
ss
out
xor
mov
xchg
iret
lret
es
jg
inc
aam
out
or
out
test
push
cmpsb
push
icebp
jb
bound
jnp
pushf
xchg
jo
jbe
cltd
mov
mov
and
inc
jns
clc
test
fcmovb
jp
inc
inc
out
push
ljmp
fxch
in
repnz
or
jle
jp
or
imul
mov
fwait
test
outsb
or
mov
popf
loope
out
in
add
jne
jae
mov
mov
xor
cmp
lahf
aas
fcoml
out
push
sub
aaa
das
mov
pop
aaa
mov
mov
mov
popa
jg
pop
movsl
xchg
jmp
test
int
mov
push
js
adc
movb
inc
cmp
pusha
fldl
insl
adc
mov
sbb
push
xchg
sbb
mov
or
aad
adc
push
push
in
rcl
mov
xlat
mov
lahf
rcrl
adc
fwait
cmp
xchg
xchg
ja
xchg
sarl
loope
mov
xchg
jb
pop
xor
ds
dec
xchg
adc
rorl
fcoml
test
fbld
jno
fcomi
test
fs
movsl
or
push
adc
imul
adc
jno
inc
push
push
xchg
inc
shl
js
cmp
loope
adc
loopne,pt
push
xchg
push
dec
out
in
rol
ss
int
adc
and
lcall
sar
sti
daa
or
imul
and
es
cmp
mov
mov
in
hlt
dec
ja
push
iret
and
add
popl
cmp
outsb
mov
inc
jnp
imul
gs
andb
test
xor
jb
mov
jns
mov
mov
mov
xlat
das
aas
flds
cmp
or
es
mov
notb
push
and
iret
ja
insb
sarb
xor
xchg
mov
add
sub
adc
popf
push
add
lret
mov
into
imul
sbb
arpl
sbb
push
xor
mov
ret
and
jns
push
push
pushl
dec
add
mov
add
icebp
push
jnp
filds
pop
test
lcall
sub
xchg
push
lods
mov
std
mov
mov
push
push
std
xor
sbb
movsb
inc
push
insb
daa
sub
dec
jae
roll
inc
xchg
outsl
rorb
lea
outsb
dec
int3
fs
mov
jl
jne
push
cs
push
and
mov
push
mov
xchg
xchg
out
cmc
dec
popf
ficompl
add
adc
inc
js
insl
mov
jne
outsb
stos
daa
lcall
mov
daa
adc
pop
imul
add
xor
rorb
sub
add
mov
cmp
push
xchg
rcrl
mov
dec
jl
xchg
adcb
aad
add
xchg
inc
push
pop
repz
movsl
loopw
lea
loopne
and
add
mov
adc
jle
cmp
mov
lds
sub
int
mov
mov
mov
hlt
and
xchg
jg
jbe
call
push
call
add
adc
loop
add
and
inc
leave
push
insl
icebp
mov
arpl
jno
data16
popf
sbb
mov
or
mov
xchg
mov
iret
cmc
cmpsl
mov
pop
dec
in
or
cmp
pop
mov
or
cmp
and
notl
and
sub
add
and
add
adc
jno
mov
dec
insb
xor
dec
mov
call
push
inc
imul
rcll
mov
lret
push
lcall
xchg
sahf
lds
scas
dec
jb
pop
rolb
xchg
sarb
add
lret
xchg
test
or
xor
jne
pop
xchg
jnp
xor
xchg
cmp
icebp
cmpsl
in
mov
jbe
fists
sbb
pop
mov
stc
out
jg
jb
loope
insb
nop
pop
mov
int3
js
xor
decb
jge
sub
push
jl
add
clc
outsb
movsl
mov
leave
pop
insl
rclb
out
xorb
xchg
mov
aaa
repz
push
popf
in
xchg
cmp
sub
mov
hlt
jge
mov
insl
add
daa
or
inc
daa
leave
shlb
push
jns
outsl
shll
js
insb
and
in
ret
frstor
push
sarl
call
sbb
xchg
pop
jbe
cmpsl
loopne
xchg
dec
call
pop
and
mov
jl
dec
andb
stc
xor
cmpsl
enter
test
dec
fidivs
ss
hlt
lods
inc
xchg
push
or
push
cmp
stc
cmc
mov
sub
rcl
arpl
jnp
std
dec
movsl
iret
xor
cwtl
test
xchg
xchg
and
mov
push
insb
sbb
inc
sbb
xchg
or
adc
in
lods
addr16
dec
in
adc
lock
fildl
andps
xchg
mov
out
xor
jno
jle
add
adc
scas
jae
rcr
test
xchg
iret
sarl
repnz
sub
inc
in
pop
adc
jo
pop
mov
mov
popf
jl
pop
xchg
pop
je
mov
push
xchg
das
cmp
cmp
test
in
add
cmc
ss
aam
popf
mov
lret
push
daa
push
xorb
mov
in
andb
mov
xchg
ret
sahf
mov
movsb
lods
sub
sub
shr
xchg
mov
test
call
xchg
test
pop
dec
mov
xchg
subl
aad
pop
aad
cmp
das
adc
mov
or
and
jp
repnz
cmp
sbb
ds
jp
adc
pop
ss
xchg
lahf
mov
mov
pop
bound
aam
shll
test
dec
in
xchg
scas
and
cmpl
cmp
jne
fnstenv
cli
fisubs
inc
out
xor
je
mov
rorl
test
cmp
mov
jae
mov
fisttpll
data16
push
sbb
shll
std
jg
cld
or
mov
icebp
mov
dec
mov
test
and
xchg
int3
punpckhdq
ret
icebp
push
mov
popf
cmpsb
aas
fists
xchg
or
push
mov
int3
fmull
xchg
test
add
push
out
pushf
cmp
mov
push
mov
push
movsb
roll
add
fs
xchg
mov
loop
ds
or
and
push
dec
jne
imul
xchg
lcall
adc
mov
push
sbb
sbb
fists
mov
dec
or
mov
sbb
loopne
xchg
xchg
stos
stc
dec
jo
and
lcall
int3
pop
aam
out
test
inc
pushf
cmp
mov
aam
inc
push
iret
cwtl
in
xchg
out
add
inc
add
add
sub
xor
sub
push
das
pop
out
mov
xchg
cmp
mov
adc
sbb
xchg
sub
mov
dec
push
ret
sbb
imul
sub
fiadds
cli
mov
lods
inc
and
jl
sub
jge
in
xor
cmc
jno
add
insb
arpl
adc
push
jg
pop
inc
inc
add
xor
les
sub
je
mov
dec
dec
adc
arpl
je
js
andl
sahf
and
xchg
es
mov
fs
inc
push
out
cmp
and
xchg
sub
cs
push
aad
mov
sbb
mov
test
mov
or
in
mov
dec
jmp
stos
push
cmpl
mov
mov
add
push
out
xchg
xchg
hlt
mov
jge
dec
and
mov
lret
testb
scas
fwait
mov
or
addr16
insl
paddsw
add
in
add
push
lea
push
mov
jae
ljmp
aad
mov
add
and
cmp
mov
mov
cs
sbb
ret
outsl
pop
lods
gs
mov
fildll
les
movsl
xchg
repnz
cmp
sub
xlat
bound
mov
arpl
shlb
add
out
jno
mov
pop
push
jmp
imul
orb
iret
push
xchg
mov
jns
dec
mov
imul
sahf
pop
je
and
or
mull
or
dec
mov
in
push
fwait
xchg
popa
iret
bound
adc
mov
stc
lcall
test
lock
fcoms
sub
in
cli
int
imul
cmp
lcall
fcomi
mov
jnp
mov
xchg
cmpsl
and
testl
ret
in
aas
sbb
lcall
or
out
pop
or
ret
in
repz
rorb
inc
adc
and
fldcw
and
lods
mov
aaa
xlat
mov
cmpsl
add
push
jo
andb
push
jbe
cmp
mov
sbb
xlat
jb
dec
lds
fsts
jae
cli
dec
jne
jno
repz
repnz
push
lea
scas
les
sbb
sub
xlat
lahf
xor
add
or
and
out
pushf
popa
icebp
xor
insl
pushf
lret
mov
sbb
or
ljmp
sub
movsl
push
int3
adc
ret
push
inc
iret
mov
ficompl
sub
in
xchg
ret
imul
jp
mov
or
sbb
test
cmp
pop
fucomi
sahf
mov
dec
and
ljmp
fs
dec
dec
sahf
xor
adc
mov
cmpsb
jno
mov
into
out
jmp
bound
fidivs
mov
or
mov
test
and
repz
cmp
xchg
inc
hlt
cld
addb
adc
mull
cltd
jno
aad
mov
push
add
xchg
mov
out
cld
out
imulb
in
js
push
popa
cmp
mov
mov
sub
inc
lret
loope
das
adc
inc
inc
cmp
aas
mov
loope,pn
ja
icebp
fmull
mov
xor
xor
pop
popf
cmp
pop
xchg
hlt
mov
mov
mov
xchg
and
in
or
loop
cli
roll
pop
mov
push
add
push
fs
pop
pop
in
adc
adcl
pop
cmp
add
test
add
fucompp
lret
or
xchg
add
repz
cmovo
out
jae
out
inc
mov
out
fdivrs
adc
daa
std
insl
repnz
ret
out
jb
pop
addr16
scas
aaa
push
pop
mov
cmp
pop
add
sub
jne
sbb
xchg
fistl
les
jle
arpl
fcomip
lea
cmpsl
cmp
repz
add
adc
into
pop
mov
lods
loope
popf
sbb
or
dec
sahf
ret
fisttpll
sbb
in
repnz
or
jbe
mov
cmp
lahf
cmp
ljmp
pop
jno
divl
out
fnstcw
adc
cmp
jg
dec
inc
jle
add
inc
xor
in
push
sub
lods
aad
cltd
clc
imul
mov
outsb
sbb
pop
pop
xchg
cli
out
inc
inc
adc
repz
cwtl
pop
xor
sbb
push
sahf
jno
lock
push
xor
adc
fiadds
imul
dec
sarl
mov
scas
bound
loope
cmp
jge
and
mov
sub
outsb
adc
bound
shll
mov
jmp
inc
cmc
out
xchg
icebp
mov
cwtl
std
cltd
and
add
jno
lock
lds
sub
xor
mov
cmpsl
jmp
adc
cs
stos
xchg
idivb
push
sbb
jge
xor
adc
dec
dec
stos
cmpsb
gs
mov
sub
hlt
jns
in
pop
cltd
les
mov
mov
enter
clc
pusha
push
or
pop
repnz
lock
testb
in
jbe
mov
mov
pop
push
mov
loope
mov
test
sbb
mov
push
dec
shrb
and
scas
repnz
push
pop
cmpsb
pop
lcall
shrl
jbe
lock
loop
mov
mov
neg
cmp
movsl
ds
mov
lods
rol
notl
jp
mov
lods
mov
dec
stc
fnstenv
sub
ret
mov
subb
int
fcmovb
mov
sub
pop
add
rcrb
sti
jmp
mov
push
inc
adc
jbe
mov
inc
inc
shlb
xchg
movsl
cltd
sbb
fbld
rorb
xchg
pop
shrb
pop
mov
push
enter
cmp
pushf
in
rol
push
test
add
mov
sbb
es
out
dec
cli
jb
pop
or
sar
jne
mov
jnp
lds
jnp
mov
ret
push
add
xchg
mov
pop
ds
mov
lret
loopne
stc
mov
xlat
ss
adc
stos
inc
ret
mov
js
mov
inc
sbb
jbe
scas
dec
insb
shl
lahf
pop
popf
jne
pushf
lahf
dec
fs
cmp
xorb
clc
mov
jle
in
ja
jne
mov
movsb
mov
xchg
cltd
mov
inc
inc
jp
popf
cmp
mov
fwait
mov
push
pop
icebp
jp
mov
es
adcl
xchg
ss
xchg
test
pop
xchg
lods
sub
ret
jmp
test
fxam
and
cmp
mov
cld
jns
dec
loop
push
mov
xor
jg
cwtl
push
into
pop
aaa
rcrl
loop
adc
cmpsl
testb
loope
ljmp
fisttpll
inc
mov
push
daa
and
xchg
adc
out
ret
es
push
mov
lahf
mov
lret
push
and
mov
sti
iret
pop
cli
cmc
mov
sbb
xor
js
push
xchg
inc
dec
inc
mov
mov
jecxz
pushf
sbb
add
xor
lds
adc
push
jno
fnstcw
mov
and
popf
mov
mov
fnstcw
inc
out
mov
mov
mov
pop
xchg
out
test
xor
sbb
jns
xchg
push
iret
jb
push
lret
fcmovb
ja
cld
jecxz
or
repz
lods
stos
in
rolb
adc
ja
mov
push
cmp
mov
xor
cmp
mov
push
hlt
lret
fiaddl
mov
out
rol
out
jo
mov
xor
push
sbb
sahf
xor
sbb
shl
jae
adc
rolb
decb
sbb
loop
testb
dec
repz
aas
sbb
fisubrl
xor
int3
inc
aad
dec
inc
cmp
andb
int
fldpi
push
sub
out
mov
mov
test
xchg
aad
xchg
loopne
ds
lea
sbb
sti
in
out
xchg
push
and
mov
xor
jnp
ret
int
xlat
jbe
sti
movsl
mov
shll
and
dec
int
test
pop
hlt
and
adc
stos
and
ficompl
or
imul
rcl
cmp
ret
ss
mov
push
inc
add
cltd
adc
pop
shll
mov
loope
dec
stc
loope
pop
shrb
enter
dec
fwait
dec
lahf
jno
mov
stos
dec
jl
out
aas
jmp
xchg
dec
cwtl
test
jns
ss
lret
pop
stc
jbe
push
mov
cli
into
cltd
dec
mov
adc
mov
rorb
jmp
dec
mov
mov
jo
stc
push
lods
aaa
in
sarb
pop
loopne
dec
stos
ljmp
push
rorl
sub
add
out
je
xchg
in
repz
out
rorb
mov
xor
sub
imull
movsb
xchg
mov
inc
popa
bndldx
sbb
adcl
xchg
in
pop
ret
inc
xchg
push
cmp
sub
outsb
sbb
push
mov
cltd
inc
lods
push
inc
lds
pushf
hlt
pop
push
mov
out
mov
shll
mov
xchg
shlb
scas
shlb
inc
add
rcll
mov
pop
pop
aam
push
pop
arpl
jns
add
xchg
call
sub
cwtl
daa
fs
mov
xor
add
xor
push
adc
xchg
jno
xor
imul
fisubrl
and
cmp
clc
dec
sub
outsl
das
mov
dec
icebp
roll
jne
ret
pop
mov
shlb
sub
jg
jmp
dec
stos
dec
xchg
push
mov
pop
rcr
mov
in
inc
fs
test
stos
mov
push
call
mov
dec
adc
adc
mov
jge
mov
cmpsl
fwait
rorb
hlt
push
cmp
sub
pop
and
test
add
xchg
adc
mov
sub
jmp
aaa
adc
pop
sub
aad
jbe
push
add
aad
call
mov
dec
popf
js
div
cld
xchg
popa
pop
push
or
pop
aaa
aas
or
cmp
sti
inc
mov
stos
mov
inc
jnp
mov
lea
push
movsl
loop
jl
xor
loop
push
jae,pn
lock
add
arpl
jns
mov
cmpsb
syscall
std
cmp
aas
dec
les
fcoml
or
dec
add
or
ss
cmp
pop
mov
mov
xchg
mov
mov
call
xor
xor
insl
pop
jae
xor
cmp
shlb
sbb
pop
add
pop
imul
jns
loop
pop
jl
dec
daa
cmpsl
leave
stc
popa
dec
fisttpl
in
out
mov
jg
cmp
mov
inc
shrl
add
push
imul
mov
icebp
push
faddp
xor
sub
xorb
xchg
fnstenv
or
mov
loopne
mov
adc
sahf
std
sahf
jns
jo
fisubrl
aaa
push
cltd
js
add
fsubs
outsl
pop
sbb
ret
xorl
lcall
sbb
add
inc
jp
loop
push
out
sub
push
rclb
inc
pop
mov
gs
fwait
in
dec
sub
cmpsb
push
xchg
aam
inc
xchg
adc
dec
xor
aam
jae
clc
outsb
jbe
lcall
sub
xchg
pop
dec
cmp
pushf
jge
push
and
aad
mov
ret
xor
loopne
jle
mov
xchg
cwtl
jb
fnstenv
xchg
lods
insb
mov
lods
sbb
pushf
cmp
sub
mov
adc
js
int3
and
cmpl
push
mov
stos
aad
jle
js
dec
test
idiv
push
mov
leave
mov
call
stc
sbb
push
insb
and
xor
xor
inc
cmp
cld
pushl
repnz
lcall
jns
ss
mov
cmp
inc
or
rorl
test
mov
movsb
mov
cmp
mov
and
repnz
mov
xchg
int3
cs
repnz
scas
cwtl
loopne
ret
fsubrp
scas
call
sbb
jno
es
adc
push
pusha
cmpsl
in
orl
jo
add
jmp
scas
cltd
orb
out
in
into
and
xor
mov
pop
xorps
ja
dec
imul
adc
jmp
and
pop
mov
push
mov
int
stos
adc
lods
inc
mov
lods
lods
xchg
cltd
imul
push
dec
or
les
xor
adc
lahf
cmc
inc
mov
out
xor
scas
shrl
rolb
pop
sbb
fs
jle
xchg
push
sbb
mov
mov
ja
mov
xchg
sub
jnp
xchg
outsl
and
inc
je
add
lahf
sysenter
xchg
les
dec
std
or
cli
mul
sarl
push
call
addr16
mov
fimull
mov
imul
inc
inc
lods
fs
ljmp
insl
shlb
cmc
pop
stos
shrl
or
outsb
test
or
call
test
aas
out
je
les
ds
adc
push
mov
fldl
or
pop
jle
jmp
add
out
lret
loop
cs
push
and
inc
sbb
xchg
push
lret
fbstp
je
push
adc
shrl
addr16
adc
and
adc
jle
ret
arpl
xor
push
in
push
clc
daa
inc
mov
and
dec
jae
jne
jno
in
add
jl
lods
dec
jno
xchg
xor
or
jno
jl
nop
mov
les
inc
lock
push
add
xchg
shll
cltd
decb
pusha
mov
fnstsw
or
fnsave
mov
xchg
les
fsubrs
imul
xor
push
pop
andl
xor
scas
jne
je
ja
pop
test
mov
sbb
sbb
loopne
mov
adc
mov
cmpsl
lahf
xchg
sub
repz
xchg
pop
outsl
xor
or
pop
test
stos
mov
jge
mov
adc
lods
enter
popa
dec
mov
popf
in
xchg
imul
call
ljmp
in
inc
stc
pop
xchg
aad
mov
mov
or
mov
push
push
and
push
mov
xor
pop
push
sar
in
out
pop
fld
xlat
xchg
add
fsub
fdivrp
mov
test
add
call
sbb
stos
loop
jmp
cmpsb
out
hlt
pop
inc
jns
aam
add
fdivrl
or
mov
out
mov
mov
shl
pop
mov
push
sub
into
rol
or
jno
int
fists
int3
mov
lret
cmp
scas
xchg
inc
nop
nop
mov
xor
bnd
mov
daa
push
jne
sbb
mov
je
jg
sbb
movsl
pop
pop
xorps
inc
ja
inc
mov
test
lock
repnz
out
xor
stos
scas
loopne
mov
addb
push
dec
add
aaa
popa
aam
and
cs
lret
mov
mov
sbb
sbb
add
sub
or
cwtl
vcvtss2sd
add
scas
mov
popa
pop
pop
pop
pop
mov
popf
mov
jmp
cs
fsubl
js
sarb
mov
dec
je
mov
data16
gs
das
aad
mov
imul
mov
fisubrl
mov
adc
cs
enter
int
push
hlt
mov
push
mov
test
cmp
mov
rcr
xchg
inc
jecxz
lock
loopne
mov
stos
popf
loope,pn
adc
enter
es
ret
cltd
in
jle
mov
and
out
lds
xchg
xchg
xor
cmp
sub
stos
cmpsl
jne
repnz
dec
repnz
pop
loopne
enter
dec
adc
pop
nop
push
dec
and
aas
sbb
fsubrs
or
or
mov
mov
rclb
sub
push
inc
mov
jmp
cmpsb
test
push
jmp
jae
mov
std
mov
loopne
push
dec
add
add
add
xor
mov
aam
daa
les
pop
pop
push
jb
mov
xchg
fcmovnb
mov
inc
stc
gs
jo
movsb
add
xor
and
xchg
jns
xchg
mov
arpl
adc
add
add
test
popa
fcomps
jecxz
lods
data16
dec
adc
lcall
daa
jb
pop
pop
dec
pusha
pusha
test
inc
loope
addr16
out
mov
shlb
shlb
cs
cmp
adc
or
dec
mov
fs
cmp
shlb
inc
out
jo
xor
iret
stc
in
xchg
push
mull
cli
outsb
pop
sbb
scas
and
fdivs
and
shl
out
jge
cmpsl
mov
test
test
out
jo
js
add
sub
ja
xor
or
jns
sub
pop
xchg
das
pop
and
jp
xchg
xor
ds
xor
nop
call
cmp
jns
ds
hlt
jge
sbb
xchg
xchg
hlt
mov
mov
adc
push
pop
xchg
adc
jae
inc
or
mov
cmp
gs
pop
sbb
xor
inc
lock
or
xchg
dec
sub
sub
insb
push
out
loope
pop
mov
pop
cmpsl
push
or
cmp
les
repz
xchg
add
mov
popa
lock
aaa
fidivrs
jnp
jmp
mov
stos
sbb
xor
cmc
in
dec
mov
sub
dec
adc
movsl
nop
insb
push
mov
scas
ja
test
jb
mov
sbbl
dec
dec
inc
sub
mov
sahf
lahf
or
jbe
cmp
xchg
mov
out
divb
test
sbb
rorb
pushf
and
movsl
mov
movsl
hlt
jnp
repz
aam
aas
fstl
mov
mov
das
mov
push
add
or
imul
das
xlat
cmpb
test
or
or
push
sbb
jbe
or
mov
xchg
ja
stos
cmp
repnz
jb
mov
call
ss
outsl
push
call
mov
jno
addr16
call
sbb
jbe
icebp
pusha
iret
xor
xchg
sahf
mov
adc
jge
fnsave
or
xchg
das
pop
mov
push
pop
mov
insl
jle
cmpsl
jae
aad
mov
pop
repz
loopne
lods
dec
jmp
lods
mov
mov
stc
push
aad
lret
les
jl
mov
adc
lods
mov
xchg
xchg
cmp
dec
js
in
pop
mov
sub
aas
imulb
cli
cltd
cmp
sub
subl
jb
mov
std
aad
iret
rorb
xchg
es
jne
mov
mov
xchg
int
mov
adc
and
inc
ss
cld
andb
xor
lcall
gs
jmp
je
and
dec
xor
aam
outsl
ljmp
inc
and
add
int
test
push
imul
insb
xchg
xchg
popf
pop
test
stos
add
jne
sbb
push
out
mov
and
adc
sahf
orl
out
push
push
dec
add
or
pop
add
popa
xchg
je
imul
pop
fstps
int
lret
xor
test
jecxz
push
and
pop
movsl
mov
xchg
pop
add
and
repz
pushf
enter
add
jns
insl
lahf
push
gs
pop
lret
rclb
or
jge
cltd
test
lds
ret
imull
aam
lea
sub
frndint
loop
push
xchg
push
cli
pop
sti
jge
mov
adc
mov
or
sub
push
imul
scas
mov
mov
cmp
out
add
xchg
sub
push
stos
movsb
lcall
xchg
mov
jo
xchg
sbb
subl
sub
inc
and
loopne
ss
sbb
inc
cwtl
mov
rolb
or
mov
xor
cmc
push
pop
pop
sbb
and
or
inc
mov
sbb
mov
dec
inc
js
fsubrl
push
mov
mov
pop
jns
stos
fs
push
cmc
push
sbbl
rcll
adc
jbe
std
nop
bound
sbb
lds
cltd
testb
fcomps
pop
mov
inc
lahf
mov
sbb
das
test
inc
jbe
sbb
in
les
adc
mov
pushf
xchg
sahf
je
push
fwait
sub
scas
stos
shll
loopne
stc
push
jle
cmp
js
andb
dec
out
sub
add
in
jmp
pop
xor
sti
dec
gs
adc
sub
pop
add
enter
xchg
jo
lods
inc
jg
and
mov
daa
rorb
lret
outsl
dec
jmp
icebp
dec
std
roll
xchg
dec
fistl
cmp
cmc
add
push
sahf
ret
scas
loopne
test
movsl
xchg
cli
ja
insl
dec
icebp
xchg
sbb
push
loopne
sbb
mov
adc
fcmove
sti
outsb
mov
out
and
xchg
test
jno
jae
cmpsl
stos
dec
sbb
push
push
jp
daa
sub
shrb
stos
and
dec
negl
adc
addl
push
fildll
lds
leave
xchg
adc
add
mov
aad
mov
int3
sarb
fsubp
cmp
and
inc
mov
int
xchg
imul
xchg
test
hlt
lods
cmp
imul
and
in
sbb
scas
pop
mov
out
dec
int3
iret
pushf
lds
or
mov
cmc
pop
sbb
inc
pusha
test
dec
inc
or
mov
cmpsl
repnz
jmp
pop
jne
pop
lcall
dec
xchg
cmp
cmpsb
mov
loope
movsl
insl
lods
mul
rcl
mov
lods
xor
jbe
xchg
add
jmp
pop
dec
sub
rolb
call
das
jo
cmpsl
gs
adcl
in
out
mov
inc
add
xorl
ljmp
mov
pop
mov
mov
imul
mov
stos
data16
lods
dec
push
lock
lret
pop
mov
sahf
adc
pop
sti
ss
cmpl
or
mov
imul
test
xor
add
fmul
js
shlb
in
push
repnz
add
shr
or
jo
inc
cmp
sbb
adc
pop
push
rclb
jge
jmp
or
sbb
jns
cld
loop
ds
pushf
icebp
push
clc
adc
cmp
sub
aas
or
in
rcrb
or
xchg
add
xchg
sahf
sub
adc
ja
pop
jns
loopne
xorb
scas
add
test
mov
inc
inc
mov
pop
or
or
sub
int3
out
fsubrs
sbb
push
cmp
or
or
call
rorl
add
and
enter
sbb
push
std
divb
dec
xor
ja
sbb
leave
cli
leave
scas
and
pop
bound
add
int
call
or
mov
pop
push
clc
and
cltd
clc
jb
rcr
lahf
cmp
cmp
lock
cmp
stos
insl
add
scas
pop
fwait
cltd
pop
pop
dec
iret
testl
test
adcl
mov
and
clc
stos
and
aas
fisttpl
ret
cmpsl
ja
int
dec
jle
jne
dec
roll
icebp
ret
xor
push
shr
push
lds
dec
xor
inc
sub
out
xor
cmp
in
mov
test
mov
faddl
int
add
mov
dec
cmp
ss
in
lret
rolb
in
mov
lahf
add
jbe
add
pop
int
push
insb
and
fs
data16
aaa
repz
and
icebp
xchg
mov
lock
movsb
xchg
pop
mov
dec
mov
xchg
sub
rcl
push
inc
sub
aam
fwait
dec
sub
lret
mov
cwtl
insl
push
pop
test
sub
outsl
fdivrs
cltd
add
sub
clc
push
sub
push
ffreep
jnp
icebp
cmp
cld
fimull
mov
fmull
mov
icebp
mov
hlt
cmpl
cli
xchg
pop
push
mov
pop
subl
mov
mov
lret
and
int3
mov
adc
xchg
dec
out
xor
mov
push
pop
idivb
push
inc
adcb
fimull
dec
mov
lock
and
or
pop
test
cmp
mov
lahf
jecxz
les
cmpsb
sbb
dec
test
jnp
jb
xchg
loope
push
add
push
mov
mov
xchg
cltd
aam
shrb
mov
cmp
xchg
sahf
leave
add
popf
sahf
fisubs
xor
bound
inc
mov
push
add
fdivr
xchg
jo
shll
mov
pop
push
mov
dec
pop
mov
push
dec
sti
push
jmp
popa
shll
imul
call
inc
insb
aam
out
faddl
add
cmc
and
xchg
push
mov
add
or
mov
cmp
in
xor
adc
sub
push
cmpsb
or
sbb
push
inc
ffree
cli
push
and
xchg
inc
shll
cmpsl
pushf
sbb
push
xor
sub
push
add
jp
movsl
rorb
push
mov
sub
int
mov
movsb
js
xchg
xchg
dec
add
aad
ja
repnz
inc
enter
or
lods
xor
mov
xchg
push
adc
and
sub
dec
loope
ljmp
fstl
sub
leave
outsl
add
inc
add
loopne
push
inc
pop
push
dec
shlb
jge
mov
test
cmp
test
push
push
adc
pop
push
xchg
jle
sti
jb
xor
call
sub
jg
gs
daa
dec
inc
roll
sbb
dec
jmp
or
mov
or
leave
cmp
lds
cmp
push
in
lock
adc
jno
js
push
inc
fbld
int
pop
push
inc
jg
xchg
iret
dec
adcb
lock
in
jno
or
sbb
pop
add
pop
pop
jbe
mov
sub
in
and
and
int3
cmp
and
cld
mov
push
mov
mov
add
push
xchg
mov
mov
rolb
lcall
fcomip
pop
incb
cmpb
inc
add
inc
orl
cmp
pop
ret
sbb
enter
sub
pop
push
xor
cmp
call
call
das
sub
cli
and
aam
jmp
xchg
shr
ds
cmp
mov
das
iret
mov
xchg
movsb
sti
xchg
pop
sub
add
or
sti
rcl
in
inc
inc
inc
xor
mov
mov
mov
or
sbb
arpl
push
dec
jno
dec
mov
dec
cmp
jns
popf
or
mov
cltd
inc
mov
adc
outsl
inc
aad
jo
jo
lods
and
loop
sub
sub
mov
in
adc
in
lahf
ficoml
mov
sbb
jl
iret
dec
in
jbe
repnz
lahf
into
mov
lret
nop
lahf
imul
dec
test
leave
xlat
inc
xor
aad
imul
mov
repnz
mov
push
and
fwait
xchg
mov
push
outsb
pop
mov
sub
sub
xchg
loop
and
dec
loop
cwtd
aam
adc
dec
cmp
xchg
xor
add
outsb
pushf
inc
jne
jl
or
inc
stc
icebp
sbb
adc
jae
leave
test
iret
fnstcw
aad
xor
and
fcmovu
jno
stc
int
inc
icebp
cld
jl
jmp
jne
jecxz
and
adcb
dec
inc
add
lods
leave
das
insl
add
xor
stos
mov
add
mov
std
ret
sub
in
aam
mov
addr16
mov
out
inc
lds
push
cmp
xchg
repnz
and
outsb
stos
xor
xchg
add
out
push
imul
adc
ss
xor
add
daa
into
or
xor
add
sbb
dec
xchg
jnp
cmp
orb
aas
je
clc
or
out
dec
in
les
rcr
mov
jle
jle
mov
fwait
pop
loope
xchg
or
sti
jo
jnp
cli
in
inc
dec
sub
jno
cli
std
add
mov
fsub
std
sub
adc
sub
xchg
movsb
cmp
sub
movsb
das
stos
sub
push
ret
mov
xlat
lods
jmp
out
mov
sbb
insl
ss
inc
jne
jl
lret
test
in
fsts
fisubrl
pop
xor
popa
mov
pop
jge
and
inc
and
idiv
sahf
adc
std
xor
jb
stc
mov
lds
pop
mov
push
lock
and
pop
sbb
mov
out
jne
nop
xor
into
enter
ret
call
sbb
xchg
adcb
out
lcall
inc
jbe
pop
clc
xchg
lods
mov
pop
lcall
lret
cmpsb
lods
push
push
jg
aas
dec
mov
mov
jb
inc
aaa
pop
mov
push
js
loope
faddl
fisttps
cwtl
cmp
push
les
mov
and
ficompl
sbbb
inc
cmp
mov
int
in
call
xchg
sub
fistpl
fdivl
jge
inc
movsb
int
add
jb
movsb
dec
test
add
dec
inc
add
incl
test
add
sahf
mov
out
inc
cwtl
cmpb
xor
mov
adc
mov
sbb
subb
ja
movsl
xchg
cli
mov
stos
imul
fxch
popl
xlat
out
lahf
aad
dec
xchg
inc
inc
xchg
insl
or
push
add
mov
pop
mov
das
adc
and
cmp
or
mov
fs
adc
scas
loope
pop
movsb
daa
sbb
sti
int
pop
popf
stos
out
mov
call
mov
test
call
xor
lcall
inc
jne
imul
pop
out
fstps
pop
mov
arpl
ds
dec
mov
sbb
push
enter
into
push
sub
cmp
out
cmc
mov
sub
mov
jge
and
out
jle
mov
ficomps
fistpl
or
movsl
adc
inc
xchg
mov
addr16
or
mov
jl
out
push
mov
mov
fwait
jbe
xchg
in
out
aas
pop
pop
mov
scas
cmp
dec
stc
inc
test
push
pop
sbb
adc
add
loopne
js
xchg
pop
jb
pop
xor
mov
sbb
negl
nop
loop
push
inc
arpl
adc
fsubs
cmc
jp
fdivrs
jnp
call
repz
or
add
add
xorb
je
scas
mov
ret
enter
jmp
fildl
pop
push
ds
popf
or
jnp
cmc
sahf
inc
cli
mov
cli
scas
jg
jnp
aas
cltd
sub
mov
and
xchg
sub
mov
inc
xchg
cmc
mov
sub
add
inc
scas
jl
mov
into
or
mov
dec
aas
enter
sbb
cmp
mov
mov
jb
push
insl
negb
jns
negl
loopne
in
or
mov
cmc
cmp
mov
out
mov
rol
push
pop
cwtl
in
mov
jns
adc
test
mov
rcll
gs
lods
jmp
inc
dec
outsb
inc
cmp
push
pop
xor
imul
iret
loop
pop
call
mov
ret
inc
inc
sahf
mov
xchg
push
mov
bound
dec
mov
dec
jmp
cmovns
inc
or
push
sub
mov
cltd
les
jecxz
daa
mov
mov
insl
inc
or
cmp
push
sbb
fistpll
mov
mov
mov
and
mov
xchg
jns
push
dec
inc
sub
es
mov
mov
mov
cmp
mov
xchg
lret
mov
ja
mov
cmpsb
fdivrp
dec
enter
and
out
jae
or
mov
mov
mov
filds
int
stos
daa
or
jg
push
xchg
insb
xor
add
mov
fdivrl
add
mov
jmp
std
jecxz
inc
push
cmp
adc
stos
cmp
sub
add
pavgw
test
sbb
in
ss
mov
pop
pop
repz
xchg
mov
dec
pop
dec
pop
add
lods
mov
fidivs
push
pop
adc
daa
mov
jecxz
mov
xchg
pop
jg
sti
xchg
popf
push
jnp
or
mov
in
into
out
aad
jp
hlt
and
out
or
dec
inc
ror
push
xchg
xor
in
push
adc
adc
jp
sbb
mov
int
adc
jg
jge
adc
rcl
cmp
fnstsw
adc
pop
and
pop
push
ss
push
popa
mov
fidivrl
jg
inc
xchg
call
fs
stc
aam
mov
push
insl
iret
aam
or
out
out
mov
push
dec
rcrb
mov
jecxz
adc
mov
mov
ds
into
or
inc
push
mov
jecxz
cwtl
mov
mov
add
inc
cli
xor
mov
xor
jp
cmc
inc
xchg
jmp
jle
jle
out
push
movsb
jns
xlat
jb
mov
call
and
shrb
xchg
mov
add
pop
loopne
mov
xchg
int
xor
adc
nop
push
jmp
add
ds
nop
cmp
in
outsb
fwait
cmpb
mov
sbb
mov
lods
jne
lds
insl
jmp
jnp
jge
pushl
ds
push
loope
xchg
xor
stos
sti
test
int3
xor
jp
push
xor
or
pusha
pop
outsb
addr16
mov
pop
in
inc
cmp
push
xlat
sub
adc
fists
mov
lret
fadds
out
adc
inc
mov
out
adc
scas
dec
ss
es
fstps
fld
rcrb
mov
lret
jbe
sbb
movsl
in
stc
addr16
add
lea
jmp
andl
mov
addr16
leave
sbb
aaa
sub
jb
xor
xchg
add
inc
roll
push
mov
inc
inc
insl
fildl
mov
loope
xor
mov
adc
in
sub
je
and
iret
push
in
fimull
add
bound
and
jmp
in
outsl
in
mov
mov
divl
xor
lods
pop
and
mov
cmpsl
int
xchg
push
insl
into
inc
push
pop
xlat
pop
in
ss
in
sbb
cld
sbb
cmp
shr
xchg
sub
cmpsb
and
mov
xchg
ja
adcl
lock
sahf
mov
cmp
repnz
inc
mov
mov
aad
mov
into
sub
das
jl
mov
rclb
xor
pop
or
xchg
and
ja
mov
mov
pop
xchg
shll
mull
test
cmpsl
fisubrl
fnstenv
or
aam
mov
mull
xchg
push
add
fimuls
xchg
mov
in
rolb
mov
movsb
call
lea
lret
xchg
test
mov
nop
in
jns
push
rorb
sahf
add
or
pusha
sbb
mov
loope
xor
js
bound
cmp
test
jg
fildl
mov
sbb
cmc
aad
loop
cs
pushf
pushf
mov
adc
icebp
cmpsl
call
outsb
inc
inc
and
data16
iret
adc
faddp
add
jg
xor
pop
dec
into
jo
jo
jle
jge
arpl
mov
xor
cli
data16
inc
xchg
stos
daa
adc
jge
add
aas
aaa
inc
lock
push
loopne
push
clc
call
jae
sbb
and
scas
cmovp
mov
jne
iret
ja
test
jmp
scas
es
popa
add
roll
mov
xor
loop
pop
mov
popf
mov
xor
leave
dec
mov
pop
pop
cltd
xchg
les
inc
jnp
js
sbb
sub
xchg
add
and
adc
je
jo
mov
in
arpl
push
xlat
cwtl
sbb
cld
xchg
sub
and
push
loopne
xchg
aaa
cmc
sub
arpl
ss
pop
xor
add
loope
daa
ja
fwait
inc
xchg
lock
aad
jns
and
rolb
loopne
dec
xlat
sbb
andl
jo
filds
dec
fisubl
or
repnz
stos
fs
pop
test
lahf
mov
es
lock
push
es
or
dec
pop
push
nop
jecxz
mov
loop
push
pop
and
in
push
pop
or
adc
mov
repz
lds
dec
dec
push
bound
lds
inc
test
insb
mov
arpl
aad
xchg
push
or
jle
add
xor
in
and
scas
nop
jo
jl
lods
sub
in
mov
mov
mov
fidivs
loope
xor
jne
add
lcall
addr16
aas
pop
xchg
shll
ret
cmp
sub
arpl
in
frstor
mov
je
dec
dec
aaa
or
cmp
popl
add
sbb
and
aas
aad
push
dec
sbb
je
shll
and
ret
add
push
jnp
adcl
adc
ja
loopne
mov
in
xlat
call
leave
push
sahf
insb
movsl
mov
insl
pushf
pop
mov
inc
sbb
jmp
aaa
push
sub
cmp
sub
addb
lods
xchg
inc
out
gs
fs
jo
mov
push
pand
mov
mov
lods
fs
push
ss
adc
push
and
or
cmp
mov
pop
outsb
stos
cltd
cld
mov
xchg
insb
mov
stos
mov
mov
notb
pop
aad
jns
dec
dec
shll
sahf
xor
jno
pop
mov
adc
pop
xchg
std
mov
mov
xchg
jecxz
js
xor
add
stos
insl
fistl
xchg
and
xor
ljmp
or
std
add
or
and
mov
test
push
movsl
adc
push
fmull
fdiv
shll
std
aad
fwait
std
mov
xchg
test
sahf
ja
leave
xor
sbb
sti
push
push
in
je
cmc
hlt
mov
pop
and
addr16
sbb
sahf
and
xchg
jg
in
jns,pn
rclb
enter
popa
push
jb
pushf
das
cltd
dec
push
pop
stos
decb
push
add
lret
fcomip
push
jbe
mov
push
mulb
stc
stos
dec
cld
fistps
xor
pop
test
adc
rcl
ret
into
cmp
sbb
cmp
rcll
pop
and
jnp
fistl
fadds
das
mov
pop
pop
inc
inc
mov
leave
jle
fcoml
outsb
stos
ret
inc
mov
outsb
mov
sub
data16
lds
mov
jnp
cmp
cmc
lds
dec
sti
outsl
mov
into
pop
and
mov
cmp
xor
stos
test
jbe
fists
inc
add
xchg
loopne
sbb
fs
mov
or
push
pop
cmp
fmul
jle
insb
sbb
cs
imul
cld
dec
dec
adc
xchg
out
fdivs
cmp
inc
rclb
ds
cmpsl
enter
inc
cld
push
xchg
pop
rcll
fmull
stos
cmp
jnp
hlt
fidivl
cmp
jmp
inc
inc
or
and
popa
aaa
xor
pusha
xor
outsl
popf
sub
sbb
rcrb
mov
and
aad
call
lahf
hlt
cmp
mov
outsb
mov
nop
or
mov
mov
dec
xor
add
sub
ficompl
adc
sub
fcmovu
enter
mov
xor
push
xor
stc
cmpsb
leave
cmp
jle
mov
jg
jge
pop
mov
xor
data16
jae
xchg
sub
xchg
mov
repnz
dec
clc
push
outsb
fistpll
push
std
pop
orl
popa
dec
imul
mov
mov
aam
push
cwtl
scas
iret
xchg
inc
mov
ficoml
sub
xor
xchg
lcall
adc
idivb
or
adc
js
pop
or
adc
push
sbb
mov
xchg
inc
and
xchg
aam
and
test
sarl
gs
test
sbb
or
xchg
cmp
out
and
or
fisttpll
shlb
adc
jge
stc
pop
lock
push
dec
bnd
add
jecxz
sbb
pop
sbb
bound
cs
mov
sub
bound
test
dec
sub
cmp
jp
sub
je
add
sbb
and
repz
cmp
jecxz
mov
int3
xchg
mov
cs
or
jp
xchg
divl
adc
xlat
lcall
call
icebp
cmp
dec
ret
add
pop
cld
jl
rorl
rclb
mov
add
mov
bound
repnz
pop
hlt
push
rorl
in
in
daa
push
adc
jae
pop
clc
pop
push
jp
mov
pop
mov
das
lds
xchg
imul
mov
mov
sbb
and
fidivl
in
xchg
mov
fadds
jecxz
stos
pop
out
pushf
fs
out
outsb
xlat
push
mov
or
das
test
subb
push
out
or
mov
pop
outsb
jle
aaa
mov
push
ja
stc
push
lock
std
push
inc
nop
lcall
shlb
into
push
adc
mov
push
repnz
shl
cmp
pop
imul
inc
or
xor
mov
repz
inc
and
or
enter
dec
pop
xchg
and
shl
in
fcmovnbe
jl
sbb
out
clc
shll
xlat
test
cmp
iret
cli
shrb
cmp
or
loope
aaa
or
mov
mov
add
js
jle
push
ja
push
addr16
lret
fstp
ds
out
pop
jge
mov
or
adcb
seta
jno
jl
push
push
int3
cltd
popa
sarl
fcoms
adc
push
repz
sbb
je
imul
shr
pop
cmp
ficoml
mov
sub
add
jecxz
and
xor
cld
test
xor
mov
pop
test
mov
mov
mov
movsl
fcomps
cmpsl
inc
ret
cmp
lret
push
test
addb
insl
mov
icebp
inc
ret
xor
outsl
bound
adc
push
lds
and
into
mov
out
xchg
testl
pop
add
or
sub
sahf
outsb
adc
ret
mov
test
xor
mov
mov
pop
rcr
pop
mov
popf
jbe
pusha
xchg
mov
jmp
ret
xlat
xchg
push
lret
or
movl
sub
outsb
int3
jbe
outsl
nop
ret
pop
jb
xor
jns
mov
push
mov
adc
or
cmp
test
loop
jecxz
dec
lret
push
movsl
or
loopne
enter
ficomps
ret
clc
mov
vcvttss2si
or
ljmp
sar
and
aad
push
mov
push
mov
iret
scas
outsb
push
aam
add
mov
lret
in
push
fildl
mov
pop
xchg
lret
imul
rorl
add
insb
mov
lret
repnz
into
es
movsb
and
jbe
xchg
mov
lret
stos
mov
insl
cmpl
lcall
imul
and
inc
add
xlat
arpl
jnp
loope
sarl
test
jp
mov
jl
addr16
dec
rol
cwtl
aam
jae
incl
cmp
lea
mov
fidivs
loop
movsb
pop
stc
cli
sub
pusha
leave
mov
movsb
enter
movsldup
fcmovnu
stc
mov
scas
cmp
mov
idivb
fildll
mov
cld
push
out
dec
lret
shl
dec
sti
repz
pop
push
loop
loope
gs
cmp
imul
or
mov
les
jl
idivb
mov
cwtl
sub
or
mov
test
out
movsb
aas
mov
adc
xchg
inc
insl
stos
fistpl
dec
cbtw
lret
dec
xchg
aaa
fstps
fwait
sub
sti
pop
dec
jbe
xchg
jl
mov
xor
stc
pop
and
aas
sbb
pop
sbb
push
add
dec
scas
addr16
out
sbb
rcrl
xchg
mov
dec
push
jmp
dec
pop
xor
cwtl
daa
fdivrl
add
xchg
xor
clc
xor
fcoml
mov
inc
rolb
push
rcrb
mov
out
aam
inc
stos
pop
cmp
add
cltd
iret
add
cmc
repnz
push
lcall
dec
aam
rep
push
mov
jecxz
data16
dec
lret
pop
rclb
dec
lods
push
dec
adc
pusha
xlat
inc
cmp
in
cli
loopne
bound
pop
ljmp
dec
fmulp
out
push
ret
push
mov
jne
jne
or
shrb
push
ds
fimuls
in
xlat
push
sarb
jb
sbb
pop
add
lods
jne
inc
xor
mov
ljmp
fldenv
test
daa
int
pop
sbb
pop
jno
sub
mov
push
jge
sahf
jne
mov
xchg
divl
ljmp
bound
adc
fcmovne
in
lods
inc
mov
push
adc
add
adc
dec
fwait
xlat
repz
pop
or
push
divl
bound
jns
outsb
or
movsl
cmp
add
sub
xchg
mov
jge
scas
flds
in
out
mov
ds
add
mov
gs
adc
or
jns
movb
int3
imul
jo
push
jns
outsb
in
cltd
xor
hlt
dec
lret
sub
jo
adc
mov
icebp
dec
xor
sti
cld
lret
cmp
xor
pusha
popf
mov
pop
add
jno
insb
or
out
test
repnz
xchg
pop
rol
dec
sbb
je
push
xor
pop
aaa
add
movsl
pop
push
aam
sbb
mov
into
outsl
iret
dec
dec
push
adc
jge
iret
lret
mov
gs
xor
aad
syscall
test
or
push
fs
iret
sti
clc
jg
fwait
jmp
shr
pusha
and
in
adc
and
in
xchg
test
into
fildll
aas
aas
aad
cmpb
mov
mov
cmpl
mov
fwait
lahf
sbb
fwait
dec
test
aas
mov
aam
xchg
data16
test
push
rcr
popa
adc
sbb
mov
pop
movsl
push
and
sar
das
xor
add
mov
sub
pushf
sahf
jae
cmpb
sbb
pushf
and
fists
add
cmpb
out
cmpl
mov
sahf
movsl
hlt
out
adc
movsb
adc
pop
ss
add
in
ret
and
jg
cmpsb
fldt
dec
mov
sub
pop
aam
loopne
in
movaps
xchg
test
jle
and
push
cwtl
push
popa
out
lret
in
pushl
test
push
clc
or
aad
cmpsl
pusha
push
mov
popa
ret
cwtl
test
or
lahf
roll
ret
test
dec
or
push
loop
xor
xchg
call
orb
je
fwait
jp
movsl
push
outsb
mov
imul
cmp
ret
popf
loopne
aaa
iret
cmp
push
xchg
mov
data16
imul
hlt
xchg
pop
add
into
pop
pop
cmp
sarb
pop
mov
mov
mov
aas
jne
or
mov
je
daa
insb
cmp
xchg
incb
adc
pop
adc
ret
push
stos
out
xor
sbb
jmp
nop
add
inc
fldenv
sub
mov
pop
loopne
lods
or
js
adc
push
push
mov
ljmp
mov
mov
and
dec
adc
pop
and
aad
and
xor
sbb
cmp
jbe
notl
lahf
sub
rclb
jg
inc
shll
push
in
notl
mov
cltd
cmp
mov
popf
faddl
inc
mov
xor
xor
sahf
lods
ja
jmp
mov
pop
cmp
and
pop
and
lods
cs
mov
pop
sahf
sbb
sbb
cmpsl
fs
mov
fisttpll
or
sahf
xlat
cltd
add
mov
xchg
jg
sub
pushf
vmovups
mov
cwtl
sbb
add
or
xchg
adc
cmp
dec
adc
jns
scas
enter
or
jg
and
loope
jnp
sarl
cli
xor
in
sbb
insl
mov
bswap
adc
jnp
sbb
mov
jmp
inc
jl
jo
andl
int3
mov
fcomps
lcall
jbe
and
jo
adc
mov
xor
push
bound
xor
cld
cwtl
push
pop
mov
mov
and
imul
rcrl
push
xchg
loopne
popf
jns
xchg
ja
inc
sahf
icebp
fildll
js
mov
les
sub
and
xor
push
lcall
xor
dec
jne
mov
dec
sbb
imul
scas
sub
daa
dec
icebp
add
imul
lret
adc
jmp
pop
jl
rcrb
push
mov
dec
jmp
push
xchg
mov
dec
jb
popf
jge
cltd
js
cmp
inc
cmpsl
cmp
xchg
adc
shll
pop
fisttps
sub
pushf
sbb
push
cmp
imul
xchg
cmpl
xor
movups
jo
pop
jmp
cmc
addr16
daa
adc
pop
xor
mov
std
les
imul
sti
sbb
xchg
addr16
popa
int
aad
jp
int
out
lods
mov
jae
insb
and
andb
adc
adc
fmulp
cmpsl
inc
out
jg
pop
and
idivl
inc
and
and
mov
adc
or
mov
ja
aad
in
cmc
sbb
or
popf
pop
call
mov
movsb
or
dec
jmp
mov
repnz
popa
js
mov
out
or
stos
sub
cmp
xor
sbb
add
and
fwait
mov
test
xchg
mov
inc
lods
push
pop
mov
nop
lahf
push
sub
dec
pop
jecxz
push
sub
dec
pop
sub
xor
popa
cltd
adc
xor
clc
mov
jne
sub
negl
inc
sbb
and
ljmp
cmp
sbb
lock
les
jo
or
add
sbb
repz
rcrb
roll
cs
leave
xchg
adc
in
test
fnstcw
scas
mov
or
mov
add
inc
pushf
popf
loope
dec
data16
push
pop
imul
pop
fiadds
in
fldenv
idivb
xchg
mov
xor
fmull
lods
or
rcl
rcrl
inc
es
inc
lret
dec
aad
ret
pop
or
mov
xor
xchg
sbbl
xor
jle
pushf
call
movsb
add
or
out
add
icebp
movsl
adc
xchg
aam
cwtl
aam
mov
repnz
leave
mulb
pop
sbb
dec
or
vmwrite
shlb
cld
mov
sub
jl
sahf
fucomi
xchg
ljmp
iret
ficompl
loopne
inc
aam
fcmovb
js
xchg
sbb
jo
movb
dec
insb
out
adc
mov
icebp
xor
push
inc
clc
mov
je
mov
add
jle
cmp
jge
subl
outsb
xor
dec
dec
out
ss
