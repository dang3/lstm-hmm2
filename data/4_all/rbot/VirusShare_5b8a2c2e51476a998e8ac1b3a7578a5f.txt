push
sbb
in
cmpl
pop
cld
call
push
push
add
fucomi
lahf
addb
cmp
pop
cs
hlt
push
xor
add
push
lea
repnz
and
and
xor
push
mov
cwtl
sub
add
int3
les
data16
add
pop
pushl
sbb
or
push
push
cmpsb
inc
inc
jo
push
daa
push
icebp
jne
push
cwtl
or
or
cmp
mov
aas
sbb
pop
pop
leave
ret
fs
inc
test
pop
shlb
jle
add
vpmaxsw
mov
inc
cmpsb
pop
sub
jne
jl
jmp
cmpsb
push
inc
lods
shl
inc
jns
sbb
test
dec
sub
test
push
push
and
orb
loopne
cmp
sub
adc
push
push
popf
push
cmpsb
adc
and
rorb
popf
mov
push
push
mov
mov
xor
jbe
add
inc
xor
pop
push
call
fistpll
mov
adc
mov
mov
cli
and
sbb
lea
cmp
sahf
adc
movl
adc
movzwl
jl
stos
push
push
cmc
adc
push
or
cltd
sti
push
pop
xchg
aaa
js
mov
adc
adc
pop
inc
inc
sbb
xchg
ja
out
fsts
cmp
sub
inc
dec
in
ret
mov
xor
sub
ret
mov
orl
test
pop
xor
test
mov
sub
adc
cmp
loop
jno
cwtl
cltd
or
in
cmp
push
push
cmp
hlt
dec
ss
lock
push
push
loopne
cmp
inc
add
add
jl
out
out
xor
sub
jmp
push
clc
add
mov
cmp
push
dec
push
dec
inc
fwait
or
push
adc
and
adc
add
jecxz
inc
js
add
ret
adc
inc
or
pop
imul
shll
xor
fcoms
mov
fcmovnbe
inc
pop
mov
mov
into
push
xor
sbb
add
cmp
add
test
sub
testl
adc
sbb
sub
cmp
adc
test
dec
sbb
push
hlt
call
add
sahf
inc
mov
adc
cmp
adc
movsb
push
ret
pusha
dec
cld
addb
add
sub
adc
mov
cwtl
sbb
inc
xor
pop
xor
mov
lea
mov
push
mov
push
js
adc
mov
clc
loope
pop
cmp
clc
inc
add
adc
push
dec
pop
movsb
mov
mov
dec
pushf
sub
pop
jmp
pop
out
inc
or
add
xchg
dec
outsb
sti
sbb
pop
sbb
push
push
inc
push
mov
and
fistl
dec
adc
sbb
xchg
das
mov
cltd
into
ljmp
int
nop
push
clc
and
or
cltd
hlt
mulps
jbe
xor
jmp
adc
lock
fistps
xorb
mov
enter
shrb
cld
test
cmp
stos
add
or
and
clc
mov
or
add
roll
lret
and
mov
call
push
mov
jge
roll
adc
cmp
inc
popf
and
or
out
jno
cltd
lret
call
adc
movsb
mov
push
push
sub
mov
and
push
push
sbb
movsb
popa
sbb
mov
test
rorb
or
push
push
cmp
mov
mov
push
in
mov
data16
adc
jg
fdivrs
sti
setg
pop
pop
xchg
fucomip
push
sbb
mov
pop
lea
movsl
fdivs
sub
mov
rorb
cwtl
mov
cltd
inc
adc
ficomps
jmp
jge
call
test
inc
outsb
lcall
or
aas
and
push
inc
mov
cmp
cmp
mov
push
cmp
cmpl
stos
inc
adc
mov
leave
les
dec
push
mov
rclb
add
and
nop
mov
in
mov
sub
adc
jne
jl
loopne
ja
adc
push
sub
mov
xor
jno
xor
lcall
and
mov
jmp
movsb
inc
dec
ret
daa
jne
jne
or
mov
add
push
decb
mov
movsl
inc
cmpl
adc
jo
mov
daa
je
or
xchg
sbb
adc
fdivl
mov
lea
clc
data16
daa
fsubrs
xchg
sub
push
mov
jle
push
push
cld
xchg
inc
in
xchg
nop
adc
mov
inc
push
lods
add
or
dec
iret
dec
add
repz
adc
push
and
xor
inc
leave
or
icebp
adc
or
cwtl
inc
mov
and
sub
fs
testb
test
xor
lcall
mov
jl
subb
mov
cltd
and
push
mov
sbb
mov
push
xchg
in
dec
orl
sbb
dec
in
push
mov
or
push
pop
popa
rdtsc
sbb
adc
push
add
int3
out
cmpsb
cli
adc
mov
ficompl
jle
sbb
inc
rclb
aam
mov
push
shr
jle
pop
sub
int
xor
es
divb
dec
push
mov
fldcw
dec
rclb
gs
lea
push
mov
cmpsl
jbe
std
enter
leave
jmp
lock
ljmp
and
hlt
je
in
aam
and
pop
fidivrs
add
in
sbb
ror
fimuls
dec
rorb
mov
push
push
fcompl
jp
pop
test
inc
cmp
aad
push
int3
movsl
jnp
ret
xchg
and
push
es
es
pop
pop
push
andl
mov
scas
inc
push
cmpb
je
ljmp
pop
pop
mov
incb
cld
add
cmp
fucomip
inc
inc
leave
push
imul
jb
mov
dec
pop
int
jae
jns
or
aas
lea
xchg
push
stos
lahf
clc
add
pop
mov
cld
push
adc
pushl
push
xchg
dec
adc
push
mov
dec
fwait
or
push
push
push
push
shl
inc
cmp
aaa
pusha
mov
cmp
sti
dec
and
add
mov
shll
dec
and
mov
dec
or
and
mov
cmp
orl
push
mov
fistpll
fidivrs
shll
adc
test
testb
cwtl
jbe
aam
push
push
push
cltd
fs
sub
ljmp
push
dec
movsb
and
adc
pop
mov
mov
add
cmpb
and
adc
clc
mov
movhps
je
adc
or
inc
add
sub
sahf
or
lret
inc
in
cmpl
jl
pop
call
xor
push
fists
dec
adc
popa
inc
sbb
iret
or
inc
cwtl
push
add
pop
inc
jo
loopne
xor
mov
aam
repnz
aaa
inc
push
cmp
mov
fs
push
push
nop
andl
or
mov
pushf
sbb
or
in
or
or
add
clc
cwtl
xchg
jp
out
mov
jge
mov
xor
and
xchg
sub
add
inc
xor
adc
iret
inc
enter
mov
push
dec
sub
out
fcmovb
ss
bound
push
enter
lock
push
sbb
movsb
dec
lea
pop
sub
into
sub
pop
mov
xchg
pusha
jno
xor
inc
dec
rolb
shrl
call
pushl
cmp
cmp
jge
je
test
pop
push
adc
cmpsl
push
add
inc
inc
jmp
and
inc
push
or
mov
and
pushf
and
sub
inc
push
mov
sub
int
cmovb
inc
mov
inc
pop
pop
mov
mov
adc
sub
ds
xor
push
pusha
pop
nop
dec
leave
jmp
and
mov
clc
adc
aas
jmp
testb
adc
and
sub
and
call
ret
xor
lret
dec
sub
pop
aaa
xchg
inc
pop
mov
and
or
fmull
or
in
mov
sbb
mov
cwtl
jno
push
and
pop
inc
xchg
xor
mov
clc
pop
push
iret
or
pop
ret
pop
mov
and
pop
jo
sbb
cmp
mov
pop
fdivrs
les
pop
mov
push
insb
or
dec
or
adc
pop
mov
sbb
rcrb
movsb
sbb
inc
xor
or
adc
or
pop
test
es
jmp
cwtl
js
add
jo
popa
test
das
fldenv
adc
mov
mov
or
dec
sub
push
dec
imul
lock
movsl
pushf
js
xchg
test
ja
push
jbe
arpl
adc
pusha
dec
rorl
and
sub
nop
add
std
and
dec
out
shlb
push
cltd
lahf
hlt
adc
call
xlat
lcall
lds
jo
loop
cld
cmp
inc
inc
hlt
in
cmp
ret
jecxz
std
and
outsb
add
pusha
lock
pop
add
decb
and
add
sbb
lret
or
mov
mov
sbb
lock
push
xor
mov
add
jo
cmp
int3
inc
cld
lcall
push
sbb
push
mov
cmp
adc
push
jl
add
movsb
or
xchg
cltd
lock
mov
jne
mov
nop
or
sbb
sub
push
jmp
shlb
adc
imul
adc
scas
cmp
insb
bound
mov
cmp
xor
sti
add
nop
push
and
mov
in
pop
lock
orb
jbe
or
pop
ret
push
shr
xor
add
pop
dec
add
shl
lret
into
stos
aas
leave
sub
mov
cmpb
push
shl
xor
or
sub
test
aas
sbb
aaa
mov
xchg
cmpsb
adc
mov
xlat
xor
or
and
inc
mov
pusha
cwtl
jnp
in
push
push
or
push
push
dec
enter
sub
sub
push
sub
adc
shrl
sbb
mov
sbb
fwait
adc
mov
in
xchg
out
lods
pusha
or
or
push
or
jmp
dec
or
xor
dec
xor
leave
inc
or
xor
xor
push
or
test
cmp
popa
pop
movsb
jmp
outsb
pushf
push
das
jg
dec
adc
addr16
or
adc
bound
xor
cmp
rcll
jmp
sbb
int3
mov
adc
push
pop
loopne
je
and
adc
in
xchg
cld
and
push
push
mov
loopne
clc
sub
cs
cmp
or
push
xchg
inc
dec
test
ljmp
sub
add
lret
jg
mov
adc
mov
mov
mov
out
dec
or
je
push
adc
js
and
and
or
inc
mov
sub
sub
push
push
jno
mov
dec
push
cmp
adc
or
cmpsl
pop
enter
clc
call
push
jno
scas
imul
adc
cmp
loope
dec
cld
cmc
xor
dec
sub
mov
sub
test
in
adc
stc
and
fidivl
dec
dec
jb
stc
cld
or
adc
mov
add
or
xor
push
push
sub
add
inc
xchg
mov
mov
jmp
adc
aam
les
sub
jno
xor
sub
jno
and
cmpsl
lods
in
and
mov
push
hlt
add
sbb
mov
cli
sub
push
mov
or
jp
addl
pusha
push
leave
arpl
fdivrs
les
mov
mov
or
add
je
mov
push
imul
jo
or
adc
rcrb
sub
je
pop
cmp
push
flds
fldpi
js
popa
cmp
dec
daa
xchg
inc
je
stos
test
or
or
adc
cld
push
cmp
push
mov
xchg
mov
cmp
adc
cmp
in
dec
or
sub
les
dec
cmp
repnz
mov
call
test
movsb
inc
testl
push
push
push
pop
pop
lea
add
cmp
je
orb
sub
push
mov
dec
add
test
andb
or
push
push
add
movzbl
adc
pop
in
mov
das
sub
push
sbb
nop
add
rorb
xor
add
call
mov
gs
sahf
jmp
das
push
push
add
lahf
movl
mov
add
mov
cmp
add
jge
xor
push
inc
pop
and
js
mov
mov
xor
push
bound
cmp
push
push
or
fmuls
mov
mov
in
or
je
cmp
cmp
sbb
jle
push
pop
lds
xchg
pop
lea
pop
or
inc
cmp
aas
cmp
or
mov
inc
xchg
sbb
dec
xor
mov
add
cmp
jl
mov
sti
sub
xchg
xchg
sbb
xchg
mov
jmp
loopne
pop
add
lea
aam
push
push
mov
or
xchg
sub
mov
and
jl
xor
filds
cs
inc
adc
push
cmpsl
dec
lahf
cmp
and
or
xor
in
dec
lock
movsl
mov
xchg
sub
sbb
scas
lock
push
jmp
in
lret
leave
or
stos
out
movsb
or
ds
add
add
imul
call
fnstsw
cwtl
outsb
mov
testl
adcb
push
inc
lret
push
lock
addr16
inc
fsubrl
mov
fs
lcall
jle
je
cmp
mov
sub
pop
jns
push
fiaddl
push
les
pushl
popa
repnz
mov
cmp
or
outsl
sub
sub
add
in
data16
adc
gs
sub
or
rcrb
xor
bextr
inc
ret
xchg
lods
mov
push
xchg
adc
mov
mov
adc
xor
scas
call
sbb
in
cmp
cmp
mov
sbb
and
sarl
xchg
inc
imul
push
stos
xor
mov
jbe
push
rorl
push
sbb
adc
pop
inc
fildll
xor
or
mov
mov
push
cmpb
xor
cmp
adc
pop
and
mov
jae
dec
test
ja
les
jnp
aas
push
cltd
cld
testl
mov
xchg
in
ret
in
jge
adc
jg
xchg
sub
push
add
pop
mov
rcll
dec
cmp
dec
int3
or
push
das
out
push
inc
pop
push
xchg
lcall
xor
xchg
mov
imul
dec
ficoml
pusha
jne
mov
or
pop
jns
push
push
dec
sbb
sub
enter
xlat
or
adc
je
inc
js
mov
xchg
rcrl
xor
in
mov
andb
imul
cwtl
dec
push
clc
sti
rolb
push
xor
mov
mov
nop
popa
dec
cld
je
addr16
pop
repz
xor
cmp
insb
adc
dec
xor
fcoml
jne
fmuls
fists
je
push
xor
shll
jge
mov
cwtl
enter
pop
lea
push
lret
sub
lret
inc
cld
enter
jo
sub
js
fs
adc
xor
and
adc
nop
or
outsb
cmp
andl
or
dec
xor
shl
test
andb
and
sbb
loop
sbb
cmp
pop
or
ret
js
sbb
push
mov
sbb
out
loop
jb
xchg
sub
mov
pextrw
push
mov
sub
bound
pop
fbld
jmp
mov
pop
rcl
out
fsubrl
xchg
push
push
repnz
sub
repnz
sbbb
insl
movsl
mov
mov
dec
rol
je
sbb
xor
or
inc
cltd
flds
shlb
pop
or
xchg
sti
or
xchg
adc
push
test
mov
adc
cmpsl
mov
iret
movsl
and
out
cld
scas
xchg
pop
adc
inc
mov
sbb
mov
mov
cmovns
mov
out
mov
movsl
cmc
xchg
push
adc
sbb
pushf
cwtl
sub
xor
push
inc
mov
pop
jmp
clc
clc
sbb
mov
lock
adc
movlps
es
fldt
and
dec
jnp
mov
ds
insb
adc
mov
shlb
jo
inc
push
and
adc
or
mov
sub
js
movsb
sub
lods
pop
inc
pop
and
into
push
mov
mov
rol
das
or
push
push
test
push
test
or
nop
icebp
pop
or
adc
adc
fs
and
sub
jl
dec
mov
sbb
pusha
mov
mov
nop
sbb
sbb
rorl
dec
sub
sbb
push
and
js
push
fsubrs
stos
iret
push
cmpb
inc
in
and
or
sub
ja
push
fs
mov
rolb
mov
mov
add
inc
add
inc
out
mov
test
stos
daa
lock
hlt
xor
push
push
mov
and
adc
cmpsl
lods
xchg
adc
mov
mov
in
inc
and
sarb
mov
xchg
adcl
adc
nop
jg
adcl
adc
lea
xchg
fwait
cmp
jb
adc
fs
adc
sub
test
xchg
sahf
inc
cld
mov
mov
test
sbb
stc
push
test
neg
sbb
inc
iret
cmp
push
sub
dec
mov
enter
mov
xor
mov
icebp
sbb
lods
and
les
push
loope
sbb
mov
mov
daa
inc
inc
adc
scas
and
cmp
sbb
cwtl
arpl
pop
mov
sbb
mov
outsl
movsl
jb
push
add
sbb
or
loop
mov
dec
aad
movsl
arpl
fcmove
sub
cmp
hlt
pusha
and
dec
popa
xchg
push
ss
sbb
jo
push
push
in
push
mov
fsubs
stc
aam
xor
cmpsl
out
jnp
ds
fmull
faddl
fs
push
iret
push
fimuls
aam
sub
inc
repz
inc
js
hlt
test
sub
out
call
iret
xor
in
hlt
js
sub
out
mov
int
adc
in
cmp
cs
ss
xor
out
lret
mov
or
orb
sub
inc
inc
jne
sahf
dec
into
mov
inc
inc
xor
sub
mov
push
icebp
cmpsl
cli
sarb
imul
adc
aaa
daa
pop
call
xlat
mov
into
aas
subb
inc
in
and
les
push
cmp
mov
sbb
and
mov
pop
adc
mov
and
inc
sub
and
cwtl
cs
xor
pop
and
xor
daa
xchg
dec
sub
push
and
dec
bound
mov
adc
jp
sbb
rcrb
mov
icebp
mov
add
sub
test
aaa
or
push
mov
sbbl
or
rcrb
stc
js
lock
push
xlat
dec
pop
insl
nop
fndisi(8087
sub
mov
cmp
push
push
fmul
iret
cmpsl
sub
or
mov
push
cwtl
adc
jb
adc
bound
sbb
sub
pop
push
add
sbb
pushf
in
mov
mov
rorl
mov
push
nop
sub
outsl
sbb
and
xor
mov
scas
add
and
xor
pushf
dec
pushf
cmp
aas
rorl
inc
add
add
push
scas
fs
insb
cmp
pop
pop
or
inc
fildll
and
cmp
test
lea
adc
lcall
dec
mov
mov
push
xor
mov
bound
call
movsl
cmp
aam
pop
aas
or
cwtl
scas
add
popf
outsl
lret
push
leave
aaa
insb
xchg
faddl
xchg
cmpsl
les
iret
adc
dec
enter
lahf
je
or
inc
lock
inc
xchg
xchg
mov
fcoml
mov
lds
gs
xor
insb
lds
add
aam
mov
inc
and
hlt
loopne
movsl
shrl
in
cmc
ds
cld
enter
neg
lret
sbb
lock
call
inc
jl
jl
pusha
inc
xchg
mov
adc
call
inc
idivb
pushf
cli
and
xchg
es
mov
test
enter
inc
inc
call
and
cmp
dec
pop
and
xchg
fwait
scas
mov
les
je
adc
dec
lea
imul
xor
inc
mov
movb
sbb
loop
add
js
cmp
xor
cmpb
mov
pop
movsb
xchg
scas
jecxz
bound
and
inc
gs
xchg
xchg
push
test
nop
adc
and
inc
mov
mov
loope
push
or
test
mov
inc
cmp
inc
repz
xchg
int3
repz
push
mov
push
sub
adc
xchg
addl
mov
in
adc
xchg
xchg
pop
push
adc
mov
push
push
dec
xor
dec
inc
test
in
cmpsl
aaa
lods
stc
xor
loope
inc
out
inc
cli
int
inc
adc
mov
sub
cmpsl
mov
es
in
outsb
mov
cmp
out
or
ljmp
inc
push
push
inc
push
mov
cmp
push
sub
xchg
push
inc
inc
les
out
sub
xor
int
pushf
xchg
shlb
pop
mov
and
or
fbstp
and
adc
fcom
adc
mull
cmpsb
adc
sahf
cwtl
lcall
push
adc
inc
and
xchg
imull
adc
or
and
dec
loop
adc
jo
or
inc
push
add
shl
dec
or
sub
adc
push
dec
jmp
or
dec
cld
aaa
sbb
or
cmp
inc
pop
adc
test
out
push
fwait
cwtl
pop
in
test
clc
movsl
mov
pusha
fs
push
fsubl
jmp
fldcw
out
sbb
mov
sub
xchg
jae
out
cmp
or
dec
nop
push
adc
push
clc
pop
cmp
sub
mov
test
ss
adc
sbb
mov
insb
test
xor
adc
aas
and
ljmp
dec
pop
jge
jmp
push
add
push
push
pop
mov
mov
mov
adc
push
fsub
mov
jns
repnz
fadds
testb
jb
inc
adc
dec
or
sar
arpl
dec
subl
aas
lea
sbb
es
shll
les
dec
int
mov
sahf
hlt
push
inc
cmp
dec
push
adc
cmp
sub
divl
or
push
mov
dec
sub
jmp
fs
andb
sub
pop
movsl
dec
xchg
adc
add
push
mov
sbb
movsbl
mov
cs
push
mov
pusha
push
jno
mov
adc
sahf
push
dec
or
inc
aas
lahf
inc
dec
xor
xor
push
dec
push
daa
push
and
sbb
sub
pop
aam
sbb
sbb
testl
inc
loope
insb
mov
das
push
lods
scas
fldcw
cs
out
shrl
enter
pop
mov
adc
or
mov
push
pop
out
adc
leave
fadds
adc
xchg
loop
adc
dec
loop
enter
add
outsb
lock
jg
xchg
xchg
daa
jns
jle
sub
push
push
pop
leave
xor
xlat
test
jne
push
xor
add
leave
sti
fisubs
inc
in
and
cmp
inc
test
dec
sbb
push
lret
lahf
sbb
sbb
push
mov
dec
adc
inc
cwtl
leave
pusha
mov
and
adc
xorb
into
test
cmp
adc
lods
lods
mov
ret
adc
mov
out
dec
movsl
xchg
into
pop
cmp
mov
les
frstor
adc
out
sub
cmpsb
mov
push
loop
fisttpll
or
int3
out
pop
push
movsl
iret
mov
sbb
test
pop
scas
xchg
push
js
pop
xor
insb
sahf
sub
adcb
push
push
adc
imul
inc
or
push
jmp
mov
or
out
push
fs
ljmp
add
fs
mov
pushf
adc
push
ret
adc
inc
mov
sbb
ljmp
ret
bnd
sub
fs
xchg
sti
je
mov
sbb
sub
mov
les
dec
pusha
out
orl
jl
leave
je
dec
push
push
call
or
add
bound
enter
hlt
xor
dec
les
pop
push
addr16
mov
adc
pop
pop
inc
daa
sbb
addr16
mov
push
cmp
xchg
jmp
jecxz
out
jmp
data16
ljmp
pushf
pop
mov
jmp
outsb
dec
orl
or
ss
jo
push
enter
sbb
push
sub
or
fs
inc
adc
xor
mov
pop
add
sbb
enter
add
push
mov
xchg
dec
sbb
add
mov
adcb
imulb
push
lret
pushf
pushf
push
adcl
out
leave
cmp
pop
shrl
adc
dec
push
and
and
or
pop
mov
dec
cmp
mov
and
jo
jnp
push
arpl
mov
lahf
jmp
xor
adc
dec
sub
mov
adc
or
pop
inc
push
shll
cmp
idivb
push
add
adc
jg
enter
dec
leave
fistpl
fists
fstl
je
dec
and
dec
jbe
push
inc
and
je
movsb
inc
clc
sub
insl
les
stc
adc
loope
xor
stc
mov
iret
jmp
xchg
xor
loop
ret
dec
xor
lods
clc
shlb
test
test
clc
movsb
push
ret
inc
push
cmpsb
shld
sbb
pop
imull
adc
data16
push
cmp
adc
inc
sub
mov
cmp
and
push
lret
push
lea
inc
sub
sub
add
test
pop
xchg
sub
mov
add
call
sub
mov
inc
dec
shrl
mov
les
cld
ret
and
cltd
aad
sbb
pop
bound
add
pushf
xor
add
insb
or
dec
xchg
push
sbb
repnz
dec
lret
outsb
pop
rcll
cmp
shll
mov
loopne
push
addr16
pop
jmp
adc
sub
out
out
sarb
or
push
inc
lock
in
sub
xchg
and
test
inc
mov
mov
cmp
clc
add
add
daa
add
jne
ds
and
mov
test
jge
jp
xchg
les
loop
cmp
dec
dec
inc
jne
stc
cmp
sbb
xchg
jge
arpl
adc
and
xchg
mov
fstpt
imul
or
mov
xor
and
clc
clc
dec
jl
jle
sub
jl
in
loopne
out
add
inc
adc
push
add
adc
notb
add
sub
jmp
jne
inc
sub
jo
lods
push
xchg
cmp
dec
sub
sahf
or
jl
cmp
test
xor
xchg
mov
repz
dec
fmuls
arpl
adc
push
and
adc
pop
dec
dec
negb
dec
or
or
mov
push
es
ret
sbb
mov
stos
ret
jb
inc
cltd
jns
sbb
mov
outsb
and
or
sahf
arpl
jl
js
cmovge
and
jno
movsl
xchg
and
in
xchg
jb
or
sarl
push
and
mov
mov
enter
mov
dec
scas
insb
out
or
ret
shr
xchg
sub
xor
add
or
cmpsb
imul
add
ss
adc
mov
and
sub
push
shlb
std
mov
popf
sbb
adcl
scas
jmp
jp
push
adc
mov
sbb
sub
sbb
adc
xor
jbe
xchg
ss
push
push
dec
aas
and
rcll
mov
or
out
ret
dec
aam
fdivrl
test
cmp
xlat
test
push
jmp
test
ds
fdivs
mov
test
cmp
mov
loop
mov
mov
rcll
icebp
movsb
push
and
mov
fidivs
xchg
mov
enter
addb
je
jle
xchg
jo
cmp
pop
enter
push
adc
mov
loope
jno
and
sbb
pusha
adc
or
dec
inc
js
mov
push
cmp
or
inc
sbb
xor
and
rcll
test
in
outsl
jns
int
adc
fnstcw
repnz
bound
xlat
add
or
movsl
mov
cmp
pop
mov
mov
fdivrp
arpl
pop
js
test
adc
adc
mov
inc
jmp
js
test
cmp
inc
imulb
shll
sbbb
jg
and
hlt
dec
sub
cmp
jnp
mov
push
shl
adc
repz
add
inc
cmp
lea
dec
std
aas
loop
cmp
pop
js
jo
lahf
dec
into
xlat
das
popf
insb
xchg
sub
or
jp
inc
fcoms
or
sbb
js
push
inc
jo
je
inc
insb
test
and
xchg
pusha
sub
rcrb
clc
push
lea
sub
sbb
xor
xchg
and
enter
sub
adc
inc
xor
cld
cmp
and
aam
mov
cmp
adc
add
or
cmp
dec
jno
loop
ljmp
lock
movsl
jnp
gs
xor
in
inc
ja
fs
xchg
jne
sub
bound
push
add
jp
sti
addr16
mov
adc
adc
adc
subb
rcpps
mov
mov
shll
movsb
jl
popf
and
shrb
stos
xchg
rol
inc
sbb
sbb
pop
xor
into
xchg
inc
push
ja
or
in
sub
mov
jmp
inc
jmp
mov
and
mov
adc
js
loop
cmp
lahf
insb
inc
fs
pop
ret
adc
push
in
mov
xchg
repnz
mov
push
push
sbb
dec
push
inc
sbb
sbb
call
and
cltd
std
mov
cmp
out
in
adc
xchg
adc
jne
cmp
inc
pop
adc
lds
repz
sub
and
add
jl
dec
push
mov
mov
imul
push
dec
add
mov
pop
fsubrs
lock
int3
gs
inc
mov
sarb
mov
mov
pop
push
nop
and
xchg
inc
jbe
mov
es
cmp
add
push
or
sysexit
sbb
cmpsb
test
inc
push
je
ds
out
cmp
pop
inc
orl
jge
into
sub
cmp
adc
les
adc
sbb
or
ljmp
sahf
lcall
push
push
inc
repz
sbb
je
popf
push
adc
cmc
and
inc
add
jno
mov
push
lcall
dec
add
clc
movsb
scas
or
jo
test
aaa
xor
clc
add
or
pop
or
cmp
cmp
jbe
push
push
lea
inc
js
pop
out
mov
dec
adc
lea
push
outsl
adc
mov
je
sti
adc
xor
jae
sbb
mov
adc
fsubr
pop
inc
hlt
xchg
add
or
shl
add
mov
es
push
mov
inc
imul
sbb
rclb
ljmp
cmp
fstl
js
add
jecxz
decb
pushf
jmp
mov
nop
adc
enter
lret
or
repnz
popf
mov
stc
adc
sub
dec
sub
daa
or
mov
pop
push
movsb
add
popf
fxch
inc
jmp
and
cmp
mov
mov
test
adc
pop
repz
mov
cmp
adc
adc
mov
xchg
mov
push
push
cmp
pop
loop
repz
sub
inc
addb
int3
jle
xchg
sbb
push
and
pop
in
and
incb
popf
loopne
mov
jl
faddp
adc
jl,pt
pop
and
clc
pop
and
pop
adc
sub
insb
xchg
out
cmp
ret
adc
pushw
pop
push
cwtl
addr16
or
cmpb
je
movsl
aam
sub
mov
jmp
scas
mov
add
mov
outsb
in
or
andb
popf
nop
mov
enter
setae
push
fldenv
push
push
je
push
lea
and
rcrl
and
test
je
enter
push
cmpsb
fiaddl
push
jmp
push
aas
sbbb
loopne
mov
ja
mov
push
fdivl
or
test
jnp
push
lock
sbb
jl
cli
mov
jnp
bound
daa
xchg
enter
adc
in
ffree
jo
cmp
mov
ljmp
mov
roll
dec
mov
xor
adc
xor
aas
add
lea
add
jmp
cwtl
and
push
movsl
ret
fstpt
dec
dec
in
adc
jne
sbb
sar
enter
cmp
inc
aaa
mov
push
xchg
add
je
icebp
ret
sub
mov
in
jl
ja
jmp
jne
jecxz
mov
mov
dec
sbb
test
mov
cmc
fscale
cmp
mov
jnp
popf
cmc
cmp
adc
inc
gs
imul
insb
pop
mov
jne
mov
cmp
mov
jo
cmc
adc
adc
lods
pushf
xchg
lea
sub
mov
push
or
out
ds
sahf
iret
push
mov
add
jp
sub
or
call
cmc
mov
xor
lret
pop
pop
sbb
test
xor
push
in
loop
lea
jge
sarb
call
nop
xchg
xchg
lea
xor
pop
sbb
dec
mov
or
icebp
mov
jmp
mov
lcall
xor
fstpl
mov
dec
push
lcall
dec
sub
mov
mov
in
push
lcall
mov
fwait
hlt
push
or
jae
aaa
pop
cltd
mov
adc
and
mov
adc
aam
sub
lss
divb
dec
popa
cwtl
sbb
cmp
mov
xchg
mov
lods
inc
and
mov
xchg
into
ja
sbb
aad
bound
pop
cmp
or
sub
and
xchg
or
adc
jae
dec
enter
push
push
push
mov
repnz
xchg
jp
daa
mov
stc
cmp
stos
mov
mov
add
xor
pushf
pop
jae
jae
sarb
pop
repz
and
in
dec
stos
jmp
inc
add
xchg
psrlw
icebp
in
je
fdivrl
push
cmp
cmp
mov
jae
sub
adc
shr
pop
dec
into
mov
rcll
adc
and
mov
pop
les
das
call
inc
sbb
stc
lods
scas
jg
sub
jle
lret
dec
stc
cmpsl
jbe
inc
je
push
pop
icebp
and
inc
dec
mov
mov
dec
mov
jmp
xchg
xchg
jne
push
outsl
stos
adc
jb
shll
call
call
mov
jmp
outsl
lahf
int
es
shrb
cmp
repz
dec
movsl
shlb
fwait
adc
mov
sub
imul
cmp
pop
cmpsl
cmp
out
adc
test
adc
ja
mov
push
pop
rorl
cmpsl
push
and
ds
enter
mov
jb
sbb
clc
aas
mov
mov
jne
and
jb
pop
arpl
dec
mov
rorl
jns
out
and
mov
jae
cmp
inc
cmp
push
xchg
mov
mov
sub
test
adc
daa
sbb
mov
sub
cmp
mov
inc
or
outsb
jns
jno
ret
push
int3
out
test
inc
rclb
movsb
pop
xchg
adc
push
cs
inc
add
mov
adc
inc
std
aas
mov
cmp
mov
lock
push
imul
int3
dec
loopne
into
and
and
std
xchg
icebp
test
or
and
cwtl
or
push
call
add
loop,pn
popf
call
dec
inc
cmp
jg
dec
dec
ds
push
inc
cmp
dec
dec
call
sub
cld
dec
push
testl
jle
lods
mov
mov
adc
push
testb
xchg
pusha
and
sub
je
lea
ljmp
mov
lods
arpl
sbb
ficomps
push
fcompl
movsb
sbb
or
pop
lods
jb
push
add
or
dec
add
inc
sbb
xor
movl
sub
cli
cmp
jne
clc
scas
in
mov
dec
ret
lahf
adc
push
fistl
adc
mov
lahf
stc
push
add
idivb
sbb
inc
fwait
push
pop
movsb
sub
mov
lcall
flds
inc
push
pop
adc
push
mov
lahf
xor
push
cmp
lahf
xchg
das
sub
pop
push
ficompl
sbb
popf
repz
mov
xor
push
dec
xor
shll
arpl
inc
fsubp
jae
dec
das
inc
loope
es
test
pop
xchg
inc
orb
pop
sbb
push
and
fcoms
shrb
ret
adc
bound
insb
test
or
dec
add
or
mov
std
je
mov
and
ret
imul
jbe
add
icebp
pusha
cmp
jl
jmp
jns
aam
sub
or
ja
stos
add
push
roll
push
mov
mov
and
in
cmp
ret
cmpsb
out
pop
add
lock
aas
out
add
pop
not
pop
ret
inc
out
push
lods
push
mov
es
and
cmp
cltd
daa
negb
shrb
jne
fsubr
inc
or
xchg
lds
leave
orb
mov
xchg
push
aaa
pushf
jnp
mov
adc
pop
sarl
scas
and
mov
clc
movsl
mov
or
sbb
mov
out
test
mov
das
leave
dec
push
pusha
and
jmp
mov
inc
lock
push
gs
pusha
jne
or
jmp
sub
mov
pop
call
fcompl
leave
shr
fisttpll
xor
push
addb
cmp
sbb
mov
pusha
in
add
cwtl
pop
ljmp
lret
add
test
jmp
pushf
in
pusha
in
dec
inc
lock
ret
imul
inc
jne
fs
jp
pop
jae
mov
push
cmp
std
mov
push
movsb
xor
push
adc
push
adc
adc
adc
lea
lock
je
gs
ljmp
jne
mov
cli
insl
mov
xlat
out
or
push
push
xchg
mov
sub
in
mov
mov
dec
adc
sub
pop
or
test
inc
or
andb
rclb
cmpl
push
xchg
aaa
push
shlb
inc
aam
insb
js
jl
push
aaa
cmp
bound
pop
adc
rorb
punpckhbw
adcb
xchg
notb
mov
nop
mov
xchg
and
push
adc
pop
insl
rclb
xor
decb
std
lret
adc
lock
jne
add
add
mov
cmp
or
adc
cmp
adc
sub
cwtl
cmp
push
call
push
in
and
and
pusha
sub
xor
mov
adc
repnz
mov
and
or
ret
insb
add
cmp
adc
xchg
testb
sbb
movl
cld
xchg
inc
sub
test
clc
mov
popf
push
fucomp
add
push
push
inc
push
push
ret
cmp
filds
jecxz
mov
roll
outsl
xor
orl
jns
push
push
xor
add
push
xchg
insl
icebp
in
test
aaa
xchg
xor
and
pusha
xor
and
loope
or
pop
mov
adc
mov
and
push
cltd
add
xor
push
hlt
mov
das
push
xchg
je
push
addb
in
leave
test
push
lahf
mov
test
cmpsl
cld
in
sub
mov
jno
push
cltd
stc
mov
nop
rcrb
and
popf
cwtl
push
dec
cmp
fs
es
dec
adc
je
sub
movsl
cs
fstpt
mov
fprem1
xchg
movb
adc
dec
fisttpll
push
and
lock
or
test
fldenv
outsb
jecxz
push
sbb
xchg
mov
mov
rorb
sub
xchg
and
push
pusha
enter
xchg
idivl
mov
push
sub
pop
xor
int3
dec
test
xchg
inc
push
clc
push
and
test
adc
xchg
in
mov
js
imul
sub
xor
loopne
inc
inc
xchg
lret
iret
movsb
lods
popa
in
lods
sub
add
and
sbb
push
jnp
clc
adc
xchg
and
sti
inc
push
nop
mov
mov
xlat
and
movsl
mov
add
adcb
mov
pop
pop
dec
jle
enter
adcb
sub
roll
mov
je
nop
dec
pusha
push
or
dec
xchg
xchg
sub
inc
pop
enter
cld
out
in
pop
inc
popa
or
adc
je
xor
or
mov
sub
push
and
jl
push
push
push
imul
in
xchg
cmp
jne
nop
gs
sbb
xchg
lds
cld
xor
lock
stc
xchg
xchg
pop
xor
dec
imul
jo
mov
xor
lock
movsb
push
and
and
mov
scas
ja
or
mov
adc
jns
adc
inc
js
mov
pop
hlt
mov
data16
jae
mov
sub
sahf
jbe
lcall
test
cmpsl
mov
je
js
ljmp
scas
test
mov
sub
pop
xchg
sbb
mov
sbb
inc
adc
ss
pop
hlt
movsb
je
push
dec
and
push
fisubs
test
js
addr16
sub
mov
cmpsl
inc
movsl
or
in
mov
mov
call
fimull
mov
sub
push
test
fbstp
jno
mov
or
and
and
xor
or
lahf
sub
xchg
call
mov
add
inc
cmp
jb
pop
orb
xchg
mov
pusha
std
sbb
lock
lods
lcall
sub
imul
pushf
pop
push
sub
sbb
aaa
mov
inc
add
push
mov
sub
icebp
pop
enter
pop
int3
fsub
je
push
outsb
dec
call
mov
orl
xchg
sbb
inc
fwait
xchg
jnp
xchg
jle,pn
mov
scas
pop
jg
or
mov
adc
inc
cmp
and
jmp
cmp
jmp
insb
subb
cmp
in
cmp
adc
dec
or
ljmp
or
push
inc
sbb
cwtl
push
fmuls
add
mov
je
push
add
push
push
in
cltd
idiv
test
shlb
sub
jmp
ret
add
inc
dec
lea
dec
enter
repz
jge
dec
test
lock
cmp
jl
popa
sub
cltd
or
push
sbb
sldt
mov
ret
fldenv
push
push
sbb
adc
xchg
or
inc
xchg
or
sbb
enter
call
adc
and
or
mov
arpl
cld
lock
and
clc
js
xchg
and
les
mov
clc
das
rep
push
js
cwtl
add
and
mov
dec
lahf
jge
pop
outsl
dec
insb
or
in
push
lock
push
cmc
add
push
pop
push
mov
pushf
addr16
push
call
cmpsb
jo
mov
cmp
dec
or
popa
mov
arpl
mov
add
sub
push
das
xor
sub
jne
mov
push
xchg
imul
mov
xor
mov
pop
or
sbbb
lret
cmp
fiadds
mov
mov
jb
or
push
addl
xor
fiadds
dec
scas
mov
mov
fwait
outsb
or
repz
jmp
sub
sbb
sbb
jmp
sbb
das
hlt
ljmp
sub
xor
sub
and
jmp
pop
out
shlb
push
add
mov
push
xorps
dec
adc
jl
push
divl
lods
mov
adc
adc
jl
push
mov
rclb
cmp
jne
into
push
lcall
pop
inc
add
xor
push
dec
mov
mov
pop
stos
pop
fs
xor
aaa
and
pop
ret
xchg
mov
movsb
and
adc
fsubrs
test
push
jge
fsubrl
mov
mov
pop
test
lret
lods
fistpll
mov
pop
fxch
adc
dec
and
adc
daa
cmpsb
pop
mov
mov
mov
and
mov
push
adc
xor
pushf
push
cmp
mov
test
jl
push
sbb
in
sub
test
xchg
jo
jg
xchg
sbb
movsb
ret
scas
cmp
xchg
adc
movsb
scas
sarb
jne
push
movsb
sbb
dec
movsl
mov
cmpsb
test
pop
dec
enter
and
pop
daa
ret
scas
mov
pop
pop
mov
lods
jnp
cs
fidivrl
pop
inc
push
inc
push
push
sbb
mov
inc
pusha
test
xchg
inc
mov
jo
data16
pop
mov
xchg
xlat
mov
sub
test
dec
sbb
mov
jne
adc
rorl
adc
adc
xorl
shl
adc
adc
int
mov
push
sbb
pop
call
pop
xchg
or
xchg
nop
push
mov
std
scas
test
je
test
test
loope
test
adc
les
xchg
pop
out
sahf
mov
mov
mov
push
xchg
mov
test
test
pop
cltd
decl
cmp
and
test
call
sub
je
addb
pop
or
xchg
mov
mov
and
arpl
push
push
or
xor
daa
push
push
mov
or
mov
sbb
sbb
dec
xchg
mov
xor
sbbb
mov
psubsb
mov
int3
icebp
jo
rorb
js
mov
in
dec
mov
xlat
mov
test
jge
add
mov
pop
call
sarb
in
cmpl
dec
inc
push
les
and
mov
sub
xor
xchg
sbb
fisubs
push
xchg
or
insb
mov
and
jns
pop
jecxz
test
mov
jmp
sub
sub
sub
or
push
dec
fstpl
sub
sbb
cld
sti
xchg
mov
mov
cmp
push
sbb
push
push
addb
push
cld
push
mov
and
mov
adc
mov
push
push
sbb
imul
sub
lea
outsb
mov
test
je
xchg
dec
jle
aaa
sbb
call
push
pop
mov
cmp
rclb
orw
or
adc
or
test
adc
cmp
and
xchg
outsb
fidivrl
lea
lcall
jne
cli
pop
xchg
addb
add
cld
push
or
or
pushf
xor
mov
shll
pop
pop
and
ret
stos
std
scas
ucomiss
add
xor
orl
sbb
loope
insl
ret
adc
inc
daa
out
sti
sbb
jb
pop
popf
outsb
fisubs
jmp
mov
fs
cld
in
inc
lock
mov
inc
js
movsb
adc
push
xchg
xchg
cld
fwait
mov
sbb
in
xchg
mov
clc
xchg
mov
loope
pushf
xchg
sbb
add
push
jo
lock
jg
inc
rcll
jmp
push
cli
and
sbb
cs
subl
dec
sarb
enter
test
add
or
int3
repz
inc
dec
es
hlt
push
dec
lret
lds
sub
adc
pop
inc
xchg
test
mov
int3
shl
inc
add
int3
cmp
or
jmp
and
adc
adc
and
sub
fnstenv
and
sbb
sbb
jl
shr
and
pusha
test
sbb
cwtl
cwtl
cmp
lods
sub
hlt
inc
sub
test
mov
addl
nop
or
cmp
pop
sub
pop
cli
pop
pop
mov
test
jne
aam
lcall
push
mov
pushf
xchg
sarb
hlt
pop
andl
xchg
mov
pushf
adc
je
cmp
js
push
cmpl
cmp
pop
cld
and
cmp
jne
inc
insl
in
add
fs
push
addr16
mov
imul
push
dec
inc
pushf
mov
leavew
push
xor
pop
xchg
xchg
leavew
push
sbb
sub
push
out
xlat
adc
push
mov
add
cmp
orb
pop
mov
and
adcl
sbb
xor
push
stc
add
mov
testl
xchg
sub
push
sub
or
xchg
outsb
or
pushf
movlps
fimull
leave
push
pushl
push
adc
mov
push
ficoml
imul
mov
mov
and
push
aaa
lock
lret
push
and
in
and
jne
or
xchg
xchg
in
leave
and
aad
mov
inc
add
test
stos
ljmp
mov
lock
aam
or
add
repnz
add
adc
mov
arpl
jne
mov
and
dec
fdivr
jge
sub
or
cmc
xor
into
dec
xor
push
out
out
cmp
sbb
jmp
sbb
sbb
xchg
addl
and
loop
test
in
sbb
aas
jge
mov
dec
outsb
jle
testb
hlt
daa
call
fiaddl
or
idivl
out
push
ret
mov
jmp
test
push
es
mov
shl
cltd
add
inc
jl
fcomps
push
xor
mov
mov
hlt
sub
sub
mov
push
cmp
out
mov
cmp
data16
insb
mov
jmp
pop
js
mov
cld
cmp
inc
insb
sub
mov
xor
fs
xchg
push
inc
ss
mov
pop
mov
cwtl
icebp
inc
jae
sub
lock
or
or
cmp
aam
mov
add
cmp
and
clc
ret
and
ficompl
inc
add
negb
scas
xor
or
stos
inc
add
push
push
adc
js
pop
icebp
xchg
sbb
dec
push
pop
push
dec
sbb
and
fyl2x
aam
push
nop
loop
scas
xor
mov
push
xchg
std
dec
jnp
inc
inc
add
push
leave
pop
lahf
xchg
or
subl
jmp
mulb
xor
xor
insb
fidivs
pop
pop
test
scas
xor
mov
pop
xor
faddl
mov
or
lock
sub
fwait
add
push
pushf
pop
jg
push
xchg
inc
hlt
xor
xchg
fsub
mov
pop
push
mov
cs
xor
fsubrs
and
movsl
enter
int3
addl
or
and
and
xor
mov
or
or
int3
sub
cld
push
push
ror
repz
push
out
adc
or
add
rclb
xchg
xchg
pop
mov
or
or
adc
jae
pop
std
lret
andps
or
inc
dec
dec
sub
insb
addl
cmpl
lahf
adc
popf
clc
js
test
repz
icebp
sbb
movsb
cwtl
add
leave
cmp
jbe
cmp
add
repnz
jne
cmp
jae
push
mov
jb
test
cmp
jns
push
shl
jb
adc
jmp
and
xor
dec
mov
pop
call
xor
mov
stc
roll
and
and
inc
inc
dec
aas
cmp
push
or
and
adc
hlt
push
push
xchg
push
fwait
lahf
gs
or
loop
jmp
mov
dec
adc
push
jae
add
and
insb
lods
and
ret
push
loop
mov
push
adc
in
cmp
jl
adc
movsbl
lahf
or
or
movsw
icebp
in
fdivr
cmp
mov
rorb
aam
insb
sub
push
mov
adc
push
mov
mov
inc
xchg
mov
andl
pop
mov
or
and
loopne
mov
jle
add
mov
fs
les
xor
xor
or
roll
ss
adc
pop
clc
mov
jb
pop
test
push
pushl
and
or
and
pusha
sbb
loop
mov
push
sub
fisubrl
scas
mov
scas
and
jne
lock
pop
jge
pop
push
sub
inc
add
pusha
std
repz
dec
push
mov
lods
js
and
sahf
mov
cmp
xor
stc
sub
xchg
inc
repz
sub
and
aaa
xchg
movsl
pop
mov
jge
nop
or
xor
lcall
jle
jmp
adc
mov
or
pop
ljmp
mov
cmpsb
xchg
int3
push
leave
xchg
insb
mov
outsl
mov
pushl
jbe
adc
and
leave
push
ret
subb
xchg
dec
adc
push
sbb
add
adc
push
mov
inc
push
jmp
cmp
mov
mov
dec
push
mov
inc
cmp
push
lcall
push
or
mul
adc
les
or
add
push
cmpsl
or
jb
xchg
lret
cmp
clc
sysenter
fisubs
and
fildl
cli
jle
jmp
xchg
mov
mov
inc
wbinvd
mov
push
mov
mov
sbb
das
icebp
sbb
pop
and
cmp
test
fidivs
adc
inc
loopne
xor
jmp
sarl
mov
cmp
mov
cmp
sti
popf
or
or
mov
jge
movsl
and
bound
test
dec
mov
xor
mov
dec
idiv
pop
sub
lahf
push
dec
cmp
int3
in
pop
adcl
or
pop
pop
mov
and
xchg
lds
xor
sbb
adc
js
push
dec
scas
inc
ljmp
lods
call
pusha
popa
add
test
out
jb
sub
movsl
inc
in
mov
lahf
es
sub
dec
inc
repz
or
int3
and
pop
adcb
mov
es
adc
lahf
or
xor
adc
mov
mov
rorb
or
xchg
test
and
je
inc
iret
in
nop
lods
pop
pushf
and
and
adc
add
push
xlat
pop
test
xchg
sub
movsl
cmp
in
stos
add
and
cs
cmp
mov
testb
jne
adc
test
pop
or
push
pop
in
hlt
mov
push
mov
push
in
shlb
adc
jmp
fisubrl
adc
in
fdivrs
call
cmp
mov
push
lods
and
jmp
mov
xor
nop
or
push
loopne
push
scas
aaa
mov
aad
dec
test
sub
insb
jecxz
mov
adc
jae
test
add
push
mov
push
pop
mov
out
adc
push
pushl
fiaddl
daa
pop
loopne
inc
dec
shlb
test
les
push
fsubrl
imul
scas
dec
jg
xchg
pop
inc
pop
ss
xor
lea
mov
push
and
jnp
inc
push
xor
add
or
aad
or
adc
push
inc
inc
and
xor
sub
movb
gs
sbb
in
mov
enter
sub
sub
xor
test
fldenv
lret
pop
add
cmp
adc
pop
sub
xchg
subl
in
jecxz
xchg
aad
push
mov
jns
and
cld
jne
mov
nop
and
rolb
out
js
jg
lret
scas
fs
test
shlb
mov
inc
cmp
adc
inc
incb
addl
fnsave
xchg
adc
xchg
stos
je
cmpsb
add
aas
xor
negl
test
push
sbb
cwtl
ljmp
sahf
test
lret
inc
adc
sbb
adc
add
add
jle
xchg
jne
sub
rorb
xchg
pushl
adc
sub
pop
das
punpckhbw
iret
adc
je
push
test
xchg
mov
mov
or
push
clc
pop
jb
out
push
xor
mov
pop
or
or
jmp
adc
push
cld
rclb
femms
add
pop
cmp
dec
cmp
xchg
xor
aam
cltd
mov
adc
sub
inc
call
adc
pop
adc
pushf
xchg
ret
cmpsb
insb
lea
sub
mov
les
popa
out
xor
sbb
or
popf
mov
jne
and
xor
mov
sbb
test
adc
cmp
pop
out
sub
mov
push
pop
push
ss
xor
pop
adc
repnz
test
ret
mov
std
and
cmp
pop
xchg
mov
or
out
or
jo
call
xlat
inc
nop
dec
xor
lds
push
push
movsl
adc
push
and
in
inc
test
cmpl
cwtl
int3
mov
sub
mov
jmp
xor
jmp
mov
cmp
sbb
xor
adcl
loopne
push
jnp
mov
imul
sbb
cwtl
mov
pop
adc
push
pop
dec
sbb
scas
xchg
xchg
jge
inc
mov
dec
adc
push
xchg
enter
or
test
push
clc
cmp
cmp
das
push
and
mov
pop
mov
jge
mov
sets
cltd
fmuls
inc
jbe
movsl
jle
outsb
sub
cld
sbb
cmpb
and
cmc
daa
xor
test
inc
mov
and
sub
adc
adc
cld
jbe
pop
dec
and
dec
push
inc
xchg
dec
sub
jb
xchg
dec
and
or
loope
repnz
fisubrl
aad
push
jle
xchg
push
sub
stos
mov
or
mov
jg
adc
fwait
sbb
add
push
pop
mov
call
jp
push
push
pop
push
pushf
lods
mov
in
insb
mov
sar
fwait
outsl
xchg
mov
adc
mov
cli
and
sbb
shlb
mov
mov
lds
jmp
pushf
ds
cmpl
add
push
cmpsl
stc
cmp
mov
pop
mov
insb
stc
dec
mov
pop
int
sub
push
push
dec
imul
xchg
lret
aam
pop
inc
push
clc
mov
scas
xchg
testb
test
pop
cmp
jno
cmp
adc
and
adc
adcl
scas
xchg
inc
pop
test
push
cmc
ss
sahf
push
fdivrp
popf
test
push
adc
je
and
pop
mov
js
mov
push
inc
jo
jmp
push
ret
scas
sbb
inc
dec
push
mov
cwtl
xor
xor
stos
cmp
sbb
aas
dec
lret
push
push
adc
push
movb
xchg
out
mov
push
leave
dec
enter
push
loop
xor
mov
lods
lcall
test
pop
push
flds
outsl
mov
mov
jo
add
hlt
inc
push
es
imul
add
cltd
and
push
xchg
adc
loopne
push
dec
push
idivl
push
mov
inc
mov
xchg
push
inc
nop
sub
mov
jno
and
leave
das
imul
pop
aas
cltd
add
incb
leave
pop
popa
popa
mov
cmp
xor
pop
lock
push
lds
dec
repnz
out
test
mov
inc
leave
test
divb
iret
adc
fsubrl
pop
mov
clc
fwait
mov
lret
and
jo
push
push
call
inc
adc
or
leave
sahf
mov
mov
test
jne
sbb
sub
adc
push
out
ljmp
push
cld
aam
jns,pt
bound
pop
sahf
dec
sub
pop
dec
xor
mov
test
test
xor
inc
sbb
inc
mov
cmc
popf
cmp
xor
xor
and
aaa
popf
ret
test
jo
mov
cwtl
xchg
jl
roll
test
xchg
mov
mov
pop
adc
sarb
mov
call
dec
lret
push
adc
es
push
xor
sub
insb
das
or
leave
mov
shrb
ss
jle
clc
adc
mov
loopne
sbb
push
cltd
adc
sbb
xor
push
je
cmpsl
loop
clc
loop
dec
adc
daa
ret
fnsave
mov
addl
inc
push
jle
bound
add
mov
mov
push
xor
sub
mov
iret
hlt
loop
and
jb
or
inc
push
clc
rcl
and
sbb
add
cs
mov
mov
in
inc
fs
shll
popa
pushf
hlt
cli
sbb
jb
add
add
mov
push
negl
loope
outsl
pushf
ds
test
hlt
cli
push
push
cld
cmp
hlt
cli
sbb
sets
cmp
test
clc
mov
push
sub
enter
call
mov
push
push
addb
ds
jne
xchg
popa
das
push
inc
push
sub
pop
ret
sub
push
jne
push
scas
int
psubusb
xor
xor
sbb
dec
scas
into
pop
mov
push
movsl
jmp
sub
mov
and
imul
and
inc
pushf
inc
jns
in
and
push
jne
xor
lods
popf
fisubl
negl
int3
dec
pop
mov
mov
inc
nop
adc
fstps
sub
xor
adc
mov
inc
jecxz
pop
xchg
pop
stos
and
xchg
jne
pop
in
push
xchg
push
daa
out
inc
fs
call
mov
dec
aaa
inc
cwtl
or
push
push
jp
and
mov
js
xchg
and
dec
shrb
fs
push
fnsave
inc
add
fcom
sti
push
enter
lret
test
adc
sar
add
xor
inc
je
lcall
leave
push
xor
mov
or
lret
dec
pop
arpl
stos
push
dec
loop
repz
lahf
mov
pop
sub
jmp
lods
daa
push
stc
push
sbb
negb
or
adc
and
mov
cld
xor
inc
loope
in
push
pop
loopne
rorb
inc
mov
fsubrl
in
or
adc
insb
push
adc
hlt
sub
clc
adc
xchg
mov
or
cmpsb
mov
mov
and
add
ds
xor
and
mov
les
mov
int3
notl
in
xchg
add
cmp
hlt
int
push
push
push
dec
push
test
mov
push
push
inc
pop
leave
mov
cwtl
sub
cmp
add
xor
push
xchg
inc
pusha
pop
push
cmpsb
sbb
or
insl
or
fdivrl
or
push
xchg
or
sub
or
pop
cmp
inc
or
xchg
sub
xchg
xor
fs
leave
ret
sbb
adcb
xorb
xorl
and
sub
int
pop
outsl
adc
push
fucomp
aad
clc
das
and
sbb
pop
push
sub
inc
clc
or
insb
pop
push
fucomp
mov
and
mov
decl
mov
gs
push
frstor
push
jnp
dec
adc
mov
negl
enter
inc
sbb
and
dec
push
scas
bound
cmpsl
sahf
imul
sub
sub
mov
decl
xchg
mov
mov
or
jno
mov
adc
adc
push
pop
dec
fstpt
push
lock
adc
out
and
adc
pusha
int
push
gs
sbb
mov
imul
adc
adc
ja
jne
jle
pop
lahf
mov
bound
adc
loopne
push
pop
adc
repnz
divb
inc
jmp
cmp
lcall
inc
sub
mov
jne
jne
mov
mov
mov
adc
or
sub
dec
fsub
mov
repz
jb
cmc
sub
cmpsb
inc
and
movl
mov
xor
repz
add
mov
jg
fcomps
xchg
or
and
adc
in
jg
and
fs
testl
mov
xchg
bound
adc
push
negb
mov
push
cmp
xchg
sub
cmp
mov
aas
xlat
push
aam
add
mov
js
xchg
mov
mov
jnp
push
sbb
dec
sub
jle
hlt
jne
fs
movl
or
sub
push
rorb
cs
add
push
sub
add
adc
nop
testb
jmp
sbb
or
repnz
mov
xor
and
pop
push
jmp
jle
jne
jp
leave
adc
xchg
sbb
push
xchg
jmp
xor
adc
add
jno
add
sbb
pushf
xlat
shlb
scas
mov
adc
mov
add
mov
ret
idivb
push
mov
or
shrb
test
adcl
outsb
nop
inc
ret
cwtl
xor
or
sbb
mov
bound
popa
xchg
adc
loopne
adc
mov
test
adc
ficomps
sbb
mov
sbb
xorl
jge
cmp
adc
xor
jae
sub
adc
and
adc
sbb
push
sub
adc
inc
or
dec
js
add
rolb
or
add
test
fidivs
in
sub
mov
jmp
repz
push
sub
dec
clc
xchg
daa
or
lds
mov
or
popa
enter
bound
push
or
movsb
sbb
sub
or
bound
inc
popa
lock
and
pushf
popa
ret
xor
popa
mov
mov
js
clc
sub
mov
daa
insl
or
mov
cwtl
jp
rorb
and
inc
movsl
sbb
ret
jmp
dec
sub
inc
addr16
fnsave
adc
fstpl
mov
ljmp
inc
cwtl
jnp
bound
mov
xor
cli
sbb
sbb
dec
call
cmp
mov
bound
popa
iret
enter
jb
cmp
loop
call
jo
arpl
sub
nop
sbb
cld
add
xor
mov
clc
faddl
xchg
dec
daa
mov
or
les
mov
in
and
sbb
fsubs
int3
icebp
sbb
icebp
sbb
popa
adc
pusha
xor
out
xor
dec
cmp
je
mov
or
inc
test
sub
inc
enter
sbb
mov
fisttpl
dec
mov
sub
mov
pusha
xchg
hlt
jb
add
enter
mov
mov
mov
mov
ds
pusha
xor
xchg
xor
sub
call
or
mov
adc
and
push
jl
jns
and
popa
nop
push
fucomp
jo
ret
sub
adc
enter
aaa
fs
xor
sbb
pusha
xchg
adc
cld
fisubl
lods
pusha
pop
mov
inc
popa
pop
jmp
dec
add
es
adc
jg
sbb
xor
adc
jno
lods
pusha
or
or
or
sub
lock
jo
lret
fimull
mov
enter
cmpsb
adc
lods
xor
pusha
or
xchg
and
mov
lods
bound
je
int3
mov
or
inc
popa
and
bound
xor
mov
or
mov
adc
popa
les
and
xor
shlb
mov
inc
and
xor
lret
mov
xchg
push
daa
mov
fs
cmpsb
and
inc
bound
hlt
in
daa
fcoml
mov
movsb
daa
inc
mov
ret
adc
push
xor
or
lret
lods
inc
push
push
std
or
add
push
and
xchg
movups
and
cmp
xchg
imul
jno
xor
imul
push
bound
dec
push
sub
ljmp
mov
sbb
popa
adc
bound
push
and
push
pusha
and
cmp
or
test
sub
push
js
and
xchg
adc
or
cwtl
pushf
mov
sbb
test
xchg
clc
pusha
nop
ror
les
mov
cmp
in
and
sub
test
jmp
es
cmp
push
adc
cwtl
xchg
inc
js
inc
inc
adc
cmp
test
movsb
inc
clc
inc
pusha
cmp
inc
jo
popa
adc
loop
cmp
xor
push
rcl
cmp
movsl
pop
jne
mov
push
sbb
test
adc
fsubrs
pop
je
cmp
adc
int3
lret
mov
jl
or
adc
in
inc
and
and
fdivs
int
sbb
xchg
in
mov
xlat
inc
mov
out
dec
jge
or
pop
mov
sub
call
xchg
dec
or
lret
js
jl
or
xchg
fcoms
in
es
out
fmul
ror
jl
mov
sbb
sbb
and
sub
sub
mov
mov
xchg
or
adc
js
pop
or
inc
xor
xor
sbb
icebp
or
and
cmp
cmp
push
mov
fsubrs
pushf
or
mov
fcoms
xor
or
rclb
inc
inc
test
cmp
or
xchg
or
or
test
rorb
jl
push
dec
sub
pusha
mov
sbb
xchg
sbb
or
clc
aad
sbbb
xchg
fsubs
pusha
pop
mov
mov
rcrb
sbb
test
push
xor
and
aad
rcr
movsb
inc
push
popa
addr16
adc
push
dec
push
pop
or
xchg
or
lret
lds
or
xchg
scas
sbb
ja
adc
in
call
pop
test
scas
or
ja
cmp
add
je
jmp
test
dec
mov
jecxz,pn
xchg
mov
add
or
jno
or
les
test
jb
sbb
lock
adc
xchg
fsubrs
loop
adc
jno
or
mov
xchg
jo
and
nop
cmp
push
adc
jno
or
and
push
lcall
xchg
or
loope
fistps
enter
cmp
mov
rorb
scas
mov
and
mov
cmp
cmp
jne
cmpsl
inc
mov
cmp
ja
push
fadds
ss
jmp
dec
xor
jg
mov
adc
jo
jne
xchg
arpl
mov
jge
repnz
pop
mov
je
push
int
jp
inc
test
mov
adc
subl
aam
inc
outsl
jns
sub
jecxz
mov
mov
sub
fsub
lret
roll
sar
insb
or
add
pop
adc
add
mov
pop
cmpsb
gs
adc
push
dec
push
mov
mov
loope
pop
hlt
jg
aad
popf
hlt
jge
rcl
add
and
mov
sbb
clc
call
popl
mov
loope
insl
inc
lahf
loop
push
mov
hlt
and
in
mov
xchg
cmp
movsl
int3
pop
jecxz
jbe
push
push
sbb
mov
mov
cmp
cmpsb
ret
je
xchg
ret
mov
call
mov
mov
and
mov
mov
mov
and
lock
lock
popf
rcrl
mov
fstp
repnz
pushf
push
ds
test
xchg
dec
pop
pusha
mov
xchg
test
in
mov
push
out
xor
pusha
push
sbb
fstp
sti
pop
loop
in
inc
adc
push
or
mov
idivb
mov
test
sbb
adc
and
or
in
or
push
ret
dec
inc
rorb
aaa
inc
std
icebp
ja
jbe
punpcklbw
sub
addr16
call
mov
test
aam
imul
jmp
sbb
push
push
mov
jnp
inc
fadds
nop
mov
add
mov
jmp
insb
cmp
add
or
sbbl
xchg
sti
mov
int3
or
jg
mov
aas
ret
ja
and
fcoms
mov
cmp
jecxz
pop
push
test
add
sarb
orb
jnp
popa
and
pop
outsl
mov
ss
xor
notb
push
out
push
mov
inc
pop
mov
inc
cmp
clc
ja
mov
mov
js
cmp
jl
mov
sbb
push
push
push
mov
push
or
xchg
dec
xor
push
mov
in
lock
mov
pop
mov
or
test
dec
lock
xchg
adc
sub
push
adc
shrl
movsbl
mov
xor
inc
rcrb
daa
popf
rcll
mov
sub
fiaddl
pop
cltd
sarl
push
movsb
add
mov
and
push
daa
shrl
into
flds
lods
lods
xor
cwtl
dec
jmp
push
sbb
pop
sbb
decl
mov
in
push
xchg
inc
add
sub
or
xchg
xchg
mov
add
mov
add
cmp
insl
add
adc
mov
das
repz
or
nop
aam
jl
cltd
mov
mov
aam
or
nop
mov
and
cmovg
add
dec
mov
js
sub
add
cmp
dec
xchg
mov
mov
pop
adc
adc
adc
call
out
mov
dec
mov
push
out
sub
pop
fucomi
jne
iret
test
and
in
xor
xor
push
and
test
jo
in
inc
daa
push
inc
ficoms
and
mov
adc
xor
sub
sbb
das
dec
out
pop
nop
and
dec
push
daa
lods
and
and
xorb
add
and
loop
es
and
and
jae
loopne
xor
inc
mov
jbe
cltd
loopne
call
push
sbb
mov
cmp
shl
in
sti
or
dec
lret
inc
push
jbe
test
cmpsl
cld
stos
loopne
push
push
lods
adc
sub
xchg
outsb
and
dec
imul
xchg
cmp
inc
cwtl
test
adc
fsubs
hlt
sbb
jge
lods
divl
in
mov
adc
shlb
out
and
push
popf
adc
ljmp
push
cld
push
enter
dec
sub
pop
in
pop
ret
push
cmc
xor
arpl
cmpsl
mov
xor
ds
dec
sbb
push
add
pop
cmp
pop
inc
dec
adc
daa
sub
push
xor
sbbl
pop
lea
out
shr
push
jg
adc
testl
scas
aam
adc
dec
stos
mov
daa
in
rcll
adc
xor
jl
push
xor
cmp
push
pop
mov
frstor
inc
dec
sti
sub
repnz
sub
loope
rolb
test
popf
cmp
fs
xlat
mov
fdivs
gs
mov
cmc
add
sti
jle
xor
mov
dec
inc
jle
mov
orb
je
or
pcmpeqw
mov
sarb
pop
sub
loopne
jne
lea
jns
adc
je
test
dec
pop
add
ret
test
andb
fsubrs
sub
sub
lret
inc
xor
mov
mov
cmpsl
jns
or
inc
add
div
stos
lea
jp
jl
pop
push
mov
cmp
adc
add
stos
cmp
inc
lock
sbb
idivl
in
jl
ret
in
inc
add
xor
pop
jl
push
jp
pop
lods
sub
sub
rcrl
cmp
aad
xchg
jmp
jae
inc
out
push
mov
clc
fidivrs
add
jmp
lock
pusha
testl
xchg
mov
pop
or
hlt
incb
sub
into
cmp
jle
add
jno
ss
adc
jb
dec
cmpsb
adc
or
push
test
clc
dec
and
mov
dec
dec
test
jg
movsb
iret
test
sbb
push
cmp
lods
repnz
adc
mov
jg
xor
loop
stos
outsb
add
daa
mov
dec
sbb
loop
fsubl
pop
mov
jp
fbstp
lret
mov
pop
dec
jg
and
pop
inc
jmp
pop
and
dec
lea
inc
test
push
or
and
and
shll
sub
mov
repnz
cs
out
add
cs
rorb
clc
sbb
sbb
jo
rcrb
outsl
mov
aam
sti
push
and
pop
aas
pop
inc
sub
cmp
pop
movsb
sub
sbb
call
push
cmc
out
es
mov
add
orb
int3
inc
xor
orb
push
dec
enter
mov
daa
repnz
xchg
icebp
push
mov
or
les
push
lcall
mov
pop
mov
fimuls
add
or
sub
push
cltd
faddl
mov
fsubl
sti
mov
add
xor
mov
les
sub
xchg
clc
mov
out
sub
loope
jg
xchg
inc
mov
ss
repz
pusha
dec
popa
adc
push
in
cmp
loopne
clc
sub
add
adc
lds
adc
mov
daa
je
data16
jne
push
scas
leave
cmp
add
fcoml
add
cltd
xor
std
or
sahf
fistl
adc
cld
lods
sar
cmp
jbe
and
inc
adc
cmpb
sbb
sbb
stos
orb
in
iret
dec
dec
test
push
shl
jge
mov
sarb
mov
xor
fcom
repz
ljmp
adc
fcoml
int
sub
scas
xchg
mov
outsb
fmuls
jns
inc
sahf
cli
dec
or
inc
rcrb
incb
dec
sub
cmp
pop
lahf
jbe
scas
stos
sub
fistpl
or
push
rcr
in
fmull
mov
sub
jns
and
push
cltd
testl
cwtl
inc
push
push
adc
and
popf
add
movsb
mov
mov
xchg
pusha
pop
sbb
rep
stos
mov
shufps
push
jns
adc
sub
jne
test
pop
xchg
mov
pop
inc
test
icebp
sub
and
in
jnp
in
push
mov
dec
sub
cs
pop
add
je
push
sub
cs
clc
and
and
add
push
xchg
cmp
addr16
je
xor
sbb
sbb
xor
imul
mov
sbb
sbb
scas
pushf
mov
loope
or
in
and
std
or
dec
adc
inc
mov
and
dec
imul
and
push
popf
push
sbb
or
add
push
incb
inc
inc
mov
dec
dec
cmp
in
movsb
push
inc
push
jns
inc
cltd
and
dec
stos
mov
jge
adc
adc
mov
or
sbb
lcall
enter
test
sub
pop
mov
mov
mov
and
pushf
inc
xchg
test
cld
adc
sbb
pusha
pop
and
pop
lock
or
pop
movsl
hlt
push
and
dec
jle
or
adc
dec
fisubl
cmp
jmp
shrb
or
mov
cmp
xchg
inc
jnp
or
daa
cmp
add
mov
daa
inc
push
fsubrs
lcall
call
ja
sub
mov
adc
jmp
das
adc
add
stc
xor
xchg
mov
js
sub
push
adc
push
rcll
or
popf
push
aam
or
cmp
ret
lock
mov
les
cld
insb
xor
cmp
mov
adc
push
mov
adc
add
in
hlt
inc
mov
sub
or
mov
push
cmpsb
ret
xor
cmpsb
sbb
pushf
addr16
mov
outsl
test
adc
popf
adc
into
cs
push
lret
xor
mov
andl
mov
adc
inc
push
mov
push
ljmp
inc
pop
sub
sub
xchg
jne
xchg
sub
add
call
sub
clc
test
lea
inc
mov
dec
and
cmp
out
out
mov
aam
pop
or
lahf
xchg
stc
outsl
cmpsb
mov
mov
cmp
lea
xchg
aaa
out
or
mov
dec
ret
fstpl
jmp
pop
adc
imul
jge
mov
xchg
movsl
mov
push
or
in
push
sbb
jmp
inc
lds
sbb
xor
js
subl
lret
or
mov
xor
pop
sub
ret
inc
adc
pop
or
mull
std
add
psubd
arpl
int3
pusha
or
cmp
jns
sub
sbb
add
mov
push
jg
outsl
push
movsb
jp
dec
movsl
jmp
cmc
out
les
aam
dec
pop
adc
sbb
pop
dec
cltd
daa
in
cmp
pop
pop
mov
and
and
cmp
ja
sbb
mov
ja
loope
enter
ljmp
and
or
adc
and
cli
and
test
in
mov
inc
test
xor
mov
daa
movsb
shrl
xor
xor
xchg
dec
inc
stc
jmp
jge
inc
pop
jbe
fiadds
inc
pop
sarb
insl
es
inc
adc
inc
add
movzbl
mov
mov
push
punpckhbw
loopne
push
cmp
nop
pushf
addl
sub
and
insb
dec
aad
pop
pop
or
call
enter
cmp
aad
adc
dec
in
or
fdivrp
cltd
out
or
repz
aaa
sbb
or
sbb
mov
add
add
push
add
push
or
dec
inc
and
push
data16
iret
jb
cmp
sti
mov
xchg
jmp
out
fs
mov
lock
dec
xor
mov
daa
cmp
scas
inc
out
outsb
lock
pop
jnp
xor
js
jae
inc
or
jmp
xor
push
adcl
pop
ret
jmp
inc
testl
shlb
xor
hlt
xor
call
int
shld
add
dec
std
sbbb
cld
xchg
movsb
cli
pop
test
out
repz
out
inc
and
movb
jmp
scas
mov
gs
and
mov
arpl
mov
inc
fisubl
xlat
jmp
sti
dec
rcrb
hlt
xor
xchg
mov
adc
and
pop
cmp
repz
aad
add
push
add
jbe
sub
lret
cld
xchg
cmpsb
dec
adc
std
dec
xor
jl
or
cmpb
lret
pop
sub
push
lret
or
pop
mov
jns
push
lock
adc
test
pop
scas
imul
sub
pop
andl
mov
adc
or
sub
movsl
pop
and
and
xchg
xchg
in
in
pop
mov
insb
daa
and
inc
ja
jne
add
js
sub
dec
dec
cld
dec
and
lea
inc
aas
hlt
xchg
or
pop
pop
add
sbb
dec
je
mov
pop
stos
xorb
cmp
and
mov
jmp
lea
outsb
jp
adc
mov
imul
scas
mov
lock
pop
mov
imul
imul
cmc
in
movsb
xor
cs
test
cmp
ret
mov
adc
sub
jns
xor
and
insl
cwtl
clc
pop
inc
loopne
jb
pop
mov
jbe
xchg
mov
repnz
mov
nop
rorb
add
push
in
push
inc
pop
repnz
scas
inc
mov
mov
mov
xchg
lock
jmp
and
cmp
ds
fwait
mov
sub
je
int
cmp
or
leave
jo
and
repnz
jmp
and
lcall
fcompl
test
or
dec
add
pop
or
movsb
xchg
push
or
adc
in
sbb
in
mov
mov
cld
stc
pop
aaa
mov
pop
mov
and
out
dec
dec
in
clc
cmp
dec
cld
stos
ficoml
push
adc
inc
ljmp
or
mov
inc
imul
and
jle
sbb
popa
int
push
inc
xor
cmp
imulb
xor
pop
inc
inc
pushl
jp
jb
enter
mov
loope
adc
mov
sbb
mov
sbb
jle
sub
xor
dec
sbb
insb
push
add
push
cwtl
push
out
dec
adc
adc
push
pop
jge
into
jmp
out
mov
outsl
fisttps
addb
les
js
scas
sub
fs
jns
adc
push
xchg
int3
les
mov
xor
inc
sbb
sbb
sub
add
jno
sbb
inc
std
loop
cmp
std
test
sbb
in
jb
adc
aas
xchg
cmp
nop
push
adc
incb
jno
jno
sbb
int3
push
and
pop
pop
jmp
xchg
outsl
push
xor
pushf
and
lods
and
cwtl
ds
sub
gs
fsubr
sbb
cltd
push
lcall
sub
call
leave
adc
gs
shl
test
mov
or
fstpl
in
je
cmp
cltd
cmp
push
repz
aaa
inc
cmp
ret
xlat
cmp
clc
add
jbe
arpl
cmp
lcall
push
repnz
movsl
inc
push
jne
test
pop
adc
jb
jmp
test
test
sbb
jno
push
es
cld
pop
mull
andl
pop
mov
clc
mov
and
js
xor
ret
mov
mull
pop
or
mov
inc
stos
push
pop
je
cmp
add
shlb
pop
xor
and
xor
scas
or
and
cmp
inc
adc
and
adc
add
enter
or
add
sub
sbb
jne
push
jb
cmp
jmp
inc
mov
mov
pshufw
lds
daa
sub
push
dec
test
jne
mov
push
jo
inc
cwtl
mov
pop
ds
clc
and
push
lret
into
notb
lods
pop
or
fcomp
push
fcompl
pop
adc
test
or
test
fdivrs
in
sbb
or
push
pop
mov
pop
lahf
jle
dec
js
pop
popf
stc
nop
lret
mov
lods
and
xlat
mov
les
dec
sub
lods
xor
adc
incl
inc
and
fs
xor
adc
fdivrs
and
sbb
lea
ja
icebp
or
outsb
fmull
pop
sub
mov
orl
xor
add
pop
adc
mov
bound
cld
cld
push
mov
iret
push
xlat
jnp
mov
je
decl
mov
xor
or
xor
aas
sbb
lods
std
push
dec
cld
loopne
movd
or
ja
or
jae
add
sbb
pop
cltd
out
jp
sbb
sub
test
or
adc
test
je
and
loope
mov
push
inc
push
aas
mov
gs
cwtl
xor
aas
and
enter
pop
subl
xor
and
xor
or
jle
mov
xchg
in
adc
ljmp
and
dec
cmp
mov
or
out
push
adc
int3
push
dec
pop
cmp
add
lea
add
mov
ret
sbb
jb,pt
or
xchg
or
mov
inc
push
dec
iret
dec
out
pop
scas
and
mov
sbb
je
jl
cmp
pop
or
push
repz
stos
xor
mov
stc
repz
mov
repnz
nop
or
mov
fldl
push
inc
add
cld
stc
add
push
jle
lea
push
adc
call
fmulp
or
fsubp
orb
ds
inc
jecxz
dec
negb
pop
jmp
and
and
add
shr
lret
mov
fbld
shr
cmp
call
shlb
orl
jns
mov
mov
cmpb
push
sbb
hlt
xchg
aas
mov
ficomps
cmp
test
negb
lret
cmp
out
dec
or
mov
aas
xor
push
sti
decl
gs
mov
les
movsl
mov
adc
sbb
xor
adc
fs
jle
add
fstl
cmpsl
lret
cli
add
mov
add
stos
jns
pop
sub
jge
inc
add
imul
mov
cld
dec
fs
inc
mov
lahf
popa
sub
repnz
inc
adc
inc
roll
pop
push
es
lock
sbb
adc
inc
add
inc
std
cld
dec
inc
inc
mov
jbe
dec
aad
in
and
mov
jmp
fsubs
inc
mov
mov
adc
xchg
test
cwtl
call
int3
mov
sbb
xchg
mov
mov
mov
adc
adc
aam
int3
lods
xor
pushf
or
inc
mov
fdivrs
fs
pop
or
inc
inc
pop
call
push
sbb
lock
pop
hlt
cmp
inc
inc
clc
inc
and
cld
sub
xor
add
cmp
pop
push
and
mov
mov
or
movb
out
rcl
xor
pop
inc
cmp
or
clc
push
fidivs
jns
mov
insb
jmp
leave
pop
push
pop
mov
push
cmp
lea
popf
aam
adc
stos
mov
mov
sbb
test
rorl
or
push
jp
ret
iret
push
call
mov
xor
dec
adc
dec
sub
xor
pop
dec
mov
cmp
mov
sbb
mov
daa
sbb
divb
fs
test
cmc
insb
or
mov
or
nop
imul
cmp
cltd
nopl
shrl
mov
push
fadds
push
xor
push
or
or
aam
ret
and
int
je
sbb
cs
xor
sar
sub
or
and
push
push
mov
adc
repnz
in
popa
jmp
cmp
cmp
xchg
and
mov
rolb
push
lcall
notb
enter
les
xchg
add
es
es
out
mov
and
xchg
push
sub
dec
xchg
mov
pop
mov
shrb
iret
fsubs
push
xor
and
hlt
lods
sbb
mov
ds
jne
int
fldt
jl
pop
or
push
mov
out
mov
das
in
jne
daa
xchg
inc
and
xor
dec
loopne
dec
out
bound
jp
incb
cs
aad
out
pop
adc
push
xchg
es
sub
or
xchg
jmp
mov
adc
jbe
sub
hlt
mov
pop
imul
es
sti
sub
mov
test
or
aaa
dec
dec
lock
orl
clc
add
aad
add
adc
loopne
nop
bound
pop
jo
mov
adc
out
sbbb
adc
or
lods
mov
imulb
clc
pusha
aam
add
jae
push
add
push
mov
popf
inc
and
cmp
add
mov
movsl
pop
sub
xchg
les
sbb
mov
sbb
mov
xchg
jno
movb
out
mov
inc
aas
add
adc
mov
fsubl
push
adc
or
push
cmp
in
push
mov
mov
outsb
jp
mov
inc
popf
sub
pop
inc
jge
stos
adc
test
xorl
jl
mov
add
or
xor
adc
xor
mov
mov
add
xor
sub
mov
outsl
mov
inc
aas
and
mov
int3
push
xchg
mov
cmp
inc
inc
mov
pop
lods
cld
xchg
mov
or
ljmp
sub
mov
push
cmc
in
cmpsl
fldt
pop
and
adc
mov
lret
adc
mov
aas
jp
push
sub
loope
xor
cwtl
or
stc
inc
and
sbb
mov
test
fs
xchg
mov
sub
adc
or
pop
or
popa
add
and
out
sub
mov
jmp
mov
and
hlt
xor
push
or
nop
jo
cmp
mov
jbe
xchg
jl
and
pop
pop
fstps
xor
jo
mov
in
xor
into
or
ret
popa
or
inc
rcl
test
jmp
jp
in
and
dec
sub
and
fucomp
mov
push
xchg
and
dec
insl
jae
and
mov
ja
testb
pop
xor
ja
addl
inc
es
jl
clc
xchg
cltd
pusha
push
inc
aam
dec
push
mov
xor
mov
out
sti
mov
aas
inc
arpl
jo
adc
pop
adc
add
and
add
pop
cmp
int3
push
push
sub
inc
or
adc
or
adc
push
dec
orb
sub
hlt
push
xchg
jmp
and
test
hlt
push
sbb
fsub
or
test
leave
adc
push
or
and
sbb
stos
jae
jne
addr16
xor
scas
mov
dec
xchg
sarl
xor
outsl
mov
push
dec
sub
pop
push
jl
mov
mov
and
and
inc
imul
popf
push
and
add
sbb
stos
inc
lea
insl
add
push
xor
cmp
rorb
scas
xor
cmp
lea
push
mov
push
out
imul
ljmp
xor
push
insl
std
or
xor
cli
mov
pop
sub
jne
fadds
jecxz
mov
lret
xor
cmpsb
or
dec
cmp
sbb
push
mov
leave
rcll
decl
insb
mov
or
sbb
into
dec
adc
cwtl
ret
sub
jnp
iret
xor
jo
jo
daa
je
push
jge
rcrl
imul
and
xor
jns
fwait
push
js
in
gs
repnz
and
test
mov
push
jl
and
push
fstenv
mov
mov
push
movsb
adc
jl
adc
js
fldt
push
rcrl
add
pop
or
mov
imul
into
adc
cmpsl
or
jecxz
xor
mov
vrsqrtps
stos
dec
ljmp
es
in
adc
jmp
push
cs
pop
gs
push
and
xchg
jmp
rol
xchg
mov
adc
inc
cmp
add
clc
add
add
lock
adc
scas
shr
jne
mov
lcall
sub
cmp
xor
cmp
xchg
xchg
mov
push
push
jne
mov
and
orl
test
mov
xor
cmp
jns
sub
shll
jl
in
lods
aaa
shlb
roll
push
ljmp
xchg
gs
dec
mov
or
cmp
andl
pushl
xor
cld
imul
fidivl
pop
sub
jno
sub
or
or
adc
sti
out
pop
push
movsb
and
mov
in
test
add
pop
mov
xchg
fmuls
lcall
add
sub
sub
or
ds
pop
loope
mov
add
mov
xor
mov
lds
xchg
push
lds
push
lahf
scas
cmp
imul
ficoml
test
pop
push
sub
dec
adc
hlt
loop
aad
scas
dec
add
popf
test
popf
mov
push
nop
push
mov
push
xlat
jl
cmp
addb
push
inc
xor
cmp
push
faddp
popf
cwtl
xor
pop
sub
or
push
loopne
ja
rclb
iret
add
pop
rorl
sarb
xchg
shrb
rolb
adc
inc
das
adc
mov
xor
mov
outsl
out
xchg
out
lds
jmp
xor
scas
sar
pop
jmp
loope
pop
aas
mov
insb
inc
pop
std
sarl
shrb
adc
cmp
inc
sbb
xchg
enter
enter
mov
jle
cmp
mov
mov
inc
xchg
mov
clc
outsb
mov
jns
rcrl
jbe
or
das
fiaddl
nop
adc
imul
inc
test
mov
jne
ficomps
push
adc
push
gs
sbb
mov
adc
jne
jp
insb
push
out
mov
or
xor
inc
xchg
pop
lds
mov
nop
and
sbb
or
addl
lret
lea
jb
pop
cmp
jmp
sub
fistps
xchg
jl
dec
pop
or
and
lock
pop
cltd
xor
pop
and
orl
insb
movsl
out
shlb
push
cmovg
shrb
xor
movsb
push
aas
sub
sub
inc
push
push
pusha
jge
jmp
popf
push
ljmp
mov
int3
add
xor
xchg
inc
mov
sbbb
xchg
fnsave
jne
stos
cmpsl
dec
pop
out
and
push
mov
rcl
fs
mov
sub
sbb
fs
in
or
xor
push
adc
dec
jmp
push
xchg
fmuls
je
lods
or
add
mov
pop
and
fdivrl
enter
inc
inc
sub
daa
jne
mov
out
ja
and
mov
sub
dec
pop
jmp
or
fucomi
cmp
inc
mov
jmp
dec
test
bound
rcl
in
and
in
rorb
inc
incb
leave
inc
add
mov
push
mov
das
adc
pop
cmp
or
call
adc
sbb
ljmp
jge
and
jge
pushf
pop
jmp
push
into
js
mov
sub
cmp
xchg
pop
fstpl
imul
or
enter
mov
sub
in
mov
or
inc
xchg
dec
rolb
xchg
push
xchg
mov
icebp
cltd
ret
and
lret
push
dec
push
mov
pop
ja
mov
pop
in
pop
dec
rcrb
sbb
inc
pushf
mov
jge
stos
sub
push
xchg
lret
cld
jg
into
dec
pop
lret
mov
iret
lret
cmp
inc
ljmp
call
enter
xchg
or
imul
and
movsb
inc
adc
out
ss
jl
mov
mov
pop
out
scas
imul
mov
sbb
sbb
fs
push
cli
repnz
jge
mov
repnz
pop
push
int
mov
add
sub
cmc
imul
adcb
lcall
inc
imul
sbb
mov
add
xchg
push
or
daa
daa
cld
pushl
jle
icebp
ljmp
jmp
scas
sbb
pop
xchg
push
add
sub
mov
pushf
xchg
add
addr16
inc
add
insb
hlt
sti
fwait
out
fcomi
imul
push
inc
push
lcall
sti
jb
sbb
adc
cmc
imul
jge
add
mov
fdivr
movsb
int
incb
mov
je
xor
enter
xlat
or
hlt
dec
daa
cld
dec
sbb
andb
mov
push
xor
sub
das
sbb
inc
and
jmp
scas
push
in
popf
push
dec
push
cltd
decl
push
aam
movsb
fcompl
push
xor
add
pop
lea
je
inc
xchg
inc
and
in
cmp
jle
mov
fisttpl
pop
movsb
or
xchg
out
in
imul
xlat
movsl
sub
sbb
pop
mov
and
les
adc
les
scas
xor
aam
xrelease
je
cltd
enter
push
lret
outsb
or
pop
nop
stos
lret
lcall
or
mov
sbb
mov
fsubs
clc
ret
or
mov
ret
inc
in
mov
add
push
push
mov
xor
push
xchg
sub
sub
push
fimuls
lods
cli
adc
push
sbb
mov
lds
scas
repnz
pop
jne
scas
sub
mov
and
bound
inc
jo
add
icebp
cmp
inc
mov
fnsave
and
or
mov
movsb
popf
or
mov
mov
dec
or
pusha
xor
popa
inc
mov
push
ss
aam
jg
dec
mov
subb
and
sub
push
lods
adc
push
ds
sub
test
je
imul
xchg
subl
cs
push
call
mov
xchg
push
mov
adc
mov
push
mov
std
fdivrs
and
xchg
lea
popf
mov
std
mov
test
xor
mov
push
cmp
push
mov
or
push
and
les
inc
mov
pop
and
jl
dec
jp
xchg
mov
jne
test
das
clc
jmp
mov
add
dec
out
adcb
test
sbbl
popf
inc
sbb
or
fucom
jle
sti
ja
adc
mov
pop
xchg
push
movsb
mov
int
outsl
enter
das
pusha
pop
mov
and
fucomi
push
adc
and
dec
xchg
xor
or
out
push
pop
or
adc
sub
inc
dec
shr
int
stos
jbe
gs
enter
aaa
shl
and
ss
jne
jle
and
lock
xchg
ljmp
push
or
push
sbb
push
cmp
xor
add
stc
add
fxch
lods
lcall
cld
enter
sbb
mov
les
in
fmull
enter
inc
sbb
mov
add
dec
jae
mov
pop
push
dec
or
outsl
mov
pop
jb
fsubl
popa
sub
cmp
lret
mov
dec
sbb
and
out
sub
cli
mov
jne
mov
mov
test
les
imul
imul
pop
ret
add
xchg
bound
cwtl
jp
mov
test
dec
and
test
shll
jle
jle
jg
or
jne
inc
sub
inc
mov
cmp
jl
fisubl
test
lods
push
add
nop
out
fiadds
or
inc
sbb
pop
add
mov
pop
inc
cmp
jl
or
daa
jne
aad
pop
push
push
mov
imul
jge
roll
inc
push
push
or
push
push
push
mov
icebp
sub
and
xchg
lock
in
pop
dec
leave
mov
pop
out
aam
push
test
push
ss
mov
mov
sti
ss
std
cmc
cmp
push
push
pop
push
hlt
jle
addr16
push
or
push
insl
sub
dec
lods
test
push
mov
insb
inc
jmp
push
or
xor
jo
pop
add
data16
pop
cmp
push
adc
xchg
add
push
pop
add
jmp
daa
orb
pop
mov
sbb
jne
mov
push
add
enter
and
and
movsb
adc
popl
int
sbb
movsb
jp
push
hlt
pop
pop
push
mov
xor
stos
adc
mov
xchg
stc
mov
and
dec
inc
test
xor
inc
inc
mov
sbb
gs
aas
lahf
inc
test
lret
pop
jbe
outsb
and
mov
cs
dec
cli
and
les
out
adc
add
lea
push
repz
inc
jmp
mov
add
repnz
adc
mov
js
mov
test
adc
test
dec
clc
and
je
mov
pop
pop
inc
ret
insb
sbb
repz
dec
add
mov
inc
imul
ja
cmp
jo
or
stos
xchg
js,pt
push
jns
dec
mov
adc
add
ja
or
pop
push
mov
or
mov
jns
sbb
mov
stc
scas
push
and
out
mov
inc
sbb
mov
icebp
int3
push
sar
stc
out
ret
adc
dec
push
sub
int3
loopne
mov
xor
cmc
das
loop
add
and
mov
add
fdivs
scas
lret
or
movsb
scas
lret
mov
cmp
jmp
pop
cmp
es
and
aaa
or
dec
and
push
inc
imul
cmp
mov
inc
leave
pop
inc
push
je
xor
fwait
loope
rcrl
popa
sub
mov
les
loope
and
fs
mov
xor
daa
xchg
cwtl
adc
mov
sub
mov
xchg
clc
add
push
xchg
lods
pop
adc
idiv
push
push
into
or
test
mov
dec
mov
in
mov
lret
xor
cmpl
jle
mov
jo
out
pop
mov
push
push
fs
mov
cmp
and
and
inc
mov
lods
in
mov
xor
adc
imul
in
jnp
xchg
cltd
pop
cwtl
ret
xchg
rep
dec
jl
dec
sub
lock
mov
cld
popa
mov
pop
call
jmp
leave
sub
in
sub
repz
add
xchg
orl
outsb
or
xchg
xor
lock
dec
push
jecxz
dec
mov
dec
pop
dec
and
nop
loope
into
out
xor
push
pop
inc
sarb
scas
cmpsl
push
dec
hlt
loopne
mov
pop
or
out
or
pop
iret
bnd
jmp
and
push
jne
int
push
daa
jne
popa
inc
in
mov
xorl
mov
xor
leave
inc
icebp
popf
lods
add
inc
mov
popf
pop
loope
mov
and
popf
push
pop
mov
jno
mov
add
lahf
inc
inc
inc
popf
and
out
inc
popf
mov
pop
or
out
push
mov
in
sub
sbb
aas
cmp
mov
push
and
adc
jmp
sbb
push
adc
sub
jl
fcomi
test
push
inc
sub
jmp
hlt
and
in
ror
cmpsb
sub
xchg
jnp
fistps
int3
clc
jg
push
mov
cmc
xor
add
xchg
jecxz
sub
and
push
xchg
adcb
movsl
sub
or
clc
in
xchg
jmp
jp
pop
jne
es
cmpb
adc
inc
and
xchg
test
adc
sub
mov
xchg
test
decl
and
mov
scas
jns
sbb
inc
push
lcall
scas
pop
aaa
mov
lahf
inc
icebp
mov
pop
add
cld
sti
mov
add
xchg
jg
imul
je
int
push
and
enter
push
adc
pop
or
iret
jmp
adc
push
and
inc
mov
inc
test
pop
das
inc
enter
or
test
enter
ja
or
push
jb
loop
xor
pop
xchg
pop
add
fisubs
loopne
mov
push
adcl
orl
xchg
ficompl
les
mov
pop
enter
push
pop
mov
pop
or
mov
ret
sbb
fwait
mov
je
mov
lock
lcall
mov
xchg
shll
shll
mov
adc
adc
mov
jp
lds
mov
psubw
loopne
cmp
xchg
jge
cmp
das
or
mov
jecxz
or
or
and
loopne
fs
and
inc
lea
jne
movd
mov
xchg
lret
in
arpl
ret
shrl
jl
int3
xor
xor
xchg
mov
pop
and
push
pop
scas
dec
xchg
mov
in
mov
ret
sbb
stos
sub
loop
jl
sbb
call
stos
xor
xchg
jl
adc
pop
dec
sub
das
dec
sbbl
ret
sub
pop
lcall
ret
cmp
das
sub
adcl
adc
ss
lret
ljmp
ss
pop
push
aaa
push
cltd
jbe
xchg
ss
adcl
push
fidivs
or
inc
or
fists
sub
sub
je
jae
outsl
sub
aad
mov
mov
das
inc
mov
xlat
or
mov
lret
push
lock
testb
out
xor
adc
xor
test
add
movsl
std
sbb
cmc
lcall
mov
cwtl
out
sbb
clc
scas
mov
notl
sbb
in
aam
mov
fadd
jle
push
push
push
imul
lds
sar
push
xchg
iret
and
adc
call
adc
shl
jmp
mov
ret
dec
in
imul
and
lcall
ficomps
inc
aas
push
and
and
xchg
mov
push
mov
inc
loopne
inc
repnz
xchg
xchg
push
inc
test
les
push
stos
mov
cld
xlat
pop
pop
stc
out
pop
or
push
and
mov
mov
lods
enter
mov
les
mov
pushw
fmull
pop
mov
in
rcrl
lds
or
rorl
adc
add
test
lret
das
dec
hlt
in
call
push
mov
rorb
loop
test
popf
mov
xor
in
add
fldl
jmp
inc
pushl
rolb
cmp
mov
cmc
loopne
movsb
mov
or
jmp
dec
call
or
inc
mov
cmp
jg
jae
cmp
push
jle
push
sbb
inc
inc
js
cltd
ds
and
or
sbbl
nop
mov
adc
mov
lcall
cs
dec
mov
sbb
mov
mov
lods
push
fdivrs
and
hlt
je
fnstsw
push
out
cmc
adc
test
jmp
sti
out
mov
mov
pop
adc
and
and
or
push
jmp
xor
or
addl
or
and
roll
enter
cmp
jbe
dec
and
loope
pop
imul
push
mov
push
push
xchg
mov
jge
dec
mov
push
and
je
orb
jne
pop
out
int3
or
lock
mov
push
xor
bndldx
dec
int
add
jle
jle
cmc
add
or
cmp
push
inc
je
inc
cmp
sub
rol
shll
dec
pop
fwait
lea
fwait
stos
lods
jo
mov
adc
cmp
sbb
adc
hlt
xor
shlb
pop
cmp
xchg
call
push
sub
sarb
inc
rorb
jne
sub
sbb
pop
push
out
sbb
push
sub
fistps
pushf
mov
xor
pop
adc
and
lea
je
push
lahf
sbb
inc
fdivrp
xchg
sub
sbbl
dec
push
fidivrl
xor
jmp
jl
clc
mov
jmp
mov
mov
adc
or
pop
mov
and
rcrb
add
pop
mov
push
insb
test
daa
lea
mov
xchg
add
add
adc
add
pop
fcomip
xor
push
clc
rcrb
mov
sbb
jecxz
hlt
sbb
jb
stos
leave
pop
pop
push
xchg
nop
add
push
pop
adc
stos
inc
int3
jo
lods
lret
adc
jl
pusha
cmp
mov
add
loope
xor
call
sbbb
push
clc
xchg
sub
sbb
incb
pop
mov
and
xchg
test
push
decb
push
or
aas
mov
add
pop
stos
loop
in
pop
push
cmp
add
inc
out
jo
mov
fs
int3
aam
adc
sbb
data16
push
dec
pop
loopne
ret
fmul
push
in
call
xor
add
in
imul
inc
lods
cmc
lds
adc
je
roll
sbb
fiaddl
out
cmp
pop
jne
pop
mov
and
frstor
or
nop
adc
push
add
lds
pop
ret
ljmp
adc
pop
add
sbb
sbb
mov
inc
pop
or
pop
sub
xchg
adc
mov
lret
adc
or
aam
jmp
pop
je
mov
mov
test
inc
pop
pop
aas
xor
jne
in
pop
loop
dec
out
xchg
call
push
sarb
and
jne
inc
rorl
inc
into
add
lods
push
fnstenv
push
cmp
adc
or
mov
jle
lea
dec
inc
and
xchg
cmp
call
add
aad
imul
push
shrb
cmp
test
es
inc
push
in
add
daa
iret
mov
aad
mov
inc
xchg
inc
sub
adc
mov
cld
sub
or
or
fidivrl
daa
aad
sub
sahf
arpl
sbb
mov
add
mov
dec
dec
jne
sub
sbb
push
add
out
or
jne
icebp
lds
sub
mov
pop
aam
push
xchg
sbb
push
rorb
imulb
repnz
adc
fsts
jmp
test
jge
pop
xchg
mov
in
push
push
push
mov
cmpsl
cmp
inc
bound
and
xchg
inc
sbb
jmp
or
mov
out
lea
loope
setns
jne
nop
push
sub
push
push
movsl
mov
sub
mov
add
pop
je
xlat
ss
dec
lods
dec
push
pop
and
outsb
faddp
jne
loopne
lea
and
adc
loop
push
pop
sbb
push
push
nop
jnp
je
mov
sbb
mov
xor
dec
data16
inc
adc
adc
mov
jl
js
rclb
sub
push
dec
push
into
cmpsl
adc
add
into
adc
jge
test
jmp
cld
ja
jle
shrb
jae
xchg
out
jbe
adcl
inc
xor
push
inc
inc
adc
dec
jp
insb
sub
scas
cmpsb
mov
jb
sub
inc
xor
sub
shl
loop
std
sbb
mov
xchg
mov
or
mov
lret
pop
dec
dec
and
mov
cmp
shrl
xchg
cli
loopne
inc
inc
inc
test
cli
jecxz
mov
push
jmp
je
call
adc
xchg
inc
mov
jle
es
or
add
nop
cmp
les
xor
push
sarl
out
and
push
push
mov
mov
mov
out
cli
xchg
ljmp
adc
fldt
push
sbb
push
mov
adcb
add
xor
sbb
icebp
sbb
or
je
jne
in
sti
mov
push
mov
lods
xchg
mov
inc
adcb
mov
popf
xchg
ljmp
inc
adc
dec
mov
inc
xchg
movsb
cli
daa
icebp
enter
test
xchg
jg
test
jmp
es
fs
lret
sub
pop
es
adc
sub
cwtl
push
inc
pop
and
mov
or
pop
xor
jmp
divb
pop
adc
pop
xchg
mov
xchg
sbb
xor
xlat
mov
leave
mov
push
add
adc
mov
fldt
test
je
cmp
sub
movl
stc
pop
mov
pop
sbb
cmp
adc
push
jne
add
and
lret
shlb
pusha
and
sti
imul
je
jmp
inc
lret
jmp
loop
lret
sub
cli
pop
cmp
call
add
inc
dec
jge
adc
xchg
inc
dec
jg
fdivrl
sub
out
mov
pop
inc
jno
dec
and
sub
jno
push
push
outsb
and
testl
dec
xlat
repz
pop
mov
sub
idiv
push
repnz
imul
sbb
mov
add
mov
adc
test
dec
push
jo
test
mov
fwait
dec
jns
lock
pop
pop
and
mov
hlt
push
pop
andb
add
dec
lock
imulb
enter
adc
lock
stc
aas
jmp
cmp
sbbb
cmp
mov
jb
xchg
sub
xchg
call
or
fstps
inc
dec
sbb
loopne
les
fld1
adc
xor
clc
pushf
cmp
xchg
lock
pop
sub
mov
push
pop
cmp
lcall
out
fidivs
mov
add
push
mov
enter
hlt
inc
xchg
adc
in
aam
fadd
xor
mov
loopne
movsb
adc
pushf
je
mov
pop
adc
xor
adc
mov
xchg
adc
loopne
and
int3
sub
flds
movsb
mov
pop
hlt
mov
clc
je
push
in
xchg
incb
cmp
push
inc
push
jae
sub
adc
and
notb
inc
dec
pop
rorl
les
mov
dec
add
adc
xchg
insb
and
cmp
or
shr
xchg
notl
loop
sub
movsb
cmp
or
jmp
leave
inc
cmpsl
es
push
aas
cmpsb
ret
cmp
cltd
es
and
push
dec
pop
leave
adc
adc
shl
loop
and
xchg
and
mov
xlat
pushf
mov
lret
sub
xor
push
push
and
mov
or
add
mov
mov
in
std
idivb
rcl
cmp
add
and
jae
mov
cmpsb
push
mov
xchg
xlat
pushf
testl
or
and
addr16
sub
or
aam
xor
adc
repz
lods
loopne
rolb
adc
imul
sbb
cmp
cmp
inc
adc
insl
out
xor
jno
pop
enter
sbb
inc
sub
dec
fcmovbe
mov
jns
and
add
or
mov
prefetchnta
push
outsl
and
iret
and
and
mov
arpl
mov
or
inc
xchg
push
dec
push
push
push
adc
mov
into
mov
cld
das
push
arpl
loope
mov
sub
mov
imul
mov
dec
call
mov
cmp
dec
sub
xchg
add
dec
jl
nop
and
xor
sub
add
ljmp
xchg
xor
mov
push
fsts
mov
jmp
mov
sub
pop
mov
test
dec
pop
ljmp
in
inc
push
dec
jb
mov
insb
inc
std
adc
or
cmpsb
pop
inc
std
call
jge
insb
stc
pop
push
dec
xchg
cmp
sbb
dec
fs
insb
std
sbb
jne
mov
aad
mov
hlt
mov
dec
push
in
push
nop
cltd
dec
nop
mov
or
stos
pop
add
push
push
lea
je
cmp
lea
dec
enter
cmp
push
call
aas
add
test
jns
xchg
mov
cwtl
lahf
mov
pusha
adc
push
mov
push
in
loopne
das
lods
jne
mov
in
pop
out
xor
orb
push
leave
sbb
push
in
test
sub
cltd
dec
into
sub
mov
fcoms
fstps
mov
shlb
fiadds
xor
sbb
adc
pop
pop
mov
mov
or
mov
jg
data16
outsb
test
dec
fsubl
jmp
add
pop
int3
push
push
stos
rcrb
cmpsl
or
movsl
push
and
sbb
cmp
lahf
mov
sti
jae
push
inc
gs
mov
push
adc
mov
xchg
push
pop
xchg
cltd
xor
or
inc
xchg
xor
std
dec
add
int3
push
jge
sbb
adc
sbb
repnz
repnz
faddl
test
adc
inc
cmpsb
inc
inc
sub
ljmp
lods
mov
or
mov
inc
adc
push
and
adc
in
xchg
lds
outsb
cld
jp,pn
or
sub
shrl
or
mov
sub
rcr
mov
add
xor
adc
ret
jno
xor
and
fcomps
mov
leave
xor
cmpsl
add
dec
xorl
mov
lock
dec
cltd
xor
stc
xor
scas
fiadds
push
inc
fidivrs
sub
or
mov
xchg
ret
push
loope
push
push
sbb
pop
xor
loop
mov
movsl
and
or
imul
shlb
mov
lods
adc
daa
inc
fcmovnbe
fwait
inc
je
jmp
ds
add
add
xor
jae
sub
sbb
and
shl
fnstsw
or
div
pop
pop
xchg
fldenv
push
mov
mov
push
mov
pop
out
and
push
sbb
rcll
lods
jne
test
divb
xlat
jb
cmp
shlw
fs
push
jmp
aam
lret
mov
pop
ja
jb
addl
aam
dec
fbld
and
or
inc
xchg
inc
mov
inc
aaa
dec
xor
sub
es
bound
adc
adc
xor
or
pop
jae
cmp
add
pop
sbb
add
adc
mov
or
ja
or
or
outsl
icebp
mov
lods
scas
int
inc
push
push
cmp
inc
inc
xor
addr16
xor
inc
adc
test
lods
push
les
mov
jmp
and
cmp
or
sub
inc
and
dec
insb
adc
pop
shrb
test
sub
mov
movb
and
push
je
pushf
xchg
jne
cmp
daa
stos
int3
push
sbb
push
cld
adc
xchg
cmp
add
cld
mov
push
aas
ds
mov
cmpsb
int3
mov
pusha
imul
cmp
je
scas
in
mov
cld
rolb
cwtl
hlt
mov
lds
out
shlb
push
xchg
pushf
repz
out
cld
mov
daa
mov
ja
push
inc
push
aad
pop
pop
push
das
mov
sahf
mov
paddsb
rolb
test
jge
push
enter
mov
mov
les
push
mov
test
sbb
dec
pop
mov
and
or
dec
push
adc
in
sub
cld
cmc
cmp
sbb
mov
inc
xchg
push
and
cmp
das
push
mov
push
ljmp
jecxz
dec
repz
push
je
jecxz
pop
std
sbb
push
mov
push
push
mov
xchg
mov
scas
addb
dec
sub
stos
xchg
popf
icebp
mov
adc
inc
scas
fisubrl
imul
sub
mov
pop
jno
mov
inc
pop
into
scas
inc
je
scas
mov
je
xor
add
mov
mov
ret
dec
test
ret
jge
scas
pop
fdivr
adc
sti
enter
test
adcb
pop
mov
xor
jp
insb
out
lahf
hlt
fs
cmpsl
dec
jno
cmp
loop
mulb
in
jle
js
and
xor
xor
sbb
or
inc
adc
bound
fisubrs
and
insb
leave
mov
cmp
mov
call
cli
pop
sbb
sub
jmp
pop
mov
mov
pop
xchg
stos
sub
and
or
test
sub
jecxz
fsubr
sub
in
pop
je
pop
and
mov
jp
xchg
push
dec
in
jle
movsb
int3
dec
add
lret
lahf
push
test
lret
pop
icebp
or
out
xor
jle
mov
mov
pop
adc
mov
loope
aam
test
inc
jge
arpl
fcoml
and
test
cmp
das
sbb
leave
cmpb
adc
stos
jne
clc
xor
push
in
push
xchg
cs
xor
sahf
xlat
int3
cmp
push
lock
pop
fnstsw
call
adc
call
sbb
push
rorl
stc
dec
fnstsw
call
andb
ret
sbb
sub
int3
xchg
js
mov
pop
push
lret
inc
jmp
movsb
adc
in
mov
mov
cmp
push
dec
in
xor
stc
in
movsb
repnz
test
jl
aad
bound
pop
xchg
sub
sbb
xchg
jl
add
orb
pop
cmp
push
xchg
add
shlb
xchg
sbbl
or
rcll
adc
movzbl
jae
leave
scas
xchg
imul
push
adc
lret
scas
xchg
cmpsb
decb
push
hlt
inc
andb
dec
pop
lock
mov
mov
sub
push
mov
and
xchg
dec
push
adc
or
xchg
rcll
adc
mov
les
pop
test
aam
sub
sahf
inc
dec
jmp
mov
mov
push
repz
fucomip
xor
push
in
sub
sti
mov
andb
stc
cltd
inc
sub
insb
loop
push
lahf
enter
inc
pop
sub
cmc
mov
mov
lock
cmpsl
pop
xchg
cli
lret
dec
shl
ficoms
shrb
fcoml
addr16
jne
jg
xchg
cli
iret
fmul
xor
or
subl
test
lock
fs
imul
addr16
call
mov
adcb
inc
or
pop
or
ret
sbb
add
or
or
lock
cmpb
aas
jmp
cltd
dec
in
sbb
and
add
or
xor
sub
push
in
push
out
add
lods
clc
lock
test
out
cmp
adc
push
cli
int
das
cmpsl
mov
test
cli
movsl
xlat
cmp
cmpb
jmp
pop
push
mov
jecxz
or
add
mov
xchg
mov
cmpsb
cmc
mov
pop
outsl
mov
xor
nop
push
andb
pop
testl
mov
mov
in
and
mov
xchg
push
sar
dec
lcall
fs
cmp
int3
mov
mov
sub
xchg
mov
loop
repnz
xor
test
and
push
push
push
fadds
adc
xor
cmp
jle
shll
and
jge
xor
push
lea
aaa
in
add
pop
je
inc
jne
enter
adc
cmp
je
sbb
in
and
add
inc
imul
mov
mov
lds
pop
push
incl
adc
repnz
in
inc
scas
mov
mov
pop
lds
nop
mov
cmp
cwtl
jne
sbb
je,pt
and
push
adc
les
int3
in
iret
mov
mov
and
mull
cmp
push
pop
xchg
add
enter
aas
xchg
shlb
push
sub
cmp
test
and
test
cmp
mov
movsb
and
cld
mov
loope
lcall
sub
je
inc
out
adc
fisttps
imul
xor
mov
adc
mov
outsl
or
enter
xchg
mov
inc
or
call
push
pusha
orl
pop
add
adc
pop
add
icebp
push
movl
xor
mov
mov
movsb
adc
sbb
inc
and
xor
or
pop
inc
adc
movaps
or
ret
movsb
lock
push
jge
and
subl
sbb
pop
cmp
das
or
ret
xchg
rorl
testb
in
pop
push
push
shrd
add
inc
sub
or
add
inc
push
lock
cmp
arpl
jae
add
and
shr
filds
nop
mov
nop
cmp
add
das
jp
jb
cli
loop
or
clc
pop
dec
mov
sti
popf
leave
or
push
mov
adc
cmpsl
pop
inc
mov
fcoml
mov
or
mov
je
les
xor
inc
lea
rol
inc
adc
dec
enter
or
dec
cli
aas
inc
cmp
cmp
xchg
xor
hlt
nop
ljmp
dec
shrb
cmpsl
inc
aam
adc
xor
nop
xlat
jge
dec
mov
add
mov
xchg
mov
push
mov
pop
fsubrl
outsl
and
and
jns
mov
daa
test
ja
pushf
push
xchg
das
movsb
cli
loopne
adc
and
lods
cld
and
dec
bound
adc
or
cmovns
or
mov
das
sub
add
push
adc
rorb
fcoms
leave
push
pop
sbb
mov
mov
jecxz
loop
fnsave
fldcw
pop
lods
jecxz
loop
xlat
mov
in
push
sbb
jne
ljmp
and
xor
loop
push
outsb
inc
repnz
mov
rol
pop
notb
mov
bound
xor
pusha
push
or
out
call
inc
sbb
push
dec
data16
cmp
push
sti
and
ja
pop
mov
dec
mov
sbb
push
push
int
out
in
pop
lea
xor
xchg
movsl
das
jae
push
push
xchg
and
xor
add
lods
cmp
inc
pop
mov
or
lock
and
mov
call
adc
leave
jl
pop
xchg
cwtl
mov
inc
push
and
push
lods
es
cmp
mov
cmp
push
cmp
mov
and
fbstp
lea
icebp
mov
and
and
lret
and
mov
inc
add
push
push
dec
mov
rcr
sub
inc
pop
mov
lods
fstl
and
in
test
movsl
or
xchg
xchg
push
out
icebp
lea
stos
push
push
add
call
sub
addr16
and
jmp
mov
shl
shll
in
sub
test
mov
adc
mov
fs
jne
push
jmp
pusha
dec
lods
xchg
in
jg
in
mov
shlb
pop
in
dec
test
pushf
pusha
jmp
dec
les
add
fcompl
call
pop
or
dec
sbb
popf
jnp
cmpsb
add
and
adc
testl
cmp
ljmp
and
mov
push
or
cmp
je
fstpl
xchg
and
or
jmp
jmp
push
pop
xlat
out
aas
push
sbb
xor
sbb
mov
subl
dec
pop
sub
rcll
daa
pop
mov
mov
mov
jmp
and
mov
push
shlb
xor
gs
jne
test
xor
push
je
xchg
lock
and
jno
outsl
add
fildl
mov
push
mov
push
mov
movl
and
mov
lea
andb
into
mov
sbb
stos
and
or
pop
inc
push
outsb
fldl
xor
mov
and
or
mulb
cwtl
test
loopne
int
add
mov
outsl
xor
rcrl
and
pop
nop
aam
adc
push
sbb
arpl
mov
adc
and
add
dec
hlt
or
push
mov
cmpsb
inc
dec
fidivrs
sbb
test
sub
bound
xchg
rcrb
xor
xlat
test
push
jecxz
insl
scas
movsb
ljmp
adc
mov
lods
ret
jp
or
xchg
shrl
popa
fwait
cs
add
or
fwait
stos
shlb
jle
or
mov
ret
xchg
pop
and
loopne
pushf
in
cmp
mov
stos
mov
mov
sbb
cmp
pop
adc
test
repnz
or
jo
push
cmp
call
shr
subl
cmp
sub
pop
enter
sub
sar
out
pop
or
mov
nop
push
adc
or
inc
rcr
mov
xlat
test
jo
test
je
ljmp
nop
fisubs
mov
mov
les
cld
pop
push
sub
in
mov
push
xor
js
mov
sub
outsb
sbb
repnz
imul
jmp
in
push
das
jge
mov
neg
sbb
ret
out
cmpsb
mov
clc
xchg
adc
mov
jmp
push
lret
lcall
imul
pop
push
outsl
movsb
fidivl
cltd
mov
adc
data16
mov
xchg
inc
roll
sub
out
es
pushf
add
cmp
lret
fwait
lahf
lcall
dec
mov
push
es
lahf
rcll
fcmovb
inc
movsb
test
in
adc
mov
cs
add
pusha
adc
test
les
gs
xor
movsl
inc
add
or
shl
add
or
adc
ds
push
orl
xor
or
inc
or
shlb
cwtl
inc
aam
out
add
cmp
cwtl
mov
and
out
cld
pop
jmp
lea
inc
mov
xor
shll
fldt
add
jmp
push
cmp
lods
lret
jmp
lret
mov
fwait
pop
sti
pop
test
and
push
sub
rcll
pop
leave
std
xchg
xor
mov
adc
sbb
xchg
cmp
pop
sub
mov
fnsave
cmp
or
mov
xor
or
sbb
test
jl
mov
push
or
jmp
lods
adc
fisubs
xchg
push
jbe
test
jecxz
sbb
adc
pop
ret
mov
sub
inc
push
mov
inc
pop
dec
out
mov
enter
mov
mov
lods
jg
mov
and
dec
xchg
add
add
sarl
in
out
adc
sbb
or
xor
pop
rcrb
mov
shlb
cmpsb
add
movsb
add
dec
sti
xchg
enter
sbb
bound
jb
mov
jg
subl
mov
rcrl
or
pop
push
dec
push
adc
push
lock
and
xor
fwait
adc
mov
test
mov
mov
push
aaa
pop
xor
aad
iret
mov
cmpl
jne
dec
jb
clc
repz
lods
fcmovbe
sahf
pop
daa
jbe
jmp
js
scas
push
out
sahf
dec
dec
gs
in
jno
push
push
inc
dec
loopne
loop
aam
mov
mov
mov
inc
inc
push
cmpsl
dec
mov
xchg
sub
add
movl
and
lcall
jb
lret
cltd
sbb
add
push
prefetch
or
nop
mov
push
out
out
sub
inc
mov
repz
lds
repz
inc
xor
out
js
scas
pop
daa
xchg
push
and
sbb
out
push
xlat
test
aam
adc
xlat
test
dec
sub
jp
inc
jl
mov
bound
rcll
push
icebp
sbb
out
and
std
out
push
mov
push
push
sub
jmp
jge
leave
sub
pop
cmp
dec
mov
out
cld
sub
sti
imul
jl
adc
xchg
jb
out
push
adc
pop
sub
mov
neg
sbb
inc
imul
xchg
movsb
scas
imul
jg
jl
xor
cli
iret
xchg
pop
nop
fcmovnbe
fldcw
outsb
inc
sbb
pop
pop
neg
and
sub
sub
gs
jo
mov
cs
add
insb
clc
lea
popw
loope
add
dec
adc
inc
dec
push
sar
iret
dec
es
jle
movsb
repnz
sub
jbe
imul
inc
push
pop
push
je
mov
js
ret
inc
sarb
shrl
sub
or
sub
and
data16
cmpsb
add
adc
push
inc
cmpb
adcl
add
add
gs
decb
xor
add
sub
dec
sbb
enter
add
sub
xchg
inc
decb
test
adc
push
add
xor
adc
hlt
xor
repnz
and
test
rolb
xchg
fs
pusha
cmp
push
jge
sbb
and
push
jo
push
cmc
fstps
dec
xor
out
stc
ficompl
imul
cwtl
lret
mov
orb
pop
sub
ds
cwtl
stos
push
xchg
in
sbb
mov
mov
cmpsl
mov
add
lds
xchg
iret
outsl
aaa
daa
jecxz
popf
scas
jecxz
pop
test
lret
outsb
adc
das
and
in
add
dec
push
stc
pop
mov
jmp
cltd
jno,pt
pop
sbb
test
and
push
lds
shl
pop
lcall
or
mov
hlt
cld
daa
mov
jle
pop
lcall
mov
and
xor
pop
xchg
mov
stc
cmpsl
push
push
add
andb
xchg
jp
ret
mov
jbe
or
mov
push
lret
mov
dec
ljmp
pop
jge
gs
movsb
movsl
pop
and
out
inc
popa
sub
in
inc
or
push
les
push
je
sbb
sbb
test
xor
and
fmuls
mov
jnp
dec
adc
scas
test
fistl
jmp
fnsave
jmp
dec
xchg
outsb
dec
lahf
es
jmp
push
inc
pop
xor
mov
fnstenv
inc
mov
in
push
bound
fwait
scas
or
inc
mov
or
mov
adc
lret
daa
mov
mov
cmpb
inc
or
and
aad
pop
push
shll
cmp
jno
sbb
movhlps
add
ret
add
cli
les
mov
mov
add
xchg
and
add
sub
sti
sub
or
mov
jno
mov
inc
clc
pop
mov
mov
jnp
adc
push
cmp
subl
jnp
or
inc
or
add
push
mov
je
es
push
ja
adc
sub
je
lea
mov
fsubrl
cmp
mov
sbb
roll
xchg
addl
inc
add
push
push
lods
jno
xor
out
inc
inc
add
stc
xchg
push
dec
sbb
orb
add
icebp
lods
rcrb
loopne
mov
and
loop
mov
inc
mov
cmp
adc
inc
loope
ljmp
rcll
in
dec
xor
sbb
add
das
add
sbb
pop
out
dec
pop
popa
loope
sarb
push
fldenv
lods
sub
icebp
mov
cmp
pop
push
fistpl
or
sbb
inc
pop
and
mov
pop
movsb
mov
pop
and
push
push
cmpl
push
insb
jns
js
jne
mov
inc
push
mov
je
mov
ret
jne
cmp
xlat
dec
jmp
xchg
lea
mov
movsb
sti
mov
or
jns
inc
push
mov
test
inc
hlt
adc
push
imul
imul
sarl
adc
pop
push
je
push
or
or
insl
adc
in
sub
loopne
call
pop
lcall
fstp
inc
cmpb
pop
int3
jbe
ljmp
leave
adc
pop
rorl
mov
fmuls
mov
sbb
lods
cmpsb
lret
sbb
daa
cli
scas
int3
adc
scas
sbb
movsb
cs
add
popf
jmp
mov
or
cli
jmp
shll
std
push
dec
int3
dec
dec
jg
lods
adc
inc
call
popa
dec
pop
rorl
movsl
stos
push
cmp
das
test
pop
push
sub
jge
adcb
jmp
push
jbe
je
cmp
pusha
and
and
or
sbb
popf
out
mov
sti
pop
lret
rcll
sub
sti
mov
int3
inc
and
scas
add
push
jl
xchg
xor
push
test
je
push
mov
inc
sbb
xorl
clc
mov
cli
shlb
xor
sbb
test
je
mov
into
dec
pop
in
push
and
cltd
in
or
dec
jmp
sub
aad
sahf
or
mov
or
dec
lahf
or
fld
jmp
sbb
mov
inc
test
je
mov
and
enter
jno
and
sbb
pusha
aas
dec
add
pop
pop
shlb
adc
adc
cmc
push
mov
shlb
ficomps
aad
movsb
int3
fidivrs
call
test
sbb
bound
xor
orl
mov
pop
out
dec
test
xchg
inc
lods
rcr
mov
sbb
test
in
mov
in
inc
js
or
and
in
rorl
inc
rcr
scas
and
jg
lods
mov
rolb
or
xchg
std
adc
inc
cmp
je
sub
jne
push
cld
pop
push
fs
je
push
dec
push
es
push
xchg
mov
adc
outsl
jmp
and
push
xchg
and
push
adc
jecxz
push
and
push
test
sub
sub
cmp
and
or
in
and
insb
xor
mov
jne
scas
fldcw
push
cmp
dec
add
es
adc
add
cmc
data16
or
clc
pop
mov
mov
test
call
jmp
cli
rcll
mov
clc
unpcklps
adc
mov
loop
xor
or
popf
shrb
inc
lock
mov
add
or
loopne
xor
xor
push
lea
or
mov
lock
shrl
jne
jae
int
add
add
pop
lea
sub
es
pop
push
gs
and
sub
sbb
inc
mov
pop
enter
dec
and
xor
sub
add
mov
mov
call
and
shlb
pop
and
shlb
pop
push
lea
lock
or
ss
or
mov
pop
xor
nop
movsb
sahf
xchg
cli
and
mov
or
sarb
daa
andb
ret
xchg
cld
icebp
and
xchg
sub
rolb
bound
adc
xchg
sub
dec
or
xchg
faddl
sbb
loopne
dec
sub
ficompl
fs
push
out
mov
movsl
sub
lods
pop
out
push
mov
in
mov
or
aam
fcoml
in
in
dec
hlt
mov
xchg
cwtl
sbb
dec
xchg
sbb
pop
dec
xchg
adc
pop
dec
xchg
or
pop
dec
repnz
and
adc
pop
or
adc
mov
popf
enter
xchg
imul
sar
jns
add
push
jae
clc
adc
ljmp
icebp
popf
cmc
sbb
stc
addr16
jmp
imull
add
enter
pop
rorl
mov
inc
je
inc
movsb
unpcklps
add
mov
mov
pop
inc
or
mov
adc
int
inc
hlt
push
adc
sar
push
decb
and
fs
je
sub
mov
pop
inc
or
cmpsl
stos
push
stc
rcrb
jp
pop
dec
lret
sub
xchg
loope
enter
in
addl
scas
dec
or
rep
ja
dec
dec
mov
ljmp
cmp
les
pop
mov
adc
and
jae
popa
lds
fiaddl
inc
add
push
ret
nop
cmp
cli
loop
cltd
add
jbe
sub
or
js
addr16
adc
shr
loope
add
sbb
jle
push
out
out
ss
and
mov
loopne
inc
mov
and
add
add
mov
inc
arpl
mov
data16
push
or
mov
test
inc
dec
mov
xchg
adc
fld
dec
aad
mov
cmp
rclb
outsb
push
adc
push
je
das
push
les
out
loop
add
cmp
add
loop
sbb
push
subb
jnp
mov
ret
jge
incb
shrb
aaa
outsl
sar
mov
stc
add
add
adc
or
fbstp
inc
or
shrb
cmpb
shlb
add
iret
cmp
xchg
jne
neg
pop
aas
aad
mov
fdivrl
cltd
rorb
inc
push
push
mov
pushf
bound
jno
pop
aad
dec
push
xor
cmp
ljmp
inc
or
add
pop
pop
dec
pop
mov
adc
cli
jmp
lea
mov
cmpsb
fsubrs
and
leave
inc
add
ljmp
jmp
mov
imul
hlt
lea
aam
lock
push
stos
imul
and
inc
cld
push
movsl
es
adc
mov
out
stos
mov
lock
daa
pop
imull
iret
xor
inc
dec
sbb
popa
and
out
xchg
xor
loopne
cmpl
sbb
lock
cmp
dec
jge
popa
jmp
fs
test
frstor
lods
or
push
or
scas
mov
xor
adc
test
push
sti
jg
fwait
and
fadds
or
je
hlt
ljmp
loope
and
icebp
mov
jmp
pop
rcl
dec
pop
repnz
pop
push
dec
adc
or
andb
push
imul
add
lock
mov
jb
mov
call
ret
push
lret
add
call
mov
push
sub
pop
pop
dec
dec
int3
push
call
xchg
xchg
push
ss
and
xor
ss
pop
stc
sbbl
je
imul
call
adc
lods
xor
mov
adc
sub
call
ret
add
add
ja
and
aad
shll
adc
jns
sbb
xchg
incl
mov
loopne
ja
aas
test
push
ret
nop
adc
mov
orb
lock
sbb
pop
pop
jl
inc
inc
pop
mov
mov
mov
out
push
int3
push
sub
cmp
shlb
filds
pop
adc
inc
mov
mov
cwtl
push
imul
out
dec
out
loopne
es
pop
add
mov
sbbb
iret
movsb
add
jecxz
lea
inc
sbb
jp
in
mov
push
ja
sbb
pop
push
push
lock
into
pop
push
roll
jecxz
out
add
fnstenv
mov
inc
pop
jmp
fiaddl
push
and
push
dec
pop
shl
lods
es
and
fwait
add
push
cmpb
pop
sub
mov
ljmp
jl
fs
lcall
jne
push
jo
je
mov
or
lock
lock
xchg
cmp
in
or
push
shll
push
or
xchg
lret
pushf
inc
add
xor
pop
push
jle
dec
movb
loope
push
jne
sbb
xchg
pop
roll
stc
pmaxsw
xorb
mov
cld
cmp
adc
int
out
cmp
sub
mov
es
int
fsubl
push
adc
jmp
rcrl
pop
jo
pop
std
cld
adc
rol
mov
rcr
gs
stos
push
cmp
mov
les
sub
cld
in
and
pop
jns
push
xor
std
cwtl
sbb
or
sbb
lods
rclb
arpl
das
jmp
adc
nop
add
xchg
popa
xor
shlb
or
shlb
out
data16
or
inc
add
or
addr16
ss
ret
and
arpl
fldenv
aas
mov
add
push
loop
out
adc
movsl
int
scas
sub
push
add
jmp
cmp
insl
nop
adc
dec
adc
xor
xor
mov
movsb
daa
mov
mov
xchg
test
or
adc
cmp
loopne,pt
xor
lret
push
or
repnz
xor
into
pop
test
cmp
dec
mov
push
jne
mov
inc
add
sbb
pop
add
fs
sub
dec
pusha
iret
mov
sbb
je
or
or
mov
xor
in
push
or
sub
push
dec
push
add
call
mov
push
jae
mov
or
pop
imul
test
lret
add
imul
sbb
icebp
mov
jp
jge
mov
adc
cwtl
nop
hlt
sbb
iret
out
pusha
push
or
shrl
lret
mov
ds
mov
jmp
dec
sub
push
xchg
cmpsb
add
adc
sti
ds
add
pop
test
dec
add
jne
cmp
sbb
adc
movl
push
outsb
adc
fstps
leave
je
popf
jecxz
data16
fisubl
pop
pop
clc
fldt
mov
dec
lahf
add
cmp
xchg
xchg
adc
pop
cmp
adc
leave
aas
and
pop
mov
cmpb
jne
mov
adc
add
jo
dec
jmp
bound
cmp
xchg
inc
adc
pcmpgtw
shl
add
or
add
inc
add
das
xchg
jge
inc
or
and
or
sub
lea
mov
mov
cld
cmp
popf
sub
clc
rcrb
sti
cmp
sbb
jg
je
xor
push
and
stos
and
push
xor
andb
and
cld
ja
cmp
sti
jb
clc
popf
inc
aas
enter
icebp
jge
mov
sub
mov
dec
lock
and
cmp
pop
inc
adc
pop
sub
cmpsb
and
and
mov
pop
std
dec
pop
data16
test
add
cmpl
cmp
cli
jecxz,pn
cwtl
daa
inc
cmp
pop
repnz
cmp
adc
or
in
xchg
cmpsl
xstore-rng
cmpsl
pop
jne
loope
sbb
xor
mov
inc
inc
daa
and
inc
fcoms
push
mov
add
mov
cmp
je
ficompl
rorb
jo
pop
leave
cmpsb
xchg
pop
cmc
xchg
and
iret
int3
pop
mov
mov
inc
sbb
inc
jno
cmc
xor
push
sub
ret
fisubs
sbb
sub
enter
push
xchg
push
mov
mov
add
ds
add
jg
jmp
add
jb
inc
jle
rcrl
adc
ret
enter
mov
je
mov
addl
daa
jmp
fwait
nop
add
add
jnp
lods
mov
xchg
inc
cmc
cmpsb
popa
mov
inc
mov
test
or
mov
add
ficompl
in
jb
pop
or
push
cmp
cmp
or
mov
jmp
xchg
les
push
cmp
or
lret
fsubrp
lods
les
xchg
daa
jae
adc
fmull
mov
jno
jne
cmp
sarb
sub
dec
popa
and
push
bnd
dec
mov
mov
lret
jb
push
inc
mov
mov
lahf
dec
and
push
inc
dec
and
xchg
fs
adcl
mov
and
cmc
ljmp
incb
ficoms
and
sti
xchg
aam
or
ja
divb
shrl
adc
xchg
stc
outsl
xchg
test
jnp
or
sub
inc
xchg
dec
inc
adc
pop
xchg
out
add
jo
add
iret
push
shll
add
add
movsb
int3
mov
ret
in
stos
imul
xchg
fldenv
inc
inc
push
xchg
jmp
push
sbb
and
lds
and
cmp
mov
push
imul
xchg
movhps
imul
mov
push
aam
cmpsb
mov
xor
repz
and
sub
and
fdiv
sti
mov
mov
test
jl
xchg
addr16
inc
cmp
test
adc
lea
mov
xchg
cmp
cli
jle
cmp
xor
rolb
xchg
popl
add
fdivrs
jb
shrb
push
popf
jg
mov
adc
inc
and
jg
test
sub
das
or
jle
fwait
lods
dec
addl
jne
mul
sub
jmp
mov
xchg
mull
loopne
adc
inc
mov
add
jl
pusha
inc
inc
fcmovb
adc
js
enter
stos
fs
inc
ljmp
and
inc
and
or
int3
sbb
xlat
icebp
cwtl
lcall
jmp
aas
enter
push
notl
jmp
add
or
jne
div
mov
fs
inc
xor
add
sbb
cmp
or
pop
icebp
xchg
add
xchg
addl
sub
outsl
sub
mov
or
or
push
outsl
adc
dec
or
enter
xchg
or
insb
enter
fcmovb
je
push
mov
adc
mov
pusha
jmp
add
or
inc
dec
dec
popf
push
cmpl
mov
dec
in
sbb
sbb
sbb
sbb
daa
js
adc
and
mov
inc
push
shr
dec
fnstcw
sbb
sbb
sbb
in
int3
sub
scas
ret
sub
adc
sbb
loopne
pop
cld
mov
sarb
sbb
pushf
decl
jl
jp
and
jmp
dec
sbb
jmp
addr16
ljmp
jl
js
mov
xor
or
cmp
je
push
sub
xchg
mov
sub
pop
push
pop
out
es
and
sub
scas
and
xor
out
cltd
scas
pop
mov
ret
aaa
pop
imul
inc
or
shrb
test
mov
cmp
pcmpeqw
inc
dec
fistpl
cmp
pop
inc
cmovle
outsb
push
jns
cmp
inc
mov
jecxz
scas
ret
ret
jbe
inc
sub
cmpsl
shll
pusha
mov
popf
dec
adc
cmc
sbb
cs
add
sbb
xchg
les
lret
out
sbb
jbe
push
pop
adc
pop
pop
add
int
das
imull
and
or
aad
lret
mov
nop
pop
mov
test
sbb
stos
xchg
push
sbb
adc
adc
and
and
and
dec
mov
nop
mov
adc
jmp
cld
rorb
xor
sbb
loope
into
add
and
dec
add
push
mov
jmp
xchg
add
pop
mov
leave
sbb
test
repnz
repnz
mov
int3
cmp
sbb
pop
add
add
push
cmp
inc
ljmp
movsb
das
adc
std
sub
div
sub
sar
pop
dec
xor
in
sbb
or
mov
imul
mov
cmc
adc
fistps
jge
cmp
mov
mov
in
mulb
or
movb
cli
subl
mov
rcrl
mov
testb
addb
or
xor
mov
jnp
mov
adc
rol
mov
adc
mov
scas
cmp
jne
mov
sti
or
dec
pop
ret
cmp
pusha
dec
hlt
fstcw
xchg
jle
orb
push
cld
mov
hlt
or
frstor
mov
test
sub
mov
sub
push
aas
test
add
push
je
outsb
jl
push
jnp
cmp
and
add
repnz
mov
and
aad
in
and
pop
or
sbb
push
popa
aas
xor
mov
scas
dec
inc
jp
cmp
inc
push
icebp
adcl
jle
ret
add
mov
mov
int
out
dec
xor
inc
daa
bound
or
push
sub
sub
sub
adc
xlat
jmp
shrl
sbb
lds
mov
orl
inc
int3
cld
nop
repnz
dec
adc
es
bound
adc
repnz
mov
mov
add
cmpsb
mov
xor
leave
cmp
push
sbb
and
rorl
mov
or
shrb
sbb
mov
mov
std
or
or
dec
adc
inc
inc
mov
daa
cwtl
fcmove
test
cmp
push
into
dec
out
xor
in
dec
je
add
cmp
sbb
mov
test
mov
lea
lock
lret
roll
and
pop
sub
xchg
adc
movsb
xchg
jo
fistpl
inc
jnp
cmpsb
xchg
pop
cmp
jae
jo
movb
movsb
repz
mov
mov
or
add
mul
push
mov
inc
or
loope
rcll
fs
push
jmp
imul
mov
filds
int3
jns
sub
pop
and
sbb
or
loop
xor
pop
xor
mov
test
sub
pop
and
inc
jmp
negl
std
adc
call
sbb
push
push
stos
adc
xchg
and
test
mov
dec
dec
lret
dec
push
dec
xchg
pop
sbb
call
adc
iret
mov
cli
add
jae
push
stos
pop
shlb
push
cmpsb
cs
mov
ret
xchg
das
sub
test
mov
add
inc
sub
mov
sub
inc
adc
test
je
push
negb
jo
mov
andl
adc
inc
pop
mov
ficomps
push
or
and
jne
ds
push
push
jge
xor
movsb
ljmp
adc
sbb
xor
add
adc
popa
test
xchg
sbb
sbb
push
inc
dec
jmp
adc
sbb
mov
insb
std
mov
fs
sbb
xor
xor
mov
not
enter
addl
rorl
lret
test
adc
push
mov
ljmp
cli
mov
pushf
mov
inc
mov
and
fisubs
push
out
cld
popf
in
or
sahf
sbb
lea
push
call
push
pushf
notb
rorb
in
push
popa
add
jl
sbb
pop
cmp
pushf
pop
push
stc
dec
ret
xchg
adc
jg
or
js
pop
or
cwtl
push
jae
shl
add
inc
enter
add
and
push
push
sbb
mov
lahf
pop
pop
mov
and
xor
mov
pop
pusha
xchg
ret
mov
inc
ret
or
add
adc
sbb
mov
and
mov
push
inc
xor
mov
nop
pushf
jg
cltd
out
andl
test
fcmove
adc
loop
push
mov
out
jge
xorb
sub
or
push
je
fs
add
sub
mov
sbb
pcmpeqd
add
adc
das
pop
jne
adc
or
xor
pop
mov
mov
add
pop
loope
call
push
ja
aas
enter
and
idivb
and
add
cmp
pop
pop
mov
push
sarb
jge
pop
nop
test
and
or
shrb
add
outsl
or
fistl
or
inc
stos
dec
pop
lock
xchg
add
mov
sbb
ret
jg
jl
pop
mov
loopne
scas
pop
clc
and
push
add
into
pop
mov
rorb
xchg
stos
and
and
test
stos
inc
imul
movsl
mov
int3
push
fmuls
loopne
in
cld
sub
jmp
add
cmp
or
mov
pop
dec
push
sbb
je
or
cltd
or
jle
inc
or
adc
sbb
adc
jne
lods
rolb
sahf
lea
leave
fidivl
call
mov
das
mov
mov
shrb
jmp
mov
aas
and
lock
pop
and
inc
cmp
cmp
cmp
push
mov
nop
sahf
sub
mov
mov
aas
ss
scas
jg
xor
push
inc
sbb
sub
mov
shlb
or
jne
sbb
out
mov
mov
in
inc
shrl
out
movsl
push
mov
addr16
lea
ret
jnp
pop
out
and
fsts
loop
insb
test
and
lcall
or
and
or
test
cld
xor
jne
movsb
shll
add
sbb
mov
rcrl
mov
inc
xchg
adc
dec
sbb
inc
aaa
adc
inc
mov
out
inc
int3
addb
lea
mov
jo
jge
pushf
adc
lock
and
insl
in
mov
js
xchg
das
call
jmp
daa
fimuls
jle
dec
xor
mov
cvtps2pd
or
lds
cli
rclb
pop
mov
scas
fs
es
jle
clc
and
add
add
lds
filds
mov
in
aad
mov
dec
cli
mov
mov
pushf
push
in
push
ret
adc
pop
pop
fldt
jo
das
sub
cwtl
dec
jbe
xor
push
mov
mov
adc
add
adc
out
mov
sbb
pop
pop
adc
test
pop
fs
xor
jne
xchg
cmp
loope
bound
in
mov
imul
mov
sqrtps
and
test
inc
enter
jmp
cmp
mov
sub
daa
je
stos
jb
arpl
inc
dec
and
jge
mov
jns
xchg
sub
ljmp
add
and
test
jmp
mov
lcall
mov
or
add
dec
imul
mov
cmp
mov
push
inc
je,pt
and
fwait
adc
mov
and
push
and
or
loopne
or
push
rcrb
je
sbb
jg
pop
jl
mov
adc
sbb
dec
fisubrl
push
cli
jmp
sbb
or
pop
jne
and
adc
cmp
or
jne
dec
in
sub
pop
mov
lds
out
pusha
and
cltd
push
push
xor
ss
les
mov
addl
xor
leave
cltd
hlt
sti
cmp
pop
data16
clc
and
sbb
jmp
mov
push
cmpb
xor
stos
dec
or
inc
and
movb
aaa
pop
cltd
fmuls
mov
mov
cld
test
cmp
cmpsl
or
mov
test
jnp
inc
or
testb
and
add
out
xor
hlt
xor
jns
test
push
push
call
and
sub
incl
es
pop
lcall
xor
dec
mov
into
or
or
dec
popl
clc
lea
inc
fiadds
inc
into
xchg
enter
imul
dec
mov
pop
or
shr
adc
cmp
push
lods
add
je
hlt
mov
adc
inc
jl
adcb
xchg
or
and
std
adc
sub
lods
dec
or
decl
js
mov
pop
add
bound
cltd
sub
push
push
js
mov
ret
movsl
mov
jle
sbbb
or
mov
pop
push
and
imul
dec
jb
gs
xchg
insl
adc
and
push
inc
jge
push
push
aaa
and
ss
outsl
inc
loop
mov
inc
sbbl
or
inc
shll
sbb
or
les
sbb
gs
adc
pop
loopne
mov
popf
add
test
sub
int3
testl
jle
mov
clc
dec
loop
sbb
adc
cltd
adc
push
ljmp
adc
lahf
inc
inc
jns
push
das
icebp
fisubs
adcb
mov
jmp
call
and
pop
ljmp
repnz
loopne
hlt
adcl
mov
repz
mov
jle
arpl
jae
std
inc
pushf
ds
jmp
add
jg
je
leave
push
sub
jecxz
rcll
icebp
add
cmp
jmp
cmpb
mov
or
add
jl
pusha
mov
addl
mov
pop
push
insb
aaa
pop
ja
popa
sub
jmp
mov
push
out
clts
scas
dec
adc
cmpb
add
repnz
cmp
push
idivb
add
cmpsb
ljmp
mov
pop
inc
test
inc
in
flds
cs
lret
or
xor
outsb
or
les
arpl
and
cld
popf
jo
mov
inc
push
mov
bnd
xlat
or
outsw
xchg
pop
mov
or
or
decl
movsb
adc
mov
xor
or
in
push
jecxz
mov
aaa
xor
jmp
fs
sub
mulb
lret
cmp
repnz
iret
adc
lea
shll
push
mov
cmp
adc
push
push
adc
inc
test
mov
add
or
loopne
movsb
xor
dec
pop
popf
daa
jle
cmp
movsl
icebp
pop
les
and
and
fsubrl
in
mov
inc
pop
loopne
cmp
mov
dec
and
mov
sub
outsb
scas
inc
leave
in
arpl
icebp
scas
sub
gs
or
and
jbe
push
gs
aaa
stos
sub
xchg
daa
adc
and
shrd
pop
inc
adc
or
cwtl
mov
or
fmull
sub
xor
ljmp
pop
push
je
enter
dec
sahf
pop
adc
dec
push
dec
test
dec
pop
pop
and
inc
jle
cmpsb
ljmp
arpl
jo
mov
repnz
dec
mov
dec
or
or
rcr
call
cli
int
ret
pushf
mov
adc
sub
cmc
insb
incl
dec
addr16
stos
jb
xor
in
aad
xor
roll
push
ss
xor
xchg
js
arpl
je
cmp
pop
cmpsb
sub
ds
lock
push
pop
jmp
cmp
ss
add
inc
pop
fmuls
iret
adc
adc
push
add
inc
jnp
sbb
pop
cmpsl
or
cmpsl
and
pop
mov
xor
cmp
je
inc
jmp
ss
pop
cmp
and
inc
jae
xchg
jmp
jbe
cmc
lock
and
xor
push
lock
sbb
mov
add
loope
mov
add
jne
xor
jmp
addl
pop
sbb
fwait
in
test
xchg
dec
popf
stos
insb
out
sbb
adc
loope
sbb
cltd
inc
dec
push
push
test
xor
enter
lret
pop
add
sbb
stc
add
add
xor
test
je
pusha
iret
xchg
or
ljmp
inc
enter
loopne
or
leave
sti
push
iret
mov
xchg
or
add
lock
scas
pop
mov
push
call
mov
sbb
lret
dec
mov
push
mov
cmp
out
jecxz
inc
dec
ljmp
and
rcll
dec
push
dec
popa
lret
jb
dec
orb
push
out
fs
xchg
dec
pop
mov
pop
icebp
xor
ss
sub
movsb
call
or
push
push
xor
gs
xchg
fsubs
fdivr
xchg
or
push
mov
jae
mov
in
out
lock
jne
mov
push
add
cmp
push
fdivs
sub
orl
inc
adc
and
xor
mov
inc
jmp
mov
push
roll
xchg
pop
sbb
mov
nopl
mov
jo
cmp
or
jmp
lea
mov
dec
cld
je
aaa
push
insb
jmp
adc
lea
rcr
pop
bound
fbld
xlat
push
int3
cmp
dec
sub
rorb
lcall
xchg
add
add
adc
ds
cmp
scas
data16
ja
pop
or
pop
repnz
push
mov
leave
fidivl
dec
in
dec
or
test
adc
sbb
cltd
sub
push
enter
lods
lahf
out
mov
and
negl
outsb
sahf
inc
inc
lock
test
and
scas
les
inc
out
sub
es
call
adc
cmp
scas
and
out
jbe
push
jle
mov
das
into
xchg
movups
ss
out
adc
pop
test
pop
clc
testb
ljmp
push
ds
cmp
les
fldt
test
icebp
mov
ss
and
and
clc
lods
lcall
cwtl
adcl
sbb
push
das
cmp
xchg
aaa
xorl
xor
loop
aas
inc
enter
mov
adc
pop
pop
or
push
shl
out
add
shl
pop
lea
or
and
or
call
sbb
inc
clc
test
inc
or
push
bound
sub
out
leave
ja
pop
lods
aad
ljmp
decl
add
mov
cmpl
lea
cmp
dec
test
mov
inc
adc
xchg
iret
push
or
ficompl
inc
fstl
aas
pop
pop
adc
fwait
es
orw
adc
xchg
dec
cmp
and
or
mov
jl
cmp
subl
mov
or
xchg
inc
inc
adc
push
fisubl
jg
out
cmp
jae
xchg
idivl
and
lea
out
test
cmp
add
je
nop
andl
mov
mov
pop
adcl
sbb
dec
mov
arpl
sub
aas
or
in
cmp
mov
ss
add
je
push
call
jmp
and
andl
int3
cld
or
jge
mov
mov
and
in
xor
inc
push
adc
test
pop
and
mov
adc
sbb
jmp
test
test
and
sub
lea
rorb
xlat
aad
jecxz
adc
cmp
add
or
xor
daa
hlt
loop
adc
mov
jne
push
cltd
dec
lods
ja
and
jmp
jne
lret
jmp
push
cmp
rclb
pop
lcall
or
cmp
xor
mov
shll
mov
adc
dec
loopne
test
mov
inc
jmp
adc
or
adc
ficompl
movsb
andl
dec
jl
pop
cmp
ret
sub
cmpsb
mov
lret
test
pop
or
out
jb
or
ror
jmp
mov
mov
shlb
cs
out
inc
mov
lods
ret
xor
dec
adc
push
cmp
adc
stos
shll
aaa
je
or
pop
lock
orb
push
xchg
out
lds
jle
add
icebp
rcrb
inc
lds
adc
mov
dec
rcl
sbb
mov
adc
mov
xor
mov
insb
push
rcr
jns
daa
xorl
jb
loope
aam
or
mov
test
in
pop
ds
idivl
pop
or
lods
push
pusha
push
pop
mov
sub
loope
test
dec
cmp
or
mov
popf
jle
into
call
sbb
orl
lcall
jge
mov
or
jmp
dec
adc
adc
adc
inc
cwtl
and
nop
sbb
pop
aaa
cld
and
adc
cmpb
pop
or
jmp
add
aam
adc
sub
jne
inc
adc
ds
or
pop
addr16
stos
clc
cmp
mov
pop
adc
into
lods
jmp
icebp
or
rorb
test
arpl
dec
dec
adc
cmc
dec
jecxz
call
and
sbb
xor
mov
cmp
xor
or
aas
push
sbb
dec
icebp
in
mov
les
popf
aad
or
mov
paddb
je
adc
or
cmc
aas
add
jl
jmp
mov
aad
cmp
out
cli
jecxz
sub
dec
repnz
std
je
sbb
push
cmc
lock
mov
cmp
or
mov
lds
sarb
inc
shl
dec
pop
lcall
or
mov
mov
cmpsl
inc
sbb
add
daa
mov
xchg
jge
das
fldl
pop
adc
repnz
push
xchg
xor
adc
jb
movb
jmp
aam
or
daa
pushf
push
outsb
push
aaa
inc
imul
pop
adc
mov
shlb
cmp
push
push
push
add
jl
call
sub
call
jne
inc
inc
push
adc
ss
test
pop
pushf
orb
sbb
jmp
adc
push
xchg
push
cli
leave
pop
mov
or
push
mov
dec
out
fstps
add
push
pop
sbb
lea
inc
aam
cmp
ret
in
cmp
jne
mov
sbb
cmp
repnz
test
stc
leave
xchg
sbb
data16
aam
adc
mov
push
pop
pop
imul
jb
cmc
dec
cs
adc
xchg
decb
int3
sbb
lds
cmp
sub
sbb
push
std
dec
sbb
or
jne
iret
fmul
mov
mov
mov
push
in
mov
adc
cs
and
fsubs
rclb
mov
add
gs
mov
add
mov
jae
adc
outsb
sub
pop
cli
xchg
jb
into
sbb
call
movsl
rorb
jno
repnz
xadd
psraw
imul
cwtl
mov
mov
aad
scas
adc
ret
adc
lea
repnz
hlt
jecxz
decb
clc
adc
idivl
sar
dec
adc
jbe
add
pop
mov
clc
arpl
jne
add
and
mov
lret
lea
add
andb
mov
push
sub
lea
stos
and
pop
pushf
mov
push
test
pop
add
cld
jg
icebp
add
or
jecxz
add
xchg
hlt
mov
cs
or
and
xor
shll
jecxz
xchg
hlt
inc
mov
rolb
jne
or
ss
cmp
jbe
mov
mov
sub
inc
mov
cmp
and
arpl
mov
cmp
mov
sbb
ror
out
not
sub
je
add
and
lea
pop
inc
sbb
inc
mov
setp
mov
or
aas
rcll
movsl
fucomi
imul
xchg
test
les
test
mov
pop
jo
mov
or
or
jne
mov
and
mov
mov
jae
test
in
push
mov
in
or
inc
outsb
adc
scas
jg
sbb
adc
push
enter
ljmp
imul
fcmovu
jns
or
mov
imul
push
mov
sbb
sarb
lsl
cmpsb
jo
mov
push
call
xchg
and
xor
push
or
cmp
subl
mov
and
inc
xchg
or
mov
jns
xor
pop
adc
mov
imul
mov
adc
mov
mov
push
dec
xchg
sub
add
push
jg
movsb
movsl
adc
mov
or
and
dec
add
das
xor
inc
mov
mov
sub
int
mov
mov
lock
sar
dec
cmc
shlb
jge
push
es
decl
sub
cmp
inc
in
push
xchg
mov
call
mov
ffreep
cwtl
or
mov
stc
in
and
iret
jne
add
hlt
pop
cld
xor
adc
jne
mov
ljmp
and
out
xor
pop
dec
jae
icebp
jnp
xor
jmp
inc
cmp
adc
or
and
call
pusha
test
je
push
in
mov
adc
cli
test
test
and
cmpsb
sub
xchg
cs
enter
pop
jmp
ja
jl
inc
mov
jo
push
orb
ja
push
dec
cmc
or
add
test
cmp
lods
cmp
cmpb
xlat
je
jmp
xor
fbld
dec
xor
jne
cmpsb
xor
lret
pop
aad
addb
testl
pop
icebp
rcrl
cmpsl
dec
addl
lret
enter
mov
and
add
jmp
test
mov
push
iret
and
cmp
push
test
pop
and
jl
push
pcmpeqw
lods
mov
dec
in
and
jmp
lret
adc
and
push
outsl
mov
xchg
jp
xlat
mov
in
int
or
xor
test
test
pop
icebp
rolb
inc
out
push
lret
aaa
or
sahf
in
add
add
inc
or
ret
xchg
mov
mov
out
or
pop
or
nop
in
add
sub
and
movsb
pop
lea
scas
imul
xchg
or
sub
aad
add
cld
push
xor
int3
jne
out
ror
inc
add
or
cld
mov
addr16
ds
cmp
adc
pop
cmpsb
jo
and
pop
add
shll
or
cltd
shrl
xor
mov
jo
pop
adc
sub
cmp
je
mov
fwait
rorb
or
inc
xchg
loope
mov
inc
xor
hlt
ret
inc
adc
ljmp
mov
test
test
sbb
jne
and
dec
adc
and
cmp
sub
and
pop
and
std
jno
leave
inc
mov
and
inc
and
ret
cmp
enter
lea
inc
or
push
pushf
cmp
and
pop
xchg
sti
xchg
shl
fnstsw
push
add
mov
imulb
xchg
sbb
cmp
cmp
lock
ret
repz
cmc
std
mov
movl
push
mov
add
sub
add
sub
or
test
pop
jae
mov
or
rolb
xor
mov
mov
inc
inc
cmpsb
enter
shlb
add
adc
mov
not
and
xchg
ret
into
mov
or
leave
push
adc
outsl
adc
jo
sub
inc
ljmp
popa
test
xorl
pop
push
sub
dec
cmp
xor
fs
repnz
adcl
fnstcw
repz
xor
aas
mov
push
dec
xor
mov
in
push
dec
sub
and
sub
clc
adc
nop
test
and
clc
pushf
nop
pushf
cmc
icebp
dec
fldt
cmpsl
mov
lret
push
jg
gs
adc
into
add
in
jae
add
adc
sub
incl
int
xor
loop
sti
adc
hlt
nop
sbb
inc
int3
pop
stos
inc
insl
adc
jno
mov
or
cwtl
cmp
jne
mov
inc
pop
decl
andl
sbb
pusha
iretw
jmp
test
sub
mov
mov
push
pop
or
test
inc
ret
les
jg
inc
and
push
clc
jmp
outsb
cmpsl
adc
jge
sub
outsb
pop
xor
jmp
fmul
pop
push
mov
mov
das
jne
sub
cmp
jne
sub
je
xchg
jp
push
mov
push
and
out
movsb
jp
ja
xchg
pop
cwtl
and
or
jbe
out
les
dec
aaa
jnp
das
jno
cwtl
sti
pop
mov
aam
bound
scas
jecxz
inc
cmp
movhlps
out
and
bound
and
orb
cmpsl
insb
nop
inc
push
add
mov
sbb
pop
scas
push
faddl
dec
inc
sub
loop
test
aad
loop
adc
lret
sub
imul
xor
jne
in
or
push
mov
iret
sbb
or
jmp
mov
mov
hlt
xor
xor
mov
adc
sbb
or
lret
dec
in
mov
sub
lock
dec
cmp
rcrl
jb
push
cmp
jecxz
or
cmp
add
clc
jae
orb
inc
sbbl
dec
mov
sbb
daa
ss
mov
cmp
jge
and
jno
or
cmp
xor
inc
shll
and
push
cmpsl
xchg
loope
push
insl
cmpsb
inc
stos
push
push
dec
ret
inc
xchg
rep
flds
inc
push
sub
in
test
icebp
lret
xorb
mov
aaa
lock
scas
cmp
adc
fistps
pusha
rcl
xor
je
orl
adc
or
and
xchg
cmp
push
mov
sub
testb
and
je
idivb
pop
xchg
dec
es
daa
and
out
inc
inc
push
inc
cli
sub
or
add
lock
mov
faddl
cmpsb
aad
sub
testb
push
cmp
jbe
or
adc
idivl
je
aaa
jmp
test
jne
xor
loopne
xchg
xchg
mov
fistpll
repnz
jb
enter
rorb
and
movsl
push
push
jge
es
into
push
inc
or
loop
inc
push
ds
out
sub
pop
stc
arpl
enter
mov
adc
adc
inc
add
pop
push
test
movsb
sti
nop
addw
sahf
loope
inc
lret
adc
stc
mov
in
mov
movsl
mov
popa
pop
int
ret
pusha
push
and
jno
scas
notb
je
adc
cmp
shl
cmp
add
jl
cmp
pop
jbe
push
andl
fwait
sbb
or
push
movl
jb
mov
dec
test
jle
es
xor
xor
or
pop
lret
dec
es
cmpl
jge
jb
movsb
inc
jl
cmpsb
mov
je
jmp
mov
out
cmpsl
into
mov
lods
fadds
pop
jg
out
push
leave
or
xor
xor
fmull
jae
jmp
call
cmp
testl
out
ja
xor
adc
iret
xor
xchg
jmp
and
je
push
rol
xlat
adc
bound
test
jne
fidivs
inc
cmpsl
adc
mov
lcall
outsb
push
sbb
mov
adc
inc
xchg
popf
scas
push
sub
jne
sub
sub
add
mov
cmp
repnz
sbb
and
inc
or
sarl
dec
pop
sub
sub
mov
and
and
mov
xor
sbb
fidivl
pop
rcll
push
sbb
sbb
iret
pop
dec
push
icebp
mov
and
cmp
lea
pop
jp
mov
add
mov
inc
cmpsb
jae
sbb
adc
mov
or
andl
pop
orl
iret
lds
hlt
out
add
adc
repz
mov
test
jne
mov
jae
push
pop
cmpb
fildl
inc
jmp
movsb
jae
stc
and
clc
sub
jle
mov
xchg
cmp
mov
leave
iret
jno
test
jmp
add
inc
jne
mov
divl
jle
push
push
inc
xchg
jne
movsl
jae
inc
pop
pop
and
xlat
pop
xorl
sahf
pusha
adc
mov
dec
ret
daa
ret
sub
imul
scas
rolb
lock
jo
rorl
pop
imul
call
and
and
in
xchg
xchg
jp
xchg
inc
movsb
inc
push
inc
add
add
lea
jbe
jecxz
enter
pop
add
rsqrtps
loope
pusha
jae
gs
sbb
rolb
push
mov
jae
push
sub
sbb
push
divl
lock
daa
sub
xor
decb
inc
cmp
inc
sub
adc
addb
sarb
lret
fnstsw
pop
mov
xor
push
add
rcr
stos
mov
mov
adc
adc
mov
or
call
sub
cmp
pop
pop
add
mov
jle
les
and
sub
mov
sub
sbb
or
call
mov
adc
outsl
mov
xchg
pushf
stos
sbb
shlb
add
xor
rclb
fcmovnu
jne
jecxz
or
mov
adc
je
sbb
testb
icebp
ljmp
xor
push
sbb
push
push
mov
pop
mov
mov
cmp
stos
xchg
sbb
xchg
ret
inc
cmpb
adc
lahf
inc
std
mov
inc
decl
mulb
stc
xchg
xchg
mov
fucomip
push
push
dec
xchg
pop
das
push
or
rcrl
movl
jbe
jle
xchg
ja
inc
xchg
or
jbe
inc
filds
xchg
cs
or
nop
ret
movl
lods
add
cltd
mov
jns
mov
pop
mov
push
lds
test
shl
push
pop
mov
incl
push
cmp
push
inc
sti
adc
inc
dec
stos
aam
mov
cmp
or
lahf
scas
or
and
mov
jne
mov
jmp
mov
inc
mov
mov
xchg
dec
push
sub
dec
and
or
add
lret
sbb
push
les
and
in
push
or
or
stos
jne
aaa
sbb
dec
xchg
pop
mov
cmpsb
call
aam
aad
dec
mov
test
inc
xchg
mov
flds
sub
pop
repz
push
add
shll
aaa
sub
add
popa
addb
pop
inc
loop
pop
mov
pop
push
mov
jnp
stos
int3
pop
push
xchg
dec
xor
push
push
mov
aam
xor
pop
es
loop
pop
push
push
pop
lret
jecxz
jae
adc
lock
dec
push
sti
adcl
rclb
or
add
and
mov
mov
cmp
jmp
jne
out
pop
dec
cltd
sbb
pop
xor
loope
out
in
dec
pop
mov
push
ja
lods
dec
into
cmp
movsl
jmp
dec
xchg
das
mov
mov
push
call
inc
std
hlt
sarb
fs
cmp
bound
jno
aas
into
std
cld
jmp
mov
push
cmp
add
add
add
inc
ss
push
scas
es
and
adc
orb
addr16
mov
sub
incb
imul
lea
es
lret
mov
jne
pop
lcall
mov
inc
mov
xlat
test
test
pop
stos
pop
call
call
mov
dec
push
pop
sub
fwait
out
iret
and
lea
or
sbb
cmp
or
sbb
mov
movb
or
cs
lahf
cld
js
leave
cmp
popa
push
pop
cmp
dec
in
frstor
or
mov
icebp
nop
sbb
adc
sbb
in
xor
add
mov
test
stos
sub
add
or
or
shlb
mov
imul
popf
scas
inc
mov
add
pop
lret
adcl
pushf
and
mov
dec
pop
decl
push
cmp
jae
sbb
or
xchg
push
pusha
adcl
jmp
sbb
or
mov
outsb
pop
adc
rorl
mov
shll
sbb
dec
jp
mov
popl
mov
inc
mov
jmp
sub
dec
pop
jne
sbbb
out
cs
dec
jbe
call
js
rorb
xor
les
push
test
push
in
mov
sub
dec
push
es
push
dec
jb
or
push
rolb
push
mov
aam
enter
xchg
inc
xchg
out
xchg
push
lock
and
push
push
movsl
lods
xor
test
mov
lock
and
or
popa
jnp
jns
cld
cld
sub
or
jb
outsl
sub
stc
inc
mov
lods
stc
addl
add
add
sub
lret
jl
or
clc
xchg
cmp
loop
jp
push
dec
push
jns
inc
sbb
out
push
rolb
lret
mov
jge
adc
test
addl
or
imul
inc
test
imul
mov
or
lea
mov
dec
and
mov
push
inc
imul
mov
stos
mov
mov
sbb
and
fmuls
insb
inc
sbb
mov
or
popa
addl
popa
or
sti
jg
cmp
or
add
pop
fs
adc
xor
out
aas
fdivl
dec
push
insl
sbb
call
sbb
and
mov
ret
xor
and
xor
adc
ret
jmp
xor
movsbl
or
clc
sbb
pop
je
push
cmp
xor
cmp
pop
jne
repnz
jp
xor
dec
push
sbbb
scas
jg
rorl
leave
and
adc
ss
lret
mov
cmp
push
sub
or
xor
inc
mov
sbb
xor
xor
adc
test
out
mov
imulb
jmp
bound
adc
jne
pop
mov
fmull
cmp
add
das
rolb
jns
adc
sbb
cmpb
je
loopne
mov
leave
je
add
setg
push
xchg
cmp
shlx
frstor
push
xor
orb
out
clc
sbb
sbb
or
mov
in
jecxz
inc
sbb
xchg
aaa
cmpl
insl
jb
inc
add
leave
lret
xchg
in
fisttpll
shll
xor
jle
and
push
lahf
bound
push
lea
loop
cmp
enter
push
ret
fcompl
push
sub
dec
cmc
dec
addb
add
dec
jns
neg
xchg
sub
jl
push
loopne
push
test
ficoms
push
neg
das
inc
or
mov
aad
jmp
sti
add
mov
dec
and
xor
loop
movsb
or
xor
int
cmp
pusha
jmp
push
xchg
and
or
jns
xchg
or
inc
scas
adc
or
add
sti
sbb
inc
cmp
lea
dec
imul
es
pop
idivl
xor
inc
jmp
add
dec
sbb
enter
pusha
pop
jbe
inc
jo
idivb
scas
scas
jg
or
fsubrp
push
or
in
jl
test
push
daa
sub
and
adc
mov
pop
repnz
dec
push
subl
ret
push
js
xchg
rep
jmp
rorl
or
cmp
add
pushf
rorl
clc
dec
inc
repz
and
jge
sbb
push
inc
andl
push
pushf
call
leave
push
adc
adc
and
pop
jns
aam
mov
add
lahf
and
fisubrl
andb
or
fcompl
call
sti
cwtl
sub
adc
inc
fs
data16
dec
jmp
sbb
push
test
faddl
mov
mov
sbb
add
stos
mov
notl
stc
clc
push
and
pop
sub
xor
add
or
mov
inc
cmp
in
stc
adc
jb
or
sbb
push
aad
xchg
push
mov
stc
mov
adc
mov
jbe
stos
sub
jo
aaa
repnz
push
mov
cmp
inc
ffreep
push
pop
push
push
jmp
xchg
xor
and
and
inc
cmp
push
sbb
sbb
test
and
add
pop
adc
xor
jnp
aam
adc
push
dec
in
sbb
test
dec
inc
jmp
sbbl
das
adc
das
xchg
or
jle
or
mov
or
cmp
xchg
cli
pop
and
js
xchg
fs
les
pop
adc
lahf
jmp
adc
jb
hlt
je
popaw
jbe
cmc
xor
repnz
bound
push
add
cmp
pusha
xor
inc
cmp
sbb
repnz
push
cmp
jg
push
fildl
xchg
and
and
mov
mov
mov
mov
adc
aam
loopne
nop
adc
std
or
je
push
lret
in
push
mov
or
loope
lea
push
mov
pop
sub
and
and
hlt
jmp
pop
or
add
mov
cmpsl
dec
mov
das
inc
push
or
cmc
mov
pop
and
push
out
add
in
je
ret
aas
lea
imul
or
and
and
ret
ret
sbb
or
popf
or
imul
jo
sbb
ljmp
and
adc
addb
or
scas
fdivrs
cmpsl
pop
pop
add
call
cmp
inc
in
fistpll
cli
rcll
push
cmp
aas
aam
in
xchg
mov
mov
xor
push
cmp
dec
mov
dec
jp
cmp
pushf
jmp
pusha
sti
jne
sti
neg
dec
xchg
or
pop
or
icebp
and
std
lea
cld
dec
push
pop
sub
jne
inc
mov
out
pop
sar
add
test
fcom
xor
pop
jl
mov
test
add
sub
jmp
pop
mov
fdecstp
ret
pop
clc
lock
adc
sar
push
jecxz
mov
add
je
clc
sarl
push
shlb
dec
cmp
pop
push
fisttpl
neg
adc
cld
and
sub
inc
push
imulb
push
add
push
add
sbb
or
push
xor
shll
das
mov
lahf
gs
out
jecxz
push
inc
pop
loope
or
dec
rcr
mov
mov
or
test
and
xor
das
cld
pop
xor
dec
inc
pop
ja
mov
add
mov
sbb
shll
mov
add
jge
rcrb
mov
mov
dec
xchg
icebp
bound
inc
cld
clc
mov
xlat
daa
and
pop
push
xor
movsl
jmp
sub
and
or
add
adc
popf
inc
nop
pop
test
add
push
push
add
mul
dec
pop
js
test
nop
sbb
add
or
adc
icebp
and
mov
xchg
or
call
xchg
out
mov
andb
cmp
jge
lea
xor
sub
lahf
enter
or
jne
mov
inc
jl
jo
loopne
cltd
stos
and
jo
cmp
and
xchg
xchg
xchg
push
inc
test
aaa
cmp
and
cmp
adc
and
push
add
or
pop
jmp
sti
lea
push
pushf
mov
loop
enter
mov
pop
pop
lods
scas
nop
in
and
cmp
test
je
out
pop
in
ds
rcrb
or
adc
jne
sbb
mov
or
adc
je
jo
and
jns
sbb
and
push
or
dec
adc
sbbl
inc
das
or
ds
or
and
mov
mov
je
add
jmp
shlb
pop
dec
mov
pop
adc
call
ret
push
je
cmp
test
inc
jecxz
pop
pop
lea
outsb
push
jmp
sbb
mov
dec
outsb
dec
repz
gs
cmp
push
in
mov
cmp
je
cmp
cmp
mov
xchg
and
push
push
dec
das
dec
call
aam
ds
add
jo
leave
sub
test
sbb
mov
mov
lock
adc
test
adc
add
or
faddp
daa
push
cli
sub
push
dec
dec
nop
fldcw
mov
dec
test
jb
mov
fsts
xchg
push
pop
ss
sbb
dec
mov
adc
popf
mov
xor
mov
or
and
dec
adc
mov
sub
jecxz
mov
iret
ljmp
mov
jns
dec
cli
mov
jmp
imul
dec
ds
add
adc
or
or
push
into
or
repnz
jmp
inc
adc
inc
mov
repnz
sbb
cwtl
xor
and
or
fwait
adc
xchg
dec
bound
pushf
push
sbb
mov
xchg
inc
call
add
mov
lea
in
stos
call
inc
pop
jne
inc
xchg
bound
adc
test
or
in
cmp
ret
xchg
jo
test
pop
sbb
xchg
ret
rorl
jmp
rorl
ja
push
inc
mov
movb
inc
mov
and
jp
pop
push
cmp
push
sbb
repnz
dec
and
add
add
jmp
adc
fbld
fildll
andl
adc
inc
mov
pop
testb
mov
xchg
hlt
mov
sbb
xor
pop
imul
sub
sub
lods
aad
sbb
add
cmp
mov
jnp
and
or
inc
test
push
cmp
adc
inc
loope
sbb
dec
pop
repnz
xor
and
movsb
push
pop
xor
ljmp
or
jmp
xor
sub
and
push
mov
dec
divl
testl
mov
or
mov
dec
repnz
cmpsb
and
cmp
popa
or
push
push
cmp
clc
mov
pop
imulb
mov
iret
push
stos
add
jmp
popa
mov
mov
ds
in
add
pop
pop
mov
sub
and
cmp
xor
xor
pop
and
and
mov
or
sbbb
add
mov
or
jmp
loop
loop
pop
notb
mov
or
or
cs
ljmp
das
mov
sbb
xchg
push
mov
cmp
mov
jge
mov
xchg
inc
add
andl
pop
lea
rorl
sbb
inc
and
push
sarl
test
jl
xchg
push
mov
push
cld
add
jle
icebp
add
cwtl
mov
jg
or
jne
movsl
cmpsb
jo
fs
rol
in
xchg
jae
out
inc
or
dec
lret
inc
inc
aad
ljmp
mov
pop
cmp
decl
test
inc
add
mov
pop
jmp
or
dec
lret
leave
mov
xlat
jae
cmp
pop
push
les
and
xchg
roll
dec
daa
mov
or
jnp
std
mov
sti
add
cmpsb
mov
jge
test
jb
adc
jl
or
in
pop
xchg
aam
int
mov
mov
psubb
mov
add
jg
mov
push
es
xor
or
cmp
or
cmp
add
or
mov
jl
add
pop
fldt
sbb
ds
push
in
sbb
push
adc
ret
adc
popl
push
and
push
or
or
jle
sbb
fnstsw
movsb
je
add
daa
mov
and
cmpsl
mov
xor
imul
ret
int3
mov
pop
pushf
cli
pop
and
das
xor
clc
pop
jl
testl
in
adc
pop
jae
jnp
movsb
ret
lea
jbe
inc
jl
sub
test
test
xchg
js
dec
push
push
call
add
cmp
or
inc
int
or
call
jnp
sbb
xor
jmp
mov
fwait
lret
sbbb
mov
sub
push
sub
inc
sbb
or
and
push
cmp
roll
sub
cmp
jl
and
jg
mov
dec
mov
mov
popf
gs
sti
jecxz
aaa
movsb
int
push
mov
mov
cmp
pop
fimuls
inc
cmp
pop
push
or
add
push
xchg
sbb
fldz
add
mov
jecxz
mov
rcrb
sub
lea
jmp
sbb
das
dec
mov
jns
mov
pop
ret
jbe
xchg
sbb
aaa
lret
inc
and
push
jmp
into
hlt
dec
adc
pop
push
or
mov
jbe
or
jge
jmp
aam
pop
and
push
testl
sub
jmp
ficoml
xor
jle
pop
hlt
lahf
sahf
in
inc
mov
sub
or
and
add
mov
add
dec
or
lret
sbb
adc
das
jge
adc
adc
xchg
push
adc
in
cmp
push
pop
xchg
or
mov
and
mov
push
mov
leave
xor
cmp
jge
sqrtps
push
or
stc
push
pop
in
and
es
mov
jmp
rclb
test
pop
movsb
shlb
fidivrl
mov
sbb
lcall
dec
adc
sahf
add
jo
and
xor
cwtl
push
jl
pop
ja
pop
pop
hlt
cs
je
jmp
repnz
pop
xchg
mov
data16
cmpsb
jo
popf
adc
push
mov
add
andl
mov
push
sub
mov
or
or
pop
test
movsb
stos
inc
in
je
cmp
fcmove
fcmovb
xchg
test
imulb
sbb
pop
xchg
sbb
mov
add
data16
cwtl
cmp
fcomps
dec
loope
insl
movsl
sti
xor
dec
mov
jle
sub
sub
jl
or
scas
or
and
push
mov
inc
sub
jb
cmp
xchg
xchg
insb
mov
ds
aas
cmc
jmp
inc
lock
lret
mov
push
ret
mov
pop
adc
frstor
daa
pop
xchg
stc
inc
jae
adc
shld
xor
loopne
sarb
cmp
or
add
adc
mov
fidivl
ret
add
cs
lcall
dec
inc
lcall
adc
mov
neg
pop
xorl
pop
xor
repnz
ret
adc
mov
xchg
fisubs
and
notl
fucomip
ret
pop
popf
sub
popf
cwtl
popa
js
xchg
sbb
push
pop
lcall
out
push
clc
fs
xorb
or
sbb
push
jecxz
and
sbb
inc
repz
add
inc
dec
dec
or
push
fstpl
xchg
mov
lret
inc
jmp
nop
cmp
sbb
lea
sub
inc
and
aaa
inc
stc
movsb
xor
scas
add
push
dec
fwait
dec
test
sub
cmc
out
iret
dec
or
xchg
push
xchg
subb
xchg
loopne
pusha
lcall
adc
loopne
or
gs
stc
or
push
sub
mov
aad
xor
bnd
or
jae
lock
push
pop
test
icebp
lock
popa
mov
mov
inc
jle
and
adc
inc
int
cmp
mov
mov
inc
sub
inc
adc
pop
jmp
shl
mov
imulb
sti
lds
test
jae
popf
popf
pop
mov
ss
and
adc
ds
shrb
jb
push
push
jmp
or
stos
add
addb
and
xor
pop
addr16
jmp
or
loop
push
pop
pop
leave
aas
inc
adc
jne
mov
pop
lods
sub
nop
hlt
dec
jae
push
or
adc
cmp
xor
mov
pop
xchg
loop
daa
add
ret
aas
and
xchg
jns
loop
pop
aas
and
pop
je
push
cld
aad
movsb
xor
pop
dec
push
shlb
adc
test
pop
push
cli
jo
call
in
bnd
bound
pop
sbb
movzwl
adc
test
cmp
or
jae
push
push
rorl
and
sub
daa
push
adc
sbb
testl
or
xchg
pop
bound
int3
je
lret
or
fdiv
sahf
xor
mov
xchg
inc
jmp
jecxz
dec
or
xchg
shll
pop
xchg
popl
and
mov
jg
mov
lret
call
sbb
mov
shlb
clc
dec
aaa
enter
cs
inc
add
dec
adc
and
xchg
mov
pop
test
je
ret
mov
aad
and
pop
in
aas
or
push
adc
jmp
call
lods
popf
sub
adc
lret
or
pop
call
arpl
add
ffreep
dec
insb
repnz
rolb
sti
and
lock
daa
jne
jo
pusha
and
push
mov
std
jns
stos
jmp
in
inc
mov
jo
stos
mov
fisubrs
jns
push
cmpsl
sub
stc
dec
pop
icebp
add
dec
repnz
or
ja
mov
int
sub
decb
loopne
add
dec
js
ficoms
cmp
daa
outsb
loope
cmp
fsts
jne
dec
xorl
pushf
outsb
adc
mov
add
push
push
xlat
lds
jne
pop
mov
inc
jae
or
aad
mov
push
in
fcompl
out
dec
pop
dec
fistps
jl
movsb
addr16
or
adc
dec
and
daa
xor
insl
loopne
movsb
stc
aaa
push
pop
mov
and
pop
in
loop
orb
or
jnp
loopne
pop
cmc
or
inc
xor
cmp
or
sub
mov
adc
or
mov
stc
or
icebp
jo
or
pop
in
loopne
lock
sub
negl
iret
clc
mov
lock
dec
or
sub
or
jbe
aam
lock
aam
lock
jbe
int3
test
lods
xchg
or
mov
adc
sub
xchg
loopne
mov
cmp
or
or
and
push
mov
leave
adc
lock
cld
mov
adc
shlb
invd
pop
adc
push
pop
call
pop
rcr
insl
jmp
inc
add
push
flds
inc
sti
imul
rclb
push
pop
je
mov
loop
arpl
or
mov
pop
iret
leave
add
mov
shlb
and
mov
pop
cli
outsl
or
adc
mov
jne
or
lds
ret
loopne
cmp
mov
lea
pop
or
adc
mov
sub
xchg
pop
dec
mov
jl
adc
add
and
cmc
and
and
mov
lret
sbb
mov
sbb
clc
or
outsb
or
je
lea
imul
dec
push
adc
or
mov
xor
inc
xor
pop
cmp
bound
std
inc
pop
sub
and
aas
shl
add
test
jne
inc
cli
adc
jge
push
cld
xor
xchg
push
cmp
jl
movsl
mov
jmp
push
and
pop
dec
test
lea
cs
pop
push
movsb
pop
shr
jp
aaa
call
push
or
js
cmp
add
imul
push
jp
inc
lret
inc
mov
cli
or
add
ret
sub
mov
enter
pop
xor
push
rclb
pop
mov
or
hlt
movb
pop
insb
imulb
push
push
cmovge
cmp
mov
dec
and
pop
rcll
sbb
rep
test
testb
push
cmp
add
sbb
jmp
mov
es
stos
and
out
or
pop
cld
repz
jmp
iret
jmp
cmp
daa
aam
cs
mov
into
push
aaa
call
mov
mov
and
xor
cwtl
hlt
push
jbe
jne
invd
pop
shl
cmp
jl
push
ret
mov
ret
in
jg
sub
add
sub
sbb
ljmp
jp
mov
mov
mov
das
and
jmp
aas
push
sbb
shl
popa
pop
sar
repnz
clc
ds
stc
std
out
popa
add
ljmp
clc
sub
pop
pop
add
adc
pop
outsl
cwtl
shrb
and
ffree
call
inc
mov
enter
dec
ret
xchg
aas
add
cmp
fdivrs
sub
push
lock
adc
sub
dec
dec
xchg
inc
and
sbb
push
stc
cmp
sub
mov
or
dec
jae
scas
daa
cmp
add
add
pop
and
jg
adc
out
adc
cmp
inc
xchg
push
inc
pop
imull
pop
xor
icebp
sub
rorb
inc
lods
or
mov
sbbl
jne
mov
xchg
mov
pop
mov
mov
enter
cltd
in
cmpsl
add
insl
jo
mov
sbb
pop
and
repnz
leave
sub
pop
ret
cmp
dec
mov
clts
xor
pop
je
push
xor
iret
mov
jo
mov
pop
mov
mov
jmp
arpl
adc
cmp
fs
and
cmc
sbb
xor
incl
add
adc
jmp
xchg
mov
je
adc
add
pop
repnz
pop
rcrl
mov
xchg
incl
cmp
mov
inc
xchg
nop
or
mov
xchg
or
in
pushf
cltd
or
sbb
fnstsw
sahf
fs
jp
or
mov
dec
and
icebp
or
iret
sub
adc
fnstcw
in
sub
jnp
iret
aad
lahf
je
xchg
inc
dec
xchg
mov
es
jno
sbb
sub
shll
xor
dec
dec
add
pop
pop
cwtl
mov
scas
adc
enter
ret
xchg
loop
push
jle
lret
into
pop
add
sbb
shr
or
or
or
xchg
lret
jmp
lcall
or
pop
dec
push
dec
lea
inc
and
call
sub
call
add
les
and
mov
mov
inc
or
adc
enter
jns
imul
push
xchg
add
test
push
mov
sarb
sub
add
loopne
sub
jl
imul
cmp
adc
inc
inc
push
pushl
push
cmp
lea
sub
push
sub
mov
inc
mov
xlat
sub
mov
rorb
push
push
mov
mov
xchg
mov
je
adc
insb
pop
add
andb
xchg
or
adc
xchg
pop
jo
jo
inc
xlat
mov
adc
adc
call
jo
sub
jecxz
lock
in
push
push
mov
adc
jmp
mov
pop
leave
jle
jmp
or
mov
push
mov
jns
lods
les
fidivrl
dec
cs
fildll
inc
das
pop
push
hlt
push
bound
leave
lahf
jle
adc
mov
cmp
jl
sarb
add
dec
jne
adc
xchg
inc
adc
add
das
nop
sub
sbb
xchg
std
les
inc
push
sub
xchg
inc
je
cltd
mov
and
mov
or
and
call
loop
jo
push
dec
dec
les
push
fstps
inc
adc
add
adc
inc
movsb
pop
sub
pusha
dec
or
push
data16
pop
push
dec
or
dec
mov
adc
adc
push
push
jmp
adc
sub
mov
scas
test
adc
push
pusha
pop
add
xor
in
adc
or
jne
and
repnz
sbb
das
js
push
push
dec
mov
push
aaa
and
fnsave
mov
mov
jnp
push
jle
adc
push
or
mov
outsl
mov
pusha
dec
sbb
sarb
push
aas
lret
lods
cmp
or
lret
ret
push
add
adc
test
jg
add
out
adc
push
add
jnp
push
push
cs
es
cmp
jne
xor
add
andb
shrl
xlat
dec
movups
mov
push
adc
mov
dec
mov
andl
mov
mov
repz
or
xchg
les
sarl
insl
mov
sar
stc
sbb
test
pop
cltd
imul
popf
mov
sarl
sbb
push
inc
mov
sub
jle
cmc
sub
dec
stc
sub
or
and
xor
sbb
nop
fisttpl
mov
enter
cmp
jle
sub
pop
push
sbb
rorl
jg
add
jge
ret
sub
inc
and
sub
mov
mov
sub
mov
std
mov
xor
sub
add
andb
jo
cmp
dec
or
dec
in
sub
and
stos
adc
inc
out
xchg
subb
popf
pop
add
movzbl
pop
dec
sub
add
shrb
sbbb
inc
inc
lahf
push
dec
and
cmp
mov
mov
pop
inc
inc
daa
inc
pop
dec
mov
pop
imul
in
shrb
sub
daa
adc
pusha
sub
sbb
fs
inc
or
mov
std
shrb
movsl
push
mov
mov
push
mov
pushl
sub
and
jmp
fnstsw
pop
or
pop
inc
loopne
loopne
push
mov
ja
movl
pop
xor
ljmp
inc
sbb
or
push
jle
jne
repnz
imul
std
mov
adc
inc
and
out
fistpll
jb
sbb
negb
daa
jmp
mov
push
pop
mov
in
mov
cmc
ret
loope
pop
cmp
mov
testb
or
dec
mov
ljmp
pop
and
xor
inc
scas
mov
loope
out
daa
mov
or
scas
adcl
sahf
popa
xchg
or
add
testb
rolb
and
or
lahf
adc
leave
sub
inc
jo
xlat
add
out
std
mov
stos
lock
adc
jne
nop
or
popa
cmp
jge
insl
push
push
sub
push
in
sub
or
divb
dec
test
sub
adc
dec
xchg
lods
sub
inc
jge
pop
mov
repz
les
inc
dec
sub
or
adc
imul
or
aam
or
or
aam
loop
jne
test
xor
adc
xchg
xorb
pop
mov
ja
inc
cld
jl
sar
aaa
leave
sub
dec
mov
adc
pushl
adc
add
ficomps
sbb
pop
loope
push
insl
sbb
xor
js
fmul
add
xchg
js
add
shr
or
stc
dec
jo
xlat
jo
add
ljmp
test
jae
push
jle
lret
pop
repnz
or
cmp
sbb
into
mov
sbb
ljmp
pop
cld
test
xchg
cs
xor
xchg
and
inc
orb
push
or
push
mov
and
repz
movsl
pop
cld
or
ja
lds
or
cmc
cmp
mov
bndldx
sbb
cmp
ret
sbb
enter
lods
adc
cli
dec
jae
add
inc
inc
test
sahf
mov
scas
iret
loope
rcrb
cmpl
add
sarl
adc
stc
loop
fsubp
fstpl
orb
cmpsb
in
sti
and
adc
clc
jo
rcrb
inc
call
fs
fmull
loopne
aam
rolb
clc
sub
in
and
aad
pop
aas
dec
add
inc
jmp
push
push
pop
mov
add
or
xchg
out
repnz
rorl
xor
or
jg
pusha
mov
xor
push
xor
aad
xlat
iret
push
add
loop
pop
sub
sbb
mov
or
fcoms
cmpsl
mov
sahf
rcrb
add
dec
dec
push
ss
and
mov
or
jmp
mov
jle
or
push
jns
push
push
jle
lock
push
dec
pop
mov
lret
xor
jmp
cmp
js
nop
enter
mov
or
push
push
sahf
ret
roll
sbb
add
jmp
fimuls
dec
stos
sub
mov
or
inc
inc
pop
mov
fdivl
jne
lcall
mov
insl
mov
add
dec
and
aam
or
jmp
dec
in
or
outsb
cmpsb
or
jmp
push
lea
adc
daa
enter
or
mov
xor
gs
xchg
int
dec
xor
addr16
xor
or
jl
xchg
jg
push
pop
dec
inc
or
jmp
int
and
je
mov
insl
mov
rcrb
stos
inc
cmpsb
pop
pop
push
das
or
or
mov
mov
dec
ffreep
push
or
imulb
jge
sbb
fnstenv
mov
rolb
jg
ret
mov
mov
popf
dec
dec
cmp
sub
sbb
gs
add
cmpsl
adc
push
pop
cmp
test
add
jl
neg
pop
cld
loopne
hlt
dec
cmpsl
and
std
adc
adc
sub
daa
imulb
insb
aaa
repnz
adc
mov
ja
rolb
xor
cli
cmc
mov
fsubrs
adc
mov
enter
fdivrl
adc
cmp
mov
push
dec
mov
sahf
push
push
jb
aam
gs
xor
push
dec
or
imul
add
pop
cmp
jne
adc
aaa
mov
jge
call
out
xchg
ret
lret
jmp
jb
rcrb
or
xchg
add
adc
movsl
pop
mov
or
jae
pop
pop
mov
xchg
in
je
adc
cmp
and
dec
loopne
push
push
adc
cmp
and
insb
int3
dec
inc
xlat
mov
enter
daa
inc
jp
mov
push
mov
and
or
mov
adc
and
dec
jmp
inc
in
in
mov
sti
sub
xchg
jnp
xchg
shrb
sub
mov
or
cwtl
shlb
js
pop
sbb
in
clc
andl
inc
sbb
and
add
add
jmp
cmpw
cs
mov
movq
lret
sub
sti
push
cltd
inc
xchg
xorl
dec
sub
or
and
push
and
jo
int
lea
add
jnp
push
leave
push
addl
add
sbb
adc
jns
out
or
lahf
lea
and
push
cli
imul
jge
shll
rorl
cmp
dec
cmp
adc
add
jge
aas
jb
and
in
sbb
inc
notb
add
xor
insl
add
movq
jmp
adc
icebp
adc
pop
inc
xchg
andl
jp
mov
das
sbb
fsubrl
leave
inc
xchg
nop
lret
pop
jne
push
nop
add
neg
and
or
xchg
ss
mov
add
cli
adc
jne
out
adc
lds
or
or
mov
sti
imul
inc
add
or
mov
jne
mov
jmp
cwtl
cmp
add
cmp
jb
psrld
and
icebp
push
sub
pushl
ret
sub
mov
add
andb
loop
cltd
popa
or
xor
repnz
pop
dec
flds
and
andb
enter
mov
jns
push
mov
gs
sbb
mov
sbb
pop
call
pop
jne
movsb
push
les
je
sti
push
jo
mov
pop
notb
outsl
jmp
fists
sbb
pop
and
jne
ja
dec
cmp
roll
xchg
add
cmp
mov
popa
jae
pop
out
popf
push
push
sbb
cmpl
xchg
enter
or
cmp
loope
or
push
cs
std
adc
leave
lret
rorl
flds
push
out
sub
jmp
or
mov
repnz
les
jle
sub
mov
dec
in
es
add
stc
mov
clc
and
inc
lret
cmpl
or
or
sbbl
jg
or
cmp
mov
cmpsb
jmp
cmp
jne
mov
jg
les
jecxz
adc
inc
scas
sbb
or
and
pop
and
push
cmp
adc
add
aas
jecxz
jbe
push
jmp
mov
adc
sarb
jle
mov
add
or
daa
fsubr
pop
mov
adc
cmp
pop
adc
xor
xlat
cwtl
push
push
lcall
cmp
dec
add
push
add
push
call
cld
adc
or
adcl
and
cmpb
fcoml
scas
adc
rcrl
adc
loop
mov
push
push
jae
push
or
add
mov
sahf
jl
sub
inc
push
mov
cmp
leave
dec
in
pop
xchg
dec
cmp
ja
mov
repnz
filds
xor
inc
fdivp
gs
xchg
imul
sbb
out
mov
lods
mov
jnp
push
jmp
sbb
adc
mov
fimuls
sbb
sti
movsl
or
ret
add
push
adc
dec
add
or
jmp
ss
adc
call
pop
lcall
andl
push
or
mov
fstl
jmp
cmp
push
je
jge
push
jl
imul
xlat
scas
notl
sub
and
into
andl
add
mov
lret
pop
shlb
pop
lea
ret
pop
or
imulb
add
in
data16
insl
enter
pop
jl
push
jae
inc
pop
mov
fs
inc
push
dec
fcompl
pop
enter
sbb
outsb
mov
aaa
sub
mov
push
mov
aas
je
cmpsl
sbb
sbb
add
call
mov
inc
xor
ds
neg
jge
and
call
mov
je
mov
jne
push
push
movsl
fdivl
dec
cmc
mov
cld
xor
mov
jne
inc
push
mov
cmp
outsb
mov
or
cmp
dec
inc
inc
sahf
mov
orb
jecxz
lods
mov
adc
repz
push
jle
pop
pop
in
adc
cmp
sub
lcall
and
sbb
dec
or
push
stos
push
out
arpl
fidivs
sbb
je
cmpsl
sbb
jns
pop
push
das
cmp
sar
push
and
add
jg
lea
mov
scas
shll
bnd
and
lret
int3
je
mov
repz
xchg
bound
enter
cli
lret
lods
inc
mov
add
movsl
xchg
mov
in
bound
pop
jbe
xor
pop
push
xor
test
cli
sub
ret
sbbb
test
cli
ds
and
inc
fisttpl
stos
push
pushf
mov
jnp
pop
add
mov
xor
jns
fs
and
jp
loopne
das
popa
fdivs
in
dec
pop
sub
jle
rorl
cmc
xor
je
sub
cmpsb
jno
push
jnp,pn
fsubs
inc
jno
inc
mov
std
push
jle
lock
popa
lods
or
mov
or
repz
add
ret
jmp
ljmp
cmp
sbb
ds
sbb
es
les
out
add
sete
icebp
add
xchg
outsb
push
sub
sbb
cs
push
mov
in
sbb
adc
adc
jno
cmp
xor
lret
push
popa
push
sub
cmp
push
cmp
jne
sbb
cmp
sbb
push
sahf
enter
jl
cmpl
dec
add
pushl
lea
mov
sti
adcl
jmp
test
pop
push
and
xchg
std
cwtl
or
pop
xor
loope
lea
cwtl
insb
jbe
fisubrs
les
sub
div
lods
pop
push
push
or
andl
mov
xchg
pop
je
outsl
mov
push
je
pop
xor
aaa
out
out
enter
pop
rcrb
call
lcall
outsb
iret
xor
test
arpl
xor
push
gs
push
mov
add
cmp
xchg
inc
pop
sbb
das
xlat
mov
sub
ja
xlat
ret
dec
adc
sub
and
pop
ret
dec
sbb
or
add
notb
testb
push
sahf
ljmp
adc
push
add
pushf
dec
sbb
clc
pop
stc
jmp
mov
sub
push
and
jne
fwait
lahf
sub
inc
pusha
mov
int3
mov
adc
mov
nop
cwtl
imull
lods
rorl
mov
or
cmp
ds
into
and
shrb
adc
inc
imul
pushl
dec
ret
mov
mov
idivb
push
scas
je
scas
xor
and
clc
ljmp
pop
call
pop
ja
or
ljmp
pop
and
inc
loope
shlb
repz
dec
push
aaa
popf
cmp
inc
into
jmp
clc
push
xchg
pop
mov
push
cmp
or
add
cmpsb
sub
sbb
pop
inc
xacquire
pop
lea
and
pusha
enter
rcrl
pop
mov
mov
test
ror
sub
adc
dec
insl
jmp
jae
addl
fidivs
push
data16
pop
push
sub
xor
ljmp
cltd
add
sub
or
out
xor
loopne
cmp
jecxz
and
jo
test
dec
stos
xor
push
int3
cmp
add
jo
nop
jne
les
inc
inc
and
icebp
xchg
or
and
jmp
push
jg
push
add
cld
mov
in
jmp
in
or
fcomi
cld
jne
or
push
loopne
pop
and
or
and
push
lds
aam
mov
xchg
pop
stos
out
jno
idivb
add
je
push
push
xchg
push
sub
dec
mov
int
adc
push
mov
sti
sub
and
or
xchg
and
sub
ljmp
add
repnz
hlt
cmpsl
sbb
andnps
inc
or
push
packssdw
push
movsb
pop
rorl
jne
mov
xor
or
adc
leave
push
jmp
out
xor
cld
or
rolb
push
jmp
push
mov
mov
cmp
sub
or
cmpsb
mov
pop
les
or
pop
sbb
push
loopne
and
xchg
push
pop
mov
mov
iret
mov
adc
mov
push
adc
dec
or
loopne
pop
sahf
sarl
data16
test
ds
inc
aam
adc
xchg
inc
dec
lret
movsl
imul
pop
lea
pop
pop
and
repnz
add
push
enter
in
add
or
xor
inc
mov
and
or
inc
fcom
jmp
adc
je
sbb
rcll
adc
test
addr16
into
sbb
xchg
add
pusha
or
add
pusha
or
add
pusha
or
add
add
add
add
pusha
or
add
pusha
or
add
pusha
or
add
add
pusha
or
add
pusha
or
add
or
addb
add
add
add
or
add
push
dec
inc
dec
xor
cs
dec
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
je
jb
arpl
fs
jae
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
push
inc
push
xor
cs
insb
add
jne
push
imul
inc
inc
push
inc
push
dec
xor
cs
insb
add
addr16
jo
outsb
dec
gs
add
xor
xor
fs
insb
add
adc
add
xor
add
push
add
add
add
in
repnz
adc
add
adc
add
hlt
incl
add
add
or
add
add
add
add
add
incl
pusha
or
add
add
pop
movb
mov
lea
push
pop
add
lods
dec
jne
mov
movb
mov
mov
push
push
pushl
push
call
mov
add
mov
jmp
add
pusha
push
push
push
call
mov
popa
pusha
sub
mov
mov
lea
xor
push
pop
jmp
mov
and
cmp
je
mov
and
cmp
jne
inc
mov
sub
xor
mov
mov
inc
shr
jne
push
inc
mov
sub
sub
mov
cmp
ja
mov
shl
mov
shl
xor
lea
mov
inc
shr
je
add
mov
shr
setae
dec
mov
pop
inc
cmp
jl
popa
push
shr
rep
pop
add
mov
test
jne
push
push
push
call
mov
jmp
add
push
call
mov
add
jmp
btr
jb
add
inc
inc
push
push
push
call
stos
pop
mov
test
jne
add
lods
test
jne
popa
jmp
pop
pop
pop
pop
push
push
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
sub
mov
ret
